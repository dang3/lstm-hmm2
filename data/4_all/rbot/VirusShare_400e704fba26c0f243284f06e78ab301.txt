mov
push
sbb
imull
xchg
sub
adc
std
test
jg
stos
ret
inc
cs
iret
push
xchg
pushf
jmp
mov
lret
pusha
out
or
add
mov
andl
cltd
mov
jbe
lahf
cmp
xchg
jne
lods
pop
rcll
nop
imul
lods
jo
cmpsb
sahf
popa
cwtl
stos
gs
stos
call
add
xor
arpl
fnsave
cmpsb
inc
notb
jle
cltd
jo
adc
lds
testl
and
fiadds
sbb
es
xor
ss
out
stos
jnp
js
hlt
mov
and
adc
je
inc
cmpsl
xchg
push
pop
push
mov
insl
out
mov
jns
xor
sbb
sub
push
sub
push
repz
aad
sbb
popa
daa
mov
lret
das
nop
into
dec
cmp
cmp
sbb
inc
scas
inc
add
jae
shlb
dec
sti
es
sub
ljmp
fiadds
ret
or
push
je
lret
xchg
idivb
js
ja
cwtl
scas
stc
sbb
inc
outsl
arpl
mov
sahf
jg
or
or
popf
push
add
lahf
mov
xor
push
mov
push
dec
jg
idivl
ficompl
call
das
ds
repnz
adc
cmp
test
mov
inc
dec
mov
mov
lret
adc
loopne
test
add
out
cs
mov
add
jb
pop
push
mov
ret
pushf
jle
or
cli
femms
dec
adc
fwait
scas
or
leave
pop
leave
jecxz
into
in
mov
inc
insb
test
fidivrs
cmp
xchg
mov
imul
cmp
push
iret
gs
push
push
adc
psrlw
out
lock
sub
jmp
jl
in
sub
test
hlt
mov
loopne
and
xor
adcl
xor
mov
std
jo
cld
cmp
pushf
push
sbb
xchg
cmc
mov
sahf
lret
cmpsb
xchg
insl
fmul
cmp
mov
mov
ss
cmp
dec
cmp
movsl
xchg
push
aad
sbb
pusha
cmp
push
inc
into
jg
fisubl
push
mov
lock
divl
inc
and
and
push
stc
and
xor
sub
and
and
ljmp
sub
ficomps
lahf
loopne
xchg
popl
ret
pusha
in
lret
xchg
imul
lret
dec
iret
or
das
pop
adc
pusha
dec
xor
xchg
pop
push
xchg
jne
xchg
loop
les
mov
ret
enter
and
das
hlt
stos
mov
add
and
sub
in
imul
aam
frstor
fbld
inc
cmp
push
jle
lods
and
xor
adc
push
aad
push
sub
int3
insl
sbb
pop
lea
add
fsubrl
and
ret
das
push
into
std
fs
cld
pop
mov
xor
adc
lods
pop
cltd
and
xchg
mov
sub
dec
push
xorb
push
mov
pop
sahf
cmp
cltd
cltd
add
test
push
inc
ret
sbb
lret
mov
push
pushf
fldt
insb
push
xchg
stos
pop
pusha
dec
popf
sub
popf
push
and
xchg
fdivs
int3
iret
into
and
cld
add
je
push
fwait
ret
lcall
mov
push
lahf
xchg
cmp
loope
mov
jo
mov
jae
adc
or
xchg
mov
add
mov
repnz
ret
xchg
mov
insl
sbb
xor
aas
pop
inc
pop
sub
adc
pop
das
cld
sub
lods
cmpsb
xchg
push
adc
cmp
dec
sub
int
aad
cmp
into
dec
mov
jno
imul
icebp
dec
mov
lock
out
or
xchg
jge
xchg
leave
jl
clc
jns
imul
repnz
rep
jb
stos
adc
and
outsl
mov
push
fadds
adc
jg
mov
inc
popf
lods
add
pushf
scas
dec
cs
lahf
gs
jmp
adc
loop
pop
mull
xchg
mov
out
cli
call
fdivrl
xlat
jp
inc
push
sahf
jg
int
shll
push
int3
mov
dec
cmp
and
and
ljmp
fdivrl
and
in
jecxz
movsl
pushf
jecxz
cmc
rcrl
mov
loop
jb
pop
xchg
in
lahf
out
icebp
ss
adc
popf
ret
fld
mov
cmp
mov
pop
xor
xor
hlt
sub
add
getsec
cmp
or
cltd
inc
fdivr
stos
scas
cmpb
mov
fbstp
fistpll
inc
shlb
stc
lods
mov
pop
mov
fwait
and
inc
add
enter
sbb
cwtl
pop
mov
xchg
mov
pop
jge
push
fstps
fsubs
aad
arpl
sbb
out
cmp
mov
mov
push
pop
dec
or
addr16
xor
xlat
adc
subb
mov
pop
imul
adc
inc
push
addr16
sahf
jp
aas
sub
pop
cli
insl
push
loop
sub
mov
pop
test
jp
mov
sbb
ds
mov
inc
jge
adc
mov
js
cmp
and
out
jle
sub
mov
xchg
pop
shlb
incb
mov
pop
pushf
popa
leave
mov
das
xchg
mov
iret
inc
out
sti
jne
mov
jno
mull
sti
ffree
sti
add
sti
cli
orl
cmp
pop
xor
sub
sub
pop
cmp
sti
js
mov
ljmp
jns
pop
sub
sarb
mov
aad
mov
std
ja
dec
mov
xor
rolb
dec
cmp
fs
add
mov
es
js
loope
sahf
sub
mov
shrl
mov
jo
lret
lret
xor
insb
movsb
jne
adc
ret
xchg
mov
xor
or
sbb
ficoml
push
push
lea
push
push
push
push
stc
push
pop
test
cld
cmc
mov
clc
jl
sub
xor
ror
clc
nop
test
push
jge
jge
push
push
pop
pop
pop
push
test
pop
xor
test
push
jns
push
add
pop
nop
jmp
jmp
call
jge
nop
stc
stc
cmc
clc
mov
add
and
add
jb
js
or
xor
and
push
inc
pop
and
push
add
mov
pop
cld
clc
cld
push
pop
js
ror
jns
push
sub
pop
jp
or
xchg
xchg
push
push
shl
pop
pop
push
and
pop
cmc
cmp
add
push
xor
pop
neg
neg
cmc
push
call
mov
mov
mov
rorb
sti
and
pop
ret
cmp
mov
lahf
call
jb
jg
jg
pop
pop
lea
mov
cld
push
and
pop
jne
cmp
sar
or
dec
inc
test
jne
jmp
jle
jle
push
add
pop
push
call
cli
dec
and
arpl
adc
int3
movsl
dec
test
in
mov
mov
mov
cs
les
push
mov
add
pop
shl
push
jp
sub
pop
or
js
test
push
and
pop
stc
push
call
fstpl
xchg
in
inc
mov
and
mov
dec
sbb
jo
les
xor
push
inc
pop
jbe
push
jge
shr
pop
loop
jecxz
outsl
push
sub
mov
rolb
jno
rol
rol
jb
shl
push
push
pop
pop
jmp
adc
jecxz
xorl
xor
lret
and
xor
jmp
pop
xchg
pop
fnop
push
call
add
fsubl
push
dec
xchg
test
sub
insb
outsl
sub
inc
push
cs
dec
ljmp
jle
jl
jno
rol
pop
pop
push
push
pop
add
pop
and
sub
jnp
push
add
pop
nop
xchg
dec
jne
loop
jecxz
mov
sub
sbb
out
pop
daa
out
add
dec
gs
pop
push
test
lret
or
xchg
lcall
xchg
sub
push
adc
push
xchg
inc
repz
adc
fsubr
xor
jmp
out
clc
loopne
add
sub
fiadds
inc
pushf
lea
rorl
lcall
mov
pop
inc
mov
add
push
test
mov
in
dec
jmp
and
cmpsb
cmp
xor
ja
add
mov
cmp
hlt
xor
test
push
movzbl
cmc
jl
jnp
test
and
push
test
pop
jl
push
push
add
pop
pop
ja
jbe
push
add
ja
push
dec
inc
pop
nop
clc
stc
and
jg
or
push
inc
pop
loop
pop
push
movzbl
stc
dec
inc
cld
loop
pop
sar
cmp
push
call
jl
adc
pop
dec
lahf
repz
push
adc
idivl
addl
outsl
pop
sub
xchg
sbb
xor
mov
xlat
int
sub
out
and
push
fs
xchg
pop
dec
cmc
mov
pop
popf
pop
xchg
int3
lea
push
repz
pop
jmp
loop
jecxz
mov
mov
insb
pop
jne
inc
inc
jno
mov
enter
test
inc
add
ret
mov
xor
cs
mov
mov
out
sbb
fstpl
pop
cmp
or
xor
jne
cmpsb
sub
jae
cmc
lcall
and
incb
lcall
push
jns
addr16
addr16
lock
lret
cli
and
xor
sbbl
imul
sbb
jecxz
cmp
jp
mov
xchg
in
jne
outsl
lret
mov
cmp
repnz
mov
mov
loop
daa
jae
std
inc
mov
stos
lret
pop
mov
and
dec
or
inc
cmp
cld
inc
fnsave
sub
lock
mov
mov
mov
leave
mov
dec
mov
xor
mov
sub
pushf
and
dec
fs
shl
xchg
les
cmp
sub
adc
and
fisttpl
pop
popa
push
mov
sti
in
loop
gs
mov
push
stos
les
jg
lds
xor
test
xchg
add
push
push
xor
dec
mov
mov
dec
icebp
aad
jae
and
xchg
adc
scas
xchg
inc
cmp
movsl
sub
mov
lcall
stos
xchg
popf
add
adc
leave
xchg
aam
jg
lahf
sub
pop
aam
pop
jp
fstps
push
cli
cld
add
dec
sarb
inc
mov
lock
cs
jno
cmc
cmpsb
add
mov
inc
mov
stos
mov
xor
in
mov
insl
mov
cmpsb
pop
sbb
push
push
xchg
push
repnz
sbb
mov
xchg
es
pop
jmp
aad
push
add
push
clc
in
movntq
out
mov
jb
iret
clc
add
mov
push
xor
mov
add
push
lods
aam
pusha
pop
fadds
arpl
push
inc
sbb
xchg
lods
notl
test
mov
xlat
jnp
aam
push
shrb
inc
pop
mov
adc
xchg
das
mov
xchg
lods
arpl
fildll
push
test
lret
xor
ja
push
into
push
dec
cmp
daa
cmp
jne
xchg
imul
adc
sbb
outsb
or
ljmp
fcoms
out
cltd
lahf
adc
xor
cmp
test
push
lds
icebp
out
scas
fldenv
dec
lret
ss
add
mov
in
out
les
outsb
repnz
sub
idivb
or
fdiv
add
popa
fnstcw
inc
ljmp
inc
mov
mov
push
test
dec
out
mov
xchg
hlt
aas
push
jno
dec
sarb
int3
or
aam
je
nop
jbe
and
jmp
insb
fs
lcall
xchg
repz
inc
outsb
ret
movsl
popa
pop
inc
jge
call
gs
mov
sub
adc
cmc
insl
fwait
push
arpl
jle
lret
out
pop
sbb
xchg
cmpsl
inc
out
imul
fdivl
xchg
and
addr16
and
std
mov
arpl
xchg
mov
push
pop
cmp
jno
mov
mov
int3
shrd
rorb
ljmp
pop
dec
fisubl
and
xor
ja
sbbl
int3
out
pop
and
lods
pop
loopne
lea
js
xchg
aam
test
enter
push
mov
jle
enter
nop
xchg
mov
push
leave
sbb
and
aas
add
lea
out
jbe
pusha
pop
iret
aad
scas
call
inc
sub
xlat
pop
jno
sub
cmp
add
rolb
rclb
stos
push
in
imull
pop
pop
adc
mov
outsb
mov
pushf
mov
rorl
insb
insb
jecxz
sbb
orl
movsl
adc
inc
movsl
sbbl
pop
mov
and
mov
xorb
dec
jbe
mov
repz
xchg
cmc
push
dec
pop
dec
jle
call
nop
lea
mov
pushf
sbb
fwait
shrb
cli
bnd
sbb
inc
pop
jno
mov
jp
pop
out
jle
repz
mov
fiaddl
lea
cmpsb
mov
das
mov
sbb
fwait
mov
cmp
sbb
fldcw
mov
xchg
xor
test
shrl
lea
aad
sbb
xchg
mov
or
or
movsl
fidivrl
es
test
es
fs
and
cmp
sub
push
fdiv
or
xlat
rcrl
ds
lahf
adc
in
xlat
cmp
test
push
xor
sbbl
addr16
in
fdivl
push
sbb
aad
xor
ret
leave
je
push
es
xchg
mov
dec
adc
shlb
adc
lds
addr16
repz
xchg
push
dec
sub
test
imul
int
in
repnz
mov
dec
mov
clc
jle
out
cltd
shrl
adc
pop
fmuls
jbe
sbb
adc
notb
movsl
inc
jp
lds
push
sbb
daa
cmp
sbb
pusha
jnp
shlb
loope
mov
xlat
mov
jmp
outsb
xor
mov
fidivl
movsl
adc
xchg
inc
stos
ret
int
mov
loope
pushf
int
sahf
lods
loopne
inc
outsb
inc
jecxz
mov
and
lods
mov
adc
es
movb
inc
fsubrl
add
aam
xchg
in
jae
addb
add
xchg
adc
or
jno
adc
xchg
xor
cmp
xchg
aas
in
sub
sub
gs
lock
and
sbb
pop
or
cltd
mov
popa
leave
loope
cmp
xor
jno
fcoml
mov
pop
pop
ljmp
iret
cld
sub
imul
fdivr
scas
mov
icebp
std
rcll
hlt
push
xchg
cltd
cwtl
push
xor
mov
cmpb
inc
test
in
popl
daa
loopne
jbe
sbb
cmp
jmp
mov
pop
andb
leave
aaa
dec
mov
pop
sahf
jg
iret
xor
jge
mov
cmpb
add
iret
loopne
and
or
stos
sbb
cli
in
loopne
std
pop
jmp
adc
add
add
push
or
push
adc
push
inc
mov
fldt
js
ds
dec
or
sub
mov
shlb
lods
pop
add
pusha
shlb
enter
cmc
lcall
and
adc
mov
inc
mov
xor
pop
ret
sarb
push
gs
add
test
ret
mov
cltd
sub
mov
or
xor
xor
inc
add
jle
sub
cmp
filds
and
add
aaa
push
std
test
ljmp
xchg
adc
repnz
fwait
incl
mov
imul
cmp
in
pusha
push
rclb
out
pop
jmp
addr16
adc
or
xor
test
jbe
fsts
or
xchg
cmp
pop
xor
test
dec
pop
sub
push
std
out
dec
ret
and
lahf
mov
mov
test
jmp
xchg
mov
xchg
cmp
fwait
cmpsl
sub
mov
jle
push
out
pop
and
lcall
das
testb
insb
lods
movsb
push
inc
or
loopne
mov
add
cmpsl
mov
mov
insb
push
xchg
addr16
xor
cmpl
lods
in
jl
cmp
and
addr16
into
jb
aaa
pop
add
enter
pop
dec
cmp
or
fnstsw
setae
pusha
or
insl
or
push
fists
push
sub
adc
arpl
add
dec
pop
dec
bound
cmp
call
add
jno
xchg
push
loope
or
adc
shrb
sti
jmp
test
push
loop
mov
jl
adcb
adc
loopne
push
sub
and
leave
cltd
adc
stos
push
mov
dec
aad
js
cmp
ror
sub
in
dec
bound
xchg
pop
lods
inc
les
insb
inc
cmp
inc
inc
jae
mov
sub
call
jl
or
mov
sbb
insl
test
dec
mov
xorl
test
sbbb
dec
push
outsl
mov
cli
fstpt
jle
mov
gs
inc
push
or
mov
leave
push
in
cltd
xchg
inc
fdivl
lcall
mov
sub
sbb
andl
cs
arpl
dec
arpl
outsb
out
sti
lret
sbb
cmp
push
int3
adc
mov
jge
xor
xchg
aas
xor
pop
add
push
shrb
adc
ja
aam
inc
mov
cmpsl
je
inc
push
push
push
xor
jbe
pop
xchg
clc
inc
cmpsb
lea
cmp
adc
mov
scas
mov
aam
insl
mov
or
daa
scas
out
mov
jns
dec
mov
push
or
adc
mov
enter
mov
ss
jo
xor
insb
cld
jbe
mov
mov
fwait
stos
sbb
outsb
int
jmp
sbb
or
xchg
roll
xchg
cmpsb
iret
mov
and
cmpsb
leave
mov
ds
subl
add
test
gs
dec
sahf
adc
add
mov
call
and
xchg
stos
imul
cmpsl
fnstenv
fiaddl
dec
ja
add
rclb
scas
pop
les
aaa
mov
popf
stc
ljmp
sbb
push
les
fsubs
and
jge
push
add
mov
lods
aas
mov
xchg
xor
and
das
lret
cmp
into
cmp
lcall
fnsave
mov
aas
movsl
pop
loop
cmp
mov
pusha
loope
test
pop
pop
jbe
aas
mov
in
sub
leave
sbb
pop
ljmp
pop
jnp
pop
aas
mov
mov
je
dec
aam
clc
sub
fistl
pop
sarb
fwait
xor
mov
imul
cltd
push
adc
arpl
aad
jl
test
pop
shrl
movsl
dec
and
mov
cli
add
cwtl
mov
pop
inc
dec
mov
xchg
mov
adc
scas
shlb
loope
mov
pop
in
inc
sub
sbb
and
sub
mov
imul
ret
adc
loop
dec
adc
mov
out
cmpsl
jb
je
cmpsb
jae
test
movsl
add
cmp
lcall
cld
pop
sub
decb
leave
test
push
lods
add
xor
shlb
xchg
loopne
or
mov
es
imul
les
and
sbb
xchg
jmp
scas
icebp
push
add
and
cwtl
test
or
mov
dec
or
adcb
sbb
sub
sub
pop
mov
xchg
inc
repnz
pop
pop
cwtl
sahf
daa
fdiv
enter
das
movb
loop
lcall
mov
imul
test
fstpl
pop
outsb
adc
pushf
pusha
mov
pop
mov
stos
icebp
dec
dec
adc
add
push
jno
shll
sub
sti
daa
mov
push
addr16
notl
pop
pushaw
mov
sbbl
pop
inc
sbb
inc
je
movb
push
fwait
rorb
xchg
cmpsb
jmp
mov
rorl
jnp
mov
pop
xchg
repz
cld
dec
jb
add
mov
xchg
divl
sub
push
mov
sub
and
out
into
daa
jnp
imul
add
push
out
subb
popf
sbb
mov
lock
popa
insl
xchg
in
sbb
daa
cli
mov
adc
push
mov
xor
fistl
xor
fiadds
push
stos
adc
into
sbb
add
inc
push
fwait
inc
mov
dec
enter
testb
out
clc
dec
xchg
jmp
push
inc
cs
dec
xor
gs
mov
mov
jg
pop
pop
add
mov
jl
jl
cmpsl
das
mov
mulb
fsubrs
dec
mov
mov
mov
aas
shlb
xchg
pushf
lret
scas
ret
scas
push
jne
inc
or
loop
rcr
gs
and
xchg
sbb
test
outsl
push
movsl
mov
adc
inc
xchg
xor
arpl
push
mov
pop
push
add
cmp
aaa
inc
mov
add
cltd
addb
jp
inc
repz
jecxz
inc
aam
cmc
fs
fxch
push
arpl
bound
movsb
stos
xor
cmp
mov
imul
lcall
cli
sub
popa
sbb
sbb
xor
xchg
mov
sub
or
ret
cmp
cmc
sarl
sub
jb
test
pop
out
fdivs
mov
outsb
pop
jae
add
jmp
es
sbb
lret
and
sbb
sbb
addr16
dec
jle
xchg
jne
inc
jecxz
and
rol
data16
daa
push
ret
push
jg
testb
mov
in
insl
iret
or
push
andl
pushf
cltd
cld
jmp
addr16
cld
push
call
test
cmpsl
rcrb
ljmp
jge
mov
and
sub
cmp
adc
jmp
push
push
jecxz
cmp
sbb
pop
popa
icebp
pusha
inc
fimull
addr16
testl
lods
xchg
pop
or
pop
mov
pusha
shrb
js
and
xchg
lret
sti
sub
jnp
data16
add
movsl
rorb
push
jb
xorb
idivl
nop
dec
lods
or
insb
lcall
out
xrelease
ret
sbbl
stc
mov
jb
jno
sar
nop
inc
push
int
iret
mov
mov
mov
insl
push
mov
jg
out
cwtl
mov
movsl
pusha
dec
pop
sbb
fwait
dec
pop
lock
dec
cmp
or
popa
cmp
std
cli
int3
scas
test
sbb
pop
aad
cmp
mov
xorb
xchg
arpl
jne
jp
pop
das
ja
es
push
mov
clc
add
jb
lea
in
jge
sub
fidivs
ret
clc
and
cmp
mov
push
mov
push
sahf
outsb
pop
gs
addr16
scas
stc
add
pushf
stos
lods
mov
and
push
mov
test
negl
mov
xchg
inc
andb
neg
lods
ds
fildll
gs
int3
jo
shlb
mov
fnstcw
cmp
notb
sti
mov
push
or
jno
iret
jmp
adc
cmp
push
pop
loope
pop
xchg
rorl
shrl
or
push
out
sbb
cmc
dec
adc
gs
in
pop
add
sub
push
pushf
cmp
stos
mov
ss
into
cmc
notl
sub
jmp
lret
or
sbb
rcrl
xor
fs
mov
cld
xlat
push
ljmp
cmpsb
jle
in
jno
int3
inc
icebp
repnz
mov
dec
arpl
dec
pop
js
ss
xchg
fidivrl
ja
xchg
fwait
mov
cmp
rol
aam
inc
and
aas
dec
adc
fs
cld
cmp
lds
lods
xchg
nop
mov
inc
orb
pop
sbb
cmpsl
mov
mov
je
insl
icebp
in
add
mov
pushf
pop
pop
hlt
mov
out
lods
bound
negl
xor
mov
lods
lds
lea
ljmp
adc
push
mov
fidivrs
fidivs
notb
push
mulb
mov
cltd
je
push
adc
xor
in
push
mov
cli
xor
out
popf
jbe
addr16
iret
cmp
sti
push
push
sbbb
mov
xchg
cmp
dec
pop
mov
ja
fs
lds
sbb
shll
fidivs
popa
xor
imul
adc
or
inc
int3
pop
dec
xchg
js
sbb
movsb
adc
jl
dec
cmp
xchg
or
incb
fwait
pop
sub
lahf
and
in
outsb
push
ds
sbb
mov
pusha
xchg
mov
add
sbb
inc
repnz
mov
or
frstor
paddsw
call
cmpsl
xchg
xchg
mov
mov
adc
out
xor
xchg
in
jo
sarb
and
dec
xchg
jmp
or
repnz
int3
pop
dec
insb
sarl
lock
es
xchg
aam
leave
mov
shr
jb
js
fucom
push
mov
xor
cmp
mov
cmp
xchg
into
mov
pop
or
shrb
mov
bound
repz
testb
stc
pop
xchg
jbe
sarl
xorl
lds
xor
sub
cmc
jo
repnz
xor
addb
push
std
mov
loop
subb
mov
push
cmpsb
std
push
mov
mov
adc
and
mov
push
xchg
xchg
push
mov
cli
xlat
mov
push
adc
jge
mov
inc
iret
lret
cmp
imul
out
adc
dec
in
fistl
pop
mov
aaa
sub
cmp
es
sub
push
xchg
pop
out
xor
movsb
je
in
pop
jno
adc
mov
xchg
das
sub
xor
push
lret
jg
test
jns
add
movsb
add
adc
push
mov
or
add
fwait
lds
imul
popf
mov
insl
imul
mov
es
sahf
mov
imul
ds
xor
out
insb
cmp
push
mov
inc
outsl
mov
and
mov
ja
cmp
cmpsb
scas
sub
imul
sub
mov
imul
rolb
sarl
loopne
adc
mov
xor
outsb
adc
dec
xor
lods
xor
pop
jle
out
add
rorb
xchg
mov
xor
popa
sarl
or
pop
ja
inc
sub
sbb
out
lods
fistl
jb
or
mov
cmpsl
mov
cmpsb
je
inc
stos
push
jnp
push
shrl
out
pop
stos
mov
mov
push
sub
stc
icebp
xor
push
fcmovnbe
stos
cmc
daa
xor
jo
xor
popa
lods
jle
pop
push
loope
mov
mov
mov
sbb
fnstcw
xor
shll
nop
mov
outsb
and
jecxz
sbbb
int3
movb
sbb
mov
pop
inc
dec
cmp
mov
mov
lds
out
mov
repnz
scas
imul
sbbl
sub
outsb
inc
pusha
mov
cltd
call
adcl
das
pop
in
sub
popa
mov
push
cmp
repz
cmp
jmp
int
mov
lock
jnp
inc
push
add
pop
adc
xchg
sbb
stc
add
clc
imul
aad
idivl
jmp
inc
out
cmp
insb
xlat
sbb
out
xchg
cmp
and
push
and
lret
mov
or
fldt
rcrl
push
into
push
xchg
xorl
dec
sbb
out
out
jbe
ret
dec
pop
add
ss
mov
cmp
nop
divb
jmp
lods
shll
out
ljmp
test
movsb
pusha
xor
inc
aaa
scas
test
dec
into
fnstenv
lcall
mov
mov
push
lods
xchg
dec
outsb
pusha
sbb
dec
inc
ds
cltd
xor
inc
pop
popf
dec
cld
dec
xchg
add
xchg
adc
lret
pop
hlt
sub
sbb
cld
out
jmp
xlat
shl
and
cmp
imul
cmpb
and
mov
imul
or
inc
sbb
add
jne
adc
lock
cmp
pop
and
add
pop
mov
sub
pop
mov
mov
mov
cmp
test
rsm
and
lds
dec
mov
dec
stos
repz
out
xchg
inc
push
jne
lds
pop
inc
xlat
adc
dec
lods
in
xchg
mov
out
mov
mov
and
mov
jmp
or
rcll
lret
adc
dec
jg
nop
das
push
js
inc
bound
pushf
fwait
addr16
inc
mov
in
mov
cwtl
in
ljmp
scas
pop
aad
pop
sti
lods
clc
xchg
push
xchg
adc
sbb
fs
pop
pop
call
bound
mov
pop
mov
push
mov
mov
or
cmpsb
jl
inc
mov
test
rcrl
insb
shll
sub
ljmp
fwait
int3
and
sbb
and
cli
jae
cmp
cld
push
pop
shll
inc
jg
inc
mov
dec
or
sub
push
stos
cs
lock
aas
roll
inc
jecxz
adc
push
ret
inc
hlt
mov
add
fsubrs
repz
and
shr
cmc
jp
add
dec
push
mov
and
movsl
inc
pusha
adc
test
sub
xchg
inc
dec
test
xchg
inc
mov
adc
adc
mov
insb
jae
test
add
push
and
sub
ds
jp
ljmp
cmc
xor
mov
sbb
add
adc
cs
loope
mov
lret
jl
fldenv
and
sbb
jo
pop
enter
nop
jns
sti
mov
pop
cmpsl
pop
hlt
lods
adc
imul
fidivrs
inc
sti
imul
not
mov
push
mov
addr16
jne
cmp
aas
xor
sbb
push
pop
mov
scas
pop
or
jbe
xor
mov
and
jno
xor
dec
popa
xchg
xor
add
psubb
or
mov
xor
inc
test
fstpl
cs
jmp
and
ret
jae
repz
add
sub
inc
loop
test
xor
pop
cmp
scas
dec
stos
jmp
push
xor
fwait
push
aad
mov
daa
popf
aam
inc
insl
xor
loopne
cltd
xchg
sbb
mov
lock
mov
test
add
sub
lods
pop
lret
mov
xchg
bound
mov
sahf
inc
imul
fdivrl
dec
mov
push
adc
cld
xchg
out
mov
shrl
imul
arpl
push
xchg
mov
mov
je
loope
pop
sarl
sub
jo
jmp
inc
cmp
push
ja
push
es
popf
lret
sbb
sbb
sbbl
pop
cmp
mov
push
out
comiss
dec
fs
mov
jge
lret
lcall
rorb
or
popa
cli
cld
test
lahf
fisubrs
or
out
daa
sti
std
ja
cmc
cmp
rcrb
sub
hlt
fiadds
imulb
and
fwait
nop
xchg
sub
push
leave
jge
imul
jecxz
or
mov
xorl
js
dec
data16
jo
lock
rcrb
add
jns
lods
inc
and
inc
mov
jno
test
sbb
cmp
call
lods
or
xchg
push
jecxz
jo
sub
fsqrt
insl
enter
leave
push
jle
adc
test
cmp
lea
and
push
inc
pop
leave
push
scas
int3
jmp
sahf
inc
pop
sub
popf
jle
add
fisubrl
int
jns
jno
mov
shll
cmp
fcompl
lock
repnz
test
cmp
sub
jae
fwait
push
popa
mov
pop
and
mov
inc
adcl
pop
loopne
gs
and
addb
adc
cmp
push
sbb
enter
sbb
sbb
fs
mov
sub
xchg
in
dec
push
arpl
jp
mov
xchg
xchg
or
out
xlat
mov
imul
dec
insl
dec
in
xchg
xchg
xor
js
mov
dec
adc
insb
pushf
in
repz
or
adc
outsl
push
pop
xor
hlt
sti
sahf
pop
sub
das
push
jae
lahf
mov
loopne
xor
cmp
push
sbb
jmp
mov
sbbl
shlb
rcll
push
outsl
cld
lods
xchg
shrb
mov
xchg
jbe
cmp
push
andl
mov
adc
pushf
test
sbb
or
mov
mov
jge
scas
adc
mov
test
test
push
jb
push
sub
adcl
push
sub
cmpsl
mov
repz
push
out
stos
into
lock
dec
cmp
xor
ja
rcrb
loop
pop
cmp
out
inc
sub
lahf
mov
xchg
and
push
jae
cltd
les
mov
mov
vmovsd
insb
add
nop
adc
adc
shll
xchg
sbb
int3
xchg
notb
mov
sarl
ds
mov
les
adc
shll
and
xor
mov
jnp
mov
in
add
bound
aad
push
addl
lds
repz
cwtl
cmp
jo
ret
mov
jg
jb
push
sbb
sbb
add
outsb
sbb
jno
dec
xor
lea
adc
xchg
fisubl
ffree
mov
divl
imul
xor
sub
cld
jecxz
and
cmp
cmpsb
cli
and
lret
je
mov
xrelease
jno
ret
mov
sbb
adc
pop
cmp
jg
outsb
sysexit
dec
enter
push
and
mov
popf
sub
mov
inc
mov
mov
enter
sub
or
jno
inc
dec
aad
aam
cmc
scas
push
push
inc
jp
mov
clc
hlt
aam
in
mov
inc
pop
mulb
adc
jb
in
pop
jl
ljmp
insb
mov
es
pop
xor
and
test
aaa
negb
jo
or
push
inc
mov
adc
cmc
sbbl
jge
add
call
stc
jg
imul
add
aam
mov
dec
mov
pop
xor
sbb
nop
push
ljmp
jmp
dec
iret
outsb
ja
sbb
fstps
shl
out
out
movsl
pop
sahf
push
cli
sahf
sarb
dec
inc
xchg
enter
aaa
hlt
cs
xor
ficompl
mov
sbb
inc
cmpl
scas
jge
jno
cmpsl
scas
pop
cmp
push
popf
loop
lcall
fsubrl
jp
or
loopne
lcall
insl
es
mov
in
push
pop
push
inc
nop
cwtl
cmp
cmc
adc
cmp
jne
push
sub
sub
dec
xchg
ja
ss
fistps
mov
cs
mov
jo
add
pop
push
sbb
jge
xlat
shrl
sub
rclb
aam
mov
mov
es
dec
stos
mov
fldl
loopne
and
jbe
pop
ja
add
add
cli
cld
jmp
jp
cmpsb
sti
mov
mov
push
hlt
cmp
aas
fisttpl
fisubs
and
pop
fsts
jge
xlat
rcl
imul
jle
sbb
call
pushf
inc
cmp
xchg
movsb
loope
cmp
ljmp
dec
aam
aam
aam
mov
outsl
xchg
jmp
sbb
imul
lods
stos
cmpsl
lret
enter
cli
or
sti
int3
inc
out
fbld
inc
push
xor
or
cmp
xor
mov
aam
push
inc
add
inc
and
fldcw
push
shll
lret
mov
xor
int3
lahf
inc
xchg
xchg
sarb
add
pusha
xor
mov
fdivrl
std
test
cmpsl
mov
mov
jae
mov
negl
xor
push
mov
iret
paddb
dec
ljmp
je
aam
mov
fsub
lock
movsb
push
jo
mov
lods
add
repz
movsb
jecxz
add
xchg
aas
jo
nop
lock
rcll
je
add
xchg
push
sti
pop
sbb
mov
jne,pt
mov
jecxz
cmpb
into
pop
in
mov
pop
inc
mov
daa
rcrl
fs
repz
pop
inc
ds
lea
sub
xchg
mov
push
mov
adc
adc
adc
clc
adc
outsb
adc
jo
pop
mov
out
lret
inc
pop
mov
or
out
inc
shll
push
push
std
fcoml
mov
xchg
push
mov
iret
xchg
sub
int
fmull
sub
repz
stc
out
addr16
std
xlat
cmp
adc
jbe
adc
push
lods
ret
lock
mov
push
insb
push
sub
rorb
xor
xor
pop
cmc
clc
lret
xchg
pop
enter
xchg
jmp
mov
xchg
jae
mov
outsl
loope
jo
scas
inc
pop
sbb
jno
aad
sbb
sti
adc
out
test
test
lcall
popa
fsubl
test
into
testb
push
lret
sub
test
outsb
outsb
add
mov
mov
mov
xchg
cmpsl
sahf
mov
std
scas
mov
cmc
sub
xor
jno
add
enter
test
clc
jbe
pop
lds
in
hlt
cmp
fists
mov
scas
mov
mov
lea
call
fistl
das
lret
es
mov
enter
jp
cmp
loopne
enter
out
or
rcrl
std
in
fwait
pop
push
mov
sahf
lahf
cmp
popa
sub
stc
icebp
je
mov
xor
pop
scas
mov
adc
ja
mov
lods
dec
out
add
rorb
outsb
imul
mov
aam
inc
scas
cld
outsb
mov
sbb
ljmp
mov
push
xchg
in
stos
test
not
xchg
rcrb
mov
push
rcr
cmp
lods
es
fstpt
arpl
sub
outsb
fwait
xchg
cli
mov
jnp
insl
out
fiaddl
mov
lods
adc
xor
xor
xor
push
xchg
dec
iret
dec
out
rcr
sub
mov
mov
dec
out
push
add
cs
sahf
mov
pop
in
sbb
mov
push
and
pop
xor
ja
sbb
jbe
jmp
push
cmp
and
mov
adc
sub
daa
jecxz
or
ss
lods
cmpsl
cmovb
or
cli
or
lcall
mov
pop
clc
xor
dec
jns
inc
push
pop
jo
aam
sub
ss
fdivrl
mov
sbb
lcall
lea
or
jbe
ljmp
fldpi
adc
ret
pushf
fsubs
dec
mov
arpl
test
leave
dec
inc
push
jnp
sbb
mov
popf
fdivs
push
sbb
hlt
sbb
cmp
pop
es
sbb
fs
dec
add
mov
out
xlat
lret
dec
aas
xorb
inc
fs
mov
in
cmp
pusha
fidivl
test
mov
ljmp
repnz
divl
mov
imul
into
inc
mov
iret
out
add
cmp
jle
pop
add
lods
loope
outsb
hlt
mov
test
dec
out
adc
sub
mov
sbb
insb
rclb
cmpsb
jl
popf
cmp
in
testl
in
ds
imul
aaa
xorl
insb
lock
adc
inc
pop
xlat
mov
xor
dec
jo
dec
xor
xchg
int
xorb
ret
jae
dec
scas
adc
mov
bound
les
or
jno
lret
push
xor
xor
cmp
push
rcrl
inc
pop
cli
sbb
in
dec
mov
ljmp
mov
imul
out
or
in
lea
pop
xchg
pop
packsswb
cmc
mov
and
xchg
mov
hlt
dec
mov
jg
xor
mov
outsl
mov
push
je
sub
push
stc
sbb
push
mov
mov
mov
test
push
xchg
mov
or
adc
sub
xchg
test
test
mov
aam
imul
fidivrl
xchg
daa
out
mov
lds
stos
js
out
sti
aaa
fs
ss
mov
pusha
xchg
xor
fs
jecxz
subl
and
in
mov
pushf
ds
andb
adc
leave
stos
xchg
mov
xor
jnp
mov
mov
int
pop
dec
pushf
pusha
mov
or
icebp
dec
push
rcrb
lods
fucomp
movsl
jecxz
inc
aas
fbstp
dec
lods
ljmp
popa
cs
rorl
fstps
lret
inc
inc
push
lea
outsb
pop
pop
jbe
cmpsl
jnp
js
lcall
inc
pop
fisttps
pop
mov
fcmovu
and
fdivl
mov
scas
sbb
aad
push
cld
xchg
inc
iret
jns
add
xor
cmc
or
test
inc
sub
enter
adc
sbb
pop
sti
scas
lock
ss
mov
and
popf
rcl
je
dec
dec
mov
daa
scas
mov
jmp
mov
pop
jbe
xchg
or
add
aam
in
bnd
push
fidivrl
aas
jns
ret
sub
in
es
popa
mov
sbb
adcl
movsb
fs
cmp
cmpsb
mov
fisubrl
cwtl
daa
and
daa
push
aad
and
fwait
and
or
rcl
test
hlt
add
outsb
add
or
adc
nop
aaa
push
fimull
mov
aas
and
add
push
jg
lea
cs
shrl
push
int3
in
lock
lock
dec
popf
insb
fst
jmp
mov
rorb
cld
aaa
push
add
shlb
aad
iret
icebp
jne
xchg
loope
jl
jecxz
pop
cld
shll
int3
dec
push
and
data16
in
jnp
inc
sub
inc
mov
and
mov
lret
std
cmp
jecxz
xor
mov
sub
mov
sub
cmp
jl
xchg
leave
scas
xor
mov
insb
dec
fmul
sbb
add
cld
jbe
sbb
arpl
inc
js
lea
gs
pop
iret
cmp
mov
jnp
cmpsb
inc
mov
fistpl
test
test
test
or
es
adc
stos
pushf
inc
mov
jne
das
mov
jo
movsb
mov
fnstsw
les
mov
pop
xlat
lcall
or
enter
aam
pop
pop
or
add
push
mov
mov
adc
xchg
xlat
mov
les
xchg
jg
dec
loopne
pop
fs
mov
js
adc
mov
dec
push
jae
mov
add
outsl
mov
cwtl
dec
add
add
adc
shrb
mov
sbbl
mov
mov
xchg
scas
xchg
fwait
add
int3
outsl
ficoml
mov
xor
repz
push
imul
xchg
addr16
data16
into
add
cld
mov
jmp
cli
ljmp
pushf
pop
and
jns
or
sub
adc
sahf
les
in
shl
push
mov
push
jmp
dec
push
movl
sti
icebp
arpl
mov
adcl
jnp
mov
and
or
mov
and
mov
add
mov
sbb
lcall
orb
ds
or
sub
popf
sub
sbbl
push
insl
aaa
mov
adc
push
or
ret
xchg
pop
int3
addr16
fists
in
fisttps
xor
dec
pop
adc
sbb
or
jmp
lcall
sbb
sbb
xchg
imul
cmpsl
sub
stos
push
stc
mov
out
sub
stos
popa
jle
inc
cmpsb
test
lods
sti
jp
test
testl
dec
xchg
scas
xor
jge
mov
add
repz
push
arpl
xchg
add
aam
inc
mov
adc
pop
and
xlat
dec
add
sbb
mov
lahf
push
inc
cmp
cld
push
fsubrp
imul
out
outsb
pop
jecxz,pt
sub
hlt
mov
cmp
adc
push
mov
out
xchg
and
mov
lds
divl
jae
mov
cld
loope
gs
jb
mov
jg
or
push
pop
test
cmp
pusha
ss
inc
ss
add
push
ret
fisubrl
push
mov
jo
imul
cmp
hlt
sbb
mov
pop
int
jo
xlat
pop
ret
xor
pop
dec
arpl
std
in
mov
loope
push
adc
push
icebp
add
jae
add
mov
fisubrl
mov
mov
out
mov
mov
or
stc
insl
pop
leave
hlt
sbb
shlb
cmp
pusha
call
loope
jg
dec
loop
push
inc
and
rcl
xchg
cmp
andb
mov
lock
repnz
into
dec
mov
mov
xor
outsb
push
lahf
xor
cmp
sbb
sub
add
push
sbb
daa
stc
xchg
sbb
test
sub
ljmp
mov
mov
fnsave
shlb
mov
push
or
rcrb
in
out
inc
push
movsb
jno
cmpsb
jne
pop
push
sbb
mov
and
fcompl
fisubl
pop
mov
ror
rorb
mov
rorl
pop
rorl
out
xchg
pop
xor
xor
loop
mov
ret
mov
stos
outsb
hlt
sbb
ficoml
xchg
mov
adc
xchg
loopne
cld
stos
pop
mov
inc
cmp
movsl
or
icebp
and
mov
lods
pop
jp
xchg
rcrb
mov
mov
inc
ds
pop
lahf
fnstcw
mov
popl
dec
mov
out
xchg
lahf
imul
cmp
mov
and
repz
jg
jmp
pop
fs
mov
jno
add
or
scas
push
jge
daa
jmp
dec
fcmovnbe
xor
jne
inc
aas
push
mov
call
daa
jmp
fistpll
lods
or
xchg
and
cli
popf
lret
icebp
push
mov
push
pop
inc
mov
add
xor
xor
mov
iret
sarl
or
jl
loopne
mov
xchg
mov
scas
lock
dec
or
add
jb
mov
xchg
dec
cli
popf
ljmp
xor
push
and
out
cwtl
lret
cmp
cmpsl
hlt
adc
mov
cmp
pop
adc
pushf
sbb
push
mov
add
ror
mov
mov
pop
lahf
cmc
aaa
in
pop
pop
addr16
ret
xchg
mov
add
dec
int
xchg
and
inc
cmp
es
insl
ds
adc
into
subl
cmp
outsb
or
xchg
inc
inc
push
orb
imul
push
jns
push
adc
add
xorb
add
outsl
std
xchg
xchg
xchg
jae
call
add
enter
pop
out
les
jae
test
jns
adc
ss
xor
fs
out
add
and
shrb
mov
mov
nop
movsb
dec
push
sbb
sti
mov
push
fildl
push
in
mov
ret
lock
outsl
dec
jmp
mov
xor
rcrb
call
pop
ss
pop
lea
repz
mov
mov
and
xchg
test
jbe
inc
sub
dec
sbb
sbb
test
lcall
push
faddl
lret
gs
xor
xor
cpuid
mov
pusha
jo
inc
pop
in
sti
dec
test
dec
movd
aad
outsb
lcall
mov
mov
mov
jl
nop
mov
mov
push
or
movsb
xchg
sub
into
mov
push
pop
ret
inc
dec
xchg
dec
push
adc
adc
and
mov
loop
imul
xor
inc
pop
push
es
push
xchg
je
adc
insb
pop
dec
mov
dec
pop
cmpb
dec
lods
aam
mov
mov
adc
ljmp
lock
and
outsl
test
jno
xor
mull
fsubrs
push
stos
push
dec
and
mov
xchg
pop
mov
pop
gs
jmp
testl
aas
int3
adc
mov
xchg
sub
xchg
inc
stos
add
pop
sti
leave
mov
dec
xchg
mov
lret
pushf
jg
fisubrl
clc
xlat
inc
pop
adc
negl
mov
cmp
xor
ljmp
sbb
jp
jae
jecxz
sahf
inc
or
and
mov
outsl
mov
aas
loopne
imul
cmc
cmp
jg
xchg
lods
mov
jmp
aad
inc
sub
mov
lds
dec
rclb
jns
jg
mov
cmp
dec
jo
lahf
loopne
jg
push
adc
lahf
mov
idivb
cltd
add
mov
aam
decl
push
nop
pop
xor
inc
push
fmulp
dec
clc
cwtl
repz
xchg
dec
out
jle
aaa
sti
ds
add
add
clc
mov
cmpb
jns
pop
cmp
sub
mov
and
js
mov
push
shrl
fsubl
test
sbb
xor
sub
and
jl
outsb
add
sub
sub
jecxz
jp
jmp
dec
mov
sbbb
adc
jmp
imul
aas
jns
addr16
xorl
outsb
inc
jnp
push
pop
icebp
xchg
in
inc
push
in
jp
popf
pushf
pop
fsubl
mov
setb
mov
imull
cmp
push
ds
add
lret
lea
fsubrs
pop
or
shlb
imul
lock
add
push
scas
shlb
inc
push
sub
cmp
or
stos
insl
leave
outsl
xchg
bound
bnd
dec
scas
test
call
and
scas
jb
iret
loop
ret
mov
or
andb
lods
insl
or
idiv
sub
jg
mov
or
pushf
ret
movsl
fidivrl
dec
mov
sub
or
xlat
mov
movsl
inc
icebp
mov
cltd
pop
cmpsb
nop
xlat
adc
xchg
adc
push
and
flds
mov
dec
stos
lcall
xchg
mov
or
int3
mov
mov
dec
fsubrp
lds
pop
adc
cmc
bound
std
jmp
pushf
push
mov
stos
push
jecxz
in
outsl
jno
mov
out
fistl
test
icebp
cmp
jg
stos
out
xchg
xor
nop
mov
leave
push
cwtl
cltd
pop
bound
fnstcw
cli
jmp
mov
or
xchg
insl
psrlq
sti
scas
mov
mov
jmp
lret
push
popa
and
insb
pop
xor
insl
aas
notb
jle
push
popa
push
cmpsl
js
call
cmp
insb
cmc
inc
pop
out
ds
mov
dec
jecxz
lret
aaa
aaa
cmpsb
insb
adc
and
dec
orl
pop
nop
pushf
lods
out
or
data16
testl
in
stos
sub
or
and
pop
push
ss
dec
test
pushf
arpl
mov
adc
fstpl
mov
fdivrs
mov
add
out
mov
cld
fucomi
stos
adc
cmp
and
jle
mov
out
mov
pop
shll
sti
dec
icebp
popl
js
push
push
icebp
xor
pop
or
popa
cld
cwtl
ret
daa
push
add
pop
dec
cmp
push
push
xchg
das
mov
jns
nop
jmp
xor
aad
adc
adc
jbe
in
and
pop
jl
jns
sahf
out
jg
inc
mov
adcb
dec
in
sbb
sub
inc
aam
lret
jno
sub
inc
cwtl
jecxz
sbb
pop
cmp
mov
out
cltd
dec
ret
jnp
adc
and
xchg
shll
mov
sbb
dec
fnstcw
loope
aad
mov
xchg
sbb
shl
xchg
inc
xchg
ret
sbb
sbb
jb
es
in
dec
dec
scas
sti
jne
inc
fsts
push
mov
sbb
jns
cmp
or
push
push
xchg
dec
jo
sbb
and
mov
pop
dec
jl
lock
lds
and
cmpl
mov
mov
arpl
in
xor
ja
pop
pop
cmpsl
fs
jecxz
inc
mov
sarl
test
out
sub
rcrl
rcrb
sbb
sarl
lods
das
mov
pop
movb
repnz
sbb
mov
sub
cmp
insl
cs
out
push
xor
jne
mov
pop
testl
inc
sbbb
inc
push
mov
sbb
loope
jbe
mov
insb
push
push
xchg
mov
push
das
lock
fcomip
in
cmpsb
scas
xor
addr16
dec
inc
add
in
xlat
mov
adc
jne
xchg
mov
push
jg
cmp
arpl
repnz
shrb
xchg
popl
xor
fldcw
cmp
mov
push
adc
and
or
repnz
int3
dec
xor
sbb
dec
inc
fdivl
rcl
aas
cltd
mov
test
fucomp
jg
cmp
and
mov
mov
cltd
fcomps
push
sub
and
fsubr
add
lods
or
sahf
mov
jle
lea
sub
jbe
mov
mov
rorl
std
lcall
xor
or
outsb
add
addr16
stc
sbb
ja
fcmovnu
jns
fdivl
out
push
jmp
icebp
repz
xchg
pop
cli
jnp
bound
repz
cs
xchg
lea
mov
cmc
inc
pop
sbb
repnz
insl
xchg
and
mov
pusha
hlt
out
mov
xchg
idivl
push
imul
add
imul
in
scas
sbb
adc
and
lock
push
add
popa
out
out
jns
lods
cmpsl
lock
or
repnz
xor
lods
push
test
pushf
adc
sbb
aam
inc
adc
fisttps
and
into
mov
mov
mov
enter
add
lahf
jle
loopne
dec
mov
fcmovnu
pusha
ss
in
aad
rcrb
jge
les
inc
adc
jle
cmc
mov
xlat
es
inc
ret
orl
int3
mov
data16
mov
mov
repz
imul
sub
call
addr16
mov
cli
mov
push
out
pushf
fistl
pushf
push
cmp
jo
jne
xor
jmp
mov
mov
push
int3
jnp
out
add
sbb
mov
xor
push
mov
ja
jno
cmp
rcrl
inc
aas
sahf
jge
mov
sub
add
adc
stos
and
mov
loope
mov
sbb
aas
push
divl
sahf
cli
hlt
fstpl
cltd
sub
cs
insb
out
push
sub
hlt
push
pop
xor
pop
aaa
lret
fistpl
jge
clc
fwait
repz
dec
xor
mov
out
xor
jnp
push
sbb
and
int3
push
mov
push
or
inc
dec
xchg
push
jns
inc
mov
cmpsb
mov
mov
lods
pop
in
mov
cmpsl
scas
mov
arpl
mov
mov
or
jne
ljmp
dec
loop
or
idiv
cmp
push
push
dec
stos
sub
test
insb
fldl
inc
jg
lcall
jle
insb
das
ds
js
mov
sbb
xchg
pushl
xchg
pop
push
popa
aam
add
inc
rdtsc
clc
enter
rep
jl
daa
sub
popf
and
jo
aam
aas
andl
sahf
loope
mov
jae
or
jecxz
inc
cli
jmp
hlt
rcr
push
xlat
xchg
ds
jae
sahf
into
cmc
dec
sti
or
pop
loop
xchg
into
icebp
std
mov
pop
lcall
imul
cmp
dec
ret
and
js
mov
popf
fcompl
das
cmpsl
nop
sbb
ja
cmpsb
and
andb
inc
sbb
push
test
inc
mov
test
xchg
push
outsb
pop
orb
fistps
add
add
adc
adcl
xor
jg
in
xchg
insb
add
loop
in
sub
bound
push
repz
xor
test
imul
test
xor
not
mov
and
daa
inc
adc
mov
inc
or
lock
out
dec
jnp
aad
mov
mov
xchg
mov
psubusb
inc
lcall
dec
pop
jnp
nop
fbstp
das
rolb
lcall
pop
aad
das
in
ds
nop
push
lret
addr16
mov
enter
icebp
sbb
loope
dec
jge
mov
pop
outsl
push
data16
fwait
push
sbb
div
push
xor
xor
subl
adc
mov
xlat
mov
xchg
cmpsl
sub
and
sbb
dec
xor
adc
sbb
shll
jo
mov
int
xor
jo
test
mov
xchg
adc
in
dec
not
outsl
mov
mov
sbb
leave
dec
shl
xchg
xchg
push
cmpsb
das
inc
data16
xchg
adc
mov
outsb
ds
aam
jmp
sbb
lds
fs
clc
out
repnz
leave
aaa
add
mov
inc
push
pop
in
jnp
sub
push
rcll
inc
rorb
aaa
pop
inc
lsl
pop
fsts
inc
iret
mov
sbb
mov
push
mov
xchg
push
cs
jne
lods
jmp
dec
aas
fsubs
sbb
enter
fucomip
push
pop
jb
xor
in
jnp
and
out
jns
jb
mov
inc
outsl
int3
lock
xchg
cmp
pusha
in
enter
iret
in
adc
rol
xor
push
xor
in
inc
jecxz
outsl
das
inc
leave
fs
mov
lods
dec
or
mov
test
jb
shll
pusha
inc
pop
wrmsr
sbb
rorb
sub
jmp
out
cld
cmc
ds
aas
stos
sub
aas
ret
aam
sbb
push
aad
cmpsl
popa
dec
lret
sbb
fnstcw
mov
jl
mov
pop
jb
mov
jl
push
cli
aad
flds
test
add
sub
aaa
stos
mov
sbb
sub
leave
sub
aad
ds
lret
mov
or
sub
cmpsb
mov
jmp
or
mov
or
add
adc
lcall
daa
imul
dec
ja
jno
dec
in
pop
xor
loop
sbb
xchg
or
and
mov
lea
jg
xor
scas
icebp
pop
lidtl
adc
jmp
fmull
ja
jle
inc
dec
dec
into
push
inc
jl
sub
jp
pushl
lret
mov
mov
daa
rclb
das
cmp
sbb
push
icebp
ja
jl
mov
lods
ret
xor
data16
lahf
sbb
mov
lret
pop
mov
mov
cmp
jns
jns
test
and
arpl
add
js
push
test
ds
inc
push
imul
fdivrp
fldcw
aam
jl
add
lods
stos
sbbl
inc
push
jno
jge
sbbl
dec
iret
mov
pushf
mull
out
mov
in
repz
adc
shll
dec
xor
sub
into
push
insb
xchg
dec
mov
xor
cmpsb
neg
imul
repnz
and
jnp
movsb
inc
rorl
mov
sbb
das
adc
scas
sahf
mov
inc
insb
inc
ss
loope
jns
fwait
stos
jo
popa
push
addr16
outsl
fistpll
aad
pop
xor
mov
decl
arpl
movsb
dec
jmp
mov
popf
test
add
xchg
jg
jl
ret
inc
xlat
add
jo
test
fistps
adc
cmp
loopne
out
push
das
pusha
push
jl
mov
je
leave
ss
inc
jne
jmp
hlt
xchg
or
cwtl
push
outsl
adcb
cmp
inc
pop
add
adc
mov
test
adc
sbb
push
sbb
or
jge
or
lcall
or
jg
outsb
stos
cltd
pop
bound
cmp
or
mov
data16
aad
pop
lock
cs
xchg
or
btc
mov
xchg
shl
xchg
push
adc
in
cmp
aad
les
in
xchg
outsl
repz
jp
sbb
js
je
adc
idivb
sub
pop
stos
dec
and
or
fdivs
test
pop
lcall
push
in
adc
imul
pop
lds
push
dec
or
in
mov
jle
cld
testb
adc
mul
mov
cmp
inc
inc
xchg
icebp
xchg
popf
push
jno
aam
aad
ret
shlb
popf
xlat
xchg
popf
ja
shlb
pop
pop
jmp
mov
outsl
inc
out
jl
mov
movl
insb
mov
push
lea
aad
mov
cwtl
fldenv
ljmp
push
lahf
mov
jae
adc
jnp
inc
lea
mov
loopne
xor
jbe
daa
cmpb
or
out
rorb
movsb
push
fsubl
dec
adc
movsl
pop
push
push
xor
in
test
mov
cmp
and
xchg
lret
cs
pushf
dec
or
jae
inc
js
lea
and
pusha
fldl
loope
xor
and
fidivrs
leave
stos
mov
or
shll
xor
cmp
dec
cli
jmp
scas
sbb
mov
mov
push
pushf
shlb
pop
cltd
stos
lds
pop
add
gs
adc
decl
sub
push
or
mov
adc
jo
aam
mov
call
cs
jae
adc
sbb
lods
cmc
sbb
push
xchg
jo
fildl
push
stos
xor
inc
sbb
mov
in
int
iret
test
push
nop
jmp
enter
xchg
outsb
sbb
pushf
repz
wrmsr
lods
sti
stos
popf
ret
xchg
aaa
lret
pop
or
add
sub
mov
jb
mov
lds
dec
mov
push
cmp
and
sbbl
cmpsl
dec
jge
mov
into
jno
in
jp
inc
or
cmp
sbb
xrelease
movsb
daa
dec
imul
sbb
mov
xorb
lds
popf
mov
jle
orb
and
scas
out
jb
mov
fpatan
scas
cmp
or
cmc
jb
inc
adc
pushf
push
sarl
mov
adc
push
mov
in
ret
aaa
xchg
outsl
push
cmp
inc
jmp
lea
mov
lret
fimuls
sub
cmc
pop
pop
mov
cmp
mov
popf
sbbb
mov
xlat
loope
lret
out
mov
push
jae,pn
mov
xchg
fildl
in
pop
or
mov
jle
jae
es
mov
mov
les
mov
stos
adc
dec
lods
iret
dec
shlb
shl
push
and
and
cld
icebp
les
sub
rorb
cmpsb
aad
nop
and
stos
inc
daa
jae
cmp
das
std
stos
inc
mov
adc
pop
rcrb
xchg
pop
out
in
mov
dec
adc
jns
addr16
and
inc
pop
in
mov
pop
pop
and
insb
int
loopne
lret
call
int3
add
jae
lret
outsb
jo
rcll
cmc
cmp
stos
ret
cmp
pushf
nop
jns
xor
jne
out
pusha
dec
jmp
cwtl
jno
pop
cmp
mov
mull
cmc
push
arpl
or
orl
cmp
les
in
pop
cmp
aas
sub
insb
dec
iret
cmp
not
aad
int3
notl
mov
xlat
add
scas
sti
lea
pop
or
pop
lods
enter
pop
or
and
orb
fidivrl
cmpb
int
insl
push
scas
lret
xchg
scas
mov
and
shrl
hlt
aaa
jb
sbb
imul
sub
lods
pop
mov
mov
sbbl
or
rorl
dec
ds
je
orb
mov
pop
aam
js
and
std
jge
and
adc
inc
mov
mov
sbb
lret
popa
lds
pushf
xor
xchg
fwait
mov
stos
addr16
cmp
cmc
mov
aaa
in
xchg
mov
ljmp
mov
inc
sub
nop
js
outsl
stos
xor
push
adc
pop
sbb
test
pop
rcrb
test
out
mov
sub
rcrb
mul
scas
not
and
push
pop
sbb
push
and
test
jnp
cs
imul
jb
aaa
mov
xchg
xor
aas
mov
scas
aaa
fdivrl
xchg
mov
je
test
push
mov
push
aas
inc
dec
mov
imul
movsl
in
cmp
pusha
sbb
sub
dec
adc
stos
mov
push
or
push
ljmp
add
inc
cwtl
int3
mov
jno
or
or
pop
push
xorb
and
in
mov
push
je
call
addr16
adc
ljmp
insl
cmc
cmc
daa
dec
or
xchg
lahf
or
stos
lret
sub
or
mov
xchg
es
mov
or
xor
dec
sub
cwtl
jo
adc
mov
jo
push
and
mov
push
mov
cli
jle
sbb
xchg
push
aad
ror
push
test
dec
push
or
outsb
popa
or
and
mov
mov
out
xor
ljmp
mov
lea
xor
inc
sti
xor
mov
adc
push
int3
aas
lahf
pop
sbb
xchg
xchg
cltd
loop
js
sbb
add
je
mov
or
fdivrs
lods
es
imul
int
push
shlb
scas
loope
call
idivl
std
loop
sub
jp
mov
cmp
frstor
aas
rcrb
mov
mov
pusha
ljmp
popa
push
sub
sti
int3
jle
outsl
stos
lds
loopne
mov
cltd
jl
cmp
cmpsl
and
mov
and
mov
xchg
xchg
andb
mov
imul
push
sbb
fisttpl
das
adc
bound
sbb
adcb
push
int
rcll
lods
stos
sbb
cmp
aad
pusha
mov
shlb
inc
iret
dec
stos
xchg
cmp
push
cmpsb
sub
bound
fwait
sub
mov
push
inc
daa
out
stc
xchg
int3
in
jmp
or
xor
or
cwtl
xor
mov
icebp
js
test
jmp
inc
scas
jle
dec
dec
xor
outsl
mov
push
das
cmp
adc
mov
jge
cmp
cmc
int3
push
cmp
repz
xchg
sbb
push
es
imul
cs
sub
imul
ret
pop
pop
ficompl
inc
iret
out
movsl
cmpsl
jp
jae
or
fisubl
pop
mov
xor
xchg
sti
cwtl
jae,pn
sbb
rcl
decb
iret
xchg
mov
int
jl
and
repnz
mov
fnstcw
inc
fdivr
movsl
into
xor
xchg
inc
filds
add
sub
xor
or
xorb
jmp
flds
mov
ss
xchg
addb
cmp
pop
sbb
movsb
jl
je
outsl
test
out
testb
or
call
je
aaa
push
test
add
pop
push
scas
mov
pop
stos
pusha
jge
es
iret
pusha
repnz
jo
les
loope
pop
fcmovnbe
rolb
jns
push
fsub
je
dec
dec
xchg
cmp
mov
inc
jmp
inc
adc
ret
test
pop
test
hlt
cwtl
mov
lea
divb
les
mov
scas
fcoml
insl
repz
push
iret
fsubrl
xchg
mov
and
jecxz
pop
jb
mov
xchg
xor
rcll
stos
ljmp
dec
push
pop
ss
mov
rcll
imul
add
bnd
pop
and
and
les
cmp
outsb
and
jmp
push
iret
inc
stc
dec
orl
add
rcrb
mov
fs
xor
loopne
shlb
add
and
mov
js
das
pop
or
mov
mov
and
arpl
or
stc
or
cmpsl
mov
fstps
pop
xor
iret
repnz
mov
fbstp
pop
aaa
icebp
jp
adc
or
aas
scas
pop
arpl
inc
and
aaa
inc
mov
loope
andb
loope
sub
es
out
mov
mov
pop
xchg
xchg
mov
test
push
sarl
scas
jl
mov
cmpsl
call
inc
xlat
movsb
cmp
push
inc
notb
mov
mov
mov
stos
mov
clc
cli
pushf
push
xchg
mov
push
cmp
or
ds
push
out
test
shll
mov
out
jns
cmp
push
out
mov
mov
jmp
mov
icebp
leave
test
test
xchg
inc
insl
psrlq
xchg
enter
or
pop
imul
sub
xchg
jne
gs
popa
xor
clc
fwait
pushf
cmp
std
imul
pop
pop
inc
es
jb
dec
pop
or
pop
pop
add
push
sbb
ljmp
push
bound
fld
and
movaps
inc
pushf
lret
sub
or
imul
stos
add
xchg
and
movsb
shrb
or
pusha
gs
mov
pop
jg
inc
lcall
hlt
add
mov
xor
inc
lret
stos
pushf
scas
and
sub
mov
imul
pop
push
out
add
insb
in
sbb
pushf
in
lock
scas
xchg
loop
pop
jl
int
mov
xchg
repnz
lock
jb
adc
inc
and
mov
xchg
cwtl
or
movsl
arpl
std
lret
pop
inc
cmp
lea
dec
push
push
mov
cmp
in
dec
subb
pop
jge
xchg
xchg
jns
mov
loopne
lret
repnz
dec
jecxz
mov
aad
sub
mov
ret
mov
adc
fsubs
sub
mov
jae
daa
sub
jbe
pand
xchg
nop
or
xor
xor
push
lds
mov
add
pop
leave
add
xor
in
lahf
ret
psubw
loope
cmp
or
shll
mov
adc
lods
lahf
bound
dec
jmp
inc
mov
mov
mov
aam
das
into
iret
mov
add
xchg
xchg
cli
cli
aam
jmp
mov
adc
shl
fldenv
pop
mov
adc
mov
sub
fwait
sbb
lods
mov
mov
inc
adc
xor
adc
sbb
rorb
cmpl
outsb
scas
fucomp
cltd
inc
sbb
inc
jmp
mov
xchg
push
test
scas
cmp
dec
fcoml
pusha
hlt
daa
mov
xorb
repnz
std
inc
cmp
loope
bound
add
dec
push
push
mov
scas
sub
in
mov
psrlw
xchg
enter
push
push
cmp
fcmovne
push
adc
push
jecxz
sub
sub
inc
fsubrl
pop
movsb
xchg
mov
push
stos
sbb
mov
inc
and
subb
mov
scas
or
orl
out
dec
in
pop
pop
testl
jge
dec
push
aad
lods
mov
int3
dec
jno
lods
inc
dec
loopne
es
dec
push
or
rclb
mov
outsb
es
sbb
adc
mov
loopne
adc
jns
orl
inc
mov
jns
cmp
rcrb
jbe
push
orb
iret
pop
out
mov
sub
ljmp
pop
cs
fnstenv
push
jecxz
add
ljmp
and
mov
mov
push
scas
es
push
sti
mov
fbld
inc
aam
xchg
dec
cmc
mov
or
xlat
lock
call
xchg
in
data16
cmpsb
pop
movsl
pop
mov
sbb
and
test
imul
imull
jle
xor
in
cld
add
lds
out
pop
into
adc
mov
adcb
cmp
cmpsb
pop
leave
xchg
add
popa
pushf
push
push
std
pop
test
xchg
xchg
rcrl
add
xor
les
pop
adcb
mov
js
and
inc
je
mov
xchg
imul
jle
out
xchg
pusha
cmp
jne
xchg
mov
jbe
in
pop
mov
stc
cli
scas
pop
lcall
pop
orb
nop
pop
adc
es
mov
iret
xor
mov
hlt
ficoml
jp
mov
rcr
and
shl
lds
out
loopne
outsl
mov
out
sahf
inc
lcall
repnz
pop
loopne
out
sahf
sti
popa
jmp
mov
or
stc
loope
jecxz
bound
jns
sbb
pop
jae
jle
std
mov
scas
dec
testb
xor
adc
out
popf
mov
jnp
mov
repz
lock
rorb
imul
xchg
mov
js
pop
sbb
cmp
dec
dec
dec
sbb
jo
pop
add
sub
icebp
or
je
fs
call
and
ds
sti
orl
out
jmp
fists
mov
loopne
jnp
jo
xchg
push
fldl
roll
fcomp
xlat
mov
out
aas
bound
cmpsb
xchg
push
and
fsubr
fistl
and
ja
adc
outsb
into
iret
inc
mov
outsb
das
mov
dec
mov
cmpsb
std
call
xor
sub
es
aas
push
adc
mov
sub
cmc
js
dec
dec
jo
clc
sub
push
mov
xor
pop
jae
jl
xor
movsl
or
lods
push
push
pop
and
mov
cltd
jo
leave
sbb
popa
xchg
shll
inc
inc
sbb
test
ds
adc
negl
inc
xor
das
add
lahf
push
inc
ret
adc
adcl
jno
inc
sub
cmp
scas
xchg
es
lea
mov
lods
cwtl
out
xchg
in
fbstp
fldl
sti
xchg
add
shlb
sahf
ret
jno
aaa
int
aad
dec
shll
scas
mov
mov
int
fcoml
dec
pop
imul
clc
mov
adc
fcmovbe
adc
data16
or
popa
cmp
add
sub
pop
loop
out
sub
xlat
jns
ffree
mov
add
mov
sarb
add
mov
cwtl
decl
mov
lods
aaa
jle
out
daa
leave
sbb
repnz
push
lret
cmp
inc
gs
fdivl
arpl
xor
mov
xchg
inc
cmp
insl
sbb
test
pop
jl
in
add
in
xor
lahf
loope
add
mov
popf
jae
push
pop
and
pop
xor
mov
imul
mov
or
mov
out
out
push
lea
xchg
mov
hlt
das
pop
jnp
mov
in
add
cmp
xchg
mov
add
xchg
or
bound
cmp
in
scas
jle
repnz
jmp
addr16
cmpsb
xor
loopne
add
addr16
outsb
stos
jp
sub
mov
ds
xchg
dec
sbb
xchg
sbb
cmp
lcall
mov
add
cld
sub
inc
push
sbb
out
js
ss
inc
or
mov
dec
mov
pop
out
cld
fdivrl
push
jp
flds
repnz
lds
jge
cwtl
jno
int3
inc
push
iret
incw
xor
loope
rcrl
iret
xor
in
cmp
in
movsb
jnp
mov
push
in
xchg
add
mov
rcrb
fsubp
or
sub
ficompl
lahf
aam
ret
lds
daa
inc
inc
cmc
test
test
and
mov
loop
adc
or
and
fsubrl
xchg
jbe
mov
ljmp
fstps
fcoms
push
push
loopne
sbbb
insl
jge
mov
lods
mov
fisttpll
push
loop
dec
fwait
xchg
add
xchg
xchg
insb
push
shl
jnp
repnz
mov
sbb
mov
ljmp
push
xchg
push
or
push
in
fsubs
mov
cltd
in
andl
sub
sub
lcall
loop
add
ss
sub
dec
pop
pop
pop
imull
hlt
lret
scas
pop
push
repnz
mov
add
rolb
push
and
inc
stos
lea
mov
das
out
enter
mov
sbb
adc
pop
insb
fstpt
and
lods
cmpsl
pop
inc
push
adc
fstps
mov
xchg
mov
jmp
cs
add
fildl
xor
stc
mov
push
rcrl
push
js
mov
xor
int
push
inc
pop
dec
call
mov
shlb
icebp
out
lret
std
jnp
xchg
in
stc
or
cmpsb
aad
out
sub
outsl
pushf
or
adc
xlat
imull
push
mov
mov
nop
and
or
mov
cld
jno
inc
push
push
mov
or
xchg
cli
inc
repnz
sub
adc
std
mov
mov
dec
cmp
cmp
mov
sub
jge
dec
xor
add
test
xor
aad
pop
push
pop
out
inc
xorl
inc
inc
mov
movsl
mov
xor
cmpsl
sub
or
mov
sbb
xchg
sub
repz
stc
rcrl
fistl
mov
mov
sub
dec
mov
sbb
idivl
mov
sub
popf
mov
sbb
outsl
lahf
andb
in
shlb
push
std
jl
fisubrs
cmp
int
xchg
sub
or
push
js
jl
sbb
lds
dec
mov
cmp
es
enter
decl
pusha
ss
fdivrp
icebp
push
in
and
push
sahf
mov
aad
fists
mov
leave
add
xor
xchg
ljmp
outsb
out
push
jmp
cld
push
or
rol
push
sbb
mov
adc
arpl
nop
push
cli
push
xor
cld
lcall
insl
dec
ret
adc
push
movsb
sbb
pop
imul
sbb
cmpsb
mov
in
add
jg
mov
or
filds
fsubs
mov
lock
mov
sub
flds
jecxz
jl
xor
jae
xchg
add
mov
test
rcr
dec
add
or
imul
bound
repnz
or
push
sbb
fimuls
push
movsb
shrl
mov
push
sub
xchg
dec
pusha
cmp
iret
cmp
aas
scas
xchg
cld
fwait
add
rol
cmp
sbb
outsl
dec
and
sbb
leave
xor
andl
and
or
in
pop
das
fs
sbb
and
push
hlt
xchg
mov
push
in
nop
out
iret
and
hlt
and
lods
fimuls
std
adc
in
xor
pop
push
xchg
into
jo
jae
movsl
imull
mov
dec
out
imulb
xor
test
jmp
jbe
pop
movsl
mov
dec
lret
push
nop
inc
icebp
add
mov
sbb
cmp
and
add
push
sbb
sbb
push
sub
jbe
mov
push
cmpsb
add
mov
sub
push
sub
inc
mov
popa
mov
mov
mov
dec
add
bound
fwait
ds
stos
stc
adc
stc
aad
test
lahf
shrl
xor
xor
push
nop
mov
sbb
push
xchg
mov
call
mov
leave
and
cmp
add
lock
adc
xchg
gs
stos
rcl
inc
in
and
movb
mov
pop
mov
rcrl
dec
jmp
shlb
icebp
bound
or
cmp
addr16
cltd
add
dec
aas
push
stc
out
fsubl
push
jne
adc
jp
out
push
mov
jl
mov
cltd
clc
add
sub
push
jmp
xor
mov
adc
out
lea
xlat
shlb
lahf
dec
xchg
cmpsb
ficoml
and
arpl
jle
mov
add
add
adc
inc
inc
xchg
imul
pop
dec
mov
rcr
insb
and
lret
outsb
loop
rclb
cwtl
scas
push
dec
call
nop
add
divb
out
mov
cltd
pop
push
inc
imul
sbb
aaa
jo
lods
lahf
out
sub
inc
aaa
flds
outsl
lods
xchg
mov
xchg
mov
stos
dec
enter
add
jne
jno
xor
adc
in
and
outsl
mov
xchg
out
inc
in
stc
add
data16
mov
dec
leave
les
pop
and
or
adc
inc
xchg
mov
dec
mov
inc
movsb
cmp
xchg
orl
push
jnp
sbb
dec
imul
sbb
jnp
mov
lea
test
mov
jmp
inc
sub
mov
mov
lods
adc
stos
out
dec
pop
inc
inc
movsl
mov
fs
fdivl
inc
and
imul
in
roll
pushf
add
xor
mov
lahf
xlat
push
add
push
sub
inc
push
les
in
sti
sub
imul
sbb
mov
in
imul
shrd
cmp
jns
pop
and
add
push
mov
and
cli
fisubs
push
in
jnp
push
xchg
sti
aaa
fs
jge
adc
jmp
mov
jl
pop
xor
aam
mov
in
stos
xchg
lods
shr
mov
lea
pop
add
dec
mov
adc
cmp
incb
int
xchg
jne
or
into
es
xchg
pop
insl
sub
xchg
mov
xchg
push
add
inc
mov
pop
jbe
sahf
jne
rcrb
add
jne
lock
jle
adc
push
or
mov
movsl
pop
pop
and
negl
cmp
decb
mov
sti
adc
les
cmc
push
jp
scas
push
scas
or
mov
js
test
mov
or
sub
shlb
cmpsl
jmp
mov
push
sbb
into
bound
mov
and
leave
jne
lret
mov
mov
lds
popa
inc
pop
cmp
das
jl
js
add
mov
push
jle
fstl
dec
insl
mov
pop
test
movsb
inc
fimuls
aad
lret
mov
scas
cmp
fwait
sub
lret
fiadds
aas
pusha
stos
dec
add
push
add
ja
fadds
jmp
push
xor
ja
cmp
dec
in
aaa
inc
and
fcompl
pop
jge
inc
sbb
jb
or
dec
jnp
jns
sarb
or
add
and
xchg
or
or
xor
fisubrs
pop
jg
push
shl
cmp
insb
adc
std
dec
pusha
loop
xchg
fistps
loopne,pn
loopne
pop
jmp
cmpsl
faddp
not
mov
repnz
push
mov
xchg
cmpsl
cmpsb
stc
jns
jmp
popf
iret
std
les
sbbb
cli
push
jp
scas
shll
mov
or
idiv
imulb
outsl
add
mov
adc
mov
rcll
cmp
add
sub
mov
or
out
pushf
mov
ljmp
jmp
inc
dec
call
or
out
add
sub
cld
lds
data16
pop
in
pop
adc
ret
repnz
loope
in
push
mov
in
and
push
fidivrs
out
scas
pop
xorb
sti
test
clc
sbb
fldenv
mov
xor
mov
add
lcall
or
aam
aad
stos
mov
test
outsb
dec
orl
fnstcw
inc
sub
subb
cmpl
sti
cmp
inc
leave
inc
or
add
fisubrl
fstpt
pop
test
xchg
sbbl
pop
nop
dec
or
int3
mov
jno
ss
pop
adc
and
inc
cmp
mov
loope
cmp
inc
sbb
jmp
dec
je
or
cmp
push
das
jp
pop
dec
push
fnstcw
push
cmp
and
cmc
dec
int3
xchg
imul
inc
sbb
push
fwait
jnp
and
adc
sti
fs
push
in
pop
inc
loope
pop
jl
mov
dec
jmp
clc
ss
jne
and
daa
adc
mov
jmp
jmp
das
xchg
sti
loopne
mov
popa
loopne
out
das
sbb
ja
lods
sub
movsb
fisttps
pop
push
mov
mov
in
jg
movsb
cwtl
add
movsl
dec
dec
repnz
inc
bound
stos
out
lods
cld
xchg
inc
lods
mov
idivb
in
lock
adc
lret
movsb
movsb
dec
insb
insl
push
fisubs
popf
sbb
je
add
push
mov
adc
bound
pusha
scas
mov
pop
std
and
sub
cmp
testl
push
dec
jo
pop
jle
mov
cmpsl
rcrb
mov
and
sbb
push
or
jecxz
cwtl
imul
push
jns
dec
lahf
lahf
andl
rclb
jle
adc
inc
cli
sub
or
scas
inc
sar
xor
imul
mov
popf
lahf
addps
add
shrl
iret
jle
lcall
cmp
inc
jge
js
or
xchg
mov
movsl
dec
adc
mov
mov
xorl
bound
jns
fucomp
adc
shll
testl
cmp
sub
mov
push
into
mov
pop
cs
jb
fnstcw
add
pushf
cmc
or
mov
ljmp
dec
push
inc
ja
stc
sub
in
mov
stc
push
adc
xchg
sub
push
push
dec
add
or
mov
xor
add
inc
nop
adc
and
pop
int3
xchg
jle
movsb
popfw
outsl
mov
scas
sarl
cmc
mov
mov
mov
jae
rcrl
outsb
cs
push
dec
pop
jne
out
jg
jecxz
mov
pop
mov
cmp
xchg
mov
in
call
xlat
inc
sbb
orb
sbb
jns
jb
lcall
insl
dec
sub
adc
or
inc
xor
aad
cmp
cwtl
js
movsb
push
ficoms
iret
pop
jnp
xchg
stos
push
push
cld
xor
cmp
lcall
jo
pop
mov
fnstsw
mov
aas
loop
inc
ds
xorb
pusha
inc
mov
out
lds
push
push
or
leave
pop
lcall
push
ja
mov
add
imul
out
xor
out
repz
loopne
jo
mov
jnp
inc
repnz
mov
xor
mov
vpxord
cmc
fadd
aad
push
add
loopne
add
pop
test
push
and
mov
call
lret
mov
ljmp
fistps
push
out
in
push
insb
bound
out
jge
or
cs
aaa
mov
sti
cli
push
jmp
lds
xchg
popf
imul
sbb
out
das
je
pusha
mov
mov
add
scas
repz
or
aad
mov
int
add
popa
int3
pop
xor
movl
pop
or
cwtl
out
pop
lock
mov
shrb
cmp
jns
inc
sbb
lods
test
test
int
cld
dec
gs
cmp
icebp
sub
mov
je
repz
jne
fidivs
pushl
cmp
or
pop
dec
fs
sti
push
fcoms
movsl
out
sbb
test
jmp
ds
sub
sub
aam
mov
cmovne
std
cltd
sbb
int3
xchg
pop
push
shlb
or
inc
mov
pushf
iret
roll
andl
mov
decl
and
mov
mov
cli
xchg
fprem1
and
jle
test
and
int3
cwtl
jb
int3
loope
fsubs
jo
enter
rcr
add
cltd
inc
rcll
test
ja
sbb
ja
imul
pop
iret
mov
jmp
pop
adc
cwtl
cs
pop
mov
cmp
push
subl
out
sbb
mov
stc
mov
inc
sub
add
pop
das
je
push
xchg
or
pop
mov
fwait
mov
sahf
or
add
jnp
jmp
in
mov
jbe
int
shlb
lcall
mov
add
jge,pn
test
or
mov
and
cmp
pushf
in
sbb
and
and
shl
sahf
mov
sbb
fldcw
cld
gs
fnclex
push
mov
push
pop
leave
adc
nop
mov
inc
sbb
ja
sbb
mov
xchg
mov
loope
pop
aad
push
xchg
shll
jge
or
xor
inc
xchg
movsl
xchg
jnp
inc
xchg
adc
subl
insb
fcomps
cmc
sbb
push
sub
inc
cmpb
in
sbb
sub
hlt
add
mov
mov
mov
pop
in
scas
add
aad
and
das
push
sub
mov
inc
push
mov
pop
stos
dec
jb
cmp
mov
cmp
fdivs
movsl
subb
push
jp
faddl
cmp
sarl
cmp
fstpl
xlat
int3
ljmp
sbb
sarb
jl
mov
dec
sti
cwtl
and
sbb
adc
in
out
fdivrs
xchg
outsl
sub
cmpsb
shrl
mov
and
imul
andl
push
add
shr
insb
dec
cmp
jl
jge
push
pusha
inc
imul
stc
push
loop
mov
and
aas
shrl
mov
ss
push
or
test
lret
sbb
inc
mov
cwtl
mov
sar
fldt
aad
cmp
andb
lret
in
out
xchg
add
xor
and
notb
int
push
xor
xchg
in
call
mov
push
xchg
lret
imul
fimuls
pop
cltd
mov
scas
xchg
sahf
dec
xchg
xchg
pushf
sbb
nop
sbb
mov
xor
mov
dec
notl
jns
sub
push
dec
or
cmc
dec
mov
shll
mov
ds
add
sub
push
pop
mov
dec
lea
sbb
inc
pushf
cli
inc
enter
stc
cmp
inc
dec
sbb
push
cmc
clc
push
sub
test
push
divl
nop
xchg
int
jbe
adc
push
sub
or
cmp
in
pop
imulb
inc
inc
and
sbb
xor
or
int3
xchg
pop
shrb
cli
adc
push
shrl
lret
cmp
or
inc
jne
push
mov
xchg
pop
lock
movsb
ret
cmpsl
add
in
fimuls
sbb
jae
mov
mov
lods
aam
inc
rcl
xor
movsb
add
stc
add
jge
movsl
jne
mov
rol
pop
pusha
icebp
loop
mov
mov
jb
and
mov
and
ret
in
fistpl
sbb
mov
adcb
test
mov
fsub
das
lcall
or
rcrb
jp
nop
hlt
cmp
test
data16
add
xor
add
jno
sub
and
icebp
stos
sbbl
test
insb
ds
pop
pop
in
loope
xchg
popf
hlt
repz
adc
adc
lods
and
je
arpl
cmp
out
sbb
sahf
mov
pop
and
inc
leave
gs
loop
and
cmc
hlt
test
push
xor
aad
push
fbld
sub
in
lods
pop
adc
das
cwtl
sbb
std
mov
jg
aas
push
ret
push
fidivrl
aam
mov
cltd
sub
and
inc
xchg
jne
push
lods
mov
in
pavgw
imul
fwait
pop
stos
push
into
ja
lods
nop
sbb
cld
ja
jno
cld
mov
push
or
stc
add
cwtl
add
into
mov
adcb
mov
mov
dec
mov
dec
data16
ds
mov
fs
sahf
out
popa
pop
dec
addr16
or
mov
clc
in
and
inc
dec
ret
popf
and
mov
bnd
call
je
rcl
cli
pushf
pop
pop
sbb
inc
je
leave
and
cmp
xor
mov
inc
int3
clc
and
sub
loopne
push
cmp
pop
cmc
pop
adc
dec
repnz
jns
popa
insb
xor
fwait
jnp
dec
fwait
add
pop
imul
dec
mov
add
stos
push
push
jp
mov
cmpsb
stos
sbbl
jns
daa
pop
inc
clc
xchg
insb
sbb
xchg
jno
xchg
loop
dec
add
cmp
ljmp
push
andl
inc
lahf
sti
cmc
xchg
pop
pushf
and
inc
mov
push
and
mov
pushf
in
inc
and
sub
mov
cmp
mov
flds
out
jne
cwtl
jae
out
jl
push
sbb
je
push
cmp
fs
xor
aas
mov
mov
dec
lahf
aaa
or
imul
inc
cmp
sub
lcall
sbb
jbe
mov
sub
pop
out
xchg
ljmp
test
xorb
cmp
mov
cmp
or
adc
inc
jg
fimull
insl
les
cmp
jg
sub
jg
jo
adc
sub
inc
push
int3
dec
ja,pn
repnz
fs
out
sti
xor
adc
mov
in
ss
scas
mov
mov
js
and
testl
fndisi(8087
push
iret
pop
add
lret
flds
into
or
leave
adc
out
icebp
pop
out
gs
test
pop
xchg
push
call
mov
push
test
test
scas
adcl
movsb
test
lret
repnz
push
aas
and
push
mov
pop
push
dec
sbb
or
cmpsl
into
stc
testl
dec
sbb
rolb
out
mov
add
enter
adc
pop
addr16
cmpsl
sarb
scas
jg
out
pop
push
jns
movsb
mov
out
add
dec
pop
adc
and
insb
push
pusha
pusha
jno
sbb
xchg
out
push
adc
push
loopne
inc
notl
jne
jae
out
mov
ret
push
pop
pop
ljmp
pop
mov
arpl
push
inc
and
cmp
mov
sub
inc
inc
in
and
pop
test
inc
stc
cmpsl
stc
loope
movsb
mov
out
or
inc
sbb
ja
dec
mov
or
out
push
add
xor
jecxz
pop
cmp
flds
jae
mov
imul
fimull
sarb
push
dec
inc
stos
add
outsb
dec
lock
pop
add
pop
scas
add
pop
jbe
and
push
adc
sarl
xor
or
add
pop
inc
dec
inc
out
xchg
add
ds
ja
xchg
insb
mov
mov
jmp
and
push
dec
rcrb
push
je
push
sbb
in
cmpsl
sub
leave
in
xchg
xchg
scas
fistpl
das
xchg
es
lahf
addr16
add
xor
arpl
shl
jne
mov
aas
fs
adc
lahf
sub
pop
mov
push
jmp
xchg
or
mov
mov
outsb
pop
loop
movsb
flds
xor
sti
or
adc
push
leave
cmc
sbb
dec
push
fldl2e
mov
enter
sbb
cmp
sar
push
push
adc
or
leave
sbb
inc
cmp
movsl
push
cmc
aaa
mov
test
dec
and
popa
jb
fwait
push
push
mov
jns
movsb
sti
mov
xor
fists
push
in
add
mov
daa
mov
push
dec
in
fsubl
push
pop
adc
xchg
clc
inc
fmuls
sub
movsl
aad
lock
negl
sub
dec
int3
idivb
ja
sub
fmuls
aaa
movsl
lock
cmc
xchg
ja
popa
jge
data16
push
jl
aad
push
cmp
mov
inc
leave
cmpsb
add
mov
xchg
jecxz
pop
jbe
icebp
mov
imul
fwait
mov
outsb
mov
mov
out
int3
xlat
xchg
pop
sbb
repz
pop
jbe
push
out
add
sahf
orb
daa
pop
and
sub
inc
push
scas
fsubs
hlt
mov
repnz
aaa
lods
xchg
dec
mov
and
xchg
andb
xor
out
sbb
call
outsb
mov
dec
inc
add
and
incb
xchg
lret
dec
rol
clc
cmp
add
pop
lods
mov
cmp
sub
ja
addb
sbbl
inc
lret
pop
jns
test
scas
jo
mov
dec
pop
int3
dec
sahf
int
js
adc
jne
lods
sahf
ljmp
daa
adc
pop
push
std
mov
mov
mov
mov
fstl
jbe
insb
push
xchg
loope
xlat
pop
pmovmskb
ret
std
orl
sub
or
push
icebp
imulb
clc
mov
pop
movsb
push
lds
jecxz
fs
mov
pop
mov
aad
outsl
jns
inc
cli
jg,pn
scas
cmp
pop
mov
pop
pop
jo
inc
xchg
xchg
ljmp
adc
pushf
fdivl
sbb
lock
xor
cmpsl
jmp
addr16
mov
xor
cmp
popa
pop
insl
ret
push
add
sti
test
jmp
les
jae
sti
in
lea
sbb
in
lods
adc
movsb
movsb
lods
jae
xchg
jb
or
insb
insb
roll
outsl
dec
jg
pop
clc
test
mov
mov
inc
lea
pop
add
dec
mov
jns
in
xchg
mov
sbb
stc
adc
inc
jae
adc
mov
xor
mov
pushf
push
inc
lret
test
dec
jmp
sbb
out
add
scas
mov
outsb
cmp
cmp
adc
cmpsl
jne
cmp
inc
dec
test
loopne
int
or
push
xor
stos
es
fs
lods
xchg
push
and
testb
adc
jno
ret
dec
unpcklps
stos
xor
vpsubd
push
cmp
xor
mov
cmp
pusha
inc
mov
mov
aam
das
fdiv
sbb
sub
inc
psrld
or
sub
aaa
mov
pop
int
insb
out
ljmp
loopne
push
cs
pushf
xchg
and
adc
sub
jle
rcll
cwtl
jae
pushl
inc
pop
mov
sub
push
xchg
shrb
add
sbbl
cmpsb
dec
iret
dec
mov
loopne
rcrl
push
ja
jne
xchg
sahf
xchg
sbb
jnp
fnstsw
cmpsl
mov
adc
adc
adc
clc
lahf
cmc
stos
mov
insl
sub
push
mov
pop
lcall
out
sti
fwait
jmp
xchg
loope
std
call
mov
push
dec
push
imul
pop
dec
xchg
xchg
lret
xchg
sub
sbb
cmp
es
repz
scas
icebp
test
cmp
int3
js
mov
scas
les
cmp
mov
addr16
sub
mov
ja
sbb
sub
movzbl
daa
lret
adc
nop
leave
sarb
mov
adc
pop
lret
sub
incl
pop
mov
out
filds
sbb
sub
repnz
pop
test
stos
inc
ret
dec
cs
add
scas
ret
icebp
sub
notb
rol
or
jb
add
sarb
rorl
inc
jg
and
cli
aad
inc
mov
jo
js
xchg
cmp
insl
pushf
jmp
subb
jecxz
sub
and
daa
ret
repz
test
or
mov
cmpsb
adc
jne
roll
cwtl
mov
dec
and
mov
repnz
inc
test
push
mov
int
movsl
sub
stos
push
out
shlb
dec
jmp
adc
sub
daa
cmp
rorl
mov
and
std
shll
out
xor
mov
mov
fcoms
dec
dec
insb
lods
insb
mov
inc
sbb
cmp
lret
mov
scas
mov
addl
sbb
mov
shrb
pushf
sub
xor
and
lret
mov
loop
fmul
loop
adc
enter
leave
dec
pop
cmc
jmp
and
repz
shlb
inc
mov
shrb
mov
lds
pop
inc
mov
cltd
pop
popa
cmp
negb
ds
or
neg
xchg
jns
sbb
or
sbb
and
fadd
xor
xor
push
adc
loope
fwait
mov
jge
inc
daa
sbb
sub
in
pop
xchg
jp
imul
xor
pop
jle
shrl
shl
sbb
mov
mov
sbb
rorb
pop
inc
add
push
ret
add
or
aaa
cmc
cmp
jno
pusha
ljmp
in
lahf
mov
adc
sub
lds
mov
pop
out
ret
enter
add
mov
aam
add
push
iret
push
std
notl
mov
cmpsl
push
add
lds
shlb
hlt
add
rcll
jnp
aam
shlb
lret
mov
pop
mov
xor
fnstcw
lods
lock
mov
repnz
mov
filds
dec
xchg
fidivl
adc
push
test
lcall
leave
ds
pop
dec
out
mov
and
inc
mov
pop
out
sbb
lret
stos
addr16
lcall
outsb
call
cmc
nop
jmp
sbb
jmp
and
pusha
xor
subb
push
daa
jo
lea
pop
fwait
mov
xor
push
add
js
scas
lahf
enter
xor
sti
js
in
in
push
mov
push
adcl
das
mov
enter
cmpsb
movsb
cmc
and
mov
aad
sbb
je
scas
iret
aaa
test
pop
fcom
dec
insb
push
cs
loop
xor
xor
into
test
pop
jnp
sahf
cmp
inc
lahf
mov
icebp
ljmp
popa
adc
ror
jmp
bswap
test
aas
jns
stos
lods
mov
sub
iret
mov
and
std
lods
repnz
lret
mov
sub
adc
mov
dec
jl
xchg
int
sub
test
popa
stos
test
mov
add
push
push
fidivrs
pop
xchg
loop
std
mov
out
testb
scas
push
insb
pop
jecxz
mov
push
cmp
push
mov
xchg
stc
mov
int3
xchg
jmp
jo
add
or
xchg
into
mov
add
popa
xor
sub
mov
aam
jae
les
hlt
fstps
xor
mov
ror
out
lea
mov
mov
into
loop
mov
sbb
idivl
inc
mov
add
lret
imul
adc
outsb
push
sbb
jno
out
lret
jge
movsl
std
adc
xor
test
ret
xchg
and
xchg
aaa
sbb
mov
ret
add
push
dec
push
pop
add
inc
mov
mov
mov
fbstp
add
mov
scas
mov
push
rcrb
into
enter
rclb
sub
lods
push
add
cmc
ror
stos
mov
xchg
add
cmp
push
pop
push
mov
mov
and
sbb
mov
adc
cld
sub
hlt
pop
lret
rolb
cmpsb
ss
fwait
ret
mov
aad
inc
subl
xchg
jae
out
movsb
jno
and
and
sbb
xchg
and
add
cmpl
ret
push
and
add
inc
imull
adc
push
lock
jmp
xor
pop
adc
xor
clc
cwtl
cli
cmc
mov
loop
imul
repnz
sti
jecxz
dec
loop
je
or
iret
cmpsb
jnp
xchg
adcl
fistl
cmp
orl
jle
and
xor
sbb
sub
outsl
fwait
rcrb
aam
mov
mov
cmpsl
xor
rol
mov
es
inc
addl
cmp
jo
xchg
iret
xchg
lea
cmpb
cmp
lock
outsb
test
xchg
mov
cmp
jl
shrb
aas
gs
jp
xchg
ret
mov
push
mov
add
clc
cmp
in
xchg
loop
dec
pop
lcall
mulb
inc
jle
add
in
fstp
inc
pop
and
mov
roll
jo
leavew
mov
sub
aas
test
popl
mov
push
sti
cltd
and
adc
cmp
mov
mov
mov
loope
pop
loopne
lahf
cmp
subl
push
xchg
sub
sahf
add
enter
adc
sbb
sbb
dec
outsl
push
pop
push
cmp
add
pop
rcrb
adc
jno
sub
ja
addr16
in
fdivs
dec
mov
xchg
ficoml
xor
mull
pop
loopne
add
bound
repz
adc
xor
sub
inc
sub
dec
adc
inc
inc
scas
test
adc
mov
mov
and
add
daa
das
nop
pushf
pop
add
sub
subl
xlat
stos
jecxz
pop
xor
push
mov
xor
add
ffree
pop
push
adcb
adc
jge
push
jns
push
add
stc
sahf
xchg
inc
rcrl
jl
iret
jge
movsl
pop
cwtl
call
and
lods
sti
xchg
xchg
iret
rcrb
and
loope
ss
and
and
adc
nop
adc
pop
mov
and
mov
scas
rolb
lahf
jae
xor
push
xor
mov
stos
sub
sarl
inc
out
insl
xor
cmc
push
fs
add
dec
mov
or
pop
movsb
je
cmpsl
cmp
sbb
mov
and
and
jae
push
into
xor
jns
gs
or
cwtl
adc
out
out
push
outsb
in
pop
add
sub
outsl
pop
inc
adc
xlat
sub
fistl
pusha
xchg
cli
repz
enter
inc
pusha
adc
xlat
pop
insl
or
and
cmc
aas
xorb
int
shll
arpl
test
adc
jbe
xchg
iret
in
orb
fstpl
adc
test
xchg
lahf
adc
xchg
daa
rcrl
jmp
mov
xor
shr
dec
aas
inc
push
into
aas
jge
mov
call
aad
notl
mov
imul
sbb
sub
aad
insl
mov
adc
sub
outsb
lods
mov
dec
ret
jecxz
into
pop
adc
sbb
pop
cmpsl
sbbl
in
sbb
imul
popa
sub
ljmp
ret
jne
pop
sub
pusha
pop
mov
fstpl
inc
popf
fwait
push
cmp
xor
jnp
or
pop
lds
cmc
outsl
push
jbe
test
xor
jo
fdivrl
fstps
push
mov
leave
adc
cmpb
adc
shrb
push
mov
adc
adc
and
jbe
mov
in
loopne
or
sbb
repz
inc
or
or
lahf
pop
popf
dec
ljmp
ja
test
sahf
xchg
addl
add
sub
test
adc
or
loope
adc
jle
jg
pop
mov
fistpll
mov
ss
inc
popl
add
mov
cmp
fnstcw
dec
mov
inc
or
xlat
addr16
adc
fcomps
ss
push
xor
clc
xchg
mov
mov
fmulp
fadd
adc
and
dec
or
sbb
daa
inc
xchg
frstor
adc
aad
mov
lds
mov
push
jl
dec
sbb
inc
add
dec
cmp
lahf
loopne
test
test
fisubrl
and
insb
jg
sahf
mov
mov
inc
or
arpl
push
sub
xlat
add
lods
rorb
stos
mov
sub
call
mov
rorb
mov
mov
cs
loop
hlt
push
les
dec
test
cmpsl
out
inc
aad
jle
push
ret
lock
mov
mov
fwait
cmpsl
pop
pop
jbe
mov
xor
scas
pop
ja
es
ret
subb
sub
push
rcr
gs
mov
sarb
jle
sbb
or
xchg
and
xchg
sbb
inc
scas
mov
fcomip
shll
add
mov
jne
or
push
movsb
leave
ss
cmc
and
pop
movsl
pop
outsb
je
xor
add
xlat
mov
inc
pusha
lret
fcom
jno
xchg
mov
push
dec
ret
mov
popf
mov
sbb
clc
and
pop
sub
setae
fwait
jge
and
xor
ret
js
cmp
push
sbb
add
jp
dec
and
ficomps
ds
jo
rorl
pop
mov
adc
or
fcoms
lahf
lods
loop
xchg
lock
lock
sbbl
adcb
cltd
inc
pop
jg
insl
xor
or
mov
dec
lea
lock
ret
dec
cmp
jecxz
andl
pop
pop
sahf
jo
daa
mov
pop
sbb
jnp
and
mov
jle
xchg
dec
push
and
adc
pusha
xchg
inc
dec
sub
xor
inc
pushf
pop
imul
outsb
adc
xchg
adc
loopne
mov
xor
icebp
test
fstl
mov
enter
scas
gs
std
dec
push
xor
add
es
add
push
mov
jb
jecxz
sbb
fcomps
add
mov
loopne
nop
sub
add
xor
js
into
or
add
rorb
pop
pop
leave
iret
sub
lret
sub
cld
push
mov
andb
lahf
sti
push
or
adc
iret
sub
cltd
mov
push
inc
sbb
mov
adc
outsl
xor
shlb
fwait
and
sbb
imul
cmpsl
mov
cmp
stos
aas
jecxz
dec
dec
sub
push
dec
ret
leave
sub
jmp
ja
add
orb
int3
pushf
repz
stc
push
lahf
inc
addr16
sti
and
pop
aas
add
lds
adc
fwait
lea
fwait
mov
inc
xchg
mov
dec
lods
add
jg
aam
xor
push
lret
stc
xor
pop
icebp
cmp
or
cmc
fucomi
jle
jp
lock
lahf
addr16
mov
shll
inc
adc
sbb
sub
cmp
sbb
add
mov
loop
sub
pusha
sbb
sbb
dec
lahf
leave
sbb
or
sbb
pushl
mov
or
xchg
aaa
addl
mov
call
xor
xlat
pop
jbe
and
sbb
sti
dec
mov
repz
pop
rorb
and
adcb
sub
dec
or
xor
sub
jnp
jnp
sbb
lock
sub
jnp
dec
jne
jne
push
scas
xor
pop
ss
dec
cltd
mull
pop
push
mov
lods
loopne
inc
mov
mov
mov
or
stos
sbb
push
inc
jmp
and
mov
cmp
cli
pop
lds
inc
addr16
cmp
call
in
xchg
test
mov
xor
xor
jno
cli
cmpsb
jecxz
mov
or
add
mov
jno
fidivrs
or
std
sbb
in
call
adcb
dec
add
sbb
sbb
enter
scas
lcall
lret
xchg
mov
mov
les
inc
sbbl
inc
out
cmp
jle
mov
loopne
xchg
out
pop
mov
fdivr
daa
xor
popf
shll
push
lahf
testb
push
mov
daa
fs
loop
push
inc
in
loop
addl
int
push
outsb
pop
add
fisttpll
push
bound
adc
or
cmp
add
xor
xor
fsubp
jbe
push
dec
adc
outsb
jp
xchg
xor
jmp
idiv
aas
sbb
cli
push
faddp
dec
das
outsb
andb
xchg
idivl
push
inc
movsb
and
js
in
fisubrs
inc
adc
in
std
pop
push
sub
inc
sbb
add
or
inc
lahf
mov
rcll
jae
fldt
lcall
adc
test
push
xchg
loopne
notl
es
push
aaa
mov
sub
mov
jne
cmpsb
popa
xchg
and
inc
xchg
mov
jg
jle
repz
sbb
and
xor
jbe
mov
mov
pop
cmp
xor
xchg
pop
cmp
pop
cmpsl
ss
jo
movsb
dec
pop
mov
pop
aam
or
clc
adc
and
pop
aaa
adc
mov
test
pop
mov
pop
and
fidivrs
aas
je
sar
int
inc
xorl
jbe
lock
mov
ja
mov
dec
adc
iret
xchg
out
cmp
mov
sbb
push
mov
sub
bound
fcmove
sub
jne
jbe
push
cld
cs
in
add
pop
stos
cli
mov
mov
mov
insb
jl
into
addr16
jg
xor
mov
jb
add
pop
inc
push
pop
enter
nop
std
cmp
loope
jmp
enter
sub
out
xor
fcmovnb
pop
sub
cmp
test
pop
test
test
test
loop
and
sbb
lods
subl
mov
xor
cmpsb
pop
pop
dec
loopne
jmp
arpl
in
or
jl
push
call
cmp
jnp
xchg
repz
lcall
inc
ret
push
cld
daa
sub
add
mov
pop
inc
aaa
bound
and
add
aad
scas
sbb
inc
lods
shlb
inc
pop
jnp
sbb
cli
scas
mov
dec
dec
mov
iret
jns
dec
ds
subl
scas
sar
push
aaa
sar
dec
inc
pusha
and
push
invd
repz
in
add
or
and
dec
cmpsl
ficomps
add
loopne
push
idiv
imul
mov
adc
push
xor
insb
fcmovb
dec
and
gs
mov
pop
mov
mov
movsl
cmp
call
roll
cmc
in
mov
rorl
and
push
rcrl
loop
sbb
ds
fsubl
movsl
mov
pushl
mov
mov
cmc
push
sub
popa
test
add
push
mov
in
in
or
cmp
cltd
lret
inc
inc
push
mov
or
sarl
mov
aas
fbld
popa
push
lds
adc
ror
out
dec
push
and
arpl
mov
aad
add
das
mov
xlat
xlat
in
adc
jo
and
adc
pop
imul
mov
push
sub
out
inc
aas
jbe
bound
dec
xchg
and
pop
cmp
xlat
add
mov
mov
fucomp
push
push
mov
jp
ja
sbb
ret
loop
inc
adc
shl
pop
push
jnp,pt
es
push
cmpsl
repz
movsb
ret
push
aad
aaa
jns
movsl
mov
pop
lret
ja
repnz
insl
jp
scas
sbb
fnstsw
and
sti
and
in
daa
mov
push
jle
push
mov
aas
imul
jge
loopne
pmullw
sbb
mov
std
ja
fnsave
inc
mov
inc
sbb
std
mov
or
and
dec
sub
jnp
xchg
fcompl
mov
and
pop
cli
or
xor
cmpsb
movsb
stos
lods
mov
lock
mull
cmp
add
mov
rcrl
repz
jbe
cwtl
ljmp
cli
xchg
mov
nop
cmc
adc
test
and
jl
push
jnp
test
or
pop
mov
xor
mov
or
dec
hlt
jb
imul
xlat
enter
bound
pop
jg
cmp
movsb
add
push
sub
test
ficomps
jmp
mov
jecxz
fcomi
cmp
loop
pusha
push
xchg
insb
push
or
scas
lcall
inc
stc
or
sub
cld
mov
in
mov
mov
mov
inc
bound
popf
mov
mov
sbb
push
cmovl
sub
pop
repz
cmc
int3
out
jbe
movsl
add
push
inc
faddl
es
jo
popa
jns
pop
mov
mov
sub
sub
idivl
or
mov
outsb
pop
or
xor
shlb
xchg
cli
push
mov
xchg
imul
and
ret
jnp
jmp
add
ljmp
and
shl
push
rcll
xor
lcall
or
push
mov
inc
testb
push
mov
mov
lret
push
out
in
dec
dec
mov
out
sti
movsb
lods
sub
lcall
fldpi
dec
mov
cwtl
fdivs
int
lods
push
fisubrl
inc
mov
out
pop
dec
add
lcall
add
pushf
mov
cmp
xchg
push
dec
and
xchg
addr16
mov
mov
negb
cmp
jae
mov
dec
sbb
ds
sbb
push
je
sahf
test
pop
and
push
cld
call
push
das
push
mov
xor
test
or
cld
jae
push
insb
ljmp
mov
dec
fisttpl
jae
sarb
fwait
insb
add
mov
out
in
cs
jne
enter
decb
push
in
xchg
loope
test
imul
pusha
pop
in
adc
subb
and
js
jno
cmp
sti
or
in
sbb
sub
repz
lods
sub
outsl
cmp
clc
xchg
ja
js
xorb
loope
mov
push
mov
pop
pop
das
sbb
stc
mov
mov
lahf
or
in
jle
cmp
addr16
and
movsl
outsl
decb
xlat
push
sbb
push
inc
rolb
jno
inc
fidivrs
lahf
cli
push
scas
lds
std
cs
out
pop
fstps
in
adc
scas
jnp
stc
xchg
mov
sub
cmpsb
mov
xchg
or
in
call
xor
mov
dec
push
nop
pop
dec
divb
dec
imul
mov
imul
negl
mov
push
mov
fiadds
aam
addr16
bound
or
sub
dec
dec
sbb
cmp
test
sbb
das
dec
std
add
arpl
xor
lret
jl
out
test
and
push
mov
pop
inc
inc
push
cmp
scas
cltd
inc
sbb
daa
push
xchg
cmpsb
cmpb
outsl
in
push
lods
ljmp
lods
or
aaa
inc
pop
lea
shll
sbb
shrl
inc
push
adc
jbe
xor
mov
nop
les
jne
jno
xor
andl
jg
stos
js
sub
dec
push
test
test
inc
std
ljmp
inc
adc
jnp
repz
mov
fiaddl
pop
ficompl
sbb
push
fisubrl
or
mov
sbb
jbe
andb
push
lds
test
inc
pushf
call
push
push
aaa
in
outsb
fwait
mov
push
and
fildll
out
mov
ss
gs
rolb
push
leave
xchg
sub
int
inc
sub
ja
test
lcall
outsw
lea
popf
mov
fs
or
push
pop
xchg
iret
lea
int3
ss
hlt
lds
sbb
lcall
inc
loope
aaa
push
sub
test
adc
mov
cmp
push
sbb
sahf
sub
jns
jb
or
push
aas
cmpsl
aaa
inc
mov
icebp
jp
fimuls
inc
inc
xor
mov
mov
xlat
sub
aas
lcall
out
popf
adc
mov
enter
test
adc
xlat
dec
in
scas
pushf
insb
mov
pop
bound
jae
fidivs
mov
adc
cmpsb
pusha
lods
jecxz
push
push
ja
mov
jecxz
cmp
ss
add
lcall
pop
scas
or
es
xor
ljmp
mov
lret
cmp
cld
aam
shlb
insl
jns
ja
mov
loop
fsubp
das
jne
mov
or
and
mov
jl
xor
pop
cmp
pop
mov
pop
xchg
test
push
cmp
xlat
cmp
fs
jo
and
adc
insl
mov
xor
daa
fwait
jg
int3
pop
xor
stos
and
ja
mov
dec
add
jno
lods
les
cmc
jo
or
aad
dec
jmp
daa
in
ja
leave
pop
mov
mov
pop
and
sahf
dec
add
pop
sbb
fcmovbe
mov
pop
xlat
cmpl
sarl
scas
nop
lcall
cmp
sub
test
insb
nop
fdivl
cld
or
loopne
aad
imul
xor
dec
call
xlat
jne
ss
add
jmp
fdivrl
xor
dec
add
loope
or
sbb
add
outsb
enter
dec
loopne
push
aam
pop
and
mov
jg
divb
clc
add
jne
icebp
push
int
xchg
push
lea
or
ss
insl
push
ja
daa
push
iret
aas
shrb
jb
cmpsl
cli
mov
push
daa
int3
lret
pop
mov
sbb
cmpsl
flds
and
int3
inc
push
mov
daa
ss
jns
and
arpl
mov
jne
or
xchg
stos
push
aas
sbb
jne
pop
mov
mov
repnz
mov
xchg
inc
je
or
sub
out
jecxz
inc
scas
mov
xchg
cmpsl
dec
test
ret
lea
adc
mov
xchg
lret
xor
notw
or
in
push
aam
rorb
jb
push
testb
pop
mov
mov
loopne
xorl
push
adc
add
std
dec
testb
push
out
pop
cmp
jo
mov
dec
frstpm(287
pushf
fcomps
out
add
and
mov
lock
xchg
pop
sub
movsb
inc
aam
ljmp
icebp
in
fbstp
pop
shlb
sub
sahf
out
or
sti
lock
jge
fsubl
inc
and
mov
sti
mov
xchg
push
out
cmpsb
in
mov
dec
aam
fistps
in
push
push
gs
aad
into
icebp
mov
xchg
in
cmp
addr16
movsb
inc
add
add
sub
test
sub
push
insb
and
repz
add
movsl
xor
mov
fsubrp
lret
add
xchg
les
mov
mov
and
add
sti
mov
mov
adc
pusha
adc
jo
inc
in
out
ret
shll
inc
dec
push
out
lret
adc
lea
push
sub
hlt
cmp
xchg
jle
cmc
les
pop
jnp
sbb
pushf
mov
ret
cltd
cli
pop
ss
jle
cld
xchg
popa
dec
jle
mov
lret
incl
or
push
dec
daa
movsb
push
mov
stos
loopne
std
and
mov
and
cmpsl
cmp
repnz
mov
in
out
cld
add
fisttps
mov
push
cltd
mov
and
sub
sbb
fildll
or
imul
jns
fadd
inc
leave
sbb
popa
xor
adc
push
or
mov
cmpsb
int3
outsl
test
sbb
dec
xlat
or
and
pop
dec
jae
pop
fisubl
and
cmp
loope
or
inc
imul
cmp
fwait
loopne
mov
sub
cmp
lea
pop
dec
mov
push
mov
repz
xor
leave
mov
pop
lahf
pop
mov
adc
xor
mov
pop
pop
pop
ljmp
out
ret
data16
dec
mov
xchg
mov
insl
sub
fwait
aam
xor
or
shl
shlb
mov
mov
cmp
cmp
popf
pcmpeqb
push
cld
add
mov
and
fcompl
movsl
shrb
shlb
hlt
shlb
pop
push
jmp
adc
pop
adc
push
jl
bound
push
xchg
scas
dec
sarb
pop
sub
add
jnp
mov
mov
lret
pop
mov
push
icebp
sub
ljmp
inc
add
xchg
xor
jecxz
adc
xor
mov
mov
pusha
and
stos
clc
test
mov
push
andb
mov
or
mov
pushl
repnz
movsb
inc
jmp
pop
loop
adc
jg
and
pop
lret
xchg
xchg
xchg
pop
stos
adc
xchg
mov
andb
fcoml
cli
mov
enter
jp
cmp
ja
imul
ss
adc
pusha
pop
or
pop
sub
jo
test
int
pushf
inc
cld
addr16
imul
enter
inc
push
jnp
add
mov
rol
sar
scas
cmp
jns
jmp
sahf
into
pop
jb
jno
out
arpl
inc
es
push
arpl
jmp
sbb
add
aad
cmp
loop
or
sub
loop
push
jg
jae
pop
xchg
inc
gs
lock
cmp
stos
mov
mov
je
mov
fildll
xchg
arpl
hlt
test
jae
mov
dec
sub
fildl
push
divb
cmp
pushf
sub
frstor
shlb
mov
aam
jne
les
sub
pop
push
cmpsl
mov
sbb
into
xchg
adc
cs
jge
cmp
fwait
inc
mov
ffree
lea
jns
mov
movsb
pop
fnstenv
dec
aam
add
xchg
arpl
movsb
sub
xchg
jns
sbb
dec
cld
fstpl
xchg
xchg
out
add
push
jnp
scas
popl
fcomps
or
push
or
mov
das
or
xchg
jns
arpl
negl
aas
test
xchg
lahf
pop
sbb
aad
sub
stos
inc
aas
jae
stos
mov
xchg
jecxz
in
fucom
mov
mov
adc
mov
jp
lret
rcll
jbe
in
mov
mov
jne
hlt
inc
cmp
mov
mov
inc
inc
loope,pn
in
xor
aam
pop
xchg
stos
jmp
adc
dec
adc
nop
gs
fisubs
mov
aam
mov
xchg
fwait
adc
fcoml
add
ds
gs
xlat
mov
jno
adc
mov
or
pop
mov
pop
int3
mov
dec
jo
out
mov
popa
gs
mov
leave
sub
stos
clc
jns
pop
lret
jae
negb
dec
outsl
gs
pop
jmp
sub
xor
das
mov
int
adc
mov
push
cmp
jl
pop
sbb
jge
sbb
or
scas
gs
and
or
or
pushf
mov
enter
sahf
int
test
add
loop
inc
push
outsl
daa
add
out
jl
xor
jno
fimull
adc
stos
ds
in
inc
aas
inc
mov
aaa
pop
pushf
jecxz
xchg
insb
pop
add
imulb
mov
xor
in
mov
and
sbb
fildll
outsl
xor
ret
icebp
test
mov
aaa
int3
js
jo
in
mov
mov
jmp
xor
jmp
sub
dec
setno
xor
int
jmp
scas
lds
and
in
ret
sub
cmp
gs
imul
jp
into
sub
push
aaa
fldcw
loopne
pushf
ret
or
je
fwait
dec
outsb
add
jmp
and
xchg
sahf
out
lods
dec
and
pop
xor
sbb
xor
xchg
jns
pop
test
lcall
arpl
pop
jo
pop
push
out
inc
nop
xor
dec
and
das
or
pop
fisttpll
in
sub
div
bound
out
xor
or
xor
mov
add
pusha
lcall
inc
ficoml
dec
adc
popf
ffreep
out
pop
out
es
adc
cmpsb
repnz
dec
xor
and
repnz
in
testb
cld
xor
xor
sti
out
push
aas
cmp
mov
dec
scas
adc
cmp
pusha
mov
sarb
xor
sub
cmp
jno
and
scas
cmovnp
sub
rorl
clc
mov
jae
push
push
fimuls
adc
popf
lcall
ja
inc
push
jmp
mov
hlt
out
shll
fs
int3
lret
lods
packsswb
stos
jg
daa
or
jl
add
sub
loope
inc
inc
pop
mov
rolb
add
and
scas
mov
stos
sbb
cmpsb
add
push
into
cmp
fadd
js
fiaddl
adc
or
cs
pop
jb
mov
pop
adc
insb
lret
xchg
pop
popf
push
dec
insl
inc
mov
rorb
sti
jge
dec
mov
adc
ret
inc
add
and
xchg
mov
dec
mov
xor
je
ds
test
aam
jne
rclb
push
psubd
icebp
sahf
add
sbb
int3
or
or
popa
pusha
xchg
xchg
sub
inc
inc
inc
pushf
fnsave
outsb
xor
lods
cmp
jbe
faddl
sbb
push
insb
jp
mov
lods
notb
mov
mov
mov
int3
lcall
shlb
lret
and
stos
jle
mov
fdivrp
cmp
dec
add
popf
aaa
jae
shr
sub
push
cmpb
dec
xor
mov
push
pop
mov
pop
nop
sbb
mov
hlt
es
ret
push
cmp
out
dec
push
xchg
mov
sub
xchg
es
pushf
leave
jbe
inc
add
dec
xor
jle
pop
add
jns
icebp
cmc
xor
cli
leave
ljmp
lea
or
mov
xchg
ljmp
dec
sub
inc
ljmp
inc
hlt
xor
inc
jle
push
sub
add
sarl
sti
jne
adc
adc
xchg
inc
call
cmc
mov
insl
mov
inc
enter
cld
xor
jecxz
inc
mov
lods
mov
push
ss
cltd
push
or
stc
inc
sub
xor
dec
ljmp
push
jle
pop
push
pop
lds
into
push
or
rcll
push
pop
lock
fdivrp
ljmp
movsl
xor
xchg
mov
mov
push
stc
cmpl
lret
xor
mov
fldcw
arpl
out
xor
mov
cltd
lahf
sub
add
ljmp
xor
adc
mov
jb
mov
push
push
sub
mov
xchg
fprem
movsl
xchg
sub
cld
mov
or
iret
jo
xchg
iret
push
xchg
mov
jnp
fadds
cld
push
inc
fisttpll
push
pop
pop
sti
mov
jno
fsub
into
subl
in
cld
sbb
test
and
sub
xchg
adc
jl
jbe
test
adc
cmp
imul
mov
inc
into
fsubl
movsl
scas
pop
pop
mov
out
sbb
mov
jl
daa
inc
inc
mov
aas
cmp
mov
xlat
pop
mov
mov
sbb
ficoml
fwait
adc
hlt
out
xchg
stos
test
sub
sub
sbb
xchg
push
loop
sub
cmp
dec
in
daa
repz
sbb
mov
sahf
cmp
xchg
ret
jl
cmpsl
mov
add
pop
xor
dec
inc
and
in
popl
leave
pop
mov
and
sbb
or
mov
mov
fmull
mov
loop
jl
mov
movsb
rorb
jno
das
add
bound
lcall
pop
fs
int3
sub
mov
jg
aad
add
dec
icebp
lret
or
mov
test
jnp
adc
decb
sub
mov
dec
ljmp
cs
mov
jle
mov
iret
test
ds
out
scas
leave
or
jno
jo
data16
dec
mov
jg,pn
pop
fisttpll
pusha
mov
or
xchg
test
xor
jg
dec
rcrl
and
lods
cli
mov
ret
sahf
xchg
add
jns
mov
nop
lcall
ror
push
enter
xor
xchg
mov
lods
movsl
mov
test
cs
lock
faddp
cmpsb
stos
jmp
inc
xchg
incl
out
jg
subl
sbb
and
sub
push
pop
inc
adc
xchg
andb
into
xchg
or
push
popf
dec
push
pusha
push
stos
mov
and
lods
sub
pusha
stc
sub
sub
imul
jmp
xchg
subl
ja
imul
ret
add
dec
and
adc
cmc
ljmp
hlt
jecxz
or
push
sub
es
sub
sbb
cs
std
mov
js
jne
lods
sbb
pop
push
pop
iret
lods
dec
in
outsb
or
stos
or
cwtl
sbb
push
cmovp
mov
jbe
cs
dec
mov
cmp
mov
pop
cmpsb
jno
fildll
or
push
xor
inc
in
fsubs
bound
idivb
mov
pop
std
add
mov
pop
pop
jp
std
mov
shll
imul
add
fsubrs
push
lods
mov
out
jnp
in
loope
inc
repz
lods
sub
out
xor
sbb
or
ret
mov
int
aaa
xchg
sub
loop
sbb
push
sub
jae
pushf
mov
fcomps
sti
scas
rcrl
js
es
push
ja
add
stos
mov
push
cmc
and
and
mov
lock
or
dec
xlat
out
mov
xchg
pop
jge
cmp
pop
cltd
xchg
sub
ss
mov
sub
mov
xchg
pop
or
jo
sti
pusha
jae
cltd
test
faddl
int
loopne
adc
je
jnp
mov
sub
test
push
sub
push
add
test
add
xor
rorb
mov
addr16
inc
xor
push
test
mov
loop
pop
xchg
or
lds
enter
xchg
mov
rolb
pop
test
enter
movsl
orl
je
cmp
cld
inc
push
outsb
iret
or
les
inc
adc
fisttpl
sahf
push
sbb
pop
mov
pop
jbe
pop
and
lret
and
cmpsl
push
rcll
sub
in
lods
pop
sub
mov
xor
arpl
jmp
clc
mov
mov
xor
icebp
sbb
inc
inc
fwait
in
mov
push
fimuls
nop
xchg
jmp
sub
aaa
mov
jge
imul
push
sbb
pop
and
jbe
shlb
jo
out
leave
mov
or
cmpsl
cmc
adc
and
outsb
pushf
arpl
fists
lcall
xor
int
daa
push
pop
adc
jae
dec
je
ds
cmpsl
gs
xor
aas
mov
loope
sbb
mov
pop
shrb
enter
and
pop
loop
in
out
sbb
sub
jge
inc
sbb
pop
and
sbb
xchg
loop
mov
pop
cmp
push
cmp
jge
mull
cmp
flds
mov
iret
hlt
out
lock
add
sbb
fwait
adcl
cltd
dec
mov
ret
imul
in
dec
cmp
push
adc
cld
cld
or
mov
mov
aas
mov
push
jmp
js
sarb
stos
add
push
pop
dec
jbe
adc
ds
pop
adc
inc
push
jae
std
loope
xchg
int3
fwait
bound
sbb
adc
enter
ret
xchg
aad
imul
push
arpl
mov
pushf
jns
inc
into
jnp
clc
ss
test
xchg
aam
lock
push
into
test
mov
leave
ffreep
out
nop
dec
cltd
and
iret
lods
pop
inc
stc
out
xchg
jnp
imul
cltd
cmp
imul
lret
and
mov
mov
jl
js
test
lock
sbb
int3
pop
pop
imul
xchg
sub
sahf
jns
hlt
pop
aaa
push
xchg
inc
scas
ficomps
mov
push
mov
xlat
pop
and
mov
inc
arpl
push
xchg
fdivrl
mov
aaa
mov
xchg
inc
scas
add
addl
test
xchg
xlat
jno,pt
in
inc
fisubrl
ds
fnsave
js
push
ror
sub
push
shll
lret
mov
out
xor
ret
mov
or
jbe
fwait
mov
jae
data16
sbb
or
adc
sub
stc
mov
or
divl
push
inc
mov
mov
insb
mov
xlat
aam
xchg
sub
in
jl
dec
sub
lds
stos
pop
mov
scas
shl
out
stos
inc
enter
cmpsl
pop
pushf
push
in
mov
es
or
lret
xchg
jne
aam
jge
mov
mov
push
jns
push
sub
xchg
cmp
cwtl
fdivrs
out
inc
lcall
mov
call
mov
jl
jle
and
lods
addl
mov
fnstcw
js
mov
mov
cmp
pop
jecxz
shl
and
push
jns
aas
push
and
cmc
filds
gs
cmp
insb
inc
xchg
cmp
xchg
xchg
mov
jmp
add
jecxz
ljmp
fs
mov
jg
xor
push
std
sarl
jbe
pop
pushf
mov
push
roll
imul
or
in
mov
std
repnz
sub
in
push
xchg
icebp
and
sub
outsb
pop
cmp
cs
sub
std
sub
add
cmpsb
sbb
std
adc
cmp
or
pop
sbbb
jne
jmp
cmpsl
jae
fmul
push
enter
in
fwait
cwtl
adc
adc
adcl
mov
lahf
adc
in
daa
lret
pushf
cmpsl
scas
dec
lods
adc
shr
cli
cmp
in
cmp
xchg
int
movsb
adc
sub
sub
cmp
shlb
int
sarl
mov
stos
sub
mov
pop
shrl
fmull
jnp
add
cmovae
adc
push
fwait
repnz
in
subb
push
xchg
xchg
shll
mov
mov
push
or
inc
add
mov
cmpsl
push
add
fstps
sub
jne
xorl
ss
data16
ret
je
push
push
sbb
repnz
push
ja
clc
adcl
imul
jo
xchg
jle
mov
outsl
jle
out
sbb
pusha
in
add
subb
mov
testl
push
es
lods
mov
lods
sub
aam
xor
decl
dec
fisubrl
scas
lahf
sarb
sub
mov
push
lret
xchg
fcomps
fbld
or
jns
dec
pushf
out
insb
jno
adc
sub
mov
iret
pop
filds
stos
and
pop
lahf
mov
jo
and
sbb
shrl
mov
pop
testb
outsw
jl
scas
inc
jbe
add
adc
ret
or
and
or
jne
push
sub
lea
or
and
mov
sbb
jnp
das
dec
in
mov
mov
and
js
movsb
jae
sbbl
scas
cmp
out
cs
cmp
into
pop
lods
enter
lock
push
scas
or
add
or
mov
adc
rcll
insb
shrb
out
lods
gs
in
loopne
or
jne
lods
mov
imul
ss
xorl
mov
out
push
sub
dec
add
adc
or
pop
hlt
int
sbbb
insb
xchg
cmp
movsb
ret
popa
ret
sub
leave
xor
jecxz
es
fsubs
mov
int
repnz
mov
mov
rcll
mov
sbb
jns
push
mov
inc
inc
dec
adc
add
aaa
sti
push
mov
shl
leave
jbe
xchg
arpl
cmp
pop
mov
subb
nop
sub
dec
in
mov
mov
js
cmpsb
pop
mov
negb
sbb
mov
loopne
and
scas
cmp
sub
jo
popf
inc
aaa
jmp
xchg
out
jg
imul
testb
aam
das
divl
popf
adc
add
cltd
xor
mov
lret
pop
jmp
popa
or
mov
add
aas
mov
dec
js
shll
out
inc
add
dec
sbb
fcmovnbe
int
or
pop
dec
push
in
mov
je
jb
jge
and
or
scas
mov
mov
cltd
imul
ja
mov
or
mov
in
pop
xor
stos
push
pushf
push
cmpsb
inc
nop
in
xchg
mov
pushf
pop
fs
out
stos
mov
sahf
jp
pop
mov
scas
rolb
xchg
sub
or
repz
or
inc
cmp
cld
sub
pop
xor
out
loop
mov
in
xlat
sbb
mov
bound
orb
sub
mov
jae
sbb
xchg
sub
fbld
fwait
outsb
adc
test
mov
aas
cli
shlb
js
cmp
ljmp
lds
sbb
mov
into
jecxz
pop
pop
or
popf
push
je
lods
or
test
aaa
popf
xlat
std
int3
ret
push
xor
adc
lods
arpl
add
jns
out
movsb
mov
nop
lret
ss
fidivrs
sbb
out
into
jno
mov
mov
stos
std
aaa
jo
push
xor
push
push
mov
popa
shld
addl
xlat
mov
xchg
xor
jle
adc
dec
push
sbb
test
inc
fimuls
cs
jmp
adc
mov
add
lret
xchg
sbb
repnz
sub
mov
push
add
ljmp
or
mov
xchg
outsl
fidivs
push
cmpsb
sti
lock
push
cmc
pop
jno
pop
enter
cltd
enter
fimull
or
xchg
stos
push
fsts
xchg
sbb
sub
push
sub
scas
insl
leave
and
cmp
xor
fwait
and
popa
adc
cltd
push
pushf
push
push
cmc
jl
sti
jg
or
or
jecxz
nop
popa
push
insb
enter
mov
cmp
jbe
pusha
push
pop
addl
stc
int3
addr16
lret
and
int
outsb
jb
pop
gs
cltd
lock
sbb
xchg
sti
push
sbb
push
cmp
push
popl
dec
push
inc
jle
mov
push
push
lds
test
cli
jb
int3
mov
aad
push
dec
cmpsb
push
insb
mov
andl
inc
pop
dec
rdmsr
ja
fisubrs
dec
pop
sbb
pop
mov
xlat
sbb
stc
stc
jno
push
arpl
mov
adc
lock
faddl
push
xchg
jge
pop
ret
or
jns
out
out
and
xlat
lods
mov
popl
out
andl
dec
out
cmp
jae
jae
stc
dec
fdivr
repnz
push
test
dec
test
mov
out
push
and
repnz
or
xor
dec
pop
test
dec
cld
inc
or
pop
aam
fnstcw
ljmp
cmc
jo
mov
ss
lcall
mov
xchg
cs
out
adc
sub
pop
jns
mov
add
or
sbb
pop
adc
cs
xlat
push
in
push
daa
out
sbbb
das
shrb
or
inc
xorb
js
out
popa
out
insl
lahf
pop
sbb
fcmovnb
aad
jge
ja
push
and
ss
inc
popf
cltd
push
in
enter
push
imul
xchg
test
int
ss
call
mov
hlt
inc
push
push
push
in
dec
add
cmpsl
clc
in
pushf
loope
dec
jecxz
mov
cmp
push
sti
out
out
repnz
inc
divb
out
mov
out
sub
pop
outsl
ss
dec
call
adc
ret
movsb
push
iret
jmp
outsb
arpl
nop
popf
pop
out
aaa
inc
scas
cmpb
xor
sub
mov
xchg
fstl
inc
lock
iret
decb
adc
adcb
sbb
mov
xor
scas
mov
lock
imul
lret
imul
insl
xor
fisttps
sbbl
xchg
loope
mov
imul
cmpb
fmuls
jg
add
pop
mull
fcoms
cmc
and
cwtl
jbe
dec
out
and
or
mov
push
addb
sbb
mov
lahf
test
ljmp
lds
dec
fcomps
outsb
inc
out
mov
subb
adcl
test
jecxz
push
pinsrw
ss
sub
sbb
cmpsb
mov
cld
cld
test
sbb
jo
push
push
aaa
out
loop
scas
sahf
pop
scas
xor
cli
lret
jp
push
aas
fsubr
stos
pushf
sti
int3
mov
je
neg
btc
out
mov
cmp
adc
loopne
adc
outsl
or
lret
cmpsl
pop
clc
loope
inc
out
push
lcall
sti
and
cmp
ret
mov
xchg
adc
push
insl
es
jg
aam
out
jae
rol
pop
ja
pop
gs
mov
jp
shll
sub
mov
sbb
jae
cli
int3
xchg
js
fcomps
xor
test
xor
imul
jnp
out
jo
push
lds
adcb
add
insb
dec
test
xchg
add
and
sub
xchg
and
loopne
mov
lahf
idiv
stc
out
inc
sahf
xor
mov
sahf
dec
out
mov
scas
mov
jmp
nop
test
sbb
xor
mov
sbbl
inc
bound
cmp
test
je
loope
dec
mov
mov
mov
mov
jne
xchg
dec
add
adc
or
test
out
jle
inc
and
adc
ret
loopne
loop
inc
add
stc
jo
mov
mov
jecxz
cmp
fwait
sbb
cs
push
int
xor
jbe
xor
nop
or
idivl
xchg
jecxz
or
in
cmp
ror
pop
mov
or
retw
inc
push
pop
push
enter
fildl
loop
aam
sbb
sar
xchg
xchg
shr
cmpsb
xchg
std
hlt
dec
pop
pop
jne
xor
adc
in
subl
cmp
sub
xor
aaa
les
xor
mov
lds
mov
jb
mulb
jp
ja
pop
insl
icebp
or
xor
or
or
or
or
nop
jecxz
stmxcsr
shr
imul
pop
insb
jb
aam
cmp
push
mov
js
lcall
addl
imul
lret
mov
mov
stos
loopne
popf
mov
jb
dec
faddl
xchg
xor
jl
cli
movsl
cmp
push
mov
cmp
or
dec
sbb
inc
pop
mov
xchg
fisubrl
ja
hlt
scas
inc
addr16
sbb
es
xor
mov
pop
push
jae
ljmp
shrl
and
scas
mov
clc
mov
out
xchg
loopne
frstor
insl
cmp
test
or
jl
sbbb
pop
pop
cmp
xor
stos
dec
xchg
cmp
lahf
loopne
jl
pop
and
sbb
jb
les
outsb
push
sbb
jecxz
and
mov
adc
leave
adc
adc
mov
enter
dec
adc
mov
mov
or
sub
pop
add
mov
dec
hlt
push
sbb
xchg
xchg
jl
inc
mov
push
adc
push
xor
scas
inc
and
xchg
js
lret
paddb
push
fidivs
arpl
loope
les
icebp
xchg
mov
mov
inc
adc
sbb
test
cmp
pop
out
jbe
mov
or
or
nop
pop
xchg
xor
jle
dec
int
popf
lret
xchg
jmp
pop
fnstsw
mov
imul
xchg
sahf
xor
test
xor
xchg
dec
push
scas
mov
movsl
adc
mov
jmp
push
or
ljmp
mov
cld
out
jne
or
push
sbb
sbb
inc
xor
outsb
arpl
dec
enter
mov
add
push
jge
adc
repz
call
pop
push
fs
flds
inc
xlat
jmp
push
mov
inc
mov
sub
rclb
add
mov
loop
dec
into
dec
maskmovq
mull
mov
mov
push
sbb
push
cmpsl
and
xor
aad
out
movsl
adc
jmp
xor
mov
sbb
daa
movsl
out
out
les
jne
cmp
js
cltd
pop
scas
sbb
pop
js
jb
push
outsb
movb
out
mov
dec
dec
lds
out
jb
mov
or
lcall
push
adc
or
cli
int3
fiaddl
adc
dec
jle
push
fbstp
mov
cmp
sbb
fs
pop
xor
add
ror
xchg
icebp
mov
rcrl
lcall
clc
mov
popa
pop
arpl
mov
push
xor
popa
xchg
xor
jg
cmp
mov
cmc
pop
clc
leave
cmp
mov
jl
popa
push
les
xchg
call
pushf
es
push
or
mov
xor
xchg
dec
push
je
loopne
rcr
roll
add
sti
mov
mov
jns
mov
mov
test
xchg
push
mov
or
aaa
cltd
pop
pop
jmp
xchg
mov
xchg
stc
cmp
push
inc
stos
adc
push
pop
hlt
imul
les
ss
mov
ds
hlt
daa
ds
inc
push
inc
jne
insl
cmp
mov
enter
sub
xchg
cmpsb
push
pop
sbb
mov
sub
fcompl
movd
pop
or
ds
inc
inc
lock
test
adc
mov
cwtl
or
outsl
subl
pop
dec
adc
cs
sahf
push
push
paddusw
cs
sub
les
aas
sub
inc
dec
cmp
and
pop
or
add
in
mov
mov
xor
daa
pop
xchg
jb
xchg
sarl
sahf
fnstenv
and
bnd
push
mov
push
jo
icebp
notl
push
sbb
jmp
scas
jp
xor
add
ds
or
pop
pop
mov
cld
push
pop
aam
dec
push
jmp
lock
mov
mov
or
and
fnsave
mov
lea
cmpl
enter
cmovb
fnstsw
cli
fs
js
mov
stos
inc
adc
inc
lods
rcrb
repz
lcall
je
jo
inc
adc
sbb
call
xor
dec
add
sahf
or
loopne
dec
cmovno
jno
xchg
jno
ss
sub
insb
xor
lret
pop
or
pop
aam
cli
lds
dec
adc
inc
cli
cld
shrb
pop
popa
mov
pop
movsb
pop
sub
xor
test
leave
scas
cwtl
into
mov
dec
movntq
out
mov
in
loope
jns
lcall
mov
mov
lds
call
addl
das
mov
stos
inc
push
pop
ret
insb
cld
xor
and
cltd
push
aad
repz
sbbl
sti
pop
mov
jbe
fbld
mov
xchg
xchg
cmp
pop
popa
xchg
pushf
sub
sbb
leave
mov
jnp
cltd
imull
jg
pop
inc
mov
imul
rcl
xor
xchg
pushf
push
push
out
xchg
lahf
scas
mov
push
pop
inc
xor
cmpsb
shlb
fsub
xor
orl
outsl
jmp
mov
movsl
add
adc
jmp
out
cwtl
add
adc
push
xchg
loope
mov
fstps
ljmp
dec
mov
inc
jl
pop
outsb
data16
aas
stos
cld
push
cmpsb
cmp
outsl
je
sbb
dec
jae
ljmp
fst
dec
jle
rcrl
add
jl
adc
clc
pushf
test
inc
pop
sub
call
cmp
add
and
fimull
test
mov
sahf
dec
or
push
jbe
fcmove
mov
je
jno
stos
clc
dec
pusha
jle
aad
fadds
add
mov
loop
jg
adc
gs
or
das
stc
test
and
out
out
pop
aam
cmpsl
jns
sbb
jae
imul
adc
movb
xchg
les
test
cmp
cmp
mov
cmp
fneni(8087
mov
add
testl
or
ja
imul
stos
in
xor
mov
mov
cwtl
call
dec
cmc
mov
ja
pop
add
push
lahf
loopne
xor
frstors
loopne
mov
sbb
adc
ss
xor
lea
cmpsl
aam
fbld
dec
stos
and
jle
scas
add
data16
call
jae
inc
pop
dec
add
imul
push
lret
addr16
jg
leave
push
inc
xlat
mov
fcompl
jecxz
mov
sub
dec
inc
loopne
jmp
lods
cmp
push
gs
cmp
sahf
cs
mov
sti
jmp
testb
cld
push
insb
and
push
and
clc
test
lahf
mov
repz
mov
push
out
or
dec
jnp
lea
pmulhuw
xchg
mov
inc
sbb
push
xor
mov
fidivrl
outsb
pop
xor
icebp
int3
jne
pop
fadd
bound
out
mov
push
mov
stc
es
xchg
push
test
cwtl
in
pop
stc
dec
shlb
lret
in
and
inc
mov
insl
sub
sahf
dec
into
sub
ss
push
je
mov
sbb
push
je
mov
jae
ss
arpl
rolb
leave
push
cmp
mov
jmp
pushf
sub
add
scas
sbb
sbb
or
dec
scas
mov
or
sbb
mov
mov
mov
test
adc
xor
loope
outsb
jnp
jae
jbe
or
inc
test
mov
adc
repnz
dec
mov
fsts
sub
in
cmp
dec
dec
inc
fldcw
fyl2x
or
shll
or
aam
aaa
lds
insl
xchg
scas
loopne
push
dec
in
xor
leave
xlat
int3
stos
lock
sbb
xchg
and
ret
dec
sub
lahf
mov
pop
inc
mov
xchg
dec
mov
cli
mov
cmp
lods
xor
inc
mov
inc
push
movsl
fnstcw
xchg
cmpsl
out
add
jle
out
jmp
adc
jecxz
stos
cli
add
int3
mov
mov
mov
lock
out
add
push
add
les
jne
jbe
dec
cmp
out
mov
arpl
fsubrl
push
and
dec
adc
dec
cmp
fidivrs
or
sub
jecxz
xchg
scas
jno
mov
imul
icebp
lcall
imul
cmpsb
fistpll
push
and
push
mov
int
dec
ds
icebp
and
outsl
enter
xchg
push
jo
in
mov
jne
xchg
mov
fs
out
inc
inc
cld
sbb
xlat
insb
pop
std
pop
pop
pop
jle
sarl
faddp
test
add
pop
test
fisubrs
loope
mov
sub
dec
cmp
pop
stos
in
mov
fistps
loopne
test
es
ds
or
xor
repnz
iret
mov
sbbb
push
lea
push
lock
sbb
sub
mov
fcoms
lods
in
fdivrp
scas
adc
adc
jmp
sub
cmpsb
jnp
and
mov
insb
jae
insb
cmpsl
pop
add
js
and
add
mov
or
xor
out
ds
sub
mov
mov
jns
lods
add
xchg
or
ss
ret
cmpsl
mov
jns
movsl
cltd
push
dec
mull
push
xchg
jle
mov
mov
fldcw
mov
push
test
mov
out
jns
in
push
lret
lea
int3
mov
lcall
stc
mov
pop
xchg
lods
adc
cmp
adc
xchg
out
fwait
fcmovnb
xor
sub
hlt
pop
lods
jl
inc
cmc
fs
push
adc
pushf
cmpsl
dec
mov
int
jbe
test
sti
cmp
jo
les
aad
or
push
cmp
add
ds
icebp
imul
ret
fwait
es
int
divl
ret
and
mov
push
in
insb
push
mov
mov
das
test
imul
dec
fimuls
sub
pop
movsb
add
dec
sbb
popf
push
outsl
adc
jne
pop
xchg
daa
jo
add
dec
mov
xchg
xor
add
mov
dec
xor
push
mov
sub
push
pop
out
lret
or
out
pop
call
pop
inc
addr16
aaa
not
lds
and
cmpsl
loopne,pt
push
sub
jae
push
mov
pop
mov
or
jo
rcrb
ficomps
mov
xor
sub
push
int
lds
ficoml
cmpsb
xor
lea
rcrl
lret
mov
xchg
mov
jae
or
lods
sub
out
fcomps
out
ja
iret
lea
cmp
pop
adc
mov
xlat
nop
repnz
push
jnp
adc
pop
mov
sub
xor
fcmovnb
scas
mov
lds
jno
push
fmull
mov
insb
mov
flds
scas
add
pop
push
daa
imul
insl
push
sub
test
mov
hlt
or
sbb
js
fbld
cmp
das
aaa
shll
dec
adc
adc
bound
sub
or
loop
push
fcmovnbe
and
push
into
dec
js
arpl
mov
sbb
lock
daa
dec
fildll
xor
and
jp
subl
xor
scas
gs
das
dec
cmpsb
sub
push
iret
enter
or
movsb
xor
rorl
mov
std
sub
pop
into
sbb
loop
pop
inc
test
mov
dec
cmp
mov
cmp
pusha
aaa
divb
test
push
add
shll
push
pop
dec
jmp
inc
lods
push
pusha
stos
cmpsl
xchg
bound
mov
movsbl
insl
xchg
enter
xlat
gs
in
inc
jno
inc
dec
jno
stos
je
dec
mov
or
mov
xor
test
or
ret
mov
daa
js
xchg
lods
pop
loope,pt
lcall
daa
sub
sub
or
pop
stos
leave
popf
inc
flds
jo
mov
add
loopne
out
add
mov
xor
mov
sbb
iret
lods
stc
icebp
jno
push
cld
fsubs
inc
sub
mov
mov
sub
add
pop
mov
push
dec
inc
pop
stc
mov
mov
mov
shll
sub
inc
addr16
shr
jne
sub
aas
mov
and
sbb
scas
pop
repz
cli
inc
pop
repz
sub
pop
push
or
and
and
mov
fdivs
out
cmp
cmp
test
lea
imul
test
iret
add
outsl
aad
fcomps
aam
jecxz
outsl
push
push
mov
mov
sahf
incb
add
gs
jmp
jb
dec
sbb
hlt
rcrb
push
pop
push
cmc
arpl
xor
mov
xor
dec
repz
std
mov
mov
and
ja
push
mov
mov
inc
mov
andb
dec
sti
mov
stc
jp
cmpl
ret
xchg
lods
into
pop
push
in
adc
popf
pop
xchg
rcrb
and
shlb
out
fsts
lcall
dec
shll
inc
adc
scas
sub
sbb
pop
lods
jb
mov
dec
rorb
out
int
mov
jno
mov
aad
imul
push
ret
fs
adc
das
push
adc
push
mov
arpl
jp
in
jnp
lock
popf
pop
add
jl
mov
push
out
jge
ret
mov
movntps
addb
shrl
mov
xchg
jne
xchg
sti
mov
pop
shlb
add
cmp
fwait
sbb
xchg
dec
pop
gs
dec
or
pop
ret
mov
sarb
negb
xchg
inc
dec
loopne
loopne
xchg
sub
insb
addr16
jg
aam
repnz
sbb
push
add
cltd
into
and
jle
xchg
cwtl
inc
imull
inc
outsb
hlt
imul
clc
mov
dec
cmc
dec
pop
bound
mov
sbb
adc
mov
movsb
insl
mov
shlb
jne
divl
scas
ret
call
es
xchg
stos
and
adc
adc
jg
xchg
xor
test
pusha
pop
push
adc
repnz
ds
das
jle
cmpsl
popf
mov
fiaddl
cmp
jbe
iret
pop
fyl2x
jns
lcall
aas
sub
sub
mov
inc
xchg
cs
fdivrl
xchg
into
loop
int
adcl
mov
ficomps
sub
mov
fcompl
jno
fwait
test
rol
xchg
push
push
push
mov
lret
or
sti
xchg
mov
movsb
rol
test
xor
dec
je
lods
sub
add
add
xlat
push
dec
sbb
add
lea
mov
fiaddl
and
mov
aad
pop
jae
cmpsl
or
jnp
popa
inc
add
dec
mov
sbbl
add
dec
jg
je
fwait
sbb
nop
fstpt
ss
test
test
sbb
cwtl
or
cmp
cmp
inc
in
inc
and
in
dec
jmp
aaa
push
or
je
or
inc
adc
dec
sbb
push
orl
push
pop
ja
jmp
test
mov
mov
add
scas
and
stos
or
sarb
mov
dec
push
lods
cmpsl
ja
push
arpl
fadds
aas
pop
cmpsl
mov
repz
clc
jo
xchg
mov
or
test
ret
pop
rolb
push
fbld
je
fsts
sbb
cmp
adc
adc
push
sub
pcmpgtb
addl
addb
shll
adc
mov
pop
pop
adc
ficoms
mov
sbb
adc
jno
sub
scas
test
sub
dec
push
dec
add
lods
fdiv
dec
insl
inc
jnp
loopne
mov
sub
mov
and
ja
icebp
pusha
add
cltd
push
mov
and
test
cmp
ret
fcomps
dec
mov
bound
movsl
es
fisttpll
in
jl
push
xor
es
push
add
dec
fbld
stc
sbb
xor
mov
shl
lea
lret
test
pop
cmpb
push
mov
dec
cmpsl
clc
out
jp
jmp
cwtl
cmp
fldl
dec
and
out
lcall
fiadds
ficomps
les
sub
pushf
cmpl
test
push
push
gs
stos
jg
inc
mov
lods
rolb
pop
std
in
lock
cmp
dec
push
test
pusha
scas
out
adc
pop
movsb
out
mov
adc
pop
outsb
mov
cli
leave
pop
ret
ret
or
add
mov
sub
in
stc
scas
scas
rolb
cmp
int
jb
xor
and
sub
fs
sbb
and
jns
leave
inc
dec
je
imul
into
pop
push
out
lods
add
repnz
movsb
je
cli
cwtl
je
sub
mov
sahf
jmp
test
inc
mov
icebp
xor
fiaddl
add
es
dec
dec
jmp
jnp
sbb
mov
mov
pop
mov
int3
ds
dec
jg
shll
imul
hlt
pop
push
push
lret
mov
fdivrl
pusha
in
mov
mov
add
dec
lcall
pop
test
loopne
mov
sub
inc
sti
enter
lret
dec
xchg
xchg
mov
jge
ss
hlt
xor
inc
or
shll
inc
mov
xchg
add
lret
push
frstor
push
cmp
xor
xor
cmp
xchg
mov
stc
in
cmp
pop
pop
sub
xor
mov
add
cmpsb
cmp
fnsave
cmpsl
inc
mov
jnp
cmp
les
std
cli
sbb
jns
xchg
stos
add
inc
add
mov
and
add
add
pop
xchg
or
inc
lea
xor
daa
js
andl
or
pop
lret
fistl
movsl
shrl
cli
orb
fiaddl
bound
xor
rcll
push
adc
push
xor
nop
iret
pop
shlb
out
sahf
pop
push
test
xchg
pop
bound
sub
outsb
and
pushf
mov
push
fsub
aam
in
jge
cltd
fdivrs
outsl
out
je,pn
ljmp
frstor
test
cmc
xchg
mov
push
gs
leave
mov
add
jae
out
pop
into
movsb
mov
std
fldenv
mov
inc
and
aaa
mov
push
dec
inc
pop
fidivrs
pop
cwtl
jne
enter
lret
addr16
inc
fcmovnb
out
lcall
add
mov
cmp
repnz
mov
aam
pop
movsb
insl
inc
movsl
dec
add
enter
fisubs
clc
cwtl
cmp
adc
ret
iret
mov
add
mov
pop
hlt
xor
xchg
mov
jb
push
xchg
jl
push
sarl
cs
addr16
sbb
inc
xor
mov
or
fucomip
fstps
sbb
push
push
cltd
arpl
loopne
stos
xor
into
push
push
add
or
and
das
hlt
pmaxub
nop
add
mov
int
cwtl
aam
movsl
push
cmc
sbb
sub
sbb
popa
jo
lcall
inc
test
sub
into
in
mov
loop
sbb
movsb
pusha
inc
movsb
sub
lret
xlat
and
andl
pushf
pop
arpl
sub
out
xor
and
xor
adc
adc
jge
neg
cld
mov
mov
mov
sbb
sahf
push
lahf
xchg
xor
add
fstpt
lcall
sub
dec
push
or
scas
inc
aad
mov
test
pop
out
pop
xchg
push
lahf
outsb
repz
adc
mov
or
aam
pop
add
xchg
lret
xor
imul
je
push
outsl
sbb
out
daa
adc
repz
fs
movsb
dec
add
push
pop
sbb
jge
mov
cmpsl
bound
out
mov
xlat
jge
lcall
stc
enter
cwtl
inc
inc
stos
sti
push
lret
repz
adc
adc
mov
mov
je
iret
mov
jno
xchg
mov
out
repz
test
adc
jle
and
cmpsb
in
mov
adc
pop
mov
xchg
in
mov
sub
inc
and
sub
xlat
pop
xchg
mov
jo
add
pop
sahf
and
xor
repnz
xlat
shl
dec
outsb
aad
rcrb
sbb
aam
add
adc
inc
push
jl
ss
mov
xchg
sbb
or
jns
insb
mov
inc
je
jae
cs
cmp
mov
xchg
and
pop
jbe
jp
in
enter
mov
dec
cmpsb
pop
popa
cs
adc
jg
std
sub
sahf
iret
outsl
fs
and
aas
add
in
push
and
jmp
add
sub
arpl
or
push
pop
rcrl
les
inc
mov
roll
fstpt
jl
lcall
loopne
lahf
jp
or
push
out
xchg
in
mov
cltd
ss
jle
lahf
mov
lcall
mov
in
cmp
data16
cmp
insb
in
dec
aam
cmp
jp
clc
popa
sbb
xor
ret
fdivr
andl
push
inc
sbb
popf
pop
sbbl
call
lret
xchg
xor
fiaddl
mov
insb
push
push
test
sub
lods
mov
roll
cmp
lods
aad
cwtl
inc
cmp
je
mov
addr16
fs
jbe
xor
mov
or
cwtl
cmovp
push
into
push
mov
fwait
aam
pop
inc
pop
arpl
mov
pop
in
insb
mov
dec
sahf
jns
jmp
and
rcrb
cmp
test
jmp
loopne
sarl
stos
mov
test
and
outsl
ss
and
inc
push
shl
push
inc
pop
ret
stos
inc
adc
ss
xor
or
test
xchg
cmpsw
mov
loop
mov
jge
fs
push
loope
flds
sub
test
add
sbb
adc
xchg
cmp
mov
or
inc
mov
mov
scas
adc
pop
loop
jge
dec
lcall
fcmovnb
notl
bound
mov
xchg
xor
call
jmp
stc
ss
mov
and
vpunpckhdq
lret
sahf
mov
ret
xchg
mov
mov
jmp
and
pop
jl
outsl
ss
sbb
push
lret
xor
dec
jge
daa
imull
sbb
rol
and
pop
dec
imul
add
mov
add
pop
aaa
mov
imul
ret
shll
jne
insl
enter
and
and
imul
and
gs
outsl
mov
add
inc
push
and
pop
cltd
popf
push
xor
test
add
fldenv
iret
hlt
xor
cld
int
or
mov
mov
dec
xacquire
and
jnp
int
dec
xor
sahf
add
bnd
or
inc
iret
loope
roll
lret
lcall
repz
mov
and
or
sub
pushf
into
cmp
lods
jp
andnps
lcall
jle
push
roll
andl
pop
rcl
dec
push
pop
or
mov
outsb
sarl
mov
cmp
cwtl
sbb
popl
and
movsl
and
into
adc
mov
aad
push
fcoms
inc
xchg
rcl
mov
xchg
shlb
mov
mov
inc
sbb
mov
nop
pushf
scas
mov
inc
cmpsb
inc
into
mov
push
clc
and
mov
xchg
adc
pop
sbb
fsubrs
push
cmp
xchg
dec
jbe
sub
jns
cmc
cmp
pushf
pop
xchg
or
push
inc
adcl
cwtl
in
jb
idivl
or
popf
nop
into
sub
xchg
xchg
sti
sub
repnz
jmp
or
cmp
das
int
mov
add
jp
movsb
jns
cmp
push
jne
fcoms
lods
stos
repz
negb
jns
in
inc
orl
xor
xor
insb
sbb
inc
dec
add
aaa
sbb
pop
loopne
lret
call
aam
lcall
ds
mov
lods
lret
leave
cmp
cmp
add
mov
daa
je
adc
and
inc
mov
insl
or
insl
add
pop
out
movsb
pop
ljmp
les
test
loop
bound
push
mov
xor
mov
ljmp
push
sbb
jnp
cmp
pop
jb
inc
andb
mov
pusha
ja
sub
xchg
ds
push
ret
test
orb
jge
adc
ljmp
mov
jp
xor
pop
add
shll
fs
daa
daa
aam
add
xlat
loopne
movsb
popf
mov
loop
and
sub
push
dec
cmp
movsb
dec
scas
sbb
xor
ljmp
popf
ret
aas
inc
or
lds
popa
mov
imul
xor
and
xchg
push
rorb
cli
cmp
rep
push
popl
dec
outsb
jb
sub
dec
jnp
inc
jge
push
dec
push
jbe
dec
adc
lds
mov
sbb
pop
in
data16
cmp
call
fildl
out
ja
addr16
inc
lea
dec
insb
call
lahf
mov
or
and
inc
mov
fnsave
push
dec
fs
sti
lock
insb
xor
push
xor
sbb
mov
mov
and
push
hlt
xor
jb
inc
xchg
or
shrl
int3
out
xor
clc
insl
mov
pusha
faddp
xchg
stc
xchg
mov
cmp
in
jb
movsl
mov
or
xchg
movsl
push
mov
sub
inc
lods
cmp
outsl
add
data16
add
jl
dec
mov
and
loopne
imul
outsb
or
or
or
jle
cmp
notl
fdivl
cmpsl
sub
xor
popa
xchg
loop
out
aam
mov
cli
jmp
rorb
lcall
in
ret
fmull
push
fwait
hlt
inc
inc
sbb
scas
les
in
xor
jmp
lahf
inc
sbb
imul
inc
jmp
dec
and
xchg
mov
stos
insb
push
fucom
dec
scas
ja
push
mov
push
mov
and
push
push
inc
mov
in
or
lea
sub
pop
dec
inc
fwait
jecxz
imul
out
dec
mov
jle
sti
pop
les
mov
push
sub
inc
ja
dec
xchg
xchg
push
jno
push
out
mov
cs
addb
mov
inc
movsb
movsl
xchg
das
adc
negb
push
rcll
mov
lods
dec
mov
xor
imul
pop
insb
mov
xchg
pop
fwait
mov
into
pop
jbe
enter
inc
fldl
aad
sub
into
xchg
pusha
mov
xor
lret
dec
jl
inc
adc
mov
lods
std
sub
aam
in
push
sbb
or
cltd
xor
jle
sub
ret
into
imul
jo
sarb
subb
and
in
add
aas
testl
xchg
jmp
je
jbe
mov
test
inc
rclb
addr16
mov
test
test
or
mov
or
mov
fcmovne
leave
jmp
aaa
mov
fwait
and
mov
popf
and
push
dec
push
fisubrl
ja
pop
jmp
inc
jp,pt
icebp
sbb
mov
lret
xchg
jmp
aaa
cmp
sub
jne
and
add
in
jno
and
xchg
add
add
inc
stc
cwtl
mov
out
mov
inc
test
jo
jns
out
add
or
out
mov
jecxz
push
rcll
mov
push
mov
xor
xchg
cmc
or
scas
jne
fwait
shl
aas
into
loope
push
notl
into
lahf
push
adc
jbe
push
jo
insl
daa
sub
push
loopne
out
inc
pushf
in
jmp
sbb
cmp
call
jmp
adc
sahf
test
movsl
push
or
movb
sub
outsl
sub
lcall
dec
in
push
rorl
push
addl
cmp
mov
jl
dec
nop
cmpsb
xchg
call
sti
inc
adc
pop
xchg
or
test
movsb
lock
dec
add
push
pop
xchg
test
cmp
mov
cltd
insb
lcall
shr
into
movsl
xchg
loop
xor
imul
sti
push
cmc
scas
or
js
add
lods
daa
push
or
mov
pop
jge
sbb
fiadds
outsl
xchg
es
pop
in
dec
ds
and
aaa
xchg
mov
aas
cli
gs
loop
xchg
pop
jle
das
xor
mov
xor
frstor
pop
and
dec
add
notl
mov
fs
inc
adc
loop
out
lods
cli
cli
nop
cmp
mov
nop
jecxz
mov
test
sbb
ss
jb
pop
test
loope
test
test
mov
dec
repz
mov
cltd
sub
xchg
idivb
outsl
pop
jne
addr16
stc
jae
mov
rcrl
xor
das
loope
dec
pop
dec
xor
mov
jmp
data16
das
jp
arpl
xchg
mov
ds
pop
in
mov
xchg
imul
xchg
cmc
jae
int3
test
and
adc
clc
push
jecxz
or
test
lret
push
popa
fistps
sbb
lods
pop
aam
fstps
add
add
repnz
and
scas
cmp
pusha
rcrl
ljmp
dec
push
rolb
lret
arpl
incl
sbb
sub
pop
test
cs
fldcw
dec
cs
cmpsl
dec
test
lds
xor
mov
xor
lret
xchg
adc
xlat
insl
sarl
mulb
outsl
sahf
mov
std
pop
dec
sub
adc
xlat
dec
push
hlt
loopne
cmp
imul
cli
push
and
ja
nop
jmp
out
xchg
test
rorl
imul
xchg
test
push
movsl
xor
arpl
mov
xchg
and
mov
pop
jmp
mov
xchg
add
and
and
push
add
jmp
mov
insb
add
xlat
pushl
adc
xor
jmp
xchg
jmp
lcall
out
lahf
loope
cwtl
sub
dec
add
test
jl
or
adc
outsl
xor
lds
pop
fstps
dec
shll
push
sub
dec
test
out
ret
xor
xchg
repnz
lret
sub
xor
jns
es
push
cmpsl
xchg
in
fs
cmp
gs
dec
cmp
into
in
xchg
jae
divb
gs
dec
fsubl
in
jge
mov
add
je
popa
cmp
std
or
pop
jmp
cmp
push
rol
push
stos
mov
shrb
cmp
sub
mov
ret
xchg
and
out
mov
cmp
in
dec
inc
shrl
or
enter
mov
xor
pop
push
sub
pop
pop
sub
sub
in
repnz
popa
mov
xor
pop
mov
fimuls
lods
outsl
sbb
ds
jae
bswap
in
add
ljmp
fwait
inc
push
mov
and
mov
addr16
fsubrs
dec
lock
mov
out
xor
mov
nop
push
adc
jae
xorl
ja
mov
rolb
mov
es
sub
pop
in
out
dec
cmp
inc
std
test
xchg
dec
fistps
cli
lods
arpl
xchg
or
int3
push
and
pop
fimull
iret
xorl
nopl
sahf
mov
cld
scas
xor
mov
cmpsl
add
mov
ljmp
xchg
add
cmpsb
pushl
cmc
lock
sbbl
cltd
adc
roll
and
scas
test
adc
mov
fs
xchg
outsb
sbb
into
push
aaa
mov
fsubrl
divb
lods
xor
jbe
sub
fsubrl
pop
mov
jne
adc
int3
sbb
mov
shlb
arpl
or
ss
dec
loope
jne
addr16
int3
pop
sbbl
in
mov
es
mov
fisttps
ss
mov
sub
fcmovnb
xor
in
lahf
fucomi
in
outsl
data16
or
lods
mov
shrl
in
xchg
sbb
pop
aam
test
in
cmc
mov
push
scas
dec
mov
fidivl
xor
sti
pop
mov
inc
iret
int
xor
iret
in
fisttps
adc
mov
imul
mov
cmp
lret
sbb
lcall
jp
daa
sub
ret
das
inc
dec
mov
pop
inc
arpl
fldcw
cmp
mov
pusha
mov
loope
cltd
mov
inc
lods
mull
loop
jne
push
out
stos
in
test
cmc
dec
xchg
cmp
mov
out
mov
push
mov
inc
xchg
pop
test
push
daa
dec
mov
push
or
sub
mov
jg
adc
mov
shl
lea
mov
arpl
cs
jne
clc
data16
dec
xchg
sbb
mov
xor
lock
sub
or
leave
std
imul
jp
int
out
jae
cmc
inc
mov
mov
fpatan
int
std
clc
jae
aam
and
sub
adc
fistps
in
out
xchg
stos
push
out
adc
js
aas
scas
cld
dec
sbb
loop
mov
addr16
xor
jecxz
fcom
lock
cmpsl
pop
mov
les
sub
fildl
pop
mov
loop
ljmp
pusha
xor
in
pop
pop
aas
jg
dec
mov
mov
push
xchg
or
dec
imul
pop
shlb
repnz
xchg
xchg
xchg
mov
test
cmpsl
jecxz
jnp
push
push
xor
call
and
add
and
pop
jp
push
fucom
dec
aam
push
mov
push
pop
jno
scas
cltd
data16
outsl
or
mov
jnp
pop
cmc
xchg
push
cmp
add
loopw
dec
sbb
mov
mov
sbb
iret
lcall
scas
cld
xchg
lock
hlt
or
mov
sub
movsl
std
xlat
jge
push
pusha
movsl
enter
xchg
ret
ljmp
or
push
adc
push
outsw
mov
ljmp
and
mov
jb
cmpsl
int
adc
cmp
repz
gs
pop
les
icebp
into
fwait
test
sub
sub
or
adc
mov
and
popf
sub
sub
mov
mov
cs
test
xchg
xor
push
push
scas
sub
jnp
inc
dec
jbe
arpl
jge
cmp
mov
fnstenv
test
cld
rcll
outsl
and
xor
aad
sbb
push
jge
ja
jl
sbb
hlt
mov
jmp
dec
daa
push
fcomps
xchg
pop
adc
inc
or
cmp
and
push
repnz
mov
mov
inc
popa
push
stos
push
cmp
out
push
jno
leave
stc
jge
sub
push
adc
rol
inc
aaa
lock
jmp
mov
scas
push
adcb
xchg
ljmp
lods
lock
dec
push
dec
mov
or
das
sub
stos
in
lock
outsb
inc
ret
pop
stos
out
ret
lods
popf
xor
lods
xor
cmp
fsubs
push
cmc
cmp
xor
ss
je
outsl
push
in
mov
mov
lods
js
hlt
imul
sub
rcrb
mov
and
dec
and
sub
push
lods
push
mov
mov
mov
vpsubsb
cmpsl
fs
jne
into
mov
adc
jnp
out
in
clc
fstpt
subl
mov
jno
dec
iret
adc
scas
adcb
mov
ljmp
out
xchg
dec
movsl
fs
int
jmp
ja
aam
cmpsb
rcll
xor
test
mov
ds
loopne
insl
iret
mov
pop
bound
dec
dec
inc
test
push
into
jmp
jmp
loope
dec
shll
lea
jmp
pushf
mov
neg
je,pn
sbb
and
fucomi
mov
aam
mov
int3
xchg
pusha
out
sub
cltd
cmc
xor
mov
dec
jne
add
ret
mov
xor
add
xchg
insb
pop
sar
and
rorl
into
int3
cmpsl
ds
mov
daa
mov
ds
insl
xorb
into
sti
hlt
jnp
xchg
ds
sub
lds
cli
je
sub
push
push
xchg
push
jo
rol
lods
inc
pop
pop
repz
nop
out
xor
sub
and
pushf
add
negl
ja
mov
lcall
fwait
push
arpl
fstpl
mov
ljmp
pop
imull
cmp
lea
xor
mov
fs
dec
loop
sbb
inc
xchg
jg
inc
dec
test
pop
mov
xchg
mov
xchg
xchg
and
jmp
ret
dec
call
jp
inc
aaa
ja
adc
imul
push
and
lods
divl
push
ficoms
add
mov
pop
and
pop
pop
into
bound
popa
jle
in
cmp
iret
movsl
repnz
lods
loope
push
call
mov
xchg
or
call
out
push
sbb
cmp
jae
adc
mov
lds
jmp
sub
cs
enter
js
sbb
int3
movb
push
push
lods
sub
inc
mov
ja
inc
xlat
push
or
push
mov
inc
push
cwtl
inc
add
fwait
cltd
mov
or
jmp
jle
adc
mov
popa
mov
mov
xchg
add
rcrl
jge
mov
adc
inc
xchg
sbb
outsl
insl
loope
lahf
mov
mov
dec
mov
fst
pop
mov
sarb
int3
stos
adc
jl
cmp
or
xor
sub
jns
inc
loope
movsl
sbb
lock
add
add
adc
pop
das
test
sbbl
mov
lahf
push
xor
xor
packssdw
xchg
xchg
iret
lds
loop
mov
or
sarb
lcall
or
mov
mov
push
fcomps
push
insb
in
out
fcomi
mov
aad
add
xchg
push
lcall
xchg
iret
ds
cltd
sti
jmp
loop
jle
jle
jno
or
es
cmovp
cmp
cmpb
in
cmc
hlt
test
xlat
dec
bnd
icebp
addr16
pop
pop
ljmp
add
mov
sarl
test
in
dec
orl
lods
mov
adc
std
adc
jg
lret
mov
cmc
popa
gs
es
pushf
sahf
inc
sarb
cs
ret
push
lock
leave
or
adc
mov
jb
sbb
mov
mov
lcall
test
mov
xchg
loopne
dec
cmp
inc
daa
clc
outsb
lods
xchg
jge
cwtl
mov
xor
sti
lret
pop
jo
or
push
hlt
sbb
xchg
push
pop
mov
movsb
mov
lahf
ljmp
cmp
fldl
jns
cltd
dec
cmp
push
outsb
pop
ficomps
and
pop
addr16
ret
sbb
ds
testl
push
pop
iret
add
push
aad
xor
cltd
mov
addr16
outsl
push
push
jecxz
dec
mov
and
popa
mov
or
out
in
pop
and
and
cltd
sub
test
mov
dec
pop
aam
or
insb
mov
in
xlat
pushf
xor
cwtl
out
in
insl
jp
jl
sbb
sub
xchg
lea
add
sbb
in
call
aas
mov
fcoml
xchg
stc
popa
mov
push
out
mov
cwtl
sub
cs
test
loop
cmc
js
lret
xlat
test
hlt
jnp
push
bound
aaa
mov
add
stc
out
addr16
mov
jl
std
adc
cltd
mov
dec
push
xchg
jge
sub
cltd
lds
jmp
pop
mov
sub
insb
inc
inc
xchg
mov
out
jno
shl
aaa
xor
push
fsincos
mov
iret
test
cmpsb
push
test
cld
int3
pusha
gs
add
push
adc
sub
mov
arpl
sbb
jo
ret
push
insl
sarb
xor
mov
stc
and
jo
js
inc
out
xchg
loopne
lret
aaa
pop
mov
jb
pop
adc
cli
movsl
loopne
call
sbb
inc
iret
push
mov
push
in
cwtl
repz
mov
ja
sbb
int
inc
pop
das
add
and
fsubrl
and
repnz
xor
loop
rorb
sbb
leave
xchg
lahf
push
dec
popa
mov
pop
add
xor
cli
mov
aam
int3
into
ret
ss
mov
inc
stos
pusha
fistpl
mov
sahf
xchg
and
iret
sub
into
shrb
xor
jl
iret
xchg
addr16
or
jl
in
sbb
cmpsb
mov
lcall
movsl
xchg
in
mov
call
movsb
pop
cltd
mov
andb
dec
push
scas
mov
inc
fisubrl
and
ss
push
cmp
sti
and
jae
repz
negb
mov
adc
rorl
adc
int3
data16
shll
mov
bnd
jg
sbb
roll
jmp
lock
xor
sbb
sbbb
push
movsb
call
push
xorl
pop
dec
and
int3
jae
jno
xor
dec
jmp
mov
jb
inc
rcrb
scas
cmp
or
or
sub
cs
cmp
inc
test
dec
leave
popa
arpl
push
dec
mov
mov
ret
in
mov
pop
sub
inc
and
fisttps
mov
aas
gs
pop
cli
cmpsl
pop
ss
add
xlat
test
jmp
lds
mov
add
pop
in
jecxz
jne
mov
mov
shrb
mov
push
cmpsl
xor
and
mov
scas
loop
aas
or
mov
xchg
lods
add
call
add
xchg
pushf
roll
pop
sbb
push
fs
mov
adc
fs
mov
cli
dec
mov
sub
xor
xlat
mov
xlat
cmp
and
sti
ficomps
sbb
xor
scas
shrl
mov
push
mov
in
mov
pop
and
daa
and
mov
adc
sub
pop
add
lds
daa
and
sbb
mov
scas
xlat
pusha
call
mov
outsb
mov
xchg
push
cli
int3
out
mov
imul
sbb
and
cmc
popl
push
mov
test
sub
push
adc
pushf
bound
mov
in
add
scas
jae
cs
or
lds
jbe
lea
cwtl
add
mov
sbb
mov
mov
jae
adc
cmp
push
pop
cmp
scas
push
mov
aad
or
orb
xchg
lret
mov
jns
push
arpl
imul
jo
adc
push
test
fistpll
lock
push
xorl
into
cmp
lods
cld
mov
scas
and
rep
test
add
pop
fiadds
dec
shlb
mov
xor
sub
xor
inc
and
push
dec
dec
mov
popa
xchg
cmp
inc
push
call
stos
icebp
lods
in
movsb
xor
jne
dec
insl
das
jmp
or
lods
and
or
lods
test
enter
cmpb
imull
lahf
data16
jae
push
leave
leave
fbstp
es
sbb
lahf
lods
lahf
xchg
dec
out
stos
inc
rcr
inc
add
pop
inc
cmp
push
pop
xor
neg
sub
sbb
push
sti
adc
sub
add
inc
adcl
cmp
dec
test
out
pop
jmp
cmp
add
ljmp
jnp
je
mov
pushf
or
scas
in
mov
push
gs
xchg
fisubs
mov
lock
jmp
in
push
dec
and
jge
dec
mov
pop
mov
or
sub
lret
lods
jns
fimuls
push
dec
stos
push
lock
jo
arpl
mov
and
and
jno
pop
mov
pusha
or
repz
cmp
and
add
cmp
dec
mov
ficompl
sbb
sahf
outsl
jbe
mov
ds
mov
inc
mov
int
sbb
jns
out
or
push
fmull
addb
fisubrs
mov
js
xchg
jno
jl
scas
dec
and
sti
aam
mov
mov
das
dec
lods
mov
inc
sbb
push
jo
add
test
repnz
hlt
pop
sub
fildl
sbbb
les
lock
aas
in
lea
mov
aas
xchg
scas
sub
adc
repz
mov
xorl
lods
cmpsb
sahf
xchg
nop
mov
cmpsb
cmpsb
push
test
sbb
std
pop
out
mov
test
aam
lea
lea
lret
push
mov
push
pop
and
out
sub
pop
nop
mov
jg
sub
sub
arpl
sbb
xchg
fistl
mov
mov
or
cli
mov
inc
sub
add
sahf
jb
popf
out
adc
mov
psrlw
dec
and
cmp
lret
dec
movsl
pop
sbb
inc
mov
pop
adc
ja
test
fs
mov
inc
in
out
sbb
inc
int3
outsl
gs
cmpsb
jns
pop
scas
ljmp
fxch
sub
fstpt
jg
mov
fs
push
fidivrs
fbstp
xor
push
cmp
loopne
and
ret
das
mov
sbb
add
subl
lods
sub
pop
xchg
add
sbb
imul
push
mov
loop
aad
ja
cmp
out
mov
add
test
push
leave
roll
xlat
cmp
push
rorb
or
mov
push
hlt
mov
in
in
jno
imul
out
pushf
bound
add
shlb
pop
xor
add
pop
xor
mov
pop
add
cs
and
xchg
xchg
xchg
cmp
push
jl
mov
pop
jmp
shr
outsb
outsb
sbb
lahf
inc
mov
rcll
jno
outsb
lret
mov
pop
mov
sbb
mov
mov
pop
mov
sub
mov
xchg
cli
push
je
ja
xor
cmpsb
inc
xchg
in
out
or
inc
mov
or
test
insb
out
sub
dec
push
in
shll
arpl
icebp
repz
lods
lcall
jne
popa
push
repnz
mov
xchg
sbb
mov
or
inc
dec
fiaddl
add
cmp
add
imul
add
ret
out
and
push
mov
sbbl
scas
mov
fcomip
test
add
push
inc
int3
and
mov
lds
fisubrl
cmp
fadds
push
inc
jg
or
test
mov
push
loop
imul
scas
into
add
lea
ljmp
jo
imul
mov
mov
xor
in
stos
xor
push
adc
fimuls
testl
or
fisttpl
push
xor
inc
das
cmp
sbb
add
stos
into
dec
ljmp
das
xlat
popa
mov
lods
mov
push
or
pop
pushf
out
ja
lret
data16
shrb
mov
insb
popa
pop
pop
test
and
enter
sahf
jo
mov
mov
cvtdq2ps
shr
stc
out
arpl
cmp
xor
lods
jno
dec
mov
adc
mov
inc
or
test
inc
out
aas
jmp
rep
jg
xorb
or
pushf
js
cmp
pop
sar
inc
dec
test
jp
dec
sub
sbb
fbld
arpl
in
pushf
sbb
inc
dec
or
jbe
scas
sahf
loope
ret
cmpl
mov
scas
lcall
outsb
or
xchg
aas
pop
sbb
dec
sbb
cmp
lcall
mov
adc
and
add
adc
xor
xchg
sub
push
add
jmp
mov
iret
pop
inc
in
fucomp
aad
lds
cmp
pop
imul
inc
adc
adc
cmc
fists
rol
cmp
xor
cmp
push
add
sbb
clc
add
jp
xor
xchg
outsb
jmp
push
inc
mov
cltd
and
mov
lock
fnstsw
mov
dec
loope
push
jmp
pop
lahf
lret
xor
out
nop
and
sti
ret
ss
movsl
sar
decb
lods
outsb
out
in
push
jnp
ss
gs
xor
adc
mov
mov
cld
pop
pop
insb
mov
ljmp
mov
push
mov
test
xchg
sahf
cmpsl
sub
pusha
ja
mov
mov
dec
cmp
imul
lret
xor
imul
inc
pop
cmc
mov
movsl
add
lods
jg
ljmp
mov
imull
mov
mov
inc
arpl
data16
lea
inc
pop
mov
mov
xchg
push
rcl
fsubs
rorl
clc
push
cmc
es
leave
sbb
or
sub
mov
cmp
loop
js
fistps
inc
test
jecxz
push
push
icebp
xchg
loopne
sarb
sub
adc
sbb
mov
mov
pop
push
lods
fnstcw
mov
mulb
jle
imull
add
rcrb
fcomps
fnstsw
es
fld
xlat
ss
xchg
jl
fsubs
rcrb
xor
scas
push
lods
mov
pop
out
dec
mov
into
js
xchg
pop
pop
lods
pop
dec
and
cmp
cmp
cmp
test
aam
cmpsl
sub
dec
jge
mov
add
pop
shr
xchg
cltd
in
test
xchg
shrb
jns
jnp
stos
sub
pop
push
movsb
mov
pop
mov
insl
js
and
stos
in
sub
iret
adc
jnp
mulb
lds
sarl
xchg
shr
jae
dec
xor
cmp
mov
cmp
or
and
pusha
pushf
mov
daa
iret
sub
int
sbb
stos
mov
pop
into
push
fcomps
test
and
clc
pop
mov
and
leave
in
imul
aas
roll
jno
xlat
and
and
push
arpl
out
out
imulb
js
jae
out
js
adc
xor
xor
push
xchg
je
fildll
mov
fnstsw
lods
incl
sbb
repnz
subl
out
jmp
add
or
out
insl
mov
pop
outsl
add
adc
out
or
dec
and
flds
jmp
in
pop
xor
push
shlb
xchg
xor
sbb
mov
push
sbb
push
push
mov
push
jb
mov
jp
stc
pop
imul
nop
pop
mov
insb
in
repnz
pop
scas
fldenv
imul
inc
xchg
dec
jbe
imul
mov
dec
jne
mov
adc
sub
mov
sub
sbb
push
jae
xor
aad
fcoms
mov
xor
or
icebp
xchg
cmpsb
sbbl
mov
mov
and
and
test
cmpl
xchg
cmpsb
sub
cmpsl
inc
inc
pop
push
or
lret
adc
add
sti
pop
fidivrl
push
add
ja
adc
inc
xchg
inc
cmp
xor
pop
pusha
add
rorl
inc
mov
repz
aas
test
std
add
mov
inc
scas
mov
push
xchg
xor
push
mov
mulb
sbb
flds
in
mov
add
cmpsl
int
out
xorl
shl
add
ret
lret
test
mov
scas
sub
int3
les
xchg
cmp
pop
push
stos
adc
mov
pop
aaa
fsubl
in
inc
pop
loope
lahf
xchg
sahf
shrl
lods
imul
xor
scas
lods
cmpsl
stos
stos
xchg
or
jo
push
jg
hlt
sub
iret
cmp
adc
push
jae
pop
pusha
jo
pop
pop
mov
xor
lea
push
or
xchg
jp
push
aas
mov
cmp
insb
mov
mov
shrl
sbb
int
mov
mov
ljmp
pop
inc
jmp
ds
ss
popa
in
mov
andl
push
pop
loope
stos
addr16
push
pxor
sbb
movl
sub
mov
mov
insl
or
push
xor
and
js
arpl
rclb
out
call
mov
sub
mov
loope
fnstenv
and
aaa
mov
inc
aam
xchg
fdiv
das
sub
jno
popf
pusha
inc
mov
add
lcall
push
mov
xchg
mov
cmpb
leave
cs
das
mov
sub
mov
mov
popf
jmp
dec
mov
jl
je
insb
fsts
add
pop
outsl
push
enter
adcl
xor
lods
popa
rcrb
aaa
or
aam
xchg
jmp
push
push
push
adc
mov
xor
fnstsw
or
fisubs
cld
gs
or
ds
mov
call
movsb
fdivl
fs
jmp
sahf
lods
and
mulb
adc
test
in
mov
adc
mov
out
lods
das
fwait
xlat
cs
mov
pusha
fistl
sbb
jno
imul
xchg
aaa
sahf
aas
mov
sbb
jb
aad
sub
cld
dec
pop
sbb
jae
outsl
ljmp
ss
and
inc
adcb
dec
dec
aaa
addr16
mov
mov
push
shld
jo
loopne
into
xchg
repnz
or
pop
pop
in
out
loop
out
rcll
movsb
cmp
rcrl
mov
ror
test
loope
mov
jae
arpl
add
dec
iret
movsb
push
mov
inc
test
adc
faddp
dec
push
cmc
pop
cmpsl
cltd
std
cmp
mov
ret
push
inc
push
inc
loopne
adc
lahf
rolb
das
cli
test
ja
int
sub
inc
push
fists
fadds
mov
mov
and
popa
and
out
inc
imulb
enter
jg
subl
jns
fiadds
js
les
lock
cmp
push
sti
sub
adc
mov
xor
xchg
insb
dec
jp
rorl
mov
fdiv
loopne
les
and
pop
mov
mov
xchg
and
mov
rol
ret
leave
mov
add
cmp
xchg
or
xor
movsl
sbb
dec
xor
xlat
xor
xchg
out
lret
hlt
sbb
inc
push
rorb
xchg
lods
iret
insl
push
mov
out
mov
or
rcr
dec
jle
and
push
lret
mov
push
sub
cmc
dec
cltd
out
add
xchg
adc
add
and
into
and
cmp
ljmp
cmpsl
sti
pop
cmp
rorl
aas
imul
xchg
sub
push
int3
cli
loope
sub
sbb
mov
fisttps
push
xor
jmp
dec
xchg
dec
je
cmpsb
adc
or
lods
push
sti
std
pop
sahf
adc
imul
pop
imul
pop
jle
imul
mov
cmp
mov
addr16
mov
xchg
fisttpll
xchg
sub
sahf
sarl
rorb
clc
cs
ror
and
sahf
mulb
xorl
sub
pop
es
add
push
push
inc
mov
shll
sti
sar
js
movsl
mov
lods
jbe
cmp
push
jne
rcll
fldenv
mov
outsb
jle
xor
inc
sub
inc
rcl
daa
push
aad
inc
dec
enter
xor
push
pop
cmp
or
inc
jle
pusha
xchg
rcrl
sbb
pushf
xlat
xchg
sbb
iret
imul
loop
push
push
inc
inc
push
hlt
jne
icebp
mov
ficoms
lods
ljmp
mov
pop
xchg
and
or
push
jmp
pop
sbb
repnz
shrl
xor
jns
jbe
in
push
push
lret
fcom
clc
push
out
cmpb
dec
repz
pushf
pop
repnz
xor
push
stos
rcrb
sub
fs
add
xor
orb
pop
stos
jg,pn
jo
fisubs
mov
push
dec
cmpsl
pop
aas
sbb
mov
mov
xchg
insb
or
nop
push
dec
push
arpl
inc
ror
cmp
aas
pusha
mov
das
and
sub
xor
cmpsl
mov
loop
test
jno
lods
add
es
jmp
dec
dec
jns
pop
mov
add
mov
rolb
icebp
mov
sbb
xor
insl
pop
push
aaa
pop
cmp
xchg
or
ficompl
fcoml
inc
ljmp
les
scas
sub
pusha
fidivs
sbb
fnstsw
push
ljmp
in
jo
pop
cmpsl
push
shlb
data16
pusha
fmul
xor
mov
in
sahf
dec
mov
into
add
mov
cmpsl
lds
dec
cmp
inc
pop
adc
jae
fidivl
xchg
repz
dec
data16
jge
xlat
add
jge
rclb
cmpsb
sbb
or
jle
icebp
cmp
std
pop
inc
lods
ljmp
sbb
xchg
or
movsl
test
dec
cmp
shrb
or
test
push
rclb
pop
push
fldcw
pop
call
les
stc
adc
clc
pop
mov
loope
call
sub
cmp
mov
out
inc
mov
out
sub
ret
lret
mov
xchg
sarb
out
sbb
sbb
sub
jp
sub
dec
and
gs
xchg
cld
sbb
adc
cmpsl
loop
mov
sub
sub
mov
pushf
and
sub
add
mov
jnp
sbb
and
add
stc
adc
xor
stc
sub
insl
xchg
cmp
adc
pop
bound
mov
add
loopne
xor
jp
dec
cli
or
and
xchg
mov
popa
jne
ljmp
popf
cmp
inc
shlb
je
lahf
loope
push
fisttps
add
and
dec
jns
sahf
or
and
mov
lods
pushf
cmc
fistl
dec
push
inc
pop
in
int3
shlb
push
xlat
std
ret
push
dec
pop
rcrb
ljmp
inc
jge
outsl
aam
jge
arpl
push
mov
sbb
jnp
and
adc
inc
cmp
addr16
mov
dec
repz
shll
inc
out
ret
movsl
in
test
lods
data16
in
push
add
pop
fs
xor
push
cwtl
or
into
adc
aas
cmc
stos
or
mov
inc
pusha
cmp
adc
into
xchg
iret
call
stc
sar
mov
and
jb
subl
lcall
test
ja
sub
and
movsb
cmpsb
or
and
movsb
fbstp
es
mov
orb
sahf
push
pop
adc
mov
dec
shlb
xor
insb
pop
xchg
leave
dec
xchg
loop,pn
dec
xchg
mov
pusha
xchg
dec
sub
inc
or
xchg
ljmp
mov
or
jecxz
push
out
or
mov
jne
fildll
push
lods
inc
push
repnz
jnp
repz
push
repz
cmp
int3
lahf
mov
test
or
xchg
or
mov
cmp
cli
add
rcll
test
fstl
xchg
ja
mov
icebp
push
cmp
std
jbe
dec
leave
lods
pusha
mov
lea
xchg
fldenv
dec
daa
sti
rcr
inc
mov
daa
fcoms
dec
repz
xchg
and
mov
add
inc
shrb
fs
jmp
cltd
or
jp
mov
aam
inc
fs
mov
mov
sub
pop
dec
mov
mov
scas
in
mov
sub
addr16
xchg
incb
lea
pop
fdivrs
loope
data16
mov
jl
mov
movsb
jg
out
xor
insl
mov
sti
cmp
shr
lea
fisttpll
jmp
dec
std
imul
mov
push
stos
ljmp
sub
les
xchg
pop
sub
rolb
mov
pop
cs
add
arpl
movsl
ss
out
lea
js
lock
and
xchg
xchg
lods
mov
fcompl
movsb
xor
imul
inc
dec
stc
adc
xchg
cmp
enter
pop
push
cmpsb
and
jnp
dec
loop
adc
jb
mov
push
in
bound
repz
lock
flds
xchg
cmp
stc
frstor
jbe
mov
lret
xchg
lock
xor
pop
mov
add
or
jno
je
push
pop
jae
in
sbb
sbb
push
cmp
jbe
or
jns
and
mov
mov
sub
loope
std
test
repnz
insl
fidivl
adc
sub
xchg
and
test
mov
out
sub
pop
cld
lret
xor
lods
leave
je
inc
fwait
dec
loopne
push
mov
xor
or
sbb
std
mov
push
mov
iret
cmpsb
jge
sbb
cmp
int3
and
leave
mov
jge
ret
xor
jo
cmp
add
adc
lahf
gs
outsb
push
xchg
or
inc
lret
aam
xor
or
mov
cld
xor
pop
inc
push
sbb
shlb
repz
mov
xchg
into
cmp
jl,pn
clc
fwait
dec
xlat
cld
fbld
xchg
stc
xchg
inc
fsubrs
repnz
ja
clc
add
leave
popf
push
pusha
cs
dec
rcl
push
xchg
pop
push
outsl
aam
mov
add
mov
dec
popa
dec
xor
out
ljmp
mov
lcall
pop
in
in
mov
jg
sub
mov
pop
popf
sub
pop
jb
leave
gs
dec
lea
lret
jb
dec
mov
mov
jno
push
aad
loope
leave
push
jmp
jg
push
sub
and
cmp
jecxz
xchg
nop
pop
add
pop
stos
stos
push
js
sub
jg
mov
inc
adc
push
fstpl
mov
cmc
out
es
and
add
add
and
xchg
jno
mov
aaa
jg
shlb
adc
xchg
and
ret
cmp
fcoms
addl
pop
push
mov
mov
cmp
cld
fmul
lds
insl
popa
adc
pop
enter
hlt
mov
ja
shl
inc
scas
mov
and
and
pop
movsb
cltd
push
inc
xor
cli
inc
das
addl
push
out
mov
sub
xchg
into
or
scas
cmp
jae
xchg
je
mov
sbb
or
pop
and
test
pop
inc
hlt
cmp
pushf
jns
and
sub
xor
adc
hlt
aas
dec
or
andb
sub
inc
out
mov
cmp
jae
cmp
andb
arpl
pusha
xchg
cli
mov
pushf
out
sub
adc
or
inc
push
fsub
inc
adc
xor
lea
inc
ss
mov
das
in
cli
cmp
js
out
testl
pop
cmpsb
divb
xor
xor
mov
in
pop
push
repz
inc
mov
mov
and
icebp
cltd
or
and
ja
sbb
or
dec
dec
pushf
mov
or
hlt
add
mov
push
inc
ret
jp
mov
shll
xchg
xchg
pushf
icebp
lahf
and
xchg
sub
test
xor
xor
fldt
or
cwtl
xchg
pop
cs
jnp
jne
das
stos
mov
in
add
shr
add
pop
lahf
fldl
push
cs
leave
fs
cmp
push
cld
je
mov
stos
sub
shl
sbb
push
push
sbb
insb
xchg
sbb
pop
dec
cmp
ret
cmpsl
scas
outsb
dec
clc
sbb
mov
repnz
and
subl
xor
mov
testb
ljmp
jge
mull
sub
jmp
dec
test
aaa
adc
mov
add
shll
jb
adc
scas
mov
insb
or
orl
cli
cld
push
pop
and
enter
adc
jae
mov
fildll
sti
jno
push
cmp
aaa
scas
inc
test
push
in
mov
fstpl
gs
mov
sbb
iret
pusha
xchg
and
jb
cs
cld
xchg
xchg
mov
mov
cmp
cltd
xchg
sbb
adc
dec
fstpl
leave
ret
mov
add
mov
mov
repz
sub
pop
stos
cmpsb
mov
rclb
lods
jae
dec
ret
out
jl
jae
dec
pop
pop
lock
daa
adc
push
inc
xchg
inc
adc
mov
lret
adc
into
enter
lret
dec
aad
and
in
mov
xor
adc
fstpt
pop
xchg
inc
test
xor
addr16
sbb
cmpb
xor
dec
arpl
dec
xchg
arpl
sub
inc
mov
dec
mov
add
pop
lret
add
add
dec
jae
push
decl
push
out
fs
clc
xor
mov
rclb
or
out
test
ja
fisubrl
cmp
and
dec
or
dec
fnstenv
rdmsr
out
out
je
fsubl
adc
mov
ret
test
aaa
out
push
loope
mov
pop
stc
adc
sarb
movsl
test
sub
pop
pop
lods
pop
mov
das
ja
lret
out
clc
or
sub
sti
lcall
fnsave
addl
in
popa
adc
mov
fadd
or
shlb
in
xchg
jl
and
add
adc
push
add
gs
das
cwtl
call
outsb
add
test
lcall
pop
lea
push
mov
xorb
fxtract
inc
jb
jge
cwtl
jnp
ret
mov
test
mov
push
cs
sbb
sbbb
and
fisubrl
push
jp
gs
mov
inc
insb
and
jnp
xchg
mov
mov
sbb
dec
mov
jns
pop
xchg
xchg
inc
in
imul
mov
cmpsb
lret
js
rclb
jnp
ljmp
je
int3
stc
and
dec
and
iret
inc
das
in
xchg
add
mov
roll
clc
mov
jge
ss
mov
and
scas
xchg
adc
push
nop
jge
xor
cs
push
dec
in
xor
add
cmpsl
popa
in
xchg
mov
push
or
push
cmp
push
xor
or
ljmp
nop
jle
int
loop
fsubl
imul
lret
mov
mov
dec
fidivrl
pop
adc
jno
push
pop
imul
fmull
fldl
dec
push
and
mov
rcrl
out
pop
xchg
nop
jbe
xor
sbb
mov
jnp
sub
lret
xchg
mov
mov
das
mov
stc
xchg
test
jns
cld
clc
shll
repz
add
ror
xor
xor
imul
sub
stc
jno
pushf
popf
mov
aad
sub
adc
jecxz
and
dec
scas
add
add
test
ljmp
cld
pop
and
jae
and
popa
add
pop
add
arpl
andl
test
inc
or
mov
nop
cmp
sbb
pop
out
pop
ja
inc
ja
adc
or
test
call
or
imul
mov
lock
cmpb
cmp
xchg
aas
out
clc
cmp
cmp
jb
or
dec
adc
les
subb
inc
je
aam
jmp
adc
arpl
adc
push
in
nop
xchg
xchg
loopne
pop
mov
mov
loopne
mov
gs
aad
dec
rcl
add
push
jne
mov
in
nop
xor
ss
sub
add
popa
gs
imul
inc
mov
das
sar
sbb
sbb
push
pop
mov
sbb
int
rep
mov
sbb
inc
ret
push
lret
aas
std
mov
push
negl
push
and
add
mov
pop
daa
es
mov
or
jne
sub
loope
bound
stos
cmp
aas
pop
xchg
inc
imul
mov
scas
int3
sbb
rorl
frstor
lea
jge
into
mov
sub
repz
adc
out
test
mov
adc
and
sbb
sub
dec
push
in
dec
in
xlat
adc
push
jmp
int3
xchg
inc
mov
mov
cmp
mov
and
cmp
sahf
jp
push
std
sub
hlt
xor
cs
ffreep
add
scas
rcll
dec
out
jge
stos
inc
pop
sub
push
rcll
sbb
out
mov
or
dec
mov
shrl
cmp
jp
mov
add
pop
pop
mov
cli
ss
test
dec
out
dec
rclb
ffree
mov
jg
lret
jnp
and
lods
movsl
fmuls
inc
pop
adc
mov
xorl
cmp
and
leave
das
dec
push
call
fldenv
iret
negl
and
repnz
push
xor
lret
push
ljmp
jmp
xor
scas
and
jno
sbb
jmp
jge
lock
push
lret
outsb
arpl
rcll
loopne
sub
mov
jecxz
dec
scas
push
xchg
cmpsb
lds
pop
mov
fstpl
dec
cmp
sub
xor
fisubrs
scas
push
rcr
in
add
fwait
and
shrb
push
cltd
adc
rorl
shl
pop
inc
stos
mov
or
mov
inc
xchg
test
mov
imul
vcvtps2pd
xor
dec
mov
dec
imul
mov
mov
dec
cmpsb
int3
clc
sarl
mov
nop
jae
loop
aas
mov
xor
call
sub
fisubrl
mov
fs
push
cmp
sub
cmp
sti
sahf
push
in
or
dec
cld
orb
sub
push
cmp
sbb
jle
cli
insl
mov
xor
pop
les
push
mov
cmpsl
jmp
sti
xchg
ss
std
jg
cmpsb
enter
mov
rcrl
leave
xchg
notb
push
push
xor
loopne
adc
dec
cmp
hlt
jbe
pop
add
jg
cmpsb
mov
dec
mov
jae
mov
fsubs
insl
push
xor
je
sbb
lcall
lret
xlat
inc
jns
add
jle
fwait
push
mov
inc
push
pop
pusha
dec
inc
sarl
outsb
add
mov
pushl
into
movsl
ret
sub
push
jl
pop
jecxz
dec
mov
iret
adc
pop
push
inc
test
inc
mov
addl
or
loope
push
fimuls
cltd
push
fst
fstpt
test
mov
pop
mov
jne
je
jne
pop
dec
out
scas
and
mov
aad
repz
pop
fs
cmp
mov
push
and
push
pop
jne
add
dec
mov
jo
decb
xchg
jns
sub
lock
push
pop
daa
mov
jmp
dec
cmc
xchg
inc
pop
lods
dec
add
ljmp
xchg
cmc
adc
ljmp
aad
cmp
adc
jnp
adc
sbb
in
inc
mov
stc
pop
inc
mov
xchg
sub
std
push
ds
cmc
mov
addr16
jo
dec
sti
arpl
adc
pop
or
inc
cmc
jle
xchg
mov
imul
in
push
out
cmp
inc
dec
push
adc
decl
out
add
or
lods
pop
and
aas
inc
js
insl
data16
outsl
dec
pushf
mov
or
dec
cmp
call
rcl
pusha
or
add
xor
scas
jno
push
cmp
or
pop
pop
cmc
xchg
in
nop
pop
xor
imul
pop
push
hlt
cmp
sbb
mov
adc
scas
pop
push
xorb
test
adc
mov
popf
adc
orps
leave
and
pop
add
pop
shlb
or
mov
cwtl
dec
data16
repnz
movsb
movsl
arpl
dec
push
sbb
and
fsubl
movsl
pop
rorl
popf
or
add
or
cs
scas
xor
sti
inc
test
fildl
sbb
pop
lds
icebp
adc
mov
sbb
add
and
pop
mov
aad
je
fldt
or
popa
push
ss
fcmove
dec
dec
or
in
dec
call
lret
loopnew
insl
lods
pop
mov
mov
lock
shll
test
pop
sbb
push
stc
loopne
mov
outsb
mov
insb
and
push
sub
xor
andl
pmaxsw
fistpl
and
pop
sub
outsb
test
mov
fistl
sti
adc
scas
add
push
add
mov
push
adc
ja
pop
cs
loope
lret
mov
xor
xor
cs
cmp
push
int3
or
mull
mov
pop
shl
push
jecxz
pop
data16
xlat
popf
inc
add
cmpsl
or
mov
mov
imul
iret
mov
lods
mov
aas
cmpsl
pop
enter
idivl
stc
xchg
adc
mov
lret
mov
xchg
repnz
sti
cmp
pop
dec
add
pop
stc
mov
jb
cs
movl
mov
test
xchg
add
sbb
cmp
xor
mov
push
xor
loop
mov
fiaddl
mov
movsb
push
push
lock
test
push
mov
in
xlat
push
fsubl
pop
add
push
scas
ret
ficomps
hlt
ja
lods
in
lret
mov
cmp
out
push
push
out
add
popa
cmp
mov
cmp
cs
inc
add
repz
scas
xor
push
mov
xchg
push
or
mov
sahf
pop
or
cmp
popa
jp
loop
push
inc
sub
gs
enter
cli
and
ror
or
hlt
insl
ret
ja
cmc
gs
es
and
es
fsubrs
aas
lret
sbb
mov
cli
mov
loop
dec
jl
and
adc
cmp
sahf
andb
iret
stos
xchg
xchg
in
aad
push
xchg
or
ds
hlt
lahf
lcall
dec
out
xchg
stc
push
out
popf
inc
ja
out
adc
dec
iret
add
adc
push
fstpl
sbb
sub
lret
xchg
je
jne
mov
fldenv
inc
loopne
iret
xchg
jp
adc
mov
in
or
sub
loop
mov
cltd
ficomps
daa
jb
daa
sub
xchg
popf
jecxz
mov
sub
test
adc
imul
xor
mov
mov
lret
addr16
or
popa
pop
xchg
cmp
loop
xlat
or
pop
xor
out
ds
mov
nop
pusha
and
ret
jb
sbb
pop
scas
pushf
in
add
pop
repnz
dec
imul
in
mov
bnd
sub
leave
or
insl
ljmp
and
xor
and
pop
mov
cmp
rol
lock
ret
loope
inc
test
add
es
and
into
sub
jne
xor
cli
push
out
es
test
add
inc
clc
mov
fstp
dec
xchg
subb
jo
loopne
int
and
inc
mov
mov
mov
addl
inc
and
adc
out
bound
in
bound
lock
test
add
push
pusha
mov
xor
push
pop
mov
inc
add
lds
testb
sub
xchg
out
ljmp
jmp
cmp
pop
mov
sbb
aaa
lock
xchg
mov
pop
imul
sub
jae
leavew
dec
jg
mov
adc
add
pop
sarl
jne
and
test
icebp
fwait
mov
xor
mov
std
jg
dec
ror
add
mov
pop
test
inc
icebp
nop
sbb
fcomp
or
scas
push
insb
sub
inc
or
je
mov
and
and
lods
int3
push
mov
dec
in
cld
mov
inc
adc
mov
dec
push
xor
sub
xor
imul
adc
icebp
xchg
mov
fcoms
movb
mov
loop
xchg
cmp
dec
or
cmpsl
lret
inc
fistps
in
lret
push
imul
enter
push
shll
adc
jecxz
dec
dec
negb
push
out
je
inc
and
cltd
jmp
nop
cmpb
xchg
or
icebp
jno
cmp
jnp
das
pushl
stc
test
mov
iret
dec
js
ljmp
cmpsl
mov
mov
push
scas
xor
lods
insb
jns
rclb
icebp
in
inc
testl
arpl
insb
test
mov
adc
adc
mov
idivb
int
fnstsw
mov
repz
inc
dec
out
xor
xlat
jo
int
int
add
push
insl
inc
addb
in
xor
mov
lret
js
in
into
fiaddl
test
mov
push
or
push
cmp
fists
mov
iret
push
mov
jno
push
cmp
pop
clc
popa
jns
sub
mov
cld
pop
push
js
or
movsb
xchg
sti
and
mov
leave
mov
ret
mov
lret
jle
sub
pop
stc
inc
push
mov
bound
cld
cld
xor
xor
popl
mov
jge
cmpsb
or
int
mov
inc
jecxz
mov
fldpi
ljmp
fs
cmp
cmp
push
subb
push
sbb
or
sub
fisubl
icebp
leave
jne
cwtl
add
adc
ljmp
lcall
and
stos
adc
mov
inc
nop
cli
ds
cmp
jae
jnp
push
cmp
int3
and
stos
xchg
lods
stos
sub
in
mov
fcoml
dec
jo
dec
sub
mov
movsb
jmp
adc
mov
jmp
push
adc
inc
pop
jnp
pushf
jo
test
jge
fimull
fcomps
or
fucomp
dec
aam
es
mov
xchg
xor
ljmp
aaa
daa
cmpsl
fsubs
adc
jmp
std
pop
push
lea
outsb
cli
xor
rclb
insl
pop
cmp
dec
adc
or
ret
out
sub
mov
test
in
jnp
in
out
sbb
jnp
fnstsw
mov
test
jg
cmpsb
out
sbb
daa
push
dec
xor
cld
adc
out
outsb
xlat
aam
sub
lret
loopne
imul
xchg
push
sbb
leave
and
and
out
nop
inc
mov
dec
jle
adc
ja
inc
xor
dec
xchg
in
mov
stos
add
fwait
push
push
icebp
or
mov
and
push
fmulp
sbb
mov
pusha
es
adc
pop
ja
lods
pop
push
imul
xchg
jp
mov
outsl
push
mov
mov
mov
pop
out
bound
cmp
aas
jg
mov
lds
ja
std
add
imul
jl
rol
sahf
and
hlt
xchg
pcmpgtd
fcmovnbe
xchg
add
outsl
lock
stos
ja
mov
lret
xor
test
stc
neg
aam
xchg
insb
xchg
bound
mov
int3
pop
ret
push
out
jl
mov
xor
mov
inc
in
dec
adc
cmp
lret
out
subb
jb
imul
adc
sub
pop
dec
ljmp
sub
ret
xchg
lods
and
mov
cmp
fcmovb
ret
sbb
int3
mov
xchg
loopne
call
leave
sti
inc
out
mov
inc
bswap
xchg
mov
std
pop
out
movl
ret
cmp
dec
stc
jne
ja
jbe
into
test
jo
mov
sub
jp
je
jl
fldl
clc
scas
xor
xor
pop
jbe
movsl
jmp
dec
add
sbb
mov
movsb
push
stc
ficoms
pop
test
jp
roll
cmpsl
leave
hlt
sar
rorl
adc
aaa
out
inc
loopne
pop
das
leave
mov
lahf
adc
xchg
or
lods
add
sarl
xchg
push
insb
and
push
push
mov
jp
outsl
lods
loop
dec
inc
adc
mov
test
cmp
mov
inc
push
repnz
dec
lcall
leave
xchg
xor
ss
cli
ja
popf
fisttps
popf
cmp
mov
mov
dec
mov
xor
aaa
clc
sbb
ret
mov
dec
sbb
movsl
pop
or
aas
aad
das
or
pop
loope
xor
jge
mov
mov
sarl
andl
dec
cmp
jnp
imul
leave
sbbl
stos
gs
xor
enter
xchg
repnz
add
jl
ret
push
rcll
xor
push
out
sub
pop
in
out
movsb
inc
dec
sub
pop
xchg
fwait
lods
das
jns
push
xchg
push
rolb
sbb
adc
push
adc
or
mov
inc
movsl
sub
add
mov
inc
mov
push
ret
dec
adc
les
cs
fcomip
and
fistpll
sub
cld
mov
adc
pcmpeqw
add
xor
fisubrl
jg
cli
pop
dec
arpl
sbb
rclb
bound
xor
xchg
repz
pop
jno
fndisi(8087
mov
xor
mov
frstor
jnp
mov
push
out
es
or
inc
mov
sub
fdivl
sbb
jge
add
das
hlt
rclb
add
sub
je
gs
add
addr16
xor
enter
iret
sub
loop
pop
dec
xchg
xor
repnz
mov
es
mov
inc
push
je
cli
pop
imul
insb
jns
pusha
nop
insl
xor
scas
hlt
cltd
xchg
and
or
movsb
adc
shll
jl
or
add
or
fiaddl
fwait
pop
sub
add
aaa
test
addr16
xor
inc
inc
inc
scas
movsb
add
or
nop
js
xchg
pop
inc
inc
shlb
sub
or
jge
inc
int3
iret
mov
movsb
inc
rolb
ja
fildll
dec
and
add
or
out
and
pop
xor
dec
mov
jno
ja
push
pop
jg
xor
mov
ret
in
fistps
data16
and
lret
adc
xchg
push
cmc
ljmp
sarb
cmp
mov
pop
jmp
dec
mov
fildll
jbe
hlt
ficompl
rorb
stos
add
fs
hlt
and
mov
aad
bound
push
xor
sbbl
mov
mov
repz
orl
sbb
mov
stc
mov
rcll
gs
jne
jecxz
sub
popa
cmpb
arpl
push
mov
pop
dec
fnsave
loopne
int3
fnstcw
cmp
rorl
sahf
pop
and
in
rolb
push
out
and
mov
push
out
or
mov
push
into
jae
dec
out
adc
test
les
dec
push
out
xchg
mov
shr
rorb
jbe
xchg
sbb
sub
out
loope
xchg
mov
xor
inc
rol
pop
mov
cli
cmc
and
es
sbb
or
ja
movsl
jae
loope
adc
cmp
push
mov
sti
or
mov
fld
sub
out
imul
fisubrl
sub
cmp
fwait
jbe
push
ret
in
push
mov
sub
fidivs
xor
ret
dec
in
xchg
push
jle
aad
cltd
adc
xorl
sub
add
adc
std
jnp
aam
lods
sbb
js
xlat
push
lret
js
cmp
loope
inc
cmp
sbb
lods
sarb
cltd
xchg
pushf
push
sbb
jg
data16
sbb
mov
ss
pushf
cmp
add
lods
xlat
pop
sub
cmp
sub
out
outsb
cmp
mov
xchg
cwtl
fisubs
sbb
jmp
sahf
addr16
cltd
sbb
xchg
dec
loopne
mov
push
ret
gs
shlb
or
ljmp
cmp
xchg
xchg
adc
pop
mov
lea
pop
jb
cmpsl
aad
scas
mov
push
adc
inc
xor
jge
xor
dec
fnstenv
repnz
std
adc
mov
loop
cmp
dec
xor
lcall
fs
outsl
push
or
repz
divl
aad
ret
imul
shlb
mov
mov
aam
sbb
insl
jmp
incb
out
stc
sub
addb
mov
dec
add
dec
clc
repz
mov
push
mov
sub
add
xchg
or
scas
adc
pop
push
cwtl
movsb
into
pop
int3
inc
roll
push
dec
mov
mov
addb
pop
subb
add
mov
sub
add
ret
mov
cld
mov
mov
testb
push
fsub
loope
out
out
mov
in
sub
shlb
shrb
outsb
int
fisubrl
pop
nop
rcll
test
lret
repz
shrb
jmp
cmpsl
stos
cmp
cmp
xchg
xchg
and
or
movsb
lea
push
cmp
xor
dec
cmpsb
inc
jle
push
cmpsl
fiadds
and
push
lods
icebp
xor
fdiv
lcall
leave
mov
push
mov
xchg
pop
cld
mov
pop
stos
xorb
sub
and
gs
cmpsl
rcll
fs
pop
xor
insl
jns
es
stos
add
and
out
dec
jecxz
das
idivb
pop
aad
inc
jbe
pop
leave
dec
sbb
outsl
cmpsl
test
cmpsl
inc
push
sbb
ret
inc
mov
fsts
incl
mov
and
inc
insl
addl
jg
loop
fdivrl
xor
jo
or
pop
sub
loopne
or
cmpsl
jno
inc
cmc
push
sbb
add
test
js
adc
hlt
xchg
test
mov
popf
sarl
outsl
outsl
nop
flds
dec
mov
dec
mov
push
xor
pop
test
mov
pusha
inc
cmp
xor
repz
dec
sub
cli
add
xchg
insl
sbb
ficoml
out
push
sarb
insb
popf
lret
dec
jne
js
push
int3
adc
mov
inc
sub
xchg
fstpt
xchg
xchg
adc
popf
adc
dec
xchg
cli
ljmp
cmp
dec
testb
not
push
leave
push
dec
mov
or
jge
incl
mulb
int3
notl
scas
in
jmp
adc
push
nop
inc
inc
movsl
jmp
dec
fldcw
jmp
push
cli
inc
and
mov
das
sti
push
int3
hlt
xchg
or
mov
inc
push
push
cltd
leave
idivl
jl
repz
lcall
aam
dec
jge
insl
mov
hlt
sub
cs
xor
outsl
adc
push
call
pop
ror
xchg
inc
pop
adc
cmc
lahf
sub
das
xor
mov
add
mov
cs
mov
or
push
jb
mov
mov
test
adc
add
mov
xorl
sub
or
xchg
mov
push
or
push
aas
popa
inc
add
aad
gs
movsb
add
add
inc
inc
sub
cmc
insb
add
ljmp
xchg
mov
sahf
bound
insb
movsl
mov
mov
jge
addr16
dec
jle
test
sti
and
repz
pop
pusha
lcall
cmp
mov
mov
inc
aad
lcall
inc
xor
movsl
std
fs
push
push
cltd
je
add
push
nop
lcall
dec
xor
fisubrs
jne
sbb
inc
sbb
xor
dec
repnz
lahf
jge
shlb
and
les
xchg
mov
cmp
loope
xor
cs
push
jp
adc
mov
jle
dec
jnp
mov
push
jno
ret
adc
add
dec
cs
lock
fiadds
jecxz
jbe
scas
and
divl
adc
mov
leave
popf
cs
std
inc
lock
int3
into
arpl
mov
outsb
les
inc
repz
enter
push
jae
push
cwtl
pop
sub
push
aam
cltd
push
data16
les
test
xor
lods
xchg
xor
mov
and
inc
orb
mov
out
imul
push
jg
fs
outsl
push
pop
int
fistpl
push
xlat
shll
ja
scas
xchg
push
inc
cld
dec
movsb
test
icebp
cmpsl
mov
pushf
xchg
call
lcall
dec
or
pop
in
lds
adc
xor
push
fs
js
cs
sub
pusha
lret
jmp
jle
sub
push
jb
jne
fisubrs
mov
lahf
les
mov
loope
int
sub
pop
jb
add
xlat
filds
sbb
sti
sub
lock
mov
enter
pop
push
adc
pop
dec
aam
jmp
dec
lahf
mov
hlt
std
adcl
cmc
mov
jle
out
cmp
and
cmp
add
xlat
jno
movsb
insb
movsl
inc
inc
and
xchg
xor
sbb
ja
jbe
and
dec
pop
popf
fnstsw
sub
sub
das
fcomi
add
and
in
outsl
push
aas
xchg
sub
sbb
hlt
cmp
call
or
ret
aaa
mov
mov
iret
loop
ds
push
dec
sbb
xchg
loop
inc
loopne
lret
jle
sub
nop
mov
pop
dec
ljmp
mov
movsb
fs
hlt
sub
mov
dec
cmp
xlat
cmp
mov
dec
clc
xchg
cli
adc
sti
push
inc
repnz
je
xchg
inc
xchg
aaa
sub
sbb
es
inc
ljmp
stos
cmp
jmp
mov
lea
scas
shlb
call
and
dec
push
pop
jg
lret
cmp
sarb
rcll
mov
and
jp
or
in
xor
idivb
sbb
pop
js
lahf
scas
adcb
mov
insb
or
adc
adc
or
push
call
add
mov
ss
xor
fs
dec
and
frstor
and
pop
call
jae
cmp
jg
jne
push
sahf
lahf
or
inc
adcb
imul
cmp
es
lods
outsl
mov
inc
ss
cli
cmc
cltd
sti
js
enter
dec
jl
syscall
cld
mov
dec
pusha
inc
cs
cmp
popf
jl
mov
xchg
fwait
stc
aam
test
xor
repnz
mov
aam
mov
mov
inc
dec
testb
dec
xlat
mov
sub
jmp
pop
push
push
out
test
nop
aas
das
xchg
mov
icebp
pop
inc
pop
loop
cltd
add
pop
es
xor
pop
mov
movsb
in
mov
mov
loop
xor
pop
add
ret
xchg
rcrl
leave
mov
mov
stos
jne
andb
mov
test
lcall
push
ja
shll
inc
adc
push
stc
mov
xchg
enter
xchg
pop
xchg
pushf
push
cs
adc
movsl
stos
and
sti
ja
pop
sti
pusha
adc
les
xor
mov
add
xor
dec
ret
sbb
xlat
xor
xor
sbb
idivl
jg
ror
push
sbbl
ja
int
pop
jecxz
repnz
iret
lods
mov
xchg
test
inc
mov
scas
mov
sbbb
push
or
fisttps
jbe
lret
fucom
mov
jns
dec
xor
sbb
xchg
mov
hlt
inc
dec
mov
daa
dec
adc
idivl
mov
cmpsl
aas
dec
rclb
dec
cltd
aad
mov
test
or
jnp
inc
xor
pop
shl
add
add
and
xor
fs
and
out
xchg
daa
jo
shr
add
lock
mov
pop
push
dec
cmp
cmpsl
cltd
and
mov
sub
add
repz
sahf
dec
jg
adc
movsl
test
outsb
lods
sbb
mov
cmp
push
fisubrl
mov
leave
enter
scas
add
mov
push
mov
jmp
test
push
add
pop
aam
cmp
pusha
pop
mov
pushf
imul
sbb
mov
dec
nop
dec
es
fadds
outsl
ret
adc
nop
mov
jl
jae
jns
fildl
icebp
enter
sbb
jle
lods
push
xchg
pop
pop
popf
sar
mov
mov
add
popf
xor
xchg
cmpsl
jnp
cli
out
shl
pop
xchg
in
mov
movsl
out
inc
cmc
push
sbb
loop
or
insl
ficoml
addb
nop
mov
cmp
aas
pop
mov
lret
adc
dec
orps
mov
cs
pop
xchg
fisttps
pop
push
cmp
and
mov
pop
bound
mov
addr16
lods
xchg
sub
add
ret
aaa
cmovge
or
mov
lahf
lret
popf
in
mov
subb
cmp
out
jbe
pop
test
xchg
nop
sbb
outsl
test
test
jns
sbb
push
test
jnp
insl
mov
and
jne
or
fsubs
fidivs
cmc
in
nop
in
mov
push
leave
mov
cld
push
sub
and
lahf
xchg
dec
repz
movsl
loopne
mov
push
dec
fs
jb
insb
dec
stc
dec
dec
cltd
setne
test
xlat
xor
inc
adc
mov
cs
lahf
mov
inc
push
sub
sub
mov
test
popa
test
movsl
push
push
mov
add
sbb
and
dec
inc
popf
sbb
int3
jne
jbe
lcall
imul
adcl
inc
call
push
add
inc
pop
inc
xchg
or
ret
dec
xor
jnp
fsubrl
es
adc
dec
dec
xor
adc
test
nop
ftst
pop
pushf
test
xchg
ja
lret
movsl
loop
adc
mov
mov
add
mov
sbb
cmp
or
pop
mov
or
inc
in
push
lock
xchg
xchg
push
jno
dec
push
mov
pop
loope
addb
shrl
mov
push
pop
xchg
add
jnp
cmp
int
xchg
jae
xor
lds
push
iret
div
add
mov
ja
add
daa
mov
gs
inc
ljmp
ror
sbb
vucomiss
fsubrl
fwait
les
add
add
lods
xor
loope
inc
sbb
sub
test
sub
mov
movsl
and
test
xor
inc
mov
sbb
hlt
jb
mov
ss
icebp
pop
popa
sbb
outsb
mov
xor
mov
dec
cmp
pop
push
into
in
popf
mov
ret
test
lea
and
scas
push
sub
mov
mov
outsb
ret
addr16
test
adc
adc
out
out
mov
pop
iret
incl
fisubs
scas
clc
xchg
push
lcall
fsubl
mov
cmpsb
or
mov
leave
flds
out
xchg
outsb
cs
push
mov
sub
rorl
or
out
cmp
subb
add
out
stos
sbb
mov
fisubrl
jno
sub
cltd
xchg
jl
jnp
mov
xor
and
sahf
mov
jns
in
dec
mov
inc
js
cmpsb
lret
mov
xor
aam
fnstenv
pusha
shl
adc
jne
push
cmc
rorl
pop
out
xchg
jp
adc
push
imul
and
or
mov
lock
cld
movsl
ret
cmc
mov
nop
ss
je
jge
cltd
es
or
sub
push
fiadds
push
ror
sbb
mov
push
adcb
loop
jnp
jbe
push
into
das
subps
popf
xor
ret
daa
lods
push
rcrb
mov
pop
ud2
inc
or
dec
in
shr
jno
pop
inc
cmpsb
in
adc
test
fsub
out
call
add
mov
stos
xchg
mov
andl
out
xor
shrl
in
push
xchg
sahf
adcb
fcompl
lods
jbe
adc
sbb
pop
cmp
sbb
push
ffree
ljmp
lret
mov
mov
aam
mov
dec
jno
sub
mov
xchg
fnstsw
sub
sub
or
jns
les
mov
sub
mov
popf
mov
add
jp
mov
push
mov
xor
push
push
lret
mov
mov
mov
push
loop
mov
fwait
pop
nop
mov
cmpsl
jmp
dec
inc
sbb
loop
mov
cmp
test
dec
cmp
ljmp
lds
add
popa
mov
lret
iret
mov
in
xchg
lock
jp
les
sti
push
jo
ss
push
fwait
jbe
push
fiaddl
movsb
cmc
pop
inc
pushf
and
andb
xchg
call
cmpsl
jge
lea
movsb
and
insb
pop
mov
out
scas
pop
push
push
lcall
cmpsl
pop
lea
insl
mov
popf
mov
jo
test
jmp
fdivrp
jne
sbb
mov
int3
cltd
lds
or
mov
aaa
mov
sbb
outsl
adc
xchg
sti
adc
je
adc
nop
xor
dec
cmp
aas
push
mov
not
mov
add
imul
xor
stos
jns,pn
add
mov
push
push
les
les
cmp
jle
sbb
xor
xor
pop
mov
and
jns
lret
mov
mov
sbb
xor
xor
loop
sbb
xchg
divb
push
test
mov
outsb
pop
rcr
or
idivb
xor
mov
ficomps
or
and
dec
ss
jnp
jmp
daa
inc
imul
mov
cmp
mov
add
jns
mov
outsl
and
js
xchg
jno
idiv
mov
jbe
pop
add
jnp
and
ss
cmp
sbb
dec
push
test
add
lock
mov
mov
test
mov
lock
push
out
cmp
fs
sti
call
mov
jae
or
and
ret
scas
pop
sti
and
or
mov
dec
std
jo
sbb
dec
push
push
xchg
out
arpl
mov
and
insb
aaa
add
pop
hlt
daa
fwait
push
xchg
inc
push
mov
push
push
popf
jns
xchg
ljmp
push
mov
push
fisttpll
fildll
lods
mov
add
bsf
rcll
inc
cltd
sub
push
cs
cltd
mov
into
push
ret
mov
sub
fld
shrb
fsts
stos
ss
inc
and
xor
clc
sub
std
std
jae
test
pop
rorl
lock
out
xchg
push
push
dec
shlb
loop
fadd
int
jo
mov
jp
mov
fstps
and
cmpb
repnz
js
push
mov
cmp
in
xor
inc
push
sub
and
jge
loope
sub
fldt
cltd
sbb
cli
mov
push
scas
and
rcl
mov
xor
inc
fbld
in
scas
inc
jns
jg
ret
out
mov
xor
push
mov
jb
mov
jno,pt
stc
loopne
sub
jae
ffree
imul
movsl
decl
lea
xchg
lea
cmc
imul
dec
or
pop
movsl
sub
gs
mov
and
or
mov
subb
nop
lahf
add
xor
mov
sbb
xor
jl
ficoms
js
mov
inc
mov
push
push
ret
adc
or
in
fsts
sub
popa
andl
neg
leave
mov
xchg
stos
adc
aad
push
lods
cmpsl
adc
mov
mov
xchg
repnz
pop
mov
mov
sbb
imul
mov
inc
scas
lea
cmpsb
xchg
bound
lock
jge
fnsave
mov
dec
aaa
adc
adcl
xchg
jecxz
or
ret
fcmovnb
fcmovne
out
mov
cmpsl
xor
jecxz
shl
xor
loop
dec
add
or
dec
or
xor
stos
sti
call
insl
xor
sub
shl
push
outsb
inc
cld
inc
loopne
lds
das
sbb
adc
fldt
pop
xchg
jb
roll
xlat
inc
daa
or
xchg
lea
sub
notl
call
xchg
cmp
sahf
push
jle
fildl
jmp
cmp
lahf
pushf
sub
mov
scas
push
test
inc
jne
xor
mov
xchg
pop
scas
call
iret
jns
cltd
sbb
and
mov
or
or
jnp
push
jp
mov
stos
jne
es
hlt
lahf
sbb
cmp
or
push
aaa
sub
xor
clc
mov
mov
adc
cmp
and
movsbl
add
or
dec
clc
lea
xchg
push
inc
fsub
jae
dec
loop
jno
sub
jae
push
dec
stos
daa
cld
push
test
pop
cmpsb
mov
xor
add
fadds
xchg
ss
adcb
cs
pop
lods
rclb
dec
mov
xchg
icebp
lret
lea
scas
in
sbb
mull
sbbb
or
sbb
imul
dec
lcall
mov
leave
inc
out
popf
imul
fsubrs
mov
imul
movsb
add
cs
sbb
popf
xor
leave
adcl
enter
rclb
mov
add
xor
sti
and
out
js
sub
mov
loope
popa
fbstp
push
mov
sbb
clc
js
fdivl
or
or
xlat
adc
out
sub
mov
or
jecxz
mov
sub
pop
or
adc
std
adc
jmp
ds
lret
arpl
out
mov
dec
gs
push
test
fsubrl
stos
movsb
aam
shll
mov
xchg
inc
push
shr
call
fs
iret
addb
sahf
mov
jmp
adc
test
insb
add
sub
loope
mov
stc
mov
xchg
std
aas
jo
outsl
dec
aam
in
push
in
imul
pop
sub
shlb
and
nop
jne
sub
mov
nop
fidivrs
dec
sub
cmc
cmc
inc
ret
clc
mov
gs
jnp
cmp
jne
add
lods
adc
leave
cmpl
push
leave
insb
inc
stos
outsb
subb
cmpsb
sub
pop
lahf
sbb
mov
and
lock
lods
fs
push
push
mov
out
lret
mov
mov
mov
cmp
pushf
outsl
xor
pop
jne
nop
sbb
aas
mul
xchg
mov
lods
jecxz
mov
jmp
loope
mov
jnp
sbb
fcmovnb
jl
loop
arpl
arpl
mov
push
out
fidivrl
adc
xchg
mov
stos
sbb
xchg
and
imul
pop
mov
clc
xchg
xor
push
push
and
dec
popf
in
lods
jbe
cs
addr16
aaa
pop
fs
out
out
push
jl
js
insl
imul
mov
ds
pop
jge
adc
jne
jns
ret
addr16
xchg
scas
jno
xlat
xchg
sub
and
sub
cmp
mov
mov
sbb
lahf
jmp
or
cmpl
pop
cwtl
and
inc
push
aam
push
shlb
adcl
enter
cmp
inc
mov
cmp
and
shrb
mov
jp
mov
insb
jb
jg
xor
sbb
jp
mov
int
pop
jmp
je
pop
outsb
xlat
mov
mov
movsl
sub
mov
pop
int3
adc
jne
xchg
in
push
sar
cmp
mov
out
add
aaa
mov
xchg
ffreep
mulb
mov
pop
jp
sub
mov
mov
test
mov
je
xchg
in
push
aaa
pop
test
xchg
pop
dec
outsl
sbb
dec
or
dec
sub
aaa
pop
mov
jle
xor
loope
out
repz
and
gs
test
sbb
mov
push
pop
xor
mov
xchg
adc
xor
or
cltd
adc
arpl
lods
cmp
clc
fadds
pop
mov
clc
inc
mov
and
out
push
sbb
loopne
rcrb
or
mov
sbbb
fwait
and
inc
sete
mov
out
movsb
add
lret
pop
je
and
ret
xchg
int3
les
imul
popa
or
push
xor
out
inc
das
hlt
dec
aas
adc
js
hlt
outsl
out
xlat
and
dec
adc
ret
ja
int3
cmp
sbb
mov
popa
in
das
movsl
add
fwait
incb
push
notl
cmp
push
mov
sahf
lahf
iret
inc
sbb
mov
sbb
pop
loope
icebp
push
jns
lcall
aam
xchg
push
push
push
sbb
jb
fucomp
dec
lods
xlat
xchg
cwtl
imull
cmp
sbb
cltd
lock
shrb
mov
xchg
jmp
xor
mulb
sti
xor
push
push
ss
fs
subb
jmp
jmp
xlat
sbb
mull
shrl
mov
cmp
xchg
sarb
lock
push
nop
adc
ja
jmp
mov
xor
imul
pusha
ret
push
enter
test
fld
dec
outsb
inc
push
les
xchg
shl
mov
je
divl
mov
movsl
jne
xchg
push
out
es
sub
mov
scas
mov
pop
mov
add
pop
add
in
pop
fwait
xchg
mov
inc
push
adc
shlb
pop
sbb
add
pop
mov
shll
push
mov
aam
inc
je
in
insb
mov
xchg
fnstenv
inc
jae
daa
int3
testl
xchg
mov
cs
jne
in
add
repnz
inc
push
mov
sub
fcomi
stos
mov
sbb
mov
lret
push
fidivrs
sub
inc
mov
stos
test
fs
push
out
mov
int
outsb
mov
adc
mov
iret
jnp
rolb
sub
test
and
sub
push
xchg
das
in
xor
or
stc
add
lret
dec
lods
xchg
sub
mov
push
xchg
jno
lds
xchg
xchg
pop
push
xchg
sbb
dec
arpl
or
sub
in
iret
dec
loop
jge
dec
mov
mov
xchg
and
pop
insl
xchg
jne
in
orb
fs
adc
cli
mov
pop
ficomps
pop
dec
scas
gs
fbld
leave
and
out
mov
aad
adc
inc
inc
insl
out
pop
pop
mov
in
cmpsl
into
or
push
mov
xor
cld
nop
push
lea
dec
inc
sbb
jae
ret
xorb
jle
ja
xchg
int
cld
sti
mov
push
jnp
sbb
call
xor
fstps
jb
sbb
pop
fisubrl
fadds
lret
mov
jmp
jno
fldt
jl
jne
jl
imul
pop
mov
xor
sahf
outsl
stos
outsl
sbb
je
sub
xchg
ret
dec
fs
jmp
mov
sbb
pop
sub
movsl
xor
fildl
fdivp
in
mov
fisubrl
xchg
ds
xchg
pusha
dec
fnstenv
jb
add
ljmp
rcrl
outsb
sub
outsb
mov
aaa
pop
into
fwait
add
test
xor
lea
data16
sbb
and
mov
repz
call
faddl
sub
imul
add
xor
in
cli
sahf
jge
sbb
cmpb
insl
inc
xchg
xchg
sub
hlt
lret
push
fstps
mov
test
call
pop
mov
dec
sub
and
and
cmp
adc
mov
or
inc
call
push
mov
mov
xor
movlps
mov
mov
and
loope,pn
cmpl
mov
pop
rolb
mov
jg
fisubs
enter
fcmovu
pop
popa
adc
add
and
jae
fisttpl
jo
add
in
cmp
push
dec
dec
lret
jecxz
mov
xchg
mov
jecxz
test
mov
rorl
adc
fwait
movsb
int
hlt
insb
cmp
leave
push
andl
stos
mov
jle
mov
cmp
push
mov
js
jg
pop
mov
mov
jle
out
xchg
popa
sub
dec
cmp
lcall
call
pop
int3
insl
sub
pcmpgtb
cmp
js
push
lds
xor
imul
pusha
lds
add
mov
adc
add
mov
pushf
mov
mov
xchg
or
mov
jl
sbb
lret
dec
test
je
popa
dec
xchg
add
cmp
push
cmp
adc
mov
cmp
or
push
sbb
push
adc
hlt
xor
insb
jg
inc
subl
or
int3
mov
jle
sarb
out
inc
jnp
xor
js
adcb
mov
fwait
rcl
das
jno
shll
gs
add
xor
xchg
push
and
aas
xchg
jne
cmp
and
pop
sub
xchg
dec
adcb
fcomip
ret
andb
pop
lcall
leave
fdivs
lods
fnstcw
xor
leave
xchg
jl
pop
aad
ja
popf
jb
lods
mov
mov
adc
bts
mov
xor
fbstp
test
adc
jecxz
popa
add
adc
mov
sub
aad
mov
hlt
pop
jnp
movsl
aad
xor
push
data16
push
mov
cmpsb
push
inc
dec
ret
stc
sub
jae
imul
xchg
adc
jecxz
mov
push
dec
iret
pop
mov
xchg
pop
push
aaa
ss
push
jae
test
sbb
test
lret
fildl
out
iret
xchg
fidivl
leave
int3
sub
sbb
mov
pusha
cmp
test
cmp
jg
in
daa
test
out
lahf
pop
mov
xor
test
in
fwait
dec
cmp
fcmovnbe
gs
cmp
adc
jle
cmc
dec
xchg
imul
xchg
clc
cmp
inc
cmp
mov
xor
in
lcall
cwtl
xor
mov
push
lods
in
mov
jmp
sbb
cmp
stc
pusha
pushf
xchg
test
mov
pop
jo
inc
pop
sbb
pop
push
jbe
out
andb
hlt
jp
cmpsl
cmp
out
fcoml
popf
adc
aas
inc
xor
pop
je
add
cs
movlhps
push
xlat
push
sahf
dec
scas
cmp
xchg
mov
test
shll
cmp
rcll
add
pop
xor
mov
hlt
cmp
sub
mov
dec
jmp
aas
scas
mov
mov
jae
xor
call
cmc
ja
pop
xchg
and
neg
jle
jno
xchg
adc
jl
hlt
or
fldt
mov
sbb
ficomps
aad
jo
and
repnz
xchg
xchg
push
pop
aam
loop
out
mov
push
test
test
sbb
repz
sbb
sar
pusha
imul
addr16
icebp
mov
mov
in
push
xchg
jno
inc
bound
pop
fstpt
dec
jo
sarb
mov
movsl
sbb
dec
sbb
loopne
leave
or
pop
mov
mov
jns
pop
xchg
clc
enter
cmc
adc
pop
enter
jno
dec
sti
add
xor
shlb
xor
sub
sahf
gs
or
int
mov
inc
sub
test
popa
mov
dec
push
scas
jmp
fwait
bound
push
rol
or
ljmp
sub
jae
push
dec
jb
popf
xchg
dec
jbe
subb
mov
ret
or
mov
sbb
add
xchg
mov
xor
popa
adc
bound
cld
icebp
mov
sub
pop
les
pop
pop
adc
sbb
pop
push
adc
jmp
outsl
xchg
aas
xchg
pop
jecxz
ss
sub
xchg
pop
or
xor
mov
fiadds
xor
mov
mov
pop
movsl
pop
shll
jnp
mov
add
lcall
xchg
inc
push
lret
push
in
fstl
jae
test
push
in
cmpsl
mov
sbb
jnp
subb
ja
cmp
jmp
test
lds
xchg
push
inc
cmp
loopne
repz
fisttpll
jl
sarb
aam
scas
fsts
jge
mov
in
lret
ret
in
stos
lods
andb
add
cmp
loope
sbb
adc
dec
xchg
mov
lods
sub
pop
push
lods
lcall
add
arpl
mov
inc
mov
fs
mov
faddl
jmp
push
sti
xlat
or
inc
pop
call
xlat
mov
push
cs
shrb
and
sbbb
fildl
fsub
loop
test
rcll
cmp
xchg
pop
pop
aas
roll
repnz
int3
sbb
gs
mov
jb
and
mov
or
rolb
or
dec
push
xchg
lahf
out
dec
pusha
pop
scas
stc
dec
movsb
mov
xchg
mov
xor
outsb
aad
xchg
test
cmp
jecxz
fadds
pop
arpl
or
push
cs
sbb
scas
add
pop
stos
sahf
mov
add
popl
cwtl
leave
mov
adc
dec
jecxz
xchg
adc
sbb
xchg
cli
fisubl
adcl
jl
ds
xor
ficoms
mov
pop
and
sahf
mov
mov
push
pusha
das
adc
ficoml
jecxz
dec
dec
pop
mov
cmp
mov
fidivs
dec
mulb
cmp
add
adc
sbb
outsl
add
cmp
push
mov
jne
adc
jb
pushf
xchg
cwtl
imul
mov
lret
lea
sbb
xor
sbb
mov
dec
jmp
mov
lock
push
das
or
lcall
mov
jp
mov
or
pop
sbb
mov
add
pop
pop
test
dec
stos
cmp
loopne
sbb
push
lret
les
push
shll
jmp
loope
dec
cwtl
sbb
add
xchg
fldt
jns
xor
fbstp
add
mov
mov
cmc
adc
xchg
fdiv
jns
loopne
out
mov
add
popa
lcall
xlat
out
cmp
push
lret
xor
outsb
insb
xlat
mov
cli
and
push
out
es
sub
bound
outsl
xchg
xor
inc
in
stc
mov
or
push
enter
pop
gs
cli
hlt
mov
repz
xor
stos
sbbl
push
or
pushf
mov
jae
or
clc
add
xchg
out
xchg
js
mov
adc
dec
lds
cmpsl
fcompl
jl
es
sub
jg
out
ret
cld
sub
mov
int
inc
movsl
xchg
sub
outsl
sarb
xchg
sbb
aad
jbe
mov
ja
push
mov
scas
mov
jmp
mov
jnp
jle
jmp
mov
lahf
or
cmc
es
sarb
mov
xor
mov
xchg
mov
inc
inc
out
sarb
negl
sub
inc
sbb
jl
jmp
into
inc
sub
push
clc
fimuls
push
sbb
push
and
xor
fsubrl
fistps
pop
js
pop
jns
add
cmp
or
mov
into
or
xchg
dec
add
fstpt
aam
lds
out
mov
cmp
movsb
fists
enter
lahf
mov
mov
test
andl
bound
out
loope
decb
cs
sub
lahf
loopne
test
adc
lret
sub
pusha
jl
shrb
lcall
subb
jg
push
sbb
pop
push
pop
in
cmp
inc
dec
js
pop
xchg
mov
daa
fstps
sbb
ret
mov
or
or
push
inc
orps
shll
not
add
aam
add
inc
mov
popf
pop
ljmp
pop
jne
popf
das
das
cmpb
out
mov
test
and
pop
sar
mov
imul
mov
adc
and
jmp
mov
shlb
ficoms
loopne
and
iret
in
dec
call
jae
and
push
lods
mov
sub
xchg
std
pop
ds
jo
int
mov
scas
push
cmp
repnz
out
xchg
fs
in
mov
sub
and
cmp
jo
add
fdivrl
add
movb
add
mov
cmp
int3
movsb
dec
xlat
pop
insl
int
ljmp
addr16
lret
mov
adc
and
xor
aam
loope
jbe
rcl
inc
lea
xor
lahf
inc
jae
mov
mov
arpl
mov
lock
mov
stc
cmp
enter
insb
rol
test
aam
or
leave
pushf
mov
cwtl
sbb
aad
push
int3
push
pop
sbb
adc
sub
cli
imull
negb
and
lds
pop
pop
and
movsb
sahf
inc
ffreep
aaa
push
popa
xor
jbe
or
jo
scas
xchg
pop
pop
or
inc
mull
or
in
dec
aaa
dec
fucomip
lods
add
ret
add
idivb
xchg
jecxz
lret
cmpsb
daa
loop
movsl
mov
lds
or
push
mov
push
frstor
lods
aas
and
out
aaa
mov
mov
xchg
imul
les
test
clc
outsb
shll
or
movsl
addr16
jmp
std
pop
xchg
sub
jle
dec
test
test
and
std
ficoml
cli
out
push
xlat
push
in
cmp
out
xor
mov
stc
cmc
call
xor
jg
dec
cs
add
add
sub
repz
daa
xlat
fisubrs
mov
mov
push
pop
cmpsb
mov
mov
sbb
mov
add
scas
nop
and
xchg
test
xchg
cmp
out
push
leave
lods
sti
pop
ret
sbb
clc
or
pop
sub
pop
in
mov
and
in
inc
int
ss
in
mov
or
mov
mov
or
adc
and
insl
pop
lcall
jmp
and
nop
jmp
inc
pop
outsl
inc
add
les
outsb
push
xchg
push
movsb
sbb
sbb
pop
imul
lock
lock
inc
ss
lret
out
sbb
out
int3
or
push
fstps
dec
insl
mov
cmp
add
lret
pop
or
sub
mov
or
pop
sub
ljmp
cmp
pop
ret
adc
inc
xlat
fisttps
xor
push
inc
sub
sti
jb
inc
call
fadds
push
jl
push
movsl
pop
test
inc
ds
cmc
arpl
int3
sbb
jne
mov
adc
ljmp
cli
and
xchg
mov
xorb
pusha
out
sbb
adcl
into
fisttpll
pop
scas
pop
jle
ss
lods
mov
test
movsb
xor
adc
sub
insl
push
imul
mov
xchg
cli
clc
fdivrl
sub
ds
xchg
outsb
or
mov
rol
adcb
push
pop
jne
daa
lcall
movsl
jbe
ds
pop
cmpsb
mov
inc
mov
cbtw
or
into
dec
aam
cwtl
sub
in
dec
arpl
stos
mov
out
add
mov
or
mov
pop
fcomi
and
cmc
popf
dec
pop
out
bound
mov
xor
jo
cmpsl
repnz
iret
mov
xor
xchg
or
add
mov
pusha
push
ss
cld
mov
add
sbb
ret
fwait
mov
sbb
mov
sbb
lods
test
sbb
std
dec
dec
lds
les
push
mov
and
jo
movl
cmp
or
and
xchg
ret
or
aaa
xchg
cld
push
dec
push
rorb
ficoms
cld
bswap
clc
xchg
push
inc
or
mov
and
shr
sbb
dec
add
sbb
aam
pop
sbb
dec
clc
mov
mov
dec
call
sbb
push
adc
dec
inc
jl
hlt
push
scas
jb
rol
mov
lea
ret
xchg
sbb
xchg
fsub
sub
imul
lds
jno
fdivrl
xor
and
in
inc
iret
mov
inc
add
call
jno
push
inc
test
pop
test
pop
dec
push
arpl
cmp
adc
out
insb
xchg
push
in
jl
movsl
mov
ja
out
xlat
pop
lods
jns
call
mov
sbb
mov
and
add
add
fcoml
arpl
fdivrl
and
cld
xchg
call
xchg
inc
cwtl
inc
jecxz
sub
aad
test
xchg
jb
insl
pop
aaa
mov
and
imul
jl
out
enter
mov
xchg
sbbl
subb
pop
sub
roll
dec
mov
or
mov
jns
lds
and
pop
jmp
mov
sbb
into
push
pop
mov
imul
pushf
or
jmp
jnp
in
movl
aaa
add
test
mov
shr
addb
jns
sub
or
shll
mov
push
jne
test
call
aaa
es
jle
rolb
ljmp
sahf
jle
insb
add
mov
fdivrl
dec
mov
test
mov
jne
inc
dec
add
test
int
loope
jecxz
es
mov
push
js
push
stos
out
fidivrl
add
lret
pop
iret
cmp
repnz
push
std
int
test
cmp
cmp
pusha
or
xchg
fs
ss
into
jo
call
into
movsl
cwtl
loop
lods
xchg
ds
xor
push
mov
mov
cmpsl
jae
in
adc
or
cli
iret
scas
aas
fnstcw
mov
rorb
cwtl
xchg
cld
xchg
leave
xor
push
push
mov
daa
and
xor
xor
outsb
cmp
movsb
jae
add
ficoms
jl
dec
cmpb
cmp
dec
xchg
sub
push
xchg
std
data16
popf
adc
or
movsb
pop
aas
leave
and
inc
mov
xlat
adc
or
cmp
xor
ljmp
or
cltd
pushf
xchg
lret
mov
xlat
aas
ret
ficoms
addr16
xor
xchg
dec
lret
es
add
into
in
stos
cld
arpl
jle
inc
mov
je
ret
lahf
and
xchg
push
or
jae
divb
lahf
int
daa
and
cmp
pop
xchg
or
add
loope
popa
inc
mov
mov
ja
jbe
jge
lahf
adc
orl
repz
arpl
mov
mov
mov
mov
shlb
pop
cmp
aam
jne
imul
loope
jne
pop
gs
pop
or
dec
inc
aas
mov
dec
pop
mov
or
mov
xchg
test
outsb
pusha
xor
cmp
mov
mov
icebp
shlb
std
insl
mov
cmpsb
ds
push
ja
dec
enter
sbb
aaa
mov
dec
push
iret
adc
je
xchg
daa
add
mov
pop
aas
cmpsb
xlat
ja
pop
shlb
and
shlb
sub
xor
mov
call
js
mov
aaa
mov
dec
cltd
push
mov
mov
nop
inc
jle
rcrb
cmp
mov
idivl
enter
fsubrl
xor
jo
mov
repz
scas
pop
xor
mov
mov
adc
jbe
imul
aas
jno
loope
mov
xchg
popa
and
cli
xchg
into
cmpsl
lret
pop
stos
lea
add
test
inc
push
shl
adc
mov
mov
mov
lret
fistl
es
fisttpl
call
or
shrb
adc
std
shlb
lods
dec
inc
in
and
arpl
out
and
or
test
push
ja
fcmove
lret
aam
or
pop
jg
mov
xor
xor
cmc
push
cmp
lea
jl
cld
adc
outsb
sub
xchg
dec
jp
mov
cmc
sti
add
pop
or
into
xchg
adc
insb
fwait
popl
and
mov
ficomps
adc
aam
insl
jnp
out
ret
cmp
and
imul
test
hlt
cwtl
cli
fsubs
cmc
and
xor
mov
or
sub
push
sbb
sub
xchg
mov
and
xchg
les
cli
mov
dec
es
push
fldcw
mov
into
cmp
std
cmpsb
cmp
dec
inc
icebp
xor
or
mov
les
jmp
clc
lock
mov
repz
in
js
dec
movsb
dec
repz
add
adc
inc
inc
popa
addr16
mov
push
pop
aam
outsl
aas
push
roll
add
sbb
mov
push
sub
insl
das
sbb
loop
add
inc
fcompl
jg
mov
leave
mov
sarb
jbe
sub
push
mov
add
mov
je
pop
cmp
jo
fwait
test
outsl
add
adc
faddp
and
dec
outsl
mov
or
mov
lcall
xchg
xor
pop
rol
and
pop
sub
hlt
mov
or
arpl
js
fldl
mov
sbb
jmp
imul
push
mov
cmp
or
das
sbb
scas
fstps
lods
jo
mov
jbe
imulb
pop
lcall
test
neg
add
mov
inc
cmp
int
lcall
cwtl
stos
cmp
xchg
mov
adc
and
test
and
adc
xor
in
fstps
xchg
xchg
mov
push
pop
or
add
jno
outsb
cwtl
adc
incl
int3
sbb
sub
push
xor
repnz
mov
test
ret
sbbl
push
lcall
mov
jecxz
rcrl
cmp
cmp
clc
jbe
pop
lcall
testb
push
bnd
jne
adc
inc
divl
push
mov
lcall
imul
nop
sbb
icebp
rcll
dec
mov
jmp
cmc
or
jo
cld
mov
and
and
add
hlt
ret
es
loop
sub
xchg
jae
inc
jbe
adc
sbb
lock
pushf
rorl
sbb
stc
jg
sub
mov
mov
negb
mov
cmc
xchg
dec
sub
cs
push
push
insl
rclb
pop
cmp
inc
dec
cmc
jg
lock
pusha
subb
lahf
data16
mov
lcall
sarl
pop
xchg
js
repz
shlb
out
mov
dec
inc
push
pop
aaa
test
clc
adc
push
test
xor
xchg
jle
adc
mov
pop
xchg
imul
cmp
sbb
sub
adc
loopne
shr
xor
negb
and
lods
jbe
lret
nop
fsubl
gs
sbb
inc
dec
sbb
mov
sub
iret
ret
fwait
push
pop
mov
or
inc
jnp
es
or
notb
sub
xchg
or
jne
cli
mov
pop
push
sub
stos
cmp
arpl
jnp
and
and
or
jae
xchg
scas
jo
arpl
xchg
and
arpl
dec
push
and
push
push
es
sbb
or
add
cmpsb
add
lods
aam
xor
ss
push
sbb
cld
out
mov
inc
sub
aad
daa
ret
add
mov
pushf
int3
adc
fidivs
and
xor
push
push
pop
add
sarb
xor
adc
push
sub
jb,pn
shr
push
dec
sar
sti
test
jae
dec
aaa
in
leave
xacquire
out
movsl
loopne
subb
jle
sbb
lahf
sbb
mov
popf
out
sub
rolb
jle
pop
loope
pop
out
inc
gs
imul
pop
mov
xchg
out
jns
xchg
cltd
lret
adc
es
aad
inc
popa
or
fisttpll
out
mov
mov
xor
sub
pop
cld
movsl
shll
std
mov
pop
addb
lds
cmpsl
cmp
push
in
mov
call
je
cltd
hlt
insl
push
stos
cltd
stos
lcallw
mov
xchg
mov
repnz
ljmp
fisubrl
mov
dec
pop
push
rcll
rcll
push
cmpsl
loopne
xorb
adc
pop
arpl
mov
fsubs
xor
test
outsb
xchg
rorl
fs
pop
int3
sbb
cmp
sbb
pop
sti
mov
jl
push
fcompl
sbb
mov
and
test
mov
xor
test
cmp
xor
or
fists
xchg
shrb
add
lods
test
xchg
xchg
pop
test
push
leave
mov
push
pop
sti
add
adc
add
jne
jmp
add
cltd
pop
or
cmp
daa
sub
ja
aam
push
xchg
dec
xchg
and
jg
icebp
in
jecxz
xchg
sub
sti
sbbl
push
in
mov
sahf
pop
out
jecxz
ds
and
cmp
out
xor
in
mov
mov
inc
sbb
mov
mov
inc
sub
push
dec
movsb
in
xchg
outsb
mov
out
push
mov
pop
sarl
xchg
jae
dec
push
xor
push
mov
aad
mov
sbb
jge
mov
icebp
in
pop
jp
push
mov
cltd
cmp
push
imul
sub
cltd
add
sbb
cmpsb
inc
stos
mov
mov
push
sub
rcrb
loop
pop
insl
mov
jnp
adcb
xor
ret
sub
scas
dec
push
xchg
mov
jne
xor
mov
ret
inc
or
and
in
fistl
lods
xlat
add
lret
add
lret
jge
test
lret
cmp
or
outsl
lret
and
pop
hlt
ja
or
fdivrs
cmp
arpl
icebp
mov
add
or
es
cltd
enter
icebp
push
movsb
or
das
repnz
and
sbb
push
and
fstl
xlat
push
xorl
mov
adc
mov
jmp
inc
decb
rclb
pop
movsl
rclb
sub
mov
jne
sub
fstpl
xlat
mov
cmp
add
and
pop
gs
xchg
int3
shll
popf
push
subb
jp
jno
dec
sub
es
push
js
xchg
scas
xchg
adc
arpl
arpl
orb
in
shlb
into
adc
aam
mov
and
ret
lret
lods
jb
ret
mov
repnz
mov
mov
hlt
dec
dec
test
jno
shl
pop
mov
pop
scas
fwait
movsb
data16
xchg
mov
lock
jno
xchg
adc
push
sub
cld
filds
pop
sub
cmp
rorl
sub
adc
jmp
and
sbb
scas
dec
and
mov
adc
shlb
add
mov
mov
lahf
add
push
hlt
pop
mov
and
mov
pop
xchg
loope
jb
ret
xor
sub
ja
and
nop
je
and
sbb
dec
dec
insb
cmp
jne
stos
dec
mov
fcmovnu
xor
cmpsl
or
mov
and
lods
jge
pop
fmuls
mov
popf
sbb
jmp
clc
movsb
sarl
imul
jo
cmp
xchg
sbb
clc
add
jg
mov
test
ret
xor
or
test
movsl
lahf
inc
cmp
jmp
mov
cli
inc
jp
insl
and
cmp
fsubs
xor
adc
xor
andb
test
sub
rcrb
mov
outsl
inc
lea
mov
mov
repz
fisubrl
test
scas
add
bound
test
jge
ret
movsl
fisttpll
add
movsb
movb
jp
push
dec
loopne
in
loopne
fs
idivl
ljmp
jmp
cmp
cmc
idivl
mov
mov
push
lock
popa
ja
pop
sarb
and
and
repz
es
mov
fcmove
pop
orb
xchg
or
mov
orb
add
jg
pop
cmp
push
lahf
sahf
mov
out
outsb
aam
arpl
mov
inc
nop
jo
mov
in
xchg
jne
mov
push
ljmp
std
mov
mov
aas
cld
jne
xchg
mov
mov
fadd
sbb
mov
pop
cmp
out
push
jns
xor
jp
pop
mov
nop
push
sbb
pop
test
sub
fdiv
mov
mov
cltd
fsubrs
cmc
dec
cmp
lret
jno
movsb
in
and
add
mov
pop
sub
jmp
jecxz
scas
push
fsubrl
stos
cmpsb
mov
push
ja
ret
insb
fdiv
dec
and
cmp
jns
gs
scas
pop
loopne
inc
mov
push
outsl
mov
sti
aam
lret
and
pusha
aam
ds
inc
or
cmp
add
loop
push
mov
mov
int
call
scas
push
stos
inc
hlt
call
pop
jae
inc
lahf
push
jmp
aas
sub
sti
add
fstl
stc
mov
mov
lods
imul
lcall
ret
dec
lock
pop
dec
push
sahf
mov
out
cmp
mov
inc
incb
outsl
pop
xchg
filds
sarl
mov
and
lea
lods
inc
mov
into
push
int3
mov
shll
js
out
lods
push
sahf
adc
or
add
mov
adc
cmp
sahf
das
mov
ljmp
out
out
xor
test
lret
clc
bound
jne
cmp
scas
movsl
lret
mov
clc
mov
jle
push
mov
out
lret
add
mov
push
sbb
mov
adc
int3
fisubrl
addr16
loopne
add
jbe
xchg
iret
or
lahf
movsl
xchg
stos
jne
sub
xor
jnp
leave
adc
fisubs
mov
mov
rol
fwait
mov
aas
dec
jg
xchg
aaa
or
call
sub
push
sbb
xor
fnstenv
push
hlt
mov
movsl
out
xchg
fmulp
je
cmp
shlb
dec
nop
xchg
test
popa
sti
mov
cmp
pop
xchg
loop
lea
in
or
pop
push
out
loope
add
fs
push
cli
aas
sbb
outsl
int
insb
dec
int
icebp
sbb
aaa
fisubl
shlb
jl
xor
mov
leave
cmpsb
arpl
fisubs
jnp
les
jbe
pop
xchg
inc
sbbb
rorb
into
adc
cltd
out
push
or
out
test
dec
xchg
pusha
fstl
outsl
jp
icebp
insb
out
adc
ds
xchg
mov
xchg
jp
dec
insb
push
repz
or
jnp
and
arpl
jmp
subb
push
ljmp
mov
clc
pop
push
mov
lret
lods
xor
pop
cmp
mov
jge
stc
or
sahf
leave
mov
scas
ds
mov
sbb
sbb
outsl
mov
rcrl
aam
adc
jo
push
ja
movsb
lret
ljmp
ret
jo
sbb
insl
jns
cmc
stos
xchg
popf
std
add
inc
outsb
nop
add
in
and
sbb
sub
mov
and
pop
dec
and
mov
jge
xlat
js
fadds
aas
ljmp
enter
xchg
jns
pop
inc
in
xchg
divb
popa
dec
xor
cli
cmpl
sbb
fwait
shlb
test
cwtl
outsl
dec
xchg
sahf
mov
inc
jo
xchg
fwait
dec
sarb
ret
fsubrs
add
js
mov
lahf
mov
ret
mov
sbb
jbe
je
das
into
out
push
sub
imul
jb
outsl
mov
mov
mov
cltd
mov
fnstenv
xchg
adc
add
clc
add
hlt
xlat
repz
push
mov
inc
mov
add
mov
scas
pop
arpl
push
push
cmp
push
inc
xchg
mov
pop
mov
addb
cmp
push
scas
sbb
mov
add
mov
lret
fsubs
xor
lock
fdiv
xor
movsb
mov
mov
insb
xchg
lret
pushf
xchg
or
sub
lods
outsb
arpl
sbb
cmp
inc
call
and
push
push
cmp
lcall
fwait
pop
cmp
dec
nop
jbe
cmpb
gs
gs
ds
lds
adc
nop
mov
into
mov
scas
mov
pop
or
and
mov
ds
aas
gs
mov
jle
xor
add
enter
mov
ret
jo
call
out
cs
aam
arpl
nop
in
pop
xchg
pop
xor
and
mov
dec
sbb
cmp
gs
mov
enter
push
mov
adc
inc
popf
add
dec
repz
push
fmull
sahf
mov
cs
and
xlat
xlat
sbb
sbb
mov
fnstsw
popa
and
les
mov
cmp
pop
outsl
add
and
and
pop
bound
sar
push
les
jns
loopne
jp
cmp
scas
mov
jo
cmpsl
and
dec
insb
jmp
dec
jmp
pop
xchg
cmp
scas
cmp
ja
add
test
lock
dec
xchg
ret
add
xor
jb
xchg
addr16
pusha
jecxz
jl
mov
jg,pt
rolb
test
xchg
loop
repnz
cmpl
fbstp
dec
xchg
jne
cmp
je
cwtl
bound
gs
jnp
mov
into
push
xor
dec
dec
jge
mov
mul
aad
outsl
pop
jbe
std
lods
dec
push
loop
jg
mov
inc
inc
loopne
movsl
add
mov
xchg
mov
dec
sub
pop
cmpsb
mov
cmp
push
test
mov
dec
dec
xchg
inc
cmp
aaa
fldl2t
xor
or
pop
out
adc
pop
movsb
lea
push
fdivrs
ret
push
mov
and
or
xor
lahf
jo
xorb
cmc
mov
sbbl
jmp
into
and
test
leave
adcb
and
mov
mov
dec
dec
xchg
sub
jbe
add
shl
push
xchg
cmp
jmp
das
mov
xchg
or
jo
push
inc
lods
xor
add
syscall
lock
jnp
mov
rcrl
mov
arpl
aaa
sbb
jmp
sbb
lahf
ror
cwtl
cmp
cwtl
mov
cltd
daa
cld
fdivr
and
daa
xor
dec
push
in
push
loop
scas
mov
mov
sub
in
stc
or
mov
sub
pop
fdivrs
pshufw
add
mov
cs
dec
adc
pop
rol
repz
and
push
test
fidivl
in
add
aam
decb
sub
dec
cmp
mov
scas
loope
and
stc
sub
pop
xchg
out
sbb
sbb
mov
and
btc
pop
outsl
idivl
loope
movsl
xchg
cmc
pop
push
jecxz
add
inc
push
pop
mov
std
out
rorb
out
and
push
subl
out
insl
shll
ja
jge
dec
clc
loop
stc
mov
rolb
out
shlb
dec
rolb
pop
mov
and
shlb
es
bound
out
xchg
and
loopne
adcb
add
jg
sbb
and
stc
dec
jl
jmp
cmp
push
inc
inc
and
mov
or
popa
int
mov
cwtl
idiv
in
mov
arpl
sti
xchg
sub
mov
popf
xor
sub
mov
push
sbb
arpl
iret
add
enter
pop
je
jns
test
pop
fcoms
xchg
pop
lcall
or
push
adcl
cli
push
sbbl
cld
scas
push
mov
shlb
pop
ds
es
jp
shlb
lret
xchg
ret
orl
bndldx
sbb
scas
or
out
push
call
pop
scas
int3
push
cmc
push
les
dec
mov
cmpsl
mov
es
int3
in
into
int3
in
inc
sub
dec
jg
iret
or
mov
ljmp
sti
lahf
xchg
push
adcl
sub
neg
push
cltd
out
lret
pop
push
int
sub
dec
jne
ss
jl
add
cld
dec
xchg
mov
mov
ficoms
cmp
mov
pop
test
mov
repz
mov
outsb
push
in
xchg
push
pop
in
pop
jp
xor
push
adc
dec
mov
jp
movsb
pop
out
or
jle
mov
mov
int
pop
mov
loopne
inc
xchg
jp
int3
jne
mov
sub
and
adc
in
out
pop
aaa
inc
cld
dec
pop
sti
sarb
mov
mov
add
pop
pop
pop
lahf
mov
aas
and
lods
repz
jg
sbb
inc
mov
mov
or
mov
stc
mov
into
out
or
mov
xchg
pop
or
fmul
pop
xor
mov
sbb
cmp
js
jmp
dec
push
push
cs
push
pushf
or
mov
fwait
leave
and
rorl
stos
mov
ljmp
clc
mov
sub
scas
inc
enter
into
in
sub
movsl
and
and
rorl
es
dec
mov
or
movsl
loope
push
pop
cmp
leave
test
xor
pop
repnz
jmp
add
sbb
or
cmpsb
cld
jg
enter
call
or
ja
cmp
or
popf
xor
or
ret
rcrb
jb
in
and
jl
imul
lock
fdivr
orl
sti
pop
mov
insb
mov
jecxz
mov
add
mov
sub
scas
push
insb
jbe
clc
push
push
adc
mov
lahf
pop
and
jb
cli
pop
mov
xor
mov
mov
dec
cli
lahf
pusha
lods
sub
and
adc
sbb
lds
in
insl
lahf
mov
dec
rcl
mov
push
mov
into
inc
xchg
mov
lds
fistpll
je
xchg
or
mov
sar
lds
adc
movsb
jmp
mov
xchg
mov
jmp
jecxz
loope
pop
cli
test
lock
push
sub
gs
daa
lret
mov
mov
mov
pop
mov
jge
and
inc
insl
stc
push
fdivl
adc
add
mov
clc
mov
call
orl
push
sarb
sbb
sbb
fdivp
notb
cmp
sub
jno
mov
test
add
adc
xor
lods
sub
xchg
push
sbb
les
lahf
movsl
aas
lods
mov
push
jnp
push
cli
mov
stos
nop
bound
mov
or
mov
test
or
bound
pusha
stos
in
sub
jne
pop
out
inc
icebp
cmpsb
faddl
sahf
fwait
cli
push
daa
pop
sbb
push
jne
adc
pop
cmpsb
cmp
in
mov
or
xchg
dec
xchg
and
je
dec
das
subb
ret
dec
pushf
cmp
inc
cmp
jg
mov
jecxz
imul
mov
pop
mov
test
dec
jne
xchg
sub
movsl
adc
xchg
mov
test
test
aas
rorl
cli
jbe
mulb
mov
outsl
js
imul
mov
push
jno
add
lods
mov
adcb
lret
popf
fidivrs
add
jle
sub
add
dec
mov
pushf
ficoml
fwait
pop
push
jmp
pop
xor
call
pop
out
mov
outsb
mov
mov
mov
push
push
ret
outsl
fdivrl
imul
dec
push
add
mov
fmuls
and
mov
lahf
fbld
adc
mov
dec
stos
dec
mov
gs
movsb
outsb
sub
pop
lods
sub
xchg
pop
fdivrl
mov
mov
insb
scas
sub
pop
adc
xchg
mov
cmp
mov
ret
enter
push
lret
insb
mov
adc
fwait
movsb
mov
jl
jbe
jo
xchg
cmp
lods
and
les
aad
imul
mov
jmp
mov
xorl
mov
mov
mov
int
cmp
mov
or
mov
jb,pn
push
lcall
negl
bound
mov
or
rcll
inc
jno
jge
arpl
xor
xchg
mov
cmp
inc
stos
int3
jl
int
mov
inc
mov
and
mov
xchg
addr16
aam
dec
and
frstpm(287
or
xchg
outsb
fs
cmp
call
dec
fsts
sbb
mov
push
mov
adc
sub
std
add
jno
push
push
pop
negb
adc
sarl
roll
aad
repz
push
mov
insl
inc
cmp
gs
cwtl
xor
insb
mov
mov
add
jno
xor
stos
dec
mov
fwait
ljmp
sub
movsb
rcl
mov
xchg
loopne
jl
sub
and
jmp
cmpsb
jns
and
in
je
sbb
cmpb
or
mov
stos
cmp
sbb
ss
pop
dec
rcll
das
inc
jmp
out
lock
add
fucomp
push
loopne
fldcw
mov
scas
clc
add
pop
aas
xor
das
adc
fisttps
xchg
out
aaa
xor
push
roll
xor
add
bound
mov
sbb
divl
add
mov
bound
dec
addl
add
push
sub
sbb
mov
std
add
in
lahf
mov
push
push
shll
sub
dec
lods
add
lds
popa
cmp
pop
pop
mov
rclb
sub
inc
jo
rolb
dec
or
lods
js
add
rcll
cwtl
or
mov
xor
mov
sti
cmp
inc
shrl
jns
je
call
subl
inc
fidivl
and
sbb
xchg
xchg
or
js
add
shll
mov
push
imul
add
adc
mov
sarb
jl
flds
lea
imul
mov
mov
add
pop
inc
mov
andb
lret
mov
hlt
repnz
pop
scas
xor
stos
aaa
dec
lea
pop
mov
mov
pop
or
and
mov
scas
dec
out
push
leave
movsl
jecxz
dec
pop
scas
sbb
out
dec
lock
mov
xchg
cmp
sub
or
ds
repnz
and
dec
jecxz
test
bndldx
rcrb
adc
pop
dec
inc
mov
xor
daa
insb
in
sub
sub
push
xor
jne
in
inc
int
test
sbb
std
fadds
cmp
lahf
push
rcrb
and
pop
ss
xchg
lret
test
out
popf
adc
test
dec
jge
cs
std
cwtl
test
in
push
xor
stc
and
jno
bound
and
add
divb
and
fdivrl
sub
xor
push
mov
and
pop
sbb
inc
sarl
push
sti
xchg
pop
jecxz
sub
pop
jmp
sbbb
cmp
add
test
iret
cmp
int3
mov
lret
fdivs
dec
repz
cmc
arpl
mov
cmc
inc
lea
push
popf
inc
cmp
test
mov
pop
rorb
jmp
and
mov
cs
stos
rcrb
mov
loopne
mov
push
xchg
popw
ficomps
out
xor
out
shl
push
add
dec
mov
push
add
add
mov
ss
push
into
int
jge
adc
mov
andb
mov
add
mov
dec
mov
std
in
cltd
aam
jecxz
hlt
push
imul
std
mov
cmp
add
xchg
shll
jp
mov
adc
int3
cli
in
adc
cwtl
add
or
push
inc
xchg
mov
push
dec
nop
and
cmpsl
mov
and
in
out
lret
push
addr16
aaa
pop
insl
aad
cmc
xchg
push
and
iret
pop
lret
mov
mov
pushw
pop
jb
in
gs
sti
fldcw
and
xchg
add
push
push
aad
clc
icebp
aam
push
xchg
add
pusha
sar
mov
fdivrs
loopne
sub
rcll
stos
in
inc
pop
mov
addr16
push
sbb
mov
ret
pop
and
push
xor
and
add
scas
lods
and
rorl
arpl
mov
fisubl
add
fwait
and
inc
daa
data16
add
mov
popl
pop
or
cwtl
push
dec
xchg
add
jl
stos
out
and
loope
sub
add
lea
sub
sti
xlat
sub
sbbb
xchg
clc
sbb
test
jne
fidivs
jae
sub
and
test
pop
mov
fidivl
data16
jo
fdivrp
fcmovnu
or
adc
call
mov
loop
dec
loope
loop
xor
jns
sbb
jnp
ja
repz
js
jnp
imul
mov
std
jmp
pop
mov
ror
lods
mov
fists
rcl
push
mov
sbbl
arpl
insl
sub
pop
xchg
mov
orl
cmp
dec
aas
aaa
rcrl
fmull
fildl
mov
inc
cmp
jmp
lcall
je
jp
dec
imul
pop
mov
in
orb
imul
lds
add
sbb
jge
add
cmp
lret
sbb
das
xchg
xchg
xor
int3
mov
imul
or
idiv
fdivr
cltd
das
mov
les
xor
pop
cld
sbb
mov
lret
pop
fistpll
jg
lret
stos
xchg
xchg
adc
ljmp
in
mov
add
xchg
ja
shr
movsl
js
fldenv
sbb
daa
stc
pop
out
mov
cmp
daa
adc
aam
mov
dec
pusha
cmpsb
leave
out
mov
mov
outsl
fcmovnb
xchg
sti
jmp
add
inc
gs
dec
jae
and
js
sbb
negb
scas
das
cli
sub
out
loopne
dec
add
test
and
add
push
mov
inc
mov
sbb
rcr
mov
jle
pop
sub
es
xorl
cld
pushaw
adc
or
inc
cmp
aaa
push
out
xor
dec
inc
ja
inc
pop
jnp
xchg
inc
inc
sbb
popa
push
stos
and
aaa
dec
pop
jnp
jge
sub
insb
pushf
jl
aam
add
xor
sub
leave
ljmp
inc
or
push
push
bsr
push
and
jle
jo
lock
sbb
push
sub
inc
jge
mov
xor
mov
js
call
xor
stos
mov
outsb
pop
loopne
mov
inc
insl
xchg
js
cli
sub
sbb
pop
mov
lods
out
popf
repnz
pusha
cmp
sub
jno
stc
incb
repz
jns
jg
cmc
lods
arpl
or
mov
inc
pop
ljmp
adc
dec
enter
mov
outsb
dec
jle
in
pop
les
stos
mov
pusha
pop
push
cld
sub
test
jae
xor
mov
sbb
test
inc
sbb
adcb
jecxz
sar
repnz
push
aam
andl
and
pop
or
les
mov
add
jge
xor
call
sti
sub
or
aas
inc
jne
mov
fs
cmpsb
add
inc
and
cs
out
scas
push
sbb
dec
jo
dec
dec
movsb
imulb
mov
mov
out
in
adcl
pusha
mov
mov
push
fnstsw
movsb
fiaddl
daa
mov
jne
ljmp
addr16
xor
mov
jge
data16
push
fidivs
out
cmp
scas
jno
jno
clc
mov
outsl
lret
insl
adc
pop
js
xor
push
sbb
jbe
jmp
movsb
mov
sub
push
xor
xor
push
fldenv
push
sub
call
jmp
subl
bound
ficomps
cmpsb
cld
test
sahf
or
pop
add
ss
sbb
popf
in
jb
imul
xacquire
jmp
lcall
das
stc
jmp
pop
cmp
pushf
scas
pushf
push
icebp
fsubrl
push
or
cmp
fs
nop
ja
inc
in
cmc
sbb
out
inc
sub
add
add
inc
inc
popf
jns
movsl
idivb
mov
mov
jbe
mov
xor
pusha
and
mov
arpl
xchg
jmp
xchg
xchg
or
imul
add
leave
in
dec
testb
stos
xor
inc
push
dec
fcmovnb
jp
mov
scas
hlt
iret
add
lock
fcmovnbe
cmpb
xor
mov
sbb
sarl
lds
mov
div
jbe
in
jae
out
push
in
mov
setbe
mov
outsb
test
mov
into
stc
and
das
cmc
fidivrs
rclb
test
test
cmpsl
and
add
cmp
mov
es
sub
mov
aaa
unpckhps
out
adc
jmp
gs
rcrl
lret
cs
push
pop
xchg
stc
aam
or
addr16
cmc
sub
xlat
sub
ja
sbb
movsb
leave
scas
cwtl
imul
and
push
cmpsb
jb
rcrl
mov
xor
ret
cmp
std
mov
adc
leave
enter
insl
inc
xor
loopne
mov
in
push
or
inc
mov
or
adc
fwait
add
fistl
adc
decl
cmp
mov
out
cmc
lods
xchg
mov
mov
fcoms
divb
insb
jns
cmp
das
daa
mov
es
pop
xor
and
jns
hlt
sub
cmp
jge
je
js
repnz
mov
push
adc
pushf
mov
cmp
sub
mov
push
ljmp
cli
addr16
or
ljmp
inc
add
negl
inc
sub
fistpl
adc
lret
xchg
push
pop
idivl
push
xchg
mov
rcrb
xor
pusha
dec
mov
mov
int3
xlat
push
xor
jge
test
and
inc
movsl
adc
cmp
out
jnp
fidivs
cmp
adc
fs
sub
cld
inc
nop
xchg
push
sub
xor
ja
pop
adc
xor
lcall
stos
nop
sbb
and
in
mov
testb
and
aas
sub
inc
ss
repz
push
jg
ds
cltd
adc
xor
jge
mov
imul
ds
jns
push
les
adc
xlat
rcr
dec
inc
nop
or
or
mov
out
dec
xor
clc
scas
stc
push
jecxz
in
dec
ja
aad
je
dec
loope
cmp
jae
adcb
sti
addl
cs
repz
cmpl
insb
mov
loop
cmc
leave
inc
and
orb
mov
imul
push
cmc
fwait
mov
mov
les
mov
push
jo
sub
fdivrl
popf
cmp
fisubrl
mov
push
mov
repz
pop
rorb
xchg
out
sahf
test
sti
sbb
mov
push
movsl
mov
pop
push
push
push
inc
adc
xchg
fcomps
push
test
xchg
mov
dec
scas
aas
inc
sbb
cmp
mov
inc
sub
jb
mov
je
movsb
add
fidivs
sbb
adc
jg
add
sub
faddl
dec
daa
cs
int
mov
xchg
mov
fnstsw
sub
test
lods
sub
dec
xlat
leave
mov
mov
mov
in
sar
sahf
je
in
pop
andb
cmp
jne
paddd
gs
inc
or
mov
inc
movsl
test
mov
test
je
test
outsl
popa
nop
mov
adc
lods
inc
lods
rsm
jnp
pushf
inc
push
sti
outsb
sbb
mov
dec
adc
in
jl
scas
shll
in
pop
inc
sbb
sbb
sub
push
insb
insb
leave
push
xlat
push
int3
sahf
jmp
clc
mov
lret
mov
repnz
push
push
jmp
lret
inc
sub
mov
in
cmp
sarl
aaa
jne
out
push
jb
inc
dec
inc
xchg
dec
mov
xor
addr16
idiv
push
dec
push
mov
test
push
jbe
pop
enter
pop
popf
push
mov
sub
outsl
cmpb
imul
mov
jns
and
in
stc
inc
into
test
sarl
pop
cmpsl
lret
rcrl
js
lock
stos
mov
mov
mov
xchg
jae
or
pop
push
xor
mov
jns
jg
sti
or
scas
cli
lcall
arpl
out
outsb
xchg
repnz
lods
test
fdiv
mov
enter
jae
adc
loope
xor
cmpsl
inc
cwtl
adc
repz
std
pop
das
push
mov
pop
call
popa
loop
inc
popa
xor
fildll
lods
fwait
dec
jp
sbb
push
dec
sbb
imul
push
in
cld
das
push
icebp
jge
cmp
xor
mov
push
fwait
add
jl
push
mov
sub
repz
ljmp
xchg
fsubrp
dec
es
cmp
scas
clc
sbb
xor
or
bound
inc
call
lret
jae
jecxz
ret
addr16
lret
pop
fsubp
sbb
adc
inc
mov
iret
andl
jecxz
or
imul
rclb
mov
mov
jbe
mov
xchg
adcb
outsb
sub
mov
mov
xor
jo
mov
pushf
push
cmpsb
addr16
inc
mov
fcoms
inc
in
out
pop
add
pop
cltd
xchg
jns
add
lret
ret
call
or
mov
xchg
jbe
sub
shrb
add
fwait
or
cmc
daa
ficoml
in
mov
sub
in
repz
push
outsb
jmp
pusha
mov
mov
loop
lods
hlt
lret
cmp
mov
aas
mov
sub
loopne
push
dec
pop
andl
xchg
in
xor
push
push
in
cmp
cld
jns
loopne
push
add
sarl
cli
mov
mov
fnclex
pop
ljmp
pop
sub
push
xor
dec
sbb
fxam
jl
mov
in
mov
into
aam
loop
scas
dec
orb
out
xor
xchg
das
push
pop
in
jns
int
cmpsb
movsb
aam
das
cmp
xor
mov
dec
loopne
flds
pop
bound
push
movsl
adc
or
mov
leave
arpl
push
push
hlt
dec
pop
mov
sbb
xor
popf
mov
lods
hlt
test
cs
cs
mov
inc
rolb
xchg
lods
adc
mov
jnp
lds
js
aas
fstpt
jns
mov
gs
sbb
lock
aad
int3
sbb
and
sbb
pop
hlt
dec
add
mov
fsubl
sub
hlt
add
cld
jb
pop
aam
mov
aas
and
add
adc
add
int3
ret
dec
sbbl
ds
sub
push
pop
cmpsl
sub
mov
aad
in
ret
mov
stos
dec
int
in
sarb
add
arpl
imul
mov
into
dec
jge
ret
mov
in
movsl
sub
push
repnz
mov
js
mov
xchg
push
insl
adc
andb
and
jge
mov
push
or
fstpt
in
pushf
rclb
xor
push
dec
loop
push
push
stos
sbb
xor
jmp
inc
jb
jns
ret
adc
negl
sub
mov
push
outsl
lock
push
out
dec
xor
out
shrl
ja
test
mov
dec
sti
mov
sbbb
mov
lea
mov
repz
mov
sahf
mov
dec
dec
push
lret
sbb
mov
pop
mov
aam
inc
mov
pop
out
adc
adc
repz
mov
xor
cld
gs
repnz
pop
es
fs
push
or
mov
xor
jbe
and
add
daa
jg
inc
mov
push
push
push
lret
bound
das
push
cmp
or
cwtl
enter
dec
jns
mov
fildl
lds
ret
pop
mov
mov
leave
adc
sub
mov
js
popf
pop
pop
or
cmpsl
push
mov
sub
outsl
pop
push
sub
arpl
pusha
mov
loopne
aam
cmpsl
mov
xchg
mov
xor
push
dec
fucompp
push
or
cmp
inc
inc
out
xor
rcrl
popf
out
hlt
dec
popf
dec
sbb
mov
and
lock
xchg
push
dec
mov
cmpsl
sub
dec
pop
je
fwait
addl
loopne
or
sbb
fadds
jbe
mov
push
push
xor
dec
aaa
dec
clc
mov
xlat
imul
push
mov
dec
icebp
and
cmpsl
arpl
rcrl
std
int3
jp
mov
outsl
sbb
mov
out
cli
aam
mov
mov
addr16
test
mov
aaa
mov
xchg
fidivl
test
hlt
in
mov
test
cs
push
pop
gs
std
add
xor
mov
dec
shll
cld
mov
xor
jecxz
je
dec
inc
fcmovb
es
and
loop
xlat
repz
adc
xchg
loope
arpl
leave
incl
and
lcall
inc
xor
mov
mov
fnstenv
rcrl
pop
pop
ds
and
inc
call
movsb
inc
mov
lea
jne
mov
jecxz
clc
adc
cmp
add
inc
les
sti
jb
push
xchg
data16
and
scas
scas
les
sub
imulb
aad
inc
push
outsl
pop
xor
jmp
xlat
cltd
push
and
idiv
jmp
cwtl
mov
adc
pop
inc
ljmp
in
mov
mov
sbb
xchg
and
add
mov
and
sub
sub
ret
nop
popf
mov
in
psllw
popa
inc
or
imul
push
jne
aam
jp
aaa
andl
ds
push
xor
mov
data16
dec
or
dec
xor
test
and
call
inc
jle
push
in
call
lea
and
adc
cmp
ss
add
fwait
push
movsl
xchg
cmp
sarb
inc
int3
mov
ret
mov
cld
dec
mov
adc
cmpsb
mov
test
xchg
jecxz
mov
in
iret
adc
iret
cmp
cltd
push
adc
rcr
bound
or
je
lock
std
sbb
sbb
xchg
cli
cli
xchg
enter
js
std
lods
in
rcrl
adc
push
pop
xchg
daa
cwtl
lods
cmp
and
fsubs
sub
push
add
adc
cld
push
mov
imul
and
test
push
push
rcr
incl
cltd
lea
sbb
mov
adc
xchg
imul
data16
inc
mov
or
shlb
cmp
decl
sub
shll
ljmp
roll
mov
jbe
jns
mov
pop
mov
adc
and
adc
jmp
xlat
lods
lea
push
lret
repnz
loop
aad
or
mov
xor
test
addr16
jo
pop
add
shlb
adc
aad
rcrl
inc
push
push
aad
insb
pop
fmull
insb
xor
cmpsl
dec
xor
mov
repz
mov
jo
push
repnz
ds
xchg
shrl
loopne
xchg
das
sub
popf
popf
push
push
pusha
daa
push
jg,pn
bndstx
dec
clc
sbb
inc
mov
jno
dec
pusha
dec
sti
pop
jno
loope
push
dec
shll
mov
mov
mov
fildl
xor
popa
push
pop
and
aaa
jo
add
mov
jecxz
jno
or
hlt
in
or
jne
ljmp
xor
fldt
jle
push
rorb
fiadds
fisubrs
fs
push
push
stos
inc
inc
je
insb
mov
xchg
addb
frstpm(287
xlat
inc
pusha
data16
rorl
pop
mov
inc
ffree
push
dec
dec
jg
jle
push
pop
cmpb
push
push
lcall
sbb
outsb
mov
and
gs
push
inc
das
rcr
fsubr
mov
ds
mov
lock
inc
cmp
inc
in
fldenv
adc
and
inc
pop
movsb
ds
or
sti
push
int
or
jno
mov
mov
xchg
cmp
mov
lds
or
pushf
jl
sub
xchg
bound
adc
mov
cmp
cmp
fs
lcall
lahf
adc
and
int3
or
mov
sbb
test
int3
push
adc
fldenv
sub
mov
pop
jl
fistpll
lds
popf
jmp
das
mov
outsl
or
repz
scas
cli
rcll
pusha
sbb
xorl
dec
mov
loopne
mov
and
sbbl
mov
push
add
inc
jb
push
fdivs
add
mov
jno
subb
sarl
test
daa
inc
aam
ret
mov
mov
adc
cli
pop
fwait
mov
sbb
add
sar
dec
in
scas
and
pop
test
add
mov
nop
mov
lret
jno,pt
rcll
ljmp
dec
outsb
dec
addb
or
add
and
mov
dec
int
push
ret
filds
xor
aad
inc
sub
mov
lret
push
push
jns
push
movsl
daa
pop
outsb
adc
xor
push
aaa
mov
push
movsb
addl
jns
lods
out
sbb
dec
ljmp
pop
cwtl
xor
loop
mov
mov
stc
inc
lock
cmpsl
mov
mov
pushl
ja
cs
or
push
shlb
pop
xchg
xor
lret
jmp
loope
movsl
pop
sti
mov
aaa
fldcw
adc
jg
lret
pop
cld
subl
xchg
ss
pop
cmp
fucomip
mov
pusha
inc
cwtl
sbb
adc
pop
or
in
add
loopne
aam
ljmp
cmp
mov
sahf
inc
jge
mov
rcrl
adc
sahf
add
inc
dec
mov
mov
icebp
scas
mov
push
add
mov
sbb
stos
add
sahf
lods
call
and
flds
push
out
hlt
cmp
aam
jmp
push
leave
dec
cmp
idivl
popa
out
rcrb
leave
fcoml
xchg
cld
in
jl
xchg
pop
xchg
sarl
rcrb
pop
xor
imul
sarl
outsb
addr16
enter
in
jg
imul
test
cli
mov
cltd
fldenv
lcall
adc
addr16
sub
dec
xchg
imul
cld
int
add
not
lret
sub
test
xlat
xchg
dec
jae
dec
sbb
and
sbb
xchg
test
mov
jno
or
mov
jb
jmp
popa
dec
sub
sti
hlt
xor
xchg
push
dec
mov
ret
roll
ret
mov
call
nop
pop
sbbb
xor
jns
fimuls
inc
movb
icebp
push
sahf
daa
adc
shrb
push
ds
fists
adc
es
jo
mov
mov
sub
test
clc
jl
or
pop
and
and
pop
mov
mov
and
scas
xchg
outsb
inc
cli
inc
adcb
add
sti
add
jmp
add
fs
int
cmp
inc
lods
sub
lea
push
mov
push
outsl
cmpsl
jl
sbb
jae
stos
sbb
mov
xchg
movsb
lret
ret
mov
cmp
pop
shrl
repnz
and
out
push
out
add
dec
lret
mov
cmpsl
pop
cmc
push
cmpsb
cli
cmp
fs
sub
loop
inc
mov
arpl
notb
out
sti
xchg
jae
mov
pop
sbb
addb
jle
push
dec
add
lahf
decb
jns
test
add
push
mov
push
inc
imul
mov
test
int3
mov
dec
pop
inc
jmp
pushf
loope
ss
add
sti
xor
cmpsb
loope
ret
sahf
lret
cmp
sar
add
sub
out
stc
test
inc
aas
push
mov
and
leave
or
mov
int
xchg
sbb
jl
adc
and
mov
leave
mov
dec
scas
mov
negb
push
pop
fdivrl
dec
xchg
sub
sbb
dec
and
push
push
pop
fadd
stc
cmp
cmp
cmp
push
out
je
and
jg
pop
rcr
jl
shrb
add
push
aas
out
jecxz
lods
sbb
jp
cmp
mov
xchg
test
xlat
aas
insl
dec
arpl
and
sbb
mov
jecxz
imul
pop
mov
cltd
daa
jns
repz
loope
push
jno
pop
adc
jecxz
loopne
arpl
cltd
xor
mov
xor
pop
loope
fdivs
lcall
jmp
sbb
js
xchg
mov
sti
push
ret
cld
lret
jle
xchg
fisubs
addr16
mov
filds
lahf
adc
pushf
sti
jle
mov
pop
cmp
subb
in
cmp
jne
cmc
mov
push
loopne
jecxz
mov
sbb
rol
xor
out
test
test
cmp
push
mov
call
ljmp
inc
int
cmp
lock
inc
cmp
stos
aas
ljmp
mov
fldenv
icebp
shrb
rorl
adc
adc
adc
sbb
sbb
test
or
push
movsl
out
mov
popf
insb
or
test
addr16
sbb
dec
xchg
cmc
push
fists
aaa
mov
adc
push
xchg
out
aam
push
lods
xor
xchg
or
dec
imul
insb
add
leave
or
inc
in
sbb
sbb
xor
mov
xchg
jecxz
xor
mov
adc
add
inc
pop
mov
xor
and
out
call
or
inc
inc
dec
pop
dec
push
scas
cmp
clc
push
cmc
pop
insl
sti
sti
xor
adc
mov
or
jmp
insb
movsb
pop
lret
sub
cmpsb
mov
lock
lods
mov
inc
cmp
mov
movsl
or
mov
je
add
std
shlb
jbe
inc
mov
push
fwait
inc
add
xchg
rcll
cmp
push
or
cmc
out
xabort
jecxz
sub
pop
and
jo
mov
cld
mov
cwtl
icebp
hlt
inc
and
scas
add
xchg
push
push
push
jecxz
push
out
loopne
dec
andb
fisubs
pushf
jo
adc
addb
popf
sti
cmp
jae
xchg
scas
out
ret
scas
ljmp
cli
incl
fstl
push
fnsave
inc
push
mov
leave
fwait
xlat
lret
jl
jmp
int
scas
mov
in
push
sub
mov
sbb
shr
decl
pushf
gs
and
ja
sar
jbe,pn
cli
jle
jns
pop
jbe
adc
adc
lret
and
push
mov
inc
add
pop
mov
push
popf
inc
cmp
push
dec
gs
and
sbb
sarb
and
mov
frstor
loope
movsl
jle
jmp
adc
pop
add
mov
inc
fildl
or
sbbl
lcall
scas
les
pusha
cmpsl
inc
icebp
lret
jne
fnstenv
or
arpl
movsb
hlt
hlt
inc
lea
js
mov
and
aam
pop
sbb
pop
aad
sahf
mov
jl
push
clc
ss
mov
repnz
sbb
scas
or
lds
ljmp
jno
pusha
jns
js
outsb
adc
mov
fsubrl
sbb
pop
in
test
pushf
jp
lahf
subl
xchg
clc
mov
fs
imul
mov
mov
inc
sbb
dec
mov
xor
adcb
pop
je
add
sbb
mov
stc
adc
xor
push
jne
push
subb
sub
add
xor
loop
inc
lcall
stc
cmpsl
xchg
ret
and
in
hlt
cmp
jp
test
push
jmp
fiadds
push
test
pop
xor
sahf
loopne
iret
push
and
jp
in
jp
jg
pop
jg
std
mov
arpl
nop
mov
negb
and
inc
lds
rolb
pop
jo
adc
lret
imul
mov
int
sub
daa
dec
daa
imul
and
push
aas
add
sub
stc
dec
cld
jmp
aaa
sub
dec
hlt
aad
fcmovnb
mov
jp
mov
dec
shl
mov
stc
xchg
cmp
push
addr16
pop
push
jns
ds
stos
popaw
jmp
mov
cmp
xchg
cmp
lods
cs
or
lahf
mov
out
rorl
scas
xchg
ficompl
mov
test
inc
rcrl
mov
mov
sbb
lods
mov
jno
mov
sbb
aam
dec
cmp
xorb
mov
push
hlt
mov
mov
xor
sbb
sbbb
in
lahf
addr16
nop
mov
mov
test
shlb
mov
mov
out
pop
in
insl
and
nop
outsl
sub
aas
data16
lcall
jle
pop
hlt
mov
sbb
es
xchg
in
test
lret
loop
daa
dec
and
out
cmpsl
jae
mov
in
scas
test
push
jnp
fs
fcomi
pop
ret
mov
lcall
xor
pushf
mov
mov
add
cmp
jmp
arpl
sub
mov
sbb
pop
mov
or
inc
fists
inc
sub
inc
rcr
mov
imul
xchg
movsb
test
xor
add
shll
push
mov
cmc
test
add
or
test
adc
add
mov
xchg
sub
sub
data16
xlat
dec
loop
mov
ret
cmpb
sahf
adc
inc
addb
ret
push
adc
pop
lock
dec
fistl
ss
push
push
xchg
popf
jmp
push
inc
pop
in
pop
and
sub
inc
icebp
out
dec
addr16
adc
imul
in
shl
cmp
sti
inc
sbb
mov
shrb
mov
push
ja
mov
std
shl
or
int
and
test
pop
add
repnz
pop
dec
test
data16
sub
xor
pop
xchg
add
repnz
push
sub
sbb
xor
out
pop
cmp
out
inc
add
js
mov
popa
fsubrl
push
popa
std
xor
scas
jno
ja
push
sti
push
jne
mov
fcomi
dec
dec
iret
fs
mov
ficompl
mov
mov
jnp
jb
in
cmp
les
mov
inc
lret
ds
sbb
test
rcrb
js
adc
pop
cli
das
mov
pop
cmp
stc
xchg
aam
mov
out
sbb
cltd
pop
sbb
leave
lret
sub
jb
stc
lods
ss
out
outsb
ret
dec
mov
clc
ja
aas
andb
jne
ret
mov
fwait
out
ret
jb
aam
mov
cwtl
dec
xor
negl
test
mov
stos
mov
pop
and
sub
movsb
aad
ss
xchg
test
loopne
mov
adc
add
xor
int3
test
xchg
pusha
xchg
inc
xchg
xor
cltd
idivb
mov
or
jmp
cwtl
sub
push
adc
rcll
mov
and
test
das
aaa
les
int3
das
jmp
push
mov
in
dec
mov
loopne
out
jb
fnop
int3
pop
xchg
and
jns
jnp
shll
popa
sub
iret
dec
out
jecxz
push
fiadds
repz
jecxz
sti
sub
lcall
cmp
lcall
movsb
adc
in
and
rolb
xchg
stos
add
js
add
jo
and
dec
inc
sub
out
jbe
popa
mov
push
push
and
jbe
push
mov
lods
mov
lret
fwait
popf
lahf
popf
jp
repz
aaa
ficoml
mov
jne
adc
movsb
or
mov
stos
and
pop
push
jg
inc
outsb
push
popa
les
sbb
mov
jne
adcl
push
arpl
test
dec
xchg
adc
jecxz
or
add
loopne
gs
sub
aaa
lcall
mov
popf
fldenv
ja
in
push
lahf
lods
bound
bound
push
or
push
loopne
jle
cmp
jp
push
cltd
icebp
mov
jecxz
rclb
jbe
clc
sbb
cmp
stc
shlb
loope
fldpi
mov
lea
rcl
ret
fmul
in
shr
hlt
repnz
mov
add
sbb
sbb
jle
out
addl
and
mov
xchg
dec
lea
inc
push
or
mov
mov
xchg
pop
daa
xchg
popf
lods
jp
add
xor
mov
outsl
mov
cwtl
cmpsl
cltd
sahf
roll
cmp
daa
mov
stos
pop
cmp
bound
xchg
sarl
and
add
jnp
add
ret
and
dec
push
mov
xor
mov
sub
sub
sub
mov
scas
aaa
je
aad
es
mov
xchg
leave
jp
lea
fnstenv
inc
aam
imull
push
xor
mov
adc
mov
sbb
pshufw
dec
and
call
aas
fadds
dec
inc
sub
sub
push
aam
rcrb
mov
adc
fwait
outsb
mov
cmp
mov
lods
mov
add
data16
shll
mov
mov
aam
outsl
jg
fimull
sbb
push
jnp
mov
ljmp
rorw
jecxz
push
mov
adc
stos
cmc
jl
push
sbb
xor
mov
mov
xlat
push
jge
mov
mov
outsw
imul
fisttpl
scas
ret
leave
dec
mov
add
popf
les
xor
in
or
jp
jg
jle
lods
mov
fldcw
add
pop
scas
jge
scas
inc
lock
sub
addl
lods
sub
pop
lahf
mov
sbb
js
in
in
cmp
nop
xchg
dec
xchg
xchg
inc
jl
das
fwait
mov
dec
xchg
into
int
or
aas
add
mov
adc
cmp
pop
mov
aad
jne
fcmovnu
sbb
push
fidivrl
mov
lock
scas
sbb
arpl
or
dec
lds
adc
sar
sbb
mov
ret
or
es
mov
ljmp
rcrb
xchg
mov
fstp
and
scas
flds
lock
cmp
xor
adc
add
cmc
sbb
cmpsl
lods
push
jne
arpl
popa
lea
imul
loop
or
loopne
into
into
cwtl
mov
lcall
clc
outsl
xchg
inc
xchg
imul
xor
xor
jle
jp
mov
ss
sahf
pushf
movsl
cmc
add
sarb
add
shll
hlt
jns
or
lea
in
roll
dec
mov
stc
inc
or
jmp
loopne
mov
mov
cmp
ljmp
ja
push
sub
xchg
pop
daa
scas
or
je
es
pop
inc
mov
sbb
pop
movsl
cmpsl
les
add
movsl
pushf
in
pop
scas
push
stos
mov
int
add
push
out
mov
or
rorb
pop
push
jg
fsts
fwait
les
cmovg
mov
add
xor
cmp
sahf
xor
ss
xor
adc
jns
testl
ret
pusha
cmp
xor
lcall
push
les
xchg
clc
sub
into
in
insl
add
push
dec
jo
in
mov
popa
cmp
shl
jne
aaa
xor
ret
inc
sub
xchg
arpl
push
xchg
xchg
cwtl
into
loope
jecxz
xchg
jne
jecxz
cli
out
test
mov
xchg
jo
and
mov
pop
jno
je
sbb
pop
sarb
jp
cmpsl
push
imul
mov
fnstcw
sbb
xor
jnp
dec
pop
cmc
add
inc
adc
jmp
mov
or
fdivrp
and
cmc
xchg
inc
mov
mov
inc
jno
adc
std
pop
dec
mov
clc
push
jb
mov
inc
push
sbb
in
fisubrs
cwtl
rcll
mov
cmp
lods
pushf
or
outsl
scas
ljmp
pop
outsb
ja
shll
and
xchg
sbb
cmp
or
sarl
xchg
push
pop
xchg
xor
out
call
mov
lret
pop
xor
sub
push
pop
bound
mov
into
insl
or
popa
sti
pop
xchg
push
addb
add
inc
int3
mov
cli
push
jl
xchg
test
and
mov
loop
mov
adc
pushl
mov
inc
xchg
cltd
jno
nop
jnp
cmp
mov
in
sub
std
jne
add
mov
insb
xlat
or
data16
rolb
add
mov
rolb
fdivrl
test
cwtl
push
in
out
and
aam
lods
ljmp
cmp
push
mov
xor
cmp
and
stos
add
lock
xchg
xchg
in
jge
xor
cmp
outsb
or
xchg
ss
pop
xlat
test
shrb
ret
xchg
aad
imul
dec
int
mov
or
xor
inc
inc
fwait
out
or
and
adc
pop
jg
push
ds
add
xchg
xor
in
lahf
push
fbstp
adc
add
dec
sahf
adc
or
arpl
jno
aad
xchg
ret
out
cmpsl
xchg
xlat
pop
decl
lods
daa
sub
lea
addr16
lds
pop
lods
jnp
pop
pop
add
lds
in
je
add
stc
ja
push
mov
aaa
ss
or
scas
pushf
inc
jns
hlt
jmp
testl
scas
push
pop
rorb
das
sbb
xchg
xchg
mov
and
movsl
jg
movsb
movsb
adc
push
mov
fucomip
add
cmpsl
scas
pop
shll
mov
out
inc
or
rorb
mov
inc
add
sub
mov
push
ljmp
cld
mov
ljmp
push
ret
sbb
xor
push
sbb
cs
aaa
xchg
imul
push
punpckhdq
insl
popa
push
xor
mov
test
pop
or
lea
or
pushf
sub
insb
stos
cltd
je
jo
adc
cmp
push
and
jns
and
cmp
popl
jl
je
mov
dec
scas
cmp
lea
xchg
stos
frstor
mov
lret
push
fidivl
outsb
inc
mov
push
test
mov
mov
daa
push
adc
dec
mov
fwait
mov
das
inc
outsl
and
or
cwtl
adc
divb
adc
xchg
pop
pop
xchg
and
dec
xchg
and
repnz
push
test
insl
fistpl
xor
mov
std
lahf
shr
dec
sub
mov
jae
adc
mov
ja
jae
fcmove
mov
xchg
mov
fs
outsl
jnp
test
xlat
icebp
cmpsl
test
cld
or
das
ror
stos
lods
jo
cmpsl
rcrl
shlb
lods
out
mov
cld
loop
jno
test
xor
mov
sub
mov
lret
or
enter
pop
xor
pop
mov
xorb
mov
stc
sub
data16
and
jnp
idivb
jns
repnz
mov
fs
cwtl
mov
fisubrl
outsb
repnz
xlat
sbb
pop
scas
mov
fisttpll
jmp
dec
and
imul
cwtl
adc
push
out
jo
mov
dec
mov
inc
cwtl
mov
test
stos
decl
pop
jmp
lods
jg
movsb
cmp
testb
int
les
lods
js
test
inc
xlat
cmp
push
daa
pop
into
cmp
fisubrl
mov
insl
imul
pop
shrb
jmp
daa
cmp
push
insb
xchg
push
lcall
lds
and
jp
and
mov
lret
mov
int
or
ret
xor
adc
mov
scas
sub
mov
outsl
jmp
in
in
or
xor
scas
fidivrs
inc
adc
fsubrl
ret
stos
movb
add
dec
bound
xor
jecxz
fs
cmp
jle
cwtl
add
test
imul
hlt
sub
ja
adc
pusha
dec
jecxz
push
fwait
and
movsb
aas
lock
lret
sub
mov
andb
cmp
dec
lods
outsb
fucomp
xor
sbb
enter
or
sub
mov
inc
cwtl
insb
sub
stc
mov
ficoml
shlb
jge
mov
fsubrp
xor
pop
repnz
sti
inc
repnz
sahf
adc
lahf
cmp
mov
mov
adc
rcrb
notl
stc
movsb
and
lea
repz
adc
xchg
xor
add
out
test
andb
popw
cmpb
dec
insl
sbb
sbb
xor
or
test
mov
nop
and
add
int3
orl
sub
out
jbe
into
movl
daa
inc
lret
mov
int
test
dec
push
shll
mov
xchg
cli
jo
add
icebp
das
xor
cmp
jne
jmp
inc
lahf
int
lcall
xchg
sbb
mov
ja
pushf
leave
lret
jno
popf
cmpsb
scas
call
filds
rdmsr
test
pop
xor
mov
jns
pop
or
stos
sbb
bound
mov
cmp
and
repz
xor
adc
push
popa
lret
cld
mov
mov
jb
and
pop
subb
push
cmp
hlt
pop
jg
sbbb
cs
inc
cmpsb
fidivrl
cmp
outsb
push
popl
push
and
mov
mov
mov
pop
loopne
mov
xrelease
inc
outsb
jae
and
xchg
mul
inc
push
jp
mov
or
mov
lea
call
pop
inc
jae
imul
test
or
fbstp
jecxz
push
jmp
cmp
push
test
mov
sbb
push
push
pusha
movsb
mov
das
mov
outsb
push
sbb
pop
mull
xchg
sbb
gs
lods
jp
ret
fnstcw
jp
sti
fsub
xor
test
adcb
neg
enter
shrb
lock
and
jge
mov
cmp
das
fldl
mov
imul
nop
dec
or
mov
dec
test
in
xor
das
push
incl
dec
sub
adc
push
ds
mov
cmpb
es
pop
push
rol
lcall
jle
cmp
cmp
mov
inc
cmpsb
inc
cmpsb
sbb
mov
mov
mov
xchg
test
rolb
inc
mov
lods
dec
rorl
cwtl
jne
cmp
pop
mov
lret
sti
inc
lea
cmp
mov
inc
mov
cmpsb
cmp
arpl
faddl
sub
pop
sti
out
sbb
add
cli
adc
fimull
and
pop
mov
bound
cmpb
sbb
in
addr16
or
test
mov
cltd
out
lea
fcmovu
imul
pop
repz
cmp
pop
mov
pop
aam
and
aaa
dec
neg
aaa
xchg
movl
mov
push
xor
rcll
iret
sub
mov
loopne
addr16
cwtl
aas
sbb
shrl
dec
push
int3
fistpll
cmp
lds
jl
hlt
cmp
jb
mov
inc
lret
xchg
faddl
push
cmp
sbb
xor
fnstcw
pop
ljmp
cmpsb
jp
fnstenv
and
es
xchg
or
lea
or
mov
cmp
lret
fists
call
nop
inc
iret
mov
insb
or
mov
inc
movsl
aas
sbb
jne
ret
cmp
jge
in
flds
rol
fsubl
aad
les
ret
imul
pusha
pop
inc
inc
dec
adc
add
sarb
xchg
push
vandnpd
ret
pop
push
pop
pusha
xchg
int
pop
loope
mov
pushf
sub
adc
pop
xor
addb
cli
cmp
loopne
dec
push
mov
jns
lcall
lods
in
mov
lcall
bound
xor
xor
repnz
sub
scas
push
xorb
pop
and
mov
hlt
into
and
mov
imul
mov
scas
adc
js
dec
push
add
and
inc
adc
out
add
bound
xor
sbb
jb
fcoml
test
or
outsl
xchg
outsb
and
dec
sbb
push
or
movsb
lea
sbb
push
mov
push
add
es
ret
sbb
jb
xlat
xchg
inc
cmp
push
and
ret
mov
xor
out
stos
push
out
inc
stos
cmc
mov
scas
xchg
jmp
mov
cmp
add
test
inc
inc
cmc
dec
lahf
out
and
mov
sub
push
notb
xor
xor
vprotb
mov
mov
inc
mov
rcrl
sbb
lcall
in
in
push
clc
xor
or
ret
repnz
dec
xorl
std
and
pop
dec
outsb
in
popf
lock
jle
out
movsb
mov
pop
dec
and
xchg
adc
and
aas
lret
sbb
sub
mov
inc
cmpsl
mov
sbb
jnp
lahf
cli
lods
in
lret
sbb
ffree
scas
push
push
inc
push
inc
aad
jb
idiv
rclb
jbe
pop
out
or
pusha
pop
testb
sbb
sub
push
out
xor
cld
std
in
cmp
sbb
leave
fwait
lcall
push
cmp
dec
icebp
or
cwtl
jb
push
sbb
fiadds
data16
lods
ficoml
mull
clc
add
mov
add
xchg
popa
out
xor
lods
insb
sub
add
sti
mov
repz
jg
cmc
ret
cmp
inc
jo
jmp
mov
or
xor
xor
cmp
jl
aam
lret
bound
outsl
jno
cmp
lods
xchg
jb
xchg
jo
cmp
pop
pop
ja
dec
push
fmuls
pop
in
loope
xchg
or
insb
pushf
sub
cwtl
or
and
jns
jne
ja
xor
pop
xor
ja
pop
and
and
dec
daa
xor
int3
pop
xor
mov
pusha
mov
jmp
outsb
sbbl
out
loopne
cmp
repz
in
leave
xchg
repz
xchg
cltd
mov
adc
repz
sarl
mov
push
shl
xor
leave
lods
push
sbb
xor
xor
cmp
lcall
mov
dec
lock
xchg
div
pop
scas
cmp
mov
xor
jl
sub
bound
in
stos
lds
mov
mov
pop
jl
cmp
push
push
xlat
or
rcrl
jp
pusha
stos
test
add
daa
lock
out
std
in
pushf
nop
leave
roll
inc
inc
daa
ret
and
mov
dec
push
loopne
jecxz
jns
adc
testl
mov
jbe
fbld
dec
push
out
ror
leave
xor
mov
jecxz
fxrstor
and
mov
sahf
inc
and
stc
dec
or
add
lahf
adc
loop
test
mov
adc
ret
sahf
adc
cmp
test
fldt
sahf
add
addr16
imul
fs
cmp
pop
or
repnz
or
ret
test
rcrb
jg
lahf
xchg
addr16
push
sub
lods
jmp
pop
mov
jnp
fs
subl
outsl
xchg
cmpsl
add
fwait
sti
lcall
cmp
cmp
cmpsb
fldl
xor
shl
stos
xor
stos
push
cmp
stos
mov
ljmp
test
in
xorl
adc
repnz
xchg
sbb
sbb
shlb
sub
xor
sti
arpl
mov
jle
mov
insl
ret
adc
mov
jp
xchg
inc
fstpt
je
pop
repnz
or
insb
aad
mov
aam
push
push
adc
cmp
xor
mov
scas
mov
jae
jge
jle
lret
inc
pop
jmp
mov
xchg
pop
mov
mov
aas
inc
inc
mov
test
lret
lret
std
pop
mov
adc
sahf
xor
leave
push
sbb
sub
sbb
mov
js
mov
insl
xor
ret
mov
dec
adc
sti
sbb
divb
loopne
popf
mov
sti
loopne
jge
sbb
and
mov
test
cltd
mov
or
lcall
push
lods
rcr
out
imul
sbb
or
cltd
sbb
lds
pushf
pop
sub
push
int
jno
es
jge
dec
mov
iret
xchg
mov
push
mov
lods
call
je
sarb
xchg
mov
out
dec
mov
jmp
fs
fildll
xor
stc
xor
insb
mov
out
cmp
push
mov
jo
mov
mov
jmp
leave
mov
push
mov
sub
shrl
sbb
push
xchg
mov
inc
push
pop
mov
lret
aas
dec
in
add
inc
mov
or
jl
pop
test
sar
bound
push
and
lret
lea
sub
es
cmp
jnp
pop
add
mov
adc
add
xchg
popa
xchg
mov
andb
adc
fsubrl
in
in
mov
pop
mov
in
mov
pop
push
leave
popf
push
bound
out
outsb
xchg
das
or
mov
pop
push
shl
movsl
inc
sbb
pop
fucomip
data16
mov
dec
das
mov
fnstcw
imul
fistpll
sete
jne
dec
jle
xchg
fsubl
add
aaa
dec
xor
push
pop
test
adc
loope
mov
pop
ret
add
nop
mov
cli
jnp
or
call
xchg
cmpsl
enter
push
mov
das
aad
pop
stc
pop
shlb
inc
flds
sub
in
jecxz
push
int3
testl
xor
popa
int3
mov
psadbw
dec
pop
mov
ds
ja
mov
and
mov
std
push
and
mov
fwait
in
gs
clc
sub
cmpsb
dec
inc
mov
insb
aas
push
sti
leave
cli
mov
cltd
mov
mov
mov
cld
and
faddl
icebp
in
mov
pusha
cmpsl
dec
push
xchg
fcmove
inc
repz
or
mov
mov
lret
bound
adc
inc
jle
or
add
fnstcw
xchg
out
dec
std
pop
mov
in
dec
lock
sbb
adc
imul
sbb
subb
jge
jl
xchg
cmp
xor
movsl
xor
and
scas
cmp
dec
adc
imul
mov
js
adc
xchg
dec
mov
rcr
adc
stc
and
and
paddusb
inc
into
enter
mulb
addr16
sbb
mov
jo
inc
add
mov
fdivl
xchg
cmpsb
lock
sub
inc
fisubrs
mov
mov
mov
adc
mov
cmpb
jne
test
push
jae
mov
pop
mov
into
inc
jp
je
gs
cmpsb
pop
ret
jmp
cmp
pusha
loope
mov
mov
cmp
loope
int3
ret
mov
sbb
jbe
inc
or
daa
ret
jge
inc
data16
jae
movsl
js
push
mov
and
bound
and
int3
push
cmp
push
add
icebp
cmp
dec
pop
push
sbb
or
push
adc
push
cmp
xor
add
std
outsl
js
idivl
mov
loop
int
jge
int
jns
inc
dec
stos
sbb
daa
xor
movsb
ja
mov
jb
push
dec
lock
outsl
jmp
out
pushl
xor
dec
fcoms
add
sub
xor
into
pop
inc
ss
mov
notrack
and
inc
jne
sti
sub
jno
dec
cmpsb
add
leave
xchg
pushf
sub
movsl
stos
sbb
std
pop
jmp
bound
sub
mov
adc
xchg
dec
xchg
mov
outsl
pop
es
or
lea
cmp
pushf
xor
cmp
xor
movsl
mov
inc
xlat
sbb
push
and
repz
pop
lods
adc
pop
push
and
mov
and
mov
mov
cwtl
pop
dec
rcll
xor
add
mov
jmp
xchg
pop
fistps
pop
lock
pop
pop
icebp
repz
push
imul
lret
lds
push
xchg
psubsw
gs
xchg
sti
push
mov
loop
xor
mov
ja
pop
movsl
cld
mov
or
cmp
fwait
lea
adc
data16
pop
mov
mov
cs
add
shrl
mov
movl
pop
rclb
das
jbe
sub
xchg
mov
loop
and
mov
test
push
iret
inc
pop
pusha
dec
mov
loopne
pop
cmp
lahf
leave
sbb
gs
mov
imul
pop
insb
mov
push
mov
dec
test
fldl
sub
mov
test
sbb
jmp
xchg
arpl
jl
loope
and
stos
sbb
adc
fdiv
xor
jp
adc
fisubrs
rcl
je
jno
xor
in
jmp
jmp
repnz
fsubl
xor
xor
movsb
mov
sub
xorb
jmp
push
sub
sub
iret
push
adc
add
sbb
gs
in
imul
arpl
mov
adc
mov
mov
cmpsb
add
sbb
jb
lcall
mov
cmp
fstpl
cmp
jmp
push
inc
xchg
mov
ds
or
mov
lock
fcoms
xchg
and
cmpsl
jle
gs
pushf
outsl
addr16
cmc
mov
mov
outsb
shlb
jge
jno
cmc
sbb
cmp
or
dec
and
add
pop
movsl
push
test
cmp
rorb
leave
mov
push
fstps
fdivs
xor
sbb
shll
jo
adc
test
incb
in
adc
fimuls
xor
lret
mov
lods
or
pop
ret
daa
cmp
jecxz
lcall
shll
out
push
and
int
mov
or
sub
adc
subl
es
subb
in
add
int3
xchg
frstor
out
add
cs
inc
lret
or
inc
lods
jl
loop
or
mov
xchg
jns
sti
mov
adc
mov
and
jne
and
and
cltd
enter
pop
sbb
fwait
cwtl
mov
movsl
movsb
sbb
gs
mov
inc
lds
sbb
mov
mov
sahf
sar
push
or
mov
jns
out
mov
pop
cmp
out
sub
addr16
test
sub
sbb
lods
aas
cld
out
jecxz,pt
stos
and
pop
sub
inc
cld
pop
mov
xchg
pop
cmp
outsb
std
pop
pusha
xor
lock
pop
in
mov
ljmp
xchg
mov
and
ja
out
jbe
sub
mov
pop
jae
push
mov
test
pop
outsl
push
pop
inc
adc
les
sbb
add
jbe
int
orl
sub
inc
lret
addr16
cmp
adc
mov
outsb
add
mov
adc
leave
imul
mov
cli
ss
xor
lods
inc
lcall
lock
hlt
xor
divb
jp
dec
lds
cmp
mov
pop
mov
inc
sbb
insl
mov
jge
push
push
mov
mov
or
out
cmpsl
sbb
ds
push
add
jg
cwtl
adc
movsl
sahf
cmp
xor
pop
add
ljmp
xchg
pop
leave
inc
cltd
fcoms
mov
jecxz
push
out
scas
mov
xchg
mov
incl
mov
mov
fldt
js
cmp
inc
repz
xchg
and
jnp
push
or
sbb
xchg
and
jmp
and
cmpsl
or
ljmp
pop
cmpl
mov
aaa
mov
and
outsl
jg
sub
lret
rcr
rorl
int
pop
mov
mov
push
sbb
lods
jge
add
jmp
xchg
loopne
lea
call
or
pop
push
imul
jo
movsb
loop
movsl
shlb
cmp
mov
movsl
dec
iret
dec
pop
fs
jl
test
pop
out
jge
lea
negb
jno
jg
cmp
cmp
in
push
add
xchg
xchg
lds
pop
data16
xchg
rcll
push
jbe
push
and
std
mov
xchg
mov
imul
rcr
inc
sub
push
jg
push
adc
sahf
sbb
pop
sbb
cmpsl
loop
cwtl
xor
rorb
cmp
mov
xchg
out
test
xchg
jl
rorb
mov
daa
push
jo
mov
ret
iret
jmp
sbb
out
andb
jl
adc
xlat
or
jmp
pusha
aad
xor
adc
and
inc
ljmp
dec
adc
sarb
es
cmpsl
sub
or
out
xchg
das
xchg
mov
adc
movsb
mov
std
or
mov
cld
std
out
xchg
dec
cltd
jp
mov
fisubrl
into
sahf
sti
outsb
scas
push
jl
or
and
xlat
add
into
xorl
int3
cmc
cmp
mov
lods
lahf
adcb
fdivrs
xor
test
push
sbb
sar
testl
mov
bound
pushf
xchg
push
and
jns
aas
flds
xchg
cld
xlat
lret
addr16
insl
pop
and
pop
cmp
fcoml
mov
imul
dec
mov
mov
dec
dec
push
cs
rcrb
shlb
push
test
jmp
push
daa
dec
jne
sub
mov
mov
xchg
in
nop
dec
lock
sbb
insb
sub
lret
push
scas
cmp
pop
dec
test
fsubrs
leave
push
fcoml
add
pop
fistpl
into
cs
xchg
push
xchg
or
push
out
in
dec
fstpl
dec
hlt
movsl
outsb
inc
xor
int
mulb
test
fadds
jne
cmp
jo
sub
jg
flds
cmpsb
or
lock
js
jmp
lods
insl
push
notb
lods
imul
popa
mov
add
cld
hlt
push
leave
push
lea
scas
jbe
inc
jne
inc
adc
push
arpl
int
lods
or
jmp
mov
lret
sub
pop
mov
subl
fdivrp
popa
mov
mov
mov
in
sub
lahf
rcll
outsl
pop
out
sahf
subl
inc
shll
pop
jle
inc
mov
mov
js
mov
pop
scas
cli
in
std
outsl
add
push
adc
ljmp
pop
dec
inc
stos
rorl
xchg
sub
addr16
jl
add
jmp
jge
lret
adc
adcl
and
xor
pop
push
lcall
jne
mull
adc
add
lds
gs
xchg
adc
cmc
jg
xchg
jl
dec
sub
hlt
fidivs
and
clc
sub
icebp
add
in
dec
mov
xchg
xchg
jno,pn
cmp
in
add
sbb
or
xchg
fldt
cmp
gs
xchg
push
icebp
mov
cmp
or
je
les
jae
stos
adc
dec
out
cmp
or
out
not
es
mov
daa
in
xor
cmp
mov
int3
jae
mov
push
mov
sub
xchg
sbb
cmp
mov
fidivl
das
cmp
add
movsb
rcr
insl
cltd
ss
bound
call
xchg
mov
jno
shl
dec
cmp
lods
in
imul
in
stos
mov
pop
xchg
mov
loop
cmc
add
sub
icebp
mov
or
jae
outsl
enter
mov
enter
std
gs
daa
mov
fsub
jo
data16
push
push
lock
or
sub
notl
aam
pop
sbb
sub
pcmpeqb
scas
add
js
int3
sahf
pop
cmpsb
imul
hlt
cmp
pop
dec
into
dec
int
push
push
xor
mov
outsb
sub
adc
xlat
ret
int3
push
dec
jmp
lods
and
loop
adc
test
mov
movsb
repz
dec
data16
sbb
je
lods
mov
push
xor
push
cmp
repz
mov
add
jb
xlat
pop
push
movsb
xchg
push
jo
lcall
mov
cmp
jecxz
xor
popa
mov
fildll
xchg
mov
sub
mov
mov
loopne
aas
shlb
orl
mov
imul
jecxz
sbb
mov
loop
loopne
inc
aas
xchg
dec
adc
ss
fs
int3
stos
push
and
pop
out
call
mov
popf
cld
fidivrs
int
and
xchg
cmp
push
jp
push
lret
std
nop
outsl
jno
mov
pop
cmp
fwait
mov
adc
mov
ljmp
loopne
xchg
or
add
ljmp
sub
jp
or
loope
adcb
xchg
push
cmp
add
in
addr16
fsubrs
stos
mov
cmp
inc
daa
cmp
int
fmull
sbb
xor
out
lods
mov
sti
push
mov
std
add
lods
adcb
adc
lods
mov
out
test
sub
pop
enter
test
pop
and
cmp
cld
popa
push
push
enter
jne
adc
dec
xchg
jmp
mov
fs
jle
or
into
cmp
cmc
scas
cwtl
int
lds
pop
stos
pop
push
xor
ds
xor
xchg
mov
std
add
push
xchg
add
and
inc
cwtl
mov
mov
cld
mov
inc
aad
mov
sub
loopne
leave
jmp
pop
sub
aaa
mov
jg
mov
test
xchg
jl
jno
dec
insb
pop
adc
xor
add
push
fdivrs
ret
lahf
nop
shl
in
cmpb
mov
mov
mov
inc
shll
inc
inc
loopne
vpmacssww
cmpsl
inc
cmp
iret
mov
adc
cmp
jl
cmpsl
mov
test
inc
sbb
fstps
jg
fildl
cld
mov
adcb
xchg
fisttpl
in
lret
stc
xchg
xchg
cli
push
dec
bswap
sahf
cs
xchg
xchg
loopne
mov
or
mov
outsb
jo
scas
push
sbb
push
xor
adc
sbb
inc
pop
lods
cmp
adc
jbe
dec
add
or
push
in
push
add
ficompl
sbb
outsb
xchg
test
iret
mov
jne
fimull
ljmp
xchg
inc
loop
adc
adcl
add
mov
push
add
bound
loope
shr
repz
les
out
add
mov
push
enter
push
xchg
mov
addr16
arpl
into
enter
pop
shrl
pop
rorl
jge,pt
rorl
xchg
mov
test
scas
call
mov
dec
popa
addl
das
push
stc
imul
inc
and
xor
outsl
in
jp
sbb
rolb
xchg
adcb
icebp
movl
dec
xor
mov
mov
jns
add
dec
je
test
sub
jno
in
pop
cmp
ret
incl
or
sbb
lea
jne
and
lods
cmpsl
xchg
sahf
jmp
iret
and
push
adc
inc
dec
or
imul
lea
movl
rorb
icebp
add
push
jmp
pop
lds
push
call
out
lret
cltd
inc
push
jle
xor
adc
pushl
adcl
aas
adc
xor
test
push
sbb
jle
mov
inc
or
into
loope
dec
pop
dec
mov
fldl2t
sub
pushf
aad
loope
push
insb
cmc
jp
xor
pop
test
and
int
leave
cmpsl
out
fwait
les
je
and
adc
cmc
inc
cmc
test
fstpt
dec
sbb
xorb
test
in
push
xorb
push
addr16
pop
cmc
orl
pop
out
ss
fiadds
fidivl
imul
les
and
xchg
outsl
inc
js
les
insb
imul
gs
js
dec
sbb
clc
test
pop
fwait
into
pop
ret
std
je
add
inc
inc
lcall
ret
sti
jns
xlat
dec
stos
sar
push
pop
sbbb
push
dec
mov
das
sbb
imul
sub
out
ret
pop
movsb
jge
cld
cltd
or
std
mov
mov
or
lret
mov
pop
clc
loope
flds
xlat
lods
push
fcomi
sbb
xor
sub
push
mov
sahf
mov
mov
into
xchg
pop
pop
mov
mov
in
xchg
cmp
mov
sbb
cmp
jge
repnz
outsl
mov
xor
or
cmp
movsl
test
pop
cltd
mov
mov
lds
xchg
faddl
push
jb
ret
les
ud0
sbb
imul
shrb
sub
or
xchg
xchg
call
push
lcall
jmp
mov
sub
fisttpll
adc
cs
pop
sub
lock
repz
fsts
jne
jp
xor
repz
leave
jl
out
cmp
mov
lods
shrb
xchg
xchg
mov
lidtl
sbb
jbe
lods
mov
insb
jp
test
in
ljmp
loope
aam
popf
dec
fwait
cs
subl
cmp
insl
or
mov
inc
es
stos
mov
adc
int3
mov
fcoms
iret
inc
sbb
test
inc
pop
jo
int
or
cmp
mov
cli
call
mov
scas
mov
pusha
lcall
inc
mov
sarb
stc
or
pop
repnz
mov
jb
jnp
jle
daa
cmp
lret
lret
insl
popa
mov
xchg
mov
cltd
lock
ficoml
data16
andl
xchg
dec
inc
stos
in
cmp
in
nop
mov
add
sub
xor
call
call
jbe
inc
push
aaa
push
fstpt
lock
loop
mov
in
std
push
inc
sbb
outsb
mov
fdivrs
ret
outsb
inc
mov
xor
jo
loopne
cli
lods
insl
popa
sub
dec
push
xor
cmp
dec
mov
push
jnp
and
insb
ljmp
pop
int
pusha
mov
test
cld
inc
pop
xor
adc
mov
xorl
pop
out
cmc
ret
loope
lods
jge
and
movsl
or
outsb
sahf
fcmovnu
or
cmc
ret
pop
pop
in
push
fcmovbe
push
adc
jp
cmp
sbb
test
fwait
mov
jo
cmp
and
push
punpcklbw
pop
popf
loop
out
add
adcl
lcall
push
xchg
inc
or
xor
push
inc
lcall
loopne
xchg
jmp
test
or
jmp
mov
mov
push
cmp
sbb
rorl
ret
jecxz
ss
push
dec
jb
inc
cltd
sbb
push
xor
inc
cmpsl
mov
push
jl
dec
shll
lahf
aam
cld
lds
ja
inc
lahf
cmpl
adc
and
cli
add
dec
scas
std
xor
ljmp
xchg
xor
dec
mov
ss
scas
lcall
outsl
scas
mov
add
dec
pop
push
jl
mov
test
adc
mov
movsb
jns
cmpsb
cmp
cmp
sbb
imul
cmpsl
mov
fwait
or
stc
sub
sahf
push
lods
xchg
jbe
adc
and
adc
xchg
movb
xchg
mov
sub
fdiv
insl
jnp
clc
dec
fdiv
mov
mov
stos
fsubl
stos
popa
and
insb
rol
in
out
cmp
adc
mov
lcall
cli
lock
dec
xchg
test
and
repz
xor
loope
movsl
ss
lahf
sub
xor
icebp
mov
mov
mov
push
fstpt
in
cmp
inc
aas
mov
mov
push
les
pop
xchg
jle
roll
pop
mov
es
leave
imul
fisttps
dec
adc
mov
lcall
mov
or
test
pop
sub
imul
stos
jns
in
out
jle
mov
mov
xchg
cmp
fiadds
add
dec
cmp
dec
mov
or
aaa
dec
enter
xlat
cmp
or
sub
pop
roll
inc
aam
sarl
xor
cmp
fwait
jo
subl
pop
cs
xor
ljmp
imul
movsb
hlt
and
xor
or
repz
sub
mov
cmc
fisubl
jmp
sbb
ss
jbe
in
add
sbb
add
out
test
jns
add
cmp
push
test
jns
cmpsb
aad
cld
xchg
adc
push
pusha
les
inc
loopne
out
pop
push
stos
and
test
lahf
mov
lret
scas
in
out
popa
scas
into
shrb
arpl
subl
or
mov
or
jmp
pop
stc
cld
mov
push
sbb
gs
sub
xchg
pop
add
enter
lods
es
adc
ficoms
lods
fdivr
int3
testl
inc
pop
jnp
add
cmp
test
stos
push
sbb
push
jns
cwtl
push
cltd
adc
rsm
cmpsb
adc
pop
adc
add
popf
cmc
xchg
mov
gs
std
std
push
imul
lea
sbb
push
cmp
lds
out
lods
push
addr16
sbb
sarb
push
scas
inc
iret
aam
scas
iret
ror
sub
jle
stos
repz
shll
dec
shlb
mov
xchg
cltd
cmp
out
inc
and
sub
stc
incl
mov
inc
and
mov
stc
in
fwait
and
gs
inc
out
push
scas
idivb
das
add
rcrb
arpl
mov
sahf
je
aam
or
out
pop
fisttpl
cmp
aad
test
jg
jno
jecxz
and
ds
jne
lahf
inc
mov
adc
add
repnz
fisubrs
sub
add
dec
add
ds
and
arpl
jb
mov
or
jge
jecxz
jae
aad
pop
mov
push
cmp
std
mov
subb
test
sub
sub
imul
dec
gs
cltd
iret
push
sbb
mov
shll
mov
std
in
or
xchg
fists
incl
stos
inc
mov
call
das
sbb
es
push
data16
movsl
scas
dec
push
fwait
dec
aam
aam
jne
mov
cs
jns
or
jno
rcl
xor
xchg
cmpsl
add
and
data16
and
enter
psllw
sub
je
sub
pop
mov
loopne
mov
add
dec
cmp
pop
test
sarl
outsb
push
pop
leave
dec
outsl
cmpsb
jae
mov
negb
popf
and
lret
dec
pushf
inc
mov
lahf
xor
pop
mov
or
mov
and
test
push
inc
jo
loope
xchg
pop
int3
shl
inc
pop
mov
mov
mov
or
ss
mov
add
inc
mov
push
js
pop
cmp
mov
sub
repnz
leave
or
sbb
lret
das
inc
mov
jnp
pop
sahf
mov
sub
outsb
jle
aas
mov
push
inc
daa
or
cwtl
fdivrl
clc
jnp
push
mov
jb
cmp
push
xor
fmuls
imul
sub
out
dec
in
imul
pop
imul
adc
lea
lret
inc
pop
arpl
ljmpw
gs
out
jp
aad
fidivrl
rcrl
mov
dec
ljmp
insb
test
int3
jae
addb
push
jb
adc
and
into
push
hlt
sbb
cmp
dec
lock
jbe
idivb
andl
out
jb
scas
repz
mov
scas
into
inc
arpl
mov
mov
pop
js
repz
sbb
roll
xor
xor
js
mov
mov
lds
arpl
dec
loopne
addr16
sahf
shrb
and
jge
rcl
aad
jg
movb
sub
push
xchg
push
pop
repnz
imul
lret
aaa
sbb
push
cs
mov
push
sub
cltd
push
push
dec
lds
dec
mov
sbb
xor
push
adc
testb
and
dec
repnz
lock
mov
adc
paddusw
cmpsb
jne
and
lret
lods
dec
repz
dec
push
js
adc
adc
pop
out
sbb
add
mov
rclb
xchg
jmp
add
jle
nop
pop
pop
mov
push
addr16
jb
mov
into
fwait
sbb
hlt
mov
sub
mov
and
or
ljmp
or
sbbb
push
jne
and
or
adc
leave
jmp
pop
xchg
add
push
ja
jle
gs
push
aaa
daa
sahf
aas
push
icebp
lock
mov
repnz
in
arpl
mov
push
rorb
push
daa
data16
push
sbb
hlt
inc
loope
adc
loope
outsl
fcmovu
dec
lcall
jge
mov
and
loop
add
dec
inc
lods
stos
mov
pop
mov
and
outsb
mov
jbe
xchg
jle
push
and
or
fstps
insb
stos
sub
insb
fcoms
mov
in
and
push
outsl
sub
add
mov
lea
dec
jae
mov
adc
pop
mov
clc
jbe
aad
mov
mov
dec
pop
call
pop
sbb
in
add
adc
xor
and
popa
push
mov
pusha
lret
mov
xor
stc
aam
jae
imul
inc
push
out
inc
hlt
sub
or
xchg
fstpt
dec
sbb
add
pop
add
pushf
scas
inc
pop
sbb
xor
jg
xchg
pop
into
sbb
lret
mov
push
pop
pop
mov
out
xlat
inc
lret
dec
jg,pt
mov
sub
lods
mov
out
sub
xor
ret
addb
pop
jmp
aaa
xor
jecxz
in
sbb
fs
xchg
push
add
test
add
in
inc
stos
divl
aad
mov
mov
or
lret
push
pop
xor
mov
ljmp
pop
push
out
sub
addr16
mov
inc
repz
push
push
push
test
cmp
jg
aad
pop
sti
or
lcall
imul
push
loope
add
cltd
xorb
fstpl
scas
push
jns
test
cmp
pop
sahf
sahf
arpl
lret
sbb
adc
iret
shrb
xchg
ffree
jp
inc
mov
xchg
sub
push
das
add
es
rorb
shlb
xchg
inc
dec
dec
and
jnp
js
test
mov
daa
add
out
mov
into
js
xor
mov
aam
aas
sbb
js
add
jbe
xchg
cs
movsl
out
iret
jp
pushf
adcl
dec
add
loop
or
leave
mov
data16
popl
dec
push
push
mov
add
mov
mov
loop
ss
ds
and
lret
andb
sbb
xlat
ljmp
sub
push
lds
imul
pop
sbb
sar
add
adc
js
outsl
pop
push
and
in
jbe
rolb
dec
cld
xchg
leave
movsb
or
and
xor
dec
pop
cs
les
jae
sub
out
mov
adc
pop
ljmp
jl
outsb
aam
jno
push
and
xor
and
pop
mov
push
dec
cmp
lret
fs
cs
aas
rolb
mov
icebp
stos
jmp
xlat
pop
aaa
and
popa
clc
mov
xchg
and
movsl
xor
in
inc
out
data16
jns
fdivl
mov
jae
mov
cmpsb
mov
pop
aas
sbb
inc
sbb
xor
sub
test
xor
rep
mov
enter
jl
ret
mov
lods
sub
inc
mov
fstl
mov
mov
pop
fdivrp
xchg
inc
stos
sbb
notl
in
hlt
add
out
jo
mov
stos
pop
fdivr
shl
imul
lcall
xchg
sbb
bswap
xor
mov
pop
outsl
push
out
imul
imul
movsl
inc
lds
mov
mov
inc
cmp
and
jnp
jp
std
sub
shll
ja
les
js
in
add
and
nop
cmp
add
inc
sub
aad
push
sbb
ffreep
inc
ret
cmp
cwtl
minps
add
jmp
clc
push
add
shlb
in
cwtl
lods
stos
test
jae
ja
dec
std
mov
lods
or
testl
or
pop
add
fsubl
sbb
mov
xchg
and
xor
cmp
int
aaa
push
notb
dec
insl
jl
js,pn
push
push
mov
scas
jmp
xchg
je
mov
ljmp
fs
push
cmpl
mov
outsb
lret
cmp
mov
add
in
cli
xchg
clc
push
inc
movsb
test
jg
insl
movsl
fwait
add
xorb
imul
je
pop
aad
sbb
shr
pusha
cmp
pop
ja
sbb
jl
stos
fidivrs
lcall
pop
mov
xchg
arpl
mov
dec
adc
lods
insb
jge
cltd
sub
out
mov
cmc
aaa
fdivrs
xchg
pop
test
fwait
push
adc
ljmp
sbb
add
rcrb
jae
pop
jae
mov
push
sub
shll
iret
pop
jmp
pusha
sarb
adc
mov
sbb
fwait
lods
mov
jnp
mov
jecxz
lds
xchg
jp
mov
shrb
testl
mov
pop
jno
mov
je
or
int
sbb
cmp
mov
mov
push
shlb
rclb
scas
fcompl
ja
cltd
mov
or
fisttps
jecxz
roll
test
lods
sbb
adc
xchg
xor
mov
ret
mov
xchg
imul
pop
sti
gs
out
or
or
not
xchg
nop
in
pop
and
stc
push
cmpsl
stc
insb
xor
add
in
clc
movsl
cmpsb
sub
aam
and
and
push
mov
pop
rcr
divl
popa
ret
into
icebp
aaa
push
add
add
cli
orl
mov
add
mov
xor
jmp
add
in
sarb
sub
jmp
lea
push
mov
push
pusha
inc
pusha
or
sbb
push
mov
in
mov
sbb
int
adc
fscale
sub
add
jae
ds
loopne
or
les
ret
sbb
push
cli
xchg
mov
fs
sbb
jb
dec
stos
stos
aad
outsb
push
xor
rcl
dec
hlt
adc
dec
and
stc
andl
dec
insb
test
xchg
jnp
lds
daa
cmpsb
xor
dec
pop
mov
aam
clc
and
xor
into
sub
push
pop
xchg
inc
leave
sub
mov
and
lods
adc
loope
imul
push
addr16
andb
mov
mov
ljmp
mov
addb
or
dec
sbbl
data16
int3
xchg
mov
test
ret
popa
test
cmp
hlt
mov
in
sub
aas
push
lret
stos
xchg
bound
aaa
jecxz
dec
mov
pop
mov
js
pusha
repnz
add
pop
pop
sub
sub
adc
daa
fnstsw
adc
std
and
cmc
lods
inc
aaa
jae
sub
test
movsb
cmp
test
lods
and
sahf
adc
mov
inc
pmaxub
shlb
dec
sub
mov
mov
repz
mov
dec
aas
push
ljmp
fcoml
jmp
loope
bound
nop
xor
aas
aad
add
or
push
loop
lret
mov
mov
adc
loope
sub
mov
adc
sub
les
das
xor
call
dec
ja
sti
and
cld
cmp
aam
xchg
test
sbb
cwtl
nop
enter
inc
dec
rorb
pop
dec
mov
mov
push
jge
cmp
jnp
mov
fs
pop
add
fstp
aam
mov
aas
cmp
adc
xchg
and
push
jne
push
dec
sub
mov
loopne
mov
movsb
arpl
dec
push
lea
in
mov
add
std
mov
test
pop
or
cmpsl
jno
aam
jb
adc
inc
es
out
fnstsw
mov
stc
ret
out
dec
out
xchg
iret
scas
test
lods
sbb
add
fdivs
dec
in
xor
xchg
jl
xor
or
mov
and
jo
ficompl
scas
cmp
je
adc
mov
push
jmp
dec
js
inc
test
jnp
cmpl
xlat
ja
sar
jns
popf
popa
std
or
repz
stc
bound
cmp
hlt
xchg
std
and
jg
std
imul
fwait
cs
inc
adc
adc
leave
push
repz
push
iret
dec
pusha
jecxz
mov
cltd
fbld
push
add
mov
inc
pop
lret
aad
mov
lret
lds
mov
out
dec
adc
lret
and
daa
repz
aaa
pop
call
data16
nop
std
shrb
pop
inc
xchg
mov
push
icebp
mov
pushf
jne
mov
adc
shl
fiadds
inc
hlt
repnz
into
pop
stos
xchg
mov
xchg
or
mov
mov
loope
ss
or
ret
sub
inc
inc
cli
lods
mov
popf
or
aas
mov
enter
repz
nop
inc
sbb
mov
fistl
stos
adc
shrl
cmpsb
mov
add
ret
push
fsubrl
out
xchg
xchg
push
in
push
sub
test
das
mov
in
inc
inc
fldenv
and
shrl
xor
push
cwtl
lahf
jmp
mov
fadd
mov
push
icebp
js
cmp
sbb
dec
in
std
jg
mov
fstps
int
push
popa
pop
incl
clc
dec
pop
fs
cmp
add
imul
cld
xor
pop
add
sar
sub
xor
jp
mov
sbb
or
or
faddl
and
push
sbb
dec
movsb
movsl
inc
daa
mov
sbb
cwtl
fcos
or
das
in
test
push
loope
jge
ror
iret
ljmp
aaa
sbb
push
lea
push
fsubrs
and
sbb
leave
inc
dec
fstps
lret
or
and
pop
sbb
rclb
mov
je
mov
js
inc
or
or
mov
fs
jl
cs
jno
jmp
sub
sbb
mov
hlt
dec
jo
xchg
ljmp
cmpsb
dec
jo
mov
pop
sub
inc
iret
jb
dec
adc
sub
jae
stos
dec
imul
stc
es
jae
cmp
dec
mov
inc
mov
jl
sbb
push
int3
int
mov
or
mov
or
sti
sbb
aas
lock
icebp
ret
in
inc
or
push
jae
inc
cli
std
sbb
cmp
cmp
pop
mov
mov
inc
push
imul
inc
shll
xchg
test
jmp
mov
cmp
mov
fptan
fidivl
pop
outsb
push
cmp
movsb
xor
add
fucomip
mov
fwait
dec
ret
movsb
movsb
xchg
and
loope
negb
lahf
sub
test
mov
mov
mov
sbb
cmpsb
mov
xor
inc
jb
inc
inc
mov
int
jo
popf
stos
add
out
mov
mov
scas
scas
addl
loop
push
adc
inc
inc
sti
ret
out
adc
and
imul
subb
cwtl
aas
cmpsb
mov
and
push
jb
std
mov
add
sti
out
imul
sbb
mov
fbld
pop
mov
sbb
sub
mov
call
out
mov
xchg
add
pop
xchg
stc
jno
jecxz
jnp
ret
xchg
add
and
dec
dec
xor
dec
ljmp
cmpsb
pop
in
jmp
sbb
call
sahf
cmp
dec
cld
je
cltd
sub
lret
pop
pop
inc
scas
push
cmp
in
out
pusha
test
cmp
mov
fidivrs
fwait
adc
add
rol
jg
addr16
ss
inc
movsl
xchg
or
das
frstor
out
xchg
in
ja
lock
test
sbb
fimull
mov
ficoms
mov
push
add
ljmp
cmp
imul
fistl
scas
lahf
sti
jp
lahf
imul
dec
and
scas
cld
pop
addb
lods
pop
int3
and
outsb
fmull
mov
int
lahf
dec
or
data16
sub
or
fistpl
orl
adc
fstpl
fcoml
push
fadds
inc
movsb
fwait
rcrl
lods
loop
ret
jle
push
imul
aas
jge
outsl
sub
cmc
dec
sbb
pop
loope
dec
cmp
push
sahf
or
mov
push
xlat
test
push
sbb
fidivrs
imul
mov
test
jae
jb
push
test
mov
mov
lock
mov
aas
adc
aas
push
fbstp
jp
xchg
jbe
repnz
mov
adc
out
push
ret
push
or
jle
mov
bnd
bnd
lcall
cmp
loop
adc
mov
cmp
sarb
popa
mov
addr16
cwtl
roll
inc
outsb
sub
ds
les
push
mov
add
imulb
shll
roll
jmp
xchg
cmc
jae
xor
sub
insb
jecxz
adc
push
mov
js
ds
cmp
lds
sub
arpl
or
xchg
sbb
fwait
lret
or
push
dec
call
pop
jne
out
jnp
popa
xorl
cmp
xchg
ret
aad
pop
jle
sub
imul
push
pop
cmc
mov
xor
stos
in
fcmovnu
pop
jmp
jle
mov
loope
inc
xchg
mov
sub
and
jne
out
xchg
adc
out
add
mov
mov
sbb
aas
insl
loopne
inc
repz
popa
and
into
in
int
int
dec
in
pop
dec
xchg
lahf
mov
out
sarl
sub
hlt
je
push
mov
mov
repz
roll
or
lcall
cmp
andl
fs
lods
scas
jb
xchg
repnz
mull
xor
add
loopne
or
sbb
arpl
test
adc
dec
push
inc
adc
jg
ret
add
cld
push
loopne
lret
mov
loopne
fucom
popf
lret
sub
add
dec
mov
cmpsb
pop
adc
cmp
inc
or
push
out
sbb
push
push
inc
daa
lcall
jecxz
incb
push
push
ret
mov
adc
orb
push
loop
dec
roll
inc
mov
ja
xchg
mov
or
or
test
cmp
test
rcrl
pop
stc
pop
popa
mov
and
rcrb
mov
mov
aam
lret
mov
dec
iret
adc
and
push
ror
and
dec
outsb
iret
adc
in
cmp
mov
test
mov
sub
lods
mov
dec
inc
adc
out
lds
pop
or
pop
loop
cli
pop
push
ljmp
adc
sahf
pop
test
jb
cmp
adc
mov
nop
fs
push
push
dec
dec
xor
push
rorl
adc
jbe
ja
addr16
pop
cld
xchg
add
sbb
xor
gs
cltd
sti
pop
dec
jae
in
pop
lock
out
adc
push
sbb
jle
adcl
push
fwait
xchg
push
xor
das
test
push
mov
xchg
shll
jl
xchg
add
inc
in
insb
es
mov
aam
fcom
jmp
sub
movsb
daa
insb
pop
outsl
pop
add
mov
in
mov
mov
push
jno
jnp
push
inc
dec
rcrb
cmp
stos
into
push
gs
adc
jae
add
or
repnz
or
xor
cmc
sahf
adcl
mov
gs
ss
jae
in
push
test
cltd
mov
push
in
or
mov
cmp
inc
jno
push
pop
movsl
leave
adc
addl
xor
mov
mov
xor
scas
adc
testl
mov
sbb
adcb
push
arpl
sub
fiaddl
mov
fcoml
inc
sbb
repz
rolb
jle
sbb
pop
cmp
outsb
xorb
sti
fisubrs
sub
mov
inc
mov
push
mov
lar
shlb
test
fs
shl
xchg
pop
cmpsb
xchg
sub
scas
push
aam
lahf
jp
out
adc
inc
scas
add
aad
stos
cmpsb
rol
xor
adc
dec
iret
insl
scas
adc
cwtl
xchg
inc
hlt
in
sbb
add
adc
fs
pop
jnp
mov
pop
jp
inc
and
inc
xchg
lahf
cwtl
add
and
inc
cmp
aas
aaa
pop
mov
add
pop
jge
push
leave
jmp
outsl
xor
pushf
pop
rcll
aas
lahf
xchg
test
add
mov
dec
or
popf
sub
rorl
dec
or
ss
mov
and
and
mov
scas
popf
jp
std
dec
adc
inc
pusha
mov
pusha
insl
push
pusha
out
nop
dec
fmull
mov
adc
cmc
testb
cmp
in
mov
xlat
sarb
mov
mov
mov
int3
cmp
sub
or
sub
in
arpl
adc
jecxz
jp
fists
push
sbb
popf
fdivl
sbb
inc
jnp
cltd
mov
jp
cmp
pushf
mov
mov
push
xchg
out
jle
adc
rclb
icebp
mov
sbb
lret
mov
mov
xorb
pop
shll
aad
shll
cmpl
sub
jle
or
xor
mov
jb
jbe
mov
mov
adc
cltd
and
les
leave
iret
adc
dec
dec
sbb
sub
mov
stos
xor
pop
sub
sbb
mov
cmp
inc
xchg
lret
inc
shr
dec
cmp
mov
cmp
pop
inc
add
mov
jns
mov
scas
xchg
movsl
cmpsb
add
lret
cld
dec
cmp
imul
or
mov
jmp
fwait
mov
push
jbe
jp
outsb
xlat
rorl
mov
arpl
sbb
push
add
rcr
mov
push
adc
mov
rcrb
or
imul
dec
dec
xchg
ss
push
push
jb
xchg
imul
mov
adc
iret
aam
mov
pop
sub
mov
xchg
pushf
int3
sbb
out
pop
and
ja
cmpsl
test
aam
fsubrl
in
sahf
cmp
push
mov
and
repnz
mov
pop
mov
movsb
sarl
cmpsb
inc
inc
jo
out
dec
icebp
gs
dec
loopne
out
and
xor
dec
stos
mov
cmp
sbb
outsb
adc
lods
dec
sub
lods
sbb
insl
out
aad
loopne
loope
outsl
cmpsl
dec
stc
cwtl
jnp
jae
es
cld
enter
hlt
sbb
push
cmp
mov
test
xchg
lds
out
lods
ret
test
and
pop
jecxz
jbe
pop
fists
jecxz
sub
xchg
imul
call
sbb
popa
rolb
pop
icebp
inc
cmp
push
loopne
jmp
inc
xchg
inc
dec
push
frstor
inc
adc
addr16
jbe
cmc
cs
test
inc
pop
fs
fistps
cld
scas
dec
outsl
int
addb
adc
inc
aad
or
mov
xchg
das
xchg
pop
jbe
add
add
jge
stos
sbb
xor
add
push
pop
fiadds
aam
and
cmp
adc
cld
lock
push
roll
add
sarl
je
jae
insl
lret
inc
repnz
sarl
bound
imul
repz
into
jmp
sub
lret
xchg
cmc
mov
mov
dec
push
xchg
fsubr
data16
jb
dec
xor
mov
sub
sub
lods
xor
add
mov
jo
mov
ss
adc
inc
dec
jne
in
addr16
dec
int
xchg
jno
das
loop
mov
and
stc
sarb
push
add
dec
aas
xor
adc
iret
xlat
clc
int
call
int
push
outsb
push
mov
dec
mov
or
and
pop
out
mov
push
bound
dec
int
test
lock
and
xor
fdivrs
add
fidivrl
pop
xor
sbb
adc
das
cltd
mov
sub
mov
out
decl
or
jae
push
ljmp
rcrl
push
fs
inc
in
ror
scas
xor
adc
pop
xchg
inc
jecxz
cmp
jne
popa
ficompl
out
inc
lock
lret
inc
fsubp
or
xor
daa
sub
jecxz
pop
sbb
jmp
mov
pop
in
out
arpl
xchg
cs
mov
scas
mov
push
ljmp
out
cmp
pusha
es
mov
mov
andl
out
pop
imul
mov
and
cwtl
mov
xlat
push
mov
repnz
adcb
xlat
inc
fs
push
cltd
sub
pop
test
cmp
ds
out
ds
fldcw
imul
data16
mov
xlat
test
and
and
mov
out
mov
mov
sbb
xor
pop
or
fisttpll
mov
test
push
mov
imull
mov
add
xchg
popf
clc
jae
imul
scas
out
cli
shlb
lcall
pop
jge
and
popa
lea
mov
push
sar
aad
mov
dec
clc
or
insl
je
pop
xchg
loopne
imul
mov
dec
xor
pop
jbe
inc
mov
and
insb
jge
ficoml
and
mov
sbb
jb
sub
sahf
fucom
jg
xor
dec
in
insb
es
inc
mov
xchg
jno
les
pop
mov
orl
and
xchg
mov
fadds
jno
shll
sbb
ret
out
jbe
pop
jl
adc
pop
inc
lods
ljmp
repz
repz
lods
or
imul
test
push
fwait
mov
into
xchg
dec
repz
mov
and
jae
enter
push
xor
add
pop
and
mov
gs
inc
mov
push
repnz
pop
adc
mov
push
add
xor
jno
imul
in
aad
outsl
cmp
adc
jb
mov
add
out
movsb
xchg
stc
push
aam
icebp
aam
sbb
ret
push
mov
jl
mov
xchg
ss
xchg
js
bnd
mov
lret
dec
cmp
jns
das
mov
mov
je
stc
mov
repz
add
stos
shrl
out
mov
fidivs
fcomi
xchg
pop
dec
movsb
mov
jns
or
inc
dec
mov
jg
inc
add
je
pop
add
mov
sahf
inc
aaa
mov
push
jnp
xor
add
xchg
sahf
jg
loop
movsb
mov
push
mov
or
or
decl
add
popf
xchg
dec
mov
orl
mov
lds
add
adc
xchg
je
mov
or
int3
ja
push
xor
pop
pop
jle
push
mov
push
jl
lock
mov
jmp
or
stc
sbb
int3
xchg
mov
xor
test
in
cmc
out
mov
and
jl
xor
sti
xchg
and
cltd
and
push
xchg
aaa
test
sbb
jmp
sarl
adc
test
mov
aas
imul
inc
rcl
addl
xor
int
movsl
loope
inc
mov
int
sbb
imul
add
inc
xor
icebp
push
jmp
sbb
and
arpl
icebp
jmp
iret
xchg
roll
mov
jne
fistpll
add
cmpsb
fsubrl
cmp
out
inc
xlat
and
cld
aam
js
int3
and
mov
stc
cmpsb
leave
dec
cmp
rorl
lds
aam
adc
jecxz
xor
pushf
addr16
lret
negb
cwtl
push
push
movb
clc
lahf
mov
push
imul
pop
into
je
mov
clc
lods
jbe
cmp
in
aad
test
cmp
int3
dec
dec
ret
adc
jle
ljmp
out
jae
aad
adc
add
push
data16
ret
daa
repnz
adc
fiadds
mov
xchg
mov
shl
hlt
jno
outsl
add
popa
call
adc
push
mov
push
inc
xor
dec
pusha
xlat
movsb
imul
rcrl
repnz
mov
shlb
pusha
idivl
adc
les
mov
adc
push
aaa
xchg
fistps
fsubrp
sbb
mov
push
out
mov
call
int
jmp
dec
out
pop
xchg
dec
sub
pusha
fnsave
push
xchg
mov
pusha
pop
adc
xchg
mov
repnz
sbbl
outsb
pop
sbb
or
push
adc
cmp
into
stc
pop
loope
outsl
lcall
adc
sub
lahf
fs
shl
rorl
pop
fstpl
frstor
inc
push
lea
jmp
xor
pop
fdivrl
mov
jnp
imul
pop
jg
in
in
adc
and
xor
or
push
into
adc
sti
inc
lods
outsb
jbe
push
mull
iret
aad
adc
dec
cli
insb
gs
mov
xor
ja
subl
stos
test
mov
bound
pushf
outsb
xor
and
push
fiaddl
jp
add
cmp
and
ret
repz
cmp
icebp
and
and
lds
cwtl
inc
mov
cmp
fnstenv
push
mulb
mov
out
call
push
sbb
push
scas
push
dec
inc
mov
cmp
bound
or
mov
push
mov
pshufw
out
dec
shrl
in
cmpsb
add
push
mov
push
shll
ret
je
popa
cwtl
out
inc
xor
lret
iret
mov
cmpsb
mov
test
push
add
pop
invd
or
push
xchg
inc
mov
pop
out
inc
xchg
fs
push
add
cmp
int3
sub
pop
cmp
xchg
stc
or
jo
cltd
and
adc
xchg
xchg
lea
mov
nop
dec
out
xorb
or
test
push
insl
mov
mov
ret
jbe
aad
stos
ret
jg
in
mov
es
outsb
stc
xor
std
pop
xor
mov
sbb
cmp
push
nop
aas
outsl
imul
stos
mov
sti
in
xor
ljmp
adc
rclb
das
je
mov
cmp
ret
add
test
mov
push
add
jbe
mov
fwait
in
or
cwtl
rep
push
dec
or
and
adc
push
adc
push
movsb
iret
xor
xor
testb
pop
cmc
push
fsubl
out
mov
pop
add
lret
pop
inc
add
enter
xor
frstor
popa
jo
ret
in
add
adc
adc
cmp
icebp
aaa
stos
movl
lods
int3
ficoml
mov
mov
scas
xchg
outsb
fldcw
lret
inc
cvtdq2ps
daa
out
ret
nop
xchg
movsl
jg
incb
xchg
push
in
in
enter
notl
push
jnp
jg
jecxz
mov
add
out
mov
adc
push
cmpsb
in
dec
scas
fisubl
jecxz
loopne
mov
lret
sbb
bound
and
pop
bound
cmp
js
mov
mov
pop
je
daa
popa
mov
xlat
mov
inc
sub
xchg
fldcw
lods
lret
fldt
mov
aaa
push
ljmp
test
jno
sub
pop
jns
push
jp
in
xchg
xchg
test
push
cld
add
or
xor
sahf
add
and
stos
dec
inc
mov
mov
jl
loopne
test
shrl
cwtl
in
jbe
cwtl
fdivrs
fldenv
mov
outsb
push
std
test
testl
sahf
sti
push
xor
inc
cmp
mov
fdivr
push
test
mov
mov
cmc
loop
push
repnz
pop
pop
les
les
movsb
gs
ss
lock
lret
adc
jl
xchg
out
shlb
mov
loop
mov
data16
jno
push
fadds
push
cld
jmp
out
int3
push
insb
inc
push
xchg
inc
movsb
fistps
xorb
or
leave
xchg
push
inc
xor
dec
sbb
enter
pop
sti
mov
lods
jl
ljmp
test
jnp
rol
jge
mov
gs
shll
jle
aad
xchg
push
rorb
scas
in
and
xchg
addr16
leave
jae
xor
aaa
mov
mov
add
int3
push
and
mov
int3
fwait
out
add
push
andb
popa
int
mov
and
lahf
orl
xor
adc
popa
aaa
push
adc
push
insl
xchg
int3
push
arpl
lds
push
adcb
dec
xor
insl
or
rclb
loop
aas
adc
mov
imul
xor
jecxz
daa
cmp
mov
in
xchg
and
outsb
nop
mov
shl
inc
test
insb
sub
outsl
icebp
cmp
mov
out
outsb
test
adc
out
stc
into
mov
bswap
inc
sbbb
dec
push
mov
mov
sbb
fnsave
loopne
scas
adc
xchg
sbb
jle
inc
repz
jne
jmp
mov
adc
out
jmp
std
sahf
pop
xorl
dec
push
les
jb
xor
movsb
cmp
popf
clc
popf
clc
sbbb
dec
sarl
in
data16
cmpsb
pop
std
insb
sti
push
xchg
repz
sbb
data16
popa
cmpsl
imull
cli
mov
adc
loope
js
push
mov
std
xchg
test
out
mov
stos
xor
in
or
pushf
aas
jnp
out
mov
into
xor
adc
call
rolb
pop
fs
dec
faddp
xchg
cmpsl
dec
lahf
xor
mov
push
push
out
add
stos
cmp
cmpsb
push
xchg
inc
push
scas
out
and
mov
test
and
dec
jae
test
pop
gs
stc
addr16
addr16
leave
pop
pusha
arpl
sbb
mov
pop
sub
inc
push
test
icebp
jecxz
in
jno
inc
pushf
or
ud0
movsb
mov
outsl
sbb
pop
cmc
sahf
iret
cmp
inc
sbbb
mov
mov
scas
scas
ss
addb
adc
sbb
cwtl
lret
das
jo
push
das
stc
xchg
sbb
mov
sbb
outsl
fidivrs
mov
jo
outsb
push
dec
cmp
and
xchg
adc
cmc
arpl
aaa
test
stos
test
stc
add
jbe
mov
loopne
aaa
call
or
lds
cmp
add
aaa
cmp
leave
mov
mov
push
lret
fs
adc
jp
adc
cmp
push
inc
cmc
and
sahf
das
nop
lods
stc
add
loope
inc
lds
dec
sub
or
or
out
out
int3
adc
lahf
subl
dec
dec
ret
outsl
dec
mov
add
push
add
add
xor
leave
pop
or
rcll
das
int
mov
inc
cmp
dec
sahf
movsl
imul
orl
inc
mov
fcmovbe
mov
pusha
mov
loop
fists
test
xchg
in
stc
add
xlat
in
orb
cmpsl
add
imul
movaps
mov
cs
mov
or
and
out
test
xchg
std
hlt
pop
and
ret
lods
jle
lret
or
mov
xchg
lods
iret
into
in
xchg
push
jo
mov
dec
xchg
mov
rcrb
int
add
inc
call
sub
xor
push
mov
popa
adc
fwait
rcll
xchg
cmp
lcall
fsubs
fdivr
ret
clc
xchg
std
pop
sub
mov
lahf
cltd
ret
dec
lods
dec
mov
arpl
pop
mov
jns
jle
cwtd
push
pop
push
jg
or
xchg
inc
loope
lahf
xchg
stc
outsb
fbld
mov
and
shlb
push
fimuls
jmp
aas
inc
adc
pop
push
int
mov
inc
popa
ja
jb
daa
pop
adc
sahf
jl
xor
xor
mov
rorl
hlt
xlat
jg
outsl
dec
dec
int
mov
xchg
dec
pop
sbb
loopne
mov
in
inc
in
mov
call
cmp
add
cs
fwait
pop
push
sbbl
mov
out
hlt
and
cld
mov
adc
aaa
clc
sar
dec
pusha
icebp
test
jge
or
scas
mov
call
shll
inc
negl
iret
jnp
pop
sub
fbstp
lea
aaa
and
xchg
jbe
mov
fdivs
lahf
or
cmpsb
icebp
scas
rol
rclb
shrl
mov
push
mov
or
jp
scas
ss
sub
scas
sbb
mov
out
aam
pop
addl
jge
pop
fsubs
test
les
jge
js
xor
pop
lds
insb
aam
ret
andb
fnop
clc
cmc
mov
mov
sub
daa
sar
test
mov
adc
lea
ffreep
ljmp
or
ss
or
test
push
repnz
jae
pop
pusha
fiadds
mov
cmp
in
xchg
in
insl
mov
das
sbb
shlb
repnz
hlt
lods
aas
loope
das
cwtl
pop
mov
sub
push
jecxz
add
andb
mov
mov
mov
fdivl
clc
iret
pop
rolb
je
cmc
pushf
sarb
or
sbb
mov
stos
mov
inc
test
push
pushf
repz
pop
loopne
jg
jb
int3
pop
xor
pop
sbb
pop
popf
add
or
mov
mov
jo
in
add
aad
or
andl
sub
jmp
popf
dec
shll
aas
ljmp
aaa
push
jle
mov
mov
mov
mov
je
mov
xor
lret
push
enter
mov
dec
out
sbb
dec
pop
fsubrl
repz
pop
lret
inc
test
adc
xchg
rcrb
cwtl
pop
push
mov
push
out
loop
sahf
mov
push
adc
icebp
adc
test
xor
push
lds
js
dec
out
data16
out
in
incl
jo
and
lret
sub
roll
push
sbb
xchg
out
jecxz
mov
out
inc
test
xchg
in
js
and
pop
jge
dec
inc
int3
pop
add
cli
pop
sbb
mov
cmpsl
lea
push
jmp
push
loopne
inc
xor
mov
sub
int
ja
faddp
mov
bound
testl
mov
xchg
jl
idivb
sbb
adc
int3
jb
fidivl
mov
pop
jb
inc
call
mov
out
cmp
or
repnz
sbb
aam
inc
inc
fwait
clc
push
icebp
les
mov
out
mov
mov
aad
lds
pop
test
hlt
xchg
mov
mov
xor
cli
repnz
inc
les
cli
sub
push
sti
cs
mov
sub
inc
shl
mov
scas
stos
jno
das
inc
insl
loop
int3
jne
mov
scas
jecxz
cmp
scas
and
pop
test
adc
mov
out
mov
and
xchg
popf
decb
in
mov
jnp
outsb
dec
pop
push
loopne
push
ds
mov
pop
lods
dec
pusha
pop
sub
push
push
mov
icebp
add
hlt
cmpsl
int
xor
call
inc
das
iret
dec
mov
adc
inc
pop
movsl
lea
mov
xchg
mov
roll
aaa
into
ds
cltd
les
sbbb
daa
cmp
inc
faddl
add
aas
arpl
mov
aam
fcmovnb
orl
icebp
mov
loopne
xor
iret
notb
hlt
sub
inc
xchg
arpl
loop
stos
fdivl
outsl
mov
in
insl
xor
fs
push
in
fadds
mov
loop
test
out
xchg
adc
std
fidivs
ret
adc
mov
fidivs
pop
cmp
mov
jge
ds
popa
adc
jo
shll
cld
pop
lcall
inc
lods
in
xor
pop
xor
in
shll
je
or
fcomip
sub
pop
pop
es
jmp
cmp
xchg
pop
jmp
out
mov
popa
loope
mov
lret
out
cmp
cmp
mov
in
inc
push
loop
iret
or
scas
pop
push
inc
repz
sub
insl
mov
or
push
stc
mov
icebp
sbbl
in
mov
xor
cmp
push
dec
fidivs
stos
in
fsubl
ret
into
fisubrl
test
lahf
iret
arpl
sahf
mov
mov
xchg
dec
mov
int3
jnp
je
gs
push
jmp
clc
xor
add
dec
insl
pop
pop
pop
loope
adc
mov
and
test
popa
popf
adc
icebp
in
addr16
xchg
and
out
arpl
inc
loop
jge
clc
mov
lret
addb
das
rcrl
bound
push
jnp
std
div
mov
adc
xchg
xchg
frstor
cmp
fs
add
insl
mov
push
sbb
cmpsl
rol
cmpsl
cvtps2pd
out
lock
xchg
add
adc
inc
in
lret
xchg
lret
mov
outsb
sub
mov
pop
mov
test
sbb
pop
icebp
add
inc
loopne
sbb
loop
cltd
xchg
sti
jmp
mov
cmc
sahf
fs
imul
mull
addl
cltd
xchg
pop
sub
js
mov
inc
cld
cmp
xchg
ret
pop
xor
aad
xchg
jl
adc
dec
ret
fldenv
xchg
inc
bound
add
loopne
cmp
xchg
popl
iret
fisttpl
cmp
popf
xor
jmp
in
ja
mov
in
cli
ret
fwait
push
xor
into
xchg
shlb
push
jl
mov
or
add
inc
syscall
xor
jno
push
jbe
in
or
test
leave
mov
inc
jno
sti
sbb
subw
pop
sti
mov
scas
adc
cmp
sub
stc
and
stos
cld
xlat
pop
cltd
test
jns
sbb
xor
lcall
scas
fwait
xchg
rclb
push
and
mov
jbe
imul
inc
sub
xchg
cli
push
sub
pushf
iret
push
ja
lretw
inc
outsb
jae
add
mov
xor
movsb
pop
xchg
mov
pushf
and
adc
xor
out
push
iret
stc
mov
pop
int
mov
sbb
mov
adc
test
cs
pop
lcall
mov
inc
popa
cmc
popf
inc
push
push
sbb
xor
or
mov
sub
xchg
xor
sub
test
ljmp
imul
adc
fldcw
repz
and
cmp
mov
push
popa
cmp
cmc
inc
push
cmp
lods
push
inc
mov
loope
sub
adc
xor
aad
adc
add
ret
fnsave
insb
ja
cmpsl
jns
dec
loop
jge
add
jmp
sbb
insb
mov
mov
dec
xchg
mov
lret
cmpsb
addr16
push
out
mov
jl
popa
and
push
movsb
inc
std
and
cmp
test
cmp
xchg
outsb
jmp
or
sbb
stos
xor
sbb
movsl
inc
jecxz
mov
hlt
or
and
or
aam
sahf
jcxz
mov
dec
pop
clc
lods
cmp
sub
loope
mov
jns
add
mov
or
jmp
or
dec
stos
mov
mov
mov
pusha
or
xorl
imul
or
popf
mov
ja
and
imul
pop
das
or
out
popf
xchg
cmc
ljmp
mov
clc
scas
int
cld
xor
bound
pop
int
mov
dec
add
unpcklps
inc
fs
outsb
icebp
sbb
into
imul
mov
sub
out
into
push
xchg
xchg
popf
jmp
add
pop
clc
cld
add
push
inc
dec
or
mov
cwtl
push
pop
cltd
fcmovnu
dec
fsubl
mov
add
jg
imul
xor
xor
inc
jp
rolb
inc
push
movsb
aas
xchg
jge
test
xor
push
sarb
test
pop
sbb
push
xor
jge
sbb
cwtl
int3
cmc
push
and
sub
push
xchg
sub
jae
mov
iret
mov
pop
and
test
push
fcoms
das
xchg
inc
shr
shr
aad
jl
adc
int
dec
fimuls
je
sub
and
push
repnz
xor
add
mov
sbb
push
adc
outsb
mov
dec
mov
pop
adc
test
xchg
idivl
dec
cs
lahf
mov
ja
xor
or
mov
mov
inc
adc
movsb
mov
or
jle
dec
in
inc
adc
pop
ficoms
jbe
mov
mov
add
mov
jns
jne
lret
cs
mov
add
mov
loope
ja
mov
mov
out
mov
xorb
leave
and
sub
ja
pop
add
subb
clc
dec
push
mov
sbb
xor
sbb
mov
jle
mov
loop
push
rorl
insb
add
inc
bound
outsb
out
mov
sub
enter
stc
cmpb
push
dec
sub
and
cmpsl
cli
sbb
xchg
xchg
cmc
repnz
fsincos
sarl
jnp
inc
ja
leave
cs
loopne
mov
sub
inc
push
mov
inc
jnp
add
add
or
cmpsb
lods
cmp
pop
je
inc
pop
mov
cli
lret
aas
jge
push
sub
mov
mov
pushf
cmc
jle
mov
xchg
jl
ds
les
stos
sarb
jno
into
xchg
mov
push
pop
push
out
jecxz
cmpsl
cmp
add
ss
xchg
sub
sub
sub
and
dec
add
mov
push
mov
sub
cmp
fs
or
mov
xor
mov
jne
fwait
dec
xorl
xchg
loop
out
or
in
push
push
cmp
xchg
addr16
test
lock
das
cs
jnp
xlat
pop
loopne
inc
mov
xchg
mov
dec
xchg
je
or
out
js
js
xlat
subb
lea
sti
xor
cmpsb
iret
or
cmp
sub
ret
cmp
xchg
shrl
mov
push
cltd
add
and
pop
clc
aas
jmp
fiaddl
sbb
test
mov
cmp
push
inc
loop
testl
in
xchg
mov
adc
insl
mov
fwait
lods
pop
xor
in
xchg
out
push
jb
push
pop
sti
push
mov
or
out
jp
jbe
xchg
and
jp
nop
lcall
and
mov
xlat
clc
out
xor
ltr
les
fstps
inc
lods
call
push
cmp
add
popa
mov
push
inc
mov
enter
scas
add
cmc
pop
outsb
sbb
lahf
push
paddsb
jae
fsubrl
out
xchg
mov
lods
loop
stos
dec
push
outsl
pop
fbstp
call
loope
inc
imul
push
aam
jmp
iret
cmp
adc
adc
arpl
das
jo
les
cmpsb
fwait
mov
inc
push
arpl
cmp
lea
insl
or
adc
jecxz
jns,pt
iret
push
lods
adc
inc
mov
mov
xor
insl
subb
adc
pop
jge
in
loopne
and
test
outsb
sbb
cli
xchg
shll
or
cmp
test
icebp
sti
mov
inc
inc
cmp
call
mov
fstl
jle
cmpsl
cmp
hlt
enter
mov
sbb
adc
and
or
xor
outsb
cmp
inc
mov
jl
xor
mov
sahf
push
fdivl
jne
jp
jne
jbe
or
adc
push
mov
aad
pop
out
ds
mov
cmp
push
movsb
pushf
cli
bound
ds
jo
sarb
sbb
lods
jmp
les
cmpsl
inc
in
fildll
inc
xor
mov
leave
add
lods
jge
add
inc
xchg
mov
test
into
mov
fistl
pop
lods
lret
mov
jnp
push
es
lods
jo
addr16
mov
sbb
push
stc
mov
into
repnz
clc
ljmp
sub
cmpsb
or
push
sub
popf
rorb
inc
aad
adc
enter
or
scas
aas
jbe
and
lret
iret
mov
mov
mov
fldt
popf
inc
mov
mov
in
cmp
out
je
mov
or
add
cltd
jecxz
or
xchg
in
lods
add
dec
mov
jne
jmp
call
cli
arpl
daa
fbld
mov
fisttpl
scas
jns
repz
dec
cmp
inc
insl
xchg
pop
aaa
std
adc
gs
push
xchg
inc
fistpll
sbb
call
loop
add
popa
lods
push
shlb
mov
push
call
sbb
call
ret
loop
xchg
and
test
sarb
cmc
ret
out
inc
inc
xor
das
cmpl
out
gs
paddw
lret
out
sub
div
or
sbb
test
push
pop
mov
cld
nop
fsts
ds
jb
sti
stos
inc
dec
xor
ret
sarl
filds
add
lea
sbb
enter
aam
pop
lods
aad
and
cmp
cmp
lods
out
mov
jae
mov
cli
sbb
jnp
pop
cmp
add
jo
jmp
jg
cltd
jle
fldl
lcall
xor
sub
pop
xchg
xchg
push
and
sbb
inc
ret
and
test
stc
leave
xor
outsb
or
mov
push
scas
out
leave
in
stc
lods
das
mov
repnz
rorl
lds
cli
icebp
push
lret
mov
lret
stos
push
push
pusha
add
jnp
test
push
push
push
xor
inc
and
pop
and
test
mov
dec
and
mov
lock
sar
adc
es
cs
mov
js
movsl
je
es
lret
lea
in
mov
jo
addr16
js
jne
push
in
imul
xor
insb
dec
clc
pop
test
rcrb
dec
shll
stos
mov
cmp
sub
bswap
xor
stc
push
mov
mov
in
fisubrl
dec
sub
std
adcl
rcll
mov
push
pushf
sub
aas
call
fsub
mov
je
add
push
sub
mov
mov
jo
scas
jp
addr16
daa
sub
data16
loope
outsb
sbb
test
repz
popa
icebp
xchg
das
adc
mov
jnp
and
push
dec
jb
xor
fistps
lret
fs
cmp
lods
and
push
imul
ret
sub
inc
jp
mov
push
jecxz
test
push
dec
out
jge
orl
push
jae
out
mov
clc
jmp
jmp
sbb
shll
fistpll
and
add
cmp
negb
pop
scas
fists
scas
decl
data16
pop
pop
pusha
hlt
les
lret
push
push
or
repnz
mov
aaa
pop
fcompl
insb
cmc
xchg
testb
aas
adc
in
popa
mov
and
xor
dec
pushf
imul
hlt
jbe
xchg
iret
xor
add
sarl
rcl
leave
les
xchg
fcmovu
adc
jp
jge
stos
mov
push
inc
mov
lret
in
push
xlat
mov
repnz
cmpsb
or
pushf
scas
add
cmp
cli
jb
mov
adc
push
or
dec
bound
mov
outsl
call
mov
sbb
rdmsr
sahf
in
imul
outsb
ftst
pop
adc
add
mov
sti
cmp
inc
or
insb
in
shll
pop
je
gs
pop
fists
les
stos
imul
roll
les
lret
out
adc
mov
cmc
lock
push
scas
movsb
inc
add
xchg
sub
inc
adc
sti
jg
mov
pop
xor
int3
inc
in
xor
mov
int
fistpl
cmp
cwtl
loop
xchg
leave
cmp
or
inc
pop
arpl
jae
sub
adc
cmp
inc
stc
xor
insl
mov
fcomp
jge
repnz
cltd
push
stos
inc
test
ror
and
xchg
ret
jbe
sub
sbb
jmp
imul
fimull
push
add
lods
sbb
push
dec
pop
cmpsl
mov
cmp
out
inc
xchg
xor
dec
add
popa
xchg
mov
lods
in
mov
adc
jg
fistl
jae
aam
ss
push
mov
cmpsl
mov
inc
mov
stc
std
adc
mov
mov
lcall
or
mov
jp
mov
inc
jnp
dec
stos
movsl
in
inc
push
repnz
mov
ret
xchg
cmp
mov
push
inc
js
pop
dec
cmp
jnp
test
and
dec
mov
ret
mov
lock
mov
icebp
pop
mov
jb
lods
or
pop
aas
add
sarb
int3
je
cmp
es
push
aam
adc
std
repz
cmc
clc
test
ret
xchg
jg
andb
xchg
out
aaa
call
mov
iret
mov
xor
or
fdivs
js
shl
xor
aas
jne
idiv
vpcmpgtd
shr
sub
mov
push
ss
int3
jle
icebp
mov
jnp
shl
hlt
pusha
xlat
or
pop
ljmp
jae
add
or
dec
je
pusha
push
xchg
adc
mov
or
mov
cmpl
pop
add
sub
inc
sub
mov
fisubrs
in
orb
push
lock
adc
inc
rorl
and
ljmp
cld
dec
andb
mov
test
adc
bound
lods
mov
clc
or
stos
xchg
sub
cmp
pop
inc
add
les
fcoml
add
shll
xor
mov
push
sbb
xchg
jge
mov
inc
and
daa
mov
pop
jl
call
dec
pop
pop
adc
test
int3
and
pop
and
adcl
call
mov
inc
mov
into
movsl
push
mov
hlt
mov
lret
dec
sbb
mov
test
data16
pop
int3
sub
ret
decl
sub
inc
mov
add
sbb
push
cmp
jo
bound
mov
in
fsts
cltd
mov
cmp
out
dec
cmc
xchg
mov
push
pusha
pop
mov
repnz
sarl
arpl
mov
inc
ss
std
dec
dec
jbe
or
adcb
inc
mov
and
mov
xchg
inc
fistpll
fdivs
dec
je
push
dec
dec
xlat
lret
push
in
mov
sarl
fs
out
insb
push
mov
imul
in
stc
jbe
insl
fbld
push
aam
sub
les
add
mov
insl
mov
adc
jge
ljmpw
mov
add
fnstcw
cs
shr
push
dec
cmpsl
pop
xorl
sub
push
sbb
xchg
sti
push
jo
push
dec
pushf
add
jecxz
adc
add
xlat
mov
imul
js
mov
cmp
lret
dec
ret
mov
hlt
mov
or
mov
xchg
push
in
push
or
pushl
or
sbb
fbld
xchg
clc
jle
adcb
aaa
add
xor
mov
enter
out
hlt
test
add
and
xchg
adc
inc
push
ljmp
dec
add
jge
sbb
add
jno
mov
sti
out
push
imul
subb
dec
xor
dec
loope
decb
xchg
sarl
ss
test
xchg
pusha
scas
or
xor
aaa
jbe
sub
adc
mov
cltd
mov
ljmp
lret
out
dec
pushf
clc
iret
repnz
dec
mov
cwtl
dec
jp
fwait
movsb
iret
push
xor
mov
xor
jp
out
out
pop
xchg
jae
push
out
jno
pop
fmuls
pop
cmpsb
push
ss
xchg
sahf
shrb
mov
pop
inc
inc
psraw
mov
aam
ss
mov
popa
inc
outsb
cmp
jno
rcl
or
rcll
das
xor
jnp
rclb
push
jmp
mov
add
js
pushf
insb
sbb
dec
sti
xchg
imulb
aad
mov
inc
in
xchg
mov
std
in
cmp
dec
inc
or
sbb
dec
push
push
dec
decb
push
insb
addb
cli
call
inc
dec
test
sahf
stc
ficomps
mov
mov
jo
stos
jmp
and
loope
dec
cltd
inc
sti
popf
sbb
add
addr16
adc
repnz
or
push
push
insb
cmpsb
shrb
and
mov
lods
add
cmc
pop
push
test
lods
les
pushf
in
ljmp
jo
enter
cwtl
add
insb
pop
jnp
and
pop
out
and
jae
add
mov
sbb
inc
lcall
pop
outsb
inc
sub
dec
scas
aad
sub
test
or
dec
cmp
das
mov
xchg
push
push
inc
test
adc
pop
into
inc
dec
lret
mov
icebp
dec
add
rol
and
and
iret
inc
adc
arpl
cltd
or
inc
xchg
jmp
sub
in
arpl
lds
lock
dec
inc
bound
aaa
add
jmp
and
xor
mov
jo
arpl
std
test
in
popl
xchg
sti
ret
icebp
cmp
test
push
push
adc
jp
out
sub
mov
cmpsl
inc
lahf
insl
pop
sub
pop
cmpsl
dec
pop
ljmp
add
pop
stc
pop
sti
push
jae
pop
or
sub
and
mov
push
pushf
call
lahf
cmpsb
ret
push
cmp
mov
loopne
iret
lock
iret
dec
pop
inc
insb
stos
pop
mov
xor
test
push
fsubrl
and
xchg
test
mov
or
or
pushf
xor
call
and
sub
outsb
hlt
shrb
jge
inc
jno
push
or
sahf
pop
mov
lahf
xor
inc
test
push
mov
cmpsl
cs
xor
cmc
mov
xchg
dec
adc
inc
push
lcall
sub
orb
xchg
mov
nop
sub
xchg
enter
pop
pop
xchg
mov
fstl
mov
add
sbb
pusha
sub
lds
mov
push
adc
dec
test
and
stc
and
jg
test
ret
cmp
adc
loopne
xor
das
mov
jg
xchg
inc
subb
leave
outsl
mov
xchg
arpl
mov
sbb
or
pushf
pop
sar
lds
jno
push
setle
int3
repnz
int3
adc
dec
enter
loop
push
add
cmpl
ficoms
dec
cmpsb
xorl
data16
nop
jge
mov
cmp
jb
mov
cld
into
inc
jg
or
push
je
cmp
dec
jnp
test
cmp
cltd
out
jo
repz
inc
inc
sti
push
cmp
jg
jg
cli
pop
jp
sub
mov
mov
xor
fstps
jnp
dec
imul
push
push
inc
les
loop
push
stc
mov
mov
int3
pusha
push
lods
mov
shl
movsl
mov
rclb
add
push
push
mov
inc
mov
xorl
into
ljmp
fildll
adc
popa
jo
mov
dec
shll
lret
inc
bound
inc
out
adc
add
pop
leave
inc
fsubrl
lods
adc
push
shlb
dec
sbb
adcl
pop
push
add
andb
fadd
jg
fildll
pop
inc
fidivs
aas
in
xchg
mov
inc
imull
pop
xor
mov
mov
adc
mov
jae
test
in
push
sub
xor
mov
fnstenv
rcl
repnz
scas
jns
loop
imul
imul
inc
or
andl
mov
es
jle
addr16
int3
loop
adcb
cli
lods
fwait
sbb
stc
dec
pushf
pop
mov
add
inc
jl
or
add
cmp
push
repz
js
or
leave
imul
sub
inc
arpl
jmp
pushf
imul
sbb
pop
or
fisubs
lcall
xchg
and
int3
adc
push
mov
dec
call
adc
aam
ljmp
push
xor
or
adc
insb
lahf
shrl
stos
and
mov
fimuls
cmp
adc
xor
mov
call
in
out
incl
scas
mov
out
sbb
dec
fistps
or
and
insl
jno
pop
and
mov
xor
repnz
pop
pop
repnz
fs
adc
rorl
dec
inc
scas
ja
iret
xchg
push
rol
push
aas
sbbl
sbb
notb
jo
jp
jbe
outsl
pop
mov
cli
mov
xchg
pushf
notl
inc
sbb
jp
mov
ja
bound
cli
out
mov
popf
adcl
or
add
loopne
dec
jg
add
addl
lret
sahf
lods
imul
int
or
sbb
sub
sbb
xchg
dec
aam
push
or
xchg
inc
jg
les
add
mov
sbb
daa
xor
adc
adc
pop
out
push
scas
push
sbb
sarb
lods
icebp
scas
int
jb
imul
inc
pop
jb
add
mov
pop
add
cmp
push
mov
nop
xor
ds
push
mov
push
pop
cmpsb
sub
clc
sub
ds
cmp
fucomi
mov
xor
enter
mov
in
sbb
subl
jmp
xor
scas
outsl
inc
inc
or
out
or
mov
mov
cmpsl
add
xchg
and
add
mov
movsb
ret
mov
jecxz
add
pop
out
pop
cmp
pop
imul
inc
mov
jo
ss
inc
and
in
mov
fsub
lods
negl
jmp
imul
outsb
xchg
outsl
into
jbe
xorl
add
cmpsl
mov
dec
mulb
xor
dec
dec
inc
test
dec
lcall
pusha
and
mov
test
cmpsl
lcall
leave
and
inc
outsb
or
pop
inc
jno
test
inc
mov
ja
and
pop
aaa
add
or
enter
ret
in
jge
cmc
into
mov
dec
dec
or
int3
push
xor
cmp
inc
dec
fs
and
mov
test
pop
push
cs
mov
jge
xor
push
cs
xor
and
sub
popa
rcl
jae
popa
xor
pop
jnp
or
fcoms
popf
inc
pop
push
adc
add
dec
daa
cmp
fildll
sub
jecxz
ds
lret
push
xor
mov
mov
and
pushf
ss
ret
jno
movsl
cwtl
scas
sub
in
push
pop
nop
mov
pop
aaa
repz
int3
sbb
imul
fsubr
mov
inc
or
push
xchg
pushf
test
cmp
out
mov
repz
mov
nop
fbld
or
lods
cld
and
je
ja
loopne
sub
dec
push
xchg
adc
aas
add
mov
adcb
or
xchg
xchg
pushf
mov
jge
or
iret
mov
sub
mov
mov
nop
aaa
lret
cmp
dec
movsb
mov
push
xchg
sub
jno
cmc
sbbl
jbe
ret
push
dec
xor
pop
in
imul
xor
and
nop
inc
dec
inc
sbb
pop
jmp
sub
mov
sub
or
or
sub
bound
rcrb
stc
mov
shll
sub
pop
cmp
add
test
nop
icebp
push
int3
jo
or
pop
fdivrs
cmp
jmp
sub
repnz
cmp
xchg
pusha
inc
adc
inc
pop
add
sub
les
roll
leave
cmc
mov
in
cmp
loopne
add
mov
enter
je
inc
in
inc
leave
jns
mov
roll
add
or
leave
xchg
hlt
cwtl
jb
test
repz
inc
ss
pop
and
pop
pop
add
jo
inc
adc
xlat
hlt
insb
outsl
mov
stos
pop
lods
std
mov
cmpb
push
and
mov
pop
std
sbbb
into
inc
sub
mov
push
outsl
test
jl
xchg
rorb
lcall
jl
in
sub
icebp
adc
sti
cmp
ja
cmpsl
mov
je
int
inc
mov
loopne
std
mov
les
and
out
mov
dec
in
xchg
xchg
stc
addr16
push
lods
jb
daa
stc
in
insl
gs
loopne
mov
mov
in
adc
mov
mov
cmc
rclb
sbb
les
imul
scas
leave
jnp
jbe
add
or
cmpsl
dec
sbb
out
jnp
adc
imul
lock
ja
sub
es
stos
xchg
mov
add
pop
jp
mov
cmp
jl
addr16
push
pop
adc
mov
inc
scas
cmpsb
inc
movsb
movsl
jmp
pop
or
ret
adc
into
ja
and
test
add
push
mov
iret
xor
loope
jns
flds
repz
fisttps
sbb
fbstp
cmp
loop
sbb
mov
fcoms
sub
mov
or
mov
ljmp
fs
cmpb
push
popf
outsb
push
sbb
jns
mov
test
out
inc
jo
sbb
xor
stos
dec
mov
lods
scas
dec
lds
push
xchg
enter
pop
dec
xor
les
mov
sbb
inc
and
xor
nop
nop
add
ret
sub
enter
shlb
xor
bound
sbb
cmp
icebp
shlb
loop
mov
pushf
push
adc
push
mov
cmp
roll
dec
cmpsl
adc
or
jo
in
adc
insb
push
dec
pop
mov
cmp
rorl
dec
xchg
pop
xor
fsubrp
fmull
pop
lret
lret
pusha
frstor
enter
push
dec
push
cli
aad
bound
xchg
push
aas
jne
jge
xor
test
xchg
jne
mov
sub
dec
popf
sub
nopl
loopne
push
inc
push
insl
lret
mov
test
push
sbb
mov
enter
or
outsb
or
rolb
fwait
dec
mov
popa
gs
mov
loopne
in
mov
in
cli
jne
in
jp
cmp
mov
leave
call
cmp
dec
movsb
jns
jbe
mov
cmp
mov
push
adc
ss
xor
daa
mov
in
cmpsb
nop
cs
push
loop
lea
imull
xchg
add
mul
jp
out
movsb
pop
inc
pop
or
sub
push
aad
mov
das
xor
inc
and
ret
mov
sbb
cmc
add
gs
je
mov
lcall
mov
fstl
ljmp
std
mov
lcall
dec
jno
jne
aaa
test
outsb
adc
cmp
pushf
pop
pop
add
shll
icebp
sub
imul
test
mov
push
leave
xorl
sbbb
sbb
sbb
cli
imul
xor
fwait
adc
adc
add
fnstsw
imul
lret
dec
inc
adc
adc
loope
xor
mov
pop
dec
jbe
jge
shrb
adc
test
mov
mov
or
insl
in
fildl
pop
push
mov
and
cmpsl
xor
mov
cmp
cwtl
cmp
and
pop
jae
stos
dec
or
cmc
sub
cmp
loopne
sub
leave
dec
sbb
shrb
fisubrl
mov
int
outsb
mov
or
mov
cmp
sub
mov
out
hlt
sub
nop
scas
sahf
shrb
jg
fsub
pop
jne
cmp
mov
mov
cltd
jae
popf
in
les
sbbb
xchg
jne
xor
jg
jmp
cs
cltd
sbb
pop
add
lret
xor
cmp
jge
xchg
cmp
loope
mov
insb
xchg
fcomps
mov
mov
aaa
or
dec
jb
add
lods
sub
sbb
push
lock
push
inc
addl
sbb
cmp
mov
xchg
lods
dec
adc
mov
mov
jae
sub
mov
push
inc
mov
dec
xchg
out
jmp
push
push
xor
setp
ret
cmpsl
stc
pop
xorl
xchg
mov
pop
cmp
in
xor
xchg
das
mov
inc
nop
push
mov
xor
jge
jne
add
xchg
jnp
in
and
cmp
xor
pop
hlt
jge
pop
in
jnp
fildl
cwtl
mul
jae
stc
mov
push
or
stos
sbbl
movsb
inc
xchg
in
in
and
mov
arpl
jg
mov
and
push
mov
cli
dec
pop
xchg
int
cmp
mov
mov
mov
xchg
lret
cld
cwtl
and
fidivl
test
aam
mov
push
jnp
cmp
and
xchg
adc
inc
cmp
adc
les
and
lahf
gs
cmp
xorb
and
pop
sbb
sbb
push
mov
test
jp
lods
xchg
and
sbb
lcall
das
mov
fstl
push
and
dec
pop
and
inc
gs
popf
sti
lret
mov
in
std
jge
or
mov
xor
or
inc
inc
and
out
xor
out
arpl
inc
adc
or
xchg
sbb
and
xor
dec
sbb
sbb
rorl
scas
adc
xchg
daa
pusha
mov
dec
push
sub
push
imul
int3
rol
cmp
int
mov
adc
bound
insl
lahf
cli
cmc
shrb
bound
push
fwait
aad
sub
lock
stc
bound
adc
pop
shr
hlt
movsb
and
fs
lret
cld
lods
int3
fiadds
pusha
cmp
mov
pushw
sub
cmp
add
fisttpl
sub
fs
stos
xor
cmp
popa
xor
lods
test
call
sub
adc
mov
in
fcomps
pop
lret
loop
fs
mov
sbb
push
mov
shrl
aas
sub
xchg
xchg
inc
jns
inc
sbb
ja
pop
call
pop
adc
sbb
adc
cli
mov
and
jns
out
mov
ljmp
mov
push
dec
jge
pop
jo
fists
cltd
test
je
fstpl
xor
push
sbb
idivl
es
xchg
add
call
nop
jno
xchg
fstp
lds
out
arpl
push
pop
js
sbb
insb
out
cli
out
aam
sub
jecxz
push
mov
clc
pop
sbbb
fmull
jo
ja
add
push
sub
mov
mov
inc
mov
nop
loop
int3
mov
notl
inc
das
xor
out
inc
sub
inc
sbb
jp
leave
ds
int3
pop
dec
sbb
jl
dec
pop
stos
sti
cvttps2pi
mov
mov
jae
or
jmp
addr16
adc
dec
std
pusha
sbb
sub
loopne
pop
pop
sti
or
aam
sbb
cwtl
lea
movb
dec
ja
adc
gs
outsb
repnz
cmp
dec
lea
pop
adcb
adc
dec
rcll
fiaddl
inc
inc
xor
mov
push
and
mov
sahf
sahf
xchg
dec
dec
pop
iret
rorb
mov
mov
sub
lahf
lods
outsb
incb
jp
roll
jno
outsl
sub
inc
mov
mov
dec
cmc
out
test
lahf
nop
adcb
xor
pop
fadd
aaa
xchg
in
sarb
cltd
inc
sahf
add
mov
nop
push
jge
xchg
pop
xchg
ror
jno
inc
dec
push
or
daa
pop
enter
js
popf
push
lea
stos
stos
push
jae
mov
pop
jp
lds
jg
movsb
je
roll
out
sub
xor
jns
std
mov
movsl
mov
add
mov
mov
int
push
lahf
lcall
lahf
mov
roll
lcall
or
cs
sub
outsb
mov
jle
movsl
test
ficoms
dec
arpl
aad
jp
pop
pop
mov
mov
fistl
sub
es
and
and
iret
mov
adc
arpl
mov
enter
dec
pop
mov
jno
dec
add
jmp
lock
push
fimuls
mov
jno
or
outsl
mov
push
cli
dec
or
fsubrs
sbb
and
cld
and
cmp
imul
jmp
or
ss
test
nop
xchg
in
xor
cmpsl
enter
jns
inc
xor
outsl
lret
insl
adc
into
cs
iret
cmp
test
popf
adc
lods
push
out
mov
push
add
scas
sub
imul
cld
xchg
bound
cld
mov
inc
sub
sub
out
cmp
sti
je,pn
mov
sbb
push
and
mov
rolb
sub
mov
mov
cmp
jg
inc
movsb
aaa
push
int3
outsb
ss
stos
inc
mov
add
add
xor
pushf
testb
xor
and
int3
in
sbb
insb
xor
loope
sbb
fadds
mov
adc
sub
xchg
jo
into
test
inc
cli
sub
int3
in
rcll
mov
gs
out
jbe
xlat
lods
inc
lret
imul
nop
daa
mov
sbb
in
inc
test
lods
sbb
data16
fldcw
repz
xchg
scas
cwtl
mov
in
sub
sbb
xlat
mov
sbb
shll
add
loop
jle
inc
inc
loop
aas
adc
mov
mov
sar
mov
shlb
lds
das
cltd
push
jp
test
lret
cwtl
stc
mov
adc
xchg
inc
testb
nop
adc
mov
imul
push
shrl
push
out
lods
sbb
mov
cmpsb
pop
fldt
cmc
sub
ret
adc
or
sub
mov
mov
add
jge
mov
xchg
cmp
or
ret
fs
lret
in
inc
fistpll
mov
push
shrb
mov
mov
cmpl
mov
aad
sub
stos
dec
push
cmp
mov
cld
popf
orb
call
dec
adc
push
out
add
ret
xor
inc
ret
adc
pusha
and
imul
fmull
call
sahf
in
cltd
pop
adc
pop
add
inc
rclb
jg
push
dec
dec
pusha
sub
dec
adc
cmp
push
ds
xor
and
sti
sbb
jmp
mov
insb
jp
xor
sub
idivl
scas
xor
sub
mov
ret
jmp
int3
mov
fs
sub
dec
xchg
idivb
fmuls
xchg
sub
gs
pop
push
jmp
cmpsb
rol
clc
clc
data16
jb
xchg
and
shr
sub
sub
mov
dec
dec
and
stc
js
push
nop
and
jl
dec
popf
aad
pusha
stos
mov
cmpsb
outsb
dec
sbb
jge
repz
int
dec
xchg
test
xchg
push
aam
aam
dec
sar
lea
dec
adc
push
dec
insb
fildl
lock
mov
or
rclb
cmp
cmp
mov
enter
xchg
pop
mov
adc
stos
mov
cltd
jge
daa
adc
cmpsb
sbb
inc
inc
jo
or
roll
or
iret
mov
xchg
inc
mov
pop
mov
fs
test
lcall
arpl
mov
jbe
jmp
mov
leave
dec
inc
repz
mov
mov
lds
pop
xor
push
cwtl
jmp
xor
add
into
push
xor
mov
fs
loop
mov
call
mov
out
imul
adc
into
push
cmp
ss
sub
ja
xor
addl
inc
adc
fstps
cmp
shld
or
xchg
fnstcw
or
and
aam
iret
cltd
or
add
loopne
push
das
fwait
cmp
test
sarb
xchg
push
xchg
inc
add
cs
inc
and
mov
jne
sub
mov
sub
or
or
or
add
fstpt
sub
cmp
jecxz
mov
and
push
das
cld
in
pop
popf
adc
fiaddl
and
dec
test
jp
and
jb
test
adc
push
lret
imul
testl
call
mov
fs
pushf
test
mov
es
dec
popf
testb
push
lret
icebp
adc
out
mov
pop
push
or
test
test
stos
loope
iret
es
jle
push
xchg
jecxz
and
imul
dec
repz
mov
cmp
sahf
sub
mov
xchg
es
out
adc
dec
inc
shlb
adc
mov
aad
int
jns
jnp
call
push
push
mov
stc
test
test
enter
mov
jns
rcrb
push
ret
orl
pop
stos
mov
cmp
mov
push
test
or
out
test
sub
lret
cltd
cmp
imul
jns
mov
cmp
mov
jo
mov
shr
jne
fsubs
test
jmp
pop
xchg
lret
jl
add
stos
add
or
call
jnp
or
stos
pop
loopnew
out
xchg
mov
jge
add
in
gs
lret
and
call
aad
stos
pop
sub
popa
ficompl
adc
xlat
mov
inc
pop
adc
jge
std
out
xchg
fists
ds
out
jnp
and
sub
movsb
popf
setns
sbb
push
mov
and
in
xor
xor
xlat
or
mov
icebp
fwait
sub
or
mov
pusha
mov
inc
lcall
xchg
pop
das
test
or
call
rcll
push
xchg
jo
adc
xor
lretw
andl
sbb
jl
enter
pop
inc
cmpsl
jo
pop
lods
jmp
cmp
sub
into
movsb
vpmacssdqh
and
rcrb
in
fiadds
sub
imul
and
add
push
sub
test
add
aad
cmovns
xor
adc
fadd
popa
dec
mov
ficoms
lock
mov
sbb
test
cwtl
sbb
dec
push
adc
movsl
test
mov
scas
je
push
lret
lock
mov
jl
roll
mov
or
cmp
adc
cli
pusha
out
negl
addr16
jp
or
into
or
and
loop
fcmovbe
pop
fists
arpl
jp
sub
lock
fldl
inc
inc
cmpsl
popf
loope
mov
bound
andb
test
out
cmpsl
lock
pop
and
and
or
mov
xchg
pop
movsb
sahf
sahf
call
dec
xlat
jmp
and
fsts
xchg
lahf
nop
in
cltd
adc
orb
fistpl
es
xor
pop
mov
sbb
roll
pop
adc
adcb
adc
adc
push
sub
ljmp
hlt
mov
inc
mov
ret
jmp
mov
sbb
sbb
idivl
mov
push
testb
jp
inc
daa
add
cltd
int3
clc
in
lods
mov
pop
cmp
mov
stos
xchg
sbb
xchg
xor
andl
mov
dec
or
xor
mov
add
roll
ficoms
inc
pop
adc
cmp
or
test
adc
inc
mov
and
std
in
mov
mov
dec
cltd
int3
sub
repz
pop
and
shrl
xor
imul
lods
gs
repz
sbb
xchg
mov
sbb
jge
add
dec
inc
or
mov
and
pop
dec
addr16
insb
or
sub
add
sbb
lds
adc
inc
movsl
fnstcw
ror
mov
out
mov
mov
popa
loope
push
mov
add
xor
xchg
inc
aad
stc
lret
push
pop
pop
sbb
push
pop
mov
arpl
xlat
jns
cs
inc
pop
mov
push
cmp
push
idivl
cmp
xchg
mov
ret
fucomi
mov
nop
bound
mov
xchg
add
dec
adc
pop
xor
jmp
mov
test
test
and
fwait
popa
clc
inc
and
lock
mulw
fisttpl
in
add
gs
xchg
xor
pop
ss
js
stos
shr
lods
test
sub
jge
mov
ljmp
test
sahf
outsl
test
jns
mov
sti
add
mov
fimuls
leave
or
dec
ficomps
das
lret
ja
lcall
adc
jg
xor
das
das
daa
subl
or
or
mov
push
subb
dec
aaa
dec
sub
in
mov
fisubrl
out
xchg
and
mov
sub
and
lcall
mov
sbb
or
add
add
sti
and
pop
push
xchg
mov
push
pop
or
add
mov
adc
dec
adc
cli
or
add
cs
add
and
xchg
mov
mov
movsl
adc
call
jns
hlt
push
cmc
popf
fwait
jae
dec
push
cmp
push
xchg
stc
sub
adc
xchg
adc
insl
mov
xorb
sub
out
add
pop
jns
adc
jne
jbe
inc
cmp
push
inc
or
ss
xchg
sbb
imul
ds
lea
mov
xchg
call
cli
stos
addr16
ja
bound
mov
out
add
cmp
mov
cmp
cmp
xchg
adc
xor
dec
repz
lods
std
scas
int
mov
lods
jno
xchg
xor
jno
add
stos
adc
gs
xchg
cmp
cmp
mov
pop
notb
clc
inc
lods
sub
sub
xor
cmp
dec
incl
mov
cmc
cli
push
and
cmp
mov
jmp
repz
mov
aaa
fildl
adc
je
xchg
cmp
addr16
mov
jno
jmp
cmpsb
outsb
lahf
rolb
mov
jo
cmc
mov
jb
loop
and
pop
jp
inc
or
les
out
call
dec
lahf
pop
add
cmp
bound
mov
mov
sbb
adc
insb
les
test
stos
roll
icebp
cmovns
notl
xchg
pop
es
pop
int3
jnp
pop
test
sbb
jecxz
test
nop
lock
or
push
mov
add
movsl
in
test
imull
test
add
lcall
in
adc
push
ja
lahf
mov
scas
jle
iret
cmp
inc
sub
xor
jge
movsl
xor
xor
ljmp
test
push
xchg
in
fisttpl
jbe
sub
pop
adc
ljmp
dec
movsb
lods
jbe
adc
rorl
cmp
push
cld
mov
push
sub
add
clc
cwtl
jo
jl
inc
clc
push
scas
mov
insb
call
aad
or
jp
dec
sbb
add
jno
call
jecxz
mov
cmpsl
push
or
and
nop
sub
push
push
mov
jmp
test
add
test
or
push
movsl
or
gs
fmulp
std
pop
loopne
xor
adc
adc
call
sbb
add
xchg
pusha
mov
mov
dec
cs
stos
imul
sub
inc
adc
mov
out
adc
mov
sbb
xchg
add
pop
add
cmp
push
jecxz
dec
cld
mull
shll
inc
out
stc
xor
outsb
mov
xor
outsl
push
fcom
fnstsw
mov
movsb
inc
rol
rcrb
xlat
into
cli
xor
xchg
ret
stos
xchg
imul
and
xor
dec
and
jecxz
test
or
pop
test
mov
jg
aas
push
dec
std
pop
or
mov
iret
inc
adc
popa
or
testl
hlt
into
shll
subb
pop
in
sbbb
iret
cmp
push
dec
inc
cmpl
push
mov
sbb
cmp
xchg
and
dec
out
adc
add
ljmp
repz
scas
loop
dec
dec
mov
push
pop
std
pushl
or
adc
fcomps
mov
leave
loope
cmp
in
ss
jns
inc
cmp
inc
outsl
into
cld
lret
jbe
mov
push
rol
pushf
movsb
and
cmpsl
scas
pop
ret
out
stc
nop
push
push
push
es
jbe
cmp
test
mov
lret
cmp
fcmovb
ljmp
and
lret
or
xor
je
repz
repz
outsl
out
movsl
mov
push
mov
sbb
xchg
cmp
or
inc
js
mov
cmp
and
imul
in
les
lahf
outsl
sbb
filds
adc
cs
mov
movsb
xor
mov
repz
roll
cs
push
dec
out
adc
add
inc
cmp
dec
add
mov
xchg
out
cli
sub
push
aas
jbe
mov
adc
add
mov
sbb
leave
out
xor
rcl
jb
scas
lcall
xchg
loopne
in
jle
mov
pop
repz
ss
leave
jns
fnstcw
dec
push
pop
adc
stc
pop
int3
fstpt
sub
bound
sbb
add
ret
xchg
xchg
nop
mov
sub
sub
jle
jp
cmp
enter
addr16
or
jg
aad
inc
cmpsl
int3
pop
clc
roll
jae
xor
pop
push
mov
push
adc
dec
out
sub
pop
mov
or
ljmp
dec
lret
lret
test
push
add
xchg
fidivrs
vunpcklpd
push
xchg
mov
or
popf
cmc
xorl
pop
movsb
sub
lcall
xchg
loop
push
adc
cmp
out
rorb
xchg
pop
pop
mov
pop
sti
addr16
xor
xor
addr16
scas
mov
movsl
clc
push
xchg
sbb
inc
imul
call
xchg
pop
cmpsb
loopne
mov
xor
mov
movb
adc
mov
pushf
mov
loope
inc
movsb
xor
cmp
inc
test
stc
in
add
inc
scas
xchg
orl
mov
fldenv
fwait
adc
mov
sbb
movb
xlat
mov
call
inc
inc
cli
pop
cmpsl
int
jecxz
sbb
cmp
jl
cld
inc
push
js
xchg
inc
sub
and
clc
fcmovb
sbbb
mov
rorb
xchg
sbb
jmp
and
xor
pushf
mov
push
cmp
lret
jmp
sbb
mov
adc
push
into
aaa
mov
sub
mov
cmp
xlat
pop
dec
arpl
jle
shlb
mov
lds
mov
inc
test
subl
fs
pop
pop
lods
sbb
es
int3
rcrb
fwait
jg
inc
je
sub
mov
xchg
add
inc
dec
add
nop
call
addr16
cmp
arpl
or
pop
xchg
pop
stos
mov
push
frstor
pop
int3
jl
xchg
pop
js
bound
mov
cs
aaa
push
cwtl
mov
shrl
stos
and
or
icebp
jl
fdivrl
mov
mov
sub
push
out
xchg
xchg
divl
mov
sahf
jb
push
add
jbe
dec
push
mov
jnp
jb
daa
call
sub
fildll
sub
stc
loopne
data16
arpl
xor
mov
xor
scas
inc
add
jp
push
pusha
loop
jmp
and
xchg
test
in
mov
out
inc
jg
pop
jne
inc
jg
and
fisubs
repnz
mov
pop
pop
adc
push
push
cmp
fisubs
lods
fisttpll
pop
aaa
mov
sbb
sbbl
gs
imul
pop
mov
in
push
addb
aad
cli
dec
pop
stos
mov
and
push
mov
pop
cli
xor
arpl
jl
aam
test
and
adc
dec
rcrb
jno
or
sbb
push
xor
inc
cli
dec
cld
cmpsb
xor
popa
leave
xor
pop
ud2
fistps
jns
pop
ljmp
mov
jl
jns
ror
mov
dec
xor
add
or
adc
xor
jb
mov
jnp
shl
outsb
jge
dec
adc
cmpsl
int
stos
xchg
mov
mov
clc
outsl
ds
arpl
jnp
test
cmp
jo
mov
adc
test
insl
and
popf
sub
adc
pop
out
push
lea
xor
mov
mov
jnp
dec
aas
test
xchg
les
pop
push
add
xlat
xor
aam
setne
add
rolb
shll
out
sub
iret
mov
and
adc
lahf
mov
jl
jo
leave
pop
fildll
mov
nop
fwait
push
divl
test
test
aas
testl
cmp
push
fisubs
or
add
lock
in
pop
daa
sbb
and
pusha
js
test
cmp
xor
mov
cmp
xchg
pop
xor
fcompl
pop
rorb
adc
add
add
jne
arpl
jne
sbb
in
sub
cmp
xchg
lcall
icebp
jne
xchg
push
push
jmp
hlt
pop
scas
cwtl
mov
fiaddl
cmp
and
int3
out
sahf
and
into
push
push
xchg
test
movsd
push
add
leave
imul
fsubp
mov
lcall
cmc
out
pop
mov
rcrb
inc
dec
mov
or
inc
lsl
lcall
sahf
add
xor
dec
mov
xchg
inc
repz
int
and
sub
lea
mov
or
ja
mov
call
mov
pop
sbb
aas
xchg
pop
js
jg
shll
idiv
xchg
push
add
mull
bound
mull
dec
sub
push
inc
out
movsb
add
or
cmpsb
adc
sbb
pop
cli
out
ss
mov
inc
mov
pop
add
fcompl
stos
loopne
sub
xchg
imul
add
mov
or
sbb
jl
sahf
mov
inc
push
adc
mov
mov
cmpsb
hlt
jno
test
test
adc
bound
or
fcompl
mov
movsl
mov
loope
sub
push
add
push
inc
sbb
sbb
movsb
shrd
inc
aad
mov
lock
adc
sbb
mov
add
xlat
cmp
mov
jne
test
movsl
push
mov
inc
test
add
jb
sub
xchg
fstps
insb
jg
and
into
test
dec
xchg
int3
sbb
pop
or
pop
stos
repnz
in
cltd
mov
loop
or
movsl
loope
adc
mov
cmp
pop
test
adc
aad
pop
pop
pop
dec
mov
jae
mov
icebp
xchg
movsl
mov
push
mov
int3
mov
mov
insb
ret
cld
mov
push
pushl
sahf
rorb
xor
xchg
andl
push
insb
mov
mov
jmp
ja
xor
pop
repnz
out
or
push
mov
inc
inc
int3
and
push
popa
xor
xor
stc
adc
les
scas
test
pop
ror
adc
adc
outsb
je
sbb
pop
mov
mov
loopew
pop
add
aaa
sbb
pop
add
push
ljmp
sub
pop
inc
iret
mov
fcom
pop
sub
icebp
and
dec
mov
fisubl
add
jmp
sti
enter
lcall
stos
jnp
mov
sbbb
nop
addl
dec
adc
outsb
mov
dec
mov
aas
inc
out
pop
es
dec
mov
movsl
mov
mov
jl
xchg
in
rorb
ret
push
mov
mov
cmp
sbb
xchg
mov
mov
and
js
into
repnz
sub
hlt
out
imul
das
aas
jae
cmp
loopne
lahf
inc
test
in
mov
cs
push
mov
push
andl
repnz
mov
popa
decl
enter
mov
test
stc
lea
sub
or
mov
test
adc
jns,pt
rclb
or
cmp
fbstp
xchg
fwait
xor
mov
mov
ret
ss
inc
mov
stos
lret
aaa
int
icebp
sbb
aaa
fldenv
test
jns
je,pn
add
push
es
leave
pop
sbb
pop
out
push
popa
sbb
enter
xchg
shlb
jg
cmp
aaa
repnz
icebp
dec
sub
sub
cmp
cwtl
imul
xchg
mov
add
sbb
fdivs
pop
sub
mov
cld
add
inc
repz
lret
outsb
dec
mov
or
das
dec
jns
and
inc
out
test
test
out
lea
sbb
jmp
pop
ja
inc
or
push
and
mov
adc
push
rep
sub
mov
nop
popa
popa
pop
sub
pop
mov
adc
mov
push
xor
fidivrl
into
dec
mov
outsb
jl
insb
jmp
jo
call
xchg
or
lods
in
bnd
mov
push
and
push
xor
dec
cmp
aas
popf
add
out
cmp
popf
subb
loope
ljmp
in
stos
xchg
es
add
xchg
add
jae
loope
mov
cli
les
lcall
sbb
testl
cmp
lea
dec
sbb
test
sbb
inc
insl
lds
mov
das
cmp
testb
mov
loope
push
pop
inc
sub
in
sbb
inc
in
lds
insb
or
mov
mov
insl
xchg
cmpsb
push
into
ret
insl
gs
add
loopne
mov
mov
cs
cltd
fistps
and
fldl
out
ret
in
mov
push
shlb
loope
cwtl
std
cmp
fldcw
inc
lea
xchg
in
fildl
rcr
scas
sbb
mov
pop
push
add
push
ficoms
cwtl
inc
hlt
xlat
pushf
sub
lret
nop
inc
pop
rclb
cmp
test
cld
test
cmp
xchg
add
scas
cwtl
ret
hlt
sub
stos
ret
or
rcrl
std
jbe
inc
push
mov
ret
scas
shrl
or
inc
mov
outsb
sar
scas
or
dec
sub
out
or
mov
cmp
sub
and
mov
inc
push
push
cmpsb
arpl
jecxz
jle
sub
jl
roll
cmp
push
xchg
andl
mov
addl
mov
loop
inc
in
nop
bound
xchg
cld
jge,pn
subl
imul
xchg
fs
xchg
lods
push
adc
xchg
inc
in
sub
cmp
xchg
xrelease
cmpsb
rolb
stos
je
arpl
xchg
cmpsb
xlat
mov
arpl
mov
jo
pop
mov
in
mov
popf
dec
stc
popa
aas
test
add
xor
pusha
xor
dec
push
frstors
lret
sbb
jns
sub
out
push
inc
mov
jle
inc
ss
daa
mov
enter
rcll
mov
icebp
movsb
jg
push
or
push
sbb
xchg
pop
push
sbb
les
aaa
cmpsl
mov
addr16
cmp
mov
jecxz
or
sub
scas
pushf
mov
pop
or
mov
dec
xchg
jo
sbb
int3
enter
mov
mov
adc
add
pop
or
push
sbb
sbb
pop
es
imul
hlt
cmpsl
jle
hlt
sub
test
mul
mov
jnp,pn
sub
icebp
addb
xchg
pop
mov
adc
push
sti
xchg
loopne
jle
out
scas
and
test
xorl
pop
ror
lock
test
int
jbe
push
inc
sub
inc
mov
movsb
adc
xchg
jbe
inc
jp
or
popa
cmpsb
add
pop
imul
ds
sbb
testb
iret
arpl
jo
and
jl
mov
lock
rol
cmp
pop
xchg
mov
imul
sbb
and
gs
insl
stos
enter
push
call
mov
xor
popf
hlt
inc
outsb
rcr
repnz
lret
lcall
scas
ret
lea
or
out
pop
jnp
xchg
jb
loopne
mov
pop
lahf
add
jg
ss
sahf
inc
jns
jl
repz
inc
dec
adc
xchg
cltd
out
sub
lds
sti
sub
adc
push
fimuls
cmpsl
push
mov
push
ja
sbb
sub
leave
rcrb
insb
pop
mov
and
xchg
dec
push
cli
aaa
mov
cmpsl
adcl
push
and
xchg
ficomps
jecxz
ret
adc
xlat
push
pusha
popf
jo
push
and
ret
das
push
or
mov
mov
xchg
pop
lods
mov
xlat
or
adc
xchg
sub
push
es
jae
inc
out
xchg
mov
test
cmc
mov
leave
stos
ret
mov
sbbb
adc
out
aas
repnz
lret
mov
fadds
ljmp
jbe
mov
dec
aam
push
pop
inc
push
xor
pop
push
pusha
movsl
call
cwtl
ds
push
mov
insb
addl
add
jl
ja
xchg
and
push
imul
out
dec
mov
rcr
sbb
scas
movsb
mov
bound
mov
or
ret
shlb
jbe
daa
or
test
jnp
stos
push
insb
sub
and
xchg
adc
loop
sbb
ret
push
movsl
or
push
mov
imul
xchg
orl
dec
push
sub
out
mov
fildll
xor
loope
cwtl
xchg
lcall
imul
test
jge
add
dec
add
xor
adc
iret
test
pushl
xchg
out
loopne
and
adc
xor
in
pushf
cmc
jg
jmp
insb
test
mov
jnp
out
mov
push
and
mov
pop
ss
mov
push
dec
popa
jns
xchg
fs
fdivrs
xchg
in
cs
dec
mov
cmp
pop
mov
adc
fnsave
jecxz
pusha
sub
push
icebp
fiaddl
pushf
outsl
pop
test
enter
adc
repz
pop
bound
cwtl
xlat
lcall
dec
inc
out
sahf
xchg
repnz
scas
mov
popf
lret
cli
inc
and
cltd
ficoml
lock
sbb
popa
xor
lds
sub
push
negl
dec
repz
out
movsb
push
jae
sub
push
jne
popf
dec
lret
inc
fsubp
pusha
aas
push
nop
nop
push
shlb
aaa
sub
or
jg
int3
jb
outsl
jmp
movsl
out
js
nopl
loopne
xchg
jnp
call
adc
pop
movsl
enter
and
pusha
jg
sbbl
mov
insb
insb
mov
lods
sahf
add
sbb
xchg
inc
ret
mov
push
lds
movsb
mov
jg
lcall
in
inc
stc
frstor
push
pop
adc
test
jle
les
cltd
push
ficompl
and
inc
fcompl
fistps
mov
lock
xor
xchg
cmp
sbb
dec
out
push
pop
insb
rolb
daa
inc
pop
inc
adc
cmpsb
pop
and
lret
test
add
into
add
push
dec
or
gs
mov
push
push
xor
or
jb
xchg
idivl
leave
adc
rol
cmc
pop
or
out
pop
sub
cmp
lea
je
popf
sbb
sub
clc
subb
lahf
mov
jo
loopne
push
fdivrp
lods
shll
jl
mov
inc
ficompl
scas
jge
jnp
inc
push
lcall
rorl
div
push
test
and
add
das
push
sbb
add
cmpsb
cli
jo
lahf
loop
adc
cmp
mov
movsb
mov
jl
scas
mov
pop
lret
sarb
adc
sahf
xor
movsb
arpl
movsl
jmp
loopne
push
or
testb
aaa
sbb
push
ficoml
cld
sbb
sub
xchg
sub
sbbb
sbb
cwtl
hlt
scas
in
mull
and
pushf
hlt
adc
sub
aaa
inc
sub
aad
nop
out
jmp
sub
pop
xchg
xchg
xchg
sub
xorb
pop
lock
pop
push
xchg
ds
hlt
scas
mov
push
or
inc
out
push
shl
push
inc
mov
fldt
mov
and
sahf
shlb
mov
aaa
mov
xor
jp
roll
sub
cmp
jb
jge
and
mov
in
fdivrp
jg
shl
xor
icebp
xchg
and
mov
mov
test
lret
loop
sahf
push
aas
xor
pop
mov
sub
mov
or
out
pop
fwait
mov
shll
or
xor
in
fimuls
dec
arpl
pop
repnz
push
stc
loopne
push
dec
in
out
test
adc
mov
mov
xor
pop
outsl
cld
icebp
xchg
mov
je
mov
fisttpll
cltd
jnp
subb
lods
xor
outsl
and
outsl
lea
and
pop
and
mov
inc
sub
aad
pop
hlt
rorl
stos
mov
pushf
inc
mov
sub
cld
je
xchg
lds
lds
scas
into
mov
orb
aas
test
lret
xor
add
aad
jg
xorb
dec
imull
addr16
push
fstps
outsl
and
fwait
push
jnp
push
outsb
inc
mov
cmc
inc
jns
jge
in
imul
xchg
test
inc
rclb
and
inc
push
cs
data16
mov
imul
sbb
adcl
icebp
fidivl
jns
or
add
adc
mov
fnstcw
jmp
push
dec
and
pop
dec
xchg
xchg
std
daa
shll
pop
leave
lret
push
loop
add
maskmovq
testl
lods
das
cmpb
add
pop
dec
push
fisubs
sub
sbb
cmpsl
jle
flds
and
iret
sub
cmc
xlat
loope
leave
inc
inc
mov
fidivrs
mov
mov
pand
adc
in
mov
push
mov
push
sbb
mov
xchg
mulb
adc
inc
pop
lcall
ficomps
cs
cmp
add
sbb
mov
lods
or
push
mov
sub
or
jo
mov
je
bound
and
lcall
gs
xchg
ret
les
xor
dec
sbb
push
insb
cs
sbbb
leave
and
cmp
xchg
fists
jb
stos
adc
orl
add
mov
sub
mov
push
shlb
sub
lock
xchg
es
mov
aaa
nop
mov
and
outsl
mov
pop
stos
insl
jecxz
rcrl
push
xor
lods
sub
mov
pushf
add
aad
inc
mov
push
push
jg
jns
xor
imul
adc
jl
cli
cmpsl
xchg
addr16
xchg
lahf
jo
cmpsb
push
aad
repz
jge
mull
add
ucomiss
sub
push
movsl
lahf
push
mulb
sbb
clc
int3
negl
add
and
push
movsb
hlt
pop
cmp
and
movsb
dec
jl
cmp
ret
cmp
and
sub
mov
dec
outsl
dec
or
jecxz
inc
fdivs
movsb
mov
sbb
mov
pop
fldenv
out
inc
cltd
sub
add
test
mov
cltd
sti
int
mov
or
push
pop
cli
push
mov
sub
mov
jmp
mov
mov
clc
push
cmpsb
enter
pop
mov
psrlq
jbe
cmp
push
lods
in
and
xor
enter
adc
imul
dec
hlt
add
cmc
daa
call
dec
adc
jno
ret
dec
xor
xchg
cmp
xor
imul
xchg
in
test
push
pop
dec
notb
lret
sbb
cwtl
imull
scas
in
add
es
dec
ljmp
and
or
cmpsl
fimull
loopne
cmp
pop
xlat
sub
iret
jg
js
test
pusha
xorb
sub
pop
jg
jbe
fsub
out
lahf
mov
loop
ja
add
test
fists
add
stc
movsb
sbb
mov
cmp
cli
push
and
or
rcll
add
fcom
ret
dec
lods
mov
push
sub
and
sub
lods
insb
adcb
and
jb
dec
stos
in
push
ret
jae
lret
and
loope
xchg
xor
mov
in
sarl
negb
inc
push
push
pop
into
mov
or
or
adcl
out
stos
sbb
aas
adc
nop
dec
fidivl
cs
xor
jnp
cwtl
repnz
xorl
int
dec
pop
int3
loopne
push
fstl
cmp
mov
pop
nop
sub
out
dec
int
inc
or
addl
out
rcrl
push
push
mov
fsts
lahf
aad
ret
mov
loopne
test
loopne
push
xchg
cmpsb
fmul
imul
inc
xor
js
sub
shll
xlat
loop
xlat
gs
hlt
jne
adc
lock
cmp
nop
outsb
out
mov
roll
test
or
pop
cmp
and
jb
subb
cld
pop
fstl
sub
xchg
popa
les
fisubrl
jp
mov
mov
cmp
loop
dec
ret
push
into
mov
fmuls
push
xlat
int3
movsb
rcrb
imul
mov
xlat
jbe
mov
sbb
popa
cltd
cmp
push
add
and
jl
or
rorl
fwait
cmp
ret
fisttps
rolb
and
pop
lds
nop
cmp
add
inc
mov
lret
sub
daa
lock
dec
rorb
xchg
mov
loop
popa
jb
data16
sbb
add
out
je
inc
stos
mov
xchg
das
cmp
mov
jecxz
int3
mov
push
sub
lds
pop
and
jb
pop
aad
cwtl
add
jae
push
mov
fiadds
mov
lea
xchg
frstor
bound
jmp
shlb
push
inc
xor
push
xchg
push
xchg
dec
lock
mov
mov
sub
adc
xchg
ja
int3
ss
lahf
mov
jne
stos
inc
popa
adc
jo
fbld
and
cmp
sbb
fwait
adc
call
add
sub
out
mov
mov
cli
aad
mov
push
mov
cmp
sub
rorb
ljmp
xchg
mov
dec
pop
ja
lret
cwtl
call
daa
or
js
jmp
cwtl
push
lcall
jmp
adc
mov
loope
xlat
sbb
add
dec
divb
jle
or
dec
pop
aam
test
out
rcll
pop
rcl
rorb
mov
les
or
add
pushf
fcom
mov
jge
inc
adc
or
or
pop
xchg
in
push
pop
fst
jb
pop
in
mov
sti
in
insl
jno
movl
test
negl
push
inc
movsl
and
out
scas
mov
pop
sub
add
fadds
add
mov
dec
insb
xchg
sti
mov
icebp
lcall
movsl
push
stos
stc
rorl
jnp
in
imul
xor
jecxz
stc
mov
and
sarl
jecxz
dec
fsubl
xor
jno
mov
push
jbe
xchg
mov
shll
xor
insb
lret
sub
pop
js
xor
ss
jbe
fwait
data16
and
jo
inc
data16
push
xchg
clc
inc
movsl
sub
mov
add
push
mov
add
rcrl
sub
test
out
inc
cmc
sbb
dec
icebp
pop
fsubrs
push
aas
jbe
cs
js
cli
pop
ficoms
imul
out
aas
pop
inc
mov
test
std
fmull
xchg
lahf
inc
push
sbb
clc
mov
pop
or
and
fstpt
sub
mov
mov
xor
pop
add
fcomps
iret
push
xor
cltd
xchg
ds
push
inc
jmp
loopne
dec
mov
push
sbbb
pusha
shrb
pop
adc
inc
icebp
cmpb
pop
not
push
cmp
mov
sti
mov
push
movl
stc
inc
das
or
xlat
out
mov
sub
fisttps
or
and
scas
mov
mov
shll
jne
jnp
gs
pop
fnsave
xor
out
cld
push
mov
push
mov
andb
in
andl
jecxz
push
pop
and
dec
dec
ficoms
daa
push
xor
std
ret
xchg
lret
or
jge
jnp
arpl
adc
imul
mov
and
rorb
mov
insl
shlb
in
fnsave
repz
push
sbb
ss
mov
mov
lods
jae
aam
pop
xchg
and
mov
jo
frstor
lret
in
dec
mov
inc
out
fsts
xchg
xchg
repz
fsubp
mov
push
adc
pop
or
shr
outsl
jne
scas
loopne
test
ret
mov
cmp
and
ds
cmpsl
mov
mov
aad
pop
or
fisubrs
push
adc
imul
push
cmp
mov
push
mov
iret
pop
int3
add
dec
sbb
sub
dec
xchg
inc
dec
cmp
dec
pop
mov
xor
leave
movl
jmp
or
xor
daa
cs
mov
jbe
cmpsl
or
mov
int3
sbb
cmp
cld
jmp
lock
mov
jmp
test
jg
jmp
adc
add
pushf
fisttpl
jecxz
orb
rclb
sub
imul
arpl
push
jg
xlat
xor
xlat
xchg
adc
or
insl
lret
popf
push
insl
insl
inc
push
xor
mov
dec
popl
scas
adc
test
ret
cmp
ss
mov
es
cs
push
cmp
rorl
decb
addr16
adc
lret
pop
pop
outsb
cmpsl
xchg
std
orb
rcrb
sbbl
gs
stc
iret
test
mov
les
sbb
dec
sahf
aas
cmp
xor
push
jecxz
pop
imul
ror
lret
mov
mov
jge
orl
inc
ss
lcall
loop
inc
inc
mov
mov
loopne
dec
fidivrl
aas
adc
in
imul
int
ret
inc
std
iret
out
sbb
imul
leave
push
xor
jns
into
push
add
fnsave
pop
out
repz
popa
imul
adc
jb
out
sbb
sbb
in
jl
aam
and
aad
fwait
jmp
xor
mov
test
cwtl
loopne
dec
fnstsw
mov
test
mov
sbb
ja
mov
aad
mov
xchg
int
push
add
jns
hlt
aad
subl
test
cwtl
add
lea
sbb
aaa
jmp
fnstsw
cmpsl
mov
in
mov
out
cmp
push
xlat
xor
iret
mov
roll
pop
pop
push
rorl
test
cmp
fbld
pop
adc
inc
mov
ret
stos
xchg
ret
pop
pop
fimuls
or
xchg
xor
sahf
cmp
adc
iret
ljmp
xchg
jge
mov
push
dec
sahf
jno
out
shl
testl
stos
repnz
repz
pop
push
adc
mov
rcl
cs
jne
sar
icebp
rorb
dec
and
ror
hlt
mov
cltd
insb
pop
cmpb
cmp
xor
int
jl
mov
mov
movsl
xor
xchg
ja
push
pop
fimull
sub
mov
lods
jge
and
or
jnp
pop
mov
pop
out
sbb
add
aaa
gs
pop
pop
adc
xor
cmp
adc
mov
std
jns,pt
je
add
jnp
lret
out
lea
pop
mov
cmpsb
xchg
gs
clc
sbb
dec
test
andb
outsb
out
jbe
mov
or
std
dec
cmp
popa
repz
imul
lods
repz
das
and
outsl
jnp
fcmovu
inc
pop
andl
inc
stc
loopne
xchg
pop
adc
outsb
popa
xchg
pop
adc
clc
pop
xor
dec
sub
or
insb
fwait
or
pop
inc
movsb
repz
sub
push
push
inc
cmp
pop
add
and
daa
dec
cmp
ss
and
mov
sub
mov
mov
xor
xor
ss
push
push
xlat
mov
bound
ret
adc
fisubs
xchg
into
std
jge
enter
fsubr
cwtl
jge
out
jb
lret
pop
pop
iret
mov
clc
and
dec
dec
cli
xor
or
shl
push
and
inc
cmp
pop
clc
aam
sbb
sbb
fistps
pushf
stos
push
xchg
or
mov
inc
mov
or
mov
cmp
adc
rcll
gs
mov
mov
pop
cmp
cwtl
hlt
and
stos
and
mov
dec
fs
xchg
or
jae
jmp
xor
add
mov
or
loop
daa
rolb
or
adc
xchg
jl
in
add
xlat
push
ds
addl
ljmp
jecxz
nop
jb
xor
aas
in
cmp
cmc
test
es
arpl
cld
in
mulb
das
popa
dec
mov
push
mov
adc
xchg
xor
lret
mov
cmp
xor
out
test
push
inc
mov
xlat
cmp
and
addr16
and
jg
adc
xchg
and
sbb
rcr
mov
xchg
shl
and
adc
aam
xchg
sbb
xchg
adc
inc
ja
lret
push
loopne
add
icebp
cmpsl
cmp
das
cs
cltd
or
fbld
pusha
mov
vpshad
popf
inc
inc
dec
or
std
xor
outsb
stc
pop
push
or
mov
icebp
dec
jno
xlat
imul
test
jg
mov
lret
xlat
lods
repnz
mov
mov
cmp
inc
loopne
xlat
cli
mov
sub
mov
or
dec
xchg
lds
test
subb
mov
mov
ljmp
aad
cmc
stos
fdivrl
fsubrl
repnz
jne
sub
fimull
cmpsl
pop
fists
mov
pop
clc
or
sahf
lods
xchg
and
mov
insl
cmpsb
dec
mov
push
sub
or
push
rolb
popf
loopne
lret
sub
repnz
repz
mov
inc
mov
push
mov
jp
jge
jmp
call
pop
sub
mov
daa
in
push
xor
sbb
push
inc
sub
shlb
adc
jno
pop
add
out
jg
cmc
loopne
sub
leave
xchg
xchg
leave
or
and
mov
sti
push
cmc
loopne
pop
loopne
andb
jmp
outsb
aas
pushf
imul
fs
pop
mov
pushf
idivl
mov
inc
cmp
add
je
popf
add
andl
add
xor
mov
js
repz
fdivrp
imul
and
cmpsb
mov
pop
shlb
mov
or
ret
fstps
ljmp
addr16
std
cmc
push
lods
pop
imul
and
les
xor
sbb
push
incl
cmc
cli
aam
mov
test
inc
lds
cltd
cmpsb
sbb
pop
insb
sub
jae
jns
out
sub
int3
xor
outsb
xchg
inc
imul
sub
lahf
dec
stos
out
add
adc
sub
jne
inc
mov
test
imul
mov
test
push
jmp
sub
sub
and
and
or
jo
pop
es
scas
bound
test
fistpl
mov
mov
push
add
icebp
lret
pop
and
and
test
mov
test
rorl
jge
push
in
loope
aas
es
cli
jp
stos
stos
mov
mov
loopne
jmp
xor
add
sti
and
addr16
pop
sub
call
je
fdecstp
fdivrl
adc
rorl
data16
mov
xchg
sbb
lea
cli
dec
gs
test
xchg
sbb
icebp
push
in
cmp
aaa
jl
mov
cld
jae
out
push
popf
popa
jecxz
xchg
mov
push
loopne
push
test
cld
dec
push
leave
sahf
jl
push
xor
mov
inc
xchg
in
das
loopne
mov
lcall
testl
add
inc
xor
add
inc
add
sbb
adc
or
sub
jle
add
fldl
pop
lret
mov
xchg
pop
mov
jb
std
xchg
pop
stos
fdivrl
nop
icebp
dec
jns
jp
filds
inc
adc
pop
lea
out
dec
push
jne
jo
nop
inc
leave
xchg
fnsave
stos
sbb
add
sub
out
pop
lods
loopne
push
call
divb
subb
int3
cli
aad
or
test
jns
ret
xor
out
mov
xchg
leave
or
add
stos
movsl
mov
outsb
fwait
test
sahf
xchg
mov
test
push
cmp
or
pop
mov
push
mov
adc
sbb
xor
popf
dec
ret
sbb
jbe
sub
cmp
mov
pop
push
popa
add
push
inc
ret
mov
je
in
jb
pop
mov
and
cmpsb
lods
xchg
mov
sbb
xchg
addb
add
xchg
jae
pop
ss
jge
addr16
test
pusha
inc
xor
fisubs
aaa
jp
test
ficomps
inc
xchg
cs
nop
mov
das
or
sbb
jb
lock
cmc
lock
jecxz
inc
popf
ret
lea
or
pop
and
inc
xchg
dec
mov
xor
pop
mov
push
jge
daa
inc
fdivrs
pop
mov
xchg
outsb
fiaddl
mov
insl
dec
ja
adc
dec
in
xchg
je
mov
mov
mov
mov
or
jno
dec
sbb
ret
cli
add
sbb
dec
mov
test
mov
stc
pushf
push
jbe
push
inc
xchg
cmc
js
testl
dec
cmp
cltd
add
insb
inc
pop
dec
call
lahf
push
out
push
scas
mov
rclb
les
enter
adc
stos
mov
xor
lcall
pop
push
mov
sub
lret
icebp
loop
mov
fdivr
cmp
aaa
pusha
push
shrb
inc
add
and
xor
push
xchg
push
sub
pop
mov
push
dec
pop
and
push
cs
pop
jecxz
and
fiaddl
stc
mov
sbb
push
jl
je
pop
and
les
adc
sub
sub
pop
fstpt
xor
jns
stos
cmp
dec
jle
fists
dec
fwait
adc
sbb
int
mov
lea
sub
xor
int3
push
loop
add
in
pusha
push
xchg
xchg
jmp
mov
ja
and
imul
push
inc
in
cwtl
and
inc
std
dec
sub
pop
sbb
idivb
stos
int
adc
mov
jnp
sub
pushf
ss
insb
push
fstpt
jmp
hlt
aam
pop
int3
sbb
insl
outsl
stos
in
in
cmp
mov
dec
push
cmp
mov
xchg
adc
fsubs
jle
ss
cmp
js
add
xlat
jne
and
test
mov
mov
out
scas
sbbb
inc
or
sahf
in
cs
es
and
je
pop
mov
out
out
fdivp
imul
sub
mov
fcomps
pop
stos
cmc
pop
push
jl
sbb
or
nop
and
add
and
push
or
insl
push
cmp
mov
push
loope
insl
dec
xchg
cs
scas
aaa
pushf
cmp
mov
lahf
vmptrst
mov
dec
and
push
pop
inc
fildl
mov
pop
mov
test
add
in
sar
jecxz
or
int3
sti
or
mov
sbb
shrb
hlt
lods
bound
or
scas
arpl
cli
sbb
mov
cltd
xchg
rcll
inc
jno
rorl
fsts
imul
or
scas
adc
jbe
push
pop
cmpsb
add
shll
dec
gs
fsubs
or
popa
jp
sarb
and
sbb
inc
call
mov
sbb
xchg
or
sarl
pop
out
pop
dec
jmp
sbb
push
shl
lods
fwait
lds
mov
dec
jl
push
inc
testl
insl
out
mov
popf
fcomps
or
xor
adc
aaa
iret
push
popf
popf
sbb
inc
adc
and
sbb
pop
push
mov
hlt
testl
pop
pushf
xor
xlat
sub
xchg
insb
sbb
movsl
cmp
out
popa
mov
sub
cmpsl
ret
pop
adc
xchg
or
adc
push
add
mov
out
pop
fcoms
ffree
repnz
sub
sbb
cltd
rcr
mov
inc
mov
sbb
faddl
mov
mov
and
jmp
mov
add
mov
std
sti
jl
fimuls
cmp
leave
jl
sarb
cwtl
enter
loope
pop
pop
pop
cli
repnz
jne
rolb
or
adc
repz
aam
sub
pop
cmp
jae
add
filds
insb
or
aad
mov
mov
inc
js
mov
jg
inc
sub
or
leave
shr
leave
arpl
mov
cmp
fnsave
or
cmpb
mov
sub
orl
or
arpl
push
imul
adc
js
xchg
jge
dec
sub
sti
sbb
test
push
mov
orl
hlt
inc
stos
mov
inc
popf
xchg
int
push
lcall
lahf
mov
pop
xchg
mov
cmp
insl
sub
pop
sub
repnz
stos
xorb
push
push
sub
sbb
test
stc
xor
nop
inc
mov
mov
sbb
cli
xor
add
mov
repnz
cs
push
jp
fs
incl
dec
or
push
pushf
mov
data16
pop
aad
dec
movsb
push
cltd
add
rcrb
gs
test
jmp
in
jns
test
or
arpl
aad
dec
enter
and
mov
loopne
cs
dec
lea
sub
test
pop
icebp
sti
dec
mov
cmp
xor
pop
mov
xchg
xchg
adc
rsm
rorb
adc
sub
and
gs
adc
loop
jae
mov
xchg
inc
scas
or
lret
sub
aas
rolb
sub
push
add
push
dec
xor
push
sbb
fbld
cmp
call
adc
scas
stos
push
sub
add
inc
dec
pop
shl
push
fnsave
enter
subl
pop
mov
fdivrs
push
in
outsl
cmc
lahf
sbb
out
jl
mov
cmp
jecxz
mov
cmp
stos
and
sbb
adc
fidivrs
inc
es
push
insl
movsl
cmp
push
mov
aad
sub
addl
and
mov
and
bound
xor
xor
jbe
sbb
mov
cmp
mov
nop
xchg
mov
adc
jnp
lret
xchg
aam
shrl
cmp
pop
aad
mov
jns
out
les
xchg
mov
stos
fidivrs
jb
aaa
or
roll
into
or
inc
mov
or
dec
cmp
mov
cwtl
std
xorb
pop
dec
sarl
pusha
mov
fdivr
push
xor
test
gs
add
into
xlat
in
jno
and
xorl
fstpt
cltd
jbe
sarl
jo
lds
mov
inc
lods
repnz
call
sbb
sti
dec
mov
push
jmp
mov
pop
jmp
push
pop
movl
xor
inc
inc
call
lret
pop
xchg
and
stos
jmp
nop
outsl
lret
pop
idivb
inc
mov
lret
jne
movmskps
cmp
xorb
inc
push
lret
sub
lret
fnstsw
test
sub
sub
cmp
cmc
add
xchg
dec
adc
in
cli
xchg
sbb
cmpsl
pusha
or
cltd
cld
aaa
out
xor
pop
xchg
ss
xchg
add
mov
push
lcall
lock
pushf
mov
jge
repz
les
cmpsl
xlat
out
jo
mov
hlt
andb
movsb
js
push
xor
fildll
mov
lret
mov
cld
and
xchg
es
add
rcr
cli
add
xor
add
out
cmpsl
pusha
adc
inc
mov
andb
xchg
pop
mov
inc
push
mov
test
inc
daa
repnz
pop
popa
loope
sbbb
jo
adc
scas
adc
inc
call
sarb
dec
inc
adc
arpl
push
cmpsl
leave
sub
sub
lret
mov
mov
fcoms
pop
mov
shrb
cli
das
xchg
fistl
subl
or
mov
aam
mov
lret
xor
nop
hlt
into
scas
scas
fcomp
mov
cmp
adc
sti
rcll
addr16
test
ds
xor
dec
leave
loope
insb
jl
xor
test
mov
and
fidivrs
cmpsl
xor
decb
and
in
xor
pop
enter
in
inc
repnz
push
andl
and
inc
adc
insl
mov
fsubl
mov
sar
pop
pop
jbe
cmp
and
testb
sub
popf
jbe
inc
add
push
insl
mov
stc
pop
jmp
in
mov
sub
imul
or
stos
add
push
mov
fldt
sbb
xchg
cmp
xor
mov
pop
pushf
and
in
xchg
and
dec
mov
mov
add
mov
iret
cmpsl
sub
push
mov
cmc
scas
in
mov
ja
dec
mov
dec
fstl
xchg
push
pushf
bound
mov
inc
lock
push
xor
fs
repnz
add
adc
pop
jg
push
pop
mov
sbb
rcrl
mov
insb
mov
xor
aaa
rcrb
mov
je
ljmp
xchg
incb
inc
cli
jge
cmpsb
fucomi
xor
jl
in
iret
data16
push
or
mov
or
jg
jmp
adc
mov
jb
or
mov
dec
push
xchg
repz
dec
std
mov
les
mov
xlat
pop
scas
sub
pop
lcall
mov
push
sub
lods
mov
loopne
adc
sti
in
push
out
out
cwtl
push
es
repz
in
fnstenv
xor
subl
sahf
xor
js
out
and
dec
scas
push
in
out
testl
mov
shl
and
fisttpl
clc
repz
push
sbb
sbb
cwtl
xchg
rcll
pop
in
xor
mov
sbbl
sub
or
scas
ja
xor
popf
inc
jg
sbb
inc
cltd
sub
add
pop
xchg
pop
jge
push
rol
mov
sub
pop
dec
push
jo
pop
cs
outsb
int
dec
add
sbbb
xor
sub
outsl
jle
xor
outsl
fsts
or
cmpsb
xor
xchg
push
cltd
jns
jg
mov
pop
sbb
imul
jns
outsb
lds
rorb
pop
lock
test
push
js
mov
mov
bound
lock
xor
pop
ljmp
jae
sub
pop
jb
aam
push
outsb
sub
add
adc
xor
out
inc
mov
xor
mov
inc
stos
es
add
pop
mov
movsb
stos
pop
cwtl
pop
and
push
mov
dec
out
cld
push
frstor
outsl
push
inc
lock
pop
jnp
es
out
xor
les
mov
and
xchg
imul
outsl
fsqrt
pop
xor
jae
mov
xor
xchg
adcl
or
jb
ljmp
inc
mov
sti
les
sub
imul
negb
xchg
sub
ss
push
mov
lock
adc
or
jmp
dec
xlat
movsb
jno
data16
out
sarl
sub
and
pop
test
add
sahf
imul
add
pop
movsb
jg
jp
aad
jmp
mov
out
xor
jl
imul
sbb
jo
mov
jne
inc
iret
sbb
and
sub
sbb
push
mov
inc
pop
mov
stos
mov
and
inc
scas
insb
fsubr
push
cmp
sub
fwait
sbb
add
in
sub
and
test
xchg
nop
pop
push
enter
mov
imul
sbb
add
into
xchg
subl
mov
outsl
inc
clc
mulb
mov
push
pop
xchg
out
pop
push
decl
cwtl
aas
dec
sbb
call
mov
lods
fsubl
jb
mov
or
adc
aas
mov
inc
test
fdivrl
jge
push
shlb
outsb
mov
xchg
out
mov
shrl
inc
fsubr
test
add
mov
pop
xor
jns
push
dec
xor
lcall
ds
sbb
das
aas
xchg
fnstsw
dec
xlat
mov
push
rcrl
sbb
push
lret
mov
cmp
xor
add
lock
cmp
cli
shlb
sbb
xchg
movsb
inc
pop
push
jge
fiadds
clc
add
xchg
lcall
lock
icebp
pop
cwtl
adc
dec
outsl
and
pop
fstpt
dec
push
ja
inc
in
lock
or
push
pop
dec
out
mov
imul
pop
cmp
sub
sbb
pop
nop
jmp
repz
repnz
dec
add
add
pop
and
add
movsl
loop
ficoms
pop
daa
push
loop
mov
ficomps
fcomps
bound
ljmp
jecxz
cmpsb
add
movd
or
push
cmc
cmp
sbb
enter
nop
rcrb
les
outsl
push
je
xor
pop
cmpsl
or
push
mov
mov
mov
fisttpl
and
sub
xlat
cmp
fisubs
push
mov
loope
mov
loopne
leave
add
add
push
xchg
sub
xchg
or
cld
jmp
jb
fmul
ficoml
adc
mov
rorl
int3
repnz
sbb
adc
adc
adc
mov
int3
arpl
test
push
outsl
fnop
lds
pop
push
add
or
js
lea
in
cmp
sbbb
aaa
add
rcrl
cmpsl
xor
jp
pop
je
adc
mov
repnz
mov
lock
xor
pop
adc
ljmp
int
cmp
sub
test
xor
xchg
jmp
sub
mov
xchg
test
xchg
mov
movl
cld
mov
xchg
cltd
jno
int
rcr
jo
jae
mov
aaa
cmpsb
push
js
rep
nop
outsb
jae
xor
xchg
xor
inc
loop
mov
into
stos
outsb
inc
xor
jmp
insb
xchg
mov
mov
pusha
outsb
cmpsb
jb
int3
inc
cmp
out
mov
sbb
xchg
bound
sbb
sahf
inc
pushf
adc
xchg
mov
fmul
mov
adcl
add
cmp
cmpsl
adc
adc
pop
inc
pop
rolb
push
popf
sarl
pop
adc
in
das
inc
pop
jne
sbb
xchg
dec
addr16
and
mov
inc
mov
or
fcoml
and
jg
sbb
adc
push
jno
xchg
jp
jp
jnp
and
pop
adc
push
dec
jns
fstpl
ljmp
inc
lock
cmc
add
push
mov
lahf
xchg
xlat
cmp
syscall
pop
fwait
mov
popa
inc
jbe
xchg
inc
enter
shlb
pop
sbb
sbb
pop
mov
ds
in
aas
inc
into
push
cli
sub
lret
mov
ss
mov
clc
push
aas
cli
add
fistl
mov
popf
divl
std
mov
push
lock
push
into
add
inc
orl
insb
std
pop
loope
or
jg
adc
add
xchg
fisubl
dec
mov
mov
addl
push
out
sub
add
xlat
xor
xchg
jmp
jmp
mov
mov
sahf
and
mov
in
sbb
cltd
xchg
sbb
cld
ljmp
or
aaa
dec
pop
aam
pop
xor
jecxz
lea
fadds
xor
sub
add
aad
js
out
sbb
imul
leave
out
mov
jecxz
mov
mov
push
or
push
shl
push
cmc
push
xchg
rcrl
mov
movsl
ficoml
outsb
jl
test
jns
js
cmp
lahf
or
ljmp
fsts
push
outsb
lds
push
jne
frstor
and
loopne
sbb
out
out
xor
dec
and
dec
xchg
negb
js
cwtl
mov
inc
adc
fisttps
icebp
mov
lods
lahf
xchg
cmp
pop
cmc
jne
negb
adc
adc
push
pop
add
push
pop
je
jo
and
negl
push
cli
nop
repnz
movsb
sbb
std
sti
stos
fimuls
sub
stc
pop
cmp
mov
aas
jl
ljmp
xchg
aaa
sub
insb
mov
jbe
adc
lahf
leave
sbb
test
cmp
inc
add
lods
mov
xor
pop
cmp
jnp
jno
cmp
inc
rcll
xchg
ja
dec
jl
lret
adc
stos
fnstenv
ds
test
js
jb
mov
push
loope
lret
cli
xchg
and
mov
enter
loop
iret
push
pop
and
xchg
rep
mulb
dec
insb
push
mov
sub
jo
xorb
xlat
fs
or
lods
loopne
rcrb
and
movsb
repz
add
cltd
sbb
push
ja
pop
lret
push
sbb
mov
fnstsw
sbb
pop
test
pop
or
cli
rorl
pop
leave
stc
leave
sub
lods
mov
mov
subl
nop
loop
fiaddl
inc
in
sub
ret
fs
xchg
sarl
repz
push
lret
call
inc
xor
outsl
sbb
mov
hlt
adc
sbb
clc
dec
jns
jb
adc
jmp
cmp
mov
repnz
pop
lret
xchg
add
sahf
or
jae
xor
pop
leave
and
adc
and
aam
in
hlt
adc
xor
sahf
inc
jmp
inc
decl
push
lret
adc
out
les
ss
xchg
jp
loop
push
mov
sbb
mov
or
std
cmp
dec
movsl
or
test
jae
fs
mov
xor
addr16
leave
insb
pop
daa
jns
or
push
outsl
test
dec
cmpsb
xor
fnstsw
loop
jecxz
aam
cmp
and
out
cmp
in
call
inc
sbb
int3
jnp
shll
cmc
cld
aaa
dec
call
cmc
xor
sub
hlt
pop
jmp
popa
add
and
ret
xchg
push
outsl
mov
sahf
in
add
jne
imul
jnp
insb
sub
jg
mov
pusha
fsubrs
pop
jo
push
inc
mov
xor
lret
cld
pop
scas
test
sub
cld
and
sbbb
aad
shl
in
inc
and
leave
inc
test
sub
cmp
mov
jo
push
or
out
stc
sub
lods
xchg
mov
in
pop
jl
jle
push
pop
jle
cmp
rorl
add
shlb
pushaw
mov
sbb
mov
cld
add
adc
mov
dec
movsl
sti
push
sub
popa
mov
sub
stos
push
jp
xlat
or
dec
gs
outsb
rcl
jne
pop
jl
roll
out
adc
loope
test
and
in
nop
pop
cmp
in
add
inc
mov
lock
call
xchg
dec
jb
daa
sbb
sub
in
rclb
and
mov
orl
test
outsb
jmp
add
lea
dec
jmp
mov
cmp
test
pop
mov
shrb
aas
sub
mov
mov
and
jmp
out
cmp
and
incl
add
lahf
or
insl
sbb
mov
add
aad
out
in
das
push
mov
stos
and
sub
jnp
lahf
dec
roll
xchg
sub
shlb
popa
mov
ss
push
repnz
pop
push
clc
xor
ss
in
adc
xchg
mov
bound
js
xchg
jb
mov
dec
cmp
popa
pop
sub
inc
loopne
hlt
xor
enter
roll
decb
mov
lea
cs
push
xchg
loope
lret
shll
inc
mov
mov
inc
mov
jo
push
mov
cltd
sub
addl
cmc
and
or
lcall
ret
ret
jno
pop
das
mov
pop
mov
sub
add
js
mov
clc
popa
pop
in
push
jbe
aas
imul
js
lret
repz
inc
or
and
sub
loopne
or
push
xor
cltd
in
inc
setbe
mov
push
add
xchg
je
repz
push
pop
in
push
and
add
inc
inc
in
mov
clc
add
cmp
push
cltd
xor
mov
push
jl
add
jae
sbb
sbb
int
ds
js
push
inc
add
outsb
add
stos
adcb
loope
gs
push
dec
aad
data16
out
and
movsbl
pop
ret
pop
popf
dec
sti
repz
iret
xchg
shrl
mov
ds
das
cmp
outsl
fisubl
ja
repz
fcomip
mov
ljmp
or
in
sbb
fsubrs
dec
mov
sub
jnp
cwtl
mov
mov
jge
cmc
adc
mov
aas
fdivrl
jl
or
sub
aas
js
ljmp
push
xchg
fs
mov
sahf
jne
push
mov
xchg
adc
push
out
jp
movsl
jnp
mov
xor
cld
repz
push
dec
scas
and
aaa
repnz
imul
outsl
cld
in
aam
xchg
inc
loopne
sbb
mov
fsts
xchg
sahf
sti
mov
imul
or
sub
mov
mov
add
jo
xchg
outsl
js
cs
andb
xchg
add
lret
out
jecxz
sbb
sub
lret
cmp
cmp
clc
cmp
gs
sub
sbb
movsl
in
pop
test
push
loopne
mov
shr
mov
icebp
xlat
arpl
call
pop
jns
push
sub
sti
dec
add
xor
imul
das
daa
mov
sub
call
std
data16
imul
or
std
and
mov
inc
add
rorb
in
pop
sub
mov
adc
jne
repnz
sbb
jns
mov
ss
insl
mov
mov
lcall
arpl
out
inc
lret
jne
xor
jle
cli
mov
jmp
push
bnd
popf
into
mov
sbb
or
push
pop
mov
mov
fsubp
pop
lea
mov
push
loopne
inc
jno
scas
mov
mov
dec
iret
lahf
fnstcw
inc
sahf
into
ret
fsubrl
out
loopne
or
inc
jno
cmp
inc
jmp
push
adc
mov
push
outsb
pop
mov
aad
xchg
dec
test
xor
cmpsb
cmp
sbb
fistpll
mov
sbb
mov
or
cmpsb
inc
hlt
pop
fs
popf
jne
pop
xor
sub
icebp
adc
sub
and
cmpsb
fstl
mov
cmp
cmpsl
or
adcb
loope
repz
sar
in
js
cmp
aam
push
or
inc
jns
icebp
mov
pop
pusha
imul
xchg
mov
mov
jmp
sahf
sbb
fistpl
cmp
loop
jbe
pop
cli
out
or
repnz
jge
inc
push
and
mov
push
xchg
push
sub
mov
mov
adc
push
add
aam
rcll
xchg
jl
in
xor
push
jnp
movsl
cmp
adc
mov
subl
inc
in
dec
inc
aad
mov
arpl
in
and
insb
fimuls
dec
push
jns
sub
pushf
gs
push
mov
pop
lock
cmp
pop
les
mov
or
dec
and
fs
data16
dec
je
lods
icebp
pop
or
sub
adc
icebp
mov
jle
pop
mov
aas
adc
pop
lret
inc
aam
add
jmp
dec
rol
in
roll
pop
test
push
daa
push
adc
fstps
lock
ret
mov
sub
ss
mov
xor
mov
push
mov
and
clc
xor
xor
sti
rolb
icebp
lds
enter
push
jb
imul
pop
daa
testb
outsb
or
inc
or
mov
add
dec
mov
iret
hlt
fs
fadds
adc
mov
jp
fisttpll
add
or
lcall
mov
push
cli
lret
inc
dec
sbb
xchg
adc
fildll
add
jbe
cmp
rcll
or
popf
stos
sbb
pop
mov
mov
pop
inc
or
int3
jg
stc
push
hlt
pushf
dec
ret
add
cmc
push
xchg
scas
mov
xchg
jmp
or
sub
in
inc
xchg
mov
jmp
loop
cmp
pop
decb
loop
std
aaa
imul
lahf
adc
mov
movsb
sbb
inc
outsl
dec
in
les
arpl
cmp
bswap
sub
sarb
loopne
xor
idivl
or
mov
out
stos
je
lock
pop
cmp
pop
scas
in
lret
rorb
adc
add
pop
fs
or
mov
xlat
addb
out
xchg
jbe,pn
mov
shr
ret
jge
sub
dec
fsubl
lods
xchg
mov
scas
xorb
lods
sub
in
add
adc
pop
sub
leave
jmp
aad
adc
xchg
cmp
mov
into
nop
fxtract
pop
jge
xor
pusha
xchg
jo
es
lock
jae
leave
sub
or
inc
lds
or
clc
xchg
push
inc
shll
lods
inc
ret
mov
pusha
push
pop
lret
pushf
sub
ror
push
pop
pop
and
sbb
and
call
jns
les
out
mov
cmp
pop
cld
ss
loopne
sbb
sub
ret
stos
mov
sbb
cltd
or
insl
scas
test
jmp
sbb
arpl
or
pop
repnz
mov
leave
lret
test
iret
jns
xchg
xchg
add
xchg
and
lds
aas
xor
ret
das
hlt
cmpsb
add
or
stc
gs
test
push
push
pop
cmpb
pop
mov
ljmp
xchg
dec
push
jnp
daa
mov
sbb
rolb
push
out
dec
imul
sbb
test
call
mov
pop
lret
xor
xchg
pusha
popf
call
pop
xor
dec
and
pop
or
adc
xchg
jge
sub
push
inc
cmp
jge
mov
pop
pop
jbe
add
or
pop
sub
test
mov
xchg
pushf
xchg
ja
pusha
inc
vpunpckldq
add
imul
in
dec
jnp
xor
add
mov
xchg
sbb
xlat
nop
in
cmpsb
or
adc
shrl
mov
out
in
pop
addr16
loope
aas
push
pop
push
lea
lods
cltd
xor
jp
fwait
cltd
dec
hlt
cmp
sbb
out
xchg
fwait
sbb
add
xchg
fisubs
inc
cmpsl
sub
push
ret
in
insb
out
or
stc
mov
bound
and
sbb
pop
outsb
pop
in
repnz
gs
scas
int3
jbe
rcr
sbb
lcall
lret
sti
rcrb
fstps
sti
roll
std
sub
add
out
aam
cwtl
test
fadd
cmc
xor
mov
stos
popf
mov
bound
clc
sahf
dec
cmp
mov
test
jae
int3
out
fdivrl
aas
stc
iret
mov
dec
jae
mov
jp
insl
mov
lds
repz
mov
ret
xlat
mov
and
mov
leave
inc
jge
out
cmp
loope
sbb
or
icebp
loop
mov
aaa
dec
test
std
adc
xchg
mov
jmp
jnp
icebp
pop
cmp
jne
daa
out
cmp
lret
mov
std
push
adc
jg
cmp
dec
int
cltd
in
sub
xchg
push
lea
pop
jnp
addr16
sbb
lcall
cmp
imull
or
pop
aaa
std
jg
xchg
mov
enter
imulb
push
in
push
sbb
ds
test
dec
bound
jbe
sbb
lret
into
pop
mov
push
mov
fldcw
test
xchg
cmp
xor
pop
adc
stos
push
mov
lods
loop
shrl
and
add
repnz
rorb
outsb
cmpsb
jnp
xor
bswap
mov
loope
cmc
pop
adc
sbb
adc
inc
les
test
and
pop
clc
into
mov
popf
out
fistpl
sub
push
into
jge
jl
inc
sbb
push
inc
mov
outsb
pop
push
xchg
pop
dec
fisubl
adc
inc
ljmp
rol
jmp
mov
mov
cmp
xchg
sahf
ja
rcrl
aad
rcrl
testl
in
xor
stos
ret
dec
xchg
lea
jmp
dec
and
pop
mov
ljmp
cmp
push
and
clc
dec
imul
jo
xorl
mov
xchg
jnp
mov
xchg
cmpsb
mov
pusha
or
out
call
push
push
fwait
or
jae
mov
shlb
pop
dec
cmp
xor
sbb
add
adc
jmp
arpl
cmp
add
adc
popf
lret
out
out
cmp
adc
push
cmp
fidivl
dec
lods
mov
aas
mov
lahf
cmp
adc
leave
arpl
fistl
ljmp
adc
add
mov
and
fidivrs
inc
and
orl
daa
jmp
sub
ret
rorl
cmp
ficoms
dec
out
sub
lods
jp
in
icebp
push
daa
xor
aaa
gs
push
rolb
inc
sub
call
jl
adc
jmp
cli
push
loopne
lret
mov
adc
mov
jl
jo
insb
cmp
jo
inc
bnd
test
cmpsl
pop
loopne
jge
inc
add
mulb
loopne
pop
cmp
int3
and
sar
mov
js
jg
inc
bound
sbb
cmp
fstl
insl
mov
hlt
sub
inc
sub
leave
fadd
xor
cmc
xchg
cmp
add
testb
jmp
cmp
mull
mov
xchg
movsb
mov
fcmovu
cmp
repnz
sbb
cltd
bound
loope
clc
in
pop
push
notb
in
and
push
jmp
xchg
push
or
out
aaa
xchg
xor
cmc
stc
into
fidivl
push
mov
roll
jp
hlt
or
pop
int3
in
cmc
imul
shrl
aad
sahf
icebp
out
jno
mov
xchg
fsubl
aas
movsb
jae
add
jge
lods
adc
dec
sub
push
incl
movsl
sub
mov
add
lods
ret
xchg
add
and
inc
cmpsl
aaa
es
jae
add
xchg
loop
idiv
mov
mov
fs
out
dec
les
cmp
pop
add
xchg
dec
dec
jp
jp
sub
test
xor
repz
xchg
lock
insb
jbe
stos
xor
jp
decb
or
enter
mov
or
mov
add
lcall
xchg
rcr
loop
mov
cwtl
test
lods
sub
in
mov
or
cmp
and
or
insb
inc
inc
mov
repz
jnp
ficoml
andl
add
pop
cwtl
or
fcmovu
test
popf
and
cld
cmpsl
or
mov
cmp
out
lods
lods
stos
push
push
and
adc
add
pop
adc
shll
sahf
add
fcoms
mov
sbb
sti
mov
jmp
xchg
icebp
mov
jmp
lea
nop
fisubrs
ss
mov
sub
sar
inc
mov
xor
jmp
or
pop
mov
sahf
mov
ds
mov
push
cmc
and
call
mov
or
push
lods
mov
ss
shrb
pop
jl
inc
dec
rorl
mov
pop
clc
sub
mov
pop
cli
mulb
inc
xor
test
add
test
addl
nop
movsb
push
dec
xor
mov
mov
jmp
and
stos
fisttps
cmpsl
mov
sbbb
push
js
pop
inc
mov
mov
sbb
adc
testl
pop
movzwl
addr16
pop
arpl
push
sbb
inc
fwait
pop
sbb
std
in
xor
insb
iret
cs
or
ret
into
cli
xor
pop
adc
push
and
or
sbb
jg
mov
mov
inc
jne
mov
xchg
cmp
push
xlat
cmpsl
enter
in
test
outsl
mov
in
in
imul
cltd
mov
mov
loope
insb
insb
cld
dec
xor
sub
mov
jne,pn
es
xchg
repnz
push
pop
push
inc
or
in
mov
sub
or
push
test
xor
adc
aad
push
aaa
push
pop
ja
pop
imul
xchg
dec
push
dec
xchg
adc
sub
mov
push
fisubrs
in
push
cmpsb
dec
xor
push
inc
pop
jg
cld
in
inc
fwait
lods
and
jno
push
das
or
pop
int
pop
add
imul
xchg
hlt
notb
jne
jne
fsts
jmp
sbb
ljmp
lock
or
jecxz
sbb
xor
pop
icebp
xchg
add
or
jne
push
add
lret
push
sbb
cwtl
cvtps2pi
xchg
sbb
mov
lods
into
sbb
fdivs
and
xchg
lea
sbb
pop
leave
jmp
test
mov
xchg
xchg
mov
cmc
shlb
lods
jnp
push
daa
mov
movsl
or
mov
stos
cmpb
push
fdivl
insl
mov
mov
and
test
dec
int3
jae
pushw
aam
xor
lea
sub
inc
lret
leave
cmp
jne
cmc
mov
movb
push
call
fnstcw
cli
mov
adc
negl
lcall
cmp
mov
and
pop
jp
mov
out
pop
aad
mov
mov
pushf
movsl
push
jl
ror
shr
in
inc
push
or
push
sub
dec
push
sub
dec
out
inc
adc
movl
pop
push
mov
vmwrite
aaa
push
pop
add
mov
mov
ds
jecxz
lea
mov
push
sbb
rclb
xchg
int
xchg
icebp
loopne
xchg
jnp
sub
cmpsb
std
mov
popa
clc
clc
xchg
sub
jl
movb
movsb
ficoml
jo
sbb
jl
stos
jb
xor
stc
stos
cs
repnz
ret
ret
push
lds
push
movsb
xchg
sahf
outsb
movsl
and
outsl
or
sbb
adc
shlb
clc
adc
sbb
xor
stos
in
imul
sbb
push
fmuls
std
mov
aam
int
xchg
mov
or
push
lock
mov
pop
jle
popf
fmul
aaa
xor
mov
pop
dec
mov
in
and
ljmp
out
sub
mov
mov
pusha
add
push
pop
push
mull
lretw
jl
push
jo
cmp
out
stos
jns
jge
popa
and
xor
loopne
cltd
add
pop
pop
mov
lcall
mov
push
add
stos
and
inc
gs
fstpl
dec
outsb
cmpsb
cmp
sahf
rorl
mov
ds
cmpsb
mov
cmp
cmp
sarl
stos
inc
out
clts
dec
lock
xor
xchg
mov
aas
jp
mov
dec
or
jmp
inc
dec
cmp
out
sarl
idiv
pop
dec
or
call
pushf
scas
pop
aaa
movsl
or
sbb
enter
and
mov
loopne
enter
jle
fwait
into
in
push
dec
aad
js
pop
pop
rcrl
inc
test
inc
sbb
mov
pop
lods
inc
popf
and
orw
movsb
imul
sbb
pop
fwait
mov
rorl
cwtl
xchg
push
or
sub
cmp
add
in
outsb
fnstenv
mov
cld
cmpsl
filds
outsb
mov
jmp
scas
shr
mov
adc
add
adc
pop
lret
loope
movsl
cld
shl
or
loop
stos
mov
xor
add
in
or
sbb
bnd
mov
cmpsl
inc
add
jo
push
push
cmp
imul
insl
sub
mov
movsl
mov
mov
sub
cmpsl
mov
and
addb
xor
push
aad
inc
or
jle
sbb
test
xchg
popa
imul
repnz
aam
mov
or
inc
pop
int
fidivl
pushl
dec
shlb
adc
aas
icebp
aad
fwait
push
adc
int
outsl
and
loope
in
iret
xchg
movsb
inc
shrl
xor
sahf
iret
std
stc
xor
inc
ljmp
aaa
dec
pop
xchg
rorb
mov
xchg
lds
ljmp
int
xchg
sbb
push
cmp
test
pop
xor
fs
inc
jmp
aaa
pop
or
lds
leave
cs
add
notb
inc
xchg
loopne
aad
mov
sbb
in
movsb
inc
mov
aam
sub
sub
and
fwait
dec
inc
stos
lcall
xor
in
call
xor
pop
shl
es
ret
mov
lods
or
faddl
mov
cmp
push
mov
xchg
clc
cld
test
rolb
adc
xchg
rcll
dec
cmpsb
and
push
iret
cli
ja
cmp
insl
mov
sbb
call
xchg
cwtl
hlt
push
push
fstpt
lret
xchg
inc
js
lcall
out
mov
pop
jge
pop
xor
add
rorl
out
into
push
ljmp
push
mov
mov
in
jmp
pop
mov
jmp
imul
incb
pop
xor
ret
call
fimuls
dec
jb
push
mov
and
mov
pop
jne
loope
push
popa
sbb
adc
ret
sbb
push
ljmp
mov
xchg
fbstp
sbb
ret
add
push
cmpsb
mov
cli
add
sub
and
mov
mov
pushf
gs
fcoms
das
jl
and
push
sbb
pop
push
loopne
dec
and
inc
pop
les
js
inc
sub
push
mov
adc
int3
scas
jb
std
mov
fs
out
xchg
shll
lea
dec
xor
enter
or
int3
mov
cmpsl
fs
out
lods
lock
or
bound
movsb
ret
inc
arpl
sbb
sub
mov
out
shl
popa
sbb
jae
and
fldt
dec
sbb
pop
mov
xor
jae
lcall
or
insb
out
vaddpd
movsb
cmc
jmp
inc
cmc
fadd
mov
and
lods
pop
pop
rorl
inc
lea
xchg
fadd
inc
pushl
cmp
sbb
dec
jne
mov
xor
cmp
cwtl
jno
leave
enter
lods
ret
add
push
mov
adc
push
add
cvtpi2ps
outsl
sub
push
push
pusha
fsubl
push
push
jmp
sbb
and
sbb
out
out
out
adc
arpl
cmp
mov
inc
sahf
or
adc
fucom
data16
sub
mov
xor
test
dec
inc
fistl
fdivrs
and
gs
decb
iret
mov
fidivrl
aas
stos
push
daa
stc
das
fmul
aaa
jns
test
insl
fnstcw
shlb
push
ljmp
daa
stos
jo
cld
es
xor
add
pop
fidivs
pop
repz
es
add
lock
pop
clc
mov
movsb
push
pusha
mov
mov
icebp
das
and
inc
mov
mov
aaa
jnp
cmp
in
out
pop
xchg
mov
jg
rcrl
sub
push
test
cmpsb
dec
sbb
cli
sbb
push
mov
add
popf
jnp
comiss
cs
imul
repnz
int3
xchg
loope
and
cmp
out
imul
push
fisubl
jp
adc
out
sbb
and
js
mov
ja
ret
loop
sbb
cmpsb
repz
cmc
lcall
sbb
or
lods
mov
int
mov
sub
insb
cli
xor
pushf
rorb
movsb
sbb
xchg
push
stos
jmp
icebp
push
and
mov
aaa
pop
dec
mov
mov
xchg
push
adc
inc
push
adc
ficomps
mov
js
sub
lods
in
mov
fcoml
jecxz
push
ljmp
push
push
jecxz
stc
fwait
in
dec
les
aaa
fwait
inc
loope
loope
rorb
clc
or
sbb
cmp
fs
dec
sbb
mov
fmul
xorl
js
cld
jns
scas
aaa
xor
mov
fwait
bound
hlt
inc
jne
mov
add
pop
neg
cmp
loop,pn
cmp
popa
xorl
lret
jg
outsl
pushf
cltd
jns
out
adc
lds
jbe
aam
push
insl
lods
bound
lds
cmp
dec
sbb
sbb
dec
cmpsb
enter
sub
pop
dec
lahf
ja
push
xlat
pop
ds
in
orb
push
hlt
hlt
push
xchg
aas
mov
xlat
mov
lcall
cli
mov
int
inc
repz
scas
in
and
aad
insl
es
pop
mov
xchg
loop
outsb
mov
popf
leave
pop
insb
cmp
sbb
mov
push
test
arpl
rcl
out
lret
fs
enter
les
repnz
gs
xlat
movsb
sbb
repz
ret
push
push
mov
dec
cwtl
sbb
cmp
and
subps
push
pusha
xor
pushf
jle
mov
mov
push
xchg
mov
jnp
mov
cwtl
inc
cwtl
ja
pop
add
or
mov
inc
aaa
fadds
jnp
sub
sti
insb
rol
loope
test
dec
cld
ds
mov
fdivr
pop
push
fmulp
arpl
xchg
divb
fdivrl
loope
mov
push
hlt
or
daa
jb
mov
or
and
sbb
mov
add
mov
pop
stc
cmp
aad
mov
into
jnp
popf
in
xchg
aad
dec
sbb
sub
pop
push
rcrl
mov
filds
icebp
jne
lock
sti
loopne
insl
mov
loope
stc
repz
cli
cld
and
mov
cltd
test
or
cmp
lods
cs
outsb
sti
je
inc
adc
xchg
je
and
jge
sub
fs
decb
cmpsl
mov
add
lock
jbe
test
in
push
jae
nop
movsb
cmpsb
test
inc
cmpsl
push
repz
or
xchg
gs
add
decl
pop
and
shll
in
leave
insb
cltd
push
insl
lock
lods
xor
les
shll
jmp
lret
push
add
inc
popa
fnsave
test
cmp
dec
push
sbb
jbe
or
jle
sub
sbb
mov
jnp
stos
into
jne
out
lds
nop
xchg
xorl
loop
iret
sbb
das
call
jne
pop
push
repz
pop
push
lods
jno
shl
cmpsl
fwait
pop
add
lret
add
stos
mov
dec
sub
push
xchg
sahf
lahf
sahf
dec
jae
stos
cmpsl
movl
mov
pop
mov
add
push
or
clc
lds
inc
icebp
std
icebp
cld
and
inc
cwtl
out
ds
arpl
test
dec
js
adc
xor
pop
dec
or
les
cmp
mov
sub
push
into
mov
pop
popa
xchg
add
push
std
bound
inc
mov
push
call
mov
lahf
xor
sahf
pop
jl
lret
mov
mov
cmpsl
lock
jmp
ret
lods
mov
add
xchg
xchg
movsl
add
lret
insb
nop
iret
outsb
sarl
pop
lret
test
jmp
xchg
xchg
pop
movsl
pop
xchg
sahf
mov
mov
pop
scas
mov
mov
sbbb
push
fcoml
xchg
adc
push
xchg
mov
push
xchg
sbb
adc
popa
test
sbb
jge
rcrl
mov
lahf
dec
pop
mov
cmpsl
testl
xchg
add
jne
outsb
rorl
ficomps
sub
push
movsl
inc
subb
insb
inc
hlt
cld
lahf
mov
sbb
ds
xchg
movsl
loop
push
bound
adc
cmpsl
leave
sbb
fsubs
push
adc
sub
out
mov
xorb
and
gs
shll
jns
pop
out
stos
fmull
xchg
jbe
dec
lea
jae
or
jle
scas
stos
outsb
inc
leave
in
pop
inc
stos
lds
xor
out
or
in
push
lar
mov
cmp
dec
mov
cmp
xchg
mov
push
ret
bound
sub
xchg
push
mov
test
repz
mov
mov
or
push
scas
pop
push
in
shr
jge
cmc
sbb
mov
push
cmpsb
jecxz
mov
rcl
cli
call
mov
sbb
imul
sub
loop
sub
andb
mov
lea
xchg
mov
mov
pop
pop
sbb
dec
inc
lods
arpl
mov
xor
pop
adc
jo
cmpsl
scas
or
sahf
ret
out
int
imul
xor
adc
mov
jmp
push
fcmove
scas
push
loope
popf
xor
add
mov
xor
std
dec
jae
or
adc
ret
cmp
xchg
mov
jle
push
pop
js
mov
xchg
push
inc
jmp
aad
ret
push
mov
mov
stos
pop
cmp
ficompl
shlb
add
fisubs
sub
xor
jbe
enter
in
scas
fstps
push
cmp
cmp
sarl
and
pop
or
xchg
inc
out
xchg
dec
xor
push
or
xor
std
cmp
call
test
notl
xchg
in
out
sub
adc
icebp
push
pusha
out
push
fdivs
popa
test
inc
stos
jmp
adc
mov
inc
subb
inc
into
out
xor
adc
mov
dec
adc
aad
jle
sbb
js
int
cwtl
pop
xor
fbstp
fmull
cmpsl
dec
loope
test
icebp
sub
and
mov
xor
sbb
add
pop
pop
sti
mov
pop
and
mov
cmp
push
mov
mov
jae
xor
sub
or
xor
movnti
iret
mov
dec
or
push
cld
mov
shll
inc
ror
out
bound
pop
in
aad
mov
add
popf
mov
lds
int3
adc
fnstcw
adc
xchg
jbe
leave
bound
ja
sbb
repnz
mov
and
push
jo
test
test
jl
leave
shl
mov
fidivrl
jle
add
test
mov
addr16
ret
lods
and
xchg
jo
pop
leave
pop
push
push
icebp
mov
sbb
or
sti
repnz
pushf
insl
mov
cmpsb
sub
xchg
or
shlb
pop
cmp
add
push
mov
xchg
les
push
ljmp
xor
test
cmpsb
sub
jne
xlat
in
idivb
pop
mov
loopne
jl
mov
out
out
push
imulb
fistpl
or
out
lods
jmp
cmp
fcmovu
push
push
xlat
xor
and
xor
dec
mov
pop
aad
imul
xlat
push
scas
cltd
lods
mov
cmpsl
sbb
pushf
test
sub
sub
cmpsl
add
sub
data16
push
sbb
sub
fdiv
movsb
xchg
stos
sbb
out
mov
ss
in
cmp
cltd
fadds
cmp
aad
dec
addr16
add
push
les
sub
cmc
jecxz
lahf
jle
scas
xchg
ret
push
insl
mov
lcall
icebp
es
inc
xchg
iret
rorb
dec
inc
cmp
lods
or
hlt
data16
pushf
adc
cmp
lea
imul
imul
add
sbb
push
inc
out
push
dec
jne
inc
inc
push
sub
jmp
test
nop
cmp
jge
mov
sbb
into
aaa
mov
ss
out
dec
daa
test
es
or
push
test
xchg
jbe
outsl
incl
sti
inc
push
cmpsb
pop
mov
add
leave
std
rolb
push
xchg
cli
repz
mov
pop
push
aas
scas
loopne
out
cmp
outsl
out
lret
inc
sub
fs
cwtl
call
xchg
pop
lcall
and
hlt
aam
movsb
jo
cmp
ret
imul
inc
jns
jns
dec
out
mov
aaa
sub
pusha
jp
push
outsb
aaa
cli
xor
dec
bound
mov
and
push
adc
insl
leave
insb
andb
push
sbb
pop
or
jecxz
pop
inc
addr16
test
adc
cmp
jnp
push
mov
jae
xor
sbb
inc
mov
mov
xor
ss
adc
imul
or
add
popa
in
les
jmp
stc
repnz
or
enter
out
pop
lods
rcll
pop
andl
fldcw
jo
or
sub
push
jbe
mov
iret
aam
lods
shl
inc
add
xor
add
pop
dec
mov
mov
mov
ret
nop
cmpsb
pop
mov
fistpl
fucom
adc
sbb
lock
dec
loop
sahf
dec
fwait
loope
lret
mov
lds
lock
adc
loopne
imul
popa
popf
xchg
stos
cwtl
lret
shlb
push
xchg
addl
addr16
lahf
out
xor
mov
ficompl
sbb
inc
inc
lods
inc
lock
into
sbb
test
xor
stos
jne
cmp
push
mov
and
sbb
cmpsb
or
push
dec
int3
hlt
sbb
ja
iret
cld
fs
ljmp
iret
inc
aam
pop
or
loop
lods
dec
ss
lret
in
cmp
dec
ljmp
mov
orl
inc
add
aaa
sbb
jle
mov
out
repz
ljmp
aam
xor
jb
repz
ret
xchg
adc
mov
out
lods
int
stc
jae
sahf
clc
inc
mov
ret
mov
mov
sbb
out
test
xchg
fwait
cli
addl
xlat
sbb
jae
sub
ret
dec
out
sbb
push
rolb
int3
inc
inc
push
adc
addr16
sti
xchg
sub
mov
add
jge
pop
leave
cmpsb
iret
jl
xchg
fdivrs
and
sbb
dec
pop
std
mov
leave
xchg
ss
jae
pusha
push
xchg
pop
xchg
add
cmp
stc
fidivrs
cmp
jl
rclb
ja
mov
and
lods
jne
or
pusha
xor
inc
mov
iret
mov
and
imul
cs
cmp
or
gs
cmp
lea
sub
into
inc
arpl
in
int
mov
pop
mov
in
adc
pop
movntps
outsl
shll
mov
and
cmp
xchg
and
cmp
mov
xchg
pushf
mov
cmp
stos
mov
std
cmp
cmp
into
je
data16
add
repnz
outsl
jecxz
xchg
add
or
dec
ja
lret
out
and
ffree
and
loop
sti
dec
mov
shlb
dec
inc
fs
fsubs
pop
lea
mov
test
daa
xor
jns
xor
sbb
fstp
inc
mov
sbb
sar
pop
mov
mov
cli
xchg
lret
mov
sbb
mov
pop
sbb
xchg
mov
dec
mov
xchg
mov
lret
sub
pop
fidivs
inc
cmp
repz
mov
mov
fsubl
aas
jne
cli
les
and
push
sar
call
xchg
cmp
sahf
dec
mov
imul
cmp
out
outsl
stc
or
or
leave
js
clc
into
sub
stc
loope
sbb
inc
push
fwait
mov
and
pop
test
xchg
ret
mov
clc
mov
int3
jle
aam
shrl
pop
data16
repnz
or
stc
sbb
pushf
out
add
add
sub
ja
sub
int
pop
rcl
adc
pop
mov
int3
orb
mov
outsb
jl
add
xor
xchg
jnp
cltd
jl
push
pop
sahf
sub
aaa
mov
adc
fistpl
mov
test
push
xlat
or
pop
jge
or
daa
sbb
lods
jo
fbld
add
sub
ret
fcomip
pop
add
mov
lahf
sbb
dec
mov
cmp
sub
or
gs
mov
or
mov
add
or
loopne
pop
pop
pop
inc
lea
jno
jg
cmc
das
pusha
es
inc
or
fnstcw
jg
insb
lret
and
bound
dec
fiaddl
and
push
clc
rcl
mov
xlat
aaa
orl
mov
in
or
shrb
ja
ljmp
and
mov
dec
and
dec
push
adc
sub
push
popf
inc
nop
sbbl
fsubrl
scas
out
jne
out
popa
push
adc
ljmp
mov
dec
push
fs
push
in
dec
les
sub
adc
rcrb
mov
in
mov
fiaddl
scas
test
out
popa
and
jae
test
mov
inc
pusha
push
into
jle
mov
adc
xor
stos
in
cmpsb
cmp
cmp
testb
cmp
add
jb
pop
or
jg
mov
mov
sub
xchg
addr16
mov
in
mov
mov
int
inc
lcall
sbb
inc
pop
pop
mov
add
dec
push
or
call
notl
and
enter
out
dec
fists
test
jnp
fidivs
xchg
sbb
cltd
adc
lret
ret
dec
ljmp
sbb
push
dec
jne
mov
xchg
sbb
mov
clc
mov
xchg
xchg
cltd
fisttps
mov
nop
push
mov
inc
shrb
je
push
dec
push
in
inc
adc
ret
pushf
in
adc
outsb
sarl
pop
lds
sbb
push
jg
loopne
sti
sbb
push
mov
out
dec
lds
sbb
xchg
in
ljmp
pop
jmp
push
es
pushf
and
cmp
rcrl
lock
out
ljmp
xor
jns
fstpl
cmpsl
lret
cmp
ja
dec
clc
outsl
aam
mov
mov
jg
mov
rcrl
test
add
ljmp
inc
cmp
adc
mov
lock
ja
pop
jmp
ficompl
jne
or
or
scas
mov
mov
and
cltd
add
sbb
xchg
mov
inc
out
mov
lea
fcomps
xor
xor
xchg
enter
scas
cmp
loope
xchg
xchg
popf
inc
dec
in
adc
repz
cmp
inc
loop
js
cmc
ffreep
xchg
mov
add
add
ret
pop
stc
dec
imul
dec
sti
decl
adc
cmpsb
test
in
inc
push
mov
mov
adc
push
mov
cmp
repnz
mull
or
or
push
mov
mov
inc
pop
orl
dec
pop
mov
into
loopne
sub
divl
lds
inc
pop
sub
icebp
and
pop
jnp
jl
mov
mov
fidivs
dec
mov
pusha
xchg
repz
sub
sbb
adc
mov
jne
inc
lds
pop
xchg
popa
mov
aam
test
add
mov
xor
lds
into
fdivl
dec
fnstcw
adc
movsl
push
push
stos
lock
dec
xor
insl
inc
xchg
push
es
imul
loope
and
inc
or
cmp
fisttpl
xchg
pop
xchg
rcrb
aas
outsl
icebp
jge
adcb
sub
daa
jno
mov
push
push
gs
aas
imul
stos
insl
rcr
dec
outsb
or
xchg
sbb
sbb
dec
mov
popf
mov
push
sub
push
pusha
or
inc
or
adc
sub
mov
jo
mov
aam
adc
add
test
mov
out
xchg
shll
loope
ret
jecxz
ud1
and
mov
and
cmp
jne
jge
push
insl
cltd
sbb
mov
shlb
or
xchg
push
sbb
mov
mov
insb
mov
pop
data16
lret
adc
push
out
shlb
jecxz
cmpsb
scas
xchg
cmpsl
inc
or
in
inc
mov
stos
push
ljmp
aas
sub
stos
ds
mov
mov
imul
and
mov
insl
xchg
out
xor
clc
mov
lahf
add
push
push
xchg
xchg
jb
cli
mov
cld
push
sub
sbb
xchg
out
add
xor
js
aaa
lahf
movsl
lret
add
fwait
pop
sub
lea
ficompl
lret
insl
aam
cmp
push
inc
daa
cmpsl
xor
stos
dec
push
out
das
js
adc
mov
inc
push
add
jbe
mov
inc
inc
push
movsb
repz
fwait
jo
xor
fwait
lods
loope
push
sarb
iret
push
sub
aaa
xchg
outsl
sbb
pusha
imul
adc
and
into
cli
aaa
xchg
sbb
out
cmp
push
popf
arpl
xor
ret
pop
xchg
or
dec
cmpsb
popa
mov
mov
cli
mov
ljmp
xlat
clc
call
and
mov
cmp
adcl
xor
ljmp
inc
addr16
cmp
mov
lods
fdivl
or
addr16
xchg
mov
popf
std
or
leave
call
jns
shrl
cmp
divb
and
add
cld
std
mov
mov
in
enter
jne
cmpsb
pop
cmp
adc
mul
popa
jo
rcr
inc
jne
mov
mov
mov
pushf
dec
lcall
mov
addr16
xchg
and
int
fwait
shlb
mov
dec
sub
stos
push
popa
hlt
mov
pop
in
decb
cld
std
pop
mov
pop
jecxz
xchg
push
ljmp
mov
es
ss
stos
mov
cmp
lods
xor
testl
gs
cmp
inc
rcl
xor
sarb
in
enter
sub
pop
mov
fsubr
es
push
scas
mov
mov
and
out
jl
cmp
insb
cmp
negb
lds
pop
jae
popf
jo
aad
jmp
push
aas
jle
jno
jne
int
call
sub
shll
mov
mov
fistpll
dec
cli
and
stc
fidivrl
dec
sub
add
mov
cmp
pop
stc
push
jle
mov
notb
ret
hlt
pop
push
or
push
push
cmpl
insl
dec
dec
inc
das
sbb
pushfw
mov
add
roll
sbb
add
mov
into
or
dec
insb
inc
ja
jecxz
icebp
cltd
popf
push
mov
out
xchg
iret
subl
les
xchg
mov
loopne
addb
pop
xchg
adc
push
jl
sbb
sub
push
in
iret
repnz
jge
rcr
inc
cltd
push
mov
adc
mov
insl
dec
dec
adc
push
repnz
mov
lock
push
xchg
mov
ret
notb
repz
or
xchg
add
or
mov
jb
test
dec
dec
out
push
mov
loop
dec
xlat
cli
xor
bound
jo
lods
mov
jecxz
jg
mov
xor
js
mov
jo
mov
push
popa
jge
daa
sbb
push
sub
out
push
push
outsl
mov
mov
mov
cmpsl
push
cmp
stos
lods
icebp
push
add
mov
outsl
adc
and
or
jmp
inc
xlat
ja
stos
icebp
adc
adc
sub
cmp
in
cmc
rorb
aas
adc
jnp
mov
cmp
push
lds
push
add
test
mov
mov
int3
add
adc
movsl
aaa
or
sbb
fiadds
out
test
mov
out
pop
sbb
push
dec
xor
add
or
aad
cmp
xchg
mov
dec
push
hlt
out
lret
out
xchg
sti
mov
mov
mov
mov
push
sbb
mov
jnp
in
testl
les
lods
sarl
stos
xchg
push
add
jle
ds
je
mov
pop
sbb
outsb
mov
xor
mov
dec
sub
xor
add
mov
or
decb
adc
sub
xor
inc
stos
adc
dec
stos
xor
xchg
data16
jmp
out
addr16
inc
pop
arpl
pop
sbb
mov
scas
and
dec
lock
cmpsb
lcall
dec
xchg
movsb
test
mov
push
sub
mov
mov
push
ds
jp
and
ss
aas
push
in
mov
push
xchg
test
dec
add
ljmp
mov
test
dec
sub
pop
pop
and
mov
ret
xor
add
int
addb
in
ljmp
aam
jne
shl
dec
ja
lock
repz
adc
jnp
pop
ljmp
lcall
in
jecxz
xchg
sub
cld
add
inc
push
dec
jne
mov
scas
out
in
clc
int3
fisubl
mov
jg
pop
stos
cmp
std
pusha
cs
les
mov
mov
ds
or
cli
push
test
mov
jmp
and
out
nop
ret
or
ds
xor
mov
ja
cmpsb
out
sub
fs
sbb
mov
xchg
insl
icebp
adc
sahf
jmp
dec
jb
imul
fstpt
outsl
mov
lods
push
lods
and
pop
cmp
mov
add
and
sub
xchg
mov
ret
xchg
in
into
and
inc
in
jg
pusha
mov
in
mov
push
add
sbb
and
inc
incl
int
and
add
popa
and
pushf
add
mov
loopne
inc
in
jne
jl
adc
icebp
inc
jnp
inc
dec
ja
xor
mov
xchg
jp
sub
mov
inc
out
pop
pop
pusha
lock
ret
jge
adc
shl
push
js
fidivl
and
pusha
jle
sub
fbld
jl
add
mov
mov
test
daa
lock
rcll
mov
sbb
leave
les
mov
inc
repz
iret
into
add
dec
mov
cltd
daa
adcb
fidivrs
shlb
adcb
sbbl
rorb
aad
imul
ret
clc
push
imul
movsl
cltd
pusha
xchg
mov
arpl
dec
mov
lods
cli
loop
stc
mov
or
xor
nop
add
adc
add
stc
pushf
cmc
sarb
ljmp
stc
pop
pop
inc
xchg
cs
in
mov
sub
cmp
jb
mov
fs
imul
adcb
dec
xlat
sbb
cmp
cmp
mov
adc
stos
les
adc
jae
sub
jg
jp
test
push
jl
inc
stos
imul
iret
sbb
stc
add
ret
out
movsl
lock
xchg
and
adc
hlt
mov
pop
nop
cmc
cmp
enter
xchg
scas
pop
mov
lret
rclb
adc
aaa
inc
in
mov
and
arpl
aaa
mov
addr16
outsb
mov
sahf
mov
stos
inc
sar
js
cmpsl
sub
pop
mov
jecxz
lock
or
aas
xor
mov
std
and
out
sbb
test
imul
push
push
enter
lahf
jge
mov
fidivrl
dec
pop
mov
nop
or
cmp
pop
pop
pop
out
or
cmp
sub
rolb
ds
filds
add
inc
stos
mov
ss
mov
shlb
or
sahf
fcmovb
int
xor
and
nop
addr16
jo
mov
data16
daa
jno
inc
out
dec
ds
jg
in
push
lock
mov
cmpsb
dec
das
stos
in
insb
push
inc
stos
mov
int3
mov
mov
popa
lcall
xchg
pop
fsubr
mov
jecxz
jmp
dec
adc
lods
out
sub
cmp
fistpl
les
aam
dec
std
inc
xchg
loop
rdpmc
jp
mov
xor
push
sahf
adc
xchg
jnp
test
inc
cmp
outsl
cwtl
inc
insl
enter
mov
scas
adc
and
mov
xor
pusha
jb
push
fildl
es
imul
rcrl
stc
inc
mov
and
outsl
sbb
sub
or
xor
adc
imul
add
pop
inc
inc
xchg
jbe
cmpl
lods
and
push
xrelease
xchg
rcl
call
aas
outsl
add
mov
pop
xor
or
xchg
xor
and
js
outsl
adc
jmp
mov
mov
push
in
dec
xchg
stos
or
mov
adc
or
mov
cmpl
and
dec
out
and
jmp
outsl
out
icebp
push
xchg
in
xorb
inc
push
mov
ja
cltd
xchg
movl
mov
fsubr
pop
add
push
popf
push
fisttpll
subps
dec
adc
xor
cmpsb
cmp
cmp
or
sbb
popf
adc
ljmp
xchg
adc
mov
gs
xchg
push
pushf
shlb
shlb
ja
fwait
imul
sahf
xchg
mov
mov
mov
aas
fdivrp
sbb
fidivrs
int
repnz
out
test
mov
out
dec
cmp
sarb
sub
outsl
inc
adc
out
loope
leave
mov
pushw
js
mov
jo
ljmp
lret
int
sub
jmp
push
sti
mov
push
inc
mov
fwait
sbb
testl
cli
pop
mov
pop
fmuls
xchg
sub
jp
or
push
jl
icebp
add
add
dec
or
sti
inc
out
pop
cmp
pop
rorb
lods
sub
xlat
clc
mov
mov
lds
lock
xor
mov
cmc
cwtl
add
dec
jl
inc
lds
insb
movsb
loope
fwait
mov
loop
push
ljmp
mov
or
pop
mov
test
xchg
push
insb
xchg
pushf
imul
adcb
ds
inc
add
lret
daa
lods
mull
jo
inc
or
ljmp
jp
sbb
mov
adc
in
cmp
push
push
and
inc
cmp
rorb
std
std
mov
dec
rolb
or
inc
mov
jl
scas
lock
mov
out
mov
decb
addr16
jecxz
fidivrs
int3
shr
ja
and
lock
aaa
mov
out
xchg
repz
xor
negb
jo
push
fnsave
mov
cld
xchg
jbe
add
es
ss
rol
sbb
data16
xor
outsl
mov
sub
sti
test
lods
cltd
push
int
or
sub
xorl
sarb
js
stos
rcrb
js
stos
in
lods
in
outsl
mov
test
inc
es
aaa
xchg
scas
dec
sbb
xchg
xchg
frstor
imul
xchg
xchg
jmp
in
mov
sub
arpl
ds
xchg
mov
adcl
adc
fwait
pop
mov
les
jnp
add
inc
lods
jns
mov
out
mov
dec
cmp
loope
out
sbb
js
pop
scas
addr16
inc
pop
pop
test
das
push
adc
in
dec
jbe
inc
mov
pop
in
push
jb
mov
jns
fldt
insl
sbb
push
cmp
mov
sbb
and
fldt
jnp
jb
mov
in
cmp
xchg
stos
stc
into
lahf
jae
stos
repnz
xor
stos
jle
repnz
push
lds
cld
sbb
sub
add
pusha
inc
xchg
dec
leave
leave
pop
enter
out
sbb
pop
dec
loope
pushf
mov
imul
mov
cmp
out
pop
imul
test
adc
pop
lods
ss
adc
fdivrl
inc
das
shrl
in
cmp
xor
add
dec
inc
ss
adc
lea
push
xchg
std
pop
pop
dec
lret
lea
std
aaa
inc
push
test
mov
aad
xchg
iret
xchg
subb
pop
imul
test
adc
adc
adc
das
inc
dec
push
int
into
rcrb
and
scas
mov
ss
loop
call
inc
movsl
push
movsl
cwtl
testl
stc
or
cmp
int3
stos
rclb
stc
jmp
iret
lcall
inc
insl
push
push
scas
aad
rcll
shl
dec
sti
mov
pop
daa
fcmovbe
sbb
adc
jmp
jne
inc
cwtl
mov
int3
jbe
mov
sbb
pusha
insb
cmpsl
pushf
mov
imul
xor
xor
cmc
test
add
push
pop
es
dec
inc
jmp
xor
loopne,pt
pop
outsb
mov
outsb
sbb
jnp
and
mov
push
push
sub
mov
push
push
xor
lock
stc
cmp
jg
pop
dec
sub
cmpb
outsb
pop
xor
inc
mov
rcll
stos
mov
movsl
call
jle
stc
out
pushf
outsb
inc
jno
lahf
pop
std
test
sbb
mov
pop
inc
sbb
fs
mov
jmp
mov
push
clc
insb
pop
xor
and
int
shll
sub
mov
fwait
imul
mov
inc
jl
movsb
xchg
mov
dec
pop
add
and
mov
push
push
shrl
jb
jge
movsl
mov
pushl
mov
scas
mov
addr16
pop
addr16
xor
inc
bound
sbb
inc
jne
loop
hlt
sbb
push
arpl
push
in
test
dec
popf
pop
stc
sarl
dec
call
fisubs
push
ror
and
jp
mov
adc
add
test
pop
sub
jno
xchg
mov
shll
jnp
leave
pop
adc
shll
lret
popf
lods
or
pop
jl
movsl
sub
cltd
pop
out
aam
popa
cs
cwtl
hlt
popa
pop
loopne
cmp
mov
mov
fisubs
add
xchg
add
inc
in
int
sub
std
out
out
out
jns
adc
cmp
lods
or
jmp
or
cmp
mov
pop
sahf
sbb
sbb
pop
add
push
mov
jns,pn
mov
out
inc
das
lods
dec
mov
fcmovne
cmp
arpl
in
shl
add
add
mov
jo
push
clc
in
mov
adc
xor
ja
fnsave
jmp
push
clc
in
test
xchg
fiaddl
fimuls
jecxz
dec
mov
clc
stos
pop
aad
aad
outsl
and
inc
ljmp
push
jmp
or
enter
dec
cmp
xor
push
cmp
in
into
sbb
js
pop
xor
adc
fadd
aaa
pop
mov
mov
sahf
dec
and
int
aam
add
sbb
loop
int
adc
sub
pushl
std
shl
mov
pop
daa
data16
in
sarb
adc
cmp
mov
xchg
dec
adc
fiaddl
clc
inc
es
pop
cmpsl
inc
andl
lret
js
dec
test
out
push
sbb
dec
dec
jne
test
sbb
cs
lods
sbb
lods
es
cltd
inc
imul
ds
jmp
xor
xchg
nop
into
ss
lcall
push
mov
adcl
hlt
jno
pushf
lock
inc
push
dec
and
mov
xor
jecxz
fidivrl
ret
sahf
lcall
js
shlb
aad
insl
mov
sub
push
mov
sub
xchg
jg
xlat
fstpt
dec
inc
test
ret
push
inc
mov
rcrl
jne
rcr
pop
jmp
repnz
xor
icebp
dec
jge
call
rolb
inc
int
mov
push
mov
out
rol
imul
sti
mov
clc
jge
dec
add
loopne
push
jnp
adc
pusha
push
fsubr
enter
xor
and
pop
fistpl
sub
out
fildll
pop
ljmp
or
push
imul
ja
lahf
cmp
xchg
dec
xor
insb
data16
ret
ss
cmp
sub
inc
mov
xchg
mov
scas
jg
push
inc
rorb
dec
cmpsb
mov
jno
mov
lods
pop
jle
inc
aam
shl
jno
cmc
push
dec
subl
loope
add
shll
inc
popa
rclb
push
mov
mov
out
test
jbe
mov
fnsave
into
or
xor
fstl
mov
inc
push
pop
mov
bts
xchg
pop
pop
in
pop
pop
fld
mov
aaa
mov
push
push
lcall
push
sub
sbb
cmp
jmp
adc
sarl
dec
sub
into
push
movsl
fadds
cwtl
sbb
ror
inc
arpl
inc
mov
mov
enter
stos
call
push
or
cmp
testb
mov
ja
dec
xor
push
add
into
push
mov
adc
nop
movsl
icebp
lds
dec
adc
stos
andl
popa
rol
das
jnp
xor
out
leave
mov
push
fbld
push
push
add
jle
xor
shrb
clc
sahf
push
movsl
push
push
pop
sub
loop
addb
insb
adc
dec
mov
subl
push
movsb
fistpl
mov
jnp
imul
pop
mov
clc
and
add
or
mov
leave
cmc
cwtl
pop
stos
xchg
std
and
enter
insl
loope
xor
pop
sbb
mov
mov
mov
add
dec
and
out
inc
rolb
xor
negl
repz
cmpsb
clc
test
enter
enter
aad
mov
jb
lret
sub
jmp
and
push
inc
sub
sbb
lcall
test
jb
scas
pop
inc
sub
in
cltd
lods
je
inc
jne
jp
aaa
js
sbb
test
and
mov
mov
dec
mov
in
mov
xor
data16
jg
imul
popa
add
stos
lahf
xor
rcll
in
jg
sahf
cwtl
sbb
xchg
sahf
jge
push
stc
sub
add
ficoml
sbb
aad
xor
int
inc
aam
sbb
dec
xor
subb
push
in
out
stc
fld
out
xlat
mov
hlt
in
mov
icebp
push
outsl
mov
sbb
ret
repz
pop
stos
mov
dec
out
inc
sbb
scas
ret
add
xchg
adc
shlb
jnp
mov
in
sahf
addb
or
ljmp
inc
sub
cmc
and
push
aam
in
inc
dec
inc
pminsw
jmp
adcl
mov
mov
outsb
mov
jnp
jg
mov
out
stos
push
int3
cmpsb
jns
rep
jo
jo
mov
aas
repz
pusha
add
jae
and
push
outsb
clc
mov
jnp
jp
sub
xlat
add
or
push
jecxz
out
fldcw
lock
sub
jns
jb
dec
enter
lahf
cmc
adc
pop
out
insl
mov
nop
add
sub
jo
xchg
mov
daa
sti
jbe
push
inc
pcmpgtd
adc
push
xor
sahf
icebp
mov
push
jb
adc
mov
repnz
insb
adc
xchg
pop
in
inc
leave
fnstcw
xchg
sub
fdivp
push
jno
ss
mov
fs
xlat
adc
xchg
pop
jbe
push
std
and
cmpsl
and
icebp
cmc
enter
cld
and
nop
imulb
in
test
cmp
push
addb
jns
mov
or
mov
cltd
fcmovnu
ljmp
jno
or
sbb
lods
sbb
popa
out
inc
in
sbb
mov
cmp
pop
test
test
fidivl
cltd
jo
neg
add
lds
and
mov
jne
mov
jge
xchg
bound
lods
pop
lods
out
mov
fwait
xchg
push
xor
mov
add
popf
or
cmpsl
pop
ja
pop
pop
jns
dec
inc
test
pop
notl
push
sub
and
mov
xchg
sbb
popf
jmp
outsb
aas
test
adc
cmp
sbb
fdivrl
fwait
js
enter
je
or
adcl
ja
add
sub
cli
dec
scas
add
daa
adc
popl
push
aam
pop
xchg
out
mov
xor
jo
cmp
lock
fcmovnu
mov
fiaddl
cmp
mov
pushf
jb
pusha
xlat
aas
dec
mov
or
stos
pop
jne
dec
jmp
gs
jg
test
and
sub
xorb
sub
mov
popf
js
xchg
mov
mov
mov
addr16
gs
into
xor
pop
jmp
nop
insl
jp
mov
pop
dec
inc
sti
ret
jno
xchg
sbb
xor
shrb
call
adc
mov
and
mov
mov
add
sbb
ss
push
sub
test
pushf
mov
push
fs
pushf
outsl
je
or
mov
push
pusha
dec
int3
loop
rsm
xchg
push
imul
out
xor
rorl
arpl
push
lcall
push
hlt
leave
and
ss
in
sbb
mov
or
movsb
call
pop
shr
stc
aaa
add
test
push
pusha
jne
jg
push
fucomi
push
out
push
outsb
test
push
in
or
mov
xchg
cmp
call
into
push
loope
fimull
sti
inc
leave
jmp
mov
adc
xor
les
dec
adc
and
push
outsl
and
cmp
ret
cmp
into
js
sub
adc
xchg
fidivrs
inc
dec
lcall
pop
jnp
and
rcl
xor
clc
xor
inc
dec
add
cld
outsl
jge
fsubrs
out
pop
xlat
pop
in
cmpsl
adc
test
xlat
jns
jp
push
lock
insl
cmp
mov
jns
cmp
lods
mov
mov
mov
pop
sub
xor
and
mov
pop
je
xor
cmp
test
push
cmp
data16
xchg
and
sbb
dec
repz
jo
mov
cmp
icebp
fnstsw
mov
mov
push
pushf
adc
divl
and
jns
cmpb
push
movsl
jns
push
lods
inc
or
push
loop
mov
cmpsb
mov
pop
adc
or
pop
fldcw
xchg
dec
push
int3
lcall
dec
repz
adc
sub
shlb
push
jge
test
inc
and
loopne
xor
xchg
fdivl
pop
imul
arpl
dec
fadds
cld
jp
cmp
xor
dec
pop
cmpsl
or
iret
ja
cmpsl
insl
scas
sbb
mov
aaa
stc
xchg
xor
clc
cmp
or
movb
sbb
mov
dec
hlt
push
jg
mov
sub
and
mov
inc
cltd
jae
mov
jnp
mov
outsl
mov
xchg
push
int
test
pop
adc
hlt
sbb
cmpsl
fiaddl
lea
dec
jnp
mov
or
jno
loope
repnz
and
es
subl
adc
out
fistl
outsb
dec
jmp
hlt
mov
push
inc
xchg
je
roll
add
mov
cwtl
pop
add
adc
pop
xor
or
sbb
idivb
xchg
daa
enter
lea
mov
and
repz
bound
jle
addr16
xchg
icebp
mov
jp
daa
loopne
fisttps
push
shrb
dec
aas
pusha
dec
push
add
add
mov
adc
mov
scas
or
dec
fsubs
mov
push
je
mov
lahf
mov
mov
les
sahf
mov
repnz
ja
int
push
enter
sbb
je
pop
inc
lret
lock
fisubl
and
push
adc
aam
imul
or
pusha
fcmovnbe
lcall
jl
test
or
mov
icebp
iret
lret
loope
add
xchg
mul
mov
cli
insl
lret
mov
pusha
cld
and
jecxz
adc
xlat
push
cmp
out
push
inc
xchg
js
lock
scas
orl
push
es
sub
jmp
arpl
mov
push
jb
add
mov
jbe
fs
xchg
in
fcmovb
ret
stc
rcrl
sub
orb
cmpb
enter
test
push
outsl
fs
in
xchg
shll
inc
and
adc
add
sar
mov
xlat
mov
scas
or
into
push
dec
cmp
fs
cld
mov
and
scas
shlb
mov
inc
push
in
pusha
or
clc
dec
imul
mov
clc
enter
sbb
add
shrb
pop
dec
mov
sub
adc
stos
js
and
fbld
mov
loope
imul
mov
xchg
mov
pop
sub
jl
or
pushf
mov
mov
rcrl
das
or
adc
dec
add
mov
orb
sbb
ljmp
insl
xchg
in
mov
ja
lret
dec
je
mov
lahf
xor
fstpl
jmp
movl
insb
fdivr
inc
mov
or
and
xor
jnp
or
repnz
and
pop
dec
fwait
aaa
movsl
cmpb
inc
cmc
subb
movsb
mov
fbstp
jecxz
shl
push
mov
andb
push
ljmp
mov
out
out
jl
lods
lea
stos
and
pusha
and
mov
rclb
insl
pop
xor
dec
lret
out
loop
iretw
aas
ds
cmp
data16
int3
and
fucomi
push
pop
lcall
add
push
mov
mov
adc
pop
fistpll
pop
mov
imul
jle
push
jp
test
cwtl
in
mov
call
hlt
rclb
mov
fwait
rorl
mov
test
popf
lods
mov
xor
xchg
rep
sub
jns
push
cltd
jge
out
fstpt
mov
cmp
mov
or
mov
push
mov
jnp
in
xor
stc
mov
and
or
inc
shrl
mov
adc
jno
mov
movl
mov
push
popf
outsb
jnp
pop
sub
pushf
cmpsb
orl
ds
jg
jnp
shll
inc
imul
hlt
mov
cmpsl
fidivs
pop
sbb
pushf
mov
cmp
into
jmp
jp
jecxz
in
fidivrs
call
inc
sbb
std
jns
adc
fistps
movsb
cmp
sbb
in
stos
dec
and
or
adcl
adc
jle
cmp
inc
int3
cmpsl
bound
popf
adc
and
xchg
xchg
inc
sti
mov
scas
inc
push
mov
in
mov
loope
mov
cmpsb
fstl
sub
les
ds
mov
cmp
cmp
push
insb
xchg
adc
ds
aad
adc
push
nop
pop
dec
arpl
icebp
mov
mov
mov
xlat
adc
mov
push
mov
add
fst
cli
mov
xchg
adc
mov
pop
pop
repz
sbb
adc
orb
cld
adc
loop
stos
adc
test
mov
mov
nop
les
das
cmpsb
or
push
in
mov
mov
shl
or
pop
ret
mov
mov
test
sub
adc
jo
popf
fistpl
mov
jae
pop
sbb
sbb
jecxz
cmc
loope
mov
lret
mov
repnz
cmp
and
add
pop
out
fwait
mov
inc
or
dec
or
dec
dec
dec
hlt
lock
jmp
test
dec
jecxz
push
stc
mulb
jno
push
push
nop
repz
nop
mov
mov
repnz
dec
loop
lahf
jae
dec
aam
mov
dec
pop
aam
cmp
xor
insb
nop
pop
into
and
enter
js
ljmp
dec
jnp
pop
hlt
xor
and
iret
mov
mov
and
cld
and
fsts
in
mov
push
scas
mov
mov
xchg
repz
xchg
lea
lahf
imul
ja
pop
fcmovbe
cmpsb
jne
xchg
dec
dec
in
add
mov
cmp
jmp
jle
in
cmp
popa
xchg
outsl
jp
mov
pop
hlt
cs
mov
add
in
add
sub
mov
jge
lcall
aaa
xchg
mov
lret
pop
rorl
test
jmp
loop
out
cltd
add
push
xchg
sub
jecxz
aam
xor
mov
imul
xchg
test
call
push
rorl
and
mov
inc
ficoms
sarb
popa
outsl
int3
call
daa
or
sub
testb
cmp
xchg
mov
mov
add
adc
scas
shrb
add
fidivl
pusha
jae
lret
xorb
jge
mov
movsb
add
and
mov
cmp
loope
inc
sbb
pop
mov
les
mov
dec
cmovge
cmp
mov
dec
push
xchg
mov
ja
daa
jecxz
cltd
sbb
or
cmp
js
push
ds
mov
or
adc
das
out
or
test
pop
or
push
mov
xor
fs
sbb
iret
sbb
addr16
mov
addb
fstl
dec
adcl
push
aam
cmp
mov
loopne
inc
lods
mov
pop
imul
jmp
frstor
mov
in
xor
push
ss
mov
dec
sub
xor
jo
and
dec
cs
jae
xchg
cmp
leave
ret
sbb
mov
push
inc
rcrb
mov
rorl
bound
jl
push
outsl
sub
cs
and
inc
mov
in
add
jb
inc
add
pop
ja
add
push
loopne
dec
sti
mov
stc
mov
scas
mulb
xor
inc
les
into
rcl
pushf
dec
mov
sub
jb
cmp
mov
mov
sub
scas
stos
int3
enter
test
cmp
icebp
icebp
adc
sbb
xor
mov
or
xor
in
add
movsl
mov
push
push
roll
icebp
adc
and
les
ss
mov
jo
xor
mov
repnz
pop
inc
bnd
test
pop
sub
inc
mov
lahf
mov
push
mov
shrl
rorl
add
mov
out
fdivrp
adc
xchg
push
sarb
in
mov
imul
pop
mov
xorl
pushf
mov
xchg
push
mov
popa
sub
dec
pop
pushf
dec
and
jbe
push
loop
cmpsl
clc
mov
sbb
mov
mov
sbb
pop
fsubp
fs
lahf
test
mov
inc
pop
ljmp
icebp
imul
xchg
cmp
mov
pop
inc
out
adc
fnstsw
ficompl
inc
sub
dec
test
pop
pop
dec
xchg
hlt
xor
dec
jno
cmpsb
lds
out
out
add
aaa
dec
cmp
movsl
jg
mov
xlat
jae
sbb
cltd
xor
dec
fs
scas
lcall
mov
sub
xor
ss
cmp
mov
jle
push
mov
mov
jb
jnp
fistpl
cmc
clc
ja
push
adc
mov
mov
insb
fs
add
jo
gs
dec
mov
iret
mov
out
ljmp
in
and
xor
stos
imulb
lret
dec
dec
int3
icebp
ds
fisttpll
fsub
ja
mov
mov
push
mov
jle
cltd
jg
or
outsl
addr16
pop
loopne
test
popf
sbbb
push
add
push
insl
test
xor
les
clc
push
repnz
add
xor
mov
xor
xor
jo
sub
jbe
push
out
daa
inc
shlb
jns
aad
push
dec
cmpsb
dec
jmp
inc
mov
jg
lret
xorb
gs
mov
xchg
out
cmp
cmp
out
adc
pop
xchg
test
push
hlt
lret
js
test
cltd
pop
inc
negb
xchg
fs
sub
fs
stos
pop
add
clc
push
xor
jecxz
mov
lret
mov
xchg
jne
cmc
or
lock
inc
cmp
cld
outsb
mov
orb
rcl
add
jge
bound
jg
repz
shrb
dec
iret
sbb
arpl
cltd
loop
cmp
into
inc
or
out
xchg
and
adc
cwtl
xchg
xchg
xlat
add
pop
mov
popa
pop
imul
in
inc
push
xchg
sub
dec
fildll
cmp
mov
loopne
out
pop
orl
pop
cmp
xor
rcrb
cs
jecxz
hlt
repz
clc
dec
pop
cmc
pop
xchg
jmp
mov
xchg
out
and
outsl
and
dec
dec
lock
fiadds
rcll
xor
pop
jmp
nop
nop
fwait
mov
dec
dec
mov
xor
scas
xor
adc
or
inc
or
sbb
enter
xor
pushf
mov
test
dec
enter
das
jo
lret
adc
clc
mov
into
fldlg2
sbb
mov
sub
push
xchg
in
jbe
je
lret
out
xor
pop
pop
adc
jecxz
cmp
pop
jo
loope
dec
andl
or
push
xor
mov
mov
jle
dec
shl
xlat
dec
pop
mov
pushf
push
repnz
out
jmp
jo
fcoms
xchg
dec
inc
lods
mov
mov
sti
in
push
sub
ret
sub
lock
sbb
mov
jbe
xor
sbb
sub
jbe
or
inc
outsl
mov
ficoms
scas
mov
lahf
push
mov
in
jecxz
mov
imul
movsb
mov
lods
push
and
push
or
xchg
mov
leave
das
lcall
sub
push
xchg
inc
pop
ret
or
in
inc
add
fistpl
sub
movsl
test
and
xchg
add
pusha
js
stc
add
fwait
stos
aaa
fs
stos
pop
scas
add
sub
push
push
cmp
jmp
in
and
add
lahf
or
dec
jl
xchg
xchg
insl
fistps
insb
out
mov
leave
das
or
stc
mov
testl
pop
shll
hlt
mov
adc
fcompl
addr16
or
fld
das
fcmovbe
mov
fldcw
xlat
pop
stc
cmp
popl
out
add
loop
jp
inc
and
cmpsl
sub
mov
mov
mov
mov
cmpsl
push
dec
pop
or
mov
es
movsl
cmp
mov
roll
inc
jae
inc
cmpb
loope
movsb
imul
or
fldcw
cmp
mov
push
pushf
push
arpl
or
mov
test
mov
call
stc
mov
lret
insl
sbbl
cwtl
fcomi
xor
int
test
cld
mov
jmp
add
inc
nop
dec
in
test
pusha
shll
jae
test
lret
out
cld
out
fcompl
inc
add
xchg
test
outsb
sahf
roll
mov
push
add
xchg
insl
inc
adc
sbb
and
gs
inc
sub
mov
aad
and
sub
sbb
enter
pop
test
repnz
sahf
push
jbe
pop
mov
dec
call
iret
iret
out
and
dec
aam
sbb
push
in
inc
stos
aam
add
jns
jg
aam
xor
jg
inc
xchg
and
mov
inc
ja
jb
repnz
jge
cmpsl
add
xchg
cmp
sbb
xchg
mov
push
xchg
pop
fwait
dec
test
or
addr16
push
out
dec
ljmp
jg
test
sbb
ja
xor
test
shr
sub
lcall
inc
aaa
call
in
cmc
stos
jg
mov
xchg
popf
inc
sub
je
fisubs
mov
js
sbb
push
fsubr
jmp
push
lea
adcl
cmp
imul
cld
adc
loop
push
add
mov
cmc
xor
addl
inc
pusha
enter
sbb
xchg
popa
imul
mov
rcll
xchg
faddl
mov
push
je
adc
les
fs
leave
popf
jge
xor
cmpsl
daa
or
mov
and
gs
stos
rol
mov
repz
int3
les
fdivp
in
mov
daa
cmc
push
push
or
sahf
push
mov
das
xchg
scas
nop
push
cmp
int3
jno
and
pop
mov
shll
push
cmp
shll
inc
ret
push
insb
and
ret
pusha
fdivp
shll
push
jge
popa
dec
xlat
adc
pop
jmp
je
je
cld
fsts
gs
das
daa
mov
loop
mov
daa
jae
scas
jge
jecxz
mov
xor
or
pushf
adc
clc
pop
sub
push
ljmp
jg
jno
push
xor
insb
adc
and
sbb
xlat
in
adc
fldt
or
add
pop
lcall
test
inc
ret
in
fmull
fcmove
mov
movsb
mov
or
mov
nop
mov
dec
xchg
cmc
xchg
aad
sbb
mov
test
push
add
mov
push
repnz
push
xor
in
sub
sub
sbb
or
mov
in
aad
jnp
or
push
adc
mov
adc
lock
xchg
fstpt
and
push
sub
insb
faddl
inc
int3
adc
insb
leave
push
push
mov
mov
cmp
pop
jle
sub
or
inc
fsubs
int3
aad
dec
and
mov
mov
das
aam
or
adc
push
fldcw
or
loopne
sub
es
mov
test
jl
cs
push
cli
mov
add
mov
test
push
and
outsl
xor
xor
stos
fbld
roll
cmp
jbe
xchg
jbe
xchg
inc
loope
jle
add
stos
dec
notl
test
sti
cmp
jmp
push
lcall
nop
jle
push
xchg
pop
int3
pushw
cld
gs
paddsb
clc
or
rol
mov
mov
psadbw
mov
mov
push
std
mov
outsl
add
iret
sub
fldl
adc
mov
push
mov
popf
js
inc
inc
or
xor
mov
mov
pop
loopne
movsb
enter
push
xor
dec
rcrb
out
mov
insb
mov
or
in
jns
sbb
pop
push
pop
pop
push
xchg
dec
cmpl
jg
jne
mov
lcall
mov
and
dec
stos
rcrl
sbb
sub
and
movsb
mov
adc
adc
push
cmpsb
imul
insl
mov
movsl
sbb
cmp
outsl
in
call
cmpsl
rcl
call
and
dec
ja
jns
mov
fistl
cmpsl
out
lods
lock
jno
add
pop
insl
jp
push
das
stos
jg
add
jle
cmp
test
adc
inc
cmc
mov
xchg
jp
inc
jbe
adc
jmp
jo
and
pop
mov
mov
xor
inc
jne
mov
fcmovne
icebp
xchg
cmp
icebp
fisttpll
xchg
sub
push
lcall
cmp
cmp
sbb
out
mov
xchg
mov
cmp
pusha
scas
test
push
pop
repnz
int3
dec
push
pop
mov
push
sbb
test
jge
aaa
int
pop
push
inc
ljmp
and
cmc
mov
xchg
fisttpll
test
xor
lea
jge
out
lcall
fstp
lret
mov
push
cwtl
pop
call
repnz
icebp
xor
push
inc
xchg
or
shrl
sbb
jo
fsubs
jmp
or
cwtl
jns
scas
pop
scas
sub
push
adc
xchg
and
pop
dec
pop
shll
pop
mov
xlat
mov
xor
or
adc
cld
jp
aam
cmpsb
pop
jmp
push
jecxz
std
mov
ds
cld
jbe
lea
pop
xor
jns
mov
push
ja
inc
mov
pop
stc
mov
sub
cwtl
movsl
sahf
inc
sbb
mov
cmp
aad
mov
negl
adc
xchg
xchg
es
mov
jmp
int
mov
stc
xchg
stc
mov
dec
cmovns
lret
jge
sbb
mov
sbb
jb
aam
mov
je
and
xchg
aam
ret
sub
mov
fbld
or
sbb
lds
pop
push
mov
mov
std
pushf
cwtl
mov
push
inc
stos
mov
jb
mov
ret
hlt
mov
adc
dec
cs
xor
loopne
addr16
jbe
sub
push
sbb
xchg
xchg
dec
add
cmpsl
and
jle
lret
jno
fsubl
loop
or
add
inc
ret
mov
out
sbb
repnz
or
jo
loop
arpl
out
mov
lods
aas
fstl
and
jmp
jg
bound
cmc
fs
loope
mov
adcl
lret
les
test
push
push
aas
inc
cli
out
or
mov
jb
mov
push
cmc
or
leave
mov
dec
stc
xor
aas
xor
pop
das
adc
xor
pop
pop
lret
orb
push
insl
adc
pop
leave
mov
cmp
jp
and
adcl
push
leave
sti
das
cmp
enter
insl
xchg
add
adc
cmp
sub
leave
adc
addl
inc
insb
orl
rclb
lret
and
aad
sbb
ret
aam
cmpsl
xor
dec
xchg
rclb
sahf
aas
cs
popf
cmp
mov
out
frstor
fidivrs
push
testl
sahf
loope
out
pop
outsb
xchg
and
clc
insb
dec
mov
cltd
add
mov
mov
ret
push
call
test
dec
ja
xor
arpl
push
pop
in
cld
jge
cmc
push
jmp
mov
dec
cmp
push
mov
aam
mov
jl
dec
rcrb
incl
mov
fsubr
outsl
test
or
push
pop
rcrb
sub
push
jge
adc
sbb
cwtl
jmp
mov
call
das
fistps
xchg
lock
dec
xor
loopne
mov
or
fs
data16
mov
pcmpeqd
out
nop
jmp
icebp
lock
xlat
xchg
cmp
imul
int
and
outsb
cmc
jae
cli
outsl
test
push
push
mov
jns
jns
fcompl
jnp
rcrl
and
mov
mul
jmp
xor
fldl
and
repnz
outsl
int
subb
std
ds
push
scas
stos
ja
mov
inc
into
addl
jmp
jns
mov
ds
xlat
pop
in
fwait
test
daa
cmpb
mov
xchg
xor
xchg
push
je
in
lahf
pslld
scas
cmp
stos
cmpsb
es
stos
push
mov
inc
adc
cmp
cwtl
xchg
pusha
fadd
adc
sbb
mov
daa
sbb
sahf
xchg
cmp
mov
mov
lret
mov
push
movsl
push
test
add
rcr
fistl
and
lahf
sbb
incb
add
leave
xor
fnstsw
jo
out
dec
inc
inc
mov
push
stos
lret
jb
ret
jmp
lea
ja
jp
inc
jp
push
cmp
push
sbb
push
pop
ror
push
cmp
jl
add
loope
dec
adc
mov
lret
adc
sub
lds
fwait
sahf
cmp
xor
push
adc
aad
and
pop
pop
rcrb
push
mov
sbb
mov
dec
jmp
stc
jbe
dec
es
ror
push
mov
rorl
lods
mov
sahf
xor
mov
out
inc
fildll
jecxz
jae
dec
sbb
mov
cmc
mov
ja
or
sahf
ret
sbb
jecxz
pop
ds
pop
cmp
jae
xchg
mov
dec
outsb
sub
push
push
adc
out
push
cs
mov
std
jb
sub
jno
add
ss
lds
lock
les
pop
fldt
adc
pop
ficoml
pop
sub
lock
mov
repnz
mov
shll
jmp
inc
aam
jecxz
add
cmp
imul
xor
dec
mov
push
incb
add
mov
sbb
mov
xor
loope
xor
adc
mov
inc
out
ja
out
es
movsl
das
push
mov
insl
pop
cli
xor
inc
lcall
adc
nop
dec
xlat
xor
or
jp
mov
pop
add
aam
pushf
dec
cmp
imul
jo
mov
add
mov
mov
rcrl
pop
ret
mov
or
mov
or
push
pop
fadds
fs
sarl
dec
pop
pop
or
loope
sub
jl
jle
dec
and
cmp
adc
dec
add
scas
adc
inc
pop
test
mov
push
jmp
es
and
and
lods
inc
mov
xor
fcomps
lods
int3
cmc
fcmovnu
ss
insl
pushf
dec
jmp
adc
dec
loopne
jae
fisubrl
push
insb
or
lahf
fwait
add
sub
int3
push
mov
sub
popa
mov
jno
mov
jmp
sahf
pop
test
out
addr16
out
scas
sbb
ss
out
sbb
bound
dec
push
xor
xlat
sarl
dec
out
repnz
mov
ljmp
pop
lock
xlat
int3
xchg
xchg
mov
lahf
loopne
adc
cmpsb
pop
xchg
lcall
xchg
mov
cld
jo
ds
icebp
hlt
add
inc
in
jne
pop
add
aaa
dec
out
test
stc
or
call
rorl
in
stos
jnp
dec
mov
daa
leave
add
or
imul
push
xlat
sub
shll
push
jnp
push
ret
mull
jg
arpl
mov
aaa
mov
inc
or
dec
inc
xchg
lock
or
in
sub
dec
fs
dec
push
lods
dec
push
cld
pop
fimuls
push
mov
push
add
inc
xchg
stos
add
sbb
mov
pop
lea
pop
dec
or
sub
mov
addl
out
xchg
jne
js
repz
jle
fcomps
loopne
dec
mov
mov
inc
lods
cmp
sti
jne
addr16
outsb
rcll
ficomps
repz
rcll
repz
lret
xchg
pusha
adc
push
enter
sub
insl
mov
ds
popf
out
jne
jns
push
movsl
mov
jnp
dec
and
stos
lahf
je
in
imul
xor
inc
adc
jns
jae
roll
jmp
add
imulb
mov
jns
rorl
adc
sub
mov
mov
jno
jae
push
xchg
mov
imul
nop
xchg
icebp
xchg
mov
sub
dec
sbb
dec
mov
outsl
lods
mov
inc
shll
jnp
addr16
popa
ret
or
xor
cs
xchg
mov
xor
cmp
mov
repnz
loop
shl
pop
jbe
aas
push
sahf
stc
jnp
loop
or
ljmp
pop
js
xchg
ret
insl
lds
bound
dec
pop
outsl
sub
lods
inc
in
and
or
je
push
cmpsb
sbb
push
js
bound
into
aam
push
cwtl
cmp
cli
sbbb
stos
jmp
push
sbb
adc
and
xchg
std
push
les
and
lea
add
cmpsb
rclb
fbld
mov
mov
minps
mov
dec
fs
and
pop
inc
push
ss
xor
pop
pop
in
subl
loopne
fisubl
addr16
fidivrl
xchg
hlt
push
xchg
jle
daa
mov
xchg
mov
mov
inc
lea
pop
jnp
push
lods
aad
scas
jmp
stos
xlat
mov
add
mov
sti
jno
fistpl
in
into
and
jno
push
repz
jecxz
push
jg
mov
lods
scas
adc
push
mov
pushw
repz
xor
xchg
les
or
fists
adc
sub
imull
ljmp
add
lret
xchg
shl
add
mov
mov
cs
push
testl
pushf
lds
aad
mov
pop
push
or
jecxz
sbb
cmpsb
push
jle
loope
fcmove
and
jl
push
sbb
dec
in
push
leave
sbb
and
cwtl
scas
xchg
cltd
xor
fidivrs
repz
push
push
shll
mov
and
cmp
push
test
cmp
mov
or
into
imulb
outsb
fstpl
popa
dec
sub
gs
mov
jge
out
dec
and
jae
xor
lods
or
xor
xchg
pushf
xor
loopne
inc
push
in
push
nop
push
pop
mov
out
loope
pop
adc
scas
popa
cmc
adc
push
push
fnstsw
push
push
pop
das
out
dec
popa
mov
cmp
mov
and
in
xor
add
loope
adc
jo
mov
mov
pop
mov
fcom
xor
jmp
adc
in
mov
ficoms
mov
cmp
cmpsb
xlat
repz
out
mov
dec
jge,pt
mov
adc
into
in
mov
cltd
jns
daa
push
fists
adc
ss
xchg
daa
scas
adc
in
into
xor
push
xchg
mov
icebp
in
xchg
mov
icebp
gs
sbbb
les
dec
dec
pushf
dec
sbb
lret
cltd
adc
pop
mov
cmp
mov
cmpsb
mov
mov
pop
push
fabs
dec
outsl
out
mov
mov
xor
xor
sub
lock
ss
lock
imul
cltd
std
js
sub
jo
imul
jge
jno
sub
mov
push
in
mov
add
jo
pop
clc
and
xchg
in
ror
sub
pop
xchg
jno
icebp
xor
mov
inc
pop
xchg
das
xchg
setge
negl
mul
in
dec
jbe
dec
dec
mov
jp
sub
icebp
test
lret
pop
pusha
bound
jnp
lock
je
jnp
and
adc
shlb
mov
fmull
icebp
jl
mov
pop
cld
inc
dec
xor
in
in
xor
and
xchg
rorl
cmp
jp
and
xchg
in
in
push
xor
andb
mov
je
dec
push
cs
sbb
adc
pop
icebp
ja
and
add
out
jp
xchg
arpl
test
test
jae
add
popf
fnstsw
roll
ret
add
mov
pop
jbe
fcmovnu
jae
mov
stos
mov
mov
iret
jbe
cli
cltd
xchg
mov
aad
negb
shll
mov
es
mov
mov
out
mov
inc
les
leave
mov
pop
rcrb
cmp
subb
loopne
bt
je
jns
aaa
cmpsb
nop
sahf
mov
test
sbb
push
pop
mov
inc
add
stos
imulb
pop
push
jmp
iret
rcll
outsl
push
pop
xchg
mov
xor
xor
xor
mov
ficoml
pop
jl
das
sbb
iret
pop
dec
clc
fidivrs
jecxz
mov
mov
and
leave
push
mov
stc
xchg
mov
in
xchg
mov
mov
mov
pop
aas
cmpsl
xchg
cmpsl
fwait
push
cli
xor
mov
or
inc
pop
cmpsl
jns
and
aas
out
fstps
das
sub
pop
loop
or
orb
cs
push
sbbb
je
sub
jge
loop
jb
iret
imul
das
mov
hlt
adc
xor
jo
test
adc
decl
and
in
fiaddl
jmp
fwait
ja
inc
push
and
dec
and
jb
out
adc
lods
or
test
int3
push
in
mov
rcll
cld
imul
out
pop
xchg
int
pop
xlat
and
xlat
lret
dec
cmpsb
test
mov
je
shlb
sub
idivb
jl
stc
sbbb
sub
mov
cmc
orb
es
mov
js
mov
out
jl
mov
sub
call
push
cmpl
fdivl
hlt
and
cmpsb
jmp
push
mov
aam
mov
xor
stos
xor
jmp
jnp
test
mov
inc
lahf
jmp
jno
repnz
cmp
adc
mov
pushf
mov
lods
xor
std
xor
mov
mov
xchg
or
popf
mov
mov
sahf
or
dec
ret
cmpsl
loop
aas
test
dec
insl
inc
and
lea
or
xchg
data16
mov
loopne
add
mov
outsl
mov
push
xor
jns
lods
aam
add
sub
sbb
std
add
fldt
iret
ret
dec
push
push
loop
push
jbe
out
pusha
add
stos
es
xor
nop
jl
cmp
rorb
jl
dec
and
pop
inc
cld
hlt
clc
insb
stos
int3
popa
test
or
push
nop
sbb
push
mov
addl
adc
lods
arpl
pop
adc
outsb
shrl
and
pop
lahf
cmp
sbb
out
jecxz
call
in
xor
mov
rorl
insl
loop
push
or
xchg
adc
icebp
mov
push
in
mov
fcmovb
and
out
jge
imul
and
push
cmpsl
push
push
or
and
xchg
dec
cli
cmp
add
jle
test
mov
jg
loope
xor
xchg
ds
repz
or
mov
mov
je
int
sbb
push
jmp
xchg
rcrl
fmul
subl
rcrb
ss
add
insb
cmpsl
sub
jl
shll
mov
add
jp
dec
xor
leave
dec
mov
test
js
push
sub
mov
leave
mov
enter
inc
push
lds
scas
xor
in
mov
fidivs
into
inc
cmovp
dec
repz
sarl
cltd
cmp
cs
mov
cmpsw
cmp
jp
fwait
loopne
ss
pop
pop
ret
adc
test
lock
xor
test
jns
jo
push
cmpsl
jb
lds
cmp
jne
dec
lcall
and
or
sbb
cmp
dec
lods
fidivrs
jns
stos
adc
mov
mov
movsl
cltd
and
xchg
fsubrp
add
pop
cwtl
xchg
int3
mov
fisttpl
mov
adcb
add
lahf
push
xor
in
stos
inc
jp
xor
cwtl
adc
xchg
pushf
mov
nop
jne
and
push
loope
xchg
add
or
push
xorb
lods
sbb
xor
shlb
shll
mov
lret
add
iret
insb
sbb
cmp
stos
jno
fsubl
test
testb
loope
cmp
sub
xchg
lret
jae
dec
jno
dec
mov
int3
mov
sti
dec
fs
sub
xchg
scas
cmp
inc
imul
inc
xchg
out
push
loope
xor
mov
mov
inc
mov
mov
jne
mov
xor
adc
mov
leave
mov
lods
mov
fs
pop
mov
clc
leave
jbe
movsb
xchg
sub
enter
dec
int3
fdivs
rcr
sbb
cmp
mov
in
inc
add
mov
mov
sub
test
jl
dec
lret
inc
lea
pop
pop
gs
mov
loopne
scas
pop
mov
mov
mov
out
jecxz
icebp
insl
in
push
sahf
jbe
or
addr16
inc
loopne
in
pop
test
push
daa
leave
sub
dec
xchg
mov
fs
mov
dec
or
pop
sub
sarl
loope
repz
int3
xchg
jbe
adc
xor
jbe
push
popa
pop
ds
int3
add
sahf
imul
mov
pop
xchg
cmp
adc
loope
ds
cmp
or
lods
popa
add
ret
jecxz
stc
mov
jb,pt
sub
sub
mov
cmp
dec
aam
repnz
pop
repnz
mov
mov
and
les
dec
pop
bound
mov
sarb
shrl
mov
shll
aad
xor
xchg
mov
and
ficomps
fdecstp
adc
sub
add
and
xor
js
pushf
or
mov
jmp
popf
inc
inc
shrb
cmp
test
jmp
jmp
ficomps
mov
stos
adc
jecxz
sub
adc
test
jp
add
push
lret
les
dec
xchg
inc
scas
in
mov
sbb
pusha
mov
inc
push
mov
in
and
mov
cmp
pushf
mov
sub
xlat
pop
pop
mov
pop
ja
les
xor
push
or
lret
pmuludq
and
arpl
lock
or
jge
pop
shl
sub
push
jg
call
pushf
cmpsb
div
xor
push
mov
and
insb
lods
ja
dec
repnz
dec
test
cmp
xchg
sub
ret
lods
jbe
adc
jecxz
mov
pusha
sahf
mov
xchg
adc
fldl
push
inc
mov
leave
pop
inc
cli
addr16
xlat
int3
mov
fcoms
rcrl
push
jno
add
cmp
mov
mov
dec
ret
fimull
mov
stc
out
pslld
mov
xchg
shll
inc
sbb
jbe
loop
xor
xor
int
test
lods
push
lret
cmp
pop
sbb
setbe
lods
test
lods
cmp
pop
jl
xchg
sub
aas
into
xadd
mov
inc
aaa
frstor
les
jmpw
pop
xchg
orl
add
xchg
pop
mov
mov
repnz
push
lret
lock
add
test
push
jp
pop
mov
fcmovnb
jle
cli
sbbl
loopne
dec
fldt
adc
fdivrs
pop
cmp
push
dec
mov
lret
outsl
cmpsl
aad
fisttpl
pop
jo
sub
xchg
pop
mov
pop
mov
addr16
sub
shrl
xchg
mov
xchg
cmp
leave
rcll
jnp
cs
idivb
pop
shll
dec
cwtl
ret
xor
push
xchg
and
in
sbb
repz
test
lock
push
jecxz
outsl
inc
push
sahf
mov
mov
addb
repnz
cli
cmp
insb
fcom
shll
fsts
xchg
or
adc
add
orl
mov
shll
js
out
adc
mov
repnz
sbb
adc
adc
je
mov
and
mov
push
rclb
cmp
push
mov
xchg
sbb
shl
jmp
fisubrs
dec
mov
dec
cmp
in
sbb
sbb
inc
cmpsl
dec
jae
ror
outsb
gs
out
call
fiaddl
pushf
mov
fdivp
dec
ret
inc
pop
ds
jb
pusha
lods
shlb
adc
pop
cmp
fcmovb
gs
lcall
bound
into
push
jg
xor
std
push
pusha
adc
pop
sbbl
push
adc
xchg
sbb
inc
js
call
xor
clc
fsubrl
adc
rolb
std
jp
js
jp
mov
mov
cltd
push
inc
inc
mov
divl
les
jge
inc
mov
lret
adcb
popa
stos
add
pushf
mov
dec
or
push
dec
dec
sub
pop
popf
sub
push
pop
jle
cmp
or
push
iret
ljmp
orl
mov
addb
jge
mov
add
or
in
pop
test
rcrb
loopne
lock
pop
es
cwtl
pop
pop
push
xchg
xor
inc
in
mov
add
outsb
pop
sub
pop
sub
nop
lds
add
repz
pop
insl
and
mov
mov
push
mov
xchg
int3
mov
or
sti
mov
mov
pop
out
or
in
into
shll
mov
insl
arpl
imul
pushf
mov
and
jl
out
push
cmp
push
ret
fadd
push
pop
lods
sti
mov
sti
cmp
adc
in
cmp
dec
lods
imul
add
or
adc
outsl
pop
xchg
push
test
and
aas
ret
xor
xor
push
das
insl
ror
add
js
push
cli
and
inc
jle
mov
shlb
in
xchg
ds
lahf
test
pop
mov
jg
adc
jle
test
adc
in
sbb
dec
popf
push
mov
xor
xchg
popf
cmp
push
mov
sub
mov
ds
xchg
daa
scas
stc
std
mov
mov
pushf
nop
leave
ljmp
or
push
sbb
lcall
inc
push
mov
lds
xchg
add
mov
dec
shlw
mov
lret
xchg
push
pop
mov
pop
notb
std
in
js
jbe
into
add
bound
inc
pop
pushf
adc
adc
mov
test
mov
jns
add
push
loope
in
adc
jb
adc
xchg
int3
jmp
fbstp
or
and
lret
cltd
out
cld
push
mov
daa
outsb
xlat
jecxz
scas
cmp
pop
add
push
outsb
xor
mov
sti
fiadds
xchg
add
neg
in
xor
jae
pop
or
lret
mov
pop
jns
sub
rcll
or
cmp
add
mov
xor
pop
sbb
inc
ljmp
movsb
scas
sub
scas
in
in
push
pop
pop
push
sub
xor
lcall
mov
mov
mov
xchg
or
popf
movswl
push
sahf
std
test
adc
or
mov
sbb
jo
loope
insl
popf
dec
add
int3
addr16
shlb
or
pop
jns
std
aam
sbb
fs
popa
mov
xchg
xor
and
notb
in
leave
call
lcall
add
aas
push
in
inc
mov
push
cmp
xor
cwtl
jns
lods
inc
sbb
inc
adc
xor
sub
ja
jae
mov
fimuls
ljmp
push
lods
in
jne
jle
mov
mov
mov
jae
cltd
xchg
stos
xor
ficomps
lahf
mov
dec
stc
pop
out
pop
inc
sarl
aaa
roll
daa
cmp
jae
cmp
cli
sub
sbb
nop
push
lret
xchg
nop
lret
test
mov
dec
or
mov
aam
jmp
daa
xchg
xchg
into
mov
push
xor
nop
repz
sti
not
mov
adc
or
pop
popa
jge
aaa
adcl
testb
nop/reserved
push
leave
cmpsb
xor
push
push
inc
outsb
cmp
xchg
pop
jns
adc
lahf
movsl
outsl
enter
hlt
addr16
loope
jmp
rcrb
int
cmpsb
add
lret
dec
jo
xchg
bound
shrl
lods
mov
adcb
add
int
fcomi
lret
ret
nop
and
jmp
add
lods
in
les
sarl
sbb
lea
in
mov
adc
je
fiadds
cli
xchg
sbb
test
add
fists
movsb
out
xchg
mov
jbe
int
or
fcomps
and
add
lret
lcall
shll
jno
loopne
add
xor
pop
and
cmp
push
add
inc
mov
push
out
mov
push
sahf
jb
mov
enter
pop
sahf
popf
adc
xchg
add
adc
dec
mov
xchg
leave
ja
ljmp
std
es
imul
xchg
addl
repnz
ret
xchg
adc
cld
dec
xor
pop
aam
adc
sbb
pop
call
mov
pop
jne
add
xor
mov
dec
and
mov
pop
push
or
movsb
cmp
loop
hlt
and
lret
sbbl
data16
mov
scas
mov
inc
lcall
push
movsb
mov
dec
cld
roll
lret
rclb
stc
test
dec
push
mov
mov
push
roll
sub
dec
rolb
insb
or
dec
push
leave
fsubr
sbb
shrb
shlb
push
lds
jecxz
lcall
inc
icebp
sub
mov
ret
lahf
sbb
mov
and
sub
dec
jl
inc
adc
lcall
and
leave
mov
mov
or
out
or
out
jne
je
movsl
mov
es
in
inc
pop
lds
cmp
fimuls
int
pop
xchg
mov
push
lahf
mov
sbb
pop
jmp
fwait
lret
repnz
or
dec
pandn
icebp
outsb
add
jne
dec
mov
enter
rol
and
pop
xchg
mov
mov
adc
nop
add
arpl
xor
mov
and
and
js
scas
repz
dec
and
dec
inc
lahf
xchg
mov
mov
sbb
sub
inc
xchg
xor
add
cmp
push
mov
inc
mov
mov
push
ret
sbb
lret
and
mov
xchg
xor
imul
sbb
add
add
or
pop
mov
lahf
mov
sub
lcall
jbe
and
and
popa
test
xor
mov
loop
mov
sub
scas
jle
jbe
jle
jnp
js
repnz
jo
sbb
pop
sub
loop
idivl
in
lahf
xor
pusha
jnp
in
adc
xchg
inc
insb
pop
adc
jns
shl
rcrb
mov
rorl
rorl
xchg
cltd
dec
in
aaa
sbbb
notl
popa
push
int3
ret
mov
add
divl
das
jo
inc
inc
push
in
roll
das
outsb
lcall
shll
loope
adc
movsb
jno
int3
call
sbb
insl
sub
push
nop
pusha
stc
sti
add
loope
adc
lret
das
idiv
out
cmpb
mov
fwait
sti
fsubrs
adc
imul
call
mov
pop
dec
rol
add
int3
lcall
adc
imul
xor
insl
inc
xchg
pop
and
stos
or
outsl
add
dec
js
les
mov
scas
mov
mov
int
loopne
add
dec
in
movsl
ja
xor
ja
ret
jp
xor
pop
outsb
fdivrl
dec
adc
push
fisttps
pop
movsb
and
jns
daa
adc
mov
adc
jp
cmp
fmull
imul
add
rorl
add
and
and
add
pusha
rolb
ret
sti
lock
push
aam
mov
pop
mov
fildl
pop
add
xlat
adc
xor
js
fcmovu
imul
mov
sarb
out
inc
pusha
std
ret
aaa
push
cmp
xsha256
cmpsb
adc
mov
pop
jo
jmp
adc
mov
mov
shll
lods
sub
bound
pop
add
into
xchg
icebp
jae
mov
cmc
add
cmp
jno
in
movsl
add
xchg
cmc
add
lds
popl
ss
cmp
push
pop
movsl
xlat
pop
xor
jmp
jle
add
insl
mov
mov
adc
sub
mov
push
xorw
sub
xchg
insl
inc
test
mov
pop
mov
lods
sub
loopne
ficoms
xlat
dec
push
insb
insb
sbb
out
ljmp
cltd
jmp
mov
ret
mov
add
lods
jge
add
inc
out
sarb
and
jb
xchg
or
test
add
stos
pop
fdivl
mov
pop
out
inc
ret
cmp
jge
jae
mov
int3
xchg
repz
psubw
nop
adc
xlat
mov
xchg
dec
insb
dec
mov
or
repnz
out
push
pop
cld
pop
sbb
pop
test
inc
push
sbb
pop
test
ds
sar
lret
sarl
lahf
inc
movsl
fwait
in
ret
mov
and
or
and
mov
push
sti
out
lret
shrl
mov
sub
imul
xchg
div
ds
fbld
or
call
dec
cwtl
rclb
pop
sbb
rep
mov
cli
loope
mov
ljmp
push
jge
shrl
dec
mov
cmpsl
xchg
cmc
dec
movsl
stos
pushf
imul
add
stos
jnp
les
mov
inc
add
inc
aaa
mov
lds
mov
loop
or
sarl
cltd
xchg
cmc
outsl
out
mov
out
loopne
imul
popa
es
repnz
test
ret
aad
push
push
inc
xchg
jle
xor
pop
addr16
mov
fstl
dec
add
aad
adc
stos
dec
fstl
lock
pop
sub
mov
out
mov
mov
scas
lock
cltd
in
ror
stc
mov
fs
sbb
cltd
faddl
cmp
nop
shll
push
dec
vmovntpd
xor
outsl
xchg
mov
push
leave
jmp
push
cmp
sahf
cmp
lahf
sbb
cs
pusha
das
cmp
or
in
inc
stos
fstpl
lahf
and
cwtl
jb
bound
or
push
addb
xchg
dec
xor
and
xchg
in
repnz
mov
sub
outsb
fsubrl
add
cld
lahf
shll
dec
outsl
xchg
sub
and
lea
mov
sbb
jae
push
mov
cmpsl
mov
mov
cltd
mov
int
in
dec
sqrtps
push
mov
nop
xor
hlt
sbb
pop
xchg
ret
xchg
out
mov
clc
cmc
mov
jmp
shrl
sub
jg
iret
shl
add
aad
jmp
jge
out
and
test
sub
insb
pop
adc
and
adc
xor
mov
push
mov
rorl
mov
jge
jno
pop
out
enter
jle
xchg
cmp
xchg
push
clc
xchg
dec
or
stos
and
or
stos
jg
sub
inc
imul
jmp
test
cld
jno
aas
outsl
scas
les
js
push
jno
push
sub
loopne
out
add
push
sub
mov
repnz
or
adc
scas
movsl
or
xchg
jo
rcrb
ret
fxch
pop
fidivrl
aas
sub
sub
fstl
inc
mov
or
push
imul
pop
insb
sahf
and
lcall
inc
shl
mov
push
and
mov
pop
mov
rclb
mov
rorb
imul
movsl
jmp
dec
sub
fdivl
adc
add
inc
inc
enter
jns
inc
insl
stos
adc
push
xor
dec
mov
clc
pop
xchg
test
cmp
negl
ret
push
ljmp
clc
ja
scas
lret
or
lods
inc
rolb
dec
in
adc
scas
mov
in
mov
xchg
pop
inc
adc
ja
cmp
mov
cmp
pop
test
scas
push
xchg
dec
dec
sbb
xor
testb
xchg
daa
pop
xor
xchg
cmp
jp
or
add
aaa
jne
xor
mov
mov
push
fstpt
cs
fisubrs
xor
jge
test
arpl
sbb
outsl
pop
jmp
outsl
xchg
jle
jge
mov
sbb
stos
push
insb
test
dec
cmpl
inc
rcrb
idivl
mov
mov
sbb
int3
mov
cmc
pusha
mov
dec
sbb
fwait
shlb
insb
adc
aam
pop
push
je
mov
pop
cmp
inc
pop
addr16
mov
jae
scas
mov
xor
sub
lds
loope
outsl
mov
push
stc
pop
mov
sub
test
clc
push
or
dec
adc
jnp
add
setns
jbe
cmp
imul
test
repz
out
imul
mov
and
and
push
sub
cmc
sbb
jne
mov
or
mov
xchg
jbe
and
inc
push
sub
sbb
filds
nop
lret
adc
insl
sub
dec
loope
add
scas
rcrb
xor
rdpmc
data16
adc
rorl
sub
inc
sbb
sub
jmp
sahf
mov
inc
mov
push
mov
xor
and
or
jns
adc
arpl
std
sbb
mov
cld
xor
es
adc
jmp
call
cli
sti
mov
loope
pushw
cmp
imul
push
inc
dec
rcrl
mov
and
jae
mov
inc
notl
sub
and
cmp
stc
cmp
nop
mov
out
xor
mov
push
mov
out
lret
cmp
lret
ja
cmc
dec
nop
pop
sbb
out
inc
push
and
and
fcmovnu
arpl
jge
push
mov
lret
movsl
xchg
stos
movsl
mov
adc
sub
jl
dec
insl
xor
and
xor
hlt
dec
mov
inc
mov
push
jnp
add
frstor
dec
scas
mov
out
add
out
fs
add
hlt
adcl
inc
pop
jne
mov
ljmp
jl
mov
divb
rcrl
rol
xor
xor
push
imul
jge
test
mov
fimull
jne
repnz
and
fucom
rcll
ja
fsubrs
jle
insb
or
mov
xor
push
rcll
sub
call
mov
jns
pop
nop
adc
out
stc
sub
enter
jp
pusha
jl
movaps
test
and
popa
pop
das
xor
mov
sbb
mov
jo
movb
movsb
jne
imul
data16
mov
push
scas
out
outsl
cmpsl
in
inc
lret
push
push
outsb
call
out
xchg
xchg
andb
adcl
push
in
pop
xor
mov
dec
in
in
iret
push
cmp
sbb
pop
cmp
sub
sbb
mov
cltd
push
adc
pop
nopl
mov
xlat
jae
push
xor
imul
dec
lods
pop
lock
shlb
aad
icebp
stos
pushf
pop
imul
int3
lea
pusha
popa
ret
adc
mov
cmpl
mov
jnp
jle
pmulhw
add
out
xor
and
cld
popf
lock
int
inc
jmp
mov
iret
lea
jp
neg
xchg
xchg
push
addr16
jnp
lcall
xcrypt-cbc
cmpsl
adc
popf
orl
add
mov
int
repz
or
and
aas
xchg
cmp
mov
lods
mov
into
mov
mov
jp
test
cmpb
push
or
in
jge
enter
cmp
mov
add
xchg
sbb
sub
gs
fwait
cmp
test
imul
jae,pt
cwtl
sub
xchg
and
adc
jnp
aam
xchg
dec
mov
enter
aam
lock
xchg
insb
in
jb
push
jle
pop
fcomps
sarb
add
pop
js
adc
shr
inc
dec
cmc
dec
add
jp
leave
es
mov
xchg
out
xor
dec
cli
mov
cmpsb
outsl
adc
jb
push
dec
mov
xor
hlt
std
and
lret
xor
inc
dec
mov
in
pop
dec
hlt
ja
cs
xor
cmp
sbb
jbe
int3
or
and
decb
jbe
dec
cmp
push
sbb
add
push
sub
aad
sub
scas
pop
xchg
in
loop
test
xor
addr16
int
inc
add
arpl
insb
test
outsl
test
push
and
mov
push
sbb
test
pop
or
xchg
les
pop
mov
out
pop
xor
in
inc
mov
pop
fldl
add
xchg
mov
aam
sub
push
fcmovu
mov
inc
leave
and
adc
aad
test
pop
mov
subl
sar
mov
jge
imul
pop
call
cmp
sbb
jge
xchg
mov
jmp
push
adc
addr16
sbb
movsl
sbb
and
adc
pushf
repnz
icebp
add
mov
lret
mov
fstpt
icebp
daa
and
ss
out
mov
mov
or
lods
mov
int
inc
mull
bound
out
mov
imul
cmovo
xchg
iret
inc
push
pop
stos
xchg
and
sbb
mov
xchg
push
sahf
xchg
and
lcall
jno
sbb
outsl
cmc
pop
push
test
lea
mov
ret
lret
xlat
sarb
pop
imul
jno
adc
dec
fildll
fs
jns
out
cmp
rclb
mov
xchg
cmp
repz
and
lahf
mov
in
stos
outsb
mov
or
mov
sub
push
add
cli
push
rcll
jbe
fildl
sub
cld
mov
jl
imul
lds
sub
pop
jno
cmp
ss
loopne
jmp
mov
fisubs
cmc
out
inc
jno
inc
xor
pop
test
push
xlat
lahf
dec
push
inc
and
adc
push
sub
and
cmpsb
cld
gs
cmp
jno
fcmovu
sbb
add
jmp
mov
scas
xor
stc
imul
bound
in
dec
sbb
repz
ret
mov
cmpsb
hlt
test
ja
cmp
xchg
push
rcll
push
test
mov
cmpl
push
arpl
loope
cltd
push
stos
gs
mov
add
inc
or
mov
sub
sahf
push
js
addb
sti
daa
dec
inc
or
fmul
movsl
push
mov
mov
cmp
fucom
gs
mov
pop
scas
pop
add
ds
xor
pop
fidivrl
popf
pop
sub
push
mov
in
push
or
cmpsb
dec
andl
dec
int3
push
dec
sbb
cmp
bound
std
cmp
cmp
jb
lret
rorb
hlt
stc
cmp
mov
outsb
push
sbb
add
dec
sarl
ret
lret
inc
fs
xor
mov
sub
pop
and
loop
add
jae
lcall
fiadds
leave
fsubr
inc
add
lcall
mov
das
jle
sbb
inc
dec
aaa
roll
jle
add
test
dec
cmp
mov
not
and
sti
addr16
jo
dec
push
scas
pushf
dec
push
cltd
mov
mov
das
and
nop
repnz
mov
bound
inc
sub
xor
mov
iret
mov
jle
xlat
pusha
adc
into
dec
sbb
mov
stc
and
aaa
daa
inc
test
xor
sbb
cwtl
mov
fdivs
fwait
jle
leave
adc
loop,pt
repz
loope
sbb
lea
loope
xor
ja
movsl
mov
mov
and
mov
test
pop
pushf
push
sbb
jmp
mov
movsl
fistpl
push
dec
int3
cmp
add
movsl
xor
mov
pusha
add
sub
or
bound
mov
jg
xchg
stos
adcb
clc
cmc
movsb
sub
fidivs
cmp
aam
into
mov
fiaddl
mov
adc
bound
mov
shll
mov
add
sbb
mov
jns
sub
inc
xlat
adc
pushf
jbe
cli
jbe
jo
push
jp
enter
out
nop
xchg
dec
sbb
rcrb
pop
orl
in
scas
dec
push
sub
or
or
outsl
clc
andb
sub
std
mov
sub
and
pushf
inc
ret
out
mov
pop
test
test
dec
xor
test
sub
in
add
sbb
shrb
add
and
fmulp
mov
daa
test
popa
ret
mov
mov
xor
add
cmpsl
fcomps
dec
and
mov
sarb
fstpl
xchg
fistl
jnp
xchg
pushf
mov
mov
mov
incb
sub
mov
movsl
ficomps
sbb
jmp
cmp
in
push
fbstp
jns
add
mov
leave
dec
cmp
outsb
punpckhdq
dec
push
pop
aaa
imul
int3
inc
jecxz
push
mov
pop
xchg
ret
loop
cmp
test
inc
orl
pop
outsb
xor
mov
jbe
lds
mov
xlat
mov
cmpsb
push
mov
sub
add
pop
add
sar
test
cli
divl
push
adc
or
popf
pop
gs
dec
enter
out
inc
js
inc
popf
mov
scas
lods
int3
jo
movsl
adc
rcll
aad
jne
rolb
xchg
mov
insl
adc
push
arpl
lods
insb
push
mov
pushf
loop
loopne
jmp
lea
or
jne
mov
or
clc
cwtl
pop
xor
pop
sarl
inc
pop
sub
cmp
jns
cmp
ret
add
stos
dec
xlat
leave
out
arpl
or
fwait
push
xor
sub
std
fwait
inc
dec
xor
shr
sbb
inc
jb
mov
and
cmpsb
cmp
pop
leave
mov
dec
jg
dec
scas
mov
je
cmp
mov
jb
adc
mov
icebp
shll
movb
push
cmp
fisubrl
arpl
mov
and
xchg
rcrl
xchg
mov
notb
test
pop
in
xlat
mov
out
stc
mov
xor
inc
jecxz
jmp
cmp
clc
adc
sahf
pusha
lods
cmc
test
inc
arpl
lods
stc
cwtl
add
inc
popa
popf
repz
cltd
cwtl
mov
mov
or
xor
sbb
mov
dec
add
fistl
fisubrs
xchg
mov
jbe
sbbl
add
adc
shl
js
mov
xchg
adc
mov
inc
push
imul
or
push
push
mov
push
push
mov
dec
xchg
and
push
fidivrl
lret
mull
jecxz
imul
push
pop
rclb
loop
mov
sarb
mov
aam
xchg
int3
and
std
dec
inc
cmp
or
sti
subb
test
push
mov
arpl
movsl
mov
jmp
pop
xchg
mov
adc
push
arpl
cmpl
test
jle
data16
sbb
push
mov
outsl
mov
inc
fbld
mov
cmp
rcll
adc
aas
sbbl
dec
xlat
cmp
xchg
pushf
call
out
add
bound
jl
sbb
inc
inc
mov
cwtl
sub
je
rep
sti
stos
jb
adc
lea
cmp
imul
mov
mov
cli
orl
mov
adc
je
aas
incl
xchg
in
popf
sbbl
sub
pop
shl
test
cmp
arpl
lock
aaa
repz
push
scas
int
xchg
daa
jo
outsb
mov
sti
dec
pop
fwait
ds
mov
dec
imul
sbb
mov
outsl
enter
stos
mov
cmpsb
pop
inc
adc
stos
fisubrs
outsl
and
sub
les
mov
aad
and
and
lock
xor
push
ds
test
out
jbe
jae
sti
adc
cmp
mov
call
outsl
pop
out
imul
std
adc
sti
pop
jae
dec
xchg
into
jno
das
push
imul
sub
test
mov
int3
movsb
insb
fsub
out
loop
sarl
icebp
out
fisubl
insl
xchg
inc
mov
rcll
mov
fsubs
add
scas
xchg
mov
add
lret
imul
movsb
insl
fdivs
sti
in
aaa
int3
loope
cmp
out
insb
push
sbbl
push
jns
movsl
inc
outsl
xchg
lahf
dec
inc
xchg
sub
mov
out
outsb
int3
fmuls
xchg
mov
sbb
pop
dec
fildll
call
push
push
iret
out
mov
cld
sbb
in
cmp
shlb
push
dec
movsl
adc
movsb
sbb
mov
jae
bound
and
stos
je
cmc
imul
inc
outsl
cmp
sbb
testl
mov
cli
scas
jne
or
es
movsb
addb
push
pop
lock
cs
popf
imul
out
and
push
lret
out
push
cmp
inc
sbb
test
mov
jge
xor
sub
dec
aad
dec
cmpsl
cltd
aas
scas
sub
sub
jl
inc
mov
lahf
repnz
loopne,pt
fadds
inc
sahf
xchg
sub
push
xchg
pop
fwait
outsl
or
inc
jbe
repnz
xchg
push
push
ljmp
mov
rcrb
mov
push
aad
out
mov
popf
insl
popa
outsb
pop
imul
ss
xchg
setg
add
and
xor
test
aam
sub
sbb
jecxz
add
cwtl
xor
lock
xchg
in
js
faddl
inc
jae
pop
or
jecxz
mov
sbb
xlat
push
inc
mov
mull
in
jmp
pop
cmp
or
in
cmp
das
xlat
es
mov
fidivl
jo
pop
jmp
popa
dec
xchg
lahf
stos
nop
mov
cmp
cmp
scas
stos
jg
out
inc
pop
and
ljmp
ret
jo
lahf
mov
xchg
cmpb
pop
jno
pop
addl
testl
jae
xor
xchg
faddl
mov
xchg
clc
repnz
sarb
notb
push
fdivs
test
out
aad
ja
js
arpl
iret
sub
sub
pop
push
push
xorb
popf
int3
or
ret
popa
and
mov
jmp
xor
dec
imul
leave
shl
call
addr16
pusha
push
fnstcw
jl
xor
inc
shlb
xchg
dec
lods
sbb
fwait
aas
jno
lods
fistpl
jo
testl
aas
shrb
fwait
test
subl
sub
insl
call
leave
stc
jecxz
test
jnp
pop
jmp
cmp
sub
stos
mov
push
ret
dec
aas
movsb
or
call
mov
adcb
push
and
mov
or
fisttpll
lods
cli
push
mov
movsl
jle
sub
push
pop
jmp
mov
sbb
cld
push
outsl
out
push
sub
adc
ficoms
mov
push
cmp
fisubs
jno
xchg
aad
popf
inc
movsl
out
cmpsl
rcl
in
xor
fsubrl
jne
les
sti
cmc
push
popa
lret
mov
adc
mov
add
pop
sbb
jmp
jmp
push
cmp
mov
ds
sbb
aaa
sub
sbb
push
hlt
psubsb
add
xor
das
loope
mov
inc
call
dec
clc
shlb
cmp
lea
mov
mov
aad
mov
fidivl
or
sbb
xor
popf
sbb
mov
fistpll
faddl
aad
mov
jge
sub
inc
sub
or
jmp
ret
mov
push
popa
xchg
lods
mov
add
insl
movsl
shlb
inc
add
aad
add
push
loop
vpsubw
push
je
insl
dec
mov
in
subb
dec
jmp
sub
gs
xchg
rolb
jo
mov
sbb
int
fcoml
jp
sub
mov
mov
xor
xor
aad
frstor
jns
int
das
cmp
dec
lcall
and
xchg
push
or
push
cmc
jp
sarb
lcall
xor
or
add
ret
out
cmc
mov
xor
mov
pushf
mov
jmp
pop
add
inc
pop
jmp
repz
push
xor
jecxz
sbb
in
in
loop
mov
or
and
add
aad
addr16
mov
sub
add
lcall
pop
mov
out
lahf
loope
push
dec
mov
xchg
xchg
int3
jl
mov
adc
lret
rcrb
loopne
sahf
shlb
movsb
pop
jge
pop
add
ret
jmp
pop
aad
jae
and
fstpt
jle
add
cmp
std
enter
jo
ss
or
leave
and
sbb
push
lret
xchg
pop
int3
arpl
icebp
sar
data16
ret
pop
jmp
push
push
in
dec
icebp
ja
dec
jae
shl
jmp
subb
and
or
ljmp
add
adc
jno
arpl
sub
adc
lcall
jb
mov
cmpsb
inc
xlat
xchg
scas
adc
mov
mov
lret
in
jnp
in
dec
pop
mov
movsb
and
cld
scas
aam
push
ret
add
xchg
push
adc
mov
cwtl
add
inc
gs
mov
sub
jecxz
aam
stos
mov
mov
mov
sbb
es
pop
adc
ljmp
loop
ja
out
insl
or
add
pusha
cmp
insb
mov
aam
jl
sub
fwait
xlat
mov
aam
cmp
fidivl
in
jbe
das
imul
rcl
push
out
fnstcw
loopne
inc
arpl
jg
int3
out
lea
aaa
jecxz
lods
fs
cmpsb
shl
divl
ljmp
dec
sbb
or
stos
mov
cmp
xor
shr
xchg
ret
and
lods
adc
arpl
clc
xlat
dec
ss
fimull
enter
mov
fwait
fwait
shr
icebp
dec
dec
iret
test
mov
adc
cmc
or
push
stos
addb
leave
int3
test
flds
sub
out
cmp
lahf
or
dec
or
cmpsl
jg
xor
sbb
mov
pop
fldcw
inc
in
out
mov
mov
xchg
dec
jnp
pop
xchg
idiv
imul
lahf
movsl
inc
jbe
repz
jle
dec
ljmp
mov
repz
jae
mov
mov
pop
add
mov
mov
dec
add
ja
sub
ss
mov
mov
in
mov
mov
cmp
cmp
mov
and
gs
data16
sbb
lock
mov
push
cli
pop
out
xchg
aas
insl
lods
xor
subb
dec
fs
and
rcll
mov
scas
aam
adc
jo
mov
pushf
cmpsb
rcrb
pop
or
sub
sarb
xor
inc
push
incb
mov
add
and
in
add
icebp
and
push
push
test
cmpsb
jg
cmp
addr16
mov
cmp
mov
dec
ret
daa
sbb
and
gs
jge
xor
adc
mov
cmp
cwtl
add
sbb
ljmp
or
into
dec
ficoml
fdivrp
mov
push
cmp
xchg
jmp
enter
push
jge
adc
leave
and
cmpsb
ja
jns
xchg
ret
cmp
stc
push
movsl
fsubs
jb
hlt
xchg
dec
jge
das
jne
mov
cmp
fimull
xor
xchg
inc
je
mov
mov
add
in
xor
ds
in
shr
mov
jns
sbbb
push
inc
or
fnstcw
fstpl
push
inc
repz
cmp
into
mov
fs
scas
xor
xchg
pop
cltd
outsb
adc
aam
aad
xchg
aad
fwait
pop
dec
ret
repnz
orb
dec
dec
clc
jb
mov
mov
add
inc
rorl
clc
mov
ss
lods
in
push
shl
dec
jg
dec
dec
cmc
data16
jae
cmpsl
inc
jno
xor
pop
int
icebp
and
in
push
rolb
test
pusha
push
shll
push
ja
or
dec
lock
clc
insl
xchg
int3
fwait
add
push
test
mov
ds
bound
jns
mov
ficompl
dec
out
lret
ljmp
inc
lea
pusha
xchg
mov
out
movsb
sbb
imul
cli
loopne
or
imul
or
loope
mov
pop
push
jns
out
xor
and
xor
test
xor
pop
fists
push
push
insl
cltd
sbbl
fwait
pop
sub
in
nop
scas
imul
and
shlb
jge
leave
sub
aas
mov
in
lret
test
ret
xchg
push
pop
or
mov
test
adc
inc
insb
sbb
mov
es
je
jle
enter
lods
xchg
inc
dec
insl
lret
iret
push
imul
movsl
mov
xchg
xchg
cmpxchg
cltd
idivb
clc
add
imul
dec
iret
xlat
jg
mov
movsl
adc
xchg
inc
add
in
mov
and
mov
mov
jno
lods
or
adc
xchg
test
sarb
pop
adc
ret
imulb
jmp
loopne
imul
sub
jns
cmp
ja
test
shl
push
inc
adc
xchg
xchg
fcmovu
cmp
sar
mov
inc
add
scas
fucom
mov
xor
inc
lret
inc
inc
fdivr
pop
pusha
inc
sub
fnstenv
pop
popa
nop
xor
ret
adc
cli
insl
mov
loope
inc
popf
insb
std
and
lock
push
lcall
jo
mov
leave
lods
push
in
pop
shl
xchg
loope
imul
maxps
adc
xor
xchg
fcomps
mov
push
mov
lret
mov
ret
mov
mov
sub
bnd
push
sti
adc
mov
repz
hlt
movsb
mov
sub
cld
ret
fsts
dec
fistpl
cmp
bound
ret
sub
pop
test
xor
mov
fldenv
push
addb
pop
outsl
popa
gs
add
mov
loopne
adc
addb
dec
xor
inc
inc
flds
std
mov
inc
inc
fidivl
pushf
fsubl
int
cmpsl
add
popf
pop
mov
pop
mov
sub
mov
lods
inc
cs
push
fwait
fwait
lret
xor
insl
dec
in
inc
and
outsl
mov
dec
dec
add
mov
pop
fabs
sbb
mov
push
dec
test
repnz
jns
es
shrb
mov
fadds
ds
test
insl
or
xor
and
test
dec
pop
xor
clc
push
push
scas
xor
bound
aaa
rorl
pop
fsubp
pushf
add
insl
xchg
or
das
ds
outsl
aad
mov
scas
rcl
cmpsl
rcr
cld
cmp
orb
dec
imul
aas
test
sti
push
popf
xor
mov
movsl
clc
loopne
cs
cmp
call
fcoms
test
inc
ret
les
test
loope
push
xorl
pushf
daa
les
popf
xlat
or
repnz
add
sub
or
addr16
inc
in
xor
fwait
inc
loop
test
leave
cmp
adc
xor
add
jb
push
pop
outsl
xor
fnstcw
jbe
dec
cmpsb
or
insb
mull
test
pop
sub
sahf
js
cmp
sti
shrb
ret
pop
mov
repnz
push
lods
inc
inc
jmp
mov
xchg
adc
push
xorb
xor
shlb
fildl
ja
adc
in
aaa
mov
lods
fstpt
mov
inc
sbb
test
xchg
jns
test
negb
cmp
enter
nop
cld
cltd
lock
lds
inc
pop
push
mov
movsl
test
fs
dec
popf
shrl
test
stos
and
adc
push
nop
push
adc
subl
pop
cmp
add
xchg
mov
sbbl
xor
xlat
xchg
adc
push
sub
into
addb
ss
sbb
lcall
xchg
jge
cmp
xorl
stos
jae
or
sarb
mull
jnp
nop
push
leave
out
pop
packuswb
xchg
fstl
bound
repz
nop
adc
cltd
mov
dec
enter
adc
movsl
movsl
mov
je
push
fiaddl
sub
xchg
xchg
fldenv
outsb
jb
aam
daa
leave
daa
dec
sahf
jmp
fisttpl
pop
pop
aas
ljmp
icebp
mov
sbb
das
fidivrl
xchg
cmp
inc
mov
js
jb
call
inc
mov
sbb
mov
xchg
mov
push
jg
xchg
and
pop
jp
in
hlt
pop
add
aaa
cmpsb
pop
test
frstor
xchg
stos
sub
aaa
sbbb
inc
add
stos
fistps
fsts
sarl
dec
jns
pause
pop
jns
adc
repnz
mov
xchg
cmpsb
out
mov
inc
icebp
jecxz
enter
insb
les
push
movsb
cld
mov
add
stc
loopne
cmp
ss
int3
stos
sub
jbe
cld
ret
shlb
push
sbb
adc
adc
test
movsl
sbb
test
cwtl
jmp
pop
push
frstor
adc
mov
jnp
popa
xchg
pop
sbb
je
push
int3
pop
pop
cmp
dec
test
jl
movsl
adc
xchg
xor
loopne,pn
inc
fildll
pop
or
scas
sub
stc
mov
push
je
test
and
cmpsb
cmpsl
jp
out
lea
fdivl
jg
sbb
fsubp
popa
movsl
movsl
jmp
and
push
test
add
adc
fimull
inc
push
ret
mov
in
and
js
sbb
js
ss
pop
int3
pop
push
lahf
push
inc
fsubrs
sarl
icebp
add
insb
add
gs
aad
pushw
mov
call
cmp
movsl
mov
xchg
fdivs
arpl
xchg
pop
cli
sahf
cmp
ret
ror
pop
cwtl
shrl
push
jno
sbb
xchg
jecxz
outsb
xlat
jbe
xor
leave
push
and
pop
cld
loopne
cmp
cwtl
lret
mov
ljmp
or
sub
loope
testl
push
and
pop
adc
aaa
jp
jno
shlb
call
imul
or
aas
loopne
out
fldl
jle
or
les
repnz
or
mov
xor
cmp
mov
testl
mov
jge
or
rep
xor
stc
pop
mov
aaa
lret
add
push
add
jbe
push
pushf
inc
add
leave
lret
dec
out
xchg
arpl
cmp
or
adc
repz
cmp
xor
pop
dec
js
xor
push
jl
stos
pop
cmp
xchg
adc
inc
mov
jns
test
inc
rclb
pop
cmpsl
cmp
test
into
push
mov
sbb
mov
sub
cltd
je
into
sub
cmp
push
rcl
sbb
movsb
pop
outsb
push
mov
mov
scas
lret
gs
hlt
stos
outsb
int
das
sub
mov
outsb
das
inc
or
test
insl
arpl
ja
nop
iret
xchg
cmp
out
cmpsl
mov
xchg
test
jmp
aad
adc
cmp
imul
bound
fildl
jbe
xor
cmp
stc
mov
jg
sub
and
mov
lahf
nop
push
mov
outsl
gs
fwait
das
push
xchg
hlt
xchg
mov
sar
add
mov
scas
mov
adc
pop
ljmp
xor
add
and
cli
outsl
pop
and
int
dec
pushf
pop
inc
hlt
cmp
xchg
jno
dec
lods
dec
aam
clc
jo
inc
call
stos
sbb
mov
xchg
std
push
rolb
loop
fldl
lcall
or
leave
or
mov
fisttpll
es
dec
lcall
sub
and
lsl
mov
addr16
in
jnp
xchg
sub
cli
cmp
push
push
or
jae
or
mov
call
mov
or
xlat
rcl
xchg
mov
jge
adc
rol
lcall
sub
sbb
inc
rcrl
dec
xchg
sahf
push
jecxz
imul
repz
repnz
out
xchg
loop
cltd
loope
cld
lret
hlt
jbe
inc
mov
movsb
mov
aam
inc
cmp
inc
mov
mov
mov
bound
jecxz
mov
fisubrs
lcall
xchg
jp
xchg
movsl
xchg
repz
inc
mov
adc
pop
jb
lahf
scas
cmp
pop
xor
mov
add
sub
sti
xchg
mov
push
cmp
out
mov
out
andl
stos
nop
cwtl
dec
push
sub
filds
cld
push
test
cwtl
lods
sbb
push
or
cmp
dec
adc
bound
pop
mov
cmpl
cltd
push
pop
repz
mov
ljmp
lea
aas
out
jnp
mov
sub
xchg
sbb
stos
mov
fwait
push
fs
lock
call
dec
pop
stc
pop
loop
stc
dec
mov
inc
lret
or
adc
clc
push
push
or
out
mov
sub
adc
out
mov
xor
pop
jge
mov
pop
jnp
inc
xchg
xchg
add
xor
mov
in
je
dec
lods
adc
lock
pop
and
or
inc
xor
push
test
add
push
call
hlt
xchg
js
mov
int3
inc
push
pop
mov
cmpb
jl
orl
and
cmp
lret
xor
sub
jg
in
addr16
sub
pop
push
das
cmp
int3
pop
sti
incl
mov
cli
push
dec
and
test
je
inc
lcall
sub
dec
inc
dec
addr16
sub
cmpsb
mov
dec
movzbl
xchg
jp
test
int3
jb
lea
mov
add
ret
lret
lods
btc
into
insl
arpl
stos
push
into
addr16
xchg
xchg
mov
add
ss
incl
imul
call
push
repz
sbb
jbe
bound
and
ss
pop
lcall
adc
and
call
xor
inc
aaa
sub
fmull
mov
pop
inc
cmp
outsl
gs
iret
subl
xor
jmp
ficompl
dec
jo
jecxz
pop
jne
andb
add
lods
in
dec
das
xor
mov
fwait
fs
sub
add
adc
sbb
or
icebp
mov
jns
or
sub
push
pop
add
insl
fcmove
mov
jl
inc
movsl
and
lret
sarb
and
cmp
out
xchg
fsubs
inc
shrl
repnz
or
add
push
mov
leave
mov
push
push
sub
in
push
cmp
inc
mov
mov
xchg
arpl
or
or
xchg
jb
mov
add
mov
xchg
cli
push
sub
filds
adc
xchg
dec
sar
mov
divl
pop
xchg
mov
lcall
test
loope
arpl
pop
jge
aad
cvtdq2ps
js
sahf
pop
outsb
sti
lcall
test
adc
sub
fwait
cmpsl
mov
cli
sbb
sahf
push
stc
fidivl
cmp
add
xor
sbb
rcll
roll
js
sbb
adc
mov
and
fwait
adc
pop
ss
fucomip
inc
mov
push
aad
repnz
sub
cs
clc
fistpl
insl
xchg
ficoml
fstl
mov
aad
adc
adc
pop
add
and
and
and
fisubs
push
pop
xchg
sbb
rorb
test
int
fidivrl
mov
aad
dec
out
and
jbe
jmp
xlat
into
sub
cmpsl
add
lcall
test
sub
test
and
call
in
sub
inc
aaa
mov
daa
in
mov
pop
mov
mov
adc
cwtl
aad
arpl
or
enter
sub
pop
imul
cld
jg
lahf
shl
xor
xchg
xor
paddb
xor
push
adc
andl
icebp
pop
or
dec
pusha
xchg
mov
repz
loope
js
pop
repz
lret
test
leave
loopne
testl
clc
push
cli
aaa
xor
aaa
stc
repnz
notl
push
mov
cs
pop
fs
jb
and
sub
insl
pop
sbbl
add
and
push
pushw
cmp
inc
adc
jl
sbb
push
pop
jmp
scas
lock
imul
cli
imul
mov
cwtl
test
xor
or
pushf
mov
xchg
out
in
aam
scas
or
jo
mov
inc
push
mov
es
ffree
pop
sbb
push
sub
enter
into
mov
add
cmp
mov
outsb
add
sub
dec
loopne
xor
rcrl
repz
test
mul
inc
xor
cwtl
mov
mov
cld
leave
stos
mov
inc
repnz
dec
stos
sub
lahf
loop
xor
dec
rclb
xchg
aaa
mov
inc
push
push
xor
pop
in
insb
xchg
call
inc
test
fxtract
push
movl
repnz
sbb
and
cmpsl
push
mov
cmpsb
iret
in
push
jle
loopne
xchg
jmp
pop
dec
jns
repz
mov
lret
cmp
insl
cmp
mov
in
enter
inc
xor
mov
push
fidivs
test
iret
aad
push
stos
xor
inc
sahf
nop
fildl
imul
je
in
aam
imul
insb
pop
cmp
loope
dec
inc
xor
sti
stc
stos
loope
subb
mov
adc
mov
fs
std
stos
stos
fidivl
jle
xchg
push
push
mov
testb
in
mov
dec
inc
call
mov
jle
into
imul
xchg
pop
loope
sbb
jno
loop
cli
push
pusha
lea
pop
mov
out
rcrl
repz
in
cli
mov
cmpsl
jb
cli
lahf
xchg
movsb
sub
or
inc
sub
mov
push
ja
sarb
cli
insl
pop
aaa
clc
into
leave
jl
decl
mov
or
mov
adc
pop
fmuls
mov
bound
mov
imul
jns
mov
adc
ret
into
fistpl
mov
imul
sar
push
xchg
shll
dec
xchg
pop
sub
mov
xchg
pusha
into
fbld
or
mov
jmp
push
gs
scas
xchg
mov
call
inc
push
mov
cmp
pop
pop
stc
and
imul
mov
and
and
xor
jp
sbb
jge
cmp
mov
fmull
aas
hlt
cmc
xor
testl
xchg
jmp
fmuls
sub
inc
xchg
inc
sub
jae
push
xchg
mov
inc
cmpl
jno
pop
or
sub
dec
mov
ret
mov
imul
test
fsts
in
sahf
pop
push
pop
bound
cmp
out
insl
inc
enter
mov
mov
and
cltd
mov
fidivs
pop
push
lret
rclb
adc
add
stos
inc
rcr
or
sarl
aas
jg
push
and
sbb
cli
call
xchg
jo
mov
cli
dec
pop
ss
mov
scas
jmp
mov
and
pop
cwtl
xchg
mov
mov
cmp
adc
xchg
jg
dec
mov
fincstp
insb
or
cld
pop
mul
sbb
jmp
les
jno
pop
ds
xchg
test
mov
add
fisttps
jae
push
ds
in
pop
cmpsb
ret
test
mov
rcll
mov
cmp
xchg
xor
and
inc
pop
pushf
hlt
in
into
and
jp
xor
lret
mov
cmp
push
add
pop
mov
xor
pop
cmp
lods
xor
or
push
mov
lcall
std
js
lea
iret
out
and
add
inc
fiaddl
mov
add
dec
or
add
addr16
push
sub
sub
xor
aam
pop
sub
test
clc
scas
js
data16
sub
sti
or
jae
lods
fldl
inc
ja
test
popa
adc
xchg
orb
jno
pop
loop
jno
jno
sub
sti
mov
jmp
cmp
cmpb
enter
pop
or
insl
push
loop
mov
popf
and
repnz
hlt
outsl
shlb
jnp
xchg
inc
repz
ret
pop
cmp
lret
and
cmp
add
repnz
mov
pop
jae
cmp
popf
cmpsb
repnz
add
sub
push
push
add
mov
out
sbb
dec
popa
sbb
mov
pop
cmp
test
bound
cs
outsb
jecxz
push
pop
orps
dec
and
test
dec
dec
xor
mov
and
push
jne
std
sarb
push
jle
in
pop
sar
in
sbb
loope
adc
mov
xor
nop
jae
push
mov
push
lods
inc
push
ror
sub
jb
pusha
jns
ucomiss
sarb
mov
clc
xchg
mov
insl
and
movsb
mov
insl
jo
sub
add
addl
test
sub
enter
mov
ja
leave
cwtl
popa
push
notl
jp
push
cmpsl
inc
sar
mov
scas
xor
outsb
mov
mov
inc
mov
cmpsb
neg
mov
loopne
sti
mov
jno
push
jle
fdivs
or
and
enter
insb
lods
xor
inc
rcr
mov
sti
mov
and
pusha
inc
and
aad
dec
stos
jns
ret
call
push
jne
push
mov
adc
ds
pop
shr
pop
pop
pop
aaa
adc
mov
test
push
je
popf
mov
push
aas
pop
xchg
sbbb
lcall
loop
sub
enter
inc
jne
test
loope
pop
aam
dec
in
adcl
xchg
pop
cli
ret
xchg
dec
mov
leave
jns
cmpsb
loop
sub
jg
out
mov
pop
arpl
notb
mov
leave
insl
xchg
subl
xor
iret
cmp
gs
lods
test
mov
push
test
out
xchg
or
pop
xchg
sbb
gs
jb
fnstsw
int
push
cmp
fdiv
ret
xchg
xchg
sbb
fsub
aaa
movsl
push
adc
and
dec
cmp
and
aas
sub
mov
pop
scas
in
test
fmul
and
mov
insl
or
jns
stc
pop
mov
mov
xchg
add
adc
loop
dec
js
mov
fnstenv
movl
inc
xor
mov
fmull
testb
pop
push
std
lea
scas
repnz
mov
test
mov
test
or
dec
push
fnstcw
sub
jg
mov
xchg
cmp
iret
xchg
add
rorb
jb
pusha
jnp
or
mov
loope
cltd
cltd
and
data16
xchg
rcl
js
fidivrs
int3
push
sti
or
dec
fs
cmpsb
subb
jecxz
imul
cmovo
orl
and
add
in
inc
jg
jl
aad
fwait
sbb
mov
fs
cmpsb
pushf
push
in
mov
cmp
test
or
jb
dec
es
idivl
test
sbb
mov
sub
ds
pop
mov
push
sub
clc
sbb
jno
into
negb
mov
faddl
mov
jmp
lods
mov
mov
add
mul
adc
mov
push
into
fnstcw
mov
cmp
sbb
fdiv
mov
jg
mov
xchg
lods
test
add
shll
sub
xchg
subb
lock
push
fisubrs
idivb
and
and
in
fwait
xchg
lock
jae
jl
bound
movsb
and
ret
add
int3
mov
shl
xchg
out
insb
test
or
add
push
inc
mov
insb
pop
xchg
mov
and
mov
xchg
mov
lcall
mov
dec
push
jg
cmp
pop
sub
dec
and
pop
nop
cld
jle
out
pop
out
and
gs
push
mov
lret
andb
mov
adc
cltd
lahf
test
mov
test
mov
out
inc
sub
cmpsb
stc
imul
dec
mov
sbb
mov
xchg
lock
stos
lret
push
cmpsb
cmpsb
sub
into
jmp
mov
repz
popa
aam
adc
sbb
lock
in
push
dec
fisttpll
movsb
pushf
in
fistpll
in
stc
leave
daa
call
dec
gs
mov
imul
out
inc
push
stos
xchg
lods
sbb
cli
test
loope
lock
xor
jb
call
test
mov
in
and
js
out
les
pop
push
cld
into
jecxz
sub
ficoml
imul
cmpsl
add
xor
mov
jo
inc
jne
xlat
fcmovnu
sub
ja
fisubrs
fnstsw
test
sbb
sbb
pusha
jno
sub
sbb
mov
pop
into
data16
rorb
jmp
sarb
jnp
xchg
call
repnz
dec
mov
mov
adc
cltd
push
sub
dec
rolb
mov
aad
or
bts
lahf
sub
out
clc
sbb
ljmp
out
shlb
sahf
mov
mov
fwait
push
cmc
push
push
mov
jae
sbb
push
mov
xchg
hlt
pop
incb
push
incl
jnp
pop
xor
mov
sub
daa
mov
notl
cmp
js
pop
mov
jo
xchg
jno
mov
mov
bound
xor
mov
pushf
dec
lret
xchg
or
outsl
push
aam
je
mov
out
test
xchg
inc
jl
into
xlat
pushf
outsb
cmp
xor
pop
sbb
js
jp
fisubs
cli
movsb
and
xchg
ds
jb
push
out
jge
repz
push
jg
adc
cltd
dec
add
ficoml
pop
insl
xor
outsl
mov
rcl
lods
subl
sbb
mov
add
into
xor
mov
sbb
dec
sbb
rolb
les
push
push
pusha
out
lahf
and
cwtl
pop
mov
adc
loop
out
fld
outsb
aas
popa
mov
sbb
bound
pop
popf
imul
shll
sub
aad
push
add
fnstsw
xlat
jb
jb
or
loopne
cmp
cs
std
jo
jmp
stos
ret
pop
ss
jno
mov
out
and
inc
lock
jle
mov
cmpb
fwait
pop
add
sbb
imul
push
out
adc
sub
test
movsb
mov
push
pop
pop
mov
fsubrs
cmpsb
pop
hlt
in
cs
rclb
pop
or
xchg
in
mov
mov
cmp
fcompl
out
mov
add
pop
repz
xchg
cmp
lods
ret
dec
and
inc
outsl
in
lcall
imul
lods
inc
jb
out
mov
push
add
xchg
in
pop
add
mov
sub
inc
mov
push
adc
shrl
cli
mov
scas
repnz
icebp
cli
in
xor
fnstcw
jnp
insl
xchg
call
aas
sub
push
jns
push
out
popf
ror
xor
inc
in
jg
stos
insb
pop
cmp
insb
cld
pushf
js
jl
mov
push
mov
mov
xchg
mov
je
repnz
hlt
cmp
ficompl
sbb
sbb
dec
dec
and
adc
movsb
pushf
cmp
outsl
cmpxchg
pushf
mov
cmpsl
jge
arpl
cmp
xor
mov
out
cmc
cwtl
repnz
and
mov
sbb
divb
decl
fidivrs
sub
jp
xchg
addr16
lock
movsb
mov
mov
pop
stos
ret
out
clc
mov
daa
sarb
call
push
js
in
mov
push
mov
icebp
sbb
sub
fists
orl
xor
daa
nop
jnp
mov
out
mov
dec
or
mov
and
sbb
mov
jno
xlat
adc
outsl
mov
les
adc
sub
in
mov
out
mov
xor
dec
inc
outsl
js
inc
repnz
dec
das
sub
sbb
cltd
mov
push
cmp
leave
sahf
loopne
adc
jns
inc
mov
fisubrs
sbb
push
push
xor
sub
jecxz
bound
shrb
jle
xchg
test
mov
pop
push
lods
mov
add
sub
adc
mov
into
cli
ret
sahf
popa
add
mov
and
sbb
xchg
int
sarl
fwait
mov
and
icebp
fdivr
jno
movsl
push
mov
cmp
lret
sti
ret
js
inc
mov
scas
insl
adc
push
jecxz
cmpsl
daa
or
fadd
xor
hlt
and
out
shlb
rol
stos
dec
stos
jecxz
sahf
int
sbb
repz
pushf
and
pop
push
dec
movl
fisubl
xchg
sbb
xor
push
pop
and
cmpsb
and
xor
popa
and
xchg
mov
gs
lock
pop
loop
sbb
pop
test
ret
pop
lea
orb
inc
sub
testl
xchg
push
cmpsl
jg
test
cwtl
xor
adc
push
sub
outsb
mov
test
loope
jle
cmp
repz
cmpsl
sub
push
stos
xlat
int
cmpsl
sahf
dec
xchg
scas
sub
pop
out
adc
fildl
xchg
jmp
sbb
rcrb
mov
pop
icebp
cld
in
mov
mov
push
mov
and
xor
lahf
stos
sahf
out
ret
cmp
add
dec
insb
arpl
sbb
dec
cli
and
sub
jg
pusha
xchg
pop
xor
cmp
call
or
out
addl
in
dec
mov
add
inc
ja
pusha
stc
sbb
aas
mov
sub
push
push
sti
int3
pop
cmc
sbb
rorl
add
arpl
fyl2xp1
add
shlb
cmc
and
mov
inc
dec
xor
sub
ret
mov
ss
loopne
mov
fwait
lods
ret
sub
fisttpl
jns
pop
xchg
dec
imul
movsl
out
sbb
sub
push
mov
fstl
push
push
fstps
out
mov
dec
shrl
dec
ret
lea
dec
mov
adcb
xorb
lret
mov
aad
pop
or
push
icebp
aaa
pop
loopne
sbb
and
mov
pushfw
push
jne
mov
mov
xchg
daa
fistpl
addr16
fdiv
mov
sbb
jns
xor
sbb
aas
jecxz
sub
pop
sub
xchg
dec
repz
imul
sub
cld
out
pop
dec
push
adc
xchg
adcb
xor
fldl
sbbb
fdivrs
pop
mov
xor
stos
decl
sub
fs
jge
orb
jne
jg
scas
jmp
out
es
and
and
lds
adc
int
ret
xchg
mov
out
dec
push
push
dec
and
out
test
hlt
xor
xchg
ds
gs
push
std
je
sub
fwait
mov
jbe
cmp
inc
fildll
sub
jb
mov
push
jns
add
fwait
push
shll
in
dec
pop
xor
add
scas
pushf
xchg
pop
icebp
pop
add
xor
cmp
fucom
lahf
push
cs
cmp
jp
stos
mov
xor
outsb
movb
mov
pop
shrl
aaa
lods
push
stc
inc
popf
daa
das
mov
pop
add
jbe
sbbb
lock
movsl
outsb
ss
lds
xchg
loope
inc
les
test
rcr
mov
and
loopne
dec
je
xchg
outsl
mov
jns
cld
push
mov
aam
fpatan
in
and
mov
pop
push
jecxz
sarb
imul
jge
inc
dec
ja
and
push
and
in
push
test
sub
sbb
cmpsb
mov
sarb
sbb
pop
idivb
sub
sbb
jb
stos
call
insb
add
lcall
adc
enter
xchg
pop
clc
int
insl
lea
test
in
adc
lcall
in
or
out
loope
push
push
aas
mov
push
mov
jge
outsl
adc
inc
in
mov
pop
mov
jle
pop
popa
out
xchg
loopne
sub
sbb
aad
sub
icebp
test
mov
ret
in
sti
loop
lods
cwtl
fiadds
ficompl
and
xor
inc
cmp
xor
daa
pop
je
cmp
repnz
inc
ret
xor
xchg
add
and
push
lret
movsb
sub
pop
jb
aad
pop
rclb
pop
push
ret
or
fs
xchg
xor
lods
cmc
test
lds
jnp
stos
xorb
pusha
loope
or
push
in
int3
scas
push
test
mov
cmpb
or
insl
mov
mov
cmpl
dec
stos
fwait
inc
pop
jne
pop
es
sub
fstl
lahf
sbb
jnp
leave
and
out
inc
jge
sub
or
mov
and
dec
mov
xor
xchg
sub
lahf
xor
add
les
jecxz
xlat
pop
dec
pop
cwtl
shll
mov
pop
xchg
mov
sar
movsl
fcoml
dec
inc
push
pop
adc
and
aas
push
xor
mov
insl
cmp
xchg
pextrw
pusha
adc
cmp
dec
popf
icebp
or
int
fwait
mov
mov
mov
jp
push
in
adc
fucomi
mov
sub
cwtl
in
lea
xchg
in
int3
add
test
sub
mov
mov
arpl
test
cmpsb
testb
mov
pop
sbb
mov
xchg
cmp
lret
cmp
pop
cmpsl
ret
cmp
xchg
test
push
push
clc
jg
test
sub
gs
push
icebp
lods
cmp
and
pushf
loope
inc
dec
leave
mov
pop
mov
mov
push
pop
cmpsl
and
loopne
mov
ret
lcall
data16
fwait
inc
push
sbb
xchg
sbb
stos
call
cmp
mov
fs
sbb
fisubrs
or
into
shrl
imul
xlat
xchg
mov
orl
fsubrl
cmp
mov
xchg
es
lods
pushf
lcall
imul
dec
enter
lret
test
xchg
out
xchg
out
insl
cmpb
stos
repz
cmp
dec
lahf
or
pusha
jp
mov
or
add
scas
cmp
xchg
adc
rcr
in
dec
sbb
xchg
or
add
negb
pop
jnp
aas
mov
or
cs
xor
sbb
sub
ror
or
faddl
sub
jle
pop
sti
dec
aam
sarl
dec
leave
inc
gs
pushf
xchg
lds
lcall
jmp
push
cmpsb
add
pop
fidivl
fstps
sbb
std
sahf
ja
mov
insl
mov
dec
xor
and
and
insb
mov
fstps
adc
pcmpgtb
jns
enter
inc
lcall
mov
adc
and
jae
inc
and
fisttps
sbb
mov
sti
in
jnp
mov
pop
call
leave
or
nop
nop
jae
xor
aam
jecxz
xchg
mov
xor
push
cmp
xchg
test
sbb
bswap
test
test
jb
div
mov
shrl
push
pop
push
faddp
jmp
pop
out
cmp
ret
xor
mov
mov
mov
push
pop
mov
int
jg
in
push
loopne
test
test
pushf
lds
ss
incb
pusha
push
shrl
pop
fcmove
push
adc
xchg
int
inc
push
cmpsb
in
pop
je
sbb
repz
xchg
xor
es
jns
dec
in
xor
dec
xorb
add
ljmp
dec
mov
pop
jbe
inc
enter
sbb
adc
mov
jl
dec
cli
lods
push
sub
lret
xchg
lret
mov
pop
lea
pop
xchg
sbb
push
sbb
xchg
inc
mov
ds
mov
jg
imul
mov
xchg
push
gs
xchg
scas
hlt
gs
scas
mov
aas
xchg
adc
push
pop
int3
insb
inc
xchg
or
pop
or
push
flds
cwtl
mov
pop
jl
adc
lds
add
je
jae
mov
mov
fs
or
cmpsb
and
xchg
test
jne
and
inc
stc
mov
add
das
das
movb
push
loopne
mov
int
std
mov
or
mov
lret
iret
xchg
dec
adcl
outsl
shlb
dec
sub
loope
cmp
mov
out
xor
add
push
es
inc
fiadds
add
repz
outsb
jno
sbb
pop
aaa
in
dec
push
imul
cli
mov
popa
rcrb
fsubs
pop
call
add
loopne
movsb
shlb
adc
into
jo
xor
add
xorb
lea
daa
test
adc
out
push
push
jae
insb
mov
jl
fiaddl
lea
test
mov
jl
hlt
mov
xchg
mov
in
and
jne
je
jle
push
mov
adcb
movsl
fistps
and
push
adc
push
jo
out
add
lock
out
inc
es
xchg
test
inc
ss
adc
out
data16
xor
ret
in
xchg
sti
lds
lea
and
out
fistps
loop
arpl
add
push
xchg
mov
mov
dec
daa
insb
xor
fidivrl
push
mov
sbbl
inc
in
dec
cmp
hlt
mov
sarb
or
dec
mull
jo
push
dec
ret
mov
test
sub
jbe
cmp
jns,pn
ss
aad
dec
or
pusha
lahf
and
add
repz
hlt
fsubp
adc
inc
cmp
sub
arpl
je
sbb
dec
xchg
sahf
push
popa
shr
xor
shll
into
test
cmpsl
daa
and
or
and
pop
lods
xchg
adc
scas
mov
sahf
jns
mov
push
lahf
cmp
mov
stc
notb
lea
xor
icebp
lret
cltd
adc
xor
xor
mov
inc
push
mov
mov
add
xor
push
int3
pop
xchg
lahf
jns
mov
out
pop
dec
push
test
loop
or
jecxz
mov
push
js
mov
lods
arpl
stc
dec
xchg
mov
mov
mov
mov
shrl
or
rclb
xchg
les
mov
cmovnp
xchg
pusha
ret
or
and
std
into
in
add
jbe
aaa
fs
lret
sub
stc
mov
cli
ds
inc
sti
mov
lods
std
inc
adc
loop
ja
adc
dec
mov
in
xorb
mov
out
or
js
mov
sbb
mov
int3
test
xchg
inc
dec
jnp
fidivl
inc
das
popf
cli
xchg
adc
mov
xor
jle
lret
xchg
je
test
out
mov
dec
cwtl
xchg
rep
fisubrl
aam
gs
fsubrs
into
scas
call
gs
imul
adc
dec
in
inc
aad
and
or
lods
mov
and
das
outsb
push
incl
ljmp
in
xchg
pop
cli
aad
dec
inc
daa
bound
or
pop
ret
outsl
mov
das
ja
mov
shll
sahf
popa
cld
xlat
int3
cs
pop
outsl
loopne
data16
and
dec
lods
imul
lods
mov
lods
mov
outsl
cmp
dec
loope
imul
movsb
fwait
pop
mov
mov
ds
mov
lret
mov
jmp
std
int
push
sbb
std
jle
fs
pop
leave
movsb
mov
test
ljmp
cmp
test
test
dec
mov
jl
sub
push
insb
lahf
icebp
ficomps
xchg
pop
out
push
xor
mov
mov
orl
loopne
cwtl
movsl
or
pop
inc
add
pop
cltd
aam
sbb
mov
inc
or
push
bound
pop
mov
xchg
sbb
sbb
dec
subl
call
js
jmp
xchg
pop
frstor
add
nop
dec
pushf
test
insb
scas
fsubrs
lea
jg
jle
sbb
push
pop
fsubr
daa
and
mov
and
mov
cli
and
inc
dec
test
bndstx
mov
loopne
shll
mov
mov
pop
xchg
ljmp
xchg
fcomps
testl
inc
and
jge
add
lea
push
imul
call
in
ja
sub
cmpsb
and
xchg
sahf
dec
push
ret
cwtl
les
inc
call
pushf
sub
push
aaa
and
pop
stc
jo
sahf
jns
insl
cwtl
inc
pop
cltd
cltd
pop
or
mov
aas
jg
daa
jmp
cmp
mov
sti
inc
adc
std
mov
stos
xor
pop
cltd
dec
xor
stc
adc
mov
mov
ret
pop
stc
pop
js
mov
es
aad
pusha
std
subl
and
mov
push
adc
enter
xchg
pop
and
mov
daa
mov
push
xchg
jmp
ficomps
sub
lods
add
sbb
cmpsl
adc
push
inc
cmp
cltd
jmp
jl
sbb
jp
push
jge
stos
sbb
jge
adc
inc
mov
ja
inc
nop
sbb
ljmp
xchg
pop
cmp
repnz
lods
adc
xchg
sub
add
icebp
push
clc
enter
lret
xchg
jno
mov
cs
ret
dec
cld
push
sub
ljmp
psrld
or
dec
fs
dec
sbb
adcb
xor
in
in
and
pop
cmpsl
jbe
ja
xchg
add
xorb
sbb
rcrl
mov
adc
imul
push
cmc
rcl
cwtl
sbb
cmp
fistpl
jno
pop
adc
sbb
ficompl
aam
out
mov
mov
pop
adc
subb
add
loope
ret
add
xor
enter
mov
outsl
push
shlb
mov
mov
out
outsl
push
mov
and
orl
dec
sub
fstpt
or
adc
xchg
mov
into
dec
adc
hlt
cwtl
inc
mov
nop
test
xchg
mov
shrb
adcl
sub
notb
ja
push
inc
mov
dec
pop
pop
and
es
lret
pop
push
xlat
out
add
pop
popa
fstl
rorl
sbb
inc
mov
xor
dec
mov
mov
jne
ja
into
lds
adc
xor
cmp
inc
dec
mov
testl
hlt
jl
loopne
push
imul
sbb
mov
mov
mov
mov
pop
cmc
dec
sub
push
inc
sub
les
and
cs
fistpll
popf
shrl
cmp
lret
sbb
in
cld
xor
loope
sbb
out
jns
mov
ljmp
add
or
xchg
jle
xchg
and
call
scas
dec
stos
adc
cmp
shrl
push
imul
dec
imul
mov
jae
push
add
cmp
cld
and
outsl
lret
xlat
inc
mov
jnp
mov
rcrb
fbstp
mov
inc
andb
dec
sbb
push
xor
push
pop
fs
sbb
ds
ficompl
lods
add
inc
scas
inc
ljmp
or
stos
popf
xor
lods
out
je
push
xor
and
in
mov
pop
add
jp
or
adc
push
cmp
pop
xchg
bound
in
lods
outsb
xchg
or
xchg
fstpl
out
xor
aaa
lea
pusha
imul
arpl
lock
test
sbb
sar
adc
jno
cmp
mov
mov
fcompl
xabort
push
push
adc
xor
out
xchg
pop
stos
in
pushf
push
mov
in
jp
jae
nop
cmc
cmpsl
xor
xchg
jbe
cmc
ret
ss
xchg
add
sarl
bound
mov
int
call
incl
repnz
jmp
ret
cwtl
movsb
push
fs
es
adc
cmp
fsubl
test
pop
movsb
sbb
or
pop
lret
and
rcrl
xchg
jno
push
notl
aas
mov
lea
add
sub
lcall
stos
push
or
popf
fcompl
sbb
mov
nop
push
or
iret
ljmp
mov
mov
subb
cmp
adc
mov
jge
je
lret
push
loope
add
inc
stos
lods
mov
shll
fisttps
xor
ficoml
push
dec
test
les
sub
ret
in
cli
dec
or
cwtl
mov
mov
and
shll
xor
sub
mov
stos
mov
cmp
ret
scas
or
push
adc
cmp
jb
inc
adc
frstor
lret
adc
lds
enter
sub
jl
sub
test
add
add
mov
inc
jnp
test
in
dec
mov
out
mov
outsl
dec
mov
in
loopne
or
mov
xchg
cmp
adc
lret
outsb
jle
mov
jae
jbe
sub
loopne
into
xchg
push
ja
mulb
mov
out
sub
cltd
ljmp
inc
mov
sbb
xchg
sarb
sub
icebp
push
inc
add
popf
lret
sub
test
jge
dec
ret
sbb
mull
sti
pop
push
lods
push
mov
fdivl
inc
mov
mov
push
cmp
mov
in
sbb
vpacksswb
adc
daa
pop
shrl
movsb
pop
and
sbb
xor
incb
gs
dec
int
cmp
adc
xchg
mov
pop
adc
bound
lahf
arpl
xchg
push
lods
fidivrs
incl
mov
call
mov
lret
and
outsl
mov
das
jnp
push
jo
ds
jns
mov
mov
cli
mov
cwtl
mov
push
sbb
xor
push
adc
ja
pop
add
mov
mov
xchg
jle
clc
xchg
mov
jmp
cmpsb
insl
xor
fidivrs
rcrl
dec
adc
and
lods
lahf
jp
dec
test
mov
aaa
jae
es
sbb
jp
or
cmp
out
mul
cltd
ret
lret
repnz
cmp
xor
sub
inc
dec
int3
adc
aas
imul
aaa
or
pop
scas
repnz
mov
cmpsl
das
pop
leave
ss
icebp
sbb
outsl
jmp
rcr
lahf
cmpsl
fsts
xchg
mov
daa
mov
arpl
inc
mov
out
roll
cmp
sarb
int3
insb
outsb
fisubl
in
imul
jae
jne
cmc
mov
xchg
out
mov
adc
cmp
mov
pop
dec
mov
pop
mov
jno
or
nop
dec
pop
sub
cmp
xchg
inc
push
imul
popa
lcall
lods
xor
popa
inc
push
or
add
into
das
ds
xchg
cwtl
dec
js
cld
jle
lahf
movsb
movsl
cmp
sub
fcoml
imul
out
icebp
fidivs
sahf
xchg
lea
dec
xor
or
into
lea
lahf
mov
mov
add
js
stc
inc
xchg
dec
fbld
hlt
cld
pop
jb
jae
mov
push
pop
inc
mov
lcall
movsl
jb
je
ds
icebp
out
ljmp
ss
shr
lret
sahf
mov
scas
outsb
dec
mov
mov
scas
into
in
xlat
mov
mov
jns
jmp
or
push
sub
pusha
push
and
sub
xchg
mov
hlt
push
adc
pop
sbbb
adc
xorb
lods
jl
and
xorl
xchg
mov
pop
jecxz
scas
fst
dec
sbb
js
cmp
jp
icebp
mov
dec
iret
imul
fidivl
std
push
pop
inc
pop
mov
cmp
add
aaa
inc
scas
push
xor
adc
xchg
pop
fbstp
stos
lahf
iret
outsb
add
cs
jge
mov
pop
orl
rcrl
mov
repz
xchg
pop
fwait
adc
ds
notl
idiv
jmp
insb
xor
or
pop
mov
mov
xor
fxch
jns
xchg
cmp
inc
sub
out
pop
mov
fistpll
mov
pop
push
and
dec
pop
icebp
mov
xor
cmp
shl
mov
inc
test
ss
inc
es
dec
hlt
lock
sub
push
lcall
cmp
pop
pop
mov
push
nop
push
xchg
das
lret
mov
popf
jmp
xchg
lahf
adc
push
loope
fwait
sar
add
pop
sbb
es
sahf
xor
jno
std
mov
enter
cmp
and
mov
faddl
lahf
cmp
and
jns
iret
loope
push
hlt
push
sub
sub
jge
cmc
cwtl
sbb
jmp
add
and
insl
shrl
insl
xor
push
inc
xor
xlat
xor
xor
scas
push
cmp
xchg
jbe
sub
xchg
xchg
pusha
gs
in
imul
in
and
test
sbb
lods
lahf
cmp
push
pop
sar
loope
lds
gs
outsb
loope
ljmp
adc
test
insl
and
in
mov
xor
test
fwait
cmp
or
mov
jg
mov
cmp
push
mov
ret
cli
decl
lds
dec
sub
mov
fs
inc
into
mov
mov
sbb
cltd
cld
test
cli
lods
leave
pop
jae
fcomps
enter
add
je
dec
fdiv
stos
call
mov
xchg
clc
out
jne
movsb
jg
xor
mov
sbb
xchg
xor
add
or
mov
add
in
stos
test
inc
cmp
dec
out
inc
jno
dec
cmp
cli
inc
xor
cmpsb
dec
xchg
mov
nop
insb
or
mov
jbe
jne
and
outsl
and
test
fsts
sbbb
sti
ss
mov
jl
int
jg
loop
ljmp
inc
in
sub
or
jne
push
or
add
sbb
push
push
jnp
cmpsb
movsl
jmp
test
fbstp
lcall
dec
lahf
sbb
xchg
lds
mov
mov
xorl
pop
lods
mov
dec
insb
cmp
mov
sbb
lods
dec
xor
cmp
lret
xor
adc
pop
lret
cld
mov
imulb
aaa
adc
lock
dec
dec
add
push
push
lods
fnstsw
xchg
loop
cmp
leave
mov
insl
sub
out
pusha
dec
mov
shrl
pop
push
fisubrs
sub
notb
xchg
imul
push
dec
call
ret
sub
shrb
cmp
aad
ficoms
cmpsl
or
mov
push
aas
mov
mov
in
push
push
push
xchg
cmpsb
inc
out
sub
push
sub
cltd
outsl
push
sub
fwait
jno,pt
out
jle
mov
sbb
insl
fsubr
fistpll
fldcw
push
push
in
jg
push
call
imul
inc
in
xor
mov
jbe
das
or
mov
lcall
inc
int
shll
jle
fbstp
mov
mov
daa
mov
lods
mov
pop
fs
adc
xor
sti
adc
roll
and
shl
mov
add
mov
xchg
in
xor
xchg
cmp
adc
aad
mov
imul
dec
je
mov
popf
mov
mov
lds
insl
cld
gs
pop
dec
insb
mov
notl
pop
arpl
ljmp
popf
or
mov
movsb
sbb
push
sbb
mov
jnp
aam
fsubrl
xchg
jo
es
mov
add
add
sarb
add
jb
and
xchg
js
test
andb
insb
cltd
sbb
out
xor
fstl
mov
xchg
movsl
loope
sub
inc
inc
mov
lret
jle
movsl
push
ret
cmpsb
jno
popf
ss
test
sub
mov
add
dec
mov
addb
in
inc
pop
push
fldenv
lret
cmpsb
lcall
stos
adc
and
js
add
cmp
dec
sub
negl
inc
dec
add
jno
jo
mov
inc
js
icebp
lahf
clc
daa
nop
sbb
push
shl
jg
mov
cmp
mov
sbb
lock
sti
sbb
fs
mov
daa
mov
sub
nop
dec
add
std
mov
sbb
dec
lcall
pop
xor
mov
dec
inc
and
add
push
mov
insl
cmp
mov
adc
adc
pushf
rorb
loope
cmc
mov
xchg
mov
sahf
cwtl
je
xchg
js
arpl
mov
push
lret
leave
ljmp
ret
or
fs
lock
or
movsb
sub
popa
pop
sbb
push
das
iret
mov
test
fsub
push
add
cwtl
int
lcall
addr16
or
cmpsb
mov
jb
cs
into
fldcw
out
push
cmp
lahf
fsubl
stc
cmc
mov
mov
cmp
xor
in
cmpb
push
mov
aaa
push
xor
mov
cwtl
jecxz
mov
popa
cld
fbld
or
or
andps
sti
jmp
jne
push
push
inc
pop
jno
test
popa
dec
xor
fdivrl
repz
enter
cwtl
nop
leave
fnstcw
mov
push
xlat
and
loop
or
int3
push
or
xchg
clc
lcall
lcall
fxch
jmp
xchg
and
xlat
cwtl
lea
cld
xor
dec
data16
pop
cmp
dec
xchg
or
in
and
insb
int
add
aaa
lds
adc
push
or
popa
xlat
jno
adc
shrb
add
jge
and
stos
mov
clc
mov
jp
lret
jge
gs
fdivl
fwait
mov
mov
jnp
mov
sub
sub
shlb
sti
lea
call
pop
shrl
out
cltd
shrl
xchg
xchg
notb
rcrb
and
pushf
push
scas
mov
insl
daa
pop
stc
out
icebp
fidivs
pop
dec
cmc
and
cltd
mov
nop
leave
scas
in
adc
nop
cwtl
bound
pusha
lahf
jnp
es
push
and
jge
daa
aas
push
inc
inc
adc
das
xor
add
adc
xchg
dec
icebp
dec
sbb
sbb
test
inc
jge
std
dec
mov
pop
and
lcall
pusha
mov
out
or
js
sbb
int3
repnz
mov
inc
mov
mov
push
shlb
mov
xor
lahf
sbb
dec
popl
push
out
addl
jecxz
mov
ja
sbb
pop
adc
or
xchg
dec
call
rcrb
push
enter
mov
ss
test
in
jbe
mov
pusha
xchg
int
xlat
push
cmp
adc
out
ja
inc
jl
xor
mov
sbb
in
pop
and
scas
out
mov
jns
in
xchg
xor
repnz
mov
pop
dec
shll
push
and
in
cmp
andb
ret
ret
aad
push
mov
xchg
mov
out
fwait
xor
cmp
into
jae
ds
jnp
mov
or
pop
int3
or
in
sub
adc
xor
mov
js
imul
fstpt
mov
leave
add
cs
popl
xchg
adc
inc
sbb
call
notb
adc
pop
and
or
cmp
cs
dec
lret
fst
xor
mov
inc
gs
clc
in
fstl
mov
nop
popa
push
test
inc
lcall
cmc
lret
cltd
push
sbb
mov
scas
and
test
xchg
sbb
xchg
push
cmp
shrb
sti
cmovae
out
loop
cmp
std
pop
dec
sub
into
inc
mov
pop
cmp
push
lcall
cli
mov
push
outsl
movsl
clc
adc
mov
imul
mov
and
pop
dec
orb
pop
cmp
mov
daa
in
xor
jnp
lahf
filds
pop
je
pop
or
lea
insl
movsl
leave
mov
dec
cmp
add
adc
aam
loopne
les
push
fs
and
pop
and
add
dec
jo
cmp
hlt
mov
mov
push
xchg
mov
rclb
or
int3
dec
insb
xor
sbb
mov
std
jmp
push
mov
xlat
into
jle
lods
addr16
stos
pop
sbbb
and
and
inc
xor
loopne
mov
mov
in
sub
dec
pop
mov
mov
sub
mov
push
lret
fists
cmp
inc
ss
loope
jns
aad
fdivrl
mov
popf
xchg
cmp
push
ss
push
loopne
insl
ret
push
cmc
mov
adc
jmp
es
ret
das
fistpll
loopne
mov
inc
rcr
and
and
popf
or
mov
xor
fiaddl
test
insb
jge
sub
adc
loop
inc
xor
xor
jl
les
mov
mov
cs
and
adc
nop
sbb
cs
in
jmp
xchg
xchg
imul
fs
mov
mov
shll
call
addr16
into
sub
push
outsl
mov
scas
insl
inc
imul
nop
xchg
inc
mov
fsubl
push
fisttpll
xor
mov
nop
inc
and
jne
jo
mov
xchg
add
das
push
icebp
fwait
icebp
sbb
rol
out
mov
pop
dec
jp
mov
fmul
stos
fistps
add
pushf
pop
push
add
adc
cmp
and
mov
push
je
subb
sar
int3
xchg
js
mov
cmp
add
scas
xor
xorb
or
push
adc
fistpl
fld
jnp
js
mov
xchg
mov
mov
push
movsl
sbb
pop
sub
sbb
xchg
mov
ret
out
data16
pop
xlat
test
cmc
xchg
mov
xchg
mov
pusha
addr16
sti
loop
inc
xchg
imul
dec
xor
call
or
sbb
popf
mov
sahf
mov
add
cs
dec
es
inc
fistpl
jbe
dec
xor
loope
mov
lods
test
xlat
fistpll
xor
int3
add
adc
or
dec
add
dec
dec
fstpl
jns,pn
movsb
iret
cld
loopne
mov
mov
rcr
shr
lock
sbb
mov
lea
lods
test
sub
aaa
lock
fisttps
adc
pusha
ss
lea
xor
xchg
sti
pop
ds
int
mov
jmp
into
ror
call
repz
pop
das
mov
mov
ljmp
or
sbb
pop
mov
icebp
inc
rcll
test
or
jp
pop
mov
popa
pop
lods
and
in
pushf
xor
mov
imul
repz
inc
push
rcll
inc
dec
ret
lods
addr16
repz
dec
push
mov
aad
daa
aaa
xchg
pop
sar
add
mov
stos
ss
outsb
inc
test
xchg
pop
fcmovbe
jnp
nop
mov
fsubrs
lods
inc
jp
jo
into
scas
mov
icebp
or
push
divps
mov
int
and
push
and
push
jo
adc
test
cmpsl
fs
daa
xchg
call
mov
xor
mov
push
outsb
mov
int
outsb
notb
mov
push
into
cwtl
push
jp
ss
xchg
cmp
jae
fucomip
mov
cwtl
in
inc
xor
ljmp
dec
loop
xchg
cmp
jp
aaa
hlt
cmpsl
pop
push
mov
pop
out
sbb
test
cmp
rol
data16
lods
repnz
jb
and
mov
sarb
sub
xchg
cmp
sbb
outsl
push
adc
shlb
outsl
mov
aam
fidivs
enter
dec
adcl
dec
adc
cmpsb
fwait
cmp
pop
stc
rorb
xchg
add
jbe
jl
xor
dec
jae
xor
lea
or
ljmp
pop
push
outsl
out
pop
dec
push
or
sub
imull
mov
ss
mov
pop
fidivs
add
pop
ret
or
scas
and
in
dec
lahf
rol
mov
mov
jae
xchg
stc
jb
fldl
sub
adc
mov
and
mov
cmp
movsl
pop
adc
mov
fcomps
cmp
in
xor
insb
add
cmpsl
loopne
gs
adc
imul
pop
mov
ja
push
nop
xchg
addl
inc
rorl
fwait
imul
xchg
ljmp
add
jecxz
loop
jmp
inc
add
shrl
adc
and
inc
add
sbb
mov
shll
push
jmp
xor
push
pop
add
iret
pusha
and
dec
push
pop
insb
cmp
jmp
xor
repz
cwtl
in
cli
mov
lods
xlat
push
cld
aaa
xor
and
ja
movsl
cs
jb
jno
push
aaa
sahf
ret
outsb
jle
or
inc
mov
push
ja
hlt
bound
dec
sub
xor
push
add
push
jp
inc
daa
insl
shlb
mov
test
mov
push
xor
xchg
and
mov
loop
es
sbb
mov
xor
or
mov
div
int
lods
idivb
dec
pusha
jl
or
dec
mov
mov
cmc
jnp
push
inc
jle
out
lods
daa
pop
jle
loope
add
pop
das
fsubr
dec
outsb
scas
ret
inc
push
jb
add
mov
into
repnz
fcmovne
aam
xor
mov
add
xchg
orl
dec
out
lahf
cs
dec
dec
ss
xchg
xchg
push
outsb
es
pop
add
pop
lods
data16
mov
xchg
mov
mov
cmp
nop
arpl
test
lods
pusha
push
adc
popf
cs
push
pop
mov
arpl
mov
ja
add
fs
in
add
aas
mov
cwtl
pop
ror
pop
leave
scas
loopne
sub
pushf
les
imul
and
int
mov
jno
xchg
pusha
in
aam
xchg
mov
and
inc
mov
mov
cltd
loopne
out
dec
pop
inc
mov
aad
loope
mov
jo
xor
and
or
adc
sub
or
jbe
out
rorl
cmp
outsl
mov
mov
cmp
push
andl
rcr
adcl
adc
test
mull
jae
filds
push
xchg
and
in
jmp
mov
cmp
imul
dec
iret
push
int
fldenv
outsb
mov
popl
dec
repnz
sub
jo
mov
insl
mov
or
sbbb
lret
out
add
aaa
mov
dec
xor
inc
pop
addr16
fs
and
mov
subb
jl
and
mov
sbb
and
xchg
cltd
insl
adcl
mov
push
adc
lea
push
mov
push
gs
and
stos
push
mov
mov
enter
xlat
push
or
test
sub
jbe
dec
xchg
into
lret
movsb
jle
inc
shlb
clc
sbb
or
pop
ja
test
dec
jmp
fstl
insb
in
test
xlat
insl
pop
and
fisubrs
or
iret
idivb
pushf
sub
bound
jb
mov
stos
fcoms
into
push
push
fisubs
or
sti
fs
lds
jp
pop
xor
test
pop
xor
lahf
add
cld
mov
xor
movsb
mov
jmp
cmp
mov
stc
push
sbb
adcb
push
jnp
xchg
fmull
testb
jmp
inc
nop
mov
xor
mov
or
xchg
mov
scas
add
push
out
divl
jnp
js
dec
jmp
adc
jmp
inc
mov
mov
push
cmc
xchg
jo
mov
inc
into
or
adc
movb
or
push
outsl
sbb
enter
adc
dec
lret
mov
inc
outsb
push
xchg
repnz
or
test
xchg
fsts
xchg
cmp
jns
fisubrl
ja
sub
mov
int
data16
mov
adc
xchg
adc
cmpb
dec
gs
sub
ds
inc
and
jl
adc
cmovnp
xchg
dec
nop
or
sarb
popa
pop
fiaddl
sahf
xchg
mov
mov
sbb
jle
loop
jl
push
lret
sub
inc
je
subb
aam
pop
test
xor
rolb
add
fisubs
or
mov
xor
sub
aam
xor
push
sti
mov
jle
outsl
cs
or
dec
out
pop
dec
shll
xchg
sub
push
clc
mov
mov
lods
mov
or
pusha
and
xor
fdivr
insb
adc
ds
scas
and
fdivrl
cs
scas
rcrl
or
sbb
xor
mov
push
in
add
add
shrl
lods
test
notb
mov
dec
jns
aaa
xchg
pushf
inc
and
ror
lea
ja
adc
and
mov
push
popf
adc
std
jmp
arpl
jns
fwait
jns
adc
les
stos
add
jp
xchg
mov
stos
nop
xchg
cs
add
dec
mov
sub
or
scas
lds
xchg
jg
and
dec
cmc
fcoms
push
sahf
popf
stos
pop
ret
pop
xchg
nop
add
sub
incl
pop
cmpsb
pop
aam
les
and
outsl
xchg
mov
dec
shufps
imul
pop
adc
dec
pop
outsb
cmc
and
cmp
jg
cmp
xor
cld
int
xchg
jno
rorb
in
insl
je
andb
stos
add
cmp
sub
ret
cmc
xchg
hlt
push
xor
sbb
add
mov
loopne
lods
out
out
subl
add
pop
dec
in
stos
mov
mov
xchg
xchg
outsb
lock
lcall
and
scas
xlat
dec
aaa
push
or
push
add
xchg
nop
xchg
mov
into
mov
not
xchg
in
icebp
pushf
and
add
leave
enter
sub
aaa
push
pop
dec
loop
call
fs
mov
insb
bnd
jl
dec
jno
test
push
ds
mov
mov
push
sbb
lret
sub
dec
lds
pusha
je
adc
adc
xor
adc
or
test
jl
push
out
out
or
xchg
and
cmc
dec
mov
mov
pop
xchg
sti
xchg
stc
mov
pop
pop
xlat
je
ja
inc
inc
mov
movsb
imul
push
pusha
cmpsb
imulb
xor
repnz
mov
jp
mov
pop
lret
push
fildll
jp
xor
sbb
int3
rcll
arpl
mov
mov
xlat
jnp
jno
icebp
sbb
fldz
out
cmpsl
mov
fwait
add
cmp
dec
clc
pop
movaps
mov
es
sbb
add
flds
aad
mov
push
mov
shlb
sbb
testb
mov
test
mov
mov
das
fwait
or
cld
nop
jnp
mov
mov
inc
arpl
dec
inc
mov
mov
jge
xor
mov
sbb
or
xchg
fldl
movsl
mov
xchg
int3
shrl
dec
mov
and
lods
sbb
push
xor
lock
cs
jle
scas
jle
ja
xlat
cmp
ffreep
xchg
lea
in
pop
movsb
adcl
and
rcrb
mov
mov
add
std
loop
pop
jno
cmpl
icebp
ds
loopne
ds
jne
sub
incb
push
out
or
inc
push
jmp
dec
mov
ss
addl
in
add
stos
pop
test
pop
test
inc
adc
mov
fistpl
cmp
out
push
add
pop
pusha
jg
loope
ds
sbb
leave
iret
jmp
out
out
pop
or
clc
xor
sub
pusha
cmpsb
jecxz
enter
inc
dec
cltd
jb
xor
test
addb
mov
push
or
push
and
imull
dec
pusha
mov
xchg
cmp
jae
xchg
sbb
xlat
pop
mov
and
sarb
das
mov
mov
jmp
mov
cli
xor
jl
les
repz
cmp
ret
stos
mov
or
pop
sub
cmp
mov
das
push
xchg
pusha
mov
mov
scas
insb
int3
or
add
dec
sbb
jbe
mov
mov
std
mov
inc
jl
or
aam
faddl
jg
push
repz
sub
rcrl
dec
mov
jl
mov
addb
push
xchg
pusha
dec
ret
jg
sbb
cld
mov
flds
loope
pop
pushf
cmovnp
arpl
stos
faddp
dec
jmp
mov
insb
xor
inc
sub
xor
gs
movl
mov
mov
movb
xchg
xchg
pop
mov
pop
mov
fistl
pop
xor
stos
xor
rcrl
pop
dec
stc
ss
dec
fisubs
fmull
mov
rclb
sub
es
in
sub
inc
inc
cmp
add
test
mov
xchg
mov
adc
leave
fdivrl
adc
push
pop
sub
ficoms
xor
jg
dec
dec
outsl
or
clc
mov
mov
xchg
or
dec
lret
daa
outsl
fsub
sbb
int
mov
inc
test
arpl
out
loopne
shrb
jne
xchg
aam
pop
mov
sbb
ret
gs
lds
jne
mov
imul
xchg
bound
test
adcl
xor
lcall
sahf
mov
lahf
mov
and
scas
sbbb
sarb
adc
loop
rcr
mov
in
mov
in
dec
mov
xorb
add
cmc
out
aam
cwtl
pop
loop
int
int
jle
push
es
jmp
stc
push
lods
add
pop
xchg
lea
adc
in
jno
stos
push
pop
test
sahf
aas
out
adc
out
cmc
mov
jecxz
imul
and
push
call
fdivrl
fwait
insb
push
insb
jno
push
test
push
data16
mov
push
sbb
mov
fsubr
pop
incb
jo
adc
jge
out
jbe
fwait
dec
out
inc
imul
shrb
lock
roll
push
and
mov
and
js
lahf
aad
loope
test
pop
sub
mov
add
push
test
lahf
add
jo
pop
imulb
jg,pt
inc
daa
pop
sti
sbb
jge
dec
and
xchg
xchg
negb
es
inc
jbe
sbb
mov
shrl
dec
xor
pop
das
or
dec
mov
jns
lods
in
cwtl
xor
jmp
pop
cltd
or
aad
mov
xchg
adc
cmp
push
xorb
imul
cmpsb
xchg
mov
pop
fidivrs
lret
mov
adc
fwait
add
adc
jbe
push
xorl
push
cmp
and
add
xlat
dec
mov
rorl
jg
add
xor
adc
add
cmpsl
cmp
fs
ret
daa
cmp
fsubl
cmp
in
dec
xlat
cmpsl
push
cmp
ret
xor
js
bound
add
cmpsb
cmp
jecxz
repz
insl
out
push
xlat
jl
ja
inc
jae
sbb
pop
pop
out
cli
or
aaa
in
mov
xchg
outsb
pop
sbb
mov
and
mov
or
xor
add
inc
and
inc
sub
pop
dec
fiadds
sti
lret
add
andb
mov
movsl
pushf
jmp
sub
int
mov
push
cwtl
mov
xchg
and
stos
shll
mov
jbe
mov
nop
add
and
repnz
gs
jp
mov
push
pop
add
push
jge
dec
mov
jo
or
fildll
pushf
mov
dec
ljmp
movsb
lret
push
mov
idiv
lock
sub
movl
dec
inc
fiadds
test
lret
cmp
int
gs
jns
push
inc
std
jno
lret
cltd
out
pop
out
push
and
or
js
sarl
out
push
insl
mov
popa
ss
pop
mov
mov
insb
movsb
dec
daa
cwtl
mov
dec
or
aad
dec
lds
adc
pop
adc
mov
pop
mov
cltd
push
in
ja
fcompl
out
xchg
push
fildll
dec
inc
add
in
xor
jp
fcomps
sbb
data16
adc
mov
cs
shl
outsb
imul
xor
ss
jns
stos
aaa
mov
push
mov
xchg
es
and
ja
xor
add
insl
xchg
cmp
fprem1
push
add
rclb
push
jbe
sbb
js
fnstcw
subb
lock
push
loope
test
insb
jl
and
test
lods
jle
insb
mov
sub
rcll
nop
fdivrs
mov
je
out
cmc
cld
lret
cmp
les
aaa
enter
mov
stc
xor
fcmovnb
cld
les
mov
lret
add
pop
inc
jp
jno
scas
jmp
test
sbb
cmc
dec
push
leave
add
es
aam
cwtl
mov
push
sbb
outsl
arpl
fdivl
test
testb
out
data16
dec
mov
cs
mov
cmp
dec
dec
sahf
shlb
dec
push
adcb
cltd
push
or
adc
sbb
mov
inc
jmp
pop
sbb
or
sbb
insl
pop
mov
or
and
add
xchg
mov
imul
pop
xor
jno
je
test
mov
call
push
push
cli
pop
mov
in
jo
sub
pop
cltd
xor
xchg
call
mov
or
cmp
test
jb
orl
adc
sub
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
