pop
inc
and
jge
sub
filds
sub
iret
stc
pop
into
stos
jns
cmpsb
shlb
pop
xchg
and
mov
stc
sti
mov
inc
pop
iret
cld
int
cmpsb
insb
add
lods
pop
les
in
inc
dec
and
test
lea
cltd
es
dec
cltd
movl
cmpsb
mov
stc
imul
inc
sub
inc
xchg
lock
mov
sub
sub
inc
jg
mov
icebp
sbb
shrb
bound
add
push
jb
push
add
fsubs
sbb
cmovge
mov
lcall
mov
call
rclb
push
rcrl
test
add
add
cmpsb
popa
arpl
fwait
xchg
xchg
push
fistps
jne
add
inc
mov
les
lret
mov
cltd
xchg
dec
mov
lahf
push
and
imull
jl
push
adc
roll
add
aam
dec
and
mov
sub
test
cmp
or
cmpsb
xor
mov
and
push
dec
repz
sbb
push
mov
lret
leave
hlt
data16
rcrl
lds
test
push
leave
push
sub
or
lret
sub
jecxz
data16
cmp
popf
lods
leave
mov
pop
push
sub
icebp
jo
mov
hlt
mov
rcrb
iret
ds
mov
adc
jg
push
shrl
cmp
lcall
sti
inc
mov
insl
lock
inc
andb
stos
lods
jle
out
inc
popa
and
mov
cs
jne
push
xor
fmul
decl
int
jp
mov
ja
jmp
cmp
mov
decl
pop
shrb
cmpsl
dec
cmp
lods
lods
cmp
sub
shll
shr
jno
orl
sti
xor
sbb
sti
lret
push
jns
aaa
scas
inc
dec
outsl
stos
test
ret
ljmp
loope
xchg
in
sub
mov
ret
mov
jno
int
xchg
add
sbb
lds
clc
mov
mov
pop
movsb
inc
dec
loope
not
dec
lods
jge
fucomp
int3
dec
or
ret
popf
dec
loope
rcrb
push
jno
fistpll
lods
test
test
add
mov
sub
pop
add
int
mov
xchg
or
mov
xor
add
aaa
out
mov
lcall
hlt
adc
mov
pop
aaa
add
xchg
mov
and
repz
push
xor
dec
mov
gs
popa
push
mov
iret
insb
and
dec
lods
jl
dec
or
mov
icebp
jbe
ret
repz
or
xchg
inc
in
jmp
adcl
lahf
popf
inc
incl
push
mov
xor
mov
or
mov
mov
or
xchg
lret
fimull
out
addr16
jno
sub
xchg
adc
lock
fsub
sti
mov
cmp
in
rorl
push
cmp
sub
stc
fs
andb
mov
cli
xchg
std
cli
pushf
push
insl
imul
stos
cltd
or
inc
outsb
jbe
imul
shll
sbb
addl
mov
mov
int3
pop
ljmp
ljmp
lahf
sub
pop
pop
out
inc
inc
mov
cmp
aaa
sbb
jb
icebp
ljmp
les
pand
jae
pop
mov
insl
jnp
jle
aaa
inc
lds
and
mov
add
out
rcrl
stc
daa
das
pop
addr16
xchg
rcll
push
add
idivl
cmpsb
pop
adc
pop
loop
pop
sub
mov
jle
shrl
sarl
fwait
push
and
test
popl
cmp
loopne
xor
out
sub
cmpb
scas
mov
lds
xchg
shlb
lret
rcrl
xchg
mov
add
sbb
push
aam
jbe
xchg
cld
and
adc
inc
pop
dec
scas
inc
jle
test
jl
fdivs
xor
jb
aam
sarl
push
out
jg
nop
sbb
imul
jmp
cmc
fistpl
mov
arpl
fmul
popa
mov
lcall
lcall
fs
in
ljmp
movsb
push
adc
cs
cmp
cmpsb
pop
loop
jbe
leave
jae
je
pusha
dec
loope
outsl
adc
stc
sar
addb
in
dec
mov
cmc
cld
xor
adcl
add
add
sbb
push
in
sbb
out
xchg
in
pop
lds
outsb
xchg
dec
popa
rcrl
daa
sub
cmp
add
outsl
mov
dec
mov
add
pop
pop
dec
or
mov
stos
shrl
jle
jg
loopne
cmpsb
sbb
or
cmp
xchg
pop
mov
outsl
nop
sub
sub
jno
icebp
fs
pop
mov
imul
ja
scas
mov
popa
push
das
dec
test
out
mov
cmc
sub
jne
cs
add
sub
lcall
mov
or
inc
scas
mov
xor
cmp
imul
or
cwtl
sbb
or
outsl
rolb
arpl
loop
pop
cli
aad
mov
sbb
ja
cmp
inc
xchg
movsl
mov
icebp
cmp
orl
lods
xchg
sbb
and
mov
in
movsb
xor
xor
xor
insb
pop
lock
xorl
jmp
enter
dec
sbb
std
pop
aam
lcall
mov
mov
cmpsb
out
adc
sti
aad
int
cmpsb
or
mov
xor
or
sub
dec
add
sub
popf
jecxz
push
pusha
sarb
cmp
sbb
mov
int
test
add
push
cli
sahf
lods
loope
cmc
xchg
jb
cmp
xor
fstpt
dec
leave
lods
sbb
pop
loop
mov
xor
hlt
aaa
and
movsl
sub
inc
push
and
hlt
adc
fimull
pusha
mov
lahf
mov
inc
lods
add
sub
adc
xor
scas
push
mov
ret
fmuls
mov
imul
xor
loop
scas
sbb
into
adc
xor
mov
in
mov
pop
les
add
sub
lahf
gs
xor
sahf
jo
mov
enter
add
dec
mov
mov
adc
mov
cwtl
insl
scas
add
inc
push
sub
mov
pop
sub
jmp
push
scas
out
sub
adc
lahf
lea
sahf
lcall
pusha
or
arpl
aaa
inc
cmp
dec
cmp
insb
lds
std
cmp
insb
rcrl
mov
cmp
sbb
sbb
pop
or
mov
jno
stos
nop
xchg
outsb
ljmp
xchg
cmp
jbe
mov
test
push
sub
jae
std
push
imul
add
mov
mov
push
jmp
jns
dec
mul
jg
sub
setge
sub
jns
in
cltd
or
adc
fdivr
insb
jle
push
sbbb
mov
imul
aaa
sahf
mov
cld
dec
out
jo
inc
mov
push
icebp
lea
scas
fstps
repz
shl
jne
inc
das
push
pop
cltd
ds
cwtl
int
loopne
sbb
sub
jno
lods
cmp
popa
mov
imull
mov
popa
cmp
push
jno
call
pop
lret
sub
cmp
inc
cmp
shrl
es
inc
fisttpll
sbb
jno
or
stos
insl
push
xchg
mov
addr16
sub
push
fisttpll
sub
stos
cmp
push
mov
lret
shl
mov
xor
lods
lcall
out
ds
loopne
push
roll
xchg
dec
ds
test
leave
dec
lea
dec
or
in
mov
add
das
push
sub
fs
jno
or
mov
cmp
mov
test
mov
jmp
ljmp
pop
xchg
ret
mov
into
outsb
stos
mov
lret
inc
cli
and
mov
cmpsl
fisttpll
jge
or
pop
lahf
cmpsb
mov
in
push
sbb
loop
sub
ficoml
xchg
mov
sbb
or
pop
je
std
xchg
out
dec
add
ret
pop
lock
lods
popa
mov
test
xor
bound
repz
xchg
bound
push
xchg
fbstp
ja
sbb
push
popf
jae
push
add
jle
popa
xchg
pop
sti
adc
mov
sbb
mov
adcb
push
jnp
out
das
xchg
imul
aaa
leave
nop
add
lret
lods
mov
mov
jno
pop
rcrl
xor
lahf
int
add
in
inc
test
aaa
movsl
js
inc
push
scas
outsl
test
adc
gs
ret
sarb
movq
or
mov
int3
jae
mov
cmp
jno
push
aas
mov
fnsave
in
push
xchg
iret
dec
outsl
pop
push
ret
push
rorl
ss
stos
mov
dec
and
insl
pusha
lret
ret
push
frstor
addr16
pop
adc
test
cmp
pop
and
mov
inc
inc
les
and
dec
push
add
or
outsb
push
rorl
jbe
jnp
scas
push
lret
shlb
sbb
call
mov
pushf
popa
or
test
dec
sbb
push
mov
mov
add
pop
inc
inc
jecxz
cmpsb
test
sbb
jmp
fdivrs
insb
jecxz
or
pop
mov
shrb
shlb
fwait
addr16
fs
xlat
int
imul
das
jb
add
sub
xchg
in
mov
loope
sub
arpl
dec
mov
sbb
xchg
add
and
dec
out
mov
mov
dec
or
test
dec
jge
loop
pop
and
mulb
mov
mov
shl
cld
out
sub
mov
cmp
cs
ret
cld
and
lock
in
cmpsb
jg
leave
and
stc
popa
stos
cmp
pop
xchg
mov
sahf
std
clc
lcall
inc
out
cmp
popf
outsb
sub
scas
stc
add
push
xchg
xlat
das
cmpsl
and
inc
notb
jg
mov
aaa
stc
cmp
das
leave
inc
push
es
and
repz
popa
aaa
loop
pop
add
stos
xor
icebp
or
out
jmp
mov
pop
aam
pushf
mov
xor
add
or
lock
sbb
add
inc
jnp,pn
pop
insb
sar
mov
adc
insl
call
pushf
gs
and
jnp
mov
adc
mov
aaa
pop
in
jno
add
imulb
popa
mov
popa
test
mov
mov
popf
cltd
in
or
cmp
or
fisttps
pop
sub
cmpsb
mov
push
add
fidivl
dec
or
jmp
cmp
stos
fcomi
xchg
cwtl
lods
shrl
or
mov
ljmp
popf
std
loope
add
sub
arpl
inc
mov
jno
outsb
nop
inc
xor
mov
testb
and
adc
lret
mov
cmpsl
inc
sbb
xchg
jae
insl
cmp
xchg
inc
out
sub
cmp
xlat
sbb
push
and
mov
cld
test
pop
jge
popa
and
addr16
push
imul
jbe
lret
jmp
fdivl
pop
add
mov
or
dec
mov
dec
inc
andb
or
add
sub
sub
loope
int
popf
mov
xor
xchg
mov
iret
ss
push
mov
pop
std
xor
frstor
out
push
sub
lcall
icebp
js
cld
sbb
inc
push
push
and
mov
or
test
push
into
out
xor
mov
mov
sti
movsb
dec
push
aas
and
mov
inc
movsl
ret
stos
jmp
sbb
out
jnp
fldenv
nop
stos
sbb
sbb
xor
mov
push
and
je
js
inc
rol
mov
sbb
push
insb
test
ja
pop
roll
std
mov
jp
xchg
stos
sbb
xchg
sbb
sti
into
jae
lret
negl
pop
lret
sbb
inc
gs
mov
cld
leave
xchg
bound
or
outsb
push
add
imul
adc
pop
loopne
inc
sti
sarb
lea
sbb
jno
add
aad
scas
std
out
in
jge
or
pop
xor
fidivrs
rcrb
add
in
fidivs
jl
lret
outsb
lret
and
mov
push
lods
hlt
jbe
std
xor
cs
addl
or
into
jo
call
or
jne
pop
repz
orl
data16
in
stos
jb
push
dec
dec
cmpsb
jg
insl
xor
in
sbb
or
sub
fsubl
leave
gs
std
je
in
dec
mov
mov
xchg
xchg
bound
mov
testl
jo
adc
in
sbbb
jns
xchg
orb
andb
stos
scas
in
mov
jge
in
cltd
xor
cmp
popf
ja
xchg
inc
and
add
push
sub
jno
xlat
outsb
sbb
out
xlat
mov
shl
je
out
stc
push
mov
faddp
fs
lahf
adc
scas
shl
xchg
jle
iret
jno
and
xor
mov
mov
js
les
aas
add
jge
enter
mov
into
insl
je
stos
mov
stc
icebp
lea
pop
test
icebp
xchg
pop
cmp
adcl
inc
inc
cltd
adc
mov
idiv
mov
sbb
or
js
mov
push
rcll
cmc
and
xchg
jb
rcr
cmp
mov
ds
sub
int3
dec
cmc
mov
clc
out
pop
in
pop
shll
ja
rcr
imul
sbb
or
filds
push
push
out
mov
or
adc
rcrb
mov
add
cli
jge
add
dec
mov
push
ret
imul
leave
jp
bound
lret
cmc
xchg
ljmp
and
roll
pop
add
adc
stc
fnstcw
in
dec
xorb
aam
pop
sbb
lcall
ljmp
in
inc
jg
push
adc
pop
sahf
pop
mov
int
push
push
arpl
sub
adc
test
sub
mov
cwtl
lahf
test
stos
mov
ss
pop
outsb
sbb
push
jg
inc
and
cmp
cs
jl
frstor
das
orb
add
add
cmp
push
or
pop
push
data16
or
pop
sbb
pop
cmp
outsb
test
xorb
fwait
cld
inc
int
and
lahf
cmc
mov
int3
ficomps
lds
gs
add
and
stc
mov
sub
gs
cmp
addb
xor
call
adc
test
mov
fildl
in
xchg
icebp
nop
in
xor
push
jo
pop
and
mov
sbbl
push
add
cld
jne
movsl
clc
in
dec
rcrb
mov
in
mov
mov
or
stc
mov
xchg
jle
stos
push
sbb
loopne
push
test
add
imul
and
adc
inc
or
mov
shl
dec
test
repnz
jnp
xor
push
sbb
jb
icebp
or
pop
inc
mov
orl
rcrb
jnp
and
sbb
mov
adcl
sbb
sahf
jp
aas
mov
aad
orb
stos
addl
sub
dec
add
sbb
push
push
jae
push
loope
jmp
push
loop
inc
fildl
aad
sbb
fnsave
es
test
iret
cmp
jle
outsb
or
pop
loop
mov
add
mov
cltd
cmp
popa
lcall
mov
push
lock
or
inc
mov
bound
decb
cltd
push
rcll
shrl
pop
stc
push
mov
push
cmc
mov
insb
scas
scas
ljmp
stos
inc
in
stc
aam
jmp
sahf
js
mov
dec
jl
ljmp
and
xchg
sarl
push
mov
mov
inc
mov
jno
pusha
rcll
jae
mov
dec
stos
cmpsl
fiaddl
push
icebp
jmp
mov
ja
push
cmpsb
and
or
lcall
lods
sbb
out
fildll
push
pusha
mov
inc
xor
aaa
decb
mov
mov
dec
inc
sbb
insb
jp
mov
and
in
cs
adc
dec
adc
push
xor
mov
add
loopne
xchg
mov
or
inc
test
jbe
dec
clc
or
int3
mov
sbb
int3
xchg
jmp
mov
jns
leave
sti
push
pop
mov
push
jnp
icebp
int
ja
pop
dec
jle
sub
mov
pop
pop
lret
sbb
orl
pop
imul
push
cmc
and
rcl
int3
jle
mov
lods
push
push
sub
push
test
fwait
inc
fwait
cmp
in
mov
test
pushf
rorb
clc
xor
jbe
in
xor
jnp
aad
mov
insl
and
sbb
test
xor
lock
mov
testl
iret
in
in
test
data16
mov
jmp
popa
ret
pop
jl
imul
mov
mov
in
and
sbb
ror
mov
and
lea
addb
test
push
sbb
ljmp
ficompl
nop
xchg
sub
mov
add
fdiv
incl
xchg
mov
pusha
enter
bswap
xor
ljmp
mov
add
js
fisubrl
cwtl
icebp
jg
stc
out
ss
aad
inc
sbb
shlb
adc
mov
jns
push
lret
add
mov
out
cmpsb
loope
mov
cli
adc
loop
ljmp
lods
push
movsb
sub
xlat
inc
js
arpl
jp
cld
dec
push
stos
test
push
mov
std
jge
frstor
mov
imull
loopne
pop
pop
inc
cwtl
pop
mov
and
int
fldl
push
push
cmp
jl
sub
js
popa
sbbb
sbbl
loope
pop
dec
add
movl
addl
mov
xor
push
ljmp
add
lahf
div
dec
movsl
mov
fcoml
mov
add
and
aad
les
mov
insl
xchg
enter
cmp
sbb
cmp
pop
sub
dec
outsb
bound
push
aaa
jge
rcll
xor
dec
adc
mov
dec
add
mov
ret
cli
pop
mov
addr16
rcrb
subb
jnp
fistpl
outsl
ja
lods
aaa
dec
test
pusha
mov
cmp
iret
bound
mov
outsl
imul
xchg
lods
xchg
xchg
lret
rolb
push
push
and
mov
inc
rcll
push
cli
mov
jns
sbb
push
push
in
repz
xchg
aaa
cwtl
mov
push
arpl
mov
sub
andb
mov
out
mov
sbb
arpl
lret
movsb
iret
jne
inc
lcall
jae
movl
mov
dec
aad
scas
jp
sub
jb
sbb
push
repz
push
lahf
inc
sub
push
or
icebp
mov
adcl
xchg
popf
movb
imulb
xor
loope
mov
into
add
mov
xchg
dec
scas
mov
mov
xchg
adc
lcall
xchg
inc
jne
ret
fisubrl
inc
jg
push
xchg
xchg
mov
dec
js
xchg
xor
xor
pop
in
mov
add
mov
mov
xor
xchg
pushf
sbbl
addr16
shlb
aad
sub
and
or
les
xchg
in
xor
push
and
xor
mov
adc
jp
push
lods
ret
shll
mov
xor
mov
xchg
xchg
jne
push
mov
push
push
js
jmp
xlat
mov
into
imul
stos
fisubl
sub
cld
scas
std
das
adc
aad
scas
or
cmp
sub
cmpsl
xor
sub
popa
and
xor
int3
lods
pop
lret
sahf
in
pop
mov
pop
push
xchg
or
jle
push
shll
sbbl
sbb
inc
fdivs
push
out
pop
dec
stos
shrl
lds
lds
xor
sarl
inc
stos
fidivrs
jnp
push
mov
push
cltd
ds
repnz
dec
int
and
mov
xor
cmpsb
out
ja
jnp
mov
mov
add
stos
push
xlat
sbb
jmp
sub
sub
dec
sbb
fwait
repnz
xchg
aas
jae
fimull
test
jno
lods
scas
inc
and
inc
or
test
in
cs
dec
lcall
add
lods
mov
scas
push
xchg
sub
mov
add
or
daa
pop
lods
in
in
fmuls
xor
or
pop
out
dec
mov
sub
shll
xchg
xor
jbe
mov
mov
lret
pop
cmp
fsubs
lds
ljmp
sbb
gs
dec
adc
aas
scas
mov
out
pop
pop
jae
fcmovbe
jge
add
xor
iret
dec
lea
adc
test
add
xchg
adc
mov
test
hlt
popa
jns
cmp
jne
adc
and
and
sbb
or
icebp
das
push
das
mov
popa
mov
dec
add
rorl
cmp
lcall
sub
sub
mov
jne
push
fisubs
nop
dec
outsl
adc
lcall
imul
dec
mov
int3
sub
sbb
cli
xor
push
sub
and
pop
add
daa
or
mov
dec
jbe
gs
sub
lods
lret
inc
into
sbb
mov
mov
loopne
xor
stos
or
jle
xor
and
sub
pop
mov
nop
fwait
bound
in
dec
xchg
addr16
inc
int3
jmp
fdivrl
xor
test
jae
push
ss
lcall
fisttpll
xchg
gs
daa
test
mov
daa
push
call
mov
push
cmp
cld
or
shll
es
inc
out
mov
xchg
int3
mov
aaa
ffree
hlt
cmp
sub
test
insb
cmp
inc
in
and
sahf
out
ret
daa
xor
popf
inc
mov
push
push
pop
jns
xor
xchg
mov
nop
inc
bound
jnp
push
stos
pushf
mov
inc
stos
lods
sub
cltd
dec
and
jle
inc
mov
mov
mov
shl
push
outsb
mov
test
cmp
and
mov
lods
scas
insl
gs
xor
pop
sub
pop
jne
mov
mov
insb
into
ss
mov
fldenv
push
hlt
mov
cltd
push
popa
xor
jmp
into
xchg
adc
ss
sub
mov
dec
pop
mov
xlat
add
sub
dec
les
notl
adc
ja
sbb
dec
stos
and
dec
dec
mov
pushf
mov
int
cmp
incb
fsts
cmp
in
out
mov
and
adcl
lcall
and
lcall
jne
mov
decb
xor
push
cmp
or
push
mov
imul
sbb
ljmp
jmp
shl
sarl
mov
bound
xchg
addr16
cmp
bound
rcll
xchg
dec
out
scas
ret
mov
push
add
ss
adc
add
dec
out
and
dec
sbb
into
bnd
cmp
out
stos
adc
adc
out
lret
lret
leave
mov
pop
cmp
jmp
pop
push
jl
push
sarb
fcompl
xor
jle
add
dec
lret
adc
dec
mov
push
mov
sbb
mov
mov
mov
repz
je
shrl
jle
xchg
ficomps
mov
int
xor
cmp
sub
pop
xlat
in
or
or
mov
in
xchg
adc
cmp
pop
sub
subl
xor
std
sub
jp
insb
push
icebp
scas
and
std
pop
in
rorb
aad
xor
xor
push
cmpl
sbb
int
lods
mov
xor
sub
xor
jo
out
jg
dec
or
insb
rcrl
cmp
movsl
pushf
fbstp
mov
test
or
adc
mov
xchg
pusha
or
push
adc
mov
mov
mov
xchg
repz
shr
mov
pusha
outsb
sbb
cld
push
push
pop
inc
arpl
decl
in
adc
push
jb
orb
cmpl
call
sbb
jmp
push
stos
shl
inc
mov
ljmp
dec
adc
mov
mov
orl
jnp
or
jle
repz
imul
imul
pop
fstpl
and
imul
hlt
inc
sbb
pushf
test
scas
repnz
cmc
fwait
inc
push
mov
inc
out
xor
mov
xchg
mov
push
xor
push
ds
into
cmc
push
fwait
and
mov
cmp
inc
push
int
mov
outsb
cmpb
jl
mov
mov
enter
inc
pop
push
push
adc
push
xor
cltd
mov
adc
or
xchg
pop
cmp
mov
jp
pop
sbb
or
push
or
pop
lahf
adc
lret
out
push
mov
push
mov
xor
jge
lcall
push
or
xchg
daa
cmpb
je
lods
sub
lods
decb
mov
jl
sub
mov
call
mov
loop
inc
xor
jecxz
fwait
andl
aad
and
pop
gs
cmp
int3
test
cltd
and
andb
and
lcall
iret
fildl
jne
lea
cmpsb
push
std
jmp
shld
dec
sbb
pop
mov
leave
lcall
icebp
mov
shlb
cli
lcall
repnz
cmpsl
in
inc
or
mov
inc
or
push
lret
inc
movsb
outsl
ljmp
rcll
loopne
add
movsl
push
ret
divb
bswap
bnd
sbb
cmpsb
cmp
test
shrb
inc
addr16
int3
popa
frstor
aaa
aad
loope
dec
pop
sub
mov
sbb
pop
inc
icebp
pushf
pop
pop
push
jbe
aaa
mov
cs
in
ds
xor
into
jle
jno
and
dec
aad
mov
sub
testl
mov
cmp
pop
mov
xor
in
xor
sbb
ret
scas
sub
jns
mov
mov
or
negb
mov
and
push
xor
mov
mov
mov
sbb
cmp
cs
add
add
mov
mov
mov
dec
arpl
mov
xchg
lret
cltd
test
outsl
jl
in
pop
jl
test
outsb
ss
inc
dec
mov
scas
icebp
mov
fs
or
adcb
mov
adc
dec
lods
sbb
fadd
aam
and
cltd
mov
jg
or
fistpl
lds
out
sub
add
xor
mov
jg
push
ret
pop
push
cmp
xorb
pop
adc
jae
aas
popa
push
sbb
int3
inc
pushf
xor
mov
dec
inc
bound
repnz
inc
sub
insb
jg
mov
in
adc
ljmp
mov
mov
mov
fldenv
push
push
ret
je
push
mov
into
subb
gs
mov
pop
out
cmc
test
sbb
cmc
xchg
bound
fnstenv
loopne
add
movsl
loop
xchg
jae
xor
in
mov
sbb
inc
inc
jg
lods
xor
adc
dec
xchg
cmp
adc
mov
mov
scas
push
es
jle
dec
daa
fcomps
pop
xchg
inc
xor
mov
in
in
push
xor
add
adc
mov
jecxz
pop
mov
addl
fisubrl
push
fwait
adc
fisubs
pushf
int3
adc
mov
inc
hlt
cld
imul
sbbl
fidivs
cmpsl
fdivrp
jnp
mov
jge
mov
lcall
jmp
cmp
stos
inc
into
fsubp
push
lods
inc
sarl
mov
aaa
shlb
aas
insb
aam
dec
aaa
sub
jb
lock
push
mov
shrb
or
bound
mov
and
dec
add
inc
test
lahf
mov
mov
lahf
popa
mov
xor
mov
pop
push
fsubrp
or
inc
jmp
sahf
lods
leave
push
mov
jnp
push
xor
pop
das
roll
dec
push
test
dec
add
fnstcw
cmp
pushf
xor
sub
inc
lahf
cltd
out
xlat
and
or
call
jnp
cmc
xchg
out
jnp
int3
das
push
pop
jbe
cmp
sbbl
or
mov
push
popa
jbe
ljmp
or
push
adc
inc
jns
mov
testb
add
std
mov
scas
mov
cmp
sti
dec
es
xchg
xchg
mov
fildll
pop
cmp
pop
xor
outsl
subl
jge
or
js
leave
jecxz
fiadds
aad
fwait
cmpsl
xor
jecxz
repnz
add
mov
lret
or
inc
inc
or
and
mov
notl
gs
lahf
mov
push
repnz
pop
ds
dec
mov
test
arpl
dec
out
sub
cmpb
and
jo
ss
sbb
jne
mov
lds
mov
xchg
mov
call
sbb
and
stc
dec
cmpsl
add
or
dec
adc
lea
pop
xor
mov
xor
pushf
adc
rorb
pop
int3
fnstenv
fsubs
adc
shlb
repz
dec
and
cmp
lds
add
xchg
cmp
xchg
mov
cmp
dec
sub
dec
int
fcoms
dec
inc
test
sub
movsl
out
adc
sub
shlb
xor
int3
or
out
mov
dec
faddl
push
mov
fmull
shrb
mov
push
push
push
or
subb
xor
scas
or
stc
push
enter
inc
mov
push
fldenv
rcrb
stc
mov
jge
popf
clc
sbb
push
gs
bound
mov
add
int3
int3
loop
shrl
scas
add
add
imul
arpl
insb
pop
dec
outsl
lahf
mov
ja
test
push
xchg
push
repz
push
sub
mov
push
xor
in
dec
mov
mov
or
sti
lret
aam
test
mov
bound
popa
pop
out
pop
out
cli
lret
xor
incl
xchg
das
inc
pop
stc
ret
pop
adc
mov
push
and
repz
add
pop
in
cwtl
jg
pop
repnz
pushf
pop
leave
push
sbb
cmpsl
cld
mov
mov
xor
sub
inc
xor
dec
xor
ret
test
and
out
test
mov
sbbb
and
xor
test
lret
cmpsb
ret
mov
test
mov
sarl
xlat
mov
jp
mov
fildll
mov
mov
mov
inc
test
jne
jbe
scas
loop
xchg
xchg
bound
mov
stc
adcb
std
test
jle
pop
sbb
clc
ja
xor
mov
add
sbb
negl
cmp
jb
sarb
fnstenv
inc
pop
adcb
andb
sahf
cmp
adc
lea
and
mov
test
movsl
mov
jnp
sbbb
dec
fiadds
out
cli
scas
or
shrb
sub
jge
lea
sbb
pushf
mov
fsubrs
int
mov
or
xchg
out
mov
imul
cmpsb
jno
arpl
pop
enter
xchg
inc
dec
mov
fwait
mov
push
mov
xchg
push
jo
icebp
cli
xor
dec
cli
mov
out
mov
and
loop
inc
dec
dec
push
test
test
fs
cmpsb
xchg
sbb
nop
pusha
cmp
les
jmp
jge
mov
cmp
fstl
loope
outsl
shll
aaa
stos
dec
pop
push
es
and
inc
imul
add
scas
sub
push
dec
mov
int3
gs
inc
or
test
fs
test
jmp
xchg
adc
dec
ljmp
in
jp
rcrl
call
pop
xor
push
jp
cmp
enter
les
pop
jl
jbe
lds
cmpsl
mov
mov
cmp
dec
jbe
pop
push
lods
and
aad
jnp
lds
in
shll
repz
sub
test
stos
dec
cmpsl
test
jmp
adc
fs
cmp
sbb
sbb
cmp
cmp
cmp
xor
inc
adc
push
push
jl
lock
fstp
mov
mov
sarl
adc
add
sub
rclb
cmpsl
adc
push
push
out
xor
or
cwtl
jo
dec
or
in
cmp
xchg
push
nop
cwtl
dec
mov
cmp
shlb
pushf
adc
sbb
xor
add
loope
iret
xor
mov
inc
in
dec
xlat
addr16
mov
push
ja
ja
insl
jb
fldl
and
in
inc
rol
cltd
cmpsl
mulb
push
cmp
sti
stos
lret
sahf
inc
xor
pop
loopne
add
cltd
lcall
adc
pop
add
bound
dec
jecxz
scas
cltd
gs
loop
test
push
add
add
lcall
mov
insb
fistpll
sbbl
lret
dec
out
xor
dec
data16
mov
mov
push
bnd
push
idivb
pop
sbb
mov
and
bound
mov
mov
jns
dec
addr16
aam
jmp
jle
jnp
into
into
stos
lret
xchg
xor
out
andl
push
imul
out
push
xchg
and
sub
cli
push
pop
cwtl
shl
fidivrs
test
shrb
push
aas
cmp
push
add
ret
call
call
insb
mov
xor
ljmp
mov
int3
call
mov
push
jge
mov
stc
ret
dec
jbe
ret
mov
nop
cs
mov
insb
pushf
movsb
cmp
add
jnp
mull
dec
in
jge
sub
out
xchg
mov
adc
jno
push
push
xchg
mov
fimull
gs
push
dec
pop
cmp
sbb
push
mov
mov
add
cltd
adc
mov
or
jl
inc
push
gs
inc
cs
iret
test
mov
dec
rcrl
pop
dec
push
sahf
adc
and
sarb
aam
mov
call
lret
xor
movsb
sahf
bound
xor
dec
setle
lods
pop
sub
push
jle
adc
jge
lret
lea
mov
fdivs
cli
and
scas
adc
jle
xchg
lods
pop
cmp
push
fnstsw
mov
add
mov
cs
repnz
ficompl
xchg
loope
movsl
aaa
mov
loop
stos
lret
pop
mov
scas
out
shl
ja
push
scas
cmp
push
push
xor
xchg
add
test
xchg
pop
aaa
and
or
inc
or
xlat
loope
in
stc
cmp
adc
fs
cmp
jp
sub
mov
stos
xor
jl
subl
loope
pusha
push
cs
mov
mov
sub
scas
outsb
lea
jecxz
test
cmc
std
sub
mov
aaa
js
or
je
adc
mov
or
popf
pop
mov
sbb
call
lods
ss
imul
cmpsl
sub
popa
cmp
pop
push
pop
pop
sbb
mov
filds
or
push
andb
inc
cmp
mov
jno
and
cmp
shr
lret
clc
bound
xor
addr16
sub
cmp
xor
pop
ja
in
fistl
cmp
test
inc
imul
call
push
push
dec
jg
jl
mov
sar
adc
jmp
lret
hlt
subl
and
fimull
xchg
mov
sub
scas
in
ss
mov
dec
mov
xchg
adcl
and
loop
outsl
push
mov
mov
inc
mov
and
cmpsb
mov
cmp
push
bound
dec
call
mov
movsl
aaa
bound
dec
es
es
xchg
test
dec
fldenv
in
fisttpll
xor
or
arpl
test
mov
push
dec
push
mov
xlat
pop
inc
in
mov
cmp
adc
lea
add
cltd
jb
imul
scas
lock
and
movsb
les
mov
push
fisttpll
inc
sub
mov
mov
divb
cmp
lods
jns
pop
btl
adc
daa
sbb
adc
and
cli
mov
xchg
mov
stos
sbb
jle
loop
rol
ficomps
cmpsl
insl
sub
bswap
sbb
into
adc
insb
mov
int
cmp
sub
test
add
loopne
into
push
pop
stos
dec
and
pop
rorl
testb
fistps
das
movsb
and
rorb
jmp
sub
cld
jne
xor
and
sbb
inc
push
cmp
ret
xchg
clc
outsl
mov
loopne
std
ret
aam
fadd
shl
mov
inc
dec
stos
jno
cmp
ds
mov
sbb
ljmp
shl
lret
test
pop
lods
or
subl
lret
cli
movsl
mov
int3
test
or
mov
jmp
add
ret
fistpl
push
cmc
xchg
fldl
cs
ret
gs
mov
mov
fsubs
mov
outsl
lret
cmp
sar
sbb
in
sub
push
pop
mov
pop
and
cmp
jb
sbb
insb
push
push
and
xor
mov
clc
xchg
test
fdivs
mov
cs
add
sub
stos
fmulp
sub
mov
jno
add
dec
fisttpl
movsl
iret
icebp
fiadds
aaa
or
pop
dec
xlat
lcall
xor
imul
iret
jecxz
rorl
adc
push
push
imul
lock
cmp
add
xchg
cmp
pushf
stc
loop
inc
push
pop
test
or
mov
jb
mov
or
cmc
and
mov
out
inc
nop
mov
mov
lcall
xor
bound
call
jmp
testb
movsb
dec
pop
inc
add
enter
into
mov
mov
inc
mov
or
roll
mov
sbb
cmc
and
jmp
add
pop
xor
icebp
mov
rcrb
lods
imul
inc
jg
push
cwtl
xor
dec
push
pusha
test
fisubrl
dec
cli
scas
jmp
add
aad
xor
imul
pop
xor
shlb
sti
and
scas
call
loope
mov
push
cmp
cmp
cmc
mov
mov
sahf
sbb
adc
or
xchg
test
repz
adc
xor
ret
leave
cmp
sarl
push
jle
int3
lock
push
inc
xchg
fstp
mov
or
cmp
enter
aas
adc
rorl
xlat
push
les
xor
inc
rcrb
sub
jge
xor
mov
pop
sbb
jp
jns
sbb
aas
jge
cltd
dec
shlb
nop
mov
dec
cmp
mov
mov
inc
lahf
dec
int3
lcall
pushf
sbb
loop
mov
pop
push
dec
push
cltd
dec
repz
mov
scas
leave
sbb
pushf
fwait
sbb
and
imul
mov
in
push
sbb
aam
jb
jp
or
daa
jmp
and
mov
loopne
mov
out
lret
push
cmp
add
push
inc
pop
arpl
mov
subl
movsb
lea
inc
shrb
dec
add
bound
iret
inc
imul
into
lea
clc
pop
lea
push
mov
lret
and
test
sbb
and
and
stos
pop
stos
sbbb
push
rorb
sub
cltd
cmp
dec
adc
ljmp
inc
out
mov
xorb
movsb
pop
sub
imull
dec
xor
dec
dec
jbe
shlb
cmc
mov
aad
es
repz
inc
inc
mov
ss
lods
daa
test
in
jb
icebp
mov
xor
xchg
stc
je
or
icebp
jae
dec
loop
mov
mov
add
pop
scas
lods
lea
jne
ret
nop
nop
aad
add
sub
sbb
test
lock
dec
and
jmp
ljmp
cli
mov
sub
mov
sub
dec
push
call
xor
mov
or
mov
loop,pn
addb
aaa
daa
or
popa
jp
inc
mov
push
sub
xchg
loope
popa
mov
cmpsb
sbb
sahf
fcmovne
dec
mov
cmp
jmp
addr16
jmp
xorb
lock
cwtl
fs
adc
adcl
dec
sbb
jle
or
in
cwtl
dec
pop
dec
clc
addb
dec
jle,pn
mov
mov
xor
push
add
sub
xor
add
cld
fstl
addl
and
insb
subl
cmp
fisttpll
mov
mov
outsb
adc
jne
mov
pop
cmp
sub
daa
lods
test
mov
or
out
xor
ds
lahf
add
push
roll
mov
mov
and
lock
xchg
movsb
jge
xchg
inc
mov
mov
movsl
sti
fdivl
cmp
stos
dec
pusha
push
fdiv
imul
fcmovnbe
daa
pop
lods
decl
idivl
jmp
cmp
push
rcrb
int
lret
adc
push
icebp
sbb
rcll
mov
pushf
or
mov
nop
outsb
inc
lret
cltd
lods
push
movsl
out
subb
pop
sbb
sbb
cmpsb
mov
push
shrl
fadds
or
repnz
add
sub
imul
out
fs
cmc
xor
adc
jg
add
cmp
clc
mov
outsb
add
neg
sub
jnp
mov
jnp
push
mov
outsl
mov
mov
push
rorl
sub
loopne
hlt
lea
pop
and
jae
xchg
pop
push
loope
cmp
xlat
jecxz
icebp
push
add
daa
les
xchg
add
repnz
movsb
subl
mov
xchg
scas
push
out
lret
dec
jne
fs
aam
and
adc
sti
or
lahf
fmuls
xor
xor
nop
cs
push
stos
xor
mov
xor
out
sbb
icebp
dec
xor
ret
outsb
icebp
sub
adc
jo
scas
xchg
push
in
mov
mov
cmp
cmpsb
cld
xor
adc
dec
popa
push
mov
push
mov
out
mov
mov
and
icebp
movsb
and
rol
pop
cs
xchg
loop
adc
stos
movsl
idivl
mov
stos
icebp
xchg
xchg
dec
outsb
jg
loop
fisubrl
mov
repz
nop
and
das
insl
jmp
out
sti
por
push
pop
pushf
jae
pop
mov
pop
jl
xchg
xor
das
lock
roll
js
dec
xchg
mov
sti
or
ja
adc
orl
xchg
aaa
and
pop
push
dec
cmp
popa
inc
lds
loope
sahf
std
subl
daa
pop
or
or
mov
sbb
jns
jmp
mov
sbb
mov
subl
enter
xchg
mov
inc
subb
xchg
mov
dec
fadd
jbe
cmp
loopne
stos
fmuls
fucompp
sbb
push
push
mov
dec
loop
jle
or
fwait
lods
aas
jge
idivl
ret
and
xor
xor
je
jg
lahf
ss
dec
mov
pop
mov
mov
xor
loop
jp
jl
sbb
stos
jecxz
or
insb
sahf
pop
dec
in
xchg
loope
add
dec
inc
fcom
jbe
mov
sub
mov
das
pop
sbb
das
pop
pushf
andl
cmpsb
je
lahf
jno
cmp
xlat
sub
and
cmp
cs
pop
gs
push
push
cmp
repnz
notl
cld
mov
mov
repnz
mov
icebp
fwait
icebp
ja
imul
inc
mov
sub
mov
jle
push
mov
jb
scas
sbb
mov
test
mov
push
lock
lock
xchg
add
cwtl
jge
pop
dec
pop
nop
dec
push
popf
xchg
cmp
fsubr
es
pop
addr16
fadds
mov
scas
lcall
test
lcall
aas
or
int3
loope
dec
rclb
mov
push
dec
inc
pop
jbe
pop
mov
cmpl
mov
mov
ret
out
jmp
aaa
xor
sbb
stos
mov
dec
repz
dec
jmp
pop
imul
repnz
mov
or
in
inc
dec
mov
lock
mov
lret
push
mov
dec
jecxz
cmp
jle
lods
jnp
std
jg
sub
push
mov
pop
fdivrl
sub
int3
iret
mov
push
cmp
add
jl
add
xchg
adc
outsl
outsb
jae
repz
lcall
lahf
cmp
sbb
jle
mov
das
push
mov
repnz
mov
sbb
aas
lods
popa
add
stc
lods
and
std
sbb
pop
sub
mov
sbb
cs
lahf
aam
shll
push
mov
aam
fsubs
iret
sub
stos
inc
push
aam
shll
push
pop
mov
fists
int3
fsubl
lcall
sub
or
cmp
test
nop
sub
or
mov
jae
je
jl
jmp
cmp
cwtl
out
adc
or
jecxz
call
mov
or
stos
lds
cmpsl
cmp
aad
icebp
push
sti
mov
sbb
les
ret
pop
pop
outsb
pop
and
or
mulb
outsb
jb
or
mov
pop
js
mov
hlt
jp
push
fnstcw
xchg
out
or
cmc
ljmp
sub
bound
jg
xor
xacquire
pop
push
out
loope,pn
push
lods
or
ror
pushf
and
notl
sbb
and
mov
pusha
jle
mov
bound
pop
xor
pusha
mov
lret
and
jg
add
push
and
scas
mov
dec
movl
sub
mov
es
int
fldcw
inc
lret
lret
std
xchg
cwtl
pop
xor
iret
ja
sti
mov
inc
adc
xor
xchg
push
call
cmc
ret
mov
pop
mov
lret
in
mov
pop
outsb
xchg
ror
sub
jp
fwait
inc
lret
inc
xor
inc
test
inc
inc
std
mov
push
add
mov
sbb
mov
aaa
ljmp
fwait
inc
dec
les
xor
out
lea
xchg
xor
pop
jle
mov
icebp
btc
mov
mov
dec
push
aam
adc
rol
out
imul
aas
and
pop
rcrb
push
push
fs
cmp
xchg
pop
mov
xor
shll
cmp
jo
icebp
mov
imul
fwait
ret
push
int
xor
pand
inc
jecxz
subl
push
add
mov
or
dec
xchg
sub
sbb
std
outsb
mov
push
in
sbb
adc
add
adcb
mov
mov
out
push
sbbl
je
rol
sub
add
test
rol
pop
call
or
lret
notb
lcall
xchg
negl
mov
mov
jae
out
lock
xor
mov
scas
repz
loopne
jmp
jbe
sub
mov
pop
lock
stos
mov
jle
add
fidivrl
fisttpll
or
adc
adcl
or
jg
cld
mov
add
mov
in
xchg
test
es
jle
dec
jb
jnp
sub
lret
cmc
pop
mov
es
aas
jmp
lret
daa
ds
roll
push
jle
mov
lods
insb
scas
adc
adc
lea
lea
dec
bound
repz
out
mov
sbb
arpl
cmp
ret
inc
xchg
std
xor
add
xor
in
inc
add
xor
icebp
outsl
jnp
scas
dec
scas
xchg
movsb
push
out
mov
pop
les
push
pop
in
adc
pop
and
pop
std
mov
movsb
incl
popa
ljmp
jne
and
or
mov
nop
pop
addb
stos
sbb
ret
mov
push
cmp
dec
mov
cmp
add
xchg
jmp
mov
pop
lea
and
jg
gs
mov
sub
jge
cld
jae
jl
xor
inc
out
inc
adc
mov
dec
sub
aad
in
lea
outsl
or
loopne
push
sbb
int3
popf
subb
clc
into
lret
sbb
in
jge
adc
or
icebp
data16
adc
add
cmp
pusha
or
pop
repnz
andl
fwait
nop
les
or
sbb
push
repz
push
and
cmp
lock
or
jb
push
cmp
ret
cmp
jg
icebp
insl
xor
or
inc
pop
xchg
std
in
push
lcall
aam
or
daa
mov
loopne
dec
add
cs
jg
negb
mov
std
bound
in
mov
xchg
inc
push
shl
dec
pop
sbb
mov
adc
aad
idivb
xor
outsb
paddb
enter
inc
xchg
mov
mov
jno
jnp
mov
dec
or
mov
inc
sub
stc
jp
pusha
out
dec
nop
cmp
dec
pxor
or
and
stos
iret
xlat
or
mov
pop
mov
mov
out
movsl
mov
mov
mov
das
test
sub
dec
mov
in
push
pop
sbb
arpl
pop
stos
jle
mov
cmp
jno
inc
push
mov
scas
xor
pop
adc
dec
lcall
mov
cltd
scas
jne
enter
mov
outsl
mov
dec
add
in
ss
adc
pandn
jno
adc
pop
in
jb
aad
pusha
sbbb
bound
adc
push
dec
mov
mov
test
mov
loope
lods
cmp
int
xor
jle
leave
mov
and
insl
pop
scas
jecxz
mov
xlat
popa
shlb
adc
aaa
mov
pop
imul
andb
pop
xchg
cmpsb
sbb
es
dec
mov
daa
in
pop
dec
idiv
leave
leave
xor
cs
sub
lock
loop
pop
enter
and
divl
mov
dec
lds
push
mov
fnstenv
ret
adcl
rol
add
pop
addl
imul
xchg
js
or
stos
and
ret
add
xchg
sbb
adc
lock
out
sub
popf
lea
std
lock
xchg
ja
add
push
sbb
test
add
insl
xchg
inc
pop
out
cmp
mov
fcomps
iret
pop
adc
push
mov
mov
inc
fstpt
cmpsb
aad
add
pushaw
sbb
mov
add
pop
fsubs
mov
or
sub
aaa
ret
push
sahf
rcrb
mov
xlat
xchg
std
insl
adc
or
pop
and
fcmovu
inc
xchg
inc
dec
pop
xlat
xchg
jno
and
add
cmp
leave
sbb
and
add
popf
daa
sbb
xchg
mov
add
das
mov
fs
outsl
test
xor
fstl
ljmp
push
das
pop
pop
mov
dec
jecxz
addr16
flds
cwtl
mov
sbb
push
or
adc
and
imul
popa
cmp
mov
dec
push
test
sub
mov
mov
inc
add
sbb
test
mov
sub
xor
sub
stos
aad
jecxz
popf
popa
adc
into
popa
cmp
pop
inc
test
lods
mov
test
mov
imul
sub
push
jmp
push
fcomps
ss
xchg
mov
jbe
ja
into
sub
mov
inc
je
lahf
push
jo
xchg
int3
add
scas
xor
jbe
push
xchg
and
std
sub
dec
call
mov
mov
inc
mov
mov
repz
out
movsl
xchg
lods
inc
loope
cmp
dec
fistpll
aas
mov
idiv
movsl
or
dec
jp
pop
test
xor
sbb
mov
adc
cmp
jecxz
jbe
pop
sbb
fmulp
xchg
sub
loope
imul
movlps
jbe
mov
inc
nop
sub
jb
rorb
scas
es
inc
stc
test
mov
mov
mov
rcll
fidivl
xchg
jge
daa
sub
add
mov
std
push
dec
mov
mov
dec
jle
ljmp
lcall
addb
test
lods
or
test
xor
mov
dec
lods
cmp
pop
mov
push
iret
stos
fbld
cmpsb
sbb
loopne
ss
or
dec
lods
or
push
mov
ret
add
inc
test
sub
inc
mov
hlt
pop
sub
mov
lods
pop
adc
pop
test
cmp
mov
mov
imul
testb
cmpl
cmp
fcoml
icebp
pop
pop
pop
jo
movsl
out
sub
and
lret
sub
pop
jp
shlb
xchg
and
mov
jae
or
xchg
in
cmp
nop
and
popa
in
mov
mov
adc
sbb
pushf
mov
or
push
cmp
insb
and
add
out
jp
pop
in
js
int
cmp
mull
push
lcall
stos
out
push
lcall
outsl
data16
pop
dec
mov
push
push
pmullw
mov
enter
loop
add
lock
test
fdivs
into
aam
icebp
mov
lea
int3
push
pop
js
cmp
icebp
and
mov
adc
int
mov
daa
cmp
pop
mov
fcoml
rcr
adc
lods
push
adc
adc
pop
mov
cli
call
cmp
sub
or
and
in
sub
xchg
sub
arpl
lea
outsb
cmp
jmp
pop
sub
mov
pop
lods
dec
loopne
iret
jae
loopne
push
mov
xor
adc
aas
jns
fadds
data16
cmp
sbb
dec
dec
adc
cmp
dec
repz
mov
jns
stos
jne
sbb
out
xor
gs
cltd
mov
xchg
cmpsl
or
loop
jge
mov
jecxz
fdivrp
push
lea
push
sub
das
not
int3
sar
cltd
jp
sub
mov
aad
jae
out
mov
pop
and
cmpsb
mov
cmpb
js
inc
test
inc
jae
leave
and
shrl
sub
outsb
sbb
pushl
rcrb
in
xor
movsb
pop
es
int
popa
cs
xchg
cmp
in
out
and
mov
scas
stos
js
mov
test
mov
pusha
das
stos
hlt
jne
add
movsb
pop
shr
sti
test
mov
lret
and
cld
xchg
xchg
icebp
pop
push
testl
ss
dec
xchg
push
aad
test
dec
addr16
sahf
ret
int
and
xor
lahf
push
and
daa
cmp
xchg
ret
scas
popf
lock
sahf
mov
xlat
imul
sbb
jge
lods
into
sbb
stc
stos
arpl
andb
jmp
test
lret
add
call
loop
mov
faddl
inc
imul
fwait
das
dec
mov
mov
push
movsl
adcl
inc
lds
and
popf
nop
int3
cmp
push
repnz
data16
or
or
fldt
xor
inc
push
inc
scas
xchg
add
test
xor
jge
lcall
das
inc
mov
sub
cltd
jb
sbb
pushf
mov
or
scas
hlt
mov
jl
das
jae
sub
sahf
sarl
in
sub
sub
lods
inc
sub
push
adc
mov
mov
je
add
fwait
and
jge
cmpsb
and
xchg
sbb
add
scas
jno
es
jne
in
xchg
push
mov
inc
gs
pop
adc
fidivl
inc
and
icebp
jl
mov
cli
xchg
arpl
fimull
dec
jmp
xor
js
sbbl
cwtl
push
dec
aad
nop
fs
mov
ja
clc
push
test
ljmp
pop
insb
add
sbb
pop
jnp
jbe
int
add
jmp
xor
sub
movsb
jecxz
push
mov
in
in
push
pop
jg
and
jecxz
push
pop
std
stos
inc
inc
sbb
inc
sbb
ret
cmp
js
cwtl
sbb
inc
inc
dec
push
ss
in
pop
or
sbbb
add
adc
xchg
std
sub
xchg
lahf
sbb
sub
out
xchg
jl
cmpsl
rclb
subl
xchg
call
fnstsw
add
jnp
rorb
push
sbb
cmp
es
mov
inc
bound
jmp
outsb
cmpsb
popf
outsl
cmp
lret
and
adc
mov
mov
xlat
sub
sub
pop
xor
inc
fsubrl
pop
push
and
mov
roll
jge
mov
addr16
push
pop
imul
xchg
int
pusha
icebp
add
nop
pushf
cs
scas
stos
lret
add
xchg
push
cmp
cmpsl
dec
jle
fldt
sub
jmp
mov
cmp
adc
xchg
gs
scas
lcall
fdivrl
jecxz
cli
push
int3
rolb
ds
shll
lahf
inc
inc
sbb
mov
inc
sub
outsl
xchg
fbstp
ds
cltd
repz
mov
insl
fwait
sbb
xchg
dec
daa
sub
roll
inc
ja
dec
xchg
and
insl
xor
mov
mov
arpl
pop
push
ret
dec
or
add
push
lock
mov
mov
clc
cmp
jnp
add
mov
in
ret
fstpt
hlt
cmp
pushf
daa
push
mov
subl
jo
mov
dec
or
dec
pop
out
xor
movsb
jge
pop
adc
popf
ds
mov
sbb
fistpll
loop
push
sbb
out
mov
decb
adc
popa
shl
sub
dec
and
ret
and
add
adc
cmp
cmp
inc
push
imul
test
xor
mov
mov
push
out
pop
sub
ja
dec
xor
lret
xor
jae
sub
ret
aam
sub
sti
push
fucomi
push
lret
loope
jae
lcall
outsb
xchg
sub
inc
stos
insl
stos
cmp
int3
cmpsb
push
test
aad
xchg
repnz
test
aaa
inc
push
sbb
mov
sub
stos
adc
mov
mov
fiaddl
mov
xchg
mov
ficomps
mov
add
test
push
mov
xor
in
lods
and
mov
dec
inc
mov
mov
sahf
popf
sbb
pop
pushf
or
mov
fisubrs
and
loopne
rorl
fistps
sub
daa
mov
xlat
mov
bound
ret
out
sbb
dec
sbb
sub
imul
mov
popf
mov
or
sub
dec
mov
repnz
jno
pop
sbb
mov
xchg
mov
add
lret
iret
push
push
push
repnz
mov
sbb
pop
fdivrl
and
cltd
or
push
movl
sub
lea
popf
rcll
push
out
test
sbb
and
mov
push
xchg
sub
sub
es
mov
sub
pop
xchg
jne
std
dec
push
mov
inc
sbb
lcall
into
andl
dec
mov
jle
xchg
add
pop
mov
and
and
scas
xchg
and
sub
test
xchg
jno
aam
mov
and
pop
sub
imul
cli
cld
xchg
adc
dec
sub
bound
mov
adc
mov
xchg
dec
dec
sahf
xor
push
out
into
mov
dec
stos
sti
int3
mull
fistpll
xlat
out
xchg
mov
inc
pop
lea
push
and
adc
xchg
adc
dec
inc
sub
int3
xor
xorb
mov
enter
outsb
fidivrs
ret
push
sbb
mov
stos
jmp
daa
mov
insl
mov
ret
cmp
lret
ret
jno
out
dec
test
ss
push
popf
adc
setae
popa
subb
add
sub
icebp
or
inc
rcrb
adc
cs
cmp
stos
sbb
popa
push
icebp
dec
mov
xor
sub
cmp
out
in
xchg
in
out
insl
dec
inc
mov
dec
cwtl
int
bound
movsl
adcl
xchg
adc
lahf
jge
sub
jle
or
cmp
sbb
push
test
jnp
rcrl
push
cmpl
ljmp
mov
loop
cltd
in
mov
jae
cld
xor
xor
shlb
sub
cmp
or
jg
fwait
adc
mov
icebp
pop
fiadds
ror
sti
test
insb
stos
das
inc
scas
push
dec
mov
mov
loopne
das
push
sub
jge
popa
and
addr16
cmpb
ret
lock
xchg
jb
sbb
stos
add
jg
mov
jecxz
xchg
xor
jecxz
sbb
rorl
ret
bound
xchg
addr16
fcoms
es
mov
mov
ds
shll
mov
xchg
lods
sbb
and
jecxz
pop
rclb
shll
or
mov
sbb
sarb
or
jns
dec
mov
fldcw
add
loope
cmc
mov
cmp
repnz
pop
jp
fwait
adc
enter
psrlq
xor
insl
fs
das
in
loope
dec
fisubrs
cmp
dec
ret
out
stos
add
push
or
cmp
insb
adc
mov
leave
adc
jmp
or
cmp
cmp
dec
mov
fwait
psllw
sahf
cmc
push
test
mov
sbb
add
pop
jp
pop
and
adcb
xor
jmp
pop
sahf
andl
pop
jge
dec
pop
subl
jle
mov
sbb
add
mov
andb
hlt
push
push
mov
insl
sub
negb
stos
or
movsb
xchg
pop
push
mov
mov
iret
es
in
sub
stc
je
leave
and
inc
das
das
adc
popa
cmp
mov
mov
xorl
cli
add
daa
in
insb
pop
cmp
rcrb
mov
cld
aas
mov
shlb
mov
daa
aas
pop
gs
pop
mov
dec
xchg
jmp
leave
pop
fs
mov
popa
jmp
add
stos
in
cmp
dec
xor
cs
mov
mov
in
xchg
imul
jl
cld
cltd
and
loope
into
push
in
and
hlt
loop
loope
xor
sbb
inc
enter
adc
stos
sbb
push
les
ret
dec
jmp
std
faddl
mov
mov
cmp
popf
scas
out
cltd
mov
lahf
or
and
jmp
push
psllq
jl
adc
cld
cmp
pusha
aad
aas
cmp
or
or
stc
jne
in
lcall
push
mov
sub
add
push
lods
test
int3
and
mov
cmpsl
add
popf
add
xchg
loope
mov
ficompl
adc
xchg
jns
out
push
add
mov
jno
sub
cmp
dec
mov
cmp
mov
push
in
lret
pop
xchg
xlat
mov
xchg
adc
and
dec
pop
shll
mov
sub
cmp
popa
pop
sbb
or
xor
aad
dec
add
out
xor
pop
pop
cmp
xchg
push
dec
mov
mov
jl
leave
jl
sbb
push
ret
loopne
push
xor
push
fldenv
xor
subl
aad
lds
dec
dec
pusha
cmpsl
leave
push
dec
mov
push
pop
lahf
lock
mov
loope
jno
sub
cmp
fisubs
xor
in
sbb
jmp
cld
nop
std
jl
lcall
mov
icebp
and
stos
shlb
mov
loopne
out
jl
int
sub
or
out
iret
dec
imul
hlt
mov
lea
js,pn
sbb
dec
mov
xchg
dec
scas
popa
or
stos
pop
or
mov
and
sbb
adc
cmp
ficomps
sub
imul
repz
pop
adcb
repnz
lea
fistl
addr16
icebp
je
jne
sbb
xchg
lods
and
shlb
test
mov
lea
ret
das
mov
ret
cmpsl
add
test
popa
pusha
mov
test
push
outsb
in
jbe,pt
push
inc
stos
jl
mov
xchg
sub
cmp
call
sbb
fstl
mov
sbb
push
sbb
mov
or
int
add
lock
mov
jmp
xchg
adc
cmp
jg
scas
cmpsb
mov
and
mov
test
cmpsl
mov
or
pop
or
mov
aas
lods
pop
dec
xlat
outsb
mov
xor
jg
dec
add
imul
stos
cmc
cld
dec
sti
mov
fwait
in
test
mov
sbb
and
aaa
lds
mov
aaa
jne
push
push
mov
leave
push
jp
shrl
stos
sbb
and
and
arpl
jp
mov
movsl
mov
nop
xor
in
mov
es
or
pusha
push
cmc
push
add
fs
ss
mov
or
cmpl
stc
and
sbb
fadd
or
jge
das
sbb
rcrl
out
inc
bound
xor
jge
lcall
sub
fwait
lcall
ljmp
xor
out
inc
sub
jg
pop
enter
jge
mov
popa
dec
mov
mov
add
lods
ds
inc
and
fwait
lods
icebp
xchg
arpl
scas
stos
jecxz
xchg
outsl
dec
fildl
sbb
and
xchg
shrb
movsb
pop
pop
loopne
and
pmaddwd
or
fiaddl
adc
lods
mov
xor
sbb
loope
movsl
and
jmp
cs
jae
dec
jno
in
loopne
mov
adcl
add
sub
and
cmp
mov
and
stos
sbb
or
sbb
push
sub
ss
xor
lock
lret
lods
ss
mov
xor
jle
or
add
cs
ficoml
xchg
popa
int3
jno
leave
icebp
and
sub
sub
lods
push
xlat
mov
incb
and
mov
push
ljmp
shlb
dec
inc
mov
ja
inc
aad
popf
call
aam
mov
js
test
lea
or
inc
mov
leave
shr
push
and
xlat
mov
ss
shll
lcall
mov
in
popa
mov
mov
icebp
loope
ret
repz
ficomps
icebp
sub
xor
inc
aaa
addl
inc
mov
pusha
and
pushf
inc
sub
cld
and
lock
std
sbb
bound
xlat
adc
ds
repz
adc
xor
decb
pop
mov
xchg
sbb
cmp
cmpsb
mov
inc
sbb
mov
sub
aaa
fisttpl
sbb
and
sbb
push
mov
popa
jg
jge
insb
xchg
das
add
lods
jp
mov
inc
mov
fsts
mov
lcall
mov
into
test
lods
fnstcw
ret
jns
sbb
sub
sub
xorl
cmp
aas
adc
stc
inc
cmpsl
sub
xchg
push
iret
jle
sub
inc
and
sarl
pop
mov
xchg
jns
icebp
add
jne
push
mov
add
cmpsl
outsb
xorl
xchg
mov
cs
sub
fmuls
bound
std
stos
test
cmc
stos
mov
lea
xchg
sub
mov
test
shl
adc
popa
inc
jecxz
imul
outsl
lret
push
mov
jb
ss
shll
inc
xchg
pop
aas
mov
dec
icebp
ret
fstl
xor
inc
lods
inc
push
xor
movsl
scas
es
adc
dec
jp
iret
push
lock
insl
mov
dec
sbb
lock
sbb
mov
loop
inc
jp
dec
imul
lcall
cmc
pop
lods
inc
adc
sarl
sub
mov
mov
stc
call
ds
dec
cld
xor
gs
jl
pop
sbb
out
popf
cmc
sub
push
add
xor
dec
mov
dec
cmp
or
sbb
std
push
imul
lcall
rcrl
dec
cld
xor
mov
mov
add
add
fldl
sbb
pop
push
cmp
sub
push
cmpsl
in
cmc
stos
sub
stos
mov
dec
shll
std
sub
ss
dec
sub
mov
loope
xchg
mov
lock
xchg
dec
adc
std
out
cmp
lret
gs
shld
push
xor
lds
jns
mov
and
sti
dec
out
loopne
mov
pushf
aaa
mov
aad
adc
push
mov
inc
adc
xor
decb
xlat
ds
jnp
stos
xchg
outsb
mov
lcall
and
jmp
mov
dec
jp
lcall
push
add
stos
or
inc
or
mov
xor
and
insl
std
cld
leave
and
in
and
xchg
cltd
adc
lcall
push
sub
stos
mov
adc
rcr
cmc
push
repnz
in
xor
jge
stc
gs
mov
cmp
lds
and
dec
scas
push
icebp
jno
xor
or
xor
jne
xor
adc
stos
sub
stos
icebp
aam
aam
sub
ds
sub
jnp
scas
insl
dec
add
outsb
icebp
ss
jp
mov
sbb
jp
ja
test
mov
adc
inc
jae
mov
les
push
outsb
sahf
mov
into
sub
rol
incl
or
sahf
push
test
lcall
xchg
mov
sub
lahf
pop
adc
fisttps
sub
lock
ss
cmpsb
dec
addl
cmp
sub
call
movsb
mov
cmp
adc
xor
push
lods
sub
push
fwait
pop
mov
inc
pop
jmp
rorl
mov
loopne
sub
repnz
ret
push
in
test
lcall
ljmp
out
mov
cmp
stos
inc
mov
inc
in
adc
pop
push
cmp
out
stos
pop
clc
popf
xchg
jle
lcall
jg
mov
cmp
xchg
sub
add
pop
aam
ljmp
pushf
mov
xor
stos
shll
mov
add
xchg
fstpl
push
fnstsw
adc
sbb
pop
sub
in
push
jmp
daa
out
bound
mov
ret
and
push
mov
jnp
adc
jnp
lcall
xor
push
mov
scas
adc
icebp
int3
inc
repnz
sbb
and
jp
sti
adc
das
inc
jmp
out
xchg
jnp
xor
jbe
jbe
mov
lock
push
loop
cmp
out
mov
cs
scas
push
shl
jns
xchg
xor
and
sti
ja
sbb
leave
adc
dec
add
insl
mov
sbb
sbb
test
add
jp
cmpsl
dec
sbb
push
int3
in
and
or
test
inc
cli
mov
add
addr16
xchg
dec
cld
mov
mov
into
xor
add
loope
jae
jo
aad
popa
imul
push
lods
jno
mov
iret
xchg
ret
js
xchg
shl
mov
adc
inc
shlb
arpl
ss
fistl
lcall
mov
scas
jle
cmp
cmpsl
push
sub
out
mov
movsb
inc
xchg
mov
not
test
call
sub
or
lea
or
sbb
fldcw
cmp
adc
mov
push
lods
imul
ja
lock
xchg
add
sub
pop
gs
push
pusha
sarb
negl
sub
sbb
dec
movsb
cmpsl
call
cmpb
addr16
ret
jmp
cmp
cmp
mov
xchg
mov
or
imul
loop
dec
xchg
or
enter
lds
stos
adc
cmpsb
outsl
xchg
imul
mov
dec
jle
pop
test
repnz
jo
mov
cwtl
loop
mov
cmp
xchg
imul
push
xchg
int3
jae
cmpsb
cmp
out
mulb
cmp
push
andb
jle
arpl
inc
and
push
lea
fbstp
cmp
push
mov
pop
repnz
out
dec
cmovo
push
sub
scas
out
insl
int3
leave
cmpsb
cmp
fsubrs
cwtl
sbb
and
sbb
sbb
lcall
fnstcw
mov
das
cmp
xor
push
adc
adc
fwait
leave
repz
jmp
ds
movsb
mov
sub
scas
jbe
nop
jge
psubsb
addr16
jl
inc
lcall
insb
xchg
and
fdivrl
enter
mov
loope
fnstenvs
or
insb
sub
ret
lcall
out
stc
push
out
pop
or
or
xchg
jne
add
insb
sbb
add
add
call
fnstcw
testl
sub
lea
ss
movsb
pop
mov
mov
jae
and
lret
push
inc
scas
pop
adc
repz
sbb
out
xorl
mov
mov
jmp
add
mov
shlb
sarl
rorb
scas
jo
mov
adc
inc
mov
ds
orl
and
xchg
or
in
setnp
mov
sub
fcompl
jecxz
xchg
and
xchg
test
popa
cmp
mov
adc
xor
ss
sub
and
pop
js
jle
push
jl
mov
dec
lcall
and
pop
sti
dec
loop
and
inc
inc
adc
push
pop
cmp
cld
push
sub
cmc
or
loop
fwait
and
or
lea
sbb
loopne
arpl
mov
sbb
inc
push
adc
jle
or
ss
fcoms
xor
xchg
mov
daa
xchg
ret
pusha
sbb
rolb
mov
and
sub
in
mov
movsl
sub
cltd
push
scas
loope
mov
setbe
test
stos
imul
mov
inc
mov
stos
stc
xchg
xchg
out
adc
je
dec
in
xchg
jnp
ret
pop
cs
sub
clc
xor
add
pop
dec
push
fmul
sub
lea
sbb
cli
repz
inc
mov
pop
xchg
or
adc
add
jl
sti
shrl
mov
rcll
aas
pop
inc
fsts
xor
add
jae
scas
loope
lret
fldenv
mov
push
sub
imul
jl
sbb
cli
pop
pushf
int3
push
ficomps
ss
sbb
dec
push
out
dec
cmp
push
aaa
xlat
dec
jne
mov
mov
pop
and
or
mov
push
xchg
aam
pop
cmc
mov
dec
cmc
dec
and
cmpsb
cmp
xor
pushf
aad
pop
arpl
and
inc
shrl
in
mov
rcll
ret
ja
out
xchg
jbe
mov
sbb
jno
inc
xchg
sbb
add
imul
sti
data16
sti
mov
loop
and
mov
mov
pop
cmp
mov
scas
add
xor
repz
and
lahf
add
dec
aaa
test
in
push
add
fs
xlat
hlt
in
mov
scas
xchg
sahf
adc
sbb
or
mov
mov
fistps
in
dec
fs
rcr
pop
lret
insl
pop
or
aad
mov
sbb
push
les
xchg
and
scas
sub
jecxz
cmp
jns
push
inc
mov
pop
pop
mov
std
bound
inc
pop
jmp
or
or
push
xchg
outsl
out
dec
xchg
xchg
mov
inc
mov
pop
std
adc
fsubrs
cmp
lret
lret
pop
and
incl
cltd
xor
movsb
mov
pop
push
sub
std
adc
test
lcall
test
and
pop
mov
xchg
adc
mov
iret
icebp
ja
and
lods
popa
jno
xlat
dec
movsl
or
xchg
cs
lock
aam
jbe
lods
xchg
pushf
mov
jge
cmpl
repz
test
shrl
rcrb
or
lods
lret
enter
pop
ret
lods
scas
out
popa
or
and
push
or
or
addb
push
xchg
inc
lods
leave
add
push
pop
pop
dec
aad
mov
push
mov
cltd
pop
add
ficompl
jecxz
out
push
jno
pop
dec
int3
mov
pushf
outsb
push
aad
int
das
add
mov
cmpsl
aas
mov
fisubl
lds
or
nop
es
movsl
stos
mov
ja
mov
pop
das
inc
jnp
cmp
xchg
popa
add
inc
inc
sub
fcompl
cmp
test
movsl
xchg
adc
dec
scas
mov
push
mov
lret
push
popf
arpl
sub
or
mov
push
int3
lock
pop
es
in
enter
sub
or
icebp
inc
mov
les
dec
mov
mov
mov
loop
or
mov
lcall
and
incl
pop
popa
imul
shll
sahf
das
shrb
shrb
mov
xchg
icebp
dec
and
sbb
lret
or
loop
add
adcb
cmp
adc
shr
jns
jecxz
xchg
sbb
insb
scas
push
addr16
or
sbb
fisubrl
pop
fmull
mov
mov
int
xor
jg
jae
push
arpl
subl
push
daa
fcmovnu
xchg
xor
push
sbb
loopne
add
iret
and
data16
cs
in
or
or
jb
clc
imulb
int3
xlat
push
cmp
pop
dec
popf
mov
add
pushf
bound
xchg
or
adc
stos
ror
clflush
shlb
lds
jnp
pop
push
push
xchg
and
mov
popf
test
popf
add
aam
and
mov
or
adc
push
cs
sub
out
stos
les
dec
xlat
and
push
and
pusha
enter
lock
adc
pop
fs
jae
cmc
pusha
push
fnstcw
jns
mov
ret
andl
int
pushf
pop
test
adc
mov
icebp
sub
loope
pusha
dec
inc
sbb
test
or
test
jno
pop
test
lcall
data16
mov
mov
fidivrs
hlt
ss
lea
adc
jmp
in
lods
push
aad
jns
jb
mov
faddl
or
push
pop
sbb
lret
pop
jo
mov
sahf
push
popf
lahf
xchg
sbbb
dec
dec
mov
cmp
nop
in
add
fdivl
inc
icebp
sti
pop
shrl
fcompl
sub
pushf
inc
pop
leave
dec
mov
lret
xor
adc
aaa
mov
stc
pop
xor
popl
ljmp
aam
jbe
stos
dec
push
cmp
fmull
clc
jle
push
or
dec
push
jle
mov
sbb
nop
dec
mov
xor
pop
lock
adc
add
pop
lea
lods
into
mov
test
nop
sbb
mov
inc
mov
cmc
jae
cld
jg
int3
adc
mov
jecxz
jg
shr
gs
push
in
lcall
jnp
cmpsb
xor
lods
sub
add
dec
fmull
cmp
mov
aaa
out
sbb
popa
inc
enter
pop
stos
mov
adc
sahf
into
sub
sbb
push
adc
sub
out
hlt
jbe
lods
cmp
and
jge
mov
xchg
push
iret
dec
push
xchg
cmp
cld
pop
push
ret
sbb
int
or
testb
out
cmp
jg
cmc
out
std
daa
jnp
jl
push
pop
enter
ret
fiadds
adc
or
mov
add
inc
inc
sub
jno
xchg
pop
jge
punpcklbw
and
adc
subb
xorl
scas
scas
and
pushf
add
push
cld
clc
push
inc
dec
push
repnz
fimuls
inc
lock
out
popl
das
int3
xchg
repnz
sbb
cld
add
mov
lock
cmpb
cltd
adc
push
sub
call
insb
mov
push
scas
icebp
dec
sub
fwait
adc
jae
in
xchg
jne
sub
jne
aaa
cs
adc
inc
xchg
inc
mov
fyl2x
in
xor
cmc
xchg
call
gs
movl
shlb
jle
bound
jne
bound
add
sub
jmp
add
insb
xchg
inc
fidivrs
lods
xor
inc
pop
sbb
scas
sbb
test
push
subl
mov
push
cmpsb
mov
dec
sub
cmc
aam
insl
or
fdivs
scas
enter
pusha
aas
jne
push
pop
and
mov
and
imul
repnz
lea
sbb
or
inc
lea
adc
loope
ds
mov
mov
push
lods
jl
int
iret
daa
test
das
test
push
adc
xchg
pop
jle
mov
xchg
repnz
mov
sahf
cmpsb
jle
rcl
or
test
lret
aas
lea
scas
jmp
pop
outsb
repnz
sahf
sub
mov
popf
add
pop
xor
mov
rclb
sub
in
jno
les
stos
mov
mov
jb
inc
xor
pop
jge
sub
jne
stos
mov
adc
sub
int3
shrb
xchg
and
push
std
int3
mov
xor
cmc
cs
dec
mov
leave
xor
je
lods
arpl
sub
dec
ss
push
add
push
sbb
sub
or
xchg
rcll
xorb
sbb
call
aaa
in
and
inc
jae
adc
les
dec
mov
loopne
std
movsb
add
pop
cmpsl
in
jecxz
adc
in
xchg
pop
xor
jb
or
sbb
cmp
push
xchg
or
and
sub
push
test
push
mov
jl
mov
popa
mov
inc
push
enter
loope
push
cmpsb
or
jo
xchg
jmp
mov
mov
pop
js
out
and
aad
xor
cmp
mov
aad
fs
fbstp
xor
adc
ret
cmp
cmc
mov
push
add
ret
mov
push
dec
mov
cmpsb
test
mov
mov
xchg
jno
mov
push
inc
xor
ja
push
nop
or
or
cmpsb
in
adc
or
or
inc
inc
push
pop
xor
cmp
movsl
ljmp
or
xchg
cmp
frndint
lret
inc
sahf
rolb
in
jae
rorb
das
jb
fcoms
leave
stos
std
xchg
fildl
int
arpl
jnp
lea
scas
ret
push
in
fidivrs
lods
pop
jns
aaa
into
or
pop
mov
jno
pop
hlt
cmp
pop
xor
add
hlt
mov
mov
mov
rorl
sbb
and
xchg
mov
add
aad
jecxz
adc
jne
mov
xlat
lods
mov
cltd
mov
aas
jl
jg
pmaxub
xchg
xchg
into
and
mov
dec
mov
cmc
hlt
mov
fidivrl
inc
pop
mov
rcll
cmp
mov
jb
sub
addr16
jge
or
shrl
xor
into
addr16
dec
mov
sub
icebp
push
scas
and
or
les
fnstenv
mov
ret
rorl
sub
lret
add
outsb
ret
push
in
fs
sub
add
fildl
dec
mov
gs
sti
xchg
add
mov
sbb
mov
or
add
cld
test
mov
jno
fstps
mov
mov
fimull
pop
into
mov
jb
scas
dec
and
sub
push
mov
stos
andb
test
and
stos
rorb
mov
gs
xor
fstp
lret
stc
jae
mov
shr
test
ret
sub
sbb
lret
scas
xor
pop
dec
shlb
out
pop
add
lock
mov
movsl
insl
loopne
jae
mov
dec
arpl
cmpsb
test
js
iret
in
pusha
clc
dec
sbb
and
pop
cmpsb
std
clc
xchg
xlat
push
mov
adc
mov
inc
cs
xor
add
jb
cmc
orb
mov
cs
mov
add
movsb
xchg
aaa
and
cmc
xor
sahf
xlat
sub
js
jbe
mov
cmp
and
lret
sahf
pop
adc
push
int
movsb
fs
out
mov
testl
adc
add
pop
jno
arpl
xchg
js
mov
add
lock
imul
aad
repnz
hlt
add
pop
push
lret
inc
inc
movsb
xchg
or
and
imul
dec
xorl
fisttps
inc
and
arpl
mov
xchg
scas
div
into
jno
cmp
xor
dec
scas
mov
xor
xchg
cmp
push
jmp
cmpsb
cmpsb
ror
scas
ja
repz
inc
dec
fsubrs
or
adc
sbb
out
add
mov
jne
jle
push
add
mov
in
loope
dec
sti
cmp
inc
rclb
cmc
fisubs
push
aas
mov
and
and
jmp
test
pop
pushf
inc
push
cmc
xchg
adc
aam
mov
xchg
inc
in
sbb
and
test
push
insl
jge
push
inc
cltd
adc
inc
xor
pop
mov
ret
aam
sub
mov
scas
std
dec
lods
and
ljmp
fmul
lcall
imul
jecxz
jo
loope
lret
das
mov
bound
jo
pop
cs
vfmadd213sd
mov
popf
cmp
cltd
ja
add
sub
jge
out
nop
popf
jg
xchg
sbb
pop
mov
or
cltd
and
lods
jg
test
test
cmp
cmpsb
repnz
aaa
cs
jge
in
sub
mov
sbb
sahf
cs
jo
int3
and
insl
mov
inc
xchg
xor
jp
fisubl
stc
lret
mov
lahf
pushf
inc
inc
stos
adc
adc
push
mov
sub
shl
fcmovb
cmp
ret
test
jle
rorb
ljmp
sbb
pop
aad
adc
xchg
ud0
adc
stos
call
add
in
jl
pusha
popa
mov
aas
pop
mov
addr16
sahf
popf
push
push
sbb
inc
dec
adc
insl
adc
fcomi
out
test
inc
mov
add
adc
xchg
into
ret
cmp
adc
outsb
add
lret
sub
loope
mov
cmp
jp
mov
cltd
or
sub
jl
xlat
flds
mov
in
jns
jnp
std
xor
leave
aad
bound
aad
inc
xchg
sub
jmp
pop
sbb
mov
arpl
ja
fnclex
xchg
xchg
in
sbb
dec
mov
jecxz
dec
inc
fisubs
insl
sub
pop
inc
cmp
or
cmp
out
inc
xchg
cmp
pop
test
lret
sub
or
push
lods
lods
int
test
popf
inc
cmp
ds
cmpsl
outsb
sahf
jo
loop
stos
or
rcrb
lods
fcomi
add
xchg
outsb
mov
mov
cmp
fwait
imul
and
or
jmp
inc
test
push
mov
inc
mov
and
mov
lds
cmc
xlat
mov
in
dec
ljmp
xor
addb
shrl
sub
mov
shlb
cmp
lea
jg
jae
dec
add
adc
aam
lret
and
dec
and
mov
fptan
mov
mov
orl
scas
push
pushf
pop
mov
negl
mov
jl
leave
sarl
and
adc
testb
add
pop
std
dec
sub
cmpsl
test
mov
movsb
and
outsb
test
enter
xor
shr
fimull
sahf
pop
dec
leave
dec
mov
lea
nop
mov
or
lcall
roll
js
mov
adc
mov
jae
lret
outsb
scas
shrb
sahf
jp
aaa
fadds
daa
addb
xchg
in
inc
push
bound
bound
outsb
dec
add
cmp
stc
push
cmp
gs
sub
movsl
mov
cmc
rcl
adc
cltd
sbb
addb
movsb
inc
xchg
ror
adc
scas
sbb
das
movsb
push
lea
mov
inc
ds
addr16
jmp
mov
imul
mov
stos
pop
mov
fwait
mov
xchg
js
adc
icebp
jae
enter
cwtl
sbb
sarb
mov
push
test
ja
xchg
ljmp
inc
out
cmpsb
in
clc
dec
jecxz
pop
call
push
andb
jnp
fnsave
jno
out
or
popa
insb
test
clc
push
mov
xor
mov
pop
add
mov
mov
ljmp
mov
mov
int
lods
icebp
adc
scas
xlat
jge
clc
or
xchg
adc
mov
xor
stos
insl
pop
mov
jae
cs
adc
ja
bound
in
mov
mov
test
mul
repnz
in
mov
mov
and
dec
or
ja
mov
jmp
das
sub
lcall
imul
stos
xchg
daa
add
in
inc
outsb
jp
inc
sbb
js
loope
dec
call
jg
push
push
or
icebp
lods
stc
test
mov
push
pusha
or
dec
ja
test
push
adc
push
push
xchg
pop
ss
xor
mov
xchg
mov
jns
enter
jl
jne
cmp
scas
scas
shrb
cmpsb
push
dec
sub
leave
push
ljmp
ret
adc
mov
adc
sti
jno
jecxz
jbe
lcall
pushf
stc
sbb
jecxz
cmpsb
fwait
loope
mov
push
jne
mov
data16
shlb
je
xchg
jle
lods
fwait
xchg
stos
mov
mov
cli
sarl
jl
pop
negb
mov
pop
std
lret
pop
jge
insb
push
decl
and
icebp
sbb
adc
iret
les
bound
loope
out
std
push
xor
loop
icebp
je
ja
cmp
mov
es
test
lods
dec
repnz
sub
push
push
fwait
ret
pop
dec
push
mov
arpl
cmp
test
lods
out
filds
bound
icebp
dec
cmc
insl
lcall
jns
ljmp
sub
xchg
jle
jecxz
aas
clc
xsaveopt
stos
mov
outsl
in
movsl
fidivrl
xor
fdivrl
out
mov
pusha
xchg
ror
adc
daa
test
hlt
sub
fadds
mov
dec
lret
jae
push
insl
xchg
xor
dec
cmp
and
mov
sub
out
pop
xor
cmp
push
or
push
xchg
mov
pusha
mov
sub
adc
lcall
dec
aad
jns
inc
je
lock
jo
jb
sub
out
push
cmp
imul
lods
mov
cmc
xor
jnp
push
inc
movsb
xchg
adc
mov
cmc
pop
cmp
add
adc
dec
sbb
push
decb
insl
or
mov
popf
rclb
icebp
sub
lahf
push
inc
jnp
add
jnp
inc
ret
decl
add
clc
pop
xor
sub
add
sbb
sub
cmp
pushf
cmpsl
adc
or
and
clc
shlb
inc
test
shr
decb
jns
push
gs
mov
sbbl
inc
mov
add
nop
out
dec
ljmp
out
inc
in
int
dec
test
lods
repz
mov
xor
cmp
mov
lcall
mov
ja
test
dec
jge
push
push
mov
push
push
mov
enter
and
rcl
dec
addr16
dec
fwait
inc
cs
and
cmpsb
stc
insl
bound
sarl
aas
popf
repnz
mov
cmp
fwait
jle
pop
mov
mov
in
cmc
out
lret
mov
mov
subb
mov
xchg
and
mov
dec
add
lea
into
dec
dec
fwait
and
xor
fmull
add
add
push
or
shll
das
pushf
insl
testb
inc
inc
jb
test
mov
lcall
and
xor
lret
lock
lods
mov
outsl
push
mov
test
jbe
cmpsb
xlat
mov
sti
lret
sub
xor
inc
popa
sub
mov
pop
fisubrl
dec
addr16
cld
xor
addr16
lods
xchg
mov
inc
cmp
push
sub
pop
lock
and
sti
icebp
int
sub
out
mov
pop
lock
and
bound
adc
mov
imul
or
dec
movsl
mov
mov
shll
repnz
aad
mov
je
mulb
dec
mov
xor
push
xor
push
outsb
test
pop
pop
imul
xor
mov
sbb
movsb
aaa
movsl
jbe
mov
sbb
pop
out
nop
scas
sbb
jge
xchg
lcall
in
adc
sbb
mov
cwtl
in
or
pop
jge
or
push
cmp
aad
xor
sbb
mov
cmpsl
xlat
ja
jle
imul
mov
sub
add
cmp
mov
test
jle
jae
mov
lret
mov
sbb
subl
ret
sub
fst
and
mov
cmp
xchg
jle
ret
inc
xlat
sbb
bound
lds
pop
bound
cmp
push
or
lea
inc
daa
icebp
mov
pop
sub
lret
jns
test
stos
pop
sbb
jecxz
push
fnsave
outsb
dec
aaa
push
ds
jle
xor
lea
call
js
test
lcall
xchg
push
mov
leave
scas
movsb
icebp
xor
gs
and
mov
lcall
adc
push
jl
pop
nop
test
adc
and
outsb
mov
dec
xchg
lahf
fimull
pusha
outsl
push
cmc
inc
shlb
movsb
push
ds
xchg
aas
dec
add
sub
scas
les
das
pop
roll
in
add
inc
xchg
lods
push
push
loop
add
push
xchg
cmp
in
jbe
test
jle
gs
loope
test
fs
or
orb
stos
addb
add
push
imul
adc
scas
jnp
add
scas
adc
pushf
in
cmp
sbb
mov
pop
ljmp
int
and
pop
mov
inc
subb
hlt
fcmovbe
in
and
fstps
mov
aaa
sar
push
es
pop
or
mov
dec
pop
push
xchg
test
mov
push
repnz
fcoml
movsb
dec
xchg
sbb
sbb
mov
xor
dec
xorl
xor
movsb
pusha
sbb
inc
fildl
aaa
and
mov
jno
mov
mov
das
jo
or
outsb
add
jl
mov
fimuls
int
pop
mov
add
enter
and
mov
faddl
jb
dec
adc
push
cmp
push
push
test
push
mov
stos
xor
pop
sbb
test
das
mov
jg
and
gs
sarl
sub
xor
shr
push
xor
daa
into
in
sarb
leave
in
jg
decb
mov
je
jecxz
lea
push
mov
add
push
popf
cmp
inc
loop
xchg
jno
jp
loopne
insb
pop
outsb
dec
cmp
shll
fsts
popf
jg
aad
iret
fdivl
push
sub
pop
pop
imul
out
gs
pop
clc
test
or
pop
inc
dec
sub
pop
xchg
mov
add
mov
jmp
test
lret
lcall
repnz
in
es
cmp
nop
dec
inc
gs
gs
loop
call
fiadds
mov
sub
outsb
mov
mov
inc
adc
push
or
cmc
out
sub
jle
adc
mov
xchg
xor
xchg
push
das
push
fnstenv
in
sbbl
pop
pop
jecxz
daa
and
push
outsb
divb
sub
arpl
int3
xor
mov
push
dec
or
nop
ficompl
pop
and
xchg
mov
cltd
bound
cmpsb
daa
repz
fdivrs
les
inc
loop
test
fistpl
add
punpcklbw
adc
inc
mov
jnp
inc
mov
cmp
sbb
and
subl
cmp
cwtl
cmp
push
xchg
sahf
mov
loopne
cwtl
lcall
adc
int3
push
lods
lods
sbb
sbb
add
aam
shrb
ror
mov
gs
adcb
cmp
iret
mov
scas
popa
ds
xchg
jo
gs
popf
mov
test
cmp
sbb
sub
lahf
xchg
mov
hlt
scas
add
data16
ret
pushf
pusha
insb
arpl
fcmovnbe
pop
xchg
lret
insb
fdivr
dec
out
orb
pop
or
mov
incb
daa
adc
dec
push
outsl
pop
and
rorb
les
push
sub
cmpsb
cmc
mov
lcall
das
daa
enter
or
adc
js
lcall
inc
push
out
filds
mov
ljmp
cli
push
jmp
mov
pop
imul
xor
scas
dec
subl
xor
xchg
sbb
sbb
xchg
mov
in
fs
push
pop
aad
sub
mov
mov
lcall
xor
mov
mov
jnp
shr
das
inc
jp
sub
clc
jge
in
mov
push
mov
xor
push
stos
popf
orl
sbb
lea
iret
mov
jmp
mov
sti
or
mov
cltd
jp
push
dec
adc
push
ljmp
test
cltd
loopne
add
push
push
add
dec
mov
jb
lret
stos
int
lods
push
movsl
lods
push
mov
int3
or
call
push
roll
mov
sub
jb
and
mov
sarb
std
xchg
xchg
sub
jnp
jno
jb
insb
movsb
add
movsb
mov
stos
out
or
push
sbb
outsb
rorl
jb
ss
in
stc
popl
add
and
ret
test
subl
pop
xor
scas
test
xchg
pushf
mov
repnz
in
jmp
and
repz
xor
pop
xor
inc
pop
push
inc
lcall
mov
sub
scas
cmp
jmp
mov
aad
add
ret
lretw
mov
in
and
scas
fnstenv
std
fistps
shrb
out
lret
leave
adc
or
cwtl
loope
imul
push
mov
push
sbb
or
bound
out
xor
mov
fstps
xchg
and
inc
jne
aad
in
arpl
inc
cmpsb
mov
iret
outsl
data16
and
daa
xlat
ret
arpl
cs
orb
rcrb
loop
jnp
or
rolb
ffree
inc
insb
mov
jo
mov
sub
call
xor
dec
sbb
mov
std
cmp
stos
test
sub
cmc
aaa
pop
std
pop
lcall
stos
in
dec
loope
cmpsl
sbb
xchg
ret
sbb
imul
sub
int
rcrb
ds
sub
hlt
mov
jecxz
cmp
out
mov
inc
stos
mov
xor
mov
sub
mov
xchg
xor
iret
fists
push
or
fisttps
jp
xchg
jmp
sar
imul
ret
mov
add
fs
jns
subb
in
xor
dec
lds
xchg
jle
loope
xor
stos
inc
int
les
dec
xor
cs
sub
popa
and
cmp
test
aam
xor
jge
mov
push
dec
mov
mov
sti
cmp
cs
pop
fsub
lea
dec
loope
push
xchg
sbb
insl
or
xchg
mov
scas
shlb
sub
insl
xchg
jg
leave
aaa
mov
shr
fwait
push
mov
xor
out
faddp
mov
push
mov
in
ret
cld
into
and
inc
test
dec
pop
js
test
and
fbld
push
pop
lret
loope
leave
dec
and
push
not
test
inc
aaa
dec
cmp
clc
add
test
cmp
pusha
test
aaa
aad
shlb
insb
in
mov
mov
cmp
rep
aad
js
gs
xchg
mov
xchg
xchg
xlat
mov
insb
fadds
xor
les
das
push
push
inc
or
mov
cmp
stos
rorb
xor
cmpsb
clc
mov
lret
lods
insl
sbb
scas
sar
pop
iret
cmp
sub
inc
and
fstpt
stos
div
clc
pop
mov
lds
ficoml
out
sbb
pusha
jae
inc
xlat
cmp
mov
mov
and
std
sarl
adc
sub
lret
aaa
rorl
mov
push
mov
inc
or
in
lret
cli
pop
negb
fsubl
jl
sbb
sbb
test
and
sub
xchg
mov
xor
pop
ror
adc
idiv
xchg
jns
push
test
andl
clc
sbb
pop
fdivp
sub
cmp
lcall
dec
cltd
loope
mov
in
jp
cmp
loop
loope
fisttps
cmp
cmp
push
xchg
pop
loop
das
lods
js
mov
aas
cmovp
inc
scas
fstps
mov
or
mov
mov
add
or
imul
mov
xor
jne
mov
pop
enter
or
sbb
shl
test
cmpsb
outsb
popf
shlb
sub
rolb
cmp
sbb
lahf
and
mov
enter
cltd
add
or
pusha
or
js
sub
lea
dec
mov
fdivrl
ljmp
mov
cltd
scas
cmp
xchg
adc
sub
pop
cmp
fldenv
cmpsb
dec
mov
lock
cld
stos
xchg
pop
jecxz
scas
add
mov
cltd
mov
test
jmp
pop
and
lcall
add
cmp
adc
mov
mov
ret
ret
cmp
add
mov
and
add
cmp
mov
aaa
cmpsb
jge
iret
mov
insb
mov
push
sahf
cmp
lret
adc
les
fistps
in
xor
jecxz
sbb
xor
cltd
mov
push
or
aad
aas
xchg
in
mov
sbb
fdivrl
in
cmp
in
xchg
mov
outsb
scas
add
cmpsl
fbld
fwait
lcall
cmpsb
jb
adc
mov
das
loop
push
adc
jno
leave
cmp
xor
cmp
fnsave
xlat
xchg
inc
js
test
rolb
jnp
xor
lcall
adc
pop
jne
push
jbe,pn
mov
xorb
add
pop
adc
inc
pusha
cs
mov
or
add
int3
mov
jecxz
iret
adc
push
inc
scas
arpl
sbb
sub
inc
push
mov
lret
in
sbb
add
xchg
mov
mov
jl
call
xorb
sbb
mov
sub
dec
ret
in
int3
shll
mov
pop
jle
and
fidivrs
adc
mov
arpl
scas
icebp
cmp
push
pop
hlt
add
lea
adcl
add
mov
adc
call
inc
xchg
cmp
mov
xor
xor
add
ss
mov
mov
inc
lods
xchg
fsubs
aad
mov
or
cs
push
jg
mov
loope
sbb
push
or
mov
mov
sbb
ss
dec
scas
dec
fbstp
stos
stc
out
lods
jl
jae
in
bound
mov
or
addr16
ljmp
dec
inc
mov
pop
dec
mov
fs
sub
imul
ret
add
mov
repnz
inc
les
push
ret
hlt
cli
dec
fstps
adc
sahf
inc
cmp
fucompp
adcb
pop
xor
popf
or
jns
movsb
addr16
stc
push
stc
aad
pop
int3
fwait
sbb
xor
xor
clc
jns
inc
push
add
mov
mov
aas
pop
les
test
testl
test
fistl
arpl
in
and
les
lods
jno
adc
xchg
lahf
scas
jns
push
sub
fcomps
adc
xchg
sbb
pop
pop
test
jns
inc
push
xbegin
stos
je
lock
in
jge
out
inc
ljmp
iret
adc
adc
adc
mov
dec
outsb
sti
leave
mov
lds
mov
xchg
xlat
cmp
into
mov
arpl
dec
pusha
add
jnp
repz
dec
or
and
xlat
mov
insl
enter
xor
pop
scas
xor
pop
lcall
mov
addb
add
mov
sahf
dec
mov
cltd
loopne
mov
lock
sbb
pop
fcmovnu
mov
adc
and
pop
dec
xor
mov
lds
mov
out
in
jmp
in
xor
sbb
lds
fadds
hlt
fcmovnbe
decb
int3
add
lods
and
sarl
jb
cmp
pop
imulb
enter
mov
rcrb
inc
bswap
call
testl
mov
test
inc
ss
cmp
lret
jl
xchg
adc
add
push
xor
sub
jle
int
movb
mov
inc
stc
xchg
sti
mov
icebp
aaa
pop
loope
add
mov
dec
inc
data16
dec
push
adc
sbb
fidivl
mov
js
int
arpl
lds
into
sub
stos
stc
and
mov
aas
mov
loop
jns
rorl
sub
loopne
xchg
fisubrs
xor
data16
ficoms
into
mov
rolb
dec
lret
dec
mov
mov
jmp
lea
add
loop
test
fiadds
cmp
insl
and
mov
mov
aad
mov
dec
jmp
mov
mov
into
mov
popf
mov
jg
jo
jle
push
xor
outsl
adc
mov
adc
daa
test
xor
cli
fstps
popa
divb
cltd
sub
int3
cltd
pop
jo
cmp
nop
aad
cld
sbb
xor
pop
xchg
xorl
mov
mov
popa
sbbb
test
adc
dec
loopne
sbb
and
jmp
jle
push
push
and
mov
dec
loop
pop
or
lret
push
push
bound
jbe
hlt
out
jl
xchg
in
js
jecxz
fildll
xorl
sbbl
and
or
add
lcall
pushf
mov
sbb
xchg
push
dec
xor
push
scas
sub
xchg
jnp
mov
movb
sahf
cltd
xchg
jmp
bound
repz
adc
add
adc
out
sbbb
ss
push
testl
cmp
fidivrl
je
inc
and
stc
outsb
lods
jl
xchg
push
cwtl
cmp
xor
pop
adc
scas
add
pop
ret
jg
enter
ljmp
fadds
cmp
scas
bound
mov
fsubrl
cld
in
xchg
lea
mov
imul
adc
lods
and
idivl
aad
sbb
jg
sbb
inc
cmpsb
mov
xchg
test
sarl
das
inc
cmpb
loope
dec
loop
jne
cmp
gs
lret
sbb
stos
sub
mov
ja
xor
sbb
sbb
std
lea
gs
shrl
mov
xchg
dec
adc
cmp
inc
xchg
dec
pop
sarb
aas
stos
push
add
es
sbb
or
inc
dec
push
dec
mov
xchg
insl
sub
lret
and
pop
sbb
push
test
nop
movsl
imul
aad
adc
xor
test
scas
cs
and
or
int3
add
lret
icebp
jnp
push
ret
stos
mov
cmp
pop
leave
iret
add
sahf
pop
mov
and
ret
rorb
scas
push
and
loope
imul
adc
in
mov
push
add
sub
aaa
and
call
sahf
jecxz
add
hlt
shl
mov
loopne
add
mov
cld
ror
std
jmp
add
inc
mov
add
bound
int3
push
push
lds
imul
sbb
fistps
fstpt
mov
pop
and
ds
aaa
dec
stos
imul
pop
mov
lcall
cmp
sbb
cwtl
outsb
mov
adc
dec
pop
sarb
stos
sar
fdivl
aaa
scas
test
sub
mov
mov
cmp
aaa
pop
fstps
sub
int
lods
std
sbb
lcall
push
mov
xor
sub
sub
movsb
mov
imul
and
push
jle
lods
push
lahf
cmp
fs
push
mov
jb
fmull
add
je
dec
xor
std
inc
mov
push
pop
std
xchg
jae
inc
mov
and
sahf
aaa
iret
add
test
incb
cmp
mov
xchg
mov
int3
add
loop
subb
loope
cld
xchg
sbb
repnz
aam
popf
jecxz
rorb
xchg
hlt
xchg
fisttpl
sub
inc
pop
or
ljmp
int3
push
inc
sub
gs
cmp
scas
hlt
xor
sbb
adc
ret
loopne
inc
or
clc
ljmp
jb
cmp
popa
sub
sub
inc
add
push
push
xor
jnp
nop
inc
iret
and
xchg
ja
pop
insl
xor
lods
test
mov
inc
lods
insl
sbb
jno
dec
jno
jg
outsb
adc
jnp
mov
fbld
inc
leave
mov
xchg
mov
sub
push
sbb
jp
hlt
repnz
js
mov
and
adc
out
adc
jbe
dec
add
pop
lods
outsb
mov
js
xchg
or
or
push
in
inc
xchg
inc
out
ret
shl
mov
sbb
pop
jae
mov
lock
xor
jp
dec
lods
shll
jb
dec
test
into
dec
cmc
sahf
sbb
mov
rcrl
out
or
cmp
lods
sbb
call
mov
fists
pop
stos
fwait
sub
pushf
stos
xchg
fs
das
fisubrl
icebp
cmp
aas
xlat
jae
out
in
push
sub
jnp
clc
rorl
mov
sahf
jno
pop
test
dec
roll
pop
jno
lods
or
insb
ja
imul
mov
test
bound
mov
sub
pop
mov
cmp
cmp
dec
push
imul
in
jne
push
out
negl
int3
test
lcall
adc
out
loop
xor
mov
test
imul
lret
add
cmp
pushf
cmpsb
push
gs
sbb
ds
mov
sbb
lret
xor
pop
shrb
mov
adc
pop
and
cmp
mov
outsb
bound
test
stos
dec
dec
leave
sub
test
mov
test
inc
ficomps
pop
insl
jmp
out
cmp
dec
cmpsl
imull
cltd
lahf
adc
cmpb
jnp
int3
xor
test
test
mov
mov
mov
sub
adc
fwait
mov
lods
xor
jnp
cmp
xchg
insl
push
rclb
clc
push
cmp
test
push
mov
and
mov
ret
fnstenv
mov
sub
sbb
mov
or
sbb
shr
sbb
adc
scas
xchg
in
cs
ljmp
hlt
sarb
popa
test
fcmovb
negb
fnsave
sub
jno
cmpsb
or
sbb
xchg
call
sahf
pushf
and
xor
mov
es
dec
sub
sub
addb
iret
faddp
xchg
dec
pusha
and
mov
and
das
and
popf
adc
les
fstpt
pushf
imul
jnp
jmp
push
test
add
addb
xchg
mov
rclb
inc
inc
movsl
lock
aas
or
dec
mov
sub
stos
lds
add
aaa
insl
xchg
test
icebp
pop
mov
cld
inc
lods
mov
mov
lahf
or
sbb
aaa
dec
mov
sub
mov
inc
test
sbb
iret
adc
out
leave
cmp
lds
push
push
cmp
scas
fistpll
pop
nop
in
es
hlt
loop
mov
dec
inc
stos
or
ror
js
call
orl
lock
in
iret
aas
push
ror
jmp
adc
push
les
pop
ss
add
pop
push
mov
cmpsl
lcall
cmpsl
aaa
jae
leave
push
pusha
outsl
add
clc
test
bound
cmp
test
jge
or
xor
pop
xor
out
sbb
aad
lds
addr16
or
jne
sbb
jnp
mov
mov
xor
mov
movsl
sub
lea
sbb
adc
push
adcl
fnstcw
and
int3
jo
lret
call
push
inc
aad
mov
outsb
loop
jmp
jno
add
loop
pusha
lahf
out
jne
pop
loop
enter
mov
lret
icebp
leave
xor
imul
inc
icebp
sbb
outsb
xor
adc
imul
loopne
sbb
pop
jbe
sub
xor
stos
push
pop
dec
loopne
push
lds
push
push
cmp
and
mov
cmp
repz
int3
xor
sub
pop
push
inc
popa
xor
enter
add
or
add
jle
bound
xor
or
xchg
dec
sarb
std
mov
lret
scas
lods
sahf
sbb
sbb
jae
fs
bound
jae
stos
insb
ljmp
pop
enter
movl
cld
test
xchg
mov
push
adc
mov
call
je
adc
fs
insb
jmp
icebp
icebp
jbe
jecxz
xchg
test
jecxz
mov
sbb
in
push
adc
xchg
xor
jl
daa
cltd
dec
pusha
clc
fsubrs
out
dec
int
adc
les
xchg
jp
in
push
rorb
aam
mov
sub
inc
inc
sahf
mov
mov
lods
sbb
arpl
pusha
add
hlt
cmp
mov
lods
push
addr16
out
leave
loope
mov
mov
inc
xchg
mov
jge
out
cmp
lds
sbb
bound
pusha
lahf
fstpt
jg
int
out
add
lcall
dec
call
fadds
repz
add
lds
ds
inc
loop
push
cmp
andl
mov
dec
stc
dec
sbb
lock
jne
xlat
es
cld
inc
popa
pusha
lret
dec
lahf
hlt
adc
sub
stos
pop
mov
inc
loope
fdiv
push
xchg
cmc
xchg
pop
test
iret
loopne
pop
cmp
mov
repnz
xchg
push
pushf
mov
es
adc
cmp
mov
stc
lret
and
and
or
add
lea
es
sub
mov
jno
sbb
loope
pop
mov
inc
mov
and
ret
jl
jo
xchg
sub
mov
pop
js
rcrb
test
and
mov
jo
mov
lea
test
outsl
push
and
pushf
jns
into
mov
inc
aam
or
iret
dec
mov
sub
fs
stos
lods
cmpsb
jae
aad
arpl
dec
gs
iret
lcall
inc
cltd
ret
aad
jmp
roll
or
mov
and
or
in
cmc
push
bound
ljmp
leave
pop
dec
test
stc
fdivrs
movsl
cmp
adc
pop
jns
jno
std
aam
mov
mov
xchg
inc
inc
and
sbb
jmp
aaa
loope
lret
mov
test
dec
cmp
scas
dec
jnp
rcpps
push
out
push
add
dec
adc
push
fs
ds
inc
jbe
mov
and
pusha
mov
jmp
cmpl
push
in
clc
icebp
cld
sub
sahf
xorl
mov
outsl
jne
jg,pt
sbb
xor
repnz
lea
xor
lods
xor
mov
nop
ss
lahf
adc
mov
cld
fldt
jae
add
jae
xor
xchg
cmp
sbb
xchg
ficomps
xor
sbb
dec
or
insb
pop
lahf
push
pop
daa
or
push
add
xor
bound
pop
lock
loope
cmp
outsb
dec
loop
lcall
pop
or
addr16
dec
inc
push
jae
xchg
xchg
pop
roll
or
roll
pushf
jns
int3
fsubrl
or
mov
pop
loopne
scas
lods
sub
push
sub
jnp
addl
jae
cld
fldenv
mov
sbb
lods
imul
enter
or
mov
xlat
insl
mov
sub
lock
movsl
faddl
popa
fildll
push
push
out
xchg
mov
mov
sbb
sarb
sub
pop
pop
and
push
aam
sbb
mov
jge
inc
mov
sbb
mov
cmp
sbb
or
test
pop
jge
push
lods
push
je
jmp
pop
test
aaa
lea
or
rcll
dec
fbld
jl
add
and
pop
or
sbb
into
lahf
or
mov
popf
daa
mov
push
sub
or
outsb
mov
rcrl
sarl
enter
je
xchg
inc
nop
push
or
jb
js
stc
cs
loop
xor
fisubrl
stos
xor
inc
paddusb
nop
add
and
xchg
jne
out
jge
pop
addb
call
repnz
ljmp
mov
sub
mov
jae
xchg
jmp
push
or
int
out
imul
out
xor
js
sbbb
orb
push
ficomps
cltd
jmp
jb
push
push
loope
cmpsb
pop
jl
or
js
scas
loope
xor
orl
rcrb
mov
xchg
ljmp
nop
sub
imul
and
inc
sub
rorb
lods
js
lea
xorb
mov
out
mov
repnz
mov
cld
xor
lahf
jmp
popf
stos
cld
adc
js
jns
decl
adc
ret
cwtl
dec
std
movsb
xchg
fnstenv
jb
jge
sbb
out
add
mov
xor
sbb
rorb
mov
cmp
fistpll
adc
insl
xchg
xchg
mov
inc
inc
push
dec
mov
xchg
cld
mov
adc
inc
cli
mov
sub
mov
push
subl
in
push
mov
xchg
ss
ror
xchg
adc
cmp
and
sbb
mov
xchg
adc
pop
loope
mov
ret
cmc
and
lods
mov
pop
sub
stc
pushf
inc
fists
mov
or
sbb
and
orb
leave
and
sbb
ds
mov
pushf
push
shlb
ljmp
xchg
js
clc
stos
mov
jne
mov
or
or
inc
imul
lock
rcrl
jns
sahf
test
test
jle
jle
repnz
mov
jmp
incl
fwait
pop
cmc
and
pop
dec
jae
mov
xchg
sahf
test
jge
sti
in
popf
pop
mov
pop
jne
push
ds
or
cwtl
sbb
and
daa
in
jge
lds
insb
xor
in
leave
dec
idivb
sbbl
mov
xchg
pop
pusha
push
sub
dec
out
in
push
and
enter
jb
sub
stos
aas
pop
aad
js
iret
pop
cld
and
or
sub
mov
enter
mov
jg
test
lds
in
mov
jbe
sub
push
lret
imul
dec
pop
xchg
lahf
inc
mov
repnz
and
call
jno
mov
jl
ret
lods
lods
dec
aam
pop
orl
sub
sbb
lock
or
push
xchg
xchg
popf
mov
out
popf
push
xor
ret
cwtl
ljmp
frstor
jp
in
dec
pop
push
inc
and
sub
mov
jae
inc
mov
dec
shll
loope
mov
inc
test
aaa
sub
fldcw
cmp
mov
sub
mov
je
icebp
mov
lods
out
lcall
js
fistpl
in
pop
lahf
xor
pop
xor
cmp
fcompl
stos
or
mov
cs
cmp
js
jne
negl
fs
fdivrl
pop
idivb
sub
or
sub
xchg
out
leave
std
cmpsb
adc
pop
sbb
xor
mov
cmc
mov
or
fucom
sbb
jb
neg
and
ja
icebp
add
cmp
lds
inc
fnsave
mov
pusha
cmpsb
xchg
setp
popa
rol
or
mov
push
mov
jmp
stos
aad
sub
xor
shll
pop
pop
adc
sub
imul
adc
inc
mov
cmp
in
sbb
cmpsb
ljmp
jge
mov
mov
gs
lcall
into
inc
xor
movd
aad
push
enter
fwait
test
movsl
push
and
jecxz
insl
adc
jnp
jno
push
mov
mov
mov
out
repz
sbb
outsl
cli
test
jbe
jns
xchg
inc
out
rorb
adc
cwtl
dec
add
test
sbb
or
push
sbb
or
push
pop
fidivrs
cmp
pushf
sbb
sub
test
das
in
dec
xchg
mov
sahf
adcl
pop
inc
out
aad
enter
lods
leave
push
pop
or
leave
adc
sbb
jb
stos
adc
repz
xchg
mov
stos
loope
fidivrs
jns
inc
or
push
lahf
or
sbb
hlt
pop
lahf
popa
shr
mov
aas
push
pop
sti
and
aaa
jae
aad
and
cmp
xchg
lea
leave
xchg
pushf
or
mov
test
negl
add
sbb
mov
adc
dec
xchg
sub
push
cmp
mov
mov
mov
in
pop
xor
cli
or
fcoml
xchg
outsb
push
xor
cmp
cmp
mov
push
add
ljmp
sarb
lds
in
pusha
jl
mov
inc
xchg
fadd
das
push
mov
stos
popa
sbbb
inc
mov
lock
ret
and
cmc
fcoms
loopne
stc
dec
mov
xchg
leave
push
mov
mov
loop
mov
cltd
aaa
pop
clc
loope
in
stos
sarb
pop
aam
loopne
jnp
cld
xor
or
add
xchg
adc
xchg
movl
fidivrl
sub
mov
sahf
ja
cmp
dec
sbb
and
jae
cmpb
iret
test
es
ds
in
inc
cmp
in
sti
jmp
rolb
sbb
adc
pop
xchg
add
adc
and
or
hlt
jecxz
fwait
sub
cs
fdivrs
add
cli
cmpsb
mov
xchg
mov
or
jmp
adc
es
push
lods
mov
add
push
xchg
mov
sarb
sbb
mov
test
aas
cli
loop
lods
xlat
call
add
inc
add
sub
das
fcmovb
push
xor
xor
mov
iret
or
dec
cli
inc
xchg
jmp
data16
pop
dec
jmp
dec
mov
add
pop
jae
in
add
xchg
mov
mov
cli
add
mov
fdivl
shrl
jge
xchg
jne
adc
mov
push
decb
pop
xchg
dec
cmc
out
shr
xor
outsb
hlt
inc
ds
je
push
loop
js
xchg
je
push
mov
aas
add
lcall
jge
pop
or
icebp
enter
cmp
xor
stos
sub
pushf
jo
xchg
xor
lods
es
jmp
mov
out
jns
mov
lret
loop
popa
push
mov
test
repz
lods
xchg
and
add
hlt
insl
pushf
dec
sbb
xor
or
xor
sbb
lret
cmpsl
mov
shr
shl
and
pushf
mov
orb
or
lahf
scas
js
add
push
incl
adc
lcall
xor
mov
int3
dec
dec
ret
rclb
fisubrl
ret
pop
out
cltd
push
xor
jmp
imul
xchg
xor
lret
xor
sbb
gs
out
jge
aas
testb
gs
stos
loop
stos
scas
lret
imul
cmp
out
or
xchg
jne
sub
pop
in
out
cmp
jno
sbb
es
mov
xor
xor
ds
pop
xchg
je
jle
outsb
ljmp
push
popf
jg,pn
sbb
sbb
mov
mov
xor
push
loopne
out
repz
insl
push
stos
push
dec
cs
popf
movsl
add
and
sub
cmc
stos
adc
and
pop
and
pushf
test
aam
imul
lea
xor
and
lods
and
sahf
push
sbb
mov
mov
or
or
roll
add
cmp
push
pop
dec
stos
jno
imul
add
mov
repz
adc
mov
inc
mov
lea
cltd
push
and
mov
mov
or
addr16
iret
push
inc
push
sbb
rclb
xor
dec
xchg
testb
pop
mov
mov
arpl
jnp
add
arpl
jl
lcall
and
cwtl
push
dec
repnz
ror
adc
ret
daa
fwait
inc
push
add
pusha
leave
xchg
enter
dec
mov
aaa
scas
mov
cmp
adc
jmp
cwtl
mov
sbb
mov
sbb
mov
sub
jo
rcr
lea
test
inc
inc
sub
mov
jl
push
loop
negl
xchg
mov
xor
or
and
out
outsb
push
jl
or
mov
icebp
cmp
ljmp
push
or
or
pop
mov
push
xchg
sub
ret
in
push
jbe
pushf
pop
repz
xor
fldcw
sbb
mov
cmpb
mov
push
xor
test
das
mov
mov
mov
rorl
cltd
sarb
push
mov
mov
addr16
in
out
leave
inc
xchg
jmp
orl
lret
fistl
jmp
push
out
cmpl
shrl
adc
mov
dec
jmp
push
push
jle
enter
cmp
sbb
lahf
and
out
sbb
icebp
add
push
leave
adc
xchg
pushf
lods
push
pop
jecxz
dec
or
xor
loopne
cmp
test
dec
bnd
and
xor
push
stos
shll
jo
rclb
scas
into
mov
and
pop
xor
icebp
mov
mov
xchg
jo
dec
sarb
pop
fcoml
pop
rcrl
mov
mov
pop
jp
lcall
inc
movsl
or
sub
ss
or
push
sub
sahf
push
fmull
inc
mov
lea
xorb
inc
fsubrl
xorb
dec
sub
add
sub
lret
pop
arpl
mov
into
cmp
fcmovu
jge
pop
lret
pop
and
mulb
xchg
xor
cmp
mov
movsl
push
push
js
adc
ret
push
out
mov
inc
inc
into
push
mov
pop
sub
scas
sti
fldenv
data16
pop
pop
movsb
lcall
iret
xchg
movb
inc
lret
mov
or
lea
daa
test
adc
mov
ficoml
shl
jno
or
dec
imul
jg
test
arpl
xchg
stos
data16
pop
sbb
mov
inc
adc
test
js
mov
xchg
mov
popa
aas
jnp
sub
repnz
jp
push
sbb
fisttpll
lret
jno
in
dec
dec
or
lahf
repz
fwait
add
in
pop
lods
ret
cmpsl
imul
pop
fwait
popa
mov
jp
jb
cld
mov
inc
test
mov
fwait
inc
pop
push
in
pop
clc
jle
andl
jnp
or
or
inc
mov
movsb
add
movsl
push
jle
and
cmpsb
cmp
ret
insb
push
add
lods
sbb
sub
adc
icebp
mov
hlt
pop
push
stos
pop
dec
insb
mov
jmp
ja
out
jg
mov
in
popa
in
mov
dec
inc
movsb
into
jne
out
dec
outsl
pop
mov
jo
test
fcoml
push
pop
push
in
leave
in
adc
popa
in
hlt
mov
jae
sbb
pusha
js
mov
inc
xchg
adc
push
mov
into
push
mov
jno,pt
or
xorl
or
rorb
and
push
shll
popf
jne
mov
or
push
mov
push
aad
ret
push
jae
jae
stos
shrb
cmp
sbbl
pop
and
sbb
insl
lods
movsb
pop
imul
dec
jecxz
fdivr
sbb
jbe
add
cmp
and
hlt
xor
bound
js
cwtl
in
inc
xchg
xor
xchg
lahf
clc
adc
dec
adc
insb
mov
enter
dec
sub
xchg
xchg
xor
xchg
sbb
jb
es
rolb
cmc
jno
or
xchg
xchg
jne
adc
and
insl
and
sub
imul
fs
sbb
fidivrl
out
loopne
pop
push
xor
xor
xchg
lret
push
inc
add
out
shrb
push
pop
mov
pusha
icebp
dec
xor
idivl
fdivrl
sbb
clc
aas
jg
pop
add
dec
xchg
ljmp
mov
pop
sbb
fmuls
xor
cmp
and
push
push
or
push
jle
out
mov
inc
stos
jne
mov
mov
jmp
mov
pop
mov
xchg
jbe
xor
js
inc
ljmp
cmp
pop
lcall
pop
sbbl
dec
out
ret
out
cmp
jl
rcrb
ret
rcrb
pop
outsb
out
adcb
je
sahf
sbb
cmp
push
jge
lock
shl
xchg
dec
jle
enter
lret
hlt
pop
dec
lock
jns
fcom
fiadds
les
std
mov
out
pop
push
insl
repz
popf
jno
pushf
sub
lods
test
movsl
push
jbe
imul
testb
jp
jmp
xor
xchg
scas
enter
leave
mov
bound
shll
mov
jae
popw
mov
mov
adc
and
pop
pop
and
cmp
mov
insl
aaa
loopne
mov
sub
and
sub
add
clc
repz
add
movsb
test
or
jmp
movsl
mov
xchg
mov
bound
adc
mov
dec
sub
dec
xchg
sub
lcall
sahf
mov
add
cli
pop
pop
mov
mov
sbb
repnz
fdivl
scas
mov
inc
ljmp
std
aaa
jns
cltd
dec
lahf
push
sti
leave
mov
mov
dec
cwtl
or
mov
xor
jne
mov
fdivrs
scas
lods
les
xchg
dec
popf
cmp
gs
aam
push
xor
outsl
pop
adc
rorl
aaa
lcall
repz
lret
bound
fisubrl
xchg
jg
dec
xchg
jne
or
inc
cld
faddl
clc
sbb
les
mov
andl
push
pushf
and
or
dec
lret
nop
ret
imul
cltd
pminsw
jecxz
fs
enter
icebp
sbb
add
insb
ss
mov
push
dec
dec
sti
fsubrs
pusha
loop
ljmp
jno
jg
popa
movb
bound
lods
push
xor
mov
pop
rorl
in
int3
xor
push
rcr
push
xor
mov
mov
pushf
jns
add
xchg
jns
lds
imul
ret
mov
mov
ret
adc
mov
add
push
dec
push
pop
jge
mov
stos
cmp
fldt
xchg
dec
scas
push
sbb
pop
into
lods
cmp
mov
movsl
dec
js
mov
push
int
gs
in
aas
out
daa
lret
xchg
jl
out
jl
pop
dec
lret
jb
and
and
mov
cmpsb
mov
push
cwtl
mov
je
lahf
clc
into
ret
cmp
xchg
ret
mov
or
dec
in
das
mov
pop
aaa
es
add
je
lods
fwait
es
mov
popf
test
ret
sub
loop
cmp
ficomps
push
xchg
stc
lods
insb
push
push
nop
outsb
cmpsb
std
mov
pop
insl
fcmovnu
xchg
dec
lods
lret
sbb
in
out
je
imul
push
adc
in
movsl
jno
fwait
mov
mov
enter
fidivs
xor
cs
out
mov
pop
sbb
call
ljmp
popa
cwtl
fsubl
lret
outsb
rcr
lahf
testb
cmp
jb
xchg
mov
leave
outsl
outsb
jnp
cmpsb
repnz
js
mov
inc
scas
lods
pop
test
and
pushf
iret
mov
add
inc
jo
inc
sub
pop
cwtl
out
adc
sub
push
pusha
dec
in
gs
in
push
mov
vmwrite
idivl
mov
dec
adc
sahf
jmp
popa
insl
cltd
jecxz
pushf
xchg
or
nop
jno
sbb
adc
sarb
cmpsl
clc
stc
shrb
dec
lret
rcrl
dec
inc
mov
add
mov
jnp
shr
or
jo
int
aas
jnp
lret
mov
pop
nop
clc
xchg
xor
inc
or
lods
pop
pop
cltd
ss
inc
sub
out
mov
jl
or
sub
into
or
lcall
jg
sub
andl
pop
lret
enter
lahf
jl
push
and
jne
fisubrl
divps
xchg
sahf
or
addr16
mov
bound
push
adc
mov
sbb
mov
pop
sub
popf
mov
rcll
mov
cmc
adcl
aad
popf
mov
jbe
stos
adc
ret
jnp
dec
pop
mov
or
loop
jbe
dec
scas
cmp
sub
test
and
jecxz
cmp
stos
lret
popa
adcb
mov
adc
or
mov
fdivp
loope
xor
ficomps
pushf
dec
sti
cltd
push
push
mov
ljmp
int
ja
ret
js
ljmp
xchg
push
je
xor
xor
pop
push
cmp
data16
loope
iret
pop
mov
or
xchg
imul
mov
leave
mov
mov
push
jge
pop
mov
push
movsb
enter
sbbb
jecxz
nop
xchg
pop
cmp
jge
xchg
int3
call
mov
mov
pop
jb
fwait
and
inc
xor
mov
mov
mov
adc
std
mov
aaa
cs
lea
lret
ret
cmp
aad
mov
bound
and
mov
test
mov
sbb
sbb
andb
inc
divl
adc
adc
push
sub
mov
push
ret
ja
bound
push
push
loop
cmp
imul
dec
push
dec
inc
add
pop
sub
sbbb
scas
lret
out
xchg
fidivs
dec
icebp
ljmp
pop
jae
aaa
jmp
aam
or
repnz
jne
dec
sub
aam
push
scas
fisttpll
mov
mov
add
push
jl
test
xchg
es
loop
std
sub
fnsave
mov
scas
cwtl
mov
jle
lahf
sub
fidivl
cmpsb
aaa
jge
xlat
mov
push
clc
sub
xlat
ss
push
adc
fidivs
sti
scas
sub
xchg
imul
jne
cmp
mov
je
push
push
cmp
ror
pop
mov
lcall
in
xchg
mov
mov
add
pusha
cmpsl
pop
mov
or
inc
xchg
test
mov
lahf
jne
mov
addr16
mov
xchg
sarl
jl
dec
iret
mov
loop
outsb
icebp
repnz
stos
adc
xorl
inc
sub
enter
lock
mov
or
scas
sbb
pop
in
jno
add
lea
mov
sub
lods
loop
xor
sahf
inc
sti
cs
outsb
cmp
cltd
inc
xor
pop
popa
jnp
sbb
out
aad
out
inc
rcrl
add
ss
call
jecxz
adc
aaa
lret
xor
mov
subb
jmp
out
lods
mov
scas
ds
jecxz
pusha
lods
mov
int3
lods
mov
push
mov
add
lcall
push
rolb
or
pop
inc
dec
xor
enter
xlat
pop
push
addr16
rcrl
pop
aad
pop
lcall
mov
push
or
fs
adc
mov
pop
je
mov
sbbb
sub
bound
mov
mov
cmp
xor
mov
lret
pop
mov
mov
jl
pop
mov
dec
jbe
pop
inc
scas
xor
fdivr
push
dec
aas
pop
add
mov
nop
xlat
movl
mov
jo
mov
ret
dec
shl
insl
into
dec
pushf
cmp
into
sbb
cmp
loopne
pushf
aas
push
inc
jae
xchg
mov
xchg
test
pop
ja
leave
xor
cmp
ja
mov
cltd
xchg
imul
test
sahf
add
jp
xchg
xchg
sahf
xchg
xor
leave
pop
xchg
outsb
xchg
sub
sbb
lret
sub
in
mov
adc
int3
in
mov
lret
pop
sahf
dec
aaa
pop
in
movsl
jno
jae
scas
cmp
mov
jns
mov
push
loope
rorl
add
fwait
inc
or
popf
and
out
pusha
jle
loop
mov
xchg
jmp
int
mov
lods
mov
inc
xor
das
push
xchg
fisubrl
mov
fcoml
into
fmuls
push
xchg
nop
xchg
inc
adc
inc
or
dec
outsb
xchg
data16
mov
sub
shl
out
xchg
rcll
insl
inc
mov
pop
push
std
adc
add
psadbw
pop
rcr
jb
pop
lods
dec
ljmp
xchg
ljmp
xchg
inc
jmp
jle
test
jo
gs
mov
aaa
mov
dec
es
or
jnp
dec
add
loop
pop
pop
in
lds
mov
iret
mov
add
lods
ret
daa
dec
jl
adc
stc
push
cmp
mov
out
mov
repnz
xchg
mov
imul
xchg
repz
mov
fsubrs
scas
or
dec
and
fcmovu
bnd
sbb
insb
sbb
xor
jp
push
jne
cmpsl
cmp
pop
icebp
push
je
dec
cmp
add
rcl
scas
xchg
es
in
std
or
or
inc
rorb
sub
das
pusha
shll
sar
arpl
inc
add
xor
pop
arpl
lret
pusha
sub
cli
xchg
push
mov
adc
scas
adc
jle
pop
movsb
rorl
ror
or
mov
push
jb
jecxz
fs
adc
xchg
aas
sub
sub
aaa
dec
out
sbb
mov
or
lea
cwtl
adc
in
insb
dec
and
push
mov
mov
scas
pop
or
pop
cmc
sbb
jle
fistpl
push
decl
imul
mov
sbb
pop
arpl
cmpsb
aaa
je
xchg
enter
lahf
fstps
ret
adc
lret
pop
mov
pop
in
scas
cmpsb
cwtl
popa
leave
fldt
adc
sbb
outsb
ror
jmp
jmp
cmp
jnp
fmulp
arpl
sub
fistps
sub
addr16
jecxz
rcl
jmp
fisubrl
mov
pop
lahf
mov
int3
push
pop
pop
pop
imul
mov
daa
negb
popf
aad
shlb
xchg
or
pop
repz
jl
adc
adc
jns
insl
arpl
fidivl
ficomps
jo
add
out
lds
adc
pop
jl
pop
es
out
xor
xor
out
icebp
test
mov
icebp
aad
gs
out
movsl
adcl
add
outsl
or
pop
dec
sahf
aad
jo
aam
or
push
inc
cmpsb
pop
or
ret
mov
rcl
insl
cltd
rcr
pusha
jne
mov
inc
nop
pop
loopne
inc
inc
scas
sub
test
or
andl
fists
mov
cmp
push
fldl
out
into
outsl
enter
loopne
inc
cld
in
push
cli
out
lret
je
or
ljmp
ficomps
sub
mov
push
ret
jae
inc
shll
lret
fwait
insb
in
jge
lcallw
xchg
push
jmp
add
fcos
add
dec
aam
or
push
xchg
fucomp
lcall
pop
gs
add
fistl
lds
add
rorb
xor
pop
rcrl
mov
test
cmpl
stos
sub
sbb
loop
xchg
popa
mov
inc
jmp
pop
outsb
or
cltd
insl
sti
idivl
mov
cmp
inc
loope
sub
mov
mov
pop
hlt
fcmovb
xor
pop
cmpsl
insl
ret
scas
int3
cltd
lahf
insl
sub
xlat
loopne
pop
jns
jae
jmp
mov
mov
mov
call
mov
sub
das
jne,pn
hlt
scas
mov
or
cmp
mov
repz
sahf
jno
sahf
andl
mov
lds
rol
cmp
sub
negl
push
int
mov
lahf
mov
hlt
stos
ja
sub
lock
and
add
leave
pop
int
aam
test
lret
and
data16
rcrb
jmp
ds
cli
jo
or
ret
mov
mov
das
cmp
mov
jne
mov
pop
outsl
in
enter
push
js
scas
push
mov
loopne
push
test
pop
bound
out
outsl
mov
rolb
sbb
inc
cmp
lret
and
movsl
fcmovne
pop
outsb
fistps
cltd
loop
cltd
jne
dec
nop
cli
sti
in
adc
pop
rorb
roll
je
push
arpl
notl
mov
loopne
daa
mov
arpl
arpl
dec
pop
adc
push
adcb
sbb
push
sbb
jl,pt
scas
dec
jl
push
das
ret
aas
pop
setae
adc
fs
les
movsl
adc
pop
jmp
fdivrl
adc
sbb
inc
cmpsl
dec
inc
xchg
jns
movd
das
add
scas
cmp
mov
xor
mov
xor
test
inc
xchg
dec
mov
mov
dec
mov
fdivp
mov
mov
movb
insl
inc
daa
or
adc
adc
cltd
jne
xchg
popa
add
xchg
push
sub
out
cs
fwait
jp
bound
xchg
orb
hlt
mov
jg
xchg
mov
and
sbb
data16
out
jae
ret
shr
call
xchg
inc
sub
lods
les
jae
sbb
std
xor
and
xchg
fcom
jecxz
bound
push
imul
stos
daa
lret
inc
fcomp
dec
es
iret
xchg
roll
int
ljmp
pop
xchg
cmpsl
imul
les
push
sbb
jae
add
mov
dec
jns
lock
inc
pop
xor
add
movsb
inc
xchg
xchg
xchg
jl
call
cmc
les
insl
cwtl
lret
sbb
add
fidivrs
arpl
lret
pop
sahf
das
xchg
int3
sub
sbb
imul
pop
mov
imulb
outsb
lods
out
sahf
test
sbbb
jae
hlt
arpl
cltd
and
push
loope
movq
jb
adc
sahf
stc
mov
jbe
jae
imul
mov
sbb
and
dec
lcall
add
cld
dec
mov
xor
inc
xchg
pop
adc
ret
adc
add
subl
jecxz
cmp
xor
into
add
hlt
movsb
jnp
mov
and
lcall
sarl
movsl
jnp
fcmovnb
push
mov
inc
daa
or
mov
mov
push
and
jb
stc
xchg
call
outsb
add
or
repz
aas
jne
or
push
test
cltd
add
cltd
lods
scas
mov
adc
fisttps
push
adc
or
subl
stos
sub
loope
xchg
ret
cld
sub
mov
dec
xor
fists
add
dec
adc
mov
sbb
stc
and
sbb
or
sub
inc
xchg
inc
lds
out
test
jge
repnz
jne
cmc
cld
in
xor
out
jne
mov
dec
idiv
cmp
xchg
out
cli
sbb
notl
movswl
shl
rol
shrb
dec
jmp
cmp
jbe
push
scas
shr
xorb
leave
sbb
jne
jb
push
fldpi
cld
inc
loopne
sub
sbb
pop
adc
clc
xor
rclb
ds
scas
stos
push
je
into
mov
pop
xor
push
xchg
movsb
ficoms
ja
test
push
push
ds
adc
sbb
repnz
enter
lods
jmp
mov
cmp
add
lcall
enter
mov
push
je
pop
sbb
stos
and
lods
test
leave
xchg
xor
shrb
stos
or
xor
push
push
lea
insl
cmp
lods
adc
mov
mov
push
call
sbb
inc
test
cwtl
cld
dec
scas
push
into
pop
mov
cmp
fucom
mov
cs
ja
inc
out
xchg
out
inc
jno
xchg
cmp
aad
cld
and
int3
std
pop
jl
push
add
enter
cmp
test
test
stos
adc
je
or
cmpsl
leave
fbstp
repz
mov
arpl
out
push
repnz
mov
lods
or
enter
cmpsb
pop
mov
adc
mov
push
pop
xchg
cmp
icebp
pop
ljmpw
fisttpl
js
lds
xor
decb
stos
scas
dec
ja
push
sbb
mov
in
adcb
or
or
loopne
sahf
ds
pushf
in
test
jmp
cmp
int
insl
bound
mov
adc
das
pop
mov
mov
xchg
fisttpll
or
rclb
andl
loopne
push
push
mov
pop
pop
mov
aas
jo
push
ljmp
jp
jmp
adc
outsb
add
and
push
dec
push
pop
scas
mov
sahf
loop
sub
in
inc
mov
loop
cwtl
loopne
stos
push
in
aas
cwtl
mov
mov
fs
and
fwait
sbb
mov
mov
pop
ret
pop
test
xor
lods
cmp
stos
mov
mov
xor
add
sbb
mov
lea
dec
sbb
cmpb
jbe
mov
push
dec
pop
cltd
pop
fstl
lret
pop
xchg
cmp
add
in
jecxz
icebp
and
push
sbb
repz
shl
mov
fwait
xor
push
std
jp
out
jo
fcomps
lods
dec
sbb
ret
sub
cwtl
sbb
sar
loop
and
ret
inc
out
sbb
jl
mov
aad
mov
jp
loop
jae
mov
testl
fldl
pop
push
jbe
xchg
jbe
xlat
lahf
test
fildll
imul
stos
sbb
inc
faddl
sahf
js
jno
mov
push
inc
shll
imul
out
popf
adc
test
pop
sbb
movsb
mov
dec
add
imul
testb
sbb
movsl
push
js
out
xchg
jg
rep
das
push
out
jmp
js
lcall
inc
xchg
mov
mov
xor
lods
mov
loopne
push
cwtl
add
add
pusha
push
ja
in
adc
lahf
adc
pushf
or
push
loope
jmp
bound
jae
mov
gs
cmpsl
pop
insl
mov
mov
ss
bnd
or
outsl
div
mov
pop
decb
mov
stos
add
xchg
ds
lock
sub
test
inc
clc
pop
out
clc
adc
jnp
mov
dec
cmp
loopne
and
iret
xchg
mov
sahf
sub
jp,pn
outsl
nop
fiadds
mov
cmp
mov
push
lcall
outsb
outsb
mov
sub
jno
pushf
pop
je
fnstcw
inc
mov
insl
ret
int3
adc
cs
mov
cmp
sbbb
movsl
xor
enter
fs
xchg
ja
jle
cmp
out
repz
jno
fucomip
stos
pop
fimuls
jge
add
adc
int
dec
xor
mov
mov
sbb
push
cltd
ds
jns
add
repz
movsb
or
adc
lea
mov
insl
jne
loope
cwtl
mov
clc
imul
fildll
std
sbb
mov
or
mov
shll
stos
test
xor
xchg
gs
xchg
nop
ret
mulps
or
bound
shlb
aam
cmp
jns
lods
or
cltd
jmp
rcrb
dec
pop
idivb
sbb
add
jbe
lahf
test
into
mov
xor
hlt
mov
cmp
imul
xchg
xchg
sbb
jg
rcrb
push
inc
cmp
mov
jae
bound
ficoml
adc
popl
in
leave
push
mov
pop
mov
or
leave
add
pop
not
fisttps
xchg
jnp
push
dec
pop
clc
mov
pushf
push
leave
clc
cwtl
popa
cmp
add
jne
scas
mov
cs
les
pop
scas
and
jmp
add
jns
fs
xchg
push
ljmp
jne
and
imul
and
jmp
dec
or
data16
dec
fxch
mov
popf
out
add
xor
jl
ret
pop
pop
adc
mov
sub
aas
sti
cmpl
ret
popf
popf
stos
insl
ds
pushl
repnz
in
push
or
xchg
cmp
clc
pop
punpckhbw
icebp
push
in
imul
cmpsl
add
movsb
jmp
test
pushf
pushf
cmpsl
in
aaa
sbb
adcb
cld
sbb
sahf
out
cmpsl
aaa
add
test
pop
jns
flds
fidivs
inc
xlat
int3
cmp
mov
mov
push
test
jp
shrl
inc
or
sub
rcrl
add
cs
test
cmp
out
mov
sub
mov
xor
aas
js
cmp
inc
rcr
andb
loopne
push
sub
dec
mov
inc
mov
fldcw
cmpb
out
mov
test
or
cmp
xor
inc
ljmp
push
ss
jecxz
dec
push
negl
cmp
adcl
dec
cmp
mov
sbb
pop
xor
andl
scas
push
arpl
cmp
mov
push
imul
repz
push
insl
mov
jge
fprem1
push
out
testb
jecxz
pop
stos
mov
sub
cmp
mov
les
lea
popa
or
mov
pop
ss
lret
test
test
and
xchg
cmp
das
push
mov
xchg
and
push
lods
ret
dec
scas
test
cli
jmp
ljmp
sti
mov
loop
inc
pop
movsl
inc
or
sti
push
and
fcom
loop
xor
pop
bswap
dec
dec
pop
rcrl
or
je
sub
xor
call
sbb
mov
lret
inc
pop
int
adc
xchg
rcrb
jle
iret
mov
xor
add
jns
cli
aaa
and
add
adc
jmp
insl
lret
lcall
repz
out
xchg
push
push
xor
or
stc
dec
dec
jecxz
and
call
xor
pop
in
addb
push
pop
push
insl
xor
sti
rcrl
cmp
or
insb
stc
sbb
mov
jecxz
nop
xor
in
shll
cmpsl
stos
leave
dec
jae
or
movsb
lea
fcmovbe
cli
jcxz
push
imul
jne
jae
push
mov
jmp
outsl
jp
pop
hlt
or
shlb
dec
sub
ret
cmp
cltd
inc
mov
lea
jno
mov
cmpsl
pop
fisttpll
adc
pop
mov
xor
xchg
js
push
rep
cmpsl
loope
mov
loop
cmp
sbb
push
mov
mov
add
mov
and
aad
shrl
xchg
and
call
cmc
loopne
loope
mov
inc
lret
adc
jnp
sub
scas
sbb
aad
roll
test
outsl
pop
xchg
jae
xchg
adcl
push
adc
sub
in
push
movsl
sbb
mov
mov
pop
push
xchg
jnp
popa
mov
lret
adc
jo
xchg
into
mov
xchg
ret
dec
sub
lret
push
in
mov
pop
lcall
pusha
jmp
jmp
and
push
out
sbbb
rcrl
adc
ficoms
imul
xor
sub
cmp
mov
pop
nop
out
ss
stos
jl
fistps
bound
enter
shrl
fisubrs
clc
dec
or
mov
sub
or
fwait
or
movsl
gs
cld
xchg
lcall
inc
in
dec
test
mov
or
cmpsl
sbb
mov
loope
lahf
push
stc
xchg
push
adc
jbe
insb
cmp
sbb
movsl
pop
clts
pop
into
mov
inc
dec
or
dec
fildl
inc
add
sarl
ja
push
sub
dec
jae
imul
in
fsubl
punpckhwd
pop
imul
frstor
mov
xchg
xor
int
add
arpl
cmp
shll
sarl
lret
mov
dec
in
dec
sbb
mov
fstpl
cli
jo
fstpt
jl
push
add
dec
gs
and
jg
jae
lods
inc
pop
dec
jnp
or
outsl
cmp
adc
sub
mov
dec
or
cltd
and
arpl
xchg
adc
gs
aaa
outsb
add
or
push
out
int
dec
test
mov
mov
fidivl
stos
adc
dec
dec
sbb
jmp
push
jmp
cld
dec
pop
pop
mov
jne
sub
jl
add
adcl
gs
orps
das
call
cmc
bound
inc
push
xchg
into
pop
jne
add
inc
push
fldenv
mov
sbb
sub
addl
fidivs
repnz
shl
sbb
cmpsb
cmp
jns
orl
cltd
or
ljmp
push
adc
out
push
jecxz
cmpl
jbe
xor
mov
ret
and
cmp
xchg
jg
add
push
pop
ret
ja
mov
adc
out
mov
adc
testb
aaa
into
mov
jle
icebp
mov
out
imulb
lcall
pop
and
push
loop
leave
aas
into
hlt
add
aaa
mov
push
pop
pushf
icebp
xchg
iret
pop
mov
jo
adc
mov
inc
and
loope
jnp,pt
dec
fcomps
stos
clc
mov
sub
int
jns
scas
mov
lret
sub
pop
pop
mov
jnp
push
out
jmp
pop
scas
es
jmp
mov
test
and
fcoms
sarl
pushf
cwtl
jae
xor
pop
enter
push
test
add
in
xchg
imul
sbb
push
adc
aam
sub
jmp
mov
pop
fnsave
mov
fiadds
mov
js
mov
xchg
leave
pop
add
mov
adc
cmp
mov
mov
xchg
jo
inc
and
insl
fldenv
adc
hlt
stos
push
roll
and
push
jmp
sbb
adc
jecxz
cmp
mov
xchg
loopne
cmp
enter
sub
insb
dec
or
cmp
xchg
loop
sbbb
test
jg
sbb
in
push
push
or
test
rcrb
mov
cmpb
idivb
roll
aaa
pop
add
icebp
arpl
popa
sbb
jp
fists
test
aas
mov
repnz
pop
cmp
or
mov
bnd
sbb
aas
jb
rcll
out
inc
mov
dec
repnz
test
xor
lcall
push
ja
nop
stos
sub
and
addr16
inc
lahf
movsb
mov
mov
and
inc
fs
pop
dec
daa
inc
shlb
in
mov
dec
xchg
mov
adc
int3
cs
je
mov
xchg
inc
pusha
out
lds
popf
out
mov
pop
adc
sbb
mov
cmpsb
add
mov
inc
inc
dec
ja
ja
or
cli
fidivrs
outsb
and
xor
or
fcomps
xor
repz
pop
mov
in
lea
mov
mov
lcall
lret
pop
cmpsl
or
jl
xor
test
sub
lock
icebp
cmpsb
call
arpl
aam
gs
push
xlat
std
adc
aaa
test
std
test
outsb
xor
nop
xor
xchg
push
jns
out
out
pop
in
jae
lcall
mov
outsl
loop
sahf
or
stc
jbe
dec
leave
jle
fwait
push
pop
dec
daa
mov
sub
pusha
push
push
sti
inc
orb
add
popf
js
jb
imul
mov
mov
rol
mov
mov
sub
pop
mov
push
bound
cmp
jecxz
push
push
ficoms
call
repz
pusha
add
aaa
test
xlat
dec
push
bound
lcall
int
mov
cmp
push
adc
xchg
insb
or
mov
jp,pt
call
add
xabort
iret
arpl
xor
mov
and
aam
ja
jecxz
gs
fidivs
rolb
pop
push
cltd
or
xchg
gs
dec
ss
in
dec
cmpl
xchg
dec
sbb
cli
inc
or
mov
pop
push
clc
mov
repz
out
mov
mov
loop
pop
dec
ja
cwtl
cld
fidivrs
mov
adc
loop
enter
cmp
adc
sbb
cmp
pop
add
test
or
mov
insl
mov
and
cwtl
adc
add
and
cwtl
out
leave
enter
jp
imul
or
pop
fdivp
mov
fisubrl
cld
pushf
sub
and
ss
or
clc
sbb
or
mov
jl
scas
shll
xchg
sbb
pop
pop
pop
adc
mov
cmpsb
gs
and
adc
ror
inc
lret
cmp
or
movsl
push
xchg
dec
insb
in
inc
and
push
mov
arpl
sahf
add
in
clc
add
sarb
sub
les
int3
daa
out
jno
pushf
mov
out
cmpsl
flds
into
jo
mov
push
push
fdivrl
in
enter
inc
push
xchg
xor
pop
xlat
in
inc
lods
loope
sahf
into
int3
dec
movb
pop
inc
pop
sub
cmpsl
jnp
out
sarb
mov
mov
addl
iret
sub
jp
pop
ds
leave
pop
xchg
jge
or
mov
shl
pushf
lods
fistpll
arpl
jecxz
sub
jae
rorb
idivb
xor
or
out
call
call
testl
repnz
aas
xor
rcrb
loop
inc
adc
inc
cmp
dec
imul
mov
adc
cmpsl
mov
loop
dec
js
pusha
and
mov
in
pop
cmpsb
leave
sub
sbb
sub
mov
xchg
adc
gs
ret
mov
push
xor
leave
or
sub
lret
fistl
xchg
lret
cmpsl
and
mov
inc
push
aas
cmp
addl
xor
pop
mov
adc
in
hlt
inc
dec
out
adc
mov
xchg
inc
cmpb
outsl
jbe
add
pop
in
jns
aam
push
repnz
fs
mov
mov
stos
cltd
or
mov
bound
mov
add
and
iret
mov
xor
sbb
sub
shll
stos
fbstp
or
adc
mov
movsl
js
push
mov
ret
les
xor
add
mov
imul
out
ret
inc
int
cmc
sub
int
push
rcl
jno
lods
sti
push
aaa
outsb
mov
movsb
ljmp
outsl
push
jnp
jb
push
das
aam
sub
mov
xchg
fldenv
repz
mov
push
pop
aam
sbb
pop
lret
add
xchg
cmp
mov
jns
sbb
addr16
sub
notb
add
or
fcoml
fistpll
movsl
push
repz
push
add
lcall
mov
jae
and
dec
and
or
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
.byte
.byte
.byte
pushf
daa
push
jno
mov
add
add
jb
add
xchg
add
lret
rcrb
xor
pop
pushf
jns
lret
lock
sbb
adc
xor
inc
sbb
roll
xor
pop
sbb
hlt
pop
sub
rorl
mov
push
popf
shrl
ret
jne
scas
pop
sub
aad
cmpsl
pop
jmp
and
aad
cli
scas
add
cltd
push
pop
mov
sbb
add
les
sbb
mov
sub
sbb
sub
xor
es
cli
and
xor
add
pop
test
cwtl
sbb
xor
pop
push
xor
pop
je
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
rcrl
xor
pop
sbb
dec
lret
dec
ret
fisttps
or
pop
push
ret
movsb
pop
xchg
xchg
insb
dec
mov
aam
repz
shrl
movsb
pop
xchg
xchg
insb
dec
add
sbb
mov
shrl
dec
push
pop
or
lret
add
sahf
pop
ret
movsb
pop
xchg
xchg
insb
dec
sbb
out
inc
xchg
mov
add
push
pop
sbb
shll
sbb
shrl
add
insl
pop
or
lret
add
mov
pop
sbb
ror
in
rcrb
xor
lods
xchg
push
dec
push
inc
or
lret
add
mov
jne
cmp
rolb
dec
adc
xchg
sbb
xor
pop
dec
mov
shrl
dec
push
daa
ja
ret
sbb
xor
pop
sbb
int
mov
fidivl
cmp
rolb
fcmovnb
xchg
or
lahf
pop
pop
dec
dec
call
sub
inc
sbb
dec
pop
ret
sahf
and
ret
and
and
cli
mov
xor
cmpsl
sbb
shll
insl
jmp
cltd
insl
aas
pop
or
mov
cmpsl
and
jp
or
xor
sbbb
pop
inc
fwait
loopne
test
pop
aaa
test
push
and
add
fucomi
xor
mov
insb
insb
sarb
mov
add
cmp
lods
addb
cmp
add
xor
mov
mov
cmp
hlt
lret
nop
scas
dec
mov
mov
xchg
xor
aaa
jns
cld
addr16
das
dec
fwait
rol
lcall
jbe
popa
lcall
aad
dec
pop
ds
xchg
and
dec
aad
jb
push
or
and
jns
inc
str
lret
sub
aas
cli
rclb
rcll
fstpt
bound
test
lret
add
jnp
mov
lods
xor
imul
das
mov
push
dec
mov
int
sub
std
xchg
arpl
js
push
in
jno
push
popf
mov
fimuls
or
ffree
cmp
push
sbb
mov
enter
outsl
sub
or
call
xor
leave
and
push
incb
roll
ret
test
nop
xlat
ret
orl
jmp
mov
mov
mov
insl
push
dec
mov
pop
pop
lods
fwait
shll
xor
dec
mov
push
fcomps
ret
jb
movsb
push
fdivs
push
popf
pop
pop
pop
call
xor
insb
pop
dec
cli
jle
or
scas
movsl
add
out
rclb
mov
daa
les
sbb
xchg
mov
and
or
jl
xlat
loope
sti
inc
or
ret
mov
xorl
int
dec
std
mov
dec
lret
jecxz
loopne
xlat
fiadds
rcl
or
jecxz
jmp
ror
lahf
test
int
popf
sub
add
sub
mov
in
xchg
or
pop
or
push
or
pop
sub
dec
or
push
and
push
push
das
std
sub
cmp
out
cmp
mov
xor
fmuls
pop
arpl
arpl
xchg
push
add
int
enter
shll
xor
popf
jns
lret
ds
stc
xor
jne
loope
pushf
inc
lahf
inc
xchg
lods
and
jbe
jge
sahf
movsb
or
jne
mov
pop
or
add
je
sar
out
popf
dec
xor
cltd
mov
arpl
cmp
loop
fistl
cmpsl
aas
loope
jecxz
add
cwtl
enter
sbb
add
sbb
xchg
xor
xor
cmp
hlt
sbbl
lahf
cmp
inc
fidivrs
cli
xchg
clc
mov
rcrl
int
fiadds
mov
lahf
jnp
mov
sbb
popa
push
inc
jne
into
push
aad
add
jl
push
push
scas
ficoms
pop
fstps
testb
push
pop
outsb
xchg
pop
in
and
stos
cmp
arpl
or
movsl
sti
sub
or
jnp
shrl
bound
pop
fists
mov
imul
add
ret
jnp,pn
inc
or
mov
pop
jp
jl
movsb
push
test
ret
lahf
and
test
xor
int3
jne
pop
int
mov
roll
mov
mov
xchg
int
push
sahf
jle
sbbb
add
fildll
and
mov
popf
mov
add
pop
pop
dec
lgdtl
push
sbb
xlat
add
stos
orb
mov
cmpsl
packsswb
fcomi
aam
xchg
mov
inc
mov
xchg
jbe
scas
adc
pop
movsb
push
ljmp
mov
xchg
lea
icebp
xchg
jae
xchg
gs
iret
dec
xchg
sbb
add
lret
pop
add
leave
push
add
or
shrb
mov
shlb
and
dec
push
xor
and
pop
push
and
pop
repz
push
les
cmp
adc
sar
adc
push
jge
cs
jecxz
fstpl
data16
arpl
sub
rorb
nop
pusha
and
int
ror
outsb
dec
hlt
jcxz
jl
stos
mov
ror
push
fsubrl
cmpsl
add
scas
fs
aam
sti
xchg
insl
push
insb
jp
int3
sub
sahf
push
xor
aaa
mov
mov
jne
pop
jecxz
inc
pop
fdivrl
push
mov
clc
test
movsb
or
rcl
popf
dec
fmul
xchg
mov
sub
xchg
imul
xchg
push
dec
iret
push
jge
fdivl
cmp
iret
cmp
and
imul
xchg
sub
xchg
adc
push
data16
mov
xor
dec
mov
rorl
movsb
das
lret
pop
lahf
or
mov
inc
or
stc
test
inc
xchg
int
scas
push
sahf
inc
push
repnz
xchg
negl
fsubs
inc
mov
daa
lds
ss
inc
pop
mov
mov
movsl
xchg
test
and
fsubrl
stc
aas
or
cmpl
pop
pop
pop
sub
test
push
flds
mov
outsb
xchg
fcomps
jno
cmpsl
es
js
sbb
iret
ret
aad
in
mov
mov
and
push
shl
js
pop
addr16
cltd
and
adc
push
cmc
pop
pop
fistps
cmp
icebp
insb
in
int3
nop
ja
lods
push
inc
hlt
adc
mov
or
dec
rcrw
or
sub
cmc
pushf
ss
jge
adc
test
pop
sahf
cmp
adc
jle
jae
pop
fdivl
inc
xorl
jmp
push
dec
push
sti
test
fnsave
cmp
mov
push
xor
mov
shl
mov
jbe
outsl
lahf
mov
and
xchg
js
pushf
not
stos
and
xchg
pop
xor
xchg
sbb
sub
jle
mov
push
push
pop
stos
sbb
mov
push
dec
xchg
test
adcl
cli
push
pop
addr16
data16
lods
mov
xchg
daa
jl
mov
shlb
pop
popa
pop
or
push
jb
xlat
pushf
mul
mov
fsubl
mov
mov
sub
add
repz
sti
mov
ret
subl
arpl
or
inc
stos
loopne
ret
repz
fxch
pop
fcmovb
sub
mov
movl
jno
mov
mov
pop
pop
in
mov
xor
std
push
pop
pop
sub
rcrb
fiaddl
imul
xchg
repz
cmp
xchg
or
mov
mov
cmp
rclb
stc
out
pop
jp
jae
fdivrl
xor
in
xor
iret
add
and
mov
push
cmp
adc
pop
clc
insl
pxor
jbe
iret
add
mov
and
daa
fcoml
sti
ja
adc
dec
lcall
inc
mov
popf
pop
xorl
out
xor
ret
adc
jno
lret
inc
fistpl
rorb
stc
cmp
pop
mov
xor
fmuls
mov
int
lods
jbe
out
lret
jmp
add
pop
ret
add
mov
mov
je
lret
iret
sbb
xor
lcall
jne
in
push
out
shl
aaa
add
sbb
data16
mov
loope
or
loope
mov
gs
xchg
cmp
xor
sub
shlb
cmp
fcomps
pop
mov
jg
dec
xchg
add
orb
cmpsl
test
sti
add
cmc
xlat
dec
lock
shr
lods
jl
or
divl
cmpsb
mov
pop
push
pop
mov
mov
xor
or
pop
sbb
xchg
outsb
jmp
hlt
xchg
outsb
lret
popa
mov
push
pop
les
repz
iret
mov
aam
dec
in
push
out
inc
test
add
ja
lahf
inc
cmc
jns
add
les
jmp
icebp
mov
xchg
lds
dec
roll
xchg
adc
add
mov
cld
adcl
arpl
add
cs
push
xchg
cmpl
xchg
mov
or
sbb
sbb
cmc
pop
leave
iret
out
xor
xor
pushl
je
pop
pop
add
pop
cld
sub
test
xchg
sub
leave
scas
mov
vmovaps
xor
jbe
inc
pop
and
sbb
rclb
sub
xor
aam
scas
shlb
push
or
lcall
imul
das
xor
int3
dec
cmp
fsubl
jae
pop
ret
push
flds
insb
jmp
sbb
mov
jp
mov
hlt
adc
push
xorl
push
fcomp
insl
cmp
add
fistpll
mov
pmaxub
or
aad
fistps
xchg
and
fimuls
push
adcb
sbb
fistps
loopne
pop
push
xchg
jg
fsubrl
ffree
adc
xchg
repz
adc
pop
sbb
and
fs
adc
mov
pop
jecxz
pop
mov
sub
testl
push
push
imul
call
mov
pop
mov
lret
loopne
test
and
in
cmpsb
leave
mov
in
out
mov
jae
je
dec
outsb
scas
sbb
stos
fistl
or
enter
pop
mov
negl
sbb
adc
pop
adcb
add
or
int
dec
jo
inc
xchg
dec
pushf
fstps
addb
lock
inc
int
outsb
dec
test
push
test
fstps
jp
xchg
inc
xor
mov
mov
cmpsl
jg
jecxz
mov
rdmsr
mov
rol
inc
cmp
rcl
push
jmp
test
leave
xor
inc
or
push
rorl
or
sbb
inc
out
xchg
dec
out
daa
out
lahf
push
push
xor
ds
inc
gs
clc
shl
ljmp
pop
imul
jp
les
jmp
push
push
test
pop
popf
ret
pop
in
mov
xchg
push
inc
fldl
push
pop
mov
lds
cmpsb
push
movsb
gs
popf
pop
jne
nop
inc
mov
add
dec
xor
add
push
mov
inc
jo
stos
outsb
push
dec
xor
std
or
xlat
mov
repnz
mov
out
and
inc
push
mov
cmp
repz
jg
mov
pop
in
mov
je
pop
popl
add
adc
fstl
or
lods
pop
push
or
inc
cmpsl
or
pop
pop
push
jae
or
hlt
dec
mov
xchg
push
faddp
pop
mov
test
loop
stos
fsubl
mov
jae
xor
jno
jb
inc
sbb
xchg
pop
outsb
mov
dec
lret
push
push
xchg
insb
add
mov
and
ljmp
or
es
or
jle
popf
xor
cmc
or
hlt
add
xor
mov
rorl
andl
adc
icebp
xor
test
xchg
add
dec
push
push
pop
fldt
lcall
lock
arpl
repz
pop
cmp
xchg
jno
imull
mov
test
in
std
mov
mov
xchg
out
stc
inc
aas
add
imul
lahf
pop
xor
clc
pushf
cmp
std
xchg
dec
add
mov
sub
gs
or
push
adcb
and
loop
je
into
push
cs
sti
jg
lcall
jnp
push
lret
add
sahf
or
inc
pop
or
int
push
pop
inc
cltd
jle
inc
fwait
jl
into
loop
pop
jle
cli
push
or
aaa
es
orb
in
push
ret
mov
cmp
mov
push
jnp
pop
jno
ljmp
cmp
xchg
mov
jae
jp
testl
mov
sub
outsl
out
into
roll
xchg
xchg
into
cmp
out
add
or
mov
ljmp
call
sbb
sbb
adc
add
or
sbb
pop
add
dec
mov
adc
cs
jg
out
nop
or
pop
sbb
aam
sbb
mov
push
pop
xor
dec
lods
xchg
ljmp
inc
int3
mov
cwtl
sbb
test
adc
push
test
inc
adc
adc
outsl
js
xor
test
cmp
cwtl
test
hlt
mov
call
mov
lcall
and
and
jae
jbe
mov
and
es
mov
and
cmpsb
insb
add
xor
add
mov
cmp
fmull
add
aaa
and
xchg
fst
add
shrl
mov
hlt
jo
mov
incb
loopne
addr16
add
mov
cmp
les
add
mov
xchg
jge
push
jl
nop
movsl
jno
pop
mov
or
aam
xor
push
test
nopl
cltd
lods
mov
scas
loopne
adc
shl
sub
mov
dec
adc
sub
and
rcr
lods
mov
out
xchg
subb
roll
sbb
cmpsl
incb
mov
outsb
les
rcr
ret
int3
fisttpll
leave
test
xchg
mov
outsl
call
inc
cwtl
xor
orl
sahf
rcrl
jl
pop
nop
cld
setns
movsb
popf
ds
add
out
push
test
leave
cmp
fucom
inc
call
mov
fdivrl
inc
cmp
xchg
pop
js
enter
sub
sbb
icebp
jge
pop
fadds
int3
cmp
cmp
lea
sbb
setno
pop
cwtl
pop
xchg
sbbb
xor
popa
daa
and
mov
out
into
pusha
shrb
lfs
adc
cmp
xor
insb
ret
mov
inc
sbb
shrb
movsl
or
sub
xor
lods
inc
add
xchg
test
rcrl
rolb
jecxz
cmp
dec
xlat
sbb
cmp
inc
dec
and
sub
xor
std
test
imul
nop
out
lods
roll
imul
in
push
dec
shlb
mov
jmp
popa
dec
sub
mov
popa
mov
cmp
or
inc
cmp
rcll
add
test
cmpl
and
aas
and
out
push
xchg
jo
adc
loopne
call
sub
jae
sub
es
dec
pushf
inc
test
js
cli
cmp
sbb
repnz
lods
xor
clc
adc
enter
jnp
cld
push
xchg
mov
sub
xchg
xor
add
push
addr16
aam
dec
xchg
or
or
ror
adc
frstor
sbb
mul
pusha
add
xor
xorl
cltd
vfrczps
push
faddl
inc
mov
and
cmc
stos
insb
add
or
push
ljmp
inc
mov
outsb
call
add
imul
hlt
xor
out
mov
arpl
add
ret
xchg
sbb
sbb
pop
pop
cmpsl
lods
add
aam
adcl
je
xor
imul
cmp
hlt
xchg
cli
or
into
mov
nop
pushf
add
cs
in
dec
aam
movsl
cli
sub
jo
adc
pusha
daa
add
or
lock
or
andb
subb
ds
stos
nop
aam
leave
pushf
pop
insb
mov
add
inc
xchg
mov
mov
sub
cmp
jle
addr16
mov
add
loope
sbb
lock
imul
outsl
jmp
dec
les
inc
addr16
xchg
daa
add
mov
adc
data16
or
and
cmp
push
and
cmp
loop
add
lahf
hlt
cwtl
ds
push
xchg
out
dec
cmp
cmp
andb
aam
push
cwtl
lcall
mov
sbb
int3
mov
fnstcw
xchg
xlat
andb
jb
adc
jo
xor
add
add
fwait
mov
call
repnz
out
inc
inc
and
cmp
and
cmp
inc
sbb
nop
sub
movsl
jecxz
adc
xor
mov
xchg
fucomip
add
lcall
icebp
dec
outsl
cmp
cmp
cmp
add
mov
cmc
ret
inc
or
call
sbb
pop
scas
int3
sub
cmp
push
add
imulb
out
sbb
or
cmp
roll
ds
sbb
push
mov
sbbl
aas
daa
mov
test
mov
xchg
xor
sub
sti
mov
or
add
sub
cmp
inc
clc
add
subb
xor
dec
flds
movsb
mov
push
pushf
add
loope
cmp
mov
add
push
inc
mov
fisubrl
jo
push
lock
ljmp
dec
mov
add
push
adc
test
inc
hlt
inc
rcrb
xor
out
dec
sbb
inc
out
pop
ret
testb
mov
adc
lods
movsl
inc
cwtl
or
mov
jl,pt
inc
leave
and
rdtsc
clc
pop
push
test
stc
ret
push
or
xchg
inc
int3
add
and
sub
aad
loope
test
adcb
mov
inc
inc
or
test
push
out
nop
fisubl
cmp
mov
es
adc
dec
loopne
jmp
xor
ret
test
ljmp
in
mov
in
aam
ret
ficompl
dec
or
mov
jp
outsl
dec
sub
xchg
pop
test
shlb
mov
and
pop
inc
xor
adc
and
lock
xchg
mov
add
mov
dec
enter
sbb
mov
clc
jo
andb
pusha
and
jo
shl
insl
outsl
sbb
dec
jne
es
adc
jnp
test
wrmsr
jne
movsb
or
jmp
test
adcb
mov
flds
loop
hlt
xchg
jno
shll
mov
add
rclb
mov
ds
add
jo
outsb
decl
and
popa
cltd
adc
flds
andb
inc
mov
adc
lahf
sbb
jno
inc
mov
cltd
cmc
push
inc
cmp
pop
dec
aad
or
mov
dec
nop
pop
incl
mov
and
mov
imul
cmc
xchg
pop
add
inc
loope
in
mov
sub
or
sub
sub
ret
andb
shll
dec
adc
dec
mov
std
outsb
shrl
rolb
jae
push
aas
or
xlat
jecxz
sub
pop
xor
mov
push
mov
mov
loopne
sbbb
addr16
cwtl
outsb
sub
test
pop
gs
test
pop
adc
adc
cmpb
mov
sbb
add
mov
and
aad
inc
in
in
bound
das
push
lods
data16
inc
jecxz
lcall
push
add
stos
lcall
sbb
sub
in
insl
shll
push
sbb
or
add
xchg
lret
xchg
lahf
nop
sub
cmp
mov
fldl
loopne
mov
push
outsb
sbb
mov
movsl
add
clc
dec
testl
add
mov
pusha
ror
xor
fwait
imul
push
sbb
add
dec
adc
ja
inc
or
xor
jg
or
xor
and
inc
outsl
fwait
inc
jo
mov
push
addr16
or
mov
shl
xor
inc
cmp
into
movb
xorb
jae
and
add
adc
xor
and
adc
jne
and
sbb
mov
or
or
sub
cmp
insb
mov
push
mov
add
adc
mov
leave
or
ret
sub
mov
popl
scas
sarl
xor
jge
and
sub
push
xor
push
mov
sti
pop
fiadds
fxch
sub
mov
int3
cmp
mov
add
adc
pusha
hlt
call
add
inc
pop
nop
mov
jb
addb
jg
mov
fstl
cmp
adc
imul
out
mov
mov
out
add
out
ljmp
adc
int3
orl
and
pop
sub
xchg
lahf
roll
ret
push
jl
cmp
sbbl
fwait
in
pop
mov
push
mov
and
pop
fiaddl
aaa
add
jecxz
lret
fdivs
inc
jo
or
in
pop
push
mov
clc
mov
leave
js
test
xchg
add
aas
push
sbb
pop
mov
add
mov
sub
mov
adcb
xchg
mov
mov
test
jmp
mov
ret
int3
sbb
fcoms
dec
sbb
jbe
add
leave
sub
cmp
push
xorb
mov
cs
mov
mov
aam
fwait
lods
xor
adc
and
or
test
pop
arpl
hlt
rclb
int
and
imul
lds
dec
das
and
dec
push
pop
nop
fcoms
mov
mov
mov
shll
test
loopne
sbbl
pushf
mov
pusha
push
cmp
ret
nop
stc
out
inc
dec
cmp
lock
data16
and
cltd
or
xor
dec
roll
leave
xchg
add
sbb
cmp
mov
lret
jmp
jo
lret
mov
add
inc
pop
movsl
sbb
and
or
cmc
xor
in
push
dec
mov
add
add
in
sub
imull
pop
xchg
cld
and
cwtl
add
inc
scas
pop
lock
mov
pop
imul
out
lret
cmpsb
cmp
mov
inc
cmp
jge
shl
ss
xchg
push
jo
cmp
jns
popf
or
mov
mov
mov
pop
pusha
in
xchg
add
iret
andb
lret
cmpsb
xchg
cwtl
mov
andb
fsubp
and
push
push
ret
inc
ss
sbb
xchg
cmp
xchg
xchg
arpl
inc
mov
mov
shl
lea
into
jmp
adc
xor
push
mov
inc
and
mov
sbb
xchg
cs
sbb
mov
addl
fidivrl
add
dec
sbb
bound
pop
outsb
jo
jmp
cmpsb
shl
sbbb
inc
repnz
or
adc
mov
and
subb
xchg
xchg
test
or
add
sub
mov
scas
and
jg
mov
popf
mov
xor
popa
xor
and
out
daa
add
int3
push
mov
outsl
push
mov
movsl
pop
repnz
push
std
add
pop
pusha
andb
ret
or
mov
add
jb
sbb
jno
xor
inc
hlt
daa
cs
mov
lret
jmp
pushf
adc
mov
mov
seto
ret
xor
mov
add
add
inc
push
add
movsl
out
sar
pop
or
enter
pusha
cltd
jge
mov
aam
jl
outsb
gs
jns
mov
sbb
push
iret
into
test
stos
mov
ljmp
inc
mov
ljmp
and
cmp
js
dec
jno
pop
outsl
shll
inc
mov
add
ret
xor
and
test
and
mov
and
hlt
xor
test
aaa
addb
in
mov
mov
pop
and
add
fisttps
test
pop
cmpsl
arpl
push
leave
and
sbb
out
mov
adc
cs
add
mov
add
loope
lea
shrb
mov
addr16
into
pusha
mov
xchg
push
mov
enter
sub
divb
jo
out
dec
call
outsb
xor
enter
xor
insl
sbb
and
loope
les
stos
mov
dec
out
xor
and
int
add
mov
mov
std
test
fisubs
out
xchg
sahf
sbbb
pop
outsl
aad
push
shll
pop
and
dec
dec
add
sbb
fcoms
jae
cli
pop
and
int3
sbb
pop
push
fiaddl
fs
lret
inc
xchg
jge
fmull
cs
scas
add
sti
js
and
adcl
fdiv
dec
mov
inc
and
sub
call
mov
add
mov
cwtl
out
dec
pusha
inc
or
call
repnz
popf
and
sarb
jne
add
cwtl
ja
mov
push
adc
gs
nop
test
sub
inc
in
inc
cltd
jnp
push
xchg
add
sbb
mov
rclb
test
jl
ljmp
mov
and
subl
data16
cmp
and
sbb
ljmp
xor
and
inc
sub
les
jae
add
xchg
pop
and
loope
xor
xchg
push
jle
clc
pop
cmp
pop
and
cmc
mov
out
into
cmp
gs
rol
cwtl
mov
adc
addr16
xchg
aam
lock
aas
dec
aaa
gs
out
adc
xor
inc
cmp
add
adc
cmp
test
pushf
mov
in
jo
out
add
push
mov
jl
sbb
jo
adc
gs
mov
stos
shrb
lods
insl
add
push
lock
out
adc
push
daa
adc
push
cmp
andb
mov
cmpsl
mov
rolb
stos
xor
adc
or
test
in
add
dec
add
dec
jmp
mov
and
stc
mov
rcrl
popf
dec
cmp
pop
pushf
and
add
inc
sbb
xchg
mov
adc
and
adc
dec
mov
push
repnz
sahf
aas
insb
loope
rolb
pop
test
push
mov
call
imul
or
sbb
add
out
imul
jne
fidivrl
and
nop
fs
xor
inc
insb
adc
jmp
inc
mov
test
push
test
adc
xor
and
dec
lock
cmp
mov
adc
call
aaa
lods
out
dec
outsb
aam
sbb
push
in
nop
sarl
xor
dec
ret
dec
fiaddl
xor
lods
sarl
adc
inc
test
cmp
fwait
test
repnz
xor
lcall
xor
mov
xchg
add
int3
lods
mov
and
push
or
insl
enter
push
aam
repz
adc
ja
adc
hlt
or
add
mov
enter
gs
call
subb
add
pushf
hlt
in
add
inc
and
js
push
outsl
ja
inc
mov
rcr
push
insb
and
add
mov
rorb
pusha
mov
lds
mov
popf
or
push
xor
add
xor
mov
add
rcll
adc
xchg
push
xor
daa
lods
xchg
mov
sbb
les
js
lock
sbb
pop
or
adc
push
mov
nop
push
or
pop
pop
mov
shll
dec
pushf
mov
scas
andb
lcall
and
scas
add
or
push
add
cmp
adc
faddp
or
or
sbb
xchg
add
mov
je
cmpb
xor
cltd
test
and
call
fadds
mov
mov
add
loope
cltd
cmc
pop
cmp
mov
pop
leave
and
cld
adc
orl
sbb
inc
add
loopne
cmp
rcl
xchg
push
clc
add
mov
icebp
shl
fcomi
xor
sbbl
in
jo
push
or
cltd
sarb
fiaddl
lcall
xor
or
lods
stc
pop
jns
sbb
jmp
add
mov
cmp
dec
add
js
mov
out
or
jns
test
addl
popa
dec
nop
imul
jne
push
add
negl
add
push
mov
inc
fnstcw
add
pop
sti
sarl
lock
repnz
xchg
xor
push
sbb
or
mov
mov
orb
cmp
lcall
sbbb
loop
bound
pop
and
mov
jno
xchg
xor
xchg
dec
ret
hlt
aaa
out
popl
push
add
loop
pusha
loopne
int3
push
xor
jl
or
movsb
inc
mov
sbb
cmc
sbb
mov
lret
mov
fidivs
xchg
dec
inc
inc
outsl
dec
sub
les
movsb
inc
cmp
leave
mov
pusha
je
cltd
add
insl
xchg
hlt
mov
add
push
or
test
mov
fidivl
subl
cltd
test
pushf
or
push
ret
or
jns
cs
jae
ret
test
push
shl
push
mov
push
sbb
daa
popf
in
dec
lds
nop
pop
push
and
xor
mov
mov
ficoms
push
xor
and
dec
inc
xor
pop
jmp
gs
inc
pop
pusha
xor
push
shlb
or
and
mov
mov
inc
mov
call
xorl
lret
pop
popa
xchg
push
in
lds
sahf
popf
mov
push
stc
bound
jl
cwtl
fidivrl
add
sub
add
push
lock
add
xlat
int3
andb
xor
mov
dec
sub
adc
sbb
cmpsb
pusha
or
adcb
lret
out
fbld
xchg
add
jae
mov
jb
add
clc
pusha
cmp
xchg
les
mov
loope
inc
xor
lahf
pop
sbb
add
out
in
xchg
push
icebp
sbb
sub
mov
sub
roll
lret
and
add
imul
cltd
subl
xor
and
in
mov
aaa
subb
cmp
filds
xor
jle
pop
inc
or
cmp
inc
adc
cmc
lret
inc
dec
mov
cwtl
and
cmp
pusha
mov
add
js
or
nop
add
shlb
popa
nop
push
sbb
es
ljmp
out
hlt
mov
mov
aas
pushf
pop
in
inc
and
jl
fsts
push
adc
pop
gs
lock
or
outsl
mov
xchg
xor
add
dec
inc
pop
cmp
push
fldl
lods
mov
mov
adc
popf
fs
add
pop
pop
jp
push
int3
dec
add
xor
xchg
test
mov
add
push
jmp
hlt
adc
add
repnz
jg
and
push
pusha
ljmp
jo
repz
out
pop
or
add
mov
or
andl
mov
pop
mov
out
rcrl
mov
loopne
fs
sbb
fldcw
fcomi
push
ficomps
sti
mull
jp
add
pop
jbe
and
pop
jb
enter
mov
xchg
arpl
lcall
movb
cmp
dec
iret
std
test
test
pop
sbb
push
or
enter
mov
pushf
adc
cmp
add
fstpt
popf
out
adc
imul
or
and
adc
fdivr
movsl
mov
push
mov
jae
loopne
decl
lea
xlat
add
and
test
les
pop
cmp
rcpps
inc
push
lock
lods
movb
fxch
enter
lds
insl
push
inc
and
popf
inc
call
cmp
adc
sub
xchg
nop
shll
mov
lret
sbb
test
push
dec
ds
enter
mov
and
iret
outsb
lods
or
lock
cwtl
add
test
mov
movsb
inc
add
xor
cmpb
add
add
push
sarl
movsb
enter
addb
sbb
mov
dec
jb
call
cmp
push
aad
or
repnz
xchg
cmp
cmc
fsts
pop
inc
xor
dec
cmpsb
adc
xor
jns
sub
mov
pop
push
adc
or
dec
outsl
mov
xchg
jae
pop
xchg
pusha
inc
mov
push
les
or
movsl
pop
mov
stos
lods
adc
or
pop
push
inc
and
xchg
sub
je
mov
sub
xchg
inc
jo
aad
cmp
rclb
add
and
cmp
les
cmp
or
aam
in
fdivrs
dec
bswap
daa
mov
cwtl
sub
cwtl
test
or
push
call
sbb
push
mov
addl
and
sbb
rcrl
pop
add
mov
add
mov
gs
pop
mov
out
xchg
cld
and
mov
add
divb
and
pusha
sar
and
mov
push
fsub
or
mov
outsl
jp
mov
pop
popf
nop
cld
imul
dec
cmp
outsb
repnz
or
sub
add
fnstsw
sub
pop
pop
clc
add
adc
les
outsb
aaa
jae
test
pop
aad
adc
xor
or
and
and
pop
pop
data16
repz
cwtl
fadds
iret
jl
mov
push
into
or
std
push
xor
push
sbbb
ds
inc
pop
mov
adc
push
or
mov
push
call
popf
loopne
cld
enter
dec
movsl
mov
lea
and
push
cmp
jge
inc
lock
sarl
mov
mov
xor
xchg
aad
jle
cmp
xchg
ljmp
add
or
mov
cwtl
stos
roll
aam
aam
into
orb
rorb
adc
rclb
jne
imul
aam
in
fsubrl
fstp
rcrb
rcll
xchg
xchg
shlb
nop
movsb
dec
lds
test
outsb
mov
xor
pop
ret
pop
push
jo
aam
inc
add
inc
aas
in
add
daa
cmc
sub
loopne
pop
add
and
dec
and
dec
jp,pn
and
and
push
pushf
add
sbb
out
add
xchg
push
nop
test
ds
inc
inc
hlt
std
and
daa
inc
into
cmp
cld
mov
xchg
add
push
movsl
repz
icebp
cmp
sbb
add
jae
inc
cld
jecxz
mov
or
repnz
andl
mov
push
shrl
sahf
mov
enter
les
inc
xchg
pop
sub
jnp
sub
pusha
sbb
cld
clc
aaa
repz
mov
out
add
test
test
std
fs
lods
push
in
push
popa
sbb
roll
pop
jge
push
mov
add
mov
arpl
lock
adc
or
xor
pushf
pop
pop
negl
inc
lea
jb
push
xlat
and
pop
pop
mov
fnstcw
lahf
rol
adc
and
sub
pop
pop
pop
shrl
mov
push
mov
clc
add
push
movq
mov
movb
js
and
je
or
int3
or
add
scas
inc
int3
pop
xchg
mov
and
pop
push
lock
xor
add
add
add
addl
test
int3
sub
aad
pop
inc
outsb
je
insb
int3
add
and
lock
fisttpl
sbb
pop
into
cmpsb
xor
aaa
je
adcl
add
into
cmp
sbb
pop
cld
unpcklps
aad
int
and
cmp
loopne
mov
movsb
adc
jnp
jne
xchg
pop
mov
push
rolb
mov
dec
sbb
xorb
push
rorl
add
cmp
xchg
andl
hlt
jbe
js
lahf
fs
movsl
push
adc
int
ficoml
adcb
add
inc
imul
jmp
je
mov
sub
sarb
jg
cwtl
js
push
mov
orl
add
add
arpl
popa
mov
fdivs
clc
or
jno
add
lret
pop
cmovo
mov
jbe
mov
push
mov
push
add
jl,pt
outsl
mov
mov
add
mov
add
pop
sbb
inc
test
lahf
mov
mov
add
and
int3
loop
call
loope
sbbl
div
hlt
add
lss
adc
mov
pop
pop
xor
lret
int
enter
nop
and
jns
adc
clc
fsub
push
or
sti
mov
inc
adc
subl
sahf
sbb
inc
or
xchg
add
pop
test
jno
insl
push
nop
imull
jo
sub
scas
mov
clc
inc
subb
lahf
testb
addl
push
lds
and
hlt
or
out
test
mov
mov
cmp
xchg
pop
int3
pusha
aas
fmuls
stos
cmpsl
jno
inc
js
pop
addb
inc
mov
int
cmp
xchg
add
std
aas
and
ja
fsubs
call
movsb
pop
cld
and
add
test
sarl
jns
dec
sbb
dec
icebp
cltd
add
clc
int3
sarl
leave
sub
rcrb
cli
sbb
mov
clc
mov
xor
aas
mov
add
stc
mov
sbbb
xor
dec
mov
cmpl
add
or
into
jnp
in
adc
mov
mov
mov
nop
fstps
and
mov
cltd
mov
enter
pop
dec
int3
add
sbb
adc
and
dec
mov
in
xor
add
push
sbb
aaa
std
shll
pusha
enter
and
fldln2
add
and
inc
xor
xor
dec
mov
mov
cmp
and
xor
inc
dec
pop
aam
repnz
popf
adcb
add
scas
mov
add
cmp
in
inc
ja
pop
xor
pop
or
mov
stc
dec
mov
push
xor
sbb
stc
mov
mov
push
pop
adc
mov
sbb
je
add
cmc
sub
idivl
and
rcr
out
inc
cmc
push
push
adc
arpl
mov
imul
rclb
insl
popf
pcmpeqb
subb
add
jp
inc
lods
mov
leave
jns
sub
jo
lods
test
clc
mov
jl
call
xor
ret
insl
add
cmp
pusha
test
es
and
out
mov
fstpl
addr16
mov
scas
and
andnps
sub
inc
lock
jb
jl
fldcw
outsb
add
jmp
fs
sub
mov
pop
dec
cmp
xor
inc
fs
cs
mov
inc
add
in
xor
pop
pop
xor
cltd
mov
mov
jo
cmpsl
adc
jmp
out
shl
sarl
and
and
or
pop
ret
fs
pop
add
xor
mov
mov
jnp
or
mov
insl
cltd
xchg
adc
rcll
cmp
xor
cld
pop
mov
add
pop
and
or
push
pop
call
outsl
xor
sub
aam
call
push
sub
dec
outsl
das
in
and
int
inc
add
subb
imul
xor
mov
push
and
je
in
adc
iret
xlat
int3
mov
daa
adc
dec
clc
xor
popf
push
inc
pop
mov
mov
sahf
mov
adc
ljmp
mov
sbb
push
test
pop
jno
fldcw
sbb
mov
out
mov
fadds
jno
cld
mov
rcr
fldt
dec
mov
push
das
popf
sbb
rclb
daa
insb
scas
and
mov
inc
test
or
int3
add
jno
adcb
pop
out
push
add
add
mov
aam
lods
xor
push
sub
test
or
cltd
mov
int3
in
dec
out
in
mov
sub
jmp
pop
inc
push
add
sbb
jnp
and
or
int
and
daa
dec
xchg
sub
out
jp
insb
dec
and
and
and
mov
adc
rclb
lods
fwait
pop
rolb
loopne
jle
leave
jecxz
push
mov
cld
inc
or
out
push
adc
cmp
push
and
jb
or
adc
mov
rol
sub
lcall
jecxz
add
lods
arpl
lret
or
xor
pop
xor
sub
loop
popf
sbb
push
mov
in
inc
and
add
jl
and
dec
fsubr
popf
call
orb
out
inc
loope
inc
inc
das
and
or
shl
inc
aam
dec
adc
lret
int3
pop
xor
scas
insl
mov
and
out
pop
js
loope
push
inc
in
pop
and
lods
mov
mov
inc
mov
cmp
test
lods
adc
mov
jb
push
enter
leave
mov
dec
pushf
add
pusha
pop
push
shll
test
add
pop
call
mov
cmp
loopne
rolb
pop
jge
add
imul
pop
fnstsw
sub
je
sub
orb
add
sbbb
scas
test
nop
gs
in
lods
clc
lods
mov
iret
cmc
aad
clc
insb
icebp
and
pop
push
mov
ss
push
dec
clc
add
push
dec
mov
movsb
xchg
push
mov
repnz
sarb
sub
add
add
out
aam
test
add
inc
mov
sbb
lcall
inc
mov
andl
sbb
pop
jge
xor
test
pop
stos
xchg
push
out
sbb
js
or
lock
ljmp
je
mov
xchg
outsb
sbb
add
adcb
loop
sub
insb
inc
inc
fistpll
pop
orb
jae
outsb
repnz
sub
add
lock
rorb
push
push
jge
loope
outsb
loopne
dec
xchg
lahf
mov
inc
loope
addb
test
lret
dec
fwait
test
test
cmp
ljmp
popf
cmc
and
xchg
cs
fsub
call
nop
sub
xchg
js
andnps
sub
popa
loope
mov
sbb
mov
outsl
and
xchg
test
and
add
clc
cwtl
push
call
mov
cwtl
movsb
mov
fs
loope
orb
xchg
dec
imul
pushf
lea
cli
add
sbb
xor
inc
pmulhuw
and
mov
stc
dec
sbb
fcoml
cmp
sbbl
das
sub
inc
push
and
xchg
dec
cs
sbb
sub
out
xor
or
xor
mov
int3
sub
incl
add
cmp
cli
orb
in
test
sbb
fsts
ss
js
cwtl
pusha
mov
std
or
hlt
or
and
inc
pusha
cltd
jge
push
cmp
gs
jne
sbb
adc
daa
enter
rclb
xchg
mov
add
xchg
dec
push
push
adcl
orb
dec
push
and
cwtl
inc
shrl
mov
add
add
adc
stc
xor
pop
int3
pop
cmp
or
clc
push
push
jmp
cmp
hlt
mov
add
inc
inc
push
insb
pop
cmp
push
jecxz
arpl
mov
and
setb
nop
popw
inc
rcrb
pop
push
adcb
mov
ret
lret
in
add
push
orb
insb
cmp
addb
iret
add
test
push
ficompl
mov
mov
shlb
dec
lret
fstpl
insb
jge
xchg
jl
clc
aaa
mov
mov
subb
iret
inc
pop
mov
add
sbb
push
xor
sub
sbb
fwait
add
cmp
hlt
or
xor
inc
insb
pop
bound
xchg
cwtl
pushf
add
sbb
addl
rol
jo
or
out
call
pop
jmp
data16
xchg
xchg
adc
xor
nop
test
aas
les
gs
push
mov
and
outsl
push
movsl
mov
inc
push
icebp
inc
js
les
mov
jecxz
push
dec
xchg
or
inc
cmp
sub
sbb
leave
movsb
and
xchg
or
and
mov
mov
sbb
add
pop
repz
xor
mov
or
pop
and
incl
or
mov
inc
les
clc
fiadds
jne
or
xor
add
xor
xor
inc
xor
les
pop
cwtl
and
mov
xchg
sbb
test
jle
add
mov
and
mov
or
sbbl
pop
arpl
cmp
pop
jge
add
xchg
sbb
cmp
xor
add
cwtl
dec
cmp
jae
or
dec
cli
sub
bound
jg
outsb
inc
or
rcll
xchg
and
xor
loope
es
mov
dec
stc
dec
popa
mov
cmpsb
and
pop
lret
mov
inc
decl
ja
or
js
pop
sahf
or
adc
scas
sbb
mov
mov
nop
outsb
mov
adc
sbb
pop
orl
lock
stos
pop
lods
and
or
adc
into
mov
orl
fwait
jns
adc
adc
das
mov
push
and
sbb
or
jo
and
insl
mov
test
je
or
jg
adc
add
int
stc
pop
inc
jnp
cmp
and
pop
cmp
lock
sbb
inc
pop
rorb
aam
and
and
push
insb
inc
xchg
call
push
pusha
mov
push
arpl
ret
mov
loopne
stos
add
stc
in
xor
bound
dec
and
shr
dec
mov
push
sub
push
out
bound
xor
inc
add
xor
incl
fnsave
shlb
sbb
or
mov
aam
enter
repz
daa
cwtl
iret
jne
add
push
add
or
sub
push
mov
mov
and
int
and
imul
int3
in
sub
xor
cvttps2pi
nop
xor
cltd
pop
cmpsb
aam
iret
jo
inc
mov
repz
faddl
pusha
jl
and
out
cwtl
repnz
xchg
data16
repz
pop
xor
cmpb
add
les
inc
or
cmp
xchg
pop
out
outsl
cmp
cmp
test
xchg
or
pop
fidivrs
fld1
shrl
fadds
cmp
jge
and
add
push
inc
int3
xchg
inc
out
inc
movsl
xor
pusha
fnsave
cmp
add
sbb
call
and
subl
mov
sbb
pop
xchg
mov
movsb
or
outsb
adc
pop
test
in
lret
lret
rorb
add
sbb
call
add
jae
ret
ja
adc
fs
add
subl
pushf
or
dec
clc
adc
in
sub
fadd
outsl
arpl
add
rclb
add
mov
mov
xchg
nop
dec
and
jl
add
aad
jg
ret
or
and
cltd
mov
movsl
rcrl
add
or
inc
jmp
rorb
add
pop
dec
roll
rcll
inc
adc
mov
lock
inc
sti
les
adc
lds
pop
daa
adc
xchg
sbb
test
jno
and
fs
mov
and
call
imul
cmp
dec
fildl
repz
push
jg
sbb
xchg
rol
mov
test
xor
repnz
xlat
push
cltd
rorb
jnp
add
adc
lret
push
cmpsb
add
add
aas
hlt
push
nop
sub
lock
movsl
lock
jle
test
add
sbb
mov
out
cmp
mov
ror
xorb
adc
jo
test
dec
and
fists
jae
shl
add
call
mov
ja
adc
inc
push
mov
cmp
or
add
adc
subl
push
jns
add
xor
add
adc
and
out
cmpb
or
scas
cmc
push
in
cmpsb
push
and
faddl
adc
adc
fs
fisttpll
mov
xor
orl
js
imul
cmp
cltd
andb
xchg
push
fisttpll
inc
add
stc
xchg
pushf
xor
pushf
pusha
orl
sub
mov
out
cmp
arpl
ret
popf
dec
inc
clc
add
movsl
sbb
push
hlt
add
pop
adc
iret
push
and
mov
cmp
ds
xchg
or
mov
pusha
or
pop
test
das
cmp
sbb
ret
movsb
rclb
jne
clc
cmp
aam
hlt
sbb
lods
testl
inc
stc
test
adc
fists
pop
pop
push
mov
inc
pusha
ret
and
jb
test
repnz
adc
pop
and
test
inc
jle
mov
cmpsl
int
or
push
adc
pop
xchg
mov
adc
pusha
inc
mov
cmpsb
nop
lret
aam
mov
dec
adc
push
mov
loopne
nop
cmpsb
clc
mov
add
mov
push
js
int3
push
jo
add
and
popa
movsl
shrb
sbb
and
mov
nop
sbb
loopne
pop
sub
push
popf
loopne
add
or
call
xor
insl
out
rcr
or
jne
cs
insb
adc
bound
cwtl
stc
test
arpl
fsubs
xlat
cmp
jns
adc
lret
loope
hlt
and
lods
fadds
mov
mov
dec
cmp
mov
pop
je
loope
push
aaa
lahf
xor
enter
roll
cmp
jne
ss
ljmp
jmp
dec
stc
lods
jmp
and
lock
sub
pop
add
test
inc
sbb
fstl
dec
shl
and
pop
mov
add
in
xchg
ret
and
inc
push
nop
fdivl
dec
and
inc
out
or
test
int3
js
test
dec
and
sub
jno
test
arpl
sub
in
push
cltd
jg
sbb
imul
push
pop
sub
or
rolb
jae
mov
cmp
push
test
xchg
lcall
mov
jno
loope
int3
sbb
fidivrl
cmp
dec
sub
rorb
popa
dec
push
add
sub
mov
xor
jbe
dec
arpl
nop
or
andl
xor
and
lret
push
sub
push
mov
jg
int3
es
xor
test
mov
jb
mov
add
fisubrl
mov
and
adc
dec
pop
jl
cwtl
mov
pop
fnsave
std
inc
shlb
and
adc
incl
push
add
pop
dec
cmpsl
adc
lock
add
mov
xor
repnz
cmp
cmp
daa
es
lahf
mov
movsb
sbb
mov
aas
jecxz
ljmp
rcll
loope
add
mov
mov
cmp
dec
sbbb
or
or
sbb
movsb
test
out
jbe
or
add
loopne
fisttpll
inc
mov
xchg
xor
sbb
pop
inc
pop
xor
out
push
push
js
nop
outsl
xchg
add
inc
push
mov
pop
pop
dec
cmp
movsl
push
pop
popf
push
push
andb
ds
nop
add
clc
xchg
sbb
fdivrl
cld
in
cmp
dec
xchg
adc
and
jl
in
nop
nop
inc
or
and
xchg
inc
icebp
adcb
pop
adc
pop
ljmp
subb
and
or
out
jecxz
ret
mov
mov
add
sub
cltd
and
dec
icebp
subl
shlb
ret
pop
ljmp
mov
mov
push
adcl
cmp
lock
sub
fnstsw
mov
xchg
mov
and
mov
daa
add
jb
nop
and
scas
aas
and
pushf
call
movsb
inc
les
xchg
push
inc
sets
pop
arpl
pusha
jl
fisubrl
push
and
or
inc
arpl
push
out
inc
out
dec
andb
jb
filds
rcr
loopne
scas
outsb
ja
adc
inc
cmp
cld
test
fsts
clc
mov
imul
jg
fs
shlb
shrl
loop
adc
rcl
cmpsl
xchg
inc
or
lods
jle
sbb
cld
add
push
mov
cmp
xchg
adcb
jle
mov
push
pop
int3
pop
int3
cwtl
mov
push
inc
cltd
adc
fcom
iret
inc
cwtl
popf
sbb
or
out
nop
mov
hlt
roll
jo
outsb
or
nop
push
es
add
inc
and
loop
push
xor
lret
sbb
inc
sub
sub
addb
rorb
dec
and
add
xchg
add
jmp
sub
aas
add
data16
call
leave
cmp
xor
fdivl
xor
add
adcb
dec
pop
dec
inc
adc
nop
fcomip
sbb
jns
xchg
fmul
gs
outsl
cmpl
cmp
cltd
addb
les
add
inc
gs
rolb
adc
xchg
pusha
clc
xchg
enter
mov
dec
cmp
out
sbb
scas
dec
or
or
clc
gs
push
xor
inc
push
and
fwait
jo
fcmove
push
pop
sub
movsl
ret
pop
mov
sbb
mov
xor
or
das
bound
sbb
and
and
mov
push
sbb
inc
adc
int3
sub
lock
cmp
shll
sbbl
add
mov
rolb
rolb
push
pop
sti
in
mov
push
and
repz
add
cld
dec
dec
cmp
mov
xchg
and
pop
cmp
inc
imul
movsl
add
cmpsb
jns
negb
jmp
pop
and
cwtl
and
adc
mov
movsb
sbb
pushf
adc
adc
fsubrs
cmp
lods
adc
mov
loopne
add
nop
imul
xor
and
rcll
or
pusha
jmp
enter
lahf
cmp
mov
or
mov
cmp
cmp
adcb
stos
mov
pusha
cmp
adc
dec
mov
insl
cs
stos
add
push
pop
dec
add
clc
imul
les
push
mov
cmp
test
jl
rorl
add
aas
out
cmp
mov
pop
mov
mov
aas
mov
mov
imul
push
lods
pop
pusha
mov
mov
or
fldenv
xorb
xor
shlb
test
ret
mov
lods
or
aas
shll
rolb
adc
test
xor
xor
or
fnstcw
pusha
fs
mov
xorb
mov
xchg
add
cmpsl
out
xor
adc
aam
rorl
call
push
ss
lock
adc
pusha
test
dec
lcall
pop
push
lods
adc
cmp
fildll
jne
cs
bound
ror
mov
add
pop
ljmp
ja
xchg
pusha
jl
jge
pop
nop
cli
enter
fadds
xchg
sbbb
cli
daa
mov
dec
jmp
adc
pop
hlt
add
gs
out
movsl
in
pop
stc
and
dec
jg,pn
mov
out
jecxz
je
stos
or
adc
fs
sub
lret
in
adcl
pop
pusha
daa
aaa
shll
and
pop
fcoms
xchg
les
xor
ljmp
pop
push
xchg
push
and
and
or
and
inc
pop
add
mov
jge
push
xchg
repz
adc
adc
inc
cli
xor
repnz
ss
insb
cmc
pusha
mov
jmp
adc
jg
sbb
jecxz
adc
xor
pop
fsubs
movsb
lods
sub
frstor
add
dec
mov
repz
xor
dec
les
lahf
dec
sbbb
cmpl
out
push
andl
sahf
fdivl
aas
andl
push
and
add
repz
add
lea
cmpb
mov
test
lds
push
inc
lock
inc
push
add
jb
push
adc
pop
pop
xor
mov
push
mov
sbb
cwtl
or
arpl
test
cmp
and
dec
lret
inc
sti
mov
cmp
add
xor
xor
or
mov
inc
les
adc
adc
aad
inc
ss
jp
adc
pop
inc
rcrb
faddl
lea
movsl
add
adc
xor
add
psubb
add
imul
ds
pop
add
fnstcw
and
icebp
pop
cmp
cmp
mov
pop
loopne
sub
pop
jmp
dec
cld
adcl
insb
cld
adc
xor
aad
mov
sub
inc
dec
in
sarb
mov
push
out
mov
xor
xorb
sarb
sbbl
ss
dec
push
add
add
popf
js
xor
sub
sbbl
pusha
iret
jns
in
sbb
cld
pop
popa
js
push
xchg
push
lock
jo
pop
loop
and
test
testb
js
dec
cltd
add
push
shlw
in
movsb
mov
insb
insl
mov
ror
mov
add
gs
add
add
sub
rcll
rorl
or
or
push
push
and
rol
push
aad
sbb
xchg
adc
lock
pushf
cmp
icebp
frstor
inc
je
out
or
lock
std
loopne
movsl
add
or
es
daa
pop
add
enter
fisttpl
add
xor
movsb
shr
clc
nop
add
int
mov
ja
cmp
add
aam
add
pusha
sbb
addb
cmp
jo
add
and
scas
add
inc
les
loope
orb
jle
add
hlt
test
inc
add
mov
adc
mov
nop
add
sysexit
xchg
lods
add
fdivs
jnp
add
push
js
dec
lds
cmp
insb
dec
repz
insb
outsb
mov
push
cltd
xchg
sub
adc
add
pusha
xchg
inc
aaa
cwtl
xchg
insb
jge
adc
mov
dec
shlb
xor
xor
or
pop
adcb
push
sub
or
dec
add
xchg
xchg
stos
inc
shlb
xor
dec
add
aam
fstl
inc
fmuls
lods
andl
sub
cmp
pusha
jno
adc
sbb
fcoms
jne
mov
andb
sub
movsl
call
outsl
mov
rclb
out
sub
push
mov
cmc
xor
dec
mov
cwtl
fbld
jns
and
adc
or
les
mov
adc
and
ja
adc
hlt
pop
sub
dec
clc
xor
jb
sbb
hlt
mov
in
xchg
fcmovnb
xchg
cmpsb
pop
and
push
xchg
add
dec
outsb
sbb
ja
nop
or
js
dec
push
pusha
mov
lods
sbb
ror
rolb
cmp
call
into
loopne
jp
cwtl
rclb
cs
add
sub
mov
out
int
cwtl
and
jmp
and
insl
out
mov
test
imul
pusha
or
addb
inc
jmp
in
add
stos
test
push
test
lods
adc
push
nop/reserved
pop
pop
nop
fdiv
adc
ja
adc
inc
add
lcall
or
int3
je
subl
popa
loopne
popf
ds
outsb
cmp
dec
test
and
das
pusha
sbb
cmp
out
daa
aas
out
movq
loope
scas
popf
or
nop
cltd
arpl
pop
fmulp
in
pop
inc
mov
or
rcrl
lret
xor
adc
mov
pushf
sbb
pop
lock
mov
cld
pop
xor
fucomip
mov
movsl
ret
insb
pusha
adcb
add
jmp
add
sub
outsl
out
add
aas
push
jno
inc
add
push
mov
aad
aad
mov
jnp
hlt
add
inc
xor
push
mov
pop
fnsave
push
shl
mov
lcall
in
and
xor
int3
aam
xchg
xor
inc
in
sbbl
call
movsb
and
xor
push
test
idivb
xchg
mov
inc
mov
fs
imul
push
add
pop
cmp
and
xchg
nop
lds
mov
and
xchg
pushf
cmp
cmp
es
push
pop
loopne
loope
inc
add
scas
dec
fnstsw
arpl
dec
xchg
cmp
scas
bound
mov
shlb
test
mov
jnp
add
cmp
insl
xor
in
add
mov
mov
mov
add
mov
rcl
nop
jge
cwtl
and
dec
fucom
add
movsl
push
cmp
stc
lret
rclb
cmp
push
lock
loope
sbb
pop
pop
pop
nop
jne
cwtl
in
in
and
nop
cmp
pop
enter
inc
inc
daa
ror
or
add
jg
jns
daa
int
bound
xchg
xor
clc
push
sbb
mov
aad
fsubr
mov
icebp
lock
lock
xchg
addb
mov
scas
dec
push
mov
call
inc
sbb
xor
lret
aas
sbb
cmp
inc
loopne
bound
pop
call
cmpb
sbb
shll
inc
sahf
sbb
xlat
andb
mov
add
imul
sub
test
cmpsb
add
inc
rorb
bound
daa
fcoms
pop
sahf
fldl
sbb
dec
inc
push
xor
pop
adc
ret
push
ss
mov
aam
push
sbbl
inc
test
out
jb
rolb
test
and
jne
xor
dec
shl
pop
lods
jae
cmp
pop
das
lea
push
repz
add
or
in
in
mov
or
and
inc
rcrb
orb
and
gs
lods
push
pop
verw
fmuls
ret
and
or
mov
add
out
or
in
pusha
aas
adcb
cli
adc
fsub
hlt
pop
in
repz
cmovnp
fnsave
mov
jae
adc
jge
rolb
push
test
cld
rcll
notl
mov
mov
in
lret
icebp
lea
add
out
insb
sub
aam
cmp
inc
fdivrs
stos
call
out
and
arpl
inc
pop
daa
jmp
cmp
and
popa
jo
enter
out
enter
lret
in
add
add
in
and
iret
xor
jp
fcoms
adc
or
insl
sub
lods
testb
inc
pop
sub
clc
mov
push
out
enter
je
push
sbb
add
push
jge
and
jl
add
js
imul
fwait
insl
jg
xor
imul
lods
sbb
jg
lcall
js
or
aam
repz
je
movsb
push
mov
adc
jmp
or
loopne
stc
adc
js
push
add
rcl
mov
imul
in
repz
push
or
outsl
fcmovne
adc
or
call
loopne
out
sub
and
inc
pop
mov
jne
push
je
sub
or
cmp
test
xor
clc
mov
insb
mov
jae
dec
insb
dec
les
in
xor
insl
mov
outsb
xchg
cwtl
pop
cmp
inc
jmp
aad
sbb
adc
sbb
push
fcoml
arpl
sbb
push
orb
cmp
pushf
sbb
inc
jo
cld
adc
sbb
cwtl
mov
out
les
xor
xor
push
ja
out
and
inc
nop
or
push
cli
xchg
xchg
xchg
int3
popf
test
inc
test
test
and
mov
incb
jl
leave
jb
add
xchg
fadds
sbb
cvttps2pi
in
or
inc
imul
sbb
adc
xchg
shlb
push
adc
out
mov
and
push
fcoml
scas
jmp
dec
fnstsw
xchg
enter
mov
push
pop
add
push
or
outsl
mov
jge
test
frstor
imul
mov
inc
sbb
ljmp
out
xchg
fwait
int
add
push
shll
repnz
pop
sbb
dec
daa
push
or
pusha
les
pop
movsb
push
frstor
test
adc
inc
fistps
orb
cmpb
stos
movsl
pop
es
xor
mov
xchg
stc
pusha
imul
add
cld
movsl
fidivrl
mov
and
mov
pop
test
xor
and
lcall
daa
dec
loop
push
in
in
and
push
test
xchg
dec
add
clc
xchg
or
fisttpl
add
insl
pusha
push
cmp
or
adc
stos
xchg
in
call
in
inc
mov
jmp
xorb
cli
inc
sub
cs
shl
or
and
dec
xor
push
arpl
fmuls
pop
aaa
xchg
jmp
and
pushf
movsl
movsb
add
je
int
mov
cwtl
xor
push
add
and
nop
faddl
ds
inc
dec
int3
mov
in
and
test
int3
stc
sbb
icebp
mov
push
add
dec
pop
pop
cltd
into
add
or
xchg
sbb
in
or
loope
inc
or
das
add
mov
cmp
xchg
fisttpl
and
sti
mov
xor
pop
loopne
and
mov
sub
mov
adc
je,pt
fs
movsb
add
jne
push
roll
jbe
filds
lods
pop
mov
add
pop
dec
sbb
popa
inc
aaa
call
push
hlt
sub
test
add
cld
jno
xor
movsb
jp
adc
jb
test
out
fdivrs
or
push
cmpsb
adc
ss
fsts
or
call
pop
cmp
add
inc
xchg
ret
mov
aaa
cmp
mov
ja
inc
mov
add
mov
jb
add
push
gs
push
faddl
jnp
cmp
adc
les
das
daa
adc
or
cmp
pushf
sbb
sbbb
nop
jns
out
mov
loope
inc
or
loopne
dec
xchg
and
pusha
fwait
jp
and
pusha
push
out
mov
andb
fnstenv
sbb
add
out
jecxz
pusha
sbb
sbb
adc
cwtl
shll
lock
dec
inc
pushf
jl
xor
xor
dec
stc
cmp
push
adc
pushf
fld
ficoms
or
xor
clc
dec
push
jnp
das
and
std
mov
daa
out
or
inc
push
xchg
pop
add
add
lods
jge
sub
jnp
and
cwtl
shrl
inc
jg
movsb
sbb
out
fldl
orb
nop
xchg
clc
inc
inc
out
mov
faddl
cmp
addb
dec
xor
add
mov
mov
into
fstl
xor
and
pop
cmp
sbb
push
mov
mov
sub
add
insl
call
dec
xor
inc
fiadds
sbb
sti
loopne
cmp
jle
push
pop
push
addb
cmc
jae
mov
adc
inc
out
dec
lret
test
js
nop
fs
and
fnstsw
call
push
xchg
push
sub
sbb
les
pop
call
cli
jmp
xor
inc
adc
shll
add
push
sbb
and
imul
sbb
push
adc
push
call
xor
or
mov
dec
rcrb
ret
pop
ret
adc
push
stos
mov
jp,pt
cmp
ret
out
aaa
nop
pusha
cmpb
sub
mov
mov
repnz
add
inc
loopne
fadds
cmp
jmp
add
aad
dec
adc
push
add
dec
cmp
pop
pusha
add
call
mov
xchg
fldl
adc
outsb
adc
out
jecxz
or
push
out
fs
fdivrp
mov
out
mov
pop
popf
inc
sbb
push
xchg
rclb
into
xchg
inc
jno
test
sbb
sbb
dec
jp
shrl
lock
add
int
in
leave
ss
and
dec
cmp
or
sub
sbb
mov
inc
pop
lds
leave
outsb
add
cmc
cs
das
add
sti
xor
insl
mov
lock
pusha
pop
pushf
dec
jp
xchg
adc
in
cld
testl
adc
or
mov
loope
insb
daa
pusha
popa
push
movsb
pop
bound
push
shll
mov
or
add
insb
sbb
adcl
in
dec
je
push
xchg
cs
sbb
add
popa
out
dec
pusha
leave
adc
push
fildll
pop
loop
nop
add
loopne
loope
rclb
jecxz
int
pop
adc
jo
rolb
xor
enter
lods
xor
push
sub
xor
dec
icebp
or
push
insb
inc
push
addr16
pop
subb
jns
sbb
add
adc
cmpb
push
outsl
jg
push
cld
sbb
add
inc
add
out
or
or
lret
add
fidivrl
add
addr16
cmp
sub
add
jl
dec
inc
ror
add
sbb
add
int
add
dec
fdivs
xchg
clc
mov
push
inc
cbtw
rorb
xor
je
adc
inc
fistl
clc
sbb
sti
xchg
add
mov
adc
mov
add
xor
push
mov
sub
lods
inc
lea
xchg
cmpsb
int3
dec
cmp
shr
sub
push
dec
clc
pop
and
sarb
inc
push
js,pt
add
mov
xor
push
popa
jbe
nop
movsb
and
jns
xor
xor
jno
add
out
loop
pmaxsw
sub
cltd
lods
nop
sub
mov
jns
shr
negl
imul
pop
sub
aam
adc
shr
and
push
and
xchg
dec
sbb
mov
jmp
mov
inc
ja
sub
xchg
pusha
loop
add
jae
jno
fstps
out
jb
sarb
outsl
inc
stc
add
icebp
popf
add
lahf
mov
aas
add
xchg
clc
mov
jmp
mov
mov
add
inc
xor
mov
add
inc
push
fstps
xor
orl
push
dec
mov
scas
push
loopne
aas
mov
ret
mov
mov
enter
xor
mov
cmp
ljmp
loope
adc
imul
rol
sar
sub
sub
adc
inc
jl
xchg
nop
cmc
add
add
icebp
xchg
popa
lods
jmp
adcb
push
bound
jo
mov
and
or
scas
in
dec
nop
or
je
jp
add
xchg
adc
xchg
or
shrl
aam
or
push
xchg
scas
or
popf
dec
jg
xchg
or
clc
movsb
sbb
lea
xchg
ret
xchg
adc
jb
icebp
enter
sbb
and
mov
stc
ja
enter
dec
test
and
pop
add
lcall
sbb
push
push
lock
xor
shl
push
xor
adc
outsl
cmp
xchg
test
adc
add
push
sbb
mov
cmp
xchg
add
jno
sbb
sub
bound
jecxz
inc
shl
incl
lock
cmp
in
popf
dec
dec
push
lods
sub
repz
dec
test
sub
add
popa
push
and
iret
nop
pop
es
pushf
push
jecxz
hlt
pop
inc
mov
test
out
test
nop
in
dec
cltd
arpl
push
mov
int3
adc
negl
ds
add
loop
mov
add
les
xchg
pop
mov
cmp
in
cmpsl
push
sarb
test
ficomps
aad
jns
add
jmp
pusha
pop
lods
push
adc
xchg
pop
add
xor
aaa
dec
cmp
popf
add
sub
lcall
cmp
or
xor
adc
adc
mov
push
add
adc
xorl
jmp
inc
jbe
sbb
pop
xchg
std
icebp
adc
pop
test
ljmp
je
or
xchg
sub
mov
addb
movsb
and
add
xor
mov
loopne
mov
popf
cs
mov
aam
fbstp
add
xchg
inc
jge
out
testl
mov
dec
or
and
or
cmp
inc
jle
jl
movsb
fsubrl
popa
lcall
mov
jb
wrmsr
lret
or
adc
dec
jbe
xchg
mov
sub
repz
jo
daa
inc
cmp
test
add
stos
faddl
lret
sub
dec
ret
push
mov
mov
hlt
ja
in
inc
cwtl
cwtl
mov
push
cmp
out
ds
dec
aam
mov
push
repnz
xchg
push
push
add
int3
out
lock
leave
or
in
or
pop
jae
push
out
lock
sub
dec
pop
cmpsl
sbb
dec
lock
mov
sbb
mov
inc
mov
aaa
lods
inc
add
stc
orl
and
enter
sub
popa
cmpsl
push
xchg
fmull
dec
pop
rolb
ret
rclb
faddl
sub
push
add
mov
sbb
int
xchg
or
sbb
gs
test
iret
sbb
jl
dec
xchg
jecxz
pop
dec
xchg
fwait
cmp
mov
outsb
stos
das
dec
jns
pop
adc
sub
imul
mov
pop
pusha
inc
adc
in
jnp
sub
push
std
rcrl
mov
push
or
hlt
sub
filds
mov
jle,pn
dec
js
in
pop
dec
movsl
fisttps
mov
andb
cmp
ret
sbb
fnsave
lahf
cs
jnp
and
jmp
call
push
cmp
les
jae
xchg
jmp
mov
sarb
adc
add
inc
adc
stos
pop
les
and
int
pushl
sub
mov
mov
add
pminsw
xor
outsl
insl
adc
mov
xor
add
std
mov
jle
pusha
adc
stc
jo
outsb
or
int3
repz
add
pop
ret
lret
mov
ljmp
xchg
pop
xchg
inc
js
sbb
sub
sti
in
lahf
loopne
rclb
mov
mov
pusha
ret
add
test
dec
outsb
add
jge
in
or
push
loopne
jle
or
xorl
mov
in
out
dec
fisubrs
cmpsb
outsl
xor
ja
dec
sub
xchg
inc
mov
jo
in
clc
and
pusha
jae
sub
sbb
xor
lock
bswap
xor
mov
pop
cmp
pop
push
add
sbb
add
addl
fiadds
jne
stos
xchg
in
jns
int3
cmpsb
call
xor
sbb
pop
lcall
push
test
mov
jae
pop
xchg
and
movsl
sub
xchg
dec
test
fcom
jmp
jo
js
cmc
in
and
jp
inc
and
daa
cld
and
shld
adc
or
jg
hlt
add
xchg
mov
push
stc
adc
leave
ss
pop
pusha
xor
inc
into
or
lcall
add
arpl
cmp
jbe
adc
mov
cmp
cmp
movsl
or
popa
lcall
pop
sub
dec
push
jns
rclb
js
push
xchg
lods
test
sub
sbb
and
in
add
jae
xchg
add
andb
sub
insl
in
mov
adc
xchg
add
arpl
aaa
xor
jae
adc
jbe
in
ss
dec
jmp
loopne
or
sub
aas
mov
fs
out
sbb
femms
dec
push
xchg
pusha
add
hlt
outsb
push
lea
dec
xchg
cmp
rcrl
jae
cmp
ja
mov
xchg
xchg
add
sub
add
mov
rcrl
push
outsb
mov
sbb
loopne
push
ja
mov
in
loope
mov
adc
sub
lods
add
xchg
pushf
ficomps
dec
pop
mov
jle
inc
inc
adc
fildl
in
mov
fucomip
rcrb
add
mov
sbb
xchg
mov
xchg
cmp
xchg
adc
mov
sbb
dec
inc
and
ja
jo
in
inc
mov
add
mov
mov
add
insl
pop
push
jnp
js
adc
call
xchg
addl
push
jo
loopne,pt
add
cmp
loop
out
dec
lret
insl
les
andl
dec
in
mov
outsb
push
cmp
push
mov
xchg
adcb
mov
pop
ss
cld
test
pop
xlat
mov
mov
mov
adc
pushf
xor
sub
int3
xchg
push
js
jge
popf
je
movsb
fcompl
das
loopne
les
or
movsb
cmpsb
sub
test
inc
mov
rclb
jae
add
cmp
dec
push
int3
cmp
mov
ret
jae
sbb
inc
dec
subl
or
test
addr16
lret
mov
add
mov
jg
fsubl
popa
jae
sbb
adc
scas
adc
outsb
jo
test
add
leave
push
mov
movl
sub
mov
enter
inc
inc
jns
movsb
mov
dec
inc
push
cmc
xor
cwtl
add
test
lahf
xchg
pop
xchg
fs
or
mov
test
xor
dec
outsb
adc
js
sbb
subl
pusha
test
mov
es
xlat
in
mov
xor
dec
cs
and
mov
push
fildl
ficomps
or
jle
hlt
add
shl
sbb
mov
call
aas
add
cmpsb
jbe
or
outsb
imul
popa
sub
dec
lods
adc
or
int
out
nop
outsb
or
adcb
add
nop
lock
orb
adc
push
call
repz
lock
in
push
ficoms
lahf
dec
or
mov
mov
push
dec
sar
sub
jecxz
xchg
jb
dec
sbb
xor
rcll
sbb
mov
mov
lock
ds
mov
dec
and
jb
rolb
test
enter
fcomps
aaa
dec
popf
adc
in
and
cmp
xor
movsb
add
mov
ljmp
and
xor
xor
sub
repz
pop
lret
dec
in
jecxz
and
js
cmp
sub
sub
mov
mov
sub
adc
sbb
sub
add
push
sbb
leave
add
mov
jno
les
test
addb
fnstsw
add
xor
add
sub
jl
add
ja
mov
loop
cwtl
adc
jmp
dec
mov
test
std
testb
jmp
add
aaa
jnp
mov
mov
inc
or
xor
mov
inc
outsb
lret
or
sbb
xchg
mov
test
push
fs
and
stos
sub
mov
inc
addl
cli
mov
add
in
xor
stc
divl
adc
push
out
pop
rcl
sub
aaa
movsb
pop
push
jbe
or
mov
clc
das
pusha
cwtl
xor
add
cmp
cmp
jmp
fdivrs
xor
pusha
clc
addb
mov
je
insb
pop
pop
and
mov
bound
enter
push
loope
sti
inc
add
mov
mov
add
into
sbb
dec
iret
push
jo
out
js
pop
lahf
insb
js
sub
pusha
rorl
xor
mov
cs
out
push
nop
pusha
movsb
jae
dec
jp
and
dec
mov
movsb
jo
cmp
and
pushf
movsb
test
inc
xchg
push
pop
rcll
jne
out
pushf
sbb
or
pop
jo
adc
into
aaa
adc
dec
pop
xor
xchg
inc
test
jo
sbb
mov
xchg
pop
enter
fwait
add
sbb
cmpb
jnp
pusha
adc
cs
xchg
in
roll
xor
mov
enter
or
shl
sbb
addl
mov
decl
sbb
push
sahf
outsl
xor
add
sub
cmp
xchg
mov
adc
push
mov
push
push
push
inc
pop
pop
jmp
mov
add
push
xchg
push
pop
pop
enter
je
pusha
add
aam
add
in
push
mov
add
in
dec
inc
add
test
add
in
or
repz
mov
xor
loope
dec
add
icebp
pop
imul
test
lea
aaa
adc
mov
and
adc
jmp
hlt
js
sub
and
movl
jmp
out
sub
sarl
xor
or
daa
and
je
fists
xor
rcrl
andb
ret
nop
orb
test
jmp
add
rorb
add
cmc
adc
lcall
inc
pusha
jmp
add
imul
orl
mov
ret
es
cmp
sub
testl
jae
add
jno
cs
push
pushl
mov
pop
stos
sbb
dec
mov
jmp
mov
mull
fimuls
xor
cvtps2pi
mov
test
filds
xchg
les
fadds
iret
push
pop
xchg
dec
lods
inc
xchg
es
dec
push
xchg
add
repz
xor
jmp
test
les
pusha
jb
aad
mov
xor
lods
mov
push
cmpl
leave
inc
call
cmp
aad
sub
mov
imul
inc
add
cmp
pop
and
clc
pop
or
add
adc
dec
lcall
push
mov
push
add
rcrb
xchg
mov
push
jmp
pop
clc
or
out
jne
lahf
repz
pop
sbb
leave
pop
jmp
add
out
add
jge
pop
pop
mov
lods
push
out
bound
push
xchg
jae
pop
rolb
neg
orb
xchg
or
pop
pop
sbb
add
pop
push
adc
jnp
loop
xchg
and
xor
jp
fs
or
inc
jmp
adc
and
pop
push
cmpsb
xchg
or
pushf
jmp
pop
hlt
repnz
or
jl
mov
inc
push
out
xor
cltd
add
push
mov
sub
rcrb
lock
and
rolb
and
clc
push
jecxz
xor
cld
mov
sub
sbb
fs
jmp
jl
and
pop
push
add
jle
push
add
nop
mov
sbb
in
add
sbb
push
xchg
push
add
mov
lea
addl
add
or
adc
push
dec
mov
movsb
add
dec
jmp
in
pusha
pop
sub
and
pop
fildll
inc
add
mov
fists
dec
pop
push
sbb
mov
or
push
aad
add
sub
jmp
inc
data16
popf
dec
push
pop
lret
test
mov
cltd
jns
add
adc
testl
jmp
push
push
cmpsb
push
xchg
add
inc
dec
icebp
ss
inc
sub
stc
outsb
sbb
rcr
push
mull
aaa
push
shll
push
js
inc
push
fildll
mov
loope
jno
mov
shl
and
movsb
jge
pop
add
flds
or
pusha
test
mov
fldcw
xchg
and
popa
sbb
mov
rol
adc
push
adc
jge
movsb
testl
imul
adc
sub
movsl
pop
push
rorl
mov
add
mov
testl
xor
ja
mulb
aam
int3
or
mov
repnz
push
jo
aad
pop
adc
jecxz
adc
cmp
push
roll
and
call
push
add
jmp
sub
sub
or
das
cli
pop
push
pop
shlb
loope
inc
dec
or
push
cmp
inc
js
jg
jbe
push
pop
imull
andb
xor
pop
shl
jmp
mov
cmc
repz
jmp
dec
mov
add
sti
sbb
dec
push
out
xchg
push
and
xchg
jno
int
jne
and
sub
xor
dec
pop
xor
int
inc
cmp
or
push
adc
aas
xchg
cmc
mov
or
das
inc
ss
sub
lock
insb
add
divl
add
pop
inc
inc
ja
scas
or
sbb
out
and
mov
add
add
fs
js
inc
shr
push
lcall
mov
push
jmp
add
fcompl
insl
insb
add
adc
add
daa
dec
and
shr
cmp
lret
mov
sub
out
sbb
adc
in
jns
rorb
and
pop
mov
js
or
xchg
addb
or
loope
push
sti
jg
xor
push
push
mov
ja
pop
push
in
mov
popa
or
and
add
xor
mov
shl
push
dec
add
pop
pop
inc
clc
pop
cmp
lods
add
mov
and
xchg
mov
subl
add
insb
dec
push
aas
xchg
mull
or
cmc
dec
into
add
xor
pop
add
popf
xorl
outsb
xor
or
insl
hlt
addb
sub
inc
xchg
push
push
jmp
in
jle
and
cltd
lds
aam
push
jmp
out
sub
or
sub
nop
add
push
sub
lret
scas
cmp
add
inc
mov
xchg
pop
push
dec
adc
in
sbb
sbb
add
into
jns
push
es
jmp
stos
cld
inc
sub
add
push
xor
and
add
sub
inc
adc
cmpsb
fmul
push
add
mov
loop
lds
push
andl
fs
jle
adc
imul
rep
cmpb
pop
ljmp
add
shl
shr
dec
push
adc
pop
outsl
mov
xchg
push
subb
shlb
jb
fistps
pop
jns
repz
ror
aad
out
adc
lods
jbe
xchg
xchg
inc
push
add
pop
push
shl
jl
loopne
mov
add
int
inc
nop
lock
push
mov
and
aad
dec
add
or
push
fs
push
xor
mov
adc
add
pop
es
fwait
xor
out
pusha
xor
daa
cltd
jl
sub
dec
pop
cmp
mov
pop
push
add
jg
mov
das
push
push
inc
cmp
ljmp
add
inc
and
xor
pop
jbe
in
or
or
shlb
mov
ret
daa
xor
pop
xchg
lcall
dec
dec
icebp
adc
iret
dec
pop
stos
test
shll
imul
cmp
push
jmp
add
pop
pop
out
std
int3
cmpsb
and
inc
jno
cmp
sub
add
repnz
dec
add
inc
push
mov
inc
fsubs
xor
ja
inc
out
add
push
and
mov
out
mov
lods
daa
jmp
fimuls
out
pop
sarl
fs
add
cmp
lods
add
pop
push
es
mov
in
inc
xchg
lods
inc
inc
cltd
add
lods
inc
xor
sahf
es
add
xor
inc
jl
mov
or
xchg
aam
adc
sub
popf
add
inc
lods
xor
or
sub
mov
or
xor
add
leave
mov
jno
neg
imul
cli
sub
addb
sti
enter
sbb
adc
ds
add
add
orb
sub
mov
jmp
gs
rolb
mov
jmp
and
jmp
sbb
andnps
mov
test
pop
ds
xor
sub
adc
sub
add
cli
lret
adcl
out
or
jnp
cmp
inc
push
dec
inc
ss
dec
xchg
std
mov
jnp
das
push
sub
dec
adcl
inc
sub
mov
adc
mov
mov
cmp
sbb
cmp
pop
push
or
sbb
or
adc
sbb
pop
push
je
push
push
subb
push
xchg
pop
jnp
jl
movsb
cmpsb
test
shll
js
mov
mov
add
fs
into
arpl
push
fs
xchg
movsl
and
incb
mov
xchg
add
add
inc
jl
and
mov
dec
shl
addb
jmp
ss
jge
push
fistpll
add
pop
pop
jae
push
sub
sub
fldl
roll
xchg
mov
jl
push
mov
bound
jecxz
push
push
out
shl
and
pusha
cmp
push
out
push
aas
subps
mov
push
test
fsubp
pop
dec
scas
cli
mov
mov
adc
sbb
inc
jno
inc
psrld
out
adc
add
bndstx
imul
or
lret
adc
cmp
mov
xchg
adc
rclb
jo
mov
push
movsl
xchg
dec
xchg
mov
jecxz
xchg
push
sub
aad
push
shll
rclb
sbb
push
stc
push
mov
sub
or
jo
push
ss
adc
or
pop
shl
push
push
js
es
pop
or
xchg
rcrl
lret
add
mov
leave
add
dec
xchg
adcb
clc
rorb
iret
lcall
add
dec
jmp
int
and
inc
push
xchg
adc
adc
movsb
push
dec
sbb
and
push
jg
in
jecxz
in
jmp
orb
jo
mov
sub
sub
xchg
clc
repnz
mov
jmp
mov
xor
out
sub
or
mov
ljmp
gs
sahf
or
jno
std
push
add
ret
dec
test
mov
jmp
mov
push
std
popa
push
test
lcall
daa
cmp
mov
pop
push
mov
addr16
ja
sub
jmp
loop
cmp
loop
aaa
bound
addr16
jne
push
add
popa
jnp
cmpsl
push
fs
cmpb
sarl
inc
mov
dec
inc
popa
pop
inc
add
or
daa
cwtl
lods
jmp
pop
cmpsb
cwtl
xor
call
xchg
jno
xchg
mov
pop
xor
pop
jecxz
sub
imull
jmp
pusha
ret
jns
popa
sub
call
or
fwait
jmp
insl
xorl
push
std
das
pop
and
testl
add
cmp
cmp
adc
and
nop
adc
imul
lret
cmp
pop
sub
adc
fistl
mov
or
xor
cmp
xor
dec
int3
pop
push
add
jmp
sbb
or
out
xchg
and
loop
inc
xchg
les
or
roll
sarb
mov
push
add
fsubs
pop
xchg
lds
mov
dec
push
push
add
aaa
pop
jns
inc
sub
nop
push
sub
lds
and
xchg
cmp
data16
inc
pop
adc
jmp
jg
lcall
js
push
pop
mov
push
dec
out
insb
icebp
push
repz
sbb
jae
push
or
mov
mov
push
test
lea
int
push
push
cmp
fs
add
fiaddl
add
pop
test
mov
lcall
push
ljmp
jge
add
sub
lcall
dec
and
jge
movsb
out
adc
gs
jge
or
jmp
add
push
push
sub
add
outsl
push
jmp
push
push
pop
inc
xchg
cmp
lret
push
pop
inc
sub
jmp
mov
add
cmc
push
fbstp
add
into
push
add
roll
xlat
jmp
sub
sbb
add
in
pop
sub
cltd
sahf
pusha
neg
sub
mov
or
jge
cmp
bound
das
sbb
jp
push
and
jecxz
sub
push
add
testb
mov
and
and
addr16
mov
inc
mov
mov
fdiv
adc
or
mov
stos
or
movsb
xor
call
dec
repnz
das
bound
test
dec
sbb
nop
jns
cld
push
pop
dec
push
sub
sub
push
rcl
inc
out
imul
mov
add
jno
add
jno
repz
jnp
pop
sbb
add
or
sti
cmp
mov
cmpsb
rcrb
in
rcrb
mov
test
xchg
add
ret
push
mov
push
adc
jae
outsb
testl
into
into
pop
nop
mov
xor
inc
xchg
and
adc
in
mov
in
mov
adc
jmp
test
fdivr
movsb
mov
xchg
mov
cmp
jmp
orb
icebp
or
push
subb
or
xor
clc
pop
mov
dec
lds
dec
mov
inc
push
inc
out
pop
or
rol
jecxz
add
popa
mov
adc
adc
and
ficoms
rorb
sbb
push
add
pop
and
push
push
and
add
or
mov
roll
pop
shl
push
push
mov
fs
jne
neg
push
subb
imul
pop
dec
adc
movsb
pop
pushf
je
inc
pandn
les
fdivrs
mov
mov
cmp
push
aam
xchg
leave
jo
jmp
into
pop
push
add
test
xor
fistps
or
jo
mov
adcb
sub
call
cmpsb
repz
add
mov
and
lods
in
cwtl
movsl
xchg
push
or
sbb
pop
jmp
add
pop
pop
push
imul
shl
fimull
push
inc
lcall
xchg
or
lods
and
or
test
ret
stc
push
in
sub
dec
fstps
rorb
pop
mov
jmp
insb
aam
pop
rolb
sbb
outsl
dec
in
pop
xchg
adc
pop
push
cltd
adc
or
push
add
or
clc
fildll
sub
cmpsb
and
and
xor
notl
ds
lahf
and
sub
inc
mov
sub
add
push
ud1
dec
sub
sbb
jno
rcrl
mov
out
dec
xchg
rclb
jnp
ljmp
decl
add
xchg
mov
and
push
pop
jbe
ret
dec
mov
aaa
push
lret
lcall
pop
pop
adc
pop
icebp
inc
out
pusha
arpl
testl
jo
or
xchg
insb
lcall
sbb
bswap
call
sbb
loop
add
pop
loope
or
cmpsl
jb
movb
add
aas
jecxz
jnp
push
xor
test
pushf
dec
jmp
movsb
xor
or
pop
ret
cmpsl
xlat
mov
mov
xchg
xor
rorb
dec
rclb
mov
and
adc
neg
fmuls
sub
ja
in
hlt
out
add
jl
and
ja
out
mov
sub
daa
dec
add
add
and
ja
test
rorb
adc
mov
inc
inc
in
add
sub
adc
mov
test
mov
in
lods
pop
add
cmc
dec
push
push
shl
lret
neg
prefetchnta
gs
add
stc
repz
push
cmpb
mov
lret
pop
ja
outsb
shrb
arpl
jle
nop
sahf
or
js
jbe
dec
adc
outsb
outsl
xchg
dec
out
sbb
or
adc
sub
cld
inc
fcoml
sub
aas
loopne
mov
shr
pop
push
andb
pop
nop
mov
addr16
dec
add
push
mov
je
push
imul
push
or
and
cmpl
pop
xor
jmp
pop
push
sub
add
cld
jge
mov
jnp
cmp
movsb
shl
js
pusha
add
outsb
cs
add
in
mov
inc
pop
adc
incb
mov
or
ljmp
incb
and
dec
pop
sbbb
jne
xchg
xchg
sbb
mov
sub
add
das
scas
and
into
adc
push
mov
dec
test
adcl
fcomps
ret
pop
jmp
xchg
sahf
gs
xchg
pop
xchg
pop
mov
add
in
mov
ljmp
inc
sti
adc
nop
ja
mov
mov
addl
xchg
pop
or
daa
lds
pop
in
in
inc
dec
cmp
ret
jbe
pusha
roll
xchg
push
add
add
cli
fcmove
sub
ret
pop
pop
pusha
inc
pop
push
sahf
mov
sub
xchg
dec
pop
pop
mov
sarb
mov
push
cmp
and
pop
outsb
fbstp
and
mov
push
movsb
ss
push
sbb
sbb
push
pop
adc
sub
or
es
push
repz
jle
cmc
lods
inc
repnz
push
cmp
add
dec
rolb
mov
push
or
jns
push
xor
dec
or
xlat
xchg
ret
add
push
or
jmp
icebp
push
add
loopne
pop
sub
sub
outsb
lahf
or
mov
push
and
fiadds
jbe
decb
push
mov
into
icebp
lret
pop
add
jecxz
repz
add
or
sbb
push
or
rolb
sub
add
leave
xchg
or
ds
dec
push
lcall
imul
inc
and
and
std
xor
out
and
fstps
loope
cmp
add
nop
imul
dec
inc
jp
sbb
jmp
mov
call
push
call
mov
add
movzbl
inc
mov
mov
inc
inc
sub
jmp
sahf
xor
adc
and
orl
add
lds
jmp
dec
test
and
pop
push
shrb
push
jmp
pop
pop
lahf
dec
pop
sub
mov
jae
dec
aam
mov
ret
push
pusha
in
into
inc
sub
jmp
push
push
dec
test
sub
mov
pop
push
popa
in
movsb
jl
push
mov
mov
jmp
leave
mulb
ds
or
loope
subb
daa
jge
enter
mov
mov
call
adc
mov
cmpl
int3
mov
jge
push
pop
scas
jnp
and
xchg
addb
dec
sub
mov
xchg
jns
adc
push
or
add
sub
scas
cld
lahf
mov
add
push
jle
icebp
mov
push
push
jns
pop
pusha
aaa
xor
mov
pusha
xor
and
fisubrs
add
in
push
push
xor
and
call
cld
in
pop
test
lods
or
add
or
or
sti
push
push
jmp
pop
add
in
leave
mov
cltd
vprotb
div
push
or
fwait
out
lret
push
push
push
negb
lock
sbb
icebp
shlb
dec
and
divb
pop
and
adc
mov
push
sub
adc
dec
ret
jecxz
pop
aam
adc
cmp
fnstenv
dec
mov
sbb
fistps
sbb
mov
dec
sub
add
ds
mov
xor
shr
jmp
pop
lret
inc
pop
es
imul
sub
xor
ja
pushf
pop
xchg
roll
popa
jp
sbb
call
int3
repz
pop
cmp
in
in
adc
fiadds
adc
add
add
jns
add
fmuls
and
sbb
mov
aam
mov
push
fnstenv
and
sti
aam
ds
push
jmp
frndint
pop
sub
adc
push
movsb
or
add
fwait
iret
subb
std
cmp
shr
or
mov
and
test
cmp
test
into
int3
sub
cmp
cld
fmuls
pushw
xchg
roll
scas
xchg
cmp
sti
and
inc
cmp
inc
xorb
push
aas
lahf
xchg
sahf
ficompl
fbstp
push
test
dec
adc
xor
pushf
jo
les
add
dec
jle
sub
cmc
pop
nop
pusha
or
xchg
sbb
cmpb
js
xor
aad
xorb
and
js
pop
shlb
or
ds
aas
mov
or
mov
lea
push
xor
nop
hlt
lock
xor
jecxz
pop
loop
push
push
sbb
cmpsb
test
add
test
push
inc
not
adc
ss
rolb
push
pop
int3
es
add
subb
xor
cmp
daa
icebp
pop
jg
cmpsb
out
jo
xchg
gs
sbb
aas
adc
jl
nop
xor
pop
inc
repz
js
adc
add
push
dec
add
test
push
scas
sub
sub
add
pop
sub
add
fwait
jmp
push
test
jmp
std
sub
push
sahf
xlat
or
mov
jg
jle
add
jne
daa
mov
aad
adc
mov
outsl
push
sbb
xchg
mov
leave
push
loopne
mov
je
int
sub
push
jmp
aam
inc
fcoms
imul
nop
addr16
jg
ds
push
mov
push
fmuls
xchg
rolb
sbb
jmp
call
popf
sub
mov
adc
or
fs
in
ret
int3
push
dec
add
mov
jecxz
add
push
push
pop
and
repnz
xor
shl
stos
or
inc
add
lahf
mov
cmp
pop
in
sbb
mov
lds
or
dec
cwtl
int
inc
mov
or
pop
push
jmp
dec
and
add
mov
adc
inc
inc
out
adc
outsl
les
mov
fists
movsl
dec
adc
mov
pop
add
xor
xor
mov
add
pop
push
orb
xchg
out
in
testl
in
imul
mov
enter
sbb
xchg
adc
js
mov
sub
test
pop
push
push
push
adc
or
neg
add
stos
pop
test
mov
add
push
jne
popa
adcl
and
add
add
pop
fcompl
add
xchg
inc
add
add
add
mov
dec
xor
rclb
push
cltd
lret
ret
jge
dec
cmp
and
mov
sahf
jmp
leave
add
or
insl
push
repz
add
add
test
ja
movsb
loope
mov
xchg
pop
xchg
cmp
push
adc
inc
push
mov
sub
ds
push
vaddsubpd
dec
jmp
in
cli
inc
jb
push
sub
add
push
inc
sar
xor
mov
jmp
dec
inc
and
ror
push
and
mov
sub
in
sub
orl
call
adcl
imul
mov
add
sbbl
mov
xor
ljmp
add
cmp
dec
xchg
pusha
jmp
cltd
mov
or
push
int3
mov
fcomi
xor
sbb
jmp
fstp
inc
ljmp
or
js
sub
loop
add
add
pop
pop
sub
dec
mov
and
jle
pop
shl
xchg
loop
mov
sub
dec
adc
flds
test
and
arpl
out
cld
sbb
add
and
sub
fs
xchg
push
mov
bswap
jbe
inc
out
pop
pop
pop
shr
mov
mov
dec
mov
adc
sub
sbb
iret
pop
cmp
mov
jns
cmp
pop
leave
mov
sbb
aas
adc
movsl
and
jno
lret
imul
xor
xor
lret
aas
fs
jae
sbb
std
jns
mov
mov
imul
inc
dec
or
jo
loopne
push
sahf
sbbb
ljmp
aam
mov
xor
loopne
mov
dec
jae
add
mov
rorl
rcrl
leave
shlb
xchg
mov
loope
sbb
out
idivb
mull
mov
push
xchg
sbb
jmp
out
out
sub
ja
loopne
daa
ja
fs
int
pop
sub
or
xor
outsb
pusha
adc
notb
loop
push
imul
xchg
cltd
jno
xchg
addr16
imul
xchg
addb
pop
and
or
jmp
das
shl
sbbl
xchg
mov
sbb
dec
popa
rcrb
mov
sahf
dec
hlt
movsl
movsl
shll
aas
mov
adc
js
pop
cltd
cmp
mov
js
cmc
mov
aam
popf
or
mov
add
xor
jmp
dec
mov
aam
mov
mov
clc
mov
insl
not
cwtl
int3
sbb
pop
or
adcl
clc
and
mov
ret
pop
pop
pop
or
aam
push
adc
push
addb
mov
out
les
and
mov
dec
cmp
xchg
push
js
jmp
bound
cmp
pop
in
loop
or
mov
dec
call
pop
mov
js
shll
push
mov
bound
dec
pusha
sub
lcall
mov
out
mov
mov
inc
pop
mov
aam
and
rcrl
dec
and
in
cmp
add
lret
xchg
jg
loop
jp
out
or
js
jmp
int
cmpsl
mov
rorb
and
add
push
pop
pop
xor
mov
insb
xchg
mov
mov
call
ret
add
insb
xor
push
insb
fs
mov
imul
stc
sub
push
in
in
jmp
push
pop
frstor
sub
add
icebp
pop
add
push
or
pop
or
jmp
pop
mov
hlt
sub
xchg
outsb
fs
sub
inc
movl
add
je
xor
or
xor
add
lahf
sbb
jg
enter
sub
dec
sub
and
mov
and
testl
push
jg
and
xor
rol
cltd
or
push
out
test
imul
or
cld
xor
jl
mov
jl
jg
pop
and
pop
sbb
sbbl
add
xor
sub
popf
or
cmp
mov
adc
negl
clc
mov
aaa
dec
or
push
adc
jmp
inc
rolb
adc
adc
pop
pop
or
add
jbe
pop
or
sbb
aam
add
pop
sub
cli
mov
sub
es
jmp
inc
push
add
xchg
push
sti
cmpsl
cld
adc
mov
jmp
aad
int
shr
inc
rcll
and
mov
test
xor
fwait
stos
sbb
inc
push
mov
add
pop
jne
or
sbb
inc
jg
mov
pop
in
adcl
push
fsubr
out
xor
loope
das
mov
xlat
pop
fldcw
mov
jno
loope
je
lahf
sbb
daa
sub
adc
xchg
lret
adc
jno,pt
nop
repz
or
cs
mov
leave
sub
loop
dec
aam
pop
add
push
pop
popa
cmc
decb
push
mov
xor
add
jmp
cmp
pushf
aaa
mov
xchg
lds
mov
outsl
add
sarl
sub
arpl
xor
push
xchg
cmp
and
ret
mov
jmp
into
jae
jg
push
mov
test
push
out
fs
bnd
and
push
add
add
out
mov
push
add
pop
jle
add
orl
xor
addl
insl
mov
int
bound
or
movsb
jge
out
xchg
out
inc
adc
jmp
and
dec
pop
cs
dec
cltd
sbb
shlb
or
sub
cmp
add
pop
jl
xlat
ret
shll
popf
inc
or
shl
ja
push
push
imul
inc
pop
fsubrs
mov
lcall
out
jl
dec
inc
and
in
mov
ficoml
sbb
xchg
xchg
pop
mov
jbe
xor
xor
or
jg
data16
add
sub
mov
mov
sti
add
in
cli
cmp
or
xchg
push
and
lock
jmp
xchg
pop
sti
cmp
jge
xchg
mov
push
pop
push
mov
push
push
inc
out
mov
and
jnp
addb
es
pop
dec
pop
jle
jmp
rolb
and
call
mov
cs
andl
out
testb
pop
rcl
dec
inc
ljmp
mov
dec
sub
xor
loope
incb
cmp
push
jmp
dec
inc
cwtl
add
xorb
aam
or
rolb
jp
mov
stos
das
sbb
xchg
incb
mov
aaa
lahf
addb
cmp
sub
push
xor
add
test
popa
pop
and
cwtl
psadbw
pinsrw
cmpsb
sbb
or
stos
mov
in
mov
push
xchg
xor
add
pop
lret
cmpl
loop
repnz
orl
js
sbb
dec
mov
sbb
pop
push
and
mov
sarb
push
test
pop
test
push
jmp
dec
nop
test
movsl
pop
aas
xchg
cmp
push
add
dec
mov
pop
lods
and
pushf
inc
or
xor
sbb
sub
stc
stc
mov
roll
add
sub
jle
push
mov
sbb
and
movsb
movsb
xchg
lcall
jb
push
lea
imul
dec
jo
add
pop
push
mov
shr
jmp
test
cmc
jge
push
int
jmp
lock
cmp
out
dec
notb
push
rorl
das
ss
or
lret
xchg
imul
incb
sub
int3
mov
pop
xchg
push
cmovae
pop
clc
push
inc
jmp
xchg
sbb
jne
push
xor
test
inc
aad
std
pop
mov
push
lcall
push
add
aas
jmp
pop
add
in
enter
movsl
inc
mov
neg
pusha
cwtl
dec
out
ds
jmp
popf
andb
add
dec
lret
cmpsb
ret
test
inc
or
mov
push
mov
jmp
mov
lock
push
shlb
sbbl
ficomps
pop
adc
stos
and
mov
inc
inc
mov
fdivrs
jmp
cmp
or
shlb
push
shll
std
dec
xor
dec
adc
sbb
push
or
pop
das
xchg
adc
jge
dec
jne
int
lahf
or
lret
or
and
call
jp
jecxz
int3
xchg
shll
mov
sbbb
pop
or
add
mov
imul
cltd
cmp
push
test
jmp
add
and
jp
xchg
lcall
pusha
jg
push
je
or
sub
cwtl
movsb
mov
pusha
add
fcmovnbe
add
mov
mov
jmp
inc
pop
xchg
rclb
sahf
test
enter
xchg
insl
or
in
inc
hlt
aaa
ljmp
sbb
xor
push
push
aas
xorl
mov
leave
jnp
mov
icebp
xor
cmpsb
lcall
pop
push
jno
icebp
stos
xor
cwtl
cmp
rcrb
inc
lret
xchg
scas
mull
jmp
es
push
mov
jmp
mov
insb
movsl
push
pop
outsl
xchg
inc
inc
mov
fildl
fisttps
test
mov
cld
lods
mov
mov
pop
movsb
lcall
add
rclb
pop
or
pop
rep
ss
and
mov
faddl
sub
aam
jne
std
pextrw
adc
pop
jg
inc
or
sub
push
add
and
das
add
push
add
es
sbb
add
cmpsl
std
add
pop
sub
mov
mov
lret
leave
fisubs
fdivl
pop
cmp
rclb
mov
jecxz
imul
mov
les
add
mov
sub
pop
hlt
mov
je
in
adc
pop
mov
popf
mov
pushf
leave
xor
and
add
sub
hlt
inc
adc
push
sub
pop
stc
faddl
pop
nop
fisubl
push
add
mov
pushf
pop
mov
mov
pop
lahf
push
daa
mov
insb
pop
sub
mov
rcl
sub
or
enter
pop
les
movsb
pop
push
inc
mov
push
decb
and
icebp
add
and
loope
mov
mov
nop
scas
add
mov
lahf
mov
jnp
pop
pushl
pop
inc
xlat
daa
int3
rcrl
xchg
cmpsb
xchg
inc
std
cwtl
and
mov
aaa
fucom
cmpsb
pushf
jno
xchg
sub
repz
js
cmp
ja
sub
repnz
mov
push
add
and
popa
call
in
lcall
push
cmp
testw
sub
mov
xor
jge
sub
insl
jge,pn
dec
popa
pop
or
jle
mov
das
sub
out
es
pop
add
add
xchg
rorl
push
gs
xor
jmp
jns
cmpb
inc
sub
inc
or
adc
mov
jmp
xor
xor
mov
and
sub
addr16
popf
cmpsl
xlat
xlat
lahf
lock
pop
mov
popf
clc
fbld
fs
xor
mov
dec
mov
mov
dec
dec
je
xor
push
stc
inc
mov
xor
cwtl
sbb
push
mov
adc
inc
push
outsb
loope
outsb
sub
or
insb
adc
popa
jae
xor
ret
cmp
cmp
shll
xor
imul
and
mull
push
dec
mov
out
mov
add
mov
mov
dec
sub
and
pop
test
vandnpd
scas
aas
les
jecxz
ja
sti
pusha
add
out
add
ret
push
insb
dec
mov
pop
push
push
xchg
pop
mov
addl
sub
sti
mov
andl
inc
inc
sub
gs
sub
in
roll
push
jmp
add
and
and
mov
jmp
adc
out
fs
inc
fcoml
xor
jae
rol
cwtl
dec
xor
in
cmpsl
sti
pop
stos
bound
aaa
xchg
lock
sbb
cmpsl
ljmp
pop
jmp
fsubrs
sbb
sub
push
xor
cmpsl
sarb
inc
mov
std
mov
dec
in
bound
jb
shl
out
xchg
pop
sub
lods
mov
imul
enter
aas
popf
daa
movaps
ljmp
rcrb
xchg
cmc
out
cmp
add
xchg
and
lods
flds
adc
pop
mov
pop
fistpl
cmpsb
mov
shrl
mov
jmp
pop
push
movsl
sahf
mov
xchg
and
into
push
cmpsb
sbb
insb
pop
or
addb
dec
add
jmp
mov
push
cmp
sub
jmp
out
mov
cwtl
dec
pushf
dec
pusha
xchg
sbb
lea
into
mov
or
pop
fsts
xchg
cmp
mulb
mov
or
mov
sbb
cmp
add
jp
orb
jno
iret
cli
lods
out
mov
mov
rolb
push
cmp
loope
dec
jo
add
or
push
sub
pcmpeqw
jmp
sbb
jns
sbb
and
sub
cmp
sbb
jg
adc
and
cwtl
mov
cmp
orps
cmpsb
mov
jmp
int
adc
sarb
aas
loopne
dec
add
bnd
in
shlb
mov
popa
or
shlb
mov
jne
adc
cs
ss
xchg
add
outsb
pop
mov
mov
loop
fs
add
cmc
push
inc
and
xlat
test
fwait
pop
popf
ret
add
xchg
dec
jnp
and
into
mov
es
push
dec
jecxz
lock
mov
xor
inc
or
adc
dec
daa
mov
rolb
pusha
adc
outsl
push
test
movsl
imul
jno
push
pop
sarb
imul
push
aaa
sbb
inc
push
scas
add
mov
xor
adc
add
cmp
ret
aas
jae
bound
push
mov
je
cmp
clc
cltd
push
sub
add
xlat
insl
add
mov
ss
ret
push
or
jle
sbb
cmpsl
in
add
pusha
sbb
jbe
push
add
ds
mov
cmp
scas
ret
je
adc
push
dec
pop
mov
addr16
stc
adc
imul
add
daa
je
jmp
cmp
pop
loop
rol
test
jmp
test
and
les
xchg
ljmp
insb
mov
sti
out
fisttpll
rolb
jmp
mov
jae
xchg
push
loop
mov
jb
and
add
push
adc
aam
pop
dec
movsl
inc
adc
pop
mov
popf
adc
mov
fisttpl
xor
sarb
movsl
add
mov
push
pop
adc
fsts
jae
test
sub
push
add
outsb
inc
jmp
pop
inc
test
fstl
not
dec
push
jmp
popf
add
push
push
and
adc
adc
lock
scas
mov
fstpl
sbbl
dec
push
out
call
mov
pusha
pop
loopne
cmc
adc
mov
pop
leave
sbb
fisttpll
mov
inc
jnp
out
fcomi
or
push
mov
xorl
test
jg
cmp
adc
cmp
hlt
sahf
and
in
jmp
mov
pushf
test
in
mov
cmp
dec
add
pop
xor
mov
push
adc
xchg
xor
mov
mov
ds
xor
sub
jecxz
push
sub
sub
imul
cs
pop
ss
neg
loop
xchg
jge
or
arpl
icebp
push
imul
cmp
popa
repnz
jnp
add
std
daa
and
xlat
xorl
jl
test
mov
adc
add
dec
cwtl
icebp
or
cmp
add
in
push
jmp
sbb
or
xchg
add
mov
sbb
cmp
test
stc
lret
cmpsl
adc
push
lahf
mov
sub
lahf
pusha
or
movsb
out
es
dec
push
leave
mov
sub
cmp
push
jns
daa
push
daa
adc
fsub
cmp
jae
xlat
das
or
inc
lods
test
and
push
inc
inc
xor
inc
inc
or
cmp
and
mov
and
rol
push
cmc
push
sub
add
popf
mov
jg
mov
adc
loope
cmp
pop
cvtps2pi
cmp
aad
test
push
out
movsb
mov
call
pop
pop
lret
xchg
call
jg
push
adc
push
lret
xchg
dec
xchg
loopne,pn
fldl
es
push
rolb
out
movsl
sbb
push
or
push
pop
adc
negl
jle
add
addb
pop
leave
cltd
movsb
add
push
adc
inc
jp
das
out
test
add
and
jmp
shrb
stos
ret
sub
sub
iret
pop
and
and
orb
xor
inc
or
cmp
in
push
add
cli
push
jbe
mov
jl
adc
xor
jge
sarl
xchg
daa
xchg
mov
outsl
leave
test
cmp
cmpsb
push
lods
loope
in
enter
jp
mov
and
pop
push
add
jne
ret
pop
jbe
mov
sahf
sbb
inc
lcall
cwtl
out
jge
pop
pop
mov
testb
jmp
adc
dec
cltd
jg
push
fildll
ja
xor
sub
not
xor
pop
dec
mov
fdivr
lea
pop
int
jo
or
jnp
fimull
or
or
mov
pop
add
dec
dec
mov
addr16
mov
mov
enter
sub
push
pop
arpl
xchg
int
xor
cld
adc
or
lret
add
sbbb
add
push
mov
or
mov
not
xor
ret
mov
cmpsb
mov
push
mov
sbb
xor
or
jmp
mov
xchg
mov
xor
call
sub
jecxz
pop
push
add
cmp
add
fistpl
in
stos
and
bts
pop
xchg
ja
sub
sbb
incb
enter
sbb
dec
mov
aam
push
jnp
xor
fs
gs
dec
insb
push
cld
jno
push
inc
jmp
cli
gs
inc
push
jge
mov
push
push
cmpb
test
xor
sub
jg
ss
mov
mov
mov
jg
mov
loop
and
js
add
int
pop
dec
and
and
inc
pop
push
dec
push
testb
je
push
repnz
add
std
push
mov
cvtps2pi
pusha
add
xor
dec
int
jmp
and
inc
mov
mov
fcomps
testb
dec
iret
add
shrl
int
xor
dec
orb
fdivrs
cs
push
push
inc
pop
not
jmp
push
fidivrs
sub
clc
sbb
jnp
cltd
mov
fsubl
add
sbb
scas
mov
test
lar
jbe
add
pop
dec
jmp
movsb
adc
lods
pop
mov
ret
xchg
repnz
sub
cltd
repnz
cmp
loopne
cmp
add
jmp
mov
test
pop
pop
mov
fsts
mov
add
pop
sbb
bnd
mov
mov
jae
ds
and
call
xlat
xor
pop
and
sbb
fs
das
or
xchg
repnz
cmp
dec
push
mov
push
jo
pop
mov
js
cltd
add
idiv
add
cmp
fimuls
subb
movsl
mov
sbb
jmp
sub
jb
xchg
dec
jmp
or
in
and
inc
stc
add
dec
movsl
push
mov
sub
sbb
test
cmc
inc
or
jl
into
mov
inc
sbb
mov
inc
sarl
pop
mov
dec
jmp
rorb
mov
xlat
pop
xor
inc
push
ljmp
notl
mov
mov
add
fldcw
fcmovb
clc
push
mov
sbb
jmp
fwait
adc
fildll
push
sub
out
mov
clc
test
sbb
lahf
pop
mov
dec
test
mov
fs
fbstp
mov
addl
and
jecxz
es
pop
cmp
movsb
add
leave
mov
insb
inc
iret
ja
cmp
fcom
and
ret
pusha
sub
in
nop
out
cmp
and
push
adc
fmuls
pavgw
scas
jbe
gs
cmp
lea
xorl
jbe
and
add
mov
sub
or
jb
push
in
sub
lret
outsl
pop
dec
xor
push
dec
pop
sbb
lock
js
mov
mov
jb
jg
aas
jno
js
adc
shl
pop
sub
pop
or
jmp
aas
adc
cltd
pop
mov
shr
jb
jbe
sub
push
pop
int3
ljmp
mov
push
inc
xchg
jnp
push
ret
rcll
outsb
xor
repnz
orb
jmp
lret
xchg
inc
xor
adc
add
pop
mov
push
outsl
add
lods
mov
xchg
adc
mov
inc
ljmp
cmc
shrb
xchg
test
mov
mov
xchg
mov
sti
bound
testl
fiadds
adc
dec
in
add
notl
jne
lds
mov
dec
mov
addr16
jnp
mov
mov
push
movsl
inc
pop
xor
mov
jl
jle
pxor
mov
and
push
aaa
sbb
mov
jmp
dec
add
mov
jb
ljmp
push
jle
popf
push
jmp
pop
dec
sbb
add
fdivr
lods
pop
inc
cmp
loope
mov
push
cltd
and
xor
pop
arpl
cmc
dec
and
push
lods
jmp
pop
or
inc
inc
leave
pusha
or
imul
push
or
enter
daa
jmp
inc
push
xor
pop
pop
sbb
jl
aas
out
aaa
mov
sub
mov
mov
jg
adc
lea
add
cli
mov
in
inc
mov
push
call
sbb
rorl
xchg
scas
mov
push
push
lea
jbe
add
int
orb
dec
outsb
mov
movsb
sbb
stos
leave
imul
xor
mov
mov
push
inc
ds
shll
adc
popf
xchg
jg
mov
movsl
adc
arpl
mov
not
inc
jbe
add
sub
mov
dec
jle
mov
mov
adc
rcl
jle
jmp
add
push
mov
mov
mov
push
dec
sub
sub
inc
ret
popa
dec
jge
cli
pop
mov
loope
pop
pop
push
adc
repz
popf
push
inc
lods
rorb
xor
bnd
mov
push
lds
mov
dec
loopne
add
mov
andb
push
movsb
jg
xor
leave
or
into
fildll
or
jl
mov
fadds
mov
mov
push
and
in
or
fmul
es
inc
sbb
pop
fwait
adcb
inc
adc
pusha
call
ds
shlb
inc
or
into
ret
nop
xchg
pusha
pop
and
and
cmp
xor
outsb
in
dec
add
outsl
mov
push
mov
sub
adc
ret
or
pop
inc
or
pop
sbb
inc
lods
mov
push
and
adc
bound
ds
nop
lret
movsl
shr
mov
aad
ss
clc
testl
dec
add
lds
movsb
out
lods
pop
cwtl
mov
loopne
xchg
push
or
pop
pop
cmp
imul
add
xor
pop
pushf
insb
dec
rolb
lods
or
sub
mov
cli
movsb
dec
out
pop
test
mov
aas
xor
add
mov
sahf
jmp
cltd
daa
mov
call
cld
fs
out
pusha
nop
pop
loope
dec
stc
or
ja
jmp
xor
pop
push
mov
push
xchg
fistl
pop
jnp
push
pop
sub
loope
push
and
or
xchg
sbb
loop
das
push
sub
or
xchg
inc
out
pop
push
pushw
test
fwait
inc
je
in
movsb
mov
insb
mov
add
loop
imul
jmp
call
imul
mov
jecxz
popf
movsl
outsb
dec
sub
push
sbb
xchg
pop
mov
int3
cmp
sub
and
popa
jmp
xchg
mov
push
dec
loopne
test
mov
cwtl
stc
lcall
adc
inc
ret
jmp
data16
out
aas
xor
aaa
idivb
push
push
adcl
or
jo
rol
cmp
in
push
pop
push
sbb
push
push
push
je
scas
sbb
int
pop
push
fcmovu
add
jg
mov
push
lds
andl
push
mov
add
orb
lahf
ficoml
pop
outsb
add
cwtl
lcall
call
add
ljmp
cmp
js
push
js
pop
and
pop
sbb
and
je
sbb
fidivl
or
and
sbb
xchg
scas
add
addb
mov
lret
fldcw
xchg
in
and
loope
pop
adc
les
repnz
inc
sub
sbb
rcrb
jmp
and
push
pop
add
movsl
add
sti
out
sbb
mov
cmp
pop
cmp
lods
jmp
add
not
xchg
xor
popf
or
inc
dec
sub
inc
popf
mov
stos
mov
push
pop
paddq
push
pop
mov
sub
aaa
xor
add
dec
push
jmp
adc
pop
shll
cmpsl
and
push
jl
cmp
movsl
mov
push
jbe
pop
rorb
fsubrs
lock
fisttps
jmp
rcll
mov
jmp
std
mov
ret
push
icebp
xor
mov
adc
cwtl
mov
jle
test
pop
mov
out
push
push
jle
pop
stc
add
mov
pop
out
inc
fs
pop
or
add
mov
jmp
mov
rolb
jmp
andb
lds
mov
insl
xor
push
adc
jecxz
enter
es
jne
push
jecxz
dec
bndldx
int
std
adc
pop
jo
pop
pop
mov
mov
push
mov
or
imul
or
jmp
testl
das
jmp
mov
hlt
jp
pop
mov
negb
and
push
repz
pop
es
sbb
jbe
sbb
loope
jmp
stos
or
push
add
mov
xlat
cld
cmp
imul
stos
push
stos
or
cmp
jne
mov
add
test
cmp
sar
jbe
daa
enter
mov
shll
mov
push
mov
sbb
sub
mov
dec
adc
add
cmc
cmp
inc
shr
les
lahf
adc
cmp
or
jns
or
add
xor
lahf
or
cmpps
cmp
mov
adc
mov
push
jb
or
std
lea
push
push
inc
pop
ja
lcall
pop
test
add
or
xchg
and
push
dec
jbe
or
pop
xchg
jne
push
rorl
push
push
mov
add
pop
xor
mov
xchg
push
push
xor
and
push
daa
pop
jg
out
dec
dec
xchg
ror
or
icebp
and
outsb
push
push
pop
dec
rorb
jbe
lret
imul
xor
add
and
jle
push
jecxz
push
ret
lret
cmp
or
push
icebp
jo
sub
lock
add
push
sub
sub
add
pop
push
push
pop
push
push
loopne
pop
call
shl
test
jns,pt
mov
jmp
imul
or
pop
mov
mov
pop
movsl
add
pushf
js
lahf
gs
adc
jmp
xorl
mov
lds
nop
jo
push
test
push
hlt
inc
pop
sub
popf
call
je
jmp
pop
out
iret
or
call
or
pop
call
push
rcll
or
mov
jge
push
mov
mov
out
mov
mov
hlt
or
adc
push
pop
repz
mov
mov
cmp
and
mov
mov
rorl
in
mov
push
inc
and
push
neg
or
pop
xor
stc
pop
dec
imul
jb
shl
clc
sub
test
push
dec
sub
fidivrl
or
add
jp
pop
add
pop
jnp
lock
jmp
xchg
das
dec
in
and
das
enter
adc
add
das
ret
inc
daa
pop
cmp
test
test
sub
movsl
data16
mov
sbb
and
gs
gs
xor
push
faddl
shrl
es
and
stc
inc
fiadds
addb
add
inc
pushf
insl
lds
jno
aam
subb
int
jne
xchg
fists
jp
push
leave
sub
adc
ljmp
add
addr16
jmp
push
xchg
cld
sub
leave
shll
adc
dec
dec
and
add
or
push
adc
jo
lds
mov
add
add
fildll
sbb
int3
loop
add
ds
fidivl
xchg
and
imul
ret
and
or
sbb
inc
cmp
pop
sahf
rcll
jmp
test
adc
inc
xchg
or
or
dec
xor
cmc
mov
mov
pop
push
push
cld
or
mov
mov
or
bound
or
int3
insb
pop
add
out
cmp
comiss
lahf
mov
pop
in
add
mov
popf
mov
fildl
mov
add
test
test
push
jne
in
ljmp
sbb
or
cmp
dec
mov
or
xor
inc
movsb
push
adc
ret
ds
and
push
adc
sbb
lret
or
es
sub
cwtl
jg
adc
inc
or
pop
adc
fadds
sub
mov
icebp
into
mov
mov
inc
outsl
jb
pop
repnz
lahf
cmp
or
jmp
fadds
ret
jmp
jmp
ds
push
orb
adc
jo,pn
fs
pop
mov
stos
or
sub
rcrb
sarb
add
jp
lcall
sti
dec
test
fcoml
xchg
push
lods
mov
mov
test
pop
fisubl
outsl
add
inc
adcb
data16
popa
or
pop
ljmp
jmp
and
sub
lret
lock
mov
cs
lods
xor
js
call
push
sub
add
fnsave
fst
loop
jo
xchg
add
jmp
add
int
mov
roll
inc
pop
shr
repz
loopne
clc
and
in
mov
push
mov
stc
push
pop
mov
mov
add
jle
and
repnz
xchg
cli
xor
addb
jo
ret
call
test
jmp
or
pop
cmp
aam
pop
or
jnp
imul
add
ss
in
cmp
adc
jne
xchg
cltd
leave
sahf
testl
sbb
sub
loope
gs
jae
push
dec
test
adc
mov
inc
xor
mulb
push
inc
mov
xchg
jmp
or
add
out
push
sti
repnz
and
jmp
out
scas
sti
aad
push
pop
rorl
scas
outsl
and
dec
or
sbb
pop
inc
rcrl
test
cmp
sbb
aam
ret
jmp
push
push
pop
pop
dec
jno
out
mov
dec
fnstcw
sub
push
jle
jnp
mov
add
mov
xor
in
ret
rdpmc
mov
outsb
xchg
std
sbb
ret
cmp
push
into
sub
mov
aas
xchg
inc
loope
add
fdivp
mov
mov
shl
add
aas
push
mov
sbb
fstpt
jl
push
in
subb
jecxz
pop
incl
arpl
jmp
xchg
addb
pop
mov
aad
xor
jmp
inc
mov
lret
xor
pusha
popa
or
and
dec
sub
nop
cmpsb
test
jnp
jnp
dec
or
movl
jg
dec
shrl
add
pop
sub
mov
pop
add
sbb
mov
mov
jmp
lret
js
cmpsl
pop
push
test
mov
dec
push
lahf
jmp
add
ss
out
or
mov
add
inc
mov
push
popf
fnstenv
shrl
add
sbb
aaa
mov
divl
xor
or
and
jb
pop
adc
mov
push
sahf
jge
xor
rorl
xor
jo
pop
leave
jl
pop
push
jmp
pop
or
pop
hlt
sub
loopne
sub
jae
mov
fwait
jecxz
jmp
push
push
push
push
pop
add
sub
jmp
fistps
mov
out
sub
cwtl
xchg
das
mov
inc
adc
pop
push
shl
adc
dec
bound
adc
pop
pop
sbb
inc
notl
lea
and
scas
adc
pop
mov
fiadds
cmp
push
mov
rol
adc
add
lock
jmp
push
xchg
out
jmp
shll
xor
mov
outsl
pop
aad
in
jmp
imul
rcrb
add
mov
and
and
add
push
sbb
add
mov
add
adcb
mov
and
fs
das
int
inc
pop
lods
jnp
mov
mov
xlat
mov
test
les
cld
mov
mov
neg
xor
inc
and
or
popf
aam
adc
xchg
out
mov
add
xlat
pop
push
mov
and
jge
shrb
jmp
cmp
and
add
hlt
cld
and
sar
pop
push
leave
sbb
adcl
aam
fldenv
add
cwtl
or
in
movsb
mov
fistpl
sub
inc
mov
adc
out
or
dec
call
cmp
adc
inc
icebp
repnz
repnz
movsl
push
or
mov
mov
popa
test
lock
or
imul
fcomip
mov
loopne
and
pop
push
outsl
jmp
lahf
push
add
mov
and
add
ds
pop
push
loop
pushf
enter
sub
and
pop
or
rorl
cmp
sub
jae
js
add
and
out
cwtl
ss
das
sub
lds
dec
sub
out
pop
test
or
or
jmp
sbb
push
subb
inc
inc
cli
mov
mov
and
cmp
inc
adc
js
adc
jl
mov
pop
mov
or
pop
sbb
mov
mov
push
mov
inc
add
lods
or
mov
sbb
test
and
addl
cmp
adc
ret
add
add
xor
jmp
mov
add
mov
xor
add
sbb
rolb
and
mov
in
or
pop
test
jbe
xchg
add
push
mov
adc
sbb
fwait
jmp
sbb
arpl
outsl
sub
pop
add
mov
dec
in
adc
inc
loopne
arpl
push
push
pusha
add
cmp
pop
xchg
outsb
js
mov
inc
lods
cmc
and
mov
aad
jecxz
aas
push
dec
dec
mov
or
rorb
popf
outsl
popa
adc
cs
les
int
es
jbe
add
push
jl
push
fmull
jge
leave
ret
sub
enter
pop
sub
aad
xor
fs
or
add
shrd
xor
xchg
push
and
push
lds
in
in
dec
cld
and
das
mov
lar
aam
cltd
cs
mov
or
xchg
push
pop
cltd
popf
sub
xchg
mov
or
or
sbb
cli
dec
sub
xor
dec
not
testb
ficoml
push
pop
sub
push
data16
sub
loopne
push
pop
dec
imul
push
movsl
adc
cmpsb
dec
insb
xchg
enter
pop
dec
fistps
inc
inc
xorl
push
scas
mov
jb
shlb
pop
push
inc
std
jg
out
out
fnstsw
adcb
das
jmp
mov
imul
mov
or
in
cmc
push
popa
popf
ret
jmp
mov
push
movl
cs
cli
xchg
cmp
xchg
inc
daa
and
lret
xchg
dec
test
pop
mov
push
jb
mov
iret
adc
push
lret
or
adc
push
jg
mov
pop
adc
inc
mov
jns
inc
adc
not
or
cwtl
xor
cmp
push
dec
clc
call
clc
movsl
test
fdivs
sbb
push
jp
inc
jmp
sbb
inc
pop
push
jl
movhps
and
add
xor
pop
je
push
push
test
std
pop
call
mov
push
mov
mov
sbb
psubsw
test
and
ds
mov
inc
insb
pop
jmp
push
leave
dec
push
lods
cltd
nop
mov
mov
pop
imul
bound
cmc
inc
push
mov
jo
xchg
out
test
test
or
sbb
inc
lea
sbb
add
call
mov
or
mov
push
xchg
or
push
shlb
shr
mov
mov
dec
hlt
in
mov
ljmp
adc
jg
sbb
cmp
sbb
lods
es
mov
jmp
cmp
lahf
push
sub
sub
push
aaa
dec
adc
jb
mov
idivl
testl
ret
int
jl
xchg
xchg
lea
movsl
jl
daa
idivb
and
mov
mov
jmp
add
and
add
pushf
and
mov
fdiv
test
push
mov
inc
stc
adc
nop
outsb
stos
pop
aad
testl
xor
in
in
push
ds
adc
iret
rorb
push
or
sub
jmp
or
cmp
arpl
push
xchg
adc
scas
xor
xor
xchg
leave
xchg
inc
icebp
mov
movsl
jb
shlb
xor
and
mov
rcll
imul
andb
addr16
inc
call
and
clc
insb
and
mov
or
and
inc
lret
bound
pop
cmp
xor
xchg
sub
or
enter
mov
cwtl
or
aad
push
ret
outsb
inc
adc
in
dec
and
xor
sub
enter
add
ret
test
jmp
test
xchg
dec
and
jae
push
mov
pop
aam
gs
xlat
cmp
shll
aad
bound
mov
xor
push
inc
push
stc
adc
add
test
xchg
lds
inc
or
shlb
dec
push
add
sub
adc
sub
dec
push
mov
add
mov
adc
inc
add
and
pop
and
gs
add
jno
or
insl
inc
mov
dec
and
ret
jne
ja
xor
adc
aam
aad
iret
ret
sub
cwtl
xor
or
sbb
lock
or
dec
gs
pop
adc
int
adcb
mov
fs
cmp
or
mov
mov
jp
popl
pop
dec
mov
dec
add
dec
arpl
mov
icebp
pop
dec
jl
pop
cltd
loope
cmp
imull
push
pcmpgtw
and
and
movups
jg
stc
or
jns
or
fs
sub
pushf
cli
xchg
inc
lret
ja
fnstcw
xchg
jne
jne
or
jp
dec
or
pop
negl
pop
add
lods
add
jecxz
adc
pop
rolb
xor
mov
loop
mov
cmpb
out
cwtl
scas
in
jmp
loop
shll
popf
cmpb
mov
adc
roll
loopne
pop
scas
pcmpgtd
mov
push
leave
lea
iret
or
push
push
out
dec
mov
jb
repnz
dec
jno
das
hlt
fnstcw
xchg
lds
xchg
arpl
xchg
daa
sbb
std
outsb
inc
sub
push
xchg
adc
and
mov
mov
jl
or
aad
xchg
cmp
sahf
ja
push
push
jecxz
in
mov
jae
and
xchg
xor
outsl
or
add
sub
sahf
test
lahf
jnp
xor
fsubp
fcomps
bnd
mov
jmp
test
mov
sti
jg
sub
cld
dec
mov
pop
mov
sub
jge
xor
in
xchg
cmpsb
loope
sub
fmulp
jge
cli
and
cmp
fs
arpl
cmp
dec
xor
fnstcw
xor
mov
cmp
or
in
inc
push
cmp
cmpsb
pop
lods
lock
pop
xchg
mov
mov
or
inc
shrl
cmpl
xor
xorb
push
dec
loop
mov
aam
daa
mov
pop
xchg
jns
cwtl
xor
imull
mov
jo
loop
add
fldenv
aaa
shl
jns
fs
pop
outsl
add
xchg
ljmp
iret
dec
and
in
jo
aad
insb
je
sub
popf
call
and
pop
addr16
dec
stos
mov
sbbl
add
sub
pop
mov
or
iret
loopne
adc
and
xor
popa
scas
jp
push
add
rorb
pop
addr16
shll
mov
sub
insl
sub
add
and
test
shlb
popl
add
add
inc
dec
adc
cli
sub
dec
jne
inc
adc
and
mov
mov
out
inc
push
or
push
jns
jnp
into
mov
cmp
cmp
dec
dec
cmpsb
daa
mov
insb
imul
push
jmp
rcrl
or
das
int
loopne
lods
jl
cmpsb
addr16
xchg
xchg
adc
cmp
leave
jp
mov
sub
mov
adc
pop
add
shll
cmp
cmp
or
in
nop
sbb
sub
mov
ljmp
push
cmpsl
ficomps
shr
jl
dec
or
in
push
shr
mov
mov
sub
jge
sbb
mov
pop
ret
mov
out
dec
popa
scas
push
sub
test
aad
jns
push
stos
imul
rorb
pop
lea
les
and
and
cmp
loope
sbb
sbb
imul
jmp
call
or
pop
addl
xor
dec
lret
in
push
cli
and
pop
lods
aam
xor
scas
xor
mov
cwtl
cmp
rcrb
mov
mov
es
sbb
lock
add
inc
mov
xor
sub
sbb
cmp
leave
repnz
sub
mov
mov
jbe
clc
fstl
fwait
add
mov
push
mov
nop
push
mov
in
jp
jmp
push
pop
push
out
mov
jne
or
test
pop
arpl
sbb
pop
add
notb
xchg
popa
packsswb
cmpl
lret
repnz
nop
frstpm(287
ficoms
push
jmp
pusha
lret
jmp
movsl
jb
adc
push
add
jp
cmp
movl
mov
push
jbe
inc
jp
xchg
or
mov
sub
adc
inc
push
push
jbe
je
push
out
mov
ja
jmp
cltd
pop
movsl
outsb
icebp
xchg
popa
jae
add
mov
jg
rolb
mov
daa
leave
sub
insw
loope
or
rcrl
and
int3
xchg
push
inc
push
xor
aam
repz
fcomps
adc
hlt
mov
xchg
sarb
rcll
rorl
push
shlb
push
add
pop
pop
in
shll
add
add
push
mov
dec
cmpsb
xor
push
lret
addb
cltd
shr
inc
les
rcll
std
in
stc
jmp
pop
test
and
lret
jmp
std
mov
jmp
sbb
orb
mov
js
leave
xchg
subb
sarb
mov
jnp
lahf
bound
rorb
push
mov
lods
imul
js
push
mov
add
jle
mov
adc
stos
inc
mov
jne
mov
cmc
dec
pop
sarb
push
push
mov
push
pop
clc
fistps
fwait
adc
inc
adc
hlt
mov
adc
sub
ret
adc
sbb
fcompl
rcr
test
jmp
pop
mov
loopne
fldcw
and
sub
cmpsl
adc
pop
mov
orb
and
daa
sub
lar
fs
pop
add
jge
xor
mov
lahf
sub
sub
push
pop
cmpb
xor
add
ss
or
hlt
inc
mov
jmp
pop
push
mov
push
and
ljmp
das
pusha
push
mov
xchg
adc
add
mov
add
push
sbb
ret
adc
gs
out
or
pop
add
stos
lcall
inc
movsl
in
add
push
push
mov
cmova
cmc
and
push
mov
out
sub
andb
mov
mull
mov
inc
mov
lcall
xor
push
mov
jb
or
jmp
or
or
or
cmp
popa
test
inc
push
andl
addb
insb
push
addr16
je
ret
push
imul
pop
mov
cmp
add
ret
or
test
sbbl
and
or
int3
add
sub
add
jmp
or
jbe
or
aam
add
dec
or
roll
sub
jmp
cld
adc
test
pushf
out
or
adc
adc
or
pop
add
mov
jb
xorb
add
out
mov
push
jmp
das
adc
sub
push
add
xor
pop
adc
cmp
enter
mov
ret
jle
inc
mov
jmp
repnz
push
add
or
mov
cwtl
adc
jno
cmp
mov
int
pop
in
jle
sbb
pop
add
inc
mov
or
push
add
out
das
imul
iret
mov
xor
js
add
mov
in
push
in
mov
xor
sub
fsubs
iret
jns
mov
ljmp
sti
int3
mov
push
mov
mov
push
jmp
adc
cmpsl
sbb
adc
add
cmpsb
pop
test
mov
or
push
sbb
cwtl
or
add
sbb
adc
sbb
jge
sbb
mov
cmp
pushf
push
fiaddl
and
lds
data16
or
xchg
or
add
mov
leave
dec
test
jmp
push
adc
push
lea
pop
inc
dec
es
js
aam
test
clc
repnz
popa
sbb
lret
daa
stos
sub
outsl
push
push
sbb
stc
jl
pop
add
negl
fs
dec
or
in
ja
sbb
mov
xor
nop
mov
out
mov
hlt
orl
mov
mov
cmp
mov
or
mov
loope
dec
loopne
push
or
or
pop
test
pushf
inc
add
push
lock
loopne
cmp
jmp
hlt
inc
or
mov
add
iret
adc
mov
jo
dec
xchg
jb
add
pop
xor
xor
pop
nop
arpl
add
iret
jg
or
add
push
imul
fisttpll
je
and
add
imull
shrl
cmp
out
aaa
mov
ret
dec
mov
lret
bound
push
add
add
clc
xchg
fwait
mov
das
gs
push
adc
popf
lds
popa
pusha
jle
add
mov
push
or
andb
or
sbb
or
jmp
add
jno
mov
das
psubq
or
hlt
shr
jns
xorb
push
imul
out
mov
jle
rorl
std
cmp
xchg
mov
sbb
push
shr
lock
mov
sub
xor
jb
rorl
push
lods
add
dec
inc
in
je
inc
out
mov
jmp
cmpsb
push
and
cmp
pop
push
cmp
out
pop
push
in
or
subb
mov
pop
adc
jmp
add
fs
and
sub
out
add
jg
jge
jle
or
inc
dec
dec
jp
sub
enter
notl
adcb
sbb
adc
or
xchg
jno
cmp
jge
sbbl
sub
pop
pusha
imul
push
stc
adc
cmc
sbb
or
xchg
bnd
movsl
lds
es
pop
fstpl
or
add
sub
jmp
xlat
pop
lods
imulb
jge
lods
inc
pop
inc
nop
ds
push
call
dec
movsl
in
pop
add
or
add
aas
inc
dec
testb
mov
mov
inc
sub
imul
fimull
leave
sub
pop
rcr
xchg
inc
icebp
aas
cmp
cld
imul
add
adc
shrl
pop
sahf
jb
test
cmpsl
add
fiadds
jne
std
mov
stos
add
and
sbb
pop
mov
adc
adc
mov
daa
test
pop
push
xor
ds
mull
jno
inc
push
or
scas
xchg
mov
enter
mov
mov
or
std
push
xchg
xchg
mov
xor
add
imul
push
das
xor
addl
push
clc
pusha
sbb
js
mov
and
out
pop
pop
test
cld
lahf
mov
adc
mov
cmpsb
adc
lea
or
int
add
xchg
push
pop
repz
test
xor
rcl
and
pop
or
add
mov
cwtl
push
fucom
in
inc
inc
xchg
lds
cmp
inc
cmp
add
jno
bound
cmp
cmp
es
fisttpl
ffreep
pop
jns
add
jp
int3
leave
push
and
lahf
inc
das
leave
jne
shll
imul
add
ret
mov
test
arpl
add
mov
lret
pop
jo
jmp
outsl
mov
outsb
or
dec
and
mov
std
test
inc
fldl
or
or
push
push
aas
add
outsb
nop
pop
jnp
and
rcll
popf
pop
add
gs
loop
adcl
jo
add
push
dec
pop
fbld
jmp
out
inc
xchg
pushw
sub
mov
mov
add
or
jecxz
add
gs
xchg
decb
rcrb
adc
pop
mov
push
mov
cmpsb
clc
in
inc
lods
jmp
in
sub
insl
in
jae
imul
mov
ret
stos
xchg
gs
jl
ror
or
push
push
cmc
add
jp
aad
adc
pop
push
push
in
andb
insb
cmp
mov
rolb
or
sub
mov
pop
das
xor
test
stos
imul
xor
cmp
or
inc
cltd
xor
call
mov
mov
xlat
dec
pop
loopne
push
sub
push
or
dec
push
sbb
sahf
push
pop
pop
sub
push
jne
dec
or
cwtl
pop
push
push
push
test
inc
or
xor
or
mov
mov
sub
int3
sbb
inc
sub
sub
int
mov
sahf
push
sarl
jno
xchg
test
pop
inc
push
xor
add
push
mov
dec
xor
push
jmp
fcoms
jge
push
and
clc
inc
or
xlat
rclb
add
fsub
mov
or
jb
leave
adc
or
cmp
sub
sahf
ret
add
cmp
sbb
add
push
mov
dec
std
inc
mov
call
mov
sub
cmc
or
mov
push
out
in
sub
cmp
sub
cmpsl
inc
popf
xor
lock
das
sub
gs
js
cwtl
push
ret
add
xor
jns
inc
dec
inc
jo
pop
ror
pushw
add
jg
add
inc
aaa
mov
mov
in
push
test
mov
jl
or
nop
sti
out
jbe
sub
mov
dec
adc
sbb
inc
add
xchg
loope
push
or
test
pop
push
mov
mov
push
adc
repz
divl
push
pop
cld
in
and
jg
jns
in
and
leave
or
or
clc
lsl
jge
mov
cmp
push
dec
sbb
dec
sub
pop
sub
outsl
adc
xchg
cmc
pop
mov
mov
pop
cmp
mov
or
mov
ret
sbb
push
popa
cmp
add
test
sbb
cmp
pop
into
push
add
jae
sub
cmp
outsl
xchg
mov
ficomps
mov
or
inc
mov
push
push
pop
std
shll
or
aas
cmp
push
rorb
jae
or
add
mov
jae
or
add
mov
or
sti
mov
push
dec
xor
inc
add
push
add
adc
clc
sub
dec
and
adc
pop
jo
cmpl
mov
pushf
push
mov
in
jo
pusha
xor
bound
addb
dec
add
pop
add
cwtl
pop
push
sub
cmp
jmp
out
sbb
out
push
repz
push
dec
ss
lock
or
int3
adc
arpl
sbb
cli
adc
cmp
pop
testl
xor
pop
out
mov
bound
jmp
mov
mov
pop
aad
loope
cmp
sub
jo
xlat
inc
clc
add
pop
inc
stc
orl
lods
dec
pop
cmp
dec
leave
inc
subb
pop
cmp
fldt
xor
mov
pop
push
jp
push
pop
mov
stc
insb
add
pop
in
cli
add
outsb
orl
test
aam
adc
pop
push
mov
push
or
inc
cwtl
fiadds
jmp
push
lock
adc
out
push
loope
outsl
sub
sub
mov
xor
adc
sub
xlat
jmp
cmp
jp
pop
fstpl
or
add
popa
xchg
cmp
cmp
pop
dec
mov
push
jle
ss
imul
out
or
or
ss
adc
or
sbb
insb
jmp
jmp
repz
jp
jmp
das
adc
push
dec
pop
mov
cmp
test
inc
ja
xlat
rcrb
or
push
lcall
sub
xchg
mov
xchg
fs
pop
out
jle
aam
repnz
adcl
jecxz
lahf
push
mov
mov
mov
add
adc
cmp
sbb
in
jae
js
pop
fidivrl
out
call
iret
not
cmc
fimull
cwtl
push
mov
adc
jl
lock
sub
adc
add
inc
out
jmp
mov
xor
xchg
clc
dec
mov
and
jmp
and
jle
inc
and
adc
pop
outsb
das
pop
sub
jo
gs
rorb
ljmp
jle
or
push
jmp
sub
rcll
je
sbb
mov
mov
cmp
pop
ror
sub
push
or
sbb
mov
xchg
mov
jb
sarl
das
adc
and
popa
je
add
fistpl
mov
push
push
mov
xor
sub
iret
stos
ret
enter
xchg
lock
sbb
jmp
es
cmp
and
mov
mov
mov
pop
push
dec
sub
push
pop
loopne
push
inc
mov
sub
push
jmp
mov
notl
popf
inc
scas
lock
movsl
mov
sub
push
fisubs
in
nop
mov
clc
je
sti
das
and
jge
mov
test
sub
jne
and
push
mov
mov
loopne
rcll
sub
pop
mov
push
dec
push
std
push
xchg
ljmp
mov
popw
pop
push
xorb
push
in
sub
push
ret
in
cmp
and
push
in
loop
rorl
xor
in
dec
push
push
and
loopne
loopne
jp
adc
mov
cli
dec
or
jbe
js
pop
sub
inc
aad
push
sub
inc
cwtl
push
sahf
mov
mov
pop
sbb
add
and
outsb
in
mov
mov
and
mov
push
push
push
or
push
pop
ja
mov
jb
iret
mov
mov
fldcw
xchg
frstor
jecxz
mov
jge
mov
dec
paddq
dec
testl
icebp
pop
mov
xor
jmp
or
sahf
mov
flds
push
mov
cs
repnz
cmpsb
call
fxch
mov
ret
dec
push
repnz
push
mov
gs
and
xor
sbb
pop
enter
push
sub
xor
leave
data16
decb
cmp
shll
sub
or
push
cli
push
bound
ret
stc
call
cld
push
sub
xorl
pop
mov
mov
mov
dec
scas
sti
cmp
cmc
imul
pop
push
repz
pop
lods
fildl
mov
xor
ret
push
addb
push
pop
pop
mov
adc
mov
adc
sub
lcall
cmp
cmp
or
sbb
mov
addr16
popf
int3
lahf
adc
lods
pop
and
dec
mov
or
pop
loopne
int
popa
icebp
jp
lds
cmp
or
arpl
hlt
inc
cmp
jp
and
adc
pop
out
sub
pop
dec
xorb
jnp
and
cs
rorb
cwtl
fnsave
leave
dec
or
push
sub
jl
dec
adc
or
aam
rclb
jne
mov
idivb
lcall
test
jbe
inc
dec
jb
int
fdivr
fstpl
aas
mov
dec
aaa
das
push
adc
das
mov
push
mov
xlat
push
and
add
xchg
std
mov
dec
test
subb
pop
mov
pop
xor
jmp
xlat
adcl
add
scas
inc
push
std
inc
call
lcall
shl
pusha
ja
cmp
jns
xchg
push
pop
pop
inc
mov
cmp
ljmp
pop
pop
clc
daa
sub
pop
lret
lcall
subb
jb
pop
pop
shrb
pop
jae
lret
movsl
fs
lods
sub
xor
stc
jmp
xchg
gs
xchg
repnz
adcb
add
xchg
or
pop
sbb
movsb
rclb
mov
mov
mov
dec
scas
lock
pop
in
pop
adcl
jb
jmp
fisubrs
ljmp
test
cld
jl
idivb
pop
adcb
fwait
add
imul
adc
mov
imul
xor
sub
inc
pop
jmp
pop
pop
stos
sahf
mov
movsl
push
push
mov
push
mov
and
pop
add
jl
hlt
and
faddl
lret
jno
in
push
dec
mov
add
cld
xor
pop
neg
or
ss
repnz
hlt
mov
jmp
push
lds
push
ljmp
loope
push
das
data16
add
mov
xor
sub
dec
fisubrl
daa
pop
int3
popf
and
fldl
pop
xor
jno
sub
into
jb
push
mov
xchg
loope
addr16
push
push
ror
mov
jnp
inc
pop
les
inc
call
lcall
adc
popa
dec
pusha
pop
das
sub
or
aad
out
sub
mov
xchg
test
and
push
test
sub
loop
outsl
inc
mov
add
sub
jne
mov
cmp
push
sub
es
sbb
mov
push
sbb
cmp
pusha
jne
ja
fs
xchg
dec
fimull
or
imul
sub
scas
pusha
out
pop
cltd
mov
push
out
gs
pushf
cs
pop
movsl
mov
scas
inc
out
jae
mov
or
dec
outsl
jae
repnz
inc
ss
cmp
push
add
dec
mov
fcoml
repz
or
int
or
adc
jmp
imul
sbb
std
ljmp
imul
jo
and
push
dec
add
out
in
addb
xor
cmp
jno
mov
or
cmp
add
shll
movsl
adcl
mov
mov
dec
shrb
pop
sub
aad
mov
mov
xchg
or
xchg
lods
jg
neg
fidivrl
pop
pop
sub
test
mov
push
dec
xor
jb
jnp
mov
jg
push
xlat
mov
subl
cmp
dec
and
dec
push
fldpi
mov
xor
das
and
in
mov
ret
jl
jecxz
jmp
lret
push
flds
or
and
in
xchg
push
push
jle
je
pop
add
sbb
scas
mov
push
notb
mov
mov
shr
push
mov
jge
iret
out
je
inc
inc
repnz
push
pop
mov
sub
add
mov
cmp
or
in
jg
test
adc
adc
lret
gs
ljmp
outsb
aas
addr16
pop
push
outsl
push
shrb
gs
jne
jae
mov
xchg
xchg
adc
nop
in
orb
jmp
xchg
or
jb
cmp
fwait
push
xor
sub
rorl
nop
loopne
popf
das
pop
and
xor
ljmp
xor
push
mov
inc
pop
push
mov
mov
aam
pop
cmpsl
mov
je
pop
cli
xlat
pop
xchg
xor
xor
mov
mov
and
sub
cmp
pop
mov
push
xor
orl
pop
inc
mov
push
loope
andb
movsl
pop
jp
pop
shlb
xchg
cld
shl
pop
mov
cmp
cwtl
adc
jb
add
insl
xchg
sub
cmc
push
add
xor
dec
scas
out
push
cltd
out
push
push
push
xchg
mov
mov
scas
leave
mov
scas
add
and
push
sub
or
push
mov
mov
ficoml
add
xor
gs
stos
fs
call
pop
sbb
xor
cmp
jg
cld
dec
pop
xchg
jbe
cli
jge
inc
lds
push
test
mov
push
or
jg
jge
hlt
push
inc
ret
psubb
add
adc
pop
or
jmp
sbbb
mov
das
xor
mov
pop
pop
lret
jle
mov
gs
jne
lcall
and
lahf
mov
fsub
push
jmp
or
pop
push
jmp
add
push
mov
test
add
insl
adc
fisttps
xor
out
popa
sbb
and
not
inc
fucomip
push
es
pop
xchg
sbb
push
subl
popaw
sbb
les
outsl
mov
fsubrl
loopne
push
dec
cwtl
push
mov
cmc
and
jp
adc
sti
pop
inc
add
sub
aad
sbb
pop
push
xor
adc
nop
callw
and
dec
js
dec
and
dec
roll
sbb
movsb
xchg
or
rcl
mov
rcll
jmp
or
sbb
cli
sub
jl
outsb
pop
pop
mov
test
inc
pop
sbb
bound
in
addb
lret
adc
sahf
and
and
icebp
add
icebp
cmc
insb
cmp
add
hlt
jnp
inc
pop
xorl
paddsb
xlat
lcall
cwtl
push
test
or
orb
mov
mov
jmp
subl
jmp
dec
cwtl
dec
dec
test
mov
dec
pop
xchg
jns
jmp
stos
js
jmp
or
loope
adc
in
out
sub
int3
pusha
bound
repz
adc
jnp
das
roll
and
or
add
xor
bound
or
lcall
pop
pop
mov
ds
mov
enter
imul
push
mov
push
lea
jns
gs
std
andl
mov
mov
push
or
sbb
fs
or
inc
jmp
sub
cmpsb
or
jp
je
or
int3
jmp
dec
and
scas
fistl
mull
pop
pop
adc
jnp
enter
mov
das
cmp
call
clc
mov
fmulp
push
cmp
add
neg
jb
mov
inc
clc
out
addl
pop
mov
add
int
xchg
inc
insb
mov
popa
jno
jmp
jg
ja
xor
aad
les
add
cs
xor
inc
sub
pop
xchg
xor
dec
inc
ret
cwtl
lea
ja
daa
dec
inc
pop
jge
jp
xor
sub
sbbb
mov
mov
dec
cltd
and
scas
mov
setbe
inc
push
scas
fdivrl
push
daa
xor
popa
pop
or
inc
inc
jnp
or
cmpsl
loopne
call
adc
mov
dec
das
add
roll
jns,pt
pop
jbe
mov
adc
ljmp
dec
adc
scas
inc
mov
sub
add
rcrb
mov
loop
sbb
mov
mov
das
ja
mov
push
pusha
aad
add
xchg
inc
xor
inc
push
xchg
testl
shrb
lds
sub
lods
cli
inc
pop
pop
mov
pop
xchg
inc
xchg
add
or
out
test
adc
xchg
inc
push
ret
push
push
push
mov
push
mov
sub
jo
mov
push
mov
and
xchg
ljmp
jmp
sbb
mov
or
push
inc
pop
call
xor
pop
mov
xchg
jns
cmpsb
fnstsw
in
push
inc
cmp
aam
cmp
sbb
leave
jbe
push
dec
sub
cmp
mov
aaa
sbb
adc
rcrl
insb
pop
add
fcmovu
pop
and
dec
cmp
sub
insb
sbb
je
pop
js
mov
adcb
cmpsb
rorb
stc
insb
sbb
push
adc
clc
inc
aad
mov
nop
xchg
loop
or
jmp
sti
cmc
xor
adc
jno
mov
loope
fcmovbe
pop
mov
add
mov
xchg
xchg
rcrl
in
lahf
arpl
jmp
add
pop
mov
cmp
rorb
mov
jmp
add
xchg
jmp
lahf
into
sub
fnstenv
push
xchg
pop
cmp
fildl
fidivrl
sub
pop
jmp
sub
test
or
addr16
inc
jle
sub
jp
enter
es
sub
push
mov
ret
mov
in
imul
and
xor
push
xor
lret
inc
rorb
orb
pusha
inc
js
loop
sbbb
addr16
data16
mov
movsb
sub
adc
jecxz
aam
or
or
or
cmp
add
sub
cli
inc
or
fmul
inc
mov
test
or
adc
sarb
scas
test
pop
std
dec
dec
adcl
bound
in
mov
pusha
mov
pusha
jp
lds
sub
ss
or
mov
adc
jmp
xlat
scas
pop
push
xchg
dec
jno
or
ljmp
adcl
jb
inc
movhps
clc
and
jp
inc
aas
je
sarb
mov
mov
add
pop
add
add
imul
jmp
enter
xchg
inc
incl
test
cmc
xor
call
mov
ds
and
and
adc
or
pop
push
mov
cwtl
sbb
jecxz
push
adc
cmp
add
add
jl
sbb
cmp
mov
mov
lods
mov
mov
dec
std
ja
dec
pop
push
mov
cmpb
pop
mov
add
mov
pop
cmp
pop
arpl
xor
insl
mov
jl
add
orl
mov
add
es
inc
stos
lea
mov
movsb
jb
cwtl
cli
xchg
sbb
sbb
ljmp
scas
fs
mov
inc
mov
sbb
cmp
call
add
or
cs
scas
cwtl
jg
popa
pop
adc
or
fldenv
sub
xchg
jp
and
sub
jnp
and
dec
xchg
pop
pop
mov
push
lcall
sahf
push
jg
pop
cmp
cli
adc
and
sub
jmp
sub
mov
mov
lret
jmp
inc
mov
movsl
ja
mov
cs
xor
dec
jmp
sub
sbb
jg
aas
loope
cwtl
cmp
mov
out
mov
jmp
xor
dec
pushf
int
dec
stc
ret
jge
add
je
inc
cld
sub
jmp
xchg
es
push
out
cld
push
jp
inc
pop
sti
pop
mov
addr16
pop
sub
sub
sbb
int3
outsb
mov
loopne
push
xor
mov
scas
lcall
push
jmp
push
xor
ss
aam
add
mov
adc
mov
xor
sbb
das
xor
addl
xchg
jnp
and
aam
nop
push
push
cwtl
push
and
aam
pop
add
shrl
sub
daa
jb
cmc
mov
add
in
sub
aam
aaa
sub
stos
push
aas
stos
add
cmp
fisttpl
and
push
mov
mov
and
inc
adc
push
dec
or
lods
jle
pusha
mov
ljmp
pop
adc
cwtl
ja
mov
sarl
aad
and
mov
pop
mov
push
pusha
push
jmp
cmp
mov
adc
ficoms
mov
imul
mov
push
pop
in
or
je
sub
xorb
mov
add
push
add
inc
fwait
dec
mov
xorb
jmp
cmp
bnd
loope
pop
scas
jbe
psllw
int
mov
dec
fs
mov
pop
rcl
sub
and
and
pop
push
xor
adc
adc
dec
es
or
jae
fidivrl
cld
jne
jecxz
scas
pop
enter
and
jp
je
dec
test
jo
mov
mov
mov
sub
fisubs
jmp
push
test
push
repz
jecxz
out
pop
ror
push
pushf
out
cmp
pop
mov
xor
mov
sub
and
push
bound
pop
stos
or
add
fs
mov
in
xor
mov
shll
rorb
mov
jg
movsb
test
push
push
decb
xor
pop
mov
dec
mov
mov
fwait
sub
dec
adc
js
xor
mov
mov
push
jge
ljmp
mov
hlt
pop
lret
cmp
mov
ds
xchg
js
sub
jno
cmp
rclb
arpl
adc
insb
movsb
or
pop
pop
fsubl
adc
pop
sub
nop
xor
ds
and
jg
pop
xchg
movzwl
icebp
push
inc
das
inc
inc
push
adc
jae
sbb
fwait
or
pop
sub
jg
jle
pop
in
or
adcb
or
add
stc
push
repz
or
arpl
adc
sub
test
rclb
fdiv
push
mov
add
inc
mov
ret
ja
mov
rclb
push
dec
pop
in
jbe
push
mov
ja
roll
dec
or
int
inc
and
fdivr
jmp
adc
cld
dec
in
test
cmp
mov
jnp
sbb
ljmp
mov
mov
inc
icebp
jb
add
mov
mov
xor
testb
pop
adc
sub
xor
push
shrb
add
adc
mov
jg
cmp
mov
mov
and
jmp
stos
push
sarb
fcmovne
sysenter
adc
daa
sub
leave
mov
mov
or
scas
pop
pop
push
mov
push
mov
aaa
sub
jnp
pop
movsb
mov
sbb
xchg
and
or
pop
lods
pop
sub
jl
pop
iret
dec
adc
jmp
push
jg
inc
popf
xchg
popa
or
ja
in
shl
jle
or
and
pop
movsl
repnz
cmp
addr16
sub
sbb
fs
add
sqrtps
cmc
into
push
or
adc
outsb
cmpsl
test
inc
mov
mov
push
mov
inc
sbb
add
enter
pop
nop
cld
lret
pop
cmp
mov
imul
push
mov
mov
jg
cmp
sbb
shr
cwtl
out
jmp
adc
xor
jns
or
xor
add
loop
push
add
repz
ljmp
fcmovnb
lods
push
vpor
inc
cld
push
mov
outsl
add
ljmp
inc
push
push
jg
jmp
cmc
pop
add
pop
fbstp
adc
cld
xchg
rorb
pop
repz
jmp
icebp
xor
outsl
call
pop
adc
nop
scas
mov
push
icebp
test
dec
xor
or
xchg
pop
dec
cmp
inc
or
filds
out
jo
sub
cmc
xchg
add
or
js
sub
cld
push
inc
jno
jp
out
dec
adc
lock
jg
or
iret
ss
das
or
add
sbb
push
cld
xchg
sub
xor
cld
mov
shlb
cmp
loopne
dec
stc
test
jle
sub
call
dec
jmp
push
stos
bound
push
lret
inc
add
mov
mov
jg
loope
testb
xchg
incl
xor
push
jmp
inc
mov
push
jl
push
jmp
cld
fsubrl
jo
push
loop
lahf
xchg
fcomip
and
pop
xor
stc
adc
sub
jl
or
xchg
int
clc
and
mov
in
and
ds
neg
fsubrl
lock
test
pop
xchg
mov
sbb
sbb
jecxz
xchg
mov
add
dec
pop
push
xor
js
rol
push
pusha
mov
sbb
push
loopne
pop
jg
es
stc
movsl
pop
sbb
and
dec
scas
fwait
xchg
xchg
add
negl
mov
enter
in
jmp
or
test
sarb
movsl
data16
jmp
jo
add
push
mov
aas
lahf
adc
mov
lods
or
pop
in
in
mov
nop
mov
xor
inc
push
scas
movsl
decl
push
insl
adc
les
leave
jl
loope
mov
and
mov
xchg
inc
out
and
shlb
pop
push
and
xor
je
orb
test
enter
mov
mov
pop
aad
jmp
and
sub
es
xor
adc
sub
jmp
repnz
cmpsb
in
ficompl
or
push
jmp
in
push
pop
ds
adc
subb
jnp
pop
lock
das
cld
cwtl
fstl
dec
scas
xor
xor
push
out
mov
cmp
pop
and
pop
sarb
test
sbb
outsl
pusha
outsl
inc
mov
mov
out
jb
adc
mov
fbstp
xchg
jmp
test
mov
pop
lds
cmpsb
pop
mov
xor
jae
iret
and
push
fists
and
dec
insb
push
mov
and
ljmp
clc
enter
or
push
cmp
outsb
adc
push
shrb
add
pop
sub
popf
jo
addl
cmp
push
imul
jmp
sti
pop
sub
mov
aad
pop
mov
movsl
xchg
dec
dec
cmp
pushw
ljmp
pop
sub
jmp
dec
pop
sti
inc
ss
out
bound
sub
add
lock
mov
ret
or
mov
xor
mov
rcll
dec
push
daa
pop
lret
jmp
sub
ljmpw
xchg
test
xchg
xchg
iret
cs
movsb
adc
lret
and
mov
in
rolb
ja
pushf
push
and
mov
xlat
xor
push
pop
inc
jecxz
pop
jo
mov
push
pop
pop
idiv
and
sub
pop
shr
xor
cld
sbb
sub
mov
js
les
repz
inc
out
add
xchg
xor
ljmp
int3
call
test
ds
sbb
pop
das
ficoms
icebp
sbb
ret
adcb
cmp
in
clc
cmp
mov
std
sub
xchg
fsubrp
add
inc
lret
xchg
inc
pop
mov
and
mov
ficompl
ja
jmp
lret
pop
push
les
test
adc
add
cli
int3
adc
loope
xor
in
cmc
sbb
push
or
xchg
and
out
lcall
or
rcll
fs
jl
enter
or
cmpsl
dec
and
subb
pop
sbb
or
pop
xor
fisttpl
xchg
es
cmc
in
lock
bound
dec
xor
sub
loopne
jnp
cwtl
inc
por
xor
loopne
jmp
adc
mov
pop
in
mov
mov
add
lret
cmp
fildll
sbb
mov
mov
xchg
rol
std
fidivrs
into
sbb
pop
or
push
push
dec
push
sub
jp
add
aas
jnp
xor
rcrb
fildl
in
add
inc
cmp
fidivl
or
jmp
pop
arpl
mov
cli
sbb
mov
movsb
mov
popf
inc
sbb
add
out
rcll
icebp
dec
pop
mov
or
push
mov
push
lcall
lea
stos
imul
pop
gs
loope
adcl
jne
sub
test
add
sbb
outsl
sbb
test
enter
push
cli
popf
mov
mov
loopne
push
rclb
ret
push
push
push
jmp
xor
push
arpl
inc
aam
pop
adc
loop
pop
shll
jo
js
push
popl
push
push
jmp
mov
cmp
dec
add
mov
adc
push
push
mov
inc
jg
jno
enter
and
mov
cmpsl
jbe
iret
push
cmpsl
aam
add
pusha
popa
or
pusha
movsl
push
adc
mov
jp
mov
or
mov
and
or
cs
dec
imul
negb
sub
lahf
push
stos
mov
jo
aam
or
out
sbb
xor
dec
push
add
and
enter
sbb
inc
jmp
mov
xchg
lods
mov
dec
add
mov
cmp
xor
xor
inc
out
repz
mov
or
push
sub
and
inc
push
int3
xlat
insl
lret
add
xor
push
sub
std
loope
test
push
xchg
inc
sub
add
lock
pushf
or
mov
rcl
mov
sarb
aad
gs
adc
std
das
mov
inc
into
sub
loop
mov
popa
add
push
mov
jecxz
inc
mov
lea
xor
pop
mov
cmp
sbb
js
pop
pop
rorl
mov
adc
enter
jbe
dec
add
out
test
nop
dec
push
repnz
test
cmp
aaa
cld
xor
push
ja
leave
or
jns
gs
mov
pop
push
into
add
jo
data16
lcall
jmp
loope
and
inc
inc
faddl
and
push
cli
pop
cmp
subb
jg
adc
mov
mov
pop
dec
mov
mov
add
icebp
jle
jmp
push
pop
and
sbbb
xor
clc
imul
or
mov
je
mov
push
push
sbb
push
push
or
push
push
stc
loope
in
add
out
mov
pop
pop
aad
fstl
lret
mov
ljmp
adcb
mov
cwtl
outsb
jp
dec
push
adc
out
xor
cmp
daa
dec
add
enter
aad
push
mov
inc
shr
add
outsl
les
xor
xor
iret
fisttps
mov
mov
push
or
sub
mov
adc
add
push
mov
add
or
mov
xor
sub
aas
lahf
or
mov
push
sbb
imul
pushf
jae
or
add
or
test
jg
cmc
bound
add
sub
in
or
dec
xor
sbb
xor
insb
sub
cmp
sub
lcall
adc
fxch
xchg
fs
loop
xchg
pushf
sahf
xor
push
rorl
jp
out
add
insl
in
out
pop
jnp
cmp
ret
push
sub
and
mov
mov
push
and
leave
or
xor
add
ljmp
sub
pusha
add
shll
push
jmp
mov
push
call
pop
adc
adc
testl
jmp
sub
pop
adcb
sbb
and
not
add
push
cmp
xor
daa
insl
jns
arpl
or
fisubrs
jg
inc
xor
inc
pop
push
clc
scas
mov
push
arpl
fsubrp
add
add
pop
jns
or
hlt
frstor
pop
or
outsb
push
out
jno
lcall
call
in
jmp
addl
and
leave
dec
dec
loope
popa
cmp
adc
inc
xchg
les
or
adc
icebp
xchg
test
xchg
pop
dec
out
add
mov
add
sub
and
jb
jne
mov
adc
add
cmp
xor
push
mov
shll
add
add
cmp
sbbl
xor
push
mov
test
jecxz
gs
add
pusha
ds
xor
pop
pop
push
sub
imul
sub
inc
lahf
mov
fwait
jbe
xchg
and
jecxz
and
push
push
lods
push
pop
popa
mov
addl
xlat
xchg
cmp
pop
jmp
lods
imul
inc
sub
or
out
test
adc
loopne
mov
push
xchg
inc
loope
or
pop
dec
cltd
iret
push
cmp
xor
jge
mov
cmp
mov
nop
dec
fwait
and
arpl
inc
push
int
pusha
icebp
insb
xchg
sbb
add
mov
jmp
ret
mov
mov
inc
push
add
or
or
cli
or
add
jmp
enter
stc
dec
clc
mov
out
jmp
jns
xlat
push
fdivl
js
push
ret
inc
sbb
ja
sub
stos
pop
mov
sbb
shll
shl
jnp
fmull
push
xchg
adc
pop
pop
cli
and
mulb
out
sbb
sub
sbb
sub
push
fadds
pop
push
xchg
inc
pop
incb
xchg
out
xchg
into
incb
mov
push
add
ds
sub
or
jns
inc
push
ds
xor
and
arpl
sub
fcoml
ljmp
in
mov
fwait
push
imul
fmull
cmc
push
sub
lret
xlat
pusha
mov
lret
cld
adc
pop
sub
imul
inc
stc
xor
repz
dec
jbe
test
jo
in
out
repz
or
add
mov
mov
sub
add
loope
cmc
mov
lods
push
xchg
mov
pushf
sbb
out
xor
aas
neg
test
ror
testb
test
fistl
add
jb
mov
and
jg
movaps
dec
adc
xor
pop
xchg
add
out
sbb
or
or
xchg
xchg
xor
jns
clc
push
test
ret
xchg
pop
mov
pusha
jmp
add
inc
mov
addr16
pop
push
sbbl
sbb
lock
sbb
sbb
push
adc
inc
int
not
and
xor
mov
enter
mov
pop
add
mov
sub
add
loope
add
dec
or
pop
xor
fcoms
cld
inc
das
aas
push
jo
es
cmp
jmp
insb
js
aam
cli
lret
mov
xlat
jmp
cmp
mov
mov
inc
je
aad
cmc
or
sbb
pop
or
pop
inc
lret
leave
xchg
or
daa
pop
push
repz
sahf
ret
push
test
mov
inc
or
mov
xchg
addl
lcall
mov
mov
mov
push
int3
shll
and
and
push
arpl
cmp
adcb
stos
aam
mov
add
outsb
pop
push
mov
mov
inc
test
in
cmp
subl
bnd
jmp
in
jmp
cmpsl
pop
push
push
jmp
or
jl
lock
js
pop
jg
add
test
out
mov
cmpsb
addb
mov
push
or
insb
cwtl
adc
pop
shlb
add
push
add
pop
mov
or
push
loopne
jp
cmp
push
or
aas
aad
out
decb
pop
push
addr16
jl
xor
sub
cwtl
testb
pop
push
push
loopne
cmc
int
ja
outsl
jmp
movsl
imul
add
clc
or
test
add
popa
into
jo
or
xor
push
das
jl
adc
mov
sub
jecxz
mov
pop
adc
rcrb
aas
mov
ret
push
lock
out
inc
sbb
in
ljmp
mov
aad
dec
dec
js
cli
add
xlat
cmp
jbe
movb
or
add
mov
ljmp
jmp
pop
repnz
ds
aas
pop
cltd
mulb
cwtl
jmp
nop
pop
add
jmp
sub
pop
and
adc
sbb
push
push
outsb
pop
and
adc
pop
or
lea
pslld
lahf
inc
or
outsb
push
and
mov
pop
cltd
loop
jno
mov
or
xchg
icebp
ret
hlt
mov
jge
inc
mov
sbb
or
and
dec
scas
repnz
mov
mov
and
pop
adc
push
push
mov
jmp
mov
arpl
out
arpl
mov
je
sub
imul
pop
rclb
add
push
mov
inc
mov
leave
repnz
pop
aaa
jns
test
and
pop
add
mov
les
mov
ja
dec
push
mov
mov
into
lret
bound
enter
add
rcl
and
mov
xor
jmp
inc
add
and
xchg
pop
jmp
or
mov
addr16
shlb
add
aam
enter
sub
xor
pop
xchg
data16
popf
pop
and
ret
add
dec
and
std
dec
push
loop
cltd
nop
mov
mov
sti
pop
jecxz
or
mov
inc
imul
cmpb
cld
inc
mov
iret
xchg
mov
lea
xor
fists
cmp
pop
add
mov
mulb
rolb
mov
pop
add
mov
and
add
add
lds
dec
loop
lock
add
fidivrl
mov
pop
push
mov
add
jge
push
fidivs
pop
cmp
mov
and
insl
ret
push
push
add
dec
sbb
xchg
cmp
jmp
js
sub
adc
inc
in
mov
pop
pop
cmp
fs
pop
add
mov
or
add
cwtl
daa
jo
jo
cmc
inc
mov
pop
lods
mov
jecxz
xor
cmpsb
mov
or
scas
jecxz
loop
cmc
mov
or
sbb
adc
jnp
jo
dec
ljmp
mov
in
leave
add
cmpb
fwait
mov
push
sbb
fcomip
or
add
push
or
les
scas
cmp
push
dec
popw
fcom
jb
adc
dec
les
and
mov
incb
pop
mov
pop
sub
jmp
sub
jmp
mov
sbbl
ret
add
sub
inc
mov
add
add
xorb
cmp
aam
add
loope
push
mov
sbb
pop
or
or
jmp
cmp
jne
sbb
cmp
out
adc
stos
cmp
mov
jl
test
nop
add
stc
int3
jnp
cltd
lods
push
push
adc
push
and
or
ja
mov
xchg
call
jmp
add
jle
cmp
jb
fsubl
pop
mov
clc
mov
loope
add
shl
neg
sahf
adc
out
in
xlat
jmp
fisttpl
jbe
xchg
aaa
mov
ds
daa
jmp
scas
outsl
imul
les
fidivl
pushf
dec
push
lds
push
add
and
or
sbb
xchg
pop
inc
pop
into
pushf
mov
inc
aam
sub
push
jbe
in
or
pop
out
pop
mov
push
mov
loop
cmpsb
or
mov
lods
adc
inc
out
sbb
jnp
or
test
out
jmp
push
loop
mov
and
pop
add
mov
outsl
lcall
push
movsb
loopne
sub
push
push
sbb
mov
arpl
adc
dec
push
call
add
push
add
rolb
lret
cmp
xchg
dec
and
dec
mov
pop
rcrb
and
mov
mov
sub
xor
fisubrl
jge
xor
ds
pop
jmp
leave
mov
scas
sub
jmp
movsl
fdivs
inc
test
fdivs
xor
loop
pop
push
jno
xorb
adc
mov
or
pop
or
add
dec
loope
xor
ret
in
sub
xor
pop
add
neg
sahf
or
jmp
xor
inc
mov
test
sti
loop
js
xor
decl
jl
mov
ret
push
mov
lods
lret
or
and
pop
xor
push
adc
ljmp
or
rcrl
shl
cmpsl
scas
push
mov
gs
ret
lods
push
repz
jmp
pushw
mov
sub
pop
push
mov
inc
push
aas
and
cmc
ret
pop
orl
cmp
hlt
and
adc
jg
sbb
repz
xor
push
mov
mov
push
or
movsb
dec
push
lahf
sub
pusha
movsl
into
jo
popf
testb
inc
mov
sbb
sbb
jnp
arpl
jmp
es
arpl
sub
clc
jmp
inc
sub
pop
mov
push
xchg
dec
imul
ss
push
push
mov
add
inc
cmp
mov
imul
ja
or
push
xchg
andb
sub
inc
or
les
pop
jmp
outsl
and
adc
je
popf
push
mov
out
push
jno
pushf
add
or
aas
dec
push
mov
push
mov
jne
dec
add
lock
and
add
xor
mov
inc
xlat
mov
jmp
sahf
mov
push
inc
ljmp
sub
push
mov
daa
jne
sbb
sbb
lahf
das
pop
mov
in
negb
sub
lret
notl
add
sub
outsb
popa
notl
mov
mov
fcmovnu
sbb
mov
cmp
adc
and
pop
in
cld
add
inc
gs
pop
ret
sub
push
gs
push
dec
pop
inc
adc
pop
notl
pop
pop
sbb
sahf
sub
mov
in
shrl
out
add
pop
daa
addr16
or
inc
inc
aas
adcl
mov
sub
data16
cwtl
sub
push
xor
outsl
or
cmpsb
adc
jmp
das
shr
fimull
and
sahf
jecxz
inc
xor
fstpl
scas
add
add
add
popf
loopne
adc
sub
int
add
mov
mov
sbb
fisubl
or
ret
fs
les
sub
stos
pusha
subl
fwait
rcll
loope
and
orb
shr
dec
and
sbb
dec
xchg
jnp
jmp
and
and
inc
cmp
sub
ds
inc
insb
lahf
adc
test
cmp
cmp
inc
pop
lock
or
xchg
arpl
sub
or
and
sbb
push
dec
cmc
add
xor
imul
push
ds
sbb
test
in
and
inc
pushf
lcall
adc
add
or
push
push
pop
dec
pop
es
cmp
test
in
fistpll
repnz
jmp
jp
inc
or
and
fcmove
and
outsb
pusha
es
dec
xchg
sub
ror
adc
das
lea
mov
xor
int
dec
in
xor
dec
push
or
jecxz
fsubrp
int3
ret
adcb
add
push
add
pop
mov
loop
repz
sbb
mov
scas
loope
sub
mov
sbb
lret
shlb
pop
not
leave
mov
push
push
pushf
inc
pop
jmp
add
cld
push
pop
test
mov
dec
ret
pop
mov
jbe
pop
iret
or
add
ja
icebp
out
mov
ret
adc
loopne
cmp
or
cmp
jge
mov
jno
cwtl
add
pop
dec
mov
call
xor
mov
fdivrs
xor
icebp
pop
or
mov
jmp
mov
xor
add
outsb
cmp
sub
jmp
push
mov
test
xor
or
cs
push
xor
loopne
jge
xor
inc
repz
lods
pop
in
les
push
subb
insb
cltd
and
popf
pop
mov
xchg
pop
push
mov
push
mov
or
test
jl
dec
lar
cli
add
imul
gs
paddusw
sbb
cmpsl
jl
lret
adc
ss
and
imul
or
cld
divb
dec
xchg
popa
dec
shl
mov
inc
test
mov
xchg
dec
cmp
insl
fldenv
adc
mov
pop
fwait
pop
jmp
and
pop
jmp
sub
push
shrb
xor
incl
adc
popf
and
push
or
jp
add
das
cmp
push
nop
xchg
daa
jae
jb
cmp
dec
inc
cmp
sub
add
das
sbb
push
ljmp
xlat
or
cmp
dec
and
or
jmp
add
jmp
mov
or
sub
pop
scas
xchg
mov
mov
ljmp
push
pop
adc
pusha
stos
dec
pop
popf
dec
jno
or
cld
push
pop
mov
pop
xchg
adc
add
test
iret
cmpsb
out
dec
or
adc
pop
pop
hlt
jmp
jb
rcll
testb
jecxz
dec
shll
clc
dec
pop
hlt
xor
dec
mov
ss
daa
cs
iret
or
add
cld
push
pop
adc
pop
sbbl
pop
adc
jbe
div
dec
xchg
dec
push
mov
mov
xchg
sub
fucomi
add
outsb
add
popf
push
pushf
and
cmp
sub
jmp
xchg
push
sub
pop
test
into
inc
loopne
clc
push
xchg
cwtl
push
push
movsb
adcl
adc
adc
xor
or
shrb
jl
lahf
icebp
adc
sbb
add
movsl
insl
add
clc
inc
jge
and
jecxz
add
xor
pop
rcrb
inc
inc
loopne
and
mov
sbb
ljmp
xchg
push
in
fiaddl
sbb
inc
loope
add
mov
sbb
add
outsl
mov
push
push
mulb
ss
mov
jbe
adc
ss
in
xchg
or
jo
pop
xor
pushw
xchg
xchg
dec
clc
sub
imul
mov
shrl
sahf
aam
or
jmp
push
fs
imul
sub
imul
out
dec
cmp
xchg
jbe
aam
pop
jae
or
stc
sub
push
mov
enter
sub
es
jl
loopne
mov
xor
xor
pop
sub
sbbl
inc
imul
and
inc
sahf
mov
and
xor
mov
xor
out
push
outsl
and
popf
jmp
sti
std
lahf
pop
ss
push
push
decb
add
jnp
push
sbb
mov
or
adc
aaa
or
add
les
cmp
dec
cs
mov
call
sub
push
add
gs
and
dec
and
addl
sub
adc
inc
test
sti
mov
or
pop
xor
testb
xchg
xchg
inc
dec
push
push
mov
xor
sub
vpmacsdql
sbb
cmpps
xor
add
pop
enter
cmpb
mov
flds
dec
sub
mov
push
subb
fs
cli
push
mov
push
nop
xchg
std
xorb
in
or
cmp
lods
jmp
out
aam
dec
adc
adc
out
leave
mov
out
or
mov
push
mov
mov
stos
or
mov
mov
sub
pop
jge
mov
aaa
ljmp
stos
add
daa
adc
mov
push
or
shrb
pop
xchg
jns
inc
pop
subl
mov
push
mov
lods
sti
or
xor
adc
sbb
fs
jmp
test
adcb
fsts
jmp
and
pop
fs
push
sbb
lahf
jns
inc
jmp
or
popa
push
testl
cltd
mov
sarb
pop
orl
add
mov
call
push
pop
loope
mov
inc
add
inc
lret
repz
xor
mov
xor
aam
inc
inc
fs
mov
pop
dec
pcmpeqd
cmp
call
lret
push
push
sbbl
daa
roll
cmpsb
and
cs
sub
sbb
sbb
pop
adc
aaa
int3
dec
or
jmp
cmp
jmp
inc
cmp
lret
adc
pusha
mov
mov
stos
push
inc
cmpsl
push
adc
jne
mov
daa
sti
dec
inc
cmp
rol
jae
loopne
out
push
movsl
xor
adc
cmp
jbe
sub
lods
fnsave
leave
mov
sti
push
lods
cli
sbb
mov
shll
sub
adc
or
dec
inc
pop
mov
pop
xor
xor
enter
add
or
push
mov
or
jl
bound
je
adcl
sti
cmp
mov
hlt
fs
mov
and
fcoml
in
es
pop
pop
adc
push
add
cmp
es
adc
mov
test
ds
lods
mov
and
das
pop
insb
dec
cmp
or
mov
sub
xchg
clc
dec
xor
pop
adc
sbb
fldl
jle
cs
call
and
dec
xchg
push
xchg
loop
sub
or
mov
scas
or
jo
xchg
pop
and
or
notb
sbb
inc
sub
mov
cmp
cs
xchg
sbb
call
lret
lahf
sub
pop
xchg
jo
xchg
push
cmp
add
push
cs
xchg
mov
inc
fcompl
not
and
imul
les
sbb
mov
or
sub
cld
arpl
jmp
mov
mov
adcl
pop
pop
and
in
or
inc
aas
aam
scas
cmpsb
rorl
xor
fabs
movsl
jl
push
cmp
mov
mov
jge
imul
subb
add
inc
cmp
adc
ss
inc
cmp
loope
xchg
test
and
pop
andb
jecxz
aas
int3
int3
mov
sahf
add
mov
lahf
lahf
xor
push
push
cld
sub
and
imulb
fsubr
addr16
addl
pop
or
pop
jg
push
mov
pusha
clc
sub
sbb
sbb
sub
lahf
pop
push
sbb
push
push
xorb
xor
adc
pop
xor
jae
shlb
jmp
pop
aam
std
cmp
daa
fildl
inc
in
cmp
and
rcrb
js
pusha
je
mov
out
cmpsl
dec
xor
pop
or
push
sub
loopne
insl
and
pushf
cmp
xor
xchg
inc
fidivl
adc
outsl
lahf
xor
pop
xor
je
addr16
lods
or
rcl
sahf
pop
or
loopne
fadds
push
and
cmp
dec
sarl
xor
cmp
sbb
call
or
inc
cmp
jmp
jmp
pop
jge
sub
mov
negb
mov
pop
pop
fcom
pop
int
hlt
leave
pop
lds
add
jle
rcl
scas
mov
mov
repnz
xor
mov
jnp
and
sbb
mov
sub
jg
mov
pop
mov
cwtl
dec
sub
repnz
or
frstor
sbb
pop
push
xchg
push
inc
sub
xchg
mov
out
dec
mov
push
dec
bound
negl
sub
adc
in
pop
dec
mov
push
jb
out
cmp
inc
insl
dec
inc
add
sub
add
cmpsb
pop
into
sub
sub
lods
cmpl
inc
mov
cs
cld
add
xor
jbe
movsl
pusha
adc
into
mov
fstl
leave
test
test
or
fsubrl
pop
jb
pop
mov
bound
push
idivb
movsb
scas
add
cwtl
mov
bound
or
add
mov
lods
sar
inc
cmpsl
xchg
dec
rorb
or
jb
mov
mov
and
sub
pop
rorb
cmp
pop
scas
pop
lock
push
pop
or
mov
cmpl
fs
pop
lret
add
pop
jp
ret
xor
xchg
nop
add
xchg
sbbl
pop
insl
or
xor
mov
clc
xor
sbb
and
das
add
inc
push
aad
mov
or
jle,pn
ds
clc
movsl
dec
cmp
mov
push
insl
and
insb
test
adc
scas
js
mov
add
jnp
shlb
in
scas
fisttpl
daa
push
jmp
push
movsb
dec
xchg
loop
daa
scas
jl
jmp
dec
push
repz
xchg
ret
xor
add
push
lock
add
mov
cltd
sub
sahf
push
mov
adc
sbb
pop
mov
dec
or
mov
fldcw
pop
push
mov
call
stos
mov
push
arpl
push
pop
xor
jecxz
dec
adc
pop
ja
pop
adc
sub
std
inc
or
cmpsl
sbb
push
out
sub
in
adc
sub
lds
sub
cs
pop
push
outsl
add
gs
add
scas
frstors
sarl
add
bound
push
dec
pop
jo
pusha
sahf
pop
out
push
sbb
push
jecxz
testl
ret
cmp
pop
cwtl
mov
or
push
add
pushf
xchg
mov
cltd
lock
push
mov
jb
jl
push
dec
xor
push
jbe
hlt
xchg
cmpsb
or
mov
xlat
xchg
filds
das
fldcw
mov
shl
push
mov
xorb
xlat
jbe
mov
adc
pop
and
fstpt
push
adc
jnp
adc
mov
in
call
push
mov
mov
dec
add
and
lock
add
testl
out
mov
jb
jne
repz
repnz
pop
mov
push
shr
stos
push
mov
sub
xchg
sahf
fs
push
mov
push
jne
jl
cmp
jg
inc
pop
arpl
adc
mov
push
mov
jbe
pop
mov
xchg
je
adc
movsb
fldl
loopne
mov
sbb
push
cs
pop
sub
sbbl
push
aad
dec
dec
jle
and
ds
jmp
sub
js
cmp
loopne
inc
xor
adc
mov
testb
push
loop
lods
int3
aam
push
dec
fisubrs
cmp
xchg
push
mov
sbb
cwtl
add
dec
mov
inc
fimuls
lahf
testb
movlps
leave
cmpsb
add
repz
lods
shll
mov
int
or
lds
adc
xor
pop
imul
adc
mov
push
jns
add
push
push
sub
and
call
sbb
imul
rolb
ret
loopne
ret
xchg
out
xchg
add
xor
orb
jp
jmp
push
adc
mov
or
jp
incb
sub
je
jmp
lret
lds
or
out
push
cmp
test
inc
mov
sbb
sbb
insb
cmp
cmp
sub
lret
pop
shr
inc
jecxz
data16
sbb
cmp
scas
adc
popa
arpl
mov
push
push
inc
test
and
clc
pop
pop
mov
dec
out
out
lret
out
push
jl
xchg
add
xor
jbe
mov
jb
mov
mov
loop
cmp
mov
fcompl
jmp
sub
push
pop
mov
dec
movsb
pop
xor
out
in
sub
roll
pop
es
pop
push
in
add
and
push
outsb
rcl
mov
cmp
sub
aad
sub
mov
inc
loopne
into
cs
sarb
addr16
push
stc
test
add
xchg
test
loop
ja
daa
push
jmp
add
movsl
mov
mov
loope
jnp
mov
daa
std
push
mov
jmp
into
pop
xorl
xchg
bound
rol
subb
shlb
test
fists
inc
pop
push
mov
sti
push
div
jo
ficompl
ss
mov
int
nop
add
xchg
or
pop
and
cwtl
lds
mov
xor
xchg
mulb
loope
mov
mov
xchg
and
cmp
adc
int3
add
je
ja
test
lret
sbb
adc
rorb
adc
faddl
dec
dec
add
movb
inc
pop
mov
test
push
push
jle
mov
jg
roll
js
pop
js
pop
push
pop
sub
inc
lahf
bswap
aaa
fstpt
not
xor
fcoms
pushf
sbb
aas
pushl
adc
or
mov
push
jge
dec
fcmovnu
int3
push
inc
push
jmp
mov
pop
mov
imul
mov
dec
jo
jmp
xor
int3
pop
in
hlt
adc
inc
leave
xor
scas
jmp
out
shlb
lods
pop
push
gs
xchg
pop
mov
sub
xchg
lods
imul
inc
adc
inc
pop
push
mov
gs
xor
mov
fisubrs
lret
in
jmp
ljmp
insl
mov
repnz
inc
cmp
mov
xor
ds
push
rcll
test
mov
push
inc
loop
push
push
and
pusha
rcl
dec
jl
test
jecxz
inc
subl
sbb
and
cmp
stc
imul
add
mov
pop
push
mov
pop
adc
das
mov
jmp
pop
aam
lret
add
jne
mov
dec
dec
in
xor
xor
daa
lock
mov
lods
adc
in
outsl
ret
sbb
inc
sub
jbe
push
pop
jle
les
fwait
push
push
idivl
dec
dec
cmc
xor
ret
add
or
lret
adc
mov
lahf
or
cmpsl
ror
mov
or
pop
imul
push
mov
enter
arpl
je
jg
push
jp
xor
or
outsl
cmpb
pop
rcll
jne
and
aas
pop
jmp
pop
add
jbe
outsl
dec
icebp
call
inc
lods
add
push
xchg
mov
jb
xor
sub
popa
pop
or
push
inc
ljmp
test
adc
pop
lds
inc
jecxz
in
inc
add
inc
inc
shlb
pop
dec
or
dec
inc
ds
mov
add
dec
lret
call
or
pop
cld
jno
adc
lds
and
jmp
into
sbb
pop
xor
or
mov
adc
sub
hlt
cmp
jl
sahf
cmp
sub
nop
loop
sub
test
insb
add
mov
sahf
xor
hlt
pop
imul
es
mov
or
cmpsl
pop
cmp
scas
mov
pop
xor
or
and
stc
leave
sub
enter
popf
pop
mov
and
jns
lahf
jle
push
adc
scas
loop
xor
loop
cmc
test
inc
ss
mov
add
pop
xor
pop
push
lret
leave
fiadds
repz
es
inc
push
mov
jo
cld
xchg
shrb
movsl
cmc
cltd
leave
adc
imul
and
pop
rclb
or
cld
cmc
ret
jmp
andb
daa
push
shrl
in
or
dec
jae
iret
sti
lea
inc
lret
rcr
mov
jp,pn
pop
mov
push
xchg
dec
add
xor
int3
jo
rclb
leave
stos
in
xchg
add
fcoms
setb
and
lock
mov
enter
xor
leave
aam
mov
dec
imul
jns
inc
mov
imull
jmp
mov
cmp
stc
addr16
mov
lea
imul
adc
jp
sub
lea
sub
sub
mov
mov
or
adc
cmpsl
cmp
out
out
mov
xchg
push
ja
fwait
dec
scas
sub
or
movsl
xor
push
jne
jecxz
dec
pop
inc
dec
mov
xor
cld
stos
or
in
or
jb
xor
push
dec
adc
xor
call
sub
pop
fadd
aaa
cs
sub
test
mov
leave
jbe
psubsb
shr
arpl
or
mov
mov
sub
dec
test
into
add
pop
push
xlat
shll
test
ljmp
sbb
xor
mov
dec
jg
loop
push
pop
out
mov
daa
lcall
cmc
and
loop
add
fidivl
sub
pop
add
jo
orb
pop
sub
mov
ljmp
add
std
push
xchg
or
sub
leave
imul
mov
rorb
dec
inc
xchg
je
mov
movsl
push
sub
or
cmp
mov
mov
mov
xchg
loopne
adc
xchg
push
fidivrs
xorb
popl
or
repnz
xor
xlat
cmpsl
pop
scas
popl
lds
daa
insb
push
sti
and
aas
in
push
lret
sahf
cld
das
fcmove
jno
xor
les
pushf
call
and
inc
jl
add
or
jge
jae
push
movsb
scas
stos
mov
add
push
fs
pop
aad
cwtl
ficompl
enter
dec
daa
cli
and
sub
incb
push
enter
pop
and
gs
mov
movsb
fstl
shl
pop
pop
in
and
ds
and
and
lahf
clc
and
aas
fcmove
js
jle
popf
adc
fs
pop
push
jmp
or
out
push
cwtl
add
cli
loope
jle
fldcw
lods
loope
popa
fsts
inc
and
call
jno
clc
shrb
xor
adc
sub
inc
xchg
mov
ds
popa
xchg
test
lock
test
pop
shrb
jne
xlat
mov
clc
filds
and
jo
jge
adc
dec
repz
inc
add
jecxz
stos
mov
dec
jne
jo
and
dec
fistl
sbb
add
sub
ss
dec
push
or
inc
dec
push
jmp
add
sub
cs
das
andb
gs
rorb
loopne
pop
dec
add
add
mov
mov
mov
mov
loop
cli
inc
sti
ret
mov
xchg
jmp
inc
mov
cmp
xchg
add
jb
or
pusha
jae
jg
add
cmp
jns
dec
xchg
outsb
adc
jno
add
xchg
lahf
popa
mov
xor
pushf
mov
jmp
fwait
mov
adc
add
mov
sbb
std
and
fiadds
and
xorb
jl
mov
pop
cmpsb
arpl
mov
pop
add
sub
add
loopne
mov
pusha
push
add
push
clc
xlat
inc
mov
scas
mov
cmc
imulb
notl
addr16
repz
xchg
mov
jge
cmp
mull
std
sbb
mov
es
jl
sbb
lods
cmpsb
ljmp
sub
pop
std
dec
outsl
invd
dec
xor
jecxz
xchg
pop
push
sahf
outsl
test
mov
xchg
movsb
mov
imul
leave
pop
pop
seto
and
dec
and
mull
pop
dec
pop
jno
test
cli
int3
les
jb
jmp
xchg
push
add
and
inc
mov
mov
adc
xor
jl
into
mov
shrl
sahf
pushl
mov
stc
ret
inc
pop
add
test
push
into
fucomp
ja
mov
push
mov
in
cmpsb
xchg
dec
call
into
jmp
push
push
mov
jmp
inc
stos
orl
and
add
cwtl
jmp
push
call
xor
mull
icebp
insl
leave
add
and
inc
call
das
lds
jp
insb
lods
mov
cmp
shrb
in
rcr
xor
inc
pusha
push
push
sbb
pop
sub
or
pop
push
adc
out
pop
ret
mov
jno
push
mov
mov
add
stc
test
repz
out
hlt
add
mov
and
inc
inc
movsl
adc
push
cmc
adc
mov
dec
in
scas
add
add
pop
fstps
push
jmp
loop
inc
sbb
or
xchg
test
sti
sub
jno
pop
cmp
sarb
pushf
dec
cs
mov
xchg
pop
add
sub
or
jle
ret
cmp
rolb
pop
pop
in
xor
add
or
and
mov
push
mov
sbb
or
mov
aas
push
clc
adc
pop
pop
jge
mov
add
inc
bound
sub
scas
jmp
adc
jg
adc
inc
sbb
adc
add
loope
dec
mov
add
inc
add
fsubs
loopne
cmp
push
or
fldl
jmp
sarb
push
rolb
dec
or
inc
xchg
iret
xor
adc
hlt
jg
or
scas
mov
sub
push
pop
das
sub
mov
idiv
push
push
mov
add
mov
adc
sarb
push
prefetchnta
adc
jmp
in
push
lock
xchg
adc
jge
mov
movb
push
push
mov
out
test
jne
movsb
dec
push
std
jb
or
push
push
push
pop
add
mov
cs
es
imul
ret
idivl
inc
adc
iret
in
jne
sub
pop
mov
outsb
jge
out
dec
in
and
xor
or
or
in
outsl
lahf
push
dec
sub
pop
xor
sbb
jae
mov
cmp
enter
and
insb
popa
add
xor
cld
xor
push
bound
xor
pop
pop
push
imul
push
pop
cli
leave
std
inc
rolb
xor
pop
jo
push
adc
push
scas
push
fmuls
dec
cmpsb
loope
outsl
cmp
daa
daa
pop
fdivp
clc
and
movsb
shll
add
mov
ret
pusha
mov
sub
movsb
jmp
adc
xchg
pop
add
jmp
mov
mov
ror
pop
add
push
jmp
xchg
push
rorl
dec
sub
insl
or
inc
pop
push
frstor
daa
inc
mov
or
sub
sti
sub
in
or
dec
jmp
shrl
sub
mov
lds
jne
lret
es
incl
inc
jecxz
and
jge
pop
in
add
push
out
adc
pop
mov
jne
scas
roll
iret
ljmp
or
cmp
inc
adc
lock
call
and
shrb
push
add
jmp
les
add
push
pusha
cmpsl
lret
movsb
push
cmp
mov
push
cmp
ss
push
dec
test
in
decl
lock
rol
sub
ret
call
adc
and
xor
cmp
jmp
addr16
clc
js
comiss
scas
mov
dec
push
cmp
pop
jnp
aam
xor
pusha
pop
mov
mov
outsl
push
or
push
mov
jnp
cld
add
mov
std
repnz
jmp
daa
push
jb
shl
lods
cltd
pop
lret
sub
add
jmp
adc
push
push
inc
add
test
xchg
aas
int
pop
call
mov
bound
out
orl
sbb
xchg
jns
and
mov
or
test
scas
xchg
add
push
add
sbb
ljmp
movsl
add
add
neg
jmp
inc
or
fnstsw
dec
xor
mov
push
sub
enter
testl
push
inc
dec
repnz
push
adc
and
dec
clc
mov
xchg
add
test
inc
jl
dec
or
bound
in
jmp
insb
xchg
clc
jl
xor
loop
fisubrs
mov
push
lret
or
ljmp
mov
push
inc
js
xchg
arpl
add
idivb
add
call
push
pusha
hlt
and
cld
push
dec
xchg
pop
dec
in
int3
jmp
mov
or
pop
pop
mov
imul
sub
test
ds
addr16
test
pop
jmp
mov
pop
stos
iret
push
push
shr
imul
clc
adc
ja
ficompl
mov
jp
nop
cli
xchg
jb
or
cld
jo
cmp
dec
insb
dec
stos
xchg
push
jo
jmp
xchg
cwtl
push
sub
xor
adc
mov
dec
push
pop
and
jp
add
sub
xchg
faddl
inc
dec
jmp
push
lea
sub
mov
mov
cmovno
sub
xchg
mov
std
subb
shl
mov
jmp
add
and
cmp
cmp
test
outsl
pop
jmp
mov
cltd
jne
jg
adc
cmp
rcrb
daa
outsb
daa
push
or
pcmpgtb
or
test
arpl
daa
mov
xchg
mov
push
add
mov
lds
xchg
adc
je
push
xor
mov
sbb
outsl
push
push
loope
das
inc
add
xor
jne
add
jne
add
pop
push
mov
add
sahf
cmpsb
add
and
rorl
push
add
das
push
cwtl
mov
mov
mov
cs
jmp
iret
push
pop
cwtl
push
sub
push
jle
jns
inc
dec
mov
cs
dec
mov
sub
add
ja
mov
rcrb
sub
mov
push
ljmp
lock
hlt
popf
pop
cmp
push
mov
adc
shlb
ret
and
mov
inc
outsb
scas
dec
andb
mov
stc
add
and
into
jo
dec
inc
lods
adc
lea
in
adc
les
add
insl
dec
and
push
jmp
sub
arpl
out
outsl
jg
jne
dec
mov
fdivrl
jecxz
or
cmpsb
cwtl
mov
mov
shl
fldenv
adcb
jmp
out
dec
lds
push
cmpsb
nop
in
in
lods
mov
mov
aas
loop
add
jo
arpl
cmp
mov
xchg
ljmp
sti
dec
mov
dec
xchg
mov
mov
add
neg
xchg
dec
repnz
push
repz
cmp
push
lahf
daa
push
repz
out
mov
push
dec
jbe
js
shr
orl
sub
daa
dec
push
push
jnp
inc
push
mov
adc
jb
push
lods
cli
shll
pop
dec
mov
ja
push
pop
scas
out
pop
sub
in
popf
adc
pop
pop
jo
jmp
ja
imul
rcl
xorl
or
movsl
push
inc
add
fs
inc
or
inc
shr
jmp
lret
fisttps
adc
sbb
fmul
stos
add
xchg
jne
xchg
loop
int3
add
xor
loope
es
sbb
xor
hlt
shlb
push
mov
and
sbbb
ljmp
adc
and
jmp
loop
dec
adc
xchg
sbb
int
pop
cmc
insb
cli
sbb
pop
adc
inc
push
adc
push
xchg
add
imul
clc
int
jl
mov
ficoml
mov
and
addb
pop
cmp
add
jmp
sar
jae
pop
jecxz
add
inc
push
pop
sbb
repnz
and
inc
inc
push
add
lds
add
push
cmp
jl
cwtl
mov
mov
dec
xor
adc
mov
add
cmp
test
pop
les
dec
adcl
pop
dec
jne
lea
cmp
and
push
ja
mov
mov
cmp
push
cmp
or
xlat
invd
movsb
pop
adc
movsl
out
outsb
in
mov
inc
push
cld
sub
dec
mov
imul
clc
xchg
popf
jns
xor
pop
stos
pop
call
scas
loope
aas
mov
xchg
mov
sub
loopne
cli
sbb
mov
lahf
xchg
bnd
push
xchg
push
inc
and
xor
or
je
movsl
std
xor
in
shll
add
mov
lahf
je
ret
push
xor
test
lods
sbb
mov
adc
add
xchg
pop
or
and
cmp
jg
movsb
les
or
jg
addl
cwtl
pusha
fisttpl
orb
xchg
mov
ficoml
jg
mov
mov
imul
repnz
pop
rorb
lahf
or
not
jge
leave
sub
xor
dec
sub
cli
adc
sbb
xchg
pop
sub
xchg
push
shrb
cld
push
fs
sub
mov
pusha
loop
ja
gs
and
aaa
notb
and
jg
ds
and
rcrl
sbb
in
sub
add
cmp
mov
lret
cmp
sub
mov
daa
imul
dec
lret
addr16
or
adc
lahf
sbb
xchg
jp
outsl
push
and
notl
lock
add
clc
cld
mov
or
jb
outsb
pop
pop
aas
std
insl
cmp
mov
xchg
jge
dec
adc
fnstsw
lods
fs
xchg
and
stc
mov
sahf
sub
pop
jl
adc
mov
inc
in
inc
shr
inc
dec
mov
cmpsb
lods
add
test
push
mov
sti
mov
push
mov
push
pop
das
mov
xor
jb
out
and
mov
mov
pushf
cmpsl
pop
jge
xchg
xor
nop
push
jnp
jbe
daa
sub
or
and
and
push
lret
insb
in
notl
mov
out
das
pop
or
adc
negl
adc
jmp
xor
sub
mov
lahf
add
push
mov
addr16
push
jmp
mov
fnstcw
jnp
das
ss
xor
pop
mov
xchg
iret
mov
add
push
aam
and
dec
pop
roll
dec
mov
sbb
rolb
aaa
sub
ss
lahf
xchg
loope
dec
fwait
or
xor
sbb
mov
mov
aas
jmp
jmp
subb
pop
bnd
stos
add
mov
jne
xor
movsb
test
insb
adc
jb
mov
gs
es
and
sbb
jae
mov
scas
or
or
clc
push
push
mov
lahf
rcrl
aas
xchg
mov
mov
mov
jne
pusha
jl
mov
xor
stos
mov
and
and
mov
jnp
in
test
adc
lret
out
inc
mov
rcll
jbe
xor
jp
test
outsl
cmp
outsl
pop
push
mov
stos
xor
daa
add
push
shlb
flds
or
jl
mov
and
add
mov
cmp
xor
mov
movsb
cs
adc
add
jbe
imul
mov
dec
fadds
shl
mov
adc
jno
pop
repz
xchg
mov
xchg
std
push
mov
pop
pop
push
das
test
sar
mov
into
pop
sahf
xchg
pop
jmp
push
lock
pushf
adc
loop
pop
push
and
popa
adc
xchg
xor
pop
in
jns
int
inc
push
adcl
cmc
pop
mov
stc
stos
andb
dec
rcll
push
in
cmp
adc
add
cmp
shlb
inc
jle
dec
orb
pop
fucompp
mov
push
pop
loopne
mov
nop
jp
loope
push
subb
and
xor
aam
fldl
xchg
sbbb
push
in
sub
xor
loop
sbb
add
leave
scas
adc
and
and
inc
lahf
arpl
jmp
push
lods
stc
mov
dec
xor
cld
cld
dec
add
std
test
add
and
push
pop
cmp
add
test
mov
sbb
sbb
pop
clc
fdivp
jmp
mov
mov
out
loopne
cld
negb
xlat
inc
or
mov
mov
out
or
mov
mov
adc
cmc
pop
mov
call
stos
stc
jl
dec
ja
fildl
pop
ljmp
or
inc
rclb
push
xchg
sub
dec
js
ja
popa
mov
pop
mov
ds
test
pop
fbstp
mov
jmp
movb
std
ja
iret
dec
jp
and
adc
filds
cs
sarb
jmp
add
adc
in
jmp
or
hlt
pop
shll
add
pop
xchg
adc
jmp
mov
pop
repz
or
inc
pop
dec
xchg
add
sub
push
jmp
fcos
xchg
push
scas
daa
xchg
bnd
mov
jp
pusha
pop
neg
jne
stc
mov
rolb
cmp
andb
or
cmp
jle
lods
adc
das
and
jg
neg
leave
out
pop
push
scas
out
loop
out
mov
lret
pop
loope
push
pop
xor
xor
push
push
xor
mov
xor
mov
xor
jnp
adc
mov
cmp
mov
cmp
sub
stos
cltd
push
sub
repz
js
ret
out
add
jns
lret
and
jge
sub
xlat
pushf
incl
ret
sub
jecxz
dec
push
or
jmp
or
fistpll
out
mov
dec
mov
aam
loopne
jmp
pop
repz
mov
dec
pop
push
stos
sub
add
je
add
aaa
or
sub
push
xor
jmp
pop
dec
in
cmpsl
adc
jns
mov
call
lret
in
or
jo
jne
loop
push
pop
and
mov
sub
mov
and
dec
jns
inc
push
mov
push
jmp
bound
mov
cmpsl
push
clc
rolb
xchg
add
fadds
sub
dec
mov
outsb
add
add
rcrl
clc
cmp
ficomps
inc
pop
xor
mov
and
aam
mov
rolb
or
fisubl
or
add
daa
xor
scas
fnstenv
inc
add
jns
sbb
adc
mov
add
repz
fadds
inc
or
jo
push
lock
add
cmc
out
mov
jmp
aaa
add
dec
push
bound
push
addr16
jno
jae
pop
clc
stc
mov
mov
sbb
and
sub
cmp
je
mov
shlb
imul
rorb
adc
push
movsb
jg
in
lret
mov
push
push
imul
testb
cmp
inc
add
jmp
movsb
mov
or
add
int3
xorl
pop
cmp
ror
shr
pop
int
in
inc
dec
push
sbb
pop
cmpb
xor
push
xchg
jae
js
inc
push
roll
out
push
or
add
fs
jg
sub
xor
in
push
lods
jmp
hlt
ror
adc
movsl
mov
sbb
nop
push
mov
cmp
dec
add
adc
jg
fstp
pusha
sbb
or
loope
sbb
and
es
add
repz
pop
es
push
pop
mov
add
loope
movsl
push
mov
addr16
aad
or
enter
jmp
fmull
jne
inc
inc
jbe
xor
insl
xor
or
aas
test
jmp
adc
push
int
sub
mov
fsubl
adc
xor
imul
sahf
jno
mov
aam
test
std
jge
sub
int3
lds
mov
mov
mov
push
dec
stos
push
pushf
loopne
jmp
push
push
inc
aaa
xlat
sbb
dec
scas
push
out
mov
mov
das
or
call
pop
hlt
fsts
adc
out
add
mov
mov
mov
pop
and
in
cli
jg
adc
dec
lret
mov
shr
or
mov
xor
ret
lock
add
icebp
inc
sahf
clc
xchg
das
les
mov
mov
xchg
cmp
bound
test
cli
xlat
or
add
xor
int3
cmp
insl
cmpb
cli
mov
jb
lahf
rorb
imul
add
out
pop
dec
dec
unpckhps
in
mov
mov
out
sbb
int3
dec
adc
lcall
nop
shl
repz
ret
outsl
xchg
aaa
jecxz
jmp
push
fs
jg
push
fldl
push
mov
rcll
popf
mov
xchg
icebp
fnstcw
jo
cmp
sub
push
mov
sub
shr
push
push
mov
or
dec
add
sbb
cmp
stos
ljmp
mov
lds
std
jae
lret
std
mov
int3
jmp
push
andb
lea
mov
mov
push
sarb
sub
test
in
inc
xlat
mov
and
stc
jle
imul
pop
pop
push
cmp
into
pop
incl
sub
data16
jns
or
icebp
pop
add
mov
push
sub
pop
in
dec
pop
iret
or
mov
pop
mov
add
sub
jmp
nop
sub
jge
lock
adc
xor
das
pop
aam
ret
push
or
aad
and
push
gs
iret
cltd
imul
xchg
jb
and
mov
ret
aam
movsb
or
mov
push
lds
or
outsl
call
and
std
and
outsl
rcll
cmpsb
add
negb
inc
jns
std
inc
and
test
and
pop
mov
jae
in
cmp
mov
and
adc
xor
jecxz
cmp
mov
cmpb
adc
lds
cltd
pop
and
jmp
psrld
sub
in
xor
add
sbb
xor
ljmp
lret
or
mov
scas
push
jno
add
sub
jnp
movsb
adc
push
mov
add
mov
push
push
jp
jmp
adc
dec
or
hlt
jno
lret
in
inc
test
add
mov
dec
cmpsb
call
inc
clc
ljmp
fists
stos
inc
out
out
lcall
cmp
enter
cld
and
mov
jp
pop
jecxz
lret
pop
je
shl
addr16
cs
dec
pop
jne
imul
pusha
push
pop
add
shl
pop
adc
adc
imul
cli
mov
dec
fiadds
add
mov
pop
push
ja
xor
add
jl
cmp
jbe
inc
in
stos
inc
and
and
jmp
mov
stos
je
ss
lods
sub
jmp
jmp
add
in
jl
pop
push
inc
hlt
inc
aas
add
gs
pop
stos
out
lahf
loopne
mov
or
hlt
xorl
pop
cwtl
or
pop
fwait
pop
jl
clc
idiv
loop
pushl
or
fmulp
mov
mov
mov
aaa
jns
mov
dec
pop
dec
cmp
mov
outsl
popf
pop
test
or
xchg
cmpb
and
pop
xchg
andl
jno
enter
xor
cmp
jmp
push
inc
mov
jl
shr
jl
cli
xor
cmp
inc
shl
xchg
test
es
jb
testl
mov
scas
dec
outsl
jne
mov
add
push
add
jae
mov
pusha
es
xor
mov
sbb
and
or
enter
inc
mov
inc
imul
dec
fnstenv
aad
test
jno
imul
cmp
sti
into
jg
push
shlb
data16
inc
sbb
inc
scas
xor
pop
or
nop
push
sti
aaa
daa
bound
add
xchg
jmp
mov
js
rcrl
add
sbb
lods
pop
subb
inc
fs
loop
into
jg
jp
fwait
icebp
jne
test
fnstsw
fcoms
dec
add
sub
scas
out
dec
movsl
test
mov
or
cmp
adc
or
adc
pop
mov
xor
inc
adc
add
testl
and
cltd
inc
aam
add
pop
sbbl
jl
das
xchg
add
sbb
cmp
stc
adc
int3
pop
sub
cmp
jne
pop
sbb
sub
cs
dec
mov
mov
inc
jmp
and
adc
or
mov
ret
adc
iret
inc
or
test
mov
cmp
ljmp
mov
fcomi
xor
jbe
and
pop
sub
test
push
in
push
cmpsb
mov
je
cmp
xchg
sub
pop
ss
bnd
adc
pop
cmc
jns
push
ja
jg
jl
add
pop
insb
inc
jecxz
les
inc
mov
or
sarl
inc
loopne
mov
mov
aam
jnp
push
popf
dec
je
cli
sub
cltd
xchg
or
dec
xchg
jne
cmp
and
push
mov
scas
popa
add
fs
ja
jmp
sub
iret
loop
idiv
cmpb
fsubl
xchg
dec
sub
dec
jns
xchg
lret
faddl
pop
or
sbb
lds
sub
enter
sub
pop
mov
add
movsl
xor
dec
mov
rorl
or
push
sub
dec
out
or
ja
insb
cmp
jmp
inc
adc
jge
arpl
push
xchg
inc
xor
repnz
or
push
push
jp
dec
mov
les
dec
dec
imul
adc
push
les
dec
sbb
sub
jmp
jae
push
mov
jns
adc
not
add
xchg
sub
sbb
push
out
cmp
test
or
sbb
push
pushw
or
aad
jl
das
mov
mov
not
shl
stc
pop
movsl
adc
inc
add
and
mov
push
pushf
or
test
sub
flds
mov
sub
mov
push
jecxz
nop
push
xchg
clc
and
jmp
fistpll
in
das
lock
je
jmp
push
push
pop
les
shl
xor
jge
js
pushf
test
dec
jecxz
sub
mov
iret
out
mov
dec
lds
popf
bound
and
mov
outsl
fldt
fldcw
movsb
push
dec
pop
jmp
rcr
test
push
mov
push
out
and
mov
pop
push
pushf
stc
or
in
data16
aas
cmp
add
clc
jmp
cmp
inc
jns
bound
jns
nop
mov
sbb
sbb
jo
mov
add
dec
and
pop
add
jae
xlat
jnp
lock
jb
mov
shrb
repnz
or
adc
lahf
sub
mov
dec
out
xchg
jp
and
btc
push
add
sbb
popa
icebp
adc
sub
repnz
pop
mov
add
pop
fildll
loop
ud2
xchg
lds
scas
sub
dec
dec
pop
push
popf
cli
cs
add
pop
mov
xchg
stc
sub
add
out
test
rorb
shl
jae
pop
aaa
mov
pop
imul
sti
pop
jmp
div
fcompl
sub
mov
push
bound
arpl
mov
addb
notl
sbbb
mov
mov
es
popa
adc
sbb
push
push
add
aam
mov
subl
shlb
adc
jo
icebp
sbb
add
je
daa
gs
fcoml
mov
push
pop
test
xchg
xor
nop
add
xchg
push
pop
inc
mov
test
jbe
add
aas
sbb
sub
std
inc
sti
adc
lods
and
or
dec
in
and
jmp
push
push
int3
jne
mov
loopne
call
leave
shlb
mov
or
cli
or
clc
add
add
in
insl
and
adc
adc
int3
dec
add
push
push
sbb
lret
add
pop
push
icebp
cltd
insb
or
dec
std
pop
push
jge
clc
cmp
aad
jno
dec
mov
mov
jbe
mov
push
xor
in
adc
insl
sbb
mov
mov
add
scas
xchg
pop
sub
and
test
jae
pop
mov
pop
sub
fadd
mov
mov
shrl
inc
push
fdiv
jmp
cli
popa
adc
add
ret
stc
int
leave
jne
and
cld
xchg
bound
je
pop
pop
jl
mov
cli
cli
sub
mov
movsb
inc
pop
adc
dec
dec
mov
jo
call
jno
and
stc
fcomi
aaa
enter
popf
bound
cmc
mov
push
pop
xorl
clc
xor
xor
call
adc
data16
pop
lods
jle
sub
mov
cs
pop
int3
mov
das
lds
test
or
pop
repz
pop
pop
pop
and
scas
lock
test
add
push
test
loope
xchg
push
or
jne
cmp
cmc
inc
lcall
mov
and
mov
mov
or
or
das
stos
lea
idivl
push
inc
jmp
add
jmp
in
cmp
mov
ret
pop
mov
sub
cmp
lds
mov
in
sub
cltd
mov
xlat
or
fmulp
aam
adc
and
cmp
mov
jmp
adc
mov
sbb
loope
push
sub
and
add
pop
mov
jns
add
cld
sbb
pop
add
es
imul
pop
add
out
sub
cwtl
add
push
pop
nop
insb
imul
frstor
scas
popf
mov
pop
dec
int3
loopne
xor
mov
sbb
rorb
adc
mov
pushf
aaa
jmp
pop
cwtl
lods
inc
gs
push
je
cld
jae
jle
jl
mov
fadds
adc
pop
pushw
movsl
and
add
jns
mov
jo
xor
in
inc
xor
xchg
adc
jge
add
das
das
outsl
into
repz
movsb
fs
cld
xlat
or
push
mov
fisttpl
scas
or
int3
or
inc
pop
or
push
cli
mov
or
jbe
dec
lock
and
dec
pushf
inc
pop
cmp
mov
and
cli
mov
ror
add
test
mov
lret
in
sub
sbb
call
das
jno
cmpsb
rcll
add
push
ljmp
mov
pop
mov
xor
insb
fwait
mov
js
mov
fidivs
add
xchg
incb
sub
inc
hlt
imul
cmp
sub
cmp
popf
icebp
movsl
bound
out
lock
mulb
pop
rcrb
pop
daa
fistl
sar
in
sub
enter
or
pushf
jns
pusha
dec
jns
fists
add
dec
shl
sub
add
mov
stos
mov
adc
repz
sub
xor
cmp
outsb
pop
sub
pop
sub
sub
jnp
pop
or
or
cmp
iret
js
adc
xchg
inc
mov
add
sbb
push
cmp
xchg
scas
and
mov
push
mov
js
pop
sub
jmp
mov
mov
add
push
push
jmp
std
push
sub
mov
or
test
addr16
fisubrs
or
xlat
add
xor
cmp
and
jg
cmp
jae
or
mov
rcll
pop
movsb
and
adc
test
lahf
cld
lea
fs
sbb
jmp
xorb
ja
xor
out
adc
sub
jno
lcall
test
stos
cs
or
mov
push
sub
sub
cmp
pop
testb
sub
ss
out
mov
popf
mov
add
fwait
xchg
clc
xor
cmp
daa
xchg
jb
dec
pop
int3
out
xchg
jo
add
inc
and
roll
jno
jmp
pop
jb
addr16
loop
sarb
sbb
pop
std
icebp
and
adc
jb
inc
add
jo
inc
cwtl
popf
push
cmp
or
int3
mov
inc
cmpsl
xlat
adc
sub
mov
cli
mov
adc
cld
in
scas
movsb
inc
pop
jno
bound
cs
cs
add
ja
ljmp
fnstenv
out
cmc
rorl
pop
mov
jg
mov
jns
lret
bound
mov
mov
adc
and
fldcw
xlat
rcll
scas
push
and
pop
mov
mov
sarb
shr
xor
pop
sti
mov
sub
lods
test
xchg
jge
rep
aam
xchg
fcomi
in
pop
add
jl
and
jl
imul
bound
mov
testb
stc
xor
push
push
lahf
mov
inc
mov
insb
jmp
xchg
mov
jmp
mov
add
scas
xchg
pop
pop
punpcklbw
xchg
cwtl
lcall
cmp
jo
and
sbb
push
inc
add
iret
cltd
or
adc
mov
push
andb
mov
push
stos
push
and
sti
push
jmp
dec
dec
add
push
lds
shlb
sar
dec
pop
sbb
lret
mov
lret
dec
dec
outsl
and
ds
das
pop
movl
xor
pop
jmp
pmulhuw
in
xor
insb
mov
or
pop
or
fldcw
jg
fwait
out
into
xor
push
test
mov
test
xchg
clc
cmp
sbb
arpl
test
push
mov
rclb
inc
push
test
int3
rclb
test
call
add
cmp
scas
aad
in
push
add
dec
mov
adc
in
push
aas
push
adcl
icebp
imul
ljmp
repnz
int3
ljmp
mov
dec
mov
lret
push
jle
cwtl
and
into
fwait
cli
xchg
mov
dec
ljmp
fimull
pusha
mov
test
xor
clc
xor
sub
inc
dec
mov
or
into
repnz
or
outsb
aam
or
adc
in
adc
add
cmc
bound
xchg
popa
adc
les
arpl
nop
mov
icebp
scas
subb
push
xor
roll
mov
sbb
sbb
adc
fsubrs
push
vpsubq
rolb
and
sub
or
repnz
cmc
push
out
sub
inc
pop
lock
js
pop
adc
sbb
xor
pop
shrl
push
pop
add
dec
js
pop
lcall
cmp
fstpl
add
dec
aaa
ficoml
in
test
mov
negb
jae
test
adc
arpl
xchg
and
jg
ljmp
mov
push
cli
mov
insl
das
sar
roll
add
cwtl
loope
or
rcrl
or
cld
jnp
int3
insb
or
push
sahf
add
das
pop
insl
inc
out
leave
jmp
inc
add
and
mov
gs
dec
jge
push
movsl
sub
ljmp
fisttpll
adc
and
or
add
mov
xor
and
xor
cvtps2pi
sarb
jmp
xchg
fmull
add
movlps
xchg
roll
scas
das
sub
decb
xchg
push
cmc
repz
jg
dec
pop
call
mov
fwait
or
sub
jecxz
and
and
add
aaa
sbb
and
mov
mov
xchg
lds
inc
xor
into
rolb
and
pusha
or
add
addr16
or
jae
xchg
pop
add
xchg
adc
xor
push
loope
add
adcb
mov
adc
mov
xchg
xor
ret
mov
jecxz
mov
cmpsb
pop
lock
jmp
mov
inc
add
mov
or
jmp
out
dec
inc
mov
clc
mov
mov
pop
jmp
mov
adc
mov
xchg
mov
sub
cmp
and
shr
mov
push
push
bound
mov
add
pop
pop
or
popf
daa
das
push
cmpsl
stos
fcomp
gs
sti
sbb
mov
push
pushl
inc
mov
dec
sub
ds
jmp
mov
mov
mov
or
ja
and
mov
inc
popa
cmp
mov
leave
ret
pop
jo
and
shll
test
inc
in
cmp
or
jbe
dec
or
mov
jmp
xor
subl
push
push
or
int
lock
mov
mov
add
cmp
inc
add
mov
mov
dec
test
test
push
pop
jg
mov
jecxz
xchg
mov
add
sub
jp
test
inc
push
neg
push
jne
dec
test
mov
ret
lock
jp
xchg
lods
jl
mov
pop
push
or
adc
jmp
loopne
add
mov
pop
std
and
add
into
pop
neg
push
push
push
mov
or
mov
sbb
xchg
mov
push
cli
mov
js
push
frstor
lock
in
push
out
and
push
add
and
xor
inc
ficoms
shrl
pop
pop
jmp
jnp
cmp
cwtl
pop
mov
xchg
cmp
adc
outsb
sbb
lods
lcall
aad
add
pop
sub
sub
and
dec
and
push
push
enter
cmp
cmpsb
lea
add
mov
inc
int3
rorb
imul
mov
or
jg
jae
adc
out
fs
fisubrs
cmp
sub
jno
sub
sbb
and
mov
pop
and
popf
pop
sub
or
scas
shrb
insb
inc
movsb
or
nop
pop
push
aam
dec
cwtl
inc
aas
imul
js
ds
addr16
inc
out
adc
rcrb
fwait
mov
or
cmp
or
lahf
orl
cmp
jmp
lods
out
dec
add
repnz
jns
mov
imul
rcrb
or
cs
sarl
dec
sub
aaa
outsl
fildll
sbbb
push
mov
and
and
mov
dec
rorl
xchg
dec
out
cmp
pop
rclb
loope
jne
pop
jmp
pop
out
xor
mov
mov
rolb
cmp
sub
adc
jmp
cmp
rcl
jl
and
mov
leave
mov
out
ret
daa
lahf
addb
pop
xor
mov
sbb
clc
and
add
and
jmp
push
mov
imul
call
jbe
sub
loopne
pop
sub
sbb
adc
mov
fucomp
push
mov
push
mov
xchg
push
sub
jmp
dec
repnz
outsl
shll
imul
movsl
scas
lds
dec
lret
pop
lock
popa
shll
mov
jmp
and
aaa
push
dec
cmp
sbb
and
pop
push
test
xor
leave
and
push
ret
shl
adc
stc
lret
aad
or
sub
outsl
and
lret
cmp
sti
and
inc
add
clc
lods
test
stos
add
inc
iret
jmp
movsl
dec
inc
in
pop
pop
cmp
daa
push
sbb
mov
add
lock
call
push
subb
or
mov
pop
adc
fs
cmpsb
lcall
add
push
xchg
aad
inc
jecxz
aam
mov
mov
add
pop
push
cli
and
scas
mov
dec
data16
add
push
or
xchg
push
cwtl
incw
jmp
mov
ret
or
xor
sub
add
pop
mov
jmp
push
adc
mov
jge
mov
incb
fs
mulb
push
push
inc
call
xchg
xor
mov
mov
loope
mov
imul
mov
jo
jnp
cmp
lock
add
fimuls
call
mov
inc
or
dec
adc
loop
push
lret
push
daa
mov
xor
clc
dec
add
dec
orl
es
add
or
add
cs
jnp
in
xadd
lahf
shrb
mov
stos
add
jl
push
inc
out
cld
and
cmp
scas
and
cld
pop
sub
test
in
push
mov
call
push
push
rcll
lds
lds
cmpb
xchg
rcll
jmp
add
lods
jle
imul
mov
mov
shll
add
lock
add
jmp
sub
cmpsl
frstor
in
or
mov
shr
mov
pusha
and
mov
sub
shlb
mov
dec
sbb
add
lahf
mov
fimuls
into
sub
inc
stos
iret
jp
sets
adc
mov
add
push
jge
push
in
inc
dec
and
sub
pop
jge
ljmp
sub
cmp
out
outsl
pop
adc
test
testb
cltd
push
push
xchg
fmull
cmpsb
cs
mov
fdivrl
mov
in
and
dec
xor
mov
ret
stc
repnz
inc
and
test
adc
add
jmp
sbb
mov
sti
add
test
shll
xlat
mov
mov
insb
test
aad
scas
mov
ret
cmp
in
jmp
ss
aas
adc
xchg
add
sbb
stc
sub
clc
outsl
push
pushf
ss
cmp
jp
jle
and
aas
leave
imul
adc
or
sbbb
xor
lods
push
lcall
call
and
loopne
scas
inc
xchg
cld
pop
imul
lret
pop
ds
and
xchg
mov
mov
ret
pop
test
sub
iret
add
sbb
xor
es
add
aad
popl
daa
xchg
imul
cmc
dec
outsb
dec
adc
inc
nop
call
test
test
das
push
pop
cld
xchg
push
mov
mov
cltd
jmp
add
call
add
xor
sbbl
decb
sbb
movl
push
xchg
xlat
scas
cld
push
or
addb
xor
sbb
mov
jne
orb
test
test
and
iret
sub
aas
pop
dec
sti
jbe
popf
pop
dec
xchg
jno
shr
mov
jg
mov
ficompl
imul
enter
inc
sbb
movsb
pop
popa
or
outsl
and
daa
loop
aad
fiadds
es
in
cmp
cmp
sarl
rcrb
or
fisubrs
jecxz
jnp
sbb
or
andl
test
sub
lcall
push
out
cs
add
add
xor
cmp
mov
divl
in
mov
sub
jg
and
es
fdivl
clc
rcll
shlb
clc
inc
repnz
xchg
das
jmp
orb
mov
pop
and
sbbl
lret
pop
xchg
push
cli
mov
test
aam
or
and
incb
mov
sbb
pop
push
int3
pop
rcrl
mov
add
mov
adc
pop
sahf
mov
push
fiaddl
inc
std
rolb
fwait
sub
sub
jne
pusha
or
sbb
adc
add
dec
jge
or
mov
ret
pop
dec
inc
scas
cmc
pop
pop
sub
std
or
or
push
jae
jmp
mov
mov
pop
sub
pop
xchg
adc
sbb
icebp
pop
and
aas
es
push
jge,pn
mov
loope
iret
ljmp
push
imul
sub
inc
stc
ds
fbld
mov
shl
sbb
sub
sub
ja
adc
mov
pop
mov
fwait
push
inc
xchg
lock
ret
fisttpll
daa
pop
data16
fmull
add
loope
icebp
xchg
jl
add
xchg
ja
jmp
stc
jg
inc
rorl
or
into
jno
jle
lret
cwtl
add
pop
sub
pop
cli
sahf
inc
pop
je
mov
jae
push
js
push
cmpsl
pop
lret
pop
cmp
fcoms
lods
in
pop
adc
jmp
mov
in
imul
push
jo
cmp
faddl
xchg
dec
fdiv
int
jb
aas
mov
push
cli
cltd
mov
add
das
add
jnp
jg
add
pop
rclb
lods
mov
xchg
inc
jns
mov
popf
hlt
and
mov
adc
stos
mov
clc
ljmp
inc
sub
xor
rol
rclb
scas
ss
pop
jmp
jge
and
push
jno
cs
repnz
sbb
or
mov
xchg
dec
jmp
aaa
mov
mov
pop
push
adc
dec
pop
dec
jmp
jb
idivb
stos
pop
std
enter
sub
pop
ds
les
pusha
xchg
add
dec
in
cmp
sub
adc
pop
jle
sbb
push
xor
pop
and
pushf
or
inc
aas
sub
sub
add
out
cmp
xor
and
dec
add
push
xor
roll
jno
add
in
lods
sbb
cmp
push
fstp
nop
xor
push
test
pop
jmp
es
sub
push
fbstp
sbb
adc
xor
pop
mov
call
adc
xchg
in
dec
mov
or
add
inc
sti
test
mov
data16
jae
inc
lods
cmp
mov
shl
add
jo
negb
loop
sub
and
ror
mov
mov
aas
dec
mov
add
mov
jmp
pop
pop
call
cli
mov
das
cmpsl
lods
mov
jge
xchg
inc
sti
inc
dec
ret
xor
cwtl
push
mov
cli
fmull
fnstcw
enter
pop
or
lret
test
push
mov
cmp
jmp
xorb
dec
aam
and
pusha
pop
adc
fidivrs
pop
scas
push
test
loope
sub
les
popf
shrb
dec
add
jmp
push
ds
scas
adc
xor
push
push
cmp
xor
orb
pop
push
xor
loopne
stos
addb
inc
pop
ljmp
mov
xor
push
xor
xlat
shlb
jne
stc
shrl
push
adc
test
scas
mov
mov
and
out
jl
ret
addl
xor
repnz
mov
shr
addb
shr
mov
dec
pop
cltd
notb
mov
sub
sbb
es
push
push
push
mov
dec
test
leave
mov
in
lahf
jae
jb
movsb
cmp
aas
add
icebp
mov
adc
and
lcall
mov
ljmp
push
pop
jmp
mov
ja
pop
shl
neg
sbb
out
add
inc
and
clc
dec
or
xchg
add
or
push
insb
push
and
push
sub
jmp
pop
push
sub
enter
add
scas
mov
in
inc
aaa
leave
jge
loope
add
push
mov
insb
imul
sub
jmp
push
iret
push
and
pop
pop
mov
mov
inc
neg
or
mov
shll
jmp
test
lock
lret
daa
insb
aam
adc
cwtl
notl
mov
xor
sbb
addb
push
dec
js
ja
js
dec
push
dec
lock
pop
mov
cmp
push
data16
pop
mov
shrb
sbb
bound
daa
aad
lahf
jo
xchg
cltd
pop
push
call
cmp
pop
int3
andb
popa
ficoms
sbb
jl
jns
cld
popf
lcall
lcall
xor
test
or
push
mov
add
notl
testl
fistps
push
pop
jmp
pop
dec
push
push
mov
subb
insb
add
adc
cmp
sbb
lods
jo
jp
xor
popa
ret
cmc
adc
scas
jl
repz
and
ds
add
arpl
xchg
mov
mov
pop
jnp
repz
ss
adc
in
nop
mov
jmp
adcb
cli
mov
cmp
scas
dec
pop
jns
mull
jbe
outsl
and
arpl
xor
mov
mov
or
mov
push
pop
fs
cmp
test
bound
xchg
sub
sub
add
push
fwait
or
jge
or
ljmp
call
pusha
push
inc
or
mov
inc
ret
cmp
add
jne
pop
mov
mov
into
mov
inc
xor
shlb
dec
jmp
cmp
or
sbb
pop
scas
jno
mov
int
repz
fucomip
dec
and
lret
fbld
or
in
or
jecxz
jo
sarb
js
mov
ficoml
mov
adc
cmp
and
xor
lret
push
inc
add
push
lcall
or
into
xor
cmc
xor
pop
and
push
dec
jle
ljmp
enter
pop
aaa
subb
pop
icebp
adc
ljmp
push
xor
xchg
fsubp
pop
divl
mov
jmp
push
jmp
or
out
outsl
es
mov
js
adc
jmp
das
xor
mov
sbb
add
ret
pop
push
enter
and
xor
mov
xlat
push
mov
or
or
jne
outsl
aaa
or
or
xor
test
mov
dec
dec
in
xor
or
add
ret
add
and
mov
adc
add
jle
les
fisubrl
push
mov
inc
xor
cwtl
or
imul
sbb
sti
or
cmp
dec
les
xchg
addb
add
mov
xor
andb
xchg
and
xor
hlt
sbb
mov
int3
out
pop
jno
pop
punpckhbw
or
cmpsb
inc
sbb
mov
jns
movsb
in
imul
fucomi
add
or
adc
push
lea
xor
cmp
adc
les
xor
push
aad
inc
bound
pop
faddl
adc
mov
push
jge
inc
das
inc
xchg
and
addr16
lds
xor
add
sbb
and
jnp
xorb
mov
jl
mov
adc
or
loopne
xchg
lret
inc
movsb
les
pop
fildl
testb
add
stos
add
jg
cmpsl
adc
es
add
sbb
aad
lds
nop
bound
scas
fnstenv
stc
or
pushf
int3
add
es
addl
add
stc
xchg
sbb
jmp
add
rolb
sub
pop
xchg
xchg
mov
scas
mov
std
orb
cli
dec
stos
xchg
cmp
push
sbb
jecxz
insb
inc
adc
repz
les
addl
mov
jecxz
call
aas
xor
arpl
cmp
cmp
and
add
and
mov
add
mov
test
mov
js
pushf
scas
push
or
pop
orb
enter
xchg
xchg
xor
std
or
xor
rol
mov
add
push
xchg
clc
nop
inc
je
sbb
cld
call
out
push
loop
mov
icebp
enter
adc
inc
sub
add
jmp
mov
mov
add
dec
add
mov
add
jge
inc
cmp
rolb
mov
xor
lods
stos
orl
pop
xor
cwtl
in
dec
and
shr
sbb
push
icebp
sub
xor
cmpsl
pop
cmp
or
sub
jnp
aam
add
mov
xor
sbb
push
neg
jge
push
cmp
jo
xor
xor
or
jb
cmpb
mov
lea
dec
ds
mov
cmp
iret
in
jns
adc
push
add
jmp
jge
pushf
push
push
notb
cltd
test
mov
xchg
inc
pop
test
pop
mov
adc
sbb
push
enter
push
frstor
fcompl
incb
push
mov
inc
loope
pop
out
xor
bound
das
lods
filds
add
mov
lock
daa
sti
mov
pop
shlb
jo
pop
stos
xlat
jg
mov
lods
sti
sbbl
outsb
shll
and
or
aas
sub
sub
add
cli
push
jge
xchg
push
mov
mov
mov
push
mov
jno
sub
pop
mov
pop
adc
cmpsl
cs
and
push
jg
mov
mov
mov
loop
jbe
cmp
pop
sub
inc
pshufw
testl
push
mov
push
dec
lret
leave
imul
xlat
add
mov
xchg
or
xor
xor
testb
push
push
pop
jmp
mov
pop
push
inc
outsl
mov
pop
aaa
or
sbb
rcrl
dec
fcmovnbe
sbb
sbb
add
movsl
pop
rclb
or
sar
pusha
rclb
sbb
mov
xlat
push
nop
repnz
das
arpl
xchg
and
push
xor
pop
push
fwait
hlt
push
daa
loope
out
sbbl
dec
sbb
daa
dec
ud0
xchg
cs
lret
xor
pop
mov
sub
push
jae
inc
pushfw
adc
add
scas
xor
and
jge
sub
jo
push
mov
jmp
push
add
addr16
mov
and
scas
call
lahf
jle
jb
mov
mov
in
outsl
add
pop
and
iret
clc
stos
jbe
mulb
adc
xor
pop
sbb
push
lcall
mov
inc
js
mov
das
js
dec
and
or
inc
dec
pop
stos
pop
in
sub
pop
pusha
cmc
and
jl
jecxz
dec
repnz
jnp
pop
pop
addl
cs
or
fs
push
jb
orb
xchg
enter
mov
dec
or
stc
ror
push
mov
imul
push
and
dec
pusha
shlb
sub
push
dec
xor
and
adc
inc
jnp
mov
mov
ljmp
loop
lret
sbb
addr16
jle
cmp
or
dec
push
roll
push
or
in
fxch
push
jle
and
pop
dec
jo
pop
pop
jnp
std
dec
pop
jns
subl
insb
mov
rorl
xorb
and
outsl
mov
mov
addl
inc
icebp
inc
fdivp
push
cmp
insb
cs
out
dec
pop
mov
jns
push
into
int
js
mov
out
lods
incl
cmc
loopne
pop
enter
lea
dec
mov
jb
adc
hlt
dec
xor
das
mov
lock
out
clc
xchg
fsubl
into
sbbl
add
pop
and
jg
push
movl
inc
inc
enter
rclb
xor
or
mov
sub
cmp
xchg
or
lret
pop
pop
gs
push
xchg
xchg
stos
mov
dec
mov
mov
loopne
jnp
sub
jg
jmp
sti
sbb
xor
mov
fwait
enter
jbe
inc
mov
xor
mov
add
sub
dec
nop
or
scas
pop
jg
ficompl
shll
ss
and
pop
adc
imul
cli
add
jmp
or
fcom
inc
mov
scas
mov
sub
adcb
jp
fnstsw
pop
shl
adc
and
or
jb
loope
sbbb
movsl
xchg
cmp
cmp
jge
jno
data16
lock
mov
cmp
pop
sbb
pop
lahf
insl
push
or
cmp
mov
out
push
das
pusha
mov
mov
push
mov
testb
dec
arpl
faddl
mov
ljmp
sbb
or
xchg
push
out
cs
jnp
imul
rol
insb
ficoms
repnz
cmp
xorb
pop
xor
jmp
mov
jp
nop
xchg
push
movsl
add
shl
add
nop
or
inc
jg
adc
dec
adc
inc
fiaddl
aas
into
movsb
pop
loop
out
std
mov
jbe
pop
cld
imul
cvtps2pi
jle
leave
fisubs
mov
xchg
scas
mov
jle
sub
add
mov
iret
xchg
xor
add
call
loop
xchg
in
mov
mov
add
je
jno
mov
daa
push
and
rcll
icebp
sub
pushf
cs
outsb
lcall
and
dec
in
ja
push
pop
push
cmpl
xor
divl
push
shrl
ret
push
mov
mov
loop
mov
adc
sub
xchg
mov
outsb
fdiv
clc
jmp
xorl
cwtl
push
sbb
dec
or
and
or
inc
je
insl
addl
test
adcl
mov
xchg
cmpsb
stos
adc
inc
aad
pop
push
pop
call
imul
in
fnstenv
sub
pop
dec
mov
add
add
adc
mov
outsb
xor
test
push
mov
repz
mov
pop
ret
inc
jns
or
outsb
dec
fcomps
pop
shl
sub
js
mov
inc
pop
add
nop
out
add
shr
jns
pop
and
pushl
subb
dec
pop
sub
lods
sub
adc
add
inc
sbb
inc
pop
adc
xor
js
mov
rorb
lcall
ret
jns
jge
jo
jmp
repnz
jae
cmp
insl
adc
subl
mov
adc
cmpl
jmp
loopne
dec
shrl
jle
jb
jge
mov
pop
aas
mov
push
mov
cmp
or
les
movsl
push
or
mov
cmp
or
faddl
cli
push
inc
pop
xor
lret
or
jno
call
dec
sarl
cld
cs
int3
rorl
push
fwait
push
aam
lods
arpl
insl
nop
std
hlt
push
xchg
cwtl
mov
adc
pusha
rorl
imul
iret
lret
imul
pusha
xor
je
decl
adc
sub
mov
fcoms
pavgb
or
in
sbb
sub
jo
dec
jp
xor
cltd
mov
sub
push
cmp
in
xor
cmp
and
mov
xor
lea
movsb
jno
push
cmp
lahf
das
mov
repnz
cmpsl
inc
jbe
fst
jecxz
jno
das
jbe
push
lahf
addr16
push
mov
std
pusha
sbb
sub
push
fildll
mov
adc
or
ljmp
push
dec
xlat
mov
jge
pop
adc
test
add
mov
shll
fs
mov
xchg
in
mov
fs
xor
sbb
adc
das
pop
bound
loop
sbb
stos
js
inc
insb
enter
mov
stos
mov
add
jp
cmc
pop
imul
mov
sub
add
xor
cmp
hlt
push
add
adc
ja
fistl
testl
jl
mov
jo
mul
push
fistpll
or
push
adc
inc
cwtl
mov
and
or
shrb
clc
push
mov
add
xor
rol
fsubr
adc
or
jp
popf
add
mov
xchg
faddl
aam
jbe
inc
jns
push
lods
mov
jl
cld
mov
sbbl
add
dec
mov
cmp
push
pusha
test
jmp
xchg
sbb
xor
xchg
mov
mov
adc
sbb
pop
adc
test
inc
mov
movsb
cmp
mov
sbb
in
or
mov
subl
jne
add
xchg
sub
lahf
jo
addb
or
mov
ror
cmp
mov
push
or
and
hlt
push
push
inc
or
mov
xchg
pop
jmp
pop
into
je
jecxz
push
jge
repnz
push
addr16
stos
fsubrl
cwtl
icebp
jnp
test
add
aas
pop
adc
cld
sub
push
inc
or
in
popa
fiadds
insb
cmp
or
in
add
pop
add
testl
outsb
in
or
aam
mov
outsl
jl
fidivl
sub
inc
int
or
ret
pop
fisttpl
or
push
movsl
testb
or
inc
fdiv
pop
stos
cli
shlb
cwtl
add
sub
fldl
and
pop
jge
imul
push
cltd
icebp
movsb
cmp
aam
ret
aad
movsl
push
jmp
enter
cld
mov
test
push
sti
jbe
inc
leave
push
aam
jnp
les
push
je
adc
add
sub
icebp
cld
loope
mov
inc
repnz
add
rcrb
adc
dec
sbb
mov
push
repz
xor
jbe
sub
jb
mov
push
rcrl
arpl
add
test
push
xchg
adc
lret
cmpsl
push
fcoms
or
data16
icebp
mov
or
adc
push
scas
pop
cmpsl
and
push
mov
fs
mov
add
or
dec
loope
xor
stc
lods
rol
jge
pop
inc
std
adc
push
mov
imul
outsb
subl
push
ret
clc
cmc
pop
and
mov
mov
xchg
jns
imul
push
mov
inc
cmp
inc
jae
pop
pop
mov
cmp
mov
pop
jp
dec
mov
xchg
test
popa
jle
or
mov
cmp
fistpl
dec
and
mov
mov
add
sub
pop
ljmp
mov
in
addr16
adc
rclb
sub
adc
mov
dec
lds
not
dec
pop
pop
jmp
rcrl
test
jle
addr16
xor
repz
or
repnz
sub
and
ret
lds
fisttpll
mov
pop
outsb
mov
sub
data16
jmp
fs
inc
add
fisubrl
in
inc
dec
xor
or
jge
inc
dec
xchg
add
rcrl
mov
jnp
inc
jmp
cld
loop
xchg
inc
pusha
popf
imul
fbld
cmp
sbb
stc
mov
out
xorb
out
adc
dec
or
in
dec
in
mov
stc
arpl
jecxz
stos
xor
in
cli
insl
push
insb
and
pop
sbb
xlat
add
xor
dec
outsl
loop
fidivrs
dec
jmp
jo
jg
push
je
sbb
mov
mov
push
clc
lds
cmp
cmp
jbe
sbb
inc
inc
or
mov
imul
fstl
xchg
and
ret
pop
arpl
add
sub
add
test
shl
jp
cmpsl
imul
pop
fs
icebp
iret
push
cmp
add
je
lock
pushl
adc
mov
addl
mov
add
cwtl
loop
fmull
add
stc
psubsw
xchg
jg
or
mov
and
pop
aas
insl
mov
add
scas
jno
dec
bound
jp
or
in
cli
nop
int
push
fcomps
adc
clc
jmp
mov
and
or
push
push
iret
mov
ja
es
pop
dec
and
nop
jge
inc
mov
xor
mov
xchg
cs
das
xchg
or
and
jae
jl
pop
or
pop
bound
sub
scas
inc
repz
andl
xor
mov
int
pop
ret
dec
xchg
dec
imul
sub
rcrb
add
dec
lds
adc
adc
or
icebp
xlat
push
dec
pop
loop
fucomp
xor
pop
pusha
or
mov
and
add
jge
cmp
lock
sbb
or
jl
jne
daa
jmp
pop
jne
fisttps
cmc
sub
repnz
add
sbb
fiaddl
sbb
pop
and
ljmp
insb
jnp
leave
adc
insb
xor
push
xor
or
push
or
cwtl
ja
push
pop
mov
pop
push
pop
lahf
gs
or
andb
or
xchg
mov
mov
repz
mov
lds
fistps
test
jo
mov
es
cmp
mov
call
mov
out
fldenv
xchg
repnz
ljmp
movaps
and
push
pop
sub
ret
xchg
pop
mov
les
shlb
pop
lds
pop
subl
mov
div
sti
xorb
dec
sub
mov
cmp
imul
shr
push
repnz
orb
add
aad
icebp
mov
jmp
add
je
inc
sub
loopne
sbb
lahf
nop
mov
xchg
adc
fimuls
xchg
out
out
sub
dec
push
jp
jae
or
mov
cmp
cmp
jnp
add
xor
leave
sub
imul
and
dec
lea
push
mov
push
aas
cwtl
rclb
cmp
mov
sbb
xchg
shlb
and
push
or
jns
mov
jle
sub
out
inc
pusha
ss
adc
test
and
mov
push
mov
inc
jg
and
pop
mov
pop
push
mov
jg
dec
inc
add
sar
in
xlat
loopne
push
mov
aam
aad
insb
adc
movb
lret
sub
and
outsl
shrb
inc
jl
sbb
xchg
lods
dec
nop
cmp
rcrb
inc
and
mov
cmp
adc
or
hlt
sub
mov
stos
pushf
js
jmp
and
adc
dec
add
and
pop
and
lret
loopne
or
jmp
pop
loop
pop
mov
pop
lahf
orb
dec
inc
clc
add
adc
sub
cmc
dec
dec
pop
mov
adc
test
xorb
push
sub
mov
and
cmpsb
or
cmp
lret
cmp
aad
add
and
jmp
ret
adc
dec
ja
mov
lret
dec
jmp
sub
test
add
cmp
mov
xlat
fdivl
adc
mov
fs
mov
xor
push
pop
jmp
icebp
and
lea
ret
sub
xchg
jecxz
sub
jle
cmp
repz
push
ds
or
mov
ds
inc
pop
test
jmp
dec
pop
mov
loope
mov
jmp
add
out
das
xchg
mov
mov
pop
push
mov
push
fcomps
mov
jmp
lods
push
mov
push
aas
iret
and
lock
jmp
pusha
pop
sar
inc
incl
stos
ds
aaa
push
pusha
ret
repnz
and
out
enter
xor
jl
call
mov
mov
or
fadds
adc
xor
repnz
cmp
nop
loopne
push
push
jmp
std
pushf
inc
stc
cs
loop
pop
clc
stos
mov
push
mov
push
lcall
fiadds
hlt
adc
jmp
push
enter
ret
test
jg
loop
iret
xchg
push
mov
add
inc
jae
fldenv
enter
push
aas
sub
jb
or
lahf
addr16
push
push
push
dec
pop
mov
call
sub
mov
or
pop
fistps
std
lds
in
jle
lods
add
icebp
dec
xor
shll
fcmovb
dec
jb
movsl
or
sbb
push
orb
sub
mov
pop
add
in
icebp
pop
xchg
lret
or
xchg
je
pop
adc
sub
jmp
jno
inc
pop
sub
adc
cld
xor
sub
mov
nop
xchg
mov
jmp
in
std
xor
jno
xchg
mov
adc
push
add
js
xor
es
or
xor
xchg
adc
fnstsw
loop
shr
cmp
jne
adc
cmp
cli
push
fdivrs
add
mov
xchg
mov
insb
pop
mov
pop
inc
add
sub
push
js
ret
xchg
icebp
push
jg
mov
xchg
cltd
imul
std
pop
xor
outsb
scas
jbe
jns
mov
jbe
frstpm(287
ret
sbb
repz
sbb
dec
bound
lds
imul
add
fimuls
hlt
fnstcw
push
dec
push
sbb
mov
stc
jbe
mov
enter
nop
cmp
inc
ds
xlat
lods
jne
mov
or
sbb
test
adc
cmp
mov
leave
dec
pop
pop
pop
lahf
mov
fcom
add
ss
clc
and
mov
inc
test
jbe
and
jecxz
pop
stos
enter
ret
loop
lahf
ljmp
lahf
or
jg
popf
sub
push
sub
pop
cli
out
das
ret
int3
sbb
repnz
jecxz
fidivrl
jmp
mov
jl
and
push
jg
mov
dec
ret
ret
mov
mov
pop
iret
not
push
cltd
insl
adc
and
add
sbb
jmp
jg
xchg
clc
lds
popa
popf
cmpsl
rcr
loop
in
hlt
sbb
sti
ja
out
out
cltd
addb
push
aas
lahf
fdivrp
ds
dec
fs
mov
inc
push
or
dec
das
shrb
cmp
not
pushf
popf
dec
and
pop
testl
pop
into
jbe
test
pop
jmp
rolb
sub
pusha
add
js
push
and
in
sti
fwait
sub
jl
hlt
or
pop
les
cli
and
jae
sub
pop
mov
or
testl
add
leave
flds
jbe
pop
rorl
sti
or
filds
arpl
inc
or
js
divps
into
cmp
data16
and
pop
cs
fcmovnbe
mov
xor
cwtl
mov
stc
cmc
jno
rcl
cmp
in
pop
stc
jmp
mov
iret
mov
add
mov
jbe
xchg
push
cld
inc
iret
scas
sbb
adc
mov
mov
shll
or
ror
push
faddl
mov
test
sbb
dec
adc
cltd
or
arpl
fstl
push
out
int
loopne
dec
pop
bound
mov
xorb
sub
mov
adc
mov
mov
les
stos
mov
es
movsl
out
fdivrp
cwtl
sub
xchg
push
add
pop
stos
add
inc
push
and
xor
jmp
into
or
arpl
insb
fldl
dec
pop
push
pop
pop
xchg
adc
movb
sbb
mov
repz
jne
jmp
push
or
xchg
test
jmp
pop
add
adc
flds
push
repz
cmp
or
inc
inc
sub
or
jbe
clc
test
sahf
pop
cmp
jmp
mov
jle
adcl
xchg
inc
cmp
push
mov
push
push
jns
inc
icebp
sbb
enter
movb
ja
es
orl
mov
jge
jb
mov
push
push
mov
testl
add
das
jmp
mov
mov
cmc
xor
add
movsb
ret
or
or
mov
jg
jle
cmp
dec
pop
adc
add
ljmp
dec
cwtl
cmp
inc
pop
add
or
push
mov
xchg
dec
in
jg
rorb
cmp
imul
and
sub
lahf
or
stos
push
jbe
jecxz
add
dec
insb
push
jmp
or
push
js
sub
cmp
mov
jl
mov
adc
mov
xor
pop
out
aam
test
aas
call
pop
aaa
and
jae
push
xor
sbb
scas
and
cli
je
or
aad
or
push
pop
imul
test
sbb
icebp
ret
dec
cmp
push
jo
cmp
adc
insb
mov
jp
imul
add
test
push
add
divl
add
jmp
or
xchg
and
int3
les
jne
sub
pop
jns
jns
das
sbb
push
cmp
pop
jmp
ret
mov
add
ljmp
xchg
push
pop
inc
sub
push
mov
sub
jmp
xchg
imul
pop
dec
mov
dec
dec
aas
sbb
lods
xor
mov
aaa
and
dec
cmp
ljmp
imull
jns
ret
add
fnstenv
and
cli
mov
flds
sub
inc
push
xchg
add
jmp
mov
call
push
push
addr16
orb
clc
jnp
cwtl
sbb
test
sarb
sub
mov
pop
add
mov
lahf
jmp
out
adc
pop
sti
cltd
out
or
adc
inc
adc
sbb
sub
xchg
cli
sub
data16
call
adc
xchg
or
rcrb
jecxz
add
pop
pop
push
mov
sub
add
fistps
jb
mov
mov
cltd
insb
sbb
wbinvd
es
loopne
mov
aas
xchg
lods
adc
adc
xor
jb
push
add
bound
lret
mov
shld
jl
mov
mov
inc
or
add
sahf
dec
mov
pop
adc
sub
lret
or
jmp
fistpll
adc
out
xor
popa
mov
push
int3
xor
clc
lock
shl
xor
aaa
push
stos
nop
lds
pop
push
mov
cmc
jmp
ret
and
add
adc
ljmp
pop
incb
int3
adc
jle
sbb
mov
call
adc
push
daa
push
loope
pop
cmp
or
and
out
out
pop
sub
test
call
in
pop
mov
fwait
or
jg
adc
mov
aam
add
push
mov
sub
into
cs
test
sbb
int3
mov
jmp
inc
out
cltd
stos
mov
adcb
jne
jmp
mov
out
add
rolb
jecxz
addr16
bound
out
faddl
dec
lock
mov
pop
idivl
aad
daa
jae
in
clc
inc
pop
push
jmp
out
sbb
xor
xor
inc
pop
dec
cmp
cmp
cld
jbe
mov
stc
or
add
inc
add
sbb
xor
mov
add
pop
ja
xchg
inc
and
pop
fistps
and
and
shll
icebp
xchg
push
stos
xor
bound
pop
inc
stos
pop
lds
and
rol
mov
adc
add
adc
sbbb
jle
xor
cwtl
mov
lret
mov
clc
aas
jle
xchg
push
mov
mov
sub
pop
jne
aas
mov
ret
jle
sti
outsl
mov
loop
ds
sbb
pop
mov
inc
dec
jge
daa
repz
dec
and
sub
daa
outsl
clc
sahf
xchg
jo
or
adc
pop
loop
loopne
leave
les
adc
adc
sub
dec
sub
add
dec
nop
and
push
clc
push
mov
push
inc
jmp
pop
insb
or
inc
fadds
decl
movsl
or
adc
les
ljmp
dec
call
cmpl
sub
lods
mov
outsb
repz
jns
sar
jmp
stos
rcrb
aaa
or
xor
popf
pop
insb
mov
add
cmpb
call
cld
sbb
mov
mov
ja
mov
stc
nop
push
and
les
inc
xchg
fbstp
xchg
jle
cwtl
stc
gs
pop
push
xchg
call
cmp
sub
addl
inc
xor
daa
adc
cmpsl
pop
push
mov
adc
mov
pop
lea
add
or
jl
aas
xchg
sbb
jb
outsl
adc
sbb
mov
add
call
and
pop
cmp
add
xor
jno
fisttpl
pop
outsb
loop
mov
fdivrs
call
dec
mov
lahf
jo
or
xchg
cmpl
testl
and
mov
push
push
and
mov
or
xchg
pop
cwtl
xchg
jl
pop
push
bnd
clc
adc
sub
mov
and
scas
xlat
sbb
scas
xchg
add
mov
cltd
sti
sbb
sub
inc
sbb
movsl
ds
iret
pop
xor
xchg
sar
rol
lahf
sub
or
cmp
and
mov
mov
sub
jge
cmp
dec
mov
test
loop
imul
inc
push
dec
xor
pop
ret
sub
test
mov
insb
pop
es
pop
adc
jl
xchg
hlt
out
cmp
jg
dec
cld
dec
mov
fwait
sub
adc
cmp
or
lock
hlt
outsb
std
mov
mov
fs
or
sub
lahf
xchg
add
xchg
sub
pop
jmp
sub
pop
push
fwait
inc
neg
and
dec
jp
and
addr16
lods
aam
dec
fisttps
xchg
hlt
fldt
in
dec
insb
or
cmp
into
cmp
pushf
jns
or
adc
adc
cld
adc
test
test
sub
add
stos
adc
adc
icebp
inc
or
call
push
clc
xor
xchg
stc
pop
pop
xor
adc
dec
cwtl
pop
movb
nop
dec
dec
pop
mov
inc
fsubrs
mov
push
pop
push
jp
jns
adc
stos
mov
or
das
jmp
rcrl
jle
mov
or
jmp
mov
loope
mov
jle
push
push
mov
add
int3
jmp
and
repnz
xor
pop
addb
jge
lods
add
pushf
std
mov
cmp
mov
cmp
leave
faddp
jp
push
push
daa
push
aas
sbb
xchg
sbbb
dec
jb
pop
out
cmp
or
mov
sbb
popf
mov
or
int
mov
xor
das
icebp
inc
jle
cwtl
pop
mov
mov
adc
ffree
cltd
add
pop
mov
js
jmp
in
sub
jl
mov
xchg
mov
in
jne
icebp
scas
rorb
dec
mov
add
or
negl
clc
pop
jo
fistl
adc
lock
add
cmp
xchg
pop
push
mov
push
movsl
fisttps
addr16
jle
das
jl
arpl
and
andl
sub
pop
xchg
mov
sub
int
mov
cmp
mov
out
out
das
and
sub
repz
pop
ret
insl
fdivs
mov
and
pop
adc
adcb
testl
arpl
jmp
pop
lret
cmp
loop
lock
xor
cmc
pop
xchg
loope
ja
aas
daa
pop
jecxz
mov
xchg
jg
adc
or
inc
pop
lods
jae
xchg
pop
add
or
pop
xchg
leave
add
repnz
mov
dec
xor
jmp
mov
sub
cwtl
in
icebp
add
hlt
popf
mov
outsl
fmuls
sbb
jl
mov
fistl
sub
push
or
add
cltd
jmp
add
lret
andb
dec
jno
push
mov
addl
call
adc
lock
pop
pop
sbb
mov
ret
aad
add
rcll
jne
mov
lret
and
lds
add
shl
js
cmp
and
cmp
out
and
jl
mov
push
out
xchg
dec
push
andb
jo
add
lea
or
and
mov
rol
mov
pop
push
adc
das
xor
push
jg
pop
jmp
rcl
mov
add
pusha
lods
xlat
or
and
test
push
mov
pop
mov
lgdtl
sti
pop
push
fdivrs
mov
enter
add
xchg
pushf
loope
sub
or
imull
and
orb
pop
shr
mov
mov
jmp
mov
xor
jmp
je
rorb
xor
add
mov
mov
and
fldl2t
loope
jl
xchg
test
xor
insb
cmpsb
sbb
inc
jmp
sub
or
dec
sbb
jns
sub
cli
gs
pop
adc
call
add
mov
mov
fimuls
out
and
push
jmp
dec
popf
or
nop
decl
mov
push
decl
add
loope
aam
sti
jecxz
cwtl
jmp
dec
xlat
nop
fmul
inc
cmp
mov
or
out
outsl
jns
push
add
sti
and
dec
adc
mov
mov
or
xor
orl
dec
jecxz
xchg
scas
addr16
js
or
mov
pop
xchg
dec
inc
rol
out
pop
call
add
sahf
adc
loopne
pop
mov
cmp
or
pop
mov
pop
adc
rorl
movsb
popa
add
pop
mov
stos
jl
rcrl
movsl
push
enter
cwtl
imulb
test
dec
pop
jns
cli
adc
push
stos
loope
int3
cmpsl
ss
xchg
call
dec
lock
dec
shl
jno
and
mov
mov
cld
pop
shll
mull
xor
sub
repz
inc
pop
push
cmp
dec
cmp
push
cli
inc
adc
add
into
or
xor
mov
pop
sub
int
mov
sub
shl
pop
and
sbb
aaa
nop
jnp
loop
daa
out
add
inc
jno
test
movsl
iret
int
and
add
imul
pop
movsb
jae
push
outsl
in
std
dec
enter
dec
pop
popf
mov
popa
imul
cmp
or
add
jle
jecxz
test
mov
andb
popf
xor
jge
fdivr
movsl
das
jmp
aaa
addr16
adcb
loope
insl
gs
adc
cmc
insl
jle
iret
xor
clc
push
jmp
pop
ljmp
testb
or
popa
add
orb
orl
jnp
lret
or
scas
pushf
ljmp
dec
inc
dec
cmpl
hlt
incl
je
jmp
mov
inc
neg
mov
or
cmp
ljmp
mov
push
loope
andb
dec
push
scas
mov
sti
xor
dec
pop
dec
int3
push
push
adc
jge
test
in
lcall
test
mov
mov
xchg
dec
mov
sub
out
pop
xchg
mov
aas
les
dec
dec
pop
shll
ja
loope
jmp
js
ds
cmpsl
jle
lock
jle
add
jmp
repz
clc
dec
das
inc
aaa
xchg
addr16
mov
add
mov
mov
pop
loope
aaa
rclb
lret
or
pop
lock
inc
xchg
ret
add
add
into
std
inc
in
mov
or
mov
int
or
cmp
push
sub
sub
js
add
cmc
adc
sbb
cmp
jge
imul
addr16
das
jl
add
cmp
mov
popa
xchg
jmp
daa
or
sub
pop
jmp
add
std
xchg
and
ffree
and
mov
add
sub
push
or
and
add
add
sub
cli
xor
jo
or
movsb
adc
ret
xor
or
call
dec
push
pop
sub
jg
scas
dec
pop
xchg
cmpsb
jl
lcall
mov
sub
add
outsb
adc
adc
push
sbb
sbb
dec
and
fnstenv
inc
es
int
pop
inc
add
and
jne
test
lods
xor
lret
enter
orb
je
pop
push
movsb
pop
cmp
add
inc
ficompl
pusha
outsb
insb
cmpsl
pop
jne
and
pop
fadd
add
imul
icebp
lahf
or
es
or
lds
add
imul
push
mov
xchg
inc
jns
insb
mov
pop
movsb
daa
jmp
negl
mov
pop
sbb
sub
mul
xchg
je
dec
push
push
arpl
sbb
lods
addr16
mov
push
rcr
jl
xchg
fldt
jmp
into
std
push
gs
jnp
sub
fcmovu
dec
out
jns
sub
pop
push
cvtdq2ps
rclb
jno
addr16
push
orb
cmp
push
push
pop
icebp
mov
pushf
ror
call
mov
daa
mov
fadds
ja
inc
jo
xchg
popa
and
or
aad
fcmovnbe
cmp
pop
add
scas
dec
xor
loopne
int
idivb
dec
into
inc
push
cld
pop
xchg
mov
xor
xlat
nop
mov
cmp
sub
clc
lahf
adc
icebp
cld
adc
cmp
repz
pop
push
pushf
mov
lods
jb
or
cmpsb
add
dec
adc
or
shl
sti
cmp
fadds
add
jecxz
not
and
lret
jle
mov
bound
jmp
aaa
push
add
sub
neg
xchg
mov
cs
lret
jmp
push
cli
nop
lret
and
xor
iret
and
mov
fmuls
loope
faddl
add
movl
shlb
or
xchg
inc
out
or
scas
dec
pop
xchg
jge
mov
xchg
mov
fstps
xorb
jns
cmp
iret
and
add
sbb
out
add
divl
dec
adc
and
xor
adc
adc
mov
in
mov
jmp
sar
push
cld
and
leave
pop
jnp
inc
jmp
js
sub
jg
out
push
mov
ret
ret
fucom
sbb
cmp
popf
mov
pop
dec
add
ss
inc
pop
jl
orb
mov
and
or
inc
enter
pusha
ret
jne
fsubrs
cmp
mov
and
fbstp
or
jbe
xor
ret
pusha
pop
lock
cmp
test
insb
push
jmp
aad
push
imul
pop
mov
notb
pop
jge
dec
int
xchg
or
push
pop
jmp
dec
sbb
add
mov
xor
push
pop
mov
adc
fcmovnu
dec
pop
xor
rolb
adc
out
jmp
pop
fdivs
jae
mov
int
add
sbb
jmp
sub
add
sbb
fildll
jns
adc
sbb
fstpl
jl
cmp
jne
ffreep
lods
inc
lahf
push
xor
pop
jge
dec
insl
sbb
hlt
paddq
out
call
stos
mov
jnp
dec
fldl
push
pop
mov
push
xchg
les
xor
fsubs
ds
xor
inc
in
add
sbb
js
cmpl
add
and
push
shlb
sub
lods
mov
jmp
mov
pop
scas
inc
scas
stc
push
ljmp
out
ror
dec
xchg
mov
push
js
hlt
mov
or
ljmp
push
mov
push
dec
and
mov
add
xor
adcb
mov
xchg
cmc
adc
ficoms
lea
adc
xchg
add
or
sub
in
inc
and
pusha
push
mov
imul
jp
jnp
sub
rorl
das
sti
cmp
es
mov
inc
adc
pop
pusha
inc
push
dec
add
adc
mov
int
xor
insl
nop
add
mov
test
xchg
xor
lahf
push
add
sub
cwtl
cmp
das
xor
sub
sub
push
andb
jnp
fistps
xor
ja
iret
sbbl
jo
jb
mov
adcb
and
je
xchg
sbb
dec
sbb
xchg
push
mov
push
jge
push
test
and
aaa
push
pusha
dec
imul
pop
mov
add
pop
sub
mov
inc
jnp
pop
ss
xor
scas
or
pusha
mov
inc
dec
push
into
add
adc
xchg
pop
in
pop
daa
fsubs
pop
add
adc
imul
mov
imul
ljmp
and
dec
sub
incl
in
or
loopne
sub
and
inc
sub
clc
sub
in
pushf
push
add
fadd
mov
dec
imul
clc
sbb
stos
push
mov
pop
lret
sbb
push
lret
ret
cmp
lds
and
cmp
sarl
push
pop
outsl
cltd
add
inc
dec
jmp
add
dec
inc
inc
scas
gs
ds
andl
dec
dec
cltd
mov
xor
and
push
or
clc
sbb
cli
add
pop
mov
sar
shlb
cmp
push
pop
lahf
dec
adc
and
pop
push
mov
orl
adc
jo
xchg
xlat
push
mov
jmp
jmp
mov
nop
push
mov
xchg
mov
cmp
push
adc
push
inc
repnz
add
aad
xor
xorb
xchg
addl
movl
add
push
jg
call
or
out
sbbb
mov
mov
popf
add
xor
pop
shr
jne
xchg
cmc
sbb
pop
jmp
xor
xchg
adcl
sahf
call
stos
sub
xchg
mov
andb
jp
sub
pop
push
push
addr16
or
jp
add
pop
jle
mov
fdivrp
push
or
lea
xchg
jl
andb
mov
lods
push
imul
cli
cmp
loopne
push
push
jnp
inc
dec
adc
out
insb
jl
jns
lcall
inc
inc
mov
cli
cwtl
sarb
xchg
cmp
clc
push
pop
ror
xchg
inc
ja
and
mov
sub
clc
dec
jns
mov
xchg
pop
jo
divb
lret
pop
orb
push
lcall
sbb
inc
cmp
and
xor
lret
cmp
rcrl
pop
insl
add
jne
pop
test
push
push
outsb
add
jp
not
mov
loop
popf
fdiv
inc
push
xor
pop
insl
xor
popa
daa
sbb
sbb
add
sbb
add
mov
xchg
inc
adc
add
xchg
add
and
fisttps
push
push
mov
imull
pop
pop
sbb
imul
adc
jecxz
stos
pop
adc
push
rcll
jmp
das
aad
jnp
xchg
sub
pop
jmp
push
jl
pop
addr16
dec
jmp
jns
imul
mov
or
pop
push
scas
lods
aad
xchg
pop
sub
mov
mov
int3
out
add
pop
addb
lods
sub
in
pop
sub
adc
push
dec
xorl
loope
bound
add
sub
imulb
inc
mov
push
in
rclb
add
lcall
mov
add
xchg
mov
xor
das
movsb
fisubs
mov
imul
jmp
push
pop
jo
mov
imul
add
mov
mov
jle
xor
ret
ret
push
gs
shlb
ljmp
dec
arpl
sub
js
add
jnp
adc
out
xor
push
jbe
cmp
fs
push
add
lods
push
add
push
test
sub
fimuls
xchg
inc
push
mov
lea
ds
pushf
mov
sub
imul
and
xchg
jns
movsl
daa
mov
test
stc
ja
pop
aaa
pop
iret
sub
pusha
out
dec
add
push
inc
jle
xchg
push
shlb
test
pop
bnd
push
pop
jmp
push
xorb
push
add
sub
push
or
sub
loope,pt
or
sub
jmp
lods
sub
and
fldenv
cmp
stos
push
je
pop
pop
out
mov
xor
das
lcall
add
pop
cmp
cmp
sub
stos
mov
add
les
lahf
jo
fstps
and
enter
dec
test
test
push
out
pop
mov
or
xor
adc
enter
dec
fnsave
pop
mov
scas
popf
push
scas
pop
fiadds
pop
jnp
out
nop
scas
dec
pushf
cwtl
add
push
aam
adc
dec
aam
popa
sub
inc
ret
or
ret
jmp
out
test
xor
pusha
jl
pusha
ljmp
jo
adc
scas
dec
test
push
jo
and
or
popa
pop
fdivrl
xchg
xchg
popl
jno
dec
or
ds
cld
out
or
cmp
xlat
inc
xor
push
pop
push
mov
pusha
inc
jmp
stc
movsb
in
mov
mov
mov
mov
push
add
pop
imul
xor
pop
ja
dec
push
testl
jmp
stos
leave
je
or
out
test
jbe
scas
ds
pop
mov
ficoms
mov
adc
repnz
push
aas
adc
pop
xchg
jmp
in
fnstsw
loop
test
jb
mov
stos
in
fdivl
and
in
mov
out
push
sbb
xor
stc
mov
or
rolb
jl
pop
push
test
aaa
out
loopne
push
adc
enter
rcll
in
dec
repz
push
xor
push
jmp
mov
mov
movsl
enter
jnp
xchg
dec
ds
subb
cmpsb
sbb
cld
xchg
loopne
pushf
jbe
pop
adc
or
adcl
jo
or
rclb
or
xchg
dec
inc
add
or
mov
push
jmp
xor
daa
cli
daa
mov
inc
inc
or
test
pop
std
dec
orl
push
mov
mov
pop
dec
dec
mov
ljmp
adc
stos
fmuls
out
adc
adc
testb
neg
add
cmp
xchg
repnz
cmp
xor
cmpsl
scas
pusha
cmp
dec
mov
lds
add
int
add
lahf
push
add
add
or
xor
sub
jmp
mov
cmp
jmp
sub
ljmp
adc
or
add
movsl
push
inc
xor
sti
inc
jmp
nop
push
mov
inc
pop
dec
add
in
xor
sbb
add
enter
pop
jnp
movsb
or
out
push
xchg
popa
pop
arpl
sub
ja
iret
add
scas
jo
mov
inc
addr16
mov
cmpsl
push
pop
push
ds
and
gs
arpl
push
add
xchg
les
lods
xchg
test
ljmp
jl
dec
loopne
imul
xchg
dec
jne
add
add
or
xor
cmp
stos
xchg
daa
pop
rcll
outsl
dec
pop
and
jg
nop
jmp
add
stc
sbb
pop
sbb
xchg
bound
jno
pop
mov
pusha
mov
mov
sub
popa
pop
iret
adc
hlt
or
mov
rcl
mov
and
pushf
or
or
cmp
add
test
subl
outsl
mov
pop
call
pusha
mov
adc
stos
add
mov
xlat
lods
jno
out
add
or
and
pop
pop
mov
sub
loop
inc
jno
out
adc
les
add
sbb
mov
xchg
mov
in
sbb
sub
nop
in
jae
jmp
fldl2t
inc
pop
push
in
shld
stos
and
sti
or
scas
out
cltd
cmp
adc
mov
jle
add
sbb
sbb
and
mov
ret
pop
or
imul
adc
std
add
add
in
fists
unpckhps
pop
arpl
push
mov
mov
into
hlt
leave
nop
push
cmp
xchg
lea
dec
cld
dec
lods
rcrl
je
out
mov
push
loopne
idivb
inc
cli
das
push
or
push
xor
gs
fstps
loop
jge
inc
jp
shlb
and
fs
out
std
mov
pop
call
jle
jo
cmp
int
rcr
test
dec
inc
sbb
sub
dec
ljmp
mov
push
imul
mov
fsubr
rcrb
sbbl
movsl
xchg
ss
push
pop
pop
test
test
sahf
bound
aaa
jo
adc
stos
pop
inc
shl
loope
and
mov
pop
mov
ds
repz
mov
or
fiaddl
loopne
es
js
sub
or
xor
sbb
or
xor
push
adc
adc
daa
mov
push
xor
add
push
mov
adc
fldenv
andl
inc
fmul
ret
pop
jbe
daa
faddp
daa
aam
push
push
jmp
inc
fidivrl
mov
dec
lock
sub
cmp
inc
sub
mov
dec
notl
fsubrp
mov
rorb
push
mov
lret
jge
mov
or
sub
daa
pop
mov
cli
xor
insb
dec
ret
push
dec
cmp
xchg
leave
mov
inc
lsl
les
sti
mov
out
psubusb
icebp
xor
push
jmp
fnstsw
mov
dec
or
inc
sub
shll
sbb
dec
add
shrl
push
pop
push
xchg
loop
xor
or
and
orb
aad
mov
stc
movsb
pop
enter
push
pop
jmp
jg
mov
xchg
clc
jg
cmp
cmpsl
adc
testl
jmp
pop
ja
pop
ds
out
or
dec
push
loope
lock
mov
mov
and
jbe
sub
jb
addl
out
outsl
je
and
mov
inc
mov
or
pop
lods
shrb
shl
ja
and
inc
jmp
and
mov
outsb
imul
add
aad
cmp
xor
push
imul
jmp
sbbl
mov
xor
cs
adc
fs
xchg
jae
mov
pop
add
mov
push
gs
mov
daa
popf
mov
or
fs
mov
and
add
pop
insl
sbb
mov
gs
lock
inc
mov
outsl
xlat
hlt
xor
testl
pop
int3
stos
and
mov
adc
inc
xor
and
int
push
xchg
adc
mov
fistps
add
sbb
rolb
add
mov
dec
aas
lods
push
add
mov
fisubrl
mov
pop
ljmp
ja
lret
add
and
add
or
sbbl
icebp
imul
pushf
jle
rcll
mov
inc
bswap
out
pop
pop
sbbl
pushf
jnp
xchg
mov
push
jae
sub
add
ret
loope
xor
mov
rorl
add
daa
inc
or
push
or
cmpsb
rclb
xor
pusha
flds
mov
nop
jae
jle
push
test
jmp
adc
mov
je
sub
inc
pop
xor
inc
mov
xor
lret
call
arpl
pop
or
mov
fbstp
add
sub
aad
dec
fdivrs
jns
push
in
jmp
jecxz
inc
subb
in
adc
mov
sub
mov
and
xor
or
lret
add
inc
inc
adc
sbb
fcomps
xor
inc
sbb
cmp
pop
rcll
test
mov
hlt
std
sti
lods
jg
jecxz
jmp
mov
cmp
in
scas
out
mov
daa
pop
adc
mov
jns
int3
mov
pop
push
jmp
inc
mov
popf
aas
or
pop
jae
sbb
in
movlps
test
mov
dec
pop
jle
xchg
push
jmp
scas
dec
movsl
sbb
test
out
aam
or
pop
push
aam
test
xchg
ljmp
aaa
sub
out
dec
pop
leave
sub
mov
push
mov
or
fcompl
loop
jg
mov
adc
out
aas
popf
inc
in
loopne
fstl
add
lods
push
dec
hlt
pop
daa
push
mov
jmp
cmc
cmp
rorb
testl
jg
lock
sub
je
add
cs
add
test
cmp
aas
jg
push
ret
arpl
jmp
inc
and
or
sub
or
out
outsb
cs
out
mov
setbe
mov
cs
xlat
movsb
dec
cmpsl
jg
xchg
idivl
je
cmp
and
push
mov
push
xor
pop
push
int3
scas
push
rolb
lahf
push
js
pop
sbb
lock
xor
fdivr
leave
mov
pop
mov
mov
push
push
imul
adc
push
inc
jmp
mov
add
sub
mov
arpl
mov
push
xor
pop
push
inc
add
add
shr
jmp
cmp
mov
pusha
xorl
lret
inc
jg
mov
cmp
sarl
or
dec
sub
pushf
test
mov
dec
or
notl
push
push
pop
lods
push
scas
add
in
fisttpll
ja
es
xchg
mov
push
push
mulb
push
add
std
sub
jmp
outsb
es
mov
fdivrp
jae
add
cmp
dec
ljmp
push
mov
and
pop
cmp
add
add
dec
and
shlb
pop
jmp
sub
js
push
pushw
cwtl
dec
jmp
jp
adc
add
fs
cmp
jmp
ret
ds
jp
out
rcl
push
cmp
or
jmp
lock
jbe
adcb
jle
dec
jp
mov
add
jmp
inc
movaps
push
xchg
nopl
mov
sbb
fistps
lds
les
or
sub
int3
pushf
jns
inc
jo
add
pop
imul
mov
push
sbb
pop
push
push
dec
test
addb
test
jecxz
clc
das
xor
lds
push
fsts
add
faddl
in
jnp
hlt
mov
cmp
shlb
pushf
sbb
sub
ret
or
cwtl
das
or
or
insl
jle
pop
or
aas
push
xor
stos
iret
push
dec
lock
jnp
stos
scas
hlt
add
jmp
fsubrs
cmp
add
pusha
das
mov
daa
inc
or
sub
leave
xlat
rcrl
imul
or
fidivs
cmp
sub
sbb
or
add
adc
dec
loop
push
adc
add
dec
xlat
int
inc
inc
push
sbb
push
shl
jmp
push
xor
mov
aaa
repz
repnz
adc
dec
xor
mov
int
pop
or
sub
pop
nop
int
xor
stos
insb
or
pop
push
and
pop
test
ss
or
jmpw
add
sub
adc
jns
mov
rolb
or
adc
ljmp
add
shr
pop
aam
pop
pop
jle
mov
or
push
mov
inc
sub
mov
inc
and
cli
aad
or
push
lods
shr
les
cwtl
xor
inc
adc
bound
or
jecxz,pt
mov
mov
scas
or
mov
jge
push
mov
xor
loope
aas
test
mov
shll
stc
shlb
add
movsb
jns
xor
xchg
or
xchg
xchg
pop
mov
xchg
push
test
jno
outsl
les
hlt
repnz
push
adc
xorb
jmp
jmp
out
sub
add
push
dec
mov
jl
mov
rcrl
in
xor
xchg
test
jne
mov
mov
sub
loop
dec
xor
int
add
dec
lods
pop
push
push
mov
jg
dec
mov
mov
mov
loopne
add
fcmovb
xor
xchg
sub
js
mov
hlt
jmp
mov
lahf
sbb
shll
xlat
adc
ja
and
fmuls
add
sbb
xchg
push
pop
or
mov
lret
daa
jle
lret
push
hlt
das
neg
inc
mov
out
pop
popa
push
mov
xor
pop
mov
loopne
pop
sbb
leave
xor
mov
into
in
inc
cli
pushf
in
xchg
and
movsl
add
imul
adc
cmpsb
cmp
sub
jle
pop
xor
xchg
cmc
sbb
popf
idivl
aad
pop
inc
inc
inc
nop
and
adc
mov
and
mov
or
in
or
add
pop
lock
xchg
hlt
lods
add
movsb
xchg
dec
cmp
mov
ljmp
mov
xor
dec
pop
adc
jne
sti
jmp
ss
push
aaa
cmp
adc
das
loopne
cmp
xchg
pusha
inc
fs
fldenv
shrl
pop
cwtl
hlt
jae
jb
cwtl
icebp
pop
or
ret
pop
add
dec
or
push
or
add
out
nop
jp
fcmovnu
in
pop
nop
aaa
xchg
or
cltd
repz
push
inc
call
push
add
mov
mov
jge
sub
lret
pop
orl
js
mov
sub
jge
mov
mov
and
xor
pop
xor
xchg
mov
jp
dec
lods
inc
adc
cmp
sbbb
cmpsl
mov
int
fmuls
add
jmp
shl
add
jb
call
adc
mov
adc
loopne
dec
inc
cmpsl
ret
or
pop
mov
or
push
push
scas
scas
mov
pop
adc
cld
insb
adc
roll
mov
repz
fstps
jb
or
cmpsb
shrb
adc
or
testl
frstor
sub
and
mul
mov
xchg
pop
sbb
jmp
dec
cwtl
xorb
pushf
shl
xchg
hlt
sub
aam
xchg
add
cmp
add
jle
aad
test
push
fisttps
fidivrl
inc
inc
jecxz
lcall
xor
cli
cmp
jae
data16
mov
imulb
or
js
jno
insb
dec
pop
call
mov
jnp
push
add
icebp
push
mov
fisttpl
int3
and
pusha
testb
adc
cmp
hlt
mov
daa
xchg
dec
dec
cmp
aad
rclb
dec
inc
push
add
sub
push
mov
sub
mov
faddl
fisttpl
lods
je
mov
push
sub
scas
ds
imul
mov
push
mov
lahf
push
out
jmp
in
inc
or
and
in
jnp
mov
outsb
sbb
inc
jb
pop
inc
mov
call
add
pop
sub
push
aaa
inc
or
sub
inc
fwait
inc
cld
pop
push
not
std
stc
je
pushf
call
sub
push
pop
fldcw
add
add
sub
jno
mov
mov
jnp
xchg
xor
jo
xchg
push
adc
dec
push
or
inc
bound
in
xor
cmpsl
push
xchg
mov
sti
pop
lds
cld
pop
sub
add
imul
ret
int3
in
or
je
jecxz
andl
fistl
adc
add
dec
jle
arpl
popf
jne
jbe
sbb
sbb
push
add
fdivl
jmp
repnz
enter
mov
ss
in
iret
movsb
rclb
pop
add
or
aad
rolb
mov
outsl
not
mov
xor
iret
xlat
push
mov
xlat
loope
xchg
xor
dec
cld
hlt
adc
jmp
dec
push
lahf
xorb
sub
add
mov
or
jo
inc
cmp
mov
cmp
add
pop
mov
das
pop
fidivrl
int3
mov
dec
shrl
fidivrs
sbb
add
push
add
push
adc
xchg
add
addr16
pop
fldenv
addl
inc
add
add
subb
add
xor
add
or
or
and
dec
ljmp
mov
sub
push
popl
and
sar
fisttpl
adc
ljmp
cmc
push
jns
adc
lret
and
mull
sbb
jnp
jne
in
es
add
fs
adc
mov
jge
add
jg
sub
cmp
dec
out
lret
or
xor
mov
jp
lret
mov
jns
test
mov
cmp
not
jmp
popl
loop
mov
push
mov
push
push
pop
mov
jmp
pop
pop
and
shlb
outsb
in
nop
aad
adc
out
sbb
lds
mov
int
sti
or
lock
or
dec
cmpsl
cmp
add
aad
push
mov
pop
xchg
fisubl
jne
add
xor
xchg
ds
loop
fisttps
ret
and
push
pop
insl
stos
adc
push
lcall
inc
ds
lret
inc
ret
rorb
pop
xchg
stc
repnz
or
stos
test
lods
pop
jmp
ss
mov
mov
fsubp
sbbb
insb
xor
in
lret
xor
xlat
pop
cld
les
xor
cld
inc
das
adc
xchg
popf
pop
scas
repnz
mov
or
push
shrb
adc
ljmp
mov
rcrl
pop
sti
sub
imulb
adc
in
imul
scas
daa
mov
pop
and
loope
rorb
daa
cmp
test
adc
adc
fwait
aam
jmp
test
test
xchg
or
jnp
bound
dec
imul
stos
jo
pop
adc
add
push
movsl
push
dec
sub
call
push
and
pop
sub
movsb
xor
inc
inc
jmp
mov
jge
and
bound
cmp
mov
push
inc
cmc
adc
push
mov
loope
push
sub
inc
out
in
push
mov
adc
sub
test
cwtl
aam
hlt
mov
ret
fs
and
mov
and
test
es
test
bound
dec
inc
and
xor
in
shll
aaa
xor
jge
mov
test
xor
pusha
sbb
dec
lret
lcall
mov
rcrl
add
int3
fldenv
adc
mov
fisubrs
sub
fisubrl
adc
adc
push
add
jge
int
sti
jo
je
add
neg
add
xor
jle
sub
add
sbb
dec
orb
push
shrb
adc
jns
sub
in
iret
sbb
mov
sbb
cli
mov
pusha
in
pop
sub
sbb
xor
xor
mov
and
pusha
pop
xchg
dec
lock
mov
lea
repz
add
xlat
insl
sahf
ds
pop
push
push
push
pop
and
or
inc
in
jae
push
inc
and
sub
adc
push
fsubrs
inc
movsl
mov
mov
push
call
in
pop
pushf
pop
insl
add
incl
mov
and
in
jmp
jmp
out
jecxz
pop
loop
sub
cs
add
ret
shl
aas
lods
xchg
mov
push
mov
test
pop
lods
es
rcrl
mov
jmp
imul
outsl
push
lods
or
sub
in
sub
mov
push
pop
mov
rolb
push
cs
loope
test
lods
sub
and
add
xor
daa
lea
imul
push
pop
fldl
orl
sub
sbbb
imul
cmp
leave
test
pop
xchg
or
outsl
sub
sub
and
dec
pop
stos
and
mov
clc
faddl
mov
add
es
sub
push
sub
cmp
dec
ds
imul
or
dec
pop
inc
add
sahf
imul
jb
inc
or
loope
adc
add
mov
test
cmp
add
sub
cmp
and
rclb
hlt
add
push
cmpsl
call
ss
outsb
push
out
adc
adc
mov
inc
pop
add
jb
cmc
out
add
dec
fsubp
push
shl
xchg
push
or
inc
adc
mov
aas
loop
mov
stos
iret
xor
inc
stos
sbb
mov
lock
negb
jp
mov
mov
std
cmp
or
pop
ret
dec
daa
sti
jmp
and
gs
mov
test
mov
xchg
dec
test
xor
test
bound
xchg
adc
and
insl
subb
cmp
adc
icebp
rcr
lds
push
popa
dec
iret
jns
pop
f2xm1
add
xor
adc
add
and
cmp
push
fimuls
push
dec
sub
stos
pusha
inc
insb
sub
mov
jmp
popa
adc
ds
and
dec
cmp
nop
sub
xchg
push
add
inc
clc
iret
inc
pop
xacquire
pop
imul
mov
clc
movsl
and
jae
cli
test
loopne
adcb
je
add
hlt
and
mov
arpl
mov
pop
and
xor
xor
testl
mov
pusha
jmp
ret
sbb
xor
jno
aas
mov
sub
lcall
jno
pop
rolb
jmp
shlb
jo
repnz
movsl
pop
movsl
test
jbe
cld
js
lods
add
sbb
sbb
jmp
out
daa
or
dec
in
push
movsb
shll
mov
pop
mov
xchg
loopne
jns
cmp
mov
push
hlt
mov
add
movups
fidivrs
inc
aad
and
repnz
lods
mov
sbb
ljmp
mov
sub
pop
jmp
jecxz
dec
jg
xor
imul
fisubrl
sbbl
gs
dec
fiaddl
or
jmp
ret
call
cmpsb
and
xorb
addb
xchg
xor
push
jbe
jmp
push
xchg
or
push
mov
call
xchg
and
ret
pop
push
push
xchg
pop
push
pop
cmp
in
xor
add
orb
sub
ljmp
jne
stos
dec
or
rcrb
pusha
push
lcall
mov
dec
push
xor
aaa
or
dec
jns
fadd
add
cmp
clc
jg
pop
out
add
dec
stc
sbb
xor
icebp
inc
pop
sbbl
imul
sub
mov
in
mov
mov
jle
inc
and
mov
rolb
xchg
add
push
jmp
movsl
iret
in
adcb
pop
mov
mov
inc
push
fistl
dec
cmp
and
jl
sbb
insb
das
fists
cmp
sub
scas
xchg
mov
icebp
push
pop
loopne
std
mov
push
xchg
test
aaa
push
stos
repnz
push
mulb
jle
ja
int
jns
mov
or
roll
push
push
push
aam
inc
push
mov
ret
dec
aaa
dec
aas
cmpsb
int
push
or
and
das
mov
fistpll
jmp
dec
xor
mov
mov
push
out
and
cmpsb
or
das
add
pop
and
pop
sub
or
outsb
sarb
pop
pop
lahf
orb
or
mov
jp
pop
std
dec
push
lods
test
pop
scas
mov
bound
xchg
jmp
dec
es
mov
das
pop
pop
dec
push
cmpsl
push
push
lahf
push
mov
ss
enter
mov
inc
mov
cmp
pop
or
pop
dec
pop
shr
and
add
mov
mov
xchg
jmp
lods
daa
dec
loop
call
or
outsl
mov
out
cmpsb
mov
adc
test
mov
je
subb
mov
pop
lock
pop
xchg
lds
xchg
add
addr16
pop
mov
les
add
sarl
inc
xchg
nop
xor
and
mov
enter
iret
push
adc
in
cwtl
mov
movsl
pop
push
jmp
dec
in
cwtl
fiadds
mov
cmp
rolb
mov
xchg
mov
daa
rorb
push
clc
pop
jbe
cmp
jle
jb
xor
sti
pop
push
out
lahf
andb
lods
adc
dec
pop
mov
shl
cs
mov
adc
xchg
mov
add
push
imul
inc
dec
and
sbb
enter
lock
daa
sub
lods
cmp
add
out
lret
sbb
in
add
daa
push
test
mov
mov
xor
out
rcrl
clc
push
pop
jmp
push
or
adc
inc
repnz
push
inc
xchg
jmp
ret
push
jno
or
cmpsb
repz
test
xchg
call
sub
sti
sarb
mov
xor
pop
stos
sub
pop
iret
cmp
xchg
pop
jecxz
or
outsl
xorb
sub
push
pop
sub
mov
fisubrl
jp
arpl
stc
mov
addr16
adc
mov
jg
adc
pop
jg
out
dec
sub
mov
rcll
jmp
bound
sub
jle
jo
out
adc
jmp
add
je
sahf
addl
clc
lcall
lret
inc
movsb
adc
jmp
fildl
mov
jmp
loopne
jo
sub
pop
lret
and
enter
pop
cmp
push
sub
jb
ret
stc
in
jmp
mov
push
ret
xchg
mov
and
test
mov
fcompl
lahf
cmpsb
dec
mov
dec
jge
fisttps
push
jmp
iret
lds
aas
mov
inc
sbb
add
inc
xor
negb
imul
sub
xchg
mov
imul
pop
mov
xchg
or
mov
mov
mov
stc
sub
iret
es
push
and
fstpl
xchg
sub
pusha
add
jmp
pop
insl
lret
pop
jmp
loopne
lgs
rolb
and
ds
sbb
or
into
cmp
mov
push
push
xor
cli
adc
or
sub
testb
pop
sbbl
dec
or
adc
or
jmp
into
cmp
stos
mov
inc
jle
mov
cmp
pause
in
and
or
fisubl
push
rcrb
lods
aad
add
push
roll
or
gs
xlat
cs
out
lods
icebp
xchg
mov
push
test
mov
and
mov
bound
adcl
ljmp
and
jno
adc
jle
pop
fucomp
leave
mov
sub
mov
mull
add
nop
adc
or
sub
jp
add
fbld
lods
inc
frstor
sub
sub
add
add
loopne
shl
add
dec
cmp
mov
mull
in
push
mov
movsl
mov
cmp
adc
mov
or
das
mov
mov
add
inc
enter
mov
inc
dec
popa
add
and
xorb
xor
jb
mov
push
fnstenv
icebp
arpl
das
int
inc
jns
xchg
jbe
ljmp
ret
push
add
ret
ljmp
add
out
mov
movsl
adc
dec
mov
aaa
lods
or
pop
pop
and
or
pop
sti
sbb
sti
xchg
sub
test
add
push
adc
cmp
xacquire
arpl
ficoms
xor
add
shld
jne
xchg
imul
xlat
ret
dec
loop
mov
fidivrl
inc
dec
push
xchg
int3
lret
sbb
sbb
adcb
adc
pop
mov
sbb
pop
mov
movlps
or
push
push
orb
popf
fstp
sub
add
xor
or
add
and
add
lock
push
pop
js
mov
sub
test
scas
push
dec
push
daa
add
popf
mov
inc
test
arpl
mov
mov
jp
jo
mov
or
add
and
mov
xor
dec
push
sbb
inc
insl
sbb
and
or
mov
lods
movsl
insb
das
movsb
xchg
pop
xchg
ficomps
push
pop
popf
fsub
adc
adc
jno
loopne
sbbl
or
lock
enter
test
dec
js
out
dec
xchg
icebp
dec
jb
nop
dec
loop
or
or
int
ja
push
aas
loopne
sarb
leave
cli
mov
je
jno
jg
push
mov
mov
add
or
mov
pop
in
fistps
push
and
test
sub
sub
sub
dec
lahf
imul
mov
pop
cmp
jg
pop
sbb
clc
test
mov
cs
test
mov
testl
fidivrs
or
fsts
sbb
push
daa
xchg
jns
imul
add
mov
pop
push
xor
push
dec
shrl
lods
aam
or
adc
lods
cmc
dec
scas
adc
fsubrs
inc
jmp
pop
cmp
jne
js
ljmp
dec
inc
or
fstl
sbb
jecxz
fs
roll
outsl
xchg
xchg
rcll
or
mov
fsts
or
shrl
movsl
add
dec
sahf
fists
jmp
das
adc
or
fmul
mov
push
xor
test
add
pop
mov
jo
fstps
cmc
call
sub
sub
std
daa
xor
sbbb
gs
pop
push
push
in
xlat
mov
andb
test
pop
xchg
or
mov
cmp
addb
add
sub
and
scas
cwtl
popa
mov
inc
orb
pushf
push
rclb
adc
negl
jmp
out
movsl
pop
mov
adc
repz
and
jmp
mov
jle
pop
add
or
pop
mov
pop
addb
or
cli
and
imul
xchg
subps
dec
jmp
push
mov
jge
pop
and
push
bound
imul
daa
sub
push
negl
push
adc
rolb
add
dec
pop
or
lea
cmpsl
jp
cmp
in
mov
inc
add
into
and
sarl
mov
jb
push
or
adcb
popf
push
cli
xchg
jns
pop
int
or
lods
data16
and
xor
or
notb
rcrb
mov
sarb
sbb
loopne
or
lret
xchg
or
jo
mov
test
fldcw
ljmp
xlat
test
dec
test
dec
pusha
adc
mov
lahf
insl
in
push
adc
push
xchg
jnp
add
jg
out
xor
pop
xchg
lret
ja
cmp
push
adc
jecxz
repz
push
pop
add
ljmp
sbb
pushf
push
xor
xchg
xor
xlat
add
jle
dec
mov
popl
test
dec
dec
scas
enter
dec
sbb
stos
outsb
fmuls
mov
pop
sub
inc
mov
rcll
fsubr
not
or
out
mov
dec
sti
into
ja
pop
enter
mov
sub
fcoml
mov
pop
dec
add
js
push
cld
loopne
mov
mov
int3
dec
pusha
movsl
add
push
add
push
adc
sarb
sbbl
je
shl
fcmovb
cmp
add
in
pushf
mov
jnp
sub
xchg
repnz
call
jnp
sub
or
pop
dec
in
and
fldcw
cwtl
fiaddl
add
pop
add
xchg
js
stos
test
cmpsb
incl
dec
or
dec
jp
lret
orb
enter
es
inc
mov
jne
icebp
lret
mov
and
xor
push
push
stc
mov
xor
sbb
cmp
sub
fidivl
xchg
pop
test
inc
or
add
mov
test
imul
mov
adc
mov
fsubl
sbb
dec
adc
dec
add
stc
notb
add
or
std
mov
xchg
inc
cmp
mov
sbb
ret
aaa
dec
sub
js
push
stc
insb
jne
out
sbb
mov
sub
xor
aaa
xor
pusha
xor
add
mov
jmp
neg
mov
xchg
std
adc
and
xor
pop
or
movsl
pop
push
mov
subb
fucomp
mov
pop
insl
fisttps
test
sbb
inc
cmpsl
push
jns
or
push
dec
and
push
icebp
push
arpl
xor
mov
add
into
sbbl
and
out
xchg
repz
adcb
jmp
out
sub
adc
jle
adc
mov
ljmp
jmp
xchg
xlat
push
loope
pop
pop
repz
inc
or
add
mov
cwtl
fnstsw
jbe
or
push
mov
loope
or
mov
push
bound
rcrl
push
add
in
outsb
pop
mov
outsl
adc
or
jmp
mov
pop
xor
add
jne
mov
or
mov
xchg
sti
xor
add
addl
push
inc
ret
lcall
inc
cmc
cld
mov
pop
pop
sub
push
mov
loope
jecxz
gs
jmp
cld
scas
and
xchg
dec
cmp
mov
jmp
std
xchg
ljmp
cld
and
mov
sbb
push
and
loopne
and
push
xor
xchg
inc
push
mov
push
mov
dec
cwtl
hlt
lcall
int
push
ja
xor
test
sti
jecxz
xchg
add
mov
fs
sub
adc
jp
lods
cltd
icebp
xor
ja
lods
mov
sub
mov
push
cmp
dec
add
dec
cmpsb
fstpl
jo
jmp
repz
jbe
cld
pop
mov
sub
rcrl
mov
dec
ficomps
pop
adc
sub
loop
aaa
adc
stos
aaa
jae
jb
add
push
dec
push
sub
out
int
faddl
pop
jmp
pop
push
push
scas
xorb
pop
inc
mov
and
mov
not
jmp
push
pushf
mov
push
xchg
fstps
push
add
adc
loop
addr16
jo
ficoml
test
and
xor
push
ret
xor
push
jmp
test
push
sub
mov
push
push
pop
or
jle
and
add
push
add
pop
sarl
xor
mov
arpl
cmp
movl
xchg
mov
daa
jns
leave
clc
es
call
xor
mov
movsl
adc
add
insb
jl
js
or
add
out
rolb
test
ss
xchg
xorl
inc
cmp
xchg
sub
pop
jl
push
sub
stos
popa
aad
adc
jae
ret
je
jle
and
ficoml
cmp
insb
scas
mov
or
adc
in
test
jmp
jne
test
jmp
mov
xor
loopne
cwtl
push
jne
scas
mov
repz
mov
lret
orb
add
xchg
fs
pop
pop
testl
sub
mov
sbbl
push
daa
jmp
rcrb
lods
adc
push
push
adc
dec
mov
scas
test
hlt
and
sbb
mov
xlat
pop
pop
lods
xlat
adc
and
xor
dec
ss
aad
icebp
aas
lock
jbe
and
xlat
push
es
or
mov
add
cmp
pop
outsb
adc
pop
pop
add
and
or
gs
lret
xorps
xlat
sbb
push
mov
or
ficompl
mov
test
xchg
push
sbb
jle
jo
mov
scas
and
jae
hlt
daa
push
lds
xchg
outsl
notb
and
push
mov
mov
clc
movsb
std
inc
fidivs
outsl
pop
push
or
adc
lods
push
loope
lds
push
add
xor
jno
rorb
mov
fwait
dec
adc
and
lods
mov
sbb
pop
mov
filds
int3
add
and
shlb
pop
inc
and
out
loopne
addb
push
dec
sbbb
mov
adc
pop
or
add
push
scas
clc
add
outsl
hlt
roll
push
pop
call
pop
mov
fiaddl
shll
test
or
sbb
add
inc
or
xor
dec
jl
popf
cmp
dec
pop
test
lea
les
cmp
neg
das
dec
push
add
add
lds
mov
or
mov
add
hlt
mov
pop
fistpll
test
popf
std
sahf
jb
push
sti
jns
orb
jmp
movsb
or
outsb
pop
xchg
loop
push
jae
sub
mov
lds
cmp
mov
sahf
xor
mov
or
dec
popf
pop
adc
es
or
push
xchg
sub
jo
jg
mov
out
mov
jmp
push
pop
or
aaa
jle
mov
shll
in
add
mov
pop
mov
mov
push
out
xchg
pop
imul
outsl
decb
pop
arpl
clc
stos
rcrb
jmp
ds
out
or
dec
mov
push
sahf
roll
jns
pusha
jle
iret
aad
test
adcb
and
pop
dec
testb
rcrl
outsb
add
outsb
dec
cmpsb
cmp
in
mov
clc
insl
movsb
cmp
push
push
mov
dec
inc
pop
sahf
mov
movsb
adc
push
xlat
jge
fs
add
pusha
arpl
add
push
mov
inc
xchg
jmp
and
ljmp
in
mov
pop
cmp
push
dec
pop
push
inc
inc
sub
jg
subb
add
pop
inc
and
cltd
cmp
push
sbb
add
mov
xchg
add
xor
inc
fsubrl
mov
or
repz
jge
imul
lret
loopne
shlb
stos
xchg
cmp
jg
or
jnp
mov
and
clc
add
ret
xchg
push
cs
xor
sub
and
dec
leave
push
push
and
std
mov
shl
xor
fcompl
sbb
scas
daa
loopne
cmp
sub
mov
mov
mov
inc
test
pop
sahf
js
push
lret
cs
cmp
adc
push
mov
sub
lods
add
mov
mov
cmpsl
loope
scas
dec
cmpsb
xchg
xchg
rcrl
jg
xchg
addr16
test
mov
ds
adc
or
test
jle
or
jmp
pop
pusha
or
cld
pop
xlat
mov
sub
dec
dec
inc
orb
out
mov
add
push
frstor
scas
xor
xchg
mov
lahf
push
test
jmp
push
icebp
test
add
pop
in
and
pop
ja
mov
rorl
mov
sbb
sub
pop
std
xorb
cmp
cs
pop
and
fisttpl
in
dec
sbb
mov
pop
arpl
shl
loopne
jl
sub
pop
popf
mulb
sbb
mov
loop
push
in
mov
ret
rolb
xor
or
mov
or
dec
test
jmp
push
sti
je
add
je
mov
lock
xor
popf
aam
test
lret
inc
jae
xchg
xor
or
and
jg
es
arpl
sub
jne
mov
jmp
and
out
cmpsl
or
test
aam
and
sarb
add
cmc
or
pop
and
bound
ret
and
add
jmp
adc
rorb
js
pop
jmp
out
rcll
and
repnz
push
xor
sbb
jmp
or
xchg
movsl
scas
pop
scas
ret
push
out
add
jle
push
push
test
pop
and
xor
jae
fsubrs
and
xlat
fsubrs
add
adcl
dec
sub
add
test
cmp
pop
scas
lret
mov
xchg
aam
inc
rorl
jns
mov
out
les
jmp
mov
cmpsl
lahf
lret
adc
pop
subl
shr
mov
mov
or
push
in
jmp
add
sub
inc
or
xor
jmp
add
xor
lcall
inc
js
repnz
pusha
adc
scas
popf
jns
ret
shrl
jbe
cli
xor
popa
push
popf
dec
xlat
popa
out
adc
mov
loop
adc
enter
out
shr
xchg
pop
ljmp
add
sub
adc
add
pop
inc
cmp
add
cltd
mov
pop
movsb
dec
adc
jne
mulps
xchg
inc
fadds
pop
push
dec
jmp
jl
pop
xchg
mov
movsl
cmc
xchg
mov
jge
lret
cmpsl
pop
lcall
add
popa
push
sub
push
mov
jne
adc
into
cld
mov
mov
pop
push
gs
setbe
jle
or
pop
fldt
sbb
dec
mov
add
jecxz
mov
hlt
fwait
jne
jb
gs
push
icebp
outsb
add
ljmp
sbb
cmp
out
pop
test
cwtl
xchg
push
xchg
lock
aas
sub
or
lock
xor
divb
dec
in
jmp
jle
lds
cmp
daa
inc
lret
faddp
shrb
loope
sub
mov
loope
add
mov
sub
or
push
push
pop
stc
xorl
popa
push
loop
xor
xor
hlt
outsb
sbb
out
and
adc
mov
outsl
dec
xchg
push
ljmp
mov
jbe
jne
pop
pop
aas
test
sub
sbb
inc
es
push
aaa
push
jo
retw
push
rorb
ret
xorb
stos
mov
sub
jo
pop
sbb
add
mov
add
add
loop
dec
inc
jle
or
adc
and
xor
sbb
pop
add
inc
cmp
loope
xchg
idivl
xor
push
das
or
aas
cmp
inc
pop
mov
jge
push
sbb
xchg
adc
jns
mov
insb
addr16
xor
xchg
shlb
lret
dec
lret
daa
jle
and
add
addl
dec
inc
mov
hlt
adc
adc
and
mov
icebp
enter
jo
cmpsl
stc
or
xchg
mov
cmpsl
dec
pop
nop
adc
pop
or
icebp
ret
movnti
cmp
insb
das
stos
xor
add
mov
xor
jae
add
add
jmp
add
shl
fiadds
add
sti
sti
pop
mov
pop
icebp
in
dec
sarb
bound
or
xor
outsb
xor
mov
imulb
bound
popa
lods
scas
arpl
push
dec
and
adc
cmp
ret
or
pop
icebp
cld
pop
xorl
adc
cld
xor
or
mov
in
cltd
shlb
and
push
fucomp
es
xor
rcll
cld
mov
mov
rcll
stc
or
stos
add
fs
or
out
nop
das
jmp
pop
mov
add
pop
push
adc
mov
dec
add
repz
pop
or
cld
xchg
cmp
and
fcomp
push
jmp
ja
aad
call
sub
not
mov
and
rcll
mov
mov
lahf
fiadds
test
or
push
inc
aas
pmuludq
push
xchg
sub
or
xor
adc
cmp
imul
mov
jne
cli
xchg
sti
xchg
in
stos
cmpsl
inc
dec
jne
cmpb
pop
jo
jb
movsl
imul
xchg
imul
sub
lods
lods
mov
jmp
push
pusha
push
mov
js
sarl
jp
inc
pusha
push
ja
adcb
les
mov
nop
js
jp
ds
pop
and
jae
rolb
pop
jl
mov
inc
push
push
mov
push
push
mov
jmp
repz
in
daa
adc
jg
inc
scas
lret
clc
pop
xchg
inc
test
inc
pop
bound
bound
sbb
add
inc
lock
ret
insb
shl
std
pop
cmp
add
test
inc
push
mov
or
inc
movsl
jne
inc
pop
and
xchg
mov
insl
add
shll
rol
jmp
mov
jmp
pop
mov
jo
shlb
call
push
stos
adc
in
mov
out
inc
stos
lcall
pop
leave
xchg
loopne
call
sub
xchg
push
js
scas
pop
enter
inc
jae
or
mov
sarl
mov
push
ret
and
inc
sbb
pop
pop
scas
or
pop
push
pop
test
mov
dec
xlat
fs
mov
add
negl
adc
ror
nop
xlat
mov
sbb
call
mov
jb
or
jae
xor
mov
mov
aas
mov
xor
arpl
das
push
loope
or
pop
push
inc
dec
inc
pusha
loopne
divl
popa
fisttps
jmp
dec
mov
ljmp
loopne
push
popf
lods
inc
hlt
pop
in
and
pop
push
jmp
mov
dec
dec
push
sub
ja
subl
imul
leave
jo
pushf
aaa
push
dec
adc
or
daa
sarl
scas
mov
cmc
xchg
push
jbe
dec
add
adc
mov
mov
cmp
into
sub
neg
shlb
jb
test
cld
fistl
jmp
dec
ret
add
xlat
test
nop
ss
pusha
mov
rcrl
xchg
jne
xchg
sub
jns
add
push
push
fdiv
mov
sub
out
inc
jl
mov
cld
sbb
or
mov
stc
adc
incl
push
push
adc
bsr
push
jnp
xor
pop
std
test
push
pop
mov
or
push
test
jmp
loop
or
jge
cmp
sub
int3
jns
pop
cmp
mov
rcrb
xor
inc
pop
icebp
mov
loopne
dec
aas
cli
add
and
push
pop
hlt
cmp
aad
nop
cmpsl
rorl
pop
sub
push
call
sub
pop
lock
rep
addl
lahf
mov
and
mov
orb
cmp
dec
push
mov
andl
cmp
or
mov
pop
cmpl
inc
xor
lods
or
inc
bound
adc
and
jo
lds
xlat
cmp
daa
mov
xlat
in
dec
jle
dec
mov
adc
cmp
xorb
mov
scas
mov
push
shrl
jbe
cmp
gs
sbb
orb
xchg
testl
test
sub
xlat
sub
outsl
stos
inc
dec
gs
jge
enter
jecxz
xor
stos
loopne
negb
mov
push
out
addr16
pop
pushf
sti
ss
lea
fisubrs
push
out
or
orb
adc
or
and
or
ljmp
ret
add
jecxz
aam
arpl
fwait
pop
mov
mov
push
outsl
movswl
push
inc
test
aam
inc
add
xor
jg
sbb
xchg
or
ret
lods
and
xchg
sub
xor
mov
ljmp
or
lds
jp
sub
stos
mov
stc
add
lods
add
pop
scas
sbb
loope
mov
cmp
sub
pop
dec
push
movsl
loopne
push
xchg
shll
clc
mov
daa
xchg
in
das
imul
jge
mov
push
xor
subb
std
jg
lods
lods
lahf
pop
mov
push
adc
or
mov
cmp
pop
fildll
leave
fisubrs
rolb
xor
fld
xchg
and
mov
pop
push
adcb
mov
pop
xchg
push
popa
dec
stc
cwtl
add
mov
dec
xor
sbb
push
fs
mov
inc
insl
out
sahf
inc
imul
inc
bound
dec
popa
sbb
lret
or
xchg
test
and
adc
pop
adc
sub
scas
push
rcrl
mov
cltd
jle
jmp
ficomps
add
sub
fidivs
shl
jg
xor
jns
lret
push
jb
sub
mov
cwtl
jmp
mov
and
push
stc
and
add
sub
inc
pop
repz
out
insb
inc
cmc
pusha
jno
inc
or
add
add
dec
xor
push
loop
js
test
jnp
sti
push
jns
out
pop
dec
push
cmp
not
xchg
aad
mov
jge
jge
pop
mov
pop
fstp
in
xchg
cmp
rolb
cmp
mov
out
push
icebp
jle
mov
imul
nop
ja
mov
stc
popa
repz
add
ljmp
call
cs
out
test
adc
rorl
lahf
dec
pop
or
imul
xchg
test
or
pop
and
imul
int3
add
test
fsubr
jo
pop
or
inc
and
adc
sti
out
mov
test
xchg
stos
add
push
jmp
push
cmp
imul
xlat
xchg
lcall
jmp
add
inc
pushf
inc
add
bound
add
test
jg
sbb
bound
int3
or
add
jb
pop
pop
popa
pop
lds
subb
retw
sbb
push
stc
add
inc
jmp
dec
dec
mov
enter
jns
sti
pop
add
push
mov
daa
cmpsb
ret
iret
or
dec
dec
and
cmp
maxps
das
add
sti
mov
insl
jmp
leave
xchg
mov
push
push
sar
pop
mov
jge
test
cmp
out
mov
stos
mull
rorl
rclb
jge
jge
adc
xor
pop
psllq
pop
inc
jae
movzwl
xchg
xor
ja
jno
mov
xchg
adc
gs
adc
jl
xor
sbb
mov
cmp
push
leave
or
cwtl
push
xor
adc
pop
pop
or
dec
push
jg
in
sbb
inc
pop
inc
mov
jns
and
int
ds
loop
sub
cmp
or
xlat
sbb
xchg
inc
es
adc
sbb
inc
daa
jne
jno
scas
jne
shll
mov
cmp
push
fucomp
mov
enter
addr16
adc
and
or
xor
and
mov
stc
adc
dec
sub
pop
inc
jle
pop
lahf
xlat
rcll
mov
dec
rcll
sub
pop
inc
or
adc
jge
out
popa
dec
stc
scas
xlat
mov
ret
or
sbbb
add
adc
mov
xchg
enter
pop
cmp
xchg
push
jae
das
test
and
push
fs
repnz
jnp
nop
mov
push
inc
ret
jg
add
loopne
xchg
mov
pop
or
das
iret
push
cmp
aas
lods
adc
mov
je
nop
stos
mov
iret
add
and
arpl
xchg
les
pop
or
jp
jmp
and
les
mov
mov
xor
loop
test
cmp
dec
jmp
test
daa
add
add
adc
stos
data16
dec
jbe
lock
mov
adc
mov
or
shrb
fstl
mov
neg
dec
inc
loopne
in
xchg
sbb
adc
icebp
decb
sarl
stos
add
aas
pop
dec
flds
scas
lcall
std
jle
sbb
scas
ret
and
addr16
add
pop
xchg
pop
les
jl
add
adc
jmp
sub
test
subb
popa
jg
in
jl
xchg
jno
adc
aas
mov
push
rorl
add
add
not
stos
enter
jecxz
lret
push
fcoml
push
gs
xchg
ss
or
push
mov
in
inc
fnsave
into
lea
push
sbb
dec
jb
cmp
lahf
repz
in
sti
adc
stos
cwtl
xchg
adc
in
out
shlb
rcrl
pop
push
adc
adcl
jne
ds
imul
xor
jae
cli
push
or
push
inc
rorl
pop
popa
scas
pop
and
lods
int
test
insb
mov
shlb
faddl
inc
sub
orl
jmp
loop
jle
or
clc
stos
cmpsb
mov
add
gs
call
das
dec
sub
cli
insl
mov
mov
inc
insl
dec
rorb
inc
outsb
jns
adc
shrl
or
std
popl
sub
push
add
cmp
repnz
in
add
andb
shl
shrb
filds
or
outsl
loopne
sub
push
lea
icebp
sbb
sub
inc
jno
js
lock
lods
and
xchg
jbe
imul
fadds
sub
mov
push
in
xchg
xlat
pushf
inc
and
popf
and
movsl
or
loop
jbe
data16
jg
cmp
lahf
xor
jae
fadds
jle
and
add
inc
adc
or
fs
scas
cld
cli
mov
push
lret
pop
mov
fsubrp
adc
ljmp
jle
cmp
mov
push
sbb
rolb
inc
push
mov
pusha
cltd
fs
and
push
pop
sbb
xlat
psubw
push
push
push
es
dec
sbb
aam
imulb
orb
icebp
add
orb
ja
adc
fsubs
and
sub
xorb
jno
mov
pop
xchg
pop
popa
shr
mov
add
iret
addb
push
mov
out
pop
cmpsl
ror
hlt
pcmpgtw
xchg
mov
orb
cmp
or
je
popa
jmp
mov
adc
dec
adcb
insb
adc
push
repz
add
sub
jno
xchg
inc
add
sbbb
dec
enter
fstl
test
fstl
xor
xchg
inc
fs
sbb
mov
inc
push
add
outsb
rclb
jne
ja
add
sub
pop
testl
push
mov
out
sub
mov
inc
int3
movsl
pop
push
add
lret
cmc
dec
js
dec
jge
adc
in
in
mov
jge
mov
dec
adc
ret
mov
cld
or
xchg
fists
mov
pop
mov
mov
sbb
and
sbbl
or
pop
out
dec
pop
shl
ljmp
adc
jge
add
jmp
inc
xchg
sbb
das
cld
fadds
mov
xor
sub
stos
dec
push
fsubs
aam
sub
ret
cmpl
outsb
dec
add
add
inc
or
inc
sub
mov
jp
xchg
addr16
cmpsb
jge
push
mov
or
xchg
loopne
add
je
mov
xor
add
inc
es
mov
or
jno
add
rcl
or
mov
scas
cmp
push
xor
inc
add
cmp
jb
cltd
out
in
mov
loopne
mov
sub
repnz
subb
pop
frstor
adc
push
mov
jl
aad
cli
sub
dec
jl
popl
adc
test
cmp
adc
enter
je
push
stc
aam
jmp
jge
aaa
cmp
and
mov
mov
sbb
dec
sarl
add
das
pop
push
pushl
sbbb
lcall
aam
shll
inc
imul
pop
push
je
pop
out
or
cmp
or
icebp
cmp
and
out
xchg
aad
lahf
and
jge
sar
pusha
mov
dec
push
sbb
cwtl
inc
push
cmp
add
inc
dec
out
fidivrl
pop
enter
push
lods
add
push
add
and
or
addr16
push
loope
aas
out
or
ret
push
nop
mov
rcrb
mov
push
clc
rcl
test
les
pop
jne
mov
popa
push
add
stos
mov
adc
int3
addr16
sti
add
inc
jnp
push
fsubl
pop
mov
fldcw
in
xchg
cmp
push
push
inc
pop
ds
dec
mov
adc
jbe
inc
push
test
out
xor
push
sub
adc
push
xor
scas
mov
pop
sbb
xor
vmovsldup
stos
inc
adc
ss
pop
pop
mov
insl
out
add
imul
add
les
lret
and
jmp
mov
cmp
mov
xor
stc
hlt
mov
inc
jmp
clc
cmp
cs
pop
xchg
data16
sbb
mov
xchg
pop
or
push
rol
movb
lea
inc
stos
jmp
cmpsb
sbbl
cmp
pop
and
shll
ss
add
xor
jp
je
neg
adc
outsb
pusha
and
sbb
js
mov
test
lods
jg
je
mov
lods
xor
pop
xchg
movsl
xorb
sub
inc
ds
ds
push
mov
cmp
jae
notb
cmp
lods
stc
lods
push
adcl
into
stos
adc
jmp
stos
popa
je
daa
ja
add
mov
loope
loopne
push
sub
mov
add
or
mov
and
pop
ret
orb
popa
outsb
adc
dec
inc
out
adc
repz
jmp
rolb
inc
stos
movsl
jno
bound
aad
sbb
aad
in
mov
into
jns
pop
pushl
mov
add
or
shr
xchg
push
add
inc
or
cltd
sub
imul
jno
lock
stos
sub
insl
xor
push
or
in
sarl
xchg
push
and
das
and
inc
push
pop
push
jb
daa
jmp
push
push
stc
dec
into
lods
sar
cmp
jne
dec
rclb
sub
pop
das
xchg
inc
dec
insb
cld
imul
ljmp
or
in
dec
mov
cwtl
or
rorb
push
push
cmpsb
pop
sub
das
push
sub
or
enter
pop
call
pop
add
sub
clc
push
mov
pop
fidivl
sbb
jne
stc
mov
push
ds
or
xor
dec
lock
aas
fcoms
inc
push
hlt
out
add
sub
data16
das
mov
jno
arpl
push
mov
jbe
and
xor
mov
dec
xchg
fpatan
xchg
push
inc
test
push
adc
icebp
pop
mov
add
int
mov
fbstp
jbe
shlb
sbb
cwtl
into
or
test
sbb
inc
ljmp
or
add
popa
roll
push
sub
cmp
cmp
pop
pop
pop
ljmp
lret
jmp
pop
test
jnp
sub
sbb
int3
cmp
add
out
jb
pop
pop
movsl
test
leave
jns
ds
xor
dec
push
mov
push
pop
push
inc
insl
int
ds
push
or
sub
sub
jge
pop
dec
mov
shr
popf
xchg
inc
rcrl
scas
inc
push
adc
push
hlt
jmp
sub
xor
lahf
xor
xchg
xchg
mov
cmc
popa
lret
ljmp
notb
icebp
mov
add
jle
enter
pop
sbb
aam
sub
test
push
adc
leave
cmp
pushf
or
aas
push
inc
ja
jmp
jl
cmpsl
repz
cmpsb
dec
pop
adc
jb
insb
push
mov
push
push
mov
out
sub
and
add
inc
mov
es
andl
mov
mov
or
mov
leave
add
fiaddl
adc
and
rorb
jb
mov
mov
or
add
divl
pop
cmp
clc
loopne
pop
movsl
cli
pop
mov
or
sub
sub
or
push
bound
iret
sub
push
lahf
hlt
sahf
mov
cmp
cmp
jmp
aad
push
mov
push
sub
pop
shll
dec
inc
pop
push
xchg
adc
mov
adc
jne
pop
mov
mov
jmp
in
stc
test
divb
jb
mov
aaa
ds
mov
sub
pop
sub
mov
push
stos
cltd
xchg
xchg
and
or
adc
lahf
or
sub
mov
jl
inc
or
dec
xchg
pop
adc
mov
mov
xor
pop
sub
fsubl
icebp
mov
xor
mov
xchg
push
ret
inc
push
add
loopne
jmp
dec
lods
mov
cmp
or
pop
insb
movsb
or
pusha
cmpsl
push
mov
dec
add
loope
or
jnp
adc
cli
stc
int3
mov
inc
sbbb
jg
add
adc
pop
add
pop
shr
inc
mov
add
cmp
jne
inc
clc
fiadds
sub
or
pop
and
cmp
ja
push
push
mov
push
xor
loope
clc
mov
cwtl
jb
pop
fs
add
and
jmp
loope
pop
in
subb
aad
lahf
jmp
iret
jne
adc
js
call
jne
in
xchg
adc
cli
add
loopne
or
and
or
dec
mov
mov
repz
xlat
add
sbb
mov
and
adc
jne
mov
cmc
jae
pop
das
cmpsl
dec
jp
into
cli
xchg
dec
lahf
icebp
sti
loopne
ret
dec
jae
add
xor
imul
push
mov
enter
add
stos
push
fs
mov
outsl
mov
adc
cmp
xorb
pop
out
pop
inc
rclb
testl
jmp
xchg
jb
fldcw
mov
xchg
pop
xchg
cwtl
out
xbegin
pop
and
mov
dec
mov
jae
xor
pop
push
and
fimuls
std
dec
inc
or
fstl
push
adc
add
lret
hlt
cltd
cmp
clc
gs
in
out
mov
and
jmp
push
mov
push
add
ret
imul
out
mov
push
mov
dec
stc
add
jl
jb
lods
jmp
rolb
mov
shr
xchg
inc
push
sub
push
push
jmp
inc
push
mov
mov
int3
popa
pop
push
lret
sbb
es
adc
pop
add
out
stos
sbb
js
sub
cmp
xchg
fnstenv
mov
pop
mov
ret
push
hlt
mov
sub
pop
inc
out
test
add
jmp
pop
dec
push
into
fcoms
xor
test
idivb
push
or
cwtl
push
mov
sbb
xlat
lea
push
fiaddl
cltd
xchg
xor
and
jmp
jle
mov
addl
mov
mov
xor
sub
mov
nop
inc
popf
pop
cld
and
mov
mov
push
and
lds
push
ljmp
ret
jae
lods
mov
sbbb
push
nop
adc
mov
xlat
mov
push
shlb
adc
adc
cs
shl
pop
clc
cmp
push
push
push
xor
clc
jge
mov
pushf
jmp
ret
cmc
push
sbb
pop
push
cltd
fmull
push
push
rcrb
dec
nop
dec
inc
xchg
push
aaa
push
push
inc
mov
add
or
loop
push
pop
push
fucomp
pushl
lock
pusha
mov
add
dec
and
sub
stos
mov
sub
push
andb
push
jmp
jecxz,pn
mov
sbb
test
cwtl
dec
inc
inc
jg,pn
mov
dec
xchg
lahf
pop
clc
sbb
pop
push
in
shrb
xchg
or
arpl
xlat
pushw
cmpsb
mov
stos
ds
pop
sub
add
mov
fucomp
stc
leave
add
xlat
in
and
jg
repz
dec
idivb
add
dec
lds
push
leave
inc
pop
mov
out
mov
mov
and
aaa
gs
mov
es
adc
sub
sahf
rcrb
enter
add
jle
xchg
add
insl
pop
push
push
sub
inc
sbb
mov
mov
mov
imulb
xor
push
sub
jo
push
data16
add
pop
dec
push
add
push
repnz
flds
imul
scas
rclb
add
push
mov
dec
pop
cmp
lds
sub
add
aam
adc
iret
mov
and
ljmp
stos
rorb
push
jo
std
or
cs
xor
push
push
xchg
into
sbb
push
inc
imul
aas
pusha
aas
or
xchg
fdivrs
stos
mov
xor
mov
xchg
cmp
negb
sub
in
lret
mov
mov
push
lret
push
sub
mov
cmp
pusha
js
sub
pop
out
loopne
pop
sbb
inc
lret
and
add
dec
cmp
loopne
popf
bound
sub
in
ds
loop
mov
inc
pop
sbb
movsl
mov
pop
hlt
cli
pop
cwtl
testl
sti
shr
inc
xchg
loopne
xchg
pushf
call
mov
mov
lahf
fnstcw
pop
adc
push
les
jmp
outsb
ja
scas
dec
pminub
dec
cwtl
jmp
jmp
inc
add
nop
movmskps
xor
outsb
jmp
xchg
jl
lcall
cmp
xchg
mov
mov
add
out
or
push
rolb
pop
call
cltd
adc
ljmp
push
push
in
xchg
and
fisttpl
mov
push
es
repz
iret
jmp
push
cmp
mov
adc
in
scas
movsb
lds
pslld
lcall
fisubs
not
jmp
push
paddd
movaps
inc
add
mov
mov
cmp
js
add
cmp
clc
loop
int3
in
mov
dec
cli
push
mov
rcr
sub
out
sub
inc
and
push
cmpsb
xchg
sbb
sub
and
jb
pop
push
pop
daa
out
adc
push
ret
in
iret
aas
sarl
inc
andb
pop
inc
or
pop
jmp
sbb
or
cmc
test
jp
pop
jo
jb
add
imul
shrb
cltd
push
loop
add
pop
jmp
rolb
sbb
add
loopne
dec
jae
jmp
cmp
cwtl
lret
mov
push
imul
inc
inc
movsb
js
imul
insb
sub
mov
adc
cmp
sub
mov
scas
repnz
in
lret
cmp
sbb
bound
mov
shrb
pop
pop
cwtl
ret
in
add
jbe
mov
dec
lret
pop
xchg
push
xchg
sub
jge
cmp
xchg
lds
xchg
xor
insl
sub
mov
rolb
jae
dec
cmp
mov
xchg
cs
or
rorb
in
adc
rcrb
push
scas
push
scas
das
push
cmp
insb
jo
xchg
testb
mov
ljmp
push
dec
mov
dec
pop
mov
jmp
insl
dec
mov
cli
adc
dec
xchg
cmp
cmp
cmp
push
cli
or
jne
in
lock
pop
cli
sub
push
pop
xor
imul
push
dec
push
sub
scas
dec
dec
push
dec
add
fs
xchg
stos
popf
or
icebp
cmpsl
add
rorl
pop
dec
bound
loope
xor
xor
pop
idivb
sub
adc
adcb
cmp
or
ljmp
jmp
imul
or
mov
pushf
inc
mov
aam
test
in
aam
jecxz
xchg
jb
mov
inc
inc
inc
pop
mov
jl
rcr
pop
or
imul
push
push
sbb
leave
mov
pop
call
movsl
push
sbb
push
int
fcmovnbe
xor
jae
add
add
xor
out
add
cmp
or
add
mov
pushl
cmp
loope
sbb
cmp
and
xor
push
mov
lret
clc
push
sahf
adc
iret
rcrl
pop
pop
xchg
fdivrp
jno
jmp
jbe
xor
pop
or
lock
out
jmp
add
jbe
icebp
or
scas
xchg
lret
mov
lds
in
es
aas
sub
sbb
inc
pushw
popf
popa
mov
daa
xlat
in
push
daa
push
insb
bound
and
loope
stos
sub
inc
xor
aad
enter
mov
and
add
jecxz
fistpl
dec
inc
pusha
sbb
jb
ss
dec
jne
fwait
iret
or
mov
arpl
ficoml
add
mov
mov
sbb
jmp
push
into
inc
jle
or
dec
jl
or
icebp
fcompl
loopne
cltd
shll
jmp
and
xchg
xchg
outsl
dec
push
jno
in
int3
push
std
dec
repnz
dec
cwtl
pop
push
sti
mov
enter
xchg
out
cmp
jmp
repz
gs
inc
jmp
xchg
inc
mov
mov
sti
push
xchg
mov
icebp
aad
jnp
add
push
mov
push
inc
bnd
jbe
das
jbe
std
imul
mov
dec
lods
data16
xchg
xchg
xchg
jle
mov
adc
add
icebp
scas
adc
imul
xlat
and
t1mskc
push
jno
mov
stos
out
xchg
fwait
add
in
push
add
mov
dec
dec
mov
mov
xchg
dec
mov
dec
mov
pusha
je
outsb
or
nop
and
fs
add
jmp
jb
jo
rolb
mov
push
add
add
sbb
loopne
ljmp
jl
jmp
hlt
decb
adc
mov
sub
adc
mov
shlb
popf
gs
cmp
dec
add
and
bound
orb
inc
imul
jmp
mov
notb
xor
inc
xor
mov
ja
dec
sahf
adc
dec
imul
add
pop
xchg
nop
bound
mov
sbb
orb
add
cmp
or
sub
add
out
bswap
push
push
inc
mov
mov
js
jmp
lds
xchg
in
xor
jg
jl
push
or
es
add
push
or
cmp
jno
sbbb
xor
int3
mov
and
orl
push
cli
inc
push
jmp
lcall
or
and
adc
push
rcrl
aam
sub
xchg
and
not
popf
adcb
mov
ds
mov
lds
add
sbb
mov
dec
mov
push
mov
notl
jne
xor
arpl
push
xlat
pop
int
jmp
sarl
mov
das
inc
push
loop
xor
mov
add
das
pop
and
pop
inc
outsl
lods
cmc
push
pop
lahf
into
loopne
pop
push
mov
negb
nop
sahf
cmp
pop
stos
adc
dec
out
pop
daa
and
xchg
in
sbb
pop
cmc
and
push
sbb
int3
arpl
jge
sbb
mov
xchg
add
sub
aaa
mov
xchg
pop
xchg
out
add
push
push
popf
leave
sub
pop
imul
cmpsl
dec
add
xor
addr16
mov
sub
in
gs
xor
push
inc
xor
test
push
and
test
or
repnz
jg
inc
mov
adc
push
pop
pop
pop
scas
or
pop
data16
add
sbb
fisttps
mov
cmp
dec
xor
add
and
dec
je
loopne
inc
jbe
sbb
or
iret
sub
repz
imul
cld
pop
xor
xor
pop
mov
in
icebp
inc
pop
ret
test
or
fstl
clc
inc
add
push
pop
pop
dec
xchg
mov
pop
call
pop
jmp
pop
gs
cmc
add
sti
stos
loopne
xchg
test
adc
cmpsl
or
pushf
or
push
out
not
add
cwtl
add
push
in
sub
add
pop
icebp
es
outsb
or
cld
outsl
or
stc
das
cmp
xor
pop
dec
out
sub
mov
loop
stc
dec
leave
std
nop
jb
push
mov
fs
mov
mov
cs
imul
push
les
je
mov
cmp
or
push
pop
movsb
adc
cmp
jmp
sub
hlt
sub
or
shl
push
pop
out
arpl
aas
mov
mov
ljmp
clc
dec
lods
ss
test
inc
lock
push
dec
pop
sub
pop
push
mov
or
push
sbb
dec
ljmp
lock
dec
hlt
je
les
mov
push
das
ret
jmp
pop
mov
adc
ja
clc
fs
daa
jmp
mov
arpl
jg
andl
popf
loop
icebp
pop
xor
out
sbb
pusha
or
arpl
jmp
ljmp
inc
stc
mov
pop
hlt
jns
push
pop
mov
and
mov
gs
ja
insb
pushf
and
push
push
sub
outsb
push
cmp
cmp
stc
js
hlt
jb
pop
jge
test
nop
sub
cmp
ret
push
ret
inc
gs
or
daa
fstpl
das
jmp
and
xlat
insl
scas
lods
mov
cmc
enter
adc
fadd
push
in
push
loope
push
jmp
jp
push
or
xor
fisttpl
mov
imul
repz
fcomps
inc
rorl
pop
out
loopne
push
add
incl
mov
push
mov
mov
cs
or
ret
mov
push
lods
imul
mov
ja
rol
mov
shrb
in
sar
add
pop
mov
push
sub
pop
xor
lea
mov
bound
mov
testl
adcb
loope
sub
jmp
pop
dec
push
mov
xchg
cld
pop
or
pop
cmp
dec
dec
push
xchg
nop
rsqrtps
in
sub
mov
les
call
jns
js
rcrb
add
out
xor
xchg
insb
mov
adc
mov
int3
dec
mov
xlat
mov
mov
xor
or
imul
pop
mov
addb
push
mov
cmp
dec
hlt
test
sbbb
and
mov
mov
and
out
sbbb
xchg
and
roll
mov
and
ja
enter
test
adc
push
push
cld
in
cmp
mov
jge
cwtl
cld
sarb
cmp
aas
dec
jmp
pop
loope
cli
add
xchg
sub
pop
and
add
inc
sub
add
add
push
dec
jnp
push
sub
adc
xor
jns
lret
mov
loope
sub
add
mov
sub
fldl
cwtl
mov
fisttpl
test
add
sbb
inc
fwait
jo
pop
sub
jmp
or
jo
repz
repz
dec
aad
sbb
fmull
mov
aas
ja
lea
pop
mov
mov
sbb
neg
mov
inc
push
xchg
fidivs
jmp
leave
sbbl
add
dec
call
adc
jge
inc
and
ja
and
adcb
add
rorb
adc
test
lds
repnz
add
jge
adc
dec
pop
mov
lret
pop
xchg
iret
push
daa
jmp
mov
iret
add
pop
pop
push
mov
jmp
mov
adc
jmp
lret
iret
jle
inc
push
sub
dec
push
fucomip
cmp
leave
pop
jmp
rcl
inc
iret
std
pop
pushf
pop
xor
test
jg
js
pop
stc
jne
jl
es
pusha
popa
add
push
push
arpl
xor
or
ja
pop
dec
stos
inc
lret
shrb
pop
rclb
xlat
add
cmc
movb
repnz
and
add
sbb
xchg
fdivs
stos
aaa
cmp
pop
xchg
jne
enter
popl
fs
jp
je
xor
sbb
bound
divb
inc
fwait
mov
adc
sub
imul
pop
loope
push
push
mov
dec
mov
jecxz
mov
bound
pop
and
cmp
sub
jle
pop
inc
sti
or
and
cwtl
pop
sub
stos
push
loope
pop
xchg
push
mov
sub
mov
fs
push
xchg
mov
rcl
pop
jge
cmc
daa
mov
mov
ficoml
shlb
xchg
in
and
add
cmp
shlb
add
data16
pop
aas
repz
insl
lret
inc
aad
sub
xor
addb
sbb
cmp
or
sub
pop
testl
jmp
sbb
rcrb
aad
xchg
dec
das
pop
sbb
mov
xor
xlat
cmp
or
push
dec
xor
sbb
mov
sub
bndstx
call
add
xor
pop
push
push
daa
mov
inc
popa
clc
push
add
jl
jb
movsb
jl
jmp
and
or
movsl
dec
out
es
or
addr16
cmp
adcb
pop
mov
mov
inc
adc
arpl
sbb
enter
dec
sub
lret
push
xchg
and
dec
cmp
sbb
inc
jmp
jmp
sbb
pushf
adcb
mov
jl
add
jo
jno
add
pop
sbb
or
xor
mov
and
cmp
sarl
enter
mov
inc
ja
mov
xchg
add
js
ds
xchg
mov
xchg
xchg
fdivrs
out
push
shr
mov
je
jle
es
imul
add
pop
hlt
lock
psllw
or
int
mov
xor
cld
jns
repnz
jge
cwtl
cmp
mov
filds
lods
jl
dec
xchg
push
cmp
jns
push
add
sbb
loop
adc
arpl
dec
cmp
xor
out
testl
das
js
inc
cmc
sub
dec
push
pop
stc
les
arpl
sub
push
inc
loopne
cmp
int3
adc
xchg
xchg
mov
push
not
push
push
cmp
mov
mov
divl
scas
add
imul
rcll
mov
xlat
in
jmp
pop
push
mov
adc
scas
pop
mov
sbb
mov
push
xchg
scas
mulb
jae
fisttpll
mov
dec
push
cmpsl
add
pop
shlb
adc
pop
xchg
rep
add
cmp
or
pop
inc
es
xor
sub
jmp
shr
daa
and
push
dec
mov
sub
mov
lock
xchg
jg
dec
aad
inc
push
inc
add
outsb
filds
loope
rol
add
jmp
and
add
insl
je
inc
leave
mov
xchg
lret
std
cmpsb
dec
in
mov
xor
adc
mov
out
or
test
inc
mov
push
mov
ja
iret
and
fwait
pop
or
test
mov
pop
cmp
imul
cmc
mov
cmc
xchg
push
add
arpl
pop
xchg
insb
jns
in
xor
js
add
mov
cld
or
push
rcrb
sbb
sbb
in
into
daa
fistps
cltd
outsb
cmpl
call
les
mov
xor
pop
mov
pop
pop
cmpsl
pushl
or
cwtl
das
push
imul
dec
sbb
cmp
sbb
movsb
push
gs
jmp
in
ds
and
sub
cmpsb
mov
inc
and
dec
dec
push
in
dec
xchg
negl
inc
push
mov
pop
sub
jmp
sub
add
ret
addr16
les
or
rolb
dec
std
test
or
or
pop
push
mov
jp
pusha
xchg
pushl
push
mov
mov
in
daa
into
mov
cmp
add
and
add
insb
test
scas
sarb
xchg
pop
incb
and
and
pop
cli
jno
shll
dec
dec
pop
and
scas
ret
pop
push
xorb
test
or
xorb
adc
aad
or
inc
mov
dec
pop
test
mov
and
adc
sbb
out
cmp
pop
or
fcoml
shll
aaa
inc
sub
pusha
cmp
sbb
add
lds
and
dec
aaa
mov
rcrb
or
sbb
and
ja
cmpsb
push
mov
popf
sar
xlat
and
adcb
jge
add
add
push
jp
out
adc
repz
js
not
mov
daa
inc
lret
das
pop
xor
mov
pop
cmp
int3
cwtl
loope
test
addl
lret
testl
push
push
mov
mov
mov
inc
ret
loopne
mov
push
and
push
roll
movsb
je
pop
or
add
loope
push
dec
pusha
shl
push
rorb
jmp
lods
mov
call
push
inc
dec
push
xchg
push
aaa
and
or
jecxz
call
cmp
xor
sbb
arpl
stos
rol
add
jnp
dec
dec
jl
lret
pop
repnz
pop
jmp
loopne
rorb
cmpsb
mov
pop
jle
cmp
cmp
popa
add
sbb
lock
jge
ds
push
push
pop
mov
inc
rorb
pop
lds
icebp
jmp
int3
mov
pop
das
in
or
test
cmp
cli
outsb
test
add
pop
and
aam
mov
lret
cmp
jne
pop
inc
push
push
sub
pop
jmp
xor
push
scas
xlat
mov
sub
fisttps
xchg
and
imul
bnd
push
xchg
pop
push
push
or
mov
pop
loopne
adcb
fldt
adc
das
cmc
idivl
cltd
cld
pop
mov
arpl
les
out
dec
scas
fcompl
jmp
push
or
push
pop
cmp
add
jae
jne
xor
cmc
inc
jns
push
icebp
xchg
pop
std
inc
outsl
mov
and
ljmp
sbb
pop
ljmp
repnz
aad
lret
pushf
imul
xchg
ljmp
cs
flds
mov
add
inc
or
pop
out
mov
cs
aas
mov
sub
xchg
clc
cmp
rolb
insb
push
mov
leave
inc
adcl
popl
mov
jb
cmp
mov
pusha
xor
ret
iret
mov
jg
enter
xchg
rol
add
shlb
mov
imul
jp
mov
pop
or
not
fimuls
add
dec
gs
push
incb
jbe
cmpsb
sbb
jmp
and
ds
or
repz
push
imul
push
xor
pop
mov
or
inc
pop
push
adc
cmp
mov
jae
cs
jmp
das
mov
push
pop
and
push
clc
loopne
push
push
jge
cmp
stc
mov
push
add
outsb
and
or
or
shl
hlt
push
xchg
adc
mov
pop
adcb
rcll
and
paddd
or
loopne
push
or
arpl
push
push
test
and
cmp
xor
jmp
lar
mov
dec
mov
push
orb
push
lods
inc
dec
or
or
ret
aad
loope
in
mov
sbb
ja
mov
xchg
cli
mov
sub
add
jnp
aad
aam
fsts
or
add
xor
incb
cmp
mov
dec
add
scas
adc
int
cmp
add
mov
adc
aad
mov
inc
mov
and
imul
call
rorb
fstl
push
lcall
aam
pop
adc
push
cld
out
cmp
sub
int3
and
or
mov
add
jecxz
mov
xchg
xchg
mov
imul
or
jno
scas
jne
or
lea
loopne
or
call
jo
int
add
mov
sub
in
mov
xchg
stos
inc
nop
pop
pop
or
or
ljmp
shlb
cmp
and
pusha
mov
xor
inc
jmp
mov
out
xchg
sbb
or
inc
xchg
lock
das
pop
and
pop
aad
in
inc
xor
push
push
in
mov
adc
pop
add
push
sub
cmp
fcoms
aad
mov
cld
pop
push
aad
lock
pop
orb
jecxz
or
adc
push
inc
mov
jecxz,pn
addl
add
inc
fldl2e
inc
test
add
rol
xor
mov
fldl
jle
cwtl
or
cmpsb
pop
aam
fcmovbe
sbb
pop
jno
fs
aas
cmp
out
push
jno
hlt
add
and
or
cmc
lock
int
and
and
sub
add
mov
imul
daa
jg
das
push
mov
popf
ret
popa
cmpl
sub
pop
test
and
xchg
andb
out
or
or
push
filds
xchg
in
pop
xchg
jnp
xchg
jmp
icebp
data16
dec
adc
adc
popf
pop
push
push
stos
lret
pop
sub
add
pop
xchg
adc
cli
xchg
lds
mov
inc
jo
xchg
add
sub
stc
gs
jmp
loope
icebp
ficoml
jns
jmp
sub
mov
mov
push
test
inc
call
sub
jecxz
scas
jp
arpl
or
pop
sub
test
std
imulb
or
pop
ljmp
lcall
sahf
test
jmp
sub
or
and
mov
lds
mov
push
push
sub
adc
jle
aad
add
add
inc
mov
es
cltd
rclb
dec
movb
push
or
push
fsubrl
cmp
fs
js
xor
repz
pop
scas
dec
push
sub
push
pop
sub
jmp
sbb
pusha
sbbb
lods
inc
pop
rorl
lret
sub
dec
aas
adc
cmp
inc
addr16
ucomiss
fildll
dec
mov
mov
aam
adc
fdivrs
pushf
add
dec
jne
add
and
mov
stos
popa
scas
xor
loop
lahf
or
push
iret
xor
test
aad
out
dec
push
push
dec
mov
fistpll
lahf
aam
loope
lds
push
mov
xchg
or
aas
add
pushw
jmp
cmp
das
rcrl
mov
fcomp
movsl
subl
dec
cmpsb
jmp
inc
shll
fidivrl
jb
jno
or
push
add
push
imul
pop
push
pushl
adc
fstl
dec
ret
jmp
pop
fists
mov
mov
outsb
jae
jmp
push
push
icebp
mov
mov
sub
inc
xchg
lods
data16
repnz
or
addr16
xor
mov
scas
cwtl
ret
in
mov
das
lahf
std
adc
push
pop
dec
add
ret
jp
mulb
mov
or
xchg
adc
push
inc
or
icebp
dec
push
mov
jge
push
fmul
pop
push
cmp
pop
lret
cmc
pop
sbb
icebp
cmp
jb
pop
jb
jae
js
outsb
in
sarb
ds
cwtl
in
mov
insl
and
and
mov
imul
push
mov
jmp
inc
mov
mov
jg
mov
push
mov
in
orl
jo
sub
addl
jbe
xor
addl
pop
std
bnd
lret
mov
push
push
mov
push
xchg
lret
push
lea
pop
jmp
icebp
sub
sub
hlt
and
incl
xchg
pop
add
push
std
mov
inc
adc
push
jb
dec
adc
xor
out
cmp
insb
adcb
jo
sub
inc
mov
daa
xlat
inc
sbb
jae
mov
inc
mov
je
add
jge
daa
sbb
pop
pop
adcl
jns
mov
scas
and
insl
cmp
inc
mov
xor
mov
inc
push
dec
dec
lea
aad
dec
dec
enter
mov
das
adc
adc
rorb
shlb
push
push
add
mov
pop
imul
mov
dec
mov
test
ret
pop
pop
push
cmc
call
call
push
xor
mov
adc
adc
stos
sub
push
pop
dec
mov
inc
aam
adc
mov
insl
hlt
aam
push
ljmp
mov
es
push
test
xor
imul
xchg
mov
sahf
jnp
mov
repz
out
pop
inc
out
mov
fcompl
mov
mov
pop
or
ror
aad
test
inc
sub
add
push
mov
add
pop
sbb
clc
inc
orl
sbb
push
popf
sbb
loopne
lahf
add
push
mov
mov
or
je
push
xchg
sahf
jnp
sahf
pop
inc
std
cmp
imul
xchg
or
das
test
call
jl
push
stos
xor
and
xor
adc
ljmp
cld
cmp
mov
out
gs
and
or
sub
add
test
xchg
dec
into
pop
pop
xchg
dec
arpl
jmp
addr16
jl
or
icebp
sub
js
push
jmp
flds
pusha
push
divl
popa
jbe
sub
adc
ja
adc
or
in
cmp
dec
or
roll
push
jl
xchg
pop
out
cmp
jmp
movsl
sub
inc
push
lret
shrb
jmp
fwait
xor
jne
mov
push
jmp
in
dec
mov
in
push
rolb
pop
sub
mov
into
ds
cmp
add
xchg
jns
push
stos
mov
call
shr
push
daa
daa
sub
add
sbb
out
out
sub
xor
into
jne
les
cmp
jecxz
fimull
frstor
aas
adc
out
stos
idivb
jnp
xchg
in
mov
call
push
xchg
xor
push
hlt
pop
insb
jmp
out
lock
not
shrb
inc
add
fildll
popf
push
jmp
or
push
push
push
pop
sbb
fiaddl
addr16
dec
subl
jns
mov
push
add
test
clc
add
adc
aaa
out
sbb
pop
fwait
pop
xlat
add
mov
out
xlat
push
div
push
xor
adc
aad
jmp
das
dec
mov
jnp
cmp
ja
mov
bound
add
jl
pop
loop
lret
sub
aas
push
and
fistpl
das
in
int3
mov
push
mov
or
add
bnd
jecxz
fcoml
push
mov
aas
setbe
adc
sub
pop
cltd
jbe
out
push
incl
test
dec
add
sti
mov
aam
and
rorb
pop
mov
add
mov
adc
sarb
xchg
and
mov
jmp
mov
xorb
sub
jae
xchg
inc
fcomps
xchg
or
mov
les
or
jmp
mov
in
out
lcall
sbb
dec
push
cld
cmc
repz
lods
out
mov
push
cwtl
lds
xchg
inc
ret
jne
push
cmp
dec
fxam
outsb
andl
sbb
pushf
push
aas
sahf
out
sub
pop
idivb
pop
imul
lds
or
push
mov
add
inc
dec
iret
mov
bound
pop
mov
test
dec
xor
mov
cld
mov
pop
ja
add
pop
inc
inc
nop
inc
add
sahf
in
and
cmpsl
push
mov
in
imul
or
iret
pop
aaa
cmp
xor
in
sbb
add
add
pusha
push
jb
inc
sub
cmp
sbb
shl
and
or
gs
lret
push
adc
cmpps
lret
in
imul
jg
mov
add
jmp
popf
lret
jo
cmc
nop
mov
mov
or
repnz
shlb
mov
xor
push
mov
ja
push
sbb
xchg
ficoml
adc
jge
and
or
pop
and
pop
jecxz
lods
rol
enter
outsb
push
in
mov
jmp
and
insl
push
pop
sbb
jmp
movsl
stos
jmp
fldcw
je
sbb
outsl
jmp
xchg
add
orl
cmc
scas
addr16
ficomps
xchg
push
cmp
cli
out
pop
call
outsl
rorb
push
pop
xor
in
imull
and
add
lea
pop
pusha
std
cmpl
xchg
negb
pop
loope
cmp
sbb
and
movsl
jl
dec
out
in
lods
mov
push
test
add
fidivrs
pop
ljmp
mov
push
sbb
cld
jp
std
jnp
push
xor
mov
xchg
push
sub
adc
or
jmp
mov
adc
mov
inc
nop
jae
mov
jbe
jnp
mov
inc
sbb
push
pop
into
aas
pop
add
stc
mov
repz
fdivl
mov
cld
pop
call
push
pop
or
sub
popa
adc
dec
xor
sbb
cmp
xchg
xchg
inc
add
xor
imul
dec
sub
jmp
adc
jmp
cmp
or
pop
push
dec
pop
xor
lret
aam
dec
sahf
xor
add
fidivrs
pop
sub
mov
mov
pop
cmpb
cmp
sti
fwait
or
dec
mov
stos
fisubs
xchg
daa
call
movsb
and
mov
cwtl
lret
pop
push
fidivl
xor
fsubr
rcrb
pop
loopne
add
and
cmp
dec
add
data16
cld
out
in
das
sub
fildl
insl
add
sbb
and
push
pop
imul
jmp
clc
mov
stc
mov
not
dec
mov
and
mov
mov
push
test
in
test
lds
push
int
add
dec
popa
lea
adc
jno
popf
faddl
inc
push
mov
and
jo
icebp
mov
or
lcall
pusha
push
mov
rcrb
sbb
and
adc
pushf
inc
test
test
push
or
test
pop
jmp
or
add
inc
mov
pop
lds
jp
pop
iret
xlat
inc
movsl
xorb
xor
sub
push
int
inc
ds
pop
cli
fcomps
mov
sbb
sti
fmuls
sbb
dec
stos
or
and
repnz
push
stc
enter
lods
pop
xchg
lret
outsb
pop
add
xchg
xchg
rcll
ljmp
xor
out
call
out
pop
cmp
pop
push
andl
mov
cmp
mov
dec
dec
iret
mov
inc
out
sahf
jg
lret
gs
mov
jmp
frstor
ja
into
fisttpll
sbb
aas
test
mov
adc
pop
sub
mov
and
sti
xor
mov
loope
add
add
fs
add
inc
pop
loop
ljmp
pusha
inc
fldcw
xor
js
mov
push
lods
or
je
scas
jecxz
test
sbb
das
daa
jge
sub
pop
pop
cmp
jecxz,pn
frstor
add
adc
movsb
lods
xchg
shl
mov
pop
and
and
movsb
adc
or
cltd
adc
or
or
stos
mov
add
out
mov
dec
out
sub
xchg
xchg
aam
pop
jmp
jno
pop
aaa
add
push
in
and
push
dec
fchs
or
sub
inc
sub
out
dec
xor
test
adcb
cmpsb
and
mov
bnd
insl
cmp
jnp
lahf
push
or
aad
fistpll
sub
inc
jmp
push
inc
aas
pop
sbb
hlt
add
aad
and
mov
xchg
adc
orl
jo
popf
hlt
or
mov
loope
cs
jecxz
add
inc
movsl
pop
cld
pop
js
and
jecxz
adc
push
and
add
inc
loop
imul
adc
inc
dec
xor
or
sub
mov
dec
cmp
arpl
dec
leave
subl
and
fmuls
mov
sti
mov
nop
outsl
dec
je
dec
sbb
testb
in
cltd
nop
lahf
xchg
repz
lret
in
add
cmp
insb
push
push
out
pop
mov
push
in
in
jo
xchg
inc
das
jp
and
aad
adc
cli
loope
push
and
mov
inc
add
and
call
in
xchg
sub
ror
shlb
cmpsl
push
jo
hlt
inc
rol
add
jle
repz
sub
das
or
inc
nop
je
dec
das
daa
jmp
sub
cwtl
addr16
lods
cli
dec
mov
cli
lods
aam
add
or
scas
stos
ja,pt
lahf
mov
jle
je
pusha
pop
push
imul
or
in
add
and
mov
mov
cmp
iret
test
inc
pop
lock
dec
ds
jp
xchg
in
mov
mov
outsb
js
push
push
push
lcall
movsl
pop
or
pop
mov
push
push
and
test
hlt
inc
and
xchg
mov
push
cmp
fidivrl
ficompl
pop
lock
and
js
xchg
out
jae
adc
mov
jmp
fldt
cmp
pop
mov
jecxz
movsl
or
sbb
pop
arpl
aad
mov
mov
test
and
inc
xchg
into
subb
push
add
fs
inc
sti
addl
adc
mov
push
sti
xor
pop
xchg
fisttpl
dec
lds
xchg
pop
or
add
adc
ljmp
adc
loop
push
jno
add
clc
lret
jnp
ja
shll
dec
adc
mov
xchg
push
inc
js
xor
dec
cltd
into
sub
mov
insl
stos
pop
xor
mov
adc
lock
fadd
rorl
insl
sub
xor
pop
pop
flds
ljmp
inc
xchg
inc
out
nop
cmp
and
push
filds
inc
das
xor
jle
jb
cmp
add
ljmp
add
push
scas
add
lret
push
push
add
test
push
cmp
jp
scas
adc
xchg
dec
pusha
sbb
ljmp
mov
xchg
xor
xchg
xchg
mov
cmp
sub
add
xor
push
loop
sub
dec
hlt
add
mov
pop
les
in
add
sub
xor
loop,pt
rcl
enter
jle
repnz
cmp
sbb
std
outsb
out
add
in
adc
add
jns
lods
dec
sub
sbb
xor
or
filds
pop
pop
sub
push
xchg
jmp
push
fadds
mov
sti
pop
xor
dec
dec
mov
bound
sub
arpl
pop
push
pop
cmc
fists
jg
or
xor
loope
cmp
mov
mov
rolb
add
cld
xchg
push
mov
xor
es
bound
cmpsb
aas
pop
add
pop
daa
jb
rcll
or
sub
or
cs
pop
jae
enter
aaa
pop
popl
imul
pusha
cli
and
lcall
lods
adc
push
mov
pop
aam
outsl
dec
push
jbe
dec
fimuls
add
lock
add
mov
loop
into
clc
dec
repnz
pop
scas
sub
pop
mov
leave
scas
push
cld
dec
fldcw
movhps
add
movsb
push
inc
xchg
sbb
push
test
test
xchg
add
jmp
lcall
jg
push
adc
enter
pop
pop
loope
mov
adc
imul
dec
or
fidivrl
rcrb
mov
push
mov
jbe
out
mov
shl
lcall
push
popf
and
pop
pop
ret
pop
push
lahf
jnp
test
sub
xrelease
bound
pop
das
je
loop
cld
xor
inc
lds
lea
add
xchg
lds
sub
cmp
and
psubd
outsb
call
inc
jecxz
jecxz
lret
xchg
add
test
lds
ljmp
subb
jl
gs
ret
pop
push
pusha
jecxz
xchg
jne
xor
sbb
cmpsb
sbb
pop
and
add
add
add
mov
adc
nop
cmp
rcr
mov
leave
aad
fidivl
shrb
out
call
or
fbstp
dec
mov
push
lahf
daa
data16
push
jo
push
and
or
sbb
mov
les
mov
mov
mov
daa
rol
and
sub
and
ffreep
fst
scas
sub
cmp
add
inc
sti
fisttpll
xlat
jp
insb
out
add
xor
jmp
mov
lea
add
out
orb
cwtl
pop
dec
inc
lds
mov
sub
inc
js
mov
loop
adc
fldl
cmpsl
test
test
push
jl
push
jne
cmp
pop
pop
and
jno
pop
dec
sbb
and
mov
cmp
adc
and
scas
adc
cmp
jecxz
sbb
fsubl
call
jae
out
std
add
pushl
int
and
mov
in
push
and
sahf
add
jle
or
xchg
xchg
push
sub
inc
rcl
or
xor
mov
sbb
loope
ficoml
adc
add
or
mov
clc
nop
nop
negb
push
pop
mov
icebp
sub
popa
xor
mov
sahf
insl
jle
adc
jne
or
xchg
mov
dec
add
sub
adc
cwtl
pop
push
leave
ror
mov
dec
cmp
je
dec
or
lds
push
out
xor
pop
dec
bnd
sbbb
or
inc
push
push
pusha
mov
push
mov
in
pop
call
add
xchg
pop
shl
push
in
sub
pop
adc
dec
into
in
cmp
mov
and
iret
add
add
sahf
daa
jge
int
cmpsb
sub
sub
or
pop
adc
or
imul
pop
es
jl
cmp
das
mov
jae
or
pop
sar
imul
add
dec
push
sub
sub
cmp
mov
movsl
dec
xchg
adc
mov
push
jmp
repz
shl
and
add
mov
push
loope
lods
inc
arpl
adc
dec
add
or
lret
sbb
in
jo
cwtl
gs
push
adc
jmp
pop
inc
xor
pop
roll
mov
or
daa
jg
stos
push
call
gs
ss
lock
mov
aam
xchg
enter
xor
jb
sbb
mov
inc
popf
pop
push
sub
pop
pop
xor
in
stc
lahf
xor
negl
in
xchg
jp
rorb
mov
aam
pop
mov
movsb
inc
push
rcrl
sub
pop
mov
stos
or
adc
lret
jmp
mov
cmpsl
pushf
dec
cwtl
xor
xchg
fisttpll
clc
cltd
jle
xor
dec
jnp
push
push
cltd
pop
mov
int3
inc
jbe
aad
and
xor
bound
pop
idivl
popa
jmp
hlt
sarb
jmp
rclb
addr16
out
dec
jl
inc
push
jle
jp
test
cmp
xchg
xchg
es
bound
in
int3
sahf
or
jno
add
scas
dec
xor
cmp
add
ljmp
jae
mov
and
cmovb
push
int3
mov
pop
ret
pop
fsubl
cmpb
je
pop
adc
xlat
xchg
inc
xchg
mov
ds
xchg
push
insb
popa
mov
movdq2q
add
or
int
loopne
and
pusha
push
adc
add
mov
inc
sub
dec
rcll
aaa
in
xor
dec
pushf
das
pop
mov
mov
pop
xor
cmp
stos
es
lret
pop
loope
pop
and
sub
or
cld
rcr
xchg
pop
inc
loop
pop
jecxz
test
or
pop
push
mov
and
mov
dec
in
out
add
rolb
pop
xor
mov
xor
mov
mov
mov
jne
pop
inc
cmp
mov
clc
dec
decb
xchg
add
loopne
add
popf
flds
mov
inc
scas
iret
push
adc
mov
mov
or
add
add
addl
jns
and
mov
int3
cli
cmp
add
mov
insl
or
sbb
popf
push
hlt
pusha
push
push
jp
mov
std
lret
jmp
decl
and
add
dec
add
pop
lods
call
cmp
xor
jnp
and
dec
call
arpl
or
inc
or
push
cld
std
mov
inc
js
mov
imul
and
ds
jg
xorps
in
rorb
mov
rcrl
icebp
mov
inc
dec
ljmp
and
inc
push
sub
insl
stos
jnp
mov
cmp
bound
cmp
jb
pop
mov
mov
into
xor
jmp
jmp
into
push
movsb
hlt
mov
and
or
mov
ljmp
mov
push
stos
fidivrs
sti
push
jg
das
sbb
nop
fdivrs
shl
sub
sub
dec
dec
jecxz
repz
bound
loop
dec
push
pop
push
cmpb
es
lds
xor
arpl
and
sub
mov
sahf
nop
sbbl
pop
add
lret
in
jnp
cmc
sahf
add
adc
xchg
inc
sub
icebp
iret
pop
adc
rol
scas
testl
js
lret
jmp
dec
jp
daa
cld
int
or
push
test
addr16
fs
mov
and
mov
mov
push
push
push
jb
xor
lods
xorb
add
ret
cs
fcoml
in
adc
mov
dec
insl
mull
and
adc
push
popa
mov
and
scas
enter
mov
push
and
dec
sbbl
test
inc
shrl
inc
cmpl
mov
mov
or
sbb
lock
pop
inc
stc
add
jmp
ficompl
or
pop
sub
mov
into
mov
or
mov
xor
pop
sub
push
in
add
mov
dec
add
insl
mov
aas
sub
xor
out
jae
mov
ja
xchg
pop
and
sub
sti
pop
xchg
cmp
in
loope
lret
cmp
sub
out
or
inc
and
add
or
pop
add
lahf
scas
les
push
nop
adc
cmp
shl
or
inc
inc
and
or
out
xchg
inc
sub
out
inc
jo
lahf
and
sub
outsl
xchg
jns
and
push
jmp
in
xchg
sahf
mov
hlt
fsubp
sub
push
sub
call
jecxz
sti
movups
push
sti
into
fs
xlat
fdivrs
mov
dec
comiss
push
ds
nop
mov
dec
mov
aad
push
jmp
xor
sub
pop
pop
pushw
dec
and
stos
ljmp
insb
outsb
push
mov
aaa
push
jmp
repz
or
in
sbb
insb
pop
mov
jae
inc
sub
inc
sbb
mov
or
pop
inc
imul
pusha
cmp
mov
repnz
ss
outsl
rolb
outsl
orb
insb
in
adc
mov
unpcklps
je
xchg
or
out
or
sub
xchg
push
pop
cmc
lds
or
add
mov
negb
loope
clc
sub
dec
ljmp
xchg
add
test
sbb
sub
push
xor
test
xor
pop
pop
push
movsl
incb
mov
and
jne
ret
lods
mov
int3
divl
xor
call
outsl
xor
loopne
daa
and
movl
ret
jmp
cwtl
sub
push
xchg
faddl
lods
dec
push
jge
mov
adc
fdivrp
imul
dec
xlat
cmc
stc
jg
mov
in
daa
jmp
outsb
clc
dec
cmp
shrl
dec
incl
mov
repz
rorl
outsb
pop
test
fs
ljmp
jnp
loopne
inc
pop
daa
sbb
mov
out
jbe
dec
xchg
repz
addr16
or
fistpl
lret
mov
sub
addb
or
jle
mov
pop
jmp
push
adc
cmp
mov
shll
xchg
xchg
cmpsl
pop
cmp
cmp
mov
test
lret
push
stos
leave
push
jg
xchg
pop
repz
jmp
sub
add
test
inc
sbb
sbb
mov
outsb
mov
cmpsl
adc
sti
mov
faddl
ficomps
dec
or
dec
sar
add
xchg
pop
rolb
iret
mov
orb
and
movsl
inc
movsl
and
daa
or
jbe
das
rcl
xor
xor
stos
loop
or
mov
subb
pusha
add
dec
jb
data16
sub
fwait
pop
push
cmpsl
call
cmp
fnstsw
and
addb
in
movb
sub
inc
add
jo
inc
xchg
inc
arpl
or
fwait
and
push
dec
ds
cmpsl
dec
adc
xor
bound
add
jae
jle
sub
popfw
and
leave
mov
push
dec
lret
and
nop
and
not
push
fisttps
pusha
out
insb
adc
add
jmp
xchg
pop
mov
lret
push
mov
inc
in
pop
out
addb
fisttpl
adc
insl
lock
or
xor
push
inc
or
add
stos
rcl
push
push
ret
scas
jecxz
sub
pop
jmp
movsb
xor
fmull
cs
insl
enter
and
les
rcrb
jae
or
mov
sub
or
push
adc
add
jecxz
ret
mov
cmc
mov
movsl
jge
push
adc
lret
push
dec
push
jmp
addl
outsb
shr
push
pop
mov
inc
out
addl
mov
stos
pop
add
cmp
lea
pop
mov
jnp
adc
or
or
or
repz
mov
shl
inc
adcb
push
and
add
outsb
mov
jmp
pop
xor
es
or
add
sbb
popa
cli
pop
xchg
dec
jb
pop
lods
and
jmp
mov
aad
scas
dec
jnp
sysexit
jmp
lods
push
push
sbb
xor
add
imul
popa
sbb
inc
out
lock
adc
add
sbb
or
paddusb
daa
mov
jmp
fsubl
add
fdiv
sbb
add
pop
adcl
push
inc
ja
mov
jp
sub
mov
rolb
xor
ljmp
adc
inc
or
nop
sbb
insl
push
jmp
inc
mov
popf
sub
sub
or
mov
ljmp
sbb
jge
fucomi
pop
lahf
fimuls
adc
data16
or
push
mov
or
push
and
xchg
mov
lds
jo
dec
jbe
dec
dec
sbb
jmp
push
adc
fsubl
loopne
adc
inc
out
and
pusha
add
jge
popf
and
push
mov
test
fcomip
or
sub
inc
mov
aaa
xor
idivl
inc
stc
pop
mov
pop
dec
xchg
dec
mov
inc
jg
xor
imul
pop
shr
das
mov
push
int
test
sbbb
popf
dec
or
shll
or
clc
cmp
mov
mov
fsts
dec
jg
ret
and
sahf
rclb
ljmp
aad
sti
rol
and
mov
or
sub
push
sbb
cmc
sbb
aas
sbb
sub
test
mov
shr
cmpb
fs
adc
sbb
cwtl
add
cmpsl
sub
xchg
and
leave
jmp
sub
xchg
pop
push
out
inc
daa
cmp
jecxz
hlt
dec
addl
or
shl
push
jmp
test
inc
push
pop
push
cwtl
mov
adc
xchg
es
sbb
imul
or
xchg
test
sub
sti
add
aad
jbe
stos
dec
sahf
ds
mov
das
cmpsb
ficoms
sbb
xchg
icebp
jno
and
mov
cmpb
ret
mov
fstpl
xchg
inc
or
push
mov
sub
insb
mov
insl
xchg
mov
aad
popa
add
push
movsb
pop
sub
jbe
mov
or
out
or
mov
dec
in
mov
mov
inc
add
jmp
mov
inc
ljmp
dec
and
mov
nop
push
loope
inc
xchg
add
ljmp
inc
push
dec
mov
mov
sbb
mov
or
mov
push
movl
in
fwait
jbe
je
dec
mov
incl
bound
pop
adc
out
mov
push
mov
sbb
and
xchg
int3
lcall
push
push
add
fistpll
inc
stos
push
fisttps
and
mov
xchg
push
enter
add
add
mov
fstpl
inc
jmp
xchg
mov
gs
cmovge
pop
in
jp
xor
into
out
xchg
pusha
pop
jno
jp
dec
dec
or
mov
inc
popa
mov
sbb
inc
jmp
pop
cld
test
out
xchg
or
in
jb
add
or
insl
sbb
aas
pusha
in
pop
push
mov
movsl
jg
jmp
sub
inc
and
inc
sub
adc
aas
push
sbb
xor
pop
push
dec
mov
insl
or
or
push
xor
fsubrl
mov
or
sbb
mov
push
jg
jne
or
pop
or
scas
cmp
xor
repnz
nop
jl
adc
sub
mov
sti
dec
and
jb
adc
push
inc
data16
dec
mov
pushl
cmp
movb
pop
jbe
xchg
dec
jmp
nop
xchg
stos
sub
ss
fistpll
orb
fadd
xor
sbb
push
test
rol
ljmp
mov
mulb
rorb
repz
lret
jmp
push
pop
add
dec
in
inc
arpl
clc
push
pop
nop
or
out
jbe
mov
mov
push
adc
dec
sbb
pop
imul
clc
xlat
sbb
int
das
scas
pop
in
mov
jae
or
aam
rolb
inc
outsl
lret
faddl
andl
inc
pop
pop
pop
xor
add
inc
das
add
les
pushf
mov
inc
mov
jp
mov
cmp
mov
xor
adc
xor
lret
jecxz
push
xorb
push
jmp
mov
hlt
cltd
push
xchg
pop
divb
inc
into
shlb
fmul
hlt
iret
inc
pop
xchg
lds
jmp
cli
and
pop
shl
jmp
xchg
cli
sub
mov
call
pop
aam
and
ret
std
jo
mov
out
clc
addr16
add
daa
jmp
sub
mov
aaa
dec
jne
xor
mov
dec
imul
shlb
scas
or
xor
out
jp
rcl
or
cs
in
mov
sub
add
cwtl
fistpl
scas
dec
lahf
push
sub
add
jl
or
gs
jb
pop
je
push
jae
xchg
fistl
jmp
inc
adc
jmp
inc
arpl
cmpsl
pop
adc
or
xchg
inc
sbb
repz
sarl
pop
in
jmp
add
scas
mov
inc
inc
cwtl
add
push
push
fdivl
mov
loop
or
dec
test
std
aas
cs
pop
and
cmc
push
pop
mov
rol
cmc
lcall
loopne
sbb
data16
cld
or
inc
out
add
cmp
cld
inc
mov
sarb
es
lea
xchg
into
out
add
jbe
push
add
mov
jne
js
or
cmc
not
or
fldenv
ret
ljmp
push
jmp
data16
xor
jle
in
inc
inc
push
repnz
out
add
jns
call
out
adc
or
jmp
cwtl
xchg
out
push
mov
fsubrs
jmp
ret
or
push
inc
and
xchg
je
inc
add
lds
mov
lock
xchg
add
mov
out
inc
sub
mov
jmp
scas
hlt
daa
movsl
loope
punpckhbw
pop
push
mov
add
jmp
rol
adc
adc
mov
mov
test
std
mov
sub
in
ja
sub
orb
jl
faddp
pop
dec
cmp
add
push
bound
pop
sub
daa
das
movl
negl
mov
or
out
in
movsb
out
sub
aam
test
xlat
or
sahf
push
in
pusha
mov
add
mov
out
or
mov
fwait
mov
add
insl
jge
push
pop
push
jmp
sbb
add
rorl
std
xor
inc
sub
mull
adc
mov
cmpsl
stos
repz
inc
xchg
xor
rolb
ret
or
cli
repnz
xchg
addr16
mov
call
data16
je
sub
ficompl
hlt
jae
mov
lahf
mov
test
or
lahf
mov
jb
mov
add
add
rcrl
inc
leave
push
adcb
dec
sub
mov
repnz
xchg
adc
cmp
or
adc
nop
pop
cmp
pop
sbb
add
or
pop
jmp
std
sbb
lahf
je
daa
push
cmp
and
fadd
add
ror
adc
das
aas
or
jg
sub
scas
and
pop
sub
add
sbbl
pop
shrb
loopne
filds
xor
ficomps
outsl
adcl
stos
orb
lcall
pop
xor
icebp
push
jae
or
arpl
dec
sub
insb
ds
add
xchg
cmp
clc
mov
cmp
fadds
add
mulb
outsl
adc
popf
add
jbe
xor
inc
mov
inc
push
push
test
call
cmc
xor
push
pop
jmp
sbb
mov
sub
pop
xor
sbb
aam
pop
loop
sub
mov
fs
jle
btc
add
push
dec
push
fwait
ret
jmp
pop
jl
cmp
push
dec
sub
lock
cs
test
dec
loop
loope
push
sub
pop
mov
daa
cmp
inc
or
nop
enter
ret
stos
faddp
add
pushw
jmp
flds
dec
pop
add
adc
cli
dec
pop
sub
jecxz
cmp
sbb
imul
std
in
nop
pop
or
xlat
mov
cwtl
shlb
fwait
inc
add
call
imul
iret
call
or
inc
ja
mov
cmp
addb
xchg
push
sub
inc
cmc
jp
clc
sub
or
loope
das
and
std
pop
jg
sti
inc
pop
inc
les
xchg
jmp
cmpsb
add
lds
scas
pop
roll
iret
inc
test
pop
clc
pop
lds
or
lcall
add
enter
adc
roll
pop
hlt
enter
imul
inc
jmp
mov
mov
andb
rolb
dec
add
xor
inc
pop
mov
into
int
lret
or
scas
adc
daa
and
fiadds
mov
pop
sub
push
fnstsw
xlat
pop
mov
das
push
mov
sbb
aad
imull
cli
fsts
lock
push
cmc
pop
js
sub
mov
movq
xor
mov
out
or
jge
xor
or
sbb
icebp
push
mov
mov
dec
sub
sbb
xchg
das
jns
iret
sub
push
pop
add
fisubrs
test
shlb
pop
int3
gs
xor
push
or
loope
push
jle
mov
pop
in
mov
divb
jmp
xor
sub
push
mov
jmp
int3
push
sbb
xor
rorb
sbb
inc
repnz
pop
cwtl
add
mov
aad
pop
add
fcomps
adc
daa
jecxz
scas
lret
mov
cmp
mov
or
lods
mov
imul
mov
adc
addr16
roll
inc
dec
icebp
mov
inc
iret
rorb
adc
xchg
ljmp
loop
or
mov
dec
lods
mov
scas
lock
mov
pusha
or
lea
mov
jae
outsb
aad
mov
and
mov
ds
adc
mov
pop
mov
add
fdivs
adc
aaa
xchg
ret
ror
mov
sub
ljmp
sbb
mov
clc
hlt
pop
mov
rorl
xor
sbb
sbb
pop
pop
mov
mov
pop
repnz
inc
mov
daa
push
cmpl
fstl
inc
pop
dec
jnp
jmp
mov
cli
pop
fcompl
sub
pop
fistps
dec
and
sarl
adc
mov
inc
bound
pop
loopne
pop
push
push
inc
dec
xor
popa
fidivrs
mov
in
add
flds
add
adc
in
cwtl
mov
lret
or
jno
mov
mov
push
jmp
inc
push
push
dec
mov
cmpsl
mov
lock
mov
or
scas
pop
std
test
cli
cmp
inc
inc
mov
mov
mov
jns
or
out
jle
jle
das
ljmp
cmp
or
add
sbb
jmp
add
shl
in
adc
xor
xchg
inc
add
xchg
rsqrtps
adc
xchg
mov
mov
mov
icebp
into
outsb
xor
in
daa
push
daa
fildl
inc
jmp
mov
cmp
imul
lret
orb
bound
or
stc
add
or
push
out
mov
jl
stos
xor
les
xor
xchg
dec
jmp
lods
add
jae
or
xor
inc
sarl
pop
cmp
nop
add
xor
ljmp
or
xchg
add
pop
dec
jno
movsl
push
movsl
stc
hlt
push
inc
push
inc
pusha
fs
and
inc
jae
movsb
pcmpgtw
aad
mov
push
addr16
jns
pop
cmc
into
adc
or
sbb
add
in
repz
ja
push
jmp
loopne
inc
dec
notl
jbe
push
pop
inc
aad
xchg
mov
ds
mov
lahf
or
dec
and
xchg
jmp
jge
loopne
push
xchg
pop
mov
mov
dec
pop
cmp
aaa
push
xor
icebp
xor
jno
repz
and
in
je
mov
aas
test
ja
sbb
mov
xchg
in
xchg
add
mov
mov
mov
aas
push
jmp
dec
scas
jl
push
xchg
into
adc
lock
and
sbb
loopne
push
mov
js
and
push
outsb
xchg
xor
addr16
add
pop
subb
mov
push
fs
lds
pop
mov
fsubr
popf
popa
add
fbld
cmp
add
jle
dec
mov
dec
pop
les
imul
pop
negl
or
jmp
cli
sub
push
jmp
sbb
pop
in
sbb
roll
dec
stos
lds
add
test
or
loopne
sub
jmp
xlat
cmp
imul
iret
pop
test
mov
jmp
mov
clc
arpl
cmp
imul
push
jmp
ljmp
xchg
mov
mov
sub
hlt
outsb
in
int
dec
fdivs
inc
pop
adc
andb
iret
cmpsl
push
cmc
adc
jae
out
push
fnstsw
push
inc
jle
aam
sbb
shl
pushw
clc
in
int3
ja
rcll
movsl
adc
les
adc
mov
add
shl
cs
push
popa
mov
xor
jmp
push
mov
pop
push
push
pop
push
lret
icebp
pop
mov
lea
adc
adc
repnz
adc
pop
cli
lret
data16
fists
int
fldl
mov
repnz
fisttps
mov
or
adcb
ficompl
xlat
shl
aad
and
pusha
or
sahf
mov
mov
icebp
xor
loopne
ret
mov
jge
dec
jbe
adc
add
or
mov
lcall
jae
or
aaa
mov
or
jle
sub
and
ja
pop
mov
xor
and
int
inc
mov
enter
pop
in
dec
inc
mov
sub
mov
test
fidivs
cmp
fs
and
push
push
pop
and
ds
fwait
cld
ret
adc
pusha
inc
push
ror
aas
scas
push
in
ljmp
addb
and
inc
das
jbe
add
fadds
sub
out
movsb
jecxz
outsl
lahf
bound
pop
ret
jae
in
andl
fistpll
and
add
shlb
popf
js
dec
xchg
mov
mov
stos
mov
fdivr
xchg
inc
or
fldl
pop
in
cmp
jge
inc
sti
gs
add
mov
daa
je
adc
aaa
testb
cmp
fs
inc
push
push
hlt
pop
push
pop
cmp
mov
inc
jmp
fsub
call
insb
lds
jo
adc
imul
and
push
pop
add
popa
sub
mov
pop
jg
cmp
push
shrl
ss
push
mov
fs
or
dec
stc
cld
or
xor
or
test
push
fdivrl
dec
dec
clc
or
mov
fs
mov
add
jo
push
pop
pop
not
dec
xchg
out
push
call
jl
push
mov
ret
jmp
sub
add
out
cli
mov
shrb
sahf
imul
add
out
pop
push
xchg
cld
outsl
or
lds
pop
call
xchg
lcall
pop
mov
fnstenv
aas
cmp
cmpsl
repz
pop
rcrb
adc
pop
popl
lods
dec
adc
push
adc
sbb
das
enter
lds
repnz
inc
out
mov
cs
push
pusha
xchg
pop
dec
sub
arpl
add
pop
jecxz
mov
addr16
push
jns
loop
shr
inc
or
xchg
or
fistps
arpl
push
pop
clc
in
dec
les
inc
xor
cmp
sahf
fcom
add
out
lret
imull
test
dec
rolb
jl
rclb
xor
xlat
nop
add
dec
add
xchg
inc
lcall
push
ljmp
sub
scas
pop
inc
mov
in
shlb
das
test
dec
ljmp
add
ds
rolb
mov
pop
pop
pop
scas
fcomps
sub
scas
mov
pop
mov
insl
pusha
xorb
jae
rcrb
add
xor
sub
int
pop
mov
out
cld
in
ds
rolb
and
cmp
jg
cmp
enter
repnz
in
pop
xchg
dec
jge
cmpsb
mov
lret
dec
add
sub
jmp
popa
pop
jge
lock
subb
or
out
cmp
daa
push
lahf
call
cmp
pop
and
xor
rcr
adc
or
notl
or
add
pop
sub
pop
mov
mov
insb
notb
xchg
not
mov
cmpb
push
jo
and
bound
and
mov
mov
adc
stc
je
not
mov
add
icebp
inc
dec
cmc
rorb
sub
gs
repz
push
inc
ljmp
aaa
add
push
into
mov
add
add
ja
pop
push
ret
sar
push
std
push
test
shlb
xor
push
pop
stos
leave
in
loopne
mov
mov
andb
cmp
inc
jle
nop
pusha
orl
or
cmp
jns
ds
pop
add
pop
xor
add
or
shr
pop
mov
mov
cmp
insl
movd
addr16
add
xchg
andb
mov
mov
or
movsb
pop
sub
dec
pop
or
shrl
das
mov
push
outsl
shll
or
inc
push
push
sub
out
cmp
fcom
and
add
ss
lcall
jmp
aas
mov
bound
push
rcrl
jo
push
jmp
add
inc
cmp
mov
xchg
mov
fimull
nop
sbb
push
xchg
inc
lret
mov
mov
test
inc
add
in
lock
pop
and
add
jbe
pop
mov
out
push
test
or
add
add
subb
out
jl
xor
das
stc
push
sub
pop
scas
popf
rcrl
orb
out
or
lret
nop
xchg
or
push
mov
cmp
add
pop
ror
push
ja
fists
andb
mov
jae
adc
lret
mov
movsl
mov
lods
ss
pop
jge
std
ret
jno
add
jb
sub
out
dec
jmp
adc
add
divb
leave
imul
ljmp
mov
cmc
rcrl
inc
jbe
sub
dec
es
fiadds
cs
jae
call
jo
stc
stos
movsl
rcll
jmp
mull
cli
jne
mov
push
push
cmp
add
mov
dec
sti
sub
add
mov
outsl
push
add
mov
pop
leave
lods
inc
inc
push
pop
shr
push
adc
jmp
adc
xor
pop
xorb
push
mov
sub
cmp
mov
pop
pop
testl
popa
and
out
and
jecxz
aas
cld
cmp
repz
jecxz
xchg
and
mov
aad
loope
push
push
jmp
sub
and
cmp
incb
inc
ds
mov
add
decl
sti
pop
shr
push
cmp
jmp
jle
andl
lcall
mov
mov
stc
fs
push
ret
add
sbb
mov
push
jl
or
or
cmp
sub
push
clc
add
jmp
int
add
sub
adc
sti
pusha
int3
mov
scas
dec
outsb
nop
add
cmp
adc
or
or
aas
xor
or
push
xchg
daa
mov
hlt
pop
sbb
xor
push
inc
pop
or
cli
lret
pop
jmp
pusha
and
add
cmp
nop
daa
pop
add
dec
or
pop
sub
xchg
push
pop
mov
pop
mov
jge
sarb
mov
mov
mov
outsb
jg
push
pop
cmc
push
ds
jb
mov
js
dec
pop
std
jmp
inc
push
sub
addr16
adc
lret
cmc
inc
mul
es
sbb
test
add
popa
test
nop
in
idiv
mov
jnp
jmp
xor
jbe
inc
push
mov
jmp
testl
jmp
inc
outsl
mov
rolb
cs
mov
shlb
clc
sub
test
lock
jg
out
into
or
lods
add
sub
loopne
pushf
push
cmp
cmp
and
adc
jecxz
cwtl
mov
inc
and
test
dec
cmp
push
cmp
push
xchg
pusha
add
js
sbb
hlt
jbe
push
popf
inc
in
dec
adc
adc
add
adc
pop
das
jle
jl
jp
test
dec
inc
in
cld
jno
mov
dec
popa
mov
movhps
mov
ljmp
adc
push
inc
sub
cltd
xchg
in
int3
cmp
dec
jmp
popf
mov
fistl
flds
mov
dec
mov
push
or
mov
test
cwtl
and
push
outsl
add
idivb
out
and
aad
mov
push
inc
push
ljmp
pop
xchg
adc
xchg
adc
jg
lock
xor
or
jb
pusha
add
sub
jns
mov
sub
pop
push
das
adc
mov
xchg
xchg
shrb
outsl
and
jp
loopne
fldl2t
jbe
mov
xchg
pop
mov
es
push
xor
mov
dec
xchg
push
idivl
adc
cmp
sub
jmp
cmp
cmp
aas
push
push
push
mov
gs
push
fs
leave
add
cmp
or
cmp
jo
add
ss
or
push
loopne
les
shr
xchg
add
mov
je
sub
mov
jmp
or
xchg
jae
jo
mov
sub
sarl
rcrb
or
fiaddl
lods
sub
jp
or
aas
fs
mov
or
dec
jne
aam
lea
ljmp
in
sub
mov
sub
mov
sub
add
adc
jo
xor
jp
popf
inc
xchg
sbb
push
or
addr16
ja
inc
cmpb
outsl
xor
cmp
shlb
js
testl
inc
adcl
pusha
dec
sub
dec
push
call
js
inc
sbb
cltd
aas
pop
lods
sbb
sbb
mov
in
xchg
aam
adc
add
push
pop
or
pop
cld
jb
fmuls
mov
jp
or
sub
subl
jmp
push
mov
or
sbb
mov
fcoms
push
pusha
xor
sub
xchg
hlt
fsubrs
dec
test
push
sub
mov
inc
sahf
lods
sub
jg
sub
pusha
pop
pusha
movsl
adc
dec
mov
cld
inc
fidivrl
mov
loopne
outsb
sahf
jmp
mov
stc
mov
mov
scas
mov
les
in
fsubrs
jp
sub
in
sub
fimuls
push
push
cvtdq2ps
out
sub
xchg
leave
out
mov
test
cmp
mov
inc
mov
pop
lcall
add
lret
xor
sbb
fcomps
and
push
lret
pop
push
sub
dec
and
sbb
scas
aad
aam
stos
add
push
adc
ljmp
add
push
mov
mov
loop
movl
cld
dec
pop
sti
push
cmp
cmp
lcall
pop
aaa
xor
mov
cmp
adc
dec
xor
pop
mov
jmp
outsb
dec
pop
incb
jp
and
nop
xchg
or
jmp
subb
in
lods
icebp
bound
cmpsb
imul
bound
sub
addr16
mov
push
jge
lahf
fsubrl
out
pop
push
insl
add
test
mov
imul
addb
fistpl
loope
sub
lods
gs
das
push
stos
loopne
sbb
push
add
andl
leave
cmp
loope
adc
dec
stos
push
mov
int3
les
xor
hlt
and
mov
push
mov
dec
in
sub
mov
dec
not
push
cmp
mov
in
sahf
dec
loop
and
into
mov
cltd
mov
jb
mov
add
rcll
mov
jge
out
or
add
jle
dec
xlat
nop
pop
ljmp
and
cltd
jp
dec
jl
add
push
aad
sub
into
aad
jbe
stc
lods
mov
cli
daa
js
arpl
movsb
mov
pushf
sbbl
dec
std
stos
mov
das
fbld
iret
cmc
push
mov
lods
xchg
add
dec
roll
jne
popa
mov
sub
inc
das
jmp
outsl
cld
decl
ds
and
adc
and
xchg
xlat
cmp
ret
pop
mov
popa
and
lds
stc
inc
or
bound
popa
adc
xchg
adc
arpl
fwait
ret
in
mov
cmc
outsl
xor
sbb
and
dec
push
push
push
add
or
mov
add
sub
sub
adc
sub
jmp
in
cmp
jge
pop
cld
add
test
jmp
lods
enter
and
daa
push
sqrtps
pop
and
jns
pop
xor
test
jecxz
mov
in
xor
cmp
mov
fidivrs
cmp
pop
sub
or
and
inc
pop
cmp
inc
imul
xchg
xor
lret
pop
mov
inc
mov
push
daa
jo
add
lea
pop
add
cmp
jl
dec
loop
mov
xor
xor
loop
sub
pop
lret
imull
out
push
addb
ljmp
call
lret
xlat
adc
cmp
dec
cmp
xchg
inc
scas
fidivrs
movsl
jnp
push
push
jge
rcl
jmp
push
mov
in
jmp
or
sub
cwtl
add
pop
push
mov
inc
jmp
lock
leave
push
pop
aaa
jg
sbb
pusha
or
dec
sub
mov
les
out
mov
jne
fadd
out
jp
std
pop
test
lret
bound
mov
push
shrl
add
lret
xor
pop
add
add
flds
fistl
add
add
call
in
push
jp
lds
rcr
or
das
out
or
inc
mov
sub
cmp
dec
mov
push
push
mov
push
mov
or
inc
lods
pop
popf
gs
gs
test
scas
out
fstpl
sub
mov
push
fld
inc
das
mov
sub
cli
sbb
shll
add
pop
dec
stos
push
push
or
add
dec
xchg
cmp
adc
arpl
pop
pushf
adc
or
jmp
push
andb
mov
out
fisubl
push
adc
and
mov
cmp
adc
cli
xor
add
mov
xor
cmp
mov
mov
es
jg
inc
mov
pop
scas
std
or
dec
mov
sahf
pop
or
repnz
cmp
dec
sbb
rcrl
shll
pop
shll
or
scas
dec
xchg
cmp
mov
ret
pop
jge
loop
sub
int
sbbb
pusha
fisttps
mov
mov
lcall
fwait
imul
jae
pop
add
mov
and
or
mov
sub
add
sbb
dec
inc
clc
cmpsl
inc
pop
push
add
xor
pop
or
pusha
mov
insl
xchg
mov
imul
pushf
in
jnp
repnz
jecxz
add
orb
pop
imul
inc
mov
adc
sarb
rcrl
mov
inc
mov
adc
ljmp
or
in
adc
xor
cs
sbb
sbb
stos
roll
pop
dec
xchg
jecxz
jno
shrb
add
sub
xchg
shll
jne
jmp
add
repz
inc
ss
insl
adc
inc
movsb
adc
or
add
aas
jmp
pop
negl
es
inc
clc
outsb
push
xor
ret
pop
inc
sbb
lret
inc
or
lock
hlt
xchg
pop
or
dec
in
lea
test
mov
push
pop
xlat
pop
cmpsl
loopne
push
popf
rolb
push
and
dec
push
test
call
pop
dec
daa
orb
adc
and
cmp
pop
xchg
stc
mov
shr
pop
inc
cmp
mov
xchg
cmp
cwtl
movsl
clc
mov
inc
test
push
pop
xchg
stc
mov
cltd
mov
add
stos
mov
out
nop
mov
push
inc
jecxz
push
lahf
call
popa
daa
push
fwait
or
callw
ja
jl
adc
adc
or
adc
jmp
sub
sub
or
loop
xchg
nop
shll
or
push
stos
xchg
push
sbb
popa
xor
xor
lcall
or
xor
cmc
mov
incb
push
call
jae
test
jmp
pop
les
cli
adc
lret
xor
addr16
jl
fcmovu
fcompl
andb
and
cwtl
movsb
xchg
push
bound
das
jmp
adc
das
repnz
push
xchg
jno
add
push
mov
push
xchg
jnp
pop
inc
and
xor
dec
fmulp
dec
aas
in
addl
pop
test
ror
cmp
or
insb
xor
sbb
jnp
mov
push
loope
inc
dec
cmp
into
cltd
add
pop
dec
not
inc
rcrl
sub
jmp
in
sahf
jb
lret
lock
xor
inc
xchg
push
pusha
mov
mov
mov
add
das
dec
and
adc
ds
shl
neg
shr
push
aas
mov
cmp
adcl
cld
push
loopne
pop
pop
sub
add
jo
or
movsl
stos
xchg
lret
adcb
sbb
inc
mov
push
pop
sub
push
mov
xchg
idivl
movsl
fldl2t
xor
or
sub
push
ja
mov
sub
mov
inc
movmskps
in
or
push
fmuls
add
push
jbe
push
fdivrl
imul
and
test
adc
sbb
adc
mov
xor
or
mov
xor
out
and
pop
sbb
fbld
adc
push
scas
and
or
xor
jmp
push
lcall
pop
outsl
out
icebp
xlat
lods
test
mov
pop
pusha
xchg
add
jno
jmp
jecxz
mov
sbb
dec
and
fiadds
xor
aad
fcompl
cmpsb
ds
or
test
cltd
jmp
dec
fdivrl
pop
sub
imul
mov
jmp
pusha
clc
inc
data16
mov
pop
in
add
mov
ja
mov
jb
mov
dec
adc
pop
pop
sub
or
mov
inc
es
lret
and
and
xchg
dec
inc
jo
repz
dec
inc
hlt
cmp
cmp
dec
pop
xchg
daa
sbb
loop
clc
mov
ret
mov
out
js
pop
pop
iret
cltd
adc
enter
jecxz
adc
mov
adc
push
int3
ret
fiadds
cmp
sub
jmp
cld
add
sub
sbb
out
rclb
add
jae
clc
xchg
rclb
pop
cli
inc
sub
inc
fcom
jle
stc
cs
add
shr
xchg
mov
inc
xor
mov
mov
add
cli
pop
mov
mov
arpl
daa
add
jmp
jge
push
subb
add
repnz
std
dec
mulb
dec
ljmp
cs
adcb
pop
jno
xchg
pop
les
stos
lret
stos
fs
sbb
and
push
mov
int
mov
out
push
sarl
out
aas
lock
jge
and
lock
test
jecxz
xchg
iret
pop
pop
loopne
jo
sbb
push
mov
dec
sub
mov
clc
jg
repz
stc
pop
stc
iret
hlt
lods
cmp
out
sub
push
add
add
ret
jo
and
or
or
loope
cmp
push
push
cld
mov
cmp
and
jmp
loopne
lods
dec
movsl
mov
enter
imul
arpl
jae
xor
add
adc
into
lret
sub
sub
int
pop
bound
cltd
add
pop
icebp
dec
push
std
imul
jp
push
das
cmp
mov
or
push
add
test
ss
mov
imul
jno
int3
aam
into
mov
imul
lret
loope
je
loopne
lock
sub
ficoml
loopne
push
push
xor
faddl
inc
pop
inc
or
push
add
sbb
jmp
and
jb
xchg
aaa
and
jl
pop
rcr
or
jmp
scas
loopne
cld
addr16
jb
mov
cli
lret
ss
sub
sbb
daa
aam
mov
sub
sbb
add
push
ret
je
sbbb
push
test
das
add
adc
les
mov
xor
jae
push
cmp
pop
xor
xlat
rcrl
sbbb
fiadds
inc
repz
add
das
enter
cmpsb
hlt
push
sbb
orb
out
shlb
inc
ret
negb
push
xchg
inc
mov
mov
or
in
jne
addr16
pop
xchg
and
cmp
xchg
xchg
cmp
lret
imul
push
mull
iret
sbb
and
cmp
push
push
pop
fmull
int
das
in
roll
mov
ss
or
popa
cs
push
jg
stos
xor
cltd
xchg
jecxz
cld
xchg
adc
lods
cld
jp
sub
xchg
or
push
xor
ja
cmpsl
pop
fldt
rolb
cmp
jmp
push
cmpsl
jg
mov
fsubrs
es
jbe
pop
sbb
jg
mov
cmp
pop
cmpsl
or
insb
mov
inc
dec
sahf
jae
pusha
sub
mov
xor
mov
outsl
cmp
daa
stc
aas
ja
push
push
sahf
push
lret
jno
out
mov
and
jmp
popa
push
pop
lret
sti
inc
stc
daa
add
out
push
aad
jbe
jmp
in
add
sub
mov
cmp
pusha
dec
push
ljmp
dec
jae
jecxz
mov
and
pop
ret
mov
push
pop
mov
out
sub
icebp
pop
ret
mov
mov
out
cmp
sti
cmp
mov
xor
sub
jnp
cmp
jg
add
fcmovb
pop
movsl
in
into
add
push
shr
addl
jmp
mov
add
and
imul
push
mov
push
fld
call
inc
xor
jmp
popf
inc
dec
xchg
push
sbb
inc
xchg
stos
mov
idiv
subl
or
aas
xchg
inc
scas
mov
jmp
inc
mov
sbb
sbb
dec
gs
hlt
or
inc
sbb
cmp
das
pop
jge
pop
aad
or
inc
leave
decl
jmp
inc
mov
test
pop
shl
jge
stos
mov
push
mov
das
mov
cmc
popf
xchg
sub
inc
sbb
sbb
inc
cmp
add
lds
and
xchg
mov
push
push
aaa
shlb
fld
outsb
sub
call
data16
push
ljmp
inc
push
sub
sub
adc
clc
add
push
mov
jge
pop
xor
adc
jge
adc
push
ret
shl
mov
mov
push
push
es
push
jmp
dec
test
push
out
int3
xchg
push
or
xchg
mov
fimuls
aaa
sbb
adcl
lea
out
faddp
xor
cmpsb
ret
add
xchg
cmp
lods
ret
pop
cli
adc
popf
cmp
mov
sub
fisttpll
jecxz
xchg
pushf
adc
std
and
and
mov
negb
add
jle
push
mov
ret
loopne
and
pop
shr
subl
sub
lds
int3
pop
sarb
hlt
dec
divl
or
fcmovu
fdivrs
cmp
push
mov
mov
gs
mov
dec
adc
lret
arpl
dec
pop
add
jle
push
sub
movsl
bound
or
or
aam
mov
lahf
rcll
outsb
mov
fucompp
retw
sar
add
xchg
or
mov
jp
cli
dec
pop
pushf
mov
enter
daa
stos
sbb
insl
pop
hlt
pop
and
add
ss
or
loopne
aad
cmp
stc
fdivrs
adc
mov
or
pop
fsub
sbb
and
dec
jo
loopne
mov
sbb
sti
ffreep
xchg
mov
xchg
mov
xor
fsubrl
mov
push
xor
push
adc
cmp
ds
jmp
cmpsl
and
mov
push
nop
inc
ja
add
inc
and
ret
sub
rcll
pop
add
or
gs
jmp
push
add
dec
add
aas
cmc
xorl
das
aaa
add
cmc
cli
or
test
lock
jae
jge
push
mov
jno
xorl
push
push
cs
add
in
scas
and
xchg
xchg
lret
lods
cld
pop
repnz
and
push
dec
into
mov
or
testl
roll
scas
add
int
mov
scas
jae
ret
push
jmp
out
test
aam
xchg
push
outsl
add
sub
mov
mov
pop
je
fcompl
outsl
cltd
rol
cli
add
and
push
or
push
cmp
rcl
mov
cmpsl
data16
out
imul
sbb
or
je
xchg
push
pop
and
inc
bound
outsl
or
test
test
xor
mov
mov
add
jne
cwtl
or
loop
hlt
pushf
inc
adc
mov
xchg
out
gs
adc
dec
dec
aam
adc
cmpsb
addb
jmp
mov
xchg
mov
movsl
jl
mov
mov
cmp
sub
repz
mov
sub
dec
add
dec
test
mov
imul
sarb
in
rorb
push
gs
dec
outsb
push
insb
xlat
jo
inc
xorb
inc
push
rorb
cmp
aad
rolb
repnz
jle
cmp
dec
fsts
flds
gs
rcrl
sti
dec
sbb
test
ret
adc
xchg
out
aas
clc
mov
aad
mov
inc
and
xor
push
mov
push
fimuls
ljmp
or
jl
lock
ucomiss
int
or
aam
add
adc
lods
lds
cmp
inc
subb
cli
in
cmpsl
add
fcoms
pop
pop
arpl
jb
xchg
test
rorb
cmpsl
cmp
mov
adc
adc
lret
jle
xchg
fidivrl
cld
lock
push
jmp
pop
push
or
pop
mov
pop
nop
jno
add
adc
aad
ss
jne
js
cmp
mov
xchg
push
nop
test
and
dec
jle
add
jp
out
data16
shll
pop
adc
pusha
leave
xlat
imul
xor
pop
fsts
lret
scas
subb
jb
jne
jo
push
push
pushf
sbb
daa
sub
and
or
sub
and
xchg
test
and
mov
je
sub
leave
cs
lods
pop
mov
lea
inc
scas
pop
xor
lea
xchg
mov
push
cmp
clc
adc
push
push
add
sbb
mov
lods
dec
sub
cltd
mov
inc
lahf
mov
fmuls
cmp
lcall
sub
push
jmp
fcom
in
loopne
addr16
test
cld
jp
push
mov
pop
jmp
jmp
inc
adc
cmp
bound
jo
add
xchg
lret
sbb
cmovp
add
jmp
and
cli
xor
cmp
or
pop
test
dec
push
stos
xchg
insl
in
and
pop
dec
add
push
pop
or
push
sub
or
das
fisubs
dec
lret
mov
dec
ljmp
rcll
mov
lock
mov
mov
movq
xchg
xchg
xchg
pop
pop
sub
cwtl
js
dec
dec
clc
or
cmp
ss
in
xor
arpl
pushf
les
jne
or
push
or
daa
or
mov
scas
icebp
outsb
jmp
add
rcl
push
loop
cmp
xchg
dec
or
pop
sub
lods
ret
add
sbb
inc
xchg
cli
dec
psubsw
jmp
pusha
repz
dec
sub
add
sbb
inc
cld
das
hlt
mov
pop
inc
out
pusha
and
sbb
pop
mov
in
cs
stos
mov
jno
icebp
lods
add
mov
jp
jb
jg
sub
movsb
mov
incl
ror
clc
dec
in
fistpl
lods
cmp
add
mov
in
or
dec
sbb
fs
push
and
scas
dec
test
std
cmc
mov
push
lcall
or
aam
sub
and
ds
mov
sub
push
mov
mov
cli
lock
mov
inc
pop
lea
push
and
and
and
mov
out
test
mov
jg
aad
or
adc
int3
lea
repz
jno
dec
movaps
clc
pusha
xorl
imul
add
fsubrl
or
jmp
ret
mov
dec
lock
jmp
in
jp
dec
js
pop
mov
mov
mov
mov
pop
aad
and
xchg
add
cli
push
xchg
add
out
mov
lds
sar
in
sbbl
pop
inc
pop
push
incb
int
xchg
frstor
sahf
mov
das
out
dec
addr16
xor
push
push
icebp
out
andb
rorb
repnz
xchg
cmc
adc
or
sub
sbb
add
add
adc
movsb
pop
lgs
inc
fsubrs
sub
andb
insb
or
aam
and
cmc
in
insl
fcoml
jnp
ljmp
shll
cmpsl
adc
and
xchg
je
or
jne
pop
mov
mov
imul
inc
sar
gs
mov
inc
clc
and
pop
push
push
loope
loope
sbb
pop
mov
cmc
stc
sbb
or
xor
sbb
cmpsb
loope
inc
aas
xor
xchg
out
arpl
repz
ljmp
sti
sub
pushf
adc
jp
and
xchg
jne
jmp
in
incb
mov
inc
fwait
xor
dec
or
cmp
inc
movsl
notb
push
clc
lock
lds
dec
and
mov
adc
cwtl
mov
dec
cmp
das
mov
out
test
adc
lods
xor
cmp
fs
popa
ror
add
xor
add
inc
inc
sub
mov
loope
sub
repnz
jo
cmp
stos
hlt
jp
jmp
xchg
xor
dec
sub
test
pushf
sbb
mov
dec
lret
jle
pop
sbb
push
inc
call
cmp
and
aaa
cli
add
sub
push
mov
add
push
fldenv
cmp
bound
punpcklwd
push
int3
cli
subb
hlt
xchg
push
pop
insb
out
or
or
or
fists
sbb
push
movsb
enter
cmpb
mov
jmp
xchg
sbb
scas
popa
adcl
jmp
test
pop
push
daa
push
inc
test
pop
dec
mov
inc
mov
and
add
xchg
sub
dec
mov
sbb
out
out
stc
bound
in
sub
push
int3
push
mov
sub
dec
add
xchg
push
jg
pop
adc
ljmp
adc
gs
fsubs
out
mov
in
pop
add
lret
pop
movsb
pop
mov
xchg
jmp
mov
push
push
push
lret
lea
jp
adc
add
and
sbb
mov
push
js
daa
push
out
pop
push
xor
nop
dec
pop
pop
push
add
sbb
jecxz
sub
push
jge
jne
xchg
sub
pop
out
dec
pop
in
insb
xchg
repnz
les
push
push
mov
arpl
sbb
mov
out
or
fnsave
movsl
arpl
jl
jp
out
negb
jge
cmp
mov
imul
lods
mov
add
ficoms
dec
inc
cmp
test
cmpb
loopne
pop
or
pop
aas
add
jb
jl
inc
or
pop
orl
mov
mov
mov
mov
add
lea
adc
outsl
jo
fists
and
mov
xlat
adc
mov
pop
mov
inc
adc
pop
mov
rclb
sahf
shr
inc
mov
dec
push
and
inc
fbld
in
xchg
mov
inc
adc
das
cmpsl
inc
test
or
push
inc
imul
pusha
inc
lock
push
xor
sub
jmp
jo
add
std
js
inc
push
movb
or
nop
out
cmpb
xor
or
ljmp
jae
outsl
mov
inc
adcl
jne
jmp
loop
jo
jp
mov
inc
jo
jae
add
jecxz
push
mov
sbb
mov
cmovbe
add
jns
lods
lods
loope
or
movsl
lret
adc
pop
es
fcom
loope
insl
bound
pop
jns
sbb
sub
in
add
clc
jecxz
sbb
fmulp
mov
push
adc
pop
push
hlt
adc
adcb
push
push
push
push
xor
pop
subb
mov
inc
mov
loopne
pop
rorl
call
adc
dec
cli
lret
pop
enter
jo
or
in
push
repz
mov
mov
jle
or
add
pop
xor
or
cmp
adc
push
mov
sub
cld
inc
lods
push
xchg
mov
push
scas
sub
push
sub
popf
mov
shll
into
fildl
ss
mov
mov
loop
cmc
stos
mov
add
sbb
jb
pop
and
fsts
rcrb
mov
mov
push
sbb
push
push
jecxz
adcb
das
enter
dec
rclb
xchg
push
mov
or
insl
lret
negb
mov
cmp
add
mov
imul
mov
imul
pshufw
das
cli
add
jmp
out
adc
or
adc
jecxz
jno
add
arpl
push
roll
jbe
pop
jmp
sbb
cmp
adc
xchg
dec
addl
push
adc
push
inc
popf
add
sbb
imul
popa
sub
dec
stos
dec
cwtl
adc
test
ds
lahf
or
add
mov
jo
dec
scas
xchg
add
test
pop
sub
adc
sub
imul
es
adc
mov
movsb
xor
loopne
jmp
push
adc
dec
les
loop
mov
pop
mov
cmp
jo
lods
add
xchg
jo
pop
shl
iret
jp
test
testb
mov
mov
sahf
jle
dec
mov
push
xchg
cmc
add
insl
lds
incl
insb
imul
mov
sub
jmp
scas
cmp
mov
outsb
mov
lock
and
jmp
leave
mov
mov
fs
icebp
add
mov
test
inc
mov
jmp
mov
clc
sub
lock
push
sbb
and
andb
jmp
loopne
adc
cmp
jg
imul
rorl
add
adc
pop
mov
aas
sub
dec
clc
push
shrl
rolb
lods
in
stos
mov
push
xor
imul
bound
sub
outsl
inc
lock
leave
pop
inc
test
imul
cmp
ret
lods
icebp
movsl
insb
aam
pop
mov
add
mov
add
rcll
rolb
je
lock
imul
iret
sub
mov
js
pop
or
pop
or
inc
push
sub
dec
les
inc
xchg
movsl
mov
sub
fbstp
push
jne
add
xor
cld
sti
std
out
nop
hlt
jge
mov
inc
mov
add
adc
add
stos
orb
xchg
lret
fsts
testb
mov
nop
mov
repnz
cmp
jnp
inc
icebp
jp
push
or
jmp
cli
test
adc
jbe
out
sub
lods
pop
cmpsl
mov
daa
xor
mov
xor
dec
xor
je
stos
lods
push
hlt
mov
jge
dec
movsb
or
adc
xor
arpl
mov
add
jnp
je
cltd
inc
leave
loop
mov
sbb
or
or
mov
xchg
ljmp
inc
add
mov
stc
inc
push
movsb
push
fcoml
xor
or
mov
into
mov
lret
icebp
sub
mov
fbstp
or
cmpl
and
and
or
push
cld
sahf
scas
and
loop
sub
jae
popf
jno
sub
jmp
pop
inc
push
es
jb
lret
imul
and
add
jbe
xor
mov
pop
push
mov
movsl
int
inc
mov
cmc
or
das
stos
imul
xor
sbb
les
gs
lret
jo
xchg
sub
add
out
mov
gs
xor
stos
in
or
loope
sub
mov
push
movb
pop
push
int3
test
sub
inc
xchg
push
loopne
fildll
and
mov
xor
lret
subb
or
sahf
popa
mov
cmp
pusha
xchg
push
mov
je
inc
pop
ret
push
push
adc
jmp
adc
pop
test
mov
add
jnp
push
nop
pop
mov
jg
push
mov
arpl
add
cmp
pop
dec
inc
fisttps
ds
or
mov
and
ss
or
sbbl
inc
es
jae
jmp
enter
pusha
sub
push
sbb
dec
or
xchg
cwtl
mov
call
fwait
js
ljmp
push
js
push
or
push
dec
das
or
mov
sbb
cmpb
jecxz
sbb
lods
or
pusha
and
jo
and
mov
and
or
data16
sbb
cmp
jo
mov
cmp
xchg
adc
add
sbb
cli
fstps
adc
cwtl
push
xor
xor
and
sbb
rorl
test
sbb
or
pop
add
aas
or
iret
sbb
test
xor
sbb
or
jne
mov
mov
and
adc
test
xor
rol
add
xchg
inc
fs
inc
push
icebp
inc
pop
scas
arpl
stc
inc
and
and
xor
sub
jne
dec
sbbl
jecxz
test
mov
or
pushf
pop
movsb
xchg
push
fsubrs
mov
adc
call
in
add
add
sti
jae
dec
mov
inc
lret
and
les
jb
add
cmp
and
pop
and
mov
lds
sti
pop
add
adc
or
mov
stos
or
add
push
or
cmpsl
test
mov
add
dec
test
and
sub
or
test
pop
xchg
or
popa
sub
rcll
aam
cmp
or
or
dec
popa
js
cltd
add
or
cmp
test
adc
cmc
xchg
adc
dec
adc
icebp
arpl
lods
movsb
mov
in
arpl
test
jp
dec
push
adc
add
andl
add
dec
shrb
mov
andl
adc
adc
and
imul
leave
test
xchg
cmp
mov
pusha
add
xchg
les
out
test
mov
cmp
cmp
xor
push
push
repz
add
push
mov
push
loopne
jp
cmp
shlb
pop
xor
fsts
ja
pop
adc
push
pop
pop
push
cmp
pop
xor
mov
or
push
jo
mov
cld
lret
cmp
dec
movsb
js
sbb
das
mov
mov
push
clc
push
divb
or
mov
cld
test
xor
faddl
addl
sbb
sarl
and
aam
es
sub
cs
fcoms
or
inc
incl
xor
mov
scas
call
and
sub
ljmp
rcrl
inc
test
add
push
add
push
fnsave
inc
jbe
call
popa
pop
sbb
pusha
pop
stos
and
push
pop
mov
shr
mov
adcl
inc
sub
loopne
rorb
jb
cmc
or
aad
insb
call
mov
add
push
mov
or
sub
sbb
rolb
and
loope
sub
adc
sub
or
daa
push
and
pop
lods
loope
jecxz
sti
xchg
sbb
inc
adc
dec
push
mov
mov
dec
or
imull
repnz
lods
jae
or
and
push
int3
or
enter
jl
xchg
mov
shlb
dec
inc
jecxz
nop
das
jle
mov
mov
jp
or
and
jmp
fstpl
fs
popa
pop
and
mov
cmc
repz
enter
mov
pop
es
mov
scas
push
sti
jp
rorb
std
movsl
aad
js
push
or
jae
push
iret
xor
pop
mov
loop
or
mov
lea
daa
adc
adc
out
es
notb
xchg
or
daa
mov
pop
or
pop
cmpsb
jo
jne
out
out
pop
ds
push
sbbb
pop
rsqrtps
lods
mov
pop
dec
hlt
mov
mov
fsts
repz
push
movsb
add
jmp
mov
inc
dec
push
and
jo
mov
push
lock
or
pop
pop
cmc
sbb
xor
clc
mov
scas
mov
mov
out
add
rcll
stos
dec
push
hlt
dec
shr
jg
cld
leave
in
sub
and
lret
popa
insl
daa
sub
pop
push
incl
xlat
sarb
adc
dec
inc
shll
sub
mov
and
std
out
mov
and
inc
mov
imul
hlt
pop
cld
adc
push
addl
pop
push
clc
mov
aaa
xchg
sbb
decb
bound
cli
add
jmp
stc
cmp
testl
loope
add
shll
fsubl
out
add
insl
xor
xchg
or
mov
cmp
addb
add
jg
sub
sbb
or
adc
jecxz
dec
mov
xor
fcoml
frstor
icebp
mov
add
push
pop
call
nop
dec
mov
pop
jae
jnp
push
and
mov
mov
dec
cltd
dec
ds
cli
test
inc
or
add
or
jae
repnz
pop
pop
push
mov
sbb
flds
jmp
push
out
dec
inc
imul
adc
lods
nop
or
sub
mov
push
push
mov
jno
lea
and
add
sub
mov
test
push
mov
mov
xchg
pop
lret
adc
in
push
push
fdivrp
fiadds
cltd
dec
jbe
jl
loope
fildll
aas
inc
xchg
adc
ret
mov
or
or
rorl
sub
xor
mov
popa
sub
inc
push
mulb
or
mov
outsb
add
pop
aam
mov
sbb
mov
outsb
loope
stc
mov
imul
or
xchg
sets
lock
leave
mov
mov
inc
jle
or
das
jb
push
pushf
add
pusha
cld
jp
xor
xchg
repz
pop
pop
mov
mov
jmp
mov
pushf
sbb
mov
pop
xor
mov
lods
sub
dec
movsb
sub
inc
mov
adc
test
sarl
cli
and
mov
jl
outsl
adc
mov
cmp
flds
jmp
loopne
xlat
sub
in
inc
add
mov
adc
test
adc
std
dec
xchg
lock
push
mov
mov
xor
push
fsubs
mov
add
inc
cmp
fmull
jmp
pop
jns
adc
jb
mov
pop
leave
hlt
and
dec
ss
add
shlb
sub
xor
mov
push
mov
push
sahf
sbb
pushf
mov
insb
mov
pop
repz
adc
clc
std
adc
mov
pop
notb
sbb
das
or
mov
jp
and
sub
mov
sub
adc
mov
call
imul
fisubs
jmp
mov
paddq
mov
push
jae
sub
add
into
mov
ds
sbb
repnz
dec
add
data16
dec
pop
dec
pop
sub
jmp
push
jo
mov
lock
add
dec
aaa
pop
jne
lock
roll
test
dec
mov
inc
subl
add
pushf
sub
psubb
mov
in
and
or
mov
sbb
or
inc
or
repnz
popa
mov
mov
rolb
sbb
add
adc
scas
testb
xchg
mov
ja
adc
xor
mov
scas
addr16
icebp
sub
dec
bound
pop
xchg
sbb
lret
inc
push
add
add
jmp
ds
pusha
stos
mov
jge
jae
mov
lds
sub
sbb
std
dec
pushf
push
bound
push
lcall
xor
dec
and
fstps
fimuls
pop
push
sub
adc
cmc
xor
pop
dec
rorb
inc
aaa
daa
stos
syscall
mov
cmp
loop
push
mov
int3
ja
xchg
cwtl
cli
fists
movl
sub
dec
sub
add
icebp
outsb
mov
dec
or
xor
lret
jo,pn
add
xchg
push
lahf
out
lahf
mov
dec
mov
lock
cs
push
xor
sub
loopne
in
pop
inc
jmp
dec
dec
jbe
aas
pop
jno
and
popa
adc
dec
call
mov
or
push
xorb
add
sub
xor
jl
pusha
inc
orl
test
scas
sub
sub
or
push
es
or
jecxz
int3
insl
sub
or
outsb
lret
clc
mov
xor
pop
in
jae
xor
in
test
push
mov
push
adcl
inc
mov
adcb
into
fs
jmp
adc
jb
popf
in
ljmp
cmp
mov
stos
imul
dec
lcall
fdiv
into
xchg
rclb
cmpsl
insl
out
sub
pusha
pop
rcrb
adc
jle
push
xchg
mov
pop
nop
mov
int3
sub
or
push
in
cmpb
add
push
nop
xor
adc
push
dec
adc
adc
mov
es
add
ds
fcomip
shrl
inc
push
and
aaa
fildll
dec
inc
gs
mov
dec
add
push
push
push
push
sbb
jno
push
fdivs
xor
push
hlt
sbb
dec
ja
or
loop
jle
cmp
sub
out
adc
nop
test
or
imul
or
data16
mov
inc
dec
adc
sub
mov
ficompl
mov
data16
out
and
pause
and
movsl
push
adc
sarl
ret
pusha
mov
inc
sub
dec
iret
add
popa
ja
push
and
outsl
xor
pop
jmp
cmp
push
neg
stos
add
mov
in
addb
add
xchg
or
daa
shlb
push
mov
inc
cmpsb
subl
jl
inc
or
push
arpl
je
add
dec
fisttps
cld
xor
dec
icebp
jp
push
push
sbb
push
mov
leave
ret
or
ret
mov
ja
lock
push
adc
adc
icebp
push
jne
insb
adc
push
jmp
adc
out
push
sti
imulb
sub
add
fwait
cmp
jmp
rcrl
push
sbb
repnz
je
out
adc
lahf
ret
loope
cmp
pop
xlat
leave
dec
add
aad
mov
sub
jmp
fsubr
scas
int3
cs
pop
sub
divb
dec
out
mov
sub
pop
pusha
push
add
mov
cltd
xlat
or
push
cmpb
jle
xlat
inc
pusha
xor
xor
xor
out
out
sub
mov
pusha
ljmp
cmp
mov
xor
mov
cmp
dec
aad
mov
add
das
mov
xor
mov
roll
xchg
adc
cmp
ret
xor
mov
jmp
xchg
fdivrs
push
rcrl
sub
fmuls
test
xor
and
mov
ja
add
pmuludq
sub
imulb
imul
mov
fists
mov
inc
stos
mov
push
mov
inc
ljmp
ret
jge
xchg
xlat
cs
push
ljmp
jnp
sub
cli
push
lahf
mov
aaa
fsubs
or
clc
xor
and
dec
movsl
mov
enter
adc
cld
add
push
mov
or
outsl
adc
cwtl
sub
inc
inc
cmpl
dec
inc
mov
push
loope
push
outsl
cmpsb
sti
xchg
xchg
in
out
das
insl
arpl
push
add
jle
hlt
sbb
or
call
push
popf
aam
xchg
pop
inc
cs
shr
add
jmp
imul
mov
adc
jle
daa
push
mov
in
jle
es
fisubs
out
jmp
lock
inc
add
neg
add
ja
sub
out
adc
mov
lock
pop
ss
add
push
sub
xchg
gs
pusha
xor
inc
or
inc
lea
sbbb
ljmp
mov
mov
dec
jg
pop
mov
loopne
mov
int3
add
sar
jmp
add
daa
rcrl
outsb
push
adc
push
shlb
ret
lock
rcrb
loope
cmpsl
pop
mov
mov
mov
jmp
mov
xor
or
pop
enter
push
das
out
lock
mov
xchg
out
and
adc
lods
mov
jbe
orl
loope
dec
push
lock
lret
fstpl
dec
pop
pop
sub
dec
or
fcompl
and
cmp
pop
fcompl
roll
lcall
push
sahf
cmp
push
mov
shl
xchg
aas
mov
push
ss
scas
xchg
sti
cmc
mov
clc
test
das
sbb
jmp
repz
inc
pop
lcall
and
popa
sub
jp
stos
jecxz
xchg
lods
ret
enter
pop
jbe
xor
sbb
push
pop
and
iret
fldl
dec
lea
rol
fsubrl
iret
sub
ss
cmp
add
pop
push
and
arpl
jb
shr
fadds
repnz
jno
jl
sbb
add
cmp
push
sbb
jl
repnz
frstor
push
arpl
inc
xchg
inc
je
mov
mov
push
addb
mov
cld
adc
add
ret
sti
pop
push
mov
pop
cmp
jmp
andb
mov
and
loope
pop
cmpsl
out
imul
out
and
push
daa
test
jmp
in
dec
dec
shrl
push
push
mov
fidivrl
mov
add
push
dec
mov
or
cmc
push
adc
push
dec
add
push
add
nop
gs
popa
lock
icebp
in
dec
cs
cmpsl
daa
cmc
pop
in
loop
pop
xor
pop
insl
inc
pop
jge
popa
adc
int3
xlat
push
sub
mov
sbb
adc
stos
push
movsl
or
inc
jmp
cmp
fnsave
scas
leave
out
inc
or
pop
repnz
sahf
sbb
icebp
cltd
mov
mov
out
mov
and
sbb
addr16
ljmp
or
inc
fstps
loopne
adc
cwtl
pop
mov
add
scas
out
fnstenv
mov
fmuls
mov
rclb
pop
sub
clc
ficomps
mov
sub
and
out
test
dec
inc
mov
mov
mov
or
repz
decl
or
cld
sbb
add
popf
add
add
scas
adc
scas
iret
in
stc
outsb
mov
enter
add
mov
jg
adc
call
ljmp
cmp
icebp
ljmp
and
mov
xchg
add
in
fisubs
and
sbb
jmp
shlb
hlt
insl
aad
fstpl
push
sub
cmp
rcrl
jge
sub
cvtps2pi
adc
push
into
cmp
or
int
adc
or
mov
out
push
xor
or
mov
bound
push
xor
pop
rolb
lcall
or
arpl
jecxz
push
pop
cwtl
les
pop
add
out
test
rcll
inc
addl
adc
mov
stos
test
sbb
cmp
in
shlb
xchg
out
fists
jg
sahf
fisttpll
in
push
std
sub
or
pop
adc
pusha
icebp
aaa
stos
fstpl
fisttpl
push
cmc
xlat
pop
bound
jae
sub
cmpsb
add
mov
push
in
test
add
cmc
bound
enter
test
mov
add
pop
out
mov
sub
je
pop
push
cmp
xor
jmp
pop
dec
inc
adc
inc
sub
mov
mov
sub
push
or
or
mov
std
arpl
jle
jbe
daa
je
in
mov
pop
mov
pop
js
mov
push
push
inc
out
or
popf
push
mov
xchg
mov
jp
or
pcmpeqb
add
rorl
lahf
js
arpl
cmpsl
pop
push
mov
into
int3
and
and
sub
cmp
sub
lahf
adc
push
mov
xchg
shlb
mov
fistpl
js
xchg
insb
dec
popf
jge
nop
es
dec
sub
jle
push
cmc
inc
jnp
add
sub
push
fldl2e
dec
add
ds
xor
push
push
fwait
sbb
or
mov
mov
test
rcll
sub
add
or
add
mov
mov
jg
lds
or
in
outsl
loope
lds
dec
iret
push
or
push
addr16
jg
nop
and
xor
mov
xchg
push
dec
dec
subb
imul
jb
cmc
subb
mov
jmp
mov
pop
or
test
sbb
shl
jle
iret
dec
pop
cwtl
or
or
xor
addb
push
xchg
mov
dec
push
es
outsb
cmp
jo
push
pop
jmp
les
insl
out
push
fmull
or
pop
pop
cmp
adc
fadds
add
dec
push
add
fisubrs
outsl
mov
pop
xor
ret
imul
es
ret
or
sti
nop
imull
in
aad
pop
mov
jne
cmp
leave
loope
outsb
fcomps
jnp
into
lods
ret
out
jnp
notl
cli
mov
stos
sub
mov
ja
test
mov
jb
inc
mov
dec
cmp
inc
mov
or
jge
pop
in
sbb
movsl
lock
aaa
xchg
mov
sub
inc
lahf
sbb
sub
shr
jmp
add
shl
xchg
pop
faddl
cmc
pusha
sub
pop
push
push
jmp
test
repz
sub
dec
push
xor
push
ret
adc
and
repz
sub
mov
pop
sti
pop
or
clc
pop
test
cmpsl
adc
mul
roll
lret
push
cmovnp
notl
jo
mov
out
push
sub
imul
movsl
aam
fs
out
test
mov
out
mov
lret
adc
jb
mov
or
rcr
stc
xor
ret
lahf
js
mov
inc
push
mov
pop
jmp
push
pop
jns
sbb
pop
pop
inc
mov
inc
divb
xchg
cmp
loopne
ret
sub
repnz
mov
sti
add
jmp
add
pop
jle
les
jmp
adc
inc
scas
push
addb
mov
ficoms
fyl2xp1
loope
xorl
push
cmp
jge
idivl
cmp
ficoms
push
pusha
pop
ljmp
pop
insl
push
xor
pop
sub
test
ficomps
add
mov
jae
and
sbb
adc
cmpb
scas
jmp
mov
divb
push
cmp
inc
daa
mov
popf
or
pop
mov
sbb
xchg
mov
sub
or
add
push
and
daa
dec
rcll
insl
mov
pop
popf
and
or
shrl
cmp
orb
mov
mov
ficomps
dec
rol
cld
ret
hlt
stos
mov
popa
mov
xor
adc
cmc
pop
jno
ss
push
mov
jbe
mov
daa
pop
inc
mov
rcll
push
popf
movsb
xorl
push
mov
clc
xchg
mov
dec
push
fbstp
cmp
push
sbb
leave
js
add
sub
fs
sbb
lods
xchg
sbb
jecxz
fsts
das
ret
xor
in
xor
push
or
jecxz
pop
int3
inc
sub
push
rcll
push
mov
pop
pop
loopne
mov
movb
cmp
jl
xor
stos
lods
and
inc
or
xchg
pop
mov
sarl
push
sahf
push
pop
push
outsb
imul
or
pop
sub
test
mov
imul
gs
jg
outsl
add
std
fmuls
test
pop
or
loop
aam
clc
add
xchg
fistps
xor
add
mov
pop
addl
dec
mov
xchg
dec
add
mov
pop
mov
jg
sub
pop
leave
mov
divb
out
pop
xchg
or
sti
xchg
sub
jbe
decl
push
ret
lds
loop
mov
pop
call
sub
loope
das
add
jmp
xor
jne
jp
sub
cli
adc
add
push
out
jge
push
pop
or
pop
push
in
rolb
lret
jno
xchg
rol
test
movsl
lret
dec
push
lahf
push
jnp
xor
push
lret
hlt
lret
jae
loop
daa
cmp
cmpsb
fs
jle
sub
mov
push
js
push
mov
push
aam
pusha
pop
mov
sub
dec
jns
or
add
mov
aad
rcrl
and
mov
mov
mov
sub
clc
mov
add
or
cmc
les
dec
or
ss
test
test
or
cmp
or
add
outsl
push
push
jmp
add
jl
pop
cmp
sbb
in
imul
or
addr16
jne
cmp
nop
push
jmp
adc
jno
xchg
mov
or
push
cwtl
sbb
negl
in
pop
adcb
inc
aaa
sti
push
push
mov
pop
shrl
mov
xor
imul
push
jnp
xchg
sub
std
nop
and
mov
inc
hlt
mov
jg
icebp
push
xor
sub
mov
lods
pop
in
mov
jmp
pop
add
loop
cmp
push
dec
xor
jne
push
jo
test
jnp
pop
push
inc
sti
jbe
inc
mov
std
jmp
in
pushf
pusha
inc
mov
pop
dec
mov
scas
les
mov
das
test
scas
sub
xor
sti
cmp
cli
mov
push
add
sbb
add
call
fldt
add
imul
pop
iret
push
mov
lret
sub
push
movsl
adc
aas
fs
push
dec
push
jne
xchg
mov
xor
aad
stos
shr
jl
dec
pop
inc
sqrtps
mov
mov
lods
jb
cmp
lcall
int
cmp
push
imul
ja
mov
dec
cmc
and
adc
add
outsl
pop
imul
mov
adc
xor
xor
inc
je
sub
push
pop
lahf
cld
in
xchg
fucomi
fmull
outsl
sbb
xor
dec
mov
lds
or
jae
lods
xchg
test
inc
test
test
dec
les
xchg
dec
push
pop
push
push
fisubs
imul
addb
shll
hlt
shufps
imul
out
dec
sub
sbb
rol
push
mov
or
mov
xor
out
outsb
insb
sbb
push
les
mov
pop
mov
test
inc
pop
jnp
ljmp
sub
xchg
dec
sbb
and
ljmp
xor
lds
fucomp
and
push
fstpl
xchg
push
sub
push
cmp
inc
addr16
add
and
daa
pop
inc
popa
fisubrs
pop
and
jle
xor
fdivrp
out
mov
sbb
xor
data16
rcl
sarl
lcall
cmp
add
addb
add
andb
daa
ret
jmp
negl
jae
dec
dec
ss
test
mov
add
jns
ds
pusha
pop
pop
add
push
jmp
push
popf
add
fidivrl
add
adc
mov
mov
sub
fimull
dec
sub
pop
bound
insb
jl
push
jmp
xor
pop
adc
jns
cmc
test
pop
xorl
add
inc
cmc
adc
in
push
dec
sbb
popa
add
mov
mov
sub
insb
xchg
ja
aam
ret
out
leave
inc
and
lods
xchg
repnz
rcrb
xor
dec
mov
sub
insb
cmpsl
cmp
push
adc
xlat
ret
push
push
fucomp
jmp
push
cld
or
jb
inc
inc
mov
jge
mov
push
mov
add
add
ja
and
loope
hlt
enter
mov
pusha
ss
cmc
jne
dec
jnp
adc
mov
scas
push
xchg
movsl
dec
iret
xorl
mov
out
mov
pop
mov
xor
mov
sbb
rcrb
jmp
dec
decl
pushf
xor
stc
sub
hlt
inc
pop
sub
adc
mov
sub
je
leave
add
pop
add
jge
pop
dec
sbb
lock
call
fisubs
je
fimuls
lret
lods
cmp
fcoms
inc
and
dec
add
or
and
adc
in
push
mov
insl
and
into
insl
and
mov
rcll
inc
lds
leave
jnp
xchg
inc
es
sub
enter
push
push
cmpsl
push
or
pop
dec
sbb
sbb
mov
add
sub
mov
push
xchg
fistpl
cmp
mull
cmp
aas
fwait
add
sub
push
rcrb
sub
or
sti
gs
inc
push
adc
xor
push
sub
into
pushf
nop
sbb
mov
mov
and
rcrl
and
testb
stos
or
mov
cs
ljmp
icebp
out
jge
leave
push
add
sarb
dec
xchg
add
xchg
push
popa
iret
push
lods
lods
jl
clc
fsub
push
sbb
roll
dec
bound
sbb
jmp
cwtl
sbb
out
add
ja
dec
jmp
clc
add
sti
das
fistl
outsl
shll
jge
mov
jno
shlb
lcall
notl
push
popf
inc
mov
scas
inc
xor
jmp
fisttps
cwtl
push
sub
fsubrs
pop
dec
jmp
sahf
or
in
jae
or
mov
add
lods
sub
out
pusha
mov
inc
mov
push
iret
in
test
mov
or
in
adc
negl
out
push
jns
dec
int3
and
ret
xchg
jmp
fnstsw
das
pop
sti
dec
push
adc
lock
lds
insb
test
pop
shrd
and
push
jge
pushf
je
mov
jb
inc
subl
xlat
xor
jmp
inc
jmp
or
or
or
inc
xor
push
add
mov
sbb
xchg
cltd
push
push
sub
and
push
hlt
mulb
or
jne
outsl
das
push
jl
hlt
jmp
imull
cmp
or
mov
dec
repnz
mov
push
test
data16
clc
or
mov
imul
mov
gs
test
test
insb
sti
jg
sbb
pusha
testl
mov
popa
push
add
pop
adc
add
in
add
inc
out
int
int3
call
push
mov
cmp
xlat
or
outsl
and
push
adc
ja
lods
add
cmp
xchg
or
push
push
mov
add
scas
or
xor
pop
aaa
sub
and
loope
inc
xchg
adc
inc
and
add
clc
nop
dec
jecxz
mov
jg
shl
neg
bound
add
das
ja
aaa
xor
add
ret
jbe
jmp
inc
popl
test
xchg
jecxz
pop
pushf
dec
movsb
add
rclb
lahf
pop
addr16
push
dec
sbb
and
daa
fadds
in
mov
sub
pop
or
add
outsb
adc
orl
testl
stc
xor
cmc
mov
mov
mov
inc
add
adc
test
lahf
andl
adc
xchg
jnp
les
sbb
mov
mov
or
add
mov
pop
mov
std
addr16
or
in
pop
and
invd
pop
add
push
fnsetpm(287
test
lret
or
ja
jl
cmc
out
ret
mov
shr
loope
mov
inc
fcoms
add
cmp
or
mov
jg
call
jge
dec
cmc
mov
dec
mov
sbb
leave
sub
adc
mov
jo
and
and
dec
popa
in
aam
sub
push
or
mov
push
pop
stos
je
subb
sub
xlat
arpl
jb
pop
push
sub
fsubr
mov
bnd
imul
adc
scas
sub
enter
das
fimull
inc
and
mov
movsb
insb
pop
scas
cmpsl
pop
nop
lahf
jle
add
ret
push
sti
lds
sub
mov
xchg
stc
or
jmp
shl
sbbl
sti
leave
frstor
fadds
jo
add
or
dec
scas
jnp
daa
lea
jg
test
dec
adc
dec
cmp
mov
add
pop
mov
sbb
xor
shlb
aam
or
mov
push
add
fs
or
adc
lea
or
mov
in
sbbl
dec
mov
subl
add
bound
add
icebp
jmp
dec
pop
xchg
call
push
jle
push
sub
pushl
xchg
adc
ret
and
and
sbb
sub
xchg
out
int3
ret
xchg
je
pusha
lds
pusha
popf
pop
dec
addb
pushf
lcall
and
jmp
ljmp
popa
sub
add
pop
or
jbe
aaa
not
or
jecxz
add
adc
xchg
out
enter
roll
loope
inc
xor
das
pop
dec
inc
pusha
inc
mov
lahf
jl
ret
pop
ljmp
adc
icebp
mov
fisttpll
and
out
daa
pop
pop
lret
cmp
pop
pop
sarl
push
mov
push
andl
pop
cmc
jp
adc
or
push
cwtl
mov
clc
pop
pop
push
add
cmp
pop
xor
sub
les
ret
les
jl
sub
adc
push
sub
add
or
jnp
data16
or
inc
pusha
sbb
xchg
mov
fldl2e
fsubrs
add
sub
cmp
xor
pop
jb
adc
cmpb
lea
out
or
sbb
push
outsl
adc
in
insb
add
repnz
pop
add
cmp
mov
jb
mov
or
jmp
jge
dec
xor
pushf
jp
ret
mov
lcall
aad
xor
jmp
dec
push
cmp
dec
adc
int3
scas
repnz
dec
xchg
sbb
jmp
lret
and
int
sbb
jecxz
or
cmp
pop
jmp
arpl
or
add
or
pop
push
push
pop
xchg
add
jmp
fimuls
shrb
mov
fistps
lods
addl
dec
lock
jo
add
push
jmp
jbe
in
hlt
out
ret
xchg
push
mov
js
mov
in
push
loope
push
fs
mov
fs
pop
mov
je
and
push
or
pop
jg
mulb
inc
lods
dec
scas
daa
mov
les
or
iret
pop
mov
lret
and
push
ror
dec
xor
mull
add
loop
dec
loopne
jb
cmp
cmp
ror
cmp
les
ljmp
adc
inc
out
out
and
jne
incl
push
jmp
adc
push
ja
loopne
int
sbb
and
jmp
loopne
sub
ds
push
push
mov
mov
inc
pusha
cmpsb
shl
sbb
into
mov
repz
sub
push
xor
mov
mov
negl
xchg
inc
adc
idivl
loop
pop
push
mov
jbe
fdivl
inc
ret
test
hlt
das
lret
pop
das
dec
jns
jne
std
cmp
push
sbb
sub
lahf
adc
pop
inc
inc
or
push
pop
cmp
popf
mov
cwtl
loop
rcrb
mov
out
jno
clc
scas
dec
push
mov
jo
ds
aaa
mov
adc
roll
fwait
mov
lock
les
rclb
add
neg
push
jmp
and
cmp
mov
dec
add
or
sub
jecxz
mov
mov
sub
mov
fsubl
push
dec
push
adc
dec
enter
jecxz
aam
push
notb
es
out
loope
fdivrs
mov
push
subl
inc
shrb
dec
mov
xchg
push
dec
and
pop
lahf
jbe
push
aas
add
sub
mov
push
mov
jns
add
inc
pushf
jge
push
or
stc
lods
inc
neg
jne
pop
mov
sahf
xor
push
jmp
dec
cmp
jno
push
xor
cmp
repnz
out
add
leave
jp
cld
movsb
jg
pop
fcmovnb
cmp
cmp
ret
push
out
ret
jne
cli
pusha
xor
insb
or
lea
xchg
sbb
push
outsb
out
ror
jle
cmp
mov
mov
add
lcall
and
das
jle
jp
push
ljmp
push
cmpb
paddsw
inc
dec
in
sub
imul
mov
rcrb
pop
sub
or
imul
imul
pop
inc
sbb
or
jp
sbb
pop
add
push
sbb
adc
xor
sbb
push
and
jecxz
and
lret
fldl2t
scas
jae
lds
movsl
fisubl
jp
decl
adc
push
pop
or
pushf
dec
mov
sub
or
adc
pop
jmp
xchg
add
jecxz
imul
loop
lcall
jge
ffreep
mov
imul
ds
enter
push
in
dec
sub
insl
test
shll
movsl
pop
or
push
dec
lock
and
add
shlb
xchg
push
ljmp
xor
xchg
jl
pop
adc
push
popa
pop
or
scas
jle
movsl
aaa
lds
in
xor
pop
jmp
xchg
mov
push
and
sub
add
sub
mov
mov
pop
pop
jmp
mov
pop
xchg
in
and
loope
push
jmp
dec
insb
adc
jo
sbb
gs
push
pop
xor
dec
fidivrl
push
scas
movsl
xlat
mov
leave
jo
push
pop
lock
xchg
stos
jno
add
mov
jo
pop
dec
pop
mov
fisubrs
add
mov
lret
sub
fsubrs
mov
push
xchg
test
lds
loopne
ds
push
mov
stc
mov
fistpll
pop
adc
jl
cmc
jp
mov
xor
data16
les
pop
add
sub
push
outsb
push
movb
cmc
cmp
inc
testb
popf
fistl
inc
jle
or
jmp
jmp
jmp
out
mov
insb
mov
add
xor
rolw
mov
out
testl
mov
leave
mov
cli
lret
lret
movsl
dec
add
fstps
les
dec
stos
sbb
ret
and
pop
inc
or
jae
xchg
sbb
in
dec
pop
add
sbb
pop
out
sbb
insb
test
add
push
lods
ss
aaa
sub
insl
pusha
adc
dec
test
pop
jmp
xor
pop
inc
push
xchg
mov
lods
push
lret
sub
adc
divb
xchg
xorl
outsl
std
adc
loopne
sub
mov
jecxz
sbb
dec
pop
pop
add
popa
cmpl
mov
jmp
out
or
jmp
pop
ret
mov
xor
mov
cld
or
cmpl
loop
xchg
arpl
popa
jmp
in
jnp
movsb
data16
test
fsubs
sbb
sub
test
cmc
scas
addb
arpl
enter
and
and
or
mov
xor
bound
mov
mov
add
add
inc
push
hlt
add
push
mov
clc
fistpl
or
jmp
mov
jnp
mov
repz
adcb
dec
mov
ja
xor
sub
ret
push
fldcw
ljmp
aas
mov
pop
pop
sahf
mov
and
das
mov
jge
cmp
pop
mov
jmp
xor
out
dec
scas
pop
cmp
int3
ss
sub
cmpsb
pop
sbb
loope
mov
xor
xchg
add
jne
dec
imul
cmp
sub
inc
push
or
inc
in
ja
leave
add
inc
call
push
decb
int3
cmp
int
cmp
mov
mov
jle
rcll
jmp
fidivl
pop
outsl
mov
dec
adc
pop
push
xchg
ret
jb
cltd
mov
adc
stos
add
jmp
jmp
pop
daa
add
or
adc
out
test
je
push
jbe
jb
fldenv
cmpsl
add
pop
jmp
jns
popa
mov
inc
das
ret
adc
or
sub
mov
xor
cld
mov
add
jmp
div
push
rcrl
push
fsubrp
sbb
mov
lahf
mov
push
add
cmp
or
rcrb
pop
cltd
or
pop
imul
mov
and
ret
lret
sub
sub
mov
sub
inc
repz
pop
add
pop
dec
add
inc
into
push
ja
push
push
cli
inc
or
notrack
mov
ja
or
bound
xor
and
xor
sbb
add
pop
mov
adc
cld
pop
cmpb
or
ret
pop
mov
jmp
xlat
in
inc
rolb
repnz
out
add
jmp
or
xor
jno
xchg
pusha
push
push
mov
rorl
push
mov
sub
and
iret
std
sbb
push
add
cmpl
nop
jb
sbb
sub
popf
lahf
add
sub
jmp
cmp
sub
scas
add
push
push
adc
das
sbb
mov
xchg
lods
mov
sub
das
inc
jb
xchg
push
sub
xor
mov
push
adc
pop
aad
cltd
inc
in
fnstenv
xchg
adc
xchg
xlat
popa
ret
add
repnz
int
jne
jb
aad
push
lahf
lahf
into
push
test
in
insb
pop
mov
ficompl
ja
or
push
jp
bound
jmp
and
jecxz
loop
lahf
mov
ror
jns
jmp
push
sub
inc
jne
xchg
or
pop
push
push
std
cmp
add
push
popa
pop
xor
rorb
inc
jne
cwtl
adc
pop
push
pushl
jne
inc
scas
mov
pop
neg
lahf
jb
dec
imul
pop
lock
ss
dec
mov
xchg
jne
inc
mov
inc
cmp
add
jmp
dec
push
in
adc
enter
repnz
out
push
and
add
js
sub
out
sbb
pop
or
mov
sti
jl
pop
sub
xchg
loopne
fistpll
mov
add
out
fnsave
add
lods
sbb
clc
pop
subb
cwtl
cmp
daa
lds
movsl
adc
adc
mov
mov
in
or
or
jmp
sbbl
mov
jg
cmp
das
loop
aaa
jg
aaa
xlat
add
mov
adc
inc
pushf
fsubrs
jbe
jo
shlb
shl
jge
and
out
ret
xor
pop
test
jb
dec
cmp
test
sti
adc
push
add
nop
popf
gs
mov
mov
push
in
insl
and
jbe
mov
add
pop
mov
popa
iret
adc
js
clc
aad
insl
inc
pop
mov
sub
mov
lcall
fisttpl
push
mov
adc
inc
insl
repnz
jmp
daa
sub
popa
xchg
filds
push
mov
clc
jmp
shr
rol
neg
jmp
xchg
ja
in
push
mov
dec
push
ja
sarb
mov
hlt
xlat
or
mov
lock
fists
int3
and
ret
adc
daa
cld
jmp
stos
popf
xor
mov
sbb
xchg
mov
jl
dec
mov
push
mov
ror
lock
pop
sub
sub
dec
pop
xor
add
lods
add
inc
xchg
push
add
jae
mov
dec
rol
cmp
push
loop
pusha
inc
xchg
outsb
or
imul
dec
or
xor
mov
adc
ds
jmp
xor
push
cmp
movsl
push
xchg
inc
mov
push
rcll
test
dec
sbb
push
push
mov
or
jno
pop
inc
js
cmpsl
push
mov
clc
out
adc
or
mov
push
cwtl
dec
adc
cmp
sub
std
jmp
sub
bnd
inc
mov
mov
inc
sub
add
add
adc
jae
cmp
push
pusha
inc
or
data16
jecxz
xchg
pop
jmp
fdivl
inc
mov
jge
jns
out
fisubrs
imul
sub
dec
fstl
iret
pop
jo
adc
push
jb
inc
add
push
xor
xchg
add
and
and
sbb
push
mov
sbb
dec
mov
pop
jo
push
dec
xchg
mov
sub
or
jne
test
adc
cmp
inc
push
sub
push
scas
fmul
syscall
or
or
fcomps
dec
xchg
popf
dec
push
xchg
adc
dec
add
aad
push
or
stc
pop
mov
inc
jl
popa
cli
or
imul
fwait
push
lea
repz
mov
ja
dec
xchg
cmp
dec
push
jb
sub
and
mov
xchg
cltd
dec
cmp
adc
aas
or
es
sbb
repnz
xor
aad
sbb
mov
inc
mov
pusha
ja
add
hlt
sbb
add
and
lock
xor
in
add
mov
out
adc
pop
daa
das
or
rcr
mov
pusha
mov
inc
pop
dec
adcb
cs
sbb
dec
push
stos
jno
jmp
dec
loopne
das
sbb
push
push
dec
call
dec
add
xchg
lret
push
xchg
cmp
ss
add
stos
jmp
xchg
cmpl
pop
sub
daa
sub
mov
add
cmp
imul
or
sarb
pop
neg
sub
mov
mov
inc
lods
in
dec
cmpsl
test
push
add
sbb
les
or
pop
pop
fdivrs
cmpsb
stos
rcr
pusha
fildll
jp
dec
mov
cmp
fwait
addr16
xchg
and
shl
shlb
mov
inc
aam
popa
and
aas
out
daa
pop
jge
lods
push
repz
inc
pop
add
scas
add
stos
scas
bound
jl,pt
ja
and
icebp
jecxz
push
push
pop
lds
or
and
ret
adc
cmp
roll
jg
out
jl
scas
sub
data16
xor
out
jg
nop
test
fldenv
cld
inc
leave
lock
sub
push
push
loop
rcl
add
cmp
inc
punpckhbw
rcrl
daa
pusha
fsubrl
or
or
idivb
dec
xor
adc
mov
xor
mov
insl
and
lea
into
imul
push
pop
loopne
notl
movsl
or
sbb
dec
or
lahf
cmovle
push
add
or
xchg
jmp
stc
dec
mov
mov
xchg
jecxz
adc
jl
inc
pop
pop
popf
insl
fisttpl
mov
dec
add
xor
daa
lods
add
in
fadds
bound
pop
push
iret
sub
and
bound
popf
pusha
and
xchg
addb
ljmp
mov
xor
sbb
mov
fiaddl
mov
add
jbe
frstor
clc
in
add
dec
jg
lret
fdivs
jnp
pop
pop
roll
lret
xchg
jae
pop
addb
es
jl
sub
add
jl
out
add
shrl
or
xchg
mov
push
cld
cmp
out
pusha
and
push
dec
pop
push
mov
add
jge
lcall
pop
hlt
mov
imul
or
pop
pop
dec
inc
fimull
inc
push
pop
adc
loop
inc
mov
arpl
cwtl
pop
mov
jle
jmp
or
andb
das
push
pop
jl
jb
xchg
popa
jnp
inc
cmpsb
cmc
pop
pop
add
imul
mov
arpl
into
nopl
ja
and
fistpl
cld
iret
movsb
mov
xchg
mov
sbb
ret
out
es
xor
popl
shlb
shr
stc
enter
movsl
nop
jl
pop
mov
stc
ret
lahf
movsl
ret
and
in
jl
and
shrb
fndisi(8087
pop
cmp
push
push
imul
or
icebp
pop
imul
cmp
xchg
loope
imul
loope
jle
cld
xchg
ret
js
lret
rclb
mov
and
rcrb
sbb
ds
cmp
cwtl
add
out
push
mov
mov
loop
jbe
dec
mov
pop
pusha
loope
and
or
pop
sub
push
jl
jp
dec
out
daa
mov
dec
cmc
scas
xor
mov
mov
fbld
idivl
xchg
add
mov
fistpll
imul
and
std
int3
xor
or
cs
inc
push
cmp
add
jle
inc
push
mov
int
pushf
imul
in
cli
pop
xchg
aad
sbb
iret
fidivrs
mov
xor
xorb
mov
repnz
jmp
mov
pop
fiaddl
ret
pop
dec
sbb
adc
cmc
add
dec
arpl
adc
div
aam
adcb
add
jge
cmp
push
mov
push
mov
sub
mov
sub
jae
cmp
lds
in
cli
jnp
jae
add
imul
push
je
pop
sbbb
cs
xchg
jnp
sbb
test
das
xchg
mov
xchg
orb
lods
sub
test
add
lods
pusha
and
mov
adc
cmp
add
icebp
ja
cmp
lock
adc
in
enter
jnp
add
cwtl
xor
add
daa
xor
jl
add
sub
int3
int3
lds
jae
das
or
mov
popa
daa
push
pop
inc
jp
sub
jge
sub
push
sub
adc
xor
dec
int
lea
mov
pop
ljmp
cmpxchg
mov
cmc
pop
push
popa
add
sti
push
ret
xchg
fcoml
push
mov
cmp
loop
sub
xchg
pusha
adc
test
fistps
push
insb
dec
mov
cmp
cmp
mov
xchg
mov
mov
add
rorb
pop
sbb
mov
mov
aam
add
xorl
aaa
orb
jecxz
in
mov
sbb
out
rolb
or
jnp
add
push
pop
mov
sbb
movl
xor
add
xchg
lods
push
push
dec
mov
aas
cmp
std
aad
shrl
rclb
xchg
fistpll
lods
fdivs
pop
icebp
jnp
mov
in
cmc
mov
sar
ret
xor
in
les
jmp
call
imul
pusha
xchg
iret
push
xchg
pop
mov
test
jecxz
lods
add
push
xchg
jge
add
and
scas
fstps
add
leave
ret
adc
pop
mov
es
aas
push
pop
bound
add
outsl
lock
pop
aas
or
xor
mov
dec
in
jnp
shll
jnp
int3
ffreep
out
out
add
push
ljmp
sbb
inc
popf
clc
jp
add
mov
nop
movsb
enter
mov
lahf
adc
pop
push
pop
das
ret
fildl
push
push
pop
je
ds
inc
xchg
ds
xchg
push
xor
mov
sub
enter
inc
or
fnsave
pop
insb
adc
or
cmp
inc
sbb
xor
lods
in
out
and
out
push
pop
xchg
xlat
xor
mov
add
ja
out
imul
inc
sbb
and
or
jg
sub
sbb
inc
jmp
push
add
cmp
je
adc
loope
test
fcmovnb
inc
sub
sub
loope
jmp
add
pop
lcall
and
mov
add
mov
popa
test
icebp
dec
lock
jecxz
inc
jo
sub
outsl
pop
mov
xor
pop
das
mov
xor
inc
sbb
shr
in
addr16
sti
aam
into
xchg
popa
mov
mov
das
mov
xchg
push
add
push
inc
es
lret
push
sbb
shr
stos
adc
sbb
or
push
fdivr
cmp
sbb
scas
lods
out
inc
pusha
and
mov
or
pop
xor
mov
push
push
cli
ja
je
xor
dec
and
shrb
adc
inc
sahf
jnp
sahf
inc
imul
xchg
mov
shrl
in
or
pop
int
dec
dec
cmp
xor
shl
and
pushf
enter
push
movsl
das
or
pop
or
loopne
clc
idiv
roll
popa
or
mov
jnp
cmpb
pop
push
inc
inc
repnz
add
pop
mov
neg
outsb
mov
jmp
pop
sub
dec
rorb
fwait
mov
mov
ss
lock
in
xor
les
mov
inc
add
jmp
inc
pop
xchg
or
pop
xchg
jmp
xor
push
mov
fidivrl
sub
add
int
sub
fldenv
sbb
push
aam
sub
sahf
icebp
add
fs
dec
rorb
sar
and
mov
cmp
loopne
pop
mov
pop
enter
arpl
fwait
les
ret
dec
je
ja
outsb
movlps
rorl
clc
in
sarl
pop
lret
sub
fadd
jge
stc
jo
cmpsl
imul
push
hlt
adc
jmp
mov
cli
add
popa
jl
sbb
push
dec
pop
stc
dec
shrb
push
pop
pop
pop
scas
pop
test
jne
sbbl
mov
in
test
nop
jno
fnstsw
mov
dec
push
int
pop
pop
jmp
xor
pop
leave
pop
pop
push
pusha
das
insl
adc
test
out
clc
sahf
or
jbe
inc
xchg
jl
je
xorb
lcall
addr16
mov
rolb
dec
or
mov
dec
fnstcw
je
lock
int3
add
xlat
jmp
add
loope
js
dec
cmp
aas
mov
xchg
cvtps2pi
pop
stc
sahf
mov
decl
popf
xchg
sub
jmp
rorl
mov
frstor
add
js
mov
or
shrb
push
fcmovnb
fbld
shlb
sub
and
daa
in
shll
sti
add
and
jmp
mov
cld
test
xor
xchg
or
ds
jbe
jmp
stos
push
outsl
int3
sub
out
and
push
add
sub
or
dec
mov
dec
adc
pop
dec
jo
dec
in
push
sub
pop
mov
cs
push
mov
sub
loope
push
mov
xor
mulb
sbb
imul
std
into
dec
cltd
xchg
pusha
and
inc
sbb
loope
xor
pop
jne
adc
dec
pop
mov
adc
ret
je
cwtl
sbb
adc
jg
divb
add
xchg
xchg
movsl
or
add
hlt
data16
push
adc
dec
mov
or
jge
stos
xchg
sub
pushw
rolb
addr16
xor
stos
mov
or
cmp
aad
pop
jle
push
mov
mov
sub
mov
mov
loop
pop
or
sbb
or
fdivs
test
je
lds
mov
daa
pop
xchg
ret
mov
push
adc
cli
sub
sub
add
push
enter
push
xor
repz
sub
inc
aad
addb
xchg
adc
sub
xchg
push
inc
push
xchg
dec
mov
imul
xlat
ljmp
adc
lock
mov
lahf
addb
cpuid
jno
or
clc
ljmp
imul
mov
dec
hlt
mov
sti
rcll
pusha
xor
pusha
fisttpll
cmc
movb
push
out
dec
add
jo
mov
jb
add
ljmp
test
or
jge
jp
sbb
add
out
lds
mov
shll
inc
push
or
lock
lcall
shlb
mov
mov
imul
out
pop
fdivl
mov
push
jmp
repnz
movsb
popa
sub
sub
in
sbb
push
sbb
out
ret
mov
push
or
push
call
push
xchg
stos
cmpsb
mov
cwtl
ret
xchg
xchg
xchg
inc
dec
scas
mov
push
jmp
out
push
pop
fisubl
adc
push
mul
add
dec
cmpl
inc
fstps
sbb
adc
mul
and
push
or
or
pop
and
test
pop
pop
pop
sub
xchg
inc
rclb
lret
and
into
ljmp
lret
mov
push
cmc
pop
cmp
adc
push
dec
jb
sub
pushf
stos
push
fdivr
pcmpgtd
inc
jmp
mov
cmp
imul
adc
dec
loope
popa
daa
shlb
adc
sbb
pushf
int3
mov
dec
pop
stos
faddl
add
push
pop
inc
inc
negl
loopne
pusha
mov
mov
sub
jecxz
sbb
or
test
popa
subb
xor
call
push
jmp
mov
sub
or
dec
movsl
or
or
push
ret
jmp
repz
push
lret
dec
pop
mov
pop
inc
lahf
add
xorl
scas
push
pusha
idiv
sbb
push
and
dec
cmp
rorl
scas
outsb
pop
movsb
out
jae
jmp
adc
lret
stos
and
imul
adc
iret
sub
xchg
pop
sbb
addl
lea
sub
xchg
add
push
int
add
loop
rorb
imul
and
push
shll
adc
mov
cmc
and
push
xor
add
jge
dec
or
loopw
jge
pop
cwtl
mov
pop
push
mov
daa
jle
add
mov
xor
pop
push
int3
sbbb
jmp
sub
pop
mov
sub
mov
sbb
outsl
ds
xor
pop
add
nop
cltd
orl
popf
push
push
orl
lahf
jmp
jl
das
bound
mov
inc
push
pop
cmp
add
inc
sub
shl
mov
adc
ljmp
mov
pop
loope
cld
ljmp
xchg
je
xor
push
sti
sub
jmp
cld
mov
mov
ja
shr
push
mov
cld
xchg
cmp
in
rorb
lods
clc
mov
mov
adc
das
jae
cmc
xchg
ss
sub
xor
or
pusha
and
mov
push
xchg
push
psrad
aas
push
add
pop
mov
xchg
fwait
cmpsl
xor
loopne
aad
xchg
sar
sti
dec
notb
stc
loop
or
cmp
pop
add
jmp
es
xor
inc
pop
add
mov
pop
pop
push
ret
push
lahf
pop
hlt
fnstenv
cmpb
movsb
ret
push
or
pop
push
sub
filds
add
jmp
push
call
out
in
pop
call
outsb
mov
pushf
mov
push
mov
inc
neg
es
cmp
adc
clc
xorl
or
shl
mov
mov
add
ds
mov
sti
repnz
pop
test
inc
add
outsb
lock
mov
pop
test
dec
add
jl
cltd
ljmp
das
scas
cmp
pop
dec
dec
bound
inc
xchg
or
fs
nop
pop
push
popf
jnp
sbb
jmp
mov
inc
daa
loop
sub
gs
sbb
movsb
inc
faddl
xlat
stos
shll
jl
add
cmovno
inc
repz
lods
adc
sub
testb
sbb
pop
and
and
lret
add
outsb
stos
arpl
loope
adc
add
jmp
add
push
pop
jo
mov
adc
inc
inc
xlat
dec
mov
and
jg
sub
add
mov
pop
outsl
xor
jb
mov
pop
xchg
sarl
loop
pop
add
pop
loope
jge
lds
push
jmp
into
ret
insl
inc
orb
jmp
sub
jnp
lea
push
add
pop
mov
jp
pop
cmp
scas
fistpll
sbb
pusha
pop
xchg
loopne
and
add
push
lds
test
jg
mov
jmp
pop
push
out
or
outsl
xchg
adcb
jbe
roll
fs
leave
add
pop
push
sub
or
xor
lret
rolb
dec
sbb
mov
out
mov
fsubs
adc
jbe
xor
cmp
imul
mov
jmp
cmp
fcomps
and
cmpb
rcll
imul
jae
mov
xor
repz
pusha
movsb
lret
pop
ja
add
or
ljmp
and
add
and
das
add
dec
rolb
add
and
lcall
xchg
add
and
icebp
mov
lret
xchg
add
jnp
pop
aam
stos
push
ret
jns
imul
jb
cmc
push
xor
add
mov
pop
sarb
out
dec
or
jmp
xor
shr
das
push
shll
loopne
ja
cmpsl
pop
jae
adc
push
pop
andl
and
loop
js
clc
inc
cmovg
popa
andl
daa
xchg
inc
jno
sub
lret
jmp
fisttps
repz
roll
jbe
icebp
pop
jnp
xor
sti
jmp
mov
imul
mov
pop
nop
in
inc
mov
adc
add
push
clc
xchg
addb
xchg
in
sbb
xor
sub
nop
ss
push
cld
mov
sbbl
test
sbb
and
pop
pop
pusha
dec
cwtl
inc
pop
icebp
push
dec
cmp
mov
cli
data16
imul
incl
push
mov
mov
lods
imul
cld
xchg
adc
mov
enter
jb
imul
xor
fisttpl
fiaddl
xor
or
mov
mov
mov
cmp
push
jmp
pop
int
aas
js
mov
cmp
das
add
mov
pop
not
pop
shl
lret
inc
mov
push
dec
push
add
mov
xchg
repnz
jle
jle
nop
andl
push
add
lock
adc
push
lds
or
int
jmp
sbb
push
fisubrs
push
push
xchg
jmp
push
push
sbb
addr16
pop
lock
out
add
fnstsw
daa
hlt
add
push
push
adc
xor
mov
add
sub
pop
mov
test
test
cmp
push
add
pop
sub
icebp
inc
adc
pop
and
pusha
and
pop
add
push
out
pop
fdivrl
sub
cmp
mov
push
stc
subb
lds
negl
rcll
ds
push
fcomip
sub
cmp
inc
das
push
jle
cli
push
push
fisubs
adc
push
mov
sub
negl
pop
jnp
dec
hlt
and
imul
dec
mov
or
notl
pop
fldcw
das
les
js
jmp
cltd
pusha
sub
mov
mov
icebp
sub
dec
das
pop
add
and
pop
shrb
add
jmp
leave
adc
sbb
shrb
mov
inc
mov
push
add
and
or
adc
pop
nop
mov
inc
push
mov
out
fs
pop
cmc
jo
xchg
jbe
js
mov
ret
aas
dec
repnz
xchg
pop
lods
sahf
das
jge
or
or
adc
scas
cmp
add
mov
ret
add
pop
dec
outsb
mov
push
cli
push
lds
push
inc
loope
mov
inc
sbb
jg
jae
pop
call
adc
cmp
hlt
shll
rcll
cmpsl
std
cmp
rorb
inc
shrl
lods
fisubrs
push
lret
sti
scas
fcoml
and
test
xor
inc
ret
jmp
push
call
push
aam
sbb
std
ds
testb
or
pop
push
push
rorl
or
jg
or
mov
cmp
pusha
pop
cli
and
loop
add
inc
jnp
add
rclb
pop
dec
push
cmp
or
shlb
jne
imul
or
shll
sub
and
xor
adc
cmp
push
in
movsl
test
mov
sub
inc
mov
enter
je
out
sbb
jne
jmp
testl
dec
in
lds
inc
pop
inc
push
and
cmp
sbb
sbb
data16
mov
jmp
sbb
mov
add
subb
pop
std
or
das
cmpsl
ja
jp
jb
lret
add
mov
pop
sub
out
mov
idivl
add
add
stos
mov
movsb
mov
mov
push
ficompl
sar
or
pop
push
repz
jg
cli
jmp
mov
inc
lods
or
stc
push
das
js
lret
andl
or
push
int
xor
push
andl
test
inc
pop
push
aas
sub
cwtl
adc
push
mov
jl
out
addr16
pop
or
xor
or
into
inc
xor
sbb
bound
not
adc
cltd
mov
addr16
enter
pop
mov
mov
lods
addl
filds
out
ds
fstl
hlt
mov
ss
cmp
fwait
jne
testl
add
push
add
mov
pop
jae
xchg
mov
mov
push
mov
dec
xor
in
loopne
dec
std
jns
sub
pop
mov
outsb
pop
nop
xchg
lahf
stos
mov
pop
stos
adc
dec
loope
mov
sub
xchg
cwtl
testb
je
pop
push
das
adc
rcr
repz
fcomps
mov
jo
push
or
mov
dec
and
xor
outsb
xor
dec
push
sub
push
das
leave
out
jle
test
jnp
mov
jmp
push
orb
add
xlat
jb
and
dec
push
mov
or
fistps
fstps
lahf
mov
dec
push
pop
addb
gs
push
add
inc
ss
ret
xchg
outsl
inc
inc
lods
bound
pop
std
inc
rolb
add
pop
add
mov
notb
in
loopne
stos
pushf
scas
add
mov
testl
jecxz
cmp
push
imul
cld
and
inc
scas
lea
aad
mov
push
and
ds
aam
stos
jae
mov
fldl
or
fisubrs
and
int3
outsb
mov
xchg
out
hlt
fistl
int
xchg
adc
stos
mov
sbb
mov
push
jmp
mov
mov
stos
cmp
push
lret
bound
int
shl
iret
inc
addr16
sbb
pop
testl
xor
pop
mov
divb
add
dec
mov
rcll
add
or
pop
xchg
fldl
xor
pushf
push
pop
ss
rclb
push
pop
fldl
xor
leave
xchg
int
dec
lock
cli
or
jmp
mov
jno
adc
inc
out
xchg
divb
aam
cmpsb
inc
or
add
fwait
push
dec
or
jno
and
dec
add
push
sbb
cmp
inc
add
jmp
rcrl
or
xor
repz
pop
mov
dec
outsb
push
add
and
pop
dec
prefetchnta
js
sub
mov
mov
fwait
and
jmp
int3
adc
les
mov
push
fistpll
or
mov
push
clc
ljmp
or
test
lods
cli
pop
adc
pop
push
loop
sarl
push
add
pop
fs
fidivl
outsl
jmp
or
iret
push
lret
testb
pop
jno
scas
pop
cwtl
xchg
pushf
shll
jge
mov
jmp
icebp
pop
mov
push
xor
inc
sub
pop
xchg
jns
push
icebp
test
cld
add
adc
stos
sbb
pop
and
push
add
xor
stos
inc
add
ja
test
pop
push
dec
add
add
cmp
cld
fisttpll
inc
add
lods
pop
fxch
inc
push
xlat
mov
push
adc
sbb
or
mov
xchg
or
mov
xor
outsb
mov
cmp
icebp
and
xlat
mov
and
add
data16
leave
xchg
stos
mov
add
pop
orb
pop
xor
addl
mov
adc
les
inc
cwtl
or
pop
or
cltd
mov
sbb
mov
mov
mov
add
xor
sbb
leave
scas
inc
or
jbe
inc
fsub
test
add
pusha
lret
in
mov
mov
shrl
adc
ds
push
cltd
mov
movsl
sbb
xor
dec
lock
xchg
fadds
pand
lret
mov
mov
lock
orl
in
cmp
adc
xchg
dec
addr16
clc
xchg
lods
jp
jle
in
inc
pop
mov
mov
fs
mov
scas
and
out
jo
rcrl
loopne
mov
cs
xchg
addl
test
repz
push
mov
scas
insb
test
push
fs
inc
push
xor
cmc
dec
pop
in
inc
lock
jmp
sbb
jecxz
insb
dec
sbb
clc
inc
pusha
pop
cli
jl
stos
nop
push
or
or
mov
test
das
out
gs
mov
icebp
ret
iret
xchg
out
xchg
mov
stos
push
lods
fdivrs
inc
cwtl
and
adc
xor
mov
push
pop
ror
jmp
add
push
push
inc
push
push
pop
das
insb
pop
rclb
fwait
add
dec
jle
and
in
push
add
pop
jae
sbb
fnstcw
add
sbb
dec
icebp
inc
aas
std
xor
pop
mov
out
push
add
push
pop
jmp
inc
iret
adc
pop
and
fisttpll
or
lret
add
and
xchg
lods
dec
mov
push
gs
sbbl
arpl
loopne
or
cmp
mov
xchg
cmp
push
add
mov
int3
addb
sbb
in
fwait
jmp
fstp
in
into
push
test
mov
sub
sbb
add
cmp
loope
adc
pop
jmp
fcmovnbe
mov
pop
mov
call
sti
cmpsb
inc
adc
movsb
mov
call
out
je
shlb
pop
das
mov
lahf
js
add
stos
sbb
mov
mov
pop
dec
sarl
mov
shlb
inc
mov
mov
mov
jmp
mov
ret
push
repnz
leave
fs
push
jl
shrl
dec
or
cmp
jae
sub
pop
xchg
pop
xor
push
imul
lret
movsl
lret
xlat
in
xor
sbb
sub
jae
mov
adc
shlb
inc
sub
ret
jmp
es
jbe
jmp
cwtl
add
inc
pop
mov
dec
push
mov
addl
pop
or
adc
or
jmp
cmc
mov
pop
inc
cmp
lret
pop
push
decb
mov
pop
neg
add
loopne
sarb
in
sti
mov
sub
fsubrs
pop
outsb
fnstenv
jge
test
jbe
into
addr16
pop
add
jb
pop
shl
add
xor
adc
scas
bound
sub
fstp
xchg
mov
xchg
jecxz
cmp
push
xchg
cmp
aaa
subl
adc
ljmp
mov
es
popf
mov
add
cltd
or
dec
and
jo
loope
lds
fistpl
jae
mov
in
or
inc
and
pop
pop
popa
cli
ret
add
jne
jbe
ljmp
jp
cs
adc
adc
fistpl
lods
add
popl
push
pop
mov
in
pop
xor
push
insl
jge
into
xchg
clc
mov
lock
lea
sbb
cs
out
mov
add
sub
and
ljmp
roll
cwtl
dec
shl
dec
std
pop
mov
and
cmp
mov
xchg
dec
inc
outsb
cmpsl
daa
sub
inc
xchg
lahf
mov
in
xchg
xlat
add
pop
jnp
sub
aad
repnz
dec
shrl
mov
cltd
lahf
pop
mov
out
inc
and
xlat
fdiv
sub
das
test
cmpb
rorb
push
cmp
daa
pop
aam
jp
push
shrl
das
sub
sbb
dec
push
dec
sub
into
jmp
xor
mov
out
lahf
repnz
xchg
sub
out
popf
pop
call
enter
jns
adc
fidivrl
ljmp
jo
xlat
push
jnp
aad
pop
or
xchg
dec
adc
jecxz
add
imul
orl
into
psubsw
jnp
mov
mov
setb
xchg
pop
and
out
pop
push
ds
inc
xchg
mov
or
lret
fidivrl
sbb
pop
push
push
or
mov
int3
mov
push
fnsave
jbe
pop
push
and
or
jmp
ret
mov
jo
mov
neg
das
jmp
les
or
into
xor
loope
pop
xchg
mov
incl
or
push
push
aaa
mov
ret
jmp
neg
add
ds
sbb
xchg
xchg
aad
mov
pop
xor
or
sub
jle
test
nop
pop
shll
push
sub
addl
jmp
xor
add
sub
test
or
and
mov
dec
mov
jle
loopne
les
lahf
mov
mov
inc
xor
lcall
or
dec
xor
push
add
add
jnp
jg
fdivrs
lret
mov
jbe
adc
icebp
mov
decl
std
pop
inc
or
fisttps
jmp
in
fisubrs
adc
push
mov
mov
rcll
push
xchg
outsb
fadd
sbb
dec
mov
daa
adcb
push
mov
adc
sub
addb
lock
mov
fs
mov
roll
jecxz
and
add
popf
ja
in
rorl
xlat
out
jg
sbb
das
xor
pop
inc
mov
and
pop
mov
jle
jp
jg
pop
push
adc
movl
pop
mov
and
cmpsb
orb
stc
inc
bound
aam
out
jl
ljmp
imul
sti
cmp
jmp
stos
into
push
dec
pop
add
jmp
jmp
nop
out
das
or
out
dec
add
insl
push
aas
add
call
xor
jmp
mov
daa
scas
adc
roll
sub
inc
and
or
mull
xor
shlb
call
mov
icebp
add
push
and
jnp
push
xchg
das
mov
inc
add
sub
jmp
mov
xor
adc
stos
xor
aaa
sub
jae
inc
pop
inc
or
into
popa
dec
mov
and
cmp
or
pop
jb
out
xor
cmpsb
cmp
icebp
test
rol
pushf
push
xchg
pop
js
pop
inc
or
or
fucom
sbb
and
adc
and
leave
mov
mov
mov
cld
imul
xchg
hlt
or
jge
les
jmp
jecxz
or
addb
push
int3
add
out
lahf
and
sub
fs
xor
fimull
dec
xchg
pushl
push
add
add
and
shrb
sti
faddl
fbstp
call
cmp
cmc
enter
fistpll
sbb
sub
leave
setne
mov
and
mov
enter
mov
orl
or
inc
xchg
xchg
int
lock
push
imul
inc
int
mov
mov
mov
inc
inc
in
or
jmp
add
lds
xchg
or
push
jmp
inc
sub
and
js
adc
sub
roll
dec
add
fists
add
ret
ss
call
lahf
fsubs
mov
inc
adc
xor
jmp
outsl
movsb
cmpsl
cld
pop
push
inc
mov
add
jne
add
mov
inc
loop
push
mov
jge
xor
lahf
add
hlt
xor
or
int
in
int3
xor
jbe
stc
push
outsb
cld
lods
jp
jne
mull
xlat
inc
pusha
and
inc
data16
clc
xchg
mov
stos
mov
and
shlb
xor
jmp
rcl
daa
inc
inc
and
in
repz
dec
dec
loopne
jmp
jb
movsl
jmp
popf
sbb
adc
pop
xor
lcall
xchg
sbb
les
popw
dec
push
mov
push
cltd
xchg
add
sarl
clc
stos
push
fsubrl
adc
add
mov
mov
enter
lcall
cld
rcrb
popf
rolb
jle
ret
ljmp
faddl
xor
push
mov
sub
popf
push
lock
add
pop
jmp
mov
addl
adc
xlat
adc
js
lahf
inc
ror
and
sub
mov
cmp
lds
sbb
and
jg
jmp
mov
or
sahf
cmc
push
mov
adc
push
insb
dec
loop
in
and
add
and
mov
pop
pop
pushf
in
lods
imul
add
js
rcrl
cmc
push
pop
mov
inc
adc
add
add
scas
cmpsl
cmc
push
pop
pusha
fcompl
not
mov
pop
inc
repnz
mov
popa
and
adc
pop
call
push
lahf
movlps
imul
mov
out
je
scas
fdivr
inc
arpl
mov
out
mov
and
mov
cmp
push
in
xchg
xor
xor
xchg
mov
dec
ds
sub
insl
jbe
inc
aam
mov
adcb
adc
aas
jno
out
dec
pop
sbbb
jbe
xor
pop
pop
xlat
cmc
mov
pop
ds
inc
movsb
jns
bound
jmp
dec
sub
mov
mov
aaa
sub
xor
call
jmp
fucomp
mov
xchg
insb
cmp
push
pop
sbb
sbb
div
mov
dec
pop
xor
or
add
lcall
repnz
pop
mov
inc
aas
in
add
jno
jmp
mov
pop
sbb
sub
daa
dec
ret
je
jbe
dec
inc
xor
lret
jmp
sbb
mov
xchg
sarl
mov
sbb
mulb
sub
push
mov
xlat
inc
adc
mov
add
iret
push
cwtl
add
daa
cld
scas
shr
dec
imul
cmp
dec
test
mov
inc
mov
sbb
ret
pusha
leave
pop
mov
jno
jge
xchg
movsb
mov
inc
das
test
mov
add
xor
adc
adc
jmp
cmpsl
jl
scas
mov
icebp
lea
mov
mov
mov
das
loope
xchg
into
pop
rorl
cmp
adc
pushf
ret
pop
mov
ja
jae
lds
sbb
push
clc
out
sub
dec
push
adc
sar
loop
subb
stc
ret
dec
add
jmp
repz
and
jg
ffree
xchg
dec
mov
test
pop
mov
mov
jno
insb
addr16
mov
or
lods
xchg
testb
arpl
and
cmp
imul
add
cmc
add
pop
push
movsl
fadds
or
into
xchg
je
scas
inc
xlat
adc
in
push
sub
push
push
iret
leave
cmpsb
or
ficoms
or
dec
decb
dec
add
push
mov
xlat
movsl
or
shlb
lock
mov
dec
dec
jne
pop
or
fmul
das
mov
pop
int
mov
pop
push
jmp
imul
mov
shll
mov
push
hlt
and
nop
push
femms
push
jo
gs
pop
pop
mov
cmp
loope
jae
jno
xor
dec
rcll
push
xchg
pop
popf
sub
ja
addb
jle
push
push
add
mull
mov
aaa
jmp
aam
into
jo
pushf
arpl
call
mov
mov
jg
and
add
inc
divb
gs
andl
add
enter
add
adc
or
test
lock
outsl
pop
imul
push
imul
das
ror
pop
push
xor
out
push
push
imul
add
sahf
pop
ds
xlat
pop
test
or
sub
push
in
push
pop
jecxz
xchg
xor
xchg
sbb
mov
mov
sbb
or
dec
mov
mov
test
push
es
aaa
pop
push
cmpsb
pop
cmc
push
add
lock
xor
inc
sarl
pop
mov
sbb
adc
xor
dec
mul
andl
pop
jmp
es
subb
sub
add
inc
ja
pop
mov
cmc
sahf
xchg
pop
push
mov
jmp
mov
scas
or
pop
rolb
push
or
push
aam
iret
mov
cmp
mov
pop
push
fimuls
inc
push
lahf
sub
insl
jmp
sbb
out
in
adc
xchg
xchg
and
orl
pusha
lock
mov
dec
jmp
mov
ljmp
mov
sbb
out
mov
daa
push
ret
out
mov
out
jecxz
xchg
cli
xor
fidivl
push
inc
lahf
rep
push
jmp
dec
enter
imul
outsl
or
push
and
aad
ljmp
push
sub
mov
add
int3
xchg
cmc
jp
or
add
data16
add
cmc
pusha
fcoml
ja
jno
cmp
stos
mov
sbb
fadd
jmp
jmp
mov
enter
dec
xchg
into
add
add
lock
pusha
mov
and
icebp
out
mov
test
in
js
push
mov
add
lods
lahf
push
mov
out
clc
incl
push
out
int
inc
adc
outsb
pop
add
adc
mov
ret
and
push
sbb
data16
cmpl
cs
pop
loope
loopne
sbb
xchg
xor
aas
call
movsl
test
shr
dec
scas
cmp
inc
add
add
sbb
sub
cmpb
movsl
les
cmp
push
out
or
and
add
in
mov
aad
insb
and
jge
push
inc
xchg
out
popa
out
xlat
sti
push
fmuls
aam
stos
mov
xchg
clc
xor
jmp
imul
fldcw
inc
fiadds
or
jmp
daa
dec
fstpl
add
or
sbb
jge
push
xchg
jo
push
lods
adc
test
adc
mov
pop
xor
push
loopne
cmc
mov
sub
mov
incb
mov
jmp
inc
inc
ret
push
dec
sarl
mov
mov
mov
aam
jmp
push
or
outsl
push
add
scas
mov
gs
pop
idiv
adc
aas
push
mov
pop
xchg
loopnew
or
rcrl
mov
je
andl
scas
mulb
push
sbb
dec
adc
in
out
cmp
jge
fimull
dec
ja
cmp
scas
movsl
mov
mov
add
jnp
add
push
pusha
insl
inc
out
xor
hlt
fmulp
jmp
outsb
jl
cmp
in
and
mov
fxch
or
mov
cwtl
dec
push
or
lock
sub
jmp
or
jg
mov
adc
jmp
add
sarl
stc
xchg
add
add
jg
sbbl
rcr
popa
daa
xor
gs
or
dec
shll
inc
mov
xchg
out
sbb
lcall
mov
add
push
inc
and
jmp
sahf
sti
push
sub
cmp
and
dec
xor
jns
out
mov
and
stos
push
push
pop
add
add
cmp
xchg
sarb
add
pop
add
ret
push
stos
adc
sub
xor
adc
dec
jmp
fistps
repz
pop
mov
loope
stc
sub
dec
or
mov
add
mov
scas
add
add
out
sub
and
jg
xor
xchg
icebp
push
dec
mov
js
pop
sub
test
pop
daa
fidivl
inc
push
jne
movsb
imul
lods
pop
pop
dec
divb
and
push
scas
leave
push
ljmp
ss
into
mov
roll
testb
dec
lods
push
les
je
or
mov
jge
clc
add
into
or
popf
mov
loop
fdivs
mov
pushl
add
mov
in
xor
xchg
xor
add
dec
sub
out
or
and
adc
xor
pop
sub
mov
sub
add
push
lock
or
jmp
enter
addr16
pusha
movsb
test
sub
pusha
push
push
popa
sub
add
jp
mov
adc
div
jo
add
sub
inc
leave
mulb
mov
filds
mov
orl
mov
es
adc
mov
pop
aas
dec
pop
dec
pop
cmp
jo
add
jl
inc
cmpsl
mov
inc
pop
bound
mov
mov
or
fisttps
inc
dec
push
mov
popa
cltd
cs
mov
lret
rorl
aam
stos
mov
push
sub
out
in
xor
xchg
or
sti
lea
std
or
mov
cmp
xor
cvtps2pi
sbb
xor
rorb
call
or
jecxz
repz
lock
adc
cmpsl
mov
mov
cs
stc
cmp
lret
pop
mov
rorl
adc
pop
pop
push
pop
dec
daa
pop
lahf
jo
sub
push
fiaddl
lds
incl
pop
mov
das
mov
test
fs
cltd
mov
stc
add
pop
adc
loop
push
mov
imul
xchg
daa
inc
push
inc
push
add
ret
add
xorl
mov
inc
jmp
shlb
ret
sub
xchg
xor
pop
out
mov
mov
jns
jg
push
push
mov
mov
sub
inc
rclb
cld
call
mov
xchg
pop
adc
daa
sub
and
lds
popf
inc
pop
mov
xor
jmp
inc
dec
aam
hlt
popf
pop
add
inc
js
cmp
inc
xchg
pushf
sub
mov
rolb
clc
pop
add
lock
popf
add
dec
jns
pop
push
sub
xor
pop
inc
aad
push
dec
adc
or
gs
fwait
je
dec
mov
test
mov
cli
adc
mov
ret
pop
data16
push
mov
fdivl
out
repnz
push
in
jnp
or
mov
pop
je
imul
and
sbb
and
push
inc
mov
jmp
cs
subb
pop
scas
add
aaa
or
add
lods
outsl
sub
xor
pop
inc
cmp
das
sarb
repnz
pop
mov
or
icebp
scas
mov
fs
xorl
push
push
sub
and
sbb
add
out
xchg
add
roll
jo
lahf
mov
ret
mov
pop
jmp
movsb
dec
jl
mov
ljmp
mov
jle
add
addl
aas
jbe
push
and
jne
je
lahf
or
add
ss
xor
add
pop
subb
push
ljmp
xchg
push
dec
iret
sbb
out
mov
xor
test
or
sbb
inc
add
out
add
int3
add
iret
repnz
push
mov
push
in
sahf
add
add
int
das
movl
cltd
mov
pop
push
mov
sar
into
shl
adc
int3
out
nop
mov
lret
ret
pushw
xchg
inc
mov
cmp
pop
or
mov
pop
cs
ljmp
lcall
add
out
js
faddl
inc
outsl
lret
or
lea
sub
add
xor
mov
js
mov
xchg
mov
adc
adc
sbb
sub
lea
testl
or
enter
pushf
int3
aaa
mov
adc
hlt
or
xor
sub
jno
inc
sub
imul
jl
pushf
jge
dec
aas
mov
outsb
sub
cltd
inc
dec
mov
and
push
fisttps
je
push
mov
jl
or
imul
push
leave
adc
and
inc
pop
mov
mov
mov
adc
sub
nop
es
arpl
sahf
dec
mov
jne
push
or
push
ss
jp
sbb
cmp
mov
fstpl
out
add
adc
sub
scas
mov
out
sub
mov
pop
or
adc
jmp
dec
xchg
mov
cs
dec
inc
stc
add
xchg
bnd
mov
mov
sahf
paddd
in
jae
movsl
bound
int
sbb
dec
cld
repz
xor
dec
das
xchg
out
cltd
inc
jl
cli
pop
aam
mov
jmp
xor
dec
mov
ja
movsl
jae
xchg
push
js
cmp
jbe
mov
dec
pop
pop
pop
fistpll
mov
or
jb
adc
rorl
insb
mov
xlat
daa
in
jnp
push
mov
jg
mov
inc
lret
pusha
insb
lods
xchg
mov
pop
out
lcall
loopne
jge
into
icebp
xchg
ja
cmp
xor
es
shll
mull
rcl
mov
sub
push
mov
stos
les
sub
push
mov
testb
push
push
fnstenv
into
dec
push
out
lret
testl
imul
sti
mov
add
pop
dec
add
mov
add
pop
fistps
xor
xor
dec
pop
jo
lret
mov
mul
mov
ret
sti
cmpsb
mov
sub
push
pop
testb
sub
xchg
out
push
add
jo
fistl
inc
shrl
add
mov
jae
fistpll
dec
into
pop
dec
jmp
pop
cltd
add
xlat
inc
lret
dec
pop
xchg
ds
popf
outsb
hlt
push
mov
add
adc
scas
imulb
pop
bound
out
lret
xlat
cli
ljmp
push
adc
push
pop
xor
out
popa
pop
pop
filds
or
inc
clc
jb
jo
mov
mov
addl
fildl
cmp
cmpsl
cmc
fsubr
xorl
lea
xlat
out
es
mov
movsb
pop
ja
xor
int3
adc
mov
cmc
and
mov
out
mov
pop
add
fs
testb
aad
outsb
sarl
add
xchg
not
cmpb
adc
insb
scas
dec
add
cltd
inc
sbb
sub
or
int3
mov
sub
sub
mov
jge
mov
lret
mov
dec
and
loope
jne
pusha
xchg
inc
cli
jae
sti
mov
sub
cmp
xorl
cmpb
nop
pusha
imull
mov
mov
push
outsl
enter
or
shrl
or
xor
pop
or
pop
xchg
jno
lods
mov
movsl
sub
bound
fists
cwtl
push
mov
and
lret
or
mov
je
pop
test
scas
add
mov
leave
int
fcomps
dec
lret
cmp
pop
icebp
imul
lret
adc
add
loop
pop
cld
roll
pop
pop
fcos
cmp
add
mov
pop
xor
ficompl
addl
imul
add
jmp
mov
lret
sub
out
lods
or
or
pop
scas
hlt
test
add
lret
hlt
insb
or
xchg
pop
ret
mov
sti
adc
daa
pop
inc
rorb
inc
xchg
rol
out
lahf
test
shr
jo
repnz
aaa
xor
push
scas
pop
push
xor
daa
in
dec
cld
adc
or
xor
scas
mov
dec
pop
dec
gs
test
pop
push
jb
pop
dec
jae
push
xchg
ljmp
aaa
sbb
loopne
push
mov
sub
test
xchg
loopne
xchg
mov
rcrl
pushf
push
push
ret
into
push
daa
jge
in
mov
sub
pop
movsb
and
mov
ljmp
sbb
test
sub
mov
or
lret
out
jp
dec
out
xchg
or
frstor
cmpsl
popa
les
push
lea
add
pop
pop
fisubl
sti
add
add
sub
ja
repnz
push
out
push
mov
adc
jp
das
adc
into
add
mov
pushl
test
mov
pop
xor
sbbl
jle
test
pop
sub
gs
jne
push
bound
ja
fsubl
push
aas
xchg
imul
jp
mov
add
call
mov
fistl
inc
sbb
pushw
jmp
in
xorl
push
jg
jl
or
push
fisubs
inc
push
jns
xor
fs
pop
push
xor
push
cs
jecxz
and
nop
push
add
rorl
add
add
jno
add
lcall
outsb
add
and
lock
or
mov
lahf
pusha
cmp
ss
shrb
push
rol
push
data16
out
enter
shrb
mov
ret
push
out
or
sarb
xchg
lret
int3
sbb
fldl2t
xchg
add
or
inc
lcall
inc
loop
cmp
mov
xor
outsb
inc
dec
xchg
push
or
xchg
dec
test
aaa
incl
cmp
mov
add
dec
xchg
divl
add
xor
shlb
pop
sbb
outsb
mov
mov
mov
sahf
adc
in
xchg
sbb
sub
sub
sahf
repnz
mov
insb
sbb
es
mov
xorl
rclb
xlat
mov
xchg
and
mov
push
mov
push
mov
popa
and
adc
js
add
imul
pop
sbb
mov
aas
mov
or
xchg
mov
cmp
pop
xchg
pop
inc
xor
mulb
movsb
adc
cmp
cwtl
or
push
mov
cmpps
repnz
popf
or
stc
push
outsl
test
mov
add
add
xlat
jg
mov
out
pushf
push
mov
popa
inc
cmp
mulb
clc
test
mov
test
adc
mov
jge
ret
cmp
adc
xchg
jg
pop
mov
push
mov
rol
push
and
inc
pop
adc
cld
fstpl
pop
inc
pop
insl
add
pop
fsubl
sahf
outsb
mov
or
mov
push
in
mov
movsb
in
std
pop
negb
enter
push
inc
adc
push
and
push
push
sub
mov
mov
scas
cltd
mov
cld
mov
jne
push
xorb
push
mov
mov
push
or
pop
sub
mov
jmp
call
test
xchg
add
mov
pop
scas
dec
std
push
das
daa
ja
test
outsl
sbb
movsb
cmp
push
sbb
pop
sub
int
and
push
bound
push
js
lahf
je
js
dec
leave
or
push
ret
mov
pop
or
popf
dec
scas
mov
popa
cmp
push
fwait
and
mov
and
mov
aas
xor
movsb
cmp
and
xorb
shl
cmpb
push
mov
cmp
or
add
dec
mov
scas
rorl
mov
pop
ss
insl
mov
add
jne
jno
neg
aam
add
pop
int
and
leave
mov
push
and
inc
in
pop
shlb
cs
inc
popf
xlat
and
divb
mov
pop
push
lcall
icebp
adc
dec
mov
adc
cmp
dec
subb
pop
add
jmp
out
mov
or
sub
jno
ljmp
adc
cmp
movsl
sti
mov
pop
mov
ret
enter
repnz
push
aam
push
fnstsw
or
push
xor
in
inc
mov
xor
xchg
inc
inc
jo
int
jno
pop
mov
sbb
or
mov
mov
mov
pop
pop
bound
push
call
aas
or
adc
dec
es
xchg
xor
dec
push
das
sub
into
int3
sub
jb
mov
inc
push
outsb
cmp
sarl
pop
or
fbld
cmc
inc
adc
dec
sar
mov
popf
aas
stos
inc
xchg
xor
push
daa
adc
jo
push
shl
mov
sub
ficoml
or
imul
add
jmp
shrl
mov
es
cmpsl
fisttps
xchg
add
or
ds
repz
inc
xchg
popf
pop
ja
xchg
sub
xchg
incl
rol
add
pop
xor
mov
ret
push
adc
sbb
mov
dec
cmp
add
dec
shr
add
push
sub
fimuls
ja
pusha
mov
cmp
pop
sub
add
mov
xchg
rorb
or
push
xorb
fldl
mov
pop
or
or
jmp
outsl
pop
cmpsb
in
adc
popf
test
call
add
aam
dec
mov
inc
dec
not
nop
jno
cli
jns
inc
test
lods
nop
dec
stos
sub
dec
cli
mov
lods
aad
inc
jg,pn
adc
test
xor
or
xchg
loopne
xor
pop
and
cli
cmpsb
mov
mov
loopne
lahf
adc
inc
mov
mov
jbe
sub
adc
repnz
sub
and
add
lds
push
pop
cmp
addr16
fsubrl
lds
leave
and
daa
test
add
xor
cmp
sub
cltd
push
push
add
push
pusha
js
fs
pushf
mov
sti
call
push
dec
sub
mov
jle
jmp
movsb
or
push
inc
xchg
sbb
inc
in
xor
and
test
lahf
xchg
or
jmp
js
mov
inc
pop
loopne
les
xchg
lods
xchg
adc
cld
mov
xor
pop
or
loopne
and
jmp
stc
fsubl
hlt
ret
push
pop
xor
stc
pop
call
pop
jo
add
xchg
popf
ja
test
sub
cmpsb
pop
outsb
pcmpeqw
out
orb
pusha
outsb
fisttps
nop
xchg
add
aad
flds
test
nop
cwtl
and
push
pop
fs
out
mov
adc
je
xlat
out
sbbl
fucom
and
int3
dec
scas
test
scas
icebp
mov
adc
jge
mov
sub
push
pusha
jns
outsl
sub
aas
scas
fildl
mov
inc
jne
cs
movsl
sbb
out
sbb
sbb
inc
jmp
rorb
fsts
jo
cltd
jmp
xchg
or
into
and
xor
push
adc
push
or
pop
sbb
popaw
jp
dec
or
sti
fadds
test
push
mov
sub
add
or
leave
mov
fs
and
or
stc
push
shll
push
push
pop
dec
gs
push
jmp
and
jg
jmp
or
shll
sbb
dec
jg
push
sti
or
aas
mov
testb
jle
and
mov
andl
add
xor
pop
popa
inc
in
or
cs
cmp
pop
pop
cmc
mov
or
xor
or
dec
and
mov
rolb
jmp
jae
test
gs
mov
loopne
and
jg
xor
sub
movsb
push
and
and
jp
imul
dec
jbe
add
sub
sbb
cmpsb
fnstenv
add
clc
add
not
sar
imul
add
adc
std
push
jmp
shl
mov
push
test
mov
or
imul
je
jl
or
or
xor
loop
movsb
test
adc
stos
cmpsb
repnz
xor
popa
lds
xor
in
jns
adc
jmp
shr
lea
mov
ljmp
andb
outsl
cs
das
or
jg
jnp
jmp
cld
lcall
aaa
imul
loopne
jmp
cs
sbb
push
ret
mov
incb
mov
cltd
mov
ds
push
cltd
sub
adc
inc
vpaddq
adc
add
je
jl
mov
fmulp
push
mov
xchg
clc
pop
add
xor
mov
and
aam
sub
rcrl
lods
push
jp
sub
xor
and
shll
mov
mov
shl
addl
pop
jno
push
inc
in
cmc
jmp
sbb
repz
cmp
pop
pusha
mov
imul
jne
mov
mov
jmp
stos
sub
je
mov
mov
pushf
xchg
mov
sub
imul
cmpsl
fidivl
pop
mov
sub
add
fldenvs
jmp
popa
out
inc
ret
test
fmul
roll
push
into
mov
cmp
or
push
adcl
test
lea
ds
jo
adc
ret
jne
sbb
gs
pop
add
sahf
pop
js
jmp
iret
test
pop
mov
push
fldpi
shlb
jne
cltd
sub
and
jle
lret
iret
mov
cmp
sub
cmp
fisubrs
into
test
adc
sub
sti
js
out
jp
jns
daa
add
mov
jmp
or
dec
mov
add
pop
xor
std
out
add
testl
jmp
push
in
stc
adc
loop
or
mov
adcb
adc
inc
hlt
das
mov
xchg
xchg
inc
andl
pop
in
jp
xor
pop
out
les
decb
lret
cltd
push
add
repz
add
lds
je
ljmp
add
cmp
cmp
das
adc
jl
in
push
sub
dec
xor
adc
xchg
mov
adc
rcr
test
inc
roll
mov
bound
inc
push
add
inc
daa
pop
jbe
jnp
dec
data16
xor
jecxz
add
pop
mov
rcrb
or
lcall
in
and
ljmp
je
xchg
jl
les
out
pop
sub
mov
movb
cwtl
sub
mov
mov
add
cmp
aaa
or
aas
scas
sbb
inc
movsb
shl
lds
and
push
jmp
sbb
scas
lahf
mov
loop
gs
ss
shl
daa
pop
inc
shll
leave
and
cwtl
test
mov
enter
adc
xchg
stc
push
sub
push
push
movhps
or
xchg
or
adc
outsb
or
les
out
dec
jns
test
mov
cmp
xor
ret
mov
add
push
out
add
push
xor
andl
lods
add
clc
push
loope,pt
cmp
hlt
mov
pop
imul
mov
dec
inc
push
adc
and
idivl
xor
jne
push
adc
scas
push
repnz
ss
js
add
mov
shlb
mov
fildll
push
shrl
test
mov
mov
mov
xchg
inc
add
outsl
fmuls
stos
jle
movsb
jne
dec
imul
jmp
scas
jl
loop
push
mov
arpl
sub
inc
cmp
outsb
divb
pop
mov
or
or
push
dec
test
mov
mov
push
xchg
sub
or
mov
xor
xor
or
jecxz
add
inc
xor
mov
push
push
jge
mov
sub
imul
adc
je
xchg
andb
add
dec
out
push
sub
push
push
mov
add
jmp
cmp
rclb
hlt
daa
mov
mov
outsl
dec
popa
leave
and
or
cltd
dec
jmp
lahf
pop
sti
dec
cli
std
push
out
xchg
xchg
ds
clc
sub
rclb
xchg
push
adc
jno
ficomps
mov
inc
xchg
sub
sbb
jg
jmp
mov
addb
or
inc
add
fdivrs
nop
mov
mov
movsb
and
ds
mov
nop
cmp
das
or
dec
cli
mov
out
call
pinsrw
or
push
mov
mov
pop
adc
pop
mov
push
mov
daa
je
pop
dec
add
mov
inc
pop
push
int3
inc
adcb
or
pop
sub
bound
jmp
fistpll
lea
out
adc
out
out
pop
imul
out
test
and
and
jbe
stos
das
push
rcll
je
clc
mov
rcr
lods
inc
add
mov
push
jbe
pop
movsb
sahf
xchg
ljmp
pushf
test
insl
mov
aaa
dec
imul
std
and
jo
mov
xor
sub
pop
lret
shl
and
fcoml
je
push
sbb
lea
mov
push
mov
mov
daa
bound
push
int
jmp
testl
fdivs
xchg
loopne
pop
jg
sbb
fs
sahf
pop
lret
mov
lret
sti
dec
pop
scas
fmul
ret
lahf
imul
movsl
push
and
lahf
dec
aad
leave
sbb
pop
adc
mov
into
ja
adc
fs
fnstenv
inc
popf
sbb
leave
push
push
vmaxss
push
test
push
fisttpll
and
shll
add
add
jns
add
sub
xor
mov
lods
jle
and
sbb
loopne
jg
leave
ljmp
xchg
mov
notb
scas
jno
add
sub
add
dec
push
shlb
mov
push
xchg
inc
ret
iret
push
xchg
int3
adc
inc
leave
pop
push
pop
orb
xor
push
jns
push
sahf
inc
push
cli
in
jp
stos
ret
jmp
xchg
enter
or
int
imul
pop
jbe
and
and
std
sahf
mov
push
push
jmp
andl
or
fucomip
sbb
mov
aad
test
test
xor
out
mov
negl
daa
je
add
cmp
xor
or
in
jp
and
sub
ret
xchg
jmp
subb
sub
inc
pop
jge
add
lea
bound
scas
add
jge
insl
jmp
cmpsl
stos
mov
xchg
cld
xchg
or
loopne
push
push
dec
add
in
pusha
or
pop
add
sbb
stc
pop
pusha
push
xor
sub
lret
xchg
or
jb
cmp
sub
mov
inc
pop
sub
mov
push
in
cmp
adc
stos
jo
jmp
test
add
cwtl
and
inc
sti
pop
insl
and
add
sub
or
jae
data16
or
outsl
push
xchg
jb
sbb
xor
sbb
lds
repnz
out
test
or
sbb
pop
inc
cmc
push
mov
sahf
jmp
push
adc
xor
dec
stos
mov
or
insb
cmpb
mov
cmc
push
or
dec
popa
pop
mov
push
or
loope
cwtl
mov
mov
test
adc
push
or
mov
cltd
bound
aaa
cmpsb
sbb
cmp
faddl
icebp
push
push
xor
xor
and
fistpll
rclb
mov
dec
not
in
std
jns
orb
and
or
stc
das
mov
pop
jmp
cwtl
or
xor
test
mov
push
xor
dec
adc
mov
pop
mov
cmp
icebp
and
mov
dec
or
cmc
dec
dec
pop
stos
les
inc
add
jg
dec
add
jmp
pushl
inc
inc
rolb
pop
lods
test
sub
stos
into
test
lea
loop
sbb
push
jecxz
sub
xor
push
jae
add
pop
or
inc
jns
and
pop
xchg
add
orps
dec
imul
dec
ja
lret
or
jb
pop
lock
mov
scas
ljmp
and
ds
dec
mov
mov
ljmp
out
adc
xchg
mov
xor
cld
mov
pop
mov
vpunpcklbw
in
in
aaa
mov
pop
jmp
inc
xchg
fcmovbe
fldcw
push
mov
fwait
add
pop
not
shr
clc
icebp
cli
pop
xor
pop
jmp
imul
lock
popf
push
push
das
and
mov
mov
dec
add
jae
or
pop
mov
add
into
stos
cmpsl
jmp
or
or
push
aas
mov
lret
and
aad
out
sbb
loop
push
int
inc
je
outsb
push
jmp
fiaddl
xchg
jmp
aad
stos
ljmp
mov
testb
pop
loope
cli
call
mov
cmpb
pop
dec
orl
jmp
dec
pop
repz
push
lds
inc
shll
adc
loopne
neg
rorb
dec
jmp
out
jge
addr16
test
test
and
jge
in
or
aam
jo
outsl
xchg
xchg
xchg
bound
push
dec
add
das
mov
pop
lret
sti
imul
mov
aam
sbbb
shlb
pop
negl
jge
test
mov
mov
push
jnp
cmp
mov
sub
pop
jle
jle
inc
mov
jne,pn
pop
movsl
jbe
push
popa
jne
push
dec
pop
push
call
pop
mov
add
adc
mov
and
add
adc
inc
shlb
popa
inc
aas
pop
outsl
stos
add
movsb
xor
pop
loopne
repz
mov
lock
cmpsb
and
xor
inc
ds
stos
cmp
jmp
lea
or
or
mov
pop
cmp
cmpsl
test
stos
lods
outsb
rcll
mov
and
sub
sub
and
jecxz
inc
lret
leave
jbe
cs
loop
pop
dec
push
xor
dec
mov
pop
cmpsl
jne
pop
ret
cld
jbe
sahf
sub
outsl
xor
nop
push
in
xchg
aam
push
jnp
sbb
fidivl
ljmp
repnz
repz
mov
test
adc
jmp
cmp
pop
cmp
loop
rolb
inc
and
jns
adcb
fimuls
jmp
das
in
fstps
or
and
sub
mov
mov
icebp
rcl
add
jecxz
and
mov
loopne
inc
outsl
mov
bound
or
xlat
shll
jmp
pop
push
aaa
sub
mov
inc
ud2
or
or
cmc
pop
scas
mov
mov
imul
adc
imul
push
xlat
or
shr
push
mov
pusha
mov
loopne
jmp
test
xor
mov
xor
adc
add
jns
mov
add
stos
in
lcall
movsb
mov
dec
add
decb
mov
lods
jl
popf
out
aas
cmpsb
xor
lock
sub
mov
outsb
and
fs
addr16
push
rcll
mov
xor
and
sub
popa
add
dec
mov
dec
aas
inc
ds
dec
xchg
xor
sbb
xor
dec
stc
lret
add
pop
sub
ja
dec
imul
dec
ss
das
std
mov
sbb
push
jae
and
pop
lcall
sarl
insl
and
mov
push
push
ret
mov
data16
add
mov
cwtl
mov
inc
xor
dec
movhps
setg
ss
dec
pop
mov
dec
jp
cmpsb
or
cmp
pop
add
jmp
jno
std
ret
cmovs
push
jo
or
jo
xchg
or
push
jle
push
adc
push
adc
mov
mov
dec
rol
or
outsl
loope
in
sbb
sub
xchg
jg
mov
cld
xor
pop
les
dec
in
stos
adc
mov
int
adc
cli
pop
iret
add
mov
xor
ja
es
in
fcoms
popa
xor
push
push
ret
adc
or
jle
lcall
or
xchg
jge
or
push
ljmp
test
xchg
lods
in
loopne
inc
shl
cmp
push
outsb
repz
outsl
je
mov
movsb
add
xor
dec
fstpl
stos
add
sbb
adc
cmp
cmp
mov
aad
pop
xchg
fdivrp
push
pop
pop
xor
mov
fadds
inc
add
and
and
or
mov
adc
out
cmp
dec
fwait
inc
cs
lods
and
push
mov
inc
and
jae
pop
adc
imul
fstl
xchg
stos
ss
pop
adc
jge
and
add
mov
xchg
cwtl
push
scas
xchg
aad
fdivr
dec
jns
aam
xchg
dec
fidivrs
adc
push
and
cmc
gs
xor
lcall
and
or
stos
ja
leave
movsl
xlat
out
imul
add
mov
xchg
into
movsb
mov
add
mov
adc
popl
xchg
or
pop
dec
mov
dec
in
test
push
jge
test
aaa
jl
movsb
sti
push
decl
sbb
pop
jp
add
xor
jge
sub
insl
xorl
mov
pop
loope
add
sbb
daa
lock
lods
and
in
jae
pushf
rcrl
sbb
xchg
cltd
orb
and
add
pushw
jp
sub
std
insl
xchg
adc
int
cltd
ljmp
xor
std
mov
inc
stos
jp
pop
sbb
inc
add
jbe
mov
pop
hlt
inc
add
push
jmp
movb
add
test
jmp
outsl
pop
inc
test
into
popf
addr16
sbb
cmc
cltd
xor
mov
movsl
rorb
or
les
inc
ret
imul
outsl
push
xor
mov
arpl
or
in
dec
clc
xchg
popf
jl
clc
jmp
ds
sub
and
and
jg
or
jmp
ret
clc
stos
loope,pn
imul
dec
mov
insb
jp
mov
adc
sub
fs
adcb
rclb
jbe
pop
mov
pushf
pop
sub
mov
arpl
outsl
test
int3
test
cmp
cmp
ljmp
in
shll
sbb
loop
stc
xor
cmp
sub
dec
loop
ret
push
mov
popf
sarb
jmp
jns
xor
es
pop
lods
dec
jl
movsb
push
mov
cmp
int
loop
imul
push
outsl
decb
imulb
fnstcw
das
adc
in
mov
and
xor
or
sub
repnz
popf
stc
push
mov
ljmp
nop
jle
sbb
and
sbb
cmp
cmc
xor
and
test
mov
sub
outsl
jg
addr16
mov
nop
pop
mov
push
and
xor
lahf
jb
and
mov
scas
sub
xchg
lock
push
test
push
mov
sub
mov
add
add
or
js
and
inc
test
mov
cmp
mov
add
push
push
fs
inc
test
inc
loop
adc
in
mov
fimuls
mov
nop
cs
or
out
lods
cwtl
dec
pop
iret
ljmp
mov
dec
add
mov
xchg
je
daa
push
sub
bound
jns
shlb
rcll
dec
loop
lock
lahf
rcrb
inc
adc
nop
rolb
cs
and
dec
fidivrs
pop
add
sub
inc
ljmp
aam
in
add
mov
adc
pop
push
call
popf
add
roll
push
add
push
stos
iret
push
adc
sbb
daa
ret
aad
call
mov
aad
mov
mov
adcb
pop
es
addb
sbb
sub
int3
dec
xlat
loopne
sub
push
popf
add
jnp
lret
orb
add
sbb
or
push
push
push
insb
ret
push
loop
push
inc
xchg
rol
test
or
or
scas
lods
jo
or
cmp
inc
pop
in
dec
mov
sbb
add
sub
pop
ret
bound
in
outsb
popa
xor
mov
pop
shll
aad
lods
push
xor
mov
jmp
add
loope
sub
bound
popf
imul
popa
mov
dec
pop
or
push
pusha
mov
push
sbb
sti
sub
sub
mov
add
cmp
mov
and
jmp
lods
test
sub
daa
lods
mov
cltd
outsb
rcrl
push
adc
call
pop
adcb
xchg
push
mov
sbbb
xor
jmp
dec
mov
inc
cmpsb
negl
mov
jo
testb
pop
cli
mov
dec
push
fisubl
mov
lret
dec
inc
jmp
sub
leave
mov
ljmp
cmc
and
test
stos
mov
xorb
jecxz
lea
js
mov
sbb
gs
pop
dec
sbb
or
sub
aas
adc
push
jmp
shr
imul
or
jo
notb
andl
push
sarl
std
adc
movsb
cmp
sbb
dec
mov
mov
jmp
das
cli
stc
xchg
sub
push
push
xlat
mov
pop
cmpl
orb
jg
push
jnp
gs
int3
xor
xor
sub
and
das
call
loopne
ret
cs
leave
adc
sbb
push
mov
push
and
ret
mov
addb
lret
pop
dec
sbb
adc
mov
pop
frstor
add
dec
popa
mov
xchg
mov
push
inc
rclb
sub
mov
jne
icebp
loop
pusha
cmc
hlt
cmp
pop
lahf
ret
ret
in
sub
enter
add
jecxz
mov
mov
push
mov
sub
cld
mov
inc
or
mov
and
sub
rcrb
dec
test
mov
movsb
arpl
imul
bound
jle
xchg
jno
pop
jle
push
mov
div
sbb
out
andb
fs
mov
lea
and
out
inc
sti
cltd
aam
lahf
mov
mov
jg
out
xchg
push
xor
add
shll
cld
xor
xchg
inc
sbb
xor
imul
rep
idivb
jns
and
popf
jnp
scas
push
and
sbb
sub
xchg
adc
lret
sbb
inc
sbb
mov
sbb
push
adc
xchg
fnstcw
ja
sub
push
cs
add
sbbl
mov
dec
lret
mov
inc
cmc
and
add
xor
push
enter
xchg
add
sbb
dec
js
pop
stos
pop
testl
mov
test
cmp
das
xor
sbb
leave
ljmp
mov
add
ljmp
jl
inc
jg
xor
push
jae
pop
mul
cmp
pushf
popf
mov
add
or
jl
js
mov
xchg
dec
pop
js
push
push
pop
pop
decl
mov
sahf
pop
int
add
inc
pusha
loopne
pop
push
cmp
repz
jg
orb
loopne
xchg
ss
mov
je
out
movsl
inc
jns
and
or
xor
movsl
fmull
pusha
mov
and
xlat
dec
pop
xchg
add
movsl
mov
sub
jno
cld
and
and
pop
adc
sub
shr
pop
add
push
fbld
into
das
out
inc
aam
mov
push
test
mov
jmp
test
ret
sbb
dec
push
jb
jo
addb
insb
or
xor
stos
loop
lcall
pop
pop
cmpsb
jmp
pop
mov
add
loope
pop
fs
enter
push
push
jl
mov
ret
aam
and
push
fstl
push
inc
push
std
inc
inc
or
mov
add
pop
pusha
jp
nop
nop
mov
cmp
out
sub
push
pusha
inc
and
add
mov
fcoml
and
cmp
cmp
jbe
and
in
push
orb
rolb
adc
iret
mov
add
mov
push
mov
jmp
pop
add
call
mov
pop
pop
push
mov
or
or
mov
push
mov
mov
pop
adc
int
push
out
xor
adc
icebp
nop
push
or
outsb
push
dec
push
pop
jp
enter
push
jae
cmp
ds
or
out
testl
test
ret
scas
leave
and
sbb
neg
cwtl
int3
xor
imul
push
fwait
shlb
pop
sub
aad
outsb
es
test
push
dec
arpl
lock
push
rcrl
dec
jg
or
sarb
mov
arpl
add
add
aaa
jmp
xor
pop
loop
cmp
icebp
imul
mov
das
popa
cmp
pusha
lds
mov
xor
mov
decl
popa
adc
pop
add
inc
sahf
int3
add
or
pop
adc
iret
pop
add
sbb
push
sub
icebp
imul
mov
mov
xchg
pop
call
xor
xchg
or
enter
lahf
jae
pop
xchg
pop
mov
mov
sub
jp
cmp
test
scas
dec
addr16
dec
inc
mov
aaa
mov
in
push
in
clc
fbld
test
xor
add
push
inc
jmp
outsb
push
dec
xlat
loope
rcll
xor
dec
inc
mov
mov
in
mov
fmull
adc
xchg
xor
stc
leave
int3
xor
int
sub
or
mov
daa
add
into
jmp
adc
pop
jmp
mov
stc
xlat
shll
cmp
sub
cmpsl
inc
neg
add
cs
xor
jecxz
xchg
sbb
bound
insb
fisttps
adc
outsb
out
mov
adc
xor
inc
sub
push
sbb
sbb
push
sahf
push
push
mov
xchg
test
js
neg
mov
ja
sub
pop
adc
mov
adc
arpl
or
jmp
sahf
sub
or
je
outsb
adc
test
push
scas
dec
jmp
push
dec
cmp
daa
xchg
jp
dec
imul
movsl
aad
hlt
popa
mov
push
data16
fistl
dec
push
xchg
je
addl
or
nop
jge
inc
imul
out
cmp
subb
sub
sbb
pop
add
or
xchg
cltd
addr16
and
clc
fisttps
lods
cmp
fists
dec
push
popa
jns
cli
and
jmp
add
push
adc
jg
cwtl
mov
sahf
and
loope
xor
sbb
xchg
ret
add
cmp
sti
and
push
in
test
repz
push
repnz
xlat
pushf
sbb
jb
in
and
jg
pop
cmp
enter
pop
ljmp
xchg
pushf
mov
pop
mov
in
test
xchg
push
add
xchg
dec
and
mov
imul
mov
shr
movsl
test
mov
arpl
iret
es
test
loop
and
fisubl
push
jb
or
cmc
add
clc
mov
pop
xor
jmp
pop
inc
and
adc
fadds
dec
push
push
jmp
lods
lock
jge
shll
or
aam
out
jne
xorb
int
stc
ljmp
loope
ss
pop
and
or
xchg
xchg
jle
dec
js
mov
filds
xlat
fsub
add
lahf
jae
daa
fists
fdecstp
add
jle
int
mov
inc
inc
jbe
mov
in
xor
sbb
lret
test
es
inc
popf
pop
sbb
sbb
push
add
mov
mov
pop
dec
stc
ljmp
adc
adc
mov
aaa
jmp
add
jo
cwtl
pushf
adc
lock
mov
mov
orb
and
pop
pop
leave
sbb
out
subl
call
subb
inc
cwtl
out
paddq
push
jnp
jecxz
xor
in
add
sub
fistps
sbb
mov
pop
sarb
cmp
pop
out
sbb
fs
dec
lcall
iret
sub
les
or
jp
sub
add
mov
push
push
jle
or
mov
into
pop
mov
pop
push
arpl
add
cmp
push
mov
pusha
sbb
das
in
add
ljmp
or
adc
aad
movsb
xlat
shl
xchg
ret
jmp
adc
or
clc
push
mov
jns
inc
pop
nop
sub
bound
mov
inc
fcoms
and
repz
shrb
add
gs
std
sahf
and
int3
jmp
and
mov
dec
sub
jmp
daa
mov
cmp
fnstsw
pop
xchg
mov
cmp
add
iret
or
cmc
jns
sarl
or
pushf
jp
jno
sub
inc
les
or
enter
dec
sti
adc
cmp
insb
bound
shr
xchg
push
rcr
test
jmp
pop
inc
adc
push
mov
mov
cld
inc
push
popa
sbb
dec
lods
mov
push
daa
ss
ja
push
je
std
xchg
adc
sbb
sbb
adc
xchg
jno
jne
inc
mov
pusha
pop
jmp
mov
xchg
neg
inc
outsb
jl
pop
pop
mov
movsl
sub
test
adc
stos
jl
jmp
mov
cmp
add
mov
sub
lret
or
push
xchg
cld
pop
test
scas
ja
mov
inc
sub
test
add
jnp
ret
and
out
fildll
fcmovb
pop
sarb
push
jmp
cwtl
jl
dec
jmp
sbb
dec
shll
jbe
or
add
add
adc
jp
in
ret
add
xor
inc
movsl
or
push
mov
add
loop
adc
fbstp
jmp
test
mov
dec
or
int3
popa
push
add
into
dec
sti
pushf
lret
push
add
test
arpl
inc
mov
and
jle
mov
inc
and
push
push
jmp
repnz
mov
add
jl
sbb
je
cmp
dec
int
xor
sbb
mov
insl
adc
ljmp
imul
push
inc
add
lcall
ret
push
pop
in
dec
ljmp
cli
pop
add
ss
popa
dec
cmp
rclb
mov
popf
pop
push
out
not
or
jl
jecxz
jmp
mov
mov
pusha
and
or
jge
fiaddl
popa
add
fiaddl
adc
mov
and
mov
mov
or
pop
sbb
lea
xor
sahf
enter
fsub
rcrb
and
fmulp
dec
fwait
ja
in
mov
mov
add
sbb
sbb
lods
xor
in
and
aas
sbb
mov
adcb
inc
cwtl
adc
xor
push
mov
sub
icebp
ljmp
jmp
addb
pusha
sarb
call
push
bound
push
sbb
and
fbstp
and
push
dec
jns
mov
sub
das
mov
sbb
sbb
sub
fldt
arpl
cmpsb
cmp
mov
outsl
and
fs
jmp
cs
cmp
lret
jmp
xchg
jmp
xor
fcomp
xchg
cmp
dec
dec
mov
int3
xor
ja
repz
add
add
add
mov
jl
add
scas
movb
nop
or
rclb
out
adc
decl
ljmp
push
jmp
hlt
xor
or
dec
daa
inc
add
add
inc
jl
mov
or
mov
fdiv
sbb
sub
or
sub
pop
xchg
loop
xor
in
add
or
add
dec
inc
sbb
cmp
jne
scas
popf
cmp
mov
jl
jae
pop
sbb
or
shll
daa
aam
movsl
jo
dec
pop
inc
loope
dec
cmp
sbb
mov
xlat
push
push
lret
add
test
jmp
mov
rol
incl
cmp
add
stos
or
out
xor
cmp
adcb
dec
pop
inc
mov
pop
inc
lcall
clc
jg
add
pop
cli
pop
andb
sub
add
or
ss
add
fs
push
mov
lcall
xor
es
push
fnstcw
add
mov
sub
inc
and
mov
inc
xor
lret
xchg
in
sub
push
pop
shlb
xchg
pop
push
jno
or
sub
je
out
les
pop
push
lds
pushf
lods
sub
push
test
fcmove
push
pop
pop
cmpsb
jge
dec
pop
out
rcrb
shlb
jle
into
xor
dec
int
or
pop
sub
jmp
cmp
hlt
sbb
push
dec
xor
add
gs
xlat
jmp
cmc
mov
dec
push
fdivrp
sarl
rcrl
xor
pushf
test
xchg
repnz
out
inc
adc
sahf
lret
mov
out
shl
sbb
mov
adc
jmp
out
push
push
mov
jmp
pop
call
pop
int3
and
outsl
mov
loope
jno
dec
adc
enter
and
adc
mov
push
sub
cli
test
add
jle
push
dec
push
cli
lret
xor
xchg
and
mov
push
push
jmp
lods
dec
mov
jmp
push
mov
orb
mov
adc
fcmovb
pop
jns
aam
mov
xor
jo
orb
mov
cwtl
cmp
add
fbld
xor
pop
push
adc
cli
mov
shll
pop
pop
roll
ret
mov
xchg
push
nop
lahf
lods
add
mov
pop
rorb
xchg
lods
or
and
push
or
jo
lods
lock
and
rorb
dec
repnz
leave
or
pop
inc
lcall
das
loop
std
js
add
add
fiadds
dec
sub
lods
pop
popa
in
inc
cmp
xlat
out
push
sub
in
push
jmp
sbb
aaa
adcb
lods
pusha
pop
cmp
and
mov
jns
sbb
dec
xor
inc
lock
pop
lock
jmp
aam
icebp
mov
push
lods
out
test
xor
inc
or
mov
or
pop
ss
js
and
xor
sub
and
dec
in
repnz
lret
inc
pop
pop
pusha
repz
sub
jmp
dec
pop
or
dec
add
jbe
nop
push
pop
and
sub
lock
mov
sub
fcmovu
je
ja
xchg
fimull
cld
sbb
push
pop
add
ret
ljmp
adc
std
mov
scas
push
adc
aaa
jge
adc
dec
test
in
dec
add
in
mov
imul
and
fcmovbe
cli
filds
cltd
jmp
fcoml
push
clc
or
cmp
dec
or
and
mov
lcall
mov
repz
push
dec
add
shll
jge
insb
jne
add
and
loopne,pt
mov
movsb
rolb
sbb
push
jge
das
or
sub
jecxz
adc
and
cwtl
nop
or
inc
cmp
sub
push
push
push
push
or
ds
mov
add
inc
in
and
push
xchg
cltd
mov
jbe
arpl
xlat
and
frstor
mov
in
push
pusha
int3
ret
jns
mov
sbb
fsubrl
jmp
std
mov
push
xor
repnz
or
jne
mov
pop
sub
rolb
jg
inc
jmp
shr
add
mov
sub
or
add
jmpw
push
push
ljmp
popl
pop
ljmp
jnp
or
xchg
add
ret
fdiv
mov
fnclex
pop
pop
nop
adc
mov
and
mov
sub
add
pop
xchg
mov
pop
sub
jmp
push
addl
mov
xor
aas
dec
lret
scas
and
cld
add
in
popf
jae
fadds
add
xor
inc
jge
loop
idivl
ret
call
int
dec
sub
push
dec
mov
mov
pop
and
cmp
jmp
mov
jl
aad
cmp
xchg
jg
mov
push
adc
or
jae
movsl
arpl
icebp
sub
sub
inc
jle
leave
jno
push
shrb
mov
sub
dec
fists
sahf
add
test
lahf
push
jno
adc
jle
push
out
or
ret
xor
push
push
push
inc
pop
pop
aaa
or
add
add
sarl
cmpsl
jmp
nop
sbbb
test
int
add
dec
jl
jne
mov
pop
sbb
roll
jmp
rcr
and
adc
push
enter
cld
ffree
xchg
add
out
sbbb
inc
adc
imull
cltd
and
addr16
mov
loop
xor
clc
mov
ja
inc
pop
mov
mov
movsbl
xchg
mov
int3
or
clc
inc
or
push
je
repz
or
pop
pop
jmp
popf
cmp
fbstp
and
or
popf
add
popa
fbstp
dec
adc
roll
ss
sahf
adc
mov
sar
xchg
jbe
mov
pop
jl
daa
adc
sub
cmp
hlt
insb
jp
lods
sar
pop
xor
aam
push
mov
daa
fstpl
jle
jle
sbb
pusha
insb
pusha
sbbl
xor
dec
adc
adc
cmp
cmp
adc
mov
outsl
aad
mov
pop
cmp
test
xor
inc
fcom
mov
cmc
push
adc
inc
int3
aas
loop
mov
jge
divb
mov
cmc
xchg
scas
test
or
pop
lock
inc
pop
mov
shll
and
jmp
xor
cmpsl
and
mov
inc
xor
stos
jmp
test
jb
cwtl
xchg
cmp
and
mov
aaa
daa
out
or
scas
popa
push
mov
mov
push
jecxz
push
pushf
or
adc
arpl
in
or
cmpsl
xor
push
sub
xchg
mov
and
lret
fbld
test
lea
ss
dec
and
icebp
pushf
pop
xor
adc
ljmp
add
inc
sbb
adc
mov
decl
or
mov
inc
fsubl
inc
testl
jle
jns
mov
sub
aam
push
roll
and
pop
imul
aaa
pop
mov
xorb
in
pop
sbb
pop
call
in
add
xor
push
fcoml
jmp
adc
sbb
mov
aaa
neg
add
ret
push
in
pop
pop
outsl
int3
jle
and
xor
add
xor
jl
mov
arpl
sti
fadds
xchg
push
mov
inc
dec
sub
int
and
adc
cmp
push
and
sbb
add
aam
sbbl
in
rep
lds
pushf
in
dec
dec
in
out
sarl
arpl
outsb
mov
add
push
cmpsl
add
aaa
jl
inc
push
sub
dec
ljmp
sub
mov
cmp
or
test
dec
mull
cmp
flds
fldcw
stos
arpl
loopne
jne
pop
push
aam
pop
or
out
enter
adc
sti
sub
imul
push
xchg
pop
sub
subl
test
cmp
push
pop
inc
xchg
std
or
pop
lret
inc
cwtl
jnp
jp
xlat
rcrb
dec
loope
inc
xchg
jmp
sub
dec
dec
fsubs
and
pop
mov
movsl
cmp
and
lret
cmp
push
pop
test
pushl
pop
sub
lds
inc
outsb
in
sub
mov
out
pop
outsl
cmova
and
out
mov
push
adc
pop
dec
leave
fldenv
rclb
jmp
xor
mov
fdivrs
adc
repz
cli
inc
xchg
dec
sub
cmp
mov
add
lods
sbb
jo
push
mov
fs
and
push
mov
sub
sub
cmp
add
mov
push
dec
ret
fsub
push
push
mov
sbb
jmp
stc
pop
jg
or
arpl
in
inc
shlb
or
jmp
jmp
push
adc
mov
xor
jnp
add
dec
or
shrl
lods
inc
pop
sti
jno
jmp
add
sub
push
sub
push
sub
outsb
lret
mov
pop
rcrb
jmp
imul
das
push
outsb
fistpll
imull
mov
xchg
jae
sbb
or
xchg
scas
jne
leave
push
ret
or
add
repz
dec
pop
ret
roll
or
add
mov
cmpb
sub
jmp
loop
pop
add
jmp
xchg
stos
out
add
add
push
push
push
inc
pop
aas
mov
insb
in
movsb
ljmp
add
or
mov
into
adc
and
aas
adc
cld
push
adc
pop
stc
repz
push
cmp
inc
dec
mov
stos
les
sti
mov
adc
xor
sbb
rclb
fs
fiaddl
cmp
adc
mov
push
pop
pinsrw
shl
jns
and
aas
test
push
test
mov
cmp
push
test
xchg
inc
push
into
pusha
cmpb
inc
lea
or
or
xor
ja
popa
fiaddl
push
mov
stos
and
push
lods
xor
push
jbe
fsubrs
or
mov
stos
es
or
cmp
dec
pop
mov
jbe
out
sub
mov
push
adcl
inc
fidivs
or
add
mov
dec
xor
sub
sub
int
test
xlat
cmp
sahf
add
loope
xor
mov
stc
pop
inc
xchg
das
or
mov
jne
jl
test
xor
stos
mov
sub
push
loope
out
leave
xor
jl
push
gs
adc
and
or
adc
dec
pop
icebp
mov
enter
outsb
and
ret
loop
or
push
add
mov
xor
lods
xchg
movsb
sti
enter
imull
lcall
xchg
test
or
adc
jns
adc
mov
add
mov
jns
cltd
push
sahf
and
mov
jns
jmp
pop
xor
mov
xchg
adc
ds
add
sbb
imulb
sub
pop
and
pop
mov
fsubrp
movsb
sbb
xor
adcb
or
mov
xor
add
or
sarl
test
mov
rorl
sbb
sub
adc
rcl
push
ja
jge
lcall
sub
sbb
int3
dec
add
adc
push
xchg
mov
gs
cmpsl
ja
or
cmpsl
fisttpll
jmp
sub
sub
mov
jg
adc
or
std
xor
loop
pop
test
in
xchg
test
cli
int3
lods
repz
or
pop
cwtl
mov
in
out
dec
pop
mov
flds
pop
loope
and
jb
mov
fimull
push
pop
out
mov
imul
fdivr
add
or
push
jecxz
into
iret
push
and
scas
imul
pop
push
leave
push
xor
scas
add
push
mov
push
mov
fildl
pop
xor
jmp
dec
jae
push
push
test
mov
or
imul
repz
xor
adc
add
push
xchg
imul
ljmp
outsb
push
test
gs
mov
cmp
mov
mov
imul
shrl
pop
pushf
shr
repz
enter
xchg
and
xchg
fstps
ja
cmp
pushf
test
popa
dec
leave
mov
rcll
es
jno
sbb
mov
sbb
mov
test
fisttpl
push
pop
outsb
cmp
push
cmc
lret
xchg
pop
mov
push
test
std
pop
popf
push
mov
fnstsw
dec
xlat
stc
xor
and
add
push
jnp
ja
xor
sbb
adc
out
mov
add
cltd
lcall
cltd
mov
mov
lret
hlt
sbb
mov
sub
push
out
cmp
pop
lahf
push
jge
jmp
pop
lock
rcrb
inc
test
cmp
add
insl
xchg
jecxz
fidivrs
adc
pop
fsubs
movsb
cli
cmc
add
add
das
adc
cld
imul
clc
cmpsb
add
or
lret
cmp
loop
jmp
xor
or
sub
pop
push
bound
sbb
dec
pop
fldenv
movsl
push
popf
mov
aas
ljmp
jge
shll
pusha
roll
cs
xchg
sub
das
mov
push
pop
sbb
iret
add
push
mov
jmp
mov
sub
cld
das
cmp
shlb
push
sahf
rorb
sub
add
or
mov
jecxz
fldt
mov
add
in
add
js
loop
adc
test
mul
sti
cmp
mov
add
xchg
pop
mov
push
mov
inc
dec
cmp
sbb
nop
mov
or
ds
repz
mov
adc
or
jns
jae
cld
fsubrs
lds
mov
cmpsl
sub
jbe
mov
into
sub
dec
lock
push
nop
aad
cmp
lds
and
pop
cmp
xor
inc
pushf
jbe
sub
dec
in
and
cmp
sub
daa
inc
insb
mov
mov
ret
inc
lea
cli
pop
je
leave
fdivrl
sbb
push
inc
jns
sub
pop
xchg
ja
jl
psubb
adc
and
outsb
out
sti
push
push
sub
or
cmp
pop
add
cmc
pop
xor
jmp
pop
mov
jp
sub
push
and
lds
sub
push
ret
push
ror
das
jne
adcl
pop
pop
mov
push
cmp
fildl
mov
je
push
pop
dec
jmp
lods
adc
aas
lock
mov
adc
push
mov
into
pusha
dec
push
je
mov
outsl
and
pop
mov
std
xchg
push
or
and
mov
mov
sbb
jae
jbe
or
je
repz
lahf
push
cmp
add
dec
add
inc
dec
cmpl
push
jmp
movsb
cmp
outsb
inc
repz
inc
push
orl
mov
sub
ljmp
das
pop
mov
cmp
push
fdivl
leave
cmp
fimuls
or
aad
shll
and
jg
push
dec
sarb
cli
or
push
cmpsl
or
sub
test
stos
mov
mov
jg
lock
and
push
test
stos
mov
out
dec
inc
in
js
int3
lea
clc
mov
filds
jmp
cwtl
out
jmp
push
xcrypt-cfb
cmpsl
bound
ja
sub
jno
inc
sub
jbe
mov
lods
aam
test
jno
nop
push
mov
jg
inc
pop
popa
sbb
dec
adc
arpl
inc
shl
call
adc
sbb
add
cmp
nop
les
adc
scas
add
xor
push
mov
dec
mov
adc
and
push
dec
fs
aam
out
mov
sub
rorl
test
sbb
mov
adc
pushf
cwtl
cmp
subps
jne
les
xor
push
push
push
add
inc
jmp
popa
sub
dec
outsl
sub
stos
lods
push
push
lret
sarl
xor
mov
dec
ret
jge
inc
adc
pop
mov
xchg
outsb
repnz
adc
pop
sbb
pop
inc
xchg
cs
pop
push
jmp
lahf
inc
mov
pop
adc
jno
add
in
push
inc
and
popf
dec
mov
jae
add
sbb
cld
mov
pop
jmp
cli
repnz
js
pminsw
add
push
repnz
or
sti
add
ret
lcall
add
xor
pop
push
jno
cmp
push
cld
je
mov
loopne
idiv
mov
ret
jp
or
inc
int
je
pop
jl
inc
out
push
fcomi
call
push
repz
add
outsl
in
dec
pop
jecxz
mov
leave
xor
or
repz
data16
mov
push
jno
add
popf
mov
popf
js
dec
clc
jp
xchg
jmp
loopne
dec
pop
rcrb
pusha
or
sub
cmp
adc
and
test
dec
stos
mov
icebp
stos
lods
adc
sti
insl
imul
iret
out
xor
mov
add
dec
pop
sub
sub
pusha
pop
cmp
fwait
pop
hlt
mov
jl
xor
cld
xchg
repz
popf
movsb
shlb
lods
roll
push
jmp
popa
add
or
adc
iret
rorl
inc
jmp
loop
jne
inc
call
inc
ficomps
dec
fsubrs
cmp
pop
fdivrs
sbb
jmp
divb
test
and
jecxz
cmp
mov
jmp
inc
lods
pop
dec
xchg
add
xchg
mov
cwtl
cmc
pop
push
sub
movsb
pop
xor
lret
xor
aas
icebp
outsl
jnp
xor
fldcw
inc
cmc
sub
ds
mov
repnz
stos
imul
push
out
mov
cmp
mov
push
lods
jnp
dec
mov
adc
pop
push
mov
ret
insl
push
jmp
out
mov
icebp
jne
push
jmp
repnz
adc
push
sub
jmp
push
jae
shll
push
xchg
fs
iret
fcomps
xlat
pop
shlb
ret
arpl
mov
roll
mov
orb
inc
shl
mov
int3
out
or
cmp
ds
dec
cmp
mov
lret
out
clc
mov
mov
test
xchg
movsb
lds
xorb
cwtl
push
popa
xchg
ss
or
ret
mov
insb
les
sbb
mulb
lea
jp
and
dec
pop
lods
fsubrs
data16
adc
aam
bound
dec
add
cmp
imul
shrb
test
mov
loope
pop
aam
jns
and
sub
push
dec
or
sbb
add
adc
dec
push
push
jbe
xor
adc
mov
jmp
pop
xor
or
pop
dec
aas
sub
outsb
xor
sti
les
add
cld
xor
jnp
adc
das
outsl
daa
leave
stc
or
xchg
mov
jp
sbb
sub
cmc
stos
xchg
mov
aad
adc
jmp
sub
mov
add
pxor
and
cltd
ret
add
mov
pop
sbb
push
jge
pop
xor
cs
add
loope
imul
icebp
jmp
clc
sub
lfs
push
add
in
pop
xchg
xor
push
push
push
add
add
dec
add
test
and
aas
insb
ds
idivl
inc
and
mov
inc
rorb
mov
aaa
outsb
push
les
jne
out
xor
pop
nop
fldl
mov
push
mov
pop
mov
xor
xchg
out
adc
and
mov
mov
jl
lret
mov
add
mov
aas
xorl
adc
daa
cmp
sub
pop
imulb
fsubs
add
mov
push
int
aam
pop
pop
pop
mov
mov
sbb
fsts
inc
adc
loope
xchg
xchg
and
cli
sub
mov
xchg
jbe
bound
jno
insb
xor
mov
inc
push
push
mov
xchg
out
sub
push
push
mov
je
cmp
lea
lock
sahf
sti
jns
jp
icebp
or
xor
push
fsin
hlt
sub
js
inc
test
aas
loope
inc
cmc
cmpsb
sub
dec
shll
xor
lods
pop
jecxz
xor
dec
xor
dec
mov
jmp
js
ljmp
sub
fisttpl
jns
mov
jns
jb
sub
push
mov
xlat
rol
daa
jmp
mov
test
dec
sub
into
ret
sbb
das
or
aaa
out
pusha
cmp
jmp
lods
cltd
mov
loopne
xchg
inc
push
jnp
fcomp
inc
sub
pop
dec
imul
pop
or
pop
jns
imul
xchg
push
xor
cmp
scas
xchg
inc
mov
xchg
inc
or
bound
push
rcr
cmc
inc
aad
sub
sub
pop
mov
mov
imul
jle
icebp
inc
mov
pop
xlat
inc
cmp
shl
das
mov
pop
pusha
add
cmp
imul
mov
jbe
and
push
sub
adc
cwtl
cmp
adc
mov
ljmp
loop
rcr
and
pop
jge
adc
jp
push
cltd
pop
imul
push
jmp
lods
flds
test
ret
jnp
les
xor
add
jmp
and
icebp
push
arpl
test
xorb
cmpl
mov
add
jmp
sub
xor
or
and
add
ja
sbb
xlat
mov
jmp
loope
pop
scas
add
fldl
push
jl
shrl
cmp
iret
rorl
pop
andb
pop
inc
push
inc
xchg
jmp
add
nop
adc
flds
rolb
pop
pop
or
pop
mov
add
adcb
mov
pop
das
dec
dec
mov
or
into
js
mov
xlat
jge
sub
in
jmp
adc
pop
xchg
pop
add
sbb
and
adc
insl
lock
sbb
dec
mov
pop
push
xor
les
push
cmc
jge
push
push
dec
jl
cmp
cli
add
jno
or
cmp
xchg
dec
adc
lock
push
xor
out
dec
pop
ljmp
subl
in
hlt
shl
add
add
add
sar
dec
aaa
out
fs
les
lock
xchg
mov
jge
dec
pop
mov
sub
lods
aad
push
dec
sub
ret
jo
xchg
cli
mov
fstpl
cmp
mov
insl
push
dec
cmpsb
mov
jmp
ja
xor
in
jo
sub
mov
add
leave
inc
aaa
pcmpeqd
mov
ret
idivb
test
testl
ficoml
scas
adc
out
fsubrs
add
sbb
pop
and
les
mov
inc
ljmp
aaa
mov
mov
shll
jmp
aam
mov
emms
jmp
out
and
clc
test
or
dec
sub
push
xor
and
loopne
or
aas
das
out
or
leave
add
iret
fists
or
pop
mov
sub
cmp
enter
jg
xor
pop
push
push
repnz
cld
sbb
es
xchg
cmp
imul
cs
fldenv
sbb
push
mov
mov
cmp
jne
push
shrb
inc
inc
sarl
mov
sub
scas
cmp
pop
pop
mov
enter
rcr
and
mov
dec
pop
push
pop
push
xor
bound
dec
dec
rorb
nop
ficoml
das
lds
repnz
push
outsb
popa
ror
and
int3
jb
xchg
imul
loopne
jmp
sub
jnp
popf
dec
in
negl
leave
pop
imulb
jae
or
add
in
jns
xor
popa
shr
mov
push
cmpsl
cld
js
mov
test
pushl
xor
and
adc
push
mov
xor
or
clc
lahf
jle
pop
pop
push
xchg
mov
fs
test
cli
frstor
orl
out
arpl
fidivrl
xor
rolb
add
and
pusha
ret
jl
out
repnz
ss
nop
mov
or
sub
xor
and
mov
repz
inc
btc
jno
sbbl
addr16
shrl
jmp
cld
mov
out
fnsave
jge
repnz
jge
insl
inc
cwtl
arpl
lret
and
xchg
sahf
sbb
out
sti
and
cwtl
add
not
add
sub
dec
icebp
ss
adc
js
mov
pop
loope
ljmp
xchg
stos
cmp
push
inc
or
dec
add
loopne
jg
cs
sarb
inc
outsl
lock
cld
and
mov
divb
jb
in
adcb
mov
icebp
adc
xchg
mov
and
inc
pop
inc
and
or
shr
mov
mov
push
jns
call
mov
inc
xor
mov
mov
push
cmp
fisttpl
movsb
int3
or
jo
jp
mov
sbbl
jp
mov
add
jmp
pop
addb
mov
rol
mov
orb
enter
add
or
mov
pusha
or
subl
jmp
jbe
push
popf
add
dec
mov
sub
add
xchg
pusha
push
hlt
aad
push
inc
inc
sti
fisttpl
add
ret
cmp
jno
inc
add
jg
flds
mov
pop
pop
push
ss
cmp
bound
inc
or
arpl
push
push
test
sub
push
add
push
testb
rcll
stc
rol
sub
jmp
outsb
add
imul
sbb
dec
add
or
int3
fdivrs
pop
push
mov
add
cwtl
shrb
ret
icebp
imulb
xchg
or
aad
lds
push
mov
pop
pop
pop
mov
push
add
scas
or
outsl
pop
rcll
pop
sub
pop
push
add
mov
mov
cld
push
jbe
lret
xchg
cli
inc
std
inc
sub
mov
test
out
xchg
scas
repz
add
jmp
dec
push
lods
pop
xchg
scas
or
sub
mov
jae
popl
test
add
mov
cld
add
push
rorl
aaa
scas
and
ret
mov
fldl
mov
jmp
pop
xor
popf
out
xchg
xchg
jns
add
adc
sub
das
inc
ret
xor
sub
push
sub
adc
mov
aam
and
repz
add
lret
xor
popa
filds
mov
or
dec
adc
pop
lea
lock
jb
cld
xor
pop
jae
jl
adc
shl
cltd
imul
jns
mov
lock
orl
xor
notb
aam
out
mov
movb
testl
mov
push
dec
lret
loope
ds
dec
inc
push
les
sub
cmp
pop
addl
mov
push
adc
mov
test
mov
and
cld
testl
lods
xlat
or
popf
in
mov
sub
sub
jecxz
mov
movsb
xchg
sub
mov
cli
cmc
push
arpl
in
ror
push
push
lds
mov
add
inc
sub
xchg
jns
mov
lret
adc
clc
cmp
push
pop
int3
xor
push
adc
sub
jmp
inc
pop
mov
and
jg
rclb
cmp
repnz
add
and
pusha
mov
xchg
push
rcr
mov
add
xor
out
jne
nop
mov
popa
mov
or
cld
xchg
fcomps
push
in
test
push
push
pop
sub
jne
mov
xchg
enter
cmp
das
and
dec
rorb
push
std
lcall
pop
mov
es
nop
ss
fs
lock
sub
out
in
jl
imul
xor
pop
or
add
mov
inc
in
mov
sub
repz
divl
adc
in
inc
out
mov
xlat
jmp
test
pop
jg
mov
popf
push
mov
fistps
fisubrl
popf
stc
pop
mov
orl
cmp
dec
pushf
inc
add
lds
xor
scas
arpl
imul
add
std
xor
sbb
mov
mov
repnz
push
outsb
jmp
or
sub
lea
jmp
jmp
mov
mov
add
or
sbb
mov
xchg
jg
mov
mov
mov
inc
jns
cmp
sbb
sub
pop
mov
add
fisubrl
pop
jb
andb
add
mov
sbb
scas
sbb
and
aad
adcl
cmpsb
cmp
or
push
loope
push
mov
xor
inc
outsb
add
inc
or
jecxz
fdivrs
mov
xorb
hlt
pop
xchg
pop
adc
jnp
jne
push
outsl
fcoms
insb
inc
lock
ret
push
subl
pop
popa
mov
add
xlat
dec
mov
xor
pushf
xchg
mov
pop
jb
or
or
xlat
pop
outsl
fs
fdivl
and
dec
jb
data16
push
push
inc
xor
stos
cmp
xor
stos
ja
sti
jge
or
pop
je
mov
addb
imul
sbb
jne
push
or
cmc
in
mov
inc
and
dec
pushf
testl
inc
jecxz
and
add
cli
adc
dec
out
aaa
sbb
scas
sub
out
add
orl
jecxz
mov
rcr
push
fs
jecxz
insb
cs
insl
jle
jecxz
dec
in
xor
and
push
adc
fsubrl
mov
pop
adc
pop
push
lods
xlat
pop
and
inc
not
mov
mov
xor
jl
mov
add
lahf
outsb
mov
xor
mov
lea
jg
sarb
jmp
or
and
push
das
cmc
mov
add
mov
pop
je
movsb
sbb
jmp
push
std
bound
das
iret
dec
add
aad
xlat
pop
adc
jmp
ljmp
pop
aad
ljmp
adc
cmp
sbb
and
or
adc
loop
sub
cmp
inc
repz
mov
sbb
xchg
imul
loop
movsb
fucomp
mov
in
or
iret
scas
pop
jle
daa
jne
andl
inc
sbb
mov
and
mov
mov
mov
sbb
fsts
daa
popf
xlat
adc
xor
xor
sahf
add
sub
pop
dec
lds
out
cmpsb
mov
in
inc
adc
sub
mov
jp
add
add
psubb
outsl
xchg
pop
enter
dec
xchg
fcoms
sub
mov
mov
scas
shll
gs
add
adc
int3
push
pop
push
repnz
stos
mov
out
cwtl
mov
push
jne
roll
ud2
jmp
xor
outsl
adc
push
scas
rolb
or
push
or
lret
sub
inc
jb
lret
outsl
jmp
add
leave
jmp
ss
pop
push
mov
pusha
dec
or
test
loopne
push
bound
test
rol
mov
jp
stos
loop
cmc
push
xchg
adc
mov
add
push
movsb
outsb
movsb
or
or
mov
mov
call
pop
add
or
shll
xchg
adc
xor
lret
push
add
jo
pushf
mov
mov
jecxz
pop
mov
xchg
push
mov
adc
push
int3
imul
sub
enter
jmp
outsl
mull
sbb
dec
xchg
pop
jmp
loopne
aas
jg
outsb
std
inc
repnz
loopne
sbb
push
lods
mov
mov
or
jne
sbb
cmp
out
cmp
testb
cmp
js
clc
out
mov
push
push
pop
dec
push
jp
shrd
adc
lret
loop
dec
mov
in
fdivrs
dec
lea
roll
jnp
out
push
adc
jg
ja
lds
add
test
add
jmp
push
and
and
sub
fisubl
jp
leave
testl
push
push
add
cwtl
ret
std
dec
sbb
pop
sub
js
fsubs
sbb
repnz
test
add
and
lods
es
pop
daa
pop
clc
clc
mov
js
cwtl
inc
inc
cmpsb
xchg
cld
mov
and
jp
xchg
or
adc
add
push
jne
add
mov
push
mov
lds
or
imul
xor
add
mov
rep
add
cmp
cmpsb
nop
adc
dec
mov
jmp
add
iret
lock
subl
shl
cmovno
into
push
cmp
mov
push
scas
adc
xor
in
xlat
fisttps
lock
and
aas
add
fisttps
sub
clc
cld
jno
jmp
pop
subb
or
mov
lock
fidivs
outsb
aaa
pop
or
lea
pop
fcomps
add
mov
fistpll
jmp
cmc
icebp
lock
add
push
push
or
dec
jmp
and
scas
repnz
xchg
or
mov
subb
neg
push
dec
clc
inc
and
push
out
scas
jg
loope,pn
out
das
loop
sub
pop
cmpsl
hlt
jno
fbld
call
mov
es
jl
mov
push
xchg
out
popf
xor
push
iret
push
sub
shl
js
rcll
cs
xor
mov
or
lcall
pop
sbb
sbb
cmpsb
in
fimuls
xor
rcll
sar
js
dec
dec
adc
arpl
push
in
adc
mov
push
fisubl
pop
inc
shl
movl
fisubs
not
mov
or
push
clc
add
ficoml
push
lret
shll
call
mov
clc
add
not
jp
popa
jb
and
in
popa
out
push
add
pusha
lcall
jmp
imul
sub
pop
jmp
stos
aas
mov
and
add
dec
jnp
add
push
fs
mov
mov
adcl
sbb
stc
frstor
insl
push
cmp
sub
mov
outsb
daa
sbb
dec
stos
dec
mull
mov
shlb
or
xor
sbb
mov
mov
adc
dec
mov
ficoml
ret
add
jmp
mov
mov
outsb
in
outsl
mov
mov
jo
loopne
pop
outsb
pop
sub
push
pop
adc
int3
mov
adc
ljmp
or
cs
in
cli
lret
cmp
arpl
rcll
pusha
rcrb
xor
aaa
xor
in
out
cltd
mov
and
rcrl
int3
imul
dec
push
fstpt
inc
jmp
daa
pop
inc
pop
rorl
jns
sar
and
orl
loopne
xor
pop
sti
cmc
dec
push
gs
sub
xor
das
sbbl
push
add
dec
adc
jecxz
jo
dec
sti
lahf
or
imul
pop
lar
inc
in
inc
pop
push
rcrl
cmpsl
je
xor
loope
scas
clc
xor
sbb
push
jle
push
mov
mov
cltd
stos
mov
in
mov
pop
pop
mov
aaa
lock
inc
xchg
add
or
test
int
mov
cmp
rclb
out
pop
fisttps
and
and
aam
ret
jl
dec
and
add
pop
addl
and
or
fcoml
pop
add
inc
lods
pusha
daa
paddusw
es
sub
and
shrl
pop
das
out
push
xor
das
fistps
xchg
cmc
mov
lret
jae
jne
jle
das
add
shll
pushf
sub
inc
ja
add
movsb
testb
enter
xchg
pop
mov
pop
ja
ror
fcmovb
push
xor
jp
mov
iret
or
inc
jle
or
mov
add
lock
cmp
es
push
arpl
xchg
adc
push
out
sub
sarl
inc
subb
mov
imul
adc
cmp
adcb
pop
lahf
dec
push
nop
mov
fsubrs
bound
ret
or
push
out
add
das
shrb
mov
push
rol
adc
test
mov
xchg
cmc
andb
xchg
add
pop
test
dec
out
pusha
push
nop
sub
jp
rclb
arpl
fstl
push
aaa
and
adc
push
mov
jmp
pop
mov
das
call
int3
lods
les
add
cmp
adc
out
mov
jle
andl
sbb
sbb
mov
adc
sub
jb
mov
icebp
lret
push
or
inc
cmp
mov
fwait
cmp
adc
inc
divb
mov
mov
enter
push
mov
cld
push
ficomps
jns
or
and
sbb
cmp
add
inc
lods
syscall
fidivl
enter
call
cmp
push
cvtps2pi
add
rorb
repnz
add
cmp
pop
test
clc
xchg
sub
push
clc
dec
pop
cmp
inc
xchg
push
pop
mov
dec
stc
adc
xor
inc
push
es
or
insb
mov
test
dec
mov
jns
addr16
loope
ds
test
shll
push
jnp
dec
inc
test
das
inc
pop
testb
xchg
pop
test
adc
xchg
lods
rolb
test
or
outsb
pop
push
aad
rorb
xlat
pop
mov
add
and
sub
dec
out
pushf
xchg
dec
mov
add
or
pop
rolb
data16
jle
cmp
into
add
and
add
and
adc
leave
in
mov
sti
mov
push
and
loop
or
or
mov
rcrb
jle
in
and
cmp
out
adc
jno
addl
jmp
mov
cmp
pop
adc
and
das
add
test
out
cmpsl
ds
adc
jbe
mov
cld
arpl
mov
mov
push
call
sbb
sub
movsb
push
sub
notl
jb
jl
sub
add
mov
xchg
cmp
or
test
sub
shrl
pop
mov
dec
stos
jns
xor
dec
mov
push
sbb
ret
jge
xor
dec
inc
test
cli
lret
ss
cltd
imul
aas
lods
dec
mov
add
inc
fincstp
rcll
push
pop
rolb
nop
push
je
shlb
add
ja
sub
xchg
jns
fistps
mov
pusha
bound
adc
push
add
push
out
pop
or
jmp
bound
push
sub
dec
mov
xchg
testl
dec
cwtl
fimull
add
sahf
ret
insb
test
repnz
ljmp
cs
mov
rorl
mov
into
out
fisttpll
or
sub
inc
ficoml
dec
or
dec
mov
popa
xchg
sub
jns
cmc
rolb
faddl
push
cmp
pop
cli
sub
xor
mov
push
lods
inc
xor
push
mov
sbb
or
or
daa
andb
xor
mov
push
aaa
stos
push
popa
imul
cmc
stc
enter
pop
insl
aad
outsb
jne
pop
dec
cli
pusha
ret
jmp
cmp
mov
push
jmp
scas
sub
aaa
lock
mov
aas
or
and
rcl
adc
jl
mov
mov
push
jno
es
dec
cs
push
hlt
and
or
mov
xchg
pop
ds
lea
mov
dec
pop
xor
sti
jmp
xchg
ds
push
dec
mov
xor
xor
adc
pop
add
jl
push
push
pop
addr16
cltd
jns
sbb
fistpll
and
mov
pop
js
push
mov
mov
mov
jge
inc
pop
push
mov
add
loop
testl
xor
push
sub
or
pop
loopne
cli
ret
ljmp
and
mov
sub
dec
fisttpl
pop
xor
stos
ja
cltd
clc
xor
or
fdivrp
pop
loope
xchg
aaa
les
daa
je
scas
call
outsb
ds
sti
cwtl
testl
cmp
movsl
mov
out
jmp
scas
test
loope
xor
xor
flds
jbe
out
push
mov
sub
outsl
sbb
xor
push
das
dec
adc
negl
jb
and
ljmp
mov
pop
xlat
adc
mov
sbb
inc
loop
pop
push
ucomiss
sahf
mov
test
mov
std
sbbl
pop
push
bound
dec
add
mov
inc
lahf
test
mov
and
dec
adc
lret
add
push
in
xor
repz
or
jmp
jns
mov
out
mov
or
scas
not
push
push
mov
sub
mov
and
push
pop
jmp
sub
movb
push
add
xchg
sbb
cmc
rol
add
inc
push
sub
jmp
sub
in
xorl
shlb
neg
push
pop
jmp
ficomps
or
imulb
xchg
cs
dec
jp
ret
xchg
cld
xor
roll
jnp
jne
mov
rorb
xchg
lahf
jno
mov
imul
lret
xor
sub
pop
mov
adc
lcall
cmp
incl
mov
cwtl
test
mov
jle
or
cmp
ficoms
mov
adc
sub
out
cmp
cmp
fcom
mov
aam
iret
jl
jmp
addb
mov
pop
push
xchg
sub
mov
pop
jmp
aas
pop
xor
mov
cmpb
dec
fcomps
or
push
pop
or
mov
daa
arpl
fnstcw
push
rcrl
push
inc
jmp
int3
jbe
add
inc
xchg
sub
jp
mov
fdivl
ss
ljmp
das
adc
mov
inc
rolb
rolb
or
jmp
cmp
orl
mov
shrl
pop
push
inc
int3
sub
imul
pop
add
add
mov
jge
cmc
out
add
push
pop
sbb
push
mov
jmp
cwtl
cmc
push
pop
sub
pop
icebp
or
fcomp
add
stos
lods
imul
test
das
jmp
stos
fld
dec
wrmsr
cmp
pop
cli
pop
pop
mov
and
pop
pop
andb
push
fisttpl
pop
or
add
scas
cli
mov
das
mov
hlt
hlt
pop
and
add
movsb
pop
mov
insl
or
mov
ret
cwtl
mov
or
or
ljmp
xrelease
cli
das
push
sub
or
jnp
imul
lds
inc
mov
shlb
xchg
dec
sub
cmc
pop
nop
aad
add
lret
ljmp
aam
add
push
stos
jge
xor
hlt
fstps
in
dec
sbb
jno
push
xor
divb
cli
inc
push
lahf
xchg
dec
adc
mov
outsl
add
sbb
dec
or
mov
and
out
cwtl
sub
adc
xchg
ja
cmp
xchg
stos
adc
push
lahf
dec
in
shrl
cmpsl
add
sbb
or
push
js
sbb
jmp
sub
call
pop
aaa
or
xabort
cmp
movsb
cmp
fs
in
add
andb
jmp
xchg
add
sub
dec
xchg
mov
xchg
pusha
sub
sub
das
leave
inc
rorb
mov
mov
in
enter
pop
cmp
ja
mov
jmp
imul
xlat
cmpsb
cmpb
add
stos
jecxz
jnp
mov
rolb
or
ljmp
inc
dec
sbb
inc
mov
mov
popf
jnp
inc
push
add
popf
or
sub
inc
jo
or
xchg
cmc
dec
cld
and
popf
cmc
cmp
call
jns
lret
ror
ljmp
inc
add
lds
lock
aas
push
int3
incb
rorl
push
jne
fadds
mov
push
mov
or
incl
cmp
inc
jns
dec
inc
push
push
mov
dec
mov
push
mov
add
fldl
movsb
aas
or
add
int
out
mov
xchg
jne
clc
out
mov
add
addr16
mov
mov
xchg
lret
or
add
mov
cmpxchg
xor
andb
cmp
rolb
sub
loope
in
adc
loope
inc
lea
sbb
pop
push
push
shll
rorb
mov
fisubrl
sub
pop
cmp
icebp
outsl
dec
dec
adc
sub
loop
popa
or
or
mov
stos
xchg
xchg
jne
xchg
mov
loopne
jae
clc
dec
push
adc
out
pop
or
imul
add
jns
out
push
sahf
repnz
sub
jbe
test
std
inc
cmp
push
sub
adc
pop
dec
add
push
push
repz
and
push
mov
call
repnz
jl
xchg
pop
fidivrl
push
push
pop
xchg
push
cmpsb
sbb
jo
or
lea
mov
out
lret
out
push
ljmp
sub
pop
enter
push
ja
clc
fwait
mov
aad
addr16
mov
out
in
push
xchg
pop
mov
inc
mov
sub
in
dec
adcb
add
sahf
and
lcall
pop
or
mov
dec
xlat
cltd
imul
dec
jno
add
inc
adc
pop
out
imul
stos
push
mov
jmp
mov
ret
pusha
jecxz
push
aad
xor
add
cs
add
mov
pop
andb
cs
cwtl
and
negl
mov
in
push
xor
out
jno
adc
pop
inc
pop
add
pop
pop
add
push
popa
dec
lods
cwtl
imul
icebp
dec
push
pusha
nop
sahf
lea
inc
sub
adc
cmp
sti
sbbb
xor
sbb
inc
sbb
or
inc
cmp
inc
and
inc
xorl
in
nop
out
ret
rorl
inc
cli
in
mov
xchg
sbb
enter
fists
in
adc
imul
mov
inc
mov
aas
xor
xchg
mov
jecxz
rcll
ljmp
test
jmp
pop
orb
js
in
test
adc
add
xor
orb
arpl
pop
add
sub
push
je
jecxz
fimull
shlb
jnp
or
stc
and
fwait
out
xor
mov
mov
mov
sbb
mov
int
sub
rcrl
mov
subl
ljmp
into
into
xchg
aad
incl
lahf
pop
inc
inc
mov
test
stc
xor
lods
pop
dec
sti
mov
or
xor
cs
daa
pop
push
je
jp
push
dec
scas
mov
adcb
shl
push
pushf
sbb
jbe
sbb
lret
stos
iret
mov
mov
add
push
or
mov
adc
iret
call
fisubl
xchg
scas
pop
lods
lods
test
lret
push
sbb
xchg
pop
jmp
add
or
imul
add
push
std
mov
fcomps
sbb
add
mov
pop
shl
jns
sbb
pop
daa
xor
mov
mov
popf
sbb
lahf
push
ljmp
neg
jge
push
push
jge
xchg
repz
insl
fmull
pop
jg
scas
cmc
leave
aad
jecxz
xor
sahf
sub
hlt
enter
imul
sbb
mov
dec
cld
mov
adc
loopne
xchg
popf
hlt
dec
movsl
imul
fcoms
bound
outsb
xchg
icebp
mov
adc
pop
mov
mov
fbstp
fimuls
out
or
pop
jno
push
push
mov
pop
add
mov
lret
je
dec
gs
outsl
out
inc
dec
mov
loopne
or
clc
out
dec
or
andl
lea
dec
lahf
ficoml
pop
mov
and
pop
pop
sbb
or
xor
cmp
sub
push
outsb
add
jne
mov
imul
outsl
repnz
push
jge
test
cltd
add
les
sub
jmp
push
push
mov
popa
in
push
notb
or
push
stos
mov
shrl
jge
fucomp
jle
std
iret
dec
pop
addb
dec
sbb
loopne
jnp
push
cld
add
sub
orb
add
cmp
das
out
imull
push
dec
pop
mov
mov
and
pusha
out
xchg
mov
pop
push
adc
andl
fucomp
sub
mov
push
jecxz
adc
leave
dec
clc
jb
cli
xor
and
mov
push
mov
fiaddl
adc
inc
testb
push
mov
or
sub
mov
and
lods
aas
das
cwtl
shlb
sub
mov
clc
ret
adc
arpl
add
push
push
sub
test
push
fdiv
add
add
dec
jmp
mov
add
add
js
push
mov
xor
xchg
mov
mov
iret
mov
out
mov
mov
fidivs
pop
inc
sub
ret
mov
pop
or
ficompl
xor
mov
jge
das
mov
push
dec
imulb
inc
jge
mov
xor
rclb
mov
cmp
sbb
pop
jg
mov
mov
or
xchg
gs
lods
cmp
push
mov
inc
push
jmp
pop
stc
pop
pop
dec
add
ret
push
in
pop
adc
test
add
pop
fwait
push
loopne
stc
lahf
push
sbb
push
pop
xchg
aas
mov
or
in
mov
pop
add
jg
mov
mov
sub
rorb
test
test
popa
pusha
pop
jle
and
hlt
outsb
fidivs
fs
clc
loope
jle
mov
bound
or
sbb
sbb
add
dec
scas
fwait
add
sbb
mov
out
adc
push
and
inc
popf
add
jp,pt
dec
lock
xchg
sbb
aad
push
mov
jmp
mov
add
jae
jle
sub
xchg
dec
mov
dec
scas
jbe
stos
sub
inc
lods
stos
pop
pop
mov
adc
jbe
ja
jecxz
insl
push
mov
pop
popf
inc
enter
add
sub
dec
pop
test
repnz
mov
adc
adc
aad
cmpsl
sbb
push
jmp
mov
repz
xor
fxch
int3
mov
popa
push
fnstsw
repz
or
add
or
jo
pminsw
lret
loopne
imull
rcrb
adc
inc
and
jno
push
nop
fs
push
aad
add
ljmp
xlat
mov
add
loop
int3
jmp
jo
bound
jne
or
fmull
mulb
jae
jns
xchg
repnz
pop
sub
in
pop
or
jg
jge
and
inc
or
fcompl
enter
jge
push
push
dec
xchg
jp
push
or
inc
inc
mov
jo
js
mov
xorb
mov
cmc
jmp
xchg
not
or
adc
or
xor
inc
imul
inc
fmuls
aas
add
cmp
enter
push
cmp
push
add
cwtl
call
stos
inc
ja
test
mov
mov
test
add
dec
pop
adc
das
xchg
je
sub
mov
adc
add
jno
or
adc
pop
lods
add
pop
addr16
push
nop
ljmp
adc
inc
dec
or
xchg
pop
mov
jno
js
push
xchg
fldcw
dec
mov
sbb
push
push
xchg
and
imull
adc
clc
pop
icebp
clc
jmp
mov
cld
cwtl
push
pop
jmp
mov
fnstcw
imul
push
popf
fsubs
mov
dec
sarl
scas
lret
mov
scas
aam
dec
shr
ljmp
jae
repnz
and
out
test
xor
lods
pop
inc
sub
stos
add
in
mov
jmp
sub
cmc
pop
add
cli
movsl
adc
insl
push
inc
call
adc
and
cwtl
outsl
sub
lret
daa
pop
mov
xor
sub
jae
popa
mov
mov
add
lock
sub
pop
shr
inc
push
inc
push
add
pop
pop
repnz
out
mov
mov
mov
xor
rorl
testl
mov
lods
dec
mov
mov
add
fscale
jnp
or
adc
dec
push
cmp
xor
scas
pop
add
nop
push
mov
nop
and
pop
sbb
scas
adc
pop
dec
popf
adc
mov
or
inc
cld
mov
push
and
rorb
mov
loope
imul
les
sbb
xlat
xor
cli
sub
cmp
and
loop
xor
jb
xor
cmp
lods
out
and
jl
jle
notb
add
ficomps
lods
cmp
lahf
sbb
pop
movb
or
pop
imulb
enter
shrl
out
pushf
inc
mov
out
jnp
movsb
add
rorb
xchg
dec
loopne
pmullw
sub
or
rol
adcl
sub
mov
pop
ja
pusha
mov
lock
cmp
sub
jb
or
push
xor
add
shl
addb
cmp
test
xor
adc
adc
test
mov
add
jbe
xlat
push
sbb
fsts
jo
adc
xchg
mov
popf
dec
cmp
div
sbb
inc
sbb
movsl
push
rcll
and
sub
push
lea
dec
inc
dec
incl
jmp
push
pusha
pop
mov
adc
mov
push
add
ljmp
mov
jecxz
jmp
clc
test
xor
adc
jl
dec
adc
mov
pop
and
imull
outsl
mov
jbe
push
sbb
adc
clc
gs
hlt
sarl
jp
push
jmp
test
insb
push
sti
or
dec
inc
add
aad
pop
push
cld
pushf
arpl
xlat
icebp
sahf
push
or
lods
dec
push
fisubs
loopne
jmp
cmp
add
hlt
out
pop
jne
scas
daa
xchg
push
adc
adc
adc
incb
sub
loope
fdiv
fdivrs
int
aad
lods
push
aad
outsb
icebp
dec
cmp
pop
lds
sbb
inc
hlt
xor
roll
mov
nop
lcall
mov
js
pop
pop
scas
sub
out
push
pop
inc
or
and
add
mov
sub
ljmp
adc
ljmp
filds
movsl
jno
mov
xorb
mov
inc
or
or
test
mov
xchg
cmp
ljmp
jo
xchg
jae
or
daa
fisttps
insb
pop
imul
mov
enter
aas
lret
pop
pop
adc
outsl
leave
jge
fwait
xchg
cli
fstpt
xchg
addl
pusha
adc
xchg
mov
inc
mov
mov
popf
shlb
cmp
mov
add
mov
sub
dec
aas
mov
inc
inc
sarb
add
jmp
jae
popf
inc
and
mov
cmp
cli
repz
cmp
std
addl
add
out
jnp
dec
inc
jns
and
pop
out
jne
stc
cmp
decb
jbe
xorb
jge
das
out
pop
cmp
js
mov
lcall
sub
or
mov
cmpsl
pop
cmp
je
push
arpl
mov
mov
leave
push
pop
icebp
or
jl
rclb
shl
jo
sbb
ret
pop
add
rcll
loope
jbe
sub
jl
out
jmp
das
pop
or
and
shrl
cmp
jmp
cmc
repnz
popa
inc
in
movb
mov
scas
sarb
cmp
je
dec
xchg
fimull
stos
dec
lods
jle
cld
scas
mov
mov
mov
sar
sub
jmp
push
jae
or
adc
cwtl
loope
mov
mov
je
xchg
mov
sarl
xor
mov
loopne
insb
out
add
les
movsb
mov
inc
stos
inc
fnstsw
nop
xchg
or
pusha
gs
pop
pop
and
aam
and
jle
add
push
push
sub
mov
adc
push
cmc
fistl
jno
ja
add
xchg
jbe
incl
jo
in
xor
cmp
mov
add
jg
imul
or
xor
sahf
jle
cmc
xchg
lock
cmc
xor
push
cmp
lods
rolb
imul
add
xor
pop
add
push
and
clc
add
jmp
mov
mov
push
sub
mov
sbb
and
cmc
and
and
add
push
aas
rcrb
and
mov
cmpl
add
in
movsb
addl
mov
js
mov
sahf
or
jae
add
orb
ljmp
or
out
inc
jmp
ja
daa
push
cmc
iret
cmpsl
addr16
pop
in
xchg
mov
das
pop
sbb
and
pusha
push
add
mov
sub
jns
pop
sarl
ror
inc
call
test
jnp
inc
add
push
stc
test
and
jo
dec
xor
push
push
bnd
pop
aas
adc
or
adc
add
mov
or
rcrl
pop
pop
add
cmp
divb
mov
add
cs
mov
push
mov
lods
cld
push
adc
lahf
push
dec
add
push
cs
or
je
ret
or
hlt
fcmovu
adcb
fbld
lret
pusha
jbe
jno
pusha
mov
adc
mov
popf
testl
frndint
sub
jnp
mov
pop
pop
repnz
scas
mov
inc
jmp
jne
xchg
pop
pop
aas
int3
popa
das
mov
pop
fisubrs
mov
sub
pushl
xor
ljmp
testl
mov
adc
orb
call
and
fildl
jmp
and
add
shlb
jb
sub
push
out
loop
push
inc
scas
in
mov
int3
and
mov
ja
cmp
add
jl
lock
jnp
add
sbb
mov
mov
add
push
jb
loopne
popa
add
add
fcompp
cmp
mov
mov
dec
into
sub
fs
mov
pop
xorb
adc
pop
jo
iret
cmp
mov
mov
xchg
push
sub
mov
pop
dec
mov
ljmp
add
nop
fisubrl
addb
lds
push
adc
js
xor
addl
push
push
jp
or
out
clc
pop
add
in
lock
mov
pop
adc
pop
jmp
or
push
sbb
movsl
roll
jecxz
mov
xor
jmp
loope
mov
pop
and
dec
xchg
mov
push
test
rcll
pop
add
jle
fdiv
xorl
cmp
push
cmpsl
addr16
pop
jne
inc
mov
sub
or
inc
jne
push
and
sbb
jl
or
stos
add
into
jbe
pop
push
in
call
or
jno
or
pop
popf
jl
pop
ret
out
and
add
push
mov
fisttpl
aam
mov
mov
push
mov
iret
cmp
std
inc
push
xchg
jae
sub
xchg
je
jmp
push
dec
add
and
jno
std
jae
jo
nop
sti
daa
ret
mov
and
or
bound
xchg
add
pop
pop
call
adc
scas
cmp
mov
dec
push
mov
rcrl
xchg
xor
mov
mov
sub
test
dec
cmc
loop
mov
add
hlt
mov
shlb
push
nop
mov
movsl
imul
mov
shl
std
add
shl
and
adc
sub
out
nop
lock
jg
dec
sub
sbb
adc
jb
shr
and
pop
imul
pop
enter
xor
shrl
xchg
popa
out
dec
push
shrl
jge
nop
inc
push
pop
mov
or
or
adc
scas
mov
shll
pusha
jg
pop
sti
inc
shr
sbb
js
popf
popa
mov
enter
mov
inc
mov
int
ds
call
bound
push
sub
sub
push
or
pop
test
or
jmp
sub
sbb
push
or
add
jmp
imul
rcll
imul
jmp
repnz
test
mov
xlat
pop
mov
jmp
push
jmp
pop
negl
out
sbb
mov
push
mov
daa
pop
sti
xor
push
inc
add
inc
cs
jne
movsl
xor
add
and
and
xchg
pop
sub
ss
stos
cmp
push
pop
adc
mov
rcrl
out
add
cmp
outsl
and
and
dec
and
add
je
xchg
out
and
inc
fidivrs
jp
es
lods
pop
rcr
and
pop
out
sarb
add
push
pop
lock
mov
shlb
loopne
aaa
xor
cmp
jecxz
call
pop
pop
pop
inc
sbb
mov
mov
dec
mov
dec
lahf
and
push
mov
dec
decl
test
and
push
push
mov
and
cmp
pop
in
sub
aad
and
or
js
push
pop
jno
sbb
inc
bound
mov
inc
cmpb
pop
scas
in
imul
in
adc
mov
jmp
inc
loopne
inc
popa
mov
call
pusha
je
cli
repz
je
cli
out
sub
dec
jmp
jecxz
test
jg
push
push
add
or
pusha
fstps
ds
and
cmp
mov
pop
inc
add
jns
mov
push
clc
adc
inc
clc
sbb
lahf
rcrl
pop
cmp
scas
xor
pop
outsl
dec
shrl
cmp
sbb
mov
cmp
lds
xchg
orb
jbe
mov
movsb
xchg
out
mov
sub
cs
cmp
icebp
shr
push
add
jg
or
push
shr
jmp
push
or
sub
loop
scas
pushf
mov
hlt
xchg
pop
outsb
mov
out
cmp
dec
or
add
push
ljmp
xor
pop
scas
inc
sarb
pop
lods
xor
cmp
mov
lahf
aas
ljmp
clc
push
jns
leave
push
add
jmp
pop
sub
popf
push
push
xchg
mov
dec
push
cli
jl
xlat
mov
je
jmp
xor
div
add
bound
mov
add
mov
xor
push
push
pop
jne
and
add
xor
or
or
icebp
das
loop
or
jno
inc
sub
push
add
add
sub
or
xchg
push
aad
dec
push
mov
roll
sub
xchg
shrb
aas
test
shrl
ficomps
jge
rol
jmp
adc
sub
inc
das
lret
or
or
add
ficoms
lds
mov
add
loope
mov
add
aas
jmp
mov
and
adc
jmp
mov
sub
adc
mov
fimuls
sti
pop
dec
cmp
mov
or
push
mull
fnsave
ss
xor
hlt
stos
add
adc
adc
sbb
or
dec
cmp
jmp
les
cltd
das
cs
mov
add
sub
cmp
imul
push
push
in
imul
aam
lds
adc
cmc
cs
push
push
pop
and
inc
xchg
pop
out
xlat
in
xor
aaa
rorl
loope
outsb
loop
mov
mov
sub
fcoms
movsl
cli
lret
cmp
movsb
inc
nop
or
insl
dec
lock
stos
cmc
in
fst
jg
or
push
pop
lea
icebp
add
fcoms
push
push
lock
cmp
scas
xchg
jge
sub
mov
and
dec
lret
repz
and
icebp
je
cmp
add
hlt
mov
xchg
and
call
call
xchg
mov
pop
inc
jmp
mov
push
xor
jns
jl
scas
sbb
mov
and
not
inc
jne
xchg
pop
jns
sbb
cmp
xchg
or
ja
int
xlat
push
addl
add
sbb
fmuls
push
jg
push
pop
aad
jecxz
mov
shlb
outsb
aas
xchg
push
sub
mov
push
dec
dec
loope
add
pop
push
xor
lret
xchg
push
xchg
pop
into
shrl
xchg
jmp
inc
jo
ret
mov
in
or
push
and
add
pop
rcrb
pop
pushf
push
pusha
add
push
pop
fsubr
jle
bound
scas
insb
shl
push
cmc
ds
push
xchg
jmp
mov
nop
and
cmp
jmp
inc
inc
mov
mull
inc
push
push
mov
mov
imul
dec
mov
cmp
mov
and
ret
repnz
and
jmp
ds
xchg
jns
sub
jo
int3
mov
push
push
inc
data16
xchg
inc
jmp
xor
sub
sub
hlt
scas
mov
shrb
jne
mov
xorb
test
sub
push
dec
out
fwait
inc
dec
jge
lea
ljmp
int
pop
add
sub
enter
fdivrl
in
or
mov
std
in
adc
aad
out
mov
aas
push
jp
mov
jle
push
or
jae
popa
inc
or
jmp
fwait
rcrl
inc
jmp
arpl
adc
or
and
pshufw
add
je
fsubrp
jl
xchg
xchg
push
xlat
push
fimuls
add
imul
inc
jmp
mov
mov
sub
shlb
cmp
pop
call
sarb
mov
test
xchg
inc
cmpsl
dec
dec
fnstcw
cmpsl
daa
push
xor
dec
pop
add
inc
aad
pop
cmp
fsubl
lea
pop
inc
aam
sub
or
test
jne
xchg
bound
push
test
jecxz
mov
addr16
divl
scas
pop
mov
pop
mull
mov
sahf
idivb
sub
fimull
add
pop
jmp
and
sub
ret
aam
das
pop
and
roll
fmull
addb
and
adc
and
in
les
mov
adc
adc
stos
xchg
push
dec
cmp
ret
int
inc
xlat
inc
xchg
fcom
adc
or
dec
inc
cmp
pop
filds
or
ret
jnp
sub
mov
jmp
sub
xchg
jns
mov
cmp
push
ret
movsl
adc
stos
inc
nop
pop
pop
xor
and
repnz
icebp
out
rcrb
xchg
pop
iret
ds
sub
cmp
leave
or
push
jg
lea
pop
lds
fistps
int3
sub
jmp
movsb
pop
jmp
fnstsw
sahf
pop
lock
pop
pop
cwtl
sbb
mov
stos
std
mov
pop
not
push
or
push
test
lret
adc
sbbl
push
xchg
inc
or
add
popa
push
rol
push
clc
push
dec
lock
dec
int
adc
xorb
nopl
mov
inc
test
xor
jmp
lds
leave
adc
pop
mov
insl
sbb
or
adc
lds
data16
xor
in
or
dec
sbb
dec
xchg
or
cmp
pop
outsl
xchg
push
push
jns
mov
push
mov
mov
sbb
pop
push
out
add
cmp
xchg
dec
mov
sti
add
push
sub
adc
in
inc
push
or
add
jmp
pop
dec
jb
bnd
repnz
inc
mov
push
ret
mov
or
cld
and
fnstenv
lds
cli
and
outsb
lods
inc
adc
push
mov
into
ficoml
adc
and
and
sub
outsl
mov
gs
test
test
incb
jo
add
sbb
mov
xlat
pop
xchg
shrl
mov
adc
dec
cltd
push
gs
xchg
xorb
push
popf
pop
xchg
pop
orb
cmp
or
loop
lock
pushf
bswap
mov
fmuls
xor
imul
cmpsl
and
push
sahf
or
jge
aad
jl
jo
jmp
pop
dec
sbb
lock
cs
mov
push
cmp
jg
mov
push
pop
push
cmp
cmp
xchg
sbb
gs
cld
and
call
xchg
pop
push
inc
dec
or
inc
in
mov
lods
sbb
loop
xchg
push
inc
add
sub
and
push
jo
xlat
mov
ljmp
add
out
fs
and
pop
popf
enter
lcall
test
dec
fdivs
or
and
push
test
adc
add
xchg
shrb
push
insl
icebp
fildll
push
pop
push
xor
xlat
inc
scas
pop
pop
and
sbb
iret
mov
aam
sbb
sub
test
or
pop
testl
mov
sub
dec
jmp
jne
cld
test
jmp
mov
dec
dec
push
imul
and
popf
repz
pop
pushf
add
adc
jl
and
inc
or
dec
inc
add
sub
sub
cmp
jmp
ss
adc
jl
pop
nop
test
push
push
fadds
pop
jmp
imul
push
shrl
push
mov
sbbl
adc
fsubs
stos
paddd
divb
xor
push
out
imul
clc
rcll
adcb
and
jmp
mov
movsl
ja
xor
mov
std
lcall
cld
loopne
push
push
pop
mov
das
aad
cmp
xchg
push
mov
leave
xor
mul
mov
push
mov
sti
jo
jmp
add
mov
pop
pushf
mov
imul
xor
lods
or
xchg
xchg
or
cwtl
jmp
pop
mov
shl
mov
push
add
mov
add
imul
nop
push
mov
sbb
std
or
cmc
xor
jnp
in
lds
loope
les
push
add
mov
cmp
pop
outsl
dec
dec
cmpsl
dec
sarl
inc
dec
js
cmp
add
push
inc
adc
jp
push
fisttps
repnz
hlt
outsl
and
ja
ljmp
sbb
jg
enter
add
push
and
aaa
mov
push
or
push
sub
pop
pop
out
add
xor
neg
cmp
mov
inc
jmp
mov
push
jae
add
push
jmp
add
in
shr
xor
cmp
mov
sub
sbbb
jle
mov
mov
jle
jge
add
call
and
xor
sbb
cmp
dec
add
int3
add
cltd
es
adc
stc
out
out
inc
or
data16
cmp
fnstsw
daa
jbe
ret
cmc
mov
mov
ret
push
mov
xor
push
or
pop
pop
inc
js
stc
xchg
nop
cmp
fs
nop
ret
pop
xchg
icebp
push
ja
xor
pusha
push
mov
int
loope
decb
pop
add
jge
inc
sbb
jbe
mov
mov
push
test
jecxz
sub
mov
add
jge
adc
cmpsl
or
mov
sbb
add
imul
notb
jns
dec
jbe
add
shl
sub
popf
push
fidivl
jmp
arpl
inc
lods
imul
add
and
rorb
dec
xor
ret
inc
hlt
int
pop
addr16
inc
test
gs
test
push
pop
push
adc
jmp
push
pop
scas
sub
dec
daa
push
fdivrp
cli
std
sti
in
dec
test
repnz
cld
notb
movzwl
add
adc
sub
loopne
or
mov
mov
xor
fcoms
popf
lds
jmp
mov
adc
fwait
push
dec
jmp
negl
lods
lcall
aas
mov
ja
fists
rcrl
mov
dec
adc
jmp
or
push
bound
push
and
inc
or
or
leave
sub
test
push
ljmp
pop
mov
sub
push
pop
xorl
mov
pop
loop
shrb
cmp
mov
ret
mov
dec
jmp
jne
in
and
mov
test
cltd
jle
out
test
mull
cltd
push
add
pop
add
mov
popf
sti
push
dec
jecxz
xchg
scas
xor
inc
repnz
xor
xlat
add
mov
fs
or
mov
mov
fildl
ss
je
aas
outsl
lods
xor
mov
sub
and
dec
xchg
push
leave
sbb
or
jle
mov
sbb
jmp
in
jge
aas
and
sbb
fcompl
mov
sti
das
jge
push
add
js
jle
inc
push
movsl
aas
mov
outsb
shr
and
fidivl
or
mov
sbb
mov
js
push
das
add
out
jne
or
in
add
in
rorl
imul
andl
adc
arpl
dec
cmp
in
push
pop
push
inc
pushf
mov
sahf
xor
jmp
add
and
mov
stc
push
loop
mov
xlat
jmp
fiaddl
pop
xor
fwait
and
sub
cwtl
mov
sub
pop
pop
and
mov
rcll
push
in
jmp
pop
jg
dec
push
xlat
xor
or
push
scas
inc
orb
dec
sub
loopne
mov
cmp
jnp
popa
data16
xchg
jmp
xchg
imul
cld
bound
or
add
xchg
xchg
jb
dec
imul
shl
enter
lods
fwait
and
push
loopne
shr
add
xchg
sub
and
xor
push
pop
xchg
pop
lods
lods
push
nop
movsl
aas
loopne
imul
push
orb
xor
lret
or
adc
and
push
inc
pop
push
jl
sub
std
inc
xorl
and
jnp
push
and
jl
push
dec
push
push
mov
mov
loope
xlat
pop
add
popa
data16
push
repnz
inc
sbb
xor
lahf
sub
movsb
fmuls
int3
movsb
adc
adc
sbb
push
mov
or
push
adc
add
add
call
stos
sub
mov
pop
bound
mov
decb
jl
pop
aad
push
inc
lods
sub
mov
add
arpl
inc
std
lds
mov
lret
and
jecxz
in
inc
cli
idivl
jmp
push
pop
adc
or
or
imul
xor
aad
mov
inc
push
mov
jne
dec
adcb
rolb
sbb
test
ljmp
lret
sbb
popa
jl
pop
mov
add
xor
pop
std
out
mov
into
out
sub
push
cmpsl
jge
cmp
lcall
pop
pop
shll
dec
std
jno
xchg
pop
stos
sub
gs
data16
xor
adc
out
pop
mov
xor
mov
cmpsl
mov
sub
outsl
cmp
addr16
mov
pop
push
cli
lea
in
stc
daa
and
cli
mov
mov
pop
rol
dec
lret
sub
sub
jmp
notb
js
mov
test
push
lahf
cld
arpl
dec
or
outsl
push
icebp
in
mov
xchg
inc
shrl
notb
ret
movsb
dec
outsb
sub
lcall
mov
xchg
shlb
lahf
icebp
mov
loope
jb
movsb
icebp
dec
inc
ret
dec
pop
fldenv
sar
scas
xchg
insl
pop
push
add
inc
or
mov
mov
mov
scas
leave
pop
add
and
mov
pop
xor
insb
mov
das
or
mov
fildl
sbb
outsb
adc
push
or
iret
add
stos
aas
push
and
xchg
push
icebp
pushf
xchg
int3
stos
into
arpl
stc
push
pop
mov
adcb
cmpsl
mov
orb
sbb
jg
das
push
arpl
inc
jo
adc
xor
mov
andb
jge
pop
jmp
repnz
not
or
jecxz
ret
pop
mov
sub
add
mov
sti
test
pop
sub
sub
jp
and
add
push
push
in
bound
rcl
dec
push
xchg
xor
sub
stc
nop
xchg
mov
imul
sbb
bnd
or
lds
inc
test
daa
inc
pusha
idivb
jg
add
push
in
jl
addl
mov
pop
pop
popa
ret
or
dec
decb
jg
xchg
lods
pop
xchg
in
inc
js
int3
add
cmp
test
repnz
fnstenv
pop
jg
mov
cmp
lret
rcll
mov
inc
xchg
xor
repnz
xchg
test
or
repz
sub
mov
inc
dec
cld
imul
xor
inc
out
add
push
mov
mov
sub
adc
popa
and
or
jecxz
add
sub
loop
add
adc
lods
test
xorb
jns
cli
pop
lock
sub
fisttps
jmp
or
mov
pop
mov
inc
push
mov
dec
push
jmp
mov
addl
sub
inc
push
add
cmp
mov
xor
jo
ret
add
sbbl
in
jno
add
pop
test
add
aam
icebp
cmp
dec
xchg
cltd
or
cmp
icebp
pop
mov
nop
xor
mov
loope
lret
arpl
out
add
add
lcall
movsb
push
mov
sbb
jmp
cltd
subb
mov
and
sub
jge
push
adc
or
and
mov
jb
test
out
add
add
lods
or
inc
inc
cmp
mov
jg
cwtl
add
mov
xchg
push
push
rorb
inc
negb
xlat
rolb
out
or
movsl
sub
sti
in
mov
adc
push
push
loopne
xchg
add
mov
xor
push
dec
icebp
inc
adc
pop
add
mov
push
not
sahf
or
inc
inc
call
mov
push
push
leave
fdivs
mov
mov
adc
mov
orl
push
add
vpxor
pop
pop
lds
dec
pop
xchg
mov
lods
dec
in
dec
mov
jl
fnstcw
push
subb
cmp
xchg
aad
lret
xchg
push
push
or
mov
stc
test
stos
add
movsl
push
movsb
and
sbb
cmp
jo
lahf
shrb
jmp
push
jmp
inc
pop
add
addr16
xchg
mov
or
gs
sub
jno
loopne
bound
out
and
out
rorl
adc
fadds
jg
or
cmp
movsl
shrb
int3
subb
sub
jns
inc
addr16
mov
xor
mov
je
pop
lock
jmp
cltd
insb
pop
imul
out
push
inc
lret
jl
add
mov
xchg
cwtl
push
ss
mov
sahf
inc
jge
pop
mov
movsl
jae
incl
jmp
sbb
nop
dec
cs
in
mov
dec
rclb
adcb
add
clc
mov
add
test
sarl
sti
push
les
and
jmp
mov
xor
mov
inc
or
pop
out
add
xor
jb
dec
jmp
fldl2t
mov
add
mov
repz
lods
push
nop
mov
loop
pop
cli
adc
lahf
mov
mov
jmp
gs
adc
push
mov
test
into
dec
bound
pop
loopne
mov
sub
mov
unpcklps
jmp
xor
lods
hlt
rorb
ret
xchg
inc
jge
cmp
jmp
repz
push
push
push
jmp
or
inc
inc
repnz
pop
inc
cvttps2pi
cmp
push
cmp
or
bound
or
shr
sbb
jae
pop
xchg
xchg
shll
inc
inc
xchg
jns
or
aam
lock
andb
and
or
jbe
or
mov
pop
in
not
xor
add
pushf
fidivl
jmp
push
jns
mov
fsubr
mov
jp
pop
or
insb
movsl
aad
xchg
or
mov
pop
scas
xchg
std
pop
adc
in
push
push
sbb
ljmp
xor
imul
mov
leave
add
fldenv
and
push
fsubr
mov
cmp
sub
pop
fadd
add
push
jne
push
xchg
adc
loope
push
sub
jg
mov
das
mov
mov
adc
sub
mov
xchg
sub
dec
fnstenv
mov
test
mov
test
xorb
push
add
sub
push
mov
mov
dec
mov
fbstp
icebp
repz
jnp
insl
add
pop
out
xchg
or
adc
pop
push
leave
lret
add
mov
push
mov
in
sarl
leave
jl
aas
loope
div
jmp
push
xchg
xor
hlt
fs
xchg
lcall
fs
mov
mov
mov
push
mov
cmp
lock
mov
xchg
fbstp
and
mov
lds
pop
push
mov
ret
jmp
sub
int
les
outsl
out
push
push
mov
push
dec
inc
ret
rol
cmp
inc
mov
and
jge
sbb
js
mov
mov
mov
or
mov
add
sbbb
add
push
pop
stos
push
std
jns
scas
push
ds
enter
outsl
mov
xchg
das
ljmp
sub
mov
popf
inc
dec
lods
hlt
pop
aaa
ret
jne
int3
stos
and
mov
idivb
in
movl
and
pop
jmp
push
xchg
in
rcll
repz
stos
pop
lcall
inc
cmp
loopne
std
add
push
and
out
test
les
cmpsb
pop
shll
push
xchg
adc
movsl
andl
adc
out
xor
mov
pop
lods
stos
add
loope
push
xor
xchg
das
sub
xor
xchg
hlt
mov
push
jle
lahf
inc
inc
push
add
into
or
sbb
push
push
xor
mov
fistps
push
add
fisubl
or
ret
and
data16
sub
cmc
cmc
ds
and
mov
sbb
mov
outsb
mov
dec
loope
cs
je
add
jbe
xor
icebp
push
and
xchg
cli
popa
inc
stos
decb
adc
fsubr
out
out
push
clc
pcmpeqw
and
cmc
fbld
test
outsb
je
mov
lock
inc
cmpsb
adc
ret
add
or
mov
dec
shl
jmp
pop
push
stos
xchg
xor
dec
add
das
aaa
test
mov
and
jno
das
mov
jno
jns
das
lea
rcll
mov
sub
imulb
mov
add
lock
ds
pop
sub
add
or
add
or
or
mov
pop
inc
add
lret
sub
jmp
and
pop
mov
cmc
xchg
cltd
and
js
jmp
and
test
mov
fwait
test
add
mov
pop
adc
ja
xchg
rcrl
call
adc
and
sete
sub
mov
adc
pop
lret
sti
add
fistl
cs
orb
sbb
push
xchg
mov
cmp
xchg
push
mov
mov
pushf
cwtl
add
sub
xor
mov
std
xlat
lret
or
xchg
jo
mov
sub
and
pop
sub
xorb
outsl
jno
or
enter
jne
pushl
fwait
adc
leave
insl
push
mov
ss
stc
call
js
push
xchg
pop
das
jmp
xchg
daa
push
push
cwtl
sub
add
out
pop
sub
ds
pusha
mov
pushf
cmpsl
adc
insl
cmp
adc
add
loope
push
or
imul
dec
sbb
sub
or
adc
mov
sub
cmp
insb
scas
jp
jne
pop
test
add
pop
rcll
mull
pop
add
sbb
mov
roll
jmp
add
lds
push
inc
adc
and
pushf
std
sarl
mov
push
in
out
addr16
imul
xchg
add
push
sub
shlb
outsl
add
cmp
arpl
lods
decl
aam
lds
jb
std
aas
mov
fidivl
cmpsb
add
sbb
push
test
jle
sarb
inc
dec
or
inc
daa
mov
mov
push
mov
and
pop
mov
mov
jmp
arpl
nop
scas
imul
sbb
outsb
lock
stc
jp
pushl
insb
jmp
jmp
test
mov
or
push
push
and
pop
mulb
js
loop
xorb
add
ret
inc
xchg
or
mov
divb
add
push
push
add
imul
xchg
repz
stos
test
mov
and
and
and
pop
das
fwait
mov
icebp
cmp
inc
xchg
and
pop
jmp
scas
mov
xchg
inc
lret
pop
dec
adc
sbb
dec
adc
andb
or
push
jmp
and
gs
and
sub
subb
rolb
test
and
and
and
xor
sbb
xlat
xchg
enter
ljmp
xorb
adc
lds
sbb
sbbb
ret
push
adc
out
or
cmp
fisttpl
gs
or
or
faddl
push
add
push
add
push
add
push
add
lods
sbb
xor
sub
test
jbe
adc
or
sbb
mov
inc
mov
in
out
add
pusha
or
adc
sbb
arpl
or
aas
sbb
cmp
or
xchg
push
fdivs
push
test
cmp
adc
ds
mov
das
in
test
movsl
mov
jl
cmp
sti
and
fisubl
loope
cld
add
inc
loope
add
sbb
in
add
enter
or
mov
loope
xchg
frstor
adc
clc
out
push
cmp
aas
add
addl
or
and
cs
movsb
or
popa
in
adc
push
sub
gs
xlat
inc
mov
scas
or
iret
xor
inc
adc
insl
lods
and
xchg
lret
arpl
cmp
loope
or
mov
pop
mov
or
jle
int3
pop
dec
or
leave
cmp
cmpsb
nop
fbstp
pop
and
cltd
or
sbb
and
sbb
add
add
mov
dec
jo
adc
test
cli
mov
bound
xchg
or
insb
faddl
cmp
enter
xadd
int3
or
stos
push
xchg
lock
nop
nop
mov
pop
add
lret
push
or
fwait
dec
arpl
les
sub
push
sar
pop
or
push
aas
shr
jp
mov
test
sbb
call
mov
test
jmp
pop
aad
and
mov
lds
xor
rcr
out
loopne
sub
add
rcll
jbe
jo
push
inc
jmp
jmp
into
pop
dec
push
add
xor
add
xor
pop
rcrb
cmp
rclb
push
cmp
and
ja
add
fiaddl
lahf
pop
or
dec
jo
mov
mov
int3
dec
add
xor
mov
mov
sub
xor
jnp
push
push
jmp
test
jmp
sub
outsb
and
lcall
outsl
push
inc
mov
out
jbe
mov
jg
lds
addr16
jbe
add
jmp
mov
test
pop
xchg
sbb
xor
or
dec
out
pop
sub
push
push
sbb
sarl
aas
xor
sub
shrl
cmp
cli
jae
lods
outsl
and
sbb
jle
mov
gs
cmp
add
cmpsl
mov
scas
imul
sti
and
loopne
or
jns
inc
out
mov
outsb
mov
jp
add
push
pop
inc
shl
js
add
gs
mov
test
loopne
xchg
cltd
aas
sarl
add
sub
sbbb
add
sub
xor
je
sahf
xchg
jnp
mov
movsl
pop
dec
popf
imul
push
or
mov
pop
push
jge
jns
ret
sub
ffree
jmp
mov
mov
and
dec
pop
pusha
mov
mov
lcall
addr16
das
fstp
add
inc
push
cld
jno
inc
xor
inc
inc
mov
sub
sbb
js
mov
sub
add
push
ljmp
cmp
push
and
add
lods
das
not
push
pop
or
cmp
push
andb
in
scas
adc
ficompl
mov
mov
jmp
mov
mov
fnsave
cmp
js
sarb
adc
push
and
sub
xor
xchg
fstps
inc
jns
add
xor
xor
push
pop
enter
test
push
fwait
lea
in
pop
adc
rolb
cmp
enter
or
fmuls
cmc
xor
jmp
mov
shrl
jg
sbb
int
movsl
jle
outsb
cmpsb
xor
lea
push
mov
stos
in
movb
or
xchg
cmp
cmp
movsl
test
fsubrl
add
test
popf
and
cmp
mov
mov
xchg
dec
mov
push
fisttps
pop
adc
jo
ja
xchg
dec
rcrl
jmp
xor
sub
push
or
test
jle
add
lea
jmp
mov
pusha
inc
jno
mov
add
push
mov
ss
xorb
sub
sub
cmp
or
and
jbe
sbb
fbstp
or
mov
sbb
pop
jns
shr
adc
loopne
aad
add
and
add
ret
popw
push
push
mov
push
cmp
stos
sub
mov
mov
pop
fucom
xlat
add
cld
sub
scas
fst
arpl
or
adc
in
cmp
jmp
loopne
je
imul
add
in
add
add
scas
mov
push
popa
flds
cld
or
lret
sub
pusha
roll
push
mov
add
inc
jbe
in
popa
ja
push
jnp
js
gs
dec
mov
jno
jmp
loop
lahf
jno
out
jo
sub
xorb
dec
sbb
test
ds
ja
push
or
adc
adc
dec
push
add
inc
xor
push
pop
or
pop
push
sahf
hlt
xchg
aad
pop
push
adc
jmp
push
lret
mov
cmp
adc
inc
inc
pusha
das
in
xlat
mov
loope
adc
mov
jns
adc
push
fnstenv
mov
inc
jns
pop
pop
sub
mov
stos
sbb
pop
push
add
out
leave
xor
add
test
mov
pop
xchg
add
fisttpll
leave
dec
mov
ret
imul
ja
out
mov
pop
enter
xchg
jg
dec
aas
lret
ret
inc
sub
es
jge
adc
jg
inc
shll
cld
inc
mov
mov
pop
push
in
rclb
adc
add
lods
sub
and
jle
daa
stos
jg
stc
out
std
push
fs
sbb
pop
dec
mov
jmp
adc
dec
sub
shrb
xchg
sub
push
mov
mov
or
dec
clc
mov
test
test
cwtl
adc
push
loopne
lods
mov
and
add
inc
add
dec
nop
dec
addr16
scas
ljmp
mov
jmp
mov
loope
pop
jae
dec
push
pop
add
hlt
scas
psrld
xor
neg
rol
xor
pop
sub
or
lds
mov
lock
mov
loop
push
jns
orl
outsb
cmp
jmp
divl
xchg
clc
mov
inc
jo
sub
std
imulb
pop
mov
dec
prefetcht2
je
sahf
and
loop
add
pop
cli
roll
adc
jge
in
pop
pop
cmp
je
or
pop
mov
in
imul
lods
pop
mov
jle
and
rclb
push
push
mov
adc
std
daa
jmp
mov
repz
std
daa
out
fldcw
in
jg
cmc
sti
mov
mov
arpl
stos
mov
popa
and
mov
push
xor
jae
mov
sub
neg
rolb
icebp
imul
add
jmp
imul
push
push
mov
in
xor
jmp
push
jne
data16
xor
and
pop
mov
or
mov
sbbl
insb
fwait
inc
adc
insb
pop
insb
sub
pop
adc
mov
mov
xor
inc
pop
cmpsl
jle
add
cmp
jmp
cmp
mov
cmovs
loop
and
lods
stos
or
cmpsl
arpl
pop
dec
and
push
sbb
std
jmp
nop
push
idivl
or
ds
popa
sub
adc
jmp
cmpsb
clc
mov
pop
cmp
in
cmpb
sbb
repz
imul
adc
dec
pop
xor
xor
cwtl
and
fnstenv
sub
push
jbe
test
shl
cmp
dec
xor
and
mov
into
addr16
stos
push
inc
jp
mulb
mov
jmp
ret
mov
add
pop
push
add
mov
mov
fucomi
cmp
stos
out
jo
stos
xlat
push
mov
movsb
dec
insl
mov
insb
cmp
ret
lock
push
das
sbb
jo
add
das
out
int3
leave
cmpsl
dec
add
movlps
push
pop
mov
out
xchg
dec
js
pop
push
mov
sbb
out
add
push
pusha
mov
mov
mov
rcrl
ja
dec
jmp
cmp
mov
ds
jns
xor
xchg
add
sbb
mov
adc
hlt
sub
popa
movsl
lahf
test
lahf
mov
mov
or
sbb
mov
push
dec
add
push
stos
popf
hlt
push
push
cmp
mov
outsl
add
ret
cmp
aam
jp
inc
stos
dec
divl
cli
push
push
lahf
pop
and
push
jecxz
push
adc
fcomps
ret
sbb
fisttpl
or
aas
mov
xor
popf
or
inc
jmp
neg
dec
push
test
push
sbb
mov
int
or
push
xor
inc
jmp
pop
insb
out
sahf
inc
mov
sub
repnz
aad
inc
rcll
sahf
test
inc
mov
aaa
cwtl
cld
pop
or
push
sub
inc
movsl
dec
ljmp
mov
xchg
jne
jp
in
mov
add
scas
pop
das
add
mov
stos
push
jbe
lcall
lods
jle
into
pop
shrb
lods
dec
inc
pop
divb
lock
stc
shrb
das
jae
push
push
test
call
in
lds
or
mov
test
mov
sbb
cmc
je
call
inc
outsb
outsb
xchg
fildl
out
outsl
jmp
test
add
aas
imul
mov
stos
bound
pop
mov
pusha
add
dec
push
jl
loopne
jmp
add
sub
jge
pop
push
dec
outsb
data16
sbb
addr16
sbbb
inc
das
and
adc
add
ds
add
push
dec
sub
call
and
setae
jle
mov
mov
icebp
add
or
jns
push
push
cld
cmp
or
or
dec
xchg
mov
shlb
mov
jbe
xchg
push
setne
shl
nop
fwait
inc
addb
push
aas
divl
out
dec
subl
cmp
cmp
pop
ret
jns
xchg
pop
mov
popf
inc
dec
or
std
mov
or
jae
add
mov
lods
push
loope
stos
ret
addr16
jo
outsb
or
shrb
jmp
into
sbb
mov
jno
insb
dec
push
xchg
and
push
add
sub
sbb
dec
pop
push
pop
test
xor
pop
lret
ja
jle
add
inc
sub
adc
stos
jne
ficoms
scas
aad
fs
push
inc
xor
dec
rolb
pop
jecxz
and
adc
jg
nop
das
inc
mov
jg
sbb
call
rcl
sub
sub
aas
mov
data16
mov
pop
pop
adc
mov
mov
and
sarb
or
scas
andl
inc
push
add
cmp
rcrl
xor
add
pop
dec
das
mov
mov
push
aad
fstl
sub
rcll
sub
and
nop
icebp
jle
cmp
cli
or
imulb
test
add
pop
sub
xchg
loopne
aam
hlt
mov
and
sbb
imul
mov
push
xor
push
push
xor
lds
xor
push
jp
dec
add
fildl
or
mov
cmp
icebp
mov
and
cwtl
mov
in
adc
pushw
int3
in
les
gs
xor
mov
and
push
or
inc
pop
adc
jmp
mov
xchg
sub
fs
pop
roll
out
sbb
sub
repz
lods
neg
mov
dec
ficoms
push
jnp
shr
and
cmpsl
mov
imul
fcompl
enter
push
dec
addr16
adc
in
shll
dec
and
sub
popf
inc
into
xchg
sbb
adc
push
sbb
sub
adc
in
mov
cmpsl
addr16
jnp
xor
inc
xchg
mov
imul
sti
lret
inc
nop
jle
jmp
pop
outsb
jmp
and
jmp
or
repnz
xor
jmp
mov
mov
add
lods
mov
bnd
jl
js
jnp
add
add
sbbl
pop
mov
mov
jmp
das
and
push
mov
fisubs
cmpsl
test
repz
add
pop
jnp
dec
xor
jl
mov
mov
sahf
punpckhbw
js
push
sub
jmp
call
sbb
fmuls
inc
pop
movsl
xor
addr16
cmc
xchg
mov
jno
repnz
add
cli
jmp
into
xlat
adc
test
js
sahf
scas
test
lret
add
push
mov
and
dec
andl
jp
dec
dec
xchg
rcll
cld
imul
xchg
je
push
dec
js
jmp
push
or
roll
in
jmp
in
dec
mov
push
jno
ja
test
jmp
sub
sbb
adc
dec
mov
stos
add
mov
mov
sub
jns
add
call
jb
insl
lahf
jno
ds
test
pusha
cld
mov
or
add
mov
or
cmp
sbb
sub
xchg
add
cwtl
jns
repz
jmp
pop
adc
repnz
arpl
jo
rclb
imul
lret
dec
fs
adc
dec
push
jmp
in
adc
jle
out
pop
bound
xlat
mov
test
out
imul
jb
inc
in
sub
test
std
in
or
sub
or
add
xor
popa
std
pop
adc
rcll
inc
mov
rcrl
mov
dec
push
xlat
fstpt
or
inc
mov
jno
add
jp
add
sbb
and
xchg
cmp
xor
and
or
sub
dec
ss
int
or
jmp
pop
jno
mov
fimuls
dec
jge
into
pop
sti
in
les
cmp
mov
loope
frstor
data16
dec
jle
sub
inc
push
rcrl
fnstenv
cli
enter
sbb
scas
adc
jb
lret
xor
push
pop
mov
push
sub
js
mov
fsubrs
fs
jge
dec
inc
inc
leave
xchg
lret
pushf
mov
jmp
dec
stos
jmp
das
xchg
or
call
mov
out
adc
xlat
sub
repnz
cld
mov
pop
lret
mov
pop
std
daa
fistpl
movsb
sbbb
out
dec
push
or
roll
call
and
add
xchg
pusha
addl
lret
nop
add
jb
xchg
xchg
test
in
jae
push
jns
mov
sbb
inc
pusha
adc
lods
xchg
jns
insb
mov
add
pop
jne
aad
xchg
scas
push
lret
add
addl
movsl
xor
and
jae
pop
and
or
xor
xor
push
nop
bound
ret
sbb
push
add
sub
sub
movsl
testb
sbb
adc
cmp
push
jmp
test
jmp
movsl
pusha
sub
push
mov
inc
les
mov
dec
or
stos
pop
pop
and
arpl
push
cmp
popf
jbe
lret
cmc
push
testl
in
and
jle
jmp
jmp
mov
sti
loopne
mov
or
out
jnp
add
sub
shrb
push
js
and
int
gs
push
fwait
adc
mov
test
into
jle
push
push
sbb
cmp
es
fcom
loopne
and
movsb
out
add
in
data16
repnz
call
sub
pop
xor
jg
push
mov
dec
icebp
push
add
fs
jge
jo
pushf
mov
jmp
mov
add
pusha
adc
or
rorl
sub
out
daa
hlt
push
xor
ljmp
sub
popf
fimull
dec
shll
adcb
pop
ds
cmc
jno
jno
jge
movsb
cmp
int
xlat
outsl
jmp
jg
je
lods
clc
outsl
sub
scas
cmp
movsb
je
add
cwtl
mov
cwtl
dec
testb
loopne
ficoms
sti
cmpb
adc
sub
push
xchg
dec
mov
and
mov
push
xchg
mov
push
mov
pop
scas
iret
rolb
or
dec
cwtl
add
inc
pop
xor
xchg
push
dec
icebp
add
sarb
stc
mov
jns
and
loop
cmp
sub
push
and
sub
add
jmp
push
cmpsb
jp
or
dec
jb
dec
push
mov
dec
stos
push
in
cmp
xor
pop
push
fwait
push
jle
arpl
mov
and
nop
enter
sub
dec
sti
inc
ds
sub
push
andl
jmp
mov
mov
cs
jnp
aas
adc
push
xchg
scas
fcom
mov
incb
jne
xor
push
adc
push
lahf
add
adc
loopne
xchg
dec
ss
jnp
dec
xchg
andb
jle
xor
cmp
adc
and
xchg
xor
arpl
jno
jb
test
mov
out
adc
clc
loop
faddl
in
adc
test
pop
push
adc
add
xchg
dec
push
jle
sub
mov
cmp
or
jmp
mov
je
adc
jmp
inc
repnz
sbb
jmp
push
sbb
mov
lock
sub
jecxz
pop
mov
popl
cmp
filds
or
sub
addr16
test
lock
je
and
inc
cmc
test
pop
shl
sub
add
pusha
lcall
dec
pop
cld
clc
aaa
sub
adc
pop
add
jp
xor
sub
adc
dec
fsubrl
cli
mov
push
iret
movsl
dec
sub
fistl
ds
add
xor
xchg
jns
sti
in
inc
cmpsl
dec
mov
xor
inc
mov
push
addb
mov
aaa
jns
mov
add
rcrl
jae
fldenv
in
test
xor
fs
mov
xor
jl
lret
not
sbb
inc
dec
addl
bnd
inc
das
or
dec
or
pop
cs
insb
add
sahf
add
inc
xchg
sti
pop
xor
dec
jmp
jne
jnp
cmp
lods
push
xchg
or
xor
xchg
lds
pop
and
add
or
pop
push
adc
or
add
jge
cmp
das
jg
inc
push
daa
in
xchg
mov
data16
repz
dec
mov
and
mov
push
xchg
and
cmp
fcmove
pop
dec
mov
pop
nop
ja
cwtl
push
shr
xlat
rcr
cmp
adc
cmpsl
loopne
out
rcrl
das
mov
push
mov
mov
jo
jp
jle
xchg
mov
rcrl
cmp
adc
fs
mov
jp
outsl
cmpsb
and
fadd
xchg
push
loop
pop
cltd
mov
cmp
fs
in
dec
add
jg
stc
gs
inc
add
rorb
ss
test
mov
sub
scas
jne
xor
out
roll
cld
cmpsb
mov
inc
push
sti
popl
leave
lret
into
or
out
xor
jmp
jle
add
nop
ds
add
pop
orb
jmp
nop
sti
xorl
dec
loope
or
add
jmp
sub
pushf
inc
inc
push
pop
pop
mov
jmp
shlb
add
pop
outsb
not
cmpl
mov
adc
sub
test
insb
inc
xor
dec
push
and
or
push
movsb
xor
fmull
xchg
add
and
dec
xor
add
xchg
mov
fcmovu
xchg
loop
addr16
jmp
jmp
or
jns
jnp
dec
or
add
dec
xorl
inc
cs
iret
cmp
mov
fimull
adc
cwtl
or
ja
and
or
sbb
out
push
ljmp
fcomps
aam
dec
andb
enter
sahf
scas
add
xor
movl
mov
or
inc
and
sub
lahf
add
push
and
push
push
sbb
inc
dec
or
outsb
or
inc
sub
fst
jae
arpl
bnd
call
cmp
mov
pop
cwtl
stos
jl
xor
cmp
cmp
es
push
fs
stos
fsubrl
mov
sbb
insl
fsts
add
imul
xchg
xchg
shl
mov
rol
ljmp
adc
mov
incb
dec
subb
xchg
addps
test
sbb
xchg
imull
or
and
daa
push
int
fadds
and
jp
pop
int3
mov
xor
jmp
and
mov
adc
adc
arpl
insb
push
das
mov
addr16
ss
push
dec
lock
ja
ficomps
push
lcall
sbb
cmp
dec
add
sub
loopne
lret
mov
adc
sub
mov
push
push
rclb
inc
or
jmp
adc
frstor
pop
test
jmp
out
push
jge
insb
pop
ds
inc
je
xchg
nop
add
push
mov
cmp
inc
loope
stos
pusha
jg
cmp
adc
rcrb
or
sbb
jmp
jo
mov
or
pop
stos
push
or
rolb
pop
xchg
mov
pop
shrb
mov
in
push
in
test
push
std
aas
mov
push
mov
and
mov
push
xor
popl
pusha
into
jmp
sub
add
pushl
mov
jmp
pop
inc
dec
test
lea
out
mull
push
adc
hlt
int
cmovae
dec
jge
sub
int3
push
or
mov
clc
dec
hlt
sub
inc
filds
ret
push
stc
and
push
pop
loop
loopne
jb
inc
mov
imul
dec
mov
jmp
fcmovbe
adc
mov
jecxz
xchg
cmp
inc
rcrl
cmp
cmp
xchg
popa
mov
int3
ret
mov
popf
popa
cmp
insb
inc
mov
leave
das
rcll
into
push
xchg
sub
pop
clc
add
pop
push
adc
pop
sbbl
arpl
insl
or
cs
fidivrs
das
into
and
not
cmp
dec
and
push
mov
add
sub
pop
xor
mov
cld
push
xchg
shl
jno
add
push
add
push
add
dec
add
xor
mov
add
and
outsl
cltd
outsb
mov
mov
xchg
subb
push
dec
xor
test
mov
push
outsl
test
pop
mov
sbb
cmp
jae
xchg
fs
cld
adc
adc
and
mov
mov
jle
add
jns
inc
repnz
std
push
aad
repz
mov
push
and
addl
xchg
cmc
mov
in
push
push
bound
jecxz
fcomip
xor
into
mov
xor
xor
pop
sub
mov
pop
inc
pop
sub
lahf
lds
cmp
pop
ret
loopne
not
cld
out
dec
jg
push
pop
jmp
cmp
adc
push
clc
jge
mov
mov
cmp
in
pushf
xchg
test
xor
pop
jo
push
dec
sarl
ret
test
mov
xor
call
xor
push
or
fstpt
or
dec
imul
xorb
xchg
add
xor
out
jb
inc
pusha
pop
mov
and
pop
cmp
adc
negl
icebp
push
dec
jg
push
mov
ja
xchg
movsl
pop
sbb
mov
mov
bound
in
shrb
mov
bound
sbb
enter
mov
pusha
sub
jno
pusha
push
xor
aaa
mov
stos
loop
jnp
jns
psubsw
mov
mov
push
mov
fsubl
jge
xlat
in
fs
mov
sub
jmp
push
jp
mov
jmp
cmp
imul
in
movsl
bound
sahf
dec
sahf
or
stos
es
shlb
mov
shl
mov
add
enter
addb
jmp
sar
daa
icebp
sub
add
cmp
sahf
or
sbb
repz
pop
ret
push
les
cmp
push
ret
mov
sub
adc
add
das
mov
or
ljmp
sbb
mov
add
and
mov
fs
mov
pop
out
orb
mov
popa
pop
and
xor
mov
addr16
pop
icebp
lock
fmuls
jbe
movsl
xor
xor
add
and
dec
jmp
loop
jg
push
cmp
push
dec
inc
push
les
inc
sub
aaa
xorb
adc
push
add
iret
push
lea
xor
out
test
pop
cmp
and
cmc
scas
adc
or
shl
outsb
sub
adc
jo
scas
add
mov
in
es
adcl
add
mov
push
lret
les
clc
cmp
dec
neg
xor
mov
mov
je
pop
jmp
roll
mov
daa
xchg
or
pop
sub
nop
bound
sbb
or
push
jg
and
imul
sbb
mov
fcmovnb
xorb
xor
std
add
jmp
cmp
push
jne
loope
push
or
add
cmc
es
adc
cmp
push
adc
lods
mov
jl
int
jl
sbb
pusha
sub
repnz
jp
xor
ljmp
xchg
mov
std
pop
shl
adc
jl
add
add
mov
xor
sub
cmp
sub
sub
mov
or
jg
not
jmp
mov
fs
je
cmp
mov
scas
mov
cltd
popf
lods
mov
and
mov
ret
bnd
dec
jecxz
aaa
movaps
insl
icebp
clc
fnsave
fs
mov
sarl
push
dec
test
insb
and
pop
jo
orl
or
push
mov
aad
push
xor
push
pop
add
add
mov
loope
daa
dec
jmp
stos
shlb
inc
in
xchg
not
sbb
or
mov
xchg
cmp
push
mov
xchg
mov
cmp
pop
in
cmp
xchg
cmp
and
dec
pop
xor
mov
loop
xchg
or
inc
test
add
add
push
daa
repz
inc
mov
mov
stos
sarb
nop
std
shlb
pop
not
add
aas
sub
test
nop
cltd
and
push
mov
push
cwtl
jl
pop
push
dec
pop
or
outsb
ljmp
add
cmc
into
ds
mov
movsl
pop
into
loope
jl
insl
xlat
pop
push
repnz
popa
enter
neg
popa
inc
in
push
loopne
pop
sbb
popf
mov
pop
pop
aad
mov
add
push
sbb
xor
jbe
aad
jmp
mov
xor
push
mov
dec
sub
cmpsb
mov
das
mov
push
and
and
rolb
jge
mov
daa
and
push
jl
adc
lods
scas
int3
add
iret
push
jb
xchg
subl
dec
inc
xchg
jno
test
lods
xchg
adc
mov
push
push
in
sub
or
adc
mov
sti
mov
push
fimull
lods
cmp
push
jne
lods
pop
shll
mov
stc
outsb
les
pop
add
ds
ja
insb
inc
sub
inc
sbbb
in
rcrl
pop
push
loop
pop
push
and
popf
fadds
fadd
pop
mov
iret
pushf
lock
pop
or
cmp
fs
test
cld
fs
adc
test
lods
xorl
push
push
mov
int3
ljmp
dec
add
out
add
xor
jmp
mov
rcll
sbb
or
mov
jecxz
inc
psrad
lcall
xor
pop
dec
popa
test
es
arpl
xor
push
mov
jl
pushf
lcall
push
andb
outsb
mov
cmpl
jno
neg
sarb
pop
sbb
dec
mov
add
sahf
sbb
inc
mov
push
out
addr16
sub
in
ficompl
fcompl
adc
inc
sti
add
loopne
mov
daa
bound
std
push
mov
push
mov
push
adc
mov
psubusb
enter
pop
rcl
stos
adcb
push
dec
mov
xor
add
dec
sub
sti
inc
fnstcw
jnp
xlat
dec
jp
xor
push
pop
jge
aam
push
xchg
sbb
inc
aad
sbb
xchg
sub
repnz
push
mov
add
add
shr
cmp
push
aas
jne
lods
push
mov
mov
cwtl
sbb
mov
stos
pop
xor
jae
roll
rcr
and
orb
sub
adc
in
lahf
orb
dec
and
or
cwtl
add
sub
xlat
out
mov
pop
cli
jmp
pop
out
ret
xlat
jmp
das
or
and
jge
pop
ljmp
cld
popf
push
sbb
jne
in
loope
decl
cmc
adc
xor
scas
xor
in
or
int
add
cwtl
ljmp
addb
ja
test
enter
xor
or
daa
pop
pop
jns
add
sub
and
xchg
int3
mov
pop
push
fisubs
pop
out
push
sub
ss
test
ret
cmc
xchg
test
out
pusha
shrb
push
daa
dec
xchg
cmp
jge
jmp
repz
xor
lret
pusha
imul
dec
push
jle
sub
int
xor
mov
repz
incl
jp
xchg
adcb
add
sub
sbb
lcall
jb
push
push
stos
adc
mov
and
outsb
nop
inc
xchg
xor
add
lods
and
sti
adc
mov
lret
std
adc
dec
int3
cwtl
sbb
mov
test
subb
mov
test
fsubrl
popa
leave
push
fs
sub
jg
out
and
xchg
mov
adc
sbb
cmp
testb
fs
pop
inc
jmp
hlt
cmpsl
and
and
pop
insb
mov
call
jae
dec
icebp
test
xchg
inc
mov
inc
jbe
insl
or
sub
pusha
imul
test
rcrl
shlb
js
xchg
mov
shll
pop
push
add
jbe
or
rolb
add
xor
mov
add
add
jmp
inc
cmpsb
sbb
push
sub
add
or
pop
out
ds
sbb
stc
sbbl
mov
mov
cmp
int
xchg
pop
jmp
dec
adc
std
mull
pop
pop
cmp
pop
leave
pusha
jbe
and
sub
test
aad
mov
or
jae
lcall
jae
inc
xor
xor
pop
pop
lds
nop
adc
mov
das
adc
into
incl
adc
mov
xorb
sbb
cwtl
pop
aam
mov
add
jmp
mov
push
mov
adc
lods
pop
or
mov
popa
les
push
jnp
clc
shll
out
mov
imul
loope
add
mov
sub
push
or
xchg
int
les
and
std
pop
pop
xor
inc
enter
in
setne
pop
or
pop
and
movsl
test
push
pop
add
xchg
push
pop
pusha
pop
or
aaa
neg
fsubrs
add
jmp
add
adc
cmp
pop
loope
imul
or
xor
inc
cs
aad
dec
push
bound
push
or
ret
cmp
rcr
dec
cltd
test
fists
data16
add
pop
and
xor
push
insb
ds
pop
mov
push
xor
mov
sbb
mov
sub
mov
push
dec
ljmp
xor
xchg
ja
cli
jns
or
dec
pop
mov
inc
mov
hlt
dec
cmp
mov
decl
mov
xor
lahf
jne
ja
sub
cmp
fwait
adc
cli
mov
xchg
xor
mov
xor
jge
or
inc
dec
sbb
add
dec
gs
testl
jle
dec
stos
stc
push
ret
mov
ss
sbb
test
adc
out
or
out
inc
pop
push
cmp
stc
xchg
aam
fstpl
xchg
sti
test
fxch
aad
data16
imul
sbb
pop
out
rorb
lods
outsb
mov
je
or
cld
lods
pop
scas
adc
icebp
adc
xor
les
xchg
pop
dec
iret
jne
aad
jmp
push
xchg
push
sbb
adc
or
add
jmp
pop
out
pop
pop
push
add
mov
and
cli
lret
ljmp
ljmp
test
jle
jp
lret
lret
xor
pop
sub
ljmp
hlt
push
ljmp
inc
test
loopne
cli
ds
sub
cmp
push
xor
pusha
sbb
or
jmp
cmp
fs
cmp
das
and
push
in
or
leave
aam
add
aad
ljmp
xor
dec
sbb
mov
inc
lret
xchg
sub
push
add
dec
inc
pusha
jle
or
pop
mov
outsb
add
add
loop
xchg
inc
pop
push
add
popa
push
inc
pushf
jmp
push
out
ret
ja
std
xlat
enter
subl
lock
in
movsb
jg
xchg
or
or
test
inc
mov
shll
test
push
lret
fldcw
inc
dec
push
inc
mov
cs
rcl
stos
jmp
or
scas
ja
loopne
pop
into
lcall
push
fwait
test
mov
stos
out
in
adc
aad
orl
scas
in
aam
sti
jl
pop
pop
push
in
leave
pushf
in
das
outsb
add
sub
add
fisttpll
pop
sub
imul
fucomip
mov
jmp
addr16
pop
or
xchg
ja
data16
sarb
cli
sbb
add
scas
roll
xchg
xor
sub
popf
jmp
jnp
fisubs
shl
test
pop
xchg
xchg
cmp
mov
in
pushf
adc
pop
pop
decb
sbb
sbb
sub
xor
cmp
cmp
mov
xorb
scas
push
dec
cmp
in
pop
add
mov
xchg
fnsave
pop
es
loopne
adc
jne
test
outsl
movsb
fisubs
mov
clc
xchg
mov
enter
xchg
ljmp
nop
dec
sub
pop
inc
stc
int3
add
or
push
cli
pusha
sbb
popl
sub
mov
cmovo
dec
jmp
inc
jo
pushf
insb
and
push
jb
mov
inc
leave
mov
sub
jnp
adc
jmp
pusha
jge
popf
jbe
jmp
pushf
out
dec
push
sar
add
scas
or
test
popf
dec
jg
fs
jle
and
mov
inc
out
jg
and
xchg
add
push
in
faddl
and
ljmp
inc
mov
pop
mov
sub
cmp
or
aaa
and
cmp
adc
loop
ret
cmc
jge
sbb
sub
xor
stos
div
xchg
addr16
pop
cmp
sbb
mov
cmpsb
xlat
popf
adc
xor
push
inc
add
mov
mov
dec
add
add
jns
dec
add
into
or
inc
mov
icebp
sub
or
mov
sbb
not
xchg
addb
mov
int3
sbb
adc
lock
repnz
jns
sub
cmp
pop
aaa
in
pop
xchg
jno
pop
lret
jbe
dec
ds
repz
frstpm(287
aas
xor
and
pop
vmovaps
pop
push
pop
rcr
adc
and
xor
dec
fstps
and
xchg
dec
leave
fcomip
rcl
orl
push
and
hlt
mov
push
out
ror
in
out
stos
popf
std
mov
hlt
js
jl
dec
imul
and
xchg
mov
aaa
add
push
mov
sbb
sub
dec
add
and
jecxz
addr16
sahf
adc
and
inc
aaa
ffree
fcmovnb
xchg
shufps
addb
inc
pop
push
aaa
pop
mov
mov
jbe
jg
iret
or
cmp
push
jmp
jmp
orl
jmp
mov
push
out
fnstsw
inc
imul
or
adc
cmp
mov
addr16
jge
xor
xchg
add
in
fimuls
xor
loopne
add
out
and
jno
and
xchg
pop
scas
pop
jne
fstpt
jmp
push
daa
add
sbb
insl
and
iret
xor
sub
sub
lahf
and
addl
aaa
repnz
push
daa
pop
and
add
cli
dec
bnd
mov
push
adc
xor
cmc
movsb
insl
pusha
mov
jg
lock
nop
dec
loope
and
outsb
cltd
cmp
cmp
and
mov
ljmp
sti
xchg
push
mov
lds
ja
jbe
shl
jge
and
pop
fdivr
push
les
loopne
lahf
inc
sbb
fs
jmp
aad
add
fisttpll
sub
loope
repz
push
mov
fnstenv
jle
ret
je
jge
cmp
mov
xor
push
add
ljmp
fstps
mov
sarb
or
adc
inc
mov
into
inc
dec
stos
xor
scas
test
aaa
or
jp
call
xchg
xchg
mov
jmp
pop
xchg
add
std
mov
pop
pop
sbb
jo
iret
lods
imul
dec
push
stos
jmp
and
push
mov
fnsave
jmp
dec
pop
cmpsl
data16
sbb
arpl
xor
xchg
sbb
mov
sbb
ljmp
mov
or
mov
aas
test
jns
or
jmp
jl
ret
sti
shll
sub
pop
or
inc
mov
pop
nop
mov
adc
in
sahf
lods
push
pop
pop
mov
and
mov
adc
sbb
xor
xchg
pop
or
cwtl
test
cmpsb
xchg
and
jle
mov
push
mov
dec
nop
pop
rcll
loop
iret
inc
pop
push
iret
daa
nop
dec
aam
ss
je
push
mov
pushf
xor
adc
add
fidivrl
add
ss
pop
repnz
and
or
pop
add
xchg
subl
inc
or
pushw
pusha
icebp
cmp
xor
ret
pop
pop
pop
push
test
add
adc
loopne
mov
jle
fwait
das
repnz
fidivs
ja
mov
add
or
mov
inc
mov
mov
adc
subl
mov
pop
mov
sub
pop
stos
mov
inc
mov
inc
mov
add
scas
inc
lahf
xchg
inc
push
adc
stc
xchg
mov
push
mov
pusha
xor
or
pop
stos
pop
jle
xchg
xchg
movsl
jmp
mov
and
push
dec
cmpl
fdiv
aad
push
pop
jmp
push
add
sbb
dec
inc
rorb
loop
call
cmp
sub
out
or
out
aas
lods
shlb
mov
pop
jmp
push
cmp
and
inc
dec
push
mov
mov
pop
jne
or
and
jmp
adc
aam
xlat
dec
mov
xchg
dec
cmp
add
btr
push
data16
sti
js
push
ja
lcall
imul
push
loopne
popf
add
or
clc
ljmp
push
pop
scas
popa
push
es
push
jno
mov
pop
add
pop
lret
insl
inc
add
cmp
mov
push
xor
ret
mov
inc
jp
test
imul
out
mov
imul
ljmp
or
and
push
and
jmp
movsb
lds
test
push
dec
ja
xlat
repz
add
lea
cwtl
push
jmp
filds
push
xor
cmp
test
loope
jo
lds
cs
lahf
or
inc
xchg
add
leave
inc
das
test
mov
mov
add
xlat
adc
mov
aam
push
pop
rcrb
jo
mov
jg
mov
and
dec
add
bnd
sti
push
jecxz
adc
pop
xchg
add
adc
push
add
jle
push
loopne
push
es
add
push
mov
ret
aam
jns
int
dec
mov
add
sub
sub
pop
dec
push
sub
adc
out
outsl
jp
pop
jns
out
add
pushf
hlt
dec
pop
and
stos
mov
xchg
jb
inc
push
mov
add
pop
mulb
hlt
pop
js
pop
push
outsl
and
xchg
jmp
mov
cmpsb
cltd
and
shlb
pusha
sbb
testb
arpl
inc
mov
cmp
or
dec
sub
mov
pop
imul
jno
popf
jge
fidivrl
jl
stos
scas
mov
sbb
xor
orb
psrlw
cli
or
orb
bound
inc
dec
mov
stc
sbb
sub
push
add
mov
push
movsl
push
cmp
sub
adc
pop
gs
mov
popa
cmpsb
pop
add
leave
jl
dec
inc
loopne
pop
inc
inc
rorb
push
add
ret
cmc
pop
mov
insl
mov
adc
xor
shr
imul
test
dec
sti
lret
jmp
pop
inc
cwtl
mov
int3
insl
mov
add
jmp
inc
add
cmp
fmull
cmc
xchg
les
dec
ficomps
into
bnd
sub
dec
push
lahf
inc
shl
xorb
xor
xchg
sub
xchg
cmp
ret
filds
push
add
push
dec
jbe
inc
add
add
inc
fdivrs
jne
xorl
stos
leave
fstp
sub
out
push
cli
sub
pop
in
mov
push
cmp
shll
jmp
mov
xor
scas
hlt
mov
xchg
aam
lahf
jnp
inc
and
xor
jo
inc
xor
in
out
mov
jmp
and
sbb
xchg
clc
and
xchg
push
ret
stos
pop
lods
in
sub
lahf
xchg
adc
ja
mov
mov
pop
cmpsl
aam
pop
push
mov
xchg
imul
loop
inc
ja
mov
push
push
in
bound
sub
fs
and
mov
jl
insb
pop
sbb
aas
rcr
mov
add
sub
jmp
mov
addl
cmp
les
push
sub
jmp
push
mov
cmpsb
cmc
in
push
dec
cld
les
push
xchg
xor
push
rep
ret
icebp
int3
mov
cmp
mov
push
sbb
sub
pop
adc
jge
xor
mov
aam
xor
jg
xor
xor
add
add
mov
or
fsts
outsb
mov
out
push
jmp
rcrl
push
push
and
lods
jp
mov
rclb
lret
cmc
push
cmp
negb
xchg
pop
or
pop
push
pushf
sub
and
ja
dec
test
es
lock
orb
mov
xchg
mov
cmc
jmp
es
add
sub
adc
gs
enter
cwtl
dec
js
inc
lret
adc
or
mov
mov
enter
addb
inc
pop
sar
push
dec
inc
mov
pop
or
testl
sbb
pusha
push
ljmp
add
inc
jmp
clc
push
sbb
or
ret
or
into
xchg
pop
test
push
cmpb
not
mov
or
sti
push
pop
sahf
and
xchg
xchg
clc
data16
es
divb
mov
stos
cmpsl
inc
loop
inc
pop
jae
lahf
pop
add
or
sub
jmp
pop
shrb
cmp
out
popf
pop
rcrb
push
pop
sub
xchg
out
mov
sbb
adc
add
out
add
push
ljmp
adc
push
jmp
ds
insl
jb
xchg
xor
jg
dec
mov
xor
fdivrl
mov
clc
sub
sub
testl
add
jp
fdivrl
push
out
mov
pop
icebp
roll
dec
mov
addl
mov
dec
adc
pop
aaa
mov
and
mov
lock
idivl
push
movsl
testl
mov
cltd
push
pop
lahf
add
dec
push
or
mov
mov
out
int
ss
pop
pop
push
div
jle
lea
stc
call
mov
mov
jge
pop
jmp
inc
jae
jge
cmc
xchg
or
rcrb
xchg
pop
in
iret
or
cmpsl
outsl
add
mov
frndint
andl
and
mov
push
das
dec
push
pusha
std
nop
push
add
add
repnz
js
jmp
cmc
out
or
in
pushf
lret
mov
pop
insl
xchg
xor
mov
sub
push
aaa
push
cli
popf
xchg
mov
test
push
inc
and
mov
sub
and
or
andb
mov
es
sbb
daa
and
mov
push
push
mov
mov
lods
js
adc
xor
fidivrl
test
or
and
mulb
movsl
loopne
inc
inc
add
sbb
cltd
fs
jmp
jo
jns
pop
or
xchg
repnz
xor
mov
cmp
nop
or
call
add
shl
push
xor
out
cmp
sub
mov
inc
aad
and
dec
push
mov
adc
dec
pop
test
sbb
jns
adc
pop
vmwrite
cmp
fimuls
adc
shll
add
movsl
pop
aam
clc
enter
mov
int
cmp
and
dec
push
dec
cmc
cmp
jne
push
jmp
mov
out
movsl
and
repnz
pop
test
xor
lret
add
jns
xchg
push
adc
arpl
pop
mov
popf
shl
mov
inc
fidivrs
testb
sub
or
mov
mov
and
stos
mov
mov
push
xor
and
cmp
jno
fiaddl
out
out
add
sbb
mov
loope
test
sub
pop
loope
std
ljmp
add
and
dec
call
or
mov
mov
cmp
fucom
enter
rorl
fstpl
gs
push
xchg
adcl
movsl
ljmp
push
sub
clc
pop
cmp
stos
nop
leave
jmp
lahf
loopne
inc
daa
jl
mov
add
call
pop
push
ljmp
lds
cwtl
xchg
jmp
mov
or
pop
mov
cmp
jmp
push
sub
or
pop
jg
cld
adc
sahf
push
outsl
in
adc
aas
shlb
in
loope
test
jmp
push
clc
mov
movsb
push
jmp
mov
pop
fimull
lods
adc
push
mov
pop
leave
or
mov
mov
rorb
aas
mov
dec
ror
mov
mov
scas
add
xchg
popa
cmp
mov
sub
rcll
mov
test
mov
aad
push
add
and
adc
inc
fmuls
shll
mov
faddl
or
pop
dec
mov
shl
pusha
xchg
xor
pop
sub
pop
dec
jno
inc
adc
addb
shll
ljmp
sub
test
adc
dec
leave
pop
add
xor
push
mov
cli
gs
ja
iret
add
or
inc
ds
and
loope
scas
push
pop
sbb
lock
mov
inc
out
jge
mov
pop
int3
inc
push
add
jmp
das
xor
lock
mov
mov
xchg
int3
pop
pop
jg
dec
pop
jmp
push
jecxz
push
repnz
pop
and
dec
imul
jmp
add
mov
push
mov
mov
pop
rcl
xchg
mov
insb
dec
jmp
mov
into
mov
push
add
out
add
aad
pop
mov
dec
sub
or
std
dec
xchg
sub
jmp
pop
push
adc
mov
add
stos
inc
bound
jo
xchg
push
sbb
fiadds
inc
jbe
jb,pn
mov
mov
addb
int
or
daa
xor
push
push
jmp
xor
sub
pop
mov
xchg
adc
dec
scas
pop
lds
pop
inc
ds
mov
pusha
jmp
adc
jge
adc
add
movsl
js
orb
mov
sub
add
into
scas
add
cmp
cwtl
aaa
mov
jp
sbb
out
imull
pusha
out
pop
jmp
lret
pushw
outsl
dec
push
adc
leave
std
sahf
pop
repz
jb
push
pushf
in
iret
and
movsb
insb
jo
cmp
push
bound
pop
arpl
lret
hlt
xchg
sarb
int
mov
iret
cmp
jp
mov
jns
sahf
inc
out
pop
xchg
dec
xor
push
push
js
inc
mov
sub
out
lret
sbb
incl
and
mov
jg
pop
sbb
or
sbb
xlat
inc
jp
jmp
mov
xor
shlb
xchg
repz
push
repz
mov
jl
and
or
dec
scas
sub
pop
add
dec
mov
jmp
in
fsubrl
or
xor
mov
cmpsb
insb
sub
mov
addr16
or
push
das
xlat
xor
push
les
iret
rcrl
mov
sub
sar
shll
testl
mov
outsl
call
dec
mov
neg
dec
xchg
xchg
pop
xchg
loop
ljmp
data16
mov
imul
ja
dec
adc
mov
out
jae
movsb
int
out
sbb
in
pushf
test
popa
cld
call
adc
ljmp
sti
jns
add
push
mov
and
in
or
xchg
mov
call
mov
push
sub
sub
sub
cmpsl
dec
sbb
pop
xor
inc
js
pop
and
mov
add
xchg
ret
call
not
es
cmp
push
mov
adc
mov
fs
cmp
dec
mov
add
mov
iret
je
stc
push
movswl
mov
pop
dec
add
pop
add
test
cwtl
lret
or
imul
lds
ljmp
jns
jns
loopne
and
cwtl
mov
dec
dec
add
inc
or
mov
cli
popl
xchg
adc
jnp
push
out
mov
cmp
int
dec
pop
int3
cmp
push
pop
jmp
mov
mov
sub
sti
shrl
xor
xor
xchg
dec
push
test
or
pop
pop
dec
cld
cltd
push
scas
cmp
or
mov
sub
bnd
xor
jmp
daa
add
pop
push
dec
sti
xchg
repz
rcll
sti
and
sti
and
xchg
ljmp
js
push
xorb
push
pop
push
mov
or
aad
dec
fistl
fwait
testl
dec
cmpb
fdivl
xor
jbe
jecxz
push
dec
aaa
mov
jno
adc
outsl
cmp
sbb
pop
hlt
inc
adc
sub
daa
sub
daa
imul
add
add
fiadds
out
push
mov
mov
pop
cmc
lods
cmp
mov
sub
pusha
pusha
push
jl
cmp
rcll
mov
adc
push
imul
in
xchg
xchg
mov
das
mov
jb
pop
stc
inc
push
movsl
mov
sub
jns
lock
rcll
mov
fsts
mov
jbe
gs
mov
loope
jmp
sti
movsl
add
out
in
jbe
dec
add
ds
push
pop
jmp
dec
xchg
repz
cmpsl
pop
aaa
pop
mov
inc
dec
out
out
pop
std
into
push
mov
or
rorl
jmp
in
mov
and
je
mov
dec
fwait
push
stc
in
mov
xlat
add
or
xchg
jmp
fsts
and
dec
adc
lcall
sub
sbb
or
mov
fsubrs
pop
test
jecxz
sub
add
push
jne
shrb
js
pop
sub
aas
add
call
adcb
push
movzbl
jo
xlat
jbe
lret
jle
inc
aad
pop
push
je
bound
mov
push
scas
add
mov
xchg
stos
xchg
xor
add
repz
dec
adc
push
adcb
inc
xchg
jb
ud0
loop
or
xchg
mov
jo
jmp
cmpsl
mov
and
and
dec
adc
sbb
push
shl
mov
adc
in
test
cmp
fsubrs
add
jo
sub
dec
insl
loop
cwtl
fs
and
push
xlat
push
fldt
xor
sub
xchg
imulb
or
out
ljmp
jnp
or
jno
dec
jmp
or
push
mov
adc
lds
nop
add
pop
faddl
xchg
add
xor
pop
or
sub
data16
test
insb
cmp
add
out
inc
push
js
add
rcrb
inc
filds
mov
fmull
int
add
call
addr16
xor
add
nop
fadds
jo
in
cmc
pop
jp
xor
ja
rorb
pop
lcall
sbb
pop
daa
sbb
xchg
pop
sub
mov
cmpsl
ljmp
movsl
cmp
mov
xor
mov
iret
push
jno
adc
leave
pop
repnz
ret
add
out
jo
popf
pop
push
aad
sbb
add
jg
frstor
cs
jo
call
sbbb
stos
das
push
shl
test
repz
jno
sbb
es
inc
add
push
clc
pop
jmp
addb
les
sahf
mov
jmp
imul
jmp
cs
mov
pop
pusha
xor
push
mov
mov
out
icebp
and
mov
pushf
cmpsl
pop
decb
mov
add
scas
popf
shll
das
dec
pusha
popf
mov
xchg
cltd
sub
push
adc
sbb
adc
test
movsl
cli
xchg
push
inc
cmp
and
pusha
jg
dec
clc
inc
les
shlb
inc
cmp
pop
iret
aam
shll
data16
push
dec
nop
pop
dec
aas
adc
in
stos
inc
or
mov
daa
lds
insl
adc
or
jmp
test
push
pop
repnz
jmp
ljmp
fs
dec
sysexit
mov
sar
jl
and
int3
adc
add
pop
push
push
rolb
and
push
push
or
mov
icebp
dec
mov
test
inc
sub
mov
xchg
push
sub
add
sbb
loop
xor
push
outsl
pop
push
xor
jo
mov
mov
or
popa
insb
sbb
mov
mov
add
sub
jg
jecxz
or
out
ror
daa
jbe
pop
inc
inc
adc
fiadds
inc
dec
mov
pop
sarl
mov
push
fwait
or
add
cmp
sub
lea
inc
add
mov
test
fisttpll
lea
jmp
ds
push
fmuls
and
add
add
and
mov
pop
shl
add
jb
insl
mov
add
in
pop
dec
push
jmp
jne
fnstcw
addb
dec
add
mov
jecxz
xchg
add
mov
ficomps
adc
push
ja
or
push
insb
out
cmp
push
pop
mov
sbb
ret
popa
mov
test
push
outsb
mov
xchg
lods
fst
andb
fsubrl
xchg
or
inc
add
pop
dec
aas
dec
pop
jnp
fadds
or
dec
lret
push
pop
sbb
and
lahf
or
jnp
and
inc
hlt
xor
fidivrs
imul
mov
xchg
dec
pop
stc
push
les
fstps
cmp
pop
xorb
ja
push
push
xchg
sbb
mov
or
inc
sub
scas
and
push
xorl
inc
das
or
pusha
add
xchg
outsb
out
and
push
jl
pusha
data16
xor
pop
inc
dec
add
call
in
cmp
enter
or
mov
inc
fmull
and
push
push
ficompl
mov
jmp
mov
mov
dec
bound
test
stc
xchg
call
rclw
ret
dec
adc
popa
jmp
aam
rclb
test
andl
xor
mov
mov
loop
pop
cmp
sub
jo
push
inc
mov
jl
xor
out
bound
pop
and
insb
ds
adc
shl
add
std
lds
insl
jl
mov
pop
scas
inc
dec
adc
adc
mov
das
jns
insl
mov
add
add
xchg
cwtl
add
js
lock
inc
popf
mov
ret
sbb
dec
add
cmp
push
or
pop
and
adc
jecxz
or
test
pop
mov
add
xor
jl
out
xchg
aas
std
pop
add
xor
xor
sub
mov
ds
add
and
sbb
fwait
jnp
add
test
xchg
jmp
cmpsb
inc
xchg
outsl
add
xrelease
xchg
sub
mov
xchg
push
add
or
and
mov
in
aaa
and
push
or
movsl
push
sub
ret
jg
outsl
leave
xchg
lock
movsb
int3
push
stc
add
sbb
jo
and
jl
outsl
nop
mov
mov
cmp
mov
out
movsl
ficomps
mov
or
ljmp
jnp
or
push
mov
sub
aam
xor
add
cltd
cmp
popa
pop
das
loope
dec
sbb
rcrb
lock
leave
inc
mov
sub
add
sub
ficoms
push
inc
push
push
push
mov
jg
push
call
mov
adc
and
push
sub
inc
add
das
imul
dec
orl
clc
ror
sbb
sub
dec
cltd
sub
lods
insl
sub
xor
jne
cwtl
sbb
negl
or
inc
or
mov
dec
aaa
daa
rorl
ja
out
movsb
sahf
xchg
mov
dec
std
lahf
or
add
and
int3
and
inc
or
pusha
mov
mov
xchg
out
dec
inc
adc
or
lock
mov
mov
mov
push
xchg
clc
push
mov
clc
or
jmp
push
sub
mov
jecxz
pop
int3
jmp
sbb
and
jnp
add
jmp
test
dec
cmp
roll
add
jns
in
test
push
rcll
mov
arpl
call
inc
add
and
add
mov
sbb
push
sub
rclb
scas
outsl
leave
adc
icebp
fildl
or
cmp
mov
dec
pusha
clc
xchg
ret
stos
inc
jnp
jae
or
in
cs
mov
loop
jle
add
and
add
sar
add
pop
shl
xchg
push
push
shrb
mov
inc
jle
push
push
mov
jmp
insl
mov
add
inc
jne
je
and
gs
mov
sub
stos
cmp
pop
push
add
dec
inc
add
sub
pop
aad
sub
sub
push
jne
sbb
test
and
iret
ss
loop
jnp
sub
lods
mov
jb
in
dec
pop
in
mov
inc
mov
jae
mov
sub
add
cmp
and
pop
or
ds
mov
adcb
addb
ljmp
xor
mov
bound
outsl
xchg
push
cmp
sub
in
dec
adc
out
push
and
test
sub
pop
xor
inc
push
adc
add
xor
insb
jp
sbb
fnstenv
sbb
sub
popa
andb
jns
mov
dec
and
cmpsb
imul
push
push
inc
mov
negb
add
cmp
not
andl
jge
sbb
les
mov
jmp
pop
mov
push
push
sahf
sbb
xor
cmc
int3
rorl
inc
imul
ds
jecxz
shrl
cmp
pop
mov
fs
pop
sub
or
loope
xor
push
cltd
repz
loopne
stc
sahf
shlb
mov
adc
cmp
cmp
ss
push
int
inc
add
cmpsb
or
stos
adc
dec
push
add
into
mov
and
pusha
loop
jo
pop
sub
inc
xchg
add
subl
add
jmp
sub
or
enter
popf
pop
mov
jge
xor
inc
or
bound
jge
sbb
pushf
lahf
xchg
dec
add
inc
aad
add
pop
cmp
inc
xchg
push
scas
add
lods
shrb
sbb
sub
lcall
inc
in
sbb
mov
lods
jne
adc
mov
xlat
out
pop
pop
sahf
sub
or
in
into
icebp
mov
add
mov
or
sub
jge
pop
add
sub
add
and
daa
test
and
inc
or
pop
loop
jno
mov
sub
mov
not
push
mov
add
xchg
cs
push
pop
xor
push
push
pop
or
jmp
mov
jmp
fcmovu
pop
mov
mov
fldt
push
repnz
mov
sub
roll
rclb
loop
push
pop
inc
or
push
add
fstl
mov
fs
jno
and
hlt
aam
sub
sahf
lods
es
dec
jnp
push
push
lock
loop
jp
push
std
pop
push
pop
or
cmp
jb
sub
and
mov
inc
xor
jmp
adc
jl
dec
add
cmp
xor
pushf
addr16
shlb
ds
fdivrl
dec
and
push
fs
push
add
mov
cmp
cwtl
clc
dec
push
ljmp
or
sub
lret
jecxz
pop
test
je
add
shlb
jb
imul
pop
in
movl
andb
cmp
les
mov
inc
lods
cmp
jmp
add
dec
mov
mov
movsb
add
add
sub
inc
inc
and
mov
inc
push
and
daa
jmp
mov
xor
dec
rorb
aaa
mov
imul
and
mov
jae
fwait
mov
cmp
lret
jnp
cld
in
js
cmpps
into
negl
dec
jge
add
dec
out
movsb
pop
or
int3
fstps
jbe
adc
std
push
xorb
push
pop
xor
ja
in
cmp
push
pop
divl
push
jg
sbb
iret
sbbb
into
in
jns
out
loop
push
cmp
ret
leave
or
xchg
cmp
mov
push
mov
mov
mov
js
dec
add
call
pop
outsl
push
sahf
mov
neg
jbe
outsb
xchg
inc
movsb
add
mov
jno
shrb
push
mov
mov
sub
rcrl
add
push
cmp
stc
vmovmskps
bound
and
cmc
pop
add
call
daa
sti
push
rorl
mov
movsl
enter
loope
test
incb
mov
xor
adcb
ljmp
jnp
xor
dec
jmp
enter
xchg
dec
lret
push
push
aad
mov
cltd
inc
xchg
addl
sub
out
movsl
fdivrl
stc
lods
push
das
data16
ja
scas
sub
mov
adc
out
or
inc
xchg
stos
push
or
mov
jb
rol
notl
jbe
ljmp
adc
push
test
test
enter
pop
push
das
dec
add
call
shll
aam
push
push
and
xor
mov
pop
dec
push
push
ss
nop
mov
add
push
jno
cmp
mov
dec
aaa
loope
push
add
jno
add
sub
stos
cmp
ret
pushf
dec
shlb
cmpsb
mov
test
pop
xchg
sub
pop
sti
push
ljmp
insb
mov
adc
adc
imul
add
inc
sti
sub
es
and
add
or
fists
cmc
rorb
adc
jmp
mov
shr
psrlw
sub
dec
jmp
inc
ret
pop
push
insl
or
xor
or
add
mov
pop
scas
mov
pop
jmp
pushl
adc
sahf
lcall
sub
dec
or
scas
outsb
es
sub
stc
dec
inc
jmp
or
dec
ror
push
js
push
xchg
push
or
jl
add
push
cmp
mov
stos
xchg
jne
mov
lds
xchg
mov
aas
leave
dec
push
xchg
pop
xchg
addr16
and
adc
pop
test
push
jmp
xlat
shrl
jno
mov
inc
mov
inc
fsts
popa
lahf
or
dec
xchg
roll
inc
cmp
mov
les
scas
mov
sti
addr16
inc
cmp
sub
imul
jmp
jmp
xchg
sbb
leave
pop
loop
je
pop
out
and
jge
and
lods
andl
cmpsl
jp
and
ljmp
ret
sub
mov
pop
adc
shr
or
aaa
jnp
dec
xchg
icebp
jno
add
lock
jns
or
jbe
adc
hlt
pop
shrl
pop
popf
jbe
push
inc
popf
dec
jmp
pusha
js
testl
dec
xor
pusha
sub
or
or
push
dec
data16
popa
sbb
dec
loopne
jae
push
ljmp
and
xor
jle
mov
lea
add
fs
popf
inc
roll
jmp
repz
frstpm(287
in
or
fstpl
mov
inc
test
cmp
sub
addb
or
sub
jge
cld
xor
pushw
mov
or
sahf
push
jns
into
mov
dec
adcl
xchg
decl
push
sbb
ss
int
jmp
push
push
jecxz
das
or
lds
aad
sbb
and
push
ljmp
jnp
jge
and
dec
add
mov
mov
stos
mov
in
xchg
mov
in
sbb
out
mov
pop
sub
test
lods
push
cmp
jl
add
add
cmp
pop
or
loope
xchg
in
andb
add
sub
jge
jmp
pop
pop
test
mov
pop
xchg
scas
xchg
int3
cmp
add
loopne
adc
pop
inc
xchg
ficomps
test
out
sub
lds
out
adc
in
sub
cmp
sbb
sbb
mov
or
imul
rcl
mov
stc
ret
pop
ret
push
or
cmpb
mov
rcll
outsb
jge
inc
sbb
adc
push
push
out
inc
xchg
inc
pusha
push
negl
arpl
movsb
loopne
pop
mov
adc
pop
dec
jmp
sub
cmpsb
cmp
outsl
sub
sub
adc
outsl
dec
mov
adc
scas
in
insb
pop
scas
js
jmp
lock
push
push
add
sbbb
dec
sbb
sub
pushf
ret
add
inc
repnz
push
jl
out
dec
xor
dec
push
adc
mov
lock
dec
movl
pop
fists
orb
addr16
inc
mov
dec
jne
arpl
in
mov
jl
inc
cld
sbb
or
xchg
idivl
lret
aas
push
pop
sbb
mov
repz
add
jl
lods
std
mov
mov
add
jmp
add
add
fwait
push
xchg
sub
imul
shrl
movsb
add
xchg
sti
inc
int
outsl
std
stos
test
pop
aad
push
mov
adc
mov
pop
cld
das
sub
xor
cli
mov
sti
out
mov
or
rcl
jmp
in
mov
or
mov
mov
popa
daa
jns
bound
insb
pop
int
cmpsb
push
rolb
mov
push
mov
dec
test
pop
std
xchg
sti
add
push
inc
xorb
push
cs
mov
int3
or
add
sub
mov
pusha
repz
notb
cld
dec
adc
dec
or
or
sub
out
mov
pop
dec
ret
std
sbb
and
lret
jmp
mov
daa
hlt
xchg
mov
fs
aam
subl
pop
add
jne
jge
sbb
xchg
mov
cmp
pop
pop
sub
sbb
dec
adc
in
in
pop
dec
fwait
dec
xor
mov
test
test
adc
pop
test
add
inc
jo
xlat
jp
ljmp
and
dec
scas
xchg
test
xor
dec
fnstenv
ds
or
addl
jle
jmp
add
shrl
adc
push
popa
cs
in
cmp
mov
jbe
lods
push
jmp
jmp
push
leave
inc
clc
xlat
sub
clc
jns
xor
ret
sub
add
cmp
inc
int3
sub
push
sti
movsl
adc
movsb
dec
sub
sub
push
jg
outsl
leave
in
push
mov
outsb
pop
jg
and
add
sbb
rcll
shlb
xchg
mov
push
push
and
or
ljmp
lret
out
xor
cmp
and
scas
mov
aas
cmc
dec
es
cmp
lods
push
sbb
dec
jmp
test
add
das
fs
inc
aas
push
and
and
in
inc
gs
inc
mov
ss
mov
and
xor
loope
daa
movsl
sbb
pop
in
xor
cmp
or
push
xchg
xchg
mov
enter
repz
push
jo
mov
dec
ss
or
push
add
jo
sub
jnp
les
aam
jmp
add
and
lahf
xchg
por
dec
shlb
shlb
std
lock
adc
sub
pop
sbb
in
pop
js
shrb
test
push
mov
lods
mov
or
jg
fsubs
xchg
ja
sub
and
mov
xchg
pop
adc
pop
mov
test
push
in
inc
jmp
rorb
stos
pop
lcall
xor
push
or
sub
add
out
and
adcb
loop
sub
mov
mov
data16
inc
jle
pusha
insb
sbb
shlb
pop
rcpps
cmpsl
std
or
sub
sub
inc
mov
aam
ss
mov
mov
repz
ret
enter
mov
sbb
pop
and
mov
lret
cmpsl
or
push
call
sti
lods
push
xchg
jl
jmp
out
fcoms
shrb
add
orl
jb
or
cld
sti
and
imul
out
sub
mov
test
mov
ljmp
mov
inc
dec
and
inc
in
push
and
into
pop
adc
push
insb
jb
out
movhps
or
jmp
push
sub
enter
jl
or
xchg
test
data16
adc
dec
sbb
sub
ret
lahf
jno
mov
xorb
inc
es
pop
mov
inc
out
mov
xchg
dec
cmpsl
or
push
test
sub
in
mov
mov
pop
stos
sub
push
xchg
jne
dec
cld
xchg
push
test
pop
jno
out
shl
jl
cltd
in
loop
mov
cmpsl
mov
mov
addb
fsts
xor
leave
inc
xchg
xchg
and
mov
dec
mov
js
pop
roll
pop
shll
scas
aam
or
pop
push
dec
mov
cmpsl
daa
sub
iret
lahf
mov
push
mov
mov
xchg
nop
aam
lock
test
insb
dec
xorb
ja
sbb
jmp
sbb
push
mov
sub
in
xchg
repnz
cmp
stos
clc
scas
cwtl
test
jle
adc
mov
icebp
cmpsl
xor
cs
xchg
in
xchg
into
arpl
lahf
push
push
shl
and
pop
push
mov
mov
arpl
pop
mov
jp
push
bound
dec
movl
fwait
add
mov
jmp
sahf
push
adc
xchg
repnz
mov
lret
stos
xchg
adc
clc
cmp
jno
mov
or
inc
and
add
mov
push
add
aam
inc
cltd
adc
dec
leave
jne
add
and
sub
and
lock
stc
adc
popa
pop
popf
add
mov
hlt
and
das
rcrb
shrl
out
cmp
loope
and
aam
pop
sahf
mov
pop
jle
cmc
and
je
push
out
call
cwtl
add
cld
xchg
das
dec
inc
lock
pop
imul
mov
mov
add
inc
les
movsl
mov
jmp
jno
sahf
cltd
outsb
mov
les
xchg
add
push
add
sti
push
mov
mov
rcrl
shl
or
push
mov
leave
aaa
inc
jl
pop
mov
rcrb
int3
jle
push
mov
gs
icebp
add
test
mov
push
lret
push
mov
arpl
add
add
cmp
and
add
sub
dec
dec
mov
pop
hlt
icebp
and
adc
call
pop
dec
test
cmp
pop
aaa
es
jle
loop
cltd
push
fcmovnbe
and
adc
mov
pop
pop
sub
jmp
mov
pop
push
icebp
pop
outsl
mov
adc
enter
stc
push
push
and
popf
sbb
push
pop
xchg
out
cld
mov
mov
jnp
push
push
mov
mov
push
dec
loop
xor
dec
and
cltd
idivl
lock
or
add
sub
hlt
shlb
sub
pop
mov
ja
fwait
add
and
jns
aad
orb
ret
xchg
jl
sub
jns
test
divl
push
imul
mov
jmp
jne
clc
mov
test
aas
push
mov
cld
mov
inc
enter
cmp
adc
mov
jbe
cmp
jns
mov
std
xchg
dec
stos
inc
add
aas
pop
add
icebp
sbb
or
sti
cmp
sbb
jecxz
add
neg
dec
jmp
cs
shrb
dec
pop
mov
outsl
arpl
jne
lock
cli
cmpsb
xlat
emms
jae
loop
out
jecxz
test
cmp
push
lahf
adc
jo
dec
jne
popa
jb
cmp
in
or
dec
mov
lea
xor
xor
loopne
arpl
lods
outsl
test
cli
inc
popa
cmp
sbb
xorl
mov
call
mov
and
int
xchg
fwait
jmp
dec
pop
mov
pop
xchg
push
ljmp
test
mov
cs
push
sti
fiaddl
shl
decb
loopne
mov
push
pop
es
or
jge
test
mov
dec
push
inc
pop
mov
push
add
repz
adc
clc
xchg
ficomps
push
pop
push
pop
sti
fcompl
sub
and
fwait
adc
inc
stos
movsb
jle
loopne
and
adc
sbb
je
fsubs
mov
outsl
sub
mov
xor
push
mov
fldl
jmp
pop
pop
jg
call
sub
xor
mov
orb
jl
out
cmp
call
scas
and
mov
out
mov
das
lcall
cmpsl
inc
out
pop
sub
sub
mov
daa
test
icebp
push
daa
jge,pt
mov
cmp
out
mov
jle
pop
pop
enter
pop
stos
xor
daa
loopne
sahf
int3
xchg
pop
mov
jae
xchg
andl
and
popf
jno
inc
sarb
cmp
add
movsb
pop
pcmpgtw
pusha
daa
cmp
jg
inc
hlt
in
pop
add
pop
jmp
jnp
outsb
sub
lret
dec
sub
out
sub
fcomps
add
cmp
sub
in
enter
mov
lea
daa
cltd
jne
mov
or
mov
push
bound
scas
adc
mov
jmp
inc
ret
add
loop
pop
loopne
push
xchg
push
call
jo
addb
jns
sarb
insb
data16
pop
dec
je
xchg
les
sub
lock
add
sbb
and
pop
sbb
pop
daa
dec
push
popf
popf
xor
out
mov
sub
xchg
push
cmpb
clc
mov
lret
aas
mov
inc
mov
out
sti
movsl
stc
cs
push
jb
jno
sbbl
movsb
shrl
pop
adc
test
xchg
adcb
outsb
push
pusha
or
xchg
das
mov
ja
push
lret
cli
fldenv
sbb
idivl
fldt
jmp
pusha
or
shl
jl
inc
int3
jmp
push
aas
jmp
add
cmc
mov
shll
mov
ret
subl
rorl
shlb
mov
das
daa
inc
movsl
jne
scas
ret
neg
sahf
paddb
dec
jo
and
and
dec
mov
push
das
popl
jmp
and
into
inc
dec
std
inc
mov
stos
js
andb
sub
mov
ja
cmp
ds
jmp
into
mov
push
jle
inc
mov
sbb
popf
addb
dec
ja
fs
mov
stos
adc
gs
adc
lock
sbb
inc
aaa
shr
xor
jmp
imul
push
pop
or
or
pop
lcall
shrb
or
pop
add
mov
sbb
or
inc
adc
xlat
fadds
aaa
jo
xor
out
xor
pop
je
pusha
pop
or
mov
lods
pop
jmp
cmp
pop
or
imul
mov
jne
pop
and
or
jl
and
xor
or
punpcklwd
mov
fisttpl
stc
addr16
inc
dec
dec
push
pop
add
fidivrl
movsl
mov
int3
push
arpl
jl
mov
xor
cmp
xor
jmp
pop
xor
add
dec
cmpsl
scas
div
and
dec
movsl
pop
jmp
ret
mov
pop
cmp
add
jmp
sbb
testl
movsl
mov
adc
dec
adc
pop
mov
sbb
test
sub
jmp
jno
fcomp
xor
in
lret
in
repz
clc
arpl
cwtl
sub
xor
pushf
add
jno
jmp
add
xchg
and
inc
aas
outsb
imul
jb
inc
inc
mov
pop
pop
inc
jns
pop
pop
leave
ljmp
pop
or
jge
inc
xchg
jmp
stos
push
dec
push
mov
mov
xchg
add
in
nop
adc
ss
inc
or
jbe
pcmpeqd
jmp
add
push
mov
adc
pop
fldz
ret
mov
push
add
mov
fadds
xlat
sub
pusha
in
sub
pop
or
xor
pop
fsubl
test
push
xchg
mov
xor
cld
add
xchg
in
pop
mov
push
mov
jmp
mov
loop
or
in
mov
fidivrl
xor
pop
out
jmp
lahf
sub
sbb
add
cmp
cmp
adc
sbb
int3
inc
push
push
jg
inc
push
jae
or
fbld
add
imul
jae
std
jnp
js
mov
idivl
fmuls
addr16
rcr
lret
and
pop
outsb
nop
ljmp
sbb
jmp
or
or
test
jmp
in
mov
adc
inc
sub
push
sti
push
fdivr
or
push
sub
or
hlt
xor
xor
je
xchg
bound
add
sub
jle
mov
pop
lock
sbb
sub
sub
pushf
mov
inc
pop
daa
int
loopne
mov
lahf
enter
and
dec
and
inc
js
arpl
ljmp
adc
shl
add
outsb
push
and
bound
std
inc
or
push
icebp
inc
mov
add
push
add
outsl
addr16
xchg
repz
cwtl
movsb
mov
xchg
jp
cmp
sub
fdiv
jg
cmp
testl
add
xor
sbb
sub
decl
inc
std
xchg
ret
out
dec
dec
dec
pop
loope
pop
push
or
sub
shr
lock
add
or
inc
frstor
pop
cld
sti
dec
out
lret
hlt
jns
xchg
mov
xor
js
add
push
mov
inc
sahf
xlat
jmp
pop
dec
jecxz
loop
pusha
push
jo
sbb
in
nop
je
cmpsl
mov
lock
push
sbb
inc
cmp
iret
leave
mov
cmp
jecxz
ret
pop
jmp
adcb
or
stc
in
rorl
or
cmp
ret
xchg
sbb
call
notl
jge
adc
mov
popa
xor
pop
cmp
shrl
jg
push
jnp
test
inc
mov
pop
cli
movsb
sub
cwtl
mov
shrb
xor
dec
dec
push
stos
and
mov
push
cmp
fadd
pop
out
subb
push
dec
jl
and
or
and
rcrb
and
in
idivb
jno
sbb
pusha
loop
jecxz
repnz
sarl
inc
adc
popa
adc
lret
jmp
ficoml
scas
dec
or
and
stos
xchg
dec
stos
sub
icebp
sahf
popa
sub
outsl
inc
mov
xchg
adc
inc
mov
inc
pop
out
xor
imul
add
pop
and
or
ss
or
sub
and
push
mov
subb
cmp
adc
inc
inc
call
cld
pop
cld
pop
ret
or
fs
mov
fwait
inc
xor
or
add
jge
dec
jp
popl
addr16
aas
movsl
ret
int3
lcall
rorb
out
mov
sub
cmc
xchg
pop
lahf
sbbb
sub
jo
insl
dec
push
or
ja
shl
or
jmp
inc
xchg
mov
in
dec
inc
sti
cli
ljmp
push
jae
or
pusha
ja
inc
test
shrb
data16
loope
sub
data16
jno
and
or
jg
rcll
push
mov
add
jmp
pop
mov
cmp
and
pusha
xchg
add
xchg
xchg
mov
repz
adc
lea
fdivl
jmp
idivl
cwtl
cs
inc
ljmp
je
aam
call
pop
pop
push
mov
and
lahf
jno
shr
xor
int
push
mov
or
test
pop
push
jmp
mov
xchg
shrb
sub
sub
test
mov
inc
fs
ds
orb
sbb
push
and
xor
push
pop
mov
not
add
cmp
mov
in
sahf
xlat
and
je
ljmp
das
das
cli
loopne
push
xor
fisubs
jg
and
xchg
jmp
cmpsb
xchg
pop
daa
je
mov
dec
test
mov
jmp
jmp
sub
cmpl
int
aas
outsl
mov
inc
pop
scas
inc
ficoms
add
cld
mov
sbb
and
add
pop
cli
add
inc
fdivrs
dec
ret
jle
xor
push
adc
xor
add
sbb
shlb
je
pop
add
dec
jmp
add
sub
adc
pop
clc
mulb
jbe
adcb
cs
adc
bswap
push
lret
repz
inc
mov
mulb
aad
jno
mov
or
push
jmp
jne
ja
sarl
jg
mov
and
pop
push
je
sub
pop
pop
jmp
addr16
lods
or
cs
outsl
and
es
mov
push
je
xchg
data16
jmp
jle
daa
enter
nop
xchg
add
inc
inc
jb
cmpl
scas
ret
mov
push
lds
cli
imul
or
add
jmp
pop
shlb
ss
pop
push
xchg
out
dec
stos
test
add
adc
mov
xor
movsb
das
testb
out
and
adc
mov
sub
fdivs
in
add
fisttpll
or
and
lods
add
mov
adc
cmpsl
xor
sti
add
nop
xchg
pop
js
mov
dec
rcrl
sarl
mov
sub
jecxz
xchg
jecxz
aam
and
xchg
loope
cmp
or
mov
outsl
bound
adc
sbb
out
inc
xor
adc
sahf
cwtl
orb
inc
pop
sub
jne
lock
aam
or
pushf
push
inc
xchg
cmpsl
xor
lds
loope
fiadds
push
mov
adc
mov
ret
inc
movsb
jbe
imul
mov
jne
shlb
sbb
dec
xchg
inc
or
sub
rcl
lods
pop
adc
pop
mov
adc
data16
gs
add
or
mov
adc
in
add
testl
inc
lahf
pop
adc
mov
aaa
mov
mov
mov
mov
inc
add
mov
sbb
or
js
pop
mov
mov
call
pop
mov
in
gs
jmp
mov
pop
adc
add
xchg
lret
jle
mov
jno
or
cwtl
int
adc
jo
lea
jle
jg
jecxz
or
jae
pushf
inc
cs
inc
sbb
ss
aas
xor
cmp
fiaddl
mov
jne
push
sub
or
or
pop
pop
sub
adc
test
and
or
and
jns
in
sbb
jno
in
movsl
sub
push
stos
stos
fadds
scas
arpl
mov
das
inc
add
pop
adc
cs
dec
add
xchg
lock
dec
stos
push
mov
sar
test
add
mull
fildll
clc
jno
shll
mov
and
mov
jmp
and
push
mov
iret
and
lods
mov
jmp
jo
cwtl
lahf
inc
and
adc
sub
pop
in
cmpsl
jmp
add
mov
push
cs
leave
jg
adcb
sbbl
pop
cmp
or
loope
call
test
or
push
and
sbb
pop
pop
pop
rcrl
in
test
out
adc
rolb
xlat
mov
icebp
int3
mull
adc
outsl
mov
ss
adc
mov
shl
jmp
sahf
lods
pop
sarb
lods
and
leave
dec
pop
push
lret
out
pushf
outsb
cld
inc
movsl
pop
shlb
outsl
popa
xorl
push
movsb
stos
hlt
movsb
adc
or
out
jb
adc
jmp
es
sbb
mov
inc
or
imul
addr16
das
xor
sub
ret
in
insb
pop
mov
cmp
outsb
rcr
enter
mov
jbe
pusha
pop
push
insb
mov
xor
rolb
sub
inc
add
arpl
xor
fwait
push
add
dec
adc
mov
add
mov
jmp
push
push
mov
popf
xchg
sti
idivl
sbb
jmp
mov
pop
or
je
insl
adc
je
xorb
out
popa
dec
xabort
call
pop
sub
push
bound
mov
push
cmpsl
fstpl
jb
std
adc
mov
fdivl
inc
sbb
dec
shrb
call
fdivs
subb
test
aad
in
rcll
test
push
mov
or
dec
adc
clc
aad
shr
add
inc
je
or
or
out
int
jmp
jle
sub
insl
mov
add
cmc
outsl
fs
add
cmp
sbb
in
push
push
mov
pop
mov
hlt
sub
jnp
cli
outsl
clc
mov
add
sub
sbb
xchg
inc
pop
in
daa
jle
adcl
mov
mov
imul
mov
in
ret
daa
push
dec
mov
push
mov
or
xor
push
dec
dec
std
xor
pop
popf
xorb
call
push
sub
pop
nop
pop
out
jbe
daa
sarb
data16
scas
jl
shr
xchg
pusha
add
ret
scas
or
ljmp
inc
movsb
or
and
pop
repnz
lds
xchg
mov
sub
and
cli
sbb
sub
jle
jl
dec
cmpsb
sbb
inc
loope
adc
iret
xchg
jne
xchg
cmpl
scas
adc
in
outsl
daa
xor
aaa
or
or
sub
lds
andb
sahf
dec
dec
fcoms
jo
lods
and
pop
push
les
mov
push
nop
push
mov
and
jle
inc
or
test
mov
jne
rorl
ja
ss
cmp
adc
enter
sbb
mov
sub
mov
dec
cs
mov
fwait
ljmp
pop
les
rcll
ljmp
or
inc
mov
ffree
fisttps
push
jmp
and
add
imul
push
or
lds
rcrb
int3
or
cmp
mov
xor
out
inc
mov
xor
jmp
pop
cmp
popa
mov
or
cmp
dec
lock
push
aad
mov
insb
clc
dec
mov
pop
xlat
movsbl
outsl
push
popf
dec
dec
dec
pop
call
jno
fs
mov
xchg
adc
dec
xor
jbe
jmp
fcomps
je
and
jmp
mov
and
aaa
pop
push
in
xchg
lods
and
add
mov
cwtl
inc
pusha
push
jg
jbe
pop
mov
dec
mov
cmc
fucom
in
inc
or
fs
add
or
pop
mov
pusha
xchg
sbb
cli
inc
sub
aam
mov
cwtl
push
jo
mov
adc
xor
pop
imul
xchg
mov
aam
subb
or
xor
inc
jo
fbstp
add
push
sbb
lods
add
mov
sub
sub
add
jb
cmp
dec
rcrb
mov
inc
xlat
push
pop
jp
dec
adc
adc
pop
add
inc
out
pop
lods
in
les
ret
inc
fwait
ja
fwait
xchg
or
pop
sbb
push
push
mov
shl
xor
orl
in
push
cmpsl
sub
sbb
loop
push
and
arpl
jno
lds
inc
cmp
jmp
fdivp
add
mov
aas
mov
test
adc
out
fsubl
ja
mov
mov
jge
jmp
cs
mov
sub
lea
cmp
outsl
xchg
popf
imul
sub
push
adc
cld
cli
and
and
pop
push
xchg
push
pop
inc
jmp
loop
mul
lret
pop
push
cmpsb
jmp
push
push
pop
roll
rolb
add
push
inc
sbb
aas
xorb
pinsrw
out
repnz
or
fsubrp
mov
and
adc
push
xor
cmc
pause
mov
dec
mov
cmp
xor
jb
xchg
sub
repz
push
or
stos
xchg
mov
mov
dec
push
jbe
push
mov
mov
sbb
jmp
and
mov
stc
cmp
xchg
in
ret
dec
aam
inc
or
dec
jg
pop
or
mov
push
mov
ret
jns
not
mov
pop
loop
jge
pop
xchg
jae
enter
mov
aas
cwtl
adc
enterw
outsb
mov
fprem
outsb
pop
aas
mov
mov
and
and
shl
cmpsl
pop
ret
jge
push
adc
in
add
cmpb
aas
push
pop
add
adc
imul
stc
jmp
xchg
pop
push
and
add
xor
jmp
fld1
add
jne
or
mov
in
subl
push
fs
jl
jb
dec
jmp
fidivrl
mov
les
imul
rol
jle
sub
test
jle
les
popa
in
or
das
and
dec
ret
sbbl
xor
fsubr
lahf
pop
and
sub
pop
scas
mov
dec
mov
push
and
push
das
ret
or
mov
jle
daa
xlat
outsl
test
xor
push
push
popf
mov
outsl
cltd
lea
pop
or
xor
hlt
int3
leave
je
ljmp
idivb
mov
ja
ds
add
mov
ds
popa
sub
mov
jmp
insl
and
pop
jmp
push
adc
jb
mov
loopne
pushf
xchg
push
xchg
mov
cmp
adc
in
and
mov
stc
inc
or
jae
addl
adc
and
in
push
xor
push
std
lock
pop
shr
jo
dec
test
mov
shrb
mov
mov
popf
push
movsl
xchg
shl
aas
test
dec
loopne
add
daa
pop
and
fcmovb
inc
das
aad
ret
add
mov
pop
jp
in
jmp
pop
cmc
pop
aaa
in
mov
jmp
addr16
push
mov
xchg
lret
pop
sub
sti
jbe
loope
iret
pop
inc
lcall
add
pop
pop
loope
stos
xchg
lds
jp
push
adcl
cmp
add
fldl
push
dec
rorl
out
pop
fwait
cli
shlb
jbe
cwtl
add
sub
cmp
sub
enter
push
ret
or
das
out
push
test
or
jge
mov
xchg
daa
jge
fidivs
popf
das
pop
iret
push
shr
push
mov
push
imul
movsb
repz
idivb
adc
insb
scas
pushf
and
mov
add
sbb
mov
inc
and
push
pop
mov
pop
mov
aaa
pop
shll
mov
mov
or
shlb
ficompl
xor
push
rcrb
push
fisubrs
dec
mov
add
orb
fstpt
or
add
lret
out
xchg
push
stos
cwtl
cmp
inc
sbb
addl
jbe
les
pop
outsl
test
rorl
test
adc
xor
add
repz
xchg
test
mov
push
push
nop
mov
mov
pop
push
mov
cmp
push
xchg
mov
pop
sub
adc
jmp
sub
jmp
filds
mov
xor
mov
pop
sbb
movzwl
sti
sti
xchg
add
adc
dec
inc
cmc
mov
push
into
push
test
stos
sbb
xor
pop
fs
bound
inc
xchg
xor
dec
jbe
add
jmp
out
mov
pop
cmpsb
cmpsb
dec
push
decl
jmp
lea
mov
xor
scas
cmpsl
insb
sbb
flds
dec
cmpsl
lock
add
inc
mov
insl
sub
pop
push
scas
dec
cmpsb
fsubrl
mov
sbb
pop
insl
nop
jns
imul
add
lahf
lods
hlt
xor
icebp
add
push
fsubrs
loope
incb
pop
cmc
fstps
and
inc
pushf
rclb
or
jo
loope
cmp
pop
cs
inc
pop
and
dec
sub
test
sarl
mov
repnz
mov
ret
push
pop
sahf
addr16
and
or
jg
xor
sub
and
in
inc
inc
dec
sub
addb
pop
ja
fcoml
pop
in
or
add
pop
add
inc
leave
push
test
mov
pop
mov
pop
xchg
jb
and
pop
pop
add
or
ret
pop
xchg
fcoms
mov
stc
orb
xchg
mov
push
xor
jae
daa
cli
pop
inc
add
lret
xchg
dec
jmp
jmp
pop
rorl
sub
dec
ficoms
adc
or
scas
in
inc
shr
mov
ret
sub
dec
cmc
jne
adc
lret
or
hlt
aam
loop
mov
xor
dec
push
test
mov
push
push
repnz
pop
pop
mov
inc
les
shll
dec
mov
fadds
orl
jmp
in
jmp
xchg
test
adc
cmp
or
mov
lods
adc
int
icebp
cmp
sub
push
mov
add
sbb
fisttpll
mov
lock
iret
adc
or
jmp
sbb
not
or
adc
daa
movsl
fisubrs
add
outsl
test
and
dec
push
mov
sbb
push
sahf
push
mov
mov
leave
shll
mov
and
sub
pusha
pop
inc
das
adc
pop
and
cwtl
sgdtl
shrl
inc
xchg
mov
test
add
fisttps
add
inc
icebp
inc
movsl
mov
rclb
pop
sub
or
mov
outsl
pop
enter
push
fists
jmp
push
inc
vmread
pop
inc
rcll
sub
dec
mov
sub
setae
mov
or
in
rcr
push
or
mov
ret
movsl
sub
hlt
aam
imul
out
push
je
and
cmp
test
xchg
in
jbe
movsl
fs
mov
bound
add
sbb
xchg
cwtl
loop
js
push
lds
push
pusha
pop
pop
mov
nop
sbb
or
into
testl
ljmp
pop
aaa
or
cmpsl
adc
scas
roll
push
xor
sub
rcr
not
or
or
daa
mov
icebp
cmpsb
orb
cltd
je
dec
cmp
mov
sarl
cmp
dec
stos
add
push
push
push
push
push
push
inc
mov
lods
jbe
scas
dec
sbb
cmc
xor
push
imul
jecxz
insb
inc
jmp
jle
stc
push
inc
mov
cmpsl
ja
mov
sbbb
jbe
dec
adc
push
push
pop
push
jmp
loopne
cs
sbbb
mov
adc
roll
mov
cmp
jge
pop
push
or
mov
and
fdivrp
out
imul
or
sub
bound
idiv
push
rcrl
or
push
and
mov
mov
push
xor
shr
andb
jmp
adc
es
jno
in
sbb
mov
and
insb
jmp
into
lock
jmp
cltd
lods
int
stc
sub
mov
movsl
push
inc
sahf
add
push
hlt
sahf
outsb
mov
jge
mov
cltd
out
add
pop
dec
mov
jns
push
mov
and
movsb
mov
dec
add
stos
notb
mov
push
push
icebp
or
shl
repnz
roll
push
cmp
shll
jno
and
pop
mov
cmp
sbb
cli
inc
jns
adcb
or
jg
repz
xor
push
adc
push
add
dec
out
insl
add
scas
adcb
addr16
sub
push
cmp
fsubrs
or
mov
repz
pushf
shl
pop
lock
mov
mov
inc
imul
js
mov
or
sub
inc
jne
out
dec
pop
add
inc
sti
test
data16
fsubs
inc
sub
aad
mov
and
jbe
sub
in
icebp
aad
les
dec
cmpsl
stos
sbb
or
popa
pop
pop
aas
cmp
scas
adc
pop
sub
mov
pushl
icebp
pop
mov
mov
gs
loope
inc
test
pop
movsb
adc
aad
aaa
loop
dec
fucomp
inc
cmc
mov
or
pop
stos
adc
cli
mov
cld
lds
xchg
adc
jmp
ds
jmp
stos
mov
pop
xor
inc
dec
fsubrl
repnz
in
push
add
lret
dec
xchg
cld
push
inc
xchg
imul
lret
aam
jp
out
adc
pop
mov
adc
adc
pop
out
ja
outsb
lcall
stc
arpl
xchg
stos
rolb
or
pop
cmp
imul
loopne
mov
jnp
popa
mov
scas
or
add
pop
es
jo
movsb
mov
pop
sub
dec
adcl
push
add
flds
or
mov
jmp
fs
loopne
aas
insb
pushf
push
xchg
mov
or
sub
push
push
aam
cmp
call
mov
das
js
sbb
adc
pop
push
vmovss
push
mov
rclb
sbb
les
inc
jmpw
xchg
ffreep
mov
add
in
mov
lret
mov
xor
push
es
add
jmp
xlat
lock
in
xchg
mov
xor
add
inc
mov
sub
mov
loop
mov
ret
mov
or
pop
dec
adc
sub
mov
mov
mov
jmp
scas
ret
or
fmuls
fsubrl
sub
aam
sub
aas
push
dec
mov
adc
push
push
add
pop
cmp
jae
adc
cmpsb
in
pop
lock
mov
cs
push
adc
pop
sub
fs
rcl
loope
mov
decl
dec
push
sar
lods
test
push
mov
cltd
icebp
cld
sub
dec
ljmp
ljmp
cld
sbb
outsb
out
inc
xchg
cwtl
push
adc
jmp
addr16
ret
jge
dec
cmp
pop
push
adc
jns
les
ret
loope
dec
dec
cmc
aam
aam
adc
mov
jne
xlat
push
xchg
movsl
sub
scas
mov
sub
stc
lcall
pop
mov
mov
push
movsl
add
ret
mov
mov
add
jnp
push
push
mov
insb
push
gs
shr
in
jbe
push
jmp
push
push
pusha
xor
jecxz
dec
pop
test
fadds
js
inc
add
inc
or
and
fprem1
xchg
push
dec
jnp
in
popf
sbb
mov
or
mov
gs
fisttpll
jp
mov
xchg
shll
sbb
std
jmp
movl
inc
xchg
push
arpl
jge
sbb
lret
pushf
sub
pop
cltd
cli
adcl
ss
and
shlb
fucompp
and
and
pusha
pop
in
je
clc
or
add
xchg
or
xor
add
push
pop
pop
jmp
xor
xlat
mov
imul
xchg
jno
adcl
inc
pop
pop
in
loop
adc
mov
push
push
mov
inc
cmp
out
and
adc
test
lods
add
ret
jg
sbb
add
add
ja
stos
sub
lret
enter
xchg
inc
movsl
sub
pmaddwd
xchg
mov
jl
in
rorb
dec
push
imul
sub
pop
adc
pop
pop
xchg
sub
icebp
pop
xchg
in
push
sbb
add
loop
in
jmp
and
insb
daa
push
mov
inc
test
les
hlt
xor
lods
or
loop
ret
xchg
dec
or
hlt
push
push
cmp
dec
mov
mov
xor
gs
shl
or
push
mov
adc
mov
pop
dec
mov
cli
fmull
push
add
mov
dec
mov
push
dec
mov
popf
jmp
lcall
data16
pop
pop
lods
loopne
sub
xchg
std
xchg
lret
pop
mov
pushl
stos
shlb
ljmp
mov
or
das
dec
fcoml
repnz
push
js
dec
mov
xor
xor
scas
sub
and
stos
jl
and
jge
cmpsb
test
mov
and
shlb
inc
xchg
sbb
subb
inc
mov
add
pop
cmp
mov
push
clc
scas
fstpl
sub
fnstsw
jecxz
push
jp
sub
jo
pop
icebp
mov
jp
sbb
cmp
sarb
fadds
sbbb
call
xchg
sbb
mov
rolb
add
or
xor
insb
mov
imul
fiadds
rcll
inc
iret
ljmp
loope
jecxz
rorb
out
mov
sub
xchg
mov
xlat
and
shrb
call
inc
inc
in
and
idivb
inc
imul
jl
mov
addb
push
add
push
and
stc
int
lret
adc
dec
pop
jecxz
pop
clc
dec
dec
aas
and
call
repnz
sub
fnsave
jae
mov
mov
iret
push
repnz
mov
sbb
jmp
nop
sahf
pop
div
insl
xor
push
mov
mov
loop
pop
cs
cld
mov
mov
adc
xchg
notl
jmp
pop
ret
shll
pop
xchg
daa
ret
fs
lds
push
addr16
scas
fs
addl
add
cli
pop
pusha
iret
fucomi
outsl
pop
stos
push
push
es
and
inc
mov
lahf
push
lods
and
frstor
jg
fisttpll
mov
jae
pusha
jne
fwait
sbb
es
adc
push
mov
dec
ss
pop
sub
rorb
popf
dec
in
and
sub
enter
and
add
dec
mov
loop
icebp
cmpsb
ds
or
sub
jmp
add
test
add
jl
out
mov
adc
sbb
push
jp
ljmp
xchg
daa
sub
aam
into
out
sub
movsb
add
test
lahf
sahf
adc
aas
jns
movsl
fs
push
icebp
mov
jne
jae
rol
das
in
mov
jo
mov
aam
into
jmp
cmc
mov
pop
lahf
loop
push
in
mov
push
sbb
xor
push
loope
lea
cli
and
scas
add
int
adc
jmp
adc
dec
mov
push
inc
xor
adc
ljmp
dec
lods
sub
inc
jmp
fcomps
adc
jmp
daa
add
iret
lods
cli
sub
or
clc
push
mov
and
jge
push
cmpsl
jne
jg
sub
mov
sub
sub
push
xchg
mov
and
into
mov
pop
jbe
add
inc
xor
bound
mov
and
jg
out
jae
jl
out
movsl
inc
xchg
inc
dec
repnz
mov
fs
insb
add
add
mov
ss
mov
shl
fnstcw
in
aas
push
adc
dec
ja
pusha
psadbw
pop
fidivrl
or
lea
mov
hlt
loope
mov
lcall
hlt
sbb
shlb
add
xchg
push
mulb
adc
addb
mov
sbb
sbb
add
lock
out
and
mov
mov
loopne
mov
leave
push
lods
jmp
xchg
or
and
stos
in
notb
jl
mov
outsb
mov
xor
dec
repnz
xchg
and
outsl
sarb
sub
dec
xor
cmc
mov
mov
add
and
clc
psadbw
clc
xchg
pop
bound
or
pop
rcrb
int3
push
push
repz
into
cwtl
xchg
mov
jae
jmp
in
dec
xchg
fidivs
repnz
push
ficoms
push
mov
push
adcl
fiaddl
testb
mov
pop
and
ljmp
mov
mov
pop
adc
dec
adc
lea
pushf
mov
adc
jge
cmp
clc
int3
or
inc
shrb
pop
test
adc
dec
movsl
mov
push
pop
push
xchg
inc
fsubrl
dec
shll
ds
and
inc
jp
jmp
shll
cmp
pop
fists
pop
inc
imul
mov
imul
add
and
gs
loop
dec
andb
pop
cmpb
movsl
aad
push
cmp
xchg
sub
in
pop
adc
cwtl
mov
xchg
rclb
inc
dec
mov
negl
inc
sub
xchg
scas
subb
mov
adc
pop
sub
push
shll
jle
das
pop
pop
imul
jmp
mov
inc
inc
xchg
add
push
outsb
aad
jne
fwait
jne
mov
jmp
xor
sahf
xchg
dec
pop
stc
cmp
xor
test
cmp
push
push
pop
or
dec
xor
pop
sub
sub
lds
cmp
adc
repnz
arpl
rcll
nop
mov
testb
add
jmp
jbe
cmp
call
popa
int3
imul
lahf
scas
movsb
mov
mov
fisttps
test
jo
lock
ljmp
lods
push
push
or
and
mov
cli
pop
int
push
add
push
scas
xor
shr
ds
push
pop
cmc
xor
ja
jne
inc
or
daa
rorb
mov
push
idivl
add
pop
fsubp
loop
and
inc
xor
inc
adc
ret
mov
jmp
movaps
push
hlt
lods
test
inc
test
cmp
pop
test
mov
mov
mov
js
mov
lods
cmpl
and
out
mov
aam
mov
xchg
pop
xor
std
lds
inc
dec
pusha
xor
out
pop
push
mov
nop
lods
shr
add
daa
sbb
cli
or
push
add
sbb
push
mov
addr16
fnstsw
popa
cli
push
lret
sub
add
xchg
inc
dec
jecxz
lods
sub
in
hlt
pop
mov
mov
sbb
mov
lret
ds
dec
mov
pop
inc
adc
cmp
xor
jmp
xorb
cmp
pop
shrl
add
push
mov
dec
pop
jge
push
test
cmpsl
jne
lock
jle
mov
pop
lahf
loope
stos
imul
clc
push
ret
push
dec
fdivrs
dec
popa
repnz
push
and
sub
add
inc
cmc
mov
daa
into
mov
rep
add
inc
out
ljmp
mov
outsb
loope
jge
jg
sbb
inc
mov
mov
sub
add
in
ja
inc
cli
lret
fldl
ficoml
xlat
xor
add
push
lea
clc
xchg
rcrb
add
cmp
add
inc
xlat
jmp
shlb
dec
cli
inc
lahf
jmp
insb
or
push
mov
sub
add
jle
call
push
arpl
or
push
push
add
cmc
loop
jae
nop
pop
add
jmp
adc
jle
mov
push
mov
in
das
inc
adc
adc
scas
cmpsl
mov
xor
xor
fwait
adc
push
clc
push
repnz
fisubl
or
sbb
sbb
dec
mov
in
mov
mov
fidivrl
cwtl
int
or
outsb
dec
dec
or
push
pop
pop
inc
or
xlat
inc
inc
scas
jle
shl
jbe,pn
xor
xorb
popa
cmc
sub
pop
fbld
dec
dec
push
ret
xor
pop
xor
or
jg
inc
sub
xchg
fdivs
jmp
jnp
dec
mov
adc
pop
dec
xor
loope
cwtl
push
or
push
adc
inc
fnstenv
test
jne
xchg
or
pop
adc
sub
push
mov
push
mov
push
xor
lret
iret
div
addr16
test
out
jmp
mov
loopne
lods
into
xchg
push
xchg
jmp
inc
movsl
push
nop
movsb
dec
or
lock
pop
scas
ret
push
clc
sub
out
cli
add
and
nop
and
xor
shr
adc
pop
mov
ja
mov
lahf
dec
xchg
jnp
in
adc
push
popf
sub
movzbl
sub
adc
adc
pop
pop
or
add
pop
dec
icebp
adc
pop
xor
aaa
clc
jb
scas
std
in
mov
pop
aad
stos
cmpsb
shrl
dec
xchg
sub
jnp
roll
pop
js
and
pop
int3
xchg
xchg
push
hlt
jg
add
jge
adc
inc
dec
lods
add
mov
pop
pop
sbb
pushf
or
jno
add
push
shlb
adc
and
icebp
dec
add
out
xchg
pop
dec
add
xor
stos
in
push
adc
clc
inc
stc
pop
inc
or
push
mov
icebp
idiv
int3
push
test
cmc
mov
push
pop
or
pop
mov
rcll
out
test
shll
inc
push
jg
bound
shl
mov
leave
aas
pop
and
cmp
or
fisubrl
inc
push
pushf
faddl
inc
imul
sub
pop
shr
push
lahf
or
arpl
andl
jmp
test
hlt
mov
das
xchg
dec
dec
add
jmp
mov
icebp
das
fiadds
test
repnz
int
adc
inc
in
roll
mov
repnz
rclb
add
and
add
pop
pusha
and
jmp
sahf
test
pop
scas
insl
shll
lahf
fs
popa
inc
pop
lods
or
dec
pushf
cs
inc
jbe
ficoms
daa
or
or
sbb
push
add
pop
add
add
fwait
orl
inc
jbe
or
cmpsl
mov
push
mov
and
movsb
add
enter
sahf
dec
mov
int
fs
pop
stos
loop
adc
lret
push
test
sub
jb
mov
jmp
test
mov
pop
out
imul
add
dec
test
loope
shlb
cmp
cmpsb
inc
std
adc
es
mov
sbb
mov
cmp
mov
add
mov
mov
push
sub
je
es
cltd
cld
jecxz
popf
dec
outsl
loope
ds
and
add
andb
bound
jp
lea
dec
bound
pop
ror
cmp
pop
xchg
sahf
pop
dec
addr16
cmp
push
and
jle
hlt
mov
inc
ja
add
adc
push
add
repz
and
fmuls
mov
jae
sub
jle
das
jle
and
in
pop
jecxz
pop
ret
mov
push
std
and
pusha
pop
mov
cmp
rorl
ja
sub
pusha
aas
dec
hlt
pop
mov
push
mov
scas
push
push
xor
movsb
dec
mulb
mov
jle
inc
sub
add
clc
stos
xchg
and
cmp
inc
mov
add
or
shl
jmp
sbb
or
dec
lahf
inc
or
cmp
pop
sti
js
and
icebp
cmp
jge
sbb
push
loop
pop
and
nop
lods
ret
lcall
add
jmp
cmpsb
mov
add
into
and
into
xor
inc
loopne
popf
inc
in
sbb
mov
adc
imul
arpl
jnp
xor
testb
rcll
sub
or
jp
iret
push
mov
xlat
roll
stos
push
sub
mov
cwtl
leave
sub
push
cmpsl
add
push
or
lcall
sbb
dec
fcompl
enter
adc
leave
cs
mov
pop
pushl
jmp
ret
adc
pop
pop
sbb
lret
scas
rorl
sub
lock
in
mov
adc
or
int
xor
jp
xor
popf
inc
sub
lret
pop
andb
fwait
js
and
add
sub
std
mov
test
sub
xchg
stos
inc
ret
out
lods
testb
mov
out
xlat
leave
lahf
pop
hlt
fsubrs
inc
sbb
add
push
jle
cld
mov
sahf
iret
lcall
jno
test
in
jbe
pusha
adc
sub
cmp
or
mov
add
adc
or
pusha
sbb
jecxz
sub
cmp
mov
in
leave
mov
mov
sub
pop
mov
sub
les
push
add
sub
stos
shrl
push
or
mov
pop
out
mov
cmpsb
push
addr16
push
je
xchg
mov
mov
inc
fwait
js
xchg
adc
outsl
sbb
loop
adc
or
mov
add
aas
addr16
cs
add
scas
aaa
add
xchg
negl
lar
rcr
in
inc
xlat
push
xor
jmp
rclb
out
mov
sahf
and
inc
adc
pop
cld
inc
adc
fwait
add
aaa
inc
es
cmc
xor
cli
and
inc
push
add
sbb
add
testb
push
divl
outsl
popf
ds
sarb
sbb
call
jmp
test
movsb
add
or
cmpb
jecxz
dec
push
mov
popf
xor
popl
push
das
add
pop
rorb
aas
ja
test
sbb
pop
sahf
test
cltd
jns
pop
call
adc
jns
adc
inc
xchg
sbb
jg
loopne
cmp
adc
sub
add
sti
nop
xchg
add
dec
fisttpl
shll
arpl
call
inc
stos
pop
add
dec
mov
push
addb
shrl
mov
mov
mov
jle
popf
fld
and
lahf
add
mov
loope
push
jne
ljmp
add
jbe
jo
dec
push
stos
fsts
outsl
mov
fimuls
sbb
sub
inc
fists
dec
dec
inc
pop
loop
add
pop
and
cmp
cmp
mov
sbb
lock
add
das
mov
test
aas
test
enter
push
mov
pusha
add
jbe
ss
pop
xchg
pop
imul
sub
cmp
punpcklwd
clc
into
add
push
xlat
jge
mov
mov
negb
outsl
filds
and
dec
pusha
test
pop
add
jbe
mov
mov
outsl
add
scas
dec
rorb
xchg
out
nop
ret
cmp
dec
add
push
in
int
mov
jb
add
stos
jno
cld
pop
push
inc
adcl
outsl
es
loop
inc
xor
add
and
add
cmp
cmova
jl
aas
aam
mov
addl
pop
jae
jge
and
and
loope
mov
sub
popl
cmpsb
in
fwait
cmp
nop
mov
push
mov
sbb
cmp
repnz
sub
push
clc
in
add
inc
inc
lock
mov
adc
inc
xor
mov
add
adc
adc
xor
xor
popf
adc
pop
add
mov
andl
sahf
jne
xchg
pusha
jp
push
mov
dec
ds
stos
and
nop
add
jbe
mov
dec
pop
fiaddl
or
add
lcall
inc
mov
arpl
divl
push
mov
push
mov
incb
fadd
addr16
mov
jns
add
xor
popf
int
jb
pop
clc
scas
pop
js
mov
add
push
adc
add
mov
push
pop
xor
js
push
cli
sbb
sub
in
pusha
jp
xor
sub
ss
xchg
dec
daa
add
out
push
lret
test
ret
cs
lods
add
loope
in
daa
out
testb
addb
sbb
in
add
cld
pop
adc
xchg
add
xchg
rorl
sub
dec
insl
test
in
xorb
cltd
add
icebp
pop
int3
cmp
lock
inc
pop
push
and
adcb
les
js
add
sbb
sbb
mov
mov
aas
jecxz
xorb
lods
or
mov
imul
mov
rorb
jne
testb
call
hlt
and
lock
xor
or
subb
mov
movsl
add
mov
jo
fsubl
jle
mov
lcall
cmpb
fistpll
std
push
aam
mov
cwtl
or
adc
loope
mov
inc
add
scas
into
in
and
xor
add
or
movsb
pop
lret
jno
rol
insl
cmpsl
xchg
repnz
in
mov
and
inc
pop
add
loopne
jp
add
mov
and
dec
stos
cmp
imul
mov
dec
cmp
je
clc
xor
xchg
push
std
mov
lret
arpl
xor
loop
xorb
in
jbe
in
cwtl
mov
push
clc
int
or
dec
cmp
adc
aaa
pop
subb
jno
decb
cmp
addl
shl
cld
sahf
and
cmp
insl
jo
cmc
popa
mov
push
fmul
out
in
mov
add
pop
and
out
adc
add
test
jl
add
dec
add
repnz
cmc
adc
or
mov
push
mov
repz
or
add
ret
pop
data16
cmpl
sarl
clc
pop
cmpb
popl
les
pusha
push
add
sbb
pop
daa
inc
mov
loopne
sub
dec
stos
into
ret
inc
sub
cmc
call
fsubs
cld
lods
xor
mov
add
scas
push
inc
adc
fiaddl
jl
xorb
add
in
jno
cli
mov
out
fwait
test
sbb
adc
or
mov
mov
lret
hlt
mov
pop
push
pop
shl
xor
rolb
loopne
pop
sbb
mov
jae
add
or
mov
pusha
sub
pop
out
add
adc
pop
xor
stos
mov
iret
clc
mov
movsb
sub
insl
add
mov
outsb
sbb
out
mov
inc
adc
push
or
mov
ljmp
loop
and
xchg
xor
fsubs
loop
jno
pop
into
or
aaa
jecxz
mov
pop
clc
push
dec
imul
add
add
sub
adc
or
jp
sub
cmpsb
sub
add
in
out
push
or
xor
lock
or
dec
sbb
data16
sub
add
and
inc
mov
add
dec
push
in
nop
add
add
add
jle
in
add
mov
sbb
dec
notb
aas
push
pop
mov
and
sbb
lret
adc
ret
sub
dec
mov
dec
push
cmp
popf
cltd
inc
adc
pop
inc
negb
sbb
mov
outsb
sbb
add
pushl
sbb
inc
add
sbb
mov
pop
stc
add
jmp
and
inc
or
sbbb
lea
and
mov
xorl
sbb
add
mov
stc
scas
adc
mov
xor
pusha
xchg
push
je
aaa
data16
in
push
test
and
mov
lret
add
mov
imul
xchg
mov
mov
add
pusha
mov
mov
or
into
rorb
xchg
xor
mov
loopne
je
sarb
sub
es
add
push
xor
pop
add
scas
clc
and
cld
jge
out
rcrl
add
inc
jnp
out
fisttpl
pop
jo
dec
test
hlt
add
cmp
lods
leave
daa
and
mov
aaa
xchg
shrb
sbb
cmp
add
mov
push
aas
add
aam
or
and
add
loopne
lock
jg
xchg
les
add
repz
jb
dec
stc
jecxz
jp
pop
popf
sbb
pusha
test
add
aas
pop
sbb
std
cmp
mov
mov
sbb
pop
out
in
loopne
mov
add
sub
pop
insl
test
pop
add
and
loopne
pop
jb
mov
adc
in
in
add
loopne
sub
lret
mov
sub
fnstenv
addr16
or
js
in
cmpsb
cwtl
fwait
lret
stos
popl
mov
cmp
leave
cmp
pop
add
out
mov
xchg
jle
nop
xchg
scas
movaps
adc
inc
pop
adc
out
cmp
cwtl
subb
pop
sarl
in
int
inc
add
sbb
jnp
mov
out
adcb
scas
ja,pn
add
add
nop
sub
aad
cmp
dec
or
lret
out
sub
adc
ss
bound
push
int
sbb
add
mov
and
inc
negl
jae
scas
aam
sub
ljmp
add
push
enter
imul
lods
pusha
sbbb
cmpsl
ficoml
push
adc
mov
es
mov
clc
jle
add
cld
scas
les
cld
ltr
dec
lea
repz
xor
movsl
pop
add
fildl
add
out
adc
stc
xchg
adc
xor
sbb
mov
push
xchg
sarb
mov
add
int3
xor
ljmp
stc
jl
loop
sub
add
shld
gs
scas
xor
inc
dec
inc
insw
and
add
scas
jg
jo
in
adc
idiv
setb
in
mov
adc
bound
ja
add
xchg
pop
mov
add
pop
and
push
scas
xlat
loopne
loopne
add
pop
fimuls
fwait
das
stos
out
les
test
sbb
imul
sub
add
add
mov
push
fadd
dec
add
daa
jl
dec
je
fiadds
xchg
lret
data16
xchg
cs
mov
add
xchg
or
add
or
sub
testl
add
xchg
jo
or
iret
pop
repz
ja
loop
xor
pop
mov
cmp
add
outsl
pop
cwtl
idivl
aam
pop
add
adc
xchg
xchg
lcall
inc
cmc
adc
sbb
adc
lahf
ss
inc
mov
fsub
add
sub
inc
cwtl
adc
pop
sub
and
push
repnz
pop
std
ret
mov
in
testl
inc
add
mov
jno
imul
sbb
leave
and
movb
loope
push
mov
ss
in
call
nop
inc
add
fs
pushf
jno
shlb
jle
push
out
add
sbb
sbb
and
or
mov
or
arpl
pop
jecxz
push
insl
mov
sti
add
push
aaa
mov
mov
jp
popa
out
jne
rorl
mov
mov
ljmp
sub
in
pusha
js
pop
shrb
push
adc
push
inc
aaa
and
add
les
fstl
xor
dec
or
mov
mov
add
xchg
pop
loop
sub
iret
add
insb
sub
js
setg
mov
ja
mov
push
xor
jb
add
out
aas
sub
jns
add
mov
lret
inc
fistps
inc
pushf
pop
daa
testl
jbe
or
push
mov
push
add
inc
cs
in
js
dec
inc
dec
cmp
add
push
loope
add
mov
ds
rolb
add
in
xlat
pop
dec
mov
ljmp
addl
je
mov
add
dec
rclb
cmp
cli
add
sub
or
cmp
push
pop
mov
addr16
cmp
mov
mov
add
mov
out
mov
scas
aad
out
sub
add
aas
test
imulb
pop
test
inc
add
icebp
rcll
cmp
add
scas
sbbb
rclb
fwait
push
add
ss
ljmp
in
jl
mov
cmp
out
je
fwait
inc
fcomip
dec
cmp
xchg
popa
jne
mov
and
add
rolb
add
push
inc
sbb
aam
xor
add
push
lock
psrlq
push
pusha
sbb
fiaddl
jno
or
adc
rcl
clc
in
xor
lock
push
es
pop
ret
xchg
arpl
dec
loopne
hlt
or
and
insb
pop
outsl
xor
jae
inc
decb
cld
sbb
shr
or
add
jl
push
test
movb
rcll
mov
mov
out
lods
inc
mov
and
es
jo
lss
push
and
xor
mov
test
jno
pusha
jo
jb
xchg
lods
sub
mov
xor
insb
and
adc
aaa
dec
movsb
cwtl
jl
push
ret
cmp
mov
jo
push
cmp
dec
push
jge
inc
pop
add
ljmp
add
sbb
and
dec
push
add
sub
cmpsb
xor
inc
cmp
adc
push
add
cmp
cmp
aas
add
push
stos
jp
loopne
inc
in
mov
jecxz
inc
pop
in
xchg
inc
clc
lret
add
in
push
aas
xchg
pop
xor
add
mov
cmpsl
add
call
dec
cmp
mov
shlb
fs
shlw
mov
dec
add
ret
je
or
sbb
aad
icebp
cwtl
xor
sub
push
ss
mov
dec
xorb
jle
out
add
add
add
nop
push
arpl
mov
loope
push
mov
add
cltd
stc
mov
fwait
mov
in
push
add
inc
add
std
or
test
and
lret
add
or
rcll
add
cmpsb
push
pop
cwtl
add
push
or
cmp
fisubs
add
mov
loopne
pushf
pop
push
nop
adc
inc
pop
xor
popa
pop
bnd
add
dec
sbb
and
aas
ds
xchg
dec
add
xchg
cmpb
add
push
in
jmp
rcrl
mov
pop
outsl
jg
dec
lods
arpl
js
mov
mov
dec
mov
out
cmp
jno
pop
sbb
mov
add
add
mov
xor
aam
sti
add
mov
divl
test
mov
es
xor
insb
pop
shl
push
or
jb
lret
push
fadds
addl
cmp
ds
mov
rolb
clc
and
je
cltd
dec
dec
and
ret
inc
sub
sub
push
rolb
xor
mov
mov
sbb
xchg
pop
add
ljmp
add
pop
mov
xchg
mov
cmpsb
xor
or
fs
in
int
xchg
mov
xchg
add
mov
add
les
shll
in
stc
adc
xor
sub
push
mov
add
pusha
in
or
add
inc
push
mov
push
lds
imul
jl
mov
jb
daa
lods
jo
inc
add
jp
sahf
push
jo
lds
xchg
mov
lahf
jmp
stc
lock
xchg
mov
sub
push
jo
or
das
inc
mov
dec
add
mov
jns
dec
jle
push
inc
clc
pop
jb
or
test
push
pop
dec
inc
unpcklps
adc
repnz
mov
pop
push
cmp
pop
out
adc
xor
mov
mov
and
inc
pop
outsb
jge
sahf
dec
add
push
ljmp
pop
mov
add
stos
fistpl
inc
jmp
hlt
fs
out
cmp
add
ret
and
sbb
scas
xor
dec
popa
stos
adc
mov
cmp
aad
insb
add
repz
add
ret
pushf
notl
mov
add
mov
or
lods
hlt
dec
push
sub
sbb
xorl
cwtl
mov
gs
inc
outsb
nop
ja
int3
push
or
sbb
pusha
pop
das
andl
add
mov
roll
mov
add
mov
jbe
loop
subb
aam
add
xor
arpl
mov
filds
test
jecxz
jb
sub
lret
incl
jge
cmp
sub
pushf
jno
adc
test
aad
jae
iret
xor
add
jle
lock
dec
andb
popf
je
sub
mov
nop
xchg
xor
mov
pop
add
pavgb
call
add
push
shl
std
mov
xor
idivl
sub
mov
or
jnp
repz
mov
sub
in
push
xchg
xor
stc
or
cs
cli
add
mov
add
loopne
loope
add
pop
xor
lcall
xor
xorb
xchg
jge
cmpsb
mov
cmp
inc
insl
aam
xchg
mov
push
mov
xorl
or
push
mov
lock
fiaddl
or
adc
mov
or
test
xchg
adc
add
jne
in
mov
or
jge
mov
gs
inc
dec
addr16
repz
addl
mov
pop
int3
gs
add
inc
fsubr
mov
mov
fldt
es
cmp
or
aam
lea
dec
mov
daa
int3
mov
inc
add
mov
fisttps
aam
das
ss
cmp
test
xchg
mov
cmp
hlt
in
xor
adc
inc
lock
or
inc
adc
pop
sub
inc
outsl
addr16
cmp
out
mov
loopne
mov
in
or
ss
mov
jo
push
add
mov
movsl
mov
mov
cltd
mov
mov
pop
jp
add
xchg
lret
cmp
rorl
aaa
xor
or
xor
cltd
cmpsl
mov
sarl
int3
jns
into
icebp
ret
add
fisttps
into
mov
xor
dec
popf
ds
sub
or
ror
xchg
sarl
dec
ljmp
or
push
and
and
add
dec
xchg
inc
les
xor
cmpsl
add
mov
loop
and
add
push
cmp
aas
add
xor
outsl
sbb
sub
cmp
test
adc
fcmove
pop
add
push
mov
addr16
shrl
lret
in
jns
jge
enter
or
dec
nop
pop
aad
jb
stos
nop
mov
mov
sbb
adc
xor
pop
mov
add
aam
xchg
mov
add
pop
jne
or
hlt
dec
and
sub
sub
rolb
rcrb
push
sarb
out
mov
hlt
addr16
filds
pop
stos
adcb
mov
jle
push
mov
jo
adc
repz
jno
lahf
mov
xor
cmp
fsts
or
dec
popl
push
in
test
push
and
mov
add
push
add
add
adc
adc
inc
movb
lods
js
sti
cld
pusha
lret
sbb
arpl
test
jg
adc
xchg
bound
lods
jo
jg
adc
sbb
scas
xor
mov
imul
or
into
xor
cmp
pop
push
cs
shlb
in
add
iret
add
adc
jnp
insb
sub
out
sub
rcrb
stos
sahf
jp
push
aad
les
gs
inc
mov
popf
push
mov
cmp
inc
hlt
pop
mov
popa
pop
dec
sbb
cmp
jns
pop
jp
lock
jnp
dec
into
adc
sub
jae
push
outsb
jne
cmp
cld
je
iret
loopne
loop
rcr
add
addl
add
mov
shlb
bnd
or
push
xor
inc
insl
js
add
jne
in
dec
inc
lods
bnd
pop
popfw
or
adc
xor
push
xlat
add
jmp
push
fwait
shll
push
jbe
add
movsl
sbb
pop
mov
loopne
ds
add
cmp
stc
push
push
js
add
jns
sub
pop
jno
or
jg
adcl
rcrl
push
jmp
push
mov
add
jb
add
pop
cli
jg
sarl
xorl
ret
add
mov
insl
dec
dec
mov
pusha
pop
inc
add
aas
testl
sub
add
sub
push
mov
jmp
add
jecxz
int
xor
push
mov
loopne
stc
idivb
popa
inc
test
sbbb
pop
sahf
js
out
jge
pop
push
cmp
cmp
cld
adc
les
pop
addb
jl
lods
cld
xchg
jns
sub
mov
mov
std
dec
or
mov
mov
sbb
push
cmp
mov
cmpb
mov
outsl
ja
jge
add
push
add
or
shlb
push
xor
mov
cmc
add
sti
add
les
inc
and
inc
mov
call
mov
pop
out
cmpsl
mov
dec
clc
push
mov
pop
inc
cld
dec
dec
and
ret
inc
cmp
into
insb
mov
in
xchg
or
jl
cwtl
xchg
xor
mov
fadds
pop
sub
aaa
mov
addl
inc
mov
roll
or
scas
subb
or
outsl
mov
jmp
push
xchg
leave
inc
hlt
aas
adc
cwtl
dec
repz
scas
lock
or
jne
ljmp
fs
loop
adc
int
jne
or
popa
or
or
xchg
mov
cld
inc
test
int
adc
push
cwtl
pushf
push
inc
icebp
fs
mov
bound
adc
lcall
pop
push
and
push
jl
mov
shrb
xchg
jns
fcom
adc
xchg
in
pop
inc
in
and
inc
adc
rolb
push
mov
mov
lret
andl
aad
push
movsb
dec
lds
dec
pop
enter
aaa
sarb
xchg
cmpb
cs
pop
fldt
nop
js
push
dec
sbb
bswap
xchg
xchg
imul
rorb
call
mov
je
cmp
frstor
scas
mov
andl
xor
sbbb
test
add
ja
ljmp
popa
sbb
sbb
mov
add
in
mov
insb
sahf
rorb
pop
add
lahf
rorb
pop
aam
or
shrb
shrl
sub
cmp
sub
cmp
mov
adc
inc
pushf
pop
push
mov
xorb
sbb
fsubs
xchg
pop
inc
mov
xor
sahf
popa
fs
pop
call
sar
and
adcb
in
mov
movsl
xor
dec
and
test
push
add
push
add
les
scas
and
sub
pushf
xor
jl
js
xor
mov
and
jae
js
roll
mov
add
add
jmp
sahf
dec
orb
pop
inc
mov
sub
dec
sub
mov
fs
or
and
pusha
shlb
enter
pop
shlb
push
push
fs
cmp
add
call
push
pop
fwait
add
addr16
in
pop
sub
inc
push
roll
lods
sbb
filds
or
or
fwait
call
dec
outsl
and
push
loop
sbb
aam
icebp
adc
xchg
in
int3
xchg
xchg
adc
jp
rorb
fdivs
mov
cmp
push
adc
inc
inc
or
lret
loope
adc
pushf
sarb
lret
aas
aam
dec
mov
push
dec
jne
dec
mov
enter
lds
movb
rcll
shlb
dec
rclb
lret
int3
mov
dec
mov
mov
xor
adc
sub
lahf
repnz
les
sub
popa
mov
leave
push
xchg
cmp
mov
and
sar
cmp
imul
nop
inc
dec
adc
mov
movsb
orb
lret
xor
add
hlt
dec
mov
adc
add
ds
push
xorl
xor
or
mov
push
pop
test
rolb
mov
inc
inc
adc
in
les
jnp
lret
sbb
fcompl
sbb
add
mov
cmp
test
and
aam
loopne
add
in
sbb
jb
add
fisubl
pusha
scas
add
pop
lock
jle
sub
mov
cli
add
out
add
cmp
mov
dec
sub
shrb
adc
mov
mov
xorb
ja
add
adc
jp
aas
jb
cmp
test
jle
adc
sbb
mov
loopne
mov
js
flds
mov
das
pop
testb
fadds
cmp
mov
int
or
sub
xchg
mov
cmp
pop
pop
cli
rolb
or
fisttpl
push
adc
add
sub
or
enter
fistps
jb
add
dec
fisttpl
or
repnz
jo
add
dec
sahf
pushf
jns
mov
xor
pop
cs
dec
cmp
rorb
nop
in
mov
xchg
sbb
jl
shlb
sbb
leave
add
sarl
cmp
adc
fadds
or
or
sti
and
fsubrs
xor
add
in
pop
add
popa
sbb
add
aam
cltd
mov
mov
popa
xchg
xchg
adc
sub
in
and
pop
jo,pt
jmp
add
mov
jnp
jg
adc
push
add
pop
mov
out
cmp
xchg
sbb
shlb
pop
int3
mov
mov
and
adc
test
add
sbb
jae
clc
out
push
cmp
jb
xchg
add
outsl
sar
arpl
inc
mov
pushf
sub
movsl
add
pop
dec
add
sbb
add
jnp
and
incl
out
adc
pop
pop
pushf
xchg
jbe
xor
add
gs
out
cmp
test
add
adc
and
out
adc
mov
add
jge
insl
jb
add
movaps
or
loop
cmpsl
pop
jo
pop
rol
fbld
aam
mov
jnp
dec
mov
cmp
test
cmp
jle
lahf
dec
and
sti
add
push
pop
push
movsb
jg
loopne
xchg
add
les
repz
fdivrl
jmp
adc
jno
out
pop
push
pop
mov
cmpb
hlt
dec
cld
sbb
out
push
mov
mov
arpl
sbb
sub
xchg
mov
inc
or
fwait
addb
and
inc
pop
cmpsb
jp
push
adcl
stc
xchg
sbb
xchg
or
les
add
into
sbb
mov
inc
incb
dec
or
je
aas
movsl
push
lret
add
loopne
ja
gs
clc
scas
add
addr16
lcall
jne
pop
jg
mov
and
test
sbb
scas
add
nop
cmp
pop
add
mov
add
outsb
rolb
rol
cs
rclb
add
xor
pop
mov
mov
xchg
sub
push
add
outsb
add
fistl
imul
popa
jb
lcall
mov
adc
rdtsc
adc
fmuls
dec
andb
test
add
pop
sbb
shrb
cmp
mov
cwtl
prefetch
movsb
push
mov
loop
mov
enter
out
loop
add
or
xor
mov
subb
pop
sti
testl
xor
mov
jo
in
sahf
sub
xchg
fdivr
loop
xchg
mov
mov
mov
or
jmp
shll
push
rolb
cli
shlb
cmp
fstl
in
push
or
xorb
les
cmp
add
movsl
push
mov
pushf
add
add
pusha
cmp
push
pop
sbb
subb
dec
in
lds
sbb
cmp
test
mov
iret
fisubrl
dec
ret
mov
pop
negb
add
sub
pop
push
mov
dec
fistpl
bound
into
add
inc
movsb
xlat
cs
mov
adc
add
loopne
lods
jp
call
pop
adc
fadd
enter
mov
jl
int3
add
jp
popf
xor
mov
pop
push
addr16
add
lods
andb
dec
aam
jns
mov
ljmp
add
fsubrs
pop
add
inc
push
mov
out
test
decb
sub
add
xchg
loop
imul
add
repz
enter
adcb
xor
push
jle
add
dec
xor
sub
pop
fiadds
dec
add
scas
popf
xor
cmpsb
add
adc
shl
adcl
inc
pop
test
mov
dec
mov
adc
ficompl
cmc
or
and
lods
sbb
test
cmp
cmp
push
daa
insl
aaa
mov
popf
test
jg
es
add
ficoms
cmp
jp
dec
les
mov
add
and
push
ret
mov
icebp
lds
cmp
enter
add
mov
mov
dec
fisubrl
sub
loop
ljmp
data16
add
sbb
xchg
faddl
mov
mov
pop
add
jae
push
sub
mov
mov
sub
test
add
dec
mov
add
pop
mov
sub
dec
out
icebp
lock
rclb
push
inc
pop
aad
add
test
loope
inc
jge
add
psraw
call
cmc
add
dec
or
arpl
sbb
pop
pusha
push
add
or
hlt
add
add
lcall
pop
test
rclb
jg
fadd
rcrb
in
lods
es
and
push
pop
add
inc
and
aaa
in
cmc
adc
add
daa
sub
pop
lds
sbb
inc
mov
lret
aad
push
or
or
xchg
add
cmp
dec
mov
add
cmp
mov
sbb
push
jne
add
fidivl
push
inc
pop
scas
xchg
scas
mov
mov
ljmp
mov
incb
shl
cmp
sahf
out
add
adc
dec
jecxz
add
sub
scas
jno
xlat
mov
add
pop
mov
decl
out
pop
adc
test
inc
or
mov
inc
mov
scas
sbb
outsb
int3
aad
mov
xchg
insb
shrl
roll
popf
jmp
adc
popa
dec
pop
push
andb
push
xor
hlt
inc
pop
or
push
add
jmp
outsl
add
push
push
jl
mov
das
nop
pop
pop
and
icebp
mov
out
insb
dec
fldenv
xor
add
or
rcll
sub
add
rcrb
ss
xchg
orl
daa
or
mov
add
fs
out
inc
scas
sbb
pop
stos
int
rolb
and
push
mov
loopne
adc
and
dec
and
fisttpll
test
addb
vmovups
and
mov
outsb
leave
push
lock
flds
jge
pop
cltd
mov
fmulp
roll
testl
xor
sub
shrl
test
ljmp
mov
fsts
sub
add
inc
dec
add
add
xchg
aaa
jge
sbb
push
xor
fwait
sub
shrb
add
adc
sbb
loopne
paddusw
es
cmp
pop
pop
aam
in
or
add
add
mov
pushf
xchg
adc
lds
mov
add
jmp
jle
add
add
out
xor
add
mov
cmp
jmp
jns
push
testb
add
int3
add
inc
pop
jnp
mov
push
test
or
test
in
fildll
insl
lret
fcoms
lahf
pop
mov
sub
lds
sbb
mov
dec
inc
push
jno
add
add
add
mov
shll
cs
pushf
and
or
adc
ljmp
push
add
inc
adc
add
popa
dec
sbbl
pop
pop
fwait
xchg
aam
add
js
and
lds
xchg
lods
add
and
mov
dec
mov
ljmp
lock
add
and
cltd
push
loop
xchg
adc
xchg
sbb
sahf
and
test
out
add
sbb
pop
mov
cmp
pusha
sbb
xchg
pop
out
pop
test
mov
aad
es
xchg
sbb
sbb
sbb
call
dec
cltd
or
inc
shll
sub
inc
arpl
sbb
fsubl
ljmp
loop
pop
fcompl
xor
add
fsubs
or
in
push
lahf
adc
push
and
xchg
push
dec
lret
jg
stc
dec
add
xor
xchg
mov
cmp
and
push
push
fptan
daa
cmp
dec
add
jns
jb
ror
jl
pop
inc
push
mov
xchg
mov
insl
movsl
hlt
lods
test
adc
out
cld
adc
sbbb
jae
fidivrl
or
adc
or
mov
imul
rcrl
jb
nop
adc
push
xchg
push
sub
outsl
and
mov
lods
js
xchg
imul
outsl
and
and
pop
pop
add
clc
mov
mov
in
jns
jmp
clc
xchg
cmp
cmp
or
push
sbb
xchg
insl
gs
nop
cmp
jns
sub
icebp
outsl
clc
sub
xchg
jp
or
out
push
push
stos
dec
mov
sbb
scas
adcb
sbb
cmp
mov
dec
or
and
sbb
gs
adc
xchg
pop
inc
call
jb
mov
mov
nop
movsb
dec
mov
je
mov
pop
cmpsb
ds
inc
mov
sbb
mov
xor
loope
enter
sub
stc
orb
sbb
mov
mov
and
fcmovu
inc
les
insl
lahf
sub
stos
push
adc
data16
sub
and
or
mov
fs
add
xchg
xchg
mov
jns
xchg
hlt
dec
popa
mov
and
repnz
lahf
mov
pop
std
nop
and
sub
mov
shr
mov
imul
and
sub
popa
mov
jne
inc
xchg
fsubrs
dec
sub
lret
adc
or
add
test
dec
inc
fs
add
cmp
mov
lea
sub
xchg
jns
xchg
outsb
notl
add
xor
fnstsw
cli
ret
add
xchg
sbb
inc
in
pop
scas
push
addb
popa
loop
adc
mov
loope
mov
cmp
and
or
push
test
call
sub
sub
fldl
dec
shlb
push
xchg
sub
push
inc
clc
sbb
pop
adc
out
shr
lahf
loop
xor
in
xor
loope
sbb
push
lahf
sbb
lods
je
add
mov
addr16
jo
jecxz
fldenv
sbb
loope
push
andb
pop
add
and
lcall
sbb
out
mov
and
cwtl
cmp
and
lock
dec
inc
loope
dec
xchg
mov
mov
test
pusha
fwait
leave
and
jl
rep
roll
mov
stos
add
xchg
mov
pop
mov
xor
mov
add
mov
and
xchg
sbb
popa
mov
mov
sub
dec
and
ja
xchg
push
dec
push
je
and
std
xchg
xor
pop
icebp
daa
xor
daa
adc
testb
push
fnstenv
or
and
ret
popf
sbb
cmp
sbb
or
push
lahf
inc
push
rol
push
add
pop
fsubl
push
ficoms
repz
in
dec
push
mov
add
fiadds
sbb
lret
shlb
or
outsl
adc
ljmp
loope
mov
mov
pop
lahf
sbb
ret
or
push
rcl
call
jecxz
cltd
or
popa
cwtl
push
and
push
or
mov
push
xchg
sbb
es
divb
push
mov
or
push
out
dec
and
fwait
or
inc
test
push
cltd
outsl
xor
dec
cwtl
mov
cmp
and
adc
andb
test
loopne
orb
fs
push
xchg
mull
addb
mov
sbb
fimuls
mov
mov
jecxz
sbbb
dec
mov
mov
push
mov
xor
repz
lock
xlat
sub
je
mov
fcompl
jmp
and
fbld
lods
je
add
pop
and
nop
mov
les
orb
lds
xor
in
jl
in
dec
cltd
sbb
aaa
adcl
or
je
outsl
adc
sbb
xchg
rclb
cwtl
es
sbb
movl
inc
mov
cmpsb
lock
sbb
daa
int3
lock
dec
and
arpl
pop
push
lock
fidivs
adc
mov
cmc
xchg
jg
ja
mov
mov
shrb
lahf
cltd
ret
fwait
mov
jl
push
lcall
ss
sbb
inc
cmp
in
lahf
dec
xchg
imul
add
fmull
arpl
cmc
es
mov
mov
test
shr
sbb
leave
jl
push
stc
mov
ja
xor
aas
xor
jno
movsb
push
stc
add
push
test
cmpsl
jle
xor
js
sub
add
mov
xor
lock
jl
xchg
in
pusha
decl
cmpb
lds
xor
xchg
test
mov
mov
and
lret
fadds
test
inc
mov
sahf
dec
stc
mov
mov
cmp
mov
jecxz
add
pop
andb
test
push
mov
cmp
mov
mov
or
and
and
xchg
ds
or
addl
add
xchg
out
mov
xor
adc
mov
int
loop
jl
mov
push
jg
mov
ljmp
jo
mov
xor
sub
je
add
repnz
mov
xchg
sub
or
push
mov
sub
jo
mov
push
mov
adc
adc
mov
push
inc
jecxz
dec
pop
cmp
lahf
add
dec
negl
push
call
mov
cmp
test
jl
rcl
push
adcb
push
inc
pop
jmp
je
or
cmp
and
add
mov
mov
mov
or
mov
fdiv
and
add
add
mov
push
scas
pop
sbb
jo
cli
sbb
and
jns
lods
dec
xor
adc
pop
add
inc
cmp
xor
fiadds
xchg
test
jle
nop
out
movsb
test
mov
pushf
add
inc
push
lods
sub
lods
pusha
test
push
and
jne
and
xchg
sbb
cmpb
push
xor
mov
mov
sahf
inc
test
dec
mov
xor
cmp
add
adc
mov
mov
sbb
fs
mov
sar
lea
call
push
gs
js
jmp
fmul
jmp
and
mov
xor
add
mov
jno
mov
mov
outsl
lds
or
fmulp
stc
pop
inc
cli
jmp
andl
sbb
aam
cld
ret
sbb
loop
mov
xor
inc
jmp
loope
mov
cwtl
cmp
push
xchg
pop
dec
dec
pusha
mov
mov
mov
jns
add
test
xor
cmpsb
test
pusha
lahf
push
add
add
cld
mov
adc
add
repz
call
mov
shr
arpl
xor
push
add
out
imul
mov
adc
cwtl
mov
shlb
out
lret
in
mov
inc
cmp
mov
jns
adc
aas
popf
xchg
mov
jmp
negl
push
out
mov
out
sahf
push
int
pop
repnz
inc
or
xor
mov
jo
xchg
mov
push
mov
dec
lods
out
dec
jp
stos
add
addb
inc
jmp
test
repnz
lods
rolb
inc
addr16
push
in
push
lea
pusha
pop
mov
cld
mov
addl
lret
and
dec
insb
and
mov
jnp
and
adc
sar
add
in
loope
or
cwtl
insb
inc
lods
cmp
pop
fwait
stos
mov
mov
mov
fsubp
mov
imul
popf
add
pop
fbld
in
sbb
inc
repz
adc
adcb
adcb
lea
jl
mov
and
cwtl
adc
shl
add
push
jle
xchg
inc
arpl
lock
dec
mov
adcb
mov
cld
add
adc
lods
nop
les
mov
xchg
mov
js
and
and
mov
inc
test
dec
add
pusha
dec
or
jmp
cld
push
mov
mov
std
iret
inc
fdivs
rclb
and
inc
int3
or
xchg
sahf
push
adc
rclb
repz
cmp
arpl
cmp
cmp
jle
nop
out
add
jmp
insb
lds
gs
out
xor
inc
hlt
xchg
xor
bound
push
shll
cs
mov
mov
add
sub
aam
pop
fsubrs
out
fwait
mov
push
insb
dec
mov
mov
insb
inc
mov
and
int3
add
in
jmp
stos
cli
leave
adcb
or
push
jb
add
xor
enter
xchg
or
dec
add
in
nop
repz
add
add
push
jge
aaa
outsl
subl
js
push
ja
or
mov
push
cmp
in
xor
add
dec
pop
jecxz
cmp
sbb
xchg
xor
pusha
and
push
and
mov
and
ret
sub
sbb
add
xchg
push
repnz
mov
mov
mov
jae
or
cmp
add
roll
cmpsl
sahf
and
and
push
add
ret
lods
inc
and
jae
mov
movb
lods
sbb
ljmp
sub
mov
adc
mov
lods
call
rorb
mov
sub
inc
adc
jle
add
and
mov
mov
pop
push
lock
outsl
ret
xchg
xchg
pop
push
call
shll
in
loop
lcall
out
mov
sbb
inc
mov
add
ret
cmp
sar
cmp
inc
mov
jl
ret
call
cmp
sbbl
aas
cmp
xchg
mov
lds
mov
ret
test
cltd
mov
jbe
and
cld
pop
mov
jmp
stos
adc
sbb
jb
add
add
aam
jl
arpl
cmp
dec
add
inc
scas
pushw
imul
inc
hlt
adc
pop
call
lret
sbb
addl
frndint
add
cwtl
lds
xor
mov
or
xchg
in
push
fiadds
adc
out
insl
mov
dec
loope
dec
or
mov
xor
sbb
cmp
mov
cmp
jo
jmp
in
push
pop
mov
pop
xchg
jp
lret
mov
repz
xchg
loopne
sub
mov
repnz
push
pop
add
pop
adc
mov
ljmp
lods
xor
and
pushf
setb
add
sub
push
test
lea
dec
sbb
insb
jno
out
adc
lock
aad
aas
les
jg
xchg
out
mov
adc
ds
cmc
sahf
xor
data16
repz
sbbb
dec
cmpb
cmp
xchg
dec
repz
jns
fnstenv
pop
mov
mov
sub
test
sub
inc
clc
and
sbb
arpl
push
jge
sarb
mov
clc
mov
ret
xor
jae
sub
or
xchg
pop
jne
xor
sahf
sbb
call
push
sbb
jmp
clc
or
sbb
dec
inc
lock
or
inc
cmp
fadds
add
lods
cmpsl
sub
and
ja
and
jno
rolb
es
popa
pop
add
data16
test
mov
sub
nop
bound
mov
mov
dec
pop
dec
cwtl
test
test
scas
mov
add
fsubs
sbb
lock
cli
or
xchg
or
sbb
pushf
in
push
mov
out
sbb
js
pop
xchg
outsl
gs
movsb
inc
pushf
add
sbb
dec
clc
iret
movsb
subb
ss
loop
xor
clc
out
aas
and
popf
dec
stc
ret
out
and
add
int
push
adc
fiaddl
cmc
xchg
aam
notl
enter
jp
xor
xchg
hlt
mov
cmp
xchg
push
repz
mov
jns
arpl
popa
dec
push
fcoml
adc
adc
mov
out
dec
fdivl
xchg
mov
mov
shlb
xchg
pop
add
mov
dec
pop
aaa
ret
sub
aas
aam
sub
aas
test
jl
ljmp
sbb
mov
and
leave
mov
adc
pop
clc
inc
mov
pop
push
xor
pusha
jnp
ja
inc
add
jne
int3
enter
add
nop
xlat
pop
movsl
or
push
rorl
cmp
nop
jl
mov
js
xor
mov
pop
push
mov
mov
jae
sub
mov
jle
xor
or
aam
dec
xor
lret
push
das
cmp
jge
pop
js
push
adcl
cmp
sbb
and
or
in
add
mov
in
test
jmp
push
add
jno
mov
jnp
cmpsl
fs
jmp
xor
popa
xor
sub
arpl
push
xchg
inc
add
add
std
mov
das
xchg
scas
push
popa
adc
inc
cmp
fdivl
cmp
dec
fs
popf
xorb
and
xchg
mov
inc
mov
cmp
inc
ljmp
subb
mov
mov
out
cmp
pop
push
jl
add
mov
jp
xchg
test
rclb
cmp
mov
jp
xchg
adc
int
cwtl
lahf
dec
arpl
hlt
push
pusha
cmp
and
sub
xor
inc
mov
dec
add
shll
int
mov
or
ret
sub
cmp
push
sbbb
or
fsubs
inc
add
loope
fs
pushf
mov
sti
push
inc
cmpl
xor
idivb
and
or
lods
adc
cmp
xor
stos
add
call
inc
outsl
push
and
and
push
ljmp
mov
push
jge
adc
push
js
pop
dec
call
or
jmp
push
pop
or
inc
popa
roll
add
hlt
sub
push
jnp
jl
mov
popa
dec
loope
sahf
daa
insl
add
cmp
jmp
dec
xor
loop
sbb
pusha
add
cmc
cmpb
lods
sub
loope
or
bnd
call
or
cmp
movsb
push
lods
xor
dec
mov
pusha
hlt
push
das
cs
xor
lock
xchg
mov
mov
adc
out
add
push
pop
ljmp
mov
imul
scas
test
push
mov
cwtl
repnz
xor
test
imul
lret
shll
pushf
jmp
adc
inc
adc
das
shlb
dec
mov
mov
fsub
sbb
fs
mov
xor
add
stos
mov
dec
push
add
inc
xor
bound
aas
sbb
or
xchg
dec
inc
sbb
mov
out
adc
cwtl
incl
pop
sbb
lret
mov
test
shlb
push
or
dec
and
movsl
jb
aam
mov
lds
or
rcrb
out
outsl
and
mov
popa
pop
pop
and
xchg
dec
dec
push
cmp
mov
and
int3
push
iret
mov
cs
arpl
cltd
adc
and
fs
cld
andl
mov
aaa
mov
sbb
loop
push
push
lea
add
mov
lds
rclb
cmpsl
push
cmp
ss
add
push
push
push
into
cmp
cmp
repz
js
or
mov
jnp
pusha
out
mov
xchg
sub
popa
dec
pop
adc
shl
xor
leave
mov
xchg
scas
popa
mov
shrb
adc
push
inc
adc
fsubs
push
repz
adc
rorb
fucomp
sbb
add
pushf
add
sub
adc
sti
pop
lret
popf
push
adc
inc
ror
fisubrl
fwait
mov
in
pop
sbb
add
pop
or
mov
mov
jmp
sub
clc
adc
push
add
ret
cmpsb
jo
pop
inc
pushf
add
jbe
jnp
test
and
xchg
call
inc
or
xchg
adc
dec
rclb
dec
test
dec
pop
xor
pop
adc
mov
aad
or
sub
lods
popa
mov
push
int
xor
mov
adc
mov
mov
mov
mov
xor
xor
cmp
aad
xorb
mov
xchg
sbb
pop
call
adc
lea
mov
inc
sarb
in
bound
pop
js
add
js
adc
enter
das
mov
xor
mov
mov
movsb
sbb
ljmp
jo
adc
lea
jns
inc
jo
pusha
popf
lcall
mov
pop
pop
dec
iret
mov
mov
adc
mov
dec
fcomp
cli
push
aad
xchg
adc
xchg
out
dec
mov
subb
je
sbb
jo
in
or
or
xchg
and
lcall
adc
ss
pop
fcomps
sti
popf
loope
ret
and
jge
adc
inc
mov
ljmp
out
jbe
andb
mov
inc
add
test
add
sbb
add
dec
mov
adc
pop
adc
pop
mov
lock
sub
pop
xchg
enter
push
lods
or
xor
loopne
pushf
scas
sub
pop
ret
push
mov
jle
add
add
adc
hlt
call
scas
inc
popa
ret
add
pushl
add
mov
cmp
cmp
dec
int3
das
push
and
and
adc
arpl
pop
leave
inc
jo
mov
daa
ret
inc
mov
mov
mov
push
mov
push
sarb
mov
fiaddl
push
lea
test
dec
mov
nop
cld
inc
mov
pusha
adc
sub
es
lods
inc
inc
add
mov
inc
loopne
pop
les
and
adc
xchg
xchg
pop
lahf
mov
add
sub
add
pusha
adc
cmp
ret
inc
mov
xor
cmp
adc
int3
in
js
xchg
add
test
shrb
jae
repnz
out
add
and
add
sbbb
stc
lea
adc
adc
and
call
push
jle
loopne
sbb
out
cmpl
mov
xor
enter
rclb
jns
xchg
inc
aam
mov
mov
sbb
and
ds
or
and
fists
test
mov
jmp
insb
cli
jle
inc
shll
test
dec
sub
jl
shlb
push
xor
fsubrs
outsl
jl
and
int3
pop
popa
es
insb
lret
add
or
adc
inc
add
jae
inc
stos
dec
and
scas
mov
fdivrl
enter
ret
daa
cmp
xchg
ds
hlt
dec
adc
in
jl
add
insb
jg
sub
add
cmp
add
xchg
sbb
sti
add
inc
repz
pop
or
sub
and
repnz
dec
cmp
mov
pusha
insb
and
sub
les
or
test
sbb
pop
mov
inc
xchg
cmpsb
jp
xor
mov
mov
fdivs
loopne
mov
repz
aaa
inc
sbbl
and
adc
adc
or
testb
insl
dec
shr
loopne
call
pop
and
mov
xchg
jne
test
cltd
xchg
fldenv
mov
sbb
add
repnz
pop
pop
sub
mov
lahf
mov
aam
dec
js
mov
aas
xchg
and
mov
add
pop
popa
mov
sub
mov
mov
push
insl
mov
outsl
out
push
inc
in
inc
pusha
or
inc
adc
nop
adc
fldenv
aam
jge
pop
mov
add
in
cli
and
mov
hlt
test
push
mov
sbb
jecxz
cmp
rolb
mov
rcll
in
outsl
adc
inc
fiaddl
or
add
aas
add
cmp
mov
push
adc
push
add
mov
gs
fs
pop
mov
cwtl
push
xor
add
cmp
sbb
inc
and
add
or
pop
jnp
cmp
sbb
mov
pop
shrl
pusha
add
vpavgw
nop
xchg
out
push
and
jge
gs
adc
mov
inc
add
shl
and
mov
push
cmp
jmp
fbstp
sbb
or
insb
sbb
sti
arpl
rol
cmp
pop
add
jecxz
sub
movsb
inc
dec
add
xor
outsb
scas
mov
fnsave
lea
rep
sbb
pop
xor
fldl
in
jge
nop
mov
sub
mov
xchg
sub
mov
and
int3
sbb
pop
jbe
pop
xchg
pop
inc
dec
add
dec
cmp
and
inc
nop
pushf
daa
roll
dec
mov
lcall
gs
pop
cmp
and
add
and
aad
popf
fcoml
adc
aam
pop
roll
js
fiaddl
xchg
fcoml
outsb
out
add
sbb
mov
xchg
adc
sbb
inc
aas
insb
cmp
scas
and
pop
mov
inc
mov
and
push
xorl
pop
gs
cmp
fwait
lods
xor
add
loopne
inc
push
insb
mov
sub
xor
adc
jg
push
xorb
push
pusha
mov
aam
inc
mov
cltd
aad
xchg
sbb
mov
pop
cmp
in
iret
pop
push
inc
das
scas
sbb
xchg
dec
mov
call
mov
inc
inc
out
adc
hlt
adc
adc
push
cmp
push
push
mov
cmp
inc
cmp
std
push
cld
les
cwtl
lock
mov
cmp
cli
lret
or
sub
vmovsldup
nop
push
mov
cmp
jae
in
or
pop
xor
xchg
mov
mov
lock
divb
nop
add
pop
sub
cld
push
repnz
dec
jecxz
pop
leave
push
pop
jnp
add
enter
push
insb
shlb
sarl
add
mov
push
mov
jns
inc
sub
mov
inc
mov
pop
fcoml
push
xchg
sbb
mov
outsb
and
lods
mov
cmp
scas
cmp
ljmp
movsl
loope
pop
mov
movsb
add
das
xchg
insl
jmp
sbb
push
and
lret
shll
push
push
jmp
outsl
call
inc
shr
packssdw
es
mov
adc
or
mov
pop
adc
loop
andb
jp
and
test
pop
jl
fists
and
lock
mov
jo
test
outsl
movl
lcall
and
jl
jmp
in
jbe
adc
ljmp
and
cmp
jne
cli
arpl
int3
test
adc
and
scas
mov
dec
inc
mov
mov
in
push
nop
cwtl
add
cli
jb
into
rorb
leave
mov
mov
mov
lock
ret
jne
jg
adc
ds
clc
mov
mov
movsb
mov
fs
das
mov
repnz
into
xchg
int3
mov
cwtl
pop
xchg
subl
jns
sbb
cmp
mov
mov
jp
add
xchg
dec
or
sti
pop
loop
adc
push
push
or
mov
loopne
dec
pusha
jl
jg
cmp
hlt
subb
out
cld
test
adc
ljmp
aad
or
in
push
and
dec
loopne
add
jno
pop
mov
mov
mov
sbb
mov
mov
shlb
fistps
dec
call
pop
inc
jno
pop
push
in
xchg
lcall
cmc
jo
loop
dec
cs
add
leave
jle
sbb
jno
cltd
js
push
and
pop
add
int3
js
inc
das
mov
popa
add
inc
mov
cmp
gs
and
add
adc
push
lods
add
sub
inc
jb
movsb
dec
stc
jo
cmp
xor
repnz
rorb
pop
inc
mov
movsb
mov
adc
addb
dec
jbe
in
adc
add
sbb
idiv
movsl
lea
jo
imul
mov
daa
rclb
mov
push
xor
inc
js
out
addb
jg
xor
lods
adc
fs
addb
pop
stos
mov
bound
add
popf
or
cli
pop
je
xchg
xchg
sub
jl
scas
dec
in
out
add
jmp
xor
xor
imul
sarb
jmp
inc
adc
mov
ljmp
xor
dec
cli
push
rol
jp
in
xor
push
jno
hlt
pminsw
pop
sub
and
out
subl
xchg
and
add
mov
or
pushf
out
sub
enter
mov
mov
cwtl
adc
add
insb
call
and
enter
sahf
lods
jno
pusha
insb
xor
scas
sub
or
xchg
pusha
push
mov
scas
pop
mov
cmp
push
cmp
adcl
mov
and
imul
rolb
mov
les
sub
dec
bound
xchg
loope
mov
loopne
stos
and
mov
nop
mov
sub
dec
mov
and
data16
or
xor
cmpb
movsb
subb
adc
mov
add
les
jbe
xchg
lahf
xchg
adc
push
xorb
adc
loopne
mov
daa
and
scas
add
test
test
cmp
and
cmp
pop
cmpsl
flds
jmp
int3
jp
pusha
pop
lods
dec
ja
push
lods
and
xchg
sbb
sub
pusha
mov
mov
nop
cs
hlt
mov
incb
hlt
sarl
sub
add
xchg
jge
shlb
popa
jne
test
jno
xorb
add
dec
or
pop
fwait
push
rorl
or
push
dec
test
mov
push
loopne
jmp
popf
adc
add
or
dec
jg
pop
push
pusha
and
mov
xchg
rcrl
call
xchg
adc
and
xchg
xor
stos
in
dec
add
sub
clc
mov
xchg
and
cs
je
or
call
test
mov
inc
adc
outsb
arpl
xor
test
jge
aam
sub
pop
adc
lock
cmpl
in
adc
or
xor
sbb
xor
jbe
mov
cltd
imul
les
pusha
in
mov
test
jno
pop
adc
adc
imulb
fwait
and
call
add
sbb
pushf
jl
hlt
or
pop
jne
insb
add
xor
dec
adc
subb
movsl
adc
pop
xchg
mov
pop
inc
inc
sbb
out
aas
mov
mov
inc
inc
and
pushf
sub
rorl
push
dec
mov
data16
inc
add
sub
ja
or
inc
adc
xchg
pop
std
inc
push
push
and
add
cmp
ja
pop
jle
mov
adc
repnz
loope
xor
xor
sub
xor
lahf
and
mov
xchg
adc
xor
add
push
stos
mov
mov
push
mov
mov
jns
jns
sbb
xchg
inc
lret
add
adc
adc
jecxz
loop
xor
les
mov
inc
stos
test
movl
cmpsl
mov
scas
cmp
out
stos
pop
shlb
mov
lock
xor
cmp
sub
in
push
xor
lret
sbb
inc
addr16
push
inc
test
lods
pop
mov
lcall
sahf
push
sti
mov
and
dec
mov
cbtw
les
xchg
clc
lock
sub
je
adc
xchg
and
pop
shrb
lock
roll
out
cwtl
xor
ret
xchg
enter
das
adc
sldt
test
push
pop
adc
push
inc
push
in
popf
rcll
popa
shll
aam
outsb
sbb
pusha
adc
mov
add
imul
leave
scas
adc
pop
mov
xchg
addr16
inc
adc
test
mov
dec
dec
mov
dec
lds
or
loopne
cwtl
or
add
lret
shrl
rclb
rclb
lods
jp
sbb
repnz
call
cmp
or
pop
mov
sbb
dec
jmp
pop
fsubl
push
shr
adc
pop
addl
mov
aam
sub
cld
aad
jmp
cld
jno
add
cmp
xor
mov
clc
les
xchg
fnstsw
adc
push
lock
pop
mov
lods
mov
test
add
and
xchg
cwtl
iret
pop
outsb
dec
in
push
in
cltd
push
shll
popf
or
iret
pop
fadds
xchg
xchg
adc
dec
or
lret
clc
sbb
and
and
xor
fldl2t
lret
sbb
xchg
dec
stc
mov
sbb
xor
push
xchg
cltd
inc
fcoml
je
cwtl
and
pushf
or
inc
mov
sub
inc
nop
insb
mov
fiadds
pop
negl
pusha
mov
xchg
push
dec
data16
inc
push
dec
cmp
stc
icebp
push
xor
dec
xchg
pusha
sbb
xor
jae
mov
cwtl
pushf
sub
lret
cltd
orb
push
adc
addb
pop
orb
lretw
int3
xchg
test
inc
loop
pop
adc
xchg
dec
fsubrl
cld
repnz
roll
sbb
not
inc
ja
mov
push
lcall
and
mov
loope,pt
jle
or
mov
mov
xor
roll
cmp
bound
cmp
loopne
mov
xor
push
dec
inc
outsl
inc
aam
xchg
mov
repnz
push
dec
mov
cmpsl
xor
clc
lock
aas
lods
mov
cmp
std
xchg
xchg
lods
xor
xchg
add
dec
mov
shll
pop
push
xchg
int
inc
div
repnz
test
pop
jle
and
mov
je
rorb
loop
xor
jno
add
mov
add
xchg
int
sbb
and
and
or
lds
push
iret
test
mov
arpl
mov
clc
cld
mov
inc
push
pop
lahf
mov
pop
dec
dec
in
insl
sub
or
cmpsb
stc
orl
mov
mov
inc
addr16
or
pop
in
push
pop
andn
pop
rolb
test
push
js
xor
mov
dec
push
sub
mov
lea
fwait
inc
add
ret
xchg
mov
in
pop
adc
adc
add
cmpsl
inc
stc
mov
add
shll
je
addl
xor
add
adc
jbe
in
push
lods
mov
inc
es
inc
push
cmp
mov
ja
mov
lret
mov
sub
test
int
dec
std
adc
pop
add
clc
pushf
inc
outsb
ss
mov
add
mov
sub
xor
in
or
enter
cmp
push
pop
out
out
push
lret
scas
mov
and
jns
jl
or
xor
xchg
xchg
mov
and
mov
xchg
add
sub
or
jmp
popa
cld
sbb
sbb
pusha
push
sahf
jle
and
pop
mov
movsb
pop
sub
cmp
cmpsl
dec
sbb
push
imul
ret
push
cwtl
cmp
arpl
xchg
push
mov
fldt
cwtl
addl
xchg
test
sbb
mov
ja
or
pop
mov
int3
rol
test
fisubrl
inc
ljmp
xor
push
jae
pop
dec
sar
cmp
or
mov
inc
pusha
pop
pusha
and
popa
mov
sbb
int3
test
cwtl
xchg
xor
jns
clc
sub
gs
pusha
inc
jno
xchg
sbb
jo
dec
insb
popf
call
or
cmp
jge
and
ss
rolb
aam
add
add
cli
les
mov
test
lods
add
cwtl
mov
xorl
rorb
insl
lea
and
jnp
jl
mov
call
loope
jmp
xor
loopew
pop
inc
or
outsl
mov
or
push
xchg
loope
jns
xchg
mov
jns
hlt
push
cld
inc
mov
inc
xchg
inc
addb
pop
dec
call
stos
or
sub
mov
pop
mov
fcmovnbe
imul
cmp
push
adc
mov
sub
insb
inc
push
out
nop
out
add
ljmp
pop
sbb
insb
add
sub
and
das
xchg
faddp
and
inc
rolb
and
add
daa
icebp
data16
pop
in
iret
jne
pop
and
adc
add
pop
add
rorb
insl
mov
or
and
fcmovb
xor
js
mov
popa
push
cs
call
inc
ss
or
enter
mov
sbb
mov
mov
and
shl
daa
mov
xchg
pop
mov
sbbb
int3
lcall
sub
packuswb
bound
mov
rorb
mov
mov
add
xor
lods
inc
in
pusha
add
mov
lds
sbbb
push
and
andb
nop
sub
or
scas
sbb
pop
aas
mov
cmc
mov
aaa
cmp
inc
pop
xor
cmc
and
inc
sub
cmp
lods
mov
inc
icebp
lds
push
scas
dec
xorb
mov
inc
mov
dec
inc
out
push
xchg
mov
dec
inc
enter
lea
adc
sub
lods
mov
mov
push
pop
into
fs
in
pushf
push
cwtl
les
or
xchg
icebp
mov
filds
enter
pop
and
je
xor
inc
addb
inc
lods
push
add
ds
jecxz
popa
pop
xchg
or
dec
or
inc
or
cmp
fildll
add
push
xchg
sub
push
out
cmpsb
call
stos
push
enter
imul
test
and
aad
or
movsb
and
addr16
jbe
sub
add
loope
cmp
int3
daa
pop
fiadds
in
jle
pop
mov
into
filds
mov
and
xchg
mov
jb
jno
add
loopne
lea
push
pusha
dec
inc
popf
add
and
or
pusha
mov
mov
and
rcrb
cwtl
push
out
add
aam
xor
jns
adc
or
add
push
jne
inc
mov
add
mov
ret
call
shl
xchg
mov
pop
mov
xor
jmp
hlt
adc
and
push
repz
pushf
jmp
dec
xor
xchg
inc
pusha
loop
xor
add
push
xchg
popa
pushf
mov
stos
dec
pop
add
fcomps
mov
xchg
call
pop
cs
arpl
adc
jp
int3
ljmp
in
sbb
push
mov
or
pop
cmp
jae
sbb
outsb
add
lock
loopne
jo
pop
add
sbb
mov
adc
add
repz
loopne
sbb
inc
lcall
mov
adc
xchg
rcrl
and
fmuls
and
dec
or
sbb
test
mov
mov
insb
popf
adc
les
add
dec
popf
inc
add
aam
push
js
inc
adc
ds
jl
bound
push
mov
popa
nop
lock
aas
sub
or
loope
roll
adc
xchg
ret
insb
mov
lahf
pop
mov
subb
or
xchg
jae
pop
aas
mov
cs
iret
icebp
or
adc
push
ret
inc
xchg
cmp
adc
mov
popf
inc
test
mov
xchg
sbb
mov
add
or
add
adc
xchg
out
sub
mov
loop
jmp
ret
lea
movsb
shlb
push
dec
fsubrs
or
pop
sub
addr16
shlb
and
mov
shll
jecxz
jecxz
loopne
pop
test
xchg
jge
add
inc
insl
test
stos
xchg
jge
sahf
add
popa
movsl
cwtl
leave
push
xchg
push
lret
bound
int3
inc
add
mov
push
pop
or
cmp
push
xchg
add
test
shrb
outsl
add
sbb
rorb
sbb
loope
int
or
pushf
mov
shll
orb
lahf
fwait
lret
add
and
call
jp
jae
sbbb
mov
dec
mov
push
roll
cltd
jne
loope
call
xchg
xorl
test
mov
push
mov
sbb
pop
lods
movsb
ds
les
test
push
mov
adc
bound
loopne
popf
mov
rolb
in
les
mov
jl
xchg
movsb
frstor
rcrl
loop
inc
das
mov
or
cmp
jbe
dec
mov
outsl
mov
lahf
das
cmp
sub
in
mov
leave
rcrl
dec
pop
imul
lret
aam
pusha
push
call
xchg
insb
movb
inc
mov
pop
mov
js
push
jge
inc
cmp
xchg
mov
shrl
stos
xchg
mov
inc
imul
mov
popa
daa
les
pop
rol
lock
adc
cmpb
xchg
out
xor
mov
push
xchg
add
push
addb
and
pop
das
int3
sub
and
xchg
scas
cwtl
pop
cli
enter
add
sub
mov
test
mov
cmp
and
inc
and
mov
mov
rcll
scas
sbb
or
jl
jecxz
xchg
inc
mov
sbb
sbb
or
xchg
and
fs
lods
sbb
adc
test
jnp
sub
mov
popa
adc
xchg
clc
dec
fldl
sub
add
ss
sbb
push
cmp
adc
int3
sbbl
loopne
xchg
loop
loop
xor
gs
and
or
sub
xor
rcrb
inc
hlt
shll
jmp
outsl
outsb
add
sbb
inc
cmp
and
inc
sbb
ss
cmp
jecxz
in
or
insb
nopl
cld
mov
xchg
or
add
inc
dec
mov
scas
cwtl
add
orb
inc
mov
cmp
mov
pop
stc
adc
stos
es
gs
outsl
pop
jl
cld
add
vmwrite
mov
pushf
mov
testl
jmp
or
dec
out
mov
and
xchg
mov
adc
xor
mov
or
jecxz
inc
pop
arpl
dec
add
push
stos
xor
call
es
ss
mov
adc
mov
ret
lods
fcomps
adc
and
fldcw
jo
lods
fwait
or
in
shrw
in
lods
loope
and
and
add
push
or
cmc
nop
test
or
or
add
jle
iret
lea
in
inc
jp
adc
and
mov
mov
sbb
xchg
int3
or
push
xor
jge
call
iret
cwtl
adc
les
inc
call
mov
mov
add
ds
rcr
mov
loopne
das
or
sbb
mov
mov
mov
movsb
dec
cmp
adc
mov
and
test
or
hlt
fisubrs
outsb
xor
xlat
xor
inc
ds
cmpsb
adc
jb
sub
ds
pop
or
mov
xor
xchg
add
in
add
xor
cmc
mov
fucomip
mov
cwtl
push
xor
jg
sub
cmpb
pop
add
inc
add
les
adc
inc
sbb
clc
xor
lock
jb
cwtl
ret
les
inc
inc
pop
and
jecxz
rcrb
add
loope
and
jnp
add
jl
cwtl
xor
and
cmpsl
cmp
sbb
sbb
add
add
lcall
mulps
les
mov
fbld
shrl
sub
mov
mov
adc
cmp
popa
push
mov
rdmsr
mov
jg
subb
sbb
pop
mov
nop
rcl
push
add
mov
movb
pop
mov
mov
jg
sub
push
add
ret
pop
dec
movups
shlb
inc
loopne
mov
adc
je
int3
add
mov
push
std
nop
push
in
sub
inc
mov
inc
inc
roll
cmpb
iret
jo
xor
xchg
lds
call
push
jbe
in
cmp
loopne
mov
dec
push
adc
flds
clc
inc
popl
or
int
jmp
out
push
jecxz
ss
cli
aas
sbb
sbb
jg
or
ret
xchg
cltd
add
inc
dec
sbb
add
xchg
testl
and
js
xor
and
pop
sahf
or
shlb
add
int3
aaa
add
daa
popf
mov
mov
pop
xchg
add
pop
hlt
insb
lds
icebp
cmp
and
push
cmp
sbb
out
sub
inc
inc
mov
add
mov
pop
add
push
mov
xchg
lea
jbe
inc
add
or
push
xorl
jo
or
dec
and
add
xor
mov
clc
adc
and
xor
pop
mov
dec
pop
push
adc
add
add
loopne
pop
clc
dec
add
pop
push
stc
int
push
mov
mov
test
rolb
jl
and
mov
add
sbb
add
inc
fiadds
faddl
mov
inc
add
xor
mov
into
push
xchg
mov
addb
jp
setae
icebp
mov
or
adc
pop
daa
pop
sub
pop
orb
mov
loope
add
mov
push
add
ret
xchg
cmp
adc
outsl
pop
dec
mov
add
icebp
xchg
cwtl
sbb
enter
jge
push
popa
mov
insl
out
test
ja
into
sarl
jno
je
pop
popf
roll
jp
mov
enter
rolb
push
ror
out
xchg
push
push
pushf
add
das
add
xlat
cmpsb
mov
lods
adcb
pop
inc
add
dec
adc
shlb
jno
dec
pop
flds
jg
add
xchg
ljmp
and
and
imul
shlb
and
repz
add
jbe
pop
fimull
add
jae
je
inc
mov
cmp
psubusb
sbb
jnp
adc
add
pop
xchg
mov
outsb
pop
movsb
icebp
cld
nop
lcall
aaa
or
ljmp
push
ret
imul
outsb
mov
jle
pop
inc
sub
xor
add
test
pop
adc
test
push
jo
pop
and
add
sbb
jp,pt
and
daa
stos
or
fldl
push
xlat
ret
add
cmp
out
addl
inc
jo
stos
idivb
loope
popf
xor
add
lea
adc
pop
aas
add
std
into
mov
and
mov
add
inc
cs
lods
in
or
fbld
fwait
pop
in
add
je
mov
std
xchg
xchg
jb
in
pop
jle
cmpsb
sbb
test
add
out
divb
gs
jmp
mov
sbb
add
mov
jge
pop
add
lahf
and
enter
xchg
sub
inc
arpl
testl
fisttpll
adc
std
ret
xor
jg
fisubl
mov
stos
pop
mov
addr16
xor
mov
mov
and
cmc
cmp
cmpsl
jo
xchg
repz
adc
arpl
pop
movsl
shr
push
movsb
jb
mov
sbb
fwait
xor
jae
je
push
or
inc
inc
lret
mov
cmc
or
mov
clc
test
mov
mov
lret
insl
scas
inc
xchg
fs
loope
push
xchg
add
jp
and
add
jno
testl
test
dec
pusha
sub
into
movl
push
clc
jmp
movsl
jp
arpl
loop
cli
lock
cltd
add
push
rorl
pop
add
fstl
xor
cmp
rcr
sub
xchg
add
lret
jbe
pusha
mov
fistpll
adc
call
xchg
lcall
es
dec
and
mov
das
dec
lods
mov
push
in
jo
imul
ret
in
push
push
je
cli
push
add
cmpsb
xor
adc
add
shlb
stos
push
aas
sbb
shlb
in
out
jle
add
aaa
xor
sub
xchg
adc
pop
incb
or
adc
and
enter
rolb
xchg
stos
sbb
negl
mov
sbb
fs
xchg
add
stos
cmp
sub
dec
push
add
movsl
ja
sti
pop
add
mov
je
add
mov
jmp
adc
push
mov
mov
sub
jno
push
sub
jae
fidivl
pop
inc
cmp
stc
sub
cltd
leave
ss
add
mov
jbe
pusha
icebp
xor
mov
add
push
mov
les
scas
xchg
mov
or
fnstenv
lahf
shl
add
ljmp
sbb
pusha
mulb
data16
int
add
stos
out
and
sub
add
test
je
sbb
pushf
xchg
fs
jl
cld
cmp
add
stos
repz
pusha
cwtl
xorb
mov
adc
add
stos
and
insb
xchg
pop
iret
add
mull
loope
push
add
lock
inc
in
mov
add
xor
cmp
addl
mov
add
mov
push
push
fidivl
push
filds
or
orb
dec
adc
movl
push
inc
sub
aas
rorl
mov
stc
add
sub
sahf
mov
push
lahf
loop
inc
sub
xor
insb
gs
add
sahf
loopne
push
data16
mov
xchg
pop
push
xchg
add
out
rolb
add
push
add
iret
xor
andb
movsl
push
adc
dec
cli
faddl
add
and
rcrb
sti
ret
loope
icebp
fiaddl
fildl
enter
push
mov
add
xchg
pop
rorb
stos
ds
fcomps
mov
cmpsl
sarl
lock
test
cmp
or
jle
add
inc
or
loope
adc
sub
xchg
sahf
mov
arpl
outsb
bound
aam
cltd
jl
aas
inc
cmp
les
mov
xor
subb
xchg
sbb
test
and
lods
rcrl
std
popf
mov
pop
adc
sub
fwait
dec
add
mov
inc
das
add
inc
add
xor
incb
clc
inc
jns
mov
cmp
sbb
lret
adc
or
jg
add
cmpb
dec
mov
mov
addr16
mov
add
out
xchg
add
inc
sbb
mov
adc
adc
repnz
std
sbb
jo
push
lea
adc
js
mov
add
std
lods
pop
mov
fadd
inc
pop
pop
loopne
mov
sbb
test
in
and
xorb
mov
add
adc
clc
fiadds
add
jmp
add
inc
sub
movsl
inc
add
push
int
add
enter
xor
test
xchg
repz
jp
cmp
add
faddl
leave
fnstsw
pop
jne
adc
dec
daa
aad
js
lret
jmp
pop
stos
hlt
push
push
roll
xor
mov
sbbl
sbb
mov
pop
fisubrs
add
mov
mov
repz
rorb
sbb
add
pusha
add
add
xlat
lcall
cmp
adc
lods
push
into
in
sbb
aaa
inc
or
add
push
in
ljmp
psraw
adc
rorb
mov
and
or
icebp
push
call
pop
ja
loopne
mov
js
cmp
loopne
icebp
jnp
add
sub
loop
je
test
cmp
lret
add
aam
pop
rcll
pusha
cld
mov
xor
scas
and
decb
mov
add
mov
sbb
pop
js
test
popf
aad
cmp
subl
rorl
mov
sbb
out
test
decb
inc
imul
add
jno
cli
jecxz
fwait
adc
int
xor
push
data16
mov
mov
xlat
pop
jg
and
stos
mov
aad
sbb
sarb
addr16
call
sub
or
adc
push
inc
sarb
adc
inc
add
movsl
test
jno
mov
mov
xchg
lret
xor
icebp
add
outsl
mull
add
ret
push
add
test
rolb
pop
mov
add
cmpsl
or
lds
ljmp
pop
sub
sti
add
imul
das
addps
pop
das
xchg
and
mov
cltd
add
jno
pushf
inc
add
or
and
mov
adc
add
repnz
add
xchg
jns
daa
sub
movsb
sbb
pushf
fld
hlt
add
adc
cmpsb
test
mov
pop
shrl
sbb
push
cs
int3
into
jg
add
rcrb
adc
sbb
xchg
inc
hlt
imul
inc
cmc
lcall
hlt
dec
xchg
inc
sbb
mov
push
add
lret
xchg
jmp
xchg
jno
xor
xor
mov
dec
inc
lock
ja
cmp
scas
or
push
adcl
xor
and
out
cmp
mov
adc
clc
scas
jp
fsts
int
or
dec
pop
mov
arpl
rol
shlb
int3
inc
aam
pop
mov
lret
fidivs
popf
dec
xchg
mov
mov
sbb
lds
and
xor
and
pop
mov
xchg
or
sarb
xorl
data16
cmp
mov
out
mov
out
int3
pop
dec
jl
sbb
flds
and
sub
mov
add
push
std
subl
cmpsl
add
lahf
lea
notb
dec
addb
pop
xlat
dec
or
out
sub
cmp
loopne
ret
pop
pop
add
ret
lret
and
mov
int3
loop
movsl
orb
daa
sbb
leave
inc
mul
sbb
sub
test
mov
dec
out
imul
dec
addb
loopne
pop
add
cmp
or
fwait
inc
mov
in
add
in
fadds
xor
push
dec
cmp
iret
dec
testl
aam
pop
jecxz
cwtl
movsb
add
movsb
push
orl
mov
add
call
sub
test
loope
pusha
push
mov
pop
sbb
movsb
sbb
adc
pop
sbb
pop
cmp
popf
jl
ffreep
xor
xchg
push
cmp
pop
call
insl
sub
je
adc
sbb
int3
dec
repnz
fld
add
and
cmp
in
addb
push
add
out
jo
add
xchg
movsb
getsec
je
lock
jmp
push
pop
add
pop
test
sub
sahf
or
lret
xor
xchg
sar
sbb
mov
add
fs
push
test
sub
push
add
jo
add
lea
std
fdivr
or
movsl
pop
into
dec
push
add
push
imul
lods
rclb
and
mov
iret
and
cwtl
xor
shrb
push
movl
cmp
inc
lods
push
xchg
pop
cmpsl
and
mov
cwtl
jbe
sti
push
add
subl
into
add
loop
xchg
sbb
pop
sub
test
xchg
test
in
add
jp
and
fcoms
mov
imul
xor
mov
cmp
and
or
xchg
adc
xchg
add
jb
mov
loopne
mov
add
push
je
mov
movsl
add
and
adc
andl
or
jo
mov
jle
cmp
add
inc
or
adc
sbb
sahf
lret
cmp
arpl
add
and
stos
pushf
xchg
add
pop
xchg
mov
mov
sti
jl
add
push
addb
xchg
add
ljmp
push
dec
pusha
cmpsb
sbb
dec
pop
push
icebp
fsub
and
jecxz
mov
adcl
mov
or
push
add
in
jb
add
dec
outsb
fbstp
mov
add
add
pusha
inc
xor
out
das
fldl
pop
imul
push
add
cwtl
pop
fiaddl
lfs
dec
enter
andb
jnp
add
dec
xor
decb
cs
and
jp
dec
rclb
loopne
inc
sbb
in
movsb
pop
js
mov
jo
add
mov
lret
out
ja
sub
or
sahf
popa
int3
imul
push
mov
xchg
lcall
mov
and
cld
sarb
mov
push
xchg
das
cmp
push
ret
dec
dec
dec
add
sub
imul
mov
mov
test
xor
mov
add
push
cmpb
cmp
push
aam
mov
call
xchg
test
imul
fisubrl
adc
ja
add
pop
repz
les
je
pop
sub
mov
mov
add
and
lods
leave
sti
add
inc
jno
icebp
jecxz
fs
xchg
ret
cmpb
add
fiaddl
add
xor
cmp
mov
cmc
addb
fwait
aaa
sbb
loop
insl
cli
lret
out
enter
dec
pop
push
mov
jae
cmp
nop
loop
ds
xchg
lods
xchg
dec
ds
add
test
mov
mov
add
adc
pop
daa
fsubs
mov
mov
and
es
adc
clc
add
cmpsl
leave
and
insb
mov
lods
xor
js
jbe
lea
jmp
or
mov
or
sbb
adcl
mov
fisubrs
cmp
out
rcll
mov
dec
cli
lcall
xlat
test
inc
out
lock
std
jmp
jp
in
test
jne
shlb
push
adc
xchg
jl
add
mov
imul
add
ds
pop
outsb
pop
out
ja
scas
jl
add
push
cmp
mov
add
or
xorl
or
mov
ja
int
daa
dec
mov
mov
pop
je
add
movsl
lret
mov
push
add
push
adc
mov
mov
adc
sub
mov
jo
add
mov
cltd
enter
jno
dec
repz
test
dec
nop
imul
into
pop
rorl
orl
push
loopne
pop
mov
mov
mov
mov
add
rclb
add
rorl
test
cmpsb
dec
test
cs
hlt
sub
rcrb
add
rol
shlb
in
orb
jp
add
out
enter
add
insb
in
rorb
xor
dec
or
add
jl
adc
push
scas
das
pop
and
out
mov
stos
gs
int
dec
hlt
add
imul
or
dec
mov
mul
movsl
mov
add
subb
add
fs
adc
shlb
sahf
loopne
add
shll
in
out
mov
mov
nop
rolb
cmp
mov
ljmp
mov
adc
push
or
add
push
setb
cmp
subb
add
mov
add
push
mov
push
add
pop
shll
xchg
xchg
daa
add
mov
sbb
test
shl
adc
scas
cmp
add
jp
rorb
subb
mov
add
out
add
daa
xchg
dec
adc
lods
aam
sub
ret
stos
stos
aaa
push
std
mov
and
cmc
inc
adc
mov
pop
inc
fidivrl
jl
fsubrl
fst
pushf
icebp
rol
leave
and
adc
dec
mov
and
test
fstpl
insb
sub
js
pushf
in
and
xchg
sbb
ja
fimull
sti
push
cmp
or
ret
stos
and
inc
idivl
adc
mov
push
cmp
cli
inc
out
lods
addr16
and
mov
cmpsl
xchg
pop
inc
pop
call
leave
push
jecxz
xchg
sub
mov
jnp
dec
mov
xchg
les
mov
mov
jge
push
dec
subb
andl
sbb
movsb
pop
lahf
pushf
dec
adcb
mov
inc
add
adc
outsb
lock
and
mov
xlat
or
add
mov
jbe
inc
add
cmp
jl
scas
xor
inc
cwtl
push
outsl
insb
shll
mov
jmp
xor
dec
mov
sbb
mov
nop
int
inc
test
add
jp
jl
testl
daa
cmpsb
sahf
andl
mov
add
popa
mov
mov
cmp
std
add
sahf
call
rolb
jecxz
xor
movsb
cmp
data16
fmul
pop
add
fstl
xchg
clc
xor
cwtl
in
mov
add
mul
add
stc
loopne
imul
jle
push
test
clc
outsl
dec
out
arpl
jo
inc
je
fistpll
jge
add
stc
call
nop
add
addr16
negb
cmp
outsb
cmp
test
add
mov
add
lret
or
shll
fadds
mov
pop
out
or
inc
adc
mov
and
aam
mov
xchg
push
jno
add
xor
xchg
mov
jge
stos
sub
jbe
mov
lret
addr16
sbb
cmpb
mov
sbb
pop
and
add
cmpsb
jno
hlt
call
insb
lods
movsl
jp
and
std
sub
adc
xlat
xchg
add
es
cs
imul
lret
adc
lds
lock
in
jp
add
push
int3
loopne
push
sbb
int3
shll
push
mov
add
or
mov
add
cmp
cld
xor
nop
mov
xchg
jbe
push
xorb
popa
jne
imulb
rolb
xchg
lahf
dec
cmpsb
push
mov
xchg
cltd
inc
icebp
sub
stos
xchg
jb
adc
and
les
mov
lret
pop
xor
add
xlat
xor
cli
lsl
cmpsl
repz
add
adcb
sbb
les
and
lea
sahf
jns
fadd
mov
cmp
sbb
inc
sti
inc
imul
push
aaa
imul
pop
pop
inc
pop
cmpsb
rorb
adc
sarl
or
mov
lcall
sub
add
shrb
sub
pop
add
ss
loope
cs
cmp
mov
add
pop
xchg
cld
cmp
cli
add
adc
dec
add
cmp
scas
fnstcw
xchg
scas
enter
je
repnz
add
xchg
es
bound
mov
add
gs
imul
popf
cli
into
mov
jb
dec
mov
push
arpl
data16
inc
rcrl
add
push
insl
sti
pop
add
jae
add
ljmp
add
mov
pop
jno
push
lea
mov
pop
fcoml
je
adc
push
stos
jmp
adc
fstpt
sbb
jae
outsb
pop
push
pushl
pop
push
mov
mov
pop
or
push
dec
add
ja
add
shlb
fwait
mov
xor
push
lods
mov
punpcklbw
dec
add
sbb
sub
lcall
add
add
fisttpll
in
fstpt
sub
adc
pop
loop
pop
inc
and
sbb
add
mov
adc
insl
inc
call
sbb
cs
mov
add
push
ret
mov
nop
mov
mov
xchg
xlat
adc
adc
pop
int
sbb
loopne
jle
add
in
mov
pop
sbb
in
push
shl
jge
pop
adc
mov
adc
mov
add
mov
xorb
rcr
mov
popf
xor
js
sbb
add
inc
mov
add
or
add
rcr
scas
add
andb
enter
add
imul
rorl
mov
xchg
aaa
or
adc
sbb
pop
xor
mov
fsqrt
sti
jns
lcall
std
cmp
rcrb
dec
xchg
cmp
inc
setg
add
outsl
aas
sbb
lock
leave
cwtl
and
and
dec
lret
sbb
in
sbb
lods
jmp
mov
aaa
and
das
mov
in
fadds
dec
sbb
push
xchg
cmp
mov
inc
xlat
xor
cld
xor
outsb
jae
push
clc
or
cmpl
pushf
add
or
xchg
iret
jno
cmp
inc
mov
in
aaa
xor
inc
add
dec
call
stos
loope
push
mov
iret
add
rclb
add
push
dec
add
arpl
aaa
add
lret
rorb
jmp
add
mov
adc
int3
inc
int
adc
idivl
cwtl
add
add
insb
test
mov
jbe
lahf
sbb
add
loopne
repnz
je
sbb
cmpsb
arpl
incb
or
sub
xor
mov
shrl
jne
cmp
and
and
iret
call
jl
adc
aam
jno
in
sahf
cld
lret
pop
add
lods
xchg
psadbw
jge
add
movsb
jg
xor
ss
out
jmp
sbbb
push
sti
movsl
nop
es
xchg
add
add
inc
cld
mov
shl
hlt
sub
daa
es
je
ljmp
scas
shll
cld
std
mov
lds
int
enter
xor
and
and
pop
pop
sbb
or
out
ficoms
aam
outsb
inc
add
and
add
add
rorb
mov
or
push
adc
adc
and
or
nop
lahf
mov
cltd
inc
push
ret
mov
shrb
ja
cmp
out
cmp
mov
int3
stc
adc
jg
inc
decb
inc
mov
dec
cmp
xor
adc
cli
mov
dec
ss
sahf
inc
and
and
adc
movsl
inc
add
fldenv
dec
mov
add
icebp
cmpsb
inc
jb
aas
iret
cmp
add
pop
jne
loop
add
dec
scas
ret
lahf
push
inc
into
inc
push
pop
cmp
sbb
add
mov
xor
add
int3
sub
mov
xlat
lock
or
adc
jecxz
add
mov
or
rol
xchg
into
push
push
add
add
pop
fstps
clc
add
insb
aam
add
fdiv
andb
insl
fs
add
stos
mov
push
inc
neg
rolb
lret
test
mov
in
rcl
mov
cltd
mov
or
dec
adcb
andb
and
lds
ror
pop
scas
scas
sub
je
pop
lock
adc
mov
mov
cmp
xor
insb
std
pop
shr
ljmp
test
out
rcll
lahf
adc
pop
xchg
xchg
pop
adc
out
orb
jo
js
xor
cmp
mov
ds
adc
fiadds
add
lods
cmp
jbe
jmp
and
test
xchg
nop
push
in
inc
call
scas
fucomp
popa
fwait
add
mov
adcb
lods
sbb
ret
pop
dec
push
xorb
pop
bound
jle
aas
mov
add
dec
scas
loopne
insb
rcrl
shr
andb
sbb
add
js
or
fidivrl
clc
lods
inc
gs
or
add
mov
ljmp
cli
rcll
add
dec
sahf
gs
cmp
bound
test
jecxz
push
sarb
jno
testb
cmp
or
xor
addw
add
or
pop
add
movb
loope
push
sbb
xchg
cmpsb
add
push
push
and
jge
pusha
cmpsl
mov
xor
pop
std
xor
jo
lods
sahf
xchg
test
ljmp
push
add
and
neg
inc
sub
movl
xchg
add
xor
stos
js
addl
scas
cld
and
int3
daa
out
inc
pop
xor
js
add
sub
aas
push
shr
jne
je
dec
lods
sub
insb
mov
push
insl
int3
fcomps
in
sar
test
add
mov
es
push
mov
dec
add
push
add
add
or
push
add
add
adc
pop
cvtpi2ps
test
and
rcrl
cmp
scas
sbb
loopne
dec
insb
xor
mov
lret
outsl
js
clc
add
rclb
mov
jo
pusha
shrb
fwait
mov
ret
xchg
rcrb
mov
xor
add
jae
adc
add
mov
pusha
xchg
pop
adc
loope
int
jo
cmp
mov
fxtract
ja
push
aaa
in
mov
fwait
test
repz
sbb
inc
mov
jns
add
ds
add
aad
add
mov
mov
push
jno
fwait
sahf
je
jp
push
mov
fmull
add
les
jnp
sub
xchg
gs
mov
inc
jns
add
mov
add
adc
add
dec
cmc
lods
pop
and
pop
imul
stos
fiadds
into
add
jo
bound
dec
xchg
xor
popf
inc
jns
add
push
call
sbb
add
mov
add
xor
or
int
xchg
adc
lea
sub
inc
lock
mov
pop
dec
or
inc
push
in
xchg
sbb
xor
inc
or
and
jmp
pop
add
dec
andl
shrl
add
popa
rorl
xor
addb
cli
add
int3
sbb
cwtl
faddl
lock
loope
out
mov
aaa
jg
adc
mov
out
push
stc
fldl
sub
push
stc
xchg
into
add
jno
addl
cltd
je
aam
jnp
cmp
mov
loopne
outsb
in
sbb
insb
mov
iret
ret
lret
push
mov
pop
push
in
pop
add
push
outsb
lret
int
jp
xor
hlt
sub
mov
mov
mov
ret
pop
xor
pop
clc
cmp
inc
add
pop
ss
push
or
add
fdivr
stc
adc
pop
rcr
sub
add
dec
and
je
insb
aas
pop
aad
jl
mov
mov
pop
aaa
and
and
rcr
add
jecxz
bound
fs
mov
cmp
sbb
jns
dec
repz
pusha
mov
insl
movsl
ret
xor
ja
sub
push
adc
scas
xor
orb
jns
in
cmp
or
pushf
stos
mov
mov
mov
push
and
fwait
xchg
sbb
out
xchg
repnz
les
jae
dec
fs
adc
pop
mov
push
aam
mov
jae
push
add
pusha
xor
cmp
divl
sub
fucom
scas
leave
rcrb
cmpsb
mov
rclb
in
loope
imul
cwtl
pop
pop
inc
jle
nop
mov
or
sub
loopne
sub
add
pcmpeqb
dec
mov
add
push
aas
or
sbb
add
int
add
adc
xchg
pop
add
jae
hlt
mov
xor
nop
jnp
les
adc
xchg
add
dec
cmp
jno
jbe
jnp
mov
add
xchg
pusha
stos
pop
aas
pop
inc
movsl
cmp
sub
lock
jp
in
dec
sub
push
add
mov
into
stos
mov
loopne
sub
xorl
dec
bound
xchg
inc
mov
test
repnz
loopne
xor
roll
insb
imul
dec
xor
add
jle
ror
and
scas
mov
insl
dec
mov
push
add
int
mov
pop
add
xor
push
pop
jns
mov
mov
fs
pop
add
cmc
pop
test
mov
push
lods
or
lcall
add
hlt
jno
add
jge
xor
add
or
mov
adc
sub
out
add
in
stos
or
push
mov
mov
in
mov
ljmp
loopne
mov
inc
mov
add
add
in
pop
and
rolb
idivb
jne
loop
sub
add
fiaddl
test
sbb
insl
and
sbb
popf
add
mov
xchg
cmp
cwtl
fwait
push
loope
add
mov
or
push
pop
std
fmull
cmp
xchg
inc
clc
add
mov
adc
jmp
call
arpl
mov
les
cmp
jbe
ss
xlat
mov
add
or
lret
in
bswap
adc
movsl
mov
push
cmp
push
cmp
aam
das
inc
sub
and
cmp
cmp
outsb
mov
cmpsb
xchg
subl
pop
pusha
push
pop
cli
scas
add
sbb
sub
mov
or
sbb
xchg
jl
sarb
cmp
jnp
lock
bound
movsb
xchg
or
add
sbb
gs
push
xchg
and
fidivrs
adc
xchg
lret
xchg
popf
loope
dec
idiv
add
addr16
adc
out
pop
add
pop
xor
in
jge
dec
aaa
jp
add
arpl
mov
dec
outsl
add
adc
fidivrl
sub
xchg
add
mov
xor
sbb
std
jns
push
mov
xchg
shl
xor
push
sti
push
jno
push
into
cmp
push
in
or
orb
add
xor
cli
loop
das
add
fwait
xor
lods
mov
aam
pop
mov
mov
arpl
inc
shll
mov
aam
xchg
dec
ffreep
dec
push
cmp
cmp
loopne
cmpb
fwait
xchg
mov
je
std
cmpb
testl
mov
stos
cwtl
mov
xchg
xchg
lea
addl
mov
push
pop
aas
in
je
scas
pop
shl
pusha
dec
movsl
push
outsl
popf
dec
inc
mov
pusha
and
cli
scas
addl
push
and
inc
aad
add
in
call
dec
push
and
jg
push
or
dec
cmp
mov
sub
push
push
fsubrs
jns
subb
icebp
cmp
xchg
xlat
pushf
cmp
mov
add
inc
or
inc
sub
adc
pop
add
xlat
lcall
push
xchg
pop
or
or
push
add
aam
sub
stos
cmp
and
mov
scas
sbb
adc
test
and
dec
sub
push
inc
rolb
sti
push
sahf
cwtl
adc
out
shlb
dec
cli
test
bound
ss
sbb
cmp
repnz
cltd
or
pop
leave
jecxz
repnz
ret
push
sub
cmp
xor
adc
mov
mov
add
popa
js
jns
pushf
add
inc
or
jne
xchg
pop
pop
sub
push
in
push
jl
outsb
popl
test
mov
cwtl
mov
pop
fisubs
out
rorl
add
cwtl
sub
hlt
sbb
pop
inc
lock
shll
xor
xchg
add
out
scas
popf
sub
mov
and
push
es
inc
add
arpl
test
mov
pusha
out
out
add
pop
in
popf
lret
sbb
inc
adc
leave
aad
pop
xchg
rcrb
push
inc
sbb
lock
xchg
add
or
push
fidivl
add
jle
call
xor
pop
dec
int
subb
repnz
add
cmp
cmc
add
and
outsl
add
push
jge
jmp
movsl
mov
xor
je
push
ficoml
pop
shl
or
idivl
inc
stos
add
push
jo
gs
push
int
mov
mov
pop
xchg
adcb
push
pop
pop
lcall
sbb
add
nop
xchg
add
ja
aam
fisttpll
or
xchg
inc
cmp
xor
pop
mov
lds
inc
add
cmp
push
push
dec
sub
pop
add
adc
inc
out
js
adc
incl
icebp
sub
inc
or
call
cmc
fnstcw
add
dec
cmp
push
inc
clc
shlb
test
xorb
add
xchg
ja
out
fistpl
xorl
push
lahf
xor
add
mov
pop
and
clc
mov
adc
data16
jb
add
sub
xor
inc
mov
add
add
lret
cmp
sbb
jnp
mov
add
lock
adc
xor
add
xchg
je
cld
cmp
pusha
in
clc
push
dec
inc
add
cmp
out
and
push
jle
mov
add
pop
dec
lahf
sbb
add
push
and
cmp
cmp
add
add
icebp
jmp
aam
out
cmp
mov
movsl
lock
sahf
or
lds
shlb
pop
sub
mov
sub
addr16
cmpsl
pop
dec
add
orb
movb
or
ja
pusha
ret
jmp
lret
add
sti
nop
sub
cmp
jmp
mov
call
bound
loopne
cmp
and
mov
inc
jae
movl
cwtl
lea
mov
pop
icebp
in
push
add
shl
push
ror
inc
aas
cmp
and
adc
imul
xor
pop
inc
add
aas
rol
enter
add
add
push
add
jecxz
fcmovnb
push
sbb
in
orb
adcb
lcall
cmp
xor
mov
pop
fdivr
pushf
sub
inc
push
movzbl
cld
mov
stos
dec
mov
in
push
inc
dec
push
insl
pop
cmpsb
dec
clc
inc
nop
stos
push
rolb
fistps
iret
pop
cmp
cld
mov
into
xlat
cwtl
inc
ljmp
rclb
xor
sub
and
pop
into
xorb
jo
add
loope
mov
dec
imul
lcall
pop
fs
xor
add
test
pushf
add
arpl
cld
adc
cmpsb
adc
push
dec
and
outsb
aad
and
movb
and
mov
push
jge
and
cmp
fistps
push
out
int3
jecxz
add
jmp
xchg
in
loopne
and
xchg
inc
das
in
push
pop
data16
sub
mov
adc
popa
call
add
cmp
push
fdivr
smsw
jg
clc
or
push
add
js
out
add
add
fldl
rcrl
and
mov
test
sub
and
push
iret
xlat
mov
xchg
andl
stos
inc
sub
xchg
fisttps
and
xchg
sbb
xchg
mov
out
add
pop
inc
and
popa
push
insb
pop
ret
aad
jb
loopne
fwait
mov
add
mov
or
popf
adc
add
mov
ds
flds
mov
mov
cmp
push
add
movsb
inc
and
adc
out
add
fdivs
pop
loopne
sbb
bsf
jno
gs
lea
add
mov
jnp
scas
sbb
movsb
les
fcoml
cmpsl
sbb
jb
mov
cwtl
jo
in
cld
int3
add
jmp
out
inc
mov
lea
loope
jmp
rorb
popf
mov
push
mov
rclb
in
push
push
sub
add
lods
add
mov
inc
add
gs
int
sub
push
inc
cmp
sub
scas
jne
add
gs
std
js
and
rclb
iret
jl,pn
mov
adc
push
fwait
cmp
loope
loopne
lods
add
lret
into
mov
stos
pop
jns
add
xchg
cli
movl
dec
jne
push
lret
pop
xchg
popa
addb
mov
js
mov
dec
adc
xchg
pop
add
push
std
mov
lahf
sbb
jne
pop
insl
xorb
dec
push
jo
rorl
rolb
cmp
add
and
sahf
jae
add
pop
int
daa
out
hlt
int3
xor
add
shlb
sahf
ret
sbb
dec
int3
mov
sbb
les
inc
fisubrs
lock
sti
fs
xchg
pop
xchg
iret
mov
cmp
and
cmp
xchg
in
mov
lock
and
pop
adc
pop
lahf
dec
mov
int3
pop
aam
sbb
sbb
inc
dec
xchg
inc
mov
ljmp
pop
cld
imul
push
cs
aam
mov
sbb
cmpsb
push
jo
mov
in
mov
cmpsl
pop
xor
imul
sub
dec
pop
aad
in
fiaddl
lahf
pop
cmp
xchg
pop
inc
and
adc
add
das
jno
fisubl
add
mov
adc
fldt
imul
push
shl
movsb
cmp
pusha
adcb
arpl
and
pop
mov
addr16
xchg
mov
xor
pop
jmp
ja
push
push
cmp
mov
mov
fcomps
nop
sub
ljmp
or
push
hlt
add
and
das
mov
or
xchg
mov
add
cmpb
nop
imul
add
lods
lods
mov
mov
outsl
jecxz
pusha
dec
cmp
xchg
xor
dec
add
lret
bound
pop
mov
jg
out
cli
andb
add
int
mov
js
add
pop
inc
inc
mov
sbb
imul
loope
pusha
std
add
sbb
mov
push
fcmovnbe
add
shll
xor
repnz
dec
add
or
shlb
imul
loop
andb
dec
add
jge
ljmp
push
add
mov
jnp
cmp
xchg
cmpb
add
aam
inc
or
add
adc
stc
cltd
mov
pxor
jnp
mov
mov
scas
adc
pop
and
sldt
ret
jbe
and
adc
cmp
es
addb
add
sub
add
adc
and
sub
cmp
subb
push
cli
int3
hlt
popf
jns
add
aam
lea
or
dec
jl
and
sarb
cmpsl
inc
mov
out
cmp
js
add
shll
pop
add
add
dec
pop
sub
dec
dec
or
ljmp
xor
add
inc
sub
fidivs
add
lret
int3
jp
js
mov
sbb
add
inc
out
daa
push
and
jge
loopne
mov
cmp
dec
push
add
jl
lods
int
xchg
addb
enter
clc
cmp
mov
insl
pop
mov
pusha
xchg
mov
push
jl
dec
adc
adc
stc
jmp
sarb
inc
add
pop
dec
mov
mov
wbinvd
xchg
adc
add
cli
cmc
in
dec
add
cmpl
rorb
ficoml
xor
add
rclb
nop
js
pop
loopne
add
or
pop
pop
imul
repz
aad
addl
rolb
adc
xor
inc
fdivs
stos
pop
push
xchg
fstpt
icebp
push
testb
xor
lret
cwtl
xlat
adc
mov
pop
cs
add
push
stos
add
fwait
jbe
outsb
add
cmc
push
movsb
jg
add
inc
std
ffreep
stos
sbb
cmp
mov
add
dec
loopne
rolb
ret
jns
pop
mov
and
inc
cld
mov
js
das
add
ss
sbb
stos
femms
xlat
mov
sub
add
js
dec
loope
aad
add
scas
xchg
je
cld
pop
sbb
or
lods
fdivl
punpcklbw
dec
jle
and
icebp
add
cmp
xchg
xor
adc
inc
adc
xorl
loopne
mov
int3
inc
repnz
push
pop
cld
add
cs
jmp
add
sbb
push
push
mov
add
ja
test
leave
cmp
dec
add
dec
out
ficoms
testb
add
clc
test
xor
aas
lret
out
xchg
jns
pop
fiaddl
ja
dec
inc
pop
scas
stc
mov
andl
in
into
push
dec
add
fs
dec
jmp
pushf
pop
stos
imul
out
out
and
pop
xchg
rcrb
xchg
add
cmpsl
jge
pop
add
std
dec
inc
test
test
add
jo
mov
pushf
subl
inc
add
and
lret
jp
add
sti
test
repnz
xchg
mov
call
add
xor
aad
cmp
add
xchg
idivb
pop
add
mov
in
je
add
push
mov
cmp
mov
inc
lea
dec
xor
dec
ret
add
lret
sbb
xchg
das
mov
inc
in
add
inc
gs
sbb
add
mov
add
shld
sbb
mov
mov
cmp
xor
rcrb
pop
sbb
ret
push
mov
mov
cltd
jo
shrb
aas
divb
add
neg
or
cmpb
add
adc
add
jne
add
sbb
add
rcr
lods
repz
notb
je
cmp
in
shl
sub
jecxz
mov
and
push
and
pusha
jb
dec
sub
jns
push
or
sbb
pop
cmp
iret
cmp
fmuls
adcb
xchg
jbe
loopne
es
jmp
fiadds
pand
xorb
imul
in
sub
lret
lcall
push
jl
add
cli
lock
shrl
adc
sub
cmp
or
pushf
test
loopne
add
cmp
ss
push
add
jg
add
pop
gs
dec
add
out
fsubrl
pop
xchg
jae
push
mov
arpl
dec
push
add
pusha
lcall
sub
cmp
das
pop
aad
add
aam
call
add
pop
insl
pushf
stc
sub
js
add
cmpsl
fnstcw
mov
mov
int
add
cmp
jl
add
push
popf
pop
mov
inc
lret
add
insb
jnp
jmp
rcll
bound
inc
aas
call
roll
add
fstps
scas
xchg
xor
and
adc
inc
aam
popf
das
xlat
sbb
insl
addb
sub
push
lret
sbb
loope
mov
in
xor
jns
mov
jecxz
daa
add
roll
int3
adc
jl
sbb
std
scas
dec
sarb
cvtdq2ps
xchg
add
hlt
jmp
add
xor
sub
fwait
lea
cltd
cwtl
add
std
mov
sub
ljmp
add
mov
cwtl
push
jnp
xchg
mov
jle
aaa
inc
jge
addr16
mov
add
lea
add
testl
ds
jae
jp
andb
add
es
pop
cmp
fldl
rclb
outsb
adc
add
int
cmp
mov
push
jp
jae
insb
pop
jno
and
inc
sbb
sbb
add
fst
pop
inc
xor
test
outsl
mov
push
data16
push
pavgw
inc
shrb
jle
lahf
lahf
cmpsb
or
fsubrs
std
sbb
push
dec
add
hlt
cmc
adc
dec
or
xchg
orl
fsubrs
mov
push
add
dec
mov
push
aam
test
cmc
lods
add
stos
mov
popl
push
jg
push
xchg
cmp
popf
je
inc
adc
lea
sbb
push
mov
xchg
ret
mov
orl
pop
add
and
out
add
xlat
ja
testl
push
sbb
pusha
pop
insb
cmp
sarb
push
orl
and
testb
cmp
movsl
nop
call
xor
enter
imul
pop
jmp
into
add
lret
mov
cmp
add
inc
scas
int3
adc
movsb
stos
decb
ret
stos
sub
cmp
pop
dec
test
sbb
fs
mov
mov
mov
lock
bound
mov
iret
dec
and
fmulp
sbb
aas
jge
or
mov
cmp
jb
adc
jno
js
adc
out
lds
jg
movb
mov
ret
sub
sbb
adc
pop
nop
dec
imull
lcall
mov
out
mov
add
cld
and
add
out
adc
fcompl
in
pop
stc
mov
in
mov
mov
js
pop
aad
mov
add
rcl
push
mov
dec
and
push
in
mov
jb
sbb
mov
bound
jo
add
xor
movsbl
lea
jno
add
jnp
cmpsb
stos
pop
addr16
add
mov
out
adc
pop
test
mov
dec
in
inc
cmp
sbb
add
add
mov
sti
dec
dec
sbb
jge
add
jbe
sub
and
add
loopne
mov
adc
adc
adc
arpl
cltd
add
popa
test
aaa
ljmp
faddl
sbb
xor
loopne
push
int3
sbb
add
cs
cmp
fcomps
mov
lret
cli
shrl
add
fimull
fsubr
fistps
jl
mov
add
in
adcb
add
jne
pusha
movsl
and
xchg
adc
iret
adcb
lea
inc
cmp
ja
cmp
xchg
push
push
inc
addb
hlt
xchg
dec
dec
shrb
mov
xor
pop
cld
ljmp
add
cmp
out
mov
push
lods
cwtl
mov
mov
popa
add
inc
dec
cli
repz
loop
add
cmp
mov
lret
add
jmp
pushf
scas
mov
inc
cmp
ss
lahf
sbb
cmp
xchg
mov
cwtl
add
mov
sar
repnz
cld
int
call
mov
add
adc
add
imul
add
data16
push
push
roll
in
xor
call
popa
rolb
clc
pop
mov
lahf
sahf
inc
push
hlt
subl
shlb
fidivrs
jns
or
xchg
xchg
or
push
jne
cld
push
xor
mov
jle
mov
cmp
push
cmc
sbb
and
push
add
sub
js
jp
mov
aad
inc
sarl
and
loop
dec
mov
lock
mov
dec
jge
add
adc
repnz
xor
fildl
xchg
mov
sahf
movsl
out
push
test
imul
pop
ljmp
inc
add
hlt
cmp
jae
cmpsl
movlps
mov
add
adc
add
push
inc
add
dec
jmp
xchg
out
aam
gs
sub
sti
xlat
fiadds
xchg
pop
std
add
push
sub
pop
rcr
fcmovnbe
daa
pop
lret
loop
in
repnz
cmp
mov
add
lock
pop
push
jb
pop
or
je
rclb
popf
push
or
imul
fsubrl
leave
pop
or
jo
add
add
iret
rorb
fucomp
jmp
add
fcomp
pusha
daa
test
push
test
cwtl
dec
inc
adc
das
fldcw
push
lods
jo
add
sbb
les
pop
lods
jo
aaa
and
add
push
dec
jae
cmp
jne
add
cmp
movsb
mov
mov
pusha
add
ficomps
adc
std
stc
cmc
push
mov
add
push
jecxz
adc
test
or
mov
add
rclb
fdiv
rcr
scas
mov
stos
je
mov
dec
xor
inc
sub
in
cmp
aaa
sbb
pop
icebp
cmp
xlat
push
leave
pop
pop
adc
and
jae
adc
sbb
loop
scas
in
push
repz
outsb
xor
les
cld
je
test
in
movsl
pop
shlb
mov
out
mov
cld
jp
mov
xchg
xor
push
sbb
dec
out
mov
daa
orb
idivb
mov
push
sub
push
pushf
pop
cs
cltd
ds
gs
pop
xchg
jae
int
sub
ja
cs
sbb
arpl
mov
dec
movsl
jmp
adc
mov
faddl
mov
mov
lods
jle
push
adc
scas
adc
jbe
push
lret
add
cmp
int3
in
push
push
into
ficomps
lahf
jmp
movb
pop
lock
xchg
mov
mov
dec
js
mov
enter
mov
xor
rclb
dec
mov
aas
dec
xor
loop
mov
xchg
nop
rolb
sahf
inc
mov
aam
sets
out
rclb
je
sbb
repnz
sbbl
scas
ret
pop
insl
jno
movsl
add
mov
and
leave
cmp
or
ror
lcall
sub
fadds
nop
sub
pop
mov
stos
ret
cmp
aaa
and
mov
cmp
test
push
ja
xchg
xlat
ds
add
clc
fs
andb
and
mov
div
push
negl
js
add
cld
loopne
jo
add
xchg
add
mov
into
daa
jmp
movsl
ret
jnp
mov
sbb
pop
pop
cmpsl
push
lret
les
pop
jl
push
pushf
mov
inc
sub
scas
jmp
and
mov
add
arpl
cmp
push
push
mov
dec
pop
repnz
scas
rolb
js
add
cltd
xlat
cwtl
loopne
add
pop
int3
fistpll
icebp
cmp
push
ss
adc
push
sarb
jg
aaa
sbb
das
pop
mov
xchg
push
cld
adc
cltd
addl
add
pop
cld
out
out
and
addr16
add
mov
int3
push
mov
rol
jae
add
pop
and
xor
ja
popf
xchg
les
push
negl
add
mov
cld
mov
fsts
mov
add
cmp
cmc
xchg
mov
xor
mov
out
lds
fdivr
add
cltd
cli
filds
add
push
dec
jae
xchg
popf
arpl
inc
pusha
xchg
add
outsl
push
add
rcr
fcoml
std
pushw
into
jb
sbb
mov
mov
xchg
push
ljmp
pop
iret
je
shlb
or
mov
xor
mov
add
and
mov
stos
cmpsl
push
and
adc
fsubrl
shlb
cmp
pop
inc
dec
push
cltd
jns
inc
xor
add
jno,pt
in
jmp
in
into
addl
add
filds
popa
call
adcb
xor
mov
add
lock
or
sbb
mov
fdivs
xor
std
les
bound
push
adc
and
mov
sub
add
popa
jns
and
push
call
pop
daa
inc
add
shl
in
sbb
cmp
jle
mov
mov
shrb
lcall
jle
sbb
fmull
cmp
jp
add
pop
add
scas
sbb
jmp
pop
aam
xchg
in
test
or
into
in
adc
shr
pop
pop
adc
add
insl
push
cmp
shr
add
test
cmpb
add
enter
sbb
flds
sar
add
lret
lea
cwtl
add
sbb
test
bswap
movsl
xchg
stc
dec
stos
test
mov
or
sub
add
or
out
in
mov
xor
gs
add
mul
in
mov
scas
insb
loopne
push
cltd
fiadds
sbb
mov
in
nop
adc
mov
je
rorb
cld
sub
pusha
cmp
sub
fistpll
aas
imul
cmp
outsb
daa
dec
inc
adcb
dec
add
lods
nop
mov
std
icebp
clc
pusha
adc
aas
lods
mov
std
ss
lret
push
push
add
and
popa
or
subb
repnz
push
add
loop
insl
loop
add
pop
inc
cs
ret
stos
cmp
in
xorb
jae
sti
stos
add
add
fiadds
jmp
mov
out
pop
cld
addb
jns
ret
test
push
jge
add
adc
add
inc
repz
clc
add
decl
loope
nop
jo
outsb
fisubrl
ret
mov
xor
mov
fstp
sbb
add
dec
imulb
xchg
mov
aad
cmpb
mov
stc
flds
in
adc
lock
push
inc
pop
add
xchg
orl
xor
out
xchg
pop
lods
mul
sbb
pop
das
add
lahf
fwait
outsb
daa
and
mov
pop
inc
stos
sbb
cmp
sbb
pop
cld
fdivrl
in
xchg
std
mov
xchg
sahf
fwait
lock
cmc
daa
es
xchg
enter
adc
mov
cwtl
add
leave
stc
cltd
and
add
pop
inc
push
outsb
cld
or
imul
stos
mov
add
in
xchg
gs
inc
clc
mov
in
cltd
or
cmp
mov
jmp
adc
mov
add
lock
inc
test
xor
aas
sub
stos
dec
idivl
stos
imul
mov
jnp
jmp
cmp
loop
mov
push
mov
adc
add
jbe
fidivl
pop
std
add
mov
iret
xchg
loop
sbb
lods
dec
orb
push
add
in
jp
enter
shlb
shrd
ficoml
loopne
add
repnz
lock
lods
leave
mov
add
push
pop
pop
test
jne
cmpb
daa
adc
push
jmp
repz
cmc
add
in
xlat
cmpsl
pop
dec
jmp
dec
mov
ja
inc
adc
add
sarl
fsub
mov
push
cwtl
xchg
out
call
cmp
test
push
adc
add
call
aad
std
repnz
mov
sbb
lret
add
sub
loope
sub
out
and
rcll
and
lret
lahf
and
mov
jl
push
add
dec
push
and
int
fisubrs
or
jno
aad
xor
sub
mov
jp
and
icebp
cwtl
testb
aam
int
fsubrp
push
movsl
mov
je
add
adc
add
pop
cld
add
pushf
insb
xchg
int3
jno
push
push
enter
dec
or
cmp
lods
push
mov
pushf
add
clc
movsb
into
out
fs
sbb
cmpb
adc
sub
andb
cmp
dec
faddl
std
adc
andb
xchg
bound
out
mov
ret
jne
xchg
loope
mov
add
mov
mov
xchg
mov
dec
mov
in
add
insl
std
test
sub
mov
lds
cmp
fwait
jo
mov
jb
mov
ret
cmp
out
adc
cmpsb
push
add
movsb
xchg
jmp
mov
scas
add
lds
mov
ja
out
cmpsl
push
jmp
mov
ljmp
pop
cld
push
in
or
ret
xchg
and
andb
bound
les
jb
add
insl
and
adc
lds
mov
mov
inc
pop
adc
shlb
jbe
int
addb
rclb
add
les
xchg
dec
pop
test
add
adc
mov
pop
add
push
add
in
sti
add
hlt
loop
dec
mov
jle
or
scas
inc
push
stc
lea
pop
inc
add
xor
add
ret
adc
mov
fidivl
xor
dec
out
push
lahf
xchg
nop
xor
pusha
test
xor
mov
orl
add
arpl
xchg
pop
call
xlat
pop
aas
sarl
jno
test
jl
mov
cmp
loop
cmp
mov
cmpsl
rcll
jbe
xchg
lret
pusha
in
sbb
jmp
les
mov
in
lahf
and
or
and
adc
xchg
int3
add
leave
push
call
ficomps
dec
cmpsb
mov
push
stos
or
jne
add
sti
test
sbb
add
lea
adc
add
incl
cmpsl
fyl2x
push
add
sbb
lahf
sbb
test
and
popa
xchg
mov
fwait
imul
js
repnz
clc
jb
add
mov
inc
add
out
jns
out
pop
stos
xchg
call
andb
mov
or
mov
into
shlb
iret
pop
add
mov
push
add
popa
mov
add
lea
adc
fcompl
pop
repnz
fldl2t
adc
add
mov
cmp
lods
inc
push
jp
incb
xchg
jg
inc
cmp
adc
or
inc
pop
in
mov
add
movsb
in
pop
push
punpckhdq
push
pop
xchg
add
dec
inc
adc
aad
jbe
daa
int3
ja
pop
addb
mov
add
mov
rolb
add
and
dec
jl
stos
xchg
sbb
inc
div
add
mov
lret
aad
add
negl
pop
sub
or
add
js
xchg
add
in
add
ja
xchg
mov
dec
cmp
add
xor
les
enter
lock
push
inc
mov
push
imul
add
inc
inc
add
or
addr16
add
add
or
xchg
int
loopne
cmp
and
jge
add
inc
insb
lea
mov
xchg
lcall
push
add
inc
jp
jg
xor
mov
lods
xchg
add
mov
ret
and
lods
dec
repnz
sbb
in
pop
test
sbb
rclb
dec
js
push
push
inc
loopne
leave
add
loopne
out
pop
loop
jno
cwtl
xchg
push
push
cs
out
or
jg
or
push
cs
add
pop
sbb
mov
nop
out
add
das
ds
out
sbb
rcr
jecxz
add
movsl
or
pop
lock
jmp
call
dec
adc
add
insl
and
dec
nop
push
or
fildl
add
sub
add
and
pop
sub
lret
es
les
leave
cmp
faddl
and
mov
aaa
pop
push
add
push
sbb
lds
popf
js
movups
mov
ljmp
pandn
jl
clc
jnp
or
enter
scas
add
mov
add
jbe
push
jmp
pop
inc
or
test
scas
cmc
jnp
dec
and
movzwl
xor
leave
es
mov
add
loop
inc
sbb
or
mov
nop
daa
or
lock
mov
adc
arpl
insl
loope
jmp
enter
dec
in
add
loopne
adc
int
mov
push
pop
daa
mov
outsl
imul
dec
sub
add
cmpsl
mov
push
cmp
cs
pop
lea
mov
pop
mov
aad
ljmp
sahf
push
sub
stos
pop
dec
das
push
pop
cmc
adc
pop
loopne
or
hlt
data16
pop
stos
pop
xor
inc
sub
ja
cmp
and
mov
inc
add
pop
std
aas
add
js
jl
adc
push
xchg
lahf
xorb
loop
cmp
addr16
adc
xchg
push
ret
push
mov
insl
cmc
add
arpl
repnz
stos
jp
sub
pop
imul
inc
add
into
mov
dec
add
xchg
out
jmp
add
les
into
or
xor
pop
or
ljmp
inc
jns
js
loop
repz
push
add
cltd
push
push
stos
outsb
jne
xor
popf
add
mov
imul
pop
push
add
add
pusha
lcall
mov
aaa
xchg
stos
ret
mov
pop
into
es
dec
ss
jb
scas
inc
pushf
in
inc
sbb
daa
ror
in
and
cmpsb
lret
test
mov
push
add
pop
dec
and
rorl
add
jl
xor
lods
push
mov
test
dec
das
pop
shll
fcoml
pusha
insl
mov
daa
add
jmp
inc
mov
add
inc
adc
pop
loope
push
gs
lahf
sbb
sbb
nop
sub
mov
xchg
dec
in
or
push
pop
pop
js
ret
adc
pop
popf
add
sbb
and
and
push
fadd
cs
outsl
add
or
pop
add
add
jg
inc
mov
clc
mov
loop
rcrl
cmp
push
and
out
cwtl
ljmp
rclb
daa
popa
pop
jns
add
inc
push
or
and
ljmp
push
adc
jae
cmp
addr16
addr16
adc
mov
addb
repnz
dec
and
iret
jnp
in
andb
scas
pop
sbb
cmc
pop
in
cmp
mov
mov
lock
jl
enter
shlb
jecxz
fwait
xor
cmp
out
add
fmull
mov
int3
add
in
push
or
and
dec
dec
add
pop
cmpsl
aaa
pop
roll
push
pop
mov
and
mov
loop
fldl
adc
push
xchg
inc
adc
fiaddl
sub
and
or
lock
pop
or
sub
test
add
ret
in
push
sarl
mov
cmp
stos
and
pop
jp
add
push
mov
sub
adc
outsb
imull
sbb
add
mov
add
mov
mov
add
dec
dec
jmp
push
clc
push
sbb
xchg
shrb
pop
sbb
in
sbb
lret
pusha
js
push
xchg
mov
nop
aad
addb
fdivp
push
sbb
pop
es
sbbl
and
sbb
xchg
dec
mov
nop
or
xchg
test
cmp
jae
call
pop
jbe
add
mov
pop
dec
repnz
int
in
jbe
push
adc
dec
in
and
sbb
cwtl
add
and
lahf
sarl
push
clc
jecxz
fdivr
inc
test
out
add
fidivs
add
push
pop
xchg
cmp
add
pop
divl
sub
add
test
pop
cmp
or
mov
add
int
cmpsl
dec
add
adc
adcb
add
mov
les
in
mov
pop
les
out
loop
pop
or
popa
pusha
nop
jnp
lret
sbb
icebp
rcl
fs
inc
int
stos
mov
enter
add
int
mov
leave
stc
jno
pop
or
sahf
out
dec
movsb
push
or
mov
and
inc
repz
sbb
sub
in
add
jmp
adc
gs
movsb
adc
xchg
add
ss
mov
dec
xchg
out
aad
inc
add
xor
test
imul
jle
and
add
icebp
psubusw
or
js
jp
push
push
movsb
in
jmp
insl
push
rolb
push
adc
add
popfw
cltd
sbb
adc
loopne
and
popa
cmpsl
filds
add
out
lahf
inc
jge
ljmp
mov
cmpsb
or
dec
pop
sbb
cwtl
add
mov
cs
adc
mov
mov
daa
add
pusha
rorb
dec
add
mov
js
add
popa
jnp
mov
mov
pop
stos
lods
add
clc
sub
adc
push
push
mov
add
jo
push
ss
push
fdivs
sbb
pushf
jl
popf
jg
dec
pop
and
xchg
or
add
fists
inc
adc
hlt
in
and
inc
cmp
movl
sub
mov
fdivs
add
adc
jo
or
inc
enter
adc
faddl
ja
xchg
nop
pop
rcll
inc
dec
js
xchg
mov
sub
sub
inc
rcrl
push
xor
andl
xchg
fmull
inc
xor
add
xor
adc
lods
jp
add
loopne
clc
sub
inc
sub
fdivrs
jp
adcb
test
mov
mov
and
mov
shlb
lods
mov
loopne
jle
add
sub
roll
or
sub
inc
push
std
mov
jo
in
mov
adc
jp
call
out
push
je,pn
cmp
xchg
push
mov
aam
repz
cwtl
push
pop
ret
xchg
outsl
imul
jne
xchg
push
iret
add
nop
stos
fmull
or
pop
hlt
data16
dec
in
pop
pusha
dec
arpl
mov
jo
int
fcoml
sub
rcrb
add
sub
dec
and
xchg
mov
sbb
fdivs
test
stos
test
inc
cs
lahf
pusha
cwtl
shlb
in
jmp
sahf
xchg
movsl
insl
mov
add
testb
dec
sahf
add
mov
sub
int
leave
in
sub
mov
add
jg
mov
ss
xchg
xlat
and
inc
loopne
mov
dec
scas
iret
sahf
in
test
cmpsb
fildl
push
insl
int
dec
add
push
lds
adc
pop
adc
pop
loopne
addl
loopne
mov
push
ds
jg
insb
cmpsl
add
and
add
mov
mov
mov
out
pop
add
push
shll
rorb
xlat
fwait
mov
test
stos
or
mulb
cs
sbb
mov
les
inc
lea
or
add
mov
pop
or
je
jns
outsl
mov
imul
les
xchg
nop
ds
or
jle
add
add
xchg
loopew
cwtl
popf
adc
pushf
or
jge
cli
and
adc
scas
push
cmp
inc
mov
sub
rcll
loopne
je
sub
les
xor
scas
adc
and
push
push
mov
adc
add
mov
sbb
sub
rcrb
jae
add
pop
imul
loopne
je
or
fsubp
mov
xor
idivl
test
cmp
and
mov
shl
es
fadds
lods
add
cmp
scas
push
cmp
pop
mov
fistpll
jg
and
call
and
pushf
adc
add
imull
jp
aaa
out
lea
lds
fisttpll
or
loop
or
dec
and
mov
fsts
add
imul
add
dec
xor
in
inc
cmp
push
jge
jl
fs
outsl
loopne
divb
add
out
loope
and
in
loopne
inc
pusha
daa
clc
loope
dec
repnz
xor
pop
test
sub
jge
and
add
shrb
xor
and
pop
clc
scas
sub
daa
lret
jo
add
lea
in
dec
dec
in
scas
xchg
add
imul
mov
inc
add
lds
dec
stc
mov
sbb
call
cwtl
cmp
mov
xor
jns
lock
dec
xchg
cmp
pop
jb
sub
adc
outsb
mov
jl
inc
or
into
mov
jmp
inc
mov
xchg
inc
sub
outsb
add
jb
cmpb
pop
jns
push
or
addl
jge
jae
add
inc
ret
subb
leave
test
xchg
faddl
shlb
inc
shl
and
jp
or
lahf
pop
sub
adc
divb
cli
scas
push
loopne
xlat
ret
add
xchg
repnz
jle
xor
dec
cmpsb
add
mov
adc
lock
mov
stc
sub
int
push
cmp
sub
xor
roll
cmp
push
fs
add
enter
add
js
test
lcall
das
sbb
int3
add
adc
add
aad
popa
xchg
jnp
add
mov
adc
xchg
nop
sbb
lods
inc
pop
push
xchg
cmovno
add
adc
mov
add
daa
jge
pop
js
add
std
mov
movsb
jmp
adc
sub
push
xchg
int3
xchg
inc
pop
inc
pop
loopne
addr16
lods
in
xor
aad
sub
mov
loop
push
pushf
fstl
mov
jae
cld
fisubrl
aas
movsl
loope
cld
adc
xchg
es
mov
sbb
dec
das
ret
cmp
push
xor
inc
sub
pop
add
pop
mov
out
mov
mov
lret
insb
and
sbb
stos
add
nop
dec
lahf
mov
shlb
or
inc
push
shufps
roll
movsl
jl
movsb
cmp
sarb
mov
or
sbb
shll
xchg
and
pop
ret
pusha
add
movsl
out
adc
sub
mov
sub
add
cmp
mov
movsb
nop
rclb
pop
leave
std
lock
sbb
lea
pop
cmp
aam
int3
and
adc
in
cli
xor
sub
mov
icebp
jle
cmp
in
adc
pop
mov
cmpsl
cmp
mov
fadds
cli
pusha
add
cmpb
cmpb
mov
cwtl
mov
mov
test
jno
mov
leave
nop
cwtl
sahf
shlb
rclb
inc
cmc
add
push
test
mov
dec
roll
add
iret
inc
enter
cld
testb
xchg
mov
dec
das
dec
mov
jo
adc
dec
or
mov
xchg
lahf
jae
add
sub
js
nop
test
mov
dec
insl
pusha
mov
jo
les
lods
pop
xchg
fs
xchg
fs
sub
jmp
fsubs
int3
lahf
inc
mov
xor
and
js
mov
fldl
nop
out
mov
test
sbb
imul
pop
inc
sub
sbbl
mov
add
inc
out
popa
enter
cmc
fiaddl
ficoml
movups
les
add
hlt
stc
mov
inc
imul
es
dec
pusha
xchg
lods
dec
pop
insb
add
mov
cmp
ja
fcoms
in
mov
dec
aaa
add
mov
es
int
mov
push
scas
test
cmp
bound
push
and
in
adc
hlt
inc
fnstenv
sahf
repnz
aas
loopne
jns
mov
add
stc
popf
or
bound
xchg
xor
adc
fcomi
add
xor
pop
subb
leave
dec
arpl
inc
imul
sub
adc
sbb
loop
adc
ret
mov
negb
fs
inc
out
add
adc
out
movsb
push
jp
dec
pop
xorb
or
addb
mov
fs
mov
add
je
pushf
inc
ret
test
adc
and
enter
nop
adc
mov
pushf
add
in
enter
push
pop
in
ror
sub
daa
mov
and
je
dec
outsl
or
in
cli
add
inc
jl
pop
pop
loopne
xchg
xor
ds
inc
adc
repz
loop
test
movsb
dec
lahf
in
inc
cld
lock
sbb
sbb
mov
inc
cmp
jae
js
imul
mov
xor
pop
pop
xchg
mov
push
fsubrs
mov
orb
nop
sub
fmul
mov
cmc
push
into
pop
inc
les
cltd
fmuls
or
loopne
inc
push
mov
sahf
enter
xchg
and
ror
sub
jns
inc
or
rclb
xchg
add
xchg
rclb
add
mov
mov
sbb
loopne
jmp
or
filds
jecxz
setge
sbb
sbb
movsl
fisubrs
add
enter
xor
daa
add
pop
add
inc
cmc
add
and
push
adc
or
sub
in
mov
dec
push
sub
lret
xchg
std
pop
outsb
addb
int3
fdivl
test
dec
loopne
pop
out
js
dec
lret
xor
mov
adc
movsb
and
test
rolb
add
mov
mov
pushf
test
nop
pop
pop
and
mov
xchg
icebp
inc
cmp
lods
ja
jo
cmp
gs
stc
push
outsb
enter
in
mov
fsubs
call
cmpsl
mov
mov
and
pop
cmp
dec
push
mov
div
push
pop
aaa
fldenv
loopne
push
ljmp
out
xor
dec
push
adc
cmc
sub
and
pop
pop
mov
pop
push
shrb
scas
fnstsw
xchg
sbb
xor
into
push
je
add
pop
mov
xorl
ret
pop
fwait
add
fstpt
adc
push
pop
js
inc
sti
daa
sub
out
shlb
pop
mov
mov
mov
ror
pop
push
dec
std
test
push
imull
mov
add
pop
xor
adc
sbb
xchg
test
add
mov
dec
and
or
loope,pt
pusha
stos
or
aas
out
xchg
adc
push
pop
mov
add
test
rolb
and
daa
in
adc
cmp
add
inc
inc
add
repz
add
rclb
mov
add
aam
pop
les
jbe
in
js
add
xchg
ja
jnp
add
or
lret
cli
test
out
pop
mov
fs
or
je
push
mov
hlt
loopne
scas
push
mov
cmp
and
daa
or
cmp
mov
mov
scas
pop
mov
xchg
add
lcall
imul
jp
dec
pop
push
movsb
hlt
adc
and
stos
aas
xor
and
dec
xchg
mov
push
fadds
mov
das
cwtl
add
out
inc
loopne
inc
xor
adc
mov
xchg
jg
cmp
adc
xchg
dec
not
sti
cltd
add
mov
add
lcall
cld
mov
add
ss
sbb
add
insl
aas
enter
iret
mov
scas
mov
adc
push
or
mov
xor
jge
mov
inc
mov
aaa
push
imul
ret
pop
pop
shlb
add
call
pop
aam
pop
fnsave
cmp
daa
jge
or
ss
and
sub
jecxz
dec
movsb
jo
add
cmpsl
and
rcr
add
or
inc
adc
mov
or
sbb
int3
pop
add
jne
dec
sbb
pop
pop
mov
repz
rclb
pop
test
add
out
repz
es
sub
nop
cwtl
pushf
xchg
or
add
cld
add
pop
push
sbb
xor
daa
jmp
leave
mov
jge
imul
sbb
and
jne
cs
jmp
add
enter
xchg
test
and
das
pop
push
fcmove
add
sbbl
add
lods
lods
fwait
push
add
inc
pop
loope
jno
and
mov
mov
inc
xor
in
dec
fadd
sbb
mov
add
sahf
les
xchg
pop
or
push
mov
push
or
call
or
push
into
add
fbld
mov
pusha
jo
sub
sub
cltd
dec
pop
xchg
ja
fsts
mov
or
add
xchg
or
add
ss
popf
dec
popa
cmp
mov
es
mov
add
repz
add
mov
cmpsb
ss
sub
outsb
dec
movsb
pop
xchg
pop
loope
daa
movsb
mov
into
add
movl
or
push
cs
or
inc
cmpb
push
mov
or
mov
push
xor
shrb
lods
xchg
mov
adc
jp
and
ret
xor
sub
dec
in
add
push
mov
xlat
jo
cwtl
cltd
or
dec
add
or
shlb
add
call
xor
jp
jmp
test
cmp
dec
pop
push
add
jmp
add
or
push
dec
fsub
or
sub
lds
cmp
xor
and
adc
sub
adc
or
sar
mov
cmpsb
rep
push
push
pop
adc
sbb
jle
add
jns
cmp
add
push
idivl
outsb
sbb
and
pop
inc
push
inc
mov
fsubl
call
mov
jns
sub
fwait
mov
inc
push
cmp
imul
sub
mov
pop
or
inc
inc
movsb
aad
iret
mov
fdivrs
xor
dec
adc
xor
fdivrs
pop
fstpt
into
jg
pop
add
pop
aam
jl
inc
js
cmp
dec
lcall
std
lret
outsb
dec
shlb
sub
mov
cli
jae
aaa
add
jp
inc
xlat
and
nop
test
js
cmp
dec
add
sbb
sbb
sub
outsb
call
sub
cmpl
aas
sahf
cltd
add
pop
stos
jnp
test
shlb
lods
hlt
call
test
test
sub
mov
mov
sub
mov
add
xor
fisubrl
and
jg
insl
sti
test
cmp
dec
je
into
shlb
push
lcall
add
add
test
mov
mov
cmpl
adcb
fnstcw
shrl
leave
cmp
push
cmp
lock
mov
xchg
xor
shr
inc
test
xor
enter
mov
lods
push
lcall
movsb
add
leave
scas
xor
aaa
add
loop,pt
in
lock
mov
and
mov
stos
cmp
push
pop
sarb
fsubrl
fs
lods
enter
add
je
adc
mov
hlt
pop
jbe
lock
jle
ret
fwait
inc
aam
imulb
jnp
mov
loopne
jb
or
mov
pop
aas
push
in
mov
xlat
jle
or
xchg
test
test
lds
mov
in
imul
xor
sub
mov
mov
dec
push
inc
push
movb
pop
inc
adc
push
jge
or
sub
imul
adc
mov
or
dec
pop
or
lock
pop
and
sub
xor
push
mov
hlt
push
test
lock
mov
mov
adc
movsb
pshufw
add
rcrl
pusha
add
jl
jp
cmp
xchg
fistpl
lods
dec
in
mov
inc
add
cmp
mov
dec
add
and
ficomps
sub
or
dec
es
pop
add
ror
shlb
sysexit
andb
mov
cmp
mov
out
rcl
xor
out
add
clc
outsb
sub
fdiv
popl
sbb
sahf
shlb
lds
sbb
dec
testl
sbb
or
or
xor
sbb
cmpsb
inc
stos
mov
jno
mulb
mov
dec
push
jl
mov
dec
and
jns
adc
lods
into
shlb
mov
mov
scas
add
repz
in
out
add
pop
into
nop
add
dec
or
and
and
add
out
pop
int3
sbbb
loope
mov
rclb
mull
loope
into
xor
imul
das
dec
insb
sub
add
push
outsl
lret
adc
xchg
test
inc
clc
rclb
pop
pop
enter
inc
lcall
imul
inc
sahf
loope
iret
xor
mov
into
roll
mov
mov
sbb
sbb
jbe
sub
pop
mov
jo
add
je
jne
cltd
push
mov
dec
pop
cwtl
push
lret
loope
xlat
mov
dec
add
shlb
xchg
jo
and
mov
mov
add
ljmp
xorl
xchg
jl
xor
pop
iret
inc
xchg
out
ds
test
lock
lods
pusha
pop
lock
or
push
or
loopne
inc
push
fwait
jbe
data16
jp
xor
cli
std
inc
lods
add
adc
and
int3
or
dec
jnp
adc
add
das
push
sbb
rcrb
icebp
enter
fidivrl
jle
mov
in
jnp
adc
push
call
xchg
ffreep
or
mov
mov
push
stc
add
scas
mov
and
in
push
xor
xor
push
dec
int
ljmp
push
jecxz
movsl
and
mov
bnd
arpl
imul
sbb
fwait
cli
test
cmp
push
cmp
pop
mov
inc
repnz
nop
and
les
and
jae
or
fmuls
jbe
add
aaa
push
xchg
inc
xor
adc
push
bnd
adc
add
cltd
jae
outsb
decb
hlt
adc
pop
pop
mov
addl
mov
push
sub
jmp
fsubl
add
insb
jp
and
mov
pop
cltd
xor
aam
and
arpl
push
push
sti
xchg
dec
xchg
adc
jl
in
nop
pop
daa
dec
inc
xor
pop
sub
add
daa
int3
add
mov
outsb
test
cmpps
repz
enterw
ljmp
dec
andb
xchg
adc
daa
stos
es
sub
mov
adcb
add
filds
outsl
mov
jnp
add
sahf
cmp
shlb
bound
repz
shrl
insl
add
enter
jmp
fnstsw
inc
and
cmp
int3
stc
das
rcr
test
test
shll
movsb
flds
nop
xor
inc
cmpsl
data16
mov
clc
push
add
push
xchg
xchg
nop
rcl
lret
cmpsb
jno
pop
sbb
movsb
inc
mov
loope
add
sahf
push
sub
adc
lock
add
movsl
lcall
add
loopne
pop
jno
cwtl
push
adc
popl
sub
lea
jge
ud0
push
and
pop
addb
movsl
test
push
imul
xchg
dec
pusha
xchg
add
adc
aaa
sbb
push
xchg
test
or
jae
lret
test
or
pushf
je
add
mov
fstpt
pusha
fcomps
cmp
add
scas
xchg
pop
mov
int3
jle
shrb
mov
addr16
js
outsb
mov
imul
mov
pop
mov
cs
je
jo
out
cmp
outsl
dec
push
orb
inc
jp
add
push
sbb
outsb
mov
popf
cwtl
or
push
negl
and
pop
jmp
xchg
lock
pop
call
mov
add
add
stos
add
adc
mov
mov
dec
cmp
adc
jl
add
inc
in
dec
es
add
movsb
hlt
int3
sbb
inc
add
inc
fsubrs
test
push
rolb
xor
mov
fsubrs
pop
xlat
cmpsl
dec
lret
pop
xor
in
cmc
cmp
rcll
or
mov
addb
pop
aas
jnp
pushf
jo
pop
jo
aam
push
leave
pop
into
jecxz
mov
mov
and
add
xchg
loopne
sahf
push
add
fcompl
dec
and
addb
lcall
xor
mov
push
adc
ret
pop
pusha
pop
xor
cmp
push
sbb
cmp
adc
in
clc
ds
sub
shlb
cmp
imul
cs
push
mov
les
test
and
int3
inc
jl
loop
mov
sbbb
out
inc
sub
xor
scas
push
pop
jp
mov
rorb
push
mov
cmpsl
or
pop
scas
fwait
ret
imul
clc
fstl
lds
add
cs
fwait
imul
inc
add
ds
adc
xchg
jno
add
and
jnp
cltd
addb
push
xor
lcall
idivl
add
dec
in
add
cmp
or
sub
stc
cwtl
or
sahf
inc
add
add
outsb
out
mulb
cmp
scas
pop
add
out
mov
loopne
sub
inc
test
in
sub
repnz
sbb
mov
sub
add
mov
mov
push
sbb
or
fsts
js
add
sarb
mov
sub
daa
pop
add
jle
mov
outsl
adc
dec
fbstp
aam
adc
movb
add
in
pop
mov
inc
in
stc
xor
into
dec
mov
cli
and
mov
femms
fsubrl
inc
js
lret
and
cmp
and
out
jmp
xchg
leave
dec
movsb
jmp
nop
pop
xor
inc
or
idivb
push
rclb
add
cmp
rorb
add
xor
xor
gs
dec
aad
adc
popa
rolb
or
mov
enter
movsb
je
sti
or
arpl
loop
add
fucomi
xorl
sbb
mov
pop
add
sub
add
adcb
int3
repnz
adc
cld
or
add
pop
add
inc
mov
mov
inc
dec
sbbb
test
and
movl
call
rorb
pop
jbe
jne
add
mov
jle
and
xor
xchg
rorb
pop
cli
or
and
inc
insb
aad
dec
jae
int3
add
movsb
jmp
cmp
sub
fsubl
in
xor
ror
mov
or
inc
or
stos
addb
ss
push
pop
mov
add
xor
inc
arpl
repz
out
xorb
xchg
mov
inc
rolb
or
push
add
out
rcrb
int
jns
aaa
scas
addr16
jno
xchg
mov
pop
loopne
or
sbb
repz
test
sbb
inc
and
into
insb
jns
daa
push
setb
xlat
push
je
inc
add
nop
xchg
insb
add
jmp
hlt
je
out
loopne
dec
xchg
push
add
pop
insb
and
jns
adc
call
std
xor
int
lods
xchg
aam
stc
add
pop
pushf
sbb
xor
popf
add
outsb
les
pop
fimull
xor
addb
pop
fdivs
imulb
add
add
sbb
ror
adc
cmc
loopne
fsubrl
xchg
cwtl
movsb
sahf
rolb
int3
mov
pusha
pop
add
mov
sub
pusha
push
cmp
neg
jbe
push
add
repnz
insb
lahf
adc
roll
jle
lock
cmp
xchg
cmp
je
lcall
addb
cltd
jbe
in
pop
lret
aam
lcall
mov
sahf
push
daa
rolb
sbb
mov
add
push
cmpsb
pop
push
jno
das
inc
lcall
test
hlt
add
mov
xchg
inc
outsl
ret
xor
mov
dec
pop
fwait
subb
vmread
or
in
jae
push
aad
pop
test
add
stos
lods
adc
xchg
add
aam
in
pushf
in
iret
fcomps
loope
add
or
and
push
pop
lods
arpl
int3
addl
inc
out
pop
pop
shl
sbb
add
dec
icebp
roll
add
mov
std
sbb
jbe
shrl
mov
mov
mov
or
shlb
shll
push
popf
jg
shrb
daa
js
add
push
test
lods
hlt
pusha
scas
xchg
sub
add
inc
mov
jle
pop
sbb
jmp
xchg
add
fsub
out
pop
mov
xor
enter
rclb
popa
jecxz
sbb
and
and
fadds
jg
pusha
lods
into
ficoms
push
add
push
jmp
les
add
and
xchg
nop
loope
or
pop
fsqrt
adc
add
inc
hlt
cmp
mov
in
pop
add
pop
dec
ret
adcb
lret
dec
jmp
lahf
and
dec
sub
pop
pop
dec
gs
pusha
mov
inc
pop
negb
add
add
sbb
scas
ret
or
lret
sub
enter
inc
mov
cvtpi2ps
ds
mov
add
xor
jmp
lods
add
add
mov
pop
pop
loopne
int
in
pop
shrl
aaa
dec
jmp
int3
sbb
loop
cs
lds
dec
sub
adcl
ljmp
push
cmp
inc
lret
jle
ljmp
mov
sarb
aam
add
jne
push
addr16
add
or
mov
pop
jl
or
mov
ret
pusha
add
shll
sub
lods
push
daa
in
jno
xchg
leave
add
inc
shl
mov
mov
test
pop
pop
daa
xlat
mov
push
inc
sbb
sub
leave
sar
les
stc
add
adcb
xchg
mulb
cli
aas
pop
shl
add
loope
mov
add
out
aaa
pop
cwtl
pop
sub
rolb
and
add
mov
mov
add
ret
sub
push
dec
aad
rolb
sbb
mov
rorl
mov
sub
inc
or
push
adcl
lea
les
add
imul
movsb
xlat
pop
jg
test
pop
adc
push
nop
add
fidivl
test
cmp
faddp
stos
movsb
and
or
mov
leave
je
jnp
jl
ficoms
push
jns
inc
jne
in
dec
add
adc
adc
xchg
push
pop
call
ja
xchg
andl
or
jl
xchg
rol
cs
jb
or
adc
add
pop
pop
mov
inc
mov
xchg
out
mov
pusha
data16
dec
adcb
xlat
stc
scas
fldl
jnp
cwtl
xor
mov
lea
aas
ljmp
and
in
xchg
push
rorb
add
sbb
mov
sbb
fnsave
cmpsb
stc
popl
in
subb
xchg
add
mov
shr
push
pop
lods
sbbl
push
mov
cld
or
add
lods
shlb
addb
fmuls
pop
call
add
dec
pop
mov
add
pop
jg
sahf
adc
aad
out
out
sbb
out
add
push
inc
je
mov
lea
sbb
mov
lcall
inc
nop
sub
mov
pop
adc
in
and
xor
push
mov
mov
sub
repnz
mov
inc
mov
mov
testl
add
dec
and
xchg
adc
xchg
stos
mov
xor
hlt
faddl
add
imul
pushf
xchg
and
stos
test
aaa
add
adc
or
lret
add
xchg
inc
aam
xor
pop
lods
enter
mov
hlt
add
pop
push
adc
sbb
dec
nop
mov
mov
repnz
adc
arpl
xchg
outsl
jg
add
lahf
shlb
cwtl
enter
pop
nop
popa
outsl
xor
and
xlat
sbbl
xchg
push
loop
rorb
push
call
add
and
jne
mov
flds
or
iret
jg
jo
adc
lret
enter
jecxz
in
pop
shrb
daa
insb
push
ds
mov
cmpl
sub
xchg
sarb
mov
js
repnz
push
shl
inc
jg
ficoml
lds
pop
cmp
sbb
cwtl
cmp
fwait
in
pop
push
add
push
cmp
pushf
adc
xchg
adcl
sub
outsl
sar
add
add
aam
hlt
add
lds
leave
dec
cltd
pop
outsb
dec
push
fadds
xchg
mov
imul
inc
movsl
push
je
test
clc
pop
sqrtps
jmp
lds
in
fildl
dec
bound
mov
and
add
fisubrs
pop
lods
add
dec
xchg
imul
pop
mov
in
es
adc
jno,pn
sahf
pusha
mov
add
jnp
and
call
push
or
inc
add
xor
xchg
test
nop
out
add
inc
mov
mov
sbb
push
mov
or
lods
adc
nop
pop
stos
scas
inc
out
pop
pop
cmp
nop
andb
cld
push
lods
add
mov
test
sbb
iret
push
mov
outsb
xchg
add
dec
jbe
pop
insb
pop
imul
mov
sahf
clc
faddl
hlt
jno
iret
mov
rolb
sub
out
and
je
pop
mov
jmp
les
mov
pop
add
fs
jg
sub
clc
loop
nop
sbb
call
jle
lods
xchg
adc
xchg
pop
add
jae
xchg
add
out
pop
cmpsl
or
lret
pop
mov
jl
push
stc
pop
addr16
inc
into
mov
mov
mov
add
int3
jge
mov
sbb
add
pop
or
mov
or
ret
aas
adc
into
in
cmp
add
test
add
add
int
movsl
loope
dec
outsb
nop
sbb
add
and
mov
cwtl
add
outsl
loope
cmp
or
cmpb
and
popf
dec
movsb
or
ret
inc
and
outsb
nop
subb
mov
icebp
rclb
push
out
lods
add
cmp
faddl
fnstsw
test
adc
mov
pop
loopne
sub
arpl
pop
adc
scas
add
and
and
adc
faddl
ret
xor
jo
add
cmpsb
sbbb
je
in
jg
mov
cmp
cmp
sahf
add
sarl
mov
clc
adc
and
rcr
and
and
mov
lret
xorb
xchg
push
movb
out
sti
lea
out
jns
movsl
or
testb
addl
fmuls
out
fldl
add
jbe
add
testl
lahf
adc
adc
add
add
shll
fsubp
jg
push
or
bound
enter
frndint
add
mov
jbe
mov
mov
pop
std
mov
pop
mov
and
mov
int
add
lret
lods
pop
mov
mov
inc
xchg
cwtl
add
pop
test
cmp
add
push
stc
and
mov
cli
sbb
ja
push
loop
loopne
out
bound
push
dec
hlt
sub
das
jne
in
adc
add
xchg
adc
add
xor
dec
xchg
push
sbb
inc
subl
test
aam
add
jnp
sarl
loopne
add
adc
add
push
adcl
sub
xor
pop
sub
inc
pop
inc
inc
push
dec
and
adc
push
cmp
addr16
cmp
rcl
lock
inc
gs
sub
sbb
mov
xchg
sub
cmp
ss
outsl
and
and
aaa
sti
pop
add
xchg
sbb
shlb
fisttpl
and
xchg
dec
imulb
push
sbb
push
add
jo
in
sub
ret
pop
add
gs
or
pop
adc
test
fists
adc
sti
inc
dec
pusha
jl
push
cmp
out
mov
test
add
xchg
add
mov
pop
xchg
sahf
mov
add
lods
pop
or
pop
pop
je
cmc
sub
jb
cmp
scas
add
cmp
les
cmpl
in
jle
or
mov
push
test
lods
xlat
insb
sbb
fiadds
mov
in
add
push
testb
rorl
negl
addb
mov
orps
add
imul
or
sbb
cld
mov
icebp
inc
out
xsavec
mov
fidivs
repnz
cmpsb
pushl
loopne
jo
daa
push
rcll
push
cmp
dec
jne
mov
movsb
add
popa
mov
rcll
pushf
xchg
adc
xor
in
add
in
pop
or
pop
repnz
pop
out
xchg
and
xor
dec
mov
xchg
push
and
shrb
pop
lods
sbb
inc
test
out
jge
pop
cwtl
rcrb
ja,pn
push
or
cmpl
xchg
addr16
mov
or
mov
cmpl
cs
jo
scas
mov
popf
dec
pusha
test
mov
or
inc
sub
aad
and
jb
orb
push
add
lahf
cmpsl
mov
aad
addl
hlt
cmp
cmp
cmp
jno
aad
sbb
pop
js
add
shl
push
cmp
sub
sarl
mov
add
adc
add
jg
cwtl
loope
mov
xchg
pxor
sbb
and
and
call
sub
add
sub
insl
inc
fcoml
repnz
lods
orb
push
call
pusha
xchg
scas
jns
inc
pop
lods
bound
sbb
inc
push
pop
adc
xchg
jp
insl
lahf
mov
mov
add
push
dec
push
xor
or
pop
xchg
stc
dec
adc
mov
cmp
push
mov
xor
fcmovbe
stc
mov
inc
je
dec
add
cmc
jecxz
or
jnp
fdivrl
jmp
shl
and
jne
je
xchg
pop
mov
inc
out
mov
rcll
cs
dec
adc
mov
sbb
add
add
loope
push
add
inc
push
or
sub
test
mov
inc
loop
popa
xor
cmp
adc
inc
pop
inc
push
cmp
fdivrl
pop
les
loopne
push
xorb
mov
mov
and
pop
popf
repnz
outsb
lds
jp
test
aad
add
mov
dec
pop
sub
push
sahf
xor
js
aas
add
inc
je
pop
outsb
inc
add
sub
add
or
rolb
push
add
lcall
mov
mov
jb
cld
cmp
or
mov
int
inc
sub
sbb
and
sub
cmp
and
je
sub
sti
inc
dec
scas
sbbl
xchg
test
pusha
mov
push
rclb
xchg
or
fs
shr
push
aad
cli
mov
xor
imul
mov
cmpsl
push
xchg
pop
ss
sbb
incb
movsb
arpl
mov
lods
or
add
mov
push
out
repnz
mov
inc
pop
sub
dec
cmp
push
add
js
stos
dec
ds
inc
pusha
imul
loopne
jb
pop
cmp
sub
das
inc
dec
add
loop
call
icebp
das
loopne
xor
sbb
daa
mov
sbb
sub
add
adc
xor
xor
add
jo
add
int3
inc
mov
cld
add
cmp
push
rcr
or
jnp
xor
push
pop
mov
push
mov
rcr
add
mov
xchg
fwait
add
mov
pop
mov
ljmp
mov
add
out
int3
rcrl
mov
aam
stc
pusha
dec
inc
jp
dec
xor
mov
pop
sub
dec
xchg
add
mov
and
lret
push
add
or
add
sbb
pop
adcb
dec
and
pop
mov
loopne
adc
rcrb
jno
fbstp
push
mov
aam
sub
test
mov
sbbb
ret
add
dec
imul
jo
jbe
or
sbb
sub
mov
or
fbstp
cmpsb
add
dec
in
mov
test
pop
dec
fwait
repz
xor
cwtl
mov
int
add
jb
sub
hlt
inc
sbb
dec
test
add
jecxz
lods
cld
dec
jmp
add
pop
shlb
jp
or
push
xchg
negb
mov
ret
aaa
testl
sub
fidivs
mov
dec
dec
or
add
pusha
das
push
push
mov
xor
push
jl
cmp
pop
add
pop
ja
lret
jnp
out
aad
add
fidivrl
mov
cli
add
not
outsb
mov
jne
sbb
cmpsb
mov
add
mov
pop
subb
pop
fcos
and
orb
jge
cld
mov
lret
movsl
pop
add
sbb
push
adc
xlat
das
add
jne
dec
bound
into
inc
add
stos
dec
jmp
pusha
mov
sub
aas
push
xchg
ljmp
in
push
dec
pop
addr16
jle
cmp
sbb
pusha
ret
dec
push
mov
add
lds
pop
fxch
imul
jp
add
jg
add
mov
inc
push
xchg
or
fld
and
imul
xchg
in
jl
sbb
test
push
add
in
idivb
cmp
push
or
pusha
dec
mov
scas
lds
push
mov
clc
add
pop
cmpsl
leave
std
addb
ja
mov
repz
repnz
xor
jo
outsl
push
daa
dec
jns
add
adc
xor
fsubr
xchg
dec
add
mov
xor
mov
dec
add
add
iret
pop
dec
es
and
xchg
inc
mov
dec
cli
add
fdivs
cs
int
pusha
out
loopne
inc
call
repz
daa
mov
mov
stos
les
adc
fnsave
push
dec
scas
in
add
sub
adc
mov
stos
nop
call
adc
mov
popf
cmp
cmp
ljmp
xchg
adc
cmp
movsl
cmc
dec
add
mov
inc
and
cmp
rcll
mov
xor
mov
sub
cmp
mov
mov
int3
add
push
adc
mov
movsb
int
xlat
maxps
fdiv
add
dec
test
into
sub
push
jle
add
add
push
jge
inc
xchg
loopne
mov
push
sub
add
pop
xchg
call
es
xor
movsb
cmc
lock
cwtl
push
lock
adc
inc
pop
mov
in
enter
add
jl
and
and
ds
and
add
or
sub
sbb
test
xchg
inc
and
mov
aam
mov
cmpsl
ret
adc
ret
adc
and
ret
les
and
pushf
cmp
cmp
outsl
add
cltd
jmp
and
mov
pop
js
out
pusha
mov
lods
fsubl
xor
pushf
xlat
rorb
cld
cmp
and
test
orb
jmp
outsl
test
out
nop
into
add
and
int
sahf
cmp
fistpl
jmp
mov
std
or
addb
cmp
push
dec
add
sbb
inc
sub
pop
dec
fnsave
adc
xchg
add
fidivrs
pop
cli
adc
adc
add
pop
cmpsb
inc
adc
mov
in
aam
inc
sbb
sbb
push
add
add
jp
jnp
adc
rolb
jmp
inc
pop
mov
inc
xchg
in
sarl
pusha
pusha
das
add
push
add
rcrb
dec
cmpsl
out
push
and
ret
push
jmp
es
or
inc
movsb
dec
dec
adc
filds
add
push
outsb
test
rcrl
ret
dec
movsl
mov
push
pop
cwtl
push
add
push
mov
jle
push
rcrb
jnp
ret
ljmp
inc
cmp
lock
cld
push
adc
mov
dec
mov
addl
add
aam
push
jp
push
mov
inc
pop
mov
daa
sbb
nop
loop
cmp
outsl
xchg
add
and
and
sbbb
and
xchg
inc
scas
in
inc
sub
lock
jae
mov
and
aam
sbb
sub
jae
ds
inc
daa
or
jne
xor
test
cmp
jp
jl
add
or
inc
push
pop
fimuls
mov
add
ds
mov
push
xchg
or
je
lock
pop
add
in
cmpsb
pop
outsb
pop
inc
sub
cmp
pop
sub
xchg
lods
adc
sbb
rcr
fsub
add
cmpb
dec
movsl
in
mov
pop
mov
and
popf
in
inc
cmpsl
dec
jbe
mov
add
jp
pop
mov
pusha
fstpt
cmp
and
push
enter
repnz
or
stos
adc
outsb
loope
add
loop
push
push
test
pop
sarb
imul
enter
pop
and
or
test
sarb
adc
js
xchg
inc
mov
iret
dec
popa
mov
jle,pn
xchg
popa
push
fwait
js
sbb
inc
nop
or
xchg
rol
sbb
andb
mov
pop
or
or
and
pop
push
sub
cmpsb
dec
add
mov
push
xchg
cld
sbb
xchg
jle
xorb
pop
mov
int3
daa
call
and
jo
in
ficoms
notl
dec
sbb
cs
inc
xchg
sti
or
inc
sbb
xor
sub
loope
and
lods
push
lcall
insb
or
mov
add
stos
add
add
test
add
in
int3
xor
sbb
clc
insl
push
jo
push
adc
add
pop
imul
fbstp
add
xchg
push
fnstcw
jns
sbb
out
cmp
pushf
daa
pusha
add
mov
sbb
jl,pn
dec
add
inc
and
and
add
push
push
pusha
mov
push
pop
sub
adc
scas
mov
dec
jl
rcrb
mov
mov
fmuls
test
mov
push
push
mull
cmc
xchg
or
push
xchg
add
hlt
pop
out
in
aas
xchg
cli
out
into
xor
push
mov
dec
add
in
inc
push
mov
add
lds
fldl
fisubs
mov
fsubl
sbb
pop
and
inc
ja
xchg
mov
ljmp
add
fisubl
or
ret
mov
push
add
shl
repnz
insl
sbb
inc
inc
ret
rclb
or
test
mov
lret
add
xchg
stc
sub
loope
add
inc
mov
sti
add
xor
push
dec
adc
fisttpll
cmp
sub
or
add
jg
add
mov
lds
movntq
test
add
repz
bound
cmp
cwtl
call
add
pop
mov
jnp
add
mov
pop
adc
mov
imul
pop
sbb
jmp
cmp
pop
addr16
add
mov
movb
fistl
pushl
loopne
aam
add
pop
sub
ja
add
adc
cmp
pop
lahf
push
cmp
push
pushf
inc
int
andb
mov
aad
inc
das
out
jns
int
add
stos
push
mov
popl
pop
mov
cmpl
dec
es
hlt
pop
or
adc
add
dec
jne
orl
shr
cmp
sbb
movsl
mov
cmp
pop
pushf
inc
repnz
pushl
hlt
sbb
mov
xlat
cmp
stos
mov
pop
cmpb
mov
dec
and
fadds
cli
loope
dec
xor
mov
bound
stc
or
jbe
movsb
cmp
and
pop
sub
repnz
xor
xchg
mov
dec
pop
pop
add
cld
sbb
push
stos
lcall
mov
inc
and
imul
sub
jp
xor
xchg
xlat
cmp
cmp
mov
clc
rcrl
mov
es
xor
pusha
push
sar
stos
cmpsl
cmp
add
sub
add
fsts
out
xorb
dec
cmpsl
lods
cmp
jl
add
andl
pop
lods
jbe
adc
nop
push
or
divps
mov
outsb
xchg
mov
andb
imul
mov
add
enter
or
xor
sbb
or
cmp
sahf
lret
movsb
fstpt
lock
outsb
lock
add
movsb
lret
push
inc
inc
outsl
rolb
fsubl
movsb
mov
push
lea
movsl
mov
jae
lock
jle,pn
and
dec
push
xor
fdivs
loope
mov
and
sbb
mov
inc
inc
mov
jb
mov
std
add
xor
adc
stos
insb
mov
in
or
sbb
pop
cs
push
pop
add
xor
mov
fsubl
add
jo
aam
or
sub
test
jbe
cmp
cmpl
dec
add
xlat
xchg
pop
adc
fs
sbb
leave
testl
es
inc
pop
or
mov
cmc
outsl
dec
ds
orl
or
mov
push
or
sub
add
inc
fsubrs
addr16
or
clc
push
add
mov
pusha
xchg
and
and
push
add
mov
fnclex
test
daa
lds
sub
lods
in
adc
inc
sub
es
lds
sbb
add
fld
cmp
push
xchg
xchg
sbbb
bound
movsb
aad
and
push
mov
fs
sbb
pop
out
imul
add
les
pop
andb
mov
mov
add
addb
sbb
mov
lock
jne
add
shll
push
adc
xchg
and
andb
or
mov
roll
add
popa
cwtl
inc
dec
sbb
cmp
xor
adc
mov
cmpb
repz
or
bound
mov
adc
je
mov
aas
mov
adc
jl
and
and
or
or
add
add
outsb
lret
dec
scas
les
std
mov
fsubs
inc
push
stc
clc
andl
fbld
cmp
xchg
xorb
movsl
xchg
sarl
or
shlb
aas
jns
adc
add
or
sub
std
mov
sbb
ljmp
js
and
or
mov
dec
xchg
add
outsb
adc
mov
movsb
shlb
lds
dec
notb
push
fs
push
push
sbbb
mov
shl
push
lock
adc
xchg
pop
mov
sub
xchg
and
pop
or
loope
mov
xchg
pop
cmpl
call
outsb
loope
xor
outsb
test
xorl
cmp
pop
add
mov
out
arpl
mov
aad
fmuls
mov
or
icebp
push
mov
or
mov
or
mov
pop
gs
adc
cltd
add
lods
or
out
sub
inc
inc
fmuls
rorl
outsb
loopne
iret
sbb
loopne
add
xchg
cld
test
movsl
mov
shrb
std
add
fildl
fdivrs
xchg
and
add
sbb
pop
adc
push
lret
into
int3
test
push
outsb
dec
jns
jnp
sub
jp
aas
inc
sbbl
xchg
xor
cltd
and
xchg
clc
and
push
jo
adc
sbbb
inc
arpl
icebp
nop
mov
iret
add
xchg
lock
repnz
and
xor
mov
or
add
fs
jo
out
enter
in
data16
fstpt
pusha
inc
push
and
in
jge
mov
dec
or
mov
adc
fstps
pushf
dec
xlat
push
cmp
inc
lock
jmp
fcomp
adc
cld
lea
roll
rorb
filds
xor
xchg
adc
jl
rep
adc
ret
mov
add
arpl
pop
sub
mov
cmc
pop
add
adc
dec
movsb
int
dec
cwtl
fs
or
inc
mov
add
aad
testl
lds
add
mull
add
cmp
sbb
fxtract
repz
add
add
lods
movsl
orb
add
push
pop
je
rclb
mov
add
adc
and
imul
mov
sub
cmp
int3
add
cmp
sub
mov
pop
inc
sbb
dec
mov
mov
push
mov
sbb
stc
or
ret
movb
lahf
cmp
mov
adc
lock
mov
pop
scas
shll
dec
fnstsw
or
xchg
cltd
fldl
mov
testl
mov
outsb
adc
fisttps
outsb
or
insl
andb
jl
mov
pop
pusha
sub
outsl
fsts
sbb
mov
fsubrp
add
mov
rcr
pop
in
lcall
mov
push
adc
sub
push
dec
dec
in
or
push
or
add
mov
int3
and
repz
sbb
lods
mov
mov
and
mov
inc
cmp
aad
add
mov
orb
enter
sub
loopne
filds
inc
addl
cmp
andb
push
adc
pop
or
nop
mov
fimull
dec
pusha
fadd
testl
mov
pop
pushw
push
and
int3
outsb
sbb
pop
xchg
and
loopne
mov
inc
pop
icebp
jne
add
repz
fcmovnbe
lock
cmpsb
pop
test
mov
cmc
in
jle
mov
cmp
inc
push
clc
inc
adcb
add
rcrl
fimull
sti
sub
inc
loope
loop
sarl
sbb
fbld
inc
cmp
fcmovb
pop
pop
push
jns
jecxz
push
xor
std
lods
add
push
in
jbe
rolb
call
pop
cld
add
push
addl
scas
jb
adc
fildl
sub
scas
cmc
add
add
mov
or
jb
enter
or
stc
add
les
cld
cwtl
or
mov
and
rcll
incb
in
lret
xchg
ljmp
add
cwtl
outsl
out
dec
add
rcrb
jnp
cs
mov
clc
fadd
inc
xchg
xchg
nop
orb
sbb
mov
sbb
addr16
dec
fcmovnbe
add
ret
mov
sub
frstor
add
call
or
mov
sub
push
adc
dec
and
cmp
sbb
andb
sbb
or
inc
inc
out
fiaddl
out
cmpb
cmp
jge
lret
jg
nop
in
or
mov
sbb
xor
sahf
pusha
push
in
or
pop
xor
mov
and
cmove
mov
lock
and
adc
add
mov
or
mov
add
sub
mov
mov
adc
jl
push
imul
cmp
fisubl
mov
mov
and
movsl
dec
movsb
cltd
sub
lahf
sbb
call
add
adc
jnp
enter
lock
rol
pusha
pop
or
inc
adc
add
push
rcrb
or
xchg
mov
sbb
push
or
popa
adc
cmpsb
jae
leave
outsl
add
iret
pop
add
fiadds
sub
in
pop
mov
loopne
jno
fadds
pop
mov
addr16
inc
mov
and
cld
or
test
dec
lret
sub
sub
mov
leave
scas
enter
shl
movsl
dec
pop
roll
pop
hlt
pop
leave
mov
sub
lock
fsubrs
faddl
add
idivb
push
fxch
mov
mov
ret
popl
daa
sub
sub
test
xadd
addl
push
push
or
dec
mov
mov
filds
imul
cmp
push
pop
mov
cmp
shlb
and
add
dec
or
jp
dec
mov
mov
aam
push
jno
sub
xor
xchg
int3
lock
rolb
adc
sbb
addr16
in
test
xor
sub
mov
jp
adc
lahf
nop
dec
cmp
and
add
js
fs
mov
ficoml
cs
cmp
xchg
pop
test
je
andb
inc
aaa
jbe
push
dec
fcompl
cmp
jne
cld
add
push
inc
movsl
dec
daa
inc
testb
sbb
nop
jl
add
sbb
cmpb
daa
jbe
inc
or
fisubrs
add
pusha
leave
addb
pop
dec
lock
push
and
sub
aam
in
add
cs
add
xor
shlb
pop
mov
loopne
add
push
jge
jg
sahf
mov
push
cmp
icebp
mov
mov
lock
out
pushw
rcll
sbb
jae
lahf
aas
add
outsl
stc
sbbb
out
mov
stos
add
mov
add
fidivrl
pusha
sub
out
jns
cmp
sbb
mov
fstps
imul
lcall
dec
sbb
and
xorb
inc
sbb
and
popf
or
cmp
add
jecxz
lds
jne
js
push
fdivrp
pop
inc
lret
mov
push
ret
sbb
mov
mov
xor
add
dec
scas
push
nop
sbb
jmp
ror
pop
test
lds
pushf
and
adc
sub
icebp
jl
lret
pushf
mov
iret
cs
xor
or
inc
test
mov
shrb
mov
xchg
pop
sub
xchg
lcall
sub
out
cmp
or
inc
sbb
mov
or
daa
stos
je
jl
push
pusha
pusha
add
jmp
and
loope
cwtl
or
scas
lods
add
fcomi
fldl
sbb
mov
test
cli
sar
sub
sbb
sub
fdivrl
mov
ja
or
mov
loope
rcll
inc
xchg
add
adc
dec
repnz
pop
mov
jo
sub
mulb
add
test
push
jmp
jno
in
adc
cld
das
test
popa
rcrb
stos
adc
loope
fwait
lock
shlb
sbb
add
mov
push
daa
je
xchg
mov
sti
call
stos
test
mov
mov
add
dec
or
fcompl
outsb
cmc
dec
sbb
inc
jmp
lods
popa
sbb
xor
cs
and
es
iret
pop
daa
or
popf
mov
mov
std
mov
or
adc
add
lods
or
mov
and
add
popf
sbb
aad
out
nop
xchg
sbb
mov
mov
xor
call
filds
mov
push
rclb
fiadds
lods
mov
add
jmp
push
ret
push
mov
push
jp
or
and
xorb
cld
gs
imul
xchg
jns
mov
sub
sub
fadds
xor
xchg
loope
icebp
push
addb
push
mov
mov
loop
fiaddl
cli
dec
mov
mov
pop
add
orb
mov
add
jecxz
or
loopne
pop
daa
mov
add
scas
out
pushf
cmp
or
mov
add
sbb
fdivr
pop
ja
add
repnz
xor
cmovbe
mov
scas
popf
xchg
loope
rclb
loopne
stc
mov
inc
shlb
rol
jge
push
cmp
xchg
loope
sub
incl
add
adc
test
fldpi
and
push
jge
add
and
add
xor
call
pushf
in
pop
roll
stc
leave
in
cmp
call
jo
out
push
stos
addr16
cmpsl
jmp
sub
inc
mov
mov
cld
xchg
sahf
daa
scas
xchg
add
popa
pusha
das
inc
jl
pusha
loope
icebp
pop
das
xchg
iret
adc
push
pusha
popa
cmc
sbb
or
enter
or
sub
add
nop/reserved
loop
add
or
lock
movsl
mov
mov
pop
daa
cs
in
into
leave
dec
or
movsl
pop
xchg
hlt
addb
cmp
add
mov
js
dec
jle
xchg
test
xchg
insl
mov
xor
or
sbb
loopne
in
loop
jle
fbstp
test
jno
push
ljmp
cltd
push
js
mov
lahf
xor
jno
ret
push
enter
xchg
push
add
and
xchg
fidivs
lods
cld
xchg
addr16
daa
push
sub
sbb
lods
pop
in
std
mov
and
frndint
out
or
adc
add
ret
orb
lock
xor
add
fbld
push
pop
cmc
imul
cmp
push
add
stc
lods
jmp
jp
xchg
mov
mov
pop
out
push
sub
sub
push
pop
cmp
repnz
push
adc
add
fsubrs
test
cmp
stos
incb
inc
and
enter
fs
mov
fucom
in
sbb
mov
sbb
jle
nop
lahf
xor
xchg
cmp
mov
xchg
mov
movsb
mov
add
mov
leave
dec
in
inc
test
xchg
add
adc
addr16
mov
rcll
je
faddl
xchg
jl
or
add
and
cmp
fisttps
mov
dec
das
mov
pushw
xor
jmp
add
xor
pop
mov
sbb
push
pop
or
sub
jle
adc
cmpsb
aas
sub
pop
push
xchg
call
test
pushf
hlt
adc
add
aam
xlat
lods
repz
xchg
adc
dec
popa
shrb
push
xchg
add
and
lods
mov
add
pusha
je
mov
addr16
adc
sbb
or
mov
dec
dec
push
add
cld
inc
je
lret
push
inc
sbb
sbb
dec
xchg
cmp
add
jbe
add
shl
or
cli
cld
xchg
dec
mov
mov
and
repnz
flds
ret
xor
insl
ret
and
jl
mov
push
dec
lods
cwtl
stos
loope
cmp
hlt
xchg
mov
fdivrs
xchg
scas
ret
add
je
call
call
push
sbb
add
push
sub
or
enter
dec
add
bound
mov
cmp
mov
ljmp
rol
or
xor
mov
xlat
stos
imul
mov
or
lock
outsb
xchg
test
cmp
test
inc
js
xlat
or
or
fwait
xor
push
mov
sbb
es
fidivl
int3
call
test
fstpl
addr16
orl
out
add
cmc
icebp
jp
shl
adc
xchg
sbb
das
movsb
xor
movsb
mov
dec
lock
hlt
pop
mov
mov
subb
int3
mov
rcll
es
jo
jae
add
sarb
add
loope
loopne
js
ffreep
push
es
cmp
call
add
adc
cmp
cmpsl
mov
ds
dec
sbb
arpl
data16
xor
lret
sub
or
int3
inc
and
test
xor
bound
ret
mov
inc
imull
das
mov
add
fs
push
add
adc
inc
jp
add
jns
jns
sbb
cmp
pop
in
enter
mov
sbb
hlt
daa
mov
in
sub
call
xchg
xorb
sub
jecxz
dec
cmpsb
ret
inc
aad
es
je
mov
fisttpl
mov
sarb
sbb
sub
cmpsl
sub
add
sbb
rcrl
cmp
jmp
push
cmp
sbb
mov
mov
loopne
dec
xor
lods
mov
sub
cmp
add
mov
xorb
mov
dec
outsb
xor
pop
cmpl
and
sub
dec
pavgb
test
movsb
jge
push
adc
cmp
pop
loop
add
mov
mov
aam
pushf
mov
testb
adc
jp
loop
repnz
xor
pop
ret
inc
push
es
les
and
jno
andb
or
push
push
inc
nop
sar
or
push
lds
into
sub
dec
mov
out
lods
jmp
gs
jmp
jns
cmp
aas
push
jp
les
push
mov
pop
mov
add
add
mov
mov
popa
inc
or
subb
cld
scas
pop
fcoml
leave
adc
lods
lods
sbb
bound
or
scas
inc
cli
adcl
xchg
orb
inc
add
sub
xor
xchg
testl
adc
cmp
aad
fcmovu
mov
push
fisubs
sub
jnp
dec
lock
int3
mov
adc
jecxz
cmp
movsb
jb
adcb
fsub
ljmp
cwtl
add
mov
or
push
mov
pusha
mov
dec
movsb
push
push
out
and
jno
mov
daa
jge
add
imul
enter
ret
add
mov
gs
filds
leave
incb
or
out
imul
jmp
pushf
xor
lods
es
sbb
push
inc
sub
aas
int3
push
mov
call
filds
inc
xor
jnp
jo
jb
call
pushf
movsl
sub
inc
add
adc
dec
xchg
stos
loop
pop
lods
rolb
cmp
aam
filds
popf
mov
pusha
inc
movsl
add
mov
int
xchg
les
adc
xor
mov
lahf
cmp
add
dec
push
bswap
cltd
add
fchs
icebp
mov
adc
pop
dec
scas
and
bound
sub
add
push
mov
mov
shll
sbb
adc
add
xor
cmp
leave
cltd
hlt
ds
mov
mov
or
mov
add
cmpb
scas
xor
cmp
fmuls
pop
lock
and
dec
sub
pop
add
andl
fsubs
test
add
rol
sub
clc
xor
sub
popa
and
cmp
add
les
das
and
dec
cmp
fimull
push
push
sbb
orb
cmp
cld
add
mov
mov
popa
fisttps
sub
movsb
stc
inc
sbb
pop
es
and
pop
scas
xchg
sbb
addr16
sbb
loopne
enter
scas
sbb
sahf
or
outsb
cmp
enter
or
mov
gs
jns
dec
xor
mov
addr16
add
fwait
inc
add
rolb
stos
adc
mov
add
mov
mov
popf
sahf
add
sub
mov
adc
and
es
jmp
repnz
outsb
cmc
sub
adc
lcall
dec
imul
std
push
push
testl
loop
stc
in
xchg
dec
mov
pop
sbb
pop
inc
inc
subb
rol
dec
xor
filds
in
cltd
push
xlat
pop
divb
lods
roll
je
xor
jbe
xchg
adc
push
pop
dec
dec
and
out
xor
enter
fwait
xor
jns
pop
xor
dec
sbbb
jns
sub
sub
adc
mov
das
pop
mov
mov
add
pushf
mov
add
push
mov
add
and
add
jno
pop
xorb
add
xor
jnp
sar
add
pop
or
insl
add
out
mov
push
inc
push
add
sbb
bound
xor
add
sub
fmul
inc
popf
pop
add
jecxz
lahf
add
dec
fidivrl
mov
cmp
push
fisttpl
or
lock
push
pop
faddl
test
and
sbb
lea
jmp
inc
test
cmp
sbb
jecxz
pop
mov
add
mov
bound
inc
xchg
pusha
jnp
sbb
or
xlat
lret
cmp
loope
les
fimull
fldenv
cs
mov
sbb
pop
fwait
mov
and
scas
adc
or
mov
cmpl
add
lock
insb
shll
or
addr16
mov
jae
sub
nop
stos
xor
mov
ret
popf
xor
outsb
cmp
and
and
jno
push
cli
and
add
xchg
ret
pop
pop
sub
jo
and
shlb
sub
enter
jmp
add
lods
or
adc
inc
notb
fnstcw
pop
in
xchg
lods
nop
xchg
std
mov
clc
cmp
and
in
dec
movsb
and
jne
push
adc
negl
loopne
pusha
inc
dec
jns
add
aas
xchg
inc
mov
xchg
fisttps
push
xor
xor
xchg
sub
cmp
xor
cltd
pop
add
mov
sti
subb
sar
mov
push
add
icebp
leave
mov
fldcw
aaa
add
adc
pop
mov
add
lods
mov
pop
fnstsw
movsb
imul
pop
mov
outsb
rol
xlat
stos
sub
add
fisubrs
lret
stos
push
test
inc
fldl
xchg
out
call
or
inc
popf
xchg
and
js
mov
push
lock
cmc
popa
add
mov
mov
sarl
call
mov
and
mov
cmp
xor
sahf
subl
rcll
mov
mov
push
push
mov
pusha
jmp
mov
add
shrb
jbe
add
or
cmp
int3
mov
xlat
icebp
les
jne
or
lods
cwtl
sub
pop
ret
push
xor
sbb
push
push
xchg
hlt
jno
add
pop
sub
movsl
movl
xchg
cmp
mov
and
adc
sub
or
xor
xchg
mov
pop
enter
cmp
mov
xchg
das
loopne
adc
inc
dec
inc
daa
lods
push
mov
or
ljmp
mov
and
adc
mov
scas
xor
push
mov
mov
adc
movl
xchg
xchg
sbb
outsl
rcrl
mov
mov
test
inc
inc
or
incl
daa
idivb
lock
mov
push
add
loop
fsubs
inc
push
hlt
lcall
orl
pusha
jnp
inc
dec
dec
inc
cld
insb
add
add
xchg
pop
testb
cmp
pop
xlat
int3
mov
inc
inc
aad
loope
push
adc
cwtl
ret
xchg
mov
mov
stc
cld
repz
mov
ss
inc
ret
jle
add
mov
sbb
out
loope
outsb
int3
leave
adc
mov
jb
fwait
push
rclb
xchg
add
fstpl
add
aas
push
jb
or
inc
mov
cmp
adc
movsb
loope
or
cld
push
lea
aas
jo
pop
cmp
xchg
jge
movsl
clc
cmpb
add
repz
xchg
sub
aaa
mov
jno
popa
shlb
add
inc
aaa
add
cld
pmullw
and
push
or
in
or
or
mov
movups
cmpsl
or
or
xor
add
nop
adc
push
imul
pop
enter
pop
or
nop
decb
add
mov
js
aaa
movsl
aad
loopne
mov
aas
shll
stos
or
and
mov
xchg
sbb
in
pop
stc
add
mov
fistpll
shlb
ret
loopne
push
add
int3
push
add
inc
bound
lret
add
psubb
aam
popl
sbb
add
int
fildll
and
dec
and
add
mov
push
ror
add
roll
in
mov
push
inc
or
int3
pop
dec
or
shlb
mov
repnz
sbb
out
repz
scas
stos
sbb
inc
pushf
pop
mov
sbb
add
xchg
outsb
adc
mov
stc
cmp
int3
xor
push
add
lahf
lock
xchg
inc
add
push
pop
divl
add
add
xchg
icebp
mov
dec
jmp
rolb
sbb
loop
inc
test
adc
sub
or
fiadds
adc
add
cli
push
popf
outsb
xchg
test
je
add
addr16
mov
jns
xor
sahf
cmp
mov
adc
sbb
inc
sbb
adc
push
mov
pop
xchg
mov
sarb
lock
add
pusha
push
addb
and
xor
nop
push
imul
das
icebp
test
shrl
xor
movb
inc
addb
pusha
fildl
inc
sbb
sbb
pop
xor
and
rcrb
and
ljmp
pop
add
cmp
add
shll
or
sub
sbb
mov
lock
jns
andb
dec
mov
and
fstpt
ljmp
in
jb
ss
add
filds
jne
cmc
dec
pusha
cmp
adc
sbb
fbld
lods
adc
gs
cltd
and
mov
add
shrb
repnz
pushf
mov
andb
out
inc
add
shrl
fiadds
and
adc
int3
pop
xor
jg
mov
add
push
lock
aad
pop
in
loopne
xor
test
enter
sbb
and
aam
push
sub
inc
and
dec
pop
movsl
mov
push
add
cmp
jp
sbbb
and
inc
pop
outsb
stos
push
mov
pusha
pop
xor
adcl
dec
push
add
addb
movsb
pop
sub
xchg
sbb
sbb
xchg
push
adc
or
lcall
dec
and
push
adc
mov
push
test
add
mov
adc
sub
aas
mov
push
add
and
not
leave
test
pop
cld
xchg
lds
cmp
inc
mov
adcb
sahf
in
fstpt
and
int3
enter
add
addl
and
add
nop
xchg
daa
sbb
mov
rcl
into
push
repz
jecxz
bound
add
xchg
shlb
fdiv
call
adcl
shrl
inc
sbb
mov
enter
sub
mov
jl,pt
orl
int
pop
nop
les
out
jbe
insb
ficoms
or
and
jg
add
stos
mov
movsb
xor
lahf
adc
repnz
xor
or
xchg
xchg
dec
jp
and
sbb
loope
pushf
mov
fsubrl
insl
inc
cmpsl
js
add
test
xor
adc
popa
add
out
and
imul
loop
gs
addb
or
loopne
xor
jge
and
mov
clc
fcomi
dec
movsb
nop
xchg
test
sbb
aad
xchg
push
sarl
jecxz
adc
add
push
iret
adc
popa
sub
xchg
cli
inc
or
fidivl
dec
or
dec
mov
orl
adc
push
je
shll
push
xchg
pop
inc
mov
ficoml
adc
push
mov
imul
call
dec
and
sbb
jno
add
inc
lods
add
bound
mov
push
fistpll
pop
add
or
mov
in
mov
add
std
push
int3
dec
in
nop
orb
push
xor
and
xor
sti
xchg
sbb
pop
test
and
sub
or
sbbl
sbb
fmull
in
int
cs
stc
sbb
adc
fnstsw
loop
add
pop
in
and
pop
inc
fdivl
das
add
mov
shll
mov
pusha
cmp
jp
dec
out
mov
les
les
dec
test
mov
addr16
xchg
stos
or
mov
out
into
dec
dec
clc
mov
mov
call
aaa
dec
add
mov
jge
and
ljmp
adc
lret
lods
add
incl
lret
subl
dec
dec
sbb
adc
jne
movsl
rolb
stc
xchg
pushf
fisubl
cwtl
fdivs
fucomi
popa
ja
add
or
callw
mov
push
sbb
xchg
add
jo
jge
xchg
pusha
fnsetpm(287
in
mov
inc
jg
call
es
adc
aad
insb
xor
sbb
int
adc
mov
data16
sbb
adc
add
fcompl
pop
enter
mov
test
mull
dec
xor
xchg
divb
xor
and
cmpb
sub
rolb
and
adc
mov
inc
mov
xchg
sbb
stos
cld
movsb
sub
mov
leave
xor
pusha
shrb
adc
rorl
mov
test
enter
rcrl
data16
or
mov
mov
arpl
add
dec
sbb
xchg
add
mov
data16
fs
inc
in
arpl
mov
or
jns
mov
dec
or
hlt
adc
incl
adc
xchg
jb
cld
xchg
add
add
add
pop
idivb
sbb
cs
push
out
pushf
shlb
adc
xchg
roll
xor
adc
addr16
int
cs
xchg
adc
jo
mov
pop
jbe
pandn
fisttpl
arpl
sbb
mov
jg
popa
call
sub
adc
roll
add
sub
inc
ds
xlat
and
subl
pop
fdivs
sbb
push
clc
lea
call
lock
cli
pop
xchg
daa
xor
aam
pop
pop
inc
sbb
icebp
adc
loop
push
mov
and
or
push
add
mov
pop
sbb
push
sub
add
sub
mov
sub
repz
mov
push
mov
fwait
mov
fs
mov
dec
in
loop
push
sbb
sarb
rolb
adc
mov
pop
lcall
rep
pusha
xchg
cvtdq2ps
xlat
popl
mov
or
xor
insl
add
push
das
jo
hlt
pop
in
and
andl
pop
and
cmp
push
add
adc
push
sbb
add
enter
sbb
stos
icebp
mull
subl
ds
jecxz
ret
adc
add
mov
enter
mov
test
dec
push
add
jno
fcoml
pusha
dec
and
stos
fnstcw
push
cmp
jmp
mov
daa
mov
daa
add
shl
jmp
pop
lock
in
call
cwtl
xchg
data16
lock
jp
or
daa
or
add
add
and
int3
bound
pop
and
sbb
loope
jmp
sub
push
repnz
out
jmp
and
stos
loopne
sub
dec
mov
sbb
adc
popf
inc
pop
les
sbb
pop
xor
roll
add
mov
xor
mov
aam
cmp
addb
pop
adc
push
adc
imul
adc
dec
inc
sub
out
pushf
pop
orb
das
sub
out
push
jg
dec
shll
jg
lods
clc
loopne
dec
and
add
sbb
loop
sarb
xor
and
int
add
sub
jmp
aas
cli
flds
divb
jne
pop
cld
popf
rorb
data16
fs
inc
stos
push
pop
mov
push
add
lret
mov
mov
mov
mov
pop
lret
adc
push
orb
xchg
movsb
test
fists
lahf
sbb
or
and
adc
in
cmp
clc
rorb
jb
call
sub
rorb
add
lods
ficomps
push
pop
ja
dec
mov
enter
loop
data16
adc
adc
rorl
add
nop
out
leave
sbb
add
jmp
std
or
daa
ret
mov
add
sahf
nop
sub
test
xchg
gs
add
mov
jno
jbe
adc
xchg
mov
add
shrb
loope
jecxz
test
add
sahf
in
xlat
fistpl
in
and
pop
orl
sbb
je
jg
in
fisubrl
pop
or
loopne
add
inc
mov
lret
ret
sub
and
loope
mov
inc
xor
or
adc
mov
push
xchg
addr16
inc
pop
inc
push
pop
in
push
enter
xchg
or
mov
fiaddl
sbb
or
fistpl
mov
out
mov
das
pop
sbb
push
addb
out
sbb
iret
je
pushf
nop
push
shlb
mov
in
shrb
daa
add
or
mov
fs
and
bound
and
add
inc
clc
cmpsl
or
int3
repz
inc
mov
add
cltd
sbb
xor
mov
xchg
add
sbb
rclb
int3
sub
or
clc
loop
lock
mov
sub
dec
jecxz
push
xor
jge
add
add
xlat
fiaddl
push
sub
cmp
cwtl
add
sub
sbb
push
arpl
pushf
pushf
cmpb
xchg
pushf
add
pop
jmp
arpl
xor
sbb
dec
ret
addl
ljmp
mov
imul
add
fstpl
pop
xchg
pop
mov
dec
push
or
xor
pop
in
pop
mov
sbb
push
jmp
cltd
adc
xchg
test
and
adcb
cltd
hlt
sbb
movsl
rcrl
add
jg
mov
sub
test
sahf
or
ret
push
xor
xchg
movsl
add
adc
popf
cld
and
shlb
sub
fcmovnb
inc
pop
pop
scas
loope
hlt
and
popa
and
es
lock
out
inc
sub
js
xlat
jno
dec
mov
mov
xchg
sub
mov
mov
add
pop
mov
pop
lea
pop
and
int3
test
or
lahf
sbb
in
cmpsl
insb
or
xlat
sub
lock
pop
xchg
adc
lahf
adc
int
cld
sbb
push
cmp
dec
jp
adc
mov
xchg
pop
pusha
sub
scas
cltd
repnz
and
fistpll
aam
push
cmpsb
cmp
pop
aas
inc
lea
xchg
and
or
dec
and
call
loope
cwtl
add
pop
lock
lret
push
into
subl
les
mov
pop
jmp
pop
xor
arpl
cmp
shrb
or
addr16
fsts
mov
out
jmp
data16
sahf
pop
cmp
add
mov
ja
push
loope
dec
subl
and
add
fs
add
cmp
leave
mov
jbe
or
scas
fstps
cwtl
insl
or
pop
inc
and
fldenv
push
jns
add
lds
stos
or
movsb
pop
insl
aam
cmpsb
fstps
loop
add
pop
sahf
add
dec
mov
fmuls
sub
clc
iret
add
jae
out
pop
test
cmp
popa
and
movsb
adc
jmp
pop
sbb
xor
push
in
xor
in
pusha
rep
fisttpl
hlt
adcl
xchg
mov
repnz
enterw
push
xor
ja
and
inc
sub
add
test
lods
lods
pop
sahf
cwtl
fnsave
pop
push
cmpsb
fbstp
push
extrq
jns
add
sub
push
mov
inc
cmp
dec
jbe
xor
nop
xchg
xor
sbb
pop
xchg
daa
sbb
popl
sbb
adc
addr16
popf
or
pop
adc
jl
in
jne
dec
adc
pushf
dec
dec
ficomps
pop
xor
dec
fisubl
adc
sbb
fbstp
mov
sub
pusha
adc
add
mov
mov
nop
jno
pop
pop
call
cmp
lahf
in
xor
out
or
loope
pop
call
xlat
leave
pop
mov
js
out
sub
xchg
fisubrl
pusha
enter
adc
mov
mov
shlb
sub
mov
add
sub
test
sbb
and
add
mov
int3
dec
jl
mov
loopne
fcoml
movsb
cmp
xchg
sub
nop
pop
cs
and
lock
mov
in
xor
stc
add
cmpl
clc
or
cli
add
or
cwtl
mov
adc
xchg
sbb
pop
adc
dec
adcb
mov
push
mov
enter
mov
push
enter
mov
dec
or
add
rclb
clc
sbb
inc
jge
mov
ficomps
dec
add
pop
pop
xor
push
stc
and
push
clc
inc
mov
and
xchg
mov
inc
xor
outsb
scas
add
mov
jecxz
leave
cmp
mov
jns
cwtl
dec
add
fsubr
jp
cld
sbb
mov
inc
movl
mov
sub
push
sbb
ljmp
pop
rcrl
or
js
add
jbe
inc
js
or
xchg
jmp
mov
js
sub
inc
call
adc
push
shl
nop
add
adc
int3
adc
aam
jbe
sub
mov
sbb
push
sub
shlb
xlat
pop
cld
lahf
mov
add
inc
xor
jp
xchg
mov
mov
cmp
popf
mov
sbb
shll
dec
pop
and
nop
movsb
add
add
cmp
mov
and
xor
clc
mov
ljmp
mov
loop
xchg
xchg
sbb
push
bound
and
jmp
pop
in
pusha
mov
nop
add
repnz
sub
in
inc
add
mov
loope
adc
xchg
imul
jno
hlt
pop
out
jmp
dec
or
movsl
fsubs
cmp
lods
mov
xchg
push
into
sbb
jl
adc
inc
dec
hlt
add
and
push
bound
jns
dec
lret
pop
scas
xor
pop
push
mov
mov
arpl
in
add
mov
sbb
adc
add
jle
je
xorl
movsl
inc
sbb
sub
add
outsl
dec
mov
addr16
rclb
cmp
xchg
xchg
sub
dec
or
rcr
loope
ljmp
loop
and
sbb
test
ret
sbb
adc
roll
push
and
sti
ret
mov
out
adc
add
pop
stos
inc
fsqrt
add
mov
jne
add
gs
lea
loopne
and
jae
xorb
jecxz
jne
xchg
addb
in
pop
enter
and
and
adc
jnp
leave
sub
pushl
pop
adc
inc
ret
add
mov
test
sar
aas
and
les
addr16
jp
popf
sbb
add
in
lahf
jo
jns
push
frstor
outsl
mov
cmp
fcompl
nop
insb
and
call
lahf
jmp
add
dec
mov
in
cwtl
insb
add
inc
lock
jecxz
fwait
in
dec
push
jmp
dec
push
add
int3
mov
enter
adcb
out
addr16
sub
test
ret
pop
xor
pop
icebp
cld
add
leave
sub
sahf
test
mov
aad
mov
push
adc
jmp
push
leave
shrb
jl
sbb
loope
shl
testb
mov
fstps
out
stc
sbb
pop
mov
mov
inc
cwtl
sub
or
ss
jo
bound
in
adc
xorb
push
and
arpl
mov
es
mov
cs
mov
xchg
push
lret
out
loopne
sub
dec
addr16
push
pop
cmp
popf
fldt
pusha
xchg
sbb
les
mov
inc
add
mov
jg
sub
or
outsb
inc
mov
les
mov
inc
cmp
sub
dec
dec
cld
mov
adc
fistps
data16
xor
dec
inc
xlat
pusha
cs
jmp
and
ret
push
sub
add
jae
out
xchg
imul
sbbb
movl
and
pop
adc
add
orb
push
lock
adc
hlt
mov
xor
xlat
push
and
es
test
outsl
icebp
push
mov
neg
test
lods
push
shll
cmp
dec
dec
in
shlb
cwtl
es
lods
mov
clc
or
add
fcoml
mov
loopne
mov
add
jns
jle
sub
adc
push
xchg
push
imul
push
addb
lcall
or
push
mov
mov
jl
adc
xor
rolb
cmpsb
rol
jle
mov
test
lret
add
rcll
add
add
mov
das
gs
in
pusha
add
cwtl
xchg
or
dec
mov
daa
rclb
test
fbld
adc
adc
push
rorb
shl
cli
dec
jns
push
mov
insb
es
sub
loop
repnz
xor
addb
sub
adc
jne
push
fmull
adc
mov
fs
sub
xchg
add
test
bound
int3
and
add
scas
mov
dec
sbb
mov
and
mov
or
clc
movsb
adc
mov
shlb
faddl
xor
je
ds
ljmp
adcb
in
and
add
xchg
pop
in
sbb
pop
mov
dec
sbb
sub
push
or
rolb
sahf
add
out
push
dec
pop
ror
test
addb
push
fldcw
aad
in
and
call
mov
data16
mov
rolb
sbb
sbb
mov
adc
sub
dec
push
ljmp
ja
add
jbe
daa
fiadds
pusha
out
lret
enter
lds
mov
fstpt
je
mov
xor
loopne
ror
movsl
push
ds
loopne
ret
sbb
aas
add
jae
xchg
loopnew
mov
jnp
dec
sbb
pop
jmp
rolb
fsub
lahf
gs
push
pusha
cmp
push
or
lock
pop
cwtl
cld
aam
adc
movsb
inc
adc
mov
mov
cltd
incl
lahf
test
and
add
sub
mov
lock
mov
jb
pop
xchg
outsb
push
sub
test
mov
dec
adc
mov
pop
cmc
in
insb
push
jp
push
insl
xor
fstpl
mov
and
and
lret
fnstenv
mov
lods
sbb
mov
pop
mov
shl
les
test
or
fstl
mov
cmp
dec
into
orb
out
pop
imul
inc
xchg
pop
mov
push
pop
jb
pop
dec
es
mov
or
rorb
xor
cmp
fsubl
push
sarl
addl
adc
je
and
in
jbe
dec
repnz
pop
inc
fidivs
hlt
in
test
inc
or
cmp
nop
faddl
or
ret
dec
inc
mov
insb
cwtl
pop
insb
adc
adc
imul
mov
adc
cmp
lret
insb
enter
cltd
fwait
mov
rorb
push
inc
push
stos
push
mov
shlb
push
loop
nop
nop
add
push
js
fstpt
mov
pop
adc
rclb
inc
sbb
lods
and
push
mov
scas
cmc
lods
je
js
inc
or
shll
cmp
jae
pop
ljmp
jns
sbb
mov
clc
mov
in
add
or
xchg
xor
fidivl
orb
incl
jl
add
jp
sbb
push
xor
dec
iret
xchg
add
rolb
mov
pop
pop
mov
adcl
cbtw
shlb
in
pop
mov
push
and
pop
jno
loopne
mov
pop
add
sbb
popf
hlt
push
enter
add
jg
push
or
leave
mov
into
pop
inc
add
hlt
aad
stc
je
dec
ror
lret
sbb
sub
mov
mov
cmp
int
add
push
push
cmp
sub
mov
add
xchg
and
pop
fldenv
push
add
adc
ret
sub
adc
mov
fidivs
lahf
outsb
ss
cmp
dec
add
lret
sbb
add
push
dec
filds
jbe
scas
xchg
inc
lock
sbb
call
push
adc
fmull
add
sbb
add
out
mov
jnp
clc
adc
movsl
mov
popa
jo
mov
adc
stc
sbb
in
inc
int3
popa
mov
fistpll
adcb
push
mov
or
pop
ret
inc
xchg
popf
add
ds
add
add
sbb
std
mov
mov
dec
inc
xchg
roll
push
inc
adc
jae
stos
sub
scas
test
xor
insl
xor
stos
cs
mov
scas
test
add
lock
test
out
lods
push
and
mov
lret
inc
roll
jecxz
addr16
cli
cmp
fucompp
in
iret
add
or
rolb
int3
mov
data16
nop
add
js
xor
sbb
fcomi
mov
xor
inc
js
add
lahf
es
add
jg
clc
mov
call
je
cltd
sub
dec
jnp
add
psubusb
outsl
daa
or
inc
cmp
orl
pop
enter
hlt
sbb
push
cmp
sub
pop
jg
adc
pandn
scas
pop
pop
and
lock
jne
add
jecxz
in
push
push
mov
stc
lods
pop
jl
sbb
mov
aad
jle
push
inc
mov
dec
mov
je
repz
pop
iret
dec
inc
or
xchg
add
jl
mov
lahf
testb
inc
or
lldt
mov
jg
aam
pop
sbb
add
rolb
inc
sub
cmp
fs
mov
cli
mov
mov
pop
xor
add
jp
pop
dec
xor
fsts
add
repnz
add
or
lock
and
mov
shrl
adc
adc
mov
decl
adc
mov
popa
pop
push
dec
fadds
and
pop
pop
jp
adc
add
in
insb
int
and
out
fcompl
add
jb
loop
adc
scas
je
mov
jp
dec
inc
add
lcall
push
mov
xor
test
add
adc
push
cmp
mov
pop
dec
inc
into
lahf
rolb
ja
push
push
add
adc
sub
adc
add
mov
dec
jle
push
xchg
mov
adc
sub
jo
addr16
dec
addb
cmp
or
add
lahf
inc
and
push
add
xchg
xor
dec
cli
js
mov
sbb
lcall
sbbb
lea
sub
les
add
test
sbb
mov
inc
lret
push
ficomps
xor
ja
jnp
push
cmp
add
cmp
dec
push
incb
out
mov
and
xor
sbb
cmpsl
xchg
mov
je
xchg
or
gs
movsl
shlb
jae
add
pop
xchg
jb
mov
sarl
add
add
xor
or
push
dec
and
and
jmp
ret
loope
and
jle
sub
cltd
fbstp
jno
fadds
repz
dec
pop
fisubl
pop
pop
mov
push
mov
mov
mov
test
clc
dec
arpl
shrl
lret
shlb
into
add
std
or
or
cmp
or
cmp
push
imul
fs
loop
lahf
cmp
insl
mov
dec
lods
adc
fstpt
js
add
xchg
and
js
sbb
mov
push
mov
xchg
pop
xor
imul
mov
ja
out
dec
call
fdivrp
sbb
add
aad
xor
adc
push
flds
stos
mov
pop
cld
add
lea
lret
jno
dec
mulb
stos
mov
pop
adc
pop
add
aad
loopne
mov
cmpsb
in
or
inc
cmp
fistl
mov
inc
lret
add
cwtl
cmp
inc
shrl
sbb
add
aas
shlb
mov
sub
mov
icebp
lods
loope
jno
add
xchg
sub
out
xchg
fildl
scas
inc
enter
add
push
push
cltd
lcall
mov
xchg
add
out
fnstenv
test
add
rolb
add
stc
add
dec
sub
mov
aaa
pop
enter
cltd
mov
push
adc
iret
and
outsb
stos
add
adc
push
shll
mov
adc
inc
push
sub
repnz
aad
clc
dec
add
sub
pop
shrl
mov
mov
movsb
clc
cmp
push
xor
pusha
jo
test
add
mov
in
mov
inc
int3
inc
inc
add
lea
out
in
shl
lods
push
enter
cs
lret
sub
mov
add
mov
iret
add
jle
jecxz
daa
adc
inc
fadd
movsl
mov
sti
add
add
icebp
add
pop
and
mov
mov
in
ror
hlt
mov
jo
add
test
sub
cmpsb
pop
add
into
cmp
iret
xlat
and
add
mov
jne
push
fidivrs
test
ja
aaa
add
mov
leave
add
jle
dec
mov
scas
clc
enter
jp
add
or
add
xor
aas
cwtl
push
sbb
jae
jb
xchg
or
add
enter
cmp
orb
and
push
dec
add
repnz
add
test
add
sarl
lock
jno
add
int
loope
push
out
sbb
aad
rcll
mov
mov
jle
dec
sub
push
mov
mov
jle
cld
sti
push
lea
xor
push
or
shll
lods
in
negb
addr16
sbb
in
add
cmc
mov
add
inc
cmp
lcall
jno
fsubrl
add
cmpsl
add
jge
jp
daa
insb
add
mov
or
out
jns
mov
push
bound
out
and
cmp
jmp
mov
cmp
or
cld
mov
add
aam
jmp
std
add
scas
mov
xchg
in
jmp
pushf
xor
cli
push
test
lret
and
adc
mov
mov
std
pushf
jmp
push
cmp
adc
sbb
popa
aam
inc
xor
test
add
dec
clc
xchg
rorb
add
sub
add
mov
mov
fstpt
inc
mov
in
js
ja
push
add
pop
pop
cmp
mov
mov
rcr
mov
sbb
lds
nop
loopne
enter
cli
push
add
les
add
int
lds
cwtl
sub
cmp
mov
xor
invlpg
jae
dec
stos
xchg
and
mov
add
clc
out
in
fstl
jl
aaa
dec
xor
loop
adc
rolb
das
xor
xchg
je
cmp
push
out
call
add
cs
rcr
cmp
fisubs
js
call
xchg
js
pop
add
outsl
pusha
sub
flds
inc
in
testl
popf
mulb
adc
add
mov
fisttps
sbb
cli
cmp
mov
stos
adc
mov
add
sahf
out
inc
xchg
jae
das
jo
fists
call
dec
es
imul
int
icebp
add
mov
mov
push
mov
sbbb
inc
cmpsl
add
test
push
xchg
movsl
pop
or
lret
and
lds
bound
pop
aaa
add
cmpb
hlt
daa
cmpsl
test
lock
mov
add
jmp
ret
mov
subb
sbb
pop
inc
loopne
add
movsb
or
cli
sarb
and
lret
add
mov
fnstenv
add
outsb
pop
jmp
xor
dec
subb
or
mov
mov
hlt
add
movb
and
pop
sub
mov
aas
faddl
jle
jns
add
stos
sahf
aad
es
shl
dec
push
xchg
xor
mov
or
imul
icebp
mov
add
in
pop
enter
rcll
pop
iret
pusha
xchg
test
cs
je
jmp
gs
bound
into
lahf
nop
fiadds
cmc
jb
fstps
jno
xchg
in
mov
scas
push
fcoml
pop
mov
cltd
mov
mov
mov
inc
packsswb
es
sub
mov
or
inc
mov
sub
add
mov
add
adc
add
jae
mov
xor
pusha
pop
sub
lret
popf
xor
xor
sbb
outsb
push
shlb
lret
add
aad
cmp
fdivrs
sub
rcll
sti
xchg
negl
mov
or
add
call
xchg
fsubs
insb
jg
setp
push
dec
mov
dec
push
mov
pop
daa
js
std
adc
adc
pop
inc
cwtl
and
add
leave
pop
mov
imul
add
sbb
clc
push
add
push
std
jmp
dec
cmpsb
scas
jle,pt
mov
inc
pusha
dec
ret
jbe
inc
add
pop
and
sar
push
loope
xchg
add
mov
jl
add
inc
js
pusha
nop
fidivrs
adc
add
pop
les
cmp
andl
je
lods
cmp
mov
push
add
mov
adc
leave
jae
mov
pop
inc
add
in
mov
push
push
jl
sbb
xchg
insb
lcall
xchg
xor
push
enter
insl
sbb
jmp
jo
mov
loop
jp
or
cmp
addl
xor
xor
test
push
xchg
adc
and
aas
add
lcall
mov
sub
inc
jp,pt
jecxz
pusha
add
and
clc
jne
xchg
inc
shl
ret
lret
subl
fildl
fcmovbe
bswap
rol
fadds
dec
xchg
mov
fs
and
sbb
repz
xchg
mov
xor
adc
add
sub
inc
mov
repz
ret
lea
sarl
cmp
add
xor
arpl
jle
add
imul
dec
ljmp
jmp
adc
inc
je
rcrb
mov
mov
sti
jmp
daa
iret
adc
rcrl
add
enter
shl
add
jbe
dec
rsm
or
mov
in
loopne
sbb
jae
xchg
out
dec
movb
or
hlt
shlb
mov
adc
mov
dec
mov
imul
int3
and
aas
sbb
sub
add
dec
icebp
test
pop
shr
rclb
ret
xor
mov
sub
cs
mov
imul
pop
lds
repz
or
sub
aad
push
fildll
pop
push
xchg
out
adc
stc
lahf
pop
pop
dec
mov
aas
icebp
das
mov
mov
stc
xchg
sub
add
in
add
loop
icebp
mov
rolb
aad
and
pop
repz
xor
adc
jle
int
hlt
scas
push
push
orl
adc
lahf
pop
mov
int
test
cmp
sub
pushf
sbb
or
in
fisttpl
nop
push
jb
fdivrl
add
movsl
cmp
inc
pusha
push
pop
data16
mov
xlat
jnp
mov
lock
scas
loop
inc
jmp
pop
adc
add
cs
mov
sbb
in
fists
std
movsl
push
insl
push
xchg
and
push
cmp
mov
mov
xor
xchg
loop
ud2
adc
add
or
lock
xchg
sbb
add
aas
dec
jecxz
dec
aam
imul
sbb
add
mov
pusha
out
jg
xorb
adc
add
adc
push
les
and
adc
ljmp
dec
mov
cmp
imul
and
mov
sbb
cmp
rcrl
jo
mov
push
sbb
adc
dec
sbb
push
daa
repnz
in
in
les
lods
mov
jge
subl
pop
arpl
sbb
mov
mov
insl
inc
mov
push
test
repz
or
sbb
and
cmpsb
les
cmp
xor
or
cwtl
add
and
fidivrl
aaa
or
xor
mov
in
mov
adc
or
push
cmp
push
hlt
clc
repz
xor
por
inc
daa
clc
jns
cmp
cmp
and
xor
add
and
in
push
out
and
sti
inc
aad
add
ficoms
mov
jbe
test
mov
ja
mov
adc
add
dec
dec
add
std
cld
add
das
test
cmp
outsl
or
popf
test
adc
stos
dec
jnp
jns
arpl
das
popa
adc
loopne
lahf
push
and
lret
test
aam
dec
dec
sbb
cmpb
pusha
popf
roll
fisttpll
xchg
mov
mov
fnstenv
jp
add
pop
xchg
mov
inc
add
xchg
imul
jno
out
stc
add
dec
mov
add
iret
dec
inc
and
pop
pop
cli
popa
mov
push
lods
insb
push
fs
mov
mov
fs
adcb
fidivrs
les
mov
and
fldl
and
mov
rcr
rol
repnz
sbb
or
ja
mov
ljmp
in
les
int3
mov
cmp
hlt
enter
fstl
add
sbb
ss
xor
pop
mov
add
or
add
jge
push
fucomi
out
shlb
adc
les
addr16
fisubs
jle
add
dec
out
or
jecxz
sbbl
les
adc
mov
pop
clc
pusha
xchg
push
mov
movsb
cmp
int3
add
or
lock
cmpsb
lret
roll
jp
xor
sahf
pop
sbb
loope
pop
xchg
adc
cmp
enter
pusha
imul
pop
pop
nop
push
mov
stc
movsb
iret
sub
xchg
in
in
bound
sub
dec
cmp
mov
sbb
add
mov
push
pusha
mov
stos
add
sub
add
shrb
lock
enter
pop
cld
movsl
pop
hlt
xchg
inc
mov
filds
xor
call
adc
xchg
or
add
dec
or
jo
sbb
hlt
sub
mov
repnz
xchg
push
pop
xor
or
add
out
or
pushl
fsubs
inc
and
jmp
or
mov
js
push
cmp
mov
or
out
jbe
add
mov
cmpsl
push
or
and
ljmp
popl
stos
hlt
jmp
ficompl
icebp
cmpsb
iret
xchg
fisttpl
test
arpl
insb
cmp
sbb
or
leave
test
add
push
jo
sub
pusha
inc
cwtl
sub
add
shlb
in
or
shrb
jl
pop
shlb
add
nop
fcomi
or
push
or
popa
out
or
or
cwtl
fidivs
pop
popf
aas
rorb
pusha
popf
jl
mov
loope
rcrb
in
adc
mov
imul
fmul
or
sbb
mov
push
popl
add
dec
mov
adc
pusha
inc
mulps
and
dec
pop
pop
outsl
jb
push
inc
adc
dec
push
add
mov
push
loope
adcl
or
or
popf
adc
sub
popf
test
jmp
into
mov
lock
popf
inc
xor
inc
cmpb
push
lea
dec
js
or
imul
adc
push
popf
add
pop
sbb
adc
mov
fs
add
add
push
inc
shl
or
dec
ds
xchg
mov
rcrl
add
mov
adc
mov
sbb
add
scas
lret
ret
dec
adc
fs
dec
orb
xor
or
inc
mov
insb
fildll
mov
stos
adc
lret
jne
mov
pop
out
adc
cmp
and
mov
mov
int
or
and
or
ljmp
int3
add
adc
lea
xor
hlt
adc
push
xor
jmp
sub
or
pop
fucomip
cmp
add
sbb
xchg
push
cld
subb
rcl
adc
in
mov
aad
rolb
push
les
sbb
and
adc
sub
mov
out
je
or
loopne
pop
add
sti
push
mov
dec
pop
sub
sub
fmul
pop
addr16
clc
push
cli
ds
out
cld
sahf
shll
outsb
adc
inc
js
in
sbb
cmc
subl
subb
es
popa
pop
adc
xorl
push
or
and
ljmp
sbb
insl
mov
pop
movsb
test
lgs
inc
xor
sbb
or
aaa
imul
lds
clc
xchg
xchg
dec
cld
xor
sbb
jns
mull
mov
add
add
adc
push
ret
movl
mov
jmp
ror
fsubp
sbb
ja
lret
shll
add
es
enter
inc
enter
shlb
jle
lret
mov
xchg
ret
lock
add
push
add
mov
nop
add
pop
push
xchg
adc
xor
int
addb
fnsave
inc
sbb
mov
inc
popa
xor
jecxz
mov
adc
sub
inc
add
arpl
shlb
dec
and
xchg
cmp
add
push
push
adc
and
aam
cmp
and
add
out
add
or
pop
mov
add
xchg
je
nop
cltd
lcall
mov
push
or
adc
dec
data16
and
sub
enter
insl
inc
lods
imul
and
pop
subb
sbb
adc
shrb
test
out
lods
xchg
nop
repz
inc
sub
sub
dec
push
mov
popf
mov
mov
add
cs
test
cmp
stc
adc
sub
mov
aad
xlat
shlb
stos
pop
cmpsl
jecxz
test
add
sub
inc
mov
lds
inc
or
jl
test
scas
adc
mov
mov
adc
dec
push
mov
dec
hlt
sbb
ror
xlat
mov
in
mov
add
aad
push
add
pushf
adc
popa
mov
cmc
add
xchg
or
inc
push
jp
add
into
mov
dec
mov
scas
push
lods
mov
loopne
mov
mov
addl
push
sub
jbe
push
aaa
or
cmp
daa
or
into
add
pop
cld
unpckhps
push
adc
push
addb
test
stos
mov
push
mov
mov
aas
add
repz
fmulp
push
bound
shlb
addb
fcmovnbe
ret
pusha
pop
cmpl
adc
jmp
pop
cltd
gs
inc
bound
cmc
inc
mov
adcb
sbb
mov
mov
bound
aas
ror
rol
repz
mov
adc
outsb
inc
mov
test
dec
or
mov
daa
add
les
cld
xchg
out
xor
xchg
push
push
cwtl
arpl
aas
mov
enter
mov
sub
lahf
dec
add
pushf
cltd
adc
mov
imul
sbb
imul
shrb
loop
rcrb
xchg
stos
mov
sub
push
vmaxps
push
xchg
lods
fiadds
sub
xchg
sub
loopne
loop
pop
jg
push
pop
or
out
rorb
aam
dec
sub
stos
adc
mov
or
sub
mov
xlat
ljmp
movsb
cwtl
inc
fmuls
push
fucomip
cwtl
adc
sbb
imul
push
jecxz
add
cwtl
mov
xchg
sub
mov
adc
shlb
cmp
icebp
push
cmpsb
hlt
stos
inc
inc
cmp
pop
sbb
es
mov
lds
sub
add
das
cmp
mov
dec
mov
xchg
add
mov
xor
push
das
adc
add
pushf
dec
out
inc
add
lods
xchg
pop
ret
push
pop
in
and
pusha
jge
pop
xchg
adc
sbb
or
sbb
mov
and
add
pop
mov
or
pop
ds
and
mov
enter
lds
mov
scas
mov
xor
dec
or
jo
in
sub
jle
cwtl
mov
sarl
scas
sarb
and
faddl
movsb
nop
roll
mov
repz
and
push
inc
mov
movsb
mov
sbb
or
mov
xchg
push
inc
movsl
sbbb
in
xor
inc
add
sub
pop
push
or
insb
inc
push
mov
add
shll
std
sbb
adc
sub
pop
sbb
cmp
xchg
cli
loop
sahf
into
add
mov
aaa
sbb
lret
cmp
add
or
and
out
add
inc
out
push
xor
mov
mull
pushf
call
sbb
add
mov
xchg
cmp
inc
or
xor
or
test
lahf
cld
or
out
or
cwtl
mov
add
cmp
out
adc
and
lret
xchg
push
pop
cmp
shrb
insb
shrl
in
pop
andb
adc
push
bound
in
fldl
inc
xchg
mov
jbe
cmp
sbb
dec
popa
lods
repnz
xchg
add
cmp
inc
imul
xchg
cwtl
inc
inc
shrb
loope
addl
cltd
data16
or
and
xorb
data16
push
mov
sub
sub
add
fldcw
xlat
push
test
insl
add
gs
inc
sbb
add
cmp
in
and
lahf
mov
mov
div
pop
add
lret
popf
xchg
inc
shlb
add
add
xchg
xor
inc
cmp
popa
loopne
add
lret
std
fs
in
or
and
add
shrl
jl
dec
arpl
rcl
xor
lret
jmp
mov
cmp
and
cmpsb
imul
inc
nop
les
sub
rorb
aad
dec
cmp
inc
add
into
imul
fstl
pusha
xor
and
rcrl
add
fcmove
xlat
dec
rcrb
xchg
jo
fiadds
cmp
in
mov
add
add
jbe
mov
push
pop
xchg
jno
mov
jb
inc
or
add
lret
popf
xchg
js
fisubrs
add
add
in
notl
dec
lcall
inc
lret
mov
dec
lds
push
push
pushf
cld
add
xchg
in
movl
inc
xchg
rcr
aaa
stc
int
push
mov
ret
ds
push
sbb
adc
clc
dec
bound
sub
xchg
push
jno
out
shll
scas
sub
mov
xchg
mov
mov
loopne
movsl
sti
nop
lock
jp
and
cmp
push
add
rolb
test
mov
mov
sbb
test
fwait
and
xchg
loopne
jmp
jp
add
sub
stc
inc
lea
mov
adc
int3
je
mov
pop
arpl
xorb
inc
repz
dec
xor
sub
repz
cmpsb
pop
adc
and
sub
jb
add
sub
pushf
inc
or
adc
mov
ret
pop
xchg
xchg
cmp
fidivl
pop
xchg
mov
ret
loopne
push
add
rcl
nop
push
push
pusha
jg
popl
jns,pt
loopne
xchg
add
decl
adc
push
int3
je
cwtl
add
lahf
loopne
inc
in
push
pusha
aaa
imull
dec
rcl
es
xchg
jmp
mov
test
rol
in
js
fldl
xchg
sbb
mov
cmp
pop
add
mov
or
cmp
add
inc
sub
icebp
and
pusha
jo,pt
faddl
jp
insb
mov
push
dec
add
xchg
pushf
pop
pop
push
lahf
fidivrs
dec
data16
or
in
sbbb
add
pop
insl
repnz
in
adc
cwtl
dec
adc
mov
cmp
outsl
fsts
mov
test
les
out
push
insl
push
in
push
jo
out
mov
mov
jbe
inc
test
lds
rclb
subl
jp
jbe
popa
out
and
jb
fistpl
lcall
inc
dec
hlt
lret
fisttps
repnz
aaa
mov
fildl
fisubs
cmp
scas
ja
cli
xorl
cwtl
add
sbb
mov
push
or
fisttps
pop
add
push
add
rcrl
sbb
jne
jae
ss
rcrb
cmp
and
ja
xor
push
lods
lock
pop
or
adcb
testb
and
inc
mov
leave
loope
clc
xor
popf
or
lcall
pop
add
adc
mov
inc
sbb
cmpsl
add
ss
data16
repnz
add
fstl
cld
int3
sbb
sbb
mov
adc
push
xchg
cmp
xlat
sbbb
inc
icebp
and
es
push
inc
pushf
jg
push
mov
add
pop
test
inc
sbb
addb
xor
adcb
sbb
and
imul
pop
and
xchg
loope
fcomps
out
jb
test
dec
movsl
mov
call
adc
xchg
mov
add
pop
xor
sbbb
xorb
xor
push
pop
push
filds
sbb
hlt
sub
or
popa
call
subb
and
int3
ds
pop
inc
cmp
mov
repnz
xor
sbb
clc
xor
push
pusha
cwtl
shlb
lret
xchg
dec
in
or
adc
inc
in
cld
popf
int3
adc
int
daa
pushf
mov
add
cltd
xchg
add
inc
and
aas
pushf
adc
pusha
push
sub
xchg
add
and
add
into
push
push
jns
xchg
fsubrs
add
add
jmp
and
sbb
sub
mov
mov
test
aam
pushf
inc
fwait
and
adc
push
and
enter
pop
outsb
fbld
int
std
je
rclb
xor
loope
out
mov
nop
int
jecxz
in
ret
js
dec
xlat
and
add
add
mov
hlt
mov
mov
call
cmpsb
mov
hlt
xchg
sbb
or
addb
rclb
and
pop
xor
stos
das
xchg
cwtl
and
dec
lret
push
int
inc
test
test
or
nop
or
dec
add
divb
xor
dec
ljmp
adc
das
sbb
xchg
pushf
pop
add
xchg
mov
divl
push
aam
fimuls
or
into
insl
in
mov
mov
cmpb
push
xchg
add
sub
jmp
sub
mov
ljmp
sub
rclb
sub
pusha
add
push
add
pusha
les
pop
jle
mov
cmp
mov
jno
adcb
mov
je
fdiv
sub
adc
mov
adc
nop
mov
call
inc
leave
push
stos
push
xchg
add
loope
in
and
incb
mov
rcrl
fcoml
fstl
xlat
out
dec
jo
adc
icebp
notb
mov
mov
mov
shlb
pop
adc
add
out
sbb
cwtl
aam
cmpsb
pop
xor
add
es
lock
xor
das
sbb
in
int3
jns
mov
popa
and
or
xchg
push
mov
cmp
mov
jo
add
xchg
je
xchg
outsb
dec
addl
js
imul
inc
sub
sub
test
add
cmp
enter
rorb
xchg
rcr
cmp
in
cmp
mov
aam
add
in
pusha
les
jno
jp
mov
cltd
mov
fidivs
or
xchg
enter
add
xchg
addb
pusha
dec
jno
dec
fmuls
int
gs
movsb
in
mov
into
and
je
pop
or
jb
or
orb
xchg
mov
jne
dec
xchg
add
adc
jo
cwtl
data16
dec
sbb
mov
xor
or
xchg
fcomp
inc
es
insl
xchg
inc
pop
adc
das
inc
cmp
test
cmp
rolb
dec
popf
pusha
adc
shrl
in
pop
dec
xchg
push
and
nop
cltd
xchg
cmp
inc
cli
pop
lret
pop
push
jns
sbb
pop
ret
add
arpl
adc
sub
in
mov
or
pop
arpl
test
ljmp
inc
adc
int
xor
ss
pop
and
add
pop
add
in
arpl
imul
inc
sub
sub
inc
mov
pop
icebp
and
sbb
add
imul
int3
pop
xchg
fcom
dec
jnp
sbb
adc
or
dec
enterw
push
inc
xor
xchg
push
mov
les
mov
hlt
filds
ss
cmc
mov
aaa
mov
cwtl
gs
stos
fdivrl
sbb
ds
test
push
lods
jns
sbb
or
lret
in
shrb
pusha
mov
push
or
xchg
push
dec
inc
cs
and
push
sub
mov
xor
ret
addr16
or
inc
add
xchg
lret
push
jno
adc
fidivrs
movsl
adcb
repz
ds
rcrb
hlt
adc
dec
cltd
das
sbb
push
add
int3
dec
out
jmp
cmp
xchg
pop
jmp
mov
out
insl
sti
xchg
test
icebp
fsts
mov
pop
pop
mov
rcrb
add
or
push
subb
cs
mov
cmc
movsl
cmp
in
cmp
jo
cmpl
shl
pop
ret
cmp
dec
rclb
inc
cmp
cmp
push
sub
inc
pop
inc
push
or
pop
pop
rorb
add
cwtl
or
and
lock
dec
sarl
xchg
and
push
scas
clc
xchg
frstpm(287
imul
or
je
xchg
daa
jg
rcr
and
dec
add
mov
and
fimull
add
shrl
ljmp
mov
sbb
cmpb
test
mov
cmp
mov
clc
daa
xchg
clc
xchg
xchg
mov
xor
pop
jb
add
bound
mov
push
jno
clc
pop
add
popf
inc
nop
neg
xchg
call
sub
test
push
ret
call
xor
cwtl
out
pushf
cltd
orl
add
in
add
mov
jecxz
mov
jno
mov
test
add
xor
nop
scas
add
push
mov
lock
xchg
add
add
nop
add
mov
mov
push
cld
fs
les
mov
mov
cwtl
mov
inc
lock
xor
inc
sub
xchg
test
xor
mov
or
push
dec
leave
repnz
jp
push
mov
ljmp
mov
dec
bound
adc
mov
add
cmp
movsl
or
shr
shrb
fadds
loop
lcall
repz
imull
fsubr
sarb
push
add
add
sbb
inc
ficomps
jl
repnz
ljmp
gs
sub
xchg
add
dec
addr16
add
jecxz,pt
lret
imul
add
js
push
and
lret
cmc
sub
xchg
xlat
add
ljmp
lods
stos
or
arpl
xorb
push
int
inc
insb
mov
movsb
aas
push
sub
mov
and
hlt
push
sbb
push
jo
call
lds
push
shlb
enter
add
pop
mov
xchg
sub
sub
shrl
xor
int
sbb
ficoms
ror
push
loope
in
icebp
pop
sbb
add
pop
loopne
lods
pushf
mov
pop
iret
and
out
fcomp
add
inc
ret
pop
push
xchg
sub
repnz
in
and
push
mov
pop
jmp
mov
sub
xor
add
icebp
les
cmp
and
pusha
sbb
mov
dec
ds
out
xchg
sbbb
cmpsl
aas
loope
and
add
sbb
add
and
add
clc
mov
sbb
ror
or
adc
fcoms
lcall
or
jg
std
and
incl
sbb
call
or
sbb
mov
inc
mov
or
mov
dec
xchg
push
add
push
int3
xchg
psubw
push
nop
add
sub
bound
add
shlb
leave
jp
dec
xchg
xor
inc
dec
movsb
lods
xor
movb
icebp
and
repnz
inc
or
aas
iret
add
imul
in
pusha
jle
in
and
mov
sub
jae
jno
int3
cmp
sbb
nop
ret
mov
and
xchg
sbb
std
mov
int3
inc
mov
push
rcll
xchg
jns
inc
and
sub
jne
cmpsl
mov
add
push
inc
cmp
and
sub
cld
or
and
jo
inc
ja
mov
lret
push
dec
lock
mov
or
jp
or
xchg
lret
and
cli
mov
icebp
xchg
sbb
push
cwtl
fdivs
push
jge
fs
push
sbb
pop
xor
fiadds
sbb
cmp
mov
shll
loop
fcomi
dec
cmp
in
push
mov
add
scas
dec
add
insb
push
mov
int
gs
cmp
add
enter
lret
sarl
adc
js
dec
add
push
repnz
xor
add
sbb
pop
push
xchg
push
mov
sub
nop
dec
add
js
cmp
cld
jo
add
cltd
idivb
lds
ret
xor
mov
add
jl
cwtl
pusha
repnz
add
pushf
push
nop
mov
xor
sub
cs
cmp
mov
je
cltd
and
sbb
add
sbb
imul
cmp
push
aad
pusha
addb
clc
pusha
push
pop
jb
mov
adc
rclb
decl
shlb
pusha
push
popf
stos
hlt
or
int
push
xor
hlt
inc
inc
rclb
adc
lahf
bswap
push
pop
push
xchg
inc
add
jns
pushf
xor
lret
fadds
dec
and
push
inc
or
inc
insb
out
ror
cmp
movsb
loopne
or
dec
pop
loop
mov
or
add
sbb
lret
ds
mov
jae
in
mov
fcoml
inc
sub
add
mov
jno
xchg
inc
adc
inc
lds
or
xchg
xchg
and
mov
cmp
mov
mov
movsb
lods
add
into
lock
inc
dec
or
xchg
push
sub
call
nop
and
xchg
add
add
jbe
in
and
pop
rcll
lds
fistpl
cmp
and
add
mov
or
mov
xchg
jbe
xorb
dec
dec
mov
and
insb
lock
add
lds
pop
int
cmp
pusha
ret
add
jg
ffreep
inc
inc
dec
sub
xor
add
test
sarb
ja
fdivrl
add
popa
pop
pop
popl
push
inc
rcrb
fisubrl
mov
sub
jb
inc
push
adc
or
inc
push
or
or
divl
inc
sbb
std
sahf
inc
insl
push
mov
lds
pusha
fdivs
add
pop
rorl
jl
cmpsl
add
jae
jle
imul
add
movsb
bound
push
test
mov
mov
jb
mov
lods
add
xor
imul
add
test
add
push
fmull
xor
add
add
ljmp
in
sub
cmp
or
hlt
lea
dec
nop
add
pop
mov
fadds
mov
push
mov
or
lea
imul
lcall
jnp
pop
ss
xlat
cld
push
dec
dec
sub
int
fldcw
mov
mov
push
push
push
mov
pop
xor
ret
iret
jo
or
ds
clc
jl
mov
mov
sbb
sub
stc
outsb
add
pop
arpl
mov
sbb
sub
lcall
mov
test
xchg
sbb
dec
lds
push
sbb
sub
ds
xorl
hlt
loope
nop
loopnew
in
add
push
hlt
orb
gs
ds
add
fwait
add
lock
pop
push
inc
fstpl
ljmp
repnz
push
sub
adc
rcrl
dec
out
popf
aaa
and
ss
dec
shrb
xchg
sarl
mov
sub
sbbb
push
add
jb
mov
xchg
aaa
cmp
xchg
xchg
lcall
push
pop
add
daa
push
jecxz
lods
and
dec
sahf
dec
xchg
insl
sub
mov
mov
add
or
test
cmp
rolb
pop
adc
mov
push
cli
scas
push
cltd
pop
shll
jecxz
mov
jbe
popf
nop
hlt
dec
push
jo
sub
add
and
mov
add
and
add
add
out
push
jmp
cli
aaa
jl
sbb
adc
mov
out
sub
lret
sbb
leave
cmp
push
lret
out
add
push
inc
hlt
filds
pop
inc
add
sbb
adc
addb
mov
mulb
inc
movsb
jbe
add
cmpsl
mov
test
or
and
push
rcrb
mov
pop
jo
or
loopne
in
stc
sbb
jmp
mov
pop
sti
push
stc
push
mov
nop
adc
push
mov
lret
shrb
repnz
cmpsl
mov
ret
and
lods
push
insb
shll
jnp
mov
stc
mov
sbb
rsqrtps
imul
subb
das
dec
rcll
test
add
cmp
aam
dec
in
sub
jo
clc
arpl
fisubrl
cmp
std
adc
dec
gs
or
mov
xor
xchg
mov
jl
pop
push
lcall
lds
aaa
mov
xchg
mov
les
add
test
add
cmp
xchg
mov
movb
pop
movsb
adc
adcb
inc
aad
xchg
adc
xchg
sub
dec
lret
adc
xor
leave
mov
xor
sub
fs
int
push
and
add
xlat
cmpsl
in
xor
out
shll
mov
ret
sar
hlt
lcall
js
dec
loop
pop
pop
fwait
sbb
cmp
push
or
cmp
repz
testb
adc
push
or
packsswb
push
shl
sub
ret
mull
imul
adc
pop
gs
or
daa
mov
rolb
and
cmp
jo
jno
cmp
clc
add
imul
xor
cs
and
mov
mov
js
neg
lock
lcall
push
cwtl
stos
mov
and
xchg
mov
xchg
lahf
imul
iret
mov
adc
pop
push
fnstenv
push
sbb
cltd
push
repnz
pusha
es
je
cli
pop
imul
test
push
adc
xor
cmp
push
add
nop
addr16
add
inc
test
popl
or
mov
xor
jp
lock
sub
jl
bswap
push
inc
push
cmp
mov
lret
jns
mov
out
lods
gs
pop
loopne
roll
add
fidivs
xchg
sub
int
int3
je
stos
das
hlt
and
push
xorl
imul
hlt
jo
orb
or
sbb
add
inc
rcr
cmp
inc
mov
inc
add
mov
cwtl
add
mov
xor
xchg
sub
insb
aad
add
or
push
in
lcall
and
loopne
add
inc
stos
jne
xor
xor
lcall
das
dec
or
pop
adc
mov
pushf
sbb
sbb
and
sub
add
bound
jge
mov
cmc
dec
cmp
adc
jb
xchg
inc
dec
adc
mov
adc
test
lods
shlb
mov
fs
adc
popf
xchg
hlt
scas
shl
sbb
sub
repnz
cmp
adc
cwtl
push
shrl
push
or
in
rolb
add
jnp
jno
je
mov
mov
cmp
push
outsl
cmp
push
test
sbb
inc
push
lods
xchg
popf
call
aam
inc
ds
incl
into
sbb
adc
leave
ds
iret
cli
add
cmovo
testb
adc
loop
xor
xchg
data16
sbb
sbb
adc
add
lods
pop
and
inc
lock
call
add
xor
dec
push
cmc
mov
xor
das
nopl
rclb
add
pop
ret
enter
and
addl
ret
js
or
xor
pop
add
xchg
jae
daa
rclb
cwtl
mov
dec
clc
cmp
or
popf
mov
xchg
pushw
xor
adc
pop
ret
inc
mov
and
ret
cli
pop
test
adcb
fisttpl
xor
xorl
nop
jno
add
ss
and
loopne
sub
mov
jl
cmc
cmp
xchg
push
push
push
mov
pop
ret
adc
pop
fwait
loopne
push
ret
sbb
jmp
add
test
cmp
xor
sbb
shrb
fldl
ss
cmp
or
imul
pop
ret
inc
mov
and
ret
cmp
mov
push
stc
push
cmp
xor
test
stc
sbb
sbbl
or
mov
dec
pop
mov
bound
dec
call
xchg
les
pop
test
orb
daa
pusha
jb
add
mov
test
test
pop
ret
enter
dec
add
ret
cmp
dec
xchg
cmpsb
fists
add
and
mov
test
cld
stc
outsb
add
out
xchg
xor
or
jge
xor
push
pop
lahf
add
and
mov
movsb
iret
dec
sbb
mov
out
cld
addl
add
jno
and
fdiv
je
adc
fstpt
mov
icebp
push
sbb
pop
retw
sti
shr
and
pop
ret
inc
mov
add
ret
sbbb
add
inc
dec
aas
idivw
add
cmp
sub
or
xchg
leave
sbb
sub
das
adc
mov
push
stc
out
cltd
xor
test
pop
cmc
inc
pop
sbb
pop
xchg
aam
cmpsb
popf
xchg
mov
push
pushl
shll
aam
mov
add
call
lcall
or
stos
movswl
pop
stos
or
dec
cli
pop
inc
sbb
mov
adc
and
decb
dec
add
xor
add
or
sbb
cmp
xchg
test
add
adc
sub
sbb
lods
adc
mov
mov
pop
inc
push
or
xchg
sbb
sub
pop
mov
sbb
inc
push
ret
mov
cmp
mov
subl
mov
and
inc
and
bound
or
and
sbb
push
add
popf
or
sbb
adc
xchg
adc
cmp
sbb
inc
sbb
leave
pop
push
push
icebp
cld
add
inc
mov
push
mov
xor
push
fptan
lock
out
sub
shrl
es
adcl
fs
sub
and
ret
xor
adc
pop
enter
mov
sarl
insl
jae
dec
inc
cmp
xchg
xor
inc
sbb
loopne
adc
mov
call
cli
jmp
inc
add
sti
sbb
jbe
pop
shlb
add
mov
xchg
push
sbb
and
dec
loop
and
adc
cmp
fcomps
add
push
sahf
jae
push
das
mov
mov
loop
jo
lds
mov
xor
icebp
mov
push
add
decl
or
clc
loope
and
or
cmpb
cli
cltd
cmpsl
jne
sbb
adc
incl
fsubs
or
cmc
lret
call
jl
xor
popf
mov
adcl
sub
mov
xor
or
mov
and
mov
ret
sub
imulb
xor
mov
jne
or
adc
int3
jmp
pop
das
negl
sub
mov
sub
xchg
shlb
pop
adc
sbb
je
ljmp
xchg
and
add
loopne
jmp
mov
shll
fiadds
cltd
add
mov
and
fs
adc
leave
into
inc
sbb
xor
cmpsl
jbe
loopne
sub
jae
mov
sbb
insb
adc
jmp
cld
mov
lea
shrl
pop
mov
into
xor
mov
sub
shrl
mov
sbb
adc
xchg
movsb
stos
int
xchg
add
inc
inc
lea
mov
fisttps
adc
xor
adc
cli
or
test
sbb
std
cmpsl
adc
mov
es
sbb
lret
dec
sbb
in
dec
filds
mov
add
enter
in
lcall
out
inc
icebp
or
imul
xchg
xchg
push
push
mov
dec
out
pop
mov
push
mov
dec
nop
pop
call
dec
out
sbb
imull
or
jo
adc
movsl
adc
mov
fmul
mov
and
call
xor
sbb
pop
repz
sub
mov
popl
mov
xor
cmpsl
test
dec
adc
and
jmp
hlt
jge
xchg
jecxz
sbb
add
xor
mov
or
pop
or
add
pop
dec
repz
xchg
or
inc
pop
mov
push
sub
jae
sti
dec
lods
mov
pop
lock
add
cli
lea
adc
stos
int
mov
cmp
clc
sbb
cmp
stos
and
push
lcall
or
lret
lea
outsl
es
jl
adc
dec
adc
leave
pusha
sub
push
jmp
add
mov
pop
std
stc
or
push
lock
inc
pop
add
lahf
pop
lea
or
jne
daa
cltd
xchg
sub
ret
bound
push
cmpsb
dec
in
push
mov
add
out
pop
lods
clc
mov
sub
pop
subb
test
mov
sub
lret
add
jl
repz
add
test
and
lods
fadds
add
add
or
jae
inc
jns
and
popa
testl
stos
popa
movsl
or
xor
lds
shlb
cmp
mov
lds
lea
sbb
fsubl
add
sbb
fstps
icebp
sub
shlb
mov
fistps
in
sbb
test
lret
in
shlb
xor
shr
xchg
xchg
fsub
jmp
std
popa
vmovaps
inc
mov
fidivs
cmp
and
popf
cli
jge
xchg
js
adc
inc
cwtl
sti
pop
add
fadds
inc
in
out
xchg
insl
or
push
pusha
push
jbe
adc
sbb
and
and
dec
ret
lods
or
and
jns
xchg
out
inc
xchg
icebp
jmp
stos
inc
xchg
xor
add
xchg
test
mov
lret
mov
and
hlt
stc
dec
push
dec
or
pop
and
dec
pop
mov
lea
add
pop
sub
popa
xchg
xchg
into
mov
test
add
fisubrs
fiaddl
roll
enter
add
in
mov
xchg
lea
jl
clc
push
mov
push
stc
and
test
jns
add
mov
mov
or
sub
sbb
cld
mov
adc
pop
xchg
ja
fbld
pop
pushf
push
adc
mov
sarb
xor
jmp
in
nop
push
mov
lahf
push
adc
andb
push
fs
ficompl
mov
subb
xchg
mov
mov
xchg
fistps
rcrb
mov
xchg
outsl
imul
test
mov
inc
mov
popw
jne
dec
adc
sysexit
fwait
add
add
cld
mov
pusha
xor
test
push
cli
fs
sub
push
add
jle
pop
movl
imul
fwait
dec
cmp
mov
pop
or
addb
mov
int
cmp
popa
loope
addr16
out
pop
sub
pop
call
test
movsb
shll
mov
or
and
adc
mov
in
jge
dec
add
jecxz
xlat
mov
jecxz
inc
add
adc
mov
and
adc
in
loope
inc
dec
mov
stos
sbb
js
push
push
movsl
or
sbb
bound
add
clc
sbb
neg
pop
mov
mov
insl
subb
add
aad
or
mov
inc
mov
mov
pusha
xor
jmp
push
lock
jl
add
stos
outsb
lret
mov
or
cmp
and
xchg
out
push
decl
sbb
inc
ja
sbb
out
dec
jmp
inc
jno
jl
cs
xchg
add
and
mov
idivl
sub
push
or
mov
mov
cld
and
add
test
cltd
sbb
adc
xor
xchg
xor
mov
add
out
push
les
movsl
das
clc
sub
xor
cltd
fyl2xp1
mov
push
adc
jle
repz
daa
adc
mov
int
lds
movsl
inc
popf
mov
fs
sub
jle
pop
mov
mov
dec
repnz
loop
sbb
sbb
decl
dec
popa
jo
sbb
or
mov
xor
in
pop
push
add
sti
jo
sub
mov
sbb
mov
xor
add
xor
jg
jl
inc
in
fs
xor
mov
testb
or
cs
mov
add
push
jmp
cmp
adc
push
popf
xchg
movsb
cld
test
mov
rcrb
push
pop
jb
dec
cmp
xchg
or
pop
sahf
fidivrs
je
mov
jge
orb
sub
push
sbb
or
je
cld
cmpl
push
push
jmp
or
dec
mov
cs
and
mov
and
add
lods
mov
add
mov
imul
popaw
add
or
adc
aas
in
mov
lcall
xchg
mov
sub
mov
xchg
jmp
popa
popf
jmp
sbb
push
mov
mov
mov
sbbb
sbb
add
xchg
push
std
mov
mov
dec
jmp
mov
fsubrs
push
inc
outsb
add
lea
rcrb
push
rclb
out
or
cmp
and
in
jp
pop
or
or
jmp
mov
enter
fbstp
lds
inc
or
mov
jl
push
popa
mov
push
jl
pop
mov
andl
sbb
cmp
pop
mov
xor
sbb
roll
pop
ffree
sub
pop
out
fbld
lahf
add
adc
mov
xorb
pop
cmpsl
adc
jmp
or
and
xchg
jge
in
adc
mov
pop
jo
mov
xchg
imul
adc
adc
enter
and
daa
call
xor
lret
sub
test
les
cmp
outsl
pop
pop
jge
nop
inc
inc
lea
and
mov
cmp
je
sbb
out
push
insl
loop
adcl
mov
arpl
add
push
cmp
cwtl
jnp
movsl
xchg
clc
add
xchg
into
cmp
mov
jmp
push
sarb
ficoms
pop
add
sbb
test
out
and
or
mov
and
push
push
pop
inc
mov
popf
pop
jp
nop
scas
adc
mov
and
mov
mov
test
mov
sbb
or
mov
sarb
jmp
mov
repnz
xor
imul
test
add
xchg
inc
or
adc
mov
cltd
movsl
add
pop
divl
jl
sbb
or
daa
andb
iret
and
addr16
cmp
or
lret
xorb
cmp
or
leave
lods
gs
and
mov
daa
xor
and
add
xor
loopne
push
mov
insb
adcb
mov
gs
imul
mov
jge
push
and
adc
jle
adc
lret
adc
cmp
insl
in
shr
or
xchg
jns
mov
mov
das
sub
movsl
push
push
cmpsb
cli
and
or
pushl
sbb
cmpsb
fbld
imul
and
inc
sbb
pop
xchg
lahf
hlt
add
mov
mov
push
mov
and
push
inc
jne
test
ret
test
xor
das
pop
js
sbb
mov
imul
inc
add
push
mov
adc
pop
ret
inc
and
add
pop
pop
aad
xor
adc
xchg
xchg
add
mov
cmpsl
fcoms
mov
mov
sbb
xchg
xchg
or
shlb
mov
cmc
nop
popf
test
fdivp
or
mov
sub
add
popa
inc
into
pop
or
mov
mov
mov
mov
push
rcpps
and
cmpl
jp
outsb
jb
pop
lods
jp
movsb
imul
cltd
jb
outsb
ret
inc
rcrb
add
loop
mov
repz
or
leave
insl
mov
xchg
fdivs
movsb
jns
sbb
test
enter
and
push
inc
in
and
mov
xchg
fimull
cmp
mov
pop
or
out
sub
cmpsb
adcb
push
xor
pusha
or
mov
cmp
movsb
cmpb
testb
pusha
out
popa
xorl
cmpb
rol
push
out
loop
xchg
xor
ret
mov
int
loopne
dec
sub
dec
mov
pop
test
jns
sbb
mov
mov
outsb
push
adc
orb
in
popa
lods
pusha
insb
clc
loop
mov
loopne
push
fcmovne
pusha
mov
add
jbe
nop
mov
dec
loop
add
xor
sub
lods
push
dec
add
pushf
sbb
dec
fwait
mov
adc
push
add
in
sub
adc
shll
push
jno
test
jb
sub
loope
dec
cmp
ss
adc
push
mov
jne
daa
adc
add
adc
push
out
dec
or
and
adcb
mov
repz
lret
loope
call
adc
dec
add
sbb
test
adc
clc
sar
xor
add
add
xor
mov
out
dec
add
mov
imul
test
sub
push
daa
add
dec
jno
add
dec
dec
fidivs
dec
andl
xchg
pop
fcompl
insl
std
dec
fistpl
or
add
add
or
inc
push
les
pusha
aas
adc
adc
test
inc
orl
aaa
lret
and
jno
push
sub
and
xor
dec
xchg
mov
movsb
mov
add
fidivrl
xor
add
pop
mov
adc
jne
mov
lods
std
sbbl
fstl
ljmp
in
push
mov
xchg
les
mov
inc
out
add
xlat
pop
xor
push
and
sub
bound
test
mov
aad
adc
add
aas
xchg
jp
push
int
push
sub
adc
scas
rcl
or
push
add
dec
mov
sbb
add
cmp
inc
or
or
pop
jle
punpcklbw
cmpsl
ds
jle
ret
stos
popf
mov
into
dec
test
mov
ljmp
jo
shlb
inc
dec
pop
lcall
push
add
out
mov
push
fdivr
roll
jne
mov
cmc
pusha
faddl
xor
nop
xchg
mov
xchg
pop
add
mov
inc
cltd
sub
pusha
mov
addl
stos
add
adc
push
nop
and
sub
push
jo
jecxz
push
sbb
jg
cwtl
data16
sbb
nop
sbb
adc
imul
stc
movl
mov
sbb
mov
aaa
fs
mov
or
fiaddl
out
xor
sti
push
adc
test
push
xchg
orl
mov
and
jnp
subl
imul
mov
jp
dec
mov
aad
pop
push
out
mov
imull
rorb
or
out
shl
xor
jp
nop
cmp
and
add
jg
or
cld
rcl
mov
sub
pop
pop
adc
ret
fs
inc
repnz
xor
rolb
pop
xor
sbb
inc
test
mov
pop
push
and
or
xor
jnp
fsubl
sbb
movsb
scas
rolb
sbb
add
mov
xchg
loop
cmp
stc
push
inc
or
scas
je
enter
push
add
daa
push
and
stos
mov
outsl
add
jle
xor
or
xchg
testl
testl
fwait
xor
adcb
adc
out
pop
xor
push
or
ja
inc
fcmovb
xchg
adc
sub
mov
adc
xor
add
xchg
cmp
int
xor
cltd
and
pop
or
imul
mov
xor
mov
sub
inc
cmp
xor
mov
cmpb
int3
js
gs
stos
lea
jno
arpl
dec
xchg
stos
sub
adc
movsb
lds
mov
and
je,pn
push
push
cs
insl
test
lods
test
sub
push
xor
adc
xchg
loope
inc
xor
scas
arpl
and
js
inc
mov
nop
mov
cs
add
jecxz
divb
addr16
sbb
clc
xor
scas
leave
inc
pop
sub
and
ret
adc
rcrb
shrl
ds
lret
sub
test
dec
mov
push
dec
push
ud1
js
pop
mov
je
faddl
arpl
iret
pop
movsb
cmpsl
pop
popf
mov
add
pop
inc
call
dec
fsubs
test
mov
mov
pop
push
les
or
cmp
sub
addb
add
loope
xchg
test
subb
fwait
xchg
jp
add
test
sbb
outsb
xchg
fcomps
cmc
call
int
inc
or
cmp
test
pop
mov
inc
cltd
lods
das
add
adc
inc
dec
and
push
inc
lods
inc
cmp
sub
sbb
xor
add
and
or
xor
scas
icebp
mov
dec
mov
cmp
pusha
cltd
cwtl
ret
in
fsub
push
xchg
add
adc
filds
nop
pusha
dec
pusha
sub
jb
outsl
jbe
mov
sbb
xchg
mov
stc
sbb
mov
nop
sub
mov
popf
dec
jns
xchg
nop
ja
repz
es
sub
sar
jo
xor
nop
popa
adc
and
or
shrl
adcb
aad
and
push
sub
mov
and
or
sbb
pop
dec
loop
or
int
sti
call
mov
push
mov
push
add
movsl
sbb
jp
fsubs
movsb
gs
insb
cmpsb
outsb
loopne
jb
add
add
xor
dec
call
test
roll
mov
xor
hlt
mov
pop
push
add
rcrl
or
pop
das
lret
pop
push
repz
cmpl
xchg
cltd
lret
push
nop
outsb
loop
xor
and
repnz
xor
sub
and
inc
xor
ds
pop
push
jmp
or
adc
or
xchg
add
stc
rclb
adc
mov
jge
push
pusha
xor
push
push
push
insb
jecxz
adc
fsubs
dec
mov
xchg
sbb
mov
data16
inc
add
repnz
or
push
into
pop
shlb
and
ret
movsl
add
add
movsl
clc
icebp
fisubl
adc
dec
and
lock
or
jmp
fcoml
add
popa
and
and
popf
out
xor
test
in
neg
mov
cmpsb
sbb
xor
mov
push
ljmp
cmp
xor
adc
xor
pusha
mov
push
loopne
inc
xchg
loopne
popa
adcl
mov
dec
sbb
fwait
aam
jecxz
sbb
ljmp
jmp
cmp
push
sub
and
pop
bound
or
cmp
lea
xor
jl
sub
cmp
les
pop
shlb
push
stos
subb
push
in
pop
xor
and
pop
dec
and
stos
pop
insl
out
pop
add
add
mov
idivb
rcll
mov
dec
and
push
push
jbe
mov
jns
orb
mov
shll
jecxz
jnp
jae
mull
cmp
popa
xchg
std
mov
or
pop
inc
sub
mov
inc
lods
or
pop
pop
push
pop
mov
enter
jg
out
push
mov
jp
mov
mov
push
xchg
inc
rdtsc
lret
xor
mov
and
repz
movsl
mov
mov
inc
or
gs
jb
adc
sti
loope
popf
jno
add
pop
in
bnd
push
pop
psubsw
pop
fsubs
add
adc
sbb
inc
and
sub
and
inc
pop
sub
sub
imul
imul
mov
pop
sub
test
movl
and
adc
mov
leave
nop
sub
cmp
ret
add
lea
push
mov
pop
push
jecxz
cmp
adc
adc
pop
mov
lock
icebp
or
push
push
inc
sti
dec
shrl
fucom
bound
add
jnp
mov
jp
out
outsb
pop
pop
xor
repnz
jbe
insl
add
or
ds
loope
fimuls
or
enter
add
xor
mov
sti
adc
loope
or
xor
test
jns
in
jmp
add
lcall
xchg
loope
jne
dec
negl
xor
add
test
add
push
inc
add
pop
add
mov
les
ret
mov
sub
pushf
inc
push
loope
and
add
cltd
add
jg
loope
sub
push
dec
into
adc
lret
xchg
or
jbe
pop
push
or
adc
or
pushf
cs
imul
sbb
sbbb
mov
mov
cmp
or
ss
repz
incl
out
inc
loopne
rorb
add
loope
push
xor
push
xchg
gs
push
add
rcll
ds
jg
pushf
pop
mov
out
xor
jmp
repz
pop
push
push
inc
shlb
ret
pop
popf
push
add
repnz
mov
pop
sub
push
dec
in
push
and
jo
add
shlb
push
incl
ljmp
or
cmp
dec
fisttps
push
push
push
mov
int3
jne
add
mov
inc
mov
gs
sbb
sub
lea
jmp
inc
mov
stos
or
inc
cmp
in
adc
lcall
cmp
or
sub
xor
int
cld
pop
adc
mov
jmp
adc
cmpl
fs
imul
lea
arpl
or
or
cmp
xor
test
adc
test
adc
shr
inc
lods
add
adc
sbb
out
mov
mov
add
add
jmp
dec
ret
rcll
add
or
jns
movsb
pop
jns
sbb
sarl
and
es
gs
xchg
add
shr
or
push
adc
push
inc
mov
dec
fwait
notl
add
jmp
or
cltd
sub
les
inc
pop
jmp
or
ss
sub
and
mov
mov
xorb
mov
rorb
insb
jmp
enter
push
and
and
mov
nop
inc
and
or
jne
hlt
or
movsb
adc
mov
mov
xor
repnz
and
lahf
sbb
dec
xchg
adc
cmp
and
xchg
xchg
stc
and
test
push
jmp
pop
mov
mov
ret
and
int
jg
xor
roll
jbe
inc
mov
add
push
jmp
mov
jbe
test
cli
inc
imul
dec
or
xchg
jmp
pop
pop
pop
add
leave
ret
rcrl
adc
mov
pop
jg
add
ret
jbe
add
imul
xor
xor
mov
addl
sub
mov
cmc
out
add
xchg
jnp
je
add
mov
dec
mov
mov
sub
mov
adc
hlt
mov
add
adc
lock
mov
and
cltd
push
lret
push
dec
cmp
ret
pusha
pop
and
jb
or
mov
roll
cld
jne
rclb
arpl
sbb
into
inc
dec
pop
push
mov
dec
orl
cmp
or
fistl
cmp
push
fisubrs
adc
dec
test
pushf
add
shr
dec
and
ja
outsb
add
xor
sub
xchg
fdivl
ds
popa
lods
mov
pop
jmp
pop
dec
pop
lsl
push
mov
inc
mov
or
inc
loopne
int3
or
aas
sbb
pop
pop
cmpsb
xchg
cld
gs
ficoml
push
aad
into
fsubp
dec
lahf
or
add
pop
dec
mov
jp
fistps
jno
jmp
and
nop
shlb
in
xorl
sbb
mov
xchg
mov
lret
flds
xor
sub
in
pop
xlat
scas
int3
loopne
mov
jge
dec
daa
sub
pop
insb
add
sti
ljmp
jmp
or
sub
or
and
add
pop
adc
mov
cmp
xchg
pusha
fisttps
jbe
js
enter
cli
popa
ficoml
mov
push
mov
xor
push
xchg
rolb
xor
in
outsb
mov
sti
add
cmp
inc
xchg
cmp
sar
xor
adc
je
ds
adc
pop
jl
inc
lods
add
mov
insl
pop
add
lock
aam
sub
pop
mov
inc
sbb
push
xchg
fsubrs
xchg
test
jle
sbb
mov
shl
cwtl
jbe
adc
jb
inc
and
lret
push
and
mov
cltd
and
cld
sbb
jb
js
push
push
inc
sub
cmp
pop
adc
dec
scas
adc
into
mov
inc
rolb
xchg
jmp
dec
pop
cwtl
pushf
and
cs
fwait
or
sbb
inc
cmp
pop
addb
add
jg
dec
pop
and
insl
mov
cmp
or
cmovns
test
mov
jle
mov
add
repz
nop
int3
inc
daa
or
mov
rcll
or
jle
and
movsb
add
cld
pop
dec
nop
mov
mov
pop
push
xor
mov
pusha
xor
mov
shlb
sahf
or
and
sub
mov
cld
push
mov
pop
push
fsts
hlt
xor
icebp
add
bound
into
or
aaa
fistps
jo
pusha
incb
ficomps
cmpsb
int3
ds
outsb
movsl
addb
push
filds
xchg
lods
mov
mov
xor
pop
call
xor
cmp
fcompl
lret
icebp
cmp
add
clc
dec
inc
inc
das
xchg
lcall
inc
daa
xchg
push
sar
imul
rcrl
fsubs
mov
ds
and
jecxz
int3
push
cs
movups
repz
pop
and
push
mov
popa
pop
sub
jl
gs
pop
jo
punpcklbw
imul
inc
test
adc
sub
pushf
add
push
push
ffreep
mov
nop
and
and
add
roll
lock
ja
pop
dec
xchg
popa
and
lcall
fcomps
add
mov
xor
fimuls
mov
shlb
lret
inc
addb
out
aad
or
gs
dec
les
xchg
or
sub
in
xchg
push
add
jle
enter
mov
lea
sub
xor
dec
xchg
sub
push
sbbl
mov
leave
add
loopne
xor
sbb
sbb
shufps
add
dec
mov
jge
clc
shrb
adc
sub
add
icebp
adc
cltd
lock
shr
and
jmp
jle
mov
lods
push
sub
iret
leave
subb
add
ja
int3
or
rorb
fists
stc
imul
xor
xor
xchg
js
inc
add
out
jmp
xor
jl
pushf
call
dec
jmp
sbb
std
inc
mov
test
cmp
add
std
movsb
pop
add
mov
imulb
or
jg
add
jo
cwtl
lods
stc
jge
pop
fistpl
insl
call
popf
test
int3
aad
roll
pop
loope
add
inc
aam
fs
mov
add
imul
add
outsb
das
mov
and
negb
cmpsb
mov
scas
out
adc
add
xchg
arpl
mov
or
xor
inc
sub
pusha
in
inc
test
mov
dec
rclb
and
dec
imull
sbb
jp
inc
or
sbb
fcoms
clc
mov
sarb
mov
shr
and
aad
add
xchg
cmp
add
or
ss
scas
xor
mov
or
pop
pusha
inc
pop
outsl
add
jns
inc
dec
mov
dec
adcl
fists
inc
jns
mov
daa
xor
mov
cli
pop
jo
pop
add
addb
das
ret
sbb
mov
push
nop
in
pop
inc
pop
dec
fdivrl
pop
sbb
and
or
div
adc
call
mov
ljmp
dec
or
add
outsl
dec
cld
xor
subb
loopne
pop
mov
loope
mov
fcomi
loope
inc
or
push
mov
insb
mov
movsb
push
incl
jo
mov
inc
sub
fmull
enter
sub
test
insl
pusha
mov
aam
xor
xlat
xchg
insb
or
ret
insb
in
pusha
xchg
repz
mov
imul
dec
or
lea
sarl
out
sub
cmpsl
movsb
adc
add
pop
mov
enter
mov
xor
mov
jle
pop
mov
or
in
es
in
adc
or
mov
ds
test
arpl
xor
popf
ret
push
xchg
dec
and
add
xchg
ret
xchg
jecxz
aas
fnstenv
mov
int
inc
or
pop
movsb
adc
add
dec
lea
lock
hlt
mov
fcomip
call
popf
movsb
adc
shll
push
add
pusha
mov
jecxz
xlat
jg
das
pop
mov
bound
daa
mov
cmp
loopne
pop
xor
loop
or
adc
pushf
popa
add
sub
leave
add
pop
push
ljmp
or
xchg
sbb
add
fdivs
or
inc
adc
sub
jns
cs
dec
jae
nop
inc
fisttpl
arpl
loop
mov
push
sbb
div
cmc
or
jle
xor
sbb
cmp
adc
or
mov
xor
leave
int3
push
jbe
add
push
and
xchg
aam
dec
sub
ficoms
out
sbb
and
rol
mov
jg
leave
add
aad
cmp
or
insb
ret
or
ja
sti
adc
xor
cmp
add
jmp
mov
add
sub
lahf
cmp
adc
add
xchg
lret
int
ja
add
in
decb
mov
shlb
movsl
sub
call
jmp
mov
cmpsl
add
dec
jecxz
aad
mov
inc
mov
arpl
gs
push
dec
hlt
daa
add
cmpsl
jecxz
mov
sub
add
rorl
jae
movaps
ds
outsb
mov
mov
and
das
cwtl
pop
sub
fldenv
add
rclb
add
or
pop
in
test
cs
mov
sbb
xlat
pusha
js
or
and
jecxz
push
jbe
and
out
mov
ja
add
aaa
loope
sub
cmpsb
outsl
jl
ds
add
adc
jg
shl
dec
addb
pop
addb
cmp
and
mov
cwtl
dec
pop
aad
call
pop
loopne
mov
xor
push
sti
jg
pop
dec
cmpsl
orb
fistl
push
in
push
add
xchg
or
repnz
movsb
les
dec
pusha
and
in
dec
push
add
cld
adc
je
xor
xorb
jo
adc
jmp
and
cwtl
in
pop
or
subb
push
enter
add
mov
cmp
cmpsb
or
sbb
xor
int3
adc
bound
mov
mov
add
sti
notl
push
insb
adc
test
adc
pop
dec
adc
icebp
cmp
sbb
sbb
shlb
xor
fwait
pusha
add
inc
add
xchg
ret
addb
call
push
int3
xchg
call
aad
fucomi
jp
pushf
testb
cld
fmulp
daa
das
inc
les
push
or
lock
or
cli
push
es
pop
js
insb
mov
cli
icebp
insb
cmp
mov
and
dec
pop
mov
push
xchg
add
xchg
enter
mov
lods
push
dec
add
push
push
add
pop
xchg
movsb
cmpsb
jb
add
js
stos
add
test
lds
add
xor
movl
fstpt
ja
mov
push
insb
shrb
cltd
jne
filds
mov
or
push
fwait
gs
or
iret
imul
add
dec
clc
dec
xchg
rcll
sbbb
xor
and
nop
fistpll
or
or
sarb
in
mov
popf
je
and
stc
or
xor
pusha
test
sub
push
or
out
xchg
cwtl
jl
add
mov
frstor
dec
ret
xor
mov
lock
dec
and
add
scas
jno
iret
mov
lea
pushf
push
mov
or
repz
pop
into
xlat
pop
call
inc
xchg
lret
sarl
add
cmpsb
lret
pop
clc
add
mov
hlt
insb
add
lret
mov
dec
movsb
dec
xor
ret
push
xchg
rolb
setae
stos
sub
or
push
add
repnz
xchg
push
add
add
lods
sub
mov
fdivs
dec
sbb
lahf
loopne
and
aam
mov
std
add
movsb
int
xchg
mov
nop
sbb
add
sti
mov
loopne
mov
mov
mov
shll
arpl
loope
cs
int3
mov
sbb
cs
push
cmc
sti
inc
jne
inc
xor
fs
dec
add
pop
dec
push
ret
cmpsb
dec
mov
add
into
cmp
jbe
jnp
mov
cmp
dec
and
pop
and
in
inc
cs
bound
adc
jmp
xchg
mov
sbbb
out
pop
dec
sar
mov
pop
in
jae
idivb
mov
add
ret
inc
rorb
mov
pop
fwait
je
popf
dec
mov
xor
xchg
adc
test
mov
outsl
push
out
mov
add
int3
pop
xchg
sub
pop
xor
mov
jge
add
jle
sbbb
push
add
dec
and
mov
repnz
cmpsl
iret
aam
push
aad
into
pop
pop
mov
jno
add
lods
inc
xor
test
sbb
pop
jnp
sbb
mov
jbe
pop
push
push
mov
add
gs
jg
mov
adc
in
sbb
xor
cwtl
test
cld
push
sbb
loop
dec
inc
jl
pop
push
cmp
int3
in
sub
and
leave
sbb
add
std
cwtl
cmp
add
js
sbb
fdivrs
outsl
cli
add
sbb
push
mov
iret
insl
sbb
pop
cmp
cmp
adc
test
lds
imul
or
fs
dec
xchg
xchg
xor
daa
aad
xchg
dec
cmovo
or
repz
adc
xchg
dec
add
push
shrl
xor
inc
jae
shrd
repz
clc
add
pop
jno
or
hlt
push
jns
push
jge
cmpsb
nop
pop
bound
int3
daa
rcrb
xchg
inc
or
jmp
pop
and
push
jecxz
and
lret
out
mov
jbe
dec
cltd
fcom
lret
sbb
cmp
cmp
push
or
add
rcrl
dec
push
fadds
or
imul
test
fcompl
or
aad
sbb
inc
jb
in
sbbb
hlt
pop
lock
loope
into
mull
xor
sti
push
push
enter
loop
pop
and
mov
aad
push
push
xchg
imul
ret
xorl
cmpsb
and
ret
loope
pusha
mov
arpl
pop
inc
jl
leave
add
ja
xchg
sahf
lock
cltd
lods
cmpsl
outsb
ss
das
ds
pop
insb
xchg
lret
pop
popa
je
rcll
nop
daa
es
and
daa
nop
call
add
imul
lar
or
inc
mov
xchg
adc
or
dec
dec
popa
xchg
adc
popf
cmp
push
sbb
add
fisubrl
inc
bnd
decb
mov
adc
into
dec
orl
add
jne
out
repz
ljmp
gs
inc
test
or
cs
in
or
xor
pusha
cmp
inc
in
addb
add
mov
xor
cwtl
call
pop
incb
add
scas
inc
arpl
sub
ret
add
fstp
test
sub
daa
das
mov
test
xor
in
nop
add
cltd
hlt
loope
inc
sbb
add
cmc
imul
sbb
ljmp
cltd
into
leave
cmp
test
movsl
pop
inc
outsb
mov
sub
out
rcr
pusha
mov
std
mov
movsb
test
imul
leave
jl
shlb
jbe
jne
push
subb
inc
int3
adc
push
aad
and
stc
push
jle
inc
and
xor
fwait
ret
push
xchg
ret
in
xor
xchg
lret
rclb
addr16
add
gs
xchg
sbb
sbb
pop
dec
add
roll
inc
or
push
adcl
subb
ljmp
sub
and
or
clc
dec
loopne
inc
dec
flds
fs
inc
or
sbb
add
cld
gs
sarl
jl
mov
shrl
mov
mov
nop
add
mov
and
adc
mov
insb
hlt
dec
inc
and
xchg
jl
pusha
daa
stos
mov
mov
inc
in
negb
popf
adc
lcall
nop
sub
and
in
mov
or
ss
das
jbe
nop
popf
clc
hlt
adc
outsl
sub
pop
jno
sbb
mov
pop
popf
loopne
and
aad
aas
mov
mov
pop
ds
pop
test
pop
cmp
dec
push
sub
pop
mov
rcrb
push
inc
and
popf
and
xor
xchg
shr
xor
xor
mov
sub
pop
mov
sub
add
ret
outsl
loop
rorb
ret
aas
dec
or
adc
xchg
inc
mov
enter
fwait
aas
dec
and
xor
cmc
pusha
adc
inc
subl
int
fbld
xchg
jo
push
dec
xor
mov
add
cmpsl
arpl
rcl
popa
xor
adc
xor
popf
or
int3
int
mov
cmp
arpl
nop
jno
lcall
pop
cmpsl
dec
mov
arpl
cli
mov
call
or
xchg
xor
fistpl
nop
adc
cmp
dec
jns
stc
push
cld
mov
shrd
dec
addr16
scas
sub
pop
or
inc
jecxz
mov
push
pushf
repnz
cmpsl
sub
jne
adc
dec
shrl
xor
ljmp
mov
inc
gs
outsl
xchg
sbb
test
push
out
cmpb
dec
xorb
cltd
cld
loopne
leave
cwtl
test
add
out
ds
mov
icebp
xchg
inc
jl
xor
mov
out
rcll
xchg
hlt
sbb
xchg
faddl
sub
add
fidivrs
ja
adcl
jno
or
outsl
push
mov
dec
jl
hlt
add
scas
sti
dec
cmp
or
lods
add
or
jo
sbb
add
rol
pop
mov
adc
mov
lcall
arpl
jo
int3
sti
sub
push
lods
dec
jo
adc
insl
push
mov
jmp
cmpsb
addl
movsl
dec
fwait
mov
mov
push
into
sbb
and
les
xchg
dec
or
jle
or
fistpl
movl
cs
loop
pop
lret
and
pusha
mov
cwtl
fyl2xp1
and
les
and
inc
das
or
xor
sub
add
cld
mov
sbb
lret
inc
hlt
idivl
push
std
mov
sar
mov
push
out
and
in
add
xchg
adc
dec
rclb
and
aas
push
repnz
inc
mov
nop
xchg
les
paddusw
and
and
das
mov
mov
add
imul
call
mov
repnz
jecxz
push
push
push
inc
popf
cltd
adc
outsl
sbb
add
in
mov
imul
pop
and
dec
test
rcrb
add
lds
sahf
jg
add
imul
jns
add
stc
iret
add
rcll
xchg
pop
adc
and
les
add
aam
push
inc
dec
and
xchg
jg
shl
pop
pusha
iret
testl
jge
inc
xchg
gs
out
push
movsb
or
inc
xlat
mov
xor
cmpsb
and
stc
and
ljmp
add
xchg
xor
pop
mov
xchg
lcall
data16
sub
mov
jns
mov
and
cmp
fisubrs
sub
lds
mov
loop
inc
test
mov
rolb
add
jge
mov
lods
jne,pn
clc
jbe
movl
cld
inc
ret
sub
sbb
push
inc
cld
inc
enter
sub
push
lds
inc
mov
das
xlat
cmp
mov
cmp
add
es
or
filds
leave
loopne
cmp
sub
xchg
mov
in
in
pusha
sub
out
cmpsb
movhps
outsb
adc
cmp
xor
jo
cmp
add
fwait
aad
cmpsl
push
jnp
nop
and
int3
jle
in
add
nop
ljmp
add
fnstenv
jns
sbb
push
adc
lret
sub
in
mov
shlb
xlat
imul
mov
clc
jge
dec
outsl
or
test
push
add
out
push
movsb
add
xor
adc
push
jnp
repz
push
pop
xor
mov
test
adc
xchg
popa
lods
xchg
aaa
jb
lock
push
cmpb
push
outsl
mov
and
add
repz
add
sbb
bound
push
or
pop
aaa
mov
mov
andb
in
ret
mov
loope
and
mov
das
xor
sbb
jmp
clc
test
enter
mov
jmp
mov
icebp
sbb
add
ja
bound
add
add
mov
loope
repnz
cld
dec
outsb
clc
add
dec
ljmp
sahf
and
adc
pop
add
jle
push
inc
lcall
mov
jl
fldcw
adc
leave
add
inc
mov
push
sub
jno
repz
adc
loopne
xchg
rcll
lret
adc
mov
addb
add
mov
xchg
notl
inc
sub
jle
inc
out
rolb
ds
mov
adc
aas
pop
sbb
push
dec
mov
and
add
cmp
mov
pop
fadds
jne
jecxz
add
cld
lret
adc
cmp
fcoms
leave
sbb
push
mov
push
or
sbb
repnz
add
jg
fiaddl
push
dec
add
pop
pop
lea
mov
xchg
jo
cmp
int
and
adc
sub
fmuls
shl
xor
cmpsl
aaa
test
adc
jne
cld
xchg
movsb
mov
and
rcll
cld
dec
fwait
mov
in
cmp
add
popf
test
sbb
sbb
adc
in
xchg
xchg
notb
and
idivb
inc
jnp
sbb
mov
mov
mov
nop
or
in
add
mull
sbb
sbb
sub
cmp
jo
test
cltd
leave
inc
cld
loope
pop
push
dec
pop
fcmovne
cmp
popa
out
repz
sub
bound
xchg
int3
js
popa
call
mov
enter
jge
adc
or
imul
aam
cmp
or
es
add
sbb
repz
stos
sub
mov
rorb
mov
scas
mov
dec
out
clc
out
push
clc
push
and
push
inc
xor
pop
imul
mov
cmp
scas
or
xchg
inc
daa
loopne
jg
sub
mov
adc
add
add
or
test
sub
clc
push
sub
inc
inc
mov
shll
ror
rcl
fbld
pop
and
jo
pop
add
push
xchg
fs
sub
xorb
pop
testl
shll
cwtl
pop
ret
fistps
mov
mov
in
loop
xor
sti
dec
dec
loop
sbb
cs
mov
mov
addb
xor
mov
jp
add
xchg
dec
jp
or
into
xor
sub
jecxz
mov
testb
call
cld
test
adc
aad
les
pop
xchg
add
push
mov
adc
mov
cld
shrl
and
or
shll
pop
movsb
cwtl
dec
inc
outsl
mov
ror
mov
adc
mov
out
fildl
adc
cmp
add
bound
pop
xchg
pop
xchg
cmc
xor
divb
outsl
cwtl
out
aas
loopne
cmove
gs
add
les
or
or
xchg
lods
test
push
mov
adc
pop
fs
xor
xchg
jns
sub
popa
and
aaa
icebp
fdivrl
push
or
dec
and
mov
fwait
rclb
push
xchg
xor
inc
loopne
add
aaa
flds
jecxz
das
sbb
into
xchg
cmp
shr
sbb
scas
add
and
pop
add
mov
fnstsw
dec
lret
aam
popa
mov
subb
scas
les
adcb
xorb
sbb
pusha
lcall
mov
add
dec
mov
pop
fcmovnb
dec
aaa
inc
js
jno
or
mov
add
and
ret
adc
adc
test
dec
cmp
and
add
inc
loope
mov
ret
pop
sbb
sbbb
jp
test
push
jo
dec
push
gs
mov
cs
sbbl
xor
mov
sub
add
repnz
popa
sub
or
xor
xchg
int3
popf
add
push
xor
repz
add
dec
das
push
inc
test
push
add
xchg
arpl
xchg
cmpsl
jb
movsb
mov
popf
test
cmp
push
fmul
push
ret
push
loop
or
idivb
lret
jl
or
mov
xor
das
aam
stos
imul
je
push
popf
inc
pop
ret
and
cmp
adcb
adcb
ss
divl
xor
shlb
sbb
or
and
test
jno
xchg
fstpt
xchg
movsb
or
mov
mov
adc
pop
sbb
add
xor
add
sbb
xor
inc
add
fwait
add
jbe
jb
add
pop
jbe
pop
aam
testl
sub
aas
xor
int3
and
jno
sbb
jmp
xor
scas
aam
int
sub
pop
in
hlt
add
je
jmp
inc
cmp
push
or
int3
or
dec
decb
add
loopne
cmpsl
dec
dec
int
jge
mov
mov
and
inc
cld
es
in
lods
sbb
dec
xorb
add
aad
xor
repz
jl
cmp
pop
andb
sti
loopne
xor
subb
push
and
sbb
sub
dec
mov
addr16
xchg
loopne
fcoms
loopne
test
loopne
xchg
dec
xor
add
xor
lret
gs
add
imul
push
add
imul
js
leave
sbb
add
in
and
and
dec
rclb
pop
pop
insl
shlb
add
mov
les
add
add
cmp
mov
xchg
sbb
enter
add
or
sub
add
xchg
call
add
stos
faddl
das
shl
test
loop
pop
fcomps
push
push
and
mov
or
test
out
pop
ljmp
jl
push
mov
add
dec
xor
push
jbe
pop
pusha
clc
mov
or
jne
pop
pop
xor
sub
mov
rorl
xchg
xchg
fdiv
fs
sub
ficoml
fadds
scas
fidivrs
sub
aam
inc
shl
adcb
adc
or
outsb
test
pop
pusha
inc
jp
nop
xchg
or
cmpsb
sbb
or
pop
push
sbb
jmp
pusha
ss
ds
add
out
add
dec
xchg
dec
outsl
out
mov
call
imul
js
or
jp
lods
int
pop
dec
lret
repz
daa
aad
and
mov
andb
xchg
in
and
loopne
xchg
or
jbe
adc
or
shll
faddl
idivl
out
lock
int
int3
inc
pop
cld
add
mov
push
xchg
jno
loopne
out
jb
and
lock
mov
aam
popa
iret
sbb
push
add
test
sti
push
xchg
je
xor
mov
or
in
sbbb
add
xchg
das
jg
fdivr
add
push
jae
adc
call
aam
mov
or
inc
dec
pop
mov
dec
sub
mov
lret
jl
popf
aaa
xor
pushf
hlt
int3
cwtl
loopne
or
repz
and
cmpsb
add
jnp
aad
mov
mov
or
mov
lret
mov
xlat
test
sbb
adc
lcall
scas
and
movsb
test
cmp
add
int
add
mov
pop
pop
sbb
add
jecxz
loop
xor
js
add
mov
cli
negb
daa
sti
add
xchg
das
jnp
add
mov
call
sub
shr
out
push
pop
or
repnz
add
xchg
jne
or
xor
xchg
pop
hlt
mov
jno
cmpb
add
mov
dec
jae
mov
cmp
addr16
mov
loope
xor
shlb
push
add
jl
mov
mov
or
arpl
fwait
and
pop
xchg
push
and
aaa
pop
and
push
add
inc
pop
jmp
mov
dec
outsl
js
jg
xor
inc
mov
cli
add
mov
arpl
xlat
sbb
push
decb
jl
and
dec
and
xchg
sub
pusha
arpl
das
add
dec
into
add
leave
shr
fwait
stos
or
xchg
fstp
stc
nop
add
sti
pop
jns
popa
sbb
mov
clc
pop
fbld
sub
clc
pop
mov
aas
pop
sbb
and
inc
test
cmpsl
dec
adc
inc
and
mov
les
negb
pusha
int
imul
xchg
pop
and
repz
in
lret
ljmp
mov
js
ds
imulb
lret
cli
xadd
dec
jecxz
test
jns
add
test
jno
jmp
add
lea
cwtl
pop
or
loope
mov
aas
inc
cwtl
add
fwait
inc
popf
xor
mov
xchg
cmp
push
push
enter
push
inc
sbb
sub
or
stc
loop
shrb
test
test
adc
int3
lret
dec
or
mov
fadds
icebp
mov
cwtl
add
add
adc
enter
cmp
add
sbb
mov
movsb
popa
loope
loop
xchg
adc
outsl
test
lods
mov
test
pop
mov
dec
xor
jecxz
push
sbb
into
aaa
mov
ja
sub
dec
aas
ds
pusha
jae
dec
sub
xchg
xchg
mov
sub
and
enter
pop
call
add
aad
mov
mov
pop
inc
das
pop
repnz
or
jl
les
adc
subb
in
mov
xchg
sbb
gs
sub
in
mov
sbb
sub
stc
lret
cmp
add
loope
or
and
ljmp
cs
and
shlb
inc
fsubrs
jl
mov
rcll
imul
mov
xchg
mov
inc
imul
aad
adc
mov
aam
js
in
roll
popf
popa
cwtl
aad
fwait
cmp
aam
enter
shlb
push
push
add
fsubs
inc
test
pop
adcb
rcrb
ret
or
push
es
sbb
add
pop
ret
stos
sahf
cltd
into
and
popf
enter
addb
arpl
addr16
add
pop
xchg
nop
dec
out
mov
arpl
add
and
pusha
cld
sub
inc
pop
das
xchg
les
xchg
mov
cmp
rorb
loope
int3
or
jns
test
pop
add
fsub
mov
sub
jo
push
stos
arpl
leave
add
call
pop
sbb
sahf
jns
pop
mov
test
iret
movsb
mov
shlb
and
add
dec
ja
adc
hlt
cmpl
cmp
mov
xlat
cld
or
add
movsl
jno
sub
decl
mov
mov
iret
mov
jo
repz
ss
dec
mov
outsl
rcrb
xchg
add
xlat
mov
add
pop
mov
add
js
jb
daa
or
and
cmp
mov
imul
adc
or
cli
shll
push
dec
jb
daa
push
ja
add
pop
sbb
add
flds
js
ljmp
daa
pop
or
mov
add
cmp
and
cmp
jl
mov
enter
sbb
jg
enter
cmpsl
sarb
decb
dec
mov
inc
sbb
pusha
xchg
cmp
hlt
fs
inc
dec
sbbb
pop
xor
xor
cmp
pop
jb
mov
cs
push
rclb
mov
stos
or
rcrb
push
fisubl
or
lods
test
adc
mov
pop
xorb
test
rolb
cmpsb
insb
loopne
fisttpl
jecxz
ret
sbb
push
mov
inc
push
rcrl
and
and
mov
fistl
pop
cmp
push
sbb
inc
movl
shlb
subb
dec
bnd
pop
roll
mov
adc
sbb
testl
imul
jmp
fisubl
mov
jg
sbb
cmpsl
enter
aaa
sub
jmp
rcl
push
fisubl
inc
daa
push
xor
and
sub
aam
adc
mov
movsl
inc
jbe
inc
popa
jb
xchg
aam
jo
pop
sti
xor
sub
test
insb
inc
mov
imul
ret
int
xor
aam
mov
xor
jg
dec
xchg
jae
stos
mov
xchg
orb
andb
ljmp
repz
aaa
xchg
loopne
pop
loopne
pushf
adc
das
dec
mov
cmp
enter
mov
jmp
mov
pushf
gs
and
xor
dec
das
add
and
sbb
add
lods
mov
sub
cld
xchg
xchg
inc
lods
cmp
call
push
add
jo
mov
popa
inc
lods
es
clc
jo
loopne
pop
add
add
in
inc
sub
mov
dec
inc
mov
fbld
repz
xor
add
mov
adc
mov
add
imul
arpl
pushf
int3
das
pop
fdivl
sbb
test
mov
adc
dec
pop
or
nop
movsb
out
jp
add
test
add
enter
xor
outsb
inc
or
test
ljmp
mov
push
shrl
and
dec
ljmp
hlt
ja
add
sbb
mov
and
ret
mov
hlt
mov
mov
lock
pop
inc
mov
test
in
scas
pop
lret
fistpll
mov
push
xchg
loop
xor
mov
test
out
jle
jno
mov
iret
jo
jmp
push
xchg
pop
repz
pop
xor
add
pushf
mov
xchg
cmp
mov
pop
add
dec
mov
push
fwait
aad
fnstsw
adcb
add
jg
popf
xchg
les
sbb
rorl
xchg
jnp
loopne
fs
scas
dec
adcb
movsl
xchg
add
push
pop
dec
cmp
cwtl
es
enter
inc
mov
mov
movsb
or
mov
xor
pop
and
shlb
aad
push
add
imul
push
pushf
pop
inc
jno
adcl
push
test
fucomi
pushf
fsubrp
ds
dec
sub
adc
inc
jo
loop
push
jmp
add
leave
mov
arpl
lea
mov
jg
pop
test
xor
jle
daa
add
push
cmp
cwtl
lret
xchg
cmp
mov
cwtl
scas
add
rorl
cmpsb
in
rol
filds
jp
jo
ret
loopne
adc
adc
sti
push
shll
gs
pop
mov
or
andb
shlb
rolb
sarl
arpl
cmp
jecxz
lret
sbb
xor
sbb
cld
imul
jns
repz
popa
in
sarb
mov
xchg
pusha
push
push
xlat
daa
ret
push
add
dec
dec
pop
adc
ficoms
inc
insb
jno
push
sbb
loop
adc
mov
or
not
ret
adc
das
xor
add
fbstp
in
fwait
lahf
inc
int
cltd
movsl
int3
in
mov
xchg
push
xlat
push
addb
ljmp
cli
push
test
dec
clc
out
mull
lcall
movsl
xchg
nop
int3
inc
out
es
fadds
dec
xor
movsl
out
aaa
shll
xchg
sub
in
loope
insb
mov
or
sub
in
std
push
xor
jp
xchg
std
rcll
mov
adc
dec
mov
mov
xchg
add
cmp
inc
es
and
and
aaa
jp
imul
bound
in
ds
enter
daa
cmpb
mov
push
pop
cmpsl
fs
cwtl
inc
add
and
ret
add
mov
cmp
mov
js
mov
mov
xor
cmp
in
push
loop
jl
push
arpl
pop
dec
lods
ljmp
in
mov
pusha
push
lds
sbb
stos
cli
mov
inc
pop
add
mov
insb
or
aam
jecxz
std
loopne
outsb
mov
jno
xchg
dec
pop
add
mov
or
insb
add
dec
jnp
jo
loopne
or
mov
sub
add
push
lahf
in
add
fs
loop
jecxz
cmp
bound
std
pusha
pop
pop
adc
ljmp
rcrl
sub
mov
and
push
adc
movsl
movl
in
mov
adc
fs
gs
mov
bound
inc
xlat
or
xor
loopne
and
sbb
push
mov
mov
push
mov
pop
adc
out
or
push
push
in
adc
popa
cld
add
and
aas
cli
add
daa
pop
push
les
mov
jnp
inc
rclb
das
fisubs
imul
fnstenv
dec
dec
mov
divb
mov
sub
loopne
mov
add
fsubrs
lock
jo
fidivrs
push
xchg
inc
int3
sbb
adc
notb
loopne
mov
add
rcl
daa
sbb
xor
clc
pmulhuw
xchg
push
outsl
xor
icebp
dec
adc
jge
jmp
das
repz
movsb
clc
test
or
cmp
adc
add
call
pop
xor
jo
divl
fs
adc
shrl
xor
test
push
xorb
lret
cmp
enter
mov
rolb
pop
faddl
inc
hlt
sbb
cmpsl
cld
pushf
out
fadds
cmp
push
aad
push
add
cltd
adcb
out
outsb
xchg
out
xchg
inc
pop
pusha
cmc
out
add
in
xchg
xchg
xchg
aas
inc
xor
pop
data16
inc
xchg
cmc
in
push
mov
pusha
adc
pop
pop
pop
test
jp
hlt
fadds
ds
test
pop
idiv
pop
test
and
xor
or
in
sbb
or
push
cld
inc
inc
add
fcomps
pop
xlat
mov
dec
push
mov
add
imul
push
sbbb
sahf
cwtl
aas
sub
rolb
cld
mov
loope
test
fcom
add
gs
ret
adcb
pop
mov
repz
dec
test
and
push
mov
push
rolb
pop
gs
sbb
mov
inc
push
sahf
inc
clc
jmp
pop
sti
cwtl
pop
movsb
daa
adc
fiadds
pushf
cmc
lock
mov
add
mov
mov
push
push
scas
xchg
loopne
aam
adc
adcb
pop
add
pop
shr
mov
inc
inc
jg
jge
lock
jmp
lret
xchg
ljmp
psraw
or
mov
in
sbb
pusha
filds
cs
test
pop
cmpsl
sub
repnz
and
js
shlb
aad
data16
aas
pop
push
pusha
pop
daa
add
and
cmp
test
pop
das
aas
push
push
jmp
push
jo
jmp
inc
xor
pop
shrl
add
aaa
pop
popf
pushf
mov
popa
je
add
cltd
xchg
in
cmp
or
daa
js
inc
dec
pop
daa
and
data16
fldl
aad
or
jae
cld
dec
push
pop
jo
mov
dec
pop
inc
sub
xor
or
ret
popa
dec
mov
dec
dec
cli
int3
neg
or
dec
xchg
movsb
loop
add
pop
arpl
andl
dec
adc
xchg
mov
scas
leave
cwtl
rcl
pop
cmpsb
inc
add
adc
pop
sbb
cmp
and
push
jmp
mov
int
sbb
jbe
jle
in
push
loope
mov
fists
xchg
add
movl
cmpsl
bound
pusha
cmpsl
repz
gs
add
aas
dec
iret
push
inc
add
pusha
pop
mul
rolb
or
repnz
push
fwait
cld
cwtl
pop
dec
aaa
adcb
subl
sub
cld
mov
mov
xor
aas
or
notb
jbe
jmp
jbe
andl
aaa
ja
cmp
dec
pop
fisubrl
call
jecxz
or
add
shll
and
outsb
cmpsl
loopne
leave
sub
fimull
loop
test
pop
inc
push
jmp
fstps
aad
int3
dec
nop
add
lret
pop
aad
dec
orb
pop
dec
faddl
jno
cmpb
and
les
roll
shlb
push
sub
mov
inc
data16
out
gs
or
nop
or
cmc
xchg
loopne
into
shrb
in
ljmp
test
in
sub
insl
mov
push
shl
cmp
sbb
das
mov
cwtl
movsl
adc
sub
adc
xor
and
add
push
loopne
mov
addb
xchg
shrl
pop
mov
inc
mov
daa
add
xchg
pop
pusha
icebp
cs
rcrb
das
mov
add
rclb
cld
jns
add
rorl
push
aaa
hlt
xor
das
push
pushf
icebp
fs
inc
xchg
das
int3
mov
pusha
andb
add
push
in
and
jg
dec
or
and
imul
insl
mov
push
dec
fs
dec
popa
inc
sub
rolb
xor
cld
add
mov
xor
clc
xchg
sub
mov
mov
cmp
sub
and
push
push
insb
cmp
cs
jno
iret
or
mov
dec
lock
sbb
xor
ss
mov
pop
add
xchg
or
push
loopne
push
int
adc
adc
push
add
loop
xchg
jae
or
sub
jmp
add
push
jle
cmp
sub
xor
xchg
popa
das
in
cmp
fisubrl
mov
or
fdivp
divb
dec
mov
mov
ds
push
test
jo
push
mov
sbb
notb
loope
mov
nop
xchg
jnp
add
and
push
das
push
inc
loop
add
popa
dec
push
enter
rorb
lret
mov
jl
and
pusha
iret
xor
cmp
out
das
pop
xchg
aam
pusha
fstl
fsubr
cs
xor
mov
xchg
pushf
and
nop
sbb
faddl
and
lock
or
loopne
movsb
push
sub
push
inc
std
mov
adc
rorb
das
lret
nop
sbb
nop
insb
mov
pop
sbb
out
pop
jmp
cmpsb
xchg
and
xchg
aam
mov
push
mov
push
nop
loopne
addr16
outsb
pusha
dec
out
out
int3
jbe
xchg
cwtl
or
add
or
and
pop
mov
cmc
add
inc
popa
mov
cmpsl
fldcw
adc
ffree
nop
adcb
cltd
sub
pop
jns
dec
sbb
lcallw
in
nop
cld
popf
mov
push
lret
add
pusha
or
pop
cmp
insb
and
aad
out
mov
or
inc
das
outsb
aaa
hlt
ldmxcsr
les
fdivl
sbb
mov
imul
inc
arpl
lret
push
xor
add
xor
pop
jno
adc
mov
adc
clc
cmp
mov
mov
loopne
pop
sbb
dec
inc
int
pop
pop
mov
outsl
fcmovu
mov
rolb
addr16
push
xor
or
int3
rcr
iret
sub
popf
mov
mov
fwait
shll
les
call
clc
push
cwtl
mov
dec
push
lock
inc
or
dec
mov
sub
ds
test
push
and
mov
jo
mov
pop
sarb
xor
stos
iret
mov
bound
mov
hlt
faddl
pop
sub
stos
push
les
fucomi
pop
mov
mov
adcb
mov
loopne
add
cmp
mov
and
lods
mov
sbb
pop
movsb
loopne
int
imulb
mov
mov
rcrl
rolb
push
mov
dec
outsb
or
data16
or
pop
cmp
pop
xor
jp
fstpt
in
cs
and
adc
lea
or
mov
lret
repnz
test
inc
lea
mov
and
add
mov
xlat
test
int
sbb
shll
je
movsb
shlb
and
sub
mov
nop
fisubs
popa
pushf
sub
js
out
push
or
mov
in
or
imul
pop
mov
pop
fstps
aaa
xchg
cwtl
xor
cmp
sti
xor
pop
loopne
repz
pop
mov
mov
call
cli
fwait
or
daa
arpl
dec
adc
insl
pusha
iret
adc
outsb
fldenv
cmc
add
inc
xchg
or
call
or
sub
mov
nop
jp
adc
adc
das
ss
sbb
in
jecxz
push
aaa
xchg
add
jg
std
lret
xor
push
clc
andb
lock
ljmp
adc
pop
pop
pop
xchg
xor
addl
loope
iret
sti
lret
dec
mov
loopne
sbb
add
xor
test
sbb
push
inc
cmp
out
loop
mov
jns
xchg
clc
les
call
movl
std
mov
mov
lock
add
cmp
mov
add
sbb
fidivrs
aam
repz
or
xchg
rorb
lcall
mov
inc
jmp
fbld
mul
and
or
mov
push
xchg
imul
push
mov
xchg
or
fwait
xor
sbb
add
xchg
push
loope
insl
aam
je
insb
add
cmc
arpl
testl
mov
fcmovnb
push
xor
inc
repz
int3
push
xor
and
cmpl
mov
testb
or
sub
xor
pop
inc
jo
jno
mov
xchg
aad
divl
shlb
jmp
test
pop
xchg
pop
orb
sbb
and
incl
cmp
inc
pop
and
data16
nop
push
inc
push
pop
push
lods
lea
pop
dec
adc
call
or
xor
jno
ret
jg
add
xor
cmp
repnz
mov
and
push
pop
jecxz
or
or
push
xchg
js
dec
je
mov
aas
add
lahf
js
movsb
jle
adc
adc
add
mov
fcmove
repz
nop
xor
xor
sar
pusha
es
ds
in
mov
ret
adc
fldt
data16
inc
xchg
dec
fs
jmp
cmp
add
and
mov
cmp
pop
push
dec
imul
sbb
add
aaa
push
xchg
in
pusha
ja
das
xlat
imul
push
aaa
cld
pop
xchg
push
imul
inc
outsl
cmp
popf
mov
jnp
pop
sub
mov
daa
mov
push
lret
and
sti
aad
lods
and
int3
je
nop
sbb
push
testb
and
frstor
add
scas
push
jb
repz
sub
in
dec
flds
jle
mov
push
mov
mov
inc
or
rcr
scas
xor
inc
inc
stos
pop
sahf
cs
pop
fs
pop
push
dec
testl
fildl
mov
push
das
xor
add
xchg
shl
in
adc
and
sub
lahf
jle
fbld
mov
cmp
mov
js
hlt
loop
nop
rcrb
fistpl
andb
jp
in
mov
cld
repnz
inc
es
ficoms
imul
add
xchg
xor
not
ljmp
or
movsb
nop
daa
pop
add
xor
shll
cmp
loopne
sub
xchg
or
data16
in
push
loopne
shrd
bswap
sub
adc
lret
je
or
std
lock
lock
shufps
xchg
jnp
jb
add
mov
popf
pop
fsub
mov
add
sbbl
mov
fidivrs
xor
mov
cs
test
fdivrs
clc
test
mov
popa
and
je
dec
mov
cmp
mov
mov
lret
jle
mov
rclb
pop
add
ror
daa
sub
nop
cwtl
adc
cltd
or
sarl
ret
adc
rcrl
fcomi
orb
push
sbb
sub
pop
ficoml
xchg
inc
sbb
loop
adc
in
clc
in
pop
mov
movsl
std
popf
inc
pop
push
add
lret
imul
mov
lock
fdivrl
into
dec
pusha
sbb
mov
scas
lret
hlt
xchg
mov
pop
outsb
xor
push
xchg
dec
pop
inc
cld
mov
mov
rcrb
imul
lret
sti
jns
shll
bound
js
dec
dec
mov
dec
rcll
pop
iret
mov
add
mov
jle
movb
arpl
sub
pop
addl
mov
in
add
mov
add
iret
push
les
ret
sub
clc
push
and
sub
add
xchg
fmulp
ds
test
mov
ljmp
cli
frstor
push
data16
sub
and
mov
sti
mov
std
cmp
mov
add
loop
pop
add
or
push
orb
in
or
shrl
sbb
pop
inc
xchg
and
mov
int
jno
dec
mov
jbe
test
arpl
or
sbbb
ret
mov
or
insb
sbb
daa
test
xor
mov
aad
enter
mov
mov
xor
xchg
add
sbb
leave
pop
jmp
adc
out
iret
rcl
mov
into
fwait
or
cmc
add
sarb
or
add
jge
lea
mov
add
push
sbb
dec
je
sub
dec
repnz
arpl
inc
sub
stos
push
mov
aam
dec
sbb
scas
or
les
xchg
mov
cmp
and
int
add
lock
push
adc
xchg
sarl
mov
gs
jecxz
loopne
inc
xchg
idiv
inc
popf
mov
add
cmc
adc
cmpl
dec
jbe
ljmp
mov
fst
add
int
push
adc
adc
pushl
std
dec
xor
add
jmp
lods
pop
cld
jecxz
cmc
subb
pop
pop
ror
cs
and
int3
push
add
mov
lret
add
fwait
mov
roll
mov
jmp
sbb
stos
leave
pusha
mov
jbe
pop
lea
out
dec
sar
je
shlb
mov
mov
aas
mov
add
push
stos
lea
cmpsb
jmp
mov
xlat
iret
jecxz
int
mov
rolb
inc
sbbl
sub
mov
fisttps
xchg
sbb
add
nop
jnp
dec
loopne
jbe
add
push
xchg
add
stos
out
mov
out
adc
mov
in
pop
popa
movswl
fcmovnb
test
add
sub
lods
xchg
push
lock
jae
and
add
jmp
fldcw
push
xor
xor
shr
mov
ret
pop
dec
lock
add
add
out
ss
andl
sub
shlb
sbb
pop
adc
inc
push
sbb
mov
ret
cmp
andl
inc
enter
push
add
inc
lret
adc
add
enter
stos
jp
or
mov
mov
fs
dec
and
push
inc
xchg
dec
nop
inc
es
rolb
push
push
mov
cmp
mov
jecxz
cmp
mov
or
pop
cwtl
and
push
into
loopne
xor
pop
aam
xchg
mov
or
mov
xchg
loopne
ss
fimuls
lcall
filds
push
sahf
aam
jg
sbb
add
clc
nop
push
fimull
add
lea
sub
movsl
pop
aaa
push
mov
das
pop
mov
adc
and
cmp
les
and
fstpl
test
or
dec
jmp
inc
add
int
pop
test
mov
fistl
push
add
pop
or
in
push
or
movsl
rorl
test
les
mov
into
in
jnp
add
enter
insl
mov
fcomps
xchg
cmp
pop
jg
xor
sbb
fildl
sub
jmp
addl
inc
pop
popl
mov
int3
add
add
add
mov
lret
sbb
dec
xlat
sbb
aaa
movl
loop
jmp
pusha
xchg
mov
cld
add
push
in
lcall
hlt
dec
dec
jmp
mov
push
hlt
xchg
pop
jl
ret
cmc
mov
pop
jmp
dec
add
cs
lret
ror
pop
ret
ja
loopne
mov
ret
add
test
and
lret
mov
insl
lcall
icebp
sbb
or
test
cmc
xchg
push
mov
add
ds
aad
and
push
add
pusha
out
popf
fdivrs
mov
in
add
lcall
add
or
popa
xchg
fwait
out
fldenv
mov
jl
inc
pop
scas
lea
push
adc
sub
sub
pop
mov
cmp
imul
adc
pop
add
adc
mov
and
add
mov
xchg
jg
push
ljmp
inc
xor
lret
aad
sarb
pshufw
dec
sti
pushf
and
lahf
or
or
sub
mov
std
cmp
mov
jae
sub
and
cs
fstps
movl
popf
dec
mov
mov
jmp
inc
mov
sbb
adc
sub
mov
sbb
add
sbb
push
push
fdivrs
add
popf
movsl
cs
sahf
fisubrs
js
add
inc
into
fs
fisubrl
xor
ss
mov
aam
add
push
icebp
dec
xchg
shlb
or
xor
fdivrl
movsb
mov
cwtl
pop
in
scas
jp
sbb
dec
add
push
push
xor
and
adc
leave
repz
jg
das
jo
push
and
xlat
pop
in
add
mov
push
stos
sahf
push
pop
cmpsl
pop
fidivrl
add
adc
mov
orl
fadds
and
mov
mov
fs
orl
mov
mov
cli
lret
scas
pop
dec
mov
fsubrl
mov
dec
pop
fwait
adc
and
subb
adc
movb
fcoml
mov
and
or
dec
xorl
push
movsb
add
js
jbe
cmc
dec
and
push
and
adc
xchg
add
lods
pop
pop
jno
mov
aad
pop
lods
aaa
sbb
jg
sbb
add
xor
fcmovne
ret
push
inc
pop
stos
pop
add
ja
cs
js
adc
jae
add
mov
add
cmpsl
adc
cs
jns
cmp
sbb
xorl
dec
mov
sub
mov
es
lods
in
call
mov
outsb
dec
scas
inc
mov
stc
sub
pop
add
das
in
add
cmp
test
daa
mov
sbbb
pushl
pop
addl
icebp
xor
loope
push
out
cmpsb
mov
jns
inc
jo
pop
jecxz
xor
leave
mov
notb
add
cld
pusha
xchg
decl
popa
pusha
adc
dec
out
in
outsb
lret
add
or
cmp
add
test
xchg
and
sbb
daa
les
out
mov
cmc
adc
and
mov
out
jo
popf
scas
sub
jne
pop
jno
sbb
jae
fdivl
arpl
push
jp
pop
add
movsl
cmp
es
pop
mov
sub
pusha
repz
pop
stos
add
cmp
popf
call
cmpsl
in
stos
sub
xchg
add
loop
mov
pop
enter
push
pusha
mov
mov
inc
inc
mov
movsb
mov
inc
add
mov
adc
popf
cmc
lods
cmp
pop
out
outsl
mov
cmp
enter
or
inc
mov
mov
pop
in
xchg
mov
adc
mov
cmc
pop
in
loope
mov
pop
push
pop
push
daa
adc
in
fbld
and
push
mov
mov
int3
daa
test
mov
mov
jmp
fisubrl
sbbb
xchg
push
add
adc
pop
cld
or
insl
push
scas
mov
arpl
add
fdiv
stc
jno
inc
dec
pusha
xlat
outsb
jnp
das
dec
cld
mov
mov
movsl
sbb
out
loop
ror
sbb
mov
jp
add
mov
shrl
dec
rclb
mul
test
lea
mov
stos
mov
and
lea
and
cld
mov
push
sbb
add
or
dec
iret
scas
sbb
cltd
fiadds
aad
jns
iret
inc
nop
ret
mov
cmpl
and
mov
fs
xor
fsts
push
or
mov
pop
add
adcl
pop
out
les
cltd
push
add
adcb
test
adc
push
inc
add
aas
adc
sub
cld
mov
sub
stc
cs
lea
enter
adcl
jae
ret
outsl
outsb
adc
lcall
pop
xchg
push
mov
push
lret
ja
mov
loopne
inc
in
test
mov
js
out
adc
stc
test
dec
pop
jnp
add
push
jae
into
pop
popf
leave
xor
pop
loope
jle
dec
mov
clc
inc
inc
cwtl
cmp
mov
test
loopne
pcmpgtb
mov
stos
mov
testb
mov
cmp
sbb
pop
lahf
sbb
cmp
push
xchg
cwtl
xor
pop
mov
lahf
orb
adc
pushf
or
xchg
adc
sbb
test
add
in
sbbl
stos
call
xchg
push
add
js
dec
xchg
adc
dec
les
mov
fs
add
std
jb
or
xor
lods
pusha
loop,pt
xlat
inc
adc
sbb
mov
je
insb
sar
sbb
pusha
xchg
mov
daa
addr16
cs
sbb
lret
adc
mov
stos
cmpsb
inc
mov
scas
xor
dec
repz
sbb
mov
out
or
mov
das
pop
nop
jns
mov
enter
popf
add
fwait
aas
pop
test
jbe
mov
xor
scas
fsts
xchg
lcall
movsb
add
mov
pop
lods
dec
xor
int
std
cmp
outsb
cwtl
in
and
jmp
xlat
add
push
pop
loop
jno
daa
sub
sbb
adc
pusha
test
sub
add
lret
cmp
ret
mov
xor
xor
popa
je
ss
loopne
and
and
add
out
fwait
jne
sbb
fstps
lahf
repnz
adc
push
xor
add
lret
dec
or
xchg
lret
popa
mov
xor
xchg
nop
pop
aam
shll
push
in
inc
popf
lock
jmp
add
adc
mov
test
in
xchg
jo
jne
arpl
nop
test
mov
sbb
pop
xor
aaa
add
cmp
jmp
dec
hlt
xchg
mov
fisttpll
mov
lea
ret
push
pop
cwtl
das
int3
lahf
add
cmp
mov
mov
ror
or
xchg
aam
mov
andb
lods
lods
jns
push
push
push
xlat
outsl
dec
pop
popa
divl
xchg
in
and
sub
nop
aam
xor
adc
sar
push
movsl
or
pop
daa
jnp
jo
imul
jns
icebp
sbb
mov
arpl
mov
lods
cwtl
popa
push
jns
popf
popf
sbb
clc
lahf
mov
cmpsl
inc
lock
add
inc
aam
in
out
adc
jns
mov
loope
das
outsb
jg
push
sub
and
clc
jae
scas
xchg
adc
jne
inc
popa
adc
jg
cmp
push
dec
xchg
sbb
xor
popf
mov
inc
movsl
std
xor
xchg
xchg
or
jns
mov
or
movsl
xchg
pop
pop
sub
lcall
mov
and
sbb
pop
xchg
sti
jne
pop
or
mov
subl
jno
fcmovbe
push
or
jl
dec
sbb
jl
fwait
ret
sbb
mov
add
mov
jge
sbb
adc
push
cmpsb
jl
lcall
pop
je
fdivl
add
adc
lret
pop
pop
outsb
popf
xchg
pop
ss
add
ljmp
and
jb
mov
nop
lcall
mov
adc
ret
pop
ret
xchg
pop
adc
mov
mov
dec
imul
bound
jns
ljmp
sbb
sbb
mov
sbb
js
pushf
inc
jl
in
loop
pop
pushf
or
jo,pt
lea
add
in
les
iret
out
jb
adc
push
flds
pop
inc
or
lret
add
das
push
lods
sti
notb
inc
sbb
scas
inc
pop
mov
shlb
mov
mov
or
add
push
sbb
jb
cmp
push
gs
rorb
jp
cmpsb
pop
xchg
fwait
xchg
inc
stos
sti
in
aam
les
arpl
add
or
add
enter
push
dec
pusha
lock
andb
xor
push
cmpsb
jp
or
loope
popa
add
jne
cmc
mov
pop
pop
inc
add
adc
loopne
pop
in
mov
popa
adc
les
mov
cmp
test
stos
icebp
and
mov
jae
pop
call
adc
out
imul
xor
mov
pop
cs
call
fnstsw
out
mov
lcall
pop
sbb
adc
ret
push
mov
inc
add
cli
sub
add
fucom
inc
aas
in
mov
cmpsb
popf
mov
mov
iret
xchg
or
cmpsl
loope
and
pop
push
xchg
fdivs
sub
loop
add
inc
mov
popf
add
shll
pop
inc
xor
adc
xor
add
jmp
orb
lcall
mov
add
push
sbb
fcoms
xchg
mov
or
leave
add
pop
sub
shlb
les
rcr
inc
js
sbb
filds
jnp
dec
push
stos
test
and
jbe
movsl
sub
lsl
cmp
faddl
fwait
movups
or
std
adc
movsl
dec
fld
lods
bound
add
xor
adc
pop
xor
fildll
daa
and
or
and
ret
cmpsl
in
das
inc
fdivrl
jl
sbb
ss
xor
shrl
lcall
adc
insl
mov
enter
mov
add
jo
sub
lods
pusha
push
pop
rcrl
sbb
pop
cmp
outsb
inc
mov
arpl
movsb
insl
call
pop
cmp
add
pop
push
lret
adc
mov
add
pop
je
jo
int3
xchg
not
fimuls
push
xor
ret
or
xor
lea
shl
mov
xchg
shrb
adc
cmp
xchg
test
movsb
mov
scas
mov
aam
into
add
mov
pop
pop
popa
or
sbb
std
pop
mov
xor
mov
dec
repz
cld
icebp
add
std
push
fwait
je
nop
or
jnp
test
clc
jmp
jns
call
push
das
mov
add
xor
pushf
sbb
test
cltd
xchg
mov
out
push
test
adc
jo
jno
jecxz
dec
notb
imul
adc
negb
arpl
mov
push
rcrl
xor
cld
bound
out
sub
enter
jl
lret
adc
pop
test
cs
mov
xchg
adc
popa
das
pop
jecxz
mul
add
xor
and
pop
xor
and
mov
clc
daa
cmp
or
inc
and
or
sbb
mov
add
sahf
xorb
cmp
in
out
cld
and
test
jne
das
jne
divb
jnp
push
adc
add
aam
je
ja
data16
cmpb
fldt
xchg
rcll
dec
lock
cld
add
int
mov
sub
pop
pop
ret
or
jp
sti
pop
pop
call
xchg
clc
jae
or
pop
xchg
push
or
and
mov
push
aaa
push
push
add
mov
addr16
xor
mov
adc
out
inc
pop
dec
pop
adc
fisttps
xor
ljmp
add
xchg
inc
stos
sub
mov
xlat
fidivrs
add
pop
push
push
jg
mov
loop
sbb
xchg
dec
mov
lret
shrl
cmpsl
aaa
xchg
add
xorb
pop
pop
jmp
fwait
mov
out
sbb
xorb
mov
pop
out
xchg
mov
cwtl
mov
icebp
daa
xor
rolb
cmpsb
loopne
pop
andl
fwait
outsb
loopne
out
popa
jg
lods
rol
jbe
add
cmp
xchg
or
and
icebp
xchg
mov
adc
adc
movsb
js
mov
daa
faddl
inc
fistps
ss
mov
add
insl
xchg
sbb
mov
jb
cwtl
arpl
pop
dec
jne
sub
fldenv
cmc
popa
outsb
and
stos
orl
jno
xchg
cwtl
scas
push
pop
xchg
pop
addr16
lret
stos
dec
xor
nopl
repz
sub
out
mov
dec
in
xchg
xchg
iret
test
xchg
sbb
lret
and
xlat
push
and
sub
out
add
push
cs
add
pusha
dec
into
popa
pop
mov
mov
mov
scas
cmp
add
mov
xchg
xlat
adc
push
pop
mov
adc
fisubs
movsb
xor
ja
bnd
pop
mov
push
add
adcl
repz
sub
jmp
cmpsb
and
sub
push
ljmp
int
loope
xchg
idivb
adc
jle
add
sub
or
lea
ljmp
call
mov
adc
xor
inc
imul
mov
jno
mov
push
es
in
out
cmpsb
add
gs
and
adc
pop
add
mov
xchg
mov
cmp
add
std
psadbw
ja
pop
inc
fstl
mov
mov
rolb
push
imul
shlb
add
dec
cmpsb
push
out
les
inc
mov
pop
mov
cwtl
je
dec
ja
popf
lcall
push
movsb
xchg
cld
loopne
mov
dec
mov
shr
lds
xchg
push
pop
scas
idivb
xor
mov
mov
cmp
testb
sub
pop
nop
xor
mov
iret
mov
push
lods
cwtl
repz
cmc
adc
pop
add
test
insl
rol
int
mov
enter
nop
push
dec
and
jns
sbb
add
lock
sbbb
fidivs
bound
pusha
jecxz
xlat
in
clc
das
sub
insb
loope
jp
ds
add
add
jbe
xchg
push
daa
and
jmp
test
adc
jns
ret
or
popa
les
or
shr
xchg
xor
lret
mov
or
aaa
mov
hlt
inc
cwtl
add
jnp
or
inc
adc
iret
les
xor
jge
iret
pop
es
and
sub
es
cltd
jnp
movsl
out
popf
aaa
cli
add
inc
jg
pusha
dec
cld
xor
add
sub
add
mov
lret
jb
cwtl
mov
xchg
cmp
cwtl
lock
sbb
leave
xor
popf
sub
xchg
pop
orb
daa
mov
push
cmp
add
jg
jne
cmp
mov
mov
or
or
push
lret
add
add
cmp
icebp
cmp
in
sbb
jnp
mov
xor
lock
popa
jmp
jne
mov
adc
push
add
pop
mov
sbbb
lods
mov
fidivrs
adc
std
popf
minps
call
lahf
adc
mov
sub
or
inc
xchg
jp
or
test
stc
pop
pop
call
push
cli
outsb
daa
xchg
mov
aaa
rcl
pop
call
push
outsb
or
pushf
imul
pop
mov
xchg
ret
lcall
xor
xor
dec
insl
xor
sbb
sub
sbb
lods
xchg
stos
or
jae
rolb
sub
pop
or
push
data16
or
std
xchg
js
xchg
insl
push
rcrb
test
gs
je
flds
mov
clc
out
inc
cmpl
rol
shll
movsl
pop
sbb
jl
call
aas
daa
fisubrl
lret
in
lea
mov
js
daa
pop
inc
sbb
jb
push
pop
out
sbb
lar
icebp
sbb
popa
jmp
cmpl
cmp
mov
mov
sub
fwait
jmp
add
xchg
hlt
aaa
mov
sub
das
mov
popf
inc
adc
mov
sbb
adc
ret
dec
xor
or
fdivrs
popa
or
jg
jno
ds
dec
mov
mov
lret
jge
sahf
jecxz
cmp
or
mov
pop
xor
dec
push
mov
pop
add
xchg
push
push
inc
fisubs
push
push
daa
inc
inc
inc
push
aaa
enter
mov
pusha
in
das
mov
xchg
cmp
ja
or
pop
jno
aas
mov
jle
xchg
add
mov
sub
jge
mov
and
push
pop
leave
hlt
lret
push
adc
popl
ja
in
nop
cmp
add
cmpsb
adc
or
adc
test
xchg
mov
xorb
push
inc
sub
into
add
push
fimuls
dec
cmpb
fs
cmp
lcall
cmp
adc
loop
mov
je
inc
in
xchg
cmp
mov
ror
push
inc
add
test
adcl
cltd
outsb
mov
fidivl
lds
insb
lds
dec
fimuls
add
adc
mov
cs
mov
enter
add
stc
or
test
adc
jae
xchg
test
mov
adc
mov
cmp
cmc
lods
mov
mov
jae
jmp
add
inc
add
pop
push
dec
adc
jg
push
mov
xor
lods
push
xor
clc
mov
fnstcw
sub
es
push
or
push
aam
ljmp
and
cmp
dec
and
test
fs
popa
imulb
lock
sbb
pop
les
adc
xchg
inc
adc
sub
ficoms
add
test
pop
add
sub
fstpt
loopne
add
jmp
vshufps
inc
or
jl
addr16
dec
aad
mov
das
pusha
bound
pop
push
xchg
xchg
cwtl
xchg
xor
jle
std
add
xor
lahf
clc
lds
sti
lods
shl
das
sbb
pop
into
dec
mov
sar
sbb
test
popa
scas
repnz
out
add
mov
imul
push
cmpsl
fistpll
or
push
fsubl
test
push
test
mov
add
out
push
xor
sbb
mov
in
adc
push
jb
mov
jle
add
xor
test
mov
aad
cmc
in
push
add
jo
and
scas
sbb
daa
in
mov
fimuls
fsts
loop
mov
mov
mov
sbb
mov
and
push
repnz
lahf
dec
loop
dec
or
pusha
or
fsubs
and
sub
jns
adc
dec
rorl
xor
add
xlat
jne
rcll
push
in
and
sub
push
push
xchg
pusha
sub
adc
imul
adc
jns
mov
mov
inc
into
stc
jbe
inc
inc
pop
push
sti
aam
adc
pusha
mov
mov
pop
add
xchg
mov
sub
insb
notl
add
fisubs
sbb
fsubs
inc
sub
lods
cwtl
add
xchg
sbb
xor
push
movsb
adc
xchg
xchg
mov
movsl
fadd
testb
pop
or
and
add
adc
adc
mov
cltd
or
xchg
adc
mov
push
pop
cld
mov
cwtl
paddd
or
cmc
jp
add
adc
push
push
mov
pop
fldl
mov
push
or
sub
mov
dec
in
add
jecxz
pop
daa
mov
push
jge
lock
daa
add
xchg
mov
ret
or
sub
add
mov
loope
das
loop
xlat
cmpsb
cmc
mov
stc
mov
aas
pop
or
rcr
jl
sub
push
jo
mov
mov
daa
jge
xlat
test
or
cli
fs
movsb
ret
in
lahf
push
loope
js
mov
sbb
adc
popf
jne
popf
pushf
mov
dec
add
sub
push
daa
in
mov
mov
mov
add
mov
loope
movsl
cmc
repz
or
orb
jne
pusha
add
sahf
dec
sub
pop
shrl
cmp
pop
mov
sub
and
jmp
mov
add
jmp
popf
pop
mov
nop
insl
sub
adc
and
jns
sbb
add
or
pop
cmp
repnz
jbe
sarb
and
shl
xchg
insl
into
outsb
cmpsb
js
cmp
fisubrs
fidivl
shl
mov
imul
xor
shl
inc
cvtdq2ps
push
aaa
andb
xor
inc
push
xorl
jl
std
add
push
int3
negl
fnstenv
sub
rol
cli
mov
push
or
cmc
lret
popf
dec
inc
gs
stc
sub
lods
adc
pusha
mov
jns
add
mov
xor
xor
xor
cmp
fisttpl
out
push
cmpsb
jmp
gs
popa
loop
sub
sub
loopne
dec
pop
push
adc
mov
mov
divl
add
and
mov
mov
jg
jmp
cmp
cltd
mov
mov
repz
call
inc
popf
lahf
push
fcmovbe
aas
xchg
and
add
mov
aas
test
stos
jae
lock
into
or
cwtl
mov
pop
out
jle
aaa
mov
or
sbb
xchg
xchg
insl
pop
rorb
test
addr16
repz
fsubrs
mov
pop
mov
jae
cmp
push
xorl
gs
rorl
insl
add
mov
lea
sbb
nop
dec
jae
loope
cmp
add
cmp
jl
loopne
inc
lods
adc
sub
rcll
dec
or
sbb
xchg
xchg
daa
idivl
in
mov
pop
lret
dec
pop
imul
xor
sti
cmp
aaa
in
xor
add
orb
call
cmp
adc
mov
loopne
xor
gs
xchg
pop
fiadds
jl
add
push
mov
xchg
sbb
xchg
add
pop
out
outsb
mov
lret
push
push
icebp
adc
dec
mov
das
xor
andl
xchg
cmp
rorl
aas
push
push
fs
mov
jmp
faddl
cs
mov
cmp
dec
push
stos
aas
dec
pop
mov
sub
mov
les
xor
inc
popf
xor
mov
pop
mov
mov
jno
std
lods
ret
ret
mov
pop
je
fs
call
subb
cld
cmp
stc
pop
xor
xchg
mov
mov
xor
xor
push
mov
xor
adc
ficompl
lods
lods
inc
int3
cmovb
adc
xchg
das
stc
adc
mov
mov
jp
mov
push
add
mov
addl
call
pop
sahf
pop
addl
stos
jge
enter
aas
repnz
xor
inc
add
test
nop
lods
sbb
dec
lret
adc
addb
xchg
mov
adc
addr16
jnp
add
enter
addr16
cmp
xchg
int
rolb
or
pop
nop
push
shll
pop
scas
xchg
adc
mov
pop
test
cmc
add
pop
lcall
sbb
or
dec
jno
popf
sbb
ljmp
test
adc
popf
adc
dec
je
push
add
call
sar
and
lds
test
or
pusha
xchg
fistl
fidivrs
popf
faddl
mov
sti
mov
loope
sbb
scas
mov
stos
outsb
jmp
ss
movsl
repz
mov
pop
mov
xchg
sbb
xchg
int3
inc
aad
scas
pop
divl
jecxz
adc
pop
xor
mov
xor
mov
pushf
cmp
decb
cld
cmp
push
add
lods
ljmp
adc
call
mov
fcoms
jmp
or
pop
in
cmpsb
test
push
cmpb
outsb
insb
and
pusha
mov
mov
fs
inc
jmp
addr16
cmc
clc
add
jmp
mov
loope
fadd
add
mov
mov
adc
push
lods
and
rcr
and
pusha
aaa
out
xlat
add
out
jl
and
and
setge
cmpl
push
adc
push
pusha
pop
testb
and
dec
ja
mov
jmp
in
dec
enter
mov
adc
cltd
dec
pop
mov
movsb
mov
incl
xor
inc
sub
ret
xlat
sbb
cmp
aam
mov
mov
rorl
xchg
mov
ds
mov
int3
call
lock
xchg
xchg
or
xlat
xor
popf
sar
add
mov
push
or
or
lahf
jl
add
sub
xchg
je
and
mov
mov
mov
sub
addr16
insb
lret
jo
or
and
push
std
bound
or
inc
push
sub
dec
mov
cmp
sbb
cmp
addr16
out
add
add
ds
das
xor
lock
nop
dec
pusha
mov
cwtl
cmovg
mov
ds
scas
dec
dec
mov
pop
arpl
not
loop
xor
add
lods
cmp
or
fnsave
and
xor
mov
das
insb
loop
mov
pop
idivb
add
out
popf
aad
or
xchg
mov
cmp
jae
cmp
sub
loope
pop
adc
repnz
mov
add
mov
xor
shlb
and
pop
add
cmpsl
mov
and
cmc
pop
std
cmp
dec
inc
dec
sbb
add
stos
ss
das
adc
and
mov
sub
andl
pop
add
push
scas
xor
pop
pop
sub
sbb
jne
sar
jmp
fimull
jmp
lcall
pop
push
inc
aaa
test
adc
sbb
lahf
adc
cli
add
in
pushf
test
cmpb
jg
push
pop
cmp
cld
xchg
mov
movsl
cmp
push
cmp
inc
pop
jo
xchg
movsb
lods
or
mov
jmp
pusha
incl
mov
xchg
xchg
lahf
and
aas
in
std
movsl
inc
sbb
sub
and
add
cmp
jns
lahf
mov
add
popf
jge
xchg
mov
xchg
xor
mov
mov
in
rcr
nop
fisttps
sub
or
adc
lea
or
add
shlb
cltd
test
add
or
push
stc
popa
xor
push
test
sbb
pop
jnp
imul
in
pop
or
and
out
and
in
mov
add
pop
ss
flds
pop
xor
mov
movsb
mov
shrb
ret
das
or
mov
add
popf
mov
test
xor
out
pop
sbb
jle
cmpsb
cmp
dec
enter
mov
or
popf
and
jle
fcoml
push
daa
int3
adc
adc
mov
inc
test
inc
fstpt
hlt
mov
sahf
rorl
and
and
repz
test
cmp
jnp
test
out
cmpsl
xlat
and
in
andb
sub
int
loopne
mov
or
mov
pop
inc
push
mov
or
je
pop
xchg
cmp
jbe
aam
dec
adc
enter
pop
addr16
push
movsb
xor
sub
insl
sbb
xchg
lods
scas
into
popa
xor
mov
lock
pop
pop
and
nop
fimuls
pop
or
stc
inc
cld
fsubl
out
rcrb
inc
push
std
inc
add
cmp
in
lods
add
arpl
push
jns
push
pop
out
mov
movsb
pop
inc
or
or
mov
lahf
in
push
fnstsw
sbb
lods
or
or
or
xor
pop
loope
jo
jae
mov
xor
out
add
in
lods
fistpll
out
leave
pusha
cmpsb
cltd
btc
ja
pop
or
or
leave
push
lock
mov
jae
lcall
push
sub
push
jge
inc
xor
xchg
mov
cmp
lret
xor
add
loop
sub
gs
add
mov
jle
pop
mov
dec
cld
or
test
fldl
mull
cli
mov
lods
add
fiadds
aas
rcr
add
xchg
sub
add
js
inc
sbb
jnp
add
cmp
push
pop
pop
popa
sub
dec
nop
and
incb
fs
lds
sarl
imul
inc
stos
test
add
lds
and
jno
sub
mov
rolb
idiv
adc
dec
mov
add
stc
aam
nop
push
loopne
in
add
adc
mov
add
leave
mov
adc
repz
test
faddp
dec
xor
mov
pop
aaa
aam
test
xchg
inc
adc
pusha
sahf
aad
out
sbb
test
or
jbe
mov
les
adc
std
or
jmp
out
push
mov
inc
mov
jecxz
adc
xchg
push
dec
das
ret
xlat
sbb
mov
push
push
or
aad
push
push
push
and
dec
pop
lret
push
stc
adc
mov
mov
xchg
add
arpl
das
popf
push
xchg
lahf
mov
jae
scas
push
sub
test
cmpsl
popa
add
imul
fs
add
adc
sbbl
push
aam
fldl
dec
cmp
cmpsl
mov
loope
add
mov
jge
es
inc
add
pop
push
adc
sti
icebp
push
cld
cwtl
lds
jo
in
sub
and
add
gs
sbb
rclb
fnstcw
xor
sub
in
jl
icebp
pop
push
pop
mov
jns
and
lcall
dec
dec
loopne
xor
mov
sub
fmull
sti
adcb
or
scas
sbb
push
mov
sbb
mov
jbe
cmp
pop
inc
or
lea
push
add
popf
jge
add
in
pop
popa
scas
and
xchg
imul
mov
xor
adc
sbb
lock
push
cld
loop
cmpsl
xor
sbb
clc
test
dec
insb
mov
dec
push
mov
xchg
movsl
add
push
sub
sti
fidivrs
mov
stos
shr
and
adc
pop
push
fwait
mov
push
push
push
adc
push
mov
fisttpl
push
mov
cmpsb
int3
and
bound
push
mov
mov
bound
sar
je
mov
adcb
or
lock
aam
cmp
fbld
test
xchg
pop
enter
mov
cs
shl
clc
mov
dec
out
sbb
ljmp
mov
cmpl
add
xor
mov
jmp
mov
mov
cmp
add
iret
or
imul
cmpl
out
lock
loop
add
dec
push
imul
mov
adc
dec
js
lcall
lods
inc
mov
call
aaa
mov
jne
inc
xchg
sbb
inc
add
mov
add
sbb
jo
loope
jmp
rcl
into
data16
mov
les
addl
mov
adc
xchg
aaa
insl
cmpsl
cs
xchg
pop
fimull
cmp
movzwl
jmp
rep
jo
inc
mov
imul
pusha
mov
mov
iret
popa
imul
inc
cmp
add
xor
sbb
cmp
add
and
adc
fwait
sbb
adc
mov
roll
push
jns
and
ds
or
in
ljmp
hlt
pop
mov
adc
mov
sbbb
dec
scas
mov
mov
dec
xor
mov
inc
sub
and
popf
cmp
jle
aam
adc
scas
jbe
fbstp
jmp
mov
xorb
rorl
jecxz
push
lock
xchg
fadds
fldl
adc
mov
mov
pop
pop
mov
mov
add
test
adc
push
add
or
jg
loopne
push
addr16
nop
mov
dec
mov
fistl
pop
push
jge
repz
pop
clc
pop
and
adc
add
int3
int
xchg
or
and
adc
pop
fistpl
sahf
mov
mov
sete
pusha
loopne
aaa
sbb
daa
dec
adc
xchg
mov
xchg
sti
xchg
mov
in
call
test
nop
jns
mov
or
push
jl
or
pop
int
mov
mov
and
mov
mov
outsb
nop
pusha
adc
cmpsb
xchg
push
dec
jno
sbb
sbb
mov
clc
iret
mov
addb
cmpsb
push
mov
xor
fstl
popf
je
sbbb
mov
test
mov
adc
mov
orl
insl
and
cmpsl
xor
outsl
test
faddl
sub
xor
fprem
popa
rcl
cmp
or
sub
or
jo
push
pusha
js
mov
add
fists
cmc
push
rclb
negl
adc
popf
lods
or
and
xor
scas
add
adc
je
inc
sbb
mov
xor
inc
stos
jno
adc
roll
adc
loop
rcl
jge
pop
enter
lods
scas
push
rolb
cmp
fadds
popa
repnz
adc
fisttpl
ret
je
sbb
or
pop
cs
add
adc
test
add
pop
sbb
stc
hlt
mov
out
sbb
lock
das
jmp
add
enter
push
mov
mov
cli
jmp
pop
jb
fld
inc
pop
xchg
call
int
add
call
adc
adc
gs
cmc
shrb
adcb
dec
cmp
add
mov
xchg
into
adc
fidivrl
in
pusha
mov
mov
and
shrb
xchg
push
in
repnz
inc
jb
cmp
adc
lahf
or
shlb
sub
add
cmpsl
xor
adc
xchg
xchg
movsb
addb
xor
popf
sub
shl
xor
sbb
xchg
lret
push
dec
pop
int
cmp
push
jbe
or
pop
xchg
ds
mov
or
xchg
inc
xor
lret
movsl
dec
push
mov
mov
sbbb
adcl
repnz
cmp
pop
lock
add
daa
mov
add
aam
mov
lock
pop
in
push
test
in
jnp
fwait
and
add
pop
xor
test
inc
mov
das
sahf
push
xorb
mov
popf
cltd
stos
data16
call
pop
sar
jo
incl
lret
loop
rcrb
ja
outsl
jecxz
mov
leave
hlt
jae
imul
mov
push
rorl
pusha
push
mov
rorl
mov
mov
adc
rolb
es
pop
pusha
in
pusha
push
mov
adc
cld
jbe
and
and
xor
push
lods
xchg
pop
jb
adc
jge
mov
sub
cmp
or
lret
mov
ret
or
jge
mov
test
faddl
mov
pushf
push
add
add
sub
les
cli
mov
subb
xchg
cmp
jb
sbb
sub
jge
push
push
pop
aam
pop
push
int3
or
cli
jo
hlt
adc
je
clc
loopne
push
pop
xor
xchg
ror
and
fdivrl
push
test
add
dec
inc
add
mov
push
jge
sarb
mov
pop
in
stos
lods
sbb
sub
loopne
es
jno
mov
pop
loopne
pop
jge
xchg
cli
jl
icebp
das
cwtl
adc
mov
mov
adcb
scas
xor
in
mov
add
lcall
mov
pusha
and
and
push
pop
popa
clc
push
push
xor
test
push
or
jmp
pop
push
aad
push
ds
mov
mov
aam
test
fwait
into
sar
pop
pop
and
outsl
mov
jmp
orb
fdivs
shlb
mov
add
mov
pop
mov
aas
popa
cs
pusha
pop
nop
sbb
roll
popa
mov
pop
filds
cmc
sub
push
ss
es
push
pop
jl
aaa
pop
leave
in
push
aad
xchg
inc
idivb
cld
mov
scas
pop
jno
cmpsl
lcall
jp
and
popf
int3
flds
loope
ds
pop
xor
pusha
mov
aas
cmp
pop
mov
lea
cmc
cmp
mov
ds
push
add
and
add
lds
or
jnp
push
adc
fs
push
lea
adc
nop
mov
adc
stos
aaa
filds
push
lcall
sub
cli
add
xchg
cwtl
push
mov
sub
add
push
arpl
aad
mov
xor
cltd
rorb
and
orb
fisttpl
jl
jp
pop
push
jge
adc
mov
pop
sbb
aas
mov
xchg
insb
push
dec
mov
sub
inc
idivl
mov
mov
xchg
daa
frstor
push
fdivs
xchg
addl
pop
add
pop
dec
cmpsl
jp
lret
mov
loop
test
mov
sub
dec
js
and
int3
dec
pop
mov
shll
sbb
in
or
and
and
test
xor
hlt
add
mov
nop
sub
dec
popa
mov
or
sub
ds
cwtl
lods
jno
in
fwait
push
cmp
mov
call
outsb
movsl
and
jge
es
mov
mov
pop
mov
cmpsl
outsb
testl
ret
xchg
popf
lret
lcall
jp
test
ret
jo
pop
lock
jns
add
add
dec
or
xor
nop
or
mov
sub
mov
roll
sub
mov
mov
cmp
sbb
mov
add
jbe
int3
jmp
notl
mov
fucom
push
fcoml
jg
cmp
add
aaa
ds
jmp
mov
call
jno
xchg
inc
out
scas
sub
push
mov
or
mov
jbe
sub
sti
sarl
outsl
and
jbe
out
ret
hlt
xor
xchg
jne
adc
mov
aam
jae
mov
lcall
movsl
pop
test
adc
jg
mov
or
std
jne
sub
xchg
xor
add
mov
pop
in
push
ficoml
cmpsb
mov
je
mov
fstps
pop
dec
pusha
sbb
into
add
aad
stc
popa
xchg
mov
jno
push
cli
dec
sahf
lret
imul
adc
repnz
in
fucomi
mov
xchg
adc
add
mov
sahf
stc
xchg
dec
adcl
test
dec
and
and
add
pop
xchg
sub
jne
add
mov
in
cmp
fwait
mov
test
mov
mov
cld
xchg
jae
dec
pop
iret
pop
dec
cmpsb
fwait
mov
ds
sub
mov
or
test
dec
jbe
dec
pop
adc
scas
rclb
mov
mov
adc
popf
add
in
sub
insb
and
daa
bound
and
jp
jns
add
seto
xor
pop
add
cmp
inc
or
cmp
mov
add
mov
lcall
dec
fsubp
fiadds
jae
cs
popf
adc
jg
jmp
mov
nop
add
inc
sbbl
jp
xor
or
mov
lcall
push
or
or
sub
gs
jnp
dec
rolb
leave
iret
cwtl
and
jg
lods
push
inc
sub
jp
sarl
push
das
and
scas
test
cmpl
inc
pop
nop
fstpt
pop
xchg
adc
fldl
xchg
pop
jmp
inc
sub
pusha
pop
lods
out
xor
dec
pop
ja
mov
cltd
sbb
es
outsb
lea
sbb
mov
loop
add
dec
and
sarl
and
xor
sbb
jnp
add
push
bound
mov
out
push
push
sub
pop
add
sub
mov
xor
jg
dec
and
add
jl
sti
add
ss
jnp
xchg
adc
pop
or
subb
xchg
add
jno
add
jbe
movsb
inc
and
push
jp
add
mov
incl
xchg
and
sub
pop
push
icebp
pop
adc
in
call
cmp
aas
stc
popf
cmpsl
enter
add
loop
imul
scas
cltd
rclb
xchg
in
out
nop
sbb
out
cmpb
into
cs
mov
inc
insl
daa
push
fmulp
cmp
andb
and
popa
stc
and
jnp
stos
ror
aas
cmpsb
lcall
push
jle
inc
xlat
test
jbe
and
div
loopne
popa
das
pop
mov
push
push
scas
dec
add
mov
or
cmpsb
or
add
add
add
xchg
xor
popf
mov
or
enter
mov
inc
dec
sbbb
pop
xlat
cmpsb
mov
push
call
loopne
or
add
mov
or
jno
dec
shl
or
sti
xor
es
jne
or
mov
cmp
loop
mov
cld
xchg
dec
and
sbb
repnz
cmp
or
pusha
sub
and
jle
sar
adc
or
add
call
add
les
mov
xor
cmp
je
xor
sub
mov
add
out
fadds
cmpsl
iret
sbb
add
push
push
cld
cmpsb
mov
sub
out
adc
mov
iret
jecxz
cli
adc
fldenv
fstpt
cmpsb
fldl
mov
scas
inc
rclb
pop
lock
inc
popa
and
clc
lds
add
leave
pop
mov
jp
push
xchg
xor
mov
shlb
popf
inc
pusha
cld
and
andb
adc
cli
jmp
mov
sub
out
mov
andb
jbe
push
push
mov
pushf
lahf
rcrb
aaa
push
add
xchg
fbstp
push
shr
jmp
adcb
daa
cmp
lret
loope
rolb
mov
stc
dec
push
imul
nop
xchg
fldl
and
lret
movb
mov
cmp
call
dec
call
mov
mov
inc
rcr
inc
xchg
fidivrl
dec
repz
adc
xlat
cmpsb
mov
pusha
aam
imul
cmpb
rcrl
xor
add
sahf
addl
das
sub
xchg
adcb
sbb
mov
mov
pop
jg
mov
mov
jae
scas
inc
inc
push
int
rorb
push
sub
sti
outsb
adcl
sarl
pop
or
mov
dec
push
and
test
add
outsl
jge
loop
jmp
dec
and
jns
std
insb
mov
pop
xor
push
out
pop
pop
out
ss
xchg
mov
push
mov
popf
dec
sub
sbb
xchg
fmul
xchg
push
mov
and
scas
dec
inc
adc
pop
cmpsb
movsb
loopne
scas
pop
adc
xchg
out
rcl
js
flds
das
mov
data16
insl
repnz
pusha
outsb
xchg
cwtl
nop
mov
mov
lret
jge
sahf
loope
je
jmp
in
mov
adc
iret
adc
mov
sti
inc
jo
scas
test
xchg
repz
pop
mov
and
mov
sub
ret
xor
fbstp
sub
jmp
inc
sahf
and
adc
sub
cs
not
ret
inc
cmp
sub
out
cmp
fists
sbb
ja
data16
mov
das
lret
pop
icebp
mov
and
cmp
sub
pushf
lahf
into
mov
jbe
jecxz
dec
dec
popa
test
cli
test
mov
push
les
cmp
jns
popf
cmp
repnz
lock
add
mov
stos
test
cli
pop
into
mov
out
add
movsb
add
jmp
xor
and
lods
lret
sub
popa
cld
jle
testb
je
inc
insl
cltd
xor
adc
in
jecxz
loop
dec
adc
xor
ret
hlt
mov
inc
xor
into
cmc
jmp
test
in
cmp
cld
inc
ds
jbe
test
imul
jns
icebp
movl
inc
adc
or
push
dec
outsl
or
sub
sbb
or
mov
dec
roll
lods
inc
add
push
cwtl
push
and
adc
repz
add
fisttps
icebp
mov
call
sbb
mov
jl
fstl
pop
clc
mov
add
cmp
aas
outsl
pop
repz
pop
cs
and
push
add
mov
jne
jo
push
pop
dec
in
jmp
nop
jnp
lahf
adc
add
bound
repz
or
popa
int
fs
mov
mov
add
adc
repnz
dec
adc
mov
in
xor
sub
add
repnz
cwtl
iret
pop
sub
lods
push
mov
xchg
enter
or
enter
shlb
and
aam
popa
pop
imul
jo
fcomps
enter
pop
and
mov
je
or
int
inc
xchg
inc
pushf
add
jo
fmull
imul
push
iret
pop
popa
nop
lcall
or
xchg
mov
add
xchg
cmpl
mov
push
imul
repnz
mov
xor
into
movsl
pop
push
popa
in
fisubl
push
rcrl
fsubrl
xchg
call
pop
cmp
pop
or
inc
inc
xor
ret
push
adc
stos
add
test
mov
cmp
add
loope
data16
xchg
xchg
js
sub
push
add
push
xor
add
sbb
pop
fisttps
imul
rcr
dec
jb
pushf
lea
mov
dec
lods
mov
jg
pop
cltd
push
push
dec
in
pop
popf
adc
inc
pop
and
add
ret
push
sub
jmp
mov
ja,pn
push
inc
inc
pop
sbb
test
call
mov
pop
dec
sub
xor
lcall
cwtl
aaa
pushf
or
dec
leave
xchg
and
in
xor
nop
inc
push
pop
sbb
sub
popf
shlb
ljmp
nop
rorb
cmpsl
es
std
fistl
cmpsb
daa
lock
fs
add
or
sub
or
xchg
stos
cs
or
pusha
or
jb
icebp
or
mov
adcb
and
out
lock
arpl
xor
das
xchg
sub
mov
push
jmp
jl
add
xchg
outsb
jle
xchg
mov
enter
push
sub
dec
jno
xor
xor
in
add
lret
xchg
and
xor
sbb
lods
ret
rolb
lahf
dec
outsb
loopne
mov
incl
lock
cmp
cmp
les
adc
sbb
dec
add
test
xchg
cli
sub
pushw
mov
push
int
into
and
es
jnp
adc
and
movsl
or
mov
outsl
cmp
pushf
mov
pop
testb
shl
out
arpl
dec
or
sub
dec
cmp
add
jo
push
lods
or
dec
add
sbb
cli
dec
or
gs
cmp
fmull
sbb
je
rorb
std
inc
dec
lods
pop
shrl
dec
lods
not
inc
push
xchg
out
mov
add
lock
inc
mov
jmp
or
push
dec
xor
add
je
pop
add
dec
inc
cmp
or
jo
popa
jns
test
loopne
dec
inc
dec
push
test
adc
dec
leave
sub
nop
and
les
icebp
pop
mov
sub
add
nop
pusha
in
xor
lret
pop
cmpsb
push
push
movsb
add
jbe
mov
sbb
rcl
mov
idivl
cld
cld
push
sub
add
cmpsb
imul
pusha
rolb
xchg
mov
pushf
mov
jno
cmp
sbb
jo
test
mov
mov
adc
sbb
sub
add
dec
sar
pop
iret
mov
dec
jne
pop
push
push
dec
jge
xor
stos
mov
pop
and
test
sub
or
or
cld
roll
pusha
push
jecxz
sbb
and
dec
mov
aaa
add
jmp
ret
stos
mov
mov
dec
adc
or
push
pop
fwait
jle
xchg
and
xor
sub
nop
add
mov
add
push
incl
jne
jecxz
mov
inc
push
test
or
push
mov
test
orl
sub
mov
mov
or
and
add
xchg
dec
testb
jne
sbb
xchg
sub
or
pop
mov
jno
mov
aas
adc
inc
loopne
sub
xor
test
mov
and
adc
vmread
sub
xor
mov
cmp
jmp
sar
inc
or
sub
cwtl
push
pop
adc
or
pop
pop
mov
repz
das
dec
cs
xchg
adc
cmp
add
popf
pop
test
stos
jnp
pop
hlt
sbbb
sub
repz
push
movl
jns
cmp
cld
fcoms
sub
fsub
sbb
mov
into
push
or
pop
divl
inc
add
dec
les
int3
jg
out
pusha
add
cmc
ds
pop
rcl
add
cltd
orb
push
mov
inc
and
add
sbb
jnp
pop
adc
xchg
push
add
adc
cmp
mov
mov
rcr
inc
pushf
loope
call
lock
add
inc
test
das
xlat
mov
cli
sar
gs
jmp
lods
push
loop
pop
xchg
sbb
arpl
mov
and
mov
cmp
sbb
insl
ljmp
add
push
adc
and
shl
lahf
in
sbb
pusha
fsts
aam
neg
add
inc
dec
rcll
add
push
cmc
jo
mov
daa
sbb
repz
adc
jbe
fsubr
pop
les
stos
xor
test
frstor
and
repz
add
rorb
xlat
mov
pop
hlt
xor
call
mov
cli
adc
mov
mov
rcrl
scas
jnp
loop
push
ja
fildl
lds
movsb
mov
daa
dec
pop
inc
lds
divl
adc
cmpsb
test
in
jo
pop
daa
cli
sub
das
or
pusha
notl
adc
and
jo
hlt
in
add
bound
lods
rcrl
adc
push
lea
mov
xchg
add
enter
in
sbb
sbb
div
aad
jbe
rol
cwtl
cmp
and
push
in
clc
cmp
fbld
add
fisubrs
lods
add
xlat
xor
roll
aas
fldcw
arpl
and
repnz
fcoml
and
test
mov
imul
shrb
fcoms
aam
cmp
lret
mov
loope
fstl
js
cmpsl
mov
inc
cmp
dec
cmpsb
push
mov
xor
adc
mov
jno
and
pop
mov
notb
xor
adc
or
sub
add
mov
mov
xchg
and
jmp
imul
adc
in
add
movsl
call
and
mov
jge
mov
lock
pop
stc
test
add
daa
add
jbe
dec
jp
lahf
push
stos
cmp
pop
mov
fst
nop
dec
push
popf
mov
shlb
mov
mov
movsl
nop
mov
add
mov
cmp
dec
popa
cmpsb
xchg
push
repnz
das
inc
xor
jg
filds
mov
jns
jle
cmp
fldenv
inc
das
loopne
cld
movb
jl
and
xlat
xchg
pusha
repz
add
mov
aad
lods
popa
or
stos
fisubrs
xchg
ror
xchg
and
cld
sarl
inc
add
int
pop
das
outsb
mov
adc
pop
lock
lcall
loop
add
test
rclb
dec
add
and
xor
pop
popa
inc
fnsave
mov
call
jbe
mov
es
dec
outsb
adc
je
imul
lds
cmp
add
lods
ja
jno
dec
jbe
subb
and
jp
jge
jbe
jno
test
mov
xor
adc
mov
xchg
push
mov
adc
pop
fs
les
mov
inc
push
or
icebp
cmp
aaa
jg
mov
scas
jnp
pop
push
repnz
stc
aas
cwtl
rcrl
andb
mov
or
dec
test
ja
imul
or
jns
in
bswap
push
xchg
xchg
sbbl
cmp
jne
push
nop
aam
test
cmpl
push
xchg
stos
push
mov
xchg
mov
add
inc
mov
cmp
mov
add
push
and
imul
imul
cli
xchg
dec
ljmp
dec
and
jge
test
cmpsb
pop
je
fcmovbe
ret
aaa
fwait
pop
int3
rolb
pop
js
inc
add
jo
jle
add
jbe
ret
js
adcb
insb
add
push
cmp
or
sub
pop
jge
and
add
iret
lds
inc
add
and
jo
mov
cli
fmulp
daa
push
test
fistpl
push
sub
in
fsts
inc
push
insl
cmp
and
jge
test
xor
pop
out
mov
fildl
jne
lods
push
mov
shrb
in
pop
int3
mov
test
sahf
repnz
cmp
cli
movsb
cmc
xor
js
insb
fsubl
fmul
pop
test
xor
adc
fs
sub
in
fbld
sbb
orb
jno
pushf
cmpsl
mov
sub
mov
xchg
xchg
push
cmp
or
adc
mov
xor
pusha
stos
inc
or
stc
data16
not
inc
sbb
in
stos
movsb
leave
adcb
imul
loope
cmp
mov
mov
pop
or
push
imul
jns
adc
lock
mov
and
std
sub
loope
push
and
and
push
fstpl
and
mov
jmp
int
out
pusha
repz
ds
ss
sarl
std
or
jmp
mov
pop
loope
cwtl
cmp
add
mov
jmp
sbb
cmp
add
out
fcomps
sbb
nop
pop
imul
int3
or
inc
or
push
sub
faddl
mov
rcr
mov
das
fwait
call
mov
stos
out
fadd
pop
adc
pop
mov
adc
dec
out
pushf
aaa
addr16
repz
arpl
repz
jo
mov
sbb
enter
in
dec
out
push
xor
pop
js
dec
stc
push
lret
cmpsb
jne
int
fs
fdivl
rcrb
xchg
mov
sti
outsl
add
inc
shll
loopne
mov
fwait
enter
jne
repz
enter
outsl
adcb
hlt
dec
pop
dec
push
pop
mov
and
clc
call
out
loope
jge
insl
in
adc
mov
ss
adc
push
lods
fcom
std
jle
jns
dec
and
push
xor
push
jmp
cmp
add
dec
pop
fists
popa
xor
add
jg
add
or
dec
stos
lds
out
outsb
pop
jl
jmp
xor
repnz
loope
sub
dec
and
out
mov
xor
add
fldl
push
mov
aaa
aas
and
and
add
gs
cmpsb
jo
xor
sub
xchg
into
jmp
into
imul
push
lds
add
and
repnz
add
enter
loope
xor
push
push
stos
sbb
push
outsb
pop
inc
mov
daa
sub
popf
adc
dec
push
mov
mov
outsl
iret
add
push
sub
add
push
divb
jecxz
loopne
fwait
cmp
xchg
mov
mov
pop
inc
lods
stos
mov
int3
add
dec
pop
jecxz
int
mov
xor
sbb
jo
pop
loopne
jl
or
mov
sar
icebp
cmp
inc
fidivl
and
hlt
pop
cld
adc
adc
mov
sti
mov
add
sbbb
push
enter
je
sar
or
es
push
xor
jp
mov
jle
adc
mov
jbe
mov
mov
test
mov
test
fcoms
add
and
add
xchg
addl
in
rorb
push
out
xchg
aas
mov
add
test
dec
xchg
mov
stos
mov
es
ja
cmpsb
xor
mov
mov
jno
add
mov
cmpsl
jbe
dec
les
or
or
call
cmc
nop
and
divl
aaa
cmpsb
pop
or
sub
sub
mov
adc
movl
sbb
imul
cwtl
out
popf
mov
or
or
and
and
mov
mov
mov
push
add
xchg
lock
jmp
cmpsb
aas
movsl
jne
flds
xor
sarl
or
outsl
cmp
fsubrs
mov
lret
fdivl
decl
add
loope
popf
sarb
adc
pop
jl
xchg
enter
ret
mov
xor
daa
test
inc
shl
mov
aaa
add
mov
add
pusha
mov
cmp
test
cmp
inc
jns
adc
scas
lock
adc
and
imul
adcl
mov
sub
mov
xchg
pop
or
adcb
nop
sti
fs
or
add
adc
es
aas
pop
pop
cli
loop
mov
pop
scas
popa
imul
dec
int
pop
push
cmpsl
push
test
dec
shrb
pop
out
sub
mov
gs
inc
ffreep
xor
mov
data16
adc
mov
test
sub
dec
add
scas
iret
sub
fsubr
push
into
sub
popa
sbb
fists
sbb
mov
cmp
pop
fdivrs
enter
xor
pop
inc
rcr
push
ja
nop
add
inc
push
xchg
sbb
add
insl
lahf
or
add
xchg
ljmp
sub
pop
adc
jbe
cmp
or
pop
cmp
mov
pop
push
scas
pop
jp
xchg
jno
xchg
add
nop
mov
add
mov
jp
sub
push
push
inc
and
jns
dec
es
add
jne
movsb
loop
fistl
rcrl
out
cli
push
jbe
leave
out
shr
jle
enter
inc
pop
and
cmp
inc
xchg
lods
pop
jecxz
mov
test
pop
movsl
push
inc
adc
pusha
jmp
adc
js
sar
cmp
mov
push
fnstenv
pop
js
xor
std
loopne
jno
cld
test
push
push
insl
add
iret
and
cmp
lcall
rcr
sbb
xor
imul
mov
xor
mov
push
mov
or
outsb
push
jns
inc
scas
adc
or
cmp
add
arpl
jns
add
lock
sbb
inc
mov
sti
xchg
pop
fcomps
adc
popf
rorl
cmpsl
xchg
daa
mov
jb
adc
popf
xchg
add
arpl
add
mov
cmp
ret
pop
dec
jbe
cs
divb
pop
push
mov
push
lcall
mov
in
add
add
test
mov
jecxz
mov
sub
sub
aas
cli
mov
or
arpl
dec
dec
mov
or
jl
jno
or
jne
iret
add
rep
sub
out
add
rorl
push
dec
jg
inc
cmp
test
mov
pop
adc
leave
xor
shl
push
sub
or
or
jne
enter
rorl
mov
or
sti
xor
mov
cmp
and
shlb
mov
lahf
pop
cld
pop
inc
in
mov
pop
xchg
add
add
dec
adc
fsubrs
xor
stos
inc
je
mov
in
pop
push
xor
jo
pop
inc
cmp
ja
inc
sbb
inc
pop
pusha
loopne
divb
test
or
add
or
jmp
pop
das
adc
pusha
pop
push
popf
mov
xchg
faddl
stos
ja
mov
push
outsl
and
inc
out
sub
insb
dec
push
in
pop
mov
push
and
ja
leave
inc
push
sbb
pop
xchg
repz
lock
in
sbb
jmp
in
add
sub
push
push
test
inc
jle
test
rolb
pop
out
out
and
inc
scas
mov
popf
adc
je
pop
pop
add
rol
fidivrs
inc
popa
inc
popf
sbb
cmp
outsb
inc
aas
push
add
adc
shrl
sbb
inc
aas
out
call
xor
push
push
in
outsb
andl
inc
dec
add
ja
cltd
lret
mov
cld
shl
xor
pop
and
clc
inc
push
sbbb
cmp
pop
add
add
cli
call
and
jno
adc
mov
sub
movsl
mov
pop
mov
mov
loopne
fwait
icebp
fsubs
jne
inc
aad
pop
mov
add
cmp
adc
or
bound
inc
xchg
pop
push
mov
add
jne
push
adc
movsl
out
adc
add
pop
sbb
mov
xor
inc
pop
mov
pusha
adc
cmc
jp
es
jne
addr16
mov
xchg
daa
aam
aad
and
and
subb
je
mov
add
cmpsl
cwtl
add
mulb
inc
add
inc
jns
add
add
outsb
sbb
mov
jg
sbb
paddb
add
es
or
pop
cmpsb
or
mov
fstl
push
dec
xor
add
fs
hlt
fidivrs
push
in
xor
add
push
pop
nop
in
sar
loopne
lcall
fnstenv
lods
add
pop
mov
out
add
push
mov
and
movsl
lock
stos
add
push
add
pop
lahf
or
test
cmc
add
mov
fildll
inc
sbb
addr16
ljmp
pop
lods
or
mov
jns
mov
mull
ja
ret
test
fcomp
xor
pop
jne
dec
jno
add
jns
adc
xchg
sti
test
push
pusha
xor
mov
add
loop
ret
dec
cmc
orl
mov
js
daa
pop
push
xor
cld
push
insl
sahf
mov
dec
xchg
adc
cltd
aaa
mov
cli
adc
in
enter
lock
sarb
out
loopne
ja
add
push
push
bound
jno
movsl
cmp
add
fwait
dec
movsb
out
mov
data16
imul
xor
aaa
lods
add
push
fwait
out
cmp
add
inc
jge
sub
jae
cmp
dec
jle
pop
fcmovnb
mov
jae
add
gs
sbb
xor
adc
mov
jle
in
jnp
jl
and
test
xor
and
cmp
insl
repnz
jb
and
push
int
fsubrs
or
ret
jp
xor
cmpsl
inc
and
adc
repz
mov
int
mov
dec
pushf
out
dec
add
dec
mov
push
rorl
pushaw
xchg
out
lret
sti
outsb
xchg
add
pop
sub
jle
int
sbb
xchg
scas
jmp
fcomip
and
frstor
push
loop
add
push
mov
and
ja
inc
jbe
and
xchg
push
sbb
inc
mov
mov
mov
push
scas
lock
jp
sbb
jo,pn
sbb
xchg
add
movsb
ds
sahf
repnz
jmp
mov
jo
sub
cmp
add
shll
xorl
hlt
add
jge
roll
sbb
jle
ja
int3
call
or
enter
cmp
lea
dec
pusha
mov
dec
nop
popf
out
cli
pop
test
jp
adc
or
push
dec
fisttpll
fildl
xchg
jmp
cmp
xchg
and
push
push
movsl
add
repnz
inc
sub
pusha
cmp
or
or
cld
cmc
ljmp
pusha
stos
sub
mov
add
scas
negb
add
call
mov
add
aaa
add
out
rcrb
test
adc
sbb
fdivl
js
shrd
inc
add
jne
outsb
add
push
jl
out
das
xor
xor
add
ds
mov
adc
add
pop
mov
fistpl
xor
pop
dec
push
cmp
mov
cmc
push
iret
jge
xchg
icebp
sub
cli
sbb
in
inc
lods
outsb
movsb
fidivs
leave
ficoml
sub
inc
iret
lods
sbb
mov
pop
pushf
ss
adc
outsl
mov
pop
xor
push
sbb
jle
sbb
inc
cmp
inc
pop
addr16
mov
add
jno
shll
add
push
add
dec
dec
push
push
dec
nop
xor
lds
cwtl
inc
hlt
dec
fs
imul
js
adcb
pop
adc
les
in
add
inc
mov
hlt
dec
inc
movsb
pusha
subb
lret
xor
inc
inc
test
xchg
add
popl
sub
out
cmp
inc
test
add
imul
pop
rcrb
lcall
push
mov
add
mov
lret
adcb
jp,pn
mov
cmpsb
call
into
add
xchg
les
pop
pop
cmpsl
add
and
and
push
int3
imul
bound
jo,pt
mov
imul
add
data16
mov
mov
outsl
xorl
pop
inc
push
lahf
repz
lret
cmp
mov
daa
jae
clc
insl
and
add
fcomi
and
les
sbb
or
pop
nop
sub
mov
xor
fs
movsb
or
mov
hlt
pop
push
push
movsb
fildl
cmp
and
scas
cli
pusha
mov
sbbb
mov
pop
loope
nop
or
out
xorb
xchg
mov
lods
add
rolb
push
add
adc
and
mov
jmp
je
test
xchg
xor
xlat
pop
push
pop
mov
leave
mov
xor
cmpsb
mov
cmpb
inc
mov
mov
sub
inc
pop
popa
add
jo
test
push
bound
xor
add
decl
icebp
add
mov
les
inc
xchg
xor
cltd
and
call
push
repz
addr16
dec
push
push
pusha
cltd
icebp
imul
or
push
jg
testb
loope
aas
cltd
fildl
mov
xchg
and
and
mov
out
lds
pop
jb
sti
adc
aam
push
mov
push
jae
cmc
dec
cmpsb
ljmp
sbb
lods
xor
jge
jecxz
xchg
add
rclb
pop
es
xchg
pop
divb
outsl
jbe
fists
inc
xor
icebp
mov
push
mov
inc
add
jecxz
lahf
add
cmp
inc
inc
sbb
sbb
mov
sbb
add
mov
add
inc
mov
push
jno
cmp
mov
imul
mov
scas
pop
jecxz
loope
pop
xorl
testl
leave
lahf
xchg
negb
push
fldl
xchg
xlat
orb
inc
test
aas
pop
pop
cli
add
xlat
sub
adc
in
add
jl
jbe
or
inc
call
pop
xchg
pop
mov
out
stos
xchg
add
imul
cmc
sub
dec
nop
add
xorl
or
or
ds
xadd
pop
pop
ja
jne
mov
push
sub
xchg
push
cmc
or
mov
iret
fldenv
inc
out
inc
mov
mov
int3
sbbl
sti
mov
mov
mov
hlt
aas
out
inc
lcall
add
call
cld
push
cwtl
dec
int
pop
cs
repnz
sbbb
cld
adc
les
je
rcr
add
fwait
stos
movl
stc
cmovs
out
stos
add
lock
sbb
jb
loop
jmp
pop
and
sub
fwait
cmp
push
push
pop
std
fildl
xchg
push
jo
sbb
mov
dec
rcr
sub
mov
and
jns
test
xchg
cmp
jnp
loop
mov
lds
add
push
das
jae
flds
sbbl
sub
lret
pusha
xorb
in
aaa
popf
mov
rcrb
nop
pop
cmp
insl
scas
cltd
pop
or
add
mov
pop
sub
stos
inc
lods
or
mov
dec
rcrb
cld
xor
stc
subl
xchg
cmpsl
push
pusha
mov
push
testl
push
in
add
sbb
jne
mov
jno
aaa
jo
jns
jl
push
lock
in
call
add
jmp
mov
pop
in
jnp
pop
sub
or
rol
add
sbb
in
fwait
push
in
stos
popa
stos
pusha
push
jle
pop
fisubrs
mov
gs
xor
xchg
aas
cmpb
imulb
add
aaa
or
rorb
jae
jmp
lret
push
insb
adc
dec
loopne
stos
xor
xchg
push
rorl
and
pop
ds
or
pop
inc
and
pop
cmp
push
and
fldenv
fdivrp
ret
in
or
xchg
movsl
insb
push
jmp
jle
jg
xor
aad
xor
cmp
mov
mov
rorl
sbbb
mov
jg
add
or
xchg
mov
dec
dec
pop
xor
pop
stos
sub
shl
xchg
fimuls
ds
ficoml
pop
cvtps2pd
push
pop
idivb
dec
fsubrp
iret
je
mov
cmpsb
and
add
and
cltd
lods
ret
xor
dec
sbbb
xchg
pop
sub
lahf
or
or
imul
sub
and
xchg
icebp
inc
pop
add
inc
shrb
add
mov
cld
int
mov
sarb
push
add
dec
enter
xchg
or
dec
dec
pop
cmp
test
imul
ljmp
cmpsl
mov
fimuls
cmpsb
shl
out
push
add
addr16
scas
pusha
adc
jo
leave
cmp
xor
and
nop
dec
filds
mov
arpl
pop
fs
push
sub
sbb
les
sti
push
pop
xchg
add
bound
sbb
test
icebp
or
and
mov
inc
mov
lods
loope
sub
add
fdivl
or
sub
mov
pusha
push
inc
jle
cltd
sbb
add
test
call
imul
dec
jle
shr
xchg
add
push
js
pop
loop
cmp
sbb
ljmp
mov
mov
out
inc
mov
xchg
aam
mov
or
inc
js
in
fiaddl
clc
movsbl
or
fsubrs
xlat
out
push
cmp
push
jl
push
insb
adc
js
fs
cmp
inc
add
adc
mov
mov
xor
add
ds
rolb
xchg
imul
insb
xchg
mov
sub
ret
add
lds
fwait
mov
adc
icebp
leave
adc
add
hlt
and
insl
add
aas
mov
and
inc
pop
roll
ret
mov
cmp
xchg
ss
cli
dec
outsb
fwait
mov
mov
sbb
and
jmp
rorb
mov
cmc
dec
gs
lods
das
push
mov
loopne
leave
inc
sub
and
mov
push
push
jl
adc
add
push
cmp
add
adc
push
mov
pop
push
and
subl
push
mov
mov
popl
cmc
mov
or
outsb
shlb
sub
push
psubsw
clc
into
jno
dec
in
in
mov
add
clc
loopne
add
xchg
xor
adc
xor
add
mov
sub
adc
test
xor
shlb
cmp
ss
in
inc
push
int3
andb
dec
xchg
in
fisubrl
leave
xchg
outsl
mov
out
hlt
fs
sti
mov
pop
xlat
dec
sbb
stc
dec
cmpl
mov
stc
mov
push
movsl
push
fldenv
push
in
mov
mov
leave
mov
cmpsb
push
outsb
mov
xor
mov
sub
push
mov
in
lods
rcrb
add
pop
lea
push
test
cmpsl
inc
mov
mov
inc
xchg
bound
xor
add
lahf
out
loopne
push
mov
rcl
add
mov
pop
adc
testl
fiadds
inc
xor
mul
mov
in
pushf
pop
daa
push
pop
hlt
psrlq
pop
inc
push
adc
adc
sub
push
adc
adcl
rcll
pop
outsl
movsb
adc
and
jmp
js
popa
or
dec
cli
pop
push
out
xchg
insl
cmp
cmp
push
jp
out
sub
add
sti
sub
fdivl
loope
xlat
aas
sbb
nop
sbb
jmp
fnsave
adc
in
mov
popf
push
mov
mov
mov
mov
nop
inc
and
xchg
or
adc
mov
add
pop
je
mov
pop
sbb
push
jne
test
orb
sub
mov
push
push
pop
and
or
jae
add
sti
out
and
ljmp
and
daa
jbe
shl
in
jle
lahf
adc
fcomps
shll
cld
in
cmpsb
mov
pop
sub
in
enter
and
add
cld
mov
aam
mov
lcall
int3
jne
xchg
dec
mov
dec
add
xlat
adc
std
pop
xchg
xchg
stc
lods
inc
addb
jae
cmp
clc
jecxz
mov
sub
mov
jns
inc
pusha
push
xchg
stc
mov
mov
jmp
iret
jl
outsb
cmpsl
adc
fcomip
cmp
pop
xor
mov
xor
fnsave
adc
lock
mov
bound
fidivl
add
add
mov
hlt
inc
xor
or
clc
push
adcb
hlt
pop
add
sub
scas
jb
cmp
cmc
movsl
and
lahf
in
sbb
jg
adc
or
jo
pushf
add
test
into
push
sub
push
sbb
cs
sbb
out
fsubs
mov
adc
pusha
pop
mov
clc
jne
jae
insb
outsl
and
dec
orl
cmp
std
jo
xor
sub
int3
popf
ret
test
les
adc
js
pusha
add
mov
popa
pop
mov
inc
fwait
add
out
xchg
mov
xchg
lods
push
lahf
adc
push
movsb
jg
xchg
sub
test
notb
push
mov
or
sbb
pop
sub
add
jg
lahf
fldt
mov
xor
add
adc
jo
dec
gs
pop
in
xor
lea
test
scas
or
add
mov
dec
mov
pop
cltd
add
loope
fldl
adc
xor
or
ljmp
sub
ss
add
pop
jmp
out
pusha
mov
dec
dec
clc
out
inc
adc
jae
push
push
mov
mov
stos
push
mov
inc
sbb
or
mov
add
rorl
arpl
adc
sbb
lods
sub
lds
cmp
pop
fmuls
loope
out
scas
aad
popa
pop
pop
lods
and
add
or
in
jg
and
out
sbbl
push
add
jecxz
ja
jg
push
cwtl
jnp
imul
outsl
aaa
pop
cmc
pop
xor
movsl
adc
mov
imul
mov
inc
sbb
cmp
push
pop
stc
sbb
push
addl
adc
jg
aaa
xchg
popa
mov
mov
adc
test
inc
cmp
sub
fistpll
mov
lods
es
mov
mov
lret
imul
flds
or
popf
mov
fists
inc
popf
dec
sub
sbb
dec
sbb
push
xchg
cwtl
jae
dec
scas
mov
cmp
je
jge
xchg
push
add
fwait
scas
addr16
in
xchg
and
add
sub
adc
xor
adc
add
dec
pop
cmp
xor
jle
push
das
insl
and
and
leave
in
push
fistps
xor
faddl
and
sub
sub
push
pop
das
xchg
pusha
cli
xor
dec
sbb
cmp
rcl
movsl
icebp
sub
imul
or
add
push
or
mov
jno
addl
dec
xor
loope
mov
mov
sub
xchg
lds
test
adc
rorl
popa
xor
pop
test
cmpsb
in
and
jmp
outsl
dec
xor
fcmovnu
add
sub
push
stos
sub
data16
jns
lret
cs
cmp
cmp
and
arpl
mov
push
add
hlt
icebp
lret
mov
cld
sub
add
sub
sarl
add
lods
jle
sub
leave
cld
add
xor
adc
adc
jo
dec
sar
mov
test
jnp
test
lock
lret
or
pop
sub
roll
loopne
test
mov
or
push
inc
push
insb
stos
dec
adc
stc
xchg
mov
add
jg
mov
jno
and
out
sbb
xchg
pop
mov
fwait
mov
pop
out
daa
mov
aad
fdivs
xchg
push
sbb
xorb
pushf
or
mov
call
and
adc
stos
stos
fisttpl
rolb
dec
add
push
mov
in
jg
dec
add
xor
repz
scas
xchg
sarl
add
aas
jbe
add
xchg
jge
pop
add
data16
gs
add
ss
push
add
pop
jg
imul
jle
pop
loop
faddl
lock
jmp
cmc
stos
pop
mov
or
inc
sub
daa
and
jbe
push
das
jbe
lret
jl
inc
mov
or
or
faddl
in
js
fldcw
mov
sti
pop
lret
xor
out
imulb
insl
je
dec
xchg
outsb
jle
and
das
data16
push
mov
into
push
dec
push
add
icebp
xlat
out
xchg
sub
or
leave
add
xor
xchg
lods
pop
icebp
and
insb
dec
sbb
jge
movsl
pop
repz
rorb
repz
cld
push
adc
pusha
mov
mov
dec
popa
mov
jmp
sub
adc
pop
push
xchg
adc
in
sub
cmpl
dec
pop
sub
dec
mov
rcrb
push
xchg
shrl
movsl
push
cmc
push
push
rcll
mov
addb
jnp
popa
fldl
lea
js
jmp
cmp
bound
add
lret
lods
testl
rol
adc
test
or
adc
mov
mov
pop
outsb
and
mov
fimull
mov
pop
ss
cmp
push
sub
test
xor
adc
add
sub
add
jecxz
das
std
pop
mov
xor
push
in
pop
sub
dec
stc
sahf
add
cmp
pushl
add
and
out
gs
pcmpeqb
fidivrs
ja
int
add
dec
or
push
ja
test
and
cmpsl
adc
ret
sub
jae
add
outsl
pop
dec
push
inc
jb
nop
jae
pop
lods
adc
jnp
cmc
cmp
aam
call
rcrl
cmp
and
add
shrl
loope
pop
mov
pop
cmpsl
inc
cmp
call
sti
outsb
mov
add
mov
pusha
in
pop
sub
test
in
repz
pop
xchg
push
inc
nop
xchg
test
and
sub
mov
xchg
mov
sbb
sub
sbb
mov
or
loop
xchg
pop
mov
pop
add
pop
add
pop
data16
fsubs
jnp
test
push
dec
pop
push
call
into
in
ja
fsubp
fisubs
jne
orl
push
jno
test
stos
popa
cmp
mov
xor
push
es
sarl
add
fidivl
leave
sbb
into
add
leave
jnp
pop
and
pop
test
push
call
mov
xor
ljmp
sub
pop
cmp
inc
jge
pop
cmp
lret
loope
enter
pop
lods
inc
add
fsubl
adc
or
out
or
sbb
mov
and
mov
fsubr
inc
jp
xor
std
sub
pusha
xchg
test
jno
hlt
pusha
mov
pop
rcrl
push
add
test
jmp
test
adc
and
xor
stos
mov
sub
shll
mov
out
xchg
lret
into
sbb
xchg
out
xor
jmp
aas
lea
add
mov
clc
inc
inc
push
cmp
pop
adc
adc
pop
pop
lods
clc
loopne
cmp
cmp
xchg
out
add
inc
mov
dec
nop
cmp
pusha
lret
xchg
out
cld
fidivl
loope
sbb
ljmp
rcll
push
dec
in
sbb
or
and
inc
cmp
int3
mov
dec
fldl
jmp
leave
sub
imul
fidivrl
adc
sub
out
pusha
lret
cmp
and
cs
pop
insl
pop
out
adc
call
fcmovnu
andb
or
xor
loop
shll
pusha
dec
mov
loopne
sub
popf
adc
sbb
fcom
adc
pop
ljmp
out
out
push
push
mov
and
mov
fists
mov
pop
movsl
mov
push
mov
dec
adc
loope
je
xchg
fbld
add
jne
dec
add
adc
inc
loope
cs
mov
dec
pop
lret
hlt
add
jne
jne
js
popa
add
orb
adc
dec
pusha
lods
xor
adc
roll
pop
cmpsb
push
sub
mov
call
mov
mov
add
aaa
test
scas
fwait
cmpb
gs
pop
jo
mov
jmp
push
das
mov
imul
add
jge
fcompl
jp
inc
loopne
pop
mov
lds
ret
add
mov
insl
shlb
les
xchg
pusha
inc
and
mov
xlat
call
mov
out
and
out
jo
and
adc
pushl
out
mov
jecxz
dec
mov
cmpsb
jmp
leave
push
mov
add
sbb
or
test
and
mov
xor
pop
sbb
push
hlt
fsubrl
add
pop
aad
stos
addr16
pop
ja
add
adc
jbe
cmpsl
movsb
dec
inc
cwtl
aas
push
add
add
jnp
out
dec
dec
push
xchg
sbb
pop
pop
and
orb
in
inc
add
gs
or
dec
xchg
ja
aad
pop
mov
notb
jge
push
stc
push
movl
ja
sbb
popf
jns
inc
test
dec
jmp
dec
hlt
add
and
pusha
idivb
cwtl
sbb
xor
push
aas
sub
dec
in
popf
mov
cmp
aas
cld
dec
shrl
popa
cs
mov
add
lods
xlat
pop
jecxz
call
push
adc
pop
sub
fisttpll
add
stos
lret
fimull
sbbb
jge
add
inc
mov
sarl
movsb
outsb
mov
inc
xchg
cmp
shl
mov
add
xchg
movb
movsl
sbb
push
fwait
rol
jae
xchg
stos
dec
out
sub
add
and
xor
push
outsb
xor
inc
jp
add
cmc
or
outsl
dec
cmp
xor
call
adc
xlat
in
or
pusha
cmpsl
sbb
pop
jl
jge
mov
ficomps
dec
orl
aas
inc
jno,pt
push
add
popa
pop
dec
cmp
dec
out
jp
pop
pusha
xlat
dec
out
pop
add
cmp
sbb
or
inc
adc
pusha
dec
repz
fldcw
lcall
gs
jae
xchg
out
and
icebp
ret
mov
adc
dec
outsb
mov
call
in
hlt
pop
sub
mov
or
nop
xor
mov
fstpt
jns
jne
add
inc
dec
lea
ret
data16
dec
clc
mov
cmp
popa
cmp
imul
mov
std
pop
sbb
pop
add
xor
or
pop
iret
dec
mov
ret
inc
cmp
xor
nop
arpl
jne
ljmp
loope
cwtl
sub
loop
fisttpl
andb
xchg
push
dec
in
adc
and
inc
sbb
cmp
dec
repnz
mov
sub
inc
xchg
cmp
ljmp
jbe
jg
cmp
mov
cs
and
jb
mov
dec
or
test
in
add
jmp
jp
or
cld
jnp
cmpsl
push
adc
add
fildl
pop
xchg
popa
jne
pop
xor
repz
sbb
roll
sub
mov
fstl
aad
addr16
ljmp
mov
add
ja
cwtl
fs
pusha
sbb
pop
xchg
push
and
adc
xchg
pop
mov
repnz
cmp
movsb
ret
popf
adc
and
push
dec
pop
lea
jnp
inc
or
pop
aas
out
add
movsl
sub
sub
add
rcrb
fnclex
in
dec
xchg
xor
imul
lret
cmp
int3
mov
push
pop
nop
add
daa
push
lcall
mov
or
mov
sub
or
xor
stos
push
movsb
pop
sub
jmp
adc
add
int3
cmp
scas
jecxz
or
or
clc
popa
popf
adc
inc
push
imul
mov
das
imul
sti
cld
sahf
fadd
incl
icebp
pop
sbb
test
xor
shl
icebp
mov
jmp
in
jno
popf
jg
pop
adc
pusha
aam
int3
and
or
mov
lods
adc
and
mov
pop
cli
jns
xchg
imul
inc
or
or
inc
mov
outsb
adc
jmp
mov
push
add
or
xchg
cli
jbe
jne
mov
sbb
sub
imul
cmpsb
or
nop
mov
sbb
sub
mov
stos
adc
sbb
pushaw
dec
pop
into
rcrb
mov
rcrb
iret
adc
dec
ljmp
sub
pop
loope
jle
jnp
push
mov
xorb
xchg
repnz
aas
daa
xchg
xor
jp
iret
xchg
mov
add
xchg
fsubs
shll
dec
ret
mov
negb
mov
push
cmp
rcr
push
sbb
adc
repnz
mov
sub
sub
dec
jmp
pop
ja
add
add
push
negb
cltd
lea
xor
cmc
cwtl
xor
hlt
add
ficompl
in
scas
pop
mov
jecxz
push
ljmp
rcrb
sbb
cmp
add
ja
pop
cmp
push
pop
scas
push
jmp
cmp
mov
push
mov
fs
push
xchg
fistps
sbbl
adc
adc
add
mov
push
popf
xor
xchg
lahf
and
clc
mov
xchg
sub
sub
mov
or
test
pop
add
jl
or
cmp
mov
push
add
pop
and
mov
sub
daa
xor
nop
mov
mov
cmp
jl
pop
mov
mov
testl
inc
lret
dec
jmp
aaa
sbb
sub
popf
and
ljmp
sub
inc
xor
add
cmp
pop
mov
scas
mov
and
hlt
sub
cmp
orb
inc
cmp
inc
fs
repz
outsl
add
sbb
fmull
sub
sbb
gs
call
pop
push
xchg
jmp
cld
sbb
aas
clc
popf
dec
and
out
mov
popf
shr
push
gs
adc
mov
lods
sub
mov
inc
js
daa
or
sub
add
sub
cmp
cmpsl
in
jo
jge
pop
pop
pop
enter
outsb
cmpsl
push
in
cmp
fstp
add
push
push
je
out
call
add
mov
popa
lahf
sbb
jno
inc
adc
mov
add
mov
mov
out
lods
add
mov
adc
shl
roll
popf
fstps
test
sub
pusha
cmp
arpl
xor
sub
jg
xchg
std
add
incb
pusha
popa
pop
inc
mov
dec
cmc
cmpsl
pop
lock
out
or
cmc
and
frstor
push
mov
cmp
mov
lock
push
mov
jp
and
fs
pop
mov
sbb
insb
xchg
sbb
sub
cmpsl
xchg
fwait
stc
sbbb
outsb
xor
jmp
fistpll
jnp
lds
fidivs
push
push
pop
pop
imul
std
adc
mov
idivl
pop
adc
out
jno
enter
sbb
sub
cmpsl
repz
or
das
xchg
adc
add
popa
jmp
jnp
call
adc
jecxz
adc
xchg
test
adc
in
sbb
pop
insl
sbb
cli
out
enter
outsb
loopne
mov
inc
std
sbb
inc
in
mov
pushf
ret
lods
stc
xlat
cltd
and
lahf
push
dec
mov
dec
clc
les
cmp
dec
add
jp
pop
loop
shl
dec
mov
xchg
jnp
add
mov
pop
xor
pusha
push
aaa
out
add
mov
jle
popf
mov
add
sub
and
lcall
jg
fcoml
and
in
inc
call
lds
imul
test
mov
cmp
out
fbld
popl
popf
jnp
add
jae
jb
inc
pop
lahf
jbe
inc
cmp
aas
pusha
imul
movsb
adc
ja
loopne
sbb
out
into
ret
push
mov
pop
pop
movsb
jmp
lods
das
fs
mov
js
cwtl
mov
and
pop
jno
pusha
dec
and
fldl
cmp
sbb
jmp
orb
pop
jae
aaa
int
pop
in
sub
sbb
push
icebp
pop
cmp
mov
lret
xor
enter
lods
iret
lock
mov
nop
jge
add
push
cwtl
adc
popa
les
xchg
pop
jg
int3
cld
sub
repz
fmull
or
cmp
sbb
cmpl
push
sbb
push
xchg
stc
lret
mov
sub
lahf
icebp
fisubl
lods
or
loopne
adc
inc
out
lods
and
repz
mov
inc
or
adc
sarl
leave
fst
pop
shl
mov
inc
jnp
mov
xor
mov
jns
cmpl
mov
mov
jle
stc
cmpsb
mov
mov
cmp
mov
mov
inc
iret
out
pop
xchg
sarb
adc
pop
and
stc
push
sbb
and
out
lcall
hlt
dec
outsb
movsl
sub
jge
aad
mov
les
mov
sahf
push
lret
fbstp
pop
pop
cmp
lahf
in
mov
fsubrl
cli
pusha
mov
mov
add
stos
inc
pop
sbb
dec
nop
sarb
xchg
cmp
sbb
mov
fistps
je
sarl
repnz
dec
sub
jge
repz
js
xchg
aam
bound
in
sbb
jno
jbe
adc
rcr
andl
mov
sti
mov
sbb
mov
stc
add
lea
or
cmp
stc
cs
mov
loopne
nop
shl
mov
xchg
int3
leave
cs
fnstcw
ds
loopne
cmp
nop
js
mov
xchg
icebp
xor
inc
cmp
fidivs
movaps
sub
jl
adc
xor
ret
mov
xchg
push
lahf
push
mov
ja
out
cmp
and
add
ja
int
xchg
jae
dec
or
mov
add
add
fs
jno
ljmp
aaa
js
rorl
mov
pop
lahf
xchg
incb
jbe
bound
popf
push
add
add
iret
mov
arpl
xchg
mov
pop
insl
cs
jg
mov
adc
ds
das
jg
loope
push
and
xchg
cmpsb
or
jp
dec
adc
sbb
sti
bound
arpl
fldl
std
pushf
push
and
pusha
xchg
aam
ret
loopne
cli
mov
and
cmp
fst
jno
adc
pop
cmp
loop
pop
mov
fldt
js
push
out
mov
testb
xorb
xlat
pop
mov
or
test
adc
mull
lcall
inc
and
push
imul
add
jno
dec
popa
les
mov
mov
mov
add
rcrb
daa
fmuls
mov
cmpl
aad
cmp
repz
dec
mov
mov
inc
addb
lock
cmpl
adc
inc
adcb
rolb
sbb
adc
outsb
enter
xor
add
rorl
or
or
mov
mov
adc
add
or
rol
and
and
or
adc
adc
mov
cli
mov
push
pop
mov
mov
adc
pop
xor
ret
orl
and
jmp
and
push
popf
aad
inc
mov
adc
jmp
jmp
clc
cmp
pop
add
fistpll
add
jns
sbb
add
aam
ret
dec
xchg
cmp
pop
push
repnz
fsubrs
imul
sub
jns
add
loopne
mov
mov
cmpsl
loopne
dec
jmp
push
xchg
stos
cmp
repz
push
add
inc
stc
adc
add
sub
push
adc
popf
sbb
push
jecxz
adc
lods
movl
data16
push
push
mov
outsb
push
xor
sub
jb
and
mov
cmpsb
aad
dec
fdivrl
ret
sbb
add
ds
test
jp
call
sti
cwtl
mov
or
add
xorb
mov
pop
filds
mov
jg
cli
mov
sub
shlb
stc
add
push
out
or
add
ret
sub
cmp
mov
fnstsw
add
sbb
push
cwtl
add
daa
cld
jno
cmp
jne
jmp
clc
add
pop
stc
into
out
add
fisttpll
mov
into
add
in
ret
popf
adc
rcrb
es
mov
add
push
repz
push
add
out
sub
jg
test
lea
pop
pushf
sbbl
add
xchg
mov
xor
add
idivl
iret
jmp
das
push
xchg
or
add
sti
adc
push
testb
jge
stos
lds
test
cli
sbb
or
fbstp
inc
jmp
enter
mov
test
into
dec
pusha
pop
cmp
add
and
icebp
inc
pop
sbb
and
mov
sahf
int
imul
add
and
out
mov
shll
pop
cmp
test
loopne
or
inc
sub
adc
add
scas
jp
xchg
mov
out
push
mov
adc
popa
scas
fnsave
out
dec
fsubl
bnd
repnz
adc
mov
or
inc
mov
mov
mov
call
aad
add
aaa
aam
and
imul
lahf
aas
add
ret
cmc
dec
ljmp
fidivrs
adc
test
xor
sbb
jp
daa
and
add
cmp
movsl
jle
daa
push
clc
shll
xor
mov
pop
add
xor
enter
ds
inc
pop
out
or
lds
jb
cmpsb
add
imul
jnp
movsl
add
dec
popa
sub
jmp
and
mov
jnp
hlt
add
add
dec
mov
add
jno
mov
or
out
je
and
mov
cmp
out
shrl
jne
mov
or
adcl
jae
inc
add
je
ficoms
pop
in
xorl
rcrb
aad
mov
add
lods
or
xchg
xchg
xchg
mov
cltd
pop
sub
cmp
ret
lahf
mov
or
fmuls
cld
test
aad
jo
testb
fcomi
add
rcll
rcrb
xorb
sub
jo
add
mov
orb
inc
sub
xor
enter
call
out
sub
mov
adcb
add
mov
push
and
pop
movsb
sbb
gs
adc
subb
xor
or
sbb
or
and
push
dec
pop
mov
adc
add
and
movsb
inc
push
adc
and
loopne
insl
and
in
mov
movsb
mov
xor
fidivl
dec
pop
rcrb
mov
popa
hlt
cmp
mov
inc
xchg
jmp
stos
and
and
dec
mov
add
out
push
jb
loopne
call
bound
or
movsb
or
adc
pop
pop
addr16
push
out
mov
in
test
sub
sbbb
add
mov
add
mov
pop
xchg
inc
fiaddl
xchg
jnp
dec
inc
or
nop
mov
pop
ret
jae
test
push
xchg
and
fwait
sub
add
add
loope
add
and
je
or
inc
push
mov
xchg
test
or
xchg
jmp
sbb
jge
mov
xor
outsb
lods
loopne
adc
icebp
xchg
xchg
xor
iret
lcall
cmpsl
js
subl
stos
repz
stc
cli
mov
nop
sub
add
and
lret
mov
adc
add
jae
imull
sbb
jp
jp
es
orb
pop
iret
out
popf
cmp
popa
imul
mov
lds
mov
int3
and
ficoms
fistpl
rcrl
ja
cmc
sarb
push
jmp
lds
lock
enter
insl
mov
scas
pop
ljmp
mov
dec
iretw
push
push
cltd
insb
clc
adc
iret
xor
into
add
inc
je
jmp
fisubrl
loop
test
mov
or
orb
repnz
jge
pop
and
push
add
pusha
fistpll
test
xor
outsb
ljmp
int3
movsl
add
stos
clc
dec
add
stc
mov
pop
inc
ljmp
fsubl
bound
loopne
mov
pop
mov
inc
cmp
rcl
xchg
lods
ss
add
in
mov
sub
fucom
xor
push
add
mov
in
or
sub
mov
insb
loope
stc
movsb
inc
in
cs
je,pt
add
jae
aam
push
jge
mov
mov
or
cltd
mov
shll
and
cmp
test
arpl
add
jmp
mov
das
int3
out
mov
outsl
sub
es
insb
xchg
mov
pop
jb
or
cli
cltd
cmp
lods
add
jle
mov
jg
lock
rolb
inc
pop
lret
fsubrs
cmp
xor
inc
and
shll
fs
pop
dec
xor
jle
push
sbb
add
pop
mull
lret
dec
aam
pop
add
push
insb
std
lcall
pusha
fs
fisubs
mov
nop
es
lods
push
cwtl
push
adc
aas
fmul
inc
mov
cmp
xor
or
jb
mov
leave
add
mov
packssdw
out
push
dec
mov
data16
je
clc
stos
or
sbb
pop
out
xor
lds
sub
xchg
jne
test
rcrb
scas
fs
popf
inc
loopne
movl
xorb
xor
push
cmp
inc
je
divb
push
mov
cmp
cmp
dec
cli
outsl
sbbb
dec
push
xor
xchg
mov
imul
test
shll
jbe
bound
mov
pop
mov
jl
jmp
nop
add
push
sbb
fwait
mov
addl
xchg
push
inc
test
add
sti
popf
jbe
mov
sub
add
hlt
xchg
insb
test
mov
lock
add
mov
xchg
and
int3
mov
aam
mov
daa
in
adc
sub
jae
test
jo
scas
scas
pop
dec
loopne
std
cmp
popf
jle
inc
jo
xchg
fxsave
and
push
xor
add
xlat
pop
xor
fcmovb
sub
pushl
fcom
cs
mov
add
mov
push
push
jns
mov
scas
mov
addb
xchg
rcrl
push
jmp
int
jo
xlat
push
jle
mov
lds
jp
sub
sarb
mov
pusha
pop
jecxz
shlb
inc
rolb
mov
in
push
dec
mov
mov
dec
out
mov
cmpsl
adc
or
jae
dec
sti
adc
ja
mov
push
insb
bound
pop
inc
sbb
or
movsl
and
mov
cltd
or
push
aam
and
and
incl
aaa
movsl
ret
cld
ret
fnstsw
leave
pop
add
sub
add
pop
das
pop
std
cmpb
aas
push
add
adc
rolb
in
daa
shll
movsb
subb
or
cmp
push
ret
jbe
andl
ljmp
fldcw
mov
inc
jg
stc
subl
dec
shrl
add
adc
mov
mov
adc
ret
popa
or
pop
cld
xlat
dec
add
cmp
aas
inc
pop
pop
aad
and
add
stc
push
jge
repz
ret
mov
and
add
stos
imul
push
lret
jecxz
xchg
mov
pop
add
imul
inc
test
add
filds
js
sub
adc
ret
push
sbbb
popa
xor
lret
push
push
add
lcall
rolb
add
push
imul
popa
xor
loop
int3
lock
iret
stos
popf
cmp
sbbl
adc
fadds
lock
test
xor
ror
sub
jmp
push
add
xor
mov
and
and
add
lret
call
adc
push
xor
jns
xchg
imul
xchg
sbb
icebp
mov
call
fwait
std
cmp
out
cmp
pop
xor
sub
lods
lahf
or
rcrl
adc
insl
jae
jns
dec
push
subl
sub
in
add
push
gs
push
popa
jmp
add
rorl
sub
loop
pop
cmp
mov
cmpsl
mov
outsl
inc
in
lcall
mov
fstp
dec
cmp
push
out
rorb
into
test
adc
enter
cmp
rcrl
xor
pusha
insb
fmuls
adc
jb
cli
ret
in
addb
mov
das
inc
jbe
in
add
sahf
int
inc
adcb
push
adc
add
jle
mov
adc
enter
mov
test
sub
rcr
cmp
nop
imul
into
and
ljmp
loope
jmp
sbb
dec
push
push
mov
sti
dec
xchg
mov
jg
or
dec
sub
or
mov
xchg
or
pop
cs
roll
or
dec
fldl
in
cmpsl
es
imul
jb
out
jg
dec
push
and
cmpb
dec
push
cmc
orl
or
ds
mov
add
inc
lahf
push
mov
push
dec
cmpl
add
mov
adc
pop
out
sub
push
or
push
mov
flds
imul
lds
pop
pop
sub
sub
push
cmp
mov
cmp
jmp
inc
mov
or
xchg
and
scas
xor
mov
mov
mov
dec
add
mov
int
push
add
or
daa
rorl
jg
xchg
jns
cmpb
add
pop
or
push
push
fs
add
pop
push
xchg
cmp
jp
xor
xchg
inc
jmp
sub
aas
fimuls
cmc
sub
or
pushf
insl
test
fwait
or
adc
adc
fcoml
test
in
out
sbbb
pop
adc
cmp
in
rclb
xchg
and
sub
rcrb
mov
lods
outsb
andl
enter
mov
xchg
shll
mov
adc
sahf
es
popf
adc
fmul
add
or
notb
int
mov
shr
ds
mov
sahf
imul
or
scas
mov
lahf
repz
loop
add
pop
imul
and
bnd
sbb
andb
addb
jne
add
jmp
mov
or
sub
push
jmp
add
or
and
clc
or
add
das
adc
test
lock
mov
inc
pop
or
cmpsb
dec
invd
aad
and
add
push
mov
pusha
loopne
or
scas
or
js
test
cmp
sub
push
mov
add
or
ficomps
outsl
push
push
adc
mov
mov
popf
add
or
or
sbb
or
pop
sbb
add
jmp
jl
jp
xchg
out
leave
xor
add
fsubs
push
ffreep
sbb
dec
or
xchg
and
ljmp
and
jno
aaa
cmpsb
repz
mov
pop
cmp
xor
lea
jecxz
lock
mov
movsl
in
cmpsl
jg
pop
cltd
mov
add
out
jb
push
sbb
adc
sbb
ljmp
inc
add
in
repz
call
scas
lcall
add
or
aam
dec
xchg
cs
inc
mov
push
jecxz
add
int3
pop
dec
daa
scas
xor
push
movsb
mov
mov
int3
or
jne
pushf
add
mov
pusha
pop
xor
fbld
sub
es
add
mov
arpl
jno
imul
mov
add
movsb
icebp
into
xor
adc
and
pop
cmp
out
cwtl
jo
cltd
pop
push
xor
cmp
xor
xor
popf
mov
mov
add
scas
add
movsb
sub
loope
push
mov
cmp
shll
dec
std
push
repz
jne
push
mov
mov
mov
sub
add
stos
cmpsl
and
test
adc
jmp
jp
fsubrl
shll
pop
testb
pop
and
mov
add
scas
pushf
cld
orb
add
lcall
loope
sub
subb
push
inc
fadds
popa
sub
dec
add
push
int
push
add
sti
test
lds
inc
outsl
sahf
mov
ret
and
pushf
jmp
outsb
cmpsl
add
xchg
push
stos
jno
or
pop
call
and
add
lahf
pop
lret
test
mov
and
sar
sbb
pop
pop
xor
inc
loop
cmp
add
aaa
rcll
mov
roll
push
int3
push
lret
fimull
and
loope
dec
dec
addb
mov
dec
xlat
add
pop
dec
enter
pop
jb,pn
leave
das
jl
inc
add
jmp
pop
int3
fcomp
mov
inc
rcr
jge
cmpb
data16
mov
shrb
shl
jo
ja
nop
adc
pop
cld
adc
xchg
int3
shl
sbb
or
xor
cltd
xchg
xor
dec
ljmp
jmp
xor
push
add
daa
sub
inc
cli
rclb
inc
lcall
xchg
hlt
xor
sub
addr16
or
iret
daa
fdivp
andl
and
andb
jns
xchg
int3
and
jge
sbb
es
mov
pop
pop
sub
add
adc
add
xchg
lea
aaa
jl
adc
sbb
cmp
ret
cmp
add
jbe
jb
invlpg
adc
call
jae
pop
or
mov
adc
add
adc
pusha
test
inc
lcall
push
ficompl
or
pop
pop
icebp
fwait
push
mov
cs
jbe
push
out
add
fcoms
jae
mov
mull
out
test
xor
xchg
orb
and
sbb
jge
xchg
xchg
stc
sub
roll
inc
jmp
lds
add
add
mov
lret
idiv
inc
inc
loop
in
je
pop
in
push
lret
cmpl
xchg
call
jbe
mov
or
in
lret
in
xor
add
in
jae
push
xor
pop
xor
loopne
fists
cmpb
or
cmpsb
push
xchg
xchg
mov
bound
xchg
adc
jp
cwtl
add
stos
clc
lret
fildl
xor
fbld
pusha
nop
xor
sti
in
inc
int3
repz
and
jo
insb
mov
call
movsb
add
and
andl
push
fwait
jl
in
dec
cmpsb
imul
mov
movsl
jle,pt
cmp
pop
mov
xor
cmovno
and
paddq
movsb
mov
popf
add
pop
out
adcb
sbb
shll
loop
add
out
adc
mov
push
cwtl
xor
sub
jbe
inc
out
jb
subb
xchg
sub
mov
icebp
push
or
insb
out
add
outsb
enter
sub
add
or
ds
jns
loopne
icebp
and
pusha
add
sbb
mov
push
dec
mov
ficoms
aam
inc
cmc
add
lds
or
pop
adc
add
or
inc
pop
sbb
and
add
inc
push
jae
pop
fcompl
aam
pop
adc
add
ss
outsb
pop
cmc
add
cmp
pop
cltd
das
js
pusha
dec
mov
add
lahf
or
mov
pop
or
js
push
jmp
pop
xchg
psrld
and
insb
adc
loop
cmp
js
mov
lcall
pop
aam
dec
movsl
and
push
inc
pop
popf
dec
fwait
std
add
adc
movsb
sarb
xor
outsl
adc
test
push
xchg
sbb
es
lahf
inc
add
mov
ffreep
and
pushf
xchg
std
call
or
gs
arpl
sub
add
xchg
jo
fsubrs
inc
ficoml
gs
je
xchg
inc
in
aaa
pusha
mov
xor
sub
xlat
popl
and
xchg
add
test
clc
xor
icebp
pusha
add
rorb
int
movsb
add
gs
pop
pop
cmp
ret
fldenv
leave
lock
negl
aad
inc
sub
fmul
out
mov
sarb
xchg
sbb
add
xor
sbb
in
cmp
pop
dec
cmp
push
inc
lods
rorl
push
or
subb
in
or
inc
add
ret
pop
in
and
push
sbb
xlat
sbb
push
and
xchg
sbb
ss
fldt
aaa
add
jae
loop
add
fs
aam
insb
test
pop
push
add
mov
mov
fwait
in
dec
pop
xor
mov
lea
sti
push
insl
jge
push
cmp
cli
add
xchg
cmp
rorb
rorl
pop
add
rol
add
jmp
xchg
movsl
aaa
out
loope
jg
dec
loop
add
stc
cltd
mov
mov
push
mov
mov
stos
and
ret
mov
hlt
lods
add
dec
mov
jge
inc
cmp
pop
subb
idivb
and
mov
mov
mov
test
push
lcall
cs
mov
sbb
mov
jo
add
jg
loope
xlat
rolb
add
add
aam
cmp
ret
or
sbbb
mulb
jo
nop
lods
add
fsts
imul
push
stos
test
lock
inc
add
call
popa
dec
cmp
mov
in
dec
sub
das
repz
push
add
sbb
rorb
add
mov
add
xchg
orl
add
mov
divl
sub
add
inc
mov
outsb
out
inc
in
mov
push
out
mov
jns
mov
inc
enter
push
fsubrs
xchg
cmp
out
flds
lock
or
outsb
jl
add
lock
push
sarb
fisttps
rcr
pusha
jle
add
mov
scas
stc
cmp
push
mov
inc
lret
jge
or
lea
out
out
inc
pop
jecxz
sarl
mov
inc
enter
sub
pusha
flds
mov
add
push
jns
shrb
fsubrs
shlb
inc
add
sub
filds
popa
ljmp
in
enter
inc
cmp
mov
test
lcall
lods
push
pop
js
inc
add
inc
je
pop
xchg
clc
add
cmp
cmp
add
cmp
andl
shrl
popa
lret
jle
lds
adc
rorl
daa
add
mov
jg
mov
push
jae
add
xchg
and
xchg
out
cmp
enter
and
push
fadds
out
data16
std
sti
add
or
pop
pop
push
mov
clc
cmpsl
out
xchg
sub
adc
inc
jmp
cmp
adc
sbb
mov
loopne
dec
xchg
shl
push
jne
fsub
sub
and
scas
cmp
outsb
mov
in
repnz
fs
hlt
push
sbb
xor
aam
pop
cmp
jp
sub
dec
addb
pop
mov
add
mov
add
into
push
lods
clc
lds
pshufw
pusha
inc
pop
mov
sahf
pop
xchg
inc
cmp
leave
je
add
xchg
insl
and
sub
shrb
push
out
mov
loop
xor
jg
jp
push
dec
add
and
xchg
andb
mov
or
jbe
dec
lods
and
mov
or
js
add
cmpsb
imul
mov
adc
jmp
mov
pop
insb
cmp
int
add
xlat
xchg
pusha
pusha
addl
out
pmaxsw
and
rol
xor
and
xchg
or
xor
les
cltd
and
cmp
dec
adc
or
repnz
add
push
jl
push
adc
verw
pop
loope
jmp
lods
nop
in
mov
outsb
xor
pusha
mov
loopne
mul
addr16
test
push
ljmp
push
test
jnp
aas
add
notb
pop
popa
addl
push
mov
arpl
test
add
lret
xor
and
rolb
stos
push
jl
packsswb
mov
mov
mov
push
jnp
stos
loope
xor
aas
inc
cs
add
bound
add
add
fcoms
jne
xchg
and
push
add
inc
inc
inc
adc
lds
add
ds
shrb
cld
push
dec
sbb
clc
add
xchg
add
mov
rcrb
adc
andb
or
out
xor
mov
out
fstl
fisubs
jae
sub
adc
inc
cmp
movsb
add
faddl
std
pop
add
add
add
push
adc
mov
loopne
pop
add
jne
test
mov
jle
out
pop
aam
lret
pusha
add
mov
sbb
cmp
mov
inc
and
popl
fucomip
or
adc
sbb
pop
push
mov
xchg
fdivp
pop
aas
popf
mov
cltd
verw
sub
outsb
push
adc
int3
rclb
adc
test
dec
push
cwtl
mov
add
insl
test
inc
and
mov
adc
movsb
test
pop
adc
aam
loopne
hlt
add
pop
or
in
int
mov
jno
pop
sbb
mov
orb
je
mov
pop
scas
add
jle
lods
leave
mov
cmp
into
mov
cwtl
xor
or
pop
js
pop
xchg
add
idivl
fisttpll
loop
fcoml
add
ljmp
jl
or
lahf
aas
mov
pop
hlt
mov
mov
je
shl
lahf
data16
mov
cmp
fsubs
and
dec
iret
adc
loopne
aaa
pop
xchg
andb
sarl
scas
je
add
fwait
imul
mov
add
faddl
xchg
or
xor
subb
sub
mov
and
add
sub
icebp
sub
in
movsb
clc
imul
addb
fstl
mov
cmp
addb
je
xchg
repnz
insb
rolb
sti
out
adcb
in
lds
cmc
cmpl
lods
out
add
fstl
xor
mov
das
mov
fisubl
loop
adcl
add
mov
adc
mov
or
shl
push
push
mov
adc
mov
flds
mov
cmpsb
stc
insl
iret
lcall
cwtl
cmp
adc
lahf
shlb
pop
or
push
cwtl
mov
sahf
sub
filds
mov
pop
stos
clc
fsubs
std
add
cmp
add
fstps
inc
push
pop
mov
push
imul
in
add
adc
hlt
je
jmp
daa
sbb
mov
push
repnz
dec
rclb
and
lods
outsb
add
imul
sahf
insb
cmp
push
shrl
imul
cmp
pop
mov
aad
mov
cwtl
pop
daa
xor
ljmp
add
or
in
mov
mov
push
daa
jae
add
je
aas
mov
push
mov
cmp
mov
movsl
mov
loop
mov
fnstsw
aas
cld
xor
add
js
test
rol
hlt
add
sub
ljmp
ret
cmp
sbb
mov
mov
daa
mov
adc
pop
es
jo
leave
xor
outsl
dec
adc
sub
rclb
test
mov
cmp
movsb
out
ret
test
cld
sbb
rclb
aaa
push
and
sub
nop
jns
std
push
stc
enter
adc
xchg
sub
add
cmc
xor
sbb
or
add
repnz
lcall
icebp
fimull
mov
addb
adc
pop
push
ss
int3
dec
pop
pusha
cmp
add
dec
jne
pop
jo
add
rorl
shll
and
mul
call
mov
pop
and
es
xor
dec
jne
add
xor
std
xor
lock
in
sar
dec
icebp
lods
cli
ret
add
js
in
addr16
dec
and
jmp
pusha
adc
addl
mov
jge
jbe
pop
cwtl
inc
imul
add
jmp
or
mov
fdivrl
or
xchg
fadds
lods
bound
pushf
cs
cli
movsl
mov
add
dec
shlb
mov
enter
adc
pop
mov
jns
int3
adc
movsb
add
xor
jno
in
imul
jge
sub
out
xor
test
icebp
ja
aam
inc
lock
add
jle
or
push
jae
push
xor
add
sub
xchg
dec
add
xchg
add
xor
add
add
jo
push
pop
clc
imul
adcb
jge
push
xchg
mov
inc
dec
repnz
inc
jbe
xor
cmp
in
bound
mov
popf
push
pop
jnp
loopne
cld
fs
pop
divb
js
je
mov
leave
mov
adc
mov
pop
addl
add
int
mov
add
push
lea
imul
mov
sub
add
jae
lods
leave
dec
cwtl
add
test
clc
cmc
popa
lahf
mov
divl
mov
jp
push
and
adcb
out
or
adcb
add
nop
test
jno
add
lret
sbb
add
out
mov
add
mov
lods
and
add
rcll
or
add
repz
push
mov
mov
ja
fidivs
pop
in
adc
xor
cmp
adc
lods
add
addr16
pop
sbb
add
sub
mov
mov
add
div
mov
pusha
cmc
shrl
sub
rclb
fstl
add
ret
and
add
mov
ljmp
add
popa
test
lds
mov
mov
es
stc
mull
jne
or
mov
sbbb
pop
sbb
and
cmp
bound
call
add
dec
add
mov
rcrl
mov
ljmp
mov
fwait
and
sbb
xchg
into
sbb
and
mov
dec
movsb
fcompl
add
cs
loopnew
mov
sbb
push
add
inc
rorb
cmp
add
inc
lret
push
adc
lods
out
int
das
jg
rclb
cmp
adcl
lret
xor
hlt
mov
dec
iret
add
cmp
aad
sbb
sti
pop
inc
lret
dec
mov
ret
cmp
int3
dec
andl
mov
mov
pcmpeqw
mov
or
xchg
push
sahf
cmp
xchg
repnz
jecxz
push
add
dec
jne
push
cld
add
xchg
add
mov
pop
pop
test
inc
lahf
cmp
and
mov
push
xor
jno
xbegin
xor
ja
jl
sub
shrl
sbb
push
adc
xor
mov
out
scas
mov
xchg
rol
mov
adc
inc
aam
pop
push
push
outsl
add
and
xchg
movsl
sub
add
in
jo
ret
adc
adc
pop
pop
add
jno
xchg
insl
sub
call
outsl
push
adc
mov
repz
pop
adc
add
mov
add
enter
dec
and
cwtl
adc
sbb
push
ljmp
fstpt
test
pop
adc
xor
or
repnz
dec
push
add
pushf
lds
imul
repnz
les
or
add
pop
jp
outsb
bound
xor
mov
movsl
pop
cli
or
add
repz
cmpsl
bound
adcb
je
push
mov
mov
cmpsb
add
mov
adc
lahf
add
int
in
adc
test
inc
sti
add
or
push
add
je
dec
rcrb
cli
in
jns
pop
in
bound
addr16
add
jb
xchg
adc
popl
leave
cmpsl
int
movsb
imul
fstpl
add
mov
inc
jg
cmc
inc
shrl
sub
mov
aaa
mov
fstpt
mov
inc
loopne
sbb
loope
sub
or
jmp
imul
pop
mov
adc
sub
jge
sub
jecxz
and
jl
loopne
arpl
stc
xchg
outsb
add
pushf
nop
lret
idivl
rcll
and
pushf
cmp
jp
mov
xchg
jo
add
xlat
inc
ret
or
fidivs
mov
loop
add
rcrb
inc
mov
add
gs
push
adc
lods
mov
outsl
inc
and
lea
sbbb
jecxz
and
jmp
pushf
jmp
jb
in
mov
repz
push
jmp
fisubl
push
lods
icebp
lock
popf
cld
aam
xchg
inc
add
jl
add
xchg
xor
and
test
jbe
xor
add
jmp
pushf
hlt
push
xchg
jo
push
mov
cmc
cmp
cmp
sbb
add
and
or
adc
into
je
shll
hlt
mov
pusha
jle
sub
test
dec
mov
add
sbb
pop
push
add
xlat
setbe
or
pushf
cltd
lods
pop
pop
fistpl
adc
cmp
jno
addl
fwait
add
pop
or
cltd
repz
mov
sahf
add
es
fstl
jmp
push
cmp
dec
nop
hlt
xor
jno
sub
cmpb
repz
iret
fcmovnb
subb
add
jns
mull
add
dec
cltd
imul
addb
pop
cmpb
fcoml
fistpl
inc
or
or
sbb
adc
mov
adc
mov
adc
adc
sbb
push
jle
mov
subb
xchg
sti
push
fnsave
push
fcmove
add
xchg
push
inc
fcos
cmp
xchg
push
inc
call
push
cmp
mov
faddl
sbb
jno
dec
xchg
popa
or
adc
aas
int3
pop
xchg
es
cwtl
mov
fstl
adc
enter
add
dec
ss
rcll
add
sbb
dec
arpl
ja
add
icebp
orb
adcb
test
push
cmp
fwait
or
adc
aad
scas
mov
jl
dec
ret
dec
mov
stos
cmp
push
clc
jae
xchg
add
mov
pop
in
stc
push
imul
ss
into
fildl
xchg
insb
rcll
test
mov
clc
insb
mov
add
stos
fsts
xor
faddl
add
test
ud1
mov
jae
shll
pusha
inc
cmp
stos
or
jb
xchg
lock
add
into
xor
notl
add
or
or
adc
enter
into
adc
and
xchg
mov
pop
dec
mov
in
shlb
push
fdivrl
sarb
add
stos
nop
stc
add
lea
add
cmp
or
add
mov
cld
jecxz,pn
nop
outsl
or
push
xchg
fisubrl
aad
in
cmp
imul
inc
inc
xor
cld
jecxz
or
pop
push
lret
iret
or
jno
mov
out
pop
nop
xchg
cmp
sbb
and
xchg
cmp
dec
or
loopne
add
mov
pop
das
or
sahf
adc
push
fcmove
jns
adc
and
cmpsb
roll
and
sub
mov
or
cmc
jo
push
mov
add
or
add
and
cmp
xorb
cmpsl
add
or
sub
inc
lcall
mov
sub
in
add
in
mov
inc
dec
add
and
fcoml
jne
aaa
add
inc
fdivp
jmp
inc
rcrb
in
sti
cmp
push
pop
lret
aaa
js
jmp
repnz
cmp
ret
add
stos
push
inc
xchg
movsl
inc
add
daa
lock
pop
or
ret
repnz
leave
dec
orl
push
loopne
jp
lock
xchg
xor
pop
stc
jmp
inc
push
in
fmuls
sbb
cld
popa
loopne
lret
and
push
std
mov
out
xor
es
adc
cmp
mov
add
add
add
mov
lods
movsb
ds
and
add
icebp
xor
fidivs
xchg
jecxz
add
sahf
scas
cmp
mov
jl
popf
shrb
icebp
xchg
and
daa
pushl
add
add
push
cmp
nop
add
push
sub
les
push
dec
sbb
fs
and
xlat
std
cmpsb
push
add
test
sbb
xchg
jnp
sub
daa
add
test
adc
and
push
mov
dec
cmp
aas
jl
add
cmp
loopne
dec
add
outsb
xchg
jne
and
dec
xor
xor
pop
call
add
xchg
jge
add
int3
or
popa
push
sti
push
sbb
movb
ficoml
lcall
add
cmpsl
das
stos
add
ja
lahf
popf
fiaddl
sbb
mov
pusha
inc
loopne
fwait
mov
add
jns
call
js
sbb
add
notb
mov
xchg
push
xchg
jmp
cmpsb
sarb
or
sbbb
fs
cmp
or
and
pushf
clc
enter
add
jnp
mov
add
add
or
js
jae
add
hlt
xor
cmpb
in
jno
dec
mov
mov
mov
mov
cmp
mov
icebp
xlat
mov
out
sbb
loop
andl
dec
push
sub
fadds
dec
loop
fwait
mov
adc
pop
scas
dec
pop
jmp
nop
lds
adc
lret
add
rcrl
mov
sti
inc
test
adc
adc
add
iret
stos
jp
hlt
add
test
pusha
popf
into
add
cli
inc
push
sbb
in
in
sbb
roll
sahf
cmp
jns
xor
cmp
mov
out
mov
scas
push
cmp
popf
push
add
addr16
sub
add
cmp
repz
xor
dec
pushf
int
ret
jne
btr
or
aam
push
popf
dec
or
adc
subb
aas
inc
aam
js
jbe
inc
cld
fidivs
adc
andl
add
fsubrs
sub
sbb
int3
lahf
out
jae,pn
or
loope
fs
and
cld
xorb
imul
push
or
rcrl
in
fstpt
add
stc
xlat
xor
in
lock
in
sbb
add
push
push
loop
or
and
into
pop
test
loopne
and
cs
add
arpl
subb
inc
and
mov
shll
dec
push
lds
sbb
mov
pop
outsb
orb
out
mov
pop
pusha
sub
xchg
in
pop
sub
dec
adcl
jle
and
mov
jns
lods
adc
inc
sbb
push
imull
mov
dec
test
jg
lcall
inc
rcrl
add
hlt
push
inc
mov
mov
cmp
call
inc
inc
mov
add
das
insb
gs
push
add
mov
sub
ljmp
xor
lahf
jo
jg
add
or
or
stos
cs
sbb
lea
add
cld
sub
stos
mov
dec
scas
push
jge
aas
iret
sbb
andb
mov
sub
orl
mov
in
out
lods
mov
push
sbb
sbb
mov
sub
dec
fisubs
ret
add
out
iret
sub
adc
cmp
adc
xchg
aad
push
mov
push
cmp
adc
push
jb
push
dec
test
adcl
outsl
scas
adc
repnz
sbbl
sbb
rolb
shlb
mov
inc
je
js
adcl
add
xor
std
rcr
mov
jmp
dec
mov
xchg
int
inc
jbe
loopne
add
shll
mov
xor
hlt
inc
xchg
jecxz
pusha
sub
movsb
shlb
out
mov
enter
imul
mov
add
xor
dec
cmp
aaa
add
jl
dec
adc
mov
adc
xchg
sbb
dec
mov
add
add
mov
pushf
jmp
lret
add
aas
inc
mov
pop
dec
push
rcrl
xchg
dec
iret
fdivrs
xlat
dec
cmp
xchg
add
subl
out
jp
inc
fistl
add
les
mov
xchg
call
or
into
pusha
cmp
es
imul
cmp
mov
push
mov
mov
aas
jl
add
in
testl
fstl
adc
and
je
mov
sub
add
lods
idivb
pop
movsb
nop
add
mov
mov
push
push
cld
jmp
inc
sub
mov
outsl
sarb
push
adc
fwait
mov
mov
shlb
outsb
sub
scas
pop
out
add
jecxz
bound
iret
divb
add
adc
cltd
movsb
push
or
jnp
out
fsubrl
enter
ss
lret
xchg
clc
mov
arpl
sbb
movsb
pop
add
add
das
in
insb
outsl
jb
lahf
fwait
call
fsts
mov
pop
jp
mov
fcmovnu
xchg
mov
popa
adc
xlat
xor
pop
push
in
xchg
add
fsubrs
js
lods
addb
cmc
aad
nop
pop
push
addr16
test
orb
das
es
sbb
mov
lahf
sbb
push
lods
dec
push
sub
jmp
sbb
leave
add
mov
cld
sarl
push
sub
add
xor
stos
roll
fs
test
push
and
sbb
call
mov
jno
lahf
aaa
in
xor
xchg
inc
inc
sahf
or
adc
int
fiaddl
test
pop
and
cmp
aad
push
add
enter
jo
lahf
jl
pop
mov
dec
dec
pop
mov
push
into
add
pop
sahf
les
rcrb
pushf
add
sub
add
mov
jmp
cltd
pop
js
adc
xor
ret
add
xchg
mov
push
subl
cmc
sbb
jne
loopne
add
scas
insb
dec
xor
decb
add
mov
sub
filds
push
fldt
imul
jp
add
mov
pop
mov
add
loopne
pop
sbb
add
cwtl
enter
icebp
push
jbe
int
xchg
shr
mov
xor
das
mov
adcb
mov
jae
inc
jns
lock
aam
jno
or
xorb
inc
jne
add
pop
jecxz
lods
sub
mov
push
mov
or
outsb
add
nop
test
mov
push
xor
insl
add
mov
add
aam
add
cltd
pop
add
jp
int3
rcll
lds
add
ljmp
dec
arpl
inc
sbb
xor
les
aam
sbb
jo
pusha
into
cmpsb
roll
mov
ss
je
sub
jp
pop
add
in
lret
adc
pop
xor
pop
pop
pushf
iret
mov
inc
add
sbb
xlat
fisttpll
ret
mov
push
shll
mov
lret
or
outsl
in
mov
div
js
sarb
and
mov
add
inc
pop
enter
aaa
ljmp
pop
mov
pop
sbb
add
jle
lds
add
shrb
add
mov
mov
adc
push
lods
es
movhps
mov
inc
mov
adc
mov
fstl
and
lods
lret
aaa
add
test
pop
inc
sbb
mov
lock
mov
add
aam
mov
repnz
xor
inc
xchg
mov
sub
add
pop
scas
inc
scas
mov
out
es
jbe
mov
add
mov
push
jo
hlt
iret
fcmovne
mul
add
and
adc
insb
mov
add
add
push
fsubs
add
push
xor
add
inc
jbe,pn
loop
mov
xchg
push
xchg
lcall
jmp
pop
xchg
call
cmp
or
imul
mov
push
xchg
fdivl
add
xchg
adc
push
adc
mov
aam
add
xor
clc
xchg
cmp
lea
mov
sbb
jno
jae
fisubrl
mov
movsb
cltd
push
pop
add
xchg
dec
movsl
xor
add
cmc
jne
icebp
add
add
and
clc
or
cwtl
sbb
sub
adc
idivl
call
movsb
mov
popf
jo
lock
dec
push
push
pusha
test
pop
ss
sub
push
orb
add
fidivrl
pop
pop
sbb
add
ret
cwtl
add
xor
mov
jnp
xlat
mov
imul
cmp
add
call
fdivs
cmp
aaa
mov
fildl
push
into
icebp
cmp
add
rorb
add
mov
movsl
icebp
loop
sbb
or
inc
ror
pop
add
xor
push
lock
dec
in
add
lods
xchg
loope
sbbb
xchg
mov
sbb
leave
sub
fldenv
fcomp
cmp
test
pop
mov
out
mov
add
shlb
pop
add
test
add
inc
mov
adc
scas
pop
jl
scas
in
add
clc
inc
cmpb
push
add
int3
fisubrs
jb
addr16
movsb
pop
xchg
outsb
add
cmp
fs
popf
sub
inc
daa
xchg
scas
in
pop
mov
add
pop
aas
pop
add
inc
sub
shlb
mov
pop
inc
add
jmp
fsts
adc
add
xchg
jnp
scas
pop
cmp
repz
hlt
repnz
js
lret
cmp
psubq
nop
out
jg
inc
test
jb
add
frndint
inc
out
lods
mov
cmp
push
xchg
in
idiv
xchg
add
add
iret
nop
fs
mov
xor
add
ret
insl
fsts
dec
movsb
mov
dec
adc
in
lock
mov
jae
dec
add
sbb
fstl
dec
lea
lahf
lods
cmp
xchg
sub
nop
scas
outsl
cs
out
out
loopne
jbe
imul
adc
add
ljmp
std
insb
jp
fnsave
in
adc
ret
push
outsl
xchg
pop
adc
add
lock
push
pop
aaa
cmp
add
cwtl
insb
jae
popa
sbb
push
push
jge
mov
stos
je
nopl
pop
dec
orl
add
lcall
mov
adc
sub
testl
cwtl
mov
jb
out
cmpsb
loop
insb
lret
lcall
and
pusha
sbb
add
inc
mov
mov
add
jne
cmp
scas
sub
adc
sub
stc
add
loopne
and
in
xor
scas
cmpsb
mov
mov
pop
inc
sub
dec
mov
cwtl
jo
push
adc
mov
xchg
add
sbb
or
clc
js
enter
test
sar
popa
mov
lret
pop
or
xor
cmp
adc
inc
insb
mov
sub
add
inc
jne
int
add
test
sbb
jmp
jecxz,pn
fsubs
es
out
lods
pop
add
out
dec
fbld
ret
pop
push
add
popa
or
subl
outsb
push
mov
fldt
mov
arpl
mov
movsb
push
sti
add
add
aam
push
into
inc
push
inc
sbb
pop
mov
in
popa
jp
sbb
and
popf
fcoms
dec
inc
call
test
jnp
testl
shlb
dec
test
in
add
scas
gs
sub
mov
jae
adc
movsb
or
lcall
icebp
add
lea
hlt
loopne
push
ds
lock
sahf
in
push
loope
dec
jmp
xchg
and
add
xchg
mov
inc
outsl
add
mov
cltd
js
add
mov
int3
jbe
add
mov
mov
adc
add
cmpl
in
xchg
add
lods
lret
xchg
add
cli
cmc
clc
mov
iret
cltd
jecxz
jg
mov
loop
xor
testb
sbb
mov
sahf
pop
and
cmp
xchg
adc
test
and
mov
jecxz
inc
cmpsl
inc
xchg
xor
test
cmp
jo
add
sti
fs
and
xchg
in
imul
add
shll
out
pop
cld
sbb
adc
rcrl
xor
scas
cld
adcb
fcoms
fstl
push
daa
add
jle,pt
sbb
andb
pop
test
mov
adc
add
outsb
out
cmp
ds
dec
pop
add
jbe
loope
mov
mov
cli
dec
add
xor
jle
add
xlat
push
or
sbb
test
ja
or
add
sub
call
add
push
pushf
incl
add
cmpsl
sub
mov
out
mov
enter
or
in
in
xchg
push
insl
andb
add
fwait
loopne
and
add
mov
jp
sbb
outsl
mov
mov
fadds
cmpsl
lret
ret
sbbb
sub
fidivrs
jo
lahf
fmull
add
testl
dec
inc
xlat
push
push
pop
out
cltd
add
push
mov
mov
or
mov
add
jbe
dec
or
add
clc
ret
add
imul
scas
aad
les
jb
je
adc
call
xorl
push
cmp
jp
push
sbb
imul
hlt
jae
stc
lods
nop
add
adc
lods
lds
add
sbb
into
das
pushf
and
add
in
cli
and
mov
pop
xchg
leave
or
pop
pop
and
mov
jmp
add
and
rolb
std
add
ss
pop
cmp
sarl
sbbb
dec
sub
mov
xlat
sbb
cld
es
sbb
int
lods
imul
and
or
push
mov
insl
fistpl
dec
int
aam
stos
inc
mov
add
xchg
cmp
push
add
mov
outsl
jno
inc
ret
sbb
xor
inc
mov
adc
xchg
mov
cs
addr16
repz
mov
nop
test
cmp
fidivrs
mov
fcmove
in
jmp
add
mov
cmpsb
push
cmpb
and
std
adc
jmp
mov
cmp
add
adc
xchg
insb
add
addl
mov
dec
adc
sub
adc
jle
mov
decl
daa
sbb
pop
jae
xor
adcb
pop
fwait
xchg
outsb
fadds
ja
aad
and
pop
sbb
mov
aaa
push
jmp
cmpl
add
cwtl
lret
pop
mov
stos
fbld
inc
dec
add
scas
mov
enter
aad
jp
pop
jmp
add
add
rorb
push
in
xchg
push
pop
cmp
or
inc
or
sub
clc
cwtl
push
push
fld
filds
nop
and
aas
add
loopne
add
xor
js
aaa
sbb
cmpsl
xor
dec
icebp
push
or
pusha
movsb
ficoms
push
add
es
xchg
jo
jo
add
lret
bound
add
aad
and
xor
sub
jo
out
mov
scas
push
popf
add
sbb
push
xadd
dec
xor
out
add
inc
call
and
pcmpgtd
mov
iret
shr
mov
dec
xchg
xchg
loope
sbb
sbb
push
cmp
les
cmpsl
jae
mov
pop
push
sti
mov
adc
adc
pop
push
or
enter
cwtl
fwait
ret
nop
add
leave
xor
push
push
cli
xorb
jle
gs
sub
rolb
pop
ret
rcl
inc
push
dec
cli
xchg
idivb
call
std
or
les
andb
sarb
jl
jp
dec
jae
adc
repnz
pop
fst
mov
dec
mov
sarb
pusha
dec
fisttpl
xlat
add
test
outsb
push
adc
cs
sub
call
cli
cmp
lret
in
aaa
add
sbbl
mov
mov
fdivrs
add
loop
daa
lret
movb
inc
testl
nop
mov
adcb
xor
xchg
xchg
mov
aam
in
ret
stos
add
scas
hlt
inc
add
push
mov
push
popf
arpl
jp
push
xchg
nop
jb
js
add
cmc
lods
lret
aad
add
or
rolb
add
mov
adc
cmp
jl
dec
test
fcmovnb
fwait
cmp
inc
push
add
rorl
add
out
and
stos
inc
lgs
add
mov
aaa
mov
ffreep
stos
out
add
mov
inc
lods
adc
mov
sub
movsb
cmp
mov
and
push
leave
add
popf
dec
add
jp
pop
lock
not
rorb
mov
loopne
xchg
scas
iret
jmp
repnz
add
mov
xor
sub
es
mov
or
push
mov
mov
or
or
insb
mov
neg
xchg
dec
pushf
adc
inc
add
aam
mov
push
or
inc
xor
hlt
iret
jno
xchg
lret
jbe
cmc
adc
pushf
test
roll
sbb
push
sbb
xor
sub
cwtl
push
outsl
test
push
xor
test
push
cmp
nop
jne
dec
fildl
je
stc
cmp
xor
loop
or
mov
and
jo
inc
in
aas
pop
add
xor
add
outsb
mov
add
pop
cmpsb
pushaw
jl
pop
dec
pusha
mov
js
mov
clc
out
lret
in
and
cmp
inc
add
rol
jecxz
cwtl
in
loope
jp
mov
stos
les
rolb
out
add
pop
call
addl
imul
test
sti
dec
orl
enter
test
or
add
mov
jmp
lock
outsl
xchg
jb
adc
mov
xorb
inc
xchg
add
test
movsb
or
rolb
or
in
aad
mov
sbb
imul
cli
in
dec
sub
push
push
popa
lock
add
inc
add
sbb
sub
fs
je
rclb
add
mov
fwait
mov
jnp
call
into
mov
scas
and
pushf
sub
inc
pop
cmpl
push
mov
lods
inc
clc
or
es
in
jecxz
add
pusha
fwait
mov
sbb
inc
sub
jnp
or
pop
pop
add
xchg
outsl
jns
mov
pop
in
xor
std
pop
pushf
dec
cs
pop
sbb
aas
pusha
repz
xor
and
adc
mov
or
fisubl
ljmp
add
jle
mov
mov
sbb
addr16
and
shlb
js
fnsave
repnz
push
stc
xor
mov
outsb
or
pop
cmp
insl
cwtl
xor
adc
add
stos
add
sub
adc
and
adc
sub
mov
pusha
sbb
mov
mov
inc
fildll
push
add
sub
mov
sbb
sbbb
add
movl
add
dec
jno
mov
jge
pop
xchg
add
fucomp
shlb
bound
lods
jnp
inc
push
loopne
outsb
fldcw
and
push
stos
scas
sub
outsb
jns
mov
es
adc
cmp
adc
lods
mov
sub
push
pop
ljmp
sahf
dec
and
imul
lds
adc
add
in
xor
pop
mov
add
sub
pop
movsb
inc
pop
add
mov
jle
cmp
add
dec
adc
in
mov
add
or
cwtl
sbb
cmpsl
push
add
movsl
sbb
fs
xchg
pop
mov
testb
jb
in
xchg
clc
fdivl
add
xchg
and
jge
shlb
outsl
push
or
aam
lea
ret
sub
mov
cli
sbb
aam
add
xor
pop
add
pop
xchg
mov
mov
lock
cltd
add
and
gs
dec
hlt
add
mov
dec
cli
into
out
add
sbb
aad
imul
xchg
insl
adc
scas
into
cmp
add
pop
mov
lahf
add
sbbl
mov
pop
out
addb
jbe
cmp
jl
cs
imul
add
xchg
shll
dec
pop
loop
adc
sbb
dec
and
add
iret
add
cli
stos
and
jne
sbb
fbld
mov
jmp
mov
add
pop
cmc
adc
lods
mov
push
xchg
push
xchg
cmp
jo
shll
movsl
das
push
pop
adcb
cmp
add
add
adc
add
mov
call
mov
popf
push
add
adc
jle
add
pop
out
data16
ljmp
fdiv
xor
mov
cmp
jno
jl
push
push
and
or
and
test
push
xchg
mov
inc
test
sbb
std
jnp
jns
in
rclb
jo
inc
push
ss
mov
add
paddusw
call
scas
add
pop
clc
xchg
pop
pop
mov
imulb
dec
fstl
or
push
popf
mov
aaa
xchg
add
or
xor
lds
inc
popf
pop
add
sub
aaa
push
rorl
ja
in
add
pop
mov
arpl
pop
into
mov
cmp
sbb
xchg
out
mov
fisubs
pop
cmp
dec
arpl
xor
dec
sti
rcrl
cmpsb
or
ds
pop
cmp
sbb
imul
test
add
jno
mov
clc
rcll
or
xorb
and
push
aas
pop
mov
fidivrl
mov
cwtl
dec
xor
adc
mov
aad
add
lea
outsl
cmc
lds
ret
test
add
sub
or
rolb
pop
fdivl
imul
mov
ds
imul
sti
mov
add
adc
insb
cli
clc
inc
add
jno
add
loop
hlt
pop
inc
lcall
cltd
es
add
in
lods
loopne
clc
adc
int
add
addr16
int3
pop
xor
fists
test
mov
cmp
in
mov
push
pusha
cmp
daa
pop
cmc
or
fadds
pop
test
inc
mov
loope
mov
xor
clc
cmp
or
mov
sahf
mov
add
adc
fildl
leave
xchg
cs
enter
testl
add
pushl
jecxz
add
adc
insl
add
dec
xor
aaa
ljmp
xlat
dec
loop
cs
fwait
add
fwait
mov
add
inc
sub
add
imul
orb
ljmp
mov
pop
sbb
dec
mov
push
jne
add
push
inc
sahf
cwtl
ja
push
push
sbb
popa
sbb
js
mov
addl
shr
mov
xor
fistps
pop
in
add
xchg
dec
int
cmc
inc
icebp
fstl
popa
sbb
aas
adc
rclb
or
ds
push
add
pop
sbb
loope
or
jp
push
pop
xchg
jecxz
and
mull
add
data16
repnz
add
aam
lcall
jne
mov
ja
loop
add
xor
out
jns
xor
test
mov
enter
add
jl
sbb
and
or
xor
push
add
pop
adc
mov
mov
fimuls
xlat
mov
and
mov
sbb
add
enter
pop
jnp
push
jl
aaa
jmp
cmp
push
idiv
scas
adc
xchg
sub
xchg
jecxz
cmp
je
bts
mov
fmul
mov
data16
cli
push
stc
adc
add
and
cmp
sbb
mov
jg
inc
add
aam
pop
and
in
mov
arpl
add
mov
test
ja
cs
push
filds
aam
mov
pusha
das
xor
ret
fbld
xchg
lcall
addb
leave
mov
and
mulb
call
inc
mov
mov
mov
pop
xchg
or
sbbb
rcll
ret
sub
jmp
xor
clc
js
jo
and
mov
fsubs
fbstp
cltd
fcomps
sarb
pop
fxch
js
jmp
data16
je
add
and
push
fldenv
push
or
sbb
mov
test
mov
ret
fs
lret
mov
daa
and
cmp
add
int3
jge
imul
es
add
lret
xchg
rol
add
dec
jle
xchg
xor
cmp
pop
add
sahf
dec
add
sti
add
js
cmp
add
sbbl
out
imull
xchg
adc
pop
sub
das
fwait
and
ret
lods
mov
inc
xor
fmul
or
cmp
cs
pop
test
jmp
push
daa
push
cmp
and
jle
int3
push
add
inc
loope
call
data16
stos
sub
das
jo
nop
inc
lods
sbb
push
repz
pusha
outsl
pop
sbb
aaa
ret
push
adc
gs
rcr
push
lods
ds
lds
out
pop
mov
xor
movsl
xor
cmpsb
push
dec
sub
mov
dec
inc
cltd
add
in
cmp
data16
sub
lds
outsl
cltd
out
sbb
popa
jp
cmpsb
pusha
add
jae
int
cmp
test
or
add
xlat
icebp
in
out
cmp
and
stos
sub
push
out
or
mov
sbb
test
dec
or
and
std
das
daa
je
pop
dec
popa
loope
notb
dec
scas
adc
mov
leave
bound
cmp
cs
sbb
jne
push
mov
xchg
test
and
jmp
ss
leave
stos
xor
sbb
lods
push
push
mov
pop
inc
int3
xchg
cs
adcb
loope
in
mov
or
add
xor
mov
add
arpl
mov
js
add
in
fcom
add
inc
rorb
xchg
add
mov
sub
fcoml
movsb
add
daa
inc
in
dec
push
and
and
cwtl
add
push
lods
mov
data16
aaa
add
ds
addl
popa
add
test
and
xor
popa
inc
test
add
push
insb
add
out
rcrb
scas
aas
xorl
xor
xor
ja
mov
mov
cmc
daa
les
ja
adc
cmp
call
jae
mov
jp
test
adc
sbb
jno
scas
ljmp
cmp
mov
adc
arpl
lret
mull
add
mov
mov
jae
cmp
xor
out
int3
add
add
mov
fmull
dec
push
inc
add
and
lods
add
cmpl
fsubl
aaa
movsl
xor
mov
or
jae
add
or
mov
ficomps
mov
inc
xor
lea
jb
sub
iret
inc
cli
jmp
inc
xor
and
add
in
mov
jp
in
rolb
lea
push
add
ljmp
test
sub
idiv
add
aad
or
mov
jl
into
jle
rclb
ffreep
inc
movsl
add
stos
shll
sub
and
rolb
lods
in
repnz
xchg
adcl
pop
fistpl
add
mov
test
jmp
mov
push
add
iret
mov
pop
pop
ds
add
insl
shlb
sbb
pop
shll
sbb
cmpl
adc
or
mov
pop
call
xchg
or
test
aaa
sub
cli
mov
jo
ud0
cmc
in
adc
add
push
ret
scas
fdivs
mov
movsb
jecxz
mov
and
xchg
inc
out
pop
rol
jbe
dec
adc
hlt
cmpsb
test
mov
ret
rolb
loop
ret
pop
rolb
adc
add
rorb
fwait
cltd
loope
push
push
pushf
sub
add
add
add
and
xchg
ficoml
mov
in
je
add
enter
mov
repz
pop
mov
or
xor
push
rolb
cli
fwait
jle
int3
les
pop
inc
mov
add
dec
mov
jns
add
inc
or
lcall
mov
loop
aad
jae
jl
mov
pushf
imul
popa
cmp
add
movsl
xchg
cmpsl
test
ds
inc
or
adc
xchg
sbb
addr16
ret
jae
jl
rolb
mov
out
add
stos
xchg
dec
idivl
call
sarb
xor
add
mov
pop
scas
add
xchg
inc
bound
add
popa
mov
pop
loopne
dec
rcrb
add
lds
pop
out
imul
sub
inc
inc
fsubrs
test
arpl
rcrb
cwtl
std
pop
testb
mov
dec
add
sbb
icebp
addl
xchg
imul
sahf
cmp
rcl
pop
jns
cmp
stos
jmp
ss
add
jbe
leave
ficomps
test
pop
lods
pop
or
add
sbb
movsb
push
mov
add
in
cmp
cwtl
cmpl
cld
sti
outsb
add
scas
mov
dec
cli
cld
add
in
push
filds
mov
adc
add
mov
daa
clc
loop
xor
out
sbb
cli
out
dec
jno
test
cmpsl
push
or
jne
add
xor
mov
scas
ss
lods
test
insl
test
gs
pop
mov
jmp
adc
cld
outsl
push
xlat
push
adc
dec
test
and
bound
add
outsl
sbb
dec
es
test
mov
push
adc
xor
in
xchg
adc
mov
in
pop
mov
fidivrl
mov
imulb
aas
clc
aad
aas
xor
test
cmp
nop
fisttps
scas
ret
mov
rorb
ss
add
lods
xchg
dec
jns
shll
jl
loopne
add
dec
fucomp
in
jbe
add
xchg
shrb
and
add
jp
mov
hlt
in
xor
cmp
insl
mov
mov
jo
pushf
out
mov
and
jp
adc
outsb
cmpsb
mov
nop
clc
pop
push
je
movsb
add
pop
adc
out
filds
add
xchg
into
sarl
and
push
mov
hlt
loope
add
mov
cmp
in
mov
add
js
pusha
fnsave
data16
add
jns
jne
mov
scas
xlat
pusha
mov
mov
dec
pop
add
add
repnz
jno
xchg
addb
mov
loopne
outsl
xchg
in
repnz
pop
xor
add
lea
lods
add
fwait
or
pop
scas
filds
js
gs
xor
orl
add
push
xor
es
rcrb
scas
xchg
add
xor
push
and
add
stc
xor
mov
not
add
adc
xor
imul
xchg
dec
inc
push
scas
ljmp
hlt
xor
cmc
es
ret
bound
sbb
mov
adc
cs
sbb
xchg
mov
add
mov
cmp
lock
inc
shlb
aas
in
jbe
das
lock
push
nop
ljmp
push
mov
push
sub
inc
or
divb
test
js
lea
add
lahf
mov
add
sub
fiaddl
pop
cmp
mov
sub
enter
jae
and
sbb
addr16
clc
icebp
out
mov
and
into
mov
mov
ss
add
fcomi
add
repnz
mov
popf
fdivs
add
adc
shll
add
pop
popa
cmp
pop
imul
pop
add
cmp
adc
or
hlt
or
jno
mov
inc
add
mov
ja
iret
cmp
mov
dec
cwtl
rol
inc
add
sub
test
add
shrb
pop
pop
sbb
aas
add
dec
inc
jg
sti
or
out
jge
bound
add
out
popf
xchg
mov
lcall
repz
xor
popf
and
and
inc
add
mov
mov
sbb
jo
stc
cmp
push
out
subb
gs
rsm
jecxz
loop
adc
xlat
rorb
xorl
sbb
stos
ds
jge
fdivrs
push
add
lret
je
mov
lds
pushl
add
orl
cmp
push
icebp
test
mov
push
pop
stc
sbb
add
inc
test
adc
inc
add
mov
jg
sets
cmp
and
dec
xchg
sbb
hlt
ret
roll
pop
mov
xlat
dec
push
jl
mov
cltd
rcrb
mov
ljmp
test
pusha
inc
sub
lret
inc
shrb
pop
xchg
and
mov
jecxz
or
jl
mov
imul
test
xor
xor
add
xorl
les
adc
imul
pop
and
mov
xchg
cli
repnz
insl
lock
ret
mov
in
dec
addr16
je
fsubrl
inc
push
dec
xchg
popf
jle
insl
adc
aas
add
pop
cmp
sub
push
in
repz
xor
mov
cmp
pop
cmc
add
pop
insb
out
lret
add
sub
lock
mov
cwtl
lcall
je
jne
ss
add
mov
inc
inc
fcoms
pushf
add
dec
pop
clc
jns
and
mov
jg
dec
push
and
mov
rcrb
push
inc
or
push
pop
xchg
cld
mov
inc
iret
nop
adc
not
add
cmp
xorl
and
movb
add
test
pop
lods
or
sub
std
sub
lahf
orl
test
pop
sbb
lea
pop
fsubr
xor
jl
adc
in
add
xchg
inc
sbb
jp
cmpsb
fisubl
sti
enter
nop
cmp
xor
inc
in
sub
mov
str
es
mov
pop
std
cltd
in
mov
aaa
mov
test
or
add
push
sbb
mov
jns
or
shlb
pop
mov
movsl
add
add
addl
lret
mov
or
sbb
mov
cmpsl
adc
pop
add
shlb
out
adc
add
fwait
clc
filds
cmp
add
cmp
mov
movsb
rcrl
xor
in
lock
cmp
pop
jo
mov
mov
mov
fldln2
pop
adc
push
add
cmpsb
add
jecxz
xchg
add
je
in
mov
inc
outsl
jno
add
xor
nop
xchg
pop
push
inc
pop
push
or
mov
mov
loop
push
repnz
sbb
imul
jecxz
add
pop
jl
add
rolb
sahf
loop
add
test
in
xor
addr16
mov
nop
pushf
push
fsts
mov
jp
add
sarb
xlat
addl
adc
rcrb
jae
add
je
es
lea
add
mov
jecxz
add
adc
inc
pop
pop
xchg
mov
ja
push
lret
add
jbe
sbbl
add
mov
cmp
mov
xchg
aad
dec
mov
fdivrp
sbb
push
les
mov
xchg
push
sub
add
lahf
push
and
mov
add
add
cmp
add
in
icebp
and
add
fadd
push
sbb
inc
je
repnz
add
fldt
ret
mov
test
out
or
sub
in
jb
xorb
xorb
stc
sbb
jnp
mov
xchg
inc
lds
iret
dec
rclb
jmp
adc
test
stos
inc
and
pop
mov
shrb
pushf
dec
jbe
mov
push
call
roll
scas
in
mov
push
mov
ss
mov
add
adc
in
cmp
insl
movsb
pop
loop
js
cmp
jmp
mov
call
decb
jge
jmp
ds
jae
and
and
push
add
xchg
insl
mov
pop
clc
mov
push
dec
add
jno
cld
bound
xor
addb
xorb
nop
push
dec
int
add
fnstenv
pop
jmp
ds
pop
jno
add
jne
js
imulb
add
leave
dec
dec
out
adc
daa
ret
push
jns
add
mov
mov
jno
dec
jo
pop
add
sub
mov
aam
adc
xlat
cmp
sbb
mov
fcompl
insb
add
inc
or
add
jl
xorl
adc
loopne
ja
jne
pop
rcr
xchg
sbb
cmpl
jmp
fidivrs
mov
movsb
lods
mov
sub
sahf
scas
or
mov
sub
mov
sub
adc
add
lret
sbb
sbb
orb
sbb
fdivrs
add
push
and
je
add
scas
repnz
mov
mov
mov
and
xor
inc
je
jecxz
pop
add
mov
push
sub
add
rol
add
dec
frstor
rcll
cld
inc
xchg
fs
add
mov
push
adc
scas
push
enter
sbb
stos
movsb
rcrb
repz
add
mov
lds
xor
xchg
jo
repz
out
scas
pop
xor
rep
xchg
sub
shr
add
jb
cmp
dec
jns
add
cs
sbbl
femms
push
lret
cmp
pop
shrb
mov
jnp
add
mov
sub
sbb
leave
in
xor
cwtl
push
arpl
adc
rcrl
pop
and
mov
mov
ret
rcrb
jmp
jnp
lods
mov
mov
add
lods
add
inc
jp
aaa
aad
xor
pusha
and
fwait
clc
push
jb
call
pushf
cmpb
or
iret
inc
aam
dec
stos
test
gs
mov
inc
xchg
push
bnd
stc
jae
mov
xor
lds
push
rol
test
add
cmpb
sbb
lahf
mov
mov
andb
or
mov
push
sbbl
lds
loopne
xchg
mov
ljmp
inc
leave
or
ljmp
out
outsl
xchg
mov
sti
pushf
adc
lods
add
in
sub
add
inc
lods
les
jno
xor
add
jae
mov
fs
jle
inc
test
inc
pushf
inc
lods
push
adc
mov
mov
push
pop
xor
and
rcl
mov
pop
jae
cmp
add
pop
fidivl
xchg
repnz
push
mov
push
or
aam
add
xor
sub
cmpb
sti
pop
xor
pop
add
cmpsl
jg
adc
mov
jle
adc
inc
jp
push
std
popf
imul
in
sti
mov
push
cmp
pusha
fwait
stc
lods
pop
push
lds
mov
cmpsl
rorb
push
loope
cltd
lds
dec
add
dec
pop
xchg
xor
mov
pop
jg
cltd
int3
fcmovb
pop
xchg
mov
add
inc
or
ds
int3
out
mov
cmp
or
stos
jmp
xor
rcrb
dec
jp
neg
pop
inc
inc
imul
scas
cmp
call
mov
sbb
add
or
out
add
add
add
push
sbb
mov
pusha
cli
pushf
rcr
add
in
dec
add
pop
popa
inc
sbb
sub
jg
leave
push
stos
outsb
int
xorps
into
jge
insb
outsl
call
mov
and
add
inc
adc
loop
test
add
cwtl
subl
push
movsl
call
mov
mov
jns
fdivs
mov
and
cmp
xor
pushf
mov
jae
push
gs
xlat
or
je
adc
ror
nop
jnp
and
orb
xchg
jp
fldl
orl
add
hlt
loop
add
push
cmp
add
add
jno
jl
jecxz
inc
gs
push
add
xchg
out
jge
in
int
sbbb
or
dec
xchg
add
sbb
push
or
mov
or
and
fnstcw
std
outsl
repnz
push
and
inc
push
adc
orb
ds
jns
fildl
data16
dec
add
dec
mov
daa
adc
or
pusha
rcll
pop
inc
dec
pusha
add
or
ficomps
and
das
add
push
push
loop
dec
outsl
stos
jne
int
and
adc
push
pop
loope
fsts
push
push
notb
xlat
sbb
cmp
mov
xchg
div
push
add
into
cmp
xor
cld
ja
cmp
aad
mov
add
jmp
inc
jge
jns
lock
nop
in
add
xchg
rcll
in
push
rorb
je
sub
dec
add
ss
in
div
add
jbe
push
enter
or
xchg
fsin
pusha
aas
out
sar
lods
add
jp
cmp
icebp
adc
cwtl
xchg
dec
add
clc
shrb
add
inc
mov
mov
mov
iret
inc
add
pop
xor
push
inc
mov
outsl
loopne
add
or
add
add
shlb
pop
mov
int3
add
nop
pop
xor
sbb
jns
cmp
dec
dec
inc
or
mov
negb
ret
dec
outsb
out
incl
ljmp
pop
jnp
sbb
lods
push
pop
mov
fwait
add
addl
sarb
cwtl
add
ret
dec
out
ret
or
sub
xchg
mov
or
push
iret
adc
mov
fists
mov
and
cmp
jl
std
sub
sbb
jecxz
icebp
sbb
test
inc
test
sarb
mov
out
leave
push
inc
mov
shrb
or
jno
xchg
lds
ficompl
add
adc
testl
sbb
in
ret
push
ja
add
in
rcrl
je
jle
ror
inc
mov
pop
sbb
and
sub
ret
addr16
std
jbe
adc
add
setle
ret
pop
testb
push
xor
push
xchg
jae
push
jl
add
mov
cmp
mov
rol
pop
add
scas
mov
xchg
sbb
out
jmp
mov
js
add
addl
add
push
sbb
call
in
add
movb
xor
and
inc
shlb
xor
bound
add
pop
and
insb
dec
jns
mov
lcall
xor
xlat
xchg
clc
or
mov
rcll
xor
add
mov
add
xchg
fadds
add
shlb
pushf
or
push
arpl
and
add
sub
pop
adc
mov
ljmp
xchg
aad
add
orl
push
add
aaa
icebp
xchg
pop
fs
movsb
ss
or
cmpsl
loop
add
repz
add
add
xchg
idiv
shr
add
mov
lds
push
mov
xlat
ffreep
cmp
lret
cmp
add
out
gs
lret
rorb
jnp
std
xchg
push
add
xorl
testl
in
adc
and
mov
xor
mov
mov
lea
shl
mov
clc
inc
xchg
fs
jge
jo
es
push
adc
cld
int
loopne
add
pop
push
jle
or
cmp
out
jo
xor
push
out
mov
pop
ja
div
add
movsl
popf
int3
addl
cmp
xchg
je
cmp
shl
mov
add
jae
sub
sti
jg
fsubs
push
icebp
xchg
enter
push
mov
push
and
aas
stc
adc
jns
xor
divb
in
loopne
add
scas
out
shll
mov
jnp
in
or
adcb
add
mov
mov
jge
adc
mov
pop
mov
lods
or
fs
xchg
mov
stos
pop
or
mov
jae
addb
repz
mov
sbb
add
clc
je
leave
sbbl
xor
arpl
cmp
lret
or
jb
cli
push
in
lods
inc
add
sbb
imul
jae
dec
and
add
add
or
ret
xchg
sbb
push
jecxz
outsl
add
mov
jp
xor
movsb
xchg
jae
dec
lret
xchg
pop
ss
sar
pop
add
jne
mov
add
pushf
ja
mov
lock
push
fmul
pop
insb
pop
xchg
hlt
mov
lahf
clc
mov
pop
int
jg
addr16
sarb
loop
sahf
add
sbb
shrb
push
jnp
pop
call
cmpsl
add
xor
fcomps
or
dec
and
add
cwtl
mov
in
adc
ficomps
mov
lock
pop
push
cmpsl
push
or
add
pop
ljmp
orb
fidivrs
add
addr16
cwtl
jge
xor
sub
loopne
and
sbbb
push
push
outsl
nop
in
enter
cmc
andb
les
sub
ret
sbb
sbb
or
cmp
push
dec
cld
mov
inc
add
loopne
and
xor
jge
jle
sbb
mov
xor
mov
xor
jo
jecxz
outsb
jge
mov
fnstenv
mov
add
int
pop
push
outsb
imul
ret
inc
jmp
jne
cmp
add
mov
add
aad
in
push
pushf
adc
lods
insl
add
sub
xchg
int3
mov
repnz
fiaddl
jbe
xor
jmp
xchg
xchg
jle
pop
dec
sub
mov
push
jecxz
fsub
sar
insl
dec
push
add
lahf
cs
stos
rorl
loope
pop
cwtl
push
aas
arpl
push
xor
mov
add
pusha
call
add
pushf
cwtl
inc
adc
add
ljmp
pop
call
add
add
add
jae
jle
sbbb
test
and
imul
cs
inc
pop
add
ror
loopne
push
push
mov
lahf
xlat
pop
add
and
jmp
add
mulps
sub
lahf
gs
nop
lods
mov
data16
mov
mov
stc
mov
rorb
ror
xchg
add
scas
sahf
je
xor
mov
inc
test
sahf
mov
or
out
dec
push
add
in
or
push
mov
cmpsl
cwtl
clc
and
inc
imul
ljmp
jp
arpl
xchg
or
and
add
jp
xchg
cli
test
gs
push
mov
jns
imul
and
xor
add
inc
fistpll
aas
sub
imul
sbb
pusha
nop
arpl
rcrb
sbb
jns
fisttpll
xchg
out
fdivr
imul
arpl
add
jle
push
cmp
and
adc
mov
ds
test
outsl
rdtsc
sahf
pusha
mov
mov
daa
add
pop
cmc
pop
sarl
gs
inc
ja
jp
or
dec
icebp
fwait
loopne
clc
sub
mov
addr16
pop
push
adc
sbb
jno
add
aas
rcrb
mov
mov
insl
adcb
add
mov
mov
testl
jb
ja
add
jae
pop
pop
stos
mov
test
push
lock
arpl
add
mov
or
add
mov
fimull
inc
aad
sbbb
mov
jl
hlt
out
jl
pop
fs
xchg
cs
pop
inc
or
mov
xor
clc
xor
iret
xor
xchg
popf
push
psrad
insb
popa
inc
and
lock
push
adc
push
cmp
lods
idivl
pop
mov
js
outsl
fildll
adc
sbbl
std
xchg
sbb
or
dec
adc
sub
fisttpl
sbb
les
aam
std
pusha
sub
ja
cmp
js
adc
inc
dec
jmp
jne
dec
adc
sahf
mov
mov
fcoml
rolb
cmp
test
push
addb
sub
sub
loopne
add
aad
out
push
enter
push
add
call
in
cmp
mov
rcrb
push
push
adc
ja
jmp
fisubrs
pop
pop
pop
leave
add
ljmp
mov
aas
push
add
inc
mov
shll
popf
repnz
dec
sti
xchg
cmp
add
or
jmp
cmp
xchg
push
jbe
cmp
fwait
adcl
add
subb
and
pop
rcll
orb
test
mov
leave
sbb
out
xor
or
lds
mov
push
pop
adc
or
lds
adc
and
es
out
das
dec
jo
test
or
fisubs
cmc
mov
popa
xchg
xor
add
movsl
mov
or
cmp
or
push
scas
xchg
add
xchg
or
mov
pusha
mov
and
icebp
enter
add
sbb
bound
mov
in
jl
ret
sub
mov
cwtl
jg
or
add
sbb
jp
mov
andb
add
mov
push
sub
and
add
shrb
and
repz
and
pushf
repnz
mov
outsb
retw
orb
and
xorl
mov
sbb
cmpsl
xchg
test
shlb
and
add
ret
mov
loop
scas
jle
lods
movsb
pop
add
ficomps
ret
add
rcr
jl
popf
bound
test
push
jno
add
cmpb
jmp
adc
sub
add
xor
jmp
andb
das
and
je
cmp
pop
nop
push
std
xchg
and
fistps
and
lret
and
sbb
adc
mov
cmp
out
xorb
dec
cmp
push
add
ss
rcll
jge
aaa
xchg
xchg
fadd
mov
ret
mov
jmp
push
ljmp
psraw
inc
xchg
add
out
push
enter
jo
add
aam
cmc
test
ret
nop
push
roll
int3
pop
popf
ret
call
mov
xchg
inc
xor
test
mov
pop
daa
cmp
jl
add
inc
aam
pop
shll
inc
xchg
cmp
jns
adc
imul
stos
add
mov
xchg
sub
mov
out
xor
jecxz
fadd
leave
cmp
dec
xor
pop
loopne
mov
add
iret
mov
xor
xchg
cmpsb
jne
mov
pop
and
shrb
scas
fwait
clc
lock
add
movl
sub
cmp
push
sbb
aad
cmp
push
or
pop
addb
cmpsl
inc
lahf
js
sbb
in
push
adcb
add
lret
xchg
mov
add
nop
mov
xchg
iret
sub
xchg
aam
pop
mov
test
sbb
jns
lods
out
repz
lret
sahf
xchg
mov
and
adc
mov
add
jle
sub
mov
loop
andb
in
pop
xor
movl
xchg
cmc
cmp
push
mov
hlt
sbb
cmp
dec
or
fisubs
adc
std
sbb
push
xor
loopne
mov
adc
mov
test
inc
roll
js
outsb
push
gs
in
adc
sbb
sub
pop
adc
adc
outsb
adc
jns
or
jo
addb
jns
push
push
nop
or
jns
add
push
mul
loopne
add
jb
sarl
outsb
add
repz
ljmp
cmp
je
sbbb
xor
or
mov
call
dec
call
add
dec
adc
push
add
aam
pusha
mov
or
std
sbb
sbb
sbb
fwait
sub
fsts
enter
add
add
xor
loopne
push
lret
outsb
sbb
mov
xlat
bound
aas
pop
sbb
or
cwtl
imul
inc
cmp
and
add
nop
pop
repnz
bound
add
and
and
mov
loope
add
jl
rolb
pusha
fs
lcall
xchg
sti
pushf
dec
mov
inc
pop
add
push
test
add
cmp
adc
lcall
arpl
decb
sbb
push
add
cmp
in
pmaxub
std
ljmp
and
in
loope
add
jp
pop
imul
andb
in
sub
and
lcall
push
aad
push
adc
and
js
push
test
add
insl
scas
stos
adc
mov
pop
sub
adcb
inc
jle
insl
sbb
cmp
int3
out
pushf
push
lock
mov
addl
and
add
lods
pxor
insl
mov
push
cmp
gs
movsb
imul
mov
mov
add
cmp
in
xchg
jnp
mov
jge
mov
add
inc
sahf
in
push
xchg
fdivrs
add
nop
dec
faddl
lahf
xor
inc
bound
push
fistps
push
cmc
popa
cmp
fsubrs
sbb
fdivrp
loope
ror
imul
push
test
push
pop
sbbb
mov
add
out
xor
clc
ljmp
inc
sub
sbb
sub
lods
ja
jno
pop
cli
ja
mov
xor
fs
test
andl
hlt
stos
mov
or
push
add
arpl
aad
push
pop
add
test
fsubrl
ja
out
in
das
sbbl
dec
shlb
push
jl
repz
push
outsb
add
iret
and
mov
and
jno
ret
push
call
add
aam
xchg
nop
insl
out
add
daa
jecxz
fiadds
loope
addr16
lds
jo
add
add
sub
dec
test
dec
popf
add
push
pop
fwait
mov
sub
ja
sbb
outsb
addb
jne
enter
and
jg
cmp
pop
rolb
rep
push
jp
xor
ud1
xchg
popf
push
xchg
inc
cwtl
repz
adc
imul
add
filds
sbb
mov
mov
mov
xlat
add
fcmovnbe
jge
add
sbb
fwait
sahf
ret
sbb
jne
icebp
or
adc
pop
inc
stos
jp
inc
faddl
ficoms
jmp
add
xor
mov
bound
pusha
and
add
jb
jmp
mov
mov
js
lret
sub
push
andb
pop
adc
pop
adc
leave
pushl
cmp
dec
or
jns
xchg
xchg
push
addr16
imull
add
xor
cmp
or
push
cmp
jecxz
pop
ja
jl
imul
cmp
jnp
loopne
sbb
cs
mov
test
scas
js
lods
jle
aam
add
repz
jp
add
mov
and
pop
pop
icebp
test
mov
punpckhbw
ret
push
mov
out
rorl
adc
imul
pop
jno
into
xchg
add
xchg
lods
mov
push
and
lock
movsb
pop
mov
loop
inc
aaa
and
jle
inc
andb
add
or
lcall
mov
push
xchg
cwtl
negb
dec
sbb
mov
push
sbb
fs
push
test
or
movl
pop
mov
lahf
loopne
cmp
mov
jo
mov
sub
push
mov
movsb
jnp
push
jmp
fadds
mov
sbb
add
pop
xchg
shll
jmp
inc
cmp
orb
mov
pushf
add
pop
test
out
aam
fidivrl
add
lds
sbb
add
mov
movb
jns
cmp
add
jnp
xchg
jb
int
mov
cmpsb
dec
sbb
mov
imul
cmp
pop
and
cmpsl
or
out
aas
cmp
and
push
xlat
es
pop
clc
jge
pmulhw
loopne
xchg
jo
jl
cmc
add
sub
pop
iret
loopne
adcb
add
xor
xorb
lock
sbb
mov
je
lds
shr
mov
bound
pop
or
fadds
jne
rcrl
fsts
lcall
add
fidivs
mov
lds
jb
pushf
jo
aas
add
imul
loopne
dec
inc
add
jbe
cmp
jl
es
xor
enter
and
cmp
sti
add
xchg
mov
roll
pop
aam
rclb
mov
push
pop
xchg
in
cli
push
mull
test
cwtl
xor
jb
add
add
mov
arpl
inc
mov
iret
pop
add
and
dec
ja
cmp
lods
lret
fldenv
add
pop
sbb
add
and
js
add
jge
xchg
or
stos
cmp
and
sbb
ds
or
lds
mov
cwtl
add
shl
xor
add
out
cltd
imul
xchg
rorb
push
add
movsb
xchg
sbb
inc
mov
int3
int
adc
jae
push
leave
pop
icebp
xorb
insl
aas
add
inc
xor
push
popf
adc
push
sbbb
pop
xor
outsb
imul
pushf
inc
fwait
arpl
stos
out
add
mov
rcrl
shll
fistpl
add
dec
add
or
jmp
mov
jge
test
inc
lret
sbb
mov
sub
jne
stos
xchg
mov
add
je
inc
ljmp
push
fldcw
shl
in
pop
sbb
add
mov
pop
push
icebp
push
fistpl
pop
adc
mov
cmp
lea
mov
xchg
jne
add
inc
rcrb
lea
add
xor
cmp
push
add
das
xchg
and
aas
fadds
outsl
cmp
pop
cmp
add
mov
lea
stc
sbb
pop
inc
inc
iret
aam
pop
xchg
das
adc
and
leave
fistps
mov
je
aam
add
push
jnp
inc
push
imul
movsb
je
and
or
shlb
pop
xor
add
cmpsl
in
ltr
loope
rclb
fsts
pusha
scas
nop
or
inc
add
test
ret
nop
push
add
aas
enter
add
subb
push
pop
mov
leave
mov
xlat
xor
aas
add
adc
pop
add
dec
mov
dec
lods
insl
add
mov
in
sbb
popa
cltd
xor
aas
ret
mov
adc
inc
push
jb
sub
dec
fnsave
in
movsb
rep
pop
pop
sbb
jmp
out
sub
ljmp
jecxz
add
push
popa
faddl
je
add
sbb
push
test
xor
loop
lds
arpl
cmp
add
rorl
dec
ja
pop
add
out
xchg
addl
add
pop
dec
fcompl
dec
out
lods
fstl
rcl
iret
ja
ds
cmp
fsubrl
mov
ljmp
shlb
or
in
aad
xor
in
daa
faddl
cmpsl
aaa
xor
jo
sahf
pop
cmp
jl
cld
sub
mov
repz
adc
cmp
orb
add
mov
outsb
enter
xorb
xchg
outsl
aam
add
repz
jns
xorl
xchg
jo
stos
jecxz
add
rolb
mov
rcrl
push
mov
rcr
add
dec
xor
jns
push
mov
mov
jae
dec
stos
cwtl
add
arpl
xchg
inc
stc
rcrb
xor
add
ljmp
jp
lock
add
loop
mov
mov
xchg
outsl
add
xchg
mov
out
ja
sbb
ret
add
les
loope
xchg
mov
mov
das
dec
test
nop
out
mov
xchg
mov
add
aaa
pushf
lods
int3
xor
jo
push
push
aaa
add
jge
push
dec
rorb
push
lock
jno
arpl
stos
fdivrl
mov
fildl
cmpsl
add
ds
push
add
outsl
and
fldcw
in
out
aaa
push
mov
add
sub
stos
popa
fildl
pop
nop
pushf
mov
xorb
and
cmp
sbb
subb
jo
incl
cmc
out
cld
lahf
repz
mov
add
lock
add
mov
scas
jnp
add
jo
add
push
fwait
inc
xchg
hlt
jae
fldl
dec
xchg
clc
js
faddl
scas
inc
jge
dec
or
jle
push
xchg
lods
pop
outsb
loopne
push
sbb
bound
es
ja
jno
or
popa
das
iret
add
xor
add
sbbl
jnp
data16
les
lret
pushf
ljmp
in
xor
rcrb
xchg
pop
jl
add
mov
mov
and
sub
xlat
dec
add
and
mov
mov
movsl
fiaddl
gs
filds
and
push
addb
xchg
arpl
push
ds
adc
jecxz
sbb
pop
stc
test
pop
add
mov
gs
imulb
enter
and
ss
pop
test
jmp
add
sub
lods
pop
stos
sub
add
xchg
mov
mov
in
mov
das
inc
push
and
inc
add
mov
into
sbb
xchg
jo
mov
add
push
subb
mov
clc
ret
pop
jns
add
jp
xchg
je
mov
xor
add
or
test
out
aam
dec
add
xor
loop
rcl
sub
cmp
sub
cmp
push
daa
sahf
xchg
sbb
add
fisttps
mov
push
cmpsb
xor
movsb
ss
in
rolb
cmp
lcall
fdiv
pop
xor
stc
jp
jnp
add
test
jmp
das
xor
push
fildll
jp
dec
cmp
addr16
xorb
out
push
in
or
jns
jge
orl
pusha
sbb
pop
mov
call
and
fstps
add
mov
call
cmp
cmp
inc
outsl
jecxz
add
lret
leave
push
add
cmp
sbbb
stc
jle
xor
lret
repnz
jge
popa
in
ds
sub
pop
mov
pop
sahf
nop
mov
or
push
ds
sbb
ss
jmp
les
mov
adc
pop
fstl
mov
mov
std
push
xchg
mov
or
jbe
dec
mov
add
pushl
mov
lock
popa
mov
inc
call
jle
stos
adc
mov
adcl
add
fcmovbe
stos
sbb
push
jbe
pop
sub
inc
push
popa
xchg
or
adc
mov
add
or
inc
rolb
jmp
dec
loope
xchg
stc
fldl
lods
add
clc
inc
cs
sub
or
fiaddl
std
add
imul
xor
mov
add
and
mov
fstps
mov
outsl
add
idivb
add
and
fistpll
daa
cmp
pop
ljmp
sbb
sahf
push
inc
inc
imul
pop
sub
mov
or
dec
xor
mov
push
imul
dec
add
pop
insl
dec
testb
lret
into
jno
subb
stos
insl
and
dec
xchg
cmpsb
loop
leave
ja
shlb
lock
xchg
jmp
add
iret
cmp
lods
xchg
sbb
jg
leave
fistps
pop
push
cmp
aas
test
icebp
nop
add
add
cld
sbb
scas
pop
add
lock
pop
inc
ret
ljmp
mov
movl
lcall
jo
jge
sbb
xor
out
sub
cmp
cs
imul
aas
jbe
xchg
and
add
ja
xchg
inc
int3
cmp
dec
js
pop
lods
shrl
and
pop
xchg
rcrb
outsl
add
shl
or
mov
out
fmull
andl
dec
arpl
jne
cwtl
dec
add
fstpt
sti
pusha
test
push
add
pop
repz
loope
mov
push
leave
lds
add
adc
xchg
fidivl
gs
mov
adc
aam
lret
mov
fs
add
insb
loope
add
outsl
mov
mov
lock
loope
out
xchg
call
push
iret
mov
add
mov
gs
fnsave
mov
inc
clc
pop
cmp
dec
aad
mov
jb
add
shrl
cwtl
ja
daa
icebp
shr
add
out
rcrl
push
shr
cmp
out
in
pop
xchg
test
adc
add
ljmp
test
decb
lea
jns
lds
dec
or
sbbl
mov
ret
scas
pop
rolb
loop
pop
movsl
and
jns
push
outsb
jb
add
shlb
pop
xchg
jnp
sbb
or
icebp
add
push
repz
adcb
movl
add
push
mov
xlat
xlat
movlps
fstpl
cltd
leave
scas
in
sarb
or
cwtl
aaa
xor
pop
repz
xchg
mov
or
enter
xchg
inc
cmp
mov
stos
das
push
lret
sti
add
leave
mov
mov
jnp
and
pushl
cmc
xor
pushf
xlat
dec
rclb
sbb
in
pop
and
mov
add
test
enter
and
pop
pop
cmp
in
push
mov
push
xchg
imul
and
imul
sub
and
arpl
add
cmp
insb
out
movntps
stos
mov
int3
pop
add
rcll
or
loope
decl
push
out
dec
add
pop
jnp
fstps
lahf
xchg
sti
shr
add
test
pop
fiaddl
test
add
adc
mov
fadds
push
rcrb
add
xlat
bound
testb
out
orb
test
aas
lcall
pusha
push
inc
mov
pop
fdivp
lea
xchg
cmpsl
aas
sub
push
xchg
outsb
inc
mov
mov
push
arpl
cmpb
cmpl
mov
bound
add
jp
sbb
pusha
inc
std
fisubrl
lret
xor
cmp
fcmovne
test
repnz
push
sarl
dec
mov
sbb
add
push
fidivrs
ja
shlb
jo
data16
push
jecxz
je
movsb
cmc
sbb
lret
ret
enter
add
ret
add
mov
jb
clc
push
mov
out
dec
nop
adc
sti
push
adc
lea
outsb
subb
add
lret
add
cmpb
mov
lods
sub
sarb
jmp
add
and
jge
adc
add
lret
pop
iret
cmc
pop
pusha
cltd
or
or
call
add
data16
push
aas
add
in
scas
mov
pop
insl
sbb
pop
insb
sahf
aas
add
cmp
in
rol
xor
test
mov
cmp
lock
into
fists
pop
add
add
jecxz
push
roll
cmpsb
movsl
fsubr
fwait
mov
shlb
testb
sbb
lret
dec
xor
inc
subb
shll
or
dec
lock
lahf
pop
test
in
incb
ja
cmp
lret
dec
push
mov
inc
adcl
shl
xor
push
cmpsl
insb
aaa
loop
add
sub
repz
xchg
sti
mov
push
mov
add
xchg
pushf
loope
pop
inc
pop
rcr
inc
aad
cwtl
inc
pop
mov
test
push
jl
sahf
push
add
fwait
jge
lds
xchg
cmp
stos
push
fistps
fdivs
or
jl
popf
sub
push
adc
jecxz
movsb
mov
pop
or
das
and
adc
addr16
int3
add
jmp
add
sbb
push
add
dec
loope
sbb
cmpsb
add
mov
or
pop
andb
cwtl
ja
jg
add
mov
in
add
push
mov
pop
in
cwtl
in
out
clc
or
test
fnstsw
cltd
jo
incl
adc
mov
jno
addb
mov
xor
cmp
lock
xor
cmp
sub
lea
cmp
call
insb
in
adcb
push
stos
or
das
mov
cli
push
movb
ret
cmp
dec
clc
push
repz
jge
pusha
mov
pushf
andb
lock
adc
sarl
mov
or
ficoms
shlb
cmpeqps
xlat
lahf
and
pop
fidivs
pop
add
sbb
sbb
addb
xchg
fs
mov
xchg
push
cli
add
inc
sbb
shlb
push
sub
cltd
xor
ficoml
adc
addl
shr
sti
sub
les
add
jbe
test
iret
ja
or
sahf
arpl
mov
sbb
lret
scas
mov
xchg
and
cmp
bnd
add
jo
mov
inc
stc
cmp
mov
data16
xor
inc
adc
cmp
push
adc
lods
call
mov
mov
mov
out
leave
xor
xor
add
imul
orl
add
les
daa
data16
mov
cmp
pop
dec
movl
nop
mov
inc
ret
jg
adc
xor
add
cmpsl
addr16
popf
fiadds
sti
mov
or
xorl
push
mov
shlb
mov
xorb
sbb
jg
and
inc
jo
jecxz
pop
ljmp
inc
cmp
call
cmpsl
ds
add
rcrl
lahf
mov
add
arpl
add
cmp
out
xor
shlb
mov
pop
in
add
add
pusha
adc
add
mov
and
scas
jl
add
xchg
nop
jmp
pop
out
and
mov
iret
sub
imul
dec
add
jecxz
mov
adc
and
or
ljmp
mov
inc
push
sub
jmp
or
dec
mov
and
rcrb
push
add
jle
aam
out
bound
inc
out
enter
daa
in
add
mov
add
dec
mov
mov
les
loopne
jo
lds
outsb
sbb
mov
decb
js
inc
sti
pop
add
cmp
jge
fsub
and
loope
xchg
test
sbb
inc
je
lods
subb
adc
scas
jns
dec
dec
jo
adc
mov
sbb
xor
ljmp
pop
sbb
adc
push
mov
lea
push
ds
ret
imul
sahf
dec
insb
loopne
aaa
add
gs
out
cmp
xchg
movsb
lock
dec
mov
add
mov
inc
pop
pop
cmp
add
jg
jmp
subb
or
popa
pop
loopne
sbb
dec
jne
mov
add
arpl
and
add
jecxz
cmp
neg
adc
js
loope
adc
lahf
sbb
int3
addl
aas
push
movsl
popf
jbe
mov
jle
fdivrl
adc
inc
dec
add
jo
insl
dec
push
inc
das
add
out
leave
jo
pop
and
loope
mov
cmpsb
xchg
into
pop
cmp
cwtl
outsb
cmpsl
fstpl
add
mov
fiaddl
mov
mov
nop
into
add
test
lret
shlb
and
sub
xor
icebp
lods
mov
pop
add
imul
divb
addl
pushf
movsl
aad
add
outsl
push
int
gs
fldl
add
cmp
mov
pop
call
inc
pop
sub
mov
pop
sub
shll
add
pop
push
insl
lock
push
add
pop
movsb
adc
pusha
loope
xchg
pop
adc
jp
ret
mov
dec
add
add
sub
add
jecxz
es
gs
mov
jbe
or
loope
and
sbb
push
insl
cmp
adc
add
xchg
jp
into
mov
and
popa
jne
xlat
add
gs
xchg
out
mov
push
shlb
cmp
dec
xorb
fsubl
in
xor
movb
loopne
mov
add
mov
pop
or
adc
aaa
pusha
dec
mov
jge
stos
es
inc
movsl
xchg
add
sub
je
add
xor
xchg
cwtl
sub
add
add
mov
and
add
jge
adc
mov
cmc
call
or
icebp
loop
sbb
cmp
mov
stos
insb
mov
and
repz
data16
adc
cli
mov
xchg
cmp
ja
mov
push
gs
add
jae
cmp
xchg
mov
adc
inc
into
pop
cli
sub
sub
push
lock
stos
mov
add
and
push
add
loop
pop
jnp
pop
sbb
xlat
xor
jmp
add
in
stos
ret
mov
adc
in
adc
inc
sarl
insl
jnp
cmp
es
xorl
sub
push
xor
test
dec
sbbb
add
sub
sub
sub
aaa
roll
adc
lods
ret
jle
mov
xor
mov
or
inc
push
je
pop
add
aas
xchg
iret
out
pop
sbb
push
pusha
orb
pop
int3
pop
pop
movq
insb
lods
ffree
shrb
movsl
and
pop
jbe
xor
add
inc
std
push
add
test
push
rorb
jae
lret
sar
ss
adc
mov
lds
cmp
sbb
repnz
push
add
scas
pushf
in
stos
inc
sbb
sarl
loopne
in
outsb
pop
scas
pop
jbe
flds
mov
xchg
sarb
pop
add
fistpll
cmp
xor
mov
push
divps
adc
sub
dec
xlat
cld
jge
push
mov
dec
add
sbb
sahf
add
xchg
xor
nop
stc
mov
sbb
dec
lock
or
mov
push
pop
add
mov
mov
pop
mov
mov
mov
add
mov
add
cwtl
shrb
push
dec
jmp
int
out
mov
inc
fdivr
inc
sub
jl
xchg
and
rcr
jmp
jmp
mov
lea
mov
add
shlb
imul
add
enter
out
ds
xchg
fwait
mulb
pop
es
loop
add
or
push
arpl
addb
and
add
pushf
icebp
movsb
inc
call
and
sbb
mov
aas
mov
cmpsb
fdivrs
into
pop
add
mov
fwait
outsb
ret
leave
out
sbb
ds
jb
repnz
pushf
in
xchg
xchg
push
mov
loopne
mov
add
repz
mov
jl
into
lret
jne
xchg
lods
dec
sub
in
adc
nop
lods
nop
xchg
add
push
cmpsl
pop
sub
pop
add
hlt
rclb
ja
or
mov
js
add
popf
scas
cs
xor
add
out
test
cmp
push
add
xchg
pop
add
push
stc
sub
add
bound
pop
ret
and
mov
mov
pop
inc
cmp
in
jp
cld
xchg
nop
xor
inc
fdivrl
mov
mov
ljmp
add
stc
es
jecxz
mov
adc
test
mov
lea
jp
cmp
sbb
sbb
mov
inc
lret
add
xlat
jmp
stos
add
dec
out
add
rcrl
mov
repz
adc
ds
mov
cwtl
or
push
je
pusha
test
ja
mov
movsl
clc
mov
pushf
nop
loop
call
imul
shlb
repnz
adc
fcomi
xor
cmp
pop
mov
imul
out
add
pop
dec
jo
jp
imul
adc
adcl
push
cs
and
lock
aad
dec
fs
add
rcrl
fdivs
cld
mov
cmp
js
fdivl
add
lods
lock
adc
cmp
add
jns
sbb
sar
xor
mov
add
mov
cmpsb
jbe
cmp
and
push
adc
mov
inc
cmp
inc
add
pop
mov
or
shll
add
sbb
add
or
ret
addr16
add
mov
add
push
dec
adc
and
into
pop
clc
rol
cwtl
or
cmp
mov
xchg
comiss
lock
xchg
cmp
fs
add
clc
jge
stc
int
lock
push
jle
adc
lret
pushf
adcl
mov
pop
jb
cmp
xor
pop
js
ds
adc
pop
shlb
popa
iret
mov
leave
ret
outsl
add
movsb
in
int
sbb
and
inc
jo
jmp
inc
add
enter
jp
jo
mov
mov
add
iret
or
mov
add
xor
dec
fnstenv
dec
loop
in
popf
inc
sbb
push
jne
stos
mov
fwait
mov
add
and
fs
lea
sti
add
xchg
mov
repz
jne
out
std
pop
add
sahf
adc
xor
dec
in
and
dec
cmp
mov
add
xor
ss
push
or
mov
pop
rorl
outsl
jg
push
lahf
push
cmp
popa
lret
mov
mov
inc
xor
sbb
bnd
sub
out
add
mov
cli
mov
add
add
stc
add
jl
push
sbb
sbb
dec
and
iret
xchg
push
nop
ret
add
pusha
or
push
add
fdivrs
cmc
insb
lret
mov
mov
jae
js
xlat
aam
insl
rolb
ljmp
push
cmp
mov
and
mov
lods
inc
lea
cmp
jno
add
xchg
fmuls
rclb
nop
pusha
inc
pop
movsb
push
mov
test
into
xor
je
push
enter
sbbb
adc
add
gs
sub
push
imul
mov
adc
jp
jnp
mov
ds
push
enter
cmp
and
push
es
xchg
std
ds
pusha
jl
movsb
sbb
add
dec
mov
and
daa
loopne
ret
jp
push
lea
sbb
adc
pop
add
cmp
je
call
xchg
sub
dec
pop
cmpsl
ljmp
stos
aaa
pop
mov
inc
insl
push
ja
push
aas
add
sub
jb
test
add
pop
push
pop
and
mov
inc
cmp
add
mov
nop
jmp
mov
mov
adc
data16
add
imul
mov
add
fdivr
into
bound
push
add
or
or
push
and
add
test
fs
aam
sub
xchg
add
dec
mov
mov
adc
movsb
inc
fadds
jne
insl
mov
add
sbb
cmp
or
xchg
jp
xor
scas
push
lret
cmpl
aad
sub
inc
add
mov
mov
jne
lock
and
jle
xor
add
imul
shll
mov
mov
and
push
ss
mov
pop
push
cmpb
and
add
mov
je
sbb
cmc
call
mov
xchg
test
xchg
andb
mov
add
dec
cmp
pop
pop
cmpl
loopne
xchg
mov
shll
jg
call
pop
xchg
mov
pusha
lea
psllq
push
add
cli
jmp
popa
add
out
xor
jge
adc
mov
loope
movsb
insb
mov
adc
clc
fwait
sbb
or
dec
enter
or
int
xor
mov
add
pop
cmp
or
testb
test
ja
pop
cltd
ret
adc
and
cmp
add
rorb
push
notl
shrb
mov
push
cmpsl
mov
push
rolb
xchg
ljmp
add
jnp
jbe
xor
test
and
rcll
ljmp
aas
xchg
in
jecxz
mov
shll
add
jmp
lock
je
test
lret
add
mov
adc
xorl
sub
mov
bound
cmpsl
mov
pop
ficoms
xchg
xchg
cld
dec
push
into
pop
jne
sbb
pusha
add
ret
loop
lods
ret
dec
add
ficoms
mov
add
movl
fisttps
mov
dec
lds
pusha
jle
adc
inc
insb
mov
adc
xor
std
imul
dec
jne
dec
fists
rolb
cld
xchg
loop
es
pop
push
dec
jo
ja
aaa
inc
loopne
out
add
pop
inc
jp
insb
cmpl
orl
add
pop
cmc
jecxz
inc
mov
aas
repz
mov
and
cltd
cmp
clc
mov
add
in
pop
popa
pop
out
add
fdivs
popf
enter
inc
cmpsl
aam
mov
shlb
popf
jns
roll
jae
push
aad
mov
mov
popa
lds
jns
lret
repnz
pop
lret
add
mulb
add
cld
aaa
cmpsb
cmpsl
push
mov
mov
aas
lock
and
jmp
jo
fmul
loop
sub
test
push
xchg
adcb
xlat
lcall
push
loopne
add
sub
stos
adc
xor
enter
cmpsl
bnd
icebp
in
pop
cmc
or
mov
loopne
jns
fldl
shr
bound
fld
adc
mov
xor
iret
sub
cmp
inc
push
cmp
jbe
jo
cmp
add
sbb
inc
repnz
inc
mov
loope
out
mov
mulb
sub
or
cmpsl
add
inc
test
add
cltd
inc
pop
adc
cmp
stc
sti
add
insb
mov
add
cmpsl
arpl
lods
stos
fmull
mov
mov
add
and
ret
pop
arpl
aam
outsb
popf
dec
mov
xor
adc
pop
test
sub
cmp
add
cld
jge
cmp
imul
add
mov
rol
jle
pop
and
add
add
scas
lahf
fs
dec
pusha
mov
xor
add
cltd
mov
add
fcmovnbe
add
cmp
fsubs
out
adc
adcb
test
jb
jmp
ja
add
xchg
add
loopne
jae
dec
jmp
inc
dec
jp
stos
je
mov
int3
not
mov
add
xadd
xor
mov
xor
pop
and
inc
and
pop
push
aaa
add
xor
mov
xorb
cli
pop
in
and
nop
addr16
sbb
add
add
adc
and
call
add
sbb
je
jl
and
les
rol
dec
and
add
jge
cltd
add
mov
cwtl
out
clc
add
je
addl
jne
mov
add
imul
mov
and
aaa
jns
mov
int3
arpl
add
cwtl
loope
cmpsb
and
sub
mov
push
sahf
dec
pop
fs
outsl
and
jecxz
jno
add
xchg
scas
aas
mov
and
lahf
or
pop
cmp
add
out
push
mov
je
sub
and
out
repnz
pop
cli
push
inc
mov
adc
outsb
cltd
pop
and
fstps
adc
jbe
mov
insb
mov
add
sbb
stos
add
cmp
sub
into
jae
pop
add
pop
push
fwait
pop
xchg
dec
push
pop
loopne
add
inc
jae
out
xor
xor
dec
pop
js
add
push
fmul
or
inc
add
mov
fdivl
and
xchg
inc
add
sbb
inc
xor
lea
and
and
add
repnz
roll
add
out
aaa
sbb
sub
clc
push
xchg
cld
xchg
xchg
add
dec
shl
insl
clc
mov
jl
pop
add
mov
push
inc
addr16
sbb
outsb
adc
and
or
scas
pop
imul
lret
bt
xlat
push
testb
push
aaa
jl
arpl
pushf
testb
inc
add
lods
cmp
sahf
iret
fiaddl
cmp
inc
in
jp
pop
adc
outsb
frndint
xchg
imull
pop
sub
mov
and
add
xlat
into
pushf
jne
cld
insl
add
dec
sar
cmp
add
cmc
or
pop
pop
clc
add
enter
push
in
inc
pop
sub
adc
dec
fiadds
and
test
lock
inc
xor
outsb
sti
push
repnz
jecxz
pop
sarl
flds
xorb
addr16
xchg
cli
mov
add
fdivr
lods
or
add
add
jne
adc
sub
sub
mov
daa
rclb
shlb
fwait
inc
ret
lret
or
cs
pushf
add
xchg
dec
dec
xor
outsl
inc
ss
fstp
mov
cld
push
testl
dec
inc
cmp
int3
lahf
cltd
add
shlb
pop
pusha
push
and
flds
mov
pavgb
outsl
adcb
jecxz
divb
ret
inc
shl
push
sahf
lds
test
add
jnp
mov
mov
mov
adc
adc
les
lret
add
arpl
add
movsb
mov
je
mov
xor
xor
mov
add
addb
push
nop
out
pop
push
stos
ds
add
test
cmp
imul
es
mov
jae
jg
or
jge
rcrb
pop
mov
xchg
data16
pop
jl
dec
fwait
mov
adc
sbb
add
stc
adc
add
xor
movb
mov
int3
pop
shrl
repz
adc
roll
push
mov
fiaddl
scas
jno
int
add
mov
sbb
push
je
repnz
add
ljmp
jnp
outsb
or
adc
pop
inc
shll
dec
add
jno
dec
add
xor
pop
imul
jae
xor
pop
shlb
inc
ja
clc
sahf
fcoms
push
xchg
dec
test
pop
jg
jae
add
pop
rcll
or
cmpsb
cmp
or
sub
test
cmp
push
pop
sub
je
cmp
pop
fmull
addl
xor
sbb
and
test
sub
clc
lret
sub
aas
add
or
nop
ljmp
loop
cmp
inc
leave
insb
inc
xchg
flds
mov
lahf
xor
fldt
out
sbb
subb
ss
or
and
xor
mov
dec
xor
cli
add
mov
ucomiss
lock
pusha
loopne
add
jo
orb
lea
cmp
cmpb
cs
popa
mov
ss
in
imul
ja
lahf
in
aaa
mov
fs
xor
mov
push
push
jecxz
lea
dec
inc
push
jo
ss
cmp
mov
sub
and
andb
mov
or
rol
cmp
fdivrp
adc
in
add
mov
incb
in
test
mov
fnstsw
outsl
add
dec
pop
mov
ljmp
imul
out
in
and
fucom
mov
add
shll
or
dec
ret
xor
xor
and
dec
sbb
pop
roll
push
sbb
scas
int
movsl
and
xchg
stos
mov
add
cli
test
and
sub
mov
add
outsb
jo
inc
in
xchg
add
sets
add
pushf
dec
out
test
and
cwtl
mov
add
cltd
xchg
stos
insb
add
test
call
cmp
incb
adc
jmp
fidivrs
push
xlat
sub
cs
enter
lret
stos
test
dec
aam
sbb
add
jmp
shr
imulb
xor
or
test
dec
add
inc
inc
adc
arpl
jo
int
push
push
add
mov
das
mov
dec
nop
roll
insl
jbe
mov
pop
push
adc
es
add
cmpsb
mov
add
push
cmp
sub
add
mov
or
icebp
mov
into
xchg
xor
mov
cmp
add
cmpsl
testl
popf
add
ljmpw
adc
push
push
or
out
cli
add
cltd
cmp
push
mov
and
mov
jmp
xor
subl
pop
pop
add
test
cld
cwtl
push
sbb
insl
add
or
add
cmpsb
ds
jecxz
and
xchg
jge
insb
jns
fwait
xor
and
cmpsl
add
jp
xchg
cmpsb
xor
adc
call
push
mov
nop
inc
sub
in
adc
into
and
andb
mov
cmp
test
and
push
push
lods
xchg
dec
xor
xchg
cmp
jne
out
pushf
pop
adc
lahf
out
fnstsw
int
push
xor
bound
jbe
cmp
mov
add
int
stos
cltd
sahf
fsubs
xchg
and
sbbl
dec
rcrb
jbe
addl
mov
clc
add
es
dec
jp
addb
dec
sub
stos
add
rcrb
jle
pop
pop
cli
shr
push
les
mov
and
jae
testb
mov
pop
sub
and
sbb
popf
test
xchg
pop
cwtl
add
in
incb
and
cmp
sbb
aam
add
or
mov
mov
mov
popf
popa
mov
in
cld
push
add
in
lds
xor
xchg
xor
je
jae
repz
shrb
adc
lds
dec
int
push
cwtl
or
mov
xchg
clc
pop
gs
out
and
ficoms
add
notb
cltd
inc
sbb
adcb
dec
sbb
mov
add
es
cmp
cmp
mov
imul
sti
sbb
std
sahf
stc
and
gs
inc
xorb
mov
std
mov
nop
aas
rcrl
add
rcrb
jl
add
or
push
aas
jecxz
and
outsl
leave
mov
xchg
pusha
xor
incl
push
xor
xlat
fmull
nop
rolb
movlps
sbb
orb
int
imul
dec
mov
mov
push
add
loop
pop
fadd
out
and
jno
adc
mov
inc
lock
std
mov
decb
sbb
fsts
in
pushf
xor
mov
jmp
sbb
loop
push
mov
jne
mov
cs
pop
sbb
add
sbbl
pop
andb
add
sbb
add
cmpsb
or
lock
add
out
dec
scas
fucomi
sbbb
mov
orb
dec
mov
or
xchg
xlat
add
rorb
stc
roll
cmpsl
add
insb
push
sbb
push
lods
shrl
mov
sub
mov
pushf
pop
arpl
mov
mov
cmp
mov
adc
push
and
or
cmp
adc
push
movsb
in
add
push
dec
dec
fistpll
sub
lahf
sub
loopne
cmp
add
push
xchg
inc
dec
sub
xchg
fwait
push
push
dec
add
loop
and
xor
fidivs
cltd
out
push
add
pop
dec
push
sub
jecxz
xor
nopl
aaa
test
int
add
rol
and
pop
insb
scas
repnz
jno
ret
jmp
mov
negb
cli
push
push
dec
lock
push
pop
inc
sub
jne
call
jmp
dec
push
addb
add
js
add
lahf
notl
loopne
outsb
sti
test
into
sub
decb
pop
jl
cltd
lea
rorl
add
sbb
or
clc
jecxz
adc
stc
leave
movsb
push
pop
add
and
sub
mov
add
loopne
loope
adc
and
call
mov
push
xor
fsubrs
stc
add
sbb
aas
shll
filds
jmp
div
sub
push
shlb
nop
addr16
incl
lahf
inc
xor
test
addl
and
jbe
aam
mov
jne
jle
add
fsubs
cmp
mov
in
sbb
arpl
rorl
into
push
add
das
clc
cs
leave
inc
insb
and
sbb
lahf
int3
sub
sbb
adc
daa
nop
pop
je
dec
ds
add
mov
add
mov
dec
add
js
lods
add
xchg
cmc
xor
push
pushl
and
dec
lock
add
popf
dec
pusha
cmp
xchg
adc
pop
cmpsb
pop
fcmovb
mov
mov
dec
in
aas
mov
rclb
jb
add
cmp
push
or
and
fbstp
out
jmp
adc
push
sub
clc
aad
outsb
std
ljmp
cmp
mov
jg
js
add
mov
push
addr16
inc
xor
jo
pop
pop
das
repnz
push
lds
mov
movsl
bound
add
xlat
cmpb
cmp
add
lret
mov
stc
pop
pop
xchg
add
fsubs
hlt
popf
or
inc
pop
add
add
mov
rolb
std
out
cmp
push
sbb
cmpsb
jle
inc
jl
sbb
loopne
inc
or
mov
xchg
mov
mov
mov
stos
popa
aas
dec
pop
stos
jb
cmp
mov
xor
xchg
test
cmp
xchg
xor
js
jo
sbb
test
mov
js
rol
jns
outsl
iret
mov
enter
sbb
setbe
push
xor
into
orb
add
sub
push
mov
stos
or
das
into
pop
jecxz
pop
lods
mov
ja
addr16
adc
nop
icebp
push
add
sub
pop
hlt
loopne
divb
subb
jbe
jge
pop
daa
aad
fmuls
add
sub
mov
add
mull
xor
adc
inc
cmp
inc
xchg
dec
xor
add
loop
lock
sub
mov
lods
data16
cmp
cld
pop
enter
movb
cmp
dec
mov
add
arpl
add
incl
bound
test
and
out
loopne
xlat
dec
cmc
or
imul
test
cmp
loope
sbb
dec
nop
lds
add
loop
mov
sub
mov
rorb
adc
ret
fisttpl
into
ficoms
clc
fnstenv
push
xchg
inc
dec
lret
cmp
int3
mov
rcrl
or
lods
cltd
fistl
ljmp
sub
outsb
mov
inc
sti
mov
jecxz
mov
jle
xchg
cmp
add
popf
xchg
stc
add
xor
in
push
insb
add
mov
and
push
xchg
test
sti
loopne
adc
icebp
and
sbb
sbb
push
inc
lret
xchg
cwtl
add
pop
add
outsb
jo
sbb
stos
mov
push
mov
add
cmp
out
dec
pop
or
cld
pop
add
cmp
and
in
mov
adc
loopne
ja
or
mov
pop
imul
int3
imul
jne
fmuls
or
pusha
movsw
clc
push
mov
push
adc
push
cwtl
lock
xor
add
or
sub
loope
out
ljmp
cmp
or
adc
cmp
xor
jnp
push
inc
prefetchwt1
cmp
shr
add
imul
add
adc
push
sti
cli
out
cli
inc
out
inc
mov
add
inc
jl
enter
push
dec
pop
jns
call
aad
or
out
mov
mov
push
pop
jp
lds
enter
add
into
or
mov
xlat
fwait
pushf
jbe
out
push
int3
add
push
inc
sbb
mov
cmp
inc
fwait
cmp
fdivs
js
add
or
cs
or
jle
push
scas
idiv
movswl
loopne
xor
xchg
adc
xchg
movsb
cwtl
or
and
ret
call
and
mov
incl
inc
stos
jecxz
mov
sub
in
pushf
add
fiadds
mov
add
fisubl
aad
and
and
and
rcll
cmp
push
cmc
add
adc
mov
adc
or
cmc
test
icebp
inc
push
pop
popf
or
out
or
push
mov
lods
cmp
add
jmp
ret
mov
scas
inc
int3
mov
movsl
movsb
sbb
mov
je
push
sbb
add
mov
mov
imul
addb
ja
inc
popf
aad
imul
mov
scas
movq
es
xchg
fcmovnbe
bound
add
cmp
roll
push
inc
add
shlb
add
jg
lds
add
adc
xchg
or
sbb
xchg
ljmp
mov
mov
pop
cmp
test
pop
push
out
pop
sub
jmp
push
jp
jb
add
repz
add
cwtl
out
adc
push
sbb
sbb
test
stc
jo
loop
jnp
movsb
add
cld
popa
out
pop
inc
and
mov
push
dec
not
loope
jp
inc
jbe
add
cmpsb
mov
add
test
xchg
dec
push
icebp
push
jle
xchg
jecxz
push
add
aam
and
add
das
int3
jb
xchg
orb
repz
lret
cmp
adc
and
iret
mov
push
adc
jg
pop
inc
add
mov
scas
push
loope
cmpsb
xor
enter
rsqrtps
dec
loope
fldt
jno
fnstenv
popa
mov
inc
adc
and
jle
cld
cmp
pop
add
jne
add
dec
mov
ficoml
xor
mov
loopne
xchg
scas
lcall
mov
loopne
call
push
or
or
add
jge
aad
pushf
std
push
add
pop
dec
add
sbb
or
jne
or
add
cmp
mov
insl
popf
adc
or
cmpsb
xlat
enter
pop
mov
xchg
sbb
adc
add
je
test
push
push
sbb
pop
das
lahf
add
repz
test
and
dec
mov
sbb
sbbl
mov
roll
sub
ret
mov
mov
and
mov
add
jno
in
and
enter
cmc
cltd
hlt
es
add
test
imul
scas
cmp
lods
loop
fstps
sbb
out
nop
pop
add
aad
repnz
jg
pop
add
movl
push
push
inc
inc
or
dec
mov
rolb
in
cwtl
xor
add
mov
push
mov
jle
loopne
sub
lea
add
mov
test
or
add
pop
inc
popf
ss
cmp
nop
movl
dec
inc
add
jnp
pusha
es
cmp
add
call
fdivrs
lcall
rol
pusha
stos
sub
imul
inc
add
stc
nop
push
jb
add
jae
xchg
mov
iret
jl
xchg
bound
sbb
jo
out
add
imul
stos
add
ja
pop
add
xor
adc
jo
sbb
inc
clc
push
mov
dec
add
and
cltd
add
lds
bound
test
fwait
jo
add
mov
or
add
xor
jnp
sbb
mov
add
add
popa
or
sub
scas
xor
ficompl
add
push
jae
add
ljmp
out
add
and
or
add
jnp
int3
jno
cmc
fcomps
mov
nop
inc
push
add
sbb
insb
testb
inc
nop
mov
mov
or
movb
sub
icebp
jb
pop
mov
ret
jns
push
or
add
arpl
inc
xor
mov
pop
jge
add
dec
jbe
clc
add
cmp
sub
sarl
pop
mov
xchg
and
or
push
in
data16
mov
cmp
into
xor
fwait
mov
scas
dec
jge
fimull
and
adc
test
ret
cwtl
and
add
mov
clc
add
sbb
loop
xchg
stos
in
sbb
test
mov
fcmovnu
icebp
cmp
in
or
cmpsl
pushf
bound
aam
lcall
ljmp
mov
faddl
add
ss
jecxz
or
add
repnz
cs
lock
insl
sahf
in
daa
push
dec
sbb
pusha
or
xchg
and
fldenv
rcll
insb
cli
jg
mov
add
outsb
cmp
or
and
mov
inc
in
outsl
js
jmp
jbe
jae
lock
cmp
add
cmpsl
push
mov
mov
jns
popf
jae
movsb
lock
and
arpl
addr16
jp
scas
xchg
jmp
add
test
sub
push
fdivr
sbb
pop
and
loop
int
mov
push
jge
je
add
aaa
clc
lahf
insl
imulb
inc
lods
popl
aas
clc
stc
pop
jl
mov
adc
push
xchg
pop
add
lods
xor
jae
add
jne
sbb
pop
dec
lock
fwait
jae
lock
mov
mov
adc
pop
add
dec
dec
cmp
rcll
mov
pop
push
rcrl
inc
add
in
cmp
stos
das
and
adc
cmp
js
fstpl
and
mov
sub
add
mov
mov
add
out
pop
pop
cmpsl
cmp
xchg
outsl
mov
add
add
fsubr
rcrl
and
fmuls
pop
add
rcrl
push
popl
mov
fmul
out
in
cmp
or
xchg
jp
add
dec
and
add
pop
xchg
jno
xchg
cltd
cmovs
mov
adc
and
in
and
shrb
fimull
jne
pusha
sbb
push
add
adc
int3
dec
movsl
xchg
add
rcll
mov
ficompl
inc
idivl
mov
mov
pop
inc
int
jno
pop
dec
xor
aas
stc
rorl
jmp
icebp
rolb
pop
adc
or
push
and
or
pop
enter
jno
add
test
add
mov
pop
pop
mov
add
stos
testb
addb
movsl
cld
lods
pop
add
aaa
cmp
sti
add
shlb
clc
outsl
fcompl
lret
scas
aas
xchg
in
xchg
lret
pusha
sub
sarl
sbbb
into
test
rolb
pop
or
fmul
inc
xchg
add
test
jae
nop
adc
dec
add
cmp
inc
add
or
xor
inc
cmp
call
outsb
mov
xchg
mov
ljmp
fs
rcrb
add
lret
jb
lcall
push
jno
lahf
push
sub
sub
insb
sbb
dec
add
pop
sahf
leave
mov
jb
adc
push
aad
test
lods
pop
and
fcmovnb
add
aas
stos
mov
sbb
dec
testb
add
xlat
jle
stos
dec
xchg
pop
mov
imul
pop
call
xor
jle
pop
xor
mov
add
out
pop
mov
push
cmp
pop
lahf
mov
add
dec
cmp
pusha
das
mov
repnz
mov
adcl
pusha
jns
jb
add
xchg
dec
movsl
clc
mov
push
inc
and
jo
fdivrl
loopne
and
das
xchg
out
test
jae
or
ret
ret
or
fs
add
jae
pop
jg
xor
mov
sub
jno
mov
imul
lds
cwtl
lock
pop
mov
push
inc
sbb
jge
inc
sub
fdivrs
imul
cmpsl
lahf
pop
and
iret
add
and
pop
jo
lcall
pop
cmc
mov
ds
and
leave
js
in
lock
cld
adc
add
mov
inc
in
mov
lahf
testl
push
add
cmp
add
mov
add
push
inc
das
cld
aas
cmp
add
cmp
loope
rcr
jg
add
dec
das
sub
pop
xor
dec
inc
and
movsl
sbb
and
push
dec
aad
and
or
dec
imul
xor
scas
sub
adc
or
xchg
lcall
mov
dec
add
in
lea
aaa
jmp
push
loope
mov
jnp
sbb
cltd
add
mov
cmpsl
jge
inc
insl
add
mov
or
les
xchg
mov
xchg
add
sbb
xchg
add
fs
pop
xchg
sbbb
mov
jbe
pop
inc
add
sahf
das
imul
pop
mov
lret
pusha
dec
push
iret
rclb
mov
sub
das
add
mov
rorb
cmp
pop
loopne
imul
mov
in
sbb
mov
jae
cmp
ja
add
mov
add
mov
jle
or
aam
scas
cmp
shll
dec
idivl
bound
mov
stc
filds
pop
pop
jne
xor
inc
sub
push
repz
adc
std
movsl
jl
jecxz
jle
add
lea
pop
aaa
mov
jmp
jge
mov
sbb
mov
icebp
lret
ljmp
dec
lods
jo
sti
stos
sbbb
notl
inc
mov
movb
out
dec
adc
sub
jae
push
jno
adc
dec
add
pop
mov
adc
xor
pusha
xchg
fbstp
cmp
je
leave
addr16
loopne
cld
adc
pop
adc
stos
shll
inc
add
push
pop
out
das
std
incb
and
emms
in
mov
xor
das
into
ss
lods
add
push
mov
add
lahf
lea
mov
jl
inc
jno
test
add
in
xchg
pop
mov
xchg
sub
push
mov
aad
dec
sbb
add
data16
adc
push
fidivrs
xorb
mov
lret
int
test
clc
ret
add
mov
sub
adc
ja
ret
loopne
mov
rcrl
xchg
cmp
dec
add
mov
xor
sbb
jge
sti
push
inc
nop
adc
icebp
sub
shrb
fiadds
dec
mov
sahf
push
add
dec
mov
iret
outsb
push
push
test
cmp
out
add
mov
scas
sbb
mov
push
pushf
add
mov
push
sbb
iret
adc
add
andl
imul
ret
in
add
add
adc
cltd
push
popf
add
push
mov
shrb
pop
add
inc
add
inc
ja
push
outsb
test
sbb
das
stc
jno
inc
aas
les
int3
loope
dec
mov
add
cmp
jg
rorb
int3
add
pop
xchg
lea
and
pop
sbb
scas
outsl
shrl
cmp
dec
mov
loope
pop
add
cmpsl
add
mov
stos
rolb
std
inc
mov
fcoms
push
lods
add
push
mov
ret
sub
roll
mov
pop
sub
movsb
push
in
cli
ret
lret
or
ljmp
xlat
sub
pop
test
cmp
cmp
xchg
ret
cmpsb
lock
dec
sbb
pop
cmp
ss
push
sbb
push
and
push
orb
xor
sbb
inc
adc
dec
adc
xor
filds
and
lea
out
dec
mov
popf
jno
add
xlat
out
jl
loopne
or
rcrb
js
mov
out
ret
xor
inc
nop
push
push
lahf
sub
xchg
add
out
movsb
dec
inc
push
mov
aas
ss
aam
pop
cli
test
dec
scas
lret
jns
add
mov
jmp
lahf
inc
sbb
and
jb
pop
pop
and
inc
divl
add
xor
add
data16
addl
or
inc
stos
arpl
aas
shlb
add
sbb
inc
sub
fistpl
popa
cmp
in
add
js
les
xor
ljmp
je
mov
mov
push
cli
cmp
lods
adc
lcall
iret
sbbl
fnsave
cmp
sub
dec
movsl
add
not
mov
add
pop
jnp
mov
test
hlt
sahf
popf
sub
insb
jle
add
jmp
jno
pop
xor
or
popa
or
aas
dec
shll
add
imul
shlb
movsb
andb
std
stc
xchg
mov
repz
jb
add
xlat
ss
stos
adc
mov
inc
in
bound
ret
xor
adc
sub
loopne
test
aas
pop
or
imul
mov
add
dec
cmpb
iret
popa
fistpll
add
jge
nop
jl
insl
repnz
add
in
inc
icebp
repz
add
shl
cmp
test
int3
fldt
nop
lcall
call
mov
inc
out
js
cmp
mov
ficoml
test
cmpsb
movsl
push
mov
hlt
in
je
aas
adcl
xchg
and
gs
je
outsl
rolb
add
and
aad
pop
mov
add
out
fistpll
jmp
fimull
add
cmpsl
lcall
mov
xor
loope
cmp
aam
adc
add
lds
hlt
sbb
sti
jle
repz
push
jo
or
or
adcb
sub
nop
testl
bound
xor
popf
inc
stc
aam
xor
or
mov
sbb
arpl
add
add
pop
call
adc
sub
add
aam
mov
xchg
add
js
add
adc
add
xchg
cvtpi2ps
or
add
jb
out
push
jmp
and
add
xchg
xor
sarl
loopne
add
call
push
loop
pop
cmp
xlat
add
int
mov
fwait
imul
leave
les
pop
adc
adc
imul
xchg
imul
lahf
ljmp
mov
decb
inc
clc
fs
xor
enter
aam
xor
xchg
dec
call
adc
jo
adcb
push
jbe
sbb
call
pop
push
sahf
out
adc
in
stc
cli
push
dec
add
push
ljmp
fidivrl
add
sahf
in
add
insb
shr
sub
jl
xor
mov
add
and
lods
mov
es
and
test
add
mov
enter
xor
addr16
xor
jnp
mov
pop
inc
mov
adc
setg
add
fdivr
nop
dec
jae
mov
arpl
pop
adc
inc
in
jo
negl
jp
mov
in
in
repz
jno
mov
and
test
jae
mov
add
add
or
ficompl
adcb
popa
push
sarl
jp
and
pop
int3
mov
lods
inc
add
pop
push
add
mov
test
pop
jae
mov
dec
pop
sub
pop
push
jo
nop
adc
insl
sub
sbb
in
pop
mov
pop
mov
cmpsl
mov
sub
pop
add
and
lods
mov
addr16
lock
and
pop
jmp
in
push
and
das
stc
adcb
addl
add
sbb
add
mov
add
rcrb
push
loope
sub
and
icebp
arpl
pop
mov
xchg
cs
fadd
add
adc
hlt
mov
add
cmp
jp
or
and
lahf
or
sub
sbb
mov
jmp
popa
bound
add
jecxz
inc
aad
dec
or
dec
dec
mov
lods
dec
xor
add
leave
lcall
add
into
sub
xchg
add
les
andb
lret
jmp
cmp
jo
dec
add
and
pop
mov
nop
gs
addr16
push
mov
mov
jnp
inc
sarb
adc
sti
sub
pop
mov
test
std
xchg
sub
push
cld
frstpm(287
out
lock
ljmp
lds
hlt
outsb
jecxz
add
test
mov
aad
add
push
lret
incb
mov
scas
mov
add
addb
adc
pop
call
out
js
insl
je
rolb
roll
mov
lret
inc
sbb
mov
iret
test
pop
roll
push
frstor
cmp
movl
sub
shrl
mov
cld
mov
ret
push
inc
add
and
cli
add
ss
stos
add
xor
outsb
stc
xchg
repnz
mov
ficomps
sub
jl
sbbl
out
inc
in
fdivrl
call
sbb
jbe
std
pop
popf
push
add
mov
fldl
in
lods
inc
inc
jmp
ljmp
test
ret
push
insl
xchg
mov
xchg
ds
lea
adc
icebp
mov
lahf
fisttpl
mov
orl
testl
add
mov
dec
add
add
dec
aad
pusha
push
mov
ljmp
lods
popl
sti
popa
insl
pop
iret
or
insb
pop
push
add
repz
add
dec
or
xor
add
mov
sbb
or
nop
fadds
push
add
popa
add
mov
outsb
fwait
xchg
mov
add
fisubl
mov
lret
cmpsb
imul
jmp
add
xchg
movsl
xchg
push
call
dec
or
mov
stc
aas
dec
sbb
xorb
repz
jno
shlb
movb
fadds
sbb
imul
cwtl
mov
iret
addl
mov
push
add
enter
push
add
mov
mov
scas
in
mov
testb
inc
aas
fstpt
pop
aaa
push
push
mov
add
sub
and
add
jne
inc
icebp
mov
push
mov
sub
adcb
mov
testl
out
subl
jo
pop
xchg
add
ljmp
sbb
or
jo
xchg
add
idiv
cmp
test
popa
testl
sub
push
leave
add
ja
imull
push
add
xchg
or
popf
xor
add
pop
cmp
hlt
arpl
add
xchg
mov
or
inc
cld
push
sub
enter
mov
jb
add
rcrb
push
jecxz
adc
inc
enter
add
hlt
xor
movsl
mov
gs
dec
mov
mov
repnz
or
lahf
js
add
test
imul
add
mov
cwtl
idivb
push
add
fdivrl
sbb
cmp
or
shl
add
adc
imul
sub
mov
adc
xchg
cmp
sbb
aam
add
dec
mov
sahf
xchg
add
jge
cmp
add
xchg
fistl
add
and
pop
sub
push
jae
pop
xor
xchg
push
test
xchg
add
mov
xor
xor
incb
loopne
cld
xlat
sbb
xchg
outsb
xchg
xchg
push
mov
add
orl
sbb
pop
js
ljmp
fdivrl
jp
pop
xor
add
push
and
add
out
push
loop
cmp
cwtl
add
arpl
xor
pop
add
cmc
cmp
cmp
mov
pop
xlat
add
jl
push
imul
pop
jecxz
shlb
mov
dec
adc
ficoms
jmp
xchg
sbb
sarb
es
xchg
lock
js
mov
xor
sbb
roll
jnp
cmp
lods
std
movsb
adc
js
adc
or
or
xor
add
and
adc
sub
mov
das
mov
lcall
mov
sbb
mov
mov
cmc
add
add
mov
sbb
push
adc
andb
mov
xchg
dec
dec
andl
test
rcl
push
fists
add
inc
add
cmc
shl
jp
dec
out
cmp
fucomi
mov
add
cmc
push
sub
sbbl
add
mov
add
fsubr
in
inc
popf
jbe
xlat
cld
push
call
sbb
outsl
fldl
xor
inc
loopne
push
add
dec
out
mov
cmp
subb
or
clc
sbb
xchg
cli
adc
mov
scas
xor
cmp
subl
shlb
arpl
mov
and
rolb
jne
mov
addb
xor
loope
int3
jo
loopne
add
and
cmp
pop
jle
dec
jns
or
fmuls
adc
and
cli
and
pop
mov
rorb
out
sarb
mov
incl
ja
adc
popa
add
adc
test
pop
sub
and
add
mov
add
pop
inc
add
cmp
push
mov
jae
add
xchg
aam
je
out
add
or
xchg
add
cmp
push
push
inc
add
xchg
scas
lea
adc
cmp
icebp
andnps
fucomi
inc
dec
repz
popa
pushf
add
mov
sbb
out
add
mov
pop
inc
push
je
add
addb
jne
movl
adc
sub
add
push
insb
and
outsl
enter
mov
and
mov
sbb
test
and
sahf
pop
mov
cmp
add
dec
stc
jbe
and
ss
pop
push
mov
xor
cmc
hlt
fwait
cs
jbe
push
cmp
fistl
dec
aas
jg
add
test
rolb
stc
push
mov
loopne
incb
in
push
outsb
dec
movsb
aam
xor
sti
inc
int
add
pop
jbe
push
test
movsb
loopne
add
or
mov
pop
push
leave
gs
push
fldl
sub
shrw
dec
add
xchg
call
push
loop
jnp
inc
outsb
inc
das
push
lods
jne
add
cwtl
imul
xchg
ret
add
fistps
lret
mov
and
shlb
add
xchg
mov
loop
cmpsl
sbb
icebp
add
jmp
lods
inc
lret
mov
sbb
push
jae
popa
adc
mov
inc
in
dec
jnp
push
cmp
out
push
sub
pop
aad
js
fsubs
sub
and
stos
dec
add
dec
xchg
push
fldcw
loop
xchg
imul
aam
js
inc
popa
lods
lds
ret
test
and
jmp
clc
mov
add
fxch
pop
out
sub
pop
jo
adc
scas
fnstenv
outsl
adc
sbb
jmp
iret
popa
cmp
js
cmp
stos
adc
aaa
pop
fwait
dec
das
mov
lds
jne
add
fs
sbb
sahf
add
cmp
pop
add
test
push
addb
jns
hlt
ljmp
mov
test
or
jle
cmpsl
push
lock
and
enter
dec
add
repnz
add
push
or
add
add
jecxz
inc
jmp
insb
add
fucom
cli
add
mov
pop
popa
adc
pop
insb
mov
add
loop
xchg
movsl
mov
lods
and
inc
mov
scas
dec
add
imul
add
mov
out
dec
add
sahf
push
lock
mov
adc
mov
insl
xchg
lcall
jbe
es
cmp
add
add
dec
lret
mov
push
push
push
nop
cmp
movsb
daa
in
add
dec
inc
fsubrs
mov
add
sahf
popf
in
jle
xor
les
gs
mov
dec
ret
orb
out
jbe
or
int
add
cltd
add
roll
imul
mov
iret
repz
add
int3
ror
xchg
push
mov
imul
sub
and
loopne
loopne
add
jne
into
ret
lock
out
incb
inc
jae
xor
or
hlt
andl
cwtl
mov
add
sahf
or
jmp
push
testl
push
sbb
sbb
sbb
dec
add
repnz
sub
in
gs
inc
out
sbb
enter
mov
in
mov
das
sbb
dec
or
or
out
andps
scas
loopne
out
in
insl
add
fmull
sahf
and
ja
int3
add
cmp
dec
mov
add
pop
xchg
add
sbb
lods
add
sbbb
rclb
clc
popf
pusha
cld
outsb
cs
mov
fnstsw
test
pop
or
test
jmp
inc
pop
mov
leave
lcall
lea
add
cmp
ret
pusha
jo
das
cmp
pushf
add
mov
adc
test
loopne
in
xlat
mov
jb
stos
out
fbld
sti
add
and
add
push
inc
or
cmp
cltd
dec
push
jle
jbe
jge
cmp
in
xor
ffreep
inc
clc
xlat
add
xor
data16
sbb
js
pop
loope
sbb
add
cmp
movsb
add
push
mov
add
cmovo
add
out
addr16
jnp
dec
add
sbb
inc
or
loopne
nop
mov
sbb
cwtl
mov
add
cld
mov
and
mov
stos
xchg
fiadds
test
das
inc
cmp
js
rclb
enter
lea
mov
xor
out
iret
mov
or
ljmp
cmp
and
sub
mov
mov
add
std
faddp
cmp
dec
add
adc
add
mov
clc
ds
push
cmpsl
daa
pop
es
add
fwait
mov
cs
xorb
push
test
sub
mull
call
or
cmpsl
add
or
and
jecxz
add
inc
xlat
mov
sbb
and
inc
sarb
jns
xchg
out
push
push
mov
adc
mov
inc
cmp
cmp
add
pop
push
movsl
sub
scas
sub
add
xor
rclb
in
loope
rclb
add
hlt
outsb
add
mov
ret
sub
add
push
nop
ss
mov
push
sub
lahf
or
aaa
xlat
inc
test
jmp
mov
cmp
dec
fldl
inc
mov
pop
jl
cmp
pop
fisttpl
nop
add
fnstsw
xor
out
adc
push
dec
faddl
mov
add
inc
fptan
push
popf
pop
daa
clc
iret
cmovle
cmp
fdivr
xchg
add
fnsave
inc
xchg
or
subl
push
xchg
dec
dec
or
das
xlat
push
stc
xor
or
stos
push
daa
adc
fwait
rcrb
and
aas
adc
jne
shrb
fsub
sti
add
arpl
test
enter
or
pop
adc
nop
mov
js
pop
popf
mov
inc
test
pop
ja
xor
xor
cmp
add
pusha
mov
sbb
shl
cmpsl
cmp
push
push
push
popa
mov
lret
or
test
mov
add
call
iret
call
xor
mov
jecxz,pn
dec
sbb
inc
pop
pop
dec
mov
add
std
aas
out
shrb
cs
add
add
enter
jg
ficomps
xor
outsb
jecxz
pop
test
mov
out
mov
mov
add
std
xchg
xchg
jecxz
stc
pop
fcmovb
and
add
repnz
or
das
popa
add
inc
loop
fsubs
xchg
lock
jg
and
mov
ljmpw
or
mov
and
scas
jae
add
shll
pusha
add
push
ret
shll
add
fyl2xp1
dec
or
pop
xchg
in
xorb
jl
add
enter
jbe
fisttpll
bnd
pusha
sbb
fs
add
pop
mov
sub
inc
clc
shll
xor
aam
ret
and
push
sahf
or
dec
hlt
sub
int
add
cmp
gs
push
or
rorb
outsl
inc
je
adc
pop
nop
inc
mov
adc
xor
and
test
push
subl
daa
sbb
or
addl
pusha
push
lock
xor
lea
shl
sbb
roll
shl
test
mov
push
cwtl
and
add
addb
shrb
add
enter
jne
jp
xchg
lods
push
in
add
and
aaa
clc
jo
int
add
adc
scas
mov
outsb
push
add
jae
sbb
es
sub
add
jae
mov
ss
push
mov
mov
jne
nop
pop
cwtl
mov
add
std
cli
lcall
popa
add
mov
sbb
out
add
xchg
or
mov
jg
es
insb
cwtl
sahf
out
shl
inc
inc
mov
add
mov
leave
mov
jb
dec
fs
addb
mov
scas
push
loope
pop
loopne
lahf
stc
lcall
inc
jbe
jl
ret
jo
jns
call
aam
mov
cmp
dec
push
pop
adc
add
mov
sub
inc
pushf
adc
pop
stos
push
sub
add
inc
hlt
testb
test
addr16
mov
jl
fisttpll
daa
enter
jge
sbb
adc
lret
jae
movl
cmp
pop
test
add
mov
je
rcr
pop
lea
add
dec
xorl
shlb
xor
in
jo
cltd
in
sbb
sub
jae
pop
imul
stc
add
arpl
shr
gs
add
jb
pusha
ret
cmp
mov
dec
lock
int
aam
pop
add
push
ljmp
icebp
inc
mov
int3
nop
lds
jb
cmpb
add
clc
rolb
xchg
ficoms
xor
add
push
clc
add
in
subb
scas
jge
jno
mov
imul
stos
mov
int3
cmpb
mov
icebp
std
js
pop
adc
inc
add
dec
push
out
cmp
ja
adc
sub
dec
call
movsl
pushf
sub
cs
mov
adc
repz
dec
rclb
cmp
out
xor
loopne
mov
push
aas
jns
xorb
rorl
mov
jbe
push
stos
sbb
das
orb
sbb
sbb
dec
hlt
xchg
stc
mov
lcall
cmpsb
imul
inc
add
pop
add
hlt
xor
add
test
fs
loope,pn
outsb
pop
lret
pushl
dec
jne
pop
pop
add
mov
aam
add
popa
sub
cmp
cltd
test
jo
idiv
add
push
call
bound
out
or
jae
xchg
adc
stos
ret
leave
aas
stos
sti
jg
add
fcomps
push
sub
sbb
or
enter
cli
hlt
jmp
jge
subl
or
cmp
dec
add
xchg
mov
fldenv
push
shlb
mov
int
xor
fistps
mov
imul
out
push
adc
jb
mov
lahf
mov
push
pop
cli
roll
call
adc
xchg
mov
add
jo
loope
mov
jne
adc
hlt
sarb
rolb
fnstcw
add
dec
adc
push
push
aaa
xor
add
cmp
cwtl
jge
xor
adc
sarl
sub
push
pop
adc
or
push
add
daa
loopne
in
xchg
sbb
aas
in
ret
call
jge
mov
xchg
subb
mov
add
sti
mov
insb
aad
push
add
lahf
xchg
push
sarl
pop
mov
mov
mov
xchg
leave
inc
cmc
sub
stos
rcl
add
pushw
xor
bound
pusha
shll
add
aas
mov
std
pusha
xor
les
nop
lea
inc
aas
pop
rolb
xor
mov
loop
sbbl
mov
pusha
pushf
xor
sbb
push
int3
sbb
in
arpl
sub
adc
popf
stos
push
lock
sbb
mov
dec
int3
and
pop
push
inc
xlat
movsb
test
loope
adc
test
push
insb
nop
test
xor
lea
and
rclb
mov
imul
dec
xor
add
adc
mov
mov
xchg
fwait
lea
pop
inc
gs
call
pop
and
imul
add
lds
sbb
lcall
push
adc
pop
xchg
and
sub
or
push
push
cmp
pusha
loopne
insb
push
aam
jl
push
inc
dec
addb
stos
add
sbb
loope
or
sub
jg
or
xchg
ja,pt
subb
test
or
pop
scas
out
roll
rcr
out
in
pop
push
jo
sahf
add
leave
xor
out
and
insb
lock
fwait
ret
sbb
es
je
adc
fildl
fisttpll
dec
push
je
pusha
shlb
pinsrw
or
je
rolb
ja
push
xchg
in
add
imul
loopne
sbb
lret
repz
sbb
gs
movsb
mov
sub
sub
xor
adc
jbe
mov
fildll
inc
ljmp
scas
pop
filds
dec
push
sbb
sub
negl
out
sti
clc
jno
add
stc
dec
push
pop
rcrb
stos
push
aas
cmpsb
in
test
fisubs
es
in
hlt
call
jae
adc
add
pop
inc
rol
adc
jmp
lods
or
mov
aam
pop
dec
xchg
add
xchg
shl
push
aas
and
mov
mov
push
add
sbbl
addr16
adc
add
adc
popa
cmp
push
cmp
in
jno
lret
lret
add
mov
add
pop
enter
push
shlb
mov
in
into
pop
data16
mov
jp
addb
pop
in
insb
lcall
ja
ror
mov
sub
add
fdivs
or
add
jo
add
int3
xor
add
repz
sub
add
je
lds
fistl
add
fiaddl
xchg
jl
subb
jns
mov
or
bound
or
addl
and
stos
and
jge
add
outsl
repz
movsl
jae
push
add
mov
cmp
add
mov
pop
lds
jmp
fwait
mov
and
jmp
int3
sbb
movb
popa
xchg
decb
mov
adc
ljmp
sti
add
xchg
repnz
out
sub
pop
mov
repz
push
addr16
sbb
popa
adc
aam
pop
sti
andb
in
or
xor
mov
and
xchg
mov
jo
xchg
or
add
push
add
movsb
push
filds
or
jmp
icebp
add
dec
xchg
lcall
lea
sbb
popf
cltd
cmp
outsl
testl
lds
push
push
andb
scas
jg
mov
xor
dec
adc
shl
add
add
fs
sub
adcb
mov
nop
enter
add
inc
hlt
adc
sub
cmp
sahf
or
cli
add
add
jmp
push
dec
pop
jmp
cwtl
add
push
cmpb
imul
add
mov
ficoms
stc
pop
xor
sbb
and
sub
je
leave
cmp
cmpsl
ds
pusha
inc
into
xchg
mov
lcall
insb
fistl
mov
and
add
mov
cmpsb
jb
pop
add
mov
xor
add
movsl
jg
adc
andb
pop
push
jbe
popf
add
adc
pop
stos
add
insl
mov
je
int
adcl
and
dec
pop
add
or
fidivrl
jmp
ret
popa
pop
ror
add
push
dec
mov
and
rolb
sbb
sub
negl
loopne
pop
pusha
fistpl
add
loope
sahf
add
test
and
mov
mov
add
ss
jle
pusha
stos
out
add
cmpsl
xor
jmp
mov
shlb
or
sbbl
dec
add
dec
mov
repz
outsb
sub
js
add
stos
nop
pop
sbb
cmpsb
jge
cld
xchg
enter
add
cltd
and
cmc
xor
loopne
sbb
fsubs
es
sub
jge
mov
pushf
daa
out
or
mov
pop
add
in
or
addl
mov
lret
enter
sbb
dec
adc
jne
mov
or
insb
out
cmp
jno
daa
and
add
dec
pop
fdivl
add
dec
mov
cltd
pop
sarb
and
cli
add
cmpsb
push
inc
add
sbbl
adc
cmp
add
adc
or
mov
jle
jo
xchg
cld
mov
aad
mov
jno
cmp
jb
pop
mov
call
adc
stc
pop
popa
ficomps
pop
add
data16
xor
add
xchg
out
mov
xor
pusha
mov
mov
stc
daa
insb
pop
sub
xlat
jo
das
cmpsb
add
arpl
jge
add
stos
fwait
add
push
int
jne
pusha
adc
sti
cmp
or
js
pop
gs
clc
jp
rcrl
imul
ds
xor
xor
add
inc
shrb
daa
cmc
pusha
jp
dec
inc
fcoms
popa
sbb
cwtl
cmp
pop
add
push
je
mov
vucomisd
mov
push
pop
and
loope
mov
movsl
repz
in
xor
and
jp
dec
loopne
fsubrl
mov
add
inc
das
xor
xor
cwtl
aas
sbb
addr16
jle
scas
aam
pop
call
pop
aaa
les
push
subb
sub
inc
std
add
lcall
addb
or
adc
sbb
fiadds
out
pop
pop
cs
cmp
push
add
mov
push
in
adc
jp
cmpsb
into
add
push
dec
or
movsb
leave
add
dec
xchg
fcompl
mov
mov
add
sti
mov
dec
out
inc
cmc
add
jle
mov
add
xchg
dec
icebp
mov
repz
nop
and
cmp
dec
mov
jg
or
dec
sub
adc
sub
push
dec
xchg
sbb
or
or
cld
loopne
aad
xchg
xchg
call
es
outsl
xor
iret
adc
mov
cmp
adc
lcall
mov
jb
xor
add
lds
push
pop
je
jmp
sti
or
xchg
lds
lahf
dec
pop
jg
and
jl
mov
adc
xlat
shll
and
xchg
add
xor
daa
addl
push
cmp
jns
add
sbb
pop
add
insl
test
add
sbb
cld
xchg
pushf
stos
sub
je
cmp
std
mov
sbbl
cmp
add
clc
sbb
push
add
sbb
pop
push
mov
sbb
lret
mov
mov
loop
add
out
and
test
pop
div
add
add
mov
dec
mov
ficoml
setge
adc
pop
dec
mov
add
add
mov
cmc
mov
and
popf
lods
xchg
insl
outsl
icebp
add
cltd
jge
sub
lds
and
sbb
mov
mov
sbb
andb
xchg
sub
mov
test
adc
stc
inc
lahf
push
add
mov
xchg
cmp
mov
xchg
imul
xor
stc
add
pop
and
shrb
adc
jb
imul
je
cs
enter
jl
sbb
and
sbb
mov
shrl
aaa
inc
stc
stos
fbstp
pop
call
mov
jg
inc
and
pop
popa
testb
mov
ss
ret
inc
shl
cmpsl
xchg
add
or
loopne
mov
mov
out
les
add
pop
add
mov
cmp
xchg
mov
cmpl
orl
jns
add
mov
dec
mov
push
and
push
inc
pop
fmull
sub
es
or
aad
icebp
adc
jmp
loopne
into
pop
xchg
insl
clc
inc
add
subb
mov
add
fnstsw
mov
sub
lcall
jne
outsb
inc
xchg
pop
es
int3
add
bts
add
cmp
fwait
inc
pop
ds
repnz
cltd
push
sahf
rcl
mov
aam
adc
push
out
pop
pop
rolb
pusha
push
fwait
dec
leave
add
lods
pushl
add
out
in
daa
adc
sub
add
arpl
loope
and
aas
out
sbb
loop
or
dec
fsubr
lods
decb
jbe
mov
pusha
sub
cli
xor
or
repnz
mov
sub
cmp
outsl
fildl
add
movsb
mov
pop
dec
add
cmpl
fldl
add
jno
incl
xchg
mov
pusha
push
ficomps
sub
xor
add
shrl
mov
pop
lock
jae
jo
mov
test
cs
pop
dec
int
hlt
int3
sub
and
mov
jp
rol
mov
or
cmc
push
mov
add
mov
sbb
mov
inc
orb
rolb
rcrb
movsl
fsubl
push
in
pop
std
nop
scas
jecxz
inc
in
mov
loopne
mov
add
inc
rcrb
addb
je
push
xchg
push
add
popa
cli
mov
fsts
push
test
aad
jge
inc
dec
add
mov
scas
in
ja
jge
cmp
out
stos
jmp
jno
dec
xchg
loopne
pop
jns
mov
inc
mov
and
roll
add
outsb
ss
adc
sub
cs
dec
dec
sbb
or
mov
push
mov
js
aaa
aad
cmp
leave
add
in
addr16
fcoml
and
push
xchg
in
xchg
loop
imul
jnp
outsl
push
mov
mov
test
addb
push
cmp
push
xchg
sbb
addr16
xchg
fldcw
jge
test
and
or
pop
xchg
loop
loopne
mov
add
insb
subl
loope
add
jbe
cs
add
ds
icebp
pop
pop
jl
or
cmp
sbb
pop
jmp
push
inc
cld
sbb
gs
pop
inc
shrb
bound
faddp
pop
pop
mov
or
aam
mov
scas
pop
popl
adc
inc
mov
xchg
jg
jge
sbb
add
jns
jne
cli
in
aam
pause
add
pop
inc
push
cmp
push
popa
and
add
jecxz
and
gs
adc
aas
jmp
adc
sbb
xlat
mov
fs
addr16
scas
in
std
arpl
mov
in
xchg
rcrb
and
add
out
jnp
jno
add
fwait
xor
lods
hlt
and
inc
aam
or
xchg
lods
std
cmp
stos
lret
jnp
mov
lcall
fsubs
iret
add
enter
outsb
mov
loopne
push
pop
pop
cmpsb
cltd
jmp
das
add
push
or
call
xchg
add
pop
outsb
inc
stc
mov
xlat
add
dec
nop
push
ljmp
add
fstpt
sub
inc
add
test
int3
push
imulb
adc
cmpsb
xorb
sub
pop
bound
cmp
add
shrb
shlb
lret
test
pop
fwait
jmp
jg
out
rcl
sub
clc
jo
add
jmp
sub
pop
lret
daa
add
mov
addl
clc
rdpmc
add
mov
adc
addl
outsl
sub
mov
inc
add
cld
orl
or
les
and
sbb
addb
mov
stos
arpl
jmp
shll
push
jl
les
dec
insl
pop
es
push
mov
adcb
mov
mov
adc
pop
or
sub
rorb
and
fisubl
mov
cmp
mov
adc
push
je
add
jno
lcall
sbb
insl
inc
xor
adc
in
test
out
add
add
jo
ja
outsl
cmc
cld
insl
dec
add
push
mov
jae
cmp
and
adc
mov
incb
cwtl
das
mov
add
outsl
add
or
scas
int
lret
cmp
cwtl
sarb
push
stos
jp
xor
stos
push
pusha
in
and
shlb
rorl
add
dec
xorl
nop
cltd
dec
jle
cs
stos
adc
add
fxch
sysret
jnp
test
push
loope
dec
cs
ret
cmc
fisubrs
push
sub
sub
jge
add
xorl
std
mov
subb
in
dec
lods
fists
or
jmp
adcl
cmpsl
or
scas
or
inc
mov
or
shlb
popa
sbb
repz
inc
add
test
sub
loop
sbb
int3
inc
add
inc
dec
mov
adc
add
adc
sbb
in
or
repz
add
mov
xor
inc
and
stc
adcb
clc
and
push
cmpsb
shlb
add
jno
testl
rcrl
mov
inc
test
xchg
add
push
ret
inc
push
or
pop
stc
xorb
cmp
mov
push
mov
mov
movsb
enter
jmp
mov
dec
lods
cs
mov
jge
lret
jnp
or
sbb
dec
sub
pop
dec
jecxz
mov
push
stos
mov
add
mov
cmp
str
sub
or
sbb
and
mov
add
adc
ret
add
pop
rorb
mov
push
sub
sbb
pop
cld
cmp
pop
mov
sbb
imul
xor
jle
and
orb
dec
mov
mov
or
cmc
and
mov
xor
pop
notl
or
mov
pop
mov
call
sbb
pusha
mov
jnp
or
sub
mov
inc
mov
sahf
adc
nop
sub
loop
in
add
and
jne
mov
pop
inc
fcomps
inc
imul
and
inc
stos
adc
imul
nop
xchg
test
insb
dec
ret
and
push
adc
mov
fisttps
add
and
and
xchg
jle
and
roll
mov
and
fadd
xchg
xor
idivl
data16
leave
aas
test
mov
add
mov
xchg
pop
repnz
call
dec
inc
popa
add
lods
cmp
fsubr
jbe
cwtl
or
int
adc
es
add
lock
inc
push
and
adc
stos
repz
dec
add
or
add
dec
test
mov
vmulps
jge
out
mov
fadds
mov
lock
sbb
or
daa
loope
xor
mov
loop
mov
sub
xchg
add
aas
sarb
cs
test
scas
enter
icebp
ficompl
jne
jl
add
push
or
cmp
and
push
dec
cmp
inc
out
inc
ret
jbe
add
adc
add
sbb
outsl
inc
jno
in
sub
lock
int3
test
mov
popf
jmp
sub
mov
inc
and
rcrl
mov
clc
xorl
sub
adc
cmp
mov
arpl
jb
push
mov
fwait
xchg
mov
add
pusha
sbb
cmp
mov
cmp
cmpsl
add
dec
repz
dec
paddsb
stos
cmp
jmp
fcomps
adc
lret
outsl
push
pop
sbb
xchg
loopne
adc
test
dec
jg
mov
add
scas
lock
test
cmpl
incl
xchg
sbb
add
and
jmp
shl
fadds
jo
xor
add
or
adc
push
sbb
mov
jnp
mov
add
add
push
pop
cld
mov
xor
and
test
jp
xchg
sbb
out
ds
and
addr16
sub
sub
rcrb
fstpl
or
je
mov
mov
add
ret
stc
mov
add
jge
xor
ljmp
pop
pusha
push
or
cmp
stos
imul
sub
jge
jle
mov
pop
rcrl
dec
inc
add
repz
dec
push
stc
call
add
lea
add
push
stos
push
lahf
or
add
sti
push
loope
mov
add
cmp
pop
fidivrs
mov
xchg
in
sub
xchg
fs
jecxz
int3
jg
push
adc
mov
ret
and
add
or
adc
and
fdivrs
add
xchg
adc
push
outsl
inc
push
jb
dec
mov
sub
mov
sbb
add
mov
iret
daa
xchg
xchg
aam
push
repnz
std
pop
add
mov
insb
jnp
add
push
pop
and
mov
add
pop
mov
testl
cmp
loop
and
or
pop
nop
push
in
mov
mov
sub
or
xor
mov
jne
adc
pop
add
aas
cmp
jl
add
fwait
xor
cs
movsb
xorb
add
aaa
adc
push
and
in
lods
mov
repnz
inc
fidivrl
add
push
inc
fs
dec
mov
sub
subl
fstpl
dec
pop
shlb
mov
xchg
jnp
add
mov
pop
xchg
test
lock
mov
nop
add
mov
test
mov
jo
js
pop
fidivs
addr16
ljmp
mov
aas
sti
loope
les
cmp
in
inc
add
mov
mov
cmp
cmp
pop
iret
push
sub
imul
pop
add
je
insb
pop
jge
ja
push
call
dec
jo
loope
sbb
push
sbb
outsl
sbb
mov
jmp
add
stc
jns
js
ret
in
and
sti
es
push
ja
rorb
movsb
add
mov
add
push
lock
shlb
cmc
das
out
jbe
mov
roll
add
push
and
fistps
add
mov
int3
xchg
and
mov
and
add
incb
enter
imul
sbb
fsub
js
rorb
or
add
popa
rol
add
push
mov
ds
outsb
orb
inc
adc
push
pop
in
test
js
sub
pop
xor
fstl
fs
jno
pop
sbb
inc
and
into
add
cwtl
pushf
das
mov
add
push
pop
sbbl
je
or
test
xchg
pop
mov
push
test
add
loop,pt
dec
sub
jmp
in
ficoml
inc
and
pop
xor
loope
stc
mov
add
bound
pop
mov
add
mov
push
je
dec
das
sub
stos
cld
subb
jl
add
mov
inc
cld
sbb
jnp
scas
icebp
and
lods
addb
sub
jp
dec
jle
add
adc
iret
adc
push
inc
enter
and
cwtl
xor
loop
add
or
enter
adc
stc
enter
test
pop
and
cld
outsl
add
and
mov
or
out
add
cmpsl
and
fisubrs
add
cmp
mov
loopne
in
add
or
xlat
lds
ret
popa
xor
cmp
out
les
add
xchg
stos
add
sub
loop
cmp
add
push
dec
movsl
fstpl
add
imul
adc
pop
pusha
and
xchg
inc
or
sub
add
js
test
movsb
rcr
mov
sbb
mov
scas
add
test
jns
outsb
es
out
aam
xchg
cmp
and
stos
jg
sbb
add
cmp
cs
stos
sti
mov
add
sbb
in
into
popf
xor
cmpb
call
jns
into
and
jae
add
fldcw
add
adc
cmp
add
mov
clc
cmpsb
pop
push
es
adc
mov
or
outsb
pop
add
pop
in
fldenv
lahf
cs
test
pop
andb
pop
mov
out
mov
imul
pop
int
mulb
add
jg
adc
ret
outsl
sti
int
pop
xlat
or
mov
add
jno
xor
xchg
fcomps
mov
rolb
sti
mov
add
push
mov
lret
xorb
adc
cmp
cmp
inc
xchg
pusha
add
xlat
out
hlt
xchg
add
fbstp
mov
adc
sar
ljmp
jge
jmp
dec
mov
and
add
xlat
pop
out
adc
sbb
xchg
xchg
fisttpll
shr
lea
cmpsl
fcompl
daa
add
inc
ret
sub
sbbb
pushf
mov
pop
lret
out
adc
adc
push
mov
imul
shlb
nop
add
cmp
xchg
pop
aad
xor
jp
pop
es
lds
add
call
add
or
mov
push
and
dec
aam
ljmp
mul
inc
fsubrl
pusha
inc
pop
xor
pop
sub
in
cmp
add
idivl
dec
loop
and
and
pop
or
add
loopne
mov
clc
lods
test
mov
lret
sub
cli
lds
cmc
adc
cmovns
add
pop
aad
dec
fdivs
cltd
add
inc
jne
mov
dec
mov
lret
shrb
inc
dec
bswap
jle
aas
jne
add
add
leave
in
in
push
es
add
test
mov
aad
jg
push
or
add
dec
push
ret
sahf
mov
dec
fiadds
loop
loopne
cmpsl
sbb
test
xchg
inc
stos
jns
lahf
aas
aaa
add
inc
xlat
or
imul
sbb
push
data16
add
insb
mov
cmp
jb
dec
inc
pop
call
push
push
or
cmpb
into
sbb
faddl
clc
add
int3
jl
mov
dec
pop
mov
das
add
add
aaa
xchg
ja
negl
loope
sbb
movsb
call
push
loop
pop
jnp
add
pop
sub
popf
add
shr
push
icebp
daa
mov
add
inc
js
jnp
dec
aam
cwtl
or
mov
insb
add
lcall
and
xchg
enter
or
cmpsl
pop
nop
push
gs
xor
add
shl
push
and
hlt
sub
dec
mov
movsb
arpl
or
inc
test
push
nop
xchg
stos
loope
add
sub
stc
push
call
mov
add
fldenv
arpl
cmp
stc
inc
lahf
rcrb
sbb
std
inc
push
inc
dec
inc
in
add
imul
shlb
pop
add
jnp
out
mov
pop
sbb
sub
pop
jbe
or
lcall
mov
leave
test
add
jp
inc
mov
dec
push
es
xorl
and
out
pop
imul
cwtl
sub
lds
ret
test
jecxz
test
ss
out
aam
lea
xchg
mov
fsubr
mov
add
test
cmp
es
cmpsb
dec
cli
int
sbb
mov
cmp
ljmp
mov
cmc
add
dec
xchg
jmp
add
mov
lahf
add
mov
addr16
testl
addb
clc
rcrb
xchg
aam
bswap
imul
fdivrs
add
jbe
or
adc
pop
pop
sub
cmp
add
xor
add
movb
test
int3
mov
xchg
dec
add
fs
rcl
xor
icebp
push
jge
mov
sub
add
mov
imul
xlat
add
inc
or
push
testl
loop
dec
cmp
out
push
mov
dec
int
clc
jnp,pn
cmp
mov
adc
or
mov
pop
hlt
outsb
insb
cmp
xor
add
xchg
scas
jnp
jns
js
testl
paddb
or
add
sub
add
int
add
iret
imul
sub
fstpl
dec
xchg
mov
jns
clc
cli
out
gs
cmp
loop
push
movsl
std
add
lret
lcall
jp
mov
in
stos
mov
movsb
add
lock
mov
int3
or
cmpsb
adc
or
mov
test
jmp
jecxz
fildl
add
xorb
arpl
repnz
pop
jp
cld
std
add
inc
add
out
add
adc
mov
data16
mov
std
xor
testb
ss
cmp
xor
in
in
pop
xchg
dec
or
inc
nop
mov
insl
push
fldl
jae
pop
mov
xchg
fnstenv
xchg
ficomps
insb
rorb
movsl
outsl
out
dec
ret
fisubrl
inc
and
add
pop
insl
test
mov
fildll
pop
ret
add
ficoml
inc
out
aam
sbb
cmp
push
add
adc
xchg
pop
insb
add
and
mov
mov
aad
mov
pop
add
lods
inc
fs
cmp
fcomip
data16
and
add
add
mov
ret
jmp
in
mov
add
push
lods
icebp
fxam
popa
in
sbb
psrlw
cmp
sbb
jae
xor
jp
insl
pop
jg
repnz
adc
sub
insl
sbb
fnstcw
ljmp
rolb
pop
sub
pop
icebp
mov
add
mov
pop
test
gs
test
add
mov
cli
test
xor
fsubr
push
add
mov
cld
shll
fbld
mov
cmp
rcrb
push
lock
cwtl
cmp
imul
sub
push
or
inc
mov
sbb
and
pop
test
std
sbb
daa
nop
aaa
nop
lock
lcall
dec
add
je
push
xchg
in
add
movsb
or
add
jo
les
add
sub
imul
mov
repnz
push
xor
jle
incb
rcrl
out
gs
mov
or
out
popa
pusha
int3
add
leave
dec
inc
mov
cmpsl
mov
bound
popa
jecxz
es
xchg
adc
lea
icebp
loop
lods
push
ret
and
pop
jns
add
lret
inc
xchg
insb
cmp
scas
dec
into
pop
ja
mov
inc
movsl
ss
mov
mov
mov
jo
mov
roll
xchg
or
movsb
mov
xor
sub
test
cwtl
add
add
orl
sbb
dec
add
roll
dec
and
mov
push
ja
add
xchg
inc
add
mov
add
adc
cmpsb
ja
adc
and
dec
adc
cmp
lret
enter
nop
lahf
add
add
mov
mov
mov
lret
add
mov
pop
and
stc
pop
and
cmp
pop
push
push
ss
sbb
mov
mov
cmp
fcomps
outsl
aam
add
add
orl
aas
sbb
sub
push
jl
loop
mov
cmpb
jmp
dec
push
cmpb
bound
cmp
jl
mov
push
push
std
add
push
add
jae
lahf
add
sbb
dec
jne
ja
bound
mov
mov
arpl
add
dec
mov
sahf
and
icebp
mov
enter
test
cs
aas
cmp
out
dec
push
xchg
inc
adcb
addl
daa
fsts
dec
mov
pop
push
jns,pn
add
xchg
inc
cmp
mov
add
and
fs
pop
loopne
mov
push
lcall
mov
out
mov
rcrb
in
std
inc
mov
jl
add
pop
sub
xchg
jae
xlat
sbb
aaa
jle
push
repnz
mov
fcomip
leave
pop
or
xchg
inc
inc
subb
aaa
cld
jb
mov
dec
sub
scas
call
xor
and
mov
testl
add
xor
lcall
add
mov
out
pusha
out
adc
push
sbb
and
add
mov
pop
call
and
ds
movsb
cmp
add
pushf
adc
and
mov
ss
add
push
mov
jge
add
in
faddl
fldl
jbe
sub
xor
test
jns
xchg
jg
adc
rcll
adc
testl
push
mov
jae
mov
jnp
jl
addl
sahf
mov
rclb
enter
or
jl
outsl
and
jmp
xchg
repnz
add
cld
jo
mov
fsubl
ret
inc
cmp
lock
inc
mov
shll
lldt
pop
xchg
jge
cmp
push
cmp
loop
cmp
dec
pop
mov
add
jecxz
lea
dec
pop
lock
mov
sub
stos
outsb
pop
nop
add
xor
xor
bound
sarb
sub
stos
cmp
inc
sub
std
inc
rorb
add
lods
sbbb
mov
mov
aas
mov
jg
and
mov
push
cli
mov
add
lock
push
xchg
add
push
adc
dec
sbb
ljmp
inc
jb
jl
push
add
push
cmc
mov
add
adc
hlt
imul
mov
dec
push
lahf
test
mov
inc
cmp
mov
jl
adc
xor
add
mul
cs
jmp
xchg
xor
int3
out
into
pop
decl
cli
jae
loope
mov
cmp
lcall
push
xor
cs
gs
sub
push
dec
cmc
rcrl
add
pop
mov
out
add
pop
mov
imul
cwtl
jmp
aas
bswap
mov
add
pop
mov
out
add
testb
mov
jo
jnp
in
jle
leave
hlt
jl
add
fbstp
add
pop
shll
jge
lods
into
add
fldcw
inc
adc
mov
mov
imul
add
loope
jo
sbb
xorb
jge
into
mov
jp
dec
and
mov
mov
jo
xor
mov
add
sti
stos
es
loope
or
popf
cmc
ljmp
fildl
add
xchg
lcall
cltd
adc
inc
fs
pop
and
nop
dec
stc
mov
jbe
lds
inc
repnz
in
pop
daa
inc
lock
mov
xchg
js
mov
or
xchg
adc
inc
negl
ret
push
lock
shll
xor
ret
cmp
fsub
iret
add
xchg
mov
fsubrp
xor
or
mov
xchg
add
imul
add
and
dec
out
sbb
aam
lret
movsb
xchg
mov
jnp
and
xor
hlt
fisttps
repz
mov
je
push
stos
das
add
adc
jl
add
lods
shlb
nop
or
or
cmp
scas
notb
clc
push
les
adc
mov
test
sub
mov
pop
stos
imul
xor
or
shr
jg
dec
int
std
adc
mov
or
xor
arpl
lods
pusha
dec
std
jbe
sbb
xor
fs
xor
mov
mov
xchg
imul
and
pop
push
pop
jle
add
xor
rcrb
xchg
je
cmp
negb
pop
les
xchg
shrb
addr16
mov
add
in
dec
lods
pusha
fnstcw
in
fisubl
movsb
in
in
and
icebp
dec
mov
xorb
sub
daa
fiaddl
fsub
add
jbe
data16
xchg
aaa
push
dec
push
push
popf
dec
add
xchg
jns
add
aad
into
add
xchg
addl
aas
jnp
cmp
adcb
pusha
cmp
js
add
icebp
and
pop
rcrb
adc
lret
pop
push
lret
shrb
pop
cmpb
adc
sub
push
inc
aaa
jne
push
xchg
push
inc
push
cmp
addr16
andb
rcr
mov
and
xor
dec
pop
add
clc
mov
cmpsb
push
and
insl
push
lret
shr
sub
xchg
test
push
add
mov
sub
lock
sbb
xchg
mov
lret
dec
xorb
out
popa
pop
xchg
and
pop
and
add
sbbb
push
push
sub
and
sbb
mov
push
xchg
negb
mov
shr
lods
xchg
add
pop
adc
add
daa
fsubrs
xchg
and
sarb
xchg
sbb
lahf
lock
cli
arpl
aam
lea
inc
inc
inc
lret
arpl
out
sbbl
inc
adc
cmpsl
repnz
scas
jmp
mov
leave
mov
mov
mov
push
add
rcl
sbb
call
gs
mov
aas
fadds
adc
mov
mov
lock
push
push
mov
mov
mov
add
das
call
nop
jge
push
xor
dec
xchg
sub
testl
adc
mov
pop
pop
mov
rcrb
push
inc
outsl
cwtl
add
push
nop
cmp
rclb
cs
xchg
sti
dec
aad
cmp
movsb
push
xchg
inc
in
loopne
push
xor
pushf
sarb
scas
sahf
pop
xchg
xor
dec
mov
shlb
sahf
loop
or
mov
add
stc
xchg
adcb
dec
add
lahf
pop
pushf
nop
push
add
fsub
add
loope
xor
aaa
inc
decb
hlt
movsb
mov
sbb
loope
cwtl
add
popf
mov
test
inc
hlt
ret
fiadds
sahf
cwtl
mov
cmp
call
out
ljmp
jne
mov
sub
add
adc
orl
out
inc
xchg
and
or
dec
dec
mov
or
jo
fs
jp
xor
rorb
scas
mov
pop
imul
roll
push
sub
mov
arpl
jo
mov
push
inc
out
mov
add
push
add
inc
xor
cmp
das
add
shl
add
sbb
dec
xor
dec
stc
sbb
leave
pop
lods
xor
in
faddl
out
sub
add
adc
mov
data16
add
pop
xlat
ja
push
adc
mov
add
test
cmovle
push
inc
push
lret
dec
cwtl
movsb
add
ret
addb
sub
inc
adc
test
cmp
mov
xchg
adc
in
fildl
sbb
jmp
xchg
cmp
jmp
mov
push
or
out
xorb
rcrb
adc
aad
push
test
xor
mov
inc
sbbb
sub
xchg
inc
sbb
cmp
xor
sbb
scas
mov
in
sub
mov
incb
xorb
dec
sbb
pop
add
pop
fnstcw
out
jno
add
imul
insl
lock
xchg
fstp
add
stos
arpl
adcb
cld
pop
pop
pusha
mov
lahf
icebp
inc
xor
sahf
inc
adc
mov
mov
mov
and
add
in
pop
repz
shlb
add
pop
addl
pushf
ds
les
icebp
mov
scas
out
cli
mov
push
mov
in
leave
cmp
or
mov
cwtl
rclb
pop
lea
rol
stc
mov
push
in
mov
adc
or
hlt
inc
jge
xchg
jae
sub
add
and
and
add
pop
mov
mov
add
cli
je
add
dec
or
adc
ret
add
dec
mov
jae
add
inc
inc
cmovae
xor
rclb
insl
daa
dec
add
dec
mov
arpl
loope
add
mov
pop
testb
mov
lock
jo
sub
sbb
arpl
inc
andb
xchg
sarb
sbb
and
mov
cwtl
cmp
mov
or
fidivrl
add
fidivrs
outsb
add
sub
int3
add
mov
int
pop
cmpsb
loopne
inc
mov
lcall
lahf
mov
testb
std
int3
add
cltd
add
insb
push
push
xchg
add
jle
int
or
cmp
test
pop
hlt
sbb
arpl
sarl
shrl
inc
and
clc
movsb
or
or
pop
pop
ss
ljmp
mov
imul
sub
mov
call
xchg
enter
sbb
and
shrb
jp
mov
push
shll
add
push
fisubrs
xor
xchg
add
add
add
pop
mov
test
dec
lret
pop
out
xor
xor
dec
mov
fistpll
orb
mov
add
sbb
enter
outsl
mov
add
mov
mov
dec
add
or
loopne
and
dec
scas
mov
aad
inc
ret
mov
cmp
sbb
or
sbb
pop
add
adc
cmp
add
ja
ss
inc
cmc
push
pop
stos
push
add
mov
stc
pop
or
movsb
push
pop
mov
push
add
dec
loop
xor
test
or
jge
ljmp
inc
addr16
cmp
add
insb
add
cmpsb
push
jg
and
aam
pusha
pop
sub
adc
pop
outsl
add
inc
xchg
fsubs
clc
xchg
adc
sbb
or
jl
mov
gs
sub
mov
loopne
divl
pop
enter
or
ret
pop
mov
mov
xchg
sub
mov
dec
and
jo
jne
out
loopne
add
dec
push
dec
mov
add
lods
std
mov
loopne
sbb
scas
mov
mov
divb
xor
das
arpl
mov
xor
jle
mov
fildl
stc
fbld
mov
test
aam
scas
inc
add
int
lea
call
popa
sub
mov
push
pop
cmpsl
sub
sub
xor
add
popf
push
push
leave
inc
rcrb
pop
push
inc
dec
sub
mov
addl
iret
cmpsl
push
add
push
loopne
add
mov
hlt
pop
cmpsb
sbb
push
fldl
insl
pop
add
data16
mov
add
insb
mov
cmpsl
cmp
ficoms
dec
jae
push
inc
add
jl
frstor
pusha
lret
int
pop
rorl
popa
xchg
gs
cmp
in
mov
outsb
jno
sahf
loopne
add
sbb
in
jl
or
dec
out
clc
imul
das
mov
lods
pop
cmp
scas
movsb
and
inc
adc
dec
add
test
jecxz
fmuls
add
pop
jne
popa
int3
xorb
xorl
cmp
rolb
push
imul
jns
cmp
inc
outsl
les
xor
and
sub
xor
push
jne
in
mov
adc
pop
cmp
add
fidivl
pop
cmp
popa
jmp
sbb
scas
pusha
rolb
mov
or
inc
xor
mov
js
jge
ljmp
int3
dec
sbb
or
add
xchg
sbb
xor
mov
nop
rcl
and
dec
loopne
and
add
mov
dec
pop
push
cltd
add
inc
addb
cmp
pusha
aad
add
into
ficompl
iret
dec
rcrb
stc
xchg
fincstp
mov
add
xor
sbb
nop
into
xchg
sub
enter
add
pop
cld
or
dec
mov
jmp
imul
out
add
les
into
lret
sub
dec
jge
nop
mov
xorb
fsubl
dec
sbb
add
sub
push
push
xor
sbb
iret
cwtl
cmp
or
or
and
mov
movb
mov
test
mov
fwait
push
push
aam
mov
jge
and
mov
sbbl
aas
mov
lods
shufps
dec
sbb
add
movsb
xchg
lret
addl
lock
int
fdivs
inc
mov
and
rcl
sbb
lea
sub
mov
daa
dec
rolb
comiss
pop
shrl
push
add
fidivrl
jnp
add
adc
int
push
je
popf
add
cmp
jmp
rclb
add
mov
push
hlt
or
call
or
lock
xor
aam
push
cs
fwait
lcall
mov
ficoml
add
arpl
xor
out
cmp
lock
mov
ja
mov
xchg
inc
add
iret
icebp
pop
jp
loopne
fmull
je
loop
int3
out
out
cld
in
jl
orb
cmp
add
leave
add
mov
push
pop
fildll
repnz
fiadds
adc
inc
xchg
sarb
lret
sti
dec
mov
mov
push
pop
pop
mov
add
fnstcw
in
sti
stos
jle
out
add
mov
je
or
repnz
dec
pop
movsb
inc
pop
cmp
cmc
mov
out
mov
pop
in
pop
pop
pop
js
jo
push
add
or
pop
rcrb
repnz
mov
xor
sahf
push
mov
in
adc
sub
fisttpll
adc
xlat
pushf
imul
je
jae
cltd
xchg
mov
mov
aam
test
xlat
inc
mov
jle
into
add
negl
inc
mov
add
es
mov
push
fcompp
add
cltd
aaa
bound
and
sub
mov
clc
xor
ja
add
test
mov
adc
or
pusha
add
add
dec
sbb
pushf
imulb
or
call
mov
add
addr16
testl
popf
inc
sub
nop
call
and
adc
xchg
mov
fmuls
popf
push
inc
outsb
and
jmp
xor
ss
push
jb
xchg
mov
mov
insb
cmp
dec
mov
mov
aad
or
and
inc
testb
movsb
gs
pop
sbbb
mov
push
fs
mov
add
inc
mov
cs
out
mov
and
mul
loop
nop
inc
add
add
ja
or
fwait
add
mov
scas
push
jmp
je
cmp
xchg
cwtl
add
mov
mov
dec
push
add
scas
cld
stc
add
xchg
lret
cmp
in
push
adc
push
ret
inc
adc
sbb
mov
jl
inc
test
clc
add
xchg
push
mov
lods
insl
sbb
mov
xchg
dec
shlb
data16
mov
cld
pop
add
dec
and
lods
mov
xor
add
inc
hlt
lds
test
inc
pop
mov
dec
ss
add
sbb
inc
or
jle
push
in
das
outsl
push
pop
adc
or
xorb
incl
xchg
or
mov
sbb
sti
sub
mov
and
cmp
add
je
aas
adc
nop
add
in
scas
insl
nop
mov
inc
notb
xchg
imul
jnp
test
mov
fwait
pop
cmc
fsub
rcrb
pusha
xchg
cmp
mov
and
je
addr16
movsb
leave
add
hlt
rclb
add
or
popf
cmp
rcl
xchg
adc
add
dec
shlb
dec
pop
or
loopne
es
orb
add
aad
int
sbb
movsb
lock
add
add
int3
inc
xchg
push
add
sub
mov
enter
inc
add
int3
push
mov
mov
push
stc
dec
add
mov
mov
in
es
add
sub
fsubp
outsl
add
pop
mov
daa
or
pop
cmp
push
xchg
add
pop
add
adc
cmp
inc
xor
aas
clc
jecxz
or
lcall
cld
jb
scas
insb
and
inc
add
push
jae
int3
aam
mov
lods
push
sub
pop
pusha
and
test
or
lods
rolb
sub
mov
push
fistps
add
push
negl
and
sbb
push
stc
and
into
test
shr
inc
repz
xchg
lcall
pop
hlt
sbb
in
ret
inc
call
js
aad
lds
fmuls
mov
clc
pop
cmp
ss
pushf
add
imul
clc
adc
mov
repnz
add
mov
dec
call
les
sbb
mov
cld
icebp
adc
and
mov
fimuls
in
mov
loop
inc
mov
jp
add
sub
pop
scas
ljmp
fiadds
daa
xchg
shlb
mov
popl
dec
sub
ja
popa
sub
mov
add
sti
mov
dec
scas
add
repnz
rcrb
in
rorl
xor
pop
js
xor
pop
xorl
pop
sub
mov
and
dec
and
mov
mov
loop
fidivrl
mov
int
inc
pushf
add
jp
mov
test
adc
pop
nop
shr
leave
call
fisttpll
int
mov
movb
sub
dec
test
xor
or
pop
jle
mov
jge
xchg
inc
sbb
in
or
clc
push
ja
ud0
hlt
sarb
or
mov
inc
pop
dec
test
fadds
mov
pop
push
xlat
pop
test
jmp
jecxz
add
stos
out
add
jle
sbb
mov
cmpb
or
add
xchg
adcb
cltd
dec
aas
fiadds
call
sbb
and
sbbl
pusha
outsb
add
icebp
add
addr16
lcall
loop
dec
jno
mov
mov
mov
inc
mov
add
fsubrl
push
es
pusha
jb
adc
les
sahf
rolb
outsl
dec
test
and
mov
mov
lea
je
nop
pop
popa
insb
nop
clc
pushf
cmp
mov
adc
add
cmp
mov
or
mov
pop
aad
mov
mov
nop
xchg
jg
add
add
clc
sub
sbb
jecxz
cmp
call
lret
pop
mov
mov
shlb
cmp
push
fwait
clc
push
adc
jae
add
hlt
sti
cmp
arpl
jmpw
rcll
jle
jp
loopne
dec
add
sbb
lret
dec
into
rolb
dec
mov
inc
mov
or
sub
jg
jl
ss
ja
dec
xorb
cmp
aas
imul
mov
pop
lock
push
add
xchg
scas
jmp
cmp
cmp
jno
or
addr16
jle
cmp
mov
movsb
int
iret
push
andb
sahf
inc
add
and
pusha
mov
mov
push
jl
sub
sbb
adc
lock
push
sbb
ja
push
arpl
fdivl
add
cmp
test
xor
push
push
outsb
leave
xor
dec
or
dec
add
sbb
popf
add
pusha
test
aam
inc
iret
repz
pop
xchg
jb
loopne
fildll
and
add
xor
xchg
mov
sahf
add
jl
mov
xchg
sub
aas
push
mov
outsb
inc
add
shrb
add
pop
fcomps
xor
or
rolb
pop
movsb
cmpsb
dec
cmp
popf
loope
adc
aad
std
add
add
adc
mov
or
cld
push
mov
dec
pusha
fsubs
jge
enter
imul
lret
mov
add
mov
cli
xlat
jl
jg
add
and
stos
sbb
data16
es
inc
add
sbb
push
adc
dec
pop
aaa
cmp
enter
scas
adc
xlat
call
hlt
test
mov
pusha
and
fisttps
dec
add
cwtl
dec
sahf
pop
jg
in
sbb
rcrl
pop
sbb
insl
roll
mov
popl
mov
xor
sbb
add
push
sub
xchg
mov
mov
gs
call
pop
call
nop
add
xchg
dec
inc
push
scas
add
cmp
and
mov
imul
xchg
stc
add
stos
cwtl
shr
aaa
ja
lret
dec
mov
sbb
lock
out
rolb
loop
sub
add
dec
lret
or
sub
iret
int3
mov
addr16
and
xchg
lods
pop
inc
add
pop
mov
xchg
add
pushf
in
fwait
sub
sbb
mov
mov
dec
lock
int3
hlt
add
test
leave
cs
or
sbb
inc
jne
call
jmp
pop
filds
pop
rcrl
add
fs
mov
dec
xlat
xchg
xchg
add
std
cmp
fwait
sbb
lock
leave
or
xlat
dec
les
add
adc
mov
and
mov
cwtl
dec
lds
dec
das
in
add
ljmp
cwtl
mov
add
fsubl
dec
pop
ret
subb
jmp
mov
add
add
loop
shl
fistpl
addb
lods
mov
subb
neg
or
daa
jbe
lods
pop
fwait
cld
fimuls
pop
imul
cmpsl
mov
mov
fsub
cmp
add
inc
adc
xlat
add
icebp
das
add
adc
mov
inc
pop
push
in
insb
call
ret
loopne
push
lahf
add
je
sbb
cld
dec
sub
push
in
fiadds
sbb
repnz
push
jbe
adc
es
push
popf
add
mov
and
clc
dec
pop
pushf
or
sub
jb
add
jge
lods
inc
pop
dec
and
pop
or
ja
mov
leave
ds
xchg
add
or
rcll
mov
dec
add
pop
mov
inc
pushf
xchg
cmp
adc
xchg
add
add
outsl
lahf
sub
mov
mov
add
mov
jmp
jbe
xchg
lock
xor
lcall
mov
mov
cmp
push
enter
es
cltd
or
rolb
in
sbb
pop
sub
or
sbb
je
std
sub
xor
mov
in
xor
outsb
mov
addb
les
cwtl
xchg
push
lock
outsl
inc
or
cmpsl
ret
loopne
pop
push
add
mov
jno
pop
fidivrs
push
add
jg
stos
mov
xor
inc
lock
stc
inc
rorl
js
cmpsl
and
call
pop
shlb
ja
push
add
addl
insb
outsl
and
sbb
imul
lods
cmpsl
jbe
add
stc
icebp
or
cli
and
sub
add
cltd
mov
fsubr
pushf
lods
adc
lahf
or
push
ss
inc
js
mov
les
xchg
test
jp
pop
add
es
lock
loopne
sub
jns
lea
fidivrl
push
fwait
xchg
jno
lock
pop
jns
or
and
cmp
ja
and
pop
dec
imul
add
cmp
loope
and
cmpl
cmp
stc
sub
mov
lock
mov
mov
lahf
mov
inc
nop
sbb
nop
adc
aaa
add
mov
negb
or
leave
paddsw
clc
stc
sub
out
pop
adc
mov
cmp
add
aad
adc
jno
jl
pop
xchg
aas
ss
xor
imul
xchg
add
push
arpl
mov
icebp
sbb
es
movsb
jb
xchg
shll
mov
sub
jg
dec
js
pop
adc
add
push
or
mov
jl
andb
add
and
clc
out
add
flds
jp
into
xchg
add
sbb
sub
arpl
pop
adcl
add
out
pop
pusha
rcrb
mov
xchg
mov
fcom
addb
je
push
lds
and
enter
xchg
rcrl
xchg
mov
push
in
and
call
test
js
ljmp
jo
mov
and
cmpsl
sub
dec
rorb
pop
sub
dec
mov
jnp
xchg
filds
add
lahf
das
push
cltd
pop
loop
adc
or
cmp
jb
add
lret
xchg
lock
or
xor
sbb
cmp
add
push
test
add
add
cmpsl
add
ja
hlt
andb
mov
mov
das
cmp
pop
add
inc
xchg
test
push
add
add
sarb
cmp
and
mov
cld
or
in
test
fldl
addl
pop
push
adc
add
clc
mov
jge
cmpsb
xor
fistl
jle
push
sete
push
popf
jne
add
arpl
test
mov
inc
mov
inc
add
add
jl
fadds
mov
xchg
into
jbe
repnz
add
push
jae
dec
and
mov
ror
or
mov
push
or
aam
lcall
sar
adc
jae
sbb
shl
add
iret
mov
add
out
es
push
adc
or
sub
push
mov
ljmp
in
in
inc
dec
in
hlt
and
mov
pop
add
stos
add
jge
lret
call
insb
pop
jo
and
test
xor
lea
fistl
add
lock
stos
loopne
or
mov
cmp
lods
notl
sub
cmpl
inc
xchg
in
loopne
xor
xlat
adc
imul
scas
xchg
sbb
add
stos
xchg
push
insb
or
decb
push
pop
xchg
mov
xor
cwtl
dec
add
lods
xchg
daa
push
aam
inc
mov
or
jae
and
push
stos
out
or
in
out
pop
add
into
sbbb
pop
or
mov
dec
jo
mov
add
add
ds
mov
in
in
dec
test
adcb
lds
adc
and
inc
inc
idiv
sub
clc
xchg
mov
lret
push
add
int
bound
xchg
call
inc
add
pop
addl
fdivrs
sbb
jl
lret
nop
and
add
test
aad
add
addr16
mov
xor
nop
call
jl
cmp
sbb
inc
roll
mov
dec
jns
add
pop
mov
inc
add
bnd
add
xor
push
cwtl
ds
sbb
iret
jae
xor
gs
push
push
add
adc
sbb
xor
repnz
xor
pop
add
fsub
iret
loop
adc
shlb
inc
imul
add
mov
pushf
jb
jl
or
add
incb
rorb
sub
call
add
inc
outsl
add
xchg
xor
and
pusha
mov
add
ljmp
pop
pop
fnstcw
lcall
nop
dec
enter
out
enter
jg
stos
incb
push
add
out
jmp
orl
push
mov
or
loopne
add
jge
dec
test
pop
shr
js
xchg
adc
cmp
ret
adc
mov
xorb
fisttps
cltd
adc
addr16
or
add
push
pop
mov
cmp
add
xor
pop
mov
adc
pop
push
daa
sbbl
mov
andl
int
cmp
lret
adc
add
addr16
dec
es
lea
shrb
mov
fdivrl
or
push
dec
add
jge
push
std
rorb
mov
jae
inc
cmp
jp
push
cmp
xchg
bound
negb
or
ds
sahf
je
mov
mov
outsl
les
jmpw
out
sbb
jg
gs
xor
inc
clc
sub
addb
mov
pop
cmp
mov
jns
dec
add
sbb
flds
or
mov
jne
push
je
mov
sbb
jg
les
inc
jl
xor
mov
cltd
mov
cmp
inc
jp
cmpsb
dec
loop
add
push
inc
rorl
cmp
int3
add
pop
xorb
loopne
rcrl
loopne
mov
add
loop
jno
pop
dec
adc
out
cmc
je
jo
sahf
xchg
int
pop
push
mov
dec
dec
add
inc
mov
sbb
test
push
xlat
aas
movsb
xor
aaa
cmp
rorb
mov
int
fcompl
nop
sbbb
loopne
insb
xchg
xchg
adc
xor
jg
pop
fstpt
fsubrs
mov
add
in
jns
cmpsl
sub
or
fcompl
add
sub
mov
dec
add
nop
aad
inc
mov
in
xchg
addb
faddl
call
mov
int
inc
cli
lods
jo
jp
add
andl
bnd
push
cli
mov
shlb
or
dec
fwait
movsl
out
xor
and
repnz
dec
sub
loop
pop
cli
call
jne
lock
out
andl
sbbb
jg
push
adc
in
xor
push
adc
adc
add
jb
lcall
out
pushf
inc
xchg
mov
push
add
cmpsl
cs
mov
push
mov
inc
pop
xor
popa
add
shll
add
or
cmpsb
pop
cmp
movsl
in
in
push
cmpsb
adc
iret
rcr
lds
dec
add
cmpsb
inc
xor
cmp
push
xchg
nop
dec
xor
add
outsb
add
mov
inc
xchg
repnz
enter
add
mov
xchg
repnz
aas
mov
jge
pop
push
add
and
fldt
pop
xor
cmp
or
jnp
clc
or
ss
in
test
test
add
xor
psubsb
jg
fistpll
dec
inc
lock
push
or
add
xchg
push
cli
push
xchg
cwtl
pop
xchg
stc
jns
and
iret
mov
pusha
xchg
inc
addl
sti
xor
popf
mov
inc
ficoml
and
add
aam
add
lcall
in
adc
cmp
pop
push
push
or
add
cmp
repnz
ficoml
loopne
add
mov
dec
or
add
xchg
or
out
add
sbb
fidivrl
movsb
rcrb
mov
es
cmp
ja
adcb
ret
lods
dec
lock
in
dec
js,pt
add
shrb
lods
jae
push
daa
jmp
shr
adc
fwait
add
inc
ret
insb
mov
push
pop
dec
nop
mov
outsb
add
sti
mov
gs
fdivrl
rolb
dec
lock
or
repnz
mov
in
pop
jnp
and
cli
insb
sub
call
or
adcl
xchg
fwait
lds
cs
repz
mov
sub
nop
add
mov
dec
push
hlt
sbb
addb
int
add
lahf
add
mov
jnp
add
icebp
testb
adc
pop
fs
jmp
inc
adc
stos
push
mov
jae
xor
or
and
dec
fcom
xlat
push
add
add
or
in
add
add
out
jp
pushf
lock
mov
int3
adc
in
nop
and
scas
sbb
xchg
or
shr
sub
out
lcall
data16
mov
and
arpl
mov
inc
mov
les
loopne
movsb
add
inc
pop
int3
lret
fs
dec
subb
dec
mov
or
jecxz
sbb
pop
scas
das
jp,pt
add
add
clc
int3
or
in
ret
dec
sub
rolb
insb
mov
int3
inc
xor
lret
push
dec
xchg
ret
leave
pusha
cmp
add
enter
jae
popa
push
popf
inc
cmpl
xlat
xchg
push
imul
test
call
ret
pop
pop
cmp
sub
jl
lcall
cmp
addr16
mov
inc
inc
in
pop
add
mov
jmp
in
push
pop
lock
or
cltd
loop
shlb
dec
push
sub
pop
movsb
sub
mov
or
add
mov
add
test
cld
in
jmp
in
mov
js
nop
cmpb
aas
pop
loop
sbb
add
jp
add
mov
dec
sahf
pop
cwtl
cmp
inc
add
jb
not
add
rolb
mov
adc
push
clc
popw
push
add
sub
sub
jg
pusha
lods
pusha
adc
adc
pop
pop
iret
loopne
and
mov
lret
add
xor
add
cmc
fstpl
push
subb
daa
in
shr
mov
push
lahf
mov
mov
sbb
repnz
mov
loop
cmp
inc
pop
dec
fdivl
sahf
dec
add
mov
xchg
roll
mov
or
int3
pop
add
xchg
pop
in
mov
mov
sub
aaa
xchg
hlt
jecxz
adc
add
mov
psubusb
out
in
adc
sbb
inc
sbbb
mov
dec
rclb
adc
scas
nop
sbb
mov
xchg
mov
leave
nop
mov
testl
sbb
pop
sub
into
sbb
or
add
pop
orb
adc
dec
pop
lcall
push
dec
bound
or
xor
or
pop
rclb
mov
addr16
jl
add
addl
pop
xor
xor
jo
adc
add
xor
xchg
orb
iret
nop
pusha
pop
xchg
inc
rcrb
enter
jle
dec
je
push
fiaddl
fucomip
jmp
sub
lret
lock
mov
add
dec
adc
inc
mov
test
and
sub
add
and
inc
shlb
repnz
adc
cmpsb
stc
lods
inc
add
sbb
adc
xchg
sbb
out
push
pop
fcomps
add
out
ljmp
xchg
mov
push
je
xorl
leave
loopne
mov
add
xchg
ror
je
inc
cwtl
les
push
adc
in
add
rcl
ficoms
out
inc
faddl
add
outsl
xor
xor
dec
jmp
stc
pop
add
push
pop
aad
out
inc
pusha
jns
mov
nop
xor
mov
xor
mov
pop
mov
rcrb
scas
push
dec
xchg
add
flds
mov
sub
aas
xor
lea
add
insl
leave
rcl
das
or
and
fisubrs
roll
shrb
hlt
rclb
mov
push
call
add
and
fldenv
jno
push
adc
fs
int3
je
and
flds
pop
push
sub
xchg
orl
add
xor
jmp
push
add
pop
hlt
addb
pop
push
dec
or
inc
enter
add
shll
add
clc
add
xchg
sti
jmp
rolb
inc
fs
test
lea
push
fmull
cli
bound
movl
pop
insl
xor
stos
sub
mov
in
jo
test
negl
sbb
stc
dec
clc
hlt
shlb
in
ja
in
pop
inc
mov
add
add
shlb
lcall
sbb
add
push
push
push
aas
sbb
out
pop
dec
pushw
sbb
cmp
xor
dec
cmp
pushf
add
dec
cmpsb
mov
add
add
gs
push
in
and
lds
faddl
cmp
adc
pop
add
scas
sub
subb
and
sbb
and
in
push
inc
movsb
xlat
add
push
pop
decb
aas
pop
dec
pop
cmc
rol
out
test
add
add
int
pushf
jge
inc
fmuls
clc
out
int3
xor
mov
aad
negl
iret
out
sbbb
cmc
pop
push
cmp
filds
pop
outsb
call
sbb
add
js
adc
or
mov
mov
xchg
mov
enter
mov
sbb
mov
rcr
xchg
add
and
popf
add
inc
pop
pop
cli
cmc
imul
add
adc
mov
test
rorl
faddl
add
movsb
pusha
shlb
jp
enter
add
inc
mov
or
push
test
leave
stos
add
mov
pop
sbb
xchg
jl
add
int3
xor
add
dec
and
clc
sarb
jl
insb
pop
cwtl
add
mov
or
faddl
add
lods
das
stos
sub
push
es
sub
cmp
add
scas
mov
and
and
gs
push
and
xchg
es
add
push
pop
test
adc
sahf
scas
lahf
dec
jbe
add
cmpsl
movsb
add
pop
add
inc
insb
mov
test
mov
in
aaa
iret
cmp
loop
and
dec
pop
sbb
sarb
xchg
movsb
cmp
out
cld
test
rcl
nop
xor
xchg
fwait
or
addb
add
inc
inc
sbb
fimuls
jmp
xor
ljmp
jae
adc
lods
xchg
pop
aaa
mov
pop
or
push
xchg
add
mov
cmp
add
jp
dec
mov
mov
rorl
aam
stc
dec
orb
jmp
or
xorb
mov
das
adc
dec
push
jne
mov
jb
add
std
or
in
mov
xchg
add
insl
or
add
adc
jmp
call
inc
push
scas
jae
in
push
sahf
mov
sub
popa
lea
das
jno
dec
lret
sar
push
out
hlt
cmp
rolb
mov
jnp
push
leave
adc
in
les
fs
or
mov
cmpsb
scas
in
cmc
jno
adc
jg
rcr
mov
jns
popl
or
xor
nop
mov
push
push
dec
out
aad
xor
dec
xlat
jne
add
movsl
xor
add
ja
ss
mov
cmp
out
dec
inc
jge,pn
jp
jb
lret
icebp
not
add
outsb
cld
out
insl
imul
xchg
sbb
push
lea
movsb
mov
out
ljmp
cli
rcll
pop
jbe
aas
push
xchg
enter
mov
dec
push
cmp
adc
imulb
loope
rcll
mov
add
gs
je
inc
sub
mov
adc
push
lcall
jbe
mov
mov
add
mov
cmpsb
cli
mov
aam
shl
add
fisubrl
ret
push
stc
in
mov
andb
add
fnsave
shl
fidivrs
cmp
jnp
dec
add
sar
xor
push
bswap
fdivs
adc
and
inc
pop
insl
and
push
dec
inc
mov
int3
xor
lds
cs
sub
gs
cmp
rcr
inc
fmuls
and
addl
pusha
mov
test
jbe
xchg
jb
inc
add
xor
pop
cmp
in
add
int3
fcmovne
sbb
cli
lcall
jns
cltd
push
adc
pop
nop
inc
mov
and
loope
faddp
sbbl
jle
pop
sbb
xchg
cmp
movsb
add
popa
in
fnclex
and
popf
inc
xlat
pop
inc
icebp
lock
cmp
lahf
inc
mov
outsl
imul
movsl
and
fs
dec
sbb
sub
xchg
cmpsb
clc
pop
add
ret
roll
out
xchg
or
insb
mov
push
loop
rcll
movsb
push
cs
call
pop
aaa
nop
test
dec
mov
add
fisttpl
sbb
pop
lret
sub
mov
enter
mov
ja
add
xchg
cwtl
es
movsl
add
sub
pop
push
pop
lret
and
out
call
aaa
mov
mov
loopne
xor
sub
add
mov
loopne
gs
mov
jno
rcrl
push
or
pusha
and
cmp
xchg
add
and
cmp
jle
cmc
xchg
pop
mov
push
stos
jbe
sbb
out
push
adc
jb
or
add
lods
ja
add
add
mov
add
jg
mov
add
call
xlat
mov
scas
push
shlb
push
adc
push
icebp
arpl
xlat
loopne
in
sbb
jge
addl
out
rcrl
pop
or
js
inc
and
in
and
add
mov
imul
push
aas
test
jb
add
out
int3
fsub
cmp
jg
bound
add
add
xchg
xchg
jge
movups
in
add
sub
adc
dec
clc
pop
push
faddl
mov
test
fwait
add
add
repnz
push
repz
add
pop
dec
push
fisttps
clc
fsubrs
or
and
nop
or
cwtl
xchg
push
mov
test
fwait
and
imull
shlb
lock
fcmovu
into
jge
sbb
iret
and
mov
add
or
lock
pop
add
pop
popa
inc
lods
jo
addl
aam
adc
adc
add
mov
add
enter
insl
jo
and
mov
jo
clc
ficomps
lret
aad
jne
add
adc
mov
sub
add
test
test
cmpsw
add
or
verw
sbb
add
cmp
inc
or
mov
sbb
leave
in
mov
jbe
add
in
cmp
rorb
add
imul
bound
addr16
mov
sti
orl
mov
in
sub
fnsave
pop
dec
pusha
jo
imul
and
movsb
ljmpw
sbb
push
pop
add
push
jmp
add
and
mov
xor
adc
and
push
outsl
add
lods
jle
repnz
int3
sti
xor
lods
push
xorl
add
lcallw
dec
fdivrl
inc
inc
xchg
loop
jne
repz
adc
adc
cli
insl
add
das
gs
mov
sbb
in
inc
mov
outsl
and
or
or
fisttpll
jmp
jns
add
xchg
mov
aam
movl
pop
call
push
ds
loopne
mov
subl
xchg
jl
mov
ljmp
pusha
adc
dec
in
jnp
xor
mov
pop
shrb
adcb
pop
ss
add
or
add
lock
nop
add
mov
cmpsb
mov
ja
int
js
fiadds
data16
test
sti
sbb
xchg
mov
lods
mov
aam
sub
pop
scas
pop
cmp
mov
aaa
sbb
add
or
dec
add
scas
jp
clc
cmc
nop
cltd
cmovs
adc
add
ss
test
enter
imul
mov
je
add
jle
jbe
cwtl
std
push
or
dec
xor
add
mov
lods
fiadds
push
push
mov
push
add
addl
add
pop
or
std
shr
push
add
mov
add
xchg
icebp
je
jecxz
fmuls
test
rcrl
pop
addl
call
add
sbb
add
ror
xor
dec
es
inc
cwtl
xor
inc
movsb
into
pop
dec
add
inc
pushf
xor
push
mov
push
addb
pusha
or
sbb
mov
adc
inc
ds
mov
scas
rcll
pusha
jnp
mov
sbb
and
test
shr
sbb
and
mov
leave
add
xchg
push
mov
sti
rcrb
out
and
add
cmp
jp
jno
and
insb
mov
movsl
fildl
add
test
lods
js
mov
xchg
mov
add
clc
addl
dec
fsubp
mov
mov
outsb
cs
inc
loop
test
bound
add
jge
pop
sbb
adc
outsb
xlat
dec
or
inc
mov
mov
cmp
mov
sbb
jge
divb
xor
fistpl
rolb
cmp
inc
dec
jge
mov
adcb
add
mov
adc
xchg
enter
lahf
loopne
xchg
or
cmp
popa
sub
push
cs
add
add
add
mov
bound
les
das
fld
es
jne
xchg
pushf
in
ret
fdivrs
jl
pop
jnp
inc
inc
inc
ret
cwtl
faddl
mov
jbe
cmpsl
lods
push
sub
xchg
dec
and
shll
jo
in
add
add
mov
ds
pop
dec
cmp
add
and
dec
add
test
test
dec
sbb
push
mov
add
pop
aaa
imul
cmp
add
xchg
fidivl
enter
xor
sbb
cmp
addr16
and
cmpsb
jl
push
lock
push
dec
mov
lea
cmp
pop
jg
xchg
pop
push
incl
js
loopne
stc
xor
push
jg
add
outsb
pusha
adc
dec
aaa
mov
sbb
add
ja
and
insl
add
jg
add
dec
sbb
add
call
pop
out
into
fiaddl
out
stc
imul
not
add
test
incl
sti
into
and
inc
add
xor
dec
out
cmp
out
xchg
divb
das
add
dec
hlt
jl
push
int
dec
dec
lret
sbb
dec
orl
mov
or
imul
mov
jge
mov
xchg
add
lds
cmp
xchg
jp
xor
pop
scas
aas
lods
pop
and
jge
adc
add
mov
cwtl
jae
imul
out
push
and
jb
or
repnz
lea
loopne
add
push
mov
pop
movsl
add
mov
in
adc
iret
out
cmp
mov
xor
jae
sti
in
hlt
or
movsl
sbbb
mov
and
adc
stos
push
cmp
adc
cltd
outsl
dec
loope
ljmp
add
mov
loop
push
adc
xchg
popf
sub
jne
scas
jo
jb
data16
mov
pop
mov
mov
pusha
jp
cmp
mov
sbb
pushf
das
cmpb
push
popa
addr16
shlb
sbb
out
call
mov
sub
pop
lds
cmp
push
orb
and
add
leave
mov
jne
add
stos
pusha
mov
mov
add
js
jae
push
add
jle
sbb
adc
mov
add
push
jae
add
test
xor
ds
mov
and
sub
add
sub
pop
das
cmpsb
jo
test
sub
cmp
xchg
add
stc
iret
pop
dec
xorl
add
inc
cmp
pop
add
inc
cmp
jle
mov
jmp
pop
leave
dec
add
mov
pop
scas
ret
loopne
mov
jbe
xchg
out
test
mov
adcb
inc
sub
stos
mov
add
jno
or
iret
add
movl
inc
repz
mov
jo
add
sub
xchg
sub
mov
out
cmp
cmpsl
jne
lret
xlat
dec
or
sbb
mov
aam
and
popl
aad
sbb
cmp
das
add
outsl
cmpsl
and
mov
data16
cmp
cmpsl
int
add
imul
in
pusha
and
add
or
insb
add
adc
scas
sub
and
je
xchg
stos
rolb
ljmp
or
aaa
xor
or
jg
pop
dec
int
mov
pop
add
cmp
jae
pop
mov
add
dec
mov
in
add
mov
test
or
lods
or
test
add
jl
stos
dec
mov
add
pop
and
push
in
mov
js
icebp
cmp
jge
add
loop
add
xchg
push
loopne
xor
jo
cmc
outsl
adc
add
stc
call
in
jg
and
xchg
roll
inc
inc
rolb
xor
xchg
sub
sbb
cwtl
add
shlb
xor
add
xlat
pop
inc
add
xor
mov
dec
cld
add
out
cltd
int
sti
imul
test
push
or
push
jne
add
mov
pop
mov
sub
das
pop
js
sbb
or
pop
fs
mov
inc
popl
faddl
popf
xchg
out
push
fldenv
fs
fisttpll
cmp
dec
pop
xchg
mov
sarb
mov
mov
and
sbb
loopne
aad
stos
fwait
stos
add
sbb
in
pop
sahf
mov
hlt
push
xor
push
loopne
ljmp
lods
jno
xchg
adc
add
aam
cmp
mov
cmpb
and
add
enter
movsb
add
out
mov
add
frstor
pop
pusha
inc
nop
inc
add
outsb
dec
sbb
inc
js
lret
add
or
cmp
aam
add
in
inc
add
int3
lods
rorl
cmp
fisttps
cmc
add
je
cmp
add
and
xchg
fimull
into
add
push
jle
pop
push
mov
sbb
pop
push
jbe
repz
andb
pop
lret
jo
or
in
pop
leave
or
call
sahf
xor
mov
mov
jo
inc
mov
xor
mov
pop
repz
cli
push
lock
mov
push
xchg
in
mov
inc
or
fcompl
cmp
jmp
and
clc
jle
into
add
sbb
xor
decl
pop
shrb
rorl
and
loopne
push
lret
pop
scas
dec
add
movsb
shrb
mov
lcall
loop
add
mov
add
ja
adc
sbb
stc
sub
das
data16
insb
xchg
fs
pop
mov
testl
add
cmp
push
in
push
subb
jecxz
divl
shll
repnz
pop
or
cli
xchg
adc
sbbb
out
xchg
mov
pusha
sbb
pop
jnp
mov
inc
push
jo
xor
xchg
in
cwtl
mov
sbb
nop
les
push
pop
gs
ja
add
into
insl
add
dec
fsub
in
test
pop
loopne
inc
adc
pop
fildl
mov
in
ret
add
int3
test
add
js
fsubl
lds
fdivs
xchg
push
mov
scas
dec
add
cs
mov
xor
ret
push
push
add
and
int
ds
or
test
dec
mov
add
xlat
inc
out
mov
dec
jns
insl
ficompl
and
mov
subb
jae
pop
add
sarl
mov
mov
pusha
push
int3
jge
adc
mov
add
pop
les
mov
in
pushw
xchg
mov
and
test
add
xor
mov
pop
insb
outsl
cmp
stos
scas
push
shlb
les
cmp
sub
jbe
pop
js
lds
repz
inc
mov
add
loopne
mov
push
sub
cltd
lcall
add
sahf
out
push
mov
or
test
pop
ret
shrb
mov
push
loop
xor
cs
push
ret
xor
in
add
daa
sub
loopne
pusha
add
lods
push
cli
sbb
loop
xor
mov
test
adc
add
mov
xchg
or
jae
jmp
and
dec
or
pop
inc
cmp
cli
sbb
sar
and
mov
sbb
ret
dec
popa
popf
and
push
shll
inc
adc
shrl
push
insl
add
test
stc
mov
add
movsb
pop
mov
roll
or
dec
mov
jo
add
fwait
add
les
or
data16
scas
fwait
lea
sbb
jno
sahf
out
mov
and
roll
mov
enter
scas
push
xor
jae
addl
mov
dec
out
lock
push
adc
popf
sub
mov
xchg
andb
cs
add
repnz
xchg
inc
or
dec
push
sub
cli
std
mov
test
adc
jbe
rolb
add
mov
jle
xor
fwait
adc
or
std
in
cwtl
add
fdivr
mov
push
fisubrs
add
push
je
inc
xor
add
and
cmp
mov
inc
jecxz
repnz
add
add
pop
pop
ret
sub
pop
pop
xor
jae
cld
inc
add
jl
repz
add
aaa
test
pop
mov
gs
add
sub
repnz
into
test
incl
fnstcw
stos
add
push
pop
test
inc
xchg
jg
scas
cmp
sub
xchg
pop
add
push
cmp
fsubr
pusha
out
jge
aas
cwtl
mov
ss
lea
jae
ds
and
psraw
push
shll
mov
addr16
push
pop
rorl
adc
add
bound
add
mov
add
lds
outsb
lret
pop
push
cmp
xchg
idivl
sbbl
jb
add
jle
mov
into
jge
mov
jno
add
std
fisubrs
sub
or
cmp
add
mov
push
add
out
adc
int3
dec
shrl
cmp
xor
adc
xchg
call
or
mov
dec
add
mov
je
add
cmp
lret
pop
sahf
xor
pop
xchg
jecxz
outsl
add
rclb
xchg
idivl
add
out
lret
stos
push
add
out
mov
jp
xchg
jae
in
ret
cmp
pop
gs
sub
roll
andl
adc
arpl
fistpl
in
pop
pusha
nop
mov
sub
pop
mov
repz
out
cltd
add
push
out
cmp
sub
push
jg
into
jnp
add
lret
xor
insb
add
pushf
ret
scas
in
lods
pushf
fdivrs
stc
mov
enter
fiaddl
imul
sbb
xor
fcoms
add
test
lret
aas
mov
rcr
xor
and
shlb
test
out
push
repnz
mov
add
arpl
in
add
sub
or
sub
sub
inc
aad
mov
and
outsl
repnz
xchg
in
jb
or
jne
add
mov
push
add
jae
xor
insl
fdiv
add
jo
push
rol
pop
push
sub
dec
fistps
add
loopne
mov
rcrl
add
daa
std
aam
lods
inc
aas
jne
push
cmpsb
fidivs
sbb
or
iret
in
add
fildl
or
pop
add
jecxz
adc
jnp
fisubl
dec
or
das
add
jg
lret
xchg
cmpsb
adc
addb
adc
dec
fwait
enter
xchg
inc
push
insb
add
add
and
cld
dec
inc
xlat
pushf
sbb
orb
sub
add
push
xchg
ljmp
jg
jns
aad
imul
add
dec
or
outsb
add
mov
dec
sbb
and
pushf
sbb
shrb
xchg
xchg
mov
push
pop
iret
push
lds
mov
ja
mov
cwtl
jbe
imul
hlt
jg
sub
add
lea
cmp
xor
ret
and
clc
dec
lahf
loope
dec
notl
mov
sub
cmp
and
push
mov
stc
je
loope
jg
mov
hlt
test
add
pop
fsubl
sbb
or
ret
inc
push
nop
bound
jecxz
add
rcpps
xor
push
outsl
inc
imul
sbb
sub
das
bound
mov
cld
pop
pop
inc
vandnps
jle
out
pop
pop
filds
fadds
movsb
cmp
nop
jne
add
aad
cvtps2pi
sbb
add
mov
mov
sub
adc
sbb
push
xchg
mov
push
mov
out
inc
xchg
incl
lds
xchg
mov
push
cs
push
repz
in
inc
dec
ret
sbb
and
dec
inc
pusha
lret
add
xchg
mov
inc
jl
shr
sti
outsb
cmp
lock
outsl
push
and
xlat
pop
inc
push
push
jns
add
cmp
or
dec
or
int
push
aas
out
mov
add
jecxz
mov
in
sti
inc
rcl
add
xchg
lds
jnp
jne
roll
test
add
sbb
test
mov
lcall
sti
or
add
dec
outsl
int3
sub
ja
int3
out
add
out
aas
sub
add
psllw
repnz
mov
jo
addb
pop
mov
int
mov
xchg
insb
call
icebp
in
pop
cmp
testl
ljmp
call
movsb
clc
sub
subb
into
mov
push
mov
in
adc
and
adc
or
xor
jp
dec
xor
push
cmp
push
nop
fcom
cmpsb
stos
ljmp
lea
dec
dec
jl
add
loop
or
xchg
out
add
cli
aaa
sbb
out
xor
cmc
add
and
lret
es
jp
push
mov
push
add
ss
loop
mov
mov
je
or
xchg
mov
daa
inc
push
loope
jnp
cmp
or
xor
in
push
imul
testl
sub
mov
aad
mov
lsl
sahf
mov
daa
add
lcall
nop
rolb
leave
mov
fdivs
lods
push
or
repz
test
lock
inc
int3
lret
lea
mov
das
sbb
sbb
add
popf
movsb
dec
lock
mov
add
imul
inc
arpl
sarl
xchg
les
fldl
sub
xchg
or
mov
inc
enter
mov
loopne
pop
sbb
mov
sub
and
add
insl
out
sahf
stc
adc
orb
jecxz
add
inc
xor
cld
dec
out
subb
roll
mov
inc
cmpsb
ret
pop
repnz
test
xlat
in
add
pop
imul
cmpsl
and
xchg
pop
jnp
add
mov
sub
nop
cmpsb
add
aam
shll
mov
sqrtps
push
dec
jne
lock
sbb
cmp
addr16
mov
sbb
sub
sti
add
jne
fidivs
pop
sbb
in
dec
js
outsl
mov
or
dec
adc
push
jl
or
pushf
fmul
or
aam
movsb
pop
addr16
out
repz
adc
out
pop
and
inc
mov
push
ds
sbb
and
inc
loop
jp
pop
jmp
jb
pushf
imul
into
test
lret
add
outsb
mov
mov
lods
xor
mov
push
sub
mov
pop
push
dec
mov
repz
nop
xor
and
mov
insl
fdivp
jns
cltd
rcrb
add
test
jno
xchg
or
add
jecxz
rorb
pop
ror
push
dec
add
jbe
ret
or
xchg
add
mov
out
add
decb
cmp
clc
inc
div
pop
and
loope
les
adc
add
pop
inc
std
or
scas
and
push
inc
xor
ljmp
cltd
xchg
jmp
int3
add
push
les
jns
add
push
push
push
jno
mov
and
sbb
ds
shl
jo
enter
xor
dec
inc
xor
xor
or
adc
sbb
ds
repnz
jo
or
fists
mov
and
add
ds
push
sbb
inc
insb
faddl
jecxz
inc
scas
jmp
fisttps
pop
push
add
cmp
scas
in
xor
das
iret
pop
or
and
add
adc
data16
jg
xor
add
sbb
push
sbb
push
fwait
mov
inc
in
sbb
fadds
mov
in
aas
or
pop
push
jl
sub
ror
sub
ret
data16
mov
scas
pop
inc
jnp
lods
push
adc
and
add
popf
loope
adc
insb
add
sub
cmp
mov
push
cmp
mov
xor
ljmp
lahf
mov
mov
movb
int
aas
cwtl
sub
mov
jle
mov
add
mov
andb
add
js
sahf
dec
push
addl
icebp
adc
mov
call
jbe
jge
mov
in
xchg
shlb
jo
pop
mov
cli
sub
dec
xor
sub
pop
mov
or
pop
addr16
mov
pusha
in
dec
mov
rcrb
cmp
popf
push
xor
sub
rcl
mulb
jo
and
add
clc
lret
fs
fcomps
inc
fdivs
add
jecxz
nop
nop
pop
sbb
pop
cmp
fisubl
mov
cld
add
cs
mov
push
popa
xchg
jmp
cmp
incl
push
add
fldenv
sti
add
xchg
jmp
sbb
mov
ja
into
add
pop
imul
push
or
js
bound
mov
adc
pushf
add
adc
mov
sbb
aam
gs
add
addl
stos
fwait
sbbb
push
cmp
jmp
mov
nop
jg
push
or
hlt
cmpsb
dec
orl
jecxz
jmp
add
inc
mov
stos
pop
insl
add
sti
test
xchg
enter
mov
pop
pusha
and
jne
mov
ss
cld
cmp
sahf
add
aam
pop
std
jl
dec
ret
sub
jecxz
and
add
jae
jg
into
inc
mov
out
xor
sub
cmp
add
rolb
mov
jb
flds
dec
test
test
push
out
cmp
fimuls
test
xchg
rcrl
add
jo
pop
pop
add
mov
add
sarb
pop
cmp
lock
sbb
cld
pusha
movsb
loop
sbb
repz
divl
push
push
xor
insb
jb
xor
and
mov
push
js
pusha
jle
xor
mov
subb
jo
sbb
adc
xlat
shrb
pop
mov
and
mov
lods
sbb
sbb
adc
test
ljmp
ja
xchg
add
jl
cmp
loope
decb
jp
icebp
inc
and
cmp
shlb
loopne
orl
mov
push
and
sub
mov
jge
push
je
lcall
cmpsl
aad
mov
int3
jp
les
repnz
sbb
jo
push
rcrb
lret
dec
out
and
dec
test
sub
adcl
jae
sbb
jp
and
imul
sti
pop
sar
push
jne
xchg
in
rcrb
test
fstp
xor
push
ficoml
pusha
ss
jl
push
cmp
fcompl
pusha
pop
jne
push
imul
push
leave
mov
cltd
sti
in
mov
out
bts
movsl
mov
scas
add
lods
popa
into
xchg
aam
pop
push
hlt
mov
or
and
jge
test
push
push
fiaddl
rolb
add
adcl
pusha
bound
mov
ja
pop
sbb
in
push
cs
pushf
sbb
mov
in
popa
icebp
inc
out
daa
imul
push
pop
mov
lods
jb
pop
xchg
cmp
sbb
sti
ror
nop
add
loopne
sbb
movsb
and
dec
push
sub
pop
fadds
addr16
mov
out
ja
push
cmp
stos
xor
mov
dec
pop
sub
add
pop
xchg
and
cmp
dec
and
pop
inc
add
or
xor
sub
add
out
lds
lcall
pop
jmp
inc
sub
lret
addb
adc
in
jnp
imul
out
add
xbegin
add
das
cli
bnd
adc
mov
pop
stc
jmp
sub
xchg
cwtl
sbb
pop
mov
add
dec
push
add
jbe
popf
push
cmpsl
push
cmp
lret
je
sbb
mov
push
into
mov
and
int3
jl
popa
inc
xchg
inc
pusha
xchg
pushf
pop
mov
or
hlt
or
flds
cwtl
pusha
outsb
adc
insb
push
sbb
cltd
scas
inc
std
in
push
add
push
shll
sub
mov
push
sub
jno
shl
in
dec
clc
lock
mov
out
inc
rolb
clc
call
xchg
lcall
sub
sysret
scas
xchg
xor
out
push
nop
add
sbb
push
iret
xchg
add
stos
rcrb
rolb
mov
push
push
dec
and
sub
pop
repz
jo
pop
cmpsb
pop
pop
jne
rcr
xor
add
pusha
mov
xor
in
mov
xchg
mov
push
outsb
cmp
xchg
mov
shl
mov
stos
loopne
pop
and
push
inc
ret
inc
shlb
add
xchg
arpl
enter
roll
adc
sbb
repnz
inc
test
adc
mov
popa
mov
push
repz
inc
decb
push
lcall
push
add
clc
push
clc
cwtl
fmull
jge
xor
rol
mov
jne
ss
aam
out
sbb
adc
pop
clc
std
in
iret
mov
add
daa
mov
add
mov
dec
jp
call
or
ret
iret
mov
cwtl
lcall
cmp
sbb
add
sbb
rcrb
repz
hlt
xchg
pushf
pop
dec
add
daa
jae
aad
js
adc
in
and
push
cmovnp
inc
in
cwtl
cltd
cmp
add
loope
dec
add
pop
cltd
lcall
ret
xlat
xchg
push
cmpsb
notb
add
xorl
mov
es
push
push
add
ss
loope
pop
add
repz
js
loopne
push
sbb
inc
andl
inc
push
cmp
enter
mov
or
mov
push
dec
inc
fnstenv
add
jle
inc
or
add
dec
or
out
jl
pop
jnp
mov
stos
sub
add
lcall
mov
adc
aas
sti
dec
mov
xchg
mov
push
push
jne
xchg
stos
xchg
pop
roll
inc
mov
sub
pushf
push
in
sahf
or
mov
sbb
push
or
cmp
rolb
test
adc
jg
arpl
hlt
sbb
jl
push
cmp
or
fwait
add
es
mov
stos
vpcomuw
xchg
sbb
fisttps
or
enter
movsb
iretw
or
xchg
mov
stos
ljmp
call
pop
das
adc
mov
add
aad
cmp
popf
add
push
ss
shll
test
xchg
xor
push
mov
in
cmpsl
mov
and
ljmp
ds
shl
sub
insb
shrb
add
mov
add
insb
or
insl
pusha
pusha
icebp
int3
jl
or
cmp
add
push
or
add
jno
pop
jnp
lcall
stos
pop
int
es
push
adc
mov
incb
pop
and
mov
ss
fists
into
popf
add
orb
imul
arpl
pop
add
pop
add
or
ljmp
cmp
push
add
cmp
add
pop
or
leave
lret
mov
sbb
sbb
cmc
gs
rcrb
push
rorl
inc
cmp
gs
push
ja
inc
jns
orb
xchg
testb
push
je
xor
into
push
jg
add
repnz
push
stos
or
aam
iret
mov
or
or
mov
pop
sbb
and
lahf
inc
jns
sub
dec
enter
cmp
es
movsl
jmp
bswap
inc
dec
insb
mov
ja
cld
mov
loop
jo
int3
pusha
aaa
xor
bound
lcall
push
mov
scas
mov
add
test
jmp
or
and
add
cmc
pop
in
outsb
inc
add
scas
aaa
adc
sub
addr16
adc
mov
push
inc
mov
aaa
int3
or
mov
and
movsb
sbb
pop
arpl
xor
dec
adc
inc
push
add
notl
adc
notl
fsubs
add
jg
add
inc
jae
rep
addl
mov
pop
mov
shl
js
les
adc
xor
ljmp
mov
jne
cmp
inc
jg
cmpsb
out
add
sub
mov
in
test
add
gs
mov
jo
pop
sbb
test
shlb
mov
add
add
mov
cwtl
push
lret
lods
hlt
xor
dec
mov
outsb
push
add
xchg
and
mov
mov
loopne
cmpl
cmp
pop
je
inc
dec
add
xchg
xor
adc
pusha
stc
add
test
loopne
mov
mov
add
outsb
outsl
es
sub
sbb
sub
rclb
fstpl
pop
mov
popl
and
sub
jne
add
sahf
xchg
dec
aas
shll
add
jecxz
roll
xchg
jmp
add
inc
test
movsb
dec
push
pcmpeqw
jmp
inc
cmp
pop
push
dec
movsb
leave
mov
test
pop
jnp
add
popa
mov
cmp
mov
sbb
pop
outsl
push
out
add
and
dec
mov
sbb
ja
cs
mov
push
inc
popf
pop
in
movl
je
add
add
jne
sub
add
and
push
shll
cmp
push
cli
test
dec
adc
dec
add
xchg
leave
ljmp
roll
cmp
pop
pop
pop
dec
jecxz
lock
cwtl
lock
sub
sub
in
push
adc
add
bound
cs
cltd
movsl
sbb
dec
stc
xlat
xchg
adc
addl
and
xchg
dec
sbb
add
aaa
in
aad
cmp
fs
push
icebp
fiadds
lahf
jns
fdivl
test
cmp
adc
aad
jmp
cltd
push
mov
jnp
push
cmp
cmc
add
dec
mov
or
add
jecxz
xor
and
sbb
movsb
stc
add
roll
add
orl
ljmp
xchg
sub
pop
mov
out
push
sub
add
cmpsb
fcomp
psrld
mov
aad
push
fmul
std
dec
cmp
pop
xor
pop
shlb
cmp
push
dec
jb
push
rclb
dec
lret
add
popf
iret
inc
xchg
sub
fistl
rolb
pushf
add
stos
orb
lods
sub
popa
sbb
mull
add
push
cwtl
nop
inc
cmp
add
pushf
lcall
dec
ret
test
add
add
cmp
incb
mov
mov
pusha
or
enter
sub
xor
les
lods
and
ja
push
lock
mov
fdivrs
push
add
sub
xor
xor
mov
add
lods
ret
aam
sbb
jg
mov
mov
add
xor
push
loop
pusha
sarl
fisubl
add
jecxz
mov
enter
xor
out
xchg
push
jmp
add
push
mov
mov
cwtl
jecxz
mov
loopne
sbb
or
pushf
les
dec
aam
fucom
cmp
mov
add
cwtl
fistpll
pop
jno
push
mov
push
push
and
add
imul
sbb
gs
in
push
and
mov
test
test
sbbb
push
movsb
andl
aaa
dec
add
push
inc
push
inc
outsb
ret
clc
add
cmp
je
outsl
mov
add
and
fdivl
add
inc
mov
pusha
pop
mov
int3
or
adc
mov
push
xlat
sub
stos
cmp
enter
lret
mov
jge
xchg
add
add
add
dec
adc
adc
mov
push
pop
roll
sbb
stos
rcl
xor
ret
mov
xchg
xchg
mov
add
inc
jnp
fstpl
add
xchg
pop
mov
and
pop
cs
dec
inc
movl
js
sub
jne
add
push
pusha
mov
add
fmulp
jae
push
adcl
dec
jo
add
adc
loop
lahf
fnstsw
test
iret
les
and
add
mov
mov
repz
clc
enter
add
outsb
rcll
sub
inc
mov
inc
and
add
jle
inc
sbb
add
sub
push
call
insl
push
outsl
mov
orps
pusha
fldl
sti
aad
mov
add
lret
testl
shrl
sub
inc
test
xchg
pop
add
imul
mov
add
cmp
mov
dec
dec
push
add
cmpsl
aam
lock
rcl
dec
add
rcl
fldcw
pop
pop
aaa
clc
shl
push
or
mov
jno
mov
cmp
int
test
inc
outsb
sti
out
mov
inc
add
movsl
inc
cltd
add
imul
adc
sub
fiaddl
push
aam
roll
cmc
jo
jbe
inc
int
add
pop
sbb
imul
inc
sub
rcr
jmp
stos
add
or
ss
push
leave
dec
add
jb
dec
test
xchg
call
mov
mov
add
cmp
out
inc
pop
mov
fmul
dec
jo
push
jne
daa
and
movsb
xlat
xchg
les
add
adc
jge
push
push
pop
call
jecxz
mov
jecxz
pop
xchg
stos
loopne
add
adc
jnp
add
testb
adc
call
add
jne
pop
fdivrs
push
xchg
data16
enter
rolb
add
test
rol
in
mov
loope
pop
mov
cmpsl
in
adc
jo
sub
setno
mov
sub
mov
sbb
fildl
mov
xchg
nop
mov
cmc
cmp
enter
scas
std
je
adc
and
jmp
push
push
add
in
aas
sldt
repz
dec
adc
add
mov
icebp
les
sub
add
xchg
test
lcall
inc
inc
rolb
or
int3
add
jmp
test
add
sbb
jg
sbbl
pop
sti
out
inc
lds
cmp
dec
add
sub
enter
cmp
add
cltd
in
out
mov
jb
mov
cmp
jle
and
fcoml
sub
fimull
inc
mov
sbb
testl
xor
mov
pushf
call
add
repz
popf
pop
jo
pop
bswap
or
push
add
fcmovu
test
pop
daa
int3
push
push
mov
ror
pop
cmp
sbb
or
mov
jb
pop
mov
in
cmpsb
add
lds
add
hlt
cmpsl
cld
test
and
jmp
add
jge
dec
jecxz
add
mov
lahf
push
jne
out
in
pop
adc
rep
pushf
add
call
and
push
popf
or
imul
sub
cmp
sub
xor
fstpt
add
or
jne
pop
pusha
xchg
mov
mov
adc
mov
aad
lock
mov
sbb
fisubrs
jg
sub
add
pop
lock
add
int
add
iret
xchg
dec
mov
add
xchg
decl
add
int
insb
and
and
cmp
xchg
inc
or
add
jns
lock
cmpsl
adc
push
fldcw
lret
jno
push
xlat
pop
in
push
mov
pop
pop
mov
xorl
dec
rcll
push
xor
in
sti
pop
mov
adcl
dec
add
ljmp
add
idivl
ret
add
sub
jo
adc
sub
clc
stos
mov
dec
in
push
jl
aad
cwtl
xchg
add
fs
sarl
roll
jne
dec
je,pt
jmp
mov
cmp
pusha
es
jns
add
leave
pop
push
mov
mov
cmp
pop
push
adc
and
pop
mov
mov
mov
add
inc
pushf
cli
push
jns
mov
inc
stos
xchg
xchg
mov
repnz
je
aam
adc
int
jle
popl
mov
or
lret
pcmpeqw
icebp
pusha
inc
shll
add
fcoms
cmp
repz
jb
jmp
xor
jno,pn
mov
rclb
mov
nop
inc
pop
jo
xchg
mov
loopne
cmp
cmp
repz
dec
jl
add
mov
inc
wrmsr
jnp
dec
sub
aad
and
in
jl
xchg
nop
xchg
mov
mov
jg
mov
lret
pusha
sbb
add
mov
push
pop
xchg
pop
movl
inc
add
inc
add
push
scas
in
mov
jb
add
lahf
faddp
ret
pop
xor
sub
mov
outsl
add
sub
pop
jo
pop
add
xchg
enter
cmp
mov
lds
adc
xchg
mov
fs
cmpsb
lahf
add
fnsave
xor
push
lret
popa
scas
test
add
pusha
pop
sahf
sbb
pusha
movsl
push
shlb
add
mov
rolb
xchg
cmc
fs
add
add
imul
adc
and
mov
dec
icebp
push
add
cmp
test
mov
loopne
jl
lds
add
dec
ja
xor
scas
and
push
fsubrl
fisubrl
in
cmp
aam
iret
xor
pop
addl
scas
hlt
mov
mov
popf
jb
push
outsl
loop
daa
aam
push
sbb
jle
or
xchg
pop
mov
sub
cltd
mov
pop
sbb
sbb
bound
loop
subb
mov
syscall
fldenv
xor
int
enter
push
xchg
push
add
bound
push
add
int
gs
out
add
adc
mov
add
and
lods
mov
add
dec
mov
add
sbb
incl
enter
or
aaa
adc
xor
sub
add
mov
pop
sub
sub
jg
xor
cmp
push
aas
and
xlat
filds
imul
rclb
xor
cmp
mov
add
add
jge
loop
xchg
shrb
pop
testl
cmpsb
dec
add
dec
roll
sbbb
jno
adc
aam
sti
mov
adc
cmc
add
sub
inc
add
jne
push
mov
in
ret
add
adc
ljmp
aam
inc
jg
dec
cmp
mov
lds
ss
js
mov
les
add
inc
pop
fadds
jge
outsb
jnp
enter
pop
or
xchg
repnz
ret
sbb
ds
orb
push
pusha
mov
out
inc
popa
faddl
test
adc
xchg
rcl
push
xchg
dec
sbb
jp
pop
scas
jg
xorb
test
test
mov
jnp
mov
mov
lea
test
jb
data16
pop
inc
jo
subb
nop
loope
push
mov
push
and
jnp
mov
add
cmpsl
mov
push
push
pop
cmp
mov
pop
stos
inc
imull
adc
and
into
inc
daa
sahf
fistps
lret
add
lcall
out
arpl
lock
cwtl
add
or
add
add
push
ffreep
out
push
jae
cmc
loopne
mov
mov
dec
rcrb
jno
push
leave
clc
add
sub
mov
je
jo
aam
cmp
add
add
nop
mov
xor
and
xor
push
cwtl
subb
xor
mov
xchg
loopne
xlat
jge
cs
lods
orb
gs
adc
adc
and
clc
fdivr
and
cltd
dec
xor
movsl
dec
sbb
mov
rclb
tzmsk
pop
mov
push
jb
subl
insb
cmp
orb
gs
cli
mov
jnp
or
adc
call
cmc
pushf
loopne
pop
stos
add
js
lcall
add
int3
repnz
pusha
add
sbb
and
stos
push
cwtl
xchg
and
xchg
test
cmp
jge
faddl
or
pushf
mov
add
into
push
add
jp
cmp
push
cmp
mov
pop
mov
mov
inc
add
lods
adc
shl
add
pop
pop
sub
arpl
or
sbb
shll
adc
lds
sbb
pop
arpl
dec
cmp
sub
inc
adc
pop
jbe
imul
bnd
xor
icebp
xor
and
ds
sbb
jb
dec
inc
dec
cltd
jecxz
jl
ja
inc
andl
icebp
outsb
inc
or
add
rorb
jl
mov
out
add
pop
mov
gs
fldl
pop
cwtl
pop
stos
subb
mov
orl
imul
int
leave
cld
dec
or
scas
dec
test
cvtdq2ps
mov
mov
push
jmp
test
and
add
jb
shll
xor
add
or
pop
or
add
rcrl
sub
cmp
shlb
std
ja
sub
sbb
out
xor
ljmp
or
adc
cmp
imul
in
into
push
outsl
mov
xchg
and
aad
add
pop
popf
mov
dec
sub
cmpsb
lcall
ds
and
je
pop
sbbb
scas
notb
mov
mov
jmp
loop
aaa
push
add
lret
or
adcb
xchg
or
clc
add
jl
mov
aad
test
sbb
xor
data16
mov
out
arpl
incb
push
push
xorb
loopne
jl
mov
add
add
in
or
sub
push
sub
cmp
mov
or
aam
xor
sysenter
fidivrl
inc
mov
push
jmp
push
mov
out
lock
loope
jae
push
movsb
out
inc
bound
mov
adc
mov
inc
or
fidivrl
repnz
cli
mov
add
xchg
out
mov
lret
and
adc
sbb
mov
cli
cmpsl
sarb
rcrb
fstpt
dec
lahf
fsubl
add
jmp
mov
add
sub
sub
inc
sbb
add
repnz
push
rolb
aad
cmp
pop
dec
add
cmp
in
clc
icebp
mov
outsb
inc
inc
inc
jnp
jle
add
adc
les
in
rolb
aaa
sbb
jne
mov
mov
mov
mov
cmp
mov
lret
inc
packsswb
loopne
xorl
out
cltd
cwtl
mov
sbb
pop
and
or
lret
enter
loopne
sti
sbb
pop
adc
jnp
add
mov
add
add
inc
or
pop
adc
mov
test
inc
test
cmp
in
cmpsb
add
xorl
or
adc
mov
test
nop
add
popf
xor
shl
loopne
je
add
mov
push
pop
add
insl
ret
out
in
mov
js
add
cmpsl
pop
xchg
and
add
movsb
lahf
repnz
add
ds
les
sbb
mov
add
mov
mov
push
and
push
movsl
lret
jno
cmpb
pop
dec
mov
rcll
adc
faddp
loope
lods
pop
inc
sub
into
jnp
add
jae
scas
xchg
jp
and
rolb
fwait
outsb
pop
mov
pop
inc
xor
inc
pop
rorb
add
leave
and
lahf
mov
aam
pop
mov
shl
fsts
icebp
es
and
sbb
mov
add
lea
xor
add
sbb
ds
xlat
push
call
sub
bswap
and
xorb
pop
imul
sub
andb
in
sbb
fwait
je
test
pop
jnp
ror
mov
mov
dec
sbb
lea
out
add
sub
pop
fadds
inc
callw
out
loopne
bswap
inc
add
addl
add
lea
imul
loope
gs
lret
ja
and
lahf
mov
lock
icebp
mov
xor
and
stos
int
enter
mov
mov
test
adc
cltd
mov
mov
mov
pop
cmp
sbb
imul
xchg
cli
out
lods
jg
add
and
cmp
jmp
in
mov
push
and
push
xchg
add
push
inc
jbe
xor
lahf
addr16
lea
ljmp
ja
xor
mov
xor
add
push
push
ret
adc
sbb
leave
mov
cli
xchg
nop
xchg
dec
loope
and
bound
mov
mov
add
clc
and
mov
lock
inc
xor
popa
add
dec
in
sbb
rol
jg
jb
cmp
dec
pusha
dec
adc
fsub
or
push
daa
lret
inc
xchg
push
xchg
mov
xchg
dec
stos
add
xor
cld
add
or
sbb
sub
xor
jge
mov
add
xchg
out
in
inc
mov
decb
call
out
pop
test
mov
add
dec
sbb
dec
mov
sbb
imul
or
lret
push
push
pop
repz
in
add
lock
inc
inc
pop
mov
pop
pop
ljmp
cmc
movsb
dec
xor
push
push
mov
add
ret
cld
add
pop
cmpb
cmp
popf
cmp
lock
xor
adc
inc
push
arpl
roll
mov
xlat
inc
add
mov
jo
shl
pusha
pop
movsb
shrl
adc
mov
jecxz
sbb
loopne
popa
dec
cmp
loope
mov
js
andb
push
movsb
test
push
inc
add
pop
or
scas
aaa
adc
inc
add
mov
cs
mov
shrb
xchg
mov
or
xor
add
fwait
arpl
add
cmp
insl
push
ret
leave
ret
loope
enter
dec
js
je
add
lods
sbb
testb
cld
stc
ret
xor
dec
loopne
addb
aam
push
iret
adc
xchg
testl
sub
loope
add
xlat
sub
daa
jp
test
or
popa
hlt
cmp
mov
testl
dec
mov
add
ficoms
and
pusha
or
cmp
mov
pop
and
notl
in
mov
insb
mov
jae
and
pop
mov
aas
sub
mov
add
nop
lcall
mov
orb
xorl
icebp
imul
cli
pop
insl
mov
pop
les
sbb
mov
jae
jecxz
mov
test
movsb
cld
test
fxch
rcrb
jo
add
arpl
movb
push
xchg
and
inc
andb
or
cmp
adc
push
mov
jno
push
idiv
clc
add
jl
test
fs
xor
out
imulb
rcr
je
jae
xor
add
stc
mov
add
mov
enter
adc
jb
loopne
xchg
mov
and
dec
fwait
lcall
mov
test
inc
add
rcrb
pop
adc
lea
sbb
clc
pushf
xchg
adc
fsubl
sbb
and
jo
jae
xor
sub
bound
adc
push
clc
cs
xchg
jnp
ss
call
stos
in
sbb
add
inc
mov
jno
dec
add
inc
scas
dec
or
inc
dec
pop
test
mov
or
jbe
dec
push
sub
push
and
lock
pop
pushf
loope
add
mov
adc
dec
movsl
and
add
or
inc
cmpsl
and
js
rcrb
mov
fstl
add
sbb
sub
rep
dec
cmp
xor
pusha
sbb
ret
roll
aam
out
shrl
add
add
cmpsl
mov
jg
add
push
les
add
sbb
and
inc
pop
xor
push
add
mov
out
popf
std
adc
rcrl
add
bound
push
cltd
xchg
jmp
push
insb
ljmp
cld
inc
sub
mov
inc
jo
jo
mov
mov
je
loop
add
fildl
pop
add
outsl
ja
loopne
cmp
dec
dec
add
sub
push
aaa
fsubr
add
lock
xchg
and
add
notl
add
lret
iret
push
and
inc
mov
xor
cld
add
add
aam
jo
add
cs
xchg
pop
aad
ds
push
cmp
loope
in
add
lcall
add
dec
mov
push
add
push
iret
or
mov
shlb
cmpsb
mov
adc
dec
jbe
inc
fildll
scas
mov
gs
sarl
cmp
add
add
or
push
clc
add
cmp
mov
inc
jmp
adcl
push
test
and
insb
jle
and
sbb
sub
mov
lret
daa
scas
loopne
fldenv
rcrb
mov
ss
push
sub
jge
add
ret
push
mov
push
push
outsl
fdivrl
sbb
popa
bswap
xchg
cmpsb
jge
clc
in
push
shll
dec
adc
je
orl
xchg
fsubl
sub
jge
testb
pop
orb
std
cmp
pop
adc
or
inc
dec
xchg
adc
cmp
sbb
pop
adc
fdivr
aad
adc
in
add
dec
mov
pop
add
xor
loope
cmpsb
jl
sbb
aad
repz
sahf
and
and
mov
loopne
sbb
adc
xor
inc
mov
mov
ss
test
mov
push
add
stos
pop
mov
in
cmp
arpl
frstor
pusha
cwtl
jo
dec
fildl
add
outsl
add
pop
out
cmp
sub
mov
lcall
cld
xlat
cmc
lock
lock
add
jp
jno
not
clc
push
pop
and
xchg
popa
inc
inc
push
imul
xchg
je
lcall
shll
pop
fwait
push
int3
es
daa
inc
adc
sbb
jns
sbb
ss
adc
ljmp
mov
pop
stos
lcall
dec
push
push
jo
mov
jg
mov
mov
and
movsl
jecxz
sarb
pop
xor
or
jg
add
dec
pop
pop
xlat
scas
xor
jno
popf
loope
mov
jmp
repz
test
inc
loopne
sub
rcll
add
xchg
xor
dec
loopne
dec
jb
lret
inc
inc
cmp
adc
push
or
movsb
jecxz
outsl
int
and
fwait
pushf
add
clc
cmp
pop
dec
jb
jno
jl
mov
pop
mov
loopne
pop
push
sbb
cwtl
dec
inc
xor
sbb
cli
and
push
addr16
out
add
push
icebp
fs
push
loopne
cli
sarb
testl
sub
jg
add
xlat
pop
pop
jg
add
inc
add
lods
addb
dec
mov
add
xor
add
fcompl
jecxz
or
sub
les
mov
or
xchg
pop
sti
and
shll
push
push
ds
cmp
push
mov
call
mov
mov
out
add
insl
lds
adc
xor
loopne
jp
repnz
ja
xchg
sub
gs
mov
push
je
pop
int3
into
fadds
stos
xchg
add
xchg
mov
jge
rclb
dec
data16
push
mov
jae
mov
mov
push
mov
mov
aas
fidivl
add
loop
into
rolb
pop
aaa
push
lea
xor
loopne
test
pop
test
clc
dec
ret
and
insl
sub
mov
test
sbb
popa
inc
in
xchg
add
rclb
dec
sub
cmp
cld
lahf
mov
ljmp
xchg
shl
mov
and
xchg
rcrl
insb
inc
sbb
into
sbb
sbbb
int3
shlb
lea
aaa
jb
push
xor
arpl
cmp
dec
nop
or
mov
add
jecxz
mov
inc
cmp
or
ds
mov
pop
pop
sbb
inc
add
les
test
cmp
js
add
sub
jbe
cmpsb
mov
inc
loopne
rcl
out
movsl
cmpb
add
cltd
pop
loop
add
jmp
int3
add
mov
jmp
mov
clc
xchg
sub
inc
xor
pop
push
cs
inc
inc
lea
push
movsl
loop
cli
ja
cwtl
pusha
adc
stos
cmp
inc
add
pop
sub
hlt
mov
push
xor
mov
das
aas
mov
sbb
sub
repnz
push
insb
scas
flds
je
jmp
and
ja
outsb
xchg
ds
pop
dec
into
cmp
cmp
popf
cmp
inc
add
pop
andb
push
fldcw
push
adc
leave
xor
pusha
add
hlt
xchg
xchg
ljmp
jmp
inc
cltd
sub
or
pop
add
or
pop
xchg
adc
or
and
adc
add
mov
add
or
sahf
or
fnsave
fnstcw
push
sbb
lock
cli
in
iret
faddl
sub
xorl
mov
add
loop
in
orb
and
push
sbb
icebp
shl
pusha
inc
adc
push
add
and
adc
push
add
sub
idivl
pop
or
push
test
sbb
cmpsl
imul
cmp
mov
lods
aad
test
adc
or
sub
xor
nop
pop
push
lock
outsb
and
dec
add
in
mov
push
add
or
add
sub
cmpb
jmp
rolb
pop
and
add
mov
std
xchg
add
cmp
and
pop
sub
popf
out
xchg
push
cmpsl
pop
inc
getsec
push
divb
mov
add
pop
cmpsb
jge
cld
add
les
dec
out
adc
add
sub
push
and
je
add
jg
fdivp
jl
add
cld
lods
sub
popa
fsubrl
in
ja
sub
scas
adc
cmp
pop
sti
lret
fiaddl
sbb
cmp
add
or
xor
sti
mov
mov
dec
inc
mov
fnstsw
or
inc
movl
cmp
or
mov
jecxz
push
nop
mov
add
das
fwait
stos
mov
add
xchg
sti
xchg
pop
dec
stc
mov
mov
sub
xchg
xchg
add
or
cmp
popa
push
sub
pusha
xchg
pop
jp
mov
dec
add
cmpl
push
cmp
xchg
mov
mulb
out
imul
daa
or
cli
add
sbb
repnz
or
ret
add
mov
or
xlat
fwait
mov
push
jo
mov
out
mov
jecxz
dec
xchg
repz
aad
mov
mov
and
or
and
hlt
ds
add
pop
push
jno
sub
and
fwait
loopne
add
push
cltd
mov
add
cmp
imul
jo
add
push
add
xor
shlb
int
insl
out
cli
movsb
orl
mov
add
lock
aad
xchg
jae
cwtl
cs
fmulp
orl
fisttps
and
lods
rcrb
add
cld
lds
or
ja
mov
mov
pop
jbe
adc
ljmp
add
insl
cltd
loopne
add
rcrb
add
cmp
fiadds
lahf
insb
lock
mov
aam
cmp
lret
xchg
add
xchg
lds
into
add
cmp
clc
push
add
jbe
call
push
sub
arpl
ss
xchg
jae
mov
mov
xchg
cmp
jnp
mulb
push
push
xchg
dec
cld
int3
sub
xchg
pop
or
and
and
fists
xchg
mov
cmpsb
mov
mov
push
shrb
scas
add
dec
mov
xchg
add
mov
ret
xchg
add
mov
aas
fldl
cmc
or
sbb
mov
xchg
and
pop
repnz
inc
mov
pop
rorb
jle
add
mov
mov
push
fwait
or
add
aad
mov
cmc
fistps
or
add
adc
and
mov
inc
dec
aas
js
cmp
in
test
dec
shl
dec
nop
les
test
lahf
push
jae
mov
inc
in
es
add
jmp
sbb
sub
jl
in
or
add
inc
mov
js
dec
ret
testl
dec
mov
pop
cmp
popa
sub
shrb
pop
sbb
pusha
loopne
ljmp
or
sbb
pop
add
das
sti
or
add
gs
mov
shlb
xor
jno
insb
fmull
loopne
adc
add
lahf
ljmp
and
mov
cld
ja
lret
push
stos
mov
inc
fs
pop
add
add
loopne
or
sbb
adc
jle
xor
add
ds
add
test
jecxz
enter
ljmp
daa
cltd
fmull
loopne
add
sbb
loop
cmp
scas
jo
jns
popf
or
nop
xchg
psadbw
mov
test
sub
pop
mov
jg
cmp
fbld
nop
insb
into
push
lds
movsb
jmp
lods
pop
or
sbb
psllw
inc
pusha
arpl
in
add
or
bound
cmp
scas
cld
pop
jecxz
fcmovnu
testb
adc
inc
add
push
mov
rorb
sbb
adc
add
or
pop
into
xor
test
ja
add
lods
xor
cld
push
add
bound
adc
sub
insb
shrb
sbb
add
mov
push
rorb
out
bound
iret
aad
ds
rolb
pop
mov
dec
in
cmpsb
add
inc
dec
mov
adcb
and
mov
into
jae
add
pop
out
sub
jp
cmp
push
and
aam
pop
pop
sbb
add
mov
mov
adcb
fsts
sbb
pop
add
das
mov
imul
xchg
jl
popa
movsb
mov
lds
sahf
xor
dec
sbb
test
adc
xor
or
xchg
lfs
pop
pusha
ds
add
add
jecxz
popa
loopne
jnp
mov
cld
ljmp
test
divb
imul
lcall
pop
pop
xor
inc
xor
mov
sbb
add
aaa
sbb
jae
xchg
and
pop
out
jbe
dec
add
scas
js
mov
ret
add
cwtl
cmovne
or
lcall
push
inc
cs
je
add
dec
rcll
scas
pop
sub
or
mov
add
cltd
in
loope
push
mov
out
xchg
stos
repnz
fldl
push
sbb
iret
cmc
sub
jne
pop
je
jl
lahf
add
in
pop
xchg
sahf
mov
data16
gs
mov
jl
mov
insb
xor
add
stos
xor
and
add
cmp
jbe
add
in
mov
jl
cmp
mov
add
pop
aaa
decl
push
in
inc
xor
mov
add
push
push
mov
cli
mov
add
cmp
out
xor
sub
cmpsl
lret
leave
test
xchg
lods
stc
psllw
hlt
incl
aam
adc
push
inc
sub
fcoms
into
mov
fwait
add
add
outsb
xor
add
jp
add
inc
or
pop
dec
pop
mov
adc
pusha
xor
dec
pop
add
and
shl
and
add
je
and
cmp
fcmovnb
jge
pop
add
test
dec
or
xchg
inc
adc
cmp
mov
xor
or
sbb
sbb
jl
add
inc
mov
adc
add
push
loop
add
data16
pop
mov
xchg
std
add
addb
mov
and
jae
adc
cmp
inc
pop
or
push
mov
stos
xor
push
in
pop
hlt
or
inc
fimull
xor
add
insl
fsts
mov
sub
dec
clc
adc
enter
mov
and
add
xchg
popa
xlat
dec
cmp
int
int3
std
add
and
cmpsb
mov
add
mov
dec
mov
icebp
cwtl
inc
inc
push
xchg
incb
fsub
jmp
pop
push
hlt
xor
fdivrl
xorb
sub
idiv
fisubl
push
add
lock
icebp
dec
int3
adc
mov
rol
push
pop
cmp
pop
and
mov
call
stc
mov
int
int3
dec
push
insb
fadds
rcll
loopne
sbb
fdiv
add
cmp
sahf
jg
loop,pn
test
add
pop
dec
aas
iret
mov
scas
nop
je
add
in
or
add
sub
xchg
xor
jno
add
dec
jmp
pusha
mov
add
mov
add
sbb
loop
jns
add
push
fsubrs
or
loopne
das
ds
loopne
xor
xor
jl
ja
in
out
out
dec
hlt
xchg
sti
rcr
sub
ret
ss
dec
adc
fdivrl
cmp
cwtl
jg
outsl
pushw
ffree
jo
popa
push
clc
gs
sbb
shrb
pop
fmul
cmp
sahf
adc
cmpsb
xchg
clc
sarb
jns
and
ljmp
jle
in
sub
gs
push
loop
pop
rolb
xchg
mov
out
push
dec
cmp
cmc
mov
in
inc
cmp
notl
jge
lock
imul
xor
add
push
xchg
add
cmc
sbbl
js
add
mov
sbb
jge
push
add
test
in
mov
add
adc
pop
push
in
jl
cmp
mov
nop
push
loopne
jge
cmp
lahf
pop
cmp
shll
mov
lret
mov
idivb
cwtl
lods
and
push
xlat
pop
das
jmp
fbld
or
mov
and
enter
sub
adc
stos
aam
fadds
ss
xor
add
into
leave
xlat
clc
adc
pop
add
or
ret
push
lcall
fadds
add
imul
sub
lret
ljmp
in
xor
pop
test
sti
ljmp
sub
mov
adc
neg
divb
or
mov
ret
xor
icebp
imul
scas
push
rolb
enter
jno
jge
xchg
push
aam
sub
jne
arpl
mov
pop
xchg
or
adc
jg
add
movsl
les
push
cmp
mov
fsubr
cld
and
add
mov
les
fstl
jo
dec
addr16
or
pop
out
cli
lock
shlb
add
cmp
out
roll
mov
popf
mov
xor
les
pop
cmp
outsl
ds
fildl
hlt
mov
je
mov
sub
mov
pop
jbe
les
ss
rcll
mov
hlt
pop
add
adc
jle
stos
xor
std
or
and
jo
jecxz
dec
cmp
jle
pusha
jnp
push
ss
jge
jae
add
jecxz
xor
aam
enter
jns
fildl
out
iret
scas
jecxz
xor
mov
cmp
in
add
iret
inc
jae
insb
push
lock
and
lcall
lods
rclb
cltd
mov
and
add
pop
xlat
movsb
inc
add
arpl
icebp
jb
rolb
test
mov
call
cmp
lods
or
inc
in
negl
push
loopne
mov
pop
mov
inc
mov
cmp
mov
fcomi
out
and
add
popa
pusha
or
sub
arpl
inc
or
add
int
push
jle
and
mov
jl,pt
movsb
or
fwait
and
and
cs
mov
ds
sbb
xor
xor
orl
mov
std
dec
addl
mov
jne
pop
add
int
xor
cltd
mov
jno
adc
adc
add
andl
jl
sbb
stc
mov
push
mov
shlb
xchg
leave
out
push
mov
jae
inc
adc
cld
pop
inc
add
and
adc
dec
mov
adc
dec
pop
sbb
enter
in
cmpsl
add
js
cld
loop
lcall
inc
outsb
add
sub
xchg
mov
jge
into
sub
hlt
test
mov
dec
dec
adc
or
cltd
inc
adc
stc
inc
push
xor
cmp
sub
xchg
and
mov
mov
enter
aam
lea
sub
sbb
sbb
and
dec
std
jle
and
popf
xor
push
adc
leave
or
add
adc
mov
enter
and
mov
and
filds
inc
mov
outsl
sbb
dec
push
xor
test
out
adc
pop
inc
pop
fwait
sbb
insb
aad
sub
xchg
push
cmp
iret
roll
shr
xchg
clc
inc
add
movsb
push
out
mov
push
push
popa
xor
nop
fwait
sahf
adcb
sbb
dec
cmp
test
scas
sbb
faddp
adc
cmovs
notb
mov
pop
pop
inc
bound
aas
push
xchg
or
mov
push
mov
movsb
xchg
cmpsb
sub
lock
and
dec
addb
pop
cs
lods
addb
inc
or
inc
or
xor
lods
mov
cwtl
lods
stos
add
cmp
adc
inc
insb
pop
fists
push
inc
and
out
subb
pop
or
pop
jb
outsb
push
ficoml
inc
or
int
cwtl
or
sbb
add
fdivs
or
xlat
test
inc
jmp
sub
xor
call
movb
xchg
es
fwait
nop
inc
lods
js
dec
inc
mov
sbb
sbb
movl
test
in
adc
cmp
orb
push
push
and
xor
mov
or
push
in
loopne
mov
adc
mov
add
mov
xchg
dec
pop
push
movsb
addr16
push
shlb
adc
fsubr
adc
add
bound
test
out
enter
inc
inc
mov
add
dec
clc
int3
cmp
es
sbb
cs
movsb
mov
sbb
hlt
sub
and
jns
add
das
rorb
add
mov
pop
cli
aad
rcll
mov
std
inc
add
jne
xor
sub
daa
fsubrl
or
push
pusha
fnsave
leave
xchg
jmp
add
pop
push
sahf
xor
push
mov
mov
je
fdivs
and
pop
push
mov
enter
dec
lods
or
fwait
shlb
pop
mov
out
push
xor
push
pop
xchg
push
and
int3
lret
test
cmp
inc
pop
popf
nop
loopne
cmp
test
push
mov
xchg
lods
mov
pushf
andb
and
xchg
jae
add
push
pop
fcmovu
sti
sub
enter
roll
adc
jl
movsb
nop
scas
inc
cmp
mov
inc
cmp
ffree
repz
mov
or
test
pusha
push
adcb
pop
jne
push
mov
sub
xchg
mov
inc
mov
pop
gs
cmp
shlb
adcl
mov
sbb
movsb
and
push
add
ja
mov
push
aam
bound
push
sub
and
scas
push
repnz
add
les
fmull
je
jp
mov
sbb
imul
testb
test
lock
popf
call
pop
imul
and
push
fwait
xchg
pushf
sub
aaa
add
pop
adc
sbbb
pop
inc
mov
sbb
mov
or
sub
dec
cmp
or
jg
repnz
jns
mov
int
enter
out
in
data16
stos
sbb
int
push
push
pop
shl
adc
int3
adc
cld
mov
sub
test
enter
iret
add
inc
scas
dec
add
jecxz
xchg
and
mov
ret
mov
aas
cltd
repz
pop
xor
pushf
adcb
adc
inc
ss
rorb
in
in
mov
test
jnp
xchg
lock
out
stos
xor
movsb
rorb
add
xchg
cwtl
enter
dec
jmp
dec
es
or
mov
and
sub
dec
aas
mov
adc
dec
imul
mov
dec
xchg
mov
pop
add
adc
or
sti
mov
adc
rcrl
in
les
jg
add
jns
popa
cmc
inc
stos
pop
lods
les
ljmp
cmp
ret
mov
sbb
scas
fsubl
popa
add
stos
mov
lods
push
and
jae
repz
mov
push
jmp
xchg
call
mov
dec
sbb
hlt
or
data16
ret
pop
mov
ficoms
iret
addr16
cs
push
and
jp
leave
popa
sbb
je
lret
push
sub
adc
loopne
test
xchg
jmp
mov
dec
push
pop
or
insl
cmp
mov
movsb
jmp
xor
sub
in
pusha
arpl
inc
add
subl
jl
mov
inc
and
jle
push
enter
add
sbb
je
jmp
imul
add
stos
cmp
add
and
mov
add
imul
pusha
imul
repz
shll
adc
sbb
inc
std
add
aad
and
push
add
adc
fbstp
test
dec
test
dec
cs
or
dec
pop
pushaw
inc
pop
jp
popl
jl
adc
xchg
hlt
sub
jmp
or
ror
mov
mov
sbb
nop
insl
xor
xchg
call
insl
xchg
test
mov
mov
sbb
mov
call
lret
hlt
and
sub
es
mov
outsl
sbb
jo
add
mov
nop
jae
push
sbb
shlb
mov
dec
mov
out
pop
push
pushf
dec
and
rcr
out
mov
fs
push
push
orb
dec
add
jecxz
xor
sbb
sub
dec
outsb
fadds
pop
jne
popf
xchg
aam
or
mov
xchg
jl
mov
mov
xor
inc
inc
mov
add
and
fdivrl
cmp
mov
loope
jae
es
movsb
call
or
in
dec
add
nop
mov
test
sub
pop
xor
outsl
test
add
jle
mov
ljmp
nop
cmp
jns
cld
mov
add
cmp
movsb
adc
and
je
sbb
cltd
inc
and
pop
mov
jmp
mov
xor
add
leave
movl
xor
lock
enter
fwait
in
sbb
stc
add
sub
mov
inc
jle
pop
popa
lret
inc
xchg
cmp
repz
dec
mov
jge
test
test
adc
cltd
lds
xor
in
stos
xor
sti
push
sbb
add
adc
or
imul
xor
cs
sub
jecxz
shrb
pop
insb
call
inc
add
push
or
mov
pop
adc
add
or
fcompl
ljmp
add
pushf
add
enter
jno
adc
push
mov
inc
mov
add
out
adc
out
push
loope
mov
mov
sub
clc
pop
mov
mov
adc
test
sub
and
js
mov
fadds
push
xchg
add
xchg
pusha
mulb
shrl
jb
sbb
cmp
mov
inc
xor
add
xchg
ljmp
push
js
aad
xchg
sbb
psubd
sbb
rclb
in
or
jp
mov
es
in
dec
add
push
push
in
mov
add
pusha
nop
cmp
addr16
dec
cltd
cmp
inc
dec
mov
in
sub
xchg
fidivrl
pushf
mov
push
lds
adc
add
cmpsb
sarl
mov
pop
dec
enter
and
rcl
es
test
loop
sbb
jmp
xor
xchg
movsl
cli
icebp
hlt
fimuls
in
andb
je
cmp
jo
add
stc
insb
enter
test
pop
dec
mov
movsb
cmp
xchg
cmp
fstpl
loopne
pop
shr
stos
mov
movsb
and
les
in
mov
loope
push
mov
push
adc
daa
add
push
inc
mov
add
ret
push
mov
adc
test
push
mov
xlat
and
imul
movsb
and
add
and
pushf
xchg
sbb
pop
sub
and
mov
and
mov
mov
enter
adc
push
inc
xchg
adc
pop
addr16
pushf
lods
shlb
pop
test
jge
and
aas
jb
add
call
mov
lret
fwait
add
sub
push
add
daa
testb
movsb
mov
add
adc
pushf
addb
pop
das
out
loope
in
push
cmp
mov
ficomps
in
bound
insl
js
pop
sub
into
sub
mov
mov
and
sbb
sub
mov
and
lock
or
ret
mov
gs
jns
mov
add
dec
xor
imul
dec
adcb
mov
jo
inc
xchg
fwait
pop
and
fs
call
xor
adc
jmp
or
fimuls
sbb
jg
lcall
mov
int3
xor
mov
ficomps
push
movsb
in
dec
jp
call
cmpsl
roll
mov
scas
mov
mov
cmp
xchg
jnp
mov
mov
nop
sub
das
sbb
fsubl
xlat
xor
push
jno
mov
or
es
add
cmp
std
and
dec
mov
movsb
nop
sub
addl
xchg
fildll
repz
and
xchg
test
sub
pusha
mov
jmp
out
or
sbb
cmp
adc
cs
call
adc
es
scas
pop
das
movsb
shr
dec
sbb
mov
test
dec
mov
das
sub
icebp
pop
and
nop
rclb
mov
add
scas
loopne
mov
adc
mov
xchg
rcll
add
dec
int
sbb
push
xor
aaa
jns
cmp
add
mov
sub
movsb
cmp
or
jmp
and
in
mov
fstpt
jp
clc
clc
fstpl
dec
cmpsb
jl
sbb
addr16
cmp
add
push
jns
je
push
mov
dec
mov
mov
inc
popa
loop
gs
or
inc
clc
mov
jbe
and
add
mov
lahf
lods
dec
sub
mov
push
movsb
clc
pushf
movsl
cwtl
orl
fs
pusha
cmc
leave
cmp
inc
push
out
dec
add
jno
fiadds
and
cmp
or
int3
sarl
pop
mov
cs
jb
xor
insl
fimull
test
ja
add
je
aad
dec
mov
mov
mov
push
sub
add
loopne
sbb
jg
int3
in
push
mov
add
or
or
jnp
into
push
xchg
mov
add
adc
shlb
add
sbb
xlat
push
ljmp
or
lcall
mov
les
in
adc
push
loop
adc
xor
shlb
nop
enter
or
adc
aas
sbb
xchg
lret
mov
push
adc
cmc
adc
mov
xchg
push
sub
ror
push
add
push
in
lods
add
mov
loopne
and
leave
add
pushf
cmp
shll
mov
loope
add
adc
jge
push
xchg
adc
cmp
add
pop
insl
aam
mov
mov
js
sub
adc
add
movb
in
sbb
sub
rcrb
or
add
xor
lcall
xlat
sbb
dec
dec
adc
sub
dec
and
nop
fwait
adc
sub
rclb
daa
ret
pop
add
or
or
adc
add
sub
hlt
sarb
popa
cmpsl
pop
movsl
push
xchg
adc
sub
inc
es
push
repz
je
loopne
xchg
leave
popf
movl
flds
cmpb
push
cmpsl
and
dec
insb
sbb
adc
add
popf
nop
xor
int
lcall
xchg
aas
xor
imul
pop
inc
fs
adc
xor
xlat
and
jge
xor
xor
orb
mov
jo
ds
add
push
inc
cltd
fxch
pop
jl
nop
rorl
or
pop
xor
sub
adc
sahf
add
mov
or
jge
sub
adc
lret
in
int3
mov
jp
fldcw
and
pop
scas
inc
jg
pop
sub
add
pop
push
mov
imul
aas
hlt
clc
jbe
adcb
and
push
mov
cli
cmp
ds
sbbl
add
insb
in
dec
iret
scas
add
or
mov
add
stos
into
movsb
insb
xor
xor
mov
mov
pop
or
dec
addb
fs
inc
jecxz
and
imul
rcll
push
add
pop
and
xor
xchg
or
push
add
pusha
js
sub
std
inc
nop
sub
xor
sub
xor
enter
les
stos
xor
cmc
add
fmull
fneni(8087
mov
inc
ror
or
mov
in
pop
imul
xchg
sub
mov
adc
dec
insb
or
add
jmp
pop
or
cmp
fnsave
clc
jne
sbb
push
loop
mov
bound
sub
mov
sub
aas
inc
ret
cmc
sbbb
or
movsl
xchg
outsl
int3
inc
insb
cwtl
mov
cmp
addb
sub
sub
enter
cmpsl
ret
dec
lock
je
pushf
in
in
add
es
ja
lods
mov
sbb
adc
add
roll
in
dec
sbb
pop
pop
inc
je
inc
insb
subl
cwtl
pop
add
rcll
inc
xchg
mov
fsts
mov
into
shlb
sub
push
pop
mov
les
add
and
and
adc
sbb
xor
cs
lahf
adc
rcrb
and
inc
outsl
add
cli
sbbb
std
push
into
jno
cmp
loopne
nop
add
out
sbb
aad
addl
xor
push
int3
pushf
xor
sbb
cli
enter
add
and
sbb
loop,pn
shr
pop
or
hlt
dec
repz
push
cli
insl
and
mov
sub
repnz
xor
jl
mov
aaa
push
incl
xchg
xor
stos
fwait
xchg
pop
lock
sbb
enter
fdivs
mov
add
jb
xchg
xchg
movsb
imul
pop
mov
movsl
mov
or
adc
mov
dec
xor
jae
push
jbe
popf
cwtl
shlb
jle
push
cli
test
add
xchg
bound
and
mov
adc
sub
les
les
add
or
add
mov
mov
mov
inc
and
je
xchg
enter
mov
mov
stos
xchg
fcoms
pop
or
xchg
in
mov
sub
sbb
sub
or
xor
loop
dec
popf
push
pusha
jle
or
jae
adc
dec
rcl
pop
or
xchg
push
add
int
lahf
pop
je
push
ds
daa
les
xchg
pop
mov
add
dec
adc
fcompl
add
xor
push
add
fmuls
cmp
cwtl
out
dec
push
jle
mov
cld
adc
cmpsb
mov
loopne
js
and
xchg
stc
inc
inc
je
ljmp
rolb
cmpsl
imul
or
jge
adcb
shl
dec
test
add
xor
adc
push
test
jle
inc
and
push
cwtl
add
orl
inc
pop
cmp
cmp
inc
jg
fldenv
popf
and
mov
xchg
imul
and
add
sbb
mov
and
gs
inc
loope
pop
stc
push
or
nop
xor
leave
into
shlb
shrb
sbb
aas
addl
adc
mov
lods
and
sbb
pop
pop
cmpsb
pop
cmp
add
push
sbb
stc
push
fcomps
mov
inc
les
loope
mov
sub
pop
add
shlb
push
dec
jp
rorb
pop
popa
xchg
fldl
add
xchg
or
je
pop
pop
cs
mov
push
adc
roll
dec
sti
xor
mov
and
adc
nop
int3
in
ja
sbb
or
inc
pop
mov
pop
add
adc
je
sub
mov
add
or
aaa
add
or
sub
orb
or
cs
add
xchg
mov
xchg
mov
lock
mov
inc
mov
mov
fcom
mov
js
loop
test
sub
add
push
sub
add
fstl
std
sbb
aam
shl
js
add
cld
test
cld
cld
add
insb
xlat
mov
cli
js
dec
call
popl
add
add
fwait
sbb
jge
mov
inc
mov
pusha
mov
add
movsl
push
dec
fdivl
or
xor
add
sbb
mov
aam
adc
jb
adc
mov
sarb
add
call
push
and
and
add
stc
pop
movsb
cmp
cld
loopne
push
addl
cmpsl
pop
imul
test
cmp
mov
lahf
stos
gs
nop
add
les
lret
pop
push
insl
adc
cwtl
in
lds
lea
pop
shl
mov
sub
cli
in
je
add
test
add
xchg
fimull
or
dec
mov
or
jno
mov
adc
lret
stc
in
cld
cltd
add
fs
pop
or
xchg
lds
loopne
ds
add
or
add
enter
out
add
xor
mov
into
inc
leave
mov
sub
xor
jae
std
imul
lods
mov
push
pop
jecxz
out
dec
sbb
mov
sub
add
mov
add
lahf
roll
fs
dec
pop
add
cmp
clc
test
sub
in
push
add
and
les
arpl
pop
out
add
jmp
sahf
cmc
and
fadds
sbb
insb
xor
dec
in
in
add
adc
movsb
ss
mov
mov
popf
nop
pushf
mov
jg
out
xor
test
in
sub
sub
and
in
aas
inc
sbb
in
fwait
xchg
xchg
jl
lret
aad
mov
xor
or
inc
cmp
shl
xor
push
cmpsl
xchg
fwait
stos
and
mov
lret
shll
lret
adc
int3
pop
ja
fsubs
mov
jb
jp
push
stos
xor
iret
adc
mov
jne
xor
xor
int
add
fidivl
icebp
and
lods
sub
and
pop
xorb
mov
int3
rorb
sbb
sub
pop
xlat
inc
push
clc
dec
lods
xor
ss
or
jnp,pn
mov
andb
jmp
mov
pop
pop
cmp
add
adc
and
dec
pop
and
shll
cmp
push
mov
mov
in
add
push
out
test
fcomps
or
sub
in
mov
dec
or
xlat
or
ja
pop
clc
or
sub
rcrb
add
insl
jg
inc
in
adc
mov
loopne
addb
or
clc
mov
je
xchg
inc
dec
loopne
xor
or
icebp
scas
pop
cs
outsb
jns
fs
lock
sti
mov
aad
add
test
dec
sub
and
sbb
or
imul
jne
mov
or
inc
adc
mov
push
lcall
dec
fmuls
lock
jmp
jge
jmp
push
mov
scas
mov
inc
push
sbb
and
pop
dec
nop
lds
enter
dec
notl
mov
sbb
or
and
pop
mov
xor
cmp
and
cmp
test
dec
push
sbb
cltd
lods
fisttpll
mov
mov
xchg
addb
xlat
push
and
adc
fucomip
int3
icebp
sub
movsl
fimuls
add
imul
jns
sub
mov
pop
cmp
sbb
mov
add
and
pop
or
pop
add
imul
out
add
xchg
hlt
out
inc
mov
mov
es
push
sbb
mov
pop
jg
mov
out
add
or
xchg
push
call
cmp
enter
and
mov
les
jle
add
sub
add
out
rorb
and
int
insb
cmp
pushf
add
jno
pusha
nop
dec
lock
adc
clc
sbb
mov
adc
inc
or
xchg
fisttpll
mov
popa
mov
aam
shlb
add
or
pusha
cmpl
pop
scas
xor
push
push
add
nop
push
in
jae
dec
fiaddl
repz
mov
cmp
push
push
scas
push
das
mov
jae
mov
mov
in
inc
rclb
rolb
repz
xchg
mov
outsb
inc
add
mov
push
sbb
les
sub
in
xchg
nop
sub
loop
adc
shlb
test
push
or
das
adc
jl
adc
inc
sub
xor
sbb
jmp
shrl
lret
pop
andl
in
sbb
xchg
test
xchg
jecxz
or
and
push
loope
push
leave
mov
push
pop
inc
inc
dec
adc
daa
mov
push
inc
mov
nop
lds
popf
fs
inc
and
clc
fisttpll
or
bound
jge
mov
lahf
decl
xchg
xor
mov
jecxz
or
mov
fwait
sbb
pop
std
sub
sbb
daa
jp
mov
sub
dec
insb
cmp
jne
adc
cwtl
sub
loopne
call
inc
mov
repnz
adc
jg
pop
xor
mov
cmpsb
rcll
pop
and
in
fdiv
push
add
loope
or
shll
adc
mov
sarl
rorb
lea
pusha
adc
daa
and
pusha
jmp
out
mov
fsubl
pop
lock
jb
jo
xlat
add
adc
shlb
xchg
int3
jo
add
iret
add
cmp
sub
sbbb
js
and
out
inc
inc
and
xor
mov
xchg
clc
jae
and
les
add
repz
push
mov
mov
xor
mov
pop
cmpsb
fcmovnu
orb
dec
out
add
ret
and
inc
mov
xchg
pusha
aam
mov
test
nop
inc
push
and
aaa
push
mov
inc
pop
cwtl
mov
and
cltd
sbb
insb
dec
adc
cltd
lds
in
mov
fnsave
sbb
add
notl
faddl
push
and
sbbb
ficoml
out
sbb
movsb
test
xor
mov
jp
add
cltd
sbb
lret
cwtl
cmp
jecxz
pop
lcall
cmp
adc
xchg
call
into
mov
ja
pop
sub
add
jecxz
ss
pop
cld
mov
addr16
ja
scas
and
out
jno
jns
out
sti
adc
or
addb
insb
mov
jae
or
pop
jecxz
mov
hlt
nop
adc
sbb
add
mov
jge
les
jle
adcb
mov
sar
pusha
in
adc
in
and
cli
int3
push
mov
sbb
ficompl
adc
in
sub
xor
fwait
jb
shrl
mov
loope
inc
ja
or
and
fwait
rcrl
xchg
in
fistps
and
in
insb
orb
jo
push
sbb
mov
xchg
daa
pusha
adc
and
or
add
cmc
push
xchg
inc
add
mov
xchg
mov
gs
imul
outsb
dec
add
inc
repnz
inc
pushf
pop
inc
aas
mov
add
cmc
aad
inc
sub
cmp
insb
and
add
lret
add
jno
mov
push
scas
or
and
xor
aaa
fldt
add
in
fwait
cmp
ljmp
hlt
cmpb
add
fadd
sbb
cmp
adc
xor
sub
lods
and
jno
in
dec
pusha
sbb
cli
lret
fistpll
adc
fs
push
inc
add
sub
add
je
xchg
jmp
mov
add
test
movb
in
add
jb
pop
add
iret
cli
adc
pop
sbb
insl
and
filds
or
and
sbb
and
out
dec
adc
push
push
jl
clc
loopne
mov
add
leave
or
test
imul
adc
cmp
int3
pop
pop
out
pop
mov
test
xor
jns
and
mov
mov
cmp
hlt
repnz
rcrb
pusha
sbb
fisttps
push
push
pop
pop
mov
jbe
or
fbstp
add
scas
lret
mov
inc
dec
leave
dec
es
in
mov
xor
dec
inc
pop
into
js
mov
inc
jo
sub
push
addr16
divb
adc
pusha
cld
adc
jg
cld
add
dec
nop
fcomps
nop
cld
xor
push
add
js
mov
sub
lods
nop
adc
xchg
mov
das
in
or
shlb
jbe
notl
lea
clc
mov
dec
stos
lods
mov
mov
xor
fnstenv
sbb
leave
jg
jge
xchg
xchg
and
mov
lock
adc
add
xchg
jle
ja
cltd
xor
mov
add
push
into
aam
or
add
je
test
bound
adc
xchg
jmp
stos
imull
or
pop
dec
lret
dec
adcl
imul
insl
push
addl
xchg
pusha
inc
sbb
and
cmpb
dec
push
enter
xchg
cmc
mov
fsts
loope,pt
pop
and
push
pop
gs
lret
addr16
sub
clc
enter
lahf
add
jle
adc
inc
and
xchg
cld
add
les
dec
loop
mov
mov
jl
in
call
sbb
rorl
add
jns
aas
adc
cmc
nop
dec
outsl
and
aad
mov
dec
inc
lret
fistl
mov
lret
incl
ret
xchg
dec
sub
rclb
push
sub
out
cmp
lahf
xor
jl
inc
xor
mov
inc
stos
sbb
jmp
push
sub
mov
sbb
add
add
add
cmp
xchg
and
pop
cs
pop
dec
dec
out
mov
pop
jnp
mov
push
add
sub
call
sbb
test
cmp
lret
filds
push
xchg
ret
aaa
pop
movsl
cmp
in
add
iret
out
sub
inc
add
jp
cwtl
add
push
push
mov
add
sub
insb
push
dec
sub
add
jne
and
cltd
divb
repnz
les
nop
jmp
pop
jne
xchg
call
in
mov
or
sbbb
jb
pushf
mov
gs
xor
xlat
insl
imul
and
adc
pop
mov
pop
xchg
adcl
xchg
inc
mov
in
fiaddl
out
jnp
mov
push
pop
movsl
loopne
add
leave
inc
mov
aam
add
mov
lcall
pop
push
add
loop
xchg
pusha
repz
pop
or
jge
xor
lods
dec
dec
enter
jmp
add
repz
xadd
aad
jmp
in
sbb
call
cmp
sbbb
fldcw
adc
loop
inc
mov
sub
add
or
js
andnps
das
or
xchg
scas
dec
loopne
cmp
loope
in
lahf
add
inc
add
sarb
push
adc
add
sub
add
push
jne
mov
xor
jmp
xchg
out
bound
mov
or
or
ss
test
int
shrl
add
imul
orb
xchg
xchg
xor
mov
sbb
lods
negb
xchg
loopne
jmp
xchg
pop
sarl
cmp
and
jbe
push
movsl
fisttpll
loopne
ljmp
jno
pop
jae
mov
sub
js
adc
ja
push
mov
pop
add
cmpsl
cmc
push
mov
pop
xchg
adc
mov
jecxz
add
xor
add
sub
push
inc
adc
and
test
sub
adc
xor
sub
sbb
xor
mov
imull
pushf
and
es
mov
js
mov
lcall
cltd
outsb
popa
aas
add
jl
pop
dec
mov
jecxz
xor
and
push
adc
and
test
rorb
mov
rcll
movsb
fwait
sub
insb
sub
add
cmp
addb
cli
jp
fwait
orl
xchg
mov
je
das
mov
jl
cmpsb
add
and
xor
cmp
mov
or
mov
iret
xor
push
jns
rorb
shrb
sbb
call
sub
stc
aam
lsl
into
insb
adcb
and
push
lea
mov
push
add
sahf
sbb
jnp
sub
adc
mov
xchg
lcall
imul
rorb
and
sbb
and
cmp
mov
popa
sbb
xor
xchg
fdivrl
dec
push
xchg
loopne
cld
inc
add
push
lret
xor
inc
std
iret
int3
and
jp
icebp
mov
repnz
clc
aam
ret
pop
jb
rolb
xchg
loope
in
mov
mov
pop
mov
cmp
subb
or
pop
addb
sub
jl
das
sar
sub
xchg
jmp
jno
pusha
rorl
lret
and
push
insb
add
or
lret
or
ret
pop
in
mov
add
xor
shrb
sbb
and
push
mov
loop
orb
pusha
lods
lods
scas
xor
lret
mov
outsl
cli
ret
or
je
xchg
and
movsl
pop
fwait
std
cld
addb
adc
sub
mov
sbb
adc
mov
cmpb
xchg
mov
add
fisubs
add
dec
xchg
ret
fdiv
add
dec
flds
sbb
and
sbb
nop
cmp
add
dec
in
add
xlat
xorb
jb
pop
lahf
cmp
cmp
add
aam
out
xchg
dec
mov
pop
lock
dec
dec
and
test
add
sub
cwtl
add
icebp
add
xor
je
mov
inc
je
aam
lods
sbb
addb
ja
movsl
pop
and
and
or
outsb
and
xchg
mov
and
or
inc
fdivp
adc
xchg
cmp
test
push
sahf
push
jmp
insl
jge
mov
dec
lcall
and
xchg
fcompl
pop
out
in
xchg
mov
loopne
aaa
jno
add
push
push
xchg
xor
mov
roll
add
test
test
and
cltd
add
call
fdivrl
rclb
and
shr
xor
sahf
add
lret
pop
and
pop
adc
f2xm1
sbb
xor
mov
aam
cmpl
xchg
ljmp
add
xor
mov
adc
adc
xchg
mov
jmp
mov
add
jne
hlt
ds
xchg
lods
sbb
add
or
mov
cmc
out
dec
repnz
sbb
and
mov
ljmp
adc
add
jge
adc
add
sbb
sub
loop
stos
in
cmp
outsb
jne
push
lods
add
ret
aas
and
cwtl
popf
cltd
jg
add
pop
sub
mov
mov
cmp
mov
rclb
rorb
sub
pop
push
xor
jb
pop
xchg
cmpsl
adc
jmp
lods
xor
je
mov
xlat
adc
int3
xor
push
test
add
repnz
mov
inc
push
addb
adc
lds
jp
add
sub
movsb
call
out
test
sub
orb
push
jae
xlat
mov
subb
adc
add
cmp
mov
jp
cmpl
sub
pop
lea
and
add
in
sbb
lods
repz
pop
push
jnp
add
fldl
and
and
adc
dec
add
jecxz
test
adc
mov
repz
cli
loopne
xor
rol
test
sub
lock
adc
xchg
in
add
dec
adc
or
push
mov
movb
dec
leave
std
add
ss
mov
call
jmp
jnp
add
dec
shll
cmp
lock
pop
mov
repnz
cli
in
mov
add
inc
cld
mov
scas
sbb
or
push
push
dec
subb
add
or
mov
daa
push
sub
add
div
add
mov
xchg
sbb
popf
imul
mov
scas
jno
jbe
sub
icebp
mov
xchg
fs
add
leave
xchg
je
mov
inc
mov
pop
or
cmp
sub
push
push
aad
adc
xchg
test
scas
and
mov
and
lret
rorl
orb
push
push
in
add
psubsb
bnd
inc
sahf
inc
nop
xor
mov
lea
in
add
ficomps
call
scas
nop
cmp
inc
xchg
xor
sub
xchg
and
inc
and
shrl
and
add
jmp
mov
sbb
mov
push
mov
dec
or
filds
mov
push
loopne
add
and
cmp
or
sub
rcr
dec
outsl
movups
xorl
xchg
or
test
shlb
pushf
push
jne
pop
pop
pop
mov
ret
es
stc
xor
inc
pop
fcomp
jg
or
rolb
sub
test
fwait
scas
xchg
ss
lock
lds
loope
cmp
and
mov
inc
ljmp
xor
adc
adcb
add
call
hlt
sbb
dec
rolb
sub
pusha
adc
jnp
repz
cltd
pop
or
xorl
not
add
sbb
mov
push
sub
pop
mov
xor
pop
push
popa
cmp
and
inc
cmp
and
xlat
js
xor
lds
cmp
test
cs
xor
sub
sub
xlat
dec
xchg
fs
test
pop
mov
sbb
repz
adc
cmp
rcr
sahf
pop
fmuls
fwait
je
xchg
pop
xchg
adc
out
rolb
stos
bound
dec
mov
ljmp
scas
sub
adc
xor
hlt
rcr
loop
movsl
pop
sti
test
pop
leave
notb
xchg
call
lret
loope
pusha
dec
xchg
push
repz
test
mov
ja
mov
pop
shrl
std
lret
or
fimuls
pop
and
cwtl
lods
sbbl
out
std
stc
hlt
xchg
push
mov
fiaddl
stos
or
pop
fs
lahf
xchg
mov
cmc
cltd
popa
xchg
lock
or
pop
repz
inc
xor
imul
jo
jns
push
pop
add
xlat
inc
es
aam
leave
push
cmp
xor
mov
pop
das
lock
fwait
shl
rclb
jg
ja
push
clc
or
stc
xchg
pop
into
ret
xchg
dec
daa
and
aam
pop
mov
jg
add
out
jl
mov
or
adc
dec
mov
inc
aas
fcoms
adc
rol
sbb
stos
xchg
loop
outsl
mov
inc
dec
mov
inc
test
popf
jl
inc
add
enter
add
out
mov
cmp
fidivs
jg
cmp
push
mov
cmp
jmp
mov
mov
jge
add
sub
pop
sub
jp
add
test
aam
push
pop
mov
ss
mov
dec
mov
dec
mov
pop
and
add
in
jo
xor
and
gs
cwtl
fmuls
sub
clc
pop
call
shrb
aam
pushf
inc
add
fwait
xor
and
out
mov
mov
xor
int3
movzbl
mov
mov
xchg
adc
dec
inc
and
das
xor
push
mul
shlb
daa
jmp
movsb
sbbl
xor
outsb
pushfw
adcb
lds
orl
cmp
cmp
pop
stos
mov
jo
push
push
fsubrs
dec
add
mov
js
jl
cmp
adc
pop
fadd
mov
or
inc
cltd
movsb
and
out
mov
and
mov
cmp
mov
mov
jno
popa
push
cmp
stos
pop
pushf
shr
jecxz
mov
mov
xor
test
cld
pop
dec
cwtl
sbb
or
jmp
xor
addl
sbb
jns
dec
ja
add
mov
adcb
adc
nop
subl
or
inc
cmp
jb
pop
fcmovnb
xor
xor
cmpb
adc
or
js
lret
jo
outsl
jns
imul
dec
push
lcall
mov
jae
sbb
xor
mov
sbb
cmpb
mov
add
dec
mov
ds
lea
sbb
inc
test
xchg
loop
add
push
push
fists
add
mov
enter
pop
add
xor
cmp
push
xorb
mov
int3
mov
cltd
xor
inc
add
in
sub
and
add
rcrl
pop
hlt
inc
das
sbb
icebp
xorb
int3
sub
mov
dec
add
or
cmp
rorl
pop
mov
mov
inc
jb
jmp
fmul
or
dec
sahf
add
add
leave
cmp
movsb
jl
in
cmp
or
pop
xor
push
add
pusha
rclb
outsb
imul
mov
adc
cltd
fiaddl
jle
add
clc
lock
or
pop
dec
pop
and
movsl
lock
push
fwait
or
xor
mov
and
add
int3
adc
jg
push
fldenv
mov
iret
pusha
test
jle
pop
fdivl
jl
lea
shll
cli
nop
mov
push
int3
jns
dec
adc
addb
jmp
shlb
cltd
cmpsb
add
dec
addl
mov
incl
sub
pushf
shlb
test
inc
jns
sub
mov
lods
lock
notl
dec
add
dec
jnp
sbb
jb
mov
add
fidivrs
subb
add
int3
xchg
filds
push
push
xchg
pusha
and
sub
add
push
lret
add
aas
in
rorl
push
xchg
in
mov
xchg
iret
add
pushf
inc
test
das
xor
lahf
push
sbb
dec
iret
ja
mov
notl
add
shrb
pushf
shll
shlb
mov
lea
add
and
fdivs
movsb
mov
das
inc
lods
or
cmp
ljmp
mov
xor
movsl
push
les
add
push
xchg
add
sub
xchg
hlt
pop
jecxz
add
pop
and
mov
scas
enter
cli
lret
add
clc
adc
ja
ret
sub
or
adc
mov
push
or
jge
in
repnz
ret
arpl
insl
add
cmp
xchg
pop
push
imul
pop
data16
rol
leave
sub
mov
inc
nop
sbb
sub
enter
sub
inc
pop
or
lret
stos
add
xor
inc
test
inc
dec
xchg
cmpl
xor
pop
aas
adc
lods
push
cwtl
pop
xor
cmp
sub
fldt
sbb
stos
sub
sub
xor
push
rorl
lock
cmc
sub
fisubrl
enter
pop
sbb
lahf
fnstcw
add
scas
dec
or
nop
nop
cmpsl
cmp
lds
push
rcrb
xchg
mov
dec
xorb
popf
inc
mov
out
xchg
in
adc
mov
jno
daa
clc
insb
jo
mov
sbb
xor
cmp
out
add
dec
pop
cmp
pop
popf
cmc
jno
inc
lret
sbb
jbe
mov
sahf
dec
mov
dec
mov
push
arpl
aad
clc
and
lret
movsb
mov
xchg
add
mov
nop
push
sbb
add
inc
sahf
ret
cmp
add
push
xchg
je
mov
lret
js
or
adc
fmul
xor
cmpsb
and
icebp
add
ja
repnz
push
es
nopl
add
mov
pop
aam
movsl
and
shrb
mov
pop
fldl
push
cmp
xchg
add
aas
inc
mov
test
inc
int3
sbbb
add
add
dec
add
adc
sti
lods
adcl
push
icebp
adc
loope
pop
cs
push
rcr
sbb
pop
push
gs
shll
insb
cmpsl
or
or
sbb
sbb
gs
pop
and
imul
imul
cli
xor
sub
or
hlt
sbb
fxch
xor
inc
sbb
test
add
jnp
mov
mov
push
data16
sbb
mov
xorb
popf
and
sub
inc
push
cmp
loopne
lcall
push
mov
sarl
mov
push
jle
nop
mov
and
sub
shlb
sub
cmpsb
imul
shr
bound
sarb
mov
fstpl
mov
add
rorl
ljmp
jmp
push
xchg
add
rolb
sub
icebp
inc
dec
notb
les
fadds
push
popf
shlb
test
pop
push
add
std
lret
or
es
mov
add
xchg
mov
mov
sub
sti
push
lods
mov
gs
fimuls
jge
bound
sbb
add
mov
jg
mov
cld
out
dec
popa
mov
leave
lcall
inc
cmp
add
mov
es
add
jmp
inc
scas
mov
jo
add
mov
stc
pop
adc
add
xlat
dec
pop
xorl
sbb
xor
push
mov
inc
rcrb
out
add
sahf
scas
incb
ret
adc
xor
out
cwtl
adc
push
fiaddl
sbbl
imul
inc
xor
cltd
enter
sbb
add
daa
ss
xchg
lahf
cmpsl
movsb
icebp
fcomip
push
jnp
inc
add
nop
call
fwait
daa
and
mov
nop
dec
mov
xlat
xor
roll
pop
jo
adc
inc
call
xchg
add
cmp
dec
scas
adc
insl
push
div
inc
xchg
mov
jbe
repnz
xor
cld
mov
divl
dec
mov
leave
fyl2x
fstp
cmp
pop
sbb
loop
sbb
lods
mov
popf
dec
cmp
xor
daa
push
lods
rcrb
call
fiaddl
mov
movd
call
rclb
or
cmp
andb
fadd
in
frstor
xor
mov
inc
mov
mov
sbb
push
ds
pop
dec
sarb
push
lret
lea
es
cmpsl
pop
movb
jnp
stc
push
js
inc
rol
mov
add
inc
mov
mov
jne
repnz
add
je
out
loope
xor
mov
addr16
inc
std
popa
arpl
sti
in
inc
mov
sahf
cmp
push
push
pusha
out
imul
icebp
add
std
add
popa
out
and
pop
or
pop
data16
add
and
xchg
fstpl
cmp
cmpsl
addb
jmp
loope
sti
rorb
jns
popa
pop
xor
cmp
and
sahf
mov
stos
add
sbb
pop
sbb
icebp
xor
insb
xchg
cli
push
and
add
or
ret
xchg
add
jge
jbe
decl
sub
adc
lea
xor
or
scas
jle
sub
insb
cli
outsb
xor
ror
sbb
add
clc
lods
lahf
imul
dec
mov
add
sub
enter
repnz
enter
pop
mov
add
in
cwtl
aas
push
dec
add
popa
call
sub
nop
pusha
loopne
xchg
cmp
enter
sbb
and
add
out
pop
les
push
popf
scas
arpl
sub
sub
sbbb
addl
repnz
clc
mov
cltd
imul
scas
ss
add
iret
jno
imul
pop
scas
cs
lea
mov
jecxz
mov
enter
push
jo
inc
or
pop
fs
pop
xor
mov
mov
mov
mov
iret
enter
addr16
icebp
sub
aam
xchg
push
add
dec
out
scas
cmp
loop
or
dec
stc
mov
test
iret
push
adc
out
adc
mov
mov
imul
or
add
loope
cwtl
jno
lcall
movb
push
xchg
push
clc
sub
daa
add
or
push
jnp
mov
mov
pushf
lahf
jne
and
imul
dec
test
sahf
push
lock
jo
in
dec
xorl
xor
xor
movsb
cltd
imul
mov
mov
or
movsb
inc
xor
and
insl
ret
pusha
cltd
jno
cmc
scas
push
push
mov
mov
xchg
faddl
pop
dec
adc
add
mov
ret
sti
imul
push
notb
insl
xor
inc
dec
int3
or
push
jne
out
mov
loop
in
insb
imul
pusha
in
pop
push
mov
jo
pop
inc
popa
fs
pushf
arpl
add
movsl
leave
push
and
test
cmp
or
mov
mov
cs
push
bound
lock
icebp
add
xor
xor
cmp
push
sub
dec
cmp
sub
mov
xchg
jp
add
xor
push
je
add
pop
mov
xchg
stos
out
mov
out
jl
sbb
pop
adc
aaa
dec
mov
sbb
mov
sti
call
dec
lcall
arpl
add
xor
fdivrs
lods
test
shlb
inc
xchg
mov
rep
test
xor
rcrb
mov
add
jmp
inc
pusha
push
and
mov
xlat
rcr
push
pop
mov
pusha
idivb
or
inc
sub
mov
adc
sub
push
sbb
mov
fs
jne
sbb
lock
mov
fisttps
add
fld
xchg
lea
out
arpl
loop
and
fwait
sub
jmp
cltd
jno
xchg
outsl
sbb
dec
ja
scas
mov
pop
rolb
cmpsl
dec
inc
add
movsl
pop
add
test
std
jnp
cmp
xor
xorb
jbe
sbb
cmpsl
out
or
mov
xor
push
mov
cltd
enter
pop
xchg
inc
or
loop
add
shll
add
mov
clc
inc
movsl
fwait
xor
sbbb
loope
inc
xor
cld
push
adc
adc
push
jae
mov
and
mov
pop
lcall
xchg
pop
and
sbbl
clc
xchg
das
lret
and
inc
lods
inc
out
add
dec
popa
in
push
push
and
inc
mov
push
inc
movsb
jo
push
sbb
mov
mov
mov
jg
add
and
mov
xor
sbb
xchg
aaa
dec
in
mov
push
and
insl
lahf
lret
and
cmp
stos
cmp
stc
loope
sub
scas
jp
fstl
imul
sub
add
and
and
test
add
jge
outsl
and
cld
xchg
add
fisttps
fwait
aaa
testb
add
pop
dec
inc
sti
movsl
add
sub
fcomps
and
call
mov
out
mov
test
cwtl
or
add
int3
push
dec
clc
push
lret
pop
or
orb
add
add
push
jmp
scas
push
xor
test
add
adcb
inc
fisttps
push
push
mov
js
hlt
push
jb
jg
sub
sbb
addl
or
xchg
leave
gs
fmuls
pop
mov
cmp
addb
lods
subl
enter
jae
push
and
dec
add
cmp
xor
mov
or
and
fwait
cltd
data16
aas
addb
push
ja
sbb
cltd
adc
js
add
aad
enter
push
test
fsub
adc
movsl
cmp
push
orl
sub
adc
mov
ret
pop
ljmp
imul
dec
mov
add
je
add
xchg
jae
add
mov
call
std
add
sbb
addb
loopne
or
call
jo
jge
or
add
xchg
iret
xchg
jae
jle
jp
aad
dec
xchg
dec
pop
sub
mov
insl
sbb
and
xor
mov
stc
lret
jge
mov
mov
dec
addb
mov
push
jne
shrb
inc
push
xor
jmp
loopne
xchg
xchg
outsb
adcb
pop
test
clc
loop
xor
cmp
loopne
xor
inc
jp
stc
add
dec
call
popa
mov
inc
add
int
mov
mov
sbb
pop
adc
iret
outsb
and
cmp
je
sahf
push
cltd
mov
lock
fwait
lods
roll
adc
adc
inc
outsl
fisttpl
inc
pop
cmp
mov
sti
gs
fisttpll
mov
sbb
mov
sbb
loopne
and
pop
dec
dec
sarb
and
add
leave
jns
ljmp
pop
dec
ja
push
push
cld
orb
and
xor
int
jp
sub
xchg
negb
rorb
adc
jle
push
add
sbb
push
jg
shll
jne
or
push
ffree
cltd
jp
fldcw
mov
aad
cmp
cli
add
inc
popl
jge
imull
ret
dec
sar
mov
cli
sub
jle
cmp
hlt
in
add
sbb
add
stos
enter
je
add
adc
hlt
lock
push
and
xchg
shr
lret
clc
test
jns
out
mov
add
add
or
sub
lcall
pop
push
ja
xor
fstl
daa
add
ficoms
mov
loopne
dec
cmp
jl
sbb
aad
daa
lds
fisubrs
inc
pop
bound
lahf
add
mov
mov
cli
dec
add
jg
int
cwtl
orb
add
outsl
sti
jno
test
and
enter
xor
mov
dec
push
add
jne
mov
psrad
cmc
sub
dec
jg
sbb
movd
push
xchg
es
pop
or
in
out
dec
inc
pusha
sahf
adc
or
imulb
lret
subb
arpl
sub
pop
mov
pop
shll
insl
ljmp
push
push
loopne
inc
push
lret
add
xlat
repz
inc
dec
cmpsl
xor
or
icebp
movb
fisubrs
sbb
loope
jp
aad
loop
mov
in
mov
aaa
inc
add
ljmp
addl
enter
adc
sbb
shl
pop
push
pop
sub
add
adc
push
push
xor
inc
loopne
sahf
dec
cmp
xchg
cltd
fwait
inc
xchg
mov
mov
push
cmp
out
and
pop
addb
adc
push
dec
xchg
or
xor
push
adc
mov
add
or
push
add
jl
lock
xchg
xor
xchg
jns
daa
js
shld
ljmp
aaa
aas
dec
jle
pop
or
out
movsb
test
inc
leave
enter
add
mov
bound
adc
mov
xor
nop
mov
addr16
in
dec
and
iret
mov
push
pop
and
push
pop
daa
fadd
andl
xchg
sub
sub
stc
pushf
ljmp
into
dec
add
push
inc
fcoms
iret
ret
cmp
pop
aam
dec
lods
shr
push
mov
sbb
jle
add
cmp
std
leave
cltd
arpl
adc
jae
xor
pusha
pusha
add
and
add
inc
mov
js
cmp
add
call
pop
or
add
test
sub
push
test
rol
adc
push
jbe
push
or
test
cmp
inc
fcmovne
ljmp
inc
push
movsb
jmp
add
popa
xchg
push
or
mov
addb
push
or
mov
dec
dec
fmuls
sub
mov
movsl
fucom
pop
jle
sub
add
push
ss
and
icebp
daa
je
add
mov
cltd
insl
dec
dec
sub
push
scas
sub
mov
add
adc
mov
or
inc
push
mov
cmp
lret
add
sub
fdivr
inc
or
inc
int3
fcomp
addb
imul
in
cmp
ja
lret
inc
and
and
add
test
fld
inc
subb
jo
inc
aad
pop
adc
jno
pop
mov
xchg
push
push
aas
inc
pushf
movsl
outsb
lahf
mov
decb
push
push
inc
inc
aam
std
in
xrstor
cmp
cmp
mov
inc
outsl
xor
and
lods
push
mov
or
pusha
inc
lock
adc
sub
jb
push
mov
faddl
sbb
bound
adc
test
repnz
dec
pop
inc
push
sbb
add
pop
fisttpll
lcall
push
leave
jo
add
adc
pop
dec
fdiv
add
mov
call
adc
enter
push
sarl
in
idivb
nop
mov
jge
push
popa
out
pop
jne
sbb
mov
push
loopne
sub
sub
lret
sbb
mov
outsl
pop
out
nop
call
loopne
aam
pop
jae
loope
repnz
jbe
int3
scas
dec
cmp
aaa
loopne
jb
out
pushf
rol
push
lods
js
mov
test
fldcw
dec
xor
add
dec
imull
test
push
inc
mov
into
pop
add
push
cmpsb
icebp
push
int3
loope
stc
sub
xor
loopne
cltd
je
leave
push
aaa
out
add
es
movsb
rorl
pop
or
out
test
clc
push
les
push
les
sahf
jbe
mov
add
mov
test
out
rolb
pusha
push
test
mov
inc
push
inc
nop
inc
ljmp
and
test
rclb
jo
jo
mov
add
popa
and
sub
mov
inc
or
mov
imul
sbb
jp
popa
xchg
ret
pop
xlat
lods
iret
rolb
jbe
aaa
cli
int
sub
pop
insb
subb
xchg
enter
call
nop
jo
inc
lret
pop
pusha
insb
jns
and
dec
sti
sbb
pop
jns
mov
sbb
sbb
iret
verr
dec
notb
dec
pusha
cld
sbb
nop
fs
add
orl
xchg
in
dec
or
xchg
jno
sarl
repnz
dec
hlt
out
pop
add
push
aad
adcb
fnsave
add
mov
inc
pop
mov
add
je
icebp
js
dec
out
push
rolb
and
push
rcrb
pop
sub
in
orb
or
imul
arpl
test
dec
inc
sbb
in
mov
jns
nop
int3
pop
pop
and
fidivs
negb
xchg
add
dec
stos
push
xchg
pop
out
pushl
and
in
adcb
push
mov
adc
push
movsb
inc
jmp
insb
pop
mov
outsb
dec
repnz
pop
push
adc
jno
hlt
add
ret
cwtl
lret
push
pop
cmp
pusha
pushl
out
add
insb
repnz
add
mov
enter
fstpl
add
test
adc
xor
daa
jo
push
and
out
inc
lock
jl
sbb
jbe
shlb
icebp
xchg
cmp
cmp
dec
bound
loop
inc
cmc
pop
inc
jl
add
push
test
stc
jle
cmp
xchg
sbb
jmp
scas
das
jno
cmp
mov
jle
cwtl
mov
adc
add
xchg
lock
pop
mov
pusha
cmpsl
test
ss
pop
orl
cwtl
and
stc
bound
dec
or
add
loopne
out
add
cmp
fsub
mull
int3
das
or
xor
push
pop
xor
or
adc
addr16
loopne
xchg
add
xor
push
dec
pusha
sub
fidivs
daa
pushf
shlb
mov
lock
enter
outsb
sahf
adc
movsb
mov
inc
out
inc
dec
dec
rclb
stc
jecxz
adc
insl
push
test
jo
pusha
ret
xor
dec
icebp
es
pushf
into
inc
fiaddl
pop
cli
imul
rolb
jbe,pt
rolb
add
cmp
mov
lahf
iret
hlt
dec
xor
repnz
add
aam
inc
mov
inc
mov
insb
push
add
jl
repz
shll
mov
in
sub
add
sub
push
add
mov
ja
pushf
sbb
daa
out
dec
add
push
adc
or
addl
push
fidivrl
std
lods
xorb
aas
fsubl
jns
scas
mov
dec
or
jo
rorl
rcll
pop
sbb
add
sbb
mov
add
dec
xchg
iret
loopne
adc
mov
out
xor
cld
add
jg
sub
lds
leave
jns
sbb
inc
add
sarb
lods
and
std
inc
imulb
xlat
sarl
push
aad
add
add
add
push
arpl
sbb
pop
and
xor
mov
xchg
iret
addb
dec
xor
ret
and
sti
cmp
rcr
xchg
mov
add
fdiv
cmpb
lds
jle
loope
inc
pop
pop
fadds
sbb
ds
xchg
cmp
cs
xchg
adc
add
adc
cmp
add
push
pop
rcrb
jp
in
and
pop
add
xchg
dec
loop
test
sbb
sbb
cmp
iret
sub
lods
and
in
enter
jne
sub
and
scas
mov
cld
movsb
pop
mov
pop
inc
insb
cs
sub
cmp
cmp
xchg
push
pop
push
ds
jle
lahf
mov
lret
xor
ljmp
mov
and
imul
cmpsl
movntps
jecxz
dec
xchg
test
test
test
or
out
in
push
add
jp
lds
add
pop
sub
inc
jle
inc
and
lahf
enter
or
jb
call
orb
adc
sarb
mov
add
inc
ljmp
add
out
fbld
maxps
shrb
imul
adc
mov
popa
push
jl
xor
jae
and
add
jecxz
clc
cwtl
sub
dec
fadds
addl
cli
fnstcw
incl
push
sbb
pusha
je
inc
ds
xchg
dec
push
mov
sbb
stos
out
pop
xchg
rolb
lods
fsubp
inc
repz
xchg
xorb
pop
add
adc
fisttpll
jmp
rolb
sub
jmp
xlat
inc
add
and
push
xchg
jo
push
xchg
hlt
dec
inc
rolb
cmp
aas
test
int
or
mov
adc
adc
es
jecxz
stc
fwait
cs
adc
test
movsl
inc
out
orb
aam
push
and
leave
xor
icebp
adc
insb
pop
clc
lods
bound
clc
mov
ljmp
loopne
and
js
mov
inc
add
filds
stc
jb
test
dec
push
pop
cmp
add
mov
into
xor
pop
sub
das
add
jmp
adc
sbb
iret
xchg
test
rorb
mov
sbb
test
push
add
mov
js
xor
push
lods
and
sub
pop
xor
sbb
lret
and
test
dec
das
dec
inc
nop
hlt
call
cmc
enter
aam
loop
push
add
inc
and
push
inc
mov
out
adc
xchg
cmp
dec
fs
nop
ljmp
dec
cmpsb
setbe
push
pop
into
in
push
iret
outsb
add
dec
std
inc
ljmp
in
and
and
jl
iret
inc
adc
add
xadd
mov
in
jecxz
mov
cli
sub
pop
in
push
push
clc
dec
fisubs
adc
cmpsl
push
pusha
pop
and
or
ljmp
bound
and
inc
push
cmpsb
lods
add
and
xchg
dec
jp
add
xchg
add
shll
dec
add
out
jge
xchg
or
adc
push
faddl
in
push
mov
add
in
loop
add
sbb
pop
incl
jb
gs
add
incb
inc
inc
and
inc
imul
jnp
cltd
xor
xlat
fs
mov
add
daa
mov
mov
stc
imul
insl
mov
aaa
enter
in
and
add
lock
mov
jl
xchg
adc
fidivrs
lahf
movsb
add
and
rolb
sti
mov
gs
aam
nop
xchg
dec
fstpl
jnp
push
xor
inc
push
push
movsl
cmc
leave
sbb
xor
jp
sarb
jmp
pcmpeqd
xchg
aam
andb
push
or
ljmp
push
test
in
or
pusha
pop
push
mov
sub
add
sub
into
add
dec
pop
out
dec
stos
or
mov
lods
aam
out
sahf
daa
mov
jg
in
add
test
fwait
std
push
dec
dec
nop
mov
add
dec
cmp
xchg
orb
inc
mov
mov
jns
mov
xor
mov
adc
jg
xchg
shrb
xchg
xor
into
adc
aaa
dec
and
dec
mov
adc
enter
addb
add
bnd
sti
lret
inc
popf
or
jecxz
cld
add
scas
call
dec
out
ss
pop
popf
add
fbld
mov
add
jo
xchg
xchg
add
test
cli
or
daa
lahf
cmp
out
divl
push
dec
mov
cli
push
jne
and
mov
add
and
test
dec
das
sub
dec
or
in
orl
and
inc
cwtl
sub
loopne
inc
loope
lahf
add
sbb
mov
and
out
in
arpl
add
sbb
dec
inc
lds
or
push
xor
add
inc
lds
jnp
add
adc
nop
inc
cmp
in
insb
pop
xchg
ret
mov
fbld
inc
hlt
divl
insb
add
pusha
pop
mov
cmpb
enter
adc
mov
adc
xor
adc
cmp
dec
sahf
and
lds
or
dec
popa
sbb
in
mov
add
add
jg
lret
sbb
rcll
and
in
inc
adc
lds
shll
add
mov
roll
jo
call
rcrb
test
add
adc
add
mov
lds
push
add
pop
pusha
push
andb
add
pop
fs
add
js
mov
or
mov
test
mov
fs
inc
xor
push
adc
stc
nop
jp
add
or
jno
mov
mov
cmpb
lock
shll
dec
jle
test
mov
or
inc
loop
xchg
cwtl
pop
dec
jmp
sub
cld
aas
lods
push
cmpsl
je
pusha
js
stos
xchg
xchg
push
adc
stos
out
dec
fsubl
mov
mov
adc
add
ret
cmp
dec
lidtl
cld
pop
jecxz
pushf
test
test
dec
subl
or
and
ja
and
shlb
xchg
insb
jo
clc
cmc
test
jbe
in
xor
loopne
sbb
jo
fwait
add
mov
lret
out
xor
xor
sub
es
pop
loopne
or
and
pop
mov
xor
cmp
std
and
inc
cmp
call
or
dec
fcompp
sbb
cli
sub
jl
mov
xor
aad
cmp
cmc
and
xor
repz
mov
and
fmuls
push
nop
add
fidivrs
push
push
pop
sbb
je
cmp
js
add
push
js
add
and
shrb
sbb
mov
icebp
leave
fisubrs
jns
add
out
call
sub
fwait
dec
cmp
arpl
cli
and
add
dec
mov
xchg
jae
sbb
add
in
add
icebp
in
mov
dec
outsb
movsb
lcall
outsb
addr16
cld
push
xor
add
ss
shrl
add
adc
add
nop
out
aam
das
sub
mov
mov
pop
and
lods
mull
inc
inc
and
in
cli
mov
out
and
mov
mov
sbb
lock
loope
test
into
add
jl
addl
push
fs
mov
pusha
add
inc
push
xor
mov
clc
fimull
cwtl
add
mov
cli
es
mov
cmp
iret
addr16
mov
adc
add
call
jb
cmp
pusha
cmpsb
pop
add
dec
push
mov
adc
rolb
xchg
adc
add
std
imull
add
int
adc
outsl
add
xchg
xchg
xor
nop
and
add
sbb
or
adc
mov
pop
pop
lods
sbb
push
sub
insl
adc
jae
add
mov
sub
fldl
sbb
inc
out
jns
add
lcall
and
or
dec
ljmp
jecxz
mov
adc
xor
add
mov
xchg
int
mov
mov
sbb
jnp
mov
add
pop
mov
jge
mov
cmpsb
je
lret
loope
jp
cmpsl
mov
lcall
ja
mov
mov
ds
add
mov
dec
add
push
hlt
add
jmp
stc
pop
mov
popf
mov
roll
xchg
inc
adcb
mov
inc
mov
adc
cmpsl
pop
add
pop
sub
sbbl
mov
or
aam
lahf
dec
adc
test
imul
xor
add
mov
pop
aam
lahf
add
mov
inc
add
add
mov
xchg
add
in
inc
out
xchg
push
add
mov
xorl
mov
jl
test
into
xchg
lcall
jmp
add
add
aaa
orl
movl
push
adc
repz
lret
test
push
inc
mov
add
shrl
xchg
jb
lahf
test
sub
add
jl
fsub
sti
adc
rolb
pop
cli
add
jge
lock
iret
shlb
add
lret
stos
imul
sbb
pusha
aaa
dec
xor
fists
add
inc
mov
xchg
mov
jecxz
call
ds
das
mov
incb
fildl
dec
addps
push
loopne
faddl
mov
push
pop
pop
dec
add
lods
or
push
jb
add
jo
lret
cmp
sub
icebp
lret
xchg
or
sbb
xor
mov
or
fs
adcb
sbb
movl
loopne
jmp
pop
rolb
adc
mov
push
mov
pop
nop
push
lret
out
sbb
sahf
pop
or
arpl
aam
add
sub
add
in
add
add
sub
testb
adc
arpl
and
inc
insb
lods
in
in
sub
lods
mov
jmp
add
push
mov
dec
orb
add
mov
cmp
insl
xchg
fwait
sarb
lcall
repz
xchg
add
inc
dec
pop
movsl
push
add
enter
mov
pop
sbb
cmp
popa
rolb
nop
jbe
test
cmp
push
push
sub
xor
and
in
push
mov
scas
jne
add
jo
and
or
pop
lahf
inc
and
mov
arpl
sbb
add
mov
xchg
incb
out
add
bound
faddl
mov
xor
jo
sbbb
fdivr
subb
and
push
jns
xor
dec
enter
pop
cmp
rorb
lcall
es
add
add
leave
add
aad
insb
and
in
cmpsl
add
lock
pop
push
pushf
push
mov
cmp
and
icebp
add
cmp
cmp
stos
call
dec
add
loopne
add
call
movsb
adcb
filds
xchg
inc
sub
fs
push
add
xlat
cmpsb
jg
int3
in
add
sbb
nop
jno
add
movsl
jmp
inc
into
in
or
lock
imul
mov
cli
lahf
out
pop
pop
add
mov
add
mov
adc
sbbb
xchg
sub
test
and
push
iret
mov
ret
int3
nop
mov
xorl
inc
mov
testb
sub
aad
inc
mov
jne
sub
push
clc
orb
pop
push
test
subl
es
cmc
add
or
mov
xchg
sub
sahf
sarl
outsb
fbld
ss
xchg
dec
add
or
cmp
pop
mov
das
mov
mov
add
mov
pop
or
xchg
pushf
adc
mov
dec
pop
pop
sub
cmovb
jl
ret
fsubrl
arpl
mov
cld
add
and
inc
pop
fwait
mov
jnp
and
jo
pop
cmpb
sub
enter
jecxz
std
jmp
iret
jp
popf
pusha
in
out
ss
fdivrs
cmp
push
lea
xor
jne
cmc
and
adc
sarb
test
xchg
sbb
or
pop
pusha
shll
jne
mov
sub
hlt
jb
add
cs
call
lcall
dec
sbb
push
je
inc
mov
pop
add
addb
pusha
bound
js
jae
add
sub
pop
push
mov
dec
xor
loope
in
mov
add
xchg
arpl
ret
xchg
out
xor
add
icebp
inc
addr16
ljmp
pop
add
add
iret
jnp
loop
and
fstps
mov
or
pop
xchg
mov
xor
and
pop
or
or
and
inc
pop
xor
add
in
test
jno
ja
add
ret
xorb
pushf
ljmp
adcl
call
mov
ja
cmpsb
aaa
aam
sub
mov
dec
mov
stos
rcrl
leave
dec
inc
test
jmp
bound
inc
clc
mov
sbb
outsb
mov
dec
add
negb
stc
insl
js
pop
sarl
lahf
rorb
movsl
loop
mov
dec
enter
std
repnz
xchg
add
lods
mov
js
test
jne
lods
xor
bound
sub
xor
add
sub
and
jbe
cld
mov
repnz
jmp
enter
pop
sti
imul
sbb
popa
push
push
scas
imul
add
pop
inc
inc
stos
je
or
mov
test
aaa
pop
mov
cs
xor
add
add
int3
dec
push
pop
sub
loop
lock
inc
mov
bswap
jle
test
scas
jo
or
dec
push
or
cmp
roll
stc
xchg
pop
cmp
cmpsb
sbb
mov
xchg
rolb
sub
sahf
dec
mov
in
test
or
repnz
xchg
add
icebp
fs
lret
inc
mov
clc
pop
movsb
add
jmp
aaa
pusha
jnp
iret
fldenv
add
add
insb
xor
xor
xor
or
iret
sbb
and
mov
push
shrb
nop
addr16
sbbl
pop
arpl
inc
int3
sbb
mov
test
hlt
add
mov
dec
hlt
xchg
test
sahf
jns
push
cli
or
pop
or
sub
mov
stc
add
in
inc
push
loop
je
inc
sub
pop
and
mov
int
jo
add
aam
or
pop
sbb
inc
aad
loopne
loop
int3
ret
add
and
pop
rol
dec
inc
ffreep
inc
jp
jnp
xchg
or
jl
pop
jb
pop
cmp
scas
mov
addr16
dec
aaa
ret
cltd
dec
call
pop
test
dec
mov
fisttpll
mov
mov
les
add
test
enter
mov
orb
cmp
test
aas
arpl
mov
mov
mov
movsb
cmp
xor
loope
scas
or
dec
push
nop
add
pop
sub
xchg
aam
int
jnp
dec
sbb
dec
movsl
xor
add
mov
lcall
adc
push
xor
daa
stos
pop
xor
pop
fistps
sbb
insl
or
sti
xchg
push
cmpb
xor
je
into
sub
inc
stos
jecxz
xor
shr
data16
add
testl
xchg
cmp
add
or
push
cmc
dec
pop
pop
mov
mov
jp
packsswb
hlt
subb
lret
sbb
addb
add
sbb
iret
mov
cltd
add
lods
mov
xchg
xchg
test
sahf
loop
rcr
imul
xchg
sub
or
dec
rcrl
push
mov
insl
testb
cmp
sub
jle
xchg
movsl
dec
rcrl
mov
test
sbb
sbbb
dec
inc
jo
addr16
lods
imull
push
inc
out
leave
iret
adc
pop
inc
and
pusha
insb
mov
jecxz
clc
adc
pushf
pushf
aaa
jo
in
loopne
testl
cs
jns
mov
iret
xor
mov
pop
notb
out
add
pop
xor
in
bound
sub
insb
add
vmovaps
adc
add
ds
adc
pop
popf
dec
push
mov
add
rcrl
or
popw
out
pop
push
or
inc
push
add
or
jno
pop
cmc
lock
loope
rolb
inc
es
and
add
mov
pop
call
sub
insl
or
movsb
cwtl
sub
add
or
mov
and
sbb
inc
mov
dec
add
cmp
add
pop
movsl
iret
push
test
add
and
imul
jl
and
gs
dec
add
repz
mov
stos
add
push
subb
mov
inc
fs
adc
and
dec
pushf
add
inc
rcll
push
push
ja
add
aam
aad
lcall
ret
rol
fwait
sub
in
les
punpckhdq
hlt
adcb
dec
add
jle
inc
pop
fsubrl
mov
add
add
pop
push
stc
dec
lea
xadd
dec
inc
or
jns
sbb
pop
mov
or
cli
pusha
sbb
add
mov
dec
bound
add
inc
mov
or
enter
add
test
mov
fwait
add
pop
cmp
add
xchg
out
mov
push
into
add
lds
mov
xor
int3
mov
pop
lret
sbb
or
hlt
push
add
push
jnp
enter
ja
add
mov
xor
add
add
xchg
movsl
dec
shll
sub
outsl
stos
sbb
jbe
testb
pop
xchg
lods
add
push
cmc
daa
subl
lods
dec
dec
jge
cmp
sahf
push
lret
stos
loopne
cmc
mov
push
push
sbb
rdtsc
push
ret
add
loopne
out
idiv
addb
addr16
imul
cmp
mov
add
inc
out
xchg
jne
inc
repnz
add
pop
lods
push
cli
clc
ret
mov
mov
shrl
sbb
adc
inc
add
cmpsb
jge
and
or
movsb
mov
js
add
lods
push
subl
adc
leave
xchg
push
call
mov
add
fs
test
call
notl
cmpsb
ja
pop
insb
adcb
movb
push
xor
call
fwait
sbb
dec
dec
jle,pt
inc
add
sbb
add
popa
test
push
mov
or
pop
mov
mov
scas
and
or
pushf
push
bound
insb
into
xchg
sub
xchg
fsubr
flds
and
cmpsb
sti
aad
lds
shl
popl
out
subl
sti
add
aad
add
sbb
lcall
ret
inc
inc
jmp
jo
imulb
aaa
int3
loopne
add
pusha
in
cli
out
add
and
add
inc
add
imul
jo
decb
mov
sub
movsl
andb
add
jae
sub
fistpll
pushaw
ret
mov
sbb
add
mov
dec
add
addr16
cld
movb
jb
pop
in
xor
sub
enter
inc
jno
push
jo
lods
aad
sarb
gs
xchg
orb
add
jg
pop
lea
dec
addb
inc
add
adc
out
add
mov
out
cs
mov
adc
dec
or
xor
push
das
incb
loopne
enter
loope
js
mov
neg
add
xor
lds
push
test
out
xchg
xchg
pusha
cmp
push
dec
dec
nop
dec
sub
subl
push
aad
inc
add
out
insb
gs
jns
add
iret
fldl
pop
mov
jge
sbb
cli
clc
loopne
add
push
sub
push
test
add
mov
mov
add
push
pop
dec
dec
mov
dec
ds
push
addr16
xchg
cmp
iret
sbb
mov
add
loope
les
gs
sbb
mov
push
or
push
leave
roll
into
hlt
xchg
mov
lods
add
out
int
pop
das
mov
test
mov
mov
or
sub
pop
mov
pop
jbe
cmp
sahf
mov
insb
add
mov
xor
or
in
rolb
insb
es
jns
insl
outsl
cwtl
pop
cmp
add
mov
ret
ss
sbb
push
orb
push
dec
cld
outsl
add
in
jl
aas
out
rep
andb
mov
movsb
cmc
nop
add
xor
mov
xor
jae
mov
repz
cmp
jnp
push
push
or
cmp
add
inc
mov
dec
cmp
adc
ljmp
or
mov
aam
out
add
inc
cmp
cld
jle
dec
mov
aas
cmp
pop
into
xchg
add
or
add
stc
xor
push
xchg
lods
imul
pop
push
cmp
add
dec
mov
adc
mov
cmc
push
add
cmp
scas
test
pusha
inc
stos
xchg
addr16
xor
xchg
xchg
xor
pop
sbb
shlb
xchg
add
in
jne
mov
ret
push
add
mov
shll
mov
lcall
mov
iret
add
mov
sbb
xchg
out
push
dec
add
or
mov
dec
pop
cmp
dec
add
mov
sbb
out
xchg
into
faddl
xchg
or
imul
add
jmp
hlt
dec
sub
repz
daa
lahf
mov
add
pop
clc
xor
add
orb
xchg
sarb
adc
push
ljmp
addb
add
dec
mov
add
popa
jmp
js
insb
inc
push
mov
add
pop
cli
orb
loopne
movl
and
jnp
add
push
cwtl
pusha
es
pop
push
xor
and
push
ret
sub
push
mov
jbe
mov
int3
mov
adc
test
adc
out
pushf
pop
pushf
int
ret
and
andb
fcomps
or
mov
jnp
pop
add
cmp
and
popa
sub
int3
sub
das
push
and
xchg
imul
fstps
popa
mov
mov
outsb
push
call
lea
xchg
mov
les
dec
js
insb
lds
inc
mov
hlt
add
jg
cmpsb
setle
loope
add
lock
repnz
add
outsl
scas
xchg
in
mov
fdivr
jb
mov
sub
push
xor
cmpsb
sub
add
push
stos
mov
insb
xchg
fcmove
and
add
mov
insl
push
sbbl
enter
jae
add
jge
ret
add
movsl
clc
xchg
repnz
std
add
test
and
loope
add
and
stc
xor
pushf
add
icebp
adc
jno
shlb
push
or
adc
pop
rolb
rorb
push
mov
and
sbb
sbb
stc
sub
add
stos
jmp
pop
orb
pop
add
xor
pusha
pop
fmuls
adcb
mov
add
mov
popl
mov
andl
mov
cltd
push
push
push
pop
xchg
inc
mov
pop
pusha
sbb
ret
sub
xchg
or
scas
jge
sub
add
dec
or
add
xorl
jl
push
mov
out
xchg
ds
xchg
cmp
aam
bound
inc
mov
xchg
les
or
mov
xchg
add
xor
dec
pop
jp
and
push
aaa
push
jne
loope
xorb
or
sub
jg
pop
xor
movsl
lods
pushf
cld
je
ret
out
push
popf
aaa
imul
sub
leave
out
js
add
mov
fs
xchg
rcrb
add
xchg
add
mov
inc
jno
daa
sub
inc
push
ss
scas
imul
adc
mov
in
jge
loop
add
scas
dec
sbb
add
test
mov
call
fimull
push
add
fldenv
push
or
cmpsb
je
js
and
xlat
pushf
inc
lock
inc
push
sbb
ret
xlat
jb
test
or
adcb
stc
shl
repnz
add
dec
lock
cmp
xor
xor
or
aas
jle
or
jle
push
cmp
mov
add
popf
sbb
rcll
jl
jmp
lcall
push
rorl
adc
add
sub
cmp
dec
hlt
sbb
mov
xor
subl
xchg
and
movb
jl
add
movl
je
cmp
dec
sub
add
arpl
clc
push
or
dec
fisttpll
cltd
and
push
pop
add
cld
dec
push
add
xchg
xor
lret
xor
push
mov
adc
add
mov
dec
dec
cmp
out
mov
xchg
add
lea
dec
mov
test
cmp
jb
push
lcall
jo
jp
icebp
gs
or
add
sub
cwtl
sbb
outsl
pop
dec
stc
push
mov
pop
add
fdiv
mov
cmp
lods
dec
clc
std
and
inc
sbbl
rclb
mov
mov
sub
jl
pop
insl
xor
repnz
ds
in
shlb
xor
add
jb
ret
lock
filds
cmpsl
xor
and
mov
xchg
ret
cltd
add
mov
or
add
mov
or
idivl
add
aas
lods
out
ret
xchg
aad
push
mov
mov
rolb
stos
subb
xorb
out
int3
cmc
aad
daa
add
mov
dec
pop
das
adc
stc
cmp
in
jo
add
and
pop
pop
mov
add
lcall
pop
cmc
gs
imul
cmp
sub
jae
jne
subl
mov
inc
adc
test
push
mov
inc
mov
stc
inc
xchg
mov
loopne
lock
dec
or
neg
xchg
lret
mov
es
xlat
dec
sub
loope
push
fnstsw
sub
mov
sub
clc
inc
int3
xchg
pop
sbb
add
lcall
sub
notb
mov
sbb
in
dec
xor
jns
test
mov
pop
out
loopne
sub
add
jnp
int3
mov
cld
jno
iret
das
add
mov
mov
xchg
cwtl
fildl
cmp
push
pop
lock
mov
aad
shlb
jg
jl
cmp
lahf
add
mov
test
xor
push
testb
push
inc
cmp
add
out
nop
test
xor
add
jne
in
add
imul
cmp
mov
adc
sbb
and
call
pop
out
adc
leave
je
dec
pushf
pushf
xor
dec
cltd
sbb
testb
jns
pop
and
mov
sub
dec
jge
sbb
clc
xchg
cmp
adc
pop
pcmpgtw
xchg
lret
fnstenv
xor
cld
mov
jbe
mov
xor
out
stos
and
stos
comiss
and
loop
pop
add
inc
mov
cmp
ret
out
mov
out
push
notrack
push
das
pop
shlb
pushf
lods
push
cmpsl
adcb
add
and
adc
pop
pop
dec
dec
add
out
mov
negl
jne,pt
add
imul
and
cltd
or
cmp
add
enter
xor
in
mov
xor
sahf
fildl
pop
scas
int
lods
insl
add
lods
clc
xchg
aas
cmc
insb
pop
push
and
cmpsb
shlb
lahf
test
aas
mov
in
jg
or
xor
sbb
dec
xchg
push
mov
sbb
sarb
in
push
or
and
dec
shrl
aaa
shlb
pop
mov
adc
sub
add
pop
add
hlt
repnz
leave
scas
push
xchg
add
pop
or
add
testl
push
mov
repnz
into
adc
scas
add
es
and
add
xchg
xchg
roll
and
sub
imul
mov
push
fcomps
xchg
cmp
pop
cld
add
xchg
ret
faddl
stos
jbe
bound
inc
clc
ljmp
dec
inc
fwait
cmpsl
nop
add
adc
aaa
xchg
js
adc
jo
in
fsubrs
or
nop
and
rorl
add
test
add
mov
enter
add
ret
pusha
xchg
adc
clc
rcrb
push
lcall
xor
and
xor
into
sub
mov
xchg
jb
xchg
fldenv
lock
push
pop
or
cli
sbb
xchg
mov
lea
inc
add
movsl
push
sbb
leave
prefetch
push
inc
xorl
dec
loopne
sbb
xor
adc
add
mov
jp
inc
insb
or
sahf
add
loop
dec
jg
mov
sub
es
test
pusha
dec
add
xlat
outsl
pushf
add
pop
out
xchg
sbb
ds
sub
lret
int3
testl
subb
push
and
xor
mov
pop
push
add
out
jp
subb
mov
cmp
fidivrl
aad
mov
push
add
setno
mov
cmp
mov
mov
insb
rorl
mov
push
mov
imul
setae
cmp
add
sahf
test
sub
and
cmp
aaa
dec
add
sbb
ljmp
inc
cwtl
adc
jb
cmp
and
pop
ret
movl
out
add
push
pop
inc
add
or
lea
mov
sub
add
cmp
ja
mov
sub
xor
mov
std
inc
pop
or
jb
cmpsb
out
jo
dec
adc
fidivs
push
push
or
add
mov
rclb
ja
adc
add
pop
cli
jne
xchg
push
mov
addl
mov
nop
pop
add
inc
pop
sub
sub
mov
sti
sbb
pop
andb
notl
daa
add
sarl
call
testl
cmc
dec
lea
pop
sbb
pop
lret
sub
faddl
mov
loopne
fsubp
lock
lret
push
testl
jge
sbb
jnp
aas
lods
icebp
andb
loop
nop
cmc
or
sub
mov
pop
fdivs
out
icebp
rolb
cltd
inc
jae
mov
push
push
push
mov
pop
jle
cltd
les
jno
xchg
stos
sti
addb
mov
xchg
add
imul
add
jmp
leave
mov
add
jns
add
nop
pop
push
cmpb
jl
pop
cmpb
add
shl
push
iret
inc
mov
leave
pop
inc
fcoml
scas
and
cmpb
inc
add
pop
ret
pop
jbe
arpl
lock
xor
fiadds
xlat
adc
mov
ret
rclb
xorb
adcb
in
push
cli
out
or
mov
fsubl
sub
int3
jcxz
jno
sbb
and
imul
inc
out
cmc
sti
mov
movsb
stc
adc
int3
fisttpll
int3
or
lods
sbbb
inc
or
stc
mov
mov
xchg
std
sub
mov
loopne
mov
mov
add
dec
pushl
push
int3
or
and
pushf
push
nop
rorl
sub
jmp
mov
rorb
and
nop
jp
adc
test
hlt
push
fwait
add
mov
pop
pop
adc
jnp
in
inc
pop
add
addr16
fnstcw
clc
dec
mov
and
mov
js
insb
sub
inc
xchg
add
cmp
mov
dec
jmp
test
mov
std
pop
or
mov
movsb
rol
xor
inc
and
push
loope
jae
call
movlhps
push
sub
shlb
in
mov
cmp
jbe
mov
xor
test
shll
filds
addl
mov
loopne
lcall
orl
xchg
xor
or
xbegin
aaa
scas
inc
loopne
add
push
popf
filds
testl
or
add
mov
push
adcb
mov
add
pusha
jno
cmp
arpl
loope
xchg
test
fadd
sbb
add
aaa
ret
xchg
fwait
lock
xchg
dec
add
sub
jns
mov
popa
add
cmp
fildll
shrl
shlb
cmp
in
fisttps
inc
ljmp
movsb
adc
jbe
sti
mov
fmul
xor
inc
shl
push
mov
bound
shr
stc
shlb
pusha
outsl
push
xor
nop
scas
push
cltd
xor
dec
push
or
movl
mov
and
xor
out
or
and
and
arpl
xchg
xor
enter
pop
outsl
ds
repz
out
arpl
push
stos
sahf
loop
and
or
test
lahf
rolb
sub
pop
sbb
ror
add
lock
sahf
cld
push
out
ljmp
jp
add
mov
mov
lods
add
iret
lret
inc
xchg
sub
xchg
loop
ds
push
add
movsb
add
lds
inc
repnz
cmp
inc
pop
add
mov
sbb
and
push
add
inc
or
cmp
ret
and
dec
adc
jne
popf
ficoml
pop
adc
outsl
out
sbb
sub
dec
or
shl
test
test
push
cmp
sbb
test
adc
and
jmp
cwtl
xchg
push
xchg
xchg
adc
int3
cmc
pop
add
mov
push
lret
lds
add
pop
jno
add
popw
imul
sti
mov
add
add
adc
mov
ds
dec
cld
rolb
aam
rcrl
mov
out
jl
push
stos
xlat
das
add
sbb
push
jmp
mov
arpl
mov
add
test
repnz
sbb
add
dec
sub
push
outsb
hlt
lea
add
call
add
lock
pop
jo
addb
push
gs
inc
dec
flds
and
cmp
add
mov
cwtl
or
and
lods
pop
out
pop
add
roll
and
add
sub
inc
push
popf
mov
pop
push
hlt
aad
mov
aas
and
dec
xchg
std
imul
add
popf
add
xor
jle
sti
jno
mov
adc
out
cmp
push
std
aaa
add
hlt
ss
jae
jp
sub
sub
lds
add
add
add
cmp
mov
add
pusha
pushf
add
rol
je
les
xchg
add
inc
pop
pop
out
adc
into
cmp
adc
out
fldenv
add
push
jle
add
fwait
xchg
lods
outsl
mov
xor
mov
ds
adc
and
fwait
push
scas
add
xacquire
icebp
xchg
fidivs
sub
cmp
mov
or
rorl
out
int
les
lret
enter
enter
stos
jmp
xor
sbb
add
or
mov
mov
jge
push
mov
jge
and
jno
pusha
pop
into
aam
sarb
sub
jecxz
loopne
test
enter
call
jae
add
pushf
rorb
fstpl
jmp
loopne
cwtl
cli
sbb
add
out
or
rcl
outsb
mov
sbb
adc
arpl
sbb
cwtl
add
cmp
lock
cmp
or
adc
imul
sbb
das
push
dec
adc
add
in
lds
pushf
push
arpl
lret
jbe
fmulp
negb
addl
xchg
adc
out
mov
sub
mov
cmp
adc
mov
lcall
adc
pop
mov
jo
nop
fidivrl
cmp
jp
jno
add
out
in
aas
add
fcomip
faddl
imul
inc
and
add
push
lea
inc
in
flds
jmp
rorb
mov
jg
out
hlt
add
lahf
loop
add
icebp
sub
bound
enter
js
mov
dec
popf
mov
test
ja
bound
cld
sub
insb
inc
out
add
adc
pop
add
jp
sbb
loope
add
bound
pushl
xor
push
add
xchg
out
fldl
popa
subb
inc
pop
push
mov
ja
add
dec
lock
pop
xchg
fsubrs
test
cmp
arpl
fildl
jbe
or
scas
inc
popa
jo
sbb
outsl
jl
into
imul
xor
adc
int
lret
rol
stc
cli
inc
add
leave
pop
mov
int3
xor
mov
in
xor
or
add
sub
push
js
add
sub
loop
xchg
lods
add
pop
dec
aas
insl
pop
test
dec
inc
rclb
jl
je
mov
out
popf
add
lahf
push
dec
inc
enter
xchg
dec
add
sbb
loopne
sub
add
cwtl
movsl
adc
out
xor
or
fldl
add
subl
addr16
lret
or
movsb
and
out
add
outsl
sbb
rorl
cmc
ds
push
aam
sarb
pop
xchg
add
sub
push
cmp
xchg
out
push
mov
shrl
jge
add
lahf
xchg
sub
add
xor
add
rsm
adc
jnp
add
mov
sbb
inc
push
arpl
shl
mov
test
rolb
xor
and
add
push
push
aam
dec
mov
jecxz
mov
loope
adc
popa
shrl
sbb
fmull
and
stos
jl
xchg
rclb
mov
dec
movsb
push
add
imul
vmwrite
and
repnz
pop
js
pop
cmp
cmp
cmpsl
jp
push
xor
stc
fimull
and
and
dec
fnstcw
push
xchg
std
cmpsb
mov
xlat
in
adc
loopne
add
js
fisubrs
leave
add
add
xor
mov
adc
inc
add
test
xchg
xor
sub
add
aas
dec
repz
jmp
jge
add
cmpsl
fwait
or
and
sub
leave
xchg
aad
xlat
add
lods
pop
sub
sub
and
push
jae
int3
aam
mov
add
gs
aaa
add
xchg
jb
jg
xchg
imul
jecxz
test
test
add
add
jo
add
cmp
addr16
movsb
and
in
cmc
add
xor
arpl
pop
add
loop
mov
sbb
addb
aaa
xor
inc
push
cmp
mov
push
jl
add
imul
add
inc
jbe
sbb
pop
jmp
lds
fldl
icebp
cmp
or
xchg
test
cmp
mov
rolb
mov
pusha
xor
arpl
aad
movsb
jns
frndint
add
inc
jnp
shl
inc
repnz
add
test
fwait
nop
lods
xor
jno
and
add
xor
mov
push
xchg
orl
pop
add
into
and
jno
add
fsubrl
and
add
outsb
xchg
inc
jnp
inc
adc
gs
rcl
add
mov
and
imul
mov
lods
add
mov
clc
aad
adc
das
mov
insb
fs
mov
mov
xor
push
loopne
push
or
xor
inc
es
int
jle
mov
or
pop
std
in
repz
jo
lret
sbb
add
add
mov
add
sub
push
cltd
mov
add
add
adc
lock
scas
sub
mov
mov
jp
cmp
andb
adc
hlt
add
sbb
jmp
xchg
dec
inc
inc
aam
cmpsb
add
and
jecxz
lahf
pusha
sub
add
jge
in
dec
dec
push
xchg
cwtl
sub
mov
roll
jmp
sbb
push
jb
mov
shrb
dec
push
int3
mov
dec
nop
push
fildll
js,pt
ret
clc
roll
sti
cltd
loope
sarb
pushf
cmp
jae
inc
cmp
dec
or
jns
jle
add
pop
cmpsb
adc
adc
push
mov
into
dec
add
sbb
aad
sbb
popf
out
mov
adcb
aad
int3
mov
add
sti
pusha
ja
add
icebp
test
jmp
pop
xor
call
sub
popl
push
push
fmuls
pop
scas
imul
pop
int3
rorb
mov
mov
add
pop
int
cli
mov
pusha
sub
add
dec
lods
mov
adc
fsub
xor
sbb
outsb
or
jl
jnp
inc
in
add
test
outsl
add
popa
jbe
add
lcall
mov
sahf
fidivrs
pusha
sbb
pop
sub
or
inc
insl
add
in
mov
pop
pop
les
repnz
lcall
pop
shrb
adc
rcrl
jbe
imul
inc
dec
or
mov
xchg
cmp
ffreep
add
insl
add
and
outsb
mov
push
faddl
adc
mov
fisttps
add
xor
shlb
sbb
cwtl
mov
or
or
add
sub
add
mov
add
cmc
pop
outsb
aad
jae
in
cwtl
jbe
adc
mov
popf
mov
inc
add
rorb
adc
leave
stc
pop
mov
adc
sbb
pop
push
inc
into
mov
add
inc
sub
stos
sub
popf
hlt
add
mov
add
mov
subb
arpl
pop
fdivrs
faddl
lcall
xchg
lods
or
add
pop
out
call
js
icebp
pushf
xor
std
or
jne
or
jnp
xor
aas
addb
jno
sub
add
jne
xchg
add
daa
sub
inc
push
faddp
movsl
mov
int3
or
lret
popf
xor
dec
adc
nop
cmc
enter
sub
lret
bound
add
inc
push
jp
xchg
ret
popl
data16
faddl
push
setae
leave
clc
in
std
add
lock
adc
ljmp
cmp
xchg
mov
out
add
rolb
add
inc
dec
test
popa
movsl
mov
mov
shr
shrl
cwtl
lods
cmpsl
sti
mov
sub
aaa
popa
push
and
push
rcll
pop
and
add
cmpsb
add
sahf
insb
pop
add
daa
cmpsl
pop
stc
fmuls
fistpll
and
add
in
xchg
ficoms
add
add
nop
icebp
jmp
and
lock
add
add
dec
dec
push
movsl
jle
push
cwtl
nop
or
mov
pop
xchg
stos
ror
aad
lea
imul
dec
pusha
jmp
js
mov
pusha
shrb
mov
lods
add
sbb
mov
aad
out
adc
pop
cmp
popa
add
sub
cmp
jb
pop
pop
test
jne
cmp
add
adc
punpckhbw
hlt
sar
mov
pop
pandn
int3
inc
jo
in
aaa
addb
mov
cmc
lea
add
sti
add
add
pop
in
scas
cmp
nop
mov
xchg
add
andl
nop
xchg
mov
jecxz
xchg
fstl
sub
out
add
scas
adc
gs
adc
add
and
push
xchg
js
add
adc
add
jae
dec
jo
or
mov
add
test
aas
add
adcl
insl
sbb
sub
in
js
jle
push
pushf
add
fisttpl
addl
mov
sbb
jl
pop
rorl
sub
xchg
hlt
add
push
mov
mov
dec
dec
adc
cmp
push
aam
bound
ret
xchg
fs
ror
push
dec
lahf
popa
xor
inc
ror
add
stos
call
and
xchg
xor
jecxz
jle
or
repnz
jnp
add
inc
popa
ja
aas
cmp
adc
addl
or
imul
in
add
jb,pt
add
push
mov
sub
loope
inc
int
sahf
cmp
mov
push
lock
cmp
aam
ja
and
mov
stc
add
fnstcw
and
mov
cmp
mov
negb
mov
into
pop
or
xchg
push
bound
addr16
loopne
and
jo
xchg
sbb
sub
push
lret
iret
and
mov
in
sbb
ljmp
subl
and
xchg
dec
add
pushf
arpl
and
cwtl
mov
mov
inc
jmp
int3
add
inc
mov
dec
cld
inc
push
xchg
sub
clc
sbb
cmpb
fadd
cs
stos
add
aaa
js
rcr
cwtl
in
shrb
add
push
sbb
das
mov
sub
mov
or
adc
hlt
test
flds
rcrb
jo
incl
mov
movq
mov
pusha
add
or
cmp
mov
xchg
push
in
popf
lods
rclb
fnstcw
nop
pop
and
repz
add
mov
pop
sti
and
jbe
add
push
jb
jp
add
mov
psubusw
mov
test
add
test
dec
sti
jnp
add
mov
test
add
stos
inc
repnz
jl
and
ret
or
push
jae
xlat
add
adcb
icebp
pop
inc
add
out
dec
mov
or
push
jne
xor
xor
sbb
shl
jmp
insl
rcll
sbbb
rcll
add
inc
addb
mov
clc
inc
jp
es
add
xchg
and
pusha
roll
repz
and
or
mov
sbb
fs
idivl
add
push
scas
loope
xchg
pop
leave
sbb
and
jg
or
add
pop
pop
xchg
dec
fmull
jnp
jecxz
ljmp
les
and
jge
jo
packuswb
inc
int3
loopne
nop
dec
or
jle
mov
stos
arpl
ret
sub
inc
xchg
pusha
push
lock
pushf
mov
orb
pop
pop
cmpsb
add
aas
test
mov
ret
fucomp
ljmp
insl
pop
mov
add
les
add
in
into
push
sub
in
mov
cld
add
sarl
jge
add
push
addb
pop
and
sub
aam
inc
mov
mov
lret
add
mov
sub
push
addb
mov
adc
push
add
mov
verr
mull
inc
mov
add
pop
pop
push
pop
loopne
push
mov
mov
push
push
xor
addb
dec
repz
lret
inc
call
mov
xchg
push
jl
addr16
jns
daa
inc
jnp
dec
pop
sahf
mov
out
leave
in
xor
negb
push
js
fildl
mov
sub
mov
movsl
dec
aaa
loopne
inc
or
pop
lret
push
popf
in
push
add
inc
hlt
or
movsl
xor
aaa
add
aad
testl
nop
in
imul
mov
cld
jns
add
ds
in
loop
sub
sbb
imul
xchg
aaa
mov
mov
dec
call
movsl
add
and
mov
enter
add
sub
or
js
rolb
in
xor
clc
sbbb
fnstsw
jns
add
or
add
or
pop
arpl
in
push
fistl
jmp
mov
add
shlb
jo
or
stos
and
test
sub
add
push
rolb
add
stos
test
testb
addr16
in
push
cmpsb
push
xor
add
pop
fnsave
lea
dec
movsb
call
lock
pop
xchg
mov
xchg
rclb
imul
movsl
gs
rorl
out
and
cmpsb
lcall
sub
sbbl
clc
aas
das
xor
ss
xchg
in
movsl
bound
lods
add
lcall
sbb
xchg
jg
push
imul
add
mov
or
sbb
mov
sub
mov
pushf
sbb
enter
push
and
imul
push
aaa
jge
xchg
push
call
dec
aad
addl
ja
fwait
mov
loop
add
sub
sbb
fstl
add
ds
pushfw
sub
icebp
or
addb
sbb
sub
data16
add
and
add
add
test
push
mov
mulb
cltd
movsb
out
insl
push
call
jle
in
test
mov
out
or
mov
add
inc
loope
addb
add
jmp
dec
fimuls
push
cmp
xor
jns
add
lret
shlb
scas
das
sub
sbb
je
and
ja
or
shll
aaa
lds
add
ret
sbb
sub
cmp
sbb
and
std
inc
mov
mov
pop
mov
fistl
add
sti
repnz
rcr
sub
into
add
push
shlb
add
lods
dec
out
add
push
add
fidivl
mov
cmova
fimuls
cltd
cmp
lcall
leave
movsb
mov
jae
stc
add
jmp
or
imul
jl
xor
repnz
orl
add
mov
iret
dec
jne
xchg
push
out
add
xchg
pop
test
add
adc
cmp
xchg
or
mov
add
xchg
sbb
add
xor
push
jae
lods
in
outsb
andl
mov
push
insb
scas
and
or
pop
jae
ret
flds
add
sub
loopne
dec
cmp
jg
ret
add
cmp
sbb
das
inc
test
fsub
pop
xor
subl
andb
popa
add
add
fwait
dec
dec
add
jno
push
push
pop
xchg
add
pop
in
sti
add
mov
xor
jg
mov
cwtl
lods
push
rcr
add
add
xor
inc
and
jmp
nop
stos
cmp
jmp
and
pop
loope
cmc
fadd
add
mov
add
mov
test
push
add
cmp
rcrb
add
scas
mov
ljmp
push
mov
push
das
out
cltd
test
in
xor
iret
mov
out
add
les
pcmpeqw
push
test
pop
movsl
pop
inc
pop
ja
insb
lock
pop
and
xor
fcomps
in
je
jo
sub
jmp
mov
xchg
push
pop
pop
fwait
mov
push
cmpb
xchg
out
add
xor
add
cwtl
mov
push
jmp
or
jp
lock
add
scas
push
vmread
sub
je
pop
loopne
lock
mov
cld
sbb
sub
add
imul
pop
push
add
iret
cmp
imul
xchg
mov
push
inc
nop
repnz
inc
add
insb
jmp
add
bnd
xor
mov
mov
cwtl
sbb
inc
inc
in
shlb
test
int3
movl
fmuls
or
fldenv
data16
add
jae
lods
add
mov
aas
test
or
sub
clc
cmp
scas
hlt
mov
add
repnz
lods
push
test
mov
jp
lods
cs
pop
or
test
shrb
nop
push
add
adc
add
xor
mov
adc
mov
add
popa
cwtl
test
xor
inc
jno
mov
adc
mov
cli
xlat
mov
mov
add
xorb
clc
pop
dec
xchg
pop
pop
gs
jg
sub
adc
mov
pusha
or
idiv
mov
push
cmpsb
das
in
int3
adc
mov
cwtl
mov
ss
pop
lods
mov
cmp
xor
add
xor
xor
inc
enter
inc
pop
xlat
cli
cld
add
dec
les
aas
std
jge
cmp
lcall
les
mov
inc
call
cmp
in
add
cmp
add
notb
popf
lock
pusha
sbb
jge
sti
and
add
dec
xchg
cmp
ret
jnp
repnz
pop
add
mov
je
cli
add
add
aaa
call
std
mov
jmp
xor
cmpsl
movsl
add
dec
subb
adc
test
push
push
sub
orb
daa
loopne
add
ja
and
dec
mov
rdpmc
stc
jne
andb
icebp
movsb
add
int3
inc
mov
add
or
xorb
ret
cmpsl
test
add
into
pop
xchg
mov
jne
mov
push
rolb
sub
daa
jae
add
ja
jl
test
cmp
sub
xchg
bnd
js
sub
rcr
adc
sub
insl
repz
fs
or
xlat
in
jae
cmp
sub
cwtl
lods
mov
ficoml
test
add
add
call
leave
add
or
inc
rep
enter
and
stos
xchg
adcb
mov
ja
bsr
int
test
lret
add
orl
ljmp
loopne
cmp
jo
sub
adc
sbb
aas
fwait
add
in
add
dec
nop
popf
sahf
mov
sbb
or
mov
out
vunpcklps
pop
mov
test
arpl
jle
stos
add
lds
push
ljmp
jp
popa
outsl
add
add
inc
shl
sub
push
stc
lods
sbb
add
lret
add
mov
or
push
jmp
testb
js
call
mov
pop
popa
pop
mov
add
sub
add
cmp
and
cmp
pusha
pop
inc
js
cmpb
add
dec
mov
add
in
sub
outsb
inc
jl
add
imul
pop
imul
add
sbb
and
mov
xor
pop
xchg
sub
aas
leave
add
mov
adc
pop
stos
insb
or
mov
inc
cmp
jmp
xor
mov
inc
int
hlt
xor
add
aam
jo
ret
xor
inc
pop
cld
add
movsl
push
sub
sub
mov
shrb
dec
add
pop
dec
jle
pop
xchg
xchg
jp
aad
adc
mov
ja
add
movsb
aaa
mov
lret
adc
xor
clc
ds
add
adc
jbe
jo
imul
add
adc
add
and
mov
sub
add
push
scas
push
es
push
cmc
add
pop
call
push
cmpsl
adc
push
add
dec
movsb
mov
add
aam
push
jno
sbbb
bound
mov
adcb
popf
xchg
pop
fcoml
and
fsub
dec
insl
xor
add
and
cmp
bound
lcall
add
pop
stc
sahf
fldl
cmp
adc
sub
sub
mov
push
movsb
rcrb
pushf
add
cmp
inc
mov
adc
roll
jnp
hlt
jno
add
insl
jp
rcrb
xor
add
push
jnp
inc
push
sub
mov
xor
lcall
push
jle
fucom
inc
dec
clc
test
mov
js
jnp
add
xchg
push
xchg
sub
and
aam
ret
add
and
add
bound
pop
push
or
inc
clc
add
andb
mov
sarl
arpl
push
jl
push
out
sbb
sti
push
xor
rclb
mov
and
test
dec
or
scas
aad
jmp
mov
nop
jne
or
sbb
out
fs
push
mov
addl
cwtl
nop
jecxz
nop
test
aas
test
in
mov
mov
cmpsb
loop
addl
jle
or
test
test
stos
xlat
roll
cmp
scas
and
push
cwtl
dec
add
mov
adc
push
test
sub
add
clc
mov
push
aam
das
and
out
sahf
rcl
xlat
sbb
jmp
sbb
jne
push
pusha
add
loopne
pop
and
fcmovb
ds
scas
or
pop
mov
sub
and
pop
add
fadds
popa
jecxz
adc
lret
adc
out
mov
push
pop
xchg
in
faddl
cmc
insb
add
xchg
mov
pop
inc
add
enter
jl
hlt
add
pop
mov
add
xchg
cmp
rcrl
fimull
lret
push
mov
pop
and
data16
lods
inc
push
xorb
mov
xorb
into
movsb
daa
inc
loopne
dec
pop
add
xor
movsb
in
nop
in
xchg
add
xchg
inc
sub
daa
add
cmpsb
push
sub
push
dec
loopne
repz
mov
jle
pusha
push
cmp
je
cmp
loop
mov
in
mov
push
mov
inc
xbegin
xchg
nop
add
das
xchg
cmp
sbb
sahf
clc
push
gs
mov
jbe
sbb
cmp
cmc
popa
pop
and
pop
cmc
adc
cli
clc
sub
in
push
add
gs
imul
lahf
lret
add
mov
xchg
cmp
dec
jae
adc
and
cmp
push
jp
pop
mov
lret
pop
pop
and
mov
jnp
sub
jmp
mov
pushf
sbb
mov
or
fistpl
mov
add
cmp
lea
rolb
pop
xor
push
fiaddl
cmp
mov
push
mov
pop
aam
cmc
push
xor
ret
outsl
adc
das
dec
cmp
setge
mov
outsb
sbb
and
fs
mov
sbb
xlat
lods
add
add
movsl
and
aad
cmp
add
mov
and
int
call
jbe
shl
cmp
aas
push
add
add
aam
xor
add
out
movb
test
dec
add
lock
jp
push
ljmp
and
clc
mov
aam
int
xchg
push
loopne
add
pop
xchg
ja
pop
cmp
jle
pop
mov
xor
lea
hlt
lcall
adc
jo
jge
pop
cmp
pusha
add
scas
out
sub
dec
push
ss
cmp
dec
adc
jnp
adc
or
into
data16
push
test
mov
cmpsl
cmp
outsl
lods
adc
lret
cmpsb
mov
in
push
add
dec
dec
int
xchg
cmp
sbb
pop
xchg
inc
test
mov
sbb
push
sbb
ljmp
adc
fsubrs
adc
adc
sub
icebp
cwtl
mov
icebp
ficoml
hlt
or
sti
and
inc
fstpl
or
push
aad
add
movsb
lods
push
inc
mov
sbb
inc
mov
push
insl
pop
mov
or
fistl
stos
inc
and
les
sub
and
push
negl
dec
ljmp
mov
ja
jl
adc
xor
adc
repnz
pop
inc
jb
loope
dec
mov
rcrl
mov
sti
push
in
hlt
clc
pop
iret
popa
mov
rcrl
jle
push
leave
jle
pop
add
sarl
fmuls
aam
loopne
hlt
addb
cmp
fmuls
std
sub
adc
popf
mov
cmp
mov
daa
testl
sub
xchg
xor
nop
sbb
mov
cmp
push
fists
xor
mov
push
add
xchg
aam
addr16
test
add
pop
jne
pop
mov
fidivrl
clc
sbb
adc
cld
xchg
xor
add
icebp
jo
or
add
sbb
xchg
dec
add
insb
out
icebp
je
insl
push
fsubl
movlps
rorl
add
iret
add
icebp
push
or
mov
test
jle
in
inc
fcmovne
mov
addr16
or
mov
in
and
cmp
scas
lods
add
in
stc
cli
fwait
js
add
mulb
add
mov
xor
and
jns
xchg
sbb
mov
rcrb
lret
int3
pusha
negl
cld
in
dec
add
dec
inc
mov
push
hlt
pusha
adc
fisubl
shlb
pop
add
adc
xchg
add
rorb
xchg
or
cwtl
adcb
jmp
sub
out
push
jo
add
lock
and
jns
xchg
imul
das
in
loopne
add
in
mov
fdivr
add
movsl
iret
mov
adc
aaa
xchg
add
push
xchg
sti
jnp
push
std
dec
pop
add
lcall
cmpsb
or
leave
sbb
call
pop
test
xchg
nop
jge
adc
push
jge
jo
orl
xchg
jmp
inc
pop
inc
push
add
push
imul
lcall
cld
add
pop
or
push
mov
xor
mov
pop
mov
jge
prefetchnta
icebp
in
mov
push
cmp
or
or
cld
adc
add
mov
dec
mov
pop
xchg
imul
dec
mov
sub
cwtl
pop
pushf
sub
rcrb
cmp
filds
mov
cmp
push
test
cltd
or
jl
sub
js
mov
lcall
adc
jo
add
ffree
push
fs
test
outsl
jns
add
ss
test
lret
pushf
lea
gs
mov
xchg
call
push
mov
mov
dec
fsubl
les
lods
js
mov
dec
fimuls
push
mov
cmp
mov
cmp
push
out
fs
inc
jbe
fdivr
xor
mov
cmp
add
push
call
jns
and
mov
fwait
outsb
dec
xchg
jns
fs
xchg
mov
leave
cmp
sti
clc
or
orb
fwait
cmp
xor
jae
lock
xchg
jbe
cmp
sbb
call
sub
dec
mov
scas
inc
divb
test
jno
fistpl
stc
cli
sbb
sbb
jecxz
add
iret
scas
push
loopne
sbb
sti
pop
aad
movsb
cmp
hlt
sbb
push
adc
sub
cmp
xor
lcall
xchg
add
xchg
pop
pop
add
push
add
in
xchg
popa
idivb
das
xchg
xchg
arpl
rclb
sub
jmp
test
adcl
je
adcl
or
inc
sub
pop
sbb
dec
imul
xlat
xor
mov
add
ret
mov
pop
push
dec
loope
push
add
mov
push
push
adcb
pop
or
xchg
adc
into
xchg
addl
cmp
add
pop
pop
cmp
add
mul
sub
cmp
andb
outsl
or
pop
or
es
sysret
clc
ja
add
sarb
bound
ret
adc
imul
out
jl
add
int3
scas
xchg
adc
stc
rcrb
lahf
lods
pop
or
sbb
fbld
dec
jp
dec
int3
sbbb
mov
addl
clc
jecxz
cmc
lods
xchg
pusha
add
les
test
das
in
push
cmovle
sbb
sbb
out
pop
fisttps
mov
mov
mov
sub
cs
and
cltd
inc
cmc
std
add
pop
imul
aaa
inc
push
int
sub
jbe
call
mov
cs
adc
add
sub
mov
and
xchg
adc
sti
cmp
adc
xchg
pop
test
dec
loopne
gs
xchg
sbb
sub
pusha
xor
adc
add
test
lcall
pusha
sarl
dec
sub
hlt
mov
inc
in
or
shlb
lret
cmp
mov
clc
inc
mov
cmovo
add
clc
push
movsb
sbb
cli
nop
mov
push
dec
sbb
rcrl
int3
mov
stc
stos
cmp
fadd
je
test
add
shll
insb
xor
enter
mov
xor
imul
jg
ret
cmp
pop
popa
out
in
gs
xchg
pushl
add
dec
sub
pop
xlat
into
add
nop
jno
or
pop
sahf
sarb
xor
add
test
leave
fwait
rcll
push
mov
add
push
mov
add
orb
xchg
lock
rcrb
adc
clc
sub
test
xchg
andb
cmpsl
ljmp
adcb
mov
stos
shll
sbb
mov
sbb
pop
inc
pop
jp
add
xchg
push
daa
pop
nop
sub
shlb
jne
ficompl
rcl
add
inc
mov
or
or
xchg
popa
mov
icebp
push
mov
movl
adc
jne
push
shr
mov
fadds
test
inc
shrb
cmp
leave
add
ficoms
push
fcomps
push
cmp
aad
cwtl
popa
add
nop
mov
jl
aam
divb
push
lcall
inc
pop
frstor
push
nop
add
push
dec
xlat
mov
add
mov
jno
shlb
pop
xchg
xchg
xchg
js
pop
neg
add
xlat
lock
add
lea
xchg
jbe
add
cltd
cmp
sbb
and
inc
inc
mov
scas
in
jg
int3
mov
xchg
stos
loopne
push
mov
std
fwait
pusha
outsl
jno
jne
add
sub
cmp
dec
loopne
lods
add
adc
dec
xor
mov
aam
push
add
push
das
addl
pop
pushf
mov
lods
clc
shl
insl
movsl
sahf
pminsw
add
jg
add
fcmovnb
rcr
sbb
enter
iret
ror
pusha
cmp
ret
xor
add
cs
sub
rolb
aam
xor
or
nop
insb
std
int
add
pop
mov
mov
pop
add
in
pop
fisttpl
shr
outsb
dec
xor
lds
pop
daa
popa
mov
cmpsl
inc
into
in
jb
fucomip
add
add
rcll
cltd
fwait
scas
jmp
xchg
xor
movsb
mov
lock
cmp
add
add
rcrb
js
or
sub
add
ds
xor
sbb
dec
push
pmulhw
ljmp
xorb
std
add
or
dec
sbb
mov
mov
gs
dec
pop
jno
cld
sbb
and
adc
add
stos
je
out
ss
test
or
popa
add
inc
cmpsl
xor
outsl
ljmp
add
inc
push
or
dec
jne
fs
int
adc
lcall
adcb
jge
es
sub
mov
or
xchg
mov
add
jmp
pop
mov
les
leave
andb
loop
ja
sbb
js
add
mov
mov
ror
sbb
add
jmp
adc
clc
jo
mov
add
das
pushl
mov
ret
or
fisubrs
ljmp
add
stc
xlat
adc
mov
nop
add
sub
add
sbb
adc
inc
xchg
insb
outsl
movsl
out
add
jl
fdivrs
jns
add
repnz
in
cmp
repz
pop
mov
mov
enter
jne
sub
sbb
lock
sbb
ds
adc
xor
sbb
iret
or
xchg
pop
add
inc
fwait
adc
clc
and
fcoms
mov
dec
lods
movsl
decl
lods
mov
jbe
xor
faddl
hlt
mov
add
or
mov
pop
test
out
jge
js
stos
test
adc
popf
cmpsl
xor
jbe
add
mov
mov
mov
rcrb
push
mov
stos
pop
lret
sbb
lcall
adc
inc
or
mov
icebp
mov
pop
in
enter
cs
cwtl
cmc
or
push
es
cli
test
mov
add
pop
out
sub
cmp
loope
mov
in
xor
add
sub
push
inc
dec
int3
dec
arpl
or
clc
add
mov
loope
add
fldt
push
ror
and
es
aas
cwtl
lret
enter
push
sub
shr
aad
jle
add
dec
in
aam
dec
out
push
mov
xchg
add
inc
add
repnz
in
xor
jp
jnp
xchg
movsb
mov
mov
lret
ret
insl
sbb
cli
in
test
outsl
cmovo
mov
pusha
fcmovu
cmpsb
jl
add
mov
mov
jne
iret
popf
dec
pop
add
ljmp
cli
add
mov
jecxz
test
loop
add
mov
mov
add
lds
pop
push
xchg
push
arpl
into
sti
push
loope
jns
push
ds
inc
or
fldl
jmp
add
adc
stos
loop
push
and
xchg
add
mov
add
mov
test
cmc
xorb
or
cwtl
shl
add
xor
aam
or
mov
aas
mov
pusha
loopne
mov
mov
xor
fwait
jg
add
popa
mull
add
pop
cld
lock
or
jno
andl
orb
cli
les
movsl
push
adc
jb
stos
iret
xchg
ret
add
cmp
loope
add
xchg
add
es
sub
in
inc
and
int3
inc
add
push
pushf
lea
add
imul
xchg
jne
sub
push
mov
jmp
dec
jo
ret
add
push
sub
or
mov
add
insl
jns
rorb
aas
mov
or
cld
xor
and
push
mov
xchg
xor
outsb
xor
testb
pop
jns
ja
mov
enter
stc
into
fiadds
mov
inc
jge
pop
jp
mov
push
rcr
fidivrs
mov
adc
or
push
jle
dec
add
icebp
jb
shll
push
adc
loopne
mov
ficoml
pop
lds
pop
popa
stc
shrb
js
and
and
cmp
int
push
cmp
sub
in
mov
cmp
mov
stc
sbb
jb
aas
add
stos
dec
scas
loop
push
icebp
das
or
inc
sarl
sbb
shrl
test
nop
pusha
sbb
mov
sub
jo
add
or
insb
add
xchg
fnstsw
nop
inc
add
clc
cmc
popf
or
ds
sub
jg
cmp
add
int
in
push
cmp
add
insb
push
subb
orb
push
in
pushf
sahf
subb
adc
push
add
lds
mov
and
inc
adc
adc
mov
out
ds
test
imul
ss
dec
add
fdivl
xor
jae
bound
mov
sbbl
fildll
loopne
add
lock
in
cli
aam
enter
addb
out
add
cmpsl
inc
ja
cmpsb
push
fcomps
xor
jmp
adc
sub
test
mov
iret
add
xchg
imul
aaa
add
or
xchg
push
add
stos
fcmovb
pop
jmp
or
test
mov
jns
mov
addb
dec
adc
movsl
inc
inc
cmp
into
mov
je
cld
push
inc
jne
xor
mov
add
and
sbb
mov
inc
xchg
or
adc
scas
ret
add
sbb
sbb
shll
cmc
add
jl
ret
push
mov
lret
add
hlt
sbb
ret
enter
mov
out
cmp
push
jno
sbb
add
sbb
in
inc
dec
test
wbinvd
push
or
jb
cmpsb
push
shrb
adc
xor
or
add
insl
xor
ror
lock
add
sbb
out
add
insl
ret
mov
mov
sbb
popl
and
stos
mov
test
xor
test
pop
add
in
je
add
mov
push
rorl
incl
notb
lods
or
xor
fldt
add
stos
loop
mov
xor
pop
dec
inc
xchg
nop
push
scas
mov
test
test
jae
pushf
pop
ficoml
jb
dec
rclb
mov
sub
xchg
jo
add
test
cmp
icebp
adc
pop
rcr
inc
add
mov
popf
add
push
jl
pop
xchg
mov
in
stos
xlat
push
enter
add
cwtl
hlt
lock
aam
push
stos
push
xor
loopne
mov
cmpb
ret
lock
jo
jno
test
out
scas
mov
and
xchg
push
cmp
pop
jecxz
cmpsb
loop
add
lea
jo
daa
shlb
sub
lods
addr16
fsubl
xchg
xor
jp
cltd
js
ljmp
in
add
stc
jmp
adc
sbb
jnp
push
pushf
cmp
fstpl
jbe
xchg
notb
push
test
xor
add
cltd
mov
adcl
mov
cmp
or
add
mov
pop
adc
adc
mov
out
xorb
sbb
cli
adc
out
jne
daa
inc
xchg
fs
and
sbb
mov
or
rclb
nop
add
addr16
enter
and
inc
mov
movzbl
jge
insl
fmulp
mov
jb
adc
sub
dec
pop
cwtl
add
mov
sbb
and
adc
cmp
adc
sbb
add
inc
loopne
movsb
xor
add
aad
xchg
lret
and
add
shrb
and
in
and
sbb
roll
add
jnp
mov
mov
loopne
call
loopne
test
mov
add
jl
fldenv
xor
fisttps
xor
xchg
push
cwtl
inc
out
iret
xchg
pop
pop
pusha
scas
mov
mov
fisttpll
jg
push
pusha
inc
push
lahf
add
cmpsl
or
in
sbb
cli
sub
pop
inc
add
sub
sbb
test
pop
add
sub
pusha
sub
sbb
dec
jmp
add
in
add
jge
scas
fsubrl
test
jnp
lock
jae
and
mov
push
inc
dec
fwait
dec
mov
add
ret
or
cmc
and
mov
mov
mov
ret
inc
out
jl
add
imul
nop
shrl
xchg
int
push
push
add
push
add
inc
sbb
notb
and
popa
cwtl
cld
add
sub
pop
mov
xchg
nop
addb
mov
shrl
or
sahf
sysret
outsl
lods
gs
cmp
add
cmp
add
jbe
sarl
rcrb
xor
lcall
cmc
add
inc
fdivl
jl
je
mov
test
pop
test
and
pusha
int
dec
adc
sub
iret
push
adcb
or
pop
fimull
cmp
outsl
loopne
shll
test
jmp
mov
add
ret
xchg
push
stos
ja
pop
sahf
or
inc
inc
add
outsl
pop
and
sbb
xchg
rol
add
lods
add
imul
dec
fs
andb
xor
jge
nop
cmpsl
cmp
jg
mov
adc
and
xorl
gs
lods
add
mov
jl
mov
roll
or
ljmp
xchg
fldl
test
push
jo
add
push
push
mov
jl
daa
loopne
push
loopne
cmc
das
sbb
xchg
fs
jbe
add
dec
movsl
sub
fwait
push
inc
cwtl
lock
pop
cltd
dec
pusha
hlt
add
push
pop
dec
mov
mov
jo
inc
add
xor
mov
ss
stos
pushf
xorl
daa
mov
jae
add
paddsw
lods
jo
xor
out
pop
das
xchg
xrstors
mov
js
add
aaa
jb
popa
push
mov
das
lds
jge
add
stc
mov
cmpxchg
or
push
add
xorl
mov
pmaxsw
mov
or
add
inc
push
xchg
jo
popa
xchg
add
aam
scas
add
std
jle
dec
xor
das
movsl
stos
add
dec
push
xchg
xchg
xchg
sbb
mov
sarb
jmp
test
sti
add
pop
push
xor
dec
lahf
jno
push
pop
jecxz
inc
sub
aas
pop
rclb
fildl
inc
std
gs
cli
jo
hlt
dec
xchg
addr16
cmp
sub
inc
add
fs
add
cmpsb
arpl
add
or
sbb
cld
xor
pop
lds
inc
loopne
cltd
jge
andps
push
push
and
mov
mov
mov
xchg
hlt
xor
push
shlb
cmp
inc
mov
sbb
nop
push
xchg
inc
or
imul
out
hlt
mov
pusha
add
inc
call
insb
push
sbb
loop
inc
add
mov
iret
push
sbb
push
aam
mov
inc
fs
push
adcl
dec
push
or
add
stc
dec
add
or
int3
dec
verw
daa
mov
hlt
cmp
add
filds
mov
adc
or
or
jg
add
mov
add
int3
mov
jle
add
inc
popa
inc
pop
out
shlb
xchg
in
lgs
add
icebp
in
and
nop
cmp
add
pop
push
orl
inc
mov
add
mov
lods
ja
in
sbb
mov
mov
add
push
adc
mov
xor
in
xchg
push
clc
lods
and
andl
add
xchg
xchg
add
cmp
inc
je
pop
inc
jecxz
jge
cmp
incl
inc
cli
and
pusha
or
icebp
fnstenv
jo
add
movsb
sub
stos
cmc
mov
push
mov
mov
inc
pusha
lds
xchg
arpl
addr16
sub
adc
out
add
add
das
jae
bsr
stc
add
pop
add
add
xlat
cmc
dec
add
roll
jns
loop
push
dec
or
add
inc
arpl
add
loopne
pop
dec
push
mov
jnp
dec
jg
imulb
xor
add
jl
dec
je
outsb
jno
loopne
mov
fnsave
add
push
addr16
ds
movd
pop
loop
sub
lcall
orb
idivb
inc
shll
ljmp
push
push
adc
add
imul
ret
mov
cmp
add
pushf
pop
add
mov
shll
jecxz
jo
mov
lcall
mov
stos
mov
adc
jb
je
ja
sbb
xor
or
insb
push
mov
dec
xchg
in
clc
test
pop
insb
cs
in
xchg
mov
cmp
out
push
addr16
cwtl
inc
xchg
inc
ds
enter
xchg
sub
repz
mov
mov
lods
and
jb
push
push
sarl
ja
jnp
fsub
dec
add
xchg
jge
fs
inc
cmpsl
xchg
clc
icebp
out
sub
jbe
adcb
jl
xor
add
pmulhuw
es
and
add
cli
mov
push
pop
or
add
test
jb
add
aas
cmpsb
in
push
aaa
aas
fnstcw
dec
cmp
sahf
rolb
push
and
dec
mov
cmp
sbb
jecxz
adc
filds
mov
or
pop
xor
jns
aad
fwait
cmpb
mov
and
cmp
js
add
cmp
add
jmp
push
pop
imul
sarl
xchg
test
mov
or
and
sbb
fsts
lret
adc
out
in
add
sbb
push
lods
mov
ror
add
xchg
and
data16
sti
cld
jp
add
sbb
imul
adc
roll
push
add
pop
das
scas
push
pop
cs
into
and
lds
push
push
mov
fldl
sub
push
jl
pop
push
popl
xor
or
mov
jo
fiaddl
imul
jae
pusha
mov
pushf
add
lea
test
fldenv
mov
stos
sbb
inc
loopne
add
sbbl
add
inc
or
pop
fisubl
dec
ret
ret
inc
inc
jg
outsb
loopne
sbb
add
mov
ds
dec
xchg
pop
sbb
add
mov
insb
jns
insb
cltd
mov
inc
cmp
out
inc
xchg
add
jbe
add
scas
xchg
sahf
add
aas
dec
xchg
pop
push
and
or
jae
mov
pop
into
insb
inc
push
mov
inc
scas
bound
fcompl
popa
outsl
stos
std
test
outsb
or
leave
and
add
pushf
in
incl
jecxz
iret
pop
or
cmp
sbb
add
icebp
mov
inc
aaa
jns
enter
jp
insb
ret
je
outsb
addb
pop
jno
xor
and
pop
repnz
mov
adc
js
sub
xlat
push
shrl
add
pop
lods
imul
fdivp
mov
subl
pop
call
ja
shll
adcb
sbb
hlt
mov
pop
int
call
jg
nop
test
xor
adc
pop
pop
push
inc
add
fiadds
arpl
mov
jg
aas
test
cmp
subl
sbbb
je
add
add
xchg
push
add
mov
and
ds
push
fildl
xchg
or
out
xchg
pop
faddl
cmp
push
add
orl
cmp
insb
adc
cmp
es
fiaddl
lret
in
jmp
push
jg
sbb
cmp
sbb
call
adc
add
out
icebp
les
adcl
stos
rolb
adcl
mov
inc
mov
sbb
out
dec
xor
mov
or
push
sub
stos
xchg
add
pushf
imul
aad
add
jno
push
xor
orb
iret
negb
gs
pop
xchg
add
xor
fcmovne
pop
fs
mov
fmull
mov
push
xor
pop
pusha
and
sub
outsl
cmpb
mov
out
scas
shrb
jnp
pop
and
fimull
sarl
or
sbb
xchg
addr16
cmp
xorb
scas
repnz
imulb
fisubs
add
fsub
xlat
cmpb
xchg
inc
scas
sub
mov
popf
js
rcl
mov
cmp
mov
or
and
dec
daa
lds
fisubs
outsb
add
std
adcb
leave
int
into
and
dec
add
aam
pop
std
cltd
add
or
add
and
push
out
nop
shld
inc
mov
es
mov
nop
aad
mov
pop
mov
fimuls
ficompl
jp
add
idivb
pop
cmp
and
imul
or
jo
lcall
and
cmp
jns
add
fistl
aam
add
sub
jb
lods
lcall
inc
mov
adc
jmp
nop
push
mov
shll
std
add
and
push
add
xor
pop
orb
ret
add
iret
andb
jns
ja
push
outsl
sbb
sbb
push
mov
xchg
cmp
repnz
jno
add
lods
adc
lret
roll
je
sbb
iret
pop
fiaddl
and
stos
stc
xchg
sahf
rcrb
push
add
sarl
jae
orps
stos
shlb
add
loopne
cwtl
mov
pusha
out
mov
jl
jo
mov
and
in
jno
xchg
xor
push
ret
sub
dec
xor
adc
mov
outsl
mov
push
push
xchg
adc
mov
adc
les
mov
mov
mov
xchg
fwait
testb
xchg
push
dec
fdivp
fisubrl
sbb
push
lock
sub
test
es
add
inc
pop
or
xchg
mov
push
aam
call
in
lock
cmc
add
es
sub
dec
add
ret
sahf
mov
mov
jne
or
mov
dec
cmp
add
aam
add
jmp
mulb
dec
inc
adc
dec
mov
add
sbb
xchg
push
cwtl
mov
add
push
mov
mov
add
stc
lods
dec
xchg
pop
pop
add
and
sbb
bound
dec
clc
sbbl
push
pop
or
cli
shrb
pop
test
movl
mov
inc
shrl
add
jnp
jb
aam
pop
mov
subb
enter
cmp
or
mov
add
stc
dec
pop
pop
push
add
clc
aam
loopne
mov
lea
mov
inc
sar
bound
jb
loopne
fiaddl
xchg
push
sahf
rep
lock
mov
or
dec
mov
addl
jp
add
mov
sahf
cmp
andl
ja
xchg
and
inc
inc
test
orl
leave
or
fmuls
sbb
push
in
lea
mov
add
mov
push
or
cwtl
js
mov
call
push
subb
xchg
pop
outsb
call
loope
adc
fists
daa
sbb
andb
lock
and
inc
xor
notl
adc
hlt
sahf
inc
lahf
mov
inc
cmp
icebp
pop
add
add
add
mov
incl
sbb
mov
scas
cs
add
das
add
add
push
add
mov
and
cmpsl
mov
cmp
lahf
or
add
jae
into
mov
add
cltd
mov
xchg
flds
mov
xor
and
int
pop
ds
sbb
mov
dec
sarb
insb
leave
add
test
dec
add
gs
pop
jbe
cs
je
dec
cmpsb
dec
enter
dec
orb
ret
cmp
clc
nop
mov
loop
mov
testb
xor
mov
lods
out
movl
or
addl
mov
jl
mov
and
cs
js
mov
test
stos
add
fnsave
addr16
clc
mov
add
movsb
outsb
ror
test
xor
lds
inc
pop
repz
insl
adc
test
stos
sbb
jmp
inc
add
lea
adc
les
fisubs
bnd
add
mov
dec
or
xchg
sbb
aaa
ret
jp
cmpsl
ss
add
mov
jl
bound
out
or
pop
rep
mov
shrb
inc
cs
jge
cmc
test
and
add
repz
out
xchg
inc
mov
aam
ss
xchg
daa
mov
in
xor
push
add
sub
mov
inc
imul
out
add
dec
adcb
das
mov
sbbb
sbb
mov
mov
idivb
sub
pop
jo
add
aam
xchg
movsl
add
mov
add
enter
nop
loope
js
fsts
cmp
add
cmp
data16
movsb
inc
stc
or
sbb
repnz
popl
fistpl
insl
lahf
xchg
in
sbb
outsb
dec
inc
jnp
ljmp
popa
xchg
imul
fimuls
bound
ss
data16
int
andb
jmp
int3
inc
orb
sub
mov
cmp
xchg
xor
lock
mov
add
adc
add
push
add
out
pop
call
xor
test
repz
pop
stos
adc
xchg
push
pop
pusha
decl
mov
icebp
mov
pop
add
lret
add
cmc
je
psubb
sahf
into
and
rcll
mov
jp
orl
push
jo
rcll
rcrl
inc
cmpsl
add
loope
rolb
lret
adc
jl
inc
dec
mov
push
sbb
mov
dec
fists
rorb
push
sbb
add
js
cmp
mov
mov
mov
add
into
fidivrs
or
out
xor
cwtl
add
mov
pop
sbb
pop
imul
fs
sbb
fsubl
andl
test
rcrb
xchg
dec
int3
jo
sub
mov
pop
push
lods
dec
dec
clc
add
ja
mov
sub
xchg
pop
out
add
fldenv
lods
xlat
pop
push
sbb
add
pusha
cmpb
xor
sbb
shll
ret
aad
insw
sysret
mov
rorb
repnz
push
add
cmp
loopne
and
xchg
xchg
movsl
imul
cli
mov
jbe
ffreep
loop
cmp
and
aas
scas
dec
push
add
and
test
mov
mov
and
sar
adc
fstl
sti
jne
or
idivl
push
jle
mov
mov
xor
add
test
loope
pop
std
loopne
push
mov
xor
sub
sub
sbb
in
out
jno
mov
add
inc
add
add
adc
dec
add
jne
shrl
mov
adcb
adc
sbb
cmp
imul
sbb
cmp
outsl
loope
rcl
add
test
addb
adc
fwait
sbb
xor
enter
jge
add
xor
bound
mov
fnsave
add
into
loop
sbb
sbb
les
or
repnz
mov
cli
pop
push
jns
cld
push
cmc
add
mov
minps
or
addb
repnz
add
push
xor
add
scas
pop
sbb
sbb
sub
lret
push
pop
or
fscale
sbbb
adcb
enter
lods
flds
cmp
push
rcrb
add
inc
iret
cmp
mov
fwait
xor
cmp
pop
dec
xchg
shlb
cltd
popf
in
lret
les
mov
fiaddl
cmp
test
mov
or
mov
lock
cmp
popa
mov
jmp
add
push
pusha
and
test
xchg
bound
lret
add
cmp
pop
xchg
inc
push
pop
incl
add
loopne
adc
insl
shld
idivl
add
xchg
add
cmp
xor
std
sbb
inc
loopne
xor
lea
popl
test
add
sahf
sbb
add
jg
fsubl
mov
rcrl
popf
jp
add
orb
xchg
xor
and
lods
call
pop
mov
iret
ljmp
fimuls
add
ret
mov
add
adc
loope
add
xchg
stc
out
mov
jg
inc
insl
cmc
push
fucom
mov
add
dec
xchg
inc
mull
mov
gs
rcll
ljmp
pushf
push
jbe
add
add
lret
cmp
sub
sarl
push
mov
fcmovu
cmpb
dec
mov
lods
xor
mov
rorl
pusha
jne
notb
aam
adc
gs
clc
sub
outsb
pop
addr16
add
inc
add
cmp
pop
mov
vpscatterdd
mov
call
in
or
sub
mov
and
lcall
fistpll
mov
add
and
sahf
add
fdivl
enter
sub
push
lahf
and
jne
push
test
add
gs
mulb
shll
push
add
xchg
cmp
or
mov
or
lds
add
fs
pop
add
mov
cmp
jg
rcrb
out
sub
ljmp
add
inc
sbbb
mov
stos
adc
std
aad
and
adc
mov
sbb
js
mov
cmp
ja
jecxz
mov
es
xor
add
dec
inc
cs
imul
enter
adc
sub
aad
aas
pop
sbb
lods
out
xor
repz
mov
js
sbb
rcrb
mov
mov
rclb
cwtl
add
rcl
cmp
inc
in
ficompl
lods
pop
pop
push
add
test
lret
sub
sahf
add
mov
inc
add
and
pop
jae
add
insb
mov
add
fldt
adc
mov
cld
aad
loop
jle
mov
add
cli
mov
xor
das
sub
cli
roll
xchg
insl
jne
add
mov
daa
int
aas
xchg
in
pop
mov
add
mov
cmp
jge
dec
mov
rcll
sbb
jbe
test
dec
jmp
andb
stc
icebp
popf
add
into
stos
push
add
mov
jns
loopne
or
jno
sub
push
arpl
dec
inc
pop
and
sbb
pop
pop
add
lcall
cmp
cmpsl
jg
and
mov
sbb
sbb
add
cwtl
or
fisttpll
movsb
scas
pushf
add
cli
addl
sub
xlat
mov
mov
int
nop
loop
xchg
ja
sub
adc
cmc
push
gs
cmp
push
and
std
and
ds
xchg
lahf
jnp
out
cmp
cmpsb
add
jg
xchg
sub
xor
stc
jb
add
inc
add
mov
frndint
mov
add
pop
stos
lret
lock
push
mov
push
dec
lea
movsb
xor
loopne
jne
jg
lds
sub
into
loope
jl
sbb
dec
inc
ror
cwtl
lcall
ret
enter
add
xor
inc
loopne
mov
xchg
cld
pop
popa
push
rcrb
cmp
test
in
vmwrite
fstps
mov
cmpsl
cwtl
ljmp
popf
push
roll
jp
dec
inc
jge
mov
cli
cmpsb
dec
mov
lock
push
movl
loop
add
jo
jmp
add
lahf
in
fadds
and
jne
dec
shll
add
mov
sbb
data16
adc
loop
shrb
and
mov
pop
dec
sub
pop
push
aas
push
iret
addl
add
dec
jl
add
test
jp
xchg
mov
jge
xor
or
jno
ret
fadds
fisttpl
ds
pop
mov
sbb
or
xor
cmpsb
dec
jbe
mov
iret
or
es
sbb
int3
adc
dec
push
add
dec
jl
sub
movsb
scas
cmp
into
lds
mov
insb
rolb
push
mov
mov
loopne
bound
push
mov
mov
cmp
ret
sub
insl
test
xlat
push
testb
xor
add
cwtl
mov
pop
stos
sbb
insb
leave
add
jbe
ror
push
test
sub
pop
inc
clc
out
enter
loop
cmpsb
inc
cmpsl
inc
out
add
or
push
add
sti
cmp
negb
or
mov
shll
repnz
data16
add
cwtl
push
xchg
out
add
jmp
popf
push
jp
popa
sahf
lods
add
push
lahf
push
aam
and
in
push
adcl
pop
sbb
test
mov
dec
jg
add
push
pop
mov
aam
xor
xacquire
cmpsb
into
mov
add
xchg
jne
aas
arpl
dec
mov
lret
add
insl
dec
mov
nop
jmp
jnp
lds
push
push
sub
sbb
adc
test
shrb
hlt
or
mov
add
out
jbe
or
popa
xchg
cmp
clc
cmp
or
fdivrl
xor
popl
fwait
pop
xchg
or
mov
push
mov
aam
push
xchg
les
lods
hlt
mov
pop
dec
lock
sub
mov
jmp
filds
inc
test
fwait
add
xorl
adc
dec
aaa
adc
add
cltd
jbe
fimuls
fildl
test
jns
lods
imul
out
add
inc
shlb
roll
inc
jp
ret
pushf
pop
pusha
sub
xchg
mov
in
fbstp
jl
mov
push
sarb
leave
fsubrp
mov
and
std
or
test
push
aas
add
lods
js
push
mov
jmp
add
enter
add
sahf
shlb
cld
mov
push
jmp
repz
adc
dec
lds
add
cs
adc
rcr
nop
jo
inc
dec
int
add
adc
scas
lds
cmp
inc
enter
or
sbb
jle
add
mov
fcomps
push
add
mov
xchg
mov
jo
push
dec
add
sahf
int3
mov
dec
outsb
mov
lcall
sti
mov
rolb
sahf
outsl
inc
push
pop
hlt
movsb
inc
add
movsl
lds
adc
lods
jmp
pop
addb
fs
sub
adc
add
xchg
in
mov
fldl
addb
nop
mov
add
out
push
add
filds
push
and
push
movsb
shll
icebp
add
dec
fcoms
pop
lret
pop
push
jns
push
push
lods
int
or
push
add
xchg
inc
mov
inc
mov
xchg
sub
ds
mov
and
mov
lahf
and
push
or
cmp
std
add
loopne
inc
jne
mov
mov
imul
add
sub
out
or
push
mov
lcall
cmpl
lock
add
popa
fwait
sub
xor
mov
into
and
cmc
out
sub
mov
lods
xor
xlat
fldln2
or
shlb
add
mov
enter
les
data16
ret
add
scas
pop
nop
push
jne
dec
inc
push
cwtl
inc
cltd
mov
rolb
sub
pop
out
mov
arpl
test
sub
pop
jmp
push
push
ret
push
fcmove
gs
jmp
pop
fmuls
inc
xchg
addr16
mov
mov
mov
repz
out
popw
addb
xor
xchg
orb
popf
out
add
fcmovne
add
cs
jl
stos
jge
nop
je
gs
and
outsl
mov
pusha
jge
sahf
inc
jecxz
mov
lods
add
into
push
data16
add
mov
mov
add
lret
cli
pop
push
cmp
loopne
test
inc
cmpsl
or
movsb
imul
inc
into
shlb
sbb
nop
push
mov
in
cld
or
add
cmpsl
xchg
jmp
lcall
dec
sbb
sbb
rorl
lods
mov
bound
pop
cld
enter
ljmp
push
cltd
aaa
mov
sbb
sub
adc
xor
add
jbe
cmp
mov
mov
stc
aaa
jne
add
mov
push
add
pop
adc
or
sub
int
insl
xor
repz
dec
call
ret
cmp
mov
jg
xlat
jb
test
cld
clc
mov
mov
gs
push
pusha
out
jnp
das
pop
outsl
cmpb
pusha
sub
or
out
jl
jle
mov
pop
mov
xchg
xor
js
mov
add
sbb
incl
clc
push
cwtl
insb
loop
push
adc
jae
add
es
inc
sarl
addr16
mov
and
adc
das
inc
adc
js
lds
pop
or
and
xor
insb
dec
lahf
cmp
shlb
pop
xor
mov
xorb
ljmp
push
adc
aaa
ret
push
rcrl
cmpsl
or
push
jae
gs
bound
orb
push
hlt
mov
cli
cmpsb
jo
mov
test
mov
pop
insb
out
push
testl
inc
jl
js
pusha
shrl
jnp
push
out
jns
lods
jg
pusha
cltd
iret
adc
cmp
dec
xor
push
xor
movsl
add
sbb
jmp
dec
xor
add
aad
jp
cmp
loopne
cmp
push
xchg
mov
pop
or
aad
or
push
add
pop
jns
mov
enter
nop
cmc
lock
push
cmp
gs
mov
dec
sbb
orb
inc
sub
lahf
scas
dec
idivl
ss
and
add
shrb
insl
ret
adc
xor
xchg
lods
xlat
scas
push
lahf
enter
cmp
testl
mov
sbb
sub
add
pop
jge
mov
mov
lods
cmp
ds
out
and
repz
insb
hlt
hlt
push
add
inc
push
pop
push
push
arpl
push
rcl
sahf
aas
fiadds
add
int3
shlb
loopne
les
push
lock
add
xor
shlb
cmp
push
fidivs
pop
cmpsb
add
fnstenv
cmp
enter
pcmpeqd
adc
push
cmc
fsubl
fildl
mov
xor
les
add
test
aas
ficompl
pusha
push
mov
ret
rcrb
sub
mov
inc
aad
sbb
or
mov
and
loope
push
inc
dec
outsl
insl
insb
add
pmaxub
add
je
sub
jg
sbb
cmpsb
sti
mov
add
rcrb
push
inc
add
dec
add
pop
outsl
push
inc
adc
ss
hlt
cmpsl
or
or
out
push
and
inc
insb
jl
xor
pushf
decb
loopne
jbe
add
sbb
enter
jne
movsb
inc
mov
scas
test
addl
aam
cmpsl
ljmp
push
pop
mov
rorb
add
sbb
out
mov
pop
ja
mov
and
xchg
dec
faddp
pop
je
jno
add
cld
push
aas
aaa
inc
lods
add
fstps
or
sbb
rcr
add
cmp
inc
or
pop
and
cmp
pop
adc
jbe
inc
add
jb
lcall
les
xchg
add
cmc
xchg
xchg
sub
imul
stc
add
movsb
test
xor
subb
fadd
jmp
jecxz
mov
sti
dec
gs
sbb
adc
repz
mov
add
ljmp
sub
addl
xchg
stos
fcompl
jg
and
sub
and
cmp
adc
xchg
add
sbbb
inc
inc
rcll
inc
inc
pusha
call
outsb
push
adc
outsl
adc
or
mov
and
and
mov
gs
cmp
scas
add
dec
push
into
in
cltd
pop
add
xlat
cmp
or
lock
js
jae
mov
call
lcall
jg
sbb
dec
rcrb
add
jle
jns
jne
add
jnp
adc
pop
jae
inc
inc
adc
pop
lret
mov
cmp
lahf
repz
add
jns
adc
add
sub
sbb
lods
nop
aad
push
mov
lcall
js
push
ret
hlt
or
xor
stos
add
int
pop
cld
pop
push
jecxz
mov
faddl
cmp
loope
rorb
add
aam
arpl
mov
pop
and
pmullw
lods
aam
sbb
xchg
push
in
cmp
jl
cmp
aam
lret
orb
xor
dec
jo
arpl
cwtl
pusha
pop
xchg
mov
leave
jb
add
jnp
jmp
xor
fdiv
jno
sbb
and
jle
add
sub
push
repz
gs
jmp
add
sti
rorb
fdivs
int3
sub
cmpsb
mov
mov
pop
in
add
push
sub
mov
mov
fidivrl
add
call
mov
add
mov
flds
push
lahf
cs
iret
pop
cld
test
add
test
add
xor
add
jl
or
scas
sahf
xor
aaa
xchg
fistpl
push
mov
cmpb
call
stos
enter
xchg
inc
loopne
fstl
add
popf
dec
cmp
adc
jbe
or
push
or
jmp
sbb
mov
sbb
mov
popa
adc
aaa
sbb
testb
push
xchg
ljmp
pop
add
mov
lcall
adc
ficoms
push
cmp
mov
pop
push
std
and
add
pop
mov
insl
cld
add
lods
mov
cmpsl
push
dec
cltd
lea
es
mov
fstl
mov
push
add
outsl
movsl
sub
add
xchg
cmc
xchg
fwait
or
cmp
mov
mov
nop
inc
add
xchg
int3
push
xchg
jecxz
repnz
fucomip
jge
rcrb
xor
xchg
add
stc
mov
sbb
adc
add
ds
or
lods
mov
mov
jb
dec
push
ja
call
in
xor
mov
nop
sbb
or
or
inc
test
inc
xchg
add
sti
or
add
add
cmpb
out
mov
or
and
lods
push
aas
sub
pusha
jno
sub
cld
test
mov
sbb
add
insb
inc
roll
sub
jl
push
xchg
mov
add
lret
add
push
sub
or
bswap
orb
addb
shll
adc
xor
test
mov
ds
sbbb
xchg
in
pushf
add
addr16
js
cmpsb
inc
loop
cmp
cmpb
mov
test
testb
dec
add
push
sub
mov
mov
daa
xchg
lahf
stc
ds
add
jbe
subb
pop
mov
xchg
inc
lods
add
lcall
mov
aas
xchg
les
push
mov
shl
pop
push
cmp
call
xor
stos
jbe
cwtl
xchg
dec
mov
add
lret
xor
pop
int3
xor
dec
popf
lock
icebp
test
in
ret
cmp
xchg
jge
add
jle
out
and
ret
sbb
ds
rcl
imul
mov
mov
je
sti
stc
sub
mov
push
mov
movsl
ret
mov
nop
xchg
fimuls
and
sub
mov
fldt
filds
imulb
add
jns
jecxz
in
sar
xchg
maskmovq
divl
and
test
clc
or
mov
imul
or
mov
or
sahf
pop
lret
nop
cmp
cmp
ret
fsub
addb
add
and
cld
mov
inc
mov
cli
inc
adc
popa
jecxz
adc
or
add
jne
xor
mov
add
pop
cmc
pavgw
sbb
inc
imul
add
pop
jecxz,pn
dec
jge
ja
add
test
add
push
xchg
and
fsubl
add
add
jo
pop
xchg
mov
jl
pop
push
pop
pushf
stc
sbb
clc
addb
mov
jno
xor
filds
add
in
sbb
jo
int3
sbb
mov
inc
pop
push
lret
cmp
xchg
pop
pushf
xchg
leave
mov
adc
in
lds
mov
mov
mov
int3
and
mov
insb
push
xlat
jb
add
cltd
cmpsl
or
movsb
add
push
lahf
in
pushf
push
sbb
push
or
push
and
dec
add
test
add
hlt
cmpsb
xor
test
rcll
lods
inc
das
jecxz
xor
mov
ret
lock
shrb
mov
or
clc
int
fdivr
adc
push
xor
xchg
mov
xchg
add
aaa
std
stc
xchg
sahf
dec
xchg
pop
jb
cmp
jg
pop
outsb
cwtl
add
cmp
stos
dec
pop
ja
fs
cmp
lods
andb
movb
inc
ja
pop
or
lret
add
les
in
xor
ss
out
add
repnz
cli
mov
lods
push
scas
add
push
loopne
iret
sbb
movsl
movntq
loopne
mov
fidivrs
and
push
mov
push
enter
adc
aas
lret
mov
inc
pop
stc
das
stos
lock
in
sub
add
and
mov
mov
xor
sub
in
add
js
fnstenv
test
outsb
push
add
inc
dec
jns
xchg
mov
inc
testl
dec
and
dec
cwtl
rcll
cli
inc
mov
in
fistpl
fwait
xchg
sbb
fsts
add
dec
fstl
das
imul
loopne
add
call
repz
ret
mov
incb
in
sub
cmp
cwtl
or
sbb
es
movl
test
mov
pusha
mov
cltd
out
add
mov
mov
add
sbb
iret
add
push
jecxz
and
jo
rcll
mov
sti
mov
push
into
mov
xchg
loopne
and
loopne
jl
pusha
mov
sub
mov
cmp
cs
pop
sbb
andl
adc
mov
mov
jecxz
jl
pop
mov
xor
mov
clc
cmp
loopne
fwait
mov
je
pusha
icebp
ds
outsl
push
xor
jp
adc
call
leave
outsb
aas
rcll
mov
test
shlb
adc
in
pop
movsb
mov
arpl
inc
xchg
sub
lcall
andl
adc
cmp
xchg
pop
mov
xchg
outsb
lcall
in
mov
loopne
ss
rcrb
cmpsl
daa
push
cmp
lods
in
pop
repz
jg
loopne
inc
fiaddl
out
subb
cmp
or
pop
add
sbb
xor
mov
push
jno
in
fisttpll
dec
pop
jp
cmp
ds
add
pop
sbb
lsl
stos
hlt
fmull
and
pop
mov
lret
add
add
icebp
test
cld
add
add
ds
add
dec
rorl
addr16
or
jmp
and
negb
out
sbb
lahf
je
jl
jl
cmp
lock
std
xor
xor
jo
or
cmp
jns
mov
xchg
pop
icebp
mov
xor
xor
pop
add
shr
mov
aaa
faddl
cmp
mov
jg
push
pop
and
js
jp
add
mov
push
or
add
in
bound
popa
add
fcoml
pop
mov
push
cltd
lods
cmpsb
add
add
mov
enter
pop
imul
shl
mov
fsubrs
faddl
insl
sbb
stc
and
xchg
cli
jmp
ljmp
lock
leave
add
repz
cmp
jae
sub
in
ret
pop
or
push
call
lods
mov
jb
pop
and
add
out
cmp
pop
or
fistpll
imulb
enter
dec
pop
lret
aas
pop
jno
testl
dec
sub
incb
dec
inc
rorl
add
mov
xor
xlat
jmp
adc
add
sbb
popf
jmp
mov
or
outsb
add
cs
pop
lods
add
popf
out
mov
xchg
mov
pop
insb
shlb
jmp
add
and
inc
cmp
test
cli
fsubs
mov
leave
cmpsl
mov
inc
lret
inc
popf
cmp
adc
push
andb
adc
je
add
jo
andl
stos
mov
cmp
mov
add
xor
flds
sbb
dec
mov
ljmp
push
stc
orb
mov
data16
mov
or
sbb
iret
mov
xchg
cmp
or
andb
faddl
mov
repnz
popf
pop
clc
test
in
imul
out
loope
push
test
and
xchg
cmp
push
mov
mov
loopne
xor
les
mov
mov
add
arpl
das
add
push
inc
jnp
jne
mov
pop
and
or
mov
push
jecxz
push
std
shll
std
es
add
ror
dec
mov
les
ss
push
rcll
xchg
dec
push
xor
mov
and
insl
cli
or
adc
test
orl
mov
in
push
aam
sub
pushl
sbb
mov
in
xor
roll
in
or
or
mov
rcrl
sub
in
ret
rclb
adc
scas
add
repnz
push
cmp
test
ret
js
pop
fisubl
lods
aad
mov
adc
mov
out
pop
sbb
push
push
sti
mov
fldl
insb
add
mov
jle
sub
sbb
jmp
add
or
es
push
mov
inc
stos
lock
jmp
add
stc
enter
add
jne
adc
divb
xchg
sbbb
out
mov
les
cwtl
or
mov
pop
jmp
shl
sbb
insl
mov
xor
shlb
pop
add
insb
loop
in
xorl
mov
and
push
xor
cmp
inc
or
mov
sub
fwait
push
dec
adc
arpl
outsb
sti
add
mov
jo
jg
xor
psrlw
lods
jo
cmp
enter
and
cs
arpl
add
lods
lret
inc
mov
scas
je
jg
add
jmp
xlat
inc
push
or
movsb
sbb
dec
xchg
sub
adc
jge
push
aad
test
add
sbb
test
cld
pushf
test
mov
add
lcall
imul
or
sbb
xchg
jl
jge
push
sub
cmp
loop
repnz
xchg
adc
xor
add
or
scas
mov
jl
add
rclb
jmp
push
jbe
jge
push
es
ret
mov
inc
jno
or
dec
sbb
cs
shlb
loope
iret
pop
pop
mov
xlat
sub
add
xchg
xchg
fildll
dec
add
mov
fistl
xor
int
pop
cmp
les
xlat
or
push
ds
mov
scas
sbb
test
fadd
mov
pop
in
fidivrl
in
std
int3
dec
xchg
data16
pop
ficomps
sub
pusha
ja
mov
push
lahf
enter
cmc
es
add
mov
adc
mov
and
clc
cmp
test
adc
mov
push
test
gs
loop
popl
cmpb
aas
push
or
call
in
call
sbb
addr16
inc
movsb
ret
jecxz
cmp
adc
fdivs
push
pop
inc
add
aad
outsb
or
insb
push
repnz
shrb
mov
outsl
or
aad
clc
mov
stos
sbb
adc
push
out
cmp
insb
testb
adc
dec
aas
mov
popf
lock
push
hlt
push
syscall
fimuls
stos
pop
xor
add
add
fld
cltd
stos
data16
imul
push
jle
push
and
pop
pop
enter
xchg
outsb
mov
pop
pop
mov
dec
popa
jb
stc
orb
mov
aad
lock
stos
dec
cltd
filds
and
lret
push
cli
fisttpl
and
add
mov
xchg
xchg
daa
jo
es
pusha
inc
movsl
mov
pop
mov
scas
inc
leave
add
xchg
add
or
test
out
pushf
je
rcl
cwtl
pop
pop
aas
add
adc
mov
push
xlat
jecxz
movsb
or
jbe
test
scas
add
sarl
mov
add
fsubs
xchg
push
hlt
adc
pop
jbe
lock
movsb
ljmp
pop
ror
hlt
shr
add
inc
ljmp
jmp
mov
mov
mov
movl
pop
lods
clc
call
lds
xor
pop
setge
fmull
out
xchg
in
lea
jns
mov
cmp
mov
lods
pop
adc
adcb
fbstp
call
sub
pop
pop
adc
test
sti
xor
add
mov
inc
or
add
cmpsb
xchg
jmp
cmp
add
insl
inc
add
lock
fs
add
jb
lret
sbb
add
int3
lret
pushf
cmp
sarb
push
mov
dec
pop
orb
out
je
pusha
mov
call
mov
add
sbb
scas
mov
mov
and
ljmp
addb
pop
es
in
movsb
xchg
ja
sub
mov
and
and
mov
pop
sub
ret
xchg
push
cmpsl
aaa
jg
popa
clc
add
adcl
xchg
pusha
leave
inc
or
loope
enter
mov
test
insb
ret
div
jg
cld
mov
sahf
loope
and
mov
sbb
and
xchg
dec
jo
xor
xor
push
int
inc
adc
and
push
das
fnstenv
mov
add
lcall
jne
aaa
push
pop
dec
adc
mov
sbb
inc
add
lock
add
add
and
call
das
inc
push
dec
xor
jae
into
jg
movsl
lahf
push
cltd
add
out
and
std
fnop
mov
add
mov
ret
pop
mov
add
test
aad
add
rolb
mov
push
jno
rcr
pusha
add
lret
mov
and
xchg
ds
jmp
push
arpl
jae
jecxz
out
outsb
dec
push
mov
lock
insl
imul
sbb
data16
rolb
mov
cmpb
cmpb
mov
mov
popf
sbb
push
mov
movb
add
shll
xor
sbb
ffreep
fcoml
adcb
push
ret
cmp
push
xchg
insb
adc
pushf
out
fildl
add
pop
xchg
rol
add
mov
leave
push
arpl
fwait
ret
add
fdivrp
fdivs
enter
jae
jnp
add
xchg
and
repz
pop
fs
call
sbb
mov
inc
in
mov
xchg
sti
sub
adc
sbb
arpl
add
push
mov
in
lret
pop
inc
lock
mov
mov
sub
add
sub
mov
or
inc
xorb
fwait
enter
sbb
dec
pop
das
pushf
scas
sub
loope
jae
xor
adc
cmpsl
test
inc
es
inc
scas
arpl
jns
adcl
and
mov
push
insl
cmp
xor
mov
xchg
jno
pop
push
cmp
pusha
jl
andb
roll
mov
add
add
mov
mov
std
mov
add
cmp
and
daa
sbb
ror
jbe
loop
inc
les
shl
mov
lahf
add
sub
arpl
pop
lds
push
ficoms
xchg
out
test
aas
loopne
sbb
out
cld
mov
cmp
and
pop
pop
sbb
add
fnstcw
sbbl
xor
je
add
das
jge
mov
xchg
pop
arpl
fdivl
add
js
cli
xor
jno
add
mov
push
mov
inc
push
test
jnp
jmp
aad
pushf
pop
lcall
rorb
add
negb
pop
pop
cli
add
jge
push
jb
pop
pop
cltd
dec
jnp
add
lods
adc
in
add
divl
incb
xchg
lcall
mov
pop
adc
test
and
dec
lcall
add
fmuls
add
into
sbb
test
fildll
cmp
pop
loopne
push
jo
jns
add
push
stos
or
scas
jbe
add
xor
sub
aad
cmp
or
test
test
mov
pop
and
cld
out
mov
add
push
lods
cmp
inc
mov
xor
loopne
lock
sbb
mov
add
sti
aas
inc
xchg
call
out
and
ljmp
xchg
popa
mov
add
add
cmpsb
mov
add
and
pop
cmp
cmp
jmp
inc
sbb
sbb
push
mov
jo
call
jae
sarl
jecxz
mov
in
in
test
bound
xchg
ret
mov
adc
nop
push
inc
test
xlat
stc
mov
jb
lods
dec
sbb
push
fs
data16
add
adc
jmp
out
mov
dec
push
xor
xchg
out
repz
or
pop
int
fisubs
sbb
add
fadds
add
mov
add
cmova
pop
std
dec
out
outsl
and
loopne
ds
inc
je
push
fwait
dec
ret
mov
adc
sub
iret
dec
jne
mov
jecxz
sbb
dec
add
ja
lahf
push
lods
sbb
enter
add
jecxz
outsl
push
dec
mov
and
ss
cmp
testb
pusha
mov
mull
add
in
insb
int3
xchg
lret
push
lcall
cld
movl
cmp
lock
es
ds
xchg
inc
out
out
cmp
pop
cli
and
inc
push
add
int3
fstpt
mov
push
cs
push
xor
out
pop
adc
inc
sahf
mov
add
lods
jb
inc
sti
hlt
or
jmp
call
and
in
jle
aaa
xor
sti
in
rolb
loop
cmp
jg
add
nop
mov
cmp
add
or
sbb
xchg
add
pop
dec
sub
xchg
sbb
cmp
loop
fsub
cmp
inc
jne
adc
dec
cmp
int3
je
mov
cs
dec
cmpsb
add
pop
pop
add
jns
dec
jno
add
test
loope
mov
xchg
add
mov
ss
shr
cmp
cld
daa
add
xchg
and
pop
arpl
or
das
adc
fldenv
jae
add
push
stc
sub
scas
testl
pop
ficoml
mov
sahf
mulb
loope
add
jnp
jp
jns
jle
add
add
push
cmpb
xchg
jp
add
push
mov
fstpt
add
sti
loopne
cmp
into
pop
lock
dec
add
lods
and
cmp
jle
mov
rolb
mov
xchg
pusha
sub
xor
push
sarb
iret
cmp
and
icebp
cmp
lods
mov
sub
push
push
cmpsb
cld
add
rclb
cld
outsb
add
into
out
sahf
shlb
pop
pop
in
insb
or
mov
xchg
add
mov
xor
push
pop
add
or
sub
mov
lds
lods
aad
add
popa
imul
xchg
outsb
dec
add
shll
std
movups
pop
scas
cmp
lcall
test
xor
jo
stc
add
filds
in
mov
fwait
and
pop
neg
and
jle
push
sbb
addr16
or
fsubs
add
sbb
clc
popf
imul
aaa
mov
mov
jne
test
out
sbb
and
push
pop
mov
enter
add
hlt
adc
int3
pushf
cmpsb
stos
add
add
je
rcl
push
aas
sbb
stc
push
cmp
xchg
imul
dec
leave
ret
pop
push
xlat
in
nop
jge
fldl
ret
pop
add
ljmp
dec
push
pop
xchg
add
jle
xchg
aad
jmp
cmpsb
leave
int3
pop
push
cmp
orb
mov
je
daa
sbb
xchg
mov
js
inc
jo
add
orb
cmp
mov
add
jo
stos
or
fnstenv
int
xor
loope
rorl
jbe
and
mov
sbb
sbb
ret
repz
iret
sahf
lret
nopl
push
hlt
add
enter
scas
or
jl
mov
add
fsubrs
dec
add
sub
add
je
andb
mov
mov
cmp
mov
jp
clc
pop
add
sub
pop
add
xchg
stos
jo
loopne
and
push
adc
jle
repz
ds
push
popf
pop
cmp
mov
adc
mov
lahf
inc
data16
rol
push
and
testb
push
jg
hlt
popf
add
adc
es
negb
repnz
pop
xchg
jl
dec
push
adc
js
std
ret
mov
mov
push
loop
outsb
cmc
psubusw
inc
arpl
add
loope
pop
testl
jb
add
ret
mov
mov
add
sbb
aaa
ljmp
ret
lods
ret
dec
add
cs
lds
or
mov
cmp
pushf
rorb
push
dec
adc
add
pop
jmp
add
ljmp
mov
jg
pop
add
test
inc
in
add
lret
aas
into
xor
je
in
add
or
movsl
and
add
push
mov
add
cmpsl
and
jne
add
in
sbb
pop
xor
add
into
adc
add
sbb
cmp
or
jg
add
mov
inc
sub
add
xchg
sahf
mov
cmpsb
sbb
gs
aas
sbb
mov
imul
push
pop
cli
xchg
les
mov
cmpsl
test
or
int
add
adc
xor
stos
add
cmp
in
in
test
insl
dec
add
and
adc
mov
bound
push
sbbl
add
and
jnp
aam
orb
jp
mov
add
pop
xor
icebp
adc
call
popf
mov
aad
ja
xchg
xchg
mov
mov
dec
pop
pop
std
orl
add
ja
lea
fstpl
inc
cli
out
sub
dec
add
test
mov
add
mov
insl
roll
dec
loope
or
mov
test
dec
add
mov
push
pop
pop
iret
lea
add
ja
movsl
test
in
xchg
add
push
jnp
scas
sub
add
jne
out
adc
inc
mov
sbb
mov
rolb
icebp
fiaddl
push
dec
mov
cmp
add
rolb
outsl
and
push
xor
add
in
mov
and
push
pop
rcll
add
jl
cs
add
fptan
faddl
pop
add
and
pop
add
sbb
addb
mov
das
add
dec
mov
out
add
clc
xchg
sbb
push
ret
xor
addr16
aas
mov
adc
rorl
dec
jae
movb
xchg
movsl
adc
cmp
lock
xor
jae
add
fcmovb
dec
pop
xchg
mov
and
jnp
add
xchg
pop
pop
pop
addl
xor
mov
add
popf
pop
xchg
jge
cmp
jo
adc
push
pop
clc
cld
sbbb
jno
lahf
inc
xorl
not
cmp
xor
pop
and
jle
ret
sub
cltd
jne
push
clc
stos
out
aas
inc
outsl
cmp
in
popl
into
fucomip
fwait
mov
lods
inc
adc
xor
out
in
scas
mov
add
and
pop
ret
mov
add
xlat
mov
stos
sbb
ja
sbb
mov
add
push
js
lahf
adc
rolb
scas
or
addl
xor
in
inc
sub
mov
cmc
and
cs
mov
add
adc
sbb
add
mov
or
mov
aas
inc
scas
stc
pop
int3
add
push
jl
add
nop
cmpsl
aam
cli
add
js
cmp
pop
jb
lea
sti
es
orb
jp
shrb
xchg
or
sahf
cmp
ja
popa
loop
sub
add
fwait
and
pop
loopne
pop
in
add
mov
add
xchg
cmp
loope
add
xchg
mov
xor
andb
sub
fnstenv
rcll
add
aas
jo
cmp
pop
add
and
ja
push
movb
cld
jmp
mov
ffree
imul
sahf
sub
insb
roll
and
xchg
gs
push
lock
mov
or
inc
loope
stos
adc
add
outsl
jno
add
add
fimuls
or
mov
inc
push
imul
enter
dec
xchg
add
jae
cmp
adc
enter
loopne
add
pop
ret
jno
int3
jnp
push
and
mov
test
xor
popa
stc
jbe
add
sbb
cld
xcrypt-ctr
cmpsl
fnstenv
shlb
clc
add
mov
xchg
mov
nopl
icebp
add
and
xor
push
fsubs
add
mov
stc
xchg
fldl
mov
movsl
jmp
add
jg
add
inc
lcall
lret
int
jecxz
mov
mov
push
pusha
roll
cmpsb
aas
jno
loopne
cmp
jbe
cltd
mov
add
jo
or
fdivrs
mov
mov
ucomiss
ds
jle
add
lods
dec
out
or
add
sub
cmpsb
es
sbb
push
add
popf
insb
hlt
push
lahf
mov
dec
jge
ja
jle
add
pop
iret
or
adcb
and
dec
sbb
xchg
pop
mov
test
in
int
sub
mov
insb
mov
arpl
pop
push
mov
push
ljmp
push
inc
cmp
jg
leave
jno
movsb
adc
fisttpl
sub
sbb
pop
sub
mov
pushf
andb
popf
inc
jno
repnz
sub
xchg
popa
add
les
fadds
xchg
mov
out
popf
push
lret
adc
mov
adcb
fbstp
add
adc
xor
cli
cltd
inc
cld
add
xchg
imul
xor
lock
sbb
ja
cmp
add
mov
cmc
cmp
aaa
mov
dec
mov
jo
in
cmp
in
lret
mov
add
je
fwait
mov
mov
push
imul
test
xor
int
movb
xor
sbb
sbb
add
pop
jbe
add
lea
add
out
sbb
pop
dec
lock
add
movsl
out
sbb
shlb
and
xchg
add
clc
lret
jmp
flds
pop
sub
ds
in
outsb
test
xor
xor
push
add
pop
push
push
outsb
outsl
lret
dec
aad
add
push
xchg
fidivs
add
inc
je
push
sbb
pop
inc
xchg
iret
jbe
rolb
lock
sub
shlb
stc
scas
ret
inc
or
sub
add
ds
jae
dec
pop
push
fmull
xorb
stos
ficoms
dec
and
add
ja
andl
push
adcb
ficoml
or
lgs
test
add
jb
jl
cmp
add
stos
cmpsl
sub
fiaddl
ja
rorb
jl
add
and
sub
add
jmp
jl
test
ljmp
lret
add
orl
es
in
pop
add
pop
add
pop
adc
push
xchg
icebp
aaa
shlb
es
repz
bound
loopne
add
jecxz
push
adc
std
add
jl
xchg
add
mov
stos
cmp
scas
pop
outsb
movsl
adc
mov
out
sbb
insb
les
test
mov
pop
or
add
mov
repz
cmp
mov
shll
lcall
lret
sbb
ja
jnp
out
call
sub
add
jle
push
jno
in
sub
lods
adc
int3
lret
xor
repz
sarl
les
add
adcb
popa
cld
mov
add
test
sub
xor
pop
scas
into
push
outsb
sbbb
xchg
add
les
aam
mov
jmp
and
xor
or
pop
fwait
lret
fcoms
inc
clc
add
sub
mov
mov
enter
mov
push
cmp
ficompl
lock
test
jbe
add
add
clc
daa
outsl
gs
xchg
movsl
add
ds
push
adc
dec
cmp
push
cmp
sbbb
fildll
stos
add
stos
mov
jbe
add
lds
jns
mov
inc
sbb
mov
fsts
jbe
add
cs
inc
xor
fmull
insb
out
les
ret
add
sahf
inc
push
mov
push
mov
add
dec
jp
shrb
enter
mov
mov
cmc
loope
inc
loop
sub
les
mov
sarb
jmp
adc
inc
clc
cmpsb
xor
mov
add
pop
xchg
and
mov
fwait
push
jbe
jp
sbbb
enter
ficoms
push
jns
loop
and
adcl
out
push
imul
cmpsb
push
aaa
mov
fsubl
loopne
mov
mov
xor
ja
sbb
daa
fistpll
jecxz
or
adc
add
int3
sub
and
jbe
mov
add
nop
lcall
sbbl
add
push
syscall
lret
in
roll
ret
jl
jmp
sti
rcrb
test
xchg
or
mov
fcoms
pop
mov
jno
ja
sbb
out
push
bound
lock
sbb
loope
out
cmpsl
mov
xchg
jns
pop
adc
xchg
cmp
xchg
adc
xor
int3
add
pop
jp
sahf
and
imul
push
mov
xor
dec
lea
lds
nop
out
cmp
lock
pop
es
lock
movl
into
sarl
es
and
add
iret
mov
push
xchg
push
add
pop
adc
div
push
cli
cmp
jl
add
cmpsl
rclb
push
movsl
je
dec
sbbb
pop
push
add
inc
or
push
jg
pop
outsl
outsb
add
shl
rcrb
or
in
adc
call
add
xchg
mov
mov
inc
add
cmpsb
pop
insl
movsl
push
pusha
ret
push
or
lahf
dec
sbb
xchg
mov
sub
repz
insb
adc
les
adc
mov
jg
mov
repz
cmc
jb
add
push
cld
inc
xor
cmp
test
je
lock
mov
add
jbe
ds
mov
mov
add
stc
cmpsb
dec
dec
gs
add
cmc
inc
cmp
shr
xchg
test
cmpsl
enter
pmaddwd
outsl
pusha
mov
jge
ja
jns
rorl
scas
sub
movsb
ret
push
mov
test
jecxz
imul
enter
insb
add
cwtl
mov
and
xlat
jne
adc
icebp
stc
add
popf
out
leave
inc
sbb
add
pop
mov
inc
aam
call
les
jp
clc
lods
add
pop
jmp
add
sub
in
jge
cmp
movl
outsb
mulps
or
add
data16
add
push
jne
adc
mov
xchg
add
fsubrs
jb
mov
aam
adc
sub
and
ror
add
and
fmull
inc
nop
xchg
add
ret
push
jecxz
cmp
pop
and
iret
push
xchg
jp
pop
jno
add
mov
lock
xor
sub
sbb
mov
test
adcb
cltd
clc
outsl
ds
push
pop
jcxz
aam
fidivrl
sti
push
sub
add
mov
adc
and
in
add
jmp
sub
cwtl
js
push
dec
dec
push
mov
or
mov
add
fiadds
dec
pop
xchg
rol
enter
mov
fsubrl
dec
stc
ret
add
mov
popf
push
and
sbb
jb
dec
jl
sti
dec
imull
mov
insb
mov
dec
or
push
test
mov
dec
lds
enter
lods
cmpsl
ss
cmpb
mov
cmpsb
cmp
push
add
push
add
sqrtps
xor
jecxz
mov
xlat
out
in
jo
lahf
adc
cmpsb
jbe
pop
and
jns
cmp
add
xchg
push
ds
jb
rcll
lods
adc
xchg
lock
in
je
adc
lret
add
add
addr16
scas
lret
mov
mov
mov
add
add
clc
xchg
insb
mov
or
pushf
int3
add
dec
sub
cmpsb
mov
cmp
xchg
notb
jecxz
pop
lock
insb
jmp
pop
out
inc
push
jp
add
rolb
loope
in
sbb
xor
js
pop
xchg
or
pusha
and
mov
cmp
repz
add
pop
xor
loopne
cmpsb
and
jl
inc
test
jbe
outsl
mov
push
call
repz
adcb
add
test
cmpsl
inc
call
cmc
iret
mov
repz
jge
and
loope
add
mov
sbb
pusha
pushf
push
cmc
xor
pusha
stos
add
sti
das
jle
loope
inc
add
adcb
add
add
sub
movsl
call
inc
fistpll
repz
push
sbb
outsl
inc
lods
or
push
xor
mov
mov
jo
add
mov
cmp
stos
ja
and
insl
sub
mov
jp
pop
mov
sbb
bound
jge
dec
ss
sub
mov
int3
sub
shl
add
mov
add
add
dec
subb
add
imul
add
adc
xchg
rcrl
popf
iret
insb
add
loop
lea
push
cmp
pusha
cmp
add
movq
push
push
orl
mov
add
iret
add
jl
sbb
lret
shl
leave
pop
or
push
xor
pop
adc
nop
inc
je
test
jecxz
sub
fcmovu
mov
notl
dec
push
pop
add
inc
adc
sub
add
pop
jnp
les
inc
inc
movsl
jne
mov
dec
lods
stc
es
dec
add
mov
js
pop
movsb
push
not
xchg
lea
lret
pop
dec
in
xchg
mov
add
cmp
mov
sbb
int3
test
pop
out
mov
mov
test
add
or
or
pop
xchg
push
adc
outsl
mov
syscall
into
mov
nop
iret
es
mov
push
pop
stos
xor
inc
sbb
cmp
mov
xor
jecxz
ficomps
enter
popf
movl
push
lds
es
adc
cmp
int3
nop
lahf
ret
jne
fisttpll
addb
cmp
sub
addr16
loopne
add
push
cmp
imul
push
nop
xchg
add
push
out
mov
pop
loope
xchg
inc
enter
jns
add
jmp
sub
outsl
mov
insb
fisubrs
icebp
or
adc
cmpl
mov
or
or
pop
or
add
sahf
sbb
fsubs
lret
jmp
or
add
mov
mov
mov
int3
subb
or
cld
jg
cli
loope
cwtl
mov
mov
scas
lcall
rorb
pop
mov
hlt
out
inc
xchg
mov
mov
add
aam
test
testb
add
add
cs
rcll
insb
add
cmc
les
pop
sub
jns
sub
push
mov
lcall
dec
pop
xlat
fs
mov
cmpsl
in
aam
add
call
push
push
pop
imul
jmp
sahf
je
shlb
dec
add
fidivs
out
cwtl
adc
pusha
add
cld
xchg
mov
add
adc
fs
les
enter
in
jns
fisttpl
mov
push
ja
in
jns
pop
mov
pop
cmp
xchg
call
fbstp
aad
mov
push
decb
pop
scas
lahf
rolb
dec
push
jecxz
or
xchg
add
adc
or
and
les
add
add
mov
ret
sahf
aam
adc
addb
loope
dec
lret
add
jmp
mov
add
cmp
cltd
shrb
repnz
ret
mov
test
mov
jbe
mov
cmp
mov
or
adc
xor
add
scas
mov
add
cmp
xchg
sub
lret
lret
mov
testl
addr16
loop
cmp
movsb
add
sub
and
pusha
mov
data16
out
jne
addb
push
mov
xchg
or
stc
inc
imul
mov
mov
cmp
and
out
push
call
xor
dec
movsl
test
add
repnz
mov
pop
mov
cmc
cwtl
cltd
nop
push
out
adc
or
pop
sbb
movsl
xchg
shlb
addb
imul
cld
and
aad
and
push
inc
sarl
or
push
ja
paddb
and
xchg
filds
lods
push
mov
hlt
jae
sbb
lds
mov
push
adcl
sbbb
shlb
clc
add
jg
ret
enter
mov
pop
push
int3
sbb
add
xchg
or
add
sbb
mov
sub
mov
clc
inc
xchg
int
xor
cmc
shrl
add
ret
mov
pusha
pop
lods
ret
adc
rcrl
es
dec
rolb
xlat
push
dec
push
xor
add
outsb
pusha
or
dec
pusha
xor
mov
push
movsb
neg
int3
ror
rorb
sbb
pop
aas
and
and
or
stos
add
dec
rcrb
insb
hlt
scas
or
push
out
sub
mov
sub
or
pop
filds
and
fcoms
xchg
inc
bnd
roll
sbb
xor
push
sarb
sbb
mov
jnp
add
repz
pop
cmp
mov
xor
into
icebp
add
jne
movsl
out
or
nop
mov
nop
jo
dec
ret
fcomp
jl
add
push
setp
loopne
xor
mov
sub
lcall
mov
jns
fiadds
sti
sub
js
push
in
xchg
sbb
add
jae
add
xor
mov
push
mov
mov
icebp
push
add
push
jecxz
xchg
jg
mov
push
inc
jge
xchg
jmp
shl
lcall
mov
push
or
lret
add
inc
std
sbb
in
sti
add
add
call
adc
ss
add
ret
push
lcall
hlt
out
cmpsb
mov
jae
fs
mov
prefetch
or
enter
cmc
mov
lods
add
jbe
cli
testb
in
add
fldt
lret
adc
lea
sahf
inc
aam
add
push
test
jmp
dec
lcall
sbb
fisubrs
add
dec
lcall
nop
clc
cli
jl
pop
jnp
add
roll
push
ja
test
and
loopne
enter
je
add
std
push
mov
lock
stc
es
push
and
sbb
and
adc
mov
js
add
and
in
add
psrld
xor
jle
add
in
lods
xchg
add
out
sub
ja
popa
mov
cmp
andb
fadds
sbb
sbb
mov
xchg
shlb
sti
xchg
or
fs
cs
rolb
les
gs
aaa
rcll
ret
mov
jno
mov
add
xchg
sub
jns
mov
arpl
sbb
js
sbb
mov
add
jo
insl
push
mov
jns
test
push
lret
ror
sbb
add
movsb
int3
cmp
mov
popa
lds
add
xchg
and
out
jmp
or
shll
dec
scas
pop
lret
sub
shll
fnstenv
mov
jae
mov
push
lock
cmp
in
aas
add
sbb
dec
push
add
je
xchg
xchg
stos
pop
mov
loop
mov
in
xchg
fwait
jge
add
xlat
pop
add
stos
out
add
sbb
sbb
add
jecxz
cmp
lcall
je
pop
daa
lock
aaa
mov
addb
push
jg
js
movsb
and
addb
jmp
add
in
inc
cmpsl
xchg
cmp
add
popa
pop
popl
and
mov
pop
push
adc
mov
outsb
ss
mov
mov
jecxz
loopne
jmp
add
cmp
lock
inc
dec
rcrl
xor
push
pop
push
int3
add
inc
add
nop
jns
add
lcall
add
adc
into
or
clc
mov
shr
xlat
call
adc
xchg
fstpt
cmp
cli
or
out
data16
mov
rolb
push
insb
ret
stc
xor
lods
or
cmp
or
pop
es
mov
pop
pop
sub
pop
xor
rcll
aaa
cmp
lods
and
cmp
jne
icebp
jg
sahf
insb
das
hlt
add
push
nop
jbe
into
out
roll
fdivl
enter
ret
cmp
add
test
mov
cmc
pop
movsb
mov
pop
in
jnp
fsubs
add
xchg
stos
xor
inc
pop
or
add
cli
add
jmp
rorb
arpl
dec
pop
js
hlt
subb
int3
mov
inc
mov
xchg
push
mov
add
movsb
ss
in
inc
cmp
hlt
add
or
xchg
fadds
insb
push
push
movsb
add
icebp
enter
lods
adc
mov
clc
mov
mov
das
incb
or
movsb
call
mov
adc
sub
inc
call
jmp
adc
xchg
mov
stos
pop
mov
sbbl
shlb
xlat
stos
adc
ss
sub
fmuls
movsl
scas
nop
xchg
stos
inc
fwait
bound
fidivl
mov
add
mov
pusha
add
or
pop
add
xchg
add
add
add
jg
pop
mov
cmpsl
mov
xor
rcrl
pop
add
shlb
push
add
iret
adc
xor
xor
jecxz
dec
hlt
clts
add
leave
mov
or
jle
test
loop
adc
lods
movsb
mov
lock
inc
idivl
mov
mov
pusha
pushf
inc
scas
iret
sub
cmp
push
dec
add
sub
mov
add
xor
jge
push
loope
or
inc
sbb
sub
insb
or
les
mov
lds
mov
jecxz
mov
and
mov
loope
int
and
sbb
cmp
orb
mov
test
pop
mov
adc
xchg
sbbl
xchg
mov
cs
mov
jle
pop
cmpl
out
push
repnz
or
sbb
pop
adc
into
add
inc
scas
ficoms
cmpsb
sub
pop
out
xchg
lcall
and
movsb
xchg
incb
push
insl
dec
in
addl
add
enter
xchg
pop
xor
loop
xor
sarl
addl
add
dec
dec
lods
loope
imul
sub
mov
dec
push
call
lock
push
fldenv
add
cwtl
add
pop
add
jns
mov
iret
fwait
xchg
in
fcoms
out
pushf
add
mov
mov
jo
adc
or
insl
and
add
and
lds
xchg
push
inc
mov
cmpl
pop
add
cmc
sbb
lock
loop
jne
jo
sub
pop
shrb
out
int
jbe
inc
add
xchg
sub
add
mov
add
xor
cmp
push
mov
mov
pop
or
scas
movsl
push
imulb
add
adc
scas
and
les
loop
mov
pushf
outsl
fbld
addr16
sbb
rclb
lds
int
cmp
or
loopne
add
jl
push
mov
xchg
push
scas
pop
cmpsl
aam
addr16
stos
enter
loope
xchg
dec
adc
cwtl
sub
pushf
sahf
add
xor
outsb
adc
sbb
pop
addr16
xsavec
cwtl
lock
clc
in
mov
mov
and
mov
or
push
aad
adc
mov
cmp
add
sbb
or
jecxz
cmp
and
aad
add
mov
xchg
jnp
aaa
adc
xchg
movsl
imul
sbb
add
lods
push
pop
ficomps
add
lret
jo
mov
and
aam
rcrl
push
insl
and
mov
outsl
out
push
addb
enter
ja
rolb
push
out
sarb
testb
cmc
xchg
test
and
rcl
cmp
je
add
or
jmp
cmp
push
sub
mov
into
mov
xchg
add
loop
adc
jne
pop
add
cmp
nop
sub
xchg
decl
mov
in
jle
orb
push
fsubl
add
out
scas
jl
sub
test
mov
inc
add
cli
adc
imul
sbb
outsl
inc
inc
aaa
and
mov
or
pop
or
xor
push
mov
dec
push
sbbl
roll
out
dec
add
mov
clc
int
popf
outsl
stos
add
push
in
push
mov
test
xchg
sbb
cwtl
inc
add
and
pop
out
inc
rorl
dec
in
xchg
cmpb
imul
sbb
fildl
stc
iret
rorb
negl
arpl
xor
xchg
sbb
xlat
data16
xchg
out
xor
loopne
stc
aam
and
add
and
push
add
ret
ss
outsl
pop
add
xlat
scas
insl
add
sbb
and
xor
pop
jecxz
ds
mov
test
loope
sbb
fnstsw
add
nop
cld
sub
clc
pop
jl
aaa
lods
fdivl
mov
pop
nop
lock
cmp
in
add
cs
cmp
or
addr16
cmc
mov
stos
fwait
push
xor
les
and
je
out
add
rcll
pop
cmp
sahf
inc
lds
orb
push
out
fcmovnb
add
inc
xorl
inc
and
test
dec
scas
js
add
into
xchg
pop
xor
dec
jge
ret
or
lds
mov
mov
ljmp
sub
xor
pop
adc
xchg
dec
add
leave
aam
sti
clc
mov
and
push
push
test
xchg
lock
sbb
add
mov
or
add
std
int3
jg
js
movb
daa
jle
jl
fucompp
add
nop
decb
add
ljmp
dec
je
inc
pop
dec
push
movsl
dec
add
into
jp
fcoml
pop
add
sub
push
cwtl
inc
mov
adc
insb
out
adc
mov
subb
js
dec
or
mov
pop
and
mov
lret
cmp
push
xchg
jne
add
leave
pop
cmp
aad
xor
xchg
add
lds
add
push
sub
iret
test
add
jae
cld
repnz
ret
xchg
aam
repz
pop
gs
mov
inc
add
test
xor
xchg
icebp
repnz
xchg
push
mov
cmp
jnp
add
mov
push
add
sub
ret
pop
arpl
ss
xchg
mov
pop
or
adc
add
pop
repz
add
mov
ret
sbb
sbb
test
inc
inc
add
mov
xor
cli
roll
add
add
jns
adc
adc
mov
push
and
add
lds
test
daa
sub
js
jne
jl
or
pop
or
aas
movsb
andb
lahf
lret
hlt
cmp
mov
xchg
jmp
jle
std
adc
test
repz
movsb
pop
jo
adc
nop
out
jno
cmp
sbb
push
in
inc
inc
mov
es
enter
mov
fimuls
sub
scas
xchg
mov
ret
mov
jecxz
cmp
sbb
pusha
jbe
fdivr
jge
mov
jp
fmull
repnz
cld
test
cmpsb
adcb
scas
jae
adc
lods
or
adc
xor
cld
mov
mov
mov
push
sbb
add
out
inc
sbb
cmp
adc
cwtl
lods
sbb
cmp
ss
js
nop
jp
add
aaa
out
pop
shll
or
roll
sti
mov
mov
add
je
adc
pop
and
leave
add
sub
call
call
int3
loop
jl
add
stc
leave
sub
xor
jge
inc
lea
mov
loopne
add
push
jmp
mov
aam
cmp
xor
cltd
pop
dec
xor
xchg
pusha
dec
push
fsubr
cmpsb
fstps
pop
das
loop
loopne
sbb
dec
add
pop
inc
sub
mov
add
push
call
subl
dec
cmc
jae
pop
insl
lods
push
jge
stos
add
jle
sbb
add
loopne
add
add
or
jecxz
dec
mov
sbb
sub
jnp
add
sbb
inc
int
xor
xlat
popa
clc
fmull
cli
cmp
cmp
lods
jmp
add
pop
mov
aas
inc
setge
in
jle
arpl
pop
enter
out
mov
jae
test
dec
push
cmp
iret
clc
inc
repz
add
js
add
aas
push
pop
pusha
and
dec
add
jnp
lods
or
adc
and
clc
add
aad
ljmp
ss
and
out
std
jb
xchg
push
rcrb
daa
inc
pusha
andl
icebp
sbb
ss
test
popa
jae
add
shll
imul
cltd
rorb
pop
xor
inc
xchg
xchg
ss
mov
or
imull
xor
or
std
cmp
pop
sbb
pop
add
push
add
and
xchg
ds
mov
outsb
lea
push
lret
imul
aas
fisttpl
mov
xor
pop
inc
cmpb
push
daa
aas
xor
outsb
mov
mov
pop
rcll
cmp
adc
push
mov
sub
cwtl
or
and
push
add
xor
push
sti
std
sahf
ljmp
test
add
and
loope
cmp
xchg
cmc
pop
movsb
hlt
xchg
pop
jnp
sahf
loopne
mov
pop
cmp
incl
jmp
out
and
es
xchg
sub
in
pop
mov
add
mov
cld
add
les
shrb
or
add
out
lods
jg
add
ret
mov
fld
mov
mov
mov
aam
in
aas
xor
fmull
mov
lcall
lret
push
fdiv
pop
push
push
adc
xor
nop
cmp
shl
add
mov
int
push
add
addl
xor
dec
add
lock
inc
stc
arpl
cwtl
push
mov
add
aam
lcall
inc
aaa
adc
push
les
and
xchg
enter
mov
add
xchg
pusha
mov
xlat
sub
out
in
pop
les
lods
inc
xchg
fisttps
movsb
shlb
add
ljmp
add
inc
mov
sbb
adc
rclb
jg
loopne
bound
fsubrs
cmp
push
test
in
xchg
add
shlb
jnp
pop
pop
sbb
fsubrs
test
jl
scas
push
mov
push
out
mov
sub
mov
or
pop
les
xchg
inc
push
add
and
fbstp
mov
jno
add
test
pop
add
xor
pop
sub
ds
mov
add
add
lock
js
push
sbb
pop
push
inc
mov
mov
hlt
scas
ret
jno
lock
add
xchg
mov
sub
xor
dec
int3
add
arpl
adc
lret
dec
fdiv
inc
gs
pushf
pop
in
outsl
dec
push
ds
xor
jo
ror
add
mov
in
in
sub
cmovl
clc
mov
add
fstpl
add
stos
pop
notl
or
rcrl
ret
add
xchg
aaa
rolb
xchg
pushf
add
jl
ljmp
rolb
jb
stos
add
jge
add
sarb
das
imul
add
aad
call
sarb
xchg
push
mov
inc
push
gs
leave
xchg
jbe
pop
and
dec
jne
sub
mov
incl
mov
add
sub
mov
fldcw
cmp
outsb
mov
int
inc
sbb
mov
inc
fstps
cmpsb
pusha
daa
gs
adc
ror
cld
pushf
add
add
or
in
add
jns
fwait
ljmpw
mov
sbb
mov
add
lods
sarl
or
rolb
add
mov
push
jp
add
inc
pop
mov
push
jns
in
aas
push
movntq
loopne
repz
add
add
mov
mov
notb
fadds
hlt
dec
jp
lret
je
pop
mov
jb
mov
das
xchg
nop
mov
add
pushl
cs
imul
add
shl
mov
and
mov
push
push
add
data16
jb
add
mov
into
add
fdiv
cld
xchg
add
cmp
in
or
rolb
push
push
inc
xchg
push
push
sahf
and
scas
aas
mov
pop
xchg
jg
out
testl
shll
jae
rclb
les
adc
and
rcrb
daa
insb
push
dec
pop
psrld
mov
test
jns
pop
loopne
adc
jnp
cmp
cmp
dec
jp
mov
xchg
sbb
call
inc
addr16
nop
add
mov
inc
aas
push
sub
or
add
sbb
push
jns
test
push
orb
sub
inc
add
stc
rcl
data16
add
xor
jbe
add
jo
sub
cmp
fidivrl
mov
add
pop
xchg
repz
xor
mov
in
data16
imul
adc
dec
shlb
daa
imull
jmp
into
popa
sbb
push
sbb
sbb
in
fwait
cli
in
adc
push
jmp
jns
mov
mov
clc
roll
inc
std
cltd
and
mov
jl
aam
fwait
out
imul
aas
sub
dec
cmp
cmc
mov
stc
lods
push
stos
and
adc
jno
in
cmc
test
rolb
xor
cltd
rorb
mov
cmp
jae
sahf
add
inc
xor
sub
adc
adc
add
sbb
xchg
mov
sub
lea
mov
pop
out
sbb
ret
jp
push
mov
cwtl
out
add
jb
adc
lcall
leave
orl
xchg
and
lea
fs
add
pusha
push
pop
sbb
mov
cmc
mov
std
sahf
or
xchg
jp
std
mov
pop
clc
div
add
xor
js
add
imul
ret
call
xchg
add
jmp
push
or
aas
and
add
fs
mov
shrb
sar
add
lods
add
mov
jnp
pusha
cmp
mov
pop
add
xchg
outsb
icebp
and
sbb
dec
mov
test
jp
lods
fadds
in
xor
shr
push
mov
add
push
dec
mov
test
sbb
out
pop
loop
add
mov
lea
push
outsl
mov
repz
adc
add
mov
outsb
cmc
cwtl
pop
daa
es
out
bound
arpl
push
and
xor
nop
into
test
clc
cli
add
dec
sbb
and
cmpsl
sbb
in
xor
jecxz
rcrb
dec
into
sub
inc
imul
sbb
add
adc
sbb
xor
jns
and
and
lods
add
adc
add
rolb
xchg
mov
inc
mov
push
aaa
add
sub
adc
je
pushf
clc
pop
xchg
jmp
enter
sbb
aaa
scas
sti
mov
dec
iret
add
and
shlb
push
gs
xlat
jmp
leave
sarb
cmp
xor
xchg
mov
js
add
cwtl
in
xchg
push
fldlg2
sbb
shll
orb
pop
push
xor
or
mov
jp
push
and
repnz
mov
mov
xchg
and
add
mov
mov
and
aam
enter
pusha
dec
lahf
add
push
and
mov
subb
and
add
and
inc
mov
bound
arpl
add
sbb
push
sbb
mov
sbb
jnp
subb
adc
addb
sar
xlat
ret
nop
or
jb
xor
and
add
lea
loopne
push
mov
cmp
addl
or
jmp
add
arpl
lock
jns
jle
sub
pop
add
enter
rcrb
insb
cmp
pop
fldl
cmp
jb
in
dec
es
sbb
in
xchg
bnd
pop
mov
mov
add
scas
loope
ret
ror
getsec
mov
mov
xlat
xor
lods
mov
add
addb
loopne
imul
dec
cs
xchg
lea
jno
or
sub
clc
stc
in
iret
xor
sbb
xchg
jnp
add
fldt
ret
jge
mov
shrb
repz
aas
inc
mov
inc
jmp
mov
adc
push
add
lahf
mov
lds
push
imul
and
mov
mov
fcmovb
push
add
jle
and
inc
jl
stc
outsb
lods
ss
mov
add
dec
mov
sbb
icebp
out
or
jno
fwait
and
add
jmp
shr
dec
rolb
cwtl
mov
sbb
push
jg
cs
aas
mov
xor
out
mov
push
sbb
aad
and
sbb
cmc
in
std
mov
sub
cwtl
outsb
xlat
mov
and
es
out
loopne
add
dec
mov
add
enter
outsl
cmp
lret
cmc
pushf
dec
push
loopne
and
xor
pusha
lahf
xchg
testl
cmp
lock
lods
popl
int3
add
push
mov
mov
mov
sar
lret
jg
sbb
insl
sbb
inc
pushf
rcrb
or
sbb
add
aad
iret
es
sbb
movsl
adc
cmc
jmp
adc
jmp
sarb
es
mov
sbb
andb
cwtl
fnstsw
inc
clc
enter
mov
add
sub
sahf
or
inc
dec
jns
roll
outsl
add
jo
xchg
leave
movsl
inc
xchg
ljmp
repz
pop
sub
btr
inc
pop
insl
sti
ja
icebp
popa
mov
or
cmpsl
add
leave
sahf
fnstsw
and
add
fmull
add
enter
pushf
adc
push
scas
bound
cwtl
pop
int
fwait
pop
jbe
xor
adc
gs
out
sub
lock
daa
dec
das
mov
loope
aaa
cmc
testb
sub
fisubl
mov
adc
inc
mov
inc
jnp
pop
inc
and
pop
inc
popf
inc
mov
sub
pop
loopne
dec
fadds
pop
jmp
and
or
inc
rolb
adc
push
pop
movsb
pop
and
lahf
xchg
and
jp
ret
dec
or
lret
lods
sbb
fidivl
insl
jb
repz
cmpsb
push
and
push
cli
sub
bound
rclb
xorb
repz
push
adcb
sub
fldl
jmp
mov
xchg
cmpsl
xchg
sahf
bound
aam
negb
xchg
rorb
test
sub
dec
jne
aam
loopne
push
mov
insb
fmuls
jg
xor
fiadds
push
enter
scas
jae
sbb
imul
lcall
hlt
mov
pop
jg
push
or
xor
or
mov
dec
ss
add
movl
jp
cld
push
sub
push
or
scas
mov
cmp
push
shll
sub
pop
add
adc
jg
inc
pop
rorb
and
enter
dec
add
fadds
xchg
test
sbb
mov
mov
mov
leave
or
xor
inc
xchg
sub
je
rolb
add
in
push
cmp
icebp
iret
cmp
repnz
add
jecxz
add
inc
mov
push
add
push
add
jp
cmp
jno
hlt
roll
scas
sti
mov
loope
fcompl
lods
andb
jns
or
cmpsb
adc
mov
jl
mov
cmp
sub
loope
push
flds
or
push
pop
inc
add
out
pop
add
pop
inc
jno
adc
cmp
mov
jle
repnz
pop
mov
jnp
cltd
insl
out
hlt
movsl
daa
addb
jge
jnp
inc
stos
in
outsb
pop
sar
add
insl
mov
sti
cmovae
dec
repnz
cltd
inc
jecxz
mull
pop
out
add
jge
mov
mov
popa
xor
adc
rclb
fsts
push
mov
xor
fadds
cld
popf
cmp
sbb
add
aas
outsb
mov
adc
cmp
pop
leave
xchg
test
jnp
fisubl
stos
cwtl
pusha
cmp
fisubrs
adcl
dec
fdiv
adc
add
rorb
inc
add
lds
pop
jp
sti
sbb
data16
inc
jl
outsl
push
push
sbb
jge
jae
movsl
in
stos
add
inc
sub
popa
lret
xor
or
out
ficoml
shr
add
sti
sarb
add
mov
movsl
sbbl
call
clc
jb
xchg
cmpb
inc
insb
xchg
pop
add
cmp
adc
mov
nop
shll
aad
inc
and
inc
push
lds
sbbb
ss
in
add
mov
std
aas
adc
add
jmp
and
mov
xchg
add
int
pusha
adc
addr16
add
mov
mov
ret
data16
mov
or
push
mov
stos
or
and
sbb
int
loopne
lock
push
sbb
mov
inc
jmp
pop
dec
scas
data16
les
fstpl
nop
cmp
aam
sarl
add
xchg
pop
testl
imul
pop
pushf
cmpsb
xchg
pusha
js
mov
add
mov
add
xlat
mov
test
pusha
sub
push
cltd
stc
adc
pop
push
or
aam
inc
bound
sbb
into
xchg
jno
jle
add
push
movsl
mov
inc
sbb
in
mov
sbb
and
adc
aam
mov
jae
push
and
clc
mov
ja
subl
movsb
pop
pop
rol
push
add
jge
adc
int3
sbb
sub
cmpsl
sbb
call
cmp
leave
aas
push
insl
pop
pop
mov
ss
mov
xor
adc
loope
sub
out
mov
popf
add
cmp
mov
add
stos
mov
push
in
loopne
cmp
jb
pop
lods
add
cs
add
xchg
jbe
or
sti
call
add
ret
dec
sbbl
jne
or
in
sub
cli
push
sahf
push
cmpsl
add
xchg
sbb
testb
mov
cmp
xor
iret
insb
or
cmp
or
cs
enter
insb
cwtl
cmp
pop
xor
xor
or
add
push
pop
bound
cmp
and
and
push
cli
fst
add
test
out
sarl
cmpsb
add
aaa
fbld
pop
mov
xchg
in
cmp
stc
or
sub
cli
leave
loop
add
push
dec
dec
not
cmp
lret
sbb
fwait
out
xor
or
scas
and
add
int3
into
add
loop
jno
popf
cwtl
vmread
add
xlat
dec
push
lea
mov
or
popa
add
inc
xchg
cmp
jbe
mov
dec
movsb
shlb
in
and
and
push
add
lcall
xorl
xor
ret
scas
dec
adc
mov
mov
stos
rorb
ljmp
push
out
sahf
rclb
out
push
pop
xor
or
nop
orl
movb
shlb
roll
and
or
aad
ss
mov
aas
mov
test
adc
or
les
negl
push
fwait
push
mov
pop
cmp
daa
jnp
xchg
add
imul
mov
mov
int
push
or
scas
cmc
add
out
xchg
sbb
sub
jbe
add
cmpsl
stc
sti
iret
es
sub
add
sbb
xlat
rolb
ja
cwtl
pushf
add
push
dec
ljmp
add
jecxz
push
mov
sbb
nop
xchg
mov
popf
push
mov
mov
cmp
or
mov
add
mov
loopne
dec
subb
or
scas
orb
pop
pop
sbb
mov
cmp
and
in
pop
cmpsl
push
dec
mov
push
ljmp
lret
bound
dec
aad
dec
lods
xor
rcrb
leave
lock
imul
test
push
mov
mov
mov
mov
add
repnz
imul
mov
jo
adc
sbbb
dec
xor
leave
jbe
sbb
sbb
push
xlat
cld
loopne
incb
adc
jb
ficomps
add
fs
xor
push
mov
into
out
fbld
add
mov
leave
or
dec
mov
aas
dec
cli
add
push
sub
pusha
push
jge
mov
iret
xchg
add
mov
test
add
push
xlat
push
fmull
jle
aas
dec
or
nop
lea
and
cmp
orb
popf
jle
add
dec
add
out
fwait
add
cwtl
push
mov
jno
ret
xchg
or
pop
orb
in
enter
mov
pop
test
rolb
push
mov
mov
in
add
lret
lret
in
scas
add
jnp
enter
dec
push
push
sbb
and
stos
xor
pop
jecxz
add
jmp
lret
cli
paddb
testl
pop
xchg
lcall
inc
inc
jo
add
outsl
cmp
rolb
pop
clc
inc
popa
and
xor
or
lret
aad
sbb
jecxz
cmp
cltd
inc
sbb
cmp
pop
jnp
dec
dec
pusha
es
pop
aam
add
xor
add
sub
cmp
push
inc
mov
jnp
lret
sbbl
or
jne
jge
fsubs
xor
jmp
fdiv
mov
sub
je
pop
pop
out
add
mov
orl
int3
push
out
js
add
pop
pop
nop
dec
iret
rorb
sub
cwtl
lods
add
scas
fs
test
mov
lret
add
adc
mov
ja
cmpl
lock
shrb
sbb
lahf
hlt
cmpsl
cmp
xor
icebp
repz
adc
cmp
or
add
sbb
scas
adc
inc
pop
push
cmp
dec
loopne
and
in
adc
ss
orb
lock
repz
xchg
imul
push
mov
or
ss
cmpsl
xlat
sbb
jo
add
cmp
xor
call
mov
fsub
mov
mov
xchg
iret
into
mov
aad
icebp
outsl
mov
cmp
adc
cltd
dec
add
cmc
sub
add
stos
xor
insl
xchg
add
test
and
pop
mov
shl
sub
jne
add
stos
push
xchg
xor
repnz
dec
inc
mov
xchg
cwtl
sub
aam
cmpsl
xor
lcall
add
or
cltd
mov
sbb
sar
inc
mov
outsl
out
fldenv
out
ss
je
jb
inc
rclb
idivb
nop
inc
popl
in
pusha
mov
fidivl
push
add
pushl
mov
sbb
lret
lods
and
stos
lods
mov
scas
xor
fxam
js
fnstsw
dec
lahf
cmp
push
fwait
add
lret
mov
push
hlt
test
pop
sub
add
out
hlt
cmp
stos
mov
sub
lcall
dec
jno
leave
movsb
fcoml
inc
sbb
push
loop
rolb
fildl
jnp
push
or
das
call
push
mov
mov
pop
lret
js
pop
push
shl
mov
aaa
or
jbe
rcrb
lods
add
dec
arpl
inc
mov
sub
or
pusha
insb
mov
inc
dec
icebp
fcompl
jbe
test
push
out
mov
pop
data16
add
fnstsw
or
jge
orb
scas
insl
fs
and
sarl
add
xor
mov
xlat
add
jmp
rorb
pusha
mov
jno
dec
mov
adc
das
xor
sub
hlt
ja
out
iret
add
mov
nop
add
cs
push
sbb
jae
sbb
or
ljmp
addr16
stos
imul
add
mov
fstpt
dec
add
je
jbe
sub
data16
lods
movsb
stos
sub
add
and
insl
and
fdivrl
cmp
xor
fs
xchg
inc
cmp
int3
popa
int3
cs
jg
push
mov
pop
jecxz
jb
out
mov
inc
add
add
jbe
mov
add
ret
std
xor
xorb
mov
ret
mov
popf
and
mov
mov
pop
ljmp
xorl
clc
cmp
jmp
add
push
cmp
push
add
clc
loopne
sbb
xchg
enter
fsts
inc
test
fisubs
insl
add
xor
jge
and
lcall
cmp
jne
rolb
pop
ljmp
movsl
add
mov
lods
fs
jae
mov
mov
cmp
dec
and
add
bound
mov
and
jae
sbb
shll
jmp
les
pop
popl
jns
lret
aas
int3
add
or
mov
xlat
add
clc
jns
xchg
imul
dec
add
sbb
or
pop
lcall
pop
sbb
sub
mov
xchg
lds
dec
push
mov
insb
xor
mov
push
repz
rol
aas
add
mov
imul
mov
add
shlb
mov
sbb
popf
mov
sti
mov
clc
es
in
and
xor
ljmp
xor
add
fwait
leave
in
jp
movl
xchg
inc
add
jo
psrld
lahf
das
mov
orl
mov
mov
mov
and
pop
ret
pushw
mov
movsl
roll
adc
push
jae
sbb
mov
and
pop
nop
or
xor
add
xor
xor
jno
pop
std
fdivrs
or
jl
pop
ja
orl
cli
mov
in
or
push
in
loopne
cmc
insl
push
pusha
pop
push
cmp
add
cmp
test
or
scas
xor
les
pusha
or
js
pop
loop
loopne
icebp
xor
cmp
stos
hlt
outsl
gs
xchg
pusha
jl
cltd
ds
jnp
and
xchg
fcmovnb
mov
faddl
pop
cmpsb
mov
or
test
add
iret
in
aas
mov
mov
cmp
jecxz
into
jg
lock
icebp
sarb
mov
clc
stc
lret
sub
add
hlt
rcll
in
push
xor
jl
cmp
test
adc
mov
js
jle
cmpsl
pop
insb
sti
add
mov
sahf
pop
sub
cmp
ss
mov
ret
mov
roll
pop
sub
into
aam
jb
pop
imul
inc
pushf
cmpsb
out
cmp
jne
mov
adc
push
sub
ret
pop
inc
push
add
sbb
out
testl
or
adc
cli
cmpsl
adcl
pop
stos
insb
xorb
sbb
or
stos
xor
xorb
pop
lds
sbb
mov
and
or
outsl
loop
mov
pop
add
xor
inc
push
aas
idivb
push
lea
sbb
addr16
ja
ficoml
pop
add
lcall
fmul
lahf
cwtl
pusha
dec
pusha
in
cmpsb
shlb
pop
test
mov
into
pcmpeqw
dec
lcall
add
xchg
mov
sub
inc
stc
inc
jl
sub
jge
inc
xchg
pop
in
sbb
adc
add
pop
push
repnz
inc
xchg
add
bound
pop
shl
aaa
adc
mov
add
dec
xchg
xor
add
pop
jb
dec
pop
add
pop
add
adc
stc
jns
sub
aad
add
mov
jno
adc
mov
add
add
dec
jg
imul
popf
test
icebp
shll
cmp
inc
loope
ret
or
lock
dec
mov
xchg
add
in
insb
xor
int
xor
adc
pop
pusha
es
xchg
pop
repnz
add
inc
repz
dec
sub
sti
push
add
test
sbb
lret
add
xor
std
mov
enter
clc
lret
inc
mov
sbb
imul
loopne
add
popf
outsl
add
shrl
addr16
in
movsb
test
xor
and
or
imul
cmp
jge
jmp
add
in
push
ja
fmulp
cmp
adc
xor
out
push
inc
push
add
xchg
sbb
fsubrl
add
mov
cwtl
mov
push
icebp
mov
fwait
ja
fsts
loop
mov
push
jg
popa
std
cmp
cld
inc
mov
add
dec
mov
add
fdivrl
lret
ljmp
xchg
lahf
je
sub
and
add
loop
jno
lds
mov
test
out
add
jg
add
adc
into
add
jecxz
sub
popa
mov
sbb
xchg
mov
add
adc
cmp
mov
and
out
cmp
jle
incl
jns
iret
add
data16
out
frstor
jmp
inc
add
inc
clc
xchg
sub
inc
lea
jl
push
lahf
daa
push
push
sarb
fistl
mov
pop
sbb
out
popf
mov
adc
pop
or
xchg
adc
push
in
loop
decb
xchg
mov
in
lea
pop
popl
out
mov
push
xchg
inc
lock
xor
hlt
add
xchg
jle
dec
shld
stos
out
adc
jmp
test
pop
imul
xchg
sub
dec
cmp
outsl
lea
add
scas
jne
int3
loope
inc
add
dec
adc
pop
sbb
mov
cmpsb
fsub
in
pusha
add
dec
dec
ss
das
out
mov
dec
jl
add
pop
sub
cmp
jne
loop
loope
jb
dec
add
dec
xchg
adc
clc
add
test
cli
add
xor
jo
or
xchg
inc
add
lock
and
scas
rcll
js
add
nop
les
xor
xchg
xchg
in
fcmovb
rcrb
ljmp
mov
adc
pushl
add
in
les
or
popa
sbbb
std
and
imul
cli
stc
jg
and
mov
push
inc
pop
pop
jle
sbb
std
aam
push
cld
filds
stos
mov
sbb
insl
lcall
das
cli
add
mov
xchg
lds
aas
or
repz
add
push
out
add
jmp
mov
hlt
ret
je
in
stc
add
jns
jle
xor
add
test
mov
add
jnp
push
fs
push
aam
inc
ljmp
add
push
fisttpll
mov
mov
imul
out
mov
movsb
lock
pop
movsl
jmp
add
jp
pusha
notl
ss
push
aas
jmp
inc
add
cmp
mov
inc
hlt
aaa
adc
leave
dec
xchg
push
pop
sbb
dec
inc
lea
test
and
push
inc
push
js
je
addr16
or
hlt
jl
dec
shlb
inc
push
movsb
push
add
lds
mov
fiaddl
dec
out
add
jmp
add
gs
xchg
popf
aas
mov
mov
call
or
movsb
std
lock
sub
xchg
sub
jns
sub
mov
add
push
js
push
lahf
inc
in
jo
or
adc
arpl
xor
data16
ja,pn
and
and
add
lahf
mov
jg
push
mov
xchg
push
and
sbbl
cmp
stos
or
out
je
add
fnstsw
cwtl
pop
pop
xchg
add
pop
pop
insb
outsb
in
rcrb
mov
add
cmp
mov
out
dec
je
fwait
add
movsb
mov
add
loopne
lods
push
mov
fildll
imul
orl
add
incl
and
sti
scas
movsl
mov
orb
stos
mov
sub
adc
or
or
mov
adc
push
gs
enter
adc
sbb
sub
rorb
enter
test
cs
cwtl
dec
cld
es
mov
addr16
and
in
lahf
or
inc
mov
stc
cmc
out
lahf
cmp
ficoms
jo
rcll
in
push
add
int3
hlt
or
mov
xor
aad
add
iret
push
arpl
inc
rclb
xor
add
lds
fiaddl
adc
out
pop
rclb
add
jp
movsb
pushf
mov
mov
adc
add
xor
lret
enter
insl
test
mov
dec
mov
jns
add
test
incb
mov
mov
add
add
xchg
mov
shll
aad
xor
dec
or
in
sbb
add
rcll
faddl
jno
cmpsb
add
cld
fadd
mulb
xchg
aam
pusha
adc
insb
iret
add
lcall
mov
jo
add
lds
or
xor
test
sub
stos
dec
push
mov
pop
fildl
lds
push
mov
hlt
or
jae
iret
jb
jge,pt
push
pop
incl
mov
mov
in
add
jl
dec
call
adc
mov
data16
inc
add
sbb
divb
sub
or
pusha
pop
or
xor
add
cld
sahf
mov
mov
and
icebp
cs
adc
ss
inc
in
insl
add
outsl
xchg
je
cltd
lcall
popa
jae
add
scas
mov
push
lds
movb
add
add
sub
mov
cltd
add
aas
into
movsl
cmp
inc
add
rcll
push
add
arpl
dec
cmpsl
fisubrl
jnp
add
push
lret
push
movsb
lea
cmp
decl
mov
and
lock
cmp
adc
sbb
jne
js
and
sub
imul
adc
push
dec
inc
repz
pusha
clc
and
lods
cwtl
fmuls
fs
and
add
push
or
and
call
dec
cmp
shrl
ljmp
jns
testb
xor
jle
pop
sbb
push
fdivl
push
add
pushf
int3
rcrb
push
scas
or
enter
push
push
mov
clc
movsb
xchg
add
shrb
lock
fstl
add
jbe
test
ret
shlb
lock
mov
addb
cld
or
sub
mov
or
jne
ja
jge
mov
add
mov
mov
dec
jl
jb
or
lea
sahf
in
lods
test
lds
shrb
lea
jg
inc
adc
das
add
pop
insb
imul
outsl
scas
sub
fsubrp
je
stos
and
scas
add
jecxz
int3
lea
xchg
add
sub
mov
loopne
add
js
add
push
lods
aas
push
std
call
call
lds
mov
push
shrl
pop
adc
and
add
punpckhdq
mov
in
hlt
scas
mov
rep
daa
pop
fs
push
fildl
or
pop
shl
fistps
cmp
and
jl
add
lods
pop
add
xchg
sbb
shlb
add
pop
adc
push
push
add
sub
sbb
dec
and
mov
jne
sbb
sti
sub
mov
in
jl
cs
je
push
out
fwait
mov
add
cltd
nop
pop
fcmovnb
add
aas
shll
cmp
xchg
and
sbb
int
rcll
jb
inc
push
cmp
dec
and
inc
loope
lahf
inc
mov
mov
and
add
lock
out
and
in
inc
dec
ja
push
out
or
dec
out
aam
add
xchg
adc
mov
mov
and
sub
add
cmp
or
or
add
sub
inc
nop
pop
in
lds
add
and
sub
dec
scas
fistl
inc
icebp
ljmp
cmp
jge
mov
hlt
dec
and
cmp
ret
clc
add
data16
inc
in
mov
ret
pop
pop
add
ret
jb
f2xm1
dec
sbb
jae
int
fisttpl
insl
adc
rcrb
jnp
jmp
sbbb
push
aaa
cmp
mov
clc
mov
rolb
call
test
hlt
out
test
add
outsl
add
mov
enter
mov
mov
test
nop
inc
mov
cmpsb
mov
js
subps
jo
sbb
dec
add
ficoms
adc
inc
idivl
and
and
and
aaa
jns
jbe
in
ror
into
out
xchg
mov
leave
mov
loop
outsb
loopne
mov
add
inc
ror
pop
push
and
push
aad
and
sub
add
cmpsl
scas
push
hlt
sub
add
adc
push
add
adc
add
sub
out
sub
mov
rclb
addr16
pop
add
shlb
xchg
jns
pop
lahf
jbe
adc
push
inc
sbb
add
dec
mov
icebp
push
fsub
out
xlat
adc
dec
add
mov
cmp
add
roll
dec
test
arpl
and
fsts
mov
or
sub
shufps
fdivl
add
and
ret
ljmp
das
dec
xor
jecxz
stc
pop
int3
gs
and
fisubs
jo
mov
loopne
sub
push
jb
xor
fimull
push
jne
popa
cld
out
mov
repz
add
xchg
icebp
add
or
cltd
add
sarb
out
int
jne
adc
or
inc
mov
add
cmp
jl
add
mov
lahf
and
cmpl
xchg
add
jmp
pop
jne
add
pop
jmp
leave
push
mov
sbb
add
mov
repz
add
xor
out
add
push
or
adc
popa
or
mov
lret
sub
push
ss
push
loop
pop
incl
push
push
jp
ds
inc
dec
sbb
dec
sbb
add
insb
pop
jo
add
sub
add
test
mov
xchg
push
mov
into
push
stos
shrb
pop
or
and
lods
addl
pop
dec
jae
add
cs
or
inc
sar
sbb
in
test
mov
mov
push
dec
cmpsb
clc
scas
insl
cmp
stos
jp
push
add
lcall
outsb
les
mov
mov
shrb
rol
and
jnp
mov
pop
adc
sub
loope
loop
inc
pop
mov
ficoms
repz
mov
or
cli
push
repnz
pop
sub
mov
push
lahf
mov
dec
add
ret
lret
xchg
add
add
jo
pop
xlat
sbb
iret
fnstenv
mov
movsb
cmc
cmp
insb
lods
add
add
out
addb
dec
adc
cmp
push
ret
cmp
adc
mov
mov
sbb
aad
jmp
sub
int3
mov
arpl
mov
roll
fdivrp
add
lods
pushf
jb
add
lahf
mov
stos
cltd
fst
mov
dec
or
dec
push
add
add
in
add
scas
imulb
add
dec
loopne
orb
aas
mov
adc
cmpsb
add
mov
loope
or
std
inc
shll
ja
push
int
hlt
rolb
cmpl
sbb
pop
inc
add
arpl
adc
lock
pop
add
mov
mov
add
push
jo
test
push
fcmovb
jno
or
out
cmp
sbb
dec
jle
pop
cld
gs
or
sbb
es
leave
cmpb
cld
subl
pop
add
movsl
add
sub
imul
pop
paddusw
mov
sbbb
cmc
add
aas
loope
fwait
lcall
in
cmp
ljmp
cli
fisubrs
and
add
pop
in
in
subl
aad
xchg
test
aas
jne
sbbb
xchg
add
and
pop
aaa
fldln2
pop
cld
dec
inc
add
hlt
ljmp
dec
cltd
testl
add
xor
movsb
mov
add
cmp
add
xchg
mull
lahf
or
push
xchg
mov
jecxz
add
rcr
hlt
cmp
inc
mov
add
ja
ljmp
push
push
and
movsl
addb
jns
fnsave
sub
and
mov
pop
jecxz
cmp
add
mov
add
or
push
lea
sub
adc
add
ror
add
pop
mov
mov
add
je
add
sub
jg
push
xor
das
jecxz
lock
or
jp
sbbb
add
push
dec
aam
int
fidivrs
jbe
add
pop
fmull
je
jmp
out
pusha
jecxz
and
lock
jl
lcall
push
mov
stos
sbb
mov
pop
add
repnz
and
mov
xor
mov
and
inc
or
in
add
loopne
insl
or
pop
lret
add
dec
cwtl
out
adc
add
cmc
mov
stos
push
jp
jne
inc
mov
out
add
pop
cmp
scas
es
outsl
add
je
xchg
push
clc
add
adc
pusha
pop
sbb
push
inc
add
adc
mov
xchg
cltd
jo
mov
nop
in
jb
or
mov
or
leave
outsb
xorb
cmp
sbb
mov
and
mov
pusha
jmp
mov
or
es
add
flds
lea
insl
cmc
sub
pop
xchg
subb
ficomps
sbb
adc
add
xchg
test
push
fs
and
inc
int3
add
dec
cmpsl
mov
int3
pop
fdivr
ret
mov
inc
inc
pop
add
lret
jecxz
pop
fimuls
add
cmp
sbb
pop
push
add
and
mov
into
inc
push
lret
xor
ljmp
inc
in
pop
or
gs
push
dec
inc
nop
out
xchg
rcll
in
pusha
add
dec
xor
enter
mov
add
cmp
popf
pop
and
aam
push
mov
jno
sbb
push
adc
cs
push
js
inc
and
push
sub
xor
mov
dec
xchg
jns
pusha
xchg
cs
in
xchg
test
ljmp
push
ret
out
std
movb
and
cmp
xor
rolb
xchg
adc
call
dec
adc
or
outsb
sub
movb
popa
pop
push
adc
push
xor
dec
push
shll
mov
test
dec
fs
je
fcoms
sub
pusha
cmp
xchg
or
and
aaa
mov
pop
mov
dec
add
movl
add
mov
nop
sbbl
or
mov
enter
sbb
repz
nop
bound
or
sbbl
enter
test
and
lods
mov
pop
jge
cwtl
loopne
add
push
or
push
loopne
mov
dec
mov
mov
lods
pop
sbb
mov
into
inc
push
pop
and
iret
pop
imul
in
addb
add
stc
iret
test
hlt
mov
sbb
pusha
fs
mov
int3
xor
aaa
clc
mov
add
in
and
add
test
fsubrl
xor
adc
cmp
out
sub
scas
gs
fwait
xor
les
xchg
mov
mov
push
mov
add
add
dec
cmp
xchg
add
push
mov
xor
pop
test
or
push
or
mov
pushf
divb
push
dec
pop
scas
cmp
mov
add
filds
sbb
adc
out
xchg
add
movsb
or
add
or
mov
add
in
mov
aaa
push
cs
adc
cmp
mul
jmp
cld
pop
or
mov
push
ja
xchg
imul
jb
pusha
in
roll
inc
mov
adc
dec
cmp
and
leave
inc
mov
cmp
das
and
jno
shlb
push
sub
scas
ds
enter
sub
subps
je
cld
jg
aaa
subb
inc
push
add
sbb
shrl
and
addr16
rorb
jbe
sub
add
push
dec
stos
push
jmp
inc
imul
and
mov
int
pop
dec
inc
lods
add
clc
add
andl
popa
adc
in
mov
scas
jne
jp
dec
xchg
xlat
jb
add
push
inc
jno
xor
mov
push
leave
daa
add
sub
int3
call
mov
adc
add
sub
punpckhdq
add
loopne
pusha
sbb
pop
mov
inc
daa
push
mov
xlat
out
scas
data16
jbe
ret
pop
ss
nop
push
divb
cmpl
add
ljmp
shlb
pop
push
mov
add
jecxz
mov
add
lret
push
jae
add
dec
mov
lcall
enter
cld
push
fdivrs
mov
pushf
jno
sub
add
add
daa
cmc
hlt
sbb
test
or
jp
out
dec
sbb
push
sbb
gs
push
pushf
jne
inc
decl
in
push
push
pop
rclb
pop
adc
and
les
pop
rcrb
adcb
and
ret
jb
jo
fmul
add
sub
jp
mov
add
dec
xchg
or
stc
in
mov
fdivr
jecxz
sbbb
push
rol
mov
out
xchg
add
inc
iret
addr16
jbe
add
in
lret
daa
mov
mov
push
lock
pop
cltd
mov
pop
dec
mov
add
or
adc
add
sub
outsl
stos
add
sbb
in
fcompl
pop
mov
pop
add
lret
rcrb
aaa
cwtl
or
push
and
inc
pusha
jae
cwtl
scas
add
in
call
dec
mov
xchg
add
jp
pop
add
pop
push
dec
loope
xor
mov
movb
loopne
into
add
cmp
bound
lds
add
sbb
nop
sub
dec
add
int3
xchg
pop
fldt
cmc
push
ret
pop
add
enter
rcll
jle
les
call
out
push
xor
jb
xor
dec
movsl
shl
xchg
ljmp
adc
mov
lock
jmp
outsl
add
call
push
loopne
pop
lods
call
icebp
cwtl
jge
inc
aas
mov
gs
bound
or
mov
push
add
xor
pusha
fdiv
jg
in
push
jle
cmpsb
jl
or
push
mov
dec
mov
out
iret
cwtl
loopne
add
inc
add
cmp
push
mov
jmp
aas
inc
sar
sbb
jb
sbb
cmp
mov
xor
fsts
mov
pusha
lcall
mov
ret
outsl
ret
sahf
sub
mov
inc
add
add
repnz
scas
fisubl
ds
fnstenv
std
andb
das
inc
cmp
mov
xor
add
mov
sbb
add
mov
add
or
push
lret
add
jg
or
cmp
pop
outsl
dec
pusha
call
sbb
lea
into
lds
add
sbb
pop
stos
add
xchg
fidivl
ds
inc
add
mov
jb,pn
out
add
imulb
jbe
mov
inc
mov
sahf
scas
mov
or
int
push
sbb
adcb
sub
scas
xchg
add
out
mov
lcall
mov
add
jp
stc
sbb
add
ds
cltd
sub
test
mov
inc
je
cmc
mov
sbb
cmp
aas
cli
jb
push
inc
push
lods
in
pop
add
mov
fdivs
insb
ficomps
mov
dec
cli
mov
pop
add
pop
jae
or
mov
dec
mov
cmpsl
testl
enter
pop
stos
insb
cmp
inc
adc
add
xchg
retw
int
rcr
rolb
cmpsb
jg
mov
add
or
jns
add
mov
sbb
insl
pusha
sbb
or
pop
in
and
cli
rcll
jnp
pop
mov
xor
test
cwtl
add
mov
jecxz
and
mov
ror
ljmp
subb
std
add
mov
call
cwtl
and
dec
fistl
sbb
test
clc
inc
test
xor
push
sub
mov
push
mov
push
cmpsl
sub
shlb
mov
add
push
inc
push
pop
add
bound
mov
idivl
adc
arpl
or
aam
lcall
mov
mov
xchg
xor
frstor
dec
cs
nop
xchg
pusha
aam
xor
cmc
pop
xor
xlat
mov
dec
loopne
mov
pusha
pusha
cmp
loope
push
xchg
pop
roll
add
mov
hlt
scas
add
adc
out
add
xrelease
push
xlat
pushf
add
loope
add
das
jns
sub
jmp
mov
pop
cmovo
data16
sbb
mov
ret
sub
nop
inc
imul
add
push
iret
mov
sbb
add
stc
adc
cmpsl
test
push
sbb
aaa
jecxz
push
loopne
jp
and
test
mov
insb
push
sbb
pop
mov
cld
push
pop
cmp
add
adc
addr16
leave
xsave
in
adcb
sub
arpl
ds
mov
and
enter
jg
dec
repz
lock
push
mov
ror
int
ljmp
ret
inc
or
dec
adc
in
arpl
imul
mov
push
and
outsl
cmc
das
cmp
cltd
add
fsubs
jo
and
movsl
push
pop
push
xor
push
sbbb
mov
mov
sub
insb
xor
pop
stc
test
jns
add
pop
cmpsb
sti
or
out
lock
add
aas
lret
and
push
mov
mov
jne
cvtdq2ps
xor
mov
pop
je
stos
out
lret
add
mov
add
daa
call
mov
ss
aaa
adc
aas
pop
pusha
sbb
add
sbb
mov
xor
les
ss
fmulp
rcrb
cmc
jno
gs
mov
push
mov
mov
add
sbb
sbb
enter
sub
inc
xlat
mov
ja
arpl
dec
xchg
xchg
inc
lods
es
mov
and
add
pushf
add
je
add
pop
inc
mov
cmp
push
mov
inc
xor
cmc
push
push
adc
inc
ja
fsubl
je
addr16
dec
inc
stos
adc
fs
fstps
xchg
in
mov
mov
xor
loopne
cltd
imul
mov
lret
negb
add
sahf
fldl
xchg
repz
fwait
adc
adc
popa
push
mov
and
inc
mov
jmp
add
negb
mov
jmp
xor
mov
outsl
push
push
cli
scas
add
inc
add
ret
shlb
jno
add
test
cmp
icebp
clc
test
in
jmp
sub
sahf
lock
push
lcall
aaa
in
add
push
and
mov
loop
and
cwtl
dec
call
add
pop
mov
inc
add
inc
imul
mov
shlb
scas
xchg
cmpsb
aad
in
xor
inc
filds
dec
bound
push
add
sub
cmp
sub
adc
imul
sbb
pop
testb
adc
lcall
popw
xor
addb
mov
mov
push
jae
cmp
jb
cmp
or
addr16
out
or
sub
rolb
aaa
stc
iret
sub
sahf
movzbl
and
lods
sub
icebp
xchg
mov
mov
adc
or
dec
addb
out
inc
sub
push
ficompl
pop
arpl
stos
mov
inc
lods
fucomip
jge
test
mov
rolb
hlt
cs
sub
loopne
add
xor
leave
add
cmc
addr16
ja
insl
mov
addb
adc
aaa
cmp
repnz
mov
mov
add
daa
lea
mov
shll
rolb
pop
fstl
mov
mov
xchg
dec
test
dec
pop
sti
or
rcl
push
addl
jbe
mov
push
stc
add
dec
arpl
mov
adc
clc
leave
xchg
push
and
inc
xor
ret
sbb
lcall
fs
or
in
lea
jge
inc
jbe
add
dec
mov
cmp
dec
call
add
or
imull
arpl
inc
in
outsl
iret
cwtl
add
aas
addr16
mov
aaa
cltd
sbbb
sub
xchg
and
pop
inc
movsb
push
dec
cmc
cmpsb
push
mov
sub
push
test
inc
jbe
negb
xchg
mov
lret
cmpl
xchg
or
sub
and
and
push
arpl
or
test
rolb
add
push
inc
mov
lock
add
flds
pop
mull
inc
add
movsl
test
cmp
mov
loopne
add
add
hlt
testl
outsl
fst
pushf
and
js
loop
enter
popf
aad
sbb
push
inc
sub
mov
ds
lds
lds
jl
inc
fdivl
cmp
add
sti
cs
lods
mov
iret
lret
les
pop
sub
or
adc
mov
loope
ret
lret
ss
cltd
mov
int3
jne
add
psubsb
les
jp
cmp
scas
enter
or
aas
lret
gs
dec
into
pop
sti
loopne
cmpsb
push
sbbb
sbb
mov
add
lods
add
xor
inc
test
leave
aad
lock
insb
dec
or
sbb
add
ljmp
xchg
add
cs
mov
iret
inc
out
or
xor
dec
fstps
in
xor
lods
cmc
shrb
cmp
sub
push
add
fcoms
xchg
sub
lds
sub
adc
fldl
fisttpl
push
adcb
adc
inc
in
dec
leave
add
mov
addl
incb
add
jne
xor
gs
rcrb
cmp
int3
and
add
mov
xchg
add
sub
cmpw
adc
mov
xorb
xchg
je
popf
popa
xchg
js
adcb
push
sahf
les
inc
mov
sahf
sub
rclb
sub
js
adc
xor
movsb
xlat
adc
movsw
inc
mov
loope
lcall
test
or
pop
ret
or
xorb
clc
jg
pop
fists
scas
popa
iret
push
dec
rclb
sbbl
push
cwtl
aad
data16
xor
popf
mov
sub
adc
and
rolb
and
jg
mov
push
divb
xchg
outsl
dec
inc
or
aam
sarb
mov
cmp
add
sahf
mov
xor
leave
jbe
cltd
mov
sbb
ror
cltd
xchg
lods
out
push
add
push
pop
aas
mov
add
adc
xor
inc
fmuls
cmp
cmpsb
mov
test
and
inc
sub
aam
and
cltd
insl
xchg
inc
imulb
in
js
mov
sbb
sbb
sub
pop
loope
pop
xor
or
pushf
shr
push
cmpb
pop
cmp
das
add
iret
movb
push
das
cmpb
outsl
shl
mov
dec
xchg
addb
ja
fwait
pop
sbb
lahf
xor
mov
movsl
nop
pop
repz
add
sub
es
pop
ljmp
or
iret
and
out
je
aaa
dec
fisttpl
jae
mov
sub
xorb
aas
inc
jo
pop
lahf
mov
mov
cli
outsb
pop
mov
adc
out
maxps
and
test
sbb
fdiv
out
push
les
or
jecxz
push
nop
jg
and
iret
stos
sub
aaa
movsl
or
lods
aam
rcrl
sbb
mov
and
cwtl
sub
jecxz
xchg
cmc
add
mov
call
loopne
cltd
mov
sbb
push
jl
adc
inc
add
addr16
jle
pop
mov
loope
sub
jg
shrl
jl
and
ljmp
inc
mov
xchg
mov
pop
je
push
call
mov
aaa
out
movsb
dec
test
xor
scas
cmpsl
call
fwait
mov
sbb
xor
xor
movsb
dec
pop
inc
rolb
stc
jae
xor
sbb
inc
jne
fnstcw
pushf
and
scas
sbb
cwtl
test
icebp
inc
xchg
jmp
mov
mov
or
inc
mov
and
inc
mov
sub
dec
or
cwtl
xor
enter
pusha
push
in
inc
or
add
mov
inc
push
or
xor
mov
rolb
mov
mov
fdivl
ja
cmp
adc
js
adc
lods
cmp
or
jge
aam
sbb
add
ja
inc
or
das
mov
mov
xchg
and
mov
mov
mov
cmc
cwtl
test
dec
cmovge
push
subb
mov
stos
mov
pusha
in
nop
xor
or
out
push
dec
rol
loopne
shl
xchg
xchg
lods
inc
sbb
fists
hlt
shll
inc
mov
pop
nop
or
dec
rorb
lea
sbbb
jno
xor
xor
pop
push
push
push
jecxz
rolb
mov
mov
lods
adc
sahf
pop
or
ret
mov
adc
scas
enter
iret
mov
ss
xchg
mov
nop
out
sbb
pop
nop
adc
adc
push
test
nop
stc
dec
mov
das
movsb
push
inc
cmp
js
push
les
adc
cli
nop
inc
and
push
sbb
test
inc
xchg
adc
xor
shl
dec
test
enter
call
lods
add
loopne
and
or
test
clc
xor
mov
daa
adcl
fucomp
mov
mov
dec
ljmp
or
mov
or
loope
aad
pop
add
lock
inc
mov
add
jo
int
mov
inc
sahf
mov
add
sti
fisubrs
xchg
xlat
out
add
jno
or
sarb
jmp
mov
or
sub
gs
orb
sub
int
sarb
mov
adc
add
nop
cmp
inc
cmp
xor
cwtl
int
adc
dec
dec
adc
fsubr
pusha
sub
add
fcoms
clc
icebp
ret
cmp
inc
rorb
sbb
cmp
dec
push
jp
stc
insb
sbb
xor
loopne
rorl
cmp
roll
push
jge
jnp
popa
js
jno
dec
push
lret
and
push
add
pop
sbb
mov
inc
push
add
xchg
in
sbb
add
mov
loop
mov
fildl
adc
mov
add
inc
fidivrs
add
icebp
lods
push
add
call
pop
adc
pop
fwait
pop
test
push
sbb
movsl
mov
add
push
mov
or
insb
push
add
fcmovbe
push
sti
pop
and
dec
pop
and
xor
or
fdivr
add
or
adc
clc
cmp
inc
sbb
push
sbbl
notb
out
xor
or
cltd
cmpsb
sbb
sarb
out
mov
rcr
ss
xchg
xor
sarl
mov
dec
loop
pop
in
jo
xchg
out
subb
scas
lcall
in
and
push
mov
mov
jns
mov
pop
jae
xchg
into
fs
jg
sbb
jns
out
ds
sub
pop
adc
incb
ja
adc
push
pop
adc
scas
adcb
cmp
cmp
outsl
cld
mov
cltd
dec
xchg
mov
les
cmp
sbbb
pop
lcall
fwait
xor
jp
lods
adc
mov
sub
subl
cli
adc
or
das
mov
mulb
xor
xchg
xor
repz
dec
adc
mov
add
xor
sub
loope
lahf
mov
cld
int
push
mov
orb
pop
scas
jne
push
scas
jge
adc
pop
push
pop
or
ss
mov
repnz
std
mov
or
pusha
or
sbb
mov
mov
or
lock
and
adc
and
or
test
inc
or
or
lock
leave
int3
cmpl
out
or
xchg
jbe
andl
add
and
mul
inc
mov
inc
adc
cmp
sbb
xchg
roll
shrb
xor
insl
sbb
mov
inc
je
addb
jp
pop
push
push
fisttpl
outsl
stc
data16
dec
or
ds
orb
test
fsts
xchg
or
jb
mov
and
test
sbb
mov
jo
daa
scas
inc
popf
push
cmpxchg
stos
adc
add
or
movsb
inc
fiadds
xor
and
jns
jo
in
loop
ror
dec
lods
add
pop
mov
sub
and
inc
nop
loopne
cmpsl
stos
outsb
nop
leave
subb
jo
addb
rcrl
sbbb
adc
lods
jmp
cmp
scas
and
push
loope
cmpl
mov
and
ficompl
dec
push
add
sarb
enter
jo
mov
cltd
jge
xchg
aaa
cmp
fcoml
mov
pushf
and
add
xchg
stos
mov
ret
dec
add
mov
or
cmpsb
push
rclb
push
clc
into
or
sub
push
sbbb
inc
cmpl
mov
jne
or
insl
and
cwtl
out
and
add
or
sub
cmpsl
mov
xor
pop
out
pop
shrb
dec
ljmp
sbb
cmp
pusha
leave
pop
adc
data16
out
imul
and
rcrb
and
jmp
jbe
bt
out
adcb
cmp
or
pop
cltd
loopne
popf
pusha
ret
push
jl
sbb
stos
push
adc
push
cmpsb
inc
add
add
mov
pop
xor
pusha
jo
nop
adc
movsl
ret
xor
pushf
inc
or
cmp
clc
mov
mov
inc
add
cmp
movsb
cmpsl
ret
mov
pushf
cmp
shr
orb
inc
mov
mov
mov
jo
mov
inc
js
xor
pop
sub
adc
or
push
clc
call
cmp
lock
inc
nop
jmp
or
xor
cmp
sbb
enter
negb
dec
icebp
sbb
sbb
adc
jp
hlt
xchg
mov
or
pop
orl
mov
arpl
cmp
stos
or
lds
test
add
js
dec
cmpsl
nop
xor
fadds
inc
and
and
in
and
aad
lods
pop
jp
mov
cmp
jbe
mov
xchg
push
jo
pusha
mov
rclb
cli
jns
lds
mov
cwtl
test
mov
push
or
frstor
nop
pusha
adc
xor
push
xor
mov
in
add
or
fcoms
dec
lret
in
mov
xor
jns
sbb
mov
lock
lret
mov
nop
push
sbb
mov
add
sbb
fdivrs
or
test
xor
shr
cld
mov
hlt
adc
pop
mov
jo
and
or
xor
call
dec
rcll
shrb
call
in
gs
fs
or
sbb
test
add
or
dec
sub
insb
enter
aaa
out
xchg
clc
and
loopne
xchg
xor
or
mov
xor
fbld
cmp
jg
or
loope
sbb
test
mov
or
cmp
movl
cmpsl
addr16
inc
rorb
data16
push
cmp
dec
cmc
mov
aaa
xor
and
pop
jmp
or
cld
adc
bound
daa
xlat
push
pop
push
lock
les
xchg
or
imul
fcomip
add
cmp
dec
das
rclb
aaa
or
je
xor
add
cmp
addl
daa
mov
pop
ja
add
out
gs
arpl
cmp
jo
pop
jnp
sbb
daa
clc
arpl
or
shrb
lahf
subb
fs
sbb
sbb
or
mov
es
iret
fimuls
xchg
add
sub
aas
mov
add
unpckhps
bound
mov
push
sbb
push
sub
sub
adc
add
adc
addr16
ret
test
dec
dec
hlt
leave
int3
nop
cmp
lahf
mov
ja
sbbb
mul
orb
adc
sub
sbb
rcrb
or
or
add
jl
cltd
ljmp
daa
dec
adc
xor
mov
movsb
add
xor
or
fadd
adcb
cli
sbb
mov
lcall
adc
bound
sub
adc
sub
popa
sbb
gs
bound
add
jns
jle
cli
xor
enter
add
dec
dec
push
and
dec
add
in
fcomip
adc
addb
testl
pop
out
mov
sbb
inc
loop
xchg
filds
mov
dec
mov
mov
clc
addl
lock
dec
mov
xor
pop
addr16
add
cli
mov
and
xor
mov
push
pop
hlt
fdivr
sbb
add
pop
lods
mov
lcall
rorb
jo
mov
or
inc
lods
inc
jmp
mov
mov
bound
add
rcl
pop
jg
roll
pop
or
dec
arpl
lock
sbb
add
xorl
sub
and
lret
jp
push
push
fwait
add
or
orb
fdiv
xor
xchg
push
lds
andb
add
dec
movsl
daa
jmp
outsb
add
xor
sub
test
mov
insl
add
test
test
jbe
cmp
out
daa
sub
lds
lock
js
add
sbb
call
push
mov
dec
enter
add
test
ret
jo
movsl
int
mov
cmp
es
cmc
ljmp
iret
xchg
sbb
icebp
jge
add
pop
mov
fucomip
pushf
mov
or
xchg
repnz
mov
cld
movb
jmp
int
inc
pushf
sbb
outsb
out
test
lds
insl
iret
pop
jnp
enter
push
int3
fmuls
fmulp
inc
aas
loopne
push
add
xor
pop
repz
and
les
in
add
push
or
cmp
push
cmp
sbb
push
add
les
push
or
xchg
addr16
push
leave
add
imul
pop
clc
and
adc
aad
dec
push
or
cmp
sbb
popf
rorb
cmp
testb
ja
int3
push
in
jb
sarl
jle
leave
outsb
add
loop
hlt
inc
addr16
fidivs
rorl
loopne
lret
js
xchg
roll
rorl
das
add
out
mov
aas
out
push
add
cmpsl
cli
mov
push
dec
pop
mov
sbb
sahf
add
movsl
sub
pop
fdivl
mov
call
ja
jns
inc
nop
xchg
in
pop
add
js
testb
ja
jne
repnz
ljmp
cmp
aad
scas
xchg
jbe
push
mov
mov
test
or
add
push
pop
jecxz
rcll
subl
repnz
and
leave
notb
add
add
dec
ret
cltd
aaa
mov
mov
lds
jbe
add
xchg
pop
fadds
jge
leave
xchg
in
mov
mov
xor
addb
mov
and
cmp
add
pop
xor
add
mov
mov
fnstenv
mov
imull
xchg
std
shlb
loopne
or
push
rorl
adc
test
cmp
sub
pop
xor
xlat
pop
or
and
add
aad
cwtl
out
pop
add
sub
xor
mov
loopne
faddl
jo
call
ljmp
ljmp
fisubrl
fcoms
mov
loope
mov
shrb
or
nop
in
push
pop
in
mov
int3
inc
xbegin
inc
cmp
and
inc
xchg
dec
jl
pop
or
cmp
jns
mov
jbe
test
push
dec
mov
add
xor
in
loop
ds
and
into
jno
lahf
mov
dec
xor
jnp
shll
push
mov
ret
fisttpl
daa
push
sub
lock
fisttps
add
push
sbb
pop
aam
sub
adc
clc
div
jns,pt
sub
push
and
cmp
scas
inc
loopne
loopne
xor
fists
pop
sti
aam
arpl
in
add
int3
out
call
sub
jmp
lock
jbe
nop
inc
jne
mov
stos
jecxz
or
push
inc
mov
and
and
mov
inc
cld
add
cwtl
and
xchg
iret
xlat
add
sub
jmp
mov
fwait
xor
into
mov
pop
aas
js
mov
jns
push
sbb
sbb
mov
sbb
xchg
lock
pushf
pop
cli
loopne
cmpsb
cmc
jp
lock
lods
pusha
lret
cmp
push
push
jno
mov
push
jbe
inc
add
push
mov
xlat
lods
addb
mov
or
fistpll
add
add
hlt
sbb
xchg
or
add
repz
ss
mov
stos
andl
pop
icebp
mov
pop
jmp
fimull
rcrb
mov
xchg
add
xchg
movsl
test
repz
pop
pop
inc
testl
add
mov
add
add
mov
mov
out
xchg
lahf
pop
sarl
add
fwait
test
bound
sbb
filds
push
les
roll
mov
ret
sub
adc
int
movsb
cmp
inc
xor
sbb
xor
stos
int3
or
cmp
scas
pop
jns
xor
shlb
cli
stc
and
mov
add
clc
inc
add
hlt
add
add
pop
aas
jbe
xchg
cs
mov
ds
xchg
sarb
or
aas
add
insl
pop
std
fwait
xchg
and
mov
into
xor
mov
sub
add
cmp
mov
mov
push
pusha
jl
and
mov
clc
test
scas
pop
and
add
int
nop
add
sub
adc
js
out
or
lahf
add
push
mov
push
and
in
pop
add
cmpsl
enter
and
stos
ret
addr16
outsb
adc
clc
int
pop
sbb
scas
in
filds
in
sub
add
test
sbbl
add
aas
mov
xchg
pop
jnp
shl
mov
or
mov
xchg
pop
call
loop
sub
adc
fdivp
stos
add
lock
lods
fdivs
mov
dec
push
dec
push
stc
cld
add
les
test
adc
jnp
adc
sbb
cmp
pushf
notb
jge
jg
ljmp
pop
orb
pop
pop
add
daa
or
add
pushf
dec
shll
jl
jns
pop
icebp
push
lahf
xchg
mov
pop
fidivrs
pushf
pop
loopne
xchg
and
pop
add
imul
push
das
in
xchg
pop
push
cmp
shl
mov
xchg
in
fidivs
jae
pop
test
mov
scas
mov
add
xchg
mov
push
roll
mov
adc
push
rorb
into
and
add
fsts
mov
cmp
nop
add
cltd
ficoms
das
pop
mov
movsl
sub
and
es
xchg
sub
add
pushf
divl
shr
push
jg
cmp
push
push
call
test
arpl
ret
pusha
ljmp
shrb
jns
add
je
fiadds
sub
repz
adc
or
mov
cmpsb
xor
pop
lds
orb
aad
scas
inc
xor
lock
call
push
ret
and
or
lock
xchg
mov
loop
lds
out
data16
nop
xor
xchg
mov
mov
repnz
cli
repz
leave
dec
dec
add
pop
inc
popa
movl
add
add
push
lods
cmpsl
jle
rclb
add
cmp
push
pop
sub
ficomps
dec
or
sbb
int
adc
fildll
add
add
sarb
pop
jg
jb
add
mov
mov
cmp
jb,pn
add
outsb
push
sbb
push
jecxz
mov
call
add
lret
pop
les
sub
mov
lahf
dec
sbb
xchg
xchg
jg
pop
lret
hlt
jg
add
push
repnz
dec
xor
mov
lds
sbb
data16
arpl
inc
pop
ror
pop
scas
cltd
das
inc
lock
fdiv
movsb
sbb
stos
fildl
xchg
xor
lahf
loopne
push
mov
outsb
dec
repnz
inc
aad
ror
dec
out
xchg
loopne
mov
xchg
cmp
pusha
push
call
or
pop
adc
jbe
cmp
dec
pop
enter
nop
push
movsb
xchg
scas
add
int3
pusha
imul
inc
mov
enter
jmp
outsb
fstpl
add
inc
popa
add
pusha
mov
jo
sbb
inc
mov
in
jnp
push
inc
ja
scas
cmp
pop
out
jecxz
pusha
loop
xchg
test
push
cmp
stos
add
jmp
ljmp
imul
mov
aam
cmpb
xor
xchg
or
and
pushf
outsb
int3
dec
fcmovb
mov
les
mov
fwait
pop
ljmp
js
shr
pop
dec
out
stos
add
mov
ret
mov
add
dec
sbb
push
cmp
dec
push
pop
ret
rcrb
mov
lock
sbb
fidivl
add
subb
add
test
clc
cltd
loop
aas
mov
xchg
inc
sub
push
ss
add
xor
ss
lret
push
movsb
data16
pop
out
pop
sbb
inc
pusha
pusha
mov
adcb
mov
add
js
dec
je
jae
sbb
imul
inc
add
repnz
ret
cmp
add
out
sbb
dec
adc
mov
pop
mov
or
add
hlt
sbb
pop
insb
subl
enter
jne
xchg
int3
xchg
xchg
or
sub
sahf
adc
aam
cs
xrelease
add
pop
scas
push
push
loope
outsb
cmp
das
dec
cmovg
fdivrs
jl
jle
xchg
add
mov
repz
mov
add
and
int
in
and
ss
add
clc
test
push
adc
or
add
mov
add
xchg
data16
lock
movlhps
sbb
jl
add
repnz
push
sbb
je
cmp
adc
push
pop
mov
icebp
fistpl
imul
in
in
loope
enter
mov
push
mov
cwtl
jp
rolb
mov
adc
push
add
push
loopne
gs
adc
inc
loope
dec
icebp
xchg
fdivp
xor
push
jae
sub
loopne
xchg
mov
add
add
push
add
xchg
push
lcall
add
mov
mov
mov
or
add
testb
jp
jle
add
incb
pop
ucomiss
add
sbb
rol
add
xor
inc
add
jbe
inc
xchg
arpl
mov
je
call
add
jno
jge
jno
add
xchg
rcll
add
inc
push
mov
add
rolb
xchg
push
add
mov
sbb
cld
sbb
dec
add
test
jmp
and
xor
cmp
add
js
jbe
mov
mov
in
add
loopne
adc
cmpsl
and
add
fs
outsl
or
mov
and
push
into
or
inc
shlb
cmp
adc
sub
in
jae
outsb
add
icebp
outsl
add
push
cwtl
data16
out
orl
sub
jecxz
jo
sub
cwtl
add
aam
dec
adc
popf
ret
bound
roll
push
xlat
adc
fimuls
ret
nop
rol
jae
in
pop
add
cmp
adc
shrb
push
mov
cs
int
movsl
sub
fidivrs
jle
mov
jecxz
add
add
aaa
sbb
das
loopne
outsb
enter
jb
jno
and
add
arpl
cld
dec
in
add
lds
testl
dec
pop
movb
cltd
and
pop
iret
pop
loopne
jne
jle
add
push
decl
add
rol
mov
mov
cmp
xchg
adc
inc
xchg
jbe
mov
lret
pop
pusha
add
dec
xor
pop
test
cwtl
sub
push
jmp
sub
ja
cmp
mov
jmp
in
adc
push
fildl
mov
scas
adc
push
push
std
cltd
pop
dec
lock
sub
cmp
pushf
mov
cmp
iret
sti
pop
and
xchg
rcl
jnp
adc
loopne
aas
je
aam
sbb
pusha
js
jns
add
arpl
in
aad
das
dec
insb
adcb
adc
repz
add
add
pusha
sub
fistpl
adc
add
fbld
test
push
dec
ds
lods
cwtl
and
xor
sub
mov
movsb
or
loop
adc
push
sub
movl
push
arpl
js
fwait
out
push
shll
lods
xor
mov
pop
daa
pop
or
lods
dec
jmp
add
xor
pop
ljmp
or
mov
cmp
popl
fwait
repnz
lcall
mov
in
lret
add
lret
add
cmpsl
jmp
add
or
ltr
int
dec
mov
roll
sub
mov
stc
or
add
rcr
lcall
push
inc
stos
sub
scas
pop
add
cmpsb
adc
popl
aam
sub
int
add
or
mov
pop
imul
cmp
jecxz
lahf
push
mov
sbb
cmpsl
ljmp
xor
cs
inc
add
fcmovne
push
add
pop
mov
ss
add
push
sbb
pop
jge
jecxz
test
roll
sarb
add
lds
add
jns
loopne
test
add
shlb
add
inc
dec
push
push
mov
or
mov
outsl
add
and
mov
mov
mov
pop
add
jns
push
test
jne
icebp
add
aam
and
cmp
icebp
sbb
inc
js
movsl
or
sbb
mov
mov
xchg
pop
mov
emms
add
insb
jl
push
dec
lret
dec
pop
add
xor
cmpb
imul
jns
fstps
push
cli
jecxz
sti
lea
ror
dec
aam
push
xor
add
xchg
popa
jb
es
fildl
xor
loope
xor
test
cmp
adc
add
pop
xor
cwtl
add
sbb
clc
xor
or
jne
inc
add
xchg
add
in
add
add
nop
sbb
mov
inc
lcall
add
movsl
loop
aaa
mov
or
idivl
add
scas
push
lods
push
popl
or
sbb
add
lahf
das
jnp
mulb
push
lret
add
out
test
adc
sbb
jg
int
and
jmp
pop
mull
jecxz
sub
je
lods
nop
addr16
sbb
int3
add
push
fstpt
lret
test
sbb
xor
dec
mov
and
fdiv
add
scas
pushf
inc
xchg
shl
std
jne
mov
and
lock
rcrb
mov
xchg
push
add
lahf
pushf
and
js
fidivrs
add
adc
add
pop
pop
cmp
add
push
lret
popa
dec
sarb
inc
add
sbb
mov
jo
mov
jnp
add
pop
gs
sbbb
hlt
sbb
sub
call
pop
xchg
add
outsl
xchg
jb
js
bound
nop
int3
dec
mov
mov
syscall
cld
mov
or
pusha
sbb
jp
lret
or
pop
inc
inc
call
jg
jo
lret
clc
movaps
subl
mov
mov
add
cmp
hlt
add
cltd
movsb
cwtl
cmpsb
sub
adc
mov
mov
dec
cmp
and
shlb
inc
or
std
fwait
test
cwtl
add
ss
btr
ljmp
leave
mov
add
adc
fildl
or
scas
lds
sbb
mov
mov
outsb
aaa
add
lret
jecxz
imul
cmp
testb
loopne
push
mov
rcr
jo
add
sbb
clc
dec
inc
add
xchg
push
add
pop
and
add
lret
iret
dec
jae
add
add
add
jne
and
loop
sbb
insb
jl
add
stc
xchg
fists
cmpl
fwait
pop
hlt
add
or
fnstcw
or
and
int3
enter
mov
ficoms
and
and
cli
lahf
lea
int3
xor
test
add
inc
das
out
loopne
sub
push
sub
andb
add
out
cli
aad
or
clc
add
cltd
movsl
lcall
or
inc
mov
and
mov
sub
pop
mov
push
mov
icebp
outsl
popl
mov
addr16
filds
fsubl
roll
jmp
jmp
add
sub
jg
bound
add
jae
int3
mov
sti
repz
cwtl
inc
push
pop
fsubrs
adc
mov
scas
cs
mov
mov
push
dec
mov
pop
stos
cmp
mov
inc
sbb
push
fwait
insl
fiaddl
stc
or
test
cwtl
cmp
add
mov
inc
xchg
popf
pop
and
rorl
pop
or
push
mov
ja
cmp
push
subl
lahf
mov
repnz
dec
fxch
fisubrl
clc
mov
add
xor
xchg
imul
mov
add
mov
in
lret
add
mov
roll
orb
pop
dec
jb
push
dec
sbb
and
jno
das
add
stos
jmp
mov
mov
add
lret
in
dec
test
push
add
add
arpl
js
dec
sub
add
cmp
in
inc
add
push
movsl
mov
add
mov
inc
adcb
push
push
mov
jbe
jecxz
xchg
ss
in
sub
lahf
out
inc
xor
lock
xorl
nop
int
mov
add
pop
sbb
ss
call
cld
jno
cmp
popa
xchg
mov
add
enter
mov
incl
jo
xchg
dec
xor
int3
xchg
sub
andb
cmp
adc
movntps
lods
mov
xor
xchg
add
adc
mov
lea
xchg
pop
add
adcb
int3
dec
jecxz
pop
cmp
jl
in
test
cs
orb
jns
add
sub
or
push
push
dec
pop
pop
call
mov
jbe
mov
and
sub
push
fcompl
add
jp
inc
and
xchg
fsub
nop
insl
iret
add
cwtl
add
jb
push
inc
mov
insl
add
stos
pop
cmp
fadds
jle
ret
mov
add
dec
mov
andl
cmp
jae
cmpsl
mov
sbb
mov
lods
add
sarl
and
clc
push
xchg
sub
repz
adc
mov
mov
jnp
add
xorl
cmp
std
and
cmp
mov
ljmp
sbb
push
jno
add
std
int3
adc
stos
cvtdq2ps
sbb
push
pop
mov
pop
outsb
mov
push
push
call
adc
fisubs
adc
push
pop
add
adc
clc
inc
pop
je
sub
push
popa
ds
pusha
cmp
pop
neg
stos
in
and
or
xchg
push
and
test
inc
lds
push
add
daa
decl
sub
cmp
xchg
push
iret
add
adc
jae
daa
or
push
rcr
xor
jne
add
xor
add
sbb
data16
into
fwait
cmpsb
fmuls
jmp
aas
pushf
scas
in
add
or
inc
mov
rolb
and
je
add
jns
hlt
inc
je
xor
sub
dec
add
adc
shrb
or
aas
jg
add
scas
lock
popf
fsubr
xor
adcl
lahf
jecxz
sub
repz
add
xchg
push
add
fwait
sbb
test
add
jp
adc
cwtl
dec
mov
add
mov
hlt
imul
push
adc
xor
sub
addr16
daa
scas
roll
sahf
add
xlat
fld
dec
mov
js
inc
and
add
push
aaa
in
scas
jp
jmp
rcll
mov
mov
xor
test
sbbb
roll
jnp
or
movsb
lcall
sbb
into
push
add
movsl
and
imul
mov
cs
sbb
clc
xor
cmc
pop
xchg
jl
add
popa
xchg
mov
push
or
sub
mov
jge
xchg
mov
cwtl
inc
push
lods
ljmp
xor
add
and
scas
jl
orl
adc
sbb
xchg
cmpsb
add
sub
or
xor
cltd
mov
inc
or
push
roll
repz
cmp
test
and
add
scas
in
sub
movsb
and
icebp
clc
mov
add
mov
adc
push
xchg
add
lock
mov
xchg
push
repz
mov
push
cmpsb
lret
mov
jmp
mov
lcall
subb
sub
imul
sarb
lcall
pop
mov
pop
push
cmp
add
fnstenv
sub
cwtl
out
jp
add
rclb
icebp
hlt
mov
cmp
and
loopne
xchg
nop
pop
repnz
mov
cmc
xor
fadd
fxch
cmpsl
out
sub
add
movsb
cmp
inc
push
mov
pusha
adc
cltd
sarb
or
je
jne
orl
xor
test
inc
jmp
jge
fldl
stc
push
push
add
mov
add
imul
mov
pop
sti
mov
jnp
jns
add
xchg
pop
inc
je
pop
add
fsubrs
bound
add
movsl
jecxz
pop
push
out
repnz
jmp
xor
jecxz
mov
sub
decb
jmp
out
inc
adc
popa
sub
rolb
xchg
jo
ret
add
pop
jmp
pop
cwtl
add
xchg
int3
pusha
mov
ja
add
pop
loopne
mulb
ret
int
add
bnd
cltd
shrl
les
jp
or
inc
fsubr
stc
add
mov
mov
adc
inc
movsb
xor
jbe
mov
jne
iret
cmp
adc
cmp
sbb
jno
call
xchg
cwtl
aad
repnz
outsb
push
add
add
lea
jo
add
out
mov
jl
push
xchg
sbb
push
dec
test
jg
add
loop
inc
test
add
inc
iret
sub
sub
in
dec
or
call
or
stos
xchg
inc
lods
sti
add
fadds
pop
mov
popf
and
mov
mov
in
add
mov
xor
ret
xchg
adc
dec
pop
test
add
push
inc
dec
jb
lret
dec
movsb
shl
sub
push
sbb
rcrl
adc
in
popf
and
xor
loop
pushf
repz
lods
test
xor
imul
adc
sbb
add
push
and
push
jmp
orb
fcmovnb
xor
out
or
xor
add
xorl
iret
inc
cmp
in
sub
cmpsb
or
mov
sub
add
insb
push
stos
add
filds
loopne
xchg
and
add
sub
cmc
cmpsb
xchg
lds
sarb
add
xchg
call
mov
mov
adc
sub
mov
jno
fisttpl
aaa
add
sub
cmp
stos
sti
rolb
inc
and
ljmp
fstps
js
mov
mov
add
mov
inc
push
leave
xor
sub
pop
push
bound
loope
filds
mov
je
cmp
push
imul
and
pop
in
gs
inc
aam
stos
ret
pop
inc
enter
push
xchg
pop
lcall
xchg
adc
adc
lea
stos
pop
add
adc
add
jns
popf
mov
mov
adc
add
lods
dec
sub
call
lods
sub
cli
pop
dec
jl
push
aam
shlb
leave
cltd
lahf
add
les
xor
or
jne
add
lret
stos
stos
xor
pop
fsts
adcb
out
jp
cli
movb
lahf
mov
sub
pop
pop
add
in
lods
cmp
sbb
mov
dec
loop
fisubrl
mov
mov
cmpsb
sbb
inc
andl
aas
add
cmp
mov
fiadds
inc
mov
test
xor
ds
cs
dec
fildl
xor
push
in
mov
adc
or
out
pop
sub
pop
in
loope
jl
dec
xchg
push
out
dec
mov
shlb
and
inc
lahf
pushf
or
js
jmp
loop
mov
jecxz
push
xchg
xor
sarb
dec
lods
test
xchg
nop
loopne
movb
pusha
sbb
les
pop
add
sbb
add
mov
cmp
xchg
roll
sbb
add
aaa
jae
inc
stos
mov
sub
loopne
sbb
ds
nop
adc
adc
add
inc
add
mov
arpl
mov
mov
fildll
add
dec
ficomps
push
mov
mov
js
xchg
or
dec
and
fldl
cmpsw
clc
jae
sub
xor
scas
mov
or
sbb
ret
and
mov
sbb
jnp
sub
in
jp
and
mov
out
pop
arpl
lret
jb
insl
fiadds
xor
cmpsl
mov
adc
jne
ljmp
inc
sub
in
orb
int
out
cmpsb
push
mov
fldcw
fidivrl
add
or
xor
fldt
iret
add
xlat
test
push
mov
xchg
or
cli
test
into
stc
test
out
cmpsl
enter
xor
ss
sahf
add
flds
xchg
ret
inc
inc
aam
popa
inc
mov
add
sub
adc
mov
stos
sbbl
call
aaa
mov
jl
pushf
cmp
jb
subb
lock
mov
xchg
add
xor
dec
add
sbb
sbb
push
test
pusha
jg
inc
xchg
jns
jno
fsubs
inc
lret
aas
pop
push
mov
stc
icebp
sbb
pop
aaa
es
mov
adc
pop
or
lea
push
fdivs
cld
int3
mov
push
cmp
inc
adc
jno
add
popa
pop
cmp
lock
and
mov
adc
sarl
adc
mov
faddp
add
jmp
pop
mov
andb
out
pop
sbb
fwait
mov
mov
pushf
call
xchg
lods
sub
insb
in
popf
js
jne
inc
or
add
xchg
xchg
pop
sub
or
xchg
push
test
mov
adc
movsl
adc
inc
movsb
enter
cmpsb
fs
push
cmpl
rcr
pop
inc
mov
mov
add
call
insl
std
cmc
je
xchg
sbbb
mov
mov
inc
mov
stos
or
movsl
faddl
lcall
adc
or
sbb
aam
inc
adc
in
fmulp
clc
aad
pushf
add
and
jge
push
sti
xchg
pop
leave
sbb
idiv
add
mov
stc
mov
mov
pop
adc
stos
lahf
fimull
and
xor
fwait
add
fldz
pop
mov
pusha
roll
leave
ss
fnstsw
add
rcrl
hlt
cmp
dec
pop
pop
sub
jno
mov
push
bound
mov
andb
pop
inc
mov
fwait
lods
and
adc
mov
aas
add
or
gs
loopne
add
stc
xchg
loopne
mov
add
lret
push
add
pusha
jae
adc
insl
sub
sbb
push
lea
sub
jl
call
inc
mov
fnsave
ret
add
ljmp
add
inc
ljmp
xchg
lfs
xor
insb
pop
int3
outsl
pusha
or
orb
add
incl
and
pop
add
fstps
in
bound
ds
pusha
xor
jo
psrad
shrl
inc
xchg
dec
loopne
xchg
add
pop
mov
shl
mov
add
add
aaa
xor
cmp
rclb
repz
xchg
push
hlt
adc
lds
inc
xchg
sbb
arpl
fiadds
push
pushf
nop
shlb
dec
int3
fisubrl
rcr
fs
add
jo
pop
push
subb
dec
pusha
pop
mov
mov
ds
leave
add
mov
andb
ret
cmp
les
loopne
push
scas
sarl
cmpsb
lret
push
jl
in
int3
addb
push
fadds
sbb
nop
xor
nop
add
sub
xor
das
adc
mov
add
mov
adc
aaa
sub
pusha
or
incl
sbb
outsb
insl
cltd
icebp
push
add
mov
add
dec
jmp
aam
lcall
mov
xchg
sti
push
xor
clc
jo
ja
int
dec
mov
add
adc
lahf
sbb
add
es
push
mov
out
dec
dec
test
xor
hlt
xor
adc
xlat
xor
into
call
ret
pop
mov
push
fiaddl
adc
adc
adc
mov
xchg
mov
repnz
add
nop
hlt
sub
sahf
enter
je
add
lcall
in
rol
movsl
negb
add
and
sbb
inc
jecxz
fiaddl
or
mov
test
or
out
add
cli
sub
sti
mov
adc
add
loopne
fstpt
aad
xchg
or
pop
xor
or
xchg
out
xchg
add
jb
cmp
testl
push
cmp
push
cld
inc
push
out
enter
adc
xor
pop
pop
pop
jp
pushf
fstp
xor
mov
insb
adc
adc
or
push
int3
mov
aaa
fistl
mov
add
mov
ja
clc
enter
aad
xor
cmp
gs
loope
dec
dec
mov
add
mov
xchg
fistps
out
mov
je
sbbl
js
pop
inc
adc
inc
call
xor
add
add
sub
fstl
push
scas
sbb
push
jb
sbb
xchg
jle
loopne
xor
gs
cmp
cmp
mov
push
push
pushf
imul
nop
push
adc
fadd
and
out
xor
cmp
mov
jecxz
in
sahf
das
subb
add
fmul
es
inc
pop
test
xor
mov
rcl
jecxz
orb
int
sbb
pusha
dec
add
out
mov
sbb
add
jno
pop
jbe
mov
mov
shl
shrb
jnp
movsb
loopne
out
add
insl
and
sbbb
cmp
pop
lock
cmp
jnp
loopne
add
or
dec
test
insb
nop
cli
nop
push
mov
xchg
cmp
add
arpl
push
dec
pusha
stos
insl
movsb
sahf
xor
jo
lcall
add
sahf
add
gs
call
push
jae
add
cmp
lods
push
adc
cmpsl
repnz
xchg
hlt
and
push
push
in
lock
push
test
add
or
dec
sbb
mul
fisttps
repz
insb
add
jne
icebp
testb
test
ret
andb
jno
pop
push
mov
mov
mov
in
cwtl
add
in
cld
add
outsl
mov
js
push
add
int
cs
push
xchg
add
into
loop
mov
inc
mov
xchg
xchg
inc
adc
sub
scas
lods
add
pop
testb
es
cmp
jnp
dec
push
jne
jecxz
in
push
test
call
fdivrs
adc
nop
push
lds
in
cmp
jb
aas
pop
dec
add
cs
sbb
add
test
adcl
je
mov
cwtl
jbe
xchg
loop
js
mov
and
mov
sbb
daa
cmp
push
push
das
lock
jle
cmpsb
popf
inc
mov
add
in
sub
add
pop
clc
xor
add
shlb
icebp
cwtl
addb
sbb
cltd
and
shrb
add
mov
adcl
mov
fisttps
push
dec
mov
loop
cmpsb
ret
scas
fldenv
or
cmp
icebp
stos
inc
push
add
out
iret
mov
shlb
mov
or
dec
je
xor
jno
loopne
push
jl
pop
mov
sub
mov
inc
rclb
mov
add
pop
xlat
pop
add
dec
lods
js
adc
or
mov
cmp
push
add
aam
mov
out
adc
push
cltd
add
fildl
cmp
cmp
enter
mov
xchg
xchg
out
adc
outsb
bound
popf
cmp
add
ds
loope
mov
xchg
dec
adc
popa
mov
enter
iret
mov
add
sahf
adc
pushw
pusha
dec
cmc
adc
or
mov
push
sub
ds
lret
mov
inc
xchg
sbb
add
jns
sbbl
popa
fsubrl
xor
ljmp
lods
mov
enter
orl
add
outsl
bound
pop
das
leave
xchg
push
add
and
cld
add
je
push
sub
ss
lcall
orl
hlt
xchg
aaa
add
call
inc
jge
pop
cmpsb
xchg
testb
inc
test
jae
sbb
pushf
addr16
orl
test
adc
out
sub
outsl
mov
aas
pop
xor
jae
jmp
mov
and
mov
cmp
je
rcrb
sbb
push
xchg
in
inc
add
xor
push
stc
sti
adcb
out
mov
mov
pop
or
xchg
cwtl
jl
fdivl
or
test
sbb
nop
push
pcmpgtw
mov
adc
in
dec
add
jl
mov
roll
lds
xchg
push
mov
mov
push
lea
movsl
adc
xorb
push
sub
sub
pop
fs
je
dec
mov
sbb
push
and
sbb
imul
mov
cs
xor
dec
fiaddl
pop
cmp
or
lock
jmp
pop
adc
int3
lock
aas
dec
jge
in
pop
fnstsw
mov
cli
mov
xlat
repnz
sbb
push
xchg
adc
push
or
dec
xor
mov
or
dec
dec
add
mov
add
popf
mov
daa
pop
add
into
or
jo
add
or
cmp
js
pop
mov
push
push
pop
test
add
sbb
sbb
and
lret
add
dec
jle
or
addr16
pop
jns
out
dec
adc
push
cli
sub
push
fcoms
cmp
sbb
sub
xlat
je
xchg
add
into
jnp
or
subb
cmp
pop
orb
push
sarb
test
cmp
incb
jae
mov
mov
mov
push
or
fbstp
push
xor
pop
fisubrs
testl
fsubr
call
add
add
dec
pushf
testl
mov
pop
xor
inc
mov
aaa
adc
fcos
mov
stos
jp
push
addb
pop
cmpsb
lock
mov
pop
xor
icebp
add
mov
iret
jne
push
sbb
mov
jp
dec
push
dec
dec
add
xchg
pop
arpl
mov
add
add
mov
mov
mov
shl
pop
mov
pop
pop
xor
cmp
inc
mov
nop
add
mov
cmpsb
fists
subb
cltd
push
add
repz
aas
shlb
cmp
adc
add
or
cmp
and
inc
shrl
xor
or
jle
lea
or
pop
lcall
insb
mov
jb
dec
add
xor
add
fimull
sub
cmpl
add
xor
aad
dec
ss
gs
imul
ffree
clc
mov
mov
dec
les
movsl
stos
jg
insl
pop
lret
scas
jo
dec
xor
nop
sti
push
pusha
and
in
and
xchg
mov
lods
pop
and
mov
movsb
pushf
pop
loop
call
cmp
adc
cmp
sub
scas
movl
lods
xor
and
call
lds
xchg
mov
fldenv
dec
aam
adc
mov
das
lret
inc
cmp
in
push
fwait
jo
sahf
dec
out
jecxz
fnstcw
add
xchg
add
and
inc
add
dec
mov
jne
ljmp
nop
push
loop
test
int
xchg
popf
in
mov
sbb
adcb
and
add
enter
add
nop
and
mov
mov
pop
jge
dec
adc
enter
movsl
das
lahf
add
or
add
out
cmp
cli
test
scas
ret
fsub
or
fsubrl
xor
cmpsl
je
add
inc
dec
push
mov
lea
incl
and
inc
push
xchg
mov
add
add
stos
and
add
push
incb
data16
cmpsl
pop
add
mov
add
clc
xor
bound
and
add
jecxz
fdiv
pop
add
cld
std
rcr
and
mov
xor
add
cmpsb
add
fdivrl
add
jge
dec
ja
sub
not
push
adc
xor
shrl
call
pusha
pushl
mov
insb
sti
imul
cs
rorb
repnz
inc
outsl
or
dec
jg
ficompl
mov
mov
dec
aas
ret
and
cmp
add
cmp
or
adc
cmp
jge
lea
rcll
es
and
add
insl
aam
cmpsb
cmp
pop
xor
lret
sbb
in
or
lock
daa
jle
orb
add
pop
cltd
jbe
cmp
fistps
loop
or
mov
popf
test
gs
add
add
clc
cmp
call
cmpsb
cmp
rorl
imul
call
cmp
fucomip
outsb
add
jb
hlt
addb
hlt
testb
lods
jecxz
in
dec
mov
xchg
jo
push
pop
cmpsb
push
stos
dec
add
test
or
add
out
out
shll
push
mov
and
loopne
and
xchg
cmp
cmp
inc
stos
dec
jne
fdivs
rclb
add
push
and
rol
test
cs
mov
adc
fsubp
ret
out
xor
jns
cmp
pop
adc
and
push
push
pop
cmp
testl
jo
mov
xor
add
dec
mov
pop
jns
ret
add
mov
shll
enter
or
pop
insb
aam
sbb
mov
sub
sbb
punpcklbw
mov
add
sbb
lahf
push
cmp
push
loopne
cmp
cmp
dec
pop
fs
add
das
fcomip
test
sbb
fsubl
outsb
add
lcall
fld
cs
add
mov
or
xor
push
or
shlb
inc
lock
faddl
mov
rcr
pop
movsl
rolb
out
add
cmp
jp
push
pop
into
nop
pop
test
movsl
imul
xchg
mov
adc
ljmp
fstps
shlb
inc
push
std
add
cmp
cmp
lock
test
add
push
inc
enter
inc
mov
nop
add
cld
sar
leave
xor
add
ret
fcom
lahf
push
mov
in
xor
inc
movsb
mov
add
les
mov
cld
cwtl
sbb
in
das
or
add
jne
xchg
es
pop
or
rorl
int3
fbstp
mov
int
sarl
xchg
cmc
sub
nop
lock
enter
xor
cmp
fmull
add
sbb
jo
pop
add
xor
sub
sbb
dec
lods
adc
loopne
lcall
arpl
mov
mov
add
xor
inc
dec
insb
cmp
imul
xchg
fidivl
call
add
frstor
mov
inc
mov
gs
sub
mov
cmp
shr
and
movb
cmp
jne
hlt
scas
add
xor
sub
leavew
dec
std
push
and
xchg
pop
sub
xchg
lods
sbb
imul
rorb
std
xchg
pop
enter
xor
mov
fwait
mov
dec
vmovaps
lods
pop
pop
iret
popa
xlat
adc
rep
jne
aam
add
jle
pusha
mov
mov
fdivr
mov
adc
add
ljmp
add
mov
cld
add
inc
mov
arpl
bound
add
outsb
mov
xchg
mov
test
jge
pop
inc
mov
popf
sahf
orb
inc
loopne
sbb
mov
outsb
add
pusha
loop
ja
pusha
adc
mov
jae
push
add
push
sbb
jmp
pusha
mov
add
arpl
push
sub
mov
lcall
adc
dec
sub
add
aad
rorb
movsb
mov
hlt
pop
xchg
icebp
fisttpll
out
out
add
mov
rolb
xor
scas
push
loopne
insb
pop
pop
dec
insl
movsb
sti
mov
sarl
call
or
add
jmp
add
dec
mov
inc
add
dec
out
stc
cmpps
inc
fildl
mov
imul
mov
orl
push
cltd
mov
sbb
sub
je
ffreep
ds
andb
cmpb
or
inc
mov
testl
js
mov
jo
pop
push
ja
add
clc
neg
push
shlb
add
mov
jo
pushf
inc
ja
fsubrl
into
repz
dec
clc
loope
sbb
test
mov
aad
addl
scas
lods
xor
jecxz
scas
in
clc
mov
cli
sbbl
cltd
aas
test
jo
pop
ud2
imul
adc
jnp
add
fildl
xchg
ret
pushf
pop
cwtl
inc
sbb
add
jno
scas
cli
test
add
mov
enter
out
sub
insl
loope
data16
pop
xchg
mov
cs
testl
dec
pop
jge
shlb
add
sub
xchg
int3
jp
lret
les
pop
xchg
jbe
jl,pn
in
sti
repnz
enter
cmpb
je
mov
sbb
int
add
jl
cs
shlb
mov
or
clc
mov
cmp
bswap
dec
loop
xor
jae
and
add
xchg
addr16
jmp
leave
ljmp
pop
loopne
repz
add
pop
push
sbb
or
push
mov
pusha
jns
mov
add
add
and
pop
mov
inc
cmpb
or
repz
add
popa
mov
jp
dec
sbb
xchg
or
add
xor
ss
mov
xchg
in
add
arpl
sub
xchg
cli
ficoml
daa
mov
adcb
clc
lahf
in
add
sbbl
adc
xlat
or
push
cmc
add
add
mov
pusha
ljmp
pusha
dec
out
push
incl
add
add
shlb
leave
cli
mov
jo
xchg
loopne
push
shlb
test
add
outsl
movsl
add
and
inc
xchg
jo
inc
adc
cmpsb
xchg
ds
jl
decb
daa
pushf
pop
push
add
into
sti
sub
enter
sub
pop
push
pop
mov
gs
hlt
test
roll
mov
sbb
mulb
test
mov
inc
rolb
mov
jns
pop
mov
jbe
sub
sbb
rol
mov
jle
sarb
add
aam
outsl
mov
pushw
ret
stos
or
subl
or
push
pop
add
in
rcrb
add
mov
mov
sub
cmp
add
xor
adc
dec
push
hlt
or
sti
mov
mov
movsl
das
mov
cltd
xor
loope
in
lods
ss
addb
xor
xor
cld
leave
ret
pop
aas
dec
add
in
mov
add
daa
test
xor
jo
adc
loopne
add
and
cwtl
add
sbbl
xor
inc
fst
or
sbb
int3
sub
mov
sub
fcmovnu
out
add
jae
sbb
ja
rolb
add
cmp
movsb
mov
cli
push
add
xorl
loop
arpl
std
repnz
dec
add
aam
mov
add
fiadds
push
mov
xchg
leave
gs
out
addr16
rclb
mov
sbb
cmp
jmp
insb
xor
push
mov
movsb
add
jmp
or
push
das
dec
dec
mov
bnd
add
mov
dec
pop
add
cli
push
cltd
add
icebp
repz
push
in
push
mov
add
xchg
mov
rcrb
pop
out
pop
add
inc
add
cmp
adc
xor
push
cmp
shrb
lcall
fwait
testw
and
sbb
add
insb
add
jg
fdivs
add
jp
or
sar
xchg
cmp
add
shlb
mov
dec
sub
repz
fcmovu
mov
cmpsb
lahf
add
idivb
add
mov
or
pop
sbb
pushl
test
mov
loopne
fwait
mov
xor
add
insl
rorl
ret
pop
and
cli
cs
nop
lds
movsb
dec
lods
insb
add
and
leave
jge
jno
stos
jmp
xchg
mov
std
in
sahf
lret
nop
xchg
add
adc
ret
hlt
add
or
and
add
sub
jge
adc
lcall
pop
out
add
cmp
lcall
or
add
mov
rolb
clc
add
insl
mov
add
cmp
pop
add
clc
aam
mov
repz
add
fs
xor
add
ret
imul
ja
hlt
hlt
fwait
rolb
cmp
and
jp
in
aaa
add
stos
sub
jb
add
fcmovnu
sbb
add
push
and
cld
inc
and
or
sbb
dec
stos
add
or
loopne
aas
add
mov
or
sbb
test
sbb
in
xchg
sub
pop
jbe
xchg
mov
enter
adc
rorb
sbb
cld
dec
shll
mov
rcrb
inc
movsb
test
icebp
bsf
push
pusha
and
pushf
hlt
aaa
sub
mov
add
xor
sbb
data16
sbb
xchg
lock
inc
cmp
or
push
push
andl
in
jmp
add
lret
push
in
add
sbb
fisubl
dec
inc
adc
mov
mov
cmp
mov
push
sbb
push
inc
xor
mov
inc
xchg
sub
inc
aad
add
ficoms
cmp
xor
cmpsl
out
scas
add
push
cltd
sub
mov
loop
rcl
bound
xchg
orb
sbbl
mov
into
sbb
fbld
push
enter
xchg
cmp
insb
adcb
rclb
stc
pusha
loope
loopne
adc
les
pop
lds
push
imul
enter
loop
add
je
lods
add
push
mov
hlt
mov
add
insb
sbb
inc
xchg
jmp
jge
dec
add
sbb
jbe
cmpb
pop
enter
loope
pop
mov
ds
push
add
mov
add
mov
add
add
dec
adc
jecxz
ret
inc
cmp
out
insb
inc
pusha
push
dec
bound
add
arpl
push
add
ds
cmp
cmc
test
faddl
imul
mov
mov
push
int
pop
sbb
orb
or
sbb
fbstp
xchg
adc
je
out
xor
xor
mov
in
fists
pushl
jmp
pop
adcl
mov
frstor
push
push
movsb
cmpb
cld
and
inc
jl
add
stos
test
cmp
mov
js
sub
repnz
subl
dec
jns
out
mov
adc
add
repnz
xchg
dec
repz
adcb
sahf
push
add
jb
out
icebp
pop
out
add
xlat
cmpsl
push
add
cmpsb
and
sub
add
mov
adc
hlt
stc
push
rcrl
adc
sub
xor
pop
mov
ljmp
cmc
repz
jb
shl
cmp
pusha
in
jne
clc
add
adcl
popf
fcmovbe
test
and
cmpl
and
sbb
xor
cmp
mull
or
imul
jbe
cmp
cmp
jnp
push
cmpsb
mov
add
xchg
jp
cmp
sub
lea
pop
or
mov
xor
out
mov
xchg
adc
inc
andl
popf
and
inc
out
rcll
mov
xor
xchg
pop
add
cmpb
mov
mov
xor
sub
loope
cmc
push
add
cltd
data16
jl
sub
sub
repnz
stos
add
insl
jecxz
xchg
test
rcll
jmp
add
outsb
cmp
sbb
adc
sbb
jb
sub
insl
xchg
push
adc
push
add
cmpsb
fs
sub
add
outsl
bound
andl
jg
or
sub
jbe
stos
add
imul
cmp
cwtl
lds
incl
insl
sbb
and
inc
movsb
xchg
inc
xchg
cmc
add
out
xor
lret
fcomip
inc
sarb
sbb
and
or
lret
sub
add
mov
push
sbb
or
movsl
pusha
je
inc
adc
sahf
add
and
inc
xchg
pop
mov
sbb
shlb
add
fisttpll
add
daa
xor
add
inc
call
flds
add
xchg
adc
jbe
or
xchg
test
nop
cmp
jno
mulb
or
mov
iret
loope
add
xchg
lods
jno
in
shrl
xchg
inc
loopne
sub
arpl
cwtl
inc
pop
add
mov
ret
in
push
cmp
add
out
lods
idivb
outsl
xchg
sarl
adc
cmc
in
mov
pop
add
loope
incb
iret
mov
fimull
pusha
dec
rol
testl
das
or
add
ss
je
xchg
inc
outsb
adcb
ds
ret
adc
mov
push
add
fcomps
ret
mov
and
xlat
lret
pushf
mov
xchg
xchg
sub
out
add
pop
xchg
ljmp
leave
add
lahf
xor
add
int
pop
add
lea
add
pop
mov
add
add
sbb
jo
pusha
cwtl
data16
notb
sbb
test
addr16
outsl
hlt
add
push
add
add
xchg
xor
add
xlat
mov
push
pop
sarb
cmp
sbb
pushf
mov
cmp
cwtl
divb
lods
psubb
iret
xchg
rclb
or
add
loope
outsb
xlat
lcall
andb
leave
enter
pop
push
hlt
jb
or
out
pop
lock
pop
jg
push
xchg
xlat
adc
movsb
rcrb
int3
and
fidivrs
add
clc
ret
or
test
pop
adc
dec
sub
push
inc
inc
xor
jno
movsl
xor
sub
add
idiv
test
in
push
sub
sub
loope
pop
rcrb
adc
xchg
adc
test
mov
jl
and
push
fisttpll
mov
lcall
in
in
inc
imull
cwtl
adc
jnp
pop
mov
outsb
cmp
in
dec
add
mov
mov
loopne
maskmovq
idivl
xchg
sub
mov
add
cmp
orl
or
add
mov
add
jne
insl
push
mov
inc
popa
push
sahf
pop
js
ss
mov
xchg
push
cltd
sub
outsb
mov
xlat
std
in
push
push
add
ss
mov
inc
out
dec
repz
es
pop
xor
cmp
add
loope
pusha
mov
add
mov
sbb
imul
jge
int3
sbb
pop
stos
sti
outsb
xor
mov
pushf
rolb
or
aas
add
addl
fwait
or
add
jle
mov
loope
xor
jo
pop
push
add
jbe
xchg
std
rcrl
xchg
pop
sub
enter
rcrb
jge
adc
into
push
fnclex
mov
mov
enter
rcl
sub
mov
sbb
xchg
sub
jge
jno
mov
jae
pminsw
xor
mov
xchg
sbb
insb
mov
mov
ja
lret
outsl
mov
jns
cmp
and
mov
ror
sub
repnz
add
test
push
out
cmp
jecxz
movsb
sub
cmp
mov
ja
shlb
inc
sub
push
pusha
xchg
ss
push
mov
add
xor
std
int3
xchg
movsb
adc
ret
sub
in
aam
adc
scas
xor
xchg
mov
add
sub
pop
lret
cmp
in
pop
cld
push
push
adc
lea
adc
adc
sti
add
jp
adc
xor
out
mov
xor
ljmp
mov
nop/reserved
int3
pop
mov
ss
cmp
je
arpl
imul
jne
sub
cmp
add
mov
daa
xlat
and
jo
aas
dec
sub
sub
add
nop
sub
mov
int3
pushf
aaa
or
add
pop
push
push
add
pop
pop
inc
adc
dec
pop
pop
cmpl
in
loop
sbb
pop
scas
cmp
sbb
subb
into
jno
add
pop
mov
xor
pop
add
or
xchg
push
data16
ret
add
mov
xchg
or
mov
in
adc
push
push
popa
test
mov
idiv
dec
add
clc
or
fsubl
push
in
dec
inc
pop
jmp
xchg
aad
cmp
mov
mov
mov
adc
push
lcall
jo
bound
loop
mov
push
addr16
fwait
mov
add
sub
add
repz
aad
aam
rcll
cltd
add
cmovo
movnti
mov
fisttpll
repnz
rorb
add
scas
xchg
add
cmp
outsl
jnp
add
jmp
sub
add
jecxz
aaa
jno
push
cmp
jae
sub
jnp
inc
or
cmc
jo
iret
xorb
cwtl
inc
adc
filds
dec
pushf
lret
cmp
push
rolb
jnp
push
push
pop
xor
subl
addb
ret
and
inc
or
mov
fsub
xor
out
lret
hlt
mov
hlt
in
cmpsl
faddl
mov
outsl
cs
pushl
ret
add
jmp
mov
push
mov
fsubrs
mov
jns
add
aam
dec
dec
push
jl
pop
out
push
jp
mov
shl
and
in
jge
adc
push
dec
dec
test
or
xor
push
jo
xor
mov
cltd
dec
stc
sti
xor
cltd
sbb
xor
add
test
xchg
xchg
shl
sbb
and
push
je
sub
push
outsl
mov
fmull
mov
es
jg
popf
std
jns
movsb
xchg
push
add
push
pop
ds
mov
mov
loop
inc
pand
cmc
scas
cmp
push
cltd
ss
add
sbb
not
outsl
frstor
pop
fildl
out
mov
inc
cli
or
jg
jb
add
sbb
data16
push
fldl
mov
push
mov
mov
shl
jg
jle
lcall
inc
sub
mov
popa
pop
xchg
nop
cmp
jo
mov
add
add
in
lahf
dec
add
mov
xchg
inc
enter
lock
inc
add
cmp
push
pop
dec
push
add
cmp
mov
mov
shlb
xchg
add
xchg
nop
dec
mov
add
adc
cwtl
jmp
jmp
add
xor
jb
jne
add
lods
or
repnz
lret
ljmp
or
gs
test
notl
add
nop
ja
out
add
pop
dec
xchg
negb
push
faddl
pop
loopne
pop
push
or
mov
mov
stos
pop
int
aas
cmp
mov
aaa
dec
xchg
popf
and
orb
shlb
mov
cmpb
rclb
hlt
push
xor
inc
pop
stc
mov
push
fwait
add
inc
shlb
lahf
in
jno
shrb
mov
pop
cmp
mov
into
fsub
add
xchg
stos
loop
push
adc
gs
sub
add
cmp
sub
adcb
or
add
push
in
pop
je
inc
or
cmc
rorb
cwtl
lods
xor
cmp
stos
add
push
cld
mov
icebp
xor
int3
add
cltd
sarl
in
sti
mov
shlb
dec
add
std
lock
xchg
xor
mov
xchg
xorl
mov
dec
mov
and
jno
sbb
subb
add
ja
js
aad
sub
mov
sub
xlat
or
add
dec
in
roll
fnstenv
add
sub
adc
imul
pop
push
xchg
push
pusha
jbe
js
add
dec
and
cmpsl
jmp
inc
push
or
repnz
add
sub
adc
push
mov
insb
push
pop
roll
push
popl
jb
sub
jo
les
jns
sar
sub
lock
cmp
ficompl
in
add
dec
inc
clc
and
cmp
popa
and
inc
mov
xchg
vmwrite
add
xor
mov
push
xchg
orb
or
and
icebp
add
mov
notl
js
mov
pushf
adc
dec
pop
push
pop
add
xchg
movsb
add
mov
add
adc
add
add
ret
dec
sub
add
insb
imul
adc
jne
outsl
incb
cmp
loop
clc
push
cli
mov
rep
xor
negb
and
or
lret
inc
les
mov
rolb
pop
xor
mov
sbb
packuswb
xchg
scas
add
ss
mov
out
add
xchg
and
push
cmpsb
add
sub
mov
lds
sbb
pop
jmp
dec
imul
ds
add
fiaddl
jb
clc
mov
sbb
sub
mov
ja
cmp
or
cltd
loopne
adc
loopne
jle
dec
fstps
scas
mov
mov
push
add
mov
das
and
addb
cmc
jns
cmp
push
jle
mov
dec
ljmp
cmp
pop
mov
push
inc
jbe
jl
add
adc
add
lods
das
adc
sub
add
jg
mov
pop
adc
std
xlat
out
sub
insl
insb
jmp
push
fdivl
pop
sub
daa
jbe
xchg
xor
cmp
addl
inc
xchg
incb
xchg
loope
aas
mov
push
sbb
loopne
jae
hlt
add
and
fucomp
jge
cmp
xchg
and
nop
inc
add
shl
dec
jb
xor
add
loope
lahf
sub
sub
mov
jge
cmp
add
mov
ljmp
cmp
add
rcrb
pop
pop
mov
into
bound
lahf
fwait
xchg
nop
push
jne
pop
cmp
in
add
sti
mov
in
loope
mov
sub
pusha
inc
pop
add
test
pop
scas
xor
cld
fucomip
sbb
nop
test
or
mov
push
pop
clc
add
into
outsb
dec
jmp
clc
and
inc
and
sub
sbb
and
loop
in
inc
sbb
test
es
add
mov
or
adc
push
les
adc
pop
rol
adc
ljmp
mov
or
adcl
pop
pop
hlt
test
cmpsl
or
mov
iret
jecxz
add
icebp
ljmp
mov
mov
mov
call
mov
sbb
pop
push
push
std
loop
xor
mov
arpl
lret
adc
pop
mov
push
add
mov
cmp
mov
ret
sbb
gs
sub
aad
pop
dec
add
adc
pusha
xchg
rcrl
lcall
push
movsb
dec
arpl
mov
add
shl
xor
pop
mov
lock
inc
sbb
jle
inc
cmp
and
js
sbb
sub
je
mov
dec
and
add
xchg
pop
dec
nop
rcrb
mov
push
sbb
call
fnsave
jae
pop
adc
rolb
mov
call
sbb
dec
push
subl
add
bound
addr16
jno
mov
fwait
adc
sub
jb
add
adc
sbb
mov
sbb
out
pop
fnsave
outsl
sbb
and
imul
mov
movsb
ret
ficoms
add
lods
jg
jmp
outsl
mov
sbb
inc
arpl
or
call
clc
push
lgdtl
sarb
sub
sub
ljmp
loop
repz
add
lods
cld
and
sub
xor
nop
adc
inc
pop
push
call
std
pop
xor
pusha
dec
cmc
sub
lods
push
push
jne
in
add
jb
push
out
sub
pop
and
push
lahf
rolb
pop
das
lods
stos
imul
ficompl
sub
out
dec
or
add
sbb
mov
inc
dec
mov
mov
cmpsb
push
dec
mov
or
roll
int3
pop
pop
or
stos
call
push
in
lock
add
mov
mov
push
inc
xorl
inc
xchg
in
lds
repnz
insb
add
inc
test
add
mov
cmp
push
loop
adc
add
mull
aam
cmp
movsb
outsl
sub
jle
add
sub
mov
and
mov
push
adc
test
add
arpl
ja
dec
push
in
jno,pn
or
cmovb
mov
or
add
scas
mov
das
add
jl
dec
out
dec
fidivrs
scas
stc
xchg
mov
rcll
pop
add
testl
push
arpl
sbb
inc
loope
dec
aad
fildl
imul
repnz
lcall
cmc
or
sub
pop
loop
test
lds
jnp
lahf
pop
mov
push
push
pop
test
and
cld
jg
adc
imul
stos
add
das
sti
sub
mov
int3
sbb
addr16
js
sbb
xchg
pop
adc
sbb
or
fimull
xor
push
and
shlb
pop
add
call
push
inc
and
sub
cwtl
sub
or
adc
idivl
ds
sub
insb
add
sbb
mov
mov
pop
push
fs
insl
adc
add
fiaddl
imul
in
sbb
popa
mov
mov
ja
jl
sbb
dec
inc
inc
adc
jg
mov
enter
or
and
cmp
bound
and
outsl
xchg
out
mov
pushf
sbb
push
add
dec
sti
stos
int3
or
cvtdq2ps
mov
add
push
jbe
popa
xchg
imul
fwait
mov
jmp
add
jg
in
xchg
xor
in
sub
add
mov
lcall
cmpsb
imul
jns
xchg
add
scas
dec
push
fcomip
push
and
pop
inc
sbb
xchg
cmp
adc
dec
sbb
jle
push
inc
test
cmc
mov
into
mov
push
outsl
movsb
mov
push
stc
ljmp
das
cli
push
mov
enter
sub
xor
or
push
pusha
jge
or
pushf
adc
fldl
pop
add
hlt
arpl
fcoms
pop
or
push
add
pop
testl
fcoms
aad
xor
test
hlt
add
xchg
sbb
mov
sbb
inc
ss
pop
psraw
jl
dec
or
xchg
or
mov
shll
xorb
pop
ljmp
rorb
fbstp
cmp
cs
xor
sbb
cmc
push
cmp
xchg
or
add
icebp
pop
enter
sbb
xchg
mov
lock
mov
pop
outsl
icebp
mov
pushf
cmc
adc
xchg
xor
lahf
ret
xchg
sbb
pusha
xchg
sahf
sbb
inc
jno
lahf
mov
push
mov
js
push
cmp
aas
adc
sbb
div
mov
ret
sbb
lds
dec
sahf
or
inc
mov
outsb
cwtl
orb
stos
push
adc
cmpb
mov
xchg
xor
dec
sbb
insb
lcall
add
xor
js
lds
pop
in
adc
sbb
dec
nop
adc
movsb
or
and
add
sbb
test
mov
sbb
or
out
sbb
and
fs
cmp
add
dec
mov
pop
add
jmp
test
cli
lret
jnp
fmul
add
ret
scas
adc
cmp
cmp
xor
clc
push
jge
add
cmp
dec
dec
inc
ret
xchg
xor
xor
test
mov
and
mov
pop
push
push
mov
adc
or
add
adc
rolb
iret
cld
cmp
mov
xor
sbb
andl
and
inc
dec
sub
rol
pop
std
pop
add
inc
xchg
ja
or
leave
ror
sbb
jg
push
lret
jp
test
fs
add
mov
add
pop
fldt
repnz
out
sbb
cmp
xchg
add
mov
dec
add
fcompl
or
mov
lahf
adc
cli
addb
in
xchg
mov
jne
add
nop
mov
inc
add
fwait
dec
pop
lock
sub
test
lahf
call
adc
incl
movsb
mov
rcrb
jmp
push
add
loopne
jns
adc
cmp
sub
jno
aas
sbb
jnp
fwait
add
outsb
jge
cmp
cmc
into
mov
adc
aam
insb
push
pop
inc
xchg
fwait
insb
bound
inc
push
inc
add
cwtl
mov
int3
jmp
idivb
push
or
xchg
xor
xor
or
inc
pop
pop
inc
mov
sbb
movsl
push
inc
dec
add
sbb
cltd
dec
and
mov
movsb
addr16
xchg
mov
xrelease
add
mov
repnz
int3
xor
cld
ds
call
rolb
add
mov
or
out
and
andl
cmp
pop
test
sahf
mov
mov
enter
popa
cs
add
mov
shrb
call
mov
push
enter
outsl
xchg
loopne
lcall
cmpsb
int
or
imul
sbb
out
adc
add
cmp
and
cli
push
mov
orb
daa
insb
mov
pop
popa
dec
add
mov
pushf
jo
add
in
loopne
add
inc
jb
mov
xor
or
gs
cltd
xor
test
shlb
into
fmull
add
push
fwait
ss
inc
dec
adc
fbstp
jecxz
add
cmpsl
inc
cmp
lret
pop
and
jne
lea
dec
pop
push
shrb
add
shll
pop
int3
mov
mov
jne
or
out
pop
add
cmp
push
add
jg
push
mov
test
std
jle
push
and
mov
movsb
and
std
pop
cli
cli
add
sub
fildll
add
mov
jecxz
arpl
gs
mov
sbb
fsub
bound
pop
xchg
add
iret
imul
stos
jecxz
mov
das
add
ds
cmp
pop
mov
lock
add
lods
stc
loop
cmp
clc
and
mov
dec
shlb
add
mov
icebp
mov
call
pusha
dec
dec
pop
and
inc
adc
dec
cld
fs
fwait
jmp
cmp
nop
inc
add
fstp
sbb
inc
js
sbb
dec
jne
pusha
les
add
in
push
or
in
dec
jecxz,pt
sub
movsb
inc
pop
fidivrs
shrb
adc
xor
xchg
push
js
rorb
sub
mov
dec
jmp
dec
push
add
xlat
pushf
imul
and
jbe
pop
loope
pop
inc
dec
and
adc
pop
inc
add
ja
jne
fsubl
leave
or
dec
dec
add
cltd
shlb
insb
dec
lahf
mov
lods
xor
cld
inc
sub
mov
fwait
add
xlat
pop
daa
add
inc
icebp
xchg
je
sbb
push
cltd
xor
xor
pusha
add
dec
sbb
adc
outsl
nop
push
dec
std
adc
cmp
std
lods
inc
dec
aas
outsl
repz
les
mov
jle
adc
cmp
adcl
xchg
or
mov
jl
aaa
clc
movsb
dec
jo
add
outsb
fwait
adc
popf
shlb
sub
shrl
sub
sub
mov
inc
sbb
push
stc
es
add
push
or
cmc
ret
mov
cmp
cmpsl
sub
dec
sub
in
add
data16
cmpl
in
or
mov
xchg
pusha
sarl
pushf
jmp
negb
shll
movsl
sbb
add
mov
inc
xchg
out
aas
or
push
jl
push
cmp
mov
pushf
mov
enter
mov
cwtl
jg
xchg
adc
stc
sahf
add
vmovups
xchg
mov
loop
push
mov
fs
jo
dec
test
push
icebp
push
sbb
jae
mov
stc
mov
andps
add
push
stos
cld
insb
jmp
sub
push
add
dec
add
fsubs
fidivs
iret
outsl
jle
push
popf
dec
add
ficompl
cmpsl
dec
jae
in
outsl
lcall
and
xchg
adc
bound
outsb
push
cmpsb
shl
je
mov
inc
pop
inc
and
scas
popf
mov
js
add
fildll
adcb
sarl
add
test
xchg
and
inc
push
sbb
jle
sub
jbe
mov
clc
add
cmc
jo
add
ss
cmp
pushf
and
call
inc
ret
push
cli
xor
int
mov
mov
inc
push
and
add
in
dec
or
mov
out
out
or
add
inc
dec
push
add
in
mov
xor
add
not
jns
jecxz
or
inc
pop
fbld
lods
add
dec
cmpsb
scas
aad
add
pop
dec
gs
mov
inc
mov
rol
pushf
adc
xchg
jb
add
cwtl
jl
add
push
jmp
hlt
mov
outsl
shlb
add
push
in
pop
sbb
add
xchg
aaa
add
mov
sub
xor
or
inc
inc
pop
push
xchg
add
xchg
jmp
add
ret
clc
xchg
sbb
fwait
add
add
jns
sarb
inc
sbb
mov
cs
sahf
jp
roll
add
mov
negl
lds
jo
add
inc
movsb
arpl
cmpsb
ljmp
popf
jge
sub
out
mov
cmc
mov
add
mov
inc
fnstcw
add
pop
xlat
sahf
add
pop
pop
pop
jl
jns
add
fdivrl
aas
and
lret
adc
inc
scas
and
add
mov
add
aad
dec
imul
mov
mov
mov
pusha
xchg
ja
sbb
lcall
sahf
mov
add
aad
pop
jo
testl
ret
shl
popf
add
jecxz
jns
movaps
imul
aas
xor
dec
cmp
sahf
pop
loope
enter
in
jns
add
pushf
ja
jo
test
add
mov
sub
fistpll
loop
mov
imul
lds
push
aas
es
mov
jmp
mov
jnp
jns
adc
stc
fdivrl
lret
xor
add
mov
pusha
or
es
dec
xor
push
mov
sub
and
inc
or
push
push
je
nop
xchg
xchg
aad
jmp
rorl
pop
push
lock
pop
in
aas
jge
push
dec
mov
lds
inc
add
in
add
bound
adc
or
and
mov
inc
mov
flds
andb
jmp
call
push
cmp
int
sbb
and
lcall
cmp
and
out
loope
xor
inc
mov
daa
daa
ljmp
add
jns
movsb
cmp
nop
pop
pop
pusha
mov
add
stos
push
out
loope
add
jb
mov
dec
cmp
pusha
nop
add
inc
sbb
loope
popa
jbe
mov
test
scas
sbb
push
stos
xor
cwtl
pusha
pop
daa
pop
mov
out
and
out
mov
in
jmp
mov
pop
pop
outsl
lahf
sbb
imul
cwtl
ret
dec
cli
sbb
add
jle
and
mov
dec
pop
add
movsb
jns
pop
out
push
mov
int3
and
gs
or
fmull
pop
add
or
sub
push
lahf
fnstenv
sbb
daa
arpl
movsl
test
inc
inc
out
pop
xchg
insb
int3
push
leave
push
fcoml
cmp
xor
call
mov
cmpsl
fs
mov
add
cmp
jge
bound
lret
ds
add
push
lock
in
mov
icebp
pop
add
stc
nop
inc
dec
jp
add
mov
loopne
sbb
paddsb
cltd
pop
nop
sbb
insb
pusha
int
iret
xor
loopne
pop
add
mov
fisttpl
add
pop
mov
loopne
cld
clc
outsl
nop
loopne
lds
sbb
ror
mov
add
push
cli
loopne
dec
sbb
stos
movsb
add
ds
mov
push
sbb
aad
pop
add
add
out
pushf
push
sarb
jbe
cmp
sub
xor
decb
add
xchg
xchg
sub
jns
add
sub
sbb
loopne
add
xor
or
call
adc
lea
add
bound
addb
push
loopne
scas
add
mov
push
daa
mov
fsubrs
add
pop
cmpsb
faddl
les
pop
cwtl
pop
das
sahf
push
lret
aam
add
push
nop
sub
imul
adc
cmpps
push
call
sub
lret
dec
pop
mov
xchg
sbb
pop
and
jmp
nop
add
mov
push
cmpsb
jmp
out
cs
ret
xlat
mov
pop
jecxz
mov
jns
add
sbb
jne
subl
jbe
push
test
jle
cs
ljmp
lods
mov
dec
add
and
les
push
orb
xchg
adc
out
push
jbe
imul
rolb
push
or
pusha
in
hlt
add
add
orb
add
pop
sti
repnz
push
mov
add
cld
mov
nop
fdivl
cli
push
add
inc
cmp
mov
int3
orl
dec
clc
add
in
and
add
fsts
push
dec
dec
and
and
addl
push
arpl
cmp
lret
cwtl
mov
pop
jle
mov
add
inc
test
movsb
adc
add
cmc
or
mov
sub
jns
loopne
add
adc
sbb
sub
xchg
es
mov
push
mov
adc
mov
fwait
xchg
fcomps
mov
pop
test
ficompl
je
mov
mov
and
add
outsl
out
mov
cmp
enter
jnp
sbb
ret
or
aad
inc
call
xor
xchg
jo
xlat
add
xchg
jp
test
push
cli
xchg
jo
js
add
sti
out
xchg
cmp
jno
jbe
xorl
jmp
enter
movsl
sub
outsb
cmc
dec
repz
push
xor
sar
or
fsubr
stc
cmp
pop
adcb
mov
sbbb
out
mov
add
addr16
adcb
push
aam
adc
cld
jnp
sub
js
add
jo
movsb
fistpll
add
sbb
lret
iret
scas
add
icebp
lds
or
and
ret
popa
lret
xor
add
fwait
xorb
add
pop
and
mov
xchg
add
dec
pop
add
jp
cld
pop
addb
sbb
pop
enter
icebp
in
das
adc
stos
aas
xorb
or
imul
fistpll
sahf
dec
adcl
mov
xchg
add
imul
or
and
out
cli
sti
jg
lahf
xchg
fwait
pop
cs
xchg
lods
dec
xor
or
dec
xor
add
out
push
es
dec
cwtl
mov
add
add
push
push
jno
stc
mov
int3
adc
cmp
filds
sbbl
popa
mov
iret
xor
push
xchg
jne
scas
inc
movsl
rcrb
jg
sub
clc
sbb
ficoml
pusha
sub
push
add
dec
dec
or
inc
into
xor
pop
testl
iret
jno
int
popa
xor
fildll
fs
add
jge
inc
sbb
hlt
push
dec
add
mov
imul
aam
add
out
out
pushf
lcall
jb
mov
arpl
roll
leave
pop
paddq
or
xchg
icebp
xchg
push
outsl
push
out
or
int3
xchg
lock
add
push
xchg
dec
outsl
mov
stc
xchg
les
lods
cld
mov
or
jmp
jp
cwtl
add
xchg
pop
testb
cmc
mov
stc
push
ljmp
adc
ret
inc
nop
mov
lret
jl
cld
add
cmp
nop
and
arpl
rorb
leave
mov
push
ss
test
and
scas
pushf
ljmp
addr16
test
mov
lds
test
mov
sub
std
js
or
mov
and
adc
ret
loope
sub
or
pushf
out
mov
add
fiaddl
push
pusha
or
mov
fs
stos
daa
mov
lret
mov
add
add
scas
mov
pusha
fwait
aad
jg
add
mov
pop
xchg
pop
push
jnp
push
testb
out
mov
add
loope
mov
jg
mov
stos
push
cs
sub
jp
cmp
enter
cmp
add
mov
popa
cld
add
pop
mov
and
mov
test
jg
imul
jo
fisubs
jge
sub
sahf
fdivs
add
shll
cmp
push
into
ss
xchg
add
sub
push
fwait
inc
add
dec
sub
aas
lods
test
ja
xchg
pusha
cli
mov
je
lret
fwait
mov
mov
das
into
lods
aaa
inc
push
cs
std
clc
jns
sarl
lret
inc
add
or
stos
imul
xchg
or
lahf
jmp
les
leave
outsl
and
in
inc
cmp
add
mov
out
addb
add
in
ret
idiv
vmread
pushf
xor
cmp
ljmp
push
sbb
push
pop
xor
pop
mov
sub
xor
inc
adc
call
cmpsb
cwtl
gs
and
cli
ljmp
xchg
jp
push
and
cmp
sbb
test
add
in
rclb
mov
inc
andb
stos
rcrb
cld
mov
test
sub
aaa
xor
loope
add
jecxz
cmpsb
add
fwait
movsl
mov
test
ds
dec
cmc
push
pop
sub
rclb
stc
outsb
shlb
test
pop
xor
clc
add
icebp
fs
and
movb
lahf
clc
mov
testb
mov
inc
add
mov
pop
add
sar
push
xor
add
and
push
add
and
add
or
mov
outsb
add
push
aaa
add
loopne
in
add
pop
outsb
inc
lahf
jnp
lods
add
xchg
mov
out
inc
xchg
stos
popf
fs
jb
xchg
add
icebp
pop
dec
ffree
movsl
xor
push
adc
add
adc
pop
jecxz
inc
nop
popa
fs
test
mov
add
mov
pop
fcmovb
test
cmp
sbb
mov
mov
push
cld
scas
add
fdivl
scas
xchg
push
call
dec
cmp
rcr
je
rorb
int3
bound
add
push
xor
les
pop
and
pop
hlt
inc
add
in
xor
ror
adc
add
bound
add
add
fistpll
negb
inc
clc
pop
add
xor
push
add
sbb
and
push
jb
rorb
dec
pop
pop
aad
shlb
pop
push
add
xchg
cli
mov
sbb
cmova
shr
loop
add
addr16
cmp
pop
add
pop
and
mov
int
shl
xchg
subb
jne
addb
pusha
inc
inc
mov
push
insb
repz
int3
push
push
xchg
mov
fcomps
ja
adc
xchg
fcom
pop
mov
pop
das
add
pop
jecxz
call
sbb
dec
push
mov
mov
dec
add
andb
pop
jbe
inc
pop
push
xchg
pop
adc
mov
jmp
add
mov
xchg
jo
jne
into
call
xor
nop
cld
jecxz
jne
xchg
punpcklbw
cmp
mov
pop
push
cmc
imul
dec
nop
out
and
add
mov
inc
add
repz
scas
inc
and
mov
sbb
add
xchg
cmpsb
pusha
pop
enter
mov
adc
xchg
fwait
xor
cmc
mov
in
push
or
push
movl
sub
aaa
sbb
mov
ret
mov
ds
xchg
push
mov
sti
jo
mov
mov
enter
sbb
cmp
cmp
cmp
mov
xor
sub
inc
outsb
sub
adc
ss
dec
pop
add
jnp
stos
jecxz
test
push
add
nop
bnd
cmpps
notb
jecxz
xchg
and
loop
ds
mov
mov
add
leave
mov
pop
xchg
and
adc
movl
addb
dec
bound
jns
aam
scas
js
adc
mov
aam
sub
mov
xchg
bound
jge
stos
pop
rorb
popf
xchg
orb
dec
mov
inc
sahf
inc
xor
sbb
jo
mov
jbe
inc
sbb
data16
add
filds
dec
dec
xor
in
add
add
adc
sub
jle
add
ds
lds
cmc
hlt
dec
cwtl
cmp
in
push
into
mov
and
repz
add
push
fidivl
adc
aad
mov
pop
sub
jmp
xchg
lods
cld
add
adc
outsl
clc
and
add
xabort
jae
jge
add
dec
sub
call
xor
push
loopne
mov
repnz
test
lret
icebp
mov
and
xchg
lds
shll
movsb
dec
jl
es
sub
add
cmp
jne
pop
dec
pop
lock
movsb
fs
cltd
mov
mov
mov
xchg
rol
add
and
jmp
inc
inc
mov
int
dec
jl
mov
or
pop
cmc
iret
inc
push
mov
pop
cmp
inc
and
sub
lret
ror
rcrb
add
xchg
jmp
add
jo
rcll
xchg
adc
add
movsl
scas
in
test
push
cmp
dec
jno
rcl
cmp
add
dec
pop
push
cmp
push
test
push
in
popa
jo
aam
std
cmp
lahf
dec
xor
lock
jno
jmp
fstpt
add
add
repnz
adc
cmp
es
out
push
int
push
pop
arpl
inc
add
sbb
pop
std
xor
cmpl
push
in
out
pop
insl
popf
ds
dec
iretw
add
add
dec
mov
test
push
cs
in
adc
add
mov
push
sub
xchg
out
adc
jge
shrb
test
nop
dec
add
mov
pop
push
shrb
aam
push
fldt
add
pushf
xchg
idiv
or
and
push
mov
mov
and
ret
xor
mov
lock
adc
push
xor
add
lea
xchg
add
leave
mov
add
xchg
cmp
cs
dec
add
xchg
sub
cmpb
fwait
or
add
jo
mov
jno
xchg
pop
cld
or
addr16
push
cmp
sub
xchg
jge
pusha
addl
jg
out
cmp
xor
inc
enter
psrad
loopne
push
or
pop
nop
sbb
and
xchg
sbb
les
pop
push
add
mov
lock
leave
push
fisttps
jle
clc
test
arpl
prefetchw
and
jg
lock
arpl
cwtl
sbb
xor
scas
scas
paddq
pop
rol
cmp
mov
dec
xchg
add
cmp
std
lods
orb
lea
sub
adc
add
or
pop
sbb
mov
sub
pop
add
bound
loopne
cmc
rolb
popf
jb
add
cltd
add
jecxz
mov
incl
sub
pop
jg
mov
cmpsl
mov
sbb
nop
cmp
or
out
jne
add
add
repz
or
lock
clc
push
push
jmp
jb
pop
lock
push
leave
xlat
mov
das
xchg
insl
cld
mov
xchg
push
add
jo
aam
push
or
mov
jmp
cmp
and
stos
xor
push
jo
les
scas
mov
dec
sbb
add
outsb
and
fnstcw
xchg
add
inc
test
call
mulb
mov
dec
mov
mov
add
pop
push
add
arpl
add
mov
jne
out
lods
mov
pusha
jge
add
pop
notl
or
mov
mov
outsl
sub
jle
sub
add
inc
jge
add
pop
lret
xchg
mov
add
ljmp
test
adc
cmp
repz
cmp
retw
not
or
xchg
mov
push
adc
cmp
testl
mov
lock
shll
pop
shll
xchg
incb
add
nop
faddl
in
inc
rolb
xchg
cmp
je
cmpsl
or
jl
les
sub
xchg
add
push
ss
adc
push
push
lahf
mov
pusha
fstps
xlat
inc
cld
mov
aad
in
popf
add
push
shll
test
mov
add
ja
push
and
push
pop
fdivrl
mov
popw
shrb
push
mov
sub
mov
mov
xor
loopne
lret
adc
push
adc
sahf
mov
push
xchg
mov
cld
das
lahf
jns
adc
out
scas
sarb
xchg
xchg
add
nop
add
push
cmp
js
add
pop
in
aad
add
xchg
xor
mov
cli
sbb
sub
imul
cld
cmovs
jp
inc
ficomps
xor
hlt
cmp
add
mov
mov
and
inc
sarb
adc
mov
pusha
rcll
add
lcall
or
nop
nop
push
jp
clc
fiaddl
arpl
sar
pop
lds
cmp
jmp
jb
add
cli
aas
into
mov
xor
push
lods
add
enter
pop
xor
addl
add
sar
movsb
out
sub
xor
add
je
push
int3
add
inc
cmp
sub
gs
push
js
sbb
icebp
sarb
lret
pusha
andl
scas
movsb
adc
xor
js
or
cmp
ja
lea
inc
roll
pop
add
inc
add
rcrb
cmpb
jg
add
add
dec
add
xor
iret
mov
jmp
mov
or
in
jne
and
jmp
pop
hlt
cmp
sub
mov
or
lcall
xchg
cmpsl
cmp
cmp
mov
jne
and
mov
inc
add
cmpsb
add
loopne
xor
fs
rolb
pop
push
int
enter
nop
hlt
lcall
sbb
lock
add
stos
xchg
xor
push
les
push
hlt
decb
add
mov
pusha
dec
ficoml
ljmp
inc
cld
lock
cmp
int
mov
cmp
push
int3
add
mov
icebp
mov
mov
mov
sbb
xchg
roll
sbb
inc
fsubrs
cs
pop
or
inc
mov
mov
inc
add
jo
pop
push
jp
or
inc
adc
shrb
add
mov
mov
add
in
xor
xchg
push
loope
outsb
add
shlb
xchg
push
into
pusha
sub
pop
or
out
rcll
add
xchg
add
sub
sbb
cmp
xchg
addl
rorl
lcall
dec
mov
sti
les
nop
cmp
pop
cmp
or
add
xchg
stc
and
mov
push
push
mov
dec
and
ljmp
add
mov
cmp
mov
cmc
cld
sub
mov
push
mov
das
add
adc
dec
or
push
sub
inc
sbb
push
mov
mov
add
xchg
inc
adc
add
pop
sbb
int3
inc
push
fwait
out
negb
popa
add
push
jmp
dec
mov
fcoms
fisttpl
mov
xor
inc
je
xlat
mov
es
cs
xchg
fwait
sub
int3
ret
add
jg
xor
popa
aaa
xor
adc
ret
sbbb
add
imul
and
ja
filds
adc
pop
push
xchg
mov
ja
add
adc
and
add
adc
add
or
add
or
inc
sti
pop
iret
add
ds
jnp
add
dec
pop
dec
pop
shl
add
loope
push
add
cli
add
bound
faddl
fidivrl
mov
adc
mov
movlhps
nop
jl
ret
std
or
andl
mov
xlat
and
mov
repz
or
pop
or
xchg
addb
outsl
cmp
cmp
cwtl
jl
mull
xor
mov
mov
leave
xchg
cs
lods
mov
sahf
adc
jp
add
inc
cmp
inc
jns,pt
add
and
jno
inc
jne
icebp
pusha
xor
add
lahf
adc
in
andl
movsl
int3
xlat
add
sub
out
xchg
sub
jnp
add
lea
adc
xchg
add
mov
sbbb
pop
add
xlat
stos
pop
push
test
xchg
sub
out
cs
ljmp
sbb
das
or
lock
xchg
rcrl
add
stos
out
movsb
jo
add
lds
lret
cld
xlat
xchg
add
jno
inc
xchg
jle
dec
cmp
xor
pop
inc
fistpl
lds
cmp
loop
mov
iret
xchg
cs
xchg
movsl
and
jg
rolb
pop
int3
pusha
mov
enter
xchg
clc
or
aas
add
out
xor
add
gs
hlt
iret
lea
dec
addb
cmp
add
add
add
movsbl
mov
lret
addr16
stos
add
mov
arpl
jl
cmp
push
jno
sahf
negl
lods
add
sbb
lods
in
and
mov
jo
mov
xchg
stc
dec
xchg
xchg
sub
rolb
push
sub
push
movsw
add
adc
pop
iret
arpl
sbb
add
es
push
add
mov
mov
pop
jb
adc
add
cld
adc
and
loopne
add
sbb
mov
call
cmpsb
or
sbb
cmp
mov
lods
jns
add
add
addr16
mov
pop
mov
inc
enter
filds
lret
adcb
add
or
add
xor
outsl
jg
add
pop
jns
pop
sbb
adc
jge
and
mov
mov
repz
clc
mov
es
dec
setb
imul
in
repnz
cmp
add
in
stos
mov
bndstx
bound
add
push
cmpl
andl
mov
dec
xor
inc
lods
add
push
mov
sbb
or
loope
push
fldt
dec
mov
sbb
scas
jbe
int3
popf
and
add
pop
push
ss
add
sbb
cmpsl
out
pusha
subb
in
jae
or
fnstsw
int3
mov
gs
or
xor
or
push
inc
les
sbb
js
push
out
popf
cld
push
add
sub
mov
xchg
inc
enter
cs
xchg
sub
add
xchg
sub
sbb
rolb
cmpsl
repz
add
pop
sahf
pop
lret
dec
jecxz
add
pusha
sti
and
subl
mov
push
roll
fcoms
cmp
ficoml
outsb
push
jo
xchg
rolb
add
mov
ja
ss
pop
out
pop
mov
sub
rolb
sbb
add
xchg
xlat
inc
out
pop
std
inc
adc
xchg
popf
add
incb
mov
sti
xchg
adc
lods
add
xchg
jl
stos
test
iret
mov
scas
mov
add
push
push
inc
les
mov
stos
xchg
jmp
repnz
dec
push
lret
jle
xchg
mov
mov
jo
loop
test
add
add
mov
add
jbe
add
shlb
pop
inc
xchg
pop
xchg
jae
bound
inc
outsb
jle
add
inc
add
shlb
pushf
fiaddl
aam
jno
sub
pop
or
cwtl
inc
hlt
add
dec
faddl
push
adc
int
or
in
add
les
mov
gs
rclb
and
add
dec
push
enter
loopne
add
or
rcrb
pop
cld
add
mov
mov
sub
or
add
sbb
sbb
mov
sbbl
xchg
cmp
cmp
adc
dec
pop
insb
fprem1
jo
daa
inc
aam
lahf
mov
out
add
int3
fneni(8087
lret
add
push
cmp
push
add
mov
popf
hlt
pop
rclb
in
mov
repz
sti
pop
movl
les
shrd
mov
lret
sbb
add
add
ret
xor
xor
xor
xchg
cltd
das
pop
std
imul
jnp
cmp
and
pop
shrb
add
or
lret
sub
add
shr
popa
jb
jae
add
sbb
xchg
add
lods
rorb
add
cmp
jnp
stc
je
sub
xchg
xchg
flds
mov
xchg
add
xlat
imul
adc
inc
jo
out
bound
in
imul
mov
aad
xchg
pushf
mov
xor
jp
jno
jbe
mov
add
addr16
insl
adc
inc
bnd
cmp
mov
add
and
xchg
xor
cli
add
aad
mov
add
jp
gs
adc
rclb
rclb
adcb
nop
jl
sub
or
add
sub
push
gs
mov
movb
pushf
ja
je
and
popf
test
inc
add
jno
cmp
inc
pop
xor
shll
add
jns
pop
add
into
mov
mov
loopne
lcall
inc
inc
js
out
mov
and
push
dec
dec
rorl
push
aad
sahf
mov
jae,pt
mov
lahf
pop
mov
mov
add
push
int
push
rolb
add
movsb
call
mov
test
pop
sbb
add
in
jge
cwtl
es
cld
mov
mov
add
push
stc
adc
adc
pop
inc
add
sub
xchg
dec
sbb
inc
or
sbb
pushf
add
pop
inc
bound
jmp
imul
stos
pop
jp
add
mov
and
int3
sub
add
sub
mov
xchg
dec
push
xor
data16
aaa
in
mov
adc
inc
jl
add
dec
in
popl
add
sti
xchg
cmpl
mov
notl
or
in
push
pusha
mov
stc
lea
mov
add
insb
and
xchg
xchg
sub
jbe
pushf
ljmp
and
pop
popf
jle
add
mov
pusha
call
add
cld
pusha
ds
fcoml
mov
ficompl
lret
xlat
sub
out
roll
popa
pop
wbinvd
adc
pop
add
pop
mov
loopne
xchg
pop
add
leave
lods
std
add
and
pop
out
in
nop
movsb
add
pop
cs
add
stos
call
fsubrl
mov
pop
out
sub
push
scas
add
lea
pop
out
add
mov
andb
pop
fiaddl
test
jmp
ds
mov
mov
rcll
adc
sbb
cltd
cs
sbb
mov
xchg
pop
add
cmp
mov
and
addb
fstl
rclb
cmp
scas
lahf
addr16
push
cmc
call
lock
or
and
add
sahf
pop
nop
mov
movsl
aam
repz
or
in
push
pop
jmp
dec
ja
xor
roll
inc
jge
imul
inc
add
jp
outsb
jecxz
mov
add
jae
or
jne
and
mov
jl
xlat
mov
sub
push
xor
mov
and
test
shrb
pop
add
data16
add
sub
pop
int3
fs
stc
mov
mov
or
cltd
adc
insl
xor
insb
push
sub
outsb
dec
sbb
lock
movsl
add
inc
pop
cmc
data16
pop
push
fistpl
xor
inc
sbb
jmp
es
dec
dec
pushf
cmp
add
lahf
jae
inc
nop
inc
sub
add
loop
data16
xchg
add
les
jne
nop
fadds
or
mov
in
gs
pusha
mov
sbb
leave
std
and
dec
int
pop
rcrl
mov
cmp
jl
or
pushl
test
in
xchg
pusha
shr
sbb
scas
mov
dec
and
add
imul
jle
sbb
cmp
add
lcall
imulb
stc
dec
jg
or
scas
add
stos
leave
in
jae
sub
pop
mov
adc
or
xchg
setge
fistpll
addr16
pop
cwtl
sbb
iret
pop
xchg
sbb
pop
negl
in
shlb
popa
mov
pcmpeqd
or
outsb
adc
mov
add
lea
scas
cmp
fs
add
mov
test
daa
bound
pop
push
cmp
add
mov
out
xchg
add
scas
addb
cmpsl
or
add
and
pusha
pop
gs
out
arpl
lret
inc
push
dec
fstps
out
sub
jo
xchg
xor
fdivrl
mov
testb
and
mov
xchg
add
cmp
mov
pushf
cmpsl
and
daa
adc
inc
xchg
add
ret
adcl
adc
mov
mov
inc
xchg
cmp
gs
add
sub
and
pop
insb
outsl
cmp
push
xchg
mov
push
fstpt
xor
incb
pop
mov
add
add
lds
inc
xor
in
push
int3
inc
idivb
pop
fcmovnu
xchg
adcb
in
push
fwait
or
adc
add
pushf
push
push
or
data16
das
mov
add
loopne
jb
sub
adc
sbb
aad
mov
mov
or
xchg
daa
sub
add
mov
les
das
dec
push
popa
lds
mov
aad
inc
mov
je
nop
out
add
dec
int
adc
or
push
or
fwait
mov
jnp
jbe
push
rol
xchg
jg
mov
cmpl
addb
pop
xchg
xchg
imul
jo
pushf
mov
adc
push
mov
mov
xor
cmc
lds
mov
ror
mov
pop
mov
add
xchg
aad
adcl
add
test
jecxz
push
rorb
outsb
jo
add
scas
pop
add
mov
loope
pop
loop
push
mov
push
adc
ror
mov
jno
std
dec
jns
fisubl
arpl
mov
divb
ja
enter
inc
lock
cmpsb
aas
cmp
outsl
out
cmp
add
sbb
cmp
jl
cmpsl
mov
mov
inc
push
lcall
xor
jae,pn
data16
popf
push
push
sahf
fmuls
pcmpeqb
xlat
pusha
roll
cmp
add
sbb
cmpsl
mov
out
imul
adc
clc
stos
sub
lds
std
xlat
mov
nop
fcomps
lock
dec
mov
mov
aaa
sbb
adc
rorb
jb
aam
adc
mov
or
xor
montmul
cmpsb
push
or
and
mov
or
clc
inc
mov
ficoms
rclb
ljmp
js
mov
iret
dec
or
test
jecxz
addb
inc
sub
or
xchg
je
mov
xor
les
out
mov
lret
lea
ret
cltd
sbb
push
add
push
dec
cmc
fwait
jnp
sbb
dec
iret
arpl
les
add
aam
push
inc
js
idivb
sbb
adc
adcl
mov
dec
sub
xchg
mov
push
add
inc
stc
and
repz
jo
push
mov
into
fmuls
add
jo
dec
dec
lock
sbb
out
add
aad
out
cmpsb
xchg
popl
adc
add
in
mov
popa
shrb
and
cmp
push
mov
ret
mov
bndldx
testb
add
rcl
xor
insl
aas
and
shlb
or
push
call
daa
and
popa
jl
cmp
add
mov
mov
cmc
lahf
in
mov
lcall
xchg
mov
sub
push
or
mov
insl
iret
add
inc
xchg
add
and
or
sub
jbe
lock
mov
pop
lcall
stc
inc
add
xorb
pop
call
js
xor
stos
mov
in
sub
int3
pop
leave
sbb
insb
and
adc
sbb
in
clc
jl
andnps
nop
sub
mov
aaa
mov
stos
mov
in
mov
pause
mov
xchg
pusha
push
sbb
aaa
aam
in
dec
shlb
sbb
inc
mov
movsb
or
andl
jo
add
addb
push
lea
clc
das
cmp
rcrl
jle
adc
xlat
inc
mov
and
add
fcomi
add
inc
xchg
out
mov
xor
cmpsb
add
jl
sbb
xchg
inc
lret
clc
mov
imul
adc
cwtl
push
or
add
sbb
dec
add
test
pop
and
mov
adc
cwtl
shrl
xchg
ret
add
daa
pop
pop
mov
dec
add
or
stos
clc
mov
add
cmc
pop
push
loopne
add
int3
adc
add
and
into
repz
cli
es
orb
lock
gs
add
cld
jg
add
mov
jle
sbb
xor
push
dec
sub
jae
aas
mov
inc
loope
addr16
addl
jbe
sub
mov
add
xchg
jge
xchg
aad
xor
mov
sub
fimull
adc
sahf
push
test
cmp
pusha
cld
mov
pop
sbb
jnp
loopne
pop
push
xchg
roll
cmp
and
int
shl
test
stos
ljmp
mov
add
daa
jnp
movupd
sbb
lret
mov
pop
rcl
jp
mov
add
scas
mov
sub
ss
inc
adc
push
daa
and
loopne
cmp
add
dec
out
mov
add
pop
mov
jb
inc
movntq
sbb
es
cwtl
push
int
jmp
test
mov
mov
mov
inc
leave
insl
add
add
in
dec
adc
pop
popl
or
mov
test
cs
rorl
iret
cltd
aam
ret
xchg
mov
xor
pop
mov
jge
add
cmpsb
mov
mov
insb
sti
jg
xor
les
fs
loopne
imul
fdivl
add
scas
sti
aaa
nopl
fwait
xor
mov
ja
movsl
fs
ror
ficomps
push
lret
xchg
in
das
mov
sti
mov
pop
sub
add
mov
fiaddl
lock
adc
sub
xor
cli
pusha
sarl
rclb
add
sbb
test
push
notb
and
push
popa
aas
xor
jns
xor
add
stc
dec
mov
or
pop
sub
andb
push
pop
adc
loop
les
mov
lods
ss
call
jecxz
jo
pushf
gs
loop
xchg
sbb
adc
gs
sub
testb
repnz
out
or
mov
sub
pop
out
cmpsl
pop
faddl
mov
sbb
xor
dec
mov
cmc
test
testl
jge
mov
lds
add
rolb
push
lods
and
jne
add
sbb
popf
test
cs
push
test
xchg
jbe
testl
stos
jecxz
clc
push
mov
lcall
push
mov
int3
jno
dec
mov
cs
jl
test
push
pop
subb
push
inc
addr16
push
cmp
adcb
sub
cmp
add
adc
cmp
nop
adc
mov
sahf
pop
iret
jl
scas
xchg
cmp
iret
pop
push
cwtl
inc
ja
push
xor
insb
mov
cmpsl
add
pop
mov
mov
xchg
std
loopne
sub
sbb
sub
test
add
out
mov
in
add
mov
add
sub
js
shr
cmp
xchg
xor
cmpsb
hlt
sub
pushf
push
and
sbb
push
jmp
mov
cmp
pop
jns
pop
add
subl
jp
xor
dec
jnp
xchg
call
out
cmpsb
sbb
mov
jp
sub
or
and
lcall
test
add
sub
pop
enter
inc
cmpsb
ss
mov
imul
cld
addb
push
pop
aas
mov
inc
sbb
mov
mov
xchg
sti
fistpll
push
mov
or
fwait
adc
sub
repz
push
inc
jb
sbb
inc
push
push
add
pusha
lcall
ret
les
hlt
ret
add
or
insb
add
and
aad
lret
add
std
addr16
out
popa
cli
movsl
adc
lock
and
pop
je
adc
popa
js
sbb
add
aas
ja
iret
lahf
mov
mov
add
sbb
add
lods
lock
mov
iret
pop
add
lret
add
lahf
adc
or
or
push
ds
jl
fwait
xor
mov
sbb
pop
jne
add
mov
adc
jb
bound
ds
sbb
test
mov
cmc
inc
push
mov
shlb
xor
inc
sub
ret
dec
pop
adc
jmp
cmp
xor
pusha
leave
test
inc
insl
pop
pop
sub
paddb
mov
inc
lods
stos
mov
test
outsl
sahf
and
xchg
push
jecxz
mov
cmpb
je
cmpsl
movsl
cmpb
in
popf
loope
pop
andl
test
jae
add
sub
add
push
pop
sbb
sub
add
enter
xor
xchg
ljmp
cmpsb
or
mov
xchg
cltd
aas
jne
lods
add
lcall
xor
jns
push
xor
aas
sbb
cltd
mov
pop
xchg
mov
dec
fs
xor
inc
aaa
jne
inc
jp
dec
nop
xor
mov
clc
adc
mov
enter
add
add
iret
pop
push
sbb
fnstenv
xchg
xchg
mov
dec
enter
lcall
push
cmc
jns
mov
or
cld
mov
mov
jmp
daa
clc
addl
lcall
or
cmp
cltd
pusha
lock
push
repz
es
jge
jg
cmpsb
dec
out
pusha
add
inc
dec
inc
add
mov
test
call
clc
xchg
pusha
ja
je
shll
xchg
bound
movsl
out
add
aas
mov
sbb
lds
pop
dec
jno
es
and
mov
andl
scas
lcall
es
mov
scas
lds
pop
pop
jo
cli
inc
add
add
inc
inc
dec
popa
gs
sbb
and
mov
mov
adc
xchg
insl
adc
adc
es
das
inc
inc
adc
pop
pop
sbb
sub
jl
dec
in
dec
roll
fcomp
jge
out
sysexit
add
sub
mov
xchg
lret
dec
mov
sbb
and
push
out
cmp
call
jns
out
shlb
adc
ret
add
loop
popf
je
sbb
and
add
dec
inc
sbb
xchg
int3
pop
mov
inc
xchg
aas
int3
decb
mov
xor
add
ljmp
pop
xor
sbb
in
fidivrs
xchg
mov
cmpsb
cmp
inc
push
int
stos
test
cmp
add
leave
add
fstps
jge
popf
cltd
lds
xchg
call
dec
lret
jmp
cmpsl
jo
add
sub
push
adc
insb
adcb
mov
movsb
negb
js
cmpsb
mov
in
insb
rolb
fldl
enter
daa
in
xor
fisubrl
addl
cmp
es
sub
fnop
inc
jb
cwtl
cmp
andb
dec
ret
fs
es
or
cmp
imul
lret
mov
cmp
or
cmpsb
cmp
std
add
and
cmp
cli
sub
fdivr
scas
enter
mov
fmul
inc
sub
and
or
xor
mov
je
mov
push
and
pop
adc
mov
mov
add
mov
lea
push
adc
inc
dec
xchg
or
imul
fsubr
jg
test
dec
push
in
pushf
inc
gs
add
enter
cmp
mov
sarb
add
test
cwtl
inc
daa
mov
mov
xor
dec
jb
mov
cmp
movsl
nop
push
mov
imul
shl
mov
imul
lret
hlt
cmp
xor
subl
mov
call
iret
fdivs
jl
pop
shrl
cmp
rcrb
jae
mov
and
cmp
xchg
mov
or
je
loopne
and
mov
sbb
pop
notb
xchg
lods
std
les
add
cltd
in
lock
push
inc
gs
mov
add
lahf
sub
cmp
je
pop
loop
mov
and
xchg
iret
mov
pop
jg
test
xor
push
cmpsb
and
mov
test
incb
and
push
pusha
sub
loop
adc
inc
xchg
or
inc
xor
scas
and
test
jecxz
jecxz
in
xor
movsl
dec
shrl
adcl
pop
inc
les
rcrb
repnz
nop
sbb
pop
bound
fsubrs
test
inc
cmp
frstor
clc
push
adc
sbb
xchg
ss
adc
je
inc
adc
mov
hlt
or
add
push
outsb
mov
movsl
or
pop
inc
xchg
scas
adc
adc
or
cmp
cmp
push
test
leave
jecxz
inc
sarb
add
addr16
lock
call
test
pop
and
adc
add
out
inc
lods
push
add
dec
data16
fdivr
or
push
inc
into
xor
orb
test
xchg
and
sbb
nop
mov
push
lret
jb,pt
jle
pop
sub
sti
nop
stc
loopne
xchg
add
dec
test
push
dec
jae
test
inc
jno
and
test
and
xorb
mov
rcrb
xor
mov
scas
xchg
rclb
dec
jnp
and
aas
and
rol
rol
or
push
push
rcrb
repnz
clc
xchg
mov
enter
inc
nop
add
dec
push
dec
inc
in
mov
dec
xor
add
repz
or
jo
add
push
ror
jl
cmpsl
and
faddl
mov
cmp
enter
sbb
xchg
pop
test
sub
jns
adc
sbb
xchg
hlt
or
push
mov
add
sbb
push
test
arpl
push
cmpsb
and
sbb
adc
inc
or
mov
movsl
test
sub
jo
fstpt
gs
sbb
in
or
sbb
aas
jo
jae
push
lods
jl
stos
fs
cmp
xchg
inc
push
inc
jne
push
sbb
adc
fwait
push
dec
addb
sbb
push
nop
test
ret
pop
jnp
inc
dec
popf
inc
mov
adcl
rclb
bound
push
incb
sub
sbb
testb
pop
dec
push
mov
sbb
arpl
sub
mov
enter
shrl
dec
movl
dec
xchg
lods
sbb
call
test
jmp
loopne
xor
shll
bound
or
mov
cmc
adc
popa
mov
fiadds
and
cmc
and
inc
cmpsb
clc
sbb
popa
loop
sub
pop
or
push
add
inc
rcrb
addr16
sub
in
in
and
sub
adc
rorb
mov
cwtl
pop
dec
es
dec
adc
loopne
add
sbb
push
rorl
daa
imul
sarb
jmp
popf
or
adc
dec
addl
repz
mov
push
mov
popa
dec
mov
add
add
aas
mov
cmp
push
xchg
clc
and
pop
int3
add
pop
cwtl
jne
xchg
test
inc
lods
pushf
push
xor
or
sbb
pushf
jmp
les
inc
inc
inc
and
and
dec
mov
or
iret
mov
test
inc
add
mov
push
sbb
js
pop
dec
pop
mov
push
mov
rol
inc
xchg
sub
push
addr16
sbb
push
stos
or
mov
test
cwtl
add
fwait
aas
jecxz
add
or
and
mov
push
add
inc
xchg
pop
cmp
int3
mov
sub
inc
outsb
loope
or
ret
mov
xchg
push
mov
or
addl
incl
test
dec
fidivrs
mov
pop
cmp
test
sub
bound
nop
enter
adc
ret
sbb
nop
rolb
test
push
pop
lea
inc
mov
gs
clc
jnp
mov
leave
inc
cmpsl
movsb
dec
push
cltd
mov
or
xlat
test
les
test
inc
test
adc
add
mov
loopne
and
push
push
aas
xchg
mov
push
xor
add
imul
test
inc
inc
dec
leave
ja
push
test
sbb
lahf
adc
cmpsl
pop
fsubrp
dec
lock
clc
or
sbb
testb
inc
stc
add
sbb
sub
dec
inc
aam
mov
or
mov
jmp
jns
dec
sub
andb
push
icebp
add
in
outsb
divb
test
decb
dec
lret
stc
daa
bound
add
repz
adc
mov
adc
mov
ret
sbb
shll
movsb
pop
mov
mov
sbb
sbb
cmp
aam
idivl
fwait
and
sub
gs
sbb
and
xor
pop
mov
xchg
scas
nop
add
sbb
jle
mov
imul
and
inc
clc
add
imul
add
jne
outsl
fwait
sub
cmp
fldl
push
cmpsl
scas
dec
inc
add
out
push
pop
sbb
jb
stos
jne
jno
mov
inc
pop
push
movsb
and
sub
mov
adc
std
cmp
fcomps
push
nop
push
jns
and
je
test
pop
push
sbb
or
add
in
daa
push
sarb
lds
adc
or
sub
and
fildl
cmp
cmp
mov
and
xor
cmp
pop
mov
inc
xchg
jno
jmp
pop
mov
fadds
add
insl
loopne
adc
je
out
loope
test
add
stos
and
inc
mov
mov
loopne
adc
pop
fcoml
imul
lds
cmp
add
jno
lods
dec
lods
add
int
inc
adc
arpl
pop
xor
inc
icebp
pop
jo
add
leave
ja
or
add
fwait
adc
outsl
adc
pusha
aam
push
add
out
fcomip
cmp
mov
sub
nop
insb
test
jae
outsb
sub
jne
nop
js
push
pop
dec
pop
sub
jg
lods
sarb
subl
cld
daa
dec
push
fsub
cwtl
add
mov
mov
sti
in
andb
mov
sbb
jecxz
jbe
xor
fsubrs
andb
enter
and
movsl
or
sub
push
mov
pusha
cmp
add
fdiv
jle
cli
sbb
sbb
add
xchg
aaa
jmp
aam
rclb
add
popf
stos
or
in
push
addb
sahf
mov
das
sti
xlat
imul
sarb
stos
pop
jnp
sub
push
inc
out
push
push
sbb
lods
dec
loopne
adc
sti
testb
jle
xor
jbe
mov
lret
fcoml
mov
sub
outsl
imul
add
mov
add
movsb
add
cmpb
adc
out
add
outsl
loope
sub
add
dec
dec
or
add
lds
adc
and
cwtl
outsl
push
iret
jo
dec
lock
jp
adc
fs
into
pop
pop
mov
pop
hlt
lock
sub
insl
sub
call
imul
add
ds
fimull
add
inc
test
xorb
jne
add
adc
jge
inc
nop
pushf
add
add
inc
aad
repnz
clc
push
or
lea
test
add
xchg
pop
mov
add
xchg
addr16
cmp
testl
les
add
loop
or
pop
add
jbe
push
add
outsb
inc
sarl
adc
fnstcw
mov
sub
add
jnp
push
xorb
clc
out
icebp
xchg
cli
movsl
pop
xchg
in
std
pop
dec
lock
rcrl
pop
in
jmp
jp
lret
orb
mov
pop
shlb
mov
ljmp
fidivl
scas
orb
push
adc
aad
sub
sarl
or
insb
cmpsl
lods
mov
add
and
arpl
cmpsb
inc
cmp
dec
xchg
imul
addr16
test
jnp
add
and
inc
divb
in
ret
in
add
mov
loop
add
lcall
or
dec
or
int
cmc
leave
jcxz
or
add
xchg
fwait
es
sub
rorl
out
add
push
inc
mov
jno
out
add
ret
mov
aad
in
xor
xor
movsb
or
repnz
dec
mov
inc
cmpsl
or
or
jg
jmp
lods
fists
cmp
mov
mov
pop
out
ss
cwtl
or
add
mov
test
add
sti
aad
insl
push
pop
adc
jg
mov
add
je
pop
inc
out
aam
sub
xchg
xlat
nop
adc
popa
out
movl
dec
sub
scas
xor
dec
das
shl
insb
jmp
outsl
and
add
pop
fsts
inc
shlb
add
sarl
jnp
add
or
lret
push
orb
popf
jbe
dec
fldt
push
mov
aad
cmp
popf
rorb
repz
fwait
seta
add
sbb
js
mov
mov
les
test
test
inc
popf
pop
mov
push
adc
insb
xchg
subb
je
fbstp
in
jecxz
pop
inc
jno
enter
lods
mov
pop
cwtl
add
cmp
repz
cmp
add
push
mov
mov
vaddsubps
cmpsb
cli
xor
or
push
popf
add
pop
add
popa
aam
jbe
xor
push
add
ljmp
fs
mov
jno
jle
filds
and
cmp
mov
jp
aas
mov
stos
mov
cmp
stos
aam
and
xlat
cmp
add
loope
pop
aad
xchg
call
push
cwtl
xlat
into
add
lods
push
jmp
mov
jnp
adc
cmp
rcr
sbb
add
cmpsb
mov
add
outsb
daa
std
pushf
xchg
inc
ljmp
sub
pusha
testl
push
fiadds
pop
mov
inc
sbb
fnsave
lock
mov
dec
sbb
mov
js
and
movnti
inc
hlt
mov
decb
lock
mov
mov
cmc
add
in
jmp
or
cmpsl
loopne
repnz
fstpt
fcoml
mov
addr16
fnstcw
sahf
cmp
mov
jg
pushf
add
mov
test
movsl
into
add
loopne
push
out
idivb
dec
lods
out
add
loope
or
fwait
push
add
xchg
dec
jno
ja
add
lcall
add
xchg
aad
sbbl
int3
ret
stos
sarb
idivb
pop
cmpb
add
and
mov
cmpl
pop
mov
pop
inc
add
sti
cwtl
jb
insb
aaa
jo
movd
cltd
push
push
outsl
lcall
andl
mov
add
aam
adc
mov
sbb
mov
lods
cltd
jl
cmp
cli
std
xchg
cs
sahf
roll
fldenv
or
shlb
fmull
xchg
pusha
add
pop
in
fs
add
xlat
in
test
incl
inc
repz
faddl
adc
push
int
popa
add
dec
ja
mov
lcall
mov
jmp
andb
lods
nop
mov
ds
fcomps
sub
dec
or
sbb
jne
sbb
das
idivb
fs
lret
addr16
in
imul
and
and
or
sbbb
push
or
andb
mov
add
movsb
xchg
mov
mov
dec
pop
or
jno
adc
sub
rcl
es
inc
loope
add
push
les
jne
pusha
mov
jb
add
lcall
jno
cli
sbbb
arpl
jnp
out
sbb
je
add
push
cmp
add
enter
roll
movsb
sub
mov
dec
push
insb
mov
push
comiss
add
inc
out
or
mov
loopne
add
jbe
insl
xchg
xchg
add
cmpb
in
inc
cmp
add
scas
push
jmp
jp
pop
or
mov
xchg
nop
insb
pop
ljmp
add
ds
cld
push
in
add
cmp
mov
mov
and
push
mov
insl
nop
out
sub
fists
mov
or
addb
pop
adc
xor
shll
stc
dec
xbegin
push
and
out
pop
fadds
sahf
dec
lock
lods
dec
enter
push
fldl
dec
sbb
jnp
loop
cli
mov
add
addr16
cvtps2pi
add
or
push
into
hlt
and
loopne
or
loopne
scas
icebp
movsl
idivl
dec
adc
xor
xor
shlb
push
stc
lahf
add
pop
leave
and
mov
pop
or
ret
shlb
mov
nop
dec
push
add
add
inc
inc
inc
imul
push
lea
in
sbb
idivl
pusha
andl
test
ret
push
pushl
imul
xchg
hlt
nop
xlat
add
lds
cmp
add
sbb
xor
dec
shrl
movsb
lods
cmp
add
in
fwait
sub
ss
push
repnz
rorl
dec
jbe
pop
cs
push
mov
or
aad
shr
cmc
pop
sbb
iret
stos
inc
subb
lret
add
jns
rcll
lret
aam
lods
mov
add
orb
sbb
sbb
lret
mov
pusha
jb
test
dec
dec
std
cwtl
add
mov
pop
jecxz
add
add
stos
and
sub
in
adc
hlt
mov
out
dec
jmp
sub
in
bound
aas
rcrl
and
push
inc
mov
cmp
ljmp
das
jbe
mov
cs
or
cld
xchg
pmaxub
pop
loopne
mov
adc
inc
cmpsl
pop
pusha
or
add
pop
movsl
mov
add
jae
scas
sub
inc
sub
xor
sub
lcall
add
mov
adc
inc
mov
js
in
fsubr
addr16
sahf
adc
add
add
cmpsl
xchg
fsubs
mov
scas
into
jecxz
stc
cwtd
xchg
xor
sub
movsl
push
leave
mov
ret
and
push
orb
or
add
and
sub
lock
cmp
cwtl
dec
push
dec
outsb
inc
jle
jns
add
xchg
repnz
pushf
sbb
xorb
push
imul
jo
push
sti
mov
stc
pop
insl
loopne
adc
ds
rcl
sbb
mov
inc
sbb
add
add
shll
ffree
mov
enter
push
mov
test
cmp
and
mov
repnz
sub
push
sub
shlb
jmp
xor
adc
add
jge
mov
or
xchg
enter
ds
pop
inc
adc
push
imul
test
fadds
arpl
or
les
sbb
lock
movsl
add
aaa
out
or
sub
faddl
cmpsb
or
stos
push
or
rolb
dec
gs
add
cmp
daa
xchg
pop
pop
cmp
mov
xor
mov
cwtl
cwtl
jmp
shll
push
sbb
dec
jmp
decb
pop
push
mov
sbb
or
subb
aad
add
rolb
jae
data16
test
pusha
and
adc
cmp
pop
ret
push
jne
subl
add
lret
mov
out
stc
mov
push
enter
and
add
adc
cmpsl
fmuls
cs
sub
jo
add
add
mov
pop
cs
mov
and
popl
dec
dec
dec
xlat
xchg
mov
or
add
test
out
ljmp
or
ret
or
hlt
jbe
add
push
cmpl
cmpsl
push
adc
lock
clc
pop
xchg
cli
jp
or
movsb
fcomps
push
lods
in
data16
adcb
adc
cmc
dec
idiv
addb
and
aam
addr16
aam
mov
jnp
mov
incb
mov
jae
sub
insl
clc
push
test
dec
xchg
add
push
cs
mov
stos
add
xchg
adc
cmp
push
scas
or
hlt
sahf
enter
enter
adc
cmpb
push
inc
add
push
rol
cmp
add
and
sub
push
adc
pushf
push
jp
pop
pop
pop
cltd
push
adc
aam
mov
pop
add
add
ljmp
inc
or
add
je
sub
or
dec
push
add
lods
cmp
dec
out
movsl
ljmp
scas
mov
into
add
test
add
imul
push
push
jbe
xor
jle
lods
nop
popl
pushf
pop
jns
jl
fidivs
or
pop
cmc
rorb
sahf
xchg
mov
adc
jo
loope
faddl
fwait
out
mov
or
out
adcb
mov
fnstenv
add
pop
sbb
int3
je
jae
add
cmpsl
test
add
in
mov
xor
mov
mov
cmpsb
scas
jle
and
loope
cli
mov
test
add
out
js
loopne
movsb
pushf
nop
js
insl
cmp
adc
fildl
xor
jnp
xchg
lcall
fisubl
jecxz
and
pop
sbb
or
int
daa
add
push
pop
mov
mov
pop
sub
ret
pop
inc
or
mov
insb
pop
insb
out
daa
js
stos
jne
mov
pop
das
fsubrl
add
scas
shrb
mov
xor
adc
cwtl
icebp
cmc
jbe
dec
jb
add
xchg
xchg
imul
sub
int3
lahf
insb
lods
sub
pop
add
jg
cmpsb
add
sbb
ret
inc
insb
mov
std
add
dec
addr16
adc
insl
add
push
add
loop
add
or
or
mov
jns
unpckhps
imul
mov
fnsave
sub
cmp
mov
add
add
jbe
push
xchg
loope
push
stc
dec
je
add
add
add
int
testl
out
and
int3
pop
and
imulb
daa
mov
or
xorb
icebp
shrb
xchg
add
or
adc
push
fildl
addl
sahf
jmp
or
pop
push
test
filds
gs
push
lods
inc
jmp
lcall
mov
out
fs
cmpsl
mov
mov
fidivl
test
inc
mov
xchg
jns
movsb
push
pop
out
cmp
dec
push
mov
mov
add
aad
cmp
movsl
push
inc
mov
ret
mov
jno
add
out
je
xchg
pop
jecxz
stc
cwtl
das
add
inc
sbbb
ss
or
test
pop
xor
push
aad
ljmp
jg
mov
lahf
popf
mov
push
and
aaa
or
imul
les
call
sub
flds
adcl
fisubrs
ss
cltd
mov
inc
aaa
out
add
push
xchg
mov
inc
cld
lock
shrb
pop
pop
ljmp
push
pop
and
enter
vmread
psrlq
mov
repnz
fisttpll
jns
js
lcall
fwait
lock
insb
aad
cmp
mov
jnp
in
imul
arpl
add
adc
test
push
aas
mov
lret
mov
adc
cmp
sbb
add
jmp
inc
xchg
dec
cmp
nop
pop
pop
int3
add
mov
aam
xchg
outsl
inc
call
pop
ss
add
add
out
stos
outsb
mov
mov
and
sub
or
or
movhps
jbe
and
das
xchg
cld
jb
mov
ds
pushf
fcom
rcrb
sahf
add
mov
outsl
pop
mov
push
outsb
adc
xor
cmp
or
push
andl
sbb
mov
push
cmp
jae
aaa
sub
lret
add
mov
pop
fldenv
iret
or
and
adc
je
inc
mov
sub
push
cmp
js
mov
adc
mov
xor
add
push
inc
mov
inc
pop
cmp
add
lret
add
fisubl
out
addr16
aad
mov
leave
arpl
dec
adc
adc
push
xchg
int
pusha
push
add
add
in
inc
pop
adc
lds
in
sbb
push
mov
cmpsb
mov
and
pop
lahf
das
mov
lods
push
mov
inc
xor
add
adc
jnp
cwtl
ret
sti
dec
addb
shlb
add
or
test
mov
dec
pop
cmpl
cmpb
rcrl
into
movl
ljmp
dec
mov
jnp
add
mov
lock
and
je
pop
xor
sbb
sbb
popf
sti
sarl
add
cli
xor
cld
je
in
add
jne
add
cmp
cmp
test
cmp
into
sbb
cwtl
xchg
movsb
xchg
mov
lods
sahf
cmp
mov
xlat
and
mov
fimull
or
sbb
and
test
call
sbb
pop
lret
pusha
mov
lea
add
add
jmp
inc
in
pop
add
std
orb
lret
pop
pop
xorb
sub
jb
sarb
ljmp
cli
mov
lea
pop
jecxz
mov
mov
jo
cld
fisubl
loop
adc
ret
xchg
pop
outsl
add
sbb
int3
popa
jge
sahf
add
imul
xchg
adc
pusha
addr16
aad
jne
add
jle
inc
std
and
and
adc
aas
push
or
xor
cmpxchg
inc
push
add
add
mov
lds
addl
xchg
mov
sbb
xor
aam
aas
and
imul
and
mov
jne
iret
cmc
cmp
shrl
add
divb
add
les
imul
arpl
add
repz
inc
test
and
insl
mov
dec
int3
jp
shlb
pushf
sbb
stos
js
imul
pusha
or
shrb
jne
pop
icebp
dec
mov
xor
jp
add
mov
add
fistpll
clc
or
js
jmp
incb
les
movsl
mov
or
test
sbb
clc
dec
xchg
mov
sub
das
sarb
mov
sbb
aad
jns
ret
or
xor
mov
addb
jmp
add
xlat
lret
mov
add
lea
and
shl
or
pop
loope
add
cs
pop
pushf
push
add
dec
push
xchg
jmp
add
push
add
call
ljmp
fildl
sti
mull
push
mov
push
add
cmp
addl
cwtl
pop
mov
call
xor
mov
jb
and
cmpsb
loopne
adc
xlat
mov
iret
or
roll
scas
pop
push
jmp
pop
mov
pop
sub
xchg
lea
inc
pop
insb
ror
sbb
mov
movsl
xlat
jge
test
loop
push
decb
jo
sbb
fistpl
mov
jecxz
enter
jbe
fimuls
negl
add
adc
hlt
loopne
add
mov
and
mov
xor
adc
pop
ror
sbbb
stos
movsb
pop
les
cmpsb
and
scas
add
flds
mov
jecxz
add
push
adc
push
cwtl
in
scas
scas
out
adc
icebp
inc
mov
lahf
incb
inc
cmc
popf
add
lock
loopne
push
add
lods
jmp
test
push
dec
imul
sub
in
test
mov
inc
xor
push
mov
insb
inc
mulb
add
xor
sbb
adc
fcmovnu
mov
dec
xchg
repnz
sub
cmp
add
cmpb
jle
inc
sbb
les
mov
lods
inc
adc
pushf
cmc
mov
mov
push
and
in
mov
add
insb
fs
shl
fwait
xchg
add
sub
js
jnp
add
aas
pusha
mov
pop
scas
add
xor
mov
out
xchg
int
push
xor
adc
sub
rcrb
rcll
js
inc
scas
add
mov
dec
xadd
push
fwait
sbb
insl
mov
std
jne
jo
cmpsl
xchg
popa
bnd
pop
ss
mov
add
fs
add
dec
cltd
loopne
jo
imul
hlt
adc
cmpb
dec
sub
aam
sbb
inc
add
mov
adcb
call
insl
push
jle
fiaddl
fldcw
loope
jns
pop
imul
inc
mov
and
pop
andb
dec
sbb
xchg
adc
icebp
pop
dec
inc
push
sbb
mov
and
shrb
fidivrl
push
mov
sti
mov
sahf
adc
xchg
add
push
xchg
hlt
sbb
pop
icebp
or
mov
cmp
das
pop
mov
enter
fcomps
add
lods
sub
push
add
push
mov
mov
sub
and
enter
add
xor
out
mov
aam
mov
sbb
adc
pop
nop
sbb
add
mov
out
mov
jbe
add
sub
inc
das
inc
cli
push
add
sub
scas
arpl
cld
or
js
enter
add
jo
fstps
pusha
xchg
fmull
lods
xor
xchg
aad
clc
cmp
cmp
mov
adc
adc
sbb
aad
testb
xor
sub
daa
cmp
scas
cmp
inc
and
dec
xor
dec
mov
jb
push
fcomp
sub
sbbb
xchg
add
les
mov
dec
add
movl
cmp
cmp
inc
pusha
cmp
loope
clc
loopne
or
mov
add
imull
mov
or
pop
rcrb
mov
adc
push
mov
cs
add
pop
repnz
add
jg
pusha
inc
jbe
nop
add
adc
shlb
negb
jmp
and
sbb
xchg
push
mov
cli
fcomps
les
mov
inc
push
dec
outsb
shrb
out
neg
mov
out
add
jb
into
add
stc
xor
add
aad
loopne
data16
xorl
xor
hlt
jmp
cmp
mov
mov
jno
arpl
mov
popa
in
add
stc
movsl
xchg
mov
add
sbb
dec
adc
imul
lcall
add
dec
mov
jl
daa
xor
rcrl
ret
in
add
lahf
inc
fs
pop
mov
dec
push
dec
pusha
or
xchg
imul
icebp
mov
movsl
or
dec
add
js
or
in
add
jo
roll
aaa
in
mov
jbe
mov
jns
add
lret
mov
push
cli
sbb
pop
rep
pop
sub
out
push
insl
shlb
jmp
add
rcll
test
dec
adc
push
leave
insl
xchg
and
clc
jmp
or
or
and
xor
jg
mov
aad
loopne
xlat
cmp
sti
test
mov
repz
push
shrl
sarb
sbb
mov
aad
or
mov
call
int
lods
pusha
gs
push
push
jae
sbb
sbb
clc
rolb
and
inc
je
add
popa
xchg
dec
dec
jmp
xor
xor
add
imul
fadds
stc
cwtl
aam
lock
cmp
cmp
add
and
mov
or
jl
mov
ret
and
cmp
in
pop
inc
mov
jno
xchg
pop
cmp
mov
pop
add
fsubs
imul
scas
cmpsl
add
addr16
daa
add
cmp
cltd
subl
add
hlt
outsl
and
add
push
cmp
jg
add
shl
mov
lcall
adc
jge
imul
shl
aas
push
cwtl
cmp
scas
outsb
xorb
xorl
dec
or
xor
inc
mov
or
add
out
ljmp
jnp
int
jle
cmp
jle
push
mov
fildl
or
push
lds
fwait
add
add
xor
mov
inc
pop
pop
in
jo
add
xor
mov
repnz
jae
or
mov
ret
pop
push
nop
popa
and
add
jecxz
sub
add
jmp
mov
sub
inc
popf
cld
int3
repz
pop
dec
in
les
mov
addb
stc
jge
int3
sbb
push
add
jae
xlat
mov
dec
add
cmp
fiadds
mov
cli
jle
add
pop
mov
pop
fldenv
adc
pop
sbb
adc
xadd
xchg
fadd
xor
xchg
dec
daa
push
add
iret
cmp
das
jecxz
cmpl
inc
add
fwait
mov
stc
sbb
add
inc
addr16
xor
and
repz
insl
imul
xor
movsb
mov
ret
jne
stc
stos
nop
add
shl
popa
icebp
fadds
das
push
dec
or
mov
pop
leave
jle
clc
movsb
stos
in
popf
cmpb
mull
dec
cmp
cmp
rolb
xchg
adc
mov
xchg
arpl
add
push
icebp
dec
adc
push
or
sbb
add
sar
pop
pop
sbb
or
or
or
addr16
je
or
jne
push
dec
mov
in
out
test
cmp
sub
fdivl
dec
repz
cmp
or
inc
cmp
les
push
mov
and
mov
into
cli
jge
add
nop
dec
outsb
add
shrb
pop
push
xor
adc
mov
dec
popa
jnp
insb
cld
mov
xchg
sub
add
cmpsl
xlat
mov
test
rcl
subb
or
and
adc
jo
mov
xorl
call
xchg
daa
rol
or
or
cs
lret
cmp
or
icebp
fsubrp
dec
loop
testb
add
add
js
xchg
add
dec
test
ja
or
hlt
mov
add
insb
push
sub
mov
shr
mulb
mov
xchg
xlat
rorb
add
push
inc
mov
jecxz
pop
add
sub
xchg
jne
mov
add
push
add
or
mov
loopne
cmp
mov
add
mov
cmp
adc
xchg
pop
nop
inc
add
insl
pop
aad
test
pmulhuw
pop
mov
push
add
dec
fwait
xchg
jne
add
fs
shlb
adc
adc
lock
in
add
cmp
mov
and
adc
jmp
das
add
imul
lock
xchg
xchg
push
mov
xchg
adc
sub
aaa
add
cmc
sub
inc
dec
inc
xchg
push
sbb
mov
outsl
add
icebp
mov
xor
cmp
shr
jg
dec
sbb
dec
pop
pop
jne
test
add
cvtps2pi
sti
popa
ret
shll
rcrb
xchg
xor
adc
cld
mov
icebp
jg
sub
aam
pop
cs
lret
add
xchg
ds
leave
pop
sub
pop
adc
add
repnz
jns
cmp
mov
cmp
jge
jns
lret
pusha
outsb
mov
pop
insb
into
xchg
or
cld
mov
lea
add
repnz
out
mov
inc
lods
cmp
cmp
pop
es
lea
bound
lds
daa
sub
sub
add
adc
gs
xor
rclb
add
fldl
inc
cmp
loopne
add
ljmp
ret
adc
roll
pusha
or
int
jg
inc
rcrb
adc
gs
or
push
sub
decb
add
out
mov
mov
pusha
add
ret
in
xchg
inc
mov
stc
or
inc
cmp
pusha
pop
xchg
lock
and
sbb
stos
lea
jmp
push
add
jae
push
repz
dec
out
add
and
das
and
les
pop
icebp
mov
lcall
mov
inc
xchg
rclb
pop
mov
sbb
jmp
rclb
add
push
cmp
mov
and
in
cmp
pop
fs
flds
pop
incb
sub
inc
mov
push
pop
lret
adc
xchg
add
lea
fdivrs
sti
sbb
nop
test
push
arpl
inc
xlat
push
sub
out
into
sub
sub
xchg
pfcmpgt
pop
sub
cmp
push
ljmp
rol
enter
dec
in
add
sub
mov
dec
xor
int3
sbb
imul
paddsw
sti
lret
fiaddl
pop
pop
das
jns
icebp
cmp
shrl
inc
xchg
push
ljmp
das
push
out
rcrl
notl
mov
insb
repnz
add
ss
daa
or
sbb
push
cmp
mov
aas
cmp
pop
lock
je
xchg
dec
add
decb
jg
test
addb
fs
add
in
pop
pop
jmp
mov
filds
lcall
cmp
and
in
fsubrp
ja
add
cltd
int
and
rep
leave
jp
sbb
mov
lock
cmp
pushf
bound
mov
xor
jle
push
push
pop
test
test
mov
leave
mov
jmp
int
sar
add
xchg
inc
popa
scas
filds
dec
cmp
ss
mov
cmp
pop
push
lods
push
insb
loopne
mov
loopne
jo
imul
int
stc
sti
mov
lret
js
in
repz
call
pslld
into
pop
add
hlt
outsl
add
jbe
pop
clc
lock
incb
or
dec
push
sbb
jnp
shl
cmpw
mov
pop
and
inc
stos
cmp
movsb
jl
insb
push
mov
enter
sbb
loopne
pop
in
mov
inc
std
cmp
cbtw
push
push
mov
sbb
mov
data16
repnz
stc
mov
cmp
ja
adc
js
push
mov
iret
mov
mov
loopne
test
cmp
add
sbb
and
popf
testl
aas
das
push
jmp
mov
int
data16
push
add
inc
sti
add
icebp
ljmp
sbb
shll
jne
mov
jae
outsl
or
testl
dec
jno
jb
dec
xchg
cmp
mov
cmp
jns
dec
dec
cmpsl
mov
sbb
dec
fs
add
cltd
cmp
shlb
or
pop
and
loopne
clc
cmp
addr16
jle
fisttpl
inc
out
pop
add
xchg
xor
xor
cmp
aaa
addl
inc
adc
cs
xchg
pop
push
xlat
popa
add
and
test
sbb
add
dec
movsl
sbb
dec
ret
xor
and
pop
mov
cmp
lods
xchg
pusha
and
add
mov
fidivl
adc
imul
pushf
or
rcrl
add
cmp
aaa
or
add
sub
lahf
or
mov
ds
jge
sub
xor
or
in
sbb
scas
add
push
sbb
add
push
iret
and
stos
mov
xlat
dec
dec
sbb
es
in
dec
xchg
popf
ja
sub
dec
icebp
js
mov
das
repnz
loopne
pop
mov
mov
mov
pop
sub
xlat
xchg
mov
dec
cmp
mov
xorb
outsl
or
mov
popa
xor
movsb
insb
pop
aam
call
inc
jo
mov
add
xchg
or
mov
add
cs
push
sahf
int3
aaa
rcrb
test
bound
sbb
push
push
cmp
xorb
sbb
push
mov
and
push
push
ret
cmc
test
or
add
mov
jecxz
sbb
inc
push
cmp
cwtl
add
mov
mov
into
add
pop
mov
cmp
addb
push
lods
arpl
and
in
add
and
cld
fbld
in
subl
add
frstor
add
lock
test
sbb
xor
fyl2x
mov
aas
add
push
mov
adc
sbb
add
adcb
in
fstps
mov
mov
pop
xchg
mov
fcomps
add
lock
sub
mov
add
mov
inc
add
fiaddl
repnz
add
cli
push
mov
fstpt
cmpsb
jno
add
cld
ljmp
jecxz
adc
rcrb
pop
jge
inc
sbb
cmp
fdivp
xor
lcall
mov
orb
fwait
dec
push
rcll
and
and
in
mov
outsb
xor
dec
data16
mov
inc
fwait
lret
insb
add
rolb
pushf
sbb
jne
add
popf
testb
cmp
jno
add
addr16
pop
ret
std
jnp
sarb
outsl
cmp
xor
pop
sahf
cld
mov
xchg
mov
and
jg
sub
dec
loop
inc
sbbb
adc
das
jg
movsl
cwtl
popf
add
and
aaa
xchg
addb
push
scas
push
xchg
outsb
cltd
and
mulb
adcb
pop
enter
add
sbb
stos
lret
call
scas
cmp
mov
aaa
popf
xor
push
mov
add
dec
pushf
add
and
jmp
leave
and
pop
rclb
subb
or
jmp
stc
cld
add
sub
test
cmp
add
cmp
addb
lahf
lret
data16
dec
cli
daa
or
jbe
mov
scas
add
xchg
xlat
das
mov
inc
in
fisttps
and
mov
mov
loop
add
mov
mov
sub
enter
enter
mov
add
test
outsb
cmpsl
dec
and
push
stc
andps
jns
in
add
icebp
fldcw
decb
mov
push
test
dec
sub
add
scas
add
cld
sub
adc
fldt
mov
das
add
xorl
jge
in
add
insb
mov
in
adc
add
fisubs
lahf
clc
fadds
aad
scas
or
add
inc
xor
sbb
sbb
inc
arpl
in
adc
xor
xchg
inc
push
add
test
cs
mov
mov
sub
jne
push
pusha
cwtl
loope
push
jp
loop
add
ss
out
shl
push
sub
iret
movsb
ds
xor
inc
icebp
cmpsb
hlt
addl
shrl
sub
push
add
cmpsl
shll
add
leave
shrb
cmp
sarb
sbb
add
fwait
mov
dec
imul
add
adc
cmp
fsubs
rorb
inc
pop
outsb
add
add
mov
adc
jno
data16
nop
adc
adc
je
ss
push
clc
sub
add
push
jp
inc
add
rolb
mov
notb
aam
and
add
or
insl
and
add
int
out
cmp
hlt
xchg
test
dec
or
jns
sub
loope
push
push
repz
aam
inc
mov
in
idivb
add
inc
add
xor
mov
jbe
sarb
pop
push
pop
pop
cmp
xor
adc
mov
insb
into
mov
aam
mov
cmp
ror
int
mov
lds
xchg
pop
dec
nop
repnz
mov
sub
mov
pop
orb
outsl
rorb
mov
es
xchg
add
mov
sub
scas
inc
mov
sub
push
imul
sub
arpl
popa
adc
inc
jl
push
lea
xchg
sbb
mov
loope
sbb
jmp
gs
out
test
pop
sbb
dec
push
mov
leave
icebp
in
stos
add
jno
sub
dec
or
mov
or
and
jl
movsl
add
mov
push
mov
ss
jno
orl
neg
shlb
sbb
cmp
out
sbb
cmp
mov
fiadds
pushf
pop
psrlq
ret
fs
divb
and
jl
fcom
fiadds
xchg
or
push
movsb
adc
nop
dec
push
loopne
adc
in
push
adc
push
or
and
outsl
cltd
push
xor
vsqrtps
add
push
jp
jbe
and
movsb
les
cld
xor
enter
data16
jmp
dec
add
sbb
and
push
or
add
fnstenv
dec
pop
sub
and
pop
cmp
mov
mov
mov
jo
dec
mov
jle
lock
mov
mov
add
or
add
pop
fmuls
out
addl
cmp
jmp
jecxz
jge
mov
or
mov
int3
inc
xlat
jbe
clc
add
dec
push
sub
movsl
adc
add
dec
dec
shl
or
add
cmp
push
xor
jecxz
dec
les
or
cltd
add
hlt
xchg
repnz
adc
mov
daa
pop
fsts
daa
les
mov
jno
loopne
test
adc
push
lods
add
add
in
je
sub
test
movsl
xor
mov
add
adc
mov
clc
mov
dec
testb
int3
subl
stos
sbb
lods
rcrl
add
popf
in
stos
xchg
insb
pop
mov
xorl
lcall
inc
lock
sub
jne
sbb
xor
mov
scas
rcrb
int3
out
pop
ficomps
add
shl
pop
cmp
shl
addb
jne
or
in
sub
lret
xchg
push
push
test
inc
and
mov
mov
jb
adc
fdivl
pop
xchg
pushf
bound
les
sahf
insb
bound
pop
sub
cwtl
hlt
add
dec
loop
sbb
ret
push
mov
call
stos
jo
mov
roll
sub
xchg
das
jmp
sub
mov
adc
repz
adc
cmp
add
or
loope
ja
and
mov
repnz
sbb
mov
cmp
adcb
mov
jecxz
movsb
xchg
mov
adc
dec
lds
icebp
sbb
adc
enter
lods
or
mov
xor
add
mov
fnstcw
add
xor
std
cli
into
jns,pt
mov
mov
fsubrl
inc
mov
xchg
out
mov
xchg
shl
je
and
adc
jg
ficomps
lahf
rolb
icebp
insb
test
jg
pop
sbb
xor
push
arpl
js
mov
xchg
popl
ljmp
pop
and
jne
mov
sub
xchg
jmp
enter
add
fcomp
inc
mov
dec
add
sub
push
subb
mov
pop
ja
cld
add
dec
dec
inc
and
push
push
xor
sarb
fidivrl
and
cmc
cmp
addb
divl
fnsave
inc
sahf
fdivrl
addl
ret
mov
ja
dec
in
pusha
adcl
dec
fbld
sbb
addb
adc
push
rolb
add
cmp
test
mov
loopne
adc
and
and
lret
lcall
add
insb
xchg
add
jecxz
test
shl
mov
fcoms
xchg
inc
loop
imul
insl
clc
xchg
mov
into
mov
out
in
std
fs
jmp
fcom
mov
lods
loop
iret
jmp
jbe
add
scas
push
arpl
out
sbbb
mov
xchg
add
jle
push
in
repnz
and
iret
and
dec
mov
jne
cwtl
in
cs
test
mov
xlat
mov
mov
add
xor
xor
push
ja
rdpmc
or
sub
inc
jecxz
aam
jae
lds
jp
mov
out
mov
mov
xchg
jmp
jno
addr16
fcomp
adcb
dec
in
test
pop
push
clc
jp
cmpb
fdecstp
cmpsb
lea
mov
in
pop
or
xchg
pop
dec
mov
and
fistps
or
lahf
into
shlb
pop
xchg
mov
outsl
cld
add
das
push
push
add
jge
mov
push
cmp
jmp
int3
filds
add
sbb
scas
and
pop
es
sub
test
notb
add
bound
sub
sub
div
add
add
sub
inc
xchg
lock
mov
xchg
movsb
pop
push
or
rorl
pop
adc
adc
cmp
and
push
add
xor
inc
movsl
adc
mov
inc
jno
jo
adc
clc
mov
adcl
or
pop
orb
int
push
add
dec
add
inc
push
xchg
cld
mov
sbb
rclb
mov
repz
aam
jb
call
arpl
cld
jno
add
xchg
insb
int3
pop
mov
movsl
fs
movsb
cwtl
fstps
mov
cwtl
xor
movsb
test
int3
lcall
movsb
sub
adc
push
and
pop
addr16
inc
pop
jo
add
lret
pop
mov
adc
jmp
pop
inc
push
popa
xor
int3
daa
int
call
fadds
adc
arpl
mov
mov
adc
mov
and
cld
jb
cmp
mov
xchg
add
cs
sbb
or
add
test
mov
add
push
loopne
adc
movl
or
mov
pop
dec
int3
ret
jno
aam
popa
inc
and
sbb
jp
and
repz
and
stos
add
or
rdtsc
imul
xchg
sub
fsubr
sar
or
je
mov
inc
dec
add
lahf
stc
rcrl
popa
and
inc
cli
dec
scas
mov
mov
cwtl
or
sub
mov
mov
pusha
lods
movsb
push
add
adc
repz
daa
dec
mov
mov
sbb
test
insb
add
test
jb
cltd
and
faddl
dec
out
xor
neg
cld
ja
divl
pop
movl
sbb
push
sub
lds
in
mov
pop
das
outsl
orb
subl
sbb
mov
orb
rorl
cmpsb
aad
test
lock
inc
jl
iret
xchg
repz
xchg
mov
outsl
and
xchg
sub
clc
pushf
shlb
push
test
punpckhdq
insl
mov
xlat
add
pop
shll
shlb
cmpsb
push
mov
fbld
jae
inc
jecxz
mov
push
loopne
mov
jecxz
add
mov
ljmp
mov
push
mov
cmc
ja
loopne
enter
repz
jns
addb
out
scas
cmp
outsl
movsb
pop
jmp
and
or
dec
inc
insb
jmp
dec
incb
int
push
add
adc
ja
cmpsb
pusha
adc
mov
adc
nop
xchg
lods
mov
dec
xchg
ret
pop
jp
cmpb
cld
dec
inc
add
jns
or
xchg
mov
add
add
push
es
pop
xor
pop
pusha
shrb
add
fisubrs
movsb
adc
push
loop
push
dec
leave
jb
mov
lret
push
adc
add
repnz
sub
push
add
lds
jp
cmp
add
jmp
mov
pop
in
add
jmp
cmp
dec
andl
cmpsl
orb
add
inc
or
repnz
jg
dec
inc
iret
cmp
cmp
pop
bndldx
or
mov
mov
inc
dec
add
out
jbe
lret
xor
mov
cmp
add
or
add
std
adc
push
jnp
and
cwtl
add
insl
in
fucomi
jae
pop
and
mov
jns
inc
add
mov
das
pop
add
ja
lret
aam
cmp
cmp
sub
int
xchg
xchg
push
inc
call
lods
rcr
imulb
inc
cld
stos
pushf
xlat
cwtl
mov
in
mov
fstpt
sbb
shll
nop
dec
andb
in
add
mov
gs
mov
and
int3
aam
ret
cmc
jno
cmpl
mov
movsl
mov
es
rolb
add
cwtl
jns
inc
fildl
jae
pop
lods
enter
out
mov
mov
mov
mov
std
push
lods
mov
fldcw
fsub
push
rcrb
cwtl
adc
decl
loope
popa
jae
sbb
jmp
rclb
pop
and
rcrb
enter
add
jmp
jnp
pusha
lcall
rclb
movl
dec
sahf
push
inc
jecxz
clc
dec
outsb
inc
call
adcb
adc
pop
in
pusha
mov
adc
dec
nop
mov
call
mov
sub
sub
push
mov
cld
pop
lret
add
fimull
andl
sbb
jb
movsb
test
inc
sahf
mov
adc
dec
pop
xchg
xchg
dec
mov
dec
hlt
and
fwait
mov
xor
pop
mov
daa
sub
cmp
test
idivl
cmp
mov
mov
repz
test
leave
icebp
mov
and
sbb
dec
testb
pushf
pop
adc
bound
nop
add
jbe
pop
add
mov
push
xchg
adc
cwtl
jb
pop
push
lret
mov
mov
xlat
mov
in
add
pop
js
and
xchg
xchg
test
aam
sub
and
add
and
jne
inc
fidivl
dec
test
int3
in
mov
or
xchg
movsb
aam
les
xor
sub
add
lock
fs
dec
mov
add
call
cmp
decb
fs
jo
mov
nop
or
add
ret
repz
jae
add
repnz
adc
mov
sbb
ljmp
xchg
xor
or
inc
dec
fcomps
dec
xor
sbb
and
jno
movsb
mov
orb
call
sub
xorb
inc
shlb
outsb
inc
xor
inc
or
ds
lock
fnstenv
cld
push
xlat
xchg
and
jbe
divl
add
mov
add
xchg
or
push
andb
sub
int3
xchg
xor
or
inc
bound
xor
sbb
adc
iret
aam
adc
in
xor
cmpsb
push
and
icebp
pop
imul
je
sti
xor
sub
sub
add
jg
iret
add
sahf
jbe
sub
out
into
mov
clc
scas
add
dec
jno
stc
add
inc
clc
add
or
sbb
or
add
mov
cmc
and
stos
f2xm1
nop
mov
fsub
sub
dec
sub
add
test
dec
or
pop
push
mov
addb
xor
mov
xchg
scas
sub
add
push
mov
xor
testl
test
xchg
in
les
jo
pusha
jmp
add
xor
jno
pushf
dec
f2xm1
loop
shlb
lods
es
jns
sbb
fs
leave
and
fisttpl
int
andb
bound
add
stc
mov
dec
addb
test
sub
sub
dec
inc
push
je
test
rcll
xchg
hlt
pusha
mov
or
into
outsb
mov
or
pop
xchg
jl
movsl
fcomps
and
or
or
ret
xchg
push
insb
or
fadds
lahf
and
adc
sbb
xchg
jbe
adc
aam
adc
or
mov
dec
loop
and
add
push
add
aas
call
pop
lahf
sub
add
test
jns
mov
clc
sti
add
les
dec
test
jne
add
fs
pop
push
in
movsb
or
jle
add
push
sub
push
adc
or
sbb
shl
lods
push
movsb
int
pusha
test
dec
push
lret
push
sub
dec
push
cmp
fldl
sbb
insl
ja
lock
mov
cld
add
sti
push
mov
xchg
mov
inc
mov
adc
test
fsubs
xlat
jnp
imul
sub
lock
mov
adc
mov
pop
lea
add
sub
daa
clc
popa
mov
sbb
dec
lcall
or
or
fwait
nop
lds
add
mov
push
or
daa
add
push
bound
icebp
add
sbb
fiadds
jp
daa
mov
imul
scas
push
jle
es
push
dec
cmp
xor
adc
and
dec
pop
or
sbb
or
push
pusha
sub
and
adc
push
dec
xchg
cmp
jnp
xchg
test
inc
bound
flds
sbb
mov
and
and
dec
and
mov
cmp
mov
in
and
cmpsb
xor
pop
pop
enter
adc
jo
xor
lcall
dec
mov
add
dec
jno
cmp
aaa
aad
movsl
adc
push
cmpsl
and
pusha
push
or
add
sbb
fcoms
mov
add
cmp
dec
addr16
cmp
add
popf
mov
and
aam
and
orb
xlat
jae
inc
pop
pusha
mov
mov
lods
sbb
call
daa
adc
add
cld
rclb
rcll
or
je
scas
cmpb
add
add
icebp
xchg
adc
mov
ljmp
and
mov
or
pushl
mov
xlat
push
mov
and
jge
sub
push
roll
pushf
xchg
hlt
push
and
jnp
pop
pop
leave
je
xchg
dec
add
dec
or
mov
dec
dec
mov
lar
fs
pop
loop
xchg
lahf
jecxz
jmp
ja
add
aaa
dec
sar
mov
cli
stos
out
add
test
xor
pop
jo
pop
bound
cmpsl
xor
mov
dec
push
add
xchg
mov
bound
push
add
nop
outsb
jge
push
or
insb
or
cmp
adc
sub
fcoms
and
add
or
and
andb
push
addr16
and
and
stos
mov
pop
or
pushf
repz
or
gs
out
xor
mov
jae
aas
shll
add
xchg
mov
les
mov
js
js
or
adc
mov
and
outsl
rol
mov
imul
add
pop
inc
adc
ja
out
fsubrl
xor
or
inc
mov
add
push
mov
mov
lret
lcall
pop
mov
inc
add
mov
or
fisubrs
add
dec
inc
or
fs
bound
dec
and
ljmp
in
xchg
sbb
hlt
mov
sub
adc
xorb
adc
cmp
punpckhbw
fidivl
leave
roll
add
iret
cmc
les
std
add
dec
dec
notb
mov
sub
mov
and
or
mov
mov
or
sbb
mov
aam
and
jmp
xor
pop
out
les
mov
je
add
mov
orb
xor
stos
and
xlat
arpl
sub
xchg
sbb
sarl
lret
popf
pusha
test
fiadds
jp
cltd
xchg
psubsw
rorb
in
mov
sti
testb
jo
mov
mov
mov
lea
mov
test
dec
xchg
lcall
push
push
fildll
mov
icebp
scas
push
cmp
je
push
mov
mov
xchg
cmpsl
mov
int3
hlt
daa
mov
push
test
push
sahf
outsb
jo
popf
jmp
xor
mov
lret
aam
icebp
popf
dec
xrelease
pcmpgtw
shlb
cwtl
call
inc
jae
adc
push
add
fsubs
adcb
sti
dec
pop
js
pop
inc
int3
add
mov
cwtl
int
jmp
cli
sub
xchg
pop
or
xchg
xchg
adc
cwtl
add
jmp
dec
pop
mov
lds
or
imul
in
add
adc
fistl
nopl
xor
xchg
mov
mov
fs
jo
push
cmpsl
xchg
xor
mov
xchg
in
popa
dec
sarb
fadds
sbb
mov
rcll
mov
stos
pop
sub
dec
inc
gs
in
pop
or
test
push
pop
hlt
insl
fmuls
subb
in
or
and
int
sub
js
and
lcall
mov
jne
popa
mov
add
idiv
pop
adc
in
xchg
rolb
cmp
add
neg
inc
add
mov
jecxz
adc
clc
in
testl
loopne
movsl
sub
xchg
andl
pop
shrb
cmp
xchg
cli
lods
pusha
test
cmpl
imull
imul
xchg
insl
jns
push
mov
fmuls
int3
add
push
filds
test
addb
sub
cmc
lds
ljmp
test
inc
add
sub
or
lds
sbb
cmpsb
pop
cmp
push
int3
add
mov
push
mov
das
pop
add
in
adc
add
mov
test
mov
push
or
cmp
and
in
dec
std
sbb
fisubrl
jmp
fs
inc
cmp
xchg
repnz
jb
sbb
jno
test
cmp
aas
std
xchg
fdivl
pop
mov
and
mov
mov
test
pushf
mov
add
jmp
and
pop
sbb
icebp
lods
cld
pusha
sarb
bound
loope
inc
std
rcrb
out
add
jmp
incl
mov
pushf
cmp
nop
add
cmp
and
mov
add
or
xor
pop
and
and
andb
mov
inc
and
icebp
mov
fs
inc
test
ljmp
jmp
adc
je
dec
cltd
or
jo
int3
pop
pop
movsl
lds
or
xlat
in
push
cmp
jb
cwtl
shrb
dec
repz
xor
push
sbbb
cld
push
insb
sbb
negl
pop
test
mov
and
mov
ret
cmp
jl
lods
inc
and
int
jmp
mov
and
inc
and
xlat
cmp
sub
inc
outsb
cmpsl
add
xchg
jle
dec
enter
xchg
in
adc
adc
sbb
add
clc
pop
cmpb
lods
test
add
mov
or
lret
inc
adcb
xchg
es
inc
loop
and
jl
push
js
pop
pushf
cltd
and
sub
insb
mov
cmc
mov
mov
jne
or
repnz
fldenv
mov
pop
xor
pusha
inc
adc
pop
lret
dec
xor
mov
js
or
fiaddl
test
dec
lahf
nop
add
mov
sbb
mov
inc
call
mov
js
pop
mov
and
xor
add
or
imulb
addr16
inc
adc
inc
call
adc
aam
call
stc
ja
inc
sarl
add
popa
fnstenv
cmpxchg
pusha
mov
fdivs
aas
roll
hlt
inc
add
push
std
rorl
push
rclb
sub
loopne
mov
jnp
test
inc
data16
cli
das
mov
sub
int3
xorb
cltd
push
movaps
rcrl
add
ss
jge
scas
mov
inc
xchg
scas
jbe
inc
loop
test
pop
orb
insb
jb
or
push
and
cld
inc
xor
repnz
adc
add
aaa
xor
mov
lods
add
xor
repnz
icebp
push
sub
mov
mov
add
sub
bound
cmovg
addr16
inc
popw
imul
sbb
test
int3
push
push
je
jo
jae
loopne
repnz
xor
int
jo
loop
enter
out
inc
stc
xor
aaa
jge
out
add
mov
or
pop
je
add
lret
adc
int3
shll
fnstcw
ljmp
movsb
mov
sbb
cmc
mov
mov
adc
shl
test
in
pop
sbb
mov
inc
sub
cmpsl
push
add
mov
push
gs
cmp
sbbb
xchg
push
add
aaa
movsl
ds
and
lods
fidivrs
xor
xor
shl
inc
xchg
adc
dec
es
lods
push
dec
movsb
lret
stos
pop
popa
lcall
int3
xchg
jb
xor
fstpl
sbb
loop
add
dec
jnp
ss
das
mov
sbb
pop
mov
jne
xor
call
aam
pop
adc
mov
addb
aas
add
and
sub
fldl
xor
imull
adc
sbb
mov
xchg
push
sti
cmpsl
mov
mov
mov
cltd
jbe
mov
mov
loopne
int
mov
xchg
mov
dec
mov
pop
dec
repnz
push
adc
add
ljmp
lret
fwait
dec
sbb
push
sub
jp
adc
int3
add
cmp
ljmp
or
add
adc
pop
push
xchg
or
jl
push
add
adc
sbb
out
scas
xchg
loopne
mov
pop
push
adc
sub
add
imull
jno
jb
iret
cmp
xchg
pusha
inc
mov
repnz
cltd
cmp
test
mov
leave
movsl
push
mov
add
insl
pop
into
add
lahf
fadds
adc
addb
sub
adc
dec
jl
mov
dec
adc
sub
stos
mov
xchg
int
inc
sahf
test
pop
mov
add
pushf
xchg
pop
sete
rcrb
mov
add
push
andb
adc
or
or
cmpsl
xlat
adc
aaa
mov
in
sarb
dec
scas
cmp
mov
adc
jg
adcl
movsb
cltd
push
popf
aaa
ja
mov
hlt
jb
shrb
rorb
stc
jnp
mov
mov
mov
das
push
mov
idivl
sti
add
add
push
movsb
data16
pop
add
lods
xchg
adc
mov
mov
jb
sbb
xor
lret
jno
test
pop
and
mov
push
clc
popf
mov
fildl
jb
dec
jae
addb
movsb
inc
xchg
and
fst
push
mov
cmp
add
mov
fidivrs
xchg
xorb
stos
jb
cltd
adc
add
fwait
lods
add
mov
test
or
pop
xchg
mov
inc
push
loopne
mov
push
add
pop
or
add
xor
mov
jmp
dec
aas
push
add
mov
pop
dec
icebp
call
jns
add
mov
pcmpgtw
dec
pop
sarb
stc
icebp
fisttpl
jp
and
ret
pop
xchg
inc
lock
jne
faddl
jbe
add
adcb
js
sahf
cmp
cmp
mov
sbb
add
pop
fldcw
mov
mov
push
add
in
push
loopne,pt
inc
aad
subl
sbb
push
and
adc
lods
add
mov
sub
loop
jne
popf
in
jno
xor
shlb
inc
sarb
or
and
test
push
pushf
test
fldl
xchg
lcall
clc
stos
shll
sbbb
mov
add
cmp
popf
jge
lret
add
dec
cs
dec
sub
pop
or
add
mov
add
setae
in
pop
popf
add
inc
mov
loopne
nop
add
mov
js
scas
push
pop
sbb
xchg
mov
sbbb
and
sub
loopne
inc
sub
add
xchg
add
adc
adc
jl
icebp
jns
push
shlb
cltd
xor
inc
xor
je
sbb
jns
jne
mov
add
out
sub
faddl
mov
xchg
bound
cwtl
jns
fistps
call
lcall
inc
sub
test
inc
test
add
push
pop
inc
pop
push
out
les
sbb
test
lods
add
aam
test
shrl
mov
xor
subb
rcll
sub
inc
push
xor
jns
mov
dec
adc
xchg
sarl
xor
test
pusha
mov
dec
sub
mov
out
scas
push
clc
and
fwait
leave
add
bound
mov
cmp
add
add
rcll
ja
mov
cltd
pusha
sub
cs
jp
rclb
sub
xchg
outsl
dec
shll
orl
loopne
add
fiadds
bound
pop
sub
add
adc
mov
test
lods
jnp
mov
inc
enter
fistl
test
mov
ljmp
verw
vpcomd
or
icebp
cmpsb
xchg
addl
cmp
lods
repnz
int3
pusha
xor
pusha
add
xor
js
cmp
sbb
inc
dec
pop
adc
mov
ds
xchg
pop
add
and
push
mov
cs
addl
push
lea
enter
add
arpl
out
mov
out
cltd
dec
int3
add
pop
or
ja
stos
hlt
add
out
std
sbb
pop
call
adc
test
call
cmc
push
pop
adc
mov
sbbl
idivb
sub
jno
sbb
pop
xchg
subl
and
bnd
inc
insb
add
pusha
push
aam
xchg
test
inc
iret
cmp
adc
adc
aaa
xor
test
jno
fstpt
mov
xorb
addb
push
movsl
or
nop
inc
pminub
pushf
insb
loopne
das
jns
push
dec
jle
roll
add
and
cltd
lock
test
sahf
roll
add
mov
push
and
cmp
xor
xor
dec
popf
int
adc
push
aad
xorl
jo
outsb
xchg
push
cmpsb
add
add
mov
test
add
push
daa
les
ret
call
adc
das
sub
jbe
and
inc
call
xor
adc
pushf
and
nop
dec
addl
stos
add
xchg
insw
out
lock
jnp
cmp
cmp
jb
adc
out
jecxz
xchg
fdivs
rclb
adcb
aas
add
mov
sub
sti
inc
sub
and
adc
jbe
jl
push
out
enter
jno
dec
add
mov
into
push
add
add
xchg
test
sbb
insb
addr16
sar
cmpsl
inc
mov
rcrb
in
push
pushf
cs
icebp
les
jno
ficoml
or
outsl
add
sbb
xchg
xor
icebp
cltd
mov
mov
movsl
dec
andb
scas
mov
or
cmc
pop
mov
out
hlt
jnp
and
loope
cld
xchg
ljmp
or
mov
cmp
adc
push
sub
pop
jbe
mov
and
cwtl
sub
add
std
adc
mov
cs
lods
and
out
dec
mov
lret
in
or
lea
fxch
xchg
push
mov
cwtl
test
push
insb
in
cmc
cmp
mov
sub
adc
es
mov
and
jbe
xor
sbb
add
out
adc
push
jns
popf
leave
lcall
fcomps
std
into
flds
add
cmp
stos
adcb
jnp
pushf
add
js
push
fmul
push
pop
cmpb
and
xor
nop
pop
loope
inc
ret
adcb
cltd
sahf
lods
orb
add
aad
pop
arpl
or
mov
dec
jl
add
xor
inc
jge
or
inc
inc
les
xchg
sub
jg
adc
add
add
adc
std
int3
xchg
mov
out
inc
scas
inc
es
sub
add
aaa
sti
jns
xor
mov
mov
jmp
test
sbb
ret
jb
sub
dec
mov
adc
cwtl
mov
icebp
imul
or
mov
pop
loope
andl
dec
push
inc
inc
jl
sbb
sbb
aam
inc
push
call
out
xchg
add
js
iret
hlt
cli
sarb
inc
stc
add
lods
cwtl
fwait
btc
and
push
ret
add
aas
pop
pop
xchg
cmp
ficompl
in
dec
fistpl
test
jo
and
and
add
xlat
mov
xchg
add
sysenter
out
dec
xor
pop
and
inc
add
jecxz
add
mov
loopne
or
movsb
xor
imul
sub
or
pop
sbb
in
xchg
and
insl
mov
popf
std
cld
divl
mov
lret
sub
add
inc
and
mov
addb
js
add
sbbl
in
or
or
add
outsl
add
mov
sub
add
sti
sbb
xor
adc
pop
test
mov
push
fstpl
mov
nop
and
pushf
cld
inc
iret
add
sbb
sub
pop
sbb
in
add
mov
test
lret
xchg
mov
sarl
add
or
test
mov
inc
std
add
sbb
add
sub
jnp
jmp
popf
testb
es
enter
add
stc
jo
pop
adc
mov
outsl
push
push
add
out
aad
lcall
dec
js
jmp
nop
pop
add
jecxz
sahf
icebp
data16
into
lods
sti
push
xchg
sub
xchg
inc
dec
jb
stc
iret
add
adc
fistl
sbb
lds
cmp
je
mov
jg
jo
cmp
nop
les
jnp
int
sarb
cmp
sub
inc
or
mov
out
mov
ss
aaa
cmpsl
xor
popf
mov
ja
xchg
mov
dec
adc
xchg
add
sub
push
hlt
and
dec
insb
icebp
add
jecxz
movsl
sub
push
inc
out
mov
xchg
adc
or
or
ud1
inc
pop
push
jno
cmp
xor
call
cli
nop
aam
pop
int3
xchg
in
test
inc
jne
add
in
xchg
clc
mov
loope
addl
cmp
sarb
lds
add
fiaddl
add
mov
in
pop
mov
jnp
or
shlb
repnz
cli
push
in
pop
mov
orb
push
lret
and
fldl
add
jae
inc
push
adc
divb
jge
incl
inc
sar
push
aam
jmp
ja
stos
ret
pop
push
and
add
aas
push
fisubs
sarl
sbb
repnz
imul
push
add
jge
adc
popa
dec
pop
xor
mov
out
leave
pusha
add
mov
mov
mov
inc
dec
adc
subl
add
sahf
push
or
sub
push
cmp
jp
test
je
add
andl
add
cmp
test
push
daa
xchg
icebp
sbb
jnp
mov
mov
sbb
ret
mov
popa
xchg
cmp
push
in
outsl
shlb
adc
pop
jge
cmpl
fsubrl
sub
sbb
pushf
add
xor
es
xchg
es
mov
aam
outsb
inc
ret
nop
cmp
addb
cli
jle
cmp
movsl
sbb
scas
sbb
leave
pop
aam
repnz
imul
rorl
add
jmp
pop
sub
cmp
into
fildl
mov
aas
in
adc
push
sub
push
lcall
push
xor
rolb
mov
loopne
xchg
sbb
mov
mov
cmp
jmp
add
aam
in
popf
mov
xchg
pop
and
or
out
lock
icebp
inc
and
mov
or
movsb
std
inc
xchg
jbe
mov
nop
rclb
ljmp
cld
jmp
mov
insl
ljmp
rol
mov
cmp
es
scas
adcl
push
in
in
mov
jno
pushf
test
xlat
repnz
mov
xor
mov
xchg
addr16
loopne
add
cmp
cmp
cmp
mov
ret
cli
pop
dec
cmc
or
push
push
sahf
imul
pop
add
jbe
js
push
cmpsl
add
dec
pushf
inc
ljmp
adc
add
push
mov
pop
cmp
sbb
loope
and
inc
xor
mov
mov
push
or
push
clc
repnz
and
addl
xor
stos
popa
push
mov
scas
into
daa
dec
xlat
jne
pop
pop
push
or
out
aad
push
hlt
add
mov
add
add
add
sbb
or
xchg
cmc
add
or
ss
sbb
test
mov
pop
inc
mov
cli
push
ret
loopne
adc
adc
ret
das
aas
and
add
ret
mov
inc
mov
orb
mov
pusha
lcall
popf
in
ficompl
addr16
roll
jno
imul
aam
xchg
ss
jno
jmp
loop
stos
rcrb
orb
jns
mov
pop
int3
push
add
cmc
inc
xchg
xor
loope
call
lret
add
mov
fcmovne
mov
and
add
pop
outsb
cmp
pminsw
sub
scas
mov
dec
clc
nop
icebp
les
or
push
popf
push
addl
loopne
xchg
shlb
inc
xor
push
jmp
mov
nop
jp
cmp
mov
add
dec
sbb
cmp
jmp
mov
mov
lock
and
inc
mov
xchg
loope
popa
cwtl
jns
popa
jg
out
add
sbb
imul
mov
mov
push
xor
mov
add
repz
inc
mov
inc
jge
shl
xor
mov
xchg
and
push
jae
inc
lret
sub
inc
stos
jp
jo
push
push
pusha
dec
shlb
cmp
loopne
cmp
dec
sahf
rorb
add
jns
inc
sub
pushf
xor
inc
subb
and
mov
xchg
adc
mov
mov
jbe
stos
sub
dec
mov
pop
adc
idivb
sbb
test
xorb
and
dec
movsb
dec
inc
mov
add
addr16
mov
xchg
lcall
clc
pop
shrb
or
lahf
pop
or
adc
pop
or
dec
rorb
mov
mov
les
gs
leave
xor
xchg
or
mov
mov
stc
adc
add
movsl
mov
ret
fcomi
cli
sahf
lcall
sarl
stos
add
filds
add
mov
cmp
cli
cmp
add
jle
cmp
mov
loope
inc
fmull
or
and
fiaddl
push
mov
cmp
add
mov
call
imul
addr16
mov
mulb
push
inc
pop
push
add
jge
jmp
cwtl
addb
mov
pop
mov
sar
and
push
mov
xchg
nopl
xor
sub
push
sub
jmp
mov
push
sbb
ja
clc
adcb
inc
xor
mov
sub
jecxz
dec
dec
and
add
leave
sbb
and
call
andl
or
in
mov
inc
stc
adc
cmpsb
mov
stos
add
mov
push
and
stos
sti
enter
push
cld
sub
jp
add
mov
mov
xchg
setbe
mov
aaa
xchg
shrb
push
push
mov
jmp
push
roll
push
jno
in
popl
cmp
test
sbb
xor
and
es
test
ds
or
bound
lds
data16
stc
fisubl
sub
adc
call
rorb
pop
fsubrs
add
repnz
lock
and
cmp
arpl
shl
xchg
fbstp
cmp
sub
int3
sbb
pop
xchg
cmpl
push
in
add
and
add
ds
rol
add
nop
sbb
push
sti
in
mov
bound
jb
add
rolb
fistl
mov
and
xor
dec
shrb
adc
adc
les
ds
cvtdq2ps
or
add
xchg
mov
sbb
stos
jecxz
arpl
or
adc
adc
dec
mov
cmpsb
add
push
ja
add
aas
and
insb
mov
add
mov
punpckldq
nop
push
lret
sub
fsubs
inc
cmc
cmp
insb
ficompl
enter
movsb
adc
in
pop
nop
cmp
xchg
adcb
ret
mov
inc
fistl
mov
es
shr
jae
adc
cli
ds
mov
dec
inc
inc
fidivs
repz
jb
dec
shll
pushf
sub
inc
add
pop
lds
xor
fmuls
and
rclb
push
mov
xchg
mov
shrb
cmpsl
mov
push
insb
in
addb
sub
pop
scas
lahf
enter
sahf
xchg
add
scas
dec
or
xchg
insb
in
pop
lcall
dec
cld
repz
mov
jmp
insb
jmp
aas
in
add
push
sbb
nop
push
test
add
inc
or
dec
mov
mov
add
inc
jno
push
mov
pop
imul
ja
mov
cmp
push
mov
adc
xor
dec
sbb
iret
jmp
mov
movsb
mov
pop
add
xchg
in
dec
rolb
gs
or
dec
mov
push
jp
arpl
push
clc
mov
call
mov
addb
fstpt
push
cmp
sbb
mov
es
aam
or
sub
push
in
shll
sbb
popf
andb
cli
in
mov
sbbl
dec
push
mov
sbb
icebp
dec
test
sbb
test
and
and
add
xor
push
and
pavgb
ss
fiadds
ljmp
fsts
mov
out
sbb
mov
xchg
add
jl
jno
sub
int
fadd
imul
mov
arpl
scas
out
mov
cmp
jne
add
call
mov
das
mov
pop
xchg
cli
out
jl
pop
ja
roll
cmp
and
and
in
xchg
add
inc
inc
mov
rcrb
xchg
leave
pusha
ljmp
add
mov
push
dec
pop
add
mov
push
bound
incb
mov
fisttpl
js
mov
mov
and
divl
scas
test
ficoms
sbb
lock
lods
xor
push
fwait
mov
adc
mov
sub
mov
jp
or
dec
cwtl
add
mov
adc
data16
repnz
mov
xor
mov
rolb
pop
pusha
jne
jp
adc
mov
repz
cmpsb
push
push
add
or
sbb
xchg
fiadds
stos
mov
jae
out
sub
push
jns
int
fadds
pop
sbb
mov
add
add
pusha
scas
imul
sbb
xor
repz
adc
clc
dec
mov
pop
xchg
and
outsb
and
inc
cmp
enter
pop
popf
mov
fsubl
fiadds
and
push
or
adc
dec
out
xor
adc
sbb
inc
incl
lcall
add
sub
push
pop
cmp
or
xlat
jp
add
inc
lret
or
mov
shrl
and
js
jp
sub
dec
andb
add
popa
and
and
pop
and
adcl
js
dec
dec
inc
xchg
loope
fsubl
add
sub
add
stos
mov
sub
or
mov
inc
or
dec
in
mov
push
xchg
sbb
pop
xchg
mov
adc
test
jnp
and
pop
addl
mov
hlt
adc
mov
mov
into
fildl
nop
test
lods
add
js
jnp
data16
arpl
jae
add
ljmp
push
stos
aam
loope
or
fsub
dec
xchg
add
shll
add
sbb
xor
adc
add
xor
dec
loopne
data16
pop
add
lret
sub
push
aam
sarl
push
and
xor
daa
cmp
jp
pop
adc
push
add
jns
inc
aaa
aas
loopne
cmpsl
add
adc
gs
insl
pop
add
sbb
add
in
das
or
pop
dec
mov
fstps
push
call
sarl
rol
push
push
ljmp
in
movsl
add
call
popa
push
sbb
jns
sbb
fdivrs
pop
out
leave
dec
add
sub
sbb
push
cmpsl
dec
xchg
js
push
das
mov
cld
dec
lods
cmp
cmc
add
scas
mov
sbb
mov
in
aad
sbb
stc
js
out
add
add
jecxz
push
sbb
sbb
add
js
jl
mov
fldl
fwait
mov
cmp
sub
push
cmp
cmp
adc
dec
stos
jmp
xchg
sti
or
pop
inc
aad
xchg
mov
add
jl
lea
mov
sub
cltd
jmp
add
cld
jle
fwait
loopne
jne
push
add
les
and
icebp
mov
push
or
js
mov
adc
mov
dec
push
cltd
xchg
loope
inc
rol
add
dec
inc
jb
push
je
push
movsl
incb
cmp
cmc
fmull
add
imul
data16
cmp
cmp
cmp
sbb
fdivrs
lods
mov
add
push
popf
int3
push
rorb
dec
enter
dec
xchg
or
xchg
ds
mov
jb
add
rcrb
mulb
bound
jno
loope
mov
shll
repz
test
xor
xor
add
in
fildll
sbb
hlt
inc
clc
inc
nop
frstor
or
push
xor
push
add
add
and
jg
sbb
or
xor
pop
and
dec
cmp
push
inc
cmpsb
popa
and
adc
daa
leave
add
ret
fisttpll
inc
mov
pop
ja
adc
dec
movsl
scas
das
cmp
or
add
mov
lods
mov
push
sbbl
repz
adc
push
add
inc
fdivr
mov
or
jb
or
push
hlt
in
mov
and
and
xorl
ret
lock
hlt
movsl
fadds
mov
add
dec
jae
dec
popf
cltd
dec
frstor
cmp
xchg
mov
mov
orl
dec
repz
sub
loopne
dec
pop
popf
xchg
mov
push
add
aam
mov
add
pop
inc
jl
inc
mov
movsb
add
or
cmp
test
pop
mov
and
hlt
lock
xchg
mov
in
or
dec
cmp
ljmp
lock
repnz
dec
ja
add
mov
bound
sub
pushf
mov
adc
mov
or
clc
push
and
bound
push
and
dec
dec
mov
xchg
pop
fwait
addb
in
add
lea
add
xchg
shrl
mov
pop
jo
cmp
mov
fisubrs
and
rclb
sbb
add
repz
lock
push
xor
call
xor
jle
add
mov
ja
in
movsb
add
inc
xor
test
nop
mov
dec
icebp
sub
mov
and
jo
mov
cwtl
add
dec
and
dec
xor
test
pop
rcrl
mov
mov
lock
and
dec
sub
mov
or
dec
mov
cmpsb
mov
jp
xchg
fldl
xchg
mov
test
arpl
dec
leave
repz
dec
outsb
orb
dec
inc
sub
mov
add
xchg
xor
nop
cld
fisttps
stos
sub
mov
mov
lahf
ljmp
adc
enter
ds
mov
in
jns
inc
mov
and
incl
adcb
push
loopne
add
mov
popa
insl
sub
and
lret
fcoml
cmp
xchg
les
lea
inc
xor
xor
adc
pop
std
jmp
call
inc
movsb
rclb
mov
dec
lods
or
xchg
fwait
mov
mov
or
mov
addb
out
mov
push
add
in
je
lcall
or
and
nop
inc
xchg
xor
rcrb
mov
popf
and
cmp
lock
shll
int
and
push
clc
pushf
lret
shrb
add
jne
mov
pop
loop
orb
mul
pop
out
push
xor
mov
inc
jb
xchg
arpl
in
repnz
cwtl
inc
mov
mov
mov
loope
sub
cmp
pushf
call
repz
fwait
scas
inc
mov
add
cwtl
mov
nop
cld
dec
lcall
add
add
add
inc
mov
pushf
ret
outsb
pop
ja
push
pop
es
push
or
or
sub
imul
hlt
add
in
lock
or
pop
add
insl
mov
fildl
jmp
outsb
mov
in
dec
inc
mov
add
xchg
or
or
int3
sub
lahf
into
cwtl
ficompl
pop
mov
xor
shlb
test
aad
add
mull
adc
pusha
ljmp
mov
sub
mov
pop
sbb
insl
pop
sti
adc
push
xchg
mov
add
inc
sbb
test
push
adc
mov
inc
add
lahf
and
and
push
int
fs
add
cmp
cltd
sbb
cmp
sbb
repz
sub
cmp
imul
add
mov
mov
imul
cmpsb
mov
add
add
adc
adc
adc
dec
sbb
popa
subb
add
mov
adc
add
loop
hlt
ds
xor
dec
enter
repz
adc
std
add
pop
insl
jae
pop
cmp
shlb
adc
roll
xchg
sub
in
mov
lret
or
sarb
xor
inc
sbb
fs
xchg
adc
sub
cltd
movsl
mov
xor
nop
sub
sbb
pop
loopne
or
jmp
enter
out
mov
or
leave
dec
add
repnz
es
lea
jbe
mov
xchg
clc
push
out
mov
leave
cwtl
xor
mov
push
push
aaa
cmp
jo
add
push
out
andb
push
add
jo
in
or
subb
pop
cmp
push
shrb
nop
push
fwait
or
or
popa
jne
lahf
shll
sub
sub
xor
mov
in
and
sub
mov
es
mov
adc
mov
call
push
and
xchg
lods
jle
sub
sarl
popa
adc
pop
jecxz
call
push
dec
sub
std
add
insb
jmp
add
lods
dec
cmp
in
leave
inc
pop
in
nop
add
lods
push
add
dec
pop
shrb
xchg
and
pop
and
and
xchg
xor
orl
xor
xchg
sbb
sahf
call
pop
test
rclb
clc
add
sbb
sub
jmp
fsubs
insb
xchg
push
out
imul
call
add
xchg
inc
jge
adc
inc
in
jecxz
add
sbbl
inc
hlt
and
nop
pop
push
push
movsb
and
add
xchg
fwait
and
mov
test
inc
mov
inc
into
cmp
pop
aam
fiadds
jecxz
pop
jge
add
or
xchg
scas
xor
lcall
cmp
les
inc
jmp
add
sbb
movsb
xor
jo
and
cmpsl
and
mov
repnz
add
mov
lcall
out
das
sub
cwtl
add
sub
cld
sub
sahf
imul
mov
add
push
adc
test
fwait
inc
sub
shr
bound
xor
add
xchg
add
ljmp
aas
adc
fstl
and
adc
mov
cmovb
jl
inc
ljmp
lods
rcrb
inc
mov
int
or
aam
pop
adc
pop
fs
adc
push
add
mov
subb
sub
sbb
rcl
test
mov
jae
jp
add
push
in
xorb
outsb
rorb
mov
sub
call
jae
loop
fwait
sub
outsb
add
or
xor
adc
inc
int3
add
int
mov
adc
pushf
pop
movsb
and
pop
sti
mov
mov
sbb
movsb
cltd
movsb
adc
test
jnp
cmp
imul
ret
popa
int3
sarl
gs
or
in
jbe
pop
and
pushl
int3
mov
lods
mov
or
jb
leave
adc
fs
jnp
or
push
pop
or
lds
enter
xor
adc
or
insl
mov
test
or
sub
out
jbe
mov
shll
add
mov
push
fwait
add
clc
cmpb
pop
xor
mov
cmp
add
icebp
jo
test
fnstsw
jnp
imul
test
arpl
and
es
les
jp
popf
nop
out
jae
push
adc
adc
add
icebp
bound
stc
sbb
push
add
rorl
jo
cmpb
dec
imul
sbb
insb
and
add
stos
adc
lods
addps
add
dec
xchg
cmp
out
adc
dec
mov
mov
ja
and
sbb
sahf
add
xor
ljmp
cltd
and
hlt
mov
pop
loope
insb
popa
and
jmp
mov
adc
sbb
pop
nop
xchg
inc
cmp
or
mov
pop
inc
stos
hlt
xchg
lock
add
gs
sahf
sbbl
subb
subl
out
mov
loopne
insl
pop
dec
arpl
cmp
push
mov
inc
xor
adcl
mov
jne
daa
mov
movsb
mov
test
icebp
sbb
cmp
add
lock
adc
sbb
sub
jl
sub
jl
or
and
lods
add
and
outsb
pop
push
pop
insb
sub
imul
ljmp
mov
js
mov
jmp
cmp
mov
addb
cmp
loop
or
xchg
out
or
and
dec
pop
jl
cli
pusha
push
dec
add
xor
dec
data16
push
out
mov
xorl
sbb
rolb
inc
pop
adc
gs
inc
push
fstpl
and
aas
mov
adc
and
test
nop
cmp
adc
adc
lods
jne
sub
xor
jnp
je
or
adc
adc
mov
mov
mov
xchg
bound
popa
call
aam
or
xor
sbb
cwtl
cwtl
and
ret
adc
call
push
inc
sbb
and
xchg
fldl
add
xor
sbb
das
call
push
stos
push
fistl
inc
rolb
sbbl
dec
or
xchg
cmc
push
pop
mov
in
invlpg
and
mov
cmp
sbb
sub
ljmp
cmp
call
lods
add
or
mov
outsl
stos
or
dec
out
jnp
lock
test
adc
jl
or
shl
aaa
mov
jle
jno
adc
sbb
inc
in
std
neg
add
cmp
movsb
enter
or
or
xchg
in
mov
sbb
mov
fadds
out
and
add
add
jle
out
nop
adc
xlat
or
insb
adc
add
jns
jae
mov
add
and
xchg
hlt
in
cmp
sub
mov
fwait
orb
or
in
sub
and
in
roll
adc
cs
and
sub
mov
jb
push
cmpb
add
cmc
push
test
dec
jp
dec
rclb
repnz
adc
cwtl
xlat
pop
mov
sbb
push
out
push
xchg
mov
push
test
pop
cmc
mov
bound
xor
repnz
push
dec
pop
loope
or
inc
insl
outsl
push
xor
loopne
xor
jp
sub
out
insl
bound
cs
xorb
sub
xchg
test
xor
dec
mov
adc
out
nop
cmp
pop
jo
bound
add
outsl
shlb
xchg
pop
cltd
jl
out
fcoml
jg
sarl
outsb
pop
rolb
sub
dec
jo
and
xchg
and
sbb
popa
xor
test
cmp
test
aad
iret
stos
push
mov
pop
xchg
cmp
xchg
sbb
std
inc
add
push
call
sub
dec
sahf
add
imul
and
pop
cmp
sub
hlt
cld
inc
adc
mov
pop
and
or
popa
jp
sahf
add
push
call
push
out
movsl
dec
add
orps
and
andl
inc
les
daa
int3
inc
mov
outsb
rcrl
jl
call
add
dec
smsw
push
ss
outsl
in
sub
sub
sahf
inc
push
mov
dec
stos
mov
idiv
mov
es
pop
add
fadds
xor
fidivl
mov
dec
push
in
mov
inc
dec
push
subb
popf
jmp
popa
fwait
xor
mov
lock
sbb
dec
mov
shlb
xor
jl
jo
popf
inc
adc
mov
in
sbb
push
daa
push
pusha
pop
cltd
jg
outsl
pop
inc
fwait
je
jns
cmp
dec
jne
jns
add
repz
sbb
mov
mov
xlat
pop
repnz
aas
add
movsl
int
add
sahf
inc
mov
pusha
add
pop
xor
jmp
dec
dec
sbbl
repnz
in
or
adc
rclb
lock
cmpsl
arpl
cmp
in
int
lret
sub
fmul
cwtl
pop
add
dec
jae
or
popf
push
adc
outsb
pop
push
sub
adc
xchg
call
lahf
lcall
push
add
outsb
aad
adc
mov
mov
pop
jne
adc
or
fisttpll
imul
mov
add
addr16
sub
mov
das
add
xor
rorl
ja
dec
jl
in
mov
popa
jl
sbb
xchg
push
and
add
into
ljmp
call
or
fldl
pop
and
and
loopne
cmpb
pop
popa
fwait
loope
hlt
popa
call
test
or
adc
out
xor
jns
out
stos
mov
dec
add
sub
mov
and
test
or
dec
sbb
adc
jne
add
dec
scas
roll
sbb
jae
inc
cwtl
adc
jg
adc
test
je
test
orb
fbld
xchg
cs
fs
add
imul
xor
sbb
les
jmp
push
test
ljmp
leave
movsl
test
std
cld
cli
and
jge
add
inc
jo
scas
dec
pusha
cmp
shrl
mov
jg
or
sub
js
sbb
mov
add
add
mov
out
ds
jne
fsubr
jg
pop
orb
and
ret
loope
push
fstl
popa
out
inc
mov
mov
cmp
stos
cmpb
adc
imul
cmpsb
jns
std
push
sbb
movsb
int
and
aam
push
xchg
or
push
les
aaa
loopne
sub
jnp
mov
cmp
cmp
adc
std
sbbl
xchg
or
inc
addr16
jge
loopne
xchg
idivb
int3
daa
loop
cld
test
in
add
cmp
int
lods
in
mov
test
inc
mov
jp
or
shlb
lock
fs
jecxz
add
adc
jns
xchg
pop
pushf
flds
fcomp
pop
adcl
sub
mov
xchg
loope
or
incl
adc
and
into
clc
popw
out
loope
pop
lret
out
push
xchg
or
clc
cmp
inc
imul
fsubr
fdivrl
sahf
push
add
pop
roll
iret
add
jnp
xchg
push
ret
pop
adc
jg
sub
subl
mov
loopne
add
and
cld
das
leave
add
mov
dec
sbb
scas
in
and
mov
and
xor
inc
adc
add
lahf
push
imul
xchg
xchg
pop
insl
fmuls
test
push
jge
pop
pop
cld
loop
mov
mov
lret
jmp
repz
dec
sub
lcall
xchg
nop
test
add
cmpsb
testb
test
mov
add
icebp
loop
insl
fisubl
sbb
stos
incb
push
add
sub
rcl
hlt
jno
and
idivl
outsb
fstpl
fiaddl
scas
test
mov
aad
add
jl
mov
dec
or
push
xchg
shrb
mov
jg
jne
insb
xchg
push
pop
lcall
or
jo
adc
add
lahf
cltd
scas
pop
data16
dec
pop
dec
into
add
and
jo
insb
bound
mov
shlb
mov
jb
xor
sbb
xchg
adc
cmp
icebp
popf
pop
enter
cmc
inc
or
jbe
sahf
test
sub
call
pusha
jl
and
add
pop
cld
pop
fadd
nop
xchg
xor
daa
pop
out
sub
nop
loopne
rclb
push
out
smsw
mov
dec
inc
rolb
mov
mov
add
repnz
rol
pop
pop
js
inc
lock
mov
add
adc
add
rorl
insl
add
pop
fmull
xor
les
sub
dec
mov
pop
div
add
dec
cmp
les
daa
nop
aam
lahf
subb
mov
addb
mov
push
dec
inc
pusha
inc
movsb
xorb
insb
aad
dec
jl
sub
mov
lds
jge
push
add
fists
out
lods
sub
fadd
push
stos
movsb
sbb
fistps
mov
jmp
mov
popf
aam
and
sub
xchg
sbb
pop
inc
inc
push
mov
add
jns
add
adc
cmpsb
or
js
push
arpl
loop
sub
push
sub
push
fs
and
outsl
inc
mov
mov
xor
sbb
mov
lock
adc
push
jno
insl
sbb
jle
xor
out
mov
add
mov
and
adc
or
jecxz
lahf
add
inc
push
and
add
mov
scas
jno
xchg
je
lcall
or
mov
xor
adc
xor
mov
loope
std
js
and
sub
push
fs
inc
pop
and
mov
notl
push
push
jl
jno
adc
xchg
fadds
pop
pop
add
fadds
lea
cltd
loop
movsb
imul
pop
outsb
push
mov
and
sub
pop
cltd
in
or
adc
push
test
add
popf
dec
pushf
pop
and
mov
cltd
lock
out
push
and
sbb
mov
lods
test
fsubs
dec
mov
rcl
or
arpl
jecxz
leave
mov
adc
inc
in
xlat
scas
add
into
push
jmp
add
jg
mov
mov
mov
cmp
ret
sbb
test
or
xor
cmp
pop
add
sub
jbe
and
pop
addr16
cwtl
mov
add
ljmp
cld
data16
in
test
lods
sbb
loope
ss
mov
dec
aam
sarb
push
pop
add
lahf
jp
js
push
repnz
and
pop
jnp
or
adc
sbb
mov
nop
mov
popa
inc
sti
movsb
dec
push
xchg
add
mov
sub
les
cmp
lcall
insl
add
or
or
add
push
mov
lock
push
xor
aam
mov
xor
dec
fnsave
jno
movsb
popa
adc
lock
loopne
mov
push
jns
xor
outsl
testl
cmp
pop
push
add
jno
ret
popa
test
je
or
notb
ljmp
cmp
out
gs
idivl
iret
cmp
push
pop
cmp
lods
adc
sub
add
jecxz
popa
loop
push
mov
ljmp
lods
add
sbb
mov
inc
cmp
mov
add
call
loopne
sbb
js
or
jecxz
pop
icebp
sbb
xor
cmp
or
cltd
movsl
jbe
cmp
rolb
jge
lock
adc
sbb
mov
enter
cwtl
ds
push
je
int3
add
fnsave
dec
fisubs
push
mov
and
sub
data16
push
cltd
or
mov
lock
pop
insl
outsl
sub
dec
xchg
push
xchg
add
out
mul
incl
jecxz
mov
cmpb
mov
push
xchg
sub
rcl
cs
dec
call
ja
cmp
push
add
loope
sar
cmp
imul
add
test
cld
cmpsl
mov
mov
mov
cwtl
inc
pop
add
test
mov
jo
add
pop
imul
movsb
cmpsl
add
push
fidivl
inc
movl
add
xor
and
subl
dec
cmpsb
dec
sub
add
inc
push
test
enter
dec
xor
out
negl
mov
cld
add
imul
lret
xchg
inc
inc
arpl
xor
mov
cmpsl
pop
ja
sbb
leave
jmp
mov
int3
inc
pop
jecxz
jge
punpcklwd
or
test
adc
add
adcb
lcall
pop
pop
cmp
imul
dec
add
shlb
int
cmp
mov
sarb
das
mov
sar
cmp
mov
mov
sub
popf
adc
pusha
das
sbb
sub
fucomi
dec
js
test
loop
cmp
adc
add
fistps
jmp
cltd
popa
or
inc
out
jg
add
pusha
mov
dec
addl
mov
mov
je
hlt
inc
mov
add
aas
scas
into
les
or
dec
mov
add
hlt
push
ret
add
inc
repnz
sbb
push
jmp
mov
push
mov
mov
scas
movsl
repnz
adc
int3
inc
cmp
in
jns
dec
dec
add
push
inc
les
jo
sbb
bswap
fs
add
and
das
and
aas
sub
or
jb
popa
call
cwtl
and
jle
pop
cmp
pop
add
ret
cltd
sub
insb
push
sbb
pop
inc
and
lock
aam
sub
xchg
push
mov
mov
and
jno
sub
jmp
add
popa
ret
add
pop
cmp
jae
cmp
lret
jne
test
nop
push
jp
cmpsl
adc
cmp
add
jb
mov
pop
pop
jae
add
imul
bound
or
in
sbb
vmread
jp
push
loope
add
cmp
dec
jo
dec
inc
aaa
les
aam
mov
loope
inc
sahf
rcrb
sbb
lock
push
adc
inc
pop
and
outsb
sti
add
cmpsb
mov
arpl
and
mov
sbb
lret
push
cmpb
es
in
inc
sub
shr
icebp
lret
cmp
bound
and
cmp
pop
scas
arpl
mov
insl
clc
inc
sbb
mov
xor
popf
negb
mov
sub
rcll
push
pushf
add
movsl
mov
push
lahf
pop
sarl
mov
sub
das
inc
xor
arpl
add
or
and
cmp
add
and
sahf
inc
mov
or
and
rcrl
cld
mov
scas
sahf
jbe
cmp
sbb
and
lods
std
add
jae
sbb
cmp
in
pop
pop
or
lret
repnz
jo
push
or
imul
mov
sbb
push
test
sbb
bound
pop
rclb
out
popa
sub
mov
pop
sub
test
in
push
adc
das
shl
sbb
sub
fcoms
outsb
dec
cmp
mov
sbbb
adc
andb
adc
add
sbb
dec
cltd
loopne
and
push
aam
shrb
pop
ret
cmp
xor
popl
and
std
add
ds
mov
pop
mov
mov
rorb
mov
movsb
stos
xchg
arpl
shl
xchg
popf
push
les
incl
push
fisubs
pop
add
mov
jl
mov
jae
pop
fisttps
scas
sub
addl
orb
mov
pusha
test
inc
dec
pop
es
ja
inc
mov
add
sbb
lock
adc
insb
mov
lock
add
jae
pop
add
push
push
ret
jne
clc
push
xchg
arpl
pop
xor
paddw
or
pop
hlt
add
mov
xchg
cmp
push
inc
test
and
out
es
je
jae
push
das
sahf
mov
push
adc
hlt
rorb
sub
subl
js
in
lahf
dec
dec
push
add
sbb
xchg
jl
stc
add
inc
pop
xor
out
scas
lcall
or
lock
call
xchg
mov
arpl
in
inc
popl
mov
cmpsl
sarb
movsl
push
push
push
addb
testl
inc
sub
pop
push
cwtl
fcoms
js
sahf
mov
xor
or
subb
test
clc
push
fnstsw
test
add
call
fists
inc
fdivrs
sub
insb
wbinvd
ljmp
iret
sub
faddl
or
imul
push
mov
xor
out
add
nop
pushf
lds
inc
pop
ljmp
mov
pop
sysexit
push
push
cmpsb
and
jae
add
in
test
adc
add
insb
xlat
pop
scas
xchg
push
orb
comiss
popa
into
jle
sbb
stc
lcall
adc
in
out
sub
push
movsb
xchg
pop
sbb
inc
add
outsl
jb
ret
xchg
pop
dec
cli
jecxz
fcoml
push
insb
sub
mov
push
pop
add
test
lods
addb
inc
sub
mov
sbb
cltd
es
mov
mov
add
xchg
in
mov
pop
loop
pushf
add
xor
mov
arpl
add
pop
iret
jecxz
mov
test
mov
mov
roll
mov
dec
fcmovbe
sub
xor
aam
cli
mov
pop
sbb
jno
lea
incl
ljmp
xchg
push
in
iret
scas
adc
mov
sbb
push
mov
sbb
cmpsl
add
push
lgs
ljmp
pop
jmp
dec
sbb
add
mov
out
into
push
pop
lods
insl
imul
outsb
sbb
xchg
and
mov
insl
add
mov
bound
mov
pusha
sbb
jno
push
add
cwtl
cmp
adc
out
adc
and
jmp
sub
outsl
sbb
xchg
pop
mov
dec
add
and
divb
addl
mov
mov
pushf
lcall
or
pop
rol
hlt
loopne
lret
sbb
mov
mov
adc
and
cmp
xchg
nop
sub
inc
mov
adc
and
add
mov
cmp
inc
fadd
xchg
rorl
ss
push
icebp
adc
jae
inc
add
pop
jecxz
add
imul
aam
jns
pop
push
push
imul
movsb
outsb
sub
movsl
inc
roll
mov
iret
pop
xchg
and
bound
jmp
adc
sarl
push
rclb
sub
stc
clc
aas
add
into
cli
xchg
xor
mov
add
mov
adcb
daa
cmp
dec
push
xor
dec
ljmp
mov
addl
and
add
lods
lds
adc
aas
mov
add
cmp
lea
or
cmp
adc
les
mov
or
lock
ds
pop
add
mov
mov
mov
dec
out
or
fwait
xor
cmp
mov
push
test
test
cld
cmp
mov
jo
clc
xor
mov
lcall
adc
mov
ss
adc
add
xchg
cmp
cmp
xor
pop
nop
and
sarb
add
into
aaa
ret
jnp
pop
jae
add
xor
pusha
jns
std
imul
inc
popf
andl
in
inc
mov
mov
add
std
rol
out
shrb
inc
test
jne
lds
and
add
lea
or
jg
sub
jns
jne
andb
test
xor
test
cltd
cli
pop
push
cmp
pusha
inc
and
adc
adc
imul
shll
test
push
add
or
imul
inc
mov
orb
data16
xchg
lret
aad
loopne
fdivrs
xchg
mov
jne
or
pcmpeqw
jns
dec
dec
test
les
pop
xor
es
mov
and
dec
test
xchg
mov
or
je
pop
adc
ret
mov
xchg
xor
hlt
sti
das
iret
mov
out
aam
sub
sub
les
movq
or
or
ret
xor
xchg
add
ret
add
loopne
push
mov
mov
stos
push
adc
leave
push
popa
jbe
sub
cwtl
lock
stc
mov
bound
push
movsb
dec
add
jo
ret
cli
cmp
add
lds
add
inc
mov
sbb
cmp
dec
inc
pop
mov
xor
es
test
rcr
lcall
enter
cmp
lahf
cmpsb
ret
adc
out
lods
xchg
mov
lea
movb
imul
push
mov
cmpsl
mov
mov
popa
add
iret
loop
subl
jle
add
test
addr16
and
arpl
cltd
popa
jb
xor
ret
dec
test
cli
mov
pop
mov
insl
or
rolb
add
cmp
rorl
aam
inc
fwait
mov
or
mov
stc
adc
mov
rclb
and
aas
xor
cmp
ja
andps
fcomip
les
rcrb
adc
es
lds
xchg
xchg
sbb
shlb
add
push
aas
fcomps
pop
mov
roll
aaa
mov
stos
fildll
add
dec
sbb
pop
ret
pop
sbbb
imul
xchg
add
mov
pop
sti
xor
mov
xor
pop
sbb
adc
pop
push
push
jl
add
int
rclb
and
cli
mov
movsl
hlt
inc
push
pop
sbb
fnstsw
xchg
sti
add
add
pusha
push
js
mov
xor
fwait
std
sub
jne
icebp
stos
mov
jge
or
push
filds
pop
xchg
mov
negb
push
push
and
xchg
mov
fs
test
add
adc
movb
shrb
cmp
test
clc
js
popa
imul
mov
add
stc
mov
in
lret
xor
addr16
and
out
mov
push
cmp
mov
cmc
and
pop
es
popa
cwtl
rol
mov
inc
jbe
insb
xor
jb
jnp
add
iret
mov
aaa
bound
push
mov
add
push
dec
mov
xchg
popa
cmpsb
call
dec
mov
push
sub
out
jae
cmpsl
sbb
repz
sub
and
in
jae
jnp
xchg
add
out
pop
iret
inc
xor
or
loope
xchg
sbb
adc
add
or
fwait
mov
stos
movsb
repnz
test
aam
xor
push
xor
push
push
cltd
cld
add
adcl
add
nop
clc
cli
sbb
push
push
jnp
add
fsubr
sahf
push
adc
js
push
mov
imul
decl
test
cmpl
sub
inc
cmp
test
mov
movsb
inc
aaa
adc
inc
fs
push
push
pusha
cwtl
sbb
mov
mov
add
rcr
adc
xchg
daa
cmp
mov
jle
add
fildll
shlb
adc
add
and
cmp
xchg
lock
rcrb
ret
in
cmp
loopne
es
xchg
or
fmuls
add
int3
mov
stos
sbbl
adcl
test
push
add
push
or
cmp
or
or
adc
inc
push
sub
pop
pop
dec
sub
lret
push
lds
loopne
popf
sub
mov
add
ds
or
cmp
enter
add
cmp
movsb
adc
add
shll
push
loopne
mov
mov
je
sub
or
add
jle
or
stos
push
push
loop
std
xor
and
popf
mov
cmp
add
xchg
jl
inc
adc
xor
repnz
mov
mov
or
add
fldt
adc
sbb
xor
aam
add
fcmovbe
sbb
mov
xor
sub
push
neg
or
lods
push
mov
movsl
sub
add
or
es
insl
sub
mov
stc
xchg
rolb
sub
push
mov
mov
push
icebp
rol
fs
mov
dec
dec
sbbb
ljmp
sub
and
xchg
lods
loopne
xor
test
fnstenv
inc
je
add
pop
add
push
or
rcrl
mov
or
pop
sbb
daa
sahf
ss
add
xchg
pop
lds
dec
xchg
add
mov
aam
fdiv
std
mov
xchg
test
out
push
je
adcb
pop
fucom
rdpmc
mov
frstpm(287
les
leave
test
push
mov
add
sarb
inc
xchg
mov
cmp
pop
jbe
add
sarb
cmp
jl
xor
mov
adc
call
mov
dec
jb
js
push
cwtl
add
ljmp
es
in
add
mov
mov
or
push
mov
xor
mov
fnsetpm(287
int
outsl
test
lret
bndldx
hlt
lea
cmp
adcl
cmp
dec
push
add
and
inc
mov
and
jl
sub
mov
adc
rolb
adc
imull
add
xchg
adc
dec
jne
adc
popa
inc
adc
pop
mov
sbb
jge
xchg
movsl
pusha
xchg
aam
enter
jl
aad
mov
cmp
test
dec
add
daa
lods
sarl
lcall
repz
stos
sbb
adc
cmpsb
neg
mov
push
inc
sbb
and
cmpsl
das
push
aam
add
stc
fdivrs
rolb
push
pop
pop
pushf
ficoml
add
in
mov
xchg
adc
inc
movsb
pop
popa
sbb
pop
inc
inc
add
xchg
dec
and
cmp
fstps
incl
pop
test
jge
in
add
addr16
bnd
add
adc
add
scas
rolb
add
sbb
adc
ret
roll
mov
ret
jne
movsb
add
or
jo
sbb
icebp
cmpsb
leave
ret
popf
stos
cmp
dec
push
stc
adc
inc
icebp
pop
xor
enter
and
xor
cwtl
adc
mov
fs
in
inc
mov
int3
orb
xlat
rcrb
shll
rcr
imul
pop
xor
and
in
mov
and
test
iret
in
and
inc
mov
out
xchg
lea
push
mov
jns
xchg
std
hlt
push
ret
movsb
mov
cmp
sbb
mov
nop
mov
xor
and
fwait
cwtl
mov
push
pop
nop
daa
cmpsl
mov
mov
scas
sub
loope
push
sbb
les
adc
lds
pop
int3
add
aam
sbb
sub
mov
ljmp
mov
add
pop
push
or
addb
test
xchg
push
xor
outsl
xchg
loopne
add
ret
xchg
addl
push
jle
or
int3
test
inc
xor
push
sbb
xchg
cltd
cld
andb
stos
jp
mov
movsb
adc
inc
dec
push
iret
mov
pop
jns
cmpsl
pop
insb
mov
js
add
push
xor
jp
push
std
shlb
lock
or
in
add
sbb
pop
xor
xor
mov
mov
fwait
cmp
hlt
mov
inc
fsubs
lods
adc
andb
xchg
push
mov
inc
adc
mov
inc
cmc
sarl
mov
jle
inc
leave
in
jne
cmp
lret
sbb
mov
adc
fs
pop
jbe
subl
add
rolb
xchg
test
inc
outsl
mov
std
cmc
mov
mov
pop
je
lds
mov
adc
test
and
popf
adc
je
jno
bound
pop
enter
cli
fs
std
adc
aam
enter
mov
lahf
faddl
xchg
mov
out
add
mov
xchg
pop
into
cld
jg
pop
cmpsl
push
adc
jl
daa
mov
pop
dec
shl
out
add
nop
push
pop
sbb
imul
orb
and
add
shlb
cmpsl
mov
in
dec
jno
loop
xor
and
dec
ret
xchg
mov
or
outsl
jle
adc
xchg
mov
push
mov
cmp
cwtl
xchg
sbb
sub
mov
out
add
or
push
xchg
xor
cmp
fisubrs
push
movsl
mov
add
ss
std
rorl
adc
enter
mov
add
addl
adc
bswap
popa
inc
imul
add
loopne
sub
xor
xor
popa
inc
in
add
iret
adc
bound
pop
aad
mov
pop
adc
cmp
clc
loopne
fldenv
cwtl
pop
add
or
dec
mov
or
pushf
lods
jmp
cltd
mov
and
sbb
xchg
add
jle
inc
cmp
add
dec
loop
add
test
inc
mov
add
test
out
popf
mov
setb
add
adc
fmuls
xor
and
pop
pop
push
jns
inc
roll
test
pop
dec
sub
xor
nop
push
jo
add
push
xchg
pop
rcrl
add
fcoml
or
sub
inc
movsl
add
cs
pop
and
push
pop
lods
sbb
cltd
adc
ds
mov
add
rcrb
inc
mov
in
jle
loopne
mov
loopne
or
xor
fstl
jae
pushf
push
add
and
lock
sar
add
and
add
inc
jb
mov
add
add
xor
mov
cmpb
mov
in
fcomps
adc
inc
hlt
add
aam
mov
add
or
xchg
ds
adc
mov
shl
js
out
sub
loope
mov
mov
mov
fsub
fs
aas
cmpsb
clc
add
dec
or
sbb
add
mov
or
inc
pop
aaa
add
dec
mov
inc
iret
mov
cmp
jns
js
shl
sbb
and
lods
add
inc
loope
ret
cs
pusha
pop
pop
fs
in
add
mov
or
je
or
xchg
or
insb
and
jae
add
gs
stos
lds
iret
or
cmpsb
mov
add
sahf
ds
or
xchg
inc
aam
sub
mov
cmp
xchg
fldt
jb
adc
subb
pusha
scas
dec
mov
sbb
gs
add
jne
mov
aaa
add
fidivs
jb
add
push
inc
sub
cmp
ficomps
sbb
lods
divl
push
xchg
mov
mov
add
sbb
out
pop
mov
jmp
aad
lds
std
pop
jle
rcll
push
and
repz
cmp
mov
inc
je
mov
mov
mov
push
add
jbe
push
pusha
stos
mov
xchg
fwait
ret
and
insl
push
xchg
sub
fsubrl
pop
push
in
subl
cmp
test
jne
jnp
add
and
push
mov
adc
rclb
mov
xchg
add
cmpsb
push
std
xor
mov
rorb
pop
and
pop
cmpxchg
pusha
clc
inc
roll
out
pop
lret
xchg
hlt
shr
mov
aad
test
sub
lds
orl
inc
inc
loope
aad
ret
fmull
pusha
xchg
xor
and
add
je
fldenv
rcrb
xchg
out
jne
and
mov
xor
dec
push
flds
out
jnp
imul
stos
adc
add
xlat
icebp
mov
jecxz
bound
loop
add
push
jo
pushf
dec
repnz
dec
adc
in
enter
mov
out
pop
das
jb,pn
jl
pop
fstpl
or
mov
add
andb
jle
sbb
inc
mov
sub
fchs
add
testb
stc
mov
push
lods
sbb
xchg
js
popa
dec
in
sub
pop
sub
xchg
cmp
dec
add
adc
dec
xlat
and
push
cmp
add
dec
push
je
add
mov
std
shlb
mov
fnstcw
or
or
sub
mov
ret
hlt
mov
mov
add
pop
sub
cmp
or
sbb
ds
push
loopne
mov
insb
shrb
cmp
lock
mov
and
sbb
fsubl
mov
xor
lahf
xchg
or
ja
faddl
mov
pop
push
in
test
sbb
push
std
loopne
pop
pop
pusha
pop
mov
cld
cmp
xlat
dec
dec
cmpsb
lea
int
mov
push
cwtl
mov
mov
and
or
cmp
movsl
repz
sub
inc
insb
pop
lahf
pushf
add
or
daa
shll
aaa
xor
mov
inc
mov
adc
xor
outsb
push
mov
testl
aas
pop
inc
js
jnp
add
lea
sti
lock
movsb
add
int3
imul
xchg
addl
xor
add
adc
dec
cmp
add
je
inc
sub
mov
test
adc
enter
daa
adc
gs
jge
add
ss
int
scas
pusha
loopne
in
out
and
mov
sarb
loope
jb
sub
mov
cmp
arpl
push
gs
shrb
add
les
push
inc
cmc
test
iret
dec
xor
push
add
ds
add
iret
int3
adc
rolb
das
mov
ljmp
xor
rcl
pop
cmp
adc
add
mov
rolb
jecxz
sbb
in
scas
sbb
daa
loopne
sbb
sbb
sub
nop
enter
xchg
xor
popa
lret
scas
das
orb
inc
jmp
clc
and
ljmp
xchg
nop
repnz
fistps
popf
loopne
add
fstps
repz
arpl
int3
sbb
sbb
test
bound
mov
jno
lcall
cmp
push
sub
and
pop
mov
popf
enter
jp
repnz
in
inc
inc
std
inc
lods
testb
jns
fimull
fwait
xchg
jb
mov
mov
add
cmp
lret
ficoms
xchg
or
add
roll
add
cwtl
stc
or
fs
dec
cmp
jg
push
addr16
insb
and
cmc
push
int
repz
nop
or
sbb
sub
mov
fwait
test
inc
loop
enter
xor
xor
fmull
push
cmc
add
mov
shrd
js
sbb
cmp
adc
cmp
add
std
aad
ret
mov
xorb
test
push
dec
loop
sbb
mov
push
and
inc
sbb
hlt
clc
add
subl
insb
les
jb
add
xchg
cmp
shlb
pop
pusha
mov
aad
adc
pop
inc
mov
imul
cwtl
and
xchg
adc
lods
or
mov
pop
mov
mov
inc
mov
push
test
mov
jg
xchg
add
add
xor
sub
fst
add
lock
add
inc
fs
cli
cmpps
insb
add
sbb
add
shr
loope
divl
sbb
push
outsl
pop
ret
inc
mov
add
fwait
cld
pop
push
push
cmp
jecxz
jne
add
pop
aad
jo
inc
xchg
cmp
mov
inc
nop
adc
int
add
inc
mov
or
push
add
sub
adc
adc
adc
xchg
mov
lret
add
fcoml
loopne
dec
daa
decb
or
outsb
xchg
cmp
clc
aaa
sahf
add
inc
inc
fs
mov
add
add
mov
daa
mov
lea
shlb
orl
mov
sub
mov
add
dec
push
sub
imul
inc
sbb
add
cs
pop
add
or
xchg
xlat
mov
lock
repz
and
pop
scas
shlb
loopne
pushf
jecxz
ret
push
inc
aaa
add
jo
rcrb
pop
inc
movsb
movsb
arpl
push
loopne
or
cs
mov
pop
shl
mov
xchg
add
push
add
xor
add
cmp
mov
inc
fs
inc
xchg
dec
add
cmp
ja
test
and
push
pop
in
dec
popf
loopne
cltd
pop
es
add
xchg
or
lret
icebp
fcom
mov
je
mov
ljmp
mov
add
mov
or
mov
cmp
push
adcb
jl
cmp
pop
out
xor
jb
mov
push
adc
les
inc
add
pop
cltd
insl
dec
add
push
add
sbb
add
je
or
add
pop
popf
les
and
add
xchg
or
or
pop
push
and
fidivs
jne
push
lahf
jge
add
daa
testl
rorb
test
ljmp
inc
mov
add
popf
ja
stos
adc
fs
and
shlb
ficoms
popf
addb
add
pop
jge
sbb
jl
cs
div
repz
les
or
mov
adc
enter
or
add
scas
inc
jno
popa
and
add
cld
mov
push
and
and
or
js
outsb
iret
enter
mov
lret
popf
add
insb
sahf
add
aam
rclb
xor
aaa
mov
ljmp
insl
xchg
shrb
cld
lea
inc
test
or
pop
add
xchg
rcr
enter
enter
fs
add
out
add
xor
enter
xchg
loope
lea
inc
cmp
cmp
xchg
cmpsb
les
cltd
inc
add
push
mov
jecxz
sbb
lock
sub
int
shrb
push
jmp
inc
push
imul
xor
add
insl
cmp
add
or
lods
adc
sub
adc
test
fbstp
bound
outsl
movsb
sahf
add
call
and
pushf
push
xchg
adc
cli
mov
cmp
push
mov
popa
fisubl
cmp
in
repz
test
and
aam
sbb
mov
sub
sbb
nop
notl
out
xchg
xor
cmp
fsubl
sub
lahf
test
sbb
sahf
mov
lods
psubusw
lcall
inc
out
push
add
divb
popa
sub
test
mov
sub
add
mov
daa
adc
clc
inc
push
adc
movsb
pop
pause
fwait
rcll
pop
test
fisubrl
cmp
sahf
or
push
mov
mov
add
repz
aad
xchg
sarl
or
gs
adc
xchg
sarb
xchg
roll
push
xchg
xchg
in
out
stos
add
jg
lret
add
enter
xor
adc
in
and
mov
cli
ljmp
in
loop
add
loope
push
push
inc
xchg
pop
and
in
xchg
dec
sub
sarb
inc
jmp
aas
push
sub
xchg
cmp
add
outsl
shrb
xchg
in
cwtl
mov
or
lret
arpl
imul
cmp
push
add
dec
and
ds
push
mov
and
aas
loop
add
stc
sub
lret
mov
rclb
jb
or
add
dec
lret
pop
bound
jo
jl
in
or
jl
add
test
add
dec
or
push
jecxz
bound
sub
test
pop
lcall
jae
neg
popf
jmp
sbb
or
fistps
loop
cmp
mov
movsl
adc
inc
dec
or
mov
leave
adc
ljmp
adc
sbb
jecxz
sub
lcall
shrb
xor
mov
cmp
cmpb
cmc
insb
pop
jmp
dec
roll
push
add
or
pop
inc
insb
jle
pusha
add
insb
xor
adc
mov
inc
cmp
lea
insb
loopne
fistpl
jg
ds
add
and
leave
mov
add
push
mov
push
sbb
add
inc
cwtl
cmpsl
rclb
adc
add
lret
out
mov
stos
pop
testb
pop
in
aaa
and
lds
sbb
dec
cwtl
inc
mov
xchg
inc
xor
fwait
sbb
or
pop
incb
dec
mov
pop
ficoml
scas
nop
push
adc
mov
or
int
pop
jo
bound
mov
adcb
call
add
dec
cwtl
mov
mov
aaa
push
repz
lcall
dec
or
fs
add
lcall
add
jecxz
test
cmc
aad
int
scas
es
mov
push
xor
mov
mov
jbe
aas
and
pop
in
adc
lret
adc
loop
pop
out
mov
mov
cmp
lcall
xor
int3
dec
xchg
cmp
add
fpatan
out
add
lods
jo
jae
imul
inc
sbb
push
lds
fidivrs
jle
je
pop
add
xchg
scas
pop
pusha
shlb
add
and
pop
sub
push
add
hlt
and
add
mov
fprem
adc
mov
pop
push
sub
in
jo
push
movsb
in
add
mov
add
cwtl
stos
inc
xchg
inc
add
dec
mov
shrl
add
lcall
adc
push
aad
xchg
aam
push
add
and
test
adc
mov
and
sahf
add
adc
push
repnz
clc
inc
and
stos
std
cmp
jle
in
jmp
loopne
repz
add
stos
mov
lods
add
sbb
js
jge
fisubrs
stc
inc
out
mov
pop
movsb
inc
fs
aad
or
sub
fidivrs
js
stc
inc
adc
mov
movsb
lret
inc
incl
xchg
les
jmp
insb
loope
daa
adc
movsl
nop
les
inc
add
and
cmp
lcall
add
cltd
mov
fwait
dec
pop
hlt
and
in
lock
add
mov
in
sub
clc
pop
fsubrs
cmp
mov
lock
pop
jns
enter
movsb
push
inc
push
mov
nop
out
rcrb
xchg
mov
sbb
adc
xchg
cmp
fcmovu
sub
jo
cmp
pushf
and
xor
int
sub
shl
add
mov
movsl
mov
loopne
or
add
gs
jg
aas
pop
push
xchg
and
shlb
pusha
lret
movsb
enter
add
lds
xorb
in
adc
inc
dec
inc
test
mov
aas
out
push
out
push
mov
xor
inc
mov
aaa
pop
cltd
rcrb
scas
mov
jge
add
nop
cld
inc
mov
adc
repz
dec
adc
jp
xchg
dec
xor
xor
or
jnp
test
clc
add
adc
xchg
iret
cpuid
call
push
bound
lds
es
test
clc
adc
stos
cmpsb
mov
adc
nop
iret
dec
add
pop
pop
cmp
cwtl
xor
sub
insb
inc
cmp
push
mov
mov
push
xor
mov
ret
popw
insl
int3
scas
xchg
adc
popa
aaa
loopne
xor
add
xchg
pop
dec
ss
push
lcall
sbb
adc
cwtl
dec
adc
push
ss
mov
mov
lods
fnstsw
pushf
fdivs
adc
add
cwtl
mov
pop
xor
add
push
xchg
or
test
loopne
lock
sbb
xchg
es
xor
pop
insl
jbe
jo
fdivrs
or
add
std
mov
sub
add
pop
out
mov
mov
cmpsb
pusha
cwtl
in
movsl
pusha
loope
xchg
mov
decl
sub
nop
inc
lock
mov
adc
cmc
arpl
pop
pusha
cmpsb
lods
cmp
add
pop
fwait
arpl
push
loope
push
repnz
les
rcrl
lcall
hlt
xchg
div
and
pop
xchg
push
movsl
mov
test
push
mov
loop
push
mov
in
add
lods
out
jg
fldenv
or
add
xchg
push
fs
cmp
mov
push
inc
sbb
or
ret
pop
jo
pop
std
test
xor
mov
das
rclb
add
insb
dec
add
or
pop
push
insl
pop
cmp
out
xor
sbbb
test
xor
scas
fwait
cwtl
inc
outsl
jmp
xchg
sbb
or
js
loopne
scas
mov
inc
push
sbb
mov
out
popa
dec
mov
adc
loope
dec
and
add
test
jnp
push
inc
imul
add
push
lret
lret
addr16
pop
sub
ret
int3
pop
add
sahf
or
lahf
daa
loopne
mov
loope
inc
ja
mov
in
aaa
mov
mov
hlt
mov
or
loop
cmpsb
inc
pop
dec
push
loopne
sarb
mov
enter
mov
rorl
loopne
sahf
jno
gs
int3
cltd
sub
mov
pop
push
dec
xor
daa
push
fistpll
shlb
push
and
pop
add
cmp
and
enter
add
jae
inc
xor
sahf
nop
dec
jo
sbb
aaa
or
std
lret
fdivs
lahf
sbb
xor
add
mov
adc
mov
int
xchg
icebp
imul
pop
push
les
loopne
push
mov
aaa
add
pushf
leave
xor
xor
pushf
add
push
enter
frstor
dec
pop
nop
int3
ret
adc
pop
inc
mov
cmpsb
outsb
pop
xchg
hlt
cli
nop
sub
or
cwtl
push
pusha
popa
lods
outsl
nop
jnp
add
lock
adc
pop
enter
or
icebp
stos
dec
mov
lcall
scas
ficomps
mov
subb
xchg
cs
inc
mov
jb
jne
ja
decl
mov
and
add
sbb
cmpb
stc
testb
ret
shlb
sbb
pop
fdivl
aaa
mov
cs
add
fcompl
stc
sbb
ret
sub
mov
bound
inc
clc
dec
sub
rcl
in
mov
mov
jne
fwait
pop
add
ficoms
in
ret
xchg
adc
xor
jo
loope
or
cli
outsl
add
jmp
ja
ret
clc
inc
add
shlb
pop
filds
sbb
lcall
ret
int3
fsub
pop
popf
and
loopne
in
push
aad
jno
repz
shll
insb
insl
mov
add
add
xor
lods
sub
les
sbb
push
mov
adc
cmp
lock
adc
jmp
adc
jbe
lds
sbb
ss
je
push
or
int3
xchg
imul
mov
add
imul
sbb
inc
jl
add
loop
int3
pusha
fs
inc
fists
out
daa
loope
rcll
inc
rcl
cwtl
sub
sub
loopne
cmp
les
mov
mov
mov
cmp
xchg
sub
xor
insb
fstl
mov
fwait
and
into
out
fdivs
cltd
sbb
inc
iret
jg
fsubl
push
push
cmp
shrl
fdivrs
xchg
hlt
cli
dec
pusha
insb
dec
movsl
inc
in
inc
xchg
sub
add
jl
scas
sub
add
and
cmc
jge
stos
es
add
pusha
cld
std
sub
aas
ja
test
shlb
dec
cmp
push
add
adc
sub
or
cld
jbe
inc
and
mov
add
adc
mov
push
testb
mov
push
pop
sahf
mov
inc
and
push
xor
cmc
mov
xchg
mov
adc
aam
fisttpl
dec
lret
shll
xchg
ret
pop
outsb
cmp
xchg
ds
mov
cli
adc
out
cld
adc
pop
aad
cmpsb
add
nop
rolb
push
lret
dec
add
cmp
inc
rclb
and
add
xchg
or
add
in
enter
pop
jbe
mov
pop
cmp
xchg
add
clc
pop
movsl
out
out
mov
sahf
aaa
xor
arpl
inc
jbe
sub
mov
add
push
shlb
cmp
mov
mov
inc
inc
mov
test
add
xorb
mov
xchg
xor
les
add
fimull
adc
jmp
jmp
lahf
nop
fs
push
push
xchg
push
push
rclb
add
aas
movsl
xor
dec
iret
cmc
shl
push
clc
mov
outsl
mov
bound
call
sub
mov
or
loopne
in
movsb
sub
sahf
jecxz
cli
mull
movsl
shlb
mov
pop
add
jmp
fildl
sub
cmp
pushf
call
inc
imul
mov
andb
or
adc
inc
js
addr16
sbb
xor
xchg
mov
pop
push
andb
sub
loope
add
lods
xor
cs
mov
movsb
in
mov
cmc
mov
and
xchg
leave
shlb
movsl
nop
pop
mov
rorl
mov
dec
mov
sub
fisubrs
orl
xor
subb
cmpsb
lock
push
or
xor
fidivs
adc
adc
test
add
call
pop
orb
inc
imul
ja
mov
out
jo
add
cmp
xor
push
adc
int
xor
adc
push
and
pop
cmc
dec
loopne
mov
icebp
pop
adc
add
xor
lahf
adc
outsb
dec
clc
cwtl
mov
lods
dec
inc
enter
mov
inc
sti
mov
imul
pop
sbb
push
rclb
mov
push
iret
push
mov
cmp
mov
push
dec
push
cmp
xchg
or
mov
inc
add
xchg
out
lock
jno
push
mov
jecxz
and
mov
imul
push
stos
lcall
daa
inc
xor
xchg
jl
lret
cmp
inc
mov
and
lea
shlb
jae
push
fbld
adc
inc
jmp
push
sbb
inc
lea
cmp
cmp
jae
call
maxps
and
aad
movsl
inc
ja
xor
loopne
pop
mov
mov
mov
pop
jecxz
cld
xor
inc
jg
mov
cmp
sbb
mov
outsb
and
add
daa
fsubr
dec
dec
mov
cmp
add
jo
test
lea
rorb
sbb
mov
push
call
scas
mov
mov
out
cmc
aas
fsubr
mov
push
mov
push
xchg
repz
js
popf
scas
push
mov
add
xor
mov
xchg
xor
arpl
pushf
dec
fidivrs
rol
inc
iret
loopne
and
daa
sub
inc
push
pop
add
xor
mov
add
icebp
adc
push
ret
and
test
inc
add
pop
out
or
xor
shl
adc
xor
xchg
pop
movsb
lock
xchg
ljmp
or
in
adcb
mov
push
dec
lcall
inc
xor
and
mov
aas
push
adc
inc
pop
movsl
inc
dec
xor
subb
lahf
stc
sbb
add
cmp
dec
loope
faddp
sbb
repnz
mov
inc
jp
adc
jmp
into
xchg
daa
fisubs
mov
adc
xchg
inc
add
addb
cmp
movsb
ret
xor
pop
push
incl
std
das
pop
fisttpll
dec
mov
in
movsb
or
xor
push
ss
roll
dec
nop
sar
cwtl
fs
cwtl
scas
sbb
sub
std
add
mov
add
stos
rcll
adc
mov
push
push
fistps
xor
sub
fdivrl
adc
loope
xor
mov
inc
in
inc
mov
lock
dec
ret
push
mov
dec
repz
mov
dec
xchg
dec
jp
dec
and
aas
mov
inc
add
sub
stc
popf
adc
mov
and
jecxz
icebp
repnz
pop
clc
mov
xor
or
push
loopne
jo
cmp
sub
mulb
ret
pop
orl
and
sub
xor
cmp
pop
js
push
into
sbb
xchg
inc
add
xor
xchg
loop
ficomps
fbld
add
jle
imul
jns
mov
add
push
bound
cmpsb
add
int3
lahf
out
add
adc
mov
cmp
adc
add
pop
movsb
negb
scas
shrb
fsubrl
outsb
mov
or
repz
jb
popf
int3
mov
lahf
pop
push
add
lea
ficoml
xchg
sbb
lahf
sub
fidivrs
jge,pn
sub
mov
xor
aad
iret
push
and
insb
rolb
aaa
inc
sbb
lret
xchg
rolb
cmc
rorb
dec
add
cmp
cld
mov
inc
pop
inc
int3
mov
inc
cmp
movlps
xor
inc
push
add
and
imul
pop
test
call
test
stos
jl
les
dec
add
ja
jno
aad
mov
add
cmpsl
jnp
cmp
nop
je
adc
mov
test
cltd
or
pushf
push
std
mov
add
mov
jnp
add
add
push
rorb
dec
mov
ds
inc
cmp
leave
sahf
push
lret
jne
and
and
or
dec
inc
dec
dec
nop
ret
push
rcrl
add
jp
icebp
arpl
xchg
add
aas
cltd
insb
jae
jle
inc
sbbl
ja
inc
dec
jl
xchg
adc
pusha
cmp
pop
stos
push
adc
in
cltd
es
mov
cmp
bound
test
xchg
pushf
xlat
push
leave
adc
mov
sub
shrb
push
aam
nop
gs
clc
shlb
inc
je
mov
mov
lods
mov
xor
shll
jnp
es
lock
push
add
rolb
mov
cmpsb
nop
adc
inc
inc
pop
cli
fbld
outsl
add
ret
sub
mov
nop
mov
add
int3
aas
xchg
pop
mov
cmp
and
pop
inc
dec
rclb
out
in
and
push
mov
add
cmp
or
hlt
jo
call
add
test
ficoml
add
mov
or
mov
or
dec
ss
mov
sub
xchg
cld
add
cmp
into
dec
xor
and
push
and
iret
dec
hlt
test
jae
shrb
aaa
icebp
add
aad
add
push
xchg
cwtl
and
cmp
add
pop
adc
push
sub
inc
dec
and
pop
inc
cld
jb
add
incl
js
or
shlb
cmp
dec
fildl
mov
flds
adc
fildll
repnz
sbb
fisubrl
sub
adc
pop
sbb
lea
je
sahf
dec
cmc
rorl
push
and
rcr
jl
testb
bound
addl
xor
shlb
add
mov
inc
inc
cmp
push
pop
arpl
add
cli
test
xchg
lcall
inc
pop
daa
inc
loopne
std
in
push
mov
and
cmpsl
cmp
lahf
inc
xor
fimuls
or
ja
or
lret
test
scas
mov
mov
xor
pop
stos
xchg
inc
or
sar
mov
inc
xchg
add
cltd
test
mov
xchg
mov
popa
les
inc
pusha
add
scas
ret
adc
movsb
jns
add
adc
lock
test
jns
ss
and
add
inc
dec
push
sbb
xor
inc
arpl
aaa
lret
and
push
jmp
nop
xchg
or
push
inc
adc
and
popf
jno
mov
aaa
or
imul
add
cwtl
xchg
pop
dec
or
popf
nop
cmp
pop
add
inc
push
xor
and
daa
xor
imul
and
pop
adc
add
mov
add
cltd
adc
mulb
and
jmp
mov
sbb
lret
fstpl
roll
outsb
sbb
sbb
push
cs
test
pop
sahf
leave
push
jp
popa
scas
punpcklbw
rcl
inc
adc
xchg
daa
leave
xchg
inc
lock
mov
incl
inc
cli
sbb
adc
xchg
and
inc
iret
push
sbb
inc
sbb
mov
enter
push
sbb
lret
mov
dec
adcb
popf
mov
xchg
mov
subl
mov
add
and
adc
shlb
push
mov
sub
dec
sub
in
inc
hlt
into
fldl
icebp
mov
jne
cwtl
xor
enter
dec
pusha
cmp
add
sub
and
add
in
or
rcrb
mov
adc
mov
sbb
fcompl
mov
cmp
jnp
mov
xor
xlat
add
pushf
repz
faddl
int
mov
or
inc
sbb
hlt
mov
add
dec
mov
test
loope
mov
push
inc
jno
xor
push
sbb
add
int
add
mov
in
inc
test
jg
jl
add
gs
pushf
inc
lea
dec
xor
in
cmp
out
push
ljmp
add
cld
inc
inc
scas
adc
sbb
dec
in
lods
xchg
pop
lock
xchg
adc
data16
push
addb
ljmp
into
test
dec
ljmp
in
add
sbb
pusha
mov
add
fdivrp
into
imul
add
mov
adc
pop
ljmp
jbe
scas
sub
mov
iret
aas
fsubl
call
mov
and
data16
push
pop
mov
into
push
add
insb
push
and
out
add
inc
sbb
inc
push
push
fstpt
fs
in
enter
sub
cmp
xchg
ljmp
out
add
push
out
sbb
pushf
subb
pop
test
add
push
mov
pop
dec
ficompl
into
insb
orb
pushf
repnz
add
jp
loop
sbb
dec
push
int3
or
sarl
iret
pop
sub
add
mov
or
pop
and
ja,pt
das
iret
mov
fisubrs
pop
push
ss
mov
xor
pushf
or
cmp
dec
test
call
iret
dec
scas
sub
orl
aaa
xor
std
adc
in
cwtl
lcall
jl
movsb
mov
cltd
sti
in
cwtl
mov
mov
push
shll
nop
lahf
cli
sub
cmp
or
xor
inc
inc
leave
sub
push
dec
and
pop
sarb
add
xchg
adc
xchg
pop
cmpsl
inc
adc
int3
pop
xor
xchg
and
filds
or
jae
cmp
sarl
pop
loop
dec
xor
xor
lods
cmp
sahf
add
and
mov
mov
cmp
pop
mov
push
and
or
add
ds
outsb
push
dec
out
add
mov
and
hlt
out
mov
repz
aaa
xchg
jbe
adc
imul
and
jb
adc
sbb
or
push
or
adc
xchg
inc
faddl
insb
lret
fldenv
add
cmpsl
fdivrp
pop
into
nop
pop
cltd
loope
scas
add
cld
dec
test
jno
sbb
in
call
push
inc
sbb
jl
pushf
aaa
sub
cmp
mov
or
loopne
mov
add
sub
ret
lock
jae
out
mov
repnz
xor
sarb
mov
lcall
test
add
sbb
or
sbb
cld
frstpm(287
inc
and
scas
adc
or
sub
sbb
add
jae
call
mov
clc
cmc
addb
xor
icebp
pop
pop
fsts
mov
nop
movsl
dec
mov
inc
cmp
add
mov
addl
clc
push
cmp
mov
outsl
es
or
xchg
lahf
mov
incb
push
subb
add
js
pop
sbb
inc
and
and
adc
add
jo
adc
inc
mov
rol
push
roll
shr
iret
pop
mov
sbb
inc
out
rolb
roll
pusha
icebp
popf
ja
fmull
leave
mov
mov
push
out
sarb
jnp
sbb
int3
push
cmp
bound
sahf
adc
add
lcall
sbb
faddl
mov
push
sub
or
fmuls
push
inc
add
and
pop
xchg
repnz
adc
dec
mov
loope
jmp
xchg
rorb
repnz
loopne
cld
push
loopne
pop
fwait
pop
movsb
inc
in
xor
fistpl
inc
add
inc
or
add
xchg
sub
repz
adc
cmp
lahf
cmp
add
jle
lds
cli
inc
loop
lret
ror
add
divb
or
inc
add
jne
aas
je
mov
and
pop
sbb
mov
mov
adc
jne
aas
jmp
adcb
negl
imul
cwtl
fildl
bound
add
lods
cmp
mov
cld
mov
xor
inc
rcr
orb
add
outsl
arpl
pop
iret
lods
mov
mov
adc
cmp
add
or
fwait
push
stos
add
in
fsubrl
data16
mov
loop
pop
mov
clc
dec
ljmp
insl
xchg
xchg
add
mov
mov
cmp
cmpb
fistpl
adc
or
ret
lahf
add
sub
testb
mov
jae
in
xchg
icebp
add
aas
out
xchg
daa
pusha
popl
pop
mov
dec
lret
sbb
jns,pn
add
ret
push
repz
aad
jp
bound
sub
xadd
mov
mov
mov
xchg
mov
add
pop
movsb
sbbb
push
call
add
dec
push
add
incl
jo
in
xor
add
xchg
lret
push
ret
popf
add
inc
sub
jp
ljmp
lret
push
add
fisubs
pusha
and
add
bound
adc
ljmp
dec
test
jne
pop
add
add
jb
lret
mov
sub
mov
sbb
hlt
pop
adc
lahf
pop
faddl
rorl
cmovp
add
xlat
test
mov
divl
rcl
adc
sbb
adc
pop
push
orb
sub
xor
sbb
ja
jno
add
fcmovnbe
inc
data16
dec
jae
add
push
into
add
popf
sahf
cmp
xchg
push
add
mov
jecxz
aaa
shlb
lods
push
in
add
xchg
and
popa
xchg
or
xchg
push
iret
mov
inc
dec
jo
or
push
mov
ret
jg
cmp
sbb
lds
jns
por
pushf
mov
cmpsb
pop
and
adc
cmpl
sti
pusha
adc
addr16
shld
ja
jno
add
pop
dec
lock
xchg
add
clc
add
fdiv
add
inc
je,pt
pop
or
cmp
mov
or
arpl
add
lods
fwait
daa
inc
jno
push
add
popa
cwtl
xor
jecxz
std
rcl
movsb
cli
add
ret
jp
test
pusha
je
or
mov
pop
sub
enter
mov
jg
cld
inc
or
in
sahf
mov
outsl
adc
and
sub
in
and
pop
xchg
push
add
jge
mov
add
rolb
xchg
push
test
fldcw
add
add
arpl
adc
pusha
mov
mov
adc
out
sbb
push
or
in
call
adc
iret
mov
test
fnstsw
lret
cld
and
addr16
pop
add
jbe
mov
in
and
xchg
add
pushl
jns
adc
add
rcrb
fistpl
or
je
mov
jge
and
xchg
adc
add
int3
xchg
lock
shrb
inc
arpl
mov
das
add
scas
aam
add
lock
ficoms
ss
sbb
rcl
fsub
ret
add
cmp
or
jmp
testb
push
call
pop
push
sub
dec
mov
adc
out
incb
mov
add
stos
dec
xchg
nop
adc
loop
jp
add
in
lret
mov
add
jne
sub
sbb
loope
xor
xorb
mov
inc
fwait
cmc
push
or
sub
pop
popl
pusha
mov
mov
or
push
leave
xchg
imul
add
in
push
push
jg
dec
jmp
add
aad
ficoml
filds
js
mov
sbb
mov
sbb
imul
sar
popf
add
mov
push
nop
testl
aad
push
add
xor
sbb
gs
rorb
add
nop
std
inc
ret
test
movsb
push
jnp
sub
mov
pop
add
shll
insl
sbb
clc
out
jp
or
mov
xchg
jbe
or
push
add
fadds
vmresume
mov
repz
inc
dec
and
pop
faddl
sbb
add
pusha
pop
cwtl
inc
xchg
pop
and
add
out
bound
call
mov
test
fsubs
inc
mov
loopne
add
push
mov
add
lcall
stos
outsl
test
addb
xor
push
add
rclb
lahf
jge
xchg
jl
jo
arpl
mov
in
mov
xchg
pop
add
cmp
aam
aam
jg
mov
repnz
inc
lods
sbb
pusha
ret
or
mov
sbb
or
pop
movsl
ret
lock
add
jp
mov
testl
andb
add
push
sub
add
jecxz
rorb
xor
mov
add
lock
call
add
pop
outsb
mov
rolb
mov
xor
ja
dec
sub
mov
xchg
shlb
add
aaa
sub
lret
mov
inc
int3
and
mov
js
cld
jle
adc
mov
add
pop
adcb
pop
cmpsl
inc
negb
and
xchg
aas
pop
das
mov
add
mov
scas
ja
jg
add
lds
adc
sbb
stos
aas
mov
idivb
fxch
cmpsb
and
mov
mov
sub
iret
jnp
inc
fdivrs
mov
fisubrl
add
jne
aam
jmp
je
es
inc
cmc
xor
bound
add
int
lds
js
adc
in
jge
jp
mov
mov
pop
ror
xor
jl
in
lea
cmp
mov
push
mov
test
push
push
lods
daa
mov
cmpb
inc
add
cmp
add
cli
mov
and
add
mov
jae
add
ljmp
or
pop
cmp
cld
orb
test
push
outsl
cltd
xchg
in
fcmovnb
cltd
daa
and
or
inc
imul
cwtl
add
std
sahf
pop
arpl
iret
sarl
mov
jo
add
xor
aas
out
mov
mov
insb
push
jne
add
in
lds
aam
push
ss
or
addl
or
pop
scas
and
pop
insb
stc
loope
xor
cmp
es
xchg
jo
add
dec
inc
adc
pop
in
add
mov
sub
outsl
cmp
mov
in
loope
sbb
xchg
std
xorl
push
insl
lahf
sbb
fwait
shl
mov
int3
adc
insl
popa
ljmp
add
and
mov
add
mov
dec
sub
sbb
cmp
dec
add
movl
add
gs
insb
rcr
enter
lret
add
mov
jb
ja
add
mov
jg
psubsb
mov
lock
inc
nop
mov
sbb
loopne
loope
cmp
ret
sbb
add
ds
in
mov
ds
lret
popa
shrb
fcmovbe
jo
add
or
xor
push
repnz
xor
loopne
dec
cli
cmp
adc
add
jo
lock
add
mov
inc
jno
cmp
lods
andb
flds
cmp
test
mov
sti
fcmove
clc
xor
push
pop
ds
addb
xchg
push
in
ret
loopne
sbb
wrmsr
sub
mov
enter
dec
xor
and
push
popf
sbb
insl
xchg
or
in
loop
add
adc
dec
add
push
push
cmc
insb
dec
or
loopne
fwait
mov
hlt
orl
and
sbb
add
fnstcw
rolb
mov
inc
mov
or
jns
sbb
sub
lcall
sar
jl
mov
dec
add
lock
push
jbe
jecxz
daa
addl
adc
add
pusha
mov
dec
mov
xchg
sub
add
xchg
scas
lods
roll
pop
mull
add
nop
popa
mov
jge
jle
cmp
push
add
test
and
or
imul
add
mov
popf
adc
aam
cwtl
add
test
aaa
mov
mov
jl
imul
aad
call
ret
cld
or
mov
pop
dec
cmp
mov
xor
add
mov
rolb
cmp
adc
adcl
stos
mov
and
cwtl
pop
adc
lock
add
sbb
xchg
icebp
imul
sbb
das
or
in
daa
jl
pop
push
push
cmp
or
fs
mov
jle
bnd
int
fsub
mov
clc
push
xor
psubsw
dec
iret
and
mov
cld
xchg
and
scas
xor
xchg
adc
call
push
repnz
push
xor
or
lock
cmp
mov
arpl
imul
or
lds
dec
pop
test
clc
cmpsl
loope
sbb
xchg
in
pushf
add
pusha
xor
adc
out
addr16
push
sbb
leave
cmp
scas
add
or
sar
add
adc
js
shll
scas
mov
mov
bound
gs
jp
add
cld
aas
pop
sbb
mov
nop
adcb
in
stos
jbe
or
subl
jno
add
scas
imul
add
or
aad
neg
mov
cwtl
sub
jg
stos
add
push
jae
cmp
int3
mov
mov
jl
add
xlat
xchg
xchg
repnz
pop
dec
imul
hlt
or
nop
add
negl
push
pop
pop
andl
cmp
add
cmp
jp
lock
cmp
pop
sahf
pop
add
out
pushf
mov
aas
pop
scas
dec
insb
mov
add
test
ja
and
out
cmp
xor
sbb
cmp
dec
mov
sub
fildl
sarb
je
push
mov
adc
cmc
sti
add
int
push
test
adc
adc
aas
pop
fwait
lcall
lods
sub
in
daa
into
add
ds
mov
jb
and
test
xlat
test
lret
mov
sbb
push
xchg
sub
sub
daa
das
xor
mov
and
xchg
loop
xor
xor
js
rcr
ss
pop
adc
lea
mov
int3
sub
shll
mov
jo
add
cmc
xchg
ljmp
pop
jns
movsl
rcll
add
push
in
movsb
sahf
xchg
cltd
je
outsb
push
pop
or
jmp
out
or
or
mov
adc
sahf
leave
cld
push
mov
fadd
imul
aas
jl
cwtl
add
fdivl
add
insb
in
popa
enter
lock
test
in
ljmp
pushf
adc
push
mov
mov
push
xchg
shrl
adc
add
push
mov
jns
fprem
daa
adc
add
ficomps
lock
cmp
add
mov
mov
adc
fs
dec
push
hlt
pushf
sub
pop
or
es
cmc
inc
fsubrl
mov
add
aad
push
fwait
cmc
ljmp
repz
add
jp
pop
xor
stos
jl
andb
xchg
adc
movsb
pop
ret
add
fwait
xor
test
sub
nop
push
pop
repz
mov
push
xlat
ds
cs
mov
out
addr16
pop
inc
push
imul
dec
pop
sub
mov
scas
pop
jl
or
movsb
lret
fldenv
sti
pop
add
nop
test
hlt
jg
add
imul
add
inc
dec
into
add
sti
mov
pop
push
inc
pop
mov
mov
bound
loopne
ret
xchg
or
and
into
in
jb
cld
add
sub
daa
cwtl
sub
cli
xor
push
mov
mov
mov
add
xchg
xor
push
sti
add
add
jg
shr
sbb
lock
call
out
dec
push
nop
mov
je
or
mov
fs
adc
sahf
pop
clc
in
and
std
call
sub
sbb
add
js
aam
cmp
lret
add
rorb
out
mov
fdivl
and
clc
jnp
int
stos
ljmp
add
push
filds
cmp
xor
add
xchg
mov
arpl
mov
jo
movsb
bound
and
sarb
arpl
sub
imul
jb
out
jns
add
daa
inc
in
sub
jecxz
idivl
sbb
pop
fwait
pop
insl
and
push
cmp
sub
lret
int3
xor
nop
cmp
jae
push
jns
imul
dec
ret
cs
add
in
shrb
xchg
lock
mov
push
or
repz
aaa
sbb
add
dec
ljmp
jbe
loopne
rclb
mov
popf
cmp
out
lahf
jb
or
mov
push
cmp
add
cltd
lea
dec
outsl
and
mov
ret
gs
sti
jne
pusha
add
xchg
push
cmp
sub
insl
mov
add
pop
test
pop
int3
add
cli
sub
add
jno,pt
stc
in
mov
iret
jl
pusha
xor
cld
cmp
lahf
popa
jne
and
pop
inc
lock
sbb
mov
xchg
ror
push
add
icebp
popa
jmp
jnp
mov
pop
push
inc
lods
mov
sti
loopne
insb
mov
and
dec
jmp
sbb
add
mov
shrb
gs
rcrb
fmull
lods
pop
add
int3
add
movsl
test
jo
loop
add
fldlg2
imul
cmp
mov
sub
pop
fsubr
aaa
push
jmp
lods
cmpsb
cmovl
lock
mov
mov
adc
inc
sub
test
pop
scas
pop
jo
sub
shl
ror
in
sbb
les
adcl
pop
shll
inc
lds
mov
insb
addb
xor
ja
sbb
push
cmpsl
lret
je
xor
cld
ficoms
fwait
push
in
xor
add
xor
jbe
xor
dec
add
popf
mov
push
adc
push
jne
add
outsb
shlb
pop
insb
add
fcoml
sbb
dec
mov
sbb
add
push
push
hlt
roll
and
jbe
add
clc
in
cwtl
loop
dec
pop
push
les
gs
xchg
bound
or
pushf
daa
aaa
push
in
psllq
sub
call
jne
or
lds
pop
add
dec
dec
adc
str
addr16
mov
adc
inc
movsl
add
lea
shl
dec
add
pop
aas
dec
xor
jecxz
jae
cmpsl
add
clc
add
mov
lock
dec
push
mov
adc
cld
add
jne
mov
add
stos
dec
dec
packuswb
xor
int3
loopne
sbb
add
mov
dec
dec
icebp
add
adc
or
je
std
in
stc
xor
inc
popf
xor
out
loop
sqrtps
add
test
add
inc
xchg
imul
adc
sub
fidivrl
cmp
cltd
add
sarb
mov
sub
enter
ja
fists
and
add
test
inc
lods
es
add
aad
and
movsl
pop
add
add
xor
test
cmp
pushf
pop
mov
into
popf
mov
mov
pop
lds
sbb
and
xchg
shrl
es
mov
sbb
ret
and
imul
mov
push
sar
adc
and
jmp
cli
fisttpl
pop
sbb
jns
lahf
add
loope
lcall
dec
inc
shrl
adc
out
pop
pop
adc
aam
mov
stos
sti
push
add
shrl
jo
lcall
sub
mov
out
pusha
pop
std
roll
sub
adc
pop
push
dec
test
les
or
mov
inc
xchg
bound
push
pop
frstor
xchg
dec
add
in
dec
push
rolb
test
inc
mov
sub
add
aaa
dec
cltd
pop
push
jnp
movsb
mov
sbb
cmpl
jg
add
andl
or
cmp
cmp
add
cs
add
in
cld
xchg
stos
add
jns
adc
nop
jmp
jecxz
stos
jg
xor
sahf
cmp
adc
lods
add
pop
add
lods
adc
popa
cmpsb
add
dec
stos
mov
fsts
lds
mov
hlt
add
aas
xor
lcall
pushf
add
out
dec
sbb
push
rcrb
scas
insb
adc
loopne
enter
sbb
pop
push
es
call
leave
mov
in
xchg
aam
andb
lret
or
xor
icebp
xchg
push
pusha
dec
inc
pop
push
jae
dec
inc
add
lock
push
sbb
push
leave
cmpb
pusha
jo
fs
push
in
sbb
xchg
sub
sub
faddl
jecxz
sub
jns
xchg
cli
movsl
rcrb
adc
imul
jp
loope
pop
mov
in
outsl
pop
andb
sahf
add
xorl
outsb
add
lcall
jb
nop
mov
cmp
sub
test
add
add
jo
imul
repz
add
sti
cs
aaa
lcall
jl
std
jg
adc
clc
pop
or
add
add
add
cmc
add
push
imul
inc
inc
pop
pop
or
add
ret
adcb
or
fisubs
xchg
push
adc
mov
aas
cltd
lods
shrb
mov
fcmovnb
mov
push
mov
adc
ljmp
jbe
sahf
add
push
imull
arpl
dec
xchg
aaa
cmp
or
movb
fwait
add
mov
mov
dec
dec
mov
cmp
jne
aad
jae
test
adc
and
in
repz
mov
add
pop
xchg
lds
add
jge
fmull
repz
bound
mov
mov
dec
lret
push
sbb
sub
and
sahf
roll
dec
inc
jno
add
ficompl
inc
mov
push
jmp
adc
push
or
iret
sbb
mov
sub
nop
inc
aas
push
push
mov
mov
add
pop
add
or
xchg
rolb
add
insl
repz
nop
js
in
popf
mov
add
add
aaa
fdivp
lret
add
sbb
les
xchg
rclb
cmp
es
ret
xchg
mov
jb
ja
test
cltd
inc
std
add
push
sub
jecxz
sbb
add
sub
mov
fldln2
pop
and
add
mov
sub
adc
adc
add
mov
jmp
sub
lahf
jge
je
scas
aam
inc
sar
fdivrl
in
stos
add
aas
xchg
adc
popf
push
fdivr
ja
imul
ljmp
pushf
lods
and
xor
and
test
nop
repz
sub
ret
add
das
repnz
push
sbb
xchg
add
mov
mov
cmp
jle
pop
jl
enter
xor
fcos
add
sub
cmp
je
lcall
lahf
pop
lret
push
xchg
pop
push
jnp
scas
xor
jmp
mov
jmp
stc
or
mov
jbe
lds
out
sub
aaa
xchg
or
arpl
inc
jno
add
fmull
rolb
pop
add
ret
rcrb
stos
pushf
icebp
jno
add
mov
lock
xchg
in
rcrb
sbb
enter
dec
and
push
inc
es
and
inc
movsb
mov
mov
xchg
xor
sub
insb
push
pop
out
test
xor
nop
jge
sub
loopne
aad
dec
cmp
repnz
out
inc
cwtl
fdivs
push
sub
adc
sub
mov
xchg
fsubs
test
mov
pop
mov
add
fcoms
lods
sti
cltd
adc
lahf
repz
pop
rorl
inc
ja
pop
aad
xor
push
dec
pusha
mov
int3
in
in
loopne
pop
sbbl
rolb
clc
scas
jmp
fs
mov
mov
mov
add
jge
pop
sbb
inc
or
inc
into
inc
cld
scas
cmp
cmp
shr
inc
mov
mov
loop
rep
sbb
xchg
add
hlt
fcoms
mov
clc
std
aad
add
fisubrl
push
adc
repz
sbb
sahf
or
pop
mov
xchg
loopne
lret
add
mov
in
xchg
add
mov
xchg
leave
loopne
ficoml
xor
xor
push
lret
lods
cltd
ror
mov
pop
mov
push
int3
push
push
mov
dec
sbb
cmp
xchg
xor
inc
cmp
cs
in
cmp
dec
movsb
and
and
adc
push
or
or
sbbl
push
and
dec
pop
cmp
sbb
call
rcrl
shl
fwait
or
cmp
xchg
mov
mov
fstps
js
or
sub
shll
movsb
jl
sub
loop
push
adc
xchg
out
dec
ds
pop
inc
cmp
mov
add
xchg
sub
sub
sbbl
fisubs
cli
jmp
push
add
mov
aaa
add
jbe
lcall
cmpsl
sbb
jmp
loop
das
add
js
test
jbe
mov
leave
movsb
cmp
adc
pop
jg
jecxz
add
push
mov
cli
push
lock
add
push
push
dec
push
mov
in
loope
jnp
add
fwait
jmp
fdivs
jg
test
aam
bound
sbb
pop
cmp
leave
jle
pushf
and
fadds
icebp
in
or
jl
add
int
push
pusha
mov
cmpsl
fs
cld
fsubs
push
loopew
jge
std
add
data16
jl
add
xchg
arpl
rcrb
push
pusha
and
add
and
or
and
and
mov
inc
adc
pop
jp,pn
add
icebp
rclb
mov
pop
and
add
cmp
jb
test
inc
inc
jns
pop
mov
jl
enter
nop
add
inc
outsb
push
gs
hlt
jmp
pop
jnp
repnz
add
cld
pop
lret
popa
xchg
cmc
inc
and
cli
repnz
mov
leave
js
push
mov
mov
pop
lret
ss
pusha
push
inc
mov
jb
lcall
xor
ja
adc
aad
pop
nop
sahf
mov
or
add
shlb
mov
pop
nop
nop
inc
andb
add
and
adc
adc
scas
adc
adc
mov
mov
cli
pop
mov
mov
or
test
test
es
jno
add
addr16
mov
xlat
push
xor
xor
aam
rorl
clc
loopne
cmpsb
mov
adc
add
lock
es
xchg
pop
cld
push
push
and
dec
push
adc
lods
cmp
or
jns
add
sub
xchg
arpl
and
out
repnz
call
insl
cmp
and
jge
pop
fdivs
xchg
mov
adc
rcrb
and
adc
mov
jnp
push
mov
push
psubw
pop
scas
pusha
add
aas
test
out
ficomps
pop
or
adc
xorb
cmpsl
sbb
test
adc
or
daa
mov
into
aad
xchg
stos
cwtl
cmp
loop
xchg
sbb
cld
and
out
aaa
cltd
lahf
call
adc
add
add
subl
lcall
je
inc
movb
xor
push
add
imul
sbb
pop
mov
cld
inc
je
mov
pop
leave
loope
aas
sbb
lock
push
sub
imul
add
mov
aas
and
dec
jns
mov
lods
add
aad
imul
bound
icebp
xor
add
sti
sub
repz
cli
cmp
jmp
xchg
loop
inc
lcall
jno
repnz
setnp
inc
in
clc
outsb
mov
mov
pop
clc
cli
adc
rclb
subl
pop
into
mov
add
aam
sti
pop
xor
stos
bound
adc
add
insb
repnz
add
inc
incl
mov
add
pop
jno
sbb
scas
add
lock
inc
sarl
sbb
pusha
bnd
and
sbb
inc
ljmp
sahf
outsl
jg
pop
add
repnz
jp
jo
mov
idivb
xchg
clc
add
pop
pushf
cmp
ffreep
add
shr
add
cmp
lahf
adc
fld
mov
adc
pushf
dec
add
xchg
loopne
mov
cmp
cmpsb
ucomiss
test
cli
in
in
jno
add
lcall
pop
inc
sbb
pop
push
hlt
push
insb
add
push
or
test
add
xor
mov
add
test
jo
push
mov
shlb
test
int
add
nop
fwait
xchg
mov
movsb
mov
mov
and
lock
rclb
or
subb
jno
je
adc
outsl
movsb
loope,pt
jns
xor
jle
xchg
xchg
repnz
mov
cwtl
outsb
jns
repnz
int3
adc
jge
xor
lock
cmp
sbb
xor
cwtl
mov
inc
rcr
shlb
lods
cwtl
push
add
sub
enter
pop
xchg
mov
mov
nop
hlt
and
mov
pop
sub
jns
sahf
mov
sub
adc
inc
mov
inc
jo
pop
fwait
pop
mov
xchg
xchg
add
sbb
mov
mov
jne
add
cwtl
sar
cmp
in
jb
add
jnp
add
dec
sub
add
test
xor
inc
jg
push
add
test
sub
loop
in
ror
add
and
filds
sub
push
mov
mov
and
jle
lds
xchg
add
mov
sub
dec
ja
jle
dec
ljmp
pusha
imul
outsl
mov
cmpb
xchg
push
add
lods
pop
xlat
dec
mov
push
mov
adc
jae
movsl
js
add
daa
insb
jl
pop
out
lods
sbb
and
and
enter
stc
shl
jge
add
push
mov
icebp
bound
arpl
or
dec
scas
subb
iret
cmp
pop
into
bswap
xchg
and
ljmp
test
xchg
sub
jno
testl
mov
leave
sbb
pop
aas
add
xchg
add
cmpsb
sarb
mov
add
cld
jl
cmc
pop
xor
add
dec
sub
and
cmp
mov
cwtl
mov
add
add
mov
clc
stos
and
lea
and
and
add
into
lock
dec
add
pop
pop
mov
stos
or
jne
and
lock
push
pop
mov
add
push
xor
loopne
mov
sub
call
and
popf
xchg
add
xchg
fdiv
sbb
and
dec
icebp
fstps
add
je
or
les
add
in
scas
xchg
sub
daa
addb
jl
ret
mov
pop
lds
xor
imul
popf
dec
jnp
add
inc
pop
add
jge
xchg
add
out
cli
sub
adc
add
inc
bound
add
pop
xchg
dec
and
push
adc
adc
popf
inc
pop
xor
fbld
movsb
dec
pop
mov
and
lock
stc
pop
idivb
mov
dec
frstor
cmp
pop
sbb
lea
cwtl
loopne
sub
scas
ja
bound
lret
xor
cmp
adc
xchg
or
rcrb
incb
cmc
sub
or
call
arpl
xor
addb
bound
mov
mov
sbb
rcrb
sar
fsubrl
hlt
lcall
rcl
push
and
dec
inc
les
ficomps
clc
add
ds
add
xchg
movsb
mov
fs
pop
push
loopne
add
sub
clc
lds
mov
shrb
adc
jo
jne
mov
mov
sarb
push
stos
xor
add
sub
xchg
jl
pop
inc
in
fmulp
ja
sarb
pop
or
xchg
std
int
inc
andb
sbb
xlat
dec
shlb
mov
pop
add
cs
sbb
sub
shll
imul
fldcw
xchg
rcll
lods
sbb
test
rcll
out
add
push
cs
loope
daa
nop
ljmp
xchg
les
xorb
shl
loope
rclb
jp
jno
xchg
fstps
dec
pop
sti
out
and
sub
add
xor
fs
cmpsb
fldl
subl
sarb
nop
mov
sbb
pop
xor
mull
mov
mov
in
mov
adcb
or
lret
lahf
or
test
repz
cmp
add
adc
in
out
adc
add
std
mov
clc
outsl
lods
add
mov
mov
mov
sbb
and
xorb
imul
clc
andb
push
xlat
add
jge
arpl
jbe
ja
lods
flds
add
lea
cwtl
int3
add
xchg
mov
mov
outsl
pop
pusha
test
add
add
push
fldenv
je
pop
cmpb
xchg
stos
xchg
inc
test
cld
cwtl
add
push
or
add
cmp
lods
leave
jge
mov
cld
xor
loop
inc
ret
sbb
call
cli
cmp
fists
es
inc
and
dec
pop
mov
add
cmp
pushf
pop
mov
cmp
add
add
inc
pop
mov
scas
mov
mov
jl
jnp
cli
add
es
in
fldenv
add
dec
les
fwait
imull
mov
sub
addb
dec
es
add
cli
and
inc
add
pop
push
fcmovnbe
cmp
sub
pop
or
add
loope
push
adc
subl
jnp
add
nop
andb
push
add
fistl
out
sbb
inc
stc
cmp
adc
add
sub
dec
dec
jmp
pop
loope
lods
imulb
loopne
out
testl
inc
repz
in
es
dec
rol
jo
rcll
add
sbb
int3
adc
into
pop
sub
scas
sub
arpl
jmp
add
stc
aam
add
repnz
or
mov
lds
mov
aaa
cltd
stos
fstpt
sub
push
sbbb
sbb
inc
add
push
xor
fcmovbe
inc
pop
pusha
lods
sbbl
mov
iret
pop
mov
inc
push
sbb
mov
clc
and
pop
mov
scas
and
xorb
cmp
sbb
or
ds
in
aas
jge
stc
inc
jg
lds
add
xor
sbb
test
push
jns
clc
sub
cmp
rdmsr
mov
lock
add
sbb
mov
es
add
in
outsl
pop
pop
mov
adc
int3
xor
pop
pop
add
mov
in
shlb
mov
arpl
pop
pop
stos
add
aas
pop
jbe
mov
sbb
push
rolb
rorb
aas
xchg
sahf
add
jo
push
addr16
cli
mov
cmc
lea
lahf
arpl
dec
and
and
xchg
mov
loopne
mov
std
xor
add
das
in
loop
stos
pop
mov
adc
sahf
inc
adc
sub
xchg
add
pop
icebp
dec
push
loopne
sub
jns
ljmp
push
aam
mov
add
arpl
xlat
push
scas
mov
cmp
imul
sahf
out
aas
pop
jae
xchg
inc
js
sub
add
pop
jp
push
dec
in
xorb
push
add
and
das
xor
jo
ja
add
inc
stos
mov
inc
out
cld
and
out
xchg
or
mov
or
loope
push
add
dec
mov
mov
hlt
sbb
fstl
pop
xchg
testb
pop
int3
sbb
pop
pop
call
pop
sub
inc
add
dec
movsl
or
idivb
pop
fnstsw
and
pop
inc
jl
or
loopne
sub
add
jo
out
add
lret
out
out
cli
add
js
rorl
pop
out
sub
pusha
nop
push
jne
dec
jmp
add
cwtl
sbb
jb
mov
jle
add
jmp
mov
dec
push
or
mov
gs
clc
push
or
out
adc
or
add
rorl
test
inc
xchg
cli
add
roll
jae
clc
orl
lock
mov
pop
add
nop
inc
xorb
pop
shl
les
add
push
pop
or
imul
fildl
xor
sub
sub
loopne
push
or
and
hlt
enter
pop
mov
lret
inc
rcl
mov
aad
and
in
inc
incl
out
lds
pop
dec
insb
js
mov
mov
outsl
xor
sbb
popa
fldcw
xchg
add
adc
xchg
testb
imul
test
js
mov
scas
and
or
xchg
xchg
shll
pusha
pop
add
hlt
xchg
mov
jge
out
fisttpll
shl
sbb
and
sub
or
aaa
fstpt
and
inc
gs
sub
sti
xlat
push
daa
fsubrs
loop
lods
leave
add
cmp
fwait
add
out
out
or
mov
cmp
cwtl
repnz
add
inc
lcall
lods
add
roll
ja
fcmovnb
add
cs
jle
mov
data16
push
adc
fadd
add
sbb
iret
add
mov
push
add
adc
imul
outsl
mov
push
jbe
ljmp
aam
or
fisubs
aad
lods
dec
insb
aam
mov
imul
notb
cld
es
rol
test
add
mov
fst
mov
add
or
roll
adc
cltd
into
and
daa
add
insb
push
add
outsb
mov
add
shrl
in
add
mov
dec
add
mov
imul
add
and
cwtl
sahf
xorb
pop
and
adc
ja
push
fidivrs
faddl
sub
jmp
bound
mov
mov
mov
adc
adc
xchg
add
or
test
xor
lods
sbb
popa
mov
mov
push
jne
clc
es
repnz
xor
jl
push
scas
sysret
and
push
adc
cmpsl
adc
mov
mov
pop
jns
xor
faddl
notb
shrb
std
and
push
dec
shl
call
push
fisttps
jbe
jo
insl
cmpsl
push
add
jecxz
push
inc
push
xchg
cmp
or
lds
sub
cmpsb
and
mov
sbb
jge
test
add
mov
int
jbe
mov
add
cmpsl
inc
test
and
orb
pop
jmp
adc
fdivl
add
imul
sysenter
sahf
inc
jb
int3
aas
mov
mov
or
call
sbb
and
inc
movsl
push
push
loop
cmpsl
mov
inc
rorb
subl
and
add
inc
movsl
aam
add
popa
lret
sbb
xchg
or
andb
adcl
cmpsb
faddl
mov
shlb
mov
les
rolb
idivb
jmp
lcall
ret
je
jno
mov
cmpsl
add
jl
mov
mov
dec
sub
sbb
xor
fnstenv
dec
pop
add
push
mov
mov
add
fbstp
inc
lahf
or
xor
jge
push
add
pop
je
add
dec
push
push
pop
mov
push
dec
push
dec
leave
enter
xchg
mov
inc
add
ja
imul
jg
jbe
pop
pusha
clc
sub
add
inc
das
icebp
sbb
xlat
rorb
inc
movl
pop
nop
sub
jecxz
jg
rcrb
aad
jnp
pop
xchg
or
ljmp
push
shrb
popf
adc
or
inc
jg
add
add
sub
clc
push
daa
xchg
fsts
jbe
or
sbb
ds
and
xchg
clc
inc
fidivs
cltd
pusha
add
push
inc
aam
cmp
xchg
mov
shll
in
mov
pop
pusha
add
movsl
inc
in
dec
mov
jle
loopne
mov
jge
sub
and
stos
pop
loopne
push
mov
sbb
jle
or
and
repz
fildl
cmp
lods
stc
insl
ljmp
add
loopne
mov
xchg
loopne
shrd
out
adc
aaa
sarb
scas
xor
pop
xchg
stc
jnp
subw
cmp
xchg
xlat
mov
cwtl
cmp
rolb
cld
xor
loop
inc
or
test
sub
mov
cmp
sti
mov
mov
jne
mov
mov
add
cmpsb
fs
jl
mov
sbb
bnd
shlb
loopne
pushf
aam
mov
arpl
push
push
add
orb
mov
call
xchg
jmp
xchg
adc
mov
call
mov
addl
xchg
mov
add
jp
sahf
movsb
inc
scas
outsb
inc
shlb
add
mov
push
sub
add
lcall
inc
or
cmpsl
aas
mov
push
outsb
jae
and
add
into
repz
leave
daa
add
notl
movsb
in
add
int
cld
scas
ror
inc
or
test
inc
incl
add
push
or
rolb
loope
leave
cmp
cmc
add
stos
aaa
and
fists
and
call
test
test
inc
inc
xchg
xor
les
add
and
insl
aam
test
mov
cli
mov
cmp
adc
sar
xchg
and
add
stc
dec
jo
in
scas
sar
dec
negl
dec
sbb
pop
idivb
add
outsb
xchg
sbb
in
iret
and
ficompl
xchg
sti
stos
jne
cltd
add
push
sub
inc
hlt
add
jae
inc
leave
test
or
and
mov
sbb
and
clc
push
xor
cmc
push
insb
add
inc
push
mov
adc
xor
xchg
lret
lahf
hlt
or
fcompl
add
imul
xchg
filds
sub
mov
push
pusha
inc
xchg
dec
stc
cmp
sub
or
xor
movups
pusha
push
jmp
icebp
add
ret
xchg
inc
popa
test
sahf
mov
fsubr
xchg
add
mov
mov
cmp
loopne
loopne
push
jns
dec
stos
out
repz
or
mov
rorb
jne
pop
mov
add
push
hlt
jl
add
fbstp
add
sarb
imul
out
pop
jg
add
add
int3
aas
add
stc
cli
mov
out
xorl
xchg
add
inc
jb
outsb
bound
test
mulb
insb
or
ds
pop
sbbb
adc
and
push
lcall
add
xchg
xor
mov
add
inc
jne
sub
in
lahf
add
xor
dec
sbb
sbb
dec
fnstenv
jg
rorb
add
cli
imul
and
adcl
fsubrs
shlb
dec
mov
cld
push
das
mov
test
lods
mov
jnp
adc
cmpsb
into
pushf
add
or
mov
jne
notb
call
add
jle
les
mov
mov
push
jmp
int
mov
xor
inc
int3
pop
movsl
mov
add
aaa
fsts
fsubs
test
xchg
xchg
mov
repz
rolb
lods
sub
jmp
test
add
xor
aad
add
inc
jo
add
mov
and
scas
pop
ja
outsb
popf
adc
push
je
add
icebp
xor
inc
mov
ret
testl
add
imul
repz
or
test
pop
shr
sbb
bound
and
fs
aas
orl
fadd
jmp
pop
cmp
pushf
or
jg
inc
lods
add
mov
cmp
sti
lock
and
xor
out
and
xor
in
or
and
das
pop
nop
fidivs
mov
add
out
enter
clc
jo
add
and
inc
add
sbb
push
pusha
xchg
loopne
mov
xchg
in
pushf
mov
cmpl
lea
lds
add
rcrb
mov
and
sbbl
les
and
inc
rcll
testl
in
add
mov
cmp
aad
shlb
add
js
das
xor
or
pop
sbb
pop
sbbb
cmc
test
add
sti
inc
ds
pop
adc
adc
jb
dec
es
ljmp
call
cmp
sarb
xchg
popf
leave
fisttps
add
xchg
cmpsl
clc
rolb
and
sahf
pop
dec
pop
add
rcl
add
loope
add
loop
test
ret
das
mov
cwtl
divb
xchg
rcrb
mov
jl
ja
add
xlat
clc
nop
mov
stos
pop
add
push
adc
ds
sub
test
mov
jne
cmp
cmp
out
xor
add
xchg
sti
and
aas
jns
sldt
sbb
mov
bound
jne
outsb
insb
push
mov
or
scas
push
rcll
add
xchg
iret
add
and
inc
add
adc
addb
and
jle
div
add
cmp
rclb
lahf
stos
faddl
in
rcrl
add
xchg
mov
cmp
dec
dec
inc
xchg
pusha
aaa
dec
adc
shr
cmc
xlat
sbb
mov
ret
sub
sbb
in
lods
sbb
mov
hlt
fwait
adc
pop
pop
out
jb
outsl
js
addr16
shl
addb
cli
xor
cmp
jmp
mov
jmp
jle
push
mov
mov
pop
cmpb
cmp
lahf
subb
pushf
cmp
adc
fcoms
add
xor
cmp
insl
xorl
inc
pusha
call
iret
jne
popf
std
push
cmp
dec
xchg
ljmp
xorb
int3
mov
enter
ljmp
add
out
call
cli
add
dec
pop
mov
shlb
lods
loopne
add
lret
xor
cmpsl
add
mov
je
mov
push
sbb
mov
cmp
stos
add
das
mov
add
stos
or
pop
jl
dec
or
xchg
push
loopne
lds
filds
jbe
add
jp
movsb
in
paddsb
and
sbb
cmp
mov
sahf
add
mov
xchg
push
dec
int3
nop
in
push
mul
pop
popf
out
sbb
add
lret
ljmp
in
clc
add
pop
xchg
jns
add
lret
imul
and
movsb
jecxz
out
sbb
push
pop
enter
push
outsb
adc
je
dec
hlt
rclb
cld
sub
xor
and
mov
add
and
test
add
xchg
repz
sub
fsubrs
jg
insl
testl
add
mov
mov
movsb
stos
cmp
cmp
es
add
xchg
in
mov
mov
add
out
sub
xor
add
repz
sub
jg
dec
adc
mov
jno
mov
mov
dec
dec
je
rcr
stos
or
xor
lea
cmp
inc
ret
xor
add
inc
xchg
xlat
sbb
add
sub
and
repz
outsl
inc
lock
ret
subb
loop
adc
add
lea
xchg
push
and
je
repnz
hlt
and
or
pushf
jp
mov
lds
rcrb
rolb
rcrl
and
xlat
add
cmp
mov
arpl
pop
popf
rorb
xor
dec
mov
xchg
aad
add
sti
repz
jmp
jne
icebp
sbb
les
xchg
test
inc
adc
push
mov
std
fisubl
dec
nop
addb
sbb
add
pop
sahf
sbb
adc
jbe
dec
scas
sub
adcl
adcl
test
adc
fcoml
adc
ja
push
insb
add
lock
out
loop
pop
repnz
les
dec
pop
movsl
push
xor
scas
or
mov
pop
int3
and
add
lods
ja
dec
push
or
add
mov
dec
je
into
add
imull
scas
mov
adc
test
pusha
popa
add
aam
pop
cmpb
sbb
push
int
clc
xor
idivl
pop
xchg
jge
repz
mov
sub
push
add
cs
pop
xor
enter
sub
shl
push
scas
in
xor
inc
add
push
mov
je,pn
and
pop
xor
pusha
outsl
adc
mov
fwait
inc
push
ret
push
pop
jb
and
in
sub
fldt
mov
nop
jmp
mov
sbb
adc
and
scas
jle
add
fildll
pop
lock
daa
ret
push
pop
add
cmpsl
jge
mov
jg
pop
dec
cmp
scas
add
repz
sbb
mov
ret
or
fbld
jo
and
push
hlt
xor
dec
leave
pop
cmp
jo
test
push
dec
push
add
out
push
push
divl
enter
mov
data16
fldl
adc
push
sbb
pop
stc
push
faddl
jne
jl
dec
movsl
xchg
cwtl
subb
dec
xchg
into
aad
mov
mov
test
shrb
xchg
add
inc
imul
pop
xor
les
bound
insl
push
and
into
decl
xchg
dec
mov
dec
subl
bound
add
mov
xchg
or
dec
subb
mov
inc
pop
mov
cmpsl
xor
lock
bound
sub
jbe
pop
daa
enter
xor
or
xchg
pop
mov
mov
adc
cmp
add
jne
jecxz
inc
or
add
mov
pusha
pop
push
ror
pop
fwait
gs
add
add
push
and
mov
stos
and
sbb
or
fadds
and
pop
inc
cwtl
xchg
add
popw
test
cmp
lret
fisttps
in
add
sbb
xchg
cmp
add
and
adc
out
add
into
or
adc
lds
je
movsl
int
add
jb
mov
ljmp
jmp
cmp
add
mov
sub
push
cmp
daa
mov
xchg
pop
xor
jae
popf
shll
dec
movsb
add
sti
addr16
pop
xor
cmp
movsl
shl
add
mov
imul
add
pop
cmp
test
mov
cmp
test
jg
aaa
jbe
jo
jl
add
test
inc
add
js
cmp
clc
dec
add
std
cmp
lds
test
out
dec
pop
add
inc
cld
xorb
xchg
sub
inc
push
subl
movsl
negl
mov
cld
mov
push
fstp
pop
add
mov
add
lods
cwtl
or
test
stos
add
dec
xor
cmp
add
inc
lds
xor
cmp
mov
mov
js
sarl
add
insb
fcmove
xchg
adcb
dec
test
sub
test
fcmovb
sbb
into
add
fiadds
dec
mulb
push
and
xchg
pop
in
cld
lcall
and
pop
add
jb
mov
je
pop
xor
adc
pop
hlt
pop
mov
mov
call
inc
mov
cmp
enter
pop
jge
sub
mov
lods
ret
jno
fs
push
xor
or
pop
bound
imul
lret
loopne
push
call
or
fisubs
cmp
daa
adc
push
add
mov
fbstp
pop
ljmp
add
gs
pop
xchg
mov
insb
loopne
xchg
inc
add
movups
cmp
mov
movsl
and
inc
mov
pop
dec
ror
fcom
pop
in
icebp
add
outsb
arpl
aas
add
cli
rolb
sti
xlat
fbld
cwtl
pusha
push
in
fstps
dec
aas
mov
ds
lods
push
test
repz
add
loop
loop
add
inc
cld
cmpsl
push
or
jnp
mov
clc
add
ljmp
test
sbb
xor
out
add
mul
and
les
jge
push
fisttpll
inc
xor
dec
clc
test
andl
cld
iret
add
pop
add
pop
add
xchg
shrb
push
sub
push
pop
and
cmc
ror
in
xchg
aas
push
cwtl
add
dec
sar
pop
call
std
mov
inc
push
adcl
add
add
cmp
dec
loope
js
dec
cmpl
pop
pop
das
fcomps
jnp
pop
in
add
xchg
inc
rorl
rolb
mov
mov
daa
cmp
popf
addr16
mov
add
fdivr
aaa
mov
bound
cli
xchg
les
pop
scas
push
clc
xchg
mov
call
add
xchg
lods
push
pushf
xor
push
clc
pusha
add
xchg
cmc
mov
fimull
test
sti
mov
lea
shrl
xchg
add
mov
lock
gs
sub
and
cmp
pop
or
pop
sub
addb
stos
insb
push
jl
out
loopne
add
add
maxps
dec
std
sbb
add
enter
js
dec
andb
lea
and
xchg
sbb
adcl
xor
push
in
pop
pop
cmpsl
std
jae
shl
movsl
dec
add
test
inc
aam
push
cld
decl
pusha
mov
icebp
add
ss
inc
sbb
clc
cmp
or
add
pop
mov
add
das
lds
lcall
or
xor
sbbb
imul
xor
sbb
popf
inc
cltd
adc
mov
add
add
mov
and
in
sbb
xor
push
sub
jae
add
je
cmp
jbe
repnz
or
xor
sbb
sbb
aam
push
add
inc
jo
idivb
popa
add
mov
call
pop
sbb
fistpl
bound
pop
daa
fsts
lret
inc
call
mov
cmpb
pusha
addr16
xor
into
jp
ret
xchg
iret
sbb
out
mov
cltd
xchg
jle
sbb
dec
sahf
pop
add
in
mov
ret
xorb
and
mov
ds
rcrb
mov
lock
mov
dec
clc
sub
ljmp
rcll
cmp
inc
icebp
mov
xor
pop
xchg
push
pop
mov
repz
dec
push
inc
loopne
jnp
and
and
xchg
jg
adc
add
pop
sub
incb
js
into
cmp
inc
adc
mov
call
sti
add
xor
jp
outsb
adc
mov
mov
sbb
add
movsl
inc
in
sbb
pushf
xor
incb
xchg
inc
jbe
ficompl
inc
rorb
rclb
filds
icebp
push
jge
inc
lods
xor
sti
add
call
xchg
in
add
push
fistpl
outsl
aaa
and
mov
and
add
inc
add
test
add
dec
mov
pop
inc
xchg
outsl
sbb
mov
arpl
cmp
incl
pop
xor
in
xor
imul
cs
shl
es
adc
add
sahf
pop
inc
loopne
adc
add
jmp
ret
add
dec
test
push
pop
jbe
pushl
sbb
fsubrl
jmp
xchg
mov
aas
fwait
test
add
fisttpl
add
push
ds
fst
xchg
push
xchg
mov
les
adc
test
enter
clc
mov
xor
xlat
sbb
leave
cli
or
pop
xor
into
divb
add
cmp
roll
ss
faddl
cmp
xchg
pushfw
loopne
cmpsb
add
cmp
popa
pop
shll
sub
cmp
xchg
add
add
je
jae
add
mov
dec
jne
add
push
pop
popf
testb
adc
push
orl
cwtl
add
lahf
ss
sub
xor
xchg
dec
icebp
mov
lahf
out
mov
adc
xchg
add
push
inc
jnp
rorb
dec
lahf
popa
jg
sahf
push
rolb
lds
mov
stos
pusha
xor
ljmp
mov
data16
loope
fimull
enter
popa
adc
adc
sub
int3
add
adc
lods
add
leave
aaa
jmp
and
lcall
mov
jnp
sub
jl
aaa
and
lds
cmp
add
or
or
sbb
pextrw
test
add
dec
fstpt
pusha
sub
nop
mov
and
xchg
add
add
imul
mov
popf
push
add
jns
outsb
and
jnp
or
push
mov
pushf
std
cs
pusha
in
mov
daa
add
mov
shr
or
pop
sbb
mov
loopne
or
mov
adc
add
js
or
sarl
xchg
mov
pop
xorl
je
in
loop
adc
lret
loopne
add
loope
push
iret
jb
inc
mov
push
ds
and
test
pop
xchg
mov
and
sarb
bound
add
and
mov
sub
scas
jecxz
mov
and
add
adcb
push
add
aaa
or
or
push
adc
push
lock
mov
dec
jbe
movl
mov
mov
xchg
pusha
xor
sub
stos
mov
pop
and
out
dec
outsl
push
and
jne
lods
add
jl
pmuludq
cli
sbb
inc
andb
verr
sub
fs
add
pop
xor
push
int
ss
stc
iret
pop
add
roll
pop
mov
int
pop
inc
add
es
js
fsts
lahf
rcll
xor
pop
xor
push
andb
add
dec
mov
push
cmp
test
test
insb
cmp
jb
sub
fsubr
sbb
addr16
popa
rcrl
rcrb
mov
ds
sbb
fdivrl
jl
add
cltd
jecxz
add
lret
xlat
icebp
adc
mov
add
loopne
out
mov
push
xor
jnp
push
cli
pop
add
ret
lods
adc
dec
or
or
rcrb
add
mov
iret
cmp
xor
js
pop
das
leave
fldl
int3
or
fcoms
in
in
fs
or
xor
pushf
sbb
sub
arpl
decb
mov
stc
pop
int3
js
lret
push
xchg
jle
je
add
cmp
jg
pop
push
and
pop
mov
sbbb
cwtl
out
and
add
mov
scas
pop
sbb
push
inc
daa
mov
inc
and
in
pop
push
add
sarb
push
test
loopne
jne
add
bound
sarb
sub
dec
shll
add
loop
fdivl
fstps
jb
repnz
mov
jns
mov
sub
sub
cltd
imul
fcmovnb
js
add
cmp
lods
std
icebp
pop
shr
sbb
mov
sub
add
scas
and
mov
add
cmc
mov
es
add
push
mov
push
mov
lods
stc
cld
inc
call
fsts
add
mov
dec
cli
cmp
add
xor
ret
add
dec
mov
add
mov
popf
aaa
movsl
dec
add
jbe
adc
aam
sti
loope
cld
mov
arpl
sub
ret
lock
cwtl
add
add
test
ds
mov
inc
dec
xchg
xchg
pusha
adc
or
sbb
inc
ret
push
shr
fsubr
mov
jo
xchg
rolb
mov
pop
mov
scas
jno
jnp
adc
les
shr
inc
xchg
enter
or
sbb
add
mov
xchg
inc
mov
mov
rol
add
rclb
and
cmp
or
mov
xchg
into
mov
inc
in
sbbl
jb
cmp
and
cli
mov
inc
pop
inc
xor
add
out
or
cmp
mov
jge
mov
pop
pop
lock
and
imul
int
cmp
sub
mov
or
add
pusha
cwtl
daa
outsl
adc
mov
pop
add
pop
rcll
adc
shrd
inc
test
adc
movsb
add
iret
fdivr
xchg
add
xchg
sbb
dec
xor
cmp
mov
add
cmp
pop
int
pop
or
xor
sbb
movsb
mov
add
test
hlt
cmp
push
gs
push
or
or
daa
xor
inc
pusha
mov
jecxz
shll
jmp
mov
xchg
mov
test
sub
data16
lret
cwtl
add
mov
outsb
pop
int3
leave
jge
push
mov
in
in
inc
jbe
add
outsl
fwait
xchg
pop
fbld
or
push
imul
dec
rcrb
movsl
data16
xor
xor
mov
mov
or
out
dec
xchg
jp
jg
push
inc
sub
and
xlat
aas
add
movl
mov
mov
leave
or
adc
subl
dec
ja
add
sbb
xlat
movsb
dec
sahf
push
fwait
sarl
into
gs
cmp
fs
push
inc
mov
idivb
mov
call
lcall
adc
mov
pop
add
or
cmc
repnz
incb
int
mov
dec
mov
adc
mov
pop
out
inc
add
and
jnp
xorl
push
jo
add
sahf
scas
lods
add
add
cmp
jno
cmc
cmp
mov
inc
pop
mov
pop
cmp
push
and
mov
sbb
fimull
comiss
imul
sbbb
adc
mov
fstpt
or
add
dec
ds
mov
xchg
inc
mov
xor
ret
dec
mov
pop
ret
movsl
mov
sahf
mov
mov
mov
sarl
adc
shrl
inc
add
add
out
jnp
out
ljmp
xchg
fwait
int3
roll
mov
repz
movlps
cltd
and
arpl
lahf
jl
or
mov
nop
in
or
cmp
fxch
nop
outsl
test
pop
subl
jg
add
popf
xor
enter
or
inc
shr
adc
or
cmpsl
cmp
xor
lcall
xor
mov
outsl
loopne
iret
popa
xor
xchg
imul
and
add
xor
or
jo
aas
or
adc
xor
pusha
test
and
dec
mov
incl
push
jnp
les
push
lahf
sti
jp
add
add
push
mov
js
outsl
xor
incb
xor
dec
jo
or
and
sub
stc
jecxz
mov
in
xchg
add
adc
adc
movsl
in
addr16
add
in
pop
out
xchg
add
xor
mov
push
xor
loop
pusha
cmpsb
aad
addl
test
push
dec
imul
add
adc
clc
call
xor
nop
pop
decb
xchg
aam
jl
sub
shl
and
mov
jbe
fwait
xor
rclb
mov
test
lahf
add
add
adc
test
push
into
insl
jg
and
pop
add
ds
int
cmp
fildl
aas
movsl
pop
jo
cmp
pop
add
fbstp
or
add
lods
sub
and
jmp
fnsave
outsb
addb
mov
lret
jnp
cltd
adc
xchg
adc
add
mov
jbe
add
inc
cmpsl
nop
pop
cld
xor
mov
mov
rcll
jo
inc
pop
sarb
cmp
sub
pop
mov
outsl
add
adc
lods
xor
xchg
add
sub
sbb
or
dec
add
sub
pop
lock
xchg
pop
push
push
lcall
add
inc
repz
aam
push
adc
jecxz
push
push
cmpsl
dec
add
mov
add
mov
shrb
clc
jg
in
xor
jae
add
jmp
push
sbb
out
leave
push
mov
mov
ret
dec
inc
imul
add
xor
cmp
cmc
jo
dec
pusha
bnd
add
pop
adc
pop
leave
and
cwtl
push
flds
in
add
in
add
testb
subl
pushf
fisubl
cmpb
xchg
mov
mov
xchg
stos
in
jecxz,pn
mov
push
into
sub
sbb
lock
lods
cmpsl
mov
add
push
sbbl
cmp
sub
loopne
add
lock
test
movsl
add
cmp
iret
cmp
mov
push
je
jle
clc
mov
and
jne
jmp
test
sbb
faddl
adc
xor
sbb
ds
mov
mov
mov
add
pusha
sbb
into
add
rorb
rcrb
clc
add
jg
add
ffree
scas
add
xlat
mull
rorl
cmp
dec
jns
mov
add
sbb
mov
sub
stos
ret
dec
jecxz
jnp
in
xchg
mov
inc
jmp
in
mov
mov
add
rolb
inc
add
idiv
jae
inc
stc
call
aas
add
int3
or
lret
adc
js
sbb
fcmovbe
pop
cmpsl
jb
cli
scas
pop
pop
pop
in
loop
cs
adc
add
xchg
out
sub
cmp
dec
cmp
push
jnp
or
adc
pusha
sbb
xchg
stc
add
loope
lods
scas
cmpsb
add
gs
dec
xor
incl
ret
nop
fs
and
mov
sbb
test
fbld
inc
pop
sub
push
cmp
imull
mov
lret
in
inc
add
add
pop
ja
cltd
pusha
mov
inc
push
jl
add
sbb
and
js
nop
inc
jl
pop
sub
inc
lret
ljmp
icebp
in
add
addl
repnz
mov
dec
jno
mov
cmp
and
lock
fistpll
andb
repnz
add
fs
jmp
jnp
push
mov
push
adc
lcall
xor
mov
jb
lock
insb
aas
mov
jno
cmp
imul
cld
pusha
inc
lods
repnz
xor
jo
xchg
xchg
sarb
fincstp
stc
add
sub
jmp
clc
sub
les
insb
dec
sbb
and
adc
mov
pop
loopne
gs
cwtl
add
jg
or
dec
int
dec
mov
aad
add
imul
or
or
daa
sbb
cld
lahf
in
rorl
pop
dec
cmpsl
test
adc
int
pop
add
push
mov
jg
repz
stos
cmp
jge,pt
add
lds
mov
add
fwait
inc
es
jl
sahf
mov
sarb
nop
adc
daa
mov
add
inc
add
xchg
pop
adc
das
add
fisttpll
stos
add
inc
jns,pt
divl
mov
adc
and
add
or
cmp
add
cmp
inc
pushf
xor
jge
and
sbb
cwtl
mov
add
pop
lods
lret
add
ret
mov
mov
fwait
add
pavgw
xor
sbb
cmpsl
fstpl
mov
jne
mov
mov
and
in
xor
jb
insl
out
lock
stos
test
or
aaa
mov
lods
push
add
lock
rorl
add
loope
subl
sbb
dec
fiadds
outsb
and
rcrb
mov
jae
shrb
xchg
inc
xor
mov
cmp
jmp
enter
push
dec
cmpsl
adc
sub
mov
add
in
jne
add
sbb
adcl
add
jge
add
sbb
or
sbb
cmp
call
mov
scas
mov
lods
jge
dec
icebp
dec
fnstcw
cs
xchg
add
pop
jnp
mov
push
jae,pt
add
fisubrs
mov
lea
lods
std
repz
xor
sbb
aas
cmpsl
nop
js
or
fucom
js
add
xchg
push
nop
add
mov
test
xchg
and
int3
mov
fstpt
popa
cmp
pop
jnp
std
push
cmp
add
flds
divb
jp
loopne
add
mov
out
or
icebp
fucomi
ja
inc
je
mov
push
popa
cli
push
push
loope
call
dec
add
xor
pop
and
mov
jae
push
or
add
push
repz
or
sub
mov
pop
add
mov
in
xor
sti
inc
cmp
out
stos
push
xchg
xor
jge
shll
push
call
ja
pop
nop
mov
cmpsl
dec
cmc
daa
aas
adc
jmp
imul
pusha
cwtl
rol
hlt
adc
add
pop
add
jb
or
mov
add
adc
mov
lret
push
scas
int3
or
lgs
stos
add
xchg
xchg
add
xchg
imul
add
out
dec
lods
add
xchg
mov
sub
lock
inc
cld
pop
xlat
and
lret
dec
shll
pusha
inc
jo
pop
sahf
rolb
pop
outsb
mov
sbb
mov
fwait
sub
mov
enter
in
jecxz
aad
in
push
fstps
fmuls
scas
loop
or
ja
sbb
jecxz
lock
add
out
add
add
adc
inc
mov
jecxz
test
add
stc
push
or
jmp
cmp
sub
sarl
mov
add
inc
or
sbb
std
cmp
add
pop
imul
mov
mov
iret
sbbb
add
xor
jg
adcb
das
jae
jno
ret
fnsave
mov
push
dec
stc
test
sub
mov
mov
sbb
enter
out
adc
loopne
add
cmp
test
sub
mov
mov
movsb
adc
push
xchg
inc
and
enter
andl
out
data16
pop
adc
cld
jmp
jg
push
push
and
add
sub
cmp
add
cmp
call
pop
outsb
je
inc
sbb
push
push
mov
push
pop
push
push
mov
aas
ss
or
aad
or
icebp
arpl
jl
shl
cmc
shlb
add
adc
pop
add
cmc
lea
inc
test
push
std
lds
fs
fiadds
ret
int
mov
or
test
in
leave
mov
and
jno
add
mov
movsb
leave
xchg
xorl
and
nop
or
sbb
pop
pop
test
int3
sub
add
jo
mov
add
mulb
sahf
lret
dec
sbb
je
sbbb
jo
in
cmp
lods
ret
dec
dec
cmp
mov
add
es
jmp
add
dec
mov
push
movsb
mov
add
add
xor
mov
scas
jecxz
pop
pop
xlat
sub
es
mov
pop
jmp
jmp
adc
add
cmp
inc
mov
xchg
pop
add
enter
clc
adc
pop
inc
shrl
xorb
push
lret
push
xchg
dec
js
rorb
push
sbb
ds
aaa
lods
push
push
int
les
je
scas
inc
js
xlat
aas
pop
add
inc
enter
mov
aam
and
es
add
dec
adc
xchg
sub
test
es
ss
jecxz
mov
sbb
pop
ret
mov
add
adc
add
int
cmpsb
roll
lock
mov
adc
push
push
mov
add
lcall
or
pop
xor
fcompl
imul
lahf
popl
inc
push
and
cmovbe
jbe
sbb
fdivrl
sbb
dec
adc
and
test
xor
xor
add
xchg
dec
sub
or
stc
mov
sub
xchg
adc
adc
add
add
mov
pop
testl
lock
mov
adc
push
cmp
sbbl
mov
movsl
sbb
add
lods
nop
push
das
sub
push
fs
fildl
add
sbb
lret
sub
mov
add
sarl
repnz
imul
cmp
fwait
and
jae
xchg
addb
rdpmc
or
arpl
inc
pop
ja
sbb
xor
bnd
mov
scas
addb
mov
movb
pop
add
leave
push
mov
add
xchg
pop
fmuls
mov
inc
mov
jno
pusha
lock
pop
mov
aas
gs
mov
push
loopne
repnz
aam
push
nop
sbb
stos
push
dec
mov
add
sub
mov
cmp
mov
mov
add
test
mov
and
mov
add
inc
hlt
orb
ljmp
jl
inc
inc
add
nop
sub
stos
jle
add
pusha
jmp
out
int3
inc
add
adc
call
mov
test
and
xlat
pop
out
cs
dec
shll
mov
testl
and
mov
in
sbb
pop
insl
pusha
pusha
mov
sbb
add
cmp
xor
divb
adc
xor
push
scas
inc
jmp
or
outsb
ret
xchg
stos
lds
test
lret
loopne
mov
out
fiaddl
adc
clc
lds
ret
test
adcb
imulb
fldenv
and
mov
std
add
push
cmc
pop
test
adc
mov
rorl
jno
sbb
mov
mov
std
or
fsubs
mov
in
jb
call
add
std
xor
scas
roll
ret
cli
push
add
mov
add
outsb
sbb
es
dec
rcl
mov
shlb
es
add
or
neg
add
pop
rclb
es
sti
cld
lods
xor
addr16
addb
sub
lret
jns
mov
lahf
stos
fistps
add
mov
jbe
or
mov
xchg
add
cmp
sbb
in
bound
lcall
clc
add
add
push
xor
sahf
and
mov
roll
sub
mov
rorb
dec
add
aaa
xor
inc
pop
mov
add
mov
pusha
jne
sahf
shl
xor
pop
gs
xchg
jno
add
cltd
jg
pushf
rcrb
sarb
xor
lock
or
cld
fisubl
add
sbb
lea
addl
and
add
add
outsb
std
shr
lea
ja
mov
dec
add
imul
out
pusha
leave
jmp
inc
xor
add
jg
and
pop
mov
lea
sti
outsl
adc
add
shlb
pop
call
aad
cli
ljmp
sbb
jae
sub
std
bound
lods
mov
iret
ficomps
push
leave
adc
out
lcall
add
adcl
inc
imul
das
bound
jae
sub
mov
jno
sbb
clc
in
cmpsl
add
fsubr
test
cwtl
cltd
cs
mov
mov
sar
lock
add
pop
pop
mov
xchg
mov
lods
pop
or
xchg
clc
cli
jns
push
shlb
cmc
cmp
add
cmp
lret
and
lods
pop
pop
stos
mov
mov
scas
addb
in
add
mov
add
bound
sbb
shrl
add
add
mov
pop
pop
mov
add
sahf
lret
popf
cmp
inc
and
mov
mov
pop
in
xlat
aaa
sarb
rorl
add
jae
dec
mov
enter
sub
shlb
cmp
push
mov
repnz
push
aas
add
add
jl
add
cmp
lock
dec
loopne
fmuls
mov
add
push
xorb
dec
jnp
ficoms
rcrb
fdivl
and
and
loope
add
subl
pop
mov
flds
add
add
scas
lcall
mov
fnstsw
push
lcall
cmpsb
insb
sbb
sbb
cmp
mov
jecxz
push
in
cmpsl
repnz
or
dec
jl
xchg
push
test
mov
push
in
add
mov
das
add
notl
jecxz
jbe
add
and
inc
pop
setne
ret
xchg
cmpsb
fdivs
sbb
push
jae
call
adc
add
rolb
pop
fdivrl
rorl
pop
icebp
roll
jge
aam
fcoms
scas
out
push
mov
sub
push
sarb
mov
jg
aam
int
mov
inc
jp
mov
dec
idivb
xchg
lods
pop
cwtl
cld
clc
lret
add
mov
aaa
dec
arpl
add
sti
stos
push
add
mov
jmp
mov
or
mov
add
add
lahf
jnp
divl
int3
mov
sbb
xchg
jmp
stos
repnz
add
sub
inc
pop
mov
add
dec
add
loop
cltd
and
js
aas
pop
xor
faddl
mov
pop
loop
add
push
rol
and
jg
push
pop
in
add
dec
addl
rcl
fsub
push
int
adc
out
pop
mov
push
addl
popa
jns
cmp
inc
fwait
xchg
ret
add
add
movsl
mov
and
js
nop
pusha
and
adc
cli
pop
add
adc
mov
stos
cmovb
dec
aas
jl
into
repnz
dec
shlb
mov
nop
inc
popa
xorb
cli
jg
pop
je
jb
add
loop
add
mov
and
dec
or
inc
jns
lret
and
push
pop
add
mov
xchg
push
aad
pop
iret
popf
xor
mov
ret
clc
and
dec
ja
xchg
add
xchg
stos
or
sub
loop
loopne
aam
jno
and
ret
pusha
iret
cmpb
sbb
add
call
jl
sysret
pop
sahf
out
sbb
mov
mov
xchg
add
jp
insl
out
rcr
lock
hlt
add
cld
mov
jmp
dec
test
jns
sub
out
mov
sub
sub
loopne
push
or
ror
adc
inc
and
aam
sub
push
in
sub
repz
inc
adc
int
shlb
add
add
fidivrs
call
insl
dec
inc
sbb
jle
inc
mov
lea
dec
insb
enter
jle
push
jb
pop
notl
sbb
mov
sti
jmp
sbb
sub
testb
daa
pop
int3
add
shll
pop
pop
mov
pop
add
loope
sti
jne
xor
ficomps
dec
jb
or
adc
incl
hlt
cmp
je
add
lods
fwait
push
jbe
call
push
arpl
mov
sahf
stos
aaa
orb
add
or
jno
sub
pop
adc
sbb
pop
sub
add
push
loop
mov
pop
frstor
repnz
pop
fidivl
cmc
test
dec
sub
add
push
jne
jle
scas
mov
iret
cmpsb
fsubl
mov
mov
subl
movsb
dec
xchg
mov
enter
or
sub
inc
daa
push
add
aad
add
adc
aas
push
nop
sbb
bound
ret
xchg
test
testl
outsl
pop
dec
leave
cmp
dec
ret
andb
rolb
dec
rclb
test
lods
add
xchg
pavgb
imul
fwait
andb
or
inc
xlat
cmp
jb
and
push
add
icebp
or
daa
scas
add
or
cwtl
mov
jnp
cmp
orb
mov
jb
fiaddl
xchg
dec
inc
in
inc
sbb
xor
sub
ljmp
adc
push
out
arpl
or
cmp
test
mov
xchg
or
loop
pop
push
or
push
dec
jo
popa
fmull
lds
xchg
xlat
mov
sbb
push
mov
filds
cmp
add
aad
add
mov
aad
je
adc
mov
or
sub
sar
or
inc
dec
test
fistps
jb
lock
mov
xorl
pusha
nop
clc
jne
dec
fs
add
aaa
repnz
shrl
mov
jno
aad
push
lods
lcall
int
les
dec
sub
out
pusha
mov
lock
adc
cmp
xchg
mov
cmp
and
imul
or
or
cwtl
xchg
and
add
outsl
cmpsl
jg
add
arpl
inc
popa
fadds
cmp
cmp
insb
aas
inc
lock
mov
pusha
jecxz
lsl
dec
add
sub
mov
pop
jecxz
xor
add
lret
xchg
nop
in
xor
mov
fmul
xorl
push
dec
push
pop
cmpsl
test
push
mov
push
fsubrp
mov
imul
add
mov
enter
lock
shr
mov
pop
add
je
out
cmp
push
sub
push
pop
fs
xorb
add
xlat
add
cmp
sub
fucomi
cs
sbb
cmpsl
dec
je
ja
fsubrp
xor
sbb
jge
int
cmc
adc
imul
fwait
mov
cmpsl
testl
dec
lods
inc
cli
pushf
add
neg
sbb
cmpsl
push
rcrl
sbb
xchg
out
pop
push
repnz
or
or
in
insb
xor
pop
nop
jo
fistpll
stos
sub
popf
add
adc
cmc
or
outsb
sbb
ja
fstcw
cmp
cmpsl
pushf
xchg
ljmp
mov
in
add
ret
sarb
dec
add
fdivrl
add
xchg
mov
mov
das
outsb
cmp
movl
mov
mul
cmp
subb
xchg
xor
lea
int3
cli
lock
mov
pusha
add
addr16
mov
loope
mov
fisttpll
loop
add
add
dec
clc
les
std
inc
sbb
mov
mov
sbb
inc
xor
xor
shll
jle
es
clc
lds
pop
sub
or
fcomi
js
jo
mov
outsl
rolb
pop
mov
mov
inc
orl
out
add
and
lahf
and
subl
dec
jne
mov
jge
fcomps
xchg
stos
popf
insl
sar
add
push
xchg
jge
add
pop
or
and
xor
cmp
jecxz
into
dec
movl
out
lahf
sbb
imul
sbb
js
xorl
cld
js
ret
xor
mov
pop
xchg
fs
push
subb
mov
dec
insb
aad
mov
pop
xor
or
push
clc
aaa
cmp
add
adc
mov
xchg
sub
xchg
ret
lret
add
subb
adc
cmc
incb
repz
cmpsl
aaa
inc
nop
hlt
mov
dec
loope
add
xchg
sub
adc
jmp
ljmp
cmp
mov
push
mov
adc
icebp
pop
aaa
pop
mov
push
lods
clc
cmp
jecxz
adc
fnstenv
pusha
adc
dec
je
into
je
add
aad
mov
xchg
dec
jl
int3
insl
push
jb
int
push
add
sbb
sbb
mov
sub
mov
push
xor
int
inc
or
sbb
cmp
cltd
add
mov
xor
mov
and
mov
popf
add
xlat
jae
jge
add
icebp
cltd
test
divb
aad
add
fiadds
inc
xchg
int
notl
lea
fld
jle
rolb
loop
dec
popf
adcb
cmp
jnp
add
mov
ljmp
addr16
push
incb
or
mov
and
test
push
mov
and
dec
dec
rclb
lods
in
mov
add
pushf
nop
in
std
add
imul
pusha
sbb
add
pop
mov
pop
inc
inc
add
aad
test
pusha
push
pop
add
inc
in
add
imul
xor
adc
xchg
xor
pop
repz
push
and
add
inc
cmp
and
and
push
jbe
cmpsl
adcb
mov
xchg
cld
jo
push
std
adc
add
nop
mov
roll
mov
pop
jne
dec
mov
sub
sbb
pop
jns
std
movsb
sbb
fstl
out
pop
add
fucompp
dec
cmp
subb
mov
jg
pop
adcb
push
jmp
call
test
dec
fiaddl
mov
push
cmpsb
add
gs
icebp
leave
ja
xor
add
mov
les
mov
aad
iret
lret
mov
push
add
cmp
push
adc
mov
sbb
pop
int3
lds
shlb
xor
popa
movsb
push
sbbb
cltd
test
lahf
stc
sbb
incb
dec
in
dec
add
repnz
in
push
mov
mov
fisubl
pop
insl
shll
sbb
dec
cmp
iret
dec
loope
push
mov
xchg
pusha
mov
push
mov
js
shl
ss
or
lods
clc
push
and
mov
pusha
outsl
add
sbb
leave
aas
data16
push
add
ss
mov
gs
push
lds
nop
les
dec
pop
aas
ljmp
mov
dec
or
and
and
xor
or
jl
add
cli
lea
mov
pushf
mov
push
push
icebp
adc
adc
filds
push
inc
dec
popa
adc
jns
adc
orl
push
xchg
aam
rclb
jg
pusha
aas
push
xchg
inc
adc
sbb
cmp
enter
add
sti
bound
push
and
ja
pusha
out
inc
out
icebp
sub
fiadds
inc
mov
rcll
and
mov
cld
lea
add
or
or
and
push
mov
inc
jle
and
cmc
xchg
mov
inc
das
pop
smsw
cmp
and
jo
scas
push
es
sbb
std
jmp
adc
aas
xor
xchg
testl
mov
fdivrs
nop
shrb
popf
scas
pop
icebp
or
aam
push
pop
and
jb
dec
mov
xchg
in
aas
nop
dec
orb
repnz
jno
add
fisubrl
and
push
xlat
or
push
mov
jno
add
xor
mov
stc
out
add
push
shrl
pop
arpl
inc
movb
jge
fnstsw
mov
inc
adc
andb
mov
and
add
sub
sbb
paddb
or
mov
loop
xor
push
cmp
add
cmpb
imul
inc
mov
out
sbb
daa
dec
jb
je
aaa
add
jno
movsb
lahf
lcall
or
mov
ja
jge,pt
subb
sub
pusha
mov
mov
or
aas
jg
jp
add
subb
fildll
add
and
inc
das
popa
roll
inc
jmp
pop
xchg
add
testl
jne
adc
add
mov
xor
sahf
sbb
andb
mov
and
scas
nop
test
cmp
mov
int3
fimull
adc
sti
cs
addl
push
mov
clc
jmp
add
fistpl
leave
shlb
aam
ret
outsb
push
call
mul
jle
sub
or
int3
pushf
cmp
inc
test
test
jne
fnstcw
ds
imul
jge
popa
mov
jno
mov
aad
xor
sahf
and
mov
push
or
js
cmp
add
push
leave
sub
sub
fs
lods
imul
mov
lock
out
cmpsl
adc
add
loope
xchg
adc
or
pop
mov
ret
fst
xchg
add
jb
and
scas
add
jle
sub
sarl
xchg
xor
in
in
add
xor
mov
and
and
add
inc
add
jge
cmp
js
scas
add
push
shll
sub
pop
add
sub
cmc
add
and
and
pop
cmpsl
cmp
sub
lsl
out
shrb
xor
scas
adc
add
jge
out
arpl
sub
and
push
movsb
or
lods
push
rcrb
xor
shrb
and
filds
pop
push
add
sbb
test
rol
add
cmp
push
and
insl
int3
ror
add
cmp
sub
test
jle
jp
scas
xchg
or
iret
pusha
loopne
and
xor
mov
psubsb
cmpsl
pusha
shll
xor
enter
xor
orb
pop
sbb
xor
enter
adc
ret
stos
shr
add
xor
ds
push
mov
xchg
push
fwait
rcll
pop
nop
movsl
fdivrs
push
adc
gs
or
xlat
mov
pop
mov
jb
fsubs
ficompl
lea
push
mov
cmpsb
add
push
bound
pop
in
js
test
stos
or
inc
ljmp
push
cmpsl
xchg
bound
jo
push
andb
lods
mov
sub
pop
rcll
pop
sub
ljmp
and
mov
ss
scas
mov
add
xor
pop
add
dec
xchg
mov
push
sub
js
gs
mov
add
cs
jl
mov
jp
arpl
sub
jbe
cwtl
xchg
dec
xor
push
pop
sbb
roll
fiaddl
push
dec
inc
add
dec
addr16
cmp
add
or
cmp
mov
hlt
imul
pop
push
das
nop
jo
movl
push
xchg
push
push
jbe
scas
add
mov
pusha
stos
push
mov
inc
xchg
or
sbb
shrb
mov
add
sahf
test
adc
push
pop
add
mov
cmpsl
xor
clc
dec
clc
aam
cmp
es
sub
inc
jae
lods
incb
subb
push
je
add
and
add
inc
loope
ret
mov
test
shlb
adc
inc
js
ss
add
mov
cs
and
mov
xor
jae
or
cmp
add
mov
mov
stc
shrl
mov
pushf
sub
jb
cs
push
xor
xchg
divb
mov
jno
and
inc
sbbb
clc
add
pop
sub
xchg
rclb
xchg
add
or
cld
jle
cmp
sbbl
inc
test
xchg
pop
popf
dec
in
push
and
pop
adc
adc
mov
pop
add
lds
cmpsl
fcoms
inc
add
bound
dec
or
loopne
in
mov
lret
subl
addb
pop
dec
cmp
dec
and
lea
jg
adc
in
mov
add
lcall
adc
cmp
adc
adcl
out
les
cli
jns
enter
adc
std
pop
jp
jge
add
jecxz
sub
pushf
push
xlat
movsb
cmp
aad
mov
stos
int3
shlb
push
xor
pop
pop
and
push
cmp
gs
clc
aas
jbe
subb
jl
xchg
enter
mov
and
xadd
xorb
adc
push
int
clc
rcl
jae
add
pop
jne
cmp
xchg
fwait
stc
add
int3
sub
mov
mov
jbe
push
jae
pop
add
cmp
repz
and
outsl
ret
mov
add
push
outsb
std
add
sbb
add
addb
nop
or
xor
push
mov
cld
subb
xchg
scas
dec
stos
mov
or
out
add
testl
testb
mov
hlt
addb
pop
stc
movsb
rcll
add
idiv
jmp
arpl
add
sbb
add
std
aam
or
fyl2x
js
jmp
sbb
aaa
pop
ficoms
adc
push
add
loopne
add
cwtl
lds
sub
roll
test
lahf
dec
cmp
add
mov
mov
mov
pushf
pop
or
cld
iret
sbb
bound
mov
jl
xchg
aaa
sub
enter
xchg
rdpmc
xor
jbe
mov
cmp
cltd
iret
xor
mov
mov
mov
into
loope
inc
loopne
pop
stc
fs
fisttpl
pop
ror
shlb
outsb
mov
imul
mov
sbbl
mov
push
or
push
jbe
addb
js
xor
mov
por
and
and
sub
xchg
mul
add
imul
cmp
dec
adc
inc
hlt
in
rolb
jecxz
fdivl
push
sub
js
outsb
arpl
xchg
popa
pop
and
das
jbe
xor
js
mov
adc
imul
pusha
mov
add
push
aas
pop
jg
pop
loop
pop
fistps
pop
sub
mov
dec
fwait
pop
cld
incb
ds
lods
in
in
push
outsb
fcmovnb
mov
fistps
adc
mov
xor
jle
lret
les
jbe
xor
xor
mov
mov
sbb
pop
push
mov
jle
add
inc
flds
add
inc
popa
sbb
push
dec
sub
inc
adc
add
or
jle
rcl
pop
repnz
mov
popf
bswap
daa
xchg
inc
add
or
lds
dec
addb
lea
pop
pop
loope
xlat
and
adcb
xor
adc
fld
test
cmc
loop
lods
xor
fcomi
add
dec
sbb
fstps
idivl
jae
test
cmp
nop
das
inc
ja
add
sub
lahf
rcr
mov
jge
jmp
cli
push
fs
arpl
pop
sub
jnp
or
pushf
pusha
sbb
out
add
cs
add
aam
repz
sbb
lods
push
jle
outsl
addb
push
xchg
mov
add
dec
stos
adc
sbb
test
jg
or
xor
cmpb
repnz
jns
add
ds
xor
push
in
fstps
add
push
or
sbb
js
cmp
arpl
fchs
xchg
sbb
std
add
inc
addb
movsl
lahf
add
je
mov
add
ret
sub
push
pop
add
cld
dec
push
arpl
rorb
push
and
mov
sbb
mov
out
add
ljmp
push
gs
loopne
cmp
enter
ss
cmc
fs
fiaddl
cltd
outsb
dec
mov
inc
push
add
notl
ret
sub
sbb
cmp
mov
cmp
or
pop
roll
rclb
and
push
inc
and
xor
aad
daa
adc
push
add
inc
mov
dec
sbb
mov
or
xor
cwtl
add
lea
cmp
adc
movsb
add
clc
dec
mov
dec
xor
or
add
js
pop
sbb
or
mov
push
ret
add
or
or
nop
aas
xor
and
add
pop
mov
loope
out
or
mov
push
mov
mov
mov
add
subl
add
imul
add
mov
push
test
and
mov
je
xor
cmpsb
repz
sbb
xchg
sbb
clc
or
pop
and
push
pop
mov
mov
and
in
cs
hlt
loopne
or
mov
aaa
mov
push
add
sti
xlat
xor
popf
sub
dec
xor
push
push
loopne
dec
push
cwtl
cmp
jnp
add
lods
cs
mov
pop
pop
sbb
add
pop
pop
out
jp
ljmp
jl
or
add
mov
movsb
add
cmp
add
push
inc
cs
dec
sarl
andb
scas
ljmp
cli
jo
cmc
cmp
lods
js
inc
icebp
shlb
cmp
cmp
mov
pop
fwait
sarb
or
and
cmp
cmp
mov
fnstcw
sbb
dec
mov
andl
rol
mov
add
inc
ss
popf
ds
sbb
int3
arpl
push
push
or
mov
paddb
lret
movsb
xchg
add
into
mov
pop
inc
xchg
outsl
scas
int
mov
xchg
ret
xor
jg
push
iret
sbb
repnz
jp
addb
add
cmp
addr16
jo
add
mov
xor
inc
push
xchg
pop
dec
mov
lock
int
sbb
add
lcall
pop
cmpsl
pushf
add
scas
jnp
sbb
add
cli
push
ss
lods
mov
add
les
jbe
add
cs
pxor
mov
add
jbe
adc
mov
sub
xor
pop
movsb
sbb
push
mov
push
lret
outsb
dec
dec
pop
or
ss
aam
xor
mov
sbb
das
rol
adc
add
stos
xchg
xor
add
insl
loopne
inc
pop
mov
cmp
std
cmp
adcb
loop
jl
mov
roll
addr16
jnp
mov
scas
ds
orl
sub
and
psubd
loop
fwait
sub
sti
adc
lret
sub
add
cmp
es
pop
xchg
adc
and
inc
add
or
fdivr
sbb
add
sbb
pop
ret
mov
mov
fcomps
push
mov
push
cli
iret
jae
idivl
pop
pop
arpl
adc
in
adc
xchg
add
lcall
pop
inc
addb
or
fsubr
sub
cmp
stc
add
dec
cmc
test
pop
add
sarb
and
dec
pop
fwait
lret
xchg
jae
testb
sbbb
sub
cmpsl
xor
loope
pusha
add
push
into
ret
and
mov
dec
add
sub
jb
sbb
and
das
pusha
pop
fstpl
push
inc
cmpsl
pop
add
mov
push
jbe
cmp
popl
nop
mov
add
lret
fisubs
xor
hlt
gs
js
cli
stc
fistpl
and
sub
xor
shrl
and
aam
lret
aas
stos
loopne
shlb
scas
or
pop
mov
pop
inc
mov
enter
jnp
add
mov
dec
repnz
adc
shl
add
stos
jno
mov
inc
mov
pop
xorb
test
sahf
out
jl
inc
xor
mov
xchg
cmp
add
repnz
popf
mov
pop
lahf
add
jg
mov
popa
sbb
add
dec
push
or
int
add
dec
cmp
imul
mov
mov
adc
and
jg
xor
xor
or
xlat
dec
ja
test
pushf
lahf
inc
mov
fistpl
sti
mov
decl
mov
mov
xchg
cmp
nop
or
push
xor
shlb
dec
adc
iret
pop
or
cmp
adc
outsb
out
lods
cwtl
sahf
dec
popa
xchg
push
mov
xorb
jle
movsl
loopne
fldt
fimuls
nop
inc
add
push
xchg
push
adc
xchg
out
sti
push
pop
push
lret
and
or
add
add
ret
mov
pop
rolb
push
add
mov
pop
mov
fs
cli
pop
mov
ret
outsl
mov
add
mov
xchg
test
cmp
iret
mov
sub
add
xlat
sbb
mov
shrl
test
ljmp
push
leave
pop
push
outsb
cld
mov
cmp
xchg
xchg
dec
adc
gs
add
rorb
sbb
or
je
pop
inc
loopne
shlb
push
mov
stc
push
in
sbb
xor
mov
sub
mov
xchg
and
outsb
add
mov
push
mov
dec
pop
mov
sbb
inc
pop
lret
cmp
subl
xchg
les
xchg
in
rolb
xor
mov
dec
rorb
mov
in
or
jecxz
stos
fdivrs
or
add
shrl
add
stc
xor
add
es
sbb
sub
or
rcll
mov
xor
sub
add
mov
nop
lea
clc
or
inc
mov
adc
fs
mov
add
pop
push
dec
mov
and
int
jb
push
mov
push
add
iret
ljmp
mov
dec
add
push
aaa
cmp
xchg
mov
outsb
sbb
shll
add
jg
cltd
js
add
popl
sarl
mov
push
fcoms
push
add
mov
push
jae
pop
inc
std
sub
inc
adc
sbbb
mov
gs
mov
ret
pop
inc
push
into
clc
lock
les
jno
sbb
or
aas
sarb
jmp
push
jnp
add
sbb
imul
js
pop
dec
pop
sub
add
add
ror
inc
inc
add
adc
idivl
sbb
xor
jp
xchg
adc
aas
shlb
adc
push
pusha
adc
mov
stos
sbb
aad
or
push
xor
pop
loope
iret
sbb
pop
gs
andl
cwtl
cli
dec
fprem1
jmp
add
int
repz
imul
add
faddl
cmp
aad
jge
inc
add
std
ret
cmpsb
push
add
xor
bound
mov
add
inc
and
sub
dec
int3
sahf
adc
pop
push
xchg
push
rorb
xor
and
out
mov
sub
loopne
les
push
test
xor
mov
in
fwait
and
mov
icebp
sbb
jmp
leave
nop
and
arpl
in
rorb
fstpl
add
rcrb
rcrb
nop
mov
mov
popa
dec
fsub
fildl
xor
je
outsb
add
mov
push
test
aad
arpl
jns
jp
sbbl
cmpsb
xor
andl
in
xchg
aad
dec
ss
pop
addb
mov
cmp
popa
and
jbe,pn
cmpsb
xor
imul
jmp
and
push
sbb
or
ret
cmpsb
bound
push
mov
iret
push
sub
cmp
in
pop
int3
fcoms
test
push
xchg
mov
out
and
in
jp
fcmovnbe
or
lods
dec
pop
mov
push
lods
lahf
pop
js
repnz
cmp
pop
mov
add
sbb
and
cmpsb
rorb
hlt
jns
add
je
pop
test
mov
inc
push
push
std
rcrl
add
ja
inc
rolb
mov
roll
jg
mov
mov
and
dec
bound
orw
and
push
outsb
dec
lcall
mov
call
push
cltd
inc
adc
inc
outsb
xchg
xchg
xchg
fsubrl
add
lahf
mov
cmp
pop
dec
cmp
or
jge
inc
lcall
psrlw
and
mov
inc
inc
inc
addl
sbb
sbb
lahf
mov
xor
push
clc
jecxz
or
in
xchg
and
repz
sub
mov
lock
xor
test
cs
xchg
bound
and
je
dec
add
dec
cmp
insl
pusha
addr16
or
adc
mov
jo
clc
inc
lock
lcall
test
and
out
popa
test
pop
and
or
or
and
leave
pop
test
cmp
je
or
xlat
sbbb
lods
adc
in
sub
fisttps
and
dec
xor
add
les
mov
int3
lock
cli
adc
xor
inc
outsb
add
xor
lock
add
fcmovb
call
add
out
sbb
mov
scas
or
dec
sbb
mov
negb
sti
subb
jae
mov
fisubs
lret
sbb
stos
xchg
and
pop
xor
mov
cmp
js
aas
ss
sub
testb
cmpsb
mulps
dec
add
xor
out
dec
mov
lret
or
sbb
das
rclb
hlt
add
clc
int3
stc
jecxz
ret
pusha
add
fbld
inc
xchg
cmpsl
pop
loopne
dec
adc
mov
je
cmp
lahf
scas
dec
mov
ljmp
pop
rolb
das
leave
in
dec
lret
xor
add
push
shlb
or
push
adc
jo
mov
sbb
pop
cmpsl
add
inc
xchg
pop
adc
push
push
mov
ja
cmpl
test
push
jg
enter
xor
add
int3
add
cmp
sti
cmp
ds
pop
sbb
mov
jecxz
mov
cmp
add
mov
test
push
ficoml
jns
sub
add
jnp
mov
rcll
je
jg
jne
fdivl
sbb
mov
in
cmp
add
jl
nop
test
clc
jmp
mov
xchg
cmp
jp
xchg
sbb
xchg
and
dec
jl
mov
add
sbb
inc
xchg
inc
dec
or
jnp
xor
adc
aaa
roll
mov
aad
mov
ret
mov
ret
jbe
sbb
inc
and
jo
push
movsl
cld
repnz
jb
inc
mov
int3
fidivrl
inc
pop
xor
cmpb
sbb
jno
out
rcrb
add
and
add
sbb
lret
in
jg
cmp
and
insb
popl
in
push
call
add
cmp
bound
pusha
push
mov
dec
arpl
dec
add
addb
cli
cmp
mov
adc
inc
lock
add
pop
test
andb
inc
push
test
mov
ljmp
sbb
nop
das
sub
mov
ret
xor
fadds
in
mov
mov
pusha
test
adc
cmc
mov
repz
xor
pop
popa
into
loopne
cmpb
mov
add
xor
mov
sarb
loopne
test
pop
lahf
sbb
add
nop
sbb
gs
mov
sahf
pusha
mov
sub
mov
inc
lret
std
xchg
andl
test
in
jge
sbb
cmp
pusha
inc
mov
cmp
xchg
mov
inc
mov
addb
add
add
cmp
or
adc
andb
add
inc
out
cvtdq2ps
dec
mov
testb
in
jmp
and
inc
sbb
sbb
push
dec
and
mov
add
fisubl
sub
sbb
xchg
sbb
icebp
sub
xor
addr16
add
es
jmp
push
mov
xor
je
push
pop
xchg
mov
fnstenv
add
shlb
xchg
sbbb
imul
lahf
sub
inc
shrb
pop
push
cmpsb
add
sub
frstor
ret
popa
andb
call
lahf
ja
adc
inc
xchg
add
xchg
adc
or
pop
lret
pusha
bound
adc
add
pop
test
out
or
cmp
dec
xchg
pop
mov
and
call
add
push
hlt
sbb
inc
sbb
xchg
sarb
imul
rep
mov
add
ljmp
push
cld
dec
xor
sbb
nop
in
pusha
jmp
pop
dec
lds
roll
aas
add
test
bound
adc
enter
and
add
mov
cmc
mov
negb
nop
add
xor
faddp
and
push
inc
and
sub
dec
pop
mov
add
mov
add
in
lock
aas
movsl
pop
in
adc
pop
push
jg
push
xchg
pop
pop
add
out
jns
add
mov
xlat
loopne
dec
pop
mov
fisubrs
movsb
in
outsl
pusha
in
xor
adc
adc
mov
scas
es
les
sub
mov
inc
push
add
test
int3
mov
mov
jp
and
lcall
fdivr
mov
xchg
scas
cmp
sub
data16
andb
cmp
push
lock
aam
in
cmp
mov
leave
push
mov
mov
stc
arpl
test
or
xchg
test
mov
adc
sahf
adc
add
mov
add
notl
lock
cmpsl
add
mov
xchg
aas
mov
add
add
push
mov
imul
cmpsb
ljmp
movsl
mov
mov
cltd
mov
xorb
jl
out
loopne
rolb
push
mull
pop
ss
icebp
pushf
lock
dec
imul
jno
push
daa
loop
sub
mov
add
sbb
outsl
testl
mov
lods
sbb
push
stos
sub
xor
add
inc
sbb
add
xchg
adc
aam
xor
adc
dec
mov
rorb
mov
enter
scas
dec
mov
ja
repz
sbb
mov
fwait
loopne
sbb
or
int
jns
faddl
cs
aam
or
inc
je
add
neg
cwtl
scas
out
adc
addr16
and
mov
xchg
mul
or
cs
add
fsubp
aad
jge
inc
add
jl
cwtl
adc
lahf
addr16
dec
lds
sbb
std
adc
sti
inc
lods
pop
aaa
and
out
arpl
mov
into
daa
mov
lea
or
add
cmp
sbb
lret
repz
add
sbb
pushf
xor
inc
jmp
js
inc
mov
loop
mov
js
xorl
into
sbbb
xchg
call
mov
out
inc
icebp
outsl
xor
mov
push
lock
pushf
add
stc
imul
or
adc
add
or
dec
adc
add
bound
xchg
pop
xor
cmpsl
sub
lods
add
les
sub
or
add
pop
xchg
adc
jp
cld
aas
test
in
nop
or
rclb
imul
or
orl
loope
fsubl
inc
sbb
jmp
fisttps
mov
add
fsubrp
repz
add
div
pusha
mov
mov
xor
sub
add
je
repnz
loopne
add
push
lcall
fwait
subb
aam
popf
add
stos
jle
dec
out
leave
xorb
ret
int3
in
adc
pop
dec
push
cmp
sub
xchg
insb
fs
rcrb
repz
test
in
nop
loope
imul
pop
mov
into
add
jmp
gs
xchg
jg
push
scas
stc
jecxz
scas
or
mov
add
into
lret
loop
outsb
add
in
add
neg
and
nop
add
xchg
mov
jg
pop
or
xor
cmp
jge
sbb
sbb
push
arpl
cld
in
ficoms
push
sbb
or
jg
add
mov
lret
dec
add
sub
xchg
jg
lcall
lahf
movsl
mov
les
cmp
jno
addb
es
lret
mov
dec
mov
pop
dec
popf
xor
adc
xchg
dec
inc
int3
dec
or
lock
or
xchg
ljmp
add
sarl
add
xor
adcl
mov
sahf
leave
lock
rorl
add
in
stc
pop
push
dec
mov
outsl
cmpsb
mov
mov
js
push
daa
sbbb
out
outsl
cmpsb
imul
mov
jg
addl
inc
add
or
das
fiadds
shrl
add
rcll
and
push
mov
call
dec
pop
or
js
sbb
mov
shrb
add
mov
mov
add
in
push
stos
orl
sbbl
dec
ret
testb
adc
stos
pop
and
xchg
add
pop
mov
mov
mov
cltd
xchg
clc
or
inc
sbb
sub
jge
in
add
xor
lret
pop
sbb
mov
adc
inc
cmpsl
pop
dec
je
jnp
int3
pop
add
aam
rcr
xor
ret
dec
mov
jmp
cmp
rolb
sbb
inc
stos
in
push
dec
jb
loopne
inc
cs
cltd
sbb
push
xor
lds
add
adc
mov
cmc
fiaddl
jo
inc
xor
mov
push
push
add
mov
roll
mov
jmp
dec
push
push
add
xchg
adc
and
not
pop
adcb
push
add
test
jo
mov
das
cmp
xor
je
and
pop
add
and
clc
add
aam
mov
sbb
and
xchg
add
and
add
lahf
shrb
mov
icebp
ret
cld
das
test
orb
push
les
and
stc
int
ljmp
mov
jecxz
stc
popa
push
xor
sbb
add
mov
repz
fmuls
lods
mov
ret
lock
test
sbb
adc
add
cli
pop
cmp
dec
push
push
jae
icebp
fcomip
jecxz
cmp
cltd
in
mov
push
dec
ret
cld
arpl
cwtl
mov
push
cmp
add
or
push
sub
pop
or
int
cld
and
cmp
out
mulb
rcll
jp
rolb
add
push
sbb
jg
sbb
xchg
xchg
jp
js
test
daa
xor
adc
lock
sti
add
or
pop
mov
fnstsw
andl
cli
cmpsb
pop
add
pop
jmp
or
mov
jnp
test
cvtpi2ps
sub
add
xchg
int
nop
or
add
in
subps
bound
lods
pop
jge
inc
call
add
fsubrl
data16
xchg
add
scas
adc
test
icebp
mov
dec
inc
cld
jo
pop
imul
popf
movsb
sbb
inc
enter
pop
inc
add
pop
sbb
or
mov
push
pop
pop
dec
push
imul
outsl
ret
int
pushf
rcrl
cwtl
or
loopne
xorb
add
cmp
sbb
adcb
mov
repz
mov
test
mov
mov
repnz
sbb
mov
dec
mov
clc
or
es
dec
ja
pop
mov
cld
leave
nop
dec
add
cmp
shll
push
jp
aad
sbbb
add
and
cmp
clc
lret
xchg
cmp
pop
pop
stos
rcrl
push
arpl
or
in
cmc
inc
movsl
xor
lods
mov
adc
icebp
and
das
out
dec
inc
fwait
iret
jmp
sbbl
repz
inc
push
add
xchg
jnp
adc
xchg
inc
test
sub
leave
sbb
xchg
testl
fcmovne
xchg
adc
rcll
cmp
sti
add
js
adc
incl
sbb
xchg
add
fisttpll
fmuls
test
jne
cmpsl
cs
add
jecxz
add
subl
mov
add
adc
test
mov
rorl
iret
sbb
add
sbb
mov
cmp
enter
xor
scas
out
jo
pop
add
popa
ja
jno
mov
add
jmp
cs
imul
dec
add
lcall
filds
pop
pop
loopne
test
lock
cmp
fildl
sub
loopne
cmpsl
imul
mov
mov
jge
xchg
lds
jbe
pop
imul
push
jnp
or
add
pushf
fcomi
push
adc
add
or
idivb
testl
adc
aaa
cs
add
shrl
adc
or
jne
mov
data16
mov
jge
jne
add
inc
cld
mov
adc
sub
add
cmp
in
ljmp
push
jecxz
mov
jmp
mov
jnp
lahf
sbb
add
loop
or
lcall
loopne
pop
imul
or
leave
fisttpll
test
sbb
xlat
mov
in
in
mov
jo
cmpsb
xor
popf
ret
fsubrs
xchg
fwait
adc
dec
dec
pusha
add
and
cmp
cmpb
mov
aam
lahf
out
sub
andl
pop
sub
ljmp
loopne
add
cmp
sahf
dec
shll
in
imull
cmp
xor
and
inc
pushf
mov
rorl
cmpsb
or
adc
pop
add
pop
jle
fs
dec
stos
pop
pop
imul
xchg
roll
inc
pop
outsl
push
add
int
lret
jns
nop
rolb
lcall
and
add
vblendvps
jmp
add
jns
test
loopne
rol
sub
out
xorb
movsb
add
xor
dec
sbb
mov
sbb
loop
pop
cmp
imul
add
sub
addl
in
mov
movb
xchg
test
shrb
ret
insl
sbb
testl
popl
test
lods
call
add
add
xchg
or
or
add
mov
adc
ljmp
addb
add
add
subl
add
repnz
fisubrs
mov
or
jbe
pop
jmp
pop
or
in
adc
adc
ror
cld
jo
and
adc
fbld
in
adc
pop
jl
push
or
or
sbb
ret
add
adc
loop
lods
je
scas
xorb
loopne
fstp
lret
sti
add
pop
test
add
adc
std
cmpsb
call
fsubl
scas
sbb
leave
pop
adc
je
dec
cmpb
push
pop
inc
mov
in
push
dec
xor
lcall
mov
push
cwtl
roll
add
xchg
or
scas
daa
and
pusha
cmp
jg
nop
roll
mov
into
adc
dec
jae
dec
je
add
mov
ret
es
xchg
sub
pusha
dec
sarb
fwait
xchg
or
push
cmp
sub
adcl
and
sub
add
cltd
pop
mov
xchg
btr
add
bswap
xor
push
xorb
sub
je
test
pop
push
and
and
loopne
xchg
ret
add
fistl
cwtl
adc
shll
mov
je
dec
pusha
cmc
add
bound
adc
mov
or
mov
dec
dec
or
adc
dec
pushf
cmp
andb
clc
add
lock
aad
sahf
push
pop
test
aas
mov
dec
mov
jg
aas
inc
repz
fisubs
inc
add
cmp
push
add
sahf
aad
out
pusha
cmp
sbb
or
andb
cmp
cmp
lret
ftst
loope
or
push
out
jbe
pop
sbb
gs
add
add
popa
push
nop
xchg
adc
mov
add
mov
dec
push
mov
es
testb
adc
icebp
inc
pop
mov
cmc
or
addb
xchg
jmp
jmp
movmskps
push
loop
dec
sub
dec
mov
gs
lret
fidivl
mov
xor
dec
test
cld
pop
sbb
jo
scas
mov
rolb
lds
lahf
lods
adc
nop
fadds
mov
pop
inc
aam
loopne
lock
fldl
roll
xlat
rorb
and
add
cmp
mov
clc
add
dec
push
les
fidivrl
loop
mov
mov
outsl
add
sarl
add
xor
aaa
adc
out
sbb
xor
fnstcw
mov
add
pop
pop
cmp
mov
add
sbb
adc
insl
add
push
mov
add
cmp
jp
cwtl
xchg
add
add
mov
out
inc
in
js
push
adc
loopne
les
sbb
mov
jge
fiadds
sub
lcall
or
add
add
mov
add
inc
out
jmp
mov
cmp
and
jg
les
jo
shl
scas
add
ss
sub
filds
testl
xchg
add
inc
jg
or
icebp
hlt
ret
cmp
mov
push
mov
fsubs
das
outsb
movsb
add
insb
push
push
add
mov
mov
shlb
fists
call
sub
dec
outsb
cmp
mov
addl
rcrl
add
push
push
ja
clc
add
nop
loopne
jbe
cmp
or
fdivrp
test
sbb
out
repz
mov
mov
scas
shrl
repnz
frstor
rcll
repz
aaa
pop
mov
cmpxchg
mov
aam
mov
dec
ret
jmp
jle
pop
add
shll
fisttpl
mov
xchg
clc
add
xchg
test
xchg
std
add
out
push
fwait
mov
inc
and
and
repnz
add
ret
xor
es
inc
xor
les
mov
dec
sub
sti
adc
push
push
inc
mov
into
or
cs
xchg
mov
nop
addb
pop
pop
push
xor
mov
inc
add
gs
xchg
jp
in
or
and
hlt
stos
rcrb
cmpsl
push
mov
inc
cmp
adc
rolb
add
xchg
int
and
sarb
js
add
dec
mov
adc
out
vpshld
xor
sub
cmpsb
popf
adc
int
loop,pn
xchg
add
jnp
loopne
jbe
add
shl
jno
sbb
add
jge
mov
mov
outsb
push
jne
fld1
cmc
push
mov
mov
stos
out
in
lods
je
pop
std
add
mov
dec
adc
jo
cmp
adc
fdivl
stos
pop
popf
sub
int
mul
cwtl
mov
into
bound
imul
leave
add
pop
loopne
cmp
cmc
and
pushf
roll
or
mov
in
mov
roll
jge
aad
lea
outsl
test
mov
out
pop
shr
xchg
cmpl
iret
fwait
in
inc
outsl
dec
cmpb
push
loopne
xchg
mov
sbbb
faddl
rolb
pop
lds
jnp
ret
int
jns
pop
ds
dec
pusha
repnz
xchg
or
add
xchg
and
add
xchg
pop
rorb
mov
or
fsubs
lahf
xor
fwait
adc
sub
inc
popf
jno
and
add
sub
jae
pop
loopne
mov
je
lret
pop
inc
sbb
push
lret
push
dec
add
sub
xor
int
mov
pop
cmp
add
into
leave
add
jno
dec
pop
test
dec
add
icebp
bts
dec
push
lahf
add
xchg
mov
mov
jmp
in
out
pop
add
int3
in
aas
mov
or
xor
adc
clc
xchg
inc
xchg
jb
push
icebp
add
mov
add
addr16
add
pusha
jg
pop
adc
addb
mov
push
fldcw
add
push
xor
adc
outsb
add
pop
mov
cld
and
add
dec
inc
add
xor
std
pop
adc
pop
inc
cmp
mov
rolb
add
inc
mov
std
ss
sub
and
adc
leave
sub
jae
or
jecxz
push
push
out
dec
push
adc
outsl
dec
push
xor
and
imul
push
rolb
js
ja
fstps
rcll
add
pusha
fsubrs
add
mov
lds
mov
lods
loope
lret
jg
clc
mov
mov
sbb
repz
xchg
jno
and
jo
cld
cmpsl
add
clc
popa
jle
call
lds
popf
lods
js
add
cmp
xchg
testb
sarl
add
jae
sub
cmp
mul
mov
aas
sti
cmp
nop
inc
xchg
shlb
pop
aad
or
test
shrb
add
fwait
aam
repz
scas
cmp
dec
mul
xorb
mov
adc
sub
push
add
sub
lods
pop
or
add
das
in
pop
cmp
dec
sbb
add
inc
fwait
sbb
adcl
mov
fstl
mov
add
dec
add
xchg
out
jnp
or
mov
ret
mov
faddl
add
scas
dec
lods
cmp
push
cmc
xor
pinsrw
daa
adc
cs
faddl
ljmp
and
push
dec
clc
loopne
addb
xor
inc
mov
mov
jo
ret
stos
lods
mov
add
into
or
ljmp
add
xchg
and
lahf
sub
xorb
fmulp
sbb
je
add
sub
mov
sub
in
add
enter
xor
jp
pusha
adc
add
fbstp
inc
jmp
ds
adc
nop
pop
pop
cmc
sbb
cmpsl
add
pop
sbb
add
daa
das
adc
outsb
jl
jns
or
cmp
rcrl
mov
inc
and
mulb
add
js
sar
cltd
fcomps
dec
sahf
loopw
mov
fs
push
pushf
mov
mov
xchg
mov
shr
and
shlb
add
push
jbe
pop
add
out
cmp
pop
lea
push
ljmp
mov
xor
popl
mov
repnz
cli
add
lahf
scas
and
mov
add
mov
or
pop
jmp
mov
popa
xchg
out
in
push
sarb
imul
xor
add
into
jae
jns
add
js
push
cmpsb
jae
fwait
dec
shll
xchg
cmc
inc
jmp
mov
add
pop
adc
out
pusha
mov
mov
xor
add
xor
ret
pop
data16
add
dec
lea
js
iret
add
mov
mov
dec
cmp
cmc
mov
xchg
pop
mov
add
cmp
in
sbb
pop
and
das
fs
cmpl
add
aam
push
xchg
ljmp
fists
cmp
dec
das
push
dec
shlb
or
add
adc
jecxz
mov
push
pop
out
cmpsb
add
iret
pusha
mov
mov
add
cmpsl
imul
sub
sbb
fdivs
out
adc
xlat
push
add
inc
and
in
mov
jb
test
enter
outsl
mov
cwtl
fadds
inc
adc
aam
sarl
jbe
jnp
pop
cmpsl
jmp
mull
pop
mov
and
mov
adc
sub
into
loope
str
out
jno
mov
ret
unpcklps
mov
shlb
or
rorb
je
outsl
sbb
pop
inc
lods
add
push
or
jns
leave
xor
movsb
or
add
fwait
mov
jo
sub
adc
sub
lock
xchg
add
fnstcw
call
add
push
out
dec
mov
shll
sbb
fcompp
sub
xor
dec
adc
test
pop
jno
xor
clc
adc
insb
push
mov
adc
jbe
mov
xchg
jp
subl
movsl
add
loopne,pt
negl
add
mov
or
adc
inc
fwait
xchg
pusha
xor
sub
sbb
test
fmuls
and
data16
dec
mov
addl
or
push
loopne
jb
mov
push
add
sbb
jns
ljmp
nop
mov
repz
add
scas
mov
fidivrl
dec
jmp
push
mov
out
add
push
jns
pushf
add
add
leave
loope
into
int
mov
in
push
fisubl
mov
add
jae
add
shrb
add
pop
loopne
cmp
in
loopne
push
jle
xor
jne
add
nop
xchg
sub
sbb
mov
mov
sti
xor
or
enter
or
add
sbb
or
xchg
mov
decl
arpl
sbb
aam
popa
clc
arpl
push
clc
lret
mov
dec
push
andb
aad
int3
add
cwtl
mov
movsb
cmpsb
push
call
in
and
xchg
add
pop
cltd
add
jo
or
pop
xor
lock
push
std
or
sub
int
adc
add
nop
insb
dec
js
add
scas
push
mov
or
xchg
xor
pusha
dec
and
jns
add
lahf
adc
outsb
push
xchg
in
push
and
insl
inc
add
leave
xchg
adc
sbb
xchg
nopl
or
mov
xchg
sbbb
xor
add
insl
aaa
xor
nop
sub
mov
lahf
mov
nop
or
mov
inc
dec
mov
add
and
and
or
xor
into
rorb
dec
loopne
add
and
and
cwtl
pop
jnp
add
xor
fwait
adc
je
add
out
test
add
imul
mov
add
fidivs
add
pop
jbe
add
sahf
pop
push
xchg
mov
fs
aaa
sbb
add
add
mov
mov
cmp
push
xchg
push
and
sub
jge
bound
stos
push
js
cmp
mov
iret
ja
xor
add
mov
movb
in
inc
sbb
test
es
fs
push
rcrl
mov
add
and
out
in
sbb
js
iret
push
mov
mov
and
jmp
push
faddl
xor
add
dec
add
dec
sbbl
mov
repz
add
cld
cmp
add
mov
xchg
sbb
shll
cmp
xchg
add
dec
fwait
cmp
orb
loope
xchg
fiadds
add
outsl
jmp
pop
out
enter
xchg
ss
sub
cli
aas
add
mov
cmp
and
mov
sahf
movsl
lret
rcrb
adc
cmp
push
add
dec
or
imul
sbb
out
dec
xor
insb
add
test
add
adc
mov
cmc
add
pop
jge
add
pushf
jae
mov
push
xchg
arpl
dec
mov
shll
sub
ret
rclb
mov
das
add
add
add
mov
fisubs
and
add
in
cmc
ret
adc
faddl
cmpb
fcoms
and
test
clc
pop
fiadds
push
ss
lret
mov
add
les
sbb
mov
add
test
push
add
cmp
sbb
loopne
or
dec
mov
je
aam
inc
push
add
xchg
sbb
setb
and
pusha
aam
cld
int
rolb
jnp
enter
inc
pop
xchg
inc
xchg
test
test
leave
pop
pop
mov
ret
push
pop
into
call
or
lods
xchg
flds
sbbb
aam
dec
mov
add
mov
jo
xchg
xor
rolb
jge
xchg
ja
iret
ret
ljmp
jp
mov
dec
cmp
and
lea
add
or
cmpb
jne
add
xchg
rcrb
movsl
rcrl
icebp
inc
inc
imul
je
out
jnp
les
or
mov
and
lods
lods
adc
xor
cmp
cmp
pop
pop
sub
fiadds
ljmp
add
int3
lahf
pop
mov
lock
gs
add
sbb
mov
cmpb
push
jge
mov
cmpsl
fisubl
das
jo
sub
fildl
out
push
test
ljmp
je
mov
in
add
cwtl
pop
add
jae
es
dec
adc
mov
cmp
inc
test
lods
fsts
xchg
ds
movsl
adc
int3
bswap
adc
outsl
mov
inc
pop
and
test
loopne
xor
shlb
sub
push
add
add
insb
mov
jmp
loopne
cs
aam
xor
jmp
xor
cmpsb
xlat
pop
iret
pop
outsb
stc
push
mov
xor
imul
xchg
jnp
add
sub
add
cmp
mov
lock
and
js
neg
add
xor
bound
pop
mov
aaa
nop
jo
mov
repz
inc
fcoms
inc
jne
adc
das
ret
test
mov
adcb
cmp
leave
andl
stc
mov
mov
je
call
jnp
inc
jb
subb
mov
xor
push
cmp
roll
mov
fiadds
enter
push
scas
movb
test
pop
add
negb
inc
stos
xchg
xor
push
pop
addr16
or
jge
add
addr16
ss
shlb
or
inc
add
pop
stc
and
es
cld
or
fs
jmp
jg
outsb
sbb
fisttpll
push
test
sbb
add
mov
push
shll
or
inc
adc
inc
orb
pop
fwait
mov
rolb
push
fdivl
sbb
jno
lret
push
mov
push
dec
add
xchg
xchg
fistpl
sbb
movsl
pop
mov
add
adc
sarb
add
sbb
sub
ljmp
testl
call
push
adc
jecxz
or
inc
loopne
add
pop
loope
lea
add
xor
aaa
movsl
mov
lds
or
lcall
sbb
jbe
adc
mov
scas
push
rcr
add
xor
sahf
or
mov
sub
add
in
xor
aam
xor
mov
incb
popa
mov
add
push
pop
mov
jecxz
or
fsubrl
and
mov
shrb
push
les
andb
addl
ljmp
mov
pop
ret
inc
ja
lods
incl
cwtl
sub
sbbb
fs
or
outsb
mov
pop
addr16
push
andb
shlb
in
push
pop
rcrl
push
icebp
cltd
mov
xor
inc
sbb
sbb
sahf
push
adc
rol
orl
shlb
xor
cmp
lret
fs
test
dec
addr16
lret
stc
adc
mov
jnp
inc
pop
push
xchg
notl
addb
sbb
arpl
xchg
xor
mov
in
das
jne
or
push
in
add
scas
adc
push
outsl
shrl
enter
xchg
test
dec
lock
jns
pop
jmp
ficoml
mov
mov
xor
add
ljmp
add
or
dec
mov
dec
loope
push
mov
je
sbb
inc
call
cwtl
add
add
sbb
sbb
dec
inc
stos
mov
push
rcr
in
shlb
jle
stos
addr16
pop
pop
data16
dec
mov
push
aad
inc
popf
add
dec
notl
mov
add
inc
sbb
decb
lds
mov
lock
lock
add
fldcw
push
mov
cmp
add
sbb
dec
repz
fstps
jge
or
add
push
mov
aad
mov
cmpsb
or
pop
stc
xchg
shlb
adc
insb
pop
or
sbbb
xor
int3
into
mov
mov
pop
adc
addl
cmp
xor
or
in
leave
jbe
pop
popf
cmp
loope
add
dec
mov
push
add
or
mov
fdivrl
pop
sbb
xchg
loop
add
add
outsb
mov
jecxz
mov
push
mov
xchg
out
jo
push
inc
xchg
push
add
call
adc
cmp
addb
or
mov
mov
and
mov
jns
addb
in
mov
cmp
push
clc
sbb
and
inc
andl
cld
adc
rorl
les
push
add
push
call
dec
add
cmp
or
or
getsec
nop
imul
cwtl
jecxz
sbbb
aaa
out
inc
sbb
ss
sbbl
lcall
dec
sbb
pop
popa
sbb
mov
stc
push
mov
jnp
add
xor
add
adc
sti
add
pop
roll
adc
jg
fwait
loop
outsb
xor
clc
loopne
sub
orl
inc
add
xchg
inc
movsb
psubusb
adc
les
and
mov
cmpsb
insb
add
imul
mov
pmulhw
sbb
lcall
xor
nop
or
lds
xchg
mov
mov
mov
xor
rol
call
mov
das
mov
or
mov
loop
add
int
lahf
add
mov
jmp
stos
or
scas
lds
push
pop
pop
ficoms
mov
jmp
pop
sbb
sub
push
out
sub
cwtl
inc
xor
cld
sub
cmp
shr
stos
fdivrl
mov
lcall
add
ret
push
adc
push
xor
mov
lret
pop
iret
imul
fidivl
insl
add
jbe
push
xchg
xor
jnp
ret
jb
pop
ljmp
testl
inc
pusha
cmp
shl
mov
pop
mov
push
add
add
or
pop
rorb
mov
test
or
push
insl
push
sub
arpl
leave
lock
pop
xchg
add
fimull
test
sub
subl
pusha
adc
cmpsb
push
test
and
sub
adc
xor
mov
jl
scas
call
sub
gs
dec
add
aaa
js
cmp
add
mov
leave
testl
nop
mov
sub
in
mov
mov
add
add
add
adc
xor
mov
sub
mov
add
insb
push
loopne
lods
add
clc
pop
inc
pop
inc
sbb
xchg
fnstsw
cs
mov
fisttps
adc
add
sbb
add
das
ret
ss
cmp
sub
add
clc
insb
out
icebp
push
aas
mov
add
not
add
mov
mov
adc
xor
sub
pop
sbb
push
inc
jl
mov
fadds
jns
leave
mov
add
mov
clc
das
pop
push
ljmp
hlt
cmp
and
inc
sbb
add
test
push
xchg
mov
scas
dec
movsb
add
pop
sbb
out
add
popa
sbb
pop
fisubrs
add
inc
sbb
jge,pt
push
inc
add
repz
fdivl
mov
lock
sbb
cmp
stc
int3
sbb
ljmp
insb
add
jns
pop
rol
test
ror
add
mov
popa
ds
fidivrs
sub
push
scas
inc
mov
inc
push
and
mov
pop
add
mov
add
add
popf
xchg
movb
adc
jae
cwtl
add
popa
adc
mov
push
enter
outsl
mov
or
adc
lods
add
xchg
iret
lcall
add
insl
and
dec
push
pop
adc
pop
fs
repz
rorb
lds
fcmovu
push
insb
cltd
cmp
bound
repz
push
loopne
outsb
fldcw
inc
add
push
xchg
ds
mov
mov
sti
daa
sub
lcall
pop
push
nop
andb
add
lds
cltd
rclb
xchg
add
stos
pop
out
jmp
faddl
adc
stos
jl
cltd
jle
ljmp
dec
add
aaa
mov
movl
mov
repnz
dec
jne
xor
add
lds
push
jmp
cld
and
pop
ds
mov
add
adcl
pop
inc
in
insl
sub
js
mov
xchg
or
nop
int3
push
pop
pop
adc
sub
push
adc
cmp
push
div
js
sub
and
sub
fmull
ror
out
pop
sub
fiaddl
daa
js
sbb
js
adc
popa
ret
mov
xchg
push
cs
dec
or
push
mov
pushf
ljmp
fst
sbb
mov
xor
cli
jae
js
cs
sbb
or
xchg
xchg
xchg
pop
aaa
or
mov
add
push
sbb
push
xor
aaa
std
or
in
add
mov
and
cmp
rolb
cld
xor
pop
jle
add
push
ret
mov
adcb
mov
xchg
lods
cs
mov
pop
push
dec
add
xor
push
idivb
aaa
push
xchg
push
pushfw
pop
xchg
js
sbb
or
cmp
and
jle
adc
push
push
movsl
jb
pop
xchg
mov
inc
push
add
xor
clc
add
sub
mov
outsb
cmp
add
call
mov
cmp
xchg
dec
dec
mov
sti
and
add
add
mov
int
out
push
add
fldcw
xchg
push
stos
xor
cmp
cmp
lcall
mov
adc
test
mov
cld
pop
mov
popl
push
pop
sub
mov
movl
mov
add
dec
out
and
mov
mov
roll
jns
movsb
faddp
mov
push
add
add
mov
pop
imul
xor
cmpsb
dec
mov
jno
loopne
mov
push
xchg
test
pushf
add
gs
push
xor
fisubrl
mov
mov
add
xchg
adc
dec
ficomps
int3
sbbb
add
cmpsl
mov
hlt
mov
adc
fcoml
xor
jne
insl
jecxz
add
mov
lods
aaa
sbb
iret
rolb
movsb
or
and
push
add
jbe
push
jle,pt
cwtl
andb
sub
enter
sbbb
cmp
call
mov
xchg
add
jns
mov
sub
or
fstps
sub
jo
rorb
add
fisubs
pop
xchg
mov
rolb
sub
lods
fwait
pop
scas
les
add
outsb
subl
pushf
call
nop
enter
ficomps
pop
paddb
subb
or
xor
add
add
mov
repnz
inc
data16
mov
mov
add
cwtl
jne
add
lods
out
add
mov
fistps
adcb
push
and
sub
push
enter
add
push
jb
add
stos
mov
pushf
loopne
cmp
ds
adc
leave
andb
push
sub
jb
jl
imul
pop
xchg
call
xchg
jge
add
dec
and
shrl
mov
add
jg
sub
push
sub
pop
pop
push
test
testl
icebp
xchg
and
jecxz
cmp
xor
or
test
js
dec
add
sbb
mov
xor
or
lods
sbb
jb
mov
jge
adc
add
add
xchg
scas
data16
cmp
pop
aas
mov
push
xor
xor
cmpsl
dec
sti
sub
in
dec
push
mov
or
or
adc
add
add
adc
ljmp
push
push
ss
dec
andb
test
add
sub
add
inc
rolb
mov
lret
out
fwait
pop
out
xor
adc
pop
push
das
adc
fwait
add
das
jb
and
lcall
adc
push
in
mov
pop
sub
mov
arpl
leave
stc
iret
mov
lods
dec
and
roll
add
mov
xor
adc
loopne
inc
mov
addr16
pop
jns
xor
mov
push
les
filds
adc
popa
jbe
iret
xor
or
fs
cld
lret
xchg
icebp
insl
mov
sub
mov
frstor
rorb
xor
aas
nop
mov
mov
loopne
in
and
pusha
lar
lahf
mov
fadds
sbb
adc
or
add
xor
or
leave
pop
inc
stos
bound
icebp
lret
add
fcompl
or
clc
push
nop
cmpsl
dec
je
pop
or
add
test
mov
dec
btr
aas
pushf
cmp
mov
mov
pop
and
outsl
iret
cmp
xchg
js
fadds
gs
int
push
movsl
jmp
inc
jo
cmp
sarl
dec
rclb
inc
imul
das
cmp
dec
test
cmp
or
pop
inc
js
lret
sub
sub
add
cltd
inc
pop
or
mov
add
sbb
addb
mov
idivl
xchg
mov
stos
pusha
adc
andb
push
inc
add
cmp
lcall
nop
adc
or
data16
das
push
adc
cli
pop
sub
rcrb
aaa
push
mov
out
pop
add
jmp
movsb
or
in
aam
push
aam
scas
add
int
popf
add
mov
push
or
call
push
fistpl
push
ficoms
shll
lods
leave
faddl
data16
cld
and
fists
xchg
xor
cmp
in
xchg
lods
out
add
pop
pop
lret
xchg
add
cmpsl
incb
rorl
xor
jns
mov
push
push
hlt
popf
jno
leave
scas
test
pop
mov
adc
mov
lcall
loope
inc
sbbb
int3
rcrb
mov
shlb
fnstenv
sub
xchg
push
mov
test
mov
fidivrl
pop
add
dec
pop
fadds
and
ucomiss
cltd
lea
pop
imul
sub
imulb
add
jo
insl
in
dec
adc
push
pop
inc
cmp
cmpsb
inc
andb
xchg
jne
xorb
dec
push
lods
jne
shrb
fucom
shrl
add
push
xchg
leave
scas
xchg
rorl
push
sahf
xchg
adc
popf
rclb
lods
mov
xchg
out
outsl
fwait
and
push
adc
arpl
pop
popl
and
testl
push
insl
ja
aam
movsl
add
pop
jle
in
add
dec
xor
jb
dec
push
test
push
and
lods
repnz
cmp
inc
and
cmpsl
add
mov
dec
in
test
xchg
int
loop
sbb
clc
xor
xor
add
xchg
lret
scas
inc
add
and
andb
inc
cmp
and
in
enter
or
jno
dec
and
rcrb
subl
push
test
call
inc
out
stos
xchg
lea
add
clc
adc
or
jecxz
and
cld
jl
mov
jne
inc
fiaddl
test
dec
shrb
add
push
xor
pop
mov
loope
ss
ja
add
stos
lret
sub
ret
sub
push
cld
subb
dec
jg
ds
push
jb
mov
and
jge
imul
shlb
dec
push
test
in
in
das
and
push
sub
ret
cmp
lods
cmp
imul
shll
jb
push
or
jle
add
push
ss
fcoml
repnz
mov
cmove
adc
into
sbb
xchg
add
lahf
outsb
dec
arpl
ret
mov
jo
enter
cmp
dec
and
cmp
or
adc
cmpb
and
or
pop
loop
add
sbb
cmp
add
movsl
in
mov
lret
dec
sbb
adcl
lcall
sbbb
clc
jae
sbb
sbb
or
jp
jno
imul
ss
and
sbb
pop
leave
mov
add
clc
jo
mov
lods
ret
pusha
xchg
mov
adc
jbe
sbb
pop
push
adc
sub
mov
jg
dec
cmp
pusha
fwait
inc
ss
outsb
ds
lahf
sub
jecxz
pop
call
and
fwait
adc
dec
jnp
sbbb
movsb
sbb
xchg
repz
out
dec
adc
daa
add
js
ret
inc
push
push
mov
add
daa
adc
mov
cmpsb
call
dec
loope
sub
xor
scas
jl
sarl
jecxz
cld
data16
push
int
mov
pop
xlat
loopne
cmp
add
ret
in
fisubrl
in
out
sbb
and
sarl
lahf
daa
mov
movsb
sub
add
pop
je
xor
shl
lods
push
and
cmpsl
add
jno
shll
add
jge
fbld
adc
add
and
pop
bound
mov
cmp
dec
or
sbb
inc
add
cmc
loop
in
push
jns
aas
push
ret
fucomi
cwtl
scas
arpl
dec
jl
xor
cli
add
adc
loopne
es
sub
outsl
insb
fistpl
adc
mov
dec
push
dec
leave
sbb
lahf
lret
xchg
inc
sbb
cmp
jb
fwait
jmp
add
push
in
jns
mov
push
sub
loop
xorb
sahf
lret
push
adc
and
sbb
loopne
mov
sbb
mov
add
jmp
es
or
test
add
shrb
mov
jl
inc
scas
loop
aam
sbb
out
lods
daa
setno
out
and
jge
add
insb
xchg
push
pop
mov
pop
lods
nop
cwtl
clc
sbb
aas
cld
dec
xchg
mov
dec
into
cs
popa
std
add
pop
xchg
mov
sbb
and
jae
ret
or
ret
nop
add
mov
cmp
push
xor
pop
pop
adc
outsb
sti
inc
scas
mov
dec
sbb
sahf
add
sbb
xchg
inc
icebp
lods
cmp
inc
xchg
leave
adc
mov
cmp
xchg
xchg
dec
add
push
je
lcall
sbb
add
sub
in
lret
mov
dec
out
aad
push
pushf
arpl
jbe
adcl
jl
subb
cmp
out
add
push
add
bound
cmp
mov
int3
sub
push
mov
iret
adc
call
sahf
leave
adc
ror
adc
lods
and
shlb
mov
loope
cmpsb
pop
mov
and
idiv
mov
scas
and
xor
or
repz
arpl
mov
popf
vpshufb
in
jge
ffreep
mov
js
verw
xor
xchg
xor
cmp
mov
dec
aam
pop
pop
pushl
sarb
push
divl
ret
sbb
add
in
add
dec
and
adc
or
mov
push
clc
cmp
pop
add
xor
hlt
xor
add
pop
lods
add
popf
int3
movsb
movsb
add
ja
adc
mov
inc
add
jp
mov
jle
mov
and
and
data16
mov
aad
dec
jl
dec
mov
or
sarl
int
xorb
add
and
inc
call
outsl
push
adc
insb
mov
sub
pop
dec
out
sahf
ret
dec
or
pop
lods
pusha
and
pop
cld
fsubrs
add
enter
movsl
xor
cli
fs
in
mov
roll
leave
dec
xor
fucomip
lock
sbb
adc
imul
lahf
cwtl
sbb
jecxz
sarb
mov
pop
daa
mov
or
sar
pop
incb
dec
push
ret
rcrl
pushf
into
or
nop
lock
cld
hlt
push
xor
std
inc
hlt
imul
rolb
clc
bound
xlat
orb
add
sub
sbbb
mull
lds
push
lods
cmp
inc
mov
loope
repnz
mov
pop
add
or
push
mov
pusha
inc
push
shll
mov
rolb
lock
jle
clc
dec
push
cli
scas
cmp
mov
std
dec
jo
or
jl
push
xor
icebp
or
pop
add
lret
xor
xchg
and
or
ret
mov
popf
into
in
and
or
xor
popf
movsb
xchg
xchg
ret
inc
lret
faddl
inc
mov
sub
shrl
mov
adc
add
ja
dec
add
cmc
loope
ljmp
mov
lcall
loopne
cmp
inc
lahf
add
dec
test
xor
dec
loopne
add
lock
cwtl
arpl
mov
mov
xorb
cmp
xor
enter
mov
inc
adc
sub
xchg
and
sub
mov
push
dec
sub
les
rcrl
push
out
mov
sbb
sub
popf
test
cwtl
push
sbb
add
ss
lret
cld
lock
sysret
jne
ljmp
add
push
outsb
pusha
je
js
daa
or
cld
lods
sub
ja
add
xchg
movsb
inc
pop
out
and
add
xchg
push
leave
or
ffree
add
lds
push
mov
in
mov
cmpsb
cli
xchg
cmc
cwtl
dec
add
sub
fsubrs
je
sub
pop
clc
push
dec
pop
movsl
shl
inc
inc
test
add
push
xchg
decl
xchg
sbb
add
mov
in
dec
xor
fs
shl
sub
fdivrs
stos
jno
xor
push
bound
adc
dec
and
sub
sysexit
xchg
and
sbbb
sub
cmp
lock
jb
pop
ret
sbb
out
add
add
in
sbb
shll
add
mov
mov
or
xor
addb
stos
xor
cmp
cmp
push
andl
mov
aaa
in
movsl
push
mov
sbbl
out
pop
or
push
fsubrl
enter
inc
mov
sbb
adc
in
popa
call
or
ficompl
and
imul
pop
or
ljmp
push
mov
insb
cmp
xor
and
sti
shl
add
sub
sbb
add
xor
imul
mov
add
xchg
adc
shlb
xchg
fisttpl
mov
cmp
add
daa
cmp
test
stos
push
add
xchg
enter
or
jp
loop
jb
mov
into
add
das
inc
push
mov
pop
aas
sub
add
adcl
push
aas
arpl
xor
filds
imull
js
je
push
rcll
xchg
add
and
repz
inc
sahf
xchg
cltd
insl
filds
in
out
add
inc
add
ficomps
and
push
js
xchg
inc
dec
out
daa
fsubs
jae
into
add
xchg
pop
mov
cmpb
fisubl
addb
std
mov
mov
ja
test
inc
dec
cmovae
mov
adc
lea
andb
inc
fisubs
cmpsb
inc
mov
lods
sbb
inc
and
dec
popf
lret
cmp
push
push
dec
lock
ret
or
in
pop
sub
and
sbb
cld
scas
xchg
xor
add
mov
scas
xchg
sbb
faddp
mov
jnp
pop
push
pop
enter
jmp
jl
inc
pop
stos
dec
icebp
sub
and
incb
sbb
jne
and
add
movsl
insl
push
test
shrl
add
mov
sahf
jp
jo
xchg
ret
add
xorl
xorb
enter
shlb
je
push
dec
adc
daa
and
shll
nopl
lock
or
jmp
or
sbb
xchg
lret
loop
or
sbb
fildl
push
testl
xchg
mov
mov
repnz
mov
lahf
xchg
pusha
ja
loopne
and
sarl
stc
movsl
orb
xor
aas
daa
sub
xor
adc
push
add
mov
aas
inc
jg
push
pushf
push
adc
add
adc
sbb
out
sahf
mov
ret
mov
mov
or
mov
fisubs
insl
cmp
mov
in
push
test
pusha
loopne
ss
icebp
test
dec
mov
add
jl
jle
cs
xchg
xlat
xchg
sti
add
add
outsb
out
and
mov
imul
mov
fcomp
push
add
ds
sub
insl
cmp
out
cmpsl
loope
pop
and
and
repnz
lahf
lcall
and
adc
add
cmp
and
mov
xor
lea
lods
mov
and
push
mov
repz
jecxz
sbb
xor
push
add
add
jno
nop
je
fs
cmp
sbb
pop
sub
sub
sarb
jne
dec
jb
add
rclb
pusha
dec
jns
xchg
cli
add
lock
add
mov
lock
adc
lahf
call
ret
sbb
aas
cmp
jg
stos
testl
and
stos
pop
adc
cmp
xchg
pop
xchg
pop
pop
enter
nop
les
repnz
and
fnstsw
enter
outsb
test
adc
mov
stc
push
push
mov
insb
fisubl
pop
fsubp
incb
js
imul
inc
mov
xor
in
test
nop
jecxz
xor
fldenv
ja
data16
mov
sub
mov
ds
mov
shlb
cld
inc
fists
jge
call
mov
xchg
fimuls
pop
data16
push
lods
add
jle
fs
loopne
xor
aam
pop
or
inc
pop
cmpsl
pop
insl
lods
add
add
xlat
lret
ret
dec
add
iret
xchg
mov
in
scas
add
and
popf
pop
add
dec
mov
addr16
mov
in
pop
jae
sbb
in
insl
mov
add
dec
add
lcall
add
jl
dec
sbb
cmp
adc
add
inc
and
negl
fs
mov
and
bound
mov
sub
sbb
icebp
inc
sti
or
scas
add
bound
mov
shr
imul
xchg
xchg
inc
leave
add
push
in
stc
jl
test
ljmp
add
popf
test
cltd
rcr
xchg
iret
mov
in
push
and
add
dec
cmp
jge
lock
mov
xchg
mov
push
mov
ja
cli
imul
xchg
hlt
popa
push
lods
pusha
imul
add
into
cmp
fcomps
clc
inc
sub
jb
mov
add
mov
incb
add
or
dec
int3
insb
sub
lret
aaa
rol
shl
xchg
jb
mov
inc
fdivr
ljmp
pop
xchg
aam
ret
jnp
inc
cmp
sub
xor
xchg
out
jno
mov
jg
lret
cmp
mov
inc
idivb
arpl
pop
loop
add
dec
leave
xor
outsb
sbb
inc
or
dec
sbb
mov
xchg
jl
or
jge
push
adc
loop
xor
call
fdivrs
xchg
jmp
xor
and
pop
mov
fcmovnbe
add
xorb
stos
js
rcll
fsts
fistpll
loopne
stos
add
push
and
mov
xchg
fcompl
pop
mov
sahf
enter
xchg
frstor
jl
and
dec
adc
cmp
xor
enter
js
or
orb
cli
dec
pop
push
sub
jmp
push
out
or
mov
dec
sahf
mov
rclb
lds
xor
inc
dec
loope
scas
mov
add
dec
and
roll
enter
mov
sbb
push
sub
adc
mov
xor
push
call
roll
mov
inc
enter
add
movl
add
std
push
loop
jg
or
lret
add
add
lods
pusha
add
dec
aam
cmp
enter
imul
pop
xor
orl
movsl
int3
add
adc
cltd
test
aam
mov
sahf
int3
sbb
push
enter
or
cltd
bound
adc
enter
lds
fimuls
push
jns
mov
call
jne
mov
clc
push
or
dec
xor
loopne
int3
push
add
leave
lods
mov
mov
lock
xchg
push
jge
sbb
into
ret
xor
inc
and
xchg
sarb
sbb
mov
and
jnp
inc
lret
in
xorl
les
adc
aad
jo
in
add
rorb
and
jmp
mov
js
mov
or
xchg
in
addb
adc
xor
mov
out
push
rcl
mov
leave
incl
xchg
xor
add
mov
dec
dec
in
jge
test
inc
push
cmp
jne
flds
sub
cmpsl
popa
test
adc
mov
sbb
je
mov
add
add
imul
call
leave
es
mov
cmp
pop
pushf
jae
and
in
orb
add
out
mov
in
pop
xor
pop
mov
daa
mov
ds
pop
adc
and
inc
xor
mov
xor
pusha
repnz
add
dec
jns
mov
lcall
adc
test
inc
dec
scas
mov
cmp
fisttps
inc
stos
adc
insb
and
loope
mov
pop
mov
and
inc
adc
ds
cwtl
das
adc
scas
and
jge
repnz
ja
pop
cltd
cmpb
testl
ret
mov
pop
movsb
and
or
fdivrl
pushf
sub
push
jne
xor
mov
add
lret
cmc
or
sbb
and
jne
bswap
dec
scas
fldenv
jg
clc
mov
loop
test
cltd
das
mov
jb
add
xchg
sti
addl
adc
sbb
call
mov
ret
pop
cmp
cli
ljmp
divl
into
push
or
mov
shlb
enter
loopne
clc
roll
sahf
test
cmp
aas
mov
lods
enter
push
gs
outsb
pusha
arpl
jne
fcompl
aad
cli
adc
add
jecxz
loope
push
ret
out
and
cltd
loop
test
xorb
pop
push
mov
or
or
mov
dec
mov
fadds
fwait
popa
insl
mov
add
inc
jecxz
mov
aas
xor
sub
add
fmul
pop
inc
jp
push
adc
and
mov
shlb
loop
sbb
adc
adc
add
fnsave
hlt
sbb
insb
ret
add
push
scas
inc
inc
xor
dec
lock
scas
cltd
cld
cmpl
sbb
xor
adc
mov
scas
gs
ja
push
pop
add
mov
dec
scas
inc
sbb
mul
js
add
cmp
add
imul
stc
shl
mov
popa
into
cmp
mov
jne
jo
push
daa
std
push
adc
ja
ds
add
cmpsl
mov
pop
xchg
js
das
mov
in
add
or
push
push
clc
mov
jnp,pn
ljmp
mov
ret
push
xor
inc
mov
push
cmp
mov
fwait
sbb
imul
mov
dec
jno
sti
adc
addb
sahf
mov
dec
inc
jge
add
push
xchg
pop
mov
sar
clc
lcall
insb
popf
adc
dec
imul
add
or
movups
dec
rolb
icebp
adc
cmp
movsb
pop
in
faddl
pop
fwait
mov
xor
fmuls
push
mov
push
inc
fnsetpm(287
ss
xor
loope
stos
jle
pop
mov
movl
push
je
xor
dec
vpsllq
cmp
jnp
fstpt
xor
xchg
add
mov
loop
sub
cwtl
xor
jl
insb
das
sub
add
fists
int3
inc
xchg
daa
add
xor
enter
js
arpl
add
sbb
pcmpeqd
in
sbb
repnz
cmp
sub
sbb
push
iret
cld
lahf
pusha
push
sub
cmc
popw
mov
sbb
repz
and
mov
xor
add
pop
fidivrs
xchg
loop
ret
inc
adc
in
and
add
mov
push
scas
or
and
xchg
in
popf
xor
test
lds
sbb
fsub
jl
dec
jmp
jnp
clc
cli
das
ret
dec
ljmp
sub
sub
shl
dec
inc
js
dec
jnp
andb
add
pop
es
and
loope
dec
adcb
rcll
jae
lods
cwtl
sbbl
call
je
dec
mov
cmp
add
int
cmpsb
push
fisttps
cmp
shr
xorb
ret
sbb
lret
cmp
jae
pop
rolb
les
add
lcall
fsubrs
call
sbb
push
pop
sbb
adc
and
xor
inc
mov
int
sbbb
adc
sahf
dec
lret
dec
nop
xchg
loopne
leave
jmp
pop
xchg
xchg
insb
mov
xchg
push
add
push
scas
and
in
push
or
and
jae
je
xor
push
dec
xchg
jecxz
inc
pushf
inc
lcall
and
jae
xor
subb
pushf
dec
cmp
mov
bound
cs
lds
pusha
mov
in
push
pusha
arpl
lahf
es
add
outsb
imul
add
ljmp
fbld
in
mov
out
dec
lods
cmp
sbb
adc
cmp
je
popf
es
add
leave
sub
scas
add
cmp
sbb
sti
out
subl
in
lcall
out
sbb
or
cmp
in
or
incb
adc
cmpsl
sub
loope
out
test
push
popa
pop
arpl
or
adc
lcall
inc
sub
push
loop
xchg
xor
push
sub
das
in
clc
push
pusha
and
hlt
push
stos
sbb
or
arpl
add
imul
push
push
dec
sar
push
ds
pusha
lcall
and
pop
push
jbe
mov
insb
jg
dec
push
test
mov
and
add
jb
lods
push
mov
dec
std
cmpsl
inc
pop
in
inc
test
jae
or
fbstp
lock
mov
jle
sbb
and
xor
add
mov
jns
call
or
testb
shlb
pusha
cli
test
adc
rolb
and
mov
mov
aaa
imul
xchg
lea
hlt
outsb
jecxz
jae
sbb
test
in
add
mov
or
sub
cmpsl
add
or
cmp
popa
imul
arpl
in
push
cmp
in
test
adc
mov
ja
ds
int3
in
and
scas
sti
dec
ljmp
rcr
or
adc
mov
add
sahf
ficomps
mov
loop
cwtl
or
add
mov
rorb
outsb
add
test
shr
fmul
mov
push
sbbb
ffreep
dec
or
out
and
in
adc
xchg
bound
dec
adc
mov
sub
pop
xchg
lea
and
xor
mov
xchg
sub
and
inc
cli
inc
push
xor
add
aas
push
lods
xor
adc
sub
mov
adc
adc
shl
sbb
inc
and
dec
jne
insb
mov
roll
ret
cmc
or
decl
cli
sahf
pop
orb
add
test
cmpsl
jl
adc
pop
pop
xor
xchg
push
pop
ja
inc
in
cmp
je
push
in
outsl
mov
cmpsl
cmpsb
or
loopne
xchg
inc
inc
add
xlat
mov
imul
fdivrl
orl
xchg
cmp
pop
lahf
inc
cmp
loope
ljmp
mov
sub
out
mov
ret
ss
mov
pop
add
test
and
or
bound
dec
add
cs
mov
add
rcrb
test
push
jo
in
cld
xchg
xchg
orl
lret
or
fsubrl
jmp
aam
cli
add
sbb
andb
pusha
xchg
call
or
lods
gs
cld
push
ret
jno
pusha
jl
push
addr16
loope
pop
pop
jns
push
out
hlt
imul
bndldx
nop
push
push
push
or
aas
mov
cmpb
adc
inc
movl
pusha
jecxz
mov
add
lret
nop
movsb
mov
fadd
cltd
add
test
sbbb
jno
xchg
mov
add
mov
xchg
test
mov
idiv
xchg
orl
sbb
mov
out
add
jl
mov
jne
das
add
lods
pushf
mov
loop
add
mov
int
add
adcl
in
adc
add
andl
push
fsubrp
xor
jns
imul
or
cmc
decl
nop
sub
and
xor
pushf
pop
call
pop
fmull
and
sbb
fists
or
push
fstl
out
ret
loopne
stc
xchg
testl
aas
jecxz
xlat
xchg
clc
add
push
flds
mov
outsl
xchg
push
pop
xchg
iret
add
and
inc
mov
push
or
insl
jo
mov
int
int3
xchg
in
and
push
lods
pusha
stc
mov
sbb
mov
inc
mov
shr
xchg
loope
sbb
pop
mov
ret
daa
lahf
sbb
sti
in
inc
imul
mov
lods
cld
sub
sub
adc
mov
pop
nop
jg
mov
or
nop
xchg
or
mov
push
jecxz
jp
jno
pop
sub
and
xor
in
adc
arpl
add
mov
xchg
das
negl
ds
sbb
cmpsl
sbb
add
mov
ja
add
testb
hlt
test
fidivrs
xchg
movsb
movsb
mov
pop
insl
inc
xchg
xor
test
rol
or
lcall
mov
icebp
add
mov
lret
jo
stc
sub
adc
or
cmp
push
ja
mov
arpl
cmp
lods
add
js
adc
adc
add
mov
and
mov
popl
mov
jmp
lods
xor
push
pop
add
mov
shr
dec
cmp
dec
cmpb
jl
mov
inc
lods
mov
or
xchg
pop
xchg
pop
xor
sub
sbb
and
push
jo
sbb
nop
enter
sub
mov
sarl
cmpsb
xor
or
into
test
push
pop
dec
mov
pushf
sbb
xchg
les
or
je
scas
mov
daa
mov
push
es
add
cs
jl
mov
dec
or
add
push
xchg
cmpsb
xchg
add
pop
jecxz
mov
hlt
inc
sarb
in
sbb
mov
decl
gs
pop
jg
add
stos
inc
adc
push
subl
push
leave
add
jae
sub
sbb
xchg
sub
aaa
add
and
cmp
aas
sbbb
cld
cltd
test
arpl
lods
push
mov
push
xor
in
clc
mov
dec
xor
inc
les
inc
gs
xchg
dec
clc
inc
add
js
or
mov
or
sarb
sbb
cld
cmc
cltd
xor
cmp
pop
inc
sahf
int3
pushf
xor
loopne
sti
xchg
push
mov
and
jne
test
jno
fnstenv
jle
add
dec
loope
adc
xchg
and
imul
mull
into
mov
cmp
add
mov
cmp
or
dec
or
in
lret
or
aad
xchg
into
add
jno
mov
add
shlb
jns
dec
mov
xchg
loope
sbb
sbb
loop
scas
pusha
push
out
mov
popa
jl
xor
add
pop
sub
sti
or
jae
sbb
jns
cs
and
adc
add
mov
mov
pushf
cld
repnz
out
add
sahf
mov
xor
sub
lods
lods
ljmp
test
cmp
sbb
cld
pop
test
sbb
adc
xor
int
pusha
pop
xchg
jo
cmp
test
gs
or
in
inc
sub
notl
mov
out
inc
cltd
xchg
punpcklwd
inc
sub
mov
in
add
rolb
sarl
sbb
adc
seto
mov
xchg
dec
in
pop
cmp
negl
daa
jns
scas
dec
mov
add
cmpsl
pop
xchg
push
arpl
scas
or
loope
mov
pop
xchg
fcoms
or
aam
dec
add
out
or
imull
xor
mov
or
push
xor
cld
xor
pop
sahf
fildl
cmp
jmp
aam
sub
mul
enter
add
mov
pcmpeqd
cmp
cld
xchg
aas
adc
or
jno
add
cli
cmp
sub
inc
cmpsl
xlat
jne
add
xor
hlt
nop
loope
cld
es
imul
cmp
mov
std
sub
push
cmp
mov
nop
call
enter
imul
pop
cmpsl
xor
pop
sub
pop
inc
jge
js
pop
stos
xor
jae
adc
outsb
push
pop
es
push
ja
sub
xlat
xchg
jp
daa
test
dec
add
ljmp
cltd
mov
cmp
sbb
or
sti
repz
add
add
ret
test
stc
jne
cmp
mov
jae
lcall
cmp
lahf
test
ja
and
lods
jnp
leave
sub
lcall
add
mov
xchg
mov
pop
add
sbb
setp
inc
test
jo
pop
jbe
pop
addb
test
xlat
xchg
lods
pop
jns
sbbb
xor
inc
fs
pop
cmp
jbe
add
imul
xchg
cmpsl
and
cmp
xchg
dec
pop
fwait
dec
cld
add
mov
fildl
scas
in
cltd
cmpsb
test
test
out
add
add
les
inc
sbb
test
loope
pop
outsl
sbbb
adc
pop
push
dec
in
cmpb
insb
add
and
movsl
and
jae
dec
add
push
leave
bound
add
dec
jmp
push
shrb
pop
adc
mov
mov
rcrl
jo
rclb
les
xchg
add
pop
xor
rcrb
add
data16
add
lock
mov
lea
bound
add
gs
xor
or
dec
rcr
pusha
inc
pop
inc
shl
insl
inc
cwtl
add
call
mov
and
add
cld
lea
push
or
sbb
movsl
clc
jp
inc
inc
loope
hlt
lahf
xor
cmp
je
out
aam
push
mov
pop
inc
incl
add
xchg
jo
or
xchg
aam
test
js
sti
adc
call
shrl
cmc
orl
push
cmp
sub
sbb
int3
mov
and
sub
mov
cld
lods
adc
cmpsl
adc
jge
sti
jmp
lock
imul
or
mov
dec
sbb
xchg
mov
rclb
in
pop
pop
enter
and
stos
add
cmpsl
decb
cli
inc
in
push
dec
std
inc
or
add
jno
jmp
int3
call
lock
xchg
pop
lret
sti
jo
jno
les
das
jmp
idiv
cmp
sbb
mov
inc
jbe
sub
cmp
cli
andb
gs
and
dec
pushf
sub
jnp
xchg
or
call
dec
addb
lret
rolb
pop
adc
out
pop
dec
adc
cmpsl
es
add
mov
push
mov
dec
push
sbbb
add
rcll
pop
add
cld
jae
add
sbbb
inc
fwait
add
xlat
sbb
cld
adc
and
mov
pop
xor
jne
or
mov
pop
mov
adc
cmpsb
notl
sahf
and
icebp
mov
gs
push
cwtl
push
xbegin
aad
bound
dec
inc
in
ja
scas
shr
add
add
sbbl
and
adc
cmp
add
loop
lret
sbb
sbb
pop
fbstp
jg
and
sub
xchg
dec
pop
ret
pop
or
lods
add
add
sahf
dec
sub
mov
adc
jo
xchg
cli
push
push
xor
add
clc
jb
insb
dec
push
sub
lock
mov
mov
rclb
cmp
subb
and
sbb
dec
sarb
gs
sbb
je
nop
test
add
adc
and
out
inc
xor
mov
scas
movsb
jnp
and
js
jle
push
int
fs
stos
mov
syscall
inc
push
fdivrp
or
adc
js
in
cwtl
test
aad
add
outsl
mov
addb
inc
sti
adc
jp
ljmp
ds
pop
dec
in
sbb
test
or
rcrl
sbb
mov
xchg
or
jl
add
sbb
popf
nop
clc
pop
dec
or
jle
cmc
push
or
and
nop
lea
jo
push
jb
mov
push
into
lock
add
or
cmp
xchg
sub
lods
jo
pop
and
nop
mov
push
add
leave
sub
add
cmp
negb
aam
jno
arpl
inc
aam
aas
pop
add
shlb
xor
or
sub
dec
xchg
inc
inc
popa
or
push
add
push
pop
mul
fs
adc
sbb
xor
jge,pt
inc
lea
mov
xchg
mov
sarb
push
les
push
mov
push
loop
clc
xorb
popa
gs
cwtl
shlb
sahf
cld
mov
outsb
add
sbb
add
lock
imul
xchg
mov
ss
adc
pop
inc
shlb
add
inc
insb
xchg
push
popa
fs
inc
xor
cltd
pusha
or
adc
lods
mov
sbb
sahf
inc
lds
and
pop
imull
inc
jno
gs
rorb
xor
jmp
jno
test
xor
loopne
jnp
adc
jae
xchg
stc
sbb
inc
pop
ss
add
fneni(8087
pop
sahf
fwait
dec
xchg
nop
adc
mov
jg
pop
mov
fcompl
mov
sub
push
test
inc
mov
xchg
out
inc
repz
sti
push
stos
into
jbe
in
adc
test
xchg
xchg
je
cmp
and
fstpl
jmp
outsb
fbstp
enter
or
xchg
adc
je
jecxz
call
cwtl
jno
sbb
add
test
adc
lods
cmp
pop
xchg
loope
cmova
nop
xchg
into
subl
inc
cli
cs
lcall
shl
pop
and
aas
jns
mov
cmpsl
sub
pop
rcrb
xchg
and
aaa
sbb
rcrb
shll
add
jb
cmp
stos
inc
jecxz
imul
fmul
add
mov
push
sbb
add
dec
ss
jp
push
push
add
imul
push
mov
pop
add
xor
jbe
add
mov
adc
cmp
add
mov
dec
dec
scas
mov
add
mov
mov
loopw
add
clc
push
pop
addl
lock
pop
and
dec
outsl
add
xchg
stos
bound
add
or
mov
adc
test
sub
xor
push
in
test
mov
mov
clc
in
into
add
sub
jl
shl
repnz
in
dec
add
fwait
add
aam
test
sbbl
gs
jmp
add
fs
and
les
cmp
lds
inc
insb
pop
lock
enter
das
pop
orl
or
negb
imul
push
andl
xchg
testl
cwtl
cmp
and
and
inc
hlt
xchg
lock
inc
ljmp
pop
jl
pusha
mov
test
or
mov
inc
jecxz
cmp
add
mov
dec
pop
adc
push
mov
pusha
push
hlt
aam
add
lret
call
and
or
clc
and
enter
push
push
ds
xchg
adcb
mov
jbe
mov
xchg
mov
test
adc
pop
mov
and
leave
add
mov
sbb
std
repnz
sbb
lret
xor
dec
das
mov
fs
cwtl
fidivrs
pop
das
jecxz
xor
sti
minps
add
xor
out
mov
cvtpi2ps
sub
stos
out
and
shrl
jns
in
sub
jmp
add
inc
and
push
or
or
sbb
push
and
cmp
and
mov
lock
sub
add
daa
out
outsl
mov
mov
lock
xchg
mov
loopne
test
xchg
cmpsl
lods
inc
pop
push
outsl
loopne
test
vmread
adc
mov
lcall
repz
inc
testb
push
jmp
fdivr
and
pop
sti
cli
ljmp
push
cld
lret
and
add
out
aam
inc
jne
cmp
lret
jge
add
std
test
xchg
stc
cmp
dec
outsb
rorb
lock
jbe
dec
fwait
test
icebp
fs
adc
pop
adc
push
fstpl
and
mov
add
subb
movsl
jmp
lahf
lcall
cmc
ja
cld
rclb
mov
andb
xchg
in
les
cmp
ljmp
mov
pop
aaa
push
push
dec
cltd
sbbb
lahf
adc
push
push
cmpsb
xchg
pop
fwait
lods
mov
adc
xor
and
jne
dec
andb
movsb
dec
cmp
add
je
pusha
add
fcmovbe
iret
ret
sti
xorl
jmp
mov
sub
sbb
into
and
adc
loopne
pop
cltd
mov
scas
inc
movsl
cbtw
or
nop
mov
jmp
sahf
mov
icebp
stc
popf
fsub
add
pop
sbb
mov
and
add
xchg
cld
mov
sbb
add
sub
inc
shlb
mov
in
sti
jo
flds
mov
outsb
or
add
cld
shl
add
push
push
xchg
pop
cmc
add
pop
jb
cmp
fsubs
enter
int
bound
inc
xchg
xorl
xchg
fnsave
or
dec
aad
or
lock
sbb
in
or
mov
addr16
inc
xor
inc
xor
adc
add
frstor
add
fbstp
into
cmp
cmp
push
flds
mov
dec
add
sbb
sub
pop
jo,pt
leave
dec
aam
jae
notb
add
outsb
jg
cltd
inc
popf
cmp
pop
lea
xor
lock
lea
add
pcmpgtw
add
or
sub
inc
inc
pop
pusha
dec
mov
inc
xchg
mov
adc
cmp
lcall
lret
and
dec
jmp
ja
inc
push
add
hlt
popa
cmp
movsb
pusha
aad
xor
cmp
xorb
ja
adc
add
sti
pusha
sub
push
push
call
int3
pop
mov
inc
sub
sub
add
cmpb
jne
movb
mov
push
push
push
push
call
add
mov
pop
pop
ret
push
mov
pusha
mov
mov
shr
mov
mov
jmp
xor
add
add
dec
or
jne
popa
leave
ret
