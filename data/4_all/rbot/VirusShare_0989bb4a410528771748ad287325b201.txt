into
in
iret
lret
push
jb
outsb
cmp
gs
out
inc
jo
jb
cmc
jne
enter
out
xchg
dec
mov
scas
fucomi
ret
jbe
sub
mov
cltd
sahf
fstps
das
fstl
xor
sti
mov
push
lahf
add
js
sbb
imulb
mov
scas
pause
mov
test
repnz
dec
dec
adc
or
cwtl
jmp
movsl
fcoml
fldl
sbb
enter
adc
adc
jp
or
addl
jbe
ljmp
in
and
and
sahf
mov
aad
push
cwtl
enter
enter
cwtl
imul
imul
xor
rcrb
mov
mov
mov
les
xchg
mov
ficoms
insl
int3
in
pop
jnp
jb
xchg
dec
or
sar
pop
pop
stos
add
and
push
sub
cmp
in
cmp
and
mov
adc
cwtl
mov
lahf
sbb
mov
add
mov
les
std
stc
push
xchg
sar
arpl
test
iret
out
std
xlat
xchg
and
pop
int
pop
imul
push
sub
mov
mov
data16
shl
setbe
pop
add
ljmp
cmp
std
sbb
ja
sbb
mov
subl
clc
fcmovu
push
xor
imul
mov
jmp
xorb
clc
in
add
add
adc
inc
daa
jge
jno
test
aas
out
jnp
or
push
cmp
inc
scas
inc
xchg
movsb
sub
mov
out
in
dec
sbb
push
mov
lret
inc
outsb
xchg
inc
outsb
fsubrl
inc
test
xchg
lret
out
adc
mov
fisubrl
sti
loope
xchg
cs
mov
cmp
pop
sub
pop
push
ja
jo
pop
flds
adc
push
leave
aam
cmp
push
leave
mov
int
dec
mov
inc
movsb
push
mov
jecxz
inc
cmpsl
cmp
xor
mov
add
ds
into
cmp
lea
faddl
dec
jle
lods
or
pop
roll
js
idivb
andl
xor
mov
rcr
push
xlat
add
roll
aad
neg
xor
xor
sub
cld
xor
sub
fdivr
sub
fwait
loop
shrl
popf
mull
sbb
push
jb
cmp
cmp
cmpsb
addr16
mov
subl
or
ficompl
mov
and
out
sbb
repz
sti
jecxz
adc
movb
push
sbb
imul
int3
and
or
lret
aas
sbb
pushfw
sahf
adc
push
jbe
pop
push
sbb
je
mov
fdecstp
pushf
jp
fisttpll
test
in
dec
sub
enter
push
movl
jge
les
xchg
aas
or
sub
xor
sar
bound
push
pop
pop
stos
test
pop
mov
daa
jo
or
jmp
std
xor
inc
into
fwait
and
test
pusha
iret
ja
push
imul
and
lods
das
jne
inc
or
cmp
cmpsb
shll
push
mov
add
stc
sub
decb
outsb
lahf
or
lret
xchg
ret
imul
push
mov
and
pop
xchg
scas
scas
push
mov
jmp
xchg
dec
sbb
stos
sahf
out
xor
rorl
mov
popf
jle
or
mov
jo
fs
scas
pop
sahf
testl
add
les
fdivrs
je
mov
mov
loopne
in
mov
jmp
mov
fidivrs
fcmovnbe
filds
pop
cld
mov
fimull
mov
cs
sub
xchg
xchg
in
push
inc
subb
movsb
jmp
cltd
pop
xor
sub
push
push
pushf
xchg
push
ret
xchg
xchg
neg
outsb
mov
jmp
xor
jne
ljmp
ret
cwtl
mov
inc
jno
aaa
and
jmp
xchg
fwait
and
and
add
lret
in
cmp
js
cwtl
xor
jle
nop
adc
stc
es
mov
orb
pop
mov
test
bound
testb
adc
and
ret
cmp
aas
out
xor
cmp
ret
fbld
cs
add
or
test
and
xor
push
int3
and
sahf
out
ljmp
fcmovnb
mov
imul
adc
dec
adc
popf
std
lea
int
fisttpll
subb
mov
lds
push
rolb
iret
add
dec
xchg
push
mov
sub
or
cld
cmp
xchg
aaa
in
or
sub
push
push
lods
cmp
into
mov
int
sub
icebp
sub
aad
mov
out
jbe
inc
scas
xchg
fwait
les
imul
lahf
lods
mov
aad
dec
jp
in
sub
sbb
mov
in
jp
mov
push
les
clc
les
add
inc
pminub
sub
jno
sub
inc
dec
sbb
fwait
roll
aad
lahf
mull
fsubrl
xor
xchg
push
add
in
in
enter
fcomps
ds
mov
mov
dec
pop
sub
aaa
push
sub
loopne
jb
imul
adc
mov
rcll
mov
test
cmp
insb
pop
into
push
sti
mov
mov
jge
and
mov
mulb
cmp
inc
hlt
pop
scas
insl
sbb
push
pop
jns
mov
xchg
popa
jle
add
add
fadds
or
xchg
xor
rdmsr
divl
repnz
pop
je
lds
sbb
pop
add
jb
in
cmp
inc
js
dec
fisttps
mov
je
xlat
movsb
sub
add
push
je
inc
dec
stos
xor
adc
aas
dec
adc
cmp
jb
daa
ret
cld
sub
sahf
data16
mov
inc
pop
mov
sbb
mov
mov
negl
pop
and
push
lret
dec
shrb
aaa
push
fsubl
shrl
sub
push
pop
cmp
je
cmp
jne
int3
push
push
add
pop
pop
loop
pop
jb
test
rol
jno
push
push
jl
sub
pop
pop
stc
cmc
cmc
stc
push
push
push
push
lea
push
push
push
push
push
call
ret
dec
lea
push
in
and
testb
ds
mov
mov
jb
mov
stc
fistps
jb
sbbl
pop
sub
pop
mov
jl
or
push
push
pop
cmp
je
cmp
jne
int3
inc
dec
loop
pop
xor
push
push
test
pop
pop
push
push
pop
cmp
je
cmp
jne
int3
or
stc
loop
pop
cmc
cmp
clc
stc
lea
push
call
lcall
pop
insb
mov
push
inc
and
jns
mov
jge
push
inc
jp
mov
push
jnp
jae
jnp
lock
das
dec
stos
loope
js
pop
sub
loop
jecxz
and
xor
push
mov
es
ror
adc
stc
mov
out
dec
sub
add
out
inc
into
mov
divl
pop
arpl
scas
les
je
mov
inc
push
or
pop
jns
push
push
pop
pop
and
jmp
jmp
call
test
or
cmp
push
rol
pop
jl
add
ror
and
stc
add
mov
push
dec
pop
je
cmp
and
js
test
stc
dec
inc
clc
push
add
mov
pop
jg
push
jns
rol
pop
nop
and
and
jg
js
sub
push
ja
push
cmp
pop
pop
jo
jae
xor
lea
push
add
shr
cmc
push
add
push
pop
pop
jle
push
jle
js
or
pop
push
cmp
pop
loop
jecxz
aad
or
push
xchg
xor
loop
daa
inc
xor
jbe
stc
addr16
mulb
arpl
mov
loope
jmp
lcall
pop
and
xor
pusha
inc
or
test
sub
or
je
push
push
push
pop
pop
pop
mov
ja
push
xor
pop
cld
xor
xor
nop
cld
push
pop
and
cmp
je
loop
jecxz
cmp
ja
ret
add
lahf
push
out
std
mov
inc
inc
jmp
fsubrl
sub
fistpll
cld
pop
movsb
inc
movsb
mov
xor
lods
repz
and
je
lods
push
mov
add
pop
ja
cmp
sub
test
xchg
push
and
pop
nop
cmc
push
mov
push
xor
pop
pop
push
mov
pop
ror
push
push
push
rol
pop
pop
pop
cmc
push
mov
push
xchg
movsl
xchg
mov
pop
push
call
mov
xor
in
mov
in
dec
sbb
data16
das
popa
jnp
int3
test
jp
push
shrl
mov
sarb
fisubl
mov
jle
pop
pop
inc
jmp
push
pop
dec
mov
xor
je
or
stos
lods
pop
adc
bnd
adc
lods
push
inc
test
jbe
cmc
std
and
shrb
mov
repnz
cmpsl
stos
jle
and
int3
adc
out
out
pop
jecxz
push
add
scas
fst
cld
sub
addl
push
sbb
push
cmp
add
sub
sahf
mov
mov
xor
movsl
mov
adc
ljmp
outsl
inc
mov
outsb
jae
mov
xchg
call
test
jmp
insb
jecxz
mov
push
test
into
cmpb
movsb
dec
mov
push
bound
loop
lahf
repnz
popf
adc
jmp
lcall
andl
mov
push
ss
jo
loopne
sti
out
jl
mov
inc
push
into
mov
push
add
daa
mov
inc
es
je
std
je
jno
and
imul
adc
decb
sub
scas
cld
outsl
jl
shll
icebp
lcall
add
cwtl
imul
and
and
test
stos
sub
fdivrs
out
or
std
xor
ss
daa
out
nop
inc
dec
popa
je
push
push
push
push
pop
pop
pop
pop
jg
or
jl
jbe
push
add
pop
push
add
pop
push
call
mov
pop
cwtl
dec
inc
pop
dec
mov
fldt
aad
xor
aad
int
lcall
ret
in
pusha
lahf
pop
xor
jp
shll
xor
sub
fadd
cmp
loop
cmp
xchg
add
pop
dec
jne
push
push
mov
pop
pop
jmp
imul
fistpll
mov
cli
xlat
mov
sub
jp,pn
movsb
cmpsl
fldt
out
jae
cmpl
call
adc
cmpsl
and
cmc
enter
sahf
pop
pushf
jg
cmp
insb
or
adc
lcall
data16
and
cmpsb
xorl
es
shr
sahf
popa
pop
sub
cltd
jae
into
xchg
movsb
and
cmpsl
jns
pop
in
xchg
inc
daa
jecxz
pop
mov
loop
push
sbb
jnp
faddl
aaa
xchg
and
ja
movsl
fiaddl
mov
lea
jle
pop
pop
adc
and
fisttpl
neg
cld
and
dec
push
xchg
inc
cmp
pushf
mov
pop
lods
test
mov
sbb
sbb
sub
nop
or
hlt
push
mov
sti
mov
fisttpl
mov
pop
cmp
and
inc
cltd
addb
or
movsb
sub
test
or
pop
inc
inc
cmp
jle
sarb
pop
inc
nop
out
cs
and
int3
fdiv
in
loopne
flds
push
add
xchg
sbb
xchg
mov
lcall
fimull
lahf
hlt
rcrl
jl
cmp
push
xchg
push
scas
cmc
jge
lods
mov
mov
cltd
dec
aaa
enter
aad
mov
or
xchg
pop
loope
xchg
xor
sti
rcr
xor
fsts
jno
test
jp
push
push
ret
xchg
aam
xlat
push
out
xor
jle
lea
push
pop
aam
imul
inc
fcom
and
xchg
add
add
xchg
sti
mov
jp
in
dec
mov
int3
test
push
mov
push
fdivrl
cmp
cmpsb
mov
inc
insb
aam
push
adc
mov
call
movsb
mov
cld
lea
pop
fists
mov
movsl
int
push
sub
dec
pop
xchg
mov
sti
cmp
insb
jl
cmp
shlb
xor
icebp
out
fdivs
leave
stc
lret
fdivs
jb
mov
std
mov
mov
lods
push
or
xlat
sti
and
xchg
mov
inc
inc
adc
pop
sbb
fld
add
repnz
cmp
mov
add
lret
shlb
fimuls
sbb
pop
push
lds
ret
inc
fidivs
inc
sub
sub
rcll
repz
pop
mov
xor
loopne
out
dec
push
pop
repz
jp
sub
jg
jl
in
push
push
fwait
pop
js
xor
shrb
fcmovne
pop
in
es
mov
push
lret
cmp
scas
andb
or
fnstenv
push
aaa
fildl
test
cmp
lahf
sbb
pop
fnstenv
repnz
lret
lods
mov
sub
push
adc
mov
rcl
insl
jnp
push
pop
push
mov
sub
jp
push
mov
push
push
jbe
fstpl
insb
cld
ret
mov
int3
mov
imulb
sbb
enter
adc
lret
jb
push
inc
arpl
lods
mov
push
mov
cmpsl
movsl
les
lret
jle
lcall
xchg
mov
mov
fisubl
push
xchg
dec
push
push
inc
movswl
dec
cmp
and
in
ret
jb
push
fcmovu
xor
mov
and
jp
lret
je
mulb
sub
or
push
ja
ret
mov
mov
pop
test
cli
into
leave
mov
loope
pop
mov
js,pn
cmovnp
sub
shlb
in
fistpl
jne
mov
out
add
mov
mov
push
cli
push
lret
loop
cmpsb
add
push
sub
mov
push
and
out
inc
inc
out
adcb
push
mov
xchg
sbb
or
mov
push
fmulp
xor
scas
push
pop
insl
xchg
sbb
inc
mov
les
sarl
daa
adc
pop
jnp
mov
lahf
mov
sahf
ret
shrl
jg
popf
mov
push
nop
jge
push
sbb
or
sbb
les
sbb
cltd
jo
out
jns
mov
lret
lret
fdivl
mov
aas
int3
std
or
cmp
fiaddl
aam
sub
repnz
sbb
add
stos
stos
mov
clc
mov
loop
pop
gs
fisubrs
les
mov
scas
sbb
or
lea
push
jno
sub
mov
xchg
push
sbb
push
cmp
int3
cmp
mov
nop
or
nop
cltd
pop
lret
int
mov
rcrl
js
mov
rorl
loop
xor
scas
test
invd
sbb
adc
xchg
sub
add
add
push
dec
sub
inc
aad
ffree
cmpsb
or
ja
insb
mov
mov
xor
mov
stos
mov
push
ficompl
xchg
pop
sbb
xchg
decl
and
popa
dec
outsl
mov
pop
jle
cli
add
pop
ljmp
jbe
fs
dec
adc
mov
das
gs
jl
mov
mulb
pop
inc
adc
pop
inc
call
cmp
xorb
cmp
sahf
inc
mov
fidivrs
push
or
dec
std
sbb
aam
lods
lret
and
stos
dec
fisttpl
in
lret
stc
adc
testb
jns
jg
test
cmp
lds
sub
in
jb
mov
pop
imul
sbb
into
addr16
jge
insb
ja
sahf
clc
mov
out
mov
lea
and
movsl
fcomps
add
xor
test
mov
push
iret
xchg
mov
jnp
mov
jle
xchg
insb
test
cmc
sub
lea
cmpsl
daa
mov
addr16
clc
fcompl
mov
or
cmpsb
out
mov
movl
repnz
jmp
iret
arpl
aam
xor
pop
sbb
fsubrp
out
mov
xchg
pop
rclb
lock
cmc
inc
inc
fistpl
mov
lahf
testb
cmp
call
or
adc
sub
enter
inc
jge
test
icebp
xchg
stc
rclb
fimuls
fdivs
jle
idiv
sub
arpl
mov
mov
add
adc
dec
in
xor
dec
cmpsb
scas
inc
jmp
out
jo
test
sub
push
adc
repz
xor
dec
inc
push
mov
es
lcall
lret
jo
lahf
pop
orb
fisubs
sub
shl
jbe
inc
sti
pop
addl
cltd
popa
or
ja
popa
imul
mov
push
cmp
fnsave
outsl
cs
inc
sub
lods
dec
pop
in
jno
pop
daa
cmp
push
sets
test
std
in
imul
push
xor
in
sub
push
jbe
out
shll
daa
jae
push
sbb
sub
pusha
cli
inc
aam
flds
or
xchg
fisubs
mov
cmc
xchg
adc
push
mov
adc
mov
add
xchg
sbb
lods
xchg
push
add
loope
sub
ss
std
jl
dec
test
enter
sarb
scas
sub
int
pop
fwait
dec
shrl
shl
ja
push
dec
or
leave
dec
imul
lcall
movsb
cmc
jecxz
push
loop
push
lea
and
dec
jo
push
inc
test
repz
daa
insb
jmp
pusha
stos
cli
mov
push
mov
call
xchg
push
loopne
dec
daa
dec
push
inc
adc
push
dec
cmpsl
sbb
fwait
icebp
inc
add
mov
push
pop
fwait
jbe
je
pop
xchg
pop
jae
mov
jns
or
sarl
push
subl
jne
push
dec
sahf
push
pop
sub
xchg
mov
mov
adc
and
add
mov
jno
lcall
lock
ljmp
jl
push
push
das
mov
xor
cmp
test
sarl
and
js
mov
jae
cli
sub
jmp
dec
sarb
inc
cld
in
jecxz
sbb
orb
inc
xchg
les
pop
insl
ret
xchg
push
scas
gs
mov
jmp
add
jno
push
xchg
pop
int
lahf
cld
imul
test
mov
imul
jae
outsb
adc
sahf
add
pop
jg
cmp
dec
add
aaa
xchg
fstl
jmp
pop
das
pop
in
or
faddl
movsb
ds
out
ret
cltd
xchg
push
and
jp
jmp
sub
ret
std
mov
shl
push
push
mov
push
outsb
add
and
cli
decb
push
sub
adc
lods
inc
dec
jnp
out
fstps
xchg
xchg
out
insb
jmp
dec
jmp
add
pop
enter
adc
dec
fsub
leave
sub
or
subb
xor
adc
sbbb
clc
daa
inc
xor
cmpsl
mov
lock
adc
sbb
lock
xchg
xor
ja
stc
pusha
popa
add
das
movsb
push
jnp
dec
das
dec
mov
or
adc
dec
cs
rcrl
ret
mov
lods
xor
cmp
lret
push
mov
xor
xchg
std
dec
lods
shlb
xchg
add
mov
adc
clc
push
sbb
sub
xchg
push
adc
loope
hlt
xchg
mov
les
fldt
aas
pop
nop
fdiv
or
lds
mov
stc
mov
or
xchg
loop
pop
nop
jnp
ds
push
in
lods
mov
dec
push
dec
lods
cmp
add
mov
jecxz
dec
push
xchg
aam
pop
xor
push
rcrb
and
sahf
and
lcall
jg
jmp
push
xlat
out
movsl
lcall
jnp
fsubrp
push
inc
mov
jnp
fwait
mov
mov
fcompl
maskmovq
divl
psadbw
jg
addr16
sub
mov
mov
cld
andb
lods
cmp
mov
insl
repnz
and
sti
mov
mov
pop
sbb
mov
inc
jmp
add
nop
test
add
lock
divb
idiv
mov
iret
add
mov
nop
into
xchg
sahf
in
lds
add
add
mov
sub
and
sub
mov
out
push
pusha
and
sbb
xlat
popa
mov
jnp
stc
movsl
add
out
lods
int
adcl
add
mov
push
cwtl
xchg
xchg
cmpb
arpl
sub
ror
add
mov
dec
dec
add
sub
daa
es
xchg
inc
les
mov
cmpb
arpl
cmp
int3
push
test
test
mov
lahf
mov
dec
fidivs
mov
je
pop
xchg
xchg
inc
imul
cmpl
out
es
iret
sub
ret
insb
mov
cmp
scas
fcmovnbe
and
push
mov
adc
repz
cmp
xor
pop
pop
push
jg
andl
filds
daa
mov
jno
in
popa
dec
frstor
pusha
xor
jb
xchg
out
jo
lea
pop
or
xchg
mov
and
adc
or
pusha
js
dec
bound
fs
and
or
sahf
sub
sub
sub
imul
leave
mov
repnz
inc
outsl
and
push
pop
lret
cld
mov
imul
dec
mov
xor
jbe
push
shlb
outsl
aaa
sbbb
push
testl
lcall
jp
cwtl
in
push
addb
ss
or
std
push
out
fcomp
adc
out
shl
mov
sbb
fwait
shll
jl
fldl
mov
jp
adc
push
cmp
lods
ds
jno
and
inc
ds
cmc
aaa
dec
jae
lret
test
xchg
mov
add
pop
insl
inc
push
mov
in
jb
xchg
ret
dec
in
mov
popa
xorb
xchg
push
fnstsw
hlt
jb
mov
pop
das
mov
push
aad
pop
mov
pop
subl
mov
sub
dec
mov
aas
arpl
daa
mov
cmp
loope
xchg
fldcw
sub
es
jl
pusha
jo
cmc
add
cmp
aad
cmp
subl
ficoml
mov
popf
mov
fiadds
cmp
push
call
and
dec
mov
mov
js
sub
fistps
sbbl
xor
cmp
movsl
add
xor
mov
jo
and
xchg
jp
mov
int3
jmp
insl
xor
pop
dec
daa
or
push
cmc
fists
mov
cmp
pop
inc
fwait
xchg
outsb
rcrl
orb
subb
lock
vcvtps2dq
in
pop
xor
loopne
fstps
sbbl
adc
push
movsl
push
aad
fdivrs
int
push
ds
mov
mov
fildl
jae
jns
lret
bndstx
in
cs
out
ucomiss
adc
mov
push
sti
adc
test
add
mov
out
cmp
fwait
add
repnz
call
pop
outsl
clc
mov
repnz
xor
push
loop
mov
lahf
push
cmp
sub
push
cmpsb
fwait
loop
add
push
xor
xor
inc
into
loop
push
jno
cmpsl
rcl
les
in
xchg
cmpsl
push
sbb
xlat
jge
movsl
ss
shrl
out
xlat
inc
dec
in
sbb
loopne
mov
mov
dec
sub
ret
push
sarl
fs
lcall
lcall
jp
and
test
test
mov
mov
jb
cs
push
not
js,pn
outsl
xchg
xor
clc
je
ror
js,pn
adc
jo
jno
adc
pop
inc
int
les
sbb
mov
cli
xor
xchg
jo
dec
inc
mov
sub
enter
push
nop
mov
push
ror
dec
stc
lods
ret
sub
or
dec
sub
ret
mov
push
jo
push
mov
mov
ficompl
ret
mov
xor
flds
roll
stos
mov
aam
push
jb
pop
int
fwait
bnd
pop
clc
inc
loopne
cmp
mov
or
insl
jmp
cmpsb
push
je
popf
in
insl
inc
inc
leave
pop
shlb
jl
inc
push
shlb
imul
mov
jae
lea
mov
add
xor
cmp
and
mov
in
pop
mov
dec
cli
test
mov
jl
jge
pushf
pop
repz
jecxz
in
inc
jb
push
mov
into
fsubrs
cwtl
sbb
xchg
ret
lods
cmc
dec
aas
cltd
xor
inc
sub
aad
ljmp
push
repnz
into
mov
cmp
in
push
jmp
mov
movsl
sbb
pusha
mov
mov
test
push
cld
pusha
rcrb
dec
mov
add
push
xchg
mov
lahf
push
jne
mov
adc
and
sarl
repnz
mov
clc
inc
fbstp
ds
push
fistpll
shlb
ret
dec
xor
xor
fsubr
jl
icebp
xor
dec
lahf
insb
sbb
xchg
fisttpl
or
insl
hlt
xchg
jo
xchg
movsb
imul
mov
jns
add
inc
push
sahf
in
and
outsl
dec
lea
test
xchg
cmpsl
test
insb
push
push
lods
adc
into
subl
pop
push
or
xchg
mov
cmp
sbb
cmp
mov
addl
movsl
mov
inc
sub
add
shll
jae
sbb
sbb
dec
dec
xor
dec
daa
aam
negl
imul
inc
mov
add
repnz
cli
in
cmp
push
xchg
sbb
inc
and
dec
mov
cmp
or
or
sbb
pop
xor
jle
xchg
adc
mov
addl
mov
out
push
xor
in
lock
push
mov
fs
jbe
stos
cmp
or
cmp
push
lods
mov
imul
mov
outsb
mov
and
inc
mov
or
mov
dec
loop
arpl
jo
sbb
and
add
pop
inc
mov
aas
cwtl
sarl
dec
xorb
out
pop
outsb
mov
lea
push
fistpl
enter
push
pusha
jns
lret
lret
out
jl
cltd
push
hlt
in
aad
enter
jp
mov
inc
jns
pop
fsubl
popf
sbb
jno
xchg
imul
stos
push
lea
cmp
scas
rcr
out
insb
lahf
sub
mov
fwait
dec
dec
or
jmp
iret
mov
pop
roll
push
pop
jge
outsl
jo
mov
enter
xchg
sbb
out
mov
mov
or
movsb
aad
xchg
lods
mov
leave
popf
rcr
push
test
xchg
mov
ja
mov
mov
bound
or
dec
jge
mov
lods
testl
test
lret
cmp
adc
xor
inc
ss
test
mulb
dec
cli
lret
out
xchg
lods
jmp
inc
xchg
enter
mov
and
sbb
ljmp
xor
les
sahf
andb
xchg
fs
xor
push
pop
iret
xchg
push
jecxz
into
jg
or
adc
out
push
jae
sbb
push
int3
push
lods
fs
shlb
xchg
sub
sarb
jg
jns
repz
xor
fdivrs
rol
sti
push
jp
aam
inc
icebp
arpl
mov
sub
bound
fistl
into
arpl
std
mov
scas
sbb
adc
sub
jne
jne
inc
es
pop
inc
sub
mov
scas
dec
ja
dec
or
mov
cmp
mov
mov
mov
pop
mov
adc
outsb
mov
xchg
xor
add
jb
jecxz
loop
in
pop
sti
data16
movsl
mov
enter
sbb
iret
add
lahf
ds
sahf
pop
jl
jns
sbb
xchg
bound
inc
cmp
repz
cwtl
loopne
xchg
mov
data16
xlat
sbb
dec
inc
lret
cwtl
mov
mov
mov
push
jo
cmc
mov
fs
scas
dec
imull
movsl
cmpl
loopne
xor
out
insb
mov
mov
mov
daa
cmp
jae
cmpsl
jecxz
sub
xor
add
sub
icebp
add
sub
mov
pop
sbbb
fcomps
jne
mov
add
out
jl
ret
push
xor
sub
popf
addr16
lea
lcall
movsl
adc
add
out
mov
jo
shlb
cmpsl
cmp
in
and
lret
cld
mov
hlt
imul
mov
mov
xchg
dec
jno
pop
or
xor
mov
pop
fmull
enter
out
sbb
pop
push
outsl
mov
add
test
add
repz
cltd
and
mov
stos
xchg
fs
adcb
das
arpl
lcall
aam
push
jge
out
xor
scas
andb
fimull
sub
push
mov
dec
sar
rcrl
mov
pop
jmp
sbb
xchg
adc
lock
or
sarl
roll
mov
notl
mov
divl
out
stos
and
cmp
test
test
movsl
push
and
sub
shlb
mov
xchg
loopne
cwtl
mov
pop
or
push
push
or
push
call
loopne
call
xor
stos
xchg
es
push
insb
sub
sub
test
adc
popa
adc
mov
fbld
and
or
and
sbb
out
test
jp
leave
enter
cmp
sbb
into
mov
push
dec
and
jg
dec
jge
add
lods
stos
arpl
xchg
or
incl
or
push
mov
repz
push
lea
dec
into
jns
sbb
adc
out
je
or
mov
testl
mov
jge
xor
inc
mov
sub
arpl
js
jl
ds
mov
mov
push
jae
js
movsb
and
outsb
mov
push
idivl
scas
jnp
leave
pushf
cmc
fbstp
dec
inc
pop
rcrb
xor
push
and
mov
stos
testl
jmp
sbb
and
insb
inc
int
aam
std
lds
mov
mov
mov
insb
fstpl
sub
or
pop
adc
out
lds
int3
add
cli
fs
cmp
inc
mov
leave
stc
ret
invd
or
adc
cwtl
add
xor
sbb
mov
mov
push
out
pushf
test
aam
or
mov
adc
adc
aam
stos
push
aad
lret
jmp
pop
cmpsb
sub
ret
fidivrs
add
pop
insb
pop
and
outsl
sbb
xchg
data16
inc
outsb
sbb
pusha
or
mov
lds
jne
pop
cs
add
xchg
pop
frstor
and
jmp
not
shrb
aaa
stc
jnp
xor
and
ds
push
xor
xor
mov
cmc
out
jnp,pt
add
sarl
adcl
pop
stc
xchg
pushf
or
push
pushw
xchg
loop
insb
mov
out
mov
or
jg
mov
lret
sub
imul
mov
std
mov
push
in
lahf
add
mov
and
mov
je
scas
in
inc
mov
lret
adc
or
sarb
mov
addl
push
or
fcoml
incl
jge
aad
mov
dec
dec
loopne
movsl
push
sub
or
xchg
shll
jmp
xor
adc
shrl
lea
test
xor
sub
adc
ds
xor
push
inc
jae
cwtl
add
xchg
sbb
mov
dec
adc
push
test
adc
js
mov
cli
jnp
mov
or
xlat
repnz
adc
sbb
mov
iret
in
and
mov
fistl
inc
jbe
test
addr16
test
cli
gs
lods
dec
ret
mov
movsb
in
push
jns
arpl
push
jg
int3
outsb
add
inc
aam
dec
andl
test
mov
push
out
sbb
mov
mov
repz
jne
add
add
jle
dec
inc
inc
mov
pushf
jbe
addr16
jmp
mov
ja
arpl
jbe
rcrl
ffreep
outsb
mov
pop
insl
imul
mov
leave
mov
adc
repz
push
popf
and
clc
es
sti
xor
sub
xchg
test
loop
pusha
inc
fistpll
cmp
or
nop
pop
cmp
popa
int
mov
test
das
push
leave
pushf
dec
gs
stos
mov
test
mov
nop
mov
sbb
leave
popa
cmp
add
xchg
lds
push
outsb
xchg
sub
push
dec
ret
jae
sbb
or
xor
dec
int3
jnp
loope
inc
rcl
sub
movsb
out
fildl
inc
sbb
out
mov
test
or
jle
inc
jnp
sub
mov
cmpsl
int3
int3
pusha
mov
mov
int3
and
push
mov
rorl
jbe
bound
popa
daa
or
mov
test
pop
mov
dec
or
dec
xor
sbb
aam
data16
or
sbb
cmp
push
sub
pushf
push
sbb
pop
nop
xor
maxps
cli
cmp
and
jg
adc
les
push
sahf
stos
out
clc
push
jno
push
sbb
faddl
add
repz
or
sub
mov
xchg
repz
loope
and
xchg
decb
arpl
and
in
pop
sub
hlt
or
je
shl
or
pop
mov
sub
jmp
pop
cltd
jbe
sub
or
jmp
pop
dec
divl
int3
or
imul
jae
ds
iret
xchg
adc
pop
sahf
sbb
pop
pop
scas
or
jecxz
je
xor
mov
in
inc
mov
and
jno,pt
outsb
sahf
popf
mov
aaa
push
mov
les
mov
and
rcrb
mov
jb
cmp
in
cmpb
mov
mov
negb
cltd
lds
inc
sbb
add
in
rcrl
ficomps
pop
mov
pop
xlat
addr16
mov
out
adc
scas
fisttps
push
and
push
inc
lods
xor
pop
stos
ljmp
out
sbb
sub
xchg
sarl
sub
fcomi
popf
out
sbb
rorb
mov
repz
data16
popf
pop
sbb
pop
es
enter
hlt
and
addr16
dec
mov
sbb
add
push
imull
aaa
cmpsl
inc
add
push
add
or
pop
pop
pop
idivb
cmc
js
fadds
shrl
cwtl
xchg
inc
in
clc
xor
dec
lods
mov
lock
lret
stos
lcall
in
cmp
push
lret
popf
stc
sbb
inc
xchg
cmpsb
out
scas
mov
repnz
pop
int
lret
sti
jae
mov
stos
dec
pop
xor
stc
bound
pop
and
add
xchg
and
pop
call
shr
mov
enter
cmp
out
and
cmpsb
inc
lock
sub
leave
xchg
dec
or
jb
sub
inc
enter
xor
cmp
insl
jecxz
lret
cmpsl
xchg
pop
scas
out
popf
scas
mov
dec
ljmp
mov
xor
dec
repz
mov
pushf
or
test
and
xchg
add
and
shll
or
push
scas
dec
movsl
mov
jnp
cmp
xor
outsb
mov
xor
inc
in
push
fmull
push
arpl
pop
xchg
into
cmp
sub
inc
movsl
pop
lods
fisttps
adc
cmp
xlat
inc
cmpsb
pop
out
cmp
pusha
push
stos
in
cmp
lret
mov
cmp
cld
call
divb
popa
ja
iret
icebp
shl
mov
xor
and
push
cld
jg
xchg
sub
hlt
and
dec
inc
in
loopne
stos
dec
movsl
pop
enter
xor
psrad
xor
xor
sbb
jmp
sub
mov
or
icebp
xor
adc
je
xor
xor
pop
mov
loopne
cmp
nop
sub
int3
popa
or
aaa
sub
cmp
inc
pop
test
push
imul
mov
xchg
repnz
ja
out
movsl
sub
scas
icebp
mov
cs
int3
push
ljmp
dec
popa
inc
test
test
pop
stos
negb
mov
mov
pop
sub
jl
sti
imul
push
mov
sub
in
adc
hlt
cmc
mov
aam
push
cmp
jg
push
jle
push
add
cli
scas
rcrl
or
push
adc
xchg
aaa
xchg
mov
sub
cmpsl
popa
and
pop
arpl
jno
aas
leave
sbb
xchg
loope
cmpb
pop
mov
mov
inc
repz
jne
mov
mov
inc
mov
and
adc
xor
loopne
dec
mov
jl
and
mov
jno
aaa
scas
cmp
dec
cmpsb
inc
add
outsb
push
in
push
xor
add
and
pop
stos
or
inc
fidivl
mov
pop
mov
stc
inc
adc
inc
fs
lea
sbbl
pop
jge
lcall
mov
cmp
push
push
inc
loopne
inc
out
xor
dec
stos
push
mov
lcall
insb
xchg
cmp
mov
aas
sbb
popa
popf
adc
add
fwait
popa
decb
lock
jl
repz
add
push
mov
jb
icebp
xor
out
shrl
dec
es
dec
or
add
sub
and
or
imul
sub
dec
add
imul
adc
pop
scas
movsb
mov
cwtl
imul
jle
inc
adc
push
add
movsb
inc
mov
sahf
push
pop
mov
push
jmp
fistl
fldcw
loop
cmp
sbb
xor
jmp
out
sbb
test
adc
xlat
das
outsb
dec
add
aas
and
push
leave
mov
sbb
rdtsc
jno
lock
aaa
aas
cmpsb
adc
add
shrl
out
call
in
imul
popf
push
icebp
fistps
shll
jp
inc
push
test
andb
movsb
add
push
push
push
cmp
mov
lret
addr16
pop
roll
push
iret
out
mov
jb
xchg
ja
jbe
mov
xchg
pop
sub
jb
iret
test
rcr
jecxz
push
imul
fsubs
jmp
push
dec
and
sub
gs
ds
pusha
out
mov
cmp
mov
push
xor
mov
jge
fwait
mov
xlat
xchg
sbb
xchg
je
dec
add
cmp
cmpb
pop
inc
mov
sub
lret
es
mov
dec
dec
popf
and
xor
mov
test
and
out
sbb
in
stos
adc
mov
int
jecxz
mov
cmp
sub
push
push
call
push
movsl
sarl
loopne
mov
movsl
or
add
mov
push
mov
enter
aaa
push
fstl
adc
pushf
btc
sti
xchg
lahf
jb
faddl
and
mov
and
dec
lret
sub
mov
add
inc
cwtl
bound
aad
pop
sub
push
jecxz
arpl
inc
pop
rorl
sub
ljmp
sub
dec
xchg
lock
or
into
sub
mov
jnp
test
loope
fldcw
test
sbb
and
xchg
inc
fadds
pop
pop
mov
sti
loope
das
sbb
adc
jmp
push
and
add
adc
sbb
xchg
cmp
nop
push
cmp
add
mov
mov
jb
or
mov
ljmp
sub
sbb
cmp
xor
xor
adc
and
shll
in
jbe
dec
sar
push
jae
add
mov
xchg
fisubs
or
int
aad
cmp
pmaxsw
arpl
arpl
jge
jmp
mov
enter
sbb
adc
je
shlb
mov
jno
hlt
or
pop
xor
adc
leave
inc
js
sbbb
nop
lcall
ret
xchg
xchg
leave
pop
cmp
insl
fcmovnu
push
arpl
fs
mov
jg
mov
xchg
bound
sbb
jo
xor
sub
sbb
add
xchg
xor
add
push
mov
fildll
cvttps2pi
jmp
cli
cmp
push
push
cld
jbe
icebp
cmpsl
dec
and
mov
scas
lret
movsl
inc
xchg
and
xchg
cwtl
push
out
pop
ljmp
mov
testb
idivb
mov
or
pop
les
dec
mov
pop
push
cmc
add
outsb
dec
sbbl
push
sub
jb
cli
daa
xor
lcall
std
mov
outsl
aad
mov
jb
and
or
mov
dec
decl
test
pop
repnz
stos
sahf
pop
sub
imul
xchg
lret
xchg
sbb
xor
sarb
push
adc
inc
shl
inc
je
sti
jno
push
push
sub
lock
mov
cmpb
fwait
pop
add
inc
divl
flds
push
ja
push
sbb
aaa
repz
mov
cmovg
push
subl
lahf
rcl
add
cmp
adc
push
and
ss
pop
push
daa
popf
adc
cmp
aaa
dec
lea
dec
push
sbb
stc
movsl
movsb
icebp
jmp
arpl
cld
andb
jbe
rcrl
push
adc
andb
mov
add
pop
sbb
mov
push
lret
sbb
sub
push
mov
mov
add
mov
jae
or
rolb
dec
pop
hlt
arpl
mov
rcrb
xchg
mov
fildll
outsb
lret
sbb
pushf
fcmovnb
pop
addr16
inc
roll
es
mov
test
aas
insl
lret
push
insl
push
xor
dec
subl
xchg
adc
pop
test
xchg
in
ljmp
bound
into
rcrl
or
fst
enter
clc
or
sbb
cli
rolb
in
stos
mov
sti
shl
mov
loope
fldcw
ret
inc
xor
adc
mov
jp
dec
loop
mov
mov
pop
insb
loopne
shlb
ljmp
mov
add
pop
mov
dec
outsl
ret
mov
sarb
test
cmp
add
mov
std
mov
imul
rolb
fdivl
push
dec
test
mov
das
adc
lret
mul
xchg
mov
lcall
xchg
cwtl
fnsaves
push
add
push
xor
cld
sub
insb
and
pop
arpl
pop
and
or
sarb
enter
repz
sub
pop
sti
fmulp
xbegin
jmp
xchg
mov
jecxz
shll
int3
idiv
adc
sbb
fsubrs
mov
xlat
dec
subb
mov
adc
outsb
loope
test
pop
cs
test
mov
cmp
jge
outsl
sub
dec
jmp
pop
shrb
cli
xchg
jle
push
push
pop
movsb
fisubrl
jb
in
mov
mov
push
mov
xchg
mov
les
inc
insl
mov
cmp
enter
mov
into
xchg
or
testb
jno
sub
unpcklps
popf
or
adc
or
insl
js
out
pop
sub
mull
push
in
icebp
cmp
xchg
rclb
lods
les
add
orl
xchg
test
jl
add
mov
jmp
ja
popf
inc
outsb
sub
test
adc
xchg
mov
sbb
inc
sbbb
inc
push
test
and
cli
aaa
dec
fwait
adc
xor
jg
test
movsl
mov
into
ds
aaa
fstpl
lods
mov
jbe
arpl
inc
mov
je
insl
or
imul
inc
cmp
insb
and
sbb
push
inc
leave
dec
xchg
aaa
and
and
dec
xchg
in
fnstenv
and
mov
iret
mov
push
aaa
test
mov
pop
dec
add
xchg
es
lcall
xorb
je
jl
into
or
jmp
adc
inc
cmp
mov
xor
jno
outsl
or
into
cltd
dec
adc
test
test
mov
push
stos
movsb
das
fisubs
inc
push
fisttpl
hlt
add
jnp
mov
sahf
sarb
cmp
mov
push
clc
mov
aad
addr16
bound
add
dec
scas
inc
call
push
jmp
cwtl
lock
mov
sub
inc
aas
lock
mov
nop
sub
shlb
mov
inc
xor
lea
hlt
push
cmp
pop
es
mov
rclb
pop
jge
mov
jb
pusha
test
cmp
stos
sbb
test
sbb
imul
xor
push
bound
popa
mov
pop
push
lret
fs
and
insb
jge
mov
sbb
data16
xor
popa
cmpsb
pop
ds
or
enter
lahf
or
inc
loope
je
and
mov
adc
lret
imul
xlat
mov
push
je
fbld
xor
enter
ss
loope
cld
pusha
cmpsl
dec
sub
xchg
jns
insb
xchg
push
jp,pt
mov
movsl
xor
lret
jo
jle
scas
ror
sub
icebp
inc
inc
pusha
xor
jb
dec
add
rcl
mov
shll
lods
cld
xchg
pop
js
out
xor
mov
xchg
insb
and
cmp
or
cmp
hlt
xor
sbb
add
mov
mov
jns
movsl
fsubrl
jg
pop
and
fst
mov
sbb
popa
idivb
test
dec
outsb
js
inc
push
jns
inc
or
fists
xchg
js
arpl
sub
in
cltd
mov
fdivrl
xor
data16
xchg
iret
ss
inc
sbb
xchg
push
sbb
test
lea
leave
loope
add
mov
sbb
leave
mov
pushf
enter
push
testb
leave
xor
jmp
jae
data16
mov
out
mov
mov
lds
leave
stc
or
pushf
sub
les
mov
sbb
stos
popf
jno
arpl
mov
inc
gs
pushf
movsl
ds
xchg
push
ja
test
lods
in
pushl
ljmp
or
dec
pop
mov
sub
and
push
pop
mov
clc
std
fdivs
push
xchg
or
lret
push
jge
pop
inc
dec
adc
xchg
dec
aam
lods
mov
out
jg
movsb
mov
mov
rolb
pop
mov
or
dec
mov
mov
stos
test
and
adc
fninit
add
andb
into
pop
and
cmc
sti
add
arpl
mov
je
addl
mov
push
rcl
cld
push
adc
repnz
or
sbb
or
xorb
out
sub
push
ffree
dec
addr16
xchg
mov
cmp
and
mov
xchg
mov
in
or
push
cs
js
adc
and
cs
imul
out
or
bound
imul
dec
andl
pop
xchg
or
mov
xor
add
jp
pop
frstor
outsl
push
mov
cmc
push
fbld
add
pop
pop
and
test
ficoml
test
call
mov
in
loopne
aad
std
and
sarb
pop
adc
xchg
imul
fdivl
xor
je
and
dec
les
sbb
rclb
fstpl
xchg
jae
lret
mov
or
push
cmp
lods
jno
stos
add
addr16
dec
mov
jmp
flds
xchg
mov
push
push
sbb
lods
xchg
sub
lds
shll
rclb
adc
sarb
call
or
sbb
cwtl
and
mov
in
int3
shlb
aad
xor
cmp
mov
js
cmpb
mov
mov
dec
adc
sub
pop
mov
out
enter
scas
ficomps
enter
aad
loope
and
stos
inc
addb
jns
fisubs
xorb
lods
pop
adc
mov
and
rorb
pop
dec
mov
subl
push
into
lods
sub
push
add
std
push
mov
out
pop
mov
or
scas
lods
test
fldpi
je
lret
lock
or
nop
adcb
shr
sub
jp,pn
mov
clc
cmp
jns
jae
pop
repz
in
add
sbb
xor
mov
mov
in
dec
imull
ds
lea
dec
mov
inc
test
sub
das
mov
and
cld
fs
push
pop
jne
outsl
jmp
int3
fidivrs
icebp
insb
test
das
out
sbb
je
cwtl
xlat
mov
xchg
nop
lahf
out
mov
mov
add
clc
clc
xchg
in
shl
xchg
push
lods
inc
mov
enter
lret
or
xchg
test
adc
xchg
out
aam
rcll
and
sub
mov
jno
sbb
adc
jmp
adc
jp
jmp
or
leave
pop
and
inc
lahf
pop
in
adcb
mov
nop
jae
or
mov
mov
insb
xlat
addr16
in
cmc
nop
dec
roll
test
mov
insb
fadds
fdivr
mov
mov
mov
out
push
out
xor
cld
inc
jno
push
lahf
cmp
ret
push
rorl
mov
ret
int3
xor
ds
lret
lock
test
push
cli
mulb
pop
add
daa
out
aad
jne
jmp
jae
scas
addr16
pop
mov
mov
inc
add
out
jno
je
outsl
hlt
movl
nopl
jb
ret
dec
movsb
js
pop
mulb
mov
sbb
leave
aaa
icebp
pop
inc
lret
sub
push
loop
dec
sbb
movsb
mov
xchg
fcompl
pusha
mov
ret
push
pop
jle
pushf
ja
jbe
lcall
cmpsb
shl
sbb
aaa
lods
mov
sti
push
rcll
movsb
pop
enter
pop
dec
jbe
xchg
or
pop
sbb
in
loop
jb
xorl
push
sub
lahf
fisttpll
mov
xchg
in
and
mov
sub
rcr
ja
adc
out
push
clc
mov
and
mov
in
aam
out
push
jnp
bswap
inc
lsl
leave
mov
pop
sbb
mov
in
jnp
adc
fdivrl
pusha
sbb
pop
xor
insl
xor
jno
adc
inc
movsb
sbbb
xchg
punpcklbw
or
push
sbb
sbbb
lods
negb
fdivs
xchg
inc
pop
sahf
les
sbb
push
sbb
and
aam
rdmsr
ret
loope
hlt
out
adc
cli
mov
push
xor
in
inc
insl
test
xchg
inc
ljmp
shrl
mov
fs
sub
inc
cs
fisubrs
sarb
int
popa
xor
daa
jle
and
jae
add
orb
mov
rolb
mov
xchg
adc
test
ss
loope
je,pt
dec
lods
daa
and
lea
loopne
cmp
pop
out
push
mov
ja
xchg
xchg
cmpsl
das
lds
pop
outsb
es
add
je
mov
jns
pop
nopl
cmp
or
addr16
xchg
flds
or
imul
push
sub
xchg
jnp
lahf
insb
mov
aaa
ret
mov
ja
adc
xchg
subl
xchg
add
std
lea
cwtl
push
mov
jnp
inc
aaa
mov
push
sub
test
shlb
dec
jo
pushf
sub
or
sub
sbb
jo
fwait
adc
sbb
inc
shlb
cmp
cwtl
xchg
sub
xor
mov
mov
mov
jnp
into
enter
push
sbb
jb
pop
add
mov
and
jmp
jge
pop
mov
xor
mov
out
add
lods
mov
rcrl
and
push
cmpsl
push
sub
repz
xchg
in
stos
lods
jmp
mov
sbb
jbe
add
fistl
inc
jecxz
inc
push
pushf
rcr
loop
les
roll
inc
mov
jne
sbb
mov
lret
sarb
adc
xor
cmc
adc
notb
test
xchg
inc
ret
out
int
pop
ljmp
sub
mov
insl
je
push
cmp
mov
xor
adc
dec
out
xchg
push
lds
test
loope
sbb
xchg
mov
pop
cld
or
mov
sarl
inc
loope
mov
sbb
pop
dec
pop
sbb
or
rol
sbb
fidivl
pop
lret
shrl
or
insl
and
and
mov
cli
mov
out
repz
or
call
xor
and
lret
sahf
insb
add
sti
xchg
xor
sbb
inc
fwait
loope
dec
jo
lods
test
sub
cmp
gs
clc
pushf
call
jo
imul
or
mov
pop
push
test
idiv
cmpsb
adc
mov
dec
mov
mov
push
popl
cmpb
add
or
or
pop
movsl
jecxz
add
push
jl
jo
into
sbb
shrl
xchg
mov
sbbl
jg
adc
aaa
mov
sbb
push
inc
fadd
mov
outsl
cli
stc
dec
jg
iret
jge
fadds
cltd
mov
cmp
icebp
push
xchg
push
insl
bound
fwait
pop
sti
xor
je
lock
adc
mov
xchg
mov
jp
pop
and
jle
cmpsl
mov
mov
adc
sub
adc
ret
jmp
pop
sub
cmc
sub
push
popa
jle
testb
fs
out
inc
ljmp
pusha
js
shrb
pop
mov
fistps
int
push
shr
insl
jmp
mov
pop
lret
or
adc
inc
jle
enter
lahf
in
imul
cs
ljmp
inc
in
and
push
xchg
or
or
ja
mov
jge
xor
mov
bound
iret
xchg
sarl
or
fwait
jnp
xor
push
outsb
mov
sbb
xchg
push
lret
xchg
fdivs
add
or
push
inc
vmovlhps
add
cltd
xlat
pop
xchg
fs
mov
stos
cmp
sub
pop
es
lods
pop
loope
add
sbb
fldenv
jle
test
dec
ja
mov
xchg
popl
loop
jae
aam
ljmp
or
paddusw
mov
jo
cli
cmpsl
in
inc
or
mov
jg
ja
scas
inc
push
pop
sub
inc
sub
stos
imul
sub
out
enter
cmp
pushf
loope
lcall
push
das
push
scas
mov
stos
xlat
in
or
cmpsl
scas
sbb
imul
pop
aas
ds
in
pop
popa
xorb
in
inc
fdivs
jae
cmc
push
push
out
mov
addr16
mov
xor
inc
push
xchg
mov
pop
jno
lods
sbb
fcmovne
add
push
hlt
pop
inc
orb
mov
pop
scas
mov
nop
addr16
mov
cs
pop
jb
test
enter
wrmsr
ret
jnp
int3
outsb
inc
addb
jne
rcrb
push
xchg
inc
mov
outsl
jmp
push
dec
es
sub
fwait
xchg
and
push
icebp
xchg
dec
xchg
repnz
loop
and
jbe
dec
fisubl
insb
dec
dec
popf
popa
test
inc
out
leave
repz
ret
xor
in
or
add
sbb
imul
cmp
mov
sub
in
ret
andb
jne
mov
pop
pop
adc
in
xchg
scas
stos
or
loope
mov
stc
fcompp
clc
or
cmp
inc
sbb
jno
sub
andb
push
sub
adc
xchg
adc
in
inc
in
push
lcall
cmp
jl
xor
mov
dec
push
mov
mov
test
xor
lcall
xor
out
jno
outsl
call
pop
cmp
in
outsb
adcl
inc
mov
arpl
repz
mov
pop
jno
incb
inc
popa
mov
in
popa
pop
dec
and
fwait
inc
subl
in
sahf
push
lret
mov
xchg
and
mov
jb
mov
pop
outsb
mov
pop
gs
mov
daa
loope
xchg
hlt
jg
addb
addr16
inc
adc
jg
sbb
or
mov
mov
mov
jle
add
jo
data16
hlt
push
jg
jae
fsubs
cs
push
into
das
adc
sbb
add
xchg
cmc
loope
stos
dec
cmp
pop
sub
div
lods
mov
lahf
xchg
mov
cmp
shlb
add
scas
sub
pop
lret
adc
stc
add
sub
cmpl
popa
insl
push
dec
adc
pop
cwtl
mov
loopne
loop
pop
or
arpl
xor
in
cmp
insl
int3
push
fabs
jno
inc
aam
test
sbb
inc
leave
sub
sbb
push
xchg
inc
lret
xchg
rcrb
push
push
mov
pop
mull
push
arpl
je
aaa
subl
xor
cli
filds
lahf
or
icebp
data16
pusha
push
repnz
out
cmp
or
xor
scas
sub
movsb
mov
lea
repz
pop
xor
and
push
movb
int
ficompl
sbb
inc
ss
ret
pop
push
shll
cmp
or
fucomip
push
mov
lock
iret
aam
pop
xchg
pushf
cs
push
cmp
jbe
adc
mov
sub
dec
lret
cmpsl
cmp
and
add
xchg
rol
decl
push
sub
or
lea
pop
pop
stos
push
pop
sbb
inc
mov
imull
inc
inc
inc
mov
mov
jl
pop
fcmovbe
repz
mov
ss
in
fcmovne
mov
and
xchg
jnp
mov
data16
cli
jnp
mov
enter
leave
insl
lcall
call
sbb
push
adc
xchg
sti
mov
int3
stos
lahf
in
outsb
clc
cmpsb
jno
adc
sbb
push
push
lods
pop
test
test
xchg
push
aaa
in
mov
sub
outsl
mov
sub
dec
jp
xchg
mov
xchg
faddp
sarl
sbb
mov
loope
add
mov
imul
das
pop
or
stos
mov
imul
adc
sbb
ja
daa
dec
stc
stos
push
cmp
mov
popa
jl
int3
mov
adc
fists
mov
test
lahf
ja
add
push
aas
addr16
lcall
push
jns
inc
repnz
cmp
mov
cmp
int3
xor
push
inc
lahf
arpl
loopne
mov
out
addl
fcomp
sbb
mov
mov
insl
arpl
lcall
cmpsl
xchg
decl
push
pop
pop
lahf
mov
popa
in
sbb
pop
add
frstor
and
out
ret
popf
cmp
out
test
sbbl
xchg
fucomi
dec
int
push
orb
mov
mov
repz
push
adc
outsb
mov
and
sahf
outsl
sbb
jg
add
jp
sub
mov
jns
addb
inc
outsb
fisubrs
sub
mov
xchg
int3
adc
stos
or
mov
mov
push
mov
subl
iret
mov
lcall
pop
inc
jmp
dec
fidivrl
test
mulb
sub
jns
fildl
cmp
iret
aas
cli
pop
mov
jno
mov
add
popf
popf
cmp
in
pop
add
fisubrs
cld
xor
cmp
addr16
push
xor
mov
lret
mov
xchg
cwtl
ss
jbe
xor
xor
out
ljmp
adc
out
stc
jl
cmp
adc
fnstsw
mov
ja
and
jecxz
inc
fidivl
setge
test
and
rolb
in
jmp
imul
mov
out
sbb
in
xchg
or
lock
call
mov
push
push
dec
jg
aas
fisttpll
icebp
inc
or
outsl
leave
push
mov
stos
insb
xor
lret
inc
xchg
popa
jnp
pop
popf
sub
fbstp
inc
or
shll
les
xchg
je
mov
stc
iret
loopne
inc
xorb
mov
fildl
xor
xor
into
in
arpl
sub
jo
xor
xor
cltd
xchg
dec
lahf
ljmp
inc
imul
cmc
xchg
lret
xchg
into
jg
inc
inc
cmp
das
add
dec
sbb
das
push
or
adc
push
dec
jecxz
out
out
popa
xchg
dec
pushf
pusha
and
loopne
jnp
lret
sti
jmp
pop
loopne
push
pop
addr16
jge
lock
push
mov
leave
mov
dec
in
ja
or
xchg
or
mov
add
stos
femms
enter
xchg
test
aaa
loop
jmp
jmp
pop
mov
flds
and
sub
mov
push
fwait
sbb
pop
mov
jb
repnz
xor
test
jg
sub
decb
jne
mov
inc
mov
test
sbb
pop
iret
xchg
ret
mov
outsl
test
jecxz
xor
add
mov
dec
lods
dec
xchg
jge
repz
orl
xchg
adc
bound
xchg
in
testb
loopne
sbb
testl
fistpll
xor
in
imul
xor
dec
adc
sub
xor
jne
or
jbe
mov
push
adc
sub
dec
sbb
add
inc
push
into
adc
lods
fadds
std
xlat
mov
jecxz
mov
push
mov
ret
lret
jno
popa
push
inc
pop
cltd
iret
arpl
adc
push
pop
cmp
fxch
inc
ret
in
adc
rcrl
movsb
aam
lock
cmp
cmpsb
adc
sub
cld
andl
cmp
xor
jp
incl
sub
adc
sti
xor
mov
mov
pop
enter
mov
stos
mov
leave
aad
jns
jo
mov
sub
inc
and
adcb
xchg
ret
cmpsl
mov
push
mov
scas
push
sbb
nop
mov
je
into
ja
gs
pop
cmpsb
mov
mov
mov
mov
mov
bound
mov
test
add
mov
out
sahf
bound
insl
test
sbb
jno
fldt
je
pop
stos
loope
mov
xchg
lock
xlat
xor
shlb
cmp
fstl
jnp
inc
mov
mov
test
outsb
lds
pop
add
in
push
jne
xchg
dec
add
sbb
dec
adc
repz
sbb
mov
ljmp
xchg
mov
insb
push
lret
mov
pop
addr16
mov
stos
mov
js
iret
and
fimuls
push
popa
jo
push
lods
and
insl
jmp
push
lahf
movsb
loope
leave
rcll
sbb
stc
nop
pop
lods
mov
lret
and
dec
mov
lahf
fldt
in
mov
jne
pop
mov
fwait
mov
lret
push
mov
hlt
adc
addl
je
or
pop
mov
idivl
push
xor
ficoms
aad
jmp
cmc
xchg
outsl
insb
sarb
adc
mov
sbb
ret
mov
sbb
adc
jge
imul
inc
dec
xchg
cwtl
aam
push
daa
mov
addr16
pop
cs
mov
jns
fnsave
mov
cmp
add
pushf
xchg
cmp
in
pop
inc
mov
lods
jge
mov
inc
shrb
into
in
aam
push
dec
aad
roll
inc
add
mov
inc
mov
jb
cwtl
adc
jecxz
daa
int3
xor
call
and
xchg
xchg
cmpsl
ss
xchg
mov
hlt
dec
loopne
mov
jl
and
lds
cmc
sub
or
cs
bound
mov
xchg
icebp
mov
movsb
add
push
pop
and
fstps
jle
fldcw
cld
pop
sub
ret
insl
cmp
aad
scas
lods
dec
push
mov
dec
arpl
adcl
jae
fsub
out
in
mov
lods
push
loopne
mov
loope
xchg
out
hlt
inc
cmp
lret
lea
aam
loope
dec
xchg
jecxz
iret
mov
shl
iret
cmp
cmp
sub
adc
jge
dec
mov
jp
leave
ss
arpl
xor
xchg
pop
icebp
movsl
jl
sahf
mov
adc
cmp
mov
std
adc
bound
jmp
push
cmp
rclb
push
mov
je
out
nop
mulb
enter
call
shlb
pop
push
out
icebp
pop
int3
xor
cmp
dec
push
cmp
test
pop
fisubs
and
sarl
ds
inc
lret
mov
cmp
jp
pop
in
mov
cwtl
aaa
add
lea
mov
sti
pop
adc
inc
dec
push
cmp
ljmp
pop
mov
into
push
sbb
or
lret
dec
call
push
ss
pushf
push
push
pop
sarl
xlat
andl
dec
mov
xor
pushf
movsb
push
mov
jmp
mov
push
push
fidivs
clc
test
xchg
xchg
aad
aaa
rolb
in
cwtl
in
sbb
pop
or
sbb
shr
outsl
or
mov
cmpl
sub
xchg
stos
inc
mov
enter
add
test
jb
imul
cmp
add
dec
js
cld
push
jo
or
cli
inc
lods
mov
pop
push
push
jp
jle
insb
outsl
xchg
mov
mov
pop
mov
enter
inc
or
jae
mov
sbbl
call
lock
outsl
sbb
insb
push
push
mov
pop
or
push
xchg
fisttps
add
lret
push
pusha
xlat
jmp
mov
popf
xor
add
mov
movsl
in
push
adc
xchg
ja
mov
cltd
push
sbb
sbb
adc
std
add
add
aam
adc
adc
pushf
jb
lret
cmpb
out
popa
push
jle
push
push
lods
cmp
repnz
xor
inc
aad
dec
gs
cmp
mov
mov
mov
mov
and
test
push
jno
jmp
fxam
mov
jnp
jg
mov
sub
test
imul
loopne
sbb
lods
xor
xor
mov
sarb
inc
jecxz
mov
add
int3
ja
je
add
cltd
jge
mov
push
and
pop
stos
sub
sub
testl
mov
dec
jge
adc
inc
xor
mov
pusha
mov
gs
jle
inc
push
ja
push
adc
test
lret
fidivl
inc
jecxz
cwtl
pop
mov
sti
jbe
jno
inc
in
insb
sbb
jmp
xlat
nop
aas
repz
divl
mov
cmp
sub
cmpsl
ds
cmc
push
insl
or
bound
addl
push
faddp
ficompl
pop
addb
ja
push
push
and
movsb
mov
push
leave
adc
cmc
movsb
jne
addb
inc
rorl
push
shlb
mov
fistpl
test
pop
mov
bound
loopne
cld
sbb
popa
hlt
stc
fsubp
jecxz
ja
icebp
mov
mov
ljmp
xor
xor
popa
test
and
pop
jne
lret
aaa
xlat
xchg
adc
ror
add
cld
mov
push
push
xchg
mov
in
inc
fsubl
inc
xor
and
mov
xchg
insb
cmp
and
inc
mov
mov
inc
aam
xchg
ficoml
loopne
pop
outsb
xchg
mov
mov
pop
dec
inc
sbb
jg
scas
arpl
addr16
jbe
and
outsl
mov
pop
xor
in
lods
clc
aas
jnp
lds
pop
mov
in
loop
xchg
testl
mov
pop
std
mov
sbb
push
es
addl
xchg
es
bnd
scas
rcrl
and
cmp
scas
jl
mov
xchg
mov
fistpl
jecxz
rorb
sbb
dec
jno
mov
mov
stc
stos
jle
je
fmull
movsb
jns
push
dec
lret
mov
std
cwtl
loopne
push
fsubs
insl
jge
pop
cmp
add
jmp
sub
fwait
push
dec
loope
mov
xchg
adc
adc
out
jns
sub
mov
pop
add
inc
lcall
lcall
sbb
dec
push
push
xchg
dec
pushf
fidivrs
add
dec
pop
pop
lret
sbb
loope
sahf
cmp
faddl
fistpll
dec
xor
arpl
jmp
int
imul
or
jecxz
push
cmpsb
xchg
ja
sbb
dec
pushf
movsl
push
out
lds
xor
cmp
orb
push
mov
push
sbb
test
cmp
push
aaa
pop
xchg
push
shll
scas
xchg
mov
push
adc
sub
xor
es
push
pop
icebp
sbb
cmpsb
dec
ljmp
push
push
inc
pop
das
push
stos
jno
adc
dec
pop
stc
xchg
scas
sbb
or
sbb
push
pushf
test
xor
inc
sub
lock
mov
repz
test
adc
xor
push
loop
xor
mov
inc
aam
inc
dec
sub
jle
or
jmp
les
fmull
addr16
loope
push
scas
mov
repnz
cs
sahf
lds
sahf
shlb
adc
cmp
jns,pn
test
int3
cmc
gs
insb
decb
push
sub
cs
pop
pop
jne
mov
shl
sub
dec
dec
pusha
adc
push
jno
out
or
pop
push
dec
mov
mov
mov
sbb
cltd
imul
imul
lds
fldt
mov
sbb
push
mov
stc
pop
addb
sti
sbb
push
cltd
mov
fstpt
mov
add
push
jae
int3
aad
int3
adc
insb
stc
push
out
neg
fnstenv
add
or
dec
in
xchg
roll
out
pop
jp
sbb
push
xchg
pop
lods
ss
sub
cmpsl
out
xchg
fwait
mov
ficoml
mov
lds
dec
jge
push
stos
xchg
xor
jmp
rolb
es
xor
adc
in
mov
inc
mov
icebp
xlat
test
pop
cs
dec
adc
outsl
scas
adc
xor
cld
cmp
cwtl
fdivrl
shll
inc
call
sbb
mov
arpl
pop
int3
adc
neg
dec
out
and
xchg
add
data16
jo
inc
and
sbb
loop
jns
imul
or
arpl
mov
out
mov
push
loop
and
out
xchg
dec
jbe
dec
push
adc
mov
mov
adc
incb
xor
aaa
movsb
inc
pushf
or
lret
in
dec
imulb
lea
adc
daa
mov
inc
mov
jne
push
idivb
pop
push
and
and
inc
cwtl
icebp
add
mov
js
incb
mov
xchg
jge
mov
popa
dec
aaa
das
push
insl
xor
out
cmp
ja
adcb
out
dec
scas
jge
psubb
roll
cmp
pushf
xchg
stc
xlat
lea
scas
push
dec
jb
fwait
mov
xchg
gs
inc
out
or
xchg
fcmovnu
xchg
stos
sbb
sub
jae
push
cmp
jp
roll
cwtl
ljmp
mov
popa
mov
fcmovnbe
cs
push
out
sbb
and
cs
repz
push
stos
xchg
lock
mov
sub
sbb
test
push
sub
sti
xor
into
push
adc
jmp
iret
bound
adc
and
int
jb
inc
sti
mov
lods
aaa
sub
sbb
jl
sub
cltd
ret
cmp
xchg
lods
and
push
popl
add
inc
fdivrl
pop
xchg
mov
addl
scas
jmp
sbb
fstl
inc
movsb
xor
arpl
fsincos
mov
cmp
in
adc
lahf
mov
insb
push
dec
jmp
jns
bound
loopne
test
cli
std
loope
mov
fsubrl
seta
push
mov
cmpsb
roll
aad
loop
test
in
insl
mov
add
sub
mov
and
xor
cvttps2pi
ret
pop
dec
jg
cmpsb
scas
cs
sti
dec
testl
inc
or
daa
jp
add
popa
xchg
sbb
add
mov
jne
mov
push
negb
dec
rclb
jmp
mov
add
cltd
dec
or
mov
xchg
or
gs
push
repz
stc
lods
dec
ret
data16
xor
xchg
test
sub
inc
dec
cmp
jns
sub
mov
and
sete
fidivs
cmp
mov
ret
inc
out
jns
in
les
test
push
cs
xchg
or
jle
cmpsl
lret
ret
jge
pushf
icebp
mov
push
xchg
iret
cltd
jle
mov
and
pushf
dec
imul
test
xor
or
outsl
call
test
lods
push
test
jge
lds
lahf
xchg
xor
in
cli
push
popf
and
insb
mov
cli
in
imul
pop
int
out
xor
mov
repz
pop
add
push
imul
inc
lcall
jno
inc
lret
sub
shlb
incl
cmp
jmp
std
adc
xor
and
or
fcmovnu
inc
scas
add
ss
sub
dec
repz
inc
test
in
xchg
cltd
mov
mov
mov
dec
mov
movsb
sub
xor
stos
cwtl
imul
sbb
in
sbb
mov
push
jno
movsb
mov
adc
fdivs
add
sub
mov
mov
and
adcb
inc
dec
dec
dec
or
scas
bound
mov
dec
dec
stos
int
out
or
test
and
pop
pop
adc
ss
fiaddl
inc
jle
js
mov
xchg
movsb
ljmp
and
mov
cmpl
mov
fldl
add
fisttps
ljmp
xor
ljmp
ffree
lock
fildll
sub
jns
enter
mov
imul
daa
jno
push
xchg
dec
xchg
ret
popa
aaa
repnz
out
cld
sub
shlb
daa
mov
pusha
sub
jnp
jno
iret
loop
xchg
jmp
push
int3
mov
dec
or
nop
dec
ja
cli
xchg
mov
push
stos
or
mov
and
pop
push
cmp
popf
das
push
addr16
fsubrp
in
lds
fs
lods
shl
iret
fwait
push
xchg
and
mov
in
iret
sahf
pop
in
mov
data16
js
sub
pop
mov
lock
mov
testl
push
fcomps
cmp
pop
xor
jle
into
ss
mov
test
fadd
mov
jl
jb
xor
loope
adc
or
les
mov
rorb
adc
out
sbb
pop
mov
pop
adc
adc
repnz
cs
pop
pop
in
add
aaa
push
pop
daa
fnstcw
gs
inc
sahf
jbe
xorl
sbb
pop
sti
sub
add
push
arpl
aam
cmp
lahf
cmpsl
lahf
jb
xchg
push
fmuls
mov
jp
sub
inc
cwtl
push
mov
fwait
mov
js
bound
pop
adc
lods
fmul
mov
test
clc
icebp
sub
mov
aas
adc
shrb
negl
mov
or
push
dec
mov
dec
pop
gs
push
jecxz
loope
xchg
sahf
mov
out
sub
jno
xor
scas
je
and
insb
jne
push
mov
lret
inc
cmpsb
daa
sahf
pop
and
mov
scas
testb
repz
arpl
xchg
and
jle
cwtl
aaa
fwait
lret
daa
xchg
sbb
aam
adc
aas
jns
mov
fsubrs
sbb
push
pop
mov
push
cmpsb
mov
add
pop
out
pop
xor
jae
sahf
jae
mov
xchg
popf
cmp
stc
mov
in
popa
pop
inc
pop
and
stos
sbb
sub
inc
fldcw
adc
pop
int3
push
lods
lahf
push
outsl
psraw
fsubl
incl
pop
cmp
mov
xchg
add
xor
imul
dec
and
cmc
jecxz
sub
out
jno
add
les
leave
repz
add
rorl
aaa
add
xlat
sbb
rcrl
xor
sub
mov
call
pop
mov
mov
add
jb
push
ja
add
ljmp
sahf
jl
jo
sahf
dec
imul
insb
mov
dec
or
mov
xchg
cmp
test
jecxz
mov
ja
arpl
outsl
inc
push
adc
out
lock
lret
push
adc
sbb
inc
pop
sub
mov
push
outsb
push
and
add
stos
dec
adc
loop
fsub
mov
xchg
test
pop
das
fnsave
add
cmpsb
adc
lret
mov
cmpsb
in
fwait
pop
int
popf
std
pusha
or
jl
xchg
lock
xor
cli
cwtl
mov
cmp
cmp
shrb
leave
dec
int3
adc
fmul
jl
lock
out
and
lret
push
shll
push
inc
fisubl
sbb
stc
mov
aas
shlb
jno
loopne
pop
inc
popf
pop
jae
xchg
or
fmull
imul
cmp
mov
cmp
xchg
inc
jo
movsl
mov
add
cmp
adc
into
ret
addb
push
scas
push
repz
scas
lret
inc
push
movsb
jmp
sub
jge
aas
jne
dec
mov
in
dec
xor
aas
hlt
xchg
jecxz
cmp
push
test
into
mov
inc
call
xor
adc
add
adcb
ja
lahf
mov
pop
ss
xchg
mov
mov
cmpxchg
in
hlt
fs
cmp
xor
cld
lret
addl
out
and
xlat
inc
and
imul
int3
and
push
pop
sbb
sbb
inc
push
test
lcall
idivb
dec
fcmovnb
inc
mov
or
mov
in
aaa
scas
jmp
dec
cmc
repz
lcall
or
mov
adc
pop
jb
xor
das
std
pop
and
popa
lods
mov
mov
jg
outsl
mov
sub
jae
mov
arpl
sbb
add
popf
mov
pop
imulb
and
xchg
subb
mov
xchg
sbb
mov
adc
add
cli
and
dec
pop
rolb
in
test
fadd
int
psrld
push
xor
pop
test
ljmp
bound
repz
out
bound
dec
jmp
in
mov
jmp
and
cwtl
shll
ss
push
cld
sbb
pop
outsb
xchg
add
pop
ret
mov
ret
test
scas
out
fsubr
ret
cmp
bnd
jmp
es
dec
and
imul
pop
push
inc
hlt
pop
cmp
sbb
add
cld
out
gs
xor
pushl
and
mov
fstpl
das
cwtl
sbb
test
fs
pop
out
jmp
fisubrs
inc
test
lcall
dec
dec
mov
or
jmp
pop
dec
shlb
sbb
add
xchg
dec
push
cmp
xor
adc
popa
add
and
outsl
outsl
andl
mov
mov
xor
ret
jbe
mov
push
xchg
and
cmp
movsl
xor
push
cmp
or
mov
je
cmp
or
sbb
mov
push
adc
lea
outsb
lahf
loop
es
pushf
stos
push
xchg
rclb
int
repz
je
js
fidivrs
sub
out
pop
or
push
in
clc
aaa
inc
jae
aaa
lock
pushf
cmp
sub
sub
sbb
jg
adc
jb
jae
add
movsb
or
jmp
sarb
daa
fdivrl
adc
iret
inc
mov
mov
xor
dec
and
leave
or
dec
sahf
push
sbb
ret
loopne
aad
call
xor
test
in
push
xchg
negl
dec
into
mov
mov
outsb
add
cmp
inc
push
fwait
jns
xchg
xor
mov
jb
orl
mov
add
xchg
cmp
mov
mov
add
xor
mov
push
cmpl
in
mov
xchg
xor
or
arpl
movsl
sbb
aad
mov
cmpsb
xor
mov
mov
ljmp
xchg
ret
push
pusha
add
jo
mov
sbb
sbb
dec
push
mov
test
ret
sub
xchg
int
jae
lods
sarl
enter
jb
fimull
and
add
jle
stos
xchg
in
je
mov
jb
fimuls
jmp
push
std
sahf
cmp
scas
daa
lods
movsb
outsl
insl
push
jle
add
js
add
shll
push
push
aam
xchg
mov
or
mov
movsb
sahf
aam
push
inc
in
std
insl
pop
roll
cmp
fidivrl
sarl
loop
mov
aad
shll
out
push
out
aad
test
dec
es
imul
int3
sbb
aad
sti
mull
jbe
loop
xchg
mov
mov
adc
cmpsb
repnz
inc
push
insb
cwtl
mov
dec
int
movsb
cmp
push
mov
mov
in
pop
pop
pop
mov
jge
adc
mov
stc
jns
push
mov
mov
adc
push
and
stc
jb
or
arpl
push
jae
neg
sbb
inc
lea
ja
cmp
lock
fisubrl
rcl
inc
cmc
rolb
in
arpl
sub
mov
lcall
jbe
mov
add
iret
jl
add
jmp
cmp
xchg
mov
dec
fisubs
jl
dec
jb
sub
jb
push
push
fwait
test
mov
mov
les
divl
repnz
sub
arpl
mov
pop
pop
scas
in
ror
mov
xchg
fiadds
push
sub
sub
in
aam
mov
inc
scas
aad
nop
ds
mov
addb
xchg
sub
movsl
les
cmc
inc
enter
sub
popa
mov
cmc
cmp
cmp
xlat
xchg
jecxz
hlt
or
cmp
dec
lea
xlat
js
jbe
xor
jb
pop
ds
dec
shlb
cs
cltd
add
pushf
jmp
test
movsb
into
popa
lcall
cmp
hlt
add
loop
mov
xlat
mov
jle
int3
orb
leave
pop
stc
add
and
frstor
loope
sub
ja
test
scas
in
popl
dec
jle
test
popa
test
mov
xchg
es
push
jl
aas
test
and
sarb
pop
rorl
mov
fwait
xchg
popf
push
or
cmp
inc
push
pop
repz
fstpl
and
cld
fidivl
daa
xchg
or
xor
imul
hlt
in
fisubl
add
sbbb
dec
clc
xchg
popa
add
sbb
push
mov
and
fsts
mov
sti
pop
int3
in
call
sub
dec
jmp
xor
xchg
dec
lret
push
sti
cli
out
mov
in
mov
in
jo
iret
xchg
push
or
andb
and
jns
andl
ret
inc
mov
jae
pop
dec
jne
xor
js
std
scas
addb
adc
or
in
xor
add
xchg
lods
or
pop
pop
lret
or
mov
push
jnp
xchg
sti
jne
loopne
call
ret
and
pop
mov
or
inc
inc
hlt
add
das
mov
ret
int3
popf
xor
sub
scas
adc
leave
inc
out
ja
inc
mov
mov
call
mov
shll
aad
mov
cltd
divps
jns
sub
inc
push
pop
mov
lahf
cmp
and
jle
andl
pusha
cmpsb
push
cmpsb
push
sbb
mov
aaa
adcl
lret
lcall
ljmp
xor
mov
pop
mov
xchg
mov
mov
push
mov
insl
outsl
lods
or
test
pushf
push
test
jecxz
gs
or
out
xchg
cwtl
icebp
dec
push
mov
or
cld
movsb
clc
push
fcom
push
out
loop
jne
fcmovne
sbb
sub
pop
sub
scas
stos
out
ds
pop
ud0
mov
mov
xchg
cmpsb
push
fcoml
iret
push
shr
scas
iret
popa
or
jmp
movsb
push
and
push
imul
xchg
cmp
aad
in
lret
out
xchg
lock
jmp
fmull
cmovbe
cmp
or
movsl
xchg
add
fidivrl
cmc
dec
std
mov
mov
or
lret
push
jle
mov
cltd
leave
mov
add
cltd
ret
dec
fpatan
adc
xchg
movsb
incl
ja
jle
sbb
cmc
mov
loope
lock
pusha
fnstenv
andl
xchg
insb
mov
xor
stos
mov
loop
scas
cli
xor
pop
sbb
fstps
mov
mov
ret
sbbb
jecxz
out
rcrl
lret
push
xor
enter
dec
push
test
mov
sbb
mov
ret
inc
adc
mov
out
sub
sbbl
mov
lret
push
inc
rol
fwait
mov
fcmovu
test
xor
xchg
rorl
iret
and
jle
sub
shr
out
xchg
push
insl
sub
add
repnz
xor
jbe
xchg
sbb
ljmp
sarb
lea
notl
add
arpl
jb
mov
push
xchg
cltd
xor
jno
in
jbe
movaps
jnp
mov
mov
pop
xlat
je
ss
xlat
cwtl
lret
pop
aam
mov
out
rcll
mov
mov
fdivrl
push
loope
xor
pop
test
sub
lret
ja
mov
shll
pusha
lcall
sub
sbb
addb
leave
pushf
push
ljmp
pop
jle
jb
push
mov
pop
sbb
aam
cmp
daa
mov
clc
in
int
int
repnz
daa
fwait
push
lahf
aad
out
and
outsl
inc
xchg
sbb
sub
scas
or
stc
sub
aad
insl
cmp
into
call
sahf
sbb
int3
jnp
mov
shll
das
sbb
inc
rorl
shrl
push
ja
int3
mov
jg
sub
lods
adc
lcall
xchg
sbb
pop
mov
cld
jg
movsb
testl
mov
jae
shr
push
cli
push
dec
test
cmp
xchg
movsb
ficompl
push
mov
jecxz
iret
popa
push
mov
xlat
add
mov
xor
nop
xor
shlb
mov
lcall
pop
fisubl
cltd
dec
cmp
xchg
lret
xor
cmp
sbb
lock
les
sbb
lahf
jmp
mov
stos
cmpb
mov
jl
sub
inc
xor
pop
movsl
nopl
out
pushf
adcb
sbb
jg
jg
nop
into
ret
sub
push
arpl
push
mov
pushf
and
sbb
jp
cmp
out
sub
and
call
loopne
lods
ficompl
xor
addr16
inc
ret
lock
dec
daa
and
mov
das
popa
hlt
clc
clc
repz
addr16
shll
sbb
aaa
jo
push
sub
inc
inc
pusha
xor
cmpsl
js
pop
mov
pop
mov
fs
xchg
add
test
cmp
jbe
mov
lds
mov
and
jp
out
xchg
stc
iret
les
jo
lods
jmp
out
lock
pop
iret
or
out
decb
push
lcall
pop
dec
sbb
movsl
inc
ljmp
cmp
sub
push
in
push
sub
inc
gs
ljmp
loopne
mov
jnp,pn
add
fwait
or
push
jg
leave
sbbl
xlat
scas
incl
mov
jl
roll
pop
inc
jmp
mov
xor
scas
sbb
lea
mov
xlat
shrl
cli
sti
xchg
mov
gs
inc
push
psrld
inc
stos
jmp
and
xor
mov
pop
xchg
mov
or
mov
scas
popf
cmc
mov
pop
stos
repnz
stos
jle
mov
adc
xlat
xchg
call
nop
test
pop
flds
jb
adc
lock
loop
or
push
fucomp
mov
je
push
cli
incl
push
pop
dec
int
pushf
call
scas
fstl
adc
and
and
jge
mov
ja
and
mov
jl
sub
dec
cwtl
arpl
gs
std
rolb
or
jno
sub
dec
mov
aam
sti
stos
mov
push
add
push
insl
xchg
mov
push
stos
out
adc
fwait
orb
mov
je
fs
aam
add
xlat
or
push
pop
pop
fsubrs
jae
jo
addr16
inc
in
cmp
movsb
inc
sbb
inc
clc
xor
push
xor
cmpsl
lds
jns
push
mov
sbb
pushf
fbstp
fld1
out
call
add
arpl
xor
jno
and
mov
fcomp
or
stos
nop
stos
cmp
testb
push
shll
stc
sbb
cmp
ja
cli
mov
les
ret
out
push
mov
xchg
inc
or
ljmp
pop
lods
inc
mov
and
movsl
xlat
mov
sbb
sub
repnz
sahf
test
mov
push
leave
test
xor
sbb
jmp
lds
mov
mov
cmpsb
add
nop
xor
mov
call
add
push
push
ret
jbe
lock
das
push
outsl
sbb
fmuls
loope
fstl
xor
stc
inc
inc
aam
arpl
jbe
cmc
inc
dec
fimull
rcrl
xchg
rclb
jne
pop
mov
xor
sbb
xlat
or
dec
js
stos
in
mov
lea
out
arpl
mov
out
ja
mov
jne
add
jne
roll
xchg
pop
sbb
pop
popl
pop
jge
stos
pop
ret
push
cltd
in
xlat
and
sub
out
adcb
xor
ljmp
cmp
cmp
sbb
les
push
cs
fmull
cli
enter
sbb
cmc
gs
loop
js
insb
pop
adc
clc
pop
mov
fcmove
out
fimuls
fsubs
jo
and
inc
or
inc
sbb
push
mov
pop
pop
xchg
rcll
js
bound
push
pop
sub
repz
stc
pushf
push
and
push
inc
mov
in
sub
movsbl
adcb
sub
stc
add
mov
or
jbe
ljmp
and
cmp
mov
fdivl
add
insb
cmp
inc
xor
daa
xorb
mov
cmp
icebp
test
inc
xchg
jnp
mov
and
mov
pop
ret
xchg
and
inc
push
push
mov
push
clc
jne
lret
jecxz
jmp
sti
cmpsb
mull
cmp
mov
sub
cs
or
call
xchg
pop
sarl
stos
aad
jp
imul
xor
or
fists
mov
sahf
lea
inc
or
shrb
es
insl
stc
mov
add
xor
fistpll
cmpsb
sub
in
stos
out
lods
xor
pop
or
js,pn
repz
outsb
std
jmp
ja
mov
fcmove
and
repnz
pop
fcoml
sbb
test
pop
repnz
div
xchg
addb
lcall
or
sub
rclb
pushf
or
mov
xchg
icebp
push
int3
jnp
je
cs
ja
loope
xchg
fildll
mov
push
iret
jno
jne
pop
stos
push
cli
daa
jg
lea
mov
pushf
mov
lahf
jl
push
addb
cld
xchg
add
cmp
into
dec
mov
mov
popa
and
les
cwtl
loop
mov
decb
mov
mov
sbb
pop
sub
les
fmull
sbb
movsl
out
nop
imul
movb
in
bound
rolb
sarb
push
xchg
fldt
and
bound
sub
hlt
jp
cltd
pop
dec
and
cmpsb
scas
push
test
cmpsl
loope
mov
inc
lret
adc
insb
lahf
into
insb
or
and
int
and
inc
in
jno
jns
fbld
or
pop
call
pminub
or
push
stos
repz
test
jg
sub
adc
enter
cmp
fdivrs
add
xchg
push
pop
shl
fmuls
push
pop
add
inc
mov
inc
dec
imul
cli
lock
jno
xchg
push
bound
mov
iret
jg
xor
shll
xor
addr16
movsl
enter
lds
dec
aam
shll
out
mov
cmp
push
dec
std
dec
jmp
test
sbb
arpl
dec
test
sbb
xor
in
dec
inc
mov
push
call
sti
cltd
sbb
je
out
aaa
in
sbb
test
and
pop
test
xor
xchg
fiadds
mov
and
rol
das
cmp
in
inc
inc
mov
aas
mov
mov
stos
scas
outsl
sub
std
cmp
dec
push
xor
nop
loop
cmp
sub
jno
ret
test
push
shr
cmp
dec
add
xor
sti
gs
jecxz
shrl
dec
stos
and
mov
add
movsb
sbb
jne
push
dec
rclb
je
aam
push
jno
sub
push
std
lea
ret
sub
cld
sbb
in
frstor
pop
pop
stos
pop
fwait
add
iret
mov
mov
loope
ret
adc
out
test
jbe
xchg
inc
jl
jne
cmc
jbe
jns
sahf
cmp
lock
mov
ret
xlat
xchg
push
outsb
cmc
rcll
ret
imul
out
fcoml
sbb
repz
and
inc
push
add
jns
push
jb
fstpt
inc
push
sbb
jnp
adc
in
xchg
mov
xor
cwtl
jo
xchg
or
enter
hlt
push
loope
add
sahf
cmp
jg
jle
cmp
jne
jns
in
pop
jp
and
imul
mov
shll
push
pop
add
mov
icebp
mov
inc
lods
dec
sub
xchg
jno
pop
add
dec
or
outsb
xor
push
lret
std
sub
mov
mov
inc
pop
and
in
xor
or
jns
sbb
daa
ret
sahf
pop
push
jp
pop
or
adc
mov
push
cltd
gs
jne
shlb
push
das
xchg
in
jl
add
and
add
mov
xlat
cmp
arpl
lods
out
popf
xchg
in
lea
imul
repz
fdivrs
push
lret
mov
inc
and
fidivs
xchg
pop
arpl
mov
dec
or
dec
int
test
sti
les
sti
xchg
sub
fdivr
dec
push
sahf
push
les
mov
mov
push
cwtl
and
fnsave
cltd
dec
add
push
pop
jne
out
aaa
mov
ds
mov
xchg
iret
arpl
cld
sbb
je
mov
sub
bound
shlb
mov
inc
lret
mov
imul
push
or
pop
jg
aaa
inc
in
xor
or
mov
sub
jb
xchg
xchg
imul
push
ror
lret
jp
pop
inc
cmpsl
dec
jno
aad
push
or
pop
pop
inc
repnz
rclb
jnp
fnstenv
pop
outsl
std
add
cmc
push
pop
inc
xlat
mov
lea
icebp
stos
in
fidivl
cmp
sub
adc
jnp
mull
xor
stos
lret
jne
xor
pop
loope
pop
mov
movsb
xor
mov
jae
leave
xor
pop
xor
insl
test
sbb
inc
jbe
jecxz
pop
mov
mov
das
jbe
mov
and
std
out
xor
push
push
out
stc
mov
mov
mov
add
lock
lret
or
mov
cwtl
lret
sub
loopne
in
lea
inc
xchg
jbe
addr16
fnsave
imul
loopne
jmp
mov
call
or
popf
scas
push
popa
sub
mov
push
fidivrl
repnz
sub
or
inc
add
bound
pop
push
popf
push
push
adc
sub
mov
pop
mov
push
or
rorb
lret
in
push
xlat
bound
arpl
pop
rcll
xchg
sbb
xchg
xchg
mov
into
shll
mov
test
push
xorb
test
mov
mov
add
das
into
mov
std
mov
pop
pop
adc
in
shl
gs
cmp
mov
stos
test
cmp
pop
sti
mov
xor
push
sbb
stos
adc
inc
mov
sarb
mov
adc
jns
gs
hlt
fcoms
fwait
out
add
xor
sbb
arpl
fs
xor
inc
pop
mov
fiaddl
mov
jns
lret
out
int
inc
lods
mov
jbe
mov
sub
inc
xchg
xorb
cmp
mov
cmp
inc
aas
in
lret
in
in
cltd
cmp
add
jg
nop
in
inc
pop
in
call
push
bound
mov
fists
jne
sti
xor
aam
push
pop
stc
bound
sbb
add
sbb
andb
inc
cmp
test
fwait
ss
out
xchg
pop
sahf
std
inc
mov
sub
mov
or
pop
lods
sbbb
ficoms
dec
stos
mov
jae
mov
mov
xor
dec
scas
test
sahf
roll
pushf
clc
in
iret
cli
and
gs
pop
popf
je
ljmp
jno
scas
cmp
mulb
cmc
mov
pop
test
push
sahf
sahf
or
mov
arpl
xchg
push
stos
pop
decl
outsb
jne
mov
sbb
fistpll
mov
not
cs
sub
sahf
int3
pop
pop
xor
xchg
and
push
pusha
fmull
gs
jp
push
stos
add
les
sbb
ret
hlt
xchg
pop
cwtl
inc
add
arpl
pop
xchg
jns
outsb
jmp
aaa
inc
pusha
xchg
xchg
icebp
gs
lahf
not
cmp
mov
mov
addr16
xchg
jg
add
aaa
addr16
sbbb
push
pop
sbb
ret
movhlps
fnstsw
sbb
fcmovne
fidivs
ds
hlt
mov
out
jno
arpl
inc
xchg
test
out
rolb
aaa
push
jecxz
push
mov
pop
sub
push
pop
adc
add
cmc
mov
mov
inc
inc
xor
popa
ds
mov
je
rolb
add
and
mov
cmpsb
or
xor
call
cmp
lret
mov
xchg
mov
fcompl
pop
call
add
mov
cli
pop
imull
scas
shlb
sub
adc
cmpb
inc
jne
xchg
test
push
js
dec
cmpsb
scas
loop
cwtl
adc
push
push
test
loopne
test
fwait
arpl
test
push
bound
adc
divb
xor
pop
sbb
popf
loop
push
and
jae
xchg
lahf
roll
mov
inc
jns
dec
outsl
lock
je,pn
movsl
lds
test
ret
pop
xorl
inc
and
add
dec
adc
jo
adc
push
push
or
popa
shr
pop
mov
ljmp
dec
lods
sub
jne
imul
lret
xor
push
aam
jp
mov
sub
sub
test
xchg
inc
mov
ss
adc
dec
dec
mov
adc
fcom
push
mov
push
cli
mov
movsl
sub
daa
and
jnp
outsb
out
add
fidivs
pop
aam
inc
mov
leave
mov
or
xchg
inc
jne
imul
aaa
imul
test
or
sbb
loop
and
and
iret
xor
sbb
xchg
xor
mov
xchg
std
jle
jo
fimull
rorb
sbbl
add
push
ret
push
or
xchg
mov
and
jae
dec
orb
sbb
popa
xchg
outsl
or
jno
test
sub
scas
stos
ds
jae
cwtl
push
mov
bound
mov
lret
push
out
js
stos
nop
int3
fnstenv
push
in
and
into
insb
cltd
clc
sbb
jecxz
dec
add
mov
test
pop
jl
push
repz
mov
shlb
mov
fucomi
pop
adc
addb
int
dec
aaa
test
cmpsl
jl
insb
cmp
jmp
and
mov
bound
pop
int
inc
dec
mov
mov
sbb
sub
test
cmp
setb
mov
cmpsb
mov
or
pop
mov
inc
in
mov
int3
outsl
pop
aam
imul
shrb
call
jnp
pop
in
adc
int
add
test
pop
push
pop
mov
enter
popa
ret
and
das
adc
test
adc
push
mov
loope
sub
stos
mov
adc
scas
push
xchg
pop
add
xchg
out
jg
inc
jae
pop
push
or
push
out
push
dec
cltd
push
and
imul
jecxz
jge
sahf
or
mov
outsl
pop
jae
sbb
pushf
pop
push
jae
jo,pt
push
test
adc
imul
pushf
push
dec
bound
orb
in
call
ja
dec
push
mov
jo
jl
lea
add
cmpsb
cmpsl
sti
iretw
xchg
frstor
xlat
add
loope
neg
push
dec
out
and
in
mov
add
das
fadds
cmpsb
lcall
ja
in
data16
lahf
movsb
ss
stos
icebp
adc
test
addb
imul
cmp
fs
ljmp
cmp
jmp
mov
leave
bound
jp
dec
mov
cmpsb
icebp
hlt
inc
mov
push
xchg
aad
popl
stc
cmp
push
inc
jmp
nop
push
mov
lea
dec
lret
data16
sub
xchg
test
mov
dec
sbb
dec
iret
shrb
lods
pop
jae
mov
dec
sub
xor
rclb
lahf
xchg
jno
fistps
dec
mov
arpl
lret
lret
jne
das
lret
and
fwait
sub
jp
cs
or
inc
lods
enter
hlt
mov
mov
aad
push
mov
jl
xor
fists
mov
movsl
push
nop
jg
imul
data16
test
andb
or
std
fisttpl
jle
rcr
add
arpl
sbb
xchg
push
sbb
addr16
pop
sti
adc
push
pop
fwait
pop
xor
xchg
cwtl
ret
cmp
xchg
sbb
incl
dec
pushf
push
pop
inc
lahf
xor
and
scas
push
xchg
lcall
popf
inc
pop
pop
addr16
dec
rorb
push
scas
adc
sahf
popf
mov
adc
jg
sub
inc
and
fistl
adc
dec
lods
mov
xor
mov
mov
out
cmpsl
stos
ret
adc
dec
inc
inc
pop
addr16
add
xlat
ss
jecxz
xor
mov
stos
jecxz
pop
inc
mov
jg
loope
and
mov
lods
add
xor
jno
sub
mov
lret
out
je
sub
or
xchg
rorb
inc
cltd
mov
adc
jmp
xor
in
mov
div
mov
cwtl
lds
and
fldcw
ja
add
push
push
insl
inc
push
cltd
and
pop
ljmp
movsl
push
test
sub
add
test
sub
push
aad
push
push
xchg
hlt
scas
inc
mov
jle
rolb
movsb
test
mov
add
in
sbb
stos
bound
cmp
stos
dec
inc
mov
stc
dec
loope
aaa
mov
push
cmp
test
sbb
subl
rcrb
mov
shll
xchg
fldt
call
int
cltd
js
ret
xor
aad
adc
mov
fcmovnb
and
aad
lds
sub
add
pcmpeqd
push
jmp
pop
pop
dec
push
dec
les
in
pop
and
jp
and
jg
xchg
out
movsl
xchg
shll
shll
or
iret
test
xor
leave
mov
fildll
loopne
lods
cwtl
in
das
inc
nop
out
xchg
fistps
push
mov
lret
and
das
aam
notb
cmp
xchg
das
xor
mov
shll
test
in
out
adc
mov
lcall
jo
call
cmp
push
pop
aas
inc
pop
mov
gs
jnp
mov
test
aaa
in
pop
lods
in
jecxz
and
leave
aaa
fsubrs
es
in
test
roll
cld
mov
cmp
cmc
dec
sbb
xlat
movsb
fidivs
mov
xchg
ds
jo
xchg
add
nop
mov
insb
loope
std
das
or
mov
xchg
xchg
dec
add
sti
mov
jle
int3
lods
mov
lret
mov
add
nop
fnstsw
call
add
sbb
push
add
sbb
mov
dec
xor
out
int3
dec
fldt
mov
jmp
int3
aas
lret
inc
inc
gs
sub
dec
add
mov
add
lcall
test
andl
push
xor
and
mov
cwtl
push
push
call
pop
shrl
je
pop
sub
push
or
mov
lods
insb
test
jnp
test
daa
imul
sub
ret
inc
insl
or
inc
or
or
gs
and
xlat
push
jmp
inc
jae
leave
push
lret
or
sbb
pop
sub
fcompl
cmp
flds
mov
or
je
daa
inc
out
hlt
mov
pop
sub
sahf
adc
cmp
and
mov
push
cmc
mov
cmpsb
adc
loopne
mov
xchg
sbb
pop
loop
sub
lret
mov
test
out
mov
pop
fdivr
pop
push
std
cmpsl
sub
cmpsb
mov
cmc
dec
or
sbb
cmp
in
loope
pop
movsb
lcall
push
mov
lods
test
mov
rcr
pop
dec
ret
out
fisubrs
push
fisttpl
cli
mov
mov
cmc
fcomps
iret
sbb
pop
fwait
pop
xor
movsb
sbb
popf
mov
inc
mov
xchg
push
push
pop
mov
jle
stos
sub
bswap
into
sub
in
mov
ds
rorb
enter
xchg
je
insb
cmp
fnstcw
add
and
ret
pop
mov
jb
loopne
jp
pusha
jns
fsubrl
int3
nop
and
pushf
xchg
mov
icebp
aas
add
pop
sbb
pop
inc
inc
aam
rcll
and
jge
pop
cmc
dec
clc
sub
or
add
leave
int3
cltd
sbb
test
sub
cltd
xor
cld
jbe
les
int3
or
sti
push
lods
lock
jmp
js
addl
add
out
rclb
movsb
add
mov
inc
jg
xor
test
inc
jo
rol
js
stos
mov
inc
aam
mov
dec
cld
pop
bound
push
push
inc
loope
in
mov
inc
imul
out
pop
fs
dec
clc
fs
jl
mov
pop
negl
push
mov
ss
add
jle
mov
repz
frstor
mov
test
rorl
sahf
jne
add
repz
enter
cld
negb
repnz
lds
rclb
lahf
cli
add
loope
mov
jnp
push
sbb
cli
sub
add
int3
and
aam
scas
or
imul
std
push
sbb
hlt
loope
ror
push
hlt
ret
pop
jmp
mov
ds
dec
xchg
and
sbb
orl
fwait
push
pop
aas
pusha
sbb
mov
les
pop
adc
fstpl
xor
adc
cmc
into
sahf
icebp
int3
mov
jo
inc
inc
adc
dec
add
in
jg
jae
push
cmp
in
sahf
lods
sub
lret
push
cmpsb
pushf
push
pop
mov
sub
outsl
rolb
loop
adc
add
es
mov
ds
dec
pop
sbb
stos
outsb
test
imul
sbb
movsb
or
adc
repz
cwtl
xchg
gs
and
loope
xchg
inc
lds
mov
stos
call
or
mov
mov
sbb
arpl
adc
jne
int
pusha
out
jno
xor
test
push
test
jo
subb
or
nop
insl
jge
xchg
movl
mov
pop
iret
jp
lret
cwtl
or
mov
fwait
sub
rcrl
push
sbb
xchg
ret
push
cmpl
inc
ss
push
xor
enter
mov
imul
dec
cmpsl
mov
andb
cmc
cmp
fs
jecxz
pop
adc
test
fs
sbb
mov
and
xchg
xor
dec
test
push
icebp
dec
clc
gs
push
mov
add
inc
jb
pop
lods
pop
lds
test
lret
lret
fwait
shll
lock
ja
inc
push
in
sub
and
icebp
stos
lods
icebp
shrb
ret
mov
shlb
push
dec
fwait
in
jae
xchg
sub
cmp
loopne
imul
jae
push
and
int
movsb
mov
loope
lahf
aad
add
cltd
stc
out
out
lods
sub
std
mov
inc
outsl
idiv
cmc
das
jle
in
aaa
dec
add
clc
add
add
jno
push
add
sbbb
jae
push
nop
icebp
push
lock
shl
imul
xchg
sbb
jecxz
xlat
sbb
loop
nop
pusha
or
in
imul
push
mov
dec
xor
scas
inc
test
orl
push
push
inc
mov
cld
or
cwtl
dec
xchg
shll
add
pop
outsl
cld
test
cmp
decb
ret
dec
push
adc
aam
adc
clc
mov
xor
int3
dec
xchg
xchg
cmp
outsb
mov
bound
rcrb
or
push
xor
lea
push
aad
js
sbb
stos
lcall
xlat
test
jne
jnp
loope
aam
scas
icebp
out
aam
hlt
loope
sbb
subl
jae
and
jl
add
shlb
lds
push
ret
mov
je
ret
je
push
sub
sbb
fsts
jmp
std
push
fsubr
mov
pop
or
sahf
rolb
and
in
lret
push
aam
jle
mov
mov
push
mov
cmp
jbe
out
adcl
or
stc
dec
testl
lea
ret
or
test
mov
ljmp
add
jg
outsb
cs
sbb
mov
adc
dec
call
push
clc
or
push
and
or
in
mov
xor
testl
jl
fs
adc
dec
enter
xor
mov
mov
sub
imul
fdivrs
xchg
popa
test
stos
xchg
adc
testl
ljmp
push
pop
or
or
popa
and
cs
dec
jno
push
loop
jl
ss
lds
xchg
scas
cmp
pop
mov
push
out
stos
jge
roll
inc
fdivs
roll
test
hlt
les
add
stc
sub
sbb
push
mov
das
add
stos
xchg
sti
mov
ljmp
les
pop
in
test
xchg
in
mov
sub
mulps
loope
pusha
insb
pop
out
xor
mov
clc
mov
lds
add
jl
pop
inc
push
inc
shrl
arpl
int3
and
pushf
pop
mov
mov
jbe
je
rclb
xor
int
xor
outsb
push
loop
ficomps
mov
out
hlt
js
sub
push
mov
push
insl
cltd
mov
hlt
inc
pop
push
fwait
pusha
lcall
outsb
sbb
pusha
fs
js
imul
push
out
and
repz
rcll
pop
aam
scas
aad
and
aam
clc
dec
pop
jae
gs
leave
push
mov
cli
fs
pop
sti
add
ljmp
add
stos
lret
mov
daa
lret
dec
scas
push
or
int
adc
jo
push
movsl
or
or
and
in
aad
mov
jb
cld
and
mov
out
push
push
add
push
pop
jae
adc
dec
jnp
fxam
sbb
inc
mov
pusha
xorl
inc
mov
dec
out
cld
push
sarb
xchg
sbb
in
push
leave
or
xchg
enter
es
out
pop
cwtl
mov
cmp
sbb
ss
add
or
aam
testb
lret
xchg
jns
dec
cwtl
fisttpl
push
dec
and
into
cmc
fwait
jl
insl
pop
movb
xor
fidivrl
push
add
fcmovu
aam
push
push
pop
int3
inc
xchg
inc
xlat
push
popf
nop
loope
cmpsl
imul
test
outsl
push
cmc
xor
cmp
mov
xchg
xchg
out
sti
lcall
arpl
int3
lods
psrad
cmp
sub
inc
xchg
rorb
push
mov
xor
shll
dec
adc
inc
xchg
fcoml
push
in
mov
ss
dec
dec
imul
lcall
fnstcw
jle
pop
jo
imull
cmp
mov
rclb
jp,pt
cmp
inc
daa
dec
xchg
jg
jle
adc
out
imul
xor
in
dec
sbb
cmc
xchg
fucomp
ret
ss
outsb
enter
std
popa
or
mulb
sbb
xlat
pop
add
cmp
loop
or
stc
inc
cmc
arpl
cmp
mov
jmp
xchg
test
cmc
adc
sub
iret
dec
ret
fnstsw
loopne
in
enter
sbb
pusha
scas
or
lock
jbe
pop
add
mov
add
gs
xchg
icebp
lret
sub
jo
testb
mov
fmuls
jne
add
iret
sbb
and
repz
add
jns
pop
push
int3
jb
mov
aam
mov
lds
ret
imul
push
or
movsl
cld
pop
mov
test
inc
mov
mov
xor
mov
movsl
loopne
cmp
call
push
push
cmc
out
sub
fstl
repz
into
rcll
add
push
sub
inc
sub
pop
dec
xlat
and
test
or
mov
push
js
jecxz
arpl
add
jb
inc
frstor
xor
inc
ljmp
xor
mov
test
or
jo
mov
je
mov
add
pop
inc
mov
mov
movsl
sbb
or
leave
rorl
mov
fs
push
adc
fldt
stos
xlat
dec
jecxz
je
inc
xchg
dec
inc
call
sbb
popf
and
aad
movsl
xchg
and
jnp
push
stos
dec
cmp
xchg
mov
and
add
loope
int
in
adc
add
jae
es
incl
das
adc
sahf
push
mov
xchg
pop
in
fimull
scas
daa
dec
cwtl
adc
xor
imul
mov
add
jp
xrelease
js
lds
push
mov
repz
push
dec
ret
inc
sub
sbb
xchg
cmp
mov
filds
and
jo
daa
rorb
bound
and
adc
xchg
dec
xchg
xchg
mov
cmc
mov
inc
jns
fldt
add
xchg
fstpt
leave
imull
inc
xchg
imul
xor
ret
ret
call
scas
out
in
lds
in
inc
les
scas
int
dec
push
and
mov
push
and
bound
or
push
fwait
gs
mov
in
xchg
lock
fildll
fimuls
sarl
inc
mov
xchg
in
xchg
aaa
lods
std
fistl
jo
pop
jge
cmpsl
imul
out
int3
mov
mov
and
repnz
add
push
inc
sbb
mov
sti
push
lock
push
fs
pushf
mov
push
push
sbbl
and
mov
out
inc
jle
ret
push
inc
jno
jno
lods
andb
push
das
pop
lods
cmp
mov
jmp
push
xchg
xchg
add
lcall
outsl
sbb
adc
imul
and
popf
mov
or
cmp
sbb
mov
sbb
fnstsw
sahf
pop
es
jbe
sub
inc
push
imul
jno
aaa
sub
sub
lret
int
imul
mov
adc
dec
inc
cmp
lds
mov
xor
mov
sbb
into
mov
fwait
mov
pop
inc
or
push
fcmove
ja
loopne
jbe
sbb
jmp
rcrb
mov
ldmxcsr
int
and
cmc
xor
mov
lret
push
adc
divb
push
fsubrs
test
sbb
sarb
cmc
aaa
dec
push
int
xchg
dec
inc
js
add
inc
lds
test
gs
push
addr16
mov
xor
mov
push
mov
mov
or
or
sbb
movsl
pop
ret
dec
pusha
jae
fsubrp
adc
icebp
cwtl
fwait
sub
pop
addr16
lods
xchg
inc
inc
xchg
cmp
aad
inc
pusha
jnp
cmpsl
inc
aam
icebp
sbb
cmpsl
push
and
push
test
mov
in
adc
std
cmp
ja
ficoml
in
lret
push
stos
jnp
bound
pop
mov
fnsave
and
inc
ds
xchg
pop
out
mov
lret
push
pop
out
jns
mov
js
cmpl
xor
mov
jns
or
mov
mov
hlt
icebp
add
aam
insb
jle
inc
sub
cwtl
popa
hlt
pop
dec
loop
push
add
sarl
sbb
inc
call
ljmp
cmc
loope
incb
xor
inc
sbb
subb
repnz
in
lock
ret
add
data16
jbe
iret
ljmp
jmp
dec
subl
cwtl
mov
adc
add
pop
leave
xchg
cmpsl
mov
jne
mov
imul
xchg
seta
flds
push
fdivrl
std
dec
inc
in
adc
enter
dec
mov
xchg
jecxz
fildl
gs
pop
mov
and
mov
rcrl
aas
pop
cmp
push
ss
test
int
push
out
mov
jb
js
mov
mov
imul
push
push
pop
dec
das
sub
sbb
push
inc
das
cs
mov
lds
loope
lea
shlb
push
xchg
xlat
push
repnz
ret
inc
std
push
lea
sahf
test
xor
cmpb
dec
repz
pop
push
lret
add
nop
xor
jo
dec
pop
mov
out
sub
fistl
scas
mov
mov
xchg
bound
inc
adc
repz
jg
mov
mov
dec
sbb
xchg
daa
shlb
xlat
lahf
mulb
scas
pop
mov
movsb
pop
and
pop
hlt
add
rorb
add
jge
pop
add
mov
scas
cmpsl
jmp
sbb
sarl
aas
adc
rcl
nop
cmp
scas
lcall
lahf
dec
jne
xor
jecxz
cmp
sub
mov
mov
pop
jg
push
das
scas
mov
aad
fwait
jmp
cmpsb
shlb
add
add
push
xor
out
fs
cmp
push
xchg
hlt
and
sahf
inc
repnz
enter
push
movups
fistpl
out
mov
push
pop
adc
nop
shlb
fisubl
inc
jo
fmull
sub
sbb
loop
sub
push
outsb
loop
inc
rcll
fwait
xchg
jmp
mov
nop
mov
mov
sub
mov
pop
mov
cmp
xor
xchg
inc
stc
enter
mov
xchg
xor
inc
test
inc
mov
or
or
add
inc
and
xchg
jns
fwait
push
addr16
inc
mov
shr
ja
mov
test
add
loopne
iret
push
dec
xchg
push
call
shrl
cld
mov
or
mov
fiaddl
sbb
cwtl
call
cmp
popa
mov
lea
sti
or
inc
pop
cli
mov
push
push
xchg
sub
fxtract
dec
dec
sub
insb
bound
jae
inc
pop
imul
mov
mov
and
or
cltd
cmp
fisttpll
jecxz
add
push
cld
mov
push
push
jmp
cld
cli
adc
or
sbb
leave
popa
popa
fucomi
shr
out
scas
cli
cmp
jae
cmp
fcomp
stos
sub
dec
into
add
scas
mov
leave
add
fstpt
dec
sub
ss
push
jnp
jae
cmp
and
test
movups
bound
cld
and
ljmp
mov
mov
arpl
push
jl
xchg
jle
jns
enter
or
push
mov
sub
xor
add
enter
mov
movsl
pop
ja
out
stc
fucomip
mov
aas
pop
cltd
cmp
mov
loopne
cli
scas
mov
sub
xchg
lock
inc
push
add
std
outsl
aam
cmp
jae
roll
std
dec
fldcw
xlat
and
stos
js
aam
je
fucomp
push
mov
mov
movsl
pop
imul
test
notl
data16
add
rcrb
je
ret
loop
es
enter
adc
iret
cmpsb
push
jne
or
in
and
sub
imul
sbb
pop
test
adc
dec
dec
or
lock
pop
clc
pop
jbe
insl
cmp
mov
xchg
mov
mov
jg
rorb
jae
jb
cmp
adc
jo
jno
cmpsb
movb
js
test
mov
in
imul
sub
xchg
add
leave
ss
xor
and
orb
dec
xchg
arpl
cmc
mov
sbb
pusha
fst
push
imul
jmp
cld
sub
adc
lcall
test
div
shrb
pop
int
out
loopne
cmp
xchg
mov
sbbb
nop
out
loop
sub
pop
xor
lods
sbb
lret
and
push
fisubrs
or
test
movsl
lock
mov
push
jno
or
ds
jl
int
dec
push
dec
nop
inc
pop
mov
lods
and
mov
pop
ja
pop
lahf
shlb
lret
pushf
stos
mov
les
ret
shrl
sar
jae
add
jbe
xor
push
imul
in
shlb
mov
std
int3
dec
aas
cmp
ret
and
sub
pop
ljmp
dec
inc
cmpsb
mov
js
dec
add
mov
cmp
rcl
js
xor
xchg
stc
xchg
leave
lds
repnz
arpl
xchg
adc
fsubl
loope
mov
mov
and
ret
mov
imul
xchg
hlt
clc
mov
xchg
dec
or
cmp
adc
mov
rorb
mov
lods
loopne
sti
mov
cmc
pop
add
mov
or
in
mov
int
shl
or
sbb
mov
or
stos
lret
mov
sti
dec
je
mov
repnz
mov
fldl
mov
jmp
and
outsb
lods
mov
std
mov
test
jecxz
ficompl
mov
shrb
or
cs
data16
scas
imul
cltd
adc
cmpsl
sub
xchg
xchg
ss
es
into
mov
lret
mov
jnp
ds
mov
or
mov
rcll
mov
pop
xchg
jecxz
jle
arpl
cld
push
fadds
and
or
hlt
mov
sbb
lds
mov
movsl
movl
dec
cmp
out
xchg
mov
push
adc
or
hlt
pop
xor
aad
mov
xchg
outsl
cmp
push
lods
js
int
imul
mov
mov
xchg
in
push
fldt
sarl
popa
pop
dec
lods
insb
lret
lahf
pop
cmp
pop
and
jg
xor
jge
pop
sarl
xor
shlb
shr
xor
je
popf
xchg
mov
fistl
xchg
out
inc
sahf
push
movsb
mov
imul
cmp
xor
fwait
pusha
add
mov
arpl
enter
ja
sti
mov
movsl
dec
imul
cmp
imulb
subl
inc
pusha
popf
add
push
push
rcll
xchg
in
out
push
mov
outsb
repz
pusha
mov
sbb
mov
popa
mov
popf
es
int
lahf
push
repnz
add
out
ss
sub
add
popf
loope
mov
dec
ljmp
mov
push
dec
test
fwait
clc
cmp
adc
je
fyl2x
stos
in
call
pop
addr16
loopne
loopne
or
add
dec
mov
aam
loope
andl
lret
cs
pop
addb
mov
dec
lods
jl
cwtl
xchg
fisubrs
add
jmp
icebp
insl
xlat
lahf
sarl
jecxz
shl
pop
lahf
adc
addr16
js
fbld
sarb
out
push
jno
sub
mov
pop
push
pop
cmp
ss
push
cmpl
dec
xchg
jnp
dec
pop
adc
cmp
sti
mov
sbbl
notl
ret
or
rolb
mov
mov
ja
xchg
xlat
push
adc
xchg
dec
or
pusha
push
jecxz
test
jmp
cmp
icebp
stos
mov
sub
fmull
sub
sbb
scas
pop
inc
out
or
test
call
daa
xor
dec
push
in
lds
jge
ljmp
icebp
sti
xchg
jae
jno
mov
jno
std
out
in
pop
icebp
mov
pushf
into
or
pop
xor
icebp
in
xor
shrl
push
mov
xor
in
call
sub
mov
arpl
lods
push
inc
push
xor
es
or
jmp
sarl
call
lods
mov
insb
add
mov
loope
pop
dec
adc
sub
inc
mov
int
cmc
js
jbe
push
mov
js
xlat
pop
out
out
jge
pop
mov
jo
adcl
jno
jbe
insl
sbb
jecxz
push
popf
aaa
out
es
pop
pushf
adc
dec
jecxz
testb
adc
in
jo
mov
jge
or
adc
leave
and
add
lea
xchg
lock
fistpl
inc
cmpb
inc
outsl
int
jne
pop
imul
cmp
pop
inc
popf
lret
les
daa
aam
inc
push
sub
pushf
sbbb
cmpsl
xchg
add
sbb
or
inc
push
push
cli
shrl
je
mov
sbb
into
inc
ret
sub
test
ja
sbb
jp
and
xor
sti
pop
pushf
fisubrs
or
mov
mov
out
rorl
jecxz
cmpl
jp
add
inc
sbbl
cli
xor
cwtl
std
xchg
in
sahf
xlat
loop
aas
mov
adc
xor
out
add
test
jp
ljmp
in
mov
cmp
push
out
pushf
xor
pop
xor
jmp
and
aad
mov
test
lcall
push
cmp
mov
incl
mov
call
mov
push
inc
in
push
xchg
fistps
cltd
arpl
shl
mov
pop
bound
add
push
das
rcrl
cmp
jb
add
sbb
movsb
pop
ss
sub
xlat
ss
in
test
adcb
or
dec
pop
test
stos
xlat
inc
jle
adc
cmp
outsl
mov
inc
mov
dec
dec
sbb
enter
mov
repnz
std
push
lret
daa
lds
pop
rcrb
dec
push
jge
sub
outsb
jl
sbb
dec
test
lock
xor
es
inc
or
into
das
lcall
add
imul
or
inc
pop
dec
push
jle
mov
or
adc
ss
scas
mov
popf
xchg
jmp
dec
and
jns
jae
adc
fisubl
sarb
je
or
mov
mov
outsb
lods
out
inc
push
adc
xchg
gs
out
scas
adc
inc
inc
sbb
or
jl
sub
add
xchg
xor
sarb
pushf
mov
out
scas
pop
ficompl
sub
inc
cmp
nop
dec
das
mov
jge
add
jecxz
xchg
jo
mov
repnz
jae
jmp
lret
or
insb
in
leave
or
fcmove
das
inc
dec
add
or
in
stos
into
xor
xchg
fiadds
mov
inc
xor
fstl
mov
aad
je
lods
lea
push
mov
sahf
lods
pushf
test
mov
mov
shrl
xchg
enter
jle
and
daa
lods
iret
loopne
mov
insb
or
pusha
lods
test
xor
jns
inc
mov
outsl
xor
xchg
sti
hlt
or
int3
aas
mov
inc
loop
jae
adc
iret
xor
or
pop
push
stc
mov
xchg
and
lods
or
xlat
decb
cmpsl
loop
or
insb
add
xchg
sti
or
xchg
xchg
aas
pop
sbb
xchg
data16
jbe
ret
sbb
pop
push
icebp
add
sub
adc
add
push
loope
popf
mov
ret
pop
test
std
gs
add
sub
dec
add
mov
push
repz
or
stos
jo
and
pusha
push
clc
fsubs
cmc
jge
in
mov
test
loopne
push
loop
xor
cmpsl
push
push
jmp
scas
mov
ljmp
cli
push
lret
mov
int3
cmp
mov
fsts
stos
in
fstl
in
push
insl
push
sahf
sbb
pop
push
jg
stos
dec
incl
insb
jmp
mov
push
and
sbb
or
loopne
lcall
inc
mov
mov
mov
mov
fistl
fldpi
leave
popf
xor
sub
xchg
and
loope
int3
insl
pop
pushl
mov
pop
xor
int3
icebp
xchg
arpl
clc
mov
pop
dec
xchg
icebp
ljmp
push
jae
pop
add
jl
jp
and
dec
cmpsb
arpl
mov
push
mov
mov
aad
aam
or
into
sahf
mull
mov
and
xor
lods
xchg
ret
popf
pop
ss
push
fwait
jle
adc
jbe
cmp
cwtl
cmp
inc
mov
int3
je
push
into
sbb
sub
movsl
push
add
imul
pop
out
pop
pop
adc
cli
push
sti
das
in
mov
cmp
pushf
stos
or
xchg
adc
es
rcrl
scas
mov
imul
and
jmp
push
insb
push
pop
into
into
push
popa
leave
or
jecxz
xchg
sub
flds
inc
lds
and
aam
cmp
push
jmp
les
call
adc
xchg
lea
pop
dec
push
push
xchg
or
call
push
addl
cli
dec
dec
insb
in
jne
dec
sub
mov
dec
cmpsl
cmp
pop
ljmp
sbb
dec
out
xchg
or
xor
cmp
loop
cmp
add
data16
cmp
jg
mov
repz
loopne
lods
fcom
pop
push
mov
idivl
jns
fpatan
lahf
jp
mov
jo
mov
aas
lds
arpl
mov
adc
loop
stos
addr16
imul
iret
sub
jp
int3
sbbb
mov
nop
cld
outsb
mov
inc
dec
lds
popa
out
xor
mov
mov
adc
add
lods
dec
mov
sub
sbb
or
add
add
cli
cmc
mov
and
add
lods
pop
rclb
pop
xlat
jb
xlat
aad
aas
xchg
test
fcomps
sub
shlb
pop
movl
lods
push
sbb
xchg
sbb
adc
out
adc
jb
loopne
pop
sub
sbb
or
and
xchg
and
inc
aaa
xchg
fiaddl
jae
jl
dec
ret
test
dec
inc
xor
cmpsb
dec
pop
frstpm(287
loopne
sub
cmpsb
mov
popa
push
lods
lret
in
mov
pop
daa
xchg
in
out
mov
pushl
lds
sub
cmpsb
cs
nop
lsl
or
and
ja
sub
les
aaa
daa
fwait
popa
cld
push
mov
cmpsb
mov
push
or
es
cmp
stos
pop
dec
out
dec
les
test
fmul
and
les
addb
mov
jbe
outsl
cmp
push
in
xchg
in
pop
aad
add
das
xor
outsb
dec
pusha
cmp
ficomps
in
scas
mov
sahf
xor
lcall
adc
fldenv
or
and
dec
xchg
and
addl
insl
imul
sub
js
jle
test
movsl
mov
testl
outsl
lret
hlt
cmpl
xorb
cmp
shll
push
mov
xchg
aad
sar
sarb
popa
movsl
loop
rcrb
mov
cwtl
mov
leave
mov
repnz
mov
sub
shlb
ljmp
mov
dec
mov
shll
xorl
adc
js
mov
inc
add
push
or
hlt
jnp
je,pn
xor
outsb
pop
mov
add
bound
inc
std
push
repz
insb
dec
mov
fldt
mov
and
imul
dec
sbb
add
jb
mov
cmp
pusha
inc
and
in
push
cli
cmp
aam
nop
in
in
je
test
lods
xchg
outsl
insl
mov
cwtl
jae
dec
xor
dec
ret
cmpl
or
repnz
fnstenv
insb
xchg
mov
and
aas
loop
xchg
mov
mov
repnz
add
rolb
adc
push
cltd
mov
scas
jle
lret
imul
dec
mov
add
bound
and
outsl
mov
inc
push
insl
ja
sbb
cmp
inc
shrl
jge
into
fistps
clc
cli
cmpl
jb
xor
pushf
adc
xor
aam
js
push
arpl
popa
cmp
cmp
stos
push
mov
or
jnp
test
flds
cmp
inc
mov
ret
xor
dec
daa
push
sbb
sbb
xor
test
pop
jo
arpl
sbb
lret
sub
mov
mov
mov
cmp
pushf
or
push
xlat
ror
inc
dec
inc
lahf
fwait
lret
repnz
lahf
jns
and
ja
lods
sub
movsl
andl
jmp
pusha
jmp
clc
xor
xchg
orl
push
aam
les
sbb
jmp
ret
repz
addb
add
je
les
nop
xchg
or
pop
mov
add
xor
js
add
xchg
xor
sbb
cmpsl
imul
jmp
mov
cwtl
add
in
rcrb
adc
sahf
scas
add
imul
inc
fdivl
jp,pt
mov
mov
jmp
push
mov
imull
push
enter
repnz
in
stos
fstps
jne
out
pushf
mov
outsl
sahf
pop
sbb
mov
out
dec
sbb
int
movsb
sub
dec
aas
ja
shr
mov
test
jnp
pop
jle
dec
scas
in
xchg
bound
repz
pop
push
pop
jg
or
push
sarb
mov
int
xchg
imul
jo
pop
cmp
flds
mov
aam
jno
out
cwtl
dec
pop
lret
pop
or
repnz
jl
mov
mov
int
divb
mov
lcall
stos
pushf
movsl
pop
mov
cmp
pop
mov
push
jns
mull
lods
cmpsb
add
sub
push
cmp
fsubl
pop
push
xorl
aas
xor
pop
shl
das
scas
loop
push
pop
xchg
mov
insb
scas
in
or
push
jb
jmp
add
cmpsb
sbb
dec
ja
xchg
inc
pop
ljmp
pop
dec
cli
inc
ja
addr16
mov
push
push
cmp
and
xchg
cmp
pop
mov
bound
jbe
imul
loope
stos
iret
inc
add
fidivrs
fs
out
or
xor
cmp
fnsave
scas
aas
out
cmp
test
out
pop
sbb
pop
sbb
and
int
popf
adc
xchg
fwait
jne
rcll
add
popa
add
push
push
sub
test
or
or
outsb
sbb
mov
cmp
lret
inc
jne
das
adc
mov
dec
jbe
mov
jg
jmp
movsl
adc
xchg
addr16
mov
mov
lea
ret
inc
add
or
jge
or
loope
fstpt
in
cmp
test
pop
ss
sbbb
iret
inc
rcr
popf
pop
jne
rcrl
adc
pusha
cmp
test
leave
dec
jmp
jge
xchg
pop
mov
popf
jnp
movq
in
cmpsb
dec
pop
sub
and
aas
mov
or
jno
and
daa
xor
sbb
js
jbe
inc
rcr
rolb
out
fidivrs
pusha
hlt
in
fdivr
sub
inc
test
outsb
pop
and
out
mov
jns
arpl
enter
loopne
xchg
fists
fsubrl
ret
jecxz
andb
aaa
mov
xor
mov
mov
cmp
jae
jb
pop
mov
mov
inc
loopne
xchg
popa
sti
mov
les
or
pop
pop
and
jge
std
xchg
testl
pop
stos
movsl
add
sbb
and
roll
adc
cs
push
inc
sbb
pop
imul
pop
cld
fs
and
xor
inc
leave
inc
ss
adc
fisubrs
mov
jecxz
sub
push
jno
popa
scas
add
and
jae
pop
mov
dec
loopne
rcrl
jnp
mov
xor
add
or
pusha
inc
fwait
lcall
adc
rcll
aam
and
cmp
jnp
sub
bound
xchg
lock
subb
xchg
dec
dec
mov
xor
lea
jno
imul
push
cli
fistpll
sub
inc
jo
call
dec
mov
jmp
cmpsl
mov
pop
fmulp
loope
lods
xchg
sbb
push
sbb
dec
xchg
jne
sbb
xor
dec
imul
lret
aas
fstpl
movsl
stc
mov
and
inc
mov
imul
jmp
dec
pop
loopne
xor
cmp
lock
add
pop
cltd
mov
add
std
jmp
mov
jle
add
mov
dec
pop
mov
or
pop
es
or
push
mov
pop
xchg
clc
adc
jnp
lea
loope
inc
ss
scas
push
pop
push
jo
popa
push
inc
loope
sub
in
cs
jle
and
sub
xor
jae
inc
lcall
add
jp
xchg
dec
inc
cwtl
movsl
lret
lods
mov
cltd
test
cmp
fistpl
inc
jne
aaa
in
add
dec
int3
inc
scas
in
cmp
lret
jbe
mov
xor
adc
js
std
lds
xor
imul
jge
or
ljmp
and
jns
outsl
pop
mov
xchg
outsb
stos
adc
cli
add
xor
mov
ja
xor
inc
jnp
push
dec
scas
mov
scas
notb
pop
scas
jmp
pop
hlt
fs
sbb
xchg
adc
loop
xor
test
add
jge
inc
fcompl
and
jl
xlat
out
je
cmc
xchg
cmp
sub
mov
push
inc
pushf
ror
std
mov
arpl
aad
jae
leave
nopl
insb
push
jecxz
sbb
les
mov
hlt
daa
iret
mov
rcll
sbb
repnz
sbb
adc
popf
divb
mov
dec
push
testb
pop
aam
sbb
xchg
jge
enter
cmp
ret
xchg
or
push
pop
inc
mov
sub
leave
jge
ficoms
lds
sub
sub
shll
fadds
inc
xchg
pop
ds
cmp
mov
ss
fists
pop
jne
add
ja
mov
sbb
aam
fdivs
and
jno
ds
or
dec
insl
je
daa
or
sti
xchg
sarb
nop
or
shll
inc
loop
fcompl
leave
fstl
xor
dec
popf
sbb
push
pop
dec
loopne
insb
adc
sbb
pop
in
and
fcomps
in
fwait
in
les
xor
mov
aaa
ret
push
inc
arpl
mov
inc
pop
mov
or
outsl
shll
pop
inc
mov
cmp
xchg
pop
addb
ret
out
arpl
repnz
outsl
jnp
jae
add
andb
mov
push
and
mov
mov
fiaddl
push
xor
mov
rol
jmp
mov
adc
flds
and
xchg
mov
mov
mov
push
fwait
jbe
and
rcr
aad
xrelease
lret
std
dec
aas
inc
jbe
pushf
add
sub
push
leave
push
cmpsb
jmp
repz
adc
scas
push
push
cmp
sub
pop
sub
data16
aam
or
jl
aaa
mov
inc
adc
or
sbb
testb
mov
sbb
push
rolb
test
mov
mov
xchg
setno
pop
fsubl
cmpl
pushf
movsl
ds
das
stc
daa
inc
mov
in
outsb
stos
test
push
ror
jl
clc
imul
sbbl
pop
dec
jo
hlt
aaa
iret
repz
xchg
sub
cmpsl
pushw
pushf
sarl
mov
sbb
fsubs
in
scas
jle
xchg
pop
scas
and
and
punpcklwd
xchg
jecxz
mov
mov
xchg
cwtl
pop
sarl
cmpsl
mov
dec
xchg
ljmp
mov
mov
xchg
sub
xor
mov
out
cmp
or
ror
sub
xchg
push
jbe
movsl
pop
negb
cmp
ja
jbe
dec
fdivs
popa
or
outsb
imul
stos
repz
inc
mov
fstp
adc
add
ret
sbb
push
or
int
sbb
ret
nop
fiaddl
lret
nop
jbe
add
ds
xor
in
add
sbb
call
mov
jmp
push
shl
jo
scas
jbe
inc
divl
cli
add
mov
adc
push
or
mov
sti
or
out
push
hlt
jne
fistpll
push
stc
or
add
sbb
dec
int
and
mov
in
xor
push
cmp
pop
enter
xlat
cltd
jno
aaa
cltd
imul
inc
jmp
dec
jo
jns
mov
addr16
dec
mov
test
jae
divl
into
sub
sbb
xor
inc
xor
jb
sti
int
cmovae
cmp
cmp
lock
scas
xchg
pop
mov
dec
push
mov
jae
push
cld
sbb
imul
xchg
ss
lret
add
sbb
ds
popa
jne
iret
jl
lods
mov
sub
iret
sbb
sbb
push
leave
daa
adc
mov
sbb
fadds
mov
in
mov
pop
and
mov
sbb
mov
jecxz
fimuls
mov
es
lock
jno
jecxz
hlt
mov
cmc
hlt
sbb
xor
in
es
ret
push
notl
movsb
xchg
mov
ds
cmp
scas
sub
cli
aad
sub
int3
test
sub
pushf
mov
or
or
sub
shl
lods
cltd
or
ja
scas
jp
push
xchg
push
push
stc
movsb
cmpsl
add
mov
mov
fdivrl
ljmp
bound
xchg
inc
sub
testb
pop
mov
add
jnp
lcall
rorl
fwait
cmp
lods
test
or
mov
mov
cmp
xchg
mov
mov
mov
jecxz
dec
arpl
adc
xorb
and
gs
test
nop
or
jnp
negl
sub
fdivr
xor
int3
mov
ss
jno
imul
inc
push
mov
fs
iret
sub
lahf
aaa
sbb
ret
cmp
jbe,pn
push
pop
or
inc
xchg
in
push
daa
or
dec
xor
xchg
mov
sbbb
ljmp
das
jne
clc
pop
mov
out
ret
xchg
subl
das
dec
mov
mov
pop
dec
dec
fisttpl
mov
out
cmpl
dec
out
jae
or
mov
and
jg
dec
sub
inc
in
std
ret
shll
pop
jno
mov
addb
sbb
mull
xor
jns
adc
enter
add
mov
lret
adc
push
stos
inc
rcll
xor
mov
scas
cmp
push
shll
pusha
cltd
mov
adc
jno
adc
mov
cs
add
outsl
jl
pop
sbb
mov
cltd
push
cmp
insl
in
cmp
push
cld
pop
inc
and
subl
gs
loopne
icebp
cmp
not
jns
sti
loop,pt
ljmp
pop
xchg
imul
fs
adc
push
jle
imul
cli
das
dec
in
mov
jns
mov
scas
mov
mov
xchg
mov
jle
aam
push
pushf
sub
push
cmp
shll
les
setnp
cmp
sahf
stos
cmp
sub
mov
sub
jecxz
fwait
cmc
loope
rsm
jp
rep
push
in
hlt
stos
and
xor
stos
cli
mov
jne
jae
dec
mov
cmp
out
pushf
mov
nop
add
xchg
call
daa
cld
adc
fcmovnbe
ja
arpl
in
pop
and
scas
lock
push
sbb
push
mov
sub
sub
sub
lock
inc
adc
call
dec
push
imul
iret
or
out
push
pushf
mov
fnstcw
xor
es
xlat
lea
test
stc
imul
clc
orl
dec
inc
lods
xor
sbb
mov
movsl
lcall
and
movsb
mov
lods
sahf
xor
xor
cmp
add
sub
mov
adc
aad
gs
push
or
dec
sbb
inc
dec
insl
ja
or
repz
out
add
lret
jae
call
out
add
mov
out
inc
sbb
adc
aaa
jae
cwtl
sbb
addr16
sti
xchg
mov
jl
stc
add
mov
mov
add
lret
xchg
mov
jmp
cmc
dec
push
std
xchg
popa
sbb
scas
jno
add
call
in
xlat
ss
scas
lods
or
cmp
mov
sub
aad
and
push
pop
add
lods
fnstcw
iret
sbb
add
xchg
xor
or
pop
mov
adc
pop
xchg
xor
movsl
gs
stos
jne
sti
cmp
sbb
mov
sti
arpl
std
push
sbb
or
push
test
in
mov
rorl
fidivrl
sbb
cli
cmp
xor
dec
loopne
xchg
into
js
xchg
mov
loope
mov
dec
mov
pop
push
fidivrs
stos
shr
les
daa
insl
sbbl
inc
jge
mov
sub
cltd
inc
mov
sbb
cmp
add
mov
mov
incb
xchg
outsb
stc
pop
faddl
lret
in
xor
outsl
adc
shrb
int
jo
mov
insl
xchg
inc
es
hlt
mov
adc
dec
xor
xchg
popf
fidivl
ds
cmp
mov
mov
cltd
mov
sub
dec
cmpsl
sbb
dec
mov
mov
add
notl
dec
lcall
cmp
xchg
cmc
mov
imul
pop
jo
add
xchg
in
cmp
dec
lret
aaa
test
fidivrl
mov
sub
clc
dec
in
std
inc
mov
and
int3
add
ret
insb
shlb
sub
fs
jge
xchg
scas
jmp
sub
xchg
jns
dec
jne
push
xchg
mov
xchg
sbb
sub
popf
cmp
inc
lock
outsb
movsb
divb
movsl
loopne
out
aam
or
dec
pslld
mov
push
cltd
dec
lcall
pop
push
js
sub
ret
bound
xchg
stos
stos
pop
sbb
cltd
jl
xorb
sbb
lahf
dec
in
adc
pop
in
cmp
movsb
or
lcall
jae
subb
loopne
std
shrl
or
xchg
xor
popa
mov
scas
in
int3
mov
adc
and
loopne
js
add
sub
pop
jno
out
lea
jae
addr16
jecxz
jae
mov
mov
frstor
imul
xchg
loop
add
xor
orl
mov
icebp
loop
out
enter
test
movsb
movsb
scas
inc
xchg
lret
or
or
jp
out
in
push
jp
sub
sub
leave
push
jno
fisttps
mov
push
rcrl
repz
out
mov
rorl
adc
sbb
add
les
fsubs
insb
mov
xchg
inc
stos
ds
test
ja
mov
addb
push
lods
popl
call
cs
mov
cltd
hlt
pushf
xchg
sub
jns
lods
sbb
test
out
sahf
push
outsl
out
dec
stos
lea
jae
and
sti
es
fwait
cmp
stc
jns
fidivrl
mov
mov
push
pop
adc
mov
daa
adc
jp
inc
push
and
call
addr16
aas
sbb
jo
js
pop
shrl
sub
jb
xchg
pop
mov
int
push
add
dec
std
lcall
es
std
jbe
pop
and
pop
cmp
jno
sbb
mov
pop
clc
xor
inc
es
icebp
in
int3
mov
push
cmp
inc
mov
cmp
lret
mov
lret
cmp
insl
mov
das
push
aas
mov
adc
pop
lcall
adc
pop
test
and
add
push
decb
dec
rol
mov
push
add
gs
xchg
mov
inc
or
js
jnp
sub
enter
ljmp
xor
mov
addr16
ljmp
cmpsl
add
iret
push
xor
xchg
repnz
dec
xor
es
xchg
imul
lods
inc
push
bound
xlat
jb
jae
outsb
shrl
jle
mov
mov
jmp
js
push
mov
lret
jnp
pusha
cmp
cmp
inc
sti
xchg
jecxz
in
mov
and
sahf
test
cmp
inc
aam
call
pusha
xor
sbb
mov
ljmp
cmp
std
xor
dec
dec
popa
test
cmp
jmp
cmp
push
cmp
arpl
mov
sti
je
lods
pop
adcl
outsb
pop
mov
arpl
clc
pop
popa
test
mov
imul
cli
daa
bound
mov
and
pop
mov
popf
in
sub
flds
mov
arpl
mov
jo
push
data16
shlb
inc
rclb
dec
stc
sbb
push
xlat
aaa
addl
cmp
out
mov
add
scas
jmp
xchg
pop
faddl
shrb
jle
add
add
lock
fcmovnbe
leave
int3
jb
sbb
fcompl
lcall
fwait
inc
dec
sbb
fwait
scas
lock
incb
call
jge
setbe
add
jae
gs
arpl
sti
jp
jno
mov
shlb
imul
mov
shll
xlat
std
jns
mov
ds
call
mov
push
inc
test
add
push
stos
pop
pop
pop
arpl
js
mov
aas
jbe
gs
jp
inc
cmp
mov
data16
fs
aad
data16
shl
frstor
adc
cmc
out
jmp
xlat
and
mov
inc
in
push
inc
clc
sub
into
ds
jp
mov
sub
or
cwtl
fldcw
pop
fcos
push
cmp
inc
movsb
ds
mov
popf
repz
fnstcw
jno
sub
cmpsl
and
repz
repnz
sbb
push
int
in
decl
aaa
cmpsl
leave
add
mov
inc
leave
lret
repz
add
jg
cli
std
add
jle
icebp
lcall
lock
or
pop
push
lods
outsb
adc
mov
pop
stc
xchg
out
fisubl
or
insl
jg
sbb
ret
push
adc
mov
ja
aas
sbb
add
pshufw
scas
or
jecxz
aaa
setge
mov
movsl
dec
movsl
lcall
mov
icebp
sti
aam
adc
out
aam
jnp
sbb
repz
orl
xor
out
mov
pop
clc
fldcw
push
ret
mov
fdivl
scas
test
pop
sbb
xor
push
clc
outsb
ret
popf
lea
dec
mov
xchg
cmp
mov
imul
jle
sub
clc
push
shl
or
test
js
push
test
inc
mov
call
stc
fmulp
cmp
inc
cmp
out
andb
stos
push
pushf
mov
adc
or
jbe
stc
movsl
jae
mov
cmp
add
pop
imul
arpl
ret
repnz
rorl
or
pop
andl
sbb
mov
jg
mov
sub
cwtl
or
cmp
repz
sarl
mov
jge
lahf
and
test
xchg
jl
xor
mov
push
vmaxpd
mov
scas
sbb
jge
icebp
jns
mov
jl
mov
mov
shrl
jno
push
iret
pop
xor
iret
repnz
jae
test
in
iret
jno
stos
int3
fbstp
mov
dec
call
mov
add
sbb
mov
mov
or
jae
or
aas
xchg
mov
push
mov
aaa
frstor
mov
cmp
pop
xchg
or
xchg
out
sub
mulb
ss
stos
xchg
sub
repnz
scas
test
cmpb
es
mov
ret
int3
pop
xchg
jl
cmc
or
and
out
push
lret
fldcw
cmp
stos
push
mov
push
cmpsb
xchg
clc
int
rclb
fwait
insb
mov
data16
push
aas
or
push
xchg
inc
cmp
jg
aad
mov
xor
adc
idivb
or
jbe
xchg
mov
inc
clc
jnp
push
mov
jle
pop
les
push
dec
jge
mov
jecxz
imul
jo
push
sub
mov
sbb
fidivrl
pushf
jo
dec
insl
sarb
pushf
stc
dec
ret
mov
sbb
jl
in
outsl
mov
mov
jmp
dec
pop
ja
insl
dec
push
pop
loop
xchg
cli
enter
pop
add
xchg
clc
rclb
mov
testl
xchg
daa
jb
inc
scas
int
cmpsb
shrl
aas
addr16
mov
add
fcoml
fmuls
xor
pusha
gs
cli
jae
inc
adc
adc
push
repnz
fdivl
mov
sub
ljmp
and
cli
dec
inc
or
int3
mov
sub
dec
or
push
incb
push
in
cmpl
cld
mov
iret
add
pushf
add
cmp
pop
dec
in
fdivrl
dec
inc
sbb
pop
add
lret
loope
jno
imulb
and
xor
fcmovnb
mov
and
dec
ja
jnp
push
add
xor
or
jns
mov
adc
pop
cmpsb
enter
int
cmp
cmp
xchg
and
out
add
mov
jae
mov
test
and
stos
into
jo
repnz
pop
into
loope
in
sahf
test
xchg
lods
pop
dec
add
sub
mov
sbb
test
inc
subb
leave
out
push
scas
mov
je
jnp
cwtl
test
pop
or
jecxz
and
in
decl
and
and
xor
faddp
jle
icebp
pop
clc
mov
das
cmp
lds
adc
mov
jl
mov
aad
or
int
repz
push
dec
cmc
push
jae
lea
dec
pop
popf
xor
add
add
dec
push
lret
add
cmp
ss
jl
sarb
mov
popf
xchg
inc
pop
add
add
stc
push
movsl
push
xor
push
jns
inc
mov
jle
mov
int
sti
sub
or
daa
int
mov
dec
jne
push
jl
repnz
pop
int
adc
jb
mov
insl
notb
cs
mov
xchg
test
sub
mov
les
stc
mov
mov
lret
mov
mov
pop
push
pop
repz
call
xchg
cmovp
cmp
adc
push
add
mov
hlt
fcoms
pop
ljmp
int3
xchg
cs
dec
loopne
daa
lret
mov
xchg
add
mov
lret
leave
call
jl
xor
nop
outsb
lock
int3
loopne
cli
push
pop
test
lods
dec
ret
jl
arpl
inc
mov
xchg
pop
adc
outsb
data16
lcall
std
jae
sbb
xchg
and
lcall
xchg
dec
out
scas
in
iret
inc
popf
adcl
and
adc
div
add
cs
push
xchg
lret
enter
jmp
and
lock
xchg
inc
xor
and
sti
push
leave
loop
xchg
sbb
pop
mov
ds
addl
test
push
jge
push
mov
in
sub
cmp
add
pushf
arpl
pop
in
bound
and
mov
adcl
jno
sub
sub
mov
out
add
push
cmp
lds
aaa
test
mov
lret
mov
push
adc
mov
movsb
fcomip
mov
jmp
dec
or
dec
push
testl
push
vpunpcklwd
inc
loopne
mov
ljmp
pop
push
xor
outsb
push
or
pop
mov
add
insl
aam
andb
cmpsb
pop
sbb
aaa
mov
xchg
lahf
icebp
bound
lods
cmpsb
and
dec
mov
mov
fsubrs
movsbl
fnsave
jae
pop
cwtl
pop
shl
mov
sbb
popf
lahf
test
insb
xchg
push
subl
std
adc
ds
cmp
pop
mov
mov
xchg
dec
cmp
lret
ljmp
and
orb
mov
inc
mov
xor
add
imul
and
fwait
popa
pushf
cmp
imul
or
mov
mov
adc
test
popf
cmpl
push
mov
push
fs
pop
and
outsl
pop
inc
arpl
orl
cwtl
loop
rcrl
testl
call
push
fdivl
sub
nop
call
sub
arpl
dec
aam
inc
hlt
sbb
sbb
mov
loop,pt
shr
push
addr16
addl
xor
pusha
stos
cltd
xchg
fisttps
jl
andl
xchg
dec
xchg
fldl
sbb
std
lods
push
push
arpl
mov
and
mov
pop
pop
das
clc
flds
stos
mov
in
int3
in
fdivs
and
dec
lods
imul
jae
dec
xchg
test
fucomip
arpl
loop
mov
icebp
in
push
sbb
lea
mov
orb
loopne
push
and
push
inc
sahf
inc
xchg
lock
ficoml
pop
frstpm(287
xchg
mov
sub
mov
mov
or
pushf
mov
js
ds
jae
or
testb
cli
bnd
add
iret
lods
cmp
fistl
stos
jp
push
and
pop
mov
pop
orb
test
test
setno
lcall
aam
mov
mov
mov
push
int
mov
dec
push
xor
add
lea
xor
or
jle
or
xor
or
sub
nop
xor
push
mov
int3
mov
repnz
cwtl
ja
or
iret
xlat
mov
cltd
cmp
sub
jecxz
adc
mov
aam
aaa
sub
imul
pop
dec
xchg
stc
adcb
inc
sub
daa
sahf
xchg
pop
movzbl
pushf
clc
les
inc
scas
pop
sub
pop
sbb
subl
inc
stc
loop
jg
mov
mov
fsubl
fistpl
addr16
xchg
stos
mov
pop
dec
adc
dec
lret
mov
xchg
test
stos
insl
dec
xor
push
jo
cmp
adc
testb
cwtl
sbb
and
or
mov
xchg
fsubr
cmp
and
je
xlat
cli
sub
sub
push
test
ja
inc
stos
adcb
out
jmp
nop
out
data16
ret
jecxz
and
cmp
dec
insl
lret
dec
in
sahf
mov
in
rcl
push
cmpsb
stos
dec
imul
or
add
cmpsl
add
cld
push
xchg
add
cld
ja
or
add
js
or
test
inc
and
shrl
addr16
cmp
dec
add
imul
xor
xchg
pop
stos
pusha
iret
mov
mov
lcall
ljmp
fnstenv
pushf
sbb
sbb
mov
sbb
mov
or
jae
cld
sbb
test
mov
outsl
inc
lods
lret
mov
incb
or
lea
or
lret
dec
push
pop
jnp
insl
push
jge
in
sbb
pop
and
in
repnz
repnz
ss
aad
add
leave
mov
rcl
jp
and
stos
fbstp
jno
iret
dec
jns
mov
adcb
lret
mov
in
mov
in
or
shlb
daa
mov
sub
adcb
pop
aam
hlt
xchg
out
push
test
and
popa
mov
dec
or
mov
dec
pop
push
fisttpl
fcoml
cld
sahf
or
lods
pushf
dec
sbb
mov
test
mov
test
shll
or
mov
dec
jecxz
movsl
or
lods
arpl
xchg
jl
fbld
lcall
popf
pop
loop
sbb
cli
sti
enter
push
xor
sti
jne
cwtl
cs
in
add
aas
mov
pop
mov
lds
adc
sbbb
pop
cmp
popa
mov
jne
add
idivl
sub
xlat
cmpsb
add
pushf
or
shll
xor
cs
mov
in
call
dec
xchg
mov
push
lea
push
pop
sti
cmc
jbe
jne
mov
push
call
and
sbb
in
test
int
cwtl
fisttpl
outsl
mov
popa
divb
out
gs
lods
loopne
add
mov
imul
lret
ret
add
mov
add
pop
stc
jmp
shrl
loope
cli
adc
sbb
sti
das
in
sub
lods
mov
push
iret
jmp
in
inc
in
addr16
dec
arpl
dec
stos
or
in
ds
in
push
sub
and
adc
jnp
mov
add
fdiv
mov
arpl
add
and
je
ja
insb
clc
push
mov
xchg
or
int
imul
jecxz
sbb
stc
subb
fldt
cmp
push
mov
sti
add
xor
mov
mov
in
je
cmp
xor
repz
neg
sub
add
and
sbb
fcoms
bnd
scas
mov
push
fcmove
pop
lahf
dec
cltd
aas
sbb
mov
add
mov
mov
inc
cmp
stos
es
add
mov
or
out
popa
jecxz
cwtl
cmpsl
je
sub
addr16
arpl
and
add
jbe
in
xchg
jae
push
fimull
repz
lahf
and
lock
pop
or
cmpsb
push
stos
adc
cmp
pop
push
jns
jo
add
in
insb
push
sti
pop
pop
sbbb
adc
jae
ss
add
enter
pop
cld
aad
data16
cmp
and
pop
pop
lret
mov
adc
jge
dec
ror
rclb
or
ja
cmp
xchg
loope
sub
movb
or
jmp
rorb
lock
pop
mov
adc
push
cli
cmc
and
mov
push
in
mov
push
jns
xchg
jns
jns
shr
jb
push
sahf
mov
fwait
call
je
sahf
mov
sbb
mov
fs
movsb
mulb
xlat
adc
mov
sub
fstl
xchg
popa
pop
hlt
out
mov
in
cli
ret
stos
jge
dec
xchg
out
mov
stos
stos
lret
cmp
imull
dec
std
outsl
jle
mov
rcll
loopne
xor
test
jmp
aad
mov
clc
sub
pop
adc
movsl
push
insl
xor
push
imull
and
pop
lcall
jne
dec
push
dec
mov
addr16
fcompl
add
out
mov
sbb
stos
sub
idivl
pusha
shlb
ljmp
fldt
sbb
dec
daa
push
xor
inc
add
mov
fnstsw
or
pop
and
cli
and
dec
jbe
cmpsb
cmp
and
xor
cli
push
dec
mov
inc
mov
and
aam
int3
push
sub
jne
dec
cmp
mov
das
daa
fsubl
out
mov
js
into
mov
aam
dec
shlb
pop
aaa
mov
mov
jae
push
in
jbe
test
flds
ja
test
mov
cmc
inc
pop
cli
dec
cld
or
xor
stc
xchg
jno
mov
sub
pusha
in
cld
mov
mov
sub
ret
mov
stos
pushf
insl
pop
adc
mov
xor
int
mov
xchg
out
in
lea
jb
cld
scas
inc
test
fsubl
and
jno
neg
or
jns
push
movsb
pop
andl
sub
hlt
push
ds
cli
lea
inc
jns
push
sbb
sub
add
add
jbe
cmp
or
rcrb
ljmp
aas
mov
lcall
dec
mov
xchg
pop
push
fwait
or
into
or
inc
insb
lods
inc
out
shrb
pop
int
ret
ljmp
popf
push
sub
xor
add
xchg
add
dec
ret
movsl
stos
sbb
inc
mov
pop
sbbl
pop
xor
mov
fwait
push
shll
daa
and
ret
sub
cmp
mov
cmp
xchg
lret
stc
xor
aaa
gs
push
jae
cld
sarb
sbb
stos
dec
int
jecxz
fildl
adc
dec
sbb
add
sbb
aam
scas
xor
push
in
sbbl
push
fldt
jbe
ret
jge
out
and
push
leave
inc
push
fwait
pop
inc
fwait
arpl
out
cltd
cmpsl
pop
mov
sahf
add
push
mov
in
inc
lods
push
fisubs
aaa
sbb
fcomp
xchg
sbb
mov
cmp
jb
push
mov
xchg
mov
mov
nop
cmpsl
push
mov
lea
ss
je
mov
lcall
orb
in
sbb
jmp
out
loop
lret
add
mov
inc
bound
inc
push
mov
cmp
std
fwait
movsb
inc
mov
pop
js
or
clc
cmp
lds
add
xor
mov
or
mov
out
pushf
xchg
outsb
imul
xor
or
sbb
or
xchg
pop
mov
jno
mov
arpl
add
push
dec
das
fisubrl
leave
es
mov
iret
mov
mov
sbb
stos
mov
in
test
jns
and
das
dec
shrl
mov
mov
mov
inc
js
pop
jmp
and
mov
sbbl
or
xchg
aam
xor
cs
inc
into
jbe
push
push
mov
scas
stos
adc
icebp
and
jne
adc
mov
cld
pop
jg
test
ss
lock
insb
mov
mov
je
and
mov
cltd
hlt
bound
pop
sbb
cmpsb
jg
in
out
mov
aam
nop
fwait
mov
and
nop
mov
add
rorl
lds
daa
xor
lods
cmpsb
leave
adc
pop
jle
or
lds
jge
jno
pop
pop
mov
mov
imul
mov
push
pop
call
pusha
add
xchg
repz
pop
pop
mov
mov
arpl
les
mov
adc
idivl
cltd
jecxz
icebp
int3
mov
mov
fsubrs
aas
mov
loope
sbb
fistps
xchg
insb
js
les
daa
sub
imul
in
cmp
xor
pop
cmp
loope
mov
das
mov
sub
adc
mov
cltd
cs
in
addr16
pop
stos
cli
cmp
push
dec
jb
pop
dec
and
call
out
data16
sbb
test
or
mov
dec
or
out
lods
clc
xor
pop
pop
loope
mov
je
or
fisubrl
syscall
imul
fucompp
add
decb
idivl
ja
test
xchg
mov
out
insb
sub
pusha
xchg
adc
cmc
mov
fsubrl
jbe
cmp
mov
loop
mov
fdivs
je
dec
shrb
lret
movl
mov
mov
inc
mov
les
adcl
cltd
pop
stc
xor
pushf
movsb
leave
mov
fstps
sub
fisttps
push
out
scas
shrb
cli
mov
inc
das
jecxz
adc
add
dec
push
bound
mov
int3
das
xor
fcoms
inc
mov
ds
sbb
and
or
mov
or
retw
fdiv
add
in
xchg
pop
push
jb
into
repz
stos
adc
add
inc
cmp
jge
add
mov
out
stos
rcr
xorl
sbb
inc
std
clc
sub
pushf
dec
stos
test
jl
push
in
popa
jns
xchg
orb
sub
mov
test
sub
in
sti
mov
pop
xor
or
es
lahf
jne
test
push
pop
insl
inc
pop
ds
and
mov
jb
mov
dec
test
call
sbb
dec
xorl
add
inc
inc
mov
push
push
bound
in
push
jle
orb
or
mov
aad
add
cmp
call
xor
jge
outsb
out
cs
dec
sahf
cltd
xchg
xor
loope
es
pop
ret
cwtl
inc
outsl
ds
ret
and
les
cld
lds
pop
mov
mov
add
mov
and
xor
in
or
push
jl
mov
mov
les
xchg
clc
cmp
mov
mov
loop
jl
jne
adc
xor
stc
aam
pop
dec
dec
mov
loopne
movsb
push
imul
add
pop
xchg
sbb
jecxz
out
test
cs
sbb
je
xor
or
push
cmp
jl
imul
clc
daa
cmpsl
push
movsb
gs
cmp
ret
push
sub
out
mov
out
xchg
enter
push
mov
add
mov
push
mov
mov
dec
scas
outsl
mov
mov
or
aaa
mov
dec
shlb
push
leave
inc
pusha
out
sub
push
xor
loop
out
dec
xchg
push
and
dec
call
mov
je
jle
in
xchg
xor
mov
jl
fdivs
or
stos
cmpl
mov
sbb
inc
xorb
out
pushf
out
pop
cld
call
lret
push
mov
aad
jl
sub
sub
push
int
lcall
pop
fldl
push
cmpl
cmovno
push
sbb
inc
sub
push
xor
and
popf
aaa
add
cmp
movsb
insl
sbb
xor
dec
sub
add
pop
loopne
pushf
xchg
xchg
fnstsw
enter
cmp
pop
repnz
outsl
shrl
jp
das
leave
sub
dec
mov
and
hlt
loopne
mov
mov
mov
test
xchg
loopne
cmpsb
fdivs
in
outsl
add
xchg
or
mov
int3
jecxz
xorl
pop
daa
out
cwtl
dec
ret
cld
mov
shl
mov
and
mov
xchg
icebp
popf
mov
mov
nop
inc
push
les
pop
xchg
jmp
mov
out
and
mov
inc
sbb
mov
adc
push
mov
es
aaa
add
inc
or
cmp
ja
out
movsb
daa
pop
push
jb
je
pop
or
loop
jnp
outsb
adc
adc
jp
push
jmp
aam
popf
push
popa
imul
jne
push
pop
mov
lods
mov
and
adc
dec
stos
out
ret
push
fsubs
roll
stos
jge
and
inc
testb
scas
pop
inc
xor
in
mov
mov
mov
mov
mov
pop
ret
or
mov
int3
sbb
inc
add
sbb
push
push
cs
mov
fwait
sbb
push
int3
inc
mov
insl
dec
and
lahf
cmpsl
lea
or
leave
inc
cwtl
fidivrs
inc
aas
std
or
push
mov
outsl
dec
cmp
fldl
ret
push
and
and
dec
negl
mov
inc
repnz
loop
lods
push
bnd
pop
outsb
cwtl
mov
push
jo
jnp
pop
into
xchg
ds
mov
push
stos
xor
and
and
dec
mov
jmp
movsl
test
or
xlat
ficoml
out
icebp
xchg
fsubr
push
inc
pop
dec
insl
inc
call
clc
pop
mov
cli
jmp
mov
dec
mov
nop
jecxz
cwtl
mov
cmp
jae
outsb
xchg
jecxz
loope
xor
lcall
stos
test
ja
sahf
xchg
inc
pushf
ret
loopne
dec
movsb
shll
mov
movsl
mov
hlt
and
or
movsb
pop
or
out
and
fwait
xlat
jp,pn
push
xor
mov
push
mov
daa
repz
ror
cs
fldt
inc
sarb
push
je
loopne
adc
xor
fnstsw
pop
pushf
in
cmp
in
loop
dec
cmpsb
mov
rorb
xor
push
ds
adc
inc
stos
xor
test
mov
vpmulhw
lcall
push
fstpt
push
dec
test
dec
popa
lret
mov
push
mov
mov
mov
les
fwait
scas
mov
decl
arpl
cmpsl
and
cmpsl
lret
cmpsb
mov
mov
jb
xlat
xor
out
das
cmc
mov
imul
and
dec
ja
jmp
sbb
push
and
push
movsl
mov
test
mov
les
cli
mov
sbb
mov
mov
cmp
mov
jae
pushf
and
push
add
gs
push
cmpsb
mov
test
xor
jge
push
mov
andb
movsb
and
test
cmp
testl
push
sbb
outsb
xchg
mov
pusha
inc
je
or
repnz
rorl
cld
mov
pusha
and
gs
jo
movsl
nop
inc
test
sub
ljmp
stos
adc
shlb
pop
ret
push
and
arpl
jl
cli
sbb
inc
cmp
push
lods
aas
xchg
jno
into
add
jl
clc
xacquire
cmpsb
push
mov
or
push
sarl
dec
fcmovbe
or
mov
lock
pop
mov
ret
xlat
mov
adc
mov
cwtl
cmp
call
out
call
push
cmpl
mov
pushf
shrl
filds
mov
rorb
movsb
cmp
jle
mov
push
fstpt
cmp
test
xchg
mov
push
or
inc
dec
inc
cld
mov
fs
fdivl
hlt
es
fldenv
or
pop
pop
pop
fcmove
movb
cmpsl
in
sahf
pusha
js
cmc
in
aad
cmpb
dec
fsubp
mov
stc
enter
inc
mov
in
orl
clc
or
test
mov
mov
add
mov
mov
and
push
das
and
enter
mov
xor
data16
adcl
orl
cmp
xor
push
lahf
pusha
lahf
fwait
arpl
movsb
jne
outsb
movsl
cld
add
jno
add
or
ljmp
pop
cmc
aaa
adc
call
jo
cli
test
jnp
fdivl
cli
inc
jnp
ss
lods
cmp
mov
scas
pause
repnz
lock
mov
arpl
inc
rcrb
push
mov
aad
divb
xchg
pop
jbe
inc
mov
push
ss
stos
mov
ret
loopne
sbb
lds
inc
aaa
in
dec
nop
inc
xor
gs
cmpsb
or
ficompl
nop
aaa
or
sbb
std
fimull
stc
clc
inc
bts
inc
jg
xchg
adc
cwtl
dec
mov
sub
and
sub
addr16
repz
imul
addl
fwait
test
out
mov
jle
into
sahf
cld
jmp
fs
sahf
and
loop
das
movsb
cmp
bound
or
adcb
cwtl
push
out
idivb
add
cmp
icebp
call
xchg
imul
push
icebp
jbe
jp
mov
mov
sbb
dec
pop
jbe
mov
lods
fldl
leave
push
mov
enter
int
movsb
mov
sub
xchg
sbb
push
dec
push
mov
aaa
in
or
push
jle
push
push
inc
les
xchg
xor
test
cmpsb
pop
jb
jbe
push
xor
mov
hlt
jp
repz
pop
and
dec
xchg
repz
pop
mov
cmc
dec
outsl
stc
leave
cmpsb
mov
pop
jb
or
in
jmp
fadd
mov
sbb
xchg
jb
or
movsb
inc
and
lret
nop
icebp
push
mov
cmp
mov
divb
push
mov
clc
lods
inc
cld
in
jmp
lock
mov
pushf
or
out
dec
sbb
push
out
cmp
loopne
pushw
test
cmpsb
test
ret
pop
test
push
inc
cwtl
push
sbb
inc
xchg
dec
ss
xchg
icebp
dec
aas
icebp
pushf
shlb
sub
testl
into
daa
jle
sahf
stc
mull
das
push
jecxz
mov
popa
xor
lods
xchg
push
add
dec
push
stos
insb
stos
icebp
jbe
xor
mov
call
jae
adc
lret
and
inc
cmp
lock
pop
xchg
pop
mov
hlt
sub
cld
mov
in
push
lahf
mov
jecxz
nop
inc
test
imul
jmp
loop
jne
scas
cmp
jmp
es
es
in
std
mov
xchg
sar
mov
or
cmp
adc
outsb
mov
cmpsl
push
jmp
push
sbb
js
xor
sbb
stc
mov
out
jne
pop
mov
mov
add
adc
je
aaa
mov
idiv
stc
fidivs
add
dec
roll
adc
jmp
push
cmc
outsb
push
test
pop
scas
mov
hlt
mov
jne
sahf
and
mov
dec
bound
addr16
out
fwait
add
lock
or
shrl
je
movsb
sub
inc
call
push
rcr
push
bound
jecxz
ficoml
aad
mov
movsl
xchg
out
out
or
scas
adc
mov
call
int
push
mov
inc
icebp
sbb
pop
nop
js
sbb
jne
cli
cmpl
test
or
cmp
sti
sbb
fildll
xor
sbb
sub
cmc
in
leave
pop
mov
xchg
cmp
and
mull
mov
cmpsl
mov
push
dec
push
jge
cmp
rcrb
popa
and
in
out
outsb
pop
dec
or
dec
mov
push
mov
arpl
pop
sbb
cli
lods
push
jp
jmp
shrb
lods
adc
adc
mov
rclb
inc
out
jne
fsubr
adc
mov
cmp
pop
aaa
das
aam
stos
mov
pop
popf
adc
xchg
lret
std
sti
lea
push
jp
mov
add
inc
adc
movsb
mov
lret
xor
mov
leave
and
imul
sbbl
cld
add
and
push
pop
into
stos
mov
xor
push
js
xchg
mov
push
cmpl
scas
cmc
xor
dec
pop
movsl
ret
pop
test
xchg
mov
nop
movsl
inc
lock
sbb
mov
jle
ljmp
dec
fcmovu
ret
hlt
inc
or
ffreep
mov
addr16
jns
xchg
das
jl
pop
mov
scas
ja
andb
add
in
in
sbb
out
jle
and
and
and
jmp
ficompl
xchg
outsl
sub
lret
add
adc
test
scas
sahf
mov
adc
cltd
sub
xor
mov
jae,pn
mov
dec
test
adc
addr16
mov
movsl
lock
cld
popf
aam
mov
sub
sbb
xlat
xchg
mov
or
inc
lock
sbbl
sbb
inc
fucomp
leave
imul
xchg
cmp
mov
ret
push
out
or
and
insb
out
push
mov
ds
mov
movsl
sbb
and
pop
pop
jmp
adc
add
shrl
inc
mov
movsl
mov
orb
cli
or
mov
dec
divb
mov
stos
imul
and
cli
insl
cltd
xchg
outsl
inc
shlb
add
adc
pop
add
rcrl
movsl
lds
fcmovbe
jno
shlb
inc
jle
dec
es
jno
enter
in
sbb
mov
pop
mov
jge
inc
mov
aam
and
std
fs
jnp
inc
hlt
jo
ja
jae
test
imul
das
pop
pop
fbstp
add
test
cmp
mov
aaa
imul
popa
inc
ljmp
clc
push
icebp
addr16
pop
xchg
ficomps
mov
jno
lods
les
mov
xor
fiaddl
inc
in
orl
cmp
xlat
shlb
enter
stos
outsl
or
push
cmp
out
dec
dec
or
test
jmp
test
retw
rorb
adc
push
cld
testl
cmp
cmp
lds
out
xor
lea
imul
jecxz
or
imulb
test
repnz
dec
imulb
nop
sbb
ret
cmp
xchg
aad
xlat
pop
ficoms
neg
imul
sub
and
xor
ret
shlb
out
adc
mov
lea
add
xchg
ret
xchg
rcr
jnp
push
cmp
push
and
cmp
cs
jno
and
les
push
mov
add
push
cltd
jne
add
mov
test
dec
mov
sahf
in
xor
fcomi
dec
jns
icebp
cmp
or
stos
das
mov
sub
add
bound
or
ds
and
sbb
push
insb
bound
call
imul
pop
aad
insb
std
mov
mov
or
lcall
push
dec
mov
cltd
arpl
arpl
add
pop
cmpl
popf
orl
cli
and
push
adc
out
mov
je
out
jbe
jns
in
push
jae
mov
push
adc
cmpsb
add
fsubl
stos
test
movsb
or
pushw
lds
rorb
pop
jne
cmp
mov
jl
and
les
inc
lods
mov
jge
pop
dec
sbb
dec
outsl
mov
les
and
pop
jb
mov
push
out
adc
test
std
mov
out
ljmp
out
xor
inc
pop
in
pop
pop
dec
pop
or
and
stos
subb
fwait
loopne
fadd
adcl
mov
stos
daa
adc
xor
mov
lcall
jmp
add
stos
int3
xor
mov
jne
jp
out
xlat
xchg
jbe
outsb
fidivl
pop
pushf
imul
nop
inc
pop
adc
lock
movsb
repnz
push
gs
lret
lods
test
xchg
cld
mov
cmp
push
lock
cltd
int3
jo
stos
fcmove
popa
dec
sarb
pushf
pop
aas
xchg
jl
sbbl
data16
inc
insb
jmp
jae
ds
out
adc
adc
jne
ret
push
pop
int
push
ret
lahf
outsb
les
mov
inc
loopne
xor
pop
loope
sbb
push
pop
test
fidivrl
or
or
dec
inc
xchg
fisttps
insb
sahf
lcall
and
push
faddl
aaa
mov
xor
push
cmp
and
in
aaa
cmpsl
jp
pop
aas
leave
inc
xlat
pop
repnz
sti
aad
scas
dec
adc
mov
test
push
inc
adc
jns
int
cmpsb
push
and
pop
je
or
mov
ja
adc
fcmovnbe
add
mov
in
lods
repz
int3
stc
ret
shl
lahf
out
idivl
inc
pop
out
mov
mov
outsl
fs
pop
das
out
dec
pop
adc
jb
xlat
fwait
mov
adc
mov
das
loopne
inc
stos
outsb
iret
inc
out
and
frstor
rorl
add
arpl
std
js
sub
jno
jbe
xchg
loope
dec
mov
mov
sbb
xor
jae
ret
pusha
je
cld
bound
popl
sub
pop
ss
push
movsb
jg
in
fwait
int3
into
jmp
lret
inc
adc
rol
ja
xor
pop
mov
xchg
aam
repnz
int3
in
inc
mov
inc
mov
push
xchg
dec
or
lret
mov
in
sbb
imul
outsb
and
inc
test
sub
loope
pop
cld
test
and
and
cmp
pop
daa
push
mov
mov
enter
leave
lock
xor
call
xor
push
imul
fs
cs
xchg
popf
xor
jae
and
xchg
cs
fsubr
lahf
mov
ret
or
cli
sub
leave
dec
adc
std
add
cmp
lds
xor
addr16
in
dec
mov
mov
mov
les
push
lahf
dec
add
mov
lret
mov
popf
and
cmp
stos
mov
cmp
repnz
addr16
aas
popa
rolb
movsl
jg
fcoms
jae
cmp
push
shrl
lret
mov
outsl
or
mov
inc
xchg
nop
mov
outsb
ljmp
mov
add
adc
jmp
dec
sub
xchg
ljmp
shl
and
push
push
enter
dec
sub
aad
fcoml
lahf
mov
ja
pop
repnz
sub
es
dec
ljmp
push
xor
lret
data16
mov
fcompl
aas
cmp
in
jae
jmp
jp
sub
mov
sbb
mov
add
mov
test
mov
movsb
ret
aas
jo
mov
out
jmp
xchg
cmp
ret
or
push
daa
das
aas
add
add
das
popa
xchg
in
icebp
jg
lea
or
or
xchg
cmp
sbb
cmp
leave
aam
or
cmp
aam
gs
mov
lea
gs
push
fisubrl
mov
push
stc
int
xor
fldenv
mov
cmp
jo
and
xchg
out
xchg
pusha
aad
adc
pop
sub
out
mov
fdivs
xor
jmp
fdivr
push
jnp
mov
mov
jp
int
daa
cmpl
out
das
jno
daa
clc
jecxz
sbb
push
insl
mov
lahf
inc
fnsave
je
shrl
pop
jo
jnp
je
cld
rcrl
cli
pushf
sbb
outsl
dec
js
fistps
out
pop
imul
test
jne
cmovae
push
out
pop
inc
ss
sub
xchg
lods
sub
les
xchg
sub
cmpsl
jle
rcr
push
decb
adc
mov
arpl
push
mov
int
stos
dec
mov
mov
popa
adc
in
enter
pop
lahf
cwtl
xchg
xor
xor
bound
mov
dec
mov
sub
or
sti
andb
fsubrs
pop
xchg
xor
push
adc
pop
iret
js
lods
xchg
test
test
rorb
in
out
xchg
cmp
jmp
mov
push
jnp
and
pop
inc
leave
cmp
outsl
inc
pop
cmp
pop
dec
add
jbe
fldt
cmp
rorb
xlat
xchg
cld
xchg
or
xor
stc
outsb
ja
bound
fcmovne
inc
adc
mov
mov
add
add
xchg
popa
mov
and
out
jle
lret
sub
cmp
scas
push
aaa
pusha
mov
enter
dec
and
mov
pop
jno
sti
xor
add
add
ljmp
clc
xor
cli
aad
xchg
addl
mov
xor
setge
cli
mov
xchg
push
movsl
pop
inc
aaa
xor
cwtl
sahf
out
adc
push
push
fwait
mov
dec
or
sbb
mov
ds
in
daa
pop
std
push
ret
mov
inc
cmp
fwait
pop
add
mov
push
fmuls
xor
mov
mov
ds
jnp
jae
add
push
imul
xor
or
inc
sub
xor
shl
enter
fnstsw
push
jge
stc
dec
sbb
lcall
cmpsb
popa
arpl
dec
movsl
cmp
and
jl
jp
ret
dec
popa
sub
out
gs
xlat
insb
inc
dec
mov
sarl
inc
or
cmpsl
or
xor
sbb
ljmp
or
aaa
shrl
ds
sbb
clc
popa
jl
mov
idivb
jl
inc
add
stos
add
add
lcall
sahf
and
icebp
dec
ret
lret
cmpsl
sti
popa
mov
lcall
bound
mov
push
fldl
add
cltd
ja
out
iret
or
xor
test
repnz
movsl
jp
cmpsb
and
mov
jp
aam
inc
fs
loop
mov
xchg
into
push
add
gs
stc
sahf
pop
in
jmp
in
cli
bound
xchg
sbb
stc
inc
fdivs
repz
jmp
insl
adc
cli
adc
test
mov
jae
sar
sub
fwait
inc
popf
jo
mov
outsb
sub
xchg
dec
dec
inc
outsl
shr
cmp
inc
xor
aam
fs
inc
xor
std
sub
cs
adc
fcomps
mov
sbb
sub
loopne
fidivrs
addr16
and
iret
mov
cmp
pop
leave
cld
cs
sbb
xchg
xor
push
imull
outsb
cmpsl
or
mov
gs
jbe
pop
jns
scas
test
jle
jg
dec
loop
mov
rolb
test
dec
ret
xor
lret
rcll
fs
cmp
push
mov
mov
int3
movd
cs
push
mov
gs
jnp
or
dec
push
push
xchg
enter
std
xchg
scas
mov
sub
xchg
int3
push
test
loopne
pop
outsl
lea
inc
or
cs
add
mov
outsb
cmc
inc
xlat
clc
pop
fistpll
ds
ret
cli
cmp
inc
pop
fwait
sti
mov
or
mov
sub
popa
and
jge
mov
pop
jp
cmc
xor
add
gs
sbb
rcrb
pop
jns
call
xor
loopne
sub
xlat
mov
loop
add
popa
xchg
stos
sub
xor
jle
push
push
repz
lret
inc
lret
test
addb
mov
movl
js
adc
test
ljmp
cmp
sahf
fnsave
adcl
inc
or
addr16
stc
sbb
sub
mov
inc
mov
bound
mov
in
ss
xchg
add
shl
insl
adc
mov
lds
pop
scas
mov
pop
jo
mov
cld
aaa
xorb
adc
cli
ss
cmp
nop
xchg
adc
push
lret
mov
push
cmpsl
mov
pusha
sub
xchg
inc
ficoms
outsl
leave
xor
jle
add
lret
std
test
push
rcll
dec
rcr
add
mov
cmp
or
and
das
fs
sub
cli
sbb
push
jbe
lds
lahf
leave
mov
jne
pop
xchg
xchg
je
add
mov
mov
jae
sbb
and
xor
movsb
dec
cld
insb
repz
pop
in
ljmp
jb
out
scas
sbb
add
xchg
outsb
dec
test
sub
jmp
aas
std
and
jae
sub
push
mov
jecxz
movsb
insb
das
js
jae
pusha
fldl
gs
insl
sub
loope
ret
xchg
xor
nop
insl
sbb
and
mov
jle
or
stos
push
int
adc
cmp
ss
mov
add
mov
stc
push
sub
shr
mov
push
inc
and
push
not
out
push
mov
fwait
mov
jg
dec
cltd
cs
aad
cltd
xor
dec
dec
xchg
adc
lea
js
add
pop
add
mov
inc
xchg
lods
push
and
push
mov
push
jo
nop
es
jae
mov
mov
and
xor
jg
mov
fsub
and
or
dec
add
mov
mov
aam
add
pusha
jp
hlt
ret
dec
cltd
pop
gs
mov
mov
jnp
out
pop
xchg
ret
jbe
jne
leave
shl
jbe
fs
ss
ss
mov
imul
or
sbb
clc
xor
dec
cltd
jle
jno
add
nop
jl
xchg
js
mov
ret
adc
cwtl
test
repz
ret
push
push
xor
pop
push
fnstsw
lds
data16
loopne
or
xchg
adc
jo
inc
es
les
out
jge
dec
sub
xchg
inc
mov
jp
ds
adc
shll
mov
fnstenv
pop
jg
aad
push
dec
xchg
and
ja
jns
dec
shll
mov
mov
jo
inc
insb
xchg
mov
pop
mov
test
and
sbb
cmp
fst
adcb
push
xchg
push
sub
push
lock
sbb
mov
into
inc
xchg
jge
pop
scas
jno,pn
popf
xor
sbb
or
bnd
dec
int
or
cmpsl
sbb
sarl
shl
mov
rcll
ds
mov
xor
arpl
push
in
jns
xlat
pop
clc
outsb
les
cmp
test
pop
jmp
push
jns
ss
nop
push
inc
testl
sbb
in
sbb
and
xchg
call
sbb
cmpsl
cmp
push
popa
test
mov
arpl
es
nop
adc
inc
mov
into
arpl
cmp
and
mov
mov
adc
dec
js
cmpsb
bound
std
jne
sbb
sbb
test
cmp
push
insl
mov
pop
xor
push
pop
inc
jp
das
outsl
or
mov
ljmp
or
pusha
outsb
addl
es
pusha
lock
inc
mov
mov
cmpl
insb
nop
push
lahf
das
loopne
jnp
out
add
or
mov
mov
mov
aam
lods
push
mov
push
arpl
or
pop
decl
or
lcall
add
paddb
std
sub
and
mov
cmp
sub
daa
insl
mov
es
adcl
xchg
out
inc
ret
out
cmpsb
nop
loop
inc
adc
adc
ss
mov
iret
mov
loop
push
sbbl
or
mov
das
pop
or
xchg
sbb
cmpsl
sbb
pushl
test
xor
lcall
mov
sub
push
mov
push
cmp
mov
mov
push
ja
or
adcl
fiadds
mov
push
inc
inc
ret
pop
aaa
clc
popf
lea
sub
mov
mov
pushf
mov
loop
loopne
in
sub
fs
dec
dec
fwait
and
dec
push
cs
inc
and
jne
hlt
nop
mov
shl
add
push
xchg
mov
inc
jne
dec
cs
or
fsubl
inc
fmuls
adcl
jbe
lret
mov
cmp
shl
mov
scas
out
xchg
mov
dec
ret
add
lret
negb
lret
pop
mov
fdivrs
call
fimuls
lock
xor
je
repnz
imul
cmpsb
loopne
dec
shrb
adc
lahf
test
daa
mov
adc
cmc
sub
or
sub
inc
pop
je
scas
repnz
fimuls
mov
iret
fwait
dec
out
sti
adc
orb
imul
pushf
lcall
aad
mov
sbb
je
mov
frstor
jecxz
xor
sub
arpl
mov
cmp
jl
mov
shrb
cmpl
out
bound
fadds
clc
push
push
dec
sbb
sub
add
jnp
pop
addr16
pop
push
mov
push
or
sbb
push
sub
pushf
pop
das
inc
cmpsl
inc
movb
inc
out
add
pcmpeqd
cmpsl
inc
push
outsl
mov
bound
js
repz
out
mov
xchg
dec
into
js
push
mov
push
dec
xchg
mov
cld
pusha
pop
adc
test
push
mov
cmc
or
insl
out
leave
push
jnp
fcomi
sbb
jns
das
clc
jl
dec
fstl
ret
out
mov
or
mov
js
test
gs
in
cmp
inc
dec
call
shll
out
adc
addr16
pushf
sarb
dec
std
pop
repz
fcoms
xchg
cld
mul
inc
outsb
jns
int3
inc
and
clc
sub
insl
sar
je
jo
mov
cwtl
mov
inc
repz
push
sub
jge
xorb
add
and
lret
dec
mull
mul
faddp
adc
loope
and
clc
pop
push
sbb
insb
outsl
mov
lcall
cmp
pop
and
jl
mov
add
es
repz
sub
xorb
inc
lret
xor
in
ss
cmpsb
sbb
jno
add
repnz
iret
lret
mov
outsl
pusha
lods
lods
jg
cltd
nop
push
int
add
mov
inc
aas
jge
pop
inc
cmpsb
add
jbe
insb
adc
mov
clc
push
jae
inc
mov
and
mov
dec
nop
fdivs
or
out
mov
imul
clc
divl
xor
sbb
and
inc
ds
test
mov
fcomp
cmp
jno
fistpll
jbe
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
