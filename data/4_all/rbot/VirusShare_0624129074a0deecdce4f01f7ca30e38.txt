pushl
in
sub
mov
push
push
mov
lea
rep
movl
call
push
call
lea
jle
sbb
std
sbb
add
in
fstps
insb
sti
push
xor
add
cmp
jne
insl
neg
mov
aaa
pushl
jb
pushl
aas
repnz
mov
inc
out
pop
pop
in
fwait
adcl
pop
pop
arpl
push
push
push
xor
pop
xor
pop
dec
mov
rep
stos
jmp
subl
insl
jl
inc
add
clc
das
js
jmp
inc
push
push
push
push
push
pop
idivb
cmp
mov
je
pop
in
test
push
push
mov
aas
in
cmp
int
lcall
test
outsl
add
jne
push
data16
out
mov
stos
mov
movb
sub
into
pop
jge
fldt
mov
aam
aad
push
dec
faddl
loop
push
movzwl
cltd
mov
push
xor
push
ds
sbb
pop
mov
sbb
stos
adc
cmp
cltd
pop
jne
xchg
hlt
cld
add
jmp
push
jmp
push
xchg
and
fisttpll
jg
sbb
neg
sbb
and
add
mov
push
add
push
push
cli
lea
push
cmp
sahf
mov
pop
and
cmp
add
jg
out
mov
mov
add
neg
push
call
insb
cld
ror
jmp
aas
add
or
mov
cmp
adc
clc
push
aaa
fiadds
or
add
dec
push
cld
pop
fcoml
mov
push
dec
shl
mov
mov
dec
addr16
pushf
cld
and
push
and
xor
insb
mov
int3
add
addr16
flds
and
loope
sbb
pushf
push
inc
mov
mov
mov
pop
push
push
push
pop
ficoms
in
je
inc
adc
inc
sbb
enter
mov
xor
in
jb
pushf
jns
cmp
and
pop
pop
leave
ret
pop
cwtl
pop
xchg
xchg
loopne
call
pop
orl
adc
push
mov
frstor
and
dec
mov
lds
jb
mov
std
inc
add
mov
dec
push
ss
test
push
push
mov
add
inc
scas
push
cltd
idiv
pop
pop
ret
xchg
iret
sub
inc
jmp
xchg
jb
inc
fistps
testb
cld
jne
xor
scas
push
addl
mov
jge
push
ss
fmuls
dec
repnz
mov
cld
jne
int3
aad
mov
cmp
in
cltd
cltd
push
pop
hlt
jne
icebp
add
in
mov
iret
mov
xor
push
in
sub
xor
pop
int
sbb
push
push
and
mov
xchg
in
and
or
mov
or
psubb
pop
sbb
repnz
and
xor
mov
les
cmp
orb
push
insl
je
jno
shl
adc
loopne
repz
sbb
andl
test
fldenv
mov
add
dec
scas
aad
add
mov
fiaddl
mov
adc
ljmp
push
sub
adcb
cli
das
cld
movsl
popa
jns
aam
add
sub
mov
shl
icebp
sbb
push
incl
push
loopne
imul
mov
shr
divl
shr
imul
stos
xchg
dec
push
call
sub
cwtl
xchg
outsl
adc
call
das
lods
dec
pop
adc
in
in
in
adc
repz
jo
lock
xor
fwait
in
mov
sbb
jo
sahf
xchg
in
cmp
orb
xor
xor
dec
nop
xchg
dec
and
je
mov
push
mov
mov
add
dec
gs
lahf
mov
jne
movb
loop
aaa
lret
xchg
in
movb
ljmp
or
sub
cmp
mov
flds
sub
lea
xchg
pop
jb
fdivrp
les
out
icebp
inc
clc
mov
adc
test
xchg
and
fmul
rolb
adc
in
lock
push
in
xor
in
int3
push
test
mov
push
or
sub
mov
mov
aas
clc
call
cld
cmp
es
test
in
xor
cmpb
sub
repnz
sbbl
sbb
add
enter
pop
inc
rcr
test
aaa
inc
cmp
sbb
cmp
dec
xlat
xlat
pop
sbb
insl
data16
sti
hlt
ficompl
nop
and
cmp
jb
mov
shrb
and
jnp
arpl
in
int3
fbstp
inc
test
test
imul
add
fistl
cltd
nop
scas
cmpb
xchg
mov
push
dec
sbb
out
out
enter
aam
push
imul
jne
fcmovu
dec
jle
lahf
fstp
je
inc
mov
shl
aas
pop
adcb
loopne
inc
jmp
xchg
inc
mov
arpl
std
inc
mov
pop
in
inc
ss
push
addr16
ljmp
call
xor
mov
in
fmuls
xchg
add
add
pop
aas
sbb
or
jmp
xchg
nop
mov
loope
shll
hlt
test
addl
or
clc
xchg
sub
add
push
fs
mov
pusha
call
and
scas
pusha
add
aam
addl
in
je
mov
mov
ficoms
addr16
or
dec
repnz
mov
rcrb
jbe
int3
and
les
std
inc
inc
push
fs
dec
sbb
test
std
add
leave
out
and
sti
sti
jbe
lods
lock
fs
in
incb
and
fdivp
xchg
pusha
les
add
cmp
inc
adc
insl
mov
das
push
test
jne
inc
jmp
movzwl
push
cli
push
sahf
out
or
lock
shll
push
dec
ret
ja
cmpl
xor
aaa
jb
cld
xchg
adc
pop
ja
add
xchg
push
sbb
lock
rcrb
or
and
rcrb
pop
loopne
enter
movsl
and
pop
or
jbe
cld
add
and
add
mov
addr16
fs
pop
hlt
js
pop
daa
mov
cs
xor
lods
pop
mov
jg
imul
scas
cmp
sahf
inc
and
or
popf
pop
and
sub
fadds
add
sub
cld
push
outsb
inc
pop
xor
adcb
add
push
fwait
popf
fbld
add
add
push
cmp
mov
and
jns
jns
lock
mov
push
in
hlt
out
rolb
data16
negl
adc
orl
cmp
jle
or
adc
test
es
popf
push
inc
cmpsb
mul
push
jg
cs
add
daa
add
add
fstl
pop
cmp
pop
jne
lret
xchg
mov
pop
jne
andb
in
movsb
add
mov
insl
ds
inc
lahf
arpl
jmp
sbb
or
cmpsl
and
xlat
test
test
lahf
aas
or
lds
je
das
das
mov
lar
jne
mov
xor
add
add
scas
pop
subl
jge
pop
push
jl
pusha
je
jge
test
cmp
dec
push
mov
addl
dec
dec
popl
mov
push
repnz
push
arpl
mov
sbb
bnd
push
aaa
and
mull
inc
xor
push
push
push
xlat
movsl
jb
mov
andl
popf
dec
rolb
jns
std
and
in
sarb
dec
std
aam
dec
decl
and
dec
std
rorb
jle
push
imul
lea
xchg
xor
movsb
shlb
lret
ret
adc
push
push
loopne
or
push
inc
push
adc
inc
push
cwtl
add
xor
pop
test
sub
push
push
push
lret
pop
sbb
mulps
pop
aaa
xor
mov
pop
xchg
loopne
mov
lds
fdivrl
jne
outsl
je
lock
ljmp
ret
inc
pop
mov
mov
inc
and
fldt
jecxz
out
es
scas
inc
jno
addr16
inc
xor
inc
mov
add
mov
adc
xor
test
or
mov
pop
sbb
add
or
push
push
xor
adc
jg
int3
test
cmp
mov
hlt
mov
mov
mov
movsl
movsw
dec
mov
test
mov
mov
test
call
lret
mov
repz
imulb
arpl
pushf
pusha
push
mov
dec
in
div
pop
mov
sbb
pop
fiadds
mov
dec
mov
add
pop
stc
adc
add
ret
jne
mov
mov
das
je
and
sub
jmp
or
nop
or
push
and
ret
mov
or
pusha
pop
pop
lock
inc
jo
ret
push
or
ss
push
push
cmp
xchg
sbb
jl
loop
inc
cwtl
in
leave
pop
out
add
add
insb
xchg
and
fnstcw
jne
xchg
loopne
repz
iret
adc
dec
add
outsb
push
roll
aam
pop
mov
xchg
fidivl
dec
fbld
jno
push
enter
push
jnp
loopne
fucomp
and
mov
jns
scas
jge
out
jnp
addl
xor
out
pushl
cmp
jne
cmpl
enter
xchg
add
pop
and
push
push
imul
test
cmpsl
sub
lods
push
loopne
out
sbb
fstpt
lds
pop
repz
cmp
imul
mov
outsb
push
jge
pop
cmp
mul
cmp
push
pop
out
pushl
cltd
sub
sar
add
and
incb
mov
push
or
xor
enter
andb
mov
mov
xor
enter
int3
nop
popf
cmp
adc
push
sub
fstps
dec
cmc
inc
mov
push
push
or
out
sbb
imul
cmp
mov
out
pop
pop
lahf
cmp
push
in
ret
mov
pavgb
dec
flds
or
stc
xor
xor
sbb
test
notb
cld
or
xor
sub
pop
cli
push
push
add
rorb
cld
pop
js
jg
pusha
lahf
scas
sbb
push
xchg
push
sbb
shlb
pop
arpl
lock
shl
das
mov
negb
les
ljmp
mov
js
push
loope
lock
pop
aas
stos
loopne
adc
push
stc
push
push
jbe
mov
add
sbb
lods
pop
jecxz
lods
add
fs
sub
pop
pop
mov
iret
lcall
lea
das
jo
mov
gs
ds
sub
dec
pusha
shrl
mov
test
das
xor
insb
push
xor
divl
or
fdivl
dec
xor
andb
jo
outsb
xor
mov
popa
roll
mov
and
jmp
push
or
pop
push
jns
push
pop
jmp
pop
sahf
push
xchg
in
stc
mov
popf
dec
mov
jmp
mov
fldcw
sub
adc
les
cmp
and
push
daa
push
repz
div
sub
jl
int3
inc
adc
adc
popa
sbb
cltd
push
jl
jmp
jp
sti
dec
out
mov
add
aas
cmp
leave
int3
push
popf
cmp
push
pop
inc
sbb
mov
xor
int3
cmpsl
pop
test
add
stos
pushl
mov
pop
fnstsw
cmp
sbb
mov
dec
mov
gs
and
rorb
lock
pop
ljmp
push
and
jle
sub
sti
ljmp
jecxz
and
data16
sub
add
pop
rolb
cli
ljmp
ljmp
or
mov
push
xor
dec
xor
sbb
sbb
push
cli
int3
dec
test
insl
pop
fimuls
push
mov
lea
xchg
pop
and
jne
xor
jmp
inc
mov
xor
stc
or
add
test
lods
push
xchg
mov
into
rcrb
push
clc
das
adc
dec
add
xchg
mov
cld
imul
sub
pusha
jo
jle
pop
imul
or
add
push
push
sbb
cs
push
push
test
loopne
das
jbe
jg
sbb
mov
test
add
add
sbb
jns
push
cmc
jo
aad
aaa
xor
fs
xchg
pop
cli
push
adc
jle
ljmp
or
sbb
cmp
push
jge
cltd
inc
push
fwait
pop
inc
push
and
and
mov
push
add
push
adc
lret
cmp
inc
and
mov
jne
out
popa
mov
xchg
out
in
mov
in
mov
cmp
jl
mov
mov
push
push
mov
push
aam
cwtl
addr16
imul
lret
jmp
pop
das
in
lock
jns
icebp
nop
pop
mov
lods
sub
out
jbe
loope
or
push
cltd
lock
rcr
movsbl
mov
clc
or
rolb
out
sub
pop
pop
xor
rcl
stc
dec
mov
aas
xor
pusha
lahf
rolb
and
dec
test
shrl
dec
push
mov
mov
pop
sbb
insb
xchg
shll
inc
nop
and
or
aas
mov
pop
mov
inc
repz
dec
cld
adc
or
int3
sti
push
add
popf
shrl
fidivrs
jmp
jl
sarl
fiaddl
jb
cld
aam
and
movsb
fistpl
inc
jns
in
and
dec
loopne
or
or
push
lea
jl
sub
dec
cmp
adc
adc
add
ds
jb
les
test
setne
or
mov
push
sub
fwait
adc
jb
addr16
loopne
scas
push
adc
enter
addr16
lahf
in
aad
scas
pop
mov
or
add
bnd
out
notl
test
cmp
inc
dec
fidivrs
test
push
sub
jg
lock
aaa
es
jmp
mov
pusha
pop
or
pop
pop
cmp
jne
push
mov
pop
fwait
inc
cld
or
ret
push
xchg
je
xor
cmp
mulb
sub
ret
and
add
daa
in
or
and
xorl
mov
jg
pop
icebp
test
out
cmp
mov
pop
sbb
inc
push
add
les
push
jle
sbb
inc
lret
inc
jbe
fs
dec
cli
inc
cmp
cmpsb
mov
aam
test
pop
popf
add
add
inc
push
mov
fdivl
sub
cmpsb
jecxz
out
add
push
pop
loopne
mov
daa
push
push
ret
in
sub
pop
arpl
pop
push
enter
xor
mov
cmpsb
mov
push
es
mov
testl
lea
sub
enter
out
or
jns
pop
sub
xor
mov
cmp
add
jl
das
fs
and
aaa
enter
push
pushl
clc
jo
rcll
and
sbb
fwait
popa
cmp
jne
inc
cltd
mov
int3
sbb
cld
sarl
cmp
cs
cmp
jbe
cmp
cmp
jb
pop
jne
and
jnp
cli
inc
jae
mov
pop
jle
in
js
cmp
lea
dec
call
lods
push
or
scas
push
dec
cmp
js
ss
mov
jbe
cmp
sbb
cmp
jmp
mov
cmpsb
fistpl
inc
dec
ss
pop
mov
sub
mov
cmpsl
ffree
mov
cli
inc
and
popa
cmp
enter
in
fisttpl
inc
push
push
dec
hlt
inc
and
adc
fsubl
xchg
aam
push
xchg
cmpsl
adc
movsb
loopne
xchg
push
push
jns
fcmovbe
je
adc
xchg
pusha
dec
inc
inc
imul
inc
aaa
jnp
sbb
fcompl
sub
or
pop
lods
outsb
push
aam
mov
das
fs
aaa
sub
push
fdivrl
repnz
decl
xchg
mulb
lock
idiv
rolb
test
xor
add
fsts
enter
inc
pop
or
jp
es
sarl
push
imul
push
shr
insb
mov
xchg
push
push
das
xchg
repz
add
inc
mov
mov
lahf
sbb
mov
lahf
cltd
sbb
in
mov
lret
pop
sahf
insl
xorps
sub
xchg
setae
push
enter
sub
push
sbb
fisttpll
mov
jne
push
cmp
stc
sub
mov
sti
and
cmpsl
notl
sub
and
nop
inc
icebp
add
jmp
in
inc
add
aas
cwtl
or
sbb
inc
or
loopne
inc
int
cmp
jne
push
fmuls
fnstsw
call
add
pop
push
add
inc
addl
lea
daa
enter
xor
xor
xor
dec
jae
jne
and
ds
inc
sub
add
push
hlt
push
mov
sbb
mov
dec
push
test
daa
cmp
decl
rorb
je
testb
jne
test
and
push
mov
mov
lahf
aaa
sub
cld
cli
and
das
and
mov
add
fadd
leave
pop
xor
or
sub
test
ja
adc
xor
and
jmp
mov
jne
fdivrl
mov
test
stos
sbbl
xchg
clc
clc
je
push
inc
sub
adc
fsubrl
xor
imul
sub
inc
pop
es
stc
in
and
mov
add
fmuls
jge
out
and
mov
push
add
pusha
test
adc
or
mov
mov
sub
mov
jnp
int
add
jne
inc
movl
cwtl
xor
enter
test
pusha
fdivr
lret
lret
xor
jne
cmp
jae
inc
mov
push
pop
popa
push
outsb
jbe
add
mov
xor
or
push
out
xor
lods
mov
sbb
pop
cmpsl
jl
adc
rolb
mov
pop
inc
cmp
sarl
mov
sub
lea
shl
and
dec
loope
mov
pop
jmp
mov
test
test
push
pop
mov
xchg
sub
dec
and
pop
cmp
pop
jbe
mov
pop
mov
xchg
lock
ds
int
sub
pop
mov
mov
popa
rclb
jge
push
inc
cmp
add
or
incl
nopl
mov
cmp
sbb
out
jmp
inc
add
cld
sub
notl
decb
lock
jns
in
les
lods
push
jbe
pushf
data16
popf
inc
mov
repnz
xchg
jmp
pop
mov
and
or
ret
xchg
adc
stos
ja
mov
ja
enter
inc
inc
mov
cmp
cmp
into
mov
cli
int3
adc
xor
leave
add
testl
stc
jo
stc
jne
push
push
imul
cmp
loope
fnstsw
popa
pushf
cs
lods
fisubrl
insb
mov
je
push
sti
add
add
mov
loopne,pt
mov
xchg
pop
cs
mov
push
daa
dec
mov
cmpl
shll
iret
jne
pop
adc
push
push
jmp
sbb
cmp
fldt
daa
push
pop
sbb
enter
hlt
jg
jne
xchg
rolb
ljmp
sbb
icebp
push
sub
enter
or
pop
sbb
inc
xchg
push
sbb
or
adc
cmpb
push
mov
ss
fwait
dec
or
add
adc
cmp
and
imul
push
cmp
mov
jle
jne
adc
xor
divb
jnp
pop
cld
jne
inc
movb
jmp
xor
insl
aas
cmp
jne
push
pop
jmp
movsbl
mov
inc
lcall
push
inc
push
cmp
cmp
mov
cmp
mov
imul
jmp
xchg
and
es
sub
inc
and
or
add
fs
xor
mov
mov
mov
jle
cmp
sbb
fldt
push
call
adc
push
mov
dec
leave
mov
sub
stc
adc
add
cmp
dec
rol
mov
shlb
mov
jmp
popl
sub
fadds
and
daa
stos
pop
ret
adc
je
mov
pop
inc
mov
rep
or
je
lods
push
shll
xor
xor
push
and
pop
aam
js
pushf
jbe
dec
int3
clc
sahf
stc
test
push
sbb
inc
mov
jnp
pop
leave
cmp
mov
sti
cmp
inc
test
jo
xchg
jecxz
mov
xor
ds
add
inc
ffreep
lock
pop
xchg
add
sbb
cli
mov
add
adc
cmpsl
aas
enter
adc
pop
adc
and
xchg
dec
prefetch
or
push
in
mov
mov
test
stos
pop
fucomi
insb
mov
insl
arpl
mov
push
jne
jno
aam
mov
push
imul
adc
push
mov
das
sbb
or
add
sub
cwtl
push
sub
or
adcb
lea
inc
pusha
inc
xor
je
aas
in
ljmp
add
or
dec
adc
cmp
das
je
leave
push
cld
add
hlt
inc
push
sub
fcompl
push
rorb
pushf
ret
js
or
mov
fists
lods
test
addl
dec
popf
push
mov
cmpsl
add
xchg
pop
nop
dec
xor
jo
jno
pop
mov
rcrb
sbb
mov
or
ja
js
mov
dec
repnz
or
ljmp
dec
and
popf
adc
test
mov
loop
in
pop
dec
and
sti
push
add
jo
adc
sub
insb
push
mov
dec
jns
cmp
mov
adc
adc
cmp
loope
in
ficoms
pop
dec
fstl
insl
rorl
loope
push
int
adc
je
xchg
pop
fwait
jbe
popf
dec
nop
and
sbb
cmpsb
and
dec
dec
loop
shll
push
adc
call
xor
dec
and
pop
cld
jge
pop
js
inc
mov
cld
scas
mov
and
mov
js
shll
sbb
push
xor
pop
dec
loopne
enter
test
or
or
sti
push
mov
or
sahf
sbb
es
xor
fcom
dec
push
push
loope
push
jmp
push
sarl
inc
lahf
test
js
mov
push
push
add
movsb
aaa
mov
cld
test
dec
sub
sub
cs
aaa
je
sub
addr16
push
pop
push
and
add
xor
push
push
sub
mov
das
pushf
mov
and
or
push
cmc
faddp
pop
cmp
jae
je
mov
fnstsw
jge
jbe
mov
clc
mov
or
push
neg
out
jbe
loopne
mov
cld
pop
pop
push
es
ret
cwtl
or
cmp
cmp
mov
pop
add
iret
sub
push
mov
mov
or
cmp
cmpb
jne
mov
mov
add
das
push
inc
jns
mov
pop
aad
mov
pusha
pop
xor
adc
lret
push
lock
sbbb
arpl
and
sbb
add
sti
xorl
sub
jne
mov
pop
nop
test
and
or
push
push
mov
cmpsb
inc
test
push
cmp
pop
insb
mov
sti
pop
pop
inc
enter
cmp
frstpm(287
adc
push
daa
mov
and
inc
sahf
jbe
add
mov
sbb
inc
ret
test
push
sub
inc
pop
rep
incl
mov
addb
jno
orl
jne
jnp
xchg
inc
mov
dec
imul
cmp
in
sbb
pushf
test
cmp
test
pushf
nop
incb
mov
dec
ret
mov
inc
xchg
clc
xchg
mov
push
mov
pop
imul
sbb
dec
cmp
pop
jmp
cld
loopne
punpckldq
pop
cmp
or
jne
leave
adc
dec
fildll
test
leave
ret
inc
test
test
vxorps
inc
stos
cmp
pop
jmp
ds
inc
mov
add
sub
fxch
add
adc
inc
popa
pop
int3
xchg
push
ljmp
test
sbb
inc
xchg
vpcomq
inc
sub
and
mov
xchg
loopne
cmp
xor
fidivrl
les
fnstsw
jmp
popf
sub
test
sbb
sbb
jnp
call
fprem
lea
loopne
int
push
sub
daa
push
insb
and
sti
push
sbb
loopne
fwait
test
adc
jbe
adc
add
sbb
ja
in
push
and
stos
mov
xor
xchg
mov
dec
cmp
ds
sbb
jmp
jnp
xchg
mov
pop
int3
imul
mov
xchg
cmpsl
jecxz
std
icebp
add
mov
jmp
mov
ss
int
or
mov
cmp
sbb
outsl
fidivs
leave
and
rorl
jg
and
movzbl
add
add
or
sub
push
cltd
scas
xor
jle
add
mov
loopne
shlb
dec
sub
xchg
cmp
jne
jne
dec
ret
sub
inc
adc
push
out
js
hlt
loopne
popl
repnz
sahf
rcr
decl
inc
cmp
hlt
jmp
jne
push
jl
call
rclb
jbe
inc
flds
xor
add
cmp
ret
sbb
lock
je
lock
mov
mov
jbe
divb
pusha
cld
sub
jae
or
xchg
ljmp
cmp
jle
das
pop
pushl
in
mov
into
mov
mov
pop
sub
mov
mov
pop
inc
sbb
mov
pushl
push
fiaddl
adc
orb
push
and
jnp
test
add
and
outsl
push
and
push
and
add
lea
enter
dec
inc
inc
xor
jo
in
adc
nop
mov
mov
les
in
push
push
mov
mov
or
das
add
fiadds
in
repnz
mov
dec
jo
xchg
mov
jmp
jg
inc
pop
aaa
sbb
sbb
mov
add
add
repnz
mov
sub
roll
mov
xchg
das
fnsave
ja
inc
testl
inc
cli
push
push
aaa
xchg
pop
mov
jbe
mov
call
push
lcall
jle
lods
mov
add
and
mov
add
xchg
and
add
mov
sbb
sbb
or
inc
dec
inc
sbb
pushf
sbb
enter
or
add
mov
cmp
sbb
mov
jne
aas
adc
cld
js
adc
jae
add
mov
add
pop
fdivs
cmp
push
sbb
jns
push
aas
push
fdivl
sbb
dec
setg
sbb
or
push
pop
lea
stc
mov
test
adc
jg
mov
adc
lock
cmp
std
mov
and
push
pop
shlb
cmp
jae
xor
popf
push
mov
add
cld
xchg
cmp
out
mov
lea
mov
mov
jo
aaa
das
test
inc
mov
pusha
adc
push
cmpsl
push
dec
pop
pop
xchg
icebp
add
sub
push
cmp
aaa
mov
adc
mov
add
shr
cmp
or
cld
push
clc
hlt
insl
les
or
xor
cmp
in
inc
hlt
sbb
lea
clc
cs
xor
cld
in
lea
jne
xor
sbb
sbb
adc
or
cld
cmp
add
mov
add
inc
les
cmp
outsb
in
pushl
outsl
adc
add
cli
push
mov
mov
mov
mov
hlt
loopne
out
stos
loopne
inc
push
les
mov
addr16
push
mov
mov
sti
setg
movsb
xlat
inc
add
push
shl
mov
repnz
movl
mov
rorb
pop
imul
cmpl
add
or
dec
cmp
jmp
push
xchg
pop
negb
xchg
js
push
je
mov
and
push
and
orl
insb
aaa
xchg
ret
bound
sub
fists
fneni(8087
das
jnp
nop
adc
mov
scas
rclb
in
or
mov
call
flds
in
bound
ror
std
push
mov
mov
dec
shll
jbe
ffree
lahf
hlt
enter
repnz
repz
aam
cli
pop
cmp
push
push
adc
inc
xchg
les
lea
or
jb
loope
mov
push
sub
mov
in
pop
adc
loop
addl
cmp
hlt
cmp
inc
push
mov
mov
aad
add
cmp
add
dec
aam
dec
sub
sbb
cmp
fidivl
inc
imul
and
rcrb
jge
dec
push
mov
andb
cmp
jb
sub
les
pop
jb
ss
pop
inc
mov
mov
cmp
mov
fwait
jbe
dec
fs
andb
mov
push
negl
sbbb
movnti
push
pop
out
mov
mov
jmp
or
add
fcomps
adc
lea
or
push
call
aas
loopne
xchg
cli
rorb
cmc
shlb
pop
dec
fistpll
jmp
inc
sub
cld
je
jmp
mov
int3
test
add
pushf
sub
pop
and
bound
dec
ret
sub
sbb
add
in
cli
adc
popa
repnz
or
xchg
mov
mov
aad
add
aaa
loopne
mov
dec
xor
push
and
in
popf
push
rolb
mov
push
xor
pop
and
cld
adc
inc
push
rorb
pop
scas
fldenv
inc
daa
sub
mov
mov
and
or
xchg
add
je
addl
sub
xor
push
or
push
mov
cmp
enter
pushf
outsb
adc
or
pop
push
push
enter
sub
cmp
sahf
aad
pusha
xchg
adc
cmp
je
and
sub
sub
push
in
mov
pop
jb
loopne
inc
add
adc
clc
and
xor
inc
lret
and
dec
push
leave
push
inc
roll
xorl
dec
jmp
loop
movsl
cmpb
out
movaps
mov
mov
push
int
cmp
mov
inc
or
mov
adc
mov
test
loopne
repnz
push
or
mov
pop
lds
or
clc
nop
ror
lea
call
adc
scas
xchg
jl
mov
jns
nop
inc
xor
add
dec
mov
sub
arpl
adc
mov
sarl
sub
mov
mov
jle
cmp
cmp
sub
stos
jo
fdivrs
in
movl
les
sbb
push
push
pop
ss
push
adc
mov
jle
dec
cmp
push
add
mov
dec
jb
inc
jecxz
aam
adc
sub
sub
pop
sbb
inc
push
test
xor
out
lret
adc
add
ljmp
and
andl
push
mov
mov
adc
sbb
inc
jne
ret
leave
orl
cld
push
jp
pop
xchg
pop
fmuls
fchs
jge
pop
push
and
fwait
dec
mov
jge
in
cmp
addl
xlat
push
xchg
fsubs
jae
and
push
inc
or
cld
inc
and
cmc
aam
sub
mov
xor
xor
rolb
lea
mov
add
cli
adc
js
xchg
pusha
cli
lock
ret
lods
sub
mov
bound
and
push
add
dec
lods
jmp
and
popa
jg
mov
push
cmp
sti
loopne
pop
test
loopne
je
je
cmp
mov
add
cmp
pop
or
sub
adc
mov
pop
xor
pop
das
mov
push
inc
adc
sub
mov
push
cmp
test
insb
dec
std
sbb
mov
es
cmp
jmp
inc
mov
pop
addb
adc
and
mov
mov
xchg
pop
or
mov
add
mov
inc
test
sbb
pop
or
mov
sti
xor
mov
lea
inc
cmp
enter
pop
jne
mov
inc
hlt
and
enter
inc
cmp
mov
test
and
xorl
mov
sbb
sub
cli
xor
mov
je
jnp
sub
rcll
xor
xchg
xchg
xlat
and
cmp
test
push
push
xor
and
jp
xor
test
dec
or
std
pop
mov
dec
xor
scas
or
ja
push
push
mov
pop
push
fstpt
rol
fidivrs
and
push
sbb
xchg
lock
add
push
scas
sub
int3
adc
mov
outsl
stc
mov
mov
pop
pushf
mov
lret
and
push
mov
loopne
sub
inc
into
cmp
rolb
ficoms
push
push
roll
push
dec
xor
xchg
push
outsb
push
jbe
je
clc
mov
fdivr
out
incl
pop
mov
imul
pop
stc
mov
push
shr
shl
jg
xchg
add
lea
add
rorl
pusha
das
fidivrl
popl
inc
add
test
push
sarb
add
test
dec
lods
xor
out
lock
lret
repnz
mov
mov
lods
enter
pop
jl
dec
loope
jg
or
dec
in
push
push
or
push
pop
and
daa
xchg
js
pop
mov
fmull
sbb
inc
mov
dec
mov
aaa
das
imulb
mov
call
cltd
shrl
in
jge
mov
in
sub
jmp
adc
mov
push
xor
xor
imul
js
push
push
adc
jne
push
clc
pop
lret
and
xor
mov
mov
adc
or
movaps
mov
jns
fidivs
not
fidivrs
push
loopne
xlat
inc
mov
sub
sti
cld
inc
and
clc
and
add
or
shrb
mov
adc
repz
fildl
imul
outsb
fstl
xchg
mov
arpl
out
adc
add
mov
mov
mov
dec
add
inc
or
inc
push
adc
mov
adc
adc
and
or
mov
cltd
andb
sub
sub
and
test
push
push
loope
dec
xor
lods
cmpsb
cmp
cmp
and
inc
jmp
cmp
mov
ret
addr16
sub
mov
add
pop
mov
sub
je
orl
or
fsts
dec
xchg
icebp
cld
and
enter
sbb
imul
popa
adc
xlat
push
shrb
fstps
add
call
or
in
aam
fcom
inc
rcrb
mov
push
adc
xor
push
repnz
sub
and
and
jge
add
jo
add
sbb
addr16
cld
push
mov
es
push
cld
push
mov
add
out
xor
push
dec
adc
xlat
mov
or
xor
outsw
roll
mov
cs
adc
push
mov
and
out
cmp
jmp
mov
pop
xchg
jno
nop
pop
pop
jo
sbb
push
fcoms
xor
jmp
push
mov
and
dec
inc
je
mov
xchg
js
push
sbb
adc
fdivs
push
fwait
jmp
or
sub
sub
xorl
add
lret
xchg
lea
ret
outsl
mov
sbb
xchg
add
jb
lea
das
inc
pusha
aaa
mov
mov
pop
lret
fdivs
xor
pushf
das
daa
call
jb
push
fs
and
add
lds
test
nop
out
std
fs
divb
pop
dec
popa
mov
add
sbb
jmp
and
adc
dec
xor
int
data16
add
sub
dec
cmp
sbb
cmp
xchg
mov
inc
jae
inc
mov
cmp
mov
je
cmpb
jmp
lds
jae
inc
push
mov
sub
mov
adc
lret
stc
in
mov
repnz
rcrb
sbb
inc
jb
fsubs
pop
adc
in
data16
dec
pop
scas
bound
cmp
push
xchg
cmp
xor
cmpsl
sub
cmpsb
pusha
push
or
and
into
sbb
adc
int
dec
mov
mov
xchg
incl
and
add
clc
insb
les
scas
mov
fwait
adc
mov
les
sub
add
iret
aam
rorb
clc
push
shrl
call
xor
mov
cmc
sbb
test
xor
mov
lods
lret
popa
fsubp
xchg
aas
iret
cs
dec
orb
icebp
xor
add
mov
sbb
adc
and
jne
mov
ss
fidivrl
test
inc
jnp
pop
mov
xor
xchg
imul
imul
movsb
dec
mov
out
jb
enter
push
lea
loope
out
fs
xchg
add
pop
push
xchg
call
fs
add
xor
or
push
dec
loopne
push
xchg
sub
pop
cmp
mov
push
push
inc
cld
sbb
cmp
adc
fdivs
test
lea
mov
push
push
cmpsl
not
xchg
sahf
jle
sbb
call
or
jg
xor
mov
inc
cmp
mov
jb
cmpw
jne
arpl
mov
std
and
xchg
xor
cmp
fnstcw
lea
pop
jno
pop
xchg
outsb
cmp
ret
sti
or
pop
push
jbe
addr16
xor
pop
pop
push
ret
fidivl
jl
and
jbe
mov
adc
pusha
xorl
inc
push
sub
and
sbb
push
cmp
jb
cmp
xor
gs
or
push
aam
mov
fs
lods
lock
mov
mov
xor
xlat
das
pop
jle
jno
mov
jp
push
sub
xchg
in
mov
popf
sub
dec
sub
pop
pop
xor
std
jg
rcrl
testb
push
push
jae
adc
jo
jmp
lahf
cmpsl
imul
and
mov
jne
cmp
jne
aad
shr
or
jecxz
test
add
push
xchg
lret
and
dec
inc
cld
loopne
pop
add
push
leave
pop
sub
fidivs
int3
mov
cmp
jb
jmp
jecxz
add
xchg
aam
les
push
jns
shl
les
out
xor
movsb
adc
incb
loopne
mov
xchg
mov
mov
inc
sbb
jge
cmp
ljmp
inc
rorb
mov
cmp
push
std
pop
mov
pop
pop
lahf
dec
dec
cmp
jne
cmp
dec
fldt
inc
mov
in
pop
mov
xlat
cmp
jae
cmp
dec
out
push
xchg
fstpl
cmp
jg
js
push
call
inc
ret
aas
cld
and
cmp
jne
fldln2
add
push
int3
xlat
or
andl
in
xchg
dec
outsb
sub
lret
push
int
xchg
push
xchg
lret
push
loopne
add
lret
push
pop
movsbl
aas
mov
cmp
andb
aaa
sbb
ficoml
add
pushf
or
inc
ret
ret
sbb
icebp
add
or
loopne
cli
inc
inc
cmpb
or
adc
jmp
ret
rorb
test
fimuls
cld
adc
lods
roll
aaa
stos
mov
loop
jo
or
pushl
bound
adc
or
push
loope
add
mov
or
xchg
test
xchg
pusha
sub
push
imul
adc
lret
pop
adc
mov
pop
xor
jmp
dec
pushf
in
mov
dec
in
clc
inc
decl
cmpl
dec
mov
test
mov
adc
cmpb
jo
cmpb
data16
mov
adc
ljmp
add
and
fistl
add
xor
adc
and
js
inc
mov
ret
push
sbb
push
xor
mov
stos
aad
dec
js
sbb
fisttpl
or
iret
ret
and
xor
inc
inc
dec
dec
pop
xor
data16
and
sub
sbb
je
sahf
int3
dec
adc
mov
fdivl
dec
cmp
je
fnstenv
cmp
xor
fidivs
verr
sbb
lods
sub
jnp
bsf
xchg
pop
in
mov
add
les
or
jge
mov
call
mov
jmp
pop
sbb
jne
clc
dec
xor
sahf
sub
in
fs
sbb
xorb
xor
fs
pop
aam
ror
dec
sbb
cmp
pop
xor
lock
xor
adc
movsb
repnz
inc
mov
aam
hlt
xor
xor
sub
rorb
in
testl
mov
mov
xor
mov
xchg
pop
jmp
push
int3
int
je
lahf
sbb
test
mov
je
sbb
push
gs
xor
cmp
xchg
adc
cmp
loopne
xor
push
xlat
mov
fs
dec
jo
je
mov
inc
rolb
subb
xor
cmp
clc
adc
inc
inc
into
sbb
xor
hlt
jae
xor
jns
push
loopne
pop
int3
inc
xor
or
adc
fucomp
xor
in
pop
xor
sbb
mov
and
test
rorb
into
mov
jo
dec
je
into
dec
inc
lock
sbb
push
dec
inc
dec
inc
push
cmp
sub
pushf
popf
int3
addr16
dec
loopne
sbb
or
int3
xor
in
push
sahf
lock
cmovno
repnz
push
cmp
xor
sub
xchg
inc
push
pushf
and
xor
rcr
leave
xorl
int
jb
add
cmp
lock
jb
jl
sbb
sbb
test
les
and
cld
xor
xor
cwtl
xchg
mov
sbb
cmp
sbb
jb
lods
push
es
jb
addl
add
inc
jbe
cmp
push
xor
inc
fs
push
imul
dec
adc
out
sbb
or
dec
add
mov
cwtl
in
in
int3
dec
inc
inc
loopne
rorb
xor
cltd
popf
rcrb
mov
mov
test
icebp
jl
stc
aam
and
adc
test
jl
int3
pop
add
mov
xor
xor
cwtl
loope
fs
xor
test
leave
mov
mov
nop
and
and
add
pop
and
and
adc
sarb
xor
imul
xor
inc
push
sbb
mov
enter
test
xor
mov
xchg
xchg
xchg
daa
and
aam
xchg
flds
cmp
int3
sub
andb
and
sbb
add
inc
dec
sahf
daa
lock
fmull
sub
enter
mov
push
bswap
mov
xchg
cmp
xor
subb
sbb
add
and
lret
mov
push
fs
push
sbb
push
mov
insb
push
add
loop
rcll
jnp
sbb
dec
in
pop
mov
pop
aas
mov
nop
push
mov
jo
xor
mov
xor
xor
hlt
lock
jo
and
sahf
in
lds
or
sbb
xor
xor
xor
adc
fidivrs
call
leave
in
fcompl
fmul
dec
insb
hlt
sbb
add
xor
inc
dec
pop
adc
xor
xor
cmp
dec
push
outsb
shlb
cmp
in
clc
test
shl
popa
daa
lret
sub
push
cmp
test
xor
push
fs
xor
push
jl
cmpb
push
xchg
jl
jb
enter
xor
enter
push
insb
in
or
insb
movl
inc
xor
movsb
insb
js
enter
adc
outsb
in
jb
xadd
outsb
js
pop
in
sbb
xchg
sbb
enter
movsb
jl
outsb
xor
cltd
and
jo
mov
inc
xor
scas
xor
enter
inc
and
dec
push
lds
inc
scas
in
mov
and
pop
cmp
insl
stos
cmp
xor
inc
pusha
nop
xchg
sub
pop
adc
cld
xchg
pop
inc
pop
jno
xor
loop
mov
je
mov
push
cmp
push
inc
add
js
fcoml
add
dec
jns,pn
int3
sbb
inc
leave
dec
push
aam
ja
push
jb
and
in
pop
xor
loopne
int3
and
in
mov
and
cwtl
jb
and
cld
jl
repnz
add
xor
xchg
or
xchg
or
and
adc
and
xor
sbb
enter
and
sbb
cld
jbe
sub
sub
les
or
pop
pusha
leave
xorl
sub
push
push
xchg
cmp
je
movsl
sahf
out
cmp
je
test
and
push
pushf
test
je
push
imul
les
test
push
incb
push
push
out
and
adc
xor
and
push
lods
push
add
fsubs
cmpsb
xor
dec
sub
inc
in
ret
outsl
loope
cmp
rolb
adc
or
xchg
cmp
in
aaa
push
lahf
jle
cmp
jge
or
jmp
std
jg
pop
jne
mov
adc
cmp
je
add
decl
or
xor
enter
rolb
and
sbb
fwait
add
pop
lea
cmp
je
cmp
cmpsl
hlt
out
mov
sarb
je
in
adc
fsincos
lret
pusha
jo
or
jg
pop
rorb
dec
adc
xorb
lea
js
cli
incl
fistpll
adc
loopne
inc
testl
sbb
idivl
pop
popa
movsbl
je
pop
inc
in
pop
int
popa
pop
jl
cmp
jg
daa
mov
mov
pusha
outsl
pusha
popa
cwtl
cld
ss
add
push
dec
fcomps
cld
in
insl
inc
loopne
out
shrb
jne
into
movsb
vmovapd
jmp
sbbb
sarb
lahf
sbb
dec
pop
or
pop
mov
mov
add
sub
dec
jle
mov
add
loopne
mov
xchg
lea
cltd
adc
clc
divl
pop
dec
dec
shll
dec
mov
mov
int3
add
cmp
idiv
shlb
popa
repnz
cmp
ljmp
adc
cmp
pop
jg
notl
js
or
icebp
andb
dec
lea
adc
or
je,pn
and
lcall
xor
dec
js
arpl
jno
pop
enter
push
mov
mov
gs
sbb
test
into
sbb
ljmp
add
dec
mov
mov
push
mov
adc
cmp
je
cmp
jge
add
incl
cmp
femms
add
popa
and
or
push
cltd
ja
mov
push
xchg
cmp
adc
push
cmp
or
in
shl
rclb
add
imul
mov
add
pop
daa
jecxz
push
in
adc
je
dec
clc
mov
lods
jae
lock
sbb
inc
sarb
or
sub
imul
fsubl
fstl
jno
in
add
int
or
int
neg
sbb
pop
mov
xchg
rclb
bndstx
into
inc
jne
outsb
xchg
sub
out
xor
pushf
cmp
and
insl
and
lahf
rorb
mov
push
and
fcmovu
lret
inc
push
xchg
push
mov
lds
push
jbe
add
sbb
fldl
push
sbb
jge
mov
andb
mov
jo
adc
dec
test
ss
pop
dec
jne
punpckldq
inc
sbb
add
imul
aaa
or
rorl
or
pusha
outsb
adc
pop
adc
andl
jns
out
dec
sbb
push
sbb
jecxz
ret
xchg
mov
cld
xchg
gs
or
add
loope
jle
sub
push
push
xor
or
sbb
out
loopne
enter
pop
sub
sbb
std
push
out
dec
je
or
pop
insb
cmovs
cmp
jns
push
sub
dec
cmc
push
in
sub
divl
inc
shl
lret
push
mov
jbe
lea
idiv
push
push
sbb
jb,pt
jmp
push
xorl
and
lods
mov
loope
clc
js
sub
push
inc
int3
nop
adc
sbb
sbbb
cltd
mov
popf
jne
dec
mov
fdivs
adc
push
pop
or
sub
rclb
mov
jle
lea
push
shr
inc
mov
jmp
or
mov
or
mov
add
inc
inc
dec
jne
pop
jmp
and
bound
ljmp
add
mov
and
inc
jmp
mov
shr
shl
ret
out
arpl
dec
add
sbb
fnstenv
out
jb
xchg
mov
jecxz
int3
addl
in
and
sti
and
push
cmpl
pop
loope
loop
daa
les
pop
fmul
xor
sarb
mov
or
or
into
jmp
movsb
jbe
sub
push
daa
clc
popa
and
call
fdivs
out
inc
les
or
jge
jge
mov
sarb
sbb
fidivs
adc
pavgb
inc
aam
lret
sub
jne
jl
sbb
or
pop
dec
push
adc
incb
sbbl
imul
nop
lcall
loopne
leave
xor
loop
out
jne
xor
push
push
add
and
int3
dec
adc
lcall
ror
inc
and
loopne
xchg
and
dec
inc
test
fsubl
fstpt
incl
cmp
xchg
jmp
adc
adc
mov
inc
xchg
and
or
xchg
inc
shlb
xor
and
xchg
jge
jle
add
jo
mov
jmp
gs
inc
decl
pop
out
push
push
pminsw
mov
xchg
sub
ljmp
ljmp
dec
jne
mov
mov
inc
cmp
sarb
add
lds
jno
jns
adc
mov
dec
je
jge
adc
dec
es
inc
add
and
into
cmc
jne
sti
push
fnsave
inc
dec
fisttpll
fiadds
or
ret
shrb
jmp
jae
pop
movsl
mov
mov
push
add
ret
add
nop
and
push
push
das
stc
inc
and
pop
jg
xor
loope
push
push
add
int3
inc
sti
push
popl
adc
fs
sub
mov
pop
ret
sub
inc
pop
clc
imul
mov
aas
xor
cmp
je
cmpl
xchg
cltd
out
mov
and
bound
stc
cmpsb
add
cld
cli
or
cmp
adc
das
sti
jo
jns
fldt
push
das
test
xchg
leave
xchg
arpl
ret
push
popa
inc
and
push
mov
inc
push
aad
xchg
js
inc
mov
and
test
and
icebp
enter
cmp
outsl
lret
dec
mov
add
in
insb
pop
in
mov
pop
cwtl
dec
clc
or
int3
in
scas
sub
test
out
jae
not
or
leave
test
pop
sub
push
aam
or
mov
adc
ror
add
cs
mov
inc
sub
popa
mov
jp
add
cmp
clc
or
mov
pop
push
dec
lock
bound
jnp
or
inc
cmp
testl
xchg
je
jmp
pop
sbb
sbb
data16
push
punpckhbw
lds
imul
ds
push
sbb
shlb
inc
xchg
in
xlat
out
daa
mov
sarb
sub
mov
inc
push
adc
lcall
rolb
icebp
adc
push
int3
mov
and
sub
div
mov
maskmovq
adcb
cwtl
mov
xorl
gs
daa
ds
pop
pop
jecxz
mov
adc
daa
cmp
mov
pop
add
cmp
mov
dec
and
jne
inc
adc
jne
mov
pop
aaa
bound
or
push
jmp
sbb
cmp
jmp
addl
fidivrs
add
cmc
mov
mov
in
scas
outsl
aad
mov
cltd
daa
and
outsl
jg
loope
rcll
pop
sbb
repnz
test
ja
jb
cmp
js
jecxz
ja
lahf
or
clc
pop
or
lret
and
jb
xorl
jg
jae
push
and
ja
push
inc
inc
iret
dec
repz
cmp
xor
es
repz
xor
sbb
sbb
push
iret
or
jae
xor
sub
pop
sbb
add
adc
mov
push
incl
and
in
xchg
nop
xor
mov
jl
cmp
inc
pop
fs
add
outsb
push
jl
pop
add
cmpsb
es
jmp
mov
in
imul
inc
inc
inc
mov
iret
or
add
sub
lcall
add
xor
or
pop
repnz
xor
cmp
test
pop
or
aaa
push
push
adc
and
insl
loopne
mov
dec
std
mov
cmpsb
std
mov
cmpsl
mov
dec
or
loope
lea
mov
call
add
mov
hlt
arpl
xor
or
pop
sbb
sti
aam
nop
stos
and
test
pop
push
mov
mov
js
jle
push
push
push
fcmovne
subb
test
inc
mov
jbe
lret
jmp
dec
pop
inc
cwtl
mulb
sbb
test
lea
push
mov
push
loope
add
std
repz
mov
stos
rorl
mov
adc
mov
or
clc
clc
cli
dec
mov
cmc
dec
push
add
cmp
mov
adc
push
pop
mov
fadd
push
rcrl
test
mov
cmp
dec
daa
aaa
nop
push
aam
pop
test
cmc
movsb
jl
lods
add
cmc
lds
es
xchg
or
push
and
xor
andl
adc
nop
addb
add
mov
aaa
mov
movsb
cld
arpl
inc
inc
pop
lock
mov
cmp
movsl
inc
pop
sbbb
jge
fnsave
fists
cmpsb
sbb
cwtl
and
push
in
pop
push
imul
test
loop
aaa
dec
pop
add
mov
or
dec
mov
int3
jbe
sbb
outsb
or
das
add
sti
movzwl
cmp
xor
aam
in
fsubp
xor
fsubr
push
xchg
aaa
js
pop
xor
lcall
mov
and
xor
cmp
je
cmp
mov
clc
fstl
push
dec
and
data16
daa
push
and
sbb
mov
or
add
jge
pop
mov
fisubrs
or
sub
jge
jne
mov
loopne
movsl
mov
or
cmp
test
daa
movsl
sub
xor
movb
ret
cmp
cmp
mov
push
adc
and
jo
bound
sti
push
jno
mov
jp
cmc
adc
out
fucomip
inc
pop
sar
subl
push
sahf
je
cwtl
or
das
push
lods
xchg
ss
or
sbb
aas
and
add
or
lcall
fdivrs
cs
icebp
pop
testl
data16
iret
je
cltd
clc
dec
dec
dec
cmp
mov
inc
jge
fwait
in
ret
jnp
push
dec
jnp
sti
mov
mov
adc
lahf
mov
push
lea
fistpll
fidivrs
adc
nop
jge
sbb
lcall
addb
aas
js
mov
push
mov
or
sbb
mov
jl
cmp
sub
outsb
pop
aaa
mov
jne
push
aam
or
push
push
push
xchg
clc
fcmovb
ffree
dec
andb
or
jnp
ret
sbb
movsb
sbb
add
inc
rcrb
pop
inc
sbb
inc
lahf
dec
test
xchg
xor
aam
insb
inc
cmp
lock
mov
push
insb
xchg
or
push
mov
shl
jne
xchg
icebp
xchg
in
mov
add
push
dec
push
push
pop
clc
icebp
or
in
sbb
imul
rcrb
cmpsb
ja
outsb
pop
inc
xorl
scas
push
jecxz
inc
jo
call
js
out
cld
enter
leave
daa
jecxz
pop
in
xchg
jno
sub
adc
adc
adcl
mov
inc
rolb
sahf
jge
mov
loop
lock
pusha
cmp
cmc
dec
cmc
dec
mov
cmp
mov
loopne
or
xor
cld
jmp
sbb
arpl
dec
repz
and
adc
shll
push
mov
mov
and
and
xor
shr
cld
inc
cld
or
movsl
lock
dec
jne
pop
stos
jmp
add
sarb
lock
das
cmp
dec
jo
and
stc
clc
pop
xchg
add
pop
lock
jnp
inc
push
mov
pop
sbb
push
mov
shrl
adc
inc
mov
fmuls
add
push
cwtl
inc
nop
sbb
pop
adc
clc
inc
and
mov
add
or
push
inc
cwtl
or
jg
jmp
sub
and
jp
adc
push
addr16
cmp
add
mov
add
sahf
add
out
stos
andl
push
aaa
popl
filds
lret
gs
int
out
fs
jge
sbb
orl
jb
sub
dec
out
sarb
test
xchg
or
pop
fdivrl
inc
mov
push
inc
insl
inc
loopne
ja
addr16
shlb
sub
push
test
cmp
sub
mov
in
dec
cmp
test
data16
stos
lods
scas
push
push
mov
or
push
sub
xor
fisubrl
jl
mov
push
push
std
cwtl
mov
xor
inc
jg
pop
call
jg
cltd
xchg
sbb
adc
out
rol
rcl
ret
cmp
in
xchg
xor
popa
stos
xor
lea
and
dec
ror
push
iret
xchg
sahf
test
mov
movsl
pop
sarb
or
and
lods
jl
pop
and
pop
dec
or
cmovle
ret
pop
jbe
push
fstpl
inc
nop
insl
hlt
fs
int3
add
test
lahf
popa
enter
push
sub
imul
shll
popa
fisttpl
lahf
or
cld
sahf
jbe
ficoms
and
mov
or
int3
cmpsb
test
mov
leave
mov
ss
jg
and
lods
push
or
xchg
in
in
push
mov
scas
fcoms
mov
loopne
fsubrl
xor
and
xchg
xlat
inc
dec
or
test
loopne
xor
icebp
sub
or
push
cwtl
push
pop
cmc
cli
in
mov
gs
ja
insl
loopne
dec
mov
jne
mov
pop
push
push
or
lock
push
jbe
aaa
adc
jg
ret
and
or
mov
mov
lea
cmpsb
fimull
mov
stc
add
pushf
jle
mov
ret
pop
xor
inc
pop
add
cltd
pop
sub
popf
nop
or
movsb
xor
mov
or
daa
or
pusha
shl
inc
push
mov
dec
inc
push
int
jne
adc
adc
xor
pop
inc
and
mov
pop
add
and
loope
push
mov
test
fldenv
push
xchg
cld
dec
in
jg
or
inc
dec
xlat
cwtl
in
xor
jg
sti
ret
addb
cmp
dec
dec
or
and
sbb
jns
push
ss
jle
faddl
jns
mov
lods
je
aad
add
push
add
jmp
cli
test
and
call
nop
inc
aaa
in
fmull
push
pop
and
movsl
in
or
gs
ret
push
cmc
sbb
mov
push
jle
in
sbb
pop
in
add
pop
inc
xor
mov
ds
or
sbb
repz
daa
xor
in
stos
mov
std
lods
lods
adc
dec
push
popf
or
lock
xchg
adc
add
lret
loopne
pop
xor
dec
inc
call
lret
adcl
push
mov
js
test
in
rolb
inc
insl
mov
in
ja
add
cmp
outsb
cmp
call
mov
fldenv
sub
pop
push
pop
ss
ds
jae
loop
popf
jge
mov
and
das
add
testl
push
addr16
add
aas
mov
test
dec
mov
jge
sarb
mov
cltd
test
adcb
or
adc
mov
imul
sub
mov
mov
inc
adc
orb
fsubs
pop
mov
ror
enter
and
mov
xchg
xlat
std
and
enter
add
fildl
das
and
push
movl
gs
movsl
fildll
jge
fmull
sbb
mov
fldt
push
push
push
push
enter
sti
shrb
and
or
sub
push
clc
xorb
pushf
cli
fisubs
and
inc
mov
mov
push
or
lcall
pop
rcr
mov
cmp
xchg
mov
jnp
fcoms
sbb
and
jnp
mov
gs
push
dec
adc
jle
push
sub
jo
int3
inc
push
push
or
rcrl
std
inc
aaa
sbb
pop
jg
mov
rolb
inc
adc
leave
pop
iret
ret
or
mov
inc
mov
dec
mov
push
jl
ret
push
push
bound
inc
outsl
movsb
outsb
lret
dec
xchg
xchg
rorl
jae
sbb
xor
test
mov
mov
fldt
loopne
mov
add
mov
inc
push
movsl
jae
or
or
mov
je
arpl
sti
inc
loope
add
cltd
idiv
test
outsl
movb
inc
jmp
or
pop
popf
mov
mov
mov
inc
dec
adc
icebp
jae
aad
mov
fs
pop
dec
je
dec
pop
and
fimuls
mov
and
inc
inc
inc
sbb
or
dec
and
adc
enter
movaps
dec
clc
inc
mov
cmp
pop
clc
call
push
cli
shr
push
xor
mov
rep
aaa
cwtl
add
cmp
rol
dec
pop
fmulp
mov
les
push
or
and
xor
cmpsb
cld
lock
hlt
xchg
clc
cld
inc
popf
js
mov
push
xor
mov
ds
fldt
sbb
scas
movsb
sbb
call
pop
clc
push
pop
jae
fnstcw
xchg
sbb
mov
push
mov
push
adc
sbb
in
add
std
out
push
negb
std
cmpb
cli
das
inc
or
and
push
mov
jmp
addb
add
xor
and
pop
out
add
dec
adc
or
and
sub
out
sti
cmp
adc
jo
xchg
fldenv
push
pop
popa
cmp
add
pop
push
es
push
daa
cmp
sub
add
mov
punpckhbw
ficoml
push
xchg
jae
lahf
and
icebp
dec
jnp
push
jne
push
or
mov
pushl
sub
in
mov
mov
and
cmpsl
movsl
push
lods
pop
push
push
sbb
and
lods
mov
inc
or
xor
xor
jge
adc
imul
xchg
xchg
not
push
sbb
scas
rolb
out
fcomps
rorl
call
dec
mov
adc
xorb
dec
mov
mov
inc
inc
fimull
shl
je
xchg
fildll
jge
test
jle
loopne
dec
push
xor
add
or
idivl
pop
lea
adc
add
clc
ficoms
and
lock
push
dec
push
je
aaa
dec
xor
cmp
js
es
add
cmp
pop
adc
inc
loop
push
and
jmp
shl
push
sub
or
mov
cmp
lock
xchg
add
das
push
cmp
or
dec
mov
sarb
cmp
add
push
push
push
mov
ss
push
sbb
xchg
sub
sub
xor
cmc
adc
jnp
xorl
and
push
push
xor
adc
sub
sub
jg
cmpsb
call
sub
add
xchg
popf
ret
inc
jmp
dec
cmp
cmp
or
test
pop
pusha
dec
shrb
cmpsl
cmp
pop
cmp
and
add
jns
les
push
add
adc
testb
jne
mov
pop
jo
mov
lock
ret
cld
jno
scas
pusha
or
or
js
sub
sub
stc
sbb
pusha
xor
lock
or
inc
fwait
clc
add
inc
jg
out
or
xor
inc
add
les
call
enter
test
xor
push
stos
cwtl
das
add
outsb
cmp
cmpsl
test
sti
add
loop,pn
xorl
adc
pop
sbb
loop
or
xchg
js
clc
mov
sahf
sub
jmp
movsl
add
cmp
loopne
hlt
ret
xor
push
xchg
das
aas
dec
enter
sub
sbb
pop
jle
or
scas
add
mov
sbb
ss
xor
adc
loop
mov
dec
and
push
or
and
push
mov
xor
arpl
ja
sti
and
fistps
ja
scas
enter
cmp
add
jle
push
je
or
test
ret
xchg
sbb
dec
cmp
mov
hlt
mov
fsubrl
jl
scas
iret
sti
orl
lods
sbb
or
icebp
mov
xchg
aas
ror
push
push
insl
je
lock
loopne
adc
movzbl
movsl
std
decb
or
cmp
aas
aaa
jg
das
push
test
push
repz
aas
adc
adc
test
mov
clc
jbe
inc
push
push
pushf
daa
enter
mov
xchg
cmpsb
imul
mov
movl
or
add
add
in
or
or
orb
push
or
bound
insb
mov
js
test
in
je
std
xor
push
push
sahf
pop
icebp
rol
notl
cmp
add
xchg
ss
xchg
jle
clc
sarb
inc
or
inc
add
gs
sub
adc
adcl
mov
push
jb
enter
mov
insb
mov
mov
int
sbb
adc
cmpsl
inc
cld
daa
adc
fsubl
cld
inc
add
push
add
lock
inc
xlat
jp
shl
insl
inc
psrad
mov
or
sub
out
ret
jne
push
push
clc
push
jbe
scas
sub
sub
adc
stos
pop
mov
mov
add
jns
sbb
jmp
lock
jmp
dec
cltd
scas
jl
sbb
push
jne
arpl
pop
cltd
ljmp
mov
mov
ret
outsb
add
js
cld
sub
cmp
xchg
push
mov
mov
lcall
insl
sub
xlat
testb
jg
mov
jne
orb
lahf
std
popa
mov
jno
pushl
inc
sbb
sbb
pop
pop
or
mov
lret
add
pusha
inc
sbb
sahf
push
scas
and
movq
pop
mov
and
nop
out
addr16
mov
fmuls
jnp
xchg
out
xor
and
js
subl
add
lock
cmp
fcoml
sbb
clc
lea
or
aas
add
push
push
xor
push
test
push
pop
pop
dec
rclb
add
dec
adc
adc
sub
inc
pop
xchg
sbb
add
xchg
andl
pop
clc
lock
aad
sahf
adc
jb
jp
mov
imulb
push
jge,pt
loopne
sbb
xor
adc
pop
adc
sahf
mov
mov
ja
jmp
jl
mov
insl
jnp
pop
cmpsb
push
sbb
movsl
add
cmp
clc
xor
divl
add
in
push
sub
add
jbe
roll
push
repz
sbb
out
movsl
sete
pop
cmp
or
xchg
sub
je
in
push
push
cmp
cmp
pop
je
ret
add
xchg
daa
out
je
pop
pop
xchg
test
push
sbb
cmpl
sub
movsl
dec
std
or
xor
enter
or
rorb
and
jge
inc
fcoml
bound
lods
sub
cwtl
dec
cmc
mov
inc
jmp
push
push
pop
out
sub
push
call
sbb
int3
fmuls
cli
push
push
or
clc
cmp
into
popa
stos
test
cld
cmp
push
call
sub
mov
sahf
les
pusha
sbb
pop
jecxz
sbb
cmp
push
dec
xor
pushl
popa
mov
or
push
push
aam
or
add
clc
push
adc
dec
adc
into
sti
out
mov
fcmovnu
mov
mov
pop
push
xor
adc
dec
nop
mov
cmp
fs
stos
sub
adc
jb
mov
and
enter
and
in
sbb
sub
sub
sub
sub
in
pushf
cmp
in
sbb
sub
movsl
adc
dec
in
popa
jg
pop
pop
jmp
push
push
sub
insb
mov
rorb
popa
in
dec
add
xlat
shrb
nop
imul
nop
and
loopne
cmp
outsb
and
or
jne
or
and
xor
insb
xchg
cmp
jno
push
call
adc
xor
jno
mov
fstpt
adc
adc
jle
pushl
push
nop
lock
and
movl
inc
cmp
jb
jmp
cmp
dec
sbb
loop
push
push
call
or
lret
push
cmp
sbb
or
aad
sub
adc
xor
sbb
adc
mov
int
clc
jnp
pop
je
xor
pop
jle
stc
or
je
xor
outsl
sbb
stc
adc
jb
push
mov
and
cmpl
mov
loop
enter
dec
lds
push
imul
jle
adc
out
xchg
ja
loopne
jo
lds
xor
lods
adc
mov
push
adc
xor
outsb
cld
jle
dec
push
dec
ds
lret
out
negl
cmc
pop
je
or
ds
les
call
lea
mov
inc
mov
pop
pop
or
jecxz
dec
inc
sbb
or
clc
imul
cld
imul
adc
popa
and
and
cli
pop
ror
ja
arpl
pop
ja
inc
xchg
inc
int
nop
in
sub
ficoml
cld
mov
push
push
movsb
nop
and
add
sarl
pop
mov
xor
mov
sbbb
xchg
push
sub
sarb
add
orl
jmp
xor
and
dec
push
xchg
jo
pop
sbb
enter
pop
add
pop
inc
sbb
js
icebp
dec
mov
ds
add
pushf
into
dec
adc
ss
sbb
leave
push
push
ret
jecxz
xor
je
pop
adc
cwtl
mov
arpl
int3
mov
mov
add
xchg
repnz
sti
movsl
cmp
inc
cmpsb
adc
jl
enter
pushl
or
loopne
jo
rorl
xchg
xchg
movsl
fsts
xor
aam
mov
push
and
or
hlt
mov
mov
insb
nop
es
stos
xchg
rorl
aaa
jmp
sub
add
mov
fildll
sbb
push
lret
inc
mov
sub
mov
mov
nop
dec
imul
dec
dec
std
mov
js
call
cli
cmpb
jl
cwtl
test
sbb
mov
sub
stos
mov
clc
pop
mov
andb
out
mov
imul
push
mov
jnp
cwtl
nop
shrb
xor
js
mov
or
in
xor
or
dec
or
cltd
sub
and
and
inc
sbbl
jge
insb
pusha
lea
scas
or
or
fimull
fmull
rcrl
pusha
in
lock
or
cmpsb
imul
lock
push
add
call
pushl
adc
or
out
pop
jnp
push
mov
fs
mov
loope
xchg
or
cs
mov
pop
or
add
lcall
cmc
aas
or
push
push
popa
ficoms
add
cmp
sbb
xchg
lods
std
add
test
add
push
xor
das
mov
push
cld
push
mov
sub
or
test
push
test
jbe
pop
aaa
ss
mov
add
push
addr16
fwait
cmp
xor
or
mov
je
push
jge
inc
call
das
sbb
and
std
push
add
mov
es
lock
fnsave
xchg
test
ret
or
sub
lea
push
jmp
pop
xor
jmp
daa
jl
sbbl
jne
aaa
cmp
mov
xchg
add
cwtl
test
ja
les
jle
pop
sbb
mov
popa
mov
sbb
pop
negl
push
mov
push
pop
pop
rcll
xor
adc
lock
rclb
push
in
arpl
or
jnp
mov
pusha
in
testb
dec
inc
or
sub
xchg
insl
adc
or
pop
mov
cmpl
inc
mov
les
cwtl
inc
push
into
push
sbb
aas
cmp
aaa
insb
adc
imul
cltd
push
add
ja
dec
sbb
movlps
push
insl
punpckhbw
jbe
sbb
cs
lret
insl
or
fsub
xor
cmpsl
cwtl
jns
xor
mov
add
push
cld
sbb
enter
scas
cmpl
incl
jb
inc
pop
mov
mov
pusha
dec
clc
mov
cmp
adc
xor
loop
std
fisttps
cmp
jne
jmp
orl
mov
nop
test
cmp
sti
daa
lods
pop
mov
mov
mov
rorb
add
add
cmpsl
add
pop
test
mov
xor
ret
sub
gs
xor
aam
inc
cld
idivl
neg
cmp
iret
std
fdivrl
mov
pop
sbb
push
fsubl
pop
clc
cmpsl
sbb
add
incb
pop
adc
stos
add
jecxz
add
sahf
mov
add
pop
or
cmp
sbbl
pusha
mov
cmp
mov
mov
in
jp
sub
pop
adc
xor
gs
jmp
pop
pop
mov
test
mov
jb
rclb
jmp
push
jbe
mov
fisttps
and
xchg
sbbb
repz
sub
mov
out
sbb
les
sbb
call
nop/reserved
dec
pop
clc
jmp
int
shlb
add
or
adc
dec
sub
jmp
dec
clc
push
clc
or
sti
jge
push
jl
or
add
test
je
sub
sub
pop
std
call
pop
std
cmp
pushf
es
push
dec
fcompl
insl
push
nop
test
cmpl
sub
jo
adc
sub
inc
popa
inc
mov
xchg
lret
dec
xchg
add
inc
push
nop
push
pop
jne
aam
sahf
xchg
fisttpll
sbb
cmp
or
sub
cwtl
inc
int3
push
sbb
inc
push
add
dec
fadd
sub
mov
adc
sbb
lea
push
addb
sbb
add
push
lret
adc
mov
xor
je
sar
and
les
dec
ret
mov
mov
arpl
mov
pop
fsubl
jo
xor
daa
ret
add
push
test
loopne
sbb
add
test
pop
mov
shl
dec
repnz
jne
fisttpll
loopew
or
aas
mov
cmpsb
mov
ss
insl
aad
push
insb
stos
push
xor
sub
sub
sbb
mov
data16
add
add
pop
lock
and
inc
adc
mov
xchg
int
or
push
dec
loop
loopne
adc
lret
cltd
cmp
xlat
or
and
inc
shl
inc
push
and
and
pushl
add
insb
dec
call
mov
std
je
or
je
bound
orl
icebp
test
jl
stc
adc
cmp
sbb
pop
divb
loop
and
lahf
minps
mov
xor
cld
mov
jno
insl
sti
inc
loop
xchg
dec
pop
pop
test
mov
fwait
add
push
dec
sbb
cwtl
dec
jl
pop
lods
lret
fidivl
inc
xor
push
push
fisttpl
into
add
mov
lds
ss
divb
incb
std
fnstenv
sbb
jl
mov
sbb
imul
orb
jo
pop
outsl
inc
idivb
push
pop
lea
mov
cmpb
sub
pop
add
movsbl
mov
ds
test
mov
add
pop
sbb
xor
xchg
inc
repz
adc
cld
cmpb
je
shl
add
jae
repnz
mov
sub
and
sub
lret
or
and
and
pop
inc
enter
repnz
jns
push
sub
mov
xchg
or
pop
push
test
adc
enter
lods
add
push
les
pop
adc
fdivrs
sbb
leave
add
int3
cmpl
js
xor
pop
push
cwtl
dec
inc
mov
push
and
jmp
jne
mov
adc
push
scas
dec
add
mov
leave
push
inc
pop
push
push
push
lret
icebp
and
ds
adc
adc
cmpsl
or
loopne
roll
add
decl
loopne
outsl
pusha
bound
cwtl
cmpsb
inc
sub
push
je
and
pop
mov
pop
sarl
icebp
ss
fldl
push
jo
mov
and
push
roll
sub
jnp
or
dec
mov
add
enter
int3
or
clc
dec
pop
or
addl
or
jbe
cmp
sub
cmp
jge
mov
and
and
lea
faddp
push
aas
inc
rcll
cmp
testl
or
movsl
sub
and
xor
xor
mov
xor
les
cld
add
sbb
jmp
mov
or
jl
jmp
cmp
je
inc
push
push
pop
pop
mov
mov
fwait
inc
mov
jle
out
xor
mov
movsb
leave
mov
mov
and
jle
roll
jns
cmpsb
inc
ja
je
dec
cmc
or
in
inc
daa
pop
adc
push
and
pop
push
ficoms
pop
lds
mov
sbb
adc
mov
fidivrl
insb
jl
fdivs
lds
lret
mov
lahf
lret
xor
out
das
lods
pusha
adcl
mov
int3
mov
std
mov
leave
mov
jo
call
adc
ss
es
pop
lea
pop
mov
lock
lret
pop
pushw
dec
lods
sub
push
mov
das
ret
jae
insb
and
lea
xchg
sub
loopne
out
in
lea
push
arpl
out
adc
movsb
sbb
pop
xor
mov
xor
mov
in
and
ret
mov
pop
stos
insb
inc
stc
inc
testl
jl
cli
xchg
sub
popf
adc
repz
inc
lods
clc
outsl
in
adc
cmp
jns
leave
sbb
inc
insl
sbb
into
adc
stos
xor
mov
xor
xchg
xchg
jne
je
or
sbb
mov
add
push
cld
loope
sarb
out
xor
sub
add
testl
jmp
lea
or
xchg
ret
push
push
lea
cmpb
je
mov
sti
ror
cmp
or
push
push
cmp
pop
ja
enter
out
in
push
popa
lcall
sbb
add
sarb
push
pop
sbbb
xchg
and
jge
and
dec
insl
mov
add
cmp
cltd
xlat
mov
xor
xchg
push
push
mov
cmp
jl
mov
mov
pop
int
mov
enter
leave
add
xor
movsl
iret
xor
add
inc
adc
arpl
repnz
repnz
or
and
sub
add
mov
add
pop
cvtps2pi
mov
daa
add
nop
stos
xchg
cmpsb
jge
aas
push
nop
jbe
ret
test
push
sti
cs
jne
adc
adc
push
xor
test
lea
inc
sub
call
sub
mov
jnp
cmp
sarb
outsl
jo
jg
jle
push
push
mov
mov
sbb
hlt
add
jno
mov
fsubp
pop
add
sahf
adc
test
lea
inc
icebp
adc
rol
push
pusha
inc
mov
and
mov
pop
pop
push
shl
sar
dec
hlt
push
push
pushl
hlt
adc
in
xor
inc
push
jae
jp
movsl
xorl
pop
in
mov
insb
sbb
popa
sbb
pop
xchg
adc
adc
inc
inc
bound
mov
clc
pop
int3
sbb
xor
mov
adcl
lea
cmpsl
push
xchg
mov
and
jno
jbe
pop
pop
ljmp
push
fimull
nop
subl
xchg
or
lods
popf
testb
ss
push
imul
ljmp
pop
push
sbb
dec
fists
sbb
mov
sbb
mov
adc
jle
push
dec
xchg
pop
dec
imul
movsb
jle
add
pop
mov
fdivrs
pusha
add
mov
inc
addr16
adc
test
out
or
push
xchg
or
iret
or
xor
or
push
sbb
test
es
out
movsb
nop
inc
int
mov
push
mov
popa
popa
add
test
sbb
pop
jl
filds
or
lret
mov
jns
clc
add
add
mov
out
out
jbe
iret
and
push
mov
sub
cs
in
js
dec
je
enter
insb
test
push
jns
orb
or
mov
repnz
or
sahf
pop
clc
dec
xor
add
adc
xor
mov
and
adc
add
or
and
add
call
stc
add
push
in
pushf
or
stc
add
push
in
punpckhbw
add
push
in
and
dec
adc
test
push
or
pop
sbb
and
jnp
sub
repnz
fisttpl
in
xchg
or
rol
bnd
xchg
push
sbb
mov
jl
pop
movsb
or
xchg
ss
pop
mov
sbb
inc
or
and
in
push
push
xor
xor
adc
fs
sahf
dec
push
stos
dec
in
inc
cs
dec
dec
sbb
fs
xor
sbb
mov
cld
les
shll
inc
xchg
sbb
in
inc
dec
enter
inc
sub
mov
mov
or
and
repnz
and
xor
int3
das
les
in
and
inc
ror
in
inc
mov
inc
jbe,pn
daa
inc
inc
cs
mov
fildl
nop
dec
enter
xchg
jb
out
test
and
xor
js
je
xor
jp
dec
xor
and
in
sahf
pop
fildl
insb
ds
jne
les
pop
push
push
popa
bound
shll
mov
xor
sahf
mov
lea
jb
push
lods
cmpl
mov
and
mov
arpl
or
inc
cs
cmp
aas
sub
inc
imul
fs
inc
les
mov
cld
ds
test
sbb
xchg
adc
mov
xorb
pop
xor
insb
or
fs
fs
cmc
push
push
cmp
pop
sbb
sub
and
fs
xor
and
lock
sub
xor
and
inc
xchg
mov
mov
aaa
jo
in
add
jns
bound
sub
inc
cs
push
and
sbb
adc
pop
jb
fnstenv
ret
mov
movsb
push
test
pusha
add
es
ret
enter
ret
stos
enter
in
fdivl
sbbl
repnz
or
out
xor
cmpb
pop
xchg
or
and
js
pop
enter
test
into
xor
and
shlb
je
pop
dec
pop
enter
das
movsb
or
in
aam
inc
cs
xchg
nop
xchg
js
nop
and
xor
popa
mov
and
jl
or
jns
sub
sbbl
push
pop
fs
sub
ficoml
push
mov
ljmp
movsl
sub
add
ljmp
mov
mov
imul
icebp
es
repz
mov
lcall
and
push
lahf
test
popf
jp
sbb
roll
inc
xchg
and
cld
adc
inc
shlb
std
sahf
pushf
in
pop
adc
repnz
cmp
and
stc
rol
psubq
jle
sbb
jle
test
pop
adc
xchg
pop
sarl
dec
and
mov
cmp
xor
add
lock
aam
push
adc
aad
out
or
orl
in
sbb
addr16
dec
and
dec
mov
mov
and
in
sbb
sti
and
sbb
mov
adc
adc
add
adc
and
or
xchg
stos
in
mov
psubb
clc
je
icebp
out
pop
adc
inc
inc
arpl
rcrb
cmp
pop
fnstsw
jne
jno
mov
push
pop
outsl
push
stos
add
adc
out
jne
daa
sub
dec
shrb
repnz
xlat
clc
mov
pop
int3
add
xchg
das
lock
sub
pop
dec
inc
imul
orl
fdivl
cmp
popf
movsb
add
outsl
xchg
or
mov
in
aad
push
aam
push
xchg
inc
ror
push
xlat
scas
dec
adc
jb
mov
add
lds
cwtl
pop
cmp
decl
pop
cmp
push
cmpsl
cmpsl
je
jne
adc
inc
sti
dec
cmp
je
inc
jmp
sub
ss
nop
add
and
addb
and
push
ja
push
jb
jbe
or
mov
xchg
add
dec
xchg
add
or
mov
inc
push
enter
and
and
nop
sbb
and
push
or
push
jle
sbbl
and
sub
jb
sub
mov
adc
mov
and
call
cli
pop
in
nop
inc
cs
mov
enter
int3
in
jb
sbbl
in
test
mov
mov
nop
inc
cs
lods
pop
sbb
inc
push
test
mov
into
sbb
mov
jns
adcl
or
mov
cmp
addl
or
les
inc
je
lahf
sbb
pop
mov
jb
gs
pusha
dec
inc
dec
pop
enter
push
leave
or
in
dec
mov
enter
aas
js
fmul
gs
fistpll
jg
adc
nop
mov
and
adc
in
push
jo
sub
jns
and
mov
adc
sub
or
jb
daa
or
adc
in
pusha
push
cld
mov
and
pop
or
inc
inc
fsubrl
pop
enter
fadds
or
scas
lods
popa
nop
jl
dec
ficoms
movsb
mov
test
sub
and
aaa
pop
mov
and
or
jb
mov
xchg
pop
xor
sahf
xchg
lds
inc
push
mov
arpl
pop
jno
xchg
pop
loop
add
or
shlb
xor
shlb
sbb
dec
pusha
xchg
scas
pop
mov
add
lods
mov
xor
lret
out
bound
subl
dec
leave
mov
int
mov
les
in
sbb
mov
cmp
addb
and
int3
mov
dec
insb
xor
xlat
push
jbe
daa
pop
cmp
xor
push
push
lcall
and
dec
sbb
mov
adc
test
add
mov
hlt
jne
add
jnp
hlt
and
popa
push
cmpsb
or
nop
xchg
pop
mov
add
ret
pop
loop
mov
mov
inc
dec
mov
inc
pop
inc
lock
xchg
mov
and
sbb
pusha
push
sbb
or
andl
or
loope
add
call
adc
aad
inc
sub
fidivl
mov
dec
xchg
insl
insb
sbb
jns
ljmp
ja
pop
les
or
push
push
or
push
or
fdivrs
sti
loop
or
jns
push
push
fbld
add
mov
mov
pusha
insl
js
addr16
ficomps
hlt
mov
push
mov
dec
add
push
adc
pushf
mov
sbb
and
push
aaa
sub
adc
jle
mov
jmp
xor
out
adc
dec
arpl
js
cmp
test
test
repz
xchg
in
cmp
fmulp
and
adc
sbb
mov
or
insb
adc
shll
and
leave
mov
mov
adc
inc
xchg
mov
aam
in
jb
cmc
mov
sub
rorb
jl
scas
dec
popa
pop
test
movsb
fadd
outsb
xor
mov
push
shll
pop
cld
cmc
imul
or
adc
aaa
notl
cmp
aaa
sbb
dec
orb
fsubp
jl
jnp
dec
mov
fldl
inc
insb
jbe
mov
cmpl
in
inc
cs
cli
inc
stc
adc
sahf
pop
and
push
cli
add
clc
popf
dec
dec
xchg
arpl
inc
in
jo
adc
lret
in
mov
xor
sub
cld
aas
push
dec
ljmp
mov
mov
xchg
jns
mov
enter
wrmsr
mov
adc
inc
sbb
rorl
or
test
ud2
cmp
aad
xorl
andl
push
xchg
js
mov
sbb
aaa
outsl
mov
clc
add
push
pop
adc
push
cmp
jbe
lea
jae
repz
xorb
sets
mov
xchg
dec
fisttpll
pop
inc
inc
push
mov
push
add
popf
adc
sbb
mov
jne
jmp
mov
enter
leave
cmp
xchg
in
iret
test
bound
and
lock
push
mov
and
aas
and
xor
or
adc
push
sahf
add
imul
data16
loope
mov
dec
sub
mov
mov
add
pop
rol
inc
push
dec
jmp
inc
xorb
mov
clc
or
add
outsb
inc
push
mov
fldt
ret
mov
loopne
push
data16
xor
inc
mov
mov
pop
mov
jle
add
pop
inc
popa
push
fs
cmp
mov
sbb
iret
jl
cwtl
push
mov
push
in
insb
nop
dec
sub
lahf
je
pushf
adc
out
cli
inc
rcrl
ss
leave
jnp
leave
adc
hlt
dec
int3
test
sub
sti
stos
jg
jne
push
jmp
mov
popf
insb
loope
add
cmp
vpcomb
cmpsb
lea
xchg
divl
jl
push
test
push
sbb
sti
mov
cmp
xor
test
mov
xor
mov
cwtl
pusha
fnstenv
pop
push
cwtl
lods
popf
js
adc
jne
movsb
stos
in
add
add
pop
jo
lea
mov
rcl
cltd
jp
mov
fwait
jns
and
adc
dec
cwtl
cmp
inc
pusha
addb
sub
mov
das
adc
add
cmpb
jae
stos
jnp
imul
jnp
loope
xlat
xor
inc
push
jb
sub
sub
test
add
repz
add
add
insb
jge
cmc
push
push
loope
push
in
cld
pop
sbb
inc
ret
push
outsl
pop
sub
cmp
sti
adc
sti
jnp
fldenv
mov
cld
sub
pop
nop
out
fs
add
nop
pop
mov
mov
pop
pusha
int3
mov
inc
inc
and
cld
add
icebp
pop
fdiv
in
cld
add
mov
xchg
mov
in
xchg
sahf
pusha
inc
sub
repnz
loopne
rolb
and
pop
popa
clc
fdiv
cmp
repz
cmp
sub
enter
or
mov
nop
and
and
out
mov
in
xchg
in
cmp
icebp
push
mov
push
xchg
or
lock
pop
jne
icebp
cmova
sbb
mov
rolb
adc
dec
xchg
or
pop
push
add
das
mov
repnz
lret
mov
jno
lock
repnz
jecxz
or
or
sbb
pop
test
xor
nop
inc
sbb
adc
sub
outsl
lods
jb
cmp
mov
lock
outsl
xchg
inc
lods
bnd
sub
pop
push
mov
sub
in
push
les
or
out
mov
pusha
adcb
pop
pusha
pop
mov
int3
and
xchg
mov
rcll
ret
dec
xorb
push
jns
in
int
sub
and
cmpsb
in
sbb
sbb
out
or
adc
nop
into
fwait
adc
xorb
xchg
fimuls
jns
psubd
inc
pop
enter
in
and
lods
loop
in
int
or
fs
sbb
clc
sbb
jb
and
nop
loop
or
repnz
add
leave
shlb
cmp
xor
mov
and
repnz
and
js
jecxz
jmp
icebp
gs
jmp
aas
push
ljmp
jg
adc
orl
push
cmp
stos
sub
mov
ret
sbbb
pop
sbb
inc
das
sub
icebp
shr
or
subl
mov
jmp
out
jmp
stc
and
movsb
imul
in
movsb
xlat
xor
mov
rcrb
xchg
mov
mov
shll
enter
lret
in
or
mov
stc
repnz
dec
and
cmp
cltd
mov
pop
push
adc
pushf
xchg
inc
dec
pop
sbb
ja
adc
sbb
cmp
dec
push
jl
pop
out
mov
rep
xor
jmp
mov
je
mov
or
sahf
in
test
xor
popf
inc
jmp
into
xor
jmp
cmp
xchg
mov
cmp
in
rclb
jg
adc
or
scas
sbb
psraw
cmp
jne
test
jo
in
mov
popf
dec
and
mov
add
rol
dec
mov
add
xlat
and
cld
pushaw
loopne
hlt
popf
std
in
inc
mov
std
and
loope
pop
ret
imul
xor
and
ds
rep
push
push
test
pop
add
push
jmp
dec
xchg
nop
mov
pop
gs
js
fisubrs
adc
subl
cmc
inc
add
fstpt
or
shrb
mov
popa
mov
nop
mov
ret
push
jecxz
repnz
lcall
add
mov
es
inc
mov
jmp
leave
and
mov
cmp
test
enter
fcmovnu
adc
cwtl
adc
in
vmovaps
test
stc
or
mov
mov
mov
inc
call
add
push
loopne
xchg
sub
inc
fidivs
or
or
lock
loopne
shrl
je
gs
inc
adc
dec
xchg
mov
cmp
movb
fmulp
pop
test
js
push
jbe
dec
xchg
inc
xchg
pop
jnp
mov
pop
add
flds
adc
pop
or
push
and
dec
in
jmp
push
int
jmp
leave
add
or
inc
dec
stc
push
pop
mov
jp
xor
and
aas
mov
push
sub
sbbb
push
or
mov
push
int
aaa
scas
fstpl
sbb
ret
test
je
lcall
pop
repnz
mov
fs
shll
in
mov
sbb
sub
mov
sub
mov
sub
sub
inc
cwtl
arpl
jnp
mov
dec
cmp
mov
cmp
mov
adc
inc
jb
push
push
pop
adc
inc
fisttpl
mov
mov
and
and
sbb
sbb
dec
push
jbe
stos
test
pop
xchg
or
adc
adc
std
rcl
nop
imul
leave
hlt
push
push
and
inc
pop
dec
popa
lods
loop
push
lds
je
push
imul
push
pop
add
pop
push
nop
inc
xor
inc
xor
movsb
push
mov
repz
cmc
sub
and
mov
cwtl
xchg
sub
and
mov
scas
inc
ret
and
clc
mov
or
mov
pushf
mov
fcoms
cmp
leave
mov
push
fistl
or
pop
das
add
fnstenv
movsb
push
je
prefetch
or
aam
sbb
xchg
lds
test
dec
sbb
inc
mull
inc
sbb
movsb
and
sbb
pushf
push
mov
lods
ds
xchg
push
or
add
inc
sti
push
sub
sub
or
and
adc
inc
pusha
xchg
std
movsb
lahf
out
jl
mov
je
dec
test
add
lock
mov
jns
sbb
jns
mov
cmpsl
in
mov
mov
mov
push
test
loopne
dec
xchg
xor
cmp
jo
imul
pop
lock
orb
ficoms
or
js
xlat
and
pop
adcl
pop
jno
sbb
test
push
arpl
shl
jge
xor
or
inc
adc
xor
ljmp
add
test
push
push
es
imul
nop
inc
ds
in
push
mov
insl
sbb
add
scas
pop
sub
adc
sbb
push
test
mov
addr16
pop
bound
xchg
pop
push
and
jge
push
mov
xor
jno
mov
mov
add
mov
and
sub
out
and
jbe
je
cmp
pop
pop
call
sahf
cld
lea
out
call
and
gs
adc
mov
push
aam
out
sahf
in
jb
mov
xchg
dec
movsb
mov
shlb
sub
push
mov
in
imul
pop
jbe
dec
mov
test
shrb
imul
stos
add
mov
cmp
xchg
cmpsl
je
add
cmp
push
or
scas
sub
jne
pop
add
mov
mov
add
adc
adcl
mov
add
add
sub
repnz
hlt
scas
lds
adc
xchg
jo
and
and
xor
scas
jno
mov
roll
fcompl
ret
push
sbb
fcomip
jmp
push
dec
mov
lea
xor
rcrb
bound
fdivs
je
dec
and
inc
es
pop
mov
aam
mov
mov
jns
mov
adc
and
xor
fcom
push
imul
xchg
mov
cmp
mov
les
add
icebp
add
inc
or
les
add
pop
mov
add
cwtl
xor
pop
rolb
mov
mov
push
lods
outsl
loop
or
dec
lahf
dec
adc
out
adc
adc
sbb
inc
jae
cltd
lea
jmp
mov
mov
lds
adc
pop
push
jb
xor
lods
insl
push
add
jb
pop
cmpsb
cltd
adc
adc
gs
mov
dec
hlt
dec
push
daa
or
push
js
xor
push
pop
enter
fisttpll
sbb
push
in
lods
mov
and
fisubs
push
or
ret
mov
test
add
cmp
jne
mov
mov
rep
jno
cmc
pop
mov
mov
dec
cmp
push
adc
mov
push
mov
mov
sbb
nop
sti
jl
add
jnp
je
mov
xchg
bound
fcoms
pop
mov
out
or
pushf
xor
js
push
mov
xchg
sbb
sbb
jg
push
popa
xchg
inc
xchg
sqrtps
testb
cmp
jl
iret
sub
pushf
xchg
mov
adc
push
loope
push
xchg
popl
inc
or
arpl
inc
rorl
sbb
push
rcll
addl
enter
cmp
sub
add
mov
push
add
sbb
jbe
mov
add
in
mov
iret
inc
fsub
and
fbstp
adc
push
fsubrl
rolb
add
push
jns
in
stos
test
mov
jno
xor
orl
jmp
mov
arpl
push
inc
lcall
cmp
mov
mov
pusha
enter
nop
out
in
inc
jo
push
add
mov
mov
das
jns
adc
enter
jmp
dec
inc
in
in
pushf
inc
xor
xor
xchg
shrb
add
cwtl
rcrb
nop
movsb
lret
add
dec
jb
repnz
mov
dec
arpl
sub
test
or
adc
xor
jbe
pusha
sub
rorl
in
mov
cs
mov
add
add
daa
add
out
dec
iret
or
lret
call
mov
xchg
repnz
popa
add
adc
pop
in
or
add
out
cwtl
repnz
dec
and
stos
lods
repnz
push
jmp
pop
cmp
adc
shl
dec
inc
jecxz
sbb
inc
js
inc
lcall
inc
push
push
adcl
xchg
pop
inc
bound
sbb
imul
cmp
insl
shrb
adc
lock
repz
and
adc
inc
xchg
adc
inc
mov
ret
jno
bound
shlb
inc
mov
or
jmp
movsb
or
cmp
insb
mov
inc
mov
sbb
xor
push
stos
lock
stos
sbb
nop
mov
jmp
jb
push
or
mov
add
out
jb
shrb
jmp
mov
mov
add
movsb
pop
sub
mov
cmpl
and
cld
or
pop
test
or
shlb
ja
cwtl
and
sbb
cmp
add
scas
xchg
mov
or
mov
or
or
inc
cmp
jae
adc
nop
inc
push
aam
inc
leave
sbb
pop
bound
leave
mov
ret
test
adc
pop
sub
in
in
lods
std
lock
push
rorl
add
cmp
cmp
push
mov
push
inc
cmpsl
ljmp
add
sti
sbb
call
mov
shrb
push
adc
test
std
jl
ss
push
enter
std
mov
cwtl
sbb
inc
nop
push
je
sub
subb
add
jae
adc
mov
add
sub
add
aad
es
mov
dec
xchg
mov
stos
scas
incb
mov
mov
push
push
sbb
and
scas
adc
xchg
popf
xor
cmp
enter
in
sub
imul
rcrb
jae
gs
sbb
imulb
add
inc
cs
daa
adc
cs
bound
xchg
je
hlt
cmpsl
pop
adc
sti
in
add
cld
add
sub
daa
loop
inc
mov
leave
and
pop
jb
les
nop
add
inc
push
push
cmpsl
ds
scas
push
js
in
pop
or
jne
cmpsl
sbb
add
add
push
jnp
and
or
adc
add
stos
cmpsl
mov
adc
addr16
and
pop
pop
lds
push
in
inc
into
inc
or
cmpsb
xchg
inc
add
mov
out
xchg
push
push
mov
fmull
jmp
sub
push
push
xchg
fwait
lea
stos
jmp
xchg
sub
and
sbb
pop
jp
test
sbb
call
hlt
stos
pop
push
fmull
int3
or
arpl
sbb
das
cs
jmp
fs
scas
nop
pop
mov
xchg
bound
cmpsb
fs
and
mov
mov
sub
mov
xchg
pushf
bound
mov
andb
sbb
bound
adc
push
les
inc
push
leave
and
cmpsb
adc
xchg
cmpsb
imul
adc
inc
sub
push
mov
push
push
jl
test
and
loope
push
and
loope
lea
movsl
sbb
add
add
dec
mov
push
sub
inc
and
add
rorb
loop
or
jbe
push
mov
adc
je
loop
ss
notb
add
sbb
and
test
movsl
aaa
and
movsb
sbb
or
mov
in
adc
inc
cmp
mov
mov
jne
iret
ds
push
inc
sbb
movsl
in
adc
call
pop
xchg
dec
or
leave
push
mov
jl
daa
push
or
clc
add
push
fildl
pop
sub
pushl
test
inc
sub
pop
jb
scas
push
leave
rcr
add
movsb
out
rcrl
mov
sbb
cmpb
and
leave
jg
push
popf
push
rorl
movsb
add
sbbb
add
jg
andl
andb
test
push
mov
pusha
cmp
xchg
daa
xchg
add
cld
mov
mov
jbe
les
cwtl
add
mov
or
push
sahf
jge
mov
or
mov
leave
mov
enter
push
push
inc
les
sbb
insl
push
sbb
sbb
sbb
rolb
aas
inc
push
rol
pusha
inc
dec
mov
xlat
movsb
or
fs
call
shr
xchg
xchg
jmp
pushl
pop
dec
sub
cmp
pop
loope
lcall
cmp
jl
inc
fmuls
sti
pop
cwtl
jmp
sub
mov
xchg
and
jnp
pop
imul
cmp
and
jo
xchg
pop
rcll
pop
insl
push
lea
out
push
imulb
mov
punpckhdq
lods
add
inc
adc
popa
mov
popf
aad
fimuls
je
test
ret
ret
push
jmp
inc
loope
ficomps
adc
sbb
push
ret
jle
in
inc
ret
fisubs
pop
pop
sbb
mov
jae
cli
xchg
mov
shll
sbb
inc
xor
inc
cmp
pop
insb
out
xor
movsb
inc
sub
int3
ja
scas
popa
dec
mov
fists
push
add
mov
loop
in
lcall
add
jae
cmpsl
cwtl
xchg
jbe
cmp
push
add
es
lock
lock
and
inc
or
lods
mov
push
and
pop
cwtl
stos
or
pop
leave
add
cmpsl
test
or
dec
mov
ror
fwait
enter
jb
pop
in
sti
pop
mov
in
sti
enter
sbb
mov
mov
fmull
leave
push
inc
inc
scas
push
mov
sti
mov
je
enter
pop
js
stos
dec
inc
inc
lret
imul
jo
sti
add
std
pop
leave
inc
mov
xchg
rcll
ret
pop
out
push
mov
mov
dec
dec
andl
or
mov
xchg
and
adc
mov
divb
in
adc
int3
dec
xor
mov
push
inc
cmp
fcmovbe
and
addr16
pop
and
jge
orl
sarb
test
inc
cmp
jl
andb
lret
mov
lods
cmp
adc
int3
or
movsl
cmpsb
push
pop
test
jne
or
andl
add
aad
adc
and
pop
leave
ret
inc
jecxz
lods
mov
sbb
lods
mov
stos
jmp
adc
imul
and
push
and
lahf
pop
jl
mov
outsb
adc
pop
mov
inc
cmp
pop
jne
mov
cmp
push
inc
and
add
adc
mov
xor
lock
add
push
unpcklps
push
testl
lock
jg
lods
or
lock
jbe
repz
into
jne
call
in
and
add
mov
jmp
dec
fadd
sub
cmp
adc
rclb
and
outsl
xor
push
lods
popl
idivl
mov
js
add
adc
xchg
pop
rorl
cmpsb
dec
adc
mov
or
jo
incb
sbb
add
inc
push
jl
add
call
adc
lcall
pop
pop
ret
pop
dec
push
jp
cmp
loop
shlb
xor
or
mov
popa
movsb
shl
cmp
out
int3
jnp
and
push
addl
inc
dec
loope
pop
imul
aaa
loopne
mov
jne
test
xor
cmp
fwait
dec
jmp
stos
mov
sbb
jne
xor
in
push
js
xchg
xor
outsl
inc
daa
js
fwait
mov
jns
imul
fadd
andl
xor
rcr
jnp
int
or
gs
jge
int3
ret
inc
jg
sbb
push
inc
inc
inc
mov
and
cld
xlat
add
add
cmp
je
ja
ret
pushl
aaa
cmp
or
or
mov
das
nop
mov
sub
add
es
sub
clc
inc
pop
add
adc
out
xor
jmp
or
lea
inc
cmpsb
inc
mov
test
test
mov
cmp
jbe
test
xchg
and
out
pop
push
push
lods
xchg
xchg
aas
and
push
mov
xchg
test
popa
imul
push
pop
xor
add
adc
sbb
xchg
cmp
mov
imul
sbb
xchg
adc
push
sbb
dec
mov
movsb
dec
out
call
push
or
sub
add
add
fstpt
sbb
seto
call
into
cmp
test
inc
push
test
clc
dec
mov
add
and
mov
mov
inc
scas
push
dec
clc
ret
neg
lock
iret
jae
fdiv
dec
iret
mov
sbbl
jnp
sbb
pusha
cs
cmp
sub
orl
sbb
xor
mov
sub
and
xor
aad
addb
cmpw
pop
jne
pop
inc
popa
jo
scas
push
icebp
repnz
enter
hlt
int
mov
inc
idivb
adc
push
mov
subb
mov
jae
cmp
out
ror
pop
mov
jb
stos
movsb
int
push
jmp
in
add
and
dec
push
scas
fs
sahf
dec
adc
xchg
or
push
loopne
adc
or
lock
or
orl
and
adcb
dec
popa
enter
cmp
mov
adc
loopne
repnz
shlb
or
pop
add
pop
xchg
mov
dec
loope
rcll
jmp
loopne
std
or
add
xor
jb
sub
push
sub
das
leave
mov
pmulhw
adc
frstor
cmp
lcall
fldt
pusha
out
jmp
mov
nop
loopne
push
testl
fiadds
push
xchg
leave
and
pop
rcll
ljmp
adc
mov
mov
aas
pop
mov
dec
sahf
ss
push
roll
enter
sbb
pusha
pushf
dec
cld
sub
mov
cmp
push
ret
or
mov
or
cmp
test
insl
push
add
mov
adc
sbb
popf
pusha
shl
dec
or
cmp
xchg
sub
sub
fsts
mov
mov
push
test
mov
test
inc
or
loope
testl
ret
je
dec
dec
jb
aam
adc
ja
mov
jnp
lods
xlat
or
jmp
push
and
add
inc
adc
sbb
xor
add
fisubs
xor
adc
movsl
pop
xor
push
lods
mov
je
pop
pop
adc
jge
add
clc
call
sbb
or
ds
test
aad
jge
jbe
test
sar
ret
inc
push
push
outsl
shlb
bound
inc
add
xchg
sbb
mov
adc
enter
add
cmp
cmp
xlat
sub
jno
xlat
cmpl
aas
test
or
push
cmp
mov
inc
push
add
mov
lahf
cltd
add
fists
jecxz
mov
push
mov
icebp
or
pop
xchg
inc
test
or
test
fistpl
push
pop
or
xchg
push
xchg
rol
jg
adc
mov
add
add
pop
mov
out
data16
and
add
in
jb
jecxz
das
xlat
cmc
sub
sub
push
mov
outsb
or
inc
in
dec
hlt
dec
inc
jne
cmpsl
test
les
push
inc
add
or
inc
rol
dec
shl
arpl
leave
ds
dec
std
xor
pop
and
push
sbb
sub
mov
aas
ret
aad
or
test
mov
inc
inc
mov
cmp
jb
push
jno
wrmsr
movsb
ja
jle
fldcw
test
dec
or
jns
aaa
scas
lcall
lahf
clc
insl
je
or
and
cmp
fs
test
cmp
push
je
fs
sbb
mov
jecxz
and
sbb
sbb
pop
add
push
cmp
je
cmp
or
jl
jmp
cmp
jne
mov
bnd
shll
pop
stc
pop
cli
sti
xchg
les
cld
or
jmp
mov
test
or
jg
fsubrs
or
inc
lds
cmp
add
es
xchg
and
inc
shr
sub
pop
mov
add
xorl
add
push
mov
ja
xlat
rolb
jmp
adc
ds
or
or
jae
mov
sahf
or
mov
or
mov
leave
push
pop
add
xlat
test
inc
jnp
sarl
shlb
sub
xchg
cmp
mov
fsubr
int3
xor
and
inc
jns
pop
repz
sbb
aaa
adc
add
gs
fsts
sub
push
jnp
clc
outsb
fcomps
aaa
je
jbe
pop
push
mov
push
and
loopne
adc
add
stos
popa
inc
dec
xor
daa
les
adc
dec
cmp
repz
add
push
dec
adc
add
icebp
ret
dec
stos
pop
ds
mov
push
push
sub
jecxz
pop
cmp
sbb
push
xor
add
add
ret
xor
pop
mov
notl
pusha
or
orl
jecxz
pop
pop
testb
jne
inc
mov
loop
shrl
shr
push
lret
js
push
adc
push
in
sti
testl
jne
inc
mov
jbe
mov
shr
jo
fisttps
cmp
or
inc
cmove
push
ret
push
cmpb
pop
dec
aas
xor
clc
aad
mov
sti
scas
mov
sbb
add
xor
xchg
fwait
or
mov
ret
cmp
stos
in
mov
and
shlb
mov
or
lock
cmp
and
imul
mov
xchg
icebp
lahf
sbbl
popa
push
or
mov
xchg
ja
cmp
lret
mov
mov
jb
mov
and
es
sbb
syscall
pop
rol
mov
dec
xchg
negl
lea
xchg
add
lods
ljmp
sbb
or
push
int
cs
andb
pop
adc
xchg
ret
add
xchg
fiaddl
loope
xchg
jns
in
bound
sar
adc
scas
dec
mov
or
and
cwtl
dec
mov
push
dec
aam
out
and
xor
cmp
cs
jnp
lock
fucomip
repz
push
imul
xchg
icebp
inc
lea
imull
pop
sub
sahf
xor
xor
lcall
inc
push
mov
fcomps
or
or
leave
shlb
hlt
inc
dec
mov
pop
mov
xlat
sbb
loopne
push
iret
mov
lock
inc
adc
add
scas
inc
or
xchg
shll
mov
and
and
or
adc
jne
push
xchg
add
xchg
inc
iret
cmpsl
cwtl
add
adc
addps
adc
shll
mov
cmp
gs
mov
scas
mulps
cmp
je
inc
inc
inc
push
fsubrl
idivl
cmp
and
add
add
xor
int
mov
rcrb
shll
jns
popf
mov
cmp
xor
jecxz
or
adcb
and
mov
dec
push
xor
xor
mov
xchg
mov
mov
cli
test
or
adc
jmp
lret
out
sub
aas
je
pop
dec
cmp
push
cmp
pop
sbb
mov
sbb
inc
mov
dec
inc
mov
sub
inc
push
add
in
inc
mov
pushf
movsb
fsubp
sahf
shr
and
in
mov
xor
mov
inc
or
jne
outsb
mov
push
push
push
mov
inc
mov
and
inc
cmpb
cld
push
inc
push
call
sub
jne
cmp
jle
dec
or
jne
lea
mov
mov
cmp
and
fs
jge
cmp
je
adc
add
decl
fnstcw
fdivrs
mov
dec
jle
jg
xchg
cmp
jne
incl
negl
clc
dec
jno
xchg
jno
adc
stc
cmp
mov
jo
leave
or
test
popa
dec
or
ffreep
aas
jp
push
sub
push
mov
cmp
or
sub
mov
cmpsl
inc
rdpmc
mov
mov
out
pusha
lock
loop
add
push
leave
jecxz
and
adc
shll
pop
bound
jl
imul
push
sub
cmp
pop
iret
jmp
pusha
je
pop
fistpll
lret
mov
add
jp
popa
add
pop
popa
mov
sub
outsl
mov
or
mov
repz
inc
cmp
lcall
add
push
adc
aaa
sbb
testl
out
or
in
cmpsl
mov
mov
or
sub
add
mov
jo
xchg
mov
mov
add
ret
sahf
add
sar
and
add
rolb
movb
inc
jno
mov
aas
add
sub
add
rorl
shl
dec
jne
or
outsb
lret
or
add
stos
je
inc
dec
adc
and
lret
into
push
loop
dec
and
imul
mov
pop
mov
cmp
jbe
popf
jb
and
movl
push
icebp
pop
clc
cmp
jb
movsl
and
dec
push
inc
sarb
roll
enter
jl
test
cmp
fcoml
jle
dec
imul
push
shlb
mov
mov
mov
int3
xchg
ja
or
lods
adc
sub
mov
lea
dec
add
in
ss
mov
cmpsb
nop
inc
inc
inc
inc
lods
mov
jns
mov
or
push
and
sbb
dec
shll
or
cld
push
mov
sar
mov
mov
call
xor
shl
lock
hlt
clc
ret
dec
clc
cld
cld
lea
add
adc
loopne
push
insb
andb
push
nop
cmp
or
push
or
and
cwtl
and
sbb
lea
loopne
ret
lock
cld
jmp
in
cld
out
loopne
or
inc
popa
xchg
pop
stc
sub
push
sahf
mov
inc
pop
nop
clc
push
sbb
inc
push
fildl
xchg
mov
add
dec
lods
mov
scas
in
xchg
aas
inc
out
add
lods
or
dec
push
cli
xor
dec
pop
add
mov
cs
mov
or
push
movsb
lods
adc
cmpsb
imul
sbb
sbb
adc
xor
shll
adc
or
dec
rorl
add
xchg
pop
pop
mov
push
or
sbb
mov
lret
lds
add
pop
push
or
sub
daa
outsl
adc
mov
ret
mov
cmp
jne
or
je
cmp
and
mov
je
lods
cmp
jne
sub
outsb
sbb
add
add
xor
iret
pop
test
add
shl
inc
ret
xchg
ret
mov
into
adc
add
jmp
add
ja
addr16
lret
subl
jmp
pop
les
mov
or
or
pop
inc
out
cmp
cmp
jnp
js
mov
adc
pop
xor
jecxz
loopne
mov
cmp
jle
movzbl
std
or
xchg
fwait
sbb
or
cli
clc
xor
or
inc
jmp
sub
adc
sub
xor
push
xor
xchg
shrl
mov
or
sub
jg
dec
fwait
lea
pusha
jmp
cmp
ret
jne
or
sbb
lods
push
add
pusha
mov
stc
mov
add
nop
addb
movups
cld
xor
mov
pop
inc
and
outsl
imul
mov
xlat
shll
xchg
cmp
je
sub
xor
cmc
pop
lret
lds
dec
and
jne
lea
mov
test
je
adc
add
cmp
jne
mov
bound
mov
in
fimuls
and
mov
push
dec
clc
dec
push
and
sbb
or
fisttpll
je
cmp
cmp
jo
outsl
mov
jmp
or
jge
iret
adc
cmp
add
sbb
js
inc
movsl
or
aam
insb
jo
call
xchg
testl
pop
out
mov
xchg
mov
mov
sbb
js
push
js
push
pop
dec
mov
loopne
push
sbb
push
push
dec
hlt
jg
rcl
push
or
adc
aam
ss
test
add
ljmp
adc
sbb
mov
add
xor
jmp
test
call
and
sbb
stc
sbb
int
jns
or
fsubrs
std
jmp
cld
mov
loop
inc
fs
inc
jbe
mov
pop
out
fst
push
shll
loope
xor
daa
test
adc
aad
jno
lcall
jge
addb
adc
push
cmp
adc
add
adc
xor
dec
fidivs
pop
inc
imul
ret
adc
js
fs
std
cld
fists
cmp
jp
cld
push
adc
pushf
pop
scas
jp
iret
mov
das
jae
sub
les
mov
sub
lds
push
mov
enter
add
invd
ret
inc
cmpw
jns
xchg
cmp
or
mov
and
add
clc
icebp
icebp
gs
pop
jge
pop
inc
ret
cmpl
sti
ja
ja
and
xor
push
fisttpl
je
daa
jae
ficomps
mov
nop
call
cmp
mov
test
pop
dec
xchg
jne
mov
and
and
push
adc
je
inc
mov
sub
rolb
inc
sbb
jmp
xchg
xor
lods
lods
lea
out
movsb
dec
je
push
push
in
js
loop
fcoml
push
je
cwtl
jbe
add
sbb
mov
add
cli
inc
xorl
sbb
cld
and
iret
lds
fcoms
and
dec
daa
push
push
ss
pop
or
push
mov
ret
add
mov
add
shl
push
mov
adc
add
jmp
ja
mov
add
jge
jg
lods
out
rcrb
je
adc
xor
iret
in
pop
add
cmp
and
adc
add
mov
jne
aas
add
loope
mov
fiadds
jne
mov
add
jo
dec
repz
scas
insl
movsl
lret
sub
loope
or
or
mov
dec
lret
push
movsl
inc
xchg
addr16
cmp
jae
aaa
or
sbb
hlt
mov
pop
and
jbe
add
or
scas
sbb
icebp
imul
push
inc
dec
sub
dec
cld
ret
sub
or
mov
icebp
mov
add
add
adc
sbb
add
and
or
lock
test
jne
cmp
adc
add
add
add
imul
mov
pop
neg
sbb
neg
add
mov
xorl
add
mov
mov
mov
push
mov
or
mov
and
popa
test
pop
lods
inc
xor
dec
dec
insl
in
outsb
sbb
sahf
bound
jae
mov
faddl
cwtl
je
int3
add
leave
fidivl
cld
or
or
mov
jbe
cmp
call
dec
repz
and
jp
or
dec
shl
js
mov
aad
pop
or
loope
rcrl
cmp
cmp
and
or
sbb
test
aas
ss
loopne
test
add
mov
jo
inc
and
pop
loope
sub
xchg
add
rcll
jp
loopne
lahf
mov
test
dec
dec
jne
pop
lock
jg
and
or
in
rclb
adc
ret
insb
xor
adc
jae
and
xlat
stc
jb
and
xor
ss
sub
decb
sub
add
ljmp
jmp
fistl
and
icebp
sbb
adc
xchg
pushf
in
xor
testb
shlb
punpcklwd
aaa
push
add
jmp
nop
pop
lock
xchg
out
je
mov
or
push
call
mov
int
xchg
outsl
repnz
add
orl
mov
jge
lods
clc
mov
fdivrs
test
and
rep
push
pop
mov
scas
lret
iret
roll
shr
add
cmc
jecxz
inc
add
in
jo
pop
pop
popf
jne
mov
mov
pop
push
shl
shr
mov
test
je
sbb
inc
jmp
mov
inc
adc
inc
push
dec
pop
rcll
inc
out
mov
dec
shll
mov
xor
rcrl
mov
adc
sub
and
push
push
mov
pop
adc
jp
movb
or
outsl
jmp
lods
in
rclb
mov
je
lret
mov
out
jne
pop
cmp
jecxz
roll
out
add
das
dec
jne
fcomps
pop
ret
arpl
ja
xor
imul
xor
js
fs
dec
scas
pushf
cmp
push
push
push
push
add
out
enter
push
or
jae
mov
dec
push
adc
push
fldenv
add
stos
or
mov
mov
enter
fcmovnbe
adcl
and
je
les
push
vpmacsswd
pop
and
icebp
sbb
or
xchg
adc
ret
call
loop
test
or
jmp
test
adc
hlt
shrl
pop
dec
jo
cmp
mov
mov
mov
xchg
mov
jmp
jmp
cmpsb
shlb
push
pop
dec
push
jl
jecxz
push
jecxz
jne
fbstp
subb
repz
mov
lea
inc
js
sbb
xor
not
xchg
pop
or
fucom
lahf
mov
push
push
jmp
mov
cmp
cli
pop
out
adcl
movl
push
or
or
or
out
jge
xchg
mov
movsl
or
sbb
xchg
dec
sbb
inc
add
inc
jge
push
xor
cmp
sbb
xor
add
add
inc
xor
insl
leave
and
shrb
adc
push
lcall
mov
pop
dec
ret
sbb
xor
xchg
sbb
dec
inc
sbb
rorl
inc
or
adc
pop
scas
cld
inc
mov
lea
pop
ret
xchg
push
mull
lea
inc
inc
sbb
popa
fdivrs
into
fwait
mov
inc
cmp
test
push
cmc
in
or
rol
shl
push
adc
lds
sarl
pop
mov
xor
repz
js
cmc
jl
je
add
inc
or
inc
je
les
clc
mov
cmp
push
push
out
cmp
je
xor
jnp
pop
out
and
faddl
xor
rcr
jmp
pop
arpl
outsb
or
and
loopne
cld
xor
pop
cmp
or
sti
jg
ss
incl
push
mov
or
push
test
jmp
or
push
cmp
pusha
gs
addl
xchg
cmp
mov
or
inc
cmp
iret
push
ds
jne
rcl
xlat
jg
inc
in
cvtps2pi
jp
mov
and
jmp
mov
push
pop
ja
clc
add
mov
int
cwtl
test
xor
push
stos
or
pop
push
mov
fisubs
push
mov
sbb
adc
cmp
inc
add
cmp
data16
stc
adc
pop
ds
jl
mov
sar
xchg
xor
icebp
mov
fistps
and
or
pop
and
out
cmovb
adc
and
cmc
sar
or
testb
jo
cmp
mov
mov
pop
jmp
sbb
mov
mov
insb
aam
push
aam
fcoml
subb
mov
or
pop
pop
rolb
rcll
push
or
dec
dec
pop
data16
in
adc
jmp
insl
pop
xor
jmp
rcr
shr
rcr
or
jne
div
aaa
fcoms
or
add
jb
cmp
or
push
jbe
sub
cmpsb
mov
or
fadds
add
sbb
mov
adc
fcoms
nop
rorb
inc
add
add
jae
mov
out
push
pop
cmp
leave
shrb
imul
adc
addr16
push
add
pop
pop
jb
cmpb
jne
aaa
shlb
out
adc
ss
xlat
adc
xchg
inc
inc
inc
icebp
call
jmp
fildl
inc
ss
gs
out
loope
dec
shl
add
in
add
inc
jmp
xor
das
pop
dec
pop
je
jne
je
mov
mov
push
iret
pop
mov
dec
sub
pop
sub
cmp
push
inc
jecxz
jmp
adc
pop
add
fwait
pop
in
add
test
and
and
fimull
je
mov
fwait
mov
nop
adc
pop
sbb
mov
dec
lock
je
cmp
das
les
pop
sub
inc
push
aas
inc
inc
nop
cmp
insl
or
sub
outsl
jb
fisubrl
addr16
adc
popa
test
push
int
ljmp
sub
add
sbb
out
mov
loopne
xchg
lea
pop
sub
jo
push
add
imul
jge
sub
lea
sbb
mov
sti
jb
push
notb
cwtl
test
iret
push
inc
sbb
inc
sbbl
ss
fs
push
nop
lea
cmp
cmc
lcall
xchg
push
xor
in
pop
adc
xchg
xchg
adc
insl
cmpsl
imul
cmpsl
adc
aad
push
sbb
in
dec
xorl
push
pushf
icebp
cltd
fs
jae
mov
out
add
lea
lock
or
xchg
rorb
and
ret
imul
movsl
add
test
jne
sbb
pusha
popa
push
add
add
inc
addl
loope
adc
setge
loope
inc
sub
dec
add
ds
es
sbb
rorb
or
mov
leave
outsb
xor
jno
lret
mov
leave
std
daa
push
repnz
lods
pop
mov
and
jae
mov
lds
cmp
mov
cmp
dec
rorb
in
sub
add
inc
mov
or
sbb
or
in
loope
sub
jmp
sti
xlat
test
adc
lahf
popa
mov
popf
ljmp
cmp
jb
pop
sub
sbb
mov
incl
dec
cmp
jg
and
adc
adc
cld
mov
pop
and
call
lcall
fimuls
mov
adc
fnclex
ret
ret
mov
movl
in
mov
dec
mov
mov
mov
nop
xor
add
jne
and
es
push
movsl
ret
iret
push
or
sbb
cld
jne
je
rorl
push
xor
jge
sbb
xchg
filds
neg
neg
sbb
mov
mov
ss
sbb
mov
jle
pusha
ja
adc
xor
shr
sahf
addr16
rcl
in
fcomi
sbb
xchg
xchg
inc
adc
dec
inc
and
or
imul
fs
repnz
or
cmc
je
aas
add
test
pcmpeqw
inc
dec
inc
sti
lcall
call
jne
mov
mov
adc
sbb
push
les
call
sbb
in
loopne
sub
cmpsl
je
jg
fstpt
mov
dec
adc
cmc
arpl
sbb
imul
mov
cmc
ljmp
les
lret
sbb
out
jne
divl
arpl
or
loop
cmp
aam
fxch
dec
mov
mov
push
lea
or
adc
pushw
cmp
rdrand
sub
sar
dec
dec
out
adc
subb
inc
jne
cmp
mov
inc
repz
sub
xchg
xor
mov
add
popw
xor
xor
sbb
roll
jbe
test
fucomp
mov
aaa
fwait
adcl
rorb
dec
sbbb
dec
mov
int3
mov
movups
jmp
lea
xor
or
loop
les
ror
xchg
add
push
dec
mov
repnz
repz
arpl
das
test
or
or
aam
mov
jmp
sbb
bsf
orl
push
ljmp
fwait
inc
incb
pop
or
fldcw
fistpll
or
mov
xchg
loopne
hlt
mov
mov
shrb
ficomps
or
arpl
push
cmp
push
dec
enter
and
add
ljmp
sbb
push
sub
ss
jecxz
fistpll
pop
push
cmp
fldl
aam
cmp
cld
cli
sbb
lret
cld
cmp
jb
mov
sbb
sti
or
sub
cmp
push
push
add
mov
pop
fcomip
fsubrl
and
dec
xor
stos
out
imul
movb
out
push
ret
jp
ljmp
mov
jmp
push
loopne
mov
notl
mov
xchg
daa
sarl
xchg
loope
aam
adc
in
and
test
shl
add
adc
movsb
call
inc
dec
insb
shl
aaa
pop
push
cmp
xor
cmp
or
cld
stos
or
add
call
inc
movsb
enter
incb
inc
pushf
testb
push
aam
mov
or
or
pushf
addr16
jle
dec
mov
mov
ljmp
jmp
push
push
mov
sub
jne
cmp
pop
in
std
push
fistpll
scas
mov
jmp
xchg
aam
dec
pop
dec
xchg
sahf
cmp
jl
iret
jnp
cmp
mov
test
repz
jg
push
aad
incb
je
andl
das
dec
or
mov
pop
mov
and
or
data16
mov
test
cmp
mov
daa
pshufhw
mov
aaa
loope
xchg
test
inc
pop
or
add
sbb
fdivl
sarl
clc
in
push
mov
xor
dec
add
adc
nop
push
mov
xor
sbb
adcb
lret
sar
inc
jl
loop
loope
jge
out
inc
jge
icebp
pop
enter
testb
je
mov
mov
pusha
and
mov
dec
or
das
divb
dec
movsl
cmp
pop
or
inc
test
cmp
sbb
or
jle
dec
xchg
inc
adc
mov
jmp
add
addr16
pusha
pop
cmp
lock
mov
jl
and
js
push
std
inc
pop
jge
mov
vmread
test
sub
cmp
sbbl
xchg
pusha
jg
ja
jge
lret
repnz
add
or
insl
xchg
nop
sub
js
sbb
je
or
flds
dec
pop
xorb
dec
sub
inc
pop
adc
and
xchg
sti
sub
or
sub
cs
loopne
cmp
loopne
aas
pushf
xorb
inc
or
jmp
adc
adcl
lock
jle
lea
xchg
imul
and
sub
insb
je
or
jo
std
jno
and
inc
sti
aas
ss
cmpb
jne
inc
inc
dec
sub
xor
push
adc
movsl
cmp
add
int
sbb
mov
imul
int3
push
inc
xor
movsl
clc
addr16
lock
test
fisttps
call
cmp
jo
insb
and
test
add
mov
cmp
orb
add
mov
or
lods
jae
xor
or
push
sbb
mov
int3
sti
movsl
xor
inc
aam
ficomps
inc
inc
jmp
inc
int3
add
arpl
lea
es
lea
xor
daa
mov
add
push
sbb
shll
or
adc
in
add
mov
out
out
pop
adcb
pop
je
or
je
dec
stc
call
add
pop
mov
sbb
cmp
add
sub
lock
or
add
mov
rcrb
jl
or
movsl
push
fdiv
cmp
xchg
mov
clc
adc
add
addr16
push
push
movsb
cld
lock
push
rorb
fistpll
xchg
dec
mov
inc
sbb
push
nop
adc
jge
popf
testl
imul
jo
imul
pop
mov
adc
test
prefetchw
or
or
inc
adcb
lahf
dec
xor
out
imul
or
test
push
test
data16
pop
rcl
inc
mov
leave
cmpb
daa
cmp
sti
adc
jbe
stos
je
sbb
dec
dec
cld
aad
shrb
jnp
fs
jge
lods
pcmpeqb
daa
movb
add
sahf
popa
fistpll
add
inc
or
test
add
xor
xchg
push
shll
adc
mov
scas
add
sub
aad
js
sarl
scas
jge
ja
jmp
jp
and
inc
sub
in
ret
jle
pop
ja
cltd
jmp
pop
mov
jmp
inc
loopne
jnp
or
loopne
xor
xor
mov
cli
jg
jl
jae
out
out
bswap
and
rorb
or
jne
mov
out
fs
sti
aaa
jo
imulb
add
jne
in
mov
pop
scas
xor
mov
sbb
push
xor
push
jl
or
push
sub
inc
sub
ret
xchg
mov
sti
in
sti
sbb
sti
cmp
jle
add
cmp
mov
ret
pop
sub
add
out
or
xor
fsubrs
push
movb
xor
fmuls
jle
or
hlt
es
cld
test
divb
adcl
and
lret
jmp
add
and
add
mov
in
hlt
xor
or
and
add
movsl
push
jg
sub
popf
imul
jl
push
xchg
add
pop
addl
jle
sbb
adc
add
enter
xorb
dec
add
mov
mov
dec
mov
ret
sbb
fcompl
pop
add
dec
sbb
add
repnz
test
adc
hlt
in
js,pn
imul
pop
imul
fbstp
rorb
decl
daa
lock
js
mov
mov
add
mov
popa
or
mov
pop
push
sub
sbbl
ret
incl
pop
daa
pop
mov
cld
push
jle
xor
mov
orb
ds
jg
out
lds
mov
or
ret
dec
jno
es
mov
push
movsbl
push
inc
sbb
insl
aas
cmp
int
dec
loop
cmp
inc
or
cmp
sbb
fnstenv
out
fimull
cmp
add
bound
stc
icebp
fbld
inc
ja
lahf
mov
inc
jmp
mov
mov
sbb
stc
rolb
popf
push
scas
mov
gs
aas
mov
inc
std
push
or
pop
cld
xor
xor
or
ja
push
lret
iret
lahf
pop
rclb
repnz
out
and
adc
cmp
out
clc
jecxz
xchg
out
lea
jp
loop
out
stc
jecxz
pop
imul
mov
je
scas
sahf
jge
sbb
mov
aas
pop
cmp
enter
sbb
inc
pop
in
dec
inc
pop
out
jle
in
cmp
pop
andb
adcl
jae
fs
xor
mov
xchg
or
xchg
lods
popl
sbb
jbe
mov
andl
push
ljmp
pop
push
adc
sbb
mov
xchg
or
inc
or
jmp
imul
sbb
mov
jbe
stos
divps
movl
iret
aaa
popaw
in
in
fwait
adc
es
push
jecxz
sar
or
push
pop
xchg
and
pop
or
mov
repnz
pusha
xorb
mov
arpl
sbb
mov
xor
mov
jle
mov
cmp
mov
xor
push
add
push
lock
call
sub
mov
add
xor
mov
clc
inc
cmp
je
or
inc
dec
outsl
xchg
sbb
ja
int
and
or
test
fidivrs
jne
cmpl
adc
xchg
fld
sub
subb
pop
jne
adc
negl
pop
negl
jmp
mov
mov
in
ret
loop
jle
ds
aaa
adc
adc
dec
mov
rolb
push
jecxz
push
adc
movsl
ret
scas
xor
aad
jb
fbld
add
inc
in
and
sahf
and
pusha
fdivs
pop
cld
test
cmp
je
cmp
mov
dec
in
and
or
inc
dec
into
add
or
inc
sarb
mov
inc
jecxz
push
outsb
je
shl
mov
mov
jge
sub
je
or
je
push
xchg
movsl
ja
dec
cltd
lods
retw
pusha
and
jne
leave
and
mov
mov
adc
mov
adc
cwtl
mov
jne
jge
fwait
cld
pop
add
or
cmpb
enter
adc
add
bound
paddsb
mov
fadds
jne
test
cmp
xchg
stos
test
out
mov
adc
ljmp
das
mov
inc
sub
add
push
dec
sub
and
sbb
mov
mov
mov
mov
or
pop
mov
dec
sti
mov
in
imul
lahf
push
sti
mov
cmp
je
testb
or
pop
std
aas
lret
cmp
jl
jmp
mov
jmp
clc
push
shl
das
cli
pop
popa
orl
das
clc
cmc
cmp
je
iret
cmp
fimuls
decl
hlt
push
mov
sbb
shll
xchg
mov
data16
movsb
movl
cmp
decb
sarl
pop
adc
decl
or
sbb
mov
pop
daa
sbb
call
lock
inc
popa
js
aad
pop
movsb
adc
push
jb
fsubr
jl
je
imul
in
mov
adc
or
mov
shl
mov
lea
popf
or
shlb
jl
mov
add
and
subl
push
adc
jge
fisttps
jnp
in
jmp
pcmpgtb
add
xchg
and
pop
bound
or
and
mov
push
cmp
fistpll
push
aad
scas
jle
lds
cmp
pop
cmp
fisttpl
mov
ja
aad
dec
mov
or
dec
inc
inc
dec
mov
or
and
cmpb
pop
add
jecxz
push
nop
dec
cmp
or
jns
xlat
push
or
xchg
jl
out
mov
out
jne
push
lods
sub
dec
rol
sbb
cmovb
or
pushf
lcall
imulb
sti
pop
scas
or
aam
and
ja
add
push
mov
enter
xor
mov
mov
push
mov
shll
sub
cmp
sub
pop
fwait
adc
call
sbb
call
dec
cld
sub
shr
mov
imul
mov
mov
inc
jb
fldl
icebp
adc
out
movsb
pop
and
mov
push
jnp
mov
test
pop
or
jle
cli
add
cli
sti
sar
cmp
jbe
push
pop
mov
dec
or
pop
and
mov
lret
shr
lea
not
and
decb
jne
add
testb
loopne
cmp
int
sti
xor
push
pop
add
cld
cli
add
jmp
or
hlt
mov
push
jno
ret
test
sar
pop
sub
sahf
inc
imul
dec
frstor
sar
xor
fidivs
out
sahf
subb
push
loop,pt
cmp
and
cmp
je
lods
mov
jno
pop
pop
inc
cmp
mov
and
pop
pop
jb
add
jns
data16
cmp
push
jbe
nop
fisttpll
dec
pop
pop
and
pushf
pop
or
leave
mov
adc
add
fwait
pop
pop
roll
daa
mov
bound
outsl
or
jmp
ret
in
dec
pusha
mov
mov
mov
jae
dec
mov
popa
adc
inc
pop
ret
in
pop
pop
or
jmp
dec
adc
dec
or
imul
pop
push
orl
xor
cmc
push
jae
mov
jo
faddl
int3
jle
xor
add
fmull
movsl
mov
sub
jle
push
push
call
aas
gs
push
or
xor
jg
insl
dec
push
decb
adc
inc
hlt
sbb
mov
add
and
xchg
inc
mov
mov
adc
mov
mov
xchg
test
loope
sub
fwait
add
pop
xchg
adc
push
lea
push
inc
mov
and
or
add
or
jbe
cmp
pop
mov
pusha
popa
lret
fwait
adc
add
inc
sar
fiadds
stc
and
or
hlt
xchg
jmp
jbe
jno
loopne
not
call
in
shll
jae
pop
push
jg
inc
mov
and
decb
iret
xchg
ret
adc
mov
push
jne
mov
cmp
dec
jmp
xor
dec
jae
int
add
jle
outsb
jmp
mov
or
fwait
outsl
inc
push
or
test
je
push
sbb
pop
fwait
addl
add
mov
jp
lock
mov
cli
pop
cld
or
adc
mov
adc
sub
divb
mov
std
cmp
inc
or
xchg
or
adc
jle
cmp
ljmp
or
je
arpl
stos
rcr
mov
into
jne
int
and
pop
test
jl
push
shll
jmp
mov
stc
xchg
sub
mov
sar
dec
cmp
jle
pop
es
cmpsl
gs
popa
call
sub
iret
rolb
pop
iret
mov
movsb
dec
and
hlt
negb
mov
decb
jne
repnz
and
jmp
lods
jmp
push
in
or
sbb
movsl
pop
test
addr16
dec
add
jns
ljmp
adc
jg
hlt
mov
mov
js
xchg
jp
mov
or
cmp
jg
decb
jge
cmpl
pop
sub
lds
or
mov
or
adc
jmp
push
loopne
lret
ds
push
jnp
bound
sub
or
movsb
roll
or
and
sbb
add
inc
add
out
pop
icebp
and
cld
mov
inc
lea
jne,pt
cmp
fdivs
xchg
cmp
dec
cltd
mov
or
jmp
sbb
or
xor
aad
mov
sbb
push
ret
adc
and
adc
add
fwait
lock
data16
xor
out
push
xchg
data16
add
mov
jne
fwait
test
test
mov
cli
push
sahf
xchg
sbb
stc
dec
pop
mulb
inc
iret
jle
incl
adc
rorl
pop
push
mov
inc
or
std
cmp
shr
sahf
loopne
ret
outsl
imul
inc
pop
icebp
xor
cmp
js
add
dec
cmp
or
out
iret
roll
jns
pop
adc
inc
cmpsl
add
lea
fidivrs
xchg
ja
lea
dec
in
mov
push
repz
int3
lea
cld
lock
mov
call
cmp
add
movl
dec
or
xchg
sbb
mov
test
gs
or
pop
inc
pop
jg
mov
mov
inc
mov
pop
test
ljmp
inc
jne
or
mov
subb
and
ret
imul
cmc
mov
pop
sub
dec
orb
cmc
shr
or
shll
dec
cmp
rcrb
mov
fistl
jne
or
inc
add
stos
aas
sbb
popf
pop
loopne
lcall
or
lcall
loop
sub
and
repz
test
movsb
mov
leave
jg
mov
into
add
mov
mov
dec
stos
sar
dec
mov
das
push
pop
fld
loopne
dec
hlt
lea
adcl
pop
dec
pop
dec
test
pop
pop
add
leave
and
xchg
adc
add
and
outsl
pop
mov
jmp
inc
xchg
loopne
sahf
dec
test
stos
and
cmp
popf
sub
inc
xor
negl
lea
add
fiaddl
pop
xchg
jge
pop
or
mov
dec
insl
pop
xor
rorb
lds
jbe
adc
pop
xchg
xor
dec
arpl
add
dec
xlat
sbb
xchg
into
je
repz
xlat
xchg
pusha
cwtl
fs
push
in
in
pop
mov
bnd
ja
lcall
push
push
add
fstpt
rclb
cmc
pop
cwtl
xchg
xchg
fisttpl
ret
pop
shlb
into
push
push
xor
lret
ret
xchg
dec
dec
push
push
ljmp
dec
test
pusha
cmp
mov
and
mov
faddl
sbb
test
sub
mov
sbb
imul
add
xor
insb
jge
scas
mov
cmp
or
mov
mov
std
jmp
mov
mov
adc
xor
jle
scas
mov
dec
aad
adc
incl
std
xorl
mov
std
adc
popf
ret
rorl
mov
stos
insl
cmp
dec
es
or
xlat
inc
and
sbb
inc
add
movl
fcompl
daa
jnp
in
xor
jle
jne
aam
xor
adc
jmp
in
or
cmc
cmp
andb
and
mov
mov
sbb
push
mov
add
enter
push
cmpl
pusha
mov
fcmove
lock
lods
aas
lock
push
jb
cmp
cwtl
popa
mov
inc
aam
fs
inc
pop
not
xor
push
mov
push
ja
leave
xlat
ljmp
sub
test
jge
inc
movl
jbe
je
cmpl
mov
pop
or
and
or
test
repnz
lret
cmp
sub
sbbb
cmp
or
pusha
add
in
pop
loope
pop
cmpl
adc
or
mov
cmp
je
jmp
test
jne
lods
xor
inc
mov
jbe
pop
inc
mov
sub
mov
rcrl
das
loope
or
imull
je
dec
sub
stc
or
mov
fwait
test
add
movzbl
andb
cmp
inc
add
mov
add
popf
jp
and
adc
pop
daa
or
mov
jo
inc
push
pushw
or
iret
mov
sbb
ja
sbb
xchg
push
loope
iret
or
ret
fbstp
clc
mov
lret
jl
cmp
jbe
push
arpl
sbb
jne
and
jae
sub
outsl
push
mov
cmp
or
dec
dec
pop
xor
jecxz
sbb
cmpsb
lock
add
sbb
stos
mov
popf
es
xorl
add
jb
mov
cmp
je
adc
sub
xor
jns
test
shll
lods
push
or
cwtl
add
ja
aas
fstpt
or
mov
xchg
sub
roll
add
mov
add
jge
aam
dec
mov
ds
je
movsb
movsl
add
and
lods
push
jo
jbe
mov
push
xorl
jo
mov
jle
lds
lahf
outsb
sbb
push
sbb
mov
stos
ss
inc
cmp
add
ret
push
xchg
mov
insb
cld
mov
lock
jae
cmp
add
sbb
and
sub
or
gs
or
add
js
sub
mov
and
ret
push
lret
hlt
sti
xor
mov
push
sbb
jmp
jmp
mov
inc
shrl
push
sbb
push
inc
aas
js
push
and
push
int
sbb
cltd
xor
dec
pop
cld
outsb
cmp
scas
and
dec
jae
add
sub
adc
repz
stc
hlt
xchg
inc
loop
out
add
or
lea
dec
incl
pop
jae
mov
test
jne
jbe
add
hlt
sti
iret
fnsave
inc
inc
jmp
mov
roll
rolb
push
imul
cltd
sbb
add
xor
cmp
jae
xor
add
cmc
push
xor
mov
iret
je
lahf
fildl
pop
add
inc
inc
lea
pop
jo
packsswb
sub
test
jno
jg
mov
jmp
ret
sub
jb
fimuls
adcl
add
jmp
outsl
push
icebp
and
ret
mov
loope
and
outsl
or
cmpxchg
inc
orb
inc
sub
seta
test
pop
cmpb
mov
or
lea
jbe
pop
sbb
mov
add
setg
jmp
jae
sbb
mov
movsl
add
push
mov
adc
mov
pop
hlt
mov
mov
cmp
lea
lock
push
lock
xor
loopne
lock
push
lret
inc
cmpb
lea
jbe
out
arpl
sub
shlb
and
daa
mov
js
xchg
mov
jl
mov
cmp
push
mov
fmuls
and
xchg
sbb
add
inc
scas
imul
sbb
xchg
jno
andl
inc
fs
jne
jns
daa
sbb
cltd
les
repnz
aam
add
imul
jl
js
adc
int3
pop
or
inc
js
jl
dec
sbb
adc
rol
cltd
scas
adc
pop
stc
out
and
push
xchg
ljmp
add
adc
jmp
js
hlt
xchg
out
ret
and
lret
push
inc
shll
ljmp
sti
sbb
add
mov
loopne
lret
add
jne
and
hlt
repz
movsl
jo
mov
dec
hlt
jmp
cmp
jg
xchg
fucomip
je,pt
or
inc
je
dec
je
dec
jne
hlt
std
fbstp
inc
jmp
cmpb
jne
or
xor
add
inc
cmp
call
dec
fsubrl
sub
fucomip
daa
inc
bnd
insl
push
je
lock
mov
psubq
push
decb
sti
cmpb
sub
movsl
xor
pop
aad
test
clc
daa
mov
or
sti
mov
std
sti
test
cltd
cmp
je
xorb
add
sub
xchg
xor
outsb
adc
ds
arpl
arpl
dec
inc
adc
mov
sbb
push
mov
in
inc
lahf
jp
call
hlt
pop
pop
push
mov
pop
add
sub
out
fnstenv
fs
add
mov
addr16
or
sbbl
push
and
cwtl
sbb
xchg
jns
add
xchg
fldt
pop
das
in
scas
and
sbb
sub
mov
dec
sub
inc
xchg
add
push
mov
push
cmc
push
lahf
and
sbb
push
mov
sbb
test
inc
cmp
cmp
scas
sub
das
adc
xor
scas
in
cmpsb
insl
aas
ficompl
inc
mov
mov
push
pop
add
rolb
mov
push
inc
fcmovnu
insb
cmp
in
mov
sti
sbb
inc
fmul
nop
fsubs
gs
pop
aaa
mov
dec
push
inc
sub
push
daa
and
fs
add
dec
adc
inc
stos
stos
shrl
push
daa
inc
mov
or
pop
pop
add
jbe
dec
adc
andb
scas
add
dec
or
adc
mov
sbb
inc
mov
push
lret
jle
ljmp
daa
sub
ja
sub
lcall
dec
loope
xchg
ret
jge
je
push
lods
and
cmp
aas
xchg
js
push
jmp
ret
pop
lret
dec
iret
mov
cmp
ret
inc
testl
aas
pop
dec
or
mov
push
lea
jecxz
and
jp
lock
jmp
in
or
sbb
xor
add
inc
les
outsl
cmp
or
js
loope
fisttpl
outsl
push
pop
mov
jmp
stc
xor
mov
iret
pop
inc
dec
scas
int3
js
call
xchg
movsb
pushf
movsl
jge
jnp
hlt
std
lahf
test
pop
jne
mov
inc
push
cmpsl
and
mov
xchg
dec
decl
inc
cmp
out
insb
insb
sarb
inc
cmp
jae
mov
jmp
shl
jg
ret
cmp
ja
gs
lock
hlt
ljmp
repnz
mov
mov
and
mov
ret
pushf
or
in
loopne
incl
jne
xor
jmp
mov
mov
push
jmp
jmp
add
mov
inc
xchg
lcall
xor
jg
or
leave
push
test
pop
inc
sti
xchg
xchg
mov
push
enter
notl
loop
stc
add
lret
test
je
adc
mov
jne
or
xchg
inc
enter
or
fistps
leave
sbb
xor
ret
mov
push
mov
aam
mov
fmuls
push
push
xchg
fwait
sub
jg
add
inc
lret
or
aam
jo
insb
out
setl
jne
jmp
sub
cmp
add
vmrun
mov
jp
dec
ljmp
mov
and
aad
rolb
pop
mov
sbb
mov
js
add
adc
outsl
cmp
lahf
add
insl
sub
pop
pop
fsubr
fiaddl
adc
cltd
and
sbb
leave
add
imul
jb
pusha
fldl2t
add
dec
faddl
roll
lods
neg
mov
mov
cltd
sbb
jo
cmp
out
orb
add
aas
lea
xchg
mov
fwait
je
push
imul
and
jno
mov
jl
sar
xchg
sbb
mov
neg
sub
adc
into
popf
sub
lock
push
sti
aam
or
inc
ds
adc
repz
cmp
sbb
or
inc
jmp
shrl
push
mov
xchg
inc
pop
sub
sub
daa
sbb
add
loopne
enter
in
inc
or
push
jne
adc
dec
push
jecxz
pop
jne
mov
jbe
andb
or
mov
lea
jg
mov
das
push
adc
cltd
int3
cld
cmp
mov
test
xchg
jnp
push
jle
add
mov
push
ds
addl
pop
out
pop
call
decl
js
call
or
and
jnp
add
cmp
dec
mov
por
mov
add
and
jmp
push
jb
hlt
jmp
sti
testb
xchg
push
sbb
std
xor
push
fimuls
test
push
and
inc
cmc
cmpsl
add
aam
mov
lods
imul
inc
pop
dec
lods
jmp
add
xchg
ret
outsl
cld
pop
sbb
or
fwait
dec
or
mov
add
or
pop
add
or
inc
std
adc
mov
sub
inc
mov
scas
and
dec
fwait
push
je
push
ja
mov
dec
mov
pop
test
push
xchg
aad
pop
mov
sahf
pop
push
adc
loope
mov
ret
xchg
pushl
je
xchg
fidivs
add
pusha
insb
mov
mov
test
jne
jle
mov
and
stc
sar
cmp
std
fwait
jg
iret
jmp
mov
and
cmp
push
or
cmp
in
jno
jle
cmp
push
pop
dec
rol
lds
add
sbb
bound
or
mov
push
add
pop
dec
inc
cld
fdivrl
xor
leave
pop
les
add
add
mov
pop
loope
lret
sahf
pushf
mov
fmull
jne
pop
imul
xor
add
lock
mov
or
sub
sub
push
sub
cmpb
mov
js
add
insb
sub
xchg
scas
fimuls
add
lods
xchg
mov
xchg
insl
xor
das
cltd
and
add
imul
cmc
xor
add
cld
mov
rcl
xor
or
push
imul
add
lret
es
adc
enter
lret
add
cmp
sbb
out
movsb
psubq
jmp
mov
mov
sbb
loopne
and
xchg
push
fadds
movb
inc
mov
jae
push
adc
cmp
test
add
lock
dec
adc
out
and
mov
aas
adc
mov
mov
xor
jne
dec
idivl
jne
add
fwait
rolb
push
or
aaa
out
jle
jb
mov
out
and
enter
sub
mov
mov
push
cmp
mov
fisttps
pusha
enter
testb
and
sbb
push
dec
inc
fwait
inc
fsubr
jl
lcall
pop
inc
cmp
cld
xchg
and
mov
inc
sbb
mov
std
roll
mov
sbb
jg
xor
jl
mov
test
xchg
icebp
dec
add
mov
add
fsubrs
in
das
in
mov
sar
jecxz
xchg
imul
add
je
mov
cmp
jae
cmpb
gs
shr
xchg
jmp
popa
xorb
ljmp
and
fwait
imul
out
mov
and
sub
adc
inc
mov
arpl
mov
loopne
fadds
cmpl
or
cmp
loop
jae
mov
sbb
and
xor
cld
arpl
sub
ja
dec
fcmovne
mov
lcall
int
adcb
fsubl
ja
daa
jmp
fcoms
mov
sbb
fiaddl
adc
push
loope
stos
std
std
pop
push
push
in
repnz
sub
jmp
inc
mov
lods
imul
add
add
pusha
adc
adc
int3
aad
lods
push
jbe
mov
movb
enter
outsl
xchg
jmp
sub
rorl
mov
out
mov
push
mov
bound
stos
in
xchg
push
sbb
cwtl
add
or
les
and
pop
mov
ret
js
faddl
push
fisttpll
loopne
and
cld
iret
fdivl
aam
inc
scas
popa
shll
dec
icebp
xor
rcll
loope
jnp
movsl
lods
xor
inc
or
icebp
insl
roll
push
mov
and
push
mov
std
gs
add
jno
popa
addr16
mov
pop
loopne
mov
add
xor
fbstp
enter
shrl
and
pop
jmp
sbb
and
stos
inc
jg
inc
xor
ss
jecxz
pop
push
xor
adc
test
or
dec
sbbb
pop
xor
cmp
pop
rclb
sub
push
and
pushf
nop
xor
sbbb
mov
sarb
sar
loopne
je
mov
inc
cmp
or
movsb
std
mov
aad
cld
dec
push
or
jmp
mov
jge,pt
add
loope
repnz
xchg
mov
popf
mov
push
dec
out
lods
out
pop
hlt
adc
inc
pushl
xchg
dec
mov
sbb
xchg
out
movsl
xchg
rcrl
lea
dec
daa
add
lea
or
mov
popa
and
push
add
adc
mov
adc
xchg
mov
nop
mov
cmc
inc
inc
adc
adc
mov
add
rcrl
popa
lock
pop
jge
mov
push
fimull
mov
movsl
movsl
pop
mov
bound
mov
jns
dec
adc
call
mov
mov
jb
push
jae
test
sbb
push
test
repnz
sbb
mov
inc
push
adc
or
ja
xchg
and
xchg
push
cs
jle
jmp
dec
pop
cmpsb
add
ret
xor
xchg
fsts
roll
or
dec
add
sahf
ja
pop
or
pop
or
push
adc
xor
stos
imul
mov
and
adc
add
dec
adc
jp
shr
test
incl
inc
hlt
mov
movb
rolb
js
lea
out
in
cmpb
push
jg
push
testb
add
inc
and
daa
loopne
inc
decl
pop
pop
or
xor
sbb
out
mov
cmc
movsl
push
mov
and
cmp
push
imul
popf
repnz
mov
pop
fimull
jno
push
jle
fildll
add
jmp
xor
divl
and
cmp
sub
cmp
add
push
aam
sub
and
pusha
testb
mov
mov
shlb
ja
popf
cmp
and
imul
xchg
das
xor
cmp
pop
stc
hlt
repnz
stos
ret
mov
cmp
inc
push
inc
push
jae
and
push
mov
std
pop
mov
dec
cmpsl
testb
inc
movsl
jne
mov
xor
sub
lock
mov
adc
movups
jmp
andb
sarl
sbb
inc
dec
sbb
xlat
sbb
add
adc
loop
shrl
mov
xchg
loope
add
cmp
gs
push
cli
add
lahf
jge
sbb
call
imul
inc
call
add
daa
ds
sbb
adc
and
lret
out
out
and
mov
lret
and
adc
jne
push
adc
movb
push
js
orl
push
js
push
sub
cmp
xor
mov
clc
dec
sbb
or
daa
inc
ja
imul
inc
add
jl
mov
inc
xor
jb
ret
lods
icebp
lods
adc
or
add
xor
jne
mov
mov
jmp
insl
ret
imul
leave
or
les
xlat
pop
pushf
jp
cmp
xor
push
ret
mov
int
xlat
sbb
loop
imul
lock
mov
dec
pop
jmp
aas
je
cmp
mov
pop
in
pop
clc
adc
push
lock
lret
sti
decb
dec
add
call
fbstp
es
sahf
jbe
inc
sahf
imul
hlt
adc
pop
call
dec
aaa
rol
add
mov
movsbl
repnz
je
mov
push
pop
adc
add
mov
aam
test
and
mov
mov
or
adc
add
rep
mov
cmp
or
lret
mov
inc
cmp
inc
pop
mov
and
sub
or
push
in
sbb
xor
into
fidivs
dec
mov
inc
and
add
sbb
pmullw
pop
jb
mov
xor
push
adc
pop
enter
add
push
sbb
and
test
cmp
aas
dec
push
pop
adc
sub
jecxz
sti
lahf
rcll
mov
sete
add
cmp
in
inc
sahf
int
mov
inc
mov
add
ds
shlb
fwait
pop
dec
out
rolb
lret
xor
divb
add
mov
cmp
sbb
mov
mov
add
fists
cmp
lret
inc
sbbl
outsb
enter
movsb
rol
jmp
mov
dec
pop
icebp
mov
jns
neg
daa
sub
adc
fs
pop
idivl
jmp
or
sbb
or
xchg
lea
sub
or
push
xchg
loope
enter
xor
xlat
sbb
xor
sbb
push
lods
inc
pop
scas
sbbl
rolb
jmp
inc
adc
imul
adc
ret
lds
std
jne
movb
ljmp
inc
xchg
xchg
jg
push
mov
pop
add
sbb
xor
jmp
add
cmp
leave
rorb
inc
pop
adc
sti
inc
lock
jge
pop
je
neg
jmp
pop
cmp
jl
loope
cmpl
push
push
sub
push
or
adc
ret
pop
pop
es
mov
mov
test
dec
xor
rcll
aad
imulb
loopne
arpl
xchg
push
cmp
push
jo
setl
mov
stc
lods
mov
jl
inc
jge
xchg
or
push
stc
and
push
jecxz
lcall
add
hlt
movb
mov
test
dec
lret
push
dec
or
push
inc
xor
xor
out
xor
out
mov
or
sub
jne
out
in
or
loop
sub
mov
jmp
and
push
das
add
sbb
imul
push
sbb
push
mov
arpl
xchg
rcrl
mov
fildll
inc
cmp
stc
adc
jle
mov
sbb
add
pushf
repz
xlat
push
mov
adc
adc
lret
ss
dec
or
fwait
and
cmp
push
and
jecxz
adcb
add
or
dec
cmpsl
and
push
mov
dec
push
or
push
add
cmp
fistpll
dec
or
cmp
jge
lea
sub
testl
or
or
jne
mov
sbb
cmp
fcomps
jo
nop
and
stc
pop
cmp
xchg
lahf
add
sbb
and
in
sbb
xchg
or
adc
rcrl
adc
hlt
push
and
add
add
or
inc
push
pop
jbe
xor
xor
cmpb
add
jl
push
iret
push
mov
rorb
jmp
jne
lea
pop
pop
lea
inc
or
dec
mov
je
jecxz
popa
cmpsl
xor
sahf
mov
dec
push
popa
and
mov
mov
and
cmovb
jbe
scas
sahf
mov
out
popf
fisubs
cmp
jbe
push
mov
ja
imul
jne
add
inc
mov
push
xor
ret
je
cmp
je
inc
std
pop
mov
clc
popf
mov
call
push
cmc
adc
or
cmp
add
push
mov
xchg
cmc
std
mov
pop
inc
cmpb
and
push
gs
clc
sti
orb
pop
add
outsl
jne
pop
jmp
into
dec
and
push
xor
mov
enter
pop
in
jnp
add
add
mov
mov
inc
dec
dec
andb
push
push
imul
fnsave
sbb
js
or
pop
mov
dec
dec
xchg
imul
mov
cmp
xchg
or
cltd
out
ret
mov
jne
movsl
test
push
xchg
loopne
std
popa
ret
aaa
inc
decb
inc
mov
inc
cmp
sub
xchg
xor
mov
enter
repz
mov
mov
inc
inc
pop
aad
or
add
inc
out
inc
data16
add
pop
or
testb
xchg
pop
jae
je
or
or
jne
dec
ja
cmp
addr16
lcallw
sbb
sub
pusha
or
mov
enter
adc
dec
lretw
mov
mov
fcompl
in
mov
and
dec
sub
sbb
pop
and
jg
orl
out
stos
and
sbb
xchg
ret
shl
pop
lahf
icebp
jmp
rorl
push
inc
adc
push
pop
inc
add
shlb
dec
pop
daa
mov
adc
add
pop
ss
enter
sbb
xchg
ss
aas
aaa
jno
add
add
jmp
xchg
sbb
mov
andl
jp
rorb
adc
inc
icebp
sub
xor
dec
sbb
aad
into
jne
and
inc
mov
mov
shrb
push
xchg
insl
dec
insl
jbe
and
push
stos
call
adc
xchg
push
mov
cmp
out
mov
sbb
mov
or
shrb
mov
clc
sbb
movl
inc
cmp
je
sub
loopne
adc
and
mov
popa
and
dec
dec
and
push
cmp
cmp
jmp
push
sub
arpl
out
adc
ja
dec
cmp
sti
or
sub
inc
aas
inc
stos
jp
push
popf
adc
add
dec
cmc
in
jno
add
les
sub
aaa
aam
inc
sahf
push
int3
mov
xor
lret
sbb
cmpl
and
push
mov
xor
sbb
add
jo
push
insl
movb
mov
js
add
jne
loopne
jg
or
movl
push
xor
mov
sbb
repz
jge
mov
pusha
cwtl
pop
int3
andl
pop
lea
andb
push
adc
sar
ss
es
xchg
jl
jecxz
lock
test
jae
mov
or
aam
mov
out
std
mov
or
sbb
dec
iret
push
and
fildl
pop
mov
inc
inc
add
call
cmp
sarl
decl
test
add
xchg
add
push
negb
and
cmpsl
xchg
ret
dec
in
insl
mov
mov
pop
push
pop
jl
cmpsb
int
push
orb
out
push
cmp
adc
repz
fistps
or
jl
pushl
xor
xor
sub
cmp
shlb
ret
mov
sub
inc
add
mov
testb
push
ret
mov
mov
xor
mov
or
stos
nop
lock
fidivs
and
mov
aas
cwtl
adc
stos
xor
mov
std
mov
mov
dec
das
jl
add
sti
jnp
sbb
pop
mov
scas
mov
and
xchg
test
mov
mov
jmp
movb
dec
push
or
push
jo
pusha
inc
jge
adc
mov
pushf
xor
mov
nop
xchg
ret
fimull
ret
cli
dec
int3
int3
push
inc
xor
pop
inc
xor
jle
hlt
add
loopne
pusha
div
inc
leave
bound
mov
dec
pop
mov
push
jle
jnp
andb
jbe
je
push
push
mov
imul
pop
pop
pop
orb
xor
adc
lods
fwait
subl
add
push
sbb
add
sbb
pusha
adc
jmp
loopne
sbb
jmp
sarl
jg
sub
lds
jne
mov
push
pop
sbb
sbb
add
inc
lahf
stos
inc
or
sbb
cld
sub
dec
lret
mov
sbb
rcrb
xchg
cmp
add
mov
xchg
aas
popa
adc
cmp
fld
std
sub
add
xchg
xor
sbb
fldenv
dec
lret
sub
loopne
pop
jp
data16
cmp
pop
mov
sub
sti
pusha
adc
adc
sbb
jo
push
mov
dec
mov
xor
mov
sub
push
add
push
inc
sub
hlt
or
in
fisttpll
cmp
mov
sbbb
pushl
popf
sbb
dec
enter
jne
clc
mov
pop
jmp
lea
and
sti
adc
add
ja
scas
xchg
pusha
ljmp
cwtl
jmp
pop
cmp
ja
adc
test
pop
inc
adc
and
insb
adc
mov
mov
or
add
movsl
jg
pop
add
sahf
mov
jo
pop
dec
mov
das
ja
jne
mov
dec
cmp
jge
mov
dec
dec
lret
mov
dec
jle
jno
in
mov
inc
rorb
inc
push
in
mov
addl
cmp
jbe
jl
lds
ret
add
add
out
xchg
push
hlt
add
pop
dec
jg
in
mov
ss
cmp
aam
add
lcall
outsl
xor
out
frstor
lods
ficoms
push
pop
xor
lcall
and
push
cmp
push
pop
test
das
mov
adc
rcrl
or
mov
sub
xorb
add
push
push
mov
iret
sbb
int
inc
push
xor
faddl
mov
or
push
sbb
add
sub
out
or
push
data16
enter
push
pop
andl
cmp
or
sbb
loopne
pop
add
movsl
arpl
lea
adcl
adc
rcr
or
or
testb
adc
loopne
mov
ret
or
rcrb
movsb
adc
lcall
pop
mov
cwtl
mov
rorb
add
sbb
loopne
daa
pop
sbb
icebp
sub
cmp
and
or
jb
pop
and
test
rorb
jmp
add
xor
int
test
lods
adc
mov
hlt
xchg
adc
jmp
shl
fistps
jmp
push
jae
push
sahf
mov
xor
ss
rorl
add
ret
or
das
call
dec
bnd
rcpps
or
cmc
jmp
testb
add
xor
pop
dec
or
in
dec
scas
add
jns
push
imul
addl
and
pop
mov
sbb
repz
repz
dec
dec
push
push
push
xchg
mov
xor
lds
and
fiadds
lea
jg
ret
jge
imul
shl
pop
jge
inc
sub
push
das
adc
mov
adc
mov
inc
lods
insl
test
fdiv
roll
add
and
inc
call
pop
andb
jmp
add
xchg
notl
test
mov
adc
andb
xchg
adc
rcrl
mov
sub
dec
jae
sbb
stc
mulb
dec
adc
inc
jmp
subb
or
xchg
hlt
lret
sbb
je
ret
mov
pop
jmp
stos
add
daa
and
mov
pop
and
sbb
and
mov
aas
les
pop
lret
je
cmp
je
out
pcmpeqb
push
add
sub
dec
sbb
clc
aaa
adc
popa
pop
rcrl
jmp
push
add
insl
inc
mov
push
pop
mov
dec
add
sub
mov
ds
je
mov
shl
and
outsb
hlt
fdivp
cli
dec
or
testb
les
or
ret
or
push
and
mov
pop
mov
sub
les
aaa
push
jecxz
loop
mov
aaa
push
cmpsl
cmp
pushf
xchg
sub
jne
push
add
inc
imul
fsub
mov
les
jmp
dec
or
mov
out
repz
or
in
mov
pop
or
or
in
dec
pop
mov
jne
in
je
icebp
add
xchg
call
loopne
test
jne
adcl
jbe
dec
jmp
insl
adc
jo
push
dec
jne
sub
mov
js
sub
enter
and
jle
lea
push
daa
outsl
or
sbb
out
dec
sub
repz
and
dec
pop
dec
xor
movsl
in
lds
fistpll
lret
iret
or
dec
lret
pusha
inc
insb
pusha
imul
push
mov
fbld
pop
inc
pop
cmp
cmp
xor
or
sbb
adc
add
leave
hlt
in
leave
int3
adc
fists
fadd
cmpsb
sbb
jo
in
pop
mov
lret
pop
sti
into
and
lret
call
lret
enter
lret
pop
sub
adc
lret
mov
cmpsb
imul
pushf
movsb
lods
and
mov
mov
lret
fimull
call
insb
pusha
or
fistps
insl
cwtl
push
push
and
adc
sub
in
add
sbb
rorb
xchg
xor
sbb
outsl
add
aaa
add
loope
rorb
rolb
and
movsb
jg
jl
xor
test
daa
jle
popl
pop
jne
push
jb
cmp
jne
push
adc
cmpsl
test
jnp
add
inc
mov
clc
or
jmp
cltd
push
push
push
push
adc
cwtl
adc
jle
and
adc
shld
test
ret
push
rcl
and
shl
clc
icebp
and
push
je
mov
int3
and
loope
divb
test
jne
lock
add
add
sub
cmc
jnp
or
push
out
adc
notb
stc
add
push
cld
je
and
jge
add
and
add
out
push
sub
xchg
sbb
jg
fildll
lcall
add
xor
push
push
jl
sbb
lds
pop
std
inc
or
int
xchg
lcall
xchg
pop
jo
and
mov
testb
testb
or
cmp
jl
xor
xlat
mov
and
add
daa
inc
cli
sub
mov
or
lds
adc
push
jle
bnd
push
ja
imul
dec
stos
jo
push
inc
and
cmp
outsb
add
test
mov
cmp
std
leave
mov
xchg
or
mov
mov
xchg
aas
add
cs
addr16
mov
push
jmp
inc
es
arpl
movsl
nop
add
add
xchg
xor
shll
test
aaa
pop
mov
test
sbb
mov
push
pusha
mov
and
mov
xchg
pop
loope
xor
sub
push
dec
add
mov
push
add
stc
dec
mov
sub
sbb
cmp
jg
inc
jmp
popa
cmp
inc
pop
xchg
jnp
dec
add
pop
push
repz
dec
lock
fnstenv
arpl
and
inc
es
and
xlat
add
ret
mov
xchg
jo
sti
sarl
test
mov
cmp
mov
js
dec
leave
pop
pop
pop
int3
cmp
sub
sub
sbb
add
add
jne
adc
dec
mov
fdivrp
push
insb
cmp
or
adc
push
sub
out
sbb
add
mov
lods
imul
and
nop
scas
lods
jne
adc
dec
iret
and
out
fcoms
cmp
push
dec
ja
out
jmp
push
add
icebp
pop
sti
mov
rcll
push
push
xchg
pushl
sbb
sbb
sarb
cmp
jl
push
in
arpl
sti
jb
cli
daa
enter
adc
add
pop
in
repnz
push
xchg
mov
xchg
push
repz
adc
aaa
jne
xor
xlat
push
idivl
rcrl
sbb
filds
push
mov
add
push
jg
andl
sti
mov
insb
xchg
or
and
mov
imul
push
sar
xchg
hlt
ljmp
stc
push
add
lea
negl
lret
call
push
sbb
push
pop
sub
add
adc
stc
jmp
sbb
cmp
add
mov
xor
int
cmp
jle
sub
jmp
adc
outsl
sbb
mov
mov
cmc
sub
popa
je
pop
dec
insb
ficoms
int3
push
loopne
sub
sub
das
leave
in
std
adc
mov
pop
or
ret
jns
add
sahf
dec
sbb
adc
and
inc
and
push
push
jp
cli
adc
rolb
or
nop
dec
mov
jbe
shlb
or
aas
or
push
sub
or
decl
or
fldcw
lods
js
adc
xchg
decl
roll
in
movsl
ret
or
pop
add
add
xlat
mov
out
fistps
add
add
or
add
add
add
in
or
push
mov
mov
out
mov
sbb
ds
xrelease
unpcklps
dec
sbb
comiss
or
pop
pop
js
test
out
pop
orb
test
pop
mov
mov
push
hlt
jmp
rolb
add
loopne
ror
and
ret
sbb
lret
mov
bswap
mov
cmc
push
push
testl
jo
or
dec
add
add
jne
or
ret
push
adc
add
add
cmp
pop
jnp
xor
movsl
cltd
adc
or
shl
std
xchg
es
not
test
jne
push
add
lea
addl
and
and
daa
shlb
bound
rcrb
js
lock
pop
pop
push
mov
fstpl
dec
js
ss
es
xor
or
mov
pusha
sbb
add
pop
add
adc
int3
ret
pop
cltd
addr16
jecxz
ss
cmp
out
js
and
repnz
jns
test
outsl
adc
mov
outsb
add
ret
jle
push
push
sbb
daa
mov
mov
push
aas
and
clc
in
mov
std
enter
nop
push
mov
stos
loope
xchg
aaa
mov
or
sub
ret
pushf
adc
in
nop
mov
dec
fisubl
or
in
aad
adc
xor
push
je
add
sbb
cmp
pop
cmp
sub
not
dec
daa
clc
shll
mov
call
dec
imul
fldl
cmp
inc
lock
shl
push
cwtl
cmp
jl
cmpb
adc
fwait
pop
cmpsb
nop
cli
mov
add
and
rorl
mov
mov
cmp
pop
xor
push
or
loopne
hlt
add
sub
jecxz
mov
jmp
aas
cmp
jle
jno
sti
add
push
call
out
mulb
mov
and
testl
call
inc
adc
and
mov
push
cmpsl
push
sub
loope
jge
in
push
jmp
cmp
jg
sub
adc
fildl
lods
lret
rcr
shl
int
pop
jl
movsl
add
orb
dec
mov
mov
aaa
inc
push
iret
cmp
andb
gs
jg
add
inc
ss
aaa
adc
daa
loope
xor
notl
outsb
icebp
sar
or
or
jnp
xchg
cmp
xor
sbb
xor
shrb
dec
push
outsl
dec
jecxz
add
shll
clc
loopne
test
adc
pop
adc
mov
cmp
or
jle
push
xor
or
jle
sti
xor
mov
xor
mov
inc
xchg
insb
pop
push
inc
decl
adc
adc
mov
fucomi
cmc
mov
pop
incl
icebp
xor
aam
test
add
shlb
test
nop
jp
xor
sbb
aas
jge
filds
movsl
sub
and
sar
mov
fidivs
adc
mov
fbld
inc
or
mov
cmp
mov
mov
mov
shl
iret
inc
ret
cmp
and
clc
rolb
setl
popa
fs
je
jecxz
mov
sahf
inc
xorb
and
add
rcrl
add
or
jmp
dec
add
aam
jp
adc
enter
outsb
ljmp
into
out
lcall
add
add
mov
shr
or
lea
mov
jl
cs
jmp
and
iret
cltd
dec
or
pushf
jb
cmp
dec
ja
add
movzbl
or
iret
les
inc
lahf
add
ficoms
loopne
and
and
sub
fistpll
je
adc
xchg
add
push
xchg
mov
add
jmp
jne
mov
dec
filds
or
push
xor
call
jecxz
mov
and
arpl
pop
adc
push
cmp
sahf
adc
mov
cld
icebp
loopne
jns
lock
into
ja
push
movsb
jecxz
sbb
cmp
xor
cs
aad
sub
jo
dec
cmpl
inc
adc
push
loopne
pusha
loopne
push
jne
lock
cmp
add
push
rorl
push
jmp
pusha
cmc
sbb
add
subb
lret
inc
das
testb
ljmp
fiaddl
jge
or
pop
inc
pushl
xor
pop
andl
or
mov
lret
or
sbb
pop
adc
lock
stc
imul
lods
inc
or
jmp
les
nop
adc
xlat
add
outsl
loopne
inc
pop
cwtl
fldl
lock
ljmp
or
add
cmp
jge
push
push
popf
sub
add
mov
lahf
xchg
sbb
xlat
andl
movsb
inc
pop
fwait
mov
lock
filds
shll
mov
mov
pop
adc
neg
sbb
pop
adc
inc
adc
lock
mov
mov
or
push
jb
jmp
add
lcall
mov
sbb
sbb
xlat
inc
loope
fcomps
inc
bound
inc
inc
aam
ds
push
xchg
pop
std
add
cmp
pop
jbe
and
inc
jbe
dec
xlat
push
divb
loop
aaa
lea
sbb
rcrb
xchg
xor
cmp
jae
loope
inc
pop
or
or
push
or
jl
aaa
pushl
or
pop
dec
sub
xor
add
inc
or
lcall
dec
and
jne
xor
cli
add
add
xor
cmc
jmp
scas
icebp
mov
xlat
mov
shr
shl
or
pop
fimuls
rcrl
push
jnp
bnd
mov
jmp
or
out
inc
fdivrs
push
aas
mov
mov
xor
fists
dec
inc
adc
jbe
cld
add
repz
movsl
movsl
push
cs
lods
in
into
or
jbe
int
xchg
shrb
dec
mov
hlt
outsb
mov
mov
mov
pop
inc
xchg
arpl
pop
cmp
lds
mov
add
rorb
adc
loope
orl
add
pushl
pop
mov
mov
psrlq
jmp
les
loop
pop
pop
data16
xchg
test
mov
add
rcrb
lret
outsl
cmp
aam
xchg
mov
in
mov
cwtl
and
das
fnsave
inc
jmp
imul
fsts
or
xchg
pop
test
mov
cmc
sti
sti
xor
cmp
pop
push
rol
cmp
repz
jge
add
nop
xor
and
int
or
aam
xor
pop
addr16
outsl
add
lcall
sbb
pop
adc
std
xchg
jl
mov
lret
out
fldcw
mov
or
push
inc
enter
jle
jle
arpl
insb
mov
xchg
sti
dec
push
paddusw
int3
inc
dec
or
add
pop
push
lcall
popa
fistl
cmp
adc
inc
cmp
push
jmp
push
add
nop
out
inc
jge
sbb
pop
movl
jg
xor
push
jmp
adc
test
jmp
in
or
loope
adc
mov
inc
cmpsl
or
fistpl
into
or
and
and
jb
lea
sbb
adc
jnp
imul
shl
add
mov
test
jl
push
dec
mov
or
adc
jmp
mov
pop
js
push
sub
sub
adc
mov
int3
jl
sub
pop
dec
pop
decl
insl
mov
and
fiadds
xor
leave
cmc
movl
je
shr
or
xchg
sub
jg
mov
rcll
xchg
outsl
xchg
inc
inc
cmp
push
cmp
or
xor
call
xchg
cld
jbe
cmpb
jl
incb
hlt
mov
loope
jbe
inc
dec
adc
jge
cld
sbb
dec
add
xor
pop
test
sub
mov
jae
out
push
sub
jge
add
loopne
lret
repnz
sub
sbb
sub
cmp
cmpb
popa
mov
rol
adc
dec
sub
in
aam
xor
mov
add
add
and
jno
cmp
loope
mov
fdivrp
ljmp
jns
xchg
ret
mov
xlat
push
jb
jno
hlt
cli
push
insb
insb
jmp
adc
in
push
into
cvtps2pi
and
lds
jno
mov
or
sbb
inc
or
adc
fisttps
insb
pop
jne
push
inc
loopne
lds
cmpsb
imul
adc
xchg
inc
xchg
inc
subl
mov
movq
test
push
movb
in
lcall
ljmp
in
out
sti
out
aas
imul
addr16
add
mov
push
pop
mov
adc
andw
xor
add
jmp
ja
add
fcom
xchg
jp
test
adc
sub
cmp
ret
maskmovq
call
in
enter
cwtl
xorb
dec
or
jne
push
and
sbb
or
lea
inc
sti
lods
xchg
shlb
mov
push
add
inc
lds
mov
iret
inc
jmp
dec
mov
mov
pushw
aas
cmp
or
mov
dec
mov
lea
pop
les
sar
repnz
cmp
lock
cmpl
aas
jb
inc
xor
mov
xlat
mov
sbb
xor
jo
in
jge
push
fnstenv
sbb
aam
and
jle
jmp
pop
sub
and
clc
cli
sbbl
mov
lds
mov
lods
cvtdq2ps
neg
mov
jle
cmp
jmp
repz
mov
fs
push
inc
mov
push
mov
mul
or
and
xchg
xchg
stos
xchg
je
mov
rorl
sub
fistps
and
xorl
mov
arpl
add
leave
mov
popl
stc
xor
xor
pop
fs
jmp
dec
inc
ljmpw
add
ret
sub
mov
andb
mov
pop
jg
loop
fsubrp
aad
lods
pop
hlt
flds
sbb
xor
xor
and
or
scas
in
and
push
rorl
icebp
inc
lods
jo
mov
push
cld
pop
imul
or
clc
das
mov
adc
or
cld
xchg
xchg
add
sub
cs
movsl
xchg
jae
mov
jp
pop
ret
popf
lea
mov
and
and
fimull
pop
add
and
cltd
sar
jo
sahf
mov
loopne
aam
xlat
aas
sbb
fcoml
push
daa
pop
adc
je
adc
cmp
add
nop
inc
notb
xor
imul
int3
das
push
push
loopne
bound
jecxz
loopne
rorb
test
sbb
ja
pop
js
push
int3
mul
and
inc
sub
mov
ret
and
fbld
and
jae
adc
jg
lods
cli
std
mov
add
push
cmp
outsl
popa
lock
mov
inc
pop
ja
cmp
pop
xor
sub
cmp
fldcw
stos
insl
enter
push
cmp
cmc
loope
out
cmp
das
adc
into
jmp
push
dec
into
dec
cs
ds
lods
or
popa
rcrl
loope
sarb
dec
aam
sub
sub
ret
jne
adc
add
mov
cmp
jno
loop
and
inc
xchg
mov
inc
mov
hlt
add
jne
mov
adc
mov
pushf
sbbl
mov
jle
test
cmpsl
and
dec
outsb
cmpsl
adc
or
fldt
gs
inc
sbb
sbb
faddl
sub
sub
in
adc
loope
in
mov
loop
mov
std
mov
shr
sbb
sbb
xor
push
adc
sbb
push
insl
pop
or
push
dec
sbb
out
jmp
and
jmp
loop
dec
les
push
fidivs
fdivp
ds
or
popa
push
pcmpeqw
or
inc
std
pop
faddl
sbb
fistps
fdivrl
ret
pop
add
loopne
dec
dec
pop
mov
or
xchg
mov
cmp
je
jge
xor
aaa
mov
or
arpl
mov
inc
inc
scas
cmc
hlt
jo
cs
leave
addl
pop
mov
in
test
cmp
rcrl
pusha
cmc
lea
jg
sbb
push
rdrand
fwait
jle
mov
add
es
enter
or
les
sbb
pop
jne
push
mov
hlt
inc
push
xor
pop
sub
jmp
cmp
xor
push
fiaddl
inc
leave
jg
jae
add
mov
cmp
jle
push
or
sub
mov
mov
mov
shl
push
dec
jno
add
mov
push
add
xchg
sahf
sbb
xor
inc
xor
pop
mov
jle
jne
jg
cmpsb
xchg
into
es
mov
push
out
xchg
movsl
push
inc
imul
add
cmp
je
daa
popa
add
in
pop
sbb
and
pop
or
cmp
jbe
inc
push
push
insl
push
adc
and
or
movsl
popf
xchg
sbb
mov
inc
imul
cld
subl
or
cmpsb
cmpsl
push
or
iret
add
dec
fwait
push
or
and
jp
ja
inc
cmp
dec
inc
mov
mov
xor
pop
jns
xchg
out
repnz
xchg
fdivl
cmpsl
adc
mov
or
loopne
fwait
mov
push
sub
sbb
movsl
aas
or
inc
mov
jl
aaa
xor
push
js
jno
leave
adc
pop
std
rolb
cmp
jl
fwait
sete
cmp
rcrl
fisubrs
rcrl
daa
sbb
cmp
hlt
adc
mov
test
add
mov
push
mov
cmp
adc
les
adc
dec
ds
decl
jae
jl
cmpl
ds
xor
xor
lea
js
lea
jne
loope
inc
jmp
jo
jo
ret
std
insl
loop
sbb
cmp
xor
testl
jp
fdivrp
inc
fcmove
test
fwait
or
lods
xchg
push
or
ss
jmp
fs
popa
pop
je
and
add
lcall
cs
xorb
ja
in
pop
sub
pop
inc
pop
sbb
das
xor
fistpl
fcomi
shll
fcom
sbb
ret
fnsave
test
test
adc
inc
sub
stos
std
add
add
dec
test
call
shrl
sub
sub
ret
adc
add
cmc
in
leave
xor
ret
cmp
xor
das
je
mov
lock
add
fcoml
add
jp
sub
out
xor
pop
lods
daa
dec
fbld
adc
or
mov
xor
call
jg
fdiv
mov
movntq
adc
jnp
push
push
sub
in
ss
cmp
ror
xchg
mov
mov
fs
shrb
lock
jg
aas
jnp
jmp
and
cmp
or
jmp
sbb
xorb
jl
sub
cmp
rcrl
push
push
cmp
sbb
or
mov
add
in
cmp
or
jbe
cmp
aaa
cmp
sbb
pop
xor
cmp
ja
or
aaa
ds
ret
and
add
pop
add
std
cmp
cmp
je
jmp
jl
add
or
inc
stc
sti
xchg
or
pop
inc
push
inc
mov
pop
arpl
lock
xor
xchg
or
adc
xor
popa
int
ret
or
leave
int
fistl
cmc
cmp
adc
push
dec
mov
leave
loop
push
lcall
dec
mov
add
mov
or
repz
leave
loope
call
pop
filds
mov
fs
push
mov
xchg
and
push
mov
enter
jne
pop
fists
xorl
fbld
loop
cmp
jbe
add
lods
xchg
cmp
shlb
or
cwtl
xor
xchg
divb
js
in
mov
sbb
inc
cmpsl
xor
push
jne
xlat
mov
mov
sbb
lahf
fdiv
xor
fidivs
push
stos
rorb
icebp
inc
lret
add
por
xchg
cmc
cmp
push
aam
lods
add
fists
adc
and
push
in
gs
push
pmulhw
jb
cmc
or
icebp
test
adc
sar
xchg
jno
stos
std
push
pop
or
push
push
adc
loope
xor
pop
and
jne
ds
cld
push
add
sbb
dec
out
gs
or
adc
add
pop
jle
xor
cmp
enter
push
dec
add
loop
mov
sbb
repnz
in
sbb
fadds
adc
sbb
jbe
xchg
sbb
pop
push
repnz
lret
jge
mov
or
int3
jnp
test
subl
test
roll
test
mov
or
mov
push
cmp
ffreep
aam
lea
insl
sbb
dec
xor
daa
sbb
fsubr
sarb
jle
sbb
xchg
sahf
test
mov
dec
and
cmp
call
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficompl
jmp
mov
push
movl
imul
std
in
leave
mov
add
insb
push
arpl
ud0
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
shrb
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
ficoms
push
xlat
enter
call
mov
and
mov
cltd
xchg
mov
mov
or
or
and
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
add
call
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
incl
test
xchg
sbb
push
sub
insb
fs
add
hlt
call
imul
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
out
push
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
call
movsb
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
decl
stos
leave
jl
fnstsw
add
daa
adc
or
and
test
or
jmp
lahf
in
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
push
cli
mov
icebp
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
ss
sbb
push
imul
aam
loopne
lcall
pop
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
fmuls
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
dec
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
inc
sub
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
sar
incl
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
dec
movsb
ds
jo
lret
pop
or
adc
call
imul
push
js
or
push
addl
inc
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
lock
aaa
push
scas
mov
fidivrs
mov
jmp
inc
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sti
out
add
add
add
push
push
add
push
add
fucom
std
push
add
add
add
and
cmp
pop
fwait
mov
decl
add
xor
push
push
pop
push
and
add
pusha
push
push
jo
js
pop
sub
add
divb
sub
outsb
add
insb
add
icebp
sub
insb
insb
adc
std
lcall
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
cs
push
push
inc
push
push
and
and
xchg
mov
outsb
xor
push
push
jg
mov
jo
je
mov
push
sti
jnp
cmpb
inc
dec
jae
jb
arpl
jae
jb
gs
je
jb
pop
cmpl
sbb
je
dec
inc
push
dec
shll
mov
sub
add
inc
imul
shll
jge
mov
sbb
or
push
dec
dec
inc
sbb
xlat
dec
sub
push
xor
cmp
sub
insb
je
sti
jne
push
imul
sbb
mov
outsl
dec
aaa
outsb
outsl
je
or
push
and
popa
arpl
out
insb
mov
jno
pop
jnp
jg
outsb
outsl
ss
xor
xor
ja
and
jb
inc
addr16
arpl
enter
arpl
insb
push
mov
out
jge
gs
das
mov
mov
mov
xor
out
outsl
jo
mov
jnp
loop
add
arpl
fs
lea
cltd
xor
and
xor
cld
test
jb
pop
insb
outsl
arpl
popa
sub
xor
pop
add
add
sbb
std
andl
insl
insl
pop
addr16
lahf
and
mov
pop
push
cmp
push
iret
lret
fisubs
push
jae
push
xor
pusha
fnstcw
fcomp
outsb
addr16
and
decl
shll
mov
imul
push
cmp
jb
mov
jnp
jns
or
inc
sbb
lret
sbb
and
cmp
cs
insb
xor
pop
imul
repnz
push
push
std
movd
xor
gs
or
inc
jb
push
popa
out
jge
cmp
outsb
xchg
jecxz
xchg
lds
mov
dec
add
gs
xor
fbstp
inc
aas
xchg
push
pop
pop
inc
gs
popa
in
test
jbe
add
jo
mov
push
shll
in
jg
sub
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
add
subl
das
ds
push
lret
inc
lcall
icebp
lret
xchg
lret
xchg
icebp
inc
repnz
repnz
cmp
push
lcall
push
push
inc
pop
aas
leave
add
das
inc
mov
lcall
leave
roll
pop
or
inc
outsl
push
pop
cmp
dec
rclb
mov
xor
and
and
jae
arpl
cs
push
outsb
fs
pop
cmp
fs
outsl
jae
jb
fildll
andb
pop
popa
arpl
das
or
lahf
divb
outsb
iret
dec
inc
dec
push
jo
add
inc
and
negb
je
mov
outsl
pop
pop
dec
push
cmp
inc
fcmovb
mov
je
fs
sbb
jmp
lahf
outsl
js
ud2
cmp
cltd
push
mov
sub
orl
fsubs
inc
sbb
fs
inc
mov
xchg
dec
outsb
jbe
addb
adc
outsl
clc
repnz
lock
outsl
jo
sub
imul
and
addr16
lds
lods
pusha
gs
push
pop
dec
add
inc
add
or
push
ret
jno
add
ret
cmp
adc
lea
data16
or
or
es
pop
xchg
outsl
or
inc
push
inc
pop
daa
jo
xor
xor
or
jb
xor
xor
jae
jb
xor
je
jb
jb
xor
jb
jb
aaa
aaa
ja
jb
xor
cmp
rcrb
jb
jns
xor
xor
repnz
jp
xor
xor
xor
shlb
aaa
jns
jle
push
xor
and
mov
inc
xor
and
in
and
es
push
jns
xor
pop
es
fidivs
pop
aaa
pop
es
repnz
pop
sub
pop
xchg
sub
sub
inc
xchg
pop
or
add
adc
mov
imul
push
ds
add
add
arpl
push
aas
mov
out
adc
dec
imul
adc
daa
fistpl
outsl
cmp
jnp
or
daa
int
popa
popa
push
cmpsb
cwtl
add
adc
daa
inc
adc
arpl
inc
addr16
sub
dec
inc
adc
daa
dec
imul
dec
insb
adc
xor
pushf
cmp
daa
and
dec
xchg
adc
mov
inc
arpl
add
adc
scas
inc
mov
daa
dec
outsb
adc
daa
dec
insl
adc
int
sub
mov
daa
ds
xchg
aas
fcompl
or
pop
inc
push
push
dec
pop
push
push
push
dec
ret
fimull
or
in
or
push
push
sti
popf
mov
sbb
dec
pop
or
ja
dec
dec
push
or
and
xlat
fdivrs
dec
dec
dec
inc
pop
or
push
shll
or
cs
push
fcmove
add
dec
inc
pop
or
ja
inc
dec
or
and
dec
inc
inc
push
pop
or
popf
lahf
mov
dec
daa
push
inc
dec
or
sub
jns
inc
dec
push
sahf
or
nop
dec
dec
loopne
xchg
or
and
adc
push
insl
and
and
mov
fmull
xor
or
sbb
xor
sbb
arpl
fs
inc
es
xor
data16
sbb
or
fistpll
dec
cmp
call
aaa
dec
inc
pop
dec
dec
inc
pop
and
in
cltd
push
add
cmp
out
dec
mov
xor
adc
mov
inc
jne
data16
insb
sahf
ret
insb
xor
inc
push
loopne
out
lds
mov
fbstp
js
cs
outsl
addr16
pop
lcall
sbb
and
nop
and
pop
or
inc
sub
nop
and
sbb
pop
sbb
nop
cmp
or
leave
pop
inc
xchg
cs
jne
push
pop
sub
or
inc
enter
enter
pop
test
inc
sub
sub
pop
xor
inc
enter
adc
test
and
push
jnp
imul
and
and
and
pop
enter
sub
inc
enter
pop
cmp
aas
daa
and
adc
push
aas
test
cs
and
dec
das
and
xor
or
movsl
adc
dec
jne
das
bound
pop
das
or
and
xchg
jns
js
and
or
inc
and
jns
das
pop
enter
and
cld
inc
inc
dec
gs
dec
dec
fwait
mov
jno
and
add
inc
dec
pop
repnz
outsl
cs
push
inc
push
outsl
jo
jb
mov
outsb
and
jb
notb
and
popa
je
jb
push
push
add
and
push
inc
push
push
jo
jns
insb
pop
push
jnp
pop
add
dec
das
fmuls
nop
fistps
arpl
cs
dec
dec
das
pop
inc
mov
inc
outsl
outsl
imul
add
push
push
sahf
inc
or
add
dec
push
and
inc
inc
xor
dec
arpl
mov
pop
push
jne
jo
arpl
or
sub
fcomps
cmc
adc
sub
ljmp
push
inc
dec
outsl
arpl
cmp
mull
addl
scas
rorb
push
mov
add
test
cmp
rclb
rclb
add
mov
pop
inc
rolb
adc
adc
and
int3
pusha
add
arpl
add
pushl
inc
and
std
int3
inc
fs
mov
pusha
pop
or
fnstenv
sahf
jl
cmp
adcb
cld
sub
adc
orb
std
fcoms
addr16
test
or
pusha
fiadds
jo
push
push
add
jg
add
ret
ficoml
xor
sub
add
or
enter
fdivrs
pop
mov
sub
pop
xor
stos
pop
movsl
inc
xor
cmpsb
movsb
lods
hlt
inc
xor
out
mov
nop
leave
ss
add
add
dec
mov
inc
and
mov
incl
add
dec
pop
data16
or
adc
clc
lods
rcr
push
sbb
push
hlt
call
aaa
jo
cwtl
xchg
cwtl
dec
rclb
test
nop
xor
adc
add
inc
adc
adc
out
shlb
and
and
pop
add
cltd
icebp
mov
jp
add
add
xor
dec
repnz
or
xor
dec
adc
cmovbe
lds
sbbl
repz
add
push
pop
cli
push
xor
test
movsb
xchg
mull
out
mov
aaa
jmp
sub
add
sub
jmp
ja
push
pop
pop
inc
in
fldl
loopne
jg
xchg
add
lahf
jne
add
mov
dec
jae
cmp
jo
add
jecxz
outsl
imul
add
add
sahf
xorb
das
push
shrb
gs
aaa
pop
ja
jg
pop
jo
jo
pop
gs
popa
jo
fldpi
pop
nop
call
pop
dec
xor
mov
xorb
loop
dec
jmp
sbb
cmp
adc
das
cli
idiv
test
icebp
xchg
adc
popf
shlb
jnp
icebp
stos
stos
outsb
out
ljmp
int
adc
sbb
jne
cwtl
bswap
icebp
cwtl
or
std
mov
iretw
mov
add
add
out
cwtl
icebp
fwait
cltd
popf
dec
std
adc
mov
lret
sbb
in
shl
cli
hlt
std
cltd
adc
test
movsl
mov
fidivrl
pop
fnstsw
movsb
adc
mov
adc
lret
out
mov
add
cwtl
pop
out
test
data16
ljmp
add
fsubl
lcall
ljmp
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
in
jle
adc
mov
xchg
rclb
test
fwait
push
xor
rcrb
decl
xchg
jne
sub
pushf
push
jbe
jns
push
iret
sbb
jmp
xor
pusha
xor
jle
pop
loopne
pop
dec
jge
in
xor
xchg
cwtl
ret
mov
inc
adc
xor
out
outsl
lcall
xor
xlat
lea
adc
shrb
shrl
inc
sbb
fdivrl
rol
adc
pop
dec
js
pop
mov
mov
sbb
adc
lds
arpl
sbb
adc
lcall
call
ret
iret
repz
and
jnp
push
repz
sub
pop
sahf
repnz
pop
adc
popf
xor
into
lret
xor
popa
sti
jg
ret
std
fstl
insl
cmp
pop
jnp
adc
mov
lret
movsl
fcos
pop
fbstp
iret
mov
stc
pop
fisubs
imul
lret
in
lret
jge
xor
test
enter
ret
xchg
ja
jmp
ret
and
in
leave
jmp
cli
fdivr
std
jmp
ljmp
jle
clc
in
cld
and
fcomps
insl
es
mov
testb
lock
jmp
jmp
das
out
in
rcr
fmul
push
repnz
in
sti
lock
lock
jmp
ljmp
cltd
add
call
inc
jb
enter
add
push
inc
div
jmp
dec
inc
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
xor
dec
inc
dec
dec
add
adc
fcmovu
jg
imul
jne
sbb
dec
dec
inc
xor
out
fcomp
xchg
sub
dec
dec
pusha
loopne
lret
cmpsl
movsb
das
lods
fs
jae
jecxz
pusha
rcr
incl
add
or
aam
adc
push
punpckhwd
mov
sti
add
orb
jge
cmp
outsb
mov
add
icebp
xor
adc
sbb
xor
cmp
push
add
pop
dec
push
in
or
ficoml
pop
popa
xchg
lahf
add
inc
flds
inc
push
add
in
push
adc
ds
add
andl
push
repnz
sbb
scas
xor
lret
jge
in
pop
mov
jbe
adc
inc
xor
ret
cmp
mov
push
add
push
out
xor
sbb
cltd
fs
mov
or
add
add
adc
push
jnp
push
sub
mov
xor
adc
insb
dec
cmp
or
dec
and
mov
pushf
and
bound
adc
es
pop
inc
mov
sbb
mov
ljmp
addl
sub
cmp
rclb
fwait
test
rorb
cmc
mov
inc
sub
hlt
vmwrite
mov
mov
add
adc
pop
in
sub
jno
sbb
xchg
adc
scas
jl
inc
das
adc
inc
mov
xchg
repnz
adc
stos
pop
cmpsb
jmp
inc
mov
add
decb
pop
sbb
inc
jno
int3
or
and
mov
mov
lds
lods
or
in
mov
test
add
and
add
roll
test
insb
lmsw
sbb
lcall
fmuls
and
adc
dec
adc
jbe
xchg
jecxz
add
outsb
cld
mov
jae
pop
and
cs
and
add
ja
imul
xchg
cmp
das
jo
fs
insb
ja
adc
xchg
add
jbe
outsb
arpl
shlb
push
push
xor
add
inc
or
xchg
sbb
scas
arpl
rcr
mov
es
jne
push
xchg
ret
xor
ds
daa
sbb
mov
int3
dec
and
imul
mov
sub
ljmp
inc
add
mov
sbb
xchg
sub
push
add
mov
arpl
adc
dec
adc
jmp
iret
and
xor
rorb
xor
bound
ret
xor
xor
cmpsl
push
push
dec
sub
xor
xor
je
push
outsb
dec
or
sbb
nop
mov
xchg
rorb
outsl
fidivl
out
and
adc
ss
xor
inc
dec
dec
xchg
clc
inc
push
pop
and
gs
xchg
push
xchg
and
jo
dec
push
push
mov
stc
jae
arpl
mov
aam
mov
arpl
sub
out
xor
or
pop
add
faddl
dec
dec
push
inc
push
test
js
and
movsb
addl
pop
jne
push
push
cmp
sbb
cltd
out
outsl
push
jns
lods
and
dec
das
mov
outsb
push
pop
push
inc
xor
add
and
and
test
jb
sbb
loope
cmp
loope
lock
loopne
push
inc
add
mov
roll
push
xchg
jle,pt
xor
push
je
jns
lea
or
xor
pop
insl
cmpsl
push
sahf
and
enter
xor
xor
fdivrl
or
fwait
pop
ret
xor
xor
jb
fbstp
sub
bound
inc
mov
lods
pop
mov
mov
inc
pop
ds
jb
jl
lea
dec
dec
dec
out
lock
jne
lret
pop
insl
jns
in
sbb
dec
popf
gs
or
lods
clc
mov
arpl
sub
jae
out
xor
adc
sub
jo
mov
mov
jp
pushf
js
inc
xchg
or
cmp
inc
mov
push
lods
inc
ret
mov
inc
mov
add
dec
push
and
sbb
sub
imul
daa
inc
mov
orb
sbb
and
push
push
fbstp
dec
cmp
lahf
lahf
pushf
stc
ds
cli
pop
and
and
add
push
outsb
das
mov
xor
jmp
das
push
cmp
cmpsl
inc
mov
sub
and
gs
push
adc
sub
outsl
adc
ss
dec
popa
sub
mov
mov
int3
push
or
js
inc
outsl
jne
xor
push
mov
push
out
sbb
movb
decb
fnstsw
sbb
inc
and
dec
push
mov
cmp
cmp
sti
leave
mov
sub
inc
adc
iret
ds
dec
inc
pop
adc
dec
dec
daa
push
shrb
clc
dec
push
dec
push
inc
les
call
std
fisubrs
enter
sub
or
repz
mov
sti
xor
inc
push
dec
subl
or
jmp
addb
and
lds
jl
dec
dec
inc
mov
addr16
shrb
in
imul
cmpsl
shlb
inc
loopne
cs
cmp
aad
cmp
dec
xchg
jae
rolb
xchg
aaa
fsubrl
sub
add
scas
xor
sbb
xchg
das
das
out
mov
xor
sbb
out
lods
or
idivb
xchg
xchg
xor
fs
or
inc
adc
or
inc
dec
mov
outsb
jo
mov
repnz
push
dec
or
lods
movsb
ret
mov
mov
out
dec
imul
push
adc
mov
and
push
adcl
sbbl
jmp
add
aad
mov
test
and
addr16
jne
sbb
fwait
xor
mov
dec
push
dec
jge
stos
mov
and
add
icebp
cmp
push
gs
gs
or
add
std
jno
fnstsw
or
mov
adc
adcl
les
add
in
movsl
adc
inc
bound
sub
pop
lods
inc
or
data16
and
jecxz
cmp
cmp
mov
mov
inc
push
call
mov
aaa
stc
push
or
jle
cmp
ja
add
xor
xor
adc
add
fidivrl
adc
andl
xor
push
add
adc
ja
or
mov
mov
xorb
mov
outsl
cwtd
and
push
loopne
adc
lock
insl
in
add
test
add
jae
sahf
and
popa
gs
imul
fnstcw
cmpb
xchg
push
xorb
add
add
push
jge
bound
fadds
sbb
sbb
popa
insb
push
sub
push
sub
cmp
dec
dec
jl
sub
ja
dec
or
and
jae
arpl
cmc
cmp
inc
aaa
push
arpl
jbe
lcall
push
imul
jne
pop
psubusw
sub
or
cmp
hlt
movsl
mov
lret
sub
push
ret
push
decl
nop
loope
push
adc
cmc
sub
mov
jg
inc
pop
and
arpl
push
frstor
or
mov
push
sbb
jae
pop
pop
xor
orl
lcall
pop
outsl
pop
or
outsb
xchg
push
mov
push
sbb
and
sbb
adc
push
pop
sbb
fistps
addr16
pop
idivb
lods
lea
adc
pop
test
gs
lds
loopne
mov
dec
pop
inc
push
das
arpl
pop
adc
nop
inc
insl
dec
mov
lods
outsb
and
lods
out
add
pop
test
cltd
push
pop
mov
dec
dec
inc
dec
push
xor
lea
inc
xor
pop
pop
pop
pop
les
and
dec
dec
popa
insl
pop
push
outsl
cs
fstp
or
inc
fistl
test
add
jg
or
dec
loop
ja
dec
rolb
adc
sbb
dec
insl
outsl
pop
pop
imul
and
dec
inc
pop
add
dec
pop
popa
mov
cmpsb
pop
ret
shll
pop
add
cmpsb
jns
xor
hlt
imul
imul
or
lods
mov
or
dec
sub
push
pop
aam
das
add
nop
sub
dec
pop
xor
jb
dec
push
cld
addr16
int3
mov
js
fs
xor
in
and
data16
pusha
sahf
sbb
inc
xor
gs
and
in
test
daa
xchg
sbb
fs
mov
and
fs
shlb
inc
cs
arpl
int
xchg
das
insb
fsubs
imul
das
add
popa
das
enter
cwtl
popa
je
in
inc
xor
hlt
pusha
xor
das
shlb
xor
nop
or
cmp
xchg
inc
call
movsb
xor
pusha
pop
dec
push
sbb
inc
jnp
loopne
mov
xchg
xor
je
insb
sbb
xor
loopne
iret
xor
xor
lods
pushf
mov
fs
shll
inc
xor
repnz
push
xor
clc
pop
enter
xor
add
es
gs
ja
xchg
stos
lock
test
scas
jg
movsb
add
push
inc
pop
popa
lock
in
jb
sub
push
push
or
jo
dec
imul
xor
outsb
arpl
lds
rclb
pusha
xchg
gs
shrb
ja
lea
push
push
dec
push
dec
pop
mov
out
je
ja
insl
ljmp
xor
bound
insl
jo
int
lods
pop
lods
xor
mov
icebp
sbb
inc
data16
aad
dec
gs
and
test
mov
dec
outsb
insb
lods
sbb
push
add
and
lock
add
addl
dec
xor
jb
pop
add
push
push
scas
dec
shrl
fadds
lock
push
icebp
gs
jb
or
dec
jne
notl
cmc
ja
fstpl
dec
pop
mov
push
fwait
les
sub
cmp
or
xchg
inc
mov
sbb
and
jg
xor
xorb
bound
pusha
clc
xlat
push
sbb
icebp
icebp
push
popa
adc
inc
pop
mov
sbb
pop
cmp
pop
sub
push
ja
push
add
ds
outsb
je
inc
xchg
iret
push
das
inc
push
inc
dec
push
dec
dec
inc
dec
inc
outsl
or
frstor
test
xchg
push
in
shll
incl
das
mov
jae
mov
jo
add
pop
in
adc
arpl
or
sbbb
sub
cltd
mov
xor
sub
dec
inc
inc
mov
movsl
pop
cmpl
xor
mov
xor
cmp
insb
scas
mov
pop
xchg
xor
dec
mov
std
inc
inc
dec
inc
push
pop
mov
sbb
outsb
inc
push
xor
shlb
adc
adc
bswap
jnp
add
jg
push
decl
push
jne
jae
imul
sub
xchg
dec
and
aam
outsb
pop
or
sub
mov
icebp
out
adc
cmp
cmp
push
xchg
fwait
mov
imul
mov
ljmp
addr16
push
lahf
add
pop
ljmp
inc
xchg
bound
ds
xchg
jae
imul
push
lahf
iret
inc
or
fiaddl
jns
insb
mov
ret
adc
movsl
dec
imul
outsl
pushf
mov
cmp
bound
fmuls
adc
pop
and
enter
pop
lods
xorb
fistps
mov
mov
arpl
inc
insb
mov
rorb
gs
inc
xchg
inc
pcmpeqb
lods
add
je
subb
cmp
cmp
pop
xchg
jmp
pop
shl
push
dec
dec
das
mov
mov
add
or
and
lahf
sub
sbb
fists
je
stos
test
xlat
lahf
out
je
add
mov
mov
pop
bound
cld
xchg
jb
bound
jno
mov
jo
dec
inc
dec
and
cmp
fidivrl
inc
push
push
push
push
pop
push
outsb
pop
scas
fs
popa
pusha
mov
pop
inc
jl
pop
inc
std
and
not
dec
test
jo
jae
push
arpl
adc
xor
inc
and
addr16
push
sbb
dec
or
sbb
sbb
pop
xchg
inc
data16
push
lahf
loope
xor
in
mov
mov
insb
add
lea
outsl
adc
dec
je
jle
dec
gs
and
addr16
imul
leave
jbe
stos
fistps
out
jle
xor
adc
mov
push
int
outsl
ret
jo
jbe
pop
push
mov
push
outsl
outsl
inc
imul
mov
sub
andl
ficoms
jbe
xor
jmp
jne
loop
push
daa
xchg
out
ja
ds
inc
insb
imul
push
xchg
lods
lock
cwtl
mov
sbb
pop
in
insl
aas
gs
jne
sub
lods
adc
aas
mov
insb
popa
stos
jg
pop
xchg
out
jns
mov
test
xchg
mov
pop
inc
pop
xor
dec
inc
pop
jae
jo
test
insl
mov
pusha
cmc
jno
jb
imul
faddl
gs
gs
addr16
xchg
ss
push
dec
pop
iret
mov
mov
mov
lods
sub
addl
or
insl
mov
arpl
test
add
push
push
sbbl
shrb
xchg
jp
cmp
inc
fsubl
btr
xor
ret
ds
push
das
sub
sub
jne
int
push
inc
inc
fisttpll
dec
flds
test
insl
inc
or
dec
es
sub
mov
out
bound
loopne
mov
pop
vpshab
aaa
xchg
pop
je
lock
jns
jmp
xchg
push
das
aaa
sub
or
daa
aaa
dec
arpl
inc
enter
mov
je
aaa
fsubs
inc
dec
dec
cs
cltd
mov
outsl
dec
add
das
jns
or
nop
fwait
mov
pop
xor
push
les
addr16
push
aam
scas
push
movzwl
jno
inc
dec
and
movups
loop
or
dec
das
inc
js
lock
aad
sti
add
sub
inc
dec
jo
jo
cmpb
fbld
sbb
xor
xor
push
dec
pop
adc
fildl
fstpl
bound
fmuls
pop
xor
mov
sub
js
push
scas
ficoml
sub
jbe
in
mov
insb
pop
and
add
arpl
push
dec
jae
push
pop
or
ja
daa
sub
mov
jo
push
pop
push
dec
mov
fcom
and
xor
das
sub
inc
fs
daa
test
pop
push
insl
jo
mov
mov
xchg
pop
int
sbb
push
loope
pop
movsl
push
pop
inc
outsb
loope
js
jae
popa
push
mov
adc
jnp
inc
aas
pusha
imul
and
cmpsl
enter
add
or
mov
insl
pop
sub
adc
sbb
iret
scas
pop
or
or
dec
lret
outsb
mov
outsl
bound
inc
mov
add
pop
push
outsb
lahf
popa
sbb
pop
inc
pop
dec
arpl
inc
movsl
jo
dec
dec
pop
inc
xchg
push
icebp
jg
xor
aas
imul
popa
das
xor
sub
sub
lret
jl
outsb
mov
push
lea
dec
jb
push
jb
inc
daa
push
fcmovnbe
inc
dec
and
roll
dec
fiaddl
and
gs
sbb
shrb
ja
jge
ucomiss
and
js
in
sub
xor
sbb
or
into
jno
adc
push
mov
xchg
iret
bound
fs
movsl
popf
jle
cmp
push
dec
xchg
xchg
fldl
xchg
leave
into
adc
xchg
xchg
mov
xchg
mov
or
mov
lea
push
fs
movnti
mov
jae
ja
imul
nop
pop
inc
lret
inc
pop
push
pop
add
out
mov
or
fs
mov
jo
movsb
sbb
mov
jbe
lea
sbb
dec
jae
push
push
dec
mov
inc
mov
int3
shlb
push
push
movsl
inc
pop
xchg
jge
mov
cmpsb
ja
xor
xchg
dec
bound
outsl
cmp
arpl
inc
inc
push
imul
lahf
inc
js
inc
insb
push
inc
sub
loopne
xor
insl
shr
pop
mov
insl
je
movsl
outsb
fisubs
xor
popa
inc
push
inc
jmp
push
inc
xchg
jae
or
inc
push
insl
ficomps
ret
outsl
scas
push
jae
cltd
cs
in
pop
sub
fadds
mulb
lret
dec
inc
sub
call
pop
add
inc
dec
fwait
add
iret
push
adc
arpl
sub
cmp
jne
jo
lahf
pop
mov
dec
fildll
pusha
dec
and
inc
push
cmp
mov
arpl
rcrb
dec
jno
data16
fisubl
jle
popf
fstpl
int3
sbb
adc
push
fs
scas
inc
dec
lods
pop
mov
xor
push
sbb
pop
push
pop
gs
push
cmpsl
and
in
inc
fidivrs
popa
jae
add
mov
sbb
jg
jl
imul
sbb
mov
add
lea
sub
lods
shrb
out
into
jmp
ljmp
or
jb
inc
mov
xchg
adc
das
mov
add
ret
lahf
sub
pop
in
jo
ret
aaa
add
or
xor
test
lcall
outsl
addr16
sub
cmp
scas
mov
mov
push
mull
push
jo
xor
inc
xchg
pop
insl
int
inc
sub
dec
mov
inc
ret
and
or
cmpl
push
es
xor
imul
pop
jno,pn
leave
movsb
aas
inc
imul
mov
and
push
or
scas
dec
xor
or
ret
scas
jo
sub
xor
xor
cmpsb
xor
test
das
lods
mov
pop
push
daa
xor
ss
xor
int3
insl
sub
ljmp
xor
pop
ret
addr16
xchg
cmpb
popa
and
mov
mov
fidivrs
je
gs
std
push
push
sub
jns
and
arpl
daa
mov
mov
into
icebp
jle
and
or
pop
adc
out
jmp
cwtl
and
and
idivl
or
and
pop
dec
xlat
mov
ds
bound
pop
dec
punpckldq
inc
dec
dec
mov
aaa
lods
cs
int3
adc
inc
popa
lods
fisttpll
sar
inc
push
push
and
cs
sub
cli
xchg
jo
jns
adc
popa
pop
push
fnstenv
inc
add
pop
dec
push
pop
mov
xor
out
cmpsl
push
add
push
adc
dec
cwtl
dec
mov
mov
pop
push
inc
push
xchg
adcl
repz
ja
or
inc
les
test
fisubs
mov
jns
mov
xchg
push
fsubrs
pop
push
xchg
aam
stos
cld
push
jnp
jl
push
cltd
gs
stos
test
insb
inc
sub
pop
adc
daa
call
cmp
insl
test
sub
push
outsl
and
mov
jbe
push
push
xor
xor
dec
dec
jp
das
mov
dec
inc
push
mov
sub
and
sarb
cmp
loopne
dec
or
or
mov
jne
sbb
sub
sbb
mov
mov
add
add
ds
push
les
push
imul
iret
sbb
jae
sbb
cmp
arpl
and
lcall
and
cmp
bound
fnstenv
add
pop
add
add
outsb
push
out
xor
adc
dec
adc
jae
xchg
mov
es
add
add
sub
pop
arpl
push
push
dec
mov
filds
cltd
cs
inc
add
fwait
mov
pusha
insl
push
jecxz
test
in
ror
push
push
dec
xlat
sub
and
ds
xchg
jo
mov
out
ds
pop
and
xor
sub
sub
inc
sarl
cmp
fildl
dec
inc
inc
sub
xchg
sub
or
icebp
xchg
fstpl
inc
repz
pop
mov
cmp
daa
and
lock
std
das
inc
inc
outsb
ror
push
mov
xchg
inc
add
xchg
inc
popl
mulb
arpl
in
mov
pop
push
arpl
adc
stos
push
arpl
xchg
aas
inc
pop
mov
cmp
das
push
xorl
inc
daa
js
add
jg
cmp
sub
cmp
sti
inc
je
add
movsb
popf
cmp
arpl
cmp
push
fsubl
push
push
or
js
scas
mov
push
fldl
call
inc
fistpll
jecxz
ja
fimull
outsl
jmp
add
push
jnp
loop
ja
popa
popa
sub
cs
adc
inc
dec
jne
loopne
pop
imul
push
orl
inc
inc
shlb
dec
xchg
mov
lret
and
addl
or
cmp
sub
pop
fsubrs
inc
arpl
lahf
inc
adc
xor
add
ret
loop
inc
sbb
mov
mov
rcrl
and
lds
cmpsl
inc
push
inc
or
add
inc
shlb
scas
es
or
out
jb
sbb
cmp
dec
inc
add
sbb
mov
mov
mov
lods
shlb
iret
cwtl
or
sar
push
roll
sub
jo
nop
dec
push
or
pushf
add
mov
add
fnstcw
mov
pop
add
into
push
adc
fsubr
adc
adc
movsb
outsl
lahf
popa
daa
test
je
sbb
sbb
inc
cmp
push
push
dec
add
cmpb
scas
mov
adc
add
aaa
sbb
ljmp
push
xchg
lret
adc
or
adcb
push
sbb
stos
jns
imul
sub
dec
fisttpl
mov
xor
xorl
incl
push
and
adc
xorl
cld
xor
xor
shrl
add
faddl
mov
dec
rcl
les
jg
imul
jle
dec
btrl
and
jae,pt
out
push
into
push
push
push
js
adc
lea
mov
cmp
insl
pop
mov
jl
ds
xor
outsl
inc
notb
push
sub
es
daa
or
aaa
mov
loope
mov
in
shl
insb
push
arpl
in
push
push
scas
aaa
sahf
mov
adc
cs
mov
adcb
or
dec
dec
lret
test
ret
and
dec
lods
and
xchg
imul
test
movsl
test
sub
mov
pusha
add
cs
add
and
ljmp
shrb
les
push
and
add
push
arpl
dec
push
shrb
xchg
bound
inc
mov
cltd
jno
pop
or
lock
sub
pop
fcmove
adcl
xlat
bound
jg
in
fsts
sbb
lods
nop
xor
aam
sbb
inc
push
dec
mov
mov
or
loope
or
xlat
jbe
lods
add
lcall
pop
adc
xchg
sahf
jno
mov
sbb
dec
imul
jbe
jecxz
sbb
sbb
test
cwtl
or
xchg
ja
out
mov
sbb
mov
int3
lret
arpl
push
inc
clc
add
adc
arpl
jg
xchg
orb
dec
mov
sub
inc
lcall
xor
test
pop
mov
add
test
ljmp
mov
pop
xchg
cs
roll
cwtl
push
push
mov
inc
mov
adc
xor
fdivrl
and
hlt
push
addr16
cmpsl
ret
push
adc
sbb
sbb
pop
sub
das
pop
push
sbb
cmp
imul
pop
pop
sbb
stos
aas
es
mov
mov
dec
jge
add
fsubrs
insl
adc
inc
push
aas
inc
subl
pop
add
or
and
xor
jl
ss
sarl
pop
pop
and
es
mov
loopne
daa
loop
cmp
fsubl
xor
jae
ret
sbb
lds
sub
mov
add
add
xchg
push
insl
mov
inc
xchg
push
aas
aaa
roll
lret
sbb
and
xchg
or
push
push
xor
les
cld
aaa
popa
js
data16
mov
jno
mov
push
test
imul
pcmpgtb
mov
nop
or
xorb
mov
dec
imul
xor
data16
outsb
xchg
orb
inc
test
push
cmpsb
insl
or
add
daa
inc
sbb
or
push
lea
dec
mov
add
ss
movsl
ret
mov
jne
fsubr
fldcw
sbb
add
cmc
and
nop
mov
mov
shll
es
addr16
out
sbb
jle
xor
lods
push
shll
pop
or
aas
sub
lock
xchg
lds
and
sbb
movsl
sarb
mov
cmp
adc
sbb
add
pop
in
jmp
or
outsb
mov
mov
adc
outsl
filds
adc
outsb
vpcomw
outsl
pop
arpl
jo
sarl
cmp
test
clc
adc
adc
outsl
lret
mov
inc
pop
lods
adc
outsl
jge
add
lock
jns
adc
insl
pop
les
insb
movl
pop
and
movsl
inc
xor
sbb
adc
dec
shlb
cmp
and
leave
jecxz
push
adc
test
sbb
cmp
rorb
xor
cmpsl
cs
sub
cli
repz
andb
movsl
into
rorb
jb
test
adc
das
inc
sbb
shll
mov
sub
fstpt
mov
cmp
nop
xor
cmp
sbb
pop
sbb
ret
addr16
test
pop
flds
sub
ss
add
rorb
push
mov
add
insl
and
mov
mov
inc
dec
cmp
or
aas
sbb
inc
cmpsl
roll
add
mov
pop
jae
xor
scas
sub
js
and
and
sub
push
std
inc
pop
pop
add
xor
xor
push
jg
roll
xchg
and
rorl
shlb
cmp
dec
aaa
and
jo
js
lsl
subl
jbe
lock
cmpsw
js
rcll
jnp
faddl
imul
js
inc
scas
push
add
mov
xchg
cmp
push
fsubs
lret
cmpsb
sbb
mov
lcall
aam
push
push
insb
data16
cmpsb
imul
xor
rcrl
jo
inc
mov
fiaddl
popf
fsubl
xor
int3
mov
insb
lcall
push
dec
rcrb
movsb
push
or
pop
push
scas
popa
adc
mov
sub
cmpsb
mov
inc
addr16
dec
mov
and
adc
pop
dec
scas
dec
push
add
dec
mov
push
hlt
cltd
call
xor
ror
mov
shll
js
cmpsb
or
insb
add
cmpsl
dec
shll
dec
cmp
dec
shll
xor
and
xor
shll
sbb
or
cltd
cwtl
push
fmull
aam
les
jl
mov
nop
dec
lods
movsb
pop
cmp
push
pushf
xchg
mov
adcb
shll
push
pusha
pop
dec
shll
sub
ss
shll
adc
clc
xchg
imul
fcom
es
shll
mov
xor
lods
movsb
pushf
xchg
shll
js
imul
push
imul
dec
roll
and
adc
xchg
cmpsb
imul
imul
rcr
adc
push
xorb
scas
fdivs
push
xchg
xchg
dec
dec
inc
xchg
lcall
cs
imul
lock
imul
push
fwait
rclb
mov
mov
inc
lods
mov
dec
pop
add
push
sbb
inc
add
jo
test
int3
cld
pop
js
jo
outsl
imul
add
pushf
cmp
or
fnsave
jg
arpl
bound
ror
fsubrp
xor
insb
mov
loope
in
mov
bound
xor
xor
add
pop
dec
es
mov
mov
bound
imul
aas
xor
arpl
pop
addr16
push
push
sahf
outsl
push
mov
popf
dec
addr16
bound
jbe
and
or
xor
idivb
divl
je
sbb
int
pop
push
sbb
out
sub
sbb
jg
sub
push
mov
ja
push
mov
cmp
call
push
jne
xchg
adc
xor
fisubrs
push
outsb
add
mov
outsl
xchg
sub
push
inc
bound
add
jp
in
push
cmp
mov
xor
push
push
insl
mov
mov
pop
fsubrl
imul
popa
shl
cmp
gs
mov
test
adc
pusha
imul
pop
push
aaa
rorb
xor
xchg
js
out
pop
gs
add
gs
xchg
xor
xchg
jge
insb
pop
jo
ss
pop
jb
mov
xor
test
cwtl
push
push
dec
mov
iret
insb
pop
adc
push
sahf
mov
push
outsb
aas
mov
push
daa
push
xor
xor
xor
divb
cmp
xor
das
inc
pop
pop
pop
pop
nopl
aas
push
fistps
stos
dec
jo
fists
fisttpll
mov
pop
pop
jbe
fs
mov
dec
inc
mov
or
je
popa
pop
cbtw
popa
subl
addr16
mov
xor
fisubrs
lds
lea
jne
add
xor
xchg
pop
es
outsl
fldt
inc
movsb
jmp
js
or
inc
xchg
jae
pop
in
push
sbbl
aaa
xor
cmp
pop
dec
push
xchg
push
dec
jne
mov
inc
mov
addr16
pop
sub
xor
xor
jmp
sub
cmp
aaa
xchg
bound
loopne
dec
addr16
rorl
mov
scas
in
and
aas
sub
shlb
ja
xor
cmp
cld
sbb
dec
and
cmpsl
cmp
jp
sti
pop
inc
inc
sub
jne
mov
mov
ret
or
add
hlt
mov
lret
pop
cmp
loopne
or
popa
dec
push
xchg
ret
aas
xor
xor
dec
gs
jnp
in
popa
outsb
or
adcl
ret
sbb
or
xlat
mov
and
and
cmp
das
repnz
das
das
pop
and
add
inc
pop
sbb
sbb
cmp
dec
add
icebp
jle
imul
sub
loope
jl
pop
pop
bound
ja
pop
jge
pop
jecxz
sub
jns
jbe
sub
outsl
out
sbb
adc
and
lock
pop
je
cmp
inc
loopnew
pop
jecxz
mov
mov
push
sti
adc
jo
mov
and
adc
std
fldt
bound
jo
js
inc
aam
rol
shlb
push
xor
ljmp
push
rcrl
aaa
xchg
fsubr
cmp
adc
or
xchg
and
je
insb
xchg
jb
fildl
push
push
xor
jo
les
ss
add
jnp
bound
insl
out
leave
addr16
outsl
popa
je
push
push
xor
push
mov
mov
push
dec
cmp
add
xor
or
popa
js
xchg
and
insl
sub
and
pop
mov
adc
or
cmp
inc
inc
pop
push
dec
dec
inc
dec
imul
xor
fistpll
popa
mov
xor
push
mov
mov
xor
dec
hlt
jecxz
mov
das
cwtl
sub
test
jo
cli
arpl
data16
imul
jnp
and
lret
add
aam
fistl
xchg
dec
jne
mov
ja
js
movsb
add
lret
pop
inc
cmpsb
cmp
mov
push
inc
dec
sub
int
pop
sbb
jb
jecxz
data16
mov
fs
inc
jae
bound
popa
lcall
adc
sub
movsb
pop
xor
testb
dec
and
into
mov
insl
sub
dec
nop
imul
inc
xchg
sub
pop
xor
das
xor
cmp
aaa
pop
ficoml
or
in
aaa
xor
aaa
adc
mov
inc
dec
mov
sbb
sub
cwtl
mov
cmp
out
aaa
mov
ss
push
jns
pusha
inc
sub
pop
outsl
test
or
xor
adcb
sub
mov
loop
add
outsl
addb
xor
adc
pop
into
add
rolb
pop
xchg
dec
push
inc
fisubrl
push
push
cmp
sub
lea
movsl
aaa
mov
in
outsl
xor
pop
or
jg
imul
pop
cs
sub
add
cmp
jnp
add
jae
insl
out
daa
cmp
sub
dec
add
pop
sbb
pop
push
mov
inc
xor
mov
dec
arpl
xor
sub
pop
sub
cmc
or
sbb
jo
sub
imul
jp
cmp
imul
jge
pop
cmp
pop
addb
sub
pop
leave
imul
bound
aam
cmp
imul
jb
lret
pop
sub
lock
xor
imul
loopne
or
stos
fs
addl
pop
lahf
scas
pop
adc
xor
sub
jo
aaa
jno
mov
push
dec
pop
imul
inc
ffreep
or
fdivr
adc
jmp
xor
jns
cmp
xchg
mov
scas
aaa
ret
xor
adc
data16
andl
fiaddl
das
pop
sbb
cmp
dec
mov
and
mov
add
rolb
inc
and
out
inc
push
inc
xchg
pop
and
xor
popa
sub
pop
fldt
sbb
sbb
shll
fldcw
loopne
rcrb
test
cmc
fildl
icebp
jp
andl
filds
inc
hlt
rcl
jnp
das
xchg
adc
inc
in
sub
or
jl
incl
sub
add
cli
inc
push
push
dec
pop
cmp
pop
pop
outsl
dec
or
lcall
sub
mov
loope
or
xchg
loopne
sub
ret
push
mov
sbb
adc
rcrl
or
xor
inc
mov
ficomps
imul
xchg
ret
addr16
or
popa
test
in
dec
mov
daa
xor
jno
adc
sbb
push
mov
pusha
or
iret
mov
rcrb
and
ja
add
add
cmp
outsb
push
dec
jno
and
test
push
xchg
test
add
pop
sub
rclb
sub
adcb
and
movsb
sbb
popa
movsl
lock
data16
loope
dec
inc
inc
pop
dec
push
arpl
mov
xchg
dec
je
xchg
mov
cmp
sub
popf
imull
bswap
and
nop
inc
mov
sub
mov
pusha
xchg
addb
push
mov
add
shlb
rcrl
push
pop
dec
inc
dec
mov
addr16
inc
push
push
inc
cwtl
sub
xor
xor
jge
xor
dec
outsl
mov
push
movsl
adc
iret
sbb
lock
mov
inc
push
add
add
divl
add
loope
ds
lret
cmp
mov
ret
xor
lods
lea
or
lods
jmp
hlt
test
rorb
xchg
push
and
sbb
mov
dec
lret
xlat
daa
icebp
jb
repz
cs
stos
in
or
mov
xchg
inc
and
push
daa
not
shl
adc
lahf
pop
scas
mov
mov
pop
jbe
mov
ja
and
ret
add
mov
mov
mov
hlt
xchg
fs
push
dec
add
dec
les
mov
inc
inc
mov
es
aad
push
ljmp
sbb
pop
ret
inc
inc
mov
shll
pop
sbb
inc
and
mov
inc
ret
or
movsb
dec
insb
inc
push
adc
fmull
push
and
or
fildll
fists
mov
stc
test
dec
add
arpl
adc
cmp
out
aad
test
mov
cmpsl
push
mov
ja
daa
inc
dec
dec
mov
fadd
mov
test
loop
addr16
inc
test
outsl
leave
push
test
iret
stos
dec
adc
aaa
jns
dec
mov
mov
inc
arpl
inc
xlat
cmp
fbld
sub
popa
ja
add
sub
inc
mov
pop
push
dec
dec
pop
and
into
imul
test
adc
inc
add
jp
sub
sub
inc
pop
mov
iret
push
dec
ret
jo
js
js
arpl
testl
repnz
sub
cli
xor
dec
sti
stos
fdivrs
or
ds
or
xchg
mov
sub
ss
mov
mov
mov
pusha
or
mov
inc
in
sub
add
cmp
mov
dec
xlat
pop
popa
pushf
inc
dec
gs
mov
ret
mov
pop
xor
dec
orl
fbld
out
mov
rcr
roll
fdivrs
and
sub
and
mov
pop
or
das
cli
and
cwtl
iret
xor
add
es
adc
iret
cmp
dec
pop
pop
aas
popa
scas
test
aas
and
out
inc
imul
fsubrl
pop
add
add
sub
and
fdiv
ja
push
insb
inc
pop
jne
mov
aas
int
sahf
fadd
ja
dec
jae
jbe
add
or
push
rorl
mov
aas
mov
sub
cltd
push
mov
out
pop
inc
sub
fiaddl
sbb
xor
sbb
jle
push
addb
and
addl
punpcklbw
push
xchg
or
gs
lods
arpl
cmp
jns
mov
add
leave
xchg
dec
push
arpl
popa
xchg
xlat
test
insl
jae
cs
arpl
pop
stos
inc
push
xor
cmpl
or
push
rorl
inc
inc
dec
dec
dec
sbb
push
das
insl
insb
in
push
js
ja
push
pop
cmp
aas
fistps
cmpsl
test
sahf
imul
daa
inc
and
mov
jnp
gs
sbb
ret
daa
inc
outsb
adc
movsb
dec
faddp
je
ret
xlat
dec
inc
inc
push
inc
andl
jne
push
movsl
xchg
mov
pop
sbb
xchg
jo
mov
jecxz
roll
imul
sub
data16
pop
pop
mov
sub
test
pop
dec
xchg
pusha
addr16
pop
and
sbb
inc
pop
inc
inc
sub
orb
or
popf
pop
xchg
outsb
out
xlat
pop
or
test
inc
push
push
pop
dec
jne
prefetcht0
xchg
sti
sbb
adc
xor
cs
mov
addr16
insb
dec
or
test
xor
mov
ja,pn
mov
in
outsl
sbb
xchg
pop
sub
or
xchg
adc
mov
data16
xchg
and
cmp
outsb
mov
add
push
loope
fidivrs
add
loope
out
jg
rclb
and
mov
or
jne
call
adc
or
mov
divl
arpl
fdivp
sub
insl
sbb
sahf
cli
jae
shr
cmpsb
pop
sub
add
fwait
add
sbb
iret
or
mov
cmp
stos
add
dec
enter
inc
outsb
add
sub
mov
sbb
mov
mov
imul
inc
jae
mov
push
inc
rcll
test
mov
rorb
mov
sub
mov
sub
sbb
sbb
rcrl
add
stos
sbb
data16
loop
imul
dec
dec
mov
sahf
in
pop
sub
inc
jo
dec
mov
xchg
adc
cmp
xor
push
inc
push
dec
js
sub
test
push
fidivrl
adcb
jae
mov
or
add
push
outsb
ror
mov
or
or
mov
cmp
add
inc
or
fdiv
enter
mov
add
push
add
fnstsw
jb
jo
sbb
dec
pop
sub
outsb
hlt
or
adc
or
gs
je
push
insl
test
inc
ja
ja
in
pusha
rdtsc
jne
fs
push
add
push
fisttps
jle
into
push
add
popa
push
mov
pop
jo
bswap
mov
pop
add
orb
sbb
data16
loopne
jmp
ja
pop
dec
adc
fsubs
push
aas
es
inc
insl
jbe
sub
sbb
mov
popf
les
inc
into
push
pop
dec
mov
out
push
push
outsb
test
push
xor
arpl
cmp
lock
insl
push
pop
fildl
loop
push
jb
popa
ja
sub
shrl
arpl
popa
or
inc
sub
sbb
mov
sub
mov
mov
xor
sbb
popa
mov
std
iret
mov
inc
fldt
das
scas
insl
imul
jmp
inc
in
push
aaa
out
insl
sub
aaa
shrb
xor
shlb
pop
sbb
insb
mov
ss
ret
aaa
ret
add
cwtl
test
mov
jns
stos
add
iret
sub
outsl
addr16
shlb
sbb
add
mov
imul
mov
rorl
mov
test
add
push
pop
fiadds
out
pusha
mov
dec
dec
lods
ficompl
push
popa
insl
ja
xchg
data16
mov
mov
and
stos
push
mov
stos
popa
cmpsl
xchg
arpl
jp
jle
popa
fildll
push
insl
insl
imul
xchg
mov
push
cs
out
je
and
sub
push
out
imul
outsl
sbbl
push
gs
rcrb
or
ret
fnstsw
jne
push
xchg
cmp
inc
mov
jnp
add
jecxz
loop
xchg
push
or
dec
bound
mov
pop
push
jp
shlb
xchg
jae
xchg
jo
and
push
pop
dec
fsubrl
xor
push
out
daa
jb
mov
aaa
icebp
movntps
push
jg
testb
pop
enter
ja
daa
push
cmpsb
arpl
push
mov
inc
mov
lahf
add
aam
ss
cmp
pop
ds
and
push
aas
ja
outsl
and
sub
ja
jno
scas
lea
outsl
or
lods
ret
adc
adcl
pushw
out
add
xchg
push
daa
mov
adc
jo
lock
popa
mov
inc
mov
xorb
jo
jae
insl
fisubrs
mov
jnp
push
xchg
sbb
shll
xor
repnz
or
imul
xor
mov
pop
imul
mov
movsl
mov
push
push
pop
xor
cmp
or
add
lret
cmp
mov
iret
lret
sarl
dec
outsb
mov
imul
mov
push
fbstp
cmpsl
push
pop
jbe
or
cmovb
data16
inc
push
cmp
sub
scas
daa
data16
imul
daa
out
pop
test
mov
loope
pop
jecxz
fidivrl
push
clc
pop
cmp
inc
cmp
ficompl
repnz
jns
scas
aaa
and
out
dec
inc
pop
or
jns
ficompl
es
add
push
xor
out
pop
or
or
push
iret
aaa
mov
dec
out
fistps
push
mov
xor
mov
xlat
or
xor
nop
enter
or
fsubs
js
and
inc
add
pop
cmpb
outsl
sbb
add
aam
pusha
push
dec
ss
sbb
mov
ss
aaa
popa
outsb
lock
stos
dec
and
pop
and
or
pop
ror
loope
cmpsb
mov
test
jp
insb
xor
push
jp
pop
dec
cmp
test
fidivl
pop
xchg
sub
sub
mov
pop
mov
pop
push
inc
xor
out
or
dec
lea
xorl
addl
push
cvtps2pi
push
inc
push
push
scas
pop
rcr
add
and
and
or
add
xchg
jb
pop
ja
mov
and
fmuls
iret
sbb
fisttps
xor
jno
inc
daa
add
repnz
sbb
xchg
int
addr16
pop
movsb
pop
inc
xor
xor
inc
movsb
add
jg
xor
xor
stos
and
dec
jbe
mov
out
in
imul
in
push
mov
fimuls
or
push
or
mov
push
and
aam
rorb
popf
push
or
mov
or
xor
dec
rcl
sbb
push
arpl
xor
fstpt
and
pop
and
enter
or
inc
mov
push
add
insl
pusha
mov
test
ja
add
mov
jg
add
sbb
or
cwtl
ficompl
fisttpl
mov
addr16
push
test
stos
and
dec
and
xchg
ret
pop
xchg
cmpsl
roll
scas
pcmpgtd
cmpsb
mov
daa
add
add
int
sub
adc
or
insl
xor
cmc
cmpsl
mov
and
mov
lods
jl
or
cs
fs
fistps
and
roll
cs
in
xchg
inc
xchg
seto
mov
jno
mov
inc
dec
dec
dec
xchg
sbb
add
arpl
push
adc
push
in
push
pop
add
jb
push
adc
insl
lahf
cmp
mov
dec
shrl
lds
jae
adc
jae
stos
pusha
adc
mov
popf
pop
movsb
dec
pop
push
scas
sbb
lcall
sub
sbb
les
faddl
sbb
push
outsl
inc
adc
icebp
pop
addr16
adc
xchg
sbb
jecxz
mov
sub
or
outsl
test
pusha
pop
shll
or
add
and
or
popl
das
jb
jo
or
movsl
pop
xor
jne
adc
xor
and
jg
mov
mov
cmpsl
add
push
xor
dec
ret
add
jns
jae
rorb
pop
out
ret
adc
dec
xor
andb
push
fsubrs
mov
iret
inc
cwtl
or
sub
mov
push
rcll
add
fisttpl
mov
mov
out
movsl
or
mov
and
add
mov
sbb
dec
js
add
fists
and
xor
xorb
adc
push
incl
stc
das
mov
or
push
nop
pop
add
js
push
sti
xor
lods
or
xor
inc
jl
inc
cmp
rolb
lret
jmp
mov
mov
add
call
fists
jl
adc
jne
mov
adc
push
aam
cmp
ret
pop
mov
xchg
add
add
push
call
add
mov
push
mov
pop
dec
iret
cld
or
push
pop
jg
lea
in
and
pop
pop
push
sub
dec
pop
outsl
push
outsl
insl
add
lock
xlat
rep
mov
stos
push
push
push
push
idiv
sub
clc
or
and
push
test
ret
sub
sub
aam
or
pop
pop
jge
repz
mov
outsl
inc
add
test
roll
inc
clc
out
push
pop
push
cmp
fs
test
and
add
adc
sbbl
adc
add
push
aad
jle
mov
pop
sbb
or
push
and
inc
inc
test
adc
pusha
xchg
adc
loopne
icebp
and
sub
or
add
mov
mov
jns
and
cmpsb
fisttps
mov
movsl
sbbl
adc
mov
or
enter
inc
adc
mov
sbb
in
call
in
in
jle
adc
push
ficompl
mov
xor
xchg
out
scas
rcr
fsubp
stc
jae
jle
flds
dec
imul
push
push
add
sbb
imul
enter
or
aaa
or
or
adc
inc
pop
nop
adc
adc
and
pop
inc
inc
push
mov
ret
xchg
das
push
xorps
pop
imull
push
and
xor
jo
jb
pop
xchg
orl
sbb
sub
fs
sahf
mov
ss
mov
into
aas
xlat
ja
leave
popa
pop
sbb
add
and
xchg
lea
add
dec
or
xor
and
xchg
add
or
pusha
xor
push
sbb
add
and
ja
or
dec
shll
or
mov
das
outsb
clc
or
push
adc
js
inc
sbb
lcall
sbb
imul
dec
jp
cld
inc
inc
mov
fists
bound
sbb
add
add
mov
rorl
mov
inc
nop
lods
or
push
out
js
jo
lock
mov
mov
mov
xchg
push
inc
jg
and
cmpsb
cld
ds
add
call
push
imul
aam
xor
cmpsb
repz
xor
add
lcall
xchg
mov
imul
das
push
dec
insb
add
ja
roll
add
xor
iret
inc
incb
scas
andl
popa
mov
mov
pop
enter
inc
enter
pushf
or
ret
mov
adc
inc
jle
xchg
cwtl
push
and
sbb
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
lcall
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
divl
mov
popf
sti
jmp
stos
push
incl
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
decl
xchg
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
icebp
push
pusha
les
add
jg
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
bound
std
jg
std
orl
pop
ficomps
frstor
adc
sub
test
push
push
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
push
add
push
lock
add
jo
imul
sub
gs
and
jb
add
cmpsb
sub
and
jb
arpl
xchg
pop
inc
jno
rorb
insb
or
out
mov
adc
add
dec
push
pop
lret
xchg
mov
insb
push
outsb
ja
xor
mov
adc
mov
jns
and
mov
pop
sub
push
jge
pop
xor
aas
cmp
daa
push
arpl
adc
sub
lds
inc
dec
inc
push
adc
movsl
xor
dec
fcomps
adc
push
rolb
xor
enter
testl
fisubrs
sbb
daa
or
ss
jns
push
imul
mov
or
sbb
sub
dec
add
push
or
jge
popa
mov
dec
or
loope
push
imul
xchg
xlat
mov
js
pop
push
dec
daa
hlt
inc
pop
je
sub
imul
pop
add
stos
jae
and
lods
push
imul
cmp
inc
cli
xchg
popf
or
mov
fstl
sub
sbb
jae
gs
sbb
jo
or
dec
pop
jbe
add
test
jl
sub
orb
sub
or
mov
insl
repnz
scas
sahf
push
inc
add
roll
pop
xchg
inc
pop
fwait
sub
outsb
mov
mov
outsl
pop
imul
addb
cmp
mov
sarb
cmp
gs
sub
push
sub
dec
outsl
lahf
divb
insb
lds
std
inc
dec
jge
std
movsl
or
xorl
inc
xlat
dec
ljmp
push
pop
push
sub
imul
jno
in
dec
pop
daa
insl
mov
mov
jo
pop
and
push
mov
adc
inc
mov
sbb
mov
sbb
and
add
adc
call
and
sub
pop
xor
dec
add
add
cmp
xchg
imul
add
cmpsl
fisttpl
ja
dec
adc
mov
das
movl
xchg
push
in
dec
or
fnstenv
pusha
mov
dec
adcb
add
mov
pop
shrb
add
insl
dec
lret
lds
jbe
sbb
add
push
nop
add
jne
gs
dec
pop
add
btrl
add
cmpsb
dec
jo
stos
inc
jbe
gs
mov
in
xor
lea
fnstsw
mov
mov
arpl
cmp
lea
scas
lea
xorb
in
sub
mov
inc
pop
inc
je
fisubrl
push
sbb
push
std
das
fcmove
jnp
mov
cmp
xchg
in
xor
or
xchg
gs
xchg
jae
adc
xchg
gs
or
add
add
jle
sub
andl
fidivrs
loopne
sidtl
add
adc
push
add
add
out
cmp
inc
pop
and
imul
prefetcht0
in
imul
add
add
or
mov
cmp
scas
nop
outsl
scas
or
cs
je
andl
scas
adc
add
pop
pop
ss
pusha
jb,pn
xchg
or
mov
ljmp
jo
insl
imul
add
rolb
xchg
and
mov
xchg
testl
dec
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
