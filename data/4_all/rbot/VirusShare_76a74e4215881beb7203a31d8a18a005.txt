mov
leave
or
jge
mov
jnp
xor
leavew
ds
push
mov
popf
adc
loopne
lcall
xchg
jbe
sbb
insl
xor
aam
out
jno
mov
call
dec
mov
ret
ret
inc
icebp
inc
insl
into
cs
inc
cmp
movsb
adc
push
xor
fsubl
stos
sub
loopne
icebp
je
out
rcrb
and
dec
inc
sub
mov
add
pop
gs
and
inc
mov
jge
jno
mov
inc
outsb
adc
jne
stc
push
ret
fmull
and
cltd
xchg
stos
aad
lahf
add
hlt
mov
xchg
mov
mov
cli
daa
sbb
pop
jecxz
dec
push
mov
xorb
jnp
add
fdivrs
outsl
stos
and
fdiv
push
repnz
js
scas
xchg
mov
gs
inc
push
std
dec
ss
xor
rcll
dec
shrl
and
mov
sarl
push
xor
in
xchg
imull
or
mov
div
insb
push
push
cwtl
or
adc
inc
cmpsl
das
fdivs
icebp
mov
js
cmc
mov
mov
pop
fdivp
xchg
add
dec
cmp
sahf
adc
popa
sub
rorl
dec
loop
jbe
cmc
pop
inc
sti
inc
jo
xchg
popa
insl
pop
jmp
in
sub
mov
call
mov
jp
lock
inc
jo
mov
mov
in
incl
sbb
push
hlt
push
ret
insb
mov
cmpsl
sarl
mov
sub
roll
es
aaa
or
pop
inc
mov
mov
xchg
lods
inc
imul
xchg
sbbl
sub
dec
pop
pop
and
xchg
mov
sub
in
rcrb
popf
inc
fs
adc
inc
xchg
sub
sub
es
sub
mov
push
insb
aad
add
xor
pusha
cmp
lock
fcompl
testb
mov
mov
inc
cmpsb
mov
test
dec
sub
sbb
jae
lret
ret
in
ljmp
or
add
in
mov
and
cmp
jbe
cmp
imul
in
lods
popf
dec
paddb
pusha
clc
enter
movsl
xchg
loopne
jl
test
push
mov
and
scas
lods
fimuls
int
pop
clc
into
jnp
jge
aad
push
mov
adcl
xchg
jmp
lea
sub
dec
imul
sub
pop
into
ss
jnp
test
adc
test
pop
mov
out
aad
scas
add
sub
inc
or
int3
stc
inc
mov
xchg
cmp
push
inc
mov
mov
push
jecxz
or
jle
cmp
mov
cmc
xor
mov
mov
and
mov
dec
insl
nop
movsl
fistpll
popl
mov
lea
ret
jb
jbe
in
dec
adc
mov
sub
in
mov
mov
loop
xchg
dec
jle
jl
roll
sbb
fnstenv
adc
pop
mov
sbb
aad
in
or
jle
shl
dec
lret
orb
push
sbb
mov
call
sub
and
add
push
xchg
xor
repz
or
cs
add
cmp
or
fsubl
stos
mov
ja
mov
and
jb
rclb
shlb
add
cmp
test
stc
xchg
orl
fstps
or
jb
movsb
mov
dec
pop
mov
ficoml
sbb
stc
adc
outsb
enter
stc
out
add
lret
push
add
fwait
sub
ds
mov
adc
sub
jb
stos
mov
and
stc
cmp
test
push
jb
jecxz
in
cmpsb
jno
rorl
jns
lcall
mov
mov
xor
stc
mov
fs
mov
or
test
or
in
mov
fisttpll
pop
xorb
push
xchg
dec
clc
cmpl
mov
js
xchg
jnp
adc
push
or
fcomps
add
mov
jp
pop
cmp
or
adc
inc
rorl
mov
jmp
cltd
shr
ljmp
inc
dec
or
insl
jno
push
dec
mov
jns
aaa
xor
movsb
jp
jg
loop
and
lods
and
into
mov
pop
neg
pop
mov
mov
push
dec
js
cli
jns
repz
mov
js
push
mov
fisttps
fcomip
or
repz
es
scas
and
insb
mov
out
imul
push
mov
cmp
inc
hlt
jae
addr16
xchg
adc
pop
clc
fmuls
push
mov
das
lds
popf
lahf
ljmp
cmpsl
xchg
jl
mov
or
pop
ret
cmp
mov
xorb
aad
imul
cld
cmpsl
roll
and
fsts
mov
inc
fsubrl
adc
mov
jecxz
pop
cmpsb
sub
xchg
lahf
mov
sub
adc
or
daa
or
pop
lock
int3
jmp
out
adc
lcallw
aaa
jo
stos
mov
and
xor
cmp
ret
jb
dec
leave
aaa
adc
push
cmp
rcr
push
aad
xchg
sti
cmpsb
push
daa
xor
data16
outsl
push
ret
mov
fcmovu
inc
and
xchg
cmp
xchg
cli
in
adc
ret
sub
es
cmpb
loop,pn
xchg
mov
fsubrs
insl
sub
or
sbb
adc
stos
rep
cmp
fdivl
inc
mov
or
sbb
ret
bnd
and
push
xchg
cli
ret
ljmp
pop
jecxz,pn
movl
cmp
in
out
fisubrs
and
in
ljmp
mov
mov
fidivrs
and
std
stos
inc
out
sub
xor
or
jne
dec
jle
insb
adc
sbb
pop
das
daa
dec
push
aas
js
fcmovnu
outsb
mov
mov
sbb
xchg
pop
or
xor
xchg
insl
add
jno
subl
fs
sub
xor
negb
jl
adc
or
test
cmp
repnz
cmpsl
push
scas
nop
rolb
stc
sahf
dec
mov
loop
add
push
mov
stc
sub
in
cmp
mov
cmp
out
in
js
insb
xchg
aaa
pop
jns
addb
xor
in
jnp
jmp
enter
adcb
push
push
sbb
jb
jge
sbb
jae
add
les
pusha
test
call
inc
in
jo
pop
dec
shl
push
xchg
sbb
dec
inc
sarb
imul
cwtl
inc
hlt
or
fs
out
xlat
aas
lods
roll
push
xchg
mov
insb
mov
fimull
lods
roll
imul
mov
out
mov
rorl
push
dec
movsb
mov
adc
lret
sbb
xlat
cmp
mov
bound
inc
testb
xchg
imull
int
js
xchg
jp
sub
lods
pusha
cmp
jno
ja
call
repz
sbb
xchg
testb
xor
lret
dec
leave
push
dec
xor
pop
loop
adc
ja
movsb
movsb
dec
mov
das
mov
ss
das
mov
mov
shl
jno
sub
push
jae
lods
cmpsl
repz
mov
inc
jne
jl
cmpsl
inc
xchg
fistps
cmpsb
pop
leave
jbe
pop
sub
or
mov
cmp
aas
push
leave
sbb
or
std
mov
lret
ret
jns
fists
add
lods
pusha
lods
pop
aas
mov
lock
outsl
xor
pop
xor
int3
orb
push
sbb
inc
mov
aad
sti
das
int
mov
xchg
jne
int
or
lahf
shl
data16
and
ljmp
jp
call
jae
cmpsb
cmp
out
xor
andb
mov
shl
popa
cmp
imul
frstor
popf
in
xlat
test
or
sub
mov
or
push
pop
jmp
rcll
mov
hlt
imul
shll
push
xchg
nop
ljmp
dec
pop
cltd
jns
ret
pop
dec
dec
call
jecxz
dec
mov
pop
sub
imul
dec
cwtl
scas
stc
cld
jp
test
pop
mov
jne
inc
jns
and
add
std
xorl
jp
mov
pushf
outsl
lahf
sbb
cld
push
das
add
inc
mov
addl
fcoml
mov
mov
cmp
and
jmp
outsl
test
mov
gs
dec
mov
push
mov
add
aas
test
rcrb
jnp,pn
mov
inc
jge
sbb
jae
sbb
jp
mov
jbe
mov
mov
push
decl
adc
add
mov
xchg
popf
js
mov
in
ds
cwtl
dec
inc
pop
int3
lds
mov
scas
dec
adc
ljmp
sbb
out
mov
jo
pop
aad
mov
fiadds
jle
stos
orl
sarl
out
xchg
push
mov
clc
scas
and
push
aam
stc
sti
sub
pushf
out
adc
mov
mov
out
sub
fwait
in
aas
mov
jnp
dec
lret
sub
outsb
lods
pop
cmpsl
sub
bound
std
dec
dec
jle
lds
cwtl
jns
jb
dec
fwait
shlb
jp
testl
dec
cmpsl
loope
jne
aas
leave
in
mov
hlt
rol
ljmp
mov
or
cmp
sub
popa
push
adc
adc
inc
mov
ljmp
test
pop
sub
scas
push
sbb
xchg
or
orb
stos
mov
fldcw
xchg
xchg
jb
jno
xchg
call
cmp
jge
inc
jg
mov
inc
leave
aaa
test
cmpsl
pop
add
jge
xor
xor
rcr
adc
popf
mov
aas
fidivrs
cltd
rcrb
jl
add
int
cmc
mov
movsb
aaa
cmp
push
repnz
inc
js
jp
iret
and
test
push
xor
add
loope
lds
test
fbstp
enter
je
outsl
cmc
push
mov
and
hlt
cmp
mov
lods
sbb
test
lods
mov
mov
lret
cwtl
popf
imul
lret
testb
pop
test
mov
cmp
xchg
ljmp
pop
pop
mov
gs
dec
fisubl
mov
je
inc
inc
je
std
in
in
push
mov
stos
fcmove
mov
jns
lahf
mov
cmp
and
sbb
cltd
pop
shlb
or
fwait
loopne
inc
pop
or
and
mov
mov
je,pt
sbb
xor
add
and
int3
xchg
mov
jae
and
nop
cmp
dec
lahf
pop
jmp
push
and
fsubp
cmp
mov
popw
test
xchg
dec
pushf
repnz
fwait
cmp
call
std
xchg
sub
adc
cmp
aas
mov
add
push
scas
sub
mov
jle
negl
or
sub
decl
or
out
or
in
mov
lds
push
mov
jbe
mov
inc
push
fwait
mov
stc
scas
mov
sub
pop
add
xor
in
cmp
rolb
in
insb
popf
fmull
std
xorb
add
xchg
mov
xor
inc
inc
js
sub
in
jno
adc
pusha
push
cmp
arpl
cmpsl
mov
xor
out
push
mov
pop
mov
fmull
ret
or
into
in
jns
xchg
xor
jns
int3
inc
pop
pop
mov
jno
and
xchg
push
dec
inc
arpl
fwait
mov
fwait
imul
inc
jno
int3
sub
test
xlat
icebp
mov
xor
jno
cld
mov
push
pop
or
xor
icebp
sbb
and
cmpb
or
insb
sti
out
xor
call
jne
stc
sub
inc
fisttpl
sbb
mov
jecxz
jnp
mov
cmp
fsubs
insl
mov
cmc
in
stos
sub
icebp
inc
cli
out
dec
ficomps
mov
pop
hlt
sti
dec
daa
pop
dec
dec
mov
mov
xor
aam
add
aad
enter
mov
lahf
mov
jns
xor
cli
imul
or
and
stos
or
repnz
call
lret
dec
bound
ficompl
std
stc
fs
cmp
mov
inc
pop
cmp
mov
popa
or
gs
js
cmp
xchg
pop
jbe
divb
out
xor
aam
ret
and
and
js
xlat
push
pushf
shlb
pop
pop
sbb
movsl
push
fcmovnu
mov
mov
aam
and
dec
fistpl
jge
call
fwait
or
inc
xlat
mov
push
jnp
dec
xchg
dec
popa
mov
lds
scas
and
jo
ss
mov
idiv
xor
xor
inc
es
out
inc
loopne
sbb
lock
ret
insl
push
iret
xchg
movsl
sub
xor
rclb
and
cmp
lods
push
and
ds
pop
sub
xor
mov
add
add
test
mov
add
or
mov
aam
adc
int
and
repnz
push
repnz
clc
rcl
xor
in
aam
and
push
pop
mov
xor
mov
add
sbbb
sub
mov
je
das
pop
inc
stos
int3
push
adc
cltd
jae
mov
clc
push
sub
pop
comiss
xlat
iret
push
addl
shl
out
mov
int
fs
fdivl
mov
cli
flds
mov
je
mov
jmp
mov
xor
cmp
sbb
pop
aas
inc
mov
repz
dec
add
mov
and
mov
mov
stos
pop
aam
or
xchg
pusha
test
stc
std
adc
push
mov
mov
jecxz
jnp
cmp
xor
loop
sub
pop
jecxz
adcb
aaa
jnp
ds
adc
clc
hlt
mov
cmpb
cli
xor
jmp
je
out
mov
xor
mov
or
mov
and
aad
mov
add
xchg
jge
scas
dec
push
pop
or
dec
sub
cmpb
pop
test
insb
cmp
jne
call
or
cmc
cltd
bound
test
pop
lock
jg
push
sub
in
ljmp
xor
lds
lahf
adc
loopne
jbe
sbb
outsl
push
sub
cwtl
ja
add
xorb
sub
mov
mov
add
lods
inc
test
pop
mov
nop
jg
push
pop
cwtl
sti
filds
fldcw
or
out
inc
fisttpl
cmp
sbb
sarb
and
mov
mov
into
sub
sbb
adc
pop
js
ret
jmp
adc
in
shll
push
icebp
xchg
mov
dec
dec
sbbb
cmp
pop
push
adc
aas
mov
cmpsb
gs
int
movb
es
shl
fbstp
mov
std
mov
pop
sub
mov
inc
adc
pop
xchg
push
xchg
fistps
push
js
aaa
fnstenv
cs
loope
mov
dec
xor
nop
mov
popf
roll
fildl
out
xchg
pop
jge
or
mov
aam
xchg
push
pop
clc
rcrl
clc
or
add
xor
aad
jne
in
sbb
mov
xor
sub
or
jmp
mov
sub
jne
cmc
imul
addr16
int3
aaa
pop
lods
push
pop
inc
add
adc
aas
adc
cmc
cmp
movsb
cld
xchg
sti
xchg
sub
add
pushf
sbb
leave
add
jmp
imul
push
fisubrl
mov
subl
jne
lret
lods
into
dec
inc
sbb
pop
test
mov
xchg
jmp
aad
jo
ret
mov
in
leave
ret
push
and
fcmovnbe
in
test
lock
jbe
rclb
sbb
mov
aaa
test
push
cmp
pop
push
add
gs
jp
test
lcall
pop
lods
mov
cmp
call
insb
mov
fimuls
out
cmp
imul
cld
xchg
mov
dec
sbb
inc
test
jae
iret
and
test
dec
call
loope
movsl
mov
pushf
add
lahf
sbb
adc
out
jae
jecxz
mov
addl
sbb
and
lahf
pop
inc
out
and
sub
adc
scas
adc
adc
inc
out
push
fstps
jnp
pop
mov
jg
jmp
je
scas
mov
faddl
sbb
xorb
push
sarb
cmc
enter
andb
and
aam
cmc
daa
fwait
gs
repz
sub
inc
movsl
test
push
jb
pusha
hlt
and
xchg
jl
shll
outsb
ret
das
out
iret
and
push
insb
movsl
out
jb
decb
lods
pop
repnz
jns
shll
mov
stos
jl
pop
xchg
or
xor
scas
jle
cmpsl
inc
mov
inc
push
dec
cmpsb
push
cmp
in
dec
int
std
mov
popf
jbe
and
enter
cmpsb
nop
mov
fstpl
sub
mov
out
cmp
stos
pop
pusha
ret
push
inc
push
push
popa
xchg
test
mov
xor
sub
iret
xchg
sbb
jno
in
adcl
lock
mov
mov
pop
mov
fidivrl
lret
js
cmp
mov
jno
jmp
arpl
or
out
lret
cld
arpl
sbb
xchg
les
dec
xchg
cmpl
add
and
enter
push
lods
mov
stos
fildll
and
sub
xchg
xchg
xchg
orb
hlt
inc
pop
adc
mov
pop
xchg
ss
mov
adc
and
adc
cli
lret
out
loopne
cmovbe
add
es
mov
xor
add
xchg
or
test
jbe
fld
in
mov
rcrl
outsb
loop
aam
clc
xor
dec
js
std
adc
cmpl
mov
push
popa
movb
mov
lret
or
xor
ds
adc
mov
test
or
les
dec
pop
mov
rcrl
adc
sbb
or
jmp
push
test
cmp
pop
lods
mov
icebp
jp,pn
dec
int
and
jge
fdivs
and
hlt
mov
and
iret
jno
dec
cmp
add
pop
inc
push
add
or
push
lock
sbb
js
test
pop
xor
lock
xor
cltd
nop
push
mov
cmp
mov
push
shlb
scas
mulb
xor
add
je
sbb
lods
push
pop
ss
bound
dec
or
pop
sarb
push
imul
aas
sub
xchg
cmpl
fnstcw
mov
or
stos
clc
mov
inc
sub
mov
xor
test
ret
sub
and
cmp
adc
repz
test
aad
sti
js
je
jp
repnz
adc
xchg
and
push
mov
fwait
cmpsl
out
pusha
popa
out
rorb
push
addr16
mov
cwtl
imull
lock
xor
sbb
sub
iret
test
or
insb
cmp
hlt
call
xchg
sbb
fcmovnb
xchg
and
fs
pop
mov
lret
jl
mov
lock
xchg
dec
jge
mov
shl
int3
push
stc
rorl
cmp
push
mov
subl
nop
inc
mov
gs
xor
mov
jg
and
sub
cmp
daa
jne
xchg
dec
idivl
out
int3
outsb
ret
ret
nop
test
outsb
inc
inc
in
push
sti
mov
insl
inc
or
mov
in
mov
xlat
jnp
cmp
mov
lds
lods
cmpsl
mov
jno
jns
in
add
aaa
jns
or
shrl
mov
mov
lods
outsl
sub
add
sbb
rcr
cli
and
inc
xlat
testb
test
and
sbbb
out
imul
dec
dec
lods
lahf
enter
add
dec
mov
andl
push
pushf
pop
jp
add
mov
inc
sub
aaa
pop
and
jne
dec
pop
aad
pop
jns
outsl
mov
aas
adc
xor
push
in
push
xchg
push
mov
outsl
inc
enter
xor
lret
xchg
jl
add
rcr
scas
sub
xchg
cmp
mov
cmp
xchg
imul
and
xchg
pop
or
inc
add
es
xor
jne
mov
sbb
xchg
outsl
or
call
sub
ret
xor
push
push
ljmp
fisttpl
dec
push
sbb
xchg
mov
mov
push
cmp
ljmp
xchg
adcl
shlb
lahf
mov
sbb
jg
jp
xor
mov
and
stc
mov
call
and
movsl
rcll
jo
adc
arpl
cmp
std
fiaddl
enter
adc
jle
das
add
adc
sbb
xchg
sbb
adc
xchg
jp
ds
jnp
sub
mov
mov
mov
add
movsl
std
sbb
rcl
inc
mov
fistpll
inc
loop
xchg
out
and
sub
aam
loop
xchg
js
xor
test
lret
outsb
push
adc
adc
sbb
inc
xchg
lods
int3
inc
mov
mov
jno
mov
popf
xchg
inc
lds
in
or
test
fistpl
aam
scas
int
or
stc
mov
js
xlat
pop
ja
je
mov
mov
jns
fcomps
jg
push
stos
fstps
lock
inc
or
out
or
pop
xor
mov
xchg
mov
mov
leave
jg
mov
pusha
lods
dec
fsubrs
xchg
push
lea
adc
decl
gs
sbb
dec
test
bound
mov
mov
fcmovnbe
sub
mov
mov
test
cmp
sbb
loop
xchg
mov
shll
daa
inc
cld
mov
out
pop
cmp
popa
pop
pushf
imul
insl
xchg
mov
xor
into
ret
out
fnstcw
int3
mov
lods
loopne
or
jnp
cmp
movsl
test
aas
gs
popa
push
or
mov
jmp
pop
jle
dec
rorl
mov
lds
mov
jle
movsl
setp
sub
or
xor
inc
scas
lcall
jae
mov
xor
xchg
lods
clc
aaa
inc
sti
fwait
fwait
les
lret
mov
mov
or
adc
stos
pushf
repnz
loope
and
mov
das
sub
lods
scas
dec
add
xchg
and
bound
popf
add
inc
in
inc
icebp
mov
or
into
aam
jb
aas
pop
sub
fucomi
cmp
test
push
cmp
es
scas
roll
jo
movsb
inc
in
psrlw
clc
lock
test
push
mov
mov
int
sbb
push
sbb
xor
fsubl
cmp
mov
add
in
enter
ss
mov
insl
or
flds
cltd
fs
addl
fst
mov
sbbl
loop
or
mov
popa
cwtl
xchg
imul
test
push
push
in
inc
and
popf
data16
gs
mov
jg
mov
lds
pushf
push
adc
repz
sub
add
pop
lcall
fidivl
scas
rcll
cmpsl
fstps
xchg
cmpsb
xchg
clc
pop
test
dec
hlt
cs
enter
ret
repnz
aaa
push
pop
lret
inc
int3
pop
mov
adc
adc
cmp
loope
insl
dec
inc
jo
xor
mov
lahf
out
xor
and
sub
repnz
mov
xor
lods
mov
jmp
inc
out
aaa
rcrb
in
cli
cli
mov
xchg
dec
inc
push
into
out
push
nop
lret
adc
shl
xor
dec
mov
push
push
or
cmp
jg
xor
sub
mov
xor
lock
sbb
push
jae
dec
sub
push
jl
push
pop
ja
adc
mov
add
lret
insb
inc
mov
je
scas
or
pop
xor
mov
inc
lea
sub
mov
jns
push
f2xm1
icebp
mov
mov
jo
icebp
rcrb
push
xchg
jle
mov
jg
sbb
push
sub
enter
in
mov
sbb
mov
xchg
addr16
add
std
stc
cli
or
mov
and
adc
gs
pop
add
test
popf
cmp
xor
xor
mov
cli
sub
lds
mull
inc
fisubrl
lret
and
inc
jp
test
xlat
mov
lahf
push
push
xor
inc
es
mov
adc
sahf
xchg
sbb
sbb
and
dec
ds
sahf
movsb
xchg
jne
or
lods
orl
sbb
rcrb
pop
adc
ljmp
inc
cmp
mov
sub
mov
push
rorl
xchg
mov
push
jl
out
sub
cmp
inc
xor
sbb
fdivrl
in
xor
out
popf
gs
jae
inc
lods
test
mov
mov
fcoml
dec
sub
push
ds
dec
xchg
push
sbb
xor
stos
mov
aad
aas
adc
testl
pop
pop
and
repnz
test
iret
mov
ds
cmp
loope
mov
xchg
jb
add
xchg
fdivl
push
movsl
xchg
jae
cmp
mov
mov
in
iret
out
fsubr
push
xchg
imull
mov
ss
icebp
jb
dec
shlb
lahf
scas
xor
fdivs
pushf
xchg
subl
sub
cmp
cwtl
fwait
call
neg
dec
scas
fdivp
jl
mov
pop
or
lret
outsb
stc
mov
adc
adc
and
fisubrl
jp
cld
mov
cmp
sbb
loope
pop
xchg
mov
fsub
loopne
mov
adc
repz
push
mov
sbb
xlat
mov
jp
test
mov
stc
jle
rcll
adc
addl
movsl
das
sub
xabort
mov
imul
imul
jns
mov
pop
mov
pop
orb
mov
idivl
jle
inc
lds
fsubl
xor
lret
out
ret
dec
sub
fs
sbb
cmp
enter
cmpsb
lahf
or
aas
and
in
pop
adc
push
push
test
std
inc
sbbl
fcoml
dec
jl
dec
dec
xchg
stos
mov
pop
mov
and
inc
xor
insl
repnz
iret
je
mov
adc
or
and
scas
cmp
pop
lods
out
ja
xlat
popa
jecxz
mov
jl
mov
pop
std
inc
xor
cmp
inc
popf
test
and
cmp
iret
jecxz
lret
pop
adcb
pop
movsb
insl
cmc
cs
in
nop
fstps
push
inc
ret
imul
aam
ja
mov
mov
stos
hlt
push
cmp
jb
cmp
jp
dec
push
pop
pop
adc
fwait
push
loop
push
pop
inc
inc
sbb
out
xor
mov
int3
pop
frndint
inc
lahf
mov
xorl
add
inc
rclb
sub
dec
aas
out
js
fadd
hlt
lret
fldcw
cmp
cmpsb
jnp
shlb
mov
insb
and
jnp
jle
or
xorb
xchg
sub
addb
jl
or
or
xorb
pop
test
lcall
sahf
stos
dec
addr16
out
dec
dec
fiaddl
leave
jno
aad
xchg
cmpsl
ret
mov
and
rep
mov
cltd
dec
jno
loope
pushl
mov
cmp
lret
fbld
mov
and
leave
in
jl
mov
rorl
ja
hlt
sub
icebp
mov
int3
adc
mov
arpl
pushf
xchg
and
sbb
pusha
cmpsl
push
xchg
ds
out
pushl
std
ss
or
add
jecxz
dec
rol
lcall
push
cmpsl
sub
out
leave
cmp
adc
aad
jp
dec
shlb
push
or
aaa
out
jae
imul
movsw
inc
lock
iret
cmp
ja
mov
fnstenv
mov
jo
mov
cmpsb
dec
shll
cmpb
rcrb
sub
mov
xchg
das
popf
enter
push
inc
aas
adc
roll
cmp
sbb
adc
pusha
iret
pushf
add
test
mov
push
hlt
adc
rcll
outsb
imul
inc
cmpsl
inc
aaa
aas
popa
dec
cwtl
cmp
movhps
int3
dec
pop
fisttpll
cmpsl
sub
cli
inc
loopne
cmp
daa
mov
xchg
xor
test
inc
sbb
pop
mov
dec
pop
addb
jb
sub
dec
mov
cmp
movl
jecxz
and
stos
jo
and
xor
and
inc
out
sbb
ret
inc
test
cld
shlb
addl
cmc
movsb
in
mov
mov
lods
lods
fcoml
int3
push
inc
jmp
or
mov
into
int3
sub
rcrl
dec
pop
inc
mul
mov
in
and
jne
insl
jne
cmp
cmp
mov
lods
mov
lock
gs
mov
outsb
ficoms
adc
mov
int
loopne
popf
cs
pop
lahf
scas
cmpsl
mov
or
sub
adc
lahf
jmp
push
lahf
loopne
or
fiaddl
int
sub
dec
inc
ret
popf
adc
pop
add
pop
mov
jl
push
scas
push
push
cs
scas
gs
xchg
stos
mov
cs
or
sahf
in
sub
sbb
sti
xchg
xchg
je
mov
cmp
jns
sub
gs
and
jns
and
je
adc
xchg
ljmpw
sbb
cmp
data16
push
push
or
mov
cwtl
lret
inc
jo
and
jo
test
inc
shl
cmp
xchg
sub
in
push
xor
into
insb
into
push
pop
loop
and
push
mov
push
insb
pop
lock
fimull
sbb
movsb
call
inc
adc
cmp
sbb
xchg
and
outsb
mov
pop
aaa
push
mov
and
sbb
mov
sub
xor
adc
mov
ja
imul
sub
scas
and
jbe
mov
dec
enter
sub
fcomip
sub
js
xor
andl
shrb
mov
sub
mov
nop
dec
sbb
lcall
jmp
add
sub
movsl
in
jl
push
mov
push
adcb
add
xor
inc
push
xor
fimuls
mov
aaa
mov
in
cmpsb
xchg
or
adc
cld
add
jnp
sbb
dec
mov
pop
aas
xor
addr16
sbb
inc
push
xchg
add
inc
add
mov
das
sub
jo,pt
jl
sarb
call
jle
pop
out
jp
cmp
jl
lds
out
cmp
mov
les
jno
outsl
repnz
cltd
aad
cmp
pop
mov
mov
and
lret
sub
sbb
xlat
addr16
add
negb
sub
in
js
ret
pusha
sub
mov
mov
mov
inc
push
cmp
es
xchg
call
cmpb
iret
mov
cmpsb
cmpsb
jecxz
jb
lcall
imul
rcrb
scas
dec
xor
mov
int
out
dec
subl
adc
adc
mov
fcompl
das
dec
mov
inc
insl
push
pop
sub
xchg
inc
imul
adc
fsubl
outsl
or
roll
xor
push
sub
add
and
fdivp
or
xor
add
imull
int
imul
or
mov
in
rclb
pop
mov
loopne
loop
lds
and
jecxz
cltd
out
loopne
inc
inc
es
lods
xlat
lret
mov
imul
in
xchg
cmpsl
jg
insb
mov
in
adc
jecxz
xor
xor
ds
cmpsb
insl
sub
clc
mov
sub
out
mov
or
loope
jno
xchg
mov
cmc
inc
cmpsb
mov
mov
arpl
sbb
push
push
mov
pushf
aad
xchg
repnz
jne
mov
fidivl
lcall
mov
mov
sbbl
jae
add
adc
mov
gs
mov
fcoml
pop
lahf
xor
fcmovbe
and
inc
loope
mov
fucomi
test
fcoms
idivb
pushf
pop
aas
and
mov
pop
cmp
mov
or
mov
xchg
iret
fsubl
xor
jle
cmp
imul
mov
or
lods
add
dec
pop
pop
xchg
fwait
gs
mov
stos
mov
lods
xchg
mov
push
andl
and
inc
pop
nop
mov
outsl
mov
cmp
xchg
in
mov
push
in
dec
aas
pop
and
mov
mov
pop
sbb
sbb
mov
pop
mov
sahf
lret
mov
and
xor
adc
jne
jbe
ljmp
test
xor
aad
sub
xchg
push
cmp
lcall
ror
lret
cmp
jns
jp
inc
dec
shlb
sub
rorb
shrl
dec
addb
mov
es
fldcw
cmp
push
mov
sub
sub
jbe
test
push
xor
lret
in
sbb
dec
rcrl
push
js
int
add
enter
ficompl
popl
or
mov
aaa
dec
iret
in
popa
data16
imul
push
call
xchg
lods
cmp
into
lcall
inc
add
cmpb
int
ja
mov
les
stos
fstpl
adc
daa
aad
rclb
js
sub
daa
sub
iret
dec
das
imul
cmp
jp
jbe
lds
mov
xchg
jno
addl
xchg
in
jecxz
inc
push
dec
test
mov
add
adc
int
and
sar
cltd
pop
jg
mov
xchg
xchg
mov
mov
xchg
aas
shl
cs
cmpb
sub
mov
fwait
movsl
or
dec
in
dec
xchg
fucomp
bound
rep
test
negb
jns
mov
inc
mov
sub
cmp
jo
mov
sbb
or
cmp
and
ds
and
bound
lret
popf
and
aas
dec
ljmp
pop
cwtl
loope
sbb
add
addl
lods
mov
cmp
jnp
or
xor
xrelease
jo
bound
ret
mov
mov
ret
popa
cs
bound
jb
dec
jg
fsubrs
rcrb
test
xor
xchg
int
xchg
inc
pusha
fwait
in
imul
test
dec
mov
out
fisttps
pop
fidivrl
xchg
and
cs
in
das
std
or
mov
insl
jae
cld
sbb
or
popf
mov
in
dec
outsl
push
lret
lea
pop
clc
imul
js
and
movaps
push
lret
cmp
and
xchg
mov
inc
rcrb
xchg
inc
hlt
jno
xchg
xchg
in
popaw
mov
movsl
sub
sahf
pushf
xchg
daa
ret
xor
pop
ss
push
dec
mov
popf
sbb
sbb
cld
xor
jmp
add
pop
xor
filds
out
loop
mov
xor
pop
mov
adc
dec
das
icebp
jae
dec
ljmp
and
cmc
mov
mov
push
aad
js
push
mov
dec
pop
jno
ja
out
pop
inc
rcrb
enter
insb
cmp
ljmp
xorb
or
es
and
push
cltd
pop
jp
or
mov
mov
imul
adc
les
or
addr16
bound
and
cmc
xchg
imul
xchg
push
cmp
es
in
jb
loopne
loop
jnp
cmp
lea
sub
or
jno
or
ret
xchg
inc
adc
jp
rorl
and
jo
movsb
add
cmpsb
and
hlt
add
jne
sub
jge
loop
and
push
stos
jmp
inc
out
std
xor
jmp
or
into
mov
push
inc
jp
stos
lcall
xor
dec
das
xchg
cmp
movsl
push
and
shlb
sub
mov
jbe
xchg
or
xchg
sub
addl
or
mov
adc
pop
adc
mov
dec
loope
mov
inc
mov
imul
out
adc
adc
inc
lahf
jle
popf
inc
sbb
in
bnd
pop
pushf
adc
adc
lods
pusha
imul
in
fsubl
mov
push
xchg
call
lret
xor
pop
out
rcl
inc
jmp
divb
ret
mov
popl
cli
bound
or
sbb
dec
sbb
cmp
adc
and
loope
inc
daa
imul
cltd
js
xor
dec
arpl
sub
jp
cmp
jno
insl
fsubr
in
imul
cwtl
in
ret
push
div
sub
pop
popf
test
enter
daa
das
cltd
je
sbb
adc
mov
insl
adc
and
pop
inc
cmp
mov
lock
xor
incb
mov
mov
or
push
cltd
repnz
xor
es
pop
adc
xor
ja
mov
or
cmp
jg
cmp
insl
sbb
lods
negb
pop
push
in
out
mov
sahf
cli
pop
fwait
sub
orb
lret
shrl
jle
xchg
push
leave
and
repz
sti
mov
gs
fwait
or
sub
popf
dec
lret
imul
mov
aaa
cwtl
mov
jp
xor
ret
data16
scas
xor
sbb
dec
mov
push
dec
int
rcrb
lods
paddsw
aad
pop
aam
sbb
out
mov
push
mov
jb
push
inc
pusha
ss
cli
and
cli
sar
cmc
aas
imul
nop
pop
jmp
cld
dec
daa
sbb
cmpsl
subl
ss
setg
push
hlt
sub
shrl
test
push
test
not
jnp
add
add
cmp
mov
inc
cmp
ret
xchg
pop
mov
popa
fs
jae
cmp
jb
in
hlt
shll
pop
cmpsb
repnz
subl
fistl
idiv
in
mov
enter
xchg
out
push
or
bound
adc
mov
sbb
push
mov
lds
sub
pop
jl
rolb
hlt
popl
sahf
cmpsl
cmp
add
mov
scas
pop
loopne
fbstp
daa
mov
xchg
divb
test
stos
arpl
mov
insb
out
push
cltd
push
int3
mov
bound
xlat
stos
std
lds
test
pop
notl
pop
xor
sti
dec
sub
cmp
jno
push
mov
fcoml
pop
fldcw
aad
shlb
bound
dec
loop
pop
rcrl
sbb
cmp
aam
and
cmp
or
xchg
ror
in
fildl
inc
dec
sbb
adcl
std
ja
jbe
mov
mov
mov
iret
enter
mov
shl
out
or
inc
inc
leave
mov
add
stos
push
loope
stos
popf
jb
and
lahf
or
in
cwtl
aam
inc
gs
add
inc
push
inc
dec
cmp
shlb
xor
mov
jbe
into
push
mov
add
mov
cmp
test
dec
test
dec
adc
loopne
and
and
mov
cmp
sub
mov
inc
ds
adc
imul
jae
push
fldl
fnstsw
adc
or
or
dec
xchg
sbb
and
and
adc
cmp
inc
push
bound
shlb
sub
faddp
add
sub
popf
cmp
out
jg
and
repz
and
cmp
dec
daa
movsb
outsl
outsl
cmp
inc
movsb
mov
test
add
jnp
shrl
inc
or
push
jge
aas
dec
push
add
cmp
test
frstor
mov
adc
enter
stos
cmpsb
sub
xchg
inc
jl
pop
push
leave
cmpsb
lahf
fists
mull
fnstsw
int3
lods
mov
xchg
hlt
sbbl
daa
js
push
jae
mov
repz
ficoml
jecxz
inc
test
andb
dec
lret
or
cwtl
add
push
hlt
lds
shl
mov
pusha
std
and
bound
push
jbe
or
pushf
hlt
lods
subb
sbb
add
jae
es
insl
cmp
ss
fmuls
fldt
lahf
clc
or
mov
movsl
test
hlt
mov
out
fwait
aaa
leave
negb
cli
mov
cmpsl
imul
jmp
bound
xor
cmpsb
sub
and
sbb
ret
lahf
mov
popf
dec
leave
sub
inc
addr16
jecxz
insb
inc
jo
sarl
aas
adc
mov
cmp
add
xor
cmp
decl
or
mov
cmp
scas
fwait
xchg
mov
jne
sbb
insb
test
inc
outsl
lea
jnp
repz
dec
sti
jg
repz
aam
mov
lods
aas
or
sub
adc
push
adc
push
mov
jo
or
shl
xchg
jge
adc
pop
jg
add
sbb
fldlg2
cmp
aas
vpaddw
inc
call
aas
xchg
pop
push
std
xor
or
cwtl
fmuls
adc
jmp
std
xor
enter
test
cmp
jmp
push
jge
mov
repnz
out
bound
cmp
mov
enter
dec
push
sbb
frstor
pop
int3
lret
test
cmp
push
jge
lods
ret
sti
mov
add
mov
out
mov
lods
xchg
xor
mov
int3
mov
popa
leave
inc
sahf
and
xlat
add
movsl
xlat
push
xchg
jg
or
mov
jecxz
fcoms
jmp
scas
mov
int
dec
inc
cli
data16
stos
mov
sbb
scas
jo
data16
jb
xchg
pop
jmp
movsl
cmp
out
std
or
cli
ds
das
js
sub
push
push
xlat
pop
inc
shlb
add
jae
jg
adc
insb
push
inc
jne
dec
cmpsb
push
loopne
mov
xchg
sti
mov
xchg
xchg
pop
or
std
test
movsb
push
xorb
mov
orb
fndisi(8087
das
sbb
pushf
mov
psrad
sub
movsb
loope
lret
in
inc
or
jl
sbbl
call
loope
bound
or
adc
push
push
mov
sub
jmp
push
and
sub
mov
cmp
popl
popa
mov
mov
ja
pushf
je
sub
mov
in
fs
cli
mov
push
cli
fildl
jge
dec
sub
adc
stos
pop
sbbb
mov
outsb
push
push
pop
inc
sub
adc
nop
mov
add
and
mov
sub
add
pop
push
popf
shl
xlat
stos
pop
aad
test
push
sub
in
cmpsb
int3
mov
sbb
inc
rorl
aaa
xchg
xchg
mov
jnp
out
mov
inc
jns
xchg
divl
xchg
dec
ss
adc
sub
insl
fmull
in
xchg
xor
push
stos
pop
xor
fwait
int3
dec
lcall
jo
push
adc
or
jns
popa
cmpsl
aas
imul
pop
sbb
xchg
ljmp
ja
sbb
adc
sub
pop
cld
ja
lret
adc
sbb
jbe
and
sub
fdivrl
or
and
ja
int3
fcom
out
outsb
pusha
negl
dec
movsb
mov
push
fnstcw
fwait
iret
pop
cmp
ds
in
fisttps
mov
into
fcmovnb
inc
mov
aam
lea
dec
outsb
jae
inc
dec
dec
sbb
and
fmuls
push
inc
aam
lods
add
mov
and
icebp
sbb
scas
scas
outsl
dec
pop
or
or
out
mov
popa
sbb
sbb
xor
jge
sti
jbe
imul
in
inc
jbe
out
and
adc
and
mov
mov
jp
mov
mov
iret
jl
or
aad
mov
enter
adc
je
in
lods
lds
mov
xor
sub
adc
icebp
inc
and
jg
pop
or
nop
adc
pushw
pusha
lock
sahf
jg
cld
int3
mov
shlb
pop
adc
sub
pop
mov
mov
inc
or
es
dec
aas
mov
fwait
add
mov
xchg
mov
add
scas
and
and
aaa
lret
cld
push
loopne
pop
xor
push
inc
sub
mov
sub
push
in
scas
iret
xor
negl
mov
sar
jmp
or
sub
sarb
push
jno
pop
lcall
out
fldenv
fstl
das
push
loope
mov
jbe
fcomip
pop
sahf
out
les
mov
ret
push
lock
lahf
out
jle
in
sti
stos
mov
cmpsb
fwait
in
out
leave
dec
cltd
dec
imul
jge
or
xor
inc
sbb
les
sbb
aas
jecxz
inc
outsb
jle
mov
fcmovnu
pop
add
lret
je
test
xchg
push
xchg
pop
or
lahf
inc
lock
cmc
aad
push
jbe
pop
loope
adc
jl
imul
add
iret
cwtl
cmp
shl
push
push
adc
scas
jae
cmp
mov
jae
aad
mov
mov
inc
test
and
lret
rolb
mov
pop
mov
pop
pop
aad
mov
fsubrs
xchg
shlb
mull
mov
test
mov
and
test
adc
clc
and
daa
js
or
push
bound
in
fstl
pusha
and
scas
add
fwait
rcrb
sti
jo
mov
xchg
popf
xchg
xchg
das
shl
stos
dec
inc
aam
inc
push
cmp
lret
fs
fs
dec
aad
imul
inc
jge
pop
jge
hlt
xorl
pop
cmpsl
pop
cmpsb
enter
rclb
pushf
add
arpl
sti
cmp
sbb
or
jl
pop
insb
mov
xchg
inc
xchg
ss
and
fstl
sarb
icebp
fnsetpm(287
leave
add
lods
mov
or
or
lods
insb
clc
mov
arpl
outsb
fwait
xchg
inc
mov
outsb
fsubl
imul
dec
dec
cwtl
add
cmp
xchg
shl
fisubs
imul
add
daa
daa
outsb
xchg
and
pop
jg
xchg
jmp
mov
std
cmpsl
inc
cwtl
and
ja
inc
push
mov
loopne
sub
movsl
movsb
es
cltd
stc
je
sbb
mov
dec
add
testl
fisubs
inc
lods
jmp
ret
xor
in
cs
cmpsb
je
cmp
imul
xor
ret
xor
popf
adc
sub
ljmp
stos
or
daa
or
fsts
dec
test
cmp
lret
es
sti
sbb
push
jmp
stc
test
mov
push
push
aaa
lcall
dec
inc
lds
nop
push
mov
jnp
pop
call
push
and
mov
mov
sbb
sub
mov
mov
mov
adc
mov
lahf
mov
jns
xor
lods
mov
orb
sbb
dec
fidivrs
xchg
andb
mov
cli
in
call
jo
pushf
xlat
adcb
lock
jno
and
sbb
mov
or
and
mov
cmp
popf
popa
div
push
sarl
mov
pop
jle
je
arpl
fadd
bound
or
and
add
add
sbb
adc
pop
bound
mov
orb
aas
and
in
pushf
and
cmp
add
push
or
rorb
add
cmp
lds
mov
testl
mov
mov
cld
push
in
sahf
xchg
in
lods
int3
adc
and
mov
xchg
stos
inc
push
mov
pop
sbbl
data16
mov
fdivr
sarl
mov
hlt
adc
xor
cmp
loop
fistpl
ds
sahf
popf
add
scas
jns
lret
fisubl
testl
jge
test
ljmp
dec
js
out
mov
loop
push
jae
and
dec
out
sub
dec
scas
pop
jp
daa
inc
cli
pop
stos
sbb
dec
addr16
jnp
xchg
aaa
adc
jb
cltd
imul
inc
mov
push
pop
cmpsb
add
hlt
cli
out
sub
inc
lea
int
test
mov
shrw
cmc
xchg
inc
outsb
and
jp
cmpsl
mov
lahf
fxch
dec
mov
and
js
ss
mov
jp
js
lret
cmp
add
das
xchg
call
pop
mov
cmpsl
sub
in
mov
or
pop
mov
pop
out
ds
lods
popf
xchg
xchg
shlb
cld
dec
cli
in
mov
daa
push
sub
inc
ljmp
and
pop
sub
mov
in
or
sbb
mov
repz
int3
cmp
add
lret
rorb
fdivs
mov
dec
inc
nop
enter
and
mov
or
mov
pop
and
push
loope
fwait
ljmp
add
cld
mov
pop
lods
mov
mov
iret
jns
cli
cmp
and
or
cltd
dec
mov
xchg
mov
inc
movb
sbb
stc
lahf
cmpsl
inc
jle
ja
mov
sub
sub
rclb
pop
mov
out
xor
cmpsl
jbe
stos
pop
jb
shlb
imulb
pop
arpl
cmp
mov
mov
ror
inc
jns
ret
decb
fxch
jg
add
dec
push
in
cwtl
mov
pushf
xchg
jp
rolb
push
aam
and
test
jne
dec
jb
mov
leave
iret
add
adc
mov
dec
inc
loope
and
adc
dec
add
pop
fwait
cmp
jp
cmp
lds
add
dec
or
inc
jb
xlat
or
xor
orl
idivl
jnp
mov
pusha
mov
pusha
lds
add
sarb
insl
ds
mov
jle
daa
lods
sarb
test
lds
xor
loop
inc
sub
sub
nop
cmp
ret
cmp
add
les
int3
sub
push
loop
mov
scas
popf
hlt
subb
mov
or
add
mov
mov
iret
xchg
inc
sbb
outsb
mov
xor
lds
sub
bound
cmp
jp
jno
cmp
pop
push
popf
push
or
lcall
sbb
pop
xchg
jns
sub
sub
dec
mov
cmc
or
inc
lahf
add
sbb
popf
ds
sti
sub
sbb
inc
jmp
mov
push
out
xchg
rcrb
push
insb
sub
std
out
lods
outsb
call
dec
push
xchg
sbb
xor
inc
cmp
add
std
loop
jo
loope
in
xor
jnp
push
mov
sub
inc
mov
mov
push
pushf
add
stc
daa
xchg
add
fwait
mov
leave
pusha
xchg
mov
stc
sbb
sbb
fisttps
mov
mov
inc
out
pop
cs
xor
stc
jl
mov
subl
in
push
sub
mov
mov
repnz
adc
js
imul
xchg
sbb
cmc
lods
jecxz
inc
mov
adc
pop
sbb
lods
xchg
repz
mov
mov
cmp
dec
add
dec
repnz
mov
sub
and
sbb
jecxz
pop
js
aad
dec
sub
in
adc
xlat
mov
add
lret
aad
ret
ret
clc
lods
sbb
outsl
enter
push
mov
scas
inc
mov
mov
mov
add
add
sub
xchg
sbb
or
mov
sub
cwtl
pop
mov
sbb
sti
xor
push
or
rorb
xchg
sub
mov
pop
aas
mov
mov
enter
cmc
add
test
test
popf
data16
cs
xor
call
push
jmp
cmpsl
aad
sbb
inc
std
loope
shlb
sbb
in
ret
pop
loope
inc
sub
sbb
sbb
movsb
add
jo
std
cmp
je
lds
sbb
mov
or
dec
mov
jne
mov
sbb
pop
enter
ss
shlb
leave
aam
test
addr16
mov
or
mov
jp
jmp
mov
addr16
jbe
pusha
mov
in
push
jae
inc
push
arpl
std
outsb
cli
xchg
cmpsl
adc
aad
jbe
jle
cli
pop
mov
sbb
repnz
hlt
mov
add
mov
sub
push
stos
sbb
push
mov
out
cmp
jo
or
mov
in
and
stos
push
addr16
jae
cli
lret
sbb
mov
es
rcll
leave
jecxz
cmovne
sbb
pop
xchg
repz
scas
pop
testl
add
push
cmpb
test
sbb
enter
jmp
xchg
pop
and
xchg
or
stc
negl
bound
push
aas
sahf
cltd
mov
xor
jne
lock
scas
xor
les
mov
xchg
pop
or
shr
fnstcw
bound
mov
xchg
mov
aaa
sbb
mov
repz
and
push
mov
inc
filds
cwtl
xchg
mov
aam
inc
push
cmpsb
mov
int
mov
pop
mov
sahf
dec
leave
pop
adc
hlt
in
popf
xchg
and
sarb
adc
inc
dec
pop
in
adc
pop
jl
cwtl
das
jae
jno
shlb
fxch
stos
ljmp
pop
xor
jno
inc
inc
mov
test
add
jo
insl
cld
adc
pop
fdivs
stos
sarb
subb
inc
adc
jns
mov
popa
ja
jns
mov
jp
mov
arpl
cmp
xchg
xchg
pop
mov
adc
std
lcall
jmp
dec
or
jl
mov
dec
sub
pop
adc
mov
std
iret
inc
lret
adc
mov
xchg
adcb
pop
cmpsb
dec
pop
mov
dec
fisubrl
cmp
sub
ror
outsb
out
sbb
jno
test
lcall
push
test
pop
shll
je
movsb
in
ljmp
dec
adc
adc
fdivrl
pop
fists
cltd
fcmovnbe
scas
cld
sbb
mov
lds
aas
movsl
ss
movl
hlt
daa
mov
lahf
add
mov
inc
out
cmpb
std
in
jae
or
add
out
lds
pop
adcl
mov
xorl
cmp
divb
jp
and
fldenv
into
lods
pop
ljmp
jmp
sbb
jno
das
out
mov
ret
push
in
push
mov
lock
fs
sbb
daa
les
xlat
xor
or
loopne
mov
mov
fisttpll
xor
nop
sbb
and
popf
lods
adcb
daa
dec
push
sahf
movsb
sbb
dec
jb
ds
pushf
push
cmp
stos
xor
call
ds
sbb
mov
popl
add
mov
mov
scas
lcall
sbb
fsubrl
dec
add
out
dec
push
mov
add
mov
xor
int3
inc
int
mov
test
cmp
in
sbb
adc
xchg
dec
xor
dec
mov
xchg
or
sub
sbb
notb
mov
mov
fistpll
sub
or
fs
loop
add
addl
or
cmp
stos
pop
push
stos
out
fwait
fs
mov
push
movsb
ret
dec
lock
jns
add
fcoml
xchg
filds
es
inc
outsb
xor
jg
mov
addl
lods
ja
inc
pusha
test
cs
enter
js
cmc
push
and
das
jnp
push
andb
hlt
nop
sbb
adc
clc
sbb
mov
test
out
or
rcll
ljmp
in
inc
inc
aaa
push
jecxz
cmp
jno
xchg
or
sbb
mov
popa
and
cmp
cmp
lods
icebp
sub
dec
loope
adc
dec
fisttps
in
lds
fsubrs
pop
outsl
outsb
fdivs
cld
and
adc
shl
dec
repz
in
cld
cmpsb
mov
cmpsl
xchg
cld
je
mov
and
push
pop
rcrl
and
out
daa
cmpsb
and
popf
stos
or
stos
sbb
cmp
jge
adc
nop
and
jnp
repz
push
or
test
sub
and
pop
aaa
add
push
incb
mov
sbb
ss
out
inc
add
repz
mov
clc
pop
push
mov
mov
mov
in
inc
out
nop
loope
in
add
lods
dec
xor
inc
mov
cs
add
mov
cmp
bound
pop
or
inc
mov
pop
xorps
out
sub
mov
lahf
pop
or
and
sti
aam
je
loop
or
rclb
addr16
int3
sub
sub
rclb
add
shlb
jmp
mov
outsb
loop
in
and
pop
push
push
scas
pop
dec
ljmp
sbbb
push
and
int
iret
les
dec
adc
and
inc
lea
stos
mov
dec
dec
mov
daa
xchg
es
fidivl
lahf
lahf
pop
ficoml
shll
outsl
iret
psadbw
imul
xor
xor
and
pop
mov
jle
loop
orb
in
xchg
ret
cmp
jb
cli
push
xchg
pop
jmp
add
lods
je
mov
dec
das
jl
mov
push
in
jmp
sbb
xchg
outsl
inc
sbb
and
fistpl
mov
insl
inc
daa
add
adc
or
and
int3
jns
in
test
mov
jbe
sbb
mov
and
or
or
add
push
lret
push
mov
imul
iret
callw
dec
movsb
xlat
adc
pushf
lsl
loopne
sub
or
pop
push
and
jo
mov
lret
les
push
idivb
add
fsts
push
lcall
add
std
mov
and
adc
unpckhps
jmp
sbb
cltd
xor
outsl
mov
add
or
mov
cmp
adc
test
cmp
inc
adcl
adc
pop
cmp
sub
jnp
cmc
fmuls
ret
adc
sub
jo
jne
daa
xor
pop
push
out
mov
lock
jmp
mov
jo
jns
push
mov
jmp
sub
xor
mov
jmp
stos
outsb
roll
sub
xchg
jle
mov
dec
adc
xor
stos
dec
and
loope
add
xor
cmc
xor
xchg
test
dec
jbe
repnz
jge
jg
mov
dec
adc
xchg
dec
movsb
rcrb
cmp
out
cld
into
data16
into
mov
inc
iret
out
inc
test
lret
and
cmp
unpckhps
aaa
mov
fnsave
out
push
out
push
push
sbb
push
fs
jbe
inc
in
push
mov
push
icebp
outsb
fisttps
mov
popf
cmpsb
aas
cmpsl
inc
mov
mov
cmp
push
loope
cmpb
inc
ret
idivl
pushf
push
mov
sahf
jb
push
stos
dec
xchg
push
shrl
sbb
std
andl
rclb
mov
sub
cmpl
lock
xchg
iret
sub
nop
fdiv
pusha
adcb
cmp
insl
fisubrl
in
or
rep
outsl
xor
cmp
outsb
and
test
imul
mov
faddl
les
movsb
pop
add
je
push
push
jg
ja
xchg
pusha
pop
and
mov
aaa
push
mov
ja
dec
cmp
insb
xor
mov
xchg
push
sbb
ret
xor
sarb
outsb
aam
inc
aam
jl
mov
adc
pop
es
xor
xor
movsb
aaa
mov
cmpsl
fbld
in
loope
clc
leave
ficoml
add
jns
aas
mov
popa
mov
xchg
jge
push
xchg
sbb
jl
mov
jae
cmp
add
ljmp
mov
sbb
cs
add
cwtl
add
lock
loopne
fisttpl
lea
jae
out
into
outsl
mov
xchg
xor
cmpsl
add
scas
loop
je
jne
dec
fs
and
loop
pop
adc
cltd
mov
mov
push
pop
cs
dec
or
ljmp
jae
and
test
leave
xchg
lcall
jl
push
ljmp
jae
dec
dec
mov
and
arpl
mov
in
test
into
xchg
test
and
mov
mov
cmpsb
mov
sarl
add
lcall
push
rolb
scas
jecxz
push
or
int
movsl
mov
dec
adc
ss
cltd
fsubrl
pop
popf
cltd
mov
loope
ficoms
xchg
mov
out
adc
and
imul
scas
jl
mov
mov
adc
out
jae,pn
loopne
mov
out
sbb
sti
cs
popa
gs
pop
xchg
xor
or
enter
pop
out
adc
jecxz
pop
cmp
cmp
sub
lahf
movsl
mov
imul
test
sti
xor
fwait
mov
pop
stc
mov
imul
xchg
out
pop
jmp
jl
push
outsl
add
jmp
lock
cmp
out
add
outsl
adc
push
fsubs
mov
repnz
fidivrl
cmp
add
es
ja
gs
inc
aam
aas
pop
mov
and
sub
add
lds
add
fistl
cmp
jns
in
and
test
hlt
xor
inc
shll
ret
and
sbb
shlb
pusha
lret
dec
push
mov
push
mov
mov
xlat
and
lock
and
inc
shlb
cmpsb
outsl
push
fs
or
loopne
data16
push
and
sbbb
outsb
mov
ljmp
fidivrl
cwtl
mov
sub
mov
push
roll
jl
sub
movsl
shlb
xchg
inc
inc
jae
movsl
and
movl
rorb
cmp
cld
negl
test
sub
dec
pop
ret
jge
xor
lods
stos
fdivl
jb
or
fistps
iret
pop
inc
lea
outsl
gs
popa
push
insl
cmp
outsl
inc
sbb
push
xchg
aam
cmc
fs
and
and
mov
mov
sub
or
push
mov
mov
fiaddl
jle
lret
add
pop
add
and
shll
cli
xlat
push
imulb
loope
in
dec
in
outsl
push
xchg
jecxz
pushl
lea
nop
subl
adc
sub
mov
jmp
out
add
pushf
inc
sbb
fwait
xlat
pop
mov
xchg
callw
pop
sub
nop
add
jo
and
clc
in
pop
mov
add
negb
xor
rolb
sub
imul
sbb
cmpsl
sub
fstl
xor
fildll
sbb
dec
repz
ja
xor
dec
movsl
out
in
loop
jns
fsubl
jl
sahf
xchg
jae
fyl2xp1
adc
mov
jbe
les
call
or
ss
fiadds
pop
mov
xor
insl
mov
xor
pop
mov
cltd
int
and
addr16
add
cmp
insb
sub
xchg
cmp
bound
aaa
in
jl
add
inc
xorb
aas
jle
jne
orl
pushf
es
imul
and
mov
xlat
jnp
mov
xchg
loope
cmp
dec
pop
inc
in
or
mov
and
mov
pop
xor
std
sbb
fistpll
in
xchg
pop
push
pop
sti
jg
jmp
jno
push
sahf
ja
pop
pop
jbe
rcl
testl
decb
cwtl
sbb
push
lret
cmp
pop
xor
icebp
xchg
and
dec
and
lcall
fisttps
xchg
clc
fucomip
aad
and
ss
pop
adc
icebp
aad
and
fcmove
stos
xor
push
loopne
fcompl
xchg
je
sahf
sub
lds
jo
push
adc
mov
rcr
jb
sub
les
insb
clc
mov
add
jge
sbbl
leave
mov
mov
enter
rcr
sub
popa
jb
adc
mov
dec
and
jo
les
sub
sbb
mov
jnp
decb
out
pop
push
jg
int3
cmp
in
cmpsb
std
and
xchg
mov
adc
jne
ljmp
sbb
xchg
and
mov
add
jl
in
adcb
pop
pusha
xchg
adc
mov
ljmp
cltd
xchg
test
nop
outsl
out
sub
rolb
push
in
add
cmp
cs
and
dec
inc
add
or
jmp
andb
mov
push
pop
sub
inc
push
sbb
push
fwait
and
shll
jge
ss
xor
imul
xchg
mov
popf
mov
jb
insl
fwait
jmp
jg
test
cmpsb
stos
sub
push
fistpll
pop
mov
test
rclb
mov
dec
inc
lods
popf
mov
sar
mov
xchg
cmc
inc
lock
notl
es
jbe
cld
xor
xor
lods
movsb
xchg
or
icebp
inc
popf
shll
repnz
inc
sub
shrb
push
inc
jno
das
mov
lods
sbb
xor
sbbb
movsb
jl
fcmovne
ljmp
imul
fisttpl
sub
fs
sbb
jmp
scas
lea
dec
icebp
push
fs
inc
xor
loope
sub
adc
push
sbb
dec
ja
mov
jecxz
rcr
push
outsb
xchg
fcoms
fildll
fcomp
mov
bound
fidivs
sarl
rcrl
adc
js
icebp
arpl
adc
loope
inc
movsb
cltd
mov
insb
pop
cmc
pop
fdivrp
jbe
ja
cmpsl
fadd
out
mov
xor
adc
sub
shlb
mov
mov
mov
push
and
cmp
or
pop
add
lock
lcall
push
mov
leave
sbb
inc
or
js
shl
pop
cmp
sbb
hlt
int3
sbb
or
adc
mov
mov
arpl
or
xor
inc
pop
jge
fwait
mov
test
mov
and
and
mov
mov
sub
cld
xor
andb
shlb
or
sub
ja
mov
sub
lahf
cld
ss
aad
jns
mov
ret
mov
push
mov
icebp
scas
imul
or
roll
stc
fwait
jle
jecxz,pn
mov
mov
sbb
jmp
xor
sub
popa
push
mov
xchg
xorl
out
aas
mov
jmp
sub
sub
pop
daa
lock
sub
push
pop
cwtl
or
shll
inc
sub
sbbl
nop
or
gs
mov
pop
mov
adc
arpl
pusha
sarb
ja
pop
or
subb
xchg
or
call
int
mov
jecxz
insb
orb
cmp
fsubr
add
mov
rolb
mov
mov
fidivl
sbb
scas
push
loope
int
aam
pcmpeqw
sahf
rcl
push
lods
cmp
pop
ds
faddl
test
sub
pop
xor
push
aas
scas
push
call
pop
jb
rcl
pop
push
mov
and
std
rolb
mov
in
mov
jl
xor
scas
fidivl
idivl
sbb
push
stos
ret
mov
mov
rorl
ljmp
pop
add
int
aad
cmpsb
divb
fistps
rorl
pop
arpl
loop
aam
dec
std
outsl
shll
in
out
iret
hlt
jge
sub
push
lods
out
outsl
or
mov
icebp
je
enter
data16
inc
push
fsubs
dec
iret
insb
jl
add
mov
cmp
xor
movl
imul
inc
xor
or
mov
popa
testl
mov
ds
jp
movsl
enter
ja
ret
jae
mul
mov
incb
movsb
ds
sub
inc
and
mov
out
add
loop
jnp
lret
inc
mov
push
lret
push
mov
into
dec
or
mov
sub
cmp
add
fs
sbb
test
popa
sbb
push
push
js
jle
clc
jbe
xor
ljmp
push
dec
int
jge
pop
mov
jo
sbb
dec
loop
or
sbb
inc
inc
cmp
sub
dec
and
sub
mov
add
clc
sub
nop
pop
inc
push
jle
xor
push
jecxz
aaa
sub
fcompl
jns
popf
or
ret
push
cli
xorb
push
sub
movsb
push
flds
sub
in
sbbl
not
adc
dec
sbb
push
push
ret
fildll
xor
and
xor
jge
jns
sub
xlat
call
xor
clc
and
pusha
stc
pmulhw
outsb
sti
cmc
pusha
jno
dec
ljmp
or
lods
daa
rclb
je
and
sub
mov
aam
add
out
dec
out
sbb
mov
aaa
int3
push
leave
in
leave
xor
jne
jns
push
push
mov
test
repnz
and
ja
push
jbe
inc
or
or
xor
push
or
addr16
push
loope
repz
push
push
jo
inc
mov
das
jecxz
xor
inc
push
inc
lahf
mov
insb
aaa
push
in
stc
mov
js
in
cld
mov
sahf
dec
dec
mov
dec
ret
mov
fs
cld
insb
sub
dec
mov
inc
in
fimuls
jne
lcall
jl
ret
rcrl
mov
es
iret
ret
mov
cld
les
mov
push
xor
xchg
out
aas
dec
mov
cmpsl
int3
and
sub
fdivrs
bound
jns
jmp
inc
sub
lret
aaa
sbbl
rolb
cmp
inc
in
cmpsb
jg
insl
mov
add
pop
dec
loope
add
push
divl
jnp,pt
mov
popf
lret
hlt
jne
popf
fnstsw
test
ljmp
add
sbb
adc
sub
xor
mov
ljmp
clc
les
iret
mov
enter
xor
lods
dec
outsb
dec
xchg
cwtl
sub
shrb
or
lret
scas
pop
imul
jl
mov
or
sub
ror
scas
inc
mov
fildll
xchg
jb
and
imul
dec
ret
xchg
test
xchg
pop
mov
mov
xchg
mov
test
sahf
idivb
mov
mov
adc
sbb
mov
lea
jmp
push
mov
lret
lds
add
out
mov
hlt
xchg
pop
xor
add
jno
sti
sbb
adc
repz
mov
subl
or
sub
xor
das
adc
xor
out
loop
cld
xor
in
xchg
cmpsb
es
jge
repnz
outsl
push
cmpsb
mov
mov
or
test
aas
dec
xchg
adc
dec
outsl
and
orl
jo
js
add
cltd
sbb
jl
xor
dec
add
mov
add
incl
scas
mov
out
pushf
push
cmpb
push
test
out
jg
adc
lds
rorb
call
shlb
push
push
addl
ljmp
fldl
xchg
add
mov
dec
in
inc
inc
cmp
lcall
fucomp
pop
sahf
xchg
cwtl
sarb
pop
shll
jecxz
jg
pop
test
fsubl
imul
mov
into
scas
mov
push
pop
sbb
mov
fisubrs
sti
imul
sbb
dec
repnz
popa
jbe
xor
push
mov
mov
xchg
fwait
sbb
pushf
sbb
mov
cmp
shll
cs
or
sub
cltd
ss
mov
pop
dec
stos
add
mov
dec
test
cs
test
or
les
xor
inc
and
or
cwtl
and
sbb
shrl
mov
inc
lods
cmp
mov
fistl
cwtl
inc
adc
jg
into
clc
loope
insb
mov
leave
popf
xor
mov
test
outsb
jo
lods
das
call
sahf
jle
fisubrl
lds
rol
data16
leave
enter
movsl
mov
pop
enter
pop
subb
cmp
xchg
pop
lcall
int3
mov
popf
gs
in
adc
popl
push
sbb
rcrb
fmulp
sub
dec
fiaddl
jo
repz
shll
repz
lret
pop
jb
push
fsubr
bound
iret
movsb
clc
adc
xchg
dec
ds
rcl
jbe
lock
bt
xor
jb
test
mov
test
or
stc
in
out
mov
push
adc
mov
adc
shrb
outsl
dec
scas
cmc
adc
pop
xchg
adc
loop
xlat
xlat
loope
ficompl
sbb
pop
sbb
or
cmpsl
or
lcall
jge
and
add
arpl
scas
xchg
int3
es
inc
mov
or
xchg
sbb
push
ss
push
dec
mov
mov
repz
ljmp
pusha
cmpsb
mov
pop
push
adc
ja
testb
mov
fisttpl
fmul
aad
jle
inc
dec
jnp
loop
ljmp
push
rorb
ss
inc
ret
cmp
and
hlt
pushw
jne
pop
in
jno
and
xchg
mov
pop
loop
rorl
cmpsl
mov
sbb
xor
rcll
jnp
out
jg
jp
sbb
mov
popf
xchg
outsl
cmp
out
lds
lds
mov
xor
test
int3
subps
xchg
dec
sbb
and
jb
inc
pop
shlb
inc
xchg
ja
push
xsha256
cmpsb
pop
inc
inc
mov
inc
data16
and
jmp
imul
idiv
into
test
mov
push
out
dec
cli
mov
shrl
mov
in
outsb
push
loope
flds
push
mov
jl
mov
cmp
mov
mov
xchg
fisttps
push
inc
push
sub
lret
lret
mov
lods
inc
xor
repnz
cwtl
jae
fists
dec
and
repnz
inc
jae
es
aad
dec
test
lds
jge
sub
mov
mov
loopne
xchg
adc
push
das
mov
sbb
inc
outsl
int3
xor
lret
test
aas
test
insl
cmp
push
fisttpl
sarl
inc
pop
cli
fs
cwtl
cmp
lock
xlat
mov
addr16
xor
jmp
popa
xchg
pop
dec
inc
mov
rcrl
pop
and
test
sbb
inc
in
sti
aas
xor
and
cmp
dec
mov
xor
shl
lods
push
fstl
stos
ret
jge
outsb
and
cmp
movsb
out
inc
sub
bound
push
hlt
and
cmpsl
rcll
xchg
add
nop
inc
and
shlb
add
mov
sbb
stos
sahf
cmp
and
pusha
jge
jo
setne
clc
jno
sub
add
xor
xchg
nop
add
jmp
push
out
jecxz
ljmp
push
push
mov
ja
mov
inc
in
adc
leave
mov
arpl
and
dec
inc
imull
adc
mov
ret
add
ds
bound
negl
lock
pop
inc
add
push
insl
cmp
pop
push
into
cmc
mov
aam
imul
repnz
fmuls
loope
lahf
mov
mov
daa
cmpsb
sarl
dec
cmp
test
std
cs
mov
mov
das
cmc
sbb
xchg
lret
dec
push
pop
mov
movsb
dec
inc
mov
mov
enter
xchg
rolb
jmp
imul
sarb
xor
or
jb
mov
pinsrw
insb
bound
xor
mov
push
insl
out
enter
dec
fidivl
adc
push
movsl
es
push
jb
js
sbb
add
sbb
push
xor
inc
pop
fimull
stos
and
jno
and
xor
sbb
push
add
int3
xor
pop
in
inc
mov
and
insl
adc
or
mov
or
adc
mov
aaa
ficoml
jb
xor
repz
or
ljmp
pop
test
sbb
ret
lods
into
push
cmp
and
fildl
mov
pop
rol
rorl
sub
stos
loope
cmpl
es
aad
push
add
pop
ret
aas
sbb
xor
dec
jecxz
mov
inc
jno
enter
add
sarb
sub
loop
cmc
xor
mov
adc
sub
cmp
repnz
add
in
mov
ss
out
idivl
or
push
ret
xchg
lcall
xor
das
cli
test
imul
adc
inc
rcr
sbb
pop
or
pop
mov
lret
test
pop
jl
scas
jo
push
push
popf
adc
fsubs
loop
or
scas
mov
pop
mov
xchg
sti
test
or
push
jge
dec
dec
lea
inc
lahf
pop
aam
sbb
mov
insb
gs
and
sbb
add
mov
jg
ret
push
mov
mov
hlt
or
lock
jno
call
jmp
xchg
rolw
xchg
aas
add
jecxz
in
movsb
inc
and
inc
dec
stc
xchg
cli
fadds
dec
sarl
out
jmp
xor
es
cmp
xchg
enter
cli
add
adc
out
mov
and
cmc
bound
inc
and
pop
out
lcall
xor
pcmpgtw
out
cltd
ret
mov
icebp
nop
scas
mov
imull
mov
fucomip
es
lahf
inc
je
arpl
dec
add
xchg
jo
lret
or
insb
stc
sub
pop
jl
adc
test
sub
adc
adc
or
pop
pop
mov
imul
push
jns
int
mov
rcl
rclb
aas
push
into
mov
pop
push
mov
sub
test
or
scas
push
sub
xchg
inc
ljmp
aas
aam
cmp
inc
stc
leave
sar
data16
pop
push
sub
dec
rcll
cmp
sarl
sar
ja
hlt
push
xchg
sub
fsts
push
ud0
pop
ss
or
inc
and
aas
test
xchg
mov
aad
mov
xchg
dec
jecxz
adc
jnp
mov
xor
inc
in
mov
pop
xor
push
les
dec
repnz
adc
mov
inc
shrb
test
inc
pop
testb
lcall
sub
shlb
mov
in
ja
test
es
lcall
nop
out
js
adc
pop
mov
test
mov
aam
lahf
push
loopne
adc
add
pusha
dec
push
or
cli
push
pop
out
rclb
or
and
jp
inc
loopne
push
mov
das
cwtl
pop
mov
mov
pop
loopne
xorb
addr16
sbb
xorb
fwait
sbb
adc
push
jne
fidivs
jmp
push
sub
jne
mov
push
cmpsb
cmc
stc
fisubl
push
out
and
jg
filds
shll
loope
mulb
cmp
push
adc
sub
int3
ret
mov
push
dec
aam
divps
aad
clc
jbe
adc
and
mov
scas
mulb
adc
fs
aad
ja
lods
push
icebp
loope
loope
sub
jns
outsl
fstpt
mov
push
mov
loop
ror
in
popa
pop
or
lea
incb
not
ljmp
mov
cltd
inc
mov
shl
pop
fsubl
rol
mov
std
xchg
inc
sbb
stos
imul
stos
stos
icebp
cwtl
add
sub
clc
push
or
cmp
dec
mov
sub
out
and
mov
jle
adc
imul
mov
ja
loop
add
or
nop
pop
push
xchg
cmpsb
leave
in
aas
pop
and
sbb
sub
mov
push
orl
insb
push
data16
cwtl
adc
ret
repz
mov
in
hlt
repz
push
cmp
xchg
cmp
iret
shlb
add
sbb
pop
outsl
pushf
sbb
in
mov
adc
sub
and
loopne
lods
and
mov
dec
jmp
sbb
lods
adc
bound
sbb
sbb
jecxz
ja
mov
inc
jle
add
jae
stos
xor
jmp
xchg
sub
test
shll
and
push
mov
rolb
movsb
js
dec
sub
mov
pusha
push
add
xchg
mov
jmp
filds
pop
cmp
mov
mov
adcb
dec
jbe
leave
xchg
push
push
rol
aas
frstor
adc
mov
inc
mov
mov
fst
pop
inc
cmp
mov
cmc
scas
faddp
fisubs
leave
test
movsl
test
cli
outsb
insb
or
mov
or
hlt
jl
jle
dec
ljmp
lcall
dec
lea
pop
xchg
jnp
shl
idivb
xor
cmpsb
in
adc
call
mov
lahf
lahf
dec
pop
push
ret
xchg
stos
jl
popf
cltd
movsl
push
sbb
dec
mov
push
cmp
add
fisttpl
cmp
and
loope
mov
sahf
leave
or
shrb
mov
dec
sti
shll
cmp
jecxz
stos
sbb
mov
repz
andb
sarb
mov
jnp
imul
mov
mov
cmp
mov
inc
repnz
ret
cmp
ljmp
adc
repz
cmp
repnz
mov
push
fisubrs
enter
fistpl
pop
cmc
insb
insb
add
in
stos
loope
mov
sbb
mov
adc
sub
jp
mov
dec
imul
xchg
cmp
push
sub
loope
mov
cmp
fsubl
inc
lea
xor
mov
pop
jns
jmp
mov
xchg
lods
fs
and
xor
lcall
movsb
push
xchg
ja
ficoml
cmp
les
out
clc
mov
xor
stos
push
pop
cmp
sub
add
adc
xchg
xchg
repnz
in
loopne
hlt
lcall
pop
inc
inc
mov
push
mov
out
pop
sbb
mov
inc
inc
enter
add
xor
fs
sahf
inc
das
gs
popf
incb
mov
movsb
sti
sub
mov
sub
mov
test
sarl
dec
sahf
jb
or
mov
hlt
aas
rcll
push
xchg
jle
jae
out
xchg
out
aaa
xchg
fs
add
int3
add
popa
add
int
pushf
and
pop
push
adcl
push
out
dec
insb
jmp
aam
add
lahf
test
loope
mov
jns
int
lods
in
inc
pop
shrl
pop
and
mov
jbe
sbb
sbb
stc
test
dec
clc
mulb
fistpll
sahf
int3
cltd
scas
xchg
loope
mov
push
lds
popa
cli
rclb
insb
and
dec
inc
pop
mov
xor
lret
xchg
fwait
jnp
and
or
jp
ds
dec
push
adc
adc
dec
xor
mov
jae
push
into
cmpsl
pop
fisubs
dec
into
lea
xor
scas
inc
xchg
jle
and
sbb
and
push
data16
sbb
lret
mov
add
push
ds
aaa
fs
push
jne
adcb
sub
repnz
outsl
sahf
or
fcom
les
jmp
sbb
sbb
fwait
mov
stos
sub
add
pushf
push
cmpsb
dec
lods
insl
cltd
mov
and
rcrb
add
cli
pop
movsb
fnsave
lret
pop
arpl
lods
xlat
loope
dec
test
out
fsubrs
ds
mov
adc
push
call
and
jg
or
jp
jbe
dec
mov
lcall
insb
mov
pop
mov
and
mov
shl
int3
fsqrt
jae
negl
inc
and
xor
out
pop
mov
push
add
dec
push
xor
jb
movsb
arpl
jmp
repz
test
enter
mov
cmpsl
xor
jnp
cmpsl
and
push
jns
call
in
add
dec
or
push
nop
mov
cltd
push
add
in
push
xor
pop
mov
jle
test
shlb
sub
ja
fsubr
pushf
xor
mov
fucomi
dec
push
cmp
mov
repnz
jb
and
or
aaa
loopne
adc
push
xchg
mov
mov
cmp
stos
js
add
movsb
pop
jg
outsl
clc
movsl
daa
mov
cmp
scas
adc
push
rorb
or
lret
jg
pushf
mov
jno
into
jl
test
cltd
jmp
jl
into
test
sub
and
jo
sbbb
or
sub
add
cs
enter
flds
adc
hlt
loop
orl
in
push
fnstenv
mov
mov
fiaddl
sahf
xchg
cmp
jnp
sarl
inc
mov
xchg
ret
das
push
roll
lods
popa
jg
cltd
je
sbb
mov
mov
data16
sbb
mov
jns
lea
cld
mov
adc
dec
jecxz
ss
pop
inc
test
ss
arpl
scas
or
jge
inc
adc
dec
std
mov
repnz
xchg
mov
sbb
insl
sbb
outsb
mov
sbb
xchg
out
rolb
pop
sub
ja
jne
ja
insl
sub
cmp
data16
scas
addl
std
insb
loopne
mov
mov
jns
scas
lock
js
or
loopne
pop
popa
dec
iret
lods
jge
data16
lret
fwait
std
mov
mov
sahf
cmpsl
filds
ja
mov
imul
xlat
xchg
lret
enter
pushf
mov
lds
or
imul
jmp
scas
in
addb
mov
mov
add
or
test
cld
ret
div
imull
dec
out
ret
push
mov
adc
mov
push
jb
xor
push
dec
mov
mov
mov
xchg
adc
out
aas
enter
mov
and
mov
punpckhbw
mov
mov
stos
cmpsl
add
fs
aad
inc
aaa
incb
ret
and
sahf
cmp
roll
fidivl
int3
repnz
adcl
cmp
mov
cltd
sbbb
sahf
outsb
pop
dec
popf
mov
pop
add
jmp
loop
mov
movsb
mov
leave
lods
pop
mov
ss
inc
sub
cmpsb
xchg
dec
iret
and
mov
outsb
sub
js
and
fstpl
cwtl
or
pop
push
cmp
xchg
add
data16
sbb
jo
in
repz
jge
mov
mov
pushl
hlt
jle
dec
jbe
lret
call
inc
bound
mov
lods
clc
push
mov
and
or
dec
stc
mov
ret
les
cmp
sbb
daa
add
arpl
xor
stos
push
enter
jo
mov
mov
pushf
jnp
in
xchg
jp
dec
sti
mov
hlt
repnz
lods
popa
enter
sahf
sbb
test
ds
ljmp
jne
mov
mov
int
lods
pop
push
mov
out
lods
or
mov
mov
out
pop
sahf
mov
adcl
push
inc
push
mov
sub
pushf
std
pusha
or
adc
sbb
sti
adc
sub
jle
test
xchg
dec
push
js
stos
dec
push
fldl
xchg
dec
in
mov
test
lods
or
mov
pop
das
cmp
lret
xchg
lret
push
mov
and
insb
lds
jo
xchg
mov
repnz
or
gs
mov
lcall
lcall
stc
add
cld
mov
ret
mov
adc
das
pushf
sarb
push
movb
je
and
dec
xchg
push
xchg
ds
sub
arpl
das
aad
rcl
filds
dec
repz
or
adc
insl
int3
scas
push
dec
adc
sub
and
nop
cmpsl
or
int
push
add
hlt
or
cmp
xchg
out
sbb
imul
neg
adc
or
jge
adc
xchg
mov
xchg
jno
std
scas
rolb
inc
pop
or
data16
mov
loope
xor
jecxz
out
xor
xchg
int
xor
mov
mov
mov
es
jle
push
nop
outsl
stc
scas
xchg
fwait
outsb
loopne
or
mov
mov
hlt
mov
inc
adc
popf
insb
mov
imul
push
push
sbb
arpl
lods
mov
hlt
addr16
icebp
mov
push
xorl
shl
subb
loope
mov
cmpsb
cs
sub
mov
or
lret
dec
mov
cmp
rcrb
add
jp
push
cmpb
pop
and
aam
das
jno
push
inc
inc
push
cld
out
arpl
xchg
insb
fsubr
fidivs
sbb
test
adc
movsb
repnz
or
cmp
cmp
or
inc
lcall
jb
les
cmp
xchg
pop
insl
and
jg
xor
imul
inc
call
decb
xor
aad
jae
push
rolb
cmpsl
cmp
daa
pop
adc
jmp
pop
test
pop
pop
ficompl
std
insb
scas
fcmovnb
mov
xchg
and
orb
xchg
jb
add
out
mov
or
mov
dec
xchg
outsl
add
sub
fistps
jge
notl
shrb
jl
sbb
and
xchg
and
or
movl
xchg
out
or
sahf
es
sbb
lret
adc
push
test
loop
mov
jmp
adc
mov
mov
or
retw
rcrl
imul
push
addb
fdivs
ss
adc
rolb
sbb
or
jns
cs
scas
out
in
push
and
cs
sbbb
loope
cmc
mov
pusha
lods
mov
sub
add
inc
xchg
mov
movsl
push
outsb
push
in
rcrl
xchg
mov
xchg
pop
inc
cmp
mov
hlt
xorb
leave
push
inc
dec
dec
cli
and
pop
fxtract
loopne
jbe
pop
shl
xor
fmul
pop
push
in
outsb
inc
arpl
cmpsb
pop
subl
sbb
in
cld
std
sbb
dec
jmp
enter
adc
cmpl
inc
pop
pop
adc
filds
movsl
je
adc
lock
std
ljmp
mov
pusha
and
enter
sahf
cmp
mov
mov
cli
mov
xchg
out
and
cmpl
les
lds
sti
xchg
xchg
cmp
arpl
stos
mov
pop
push
addr16
or
ds
add
adc
dec
adc
das
cld
fistl
push
push
cmpsb
in
dec
push
int3
imulb
inc
jne
xor
sbb
cmp
lea
test
mov
jecxz
jnp
nop
outsl
hlt
push
jbe
into
jno
or
xor
roll
xor
and
pop
test
lock
sub
add
mulb
in
mov
mov
pop
mov
inc
outsl
mov
iret
or
out
mov
fistl
sub
jae
jmp
aad
mov
mov
lods
mov
std
aas
jmp
lds
sbb
jmp
in
outsl
xor
adc
arpl
lret
xchg
pop
sub
scas
inc
jne
mov
xchg
clc
out
hlt
sbb
mov
cmpsb
sub
dec
cmp
cpuid
repnz
outsb
push
mov
orb
outsb
sub
xor
or
stos
sub
stos
mov
mov
ret
jmp
fsubrs
shll
cmp
mov
xor
lds
mov
inc
cmp
mov
jnp
push
mov
sbb
loop
dec
test
bound
sbb
cmpsl
and
fidivrl
movsb
out
mov
mov
mov
subl
out
cld
sbb
mulb
jmp
xor
jno
push
inc
inc
mov
lret
sbb
jmp
mov
pushf
or
shrl
std
das
mov
outsl
push
lcall
out
mov
insb
jle
cltd
or
and
jae
and
inc
xor
and
jno
sarb
insb
push
arpl
lahf
aam
test
xchg
mov
jmp
popa
cmp
xor
int3
ret
js
ret
js
cmp
push
dec
cmp
pop
incb
add
xchg
push
out
lea
pop
and
or
shll
sub
cmpl
adc
xchg
adc
cli
or
nop
in
xlat
lcall
rcl
imul
in
or
cmc
mov
repnz
addr16
movsl
jbe
pop
pop
or
stos
sti
pop
mov
cmp
jb
pop
lret
das
icebp
inc
gs
cmp
rcr
div
xchg
fstps
push
cld
dec
arpl
cwtl
rorb
or
cltd
mov
outsb
popa
adcb
mov
mov
mov
dec
xchg
sub
push
imul
mov
adc
jl
movsl
iret
scas
push
jae
dec
cs
mov
jmp
ud1
enter
lock
or
stos
adc
mov
mov
adc
scas
xchg
test
jecxz
push
ret
lret
cmp
push
movsb
in
jns
dec
cmp
push
mov
out
jbe
fnsave
pop
inc
cld
and
loop
cmc
bound
adcl
ret
pop
add
adc
loope
pop
pop
fnstenv
push
mov
xor
cmpsl
cld
cli
ret
shrl
outsl
or
push
and
out
inc
pop
cmp
adc
xor
mov
jecxz
pop
xchg
pop
fs
scas
and
rclb
xor
mov
mov
add
push
sub
xor
in
pop
mov
mov
sbb
add
imul
sub
popa
add
data16
mov
jle
cmp
cmp
push
stc
pop
out
dec
inc
push
xchg
inc
sub
mov
and
cmpsl
pop
les
adc
lods
aam
or
nop
xor
pop
je
ret
and
push
mov
sub
lea
dec
call
rclb
jno
add
test
mov
mov
data16
mov
xchg
loop
and
mov
pop
adc
jecxz
es
jbe
xchg
push
and
enter
stos
loopne
mov
test
pop
pop
cld
icebp
pushf
push
pop
ds
das
sti
xlat
clc
push
movsb
shll
pop
or
in
cmpsl
mov
push
add
sbb
dec
fists
hlt
lock
push
daa
adc
dec
push
loopne
mov
aad
les
andl
dec
icebp
mov
xchg
pop
jge
mov
jl
out
xor
inc
push
push
sub
mov
sar
jecxz
test
and
out
and
fimull
ror
lock
xchg
jb
aad
addr16
cmp
dec
xchg
sarl
mov
fcoms
pop
das
xchg
outsb
jecxz
and
adc
sub
mull
mov
or
xor
xor
shll
lahf
pop
outsl
jecxz
jmp
push
or
bswap
dec
jle
cmpl
xor
or
pop
mov
lret
mov
je
pop
pop
popf
cmp
cmpsb
cmp
xchg
push
lret
mov
sub
scas
cmpsl
add
push
add
sub
sbb
push
ss
inc
dec
mov
jl
icebp
mov
jle
popa
xor
sbbl
shll
mov
call
ret
rcll
movsb
test
dec
in
pcmpgtb
xchg
fnsave
ficoml
enter
stos
fsubs
rcrb
call
int
jno
js
ds
ja
inc
adc
push
call
stos
mov
add
loopne
mov
gs
xchg
or
fists
gs
push
cmp
pusha
and
test
outsl
pop
mov
imul
shl
lods
ja
out
out
jnp
jmp
ror
inc
jge
mov
jle
or
sar
add
push
clc
xor
mov
lcall
fsub
push
mov
pusha
repz
cmp
jno
cmpsl
dec
pop
call
mov
enter
dec
fwait
inc
dec
xor
bnd
adc
fld
ret
mov
in
roll
jns
mov
insl
repnz
or
in
sub
cmp
pusha
adc
stos
cmpsb
test
jg
test
out
fstpl
lods
inc
mov
pushf
out
mov
lds
push
xchg
test
xchg
mov
mov
inc
lds
rcll
xchg
push
jb,pt
imul
int
dec
icebp
les
push
mov
dec
mov
sbb
mov
cmpsb
scas
stos
ficomps
ret
xor
pop
and
add
adc
mov
shrb
popf
fcmovnb
pop
adcb
cmp
jp
and
or
push
jl
in
lahf
or
mov
jne
hlt
ss
test
cmc
loope
cmp
push
jle
scas
sbb
pop
pop
xchg
out
push
out
int3
push
sub
sub
jo
idivb
cmp
aaa
add
or
inc
xchg
sbb
xchg
inc
aas
add
sbb
mov
cmp
mov
jbe
bound
out
or
mov
lock
or
mov
push
add
out
lcall
mov
jbe
pop
jnp
push
dec
and
test
cltd
lea
cmpb
call
sbb
lods
and
mov
scas
sub
inc
imul
clc
push
lea
adc
bound
ss
mov
imul
scas
push
ja
arpl
sub
int
aad
and
scas
jp
pop
aad
bound
adcl
push
pushf
and
popf
test
add
mov
int
adc
sbb
jmp
cmp
mov
test
and
pop
fdivrl
and
enter
mull
jmp
in
daa
out
cwtl
dec
cmpb
and
stc
jnp
insb
pop
nop
xchg
lds
push
andb
xchg
mov
add
dec
ja
ficompl
jo
fwait
cmp
inc
ljmp
fwait
cmp
int
aaa
adc
out
inc
sub
stos
cltd
jge
and
shlb
jne
fs
jae
bsr
and
mov
mov
dec
inc
dec
pop
repnz
scas
dec
rcrb
out
sbb
pop
sbb
and
mov
xchg
xchg
sbb
cltd
or
mov
sbb
jge
in
pop
push
jge
jmp
adc
jmp
xchg
mov
sbb
fstps
jl
sbb
out
inc
cmp
gs
and
out
popa
cli
out
scas
jno
jne
call
sub
mov
in
in
test
jp
mov
mov
data16
xchg
repz
sub
out
outsb
pop
cmc
fisttpll
mov
arpl
xchg
add
cmc
xchg
adc
push
popa
dec
xor
les
dec
cmp
es
rcrb
cmpl
push
es
adc
out
sti
sub
dec
pusha
lcall
add
sbb
shrb
outsb
fwait
popf
push
leave
xchg
scas
and
cmp
in
mov
inc
dec
jg
loopne
xchg
pop
fisubl
mov
in
loop
pop
fistpll
mov
xchg
dec
popa
sub
jb
xor
ficompl
push
mov
scas
es
sub
sti
xlat
rolb
sub
mov
cltd
std
xor
ljmp
or
mov
call
shlb
int3
xor
sar
popa
push
cld
sbb
into
bound
movsl
flds
mov
dec
int3
dec
sbb
jp
mov
lods
or
mov
insb
add
adc
fs
sbb
daa
mov
jg
xchg
addr16
leave
ret
es
daa
push
lods
cmp
jg,pn
cmp
js
lods
shrb
hlt
ljmp
mov
and
in
cld
into
cld
movsbl
xchg
pop
push
in
or
negl
pusha
dec
cmc
or
cmp
scas
je
mov
sub
icebp
arpl
or
rorl
pop
add
xchg
mov
stos
push
mov
imul
xor
add
negl
cli
dec
push
jo
inc
repnz
adc
jle
jne
pusha
outsl
jmp
jecxz
ffree
sahf
ret
es
inc
loop
int
loop
push
cwtl
mov
imull
jnp
xchg
gs
scas
cli
ss
ja
test
xchg
adc
jno
scas
int
das
mov
leave
lahf
pop
movsl
aam
notl
sti
arpl
push
inc
jnp
nop
or
mov
sahf
sti
xor
push
jb
or
push
push
or
jb
inc
push
xchg
xor
les
mov
dec
jae
add
lods
and
fcmovb
sbb
adc
pop
sbb
mov
push
dec
and
outsb
out
sbb
inc
int
ljmp
jl
add
mov
push
and
jmp
jecxz
fdivl
or
pop
add
addr16
xchg
jbe
inc
pop
shrb
aad
jle
xchg
sub
sub
sbb
into
mov
out
fidivs
out
es
or
popa
addr16
clc
add
stos
xlat
sub
pop
arpl
cmp
outsb
loopne
push
adc
jnp
dec
xor
push
push
xor
sub
ds
sahf
aad
push
repnz
xchg
dec
es
lods
je
bound
dec
adc
data16
mov
jmp
xor
and
adc
sbb
and
outsl
inc
in
pushf
push
fwait
mov
mov
mov
sub
mov
pop
pop
pop
mov
stos
cmp
mov
movl
xor
push
xchg
fdivrl
mov
insb
jno
mov
xor
sub
push
mov
icebp
add
movsl
xchg
cmp
ljmp
imul
repz
cli
xchg
imul
cmpsl
cmp
jge,pn
loope
test
or
jno
sahf
push
bound
and
icebp
sbb
or
sti
pop
mov
mov
repnz
loopne
jns
idivb
push
shll
cmc
shl
and
pop
and
sub
movsl
icebp
outsl
test
or
in
inc
jbe
shl
xchg
dec
test
push
xor
pop
das
xor
test
lret
movsb
test
xor
sub
inc
leave
push
mov
mov
rolb
or
dec
pop
jae
leave
std
sahf
dec
mov
cmpsl
push
out
jno
fwait
cwtl
xlat
or
pop
neg
jnp
mov
pop
mov
shr
sub
xchg
clc
pop
mov
dec
jge
push
in
sbb
sub
mov
insl
mov
ljmp
adc
mov
push
clc
cmp
jno
push
jg
test
pop
dec
and
shll
js
test
push
pop
mov
add
jns
das
mov
sbb
mov
ficoms
xor
mov
and
pop
jecxz
fsubrp
push
sub
ja
xchg
jl
adc
mov
and
adc
or
dec
mov
xchg
mov
cld
sub
imul
aam
mov
stos
fs
add
loope
add
push
mov
fisubl
dec
xchg
dec
es
mov
add
push
mov
clc
mov
mov
cli
and
aad
adc
ds
or
call
jne
inc
xor
mov
cmp
stos
cmc
in
stos
testb
ret
xor
sub
ss
add
iret
movsb
adc
loopne
mov
lods
dec
xor
bound
mov
or
jnp
adc
das
lcall
sbb
std
mov
xor
icebp
push
xor
popa
mov
lods
push
and
movsb
ret
loopne
sub
imul
popf
imul
in
repnz
and
pop
ljmp
jne
jae
mov
add
mov
adc
mov
mov
loop
mov
addr16
repnz
loop
mov
cmp
inc
or
call
and
xor
je
and
cld
dec
add
fisubrs
out
sbb
push
mov
jge
and
dec
leave
pop
jge
jle
inc
mov
popf
rclb
imul
push
ss
mov
mov
dec
mov
cmpsl
les
pop
es
out
sbb
inc
xchg
into
jecxz
jl
inc
cmpsl
or
shrb
pop
push
and
das
jns
dec
clc
scas
mov
sub
cs
jne
dec
mov
sbb
xchg
fcmovnbe
pop
cwtl
inc
leave
fcmovu
test
loopne
test
pop
aas
mov
push
mov
sub
push
or
in
dec
sahf
mov
jo
clc
jnp
mov
push
mov
mov
jecxz
and
and
test
js
imul
test
into
or
xchg
lods
xor
xchg
sbb
bound
cwtl
add
pop
push
mov
sbb
ret
or
cmpsb
add
data16
fistps
cmpsb
pop
ficoml
inc
adc
jbe
mov
sbb
inc
or
xchg
js
testl
je
lods
bound
mov
inc
sbb
cli
cmp
ret
scas
rcll
int3
jb
xchg
adc
pop
jmp
xchg
shlb
not
add
shlb
cmpsb
rclb
sbb
push
and
cmp
sub
pop
jecxz
test
aam
jp,pn
push
mov
pop
pop
aad
outsl
dec
aad
push
mov
xchg
lea
shll
fs
into
daa
ret
es
enter
out
lods
lds
jo
push
fsubs
fs
data16
push
sahf
jle
cmpsl
testb
lret
push
jns
mov
das
jge
push
pop
popl
jp
call
add
inc
test
subb
pop
xchg
jno
inc
enter
repnz
ret
dec
xor
imul
add
dec
ret
push
cmp
jno
jge
loop
sub
pusha
cmpsl
mov
jmp
mov
rorb
xchg
out
test
fcomip
push
xchg
outsl
incb
mov
xlat
lock
lock
sbb
cmpsl
push
std
push
ss
cmp
hlt
loop
cmp
mov
adc
jge
adc
pop
dec
int
pop
xchg
or
sbb
es
inc
aam
sbb
inc
iret
popa
rcr
dec
in
inc
pop
cmpsb
jno
inc
cmp
out
addr16
push
or
or
imulb
mov
out
xchg
and
fsubs
jnp
test
pop
xor
rcl
sbb
mov
mov
dec
mov
push
xor
xor
int
mov
jns
rcr
and
gs
repz
cwtl
mov
sub
dec
test
inc
insl
rcll
push
aam
shll
mov
test
in
lods
lea
mov
fs
lret
cmpsl
and
arpl
data16
xlat
stos
popa
pop
push
pusha
jmp
jb
lret
loop
and
out
jp
dec
repnz
js
mov
shll
stc
mov
inc
lret
in
js
imul
mov
stc
cltd
mov
push
lret
jecxz
push
mov
call
leave
bound
jl
mov
fildl
inc
into
jo
inc
loope
jecxz
test
jge
rcr
mov
popa
mov
inc
hlt
or
xchg
cmpsl
hlt
xlat
mov
movsl
je
adc
aaa
lret
das
and
daa
mov
pop
mov
movsl
inc
stos
pusha
mov
xor
add
daa
push
fisubs
xchg
scas
jns
dec
or
fucomp
nop
xlat
popf
mov
leave
in
test
das
cmp
xor
ss
cmpsl
or
xor
sub
repz
sub
loop
and
sbb
sahf
test
push
sub
pop
lock
ret
data16
out
movsb
and
insb
test
and
addr16
stc
out
pop
ret
icebp
pop
adc
push
movsl
ljmp
fidivrs
bound
idiv
xchg
cwtl
popf
xchg
test
sub
adc
mov
incb
cwtl
inc
jne
outsl
in
mov
es
inc
add
cltd
push
aas
add
jecxz
xchg
enter
enter
loopne
rol
orb
mov
and
xor
add
push
push
insl
hlt
sub
subl
sbb
int
dec
pop
mov
shrb
pinsrw
jbe
mov
mov
xchg
pshufw
negl
sub
popf
and
xor
push
scas
xlat
push
xchg
cltd
adc
ljmp
loopw
cltd
icebp
adc
sbb
orb
lods
jl
adc
or
mov
fbstp
hlt
push
dec
divl
roll
and
rcl
outsb
arpl
outsb
mov
hlt
mov
push
mov
xor
test
stos
jb
mov
in
dec
out
xor
test
adc
bound
xchg
dec
mov
outsb
inc
xchg
and
pop
cmpsl
iret
sub
and
xor
pop
fnstsw
cmp
in
adc
arpl
test
imul
mov
mov
hlt
negb
test
fdivp
clc
adc
mov
pop
and
cmpb
jge
jbe
outsb
lea
push
insl
dec
pop
pushf
pop
stos
lea
mov
popl
jbe
loop
cwtl
cwtl
call
add
add
imul
repnz
push
enter
dec
aas
lds
ja
outsl
jbe
addr16
loope
mov
dec
int3
push
ljmp
push
or
and
jnp
dec
dec
cmp
inc
adc
adc
cmp
xor
mov
sbb
arpl
repz
push
ds
adc
ja
and
dec
mov
pop
jl
push
out
fldcw
cmc
sbb
insl
movsl
dec
cmpsl
xchg
shrb
pop
cmpsb
and
or
cmpsl
out
arpl
stos
mov
lds
and
inc
cmp
push
mov
js
cmp
loope,pt
mov
out
stos
mov
or
lret
and
xor
scas
fs
lods
in
cwtl
push
or
cmpsb
xor
cld
inc
and
jbe
scas
ret
inc
dec
add
orb
cmpsb
incl
dec
pop
or
inc
dec
scas
cltd
adc
sbb
in
jbe
sbb
mov
dec
in
pop
lcall
pusha
inc
lahf
and
adc
movd
pop
dec
fwait
stc
enter
mov
pop
pop
adc
sub
xlat
adc
outsl
repnz
mov
mov
insb
sbb
mov
push
ja
out
lret
pop
fsts
and
fcompl
loopne
fisubrl
cmp
inc
addr16
outsb
jl
or
bound
inc
add
add
push
lds
adc
jecxz
mov
xchg
sahf
fucomi
rcll
leave
xchg
push
scas
icebp
adc
ja
mov
enter
notl
jl
mov
mov
xchg
fsts
and
pop
jb
push
pop
mov
fwait
out
jp
mov
in
sbb
pop
xchg
bound
pushl
adc
xchg
and
sub
sbb
dec
fnstenv
loopne
in
mov
mov
aam
adc
push
adc
mov
in
in
aad
mov
mov
add
pusha
dec
xor
rorl
dec
jo
hlt
pushf
mov
or
in
cmp
pop
fidivrs
sbb
xchg
lods
inc
xor
xlat
pop
or
mov
adc
push
xor
push
lahf
cmp
loopne
insl
or
lret
loope
pop
stc
pop
sub
in
mov
or
test
adcl
adc
sbb
or
loop
popl
fisubs
mov
loopnew
cmp
aam
bound
movsl
sbb
and
dec
mov
pop
xlat
sub
sub
clc
push
test
add
mov
xchg
xchg
xor
das
aaa
test
je
push
adc
inc
cmp
inc
nop
ret
inc
mov
sbb
add
jne
fstpt
mov
cmp
aaa
sbbb
popa
in
testb
lods
fistl
popf
sub
cmp
lea
daa
add
sti
cmpsl
mov
bound
dec
je
mov
mov
nop
outsl
movsl
loopne
sub
mulb
push
popf
aaa
aas
and
stc
add
dec
out
sahf
jl
stos
mov
cmc
pop
test
call
mov
xchg
adc
cli
jle
fst
loopne
mov
dec
jb
shr
mov
xchg
push
stos
sbb
jne
popa
jnp
jmp
or
push
or
mov
int3
push
xchg
adc
addr16
mov
and
mov
mov
adc
pushf
jle
push
shrb
outsb
test
mov
popa
pop
pop
jmp
imul
adc
in
adc
sub
sub
test
cmp
ja
nop
jnp
fucomi
xchg
fnstcw
push
xlat
adc
and
bound
popl
mov
and
lock
lds
and
add
je
clc
test
mov
mov
jmp
scas
lcall
lcall
pop
xchg
cmp
in
pusha
mov
push
sub
mulb
and
leave
xor
repnz
and
xlat
imul
mov
pop
dec
add
pop
js
movsl
mov
jge
ret
cwtl
sbb
cmp
xorl
cmp
cmp
stos
adc
enter
push
xchg
inc
ss
or
popa
das
repnz
inc
pushf
jbe
mov
int3
xchg
push
insl
push
jecxz
insb
lds
push
out
inc
fisttps
test
out
popf
push
add
ss
push
mov
or
adc
push
or
out
and
sbb
push
lcall
test
mov
mov
cltd
vpshuflw
pop
fdivrs
jnp
lcall
cltd
add
mov
fcmovnu
repnz
sub
shll
and
push
jmp
push
mov
movsb
in
mov
mov
lods
pop
les
popf
xchg
push
insl
push
cmp
out
cmpsb
and
mov
ss
ret
lcall
and
xchg
push
xchg
out
xor
rcll
fs
pop
pushf
roll
pop
imul
cmp
ds
and
enter
scas
lcall
or
push
iret
fucomp
jl
cmp
fwait
adc
cmp
pusha
fisubl
sub
xor
mov
cmc
xor
outsb
stos
testl
ret
inc
adc
mov
fdivs
push
mov
decb
mov
sbb
xchg
jmp
lods
shlb
test
lea
xchg
insb
xlat
mov
fcompl
mov
je
imul
adc
out
push
jbe
push
pop
dec
jl
shl
je
dec
and
xchg
jnp
xchg
mov
jle
mov
pop
rolb
cmp
negl
or
pop
rorb
mov
dec
cmp
or
ret
popf
repnz
mov
sahf
sti
dec
stos
pop
mov
movsb
add
push
test
jae
mov
xor
jb
mov
xchg
insb
mov
mov
inc
je
cmp
mov
dec
bound
dec
add
movb
cmp
xchg
mov
iret
addr16
inc
shlb
jl
jmp
sub
imul
pop
pop
in
jge
mov
mov
andb
les
pop
leave
xchg
push
or
push
mov
mov
adc
mov
xor
adc
sub
pop
mov
dec
mov
push
arpl
mov
add
push
mov
cmp
loope
jp
and
fisubs
mov
mov
mov
xor
jecxz
movsl
and
subb
imul
xor
mov
xor
sub
shlb
fstpl
test
push
shrl
icebp
ret
in
xchg
fsubrp
stc
sbb
sub
dec
and
adc
mov
nop
enter
dec
jle
sbb
push
mov
ret
jecxz
xchg
cmc
lahf
mov
movsl
test
and
or
xchg
inc
adc
sbb
or
push
mov
testb
jo
dec
andb
cli
mov
push
gs
mov
mov
and
jo
mulb
jle
clc
jecxz
adc
sbb
aam
jnp
sbbl
mov
xchg
addr16
push
fisubs
push
lods
sub
cmp
or
adcl
inc
sub
inc
fstps
xor
movsl
stos
out
out
push
xorl
gs
inc
test
jg
adc
jmp
pop
pop
ljmp
mov
cmpb
push
mov
sub
ficoms
outsb
or
mov
jmp
adc
sub
call
rcr
jecxz
stos
jno
xor
push
js
pop
cwtl
cmpsl
jg
lds
insl
and
lods
fstpt
test
mov
dec
jmp
sub
mov
xor
mov
xor
xor
into
in
add
mov
mov
push
je
xor
lock
pop
sbb
sti
cltd
sahf
mov
imul
daa
or
mov
data16
and
or
hlt
push
and
cwtl
push
fs
in
je
out
xchg
xor
loopne
gs
aaa
fcmove
jecxz
ja
ja
pop
cmc
aad
xchg
scas
xchg
xchg
jae
stc
sub
sarl
rol
jl
xchg
bound
push
cmpb
mov
xchg
iret
insl
inc
nop
dec
lds
dec
in
and
mov
pop
xchg
sub
mov
loop
mov
fdivs
nop
adc
push
call
or
rclb
push
and
pop
sbb
push
mov
or
inc
clc
je
pop
stc
out
inc
sub
xchg
sbb
xchg
mov
jae,pt
dec
sub
shr
add
pop
imul
imul
and
xchg
fadd
adc
bound
test
jae
xchg
sub
mov
addr16
cmp
dec
cwtl
mov
daa
std
and
jne
xor
jno
outsb
xchg
int3
testb
ss
cmc
pop
loopne
movsb
push
cmp
sub
ss
and
cmc
mov
push
and
cli
addb
xchg
loopne
xchg
and
mov
test
inc
pop
cmpsl
leave
ret
xchg
pushf
fs
sub
mov
add
add
fnstcw
addr16
sbb
cmp
loopne
jle
pushf
fldt
xchg
movl
mov
shll
xor
js
aas
mov
jg
or
hlt
test
inc
popa
testl
mov
add
jl
inc
jnp
sub
mov
push
pusha
leave
dec
xchg
pushf
lock
mov
cmp
mov
or
push
bound
xlat
iret
sub
hlt
sarl
mov
outsb
sub
cmpsb
xchg
scas
jge
cli
pushf
sbb
dec
mov
insb
shrb
push
popa
adc
je
pushf
push
testl
mov
fdivr
jg
lret
pop
push
js
sbb
cmp
aam
test
add
loopne
sti
lret
mov
push
insb
ficoms
cmp
lahf
hlt
mov
iret
xlat
dec
push
decb
repnz
ficoms
push
aaa
push
xchg
rorl
lret
seto
pop
cwtl
or
fpatan
les
rcrb
add
aam
popa
dec
gs
aaa
cmpsb
cmpsb
leave
ret
pusha
inc
xor
sbb
sub
adc
fcoms
mov
popl
adc
and
xchg
jmp
js,pt
lret
jge
pop
es
sti
mov
xor
xchg
subl
cld
fwait
leave
rorb
fwait
adc
scas
pop
xchg
or
lock
lahf
lcall
mov
jo
mov
lock
cwtl
adc
cwtl
imul
and
jecxz
mov
jle
bound
pop
pop
jle,pt
loopne
add
in
sbb
mov
jb
add
adc
jne
or
out
xchg
cmp
and
punpckhdq
dec
scas
dec
pop
dec
push
fcomps
out
jecxz
mov
mov
cmpsb
xchg
pop
cmp
iret
cmp
fisttps
cld
sbb
jg
jno
out
mov
xchg
adc
ret
add
data16
pusha
mov
gs
popf
int3
outsl
mov
rorb
movsb
call
mov
clc
out
shll
hlt
push
je
int3
xchg
inc
testb
pop
add
mull
call
and
fcompl
or
repnz
push
cmpsl
cld
lock
xchg
sub
sbb
pop
pop
nop
imul
in
pop
inc
std
ucomiss
cmpsl
testl
push
inc
scas
inc
jmp
dec
aad
mov
scas
movsl
test
fwait
push
lock
push
sahf
testb
cli
dec
lods
cmp
arpl
cwtl
push
ja
xchg
xchg
out
sub
add
xor
ss
jno
add
mov
inc
shrl
inc
movsl
cmpsl
jge
testl
xor
mov
and
sahf
insl
or
or
imul
sbb
ljmp
enter
and
adc
adc
mov
incl
js
out
dec
xchg
add
fsubl
or
push
imulb
xor
adc
popf
inc
hlt
pop
das
icebp
jecxz
pop
xor
in
mov
rclb
sub
lcall
in
jb
js
cmp
stos
mov
adc
movsl
rcl
or
clc
loopne
xchg
imul
clc
xor
add
fldcw
cs
and
mov
data16
xchg
scas
mov
mov
jne
pop
add
mov
popa
jo
mov
test
pop
pop
cmc
call
sub
jb
cs
test
jp
sub
jmp
mov
xchg
inc
mov
shlb
imul
inc
push
insb
push
mov
je
test
rolb
ret
adc
xchg
test
js
aaa
lea
or
movsl
jne
mov
push
sbb
cmp
mov
xor
and
ljmp
push
and
jae
shl
cmpsb
sub
in
lds
inc
mov
pop
mov
add
fsubrl
out
sbb
mov
aam
xor
in
or
popa
pushf
dec
jl
fimull
mov
loopne
or
jb
sbb
push
fdivs
mov
cli
push
aad
dec
push
push
adc
bound
dec
sar
pop
inc
daa
fwait
rcr
push
dec
iret
and
inc
lock
or
adc
sub
fmuls
idivb
rcrb
xor
mov
xor
pop
sbb
mov
mov
fwait
hlt
stos
mov
pop
sub
add
into
xchg
dec
adc
xchg
test
push
pop
stos
adc
ret
push
jge
mov
cwtl
fsubrs
adc
lret
push
int
jb
idivb
mov
push
fwait
or
popf
loopne
pop
inc
cmp
imul
gs
pop
in
shll
roll
mov
stos
fnstsw
rcrl
test
pop
mov
pop
es
or
xor
mov
mov
out
je
std
lock
fsubrl
stc
fisttpl
test
ja
jmp
fadds
mov
out
mov
es
fcoml
cltd
hlt
inc
or
sub
fdivrs
fnstsw
cs
adc
repz
mov
jl
cwtl
faddp
or
lds
and
jge
lds
xchg
inc
and
bound
xchg
mov
adc
sub
pop
cmp
push
push
in
jno
lea
inc
inc
mov
dec
and
out
xchg
aam
pop
test
in
push
jae
std
in
jne
add
imul
xor
sahf
cwtl
mov
sbb
outsb
js
push
sahf
xor
jmp
add
mov
popa
out
lahf
ja
maskmovq
testl
subl
cs
inc
push
mov
sarl
pop
fldenv
mov
hlt
xchg
push
mov
dec
andb
adc
frstor
pop
fdivrs
mov
and
in
xlat
fstpt
jg
push
pop
or
movsb
je
mov
or
out
rorl
pop
cs
aas
or
add
mov
add
outsl
aas
or
sub
mov
test
jecxz
or
pop
dec
mov
xlat
ret
push
and
cmp
mov
sbb
xchg
mov
shl
push
aam
sub
loope
jge
es
lcall
ja
es
bound
out
push
insb
aad
scas
sarl
xchg
xchg
pop
cmpsb
adc
test
cmpsl
repz
mov
jno
mov
jns
jns
arpl
int
dec
lcall
fisttpll
sahf
push
xor
xor
or
pop
lods
jl
sbb
xlat
push
cmp
and
loope
js
nop
gs
xchg
hlt
inc
push
cld
rolb
cs
sbb
mov
insb
test
mov
add
mov
mov
xchg
bound
nop
clc
xor
xchg
jl
out
pop
ret
lcall
pop
pop
in
int3
and
mov
jo
gs
cwtl
loopne
addb
pushf
push
jl
notb
mov
pushf
sahf
sbb
scas
dec
pop
fcompl
test
lea
xchg
inc
push
inc
lcall
repz
fnstcw
inc
loop
sub
mov
sahf
jo
bound
mov
add
sub
sbb
je
mov
jne
cmp
cmpsb
sbb
nop
cmpsb
push
movsb
icebp
mov
xchg
loope
fs
cwtl
xor
sahf
daa
arpl
test
push
inc
lahf
adc
pop
inc
push
jmp
sub
xor
jae
ds
dec
mov
sub
sub
sbb
ret
sti
imul
dec
aas
in
mov
xor
xchg
rolb
out
jo
outsb
cmpsl
sbb
pop
in
mov
into
jnp
iret
push
mov
das
popf
imul
andb
lcall
pop
rcrl
lret
pop
mov
push
adc
rclb
inc
xchg
mov
mov
mov
ds
lret
sub
in
test
stos
hlt
popf
cmp
in
rcll
imul
adc
mov
dec
insl
or
nop
or
jg
mov
jp
xlat
aas
gs
xchg
in
lret
fdivr
cmp
dec
les
in
js
pop
test
inc
or
pushf
nop
in
xchg
and
aas
xchg
pop
iret
test
loope
outsb
jbe
jb
push
cmpsb
popl
adc
push
lods
lds
fs
mov
xchg
pop
mov
out
popa
mov
jmp
loopne
leave
cmp
push
mov
push
pop
stos
das
pop
pop
lock
fstl
addl
test
dec
insb
and
sbb
dec
push
mov
lock
in
inc
and
leave
imul
xchg
sbb
fildl
cwtl
dec
and
ljmp
add
test
loopne
dec
loopne
sbb
testb
push
lret
push
jns
dec
sub
mov
imul
sbb
cmp
or
pop
push
xor
fwait
add
pop
or
sbb
in
into
subb
aam
sbb
out
mov
test
cltd
inc
sbb
repnz
jle
and
mov
mov
inc
mov
call
nop
dec
lods
or
movsb
adcb
sub
fstp
cmpb
push
jmp
sub
inc
bound
daa
decb
jae
repnz
shll
ja
inc
or
pop
push
push
dec
cmp
jl
hlt
ss
mov
rcr
into
dec
jns
push
rorb
xchg
cmp
inc
data16
mov
pop
adc
movsb
cmpsb
push
repnz
dec
fistps
push
inc
pop
insb
pop
sbb
fnstcw
stos
repnz
negb
loop
mov
pusha
or
add
test
adc
test
insl
jnp
jge
rorb
and
scas
push
jno
adc
outsl
xor
lcall
and
pop
mov
notb
pop
push
mov
stos
push
mov
sbb
or
fimull
dec
fidivl
es
je
inc
xor
sbb
outsl
push
xor
jle
mov
fisttpl
push
dec
or
lret
mov
cmp
movsl
bound
hlt
pop
add
inc
mov
cmp
out
push
and
int
sub
stos
sti
into
push
pushf
cmc
xchg
in
mov
fimuls
and
adc
pusha
sbb
push
cli
mov
push
lea
fidivrs
and
and
scas
dec
mov
imulb
int3
jo
sub
in
adc
outsb
cmp
daa
mov
stc
into
adc
ja
fwait
add
aam
jns
mov
cmp
arpl
push
out
push
xor
shrl
sahf
dec
or
push
mov
and
add
dec
mov
xor
sub
pusha
mov
stos
mov
push
inc
out
insb
fidivl
mov
bound
pop
lock
xchg
sarb
in
movsl
sbb
add
lret
aas
xor
sub
pop
ret
test
stc
xchg
mov
pop
mov
push
aad
pushf
sbb
push
hlt
cmp
iret
xlat
inc
jmp
repnz
mov
adc
sub
sbb
push
movsb
push
loopne
dec
push
fldl
repnz
cmp
mov
roll
sub
cmp
dec
xchg
pop
lahf
sbb
daa
stc
inc
sbb
adc
sbb
mov
xchg
jp
arpl
ss
shr
push
movsl
lods
or
or
dec
push
scas
js
test
inc
pop
mov
dec
pusha
mov
popf
lcall
movsl
cld
push
add
fs
dec
pushf
rcrl
std
roll
cmc
loopne
test
das
jp
int3
mull
out
xchg
imul
outsb
inc
cmp
pusha
inc
fs
dec
loop
sbb
dec
add
addr16
mov
cmp
lods
adc
jns
fnstenv
jne
add
gs
pop
jg
outsl
cmp
sbb
and
mov
aam
loopne
inc
ds
in
adc
jo
cmp
or
mov
sbb
test
jp
xor
jmp
fwait
push
jge
sub
insl
add
ljmp
stc
mov
adc
or
cmp
or
aas
or
imul
test
mov
dec
jmp
mov
lock
sbb
cmp
incl
ficomps
pusha
jo
aad
jnp
insl
sub
jmp
mov
or
dec
mov
mov
push
jae
test
ficoml
clc
out
loopne
lds
inc
push
sbb
pusha
into
std
adc
insb
lock
lcall
add
adc
sarb
sbb
bound
mov
or
cmpsb
adc
mov
stos
loopne
xor
add
out
push
xchg
lods
rol
push
or
inc
fstpl
addr16
inc
lods
dec
mov
xchg
sarb
je
push
xchg
insl
insb
xchg
inc
imul
mov
dec
jns
mov
or
sbb
pop
stos
aam
or
cmp
insl
sarl
inc
test
xchg
clc
push
jns
xchg
jl
fisubs
bound
and
das
in
jbe
push
xor
sahf
inc
out
out
bound
inc
cmc
sub
add
mov
fwait
mov
jae
idiv
in
outsl
push
in
cmp
dec
out
addr16
push
dec
xchg
fcomps
jmp
clc
repz
bound
loopne
jbe
inc
adc
push
dec
andb
jnp
and
scas
push
cmp
int
popf
sub
adc
cmp
popa
pop
cmpsl
lock
movsl
dec
inc
pop
js
xchg
imul
inc
adc
push
rcr
add
mov
jecxz
stc
add
outsl
pop
pop
loop
call
andl
scas
inc
aam
fildll
pop
cltd
test
in
xor
sub
adc
xchg
cmpsb
loop
add
popa
les
dec
arpl
mov
repz
fmuls
jns
mov
mov
cwtl
sub
sbb
testl
outsb
jecxz
data16
fsubrl
add
inc
xor
jnp
cmp
xchg
xchg
sbb
pop
cmp
sbb
int3
cmp
lcall
jge
jo
adc
sub
xchg
mov
in
xchg
orl
test
push
shll
add
arpl
dec
pop
xor
and
pop
mov
mov
xchg
rolb
cli
andl
popa
mov
stos
push
imull
and
mov
popf
sahf
enter
clc
jge
popf
repnz
rolb
cmc
scas
loope
test
push
call
lock
mov
push
das
xor
jmp
xchg
nop
cmp
rolb
call
shlb
fidivrs
rcll
adc
mov
or
shll
adc
rcr
adc
cltd
pusha
or
jl
inc
xchg
pop
and
pop
scas
nop
fisttpll
or
repz
jbe
or
cltd
jne
loopne
jae
testb
ja
ss
inc
jecxz
adc
data16
jmp
push
xchg
cmp
out
adc
lret
ja
ret
rcrl
sahf
xchg
xor
sub
and
sub
cs
push
mov
std
mov
cmp
dec
imul
sahf
mov
add
lcall
mov
out
and
mov
push
mov
stos
push
inc
cmp
out
jb
ret
aaa
arpl
rol
xchg
imul
loop
int
es
outsb
in
cmp
add
mov
cmp
das
dec
sahf
inc
ret
test
popa
adc
pop
adc
cmp
stos
ds
pop
inc
test
jge
ror
inc
pushf
xor
lcall
mov
sub
cmc
mov
or
nop
lahf
aas
test
sbb
mov
jbe
jp
popa
lret
mov
mov
cwtl
mov
add
enter
dec
or
lods
ja
inc
inc
and
push
pop
loopne
aam
mov
nop
ds
test
bound
icebp
fs
mov
jns
dec
xor
decl
popf
jne
pop
sbb
cwtl
aam
test
dec
xor
sbb
test
arpl
stos
imul
and
frstor
cmp
sbb
xor
dec
xchg
dec
xchg
fstpt
out
ljmp
push
jbe
pop
xchg
pop
ja
inc
stos
adc
push
xor
pop
test
in
xor
rcrb
cli
jo
sti
addr16
sub
sbb
hlt
nop
jle
sbb
sti
cwtl
push
dec
mov
pop
dec
xchg
shll
sub
push
roll
sti
sbb
mov
mov
fs
pop
ficompl
push
ret
jne
xchg
adc
cli
sbb
outsb
cwtl
adc
fimuls
mull
xor
inc
sub
mov
stc
not
lea
lahf
subl
or
setp
jae
ljmp
jge
xor
pushf
or
insb
pop
iret
push
test
or
pop
xchg
mov
cmc
and
call
aam
stc
cmpsl
std
loope
mov
rcrl
pop
jg
icebp
insl
adc
or
data16
rol
rclb
sbb
mov
xchg
call
enter
ss
sbb
xor
add
je
std
pop
test
pop
and
sbb
rcr
insb
insb
stos
test
adc
mov
loop
clc
call
dec
jo
loopne
pop
lret
push
loopne
mov
cmc
mov
adc
mov
cli
pop
xchg
out
shlb
psubusw
add
decl
mov
pop
repz
mov
stos
jae
std
dec
dec
dec
add
lods
testb
push
pop
popf
jb
mov
mov
pusha
or
dec
aam
pop
push
xlat
dec
leave
and
in
addr16
in
dec
xchg
pop
fcmovb
cwtl
pop
sbb
adc
add
or
add
xchg
hlt
loope
push
push
sti
adcb
pop
fidivs
sub
pop
das
dec
jbe
cmp
push
repz
lea
cmpsl
jp
rolb
ror
fstl
inc
mov
cli
jge
jae
sti
pop
lods
int
pushf
ret
mov
push
test
pop
mov
loop
inc
es
cli
iret
pop
or
push
push
and
xchg
shrd
imulb
test
dec
in
adc
cld
jb
sub
in
ds
int
dec
jns
push
mov
dec
inc
movsl
inc
xchg
xchg
out
fisttpll
cmp
mov
sub
cmp
push
dec
xor
cmp
push
jge
mov
jl
cmp
push
push
jno
out
out
lods
in
sbb
clc
jo
dec
sub
cli
cmp
out
je
mov
mov
enter
mov
insl
push
popa
pop
nop
mov
sbb
xchg
or
stos
test
inc
xor
into
cmp
repnz
out
push
jle
cmp
xchg
inc
mov
jl
mov
mov
hlt
mov
or
jbe
loope
rcll
mov
ss
mov
imul
dec
pop
jnp
pop
or
jno
mov
inc
mov
dec
arpl
and
add
mov
shlb
inc
out
or
sub
mov
fldt
cmpsl
dec
insb
and
lret
test
pop
add
jae
add
fdivrs
lea
inc
xchg
jmp
mov
mov
gs
dec
pusha
or
or
andb
cmp
es
jo
mov
cwtl
cmpsb
ss
jo
mov
cmpl
inc
adc
push
das
add
adc
lahf
jno
sub
rcrb
or
sbb
jne
cmp
leave
adc
cli
xchg
pusha
stos
xlat
data16
push
mov
shl
push
fstpl
insl
mov
aaa
das
and
aaa
je
ret
sbb
and
sbb
jne
repnz
adc
mov
pop
pop
in
insl
xchg
ljmp
js
xchg
loopw
inc
push
jbe
mov
adc
movl
leave
pusha
mov
fidivrs
repz
jb
sub
and
fisttpll
adc
out
mov
in
pushf
inc
in
pushf
jg
das
in
pushf
pushf
push
jae
js
cmp
cmpb
jne
pop
cld
icebp
mov
jne
or
ficompl
sbb
mov
data16
or
in
iret
add
xlat
mov
out
inc
mov
ret
xor
or
push
jmp
dec
sbb
in
jge
pop
push
sub
loop
into
insl
xchg
and
add
pop
lea
pop
jb
lock
fstps
sub
dec
decl
mov
push
std
pop
add
lock
pop
scas
repnz
mov
pop
lret
into
inc
sub
sbb
inc
xchg
mov
les
add
cmpsb
dec
sbb
rorl
push
icebp
dec
xchg
sbb
sbb
cmpl
mov
ret
and
int3
add
push
popf
push
fnstcw
data16
or
mov
xchg
mov
xchg
outsl
sbb
mov
cld
cmpsb
frstor
test
icebp
pop
cmpsb
cltd
lret
sub
push
icebp
sbbb
ds
lock
jo
mov
int3
push
sbb
mulb
repnz
jne
testl
mov
in
jg
sbb
inc
repz
and
and
mov
jp
mov
push
in
cld
out
mov
pop
repz
push
pop
cmpsb
adc
imul
insl
or
stos
lods
and
int
sbb
xor
xchg
out
jmp
sub
mov
xchg
push
in
jp
pop
jnp
dec
iret
jecxz
xor
cmc
add
lea
xchg
icebp
xchg
addr16
inc
mov
lds
lock
xor
xor
negb
fsubrs
ja
fnstenv
daa
pushw
ljmp
rorl
mov
push
dec
jmp
std
or
repz
movsb
int3
inc
xor
lods
stos
mov
adc
or
stc
sub
mov
xor
iret
fdivrs
scas
xor
pop
mulb
bound
jno
cmp
mov
cmc
inc
or
enter
in
inc
xchg
push
or
imul
scas
inc
cli
cwtl
pop
adc
into
mov
jae
mov
jl
xchg
jp
test
aad
test
clc
cmp
fwait
inc
movsb
cmovbe
mov
pop
adc
pop
aas
sbb
add
nop
movsl
mov
jge
mul
loop
mov
add
mov
jns
jb
hlt
dec
test
scas
mov
inc
aam
pop
fwait
jle
cltd
push
cmp
pop
add
add
movsl
inc
ljmp
cmpsb
arpl
adc
insl
loopne
mov
cwtl
xchg
das
clc
call
or
gs
data16
pop
lahf
incb
inc
in
jg
ror
jbe
inc
pop
pop
xchg
ficomps
dec
mov
and
mov
or
mov
stc
shrb
test
ss
sahf
sahf
pop
repnz
inc
subl
sbb
and
sub
mov
sbb
clc
and
jle
mov
je
stc
leave
pop
daa
inc
daa
je
fcomps
mov
fwait
dec
xor
push
scas
int3
cmp
pusha
pop
insl
xor
push
enter
lcall
mov
jl
push
mov
jae
and
sbb
mov
lcall
sub
dec
in
adc
insb
mov
js
rorb
sub
xor
xlat
movsl
mov
push
in
mov
add
add
stos
and
mov
sub
mov
pop
jno
push
and
jge
and
ret
xor
lds
pop
shl
test
xor
cli
loope
xchg
xchg
negb
pop
or
fs
jne
fnsave
sub
out
arpl
dec
push
mov
std
xlat
test
mov
adc
lret
jnp
cmp
dec
xor
jb
mov
aas
mov
mov
pop
xchg
insb
xor
or
stc
fsubrs
dec
jge
fcomps
es
iret
test
xchg
pusha
lcall
lret
pop
mov
cld
mov
int3
gs
jb
sbb
mov
mov
sbb
lret
cmpb
aam
shrb
out
mov
add
cwtl
mov
lahf
aas
xlat
push
fnstenv
addr16
jnp
pop
inc
lret
jg
mov
pop
sub
aad
pushf
xor
mov
sbb
xor
or
xchg
mov
bound
sbb
sbb
cs
push
xchg
jnp
movsl
add
out
dec
stc
push
mov
fnstenv
adc
roll
into
jne
stc
inc
fbld
add
and
jmp
into
adc
jmp
jecxz
adc
mov
dec
jmp
adcb
mov
mov
mov
push
fsts
sub
js
and
fcmovnbe
mov
push
insb
cmp
hlt
add
inc
out
add
or
jne
dec
imul
mov
mov
aaa
rcrb
pushf
add
lock
add
and
dec
adc
in
lahf
mov
out
or
mov
fldl
insl
imul
xor
pop
xchg
jbe
insl
cwtl
es
lds
pop
adc
imul
and
inc
iret
incl
adc
sbb
adc
je
movsb
int
push
and
push
mov
fwait
push
enter
js
cmp
cs
test
add
sub
xchg
das
je
call
mov
mov
mov
cmp
fiadds
pop
inc
or
lea
push
mov
dec
mov
inc
mov
dec
test
dec
pop
dec
jp
xchg
jmp
test
int
sbb
pop
adc
inc
dec
jnp
decl
das
loopne
outsb
mov
aas
mov
test
shrl
push
addb
adc
aaa
rorl
fisubrs
test
out
notb
sub
push
sahf
into
push
or
or
cld
fimuls
rcrl
cmp
je
ffreep
in
cmc
and
adc
add
or
shll
add
cli
insb
orb
sbb
ljmp
add
mov
sets
push
cmp
stos
leave
sbb
mov
movsb
cmpsl
xor
xor
sub
xor
pop
aam
ljmp
and
lahf
xchg
roll
inc
mov
sub
cmc
mov
mov
add
mov
imul
pusha
popa
data16
sub
mov
enter
hlt
cmp
adc
sub
add
or
lret
adc
dec
jne
outsl
push
add
fldl2e
sbb
lcall
dec
jne
sub
sub
loopne
data16
cmp
push
cmp
jmp
lret
data16
cli
dec
movsl
es
mov
fwait
icebp
mov
popf
int
fcoml
mov
mov
dec
enter
je
add
push
adc
sbb
sarb
push
insb
add
jbe
jnp
mov
cmc
test
mov
dec
dec
lds
cmc
pusha
jns
popa
fs
push
iret
push
loop
or
popa
mov
dec
ret
mov
lods
xlat
push
icebp
xchg
xchg
in
adc
call
insb
js
imul
nop
movsb
cmp
pop
and
push
ficompl
shll
ret
clc
adc
cmp
jge
xchg
sub
adc
adc
mov
inc
mov
push
xchg
pop
ja
fs
mov
loopne
int
jle
mov
xchg
adc
bound
add
sti
clc
ss
xchg
sbb
mov
enter
sub
andl
mov
and
add
loopne
push
popf
imul
out
push
xchg
or
sahf
dec
mov
sbb
movsb
lock
mov
bnd
out
fisubrl
inc
pop
scas
adc
pop
test
loop
stc
jo
dec
das
jle
xchg
adc
std
test
adc
cmpsb
mov
mov
pop
or
mov
xchg
scas
push
push
xchg
leave
sbb
pushf
push
out
sbb
xchg
inc
xor
jo
rcrb
enter
sbb
ljmp
repnz
int3
out
sub
xchg
inc
pop
repnz
jne
adc
lock
sub
push
push
das
or
add
jne
lods
push
adc
cwtl
leave
inc
das
int3
mov
iret
lock
mov
cwtl
pop
into
inc
mov
cmc
push
xchg
xor
sub
ds
loop
loopne
rolw
cltd
test
xchg
or
sbb
cwtl
push
xor
add
xor
aam
daa
imul
mov
inc
pusha
lret
lret
inc
enter
or
and
out
mov
adcb
inc
jg
or
and
pushf
sbb
xor
jns
pusha
pop
rcrb
rorb
stos
mov
fildl
scas
add
fsubrl
incb
or
in
push
dec
leave
xor
inc
push
popa
mov
into
push
mulb
pop
fcmovnbe
sub
js,pt
bnd
mov
sbb
andl
pop
cmpsl
dec
cmp
sbb
sub
push
sti
mov
xor
mov
test
pop
lds
push
sbb
dec
imul
ds
sub
mov
inc
mov
aad
scas
jg
adc
cli
push
les
fwait
xor
push
push
cmp
mov
jle
mov
or
insb
std
les
rcrb
jae
insb
lcall
pminub
lock
xor
push
lea
mov
adc
xor
jb
lea
mov
leave
push
cmc
test
mov
adc
mov
inc
ja
or
dec
cwtl
xor
sub
mov
pushf
dec
mov
jo
add
cmp
jecxz
add
int
sbb
cmp
xor
in
loope
dec
sub
xor
mov
enter
xor
adcb
js
sbb
cli
jae
ret
scas
push
mov
arpl
pushf
popa
and
daa
testb
push
fsts
ljmp
aad
cmpsb
out
aaa
dec
sahf
scas
ja
cmpsb
mov
jg
movsb
frstor
nop
dec
mov
mov
cmp
int
cmp
notb
mov
adc
adc
adc
fwait
hlt
loop
xchg
mov
or
mov
test
mov
mov
cld
pop
dec
out
jo
cltd
ljmp
xchg
rsm
sub
out
push
push
pushf
cmp
ror
dec
cmp
or
orl
ds
lock
loope
adc
cs
aas
shll
inc
cmpsb
push
jp
and
sahf
test
jne
and
lret
insb
fbstp
mov
sarl
xchg
insb
mov
mov
je
rcr
and
push
xchg
test
ja
or
nop
test
add
pop
jns
pop
rcrl
sbb
nop
pop
mov
shl
test
sbb
js
mov
das
inc
int3
in
mov
and
pop
iret
into
icebp
push
xor
adc
subl
inc
aas
dec
xchg
pop
adc
pop
test
stos
jle
pop
les
and
and
inc
add
sub
cmpsb
leave
mov
fdivs
daa
mov
shrl
jo
insl
loope
and
mov
ret
sub
inc
sarl
add
push
mov
xchg
cld
les
ja
and
or
inc
or
stos
lea
sub
scas
jns
in
sbb
in
mov
bound
push
sbb
movsl
jmp
ja
jo
pop
mov
xchg
or
push
rdtsc
testb
gs
add
sbb
and
lea
xlat
xorl
inc
outsb
popa
pop
xchg
pop
push
sbb
push
push
lret
movsb
imul
jnp
add
sbb
adc
insl
fnstenv
imul
cmpsl
cmpsb
push
or
mov
inc
popf
pop
scas
leave
lods
xchg
sti
pop
sbb
inc
cwtl
cmp
int
inc
outsl
mov
insl
fs
mov
jns
mov
or
iret
outsb
pop
cmpsb
xor
mov
cwtl
fimull
xchg
adcl
pop
dec
adc
ss
nop
test
icebp
cmc
enter
fistl
sub
stos
mov
ja
mov
lods
xor
pop
push
addl
mov
pop
loope
popa
sub
lock
cmpb
cmc
pop
aad
and
cmpsb
lahf
jb
push
fdiv
fsubp
out
mov
xor
cmp
js
inc
or
xor
or
ljmp
outsl
push
push
scas
push
xchg
lock
xor
xchg
sbb
xor
mov
add
push
sbb
inc
dec
dec
fisubrl
cmp
xchg
jg
xchg
dec
xchg
sti
imul
icebp
adc
notl
add
adc
ljmp
outsl
cmp
dec
cmp
ficoml
std
out
jae
clc
int
arpl
push
mov
aaa
jae
movsl
adc
or
inc
imul
imul
aad
mov
xor
int
aam
dec
loopne
lret
pop
xchg
xchg
mov
bound
pushf
movsl
fxch
inc
mov
jecxz
cwtl
cld
push
inc
repnz
jmp
in
jl
jne
test
out
add
ficoms
sarl
xchg
lds
jg
ret
scas
sub
cli
xor
xor
xchg
imul
jg
xchg
movsl
enter
mov
cltd
push
inc
mov
cli
push
cmp
sub
add
ss
inc
test
dec
fcom
cltd
jecxz
mov
sbb
mov
jmp
pushf
xchg
lock
pop
and
testl
jmp
shlb
divb
clc
iret
iret
mov
loope
sub
lret
jno
jnp
sub
pop
ljmp
scas
jnp
xchg
mov
loopne
pop
fmull
cli
scas
and
sbbl
dec
gs
xor
xor
fwait
loop
scas
call
fwait
xorl
fdivs
rcr
mov
int
jp
jbe
icebp
int
jle
jmp
lahf
movsl
incb
insl
and
pop
xchg
lea
adc
xchg
mov
inc
hlt
insl
les
mov
and
in
sbb
or
mov
sbbl
cs
adc
arpl
xor
dec
add
repz
jmp
aad
rclb
in
and
sub
es
cltd
jmp
mov
es
pop
dec
jle
lock
flds
mov
roll
jecxz
mov
sahf
je
in
lret
sbb
psadbw
adc
dec
xchg
mov
mov
movsb
cmc
sbb
add
inc
and
pop
loopne
pop
movsb
mov
sarl
pop
or
or
sub
sub
xchg
div
mov
cli
xchg
clc
les
cmpb
inc
repnz
subb
sbb
fmull
sbb
push
xorb
or
mov
out
push
xchg
js
dec
sub
sub
and
push
cli
push
mov
aas
out
cmp
cmp
xor
dec
pop
sbb
fcmovnbe
pop
mov
lret
addr16
and
insb
test
and
nop
dec
push
mov
repz
sub
clc
out
jae
cltd
cld
pop
out
adc
mov
jbe
xchg
pop
cmpsl
sub
lcall
pop
sti
add
mov
push
cmp
dec
shlb
sbb
or
movl
dec
in
add
jmp
jmp
or
mov
dec
fwait
scas
sub
cmp
pop
imul
lea
dec
fnsave
jmp
out
mov
xlat
cltd
xchg
es
iret
mov
xchg
repnz
dec
ljmp
or
outsb
test
jae
insl
outsl
mov
and
das
pusha
aas
push
loop
adc
sbb
adc
aas
icebp
mov
jge
mov
cmp
in
sbb
add
mov
mov
mov
jl
mov
cmc
sarb
push
jge
fldl
and
shr
and
push
xor
leave
aam
inc
outsb
dec
pop
icebp
andb
popf
pop
xorb
push
lods
sbb
test
mov
in
cld
jbe
or
xor
int3
andl
cmova
xor
loope
xchg
lds
repnz
ficomps
imul
sub
xchg
adc
imul
lret
push
mov
xor
lcall
test
xchg
inc
or
fiadds
std
out
shrb
in
rcrb
inc
int
pop
ljmp
shlb
out
mov
mov
sub
and
aaa
imul
mov
fisttps
push
sub
stos
adc
mov
jge
inc
negl
hlt
out
adc
xchg
sub
loop
and
aas
push
push
int
dec
cmp
push
fsubr
sahf
mov
std
test
scas
mov
mov
push
leave
sbb
test
mov
sub
mov
mov
mov
scas
inc
adc
aas
lret
lods
and
ficoms
jno
mov
js
sub
lods
push
mov
fisubs
cmpl
outsl
or
in
sub
fwait
jne
addr16
dec
mov
stos
sbb
mov
ljmp
cmpsb
sub
cli
std
adc
sub
fistl
lock
in
dec
insb
xor
adc
popa
les
aam
fcompl
out
lcall
xchg
es
xor
push
xchg
xor
xchg
or
cld
or
fcmovnb
pop
xor
shrb
mov
mov
xchg
and
clc
test
dec
outsb
jo
loope
mov
and
cmp
loope
loopne
jle
mov
test
jecxz
test
mov
cli
mov
test
sub
ljmp
shlb
xor
or
sar
and
dec
adc
inc
aas
js
ja
cmp
inc
jl
test
xlat
inc
mov
pop
push
adc
ljmp
push
mov
ljmp
jb
lret
cltd
or
mov
xchg
lods
dec
mov
jns
mov
je
mov
test
shr
or
adc
and
mov
mov
pop
jg
jnp
cli
fistpl
add
push
mov
rorl
cld
or
nop
mov
pushf
ds
lcall
std
mov
out
push
mov
bound
pop
or
mov
pusha
shll
pop
test
int
xchg
push
jecxz
mov
outsl
mov
insb
cmp
or
mov
sub
scas
or
or
mov
inc
pushf
mov
dec
mov
push
mov
lcall
or
add
imulb
xchg
jne
sbb
shrl
repnz
mov
mov
pop
sbb
test
mov
dec
cmc
pop
popa
xor
mov
loopne
repnz
aaa
xchg
push
cmp
mov
shrb
aad
dec
fsubp
jnp
lds
xlat
adc
mov
lods
sbb
mov
std
sub
add
popf
add
shrl
xchg
leave
push
adc
hlt
push
ss
ret
xor
xchg
dec
aam
nop
adc
daa
sub
insb
jmp
push
sbb
cmc
sbb
push
mov
pop
xchg
xor
mov
cmpsb
int3
mulb
dec
cli
or
or
push
js
int3
mov
out
sbb
faddl
data16
addr16
cmp
loope
jo
movb
add
aam
and
fsubs
stos
sbb
dec
imull
fisttps
jne
xchg
into
mov
lods
sbb
out
mov
push
pop
shlb
enter
insl
xor
fcomps
jle
movsl
movsb
lods
jne
mov
fsub
test
adc
sub
sub
pop
mov
adc
je
mov
inc
dec
out
add
test
ss
pop
cmpb
pop
pusha
inc
sbbb
fidivrs
in
pop
mov
xchg
scas
pusha
std
aas
sti
aam
fnstsw
fistpll
dec
mov
out
xchg
fsubrl
out
fimuls
jge
ljmp
lds
pop
test
shrl
rcrl
cli
inc
and
rolb
xor
das
and
mov
lahf
cmc
mov
scas
test
push
push
and
and
mov
pop
dec
repnz
sarb
pop
push
mulb
pushf
push
fnstenv
jl
aas
in
icebp
sarl
cmp
jle
cmpsl
push
jl
jmp
pop
les
lock
cli
fwait
sbb
sbb
std
jl
outsb
in
mov
mov
in
pop
scas
sub
lret
mov
add
ret
jge
not
aaa
mov
into
dec
roll
lock
dec
movsb
xchg
xchg
and
jge
inc
inc
mov
bound
shlb
add
dec
ljmp
push
jle
idiv
pop
and
out
mov
in
repnz
out
in
icebp
cmpsb
push
or
and
dec
clc
aas
std
push
mov
iret
mov
jns
mov
inc
rclb
xchg
cmpsl
and
dec
inc
inc
filds
mov
or
sarl
push
adcb
lret
loop
hlt
mov
std
in
and
ret
adc
mov
in
xorb
inc
lahf
xchg
in
pop
xor
in
adc
arpl
std
mov
mov
pop
leave
lods
inc
sbb
jecxz
jmp
dec
cmp
sbb
dec
scas
sbb
cmp
mov
and
cmp
ret
lock
loope
xor
imul
repnz
fsub
mov
mov
sbb
sbb
push
mov
jmp
cld
pop
xchg
je
or
jmp
cld
sub
sbb
push
insb
push
xchg
stos
ss
int
ja
ljmp
push
or
xor
push
arpl
push
cmpsb
arpl
imul
in
adc
test
sbb
xor
ret
pop
jle
mov
sbb
mov
out
aaa
or
out
add
sbb
inc
sub
loopne
dec
outsl
inc
jb
stos
mov
test
pushf
enter
sarb
cmpsb
mov
mov
and
jle
jg
orl
dec
es
push
aad
in
callw
add
sub
lret
or
push
aam
sti
or
mov
push
bound
into
lea
adc
mov
int
je
sub
arpl
xchg
sub
add
popf
in
cmpsb
mov
aad
fidivl
addr16
fidivrs
hlt
or
push
pop
les
sub
fidivl
mov
add
push
adc
sbb
jae
sub
fs
jecxz
out
push
ds
mov
sbb
es
add
xor
push
pop
sahf
xchg
mov
fdivl
insb
inc
pop
dec
or
jmp
dec
in
xor
movsb
fnsave
lcall
cmp
leave
clc
cmp
gs
push
mov
std
add
notl
scas
dec
mov
lods
sahf
je
icebp
mov
push
rorl
cld
aaa
je
lahf
aaa
inc
lea
test
sbb
dec
jmp
test
push
pop
mov
mov
pushf
pop
mov
cmpsb
and
mov
sbb
out
or
jae
test
es
aad
or
test
mov
cmp
wrmsr
push
xor
nop
mov
and
stos
jge
jns
js
call
mov
cwtl
mov
dec
mov
cmp
adc
std
std
pop
jl
push
scas
and
cmpsb
mov
lds
inc
sbb
imul
cmp
sbb
fstpt
ret
mov
popf
in
inc
mov
push
iret
and
mov
xor
lret
mov
xchg
out
jmp
and
xor
sub
decl
inc
add
mov
xorb
popa
inc
xor
adc
clc
inc
xchg
sub
cmc
and
jl
add
jae
push
insl
sub
addr16
scas
dec
scas
mov
push
push
hlt
rcrb
iret
and
addb
push
shlb
sub
mov
adc
dec
mov
scas
cli
jmp
outsl
mov
sbb
fistpl
xor
mov
stos
test
sub
dec
dec
popf
adc
add
es
xor
popa
mov
negl
jb
mov
pushl
cmp
cld
mov
jg
jl
and
pusha
sahf
dec
pop
mov
inc
sbb
das
mov
sbb
fwait
jp
pop
repz
shl
xchg
das
mov
int
sbb
ss
add
xchg
jb
aad
pop
std
imul
mov
or
mov
mov
test
mov
sub
sbbl
mov
xlat
popf
cmp
dec
mov
jns
and
push
and
push
lret
movsl
inc
mov
push
leave
jne
repnz
add
sub
in
mov
fsubs
shl
jecxz
loop
shl
xchg
int3
xchg
mov
add
pop
dec
fistl
mov
movl
dec
stos
xor
push
imul
rcrl
in
add
mov
inc
sahf
shr
mov
adc
icebp
inc
pusha
lret
mov
out
or
mov
jmp
stos
in
adc
test
jl
mov
cmpsb
sbb
les
mov
int
or
cld
xor
icebp
inc
push
xor
test
popf
out
push
xor
je
fldt
mov
test
jns
sahf
orb
cmc
mov
sub
and
and
sub
mov
imul
mov
add
and
pop
add
negb
fisubl
pop
scas
mov
rol
inc
clc
adc
outsb
pushf
je
mov
or
cmp
jmp
je
inc
ja
js
rclb
pop
sub
mov
hlt
xchg
adc
inc
xchg
jge
cmp
xor
xchg
js
fildl
fldt
cmp
xor
popf
lcall
cli
xor
subl
pop
cli
sub
xchg
jne
adc
mov
pop
mov
xchg
xor
inc
jns
and
sar
arpl
shlb
sub
cmp
jnp
push
lds
in
scas
lock
mov
or
cs
stc
adc
and
shlb
mov
fnstcw
jb
lea
xor
jl
xor
push
sahf
shr
imul
jmp
xor
mov
adc
mov
jnp
jl
inc
or
popf
out
clc
push
mov
repnz
xorb
inc
sub
andb
dec
dec
shlb
push
call
adc
jmp
jnp
pop
imul
xchg
and
mov
push
int3
or
jg
imul
dec
out
nop
xchg
dec
sub
out
and
mov
jno
test
test
xlat
add
jne
in
inc
ffree
shrl
subl
xor
push
subl
cmc
daa
fidivrs
sub
add
inc
popf
sarb
cmp
movsb
mov
add
cld
imul
lret
xor
dec
out
cltd
jb
imul
loop
popa
ret
repnz
ja
sub
cli
fisubrl
aam
pop
sub
outsb
mov
test
int3
ja
jbe
inc
and
mov
fdivr
or
aam
hlt
repnz
add
jmp
or
inc
sbb
mov
push
ret
inc
inc
add
pusha
jb
jecxz
cmp
inc
mov
add
ret
sbb
push
mov
pop
jecxz
mov
dec
sub
adc
dec
aas
int3
lods
jl
xor
jmp
pop
shlb
or
adc
lcall
xchg
pop
cmp
fldt
pop
cld
adc
push
adcl
ret
pop
inc
lock
ret
lahf
rolb
mov
inc
outsb
scas
mov
sahf
dec
movsb
lock
addr16
and
mov
out
ret
insb
or
aam
js
push
cld
dec
xorb
mov
dec
sub
add
ret
xchg
mov
hlt
pop
adc
xchg
push
sahf
sbb
std
aad
add
jl
fistl
lcall
mov
ljmp
jns
lods
clc
das
mov
out
push
out
pusha
mov
cli
mov
ds
or
fbstp
adc
jnp
aas
and
xchg
mov
mov
repnz
cmc
mov
or
orb
mov
in
mov
mov
arpl
ljmp
sub
cmc
add
test
icebp
lds
loopne
jo
ret
jae
sbb
add
push
dec
enter
inc
loope,pt
adc
mov
sub
inc
xchg
cmp
push
inc
sbb
or
test
and
daa
mov
cltd
sub
stos
sbb
inc
cmpsb
lahf
xor
leave
and
sub
cwtl
xor
scas
sub
mov
xor
jno
movsb
jnp
lods
ret
pop
repnz
mov
lret
xor
test
push
xchg
add
xchg
out
xchg
push
dec
xlat
daa
and
cmpsl
out
push
push
jl
insl
push
loop
divl
call
inc
das
jmp
fwait
out
fmuls
iret
push
call
subl
xor
jnp
adc
pop
cmp
fsts
push
or
inc
popf
jecxz
push
subb
mov
mov
aaa
fwait
jge
les
mov
pop
leave
bswap
and
jmp
pop
sbb
dec
xor
sarl
ja
outsb
shlb
push
sbb
mov
xor
sbb
test
mov
stos
scas
outsb
cli
out
jge
xchg
push
out
lret
and
mov
or
psubq
and
sbb
ret
fs
sub
das
cmp
inc
scas
icebp
xor
jmp
pop
jecxz
jmp
sub
inc
dec
movsb
popf
pop
ljmp
repnz
nop
xchg
test
cmc
mov
mov
repnz
inc
test
rcll
das
mov
and
mov
enter
cs
sbb
loope
repnz
push
pop
fstps
jge
push
push
out
out
mov
or
xchg
push
sbb
xchg
js
inc
insb
cld
addr16
lret
dec
leave
lret
cmpsb
sbb
aad
hlt
flds
mov
inc
xchg
aaa
pop
into
pop
or
das
dec
out
xor
out
sti
or
xchg
pusha
mov
rcrb
ja
sub
mov
call
mov
mov
outsl
push
sti
iret
lods
and
adc
push
pushf
test
jge
into
adc
cs
xor
xchg
sbb
mov
aas
pushf
push
inc
xorl
in
or
pop
lock
and
leave
dec
mov
dec
int3
scas
data16
stos
sub
dec
je
or
stc
cwtl
out
insl
mov
mov
push
mov
add
cmp
cmc
cmp
xor
lcall
nop
sbb
jmp
scas
mov
cmp
into
ret
and
insl
cmp
and
sahf
cmc
sbb
xor
clc
fs
ss
push
dec
aas
xchg
cmp
fnstenv
add
je
mov
stos
or
cmpsl
xor
scas
pop
pusha
stc
fcompl
loope
inc
test
sub
sbb
and
dec
fstpl
or
mov
lret
dec
add
repz
push
pop
dec
or
and
mov
sub
mov
es
subb
jg
adc
inc
cmp
or
enter
lods
pushf
outsl
adc
xchg
sub
or
pop
dec
mov
andb
lods
mov
fstpl
daa
shl
mov
mov
sbb
cmp
push
cltd
lods
inc
dec
mov
shlb
int3
int3
sub
test
lock
or
enter
fwait
mov
jne
pop
pop
cwtl
adc
adc
mov
mov
jmp
jns
or
fst
fildl
mov
mov
cmp
mov
inc
rorb
lret
pop
sub
add
imul
xchg
loopne
rcl
jnp
rorl
and
sbb
mov
inc
popa
loopne
dec
dec
jp
sub
mov
leave
mov
fwait
rcrb
addl
imul
mov
shrb
outsl
sub
leave
das
clc
inc
mov
sbb
out
pop
shrb
cmp
adc
icebp
add
aad
ja
inc
mov
rcrb
adc
int3
into
and
cs
push
or
inc
mov
sub
aaa
cmp
fstps
jge
pop
inc
cltd
pop
adc
mov
sbb
jns
push
add
pavgb
stc
fstl
test
arpl
push
mov
dec
cmp
pop
xchg
xchg
es
insl
sub
lret
or
mov
mov
push
addr16
sbb
mov
jecxz
ret
and
stos
stos
sbb
fdivr
push
jmp
or
mov
mov
pop
outsb
pushf
pop
lods
ss
cmpsl
pop
cmp
push
adc
sbb
cmpb
fldenv
sbb
or
aad
cmp
mov
push
fnsave
jg
sub
pop
adc
dec
mov
notl
inc
jbe
stos
dec
sub
lcall
push
lods
cmp
ficompl
gs
je
or
cmpsl
jne
out
dec
push
rol
fprem1
jle
jns
dec
push
std
arpl
fnstenv
shrl
aam
mov
sbb
jl
mov
push
ret
jl
movsb
movsl
pavgw
decl
and
sarb
sbb
sub
ficomps
vmread
sub
or
dec
add
xchg
or
and
adc
and
lock
mov
ret
inc
cmpsl
xchg
dec
xchg
outsb
jecxz
or
xor
mov
dec
scas
and
jge
mov
pop
inc
inc
add
cmpsb
loop
es
inc
icebp
xchg
xchg
push
test
inc
or
jg
fcoml
pushf
cmp
out
sbb
enter
pop
sbb
cmc
sbb
icebp
rorb
sub
jl
jl
loope
jle
fs
rorl
lret
scas
cmp
or
push
pop
adc
pop
sub
mov
mov
cli
ds
cmc
out
insb
fsubrl
pop
cmp
cmp
aad
es
ja
popf
mov
pop
in
in
mov
sbb
in
mov
pop
int3
cmp
jge
xchg
xchg
out
iret
push
sub
push
mov
cmp
push
out
push
cmp
push
pop
shrl
loope
xor
nop
jg
lods
popa
adc
mov
push
icebp
dec
out
sub
push
or
jae
jmp
cli
dec
adc
gs
or
push
loope
pop
mov
test
mov
sbb
dec
lahf
adc
push
sti
mov
into
push
arpl
xchg
cmp
test
fwait
jb
pop
and
mov
dec
insl
mov
xchg
rclb
adc
mov
push
cmp
add
mov
adc
sbb
cmp
inc
iret
ja
shr
nop
xor
or
imul
mov
adcb
lods
cmp
and
sbb
jge
xchg
insl
icebp
pop
stos
mov
aam
jno
outsb
ficomps
mov
mov
fmuls
clc
cmpsl
xor
mov
adc
cld
fwait
cmp
mov
pop
lcall
arpl
testl
cmpsb
sub
xchg
jne
push
ljmp
jo
pop
enter
aam
and
mov
sbb
sahf
orl
lds
mov
mov
jbe
jp
jno
inc
pop
jmp
inc
jp
cwtl
cmp
sbb
stos
test
mov
and
mov
pop
mov
sub
ja
out
shl
jns
ljmp
mov
lock
int3
mov
test
insb
push
mov
mov
sbb
and
push
int3
lods
jnp
inc
cld
mov
sub
mov
movb
adc
cmp
cmp
sub
addr16
push
icebp
cmp
push
aad
inc
xlat
dec
dec
dec
cs
mov
cmp
aas
adc
xor
jge
mov
aad
je
cmp
in
xor
fiadds
scas
jg
leave
add
test
mov
rorl
sbb
adc
lds
rorb
sti
arpl
add
orb
mov
imul
bound
sbb
aaa
popa
fbstp
xchg
call
lahf
push
stos
fdiv
popa
sti
rorl
mov
mov
pop
push
and
sbb
mov
xor
jne
or
cwtl
mov
pop
sbb
lret
lock
rcll
outsl
push
lea
pusha
int
and
cltd
call
sahf
aas
popf
and
out
js
push
lods
aaa
and
dec
pusha
mov
fcomi
push
push
leave
inc
ljmp
push
das
sbb
adc
popa
push
and
push
push
push
sbb
sbb
aam
insb
jmp
jns
pusha
call
jl
mov
cmp
cwtl
cmp
shll
xchg
add
test
fsubrs
out
jp
outsb
cmpsb
xchg
add
lahf
jmp
add
popf
shr
jge
or
sub
add
test
ljmp
lods
jae
addb
cwtl
pop
sbb
dec
add
xchg
inc
fldcw
hlt
or
and
fidivs
ret
je
in
sahf
cmp
dec
lock
push
andl
fadd
pushf
fcompl
int3
iret
movsl
and
and
sbb
lcall
aas
push
jae
jns
inc
insl
cld
repz
rclb
pop
adc
mov
dec
stos
jbe
mov
mov
xor
or
jne
stos
orl
jl
in
dec
mov
xchg
stos
and
push
pushf
mov
mov
call
fsts
bound
lret
xchg
dec
cmpsl
sub
sti
add
dec
jl
popf
mov
adc
lods
fs
sbb
add
outsl
pop
lahf
push
pop
jae
and
pusha
repz
mov
xor
mov
xchg
rcr
inc
out
scas
mov
mov
inc
scas
js
outsl
adc
mov
mov
dec
add
mov
insl
out
and
outsb
mov
stc
nop
push
cmpsb
push
mov
leave
leave
cmp
frstor
push
out
divl
and
cmpsb
xchg
test
dec
mov
xor
notb
sbb
pop
push
adc
pop
rcrl
jecxz
imulb
and
dec
lret
or
movsb
divl
mull
sahf
mov
pop
jne
xor
movb
fcoml
movsl
mov
movsl
maxps
mov
mov
loopne
sahf
xlat
lahf
roll
mov
xchg
loopne
test
mov
inc
mov
jne
pop
rol
pop
and
orl
pop
enter
add
aad
xchg
mov
push
test
push
lods
xchg
and
out
movsl
test
cmp
loopne
mov
adc
sub
fidivrs
mov
sbb
push
or
lret
mov
fnsave
dec
movsb
jecxz
sbb
push
sbb
out
and
cmc
lahf
int
mov
xor
test
and
mov
and
sbbb
test
xor
outsl
cmpsl
pop
jns
movsb
mov
lret
inc
call
inc
dec
xchg
mov
out
stos
adc
aam
and
clc
add
push
test
nop
xchg
faddl
push
stos
addr16
fs
orl
es
dec
insb
cmp
jmp
dec
in
popf
dec
and
cmp
insl
cmpsb
pop
lock
stc
mov
cwtl
scas
into
lahf
call
nop
icebp
lock
js
sahf
icebp
scas
scas
data16
adc
jb
add
ljmp
or
fdivr
test
push
add
sarb
cmp
lock
mov
cltd
bound
xor
xor
mov
cs
push
push
pop
orl
cs
fs
push
inc
push
push
out
and
scas
aaa
jp
fsub
pop
sub
in
mov
popa
push
jge
out
push
push
cwtl
dec
scas
cmpsl
out
movsb
xor
outsb
loopne
jns
jns
popa
int3
dec
je
data16
sti
aam
hlt
jg
movsl
aas
adc
and
fnstsw
std
fcomps
cmp
and
cltd
jge
fsts
lea
pop
fidivrl
in
hlt
lea
aaa
das
lods
pop
sti
fsubrl
shrl
mov
mov
cmp
sarl
divl
fcmovnb
or
ds
sub
jns
mov
or
push
cmp
mov
cmp
jp
scas
test
jb
or
mov
jae
mov
lds
cmp
push
in
inc
nop
dec
leave
xlat
fimull
nop
jne
adc
in
xlat
dec
out
mov
and
xchg
xchg
lods
andb
xor
fmull
pop
ret
int
movsl
in
rorb
in
repnz
or
mov
mov
push
mov
adc
jno
sub
fcompl
bound
pop
lcallw
push
shl
dec
lret
fiadds
in
lods
push
lret
lods
push
jns
out
stc
add
pop
jle
add
push
add
inc
cltd
scas
sti
pop
mov
add
push
lods
popa
loopne
push
mov
add
sub
outsb
xchg
outsl
mov
sbb
fidivrl
mov
test
push
outsl
gs
push
xchg
jae
and
or
xchg
or
icebp
mov
xchg
push
pop
repz
sahf
push
in
inc
cld
push
and
mov
jmp
xlat
repz
inc
add
xchg
xchg
cmpsb
cmp
nop
push
std
subl
push
leave
mov
lock
inc
cmpsl
lea
mov
fnstsw
add
mov
push
ret
pop
ss
ret
es
or
sbb
shl
ret
popf
mov
mov
movsl
scas
aad
add
lcall
cmpsb
or
addr16
cwtl
bound
xchg
jbe
fimull
xor
jl
sarb
add
lret
addr16
mov
mov
xchg
sbbl
xor
pop
stc
add
mov
dec
stc
shrb
add
aam
push
cmpsl
pop
push
add
xor
loope
fisttpll
mov
dec
xchg
dec
shll
ficomps
xor
xor
mov
mov
mov
addr16
inc
in
loop
adc
mov
ja
lods
out
movsb
rcrb
and
iret
lcall
test
jns
add
jecxz
jle
inc
mov
cmp
lods
insl
cmc
adc
sbb
xlat
xor
xchg
fwait
and
push
pop
and
pop
pushf
out
adc
shl
call
cmp
scas
mov
xchg
pusha
mov
jmp
test
out
sbb
mov
sbb
popf
dec
stos
cli
jle
jns
sub
fidivl
daa
enter
dec
shll
stos
dec
adc
fldcw
lret
or
push
leave
or
andnps
mov
pop
movsb
icebp
ss
mov
fiaddl
das
test
xchg
mov
mul
mov
loop
jns
or
out
or
cli
pushf
jg
icebp
das
xchg
js
in
mov
sub
inc
adc
xchg
xor
pushf
int3
add
gs
jge
das
mov
scas
andl
and
and
or
sub
sbb
icebp
jno
ljmp
pop
mov
daa
fsubp
pop
add
outsb
push
jns
mov
xchg
lock
jns
testb
add
sbb
mov
xchg
lods
jp
je
sti
mov
pop
hlt
fisttpl
add
fldenv
int
cwtl
push
into
xor
jne
aas
jnp
out
fimull
movsl
and
xor
jo
mov
filds
sbb
fmuls
insb
ds
ds
test
outsb
lret
fsubl
stos
cs
popf
test
or
lods
ljmp
rcrb
add
ja
mov
xchg
lods
push
cmp
sbb
imul
movsb
leave
imul
cltd
int
scas
mov
push
cmpsl
mov
popf
iret
adc
jp
adc
ret
sub
test
out
sti
sarb
cmp
out
or
bound
mov
cmp
and
dec
in
repnz
aam
sub
stc
out
jo
push
sbb
inc
push
jo
push
adc
mov
imul
pop
inc
inc
mov
test
jg
xchg
iretw
cmp
maxps
push
or
lcall
insb
push
mov
call
and
push
fidivs
orb
sub
xchg
pop
jno
cmp
leave
roll
dec
popa
xchg
jo
cmp
gs
pop
dec
mov
std
and
fadds
test
sbb
adc
iret
out
daa
sub
pop
enter
sub
xorl
xchg
mov
sbbl
jnp
mov
adc
xchg
push
sub
cmpsl
inc
arpl
call
or
sahf
xor
or
inc
addl
loop
sbb
pushf
das
repnz
repz
ljmp
stc
outsl
cmp
jecxz
sub
mov
mov
adc
test
push
jle
sub
repnz
mov
test
shrl
push
or
je
data16
push
mov
cmp
popa
pop
lds
leave
sbb
lahf
pop
imul
jle
mov
data16
push
jecxz
popa
and
filds
mov
aad
aas
je
lahf
mov
pusha
aas
lods
negl
inc
nop
lods
lods
push
sahf
add
int3
call
or
and
mov
aam
xorb
mov
pushf
xchg
out
xchg
add
test
icebp
mov
je
loop
mov
add
inc
fiadds
or
rclb
fbstp
mov
aas
shlb
sbb
enter
jne
sub
push
xchg
cltd
mov
mov
sbb
out
popa
and
ds
mov
jae
add
repz
mov
add
lahf
pop
dec
jge
ja
and
push
cmpb
jg
sub
lcall
jo
push
mov
xchg
sub
lods
push
jge
mov
jae
scas
je
addr16
add
adc
adc
and
push
cmpsl
push
imul
mov
add
rcrl
pop
aad
dec
push
mov
mov
sbb
push
divb
adc
out
mov
push
mov
fdivrl
push
add
fstps
sub
and
mov
mov
pop
ja
inc
xor
cmp
mov
test
ficoml
push
loopne
scas
clc
je
xchg
jmp
sbb
cltd
jns
scas
stos
xor
pop
cmpsb
stos
xor
std
mov
loop
pop
imul
mov
xchg
fxch
jbe,pt
ret
mov
test
jnp
push
cmp
aas
inc
enter
jp
shll
dec
xchg
xchg
rcrb
je
xchg
push
sub
jne
mov
or
mov
ljmp
fs
pop
adc
mov
int
pop
pop
cmp
pop
jns
rcr
xchg
cs
scas
jnp
inc
lds
xor
sub
pop
adc
sub
xchg
add
push
push
sub
pop
fsts
repz
sub
imul
and
mov
xchg
repz
int3
lds
imul
xchg
mov
dec
cs
mov
xchg
jecxz
jne
or
adc
cld
xor
xchg
cmp
decl
data16
push
mov
cmp
bound
idiv
pop
jae
out
popf
jge
fiadds
mov
mov
testb
pop
mov
mov
ljmp
gs
jl
inc
in
leave
pop
cmp
in
cmp
mov
mov
aaa
jecxz
fidivrs
xorl
cmp
fwait
xor
in
and
or
cmp
repnz
cltd
mov
outsb
inc
int3
fidivs
sbb
fwait
add
push
int3
mov
jmp
adc
test
ljmp
lea
fwait
mov
pop
cmp
mov
cmp
mov
mov
cmp
out
mov
fucom
fdivrs
cmp
cs
sbb
xor
loop
out
cltd
dec
inc
add
mov
xchg
and
mov
sbb
push
mov
test
sbbb
ds
cmpsb
nop
repnz
sbb
mov
or
jmp
add
das
call
pop
add
push
inc
add
add
cmpsb
sub
cltd
out
or
mov
cmpsl
and
mov
sbb
adc
xchg
jg
aas
pop
dec
lret
adc
ds
jp
adc
cmp
mov
nop
gs
or
je
cmp
mov
les
adc
scas
fnstcw
pop
stos
int3
insl
mov
sbb
pop
outsb
mov
pop
out
adcl
or
xor
push
inc
xchg
aaa
imulb
jmp
push
addr16
fiadds
jg
xor
sar
mov
outsl
movl
scas
pusha
cld
ror
mov
xchg
mov
pop
mov
pop
sbb
cmp
inc
js
addl
jno
mov
into
inc
in
adc
add
push
out
jle
lds
icebp
hlt
mov
out
mov
pop
push
mov
clc
scas
and
jp
cmp
lock
pop
push
push
lods
fnstcw
jbe
add
dec
or
fwait
cwtl
imul
mov
leave
dec
push
jecxz
ret
cmpsl
cmpsb
xlat
fmull
popa
push
test
lock
cs
add
xchg
loope
push
outsl
jecxz
orb
jo
nop
gs
fld
ja
adc
gs
push
aas
fwait
cltd
pop
cmp
dec
int
mov
xchg
jnp
mov
dec
in
aam
fucom
cmpsl
pop
shlb
fwait
dec
pusha
ret
or
push
pop
cld
out
out
cmp
fdivr
inc
add
shll
in
xchg
sbb
dec
lods
lock
push
subl
mov
roll
xor
sbb
jb
jno
outsl
push
and
mov
mov
outsl
jle
add
adc
fisubrs
roll
mov
cmp
or
out
add
pop
les
push
aad
and
subb
rol
scas
rorb
call
cmp
sub
mov
pop
iret
fistl
stc
out
dec
imul
xor
lahf
add
mov
int3
sbb
vmovd
jno
mov
fimuls
movsb
pop
mov
jge
jb
or
fldenv
sub
cltd
cli
dec
jno
and
jle
outsb
and
gs
clc
and
mov
lds
and
push
std
mov
fstp
add
iret
adc
ds
cs
sbb
sub
xlat
into
loope
cmpsl
push
adc
adc
insb
mov
pop
dec
data16
jno
iret
push
jns
jp
mov
xchg
jbe
xchg
aas
and
pop
nop
dec
out
mov
ret
push
les
cmp
xchg
push
xlat
into
loop
push
ljmp
xor
mov
push
vorps
cmpsb
stos
or
lret
movsb
mov
cltd
insb
pop
es
push
inc
sarb
cmpsb
dec
lods
pop
or
daa
cmpsl
xchg
mov
or
ljmp
std
into
hlt
sbb
push
xor
mov
fstpt
sub
inc
cmp
out
cld
adc
mov
movsb
das
push
les
lret
xchg
mov
jge
je
mov
shl
sub
push
xchg
jne
mov
cwtl
lea
movsl
icebp
scas
ds
lea
sub
mov
adcb
jne
lcall
pop
and
cmp
jb
dec
int3
sub
cmp
in
addr16
hlt
fidivrl
mov
fstp
inc
pop
les
mov
lods
roll
cld
aas
rorl
mov
dec
sub
out
lock
std
inc
stc
neg
push
or
jns
fidivs
loop
add
cmp
mov
push
xor
fcom
ss
mov
cmp
scas
mov
xor
mov
xchg
enter
xor
cmp
dec
jp
add
dec
aas
cltd
ja
roll
nop
dec
mov
ljmp
and
dec
lock
adc
jne
fsubl
add
aas
fistps
ret
subb
outsl
sbb
push
repz
and
cmp
bound
and
cmp
lods
pop
and
jge
mov
push
loope
stos
sbb
xor
jae
in
and
loop
outsb
cmp
int3
mov
dec
sar
or
push
jle
xchg
jb
and
push
fldl2t
nopl
gs
or
inc
std
in
data16
inc
inc
ljmp
addb
xor
lret
mov
xor
jmp
mov
repz
mov
ret
xor
adc
out
mov
jns
cli
adc
push
push
fs
dec
mul
xor
push
sbb
pop
sbb
fsts
loop
sahf
mov
int
loope
sub
jo
lret
shrb
or
mov
movlps
cmp
cli
inc
adc
hlt
mov
add
jmp
leave
or
and
lods
jns
jae
je
or
mov
mov
mov
xor
mov
aas
jbe
mov
jb
cli
negb
jne
jnp
xchg
es
mov
rcll
dec
inc
repz
test
hlt
popf
test
mov
jne
sbb
cmp
daa
xor
sub
mov
pop
sbbl
sub
cmp
cld
mov
mov
ds
lret
fists
sbb
pop
sub
ss
mov
cmpsl
repz
pop
aas
sbb
push
xchg
sahf
stc
insb
testb
in
pinsrw
xchg
and
sbb
andl
jnp
push
out
add
mov
scas
sbb
mov
repnz
idivl
movsl
cmpsl
push
push
dec
lret
and
popf
adc
out
jb
lods
test
sahf
jl
inc
aaa
je
jl
mov
test
dec
jnp
cltd
std
inc
push
push
push
test
ret
std
jecxz
mov
imul
push
insl
ljmp
push
sub
mov
rorb
loop
mov
test
movsl
into
outsl
cltd
cltd
xchg
jbe
add
fadd
jo
imul
ror
adc
mov
and
fwait
sti
inc
xchg
inc
sub
mov
push
push
xchg
arpl
dec
add
roll
cmc
int3
lds
int
in
adc
imul
push
cld
push
and
cwtl
xchg
leave
xlat
cld
inc
out
shrl
pop
jp
xchg
and
mov
jle
adc
inc
fwait
int3
rcll
jae
movsl
push
aad
add
xchg
mov
data16
dec
mov
sbb
invd
mov
sub
pop
pop
adc
jns
mov
jmp
add
push
mov
mulb
mov
cmc
imul
sub
mov
xchg
mov
addb
loope
lea
push
test
movsl
push
xor
fsubs
ror
adc
outsb
xor
mov
mov
or
jbe
fmul
pop
mov
dec
pop
aaa
dec
push
testl
push
add
mov
xchg
jbe
les
loopne
push
pop
int
imull
add
jge
xchg
sub
sbb
in
push
cmp
mov
push
xor
adc
cmp
sbb
setae
push
jle
dec
jp
imul
test
add
mov
jne
cmp
out
xchg
daa
jmp
mov
and
fsubp
stos
cld
lds
dec
jns
fisttpll
xchg
loopne
lods
divl
inc
or
ljmp
and
inc
pop
pop
lods
in
inc
mov
inc
xor
dec
pop
arpl
push
cs
loop
and
cmp
movsb
and
dec
into
pushf
roll
sub
sarl
cs
mov
push
add
mov
in
pop
js
pop
sbb
xor
scas
ret
lret
push
xor
mov
pushaw
int
ret
aas
imul
xor
aad
sub
push
xorb
xchg
jns
jb
test
and
jae
add
mov
jno
ss
mov
jmp
lods
nop
add
mov
sub
jns
cs
jmp
or
push
cmc
xchg
mov
or
dec
lock
ss
push
ljmp
adc
pop
notb
pop
xor
test
or
jae
popa
out
int
test
icebp
jmp
mov
leave
push
dec
out
ljmp
inc
inc
or
bound
pop
jmp
movsl
add
nop
int
adc
mov
sbb
shl
jb
cmp
add
adc
jo
inc
les
mov
out
xchg
sbb
adc
xchg
rorb
dec
je
lcall
or
in
push
push
stc
mov
sub
dec
std
cmp
scas
cmpsb
mov
js
mov
fmul
and
or
inc
rcl
iret
xchg
les
adc
adc
inc
call
imul
subb
cmp
dec
mov
pop
sub
sbb
fstl
pop
ret
call
call
sbb
lret
fmuls
xor
aas
bnd
jmp
adc
and
jmp
ficompl
cs
popa
add
pop
jge
add
dec
cli
cmp
ret
addr16
lods
js
fldenv
js
xor
adcb
and
in
sar
xchg
in
loop
daa
in
loopne
pop
stos
movsl
dec
pop
prefetcht1
fsubrl
cld
scas
pop
xor
addr16
aas
push
xor
cmp
sbb
lea
sbb
xchg
xor
xor
lahf
xchg
and
lahf
daa
je
test
sbb
sarl
stc
pop
xchg
xor
mov
xchg
xchg
or
xchg
movsb
into
or
inc
leave
ljmp
ret
aam
fidivs
jae
sbb
pushf
adc
mov
imulb
sub
cmc
cmc
push
pop
xlat
jo
jnp
jge
adc
push
jl
jno
push
push
movsb
pop
mov
loopew
add
push
decb
out
push
stos
push
arpl
arpl
ror
hlt
pop
jle
sub
pop
mov
ret
sbbl
and
xlat
add
sub
out
add
inc
sbb
insl
arpl
das
push
test
loop
pop
loop
iret
lods
mov
or
shlb
clc
icebp
adc
lret
in
jle
test
leave
in
or
out
jge
jno
js
mov
decb
fwait
nop
sbb
ds
adc
clc
add
outsb
lock
mov
inc
sub
out
loope
inc
mov
sbb
mov
xchg
es
fsubr
gs
add
dec
jmp
mov
push
push
outsb
lock
xor
or
xor
push
inc
out
icebp
int
sarb
aad
fnstsw
mov
and
out
push
testb
sarl
hlt
int3
lcall
faddl
dec
jmp
in
push
jae
cmpsb
loope
and
jbe
mov
arpl
jl
out
notl
add
notl
daa
stc
out
pop
sbb
cmpsb
push
mov
fwait
xlat
rolb
sti
cld
call
or
mov
test
jl
mov
cmpsl
inc
inc
sbb
inc
jecxz
mov
loop
sub
lods
dec
xor
icebp
mov
out
add
pushf
jns
mov
adc
mov
fistps
in
xor
stos
cmp
in
add
pop
pop
movsb
addr16
mov
loope
jmp
dec
mov
lods
enter
xchg
lret
aad
and
xor
mov
in
mov
call
xchg
jmp
push
push
jne
loope
stc
dec
ds
mov
loope
sbb
mov
and
sbb
pop
xchg
sub
adcl
std
add
je
jo
aaa
xor
testb
push
cli
xlat
pop
xchg
push
shrb
xchg
scas
and
add
hlt
sbb
scas
jge
popf
adc
pop
add
sbb
sbb
ret
mov
or
xchg
and
stos
adc
pop
enter
mov
pop
dec
scas
cli
mov
aam
add
cld
sub
adc
in
pushf
inc
and
cmpsb
xchg
test
push
rol
cmp
pop
loopne
jmp
in
clc
cld
push
inc
arpl
inc
insl
adc
inc
lea
sahf
in
jle
in
outsl
ljmp
push
cmp
jmp
ljmp
in
jo
cmp
lock
lock
lret
data16
fbld
push
int
call
sbb
cmc
jmp
rcrl
insb
and
rclb
add
fldl
stos
imul
xchg
loopne
xchg
add
ret
mov
or
imul
mov
cmc
cmp
sub
adc
pop
cmpsl
xor
call
outsl
xchg
inc
into
mov
sbb
mov
test
cmp
dec
pop
pop
sbb
pop
mov
mov
inc
stc
pop
dec
mov
pop
jl
jbe
lret
out
shlb
aas
jmp
in
pop
cwtl
push
xchg
int3
jp
pop
xor
mov
push
jae
push
popl
popf
cmp
inc
jp
pop
dec
xchg
jg
xor
test
ljmp
ljmp
dec
hlt
lret
sub
outsl
sub
inc
repnz
in
iret
jns
sbb
aas
push
adc
push
push
jnp
lock
and
rorl
imul
fidivrl
popa
pop
popf
and
push
push
in
dec
jae
pop
imul
stos
jecxz
fwait
cmp
repz
dec
adc
xor
add
mov
fidivrl
movl
or
dec
mov
xchg
mov
in
xchg
mov
sbb
aaa
xor
mov
and
lahf
adc
pop
xchg
cmp
outsb
pop
call
push
fdivl
movsb
mov
xchg
shrb
sub
icebp
xchg
add
xchg
pop
ja
pusha
pop
jg
fnstenv
popa
pop
xor
xchg
fcom
dec
loopne
arpl
jg
jge
jge
sahf
sbb
adc
push
test
fildll
jo
add
repz
jle
xorb
out
das
cmp
cld
push
sub
jae
mov
mov
or
gs
cmpsl
push
lahf
neg
idivb
inc
sbb
stc
pop
push
xchg
leave
sub
xor
pusha
aas
jno
mov
mov
ja
pop
mov
popa
jbe
jo
dec
inc
sub
data16
pop
fcmovne
ljmp
loope
add
cmpsb
sub
mov
jo
rcrl
jecxz
sbb
xchg
mov
dec
add
lret
in
push
lret
jno
andl
jmp
ja
pushf
pop
push
incb
stc
insb
sbb
or
pop
mov
fcomps
inc
movsl
mov
dec
jp
cwtl
scas
pop
aad
not
xor
imul
push
aas
jb
mov
scas
fsubr
cld
xorl
loope
data16
add
push
mov
pop
sbb
cld
ret
inc
jle
cmp
mov
mov
mov
dec
addr16
arpl
add
mov
sbb
orl
call
add
add
roll
mov
popf
roll
in
jp
ds
adc
loop
push
in
fadd
jmp
mov
jb
outsl
inc
xchg
aad
or
sub
loopne
dec
sub
sub
xchg
shr
into
cmpl
cld
mov
popf
fidivrs
adc
fstl
js
stos
inc
cmp
out
mov
pop
in
sbbl
lea
testl
dec
cmp
xor
sbb
add
into
push
lss
test
and
out
xchg
dec
jns
popa
jge
dec
pusha
les
and
rclb
mov
fcompl
aaa
jmp
xor
stc
std
or
clc
xorb
mov
ss
es
and
add
mov
adc
and
pop
add
scas
scas
sti
popf
xor
and
jecxz
push
cmpsb
mov
fs
stos
adc
cmc
xorl
cmp
test
push
mov
shrl
fwait
aam
aad
xor
jnp
stos
cmp
mov
jns
and
and
ret
lods
js
sub
in
xchg
xchg
push
adc
mov
sub
adc
xlat
push
mov
loopne
into
cmpsb
dec
loop
cld
pop
adc
xchg
cmpsb
addb
lea
cmpsl
add
xchg
jp
scas
jae
dec
dec
push
add
xor
daa
pxor
mov
lods
mov
pop
in
pop
inc
inc
xor
int
andb
clc
sbb
sub
fbld
jmp
jbe
jbe
or
aam
and
sbb
shrb
dec
mov
stos
cmp
sbb
mov
inc
mov
push
pop
loop
cmp
lahf
push
add
push
pop
inc
adc
pusha
loope
leave
sbbl
inc
ja
xlat
stc
stos
ret
fs
push
xchg
sbb
xchg
fs
hlt
xchg
ds
jno
cmpsb
xchg
xor
cld
out
mov
xor
fimull
jns
dec
mov
psllq
jb
aaa
test
add
jecxz
lods
pop
adc
call
mov
mov
in
loopne
push
lea
ljmp
lahf
mov
mov
xchg
mov
jbe
repz
test
sub
sub
mov
loope
sbb
inc
add
ret
mov
or
xchg
out
and
sub
push
lods
jg
adc
popf
push
fimull
imul
fdivr
dec
mov
jecxz
jnp
je
shrl
lds
jmp
inc
push
sarl
or
insl
sarl
mov
insl
fisubs
imul
insb
aas
inc
shlb
fisubrl
in
mov
or
pop
cmp
xchg
mov
fisttpl
jmp
jbe
push
cmp
xor
add
out
push
jge
lds
lcall
sbb
nop
loopne
and
push
iret
int3
xchg
pushf
xor
mov
jp
popa
aam
mov
flds
xchg
and
mov
push
cmpsb
addr16
xor
fstl
mov
jns
pop
mov
mov
xor
sbb
jmp
or
pop
aad
idiv
dec
iret
push
lods
sub
in
cs
negb
xchg
test
repz
inc
sarb
pop
in
cmp
testl
sarb
fnstenv
xchg
popf
cld
aaa
loopne
adc
adc
and
lret
aas
dec
jne
mov
call
stos
inc
inc
ret
cmp
out
outsb
insl
push
mov
cwtl
fdivrl
subl
data16
pop
loope
aad
jmp
xor
inc
xchg
pop
mov
movsl
outsl
in
dec
pop
sti
test
mov
inc
mov
sti
shlb
adc
sub
xor
or
pop
sub
test
pop
sub
lds
pop
das
orb
mov
out
push
aaa
aam
es
pmaddwd
sub
cld
xchg
jnp
and
jl
mov
lods
leave
adc
sahf
shlb
adc
mov
jae
cmpsb
imul
stos
or
pop
jg
divl
inc
mov
fidivrl
xor
outsl
data16
jns
addr16
jnp
dec
int
imul
test
adc
cs
flds
into
dec
mov
add
insl
loopne
insb
orl
pop
dec
jp
cmp
cmp
jb
push
push
fisttpl
sbb
adc
fadds
imul
lret
and
inc
stos
jnp
loop
inc
mov
push
push
inc
mov
push
xchg
push
push
xchg
outsb
test
js
in
test
fdiv
stos
in
xchg
mov
int
lret
in
dec
lea
pop
prefetch
sbb
pop
or
ror
pop
pop
rclb
add
xor
or
pop
sub
pop
inc
mov
sbb
cmpsl
movsl
int3
mov
mov
rorl
jae
popf
push
push
mov
imul
mov
lahf
mov
jae
or
xchg
and
negb
sti
xor
lods
out
outsl
jp
mov
push
cmpsl
jg
std
lret
dec
push
dec
shll
add
xlat
adc
xor
js
fwait
ljmp
pop
and
jbe
xchg
shrb
subb
push
pop
int
push
pop
dec
push
gs
addb
mov
sub
dec
mov
adc
sbb
shl
lods
pop
fisubrl
jmp
xorb
xchg
cmp
inc
lock
sub
in
ja
mov
rep
repnz
in
popf
pop
pop
out
dec
je
cmp
sbb
shl
jne
and
mov
fbstp
clc
icebp
and
push
outsb
fcomps
jle
lock
mov
cmp
ljmp
fidivs
sub
push
sub
dec
shll
pop
fists
fs
inc
mov
jno
in
pop
add
push
repz
xchg
into
cmp
sub
or
inc
cmp
pop
xchg
clc
jecxz
add
cmpsb
mov
mov
add
cwtl
xchg
outsb
cmc
sbbb
jnp
dec
inc
mov
pusha
xchg
incb
jecxz
jecxz
push
cmpsl
lods
push
adc
sub
fimuls
jge
cmpb
xorl
or
cmp
push
fsubp
cmp
imul
pop
repnz
sub
sbb
popw
mov
enter
in
inc
mov
adc
xchg
inc
ds
xchg
or
pop
xchg
sbb
fs
xlat
pop
sub
out
cmp
sbb
idivl
out
shl
mov
cmp
jns
scas
pusha
mov
sub
lock
xchg
fnstenv
movsb
mov
mov
outsb
fldl
mov
lods
mov
add
add
je
push
dec
loop
fcompl
fs
mov
cld
mov
loope
adc
add
and
push
push
cmp
jno
mov
add
pop
out
stos
aad
mov
jmp
jae
roll
dec
iret
sar
int
insl
cmp
mov
aam
push
push
mov
sbb
je
xor
test
jg
incl
les
push
cli
mov
xlat
sbb
sahf
mov
shr
in
nop
outsb
test
xor
jecxz
in
add
lcall
jmp
in
mov
ret
xchg
pop
cmp
outsl
iret
sbb
out
jl
mov
mov
xor
fs
in
inc
inc
repz
fstl
adc
lods
ja
mov
sbb
xchg
das
call
out
mov
icebp
xchg
xchg
mov
lret
jmp
mov
cltd
inc
ret
pop
sbb
aad
cmp
out
cmp
std
xchg
mov
xchg
sub
fwait
adc
push
push
int
cmp
cmpsb
loope
into
repnz
cmp
mov
mov
jge
jmp
cmpsl
popa
cmp
fimuls
sub
mov
cmp
jp
push
dec
das
sub
mov
push
mov
dec
cmp
jne
das
adc
test
mov
cmp
in
cld
xor
movb
inc
sub
mov
inc
mov
mov
clc
out
adc
in
aas
cmpsl
or
and
jnp
aad
sub
inc
sbb
mov
lds
scas
sbb
mov
and
or
ret
jg
jo
push
and
and
or
pop
stos
loopne
xchg
testb
les
add
aam
mov
data16
fdivr
jbe
outsb
loop
or
dec
mov
out
mov
xchg
fidivrl
push
dec
mov
pop
sahf
sub
cmpsl
out
out
inc
adcl
adc
fstps
iret
jmp
xchg
xchg
imul
sub
add
ja
mov
sbb
push
div
scas
iret
mov
cli
out
test
xchg
jne
shrb
clc
or
jno
xor
arpl
stc
mov
mov
stc
xchg
ret
ss
pop
rclb
out
push
icebp
fwait
stos
arpl
push
push
jne
and
movsl
es
imul
xor
push
sbb
pop
jmp
andl
inc
sbb
sub
loopne
or
fidivrs
hlt
push
or
push
popf
jno
mov
cmp
mov
mov
sbb
sbb
xchg
or
pop
stos
or
mov
aad
cmpsl
xchg
shrb
add
and
pop
pop
mov
dec
add
adc
jp
sar
push
jmp
popa
lcall
dec
hlt
add
inc
aas
pushf
inc
and
mov
subb
jmp
loop
mov
xor
adc
lods
shlb
lods
sbb
in
inc
clc
dec
inc
sbb
fmuls
sbb
cmc
aam
inc
or
pop
imul
mov
lret
aaa
iret
enter
out
xor
stos
ds
test
fs
mov
and
and
fcompl
popl
cmpsb
inc
aam
das
mov
rep
cmp
fists
jae
out
ss
leave
mov
pushf
pop
cli
ret
push
jmp
orl
fidivrl
adc
xor
jnp
icebp
js
dec
xchg
push
pop
mov
adc
jne
test
insl
sbb
test
jnp
test
jmp
dec
pusha
aas
jo
into
outsb
push
in
cmp
push
pushf
dec
int
into
loop
sti
nop
sbb
push
stos
dec
xchg
push
mov
ret
aad
xchg
iret
or
or
testl
mov
test
mov
add
das
pop
jne
aad
in
es
movb
mov
sti
push
leave
cld
fnstcw
xchg
inc
jo
out
scas
pop
cs
test
rcrl
cwtl
in
ror
xor
mov
mov
aaa
mov
push
insb
xchg
lret
pop
rorl
movsl
inc
and
sbb
sbb
outsb
sbb
adcl
xchg
and
notl
jnp
xchg
dec
gs
ljmp
jno
add
add
es
pushl
repz
sbbb
dec
xchg
decl
out
sbb
sbb
stc
mov
leave
mov
stos
or
js
push
jge
jnp
sbb
and
testl
dec
les
cmp
xchg
rolb
xchg
sub
call
and
jmp
sbb
je
xchg
xlat
add
mov
mov
inc
clc
xorl
in
flds
jo
test
push
jge
mov
out
ja
mov
add
and
out
xor
loopne
add
fidivrl
sahf
stos
add
incb
xor
mov
mov
dec
mov
cmp
push
outsl
nop
add
xor
mov
push
sbb
loope
cmp
inc
xchg
push
jno
push
add
in
or
cmp
bnd
mov
push
sahf
pop
mov
pop
sub
adc
xchg
xchg
inc
xor
outsl
jmp
push
fstl
addb
jb
pop
out
loope
mov
jg
shl
fcompl
jecxz
sub
mov
ja
into
jmp
test
dec
negb
or
icebp
push
leave
sbb
syscall
or
pusha
shll
xchg
clc
xor
stos
nop
out
or
pop
insb
fdivrl
or
pop
mov
mov
dec
push
and
jg
mov
and
and
sub
fistps
cs
roll
push
cmpb
mov
loopne
xchg
ret
jge
fbstp
sub
sahf
jb
sub
xchg
sub
aam
mov
clc
ss
rorb
or
mov
daa
push
sbb
xor
jmp
scas
gs
faddl
fisubl
jb
repnz
cmp
add
mov
movsb
int3
lods
lods
and
sub
test
mov
cs
ja
psrld
arpl
push
aaa
test
in
or
lcall
mov
scas
aas
jae
adc
mov
das
int3
lcall
fldcw
adc
cmp
add
sub
push
jne
dec
dec
push
sahf
cs
mov
mov
xor
loop
sbb
jne
sub
mov
aam
pop
jle
dec
shr
movsl
or
out
rcll
sub
and
adc
dec
test
jbe
mov
xchg
xchg
and
icebp
je
cmp
push
and
lret
test
mov
mov
insl
out
xchg
iret
movsb
ficompl
incl
jno
mov
les
pusha
mov
jmp
cld
cmp
lahf
mov
mov
insl
sbb
adc
ret
into
xchg
iret
in
aad
jmp
jo
cmp
xchg
cmp
gs
arpl
jge
jp
ds
mov
add
pop
loopne
cmpsl
fcoml
outsl
or
dec
mov
test
dec
mov
stos
aam
andl
xchg
mov
dec
mov
andb
mov
jns
arpl
lret
leave
imul
and
push
sbb
stc
dec
inc
data16
aas
call
pop
aad
inc
xor
dec
test
sbb
icebp
jmp
fildll
inc
push
sbb
xchg
notl
cli
test
adc
roll
jmp
aam
repz
int3
push
mov
ficoml
cld
push
pop
push
ljmp
out
push
xchg
xchg
xor
aas
mov
mov
cmc
jae
mov
je
les
cmp
push
jns
or
mov
iret
push
mov
sbb
dec
sub
stos
xchg
dec
sub
mov
fstp
sbb
push
int
pop
add
in
mov
pop
mov
sub
add
xchg
jae
imul
and
dec
push
ljmp
notl
sub
push
mov
xchg
cmp
lods
mov
iret
bound
mov
cmp
jp
mov
pop
mov
jmp
cmpsb
shr
jge
filds
out
lcall
mov
mov
lret
push
push
lea
push
popf
icebp
orl
xorl
ds
sub
mov
push
cwtl
mov
xchg
pop
jae
dec
xor
xchg
mov
pop
aam
and
popa
mov
movsl
inc
aam
repnz
divl
cs
and
inc
aad
test
cmp
add
out
into
lret
dec
es
test
scas
int3
mov
fstl
mov
aam
repz
push
xchg
pop
jno
adc
cltd
jg
sub
cmp
addr16
outsb
icebp
int3
mov
sbb
add
insb
test
in
cld
sbb
inc
fwait
cmpsl
push
xchg
mov
ret
cwtl
jns
push
mov
sbb
aad
cmpb
fldl
mov
call
mov
ret
jp
mov
push
repz
xlat
in
into
out
inc
xor
xor
push
pop
xor
int3
out
xor
daa
add
inc
mov
ja
in
std
pop
pop
icebp
cmp
incl
cmp
lahf
lods
sbb
mov
cltd
mov
and
and
dec
pushf
jns
testb
jae
xchg
or
xchg
xor
repz
inc
adc
push
stc
out
jge
xor
cmp
xchg
mov
xchg
adc
push
xchg
in
dec
xor
cld
fwait
pop
xchg
stos
daa
xchg
and
inc
pop
lahf
xor
adc
xor
out
out
js
or
pusha
pop
adc
dec
out
and
mov
ds
sbbl
lcall
popa
stos
xlat
xor
sti
ret
mov
or
xor
add
mov
lret
rorl
lahf
int
ljmp
mov
xchg
in
fdivr
rep
push
fcmovb
dec
pop
jge
in
mov
test
and
mov
scas
cmp
cmp
and
add
inc
and
ret
pusha
or
rorl
nop
lds
xchg
xchg
and
xchg
xor
mov
lods
rcr
mov
adc
push
xor
pop
dec
sbb
aaa
add
popf
cmpsb
push
jbe
popa
or
pop
mov
push
out
lock
jl
push
add
jns
cmpsl
cmp
mov
jns
int3
xchg
xchg
xchg
lock
mov
xchg
loopne
mov
insb
lret
and
lods
mov
jle
mov
pushl
or
pop
inc
cmc
std
or
cmp
jmp
dec
push
jle
shrl
lods
cmpsl
jo
jb
pop
stos
xor
int
movsb
lahf
fcompl
sarl
nopl
dec
test
and
cmp
pop
push
adc
ret
push
outsb
movsb
pop
stos
hlt
push
call
sub
inc
xchg
fstpl
leave
out
test
dec
mov
pop
push
shll
sub
sahf
cmc
dec
in
inc
add
aad
pop
lahf
xor
jl
push
cli
mov
cmc
pop
jne
test
jl
jbe
mov
leave
push
sbb
jl
repz
dec
lahf
jmp
fs
rorb
or
or
dec
add
psrld
mov
xchg
call
cmp
pop
cmc
sete
jns
mov
mov
fwait
call
jae
cli
mov
mov
xor
xchg
jmp
dec
fcompl
lock
pop
enter
fcmovnbe
daa
pop
fisubrl
ret
in
or
dec
sub
or
dec
cmp
mov
cmpsb
pop
adc
pop
cli
gs
js
dec
adc
inc
adc
jo
push
fs
adc
xor
in
dec
sub
sub
in
stc
movsl
sub
xor
mov
dec
add
jle
xor
aaa
dec
in
orl
into
sarl
push
xor
sti
sbb
xchg
inc
lcall
roll
subb
inc
xchg
xor
cmpsb
rcrb
stos
sbb
stos
gs
fisubs
jnp
jmp
inc
fsubs
mov
fiadds
shll
stos
sbb
inc
mov
cmpl
or
arpl
sbb
xor
filds
inc
js
sbb
stos
or
sbb
adc
pop
ds
pusha
mov
pop
jne
push
cmp
iret
xlat
out
push
lahf
fisubs
mov
loop
sahf
pop
cli
xchg
dec
xor
scas
xchg
fwait
jnp
sub
out
pop
xor
sbb
mov
das
jg
or
sub
pop
in
lods
stos
test
jb
js
and
xor
pop
mov
push
inc
rclb
out
pop
ss
fdivs
sub
ret
and
les
push
mov
enter
dec
movb
fsubs
mov
mov
or
out
jecxz
push
and
insb
std
jo
push
sub
repnz
sbb
movsb
arpl
into
pop
lcall
into
shlb
mov
xchg
mov
aam
dec
xchg
dec
xor
jne
aam
push
push
pop
sub
mov
pop
dec
push
in
jecxz
cmp
xor
test
jns
ss
lods
int
jge
jb
popf
out
sar
lahf
mov
inc
or
fisttpll
xor
push
jae
push
mov
adc
and
leavew
ds
cmp
insl
out
push
push
rorb
fisttps
into
push
aaa
xchg
push
inc
inc
fld
in
shll
mov
push
popl
xor
hlt
pop
mov
arpl
mov
arpl
jge
test
test
cltd
sbb
shll
jle
jns
in
aas
dec
and
mov
pop
fwait
loopne
add
xlat
roll
pop
add
data16
aad
ja
cltd
sbb
xor
loope
imul
pop
mov
inc
jge
jne
push
lcall
out
orl
fxtract
sahf
inc
cmp
jbe
sti
in
mov
leave
mov
cmpsl
sbb
movsb
ds
je
dec
sub
lods
cs
mov
ret
push
jmp
mov
ret
ds
lods
push
xchg
repz
fdivr
js,pt
or
sub
or
push
jge
cmc
xchg
mov
lea
fsqrt
int3
push
mov
mov
push
sbb
xchg
sarb
push
pop
add
pop
dec
cmp
fidivrs
pusha
mov
inc
fistps
and
dec
lea
out
pop
ror
and
ret
push
idivl
shlb
xchg
jecxz
aas
jns
jl
popf
or
daa
xchg
data16
imul
in
jns
and
or
sub
jae
jg
mov
dec
jge
add
cmp
fs
or
sub
data16
push
aas
dec
mov
rcll
clc
push
xchg
in
xor
fs
out
icebp
call
in
sub
push
adc
cli
aaa
in
imul
push
js
sub
jmp
mov
push
add
xor
cmp
sbb
stos
and
inc
mov
or
insb
jae
orl
into
or
in
sbb
js
and
aas
add
and
inc
fstl
addb
cmp
out
frndint
or
inc
scas
cmc
mov
or
inc
enter
int3
push
aad
test
movsl
daa
sahf
in
ja
mov
loop
sbb
sbb
arpl
shlb
jmp
xor
mov
jae
fstp
add
cmp
jmp
dec
scas
dec
push
and
mov
out
pop
dec
stos
xchg
cwtl
cmpb
jae
sarb
jg
mull
scas
mov
add
int3
jne
into
in
mov
and
and
fisttpl
fcmovu
push
xchg
xchg
pop
pop
mov
dec
sahf
mov
imul
enter
and
gs
mov
mov
jbe
nop
jne
sub
jnp
adc
cmp
and
cmp
mov
xor
jle
inc
scas
adc
aaa
loop
fbld
adc
pop
cmpsl
stc
mov
cmp
xchg
dec
lcall
or
jg
or
shrl
mov
xor
mov
inc
jae
mov
add
mov
xor
movsl
xchg
fildl
stos
fidivrl
scas
jmp
inc
std
shr
jle
imul
mov
xchg
and
mov
dec
int3
adc
cmp
inc
jbe
fildl
mov
and
mov
or
push
ror
rorl
xchg
lret
jno
cmp
stos
xor
in
mulb
xchg
inc
cs
insl
cli
mov
and
je
mov
fcmovbe
shll
mov
lcall
push
mov
pop
jae
hlt
xchg
aad
inc
mov
lret
cs
jmp
in
repnz
test
int
dec
mov
xor
mov
dec
dec
mov
xchg
and
mov
imull
rorb
rcl
pop
pop
jns
fwait
cmp
push
int3
sub
ljmp
aad
daa
test
leave
fwait
dec
in
rorl
jg
push
add
and
jl
rorb
pop
pop
mov
adcb
push
push
cmpsw
xor
cmpsb
inc
mov
clc
cmp
jo
push
jbe
jns
jae
lret
xchg
jb
push
fs
jl
jg
nop
and
xchg
xor
mov
imull
and
in
inc
pop
testb
push
dec
arpl
icebp
sub
loope
pop
inc
pop
hlt
mov
and
shr
push
mov
xchg
push
call
sbb
add
enter
loopne
and
std
leave
adc
and
mov
jbe
je
jecxz
pop
test
or
sahf
dec
pop
ret
imul
add
fdivs
dec
jb
cmp
dec
sbb
scas
inc
loopne
xor
mov
or
loope
fstpt
or
cmp
daa
frstor
add
mov
cld
sbb
mov
shll
andb
lcall
and
das
out
jb
cwtl
and
add
insb
add
add
incl
movsl
sbb
sbb
test
mov
sahf
ss
arpl
mov
rcrl
in
dec
jecxz
add
mov
into
scas
mov
ja
leave
loopne
xchg
jge
mov
rcrb
int3
pusha
loop
cmp
add
push
je
pop
cmc
jb
push
cli
mov
sub
out
and
inc
cmp
mov
outsb
imul
and
add
jns
sysret
ljmp
xor
cwtl
lods
push
mov
jo
mov
xchg
xchg
add
mov
inc
std
movsl
cmp
sub
sbb
lret
push
cld
or
pusha
jne
aam
out
xchg
mov
je
ret
fbld
mov
sbb
pop
ja
push
das
dec
sti
arpl
out
icebp
push
shlb
mov
and
or
in
int3
cmpsl
xchg
and
leave
std
icebp
cmp
pusha
jg
sub
fucom
inc
jo
ss
into
gs
stc
out
sbb
pop
lahf
mov
aas
sbb
shll
popa
xchg
aad
xchg
push
pop
inc
mov
push
int3
sub
aas
or
or
mov
jmp
test
jmp
gs
inc
addb
stos
jnp
sub
adc
ja
fdiv
jne
inc
cmpl
dec
inc
iret
or
xchg
inc
push
cmpl
or
sub
cmpsb
xchg
xchg
pop
lock
enter
mov
lea
xchg
loop
sbb
sti
pop
shll
jg
mov
nop
fbld
dec
popa
sti
jne
mov
mov
adc
lcall
fldenv
add
xchg
enter
xorb
lock
rcr
orb
dec
pushf
mov
ja
mov
scas
cmp
sub
movsl
jg
cltd
imul
daa
fcmovnbe
shll
dec
sub
loopne
stos
gs
out
test
jns
jg
and
cmp
jecxz
cmc
fldl
shlb
clc
cmp
push
lret
adc
sub
xchg
push
pop
jg
cmp
xlat
pop
les
sbb
cwtl
lcall
add
sti
aaa
jle
sbb
push
and
mov
and
imul
pusha
xor
cs
and
mov
mov
nop
mov
xor
pop
fsubrl
std
push
xlat
push
stc
sbb
adc
add
dec
mov
adc
push
les
inc
xchg
push
mov
aam
cmp
outsb
jp
cmp
mov
rcrb
mov
rcr
xor
roll
mov
push
mov
pop
in
mov
or
jae
adc
pop
xor
dec
pop
jl
in
xchg
lret
cmp
stos
lahf
shl
insb
mov
mov
push
mov
jae
out
ja
mov
iret
imul
popa
bswap
jmp
jnp
cmp
daa
fisttpl
push
push
dec
popa
clc
sahf
or
dec
inc
mov
xchg
and
or
mov
mov
xchg
and
sub
push
pop
inc
stos
pop
loopne
push
je
mov
ret
mov
jbe
repz
cmp
movsl
jnp
fyl2xp1
mov
jp
push
bnd
xchg
sbbl
push
pusha
adc
pop
stos
sub
inc
jmp
popa
mov
scas
mov
sbb
sbb
pop
cmp
aad
cmp
mov
or
notl
loope
repnz
bound
mov
stos
jecxz
ja
lds
sbb
inc
push
aas
cli
daa
push
xchg
es
adc
enter
insl
push
mov
in
mov
mov
inc
push
lcall
mov
jno
mov
and
test
das
pop
fs
cmc
outsb
lcall
add
pop
xchg
repz
jp
cs
cmp
lahf
or
repnz
aad
jg
pop
mov
inc
mov
out
push
cmpsb
xor
pusha
lret
ljmp
dec
lret
pop
mov
inc
xchg
cmp
call
sbb
sub
jge
xchg
mov
jecxz
iret
jge
outsb
pop
cmp
mov
cmc
jl
loopne
adc
icebp
xchg
fcoms
js
iret
xor
std
fsubl
inc
lods
neg
adc
imul
repnz
addr16
scas
adc
jnp
inc
lods
add
mov
push
adc
les
push
mov
stos
ss
sub
pop
mov
cli
das
dec
adc
outsb
dec
xor
pop
loope
pop
das
fwait
inc
jae
xor
es
fcomip
jnp
push
and
push
jg
popa
popf
das
adc
xor
lret
mov
lock
es
lods
ficomps
loopne
ds
and
push
or
dec
dec
xchg
jae
cmp
or
stos
out
mov
clc
stc
dec
or
mov
addr16
cmp
mov
cmp
test
test
add
and
cmpsb
push
ja
popa
dec
stc
mov
pop
ret
ja
rcll
inc
repz
pop
popf
push
jns
xor
stc
out
pop
or
pop
neg
stos
test
mov
sbb
test
cmovl
mov
pop
pop
in
mov
cmc
mov
fcmovnbe
adc
and
stos
js
mov
and
mov
leave
mov
xlat
mov
ds
mov
jae
pop
les
imul
dec
inc
in
pop
mov
inc
js
cmp
mov
fwait
pop
fidivl
or
mov
fcoms
dec
jle
rol
add
xor
sub
cltd
xor
mov
adc
shlb
mov
or
mov
cltd
cmp
jne
and
les
mov
push
lods
jnp
fs
leave
lret
sbb
sbb
xor
or
mov
mov
push
jbe
or
inc
xchg
push
mov
imulb
sbb
jmp
mov
jg
aaa
jbe
push
mov
sbb
faddl
jecxz
sbb
nop
das
in
pop
pop
push
sbb
pusha
imul
inc
addb
pop
push
scas
sbb
xchg
es
mov
testl
sbb
jbe
fildll
jns
mov
mov
dec
lds
jl
pushf
or
adc
aam
repz
movsb
or
add
ss
xchg
stos
sbb
or
mov
enter
dec
es
add
adc
jae
push
dec
mov
adc
jg
jge
icebp
in
push
lds
sub
and
push
dec
loop
xor
repz
and
stos
xchg
sahf
sbb
inc
gs
into
jns
repz
sub
shrl
hlt
loopne
sti
ja
out
leave
rcrl
in
jl
out
addl
sbb
outsb
cli
jl
and
pop
sbb
stc
jecxz
outsb
add
pop
sahf
dec
dec
ret
aam
incl
aas
ret
in
dec
jb
cwtl
pusha
inc
lods
sbb
les
cmp
xor
scas
fs
insb
xorb
sub
lret
lret
into
movsl
cmpsb
nop
outsb
fdivs
fs
push
inc
loop
stos
cmp
dec
fldt
xchg
movsl
daa
cmpl
je
mov
call
push
fucomi
lret
in
push
roll
mov
scas
dec
jne
xchg
int3
xchg
in
pop
mov
fiadds
je
cmpsl
dec
inc
cmpsl
sbb
jb
inc
imull
add
or
dec
pop
daa
xor
fidivl
add
int
jo
inc
push
imull
lods
jecxz
repz
in
out
popf
inc
add
pop
mov
sti
shl
lock
push
out
jnp
pop
dec
jns
hlt
adc
cmp
mov
sbb
test
fmull
xchg
add
jp
fisubrl
je
outsl
iret
mov
imul
pop
sub
lret
sbb
scas
dec
movsb
in
aaa
cli
push
xchg
mov
mov
mov
lret
fistps
loop
push
add
jae
testl
dec
push
ja
js
push
xchg
cmp
jg
lods
into
mov
shrl
ret
fsubrl
add
dec
sbb
aas
push
push
push
jnp
jg
xlat
scas
test
adc
aaa
js
div
adc
dec
adc
test
sub
push
enter
cmp
cmpsb
in
mov
mov
mov
mov
mov
nop
mov
in
inc
sbb
mov
arpl
nop
sbb
loopne
adc
ret
mov
jae
mov
push
mov
mov
loopne
jbe
ror
push
in
sub
or
mov
out
mov
je
ljmp
aam
lock
xchg
xchg
insl
loop
fisttpl
outsb
pop
cli
push
int3
jmp
pop
inc
fistps
shrl
jne
push
inc
add
aas
orl
sub
and
pop
sbb
sub
jle
push
mov
sbb
cmpsl
mov
stos
ja
stos
push
addl
fmull
push
aad
sbb
jo
and
jmp
jp
adc
pop
mov
hlt
ja
push
cmpb
pop
mov
xor
cmpxchg
and
cmp
xor
or
mov
popa
push
enter
xchg
out
jb
pop
lcall
lahf
ja
insl
sbb
in
xchg
test
inc
and
dec
in
sub
or
fdivrs
add
or
imul
sbb
sbb
cs
sbb
xchg
out
dec
mov
and
fnsave
lcall
loopne,pn
xchg
inc
xor
outsl
imul
mov
pop
sub
cmp
fldenv
mov
add
mov
cld
mov
xchg
inc
mov
add
iret
pop
enter
lcall
popf
fs
test
jb
sbb
adc
push
ds
loope
iret
add
movsb
int
leave
mov
mov
in
mov
push
pop
and
les
mov
in
jge
aad
clc
cmpsb
nop
mov
test
leave
xlat
sub
jno
vxorpd
ds
addb
add
pop
push
lahf
inc
push
orb
test
push
rorl
sub
out
push
inc
testl
dec
sti
xor
add
stos
icebp
inc
cli
xchg
xor
xchg
push
cwtl
ss
cmp
mov
mov
test
add
aas
xchg
xchg
test
ljmp
dec
fistps
notl
xchg
int3
mov
mov
adc
loopne
push
idivl
xor
and
testl
pop
insb
inc
filds
icebp
inc
mov
in
mov
iret
fidivs
push
adc
lds
mov
fbstp
out
cmp
inc
mov
lret
sbb
fcom
cmp
insb
xor
dec
xor
and
jmp
fisubrs
xchg
insl
or
jns
adc
pushf
xchg
pop
xchg
dec
aad
popa
imul
jbe
or
fdivs
sahf
jl
lcall
loopne
xchg
sbb
jo
or
push
sbb
movsl
mov
notl
pop
add
pusha
lods
xchg
ret
cmpb
jle
pop
jne
movsl
cltd
push
scas
fsubrs
les
pop
test
xchg
cltd
xor
es
add
imul
sub
sbb
jo
push
pop
jnp
pusha
test
mov
dec
sub
lea
and
mov
add
mov
gs
adc
sub
inc
lds
int
lds
push
and
jg
or
shl
or
mov
sarb
lea
roll
orl
sub
cmp
dec
andl
iret
mov
mov
aaa
pop
pop
popf
das
jo
push
jmp
cmpb
and
inc
in
out
adc
pop
mov
jl
lcall
mov
pop
sbb
jb
add
icebp
insb
movb
int3
mov
js
dec
mov
pop
fiaddl
cmp
scas
orl
mov
fbld
mov
or
pop
push
mov
mov
xor
sahf
sahf
rcr
dec
cmp
std
es
arpl
sbb
lea
aam
ret
adc
jp
xchg
dec
cli
pop
test
sub
aad
add
xor
xchg
enter
fnstsw
sub
sub
ljmp
and
ds
or
test
lcall
mov
fs
inc
push
lahf
popf
cmpsl
add
iret
popf
fstps
adc
leave
sbb
lods
lcall
fsubs
data16
dec
ljmp
jp
inc
or
hlt
xchg
add
test
shll
int3
lods
lret
pop
jbe
inc
sbb
out
xchg
xchg
xchg
xlat
xor
mov
outsb
in
mov
daa
test
cmpsb
mov
hlt
push
sarl
cltd
or
addr16
lahf
es
fs
clc
dec
pop
sbb
icebp
bound
gs
stos
xchg
movsb
sbb
imul
cmp
xchg
pop
push
data16
sub
ficomps
std
jnp
mov
dec
movsb
dec
ret
xchg
cmp
and
cmp
and
rcrl
xchg
jge
inc
mov
fcomps
adc
je
cmp
int
push
sbb
bound
sbb
rorb
mov
dec
orl
mov
fimuls
movsb
in
add
outsb
jge
inc
xor
sti
xchg
sbb
cwtl
add
dec
cld
pop
fcompl
movsl
loopne
shrb
in
ds
push
out
xchg
stos
push
pop
and
mov
popa
dec
xor
sbb
out
addr16
add
popf
loope
movsl
cmp
test
jmp
xor
xor
lret
andb
leave
jo
mov
push
or
push
pushf
sub
hlt
adc
mov
and
test
dec
fbstp
jbe
insb
lea
test
into
ss
or
xor
inc
cltd
or
fnsave
leave
xor
shlb
inc
divb
xchg
adc
shrb
push
mov
rcll
out
pop
mov
sub
insb
xchg
cmp
test
xchg
jno
call
cmp
cmp
scas
aas
movsb
rcll
imul
mov
int3
and
sbb
ss
repz
aas
push
lcall
jecxz
lock
in
push
aad
imul
pop
push
lcall
pop
nop
ret
xor
push
scas
mov
into
add
cwtl
gs
xorb
or
pop
aas
sbbb
into
mov
int
push
pop
mov
mov
testl
inc
rorl
add
mov
push
adc
mov
cmp
fists
out
lcall
sbb
push
push
xor
xchg
fdivs
pop
mov
dec
enter
outsl
mov
imul
mov
sub
lahf
xor
lods
les
pop
imul
adc
xchg
lahf
inc
aaa
icebp
shrb
pop
inc
icebp
pop
jb
dec
xor
leave
xchg
inc
bound
ret
stc
cmpsb
mov
mov
pop
push
mov
cmp
ljmp
pop
leave
fcomip
inc
fxam
jmp
jns
jle
mov
enter
andw
adc
xor
sarb
jnp
pop
stos
in
xor
xchg
xlat
in
push
in
roll
clc
or
das
push
jns
insl
xchg
push
and
push
and
cmc
jno
pop
lods
repz
int3
dec
fidivl
cmpsb
roll
add
or
repnz
clc
out
and
rcrb
lret
mov
hlt
lods
inc
cs
test
in
xchg
shll
int3
mov
and
pushf
lcall
sub
lods
mov
daa
cmp
dec
aas
adc
dec
cmpsl
cmc
cmp
inc
mov
cmpsl
out
inc
sbb
xchg
test
push
mov
lcall
lds
jmp
lcall
pop
pop
jbe
out
dec
out
std
adc
lcall
cltd
sbb
ljmp
xlat
mov
add
mov
test
call
mov
ret
jbe
inc
int3
xor
mov
inc
push
add
push
push
ficoms
ret
test
orb
dec
mov
jmp
jno
cmpsb
xchg
int3
mov
push
jmp
int
std
enter
sbb
xchg
xor
pop
or
decb
jae
cltd
pushf
rolb
mov
add
and
ss
stos
inc
xchg
int
jmp
xchg
ds
lcall
ds
mov
imul
add
shl
or
mov
push
mov
sub
xchg
xchg
cld
das
sbb
mov
push
pop
pusha
pop
pop
dec
rcr
pop
and
xchg
aam
pop
add
sbb
scas
jbe
cmp
int
jns
aam
insb
jns
hlt
cmp
aam
or
or
aas
js
push
cmpb
push
sub
push
imul
xorl
shll
pop
in
loop
jge
outsb
icebp
or
or
loope
cmpsl
push
cwtl
cmpsb
jb
pop
mov
loope
std
mov
add
xor
sbb
lds
out
push
inc
cwtl
lds
mov
fxch
mov
adc
out
das
pop
jb
push
mov
mov
out
adc
pop
jl
adc
je
imull
xlat
pop
mov
enter
ds
xchg
fldenv
das
pop
jno
pop
int
push
insb
mov
push
push
sub
mov
out
dec
sub
jg
push
sti
inc
mov
inc
or
sbb
pop
pop
sub
pop
xorb
outsl
xchg
negb
sar
push
arpl
jge
shll
dec
icebp
cmp
leave
xchg
mov
es
out
outsb
out
inc
xchg
mov
jecxz
pop
jo
sbb
and
aas
pop
mov
mov
push
cs
js
mov
jl
test
push
fwait
nop
incb
rcrl
fucomi
and
add
push
push
and
sub
mov
sub
movsb
pop
xchg
pop
jb
movsb
xchg
and
adc
adc
sbb
jg
or
mull
out
ss
mov
dec
sub
lahf
adc
mov
sub
popa
mov
mov
and
fbld
imul
dec
outsb
and
mov
rcrb
aas
out
xorl
test
push
into
dec
push
pop
popf
mov
mov
call
push
xor
lea
jmp
dec
push
mov
mov
mov
js
insl
push
adc
dec
inc
sbb
jnp
ret
subb
add
outsl
mov
inc
movsb
cmp
arpl
jbe
sbb
jp
call
mov
xchg
pop
jmp
sub
inc
or
mov
int3
fprem
inc
pop
sbb
mov
or
mov
lcall
aaa
and
add
faddl
xchg
in
sub
sub
and
ja
xor
rclb
or
roll
or
fisttpl
mov
ja
push
inc
sub
push
pop
adc
add
lcall
jle
xchg
mov
add
andl
xchg
and
xchg
int
ficoms
adc
mov
mov
aas
inc
pop
out
fidivrs
js
cwtl
dec
mov
sar
mov
mov
and
and
and
mov
xchg
sub
mov
movb
stos
stos
pop
cld
roll
repz
leave
popa
into
mov
icebp
mov
xchg
and
jecxz
and
mov
daa
loope
sub
call
ja
les
jp
adc
je
mov
mov
ficoms
jae
mov
xchg
pop
sub
call
mov
jg
add
add
or
pop
imul
push
jno
xor
add
and
pop
fs
cmp
pop
mov
stos
push
sbb
outsb
jecxz
mul
ss
xchg
sub
dec
cltd
pop
mov
int3
ss
or
mov
and
or
push
scas
lahf
lret
pop
lods
adc
mov
rorb
or
sbb
jecxz
pop
inc
stos
cvttps2pi
cmp
dec
xor
in
xchg
ja
cld
sub
inc
pop
rol
sti
daa
or
dec
add
out
push
pop
or
ficomps
xor
js
mov
jge
js
inc
fcoms
fisttps
mov
inc
jbe
push
leave
movsl
jnp
imul
adc
dec
aam
adc
sub
or
stc
push
xchg
call
test
sahf
or
in
adc
enter
icebp
mov
fcmovne
insl
clc
bound
sub
call
imull
cmpsb
pop
cmp
jp
mov
aad
xor
lcall
add
outsl
sbb
js
insb
loope
add
loopne
dec
mov
mov
jbe
xchg
popa
test
rorb
loope
aam
push
mov
dec
in
adc
push
mov
loopne
jns
mov
sub
lods
fimull
test
push
xchg
sbb
icebp
insl
cmp
inc
push
inc
mov
aaa
inc
sti
test
cs
and
addr16
insl
cmp
into
insl
stos
sbb
cmp
shr
mov
mov
xchg
mov
outsb
mov
stc
mov
mov
cmpsl
loope
mov
rorl
js
cs
enter
xchg
inc
cltd
cltd
aaa
bound
inc
data16
ss
movsl
dec
rolb
neg
sub
gs
inc
inc
jno
clc
adc
syscall
inc
sti
jno
out
aaa
dec
mov
cmp
rcll
mov
ds
out
lret
and
shrl
rorb
repnz
lret
sti
jp,pt
xor
cmp
and
mov
add
xlat
pop
cmp
and
lret
test
jbe
and
scas
stos
mov
ss
ds
hlt
inc
fsub
lods
push
out
das
adcl
cmp
sub
cmp
scas
loope
adc
iret
out
push
bound
imul
add
bound
mov
pop
jbe
mov
popa
xchg
push
push
pop
jno
ds
mov
mov
pop
add
sub
jns
call
popa
inc
fiadds
sub
cmp
jae
pop
sub
pop
mov
leave
sbb
xor
in
mov
push
out
dec
lret
ret
cltd
test
jp
sub
iret
or
mov
testb
pop
into
jbe
mov
iret
popa
rcrb
test
jp
and
pop
pop
ds
sub
push
jns
cmp
jmp
and
fcompl
jge
add
cmp
jno
lea
mov
jle
adc
mov
add
cmp
aas
testl
mov
cs
fisttpll
mov
out
stos
inc
into
dec
jl
idivl
jl
inc
and
cmc
leave
adc
testb
movsl
sahf
push
jl
mov
popa
fwait
out
dec
and
divb
shr
mov
cld
mov
stos
ret
mov
loopne
cmp
fimuls
jl
decb
sarb
ja
pop
addr16
orl
jmp
dec
orb
lea
es
add
push
sub
cmp
in
shr
mov
or
and
js
or
lods
in
xchg
jb
mov
into
movsb
dec
pushf
repz
cltd
dec
pop
pushf
xchg
and
aas
push
mov
insl
sbbb
scas
lock
lods
jbe
sbb
mov
and
push
cmp
inc
cltd
mov
mov
enter
mov
test
cmp
les
pop
pop
fisubrl
sub
je
repnz
ja
divb
lahf
mov
sahf
scas
add
mov
in
or
cmp
mov
mov
leave
mov
cmp
ror
push
pop
loope
xchg
add
pusha
into
arpl
sub
xor
fstpt
add
mov
mov
dec
and
mov
cmpsl
ljmp
in
ret
or
sub
cmp
add
out
cmp
push
jmp
or
dec
jmp
pushf
cmp
or
ljmp
mov
and
push
repz
or
fcomip
xchg
mov
les
or
pop
xor
adc
mov
mov
ja
imul
xorb
pop
mov
pop
cmp
ret
lods
mov
cmp
mov
cmc
inc
jmp
pop
fdivl
test
lock
lock
push
fisubs
mov
fsubrs
pop
mov
adc
xchg
and
mov
imull
xchg
sub
mov
imul
dec
push
and
inc
nop
sbb
jle
jle
mov
inc
and
addr16
dec
pushf
idivl
mov
es
fbstp
xchg
mov
sbb
lea
jno
std
adc
insl
frstor
jae
xchg
test
add
dec
jns
inc
or
leave
outsl
inc
psrlw
pop
mov
int
sbb
mov
push
sbb
mov
add
inc
repnz
mov
loope
loop
xchg
jg
lcall
sub
adc
jge
pop
shll
or
jbe
sti
add
shll
pop
nop
jno
mov
inc
fwait
add
movsb
data16
pop
xor
cs
stc
mov
test
jnp
imul
dec
dec
scas
aad
mov
in
lret
gs
iret
cmpsl
std
xchg
sbb
ljmp
sbb
stc
adc
and
rcrl
test
ds
in
lret
xchg
jo
xchg
cmp
inc
cmpsb
push
mov
lods
push
insb
inc
mov
aas
movsl
out
stos
pop
xor
push
daa
push
mov
lret
out
jbe
add
xchg
xor
inc
mov
and
cwtl
pop
bound
nop
fs
cli
adc
int3
adc
daa
in
insb
test
pop
sub
sub
xchg
ror
or
sub
iret
lahf
xor
or
cmpsb
dec
ss
in
sub
xor
lods
mov
jae
mov
xchg
mov
adc
lds
mov
xchg
rol
sarb
enter
rol
clc
cmp
pop
lahf
shl
fsubr
stos
mov
push
notb
jns
lods
jecxz
push
cld
cmpsl
xor
pop
xor
shll
sub
push
jge
lahf
push
lods
dec
dec
ja
int3
xchg
pop
xor
xchg
es
cmp
cmp
sub
shl
adc
std
dec
adc
cmp
movsb
mov
and
lock
pop
xchg
cmc
loopne
cmp
mov
sti
push
sbb
sbb
lret
cmp
dec
or
xchg
mov
out
data16
xor
add
in
lds
pop
test
cmp
mov
add
push
ljmp
and
mov
push
cld
adc
fisttpl
cld
movsb
add
pushf
mov
mov
sarl
xchg
ds
xchg
cld
loop
cltd
xor
mov
mov
int3
pop
mov
adc
mov
ljmp
mov
adc
cmp
pop
cmp
lret
jno
outsl
xor
and
call
in
lods
cld
rolb
sbb
jg
xchg
jg
pop
iret
je
pop
roll
roll
sub
cld
stc
push
les
push
aam
jbe
stos
in
add
lcall
arpl
and
sar
pusha
mov
xor
out
nop
mov
add
test
cwtl
fidivs
in
xor
cmp
jge
mov
cmp
add
cmp
lahf
inc
insb
add
repz
inc
add
mov
and
xor
and
out
push
mov
ret
adc
rclb
leave
int
mov
fsubp
sahf
mov
ret
or
loope
in
cs
sbb
jge
cmp
adc
ret
bt
mov
cmp
inc
aad
repz
popa
pushf
cli
dec
inc
cmp
mov
shrl
mov
xlat
and
rol
hlt
adc
xor
push
and
or
push
inc
dec
xchg
sarl
sbbb
divb
loopne
or
or
xlat
xor
insl
cmp
cmc
mov
jg
pop
jne
das
xor
jns
ret
dec
test
stos
fildll
mov
add
loopne
push
push
jb
inc
ror
test
jne
inc
mov
mov
repz
movsl
push
mov
mov
repz
mov
add
mov
jnp
ret
or
mov
arpl
push
jge
lods
adc
pop
mov
jl
xor
std
pop
pcmpeqw
js
jo
and
mov
adc
pop
int3
add
xchg
sbb
test
imul
popa
ficompl
lock
loope
mov
loope
jo
das
jmp
icebp
dec
pop
sbb
adc
loopne
mov
jecxz
lea
and
je
xchg
cltd
jle
test
or
inc
addr16
cmpsl
push
mov
fldl
addr16
cmp
loopne
inc
in
mov
fstl
sarl
mov
mov
jnp
ljmp
jns
je
lock
push
mov
xor
fs
shrb
push
or
cmp
and
maxps
out
daa
mov
adc
inc
aad
pop
insb
mov
sub
xor
add
lods
movsl
cmp
sbb
mov
subl
loopne,pn
mov
add
mov
je
sub
stos
or
push
ja
xor
pop
test
adc
cmpsb
push
dec
xlat
pop
and
sub
fs
lods
fsubrs
cld
shll
dec
pop
jmp
mov
movsb
rolb
push
cmp
ljmp
popf
xorl
jae
dec
xor
and
movaps
mov
aad
jge
lds
pop
mov
test
push
pop
lods
les
xchg
sbb
add
xchg
stos
stos
add
xor
fcomp
cltd
data16
ljmp
mov
loope
or
aam
aam
dec
pop
sbbb
mov
push
incl
stos
lds
push
lret
mov
mov
mov
faddp
jb
lcall
out
adc
cld
inc
adc
mov
mov
dec
enter
and
into
cmp
ret
jbe
daa
lods
les
adc
sbb
inc
dec
adc
dec
mov
xchg
es
lods
ret
push
arpl
sub
mov
fisubrs
outsb
testb
mov
iret
cmp
fsubrl
adc
pop
in
add
lret
dec
or
rclb
test
and
in
inc
rcrb
push
jmp
mov
jl
cltd
lds
ficoms
pop
xor
mov
mov
adc
pop
aam
lcall
dec
fiaddl
lahf
add
mov
movl
dec
sub
or
sub
mov
sub
popfw
xor
xor
mov
sbb
cld
and
das
scas
imul
push
mov
mov
ret
fs
inc
rcr
mov
sub
xor
out
sbb
jo
dec
loope
sub
xor
cmp
inc
xor
test
xchg
scas
ret
shlb
sbb
js
sub
and
adc
push
dec
cli
cli
sub
inc
xchg
loopne
pushf
mov
mov
pop
sahf
call
xchg
mov
sti
sub
out
jmp
jno
shll
es
pop
repnz
jmp
movsl
inc
sar
test
inc
cmp
xor
pop
mov
push
hlt
arpl
cmpb
sub
sbb
jge
fwait
pop
xor
sahf
xor
inc
rcrl
fcmovnu
ret
cmpsl
jge
enter
lret
xchg
xorb
pusha
cmpsl
push
sti
inc
lock
icebp
xchg
pop
cmpl
pushf
out
les
add
mov
sub
andb
jne
popf
aam
sarl
dec
dec
sarl
or
in
sub
scas
test
repnz
mov
cmp
xorl
rcl
popa
mov
jge
mov
xor
mov
sbb
lock
push
mov
fstpl
pop
scas
sub
cmp
movb
xchg
xor
fldenv
in
sbb
sbb
jno
mov
popf
cld
and
xchg
cvttps2pi
push
outsl
sub
adc
lahf
std
cmp
push
inc
out
or
jecxz
ljmp
outsb
pop
adc
push
scas
je,pn
sub
push
nop
inc
ret
pop
ds
js
add
out
lds
repnz
pop
dec
in
push
adc
jne
scas
mov
pop
inc
lcall
and
fiadds
repnz
mov
inc
and
inc
test
test
ficoml
jp
cmp
aad
and
cmp
dec
test
cmp
add
sahf
jecxz
dec
inc
ret
ret
out
pop
cltd
dec
es
mov
ja
dec
bound
into
pushf
pop
cs
dec
rorl
daa
jg
shl
push
jbe
xchg
mov
jge
mov
or
nop
ljmp
pop
sbb
push
dec
js
cmp
mov
inc
push
inc
mov
in
test
pop
hlt
mov
push
test
stc
insl
mov
iret
leave
and
cmc
pop
and
jno
out
pop
xorl
cwtl
std
dec
cmp
outsb
inc
ret
mov
jg
pop
cmpl
push
or
mov
mov
add
sub
cmp
ret
aad
sub
xor
je
aad
stc
push
stc
cld
mov
xor
sub
add
fsubp
pop
mov
sahf
inc
xor
loope
insb
dec
sbb
mov
jmp
or
scas
rorb
cmp
jmp
scas
mov
pop
movsl
add
lahf
adc
xlat
sarl
es
inc
stos
and
xor
dec
pusha
js
xor
dec
loopne
cmpsl
sbb
std
and
sahf
fwait
pop
jbe
xchg
addb
adc
rcl
jp
inc
repz
and
les
iret
lea
mov
dec
cmp
mov
inc
dec
imul
adc
sub
data16
xlat
xchg
scas
add
test
int3
cmc
sub
loopne
pop
repnz
sub
sub
xlat
iret
js
shlb
mov
mov
xchg
jle
jns
leave
push
call
add
jmp
push
xchg
pop
xchg
bound
add
xor
jecxz
mov
rcrb
lret
rcr
sub
pop
adc
jecxz
add
fistpl
pop
mov
ljmp
xor
leave
nop
outsl
in
push
popf
inc
push
add
repnz
cmpsb
test
in
adc
in
cmp
xor
jge
rolb
mov
dec
jmp
sti
jle
insl
outsl
mov
ds
fbld
mov
fmull
incl
or
sbb
sub
setg
ja
sub
ss
mov
xchg
push
sub
enter
push
pop
pop
and
movsb
add
mov
jecxz
scas
lea
or
lock
cmpsb
mov
dec
sub
xchg
arpl
cmpsl
jns
push
xor
lret
pop
out
aaa
ret
and
pushf
adc
inc
push
icebp
inc
sbbl
sbb
pop
inc
fcoml
in
adc
sbb
lea
sub
dec
add
movsl
js
mov
mov
pop
clc
mov
out
out
push
jl
lahf
dec
bound
in
fimuls
into
inc
sub
fwait
mov
ja
fdiv
data16
xlat
cmp
ret
push
test
jne
std
cs
xor
bound
outsl
lret
push
pop
ja
pusha
outsb
sub
xchg
jg
pop
inc
hlt
test
push
imul
fldt
or
cmp
or
movsl
addr16
stc
inc
add
outsb
adc
loop
push
jbe
stos
xchg
xor
push
cmp
fnsave
add
mov
ja
and
rolb
xchg
pop
inc
movsl
lods
cmpl
sahf
mov
pop
jg
fstpt
in
test
subl
ja
insl
or
jmp
mov
xor
push
out
dec
jp
push
test
cli
cmp
xchg
xchg
and
pop
out
mov
out
testl
jl
movsb
test
mov
cmp
inc
aam
xchg
mov
sub
fstpt
ret
inc
or
stos
hlt
sub
fs
mov
inc
pop
pop
xor
pusha
or
test
je
jnp
das
dec
int3
sahf
aas
mov
arpl
push
mov
add
dec
jge
sub
sar
push
cld
out
mov
orl
jmp
cmpsb
dec
iret
fwait
inc
mov
or
mov
in
mov
ja
shl
lahf
lock
popl
mov
xor
fcoml
outsl
pop
mov
push
dec
lock
mov
pop
out
push
inc
in
jae
xchg
in
jecxz
push
sbb
test
cmpsl
aam
mov
inc
int
ret
xor
daa
subl
popf
addr16
shrb
xor
or
xchg
call
arpl
pop
dec
std
scas
lret
insb
inc
popf
cld
adc
cmp
fcomi
xchg
leave
pusha
sbb
or
out
push
add
and
dec
loopne
ljmp
and
cmpsb
repz
mov
iret
daa
dec
push
dec
mov
xchg
and
outsl
lret
iretw
orb
pop
test
push
sub
into
lds
xchg
outsb
cmp
insl
pop
push
push
pusha
dec
js
jp,pt
daa
pop
sti
adcw
cld
ja
xchg
inc
dec
in
jae
sbb
rclb
xor
and
xor
xorl
cltd
test
loopne
inc
out
mov
mov
lret
fisttps
out
pop
dec
jg
adc
inc
xchg
and
or
enter
mov
and
mov
inc
scas
adc
dec
jo
call
test
adc
divl
lret
mov
dec
jnp
ret
sub
xchg
xor
dec
dec
dec
add
mov
rolb
jg
movsb
lds
popf
inc
in
add
xchg
jle
pop
xchg
repnz
xchg
roll
sbbb
mov
add
cmc
test
jp
lea
mov
jns
mov
mov
mov
sbb
mulb
shlb
sbb
in
dec
sahf
or
lret
mov
fisubs
cmpsl
mov
jp
jbe,pn
inc
or
push
inc
imulb
sbb
push
push
inc
jge
fistps
hlt
jmp
inc
dec
xchg
lret
mov
stos
pop
loop
add
fnstsw
rorb
or
mov
fs
and
add
push
aas
dec
scas
stos
movsl
sub
lock
insb
mov
sub
sub
jns,pn
idivb
dec
jnp
lock
inc
or
das
mov
mov
shl
test
sbb
imul
xor
out
adc
leave
ljmp
repnz
leave
popf
mov
pop
jbe
cmpsb
out
dec
aas
sbb
cltd
inc
mov
popf
clc
pusha
out
filds
out
les
adc
pop
push
jae
sub
jp
dec
xor
out
scas
out
add
add
push
out
lods
inc
call
push
fcomip
mov
cmp
cs
xor
mov
and
inc
into
jno
lret
test
lahf
push
or
pop
fadd
mov
mov
inc
sub
in
jecxz
xchg
nop
jnp
pop
lea
push
cmp
fildl
loopne
and
jle
pop
sbb
sbb
jle
push
sub
mov
sub
lock
in
mov
mov
cmc
imul
dec
xchg
xor
and
adc
insb
mov
call
fstpl
or
sbb
int
lahf
repz
or
out
les
jbe
movsl
adc
dec
cmp
ret
cmpsl
jne
xlat
mov
jo
lock
xlat
movsl
stos
mov
lock
push
fcomp
push
xchg
aam
lahf
sbb
std
xchg
add
lcall
mov
jns
cmpsb
cmp
scas
push
rcrl
stc
dec
sub
test
mov
adc
out
xlat
in
daa
fistps
das
iret
mov
add
add
jnp
iret
fwait
outsb
test
out
xchg
int
imul
roll
xor
jo
data16
sahf
in
loop
or
fstpt
inc
pop
and
and
enter
mov
movsb
jbe
dec
xchg
insb
sub
out
faddp
lahf
adc
pop
aam
hlt
addb
and
sbb
cmp
inc
out
leave
dec
rcrb
mov
in
scas
cltd
mov
cltd
xor
push
cmc
sub
ljmp
xor
sub
scas
pop
xchg
sub
clc
adc
rorb
push
adc
push
icebp
dec
xor
mov
fidivs
or
or
inc
iret
xor
jo
jnp
ds
push
push
dec
pop
pop
mov
sub
inc
divl
ficomps
xor
movsb
lods
sbb
fcmovbe
inc
cli
dec
popf
sar
fmuls
repnz
mov
shrb
adc
xor
repnz
mov
xchg
loop
and
ret
data16
jne
pop
adcb
enter
int
pop
cmp
cmp
jnp
sub
xchg
pop
imul
xchg
mov
cmp
xchg
adcb
jle
mov
sub
add
scas
jo
in
xor
dec
push
pop
sub
ljmp
imul
jge
loopne
sbb
aad
pop
lahf
popf
addr16
pop
cmpsb
xlat
icebp
push
fdivrl
adc
in
mov
jo
pop
scas
shl
loopne
imul
rorl
inc
mov
cltd
ror
sbb
je
iret
mov
fwait
popa
push
dec
ds
add
dec
mov
and
xchg
rorb
dec
pushf
pop
push
test
sahf
mov
mov
ror
cmp
dec
int3
fcmovu
pop
sbb
lahf
mov
mov
and
cmp
push
add
mov
test
push
jecxz
mov
loop
movsl
mov
incb
stos
rclb
shlb
jne
add
shlb
xorl
sub
not
and
pop
mov
sub
mov
shlb
sahf
lcall
orb
cltd
icebp
aam
jge
dec
sbb
pop
mov
dec
mov
fs
sbb
ja
cmc
popa
and
out
inc
adc
push
sub
xchg
insl
sbbl
fs
cmp
test
pop
pop
jo
xchg
adc
test
outsb
jl
lret
outsb
cmp
and
xchg
outsl
sbb
lea
xchg
mov
adc
stos
mov
jle
les
adc
leave
jl
fiadds
inc
cltd
adc
or
add
popa
mov
sbb
cmp
jbe
xor
xchg
mov
rolb
inc
imul
notb
lock
xchg
cpuid
addr16
ss
testb
das
popa
adc
fisttpll
andb
adc
jo
push
hlt
mov
pop
jno
mov
jne,pt
jae
mov
mov
jecxz
pop
jg
in
or
cmp
push
push
sbb
jg
or
inc
or
cmpsl
mov
sub
mov
and
cmp
adc
sub
adc
sbb
mov
inc
pop
test
sbb
mov
sub
jne
cmp
xchg
in
out
shlb
sbb
std
imul
push
movsl
aaa
jne
outsl
inc
in
adc
inc
shrl
rcrb
test
repz
add
mov
cmp
sub
ds
gs
inc
hlt
stc
pop
jl
clc
push
scas
insb
mov
call
adc
scas
cwtl
daa
js
pushf
jmp
out
insb
xor
pop
or
std
fcoms
movsl
push
adc
mov
dec
jbe
xchg
movsb
lods
mov
aas
push
inc
fdivp
mov
fildl
sbb
ja
sub
sahf
or
jmp
cld
stos
push
stos
mov
dec
pop
mov
aad
mov
pop
add
repz
sub
push
pusha
imul
or
pop
and
mov
xor
sub
mov
test
or
inc
xchg
and
mov
xchg
inc
mov
adc
cmp
es
xor
mov
inc
test
test
xlat
fiaddl
add
cld
shll
dec
enter
cwtl
pusha
pop
pop
mov
pop
push
and
loopne
pushf
es
mov
push
ds
mov
es
cmp
ret
roll
jmp
scas
clc
adc
push
add
mov
rorb
jbe
inc
idivl
int3
movsl
ret
pop
jecxz
aad
lock
or
ficoml
les
pop
imul
dec
loope
jmp
jp
xchg
mov
out
movsb
in
jb
cwtl
leave
adc
mov
adc
mov
or
mov
icebp
fistpl
dec
pop
mov
andb
dec
sub
adcb
jl
jle
cmp
movb
je
or
into
and
into
sahf
rorb
es
xor
adc
popf
sub
jnp
cmpl
icebp
cmp
cld
mov
lods
in
and
aad
pop
jnp
mov
insl
jle
mov
mov
xor
subl
fcompl
mov
and
pop
int3
cmc
push
mov
push
jge
xchg
jecxz
sbb
push
mov
mov
jge
fldt
jne
fnstsw
in
mov
stos
pop
movsb
add
push
fstps
add
clc
xchg
cli
es
push
sub
push
xchg
aaa
addl
popa
arpl
fs
test
ret
gs
nop
dec
imul
in
pop
mov
lds
cwtl
push
xor
push
movsb
add
aam
jecxz
cmp
pusha
add
sub
xchg
cmpl
lahf
int
cmp
mov
imul
js
cmp
into
sarl
shl
dec
push
cmp
dec
dec
mov
in
or
stos
aaa
mov
cmp
jno
sbb
jge
mov
int3
mov
pop
mov
ror
push
push
xchg
rol
sub
inc
push
push
outsb
rcr
hlt
out
mov
jbe
sub
inc
cmp
pop
cmp
adc
adc
lret
popa
jae
fstpt
mov
fisttps
lcall
int
xchg
and
pop
mov
aam
data16
leave
stos
fimull
pushf
push
inc
jle
rorl
jle
aas
scas
mov
aad
push
aaa
jo
mov
cld
test
cli
cmp
adc
orl
sbb
sbb
and
add
outsb
xchg
and
lcall
stc
stos
mov
mov
mov
pusha
pmullw
jnp
sbb
jge
movb
pop
rol
jmp
xor
in
add
into
shll
cwtl
cli
lods
xlat
fs
jp
cmp
pop
or
pushf
int
test
cmpsl
inc
cmp
jnp
and
outsb
lahf
jmp
and
pushf
xchg
mov
neg
shl
nop
shll
mov
es
sub
xchg
loope
jmp
xchg
pusha
inc
adc
lcall
push
sbb
inc
insb
and
outsb
das
xor
lock
test
sub
jle
jg
stc
pop
nop
fcmovbe
xor
loope
insl
cmpsb
mov
in
xor
adc
sub
and
mov
mov
push
xchg
xor
rorl
jne
in
insb
sub
imull
adc
test
add
sbb
cli
and
ja
ljmp
xchg
cmp
dec
xchg
scas
and
cmp
pop
test
je
je
das
insl
or
sbb
icebp
sub
ss
add
cld
and
fdivl
es
fadds
lock
daa
iret
sub
enter
mov
push
inc
and
sub
xchg
mov
cltd
movsb
sub
mov
or
imull
xlat
jo
push
das
mov
inc
je
jb
dec
xor
jo
jb
test
jnp
mov
fldenv
adc
sbb
rcl
pop
icebp
push
sub
mov
dec
mov
add
lahf
pop
push
mov
out
mov
mov
dec
pop
into
jp
pop
stc
xor
insl
dec
leave
or
inc
lock
test
sbb
stc
or
or
adc
mov
or
movsl
adc
pop
in
aas
fnstenv
xor
add
out
mov
xchg
dec
lods
dec
add
xlat
lahf
pop
decb
enter
and
cmp
cs
dec
xor
loopne
pop
enter
jne
add
xchg
scas
out
add
inc
sbb
inc
sbb
push
popa
clc
clc
ficoml
mov
xchg
sarb
mov
insl
or
subb
popa
adc
sub
cltd
or
cmpsb
mov
cmpsl
adc
mov
cmp
lcall
stc
xchg
mov
push
stc
jnp
sub
cltd
cmpsb
jo
push
add
cs
divl
std
sub
enter
or
pusha
sub
mov
or
push
sti
out
ror
addr16
cwtl
adc
sub
pushf
pop
mov
sub
jbe
dec
inc
arpl
adc
lret
push
mov
cmp
mov
pushf
lods
scas
mov
push
jns
std
dec
cmp
adc
shrl
movsb
sub
pop
imul
movsl
sub
movsl
dec
shr
rclb
lock
mov
sub
ss
ljmp
jns
out
adc
shrl
jecxz
add
add
jns
rcl
sbb
adc
clc
inc
jbe
mov
repz
push
dec
mov
adc
ds
push
push
leave
iret
sti
loopne
adc
add
push
and
add
sub
fisubrl
mov
cmp
repz
dec
mov
sub
outsb
sbb
sub
inc
pop
and
and
icebp
mov
rcrb
mov
and
aad
call
jecxz
push
pop
add
test
jns
mov
mov
adc
call
mov
adcl
ss
icebp
ret
enter
mov
push
out
loop
cli
cmc
test
jno
mov
pop
cmp
push
lods
dec
lahf
xchg
test
out
sahf
jae
mov
shll
test
nop
and
mov
fldt
stc
ret
mov
cltd
loop
aad
mov
scas
mov
xor
and
sub
dec
or
les
insl
ds
sbb
scas
sub
addr16
mov
addr16
inc
adc
fnstcw
scas
test
movsl
call
mov
xchg
and
cmpsl
jg
cmp
jp
push
fbld
push
mov
jns
insb
inc
xchg
cmpsl
shl
sub
ja
and
std
xchg
int3
mov
add
jle
cmp
orb
xor
push
mov
pop
inc
mov
es
loop
test
pop
push
jge
test
mov
pop
sub
jns
ds
ret
cmpsl
sahf
sub
and
add
mov
mov
flds
fcomps
push
sub
dec
wrmsr
xor
inc
adc
mov
sahf
jae
xor
and
push
stos
or
pusha
nop
xor
sub
jns
jge
movsl
sbb
push
dec
xor
out
jmp
cltd
test
push
sub
js
xchg
aaa
xlat
xor
scas
mov
mov
lods
push
dec
repnz
outsl
or
fwait
gs
aad
cs
add
mov
es
jb
cmc
pop
cltd
mov
mov
mov
rcl
xor
jg
pop
popf
add
mov
fwait
lock
or
pop
push
xchg
adc
cmpsl
in
jns,pt
mov
pop
and
int3
mov
lods
mov
lea
faddl
or
push
mov
dec
mov
xor
out
mov
cmpsl
pop
subl
out
xchg
jmp
inc
and
out
out
xchg
cmp
jns
cmp
pop
pusha
adc
pop
dec
mov
push
cmp
adc
dec
es
and
testl
push
ja
jmp
mov
cmp
sti
push
nop
jns
or
jb
sbb
mov
jecxz
fstl
jmp
or
pop
mov
mov
je
add
gs
fcoms
pop
add
cmp
rcrl
dec
xor
je
fmul
inc
push
mov
sub
mov
dec
out
jl
in
out
pop
pop
fimull
daa
cmp
mov
scas
pushf
andl
cmp
ret
test
xor
jnp
dec
mov
add
shrl
and
pushf
push
loopnew
fwait
icebp
xchg
mov
enter
jp
jp
int3
lods
xchg
cmc
idiv
addr16
insb
aam
lahf
mov
push
cld
jo
iret
lods
mov
rclb
int3
call
lock
jmp
lcall
xchg
pop
vpcmpgtb
fdivrs
xlat
xchg
call
pop
lcall
stos
jmp
ss
xorb
mov
mov
rol
pop
flds
adc
sub
push
push
outsb
add
addr16
push
loope
xor
mov
pushl
cmpsb
fimull
inc
pop
js
xchg
or
iret
je
add
mov
in
sbb
repnz
pop
add
add
dec
bnd
addr16
test
out
dec
mov
mov
andb
pop
jb
mov
in
fcmovnbe
cmp
xlat
xor
fwait
dec
ljmp
cmp
cmpsl
dec
and
and
sti
jne
dec
sbb
xor
mov
fs
scas
fistpl
inc
fcmovbe
or
rclb
rclb
mov
dec
icebp
aam
cwtl
sub
xchg
scas
sbb
inc
lods
testl
mov
aad
dec
insl
mov
ret
iret
adc
aas
cmp
pop
dec
mov
inc
in
push
enter
outsb
push
pop
sbb
pop
clc
enter
aam
or
sub
ret
mov
mov
dec
outsl
cmp
adc
call
xchg
add
popf
negb
dec
aam
push
inc
cmp
jmp
clc
inc
push
rclb
xchg
iret
jnp
xor
loope
inc
outsl
fdivl
cld
sbb
xor
mov
movsb
in
mov
in
iret
or
mov
sbb
sub
xor
push
inc
mov
mov
jbe
dec
lret
popa
xor
ds
inc
lret
leave
dec
cs
mov
cmc
mov
loope
daa
in
sbb
push
or
cmp
adc
and
pop
popf
adc
sbb
dec
xchg
fidivrl
cld
mov
loop
mov
lahf
subb
jl
mov
mov
jae
add
mov
mov
sub
inc
xor
mov
cltd
icebp
loope
cmpsb
movsb
mov
push
fildll
adc
aas
sbb
icebp
inc
insl
mov
and
stc
push
dec
mov
sub
pusha
cmp
aas
mov
or
sbb
imul
mov
iret
inc
pusha
aaa
mov
pusha
fldl
shrl
push
lock
test
scas
push
push
test
dec
xchg
mov
jae
inc
js
push
int
cmp
jno
sub
mov
adc
and
adc
mov
icebp
add
fs
imul
or
push
and
inc
jecxz
pushf
sbb
shl
imul
inc
cmp
cmp
xor
mov
fisttps
idivb
jae
pop
cmp
rcl
mov
push
popf
js
sub
dec
cmc
sbb
sbb
cld
mov
fsub
mov
inc
aaa
push
pop
cmc
add
arpl
xchg
sub
mov
sub
lret
rorb
jecxz
mov
insl
pop
pop
ret
pop
ds
into
or
sbb
jnp
jp
xor
adc
xor
scas
cmp
sar
and
ljmp
shl
stos
jnp
fistpll
insb
pop
jmp
lcall
xchg
shrb
pushf
data16
std
mov
lcall
xchg
sbb
adc
ljmp
xchg
adc
xor
and
pop
cmc
popa
nop
push
push
mov
mov
in
mov
mov
jb
icebp
mov
jmp
pop
arpl
jg
in
mov
push
cwtl
cmc
inc
push
bound
pop
test
xchg
mov
xor
pop
adc
add
je
mov
cmp
int3
fistl
lcall
jae
arpl
fstpl
in
aad
inc
xor
setno
inc
xor
test
xlat
xchg
rdmsr
insb
lret
test
pop
mov
mov
rcr
sbb
mov
insb
scas
mov
adc
repnz
popa
arpl
je
or
and
repnz
jmp
fld
xchg
push
imul
inc
loope
test
hlt
mov
cmp
sahf
add
xchg
pcmpeqb
dec
add
sub
test
test
test
push
mov
es
jecxz
dec
in
xchg
xchg
rcrb
inc
cmp
mov
adc
test
mov
pop
jge
jmp
out
xor
lret
in
cmc
in
pop
mov
stc
mov
nop
int
pop
xchg
mov
in
xchg
inc
xchg
xor
cmpsl
jmp
inc
pop
mov
rcr
cmp
mov
mov
hlt
cmp
ljmp
pop
adc
imul
xor
cwtl
or
push
dec
push
aaa
repnz
loop
mov
push
in
imul
insb
fbld
add
fcmove
mov
dec
imul
fs
stc
idiv
repz
adc
data16
and
enter
nop
sbb
test
scas
jecxz
push
fdivr
fldcw
pop
test
pop
dec
jne
mov
xor
filds
test
mov
call
decl
pusha
or
jno
arpl
adc
inc
cmp
pop
sar
and
mov
arpl
mov
inc
pop
out
out
xlat
shrb
outsl
jne
mov
fimull
push
push
ljmp
int3
cmpsb
or
mov
mov
das
lret
jae
push
xchg
mov
mov
fistpl
movsl
mov
std
xchg
icebp
es
out
out
adc
test
sub
testb
stos
test
mov
lret
jno
sahf
or
push
xchg
inc
mov
out
push
lods
sbb
pop
xchg
and
mov
mov
ffreep
adc
cli
add
and
mov
nop
es
adc
jae
fdivs
scas
jg
div
hlt
and
sbb
jmp
mov
add
jo
mov
out
filds
scas
imul
and
int3
mov
mov
or
sub
movsl
pop
jg
xchg
les
cmc
cmc
lods
stos
mov
rclb
sub
mov
inc
mov
mov
cmp
scas
outsl
leave
add
insb
pop
cltd
mov
push
adc
inc
jg
data16
mov
out
xchg
dec
cmpb
pop
das
xor
fistpll
pop
adc
daa
lret
loop
jnp
or
sbb
jnp
shlb
mov
icebp
jns
fdivp
sbb
adc
dec
test
mov
das
int3
mov
daa
outsb
or
mov
and
jnp
insb
movsb
mov
inc
repz
adc
pop
js
inc
fidivl
cmp
mov
ja
or
pushf
sub
shll
pop
arpl
icebp
loope
mov
je
ss
lock
pop
mov
push
test
pop
pop
inc
daa
push
popa
mov
dec
out
push
mov
pop
fldl
jecxz
out
ret
add
sub
scas
sbb
xor
shll
pop
cli
and
int
jne
inc
dec
fmuls
cmpsb
in
xor
das
movsl
cs
push
cltd
jp
test
arpl
sub
mov
cmpb
adc
lahf
push
insb
aam
outsb
cld
jp
aaa
or
lock
sub
xchg
mull
test
xor
adcb
push
repnz
faddl
mov
mov
movsl
pop
out
ds
xchg
cmp
repz
pop
mov
mov
dec
bound
adc
or
or
incb
mov
shrl
xchg
dec
adc
fsubrl
adc
push
mov
repz
mov
ret
lret
fidivrs
xor
push
cmp
outsl
push
dec
mov
push
mov
xchg
xor
in
cld
push
shlb
enter
rcrb
dec
sub
mov
mov
adc
add
push
loop
mov
push
fldenv
idiv
pop
sahf
add
xchg
in
mov
fdivrl
cmpsl
call
add
ljmp
xchg
fucomip
mov
pop
leave
pop
push
xor
mov
test
mov
insl
pop
mov
aas
shll
lds
xor
arpl
ret
jbe
cwtl
or
sub
pop
jns
mov
sbb
ss
inc
imul
mov
xchg
cmc
aam
push
mov
or
or
adc
mov
cltd
in
sub
ret
nop
mulb
in
sub
sub
cli
sbb
es
sahf
or
scas
push
jle
fisttpll
mov
movsb
sub
pop
rolb
out
adc
mov
pop
push
shrl
cmove
sub
push
mov
and
out
pop
stos
and
pop
cmp
pop
push
mov
push
int
mov
and
rorl
fmuls
sub
sbb
data16
std
dec
repnz
mov
daa
jecxz
jns
mov
cmc
pop
jbe
lahf
loope
mov
les
jae
inc
xor
clc
je,pt
inc
lea
xchg
lret
fucomp
add
nop
sub
test
fldcw
push
mov
sahf
jbe
xchg
push
iret
xor
nopl
lea
bnd
mov
dec
and
inc
dec
ficompl
or
add
pop
xchg
mov
inc
inc
sub
dec
add
and
jge
pop
outsb
push
jp
loopne
push
and
adc
add
lods
adc
lods
sbb
rcl
cmpsl
stos
adcb
pop
in
stos
iret
mov
sbb
pop
push
leave
xlat
test
shll
dec
lret
arpl
out
pop
pop
sub
jbe
mov
sub
sti
mov
or
xor
adc
stos
andl
out
stc
stc
inc
inc
and
mov
aaa
ds
sbb
xchg
fsubl
or
test
dec
insb
pop
pop
int
jnp
sub
dec
cmp
je
loope
sti
and
test
mov
inc
adc
mov
xchg
or
push
fsub
sub
into
jne
jo
das
cmpsl
imul
test
in
push
push
enter
mov
mov
mov
cwtl
mov
cli
shl
pop
ret
jp
test
and
gs
add
in
jae
in
adc
ds
testb
int3
pop
add
jp
push
mov
out
adc
pop
and
adc
in
push
mov
adc
push
or
sti
cmp
sub
or
jge
inc
aaa
sbb
lret
gs
movsb
mov
cmp
mov
inc
mov
pusha
sti
dec
dec
mov
dec
pop
fiaddl
sbb
fcomp
push
lahf
adc
push
mov
lea
cmpsl
ficomps
add
fisubrs
pushf
sbb
cmpsb
ret
and
movsl
push
icebp
xor
mov
jmp
xor
ja
sub
xor
dec
mov
pop
mov
xor
pop
pop
popa
cmpsb
mov
push
pop
stos
int
int
jns
mov
adc
andb
je
cmp
cmp
mov
fcoms
divl
das
or
shl
push
sub
js
insl
mov
jbe
push
or
xor
popf
pop
movsl
xchg
mov
mov
in
cmpl
cmp
xorb
out
or
jne
inc
icebp
and
push
test
xor
mov
sub
mov
loop
dec
sub
cmp
mov
cmp
icebp
push
out
fistpll
pop
adcb
pop
in
mov
jns
push
jbe
or
sbb
push
lds
pop
sbbl
push
push
movsb
fmull
scas
lret
pushf
cs
xchg
xchg
cmpsl
dec
jge
push
lea
fnstcw
and
nop
push
test
insb
mov
pop
jbe
les
xchg
popf
addb
or
out
dec
mov
subb
das
sbb
jne
dec
iret
into
in
push
lods
mov
inc
out
shl
std
xor
fucom
into
inc
in
xor
fiaddl
pop
or
repz
lret
insb
je
pop
jae
fdivrs
jbe
mov
xchg
adc
xchg
pop
cwtl
sub
sub
jb
lods
call
or
push
mov
adc
test
movsb
cld
out
repz
push
mov
mov
fidivrs
mov
int
lock
orb
add
sub
add
push
fiadds
addr16
insl
dec
fdivrp
out
sbb
and
inc
inc
xchg
xor
xchg
fmull
sbb
inc
cmp
pop
push
lds
inc
jo
test
add
dec
sahf
bound
call
aad
daa
xor
xchg
dec
int3
into
or
add
ja
mov
cs
pusha
jns
mov
xchg
fsubs
xchg
add
arpl
mov
pop
fwait
sbb
loopne
popf
xchg
or
lods
in
cmp
jmp
mov
jno
xor
add
ror
clc
loopne
and
aad
call
cmp
adcb
xlat
arpl
xchg
dec
push
add
gs
ret
jmp
and
push
or
lcall
cwtl
lahf
adc
sub
cltd
loopne
jne
lods
fisubrl
lods
in
push
and
pushf
inc
jnp
cmc
iret
sbbl
sbb
shl
dec
orb
js
mov
jae
aam
mov
mov
pop
mov
inc
clc
lock
sbb
js
xor
mov
inc
test
leave
iret
pop
cs
mov
fwait
push
inc
and
imul
pop
jecxz
les
xchg
stc
aaa
cmpsb
sub
mov
arpl
cmpsb
in
add
mov
mov
cwtl
faddl
jmp
test
stos
iret
fistl
sbb
lods
xchg
xor
hlt
adc
mov
fistps
sti
jns
xchg
adc
adc
add
cmp
repz
lcall
sbb
std
jno
notb
in
xchg
mov
sbb
sbb
jnp
nop
jle
xchg
pop
imul
js
ret
jmp
mov
sbb
lcall
mov
jp
and
push
subb
aam
sti
mov
xor
loopne
mov
jae
dec
dec
push
dec
jb
and
push
cmp
sub
and
stos
call
or
call
inc
roll
into
loope
std
mov
lret
cwtl
fwait
pop
fisubs
mov
sub
xchg
adc
adc
test
jge
insb
and
push
mov
add
iret
jbe
jo
insl
movsl
lret
mov
out
std
jecxz
ds
call
pusha
xchg
pusha
out
adcb
or
dec
bound
roll
ret
movntq
arpl
xlat
dec
scas
rolb
jae
pop
inc
test
lods
jne
inc
mov
imul
sti
imul
out
jecxz
aad
popf
rclb
iret
xor
fstpl
dec
pop
add
leave
mov
clc
ja
sbb
fcmovb
test
ret
lock
ficoms
inc
mull
sbbl
int3
jp
cmc
push
lret
mov
insb
pop
lods
outsb
mov
jmp
or
in
fisubrs
insl
inc
pop
cmp
push
lods
in
repnz
sbbb
jg
mov
mov
decb
ljmp
loopne
or
push
mov
push
adc
movsl
rorb
pop
sti
mov
rolb
adc
sbb
sbb
sub
cmc
pop
push
testb
mov
jbe
hlt
and
jno
sbb
outsl
sub
dec
ja
cmp
dec
add
sarl
aad
icebp
push
daa
movsl
push
out
xor
jae
xor
je
js
sub
xchg
jl
stos
jl
sbb
daa
pop
pop
rcrl
pop
mov
aam
ja
sahf
test
inc
inc
enter
jns
cmp
jl
or
jle
dec
fsubl
ret
push
fstpt
or
xchg
js
sarb
movsb
lods
mov
adc
insl
xorl
mov
cmp
lcall
mov
or
scas
rcll
arpl
dec
std
or
sub
ja
xor
adc
add
loopne
imul
mov
push
pusha
push
push
shrb
js
fdivrs
pushf
xchg
pop
xlat
std
arpl
mov
aaa
jae
aaa
js
mov
adc
cmp
push
bound
pushf
lods
iret
xchg
imul
call
popf
movsb
xchg
pop
dec
adc
mov
popl
mov
push
aad
outsb
outsl
jno
mov
cs
loope
popl
mov
inc
or
mov
push
dec
jo
test
test
in
outsl
cwtl
cmpsb
jp
jns
xor
inc
fadd
outsb
cmpsb
or
addr16
cli
mov
sub
insb
fdivl
fistl
adc
stos
mov
test
mov
push
sbb
jg
push
or
push
fldt
mov
fisttps
mov
into
mov
repnz
and
jne
and
fldt
mov
std
cmc
sub
adc
jae
pop
inc
call
fldl
sbb
pop
push
ret
pop
pop
call
inc
mov
sbb
xor
flds
addb
lahf
sbb
dec
mov
outsb
lds
dec
inc
das
add
test
orl
addr16
jb
mov
inc
outsb
push
jnp
sub
sbb
push
jmp
xor
mov
rol
lret
cmp
add
cmp
out
rcll
cld
sbb
fisubs
lds
push
mov
cmp
sbb
xchg
out
clc
out
push
mov
mov
jg
push
add
out
fsubs
stc
lahf
scas
and
scas
or
adc
cmpsb
cmp
push
addb
movl
sub
cli
jae
lea
cmpsl
dec
jle
mov
mov
sarl
icebp
je
fimuls
loopne
jecxz
loop
push
push
ret
sub
outsl
into
xchg
lods
gs
pop
sub
mov
sub
pusha
cmp
ret
out
cmp
jge
mov
cmp
and
stos
shlb
cld
push
xchg
push
insl
les
rclb
add
cmp
jmp
mov
sbb
push
repnz
decl
loope
adcb
addl
inc
inc
loopne
mulps
out
pop
jge
push
or
inc
and
dec
or
fimull
or
es
push
sub
std
mov
and
push
call
pop
pop
jae
jb
cmpsl
jle
int3
lahf
loope
dec
mov
das
mov
pop
xchg
mov
jle
loope
push
lds
or
test
xlat
pop
arpl
notl
cwtl
in
dec
pop
cld
xor
loope
mul
mov
insb
fildll
orb
lock
hlt
les
repnz
xchg
into
test
adc
adc
sbb
pop
decl
lds
std
stos
out
negl
xlat
pop
rcrb
jns
inc
shll
cmp
clc
fidivrl
cmp
jbe
inc
sub
jns
fisubs
scas
les
jmp
xlat
outsl
lea
int
or
out
test
scas
xor
bnd
sbb
mov
mov
jge
mov
pop
stos
nop
pusha
sbb
fwait
push
cmpb
daa
out
adc
js
lahf
imul
dec
dec
sti
adc
ss
iret
jmp
dec
nop
and
ja
stos
mov
or
int
jbe
outsb
loope
pop
int3
lahf
in
shll
add
iret
gs
push
idiv
add
push
push
andb
addr16
and
mov
push
add
iret
ds
cmp
fstl
xor
shrb
pop
dec
pop
sub
mov
icebp
dec
push
pop
jo
dec
adc
pop
and
push
xchg
mov
add
xchg
push
or
mov
push
or
sub
pop
pusha
xchg
rorl
test
pop
jae
arpl
cld
sbb
cmp
mov
xlat
push
xor
xor
aaa
lret
push
jge
and
ja
xchg
dec
mov
aad
lods
jae
and
jle
inc
adc
xor
and
jne
mov
lock
push
mov
add
ror
sbb
jne
std
js
sub
inc
xchg
fcmovne
jmp
test
mov
iret
dec
xor
das
xor
cmc
cmp
pop
loope
sub
stos
sub
adc
push
mov
bound
nop
mov
pop
mov
shll
sbb
ljmp
xchg
push
loope
rcll
pop
add
dec
ficoml
push
add
mov
nop
movsl
dec
bound
mov
mov
xorl
ret
ret
out
inc
test
fsubp
push
idiv
addr16
adcb
lods
lahf
outsb
mulb
rol
pop
jb
sbb
inc
fdivrl
jae
leave
cld
jecxz
mov
sahf
xor
js
lock
fistpll
pextrw
push
mov
daa
ret
and
xor
jne
push
or
jmp
std
pop
outsl
es
xor
mov
insb
push
jno
lock
sahf
add
test
and
jp
or
push
sbb
pop
inc
xchg
jmp
test
sbb
adc
enter
cwtl
adc
cmp
mov
vsqrtpd
std
rorb
aaa
dec
push
add
cmpsb
push
out
data16
push
add
dec
sbb
cmp
add
movsb
jmp
outsl
fnsave
pop
out
ds
mov
call
or
cmp
jae
push
clc
fsubl
mov
fsubrl
out
cmc
fwait
fs
dec
pop
mov
shl
fnsave
in
adc
loopne
es
and
sbb
jb
xchg
les
sub
inc
out
lcall
les
jecxz
cwtl
cwtl
dec
inc
inc
adc
xchg
lret
adc
jge
das
cmp
pop
xor
jecxz
loope
lods
fwait
pop
xor
adc
inc
rolb
adc
ret
flds
mov
push
sub
scas
pop
mov
xchg
push
sub
sub
je
or
je
pushf
popa
sbb
inc
ret
into
xchg
stc
inc
sbb
je
popf
test
lcall
xlat
or
dec
faddl
fwait
cltd
jne
out
jecxz
std
ret
scas
mov
mov
pop
jmp
cmp
xchg
test
xchg
jmp
test
into
jg
push
mov
mov
sbb
in
das
mov
push
dec
or
jbe
sub
add
sub
adc
push
dec
push
adc
cmc
dec
xor
jno
incb
pushf
dec
jge
mov
pusha
ja,pn
mov
rcrb
mov
aas
shlb
fsubrs
std
roll
mov
nop
sarb
ja
pusha
ret
adc
out
popa
mov
mov
hlt
or
fsubrs
xchg
jae
sub
in
push
sbb
cli
outsb
por
or
and
sub
sbbl
int
popa
push
ljmp
jbe
jo
mov
fildll
pop
sbb
jae
sbb
lock
and
xchg
xlat
fimull
jp
daa
rol
test
fsubs
push
arpl
jecxz
jns
push
cmp
pop
push
dec
dec
mov
and
jmp
roll
mov
push
test
int
push
push
dec
push
pop
xor
dec
mov
pop
mov
ss
push
rcll
sti
ret
pop
xor
xor
sub
xchg
bound
sarb
push
push
cmp
ret
outsb
ret
fstpl
xchg
inc
movsb
test
mov
lcall
sbb
js
out
add
movsb
mov
push
push
leave
mov
sbb
lock
jae
mov
push
icebp
add
xchg
cmp
outsl
iret
xor
jno
movsl
pop
or
sti
nop
cmc
lret
hlt
bound
js
push
repnz
jns
loop
aad
adc
int
adc
dec
pop
cmp
jno
pop
adc
repz
jb
adcl
sub
push
gs
xchg
pop
cmpsl
mov
sub
lods
or
adc
frstor
xorl
pcmpgtw
xchg
mov
cmpl
out
arpl
and
nop
inc
xchg
cmp
gs
cmc
add
or
int3
and
jb
rol
add
popf
xor
ret
aaa
icebp
hlt
push
pop
dec
outsb
in
shl
mov
ret
xor
stos
dec
repnz
dec
jno
cmp
pusha
repnz
xchg
cmp
pop
jno
loop
sub
and
rcrb
sub
mov
jb
and
lahf
inc
inc
xchg
pop
scas
jbe
inc
hlt
dec
pop
int
or
mov
cmp
pushf
mov
addr16
xor
fstpl
fidivrs
or
mov
mov
pop
nop
and
loopne
sbb
xchg
popa
push
xor
pop
ror
push
ljmp
add
ljmp
mov
loope
sub
xor
cmpb
inc
xchg
test
ja
cmp
sbb
les
std
das
mov
pushf
hlt
jne
mov
jnp
inc
adc
in
sbb
mov
test
dec
cmp
test
stos
cmc
jns
lea
sahf
shll
mov
inc
outsb
push
cmc
test
jle
mov
popa
out
rcl
mov
jg
cmp
mov
xchg
push
adc
scas
outsb
xor
inc
insb
add
fimuls
jno
mov
mov
cmp
les
pop
icebp
das
stc
xchg
push
add
mov
mov
mov
mov
fdivs
sahf
out
ret
sbb
xor
push
pop
cmp
popf
inc
pop
dec
in
push
int
pop
sbb
mov
adcl
xor
testb
lret
and
and
gs
cli
shll
pop
cmc
mov
push
in
push
push
mov
mov
ljmp
add
mov
pop
adc
imul
hlt
rep
push
xchg
nop
push
mov
mov
xor
fldt
cmpsl
outsl
jne
mov
push
repz
and
jae
dec
cld
sub
add
sbb
aad
bound
xor
addb
clc
dec
jbe
sti
stc
mov
repnz
or
or
add
pop
popf
nop
cld
sbb
les
daa
cwtl
pop
iret
outsb
int3
rcrl
cmp
ljmp
stos
or
mov
jo
inc
insb
push
pop
adc
jne
les
and
sarl
jbe
add
iret
xorl
mov
or
les
in
dec
pop
enter
fwait
add
push
fxch
sub
cmpsl
fdivl
xor
or
xor
sbb
xor
or
xchg
loopne
icebp
negl
sarb
outsl
cwtl
test
pop
je
test
cwtl
lods
mov
cltd
dec
cmpsl
cmp
stos
outsb
mov
test
sbb
jecxz
sub
dec
insl
cld
add
or
aaa
sahf
cmpsl
jo
lret
cmp
out
addr16
scas
mov
test
cs
pop
test
xor
inc
sub
mov
sub
leave
mov
mov
sbb
outsb
mov
xchg
clc
fwait
ljmp
xchg
repnz
push
mov
nop
pop
xchg
jno
mov
das
or
sub
add
lahf
push
mov
cltd
adc
and
test
mov
loope
aaa
push
sbb
ss
lahf
sahf
mov
addr16
push
jecxz
jl
test
inc
imul
cmp
or
sub
hlt
addb
xorl
xchg
cmp
xchg
jp
xchg
mov
aad
sbb
scas
icebp
mov
fmull
add
push
mov
popf
jge
lcall
mov
out
or
jecxz
push
mov
cmp
jp
outsb
add
out
call
sub
push
imul
lcall
lret
stos
cmp
and
xor
push
push
jns
ret
inc
outsb
adc
rclb
loop
dec
inc
frstor
sti
fcmovu
jbe
ss
adc
push
and
mov
jne
push
clc
xchg
add
sbb
stc
out
out
rcll
add
pop
jns
and
stos
test
hlt
xchg
std
add
les
roll
movsl
lods
aad
mov
jp
xchg
loop
aad
pop
mov
cltd
fwait
adcl
inc
insl
push
rcrb
fldt
stc
jb
ja
add
jns
and
xchg
jne
mov
movsl
leave
xchg
mov
xor
mov
sbb
adc
dec
inc
enter
push
icebp
cmp
jns
lods
mov
scas
fstpl
jae
mov
xchg
mov
inc
jle
data16
out
mov
je
and
sbb
add
idiv
outsl
mov
push
push
sub
notl
xor
ret
in
std
push
aam
inc
dec
sbb
mov
cmpsl
dec
xchg
icebp
imul
add
addb
loop
hlt
add
std
push
cmp
adc
int3
xchg
mov
insl
pop
clc
dec
fwait
popf
or
je
loop
loop
arpl
xchg
test
and
mov
lea
cli
ljmp
shld
add
sub
icebp
stos
outsb
inc
mov
dec
andb
pop
sub
jnp
call
or
bnd
ficomps
rcrb
adc
adc
xor
mov
adc
mov
and
fnstsw
out
jns
cmp
cmp
out
pop
flds
ret
adc
fcmovne
stc
insl
xchg
fbstp
movsl
out
mov
lock
mov
ja
jo
shll
dec
scas
js
mov
xchg
xor
mov
mov
push
iret
jge
dec
push
out
mov
imul
sub
pop
filds
or
inc
jle
imul
inc
cwtl
sub
jno
xchg
mov
pop
sbb
pop
cmp
mov
mov
jno
cltd
pop
and
addb
int
scas
jle
movsl
ljmp
adc
pushl
fwait
rcrl
push
push
mov
arpl
xchg
sbb
mov
mov
loope
xor
inc
shlb
adc
or
xchg
mov
xchg
mov
inc
add
push
int3
cmp
shrb
push
push
pop
xor
fcmovnb
mov
dec
jbe
push
movsb
mov
cmp
adcb
loop
mov
mov
pop
inc
push
test
xlat
mov
cmc
popf
and
jl
in
sub
xchg
jbe
ret
icebp
fld
fimull
loop
cmc
add
add
lds
fs
mov
dec
mov
push
mov
mov
jmp
mov
les
shlb
push
leavew
rorl
leave
in
in
add
arpl
sti
fimull
leave
mov
ficompl
mov
or
dec
daa
jmp
cmc
adc
jp
fnstenv
movsl
mov
leave
nop
negl
imul
repz
repnz
push
daa
push
push
lret
popa
stos
inc
mov
mov
xchg
lods
sbb
add
or
mov
aad
test
sub
aam
hlt
cltd
mov
scas
repnz
ret
jne
sti
fs
stc
pushf
int
or
shl
fwait
icebp
lods
push
lods
mov
mov
cmp
pop
data16
pop
insl
dec
mov
jb
xchg
in
test
jg
lock
mov
cmpsb
cmc
jl
add
sbb
loopne
jae
pop
cmp
push
or
outsl
cmp
and
cmp
or
adc
int
movsb
jo
andb
icebp
pop
imul
jo
nop
mov
insb
ret
fisubl
in
add
push
dec
scas
arpl
jno
mov
xchg
pushf
push
inc
and
or
jecxz
sub
mov
divb
pop
in
mov
and
cmpsb
mov
call
fcom
ffreep
mov
cmpsl
xorb
test
xchg
sbb
fadd
cmpsl
daa
in
mov
das
sbb
dec
sub
add
sbb
fsubrl
cmc
mov
je
pop
fbstp
sub
add
push
addr16
cmp
and
inc
mov
movsl
hlt
xlat
dec
cltd
int
sahf
pop
xchg
cwtl
push
cmp
jmp
jmp
or
cli
add
sbb
in
lock
add
gs
or
add
jge
addr16
xor
sub
mov
jmp
pop
sub
or
jp
lds
push
mov
stos
pop
pop
or
movsb
xchg
in
jns
stc
mov
fsubl
cltd
hlt
pop
pop
nop
jmp
sub
aaa
sub
paddb
jb
add
imul
xlat
pop
mov
or
in
test
pop
push
sbb
mov
in
lahf
and
cmp
jl
jecxz
in
std
add
testl
loopne
and
test
loopnew
adc
cli
cmp
int
mov
mov
lret
pusha
mov
dec
sub
loop
mov
lds
repnz
dec
jns
xor
cmp
xor
js
pushf
jmp
add
sar
addl
or
shll
lar
mov
sarl
movsl
mov
bound
jmp
pushf
pop
push
cld
xor
cltd
movsb
xlat
fwait
mov
cmp
xlat
rolb
jecxz
movsl
dec
cmp
xchg
mov
aad
mov
sahf
xor
lock
jg
ja
into
je
ret
mov
inc
ss
or
pop
jle
cmpsl
in
xchg
out
push
icebp
test
mov
cmp
movsl
fnstsw
pop
ljmp
mov
or
cmp
ds
adc
insl
pop
or
adc
aad
pop
fistl
es
lret
ja
jmp
jb
xor
sbb
loope
dec
imul
jbe
icebp
faddp
sbb
repz
hlt
sti
lahf
push
lahf
inc
xchg
mov
lods
mov
add
pop
sbb
sub
loopne
add
mov
in
cmp
out
fldt
xor
shlb
inc
ja
cmc
cmc
xchg
rorl
addr16
mov
jno,pt
add
xchg
sub
es
testb
push
pop
and
fnstcw
xor
mov
adc
rcll
push
sbb
xchg
or
mov
xor
ja
and
add
cmpsb
je
std
pop
mov
mov
jmp
cmc
dec
inc
sub
imul
negb
or
jae
hlt
mov
loope
dec
inc
dec
lods
orl
fnstenv
scas
movb
into
or
lret
xchg
pop
or
sub
test
frstor
mov
shl
addl
sub
pop
and
xlat
les
js
xchg
dec
test
lds
push
sarb
ficoms
mov
loopne
cmpsl
aad
insl
int3
lods
xor
pop
sub
data16
lock
xchg
xchg
lds
fs
jle
dec
andl
xchg
cli
push
sub
mov
or
lahf
cmpb
add
xor
sub
and
ret
cmp
cld
icebp
or
push
sbb
std
xor
push
xchg
add
repnz
push
sub
xor
inc
sbb
push
clc
dec
fsqrt
xor
or
leave
dec
jne
jmp
cmp
fidivrs
js
sbb
inc
rorl
dec
cmp
push
and
cwtl
xor
imul
add
xchg
sbb
jnp
lods
sub
jb
inc
or
jge
jp
sbb
in
cmpsl
lds
jmp
rcll
incl
fwait
mov
push
pop
imul
scas
jg
mov
pop
mov
add
inc
pusha
pop
xlat
mov
lret
fistpll
sti
bound
and
ja
mov
push
sti
cld
lret
xor
addr16
in
pusha
fisubrs
mov
sti
inc
push
stos
adc
cld
push
jl
mov
pushf
adc
xor
scas
pusha
mov
repnz
addb
inc
mov
xchg
aaa
sarb
lcall
and
push
lahf
push
or
push
outsb
cli
mov
scas
fsubp
mov
mov
adc
inc
fistpl
popl
mov
inc
movsl
or
add
mov
mov
es
in
push
add
push
fistpll
inc
xchg
and
neg
pop
sti
push
xchg
push
adc
enter
sti
stc
call
ss
stc
fisttps
inc
mov
popf
sbb
in
in
gs
mov
adc
mov
andb
and
and
jae
pop
in
mov
xchg
cmp
fmuls
pop
cld
or
mov
push
or
test
sub
push
dec
inc
xor
mov
jp
inc
dec
sub
mov
sub
jmp
or
lret
loope
sbb
ja
pop
cmp
test
mov
lret
and
dec
add
sbb
sbb
hlt
fsub
jbe
ret
sub
pop
pop
stc
sbb
push
add
loopne
pusha
jmp
push
sub
xor
bound
into
lock
jno
adc
mov
add
cmp
push
push
mov
bswap
cmp
push
int
dec
cmc
mov
or
stc
adc
jae
push
push
ja
push
xchg
adc
lea
xchg
call
xchg
sahf
inc
mov
sahf
or
push
add
adc
and
mov
dec
push
imul
testb
rol
lcall
rcll
int
pop
pop
ja
cmp
add
dec
loop
fisttpll
call
divb
sbb
jg
int
gs
subb
out
stc
push
pop
je
lock
pushf
out
push
rolb
xchg
push
jns
aam
push
or
xchg
dec
dec
loope
mov
sahf
test
aam
or
inc
cmp
sub
add
push
push
inc
fadd
aad
je
insl
jnp
adc
cmp
sarb
lods
or
dec
rcr
sbb
imul
ja
leave
mov
mov
add
mov
cltd
inc
fnstcw
sub
adc
data16
std
and
cmpsb
gs
out
xchg
xchg
pushf
lea
sub
mov
jecxz
jecxz
push
xchg
loop
mov
loop
lods
jg
out
inc
iret
lahf
ficompl
aam
jo
mov
inc
cmp
mov
js
rolb
pop
les
or
sub
mov
pop
pop
xor
js
push
lock
into
out
cs
daa
sbb
lea
mov
andb
sbb
mov
jns
cmp
mov
pop
imul
pop
inc
outsb
fnsetpm(287
daa
fisubrs
add
adc
mov
les
stos
xlat
fucom
negb
mov
movl
mov
fs
fisttpll
cmc
lahf
push
lea
stos
mov
inc
adc
pop
sti
sbb
test
jg
push
subl
cli
lock
shl
and
call
jno
lret
sbb
add
call
clc
push
mov
cmp
les
push
jecxz
adc
or
int3
or
shll
mov
jg
dec
jle
push
inc
mov
adc
xchg
ss
rolb
lret
sbb
jp
aaa
cltd
jne
mov
sahf
fldenv
add
pop
push
xor
and
fs
mov
jbe
jmp
aad
lods
inc
push
pop
not
iret
icebp
pop
fxam
fcomi
adc
add
pop
sub
fwait
nop
ja
mov
dec
push
mov
mov
vminsd
dec
ret
jl
jmp
xchg
mov
mulb
mov
out
loop
xchg
mov
mov
pop
in
in
mov
fadds
loop
jno
pop
or
inc
mov
sbb
movb
ret
mov
mov
mov
add
sbb
enter
pop
outsl
dec
rorl
sbb
mov
lds
bound
and
mov
fimuls
push
push
dec
mov
mov
cmp
insb
repz
inc
jecxz
in
test
push
int
enter
into
pop
add
inc
push
or
sbb
jno
in
push
jl
xchg
fsubrl
fnstenv
cmpsb
push
rolb
cmc
cmp
pop
add
cwtl
xor
lea
ss
rclb
mov
push
loop
enter
into
inc
lret
xchg
mov
insl
push
iret
add
movsb
sub
adc
inc
cwtl
push
iret
std
movsb
sub
lds
in
dec
jb
ss
or
iret
mov
outsb
xchg
lds
sbb
jge
sbb
inc
pop
inc
data16
popa
test
out
xchg
inc
push
mov
cld
lcall
scas
xor
mov
rorb
sbb
ret
int
jne
lods
mov
pushl
jmp
lods
adc
mov
lods
pop
mov
repnz
fimull
push
fimuls
push
push
shl
and
out
lret
or
mov
push
jb
jmp
dec
adc
inc
dec
push
fwait
mov
xor
adc
js
lret
add
or
pop
xor
xchg
rorl
orl
mov
cli
and
add
pusha
xchg
loopne
test
jo
fidivrs
sbb
imul
ret
es
stos
mov
inc
add
pop
lea
pop
sbb
pop
jge
and
hlt
ret
js
jnp
out
dec
jle
imul
sbb
adc
stos
in
jbe
and
push
call
lea
add
jns
inc
push
dec
data16
mov
stos
ja
cmp
pop
in
rorb
lret
outsl
sbb
jp
mov
popa
rclb
fisubs
fstpl
xchg
inc
iret
movsl
and
mov
dec
cltd
or
cwtl
jae
test
mov
out
push
lods
ljmp
add
idivl
cmp
push
scas
outsb
inc
gs
shlb
and
and
mov
adc
fsubs
and
nop
subl
shlb
cltd
movsb
push
shll
and
mul
mov
xchg
ja
push
sub
mov
or
xchg
inc
sub
xor
xor
cmc
sahf
out
mov
es
inc
ret
or
and
cmp
sub
or
sahf
xchg
add
test
push
add
mov
pushf
inc
cmpsb
push
mov
aad
dec
add
pop
adc
dec
xchg
and
xor
daa
pop
xchg
push
mov
fistps
shll
ljmp
jp
out
aad
xchg
mov
std
gs
test
push
cs
inc
int3
jae
dec
test
sub
test
sti
pop
ret
mov
cmp
xchg
jl
arpl
pop
addr16
das
mov
movsl
ret
and
inc
fucomp
dec
sub
pop
xor
add
push
cld
cmp
cltd
add
push
in
js
mov
jbe
sahf
inc
add
xchg
or
dec
pop
int3
jmp
sub
js
fiaddl
mov
jns
shl
mov
add
les
add
or
mov
sub
sub
jns
dec
aas
mov
push
pop
add
inc
jnp
cs
int
sbb
mov
scas
mov
fldt
mov
outsb
data16
push
mov
js
in
ss
jo
add
loope
mov
push
icebp
mov
shll
outsb
cmp
push
ss
xor
sahf
push
es
shll
sbb
push
sti
and
or
mov
push
jecxz
int3
das
push
aam
mov
jne
push
daa
mov
xlat
cltd
fidivs
pop
xchg
mov
insb
push
cmpl
shl
xchg
fisubl
pop
mov
scas
mov
push
int3
cmp
iret
xchg
dec
test
jmp
jle
scas
push
add
xor
and
inc
push
sahf
outsl
daa
dec
popa
andl
cmp
inc
in
orl
cmp
arpl
stos
xor
movsb
jb
or
sti
sbbb
je
cli
cmc
daa
adc
cld
insl
adc
mov
dec
vmaxsd
and
pop
sub
push
leave
add
xchg
out
movsl
in
je
xchg
pop
out
pop
push
in
scas
lea
mov
mov
mov
outsl
xor
scas
sarl
pop
ja
pop
mov
mov
or
fstp
jne
rorb
sub
cmp
insl
out
fisubs
int
sub
jecxz
or
mov
popf
mov
mov
push
pop
daa
push
movsb
inc
dec
shr
push
and
push
mov
mov
mov
rolb
dec
pop
imul
sti
dec
sahf
cmp
and
aam
lds
mov
lods
daa
jns
das
and
cld
ja
jo
js
mov
sahf
add
pop
jne
add
pushf
adc
test
lds
mov
xchg
cli
arpl
add
push
jecxz
mov
xchg
xor
or
int3
test
xchg
bound
sbbl
push
xlat
test
sbb
clc
jnp
popa
iret
dec
ja
std
je
sbb
add
shlb
icebp
xchg
adc
jno
adc
call
mov
inc
jl
mov
aaa
xchg
cmp
mov
js
lret
fldlg2
jecxz
push
sub
test
mov
xchg
and
ja
lods
and
repz
call
mov
fdiv
ss
loope
les
sarb
and
cli
insl
mov
ret
add
in
add
into
dec
mov
mov
das
jmp
mov
or
sub
sub
fdivr
sbb
insl
push
scas
push
nop
lret
ret
pusha
sbb
outsl
fs
popa
popf
jge
push
mov
outsb
bound
push
xor
jle
jae
stc
imul
add
pop
jge
jb
xchg
add
mov
aam
cs
or
js
dec
and
jbe
xor
and
mov
popf
sub
std
jo
daa
mov
test
sbb
push
and
pop
lret
inc
test
scas
sbb
mov
pop
lods
aad
aaa
and
nop
push
jg
xor
push
mov
inc
icebp
push
mov
and
jmp
mov
imul
shrl
les
xchg
mov
sbb
ret
lcall
inc
mov
in
aam
mov
cmp
fldl2t
sub
jb
dec
ja
mov
cmp
add
out
stos
icebp
or
mov
jmp
es
aam
shll
dec
stc
mov
fmuls
sub
jl
test
loope
push
pop
mov
mov
dec
sbb
push
cwtl
dec
mov
xchg
push
jp
sub
add
mov
cmc
or
xchg
pop
sub
jmp
or
jge
inc
pop
xchg
push
mulb
jmp
jno
or
aas
stos
lcall
es
rorb
dec
sub
mov
dec
pop
shll
jmp
insb
movsb
lret
in
cmp
xchg
popa
mov
out
pusha
pinsrw
push
jp
cmp
scas
pop
mov
les
test
mov
stos
inc
test
movsl
cmp
cmp
cmpsb
aas
pop
ds
sub
pop
ljmp
xchg
lahf
jb
test
sub
movsb
mov
fisubrs
push
mov
bound
mov
cld
mov
sub
dec
xor
out
insb
or
int
lods
xor
jle
addr16
insb
call
or
add
add
mov
fwait
inc
and
mov
xchg
in
pop
adc
in
js
pop
add
cmp
adc
lcall
loop
jo
addr16
xchg
lods
stos
and
movsb
fcoml
pop
imul
stc
imul
or
outsb
add
rorl
fisttpll
lret
movzbl
bound
mov
sub
adc
scas
ja
outsl
jecxz
lret
push
adc
fidivrs
dec
ss
outsb
push
pop
lret
xchg
shlb
jb
dec
or
data16
outsb
adc
cmp
jle
inc
adc
shrl
pop
js
adc
mov
inc
daa
mov
mov
cmpsb
pop
sbb
ljmp
jp
cmpsl
cmp
stos
adc
fmul
cmp
clc
and
jb
mov
xchg
mov
in
cli
setg
ja
test
imul
stos
cwtl
lods
cmp
mov
out
mov
xchg
adc
lcall
cmp
clc
int3
add
mov
daa
pop
jnp
sahf
int3
inc
sub
and
mov
inc
inc
dec
repz
sar
imul
pop
jae
into
jp
xor
ss
jnp
popf
sub
lret
inc
cmc
sbb
or
ret
fildll
inc
ficoml
xchg
xchg
or
add
and
lods
rcll
mov
adc
mov
push
adc
aam
xchg
jne
push
pop
dec
outsb
mov
add
jns
xchg
insl
int
cmp
inc
inc
xchg
cmp
jp
bound
adc
cmp
sbb
jmp
roll
and
fidivs
int
pop
insl
shl
xchg
testl
mov
dec
xlat
lock
lret
in
mov
loop
and
mov
iret
mov
out
pop
fstpl
dec
mov
mov
pop
push
mov
add
inc
add
sti
jmp
sub
addr16
add
stc
and
lods
in
sbb
push
cli
sti
mov
adc
dec
dec
mov
cltd
pop
mov
sti
popa
push
aaa
xor
mov
aaa
mov
and
rcll
movsb
mov
pop
mov
push
test
sbb
pop
sbb
xorl
mov
insb
jne
and
jmp
and
pop
int
pusha
loop
jp
arpl
pushf
adc
mov
jl
mov
std
lahf
push
cwtl
cwtl
mov
add
fcompl
es
add
out
xchg
insb
je
sbbb
cltd
jg
aad
mov
stc
js
push
jb
mov
ja,pn
loop
es
xor
mov
jmp
jns
mov
mov
pop
and
dec
mov
cs
xchg
cmp
sbbl
lea
or
adc
xchg
jle
xor
pop
mov
insl
fimull
inc
jae
icebp
jle
cld
jle
add
das
sbb
jecxz
mov
out
fidivrl
scas
scas
sub
add
push
xchg
sub
push
popa
nop
adc
sbb
lahf
inc
pop
cmpsl
cmp
push
pop
rcrl
test
call
or
push
xchg
xor
sbbb
movsb
arpl
clc
mull
inc
inc
jmp
dec
jmp
sar
pop
lds
dec
inc
lods
flds
loop
dec
jmp
fimull
dec
xchg
out
fs
cmpsb
inc
jg
scas
mov
into
mov
rorl
xor
imul
ret
and
rorb
outsl
lods
mov
in
pusha
outsl
jle
jne
and
jmp
or
jmp
test
push
pop
lds
push
cmp
jle
xor
scas
lcall
mov
rorb
shll
push
push
aaa
xor
jmp
cmp
dec
lcall
daa
lret
adc
jb
mov
or
int
int3
cmp
jmp
imul
fcmovnbe
call
rolb
inc
in
sub
sub
push
iret
mov
push
icebp
out
sbb
xchg
push
rorb
inc
loopne
es
in
adc
inc
sub
data16
dec
mov
jge
cwtl
push
sub
arpl
daa
jmp
mov
or
cmpsl
pop
imul
xchg
dec
in
fmuls
sbb
adc
popf
lods
xchg
xchg
push
and
lea
push
xchg
sbb
sbb
xchg
push
test
in
popa
aad
pushf
mov
stos
int
lods
pop
lock
sti
sbb
jecxz
adc
ds
in
sar
jp
inc
xor
cwtl
pop
mov
daa
subl
xor
sahf
ljmp
leave
lahf
add
sub
fwait
fs
inc
fs
lock
xorb
imul
push
mov
leave
ret
mov
decl
aaa
xor
add
clc
mov
insl
adc
in
jp
movsb
xchg
xchg
in
pop
adc
mov
sbb
ficoml
cli
out
daa
scas
inc
add
mov
fwait
dec
jns
bound
addr16
jns
sarl
scas
adc
stos
insb
cmp
xchg
jle
pop
pop
mov
daa
imul
call
mov
pop
fistps
insb
insb
scas
test
dec
pop
or
movsb
xchg
fldl
mov
aam
push
adc
or
popa
lret
loopne
test
mov
loopne
cmp
js
or
movb
unpckhps
ljmp
mov
cltd
stos
xchg
or
loop
pop
outsl
rcrb
mov
sahf
daa
mov
push
sub
jle
enter
mov
mov
mov
lahf
in
jge
fstl
addr16
les
xor
loop
fdivrl
add
mov
adc
mov
mov
jns
je
mov
mov
notl
push
add
lcall
out
cld
and
mov
push
or
sbb
xchg
ret
stc
ficoml
insl
rcrl
push
scas
bound
movsb
out
and
xor
mov
pop
gs
jno
repz
leave
imul
dec
in
test
inc
adc
mov
jmp
inc
inc
mov
push
into
lcall
or
mov
jnp
sbb
scas
int3
adc
dec
stos
or
bound
test
mov
adc
pop
dec
xor
adc
fwait
sub
adcb
xchg
inc
stc
adc
add
cmpsl
xchg
pop
jge
filds
inc
ljmp
aaa
mov
jp
xchg
pop
adc
mov
fnstcw
cmpsb
cmpsb
pop
push
inc
outsb
jmp
mov
dec
mov
pop
cmp
fsubrs
test
orl
sbb
inc
adc
popa
data16
into
adc
jmp
loop
mov
in
enter
dec
sahf
fidivrl
adc
mov
xlat
xchg
cli
push
cwtl
push
movsb
jbe
cmp
jo
lcall
mov
daa
mov
and
aas
inc
pushf
pop
out
enter
ficomps
das
pop
nop
sahf
cmp
loope
shrb
filds
aaa
and
aas
add
pop
je
dec
cwtl
push
jae
and
xor
push
mov
daa
xor
dec
or
lea
push
xor
cmp
xchg
lret
jne
push
rcrb
adc
or
xchg
andb
xchg
cli
lret
jb
mov
xlat
cmp
sub
adc
sbb
push
dec
lcall
xchg
adc
repnz
int
xchg
ljmp
mov
cmp
adc
adc
jb
xlat
sbbl
lret
int
daa
into
dec
pop
int3
imul
js
xor
cltd
jecxz
sub
or
rcrl
push
cs
jnp
loop
jl
test
lods
roll
imul
int3
aas
push
fnstsw
lods
rcl
nop
jnp
ret
add
push
xchg
data16
inc
in
mov
out
adc
dec
fstps
inc
add
out
xor
rolb
mov
mov
xor
arpl
insb
cmp
adc
fistpl
fdivs
ljmp
cmpsb
jecxz
push
lds
cmp
outsl
call
icebp
sti
cmp
xor
loop
push
int3
push
mov
sub
sbb
sub
jle
rorb
push
cmp
sbb
xorb
sbb
enter
icebp
jmp
aad
out
rcrl
int
stos
dec
mov
inc
nop
adc
mov
or
test
push
je,pn
aam
movb
lea
and
jp
bound
sub
xchg
pusha
cli
push
addl
mov
aas
test
popa
dec
or
push
addr16
mov
flds
arpl
jp
das
adc
call
sub
xchg
push
insb
out
test
test
mov
out
jbe
jo
add
das
jmp
xor
sub
jl
vmovntps
inc
icebp
sub
mov
fdecstp
sbbb
xor
int
cmpsl
sub
fadds
fimull
mov
fwait
js
ret
pop
in
shlb
fs
clc
mov
adc
jl
rol
jae
pop
out
outsl
divl
adc
das
mov
outsb
into
xchg
movl
push
xchg
aaa
add
daa
dec
sahf
outsl
lea
icebp
push
mov
mov
xchg
int
mov
fistpl
and
push
lcall
not
and
hlt
xlat
rorb
fwait
sarl
push
icebp
dec
ljmp
pop
pop
sbb
loop
clc
shr
jl
insl
pop
es
int
dec
insb
jl
or
mov
push
in
inc
cmpsb
xor
sbb
adc
mov
mov
pop
pminub
arpl
aaa
mov
hlt
mov
pusha
sub
ret
push
mov
or
aas
dec
repz
pop
and
mov
fwait
ror
xor
mov
mov
pop
rcll
outsb
int
int3
rclb
test
dec
inc
or
mov
jnp
mov
mov
or
inc
push
loopne
add
dec
frstpm(287
mov
sub
xor
aad
fld
cmp
es
add
jg
rolb
popf
leave
mov
and
mov
pop
mov
jb
cs
jae
out
inc
xchg
pop
xor
jns
and
lods
push
mov
mov
inc
inc
imul
jb
pop
xchg
es
enter
seta
mov
fnstcw
mov
pop
punpckhdq
xor
in
adc
test
push
xchg
xor
sahf
out
mov
sub
cmp
aas
shl
sbb
mov
push
mov
inc
out
sub
mov
mov
fwait
mov
hlt
or
push
fdivs
add
xlat
push
ja
inc
test
lcall
push
xchg
xor
pop
cltd
cmp
testl
stos
das
imul
sub
arpl
movsb
jmp
add
cli
fs
lds
xor
push
lock
lods
jns
adc
cwtl
arpl
aam
dec
cmp
inc
rcll
aas
mov
shrb
sub
sub
xor
sbb
sahf
push
outsb
jecxz
pop
fisttps
les
push
lahf
adc
jbe
pop
push
add
push
sub
lret
dec
shll
in
imul
push
insl
sbb
adc
cmp
sub
movsb
hlt
shll
sbb
cmp
and
cltd
jp
mov
in
inc
stos
das
lods
pop
pop
mov
fxam
mov
cwtl
js
popa
bound
fsubrs
shlb
hlt
cmpsb
sub
dec
arpl
sbb
jecxz
fsubr
hlt
pushf
adc
pop
mov
iret
xor
xor
and
push
or
adc
push
outsb
movsl
pop
sub
mov
fisubs
cmpsl
test
imul
add
inc
cmc
pop
in
add
push
lds
push
mov
cli
repz
sbb
out
pop
les
adc
push
and
rol
stos
xchg
or
call
jne
push
xchg
cwtl
es
pop
xor
sbb
jp
cwtl
popa
mov
adc
mull
add
in
out
outsl
jb
jne
mov
in
sbb
jbe
cmpsb
inc
mov
fistpl
sti
sti
gs
dec
test
gs
pop
imull
mov
sti
sub
test
sti
rorb
add
xor
ror
adc
lods
out
fcomp
push
add
sbbl
adc
std
movsl
cmpsl
mov
pop
or
insl
mov
or
push
and
aad
jae
adc
jnp
mov
xor
xchg
and
shlb
sub
push
stos
fdivrl
add
jns
int3
mov
test
add
lret
pop
sbb
shll
adc
jbe
mov
mov
jns
sti
and
sub
sbb
cwtl
shrb
in
mov
and
jb
dec
in
mov
xlat
std
xchg
dec
jl
or
and
ja
cmp
icebp
insl
xor
sarb
push
fwait
sbb
pop
mov
out
lock
imulb
inc
mov
and
pop
push
xchg
push
xchg
push
sub
int3
clc
inc
jo
out
loopne
cmp
push
cmp
dec
xchg
jns
inc
xchg
stos
lret
mov
sub
and
mov
inc
adc
lock
aas
or
sub
add
out
in
dec
jb
xchg
enter
adc
lock
cmpsb
or
jmp
xchg
mov
adc
popa
and
adc
dec
lock
mov
imul
je
and
or
stos
sbb
mov
jnp
cmpl
or
adc
jge
adc
mov
push
imul
cwtl
in
xchg
scas
aas
test
inc
sbb
sbb
imul
cmp
daa
aad
xchg
inc
push
or
pop
push
repz
pop
inc
lea
insb
xchg
loope
pusha
inc
dec
cmp
call
xchg
bound
mov
insl
inc
icebp
xlat
movsb
lea
leave
lret
enter
lcall
or
and
movsb
mov
xor
xchg
hlt
dec
adc
nop
stc
mov
rcl
sub
loopne
loop
cmp
andl
or
iret
dec
sbb
mov
push
add
mov
and
pop
cmpsl
lret
mov
ljmp
repz
sbb
mov
xor
sub
outsl
mov
adc
lods
in
call
sti
cmpsb
out
aad
adc
in
std
leave
or
mov
in
ljmp
xchg
xchg
ljmp
test
daa
fldcw
call
fnstsw
jnp
and
jne,pn
repz
pop
dec
and
inc
hlt
lds
jns
push
and
fs
push
call
mov
iret
jg
add
dec
cmpsb
and
adc
mov
jno
lret
rolb
pop
or
stc
jl
jae
ds
loop
daa
aaa
aam
shl
test
jb
mov
inc
mov
xchg
pusha
fwait
les
fwait
add
scas
bnd
ficomps
shlb
cmp
inc
rcl
xor
and
and
int
fadd
cmc
insl
mov
icebp
in
jle
aad
pop
inc
inc
jmp
sbb
ljmp
mov
xor
or
pop
js
in
repz
shll
inc
or
dec
loopne
stc
mov
iret
xchg
and
push
stc
jbe
sahf
mov
popf
gs
mov
adc
mov
sub
jne
dec
jecxz
mov
xor
or
cmp
movsl
fcmovbe
jle
pop
jbe
push
out
add
shlb
fwait
enter
cmp
mov
mov
lret
jecxz
test
dec
dec
sub
adc
push
ds
test
jb
xchg
test
xor
or
popa
test
fs
out
push
xlat
cmpsb
jg
xor
mov
lret
repnz
inc
sahf
and
movsb
or
std
push
adc
std
rcll
scas
lret
inc
pop
adc
push
shl
filds
jmp
mov
mov
inc
cmp
or
sub
mov
jbe
out
add
push
ja
cmpsb
sbb
add
std
cmc
arpl
or
cmp
lds
inc
stos
mov
push
adc
cltd
pop
aas
mov
pop
enter
ja
shl
aas
jmp
neg
popf
lea
in
sarl
jle
test
jmp
mov
lret
sbb
es
or
shl
mov
mov
push
ds
xor
sbb
mov
dec
inc
mov
jne
jmp
ss
sbb
ret
cli
fdivp
sub
xchg
mov
jnp
jno
ret
dec
out
test
je
out
stc
or
insl
jnp
popf
dec
std
iret
nop
in
fldenv
dec
mov
lret
xor
xchg
push
enter
sahf
add
inc
jnp
inc
adc
hlt
jne
adc
stos
cmp
cmc
pushf
in
jnp
pop
hlt
dec
or
cs
ja
mov
lods
mov
imul
std
inc
or
in
lods
sbb
mov
lock
pusha
or
inc
sti
aam
jle
xchg
mov
push
mov
ss
stc
out
cmp
inc
push
mov
vpsraw
outsl
ret
out
lahf
adc
xchg
outsb
xor
dec
mov
int
or
mov
lret
pop
sub
fucomi
push
dec
xor
pushf
fnstenv
sbb
pop
mov
inc
or
cmp
bound
data16
mov
jae
or
stos
dec
ret
scas
clc
or
pop
imul
in
mov
push
add
xor
sub
fs
push
lds
dec
out
mov
sub
pop
test
lret
jp
jo
test
jb
lods
dec
scas
inc
addr16
in
pop
in
scas
mov
jp
mov
nop
out
xlat
fldcw
out
or
lods
insb
cmpsl
lods
aad
fs
outsb
xor
shll
mov
ja
cmp
cmc
lods
xchg
push
xchg
testl
inc
dec
fcomi
hlt
cli
popf
out
or
adcl
mov
xchg
or
lret
pusha
es
or
and
leave
push
les
shll
loope
xchg
ret
pusha
sahf
test
leave
mov
push
adc
xor
loopne
add
out
cmp
maskmovq
testl
sbb
sub
mov
pop
lret
mov
jmp
aaa
mov
call
std
sub
cmp
and
push
in
fisttps
jge
js
test
dec
les
stc
rorl
xor
cltd
adc
stos
test
or
dec
xor
repz
sti
outsb
push
inc
and
xchg
push
dec
mov
loop
sub
lret
leave
push
imul
mov
xchg
push
cmp
and
icebp
adc
mov
popf
push
jne
movsb
jb
or
fcomip
nop
xchg
ret
aad
adc
in
mov
and
les
or
pop
out
adc
ret
mov
dec
mov
ret
jae
imul
fwait
or
ljmp
test
xor
lret
.byte
push
