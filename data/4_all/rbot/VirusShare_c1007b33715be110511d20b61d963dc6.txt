push
call
ret
ret
sti
clc
add
aaa
insl
es
icebp
push
xor
mov
cld
mov
mov
ds
mov
xchg
sbb
aaa
pushf
jecxz
adc
aaa
adc
aaa
pop
lret
aad
decb
nop
pop
cmp
mov
push
pop
dec
jnp
cmp
or
fcmovnbe
out
mov
push
inc
frstor
ljmp
addr16
stos
gs
add
adc
xchg
in
sub
adc
leave
ret
xchg
jns
cmpl
ret
pop
sub
cmp
jo
jg
push
insl
inc
test
fdivp
repz
mov
or
sub
and
inc
jne
inc
mov
stos
dec
sar
pop
sti
or
mov
xchg
jecxz
adc
push
and
in
mov
test
cmp
ret
inc
rclb
out
cmp
inc
lods
xchg
lods
sbb
xor
out
and
mov
push
loope
sub
sub
mov
movsl
psllw
into
fadds
movaps
loopne
leave
nop
cli
add
insl
test
pop
lret
inc
sub
mov
mov
movsb
insb
cmp
in
negl
add
jb
shll
dec
ds
lods
ljmp
or
imul
xor
and
fmuls
rcll
std
testb
rclb
stos
sub
in
xlat
xchg
sbb
xchg
stos
xchg
outsb
and
dec
into
in
or
insb
push
insl
sbb
dec
adc
sarb
dec
sub
push
mov
mov
xor
subb
pop
push
mov
or
or
cmp
and
shr
divb
pusha
xor
lock
mov
mov
movsl
pop
fists
es
and
andb
mov
adc
mov
popf
pop
insb
loope
and
jns
adc
push
bound
lods
call
in
xchg
aad
stc
inc
pop
or
push
std
or
dec
sub
sbb
jae
pop
clc
sub
das
jmp
cwtl
jb
push
add
shl
lret
inc
sub
mov
arpl
mov
inc
ret
lahf
inc
test
call
xor
scas
mov
pop
mov
js
sub
test
lahf
pushf
cmp
shlb
push
fwait
out
sbb
xlat
int
imul
xchg
dec
pop
shrb
sub
pop
decb
push
es
sbb
cld
mov
jo
push
mov
lret
loopne
cmp
fldl
orl
pop
pushf
cmc
pusha
lods
in
icebp
xchg
sti
test
or
inc
mov
fldt
or
test
lcall
out
dec
mov
xchg
and
int
jne
aas
outsl
or
ljmp
cli
hlt
mov
mov
fs
sbb
pop
dec
enter
mov
fnstcw
jb
xor
cmp
addr16
imul
sbb
xor
adc
les
mov
ja
inc
jp
aad
pop
mov
test
push
jg
out
out
sbb
ficompl
inc
hlt
or
inc
fistl
nop
push
xchg
jnp
jnp
stos
mov
orl
ret
fs
icebp
sub
popf
cltd
xlat
mov
xchg
ja
dec
int
stc
pushf
in
pop
mov
nop
imul
movsl
xchg
mov
cld
pop
pop
inc
decb
add
mov
mov
dec
push
push
push
cmp
xor
dec
sub
add
stc
repz
xchg
pop
cmp
xchg
shlb
push
or
nop
loope
repz
bound
into
push
sub
outsb
sub
mov
js
popf
push
dec
pop
daa
subb
gs
pop
test
jge
pop
mov
xchg
inc
add
or
lahf
push
jae
movsb
mov
add
mov
std
in
jle
pop
or
movsb
jl
subb
xorl
inc
inc
fdivr
out
shl
imul
pusha
sub
jle
or
push
adc
jmp
add
mov
ss
jl
mov
in
sbb
mov
fiadds
fstps
insb
cmp
pop
nop
pop
in
lods
loopne
outsb
mov
jle
fdivs
cli
stc
sub
cltd
jg
or
push
movsl
test
stc
lcall
aas
loope
jmp
dec
int
in
jle
pop
lcall
xchg
movsl
or
dec
repz
cmp
xchg
sbb
mov
js
xor
jnp
jg
xchg
xor
cmpsl
in
and
rcrb
daa
sub
jnp
insl
mov
add
sbb
xchg
lods
stc
xchg
mov
push
mov
xchg
pop
adc
xchg
shr
mov
fidivs
inc
mov
xor
xchg
inc
cli
push
mov
inc
xchg
jmp
sub
inc
imul
push
mov
push
cmpb
inc
push
scas
shl
fiadds
cmp
adc
dec
inc
inc
movsl
mov
pop
xor
jle
ss
icebp
sbb
dec
iret
jmp
das
mov
scas
leave
pop
mov
pop
rclb
mov
add
insl
push
ja
shl
leave
push
mov
pop
fildl
addl
mov
pop
loope
stc
adc
es
cmp
test
test
jns
pop
fs
inc
sub
adc
fwait
inc
mov
xchg
ljmp
daa
pusha
mov
insb
inc
je
jne
js
or
fidivrl
enter
pop
or
loope
test
les
sbb
out
inc
icebp
adc
push
push
or
jmp
jmp
jp
decb
mov
out
inc
enter
mov
pusha
add
mov
movsb
jb
or
inc
test
lahf
xor
and
faddp
stos
inc
push
xchg
mov
hlt
push
and
xor
add
fistpll
repnz
insb
xor
mov
fisubs
cmp
sbb
cmpl
das
daa
cwtl
push
cld
or
cmpsl
push
jge
lds
in
sub
xchg
daa
inc
stos
jg
lret
push
pop
dec
outsb
pop
mov
mov
jmp
mov
mov
lock
pop
mov
popa
dec
pop
add
mov
adc
sub
lret
mov
add
cmp
jmp
mov
mov
add
into
ds
and
push
addr16
xchg
repz
adc
and
jl
or
je
sbb
xor
pushf
push
mov
lods
push
repnz
pop
popf
imul
ss
or
mov
push
js
dec
xlat
cwtl
push
frstor
ret
stos
fiadds
pop
mov
mov
dec
mov
lea
lods
inc
pop
mov
jmp
dec
cli
jmp
mov
cmp
pop
sti
inc
fwait
cwtl
xor
fdivl
ret
push
sarl
mov
in
xchg
mov
shll
cwtl
add
jo
arpl
mov
push
adcb
xchg
cwtl
push
popa
jg
push
popf
jp
imul
and
xchg
mov
pop
add
xchg
daa
orb
lds
push
cmp
adcb
mov
outsl
movsb
jle
push
and
xchg
ror
fimull
scas
cltd
xchg
pop
aaa
imulb
aas
arpl
cmc
xchg
cld
insl
mov
add
or
and
imul
lret
push
sub
out
loope
pop
clc
xor
pop
test
ret
inc
push
imul
add
xchg
je
in
bound
mov
mov
xchg
imul
or
es
pop
push
aad
lea
dec
mov
popa
hlt
aaa
add
inc
cli
idiv
xchg
lea
or
dec
push
in
loope
mov
lret
inc
enter
adc
push
aaa
out
ss
sti
push
movb
pop
pop
lret
in
xor
xor
pop
repnz
movsb
roll
orl
popf
mov
mov
and
adc
mulb
xor
sub
or
ds
shr
jmp
out
sbb
fcmovnb
les
arpl
mov
cmp
fisubrs
ja
mov
mov
push
sahf
add
testl
repnz
fdivs
cmp
jecxz
test
js
mov
mov
mov
jl
pop
je
mov
mov
cmpsb
push
iret
shll
inc
push
pop
lahf
shlb
dec
dec
jb
negb
rcr
or
ficoml
push
add
and
pop
adc
sub
jnp
or
call
adc
sbb
fwait
lods
add
add
stos
pop
or
outsb
inc
jb
aaa
ss
mov
int
stos
daa
imul
push
clc
xchg
andl
inc
data16
ret
mov
aad
flds
sbb
addr16
in
scas
leave
lods
mov
sbb
jg
sahf
pop
push
outsl
aad
rol
mov
mov
or
xchg
pop
mov
ret
jl
xchg
cmp
lock
mov
push
scas
test
loopne
sbb
or
and
push
add
dec
cmpsl
or
stos
sbb
fld
enter
cwtl
popf
and
les
daa
scas
loope
rcrl
sub
and
mov
mov
dec
mov
aaa
movsb
pop
cmp
push
arpl
mov
xchg
popa
or
testl
in
lcall
sub
push
ret
clc
cmp
and
cmp
and
fnstsw
jns
test
dec
adc
fidivl
and
xor
scas
lds
dec
shl
in
dec
outsb
fbld
pop
lods
inc
in
hlt
cmp
addl
in
fcomps
int
fsubs
call
pusha
push
pop
sbb
mov
and
adc
test
test
lea
repz
scas
fiaddl
pop
cltd
push
fdiv
jge
jge
xor
dec
push
sti
push
adc
sti
pop
xor
shrl
jp
and
push
ret
sbb
insb
into
or
mov
movsl
xorb
icebp
adc
jnp
stos
fstpt
lock
shrl
xchg
push
iret
add
in
pop
pop
int3
roll
jb
xchg
jb
insb
push
cs
ret
push
cwtl
iret
jne
dec
jl
xchg
jno
mov
jecxz
aas
dec
fisubrl
push
cmp
clc
adc
sub
or
cmpsw
adc
hlt
fisttpl
jns
jge
int
dec
add
dec
repnz
aad
sub
add
mov
push
lcall
jp
cmpsb
int3
das
adc
es
mov
aam
jb
mov
xor
xchg
push
ljmp
dec
scas
add
xchg
sub
mov
cs
das
in
push
pop
mov
xor
jne
xchg
jnp
incb
popa
cmp
int3
jae
or
pusha
rcrb
lods
add
lock
push
mov
scas
addr16
sub
jmp
push
add
cmp
insl
dec
orb
add
maskmovq
xchg
push
lds
repnz
ljmp
mov
aaa
mov
jmp
adc
jle
xchg
rcr
ret
lds
jg
push
leave
dec
dec
jnp
cmpsb
sub
test
fisttpl
mov
es
mov
xchg
lods
push
movzwl
bound
sahf
adc
leave
lret
dec
cmp
inc
loopne
push
cmp
xchg
mov
xor
sub
sub
enter
ljmp
push
aaa
adc
adc
cmp
sub
xor
xchg
mov
mull
mov
sbb
in
pop
mov
or
lods
or
iret
cltd
push
insb
mov
mov
add
pop
or
jno
cmpsb
fsts
stc
xchg
pop
fistpll
pop
jbe
test
mov
add
inc
testb
lods
jb
popa
inc
push
mov
jmp
pop
or
dec
add
jl
add
scas
data16
test
into
filds
fsubl
or
lcall
inc
jl
dec
adcb
sub
movsb
inc
sub
push
xor
aaa
lods
shlb
cmp
shlb
addr16
adc
leave
cmc
and
inc
cmpl
cmpsb
imulb
push
out
jmp
stos
push
pop
adcl
leave
lcall
sbb
loope
ss
out
sbb
and
fdivr
ret
ljmp
in
cmp
subb
int
cld
pop
daa
lret
out
les
mov
insb
xchg
ror
push
inc
mov
aaa
jae
sbb
imul
pop
popa
ret
call
jg
mov
sbbl
cmc
lcall
and
int
cwtl
and
fstpl
adc
jmp
arpl
hlt
dec
sub
sbb
es
jmp
roll
xrelease
dec
adc
or
fmuls
enter
add
arpl
aaa
in
sti
mov
mov
mov
dec
mov
mov
pop
lcall
mov
inc
ret
sbbl
int
dec
out
dec
xor
lods
dec
sub
iret
push
adc
sahf
repz
adc
test
xor
push
jmp
pop
jne
cmp
addl
inc
pop
pop
mov
aad
aaa
adc
in
jecxz
xchg
in
inc
mov
jo
aad
push
pop
add
mov
cltd
or
xlat
in
bound
jp
push
enter
sbb
ficoml
aad
add
insl
push
jae
xor
mov
js
arpl
mov
xchg
popl
lret
cltd
loopne
xor
les
add
xchg
and
dec
call
xchg
jno
lcall
daa
les
punpckhbw
push
jmp
and
push
xchg
ret
in
add
mov
in
adc
dec
cmp
sbb
xchg
sti
adc
pop
adc
jae
push
sbb
jb
push
in
sbb
sahf
fwait
dec
sub
and
pusha
mov
loop
in
push
aad
add
mov
fists
pushf
sub
dec
sbb
ljmp
insl
or
jmp
sub
ds
sub
adc
loope
or
cld
pop
adc
and
xor
push
sub
mov
adc
movsb
jp
addb
jno
gs
fcoml
inc
adc
jns
cli
out
aam
fdivs
lea
cmpsl
out
pop
push
add
mull
and
mov
sub
mov
out
xchg
sahf
and
fs
leave
xor
pusha
mov
dec
repnz
arpl
into
mov
mov
push
or
rorb
js
cmp
mov
sbb
les
cmpsb
leave
mov
sbb
outsl
jl
add
jae
out
cmpsb
cld
mov
std
cmp
push
sbb
imul
inc
mov
aad
pop
push
mov
fnsave
sti
cmp
xor
pushf
fiaddl
clc
lds
cmp
mov
mov
insl
std
add
jecxz
enter
movsb
icebp
ja
cmp
pop
cli
mov
xor
cmc
test
in
dec
enter
pop
jl
adc
push
cmp
push
cmpsl
pop
and
repnz
fildll
xorb
xchg
and
inc
rcll
jae
mulb
add
sub
movsb
popa
cmp
mov
shlb
mov
dec
inc
orl
and
das
pop
jl
filds
sbb
loop
nop
ljmp
in
mov
scas
ror
dec
outsb
xchg
jbe
aad
mov
call
rcll
in
mov
mov
lahf
jns
lods
pop
jbe
push
xchg
gs
ret
in
cmp
test
lods
mov
dec
mov
inc
pop
adc
cmp
cmp
mov
fwait
rolb
push
popf
fimuls
mov
push
jbe
cli
lds
hlt
pop
dec
jle
jl
into
orl
xor
cmp
lahf
cmp
jg
mov
sub
dec
cmpsb
adc
inc
fcomip
sbb
jp
xorl
or
pop
mov
imul
cmp
pop
lahf
pushf
jl
out
adc
repz
mov
jnp
push
icebp
nop
out
sub
mov
int
and
or
push
mul
and
jne
testl
push
push
push
add
scas
jbe
adc
xchg
add
mov
sahf
hlt
xchg
xchg
pop
test
lds
in
inc
inc
aam
xchg
xlat
stc
jecxz
push
xor
xor
daa
clc
jns
das
dec
xchg
pop
hlt
mov
divb
daa
fmull
push
sbb
notb
pop
dec
mov
les
mov
xchg
les
mov
sbb
add
adc
in
dec
sbb
mov
ficoms
mov
sbb
push
loope
xor
mov
mov
mov
mov
xor
aam
sti
jl
movsb
mov
in
cmp
xor
scas
sub
dec
pop
jae
cltd
mov
inc
outsb
cmpl
push
inc
mov
aad
addr16
xchg
xor
sub
jno
loop
or
cli
loopne
cld
lods
pop
fdivl
pushw
pop
dec
aam
in
ja
lret
fsub
or
pop
jno
outsb
mov
ret
mov
cld
out
in
lds
clc
popa
cmpsl
adc
mov
pusha
xorl
xchg
pusha
xchg
inc
and
dec
mov
aas
xchg
mov
mov
and
pusha
fstpt
dec
outsb
daa
fildll
stos
hlt
pop
and
lock
add
popa
outsb
lods
jbe
pop
bound
xor
cld
sub
mov
out
js
leave
fcmovb
jge
decl
inc
xor
leave
ss
and
jb
ss
dec
test
inc
mov
jl
adc
scas
in
jne
push
xchg
icebp
mov
sub
popf
jp
push
sbb
xchg
cwtl
or
and
dec
xchg
bnd
jb
jo
ljmp
insb
lock
xlat
push
inc
or
mov
and
mov
fistl
clc
push
aaa
scas
sub
stos
inc
xor
xor
mov
nop
sbbb
pop
ficoms
dec
jmp
mov
aad
lods
mov
pop
lcall
sarl
call
pop
inc
sub
jg
xchg
inc
xor
cmpsb
dec
jg
push
xlat
fcmovu
or
dec
inc
stos
and
cld
cmpsl
stc
mov
pushf
imul
shrb
loop
lods
jmp
inc
inc
cli
loop
pop
mov
pop
icebp
clc
roll
mov
push
pop
icebp
xchg
xchg
jl
repz
das
pop
mov
push
pop
cli
jne
scas
push
bound
adc
dec
jmp
arpl
cmp
jae
xchg
push
stos
jne
sbb
xor
fwait
jge
adc
fsubrs
or
fsub
xchg
cltd
cmp
ficoms
loopne
mov
or
sbb
xchg
out
sbb
jmp
xor
ret
adc
lcall
xchg
fldenv
leave
and
add
mov
jp
nop
mov
ror
repz
mov
dec
sbb
xchg
outsl
mov
es
in
cmp
xor
mov
xchg
pop
inc
push
mov
dec
lahf
ret
push
sbb
cmp
shll
repnz
sbb
movsl
stos
mov
mov
xchg
or
push
subl
sub
dec
filds
ljmp
sbb
push
pop
subl
movl
mov
push
xchg
jle
mov
mov
cmp
xchg
pop
push
jbe
insb
movsl
jne
fsubrs
dec
enter
pop
add
sub
dec
loope
fnsave
call
sub
lea
popf
mov
js
xchg
repnz
pop
mov
xchg
mov
mov
xchg
popl
js
bound
pandn
and
imul
mov
lret
popf
movsl
xor
in
xor
sbb
negl
mov
mov
scas
mov
mov
icebp
sub
adc
fwait
mov
mov
sub
push
jmp
dec
cmpsb
push
dec
insl
aas
jg
mov
in
leave
das
cmp
stos
jno
or
sub
imul
pop
adc
mov
push
mov
loop
push
sbb
push
enter
lcall
jne
or
xor
add
stos
stos
not
lock
dec
jmp
lcall
jge
sahf
adc
jno
cs
loop
insb
sbb
cli
sbb
push
cmp
mov
fisubs
push
dec
je
scas
xchg
mov
mov
bound
call
push
cwtl
fisttps
sbb
inc
shr
or
outsl
lret
push
mov
je
xor
jns
push
dec
loopne
clc
mull
adc
aaa
sbb
mov
push
popa
test
gs
das
xchg
mov
scas
dec
daa
push
rcrb
or
mov
fdivrs
mov
mov
inc
xchg
cmpsb
daa
sbb
in
mov
or
test
loope
in
es
sbb
imul
fcmove
mov
adc
lock
jg
lock
mov
mov
lods
cli
dec
and
ja
js
out
mov
pop
and
jnp
fldl2e
test
dec
fcomps
cmpsl
adc
bound
add
inc
ja
xor
jb
int3
sub
xchg
aas
sbb
cmc
fs
sbb
jbe
rclb
andl
mov
dec
cmp
dec
dec
pop
mov
lock
add
call
les
push
mov
mov
jo
inc
cs
push
repz
call
or
and
enter
inc
or
sub
mov
jecxz
adc
loopne
cmc
dec
sbb
jbe
dec
clc
pop
adc
adc
cmp
cltd
mov
cmp
or
outsl
xlat
cmp
lahf
push
shrl
ret
pop
cmp
or
jns
pop
dec
sub
in
scas
fs
mov
adc
shll
gs
xlat
gs
mov
mov
les
adc
xor
xor
aas
cli
mov
addb
xor
test
pop
ja
insl
push
xor
add
rcll
test
in
dec
mov
lods
mov
mov
adc
mov
and
ret
push
jno
jge
inc
sub
cmc
adcl
sbb
rorl
jl
aam
andl
inc
and
pop
jmp
cmc
loope
pop
dec
jmp
xor
aad
mov
cld
sarb
clc
mov
rcrl
pop
xchg
pop
or
mov
lret
cmpsb
mov
enter
mov
sub
xor
mov
xlat
insb
pop
stos
xor
das
cmp
mov
sbb
lds
fcompl
idivb
daa
je
and
sub
test
pop
enter
aas
aad
je
or
pop
pop
mov
mov
mov
test
and
mov
adc
sbb
out
ljmp
jns
push
popa
pop
roll
jno
push
or
mov
int3
js
stos
sub
ja
aad
mov
aas
xchg
adc
mov
add
sub
pop
pop
xchg
sbbb
fwait
push
lahf
or
xchg
jle
add
xchg
bound
dec
push
xor
sbb
or
sbb
xlat
jge
mov
xor
pop
push
jmp
add
inc
dec
lret
jno
enter
or
scas
stos
adc
insb
jl
xchg
xlat
stc
jb
mov
aaa
das
bound
rcr
or
test
mov
cmp
lds
mov
xchg
cld
cmp
xor
cwtl
sbb
idivl
ret
push
sbb
scas
dec
imul
jns
aas
adc
pop
movsl
lret
in
stc
test
arpl
aas
test
shlb
cltd
repz
sar
adc
or
mov
out
mov
fsubr
adc
push
cmp
dec
cmp
ja
orb
popa
fsubs
mov
testb
les
adc
cwtl
ds
loopne
mov
addr16
or
push
ljmp
sub
xlat
xchg
cmpsb
add
pop
xchg
outsb
jp
sbb
cltd
jae
testb
push
or
sbb
loope
popf
sub
mov
testb
test
popw
cmp
lods
adcb
in
inc
push
jmp
or
negl
mov
and
je
mov
dec
push
sahf
sub
jnp
xchg
out
mov
xchg
daa
pop
repz
das
sarb
subb
mov
push
int
jmp
mov
add
lcall
add
push
sbb
sarl
in
pop
xchg
mov
das
cmp
mov
jmp
stc
loop
mov
sub
sbb
push
inc
mov
aad
inc
int
jg
lahf
sbb
sbbl
jae
sbb
cmpsb
in
push
mov
shll
push
and
lret
xchg
fbstp
or
subl
lds
repz
roll
das
push
es
sub
js
dec
outsb
dec
cmpl
shrl
jecxz
xor
xor
or
clc
push
sub
movl
jo
adc
and
add
ljmp
shrl
adc
mov
mov
jle
mov
dec
dec
iret
pop
pop
inc
lahf
mov
cld
mov
outsb
lds
and
sahf
leave
fisubl
icebp
adc
fsubrs
aad
dec
jnp
lock
adc
sub
rolb
and
adc
or
push
pusha
push
mov
cmp
lock
add
xchg
push
loopne
ss
sub
cmpsl
fidivl
mov
sbb
xchg
add
lock
xchg
pop
mov
mov
inc
xor
test
cwtl
jb
bound
jle
mov
rcrb
notl
insb
inc
sub
movsb
jb
enter
js
mov
xchg
jns
subb
popw
stos
add
orb
stos
aam
inc
mov
js
mov
or
xchg
dec
adc
or
mov
push
cmp
jb
pop
fildl
icebp
inc
push
adc
jns
jnp
clc
notb
mov
adc
lds
xlat
les
cld
test
inc
sbb
sub
push
push
push
cmp
sti
mov
cmp
test
and
jmp
mov
adc
inc
cmp
jmp
mov
and
data16
inc
dec
add
pop
push
mov
fsubrs
inc
pop
inc
xor
sahf
inc
test
mov
mov
test
dec
or
test
ret
shr
int
inc
fstl
cmp
xchg
sahf
out
fcoms
mov
mov
pop
ja
xchg
dec
lea
popa
fdivp
add
aad
push
bound
roll
inc
mov
pushf
mov
dec
lahf
lret
movsb
sub
mov
shlb
sub
inc
jne
mov
sub
cmpsb
push
mov
in
lret
loope
push
or
or
out
out
pop
cli
je
cmp
unpckhps
stos
adc
inc
fistpll
and
dec
out
jns
mov
xor
push
mov
fwait
test
rcl
idivb
fadds
aaa
pop
xchg
cld
pop
lret
push
mov
addr16
xor
arpl
lods
movsl
inc
push
enter
out
push
cld
addr16
mov
xor
mov
adc
aad
daa
mov
js
xchg
jge
xor
or
les
xorl
rcrb
jno
rclb
jp
push
call
and
and
fbstp
sarb
test
sub
mov
dec
or
mov
inc
ja
adc
inc
sub
cltd
push
xchg
pushf
dec
mov
push
push
mov
lock
xchg
xchg
sub
cmp
fnstsw
cmpsb
fldenv
out
adc
aad
in
in
inc
lahf
jmp
pop
cli
mov
mov
lea
fcoms
sti
clc
rcrl
arpl
aas
push
lahf
jecxz
xchg
iret
push
mov
mov
xchg
stos
xor
mov
imul
push
dec
jb
sbb
mov
mov
jb
push
mov
dec
fists
mov
mov
sub
and
mov
call
or
fldl
jl
inc
jnp
test
inc
lock
and
push
test
fsubl
dec
imul
or
adc
xchg
lock
es
aam
pop
fs
movsb
sbb
ljmp
imul
or
cmp
lahf
jge
sbb
subl
lds
outsl
in
jmp
adc
inc
ficoms
stos
out
mov
fcmovbe
test
xchg
divl
pop
xchg
pop
js
rorl
popa
adc
fildl
adc
movsb
inc
dec
pop
sbb
sub
push
imul
lods
push
sub
mov
dec
add
inc
out
jno
loopne
iret
fdivl
scas
push
fwait
shrl
and
repz
cwtl
mov
pop
pop
sub
ss
cwtl
dec
xchg
inc
ficoml
sub
out
cmc
mov
andl
adc
xchg
xchg
ljmp
sbb
jne
pusha
mov
out
xor
or
rcr
test
jge
test
out
sub
in
and
je
in
xchg
iret
pop
out
push
jge
pop
loopne
bound
fdivrs
mov
pop
outsl
mov
jnp
mov
cmpsb
in
sbb
arpl
in
cmp
cmp
dec
or
fs
xlat
in
test
jecxz
jl
aam
ret
filds
out
jmp
jg
mov
sbbl
out
pop
and
ss
add
test
test
pusha
scas
cmp
fidivl
mov
xchg
ss
lock
or
call
shrb
xor
addr16
subl
lods
jae
inc
test
movsl
ds
js
xchg
scas
push
cmp
add
xchg
cmp
aam
push
xor
pop
mov
xchg
mov
or
push
incb
and
leave
dec
cmp
call
pop
mov
pop
cmp
in
stos
pusha
loopne
pop
fsts
xchg
aam
mov
call
dec
dec
inc
or
xchg
ficoms
aas
xchg
mov
popa
xor
xorl
sbb
add
and
jnp
or
mov
arpl
inc
dec
inc
fsubrs
mov
adc
jno
add
mov
mov
xchg
fbld
xchg
lods
push
repnz
in
pop
push
and
push
xchg
inc
sub
inc
in
sub
and
sbb
test
and
adc
dec
sbb
or
add
push
cmpsl
int3
jmp
mov
push
clc
jp
sbb
lods
jge
cmp
test
stos
test
dec
adc
stos
sbb
or
sub
xchg
xor
jmp
mov
jae
fst
rcrb
cs
mov
aad
inc
jmp
sub
jns
push
mov
mov
jp
jp
push
shrl
aad
fcomps
cltd
scas
rcll
and
lret
and
adc
sbb
jmp
icebp
jle
arpl
inc
lahf
jl
sbb
xchg
js
sti
sar
jae
inc
sub
mov
push
clc
ss
xor
aas
stos
outsb
pusha
or
and
sbb
jp
hlt
pushf
rcrl
push
es
fstps
lcall
clc
push
mov
dec
or
xchg
jg
cli
mov
imul
mov
int
js
adc
es
in
loope
ficomps
add
sub
add
test
lock
ret
inc
dec
xchg
fsubrl
dec
jle
icebp
pop
adc
push
cltd
cmpsb
je
jle
rcrb
or
lret
and
jb
mov
mov
aas
sub
push
pop
aaa
aas
fwait
xchg
inc
xor
adc
cmp
cmc
fistl
push
cmc
xchg
fcomps
fbstp
dec
cmp
stos
xor
push
mov
call
ret
in
mov
mov
scas
adc
push
inc
int
cs
rcl
out
bound
xlat
or
sarl
icebp
push
aad
leave
je
icebp
pop
jns
sahf
sbb
incb
int
jnp
and
pop
inc
add
xchg
lcall
jp,pn
cmp
sti
mov
stos
ja
fs
mov
loop
inc
xor
leave
push
mov
loop
cmp
rorb
jb,pt
mov
rorb
outsl
push
adc
js
dec
stos
out
loopne
out
or
loopne
or
sbb
aaa
hlt
adc
incl
and
add
icebp
push
mov
sbb
xchg
mov
dec
jne
fs
jl
imul
icebp
adc
push
icebp
aaa
mov
imul
mov
outsb
lretw
stos
jg
incb
cmp
mov
cmp
cmp
xor
fs
push
lock
insb
or
icebp
ja
jno
xchg
or
jns
clc
out
ret
inc
pop
std
in
cmp
mov
aaa
divb
xchg
cwtl
xlat
and
lds
push
or
and
jo
fbstp
mov
pop
sbb
push
sbb
dec
es
jne
pushf
lea
inc
aad
stos
scas
call
adc
test
jo
cwtl
push
jbe
mov
mov
cmpsb
imul
ljmp
jecxz
add
call
sbb
fdivrs
subl
cli
mov
and
les
data16
mov
mov
lahf
pop
insb
push
lock
push
enter
inc
pop
shll
aaa
pop
in
sbb
dec
shrl
or
or
jg
lret
cs
adc
cmp
out
shll
adc
mov
jge
aad
sbb
ds
dec
inc
cli
pusha
int
test
dec
les
mov
incb
mov
adc
leave
jae
imul
sbb
mov
mov
sahf
addl
test
inc
into
movsb
adc
mov
sbb
out
jns
loopne
inc
cmp
jp
out
xor
mov
ja
xlat
push
nop
pop
lds
cmp
call
sbb
fnstcw
mov
mov
divl
xchg
mov
adc
fmuls
insb
das
cli
mov
mov
push
stc
ja
jbe
outsb
sbb
mov
jmp
cmc
mov
leave
adc
iret
push
pop
inc
push
sbb
xor
adc
cmp
lret
lods
cmp
pop
mov
mov
cmp
out
stos
cmpsb
out
sbb
fstl
fcmovbe
test
in
sub
test
dec
and
mov
pop
cmpsl
stc
pop
and
stos
jg
cld
ret
movsl
adc
sbb
mov
pop
sbb
adc
mov
or
mov
dec
sbb
xor
jl
mov
ds
adc
adc
jno
je
push
mov
jbe
or
sub
loop
insb
mov
jecxz
leave
hlt
addr16
and
dec
xlat
in
das
xchg
data16
hlt
into
mov
nop
mov
xor
jg
scas
sbb
mov
test
inc
es
and
add
js
ficompl
jno
lret
into
sub
jns
or
cmp
push
push
test
and
jae
push
sub
xchg
add
push
jne
adc
aaa
addr16
enter
xor
ficoms
xlat
cs
jl
mov
sahf
and
fmul
push
test
or
inc
inc
int3
stos
xchg
jbe
add
jae
lcall
test
push
imull
repnz
gs
and
call
in
push
cmp
and
data16
data16
lods
or
mov
icebp
fxch
mov
stos
fnstcw
bound
cltd
fwait
in
push
jge
or
mov
xor
pop
cmpsl
adc
rclb
int
mov
cmp
in
ffreep
pop
or
mov
aad
popa
cmpsb
testb
xchg
xchg
ret
jp,pn
sub
das
xlat
addb
rorl
lret
icebp
cmp
lret
loopne
pop
mov
or
fs
adc
mov
les
jb
adcb
dec
mov
xchg
cwtl
aad
and
stc
cwtl
cmpsl
bound
ljmp
sub
lret
clc
movsb
sbb
cli
out
mov
xor
mov
adc
pop
xor
fistpll
and
cmpsl
int
test
in
jg
into
jo
lds
roll
or
andl
sub
fwait
inc
adc
addb
les
cmpsb
cmpsb
push
mov
iret
and
fsubs
or
ret
sahf
lods
repz
icebp
mov
repz
lea
leave
push
push
or
movsb
pop
inc
lahf
xor
shll
dec
pop
ret
jecxz
pop
dec
sub
pop
jne
mov
cmp
pop
ffreep
mov
pushf
mov
xor
notl
sbb
push
xor
cltd
inc
mov
push
mov
adc
repnz
pop
jge
mov
dec
and
dec
xchg
ret
popf
popa
xor
jg
inc
add
adc
lods
pop
cmpsb
data16
sub
stos
push
pop
jg
push
cld
popa
pop
in
or
inc
outsl
sbb
mov
jmp
test
mov
fs
or
cli
add
xor
sbb
int3
repz
imul
in
mov
aaa
push
xchg
lret
inc
adc
not
aam
sahf
jne
mov
jb
cli
bound
stos
mov
je
pop
sub
mov
fs
jg
xor
mov
xchg
push
xlat
mov
mov
xor
sub
cmpsl
mov
or
in
popa
sbb
loop
mov
mov
lahf
lcall
xor
loope
arpl
cmpsb
mov
or
ficoml
lret
sub
das
arpl
sub
xor
fst
leave
cmp
push
ja
fcompl
out
test
loopne
cmpsb
rol
idivb
rclb
xchg
dec
shr
xorb
push
fsub
test
shll
mov
sbb
cwtl
daa
adc
jmp
stos
cmc
mov
mov
cmp
andl
jns
jecxz
sub
mov
loopew
lock
mov
lods
lods
in
mov
mov
mov
lret
out
adc
jns
mov
push
pushf
and
aaa
int
out
jns
cs
xchg
pop
subb
and
sahf
fmul
js
cld
outsb
mov
add
push
scas
xorb
rorl
test
into
cli
lahf
aas
push
jmp
shrb
pusha
ret
pop
cmp
jne
data16
das
or
test
adc
mov
in
std
and
xchg
pop
add
movsb
fidivrs
xor
leave
leave
stos
repnz
cwtl
or
lods
jp
ja
add
cmc
sbb
pop
mov
xor
mov
shll
mov
hlt
jb
jns
inc
and
sysret
cmpsb
and
add
lock
outsl
ss
mov
mov
add
and
inc
ret
add
lock
dec
or
fistpl
xor
xchg
xor
and
loop
lahf
negl
fsts
arpl
jmp
push
adc
inc
xchg
rcr
addl
mov
jg
pop
mov
xor
lahf
mov
pop
mov
lds
sub
jecxz
mov
loop
or
fwait
xchg
sbb
push
bound
mov
pop
and
or
filds
adc
in
lret
adc
rorl
dec
std
nop
jg
add
xchg
arpl
lods
movsl
loop
xchg
mov
les
ja
cmpsl
out
mov
mov
fsubrl
jno
or
cmp
test
dec
xchg
pop
enter
pop
sbb
jno
add
jnp
pop
push
nop
in
pop
mov
add
sahf
push
pop
lds
mov
push
mov
repz
jb
les
push
xor
lods
jl
adc
lods
cmp
faddl
push
xchg
cmpsl
cmp
push
cmp
xor
mov
mov
pop
inc
scas
and
sub
sbb
dec
cmp
sbb
push
add
rorb
sub
cmp
sub
mov
sbb
and
popf
popa
cmp
add
int3
xor
mov
test
mov
xor
sti
sbb
sbb
push
inc
pusha
jno
stos
mov
ret
pop
insl
push
push
sub
jnp
mov
bound
adc
insb
repz
xor
push
outsb
das
add
mov
jb
mov
loopne
das
add
lahf
or
jbe
out
inc
cmp
mov
cmp
pop
sub
and
lds
jns
adc
cmp
mov
mov
pop
iret
pop
mov
outsb
mov
jae
cmp
push
xchg
lock
mov
shlb
mov
ret
in
mov
pop
adc
mov
inc
xchg
xorb
mov
in
mov
ficomps
cmc
inc
cmp
mov
aam
iret
adc
into
mov
xchg
adc
js
mov
inc
inc
pop
lahf
outsb
cmc
insl
in
inc
push
jb
adc
das
dec
cmp
popa
repz
ret
jo
test
xlat
cmpsl
add
aas
lcall
sub
jns
jp
or
pop
sub
insl
int3
sub
lods
lods
out
mov
add
out
add
or
scas
mov
mov
and
lret
jne
inc
jmp
push
popa
repz
and
loop
popf
test
out
lahf
cmpsl
xchg
icebp
dec
pop
pusha
jge
cmp
cmp
cmpl
fsubl
dec
xor
mov
dec
pop
mov
mov
push
ficoms
jo
adcb
fldenv
stc
bound
arpl
xchg
xlat
and
mov
cltd
jae
cmp
adc
add
in
push
mov
shl
les
adc
mov
sbb
lcall
lret
dec
aas
jb
mov
and
cs
ret
les
ret
mov
jno
stos
lock
stos
mov
jg
insb
in
cwtl
pop
dec
sahf
mov
mov
add
push
push
mov
scas
inc
pop
mov
fsubl
push
loopne
cwtl
and
sub
int3
int3
add
sbbl
les
lods
in
pushf
shrb
jl
adc
pop
cli
aas
dec
add
cmp
outsl
adc
cmp
sub
dec
or
inc
jge
push
cmp
out
jno
icebp
add
mov
scas
movsb
add
sub
push
in
cmp
inc
sub
xor
or
sahf
jmp
pop
out
mov
adc
adc
cmpsb
pop
cmpsb
movl
lods
fs
mov
data16
push
inc
sbb
movsl
cli
sub
mov
fnstenv
inc
loope
imul
and
test
jnp
dec
in
add
or
icebp
fisttpl
fbstp
xor
pop
add
xor
mov
push
roll
dec
pop
xor
popf
int
cmp
and
cmp
jae
push
and
adc
xor
adc
jns
mov
dec
push
push
add
cs
shrb
iret
sbb
int
aad
pop
popf
sahf
and
test
shrl
sub
sub
add
insb
dec
outsl
out
mov
jb
jmp
sub
inc
mov
icebp
popf
cltd
in
dec
xor
pop
dec
mov
sub
fadd
sahf
ret
cmp
lret
out
cmp
sbb
in
lods
scas
cwtl
fnstsw
jge
das
mov
shlb
int
dec
pushf
cmp
adc
or
lret
xchg
je
and
cmp
xchg
mov
sbb
mov
imul
pop
mov
mov
mov
or
in
cltd
mov
sub
xchg
push
sub
add
inc
call
je
clc
inc
pop
daa
loope
dec
push
add
jae
mov
adc
lahf
clc
aaa
mov
adc
insb
xchg
sbbw
negl
aad
movsl
adc
int
adc
stos
sub
jno
es
xchg
std
and
lods
sbb
cmp
dec
ret
sub
ds
pop
jg
out
gs
popa
fnstsw
stos
add
in
aad
mov
cmp
mov
adc
call
add
mov
xchg
movsb
ljmp
sbb
xor
mov
test
adc
icebp
clc
pushf
call
xchg
mov
loope
stc
xor
nop
scas
xor
pop
lds
or
add
inc
aad
subl
jecxz
cmpsl
jmp
insb
test
enter
push
ret
int3
inc
mov
test
insb
ds
sbb
aaa
pop
cmc
shll
jp
sarb
fistps
ss
insl
mov
addr16
pop
cmp
stc
leave
sub
xchg
adc
imul
and
enter
popa
push
aad
jne
cmpsb
xchg
iret
scas
jns
jno
push
mov
xor
sbb
xchg
test
ds
in
xor
xchg
int3
sahf
ljmp
jecxz
push
dec
aas
loop
add
xor
jg
shl
rcr
cmp
and
sarl
roll
push
push
mov
cmpsl
fsts
push
rcll
lea
adc
mov
pop
sub
cmpsl
ret
push
call
or
push
mov
add
sti
test
sub
lahf
sbb
test
jnp
lods
mov
sub
xor
icebp
cmp
adc
rclb
in
fnstenv
fimuls
mov
iret
inc
sbb
test
ss
stos
inc
arpl
mov
lahf
and
orb
inc
cmpsb
movsl
adc
lahf
jae
jno
and
shll
inc
push
shlb
loopne
cmp
imul
add
in
fwait
movsb
jge
push
pop
loope
shll
jbe
push
cwtl
adc
xlat
fsin
test
aam
mov
mov
daa
enter
pop
pop
jg
or
sbb
je
insl
push
inc
mov
jge
jns
mov
ljmp
inc
xor
mov
popf
xor
or
ja
xchg
inc
in
jae
jne
mov
imul
push
inc
fldt
jo
add
mov
xchg
leave
ret
loope
mov
pusha
out
adc
push
mov
pop
push
and
sub
js
add
pop
ja
je
xorl
jne
fistpl
sbb
and
jo
pop
mov
add
push
or
jnp
ss
jmp
out
xor
popa
pop
add
adc
out
ret
test
mov
mov
ja
out
mov
repnz
mov
sbb
fiadds
add
jle
cmp
stc
out
xlat
data16
pop
cwtl
mov
ret
aam
pop
xchg
lcall
push
ss
aaa
dec
rorb
pop
sub
clc
pop
fs
mov
mov
fadd
mov
mov
popa
sti
shll
inc
mov
dec
push
fisubl
add
xchg
dec
stos
outsl
push
and
jmp
fidivrl
add
mov
leave
fildll
leave
and
je
in
push
push
sarb
sub
mov
mov
out
push
cs
out
popa
push
mov
clc
xchg
inc
mov
inc
cmpsb
repz
je
mov
mov
mov
push
sub
dec
popa
pop
or
or
or
xor
jne
and
fsub
fiadds
lds
out
or
dec
adc
in
imul
jae
or
inc
out
jne
ret
ja
dec
movsb
sub
inc
cmp
mov
ret
xchg
scas
pop
and
in
repz
popf
or
test
jp
mov
ljmp
in
mov
mov
inc
inc
pop
xchg
jns
xor
adc
cwtl
pusha
sbb
leave
inc
add
pop
xor
adc
enter
addl
stos
add
out
xor
loope
lret
push
into
push
pop
jmp
gs
dec
js
or
xchg
mov
and
adc
xchg
icebp
aad
push
mov
fistps
adc
ficoml
in
gs
push
addr16
mov
lret
daa
fsts
pop
out
xchg
add
lock
jl
mov
mov
in
sbb
sbb
enter
imul
test
inc
adc
push
jle
adc
push
dec
lcall
mov
jbe
jae
adc
lret
rsqrtps
xor
dec
data16
sbb
in
fmull
shll
mov
nop
sar
outsl
divb
addb
or
lock
mov
mov
movsb
and
jmp
je,pn
jmp
jnp
cmp
fs
sbb
xor
sub
jbe
pop
pop
sub
es
outsl
rclb
popf
jp
jle
mov
add
out
add
pop
push
sbbb
xor
jmp
xor
test
mov
inc
mov
add
call
sti
xchg
or
scas
or
js
dec
movsl
mov
lds
shl
repnz
dec
adc
scas
jg
xor
outsb
jg
pop
xlat
push
pop
out
push
stos
push
or
and
or
push
jle
sub
xchg
or
mov
add
sti
mov
call
mov
mov
jno
ss
arpl
out
mov
sub
and
stos
or
push
sub
mov
stos
mov
add
or
pop
fistpll
and
xorb
dec
mov
out
xchg
incl
ret
fisubl
and
sub
sub
dec
mov
sub
pop
je
iret
scas
push
stc
cmc
outsb
push
iret
jp
lahf
or
aaa
and
mov
mov
sarl
adc
addl
iret
push
popa
or
push
jg
push
dec
push
out
xchg
pop
sbb
or
ror
sbb
mov
cli
cli
adc
lcall
hlt
gs
mov
test
xchg
in
fmull
stc
lret
cwtl
popa
sbb
imul
pop
and
cwtl
adc
mov
mov
lock
mov
pop
mov
cwtl
dec
mov
in
or
sti
or
push
xor
and
bound
mov
call
jmp
sarb
push
dec
imul
cmpsb
arpl
pop
sbbb
lret
xor
call
cmp
mov
call
jae
dec
in
js
lods
mov
call
inc
mov
addr16
xor
or
cmpsb
test
sub
arpl
fnsave
inc
cltd
insl
sub
mov
mov
js
dec
imul
push
stc
cmp
stos
sub
rolb
push
inc
scas
ljmp
push
cs
pop
mov
xor
mov
add
sbb
lret
cli
addr16
mov
cwtl
adc
mov
add
lods
stos
mov
sub
mov
xchg
mov
xchg
ret
and
jb
mov
mov
adc
int
xchg
test
xchg
xor
fnstenv
insl
lds
cmpsl
push
in
sti
mov
sub
mov
pop
jge
stos
dec
add
cmp
adc
pop
adc
mov
push
push
push
inc
or
neg
dec
mov
add
lcall
gs
clc
arpl
mov
mov
lret
pop
dec
xchg
xor
adc
iret
pop
es
scas
pusha
inc
inc
outsl
popa
enter
mov
lahf
pop
nop
dec
xor
mov
cmpsb
xchg
fisttps
gs
iret
out
lods
or
mov
ljmp
mov
aaa
cmp
fsubl
mov
int
aad
push
xchg
das
mov
inc
addl
bound
and
and
and
jae
jb
adc
fstps
inc
xlat
jns
mov
je
inc
cld
jge
repz
cltd
imul
push
xchg
fidivl
push
xchg
movsb
nop
jnp
lods
out
push
hlt
xchg
sahf
jb
popa
or
call
push
pop
repnz
jp
mov
sbb
cmp
mov
stc
sbb
mov
pop
add
jecxz
push
jle
push
je
jmp
stc
shrl
pop
dec
aad
stos
inc
jno
mov
mov
out
inc
repnz
in
push
fdivrs
fbstp
lret
mov
sbb
js
jp
jge
cmpsl
jnp
int
push
jo
inc
inc
and
int3
out
dec
sub
arpl
mov
push
dec
cmc
add
jmp
lds
dec
stc
enter
pop
jnp
mov
insl
out
or
stos
dec
adc
and
push
pop
popa
ljmp
sub
inc
pop
xor
adc
xbegin
mov
mov
gs
xor
icebp
out
and
add
out
dec
fldcw
jns
inc
in
popf
int3
js
sbb
sub
fcomip
ret
sahf
ret
and
push
adc
inc
add
dec
ud2
adc
test
sub
test
mov
mov
mov
cmp
xchg
int
or
cmpb
cmpsb
insb
arpl
movsb
sub
xchg
push
je
cmp
xchg
inc
adc
xor
pop
les
fnsave
sub
in
jg
push
popf
fidivs
push
jg
cmp
inc
cmpsb
sub
push
incl
pop
scas
adc
sahf
jg
in
xchg
fs
enter
sub
mov
sub
std
mov
sub
outsl
sbbl
or
push
mov
roll
inc
add
dec
inc
add
or
xchg
and
cwtl
adc
jle
cmp
push
sub
cmp
aad
mov
aam
test
lret
popf
in
and
xor
pop
adc
mov
sbb
imul
adc
mov
gs
or
ret
and
int3
sbb
push
das
mov
add
inc
mov
sbb
or
xor
and
mov
mov
push
call
add
and
xchg
adc
pop
ss
sarb
gs
jns
jmp
dec
jbe
aas
sbb
push
cltd
adc
mov
xchg
sbb
stos
je
jecxz
ret
int3
push
repz
inc
rep
addb
add
sbb
jmp
sbb
xor
fwait
xor
push
and
mov
add
or
fnstsw
jno
xchg
mov
mov
lahf
mov
pop
mov
sbb
sbb
int
xchg
fcmovnu
lret
lods
icebp
arpl
cmpsb
sub
push
fstpt
flds
clc
add
cmpsl
or
int3
mov
rcl
mov
in
aaa
xor
cmpb
sub
pop
ja
mov
xchg
fcoms
xchg
xor
nop
mov
mov
mov
inc
jb
lret
xchg
xor
in
into
lahf
push
mov
dec
push
xor
xchg
add
pcmpgtw
sbb
and
add
and
test
sub
mov
jno
pop
mov
test
cltd
push
leave
inc
mov
fcomip
sbb
mov
lahf
xchg
ret
aad
and
push
xor
cmc
repnz
add
or
mov
out
fistpll
sbb
xorb
xchg
mov
xchg
stos
inc
pop
and
or
jp
fstl
sbb
ret
lret
les
test
mov
in
imul
into
fisubrl
mov
pop
lods
jmp
xorb
sbb
push
sub
sub
decb
mov
and
aaa
mov
cmc
or
jnp
xchg
sub
sti
mov
sarb
dec
imul
lret
insb
lret
pop
pop
ja
fstps
xchg
movsb
xor
cmp
insl
lds
scas
adc
mov
pop
sarl
jb
or
ret
out
loop
jle
jg
cmp
push
stos
nop
pop
outsl
lea
repz
jg
dec
sti
mov
pop
lahf
cli
lods
sub
jmp
sbb
fidivrs
sub
inc
movsl
sbb
popf
cmp
lcall
aas
fldenv
test
lods
testb
int3
pop
adcb
sar
mov
sbb
sbb
movsl
push
ret
mov
imul
pop
push
xor
push
cmp
pshufw
sbb
xor
test
jbe
mov
out
sbb
and
fimull
dec
cs
lret
add
push
push
repnz
jns
mov
es
dec
xchg
xchg
loopne
or
sbb
jo
cmp
mov
imul
lret
cmp
int3
loopne
sub
test
xchg
addr16
stos
divl
inc
pop
imul
xchg
je
cltd
pop
sbb
sbb
xchg
jecxz
test
in
cmp
xchg
pop
notl
loop
vcvtdq2ps
cs
mov
inc
fistps
test
fstpl
shlb
sti
std
jae
mov
and
sub
ja
add
imulb
lret
aad
xor
xlat
flds
inc
inc
cmp
fstpt
mov
ja
test
mov
xchg
test
ss
adc
pop
jbe
dec
testl
ljmp
pop
inc
test
stos
movsb
test
daa
jmp
push
aad
add
push
or
xchg
cmpsl
sbb
or
push
adc
icebp
ret
mov
inc
jae
andl
push
popa
dec
movsb
call
jne
loope
lock
nop
test
pop
lcall
sub
es
xchg
iret
mov
int
xor
sub
push
sgdtl
ficomps
lcall
mov
sahf
cmp
xor
jecxz
and
adc
jo
lods
popf
mov
and
mov
out
push
xlat
pop
mov
mov
ljmp
test
inc
cmpsb
xbegin
into
add
cmp
movsb
aam
daa
jae
dec
jle
push
lcall
adc
icebp
das
mov
dec
addr16
jo
add
add
fyl2xp1
push
dec
cmp
xchg
loop
out
add
cld
repnz
sub
movsb
out
inc
fstpt
push
mov
cmc
xor
xchg
mov
or
repz
adc
scas
stc
mov
out
dec
mov
inc
int
pusha
mov
jmp
repnz
fidivrs
push
rorl
mov
or
sub
in
adc
push
xor
addl
jbe
push
mov
push
stc
sbb
and
loop
jae
cmp
pop
xchg
mov
mov
mov
push
lea
movsl
adc
lods
scas
aam
mov
imul
out
fisubrl
stc
adc
imull
in
mov
nop
out
and
sub
mov
pusha
nop
push
cmp
cmp
dec
mov
imul
push
xor
jnp
xlat
test
xor
pop
cmp
xor
xor
mov
jle
mov
xchg
js
fildl
or
imul
dec
ljmp
pop
mov
lahf
leave
pop
mov
or
inc
jae
leave
sub
and
test
lods
js
int
push
daa
mov
push
cli
in
or
pop
ljmp
sarl
lock
aad
push
cwtl
sbb
pop
leave
push
bnd
xor
rcrb
les
pop
and
and
sub
loop
mov
jb
add
leave
dec
movsl
cmp
mov
lret
mov
aas
or
dec
xchg
cmp
lods
jnp
and
mov
daa
inc
jne
faddl
push
mov
mov
xor
cmpsl
mov
or
dec
push
notl
xchg
in
add
stos
out
dec
lcall
push
ret
cs
lea
adc
icebp
loopne
xor
jnp
cmpsl
fwait
mov
cltd
jns
mov
fiadds
jbe
pusha
and
ficompl
push
jno,pn
cld
test
push
imul
dec
pop
sub
cmp
aad
jo
je
mov
push
jae
aas
xor
inc
mov
sub
repz
add
xor
out
and
arpl
dec
cmp
ret
in
movsb
sti
les
inc
jns
dec
ret
sub
or
mov
incb
insb
call
fs
fsubr
push
jae
xchg
or
roll
cmpsb
dec
ljmp
push
or
test
add
pop
jp
and
subl
push
cmp
xor
push
jb
jecxz
cmp
es
cld
xchg
jo
roll
push
add
loop
sub
xchg
out
and
jb
insl
outsl
in
jbe
es
mov
cwtl
xorb
mov
push
lcall
lcall
inc
add
test
inc
scas
sbbl
adc
call
cmp
cmpsb
das
jo
in
adc
adc
enter
scas
jg
jge
out
sub
adc
xor
xor
add
call
add
xorl
pop
mov
cmc
or
in
stos
add
cli
ss
mov
idivl
xor
outsb
out
lea
add
scas
lock
nop
int
fwait
add
mov
pop
rol
ss
mov
push
xchg
or
fisubrl
loopne
insb
cmp
cs
jo
mov
xchg
div
push
push
and
jp
jg
ja
or
movsl
mov
ja
push
xchg
test
xchg
nop
xchg
mov
jle
xchg
mov
mov
enter
add
pop
xorl
loope
or
mov
lock
out
xchg
sahf
dec
push
test
adc
jnp
in
test
inc
je
pop
sub
dec
pop
push
gs
insl
lret
movsb
or
cmp
sti
jae
cltd
adc
sub
push
xchg
loope
cs
mov
mov
into
stc
jg
xchg
clc
mov
pusha
push
dec
sub
imul
fmul
std
dec
pop
mov
movsl
push
push
lea
mov
adc
lds
sbb
jne
ljmp
mov
push
add
fldt
daa
mov
pop
shrl
or
dec
xchg
sbb
and
in
not
sbb
loopne
xor
mov
mov
fnstcw
je
iret
sub
ljmp
cmovge
outsl
mov
andl
push
sub
jp
shll
jmp
ret
or
jg
rorl
call
mov
jae
add
add
mov
xor
in
cli
mov
lahf
arpl
popf
addb
shlb
sub
pop
lret
int
outsl
cmc
lods
cmp
inc
jo
outsl
push
ja
pop
aad
push
addr16
or
test
add
lods
orb
fxch
inc
imul
jl
psubq
sbb
in
xchg
sub
mov
into
inc
fisubl
bound
repnz
sbb
mov
xor
adc
movsl
adc
xchg
test
in
jb
mov
out
jb
or
fcomps
dec
ss
adc
jl
or
push
lret
add
jne
fs
popf
cmpsl
and
lea
xor
sub
loop
mov
test
add
jne
xchg
flds
cmp
ret
sbb
jns
and
push
push
dec
cmp
adc
inc
in
jbe
mov
js
pop
dec
clc
jns
ret
push
mov
jecxz
pop
and
xchg
mov
movhps
rcll
sbb
out
inc
filds
pop
movsb
lods
les
inc
and
ficomps
aam
push
push
mov
cmp
stc
sbb
cmp
ficoml
dec
inc
aam
je
gs
cmpb
and
aad
popa
mov
in
adc
jp
out
andb
sahf
pop
lock
dec
or
insl
xor
test
ds
xchg
or
add
adc
fisttpl
xor
sub
or
fwait
pop
fidivrs
jno
repnz
jge
call
roll
dec
jg
xchg
pop
sbb
fisubl
push
mov
mov
stos
ret
orb
jae
cmp
dec
filds
mov
jns
ss
ja
insb
sbbb
pop
mov
mov
das
dec
or
aaa
inc
ret
gs
add
test
aad
decl
fldt
les
xchg
fmul
adc
mov
insb
jp
jbe
insb
push
lock
push
lret
jb
or
sar
int3
and
jecxz
xchg
xchg
push
and
in
add
mov
add
pushf
repz
rolb
sbbb
sub
repnz
xor
xor
push
cmp
mov
mov
push
xchg
cmp
cmp
mov
or
mov
test
xor
mov
imul
outsl
fxam
sbb
shlb
fs
xor
notb
jg
test
inc
outsb
xchg
fucomp
lock
in
rorb
in
add
cmp
decb
mov
and
push
stos
idivb
leave
dec
mov
in
ljmp
nop
in
in
xchg
jb
pop
scas
add
mov
cmp
fs
mov
iret
loope
add
inc
sahf
aad
out
dec
xchg
dec
jecxz
pop
sbbb
adc
repnz
xchg
mov
in
mov
pop
mov
ds
cld
xchg
and
addr16
mov
mov
inc
xor
mov
daa
aam
das
loope
ljmp
out
rcrb
xchg
mov
sbb
test
jno
mov
mov
sbb
xchg
xchg
xchg
insl
mov
pop
inc
out
push
mov
xchg
fbstp
rcrb
and
mov
and
fs
mov
mov
loop
inc
mov
ret
add
inc
lea
fsubrp
push
ljmp
inc
in
push
and
popf
cltd
aad
and
inc
aam
fildl
xor
ret
movsl
lret
push
mov
ret
mov
lods
aad
bound
lods
in
imul
xchg
iret
sbb
jg
lea
pop
cmp
popa
xor
mov
or
mov
les
invd
push
add
jne
push
dec
or
adc
xor
sbb
mov
sbb
mov
adc
cmp
jmp
push
movsb
aas
fldcw
roll
sub
insl
iret
jl
cwtl
adc
pop
xor
mov
xor
mov
shrl
push
push
adc
fsubrl
je
and
mov
mov
cmp
pushf
pop
xchg
and
js
xor
or
add
aas
or
add
mov
mov
cmpsl
add
jbe
mov
push
add
push
mov
cmc
mov
inc
incb
or
cmp
pushf
mov
sub
lret
sahf
adc
test
mov
dec
inc
shl
jg
xchg
lret
sub
inc
shlb
bound
pop
fimuls
xchg
cli
addb
mov
jecxz
push
sub
mov
jmp
push
lcall
jns
jnp
icebp
push
pop
lahf
leave
lcall
adcl
shlb
cmpsl
push
inc
mov
loop
jae
enter
mov
jmp
cli
clc
test
es
pushf
or
push
xor
jae
pop
in
and
popa
jp
imull
in
adc
adc
test
fdivr
leave
lret
cmc
out
popf
popa
arpl
in
test
inc
cmp
dec
in
ss
and
inc
sbb
mov
jne
mov
popf
into
push
mov
sub
popf
pop
mov
adc
mov
dec
cmp
popa
rcrb
lods
sbb
ficompl
sbb
sbb
push
xchg
insl
fisttps
fldt
xchg
movsl
cmp
push
fidivrl
cmp
outsb
xchg
sarl
dec
pop
or
pop
negb
hlt
nop
or
and
out
push
stc
lea
mov
sub
pusha
loopne
lcall
ror
xchg
scas
fsts
nop
xor
outsl
cltd
or
out
mov
loopne
ret
xchg
enter
jp
jb
jb
or
lcall
sbb
ljmp
in
pushf
or
push
lds
aaa
mov
or
add
or
cltd
fisttpll
sub
sti
cmp
adc
fisubrl
add
vmovlps
imul
cmp
test
leave
dec
imul
jae
das
cmc
pop
or
mov
pop
in
setge
xchg
dec
mov
mov
sub
in
fwait
jecxz
sbb
jmp
cltd
xchg
xchg
jmp
xchg
cmp
xor
push
in
lcall
pop
lock
xchg
xlat
sub
xor
scas
fwait
ds
insl
test
push
mov
lock
in
inc
push
mov
int
sbb
js
sbb
test
dec
shr
and
adc
pop
dec
dec
lahf
sbb
test
xor
cmp
mov
popl
rol
addl
mov
sub
jp
jmp
ja
into
push
mov
jo
sub
inc
sub
push
hlt
fisttpl
pop
cmc
cld
sub
jp
test
subl
iret
cld
inc
jo
insb
ljmp
jge
xchg
inc
cwtl
dec
and
out
popf
inc
pop
mov
out
mov
adc
adc
clc
test
mov
add
push
lods
mov
or
outsb
iret
add
mov
stos
vcvtsi2sd
add
jo
cltd
adc
sub
push
jp
jns
pop
jmp
adc
pop
sti
push
adc
jae
push
inc
lret
test
pop
cmp
scas
test
and
adc
mov
nop
ret
test
call
shr
int
mov
or
sub
lret
sbb
jbe
cmp
fbstp
loop
sbbb
aam
movaps
pusha
cmp
rorb
loopne
pop
xor
adc
mov
xchg
jmp
dec
addr16
sub
adc
lds
xchg
mov
fsubr
movsb
pusha
repnz
inc
mov
mov
and
jae
xor
add
add
hlt
dec
inc
push
js
pop
jp
arpl
jnp
outsl
imul
aaa
cmp
scas
dec
dec
xchg
or
fbstp
ja
out
mov
pop
out
pop
mov
mov
xchg
cwtl
xchg
push
sbb
inc
test
shrb
cmpsl
orw
fildl
es
insb
jne
mov
jg
das
sbb
fmuls
jo
loope
negl
pop
cmp
mov
iret
or
add
pop
int
xchg
stos
xchg
cli
ljmp
lea
push
orb
stos
mov
mov
or
push
mov
mov
mov
out
aam
sub
addr16
aas
dec
lds
pop
outsl
popa
pop
jne
sub
lods
xchg
add
aas
sbb
lret
out
movsl
inc
sbb
cmp
pop
in
push
rorl
lret
fisubrs
xchg
cmp
inc
outsb
and
push
iret
or
xchg
mov
push
mov
mov
mov
mov
enter
xchg
mov
jmp
pop
dec
xorb
out
loope
mov
scas
xchg
fldcw
stos
mov
andl
pop
out
insl
pop
inc
stos
jecxz
test
or
mov
inc
adc
or
mov
lcall
mov
fcoml
inc
jo
and
cmp
insl
adc
mov
sti
lret
pop
pusha
pop
rcrb
addr16
outsb
and
dec
int3
xchg
push
sbb
lret
daa
pushf
popa
push
mov
sub
add
pop
in
and
jbe
or
enter
cmp
movb
imul
cwtl
mov
pop
mov
push
out
mov
stc
mov
mov
cmc
sbb
mov
cmp
arpl
push
ffree
mov
inc
sub
or
ds
out
sub
movl
fcoml
gs
xor
push
jecxz
les
sbb
inc
xlat
push
add
sbb
xor
sti
dec
insl
sub
dec
ja
pop
push
cmc
out
and
fildll
or
rcll
out
dec
leave
mov
ljmp
test
inc
mov
clc
lcall
pop
sub
jb
fisubs
mov
bound
cmpsb
mov
mov
jb
xchg
mov
dec
scas
out
mov
popa
cmp
in
lret
add
or
add
sbb
fs
leave
mov
push
adc
sub
dec
out
sti
std
push
pushw
lahf
movsl
and
xchg
insb
xor
mov
xor
imul
sahf
inc
loopne
jnp
jp
ficoms
inc
popf
lret
inc
add
lds
out
mov
in
les
mov
fldt
xchg
scas
mov
jle
xor
fwait
lret
movsl
push
jp
mov
mov
pop
xor
push
pop
test
lret
int
nop
pushf
xchg
mov
mov
mov
push
clc
frstor
cmp
add
int
pop
adc
jmp
push
daa
jb
outsl
or
sbb
std
ret
cmp
push
popa
add
or
xor
push
cmp
sbb
sub
xchg
pop
mov
out
sti
inc
mov
insl
sbb
outsl
inc
fistpl
das
cmpsl
movl
movsb
mov
popl
daa
mov
in
jae
mov
repnz
mov
and
xchg
ret
fwait
jo
dec
add
ja
mov
ret
xchg
stos
and
sbb
adc
lret
dec
mov
adc
pop
stc
or
jnp
mov
fistps
pop
retw
mov
inc
mov
shr
or
in
call
leave
jp
sub
out
xlat
loopne
jns
xchg
bsf
xor
ret
out
sub
adc
decl
daa
dec
xor
mov
cmp
jle
lock
mov
mov
inc
pop
mov
pop
rolb
cli
adc
lods
cmpsl
mov
sbb
out
test
jl
into
stos
push
popf
xor
std
in
and
lds
loope
mov
lret
fdecstp
xor
xchg
jb
fcomps
pop
int3
push
test
xor
scas
pop
push
push
dec
jns
lock
rclb
lds
xor
pop
ret
adc
in
mov
cmp
aaa
sbb
test
or
push
pusha
fcoml
daa
jecxz
add
adc
je
inc
in
cmc
mov
lods
lea
lret
mov
sbb
cmpl
push
fstpl
imul
ficoml
fcmovbe
add
test
aaa
jne
mov
into
xor
and
pop
repnz
mov
add
inc
mov
sbb
mov
xchg
sbb
inc
xchg
and
dec
push
das
xchg
mov
inc
fidivs
push
push
outsb
icebp
mov
loop
or
dec
push
or
xchg
jmp
inc
ss
sbb
mov
add
mov
inc
inc
out
fistl
jle
jp
jae
adc
xor
mov
sub
xorb
insb
mov
xor
sahf
cmp
pop
or
add
cmp
cltd
add
shll
xor
mov
jnp
adc
cmpsl
pop
pop
out
mov
xchg
add
fstpt
or
lahf
stos
cmp
push
dec
push
pusha
mov
lods
adc
pushf
bswap
mov
add
je
gs
loope
out
mov
dec
add
and
stos
jecxz
push
push
lods
shl
jne
lock
dec
pusha
xlat
adc
addr16
aaa
sbb
loope
cmc
sub
sbb
jae
cmp
leave
pop
pop
imul
mov
mov
stos
aam
mov
mov
dec
and
push
sbb
movsb
push
sarb
cmp
decl
enter
call
aad
pop
pop
je
mov
cmp
and
pop
xchg
jb
and
mov
adc
es
rclb
clc
mov
and
sarl
and
cmpsl
fwait
mov
subl
adc
test
cmpsl
test
loopne
xchg
stos
mov
out
pushf
cwtl
dec
and
in
rcll
sahf
mov
mov
popf
cs
nop
es
scas
out
cmpsl
push
push
xor
push
cmpsl
or
std
lcall
or
div
cld
lods
mov
mov
sub
sarl
popf
addb
jl
inc
inc
arpl
scas
jmp
test
mov
ds
ljmp
mov
pop
sub
lahf
push
roll
out
push
mov
pop
mov
daa
adcb
ret
inc
jl
loop
repnz
cmp
inc
pop
mov
addr16
lahf
fildll
sub
imul
mov
in
push
add
inc
mov
mov
push
dec
or
cmc
jp
mov
stc
rcrb
sti
lods
loopne
jmp
test
mov
gs
push
mov
dec
fildl
push
jmp
stc
sub
jp
ret
cmpl
jl
cmpsb
sbb
sbb
rcrb
cmp
dec
in
enter
vcmppd
or
sbb
incl
inc
xchg
rcr
ret
xor
sub
xor
push
pop
cld
enter
pop
xor
inc
arpl
sub
lahf
dec
adc
inc
lea
je
cs
into
mov
lock
sub
sahf
sbb
cmc
xor
insb
popa
lret
sub
mov
es
dec
xchg
lods
mov
andl
stos
arpl
xchg
mov
lahf
aaa
in
push
mov
data16
stos
sahf
aaa
scas
sbb
push
or
jbe
push
sbb
xor
xchg
insl
out
pop
pop
fildl
lods
ljmp
jecxz
cwtl
cwtl
cmp
popa
bound
jge
push
adc
out
clc
outsl
fstpl
xorl
adc
popf
adc
add
xchg
mov
ljmp
sub
jecxz
adc
ficomps
pop
dec
xor
bound
sub
push
or
jge
fdivrl
xlat
adc
cs
adc
ljmp
aad
stc
les
cmp
inc
movsl
aad
cmp
xchg
xchg
xchg
xchg
pop
mov
lret
test
icebp
out
movsb
xchg
inc
dec
shrb
das
mov
mov
popf
fiadds
push
ds
jle
jecxz
nop
test
scas
and
scas
xchg
jne
add
pop
xor
add
mov
xchg
mull
fcmovnbe
inc
shlb
lea
cltd
imul
or
push
repz
push
add
fstl
adc
xor
lret
jmp
es
stos
sub
jbe
push
or
dec
shlb
leave
mov
popf
pushf
call
jnp
in
lret
icebp
fcmovnbe
jg
out
xchg
fbld
in
fildll
add
leave
and
into
sub
leave
lretw
icebp
or
push
jecxz
inc
in
pop
fidivl
dec
ljmp
jno
bound
inc
sti
jb
mov
aam
inc
push
out
hlt
sub
loopne
push
fs
lea
add
push
fisubrl
xor
shlb
pop
stc
pop
cli
into
mov
outsl
xlat
mov
imul
jmp
mov
add
ror
fsubs
pushf
dec
mov
jno
arpl
pop
jne
mov
lods
mov
push
add
add
jecxz
fisubrl
test
aas
sti
aad
pusha
add
in
sbb
jae
lea
push
mov
add
enter
aad
mov
xorl
std
cld
xchg
inc
std
jg
clc
mov
sub
popa
cmc
inc
mov
int
movl
movsl
xor
jl
or
test
pop
adc
sarl
or
aad
jne
pop
inc
add
dec
jge
iret
repnz
push
sbb
pop
mov
mov
mov
mov
push
addl
dec
test
test
mov
push
mov
push
into
movsb
ljmp
xor
cmpl
mov
les
cmp
out
xchg
rcll
jne
insb
test
rorb
jmp
mov
subb
or
movsb
out
fwait
int
pushf
aas
jmp
jb
pop
fwait
mov
or
ljmp
idivl
push
in
loopne
sbb
cli
fsubrl
xchg
sarl
xlat
cmp
fildll
movsb
adc
mov
or
js
stos
sbb
dec
sarl
daa
ret
daa
sbb
pop
lds
addr16
add
push
mov
imul
sar
sub
inc
ljmp
js
sub
or
pop
pop
popa
cmpsl
lods
incl
psrad
adc
in
cli
out
insb
pop
mov
xchg
aaa
inc
jl
and
push
push
sbb
jg
or
shrl
dec
js
aas
xor
cmp
scas
pop
and
sub
hlt
add
lods
stos
jg
fdivrl
cld
pop
insb
inc
pop
pop
inc
clc
stos
aad
add
xchg
inc
ficoms
lods
pop
cmpsl
or
insl
loopne
pop
adc
jo
pop
inc
push
xlat
cli
add
cmpsb
fistpll
dec
jmp
jge
dec
dec
cli
sahf
add
incb
out
ljmp
fcomps
xchg
daa
push
push
jg
lock
cmp
gs
jnp
shl
add
int
movsl
cmc
mov
mov
jb
push
mov
pop
loopne
lcall
xchg
sbb
js
addr16
add
adc
and
es
jno
test
popa
sub
in
jge
aas
mov
adc
or
jge
xor
out
or
xor
mov
adc
push
repnz
pop
sub
jne
ds
mov
dec
fdivrs
clc
je
flds
shll
shr
lcall
call
jb
lcall
pop
mov
stos
orl
iret
push
mulps
pop
xchg
xor
aad
lahf
ljmp
test
fmull
pushf
add
push
add
push
xchg
xchg
sbbb
aaa
add
mov
push
aaa
adc
dec
leave
pop
std
test
sub
hlt
loopne
mov
dec
inc
and
iret
sbb
into
stos
xor
mov
data16
fwait
shr
add
addr16
or
sbb
jb
xchg
cli
mov
and
sbb
xchg
cld
mov
cmp
out
bound
mov
push
xor
or
add
xchg
cltd
jno
xchg
cmp
sahf
negl
mov
in
mov
inc
test
xchg
popl
cmp
cmpb
or
mov
cmp
adc
inc
xor
inc
int3
movsl
es
sahf
sub
int3
clc
xorb
cmpl
sub
mov
jmp
sub
test
or
cmp
pop
xchg
and
push
push
mov
enter
mov
clc
xchg
dec
ljmp
sbb
test
adc
int
sub
or
fs
mov
adc
stc
ja
or
push
jge
cmp
pop
popa
loopne
testl
shr
jle
ss
xchg
pop
outsb
call
insl
call
add
movsl
sbb
xorb
adc
aad
out
shll
sub
scas
iret
ffreep
xorl
aad
test
jno
mov
mov
sarl
bound
das
xor
pop
test
fidivs
mov
pop
add
sub
loopne
cmp
dec
cmp
dec
mov
ret
xchg
ret
or
xor
and
mov
clc
scas
sbb
stos
repnz
outsl
pop
mov
or
xchg
js
inc
xchg
pusha
test
ret
cld
scas
mov
shlb
out
dec
call
jnp
daa
pop
pop
pushf
inc
mov
xlat
xchg
adc
or
fnstenv
iret
icebp
ret
xor
loop
jmp
sub
inc
cmovno
add
mov
pop
daa
in
mov
push
das
xor
aas
jmp
inc
gs
test
sub
inc
mov
lods
push
sub
add
xor
fdivl
add
jmp
xchg
adc
cli
sbb
and
jle
mov
aaa
add
pop
inc
and
cmp
mov
out
push
movsb
or
pop
loopne
mov
and
mov
sub
push
movsl
mov
iret
mov
test
call
or
test
push
xor
adcb
shrl
pop
mov
and
jg
xchg
arpl
ror
mov
mov
adc
adc
mov
inc
sub
fdiv
or
aaa
fxch
in
dec
mov
and
int3
xlat
clc
scas
stos
mov
cmp
mov
mov
mov
das
ror
out
dec
clc
hlt
and
pop
or
xor
jb
cmpsb
repnz
pusha
lcall
mov
loope
add
iret
dec
mov
cmc
divb
or
subb
cmp
or
repz
dec
lcall
bound
cld
mov
cmc
les
idivl
push
and
cltd
pop
and
xor
mov
cmpsl
clc
and
xchg
imul
mov
mov
add
outsl
inc
xchg
mov
xor
ret
lahf
and
pop
mov
mov
insl
push
scas
sub
movsb
loopne
loope
or
icebp
xor
shlb
or
add
sub
or
sarb
aam
jge
mov
jae
sbb
loope
test
sub
aam
sti
rorl
popf
mov
jnp
inc
scas
inc
je
iret
fcomip
fimuls
sub
inc
lcall
sahf
jnp
mov
mov
xor
adc
sbb
jbe
rcl
js
mov
cmpsl
lahf
je
inc
hlt
pop
rcrl
aaa
fstpt
jl
fildl
cmc
xchg
fsub
xchg
sub
andb
loopne
adc
dec
inc
mov
jmp
xorl
lret
jae
and
inc
mov
movsl
push
loop
mov
xchg
add
sub
xchg
or
or
jecxz
filds
inc
pop
cld
int3
dec
mov
dec
aas
je
lock
dec
ljmp
mov
inc
out
jmp
in
ljmp
fs
test
test
jo
xor
push
pop
scas
sbb
xor
push
in
dec
orb
ja
cmp
int3
and
cmpsl
repnz
stc
push
or
fnstsw
test
int3
scas
jmp
jno
nop
cli
cmp
js
jo
mov
stos
iret
in
aad
stc
mov
jp
xchg
ljmp
cmpb
push
test
addr16
in
fnstcw
fistl
adc
sub
orl
lcall
adc
or
mov
movsb
adc
push
cmp
add
lahf
mov
jecxz
sub
loope
frstor
stc
jmp
jge
pop
jge
outsb
adc
cwtl
enter
call
mulb
arpl
add
and
pop
addb
jae
mov
andb
push
in
clc
jg
push
out
jmp
push
adc
xchg
outsb
cmp
mov
cmp
and
inc
sub
sbb
sti
mov
roll
adc
adc
jbe
push
push
adc
inc
in
scas
sub
sub
iret
dec
ds
and
das
fidivl
shl
sbb
sbb
mov
or
nop
cmova
adc
sub
cmp
jl
aas
push
dec
mov
fwait
int3
sbb
adc
push
pop
js
jp
dec
fbld
or
cltd
mov
xchg
iret
lret
pop
xchg
repz
int
popl
push
pop
mov
mov
mov
dec
in
or
in
jne
add
adcl
int3
repz
pushf
adcb
mov
pop
nop
add
jno
xor
jle
sub
out
arpl
xor
jb
test
aad
and
loopne
mov
ljmp
shll
adc
mov
shll
mov
lds
sbb
mov
idivl
pop
repnz
mov
fld
rclb
ds
adc
add
in
sbb
sub
mov
clc
sbb
inc
inc
ss
mov
inc
inc
dec
lret
push
xchg
imul
test
and
dec
lret
xor
and
jbe
test
test
lret
xchg
ja
add
in
lods
or
jae
sbb
fiadds
mov
push
in
iret
inc
testl
dec
es
imul
int3
lcall
rclb
stc
push
fidivrl
mov
sub
inc
mov
loop
je
pop
pop
lods
mov
sarb
pop
mov
lret
fcmovu
jle
push
pop
insl
or
dec
pop
fists
mov
inc
rolb
push
push
popa
pop
out
lahf
mov
push
pop
cmpsl
arpl
sbb
lcall
shlb
call
mov
rcr
arpl
fsubrs
push
cmp
xor
dec
cmp
adc
xchg
xchg
and
imul
adc
inc
adc
inc
sbb
movsl
int3
and
sub
xlat
popa
xor
xchg
movsb
imulb
jae
test
lods
fsubrl
jne
outsl
cli
das
cmp
imul
cld
subb
mov
jmp
andl
enter
cmp
pop
jnp
fcoms
sbb
enter
dec
lret
add
lea
jns
ljmp
xchg
test
and
jl
shrb
xchg
fisttpl
loopne
jbe
sti
pop
xor
mov
xor
hlt
fdivrs
int3
sub
inc
push
jp
loopne
lods
sti
mov
loopne
pop
xchg
pusha
cmp
pop
repz
lods
and
cmpsb
pop
cltd
mov
xchg
stc
ja
test
add
add
sti
jle
cmpsl
ds
or
or
mov
addr16
dec
pop
rolb
mov
push
imul
push
inc
fistps
xor
fwait
mov
jb
adc
clc
cwtl
jnp
push
mov
loopnew
jecxz
stc
xor
sub
adc
popl
sar
dec
sbb
lods
cmpsl
fwait
lahf
imul
cmpsl
enter
sbb
sbb
mov
sbb
sbb
push
mov
int
cmpsl
aaa
mov
repnz
aaa
xchg
dec
lcall
sarl
js
mov
imul
cmp
pop
mov
mov
mov
pusha
add
cmp
or
test
out
add
xchg
movsb
out
sti
test
push
es
aam
andb
ffreep
inc
outsb
aaa
mov
pushf
push
or
les
int3
dec
clc
lret
pop
dec
insl
fs
pusha
outsb
out
dec
jmp
xchg
mov
roll
pop
jb
mov
loope
ret
dec
xchg
push
mov
xor
int
mov
fmul
sbb
inc
data16
cmp
add
stos
sub
insb
xchg
not
inc
jbe
jnp
or
lea
lcall
sub
scas
addb
push
out
movsb
inc
mov
sti
testb
iret
mov
insb
rclb
lret
stos
sahf
in
int
rclb
movsl
leave
lcall
dec
fdivs
or
mov
fldt
adc
pop
sub
xchg
les
sar
andl
ss
jl
lret
push
lods
test
in
in
xlat
xchg
stos
fidivs
std
fidivrs
out
in
push
lret
clc
insl
jb
popf
jno
pop
adc
jmp
inc
notl
test
pop
repz
or
ret
test
ret
ja
adc
pop
cmp
add
shrl
fistpl
xchg
loopne
adc
das
or
cmp
sarl
fsubs
mov
dec
out
and
jno
add
xchg
jge
mov
dec
cmp
or
outsb
popf
or
mov
cmp
cld
insb
inc
sub
push
dec
mov
mov
stc
shll
push
mov
jae
fidivs
mov
icebp
mov
sahf
add
add
jle
subb
add
pop
cld
and
int
jle
jle
scas
sbb
push
sbb
shlb
jb
das
pop
arpl
and
sub
fwait
int
xchg
gs
shll
fwait
push
stc
insb
push
test
pop
aam
outsb
mov
xorb
sbb
pop
and
je
int
lret
xlat
inc
sbb
sbb
pop
mov
pop
inc
add
jns
sbb
sbb
sbb
or
jnp
and
xlat
and
or
mov
mov
mov
or
adc
pop
insl
xor
test
ror
adcb
xorb
cmp
inc
dec
adc
jp
lret
add
add
aas
and
mov
cltd
popa
push
xchg
mov
nop
rcrb
push
sub
aam
sub
xchg
popf
out
in
arpl
test
jne
jbe
cmp
xor
dec
add
xchg
dec
xor
mov
push
pop
in
cmp
ja
pop
clc
mov
mov
orb
pushf
jmp
ret
outsb
pop
xor
dec
mov
movsb
mov
push
fistpll
xchg
or
pop
movsl
sbb
cmp
push
add
ret
jnp
adc
dec
in
cli
xchg
mov
dec
sbb
pop
push
pop
xlat
mov
out
les
sub
fldenv
leave
jmp
in
popf
push
push
in
std
pop
lret
xchg
data16
sub
loop
sub
and
cmp
add
jmp
sbb
xchg
ja
xchg
or
in
adc
pop
mov
ret
ja
sti
ss
push
cmpsl
xor
andb
scas
mov
idivb
mov
loop
lret
popf
cmp
out
pop
pop
ljmp
hlt
aad
dec
dec
cmp
cmpsb
mov
adc
mov
sub
push
fbstp
cmpsb
mov
pop
inc
cwtl
xchg
dec
mov
pop
lret
mov
in
xchg
mov
pop
cmp
push
and
pop
test
stos
dec
and
adcb
imul
pop
mov
enter
enter
pslld
aas
gs
test
insl
test
add
stos
push
adc
jo
lds
mov
outsl
pusha
lea
jg
shr
arpl
icebp
test
rcrl
ds
adc
lea
sub
stos
pop
insl
rcl
lds
add
clc
iret
lret
pop
xchg
push
xchg
cltd
sub
out
jl
es
repz
or
pop
jne
les
data16
push
ficomps
mov
xchg
dec
sub
movsb
in
mov
adc
in
cwtl
xchg
xor
cltd
repz
adc
push
and
push
and
aaa
repz
xchg
jecxz
mov
xchg
fwait
xor
push
mov
shll
mov
sub
mov
dec
mov
inc
inc
mov
cwtl
push
iret
int
test
jbe
loop
dec
mov
mov
icebp
loope
pusha
je
repnz
notb
and
sti
enter
loope
shll
dec
lds
nop
into
rolb
jbe
cmpsb
popa
jge
lock
push
movsb
xchg
mov
mov
cmp
inc
scas
stos
mov
pop
leave
xchg
rcll
lds
fdivrl
loopne
inc
xor
cwtl
iret
and
bound
sbb
mov
lret
sbb
jno
call
adc
jg
jp
mov
and
je
add
or
data16
es
ret
mov
rcrl
pop
inc
sahf
sbb
sbb
bound
std
mov
jmp
xchg
mov
sub
inc
mov
mov
test
fnstcw
in
mov
sub
inc
mov
add
and
add
loope
jb
pop
loopne
test
ja,pn
int3
inc
pop
js
xor
or
push
movsb
mov
xchg
lock
inc
aas
sbb
mov
mov
cmp
subl
jle
mov
shrb
out
fcoms
int
lret
xchg
and
xchg
lret
xchg
lds
sbb
out
popl
inc
xchg
jg
adc
jmp
test
mov
mov
sub
hlt
lea
aad
mov
sbb
pushf
lret
push
cmp
fildl
dec
shrl
repz
int
xchg
cmp
mov
mov
ret
xchg
int3
lret
or
sbb
out
stos
xchg
sbb
and
stos
dec
mulb
cltd
cmpb
mov
pop
arpl
or
xchg
hlt
stos
dec
xor
fnstenv
xchg
cld
dec
sbb
push
push
sbb
scas
mov
mov
sub
push
ret
cmp
mov
aaa
xchg
mov
or
xchg
test
xor
or
lahf
cmp
inc
mov
add
insb
shrl
shrb
ds
ret
mov
xorb
dec
aad
mov
mov
dec
mov
jge
aas
and
lods
test
add
jae
out
jb
cmpsl
sbb
iret
cwtl
add
imul
inc
filds
xchg
inc
jno
sub
arpl
jbe
cmc
out
jns
out
sub
sbb
adc
inc
and
mov
cmc
inc
int
mov
pop
push
and
push
nop
jl
xchg
jg
mov
je
inc
emms
inc
jne
pop
jl
arpl
or
in
sub
pop
add
or
in
scas
xchg
push
mov
mov
xor
cs
jo
jns
rclb
rcr
adc
enter
mov
orl
lahf
adc
dec
out
aaa
cli
and
lea
sti
sets
mov
fadds
flds
std
lret
arpl
jae
xor
das
and
push
loopne
push
pushf
sub
sub
int3
sti
into
ljmp
lahf
push
xchg
xchg
adc
xchg
call
cwtl
repnz
inc
mov
insl
sbb
ds
je
lret
jmp
nop
cli
scas
push
bound
inc
or
xor
mov
pop
pop
dec
inc
leave
cltd
out
add
mulb
pop
clc
xor
lods
cmpsl
out
dec
adc
add
xchg
jo
mov
inc
mov
rcll
jo
xor
shl
dec
cmp
fwait
inc
jae
add
jl
loope
lods
decl
mov
dec
xor
sbb
fcompl
repz
mov
mov
push
adc
outsl
pop
add
dec
loop,pn
mov
daa
adc
dec
lahf
or
ret
mov
daa
aad
xchg
icebp
xchg
cmp
lahf
mov
jb
mov
cmp
add
pop
lahf
jno
cmc
mov
xor
push
test
xlat
cmp
pop
fcmovnbe
and
xorl
pop
in
xchg
mov
cmp
aam
clc
lock
sub
sub
stos
mov
mov
into
jg
imul
pop
sbb
mov
pop
int3
pop
or
or
fldl
dec
mov
xchg
sub
stos
stos
push
cld
xchg
xchg
rcl
cmp
lock
fistpl
or
lea
insl
xor
fsub
das
lea
loope
outsl
aam
test
lret
fadds
adc
and
ljmp
inc
mov
cltd
pop
jecxz
fnstcw
aam
jge
repnz
out
push
daa
sahf
repz
adc
insb
fs
idivb
fisubrs
adc
movsb
ret
mov
fidivl
push
dec
jns
mov
cld
mov
and
sub
jb
popa
es
in
rcll
push
pop
or
mov
cmp
test
mov
xor
cmp
mov
clc
cmc
movsb
mov
daa
sub
pop
dec
pop
mov
adc
push
adc
fmull
and
cmp
in
test
sub
stc
push
insb
jae
fcoml
lock
movsb
popf
dec
mov
lahf
rorl
xor
lret
sbb
add
rcrl
fistpl
xchg
jp
sub
push
rcll
stos
cmp
jns
sbb
add
inc
inc
lahf
int
imul
lret
imul
stos
inc
add
jo
mov
mov
in
scas
test
aaa
loope
das
inc
push
jge
fnstenv
nop
mov
jnp
ficoml
not
in
mov
je
xchg
outsb
fisttpll
out
adc
jecxz
dec
les
add
or
fucom
add
mov
std
test
in
sbbb
ljmp
mov
sahf
inc
and
pop
push
lcall
dec
push
out
aam
inc
scas
sbb
push
push
hlt
mov
insb
call
xchg
or
pop
push
cmp
repz
jl
add
aad
mov
test
inc
inc
mov
aas
pop
cmpsl
lcall
xor
mov
sub
add
dec
mov
imul
add
nop
pop
push
mov
sti
fisubl
mov
xor
mov
jae
xchg
push
sahf
or
cltd
mov
pop
fwait
xchg
push
push
xchg
mov
cmp
adc
sahf
int3
aam
loope
mov
add
fimull
add
out
xchg
and
pusha
mov
push
mov
outsl
gs
sub
in
sarb
sub
mov
fsubl
loop
std
fisubl
or
int3
sahf
pop
aam
cmp
xchg
adc
xchg
xchg
pop
jecxz
inc
xor
sub
bound
daa
cli
push
and
enter
cmp
inc
jb
fdivs
xchg
iret
stos
cmp
pushf
inc
or
pop
popa
stc
shlb
add
inc
enter
test
jg
add
sub
pmulhw
inc
rclb
leave
push
das
ret
call
pop
sbb
cmp
inc
lock
add
jge
aam
push
negb
lcall
mov
push
or
out
mov
test
pop
rcrb
xchg
inc
es
jo
loopne
dec
and
ljmp
shrb
scas
xor
xor
insb
adc
je
lret
add
or
repz
fcoms
jg
dec
loopne
and
sub
mov
mov
scas
cmp
xlat
push
ss
vmread
popf
ja
fwait
jo
mov
mov
mov
popa
imul
xchg
cmp
shll
xchg
mov
dec
clc
in
je
push
sub
and
mov
push
mov
ljmp
es
call
xchg
add
push
push
aaa
mov
sub
xchg
pop
sbb
imul
pop
add
xchg
push
scas
out
push
sahf
mov
in
mov
xchg
je
fdivrl
jmp
or
fidivl
stos
lods
sbb
fldenv
movsb
int
lock
sub
pop
inc
mov
inc
xor
clc
stos
jg
xchg
imul
and
cmp
mov
cmpsb
cmc
jl
sbb
inc
inc
fiadds
jecxz
ror
push
mov
aam
xchg
call
add
aaa
enter
pop
pop
cmp
or
loop
int
cmp
push
aas
testb
push
mov
in
dec
push
jge
repz
adcl
mov
and
popa
loope
pop
movsl
movsb
add
cltd
into
loope
sub
inc
pop
dec
and
cmp
fdivp
add
movups
dec
or
lcall
inc
jge
pushf
jle
mov
inc
shll
mov
jno
pop
lret
pop
fdivs
ret
mov
loope
xchg
jl
jg
xor
pop
xor
pop
pop
xchg
mov
adc
sbbl
or
mov
cmp
sbb
or
adc
xchg
push
xchg
std
jae
movlps
and
xchg
mov
pop
jmp
sbb
nop
enter
add
outsl
xchg
dec
cmp
and
cmp
xor
fucomi
popa
out
out
cli
stc
dec
mov
xchg
stos
sbb
test
mov
ss
mov
loopne
hlt
mov
xchg
test
mov
scas
shll
imul
loope
jecxz
fstpt
cs
cmp
lods
movsb
sbb
add
ficoml
ds
fsubrl
int
scas
sub
icebp
jmp
adc
dec
mov
jle
pusha
push
or
xchg
test
mov
inc
mov
cmpsl
cmp
shl
sub
popf
fisubrs
pop
cmp
fidivs
inc
xlat
scas
jae
jae
aaa
sbb
pop
outsb
cmc
pushf
cmp
inc
xchg
es
test
scas
pop
roll
sar
icebp
das
aad
jo
test
int3
cmc
mov
mov
mov
in
and
arpl
sbb
cs
and
mov
jae
xlat
jnp
or
cwtl
aas
push
movsb
pop
movsb
pop
or
jnp
mov
insb
mov
mulb
ljmp
push
int
and
dec
gs
jg
scas
out
lcall
or
out
or
call
cld
dec
mov
daa
jecxz
int3
loope
fbld
je
xchg
mov
mov
or
cmpsb
pushl
push
aam
and
add
out
push
nop
xor
jg
addr16
fiadds
mov
loope
cmp
idivl
jbe
rorl
or
inc
push
push
fcomi
or
loop
jo
cmp
or
pop
lret
xor
out
push
add
or
cld
movsb
sub
shlb
dec
add
dec
popa
inc
push
push
adc
inc
lcall
arpl
and
jle
cltd
cmpsl
fisttps
lcall
pushf
xor
test
mov
icebp
loop
mov
ret
sbb
in
and
cwtl
jp
idivl
test
jle
getsec
inc
mov
mov
fdivrl
shll
dec
in
repz
sub
sub
mov
decl
jg
or
mov
jbe
push
add
jo
adc
iret
movsb
mov
xchg
out
add
popa
or
arpl
outsb
mov
mov
cmp
aas
cmp
ss
jns
or
repnz
pop
mov
push
xchg
aad
pop
push
inc
arpl
or
push
loopne
fwait
stos
jecxz
xor
fstp
scas
or
mov
inc
lods
pop
bound
or
cld
aas
jbe
xchg
subl
inc
filds
popa
add
out
les
movl
in
mov
ds
cmpsb
mov
pop
fwait
int
xor
fwait
xchg
mov
in
jne
and
cmp
mov
lods
fwait
repnz
dec
jno
cmc
inc
out
shr
lret
fs
adc
adc
add
inc
aas
sbb
clc
push
mov
ud1
mov
jbe
mov
in
cmpsb
fsubrp
cld
pusha
data16
stos
clc
add
lock
pop
inc
fcomps
sub
sti
repnz
fbld
add
bound
insb
fists
pop
aam
push
test
aad
cmpsl
sti
sub
cltd
scas
push
jg
adc
insl
jbe
out
cmp
mov
out
jae
andb
mov
or
movsb
inc
mov
jmp
outsl
repnz
leave
rolb
iret
lds
dec
lock
lods
cmp
xchg
xor
push
sbb
cmp
movsl
mov
push
and
imul
jbe
in
mov
in
adc
dec
adc
add
enter
xchg
gs
clc
movsl
xor
js
pop
cltd
insb
pop
adc
aas
pop
imul
les
mov
subl
call
and
repnz
daa
rcll
xor
xchg
xor
sbb
mov
mov
in
or
out
jmp
push
mov
jp
mov
cmp
mov
sub
cmpsb
cli
mov
cmp
loope
cli
lock
jge
xchg
xchg
mov
cmpl
clc
leave
fistpl
aam
fidivl
jne
add
pop
fildl
mov
dec
jb
inc
mov
nop
pop
cs
add
data16
shll
jae
jae
sub
cli
loop
pop
movsl
arpl
sahf
icebp
imul
test
xchg
pop
in
push
outsb
jae
jl,pn
addl
jmp
test
jmp
inc
inc
cmp
iret
mov
pop
pop
jmp
cwtl
popa
add
iret
leave
cwtl
call
inc
mov
aaa
fs
sbb
mov
jnp
or
sbb
shrb
loope
add
dec
leave
adc
fistpl
xchg
mov
fs
lods
cwtl
add
pushf
inc
inc
pop
xor
lahf
jns
ja
or
lret
in
and
and
xor
xchg
jecxz
lock
pop
fnstenv
daa
sbb
mov
je
push
sub
mov
adc
sub
lds
aaa
enter
adc
mov
mov
aaa
adc
add
sub
and
movsl
cmp
push
sahf
hlt
cmpsb
mov
jmp
sub
adc
lea
sub
or
cmp
add
pminsw
jns
ljmp
mov
aas
xor
sbb
cmp
insl
xchg
clc
pop
ret
clc
sbb
arpl
aam
js
das
dec
xchg
xchg
shl
js
or
add
je
pop
adc
sbb
into
dec
mov
insb
mov
jecxz
pop
adc
xor
pop
fsin
pop
div
cmp
ja
nop
mov
adc
pop
xor
pop
pop
out
inc
lcall
sahf
addl
push
inc
mov
mov
fs
jo
jmp
invd
inc
mov
dec
pop
dec
out
testl
stc
pop
add
add
jne,pn
cmpsb
enter
xchg
popa
xchg
enter
mov
and
and
pop
rep
cmpsl
xchg
outsb
cmpsl
cmc
pop
je
jl
incl
es
rcll
cmp
imul
jp
xchg
jecxz
repz
xor
int
or
mov
iret
scas
xor
dec
sti
pop
in
add
cmp
sub
shlb
or
enter
call
adc
xchg
xor
sbb
pop
psubsw
icebp
xchg
mov
add
or
inc
jno
ficoml
outsl
jne
push
xchg
adc
out
faddl
adc
adc
in
orb
or
inc
sub
sahf
pop
cmp
mov
xor
popa
fwait
cwtl
xchg
es
add
lds
jl
pop
pop
addr16
shrb
out
xor
pushf
aaa
ret
jno
iret
push
in
xchg
jne
jmp
xchg
stos
pop
sarb
addr16
pop
push
cwtl
lahf
aas
call
mov
daa
mov
in
mov
sbb
jl
adc
dec
xchg
inc
jae
rcpps
rcl
mov
jle
jle
icebp
xchg
test
cmp
das
mov
sbb
outsl
dec
flds
sahf
int3
jp
or
sub
xor
es
gs
out
add
aaa
lcall
popf
jne
push
mov
hlt
hlt
icebp
outsl
mov
cld
or
and
adc
insl
stos
mov
inc
or
repz
inc
inc
sub
bound
and
mov
sti
insb
add
movb
popf
push
push
addr16
in
lods
sbb
rclb
popf
int
arpl
ds
pop
cmp
in
shlb
aas
mov
out
loopne
xchg
sub
stc
lret
std
cmpsl
inc
arpl
inc
outsl
dec
dec
push
addl
jmp
mov
mov
orb
fcomps
mov
add
add
fisubrs
add
aas
iret
dec
and
cmpsb
inc
mov
or
mov
stos
clc
xlat
or
xchg
cmp
push
sub
xor
adc
push
std
fstpt
mov
popf
inc
inc
or
xor
adc
loop
ficoms
repz
cmp
pop
in
push
sbbb
stc
sub
sub
scas
test
sub
push
push
fimuls
pop
cltd
xchg
pop
mov
push
or
push
mov
pop
imul
dec
enter
jne
shufps
inc
or
in
movsl
jbe
sub
rclb
adc
or
pop
xchg
loope
loope
push
mov
imull
fbstp
and
rorb
sub
popf
scas
out
adc
pop
mov
test
dec
mov
arpl
jg
mov
insl
cmp
test
int
xchg
insb
adc
lret
repnz
pushf
and
mov
add
xchg
rcrb
test
xor
cmp
dec
add
movl
test
dec
or
loopne
mov
rcrb
loopne
xor
inc
push
jmp
scas
push
stos
jle
cli
fisttpl
mov
jbe
sarb
aad
pop
lods
jae
mov
dec
add
fsts
test
cmc
inc
add
push
xorl
stos
ret
mov
cmp
or
jnp
adc
divb
sarl
cmp
leave
xlat
lret
push
xchg
xchg
push
push
push
or
mov
cmpsb
add
clc
aaa
repz
fiadds
mov
ret
sahf
cs
insl
adc
cmp
mov
nop
in
push
cwtl
jp
mov
xchg
aaa
push
jmp
ljmp
xchg
insl
dec
lock
lock
cwtl
mov
lret
xchg
aam
jecxz
sub
adc
push
test
xchg
cmpsl
dec
and
push
fdivl
inc
stc
out
or
movsb
icebp
xchg
dec
inc
dec
lds
pop
jnp
or
lahf
or
mov
jl
mov
xor
cmp
stc
xchg
sbb
jmp
push
mov
in
pop
inc
jp
repnz
in
xchg
nop
imul
cmp
imul
aas
or
xchg
add
mov
dec
sbb
push
jnp
xor
mov
pop
in
clc
les
js
gs
sti
lods
out
leave
pop
aaa
stc
adc
dec
pop
popa
sub
stc
aad
mov
jne
xchg
inc
and
jecxz
rolb
adc
in
or
rcll
out
add
in
int3
jl
lret
loope
pusha
lret
sub
add
enter
mov
jno
sar
and
mov
xlat
push
pop
inc
push
js
jle
aaa
vmread
and
jmp
mov
leave
aam
jge
cmp
ljmp
fcomps
call
stc
popf
nop
xor
xchg
inc
mov
sbb
sbb
sub
mov
ljmp
fmull
inc
inc
dec
test
es
loope
sub
imull
test
mov
sbb
xchg
ds
dec
js
add
pop
or
lcall
mov
lret
imul
mov
mov
lods
mov
sbb
insl
add
push
jmp
inc
insl
jle
pushf
call
cltd
cmp
adc
leave
mov
xchg
std
jle
icebp
pop
repnz
lds
mov
sub
ret
lods
iret
gs
sub
jle
rolb
inc
mov
dec
push
mov
dec
cmp
popf
jmp
cmp
popf
mov
pop
dec
jae
shl
add
pop
enter
mov
adc
xor
push
andb
xchg
xor
imul
iret
jae
insb
dec
dec
mov
inc
xor
sbb
jae
inc
aaa
mov
popf
ror
mov
rolb
daa
sbb
jns
xor
cmp
jecxz
and
ja
hlt
xor
es
lods
stos
mov
jo
arpl
mov
or
subl
sub
bnd
fcmovnu
pusha
lret
fists
sbb
movsl
mov
imul
test
scas
cmpsb
push
sub
lret
rcrb
shl
rclb
push
jne
and
xor
je
andl
jge
popa
fiaddl
xor
cld
dec
mov
subb
pop
pop
call
xchg
scas
push
mov
outsl
stos
cmp
xor
aaa
xor
clc
jne
xchg
enter
jecxz
repnz
mov
xor
pop
inc
sbb
sbb
jae
out
fsubr
cs
jge
and
ret
xchg
in
or
dec
push
jnp
test
ret
das
xchg
mov
jl
mov
sbb
out
cmpb
jg
push
aad
hlt
pop
add
add
lret
movsb
mov
scas
stos
mov
sbb
push
cmp
adc
adc
push
lods
ds
mov
inc
adc
jnp
addr16
cmp
xor
loope
and
or
cmp
jns
mov
adc
cmp
jbe
push
adc
jbe
or
sub
adc
and
lahf
scas
lock
lds
negb
inc
scas
push
mov
scas
xchg
mov
and
pop
scas
pop
roll
pop
fisttpl
xor
cwtl
mov
ljmp
bound
aaa
pop
out
dec
xchg
cmpsb
cmp
daa
cmpsb
scas
pop
jb
test
repnz
dec
xchg
jb
jo
popf
pop
mov
sub
insb
mov
lret
cmpsb
nop
movsl
fwait
movsl
push
pop
es
and
shrl
enter
push
and
stc
fcmovu
ljmp
push
mov
divb
cmc
dec
xlat
cs
icebp
sub
xchg
or
int3
iret
dec
rol
int
xor
mov
cmp
cmp
dec
pop
in
gs
ljmp
push
inc
xchg
cwtl
push
adc
in
adc
push
scas
sbb
test
jg
mov
clc
sub
pop
adc
mov
in
fdivrl
mov
out
mov
addl
sub
sbb
or
cmp
stos
mov
xchg
mov
lret
xlat
arpl
pop
xchg
sbb
or
adc
add
loope
outsb
xchg
lret
enter
popf
sbb
mov
lret
icebp
ret
and
mov
lret
call
movsb
sub
adc
mov
aaa
into
pusha
pop
add
mov
mull
push
push
and
ja
sub
jne
sbb
sub
sub
sarl
inc
and
or
mov
fstl
xor
sahf
push
pusha
addl
cmc
sub
outsl
ljmp
xchg
dec
and
enter
fwait
jo
adc
scas
enter
loop
sub
ljmp
icebp
adc
fildl
jnp
repz
js
fimull
movsl
sub
xchg
jg
add
push
aaa
jne
mov
pop
dec
call
imul
xorw
inc
insb
shrl
cmp
xchg
push
or
out
repz
jno
push
roll
adc
fs
insl
cmp
in
push
dec
xor
loopne
push
push
or
clc
lea
or
leave
cli
outsb
imul
das
das
mov
mov
xchg
jg
push
insb
test
pusha
sub
jne
push
test
dec
loop
sub
cmpb
pop
sbb
pop
push
dec
out
loope
loopne
jl
and
push
xor
adcl
in
mov
xchg
dec
iret
push
push
mov
or
test
cmp
or
inc
sti
lods
es
sti
cmp
mov
inc
dec
dec
rclb
mov
les
cwtl
fisttpl
mov
shll
pop
dec
dec
lcall
jecxz
pop
ss
sub
fisubs
enter
test
fldt
inc
roll
and
sbb
lcall
movsb
sbb
aad
je
lret
dec
pop
bound
add
aaa
jmp
sub
incl
pop
gs
xchg
xchg
mov
mov
xchg
js
scas
pop
addr16
ja
loopne
mov
sahf
mov
aad
in
shr
bound
or
loop
aaa
pop
add
test
jge
xlat
dec
packuswb
shl
push
sbbl
scas
lods
stc
sub
rcll
xchg
dec
loop
dec
jo
cli
int3
fnstenv
lods
out
xchg
xchg
push
xchg
nop
lea
or
or
lahf
cwtl
outsb
test
pop
add
addr16
lds
enter
pop
lret
test
pushf
bound
lahf
add
xchg
and
insl
subb
cmc
jge
std
cmpsb
fmull
sbb
sub
mov
clc
ds
push
sarb
iret
int3
cld
fsts
jbe
lea
fwait
shrb
jecxz
sub
orl
sbb
jae
aam
inc
pushf
das
mov
in
fsubr
adc
push
das
push
cmp
sub
sub
jl
mov
fstl
fs
movsl
hlt
cmp
subl
xchg
fs
adc
outsl
stos
out
gs
cmp
mov
dec
sbb
pop
into
mov
and
push
cmpsl
stc
xor
clc
imul
jl
orb
aam
test
jmp
iret
ljmp
negl
lret
pushf
adcl
push
mov
sbb
adc
lret
mov
pop
or
or
mov
nop
leave
into
loopne
mov
ret
mov
movsb
fidivs
pop
repnz
pop
xchg
lock
orl
pop
sahf
ja
cmp
fwait
xchg
or
loop
cmc
stc
add
push
push
in
pop
cmp
into
adc
sub
out
stc
xlat
popa
inc
jg
or
adc
mov
jge
inc
xor
aad
pop
and
daa
lret
out
addr16
fidivs
or
lret
aam
cmp
scas
or
jecxz
divb
mov
xlat
gs
sbb
pop
nop
push
pop
xor
jo
test
or
or
mov
sbb
fidivrl
and
loop
mov
and
mov
jnp
imul
ror
in
jle
arpl
push
and
out
adc
lret
imul
lret
shll
lea
push
popa
and
cmpsb
pusha
mov
cmpsb
dec
push
movsb
dec
arpl
sub
dec
xchg
sbbb
sub
xor
cmpl
xor
insl
lds
pop
ret
inc
scas
cmp
cmpsl
pop
popf
adcl
in
mov
lock
imull
stc
add
shll
rclb
es
push
stc
das
jp
test
mov
stos
rcll
jle
pop
scas
imul
mov
call
xor
cmp
lcall
cmp
sub
insl
xchg
jp
std
sbb
sbb
insl
es
in
and
mov
cmp
push
add
leave
ljmp
sub
fisubrs
xchg
bound
xor
js
xchg
cli
xchg
cwtl
std
js
mov
add
jbe
jns
or
inc
push
loop
imul
notl
pop
call
and
test
add
fidivl
jl
sub
je
xor
insl
aam
push
ficomps
pop
outsl
pop
cmc
divl
push
dec
xchg
push
hlt
sub
bound
jb
mov
movsl
jb
cmp
addr16
negl
repz
push
incb
lods
popa
iret
push
mov
lock
je
sahf
inc
or
bswap
lea
cmp
rol
shl
sub
dec
or
xchg
mov
roll
push
out
out
testb
movsl
mul
push
jmp
cmp
cmpl
xchg
inc
or
and
test
fisttpll
aad
outsl
fisttpll
dec
in
pop
xchg
outsb
pop
lds
mov
mov
adc
mov
mov
xor
sahf
xchg
mov
jl
mov
das
pop
ss
push
daa
inc
movb
popf
mov
or
jo
repnz
lock
mov
ja
mov
mov
mov
out
pop
in
loop
and
scas
jns
jmp
cmpsb
lods
lods
sub
and
pop
mov
mov
ret
icebp
test
or
lea
jecxz
push
adc
jnp
dec
daa
imul
mov
call
add
pusha
sahf
lret
add
aad
mov
dec
pop
fistps
cmp
lret
sbb
fwait
rol
jmp
test
rcrb
mov
fs
mov
jns
cmp
movsl
sahf
sbb
insb
sub
xchg
mov
dec
and
adc
mov
dec
jge
ficoms
sbb
sahf
jmp
push
fprem
btc
sar
or
les
testl
cmp
mov
jo
dec
ret
push
rcll
pusha
and
je
cmp
mov
subl
dec
cmp
cmp
out
lahf
stc
test
sar
jb
push
gs
cld
add
mov
add
cmp
push
inc
push
ja
xorl
fists
mov
scas
pop
nop
pop
dec
sub
gs
mov
sub
dec
idivl
inc
add
jns
fsubrl
loop
jle
inc
lods
sbb
out
cmp
dec
dec
and
jmp
jnp
aaa
imul
sti
ret
in
or
inc
rcll
sub
addl
fcomi
notb
adc
push
push
aaa
xchg
loope
inc
shrb
mov
inc
adc
roll
cmpsl
jecxz
sbb
iret
flds
mov
test
mov
push
icebp
hlt
jge
repnz
lock
mov
dec
bound
fiaddl
sub
mov
dec
mov
test
push
push
or
lret
shll
mov
or
outsl
lods
mov
sbb
xor
add
jne
mov
call
xor
mov
insl
xchg
js
imul
dec
lods
rorb
mov
sbb
sub
dec
add
cmp
or
mov
and
lret
mov
xchg
add
bnd
mov
repz
add
je
out
xor
add
dec
rclb
sbb
and
pop
or
imull
jge
pop
cld
adc
push
mov
xchg
cmp
mov
mov
push
cmp
icebp
cmpsl
ss
inc
in
aad
or
xor
in
stc
mov
aas
mov
and
dec
add
and
sub
and
je
jg
cmp
mov
cmp
sti
scas
ficoms
or
mov
rorb
int
in
leave
and
lods
mov
aad
cmpsb
arpl
cs
cmp
stos
cmp
pop
add
pushf
repz
std
in
xor
push
adc
adc
roll
imul
xchg
lods
fstl
hlt
push
mov
inc
movsl
pop
or
clc
test
mov
imul
and
jns
add
inc
mov
jmp
jle
xor
in
pop
into
cmpsl
cmovae
mov
mov
movsl
mov
movsb
adc
mov
dec
pop
cmp
mov
lock
fstp
sbb
leave
xor
mov
mov
jno
add
push
sbb
popf
imul
insb
pushf
or
fstpl
cmp
jnp
push
mov
test
lret
push
or
js
loopne
jne
cmp
or
mov
and
dec
jp
lea
lds
test
jno
push
mov
ljmp
outsl
jo
ds
sbb
dec
jno
cwtl
inc
mov
cmp
fucomi
and
aaa
ja
mov
lods
jb
ljmpw
mov
mov
xor
push
xor
add
xor
xorl
lea
inc
mov
sbb
pop
scas
repnz
ret
mov
pop
cmc
call
adc
xchg
jb
add
es
imul
dec
fidivrs
leave
addr16
js
cli
cmc
lods
jno
xchg
pop
xchg
int
cwtl
lcall
mov
sub
xchg
pop
pmuludq
sbb
fsub
insl
mov
or
add
mov
xchg
ljmp
xchg
sbb
aas
push
push
fistpll
add
cmc
mov
xchg
inc
dec
sub
mov
or
rorb
shrb
sub
fistl
into
fistpll
pop
cmp
adc
dec
and
add
dec
mov
or
stos
ja
cs
adcl
cmp
add
ljmp
sti
icebp
xchg
adc
das
stos
jno
int
jle
aam
in
sub
push
jns
and
gs
xor
jns
lods
test
pop
push
fdivrl
or
push
and
mov
mov
sub
jbe
pop
insb
lret
and
add
movsb
std
lea
cmp
xor
andb
sbb
cwtl
mov
in
jnp
icebp
inc
shrl
pop
inc
cltd
scas
push
stc
sarl
dec
jle
imul
test
cltd
xchg
iret
sub
repz
ss
xlat
jb
ss
out
std
pop
hlt
clc
lret
push
lcall
xchg
mov
mov
adc
mov
shll
push
pop
cmp
push
and
adc
mov
bound
pop
ljmp
lret
outsl
fldl
add
mov
jl
sbb
mov
sahf
sub
jno
xchg
stc
packsswb
or
inc
xor
ss
jbe
neg
mov
sbb
jp
test
dec
sahf
xor
test
pop
add
scas
sbb
xlat
test
ret
push
dec
adc
inc
aam
push
aad
mov
je
jecxz
xchg
fisubl
mov
add
mov
sbb
repz
cwtl
jg
dec
out
xchg
push
sub
int3
loope
repnz
sqrtps
test
lahf
cld
and
adc
or
sti
mulb
or
pop
test
lcall
cltd
sarb
out
popa
adc
sub
sub
xchg
rcrl
jecxz
cmp
push
push
cmp
in
scas
test
inc
shl
leave
jp
out
cmp
xlat
push
std
mov
fldenv
rol
out
and
xor
mov
pop
popf
jg
sbb
rclb
pop
sbb
scas
dec
cmp
imul
sahf
mov
aam
fwait
ss
or
or
or
sub
and
sub
add
push
xchg
sub
inc
pushf
cmp
inc
mov
repz
pushf
cmc
push
stc
jle
cmpsl
fs
mov
jbe
add
push
mov
fwait
cmp
in
mov
pop
pop
movsl
test
mov
out
add
cli
sbbb
xchg
fadds
fcompl
test
js
movsl
and
sti
arpl
cmp
pop
scas
cmp
fimuls
pop
add
jmp
lock
pop
jecxz,pn
les
jp
or
out
jnp
push
popa
lcall
aam
pop
sbb
scas
pop
pop
mov
orl
inc
movsb
xchg
loope
jmp
into
rorl
popa
je
aas
jae
mov
rcrb
ljmp
pop
popa
push
cwtl
inc
mov
nop
cmc
xchg
movsl
push
cmc
dec
jge
cmpsb
aas
adc
icebp
in
xchg
add
add
mov
mov
mov
loopne
push
movsl
rcll
sti
mov
push
mov
addr16
push
loope
cmp
out
xchg
jns
sbb
les
push
and
mov
and
dec
jecxz
mov
mov
mov
or
xor
ljmp
xchg
fcomip
pop
push
imul
or
sarl
sub
mov
push
fwait
loope
inc
pusha
add
rclb
push
cmp
mov
and
push
add
mov
movl
dec
lock
adc
frstor
pop
add
aam
cmp
test
dec
ja
cmp
mov
ss
or
inc
push
loopne
fistpl
fwait
hlt
inc
cli
cmp
stc
outsl
mov
test
mov
scas
pop
ss
cmc
mov
icebp
loop
inc
cmp
push
je
or
lods
and
xor
leave
or
and
gs
pop
lds
jge
cmpsb
push
dec
ss
popa
mov
inc
mov
push
movsb
or
mov
dec
movsl
cs
jle
leave
mov
movsb
push
popf
add
out
ret
test
js
xchg
mov
add
xchg
ret
xor
adc
dec
cmpsb
dec
clc
jl
xor
pop
scas
inc
adc
add
aaa
sub
aad
xor
js
inc
inc
xchg
pop
or
mov
mov
push
dec
mov
xchg
add
adc
mov
pop
rolb
in
mov
outsb
mov
adc
pop
sbb
push
xchg
mov
iret
mov
xchg
sbb
je
pop
xlat
mov
mov
sub
repnz
fs
add
mov
adc
adc
adc
cmc
outsb
and
decb
cmpsl
lcall
enter
addr16
lea
aad
int
and
adc
fwait
jnp
mov
mov
xorl
add
jecxz
inc
push
push
aaa
popa
in
add
gs
push
push
sahf
aam
and
adc
pop
cltd
push
mov
bound
cmp
in
jns
ja
repnz
add
mov
adc
ds
sbb
sbb
mov
ficomps
xchg
and
xor
mov
cli
pop
sub
mov
movsl
push
imul
insb
mov
or
cmp
ss
xorl
push
xchg
in
mov
pusha
ret
adc
jno
rcrb
jge
push
sbb
fwait
in
sbb
int3
pop
movb
lds
push
add
sub
imul
imul
pop
inc
sub
popa
or
mov
pop
lods
xchg
out
loope
xchg
enter
out
repz
aad
pop
adc
outsb
inc
lods
jo
add
inc
ss
sbb
push
test
es
pop
les
sub
add
mov
cmpsb
ret
mov
or
in
mov
stc
pop
pop
or
das
jns
call
out
popf
daa
xlat
addr16
cmp
arpl
xor
add
and
mov
dec
incb
push
xor
xor
dec
cmpsb
pop
xchg
mov
testl
pop
xchg
xor
call
test
xchg
movsb
mov
sbb
repnz
or
pusha
jp
lods
rcrb
push
jae
cmp
fstp
flds
aas
aaa
pop
mov
xchg
or
fstp
adc
cmp
mov
pop
jno
mov
lahf
call
aad
and
xor
out
mov
dec
mov
ret
lret
lock
inc
xor
enter
pop
loope
push
push
xlat
adc
mov
test
lcall
lret
push
popf
dec
fldt
aaa
sbb
adc
rcll
andb
cmpsl
insb
shlb
sbb
icebp
mov
dec
hlt
adc
repnz
mov
data16
enter
sub
mov
dec
sahf
jno
cmp
push
pop
xchg
jecxz
add
int3
stc
mov
cld
adc
cmp
andl
jge
call
sub
arpl
mov
pop
mov
call
scas
fildll
pop
xor
dec
jns
sahf
dec
push
and
push
mulb
pop
inc
nop
adc
cmpsl
push
mov
cmp
mov
sbb
mov
lret
adc
dec
lcall
mov
outsb
mov
add
cmpsb
into
testb
push
mov
clc
popf
popa
pop
test
std
inc
push
pushf
aam
xchg
dec
xor
fists
mov
jle
fidivrs
out
inc
add
mov
addb
test
mov
out
fxch
mov
pop
xchg
sub
dec
dec
jecxz
add
sbb
inc
mov
lods
stos
hlt
adc
jp
insb
add
sbb
push
xor
mov
add
xor
mov
cli
das
stos
ficoml
mov
std
pop
aas
movups
arpl
pop
jl
mov
mov
push
aas
mov
sub
add
loopne
mov
icebp
and
fneni(8087
mov
loopne
cli
pop
pop
cltd
sub
cwtl
es
xchg
dec
cli
hlt
mov
xchg
bound
and
dec
mov
mov
stos
imul
jl
cld
sub
test
aas
scas
adc
notb
push
push
xchg
dec
fwait
mov
popf
xchg
out
bound
test
pop
loopne
sub
cmpsl
call
inc
cmp
cld
pop
out
icebp
xor
adc
nop
rcr
test
test
mov
push
orl
dec
int3
or
ds
pop
aam
pushf
daa
cmpb
inc
repz
add
testb
hlt
mov
jns
jp
sarb
or
lcall
ret
mov
out
cmpsl
rcrl
shll
test
les
push
ret
xor
inc
inc
add
shrb
push
push
cmc
xchg
inc
xchg
lea
loop
jecxz
push
pop
inc
loope
dec
lds
pushf
rolb
fabs
ss
pop
xchg
cmp
outsl
daa
push
imul
ret
iret
je
cs
mov
inc
xor
inc
repnz
cwtl
aaa
dec
stos
jge
sub
dec
mov
and
aam
push
je
xchg
fisubs
adc
xor
mov
jb
test
in
dec
test
int3
and
sbb
mov
fstl
movsl
sbb
mov
jne
fs
push
and
pop
mov
paddw
outsb
fldcw
sub
or
insb
lods
stc
in
xlat
sahf
and
fmulp
scas
mov
fisttps
aad
adc
inc
test
ss
mov
nop
and
adc
shrb
mov
push
jmp
mov
push
xchg
mov
cmp
push
sub
dec
or
movsb
xchg
hlt
push
and
push
jp
mov
js
dec
sarb
adc
ss
push
push
dec
xor
xchg
add
push
jne
jl
cmp
out
adc
inc
dec
sub
popa
mov
cmp
xchg
int
lock
pop
push
adc
adc
mov
hlt
dec
xor
lcall
inc
jne
cmc
mov
push
mov
or
lock
fnstsw
jne
loope
pop
es
xchg
out
xchg
cli
xlat
mov
cmp
outsl
push
pop
pop
in
mov
lods
lcall
imul
stos
stc
and
cmpsl
cmc
negl
cmp
shlb
adc
inc
lods
inc
lcall
subl
add
jp
leave
lds
cld
pop
lock
in
out
adc
jb
mov
dec
and
mov
mov
lock
inc
insl
push
ja
xchg
incb
subl
push
push
lods
jmp
sub
loope
aam
popa
jmp
lret
pop
js
repz
scas
sbb
cbtw
push
enter
mov
imul
or
test
test
aam
adc
inc
lret
outsb
sub
imul
jg
out
in
mov
sarl
mov
add
insb
loop
or
dec
dec
daa
sub
into
lret
sub
popa
and
out
xchg
adc
mov
pushl
push
icebp
add
sbb
adc
pushf
lcall
jo
mov
popf
das
imul
sti
dec
mov
mov
mov
dec
add
mov
jecxz
daa
test
cmp
cmp
nop
pop
xchg
mov
add
inc
sbb
push
xchg
pushf
leave
push
mov
jmp
add
cmp
hlt
addb
xchg
adc
cmp
imul
icebp
sub
push
ds
xchg
adc
scas
movsb
lods
inc
push
inc
push
lods
rorl
sub
addr16
mov
int3
mov
mov
jns
jno
lcall
pop
shrd
sbb
cmpsb
hlt
push
aas
add
nop
lcall
enter
jo
xchg
xchg
xlat
sbb
add
inc
mov
or
mov
cmp
add
xchg
mov
hlt
das
pushf
xor
enter
gs
ret
imul
mov
adc
adc
adc
insl
lret
out
shll
gs
out
movsl
dec
std
rcl
movsl
mov
adc
cmp
add
inc
fdivrs
mov
cwtl
aaa
into
mov
mov
adc
cmpsl
inc
ja
call
sub
aad
les
cmp
cmp
push
pop
cmp
negb
mov
pushf
outsl
xor
push
and
adcl
push
imull
test
xchg
pop
aam
xor
mov
mov
loop
xlat
dec
aaa
int
pop
inc
sbb
test
test
faddl
mov
stos
mov
xor
jmp
xor
mov
lds
pusha
adc
push
and
pop
jmp
repz
repnz
sbb
iret
cmpsl
test
pop
pop
push
icebp
repz
repz
insb
mov
mov
xchg
ljmp
pop
fsts
ds
sbb
xlat
jge
sub
imulb
adc
imull
sarl
hlt
pop
cmp
pusha
stc
mov
xchg
sub
push
out
xor
mov
and
jnp
jge
mov
inc
out
mov
xchg
shlb
repnz
push
sub
pop
push
inc
adc
inc
fs
mov
movsb
jl
or
cmp
sahf
fdivrs
aaa
and
daa
mov
mov
out
je
push
inc
push
xor
shl
rolb
xchg
dec
sbb
xor
dec
jns
and
and
dec
push
mov
inc
xchg
jecxz
std
sbb
fstl
xchg
lcall
out
dec
insb
push
ret
jne
cmpsb
out
int
cmp
dec
inc
lods
jne
roll
pop
inc
fcoml
pop
adc
and
fcomps
and
pop
cmc
stos
push
in
push
mov
nop
cmpsb
mov
into
rorl
das
and
xchg
aas
movsb
jmp
pop
enter
std
je
leave
cmc
je
add
dec
jb
mov
dec
inc
fimull
lds
or
fistpll
lret
seto
aas
jmp
mov
dec
push
sarl
out
mov
and
fldl
gs
cwtl
xchg
insl
iret
insb
mov
and
xchg
add
imul
add
push
pmuludq
add
cmp
stos
mov
gs
mov
shll
sub
shlb
xor
leave
and
insb
out
dec
dec
shll
dec
pop
pushf
pusha
inc
and
ret
push
lret
icebp
mov
ret
and
lock
addr16
mov
imulb
xchg
lret
jb
cmc
cwtl
push
jle
inc
notb
pop
jns
insl
add
push
add
dec
jp
repz
push
aas
add
pop
mov
insb
ljmp
leave
imul
jo
fbstp
xchg
cltd
test
movsl
mov
inc
sub
xchg
and
push
mov
les
test
add
xchg
fnstsw
ret
fwait
les
lods
popa
popf
outsb
aam
stc
sbb
ds
adc
pop
ja
sti
data16
pop
push
mov
js
fcmovnu
mov
iret
in
cmp
push
mov
cmpsl
pop
out
popf
jno
popf
movsl
scas
sbb
add
sbb
int
test
fsqrt
rorl
inc
adc
dec
test
out
.byte
push
scas
and
cmp
adc
and
mov
jecxz
popa
pop
fchs
pop
enter
mov
fsubrp
xchg
out
arpl
push
xchg
jb
fists
pop
dec
lret
loope
jae
pop
loopne
jns
lcall
adc
shlb
jbe
int
cmp
lahf
cmc
pop
pusha
jns
jecxz
xchg
mov
sub
xchg
push
cmp
fldl
movsb
fcomip
jl
lods
dec
mov
ltr
xchg
jbe,pt
mov
ret
and
mov
bound
lahf
lahf
bswap
jle
int3
in
je
ds
jecxz
or
pop
fnstenv
and
enter
jl
xor
fmul
sub
jns
insl
je
and
pop
add
xchg
jb
xchg
push
xchg
sbb
sub
inc
xchg
jno
gs
lahf
or
add
inc
sub
mov
ror
daa
int
aaa
xchg
popf
sbb
std
pop
cli
xor
andb
mov
push
jmp
jnp
sub
dec
inc
mov
clc
lods
pop
outsb
or
mov
das
mov
pop
shll
sbb
adc
dec
stos
in
sarb
sub
popf
pop
fiaddl
clc
andl
add
inc
mov
fs
daa
sub
fincstp
ss
push
xchg
test
push
push
in
lcall
or
pusha
sub
lahf
cltd
pop
int3
sbb
xor
xor
pop
add
push
sub
inc
into
pop
push
mov
enter
jnp
aaa
and
xorb
inc
xchg
mov
add
mov
adc
bswap
inc
addl
sub
loopne
loop
push
xor
sbb
or
adc
sbb
jb
push
add
shl
xchg
leave
mov
mov
add
sahf
test
and
adc
lea
cmp
rcll
adc
adc
test
push
in
and
mov
ret
repnz
xor
outsl
pop
mov
out
and
and
pusha
ljmp
xchg
mov
je
jle
sub
lahf
and
adc
xlat
dec
andl
cmp
pop
xchg
xor
xchg
pop
aaa
call
shr
stc
sahf
cmp
mov
iret
inc
addb
xor
and
pop
scas
mov
stos
imul
lods
scas
or
or
ss
cmpsb
sti
jecxz
into
push
repz
xor
mov
sahf
ja
mov
adcl
push
mov
into
sbb
stos
xchg
pop
dec
cltd
sub
xchg
les
pop
idivl
mov
mov
int3
cmpl
push
repnz
mov
xor
mov
outsl
cmp
rcl
stos
popa
daa
sbb
inc
mov
xor
add
adc
adc
mov
pop
jecxz
test
dec
frndint
call
jg
jae
cwtl
sbb
test
nop
and
je
ljmp
jp
and
loop
inc
cs
pop
sub
jne,pn
sbb
mov
or
xor
or
push
adc
sarb
sub
lcall
pusha
cmpsl
sti
sbb
xor
dec
mov
stc
and
rcll
pop
outsb
sub
ss
ret
mov
jge
in
and
in
push
mov
call
add
push
fsubl
pop
xorl
xchg
mov
rcrb
sub
or
fisubrl
aad
out
cmp
sti
lcall
call
jns
adc
lcall
inc
pop
mull
aam
jne
imul
mov
inc
dec
xor
in
cli
outsl
xor
and
ljmp
leave
cs
mov
test
or
xchg
mov
jmp
jp
lahf
fsts
xchg
test
adc
lock
jge
jae
sub
lea
subl
rclb
pushf
sahf
push
mov
lods
outsl
adc
lcall
pusha
xchg
mov
and
add
popf
popf
nop
das
idivl
adc
out
sub
sub
push
jge
es
mov
out
addb
adc
xchg
decb
inc
pop
iret
or
out
in
xchg
cmpsb
dec
lock
add
mov
jns
test
and
loopne
sub
shlb
sub
mov
pop
das
sbb
push
push
fs
fistpll
cltd
mov
jbe
inc
mov
rcl
scas
enter
std
stos
andl
xchg
lcall
pushf
imul
mov
add
enter
xor
popf
add
mov
mov
adc
push
je
cs
mov
push
sbb
mov
jae
outsb
jmp
and
fsubrp
sbb
inc
and
mov
mov
rolb
inc
arpl
imul
repz
pop
xorl
fsts
adc
adcl
mov
sbb
lock
xor
cli
sub
mov
daa
les
jmp
pop
pop
enter
or
xor
jmp
mov
push
ficoms
inc
jnp
lods
jmp
xor
xchg
inc
jno,pt
sahf
popa
dec
repz
push
popa
xor
add
xor
jb
nop
xchg
lods
stos
push
insb
dec
adc
add
ja
pop
and
sti
jno
pushf
jns
adc
push
mov
inc
xchg
jns
pushf
pop
push
outsb
mov
mov
stc
sub
jl
nop
push
repz
inc
test
and
pop
or
call
cmp
rcrb
fbld
xor
aam
shll
push
nop
cli
aad
loope
mov
daa
adc
inc
sbb
pop
roll
insl
sub
add
movsl
xchg
or
xor
xchg
mov
lock
mov
les
popf
jb
mov
lahf
rcrb
jl
xchg
scas
scas
clc
ljmp
cwtl
int
out
sub
lock
imul
pop
lock
lret
jbe
jbe
jno
inc
fldl
xor
mov
sbb
ret
imul
push
popf
jmp
sub
mov
lods
sub
jg
test
sub
mov
sbb
pop
shll
jg
pop
cmpsl
shlb
out
lcall
push
pop
push
repz
rcll
or
push
mov
cli
testb
ljmp
pusha
ss
or
test
pushf
cmp
adc
outsl
or
mov
fnstsw
call
push
lea
adc
mov
jnp
mov
mov
push
mov
lcall
setbe
divb
hlt
insl
das
xchg
insl
ss
pop
cmp
and
push
hlt
xor
adc
ds
sub
lret
adc
lcall
sbbl
mov
imulb
jne
jne
add
cmc
add
dec
or
test
inc
cmp
out
cmp
leave
sub
jmp
xchg
sub
xchg
jl
int
sbb
aam
or
adc
add
sbb
xor
xchg
scas
aaa
fiaddl
je
push
mov
loope
mov
pop
add
add
inc
es
mov
xchg
sub
fcmovb
dec
add
les
sub
jl
pusha
jae
pop
pop
and
insb
fisttps
cmpl
or
adc
rorl
mov
mov
jp
cmp
jl
sbb
sbb
pop
dec
shrb
pop
sbb
pop
pushf
outsl
sub
mov
scas
data16
sub
fstp
cli
push
or
shlb
sarl
pusha
cmp
jle
aad
pop
arpl
cwtl
out
pop
adc
js
inc
sbb
popfw
jae
push
push
pop
xchg
div
sub
pop
pop
cmp
cmp
push
pop
testb
jl
push
int
clc
enter
movsl
les
mov
and
xor
jle
je
pop
mov
xlat
mov
lahf
xchg
addr16
xchg
lret
loop
fisubrs
sbb
sbb
xchg
out
rcrl
out
cwtl
mov
leave
adc
push
push
aam
sti
push
lods
rcr
sti
and
inc
push
rorl
fimuls
mov
xlat
jle
mov
push
inc
ret
mov
clc
stc
jbe,pn
dec
pop
mov
popa
mov
aam
push
jae
xchg
leave
mov
add
aam
jl
call
mov
fyl2xp1
mov
jnp
fidivrs
cmp
sub
dec
leave
add
xor
lea
mov
fmuls
rorb
mov
fcoml
mov
xchg
hlt
and
sub
ds
jo
lret
xlat
int3
dec
dec
mov
insb
andl
push
adc
or
jnp
dec
insl
add
mov
push
or
mov
inc
ret
aaa
pop
mov
cmp
and
inc
xor
arpl
decl
mov
push
pusha
int
inc
jl
in
lea
xor
lcall
adc
jge
mov
fwait
mov
cmpsl
sub
mov
mov
dec
push
xor
pop
sbb
je
adc
out
int
push
pop
lock
test
lds
lret
cli
jl
in
pop
mov
in
push
cli
and
stos
jo
cmpsb
outsb
jg
inc
fiaddl
mov
jnp
stc
lods
mov
je
xchg
pop
jge
dec
rep
and
js
les
popf
sub
std
cltd
cmp
mov
mov
in
sub
clc
cs
jnp
arpl
leave
push
xor
cbtw
mov
adc
leave
cwtl
sbbb
adc
mov
in
jne
in
jmp
or
cli
xor
add
xlat
sti
adc
mov
in
push
les
mov
arpl
int
push
test
loope
push
subb
jno
repz
pushf
jne
and
mov
dec
sbb
loopne
scas
and
dec
mov
dec
and
insl
jmp
fistl
jnp
fisttpll
or
cwtl
and
fwait
addr16
mov
jp
dec
incb
jge
mov
xor
add
cld
xor
inc
xor
push
inc
mov
or
mov
xor
fnstsw
sub
jg
xchg
fstl
pusha
shrl
ret
add
in
adcl
push
sub
push
sbb
cmpb
movsb
jbe
xor
sub
int3
loop
test
movsb
mov
shr
in
mov
push
ds
sbb
dec
inc
clc
sbb
cmp
mov
icebp
adc
int3
cmp
sbb
rorb
enter
out
xor
or
mov
xchg
test
and
lds
cs
cltd
cmpsb
lret
pop
push
jl
cmc
mov
pop
mov
test
pop
xchg
cmpsb
push
leave
rorl
xchg
or
loopne
mov
pushf
aad
push
adc
sub
pop
loopne
mov
icebp
add
shlb
push
jno
cmp
push
adc
mov
xor
std
cmp
push
scas
aam
jb
jecxz
sub
sti
js
or
mov
mov
push
fiaddl
and
xor
cltd
data16
and
inc
fsubrl
pop
pop
fimull
repnz
fs
inc
fwait
sub
jp
dec
jp
addr16
xchg
sbb
in
mov
mov
shll
das
push
add
das
adc
mov
cmpsl
cmpb
adc
jo
int3
iret
mov
push
dec
mov
out
push
jno
jo
imul
fiaddl
jle
add
mov
push
dec
xchg
idivb
icebp
loop
sahf
mov
data16
lcall
mov
sahf
dec
dec
int
aas
sub
es
mov
sub
xchg
mov
pop
daa
pop
jmp
roll
pop
xchg
aas
out
jno
dec
in
fisubs
aaa
adc
fs
push
push
jp
xchg
inc
bound
push
mov
mov
jge
lretw
push
aaa
adc
mov
movsl
cld
xor
cmpsb
fwait
cmp
mov
push
ss
mov
add
mov
imul
cwtd
scas
sbb
mov
out
arpl
sahf
cltd
mov
ja
cltd
cmp
push
lret
inc
jle
push
xor
nop
addr16
pop
ljmp
test
lret
jge
imul
xchg
mov
pop
mov
in
es
cmc
mov
push
jb
jbe
out
xor
lods
rcrl
push
imul
mov
adc
xchg
sbb
xchg
pusha
mov
xor
mov
adc
les
lods
fucomi
adc
mov
push
pushf
xchg
pop
xchg
sbb
sub
xchg
int
aaa
and
clc
xor
mov
mov
shrb
inc
cmc
jp
stc
pop
lea
rcrb
mov
cmp
outsb
cli
add
fimuls
sbb
test
push
filds
inc
es
pop
fidivs
cmp
fs
shlb
scas
jecxz
lcall
mov
clc
mov
sbb
pop
push
mov
mov
scas
adc
jmp
nop
jp
cltd
xlat
inc
push
or
test
gs
pop
pop
sub
and
iret
mov
jmp
mov
push
gs
or
mov
test
jle
jmp
xor
sarb
mov
inc
jmp
stc
mov
jne
movsl
and
cmpsb
sub
or
jo
dec
fidivs
mov
jg
icebp
push
jne
or
adc
push
js
arpl
add
add
mov
movsl
lods
lods
xor
cli
hlt
outsl
pop
adc
and
mov
inc
inc
mov
rcll
cmp
sbb
lret
pop
and
mov
jno
inc
lcall
les
adc
das
xchg
cli
mov
mov
in
dec
pop
leave
pop
xor
leave
push
xor
in
add
mov
ljmp
in
cmp
mov
xchg
add
lret
jmp
adc
xor
jle
inc
jno
cmc
mov
xchg
movmskps
stos
pop
xchg
mov
jecxz
ds
out
fwait
loop
jbe
mov
add
sub
mov
xchg
rorb
hlt
insl
sbb
push
sub
fsub
push
sub
dec
cmp
scas
icebp
jnp
xor
sbb
sar
add
sbb
adc
jne
cmpb
sub
jno
xchg
and
pop
dec
je
lds
push
xchg
pop
xor
addl
jno
cmpb
imul
inc
xor
stc
loope
mov
fwait
add
adc
dec
mov
inc
decb
mov
push
jo
jl
sbb
lahf
mov
inc
popl
sub
pusha
cmp
or
adc
or
add
sahf
push
pusha
inc
sahf
inc
jnp
stc
cmp
mov
shrb
inc
popa
fwait
push
mov
sbb
pop
call
aad
or
mov
push
insb
mov
mov
fdivr
sub
insb
addr16
ficomps
loopne
sub
movd
hlt
pop
ror
mov
out
in
fdiv
loop
clc
mov
jg
pop
imul
mov
pop
mov
or
and
pusha
test
ss
mov
test
xor
pop
adc
pop
xchg
std
cltd
pop
jae
pop
test
leave
push
daa
dec
repnz
int3
xor
adcl
add
ja
stos
aam
jmp
insl
shll
in
testb
push
add
xor
fiadds
rolb
and
cmp
call
shl
mov
mov
icebp
icebp
gs
divl
push
xchg
es
aas
jp
out
adc
pop
imul
sarb
inc
or
and
xchg
sbb
sub
push
add
in
cmp
loopne
sti
leave
repnz
lret
and
xchg
jo
xchg
mov
dec
cmp
jo
mov
sub
lcall
aad
sarl
je
das
or
bound
inc
int
je
test
inc
orb
dec
lret
hlt
mov
inc
popf
ss
push
mov
ds
cmp
jge
cmpsl
hlt
fs
scas
les
cmp
or
movsb
xchg
ljmp
fmuls
xlat
pusha
lahf
lods
jp
add
popf
fcomps
and
jge
jecxz
sbb
and
mov
pop
sub
lds
lret
int3
imul
aad
inc
popf
xchg
cmp
movsl
or
push
shll
shlb
or
enter
aad
xor
push
xor
add
pop
testl
pop
int3
rcrb
dec
arpl
test
test
push
int3
and
and
mov
movl
cmp
xchg
xchg
icebp
outsl
je
arpl
xchg
push
cld
sub
push
cbtw
sub
and
sub
push
xor
or
testl
fnstenv
ja
je
jmp
mov
loope
inc
xchg
xchg
scas
add
out
aas
mov
mov
cwtl
jno
xchg
push
push
mov
push
cs
push
pop
jae
rcl
in
popf
mov
pop
xchg
xchg
cmp
mov
negb
cld
cwtl
mov
xchg
cmp
js
or
cmpsb
push
iret
dec
xchg
or
mov
push
rcrb
jb
in
cwtl
push
and
mov
xchg
repnz
cmp
aam
pop
loop
bound
shlb
lret
add
sub
pop
loope
xlat
cmp
mov
cmpsb
fisttps
imul
movsl
xchg
xchg
sbb
xor
test
sbb
and
cmp
cmp
lods
aad
pop
dec
stc
and
bound
sbb
xchg
shll
fcoml
push
pop
aam
in
cmp
cli
leave
ret
aam
icebp
mov
pushf
dec
xchg
xor
adc
push
mov
int3
pop
mov
xchg
mov
push
andb
nop
movaps
cld
into
rclb
out
inc
inc
fninit
mov
or
and
out
dec
jns
add
add
inc
push
jp
rolb
ja
ds
mov
adc
aaa
push
xchg
aad
mov
inc
aad
sbb
inc
jmp
idivl
jbe
sarb
adc
mov
stos
add
outsl
popf
pop
mov
mov
lea
push
into
adc
jbe
mov
xchg
das
sbb
dec
adc
and
or
scas
ret
sahf
adc
dec
inc
xchg
pop
inc
push
pop
or
xchg
mov
and
xor
mov
lret
arpl
lds
fists
xchg
rorl
icebp
cmp
iret
add
lahf
rol
mov
jg
bound
push
jecxz
loope
cmp
imul
stc
lahf
dec
andl
mov
push
xor
rcrb
add
adc
daa
out
es
addr16
jo
push
lea
dec
adcl
pop
ret
xchg
pop
std
mov
shlb
xor
and
sbbb
push
push
xchg
push
mov
in
or
test
mov
pop
lcall
loop
leave
add
push
enter
ficoms
test
lds
cmc
icebp
ret
xor
fcomps
push
cmp
or
mov
call
adc
mov
lcall
mov
outsl
aaa
lock
filds
lds
fisttps
repnz
pusha
out
andl
adc
pop
jae
fdivrs
cld
popf
push
xor
cmp
scas
sub
jno
fcomps
xchg
lcall
inc
int
adc
cwtl
rolb
out
cmp
outsl
adc
push
inc
xlat
mov
mov
sbb
inc
mov
inc
xor
shrb
clc
shrl
arpl
adc
xchg
int
pop
orb
and
mov
mov
and
inc
pushf
lods
add
out
fisttpl
jbe
icebp
jge
ja
jbe
in
inc
inc
or
cmpsb
mov
cld
push
sarl
xor
mov
mov
fwait
loopne
adcl
dec
add
lahf
leave
lds
cmpsb
out
push
les
jns
push
js
cmpb
push
xchg
outsb
sbb
cli
das
sub
daa
jno
idiv
xchg
cmp
sbb
insl
xor
testb
adc
inc
jecxz
addr16
cmp
ror
and
test
or
int
pop
mov
sarb
cltd
push
mov
mov
dec
imul
or
into
inc
or
leave
inc
test
mov
ret
and
sub
mov
jb
ss
popa
movsb
cmp
fldcw
je
mov
or
fisubrl
jmp
adc
mov
pop
dec
je
add
int3
movsb
or
adc
sbb
lret
cmc
push
cli
sbb
ja
popf
mov
iret
stos
dec
shrb
sub
lcall
xchg
xchg
mov
jns
mov
lods
out
pop
add
mov
sbb
or
xor
test
cmp
inc
push
loopne
cmpb
inc
pusha
or
sub
jbe
jge
gs
sbb
out
mov
cld
mov
divl
in
sbb
push
jns
pop
push
cmpsl
sarb
mov
xor
mulb
lods
rclb
pushf
mov
dec
cwtl
sbb
sbb
jo
dec
jp
push
iret
push
sub
or
mov
popf
lahf
push
in
jmp
sbb
mov
add
sub
cmp
push
push
out
inc
push
push
jo
mov
dec
dec
shlb
xor
inc
daa
adc
fdivrl
add
sbb
jmp
data16
dec
loopne
cltd
sub
cmpb
and
mov
fimuls
cmpsb
add
fisubrs
mov
inc
mov
inc
cmp
std
outsb
out
pushf
idivb
movsb
test
push
lods
and
shl
xchg
cwtl
cwtl
and
jne
sti
mov
jnp
out
mov
lods
push
nop
outsb
and
loop
mov
inc
aad
aaa
daa
les
sbb
xchg
mov
data16
clc
mov
dec
pop
mov
lods
insl
in
jo
notb
dec
inc
sti
sub
xlat
adc
je
test
pop
dec
es
ret
push
stos
and
jmp
subl
aam
cmpsl
mov
stc
or
jne
in
outsb
into
js
in
sub
out
mov
movsl
sbb
aam
out
mov
andb
push
nop
jbe
jno
leave
stos
repnz
loope
push
aam
sbb
mov
repz
adc
pop
dec
mov
sub
je
dec
pop
test
mov
mov
cld
sarb
sbb
add
sub
addl
push
pop
lds
adc
xor
xchg
dec
enter
sti
and
iret
das
mov
jnp
and
jno
cld
shl
stos
jbe
sbb
cmp
add
sub
lahf
and
fsts
imul
cmpsl
inc
shl
loop
adc
jmp
addr16
insl
lock
popa
jge
and
ror
sbb
out
or
pop
cmp
sldt
stos
sarl
jnp
inc
roll
icebp
fcoms
int
xchg
jo
aas
ds
sub
dec
adc
push
xchg
arpl
cmp
js
push
fbld
shlb
test
in
test
jmp
inc
mov
adc
cli
push
aas
int3
cmp
mov
int
scas
push
pop
or
jmp
cmp
das
mov
add
xchg
bnd
unpckhps
pop
pushf
icebp
loopne
sbb
add
mov
data16
insl
mov
xchg
xchg
inc
imul
xchg
mov
int
xor
bound
dec
cmp
movsb
mov
push
imul
cwtl
out
or
das
xor
idivl
mov
pop
popf
stc
fisttpll
sbb
stos
add
fnstcw
pop
std
xor
ficomps
fnsave
add
stos
mov
jg
movsl
push
pop
dec
mulb
lret
rcrb
mov
mov
sub
daa
mov
push
mov
test
xchg
rcrb
cmpsl
adc
inc
daa
dec
adc
xchg
test
xor
dec
xchg
dec
jb
sti
xchg
pop
enter
je
jbe
pop
sti
inc
jge
and
clc
jge
xchg
loope
xor
pop
mov
sbb
insl
jmp
sbb
rorl
or
lcall
cmp
in
fdivl
outsl
leave
mov
jge
sbb
mov
mov
or
xor
inc
xchg
push
mov
clc
out
inc
aas
test
in
sar
dec
sub
jge
dec
add
inc
pop
cmp
fidivl
cmc
subb
andb
xor
ss
mov
mov
dec
fistl
jae
test
loope
adc
sbb
sub
aad
mov
sbb
fidivrs
ss
insl
jno
dec
in
sbb
jle
ss
jl
jp
out
repnz
mov
jae
clc
es
hlt
mov
test
insl
movsl
rolb
push
mov
xor
stc
imul
inc
adc
mov
out
cmpsl
cmp
jle
das
int3
pop
in
clc
enter
and
pop
das
cli
fidivs
mov
push
imul
sub
icebp
lds
jns
test
pop
out
std
jo
sbb
ficomps
test
xchg
sbb
scas
lods
rclb
lods
shlb
fmuls
daa
mov
add
adc
add
push
push
sti
inc
aas
pop
andb
dec
cli
arpl
in
repnz
aaa
adc
nop
sbb
enter
cmpsb
adc
mov
and
jmp
mov
pop
mov
movsl
fisubl
popa
leave
fmul
shlb
out
in
xor
mov
adc
sub
mov
out
sub
imull
push
pop
push
and
mov
lcall
outsb
hlt
fldl
cmp
and
lcall
xor
adc
cltd
adc
mov
flds
jbe
into
cli
xor
subb
inc
std
sub
mov
push
xor
xor
movsb
cmp
pop
cld
popf
dec
xchg
ret
pusha
jl
nop
add
and
out
sbb
stc
int3
inc
out
dec
jmp
out
push
cld
fwait
sub
fwait
mov
or
or
rcrl
sub
xor
xor
call
mov
mov
lods
dec
ret
jbe
scas
sbb
nop
jo
imul
dec
into
ds
ss
into
mov
popa
pop
iret
cltd
or
cli
repz
jno
xchg
je
sbb
sub
xchg
push
push
pop
imull
adc
dec
push
cmp
cs
pop
scas
outsb
ljmp
mov
shl
imul
push
inc
or
fs
andl
cld
mov
and
lret
cld
movsl
shrl
stos
xchg
cmp
imul
inc
and
push
cmpsl
sbb
in
cld
stc
adc
push
push
xor
jbe
ja
push
call
sbb
add
data16
dec
shr
rcr
push
std
mov
cmp
pop
cmp
mov
pop
mov
int3
fwait
mov
aas
lea
sbb
inc
out
rol
sub
lods
mov
sub
das
pop
sbb
xor
xchg
xchg
inc
fbstp
iret
int3
adc
in
mov
lcall
fidivrl
push
sti
pop
adc
or
mov
cmpsl
mov
vmaxsd
jbe
inc
jnp
cs
fmuls
repz
push
sbb
aad
mov
push
fwait
test
stos
loop
int
adc
cmc
cmp
sbb
lods
data16
ljmp
or
xor
mov
cmpsl
or
push
and
xchg
push
scas
add
add
mov
outsl
arpl
inc
mov
loope
xchg
lret
inc
mov
push
push
xchg
jbe
xchg
stc
jl
push
mov
or
sub
js
in
dec
sbb
mov
or
out
cmc
pop
jae
jle
bound
add
inc
jns
sarb
push
shl
gs
popf
das
sub
jo
into
push
pop
imul
dec
mov
sub
cmp
push
jmp
inc
inc
in
out
dec
syscall
test
ja
gs
mov
or
cmp
xchg
mov
add
test
aad
rcrb
sbb
dec
stc
sti
imul
push
je
sbb
xchg
jne
pop
mov
mov
test
cmp
loope
clc
pop
imul
movsb
mov
sbb
movsb
shrb
sub
sbb
pusha
and
fcomip
mov
sahf
notl
sub
cmp
scas
int3
lcall
imul
leave
dec
ret
mov
jl
pop
inc
sbb
sbb
cmp
sbb
mov
scas
repnz
clc
lock
ficompl
lret
sbb
xchg
fnsave
scas
pop
xor
mov
aad
mov
fisubrs
or
pop
adc
mov
decl
dec
mov
cmpsb
popa
and
add
scas
std
mov
cs
push
neg
sbb
aas
or
jecxz
or
pop
pop
std
jns
or
jno
aam
inc
dec
js
pop
or
out
lods
pop
cmp
adc
jae
mov
stos
dec
scas
jb
movsl
xchg
std
adc
addr16
inc
fsub
sbb
imul
repz
mov
testl
fisubs
hlt
lds
and
movsb
mov
push
ret
sahf
jne
or
stos
repnz
int
sahf
clc
cmp
cmp
xchg
ret
outsb
arpl
push
push
pop
andb
xchg
or
popf
mov
and
test
icebp
mov
push
movsb
dec
scas
jl
sub
stos
or
sub
lret
mov
pop
and
shlb
or
in
jne
inc
adc
inc
pop
cs
sbb
lahf
mov
in
loope
push
mov
into
pusha
cld
mov
shll
mov
inc
ret
mov
push
inc
out
outsl
push
sbb
mov
lea
int
shl
shl
lea
inc
and
mov
aad
adc
rclb
sub
jo
push
je
push
shlb
imul
cmpl
icebp
shll
sub
jmp
xor
push
subb
insb
cltd
xor
adc
pop
pop
jp
fdivrs
add
dec
test
lds
fcmovu
ret
jp
xor
daa
pop
sub
mov
leave
scas
dec
ljmp
dec
jae
shr
fucomi
faddl
cwtl
scas
out
scas
fstpt
leave
test
and
int3
stos
movsb
pop
ljmp
adc
push
inc
jmp
jno
jmp
sub
adc
push
xchg
aam
outsl
shlb
and
fisttpl
sub
sbb
mov
dec
jns
cmp
daa
xchg
pop
rorb
in
les
popa
cmpsb
aam
nop
mov
cmc
lock
cmpl
aad
ja
dec
scas
fisubrl
cmpl
dec
xor
or
cmp
xchg
mov
mov
add
mov
push
push
adc
ja
movsl
iret
and
je
dec
jno
pop
sbb
pop
mov
std
movb
xchg
ret
ds
es
repz
push
jns
daa
adc
aaa
adc
loop
rorl
cmp
or
sub
andl
aad
xor
rcll
rorb
adc
cmp
stos
mov
pop
outsb
std
mov
in
jmp
sbb
jnp
roll
mov
pop
jns
rorl
sbb
fldl
das
lods
push
incb
push
ret
cmpsb
add
gs
sub
stos
adc
mov
add
in
pop
fbstp
pop
out
jp
fcmovbe
push
frstor
rcl
push
xchg
adc
mov
scas
pop
cmc
and
pop
test
ds
xchg
test
sbb
push
lret
jae
popf
and
push
sbb
outsb
pushf
out
incb
test
dec
mov
xchg
dec
dec
sar
add
xlat
mov
cmc
stc
sub
push
cld
cmc
push
out
pop
xor
sub
stos
arpl
addb
enter
test
sbb
and
mov
jo
iret
in
dec
jae
rcl
rolb
outsb
adc
xor
lret
sbb
cmp
fwait
lret
mov
ret
rorl
sti
add
xchg
sub
jl
pop
and
lds
mov
mov
fnstenv
fmulp
rol
mov
mov
insl
xlat
sub
adcb
sbb
pop
cmpsb
mov
push
and
push
fcomps
cmpb
insb
mov
mov
decb
xchg
xlat
lea
scas
dec
mov
or
push
rclb
cmp
sbb
in
adc
jnp
lock
pop
push
movsb
inc
fists
outsl
pusha
jge
fisttpll
pop
push
lods
mov
movb
rcrl
push
dec
iret
push
and
mov
inc
mov
movsl
jne,pn
adc
xor
push
cmp
mov
add
jle
shl
test
jmp
lret
shlb
in
loope
fisubs
adc
add
push
lock
daa
in
cmpsb
fisttps
int
cltd
mov
jnp
loop
ret
bound
int3
scas
push
jns
sbb
dec
mov
jae
ds
ja
adc
mov
pop
dec
out
leave
cmpsl
mov
sahf
add
mov
ljmp
fs
loope
sub
in
sbb
js
dec
loopne
or
fwait
or
mov
stos
adc
call
add
out
mov
pop
leave
push
inc
jmp
xchg
inc
inc
sbb
mov
push
cwtl
sbb
xchg
lea
inc
cmp
inc
and
or
mov
dec
hlt
data16
sti
into
in
addb
xchg
repz
sub
adc
mov
testl
sbb
adc
cli
movsb
stos
push
pop
out
and
cmp
mov
in
mov
scas
xor
incb
shr
mov
fsub
test
push
mov
leave
push
pavgb
jne
lret
je
cld
cmp
sub
cmp
cmpsb
aas
mov
inc
repnz
in
hlt
adc
fimull
and
lret
inc
push
shlb
pop
fisttps
adc
lock
inc
mov
loop
fcoms
loope
sub
and
negl
sbb
jo
adc
xor
mov
push
fs
and
inc
subb
mov
shlb
cmpsl
fwait
test
in
mov
fldl
orb
js
jbe
ds
push
sub
les
subb
repnz
pop
orb
loopne
fidivrs
loopne
xor
sub
xchg
push
dec
adc
call
inc
inc
jns
xchg
mov
jg
jbe
cld
mov
sub
test
jnp
insb
jg
xchg
sti
or
push
add
sbb
arpl
or
into
stc
or
push
aam
sub
movb
jnp
or
imul
repnz
test
cmp
jmp
push
xchg
push
inc
xchg
into
xchg
push
mov
lods
pextrw
push
add
sub
arpl
push
data16
add
jp
roll
push
mov
push
mov
scas
inc
push
loope
mov
mov
mov
xorb
stos
sbb
pop
lret
js
jge
ds
in
inc
ljmp
jp
add
cli
adc
xchg
mov
inc
push
push
dec
shl
inc
in
subb
adc
movsb
adc
inc
jle
inc
scas
xchg
push
pop
xor
jl
data16
loope
lcall
popf
insb
test
xor
addl
adc
add
xorl
mov
popa
hlt
les
inc
xchg
xlat
add
test
jmp
and
into
add
loop
push
fwait
cs
icebp
bound
lock
data16
sbb
sub
sub
call
jle
mov
in
nop
sbb
cmp
xor
xor
daa
test
jg
sarb
outsl
daa
das
out
subb
cli
adc
mov
test
jnp
js
imull
mov
test
in
push
outsl
or
movsl
addb
mov
icebp
iret
pop
jo
loope
cmp
push
or
fistl
shll
icebp
inc
mov
daa
js
imul
and
ljmp
add
scas
call
es
and
mov
je
pop
push
or
scas
mov
xchg
mov
insb
dec
pop
test
mov
pop
xor
cmp
push
stc
int3
in
xchg
pop
mov
cmp
mov
test
lods
push
inc
sub
mov
ss
push
pop
pop
add
std
hlt
sub
aad
sbb
push
adc
mov
popf
adc
inc
popf
sub
mov
clc
mov
scas
xchg
pmullw
and
ja
push
mov
pop
sbb
cmp
or
inc
gs
enter
andl
ss
and
xor
ret
lods
push
jns
mov
jnp
xorl
out
inc
ficoms
into
push
mov
and
ljmp
outsb
mov
pop
lds
and
fidivrs
test
mov
add
sub
pop
iret
fstpl
push
andl
push
mov
cwtl
mov
add
mov
arpl
xchg
xor
gs
push
dec
lods
test
cmpsb
stos
mov
mov
jle
mov
enter
cmp
xchg
pop
cmp
int
xchg
in
sbb
rol
mov
loopne
or
cltd
mov
xacquire
ret
push
xor
lock
jle
dec
xor
test
scas
scas
icebp
loopne
mov
test
loop
je
or
xorl
repnz
imul
adc
mov
add
mov
pop
mov
stc
call
pop
sub
imul
and
cmp
push
pop
mov
xor
adc
adc
mulb
mov
ret
pop
fwait
sub
inc
mov
mov
and
add
leave
dec
stos
pop
sti
test
cwtl
lahf
lods
lret
add
mov
je
int
cmp
pop
repnz
mov
ds
and
int3
pop
test
mov
rcr
sub
inc
mov
add
xchg
push
cmp
add
je
xor
nop
add
in
jp
rclb
movsl
test
subb
imul
outsb
lahf
mov
data16
cmp
xchg
mov
insb
popaw
sbb
repnz
or
mov
movsb
xchg
mov
xor
jb
and
fs
clc
scas
lds
push
std
push
mov
mov
pop
std
mov
cmp
mov
lods
or
cmc
dec
sub
adc
cli
lret
stos
jle
mov
xlat
xor
sti
sub
addr16
orl
or
lock
cwtl
clc
sarb
dec
inc
jge
adc
xchg
fcoms
lock
pop
leave
push
dec
jne
jle
mov
fistpl
inc
xchg
mov
mov
cwtl
adc
inc
sub
push
and
scas
in
stc
std
xor
xchg
jo
xchg
push
xor
jmp
dec
sbb
sub
sti
cmp
repnz
data16
ret
negb
inc
pop
stos
idivb
out
dec
int
add
cli
push
out
pusha
fwait
add
mov
or
int
decl
cmpsb
cltd
hlt
and
or
ret
and
ret
pop
in
sub
mov
gs
dec
pop
and
cmpsb
push
add
sub
mov
jb
sbb
out
jae
addr16
xchg
lea
push
mov
outsb
add
sub
sub
scas
push
shll
xor
in
adc
inc
fldl
pushf
cmp
adc
jmp
sbb
scas
and
jmp
push
loopne
xchg
mov
push
adc
lods
add
out
jl
or
mov
xchg
mov
aam
rcl
dec
inc
sbb
test
cmp
fucom
cld
xchg
cmp
lret
dec
mov
fsub
loop
xchg
lret
cmp
mov
sub
cmp
lock
jecxz
jmp
inc
and
inc
addr16
push
js
andl
push
in
mul
imul
outsl
loope
add
inc
lea
lahf
flds
cmp
mov
push
add
imul
loopne
mov
not
rolb
add
popl
dec
lods
or
mov
jle
and
add
mov
cmc
loop
outsl
sbb
inc
pop
xlat
mov
sahf
ja
ret
pusha
sti
lods
adc
or
mov
test
sti
add
push
fdivl
loopne
mov
pusha
or
cmp
lds
adc
or
xor
hlt
mov
xor
inc
xchg
mov
xor
sbb
notb
vorpd
scas
aad
arpl
push
and
add
inc
or
or
mov
call
sbbb
and
sbbl
xor
jmp
push
and
xor
nop
lahf
xor
or
in
add
adc
pusha
xchg
jecxz
mov
cmpsl
shrb
cmp
sbbl
popf
adc
je
add
adcl
outsl
add
cltd
dec
fsubrl
xchg
out
hlt
pop
fwait
push
sbb
lahf
xchg
cld
add
mov
inc
pop
sbb
scas
mov
lods
add
pop
shr
cmp
fsts
pop
jmp
jb
mov
adc
inc
adc
mov
mov
sub
or
add
pop
jle
movsb
lcall
ljmp
sub
mov
inc
or
pop
and
outsb
fisubrs
xchg
insb
cmp
push
jne
mov
fwait
push
sarb
jns
fldl
cmpsb
out
lret
scas
and
mov
adc
xchg
loopne
jmp
mov
mov
out
xchg
or
int3
lds
mov
pop
aaa
adc
jmp
test
jl
and
or
out
jle
movsl
mov
mov
call
xchg
xchg
popf
fcomp
pop
sti
mov
jb
maskmovq
divl
xor
mul
jns
push
xchg
jge
and
je
sarl
adc
mov
lods
fiadds
es
leave
lahf
jl
sub
pushf
popf
xchg
and
fnsave
loop
insl
push
mov
add
movsl
daa
mov
sbb
arpl
sbb
dec
dec
jg
add
xchg
or
inc
cwtl
cld
mov
add
dec
push
sbb
mov
sbb
lods
cmc
sub
das
mov
xlat
sbb
add
adc
sub
notl
push
sub
inc
lcall
jmp
aad
loop
data16
int3
fs
idiv
flds
movsl
lret
cmpsl
hlt
pop
stos
xlat
cmp
inc
xchg
push
mov
repnz
mov
outsl
xor
repz
jne
nop
out
sahf
cs
insb
mov
stos
pop
sub
xchg
inc
in
sbb
loop
sub
adc
shlb
push
push
repnz
and
jbe
adc
jbe
push
push
push
shrb
pop
mov
pop
aaa
out
or
mov
lds
inc
lods
pop
inc
mov
imul
push
rcll
mov
test
or
or
aaa
test
pusha
jp
lahf
das
or
shll
xchg
lock
or
in
mov
mov
dec
sub
test
sub
or
aad
adc
shl
insb
leave
push
rcl
cmp
inc
ljmp
xchg
fcomps
iret
mov
mov
mov
enter
addl
dec
or
jl
test
fsubrs
test
shr
xor
sub
and
jmp
daa
bound
rclb
and
pusha
lcall
ja
cmp
and
std
loope
add
pop
mov
or
mov
jno
mov
adc
inc
pop
mov
and
push
xchg
js
push
call
and
in
adc
push
out
lods
mov
xlat
in
lea
cs
shrb
xchg
xchg
add
icebp
mov
cmp
out
mov
pusha
and
decb
mov
mov
push
mov
cmp
mov
or
fisttpll
dec
idivl
sub
fs
dec
push
inc
xchg
dec
push
mov
orl
scas
outsb
or
fdivr
jecxz
fstl
inc
adcb
mov
pop
in
test
cmp
pop
jno
test
test
aas
jne
dec
lea
std
fsub
jmp
call
int
mov
stos
jmp
and
popf
xchg
nop
xor
cmp
or
dec
pusha
mov
push
xchg
ds
dec
pusha
add
jle
out
push
xor
cmp
and
sub
push
stos
mov
jae
push
push
fisubrl
subl
pop
push
insb
add
mov
dec
push
loop
mov
cmova
scas
mov
movsb
mov
xor
mov
psubusb
sbb
mov
outsb
pop
aas
pusha
stos
roll
push
shll
or
dec
shl
jle
inc
stos
fisubs
imul
jne
push
xchg
out
arpl
dec
aas
or
lcall
mov
gs
mov
aad
in
inc
xor
fnsave
iret
cmpsb
jmp
and
out
es
dec
clc
lret
xor
or
and
or
pop
lret
pop
or
ret
rcrl
fildll
repz
xor
jne
loope
push
outsl
sbb
fisubs
lcall
xor
or
das
cmp
out
outsb
pop
fmull
aaa
jbe
xor
aaa
out
inc
mov
leave
mov
xor
xor
adc
mov
jbe
add
imul
cmp
mov
adc
jb
daa
add
cmp
mov
stc
dec
sub
mov
pop
push
jmp
or
pop
add
leave
mov
daa
js
ja
cmp
cwtl
inc
xchg
jae
adc
orb
js
inc
or
mov
.byte
.byte
dec
sub
add
lea
pop
add
sar
add
andl
outsb
push
jmp
and
or
leave
bound
rcl
pop
xor
push
mov
imul
pop
lret
xchg
lcall
pop
mov
shrb
mov
sahf
jnp
loopne
frstor
xchg
pop
clc
pop
xchg
popf
xchg
pop
push
add
xchg
mov
enter
leave
and
fldenv
shrl
sub
std
mov
lret
and
xor
rcrb
notb
mov
add
jbe
andb
aad
push
cmc
in
ja
sub
or
mov
add
int
fwait
cli
orb
xchg
xlat
imul
rcll
or
scas
int3
ret
lahf
test
mov
cmp
clc
mov
sbb
lds
sub
add
push
aas
imul
or
mov
out
xchg
push
fidivs
lds
imul
push
xor
inc
popa
outsb
fistpl
mov
ljmp
in
xchg
js
sub
add
push
fimuls
pop
sub
add
push
daa
pop
push
mov
mov
cmp
out
fcomps
pushf
lds
imull
popl
push
lcall
xor
push
test
cmp
adc
cltd
pop
adc
repz
lock
pop
outsb
jae
add
push
rcrb
pop
roll
mov
inc
push
cmc
inc
js
lods
lock
ffreep
or
sbb
ljmp
jp
sbb
cwtl
je
jecxz
xor
out
push
addl
cltd
bound
dec
fcmovu
and
cmp
adc
out
nop
inc
insl
mov
push
out
dec
mov
and
mov
pop
imul
or
adc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
sar
lahf
in
mov
mov
add
mov
pop
mov
add
and
mov
and
mov
mov
add
mov
xor
movswl
xor
or
mov
sbb
sub
mov
sub
jne
push
jbe
mov
pop
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
add
jmp
or
push
das
cmp
hlt
or
jle
inc
sahf
cli
or
mov
shll
and
cmovs
insl
push
aaa
shll
add
adc
sbb
dec
bnd
xchg
cli
les
pop
xchg
mov
adc
dec
dec
sub
or
jae
das
dec
adc
mov
popf
push
or
mov
dec
or
fxch
fcom
out
jne
jecxz
rcrb
add
and
mov
lods
jmp
dec
mov
add
aad
push
xor
ret
jb
adc
je
xorb
xorl
andb
lods
imul
mov
bnd
out
incl
or
mov
ljmp
pop
push
inc
lahf
daa
imul
pushf
aas
int
push
cmp
push
rcrb
fnstcw
and
push
mov
mov
and
sub
xlat
imul
cmpsb
mov
nop
iret
enter
or
cmp
adc
mov
and
cmp
out
cmp
mov
mov
push
cmc
test
xor
lods
int3
fsub
mov
mov
xchg
mov
sbb
adc
cmpsl
lds
stos
lds
and
mov
cmp
pop
cmpsb
mov
or
or
inc
loope
test
sbb
or
and
mov
and
movsl
ds
pcmpgtd
mov
mov
iret
lods
shl
lds
cmp
push
arpl
in
lods
incb
aas
jnp
sti
sbb
out
mov
in
divb
pop
bound
and
iret
pop
inc
xchg
repz
pop
divl
call
sbb
in
movsl
push
mov
add
add
popf
jge
in
pop
dec
adc
push
add
sbb
das
pop
dec
mov
jmp
cmc
jg
dec
out
push
xchg
mov
mov
fwait
jp
jbe
shl
movsb
lods
movsb
jp
sub
mov
icebp
jmp
dec
aam
cmp
mov
imul
cmp
lods
mov
xor
arpl
pop
arpl
add
inc
mov
cli
lret
mov
jbe
xor
cmpsl
xor
fwait
xchg
in
lret
dec
jb
mov
mov
pop
jnp
adc
xor
inc
icebp
mov
sub
pop
mov
add
ljmp
cmc
adc
stos
jg
xchg
mov
add
sub
scas
jecxz
xor
arpl
inc
pop
sahf
xor
in
vpcmpeqb
mov
fldl
mov
fldl
mov
dec
mov
test
movsb
dec
int3
mov
mov
rolb
rorb
push
mov
or
mov
push
mov
cmpsb
fsubrl
inc
pop
lock
push
mov
mov
dec
mov
mov
lcall
pop
les
mov
shrl
dec
mov
inc
mov
dec
mov
mov
imul
cmp
fstpt
rorb
jp
mov
xor
sub
dec
ljmp
dec
push
int3
jecxz
mov
cmpsl
xor
and
mov
das
dec
mov
push
xor
daa
push
mov
fstps
push
mov
stos
xor
aas
push
mov
movsl
xor
push
je
dec
mov
int3
aas
push
mov
int3
daa
push
mov
shrb
sbb
aaa
shll
mov
dec
push
addr16
and
loopne
push
mov
dec
and
inc
mov
adc
lea
jb
shll
push
rorb
int3
jecxz
mov
xchg
das
dec
mov
jge
shlb
xor
mov
dec
push
push
fistl
sub
mov
add
fsts
das
dec
mov
int3
in
mov
shl
pop
shlb
ret
test
fcmovu
dec
sub
loopne
xor
mov
mov
xor
movsl
xor
xor
mov
rcl
xchg
push
mov
imul
xchg
mov
xchg
fwait
push
dec
cmp
bound
bound
aad
jne
mov
movsl
xor
fwait
push
dec
cmp
bound
push
bound
fisubl
jecxz
and
mov
pusha
jl
cmp
aad
jne
mov
dec
mov
iret
and
push
dec
cmp
sub
inc
dec
mov
pusha
jl
cmp
aad
jne
mov
lods
sub
mov
cs
mov
dec
mov
pusha
xchg
cmpsl
cmp
aad
jne
mov
iret
adc
sarl
dec
mov
int
xchg
dec
lods
xlat
push
mov
sbb
fisubl
mov
and
mov
ret
push
sub
imul
xor
adc
insb
mov
sub
int3
inc
stos
test
inc
stos
mov
icebp
fidivs
mov
or
test
popa
push
cwtl
sub
je
mov
icebp
fidivs
into
jp
push
cmpsl
enter
adc
mov
mov
dec
mov
mov
xor
or
aas
stos
inc
shll
aaa
push
cld
bound
movsb
inc
shl
pop
shll
sub
shlb
shll
fcmove
iret
mov
xor
jmp
shrl
lods
dec
les
push
mov
test
xlat
add
xor
mov
mov
sub
push
imul
and
popa
outsl
rorl
dec
push
rcll
je
mov
es
mov
arpl
push
jmp
mov
icebp
and
pop
pop
sbb
dec
scas
inc
sbb
fwait
inc
imul
jo
mov
xchg
aaa
sub
pop
pop
cmp
or
xor
xor
xor
xor
xor
xor
dec
dec
mov
fbstp
push
mov
mov
xor
xor
xor
jo
shlb
xor
xor
xor
xor
xor
repz
rorb
push
mov
sub
fists
leave
out
jg
cmp
inc
clc
xchg
test
cli
mov
jp
cld
sbb
clc
test
inc
sub
add
in
lret
hlt
xchg
clc
jg
pusha
and
cmp
mov
in
inc
fcmovnbe
rolb
adc
fstp
inc
xchg
es
clc
fcmove
pushf
jge
insl
mov
bound
pop
popa
es
or
lods
pop
ss
dec
cli
xchg
fists
jne
test
outsb
pop
adc
jecxz
mov
adc
sub
add
xchg
cmp
mov
pop
cmpsb
cld
mov
mov
push
sub
jp
sbb
sub
dec
dec
sbb
iret
fisubl
push
and
outsl
add
add
or
add
sbb
cli
pop
add
pop
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cli
pop
add
stc
pop
add
pop
add
pop
add
sti
pop
add
pop
add
sti
pop
add
pop
add
sti
pop
add
pop
add
sti
pop
add
pop
add
sti
pop
add
add
add
pop
add
add
add
jbe
jo
xor
fs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jbe
jb
cs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
sti
pop
add
add
add
add
addb
add
idiv
pop
add
add
add
add
addb
add
add
pop
add
add
add
cld
pop
add
add
add
add
popa
jae
imul
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
inc
inc
push
xor
inc
push
inc
inc
dec
inc
pop
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
outsl
outsb
je
outsl
insb
data16
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
call
or
add
lahf
add
add
push
pop
jo
xchg
adc
mov
inc
adc
inc
and
and
sub
sub
adc
add
sbb
push
hlt
inc
nop
push
sub
mov
fiadds
mov
adc
or
sub
ss
adc
or
add
jb
outsb
xor
add
push
and
xor
or
test
sbbl
add
arpl
and
xor
cmp
xchg
and
in
test
cmp
xchg
je
mov
in
jb
cmp
pusha
add
xchg
push
enter
dec
jb
cmp
add
cmp
xor
xor
cmp
cmp
sub
clc
and
push
xchg
fmul
fsub
aam
rcrb
push
add
or
subb
add
or
add
fdivl
mov
push
xor
pop
jmp
sub
xor
and
xor
sbb
sbb
adc
movups
or
add
push
mov
adc
push
int3
push
call
add
test
jne
xor
rolb
lret
mov
add
or
mov
add
jge
rcrb
sbb
add
fs
sahf
aas
mov
xor
add
mov
cmp
shll
cmp
fadds
xchg
test
add
dec
mov
mov
push
or
cltd
push
add
aas
adcb
xor
adc
inc
cmp
add
mov
stc
push
xchg
push
adc
mov
nop
push
jg
add
aam
pop
pusha
xchg
add
inc
push
jmp
add
mov
jns
adc
jne
push
add
call
xchg
pusha
jg
add
inc
add
jmp
dec
add
dec
cmp
aam
sbb
fildll
pop
add
loope
call
test
pop
pop
pop
movsb
add
je
in
mov
xor
mov
jge
sbb
add
call
fmul
ja
and
jne
mov
ss
or
arpl
stos
cmpl
inc
add
jmp
xchg
or
push
jb
ja
into
je
fbstp
push
iret
incb
sbb
sub
and
stc
push
jl
pop
xchg
adc
sar
loopne
jbe
xor
sub
or
add
jle
gs
sbb
pop
bound
fisubrl
into
dec
adc
pushf
or
jmp
add
adc
mov
jae
push
push
sbb
nop
out
cmp
or
test
cmp
or
sarl
fs
adc
and
mov
cli
call
clc
jp
adc
pop
flds
cmp
add
popa
push
mov
push
push
push
lds
jns
lret
and
cmp
movl
lahf
in
add
dec
adc
dec
in
adcl
or
pop
push
data16
push
nop
sbb
clc
lds
jns
adc
addb
push
and
repz
inc
push
out
ja
dec
cmp
mov
je
add
mov
adc
packssdw
dec
xchg
or
movl
filds
xor
xor
jle
add
sub
jmp
and
xchg
sbb
adc
je
add
jb
ljmp
aaa
add
xchg
ret
setae
loop
clc
mov
mov
dec
sbb
or
dec
inc
cmc
xor
pop
je
adc
add
xchg
nop
jbe
add
fstp
add
call
cmpb
add
adc
sub
add
cmpsb
jmp
nop
xor
mov
mov
or
xchg
imul
xor
mov
repz
push
es
flds
add
pop
leave
clc
divl
add
cmovno
sbb
jae
fisttpll
loope
jge
add
addl
add
xchg
enter
add
pusha
shll
movl
out
shlb
cmc
pop
aam
cmp
jg
pop
sub
jl
xlat
push
push
add
push
add
push
add
inc
arpl
test
leave
or
fiadds
call
and
int3
sbb
cmpsl
int
add
cmp
lahf
add
pop
fisubrs
adc
fs
mov
sub
cmpb
xchg
add
bound
jne
test
push
add
jle
add
sub
pushf
es
imul
mov
xor
add
enter
add
mov
or
rorb
leave
mov
mov
orb
pop
pushw
lahf
dec
jo
dec
sub
sbbl
mov
cmpsb
jp
inc
inc
and
sub
imul
adc
inc
adc
movl
es
lds
sbb
or
jnp
push
out
cmp
fiadds
jae
ror
push
je
roll
mov
jmp
int3
inc
mov
mov
test
fcmovne
pop
mov
ret
nop
mov
cmp
mov
adc
mov
repnz
cmp
inc
add
xchg
add
pop
mov
pop
addl
push
dec
add
xor
add
gs
jle
and
pop
add
popa
mov
sahf
jb
mov
adc
push
sbb
mov
push
push
sbb
popf
adc
leave
add
hlt
inc
sub
add
jo
sub
add
bound
add
mov
mov
adc
pop
xchg
sub
jmp
adc
in
cs
pop
les
add
out
xchg
test
add
movsb
shlb
dec
sbb
loopne
lock
adc
add
ja
and
add
push
cmp
in
out
add
std
pop
add
xor
adc
add
lret
xchg
sbb
pop
push
or
and
fistpl
loopne
push
sbb
jl
orb
subl
or
fists
add
cmp
jg
add
test
jns
sbb
add
xchg
inc
add
rclb
jmp
dec
pop
push
fimull
inc
sbb
pusha
cmc
mov
adcb
popfw
mov
sub
shll
out
or
sysret
push
ret
cli
lock
sahf
add
mov
push
mov
sub
xchg
sbb
add
cli
adc
jl
movl
add
and
mov
repz
leave
enter
mov
or
sbb
xchg
sub
lock
loop
xchg
in
pop
adc
adc
add
lods
cmp
or
jl
add
sub
or
push
dec
or
cmpsl
ret
add
mov
dec
dec
nop
xor
add
je
sub
add
mov
mov
add
xor
test
lods
and
inc
testb
cli
mov
jb
or
cmp
pop
push
add
mov
dec
mov
or
add
or
fs
pop
mov
and
and
clc
mov
and
add
jbe
js
push
xor
add
mov
incb
dec
sub
clc
xchg
or
pop
dec
cwtl
aas
pop
fdivrl
add
push
repz
xchg
scas
pushf
les
cli
jmp
cmp
push
xchg
xchg
les
inc
psubb
inc
out
adc
sub
add
in
jns
push
xor
aad
sub
mov
jecxz
stos
adc
pop
jo
cmp
adc
mov
or
pusha
add
dec
jmp
fisttps
sub
roll
rcll
cltd
dec
cwtl
aaa
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
cs
push
add
pop
adcb
ljmp
bound
sub
xor
push
mov
adc
pop
scas
push
xchg
imul
inc
lea
pop
cld
ret
or
mov
inc
addb
sbb
fadds
es
sub
add
and
add
and
aas
movb
xor
test
mulb
ffree
xor
insl
fistps
outsl
cmc
xor
dec
add
adc
iret
aam
icebp
or
add
xor
les
and
pop
nop
cmp
or
mov
loope
push
cs
sti
ret
pusha
dec
or
mov
cmp
xchg
pop
add
push
addb
add
ljmp
mov
mov
jne
pop
ja
add
insb
add
jnp
xchg
sbb
xor
jg
mov
jmp
pop
sub
add
in
shll
push
add
fmuls
dec
xchg
sbb
add
jp
idivb
jmp
sbb
sub
cmpl
cwtl
test
cmp
mov
les
xor
fnstcw
add
repz
into
xor
push
dec
sbb
mov
gs
pop
add
xchg
xor
jmp
adc
inc
mov
add
imul
dec
jle
pop
fs
xchg
push
lea
add
mov
dec
call
cli
aad
leave
bound
sub
xor
and
mov
push
add
sti
shrb
add
xor
add
test
xor
jge
jns
and
add
cmpsl
add
jne
imull
and
aas
add
popf
add
sahf
dec
lret
cmp
inc
jbe
mov
test
subb
or
push
imul
nop
add
and
adc
sarb
loope
sub
jo
push
push
inc
or
in
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
jnp
pop
mov
andb
pop
test
and
mov
cmp
cli
sub
pop
sub
lock
in
add
mov
add
cmc
test
push
test
jne
movsb
inc
dec
inc
inc
add
jns
cwtl
fs
roll
ror
pop
push
add
inc
mov
stos
pushf
push
add
pop
addr16
notl
loopne
xchg
int3
xor
or
dec
pop
sub
cmp
push
adc
mov
or
cmpsb
movsl
lcall
and
cmp
out
aas
dec
push
addb
mov
test
faddl
orb
dec
cmp
cmp
jb
mov
inc
add
orl
ljmp
js
mov
mov
push
lds
push
or
add
push
mov
xor
mov
imul
pop
pop
sub
xor
out
dec
adc
jo
cmc
xlat
shl
mov
and
enter
add
mov
popf
mov
add
sar
push
jne
shl
sub
xchg
in
jge
jge
js
pop
enter
imul
pop
testb
add
stos
add
push
sahf
aam
test
mov
fldl
imul
add
dec
jne,pt
and
subb
add
daa
fsubl
jl
add
ret
adc
repnz
push
xor
mov
sub
sbb
shll
dec
add
xlat
jmp
add
and
js
xchg
ret
cmc
in
push
adc
sbbl
cwtl
add
jmp
xchg
sahf
sub
rorl
dec
inc
ret
movl
cmp
xor
loop
imulb
add
notl
and
add
scas
stos
mov
add
add
arpl
fs
cli
jmp
sbb
adc
pop
repnz
mov
les
pop
and
adcl
adc
add
dec
ss
pop
sbb
xor
rolb
ret
push
hlt
dec
lock
add
xchg
test
adc
xchg
call
inc
pop
cld
or
mov
xchg
and
and
mov
adc
xlat
mov
cmp
mov
push
shlb
xchg
jne
add
leave
je
xchg
jl
add
push
mov
and
add
sbb
and
fdivr
jle
push
cmp
adc
rcl
cmpsb
faddl
add
or
scas
add
add
sub
mov
ja
orl
add
int3
enter
iret
ror
into
sbb
lret
fcmovu
fstp
push
fnstsw
add
jecxz
in
nop
pop
push
add
test
cmpl
add
shlb
add
popl
push
adc
psubb
mov
mov
adc
rclb
fcom
push
cmp
or
ja
je
pusha
sub
add
rep
clc
sbb
shlb
xor
cmp
push
sbb
push
std
sbb
add
movl
or
les
or
jmp
decl
mov
inc
shl
cmp
jbe
pop
add
push
jnp
loop
pop
add
out
pop
and
sbb
inc
adcb
add
bound
adc
lock
cs
shrb
pop
cmp
jl
popa
pop
into
and
add
adc
out
add
lret
sbb
ret
js
loopne
push
push
add
and
mov
cmp
repz
push
add
push
push
cmovnp
jmp
aad
and
loopne
scas
sbb
jb
inc
jae
pavgb
sarb
out
repnz
hlt
add
imul
pop
fs
loopne
add
add
pop
cmpb
or
ffreep
mov
insb
push
add
fstps
mov
std
fistps
push
sub
adc
sbb
xor
pop
psubusw
mov
add
jb
cmp
enter
pusha
shrl
add
jp
addl
addb
dec
leave
mov
push
test
pop
loopne
and
push
daa
and
push
hlt
or
imul
adc
mov
sbb
addb
cmp
jne
dec
clc
adc
loope
pop
lret
sbb
ret
dec
inc
loop
push
out
push
cmp
lock
je
mov
cmp
jne
xor
xchg
dec
add
add
mov
push
inc
or
js
add
mov
adc
mov
sbb
add
mov
push
xchg
adc
data16
mov
sbb
add
xor
add
cmovno
mov
mov
cmp
dec
push
adc
inc
es
outsl
add
xchg
mov
fistl
xchg
dec
add
clc
pop
sbb
movl
jge
movb
cli
mov
pop
pop
inc
mov
stc
adc
out
test
push
mov
xchg
jnp
add
mov
adc
dec
jne
inc
lods
add
and
jmp
xor
xchg
jae
arpl
mov
mov
push
inc
cmp
xlat
clc
int3
mov
add
sub
shlb
and
or
popa
rcrb
add
psrad
lods
sub
dec
test
dec
int3
and
add
jmp
or
shlb
sub
clc
call
add
add
fcoms
xor
jne
dec
xchg
aam
jl
add
xor
dec
add
jle
js
fldcw
fidivs
add
outsb
lds
mov
mov
xor
je
xchg
popa
jb
add
mov
or
adc
adc
add
or
mov
add
rcl
jge
add
cli
sub
shr
add
inc
mov
dec
adc
repnz
push
cmp
add
add
add
je
nop
xor
push
clc
in
ss
add
mov
or
dec
mov
adc
add
dec
sbb
pop
cld
or
mov
lock
add
push
rolb
xor
sub
add
sbb
nop
jmp
mov
fneni(8087
push
arpl
je
add
sub
add
inc
cwtl
repnz
dec
pop
push
mov
cwtl
mov
mov
jo
dec
pusha
inc
mov
cld
push
bound
push
cmp
inc
call
add
adc
popa
mov
xor
mov
sbb
inc
hlt
add
lret
or
add
lods
and
add
ljmp
push
cwtl
loopne
sub
jno
in
and
lahf
clc
add
or
sti
push
mov
add
inc
push
push
inc
loopne
add
inc
outsl
jb
popa
cmp
outsb
cmp
inc
gs
jo
imul
rolb
push
add
jae
push
mov
xchg
add
cmp
lods
xlat
pusha
jo
xor
and
inc
scas
cli
in
cmp
fadds
call
pop
adc
ljmp
push
jne
ss
dec
faddl
push
pop
call
inc
pushf
inc
divb
push
mov
push
pop
imul
add
sbb
or
sets
add
add
loopne,pt
add
and
add
mov
xorb
cld
dec
add
xlat
stos
mov
and
fisttpl
pop
call
dec
loop
mov
push
add
jo
sbb
jmp
cmp
cs
add
jae
testb
push
sub
orb
jg
add
dec
jne
inc
jecxz
push
add
leave
adc
cmpl
hlt
js
inc
add
ret
dec
mov
test
xchg
add
dec
push
sbb
sarl
add
movl
clc
or
mov
ret
pop
add
sub
lock
add
notl
adc
adc
add
sbb
call
add
faddp
xchg
inc
out
adc
add
loope
push
lahf
or
add
push
mov
popl
adc
pop
adc
jle
add
xchg
imul
add
or
add
or
pop
inc
lock
push
or
adc
je
add
sbb
pop
and
xor
inc
and
adc
push
clc
xchg
sub
add
in
lods
mov
out
stos
push
push
call
adc
add
adc
imul
add
pushf
xor
sub
push
cmc
add
push
cmp
or
or
jbe
add
or
mov
jae
jmp
mov
movsb
adc
add
cmp
cmp
jmp
or
mov
cmpsb
cmp
push
mov
adc
xor
mov
pop
or
push
adc
and
inc
loop
ret
jbe
loopne
mov
dec
inc
sbb
andl
in
cmp
add
inc
inc
sbbl
dec
adc
je
cld
push
call
dec
or
mov
add
cs
call
mov
out
and
add
orb
push
je
pop
lods
movsl
loopne
or
cmp
ja
add
scas
adc
and
add
stos
sub
xor
lret
loop
mov
sbb
adc
or
out
pop
cmp
add
dec
add
add
fildl
loop
popa
sbb
out
inc
movsl
pusha
mov
push
shrl
fwait
nop
call
out
pushl
mov
aad
add
movl
stc
pusha
push
cmpsl
mov
jecxz
mov
adcb
mov
nop
test
inc
inc
sub
jmp
pop
add
enter
je
xchg
es
xorb
sbb
jmp
add
inc
sub
or
addr16
add
in
lds
inc
push
out
dec
pop
add
and
clc
test
add
fdivrs
dec
out
addr16
fs
mov
shrb
or
popa
into
je
les
pop
imul
or
add
xacquire
es
clc
xchg
jmp
and
sub
and
inc
push
icebp
insb
mov
cwtl
push
inc
mov
mov
lcall
lea
call
or
loopne
loope
or
mov
inc
add
fisttps
test
rorl
sub
add
push
mov
pop
xchg
add
inc
das
imul
push
mov
push
xchg
mov
sub
inc
or
jns
pusha
add
std
cmp
or
add
xor
mov
sbb
pop
fcoms
mov
add
outsl
lea
add
fs
mov
xchg
les
cs
add
movl
pop
dec
pop
int
adc
add
mov
add
push
cmp
pusha
adcl
sub
pop
xchg
mov
wbinvd
adc
enter
xchg
orb
pusha
xor
aas
pop
addl
sub
add
adc
sub
cs
adc
push
and
sbb
sbb
push
mov
sub
enter
leave
cmp
popf
and
iret
and
movl
cmpsl
push
or
fchs
push
lret
daa
push
ss
mov
pop
ret
addr16
repz
sub
cli
icebp
nop
es
mov
lret
cltd
ss
add
push
divb
cmpl
xor
sbb
mov
mov
out
add
pop
dec
pop
add
aaa
pop
xchg
jne
push
adc
xchg
adc
or
ja
in
xchg
add
imulb
clc
add
fmuls
lods
or
mov
add
cmp
shrb
pop
pushl
add
cmc
popf
and
mov
add
dec
loope
add
jo
xchg
cmpsl
jmp
test
sbb
lock
aam
xchg
add
shlb
out
cmp
adc
mov
add
stc
dec
or
pop
cmp
pusha
test
dec
add
xor
xor
adc
cmp
jle
sbb
ffreep
ds
out
sub
jg
dec
pusha
jecxz
adc
lea
mov
rep
popl
fwait
inc
add
mov
out
clc
movsb
or
dec
cmc
or
xchg
cmpl
mov
jns
add
sub
cli
inc
or
inc
mov
pop
inc
mov
jmp
xchg
das
push
popa
addl
sbb
and
jne
or
adc
fstps
and
and
xor
rcll
inc
je
sbb
lahf
cmp
mov
push
push
js
and
cmp
and
dec
add
test
push
in
lods
adc
rol
mov
out
mov
add
dec
adcl
call
or
add
pop
pop
lcall
mov
push
pop
rclb
call
and
ljmp
or
ja
push
and
add
xchg
movsb
push
es
adc
neg
sbb
pop
leave
test
test
mov
xor
and
nopl
cmpl
loopne
pop
mov
rolb
ret
adc
jne
or
cmp
je
adcl
and
test
add
adc
mov
subb
or
pusha
and
jo
outsb
dec
add
push
ds
adc
lods
sub
add
jne
mov
pop
mov
inc
or
lock
and
mov
push
pop
add
stos
shr
insl
aaa
pop
cs
jns
cmp
add
pop
push
jg
and
ljmp
ret
sub
adc
cmp
pusha
lret
mov
add
push
jnp
insb
sti
cmp
jp
add
mov
jns
cmp
add
pop
sub
xorl
sub
scas
lret
int3
add
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
push
daa
add
enter
in
add
mov
and
inc
jg
mov
add
inc
add
scas
pcmpgtb
dec
adc
add
jmp
mov
jl
dec
dec
xchg
add
adc
cmp
push
add
jne
pop
or
add
adc
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
nop
jecxz
and
pop
in
incb
mov
jp
add
xchg
pop
in
xor
add
cmp
in
xchg
test
add
shl
fptan
ljmp
dec
and
sti
push
js
jge
add
or
push
sub
adc
inc
jnp
xchg
test
inc
add
add
into
cmp
push
xor
in
jnp
cwtl
pusha
add
cwtl
push
and
pusha
xor
add
inc
lret
mov
adc
loop
rcll
push
and
cmp
adc
loop
add
or
add
bound
pop
imul
xor
sbb
rcrl
in
adc
add
xor
or
and
xor
or
sub
jmp
xchg
push
jbe
xlat
and
pop
nop
cmp
ret
push
inc
dec
add
push
push
push
sbb
repnz
scas
mov
not
pop
add
rcrl
mov
add
popa
jo
ljmp
ja
jnp
leave
xor
add
test
std
xor
mov
add
test
cli
push
cmp
add
ja
sub
jp
push
dec
add
movsb
cmc
add
stos
adc
cmp
xchg
inc
mov
je
add
mov
stc
rolb
jmp
pop
cmp
rcll
into
push
add
add
inc
outsb
jne
fisttps
fadds
mov
ja
cli
mov
xchg
addps
divl
dec
clc
decb
lret
push
push
scas
add
push
cmpsb
inc
in
mov
dec
xchg
dec
adc
das
adc
cld
dec
jno
push
pop
xor
add
mov
outsl
shl
add
into
push
rolb
jne
sub
out
enter
les
pop
lea
add
loopne
fldcw
icebp
add
rorb
jg,pt
add
fcoml
sarb
add
adc
add
mov
push
in
mov
dec
mov
sub
mov
out
xchg
pop
add
push
and
cmp
xor
push
cmp
adc
lret
add
jae
add
sub
and
cli
aam
pop
adc
add
shlb
push
clc
add
js
inc
xchg
adc
fildl
cmpb
addb
dec
mov
cmp
and
adc
fcomps
int3
sbbb
ss
mov
jle
and
es
jne
add
fidivrl
sub
push
sahf
jg
push
hlt
leave
xchg
arpl
and
or
mov
fsts
adc
aad
mov
rolb
add
adc
add
jle
sub
jmp
mov
repnz
dec
jg
pop
sti
push
mov
inc
dec
filds
test
xor
add
orl
js
mov
inc
rcr
adc
aad
add
mov
cmp
repz
adc
mov
in
pop
sbb
pop
inc
shlb
daa
add
push
inc
xor
sub
fwait
dec
cld
ret
cmpl
outsl
jne
in
call
mov
clc
movsl
cmp
jne
out
inc
sbb
nop
pop
scas
push
xor
sub
fwait
xchg
stos
pop
xor
sar
and
add
push
add
jne
mov
lret
inc
sbb
repz
push
mov
add
inc
adc
ss
aas
mov
loopne
mov
add
nop
sbb
repz
or
pushl
inc
fninit
push
adc
sbb
les
leave
clc
stos
and
dec
push
pop
xor
roll
dec
push
sti
xchg
push
inc
into
pusha
dec
pop
adc
xlat
or
and
adc
adc
in
add
mov
mov
popa
push
bound
sbb
test
incl
cs
adc
jg
sahf
add
jl
stc
loopne
fisttpll
mov
add
jnp
or
test
inc
push
or
pop
aas
or
push
inc
jnp
enter
mov
add
mov
pop
outsl
mulb
iret
sub
sarb
jmp
adc
repz
js
xchg
sbb
xor
int3
sbb
inc
sub
lock
in
add
xchg
repz
push
shlb
or
add
or
arpl
sub
sbb
jno
std
aaa
push
push
lock
jmp
push
inc
add
call
ja
xchg
repnz
push
icebp
dec
add
mov
dec
cwtl
test
mov
mov
dec
fiaddl
movb
popa
ja
stc
push
push
pop
pop
mov
sub
cmp
cmc
and
push
sbb
ja
jle
sub
filds
and
xchg
inc
int3
fwait
add
or
push
add
push
mov
fdivs
sub
dec
sub
fwait
add
mov
xor
sub
pop
mov
test
test
sbb
std
sub
test
add
mov
test
cmp
mov
mov
adc
xchg
jns
cmp
gs
jne
cmp
jb
loopne
cltd
mov
adc
cmp
loopne
sbb
daa
add
dec
loopne
mov
aam
movsb
popf
nop
mov
andw
shlb
lea
test
and
jmp
adc
push
adc
mov
pusha
cmp
add
adc
xchg
jp
inc
or
ret
cltd
jo
jg
adc
movd
jns
xor
add
xchg
adc
or
in
mov
jp
push
ret
xchg
fs
rorb
sbb
cmp
lock
add
jge
push
sub
add
xor
adc
push
xor
push
pusha
sub
jbe
cwtl
dec
ds
xchg
xchg
pushf
icebp
add
mov
cmp
and
push
jo
mov
imul
jnp
pop
add
bound
es
and
pop
jno
xor
daa
incl
enter
xor
roll
iret
call
loopne
lret
rolb
push
sub
std
add
das
cwtl
sbb
pop
mov
xor
inc
fs
or
add
xor
dec
popl
jge
daa
push
rcrl
pop
push
add
dec
sub
pushf
xchg
inc
add
xchg
mov
std
cmp
jecxz
pop
insb
in
shlb
lock
xchg
ret
loopne
fmuls
push
call
pop
lcall
jbe
out
add
pushf
fimuls
xor
fadds
jne
filds
pop
loop
xor
adc
add
and
shll
or
aad
add
and
add
xchg
xchg
ret
add
fwait
das
xchg
rcrb
adc
clc
ja
add
adc
jns
push
mov
into
add
pop
scas
gs
jb
push
inc
cltd
mov
movsl
rclb
out
add
sub
fdivrs
js
add
or
repz
daa
movntps
loopne
and
push
pop
add
mov
pushl
or
les
add
mov
cmp
sub
push
adc
jp
push
roll
add
and
mov
push
mov
cmp
add
cmpsb
je
addl
test
test
in
sbb
xchg
rclb
jl
adc
movsl
add
jmp
add
inc
sbb
cld
adc
int
add
ja
pop
add
or
or
loopne
test
ss
hlt
out
jmp
add
xchg
adc
ret
out
inc
clc
mov
fs
dec
leave
xor
xor
subb
add
xchg
ret
rolb
lock
hlt
cmpl
rcrb
mov
ja
insl
sarl
movsb
adc
inc
add
ss
cmpb
cmp
vmread
std
in
out
loopne
adc
adc
xlat
xor
adc
lea
lds
pop
push
add
psllq
jne
jge
push
add
cmp
clc
dec
movl
add
nop
movsb
jg
inc
add
add
xor
loope
pop
jecxz
inc
je
fidivs
addr16
mov
iret
aam
cmp
add
inc
cmp
dec
movb
inc
inc
dec
lods
inc
nop
lock
aaa
jbe
add
test
and
test
call
add
sub
pop
or
rorl
gs
shrb
cs
jnp
cmc
setb
outsl
jae
push
popa
out
push
add
adc
test
loopne
setb
jno
jecxz
inc
stos
pusha
pop
inc
out
add
jnp
fldcw
loopne
and
faddl
adc
add
jo
jne
les
and
add
push
sbb
pusha
ret
movsl
mov
aam
nop
outsl
cmp
add
jp
push
jae
pop
aaa
sbb
push
push
cmp
inc
xsha256
cmpsb
push
mov
xor
xchg
call
add
add
sub
sbb
adc
testb
mov
scas
mov
or
mov
into
loopne
adc
dec
mov
cmp
add
sub
add
adc
leave
add
insl
inc
mov
cmp
sub
add
stos
inc
xchg
xor
inc
imul
and
add
cmc
inc
and
leave
fneni(8087
adcb
add
jb
gs
dec
fidivrs
arpl
jae
cmp
sti
cmp
and
pop
mov
mov
add
and
pop
daa
and
push
cmpsb
and
loop
mov
outsl
add
pop
cmp
mov
add
push
ja
mov
fsts
std
sbb
add
lods
mov
shr
dec
pop
aaa
shll
push
add
and
mov
jae
mov
or
mov
in
or
cs
mov
loopne
cli
ljmp
shlb
jecxz
cmp
addb
mov
mov
or
add
mov
jnp
push
add
repz
xchg
sub
jecxz
inc
enter
adcb
adc
loopne
sub
push
lea
mov
sub
jb
mov
adc
pop
clc
insl
pop
repz
sbb
push
mov
add
jge
scas
jmp
inc
mov
and
xor
imull
jg
jbe
dec
pop
je
jne
dec
sbb
jbe
add
dec
mov
lret
push
and
pop
add
or
jge
cld
cs
sarb
bound
repnz
inc
rol
inc
sbb
call
daa
or
cli
les
in
mov
js
dec
mull
add
cmpb
and
scas
mov
sti
cltd
sqrtps
or
pusha
jo
and
cmp
and
sub
mov
pop
decl
push
add
ss
jnp
enter
mov
push
sub
inc
push
cmp
stos
sub
aad
popa
adc
jl
pushl
inc
add
andb
outsb
fmul
add
push
or
test
add
dec
sbb
inc
adc
or
and
xchg
adc
push
xchg
mov
inc
pop
push
jle
divps
call
push
cmp
pop
leave
outsl
imul
pusha
shlb
add
dec
cli
loopne
in
ret
jl
add
and
add
jmp
mov
lock
nop
iret
dec
adc
add
mov
push
ljmp
adc
sbb
pop
mov
adc
nop
adc
dec
add
jp
push
adc
mov
xorb
sbb
clc
adc
int
movsb
add
ret
sub
xchg
mov
mov
out
rcrl
out
push
ret
and
cmpsb
scas
sbb
mov
and
in
xchg
xorb
sub
push
mov
cmp
mov
sbb
and
push
loope
and
dec
jmp
add
femms
dec
cld
out
adc
rcrb
js
or
movsb
mov
jae
clc
push
cmp
cmp
addl
hlt
loope
pushl
or
test
mov
les
pushf
xor
inc
xorl
jbe
push
add
adc
add
add
sbb
incl
push
xorw
adc
dec
cmp
cli
pop
aad
cmp
jb
fildl
pop
mov
icebp
call
lods
xchg
dec
dec
ret
hlt
add
orl
lret
les
andb
adc
cs
stos
pusha
add
jmp
xor
adc
mov
add
cmpsl
into
fs
push
pop
aam
rorb
pop
jmp
lods
push
ret
inc
or
loopne
xor
je
xchg
pop
cld
adc
jo
icebp
sbb
mov
dec
add
mov
cwtl
add
and
mov
inc
or
loop
pop
xorb
pop
add
sbb
xchg
and
icebp
mov
jne
mov
pop
mov
mov
mov
cmc
lds
inc
xor
nop
jle
add
mov
inc
add
sarl
add
mov
sbb
movsb
dec
pop
add
push
pop
test
add
bound
xchg
push
cmp
jne
add
cmp
add
pop
cmpsb
dec
es
add
sub
pop
js
push
mov
cmp
jle
and
pop
jmp
lcall
push
xor
pop
add
jle
add
pusha
jmp
ret
sbb
jno
aas
and
cmp
or
or
inc
or
icebp
cmc
add
add
jmp
fisttpl
repz
pop
jge
adc
adc
test
adc
pop
sub
lret
add
lret
leave
mov
imul
call
shll
shrb
add
test
loopne
jnp
add
inc
hlt
repnz
shll
in
and
add
xlat
nop
aaa
cmpsb
stos
lahf
and
loopne
dec
je
lret
push
adc
mov
shrb
loop
add
xchg
fldt
sbb
fmulp
shr
add
bound
push
mov
add
inc
add
test
ljmp
add
mov
push
or
pop
addr16
loopne
mov
gs
add
adc
enter
mov
inc
add
ja
pushf
or
push
ret
inc
jp
add
adc
adcb
and
out
sbb
push
jp
xchg
subb
inc
mov
add
aam
or
out
je
mov
out
sub
xor
cmp
or
leave
sbb
mov
aaa
cli
jbe
cmp
cmp
xchg
ds
mov
mov
lods
add
jmp
lods
inc
rolb
adc
fadds
lods
add
js
xchg
xor
push
push
in
int3
add
into
sbb
rorl
mov
popa
push
jbe
jp
pop
add
movsl
sbb
push
mov
hlt
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
ret
add
sub
inc
add
mov
dec
or
mov
stos
and
out
push
mov
xorb
cmp
lea
divl
xchg
inc
xor
cmp
jecxz
adcl
sti
jmp
add
inc
mov
push
sbb
paddb
sarb
int3
repnz
inc
sbb
or
lahf
outsl
inc
pop
stos
clc
add
cli
in
pop
pushf
sbb
jmp
repnz
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
rclb
or
cmp
xchg
add
dec
dec
in
xchg
loope
cmp
push
in
pop
cmp
mov
lock
movsl
mov
aaa
popa
sti
in
popf
and
fildl
addr16
repz
mov
lret
fwait
xchg
and
mov
add
les
aad
bound
add
aas
cli
dec
adc
jge
cmp
fs
cmpb
rcrl
pop
ret
movsl
and
sub
xchg
inc
xchg
dec
rcrb
or
sbb
shlb
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
xchg
fucomi
and
jne
add
xorb
add
loopne
rorb
cmp
jb
xchg
jo
sbb
sbb
inc
loop
pop
test
je
inc
imul
repz
jmp
rcrb
lock
cwtl
and
or
cmp
jne
add
lret
repnz
add
ret
add
pushl
addb
clc
xor
sub
stos
test
in
andl
inc
mov
sahf
jnp
add
fs
dec
pop
push
inc
pop
out
enter
jle
pop
jb
hlt
pop
lods
xchg
lret
and
int3
inc
add
inc
xor
orb
rsqrtps
stos
cmovo
and
add
sbb
pop
stos
xor
loop
adc
sti
pop
sbb
and
cli
pop
mov
out
cltd
xor
clc
cmp
pop
aas
xor
fs
cmp
scas
add
inc
push
popf
add
and
rcll
sub
lods
pop
push
or
jg
outsl
or
or
adc
stc
cmpl
in
movsl
xor
push
fcoml
add
clc
push
pop
push
addl
and
psraw
mov
cltd
and
cmp
add
add
inc
inc
clc
inc
add
add
call
cmpsl
xor
sub
or
adc
add
andb
aas
imul
nop
or
pop
imul
repz
jns
fwait
adc
add
stos
popf
stc
add
cmp
dec
cvtps2pd
sub
loopne
add
fstpt
dec
and
repnz
ja
xor
repz
pusha
xchg
add
mov
xchg
mov
clc
in
jb
cmp
or
push
das
mov
subl
add
xlat
loopne
sbb
lock
call
push
jne
add
cwtl
add
add
xor
add
adc
add
xchg
sub
mov
push
out
mov
movsl
loopne
push
ja
lds
dec
dec
sarb
or
add
sub
pop
sbb
test
adc
sub
dec
mov
add
inc
adc
add
sub
imul
add
lods
outsb
pop
xor
pop
push
mov
and
pop
jp
out
mov
mov
mov
imul
or
mov
mov
or
add
or
jnp
xchg
add
stc
jne
out
and
sahf
leave
mov
add
aad
daa
out
rcrl
in
dec
and
add
xor
mov
and
int3
push
cltd
int3
or
push
add
and
cmpsb
push
pusha
jmp
iret
sahf
movsb
rclb
jb
and
cltd
or
or
sbb
or
test
mov
pop
mov
cmp
jg
jo
add
in
jb
cmp
push
and
sbb
add
inc
jb
cmp
pusha
cmp
xor
xor
in
jb
cmp
adcb
cmpsb
add
inc
hlt
and
xchg
in
iret
add
lahf
mov
loopne
or
fdivrs
inc
inc
rolb
xchg
fiadds
loope
movzwl
rolb
roll
adc
ret
call
xchg
das
mov
add
jg
aad
sbb
or
adc
fs
xchg
nop
jg
sbb
xchg
jl
add
jo
adcb
cmp
inc
mov
push
cwtl
or
icebp
ds
jb
cmp
sbb
ror
and
xchg
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
in
out
cmp
sbb
and
dec
mov
jmp
sbb
and
in
xor
add
shlb
jne
call
sbb
sub
add
fsts
inc
rcr
fisubs
sbb
add
and
xchg
ret
in
les
cmp
sbb
mov
xchg
lret
in
jb
int
into
sbb
add
and
mov
xorl
mov
mov
cmp
adc
mov
pop
jo
and
inc
popl
inc
add
pop
out
sbb
sub
cmp
dec
jg
pop
stos
sub
inc
push
add
sub
inc
js
gs
shll
cmpsl
xor
sbb
pop
push
addl
add
push
in
mov
adcb
inc
dec
jne
je
data16
insl
outsl
jb
cmp
and
inc
mov
or
dec
outsb
fnstsw
cwtl
mov
sub
xchg
or
je
inc
sub
mov
mov
xor
test
adc
push
pop
jle
and
lock
adc
add
sarb
jns
testb
inc
inc
imul
outsl
add
pushf
adc
out
dec
add
add
outsb
addr16
popf
and
add
or
or
jbe
scas
data16
outsl
dec
hlt
je
sbb
pop
fld
sbb
or
mov
arpl
repz
or
imul
icebp
pop
mov
shlb
dec
insb
icebp
popa
movsb
rcl
bound
pop
lcall
or
pop
cmp
sub
mov
mov
xchg
outsl
dec
ss
test
or
sbb
or
inc
mov
add
inc
jne
add
outsl
aam
add
mov
int3
ljmp
ret
mov
mov
mov
mov
sub
sub
es
push
xor
mov
in
cmp
lret
or
orb
push
add
arpl
push
nop
addr16
mov
or
add
and
out
cmpsl
xor
scas
pop
fs
test
xchg
or
cld
aam
pop
ljmp
rcrb
inc
popa
and
outsl
lea
pusha
mov
sbb
bound
mov
pushf
orl
dec
inc
lods
shlb
je
pusha
in
mov
push
sub
fsub
jo
incl
imul
in
cmpsl
fimull
add
ret
adc
repz
hlt
pop
or
stc
rclb
fadds
mov
add
iret
insb
pop
push
sub
add
imul
insl
and
push
cmpsb
sub
popf
inc
sbb
add
dec
cmc
pop
or
add
cmp
clc
dec
loope
jmp
fisubrl
dec
mov
nop
push
leave
mov
mov
or
rorb
push
fmull
shll
inc
ds
repz
je
add
js
jo
jp
ja
dec
jge
jg
and
cmc
cmp
add
xor
sub
imul
ljmp
in
add
outsb
out
inc
cmp
jl
pop
jae
push
pop
jmp
jbe
hlt
push
or
mov
xchg
popa
jmp
pop
dec
xchg
sub
xor
insb
add
sub
jne
shll
xor
xchg
add
pop
cmpsb
push
or
mov
mov
dec
pusha
add
inc
push
dec
notl
add
add
mov
test
psubw
add
loop
sbb
xor
clc
loop
add
push
sub
push
add
or
adc
add
jne
xchg
cmp
add
cmc
and
add
cs
loop
repnz
xchg
aas
cmp
xchg
cs
sbb
lock
add
in
pop
inc
dec
in
push
movsl
decb
lock
add
gs
int3
or
add
mov
aam
scas
add
inc
bound
dec
add
pop
push
adc
stos
aaa
add
outsb
popf
shll
imul
out
out
mov
je
sub
pop
add
scas
or
sub
imul
aas
pop
jbe
inc
adc
out
mov
lahf
inc
jne
nop
add
push
add
test
jg
popf
add
int3
iret
lods
cli
lahf
rcll
inc
adc
pop
lock
push
add
mov
aam
pusha
mov
call
adc
push
rcll
xchg
lods
add
xor
hlt
and
in
jo
inc
add
movsb
mov
add
insl
hlt
xor
mov
call
scas
hlt
mov
cmp
push
cli
fstpl
or
xor
or
sub
cmp
cmpsb
sbb
xchg
adc
ret
pop
daa
popa
fimuls
add
xchg
xchg
push
add
adc
enter
cltd
in
cmp
xor
add
adc
add
mov
mov
and
and
out
fiadds
pop
out
jbe
dec
inc
ss
add
aas
push
push
mov
pop
shl
jg
shl
popf
fwait
lret
mov
imul
sbb
lret
add
mov
add
add
add
pop
jne
sti
or
fadd
ficompl
add
test
pop
and
hlt
sub
add
decl
shlb
sahf
add
inc
add
adc
push
sub
adc
push
ljmp
cwtl
test
out
cmp
adc
push
xchg
fldenv
cmp
adc
inc
xchg
rclb
add
cs
dec
inc
mov
cwtl
sub
mov
inc
aam
sbb
clc
sbb
int3
or
bnd
sbb
ds
ja
js
jo
jge
repnz
push
add
jbe
mov
add
nop
jnp
add
popf
lret
add
call
cmpsb
sbb
jmp
and
iret
lock
cld
popa
add
lcall
cmp
stos
loop
push
pusha
adcb
pop
jg
push
mov
push
sub
hlt
adc
pop
into
mov
and
inc
movaps
dec
sub
or
add
ljmp
rolb
sub
xor
lods
call
rolb
jg
outsb
or
and
jmp
adc
mov
add
sub
ret
jne
fcoml
add
and
push
xor
cmpb
lcall
add
inc
push
lods
movsb
xchg
std
or
fisubs
popf
jmp
push
inc
add
add
sbb
pop
mov
pusha
clc
sub
je
and
add
cmpb
or
cmp
in
insb
mov
sub
ret
jo
sbb
loop
test
ja
sbb
or
jl
mov
sbb
je
stos
xchg
dec
fsubrl
sar
popf
outsb
cmp
jo
pop
add
jne
lea
fadds
add
dec
mov
inc
and
popf
insw
add
outsb
int3
or
jg
xor
inc
lret
add
add
pcmpgtb
xor
mov
imul
rcll
add
aad
int3
mov
adc
cltd
adc
push
or
ror
mov
pusha
sub
pop
mov
mov
jmp
testl
je
dec
sbb
pop
stc
call
add
sub
lock
dec
scas
icebp
ror
add
inc
sbbb
loop
ljmp
pop
pop
sub
push
inc
mov
mov
jne
lea
sub
mov
adcl
nop
js
or
mov
lgs
pop
adc
test
xchg
add
or
jns
neg
add
sub
jle
cltd
gs
jnp
add
rcll
add
push
mov
hlt
ret
push
cmp
or
pop
and
cmp
add
inc
xor
and
mov
add
lods
andb
add
int
push
cmp
push
inc
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
ljmp
outsl
add
nop
or
push
pusha
or
add
dec
repnz
xchg
mov
inc
inc
push
and
loopne
jmp
sar
mov
jmp
je
loope
outsb
mov
inc
lock
aas
lcall
nop
jns
jnp
nop
inc
add
jle
enter
xor
mov
add
sbb
cmp
jbe
mov
add
ret
or
add
sub
mov
es
push
cs
xchg
add
inc
or
call
xadd
stos
fldenv
imulb
jae
add
adc
out
add
icebp
xchg
aad
andb
pop
jge
rorb
or
into
jle
add
call
inc
add
idiv
jl
imul
xchg
cmp
xchg
test
mov
dec
cli
vpinsrw
movsb
pop
pop
cmp
add
adc
jecxz
jge
sarl
loopne
push
sub
js
cwtl
sbb
add
clc
xchg
jne
scas
outsb
out
add
lea
jnp
jmp
or
pop
rol
cmp
pop
add
xor
fcmovnu
mov
add
das
jb
cmpsl
dec
imul
xchg
inc
stos
cmp
in
sysenter
sub
clc
arpl
pop
mov
add
faddl
nop
xor
fnstsw
or
call
sti
jns
sub
pop
add
xor
jmp
movsb
add
adc
mov
adc
test
popf
sbb
je
cs
adc
cmp
jle
sbb
or
cli
cmp
and
stc
inc
clc
addl
cmp
imul
adc
add
xchg
pusha
aad
push
xchg
ret
rcll
add
lahf
popa
int
or
js
xor
push
scas
enter
movsb
xchg
sbb
nop
fwait
cmpsl
add
lret
xchg
pop
dec
push
push
out
movsb
into
jo
jno
push
xchg
lock
add
mov
jb
movsw
jns
fmull
dec
or
aad
hlt
push
popa
add
mov
shl
pop
xor
add
cmp
pop
hlt
fiaddl
clc
pop
xchg
sub
cmp
roll
shlb
adc
mov
fs
es
into
sbb
jbe
mov
and
pop
call
scas
aam
mov
clc
adc
cli
out
add
fdivs
stos
cmpsl
inc
sbb
aas
bound
lea
add
xor
in
in
clc
jge
pusha
or
and
cmp
jle
and
orb
xor
sbb
insb
aas
cld
movl
adc
jle
xor
add
jle
add
cmp
dec
or
add
mov
imul
add
cmp
push
inc
mov
subb
repz
or
add
dec
adc
inc
std
jno
jo
push
push
inc
test
cld
xchg
ja
loop
bound
les
shrb
call
adc
add
pop
or
jnp
in
pusha
add
call
hlt
sub
test
jg
sub
pop
sbb
hlt
add
mov
jo
nop
add
inc
pop
dec
cmpl
clc
popf
add
pcmpgtd
push
jmp
jno
std
add
push
adc
jge
mov
add
addb
jnp
mov
lcall
decl
or
imul
fs
je
push
sub
nop
inc
in
adc
pop
mov
movsb
sub
loopne
add
dec
mov
out
sub
push
pop
bound
insl
push
add
adc
xchg
ror
pushf
dec
add
mov
inc
in
mov
cmp
jb
fs
inc
jmp
jg
mov
sbb
pop
or
sbb
fs
hlt
dec
add
repnz
inc
dec
push
hlt
pop
and
or
std
and
adc
jmp
jle
adcb
add
mov
or
arpl
add
push
fstpl
sub
enter
stc
add
out
adc
and
popa
cwtl
adc
mov
mov
pop
mov
rorb
jp
pop
jno
mov
pop
das
int
mov
nop
push
cs
xchg
add
and
dec
ret
repz
and
xlat
enter
mov
bound
cmc
add
add
jmp
clc
ds
xor
add
fcmovnu
jmp
or
adc
leave
cmpsl
imul
xchg
pop
add
mov
add
or
dec
es
dec
cmp
lahf
cmpsb
xchg
jecxz
cmp
add
lret
mov
inc
movb
push
shlb
jl
xchg
inc
mov
or
fbld
mov
stos
and
jl
pusha
mov
or
inc
cld
push
pop
hlt
adc
sti
add
je
nop
nop
push
push
add
stc
pop
clc
cwtl
push
add
in
add
fs
jnp
sub
push
loopne
outsl
dec
pop
inc
pusha
sbb
sahf
add
cld
test
or
pushf
mov
bound
ja
push
loope
add
lret
repz
test
jno
idivb
jle
xor
cmp
cmp
lds
loopne
mov
loop
dec
les
pop
inc
in
shl
sub
add
adc
sub
movsb
dec
leave
add
scas
xor
loope
pop
add
mov
pop
mov
cmp
pop
filds
jbe
lods
lods
pop
mov
lock
js
jmp
movb
movsb
sub
mov
fwait
pop
jge
mov
popl
cmp
into
dec
pop
add
push
push
push
xor
aaa
push
and
add
movsb
nop
movl
add
cli
fisubl
add
add
andb
add
xchg
jle
push
dec
fsubrl
add
mov
movb
inc
push
shl
movsl
pop
ds
lret
add
or
aam
shll
and
pop
pop
add
paddusw
adc
fld
das
ret
add
xor
nopl
ljmp
dec
sbb
mov
cld
adcb
scas
jmp
fcomps
jle
orb
popf
add
jmp
out
bt
jae
and
and
push
into
dec
ja
xor
dec
hlt
mov
cmp
insl
mov
add
sub
negl
les
mov
nop
push
xor
add
jle
xchg
mov
add
adc
push
cli
add
xor
inc
add
les
in
test
fistps
and
les
and
mov
dec
fcompl
fs
lds
pop
or
jns
mov
aaa
orb
sub
dec
add
sbb
jo
dec
adc
addb
les
test
cmp
add
push
test
and
add
mov
das
jne
jp
pop
out
inc
cmp
mov
aam
and
add
and
and
dec
mov
dec
push
mov
or
popf
xor
add
and
mov
call
inc
rolb
shl
and
add
add
pop
adc
adc
adc
call
add
mov
xor
fdivs
sub
add
ljmp
adc
pop
add
ss
aas
add
inc
sti
ljmp
dec
inc
xchg
movsb
hlt
pop
mov
or
lock
addr16
lret
xchg
int3
add
mov
inc
mov
mov
mov
add
mov
les
push
cmpb
mov
add
arpl
imul
rsqrtps
nop
test
outsl
add
jns
add
mov
jg
popa
sub
das
or
add
cmp
shl
je
cld
popf
pop
inc
lret
data16
push
cmpsb
in
or
inc
add
dec
dec
or
cmpsl
cwtl
clc
popl
pop
dec
lods
jge
lea
ds
xchg
cmpb
push
add
nop
cwtl
inc
imul
hlt
xchg
or
xchg
cmp
pop
cld
add
xlat
ret
cmp
jno
jge
in
jle
pop
mov
mov
addb
xor
lods
mov
aad
imul
adc
jle
clc
mov
dec
sbb
add
cmpb
mov
cwtl
imul
pop
push
enter
adc
or
sbb
rdpmc
pop
fildl
and
loopne
add
add
jg
cmp
jne
icebp
push
adc
inc
call
pushf
add
pop
pop
cwtl
test
mov
sarl
add
pop
fists
jo
pop
pop
inc
add
or
addl
dec
je
or
ljmp
and
ja
jne
adc
mov
pop
dec
cmp
add
dec
outsb
xchg
ja
repz
add
je
loopne
mov
xchg
push
repnz
add
jmp
mov
shr
pop
addr16
mov
das
mov
rclb
in
cmc
add
clc
in
push
lock
lds
incl
lock
mov
add
loopne
or
pop
orb
push
ljmp
into
xchg
mov
bound
aad
or
lock
adcb
dec
mov
int3
outsl
mov
stos
jb
mov
cmp
add
ror
sub
add
rcrb
xor
sbb
sbb
pop
inc
gs
inc
inc
and
add
cmp
push
add
lahf
jmp
add
aaa
out
rolb
mov
push
clc
jmp
adc
sbb
ret
add
add
push
add
or
orl
loop
adc
loopne
test
add
adc
popf
pop
sbb
and
jp
mov
jecxz
call
fsubrl
dec
test
subb
jg
shld
fs
test
mov
bound
inc
jo
pop
xchg
and
and
test
adc
add
je
xchg
cld
mov
mov
push
xchg
add
mov
jb
add
jle
xor
add
dec
or
loopne
int3
daa
xorb
pop
push
pop
fs
xor
mov
mov
lret
arpl
push
xchg
xchg
or
push
test
mov
sub
sti
repz
test
push
fisubs
outsb
add
leave
sbb
add
mov
aad
bswap
jmp
je
fnstsw
in
daa
mov
inc
orl
rolb
or
add
rorl
sub
and
ret
pop
test
cmp
cmpsl
add
imul
pop
std
jge
fucom
loope
lock
out
bound
filds
push
pop
aas
add
push
xchg
roll
mov
xchg
add
push
ss
repz
vxorps
js
add
les
add
jge
cwtl
add
mov
add
mov
loopne
bound
cld
pop
imulb
jo
dec
adc
adc
adc
movsb
sahf
mov
and
ds
push
sbb
or
inc
andb
pop
or
in
testl
pop
cmc
xor
cmp
or
push
or
mov
push
test
sub
jl
add
cmp
and
lock
movsb
or
in
hlt
pop
sub
inc
fstl
insb
decl
call
push
push
fsubl
add
pop
mov
add
ret
aam
or
or
fcomps
or
fmull
or
lea
mov
insl
add
xor
cmpps
dec
pusha
cld
add
sbb
mov
xor
dec
and
outsb
and
cmp
loopne
add
jl
mov
adcl
add
mov
sub
into
enter
cmpb
addl
das
incb
sti
addb
add
adc
nop
repnz
pop
in
les
cmp
paddusb
js
jle
add
push
leave
push
add
pop
adc
ror
jle
rcl
add
mov
mov
mov
inc
lcall
jmp
xor
aas
icebp
sub
add
popf
pop
stos
mov
enter
add
adc
adc
jno
enter
jne
add
lds
insb
and
pusha
lods
jne
movl
addl
pop
enter
or
xchg
lea
adcl
data16
mov
add
sbbl
jl
bound
loopne
shr
push
add
gs
push
xlat
aaa
dec
add
mov
setg
lret
lds
pushf
inc
xorb
jmp
and
push
mov
pop
sub
jb
and
js
xor
stc
outsb
clc
pusha
lret
add
add
add
loopne
sub
sub
rorb
sbb
shrl
mov
jne
push
bound
pusha
jp
call
push
sbb
adc
mov
jo
lods
xchg
jecxz
lock
push
jns
mov
xchg
lcall
inc
je
xor
dec
enter
fwait
mov
movsl
sub
jo
mov
clc
mov
xor
addb
psrad
sub
shld
inc
mov
push
repnz
and
push
in
repz
and
sbb
rcrb
add
sbb
inc
add
movsb
test
mov
mov
mov
and
inc
mov
stos
inc
mov
inc
fadds
js
mov
mov
jge
jne
shr
int3
subl
push
mov
bound
sub
cld
push
pop
or
mov
fcmovne
push
hlt
shrl
das
xor
test
push
popf
add
inc
loopne
nop
add
lock
sbb
aas
and
inc
ljmp
addb
loope
hlt
mov
add
pop
and
push
lock
adc
mov
xor
iret
jmp
pop
sbb
adc
dec
stc
or
lock
mov
jge
mov
cmpsl
cltd
add
xchg
dec
push
pop
aam
xor
bound
orb
cld
push
ljmp
jae
xchg
push
sub
inc
add
mov
dec
add
and
iret
mov
add
dec
push
xchg
or
push
mov
jnp
cmp
add
jae
adc
push
mov
js
add
cli
jns
mov
xor
cld
inc
cs
test
push
dec
dec
lods
dec
pop
xchg
icebp
xor
lds
sbb
add
or
movsb
adc
adc
inc
clc
jae
imul
jns
push
jo
popa
arpl
inc
js
cmp
mov
xchg
insb
add
add
adc
movsb
add
xor
xcrypt-cfb
cmpsl
es
cltd
test
in
adc
loopne
inc
cwtl
and
nop
adc
xor
and
push
jo
adc
sub
jle
dec
dec
incb
es
inc
stc
adc
push
xor
pop
xor
nop
sbb
sub
mov
adc
icebp
adc
or
cwtl
enter
flds
and
call
push
adc
push
in
pop
loopne
sub
and
adc
cld
mov
aam
inc
sbb
shrb
mov
pop
les
cmp
shrb
fs
call
fdivrs
jge
jge
jns
cmp
cmp
movsb
xor
sbb
repz
repz
icebp
aam
stc
cwtl
stc
pop
add
dec
dec
in
orb
or
test
xor
loop
adc
dec
je
mov
and
sarb
mov
sub
loope
testl
out
out
push
movsb
sbb
push
out
insb
out
pusha
lahf
fistpll
sub
ja
cld
enter
mov
call
daa
and
aas
adc
inc
leave
add
repnz
xchg
push
sub
or
dec
pop
push
movsb
and
jge
mov
jle
and
dec
or
xchg
setno
sbb
jb
cld
sti
pusha
in
call
das
cld
and
loopne
add
jg
xor
jae
xchg
enter
add
roll
inc
popw
shlb
out
mov
pop
adc
inc
or
or
mov
mov
add
popf
xor
mov
jge
pop
adc
jbe
and
inc
and
jb
scas
push
mov
mov
add
sbb
sub
insl
cwtl
dec
dec
add
mov
cmp
std
jl
or
leave
xchg
sbb
sbb
add
add
iret
jmp
cld
ret
inc
add
aas
je
adc
clc
add
or
stos
push
cld
pop
mov
sbb
inc
push
xor
and
dec
lods
pop
or
xor
xchg
ljmp
mov
sub
push
add
dec
stos
or
dec
insl
rolb
jmp
mov
clc
fiaddl
pop
mov
lock
faddl
xchg
sbb
sub
or
push
in
mov
add
cmp
loope
pop
sbb
jae
or
mov
add
loop
cmovns
jmp
sub
out
addb
rorl
add
repz
dec
je
add
cmc
push
repz
sub
decl
or
or
lds
int3
loopne
cmp
testl
sahf
andl
or
add
fnstenv
incl
cmpsl
xor
lea
leave
xchg
add
add
push
push
push
fldenv
add
jmp
mov
call
sbb
add
inc
loop
fdivl
sbb
xor
rolb
mov
ret
and
inc
add
jmp
and
paddusw
sub
sub
sub
push
add
dec
jmp
stc
sbb
in
in
call
aam
insl
adc
test
call
and
sub
fnsave
inc
gs
pushf
add
pop
or
mov
or
mov
ret
add
scas
aas
adc
iret
push
add
sub
push
rorl
inc
pushf
mov
sub
lahf
nop
add
pusha
push
mov
add
rcr
out
cmc
mov
sbb
or
pop
stc
jo
shll
fcoms
push
jle
sbb
cmp
gs
jge
cmp
jmp
xor
add
jne
add
xlat
pop
je
cmp
add
push
add
cld
jo
sti
cmpsl
in
test
or
jecxz
lods
cmp
push
je
shll
inc
and
adc
add
mov
xchg
add
add
or
or
add
lods
cmp
rolb
ror
sbb
jmp
out
pop
xchg
test
and
lock
data16
push
xchg
push
clc
push
hlt
add
inc
xor
and
into
add
xor
xor
inc
je
jbe
add
jl
pusha
inc
mov
jmp
inc
inc
out
push
shll
lret
jp
add
call
push
mov
add
andb
and
scas
mov
xchg
sahf
sub
shll
loope
add
jmp
cwtl
pop
in
imul
clc
inc
add
out
add
hlt
outsb
loopne
aad
dec
add
ret
mov
add
test
adc
jmp
ret
add
push
inc
push
mov
je
add
faddl
add
lea
inc
ret
mov
clc
xchg
into
cs
pop
jecxz
repz
inc
push
sbb
mov
and
pop
adc
pop
mov
ror
mov
movb
sub
hlt
cld
sbb
add
sub
ja
add
mov
add
int
jp
add
add
les
pop
jmp
xor
add
sbb
cmp
aam
decl
jne
jmp
add
inc
out
js
push
in
mov
fsubrl
inc
fneni(8087
icebp
xor
int3
jp
loope,pn
xchg
pop
jmp
mov
mov
inc
ja
out
jle
mov
leave
shll
data16
cltd
rcrl
pop
pop
adc
xchg
cmp
movsb
fdivrs
add
cs
lea
and
add
and
es
push
lahf
xchg
add
stos
inc
jae
cmpl
inc
cwtl
adc
movb
jo
jmp
add
imul
sar
inc
outsl
adc
orl
loope
mov
test
fldt
fmul
frstor
xor
push
test
rolb
cs
mov
clc
fbstp
enter
jg
add
mov
in
add
sbb
pcmpgtd
add
add
sub
rolb
and
add
loop
pop
add
or
add
cmpb
sbb
cmpsb
movl
adc
cmp
in
jmp
push
cmpsb
xor
mov
dec
xchg
dec
cmp
inc
mov
or
ljmp
push
add
imul
cs
enter
test
mov
imul
aas
pop
xchg
ljmp
jmp
jl
mov
inc
sub
sbb
mov
loopne
jae
dec
push
add
popf
loop
pusha
js
add
inc
insl
xlat
push
mov
ret
fidivl
repnz
mov
testb
add
pop
and
jne
dec
xor
jmp
rol
sub
stos
and
jecxz
mov
and
pusha
rorb
push
or
pop
aad
cmpb
adc
int3
pop
jg
mov
rorb
movsb
jmp
lock
shll
jbe
call
sub
jnp
add
addb
lds
inc
cmp
add
xchg
or
orb
add
push
inc
xor
add
jg
bound
and
add
sbb
xor
out
sub
pop
add
stos
add
pop
dec
ret
adc
test
dec
stc
aam
wbinvd
add
loopne
ds
cmp
fstpt
fwait
sub
test
mov
adc
mov
nop
insb
add
and
add
dec
je
lahf
iret
sub
nop
cmpl
and
std
add
dec
sbb
dec
push
add
push
mov
test
add
nop
cmp
sub
sbb
stc
clc
das
pop
add
cmp
add
or
push
call
aas
jp
sbb
bound
mov
fildll
adc
outsl
inc
xor
xor
adc
aas
sahf
and
stos
inc
add
jbe,pn
add
or
rclb
out
sub
dec
jb
mov
cld
add
test
pusha
or
int3
dec
pop
adc
add
loop
fcomps
add
jne
jae
mov
xor
and
test
xchg
add
leave
lret
cmp
mov
add
aaa
jo
add
adc
mov
mov
jp
or
mov
push
xor
lds
cmp
jo
jbe
es
test
pop
sub
adc
mov
or
mov
lcall
je
sbb
dec
hlt
or
fildl
not
mov
add
rcrl
fdivs
jae
add
jno
je
mov
mov
ret
push
popa
mov
mov
roll
lods
sbb
repnz
loopne
or
jae
add
push
mov
ret
adc
testl
jg
add
jbe
les
lret
shr
out
cmp
or
idiv
or
jmp
or
ja
add
xlat
adc
jge
add
cli
jae
andb
push
mov
inc
cmpb
adc
sbb
mov
cmovg
sbb
and
mov
sub
leave
sti
pop
jp
xlat
loopne
sub
imul
cmp
dec
test
fnsave
jge
fimull
adc
into
sbbl
andb
pop
inc
cld
xor
lret
inc
leave
test
add
inc
xor
int
push
in
jb
and
add
inc
iret
rclb
cmc
jne
clc
add
xor
cmpb
mov
das
push
mov
movsl
or
adc
add
pop
lods
add
jnp
ja
cmp
add
or
es
test
sub
rorb
adc
cmp
cmp
add
adcl
xchg
cmp
test
mov
add
negb
xor
dec
lea
mov
test
pop
inc
add
lahf
jp
shlb
call
or
mov
sbb
sbb
or
outsl
pop
and
inc
negl
add
pop
adc
inc
inc
dec
jne
mov
jl
jmp
addb
in
add
loop
ret
mov
mov
xor
daa
repnz
adc
add
dec
test
dec
jl
add
movsl
roll
inc
and
js
pop
jns
aas
adc
add
pop
or
sbb
mov
pop
testl
sbb
sub
loopne
pop
cs
adc
cmpsb
and
and
test
jecxz
nop
pop
push
lock
imul
sub
in
jge
bound
incl
aam
dec
jle
and
pop
add
dec
mov
fstpl
in
into
mov
mov
add
lea
inc
add
jle
clc
inc
rolb
add
add
sub
add
pop
dec
mov
and
dec
inc
push
in
pop
call
sbbb
xchg
add
lock
push
add
jl
ss
mov
pushf
xor
cld
dec
push
nop
stc
mov
inc
inc
rolb
inc
dec
dec
dec
dec
orb
dec
push
push
push
push
sub
movb
pop
pop
popa
bound
gs
add
imul
outsl
add
jb
je
xorb
pop
jns
xor
xor
xor
cmp
add
cmp
sub
add
sub
cmp
sub
daa
or
add
test
adc
xchg
stos
xchg
test
jno
mov
mov
inc
clc
ror
add
lcall
add
dec
fwait
jb
jp
sub
adcb
dec
adc
imul
jg
mov
mov
rcrb
test
adc
data16
nop
pop
in
jbe
add
xchg
in
lock
pop
aas
push
jno
push
add
cmp
lahf
shll
add
dec
cmpl
loopne
mov
into
xchg
push
lret
xor
flds
xor
lcall
and
mov
jle
add
movsb
adc
add
arpl
faddl
call
push
jl
adc
movsl
clc
hlt
std
bound
add
push
pop
loop
aas
or
jle
shr
jbe
mov
in
hlt
mov
add
rorl
sbb
outsb
cli
mov
add
test
add
xchg
out
in
push
int
push
adcb
add
dec
cmpsb
inc
mov
cmc
stc
aas
mov
or
xor
inc
pop
and
add
pop
imul
push
or
inc
pushl
cwtl
add
test
int
add
add
outsl
mov
in
insl
push
sbb
cld
push
push
add
lock
add
shlb
adc
xchg
push
add
les
and
push
push
test
leave
cmp
das
mov
add
sub
cmpsb
cmp
dec
add
outsl
pop
mov
xor
xchg
sub
and
mov
xchg
dec
add
add
outsl
dec
int
and
mov
mov
cld
adcb
xchg
dec
add
popf
mov
or
sbb
or
inc
add
xor
data16
dec
add
push
inc
test
pop
lret
loope
push
insb
and
arpl
mov
pushf
add
lods
aam
push
mov
lahf
jg
dec
push
jle
jne
das
inc
subb
mov
mov
mov
stos
bound
adc
movb
lock
sidtl
and
and
int
push
lret
add
xor
movb
jl
out
xorb
mov
add
add
pop
jne
movb
clc
aas
cmp
adc
push
mov
bswap
lea
pop
clc
sbb
xchg
add
les
daa
jb
add
jecxz
dec
jns
addb
cmp
ret
adc
les
inc
xor
cmp
add
cwtl
fnstsw
adc
fisttpll
mov
xchg
cmp
mov
inc
mov
mov
je
inc
mov
mov
mov
add
xlat
scas
mov
not
push
out
add
lock
push
adc
push
add
xchg
cld
add
lods
inc
mov
adc
popa
dec
or
dec
repz
jg,pn
add
xchg
lret
or
add
xlat
sub
fbld
inc
add
jl
fsubs
loopne
push
subb
pop
mov
pusha
stc
testl
mov
notl
hlt
pusha
inc
ja
add
cld
arpl
jns
les
hlt
loop
xchg
inc
jg
or
pop
sub
add
add
push
add
jmp
xor
sbbl
mov
add
mov
pop
ret
pop
jbe
dec
fldl
lock
mov
sub
div
enter
dec
sbb
pop
inc
mov
bswap
jne
add
aaa
shl
xchg
push
les
push
filds
add
in
mov
cld
shll
push
lcall
add
aaa
xor
xchg
cmp
inc
add
xchg
xchg
lcall
add
adc
sbb
xchg
jg
test
add
stc
add
shlb
fisttpll
sbb
mov
cmp
jae
cmp
jmp
add
add
popf
mov
insb
cmp
dec
insl
pop
pop
data16
mov
lds
add
xchg
fucomi
add
test
aam
scas
lcall
rcrl
add
mov
call
cli
loop
imul
bound
push
xchg
push
add
xchg
aas
fwait
adc
es
add
xchg
jno
stos
mov
insb
inc
dec
lock
add
cmp
cwtl
inc
add
xchg
xchg
repnz
in
loopne
xlat
das
add
rcrl
lock
sub
inc
hlt
mov
or
and
xchg
fs
xchg
lds
orb
add
dec
test
push
push
call
push
out
fdivrs
push
sub
in
add
cld
and
pop
pop
pop
mov
xchg
mov
cmpsb
xchg
adc
aam
adc
xlat
js
add
jg
xchg
cld
xor
add
and
pusha
out
mov
pop
jmp
mov
add
jmp
push
fdivs
add
xor
xor
in
dec
xchg
add
xor
cmp
dec
add
mov
rolb
cli
rclb
sbb
xchg
mov
push
mov
mov
subb
add
xchg
push
push
mov
cld
bound
adc
sbb
cmp
push
add
xchg
aam
inc
sub
mov
add
adc
dec
add
loop
mov
and
call
cmp
and
cli
xchg
enter
sub
ja
or
xchg
inc
and
add
mov
test
lret
add
out
mov
pop
inc
jns
jmp
cmp
adc
icebp
rcrl
and
jb
sbb
stos
test
mov
roll
cmp
dec
mov
shr
add
add
test
or
or
add
mov
jecxz
ret
or
mov
inc
cmpb
dec
stos
push
and
xchg
jb
iret
clc
sub
pop
mov
adc
add
mov
sub
xchg
repz
stos
add
or
sahf
loopne
test
test
push
repnz
push
push
mov
loopne
std
scas
dec
xchg
dec
mov
pop
pop
pop
loop
nop
and
test
push
lds
into
mov
pop
jbe
add
and
cltd
add
imul
pushf
add
call
scas
lock
ret
call
or
mov
pop
inc
xchg
aaa
pusha
outsb
jae
cmpsb
loope
push
stos
pop
xchg
imul
jns
fs
adc
add
dec
stos
das
arpl
jne
pop
and
add
cli
cmp
mov
shrb
xor
cmpsb
push
cs
sbb
pop
jno
out
xchg
js
add
mov
mov
dec
pop
add
mov
sahf
call
jo
loopne
or
cld
add
mov
ret
daa
jg
add
xchg
rclb
loopne
pop
mov
add
adc
cwtl
stos
and
leave
ret
nop
movsb
xchg
add
mov
cmpb
fstl
jmp
lds
stos
ltr
or
enter
leave
nop
in
int3
push
jo
add
inc
sar
cmp
fsubr
or
xor
lods
xchg
add
stos
pop
sub
sub
call
lock
adc
lcall
xlat
sbb
es
pusha
in
notl
xchg
jno
push
mov
and
mov
dec
xchg
add
push
or
or
ja
cmp
cmp
inc
enter
xor
xor
loop
adc
inc
int3
cld
sbb
imul
popl
push
filds
cmp
in
repnz
adc
daa
sarb
add
lret
sar
mov
and
jmp
lods
test
fdivr
enter
loopne
loop
mov
pop
mov
xchg
shlb
jnp
sbb
test
pop
mov
rolb
lods
adc
loopne
les
and
mov
jecxz
and
pop
leave
mov
and
jmp
inc
adc
mov
pop
xchg
fs
jg
rclb
scas
sahf
fidivl
mov
lock
xorb
push
arpl
jecxz
mov
add
scas
test
pusha
idivb
jne
add
push
stos
mov
cli
mov
subb
xor
xchg
sbb
scas
push
push
add
xlat
jo
in
xchg
pop
jnp
mov
push
sarb
adc
stc
push
mov
repz
add
std
inc
ljmp
xlat
cld
xchg
add
popa
inc
sbb
add
pop
mov
adc
leave
jbe
xchg
test
dec
roll
dec
inc
lock
in
cli
paddq
les
js
push
pop
or
in
mov
pop
push
out
pop
pop
fcomps
mov
cmp
push
push
jns
or
dec
imul
insl
jae
xlat
pushf
int3
add
sbb
jge
mov
adc
sti
scas
cltd
jae
js
adc
cwtl
shlb
mov
rcll
outsl
pop
repz
out
jp
inc
dec
cld
push
push
push
mov
sub
xchg
roll
add
add
decl
sub
sub
test
daa
clc
sbb
sub
adc
inc
push
xchg
inc
insb
mov
arpl
pushf
xlat
sub
inc
dec
xchg
jae
sbb
lret
and
cmp
ret
or
pop
daa
incb
js
dec
jne
inc
lock
add
and
cmpsb
mov
rolb
xor
add
add
jmp
iret
in
add
mov
enter
cmp
cmpsb
sub
push
mov
jmp
and
shlb
popa
and
das
insl
loopne
cwtl
pop
add
dec
xor
add
push
mov
or
or
add
dec
call
inc
cmp
pushf
fcoms
sub
xor
ss
add
push
hlt
xchg
and
out
pop
mov
add
adc
je
sub
add
hlt
cmp
add
lds
mov
ds
pop
mov
xchg
mov
add
test
icebp
insb
call
stc
movsb
ret
push
std
mov
cwtl
push
cmp
jmp
stc
jl
mov
add
push
icebp
imul
pop
xchg
mov
clc
mov
mov
sarb
das
push
add
xchg
and
imul
cs
or
dec
cltd
cs
push
add
sbb
lds
or
mov
mov
shll
push
repnz
push
push
out
sbb
inc
dec
push
dec
inc
pop
xchg
xor
dec
xor
lcall
mov
lret
or
add
xchg
rclb
adc
cmovge
pop
mov
or
je
aas
and
dec
mov
mov
mov
pushf
sub
pop
mov
aas
rolb
mov
fistps
jns
cld
in
inc
insb
push
hlt
cmp
shll
mov
add
popa
adc
fmul
add
add
movsl
mov
adc
mov
lods
sbb
adc
popf
cmpsb
jge
testb
jecxz
nop
xchg
sub
jbe
push
mov
in
mov
cmp
test
jo
push
add
popf
or
or
fs
pop
add
cld
inc
test
out
sarb
mov
push
inc
data16
repz
add
or
rolb
sbb
ret
inc
push
sbb
das
hlt
jne
xor
mov
mov
add
pop
inc
adc
or
add
into
lea
add
or
and
shrl
or
xor
mov
add
add
add
scas
add
fsubrl
add
mov
loopne
repnz
xchg
push
hlt
and
je
sti
mov
jae
or
push
cltd
int
xor
movl
add
push
loope
pop
les
mov
sub
mov
jmp
jb
cmp
add
jge
add
mov
nop
out
mov
dec
cs
mov
std
repnz
xchg
cmp
add
sbb
sbb
or
lock
xchg
lock
es
insb
push
lock
fwait
std
or
mov
xchg
add
push
fdivrl
mov
add
mov
test
leave
or
mov
cmp
call
lret
push
loopne
jmp
mov
xchg
mov
inc
addl
loope
xchg
or
adc
shll
add
outsb
sub
add
inc
loopne
add
lock
ds
cmp
dec
jne
sub
mov
jmp
imul
sti
jle
push
adc
test
cmp
add
sahf
or
mov
push
dec
mov
insb
add
jae
sbb
inc
les
add
lock
ja
adc
fldenv
mov
xchg
shlb
adc
add
add
xchg
ret
in
mov
loopne
sub
add
jl
and
dec
cmpsb
add
dec
out
add
xchg
jle
jmp
mov
loope
cld
cmp
pop
fsubrl
inc
dec
ljmp
adc
test
mov
dec
arpl
or
das
add
dec
or
jne
dec
add
pop
test
pop
add
add
and
jns
sbb
aas
rcl
outsb
cmp
jne
lods
test
xchg
dec
inc
add
clc
mov
add
out
xchg
xchg
xchg
addr16
cmp
sbb
mov
pop
mov
add
popf
dec
cmp
sub
ja
add
leave
fsub
adc
add
out
and
push
inc
add
sub
lds
add
movsb
jle
cmp
pop
cmp
stos
jns
shrd
xor
aam
xorb
cmpsl
insl
cwtl
and
push
clc
pop
test
mov
cmp
cwtl
and
jne
xchg
push
inc
and
mov
aas
pop
pop
orb
ljmp
add
es
repnz
dec
add
dec
xchg
test
cmpsl
ret
jg
cmp
mov
stos
sub
push
sbb
inc
cmp
fdivrs
scas
add
fdivl
and
call
add
stos
jne
or
scas
je
xor
cmc
xchg
fs
xor
clc
cmp
aaa
test
pop
ret
mov
mov
cmp
inc
mov
jo
mov
aas
jl
jne
mov
jle
sub
imul
mov
pop
shlb
popf
mov
in
push
cld
mov
das
fldcw
jo
scas
and
mov
push
aas
out
jle
jbe
sahf
adc
iret
ret
mov
mov
or
xchg
pushf
jb
add
cmc
mov
movsb
roll
inc
add
movb
cmp
jmp
push
cmp
loopne
enter
xor
out
dec
mov
clc
add
mov
inc
mov
add
bound
add
adc
and
mov
or
add
sub
mov
int3
push
pop
ret
push
shrb
jl
push
push
test
mulb
mov
add
sub
scas
fildll
add
xor
pop
pop
add
movsb
in
mov
nop
movaps
in
adc
adc
add
cltd
adc
xlat
jl
es
inc
pop
lahf
test
mov
testb
jne
lock
xor
sbb
jp
call
stos
or
pushf
or
mov
inc
bound
add
ret
dec
in
mov
mov
lcall
and
jmp
fldl
repz
inc
test
loop
xchg
cmp
push
adc
pop
pop
jae
add
fimuls
jge
and
inc
mov
movsb
mov
je
add
add
add
mov
mov
xchg
xlat
add
add
lret
in
lods
add
dec
cmp
fildl
cld
fdivl
cli
add
sub
call
push
mov
hlt
sub
add
call
push
jae
xor
sub
or
jbe
xchg
cli
out
hlt
hlt
push
out
ret
or
cmc
jne
loop,pt
xchg
add
repnz
pop
sub
dec
test
sub
add
movsb
clc
add
mov
push
inc
xor
mov
sti
ret
popf
add
das
rolb
push
xchg
cmp
aas
dec
adc
add
inc
cmp
jb
dec
add
adc
popa
pop
add
pop
mov
push
incl
or
jae
pop
jns
dec
fisttpll
dec
andb
and
xchg
test
add
mov
clc
xor
add
pop
jbe
lahf
or
jmp
adc
sub
inc
jge
addb
inc
mov
and
je
or
xchg
je
push
sbb
push
loopne
sbb
add
and
adc
sbb
test
add
sbb
sub
and
sbb
jae
clc
add
and
push
inc
dec
lret
cmp
scas
sbb
adcb
and
iret
add
mov
sbb
add
ret
ret
loopne
sbb
mov
mov
mov
iret
or
repnz
push
repz
push
addb
jne
clc
into
cmp
inc
xor
cmp
push
xchg
je
jg
or
push
add
enter
jnp
cmp
ret
test
dec
inc
shrb
into
sbb
pop
add
or
add
mov
call
sub
add
movsb
or
les
jbe
jne
pop
add
cli
stos
cmp
add
lahf
nop
daa
js
enter
inc
sbb
jmp
les
add
subl
or
jns
add
les
or
movsl
incb
mov
cmp
repz
rorb
xor
dec
lds
inc
add
add
clc
and
andl
push
add
dec
mov
in
enter
pop
movups
clc
or
xor
or
insb
and
pop
and
xor
add
adc
inc
shlb
fs
jle
mov
inc
cwtl
call
xchg
xor
div
loopne
xorl
je
or
popf
js
xchg
push
nop
jae
inc
or
pop
rol
cltd
add
dec
or
dec
mov
pop
pop
dec
push
xor
xor
add
add
comiss
inc
push
in
pop
imul
outsb
fs
add
adcl
push
push
ret
bswap
add
testb
add
sbb
or
ret
xor
mov
mov
jne,pn
dec
push
add
adc
lret
test
adc
aam
stos
and
push
testb
and
adc
add
pop
call
addb
sub
jne
mov
jle
and
gs
pushf
lcall
mov
add
mov
dec
in
push
pop
or
push
add
jg
pop
incb
and
inc
jmp
aad
call
inc
cmp
iret
pop
stc
roll
outsb
arpl
mov
outsl
and
or
orb
add
jp
pusha
es
cmp
out
call
sbb
cmp
sub
enter
or
notl
adc
aas
sti
shrd
pusha
or
xchg
pushf
cmp
cmp
dec
jae
sbb
add
pop
je
inc
les
adc
and
cmp
mov
sbb
jge
testb
pop
orl
enter
add
lea
sub
add
add
add
and
cmp
push
jecxz
enter
pop
pop
lret
je
js
sbb
xchg
orb
jns
sbbb
jb
mov
xchg
int
push
add
add
push
add
ret
fcoms
jmp
and
inc
or
test
in
or
mov
orb
adc
cmpsb
sbb
xor
shrb
lods
inc
inc
pop
mov
mov
insl
in
and
add
mov
or
popl
fdiv
or
in
mov
out
push
mov
mov
push
inc
movsb
and
add
jbe
test
jl
cmp
cwtl
jo
mov
mov
mov
adc
nop
cmp
cld
cmp
add
outsb
xor
enter
pop
mov
nop
adc
mov
jmp
inc
and
sarl
movsl
xor
mov
jge
lock
mov
xchg
jl
jle
inc
add
push
sbb
test
lods
pop
cmp
add
cli
nop
pop
inc
leave
and
and
inc
test
mul
nop
adc
mov
xor
sub
mov
xchg
jge
add
ret
sbb
mov
sbb
mov
or
ret
clc
xor
xchg
add
xlat
sub
sub
loop
add
sub
add
add
dec
addb
dec
adc
add
cmpb
js
dec
fcmovnu
mov
xchg
ret
loope
inc
adc
mov
aas
movl
dec
mov
incb
fdivrl
jbe
add
adc
lock
xor
pop
jge
and
add
mov
out
int
stos
mov
and
add
sub
add
fsts
arpl
sbb
loopne
rolb
addb
test
cmp
inc
outsl
add
rorb
sahf
pop
ficoms
inc
sub
call
aam
jbe
orb
xchg
das
mov
or
fildll
lods
cmp
les
in
repnz
add
aad
scas
icebp
shrl
test
enter
jnp
cmp
xchg
add
aas
add
mov
in
shlb
std
cmp
jge
adc
jmp
jmp
and
fs
add
fildll
out
sub
add
jl
add
sbb
ljmp
arpl
outsl
ds
dec
sbb
sbb
js
cmp
and
push
adc
fcmovne
inc
cmc
sti
iret
roll
xor
push
mov
call
xor
popf
or
add
lret
jecxz
dec
lahf
add
and
add
sbb
pushf
dec
inc
adc
jae
fwait
stos
add
into
mov
test
and
and
jbe
add
dec
add
add
mov
test
sub
addr16
xor
or
cmp
xchg
stos
icebp
mov
sbb
sbb
test
cmp
add
or
test
jnp
add
cwtl
subb
sbb
add
and
inc
and
scas
imul
aam
add
inc
int
sub
mov
jmp
xor
jl
inc
sub
adc
pop
mov
gs
test
add
and
nop
jne
js
pop
jbe
int
xor
xchg
jno
cwtl
std
lds
inc
popf
mov
add
adc
cmpb
mov
fldl2t
icebp
or
mov
push
inc
imul
fs
or
add
xchg
rolb
in
or
mov
add
push
push
pop
pop
es
jno
call
add
mov
adc
stos
les
mov
cmpb
mov
or
dec
add
xchg
sub
push
adc
rclb
mov
lret
dec
hlt
mov
in
mov
mov
fdivr
shll
add
mov
jmp
cmp
pop
jo
out
loope
or
test
jb
add
pop
aaa
ret
test
inc
cld
bound
inc
iret
cmp
xchg
inc
add
sub
adc
pop
inc
inc
xchg
lods
push
xor
add
outsb
mov
and
inc
clc
mov
push
js
test
push
add
add
add
std
shrl
nop
sbb
lock
inc
testb
cli
incl
cwtl
mov
add
push
rcrb
push
andb
jno
dec
lock
mov
addr16
and
popa
popf
insl
popl
push
jae
pop
cmp
or
in
sbb
fs
or
sahf
add
inc
ljmp
cmp
test
ret
addl
dec
scas
lcall
inc
sahf
sub
jle
fwait
sub
pop
ret
pop
add
mov
add
ljmp
pop
roll
sbb
xor
out
aam
push
mov
sbb
lods
mov
rcl
fnstenv
add
iret
inc
in
cltd
fiaddl
add
mov
add
pop
push
inc
or
gs
lods
ljmp
or
and
pop
hlt
inc
adc
out
fstpt
dec
rolb
add
sub
testb
jmp
push
loopne
push
andl
mov
movups
mov
jmp
pop
call
and
push
add
pop
pop
gs
and
inc
or
xchg
int3
push
pop
popa
add
pmovmskb
xlat
sub
movsb
out
xor
pop
mov
add
rcrl
test
or
dec
les
outsl
push
sub
rcrl
out
xor
or
add
or
mov
adcl
and
add
jle
push
or
inc
mov
leave
xor
mov
or
aam
lock
clc
lock
mov
add
add
xchg
roll
xor
mov
aam
mov
aas
sub
add
mov
in
movsl
dec
cmp
cs
add
push
rsqrtps
jl
dec
cmc
aas
xor
call
cmp
or
mov
add
and
xchg
add
sub
dec
xor
xor
daa
add
aad
enter
lds
add
out
sub
or
call
xor
jecxz
aad
stos
sub
ljmp
dec
add
cli
sub
mov
xlat
bound
lret
scas
icebp
mov
dec
pop
push
sti
sub
addl
xlat
mov
or
cld
xlat
pop
int3
mov
mov
and
sbb
clc
nop
jl
cmp
cmpb
mov
pop
xor
je
adc
cld
sub
cmp
and
mov
cmp
fdivr
add
mov
push
sbb
inc
or
ret
xor
add
daa
push
cmp
or
pop
xlat
pop
nop
cmp
test
scas
adc
mov
xor
pusha
adc
insb
and
enter
jns
add
jbe
add
aaa
pusha
les
and
add
and
xchg
sub
sti
jns
cmp
cli
add
mov
xor
fadds
inc
pop
in
repnz
add
jnp
add
add
fmuls
mov
shll
jbe
add
pop
add
pop
insb
rolb
adc
fs
adc
rorb
xor
pop
add
xor
pinsrw
cmp
pop
cmp
or
inc
ret
icebp
popa
fmuls
jp
pop
sub
push
and
rclb
mov
mov
sub
adc
scas
insb
shl
aaa
dec
or
in
clc
shrb
andb
pop
inc
fiaddl
xchg
cmp
mov
or
and
push
js
adcl
sub
jmp
pusha
sti
call
sbb
add
repnz
xchg
and
mov
je
sub
inc
int3
and
add
xor
add
dec
fildl
std
je,pt
in
call
cmp
cwtl
add
cmp
jo
call
jmp
les
incl
or
xor
push
fistl
push
ds
addb
in
inc
fsubl
stc
or
inc
adc
cld
sbb
push
cmp
arpl
fdivrs
add
mov
rol
inc
into
dec
cmp
add
out
fdivl
std
in
aam
push
pop
xor
add
inc
sub
test
aad
rclb
jge
test
and
hlt
lds
pop
incl
rclb
iret
mov
add
fisttpll
add
fisubrl
rcr
sbb
mov
mov
aaa
imul
pop
pop
ds
and
add
jns
out
test
push
sbb
stc
int3
add
adc
add
sub
in
lret
add
mov
and
jmp
and
and
push
inc
adc
add
mov
jns
sti
lock
addr16
pop
adc
fildll
in
pop
or
stos
shll
add
adc
fcompl
add
adc
loopne
fcoml
stos
loop
cmp
add
xchg
xorb
test
sbb
outsl
adc
dec
dec
mov
les
fsubrl
sbbb
adc
mov
lods
xchg
jmp
dec
std
push
test
out
and
loope
cmp
icebp
aas
dec
xor
pop
or
and
je
pop
loope
add
call
xchg
push
nop
add
mul
in
mov
cmp
aam
jno
fsubrs
loop
xchg
sbb
xor
jmp
pop
add
cmp
inc
loopnew
or
add
add
inc
add
sub
rolb
cmc
add
dec
call
ljmp
sub
sub
and
adc
or
or
ret
and
push
scas
inc
shl
xor
testb
dec
nop
and
inc
add
test
scas
push
adc
in
cmp
sbb
scas
dec
lahf
cmp
popf
dec
call
jb
and
mov
dec
and
adc
and
pop
add
adc
repnz
mov
out
mov
pop
inc
and
and
in
cmp
mov
mov
pop
dec
mov
jno
push
xor
sbb
add
sub
cmpsb
xor
add
dec
xchg
xor
lcall
int
cs
adcb
insl
arpl
sbb
in
add
adc
not
adc
push
sbb
push
cs
xchg
jmp
dec
loopne
jae
push
jns
dec
xchg
jle
jo
ret
sub
mov
jnp
add
and
add
jmp
dec
sub
push
fistps
cmp
inc
rcll
push
mulb
pop
outsb
xor
test
fldenv
mov
pop
int
repnz
xor
add
dec
pop
cmp
or
adc
mov
sub
aaa
icebp
insl
fadds
pop
call
loopne
adc
pop
mov
aam
cmpsl
setne
adc
icebp
dec
add
adc
js
add
jmp
dec
mov
add
pop
pop
outsl
lret
mov
dec
jno
add
or
shr
push
xchg
call
sar
sbb
push
test
dec
rcll
mov
mov
popf
xor
psrlw
bound
addb
iret
pop
pop
xchg
lret
xchg
shrb
jo
jnp
js
mov
sub
je
add
adc
cmp
and
mov
insl
add
mov
fldl
call
fsubs
lret
mov
imulb
jno
pop
in
xchg
or
xor
int3
outsb
cmp
sbb
lcall
mov
lock
add
loopne
and
daa
in
inc
nop
in
pop
add
jp
jmp
pop
movsl
repnz
popa
dec
aam
loope
andl
imul
push
pop
add
mov
insb
bound
mov
test
jmp
in
cli
enter
xchg
movsl
xchg
cmp
sub
pop
in
push
fs
incb
out
xchg
mov
pop
es
rorl
lock
popa
pavgb
mov
xchg
nop
in
mov
jnp
mov
aas
add
cmpsb
repnz
cld
stos
add
std
mov
jbe
sbb
mov
out
lock
lock
add
lods
xor
imul
pop
loope
sub
in
dec
adc
out
add
xchg
movsb
aaa
enter
add
testl
pushf
shll
popa
test
lock
add
cli
mov
mov
outsb
popf
sbb
and
lock
jle
xor
add
sub
adc
and
notl
inc
jecxz
mov
setbe
or
push
jb
cmp
fs
outsl
sub
adcb
insb
or
adc
dec
clc
jle
adc
mov
mov
shrl
cltd
cld
roll
xchg
jecxz
sub
add
cmpsb
mov
lret
add
dec
inc
imul
jp
add
repz
or
push
dec
rcrb
loope
inc
cs
xchg
dec
xor
xor
divb
mov
decb
add
sar
mov
test
sbb
test
orb
add
mov
inc
sub
add
dec
call
jb
lds
jl
pop
popa
pop
add
rcrb
popa
xor
sti
jbe
sti
jo
outsb
cvtpi2ps
push
add
repz
enter
aam
scas
add
sub
rclb
hlt
push
inc
or
push
inc
rcll
loopne
rolb
xor
xchg
gs
pop
sub
push
and
and
xchg
adc
or
inc
push
adc
mov
sbb
ljmp
dec
xchg
pop
popa
or
ret
cmc
add
and
hlt
mov
lock
icebp
push
pusha
xor
in
pushf
daa
mov
push
add
leave
shlb
cmp
add
xor
dec
mov
ss
add
jnp
xor
jmp
lds
cmpsb
add
adc
popf
jbe
push
add
inc
hlt
xor
out
enter
rcl
and
pop
test
push
sbb
add
in
aas
stc
insb
les
add
mov
push
ja
notb
mov
into
xchg
out
loop
dec
fiaddl
ds
mov
pop
cmp
sub
shl
and
out
mov
cs
xor
add
jp
test
stc
pusha
mov
add
push
or
lahf
add
jl
test
stc
xor
inc
clc
xchg
jo
or
mov
aam
mov
out
repz
xor
xchg
cs
mov
push
into
push
loop
je
add
push
sbbb
mov
shlb
mov
push
cmc
xchg
call
ret
add
sbb
test
push
loopne
cmp
push
into
add
mov
xor
add
inc
sub
sbb
xor
in
outsl
cwtl
cmpsl
sbb
nop
inc
pusha
inc
pop
add
cld
dec
stc
push
sbb
mov
adc
nop
add
aad
sub
mov
sub
clc
jp
hlt
add
dec
mul
pop
push
lock
lock
jb
push
inc
insb
add
jo
mov
xchg
in
lds
aas
repz
or
push
imul
nop
bound
cltd
jb
push
decl
cwtl
stos
and
movsb
test
cli
hlt
pop
jmp
addr16
pop
or
scas
ljmp
in
shr
cmc
fistl
cmp
lods
imul
icebp
inc
mov
cs
mov
outsl
inc
in
jno
push
inc
add
fidivrl
sbb
pop
in
inc
out
movsb
pop
add
and
mov
cmp
cmpsl
das
fstpl
cmp
add
inc
fiadds
and
and
nop
enter
lds
int3
sbb
push
inc
shrb
and
add
repnz
mov
popa
pop
loopne
mov
add
or
in
imul
add
idiv
adc
and
in
add
mov
or
arpl
mov
push
addl
add
mov
clc
pop
cmp
sub
xor
cmp
cli
sub
pushl
add
adc
incb
inc
adc
sbb
loop
aaa
dec
xor
cmc
sub
sub
xor
mov
fwait
mov
ja
jle
add
jae
push
add
or
push
mov
jnp
sub
add
pop
jecxz
enter
mov
mov
add
mov
mov
je
das
add
repz
xor
and
call
in
xor
inc
and
rorl
add
and
nop
jecxz
push
idiv
cmp
add
rolb
jne
imul
sbb
mov
xor
shlb
jcxz
mov
mov
add
xor
push
call
das
xor
pop
in
pop
xor
pop
jmp
dec
xor
pushf
xchg
addb
inc
ret
std
push
loope
in
rcrb
pop
jle
jp
or
orb
iret
jno
cmp
daa
lret
add
add
sarb
pop
aas
fdivrs
flds
sbb
fildl
loopne
lock
mov
or
dec
add
adc
popf
aam
add
inc
adc
pop
add
rclb
shl
adc
rorl
pop
adc
shlb
xor
pop
inc
rolb
xor
repz
lock
aaa
mov
add
xor
loopne
cmp
add
inc
cmp
cmpb
cmp
cli
cmp
cmp
sub
addr16
stc
push
cmp
sub
add
femms
shrb
sub
arpl
push
out
subb
pop
inc
push
add
shlb
and
cwtl
test
or
sbb
pavgw
and
loope
and
andb
inc
loopne
mov
push
mov
andl
dec
sub
daa
cmpsl
add
movsl
rclb
add
subl
subb
lock
leave
push
imul
loopne
imul
inc
push
mov
add
pop
jp
mov
sbb
jge
mov
jl
add
inc
mov
mov
mov
popa
mov
jbe
jb
mov
mov
jae
add
shlb
push
mov
push
rcll
add
inc
xchg
lock
je
jbe
adc
xchg
adcl
inc
popf
inc
pop
rcrl
cmp
pop
cmp
add
inc
cwtl
std
mov
dec
in
push
jo
add
rorl
dec
xchg
mov
lea
rorb
sbb
add
addl
inc
inc
xchg
and
call
loope
roll
inc
scas
push
mov
sbb
in
pushf
pop
pop
or
xor
push
popf
push
xor
enter
adc
cmp
or
dec
adc
inc
add
mov
popa
ss
pop
popf
or
ja
enter
inc
mov
xor
adc
cmp
sub
add
jbe
add
in
mov
sbb
adc
enter
dec
push
in
lcall
inc
xorl
and
mov
xchg
clc
ja
arpl
int3
call
minps
imul
add
push
divl
rolb
push
push
push
cld
mov
pushf
add
lods
xor
cmp
xchg
mov
cmp
jne
dec
or
leave
mov
pop
sti
es
add
sbb
jmp
lret
jne
adc
out
inc
lods
mov
xlat
jnp
ja
repnz
jl
cmp
jle
clc
popl
imul
push
lods
add
cmp
pusha
add
jo
sub
rolb
pop
or
push
mov
lea
inc
jg
mov
roll
int3
add
mov
mov
lea
jo
insl
cwtl
mov
lret
xor
mov
inc
pop
jo
cmp
pop
add
adc
jbe
mov
mov
repz
push
gs
cwtl
push
addr16
add
cmp
push
add
popf
rcrl
movaps
push
mov
xchg
add
jne
ffree
mov
ljmp
xchg
nop
pop
adc
mov
adc
repz
and
add
pop
stos
ret
dec
mov
nop
xlat
xor
clc
add
cmp
fwait
rcll
mov
jg
cmp
repnz
into
clc
shll
xchg
mov
ret
scas
and
icebp
add
stc
test
push
cs
xchg
sbb
outsl
xor
lret
andb
scas
and
sbb
jno
lods
sub
jo
popf
js
add
dec
incl
sub
jo
xor
xor
adc
dec
pop
mov
cmp
push
les
lcall
push
repnz
cli
lods
movl
arpl
push
sbb
mov
mov
xor
cli
les
push
daa
or
push
test
jns
xor
pop
push
adc
push
add
inc
inc
cmp
inc
lret
adc
xchg
js
and
adc
xchg
outsl
sub
or
and
sbb
xor
add
mov
or
dec
add
inc
dec
add
lods
testl
add
and
add
in
jb
push
lock
pop
mov
push
loope
mov
repnz
xor
adc
cmp
dec
mov
mov
pop
add
lods
inc
and
mov
jg
arpl
scas
fs
inc
push
popf
dec
jecxz
test
mov
mov
sbb
movsb
test
mov
stc
and
lock
data16
xor
pop
add
dec
push
or
aam
inc
pop
dec
es
or
icebp
pop
push
test
inc
sbb
mov
shll
clc
repz
adc
mov
mov
das
inc
jle
lret
lea
sbb
and
xlat
loop
lea
out
pushf
sbb
add
and
add
pop
test
xchg
and
mov
mov
jg
and
push
loopne
inc
sar
and
adc
or
cmp
mov
pop
mov
add
test
repnz
inc
loopne
add
push
pop
add
push
pop
sbb
add
bnd
mov
pop
sbb
sbb
sub
shlb
and
jle
add
inc
add
or
add
int
outsb
mov
js
and
cmp
add
jmp
loopne
cli
popw
mov
call
mov
dec
ret
ucomiss
mov
mov
add
jmp
mov
je
lret
cmp
rcrl
and
mov
and
jne
xor
ret
test
int3
in
cmp
aad
add
sahf
lods
pop
imul
adc
shl
add
pusha
push
cs
push
or
mov
rcrb
adc
sahf
sub
mov
pushf
pusha
push
sbb
jp
mov
sub
addb
ret
subb
push
or
add
in
mov
movnti
push
lret
mov
sbb
in
sub
jb
es
iret
lcall
push
out
and
sbb
pop
sbb
xlat
and
push
add
js
pop
add
cmc
jb
push
scas
mov
popa
sbb
repz
xchg
mov
pop
pop
insb
push
or
and
ffree
cmp
icebp
and
mov
push
insl
test
sbbl
push
data16
or
sti
cld
lods
das
fcoml
cli
xlat
xchg
lock
fwait
cmp
add
xchg
push
sub
add
dec
mov
pop
add
jecxz
mov
jmp
add
xor
nop
inc
adc
mov
dec
mov
stc
xor
xchg
sbb
add
sub
and
hlt
jl
movzbl
push
sbb
add
das
sar
cli
cmp
out
jl
mov
aas
jg
sbbb
das
aad
dec
add
popf
pop
movb
dec
in
aas
mov
mov
pop
shll
sbb
jae
jbe
add
sbb
push
push
les
inc
loopne
sbb
cmp
ljmp
aad
add
push
mov
pop
in
add
out
mov
xchg
aad
pusha
inc
cld
inc
insl
fwait
sahf
add
mov
int3
rolb
mov
ljmp
popa
int
xor
jmp
pop
cs
cmp
jo
pusha
push
cmp
jne
inc
xchg
mov
lcall
xor
stos
pop
popf
jmp
sbb
add
push
push
movl
mulb
add
aad
movsb
sub
sbb
xlat
mov
mov
mov
or
or
out
sbb
xor
lahf
adc
xor
adc
mov
adc
inc
add
ret
add
add
lock
sbb
mov
adc
clc
cmp
pop
inc
jb
jbe
or
clc
mov
orb
add
rcrl
pop
clc
orb
ds
mov
mov
and
stos
ret
sbb
inc
pop
inc
sub
jbe
add
ror
inc
lcall
ljmp
or
push
add
and
aas
sbb
ret
in
dec
out
mov
mov
push
inc
pop
and
or
call
fidivl
push
add
adc
mov
push
aas
dec
push
jo
rclb
inc
adcb
into
stos
ljmp
test
lea
mov
sbb
andb
testb
jno
mov
add
push
jbe
add
arpl
popa
jmp
rorb
enter
xchg
aaa
cltd
add
pusha
outsb
in
enter
pop
inc
cs
jae
pop
cmc
inc
int3
add
sub
inc
loopne
aad
add
addr16
or
dec
add
push
jbe
mov
push
add
addl
imul
ljmp
sbb
test
inc
lods
jl
gs
inc
sbb
jg
fstps
mov
jb
sub
shrb
or
add
push
or
add
dec
xchg
sarb
call
hlt
add
ret
dec
lock
push
add
inc
pop
jae
push
adc
mov
inc
in
sub
loop
mov
idivb
mov
test
lahf
scas
ficoml
into
inc
call
cmpsl
jne
cmp
fs
pop
jmp
mov
adc
xchg
mov
inc
cmp
jo
movw
ret
add
jae
pop
cld
or
or
bound
adc
sub
subl
notb
inc
sbb
les
sbb
addb
rorb
or
sahf
sar
dec
loopne
cli
sub
push
les
xchg
add
cmp
jne
pop
adc
add
sbb
push
adc
xchg
dec
mov
scas
fcmove
push
mov
and
sub
add
call
pop
mov
or
add
push
dec
add
and
jecxz
and
dec
cmpsb
cli
cmp
orb
push
add
adc
loope
add
insb
inc
jb
jbe
add
stos
mov
aad
lock
pop
cmp
jl
push
dec
mov
les
cmpsl
xchg
or
inc
lea
adc
pop
or
cmp
mov
dec
icebp
add
add
addr16
dec
sbbb
dec
out
sub
test
and
xchg
loopnew
fmull
and
xchg
add
scas
jne
or
mov
mov
icebp
push
in
add
xor
inc
mov
mov
add
cwtl
push
sub
inc
inc
add
cmp
jno
rorl
ret
push
jmp
jne
sub
add
sbb
aas
push
add
and
mov
add
dec
and
sub
mov
push
movups
pushl
loopne
inc
pop
aaa
sub
pop
jnp
push
movzwl
scas
int3
jb
aam
std
add
mov
add
add
mov
cli
popa
fdivr
shrb
test
push
mov
cmp
pop
push
pop
pushf
inc
inc
test
jb
add
and
jo
sbb
fcoms
xchg
pop
mov
xchg
sbb
ljmp
pushf
sbb
add
movsl
sub
jl
mov
roll
dec
cmp
addb
jns
mov
add
inc
out
loope
fdivs
shl
jb
call
adc
out
ficompl
xor
push
js
and
xor
loope
lea
std
xor
cld
jne
gs
andl
inc
stos
jmp
or
mov
movb
cmp
clc
or
xadd
push
dec
xchg
pop
filds
mov
lea
push
add
push
jne
ja
sbb
adc
mov
cltd
out
imul
push
mov
xor
mov
sub
jmp
jb
mov
add
movl
loop
mull
lds
xchg
add
ja
roll
aad
dec
mov
adc
dec
xor
mov
jmp
adc
jmp
mov
mov
add
fmull
in
add
dec
cpuid
inc
inc
scas
add
movsb
adc
push
xor
pop
dec
sbb
pusha
test
add
mov
imull
jecxz
add
xor
mov
xor
jecxz
dec
add
cmp
cmpb
int
repnz
mov
mull
dec
adc
push
test
add
add
movsl
inc
orb
xchg
mov
lock
faddl
sbb
xchg
add
push
or
adc
mov
mov
fs
add
jb
insb
xchg
dec
out
cmp
clc
jge
xor
movsl
add
sub
ja
dec
out
xor
addr16
xor
ds
push
xor
hlt
jmp
jb
testb
cli
push
jae
add
pop
mov
mov
std
add
or
pop
push
fldenv
add
nop
push
aas
stc
mov
or
into
or
scas
add
add
incb
add
fwait
scas
pop
sbb
mov
xchg
push
lds
cwtl
sbb
enter
or
and
push
rolb
mov
clc
fdivr
add
jb
xor
mov
dec
es
push
or
inc
cmp
push
rolb
dec
in
lahf
jle
loopne
mov
imul
test
dec
mov
das
add
scas
les
pusha
stc
mov
push
lea
mov
add
dec
pop
add
and
out
xor
gs
pop
or
pop
mov
mov
test
sub
or
add
popa
cmp
adc
xchg
ret
add
test
add
lcall
je
mov
add
call
jnp
adc
mov
jae
ds
cmpl
inc
adc
pusha
dec
sbb
push
test
adc
mov
add
add
lods
aaa
add
fimull
jb
adc
add
ja
or
xor
xchg
push
sbb
cmp
sbb
and
add
jno
lods
dec
int3
add
add
pop
mov
push
inc
cld
ret
dec
sbb
push
add
xorb
add
xchg
jne
andb
in
adc
test
jbe
and
cld
ja
push
or
mov
mov
shlb
inc
or
into
fadds
mov
ljmp
push
icebp
out
or
add
lock
mov
mov
add
add
fistpll
add
lret
pop
mov
les
addb
xor
mov
xlat
dec
test
cwtl
repnz
dec
add
iret
ror
shl
and
mov
jp
fstpl
outsb
neg
jg
sub
add
xor
cmp
fcomps
shlb
add
outsl
call
sbb
sub
add
inc
rorb
jmp
jbe
or
cmp
bnd
movb
flds
dec
inc
jmp
mov
jbe
inc
addb
dec
popf
movsl
ljmp
add
test
mov
or
lret
push
pop
cwtl
sbb
pop
mov
mov
notl
adc
push
jg
jecxz
rcll
or
jb
pop
mov
into
mov
push
movsb
ret
sbb
mov
ret
push
call
cmp
jbe
or
xchg
pop
pop
jnp
push
sbb
out
adc
push
loop
test
pop
xchg
fadds
xchg
add
adc
aam
dec
push
push
rorb
cmp
push
add
inc
and
nop
mulb
out
sbb
pop
repnz
cld
or
je
or
mov
sub
pop
fildl
mov
pusha
or
sbb
stos
cmc
and
sub
push
je
sub
imul
xor
xor
ds
test
push
lds
ret
jecxz
jnp
cmp
adc
sub
add
mov
pop
fdivr
inc
aad
xor
aam
add
add
leave
add
icebp
dec
outsl
pop
cmpsb
dec
movsl
jbe
add
movsb
jae
pop
cmp
add
je
ljmp
add
movsb
dec
sub
lea
pop
add
inc
mov
jle
sbb
mov
push
add
sub
mov
dec
xchg
cmp
xchg
mov
push
jg
xor
sbb
les
xor
mov
nop
mov
mov
clc
fs
push
push
and
mov
das
test
push
lahf
push
sub
push
xorb
xchg
add
push
inc
add
jmp
xchg
pop
push
pop
add
jp
jbe
rclb
adcl
addl
add
incl
shll
mov
mov
add
dec
pop
and
test
repnz
adc
jge
pop
out
or
jo
jns
cmp
add
jb
or
xchg
lahf
xor
shl
or
and
xchg
cmp
mov
rorb
xor
and
jne
xchg
xchg
mov
mov
mov
or
add
or
cmpb
mov
je
cmp
jbe
out
outsl
lods
xor
jle
add
scas
and
fidivrs
push
lds
not
sub
pop
cmp
daa
divb
add
sub
push
or
call
jno
add
pop
and
xchg
push
cmpsl
and
adc
ljmp
add
movb
ret
add
xor
add
faddl
adc
scas
clc
shlb
sub
jo
fsubrs
pop
idivb
jb
mov
push
nop
mov
push
stos
cmpsl
dec
pop
pop
push
xlat
mov
push
sbb
out
add
in
push
add
sbb
ds
mov
pop
add
ret
inc
dec
sbb
or
pop
les
xor
jo
push
jb
cmp
inc
xor
fsts
xchg
push
addl
jns
das
fadds
mov
pop
out
mov
and
or
adc
dec
lret
push
ja
add
rorb
add
push
js
inc
add
adc
fistpll
testl
jmp
mov
push
or
and
push
int
pop
dec
ljmp
sbb
bound
mov
sti
adc
sub
add
add
and
and
pop
scas
xor
push
or
add
out
inc
js
add
pop
pushf
aas
test
loopne
pop
inc
adc
or
mov
xchg
inc
add
adc
mov
stos
leave
mov
mov
add
sti
push
popa
push
or
rorb
jg
sbb
pop
xor
cmpb
add
push
inc
adc
push
sub
add
rcll
push
icebp
pop
push
es
pop
mov
sub
fmull
test
push
mov
lods
jbe
inc
loop
inc
pop
push
add
js
mov
sub
adc
jae
inc
add
push
pop
in
sbb
clc
cli
sub
push
or
adc
movsb
add
cmp
mov
stos
dec
adc
or
je
scas
mov
clc
add
cld
xor
call
jle
push
orb
roll
popa
add
push
inc
add
and
xor
add
int
mov
mov
stos
cmp
addl
push
xor
ret
add
mov
incl
mov
cmp
lret
lock
lock
or
pop
lahf
mov
add
ret
in
fwait
push
pop
imul
mov
mov
dec
xor
inc
inc
push
adc
clc
aas
sub
call
xor
sbb
fisttpl
jmp
pop
adc
xor
add
xor
sub
add
pop
sbb
in
scas
pop
test
xchg
subb
pop
or
and
add
popa
cwtl
mov
sbb
enter
jno
xchg
addb
movsl
add
andb
add
sbb
ret
pop
push
add
call
aam
jns
adc
jnp
add
cs
fs
push
xchg
int
push
andl
adc
movsl
add
pop
xor
movsb
add
mov
cmp
xchg
mov
add
repnz
fucomip
in
fstl
cwtl
pusha
pop
add
add
fstpt
or
shl
call
testl
fadds
cld
sahf
sbb
call
pusha
push
fwait
add
add
push
and
lahf
add
dec
add
mov
sub
je
inc
fldl2e
add
rcr
loopne
int3
push
test
and
xor
add
add
sub
loop
movsb
aam
rorb
lds
inc
mov
lcall
xor
xchg
js
push
xchg
push
mov
rclb
ret
cmp
adc
shrl
xor
cmp
or
sbb
and
xor
stos
push
mov
andb
mov
push
lds
stos
mov
push
sub
mov
outsb
aas
and
aaa
test
jae
xor
mov
xchg
js
ljmp
sub
outsb
cmp
stos
adc
and
dec
in
mov
push
sub
popf
sbb
call
movl
adc
and
das
cmp
clc
xchg
sub
xor
dec
inc
jge
lods
add
xor
xor
xor
pop
icebp
ret
add
cltd
or
aaa
push
fs
std
loope
adc
cmpb
jno
add
adc
and
leave
inc
push
bound
xor
or
mov
adc
int3
nop
xchg
mov
mov
add
out
ja
fsts
mov
addr16
and
add
iret
loopne
mov
pop
cmp
test
or
pop
xor
nop
push
add
arpl
nop
repnz
aas
mov
adc
out
repnz
mov
push
add
lahf
test
jl
sub
cmp
inc
inc
pusha
insb
mov
mov
push
shl
xor
mov
pop
jb
sub
xchg
adc
cmc
stos
pusha
jl
adc
mov
mov
subl
push
pop
jb
pop
in
loopne
sub
repz
jecxz
in
in
in
lahf
add
pop
lods
hlt
inc
sub
sub
add
or
fwait
or
cltd
mov
xor
push
add
les
dec
adc
ds
dec
push
and
pop
test
lds
xchg
sti
pusha
push
lock
nop
cmp
xor
push
jecxz
addr16
sbb
add
adc
pop
ds
testl
and
aaa
mov
push
dec
add
add
xchg
xor
jb
call
les
cmp
in
push
add
stos
fs
add
cmp
push
enter
pop
addl
movl
repz
push
rol
sub
in
add
add
in
scas
cmp
test
jo
jg
bnd
pop
jae
add
cmp
sbb
test
cmp
call
data16
dec
or
xor
pop
sub
sbb
cltd
movsl
jnp
mov
int
scas
and
adc
outsb
roll
xor
add
add
ljmp
inc
aas
sarb
pushf
and
call
push
sbb
add
cwtl
imul
add
lea
xchg
inc
mov
andb
hlt
cmp
daa
xor
and
push
cld
flds
adc
test
pop
add
sti
jg
ret
jmp
and
subl
cld
mov
cmp
jne
mov
sbb
adc
xchg
add
ss
push
dec
adc
cmovl
adc
lods
iret
push
xchg
cmp
and
cmc
daa
jo
add
mov
sbb
sub
mov
lret
inc
xor
dec
push
aad
dec
adc
or
cmp
daa
add
xchg
sub
clc
mov
je
dec
sbb
or
and
add
mov
cld
lcall
add
fsubrp
and
mov
add
jno
cmpsl
dec
enter
and
or
add
adc
add
hlt
pop
xchg
pop
xor
std
cmp
add
cld
rorb
mov
and
push
fistpl
mov
lcall
loop
adc
adc
test
testb
mov
inc
xor
or
inc
sbb
sbb
aas
cld
inc
or
add
dec
shrb
sahf
or
xchg
cmpsl
sub
adc
add
mov
inc
ss
call
in
sub
js
fadds
dec
or
sahf
fidivrl
push
cli
push
test
mov
and
iret
xor
pop
xchg
pop
xchg
inc
add
stc
xor
stos
pop
mov
and
add
or
inc
add
jle
scas
sbb
clc
in
sbb
mov
add
aas
mov
movsb
lods
fadd
shrb
adc
or
mov
add
gs
mov
stos
or
sti
and
cmp
adc
fnsave
repnz
push
mov
inc
pop
or
cmp
xor
mov
mov
jecxz
ss
add
bound
jbe
mov
call
or
sub
subb
mov
lahf
cld
test
or
movsl
enter
and
jle
jae
test
dec
adc
cmpsl
add
xchg
movsl
popl
loope
shrb
icebp
add
xchg
sub
or
filds
adc
aas
inc
mov
ja,pt
xchg
adc
lahf
xor
cmp
add
mov
pop
stos
add
subb
add
test
adcb
push
pop
sub
add
adc
movsl
aaa
int3
add
mov
cmp
adc
in
ret
dec
add
push
mov
pop
jmp
mov
enter
sub
in
stc
pop
fcomip
cmp
xchg
mov
xchg
pusha
push
sub
push
add
adc
mov
add
jo
cmp
test
jnp
or
ja
cmp
adc
sbb
cs
xorl
push
jo
dec
sub
pop
out
orl
hlt
mov
mov
mov
out
ljmp
mov
lea
in
xchg
mov
add
dec
push
mov
inc
mov
leave
mov
daa
dec
iret
pop
adc
and
pushf
test
adcb
shll
sbbb
das
dec
addl
data16
mov
fadds
cmp
pop
ds
mov
cmp
mov
adc
mov
scas
mov
sysret
jle
jge
inc
std
es
rorb
jno
cmpsl
sub
add
pop
mov
adc
pop
pop
inc
cmp
dec
mov
inc
xchg
jae
out
add
mov
xor
movsl
in
cmpsb
fldl
jbe
sub
push
push
add
add
and
dec
inc
add
xchg
xchg
and
call
push
jns
cmp
xchg
pop
cwtl
cmp
sti
xchg
sbb
test
add
mov
aas
shlb
adc
rolb
sub
gs
and
es
inc
lods
adc
jp,pt
je
add
or
cmp
xchg
push
or
and
sub
sbb
sub
add
xchg
pushf
mov
push
addr16
stc
aas
je
pop
jb
mov
inc
adc
ret
rcrb
pusha
je
sahf
and
bound
jb
enter
push
add
scas
es
push
xchg
test
sub
arpl
or
adc
test
jne
jo
pop
call
popf
lds
adc
test
fs
push
add
scas
jecxz
push
add
xor
cli
ret
adc
iret
add
iret
cmp
cmpb
stos
inc
add
push
cmp
ljmp
scas
jno
and
push
push
and
out
sub
push
inc
add
and
test
roll
fcoms
jns
loope
push
cmp
mov
or
add
cld
popa
push
imul
dec
push
inc
push
pop
lods
mov
rcrb
jge
dec
mov
sbb
jmp
in
ds
fmuls
jge
and
or
int3
pop
mov
subb
les
jne
cmpb
push
mov
xor
dec
push
ret
jmp
and
sbb
push
lahf
aam
xchg
mov
jo
push
sub
cwtl
mov
ret
jge
mov
or
inc
mov
or
sub
mov
and
add
ret
inc
mov
in
or
cmp
adc
pop
movsb
push
or
jns
je
addl
mov
fstpl
cs
pop
add
pusha
push
jne
decl
cmc
or
test
add
push
xor
psubsb
xor
pop
dec
pop
inc
pop
fdivp
push
jae
adc
xchg
jnp
or
mov
lock
push
inc
in
push
add
jnp
fcoml
ljmp
sar
shrb
xlat
jg
lock
sub
inc
xor
mov
repz
sbb
dec
or
clc
add
jle
pusha
jmp
inc
dec
jne
rolb
sbbl
sbb
sbb
sub
aas
aas
ret
inc
and
push
in
lret
in
inc
add
bound
cltd
scas
pop
outsb
lods
add
cmpsb
cwtl
and
add
bound
mov
loop
lea
sbb
add
mov
and
shlb
mov
cmpsb
in
jne
or
sbb
pop
and
dec
xor
sbb
add
push
and
shll
jo
jo
add
sbb
adc
add
cmp
mov
imulb
jl
add
or
mov
sub
add
add
fidivs
add
cmp
mov
js
stos
xchg
cmpl
adc
sub
cli
add
xor
std
add
sbb
jge
mov
inc
add
add
js
push
je
mov
lret
mov
xchg
fimull
lret
push
mov
mov
mov
shlb
push
push
xchg
xchg
mov
sub
mov
inc
loop
add
pop
add
lret
sbb
xchg
inc
adcl
faddl
mov
pop
pop
jl
stos
sarl
push
add
incl
add
inc
add
pop
inc
pushf
adc
xchg
add
dec
cmp
add
mov
or
xchg
hlt
push
push
jl
add
lret
stos
inc
loopne
dec
sbb
ljmp
xchg
jnp
pop
clc
je
out
add
sarl
pop
pop
cmpsb
lret
cmp
adc
and
add
push
movsl
mov
dec
xor
add
push
popa
and
mov
add
sub
push
push
jecxz
icebp
adc
cmc
das
cmpsb
flds
xchg
pop
scas
push
test
mov
in
fdivrs
sbbb
rorb
repnz
mov
ja
sbb
pusha
mov
inc
jno
jae
push
push
sar
js
add
adc
push
arpl
popa
sbb
ret
jbe
outsb
add
jo
and
cmp
jno
data16
pop
pusha
jbe
outsb
add
jp
xchg
jg
imul
or
jl
sahf
nop
dec
lahf
outsb
pop
or
addr16
test
sbb
add
shlb
push
filds
fdivs
imul
fs
push
and
sbb
jo
cmp
push
mov
jp
jbe
mov
nop
cmc
add
xchg
arpl
push
insl
add
jb
pusha
xchg
jl
andl
xor
and
jbe
push
arpl
inc
popa
mov
push
lahf
or
mov
dec
push
mov
jg
movsl
mov
or
es
cs
add
ja
push
bound
sbb
inc
push
clc
cmp
imul
arpl
dec
loope
jb
lock
push
cmp
cmp
mov
inc
push
outsl
sbb
imul
pushf
push
inc
div
in
xor
or
imul
rcr
or
xor
cmp
dec
clc
add
inc
mov
xor
scas
sbb
inc
adc
test
cmp
andb
inc
pusha
ja
mov
pop
add
push
jge
aad
or
lods
cmpl
dec
pop
pop
push
push
push
inc
imul
movsl
pusha
sub
addb
arpl
insb
mov
mov
jno
popa
imul
dec
ror
insl
jnp
ret
mov
or
add
arpl
dec
les
popf
subb
sbb
xor
iret
mov
outsb
jno
sub
pop
fdivl
add
push
pop
push
stos
xor
push
enter
scas
adc
or
jecxz
sbbb
in
ret
add
and
push
cmc
sbb
aas
cld
mov
clc
testl
add
shrb
sbb
inc
enter
mov
out
incl
and
lea
imul
movsb
pop
inc
cli
or
mov
sbbb
outsl
cmpsl
add
gs
pusha
shlb
je
push
mov
add
adc
adc
popl
jno
aam
push
add
inc
cltd
and
add
sbb
xor
enter
cmc
cli
shlb
add
ret
sbb
jne
inc
mov
pop
jo
and
xchg
in
lret
push
dec
add
sbb
xorb
cmp
adc
ljmp
rol
pop
push
add
stos
sbb
dec
pop
jne
shlb
pop
mov
add
mov
cmp
pop
jne
mov
add
dec
sahf
sbb
in
test
les
mov
xor
inc
mov
cli
popf
jl
or
enter
cmpsl
ljmp
shll
mov
jle
test
jmp
jp
int3
cltd
or
enter
inc
add
and
mov
in
hlt
xchg
cld
add
incb
pusha
ds
faddl
cmp
add
mov
loop
push
clc
pop
jbe
or
sub
add
call
shrb
sub
shr
xchg
iret
add
dec
ss
jle
insb
xchg
adcb
lea
cwtl
mov
xchg
mov
push
lea
sbb
sbb
push
addb
call
adc
xchg
add
les
pop
aas
mov
mov
cmp
cmp
test
add
cmp
test
fsubrl
xor
call
sub
add
in
jl
subl
clc
mov
or
inc
fisubrs
mov
jo
leave
jae
add
mov
push
insb
fst
pop
add
jbe
lea
cmp
cli
jg
add
adc
jg
pop
mov
jo
dec
pop
jg
mov
xor
fdivrs
or
adc
adc
push
add
dec
jmp
jmp
mov
pop
pop
adc
add
and
adc
int3
adc
out
adc
or
push
das
movb
pop
xchg
add
je
pop
movsb
sub
test
pop
scas
orb
mov
fwait
xchg
sbb
pop
mov
into
js
testb
in
shrl
hlt
jmp
dec
or
fisttpll
in
lds
or
ljmp
dec
int3
pusha
inc
xchg
divl
mov
inc
add
add
inc
add
add
xchg
dec
xchg
int
clc
add
rolb
pop
sbb
cmpl
fsubrs
cmp
mov
fmull
xor
dec
pop
push
add
jmp
test
je
and
and
jmp
addb
push
dec
iret
add
loope
or
mov
sub
sbb
or
mov
add
xchg
scas
xor
xchg
push
ds
movsl
cmp
lahf
push
out
loop
mov
fldcw
pop
and
iret
aaa
or
pusha
jbe
and
jne
sti
jo
hlt
push
and
jnp
inc
scas
push
add
cmp
add
push
iret
push
and
push
fbld
nop
pop
push
daa
add
or
loopne
mov
fmuls
and
push
int3
orb
sub
dec
add
bound
int3
ret
mov
in
and
xor
mov
add
add
mov
add
ret
movb
add
sub
mov
add
xor
add
aas
test
je
add
inc
add
mov
cmp
cwtl
or
push
test
sub
xor
push
and
xchg
cwtl
and
inc
xor
or
jo
sub
lea
cmp
pop
dec
js
in
and
fstpt
push
pop
jns
push
mov
mov
sub
jbe
rolb
nop
in
mov
mov
cwtl
jge
repnz
mov
add
fldlg2
in
push
dec
add
lods
jnp
pop
mov
jno
lock
sbb
push
js
int
adc
mov
xchg
lock
pusha
pop
rolb
cmp
fadds
jmp
dec
clc
inc
iret
push
inc
ret
es
push
lods
add
rcr
incl
loopne
je
adc
or
lahf
outsl
mov
pop
adc
add
sbb
cli
cmpsl
add
mov
cmp
add
cmpsl
filds
stos
adc
dec
adc
pusha
mov
mov
fiadds
outsb
popl
lock
and
int3
into
xor
test
and
gs
jecxz
popf
cmp
inc
out
movsb
lods
aam
xchg
add
shl
jle
or
out
aas
jmp
push
add
xlat
xor
dec
adc
add
mov
fs
pop
in
outsl
push
mov
push
test
paddd
jmp
lcall
or
and
inc
popf
adc
das
loopne
mov
inc
inc
gs
sub
sub
mov
cmp
rep
mov
adc
pop
dec
js
or
add
cmp
mov
rorl
cmpsl
push
adc
add
test
inc
mov
add
add
xor
rol
add
lock
out
aas
push
add
or
jb
xorl
and
setb
fdivrl
ljmp
add
arpl
mov
sqrtps
inc
nop
jge
sbb
mov
lea
add
and
jmp
add
out
jge
lret
add
pop
mov
add
nop
repz
mov
andb
adc
add
add
add
mov
jg
add
cmp
jmp
sub
add
scas
mov
add
call
jg
sbb
pop
xchg
jns
shll
andl
stos
mov
out
imul
sub
add
or
or
push
add
mov
push
loopne
data16
in
addb
movsb
sbb
sub
hlt
loopne
xor
jnp
loopne
dec
sbbl
mov
push
add
dec
loop
add
jg
xchg
add
out
into
add
dec
cmc
out
outsb
lds
stos
addr16
sub
mov
iret
xor
xchg
push
cmp
inc
shr
outsl
clc
add
jae
fists
mov
add
jnp
cli
cmp
daa
sbb
inc
dec
lock
xchg
or
mov
push
or
dec
lock
std
out
sub
mov
cmpb
mov
sbb
outsb
rcl
scas
mov
movl
fadds
adc
lahf
rolb
jg
add
pop
mov
dec
mov
out
add
xchg
pusha
xchg
call
inc
cwtl
inc
add
icebp
rcll
sbb
pusha
ljmp
and
inc
xchg
mov
xlat
les
jns
ljmp
dec
add
inc
mov
cmpsb
lock
lahf
push
add
lock
mov
cmp
jne
lret
invd
jbe
xchg
add
fadd
xchg
sbb
hlt
cmp
addr16
sarl
test
add
inc
or
xlat
jle
add
loopne
adc
and
outsb
xor
push
or
aam
inc
imull
imul
nop
jb
mov
mov
jl
cld
test
inc
pop
sbb
pusha
jecxz
add
adc
mov
mov
add
or
dec
or
pusha
sarb
add
ljmp
push
dec
pop
dec
and
scas
es
outsb
xchg
push
dec
lock
loop
lahf
repz
push
filds
cmc
ret
jnp
inc
aam
test
sarb
or
xor
add
push
add
xor
inc
inc
add
or
push
dec
loopne
push
mov
cli
divb
dec
push
add
inc
jo
pusha
xor
mov
fsubrs
add
xchg
add
cld
or
hlt
sldt
aaa
movsl
mov
mov
xor
in
clc
nop
sub
fiadds
pop
xchg
jne
in
rorl
mov
add
pop
lret
push
loopne
fists
add
cmpsb
adc
imul
lock
or
jno
int
data16
push
clc
fs
xchg
add
stos
js
adc
pop
mov
xor
xchg
push
scas
add
push
movsb
push
inc
mov
add
loopne
pop
or
test
call
les
pop
aam
jo
insb
push
xchg
xor
cs
adc
cmp
and
mov
sarl
pop
fsubrs
add
sub
pop
sbb
or
sub
cmp
cmp
pop
int3
jo
and
sub
mov
jp
inc
imulb
adc
xchg
xor
xor
pop
sti
pusha
clc
xor
pop
dec
jb
rcl
mov
xorl
pop
and
jge
icebp
push
loopne
add
add
push
les
movsb
cmc
lret
subb
mov
nop
lret
add
aam
loopne
pop
xchg
push
mov
add
orb
insl
dec
iret
add
ret
loope
cli
push
pop
and
and
clc
jae
inc
mov
xchg
call
roll
add
pusha
imul
cld
je
sbb
push
add
push
jg
incl
dec
aas
xchg
sbb
add
mov
ja
push
add
or
push
push
add
scas
jae
inc
shl
inc
add
fstp
addl
push
add
icebp
pop
outsl
add
pusha
mov
cld
cmc
mov
cmp
jb
clc
fwait
push
lea
jg
jnp
aaa
insb
ss
add
lods
mov
or
pop
inc
push
add
fcoml
std
dec
test
int3
cmpsl
aam
ret
stos
push
call
adc
fs
cli
pop
lahf
icebp
and
jmp
add
xor
mov
call
stos
loop
popa
ret
add
lock
pop
cli
pop
add
push
push
mov
dec
shr
pusha
add
lds
jae
fadds
add
jb
adc
testb
cwtl
es
mov
add
or
or
adc
mov
std
bound
cmp
add
addb
mov
or
inc
or
inc
arpl
dec
in
addb
jns
and
je
cmc
leave
sub
test
add
xchg
divb
add
cmp
fidivs
mov
ret
int
mov
clc
sysret
hlt
inc
divb
shlb
or
stos
jae
add
ss
adc
push
pop
mov
enter
push
and
mov
lock
adc
into
inc
testb
fstpt
aaa
add
leave
or
jnp
add
mov
fisttps
dec
add
sarb
mov
add
jmp
xor
test
in
cmpsl
lahf
add
and
mov
cmp
pusha
movsb
push
push
lods
lahf
and
nop
sbb
ss
out
mov
les
and
cld
out
ucomiss
das
cltd
add
push
fidivrs
or
pop
add
inc
aaa
je
or
cmp
sbb
xor
mov
push
mov
popa
xor
inc
sub
sub
xor
mov
jo
add
mov
push
jns
xchg
jmp
adc
roll
sub
sub
add
sub
push
dec
inc
gs
xor
dec
add
enter
sub
add
icebp
or
inc
xchg
add
lret
pusha
adc
jmp
adc
and
adc
xor
aas
rcrb
add
add
dec
mov
mov
clc
sbb
adc
add
adc
add
and
adc
mov
lods
add
cmp
enter
cmpb
inc
add
push
lds
xchg
inc
sub
adc
pop
or
push
pop
or
xor
push
pop
lock
ds
jl
lret
add
push
lret
int
clc
add
pop
nop
lods
add
mov
inc
xadd
rorb
add
mov
xor
ljmp
sbb
in
inc
sub
bound
sbb
addps
lcall
jmp
or
and
movl
popf
test
lcall
rolb
mov
call
ljmp
add
mov
or
popl
pop
sarb
pop
ret
push
push
adc
adc
test
in
add
sahf
shl
lods
push
add
shll
jl
add
jg
stos
popf
push
xlat
add
ss
mov
jle
push
hlt
mov
sub
lcall
addb
imul
movsl
jg
loop
push
lcall
inc
loopne
nop
lret
push
mov
push
jge
add
and
mov
cmp
repnz
add
cwtl
sub
xor
add
add
jmp
pop
pop
xorb
push
add
mov
xchg
add
in
lret
adc
aam
je
or
call
push
add
pop
imul
and
sub
jp
mov
imul
call
add
pop
or
jae
and
repnz
or
jmp
sub
rclb
sbb
sar
push
dec
add
in
loop
push
hlt
and
jg
dec
shll
or
rolb
mov
add
rclb
jne
and
into
cld
lcall
scas
sbb
mov
iret
dec
stos
add
test
dec
adc
add
xchg
sar
add
xchg
fsubs
dec
sbbl
push
jno
ret
jne
inc
push
mov
and
dec
pop
cmp
and
inc
mov
mov
dec
scas
add
dec
addl
xchg
push
push
add
sub
test
dec
add
dec
adc
push
adc
add
mov
test
dec
das
add
call
lods
or
imul
insl
imul
adc
pop
push
pop
add
jbe
or
out
inc
lock
add
sub
inc
xchg
xlat
xchg
sbb
loopne
inc
inc
outsl
or
add
sub
out
mov
add
pusha
ret
push
add
pushl
add
or
jno
add
add
orl
jle
add
mov
mov
add
in
adc
and
jmp
cmp
out
lfs
mov
call
adcb
or
leave
cs
pop
push
out
or
pop
add
andb
and
lods
gs
cld
subl
enter
decb
aam
push
and
nop
adc
sub
int3
iret
xchg
or
mov
and
or
sub
sbb
loopne
xor
add
adc
test
clc
and
cmp
pop
add
gs
push
sub
add
nop
inc
mov
cwtl
addl
clc
pushf
js
daa
in
add
or
dec
mov
fs
mov
lock
je
inc
bound
inc
push
mov
hlt
xchg
dec
cs
in
int
add
out
ljmp
mov
adc
mov
jnp
xor
nop
mov
fldl
in
std
pusha
sbb
andb
sahf
add
mov
pusha
adcl
sub
add
pop
rep
jmp
popa
adc
sbb
inc
xor
shlb
xchg
mov
add
pop
int
and
je
jge
rcll
jb
add
sbb
or
cmp
mov
jo
sub
dec
push
into
ds
adc
pushf
or
push
jecxz
add
xlat
xor
add
pop
xchg
add
adc
leave
fwait
lahf
sbb
mov
jns
ds
mov
ljmp
outsb
lds
jbe
ss
add
or
pop
xorl
xor
push
cli
jle
push
add
mov
mov
jne
in
cmp
clc
cs
push
add
mov
imul
test
in
sar
xchg
fadd
cwtl
imul
jae
cmp
lock
and
jp
pushf
pop
add
pop
add
add
into
inc
adc
shl
dec
sbb
inc
mov
sti
popa
es
mov
in
xchg
lods
inc
jbe
pop
rorl
decb
lods
and
dec
insb
add
test
inc
fsubrl
test
es
imul
lea
rorb
fs
add
adc
js
pop
mov
cltd
cli
and
loopne
inc
add
decb
or
pop
inc
and
sub
loopne
testl
cmc
adcb
inc
add
or
outsb
add
in
dec
cld
cmpl
clc
xor
or
je
shlb
adc
test
adcb
inc
dec
jmp
mov
push
mov
push
cmp
jne
in
add
test
add
sub
add
enter
xlat
add
inc
stos
mov
add
mov
test
inc
and
adc
mov
mov
loopne
test
and
mov
adcl
cmp
push
hlt
aas
cmpsb
adc
incl
xor
pusha
mov
sbb
mov
les
gs
mov
adc
add
and
adc
lods
pop
dec
loopne
test
dec
movsb
xchg
cmovl
push
inc
or
pusha
xor
inc
and
add
xor
lock
ss
clc
jae
adc
inc
hlt
xor
pop
add
loop
stc
nop
outsl
bsf
in
andb
in
inc
add
push
outsb
inc
stos
mov
and
lds
mov
mov
repnz
out
xorb
add
inc
out
and
mov
cwtl
cmpsl
fdivrs
ds
aas
cmc
push
fsubrl
jne
jecxz
add
fbld
jo
loope
xor
add
aas
sub
adc
add
add
jnp
mov
pop
adc
pop
jno
push
cmp
or
jo
sbb
ss
and
ja
or
cli
sub
lods
push
movsb
lret
stos
lods
mov
xchg
push
xchg
loop
clc
lret
cmpsl
mov
or
lock
sub
je
add
xchg
inc
divb
xor
jmp
popf
clc
and
sub
add
cli
or
add
lahf
jnp
mov
add
cmpsl
xor
pop
inc
xchg
jne
fwait
pop
add
test
xchg
adc
ss
push
ret
ljmp
cli
rclb
repz
add
call
movb
jns
cmpsl
lock
sti
add
ja
sub
jge
pop
and
clc
shrb
or
addb
mov
inc
or
add
jo
xchg
or
cltd
add
out
jg
add
add
mov
or
nop
adc
test
insl
out
data16
cmp
jne
les
lods
fsubrl
pushf
ja
aam
sbb
mov
bnd
push
xchg
push
adc
push
cmp
fwait
and
inc
or
push
js
lret
pop
inc
add
arpl
sbbb
int3
add
iret
sbb
add
adc
mov
bound
xchg
je
mov
xor
add
lea
call
push
test
std
pusha
mov
or
pop
cmp
xorl
scas
pop
das
add
and
pop
pop
movsl
sub
push
in
xchg
inc
iret
xchg
xor
ret
outsl
and
inc
cmp
push
add
adc
out
jns
add
leave
js
add
out
lods
jp
push
nop
add
mov
mov
add
cmp
dec
add
lea
sbb
cltd
and
dec
into
lds
push
call
pop
sub
cmovns
fs
popf
sbb
lea
and
scas
inc
adc
mov
or
push
lret
pop
sbb
add
icebp
andb
mov
es
orb
sbb
sub
lock
cmp
add
sbbb
adc
inc
lea
or
nop
add
mov
faddl
xchg
sbb
aam
test
mov
mov
xchg
add
loop
and
fiaddl
mov
outsl
xlat
pop
sub
movl
xor
fistpl
push
outsb
xchg
loope
fmuls
add
push
inc
popa
mov
add
push
sub
mov
adc
repz
adc
test
add
gs
push
popa
lds
sbb
addb
add
sub
jo
add
pusha
mov
icebp
cwtl
sbb
xchg
jge
ljmp
pusha
in
sti
outsl
add
fdivrs
aad
push
sbb
sbb
add
xor
sub
pop
je
push
push
push
mov
or
das
mov
sub
mov
mov
lcall
xor
mov
push
add
xor
imul
push
or
inc
add
cmp
je,pt
mov
fistpl
adc
add
adc
stos
cmp
pop
add
jmp
pop
rcrb
ljmp
imul
mov
jbe
shlb
roll
sbb
add
and
das
jmp
jg
cltd
ret
negl
push
out
hlt
aaa
enter
in
push
inc
add
adc
outsl
cld
add
xor
shlb
inc
addb
jae
jo
outsl
push
addr16
insl
add
jmp
sub
adc
dec
xchg
fs
pop
jns
jne
mov
out
add
jmp
data16
loopnew
sti
fnstcw
out
mov
add
mov
daa
cmp
dec
orb
dec
mov
jecxz
fbstp
inc
xlat
inc
daa
push
filds
jge
push
je
pop
inc
push
clc
cli
dec
inc
and
dec
mov
push
gs
insb
pop
add
jo
in
add
mov
psllw
aas
add
hlt
dec
call
jecxz
stc
std
push
mov
das
das
add
add
dec
es
adc
rclb
pop
sbb
adc
add
call
add
outsb
test
loopne
repz
sarb
add
pop
sbb
add
pop
xor
sub
sti
add
out
clc
mov
jne
repnz
jle
pushf
incb
out
cmp
sbb
push
or
add
add
dec
hlt
mov
and
add
out
adc
mov
push
cwtl
xchg
push
sbb
xchg
mov
inc
dec
add
mov
xchg
xchg
call
std
stos
in
sub
push
jmp
or
add
push
or
cmp
pop
test
mov
in
clc
jge
cmpb
add
fdivrl
leave
or
clc
ljmp
fisubrs
mov
jg
in
add
fs
filds
insl
mov
mov
inc
adc
lret
subl
in
mov
mov
xor
es
pop
movsb
xchg
dec
scas
xorl
jmp
ja
and
es
xor
pop
and
test
pop
or
loopne
add
mov
inc
outsb
cmpsb
stos
pop
lods
out
add
inc
fcmovbe
push
fimuls
hlt
clc
lock
daa
arpl
pushf
xchg
and
pop
pop
sti
jne
and
or
push
adc
pusha
sub
aas
or
jmp
inc
aam
and
jbe
nop
inc
jmp
loop
jge
jb
jno
daa
jno
add
mov
xchg
sub
sub
sub
xchg
mov
aaa
pushf
sbb
adc
imul
js
add
adc
cmp
or
ljmp
jg
mov
and
and
enter
or
shrb
lret
loope
insb
and
xchg
out
cltd
int3
inc
lock
fcoms
push
xchg
add
cwtl
jnp
add
enter
lock
iret
ljmp
mov
ja
add
pop
mov
pushl
inc
or
mov
inc
mov
dec
cltd
push
mov
ror
test
cmpps
pusha
add
add
leave
in
sub
push
add
idivb
push
push
jl
sub
and
mov
jb
sub
sub
es
dec
fadds
jmp
xor
mov
jle
mov
cmpsb
insl
push
or
aam
and
xchg
xchg
inc
cmp
push
iret
cld
jb
pusha
sub
into
fcompl
fmull
adc
cltd
addb
mov
lret
loop
add
jno
or
pop
in
add
test
stc
mov
cli
cmp
leave
push
call
mov
mov
das
sarb
pushf
mov
xchg
pop
lock
int3
les
sub
cld
pop
arpl
andl
and
push
in
insl
xor
mov
sub
cmp
pop
pop
xchg
xor
add
cmp
push
add
in
cld
inc
leave
repz
scas
mov
mov
add
pop
adc
push
add
das
jo
add
pop
dec
xor
loopne
add
inc
lea
sub
add
sub
pop
test
je
and
lds
mov
sub
inc
or
ret
rcrb
lret
sub
dec
inc
pop
xchg
jl
pop
mov
push
test
add
push
add
call
pop
cmp
add
cwtl
cmp
pop
pop
enter
add
sub
pop
loop
testl
dec
mov
jns
jp
ja
add
mov
lock
dec
pop
add
xchg
pop
leave
inc
jle
mov
test
jge
sub
mov
inc
enter
xchg
lret
jg
jns
pop
pop
mov
fwait
pop
jne
and
push
push
stos
adc
lods
add
and
sub
pop
cmp
sub
mov
inc
xchg
or
mov
jmp
sub
cmc
jno
add
cmp
ret
dec
xchg
cmp
rcll
or
mov
adc
add
add
cmp
or
inc
or
add
add
jl
sbb
sbb
add
ljmp
sbb
xchg
or
push
aam
clc
add
addr16
leave
mov
push
out
ljmp
ljmp
xchg
or
aam
xchg
fisubs
mov
orb
inc
test
jle
popa
jns
or
add
ret
xchg
or
das
inc
ljmp
add
xchg
inc
repnz
fmul
xor
push
mov
dec
sbb
aam
scas
test
in
loop
pop
add
sub
les
or
dec
js
rcrb
lds
pop
add
fdivl
inc
nop
or
push
ja
cli
adc
sub
xlat
xchg
loop
adc
cld
test
add
dec
aam
cmp
jg
shll
mov
mov
add
sbb
xor
pop
mov
fcompl
add
test
jns
add
or
add
cmp
ret
fldt
inc
add
add
xor
inc
addr16
pusha
out
adc
loopne
sti
jne
jb
in
into
sub
fs
andb
add
sahf
mov
mov
cwtl
aam
cmp
insb
shlb
inc
add
xor
imul
adc
mov
push
test
jmp
adc
or
inc
jnp
cmp
pause
pop
push
into
out
xchg
pop
or
shlb
mul
jae
xor
add
pushf
push
fcoms
test
aas
dec
sub
cwtl
pop
dec
cmp
sbb
les
or
sbbb
mov
ret
jmp
mov
shlb
fld
mov
sub
cmp
jb
xlat
sbb
mov
pop
add
jae
fs
add
cli
and
dec
sub
mov
add
sbb
imul
cmpb
stc
call
xchg
push
push
jae
lret
jge
cwtl
inc
add
outsb
pushf
inc
loopne
pop
ljmp
sar
fs
pop
sbb
out
or
adc
cmpsb
mov
sub
dec
sub
xor
testb
pop
mov
inc
addb
add
mov
ret
add
test
addr16
mov
xchg
cmp
mov
add
test
mov
inc
sbb
js
add
or
push
pop
shlb
in
cli
mov
xor
fs
and
pop
jmp
xchg
scas
jg
out
pusha
outsb
push
cli
mov
imul
in
add
sub
or
sbb
xchg
mov
jp
mov
add
pop
add
fcomps
loope
inc
sti
pushl
sbb
push
js
mov
jne
add
xchg
dec
sar
frstor
test
scas
mov
push
add
jns
or
adc
fwait
dec
popf
mov
out
stos
pop
inc
test
iret
test
imul
mov
test
movsl
out
xor
rolb
data16
adc
dec
and
add
sub
mov
flds
push
std
add
inc
pop
jge
nop
popa
out
add
ja
push
add
sub
mov
xchg
aaa
jnp
icebp
add
xor
das
enter
mov
jmp
xchg
arpl
sbb
lahf
jecxz
es
addl
ss
xchg
femms
mov
les
xor
sbb
in
clc
fldenv
push
aam
or
or
loopne
cmpl
je
cwtl
jl
pusha
test
and
jne
jo
xor
push
jp
add
mov
inc
jbe
vmptrst
mov
adc
pop
mov
push
mov
mov
call
push
sarb
mov
add
push
int3
jne
test
add
and
push
xor
xchg
sahf
dec
add
jae
loop
mov
xchg
shlb
push
cwtl
jno
sub
xchg
add
jmp
push
cmp
leave
sbb
mov
inc
pop
clc
es
cmc
icebp
jle
sbb
adc
sbb
xchg
hlt
pushf
addb
adc
stc
imul
fldt
add
and
push
and
cmpsl
or
adc
jno
add
sbb
jmp
jle
fucom
fisubl
shr
loope
push
test
lock
mov
mov
add
cmp
pop
xor
cmp
mov
dec
sub
fstl
dec
sbb
jo
test
out
iret
sub
test
fs
push
or
push
rorb
mov
pop
daa
sub
add
sbb
call
sbb
stos
mov
mov
out
call
dec
inc
out
or
add
cli
pop
sbb
push
jmp
push
jno
and
and
cmp
sbb
sbb
stos
cltd
popf
xor
mov
imul
inc
pop
scas
sub
sahf
push
jns
add
and
std
sub
sub
add
push
sub
or
fs
and
nop
cmp
mov
loop
cmp
push
adc
js
add
test
mov
push
pop
xor
push
xchg
jge
inc
mov
jae
fiadds
mov
aaa
xor
std
add
dec
mov
imul
jns
mov
add
mov
inc
addb
jns
or
mov
sbbl
push
imul
pop
clc
pop
enter
add
addr16
insl
fstpl
inc
fadds
shufps
jno
sar
mov
add
pop
shlb
add
nop
cmp
and
jo
add
add
subb
les
pusha
pop
lds
lods
mov
push
nop
push
add
add
inc
add
adc
sbb
outsb
push
inc
rclb
xor
push
loopne
cltd
mov
add
xchg
add
inc
adc
pop
outsb
addb
addr16
or
loopne
sub
add
jns
sbb
popa
mov
push
clc
subb
dec
add
or
xor
push
add
mov
inc
mov
mov
mov
mov
jecxz
cmp
mov
decb
adc
clc
jae
shlb
lcall
add
into
shr
pusha
cmpsb
faddl
xchg
add
and
mov
mov
pop
pop
inc
imul
hlt
outsl
or
xchg
mov
push
mov
inc
xchg
clc
popf
ret
inc
data16
movsb
test
es
add
add
add
and
lea
repz
add
out
mov
xchg
and
add
push
pop
mov
cld
sbb
inc
cmpb
mov
sbb
mov
push
and
sub
bound
push
or
add
and
mov
sbb
ds
xchg
shl
loopne
orl
int3
and
xchg
scas
jle
cwtl
pop
cmp
pop
add
cmp
xor
inc
mulb
insb
add
jne
leave
lock
out
cmp
addb
adc
into
and
add
sti
mov
inc
mov
dec
icebp
lods
movsb
mov
data16
jmp
stos
lret
and
cmp
ds
iret
call
adc
clc
or
inc
dec
icebp
cmc
lea
lret
pop
add
mulb
inc
stos
xchg
aas
std
mov
add
xor
pop
ret
es
dec
pop
pop
dec
mov
sub
in
cmp
jo
adc
mov
enter
and
fdivrs
or
sbb
aaa
push
loop
and
adc
xchg
cmp
inc
loopne
jb
les
lods
mov
cmp
out
rclb
sbb
cmpl
jb
stos
cmpb
inc
mov
dec
push
add
int3
out
add
loop
lret
mov
add
clc
mov
fistps
pop
lock
shlb
shll
cld
sub
jle
cs
bound
cmp
pop
and
fs
pop
sub
enter
ret
mov
jmp
add
inc
sub
or
add
jg
pop
cmp
mov
sbb
add
and
or
add
mov
add
mov
or
sbbb
sbb
add
lods
fcoml
rorl
add
dec
pop
clc
add
les
rcl
inc
mov
add
add
add
or
jp
add
sahf
clc
cmp
jb
and
sbb
cmp
jb
lock
jo
scas
push
inc
add
xor
or
adc
add
imul
add
jmp
or
and
loop
lods
push
inc
push
add
cmp
pop
xchg
sbbb
or
incb
push
inc
inc
add
adc
add
push
movsb
rcrb
int
add
pop
dec
cli
add
stos
cmp
or
bound
loopne
shrb
lea
lret
int
sbb
stos
mov
mov
add
push
stos
xor
xor
leave
add
add
inc
andb
push
mov
push
add
loope
xchg
leave
or
verw
insb
jle
add
and
jae,pt
add
push
mov
clc
or
cmpb
psubw
xor
inc
jmp
pusha
jne
push
dec
pop
dec
and
dec
push
cmp
add
and
mov
jg
jmp
enter
pop
push
add
pop
jae
push
or
add
mov
mov
dec
pop
jno
movsb
inc
push
jl
test
pop
call
stos
rorb
xchg
mov
push
out
inc
js
popa
in
xchg
sarb
movb
pop
addb
push
sub
pop
sbb
aas
test
add
outsb
sar
adc
jne
mov
inc
add
dec
movsb
pop
fcoml
test
inc
lds
in
cmp
pop
add
ror
movl
sub
mov
mov
jbe
fs
cmp
adc
aaa
mov
add
xchg
add
jae
add
nop
movsb
jno
add
in
add
add
addb
negl
cmc
call
addl
popa
daa
xor
xor
add
int3
push
jno
mov
dec
or
adc
push
mov
jle
adc
call
sbbl
mov
in
insl
xchg
fcmovu
push
jp
jp
sbb
inc
xlat
xchg
adc
shll
les
xchg
pushf
scas
push
xchg
cmp
cld
cli
jnp
add
jno
add
std
pop
mov
push
cmp
data16
sub
add
inc
mov
dec
daa
xor
roll
xlat
push
cmp
add
jns
cmp
add
and
out
and
or
cmp
je
xor
testb
clc
jmp
inc
lcall
aam
add
inc
cmp
xor
sbb
filds
sbb
mov
inc
or
jno
in
mov
jmp
sbb
orl
std
mov
add
divb
fldl
mov
push
xchg
and
adc
clc
cmp
cmp
jno
jle
fcom
sub
pop
add
adc
add
jnp
jb
sub
stos
leave
pop
add
xchg
into
xor
mov
cmp
jb
ret
sub
stc
insb
adcl
pop
sub
sub
in
inc
add
pusha
and
clc
add
jb
fldl
sbb
scas
inc
xlat
add
nop
xor
push
push
push
cmp
add
xlat
add
fiaddl
std
sub
xor
lret
xor
fdivs
push
add
adc
movsl
add
pop
int
inc
adc
out
test
sub
inc
cmpb
and
out
mov
movsb
sub
pop
pop
repnz
add
mov
and
cmp
ja
mov
cwtl
push
pop
lea
inc
or
out
sbb
test
jg
invd
das
stc
testb
inc
incl
mov
shll
orl
je,pt
mov
sbbb
mov
mov
in
shll
pop
outsb
add
mov
xchg
cmpsl
jl
adc
bound
or
or
xchg
add
add
mov
rclb
push
nop
loopne
call
repnz
or
push
xor
push
lret
dec
mov
dec
or
js
mov
ljmp
or
pop
andb
push
xor
fs
cmp
or
test
out
add
lret
or
mov
lahf
cmpb
jmp
add
cmpl
je
inc
pop
add
mov
add
or
lret
mov
xchg
sbb
stc
dec
into
lcall
dec
mov
mov
pop
decl
adc
aam
in
lds
pop
sub
sbb
jno
add
scas
je
hlt
lret
xor
out
add
xor
mov
adc
add
in
add
or
dec
ds
mov
cmpsl
jmp
sub
mov
in
rsqrtps
aad
mov
add
pop
fs
outsl
sbb
xchg
add
push
push
add
add
or
dec
mov
movsb
pcmpgtb
jne
rorb
repz
add
jno
testb
lods
pop
mov
push
add
test
add
xchg
mov
sbbb
faddl
push
sub
pop
mov
stc
into
xor
cmpsb
fisubs
lods
test
xor
xchg
call
push
xor
xor
mov
rcrb
or
adc
test
stos
test
jnp
adcb
outsl
add
jae
fcompl
and
cmp
xor
adc
add
lds
pop
inc
in
addb
lahf
dec
imul
clc
xor
and
adc
xor
add
xor
pusha
jo
add
and
cmp
mov
mov
add
cld
sti
and
imul
or
and
push
fmul
jmp
or
inc
int3
push
cmp
lock
xlat
jne
mov
repnz
roll
fbld
pusha
add
shrb
aad
daa
xor
sbb
dec
cmpb
xor
pop
add
mov
in
out
rolb
push
int
data16
sub
pop
fucomp
jnp
add
xlat
cli
inc
mov
pusha
dec
test
ret
mov
adc
hlt
xor
dec
jmp
mov
mov
lods
data16
inc
sub
sbb
xchg
jo
xchg
divb
fimull
dec
xor
mov
jle
mov
lods
lock
leave
add
das
ljmp
adc
lods
inc
mov
push
mov
out
push
popf
add
add
decl
add
mulb
and
gs
movsl
pop
inc
add
inc
lods
cmp
inc
lods
cwtl
jnp
test
arpl
dec
scas
jge
scas
cmc
sahf
jo
roll
cmp
je
jmp
shlb
inc
mov
add
push
into
or
mov
add
rorl
aas
bound
add
fwait
xlat
add
mov
and
add
pop
roll
mov
jmp
add
clc
lahf
enter
pop
jb
cmp
add
push
lock
pop
pop
inc
loopne
std
mov
or
add
push
sub
jmp
xchg
stos
add
or
jg
add
mov
mov
popl
subps
aas
jbe
sbb
or
adc
add
je
inc
mov
mov
inc
and
gs
jns
adc
or
faddl
stos
arpl
mov
cmp
test
rcl
jp
add
and
aam
dec
add
add
aas
mov
add
dec
add
mov
je
movsb
jns
add
adc
inc
add
ja
mov
lret
xor
je
add
add
data16
pop
pop
add
out
sbb
xor
cli
or
sub
push
dec
movb
clc
rcrb
xchg
sarb
cmp
mov
add
pop
xor
add
sbb
adc
cmp
add
dec
push
dec
ljmp
and
add
mov
xor
add
inc
add
js
pop
roll
push
xor
xorps
mov
jmp
mov
xchg
pop
cmp
push
adc
sub
pushf
add
add
add
or
addb
shrb
pushf
and
dec
mov
pop
pop
pop
inc
shlb
outsb
push
scas
sbb
cli
incl
dec
dec
mov
push
mov
push
dec
test
push
sub
loopne
loope
insl
push
push
jp
pop
in
lock
inc
dec
cmpsl
dec
scas
das
cs
add
add
mov
and
popf
push
adc
ja
add
ja
mov
ret
inc
sar
mov
or
or
add
mov
imul
and
loopne
adc
lock
ret
add
and
add
std
hlt
pop
aas
and
inc
cld
paddusb
gs
enter
fiadds
sub
arpl
adc
xchg
aad
add
pusha
es
add
lock
rdtsc
jle
or
jmp
rclb
inc
mov
add
mov
add
pusha
subl
sahf
mov
and
inc
int3
imul
adc
mov
arpl
push
int3
in
pop
stc
lock
xor
add
test
and
add
mov
cmp
cmpsl
push
add
cltd
xchg
mov
or
jb
test
cmp
movsb
rcrl
add
pop
inc
fs
popa
daa
outsb
add
mov
insb
outsl
insl
lock
rorb
xchg
dec
adc
data16
xchg
sub
add
mov
mov
pop
xchg
ja
xlat
fs
movsl
roll
xchg
jno
jne
pop
jb
mov
add
int
fmuls
add
ucomiss
out
and
xchg
mov
inc
fwait
add
pop
xchg
lea
jb
sarl
std
and
add
pop
cmovge
add
and
add
inc
mov
or
inc
push
push
push
mov
add
sub
fcomps
add
or
fldenv
cmp
popa
loope
mov
nop
sbb
xchg
test
sbb
stos
clc
cli
add
sub
mov
sub
mov
fxch
ja
jl
push
push
add
dec
pop
pop
inc
dec
loopne
test
hlt
in
sti
mov
xchg
jbe
loopne
cmp
jne
xchg
fsubs
cwtl
roll
repnz
dec
lea
dec
pop
test
loopne
mov
or
mov
sbbb
rcr
jp
cld
fwait
xor
repnz
cmp
xor
dec
ret
rolb
ja
sub
sub
fldcw
cmp
mov
imul
mov
mov
cmc
incl
aas
sub
cmp
mov
nop
rorl
xor
cmp
loopne
rclb
push
les
sub
out
faddl
mov
lret
add
inc
aam
daa
jne
lock
add
dec
xor
cmc
loopne
xor
fcomps
rolb
or
jmp
push
js
mov
fidivl
lds
and
hlt
stos
sub
sbb
dec
lods
cmpl
lahf
lock
push
movhps
mov
enter
jmp
add
mov
mov
push
push
pop
outsl
les
xchg
jmp
inc
js
add
loope
paddsb
pop
cmpsb
jl
hlt
sub
les
mov
cs
add
mov
jg
or
subl
and
and
sbb
clc
pop
add
push
add
imul
jns
loope
mov
add
loopne
pop
cwtl
add
pushf
add
xor
mov
pop
in
jbe
xor
inc
rcrb
and
aam
add
push
dec
stc
mov
xchg
inc
mov
sub
jne
add
repz
rolb
je
mov
das
loopne
add
cltd
xor
ret
cmc
xor
repz
xchg
add
sub
roll
imul
dec
addb
ljmp
push
scas
xchg
add
fsubr
add
int
push
andb
pusha
and
push
jle
jmp
subb
lea
or
add
clc
sbb
add
jno
sub
sub
inc
sbb
test
or
or
or
dec
xor
pop
add
imul
stc
push
add
and
xchg
movsb
out
cwtl
lcall
cmp
addl
sub
adc
xor
adc
mov
push
add
addb
rcl
push
mov
repnz
aad
insl
lea
dec
test
cmp
cmp
aaa
ja
cld
rcrb
call
mov
adc
stc
cld
and
sub
jp
lahf
add
cmpb
add
adc
add
sbb
add
pop
test
dec
cld
add
ss
call
int3
repnz
or
enter
out
andl
cmp
cmpb
nop
cmp
shlb
xor
sub
adc
flds
push
in
sbb
add
add
mov
xor
jmp
adc
je
in
das
and
jns
cmp
mov
pop
inc
add
aad
enter
popa
xchg
data16
sbb
xor
es
mov
test
add
fmuls
add
les
and
jo
add
sub
sbb
jno
jmp
inc
sub
and
dec
inc
mov
push
pusha
or
scas
pop
mov
add
sub
and
sub
lds
or
pop
push
xchg
dec
test
and
adc
add
push
jno
add
or
mov
jmp
push
push
mov
add
scas
mov
cltd
adc
out
add
stos
fsub
inc
add
and
jmp
push
int
or
incl
dec
push
andl
adc
pop
adc
cld
in
mov
sub
and
popf
mov
rolb
es
lock
sub
pop
mov
popl
pop
xchg
mov
int3
push
add
or
add
pop
out
sbb
imul
add
xchg
add
xor
pop
movsl
pusha
sti
lock
cmp
ja
jb
bound
add
inc
outsb
push
movsb
shlb
mov
push
fcomps
imul
cmpsb
xor
dec
push
adc
mov
xchg
mov
cmp
pop
jp
push
sub
xor
or
add
rclb
add
dec
mov
and
gs
fcom
int
add
jmp
pushf
lods
push
rcr
mov
rclb
inc
push
add
adc
mov
inc
ds
divb
cmp
pmaxub
add
cmpb
pop
pop
mov
or
loopne
decb
add
rcrl
mov
inc
or
je
iret
or
stos
push
pop
mov
adc
cmp
aam
ret
pop
sub
ret
in
xor
mov
inc
xor
sarl
das
repnz
xor
dec
jb
xor
add
popa
inc
pop
xchg
jl
xor
pushf
ss
int
sbb
loopne
mov
ds
sbbb
mov
adc
shll
lods
mov
ret
and
movsb
mov
inc
jnp
inc
add
js
add
inc
push
pop
aam
cli
mov
add
sbb
imul
ret
addr16
xor
orb
cmp
add
xchg
or
xchg
jecxz
divl
arpl
pop
xor
add
dec
cmp
mov
in
icebp
sbb
les
rclb
jne
dec
in
and
jns
jns
jmp
push
lahf
adc
inc
inc
lds
vmwrite
xchg
adc
sub
sub
outsl
add
and
xor
jns
dec
shlb
je
add
jmp
xor
jl
icebp
cltd
mov
xor
adc
bound
jg
pop
push
outsb
imul
add
stos
and
mov
mov
push
jmp
pop
add
lds
faddl
mov
loopne
mov
adc
pop
outsb
jae
add
insb
sbb
jne
add
mull
xor
shrb
adc
push
stos
adc
or
rdmsr
pop
sbb
test
les
lret
add
dec
test
jo
inc
outsl
and
je
mov
in
add
enter
inc
andb
pop
enter
add
push
out
fs
jbe
jae
add
in
pop
test
dec
mov
out
lidtl
jle
push
push
mov
nop
orl
inc
cmp
mov
add
imull
dec
dec
dec
fcoml
xchg
add
lea
sbb
jmp
addb
push
dec
and
arpl
test
add
repz
pop
jne
les
and
movl
sub
and
add
adc
add
pcmpeqb
call
add
das
ror
dec
aas
add
xchg
add
aad
mov
test
call
outsb
hlt
imul
sarb
xchg
xchg
ss
mov
and
cmpsl
add
lock
mov
add
and
js
in
lret
mov
add
sbb
pop
push
add
adcl
add
add
add
xor
mov
jne
shll
mov
mov
lea
push
jne
lret
pop
cmp
andb
inc
insl
in
and
mov
dec
mov
cmp
or
jo
add
out
sub
aad
lock
sbb
fcomps
cwtl
add
dec
cvtdq2ps
dec
int3
inc
inc
push
pop
push
cmpsb
add
push
add
add
sub
mov
mov
mov
adc
sbb
movb
add
clc
add
add
dec
or
dec
rcr
pop
hlt
popf
pop
add
xchg
inc
outsb
inc
cmp
jp
ret
adc
mov
mov
out
sub
sub
loop
push
shld
push
sbb
add
pop
pop
pop
pop
pop
add
pop
mov
sbb
push
ds
add
mov
push
adc
lea
je
jnp
cmp
mov
and
xor
push
and
push
pop
cs
mov
ljmp
sbb
xor
xchg
test
xchg
mov
pusha
dec
movsb
lret
mov
inc
cwtl
enter
pushf
mov
push
lods
faddl
in
mov
lea
mov
sti
lds
and
lret
push
pop
iret
xchg
cld
clc
pop
insb
negb
out
push
inc
bound
lret
sbb
xchg
pop
aad
leave
xor
pop
js
in
jae
and
adc
les
mov
pushf
sub
cmovne
lock
add
sub
add
pop
jns
pop
and
rolb
mov
mov
or
add
call
out
mov
shrb
push
sbb
xchg
call
xor
shlb
sbb
xchg
and
loop
add
les
int
ret
enter
xor
mov
add
and
add
iret
inc
fsub
mov
adc
cli
or
sbb
and
add
out
jg
add
mov
call
pop
je
js
js
jl
sbb
cltd
push
adc
int3
and
shlb
sbb
adcb
faddl
dec
sbb
dec
add
int3
xchg
stc
cwtl
mov
pop
cmp
mov
push
lret
pop
faddl
es
enter
lock
and
jg
jp
jae
cmp
shll
pop
cmp
or
mov
in
data16
inc
repnz
popf
jbe
add
jns
rcl
loope
cmp
add
pop
sbb
xlat
dec
sbb
sub
cmp
add
fwait
lods
xchg
add
insb
lods
adc
jne
jo
loope
movsl
sahf
add
cwtl
imul
roll
movb
rorl
rolb
push
imul
adc
rcrl
mov
lock
or
push
ss
or
out
pop
mov
shlb
mov
or
sub
push
xchg
jo
xchg
jno
dec
add
adc
jge
and
js
cmp
xchg
add
add
push
add
xorl
add
add
shlb
push
add
inc
mov
lods
inc
jnp
stc
insb
add
add
mov
call
xorb
scas
add
pop
arpl
ret
jg
adc
into
loop
movsb
pop
pop
and
mov
pop
jo
shlb
repz
mov
jb
or
jg
add
ljmp
add
mov
lock
das
jl
rcrb
hlt
loope
adc
xchg
inc
pop
sarl
sbb
mov
mov
xor
fildll
or
sbb
pop
and
sub
sbb
xor
ljmp
adc
add
leave
sarb
mov
pop
cmp
popa
mov
lret
lahf
xchg
mov
adc
push
je,pt
add
stos
shlb
mov
xor
pop
mov
inc
shlb
push
lock
jae
cmp
rol
inc
xorb
pop
jns
jmp
rclb
add
inc
adc
arpl
imul
inc
add
ds
inc
add
adc
add
scas
jecxz
adcb
xor
stos
jne
sub
orb
mov
insb
sub
mov
sbb
addr16
test
jo
pop
in
je,pn
outsb
add
mov
jns
push
mov
js
inc
insl
in
imul
test
sarl
dec
mov
fiadds
xchg
xchg
xchg
adc
jo
xor
push
xchg
lds
jno
add
pop
mov
add
sahf
les
int3
sarl
inc
add
ret
xorb
fs
loopne
cld
xor
add
mov
gs
aam
andb
movzwl
popf
add
push
or
xor
add
and
or
adc
pop
push
sbb
sbb
jmp
add
dec
pop
adc
insb
dec
add
cltd
sub
jmp
fs
aam
pop
subb
nop
rcl
mov
dec
mov
idiv
flds
lock
pop
test
test
in
sub
add
inc
add
inc
aad
fiaddl
add
add
mov
xlat
ljmp
aaa
inc
add
in
mov
mov
add
inc
add
adc
dec
aad
sti
xchg
call
push
push
xchg
jle
nop
les
push
ljmp
jae
add
jmp
push
pop
pop
adc
lahf
movups
pop
mov
jno
dec
daa
cwtl
mov
lahf
pop
icebp
or
cmp
sbb
cmp
je
cmp
pushl
andl
lret
mov
dec
add
or
jo
cmp
mov
outsl
add
imul
or
lahf
inc
jae
add
movsl
jbe
lods
cld
and
add
nop
es
mov
add
add
add
lock
out
addb
rolb
inc
and
or
push
add
movsl
fldenv
and
cmpsl
fildl
adc
push
push
je
or
add
cmpsb
add
mov
ret
ja
iret
fwait
and
dec
pop
add
or
mov
cmp
je
add
cmpsb
or
jb
insl
add
add
pop
and
cmp
addb
mov
fwait
outsl
mov
sub
je
add
xorl
pusha
out
pop
int3
mov
dec
or
sub
mov
jle
mov
pop
imulb
icebp
xor
mov
int3
inc
out
pop
pop
xchg
dec
add
sub
mov
jmp
cmp
scas
addr16
add
push
daa
push
outsl
mov
cmc
inc
orl
inc
lahf
add
add
xchg
jp
add
and
inc
cmp
and
lret
jp
adc
mov
inc
add
xor
bound
subl
jmp
mov
add
xchg
rorb
rorb
push
and
pop
mov
stos
popf
push
adc
clc
add
repz
add
and
and
lahf
rorb
add
fcmovnb
into
mov
add
push
loop
xor
daa
add
clc
popf
loope
sahf
sarl
xlat
adc
jno
add
push
and
jge
pop
push
add
cmc
sbb
mov
pop
mov
lods
xchg
add
cmpsb
sbb
add
sub
jne
cmpsl
adc
xor
fdivs
mov
adc
add
fisubrl
add
and
add
or
scas
andb
push
and
bound
insb
fiadds
test
xchg
out
loop
call
in
fcomi
jg
add
into
inc
pop
add
and
push
inc
cmp
cmc
xchg
out
pop
or
shlb
sbb
lock
decl
push
ltr
pop
and
add
in
pop
rol
ljmp
push
btc
mov
pusha
gs
or
cltd
cs
aas
mov
addb
push
sbb
dec
cmc
add
mov
pop
pusha
lcall
add
and
ret
mov
cli
insl
cld
ljmp
cmc
sbb
jge
jge
add
outsl
mov
fwait
jle
or
adc
aam
push
inc
mov
jo
sahf
xor
lahf
cmc
add
lea
pop
fildl
js
mov
push
pushf
loopne
loop
and
push
aaa
notb
inc
lcall
fildl
add
lds
fisubl
popa
add
imul
jno
sbb
ret
mov
sbb
les
xlat
faddl
fs
xor
and
lds
add
cltd
push
test
clc
pop
inc
add
orl
outsb
add
add
pop
dec
hlt
cmpsl
push
pop
sub
imul
inc
leave
xchg
repnz
or
dec
insl
insb
imulb
inc
dec
xchg
fbld
sub
mov
xchg
add
ds
sub
and
fimuls
sbb
jae
loopne
mov
jmp
cmp
cmp
push
and
sbb
xor
mov
cmpl
mov
test
fldl
sub
adc
pop
pop
mov
neg
mov
aas
cs
ss
and
das
push
rcll
adc
mov
mov
hlt
rorb
jp
mov
add
inc
sbb
sbb
test
and
add
imul
or
and
into
insb
adc
jecxz
maxps
gs
inc
cli
mov
ljmp
xor
stos
cmp
sub
in
jb
cmp
sbb
leave
dec
mov
xchg
popa
add
adc
inc
add
test
movsl
inc
rcr
shlb
pop
add
andb
push
add
jne,pn
incb
jge
add
adc
jmp
cmp
jl
add
test
dec
pusha
jge
adc
movzbl
cwtl
rcr
xor
and
lret
add
add
xchg
push
sti
in
jg
add
mov
sbb
add
fcmovb
stc
xchg
and
filds
in
inc
push
pop
test
push
push
jl
incl
xlat
into
movb
jne
icebp
mov
sub
fadds
or
popa
aaa
sbb
inc
loopne
negl
sahf
push
in
in
add
xor
cmpsb
cmp
add
push
testb
cmp
fdivs
clc
fld
test
lds
and
inc
add
mov
push
or
push
aad
outsb
cmovae
add
movb
pop
jbe
push
jl
cmp
mov
jmp
sub
jne
cs
add
ficoms
loop
clc
jo
cmp
mov
pop
sti
add
call
jne
mov
stos
sub
push
push
inc
xabort
add
aaa
push
add
jl
into
subb
out
jb
push
add
dec
add
js
mov
lds
add
dec
mov
pop
mov
out
mov
fmuls
jge
jl
adc
stc
nop
mov
add
loope
mov
jo
add
call
enter
ds
pop
addb
cmp
sub
add
or
lock
movsl
in
add
dec
movb
mov
add
shlb
lock
mov
lea
mov
adc
scas
shrb
filds
cmpb
loope
mov
call
cmpsl
add
sub
mov
or
lret
ja
cld
jo
addb
add
imul
add
mov
xor
sub
addb
inc
adc
jge
fdivrs
jns
outsl
adc
xchg
push
or
or
push
dec
cs
rclb
aad
les
cmp
mov
cmp
stos
and
or
daa
add
aas
test
iret
cmp
dec
mov
jl
rcl
cld
sub
mov
add
das
divb
dec
je
cmp
push
xorb
mov
mov
jns
or
pop
dec
xor
nop
add
daa
rolb
lods
lock
aas
add
add
test
rclb
idivl
clc
or
rcll
sbb
mov
push
push
ret
in
xchg
and
mov
andb
sbb
or
rcrl
ret
inc
adc
pop
js
add
jp
xor
jne
sbb
int3
sub
sbb
enter
lods
rcrb
mov
in
adcb
pop
mov
orb
push
mov
dec
inc
add
push
pusha
jae
add
je
push
dec
xor
add
and
js
add
mov
sbb
les
xor
enter
mov
and
test
pop
inc
incb
sub
add
shlb
sub
add
jg
scas
mov
jecxz
orb
or
stos
out
mov
aam
and
dec
idivl
js
add
imul
dec
loope,pt
add
stc
jp
or
dec
inc
add
and
js
jbe
cmp
and
repnz
push
inc
sub
push
roll
das
dec
cmp
shr
add
fisttpll
xor
out
add
cmpsl
push
dec
inc
nop
hlt
add
jecxz
in
cmp
xchg
subb
gs
pop
add
movsb
out
add
mov
mov
in
add
ret
adc
sbb
and
sub
fildl
daa
mov
and
adc
xchg
xlat
jmp
jo
mov
jmp
inc
add
sub
add
jl
fstps
inc
inc
adcb
adc
add
inc
enter
xchg
jg
add
mov
push
jne
jge
add
sub
sub
repnz
out
pop
leave
add
aas
push
js
das
subl
outsb
cmp
arpl
cmpsl
jns
add
cmp
sub
cmp
bound
pushf
add
ficomps
inc
inc
arpl
jo
cmp
ret
gs
hlt
push
adc
addr16
mov
gs
test
add
cmpsl
mov
dec
in
enter
jo
add
call
nop
popa
cmp
add
in
xor
call
sub
cli
cltd
add
hlt
sti
jb
xchg
aad
mov
sub
inc
fxch
filds
inc
jg
mov
fld
add
mov
and
mov
pop
xchg
js
add
push
add
adc
inc
out
mov
ss
rorb
jl
cmp
or
pop
in
dec
daa
dec
loop
ss
outsb
add
or
imul
mov
add
fcmovnu
in
xchg
mov
orl
xchg
push
mov
inc
hlt
dec
pop
add
add
adc
cmp
jb
je
adc
in
add
js
ret
add
jne
pusha
mov
mov
push
adc
lea
jb
xchg
inc
dec
enter
add
jne
add
mov
hlt
jge
add
mov
add
je
dec
outsl
je
imul
mov
push
add
push
add
add
das
dec
add
push
push
fsts
dec
push
test
push
rclb
push
icebp
dec
mov
fisttpl
cmp
add
pop
fists
aaa
pop
add
decb
push
add
mov
cld
lock
mov
jp
add
sub
sbb
shr
and
and
cmp
jg
add
sub
mov
mov
adc
mov
sbb
ss
add
repz
sbb
push
cmp
or
mov
sbb
xor
xchg
add
xlat
rcll
cmpb
cli
xchg
aas
adc
jne
or
jb
lcall
push
xor
mov
pop
cli
push
call
jecxz
push
sub
mov
adc
add
testb
sub
out
dec
push
in
cmpsl
scas
dec
incl
scas
cmp
add
add
ficompl
jno
add
xchg
sbb
dec
leave
scas
loopne
int3
jae
cmp
mov
movsb
dec
fsubrl
jmp
sub
add
inc
sub
jl,pt
pop
dec
jp
jle
into
loopne
daa
fs
add
push
push
jg
test
xlat
or
movsb
add
cmp
or
cmp
lahf
add
push
inc
add
div
out
cmp
mov
sub
mov
mov
add
lahf
mov
faddl
mov
sub
add
out
add
addr16
popf
add
aam
out
mov
mov
xchg
xchg
scas
pushf
add
push
ror
and
add
jno
insl
inc
pusha
push
add
dec
insb
sub
dec
sub
push
imul
cmp
xchg
jbe
add
outsb
lds
scas
or
test
sahf
popa
or
bound
imul
inc
sbb
mov
nop
or
add
xchg
add
mov
add
and
xor
add
inc
mov
in
push
fs
insb
rcr
xchg
pop
push
adc
aad
scas
aas
subb
mov
add
cwtl
push
jne
imul
add
mov
nop
arpl
rcrb
test
jb
adc
aas
sub
add
pop
loop
test
icebp
sub
std
daa
sarb
xor
iret
lock
add
arpl
add
mov
add
jne
insl
add
fwait
xor
fistpl
xcrypt-cfb
cmpsl
sub
loope
mov
add
ret
mov
lahf
push
sbb
jne
int
pop
nop
icebp
jbe
sbb
aas
cmp
subb
insl
test
xorb
xor
adcl
mov
rcr
pop
insl
add
imul
iret
mov
lcall
fucomip
lock
mov
add
push
mov
dec
xchg
add
cwtl
ljmp
sub
jmp
dec
and
and
iret
add
inc
or
ret
hlt
inc
cwtl
and
nop
add
fwait
pushf
adc
pop
inc
in
adc
mov
or
xorb
loop
mov
dec
add
inc
in
jno
repnz
ficoms
loopne
mov
and
sbbb
ja
mov
loopne
and
add
sti
int3
fs
push
pop
sbb
mov
les
add
fildl
add
push
gs
dec
cmp
add
add
out
adc
cmp
add
adc
jbe
nop
fiadds
xor
lret
test
outsb
cmp
aam
aaa
push
lcall
movsb
sbb
or
add
lods
fs
dec
sbb
out
and
mov
les
jmp
jmp
movsb
mov
add
lret
ss
xchg
push
mov
sahf
pop
cmp
pop
fnstsw
pop
or
push
test
mov
mov
mov
add
insl
hlt
mov
xlat
xchg
add
out
rolb
test
fs
sbb
push
movsl
jmp
pop
and
icebp
add
arpl
inc
cmp
ja
push
cs
pop
shlb
and
and
aas
std
adc
push
adc
ss
dec
cltd
sub
mov
cmpsl
leave
les
sub
push
inc
lock
and
clc
push
cwtl
jns
xor
jmp
push
add
daa
loope
notl
cmp
call
jl
adc
cmpsl
mov
sub
leave
imul
lahf
add
clc
loop
jg
add
jnp
add
adc
add
pop
pop
cli
mov
mov
jne
push
adc
push
pop
mov
subb
ret
xchg
push
adcb
mul
add
inc
pop
mov
push
inc
notb
add
lret
xchg
dec
fsubs
dec
jns
xchg
into
jl
enter
cmp
mov
cmp
pop
sti
aam
mov
inc
jo
insb
imul
and
pop
cmp
pushf
push
out
adcb
repnz
and
repnz
add
jl
mov
loopne
hlt
mov
jge
xchg
pop
aad
pop
add
jno
xchg
add
pop
sbb
test
lods
cltd
pop
cli
ja
add
xchg
or
mov
xor
lahf
repnz
insl
pop
adc
ffreep
pushf
je
in
imul
add
arpl
cmpsl
dec
adc
sub
mov
add
jmp
cmp
scas
inc
add
push
in
pop
adc
jle
sub
xor
cmpsl
sub
inc
pop
cmp
je
and
addr16
bound
add
sub
push
and
mov
adc
add
outsb
push
gs
es
push
bound
jnp
jge
mov
and
scas
clc
xchg
add
push
mov
add
mov
lds
add
sub
add
out
dec
adc
and
fisubrs
andb
test
pop
sub
test
daa
jb
outsb
mov
adc
jno
ja
jae
jbe
jne
sbbl
adc
imul
sub
mov
sub
cs
adc
and
mov
jb
add
dec
pop
add
add
les
and
addl
dec
and
add
mov
psubusb
popf
popa
sub
fld
push
push
in
daa
inc
push
push
push
es
mov
xchg
das
insl
pop
sub
dec
adc
idivl
ja
mov
movsb
lahf
add
inc
mov
add
dec
cs
iret
cli
mov
or
inc
cmpsb
sbbl
inc
add
push
cmpw
add
pop
jg
add
inc
andl
add
testb
mov
pop
pop
add
push
inc
sub
femms
nop
mov
mov
cmc
add
and
push
cwtl
mov
jmp
enter
add
adc
mov
outsb
push
add
push
inc
aad
dec
push
roll
shl
enter
add
dec
lods
movsb
add
mov
bound
add
inc
leave
orb
in
push
adc
xor
add
jns
dec
aad
sbb
cld
and
add
inc
andb
adc
or
cli
inc
push
insb
cmpsb
jmp
mov
divl
pop
mov
inc
adcb
repnz
add
push
movsb
hlt
test
and
mov
loopne
or
add
xchg
rep
push
add
and
cmp
or
rcrl
jmp
mov
adc
add
mov
jns
add
and
cmp
add
xor
fcmovbe
jno
push
xor
sub
test
sbb
xor
and
push
gs
sub
xor
aaa
pusha
call
inc
add
daa
je
and
fisubl
sbb
pop
push
std
int3
ret
and
adcl
sahf
pop
test
jnp
add
lea
push
lock
call
add
cmc
stc
sub
push
insb
jg
add
dec
xchg
or
sbb
adc
add
jo
mov
inc
add
add
jl
and
push
mov
inc
add
cmp
adc
and
dec
or
and
sub
call
add
shr
ret
mov
sbb
sbb
popl
add
mov
ret
inc
or
insl
jbe
push
flds
dec
inc
xchg
and
and
loope
jg
mov
xchg
insl
mov
add
jmp
or
ja
fsubrs
in
sub
add
inc
xor
cmp
mov
in
aad
scas
mov
imul
out
pusha
adc
add
jmp
mov
push
add
jg
mov
pop
out
xlat
xor
adc
ret
push
in
jmp
add
out
add
inc
cmp
sbb
scas
mov
sbb
sub
cld
jne
fmulp
test
add
sub
xor
jmp
das
lods
lret
or
les
aas
insb
mov
add
xchg
push
xchg
xor
add
shlb
pop
pop
mov
sbb
mov
mov
aaa
stc
inc
add
subb
xor
pop
jb
lahf
pop
dec
add
adc
mov
or
xchg
dec
add
lea
ljmp
imul
pop
xchg
add
hlt
insb
sub
call
add
std
clc
loopne
jge
in
add
call
cmp
mov
push
add
add
and
and
and
mov
sub
adc
dec
sub
mov
xor
ja
ljmp
adc
popf
aam
rolb
cmc
add
dec
mov
pop
mov
add
lds
dec
es
lahf
pop
pop
mov
push
dec
push
ljmp
mov
or
add
lret
pop
enter
add
bound
fs
jb
add
and
lods
adc
aas
imul
sub
cmpsl
sbb
xchg
jecxz
insb
sti
push
ss
lret
adc
cmp
lret
aas
daa
cld
test
stos
mov
sub
jmp
aaa
cmp
ljmp
jne
orps
push
loope
pop
dec
out
in
lcall
inc
add
in
clc
shl
add
js
jp
add
add
ja
mov
adc
and
mov
cwtl
scas
and
adc
lds
mov
add
xchg
rcrl
in
in
fcoml
fwait
mov
clc
sbb
sarl
or
jnp
add
add
dec
ljmp
xor
lret
pop
pop
in
aad
rorb
out
loope
std
push
pop
mov
add
fdivrs
mov
sbb
add
mov
xor
pop
add
and
lock
add
sbb
addl
xor
mov
pop
pop
xor
lock
test
mov
mov
add
lret
repnz
and
and
adcl
pushf
es
leave
and
push
clc
mov
aad
sbb
add
add
lahf
and
sbb
cmpl
jmp
loopne
mov
or
push
jae
mov
add
or
push
add
sbb
mov
repnz
ljmp
movsb
div
sbb
fisubs
dec
and
punpckhdq
add
bound
cmp
sub
cltd
imul
inc
sub
sub
add
mov
cmpsl
cmp
cmp
lods
pop
imul
pop
scas
nop
add
in
push
mov
aas
jnp
andb
ds
repz
mov
sub
in
loope
mov
push
ds
lret
adc
frstor
jo
cmp
je
fcmovnb
clc
jnp
mov
dec
pop
and
adc
scas
or
aad
cli
test
mov
stc
add
andl
scas
mov
shl
inc
cmpl
cld
pop
add
or
mov
xor
add
aas
stos
add
cmpsb
pop
and
shrb
or
mov
push
add
gs
loopne
pushf
push
add
loopne,pt
movb
loopne
cmc
jge
in
outsl
add
fidivrl
in
mov
pop
pop
ljmp
ja
inc
cmpsb
movsb
mov
or
xchg
add
test
cmp
subb
ret
mov
inc
add
or
movsb
mov
inc
stc
pop
test
sbb
mov
or
pop
mov
repz
inc
lods
lock
inc
add
or
out
xor
shr
in
das
decb
add
mov
inc
cmp
or
jne
mov
mov
push
dec
sti
call
jle
out
add
add
xor
cmp
negb
hlt
push
jns
cmp
add
push
mull
xchg
pop
add
sub
add
add
dec
jne
add
pop
pushl
push
outsb
cli
sbb
inc
mov
inc
mov
add
inc
or
add
mov
daa
jecxz
inc
inc
sbb
pop
enter
and
pop
psllq
sbb
sub
rcr
das
sub
in
add
jp
pop
clc
test
sub
adc
mov
add
ja
push
lds
popf
adc
or
stc
xor
jecxz
inc
cs
shrb
inc
mov
push
enter
xlat
lock
inc
push
cmp
clc
cmp
xchg
rcrl
inc
orb
cmpsb
pop
mov
xchg
or
out
mov
add
pusha
push
mov
lahf
jne
xorb
sub
dec
pop
dec
decb
enter
icebp
mov
hlt
inc
adc
add
and
andl
lods
cwtl
testb
sbb
and
push
adc
push
inc
es
mov
pop
clc
rcrb
jmp
push
ja
mov
fcoml
add
shlb
push
js
hlt
push
andl
ret
pop
adc
lds
inc
ljmp
add
jl
push
flds
mov
lods
loope
fmuls
add
les
adc
call
and
fcoml
jge
add
push
ljmp
and
cmp
xor
rolb
add
cmp
ja
outsb
and
mov
decb
enter
jae
jns
push
sub
dec
add
xchg
inc
lcall
je
movsl
or
leave
adc
mov
movl
sbb
adcb
lods
jo
mov
push
add
pop
adc
or
fldenv
subps
add
arpl
dec
jo
loop
out
add
pop
pop
call
mov
adc
mov
add
orb
push
sub
mov
int
jecxz
fistpl
sub
push
push
xor
add
hlt
popf
lds
pop
add
sub
jmp
pop
pop
sbb
fnstcw
adc
ja
pop
aas
in
add
jae
add
shrl
add
lods
stos
mov
jge
add
and
add
jp
push
clc
push
pushf
add
dec
jmp
popf
rorl
add
jne
dec
push
rclb
repz
fisubrs
adc
lret
add
sub
pop
add
adc
ds
add
lods
mov
adc
and
add
or
xchg
xor
jns
sub
add
and
dec
es
pop
rcrl
mov
stos
add
dec
jmp
add
repz
add
push
sub
xchg
or
add
test
xchg
test
xor
pop
das
out
jl
inc
dec
dec
loopne
pop
mov
scas
mov
adc
dec
clc
pop
push
daa
add
cs
nop
xchg
add
inc
cmp
add
xchg
ret
dec
daa
repnz
sbb
scas
popf
adc
test
cmovne
cmp
push
mov
rolb
and
dec
push
mov
dec
enter
into
adc
rclb
addb
sbb
add
pop
sub
pop
cmp
pop
cmp
inc
loope
add
outsb
mov
xchg
push
int
add
adc
mov
in
fs
mov
lcall
loop
lods
add
add
pop
ljmp
mov
enter
negl
push
add
inc
sbbb
js
lcall
push
and
adc
add
adc
leave
push
fbstp
ret
repz
loopne
push
clc
add
das
add
add
adc
js
sbb
inc
and
and
add
add
cmp
scas
addb
adc
inc
push
loopne
and
clc
sbb
pop
mov
adc
and
add
pop
les
sub
jge
and
xor
xchg
lock
popf
in
jno
ds
pop
add
addr16
mov
mov
ja
add
je
xor
add
jle
sbb
and
mov
enter
cmp
sub
and
add
out
movsb
add
mov
mov
or
cmp
mov
push
xchg
add
mov
add
push
xchg
insb
shlb
incl
xor
push
and
call
push
pop
inc
stos
pop
dec
xchg
xchg
cmpsb
leave
xchg
add
icebp
sbbb
loope
int3
cwtl
sbb
xor
cmp
subb
cld
add
dec
es
scas
and
add
mov
or
push
and
testl
mov
xor
add
bound
stos
lea
dec
inc
lret
or
imul
dec
jl
add
js
sbbb
inc
add
out
lds
cmp
add
jle
out
jmp
fidivrl
add
xchg
and
add
call
sub
push
mov
mov
ret
cmpsb
pop
add
call
notl
adc
rolb
dec
adc
lahf
test
dec
lahf
pop
xor
jge
adc
mov
aam
addl
xchg
or
jns
and
jne
add
test
aad
les
cmp
hlt
pop
inc
inc
push
pop
push
rcll
cmp
rorb
test
fcmovnu
loop
xor
inc
mov
adc
or
or
or
jne
mov
dec
cmp
adcb
hlt
pusha
lret
jg
je
add
mov
sub
add
loope
test
and
push
fadd
push
rolb
sub
xchg
pop
xor
test
push
xorb
fdivs
push
inc
out
invd
ret
and
adc
push
mov
movsl
mov
cmpsl
jnp
cmpsb
add
sarb
add
hlt
rorl
push
ja
mov
int3
add
or
dec
jmp
lret
sbb
sbb
add
stos
add
loopne
aam
aaa
je
pusha
push
in
fmuls
adc
dec
in
sub
and
sbb
xchg
mov
div
add
adc
mov
inc
arpl
scas
cmp
pop
inc
shlb
push
hlt
xor
shlb
dec
add
mov
sub
pop
sbb
and
lods
lea
add
or
in
add
ljmp
cs
push
pop
mov
and
add
fbld
add
sub
push
lcall
sub
push
test
mov
pop
leave
cmp
pop
cmp
dec
je
or
or
ds
jae
cmp
pop
in
sbb
pop
add
and
push
adc
test
lock
hlt
push
fidivs
aas
or
adc
outsl
lret
push
imul
cwtl
fsubr
cmpb
add
je
mov
xor
pop
clc
pop
cs
adc
loopne
add
mov
inc
mov
subb
adcb
sbb
call
push
js
ljmp
xchg
cli
push
cmp
pop
subb
lret
add
dec
pop
mov
xchg
push
or
mov
add
lret
movsl
push
out
test
mov
lock
add
xrelease
push
mov
dec
sub
pop
add
xor
filds
and
adc
js
pop
add
repnz
in
or
divb
leave
add
lret
ret
pop
jns
add
imul
jne
sub
add
xlat
lea
mov
in
mov
rolb
ljmp
aad
nop
add
call
repz
aas
jne
add
pop
dec
mov
sub
rol
add
jmp
or
inc
jge
loopne
out
dec
add
rorb
popa
add
mov
inc
rolb
fcoml
loopne
movzww
mov
inc
mov
pop
xor
les
mov
jmp
jb
adc
scas
xor
into
jne
cmp
sub
pop
incl
sub
add
fucomi
outsl
add
adc
adc
callw
add
fdivrs
inc
adc
je
add
pop
popa
push
add
ficoml
out
lds
stos
repz
sub
inc
mov
add
cwtl
xor
inc
sbb
cli
cmp
cmp
push
or
add
or
leave
xchg
call
dec
and
push
or
cli
xchg
xor
inc
pop
pusha
scas
mov
mov
cltd
inc
cmp
add
xor
jg
rclb
dec
sbb
pop
add
sti
or
cmpl
setb
lcall
rcll
cs
dec
repnz
pop
add
in
cmp
or
clc
repz
cld
pop
ficomps
sahf
jge
xor
push
roll
inc
sub
add
add
mov
and
push
subb
jl
in
add
out
and
add
ds
xor
mov
dec
popf
jl
hlt
cmp
adcb
aad
adc
call
add
add
jmp
hlt
sub
jo
xchg
inc
dec
or
lcall
test
xchg
dec
fdivrl
or
adc
mov
jo
add
loope
cmp
fdivrl
add
xor
or
lahf
xchg
jno
loopne
hlt
cmp
xchg
xchg
dec
jp
push
add
cmc
ljmp
in
jecxz
mov
add
push
dec
movsl
cli
push
inc
hlt
call
push
add
jno
test
mov
inc
push
jo
shl
pop
icebp
sub
repnz
push
inc
cmp
inc
xchg
dec
inc
cli
xor
push
add
and
outsl
in
repnz
scas
out
add
testl
es
push
cli
pop
lret
inc
xor
fistl
ljmp
adc
mov
int3
and
dec
push
imul
pop
ret
add
cmpsl
shll
sti
lahf
pop
xchg
pop
push
mov
aam
xor
sub
adc
fsubs
faddl
mov
pusha
and
mov
ret
cmp
cmpsl
adc
leave
mov
dec
je
jmp
negl
pop
and
sbb
addl
pushf
add
hlt
push
std
jge
add
ret
movb
xchg
add
jbe
cmp
dec
incb
dec
pop
sub
daa
les
sub
inc
icebp
mov
hlt
xchg
jbe
pop
dec
cmp
lock
xor
push
inc
rcrb
push
or
xor
int3
adc
dec
sbb
add
xor
xchg
jbe
pop
fbld
mov
adc
add
and
add
inc
pop
push
mov
jo
shll
je
push
and
cmp
clc
enter
jnp
sbb
je
aas
pusha
dec
inc
mov
add
out
addl
pop
bound
cmp
adc
sbb
mov
enter
sub
and
jnp
add
sahf
nop
pushf
pop
xchg
add
lret
icebp
jne
or
stc
push
or
add
add
je
rcrb
iret
push
hlt
aas
rorb
add
dec
in
popf
mov
cmp
repz
push
loope
adc
mov
les
pushw
test
loop
aam
loope
or
add
cld
xchg
cli
push
lcall
mov
pop
loopne
mov
mov
mov
dec
add
scas
cmp
es
jns
add
add
out
add
arpl
push
scas
insl
leave
push
xor
les
add
mov
ret
lods
add
mov
xchg
jmp
xchg
aam
push
int
add
add
hlt
and
movsl
in
lods
js
out
mov
pop
mov
add
loop
out
clc
lods
sub
int3
js
dec
mov
or
add
dec
adc
in
jnp
mov
sub
test
cs
sub
mov
add
sub
dec
loope
or
or
add
shlb
adc
nop
xchg
jecxz
add
push
mov
add
out
inc
xchg
sub
movsl
lret
xor
bts
add
out
and
add
dec
pop
lret
push
test
jmp
xchg
sub
push
add
mov
shr
jl
aas
cli
faddl
loopne
js
adc
rcl
cs
mov
add
mov
sbb
add
dec
orb
add
lock
in
in
lret
add
cld
dec
inc
pusha
push
push
test
rorb
test
or
into
pop
popa
pop
mov
inc
jp
test
loop
mov
rorb
pop
lcall
pop
sarb
sbb
xchg
rolb
cmp
mov
add
or
add
or
mov
add
into
shll
lods
outsl
mov
add
rorb
jge
mov
enter
add
pop
mov
cmp
mov
fdivrs
in
push
mov
nop
incb
mov
mov
add
pushf
in
mov
add
mov
sub
and
js
adc
out
aad
push
add
add
icebp
inc
mov
outsb
dec
jle
popf
fidivs
add
cmpl
add
jmp
push
xor
sbb
sub
dec
cmp
aam
cwtl
sbb
mov
daa
sub
add
cmp
mov
jmp
inc
add
sbb
push
jle
cld
push
xchg
add
sub
add
inc
xchg
inc
shlb
or
and
andl
add
and
mov
pop
push
les
sub
or
jbe
add
sbb
cltd
add
fmuls
hlt
mov
jle
mov
dec
out
ljmp
push
call
add
inc
and
mov
hlt
add
jmp
cmp
test
cmp
pop
xor
inc
sahf
pusha
xor
inc
clc
fiadds
mov
test
and
les
add
arpl
dec
mov
lret
cmp
clc
popf
ljmp
push
sub
mov
je
pop
mov
rcr
mov
xchg
add
test
add
or
push
sub
je
adc
pop
jecxz
push
ss
pop
cmpsb
loopne
sub
xor
sub
inc
call
dec
xor
mov
mov
mov
add
roll
loopne
xorl
cmc
xchg
ss
std
jo
testl
jne
dec
into
loopne
lds
xchg
mov
jns
add
push
push
mov
sub
addb
and
and
xchg
test
add
aam
dec
xchg
hlt
lock
adc
aaa
push
nop
cmpsb
pop
mov
sub
jmp
mov
cmp
jb
or
aas
jae
or
fsubr
or
jne
std
jo
ds
mov
and
sub
inc
sub
cs
and
add
push
cmpsb
out
lcall
pop
mov
jmp
hlt
mov
hlt
add
lods
jle
add
xchg
fsubrl
aam
sarb
dec
test
daa
add
and
cmpsb
jo
jge
mov
push
mov
cmp
and
mov
add
test
popa
add
and
jno
dec
pop
and
js
add
je
xchg
add
decb
sub
inc
or
lea
add
cld
in
jno
loopne
cs
test
pop
popf
cmp
std
xlat
adc
sbb
add
je
daa
nop
dec
add
in
enter
or
xlat
in
cmp
jo
add
dec
clc
and
call
mov
and
pop
movsl
and
add
mov
js
out
cmp
lea
xor
jnp
sbb
in
in
int3
dec
add
mov
adc
popf
fsubrl
pusha
pop
jp
nop
xchg
and
pusha
lock
add
leave
dec
add
mov
jmp
xorb
jmp
mull
nop
xor
add
cmpb
pop
roll
pop
not
and
mov
sub
xlat
add
and
add
inc
scas
xchg
fildl
lret
je
int3
call
push
push
ljmp
pop
addb
popf
jns
lods
jb
mov
stos
pushf
pop
add
mov
add
mov
pop
add
adc
cmp
cs
add
lock
mov
stc
dec
pop
cli
cmp
inc
add
pop
movsb
scas
sub
mov
enter
mov
dec
rolb
add
mov
sbb
push
movsl
inc
cld
mov
pop
inc
jecxz
sub
add
dec
aad
popa
cwtl
call
cmp
scas
jne
pop
xlat
cwtl
mov
mov
xor
jl
repz
add
in
hlt
or
dec
cmp
sbb
push
sub
and
jl
add
mov
xorb
mov
dec
scas
cmp
adc
loop
xor
push
fsts
or
add
xor
mov
jae
push
jno
sub
add
lods
dec
add
std
mov
hlt
cmp
addb
and
add
mov
jl
and
add
pushf
lcall
mov
lds
cs
push
adc
push
sbb
loopne
jne
pop
sub
lret
mov
and
mov
mov
jl
push
scas
inc
xchg
loopne
lods
cmc
and
dec
movb
add
jmp
or
and
push
adc
sub
jns
adc
or
jae
movb
dec
repz
mov
or
mov
push
mov
sub
mov
std
pop
mull
xor
push
aad
mov
xchg
sub
mov
jle
std
dec
add
adc
xchg
mov
push
in
loopne
fsubl
pop
roll
push
repz
xchg
sti
mov
or
sbb
add
and
pop
add
aad
or
inc
add
mov
add
movsb
loop
xchg
sbb
xchg
nop
outsb
orl
push
clc
pop
outsl
leave
pop
rorb
xchg
mov
inc
jbe
shll
packsswb
pop
and
xchg
into
in
dec
ja
out
sbb
mov
cmp
sbb
or
add
lds
jbe
mov
lret
movsb
fsts
cmp
movl
mov
testl
arpl
adc
shl
adc
adcb
scas
daa
sub
mov
add
xor
shrb
pop
ds
jne
jo
sbb
hlt
add
sbb
adc
add
dec
andb
pop
push
out
adc
sahf
aam
adc
daa
pop
cmp
inc
add
bound
sbb
and
dec
add
xchg
add
mov
cmpsl
js
xchg
pop
add
leave
pop
mov
mov
or
push
xchg
add
xor
lock
lahf
xorb
pushf
push
add
push
jno
adc
and
adc
out
into
inc
adc
mov
jmp
adc
push
adcl
push
dec
xor
and
push
jmp
stos
xor
mov
movsb
pop
mov
faddl
and
mov
add
pop
push
jmp
add
xlat
push
cmpb
jne
add
popa
inc
adc
je
push
add
add
incl
and
jae
imul
icebp
add
inc
mov
add
inc
or
push
cltd
je
and
in
sub
jo
lock
dec
mov
or
sbb
push
icebp
xor
in
dec
fisttps
aas
daa
add
pop
jb
test
adc
adc
mov
mov
clc
in
add
mov
add
xchg
jecxz
mov
push
call
pop
push
test
shlb
fisubrs
lret
out
aam
sti
icebp
cld
jp
mov
sub
dec
cmp
es
cmp
add
adc
inc
punpckhdq
cmp
xor
jne
push
call
push
sub
test
sti
ja
lock
aam
rcrb
cltd
and
data16
adc
int3
int
add
mov
xchg
pop
mov
mov
dec
push
xchg
mov
add
cmc
adc
aad
add
push
cmpsb
loop
push
fadds
xor
loopne
push
imul
xchg
mov
movsb
cld
inc
push
les
insb
push
mov
test
add
add
jne
ret
push
rcrl
inc
and
iret
fsubrl
mov
js
sbb
test
jne
pop
push
lock
fdiv
mov
test
and
dec
scas
clc
add
jl
dec
loopne
sbb
push
mov
cmp
incl
or
push
in
popa
add
sbb
sub
sar
cmpsl
push
seto
mov
dec
mov
add
popf
lcall
lods
cmp
lret
pop
sub
cmp
hlt
shrb
sbbb
data16
sub
icebp
popf
ds
gs
xchg
cmp
adc
push
dec
inc
push
dec
add
sarl
daa
add
push
adc
pop
push
sub
sbb
inc
gs
aas
mov
add
in
jmp
push
imulb
incb
js
aas
roll
bnd
sbb
into
and
xor
or
out
xchg
pop
ja
jge
add
daa
icebp
sub
hlt
pushf
jmp
mov
xchg
xchg
add
xchg
cli
or
out
js
cli
add
mov
cmp
cmp
mov
push
loop
xchg
sub
icebp
ljmp
je
and
out
cmp
mov
cmp
adc
lret
add
das
xor
push
dec
icebp
insb
cmp
sub
aas
push
mov
xorb
xlat
inc
sbb
scas
pushf
adc
ljmp
popf
leave
pop
xchg
out
lea
ret
add
push
clc
mov
es
fsubl
add
dec
insl
dec
out
mov
mov
xchg
ret
push
push
sar
pop
add
jmp
jo
ja
mov
xchg
sub
mov
push
add
or
into
clc
push
add
stos
pop
std
ja
cmp
push
adc
sbb
sub
sbb
xor
dec
ret
cmp
in
add
movsl
or
ret
sub
fimull
jno
push
push
into
add
fisubrs
pop
in
add
addb
mov
xchg
or
add
pop
dec
jmp
sub
in
imul
sub
sbb
mov
mov
dec
out
sub
xor
push
mov
shlb
psadbw
xor
das
je
lret
or
pop
repnz
cli
cmp
pop
in
dec
subb
ret
pop
sahf
lock
push
mov
jl
add
or
cmp
hlt
mov
inc
add
outsb
fs
aam
movsbl
jle
leave
and
xor
adc
ficomps
sbb
push
cmp
dec
mov
lcall
test
push
push
mov
loop
outsb
pop
mov
sarb
js
je
jle
fldl
flds
pop
add
pop
pop
dec
adc
jnp
cmpsb
lock
call
xlat
xchg
mov
outsl
push
loop
add
cmp
jg
push
les
jmp
sub
cmp
outsl
je
enter
aam
test
add
paddd
ret
mov
test
mov
cmp
inc
mov
cmp
repnz
call
clc
or
std
add
xchg
fisttps
pop
inc
outsl
jne
int3
ds
add
scas
mov
add
dec
sti
mov
sbb
cs
and
jbe
scas
jge
dec
dec
xchg
into
popf
push
push
ror
push
lds
xor
add
adc
or
push
pop
add
mov
mov
cwtl
lock
inc
cmp
adc
add
mov
ret
add
xchg
cmp
mov
adc
sub
push
imul
or
mov
xchg
enter
mov
fwait
cli
jp
xor
cld
sub
xchg
add
das
adc
mov
add
jnp
in
into
icebp
cmpsl
cmp
cmovnp
jmp
add
push
adc
sub
ds
push
adc
xchg
inc
xor
or
or
nop
sbb
cmp
add
out
add
jne
add
and
xchg
cltd
pop
or
push
add
scas
test
in
push
lcall
adc
icebp
xor
add
test
cmp
cmp
bound
loopne
loop
mov
push
push
pusha
pop
sarb
jle
or
ret
lea
jl
push
push
repnz
jmp
dec
inc
pusha
stos
addl
jnp
and
xor
cmp
jne
adcl
subl
dec
pop
out
pop
imul
push
mov
enter
leave
jge
or
push
adcb
inc
dec
push
add
pusha
test
xchg
fs
arpl
in
repz
hlt
jmp
imul
add
dec
pop
or
sub
jge
lods
iret
inc
cwtl
ret
xor
lret
fstp
add
add
inc
jae
loopne
iret
or
sub
sub
add
xchg
mov
inc
xor
add
addl
add
aaa
clc
pop
int3
movsb
add
mov
dec
sub
push
mov
fadds
jmp
enter
jl
and
push
sbb
incb
jb
xchg
mov
xor
add
mov
lret
mov
outsb
jecxz
test
test
or
inc
inc
pop
cwtl
cmp
mov
orl
inc
loopne
add
push
add
scas
fildl
sti
and
adc
rolb
add
jb
dec
mov
dec
inc
xchg
add
test
es
fstps
pop
jp
push
adc
sbbb
mov
in
jp
fs
xlat
stos
lcall
jg
cmc
mov
xchg
jns
add
pushl
test
jae
add
mov
jne
add
jne
nop
loope
scas
fildl
mov
daa
mov
sbb
and
add
mov
out
cmp
xchg
adc
mov
push
pop
push
jo
fbstp
sub
fdivrl
push
int3
and
stc
nop
shr
ret
mov
in
jnp
push
or
xchg
add
dec
inc
inc
scas
sub
push
inc
push
add
jns
sbb
adc
ret
lahf
cmp
testl
sub
rolb
jg
fisubs
sbb
push
cld
cmp
or
add
add
cmp
mov
js
push
inc
adc
mov
adc
mov
jmp
mov
movsb
cmp
and
push
jb
add
push
mov
dec
and
call
stos
adc
fcmovnbe
imul
push
scas
popa
mov
mov
mov
adc
stc
push
mov
insl
and
inc
push
add
sarb
add
cld
mov
jae
jo
out
xor
push
mov
cld
dec
add
adc
pop
jnp
jle
jmp
adcl
cmp
mov
pop
adc
adc
sub
inc
add
cltd
cltd
adc
jns
sub
and
aaa
mov
push
mov
or
in
push
imul
inc
scas
and
pushf
add
inc
dec
mov
push
add
and
cmpsb
xor
popa
inc
xchg
jo
divb
jge
or
xchg
pop
add
iret
mov
cmp
add
add
aas
inc
addl
and
mov
add
push
xor
add
push
cwtl
dec
lea
ja
orb
je
ds
inc
add
dec
jne
movsb
xor
adc
aaa
leave
test
or
xchg
js
pop
xor
popl
adc
mov
mov
jg
jg
sti
cld
or
pop
pop
in
rclb
in
mov
jmp
sti
and
cmp
dec
add
adc
mov
lret
inc
stc
clc
inc
push
dec
sub
popf
dec
les
sahf
call
dec
std
add
jle
or
push
xchg
or
insl
inc
out
addb
das
fcmovb
movsl
ror
rcrb
clc
imul
inc
inc
push
in
jb
add
daa
sub
pop
mov
jp
std
leave
xor
pop
mov
ret
inc
dec
inc
fstl
push
pop
sbb
adc
movsl
cld
lea
cmp
mov
mov
ljmp
add
pop
dec
cmp
sbb
minps
insl
aas
rcrb
call
cli
pushf
mov
adc
pop
xchg
leave
loopne
jae,pt
add
pop
cmp
jb
clc
scas
add
sbb
push
ds
sbbb
cmp
inc
sti
pop
inc
adc
dec
push
sarb
jbe
gs
test
dec
into
repz
adc
js
add
jae
jo
ja
push
sarl
fnstcw
and
enter
pop
cmp
inc
and
add
enter
inc
jge
add
and
pop
je
add
pop
or
add
push
or
adc
jp
inc
mov
mov
stc
add
and
sub
add
testb
push
fsubrs
sbb
nop
add
push
in
mov
dec
add
ja
orb
add
mul
outsb
daa
pop
cs
out
add
push
rcr
sub
mov
mov
push
jae
sub
add
jmp
sbb
test
cmpsl
sbb
fs
and
inc
aas
adc
shufps
pop
add
dec
add
pushf
push
mov
lock
add
enter
or
or
mov
pop
xor
xorl
and
push
pusha
jae
cmp
and
sub
pop
sbbl
cwtl
add
adc
cmp
call
mov
mov
jge
jp
pop
xor
adc
mov
mov
cmp
inc
add
andb
pop
add
add
adc
sbb
or
xchg
sbb
andl
idiv
shlb
add
mov
mov
add
dec
lea
mov
add
cmp
movsb
loopne
pop
inc
add
mov
add
mov
les
and
jns
pop
xor
xchg
add
movsl
dec
or
push
cmp
stos
xor
ljmp
test
add
enter
cwtl
inc
je
pop
add
loop
test
inc
cli
call
add
xor
fsubrl
cltd
or
fisubl
xor
add
shll
push
das
mov
nop
loopne
or
cltd
pushf
pop
insb
mov
jl
pop
or
pusha
hlt
inc
pop
les
cmp
jo
pushf
stc
cld
inc
test
js
push
gs
and
add
cmp
or
adc
and
sbb
sub
inc
movsl
add
les
add
and
lock
add
sub
xchg
add
loope
rcrb
cli
jo
movsl
add
xorb
adc
inc
adc
test
pop
sbb
or
or
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
aad
sbb
cmp
cmp
inc
inc
inc
inc
push
add
add
or
out
lds
pop
push
or
add
aam
push
daa
stc
rcrl
sbb
lods
push
mov
loop
xchg
add
stos
add
jl
movsb
insb
add
in
adc
pop
or
xchg
jo
pop
es
je
jno
jl
mov
movsb
xchg
pop
lods
and
out
aam
fsubr
in
in
out
hlt
loopne
add
pop
or
mov
sbb
adc
push
add
cmp
mov
pop
clc
divl
cmp
jnp
add
add
fnstsw
add
and
mov
dec
or
loopne
popa
adc
fs
bound
pusha
sbb
inc
arpl
and
mov
in
pop
loop
gs
pop
or
aad
xchg
sub
push
lds
scas
add
push
or
pop
add
in
add
inc
dec
push
dec
adc
addr16
insl
pop
outsb
scas
add
add
add
and
imul
fcoml
mov
cmpsl
add
push
je
push
xor
inc
cwtl
mov
incl
int3
or
adc
enter
xchg
xor
xor
cmp
das
inc
pop
imul
lock
mov
or
inc
pop
inc
cmp
and
je
mov
movsb
cmpb
adcl
add
xchg
jl
xchg
rcrb
lea
fwait
incb
jp
imul
push
scas
mov
cmp
adcb
sbb
xchg
push
divl
test
add
rorb
add
or
add
push
int
add
mov
pusha
insb
and
daa
pop
push
jle
add
inc
add
test
cltd
pop
out
dec
invd
jo
jae
mov
add
movsl
and
sub
rolb
shlb
xor
lock
add
jne
push
add
addb
add
xchg
cld
xor
adc
nop
pop
mov
je
inc
add
bswap
and
inc
mov
jecxz
mov
xor
cwtl
push
add
enter
add
adc
pop
add
or
or
push
loop
add
mov
xchg
push
cli
pop
leave
fsubl
rorb
dec
pop
adc
and
and
cwtl
push
sbb
pop
sbb
fcoms
mov
jae
pop
and
int3
adc
xor
add
enter
dec
sub
fldcw
outsb
xchg
jl
and
pop
and
faddl
and
xor
pusha
pop
cmpsb
inc
xor
cmp
sarl
movsb
enter
fdivrs
cs
pop
mov
add
cltd
call
sbb
sahf
fxch
enter
add
shrb
adc
inc
jbe
pop
push
cmp
test
insb
ja
in
add
and
loopne
dec
loope
xor
jns
call
sub
pop
fmull
and
and
xchg
push
lea
sub
cmp
and
int3
pusha
push
cmp
shrb
or
add
inc
int3
sbb
mov
fsts
sbb
mov
jne
and
call
inc
aad
jecxz
or
mov
mov
addr16
dec
lret
pusha
xchg
pushf
je
add
push
sub
sub
xchg
or
cld
movsb
les
aaa
in
out
jnp
push
adc
dec
icebp
je
sbbb
adc
add
stc
dec
in
push
xchg
sbb
or
or
add
pusha
and
idivb
sub
xor
cmp
or
or
add
mov
pop
sbbb
pusha
sbb
popa
pushf
mov
les
lret
adc
dec
adc
je
mov
jo
mov
lods
adc
popa
and
and
or
ror
js
pop
add
cmc
add
mov
xchg
xchg
and
adc
enter
repnz
and
jl
inc
xchg
ds
popl
mov
or
loope
cwtl
add
sub
and
inc
mov
enter
ficompl
push
and
clc
adc
adc
pop
sbb
mov
pop
cltd
xor
mov
mov
aam
loop
repnz
inc
andl
push
out
add
nop
mov
std
fdivrp
lock
jmp
dec
sbbl
xchg
add
jg
jg
add
sub
xchg
mov
pusha
ret
sub
pusha
jge
push
nop
adc
lods
cli
ret
mov
sub
adc
add
sbb
test
and
inc
fs
and
int3
and
cmpb
sub
push
cmp
dec
inc
pop
dec
jp
pop
movsb
and
dec
les
xchg
aam
loop
lock
xor
cmp
pop
xchg
outsb
add
addb
mov
repnz
adc
lcall
inc
lods
push
add
cmpsb
adc
test
or
xlat
lock
orl
dec
xchg
pusha
outsb
push
inc
orb
push
add
in
ds
xor
jns
pusha
jle
lcall
xor
gs
outsb
add
insb
xor
cs
aam
xor
scas
inc
enter
push
pusha
cli
sbb
popa
fs
test
insl
inc
inc
add
clc
inc
jb
imul
jle
jmp
adc
outsb
xor
pop
pop
push
loopne
add
jle
xchg
sbb
and
jp
xor
in
jne
incb
xor
mov
outsl
arpl
call
ficompl
add
cmpsb
sub
in
jns
push
push
xorb
adcl
insb
sbb
xor
add
lock
je
mov
dec
or
add
jo
std
xchg
push
je
imul
popa
lods
int3
jmp
mov
and
push
xchg
add
or
jl
add
jb
jno,pt
into
add
xor
dec
outsl
cli
add
outsb
stc
or
inc
dec
adc
inc
imul
insl
push
push
pop
push
dec
push
adc
mov
push
or
inc
push
shrl
xchg
add
and
add
sub
mov
dec
push
inc
pushf
inc
xor
add
rcrl
push
mov
outsb
aas
push
inc
cmp
inc
cltd
cmp
xor
movsb
je
adc
sbb
outsl
xchg
mov
dec
lcallw
decl
or
pop
push
sbb
adc
xor
mov
sarl
dec
mov
mov
imul
jo
inc
add
push
cmp
xchg
aam
dec
int3
add
jb
lret
lods
jns
cmp
cmpsb
cmp
out
push
outsb
or
sahf
popa
mov
js
cmpsb
adc
or
jnp
sub
cli
dec
inc
repnz
pop
push
inc
xchg
dec
push
add
add
dec
lcall
and
mov
and
add
sub
jo
or
test
sub
outsl
cwtl
ljmp
lcall
lods
lods
mov
jmp
in
jb
pop
add
and
push
push
lcall
push
inc
sbb
pop
dec
ficoml
add
loope
sub
push
adc
dec
fdivp
adc
in
add
iret
loop
add
jo
notb
push
push
out
pop
lds
ljmp
push
xor
cmp
or
inc
mov
ja
pusha
lds
shll
jae
push
aam
ret
dec
into
inc
jmp
je
cltd
add
bound
pop
xchg
adc
dec
push
div
adcb
dec
adc
int3
add
insl
repnz
xchg
and
inc
xor
add
pop
test
movsl
cmp
lea
dec
sbb
adc
add
jbe
aad
out
rolb
aas
popa
arpl
cs
push
pop
mov
and
inc
inc
out
and
clc
inc
add
jbe
imul
mov
insb
push
in
loopne
xor
aas
add
sub
mov
popf
pop
inc
enter
ds
sbb
and
push
add
out
cmpsl
adc
jg
clc
add
dec
aad
and
and
mov
add
les
pop
cmp
sub
xchg
inc
xor
push
inc
ret
inc
lret
movsb
out
add
xchg
mov
push
sub
inc
jo
nop
sub
fwait
pushf
enter
or
mov
insl
inc
cmp
aaa
xchg
aam
ljmp
push
jle
add
mov
sub
mov
push
adc
dec
cmp
ja
xchg
aaa
jbe
add
faddp
push
push
push
add
inc
stos
inc
insb
nop
les
add
sbb
add
mov
sbb
add
es
outsl
jge
sbb
or
jmp
and
jo
push
sbb
xchg
outsb
fmulp
push
or
mov
add
aad
ret
pop
shlb
push
loopne
outsb
jmp
aam
or
sub
add
addr16
inc
cmpsl
inc
sbb
out
popf
push
sbb
push
jb
jp
sbbb
lahf
mov
lahf
mov
lahf
rcrb
ljmp
xor
leave
pop
adc
sbb
and
sbb
stc
inc
popf
dec
sbb
bound
jp
sbbb
lahf
mov
lahf
mov
lahf
testb
push
add
push
js
jp
push
jl
jle
inc
mov
popf
int
adc
xor
loopne
and
sarl
aaa
sbb
pop
cmp
sahf
add
push
aad
fistps
jmp
or
sbb
cmp
in
test
jmp
scas
stc
mov
push
movsb
in
lock
pop
push
cmp
pop
add
xchg
sub
push
fidivl
fwait
lret
loope
sbb
xor
jg
lahf
flds
mov
fcompl
add
aaa
sahf
inc
add
dec
lahf
push
pop
pop
mov
xchg
shr
loopne
xchg
ds
xchg
add
leave
and
add
jmp
stc
mov
sti
andl
pop
int3
or
cmp
insl
add
mov
xchg
call
cmpsb
or
mov
in
add
sbb
push
xchg
decb
subps
and
xchg
and
lret
jle
cld
sbb
xor
sahf
xchg
mov
add
xchg
xor
daa
sbb
and
lock
mov
xchg
out
dec
mov
cmp
gs
leave
stos
add
mov
mov
add
je
jbe
js
dec
push
xorl
mov
leave
adc
xchg
aaa
mov
inc
mov
cmp
in
call
in
pmuludq
push
cmp
das
push
cmp
cmp
mov
or
sub
sbb
ret
roll
loopne
aas
cmp
test
orb
sbb
pop
out
cmp
cltd
cmpsl
mov
enter
iret
je
jbe
jbe
add
push
js
jp
jl
fistpll
sbb
xor
popf
add
sahf
pop
push
pop
lahf
and
pop
sub
xchg
hlt
aas
mov
mov
xor
inc
inc
addr16
inc
push
cmpsl
imul
sub
stos
dec
int
aas
jecxz
call
or
pop
roll
mov
cmp
add
ret
xchg
dec
add
iret
add
jns
jns
add
mov
cmp
push
push
loopne
out
std
call
sub
jbe
sbb
cmp
sub
inc
push
add
xchg
inc
add
popa
test
mov
jb
je
sbb
cmp
add
sbb
push
add
loopne
clc
and
add
dec
in
push
icebp
cwtl
lret
add
push
mov
ret
sbbl
inc
mov
fcomps
addr16
jns
cmpsl
shrb
mov
mov
in
in
jecxz
lock
lock
xor
setb
sub
ss
cmp
shrl
and
jmp
mov
stc
clc
cmc
sub
add
je
jbe
js
push
jp
jl
test
scas
scas
out
shrb
out
lock
cmc
loopne
sbb
aaa
sbb
popf
and
push
xor
nop
mov
xchg
mov
xchg
cmc
arpl
repz
jecxz
repz
repz
repz
out
cmp
lock
daa
push
inc
push
addr16
add
iret
dec
enter
bndldx
outsb
lahf
jbe
jle
xchg
aas
lds
cmc
std
into
stc
stc
fdivrp
out
out
stc
idiv
decb
cmp
cmp
iret
verw
dec
ss
ds
inc
daa
add
push
out
in
xor
bnd
jnp
cmp
hlt
add
fs
call
lock
push
fstps
jmp
jl
pop
and
lahf
xchg
lahf
pushf
lahf
movsb
lahf
lods
sahf
mov
mov
out
out
out
out
out
int3
add
cmp
or
adc
sbb
and
push
sub
xor
cld
popf
inc
adc
pop
dec
fs
insb
iret
je
jl
test
mov
xchg
iret
pushf
iret
movsb
iret
lods
iret
mov
mov
aam
fsubl
stos
mov
in
push
xchg
add
and
test
or
add
jl
test
or
mov
loopne
hlt
jmp
push
cmp
or
js
dec
mov
sub
addr16
xchg
insb
out
out
out
in
sub
xchg
jl
cwtl
dec
aas
sarb
aas
enter
sarb
lock
add
push
adc
sbb
and
sub
xor
xor
pop
cs
in
popf
insb
sahf
je
js
jl
sbbb
lahf
nop
lahf
xchg
lahf
movsb
lahf
les
aam
fcom
xor
push
in
repz
imul
loope
xor
xor
dec
adc
lods
nop
dec
scas
cwtl
daa
xor
sub
dec
sub
and
lock
xor
cltd
add
and
xor
jb
push
je
addr16
mov
test
lods
shlb
call
js
jp
add
jo
xor
or
cmp
cmp
add
insb
pop
cmpsl
or
out
cmpsb
popf
cwtl
sahf
pushf
adc
aas
lods
cs
lahf
mov
lock
clc
xlat
xorb
mov
add
rolb
xchg
dec
dec
or
pop
in
xchg
subb
jl
pushf
cmp
mov
mov
dec
or
sub
and
loopne
xor
lods
add
cmp
cs
mov
sbb
and
dec
les
pop
cmp
pusha
cmp
cmp
jo,pn
add
jl
xor
shlb
enter
fadd
fsub
in
je
or
cmp
mov
jno
les
push
std
lahf
add
mov
jo
in
cmp
sbb
iret
mov
or
nop
inc
adc
stc
enter
sar
aam
cmp
dec
mov
iret
in
call
int3
and
sub
xchg
pop
mov
hlt
cmp
mov
ficoml
jl
add
movsb
enter
fsubs
in
lea
pop
add
shlb
in
call
push
inc
hlt
dec
clc
and
lcall
aas
stc
add
mov
jno
pop
ja
push
pop
insl
aas
cmpb
inc
inc
push
outsb
xchg
mov
icebp
jle
popf
and
mov
xchg
sub
pop
push
lods
into
pop
cmpsb
or
orb
sbb
test
dec
nop
dec
add
scas
ftst
loopne
xor
dec
cmpsl
push
add
sbbl
daa
dec
inc
pop
rcrl
stos
sbb
mov
add
pop
and
cmp
cmp
fcoms
add
dec
repnz
daa
out
jle
add
jno
add
scas
ljmp
xchg
pop
cli
add
imul
js
iret
mov
jno
popa
jg
movsl
fsubrs
xor
pop
add
ljmp
ret
int
xchg
es
push
or
test
rclb
das
pop
add
js
xchg
cwtl
scas
adc
mov
or
or
add
fsub
mov
mov
sbb
sub
mov
in
dec
sti
orl
es
add
insl
dec
movb
sub
sub
mov
ret
iret
popf
aad
ficompl
jmp
lock
add
and
sub
push
push
clc
push
add
into
jns
jb
je
add
inc
movb
xor
and
int3
and
or
cmp
sbb
xor
cmp
imul
aas
xchg
pop
or
out
loope
cmp
leave
sub
popa
pop
inc
jmp
mov
and
sub
mul
adc
cmp
cmp
andb
sbb
xor
add
jnp
hlt
cmp
mov
mov
fmuls
add
movsl
cmpsb
call
add
jecxz
xchg
jp
add
mov
mov
sub
cmp
movsl
mov
jmp
ret
les
add
xchg
jo
lret
add
adc
mov
shlb
fcompl
mov
mov
stc
shlb
aas
add
cs
or
cmp
ficoms
fstps
jae
sub
add
loop,pn
inc
in
int3
dec
in
or
out
test
push
mov
nop
ljmp
in
call
shl
stc
jle
add
in
popf
cs
jne
stos
add
cltd
clc
and
and
sub
and
stc
cmp
sahf
add
pop
pop
xchg
pusha
mov
sub
add
and
adc
push
dec
jo
or
jp
dec
pop
or
cli
mov
mov
xchg
xor
movb
fidivl
or
nop
pusha
mov
ud2
xor
xor
add
ljmp
notb
pop
cmpsl
test
inc
jb
xchg
add
lds
in
push
shlb
dec
push
add
add
dec
out
dec
pop
mov
jae
test
fwait
ror
adc
int3
mov
shl
sbb
daa
or
mov
cmp
add
cmp
daa
add
inc
ljmp
push
jb,pt
je
push
aaa
add
jo
pop
add
xor
adc
adc
mov
jbe
push
sub
add
ss
mov
fcomp
ljmp
xor
in
pusha
sub
pushf
rcrb
lahf
and
les
push
lock
addl
and
sbb
addb
rolb
jl
loopne
dec
sbb
out
dec
iret
icebp
or
add
push
inc
mov
leave
loopne
sbb
orb
sub
jecxz
push
pop
xor
dec
das
inc
dec
add
scas
xchg
pop
les
jno
in
mov
in
add
lock
hlt
and
xor
add
cmpb
cmp
cmp
xor
dec
dec
loope
jae
add
jmp
pusha
xorb
mov
insb
lret
adcb
xlat
push
iret
lock
add
inc
sbb
or
pop
pushf
xor
cwtl
js
loop
pop
add
jecxz
cmpb
inc
push
cmp
or
sbb
add
cli
flds
jmp
add
adcb
test
fisubs
repnz
negb
mov
aaa
hlt
dec
clc
pop
mov
dec
add
cs
loop
shll
stc
aad
out
cli
sti
xorl
dec
push
or
mov
adc
and
sbb
leave
mov
sub
andl
sub
mov
jbe
add
rdmsr
sbb
into
dec
sub
sub
xor
pop
in
add
js
jle
je
loopne
and
mov
stc
mov
nop
cmp
arpl
fs
xchg
mov
dec
cmp
sub
out
add
cld
roll
xchg
sub
push
xor
add
pusha
cmp
inc
stc
inc
daa
push
cs
adc
nop
jp
dec
pushf
rsqrtps
mov
mov
mov
pop
enter
in
jmp
sbb
movups
or
add
add
ds
sub
loope
jmp
cmp
repnz
add
inc
xor
add
cwtl
enter
aaa
add
je
dec
jl
test
sub
jmp
js
inc
push
rol
sub
stos
inc
mov
int3
jecxz
push
out
call
pop
mov
clc
cmp
sub
jle,pn
fldl
add
in
call
xor
aam
movsl
pop
mov
jo
sbb
loopne
xor
dec
aam
push
adc
push
add
shll
nop
add
xor
xlat
sbbl
sbb
xchg
mov
data16
add
sti
leave
or
in
sbb
loopne
dec
mov
add
xchg
outsl
pop
subl
and
or
dec
cmp
scas
loope
in
aam
pop
popf
add
jbe
cwtl
je
jp
jl
jle
iret
inc
shll
inc
leave
dec
daa
push
negb
gs
jb
jle
clc
add
ljmp
adc
adcb
fdivrs
cmp
mov
shl
js
jp
jl
jle
jle
add
ret
popa
mov
sar
xlat
popf
fstpl
shrb
add
cmpsb
loop
adc
pop
fmull
xor
push
rclb
cmp
add
mov
cmp
in
mov
add
jg
mov
cmp
ds
add
ss
sub
aas
pop
push
cmp
add
jle
inc
xor
pushf
pand
mov
add
cmp
stc
mov
or
cwtl
out
mov
loopne
loope
adc
xor
dec
add
pop
xchg
popa
fsubrs
jbe
add
lods
subb
push
add
bound
pop
jb
ljmp
xchg
pop
and
pop
nop
pop
lods
in
call
add
xor
rcll
xlat
sbb
xor
popf
cmpsb
sbb
pop
mov
adc
adc
add
inc
wbinvd
pushf
add
adc
out
pop
call
loopne
xor
or
or
add
inc
or
shl
add
ljmp
pop
bound
roll
je
cld
cli
adc
mov
cmp
add
cmp
jge
pop
push
cmp
mov
ret
xor
mov
cmp
sbb
cmp
and
daa
lods
cli
pop
arpl
adc
push
es
call
test
push
xor
scas
mov
dec
inc
push
pushf
jnp
xchg
xchg
icebp
cmpsb
push
xor
mov
cmc
xchg
or
pop
leave
mov
insb
add
scas
aas
out
repz
lcall
hlt
cmp
sub
pop
xchg
cwtl
rclb
aaa
adc
faddl
dec
mov
and
pop
loopne
add
test
add
daa
inc
loope
jmp
add
or
sbb
mov
jo
cmp
push
jl
jle
leave
mov
sub
loopne
bnd
shll
cmpb
dec
xlat
daa
push
notb
xchg
movsl
pop
xchg
shrb
adc
inc
xor
adc
popf
add
or
mov
cmp
fadds
outsb
jp
dec
xchg
rcl
add
pusha
jl
pop
adc
cmpb
notb
mov
clc
pusha
nop
sbb
cld
jg
mov
loopne
mov
dec
pop
addb
cld
push
add
and
cld
ljmp
std
pop
adc
or
fbstp
lock
sbb
add
sub
cli
inc
gs
lock
jnp
xor
mov
mov
repz
cli
jo
rclb
call
rorl
setbe
les
cld
int3
add
add
mov
rcrb
js
or
rolb
jp
cld
aas
cltd
and
cmp
in
xchg
mov
repnz
push
js,pt
dec
push
test
fwait
add
lods
clc
add
ljmp
xor
add
jne
call
leave
dec
sub
add
in
test
mov
es
jl
dec
add
scas
sub
xchg
leave
cmpsb
adc
loope
in
shl
add
dec
or
and
adc
ljmp
je
add
repnz
jo
mov
and
leave
unpcklps
and
inc
loope
jmp
sub
insb
pop
mov
mov
add
popf
pop
mov
out
in
add
mov
orb
mov
sarb
test
fcomps
je
jbe
pop
lret
or
or
push
mov
sti
cmp
cmp
daa
push
xchg
push
data16
ret
lock
sahf
add
loopne
pop
jnp
dec
pop
movsb
lahf
out
repz
xchg
std
mov
sbb
ret
leave
mov
add
cs
push
xor
scas
hlt
popl
add
rorb
xor
or
je,pn
adc
data16
scas
push
dec
mov
mov
xor
nop
pop
add
dec
cmpb
dec
add
pop
or
lods
adc
daa
sbbb
cli
add
pop
cmp
aas
insl
leave
js
or
lea
adc
aas
repnz
pop
in
cmp
cmp
sub
inc
dec
add
add
xorl
cmp
ds
ja
stos
xchg
jo
jle
stos
add
ret
xor
repnz
fsubs
scas
cmp
shlb
inc
jb
dec
add
mov
jmp
scas
cld
mov
rcll
adc
loopne
mov
mov
daa
andb
rorb
lret
test
subl
mov
ja
mov
pop
andl
or
pop
mov
je
sbb
cltd
mov
pushf
es
inc
xchg
push
dec
call
sub
add
cmp
jns
pusha
dec
xchg
in
call
cld
popa
add
inc
mov
cmp
add
mov
enter
mov
test
fdivrs
adc
icebp
jne
clc
add
xor
add
inc
cmovl
mov
mov
imull
shrb
xor
add
jo
js
dec
lea
subb
cli
pop
jg
add
cmp
mov
mov
pop
lret
in
add
test
movsb
sahf
sbb
popf
jae
sbbl
adc
cli
add
and
cld
cmp
cwtl
xchg
roll
dec
cmpsl
into
jmp
adc
sbb
pushf
dec
mov
pop
push
imul
cmpsl
xor
add
in
xchg
xchg
push
push
add
sbb
leave
lahf
negb
pop
pop
xchg
push
ss
jle
enter
mov
xor
repnz
leave
push
add
adc
jo
jbe
js
jno
adc
inc
lock
sbb
and
cmp
pusha
jno
or
test
mov
pop
mov
cmp
and
sub
fimuls
pop
imul
add
mov
mov
ror
hlt
sti
std
jo
fs
orb
mov
out
test
nop
jle
daa
iret
inc
loope
out
dec
add
mov
xor
push
in
add
leave
je
jl,pt
and
pop
add
or
cmp
pop
sbb
add
daa
dec
js
nop
add
popf
test
shll
not
add
daa
cs
mov
pop
push
bt
frstor
arpl
add
sarb
dec
das
gs
mov
mov
add
cmp
jo
mov
push
dec
xor
rolb
inc
jo
add
je
xchg
test
jl
shlb
shl
push
dec
dec
pop
add
lods
leave
mov
add
inc
movsb
mov
ds
xchg
inc
jns
inc
leave
pop
jo
pop
xchg
addl
ficoml
or
add
jbe
pop
xor
dec
mov
mov
inc
repz
inc
fcom
add
rcr
and
lods
add
push
inc
gs
movsl
sub
mov
movsb
add
stc
sbb
xor
xchg
leave
dec
fcoms
xor
subl
roll
into
jecxz
testl
loope
ret
push
adc
icebp
xlat
cmp
fstpt
fisttps
shr
fdiv
and
adc
gs
fcoml
inc
lds
ja
add
out
aad
lahf
fistl
inc
add
clc
inc
je
pop
cwtl
data16
dec
push
cmpsl
dec
pop
out
rolb
rorb
leave
pusha
test
hlt
das
add
lods
jno
pusha
js
inc
aas
repnz
jbe
pusha
inc
dec
add
or
xchg
cmp
pop
pop
mov
mov
push
leave
shlb
lock
roll
jl
xchg
add
or
jp
fisttpll
pop
mov
inc
popa
xchg
pushw
jp
popa
and
cmp
leave
stc
rorl
mov
add
dec
cmp
or
stc
ftst
in
ds
add
add
push
or
and
mov
aas
aad
clc
sub
dec
add
shlb
in
leave
add
push
pop
xchg
cmp
inc
add
outsb
push
addb
inc
xor
fidivl
xchg
push
xorb
pop
sbb
stc
popf
lret
add
cmp
aas
sti
or
or
sbb
bound
add
sbb
xor
ret
addl
pop
leave
xchg
roll
vpandn
movaps
popl
sti
ret
out
push
and
popf
and
lods
cmp
aas
jge
cmp
out
inc
fwait
in
test
cmpsl
add
lock
sbb
mov
xor
shl
and
dec
cmc
in
and
stc
packssdw
arpl
mov
pushf
dec
add
mov
xchg
jle
dec
into
add
push
fcoms
and
cld
popl
inc
iret
inc
int
nop
jne
rcl
inc
in
adcl
loopne
add
and
xor
mov
add
in
push
jns
inc
shlb
aaa
mov
testl
int3
daa
aas
loope
jnp
cmp
call
add
cmp
dec
cmp
scas
cmp
rolb
push
rcrl
arpl
addl
cmc
push
mov
mov
lock
dec
push
arpl
inc
sti
fwait
repnz
mov
add
clc
sbb
add
mov
xchg
mov
pop
clc
inc
xchg
repz
in
lock
aas
mov
push
loopne
mov
insl
mov
add
leave
je,pn
cmp
mov
pop
call
data16
jb
and
mov
incl
push
and
xor
mov
pop
pusha
pop
enter
and
inc
test
cmp
popa
xchg
or
daa
inc
xchg
cld
mov
shr
int3
or
jbe
jecxz
nop
add
sbb
add
inc
sub
cmp
rolb
adc
je
jbe
js
dec
or
ds
mov
mov
cmp
into
add
std
lock
sbb
jle
xchg
fmuls
add
data16
sahf
cld
pop
inc
bound
sub
dec
push
arpl
aam
jle
test
xchg
cmp
fiaddl
addb
lock
cmc
imul
add
rcrl
loope
jmp
js
rolb
loopne
add
lret
cmpsb
mov
sbb
lahf
int
rclb
add
lods
dec
mov
cmp
enter
roll
jl
das
or
insb
fnstenv
test
pshufw
mov
pop
jae
xchg
pop
pushf
jmp
repz
dec
and
and
mov
pop
sub
movsb
mov
add
out
pop
dec
addl
inc
loop
je
adc
mov
push
inc
jne
add
dec
call
add
loopne
add
inc
xor
xor
dec
clc
rclb
fwait
loopne
aas
nop
out
add
test
push
xor
adc
and
add
sti
es
jo
mov
lods
xor
leave
mov
and
xor
sahf
dec
sbb
dec
push
incb
loop
add
inc
int3
push
rclb
mov
repnz
add
xor
jmp
add
aaa
adcl
push
cld
add
fdivrs
pop
call
pop
pop
in
pop
xchg
xor
mov
and
enter
addl
add
sub
icebp
mov
stc
out
clc
out
xor
push
xor
or
les
ds
pop
or
pop
shll
mov
cld
inc
add
jecxz
mov
push
lock
js
add
cmp
adc
testb
aaa
rol
js
pop
rclb
mov
push
adc
pop
rorb
sbbl
jl
sbb
xor
add
daa
inc
xchg
in
divl
add
call
xor
adc
in
dec
mov
pop
mov
fs
dec
mov
adc
push
setl
pop
cmp
mov
and
mov
or
push
add
push
and
loopne
fs
aas
lcall
pop
jle
or
xorl
lret
into
pop
jecxz
jmp
cmp
pushf
mov
sbb
add
dec
pop
mov
pop
add
adc
mov
loopne
cld
sbb
jnp
mov
push
sbbb
or
mov
or
in
je
and
pop
mov
mov
pop
pop
push
xchg
xor
mov
pop
pop
in
add
lahf
std
loopne
add
jbe
or
sbb
mov
mov
jl
jle
dec
xor
iret
inc
rorb
mov
push
add
push
xor
lahf
cs
out
and
rolb
leave
add
aam
ret
es
pusha
pop
xchg
adc
xor
fimuls
icebp
mov
add
les
add
fdivr
and
or
adc
jae
add
lret
pop
sub
cwtl
or
cmp
add
cmp
loop,pn
aas
mov
outsl
rcll
mov
add
mov
rcrb
rorb
loopne
negb
call
data16
rcrl
loop
sbb
insb
adc
xor
rorb
inc
fidivrs
insb
pop
or
stc
subb
cmp
xor
add
loop
and
sub
mov
cmpsb
movsl
shl
push
sbb
mov
test
push
mov
insb
ja
jae
add
lods
call
and
je
add
pop
push
cmpb
test
aam
subb
add
test
in
dec
mov
call
sbb
pop
xor
mov
cmp
push
add
or
movl
sub
xor
rorl
adc
and
loopne
shl
pop
js
cld
pop
sbb
pop
lahf
icebp
fimull
inc
mov
adc
out
mov
in
and
mov
cs
in
mov
pop
mov
sarb
in
add
or
sar
repz
add
aas
out
int3
sub
js
push
loope
push
je
icebp
ret
lock
add
idivl
mov
jle
add
xchg
in
in
mov
jle
ror
xor
ss
or
adc
mov
int3
and
jb
add
in
loopne
xor
adc
adc
push
inc
mov
add
iret
lods
sbb
jo
out
adc
jmp
or
push
nop
pusha
call
jmp
adc
cs
mov
add
sub
popf
jno
cmpl
fisttpl
push
nopl
fchs
andl
xor
mov
faddl
sbb
xor
push
sub
jns
cli
adc
and
mov
push
add
aaa
adc
ret
push
push
sbb
push
call
enter
mov
psllq
sbb
jecxz
push
lea
test
sub
pop
add
inc
mov
or
nop
cmp
push
cld
pop
add
or
and
jmp
add
add
test
outsl
add
add
popf
push
sub
rorb
je
or
add
mov
lea
mov
jno
cmpl
je
xchg
inc
add
in
cltd
clc
push
push
sub
push
lcall
push
mov
or
add
sub
incb
add
push
decl
aaa
movb
ret
cmpsl
xlat
lahf
inc
push
push
push
stos
mov
push
mov
aas
xor
fisttpl
leave
je
sbb
sbb
lods
cmp
mov
push
add
dec
add
sub
add
add
dec
cli
loopne
or
bound
or
stc
add
movsl
loope
add
cmp
pop
push
mov
sbbb
lds
jp
aad
pusha
inc
ljmp
add
loope
push
dec
xchg
shlb
ret
adc
inc
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
jns
add
aam
xchg
mov
jecxz
sub
add
mov
popa
dec
mov
add
test
inc
jno
push
sub
ljmp
or
jne
pop
add
lock
dec
dec
add
mov
inc
test
push
inc
data16
in
push
sbb
mov
jle
push
cli
mov
inc
or
mov
in
add
inc
lds
push
push
mov
gs
mov
sbb
call
outsl
cmpsb
ds
rcrb
xor
xor
jmp
push
ss
mov
jne
pop
roll
dec
adc
loop
adc
syscall
jl
jnp
cmp
add
flds
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
add
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
mov
xor
daa
xor
xchg
dec
mov
fs
cmp
fcom
addl
adc
dec
xor
ret
testb
xchg
adc
pop
add
in
test
jne
jbe
nop
xchg
jecxz
add
gs
cmp
dec
xorl
fadd
cmp
mov
push
test
daa
cmp
les
add
mov
outsl
push
sub
mov
jle
pop
add
xchg
xchg
jno
dec
add
jmp
push
xchg
adc
xor
xchg
dec
inc
aas
push
sbb
repz
mov
and
jae
ljmp
add
gs
js
xchg
cld
dec
popf
fnstcw
sbb
pop
repz
add
shrb
adc
call
das
repnz
and
pushf
popa
xchg
jb
fs
incb
pop
push
jb
stos
mov
into
or
jecxz
int
add
xchg
pop
jo
push
filds
pushf
mov
mov
mov
loopne
mov
add
call
fildll
adc
sub
dec
nop
pop
add
fmull
repz
add
stos
xor
add
sub
aad
maskmovq
notl
test
sarl
in
shlb
and
mov
push
popa
test
or
int3
mov
hlt
shl
fnsave
sti
pop
aas
dec
push
pop
insb
and
sbb
movq
scas
dec
popa
adc
mov
mov
xor
jle
sti
add
mov
mov
loopne
add
addl
cmpsl
lahf
xchg
push
cmp
test
add
lret
pusha
sbb
mov
adc
mov
scas
out
cmp
add
mov
dec
dec
mov
loop
in
mov
fstpl
int
adc
dec
add
sub
bound
outsl
jne
mov
subb
sahf
add
jl
and
out
sbb
lock
mov
loope
add
pop
cli
jno
mov
ret
add
andl
xor
dec
jmp
lods
sub
loope
cmp
shll
sbb
mov
jnp
add
negl
scas
sbb
popa
je
cmc
inc
push
or
mov
ficompl
add
push
dec
aam
pop
pop
sbb
pop
sub
jbe
rclb
and
mov
add
xchg
lock
jae
add
fwait
inc
cmp
in
pop
adc
rcrb
xor
mov
xor
sub
dec
or
jg
dec
xor
clc
pushf
push
enter
pop
pop
add
aam
or
outsb
dec
shlb
xor
mov
mov
adc
push
jge
push
loopne
xor
lret
add
xchg
addb
daa
sub
and
jno
push
add
arpl
add
add
add
call
stos
arpl
lcall
sti
push
adc
sub
sub
in
in
pusha
or
cld
mov
mov
push
inc
mov
inc
add
jne
add
sub
or
xor
pop
or
mov
psrad
sarb
sub
lock
pop
lds
cmp
adc
pop
addr16
sub
add
imull
cmc
rep
pop
sbb
pop
incl
dec
shrl
or
pop
cmp
jae
push
add
inc
inc
lock
adc
fsts
shlb
push
je
adc
mov
sbb
out
jnp
nop
es
push
jge
popa
daa
ret
jns
js
movsl
xlat
ret
pushf
push
lods
cmp
rclb
je
jne
xor
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
addr16
lock
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
mov
fs
jmp
inc
clc
jns
and
push
ret
and
lret
sar
aad
xchg
popa
loop
fistpll
mov
pop
fildll
arpl
xor
imul
jb
push
push
fs
mov
js
rcll
in
sbb
add
icebp
iret
inc
push
cmc
bound
dec
outsl
xchg
insb
jmp
cmpsb
aaa
inc
inc
daa
cmp
dec
push
jnp
inc
mov
je
jmp
add
add
add
add
jmp
mov
sahf
cmpsl
xchg
cmc
lea
xor
in
jg
bswap
push
cs
cmp
mov
rep
test
sub
or
cmpsl
lds
inc
shrl
inc
fs
pop
cld
scas
or
dec
jno
scas
imul
out
clc
pop
cli
xchg
xor
bound
pop
dec
adc
outsl
fsub
iret
insb
sar
inc
sbb
ljmp
data16
adc
mov
aas
xor
lret
and
sahf
xor
jl
es
jae
adc
out
mov
jmp
stc
aaa
mov
mov
stos
xlat
jae
inc
jge
pop
xor
aas
cmp
jbe
xchg
fcoml
gs
adc
jmp
fcmovnbe
xlat
sub
lret
inc
cwtl
add
xchg
sub
mov
ret
test
xchg
push
cli
iret
js
sub
andb
mov
pop
push
mov
int
sti
es
or
stos
pop
cs
xchg
inc
xor
ficompl
loope
sub
mov
mov
cmpsl
sbb
mov
push
rcrl
push
lcall
cltd
pop
mov
cmp
addr16
arpl
xchg
add
std
call
imul
xchg
adc
dec
mov
mov
loope
inc
push
sub
int
arpl
jno
je
adc
ds
fisttpl
adc
orl
pop
mov
aaa
arpl
add
stc
mov
enter
pop
test
dec
inc
dec
addr16
rorl
push
ljmp
mov
pop
stos
mov
imul
out
push
or
movsb
outsl
jp
fnstsw
aad
sbb
ljmp
cmc
insb
xchg
inc
add
cld
adc
and
and
mov
push
pop
sub
aaa
repnz
push
push
les
dec
call
inc
fsubrs
sub
mov
jne
scas
jbe
xchg
ror
int
mov
jg
xor
mov
ds
mov
pop
aas
xchg
movb
loop
or
in
call
loopne
mov
adc
insl
push
jbe
pop
and
jbe
inc
jp
and
insb
lret
mov
or
repnz
incb
mov
mov
push
leave
fs
enter
sbb
mov
imul
sub
sub
arpl
in
cmpsl
or
mov
push
sti
inc
mov
adc
push
sub
jmp
pop
pavgb
and
dec
mov
cmpsl
mov
repnz
xor
pop
leave
xor
stc
xchg
out
test
and
dec
daa
cltd
fldcw
test
pop
mov
enter
inc
push
cmc
sti
int
stc
cmp
sbb
sti
call
xlat
ds
mov
in
sbb
out
dec
or
cmp
add
sti
jecxz
rclb
aam
idivb
cmp
into
mov
fwait
clc
test
pop
data16
cmp
std
xchg
push
js
pause
fdivrl
mov
pop
push
sub
adc
out
mov
cmp
lds
inc
xor
jp
push
and
mov
outsl
push
inc
lods
mov
dec
movsb
or
or
push
add
int
push
stos
popf
shlw
sub
cmc
mov
enter
cmpl
lret
push
int
mov
xor
mov
xchg
xchg
pop
arpl
pop
jb
or
rorb
js
inc
call
dec
or
xlat
imul
jne
mov
or
dec
mov
and
das
jnp
xchg
stos
add
cli
cmp
add
sahf
cmpsl
stc
ficoml
dec
in
xor
xchg
jns
popa
setb
sbb
push
fldl
or
push
test
cld
inc
jle
sbb
sbb
movsb
xor
xchg
jb
inc
push
and
jbe
aas
daa
xchg
inc
push
popa
enter
test
pop
mov
cmc
loop
mov
repz
data16
in
popa
outsl
leave
lcall
aam
out
add
mov
adc
in
inc
push
push
cmp
imul
in
icebp
shl
ret
or
pusha
fwait
push
mov
addr16
shr
or
mov
cmp
push
push
sahf
add
fstps
adc
jo
popa
imul
push
prefetchnta
js
xor
repz
push
mov
pop
call
gs
sub
sbb
popl
je
pop
lcall
stos
adc
mov
jae
ret
xor
out
arpl
push
mov
xor
mov
jne
in
cmp
lea
lea
xchg
cmp
out
mov
inc
daa
fwait
stc
add
loop
mov
fwait
pop
dec
add
dec
ret
lds
mov
cltd
scas
pop
icebp
jae
daa
shll
cmp
aas
in
or
xor
rcl
aas
ret
and
dec
mov
mov
adc
imul
fs
push
faddp
shrl
pop
aad
mov
frstor
mov
std
pop
dec
dec
pop
std
cltd
lock
cmp
cmpsl
pop
and
cmp
jmp
mov
call
lock
or
cmp
mov
mov
adc
mov
clc
das
xchg
mov
pop
jle
adc
cld
lds
iret
mov
jmp
and
inc
adc
push
mov
dec
adc
add
cli
mov
push
test
dec
fs
sbb
push
cmp
sub
test
cltd
xchg
xchg
inc
push
jo
push
sbb
mov
loopne
imulb
mov
lret
add
cs
adc
jns
jle
push
jmp
sbb
xchg
or
loope
adc
mov
movsb
hlt
mov
push
push
push
xchg
dec
sub
arpl
loop
sahf
iret
xorl
cmp
adc
pusha
loopne
sub
mov
fldcw
pop
ja
cmp
adc
mov
fmull
jno
in
xor
dec
xor
add
mov
addb
aam
sti
lret
data16
bound
test
pop
pop
sub
push
fidivrs
cltd
nop
arpl
push
add
cli
incl
mov
dec
sub
inc
sbb
fs
lods
mov
mov
cs
xchg
enter
clc
jae
ss
jecxz
xchg
int3
std
sbb
mov
jmp
mov
ds
jp
dec
or
adc
pop
push
pushw
cmp
insl
inc
mov
push
not
mov
js
popa
sbb
stos
shrl
add
mov
xchg
adc
jge
pusha
jp
in
mov
mov
jmp
fstl
sub
mov
inc
adc
ja
clc
add
mov
cld
fsubl
push
pop
rorl
jne
arpl
xchg
cmp
hlt
xchg
sub
je
pop
xchg
pop
mov
or
jae
out
inc
aaa
push
xchg
jae
pop
in
mov
clc
dec
lcall
ja
sarb
adc
lods
cmp
outsb
sti
and
push
xchg
into
cmp
push
je
dec
aas
xchg
adc
sbb
iret
pusha
pop
xchg
cmc
fnsave
and
rclb
mov
jo
push
ds
movhps
pusha
mov
icebp
lods
leave
sbb
mov
add
jo
pop
sub
xchg
xor
jns
imul
arpl
mov
stos
mov
les
xchg
mov
xchg
outsb
mov
mov
out
pop
push
pop
test
leave
and
adc
xchg
cmpsl
int
xorps
add
shll
xlat
or
test
and
adcl
mov
push
inc
and
ret
repnz
mov
in
and
sbb
add
fwait
pushf
and
out
add
insb
loope
mov
icebp
sbb
cmp
and
mov
insb
test
inc
jl
add
in
jns
pop
push
dec
push
xchg
and
and
cmc
add
inc
icebp
mov
scas
js
add
adc
test
adc
or
pop
out
scas
push
xchg
aam
add
jne
dec
mov
test
enter
jecxz
test
ficoml
push
fadd
mov
and
fwait
lcall
jbe
xchg
scas
addb
scas
mov
and
pop
das
fdivr
sub
cmp
add
incl
nop
and
scas
es
lcall
outsl
repz
enter
insb
inc
popf
push
xlat
leave
cmpsl
in
fxch
sbb
sub
mov
movsb
mov
imul
fbstp
or
inc
push
xchg
dec
inc
xor
pop
cmp
mov
scas
inc
mov
adc
ljmp
pushf
dec
pop
inc
sbb
aaa
je
lahf
jecxz
pop
rcrl
shrl
and
or
add
jns
or
fmuls
outsb
mov
pop
ss
sbb
inc
cwtl
repz
movsl
mov
mull
inc
out
cmp
fucomip
and
hlt
pop
and
push
xchg
dec
cld
dec
nop
xor
add
cmp
aam
mov
aaa
mov
mov
cmp
pop
mov
sbb
idivb
adc
dec
inc
outsb
in
and
loopne
mov
scas
mov
mov
lods
loopne
mov
jb
fldenv
jecxz
popf
das
mov
das
mov
or
lret
and
mov
add
adc
movb
imul
dec
orb
cmp
test
mov
out
pop
mov
xchg
imul
lods
mull
jno
jmp
test
xor
and
mov
in
jo
pop
dec
imul
cwtl
cwtl
inc
push
pop
scas
pushf
stos
sbb
fsubrl
jbe
pop
jbe
push
sti
jmp
scas
lcall
pusha
rcrl
sbbl
in
push
xlat
adc
xchg
in
xor
or
xor
dec
sbb
and
jecxz
jg
das
stos
sbb
inc
outsb
movsl
hlt
lock
mov
dec
out
pop
jno
xchg
push
aas
jl
fimuls
testl
subb
fwait
ret
in
aas
jmp
sbb
adc
sbb
or
pop
add
pop
out
cmpsl
add
ja
mov
aas
xchg
xchg
fwait
movsl
inc
sbb
icebp
push
xchg
mov
outsl
test
jmp
lcall
jb
adc
and
icebp
sub
jge
xor
xor
out
es
aaa
cmp
fisubrs
mov
ss
inc
outsl
sbb
mov
insb
pop
scas
mov
cmp
inc
shr
mov
mov
dec
frstor
fisubrs
jge
xor
jbe
xchg
sbbb
es
sbb
jecxz
in
out
pusha
mov
test
and
mov
pop
xchg
cmpsl
xchg
jbe
cltd
flds
rorl
sub
push
mov
mov
test
data16
add
adc
dec
pop
movsl
sub
test
incb
loop
or
int3
mov
adc
jns
andl
mov
jmp
je
nop
mov
outsl
leave
mov
mov
xor
js
in
aas
fmull
jnp
popf
sbb
jnp
mov
cwtl
add
xchg
mov
mov
insl
push
nop
xor
inc
dec
out
scas
cmp
lods
fs
cmp
cmp
imul
mov
sti
mov
mov
mov
xorb
cld
sub
out
dec
mov
aam
mov
scas
dec
movsb
fcoms
add
fnsetpm(287
addl
xchg
pop
mov
xor
aam
jmp
xlat
mov
das
jge
push
mov
pop
fiadds
out
lret
push
test
je
outsl
nop
fdivrs
dec
fists
mov
aad
cmpl
push
rcl
pop
nop
inc
jmp
xor
add
pop
stc
mov
xchg
cmp
cmp
add
xor
inc
addr16
inc
inc
outsl
inc
test
sbb
cmp
pop
mov
and
inc
lds
xchg
mov
mov
jne
and
rcr
push
xchg
dec
pop
ret
out
xor
mov
xorl
mov
sbb
add
xlat
xorb
push
jge
xchg
movsb
pop
xchg
sub
mov
or
test
stos
sub
lret
call
xor
out
adc
loope
pop
div
sbb
inc
ror
adc
fs
rclb
jnp
add
in
out
aas
mov
sub
test
and
or
and
xor
xchg
lret
int
mov
pop
dec
xor
mov
mov
inc
test
mov
and
sbb
loopne
xor
movsl
add
leave
rorb
inc
outsb
mov
not
fisttpll
dec
mov
sub
gs
dec
loope
out
pop
ja
mov
in
pop
not
or
xlat
aam
fstpl
xor
mov
mov
cmp
xor
xlat
inc
inc
test
push
inc
jp
shrb
push
popf
sbb
in
xchg
xchg
shrb
dec
sbbb
test
scas
out
pop
sti
jle
cmpsl
lahf
sbb
push
push
sub
inc
mov
push
lret
in
cwtl
jl
out
push
aam
inc
stos
xchg
fucomp
dec
addb
jg
xchg
push
roll
std
lods
add
dec
addr16
sbb
cmpsb
cli
cli
or
loopne
aaa
push
andb
pop
int
jne
mov
cmpsl
pop
pop
adc
cld
insl
push
and
cmp
jle
push
mov
pop
mov
mov
push
push
ja
in
cmpl
sbb
ret
and
sahf
cs
xchg
sbb
mov
add
insl
fwait
add
out
insl
outsl
cltd
or
sbb
out
stos
in
pushf
or
out
in
pop
pop
and
dec
mov
push
pop
cli
mov
xchg
mov
cmp
sbb
test
add
pusha
push
call
or
inc
adc
pusha
in
sub
and
push
jp
into
cli
xlat
jle
mov
fimull
sub
or
xchg
ja
mov
pop
sbb
inc
pop
std
inc
in
jl
pop
stos
out
adc
jb
ret
sbb
scas
lret
add
negl
cmc
xchg
sub
nop
dec
insl
icebp
sbb
and
les
mov
repz
and
xchg
movsb
cli
add
push
lea
and
fstl
jecxz
jle
add
ljmp
stos
sub
mov
mov
sahf
inc
add
cmp
inc
mov
pop
movsb
lock
popa
lods
loop
sahf
push
out
pop
cmp
cltd
inc
and
fimuls
test
mov
mov
ret
sbb
lret
icebp
pop
jnp
mov
loopne
xlat
ds
orl
xor
pop
sub
cwtl
add
jecxz
ret
cmp
movsl
xchg
inc
je
pop
mov
cmp
cs
sti
mov
jle
lret
sahf
xchg
fidivs
hlt
ljmp
bndstx
xchg
push
aas
mov
scas
or
sub
in
loopne
push
jecxz
pusha
icebp
add
adc
ja
test
shl
push
xchg
jg
inc
jl
pop
testb
int
cmp
test
mov
shrl
arpl
popa
cmp
sub
mov
jmp
subl
loop
je
inc
add
jns,pn
fstps
pop
and
js
dec
out
adc
fcoml
inc
add
fisttpll
add
sbb
pusha
imul
fwait
inc
sub
lods
leave
mov
loopne
loop
mull
inc
cmp
sub
sbb
jl
mov
jns
fs
in
out
mov
lock
xor
aam
xor
mov
fcompl
cmp
cmpsb
xchg
aaa
pusha
cli
testb
sub
sbb
mov
cmp
sahf
cmc
std
bound
xor
sub
cmpsl
into
xor
jge
adc
jbe
or
push
mov
xor
and
lea
inc
std
mov
stos
push
mov
leave
xor
sbb
fisttps
std
lret
adc
sahf
cmp
shll
cmp
jmp
add
mov
xor
jmp
mov
ret
cmp
sub
mov
imul
aaa
mov
stos
adc
add
lods
sbbl
gs
movsl
pushl
popl
cld
jo
fidivs
sub
mov
loope
andps
testb
inc
xchg
add
mov
mov
sahf
test
jae
fadd
into
add
mov
cmp
or
fwait
inc
jge
sbb
icebp
adc
xchg
pushf
lret
sbb
or
stos
adc
or
xor
pop
cltd
push
jmp
sti
fisubrs
pop
push
fscale
pop
cli
push
dec
lock
mov
mov
dec
adc
or
mov
xchg
cmp
sub
xor
call
leave
imul
push
inc
cmp
xor
das
loop
test
sub
push
mov
and
jne
lock
add
push
int3
mov
sub
hlt
mov
test
push
lods
jge
int
jnp
and
mov
gs
int
push
jmp
pushf
stc
out
dec
pop
mov
xor
cmp
mov
xchg
shll
pop
popa
xchg
cmpsl
scas
out
add
clc
insl
notl
jnp
lods
ficompl
in
cmp
dec
xchg
adc
movsb
shrb
push
cli
js
sbb
jle
sub
sti
in
mov
mov
test
mov
lret
jae
jge
les
inc
aas
daa
sub
in
sub
jo
cwtl
int
cmp
roll
call
pop
ja
push
cs
add
ja
mov
or
cmpsb
lods
add
js
xor
sti
mov
outsb
pushf
addl
mov
sti
jno
daa
and
aam
inc
adc
movsl
mov
add
inc
dec
repnz
and
mov
out
pop
daa
sub
add
jnp
ja
mov
xor
push
mov
test
cmp
mov
jns
jle
pop
sbb
lea
dec
and
xor
imull
sub
and
outsb
je
cmpsb
inc
dec
add
mov
testl
cmc
mov
and
inc
ficompl
jbe
sahf
mov
dec
adc
lods
cld
call
pop
dec
mov
xor
loop
in
mov
add
push
xchg
dec
aad
add
rorl
out
cmp
mov
inc
jo
mov
out
add
aam
shlb
shlb
mov
mov
cwtl
push
cld
mov
daa
xlat
lods
jae
xchg
stos
fcmovbe
cmp
ljmp
lcall
sub
sub
imull
inc
lret
cmp
inc
aas
jmp
push
shr
nop
mov
xchg
mov
add
movsb
adcl
mov
jecxz
aam
jns
add
push
cmp
pop
xchg
sahf
xor
push
cmp
dec
inc
inc
mov
sarl
pop
push
xchg
dec
or
mov
fcomp
jle
cmp
or
jno
int3
fistps
xor
adc
adc
jnp
insl
lret
call
adc
mov
pop
aad
je
sti
dec
ret
cld
ljmp
fbstp
lahf
adc
mov
or
mov
mov
inc
mov
and
out
inc
push
adc
pushl
fxch
aam
mov
adc
mov
out
outsl
dec
mov
loopne
movsb
sti
ljmp
jo
iret
inc
stos
jne
scas
loopne
push
mov
cmp
mov
idivl
adc
sub
mov
cmpl
xlat
shlb
xor
sbb
js
fnstcw
arpl
mov
fstps
fisubs
pop
and
sub
fbstp
jne
pop
test
sub
ss
mov
jb
lods
test
push
or
mov
xor
xchg
negb
xor
push
mov
push
or
lahf
xchg
mov
dec
lock
mov
mov
cmpsl
sahf
mov
out
xchg
xchg
sub
sarl
cwtl
or
cs
cmp
or
shr
pop
lcall
or
repz
dec
arpl
and
andl
add
fistpl
push
xlat
jo
sbb
and
addb
mov
xor
add
adc
lock
mov
mov
cmpsb
xor
xchg
mov
cld
ret
repz
push
and
xchg
push
push
pop
mov
cmp
rcll
out
in
push
cltd
mov
mov
xor
or
int
rolb
arpl
test
add
pop
lahf
ret
cli
ret
and
sub
mulb
sbb
fwait
pop
mov
dec
rclb
in
jmp
pop
into
xchg
mov
jo
pop
popa
push
repz
cmp
int3
shlb
mov
cmp
out
pop
aam
adc
jno
shl
lret
xchg
shl
sbb
push
and
pop
xor
das
jnp
jge
sbb
out
xlat
xchg
pop
xchg
repnz
jb
add
mov
sbb
xor
cmp
push
bswap
add
int3
out
cltd
mov
stos
ja
adc
mov
movsl
mov
cmpsb
leave
push
repnz
dec
mov
test
movl
adc
leave
add
sub
icebp
fucom
adc
sub
cmpsb
fisttpll
cld
cld
loope
mov
shll
push
push
cli
cmp
add
cmp
aad
and
dec
mov
jne
ljmp
inc
nop
daa
mov
and
xorb
rcll
insl
cmp
dec
sub
jmp
dec
sub
in
lret
jecxz
xor
ret
cs
cli
jl
lods
or
push
jno
leave
xchg
out
daa
rolb
mov
push
push
xlat
scas
ja
daa
test
xchg
cli
fimuls
call
cmp
inc
cmpsb
mov
sti
and
cmp
out
dec
stc
in
jmp
test
popa
and
mov
adc
nop
jp
cli
or
xchg
or
pop
jecxz
and
lods
mov
aam
fdiv
jecxz
mov
sti
call
fistps
js
mov
jae
dec
or
ss
clc
lods
xorb
xor
adc
add
mov
ljmp
hlt
repz
loop
imul
lret
sahf
aam
jb
ds
jnp
ds
int
adc
pop
and
adc
repnz
sbb
inc
xlat
and
enter
push
insl
pop
inc
sbb
sub
xor
xchg
aam
adc
push
cld
jmp
lret
cmp
lret
loope
add
push
test
pushf
adc
adc
aad
dec
xchg
pop
adc
notl
outsb
mov
mov
js
mov
clc
lahf
bound
and
outsb
test
dec
pop
jg
mov
push
or
dec
pop
testl
imull
xchg
shll
push
or
push
adc
dec
dec
mov
mov
leave
pop
pop
std
daa
cmp
jmp
pop
int3
xchg
push
xchg
pop
xchg
scas
adc
jno
stc
jge
loopne
sbb
add
lods
ret
in
inc
int
sbb
movsl
outsb
xor
jl
nop
push
lock
cli
sub
jmp
push
cmc
push
add
add
adc
fbstp
sub
xor
sti
dec
mov
aas
fdivrl
pop
sub
ret
cmp
popa
popa
mov
rclb
xor
pop
jae
dec
push
sbb
and
push
int3
xor
aam
sub
xchg
add
loope
mov
popa
or
cmc
lock
adcb
jp
and
add
push
sub
xchg
scas
and
pop
adc
aas
fldl
add
fs
or
lea
add
jle
js
sbb
into
test
int3
loop
or
and
inc
xor
bswap
clc
xchg
pop
and
mov
fdivrl
mov
xlat
inc
xor
pop
call
rcl
push
and
aam
mov
lret
cmp
sahf
cmp
dec
das
xor
mov
fadd
adcb
adc
push
leave
mov
mov
mov
mov
hlt
dec
or
jp
jmp
ret
sbb
outsl
pop
sbb
xor
jle
mov
mov
mov
adc
rcl
cmp
ljmp
data16
mov
mov
movsl
cmpsl
pop
dec
rorl
mov
gs
insl
add
cmp
scas
inc
sub
setns
lret
addb
push
jmp
mov
mov
shlb
xchg
ret
insl
mov
cmp
add
sbb
call
popa
adc
sbb
adc
and
inc
lea
scas
aaa
xchg
cmpsb
mov
int
or
xor
mov
in
je
mov
imulb
outsl
addr16
cmpsb
popa
xor
add
dec
sub
js
xor
mov
inc
inc
ret
les
pop
inc
loop
mov
dec
and
xchg
inc
ret
add
scas
lods
or
push
cmp
jae
scas
push
cmp
dec
xor
dec
push
mov
xchg
cmp
dec
mov
and
imul
inc
nop
or
adc
js
pop
ficompl
xor
cmp
cmp
mov
jmp
xor
or
mov
mov
cmp
inc
xor
imul
stos
cmovg
add
sahf
lods
inc
stc
cwtl
imul
jno
rclb
ljmp
fstpl
arpl
mov
push
pop
popa
xchg
inc
imul
add
sbb
xchg
insl
outsl
sti
adc
es
sub
pop
adc
adc
testl
jmp
rcr
out
dec
mov
xchg
mov
leave
ret
stos
xchg
inc
or
mov
push
cs
mov
outsl
loopne
outsl
dec
dec
sub
shll
ret
je
movsl
leave
and
cltd
adc
repz
push
scas
sti
pop
dec
sbb
jle
inc
adc
push
sahf
mov
out
pop
sub
in
pop
mov
loopne
fwait
andl
loope
push
rclb
test
mov
pop
dec
loopne
mov
insl
cmp
jge
lahf
and
jecxz,pt
fwait
mov
jno
mov
daa
cltd
rol
aas
jle
pushf
jp
popa
jecxz
enter
lods
sti
and
out
enter
and
jae
int3
pop
into
cld
jne
fdivl
dec
inc
or
adcl
enter
xor
xchg
call
sti
lcall
adc
lods
sbb
jmp
push
jb
xor
aam
and
jns
scas
mov
out
ds
lds
mov
mov
jge
mov
mov
inc
jne
xchg
idivl
nop
les
mov
push
popf
cmp
ja
jmp
jns
clc
aam
insl
sbb
push
mov
xor
xor
jmp
jmp
rcr
push
pop
scas
scas
mov
xchg
adc
dec
mov
sbb
stc
pop
aaa
mov
add
cli
int3
pop
mov
pop
xchg
iret
mov
hlt
pop
fsubrs
sbb
xor
arpl
xor
jmp
sbb
or
jg
ret
dec
rclb
xor
add
pop
icebp
mov
dec
rorb
mov
mov
sti
inc
std
dec
jl
cmp
shr
fildll
add
push
xchg
scas
xlat
outsl
jl
sarb
or
sbbb
pop
or
into
cltd
stc
es
jmp
mov
cld
mov
leavew
les
or
mov
inc
and
jbe
lret
mov
cmp
and
push
lret
xor
push
mov
jno
dec
mov
insl
call
fcomps
scas
mov
daa
push
mov
imul
sub
div
jbe
mov
leave
mov
adc
inc
test
and
adc
push
stos
jp
pop
pushw
push
jne
xchg
iret
out
pop
lods
push
jno
fs
jo
pusha
or
jnp
xchg
mov
pop
into
push
jnp,pt
fwait
xor
xchg
test
clc
test
ret
addr16
inc
pop
popf
xchg
call
mov
ds
lret
or
mov
das
sub
fisubrs
cmp
xchg
xchg
pop
jbe
sub
icebp
jle
pop
and
mov
imul
xchg
scas
hlt
xchg
jae
in
outsb
cmp
mov
sub
testl
jmp
dec
lcall
outsb
shll
push
ja
jmp
mov
push
fucom
push
sub
movsb
scas
lret
inc
out
jmp
loopne
outsl
sub
js
sbb
mov
lock
sub
push
aaa
inc
and
stos
out
mov
sbb
xchg
xchg
pop
call
adc
aad
sbb
push
pop
xorl
cmp
shlb
aas
fmul
fldcw
adcl
cmc
dec
aad
cwtl
pop
add
cld
push
xlat
fs
cltd
test
pop
ss
stos
imul
pop
and
mov
cmp
je
adc
sbb
ss
mov
sub
adc
mov
repnz
pop
lods
out
mov
add
inc
imul
out
push
mov
adcb
dec
adc
cmp
cmp
push
push
and
pop
aad
out
cmpb
out
sarl
jl
pushf
cmc
leave
mov
push
loop
mov
pop
push
xchg
mov
inc
mov
stos
xor
xlat
pusha
pop
and
xor
jle
rcrl
or
cli
inc
xchg
cmpsl
or
nop
rcr
mov
and
fsts
in
cmc
lods
pextrw
daa
mov
aam
nop
out
add
pop
jns
lock
inc
sub
cmp
pop
outsl
mov
ret
ret
stc
jno
fdivrs
pushf
fstpl
fcomps
in
push
or
cli
pop
mov
xor
dec
sbb
pop
inc
out
cmp
and
fisubl
jl
mov
adc
xchg
dec
mov
ret
shrl
add
pop
dec
sub
mov
mov
rcll
adc
js
pusha
insb
mov
xchg
xchg
mov
mov
popa
pop
cmp
loopne
xchg
fistpl
hlt
sbb
popf
jns
lcall
fnstsw
shr
jl
dec
and
xchg
inc
adc
data16
jne
push
push
movsb
mov
mov
cli
rcrb
and
int3
pop
and
jb
mov
test
outsb
sub
cli
fisubrl
push
pop
jbe
nop
popa
ror
and
and
mov
insb
gs
and
notb
xchg
jl
rcr
rolw
and
mov
sbb
stos
add
inc
pop
sti
test
aas
pop
aam
popa
sti
add
and
call
out
mov
pop
fmulp
call
pop
inc
mov
mov
xor
adcl
ds
xor
mov
mov
sub
adc
es
js
cs
xchg
cmpb
int3
sbb
testl
and
mov
adc
pop
jbe
add
xor
inc
bound
xor
rcrl
mov
test
int
mov
push
outsl
push
push
xchg
mov
leave
add
lcall
and
outsb
lahf
jl
les
xor
loopne
push
lods
icebp
pop
cmp
push
popa
and
jbe
xlat
mov
lret
cmpsl
add
adc
mov
mov
push
sbb
int
dec
inc
adc
jle
stos
add
stos
mov
pop
jns
and
jne
icebp
jno
push
fldcw
int3
lock
pop
iret
push
lea
mov
in
ljmp
jecxz
pushf
sbb
and
or
xchg
test
mov
sahf
movsb
xor
cli
cmp
loop
xchg
movsb
jmp
mov
shll
inc
inc
rcll
repnz
pop
and
sbb
sbb
fdivr
es
xchg
sbb
sub
or
fistl
mov
sbb
pop
cmp
xchg
cs
push
lods
aam
push
mov
mov
sbb
push
push
call
xchg
into
fsubrp
jnp
aas
mov
cwtl
adc
repnz
lret
inc
lret
pushf
fs
int3
arpl
leave
ljmp
loope
les
inc
xchg
psrlw
adc
jecxz
sti
dec
std
mov
cs
into
js
dec
insl
pop
xchg
adc
mov
test
pop
aas
jle
xor
jae
cmp
jno
leave
pop
stos
rcrl
adcl
mov
shl
jmp
mov
mov
test
mov
and
adc
adc
mov
or
aas
xchg
adc
add
jno
lahf
sub
inc
sti
lret
and
adc
inc
lea
push
and
cmp
adc
mov
add
push
sbb
jno
clc
dec
pop
iret
jno
orl
mov
hlt
aaa
repz
and
aaa
outsl
xor
xor
sti
out
nop
add
repz
fcoms
mov
xchg
or
add
jb
xlat
pop
cs
mov
jb
xchg
dec
insb
sub
lcall
xchg
push
pop
xor
mov
loopne
dec
mov
sahf
xlat
inc
test
push
and
in
inc
xchg
push
or
js
inc
test
adc
out
xchg
int3
cmpsl
movsl
add
scas
jae
push
in
cs
frstor
dec
mov
push
adc
fidivrs
mov
jnp
lods
stc
or
or
dec
por
mov
loop
jp
imul
les
sub
ret
push
insl
outsl
insb
add
or
xor
jmp
out
jge
dec
sbb
inc
dec
je
and
cmpsl
sti
ret
fists
inc
jns
inc
mov
mov
les
pushf
out
cmp
addr16
and
fisttps
lods
ds
outsb
inc
mov
mov
mov
or
sub
sbb
inc
add
push
testb
cmp
mov
into
pop
inc
jno
stos
scas
lock
les
cli
pop
mov
shll
or
and
xchg
jb
adc
daa
add
enter
dec
cltd
daa
adc
or
cli
inc
or
incb
movsb
inc
fmul
mov
test
mov
pop
dec
pop
or
in
xor
mov
push
insl
and
xor
loop
dec
rcr
lods
fsubrs
dec
arpl
shl
and
mov
fwait
imul
inc
adc
les
in
arpl
nop
push
fsts
scas
arpl
xor
dec
daa
jle
mov
popa
xor
jmp
xchg
cmp
sbb
cmp
iret
insb
mov
clc
sub
fsubr
adc
jo
ss
aaa
jle
pusha
fwait
cvtpi2ps
pop
aad
push
lcall
cmp
sbb
cli
mov
fdivp
cmc
call
pop
xchg
pop
shl
test
lea
movsl
popf
fistpll
xchg
int
jne
std
daa
popa
mov
xchg
push
aas
sub
adc
push
inc
jle
outsl
dec
filds
mov
and
fistl
bound
shll
sahf
jecxz
jne
mov
adc
lods
dec
fbstp
and
sub
cmp
cmp
cmp
fmuls
imul
out
mov
imul
dec
repnz
or
mov
mov
in
es
stos
or
cmp
test
inc
sub
or
sub
sbb
lock
sti
xchg
mov
int
fs
dec
xchg
dec
xor
adc
sbb
add
fcomi
pop
sub
jl
bound
jge
in
sbb
push
jno
cmp
xchg
sbb
addl
sub
imulw
adc
mov
add
adc
mov
push
mov
xchg
jmp
pushf
cmc
xchg
push
arpl
aad
test
xchg
sub
mov
jo
ljmp
fmuls
sub
sahf
mull
stc
inc
ja
mov
pop
push
rdpmc
mov
jp
jge
fsubr
cli
je
or
outsb
cmp
add
add
jmp
push
ja
or
push
dec
lcall
cmp
mov
int
pusha
mov
push
sbb
cmpsb
adc
xchg
pop
cmpsl
dec
cwtl
adcl
cmpsb
adc
push
repnz
mov
ret
dec
lea
jo
sub
mov
add
call
loope
xor
jbe
cmp
pop
lcall
sub
movsb
add
inc
stc
inc
icebp
stc
inc
pop
lds
lahf
fs
test
xchg
ret
out
outsl
pop
jns
add
cs
rcrl
je
ret
lcall
fcomps
sbb
xchg
stos
xchg
std
sahf
xchg
push
and
mov
sbb
js
test
pop
nop
mov
cmpsl
ret
dec
pand
int3
test
ficoms
mov
movsb
xor
sbb
cmpsl
mov
adc
lods
stos
lret
js
inc
lea
jl
je
in
insl
adc
dec
jge
add
push
lods
gs
mov
xchg
mov
jge
mov
sbb
jne
or
imul
repz
lods
jae
in
rol
xlat
adc
outsl
lock
les
pop
mov
adc
xchg
xor
out
xchg
pushf
rorb
stc
fnstsw
mov
lods
stc
sbb
pop
js
xor
ljmp
sahf
or
push
adc
mov
push
notl
jo
xchg
fbld
pop
addr16
xor
mov
push
adc
pusha
scas
sub
xchg
push
andl
push
or
dec
or
xor
adcb
jmp
cmpsb
js
imul
sbb
dec
pop
lret
adc
xor
mov
mulb
and
push
mov
inc
pop
movsl
push
gs
jnp
sub
movsb
mov
cmp
xor
shr
aaa
dec
and
lcall
out
mov
aam
sbb
sub
jle
mov
divl
sub
in
in
insb
in
fdivrl
push
sub
or
mov
push
mov
fcoms
idivb
xor
sub
cmpsl
loopne
pop
bound
sahf
pop
cmp
inc
ljmp
dec
push
in
xchg
testl
pop
subl
adc
ror
mov
lock
and
push
sub
jmp
nop
adc
jns
inc
cmc
mov
inc
notb
lret
jae
movsl
add
jp
arpl
test
and
icebp
adc
adc
adc
jp
jmp
pop
jp
mov
xor
jle
inc
jle
clc
sahf
out
movsb
fstps
xchg
cs
mov
lds
lock
inc
fstps
mov
test
mov
lcall
icebp
insb
ret
int
pop
pop
xor
scas
dec
jb
out
mov
insb
in
mov
push
lea
mov
jl
fsubr
bound
js
cmpsb
int
lds
icebp
ja
pop
movsb
cmpsw
dec
cs
testb
fistpll
fcomps
mov
mov
jne
cmpsl
aaa
xor
xor
icebp
fstps
sahf
adc
push
lods
or
data16
scas
lret
in
es
das
sub
cmp
push
movsb
pop
mov
arpl
pop
mov
loope
cmp
clc
sbb
pop
jecxz
xchg
int
inc
inc
push
leave
push
adc
pop
cmp
and
cmpsb
jp
dec
or
mov
xor
xchg
adc
cld
stos
test
fsubrs
clc
xor
sbb
pop
lret
dec
jmp
fcmove
jb
cwtl
mov
mov
cmpsl
shrl
lahf
push
cmpsl
xchg
push
adc
cmp
stc
and
lahf
jae
xchg
jmp
lea
leave
scas
cmp
pop
push
gs
sbb
popa
loope
push
jl
pop
outsb
jbe
jbe
pushf
xchg
jae
daa
mov
inc
push
push
addr16
cmp
inc
sbb
push
mov
xchg
pop
int
lods
cli
aaa
or
repnz
nop
inc
xor
add
fcmovb
aas
arpl
es
roll
pop
pop
jg
addr16
addr16
hlt
je
mov
popf
jb
or
fs
mov
add
xchg
popa
pushl
cli
fwait
push
add
mov
mov
lret
jecxz
in
fldenv
cmpsb
sbb
ret
xchg
adc
bts
and
das
fidivrs
xchg
hlt
jp
notb
sub
addl
mov
mov
push
rolb
jne
cld
scas
dec
adc
dec
jo
addl
push
cmp
mov
daa
mov
pushf
scas
and
mov
call
std
pusha
insb
inc
lods
cmp
inc
cmp
or
mov
call
iret
or
push
pop
push
sub
pusha
xor
subb
adc
iret
push
xlat
mov
inc
imul
add
bound
push
mov
cmp
lret
gs
stos
fildll
xchg
int3
adc
movsb
inc
jbe
push
mov
imul
inc
push
or
mov
fs
popa
add
or
loope
jnp
into
pop
pop
mov
repz
add
jb
push
mov
jb
cmp
push
mov
lock
sbb
sub
ret
test
xchg
adc
pop
adc
dec
das
mov
scas
icebp
or
mov
mov
mov
jecxz
sbb
imul
in
test
loopne
xchg
xchg
or
lret
dec
cmc
les
pop
ficoml
and
xchg
cmp
push
insl
out
in
mov
pop
in
pop
sub
ret
out
xchg
push
xor
outsl
adc
mov
push
mov
loope
loope
jp
mov
std
cli
shl
jge
or
popa
push
fdivrl
cmpsb
pop
sbb
sbbl
pop
jmp
add
cmp
cmp
adc
sarb
loop
sbb
or
cmp
sub
dec
into
andb
sbb
inc
cmp
scas
or
cmpsl
pop
mov
cmp
jecxz
and
cmpsb
in
mov
shl
dec
push
push
mov
or
pop
and
test
enter
push
cmp
pop
mov
rcrb
jmp
bound
inc
stos
fcom
in
xchg
bound
dec
lahf
call
aas
es
imulb
jmp
int
jb
and
lds
loop
dec
fwait
ja
lock
and
shr
mov
cltd
jge
ss
lds
mov
mov
fiadds
pop
test
mov
dec
movsl
outsl
cmpsl
movsl
aaa
xorb
loop
xor
leave
adc
loopne
rol
xchg
cmpsl
xor
xlat
lock
cmp
jmp
xchg
jne
sub
in
sub
xor
lods
xchg
addb
xorl
das
xchg
mov
sbb
xor
sub
js
push
mov
mov
test
stc
or
mov
fidivrl
in
add
sbbb
cmp
mov
or
push
out
inc
xchg
pop
mov
mov
sub
xorb
ja
lcall
push
movsl
pop
stos
lret
dec
xchg
adc
sub
mov
fwait
out
stos
outsl
xchg
add
das
sub
and
js
test
test
ds
and
jb
pop
test
into
aad
lahf
sti
push
sbb
daa
jb
jl
shll
sti
pop
pop
into
in
cmp
xor
scas
ficoms
adc
test
pop
aaa
cmp
iret
jle
call
cmp
xor
push
insl
mov
cltd
std
sub
inc
sub
mov
out
pushf
movsl
or
bound
inc
push
cli
pop
push
loope
iret
pusha
je
lret
add
out
pop
icebp
lds
mov
cs
dec
fstpt
mov
sbb
adc
nop
popf
pop
mov
push
inc
in
dec
push
dec
cmp
pop
mulb
jno
push
fmul
mov
daa
mov
push
and
test
dec
enter
mov
fmull
stos
add
dec
ljmp
or
fisubs
adc
mov
sahf
out
xorb
lahf
xor
xor
aaa
stc
mov
lret
mov
shrl
and
mov
out
xchg
mov
fwait
or
aam
xchg
pusha
aas
shlb
in
fnsave
sbb
lock
std
test
repnz
sbb
mov
mov
add
sbb
push
fucomip
lahf
imul
push
leave
mov
sub
sub
std
xor
jmp
sahf
jge
xorb
and
mov
sub
add
