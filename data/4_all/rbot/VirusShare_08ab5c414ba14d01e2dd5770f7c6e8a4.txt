sub
test
rcrb
jb
jb
pop
jo
hlt
push
push
push
sub
aad
and
mov
mov
outsb
stos
pop
out
nop
push
mov
pop
pop
mov
jns
or
fidivrs
lahf
dec
movsl
data16
cmp
int3
sub
pop
idivb
push
cmovs
jecxz
push
shl
sbb
jb
nop
inc
ret
xor
adc
icebp
and
dec
jne
scas
xchg
and
rcl
push
add
xchg
mov
out
add
mov
lret
scas
sbb
mov
mov
xchg
mov
lods
fsubrl
mov
xor
cs
fwait
movsl
and
jecxz
ficomps
repnz
std
std
mov
ss
adc
fiadds
mov
pop
stc
aas
mov
sbb
jns
mov
add
in
cltd
jle
int
pop
gs
aas
jns
in
push
push
push
vcvttss2si
add
xlat
call
cmp
and
or
mov
push
mov
aaa
adc
fidivrl
loope
mov
jno
js
xchg
push
mov
xor
inc
pop
sbb
jb
in
cmp
pop
ss
rorb
pop
lods
das
ds
jns
movsl
popa
stos
enter
xor
out
fdivrs
das
sbb
cwtl
add
in
ljmp
rorl
jg
pop
rcrl
stos
sub
xor
fcoms
cmp
ficoms
in
js
ss
xor
push
add
mov
stc
sbb
or
movsl
jae
sbb
ljmp
flds
cmpsl
rcr
jnp
pop
xor
sub
in
mov
add
jo
push
add
push
push
popa
xchg
push
sbb
and
pusha
cmp
dec
aaa
pusha
lret
js
shl
or
xchg
fdivs
adc
lret
mov
fs
fidivrl
jbe
popa
ljmp
in
addr16
mov
movsb
call
mov
sub
pop
mov
xorb
fwait
xchg
pop
pop
rep
iret
icebp
mov
jb
sbb
js
sub
inc
xor
sub
and
pop
int
in
mov
lock
sub
sbb
aam
jnp
and
cmpsb
mov
ljmp
les
pop
jnp
sub
mov
push
adc
iret
fwait
aaa
mov
js
push
test
mov
adc
cmp
mov
popf
orl
pop
jno
ss
push
xchg
fldenv
popl
mov
jae
icebp
lods
xchg
flds
shr
and
xlat
inc
jae
ficomps
pop
dec
sbb
dec
rcl
es
jecxz
or
cld
and
and
lret
pop
dec
or
pushf
dec
in
fistps
testb
icebp
out
scas
xlat
dec
xchg
xor
pop
sub
cmpsb
push
adc
jbe
mov
loopne
cmpsb
fcoml
mov
mov
into
sbb
bound
jmp
mov
sbb
pop
mov
pop
arpl
pop
mov
fldl
xor
in
mov
leave
inc
out
loop
shlb
lods
mov
mov
mov
mov
adc
pop
inc
push
insb
xchg
jg
fldl2e
xor
dec
hlt
or
inc
dec
xor
sbbb
mov
add
jp
cmpl
ss
adc
cwtl
icebp
negl
or
stos
mov
or
stos
clc
movsl
mov
xor
sub
pcmpeqw
dec
lea
repz
sub
lods
imul
js
insl
out
and
scas
jp
jp
das
add
ret
scas
xor
sbb
jae
repz
xchg
dec
outsb
jne
mov
jg
mov
inc
leave
adc
sbb
xchg
add
mov
adc
pop
push
xlat
sub
addb
outsb
es
loop
inc
mov
int3
xorl
pop
jno
sbb
repnz
lds
mov
or
jbe
lea
sbb
jmp
mov
push
imul
push
test
hlt
push
lret
sub
gs
adc
loopne
into
inc
mov
loopne
push
xchg
dec
push
fstpt
fcompl
and
pop
scas
jns
sahf
sahf
inc
jnp
and
mov
jne
cs
cld
popf
sbb
stos
orl
je
xchg
es
fwait
mov
xor
std
cmp
mov
xchg
mov
pop
push
fimuls
sahf
movb
leave
lcall
dec
or
dec
cmc
push
xor
icebp
clc
push
mov
sbb
mov
imul
inc
idivb
and
mov
add
xor
inc
xchg
inc
push
jns
dec
dec
mov
and
pop
lret
dec
inc
and
inc
inc
dec
jbe
cmp
xchg
mov
fildl
xchg
rclb
xor
clc
add
scas
idivb
lcall
shll
dec
data16
jmp
pop
push
mov
fadds
sub
sarl
adcb
cmp
adc
mov
xlat
repnz
inc
push
loop
lcall
mov
es
cs
clc
outsl
shrl
cmpsb
sub
xor
inc
sub
loopne
push
and
lret
int3
lcall
mov
lods
dec
cmp
lret
inc
addb
adc
cld
ret
andl
loope
mov
subb
dec
mov
out
lret
sub
sbb
pop
cld
fs
mov
push
test
and
test
push
sbb
xchg
push
pop
sub
mov
lods
shll
les
ss
add
add
test
out
cmp
cmpsl
dec
sbb
xchg
pop
dec
cltd
les
cmp
or
cmc
fwait
imul
sub
popa
or
push
lcall
or
xorl
sti
mov
xchg
fimull
aas
add
cld
fnsetpm(287
mov
nop
cmp
dec
add
cmpl
or
push
mov
sahf
jg
sub
jge
jbe
push
lret
out
fbstp
mov
push
in
sub
mov
inc
and
add
jae
test
mov
cmp
insb
outsl
cmp
in
push
enter
xlat
aaa
mov
imul
cli
into
stos
movsb
add
jp
pop
inc
ds
xor
lds
out
adc
jbe
or
or
push
adc
aaa
addr16
jb
mov
pop
mov
into
addb
lds
sbb
xor
pushf
mov
insl
jae
or
sbb
xchg
push
add
inc
icebp
xchg
orl
jle
jge
gs
ret
dec
dec
sbb
xchg
fdivl
mov
fsts
testl
fiaddl
shl
jnp
stos
jae
sti
xor
lods
lret
adc
adc
ljmp
test
jo
jb
ret
fcomip
or
cmp
in
sbb
or
addr16
inc
loope
add
cld
jne
or
push
cli
inc
lds
push
adcb
cs
mov
inc
mov
cmp
in
dec
icebp
in
iret
cmp
sarb
mov
into
imul
aas
lods
lret
daa
int
adc
adc
sbb
int
aas
adc
adc
xchg
push
cltd
xchg
mov
loopne
jno
mov
xchg
jle
mov
repnz
and
notl
popa
test
push
leave
sar
pop
call
xchg
stos
cmp
sbb
in
fcmovnbe
add
mov
xchg
xchg
sub
push
pop
mov
icebp
mov
adc
mov
movsb
push
cmp
push
lock
mov
lock
out
add
pop
gs
in
int3
and
popa
lods
xchg
and
fwait
pop
dec
and
mov
mov
adcl
adc
lods
ss
aam
icebp
je
or
subb
shlb
add
sar
lea
test
mov
into
push
sub
addb
jns
lods
cmp
jg
ss
call
jns
or
andl
rclb
push
aam
sahf
std
push
fdivs
push
xor
sub
rorb
add
inc
dec
imul
sbb
sarb
or
arpl
scas
push
xchg
lock
leave
push
pop
repnz
push
sub
fs
pop
int
fsubrs
pop
jnp
addl
imul
jbe
int
push
call
or
xlat
shll
in
cli
shl
subl
stc
aas
notb
inc
pop
fldlg2
dec
or
jns
mov
loope
cmp
scas
cmp
out
push
mov
cmp
jno
sub
imulb
fs
sahf
dec
xchg
cwtl
push
int3
xor
imul
sub
ret
cmc
lcall
xchg
jae
xchg
cmp
xor
adc
lock
and
outsl
sbb
imul
sub
std
sahf
adc
movsl
xchg
sti
popf
and
out
xchg
inc
and
mov
mov
mov
in
xchg
mov
and
mov
les
ljmp
popf
mov
test
loopne
subl
test
fidivl
dec
repz
lahf
imul
popa
decl
add
mov
ja
popa
aad
xor
in
sti
xor
xor
iret
bnd
adc
dec
or
testb
mov
cmpsb
and
pop
jnp
and
div
mov
lds
rcl
cmp
xchg
bound
sti
mov
push
sti
push
leave
xlat
jae
sub
fidivrl
ret
fldcw
sub
push
bswap
mov
clc
movsb
jle
inc
js
add
iret
mov
test
sbb
loop
aas
inc
fs
cmp
xchg
in
mov
push
daa
shll
imul
out
pop
cmp
or
mov
fidivrs
add
cld
loope
xor
ds
stos
pop
xor
push
inc
mov
pop
or
pop
jmp
xchg
inc
cmp
enter
pop
lods
adc
sahf
inc
xchg
rorb
mov
popf
stos
sti
dec
es
fwait
sbbl
mov
outsl
stos
cmp
and
fst
add
fists
nop
push
mov
lahf
push
test
push
sub
xor
mov
and
push
nop
test
dec
lock
push
iret
js
mov
xchg
outsb
push
xchg
and
pop
push
inc
lods
cmpsl
add
or
ret
xchg
enter
cltd
orl
aad
leave
testl
sub
sbb
jle
push
addl
cs
hlt
xchg
mov
add
push
fistps
ror
stc
cmpsl
lret
mov
movq
add
ret
push
rcr
push
fsts
ss
mov
rorb
movsl
mov
jmp
int
fnsetpm(287
sub
loope
in
xchg
push
mov
xor
pop
or
repz
jbe
jle
dec
mov
test
adc
and
and
mov
mov
mov
jo
aam
enter
test
daa
jne
inc
mov
enter
push
out
lret
xchg
lods
xor
fs
nop
or
es
clc
insl
lods
movsb
pop
fisttps
xchg
cli
mov
mov
adc
mov
mov
pushf
push
dec
lea
sbbl
scas
mov
push
add
mov
aad
push
pushl
mov
push
movsl
out
lcall
into
sub
mov
or
test
or
cmp
push
and
mov
ds
jg
xchg
mov
lret
jl
sti
pop
and
push
cmp
jo
mov
ja
dec
cmp
lds
pushf
fsubrs
jmp
lds
loope
dec
cmc
cmp
sub
shlb
outsl
cld
jno
add
sbb
in
and
hlt
mov
xchg
xor
jle
cmp
jecxz
test
clc
lds
push
inc
adc
mov
pop
lods
lret
push
push
mov
ljmp
call
ja
popl
aas
out
out
insb
sub
lret
insb
lods
jbe
xlat
mov
sub
shlb
push
negb
gs
pop
pop
jns
dec
das
jo
mov
inc
out
sub
stos
lods
mov
sahf
je
pushf
andb
hlt
inc
iret
and
pop
pop
dec
xor
jl
leave
stc
adc
stos
inc
pop
cmp
dec
out
lea
daa
int
mov
daa
pop
adcb
cs
push
js
cmp
into
or
decb
scas
push
adc
inc
dec
test
adc
adc
jg
and
loop
jns
inc
nop
jae
mov
out
gs
into
dec
add
jbe
adc
pop
ljmp
adc
fsts
pop
mov
add
and
pop
or
mov
sahf
pop
pop
add
lds
push
push
adcl
lcall
jbe
and
jge
test
gs
int3
xor
xchg
jecxz
and
jl
inc
sbb
sub
fdivl
dec
leave
pop
mulb
in
xchg
mov
mov
mov
insl
xchg
imul
xchg
sbb
xor
inc
sub
and
cmp
pusha
add
ja
in
jae
cmc
pop
fisubs
bound
movsl
and
inc
mov
popa
or
pushf
rcll
push
cmpsb
xchg
sub
sub
push
xchg
pop
popf
pop
jmp
outsl
xor
sub
xor
je
mov
pop
int
mov
in
ret
ja
cmp
mov
push
insb
lods
jg
cmc
or
sbb
sahf
cmp
notb
cmp
adc
xor
stc
jbe
daa
out
xor
cld
fnsave
add
cmp
push
sbb
xchg
mov
sub
je
cltd
xlat
mov
cmpsl
jge
cmp
sti
or
sbb
out
les
sub
xor
inc
inc
js
out
jecxz
sti
fdivrs
inc
mov
xor
sbb
cmp
mov
int
test
insb
inc
sub
xchg
dec
jb
sahf
dec
push
icebp
and
incb
add
int3
dec
mov
call
push
fwait
inc
or
cmpsl
scas
sub
mov
popa
ffreep
insb
jmp
ror
fistl
lock
mov
fisubrl
sahf
insb
xchg
aas
cs
loop
and
cmp
push
fucom
cwtl
mov
pop
dec
mull
jg
pop
aas
iret
dec
xor
sub
cmp
inc
fwait
rcl
mov
fidivs
adc
mov
lods
lods
bound
sub
pop
int
js
in
jl
pop
ds
cld
jb
or
sbb
divl
mov
mov
repz
divb
jae
mov
xchg
call
pusha
in
mov
cmp
scas
mov
and
pushl
shrl
jo
jp
push
mov
out
dec
outsb
daa
mov
xchg
dec
push
xor
mov
decb
adc
mov
jbe
dec
and
ds
jle
lock
in
sub
fsubl
mov
xor
int
inc
sti
push
clc
sub
adc
and
je
scas
cmc
xorl
fisubl
sbbb
ficoml
call
inc
std
push
fcomps
pop
xchg
lods
jge
orb
fdivrs
add
push
subb
in
pushf
jmp
push
jae
lahf
push
jg
push
jne
cld
add
push
fadd
loope
push
stc
aad
repnz
repnz
stc
gs
add
dec
jmp
push
xor
dec
mov
daa
cwtl
jae
jae
aad
jnp
inc
cmc
pop
stc
mov
and
cwtl
fnstenv
sub
push
aad
or
ljmp
out
mov
ja
mov
pop
dec
mov
mov
divl
movsl
xchg
cltd
mov
pop
aad
cmpb
sbb
cmp
fiaddl
adc
xchg
add
sarb
dec
gs
cmpsb
pop
and
lahf
xchg
and
cmpsb
mov
push
push
mull
jl
dec
sub
in
sbb
xchg
fs
cmp
jmp
and
into
adc
clc
jle
incb
test
insl
mov
loope
fnstsw
popf
xor
iret
es
std
mov
icebp
sahf
jmp
push
push
lahf
jmp
shll
add
mov
jae
int3
inc
sub
pop
add
aaa
sbb
shlb
fistpll
in
int
add
adc
sbb
mov
insb
mov
cmp
into
cli
mov
push
dec
jne
mulb
dec
sbb
scas
loope
inc
lds
and
pop
and
xchg
add
cmp
pop
popf
sbb
test
dec
test
aas
jecxz
jae
xchg
flds
mov
pop
jb
mov
fwait
mov
push
lods
sbb
gs
pop
fdivr
insb
fidivl
pop
mov
mov
sar
push
xchg
or
pop
pop
push
jecxz
rcrb
and
aam
xlat
jp
dec
es
std
loop
cmp
fcomp
sti
sub
sub
mov
push
mov
es
mov
add
mov
cmp
div
xchg
add
sahf
daa
jns
cmp
mov
mov
dec
popl
and
jae
in
aam
xor
js
cld
sbb
cmp
test
dec
outsl
or
cmp
push
or
add
out
faddl
scas
es
jne
inc
fs
inc
aam
mov
sbb
lcall
push
lcall
mov
hlt
jbe
call
mov
push
mov
clc
and
mov
test
mov
enter
mov
mov
mov
fnstsw
enter
xor
add
movsb
insl
dec
ja
adc
mov
cs
mov
xchg
std
push
fists
pushf
jnp
daa
dec
pop
cli
add
and
orb
cli
jle
gs
push
movl
push
push
push
jecxz
sahf
div
data16
test
pop
in
cmpsb
cwtl
data16
fs
push
adcl
in
push
lods
xor
jae
push
lret
aam
xor
pop
push
sub
fwait
xchg
and
jae
aam
stos
sub
stos
jne
lods
pop
push
mov
stos
aad
pop
sbb
or
out
shl
add
sbb
inc
sahf
out
ss
mov
xchg
xchg
rol
in
dec
scas
lock
dec
and
bound
or
out
into
pop
add
enter
jge
adc
stos
fdivr
mov
int
or
in
scas
mov
push
loopne
ficomps
mov
shrl
jp
inc
lcall
int3
mov
ret
imul
mov
inc
sub
scas
xorl
or
xor
push
add
cltd
les
push
or
xchg
mov
or
into
fisubs
loop
jbe
in
sbb
mov
push
sbb
out
inc
and
cltd
mov
xchg
nop
add
push
mov
adc
add
insb
dec
idivl
fbld
push
mov
jno
movsb
into
sbb
leave
insb
and
mov
mov
lahf
fldt
in
push
mov
repnz
inc
inc
and
jg
aam
or
adc
and
pusha
push
sub
stos
jp
cmpsl
mov
push
in
outsb
mov
into
adc
cmp
imul
iret
mov
inc
out
mov
test
mov
in
xchg
jl
and
popf
adc
dec
mov
stc
or
imul
mov
rolb
test
fwait
xchg
adc
and
add
ja
inc
and
xchg
sbbb
es
jae
sarl
mov
cmp
cmp
testb
cltd
cwtl
inc
mov
push
mov
sbb
imul
add
mov
sbb
imul
ret
pop
push
xchg
xchg
cmpsl
sbb
mov
in
ljmp
out
ret
arpl
scas
xchg
pop
inc
adc
mov
ret
jo
movl
mov
mov
push
xchg
pop
or
movsl
bound
pop
shlb
lea
xchg
or
enter
dec
cmc
xchg
jae
inc
jle
in
mov
int3
push
fwait
movsl
and
mov
lret
jbe
sub
cs
and
mov
lcall
and
loop
xor
mov
push
ret
mov
pop
pop
or
ljmp
pop
jg
mov
in
mov
jb
lods
lods
pop
je
inc
stos
int3
hlt
fisttps
aam
lea
adc
push
ds
xor
stos
dec
sub
mov
adc
mov
stc
sub
mov
decb
lods
outsl
loop
push
mov
mov
and
fnstcw
stos
in
in
and
clc
mov
roll
mov
sbb
test
fdivrs
rolb
outsl
and
mov
push
or
or
dec
fistps
adc
inc
and
lret
push
lret
lods
test
je
data16
pop
lar
push
movsl
mov
nop
inc
xor
jo
out
push
pusha
fstl
xor
pop
sub
in
ss
mov
push
push
xor
push
jne
addr16
sti
cmp
pushf
fisubl
xchg
pop
push
xor
xchg
aaa
popf
and
mov
test
dec
ljmp
push
or
imulb
mov
out
fcmovne
movsb
out
and
xor
bound
nop
sbbl
add
jecxz
xor
mov
add
les
cltd
push
and
jne
push
add
mov
mov
fs
mov
xchg
outsb
cmp
add
aaa
push
push
pop
icebp
mov
in
std
sub
outsb
fsub
xor
fwait
mov
cld
jae
adc
dec
xlat
adc
push
dec
insl
push
pop
push
icebp
push
jecxz
into
in
xchg
pop
pop
or
adc
shlb
rclb
hlt
test
cmp
xorl
sub
inc
mov
add
rcrl
sub
lret
pop
push
int
push
jmp
mov
xchg
addr16
incl
mov
sub
outsb
lcall
sbb
push
sbb
mov
jno
jno
jbe
xor
test
and
cmp
mov
mov
and
subl
add
cmp
adc
daa
push
mov
je
and
addr16
test
call
pusha
xor
inc
test
jecxz
shlb
push
inc
adc
js
rsm
sub
adc
jnp
insl
jne
jmp
pop
test
in
add
jp
cmp
sbbl
add
mov
clc
ja
movsb
fucomi
push
ja
jg
jne
sub
aam
ficomps
movsl
iret
dec
mov
dec
lods
addr16
es
insb
loopne
fsts
repnz
aam
fbld
lret
jle
push
iret
out
xor
scas
pop
xor
fwait
add
push
hlt
push
test
test
stc
popf
lea
sbb
pop
incb
imul
adc
mov
inc
hlt
addb
mov
jnp
adc
adc
or
or
jmp
roll
std
das
mov
clc
dec
or
jb
pop
jle
jge
insb
adc
sbb
loopne
jne
cltd
mov
or
push
push
pop
xor
mov
add
sarl
stos
fwait
xchg
scas
or
sbb
ret
or
push
std
lods
and
or
scas
out
push
mov
sub
test
add
mov
and
and
jmp
and
in
push
shlb
cmp
lahf
daa
push
pop
cmc
jae
loope
cmp
sbb
int
daa
rolb
pop
ja
aaa
lock
stc
clc
les
dec
ja
pop
test
ret
adc
dec
inc
hlt
ffree
ss
insl
xchg
jge
fstl
mov
push
movsb
push
std
xor
adc
pop
aad
leave
or
leave
aaa
cmp
lea
adc
das
push
sti
sahf
ja
sbb
data16
sub
mov
push
ss
sbb
jmp
insb
gs
mov
cmp
and
mov
xchg
dec
pop
xchg
jmp
push
add
cmpsl
mov
pop
fstpt
add
adc
add
andl
pushf
mov
mov
lcall
and
or
ja
shl
dec
mov
fnstenv
mov
push
or
push
stos
fdivs
popf
insb
mov
dec
cmp
scas
test
push
push
push
das
add
inc
or
jnp
outsl
cld
dec
test
sti
negl
mov
ret
xchg
push
pop
test
fcmovnb
inc
ret
daa
into
aam
adc
loope
and
mov
xlat
aaa
aas
jmp
sub
rcrb
adc
add
lret
or
ja
cmp
sub
or
pop
mov
sub
push
mov
mov
int3
adc
movsb
mov
les
push
int
ljmp
mov
ret
and
xor
push
xchg
stos
cmp
dec
pop
push
add
xor
or
jno
mov
or
mov
mov
jbe
jno
dec
or
stos
jge
jno
jbe
cmp
push
outsb
dec
cmpsl
leave
inc
shr
cmc
sbb
fstpt
data16
iret
nop
push
push
mov
push
xchg
cmp
test
clc
popf
inc
or
push
xchg
into
cwtl
lcall
inc
mov
clc
jae
in
mov
sub
xor
idivl
or
push
daa
jbe
xchg
mov
cmp
ljmp
std
ret
cmp
rcrl
call
std
jb
adc
mov
adc
dec
mov
jne
xchg
pop
sub
jne
push
test
sbb
pushf
lea
lret
sbb
imul
mov
adc
xor
imul
inc
mov
mov
pop
push
js
push
loope
add
ret
adc
xchg
imul
mov
arpl
daa
dec
add
or
loopne
xor
andl
das
and
daa
mov
pop
pop
inc
insl
push
and
and
repnz
fidivl
int3
enter
dec
les
mov
adc
test
cmc
loope
data16
mov
aam
mov
add
xchg
das
sbb
test
in
les
aad
cltd
xchg
jl
sbb
adc
cli
mov
fcoms
cwtl
mov
push
dec
lds
enter
add
adc
aam
dec
inc
je
push
dec
jecxz
jmp
mov
cmp
jo
sbb
aaa
or
std
sbb
inc
aad
mov
pushf
enter
dec
frstor
fsubrl
mov
push
mov
dec
xchg
mov
test
outsb
add
js
sub
gs
cmp
dec
out
xchg
or
jno
imul
sbb
pop
jo
popl
int
cmpsl
ds
cmp
mov
std
push
xor
fdivrs
movsb
sbb
sub
cs
jbe
cmpsb
imul
sub
dec
xor
lea
mov
push
mov
mov
inc
jae
std
mov
js
fwait
lock
and
xchg
inc
bound
push
pusha
xor
pop
ljmp
cwtl
addr16
lods
jle
add
add
inc
loop
inc
dec
es
test
ljmp
je
pop
cltd
faddp
ds
dec
and
xchg
mov
outsl
cmp
add
or
and
test
jno
pushf
push
mov
and
clc
pop
cmp
dec
rcll
leave
pop
mov
stos
or
jge
test
sub
push
push
push
pushl
sbb
scas
jno
pop
cmc
lahf
dec
xchg
xchg
arpl
or
mov
aas
push
orl
outsl
dec
addr16
or
mov
pop
enter
cld
mov
push
hlt
jno
and
jbe
mov
push
add
mov
rcl
scas
rcrl
sbb
orb
test
or
mov
inc
in
stos
int
mov
out
push
fwait
mov
pusha
insb
in
mov
push
mov
mov
sbb
push
shlb
inc
pusha
pop
aas
sub
fnstenv
mov
mov
jae
jle
arpl
pusha
jmp
out
aad
ret
add
clc
or
repnz
loop
aad
mov
fsub
dec
les
inc
pop
call
fnstcw
repnz
fdivr
mov
ret
lock
clc
and
fdivrl
std
test
lock
mov
sbb
pop
pop
cltd
pop
popa
jg
sub
mov
push
clc
insl
cs
cmc
popf
xor
push
bound
pop
call
cmp
ficoml
ljmp
shlb
adc
jae
pushf
repz
mov
fprem1
je
adc
pop
pop
add
ja
xchg
jns
add
xor
xlat
push
xchg
mov
pop
add
shrb
pushf
popa
sbb
inc
jns
js
xor
dec
pop
mov
dec
cmp
fstps
pop
cmp
adc
insl
xorb
sarb
mov
loopne
mov
insb
inc
cli
jle
test
in
cld
test
inc
and
push
mov
repnz
fs
ss
cmp
scas
stos
mov
fs
add
jl
ss
sub
jae
mov
sti
inc
stos
cmp
test
jl
fwait
sub
test
pushf
shlb
cmp
sbb
push
lcall
cwtl
popf
dec
mov
popa
fwait
icebp
maskmovq
dec
jbe
testl
and
iret
fldl
js
test
mov
ret
cmp
ja
mov
sbb
aad
adc
testb
sub
mov
popf
ret
xchg
sub
je
push
das
push
adc
cmp
sahf
movsb
lods
dec
sahf
jl
mov
inc
insb
sub
fsubl
aad
jmp
add
in
mov
dec
jae
xchg
das
arpl
and
mov
outsb
inc
and
pop
mov
mov
pop
push
mov
pop
cmpsl
pusha
stc
xchg
jle
dec
ja
add
dec
xor
ja
scas
loop
cltd
pop
mov
stos
jle
pop
mov
hlt
mov
sub
mov
ljmp
rorb
or
jae
enter
add
addl
inc
dec
pop
xchg
cld
sahf
in
lahf
jae
adcl
in
sub
fidivrl
jmp
pop
jl
stos
mov
rcll
ss
xor
lcall
xchg
or
dec
pusha
call
fwait
in
fidivrs
mov
fbld
cmp
movsb
scas
pop
loope
xor
sbb
movsb
cmpsl
pop
out
shl
testl
lods
mov
inc
adc
test
or
repnz
clc
mov
pop
int3
cld
repnz
push
jo
mov
jae
sti
pop
jno
mov
jecxz
and
dec
xor
push
loop
jne
or
loopne
jne
int
push
inc
adc
es
nop
mov
jmp
lds
push
push
pushf
push
adc
imul
loope
aaa
icebp
fcmovb
cwtl
or
sti
pushf
js
lea
nop
cmp
loope
sahf
mov
lahf
sarl
push
xor
push
add
dec
call
fdivs
out
pop
cltd
ficomps
adc
sub
dec
jb
mov
mov
popa
cmp
sub
push
mov
push
or
daa
loopne
push
mov
shlb
mov
pop
mov
push
cmp
or
aas
adc
mov
jb
xchg
jmp
mov
mov
mov
or
pop
call
sub
sub
dec
inc
cmp
loopne
cmp
xchg
in
and
adc
movsl
lcall
arpl
mov
test
fs
std
test
jb
sub
xor
cmpl
mov
inc
cmc
test
aam
repz
stos
repz
mov
push
gs
lahf
sub
xchg
out
int3
push
ja
cmc
negb
jno
aas
out
sub
mov
dec
gs
frstpm(287
cmp
lahf
lods
lods
mov
cmp
xlat
insl
fstpl
mov
mov
push
pop
jecxz
add
decl
adc
xchg
cld
sub
aam
mov
mov
pop
adc
jg
mov
test
call
adc
int
adc
outsb
xor
in
sbb
mov
lock
in
aas
mov
mov
incl
mov
in
jp
jne
xor
sbb
push
out
jle
or
sarl
in
ds
neg
push
jecxz
std
xchg
call
mov
inc
push
cwtl
push
cld
adc
dec
jmp
mov
inc
sbb
add
daa
aaa
iret
pop
test
popf
fimuls
xor
add
mov
fdivp
lcall
stos
shl
cwtl
rorl
cmp
ret
sub
mov
mov
inc
sub
mov
fmull
adc
and
xchg
dec
or
es
mov
jo
in
pop
aam
cmp
clc
push
cmp
sbb
xor
jbe
xlat
add
jnp
insb
data16
jecxz
in
inc
xor
cwtl
fmuls
mov
fsubrl
clc
out
pusha
lods
push
xor
sbb
in
and
push
stc
ficoml
leave
in
test
movsb
jnp
or
add
cwtl
sub
dec
and
adc
lds
loope
mov
daa
into
xor
dec
inc
pop
les
outsb
cwtl
or
mov
out
lea
xor
cmpsl
mov
inc
push
lea
fwait
xchg
sbb
mov
pop
loopne
test
inc
lds
mov
mov
or
cmp
cmp
push
arpl
push
pop
aaa
movsl
sub
out
inc
mov
add
shlb
push
clc
pop
xlat
mulb
ja
je
outsl
gs
repz
sub
mov
xor
cltd
cmp
mov
jno
imul
ja
cld
int
or
dec
fistpl
xor
inc
scas
fwait
push
or
mov
push
mov
jge
fldenv
add
lret
mov
scas
add
cmp
repnz
xchg
xor
pop
mov
or
mov
insb
shlb
rcll
push
pop
inc
inc
mov
xor
aad
pop
adc
inc
sbb
daa
mov
sar
mov
fsts
jae
lds
mov
imul
jbe
lods
cmp
xchg
dec
dec
or
movsb
pop
push
mov
mov
mov
movsb
jmp
mov
and
dec
sti
repnz
sub
in
mov
cld
ja
mov
xor
fadds
aam
xchg
cmpsl
jns
and
and
xchg
mov
enter
pop
je
call
push
sub
jae
je
mov
xchg
sbb
add
or
daa
aad
aad
fst
xchg
aam
in
out
xor
rcrb
mov
stos
mov
adc
lea
sbb
cmpsb
dec
lea
pop
jmp
call
dec
pop
lahf
xor
cmp
fstpl
xor
out
cmpsb
fst
fdivl
mov
insb
push
inc
add
or
sti
jmp
adc
jg
push
fsubl
cld
sbb
and
dec
mov
inc
dec
xor
mov
jne
dec
jnp
lret
pop
sub
mov
cmp
popa
lcall
dec
sahf
inc
in
imul
adc
andb
mov
mov
imul
xor
test
pop
movsb
movsb
sahf
shlb
jge
scas
or
inc
and
rcll
xchg
or
jg
lods
movsl
stc
xchg
insb
fcoms
shlb
clc
aas
dec
sahf
jl
cmc
bound
lock
mov
add
mov
notb
push
mov
mov
or
ret
fcoml
fimull
mov
dec
lea
inc
push
jne
clc
adc
mov
ss
jo
jle
gs
xchg
inc
mov
push
ret
dec
je
pusha
pop
push
cmpsb
inc
or
js
clc
push
ficomps
xlat
ret
ret
cltd
imul
mov
adc
out
daa
push
cwtl
jg
push
xchg
mov
pop
ds
mov
pop
mov
xchg
inc
push
popf
inc
aam
pusha
mov
pop
popf
sbb
push
jmp
mov
out
pushf
mov
lahf
dec
ret
std
repz
xchg
in
mov
and
out
dec
addl
xchg
test
scas
aas
inc
adcl
and
lock
je
pop
jbe
mov
cwtl
imul
inc
dec
or
ror
jno
scas
lcall
add
imul
push
jnp
dec
push
adc
popf
into
push
cmc
and
out
in
push
lods
insl
js
mov
jno
jae
aad
add
in
in
shrl
neg
xor
mov
aam
sbb
push
or
fisttps
mov
xor
jecxz
es
outsb
jns
ret
mov
adc
xor
pop
xchg
fsub
mov
and
jp
cld
lods
popa
popf
jno
xchg
dec
mov
push
add
and
bound
sbb
adc
mov
push
gs
repnz
loop
imul
push
int3
icebp
stc
incl
icebp
sbb
dec
lds
push
cmp
sub
pop
cmp
push
loope
dec
mov
out
sarb
xor
jle
sub
xadd
test
adc
icebp
aam
mov
lahf
movsl
cmp
mov
lret
sti
pusha
mov
dec
sti
adc
adc
adc
test
or
movsb
xlat
mov
push
popf
jno
aaa
loope
jmp
int3
outsb
cltd
cmp
cmpsb
rcll
jbe
dec
push
or
sub
cmp
imul
cmpsb
daa
dec
adc
mov
jbe
jae
pop
cld
test
xor
fists
push
lea
arpl
push
dec
imul
pop
and
dec
fld1
xchg
sbb
cmc
inc
push
mov
arpl
jmp
or
push
sub
div
adc
faddp
or
fstl
mov
test
sarb
aad
xchg
inc
addr16
ljmp
fs
mov
xchg
iret
or
push
arpl
fucomip
test
in
cwtl
xchg
dec
and
icebp
rclb
mov
mov
es
movsb
or
cmpl
mov
jmp
lods
mov
out
cmpsl
mov
movsb
sarl
mov
in
jl
fs
pusha
int
sar
scas
fsubrs
adc
xor
push
pusha
aad
lock
push
scas
ja
dec
cmpsb
divb
xor
imul
outsb
fsubrl
cmpsl
sbb
lods
mov
mov
mov
mov
dec
inc
sbb
enter
mov
ljmp
in
add
and
mov
adc
push
mov
xor
lret
rcrl
lcall
xor
xchg
decb
arpl
jp
hlt
pop
repz
ret
lea
pop
bound
push
lods
xor
lock
std
mov
jnp
and
inc
pop
data16
test
int
lcall
sub
fsts
lcall
jp
sub
stos
test
mov
inc
and
cmpsl
mov
shll
cs
jae
inc
or
mov
out
fsubs
ficompl
incb
push
cmp
loope
inc
pop
into
mov
xor
imul
hlt
ljmp
pusha
je
out
sti
dec
fsub
xchg
jae
mov
add
or
xlat
mov
or
adc
ret
push
inc
gs
popf
xor
inc
mov
mov
jns
inc
add
addr16
shlb
mov
daa
movsb
test
out
dec
loope
push
out
push
pop
adc
int
xchg
ss
xor
hlt
jbe
pop
enter
inc
icebp
ret
mov
pop
push
gs
in
push
movsl
and
mov
scas
fsts
icebp
jp
in
dec
inc
cwtl
xchg
in
enter
push
add
inc
or
cmp
aad
mov
sarl
shl
jo
hlt
jnp
fucomp
es
xchg
adcl
xor
xchg
cmp
cmova
sti
daa
add
ss
pop
dec
testb
add
add
mov
push
and
andl
xchg
push
mov
dec
stos
xchg
aad
lcall
mov
add
movsl
cs
aaa
xor
adc
jle
cmp
xchg
inc
sub
or
lret
push
pop
inc
xchg
scas
xchg
insb
faddl
out
mov
repz
push
dec
outsl
adc
decl
mov
test
mov
dec
sub
out
jb
outsl
jns
push
fstps
into
mov
dec
je
es
jecxz
int
xchg
loop
cwtl
adc
outsb
xchg
jp
adc
jns
inc
out
call
lret
rcrl
mov
pmulhw
aam
xor
aam
adc
out
mov
push
lock
mov
xchg
insb
int3
fcoms
push
repnz
out
xchg
popf
push
mov
std
mov
data16
insl
pop
int3
xorl
pop
sbb
push
sub
lret
sub
call
cmp
cld
es
xchg
dec
sti
cld
addr16
or
sub
dec
sub
and
icebp
xor
jp
std
jg
mov
adc
jnp
cmp
jb
lret
out
jbe
add
pop
inc
xchg
pop
cltd
pusha
pushf
push
pop
or
and
cmp
scas
inc
das
jne
ret
inc
sbb
push
sbb
push
push
jle
inc
adc
mov
xor
not
add
push
inc
scas
enter
rcll
loop
dec
stos
lahf
sbb
mov
xchg
movsl
lods
fwait
cmp
insb
mov
add
adc
fiadds
imul
pop
mov
sbbb
mov
add
arpl
pop
stc
dec
inc
jg
xor
scas
shlb
cmp
pop
in
popa
out
adc
rcr
hlt
ljmp
imul
mov
orl
mov
mov
int3
pop
out
push
mov
or
mov
jne
outsl
mov
add
lcall
or
rcrl
sti
mov
xor
push
mov
sbbl
mov
dec
out
add
jge
xchg
cmp
xchg
mov
cmp
mov
sub
xlat
popf
in
pxor
or
jnp
cs
add
repnz
and
push
bound
insb
clc
pop
repnz
movsb
movsl
push
out
xchg
adc
sub
dec
inc
std
mov
popf
shl
fmuls
lret
repnz
data16
or
pop
fsubs
adc
out
push
addr16
mov
add
loop
inc
iret
fdivp
mov
lock
jl
sahf
or
rcr
out
sbb
xor
data16
xchg
dec
cwtl
loopne
push
stos
loop
sbb
sahf
and
movsb
frstor
mov
sub
adc
lret
push
aaa
adc
mov
xlat
add
jle
shlb
aad
push
or
ja
jle
xchg
loopne
mov
decl
or
and
fldenv
movsl
dec
xchg
dec
xor
inc
jp
dec
ja
sbb
push
xor
mov
testl
xor
ja
cmpsb
mov
lret
lahf
testl
popa
movsb
leave
adc
sub
outsb
lret
outsl
lods
jmp
push
test
shrd
xchg
stos
mov
das
popa
cmp
out
dec
movsl
mov
sbb
and
fistpl
cld
jne
orb
mov
cld
pop
push
mov
mov
sbb
iret
enter
rcpps
cmpsl
pop
mov
xchg
xor
in
adc
xor
mov
fdivr
fstl
lock
inc
or
or
test
jl
sbb
fwait
jne
jae
dec
sub
into
push
jno
cmpb
repnz
pop
negl
sbb
fidivrl
dec
sub
iret
imul
xor
je
xor
push
jge
icebp
das
mov
xor
data16
test
sbb
addb
bound
jo
jle
mov
mov
jg
cli
or
add
stos
ja
add
mov
cmc
xchg
les
mov
ja
pop
std
popf
xchg
pop
sbb
rorl
add
jmp
lret
pop
andb
push
popl
sahf
push
cmp
mov
pop
or
add
add
xchg
jge
sub
mov
xor
xchg
sub
pop
dec
loope
cmp
jle
jp
ds
jp
cmpsb
ss
in
ret
ja
daa
repz
sbb
les
std
aaa
lret
flds
or
out
inc
add
xor
push
mov
fwait
push
repnz
aam
adc
inc
cmpl
mov
xchg
mov
test
add
jmp
lcall
lds
mov
xchg
int3
jo
insb
pusha
lea
pusha
xchg
movsb
inc
aaa
mov
arpl
or
dec
sub
js
jg
test
adc
inc
jp
push
sbbb
stc
mov
es
inc
sub
sarl
xchg
rcl
push
dec
movsl
cmp
mov
ds
enter
icebp
mov
push
fldt
adc
in
and
sbb
xchg
in
push
mov
add
xchg
icebp
sub
dec
iret
and
mov
loopne
xchg
jecxz
jle
leave
or
pop
shl
icebp
xchg
sbb
dec
ds
adc
stos
cmp
out
pop
mov
dec
or
push
xchg
and
xor
xchg
jbe
or
sbb
cmpps
pop
insl
movsb
mov
scas
cmpl
stos
and
inc
mov
sbb
sti
les
out
bound
mov
jb
jo
stos
test
int
leave
insl
pop
push
lcall
lret
mov
inc
cs
adc
mov
shlb
jno
mov
adc
jge
xchg
in
lds
mov
outsl
dec
fisubl
xchg
mov
sbb
inc
movsb
lahf
pusha
fcmovnbe
sbb
pop
jno
enter
cmpsl
mov
cmpsl
movsl
dec
adc
or
push
mov
nop
js
xchg
xchg
push
push
bnd
lea
mov
xchg
mov
mov
into
decb
mov
mov
cs
jae
stos
std
inc
lcall
sbb
jg
dec
xor
aam
insb
mov
xchg
ret
jge
inc
idiv
sbb
rcrl
cmp
js
movsl
lods
xchg
sub
pushf
push
mov
mov
js
sub
out
xchg
fmuls
loopne
pop
mov
js
mov
add
xchg
les
mov
shll
inc
or
mov
mov
sbb
sahf
cmp
stc
fidivrl
cmp
or
push
xchg
lahf
or
fidivl
repz
test
xchg
inc
es
cmc
pop
fbstp
sbb
cmc
test
cmpb
in
push
jbe
jmp
mov
mov
jno
sub
mov
sahf
cli
cmp
shlb
sub
add
or
add
mov
lcall
push
sarb
mov
xchg
nop
jp
out
pop
mov
xorb
sub
add
fs
sbb
push
sbb
lods
mov
inc
je
imul
push
ficompl
movsl
lock
sbb
pop
ret
add
rcr
cmpsl
adc
stos
fstps
or
adc
out
jmp
jg
sbbl
std
fisubl
ds
insl
ds
push
or
fidivs
adc
mov
cltd
fdivl
cli
inc
pop
in
dec
pop
xchg
and
lcall
rorl
imul
push
dec
add
mov
aaa
scas
stc
xchg
icebp
js
shrl
shlb
fsubrs
xor
loope
push
cli
sub
std
loopne,pt
sub
addl
idiv
repnz
jl
cwtl
jne
fwait
rorl
leave
lcall
jle
pop
add
mov
repnz
cwtl
dec
ja
jae
push
mov
xchg
lcall
pusha
xor
outsb
std
xchg
enter
test
jb
and
mull
jmp
jo
pop
mov
in
xchg
es
sub
lahf
lods
call
std
ret
mov
jle
cmp
movsl
inc
inc
cmc
scas
call
push
adc
dec
and
insl
ss
ret
cwtl
mov
mov
mov
push
inc
pop
sub
scas
or
jns
into
sbb
bound
add
xor
pop
fiadds
lods
jno
out
cmpsb
xchg
stc
mov
and
mov
sbb
hlt
leave
xor
pop
pushf
and
scas
in
dec
cmpsb
stos
mov
or
nop
imul
imul
cmp
or
cld
inc
roll
sub
mov
repz
jecxz
jge
dec
out
mov
or
push
ds
sub
into
test
imul
xor
mov
mov
push
add
std
popl
sbb
xor
cwtl
cs
cmp
mov
dec
xchg
bound
icebp
shrl
push
jle
cld
nop
mov
cld
and
cltd
cmp
jl
ficomps
xor
add
das
fcoms
je
div
rorb
arpl
jl
push
clc
aaa
sbb
jge
shlb
xchg
out
and
hlt
inc
stos
add
pop
jle,pn
mov
pop
in
int
xor
mov
lds
push
jae
mov
sub
pushf
in
lret
pop
pop
ret
fwait
stos
popf
adc
pusha
or
mov
jo
push
xchg
and
xchg
icebp
popf
jne
push
xchg
sahf
xchg
dec
sahf
sub
notb
xchg
aaa
int
pop
scas
lock
loop
out
sub
or
stc
das
jg
cmpsl
inc
mov
jns
lahf
jns
testb
movsb
lahf
mov
outsb
pop
xchg
dec
pop
push
cmpsb
cmc
scas
mov
jle
mov
mov
inc
test
push
jle
sub
and
mov
cmp
daa
xor
add
test
jb
imul
xor
jne
das
addl
movsb
push
xchg
int
scas
pop
fucompp
or
hlt
ficomps
push
subb
xchg
in
insb
test
xor
scas
lahf
inc
jecxz
mov
repz
fcomi
sarb
cmpsl
lret
sub
push
fwait
mov
stos
lods
xlat
into
ret
loope
lret
aaa
or
cmp
dec
shlb
adc
lods
adc
ja
mov
mov
push
dec
cwtl
lea
out
sbb
xchg
xchg
dec
lea
adc
in
cmp
icebp
sub
mov
cs
xor
mov
push
stos
in
jg
xor
sub
cmp
lods
lret
jmp
pop
pop
aad
pop
shrb
adc
pop
sti
pusha
adc
cmpsb
rcrl
mov
stos
aas
sub
jnp
sbb
mov
incl
mov
pop
xchg
popa
xchg
ret
dec
cwtl
adc
pop
or
lods
sti
aaa
mov
inc
shrl
fucompp
xor
xor
movsl
outsl
shlb
test
and
or
dec
stos
adc
or
shr
je
dec
int3
out
dec
aad
dec
test
call
stos
xchg
in
dec
jg
fiadds
xchg
data16
xor
nop
fstl
pusha
fdivrs
repnz
dec
xlat
mov
push
rcrl
dec
or
or
inc
xor
arpl
mov
pop
repz
pop
cld
jp
stos
mov
adc
pop
mov
mov
imul
sub
mov
scas
xchg
cmpxchg
lret
pop
data16
xchg
cmp
dec
push
ss
pop
sbb
or
js
fsubrl
not
sub
into
mov
std
popa
pop
outsb
in
lods
xchg
rorb
outsl
fnsave
cmp
adc
testl
rclb
ds
adc
jnp
adc
push
sbb
imul
lcall
sbb
sub
push
icebp
dec
add
xchg
pop
cli
mov
mov
imul
mul
xchg
mov
and
sbb
mov
adc
dec
xchg
out
data16
imul
mov
cmpsl
cld
aaa
push
lds
mov
mov
pop
gs
or
xlat
pop
incl
pop
testb
aam
push
enter
outsb
xchg
cmpsl
aam
insb
addb
add
faddl
mov
in
adc
jno
subl
xor
int
mov
addr16
mov
push
xchg
mov
push
ss
sahf
jp
out
rorl
jmp
or
cmp
mov
adc
jbe
and
and
add
add
daa
jg
fnsave
mov
xchg
je
push
xchg
inc
in
cli
test
ljmp
gs
mov
adc
lret
repz
xchg
sbb
mov
xor
outsb
icebp
push
mov
xchg
jle
sub
add
enter
rorb
cmp
adc
lcall
mov
mov
mov
gs
mov
out
shlb
dec
push
orb
jbe
lret
inc
addl
fwait
sbb
cmp
repnz
sahf
sti
pop
sbb
syscall
sub
push
push
xor
repz
test
mov
stos
into
aad
ds
jb
pop
push
cmpsb
inc
mov
jae
jns
cmp
das
in
pop
jl
out
xchg
movsl
add
fldt
orb
sbbw
dec
test
ljmp
daa
mov
push
and
dec
jb
pop
mov
sub
push
fldenv
add
in
add
aaa
pop
jae
ror
ret
push
cld
sbb
in
push
fadds
sub
divl
lcall
xchg
jmp
stos
jb
push
add
jnp
add
lcall
jnp
jnp
sbb
xchg
loope
xor
clc
sbbl
pushf
ljmp
aaa
cs
push
js
push
ljmp
ret
add
push
movsl
or
outsl
notb
and
clc
pop
test
or
test
rcl
nop
xor
into
mov
into
insb
fwait
jbe
aas
fistpl
int
push
lods
and
and
cmpsb
repnz
fadds
movsb
cmp
aaa
in
sbb
push
call
and
not
stos
rcr
adc
fs
cmpsl
mov
in
xor
pop
push
cmp
test
jnp
nop
rcll
jge
and
pop
xchg
push
inc
xchg
push
jge
ret
imul
popa
testl
or
imul
pop
push
mov
enter
aam
rcrl
lods
jge
pop
enter
jle
and
mov
mov
and
dec
add
dec
mov
fadds
mov
jl
ja
xchg
sub
dec
je
mov
daa
loope
pop
cwtl
inc
jb
ret
mov
jae
add
fsin
cmpsl
sbb
lret
xchg
ljmp
fidivrs
les
fs
jae
leave
sub
add
out
sub
mov
std
fdivp
mov
cmp
sub
or
mov
xchg
sub
lock
push
cmp
push
stos
mov
inc
sbb
int3
test
icebp
pop
xor
out
test
outsb
movsb
pop
and
inc
orl
lea
cmc
jp
jg
rcr
and
mov
nop
jg
adc
add
div
jb
mov
push
das
xor
repz
sub
mov
pop
inc
adc
pushf
movsb
and
js
mov
sbb
cld
loop
mov
dec
into
pop
imul
sub
mov
jb
lock
scas
mov
pop
jnp
scas
cltd
ret
lea
pop
mov
subl
sub
cmpsb
add
cmp
divl
movsb
cmp
push
or
or
aad
aam
push
adc
das
push
and
add
aad
pop
xor
fucomp
pop
jmp
roll
punpckldq
pop
xor
mov
xor
insb
dec
inc
add
insb
fimuls
scas
mov
mov
data16
xchg
xor
xlat
call
push
imul
pushf
fstps
lahf
jnp
gs
enter
lock
pop
xor
jge
movlps
sbb
lock
cwtl
mov
xor
jbe
stos
push
and
pushf
idiv
xchg
mov
pushf
fcoms
mov
jg
push
repnz
add
lea
mov
cmpsb
and
mov
sub
pop
das
jle
push
scas
arpl
inc
adc
loop
in
push
pop
insb
lret
sahf
sti
sub
and
push
fistpl
jb
sbb
inc
cwtl
adc
sub
into
jmp
inc
xchg
cmp
jbe
nop
push
pop
mov
xchg
out
inc
in
push
inc
cmpsl
inc
sub
ffreep
sbb
cmpsl
jge
sub
xchg
xchg
and
xor
insl
push
dec
fmull
and
inc
mov
into
test
mov
fwait
sub
fsubrl
out
fiadds
or
push
sub
repz
cmp
cmp
hlt
rorb
fcomps
stos
stc
mov
fstpt
sub
mov
xchg
in
lock
ret
and
imul
xchg
adc
shlb
les
insl
ret
aas
das
or
out
mov
shl
fdivs
mov
fnstenv
data16
ljmp
inc
ret
sbbl
and
andb
dec
mov
in
sub
pop
shl
outsl
mov
shll
fs
out
xor
prefetch
cmpsl
incl
scas
or
iret
mov
out
and
push
mov
xchg
push
les
mov
daa
ss
ds
lock
data16
movsl
or
nop
jp
ja
lss
mov
out
mov
xchg
loop
fistl
aam
mov
jb
mov
popa
mov
fstpt
clc
inc
inc
cmp
cmp
movsl
jnp
push
xchg
aad
or
mov
push
fiadds
sbb
mov
mov
jbe
push
stc
push
lock
call
popl
xchg
xor
fwait
jge
and
add
adc
mov
es
shrl
imul
mov
mov
in
add
sbb
divb
cmpsb
pop
jb
pop
push
jp
inc
inc
retw
fxch
rcrl
add
imul
ret
stos
cwtl
addb
pop
imul
inc
mov
cmp
jecxz
repnz
push
inc
ret
jne
outsb
mov
xchg
mov
lea
jmp
cld
and
xchg
mov
push
cmpsb
xchg
sbb
mov
and
sub
lds
scas
dec
in
jge
jno
pop
lcall
adc
or
repz
leave
outsl
sbb
dec
push
sub
push
fmuls
mov
in
adc
mov
test
je
mov
out
cmpl
fs
sub
pop
jne
lret
js
adc
jo
xchg
daa
daa
jns
loopne
clc
lods
lret
mov
bound
mov
lods
sahf
fdivs
xchg
dec
cmp
cld
xchg
sbb
scas
mov
fadds
sub
mov
es
mov
cltd
lahf
mov
out
cmp
cmpsl
inc
loopne
iret
mov
cmp
and
int3
jmp
mov
and
pop
add
daa
popf
xchg
push
mov
ret
dec
push
and
push
jmp
sbb
fidivs
iret
lahf
push
sarl
add
hlt
ljmp
addl
sub
push
jp
add
lret
sbb
push
insl
mov
pop
sub
jg
lcall
mov
cmp
and
mov
stos
push
add
kmovb
lea
into
pusha
bound
mov
xchg
sub
push
andl
adc
sub
jmp
lahf
cmpsb
mov
push
add
into
outsb
fsubrl
pop
out
test
int3
cmp
pop
pop
jns
dec
xchg
mov
imulb
aad
inc
std
hlt
add
cmp
cmp
loopne
imul
arpl
mov
mov
iret
ja
cld
mov
dec
in
adc
adc
idivb
rclb
jbe
clc
iret
add
pop
ja
addb
int3
jne
adcb
leave
or
push
pop
and
insl
aam
or
pusha
jl
sub
testb
add
addr16
imul
dec
inc
fadd
mov
arpl
inc
dec
mov
enter
frstor
push
movsb
lcall
dec
inc
in
mov
lods
mov
inc
daa
sbb
mov
mov
and
ret
add
fcmovb
or
mov
aas
sbb
cld
pop
les
not
mov
iret
inc
pop
inc
add
sub
std
dec
inc
and
addr16
xor
sub
push
scas
das
int
lcall
inc
cmp
pop
aad
addr16
rcrl
push
add
popa
xchg
pushf
stc
lods
lcall
shlb
fisttpl
lock
mov
push
or
out
jns
xchg
test
xchg
les
ficoms
aam
cmpsl
push
sti
xor
je
dec
fdivrs
xchg
aam
mov
pop
outsl
mov
sbb
xchg
push
imul
sahf
std
pop
fisttpl
in
dec
and
es
add
jmp
xchg
cs
mov
out
in
cli
dec
xchg
aas
vpsubd
push
inc
gs
pop
push
mov
movsb
and
iret
outsl
fmul
mov
pushf
adc
inc
sbb
subl
dec
xchg
into
js
mov
out
repz
mov
out
mov
nop
sti
push
adc
mov
adc
scas
pop
jle
pop
mov
mov
mov
sub
js
fcomp
mov
lahf
inc
cmp
adc
fs
rcrl
pop
push
or
mov
xor
mov
in
mov
mov
imul
std
icebp
or
std
inc
adc
push
test
mov
mov
adc
jns
cs
inc
lret
sbb
dec
mov
ret
lds
loope
add
rolb
lahf
es
scas
pop
xchg
jmp
inc
mov
cmpsb
mov
dec
and
jle
and
lods
les
xor
sub
pop
popa
in
jno
in
popl
pop
ds
cli
inc
pushf
pop
out
imul
inc
xchg
add
jp
idivl
or
insb
xchg
enter
das
es
cmp
pop
lcall
push
subl
popa
inc
pusha
sbb
sahf
sbb
inc
pop
out
fwait
shlb
lea
mov
dec
shr
lods
mov
shrb
mov
cmc
ljmp
xor
jmp
aas
out
ret
mov
pop
bound
inc
int
and
mov
lahf
pushf
fucomp
add
cwtl
fistpl
mov
mov
popf
repnz
ja
adc
loopne,pn
lret
imul
lods
cmp
loop
je
fiadds
lret
sub
cmpl
icebp
xor
xor
mov
push
sbb
adc
add
stc
or
mov
cmpsb
rol
or
test
cmpl
xor
push
testb
outsl
lcall
in
mov
sbb
mov
cmp
dec
inc
pop
push
cld
adc
movsl
fstpt
xchg
xchg
sbbb
xor
adc
ds
popa
inc
rep
aam
lret
pop
xor
xchg
jp
in
jns
sbbb
mov
sbb
pop
mov
mov
or
pop
mov
fstpl
lock
sbb
rorl
jp
xor
xchg
in
push
out
fwait
arpl
mov
cmp
stos
mov
into
or
shr
cmp
sbb
hlt
movhps
and
shll
jecxz
sbb
out
mov
xor
in
out
add
imul
mov
push
push
nop
fcmove
ds
cmp
mov
mov
pop
into
xchg
mov
jnp
aam
and
movsl
add
cmp
add
dec
lock
enter
xor
cs
pop
push
cmp
cmp
cmp
rcrl
addb
outsb
xorl
ljmp
sbb
adc
ficoms
pop
outsl
das
fcompl
std
int3
sbb
inc
pop
loopne
repz
xchg
test
add
repz
pop
sti
xchg
sub
xchg
or
mov
mov
imul
sahf
sbb
loopne
and
sub
je
and
jnp
or
stos
out
in
pop
sti
jne
xchg
jne
or
push
jmp
notl
sub
dec
dec
push
into
or
out
mov
adc
out
jp
data16
xor
movsb
fisttps
icebp
test
sbb
scas
fs
xchg
pop
push
or
ss
push
out
xor
or
fs
cmp
mov
std
lods
or
repnz
add
cmp
cli
mov
jae
in
fdivr
pop
loopne
push
imul
push
pop
lret
adcb
push
fstpt
popa
mov
shl
xorb
xchg
push
lret
ja
dec
lret
sti
or
mov
int
xchg
fimuls
gs
jle
mov
scas
mov
das
aaa
popa
in
out
xchg
push
aas
jae
cmpsl
cmp
imul
mov
cmp
rolb
jp
bound
lds
add
xor
dec
psubsb
push
or
mov
xor
adc
xlat
xor
push
mov
or
cmp
mov
out
lret
ss
xchg
in
insl
das
adc
icebp
in
jle
or
dec
cmp
pop
push
dec
mov
inc
add
mov
xchg
pushf
ret
fbld
and
pop
xor
orl
xchg
adc
aam
std
stos
out
test
add
jmp
add
jecxz
ds
lahf
inc
sub
lret
xorl
xor
scas
clc
mov
das
mov
divl
int3
xor
mov
es
and
out
mov
sbb
push
pushf
in
adc
mov
adc
cmp
movb
xor
cmc
pop
sub
lahf
cltd
jne
jb
sbb
jge
dec
mov
test
mov
sub
test
pop
and
repz
dec
fcompl
push
sbb
into
addb
add
pop
loopne
je
push
repnz
or
out
dec
out
xor
pop
mov
xchg
cmp
jge
push
jno
or
aaa
cmc
inc
mov
fdivrs
mov
insl
pusha
pop
lds
xchg
fisubrl
repz
xchg
out
mov
or
testb
js
adc
and
adc
jno
mov
and
es
inc
mov
test
xchg
imul
mov
and
andl
jmp
fwait
adc
shrb
cli
aas
xor
test
sti
cmp
ljmp
pop
andb
jbe
lahf
ja
mov
adc
xchg
shrb
shlb
push
cmpsl
outsl
popf
jb
idiv
insb
call
xor
loop
jo
or
sub
jle
lods
and
test
les
adcb
or
jge
jns
aam
jecxz
xchg
add
dec
add
pusha
clc
int
or
insb
add
push
add
lock
xchg
xor
fcmovnu
mov
lret
sub
mov
sbb
pop
jne
pop
leave
je
fildll
test
pop
js
lock
rcrl
addb
pop
call
daa
add
push
shr
adc
pop
hlt
jne
aad
push
mov
mov
stos
sbb
and
and
mov
repnz
lret
in
dec
gs
incb
inc
popl
ficompl
cmc
mov
pop
jno
dec
int
xchg
jbe
adc
mov
pop
insb
cli
ds
xchg
mov
sub
and
jge
or
addl
loope
outsb
mov
es
out
frstor
dec
dec
neg
push
scas
adc
xchg
jae
adc
fsubs
ffreep
xchg
push
pop
inc
insb
divb
adc
xor
pop
sub
xlat
jecxz
shll
push
loop
xor
in
lret
loope
push
ljmp
movsl
out
imul
jge
loopne
dec
inc
test
inc
addl
push
stos
jmp
jns
mov
sub
in
inc
ret
js
adc
repnz
cltd
sbb
xor
xor
inc
aas
addl
aaa
dec
push
sub
jge
inc
rcrl
loop
dec
es
fisubrs
divps
mov
and
adc
mov
insb
in
iret
loop
push
aad
int
dec
vaddss
and
push
aad
jae
andl
inc
inc
jl
adc
push
das
mov
cmp
lret
jp
addl
lahf
adc
mov
add
scas
and
cmp
sub
dec
movsb
addr16
pushf
test
push
xchg
jno
gs
fildll
push
push
lods
rcll
ljmp
inc
xchg
ffree
push
ret
repz
add
mov
xor
add
data16
push
inc
pop
jae
lock
sarb
push
lds
xchg
fistpll
ss
cs
mov
jmp
push
fwait
ja
jmp
mov
add
sub
cmp
into
and
call
dec
mov
adc
push
push
mov
lds
sbb
cmpb
jle
jnp
jl
fwait
daa
dec
jmp
sbb
and
cmp
lret
dec
mov
and
sarb
xlat
das
in
mov
mov
inc
jge
adc
push
es
jp
lcall
xor
and
mov
nop
mov
das
movsl
imull
push
imul
xchg
stos
or
mov
add
sub
mov
out
rclb
xchg
roll
lret
inc
mov
inc
and
xor
ja
adc
in
fiadds
jmp
test
pop
push
rcll
mov
hlt
nop
push
pop
and
cmp
imul
ficoms
push
jnp
mov
lods
les
outsb
es
fwait
or
sbbl
iret
into
int3
and
clc
das
ja,pt
pop
cld
add
in
add
pop
mov
jb
xchg
int
and
xchg
inc
in
imul
mov
push
or
fcom
sbb
or
shl
aad
js
loope
jmp
rcr
xorl
cmp
es
lcall
dec
jg
sbb
jp
popa
je
inc
and
push
jno
add
add
int3
add
push
cwtl
cld
jno
stos
jno
pop
int3
pop
repz
adc
js
push
dec
int3
xor
push
or
rcll
shlb
cmp
sub
jo
xchg
repnz
xchg
jno
xorl
inc
addl
mov
mov
insb
int
xor
shll
testl
jb
xlat
push
sub
sahf
pop
aas
std
xor
and
popa
xor
jno
insb
add
mov
push
or
jmp
in
mov
xchg
push
imul
mull
pop
pushf
addr16
lahf
inc
mov
mov
daa
jnp
jmp
andl
ljmp
xchg
sarl
push
xchg
add
mov
mov
test
ds
fistpl
xchg
push
dec
xchg
jmp
or
mov
mov
push
fcomps
iret
mov
mov
bound
movsl
gs
addl
cli
mov
jp
and
shll
jae
pusha
ja
or
lahf
push
sbb
ror
addr16
arpl
cs
icebp
dec
pop
push
mov
fdivrs
addr16
std
inc
cmp
filds
sbb
test
adc
xor
stos
rolb
adc
jp
mov
inc
xor
pop
ss
insb
jl
test
test
jmp
or
enter
sub
call
add
sbb
push
fdiv
adc
add
cmpl
ss
mov
jmp
inc
xor
adc
std
sbb
insb
pusha
insb
int
or
pop
mov
dec
xor
pop
je
pop
jg
inc
loop
cmp
das
add
xchg
add
icebp
dec
std
dec
sub
outsb
pop
cmp
adc
das
call
in
xchg
imul
shll
test
adc
movsl
insl
ror
nop
shr
pop
rorb
daa
xlat
insb
repz
cmp
lret
loopne
push
pushf
fcoms
inc
jbe
cmp
mov
cli
and
xor
adc
inc
adc
divl
jne
xchg
ss
popf
mov
pop
sti
adcb
roll
or
push
shll
cmp
push
push
jg
ss
jp
sbb
sbb
fisubrl
cmpsl
les
sbb
std
xchg
sbb
bound
or
call
enter
sbb
insl
outsb
push
das
sbb
push
xchg
lds
fcompl
aas
jge
jbe
dec
jno
ret
push
nop
jo
mov
dec
xchg
js
adc
and
mov
enter
repz
inc
arpl
cld
mov
adc
pop
xor
add
mov
inc
pop
inc
test
or
lahf
mov
pop
int
leave
lock
sahf
repnz
stos
jg
mov
mov
add
mov
mov
mov
push
or
jmp
int3
and
leave
mov
pop
mov
repz
aam
sbb
mov
rorl
das
jae
pop
sti
jmp
outsl
stc
insl
pushf
mov
lock
movsl
mov
leave
pop
inc
sbb
adc
adc
cmp
mov
push
leave
pop
or
and
stc
scas
cwtl
popf
adc
mov
mov
in
sub
add
es
lahf
lret
lock
sub
xor
lcall
xchg
aad
jae
mov
stos
sahf
negb
jge
int
testb
xchg
fistpll
cmp
fisubrs
gs
cmp
outsb
pop
out
or
push
mov
popf
xor
jl
jbe
sti
fld
lds
or
data16
in
rolb
ja
les
mov
fsts
loopne
jbe
in
pop
mov
repz
dec
loop
dec
push
mov
add
pop
loop
cld
and
xchg
mov
stos
jns
outsl
fildll
dec
mov
lret
cli
dec
jg
dec
mov
push
cmp
scas
icebp
es
pop
out
aas
sti
and
popf
and
sbb
loop
mov
ja
add
and
mov
enter
pop
js
jne
inc
cmp
fimuls
sbb
sbb
inc
push
shrl
shlb
idivl
in
cmpb
jb
sbb
int
data16
jge
cmpsl
ds
inc
cmp
insl
notb
mov
scas
imul
std
enter
push
ffreep
mov
add
lcall
int3
push
add
test
pop
fsts
out
add
out
and
lret
hlt
sbb
jbe
imul
fistpl
sti
icebp
xchg
push
mov
outsl
and
adc
sub
pop
scas
scas
hlt
or
and
ret
aas
jo
xchg
int
xchg
pop
loope
in
lds
push
enter
int3
or
imul
cmpsl
and
inc
test
sub
mov
push
aad
cmp
cmp
inc
je
push
pop
sub
popf
sahf
rolb
mov
dec
icebp
xor
jle
mov
xchg
jns
sub
sbb
inc
testb
cmp
sub
push
pop
rcll
lret
rorl
repnz
rcll
test
xchg
mov
cltd
jmp
ljmp
mov
push
dec
jl
lock
popl
push
xchg
in
cmp
ret
mov
fsubrp
enter
scas
negb
xor
inc
insl
mov
mov
pushw
outsb
pop
xchg
push
cmp
push
push
fisttps
ds
push
add
test
jp
sub
loop
dec
jne
fcompl
add
mov
dec
cltd
add
jp
in
sbb
in
fwait
mov
mov
xor
cltd
cmp
nop
xchg
mov
inc
imul
mov
in
and
jl
in
sub
or
adc
push
mul
xchg
cmp
cltd
mov
push
enter
jmp
sbb
leave
xorl
icebp
sub
test
fistpll
or
lahf
jo
inc
add
adc
pop
sub
daa
arpl
and
adc
lret
mov
jne
adc
daa
cmp
adc
push
int
ljmp
mov
cmp
and
pop
dec
stos
or
lea
adc
push
xchg
mov
mov
ffreep
pusha
inc
push
pop
rolb
inc
push
xor
insb
fisttpll
sub
int
dec
shrb
cmpsl
repz
pushf
nop
idivl
rorl
in
out
ret
pushf
call
es
sbb
jne
pop
inc
daa
movsl
je
jae
iret
outsb
das
rcrl
int
mov
loopne
ljmp
xchg
ret
jg
sbb
and
insl
cmpsl
fmull
jg
inc
push
adc
cmpsb
clc
cmp
divl
adc
aam
rolb
mov
int3
dec
inc
dec
inc
cmp
test
inc
js
mov
nop
sub
out
loop
sbb
inc
jp
or
push
jnp
mov
mov
add
shll
sub
and
and
es
xor
sbb
mov
dec
and
cmpb
in
xlat
add
cmpsl
push
lods
inc
adcb
pop
leave
adc
adc
lods
addr16
and
lods
test
pop
cmc
lds
mov
ss
push
icebp
dec
pop
dec
push
cmp
sti
imul
mov
cmp
notb
test
push
push
fsubs
bound
int
push
ja
dec
push
cltd
popf
je
outsl
inc
sub
test
or
mov
rorl
fmull
shll
adc
add
dec
jnp
stc
sbb
xchg
hlt
add
sub
clc
jmp
adc
mov
mov
jbe
jg
jno
adc
push
mov
cmc
notb
aaa
xchg
xor
add
lcall
cmpsb
jne
xchg
int3
pop
xor
loope
call
xor
dec
mov
jl
imul
adc
fcoms
add
mov
lahf
mov
enterw
sti
push
jmp
jge
pop
sub
push
pop
jp
jge
pop
testl
pop
fistl
add
cmp
and
jg
add
in
jns
clc
loope
jg
adc
pop
test
dec
out
into
cmp
addr16
mov
jmp
cmpxchg
jo
out
jp
ja
mov
stc
jl
jle
inc
insb
lock
fwait
cltd
mov
inc
aaa
icebp
loope
fnstcw
iret
mov
mov
jge
adc
or
movsb
dec
jo
pop
fcomps
imul
dec
lret
cmp
inc
inc
leave
fnstcw
jecxz
popa
xor
clc
dec
std
sub
xorl
lcall
cmp
fstps
pusha
data16
aaa
and
mov
pop
adc
and
ror
gs
add
mov
std
push
mov
std
lahf
jo
imul
loopne
mov
inc
cmpsb
xchg
and
lods
andl
je
ror
lds
andb
mov
adc
push
sarl
sarl
mov
aas
adc
cmp
lods
push
movsl
shlb
clc
pop
add
ja
daa
push
xor
out
int
outsl
lret
push
es
adc
sub
cmp
cmpsl
cltd
aas
fists
ja
das
xor
jg
dec
inc
dec
add
xchg
push
pop
or
shl
in
adc
sbb
jo
pushf
jo
mov
fisttps
das
sti
jecxz
es
movsb
cld
daa
mov
testl
outsl
jecxz
movsb
push
out
sbb
mov
xchg
popf
sub
fwait
fwait
aad
std
push
lods
push
inc
repnz
clc
mov
mov
out
sti
mov
cmpsl
sti
in
add
mov
push
clc
sub
bound
test
cwtl
cltd
mov
xchg
lods
mov
iret
xchg
popa
test
push
push
mov
fidivs
push
pusha
and
flds
mov
jp
add
fmull
inc
mov
enter
xor
add
pop
or
sbb
fcmove
gs
dec
inc
movsb
lahf
icebp
and
inc
mov
jl
jmp
ljmp
push
mov
adc
push
push
addb
dec
push
xchg
mov
arpl
add
ror
arpl
lret
cmp
mov
repnz
rorl
nop
dec
cmpb
cmp
sbb
push
or
test
imul
xchg
and
xchg
mov
outsl
push
jns
xorb
mov
cmp
repz
out
jmp
xchg
push
dec
cmp
into
jp
dec
pop
cmp
pusha
mov
stos
test
ficoml
popa
call
or
pop
popa
mov
adc
mov
cld
movb
cwtl
loope
push
add
cmp
adcl
push
imul
fistl
xchg
loop
scas
xchg
test
mov
test
dec
dec
jb
mov
xor
jmp
pop
jle
lcall
or
dec
adc
cmp
push
rcrl
rcrb
rcrb
pop
mov
adc
mov
xor
shrb
xchg
jecxz
push
adc
pop
in
imul
cmpsb
jne
jns
fcomip
je
cmpsb
pop
imul
push
mov
scas
int3
xchg
adc
std
xor
xor
lret
imul
push
inc
jmp
stc
pop
arpl
and
stc
xchg
shrl
push
add
pusha
sub
add
pop
mov
lret
les
pop
fisubrl
fucomip
aaa
leave
or
data16
and
rcrl
add
add
cltd
outsl
push
daa
push
into
repnz
mov
push
stc
jle
les
or
sub
cmp
imul
rcr
jnp
inc
in
or
lahf
adc
add
outsb
dec
pop
movsl
and
dec
add
das
fildll
insl
push
mov
sbb
sahf
fmul
add
cmp
sub
push
addb
lretw
or
cmpsb
inc
lret
add
push
insl
sbb
mov
dec
clc
fnstcw
push
pusha
xor
adc
imul
adc
adc
outsb
inc
insl
inc
test
jge
popf
ss
push
sbb
mov
test
enter
or
jge
test
fimuls
xchg
insl
sub
test
fistpll
xchg
adc
mov
aas
addr16
imul
in
sub
jne
test
xchg
outsl
adc
xchg
mov
dec
ljmp
pop
mov
xlat
push
iret
mov
std
out
mov
pusha
or
stos
fmuls
sub
add
lods
add
divl
in
xchg
sbb
jmp
xchg
push
int
jns
stos
bound
dec
out
roll
add
cld
loopne
xor
inc
arpl
mov
jmp
inc
call
insb
mov
nop
popa
xchg
dec
pop
push
imul
repz
push
mov
bnd
push
jecxz
fwait
inc
push
mov
and
cmpsl
cmpsl
xchg
lcall
mov
das
adc
daa
mov
pop
nop
pop
mov
shlb
cltd
dec
insb
ret
cmpsl
sbb
pusha
cs
cmp
gs
lods
fmull
push
lret
sarb
adc
add
and
jno
jnp
inc
and
ficoml
and
adc
andb
push
xchg
adc
iret
aam
icebp
xor
push
jmp
je
lcall
add
jg
cwtl
mov
mov
leave
xor
fsubr
pop
lock
in
sub
fucomi
lret
mov
popf
movsb
jb
call
xchg
push
adc
pusha
scas
aad
push
jmp
or
adc
mov
mov
mov
pop
fwait
hlt
push
xor
mov
rolb
dec
add
test
xchg
adc
jnp
pop
aaa
gs
pop
lcall
sahf
out
insb
push
movsb
or
movsl
mov
aaa
stc
test
outsl
jne
push
aas
icebp
cmp
pop
xchg
shll
mull
push
xchg
lds
pop
lret
pop
add
adcl
xchg
xor
dec
xor
add
mov
test
arpl
test
test
nop
clts
and
movsl
enter
push
inc
mov
jo
scas
mov
aam
daa
repnz
mov
mov
in
andl
dec
into
dec
lcall
mov
shl
cwtl
out
mov
xchg
xor
sbb
sbb
clc
push
and
std
mov
push
rorb
in
enter
add
sub
mov
or
push
jg
and
imul
mov
sbb
mov
cmp
mov
mov
gs
jnp
stos
movsb
in
inc
jmp
xor
mov
rcrb
insl
jmp
lods
bound
mov
jne
cmp
sub
loope
iret
outsb
mov
fidivrl
jne
pop
adc
fwait
in
and
fwait
out
lret
mov
push
lahf
adc
dec
pop
push
xchg
or
jbe
xor
sbb
xchg
cmpsb
insl
or
jbe
rep
jp
mov
pop
push
mov
add
jle
sub
pop
adc
fs
xor
sbb
lock
dec
adc
test
popf
test
outsb
xor
or
inc
inc
negb
mov
in
add
les
xchg
dec
insb
sbb
cmpsl
test
adc
xlat
cld
push
xor
cmc
stos
divl
xchg
ret
dec
rorb
push
jmp
xchg
loope
popa
mov
adc
std
setle
sub
andb
das
jle
clc
push
xchg
add
subb
pop
shll
lods
adcb
jb
jle
mov
pop
sub
aas
sub
mov
pusha
fsts
mov
popf
dec
add
aas
add
fs
dec
inc
fbstp
scas
in
repz
push
test
out
scas
add
out
mov
imul
mov
inc
lds
rcrb
inc
adc
or
cwtl
push
mov
or
adc
mov
sbbl
int3
cmpsl
sbb
mov
stos
inc
addr16
xor
das
insl
sahf
sahf
xchg
je
push
mov
xchg
push
sbb
push
push
jecxz
mov
add
scas
adcl
xor
sub
mov
out
dec
nop
dec
dec
into
and
and
test
out
jo
jmp
sub
stos
andl
mov
in
stos
jbe
movsl
repz
cmpsb
imul
mov
jmp
test
add
movsl
inc
adc
pop
mov
sbbb
stos
and
sbb
sub
adc
lahf
and
push
dec
pusha
mov
adc
sahf
mov
aam
sbb
notl
mov
es
or
fadd
adc
ljmp
es
adc
adcb
lods
lahf
or
ficomps
xchg
sbb
test
pop
into
out
repnz
jbe
or
pop
and
std
je
iret
mov
and
arpl
jno
subl
mov
mov
flds
pop
imul
gs
mov
lahf
push
rcll
notb
call
loope
pop
insb
loopne
xor
pushf
pop
or
in
in
sbb
mov
mov
cltd
xchg
imul
sub
mov
popf
loope
shrl
in
das
lods
pop
mov
mov
sti
dec
adc
mov
pop
lret
push
aam
mov
xchg
push
notb
fistpl
stc
lds
popf
flds
sbb
mov
enter
sub
aaa
cmpxchg
ljmp
loope
xor
dec
jne
cwtl
test
fldenv
dec
test
xchg
xchg
pushf
and
aaa
pusha
xchg
add
mov
vmread
lret
test
out
lods
cmc
and
loop
out
add
fisubl
lock
aam
dec
adcl
xadd
ss
adc
movzwl
jmp
pop
rcll
fdivrs
mov
or
shll
in
dec
int3
pushf
loop
dec
sub
mov
xchg
inc
and
xor
add
mov
test
mov
ljmp
push
mov
adc
jnp
aaa
jb
pop
sbb
mov
cmp
jl
stos
stc
xor
movsb
and
add
add
insb
cwtl
imul
enter
out
cmc
inc
xor
sti
scas
push
or
sti
in
push
sbb
imul
push
and
aam
fidivrs
inc
pslld
dec
push
je
add
dec
in
repz
sub
dec
mov
and
adc
push
xor
xchg
ss
ss
cli
adc
jns
test
xor
cmpsl
in
push
jbe
inc
pop
jl
mov
lods
or
stos
in
faddl
data16
sbb
inc
call
clc
loopne
faddl
in
in
xchg
jmp
push
adc
pop
dec
call
adc
sub
pop
data16
xor
and
add
mov
iret
pop
sbb
sarl
lea
mov
mov
xor
fcoms
dec
andl
and
cld
dec
jb
or
push
int3
stos
pop
jmp
pop
cmpsl
lods
mov
jl
mov
jno
mov
dec
inc
jmp
ret
cmc
cmc
rorb
andb
bnd
adc
push
loop
into
lret
pop
mov
inc
les
ret
pop
mov
in
es
loope
dec
lret
fs
and
cltd
inc
dec
lea
loop
jle
add
jo
jecxz
cmp
sbb
xor
gs
jmp
sub
aam
cmp
sub
gs
or
loopne
mov
pop
imul
sahf
lods
rclb
mov
pop
xor
outsb
push
and
int
ds
je
mov
jmp
ljmp
es
jae
sahf
pop
lods
pop
dec
movsb
dec
popf
pop
pusha
cmp
mov
inc
in
and
cmp
ret
adc
sub
cs
pop
iret
jns
and
jl
out
popf
pop
insl
hlt
dec
lods
in
or
movsb
cmc
dec
std
and
mov
jo
push
sbb
or
push
add
jns
push
jg
push
mov
jp
stc
xchg
jnp
pop
lds
push
cmc
mov
dec
jns
pop
cli
rcrb
in
je
psubusw
addl
pop
ss
cmp
sbb
in
daa
adc
xor
cmp
jmp
insl
cmpsl
lcall
pop
ss
sti
and
insb
pushf
cmp
add
lods
push
or
jo
hlt
fs
sbb
sbbb
movsb
scas
adc
loope
jne
pop
mov
pop
pop
inc
xchg
out
int3
vcvtps2pd
or
mov
mov
outsb
mov
push
jp
push
xchg
scas
sub
dec
cli
xlat
pop
in
mov
lds
jge
mov
and
fmul
pop
cmpsb
or
add
push
out
xchg
sub
mov
test
xor
sarb
inc
fwait
cmp
das
sbb
sub
inc
stos
mov
sarl
popf
adc
and
fdivs
jmp
loop
lea
sbb
mov
inc
push
sbb
inc
testb
xchg
sbb
push
or
sub
gs
mov
jnp
add
cmp
dec
mov
out
cli
dec
jno
pop
xor
jecxz
xchg
inc
lea
outsl
popa
mov
insb
pop
mov
in
fisttps
orl
and
adc
push
and
in
cmpl
xchg
les
test
fstps
push
cli
push
mov
lods
orb
cmp
jb
inc
repnz
movsl
jne
push
leave
fists
dec
outsl
jb
lods
pop
xchg
cmp
lods
stos
adc
sbb
inc
popf
gs
andl
lcall
mov
fisttpl
insb
mov
xlat
popl
repz
sbb
push
add
sbb
mov
fcoms
xchg
addr16
pop
mov
push
mov
sub
fsts
mov
push
cmpsl
adc
xor
xchg
xchg
jns
iret
cld
subb
add
fidivl
cmp
mov
pop
jge
sub
jb
dec
nop
insl
and
movsl
insb
outsl
push
push
jbe
mov
xorb
mov
push
popa
mov
clc
dec
lea
orl
mov
test
add
and
xchg
imul
push
cltd
ret
fwait
movsb
adc
cmp
enter
add
out
inc
cltd
add
add
gs
sbb
and
jle
scas
inc
aad
sub
lahf
lea
adc
enter
push
andb
jl
mov
lahf
fbstp
jne
inc
gs
orl
sub
mov
push
cwtl
mov
es
ds
cmp
push
inc
push
lret
sbb
fsubrl
pop
add
jo
xchg
dec
inc
cli
out
mov
xchg
bound
xor
inc
cmp
pop
mov
jecxz
mov
add
add
xchg
loopne
sbb
mov
jb
sbb
sbb
xchg
cmpsl
inc
inc
pop
movsb
ficompl
mov
mov
cmp
sub
mov
inc
loop
scas
pop
push
call
mov
sbb
mov
mulb
push
cwtl
rcrb
imul
fldenv
dec
xchg
jle
daa
mov
xchg
pop
lea
push
cmp
sub
mov
add
fists
ja
mov
loope
imul
push
out
fdiv
jne
cmp
push
or
push
mov
ffree
mov
icebp
dec
inc
jns
insl
aas
push
lds
sbb
repz
in
and
jge
jbe
movsl
xchg
push
mov
and
push
fildl
es
test
and
and
jns
inc
cmp
pop
and
or
cmp
add
in
bound
cmc
icebp
xor
loope
or
movsl
xor
mov
pushf
mov
adc
out
xlat
push
les
add
xchg
cmp
or
addr16
xchg
cmp
int3
cli
push
pop
sbb
xor
sub
cmp
xchg
sub
outsl
jns
mov
push
out
push
rcrl
lea
inc
push
sub
mov
dec
pop
pop
insb
inc
fnsave
xor
xchg
and
or
dec
mov
push
sub
es
cli
std
dec
or
push
pop
add
xchg
inc
jno
xor
rolb
test
xlat
xor
leave
inc
lock
jb
aad
mov
jae
bound
jae
addb
adc
xor
mov
pushf
and
fadds
je
jo
sub
mov
jg
jmp
inc
inc
add
gs
add
pop
xor
in
int3
daa
push
push
dec
sub
daa
movsb
mov
aam
dec
js
scas
test
mov
jb
sub
mov
mov
adcb
pusha
int3
jno
add
bound
arpl
xor
dec
pop
loopne
xor
inc
ret
sbbb
mov
add
insl
xor
lods
dec
outsl
lret
imul
and
mov
push
cld
stos
lahf
orps
lret
nop
hlt
je
cltd
and
xchg
lods
and
mov
loopne
pop
cmpsb
jmp
jg
insb
sub
sub
loop
popf
adcl
test
call
add
dec
sahf
cmpl
popa
sub
push
bound
outsb
mov
movsb
lods
pop
pushf
cwtl
pop
jno
inc
movsb
popf
pop
imul
out
xlat
jae
cmpsl
mov
ror
xor
outsb
mov
orb
dec
out
xorl
sbb
ffree
jle
mov
xchg
push
xchg
loop
cmpsb
xchg
pushf
cmp
jl
addl
fldl
pop
sar
andb
arpl
sub
cmpsb
jnp
clc
cmp
in
aad
mov
sub
jne
das
mov
movsb
pusha
mov
scas
aam
aad
xlat
lock
sub
pop
xchg
adc
jae
push
or
or
loop
jg
scas
mov
call
gs
es
and
cmp
addr16
lds
mov
inc
and
xchg
pop
inc
out
bswap
faddl
sbb
pop
sbb
pop
adc
jbe
pop
mov
cwtl
bound
pushf
out
xchg
push
lret
lods
cld
mov
jo
mov
adc
mov
out
cmp
mul
jle
pop
mov
popa
jg
scas
hlt
adc
jbe
add
dec
sub
adc
mov
shrl
stc
lea
lock
arpl
popa
test
sub
fucomi
add
mov
sbb
mov
aas
outsl
sbb
es
mov
rclb
pop
lahf
pop
in
pop
inc
or
fstpt
jle
mov
add
repnz
or
in
out
add
pop
sbb
pop
imul
push
adc
pop
push
hlt
add
sub
cmpsl
mov
push
pop
inc
sbb
cmpsl
mov
dec
add
mov
repnz
mov
adc
aam
dec
xchg
jo
dec
adc
jg
lea
sub
push
xchg
fsubrp
cmpsb
sub
add
sti
mov
mov
aam
insl
mov
jns
aad
popf
rclb
ret
xchg
shlb
sub
leave
and
push
mov
test
imulb
mov
push
xor
push
stos
imul
push
es
mov
adc
push
in
pusha
sahf
out
cmp
enter
mov
xchg
int
sub
out
jge
mov
fmull
stos
pop
test
jg
jmp
push
mov
jo
mov
push
hlt
leave
push
adc
mov
sub
aas
sbb
jns
test
daa
repz
push
xchg
mov
cmpsb
shlb
xor
je
fs
jne
js
test
or
push
add
mov
adc
xor
xor
and
lret
sbb
mov
lds
shll
rcl
movsl
jb
sti
es
cmp
and
sbb
push
ljmp
iret
or
sbb
pop
jmp
movsb
rcrb
outsl
sub
mov
movsb
loopne
push
lds
test
mov
xor
sub
mov
fs
mov
jle
mov
push
lock
or
mov
notl
lret
cmp
mov
sub
xchg
add
and
cmp
jg
aas
xchg
ss
mov
pop
das
enter
hlt
cli
daa
mov
cmp
aaa
xor
call
nop
addr16
imul
pop
add
movsb
lahf
pop
neg
stos
mov
lods
outsb
ss
add
xchg
mov
jmp
aam
and
jbe
testl
ret
imul
out
jno
lock
fwait
std
mov
pusha
or
negl
repnz
jo
in
cmp
dec
xchg
jae
cli
cmp
outsb
mov
sti
and
cmpsb
and
jmp
fsubs
lock
mov
xchg
xor
ret
fisubrs
std
stc
orl
dec
outsb
pop
cli
fmuls
test
push
jg
das
imul
jno
dec
xchg
mov
loope
and
cmp
clc
pop
ficoms
pushf
leave
ret
inc
addr16
clc
push
push
adc
test
cmc
adcb
dec
outsb
mov
hlt
dec
sub
push
rclb
jo,pt
mov
outsb
mov
sub
inc
fidivrs
std
sub
pop
lds
insl
xchg
cmc
pop
stc
push
sarb
xor
and
popa
lock
jns
push
dec
push
push
jp
pop
into
bnd
xor
mov
fisubrs
cmp
ret
push
sti
pop
mov
mov
lock
jle
data16
aad
push
sbb
std
mov
dec
mov
and
dec
inc
xchg
shrb
inc
cwtl
clc
dec
pop
in
dec
mov
lock
fiadds
sbb
xor
push
je
or
pushf
xor
xor
adcl
push
push
inc
cmpsb
and
call
stos
mov
imul
mov
xchg
loop
jno
scas
lock
mov
mov
mov
in
mov
mov
or
jle
out
cmpsl
push
fimull
adc
movsb
inc
push
jmp
inc
sbb
sbb
fcompl
addr16
jno
movd
add
mov
and
dec
mov
shl
insb
rclb
hlt
jle
divb
adc
add
push
lret
pop
into
mov
stos
mov
xchg
daa
and
mov
mov
test
jnp
cmpsb
arpl
lock
jg
mov
sub
adc
jne
das
xor
test
data16
lret
cwtl
dec
dec
mov
push
outsb
mov
js
push
mov
mov
gs
cwtl
clc
dec
add
out
sbb
jecxz
movsl
loop
lret
ror
or
aam
in
addb
mov
test
xor
sub
cmc
adc
and
loope
daa
mov
popf
call
push
movsb
mov
add
sbb
xor
ret
jg
data16
sbb
shlb
fmull
cmp
add
outsb
pusha
aaa
pop
hlt
out
js
stos
ss
xchg
insb
push
xchg
mov
sbb
mov
in
cmp
jo
inc
jb
push
int
inc
mov
jb
dec
test
xchg
dec
xorb
cmp
or
adc
jle
std
popf
xor
xor
and
rorl
push
loopne
sub
pop
fistpl
xchg
pop
push
xchg
push
xlat
jbe
sar
mov
out
push
sti
bts
mov
push
int3
jecxz
jmp
out
cmp
push
push
push
out
in
push
jmp
hlt
pushf
sub
xchg
enter
pop
movsl
push
push
push
inc
pop
repnz
add
cmpl
mov
push
out
or
xchg
xchg
rol
mov
mov
inc
mov
repz
out
lcall
mov
push
enter
pushw
fmulp
cmc
shl
sahf
pop
ds
fs
mov
shlb
ret
sub
enter
nop
mov
jns
mov
jnp
cmpb
std
fwait
mov
inc
fwait
in
das
sbb
in
xchg
mov
lcall
stc
mov
jnp
jnp
test
sti
int3
cmpsl
and
mov
jnp
pop
sbb
inc
pop
jge
inc
sub
push
jns
jge
sub
pop
inc
xchg
orl
jle
iret
sub
and
cmp
pop
cmp
js
sbb
inc
jle
in
std
mov
xchg
in
cltd
xchg
shrl
imul
aas
mov
mov
pop
mov
rorl
jecxz
dec
dec
repnz
jnp
test
decl
insl
push
sbb
jp
out
adc
leave
clc
or
and
jnp
mov
rclb
pop
mov
cli
pop
enter
sbbb
sub
mov
js
or
jbe
cmpsb
das
or
jns
incl
pop
mov
pop
mov
and
cmpsl
and
aas
rcrb
cli
mov
outsb
imul
or
inc
insb
enter
or
mov
lea
es
push
imul
jne
dec
or
jnp
mov
pop
or
xchg
dec
mov
cwtl
movsb
push
jns
xchg
and
arpl
cwtl
and
inc
addr16
gs
xor
sahf
aas
mov
xchg
sbb
mov
movsl
scas
mov
cmp
dec
push
sbb
xor
call
lea
sbb
sub
sti
cs
mov
pop
mov
mov
pop
add
lods
das
cmp
je
dec
lods
sub
dec
stc
inc
sbb
sub
or
in
xor
add
xor
ret
loop
jb
test
aaa
ss
jge
adc
cmp
add
stos
xchg
data16
stc
add
test
or
test
orl
out
mov
data16
cwtl
sbb
rorb
ret
cwtl
inc
pushf
mov
sub
dec
sbb
rclb
imul
dec
mov
int3
mov
scas
xchg
fbld
sub
dec
and
xchg
mov
shll
mov
pushf
mov
out
lea
push
test
loop
xorb
inc
pop
iret
lods
daa
imulb
mov
es
in
sub
mov
jb
int
xor
dec
sti
jno
cmp
popa
repnz
jbe
mov
push
push
cmc
vmaskmovdqu
bound
cli
cmp
mov
data16
xorb
pop
pusha
fidivs
loope
cmc
push
rclb
mov
bound
cltd
mov
inc
add
dec
fs
leave
xchg
pop
enter
pop
cmp
cmp
std
mov
pop
stc
mov
nop
leave
jbe
and
jecxz
jae
nop
mov
les
push
cmp
jno
das
cmp
jb
xchg
addr16
xor
shll
arpl
jbe
hlt
xor
scas
or
mov
popf
push
pop
push
popa
scas
cmp
loopne
outsl
jae
fstl
pop
ds
xchg
cmp
aam
std
dec
jp
add
mov
adc
and
mov
nop
xor
sub
fidivl
sbb
rclb
loopne
stos
mov
mov
mov
mov
cwtl
je
les
mov
push
inc
and
fidivl
movsl
inc
sub
insl
ja
xchg
cmp
mov
push
int
xor
adc
iret
sbb
inc
dec
or
inc
xchg
mov
fidivs
jmp
int3
mov
push
mov
sub
insb
cmp
test
adc
out
mov
mov
cmp
mov
and
push
dec
xchg
pop
pop
gs
pop
dec
adc
in
in
rol
xor
inc
pop
xlat
jnp
stos
repz
xchg
aam
je
clc
testl
jno
std
stos
aas
outsb
jo
mov
outsb
jnp
mov
pop
jg
shll
jp
fldl
mov
sbb
or
adc
xchg
adc
test
int3
ds
lods
dec
adc
in
insb
adc
rcll
es
js
adc
xchg
pop
loop
mov
add
push
sti
testl
aad
cmpsb
dec
adc
int3
loope
scas
orb
adc
clc
in
aam
pop
nop
outsb
adc
dec
add
gs
mov
iret
pushw
cmp
jl
dec
gs
loop
push
ret
loopne
lcall
push
repnz
add
mov
addr16
int
or
or
pop
sahf
pop
push
xchg
in
popa
mov
adc
xor
fisttps
in
in
testb
xlat
xor
mov
shr
out
and
adc
mov
es
js
mov
jmp
repz
lds
cmp
aam
cli
push
xchg
mov
cli
push
mov
or
mov
cmp
jg
xor
jle
out
mov
cmp
add
push
imul
cwtd
loop
sarb
sub
push
sbb
aaa
movsl
push
adc
arpl
mov
repz
lahf
int3
adc
dec
ja
pop
test
mov
mov
pop
pusha
fucomi
mov
cmc
jmp
mov
mov
xchg
les
mov
sub
ss
mov
add
add
adc
cmp
icebp
sbb
cli
scas
and
mov
fdivrl
imul
pop
mov
sbb
xor
aas
mov
or
test
cmp
pop
dec
dec
lds
push
nop
inc
lods
mov
dec
inc
daa
scas
loop
fmuls
sar
xchg
sbb
xor
test
in
popf
hlt
or
fcmovne
xor
inc
test
testl
pop
and
push
pop
push
pop
xor
jl
or
sub
rcrl
mov
addl
and
add
ret
bound
and
sarb
jg
and
jae
movsl
dec
pop
out
fnstenv
ret
xchg
out
adc
jne
pop
jbe
jae
sbb
add
mov
inc
add
cmp
das
cld
inc
mov
js
ret
mov
sbb
or
shll
jge
pop
pop
add
insl
dec
repnz
cmp
xor
push
mov
xlat
cmp
or
dec
daa
cmp
pop
inc
andl
or
push
loope
lock
out
xchg
pop
xor
jmp
mov
cwtl
in
jb
fdivr
inc
xchg
mov
aaa
out
jg
and
jo
mov
cltd
pusha
mov
and
mov
pop
lret
movsb
in
xchg
repnz
insl
and
jmp
xor
mov
bound
lcall
sbb
sbb
bound
inc
js
mov
ljmp
lahf
jp
cli
or
das
popf
xlat
xchg
adc
es
adc
inc
cmpb
int3
fs
dec
adc
leave
cld
cld
jp
push
mov
inc
shll
aas
data16
insb
cltd
jl
mov
push
aaa
rcll
lds
rol
push
push
cmpb
and
mov
adc
in
xor
mulb
mov
in
jp
xor
jecxz
sub
pop
sahf
or
adc
int
mov
or
imul
push
mov
iret
jb
leave
sti
in
in
fidivrl
outsl
sbb
rorb
inc
xchg
mov
mov
inc
pusha
sub
cmc
icebp
int
and
mov
add
xor
inc
mov
gs
push
jo
xchg
aas
negb
cli
cmp
mov
pop
cmp
in
hlt
sbb
xor
cmp
inc
repz
fdivrs
in
and
leave
jne
out
outsb
or
adc
adc
in
ds
sbb
push
dec
cltd
hlt
pusha
add
cmpsb
cmp
cltd
fistps
sbb
add
shlb
add
mov
and
into
mov
ficompl
loope
pop
cmpb
push
test
push
std
dec
cmp
rolb
lods
out
cmp
jp
jns
push
test
flds
sahf
cmp
lea
fdivrs
mov
mov
es
sub
or
add
enter
stc
int3
in
jmp
adc
ret
mov
aaa
aas
push
cmp
aam
mov
add
loop
adc
dec
inc
scas
scas
test
inc
xor
add
imul
push
negb
mov
fiadds
push
push
sahf
andl
jge
sbb
imul
cmp
jmp
cli
add
cwtl
in
xor
jge
push
jmp
fnsave
sub
sbb
adc
xchg
int
call
push
call
pop
jl
sbb
ret
not
jnp
test
mov
adc
mov
pop
in
loope
mov
mov
int
fwait
and
xchg
scas
xchg
jae
shr
sub
adc
lret
loop
push
pop
sbb
jbe
inc
add
pop
or
push
pop
jno,pt
push
mov
pop
and
aaa
in
xchg
int
lret
ja
ss
fcoms
in
xchg
mov
arpl
sub
xor
fldt
das
enter
movsb
orb
outsb
xchg
and
rorl
stos
cmp
push
aaa
push
pmaddwd
inc
or
pop
push
sub
ds
aam
gs
out
mov
push
outsl
adc
rorl
mov
push
fsubl
int3
xchg
test
fisttpl
add
cmp
cli
mov
sbb
fldt
mulb
pop
movsb
unpckhps
cltd
divb
and
dec
es
sbb
iret
cmp
jnp
in
pushf
adc
repnz
shrb
mov
testb
cld
xor
sbb
jle
lcall
mov
xor
and
inc
mov
jnp
iret
sbb
lds
imulb
js
pushf
mov
jmp
xchg
sub
ds
dec
sti
mov
sbb
hlt
xchg
mov
stos
jp
mov
xchg
idivb
mov
pop
lea
cmpsl
pusha
stos
imul
sbb
lahf
cmp
push
push
push
mov
dec
iret
leave
xlat
ret
sbb
dec
scas
pop
ret
fisubl
mov
jl
imul
and
adc
adcb
notl
popa
inc
jo
jg
je
lahf
ja
aaa
pop
cwtl
rorl
xor
mov
jb
movsb
ss
out
jecxz
stos
out
stos
int
shrl
xchg
xchg
cmp
adcl
xor
test
repz
orl
xor
mov
sub
cmp
out
fistps
jle
popf
in
xor
fistpll
push
insb
sub
testl
sahf
sub
or
or
or
xchg
aaa
repz
addl
out
xor
and
repnz
cmp
and
int3
iret
mov
xor
jmp
mov
pushf
inc
jg
and
dec
pop
pop
pusha
imul
mov
mov
jbe
stos
fwait
lret
pop
and
add
inc
lea
lcall
out
mov
cwtl
sbb
xor
test
adc
adc
sbbl
xchg
dec
sub
mov
xchg
pop
ficompl
les
inc
aas
stc
or
popf
stc
ret
aas
push
negb
sahf
pop
les
lods
sbb
mov
pop
faddl
sub
cli
sub
lret
adc
mov
mov
jbe
out
mov
sub
hlt
roll
adc
jo
sbb
bound
mov
push
cli
inc
or
fidivs
movsb
mov
mov
daa
mov
gs
add
xor
and
rol
jg
je
data16
ds
jbe
outsb
sbb
add
arpl
or
orl
ljmp
lret
cmp
mov
xchg
shrl
insl
fcomip
push
inc
test
or
mov
mov
mov
test
push
in
ficompl
stos
mov
push
js
iret
enter
ds
jecxz
ficomps
shll
ljmp
adc
std
nop
cmp
xor
and
push
stc
test
aas
inc
stos
add
aas
dec
in
pop
stos
add
xor
pop
fxch
sbb
push
sbb
pop
add
jns
push
xchg
test
ret
loop
and
nop
fcoml
into
push
ds
jp
push
ret
add
inc
jmp
dec
popa
fldenv
add
inc
fucomi
inc
sbb
jmp
sub
inc
dec
cmc
jl
cmc
push
cld
fisubl
lret
subb
shll
push
fucomp
mov
shrb
lock
out
ret
cmp
and
loopne
pop
data16
push
mov
cmp
add
fistpl
inc
jp
dec
push
sbb
jecxz
ret
hlt
adc
pop
push
inc
fs
jne
iret
fdivs
fsub
jmp
ja
xchg
xchg
cwtl
pop
xor
push
push
test
aaa
ja
aas
sub
aaa
pop
inc
daa
test
sbb
in
or
lcall
into
add
les
dec
shlb
xchg
sub
addb
or
incb
dec
clc
sbbb
xchg
push
sbb
sbb
adc
cwtl
je
xor
mov
add
sbb
fprem1
inc
stos
mov
push
sub
push
stc
mov
in
addb
test
out
jae
aam
lock
rclb
loopne
div
mov
fs
push
adcl
or
loop
or
cmp
mov
shr
sub
nop
sbb
rclb
das
push
xor
in
push
push
mov
jmp
push
xchg
mov
jbe
jo
les
push
popl
seta
fwait
aad
push
jnp
push
pop
out
into
pop
push
cmp
add
dec
mov
or
jae
test
int
ja
paddusb
mov
mov
fsts
dec
pop
and
sbb
jno
shll
dec
cmp
mov
jecxz
mov
inc
pop
xlat
mov
mov
ljmp
inc
loope
lds
mov
std
mov
and
adc
xor
jnp
push
push
adc
push
jnp
jns
xchg
push
pop
and
xor
in
xlat
sbb
jge
into
ljmp
out
insl
inc
repz
icebp
aam
pop
push
mov
inc
or
loope
mov
bnd
jg
ret
xorb
ret
lcall
sub
inc
stos
sbb
jno
ret
and
lret
sub
lret
das
push
dec
aam
mov
ficoml
fsubrs
xorl
cli
dec
adcb
imul
mov
out
in
mov
inc
jle
xor
les
divb
cmc
fs
fsub
xchg
inc
push
in
rol
lods
fiaddl
pop
sbb
aad
mov
cmp
cmp
sbb
testb
test
pushl
push
pop
sub
and
sub
add
js
sub
lret
cmp
test
cli
add
or
xlat
inc
sbb
cmpsb
push
lds
bound
fdivp
lret
ret
stos
push
jbe
repz
push
xchg
or
iret
or
cmp
hlt
pop
rorb
mov
bound
mov
mov
fisubrl
clc
in
ret
orps
cmp
push
push
dec
nop
sbb
or
push
pop
pop
cmp
lret
adc
clc
mov
jge
and
inc
mov
fidivrl
pop
push
in
push
loope
gs
xchg
cmpsb
loope
or
dec
arpl
sub
pushf
test
cwtl
xchg
add
and
jo
or
iret
loop
sahf
js,pt
loopne
inc
pop
mov
push
movsb
sbb
ret
pop
dec
scas
adc
rcll
adc
clc
icebp
cltd
fsubl
fldcw
or
push
stos
and
filds
cmc
popf
inc
jge
faddl
sahf
push
scas
pop
xchg
sbb
mov
dec
js
loop
testb
xchg
xor
sbb
mov
daa
cmp
jo
push
test
lret
ret
mov
andl
xor
push
int3
push
cmp
out
nopl
sar
das
test
aaa
adc
mov
and
jb
or
loop
xor
pop
test
and
std
or
pop
stos
pusha
lcall
dec
iret
subl
xlat
xor
daa
int3
pop
or
push
repnz
iret
and
out
into
insl
ss
out
adc
lods
push
insb
lahf
stos
mov
scas
lret
lahf
mov
xor
or
subb
sahf
mov
sub
or
int
jmp
mov
mov
out
xchg
cmpsb
divb
test
gs
popf
xchg
repz
lock
mov
mov
cmp
push
push
cmp
fwait
daa
or
lcall
jmp
in
rcrb
sbb
and
iret
dec
xchg
fcmovnbe
fs
xchg
sub
pop
xchg
pop
pop
and
jle
cmp
and
adc
xchg
push
es
lods
hlt
fsubl
mov
inc
add
add
test
add
cltd
rclb
inc
scas
jmp
jle
pop
pop
sub
push
je
jle
mov
int
push
jmp
fisttpl
stos
add
sbb
inc
add
stos
and
leave
xchg
roll
mov
jno
and
fwait
xor
push
out
and
mov
testb
cmp
add
fdiv
call
push
jecxz
sub
les
mov
das
xchg
or
push
xchg
sub
mov
out
inc
and
xor
mov
roll
add
lea
mov
and
mov
adc
leave
mov
ret
fbstp
push
fistl
mov
pop
lcall
loopne
lea
lea
sub
loopne
push
fildll
cltd
cmpsl
call
sbb
ja
ja
les
inc
and
popa
ss
pop
xor
rcll
jg
mov
loop
sub
cmp
insb
and
leave
ret
inc
shlb
sub
inc
or
xchg
ret
pop
mov
cmp
dec
repnz
jne
roll
movsl
lcall
mov
fidivs
lds
std
scas
xor
scas
mov
shrl
adc
es
cli
cli
mov
add
in
push
cmp
fs
add
jns
jl
stos
mov
inc
mov
mov
mov
out
shll
add
popa
and
fcomip
mov
and
call
push
push
mov
add
popa
inc
iret
xlat
and
in
nop
sahf
repnz
movsl
sbb
shlb
push
cld
cmp
lret
and
ja
je
push
icebp
push
mov
mov
insb
or
les
outsb
sub
xchg
mov
jnp
inc
clc
sbb
sahf
lds
shl
jo
enter
icebp
push
dec
imul
xchg
push
jle
pop
inc
xchg
ret
xor
inc
ja
inc
stos
mov
cwtl
dec
sbb
mov
dec
ret
add
dec
dec
mov
xor
hlt
cld
inc
out
mov
rorb
jno
jp
enter
idivl
ss
lret
sub
jb
or
xor
fsubl
and
pop
in
and
dec
lahf
xor
mov
adc
ljmp
adc
fisttps
clts
jb
and
push
push
jp
fdivrl
xlat
pop
lds
adc
idivl
out
add
loopne
inc
xchg
or
push
cwtl
cs
mull
jns
pop
fbstp
je
xchg
xchg
mov
in
push
rep
popf
push
lret
sbb
imul
inc
lds
inc
insl
sbb
cwtl
xchg
xor
call
lcall
scas
jae
movl
mov
jmp
add
sub
imul
into
sarl
jae
sbb
popf
pop
js
sbb
lock
dec
popf
loop
bound
push
rol
adc
rclb
push
data16
sti
cwtl
mov
sub
jno
mov
add
ds
sbb
cmp
xchg
dec
shlb
sub
xor
sbb
cld
and
fistl
pop
sbb
or
push
test
lret
cld
cli
lret
ret
arpl
ss
jmp
cs
adc
in
repnz
inc
pop
fcmovnb
int3
push
js
mov
cli
test
xchg
mov
inc
and
jg
mov
leave
xor
jbe
jbe
stos
dec
push
jns
adc
jge
int
ljmp
and
sbb
nop
cmp
insl
mov
cmc
lock
dec
call
sbb
jnp
flds
ret
xor
xlat
lds
or
repnz
xchg
add
fisubrl
ljmp
sti
and
mov
jmp
lds
lahf
pop
fsubl
loop,pt
and
adc
les
push
subb
pusha
lock
fcmovbe
mov
cltd
out
jge
cmp
xchg
stos
es
inc
xor
aaa
in
inc
ret
sbb
shlb
ljmp
into
cwtl
ljmp
in
jbe
sub
fisttps
test
cwtl
jp
jae
in
add
mov
ja
adc
rcrb
enter
ss
adc
xchg
or
add
push
pushf
sbb
mov
rcrl
std
outsl
hlt
or
jge
hlt
pop
adc
repnz
stos
sub
sbb
dec
into
inc
mov
outsb
rorb
and
xchg
popa
out
mov
popa
popfw
das
popf
xchg
lea
stos
adc
xchg
add
mov
idiv
mov
dec
inc
fistpll
mov
sub
xchg
aad
xchg
inc
push
jge
out
or
sbb
push
jp
ss
in
xchg
xchg
adc
mov
adc
push
xorl
dec
sub
add
xchg
shrl
es
mov
adc
clc
add
rcll
or
fiaddl
cmp
stos
push
movsb
in
popa
cld
daa
cld
loopne
xor
and
ficompl
mov
cltd
pop
xor
dec
loope
push
fmull
cmp
pop
pop
shl
mov
aas
out
add
clc
aam
mov
arpl
cwtl
cmp
data16
cmpsb
inc
iret
mov
push
mov
pop
mov
or
sbb
ret
pop
enter
xchg
mov
popf
push
mov
mov
je
js
lret
dec
jno
dec
mov
mov
and
in
mov
mov
loope
lret
aaa
xor
pop
inc
imul
mov
mov
xchg
sub
rorl
sub
push
jae
jns
out
and
pop
inc
aam
repnz
das
std
bnd
inc
pop
push
loop
sbb
adc
leave
pop
pop
adc
into
inc
shlb
inc
add
add
xchg
and
xchg
in
mov
dec
iret
aam
or
dec
sar
rcr
push
jecxz
mov
jo
xor
dec
cwtl
mov
cmpsb
imul
sub
mov
repz
xlat
dec
inc
and
xchg
push
outsl
pop
xchg
push
popa
lods
jo
jb
cwtl
sub
xor
inc
dec
cmp
pop
mov
ror
sahf
push
jmp
xchg
ret
outsb
mov
test
mov
rorl
subb
lret
jmp
fisubl
lret
xchg
and
cmc
lds
or
pop
jns
insb
nop
rolb
ss
pop
mov
fwait
push
adc
fwait
jl
pop
mov
adc
add
stos
es
and
lret
sahf
repz
sbb
cmpsb
push
adc
and
popl
push
or
test
mov
pop
shll
lret
mov
jo
ret
adc
ss
add
hlt
push
push
out
adc
in
or
sti
xlat
sahf
cmp
adc
int
cmpsb
xchg
ret
mov
fisubs
lock
mov
cmp
jmp
fsubrs
add
and
lock
push
int
pushf
test
shrb
dec
arpl
pop
js
or
mov
nop
outsl
pop
mov
sahf
cmp
mov
out
add
fisubrs
sahf
xchg
ss
pop
fwait
shlb
movsl
sti
repnz
push
sub
ret
call
add
jmp
loopne
cs
inc
sub
cmp
inc
sbb
mov
sbb
inc
push
xor
popfw
jnp
pop
pop
mov
loope
nopl
add
jecxz
sbb
scas
scas
andb
or
scas
mov
pop
push
mov
xchg
xor
out
lds
xchg
in
unpckhps
dec
out
loopne
arpl
push
xchg
and
addb
lods
fcompl
xchg
or
daa
push
mov
pop
xchg
or
cli
jmp
pop
xor
sbb
ss
cmp
outsl
jbe
in
xchg
push
jno
sbb
test
mov
lds
test
shlb
or
xchg
pop
xchg
insb
or
int3
loopne
in
inc
sbb
cs
addps
cs
sbb
test
inc
fs
sub
jecxz
jne
push
inc
lahf
jecxz
xor
repnz
insb
test
div
pop
lcall
adc
pop
jne
sbb
fisubl
inc
stos
push
daa
inc
mov
ret
arpl
pop
rorl
gs
adc
mov
xlat
pop
mov
jg
jle
loopne
lods
jle
fcmovne
inc
loopne
cs
clc
xchg
andl
dec
pop
inc
adc
xor
fstp
cs
jo
cmc
cmp
mov
and
inc
dec
popa
pop
cmp
cmpsb
sub
adc
icebp
stc
and
sbb
stc
add
aaa
ficompl
pusha
jno
imul
int
jb
and
clc
sub
andb
mov
adc
or
xchg
jecxz
sub
js
push
or
cmc
xor
out
and
jmp
add
sub
push
lret
push
mov
xor
xchg
or
pusha
pop
sbb
das
and
dec
or
in
scas
aaa
mov
pusha
outsl
push
xchg
add
sbb
pop
sahf
cltd
cmp
icebp
nop
cmp
sbb
inc
aaa
fidivrl
arpl
push
stc
bound
shlb
in
pop
scas
jg
ret
loope
xchg
stc
inc
mov
pushl
mov
fisubrl
test
clc
fmull
push
aaa
ja
stos
pavgb
adc
mov
pop
inc
pop
mov
xchg
jmp
gs
imul
dec
orl
sbb
lods
push
push
inc
mov
cmp
sub
test
push
and
and
cmp
in
pop
inc
out
iret
mov
in
push
into
js
cmpsl
add
rcrb
je
inc
repz
gs
pop
loope
fcom
incb
xorb
mov
cmp
mov
lret
mov
cmp
xlat
push
mov
add
daa
sub
cmp
ffree
pop
xor
fadds
add
push
xchg
xchg
inc
jge
mov
push
cs
sbb
inc
mov
fmull
xor
or
jmp
faddp
xchg
cmpsb
and
aam
pop
adc
dec
and
sar
pop
loope
cli
push
mov
gs
int3
xor
insl
sbb
stos
shll
add
push
call
into
xchg
dec
sbb
push
jge
fdivs
lds
pop
sbb
sbb
jb
push
in
mov
sub
int
stc
lcall
cmpb
add
xchg
incb
fmuls
leave
push
jmp
dec
or
testl
leave
loop
push
out
xor
ss
testl
lds
push
adc
add
incb
cs
popf
push
mov
mov
adc
push
push
pop
movsb
xor
mov
repz
pop
mov
inc
xchg
aas
enter
cmp
fmuls
stos
ret
pop
xor
inc
ret
pop
push
call
lret
hlt
cmp
push
out
jg
addr16
cmp
push
jmp
jmp
repnz
mov
fsubrs
jb
js
fidivl
rsqrtps
inc
sbb
xlat
iret
cmpsb
data16
and
mov
in
pop
dec
pop
call
adc
and
fnsave
mov
mov
ret
cld
ljmp
mov
inc
jmp
xchg
aad
js
lods
jp
add
inc
adcb
inc
push
clc
cs
loopne
dec
jmp
push
or
cmp
cld
movsl
and
lret
pop
in
pop
push
pop
sub
xchg
lret
rcrb
sub
sti
mov
movsb
or
dec
pop
dec
xchg
push
inc
cs
imul
movsl
pop
cmp
jge
mov
fistl
cmp
dec
in
cmp
adc
and
fadds
dec
repz
jnp
aam
ds
push
xor
push
jb
lcall
repnz
test
das
mov
pop
mov
roll
sub
pop
lods
movl
sbb
lods
mov
inc
adc
test
cmp
pop
sbb
xchg
notb
andl
sub
mov
lods
loop
fcompl
mov
psubw
pop
sahf
xor
mov
pop
mov
cld
adc
les
mov
lret
ret
jns
push
jmp
pop
push
aad
movsb
and
ja
movsb
out
sub
sub
sahf
add
clc
sarl
push
xchg
push
mov
lret
xor
lret
xchg
xor
fwait
or
test
testb
jle
hlt
mov
out
or
xchg
inc
jmp
stc
sub
gs
cmpb
lret
in
mov
ja
xchg
or
shll
mov
lods
movsb
mov
and
add
les
sti
lahf
neg
clc
jle
std
and
ds
gs
push
or
fmuls
jp
leave
inc
mov
and
arpl
xchg
loop
adcl
push
or
sbb
test
insl
in
inc
sbb
into
mov
test
gs
xchg
shlb
pop
sbb
sbb
xor
pop
dec
add
sub
out
out
inc
or
into
jmp
addl
imul
outsl
add
mov
jp
fcomi
cmp
sbb
xor
or
std
push
loope
push
retw
cmp
shl
mov
jns
stos
ret
push
dec
push
mov
aad
fistpl
mov
adc
cli
fwait
adc
jne
sub
sahf
or
loope
xchg
inc
or
mov
sub
pop
cwtl
bound
xchg
enter
mov
and
sbb
movsl
and
or
inc
add
movsb
sti
mov
and
xchg
jnp
jecxz
sbb
stos
nop
stos
mov
mov
lahf
cmpsl
adc
int3
fs
ret
scas
faddl
outsl
orb
aad
mov
jbe
inc
mov
in
cwtl
loopne
das
fimuls
and
outsb
pop
leave
push
sbb
test
adc
xor
push
pop
fwait
mov
out
xor
jp
xchg
add
mov
jle
sub
add
hlt
mov
out
mov
and
test
xorl
inc
xor
xorb
and
pop
fwait
iret
in
mov
or
mov
dec
mov
repz
scas
shlb
pop
jns
mov
mov
push
stos
push
push
pop
inc
xchg
sub
in
adc
mov
mov
inc
or
and
cs
jbe
sbb
stc
lods
jno,pn
sbb
lret
test
adc
fimull
sub
pcmpgtb
inc
stc
or
push
icebp
aam
cs
iret
pop
mov
or
push
dec
in
mov
sti
out
sub
or
popf
inc
mov
in
or
mov
shr
cmp
pusha
out
gs
adc
dec
or
mov
test
push
sub
jne
inc
add
std
icebp
ja
daa
jge
insl
mov
shl
out
das
mov
xchg
mov
aad
bound
pushf
jp
add
mov
cwtl
cs
jnp
sub
jno
dec
in
mov
sbb
jle
scas
add
push
jo
mov
jbe
int3
mov
in
subb
add
aad
out
jne
mov
imul
aas
fcoms
ffreep
insl
mov
imul
addl
pop
test
adc
cmc
and
and
add
jo
shll
ljmp
les
mov
test
xor
lret
sbb
and
pop
inc
testl
mov
pop
inc
loope
sbb
scas
arpl
dec
fistpl
in
loop
push
insl
cwtl
dec
into
xor
loope
xchg
jl
xchg
rcll
cmp
insb
icebp
data16
sub
push
ss
dec
aas
cmp
shll
mov
push
mov
mov
cmp
shl
or
sub
sub
xchg
sbb
nop
stos
and
or
push
adc
fnstenv
xor
int
call
dec
jp
scas
psubusb
lds
jge
lret
repnz
or
cmp
pushf
popa
mov
jecxz
inc
shlb
insb
jb
sti
adc
jo
mov
dec
mov
cs
xor
or
ja
ficomps
ss
pusha
sub
scas
jmp
cmp
sarl
sbb
movsl
fistpl
push
sub
xor
adc
jne
mov
xor
pop
fsub
test
leave
lds
repz
movsb
or
aam
hlt
in
sub
dec
dec
jbe
shll
js
mov
and
dec
rol
inc
ljmp
fistpll
mov
test
test
push
dec
mov
sti
mov
outsb
cmp
dec
daa
sbb
jle
test
push
add
scas
cwtl
rcll
sub
cmpsb
and
imul
movsl
sbb
scas
bnd
loopne
cmp
sbbl
mov
xchg
mov
fistpll
popa
adc
pop
out
ja
sbb
and
lret
cmp
xor
lcall
push
mov
stos
lahf
shll
sub
adc
sub
cmp
popf
jns
pop
push
sub
jno
pusha
cmp
dec
in
xor
sbb
dec
mov
js
cmp
cmpsb
cld
test
stos
inc
jp
pop
adc
jnp
or
fwait
mulb
adc
nop
dec
sbbl
in
insl
pop
xchg
lods
mov
sti
mov
sub
pop
test
xchg
mov
es
sti
lock
or
cmpsb
pop
fstl
clc
mov
imul
inc
out
call
dec
shl
mov
subb
jb
ja
outsb
adc
mov
mov
jne
inc
sahf
ret
rcrl
adc
mov
pop
jp
lds
mov
scas
imul
hlt
mov
aam
cld
dec
push
mov
orb
cmc
sbb
jbe
xor
int3
scas
cmp
clc
cltd
mov
lods
js
jns
sub
loop
loopne
dec
mov
std
popf
clc
inc
xchg
js
insl
arpl
cmpsl
ljmp
mov
loopne
es
jns
inc
clc
out
bnd
in
fucom
add
and
xchg
xor
xlat
imul
xor
mov
sbb
scas
mov
pusha
rcrl
ljmp
jno
jns
dec
stos
out
inc
aaa
lods
mov
loop
sbb
add
repz
push
mov
xor
icebp
and
cwtl
pop
imul
cmp
sbb
sbbl
mov
loope
mov
out
xor
adc
cmc
xchg
mov
stos
loope
sub
popf
jb
insl
xorb
sbb
sub
pusha
add
adc
sarb
adc
add
aad
test
mov
popa
or
push
mov
xor
outsl
add
sub
pop
das
adcb
fld
mov
inc
lea
pop
lahf
in
xor
dec
inc
xor
adc
lahf
imul
insl
mov
ss
jbe
inc
jne
leave
int
xchg
repnz
mov
int
lods
pop
mulb
inc
xchg
repnz
cmp
frndint
add
adc
and
pushf
mov
es
imul
and
imul
jns
xchg
jo
fbld
in
dec
or
dec
xlat
mov
das
das
shlb
push
lahf
cmpsl
leave
add
mov
and
stos
or
iret
mov
movsl
adc
scas
nop
xchg
or
nop
mov
pop
je
sub
fldl
das
push
sub
pop
inc
or
stc
js
js
mov
add
dec
shlb
rol
icebp
sbb
cmp
sbb
lea
mov
jae
pop
mov
jnp
pop
mov
and
movsl
cmp
mov
adc
movsb
push
insl
mov
xchg
or
jg
inc
out
mov
pusha
xor
test
sub
dec
push
std
test
push
push
mov
cmp
jno
jmp
out
push
adc
fisubrs
out
sub
sub
insl
mov
lods
xchg
mov
imul
mov
or
xchg
fcoml
and
cmpsb
in
mov
fbstp
mov
lds
xor
add
pop
sub
jmp
fwait
adc
jge
sbb
push
push
mov
into
stos
addb
cltd
frstor
sbb
movsl
dec
jae
xchg
gs
adc
jmp
mov
push
daa
adc
repnz
test
ss
push
pushf
sub
test
ds
pusha
xor
cmpsb
sbb
idivl
shrb
enter
cmpsb
ret
dec
xchg
pushl
cli
lret
incl
in
decb
push
dec
fisttps
rcrb
jnp
add
rclb
lods
dec
dec
mov
scas
addl
fbld
push
adc
insl
pop
dec
jge
cwtl
push
call
mov
sar
cld
mov
push
dec
inc
and
xchg
mov
mov
xor
sub
mov
ja
mov
push
push
sar
cwtl
int
mov
sti
sahf
fwait
rorl
out
mulb
orl
or
inc
dec
filds
std
lea
add
xchg
into
aaa
sbb
cld
ljmp
outsl
push
outsb
jns
mov
insl
cmpsl
std
popf
push
popa
sub
std
fsts
xor
es
jle
in
push
sub
adc
call
fistpl
rorl
xchg
or
test
mov
mov
add
ror
and
sbb
cli
rcl
insl
mov
mov
jno
sbb
gs
push
adcb
ss
sbb
cmp
mov
out
in
out
push
mov
push
push
jae
pushf
ja
jbe
adc
cli
lahf
add
dec
ss
xchg
icebp
xchg
addb
mov
sbb
aaa
fcomi
push
mov
mov
adc
andb
jmp
in
imul
pop
enter
lods
push
jns
inc
sub
pop
into
sbb
dec
xchg
xchg
inc
xchg
inc
shl
push
mov
mov
out
jg,pn
dec
mov
int3
and
jae
xor
fld
cmpsb
cmp
jl
cmpl
mov
in
ret
jg
cli
bound
ss
mov
icebp
jp
mov
dec
mov
jecxz
mov
insb
push
aas
or
adc
inc
inc
inc
push
adc
or
gs
test
inc
or
ljmp
fnsave
loop
clc
sti
dec
xchg
xor
out
fisttps
mov
lret
in
movsb
sub
loope
pop
mov
arpl
loopne
jb
xor
adc
pop
push
mov
movsb
enter
es
push
push
pop
xor
arpl
fs
push
mov
and
scas
insb
ret
mov
filds
mov
cld
and
xchg
push
xchg
mov
add
inc
icebp
jne
dec
sbb
jp
insl
stos
jge
xchg
adc
notl
cmpsl
push
lods
or
fbstp
mov
dec
rclb
mov
or
fdivrl
dec
xorl
pop
lret
or
sbb
xchg
out
shl
scas
jbe,pn
leave
pusha
or
lret
sub
rcrl
pushl
clc
movsl
jge
adc
jns
sbb
lcall
cld
pusha
jmp
inc
add
enter
mov
nop
aam
jnp
fwait
lret
jns
pop
inc
mov
mov
cmp
ds
mov
inc
shrb
iret
push
sbb
add
inc
arpl
xchg
movsl
lods
mov
adc
xorl
negb
push
lock
or
stc
gs
out
push
dec
xchg
dec
ret
std
stc
sbb
mov
or
pop
mov
and
arpl
arpl
jno
xor
insl
xchg
push
mov
in
repz
and
insl
test
out
mov
scas
inc
mov
ret
sub
std
sbb
xor
faddp
adc
pop
lret
dec
lcall
stos
adc
lds
xor
shlb
out
and
jmp
xlat
mov
jns
movb
mov
repnz
mov
dec
push
inc
js
in
sbb
xor
bound
jb
cmp
nop
fcoms
mov
pop
jl
cmp
pop
ficomps
cmp
pop
push
shll
in
dec
sarl
push
xor
in
xor
xlat
aam
dec
dec
imul
add
sar
sub
push
push
jns
mov
sbb
add
testl
cmpsl
and
jecxz
and
fwait
loop
ret
xor
pop
outsl
in
cld
mov
rcrb
lret
orl
cmpsl
mov
sbb
jne
scas
pop
out
ds
stos
mov
jnp
jp
les
ret
aad
add
cwtl
add
inc
into
add
dec
xchg
call
testl
imul
icebp
in
int3
dec
rcrl
xor
push
push
test
mov
and
pop
lahf
loopne
in
aam
mov
or
movb
mov
push
or
arpl
in
sub
addr16
pop
and
idivl
enter
flds
mov
test
imul
mov
call
call
out
add
sbb
loopne
in
repnz
lds
sub
xchg
xor
adc
and
cmp
das
push
movsb
fnstenv
push
mov
incl
sub
pop
jmp
cmp
inc
sahf
or
or
inc
pushf
sub
adc
in
sbb
mov
xchg
push
mov
lret
sub
and
adc
jo
repnz
jns
pop
jnp
outsb
jecxz
mov
mov
inc
mov
mov
shrl
mov
sbb
leave
jg
cmpsl
push
popl
xchg
cmp
out
test
pop
jbe
daa
cs
cwtl
cli
arpl
sub
jo
jmp
jns
sub
ret
int
mov
arpl
xchg
arpl
pop
adc
xlat
or
sbb
cli
nop
int3
sbb
outsl
jns
pop
scas
xlat
mov
int
cwtl
cmpsl
lods
and
call
subl
mov
jbe
inc
mov
ret
inc
push
stos
xchg
cmp
test
xchg
jbe
data16
sahf
lods
xchg
jne
xchg
pop
divb
jg
fiaddl
xchg
push
iret
mov
pop
aam
adc
mov
mov
lcall
or
jg
les
rolb
gs
lahf
arpl
or
icebp
add
faddl
movsl
sahf
test
rcll
stc
xchg
push
mov
mov
dec
jb
cmp
mov
inc
jbe
aad
enter
iret
stos
movsl
out
adc
mov
inc
adc
jb
outsb
leave
cmpl
arpl
hlt
out
das
rorb
pop
or
enter
das
dec
cmpsl
jmp
cmp
sub
insl
jns
jg
cli
pop
fldcw
sahf
and
insb
flds
lret
add
sbb
push
cwtl
lea
call
shll
xlat
adc
in
call
cmpsl
loope
jo
add
in
cmp
or
outsb
das
outsl
mov
repnz
push
test
nop
out
inc
dec
sti
aas
clc
popf
int
std
or
and
or
lahf
inc
and
test
jle
xchg
cmpsb
mov
dec
jecxz
sbb
in
inc
iret
lods
mov
fst
jmp
ror
pop
jl
pop
or
cmp
dec
bound
das
inc
jne
adc
cmp
dec
shlb
add
and
leave
jb
sub
pop
lret
test
pop
jb
and
push
xchg
push
lods
mov
mov
stc
xor
cmp
rorl
or
pop
ss
inc
sbb
cmpsl
jo
xor
cmp
dec
std
mov
pusha
data16
stos
std
jg
cmc
jnp
scas
pop
jo
jbe
fmuls
add
and
jge
cmp
jp
sbb
jns
cmp
aam
gs
mov
or
cld
sub
mov
es
ja
cli
xor
in
push
add
lcall
or
ret
lcall
or
cmp
sbb
dec
stc
scas
sbb
popf
jl
pushl
pop
ljmp
sbb
or
testl
test
pop
int
fwait
scas
adc
repnz
je
mov
mov
xor
fs
movsl
sbb
loopne
leave
and
adc
jb
data16
cltd
add
or
cmpsl
jp
gs
ljmp
xorb
jae
xchg
pop
fdivr
jae
fsub
shrb
xchg
mov
lods
xchg
mov
lds
lods
mov
hlt
add
xchg
jecxz
cmp
and
dec
popa
out
cli
adc
jle
jecxz
push
cltd
fcoms
xchg
lea
push
out
cmpsl
dec
nop
cmp
test
add
inc
jecxz
xor
xor
mov
inc
es
mov
sub
sbb
insl
scas
cltd
aad
mov
add
movsb
mov
jle
push
and
mov
mov
in
mov
xchg
mov
xchg
adc
sahf
js
icebp
movsb
fidivrl
or
outsl
movsb
xchg
fisubrs
sbb
or
pop
sub
daa
pop
imul
loope
dec
mull
adc
out
mov
sahf
ret
clc
lret
pop
adc
bts
push
mov
xchg
ss
je
mov
hlt
daa
inc
xor
es
mov
and
jle
sub
push
popa
icebp
pop
mov
mov
push
enter
add
sbbb
outsl
cmpsb
adcl
mov
sub
jbe
lcall
xchg
pop
sbb
push
sbb
push
dec
cltd
dec
rol
sub
lock
sar
add
jmp
scas
mov
loope
movsl
and
jl
cltd
out
imul
decb
xchg
stc
add
cli
loope
xchg
or
std
and
pop
pop
mov
sti
mov
ficoms
insb
lret
imul
stc
xor
outsb
xchg
stc
lods
loopne
mov
jge
clc
inc
mov
ds
sarb
jne
bound
add
mov
out
mov
call
fsubrl
cld
dec
fwait
imul
or
xchg
xorl
pop
loopne
aas
dec
jp
les
fidivrl
xchg
jl
mov
rorb
mov
add
shl
mov
mov
push
mov
mov
adc
aaa
xor
shrb
iret
inc
push
lock
orb
push
aaa
pop
cmpsl
jb
adc
sbb
cmc
popf
loopne
dec
inc
repz
ret
dec
xchg
mov
scas
mov
dec
jl
jle
in
rorb
push
fistpll
rolb
rorl
popf
fcomps
sarb
mov
subb
lcall
jb
push
sbb
daa
test
mov
push
push
add
test
dec
addl
shll
sbb
or
sub
daa
or
test
xchg
lcall
stos
xchg
mov
repz
sub
popa
hlt
test
lods
inc
mov
push
in
cwtl
xchg
or
das
jl
or
in
outsb
or
mov
lock
add
cmp
fstl
inc
out
aad
push
xchg
je
add
aam
fmulp
jle
inc
sub
jns
push
nop
scas
scas
dec
fisttps
and
add
push
pushf
bound
aam
fcomip
jb
mov
hlt
and
shll
cld
jge
outsl
mov
pop
jg
sub
pop
cmp
scas
call
or
bound
dec
lret
pop
inc
iret
jne
jg
and
jge
adc
out
jmp
ret
jl
mov
gs
test
cmp
adc
add
les
cwtl
sub
jmp
sub
sbb
enter
add
xchg
cmp
fyl2xp1
sub
je
cltd
mov
cld
scas
aas
ja
inc
inc
mov
lahf
lods
sub
lret
xchg
mov
jbe
cmp
enter
das
push
jle
out
std
es
ret
daa
fadds
dec
pop
mov
adc
xchg
test
adc
lcall
cmc
sti
int3
movsb
adc
mov
pop
add
lcall
add
in
sub
push
ret
into
add
movsb
popf
mov
pop
in
ret
add
stos
sbb
jbe
mov
mov
ret
cmp
mov
popf
inc
jmp
aam
fldt
jb
cmp
pop
into
lds
test
cmp
aam
mov
and
aas
lods
xlat
sub
and
ficomps
lcall
mov
mov
or
loope
and
jmp
js
cmp
jge
shll
sub
rcll
rcll
jle
mov
movb
sbb
xor
fsub
mov
fcmovb
in
xchg
push
in
notb
dec
lcall
add
xchg
cmpsb
mov
push
int3
sub
sbb
and
mov
add
adc
jne
mov
mov
xchg
jg
leave
sbb
xchg
xlat
dec
cmp
push
sbb
xchg
stos
cli
jecxz
clc
sub
and
lds
imul
xlat
imul
test
jge
xchg
mov
out
leave
or
popf
fsubrs
pop
stos
popa
scas
cmp
jnp
or
daa
pushf
lret
lock
loope
push
ljmp
fstpt
pop
jge
lcall
inc
cmp
cmp
stos
lea
mov
imul
push
fdivrs
mov
leave
mov
mov
out
nop
sti
mov
mov
cmp
sub
inc
daa
mov
mov
in
fcomps
mov
sub
je
gs
mov
add
js
jg
mov
dec
mov
fdiv
addl
int3
push
xchg
dec
jl
jns
mov
lock
dec
test
pop
add
dec
mov
repz
fnstcw
or
inc
or
filds
xchg
mov
mov
push
lret
inc
orb
es
shll
aad
inc
adc
add
jp
subb
adc
in
in
mov
pushf
dec
mov
pop
mov
fwait
test
iret
jmp
and
stc
push
shll
imul
pop
adcl
jle
add
inc
cmp
test
lret
sub
mov
iret
and
mov
xchg
or
fstpt
mov
pop
icebp
xchg
pop
and
test
das
push
js
mov
pop
imul
mov
loopne
arpl
mov
xor
cs
inc
mov
scas
pop
lcall
mov
jmp
add
mov
into
loope
push
fldcw
and
xor
mov
cwtl
leave
mov
inc
inc
add
insl
sub
mov
scas
cmp
call
xor
das
adc
cmp
stos
popa
push
sti
jecxz
int3
push
push
test
and
pop
faddp
psadbw
push
pusha
out
jle
jo
xchg
mov
mov
cli
outsl
fisubs
xor
cmp
or
mov
pop
and
mov
lret
aam
divb
jb
push
sbb
inc
xchg
jp
cmp
adc
inc
cwtl
cld
mov
lea
cwtl
je
xor
xchg
fldl
add
mov
mov
inc
subl
jmp
loop
arpl
cmp
pop
cltd
cmpsl
cmpsl
cmpsb
inc
adc
test
cmp
gs
subl
in
adc
popa
cs
pop
std
mov
cmp
push
dec
xchg
adc
push
repz
sti
shlb
in
leave
mov
jnp
xchg
add
dec
mov
lods
jecxz
xchg
lock
fstpt
xchg
and
les
jbe
roll
int3
sub
addr16
sbb
xor
ss
daa
mov
lahf
in
mov
push
inc
push
cld
orl
jae
data16
dec
int
sbb
testb
pop
sti
sub
enter
test
cwtl
xor
dec
sbb
cmp
add
repnz
sbb
add
test
movsl
outsl
mov
hlt
xchg
add
jg
mov
mov
addb
inc
loope
push
leave
xchg
addl
pop
in
pop
jae
mov
add
push
jg
adc
arpl
push
out
icebp
cmpsl
outsb
call
inc
push
add
ret
sub
std
cmp
loop
mov
adc
iret
sub
hlt
mov
dec
add
cmpsb
in
dec
mov
loope
and
xchg
in
test
adc
out
inc
pop
call
repz
push
insb
dec
loop
imul
out
andb
scas
cltd
add
popf
inc
bound
jg
inc
shll
jns
test
addr16
int
clc
and
mov
sub
rcrl
sub
cmp
incb
cmc
cmp
adc
inc
push
xchg
aaa
dec
shll
movsw
out
cmc
fsts
jb
rcrb
add
sbb
and
in
and
xchg
add
mov
iret
pop
sub
pop
sub
push
dec
xor
popf
test
into
mov
inc
mov
and
adcl
inc
mov
fsubrs
out
pop
sub
push
mov
add
sbb
adc
pushf
fidivrl
imul
pop
das
sahf
adc
mov
push
mov
mov
in
mov
dec
dec
stos
sbb
jge
jnp
scas
xchg
and
cmpsb
pusha
or
pushf
and
repnz
mov
mov
push
pop
cmpsl
out
adc
stos
lods
jae
imul
mov
xor
push
in
cli
cmp
popf
test
test
xchg
sbb
sub
insl
shrl
fs
dec
in
test
ss
daa
or
fwait
gs
nop
decb
mull
jne
jge
inc
std
in
cmp
pop
mov
popa
pop
aam
push
iret
push
add
jmp
pushf
and
sbb
cmpsl
push
push
aad
xchg
lret
cwtl
cmp
mov
cld
adc
aaa
xchg
mov
lahf
out
sub
sub
and
jbe
mov
lds
loop
push
scas
jnp
xlat
sbb
mov
lret
cmp
data16
loop
sub
add
js
pop
adc
iret
test
lock
sub
pushf
jmp
orl
sti
lock
jbe
dec
clc
xor
hlt
ret
repz
xorl
inc
xlat
adc
ret
gs
cli
dec
sub
lcall
pop
dec
inc
ljmp
ljmp
inc
adc
popl
adc
shlb
dec
aad
pop
incl
dec
xor
push
mov
xor
sub
xor
mov
out
test
sti
and
fdivrl
jne
mov
fs
jne
loopne
xchg
sbb
lret
xor
dec
leave
addr16
push
bound
fwait
in
das
mov
mov
xor
cmp
mov
test
sub
xlat
xchg
lds
or
jb
dec
imul
pop
mov
arpl
ds
negb
push
pop
movsb
dec
pop
jle
pop
cmpsb
pushfw
test
insb
sbb
das
out
push
negb
test
and
stos
mov
mov
jle
sbb
test
test
aam
adc
mov
xor
sbb
inc
fs
jne
push
inc
lret
repnz
mov
jge
lcall
mov
shrb
xchg
sbb
rol
adc
jle
pop
nop
andb
std
pop
sbbb
mov
pop
push
rolb
lret
test
dec
sub
xor
pop
popf
mov
sub
mov
pop
daa
mov
xor
std
mov
jo
pop
andl
xor
push
ja
sub
mov
out
or
in
push
ret
inc
shl
popf
aad
popf
jecxz
stos
push
inc
js
pop
push
ja
ret
iret
test
mov
fldt
jbe
movsb
bound
jbe
cmp
pusha
cmp
mov
ffree
out
jns
aad
sbb
add
test
stos
repz
jnp
adc
sti
in
or
push
xchg
scas
sqrtps
xor
into
and
lcall
xor
bound
push
cmc
xchg
and
cmp
loop
push
mov
ret
lret
inc
push
mov
pop
xorl
jns
inc
dec
jns
jmp
cmp
jbe
xchg
jg
int
lods
and
mov
icebp
idivb
mov
sub
je
das
in
ret
scas
dec
cmpsl
jp
or
test
mov
sub
iret
orb
lock
nop
jb
ficompl
movsl
dec
daa
or
lods
into
dec
cs
mov
sbb
mov
aaa
push
into
sarb
loopne
jle
mov
lods
out
push
xor
ret
xchg
stos
dec
add
in
cmpsl
jne
mov
pop
lret
dec
xchg
adc
cli
sub
cmp
enter
sbb
adc
addr16
lods
inc
xchg
orl
pop
rcr
dec
pop
in
xchg
and
daa
mov
jp
and
inc
xor
jbe
in
mull
fdivrl
mov
mov
insb
pop
mov
testb
ret
lea
lcall
js
cmpsl
loope
cmp
mov
ret
mov
mov
stos
jp
adc
dec
lcall
sub
hlt
stc
and
push
scas
test
popf
or
dec
pop
je
repnz
xor
aam
add
jbe
dec
or
cmp
xor
and
outsb
mov
push
mov
xchg
inc
es
sbb
mov
sbb
or
clc
loope
mov
fldcw
pop
push
sub
dec
sub
icebp
dec
sahf
std
and
pushf
mov
repz
or
fdivrl
orl
push
pop
and
mov
pop
and
add
mov
cmpsb
cmp
call
pop
lds
aam
and
scas
mov
sub
pop
cmpsb
mov
aam
pushl
jle
add
icebp
xor
lret
fst
fisubrs
push
dec
test
adc
sub
add
adc
sahf
and
ja
push
mov
shrl
icebp
inc
and
aam
in
int3
pop
xchg
movsb
js
adc
and
call
or
hlt
sub
and
movsl
js
imul
xor
stos
and
enter
insb
cmc
mov
inc
push
or
fs
aad
push
shrb
negb
sub
mov
mov
pop
pop
push
gs
outsl
js
or
sbb
push
xchg
sub
pop
xor
out
imul
xchg
pop
or
xor
fs
fisubrl
rcl
jmp
fcomp
loopne
and
mov
inc
mov
mov
jnp
fildl
nop
out
mov
mov
out
and
cs
movsl
sub
or
sarl
sub
pop
pop
dec
lahf
sbb
or
xor
shr
sub
push
push
es
mov
and
or
mov
xor
lahf
xor
out
jp,pt
aas
pop
data16
imul
outsl
push
jo
lret
push
bound
aas
jmp
pop
add
out
mov
sub
pop
jecxz
out
xchg
push
sbb
dec
cltd
aas
add
lock
mov
shll
jp
add
jmp
mov
push
outsb
fbstp
fs
or
pop
adc
pop
cmp
sbb
push
test
xchg
aaa
shrb
out
and
aas
push
rcr
sub
adc
xor
cwtl
xchg
and
fsubr
rol
fsubrl
and
pop
pushl
cmp
push
je
stos
fwait
or
mov
jge
sub
pop
push
dec
lret
repz
mov
fsubs
xor
sahf
xor
nop
inc
lret
jb
pop
push
jle
jmp
jle
sub
cld
enter
cltd
xor
cmp
mov
mov
mov
or
lea
push
lods
aaa
sub
std
lahf
gs
ret
out
ljmp
call
push
dec
movsb
sbb
and
cmp
mov
sbb
insl
lahf
inc
add
xchg
pop
andb
push
mov
pop
dec
inc
in
jg
adc
jo
xor
iret
frndint
xchg
pop
dec
and
rclb
jbe
pop
jb
ret
xor
insl
mov
movsl
cs
fidivrs
sarb
sub
mov
dec
mov
push
push
push
dec
mov
sti
outsb
movsl
cld
inc
addb
les
daa
cli
jge
arpl
add
aaa
add
or
push
push
les
adc
outsl
daa
out
subl
push
cmp
mov
ljmp
cmp
jnp
test
pop
cmp
jae
sbb
addb
mov
mov
xor
in
daa
inc
enter
subl
iret
xor
fidivrs
lds
pop
aaa
mov
out
scas
push
repnz
inc
int
lret
cmp
adc
jmp
push
sbb
mov
lahf
xchg
xchg
lds
mov
push
mov
cmp
scas
dec
push
push
mov
or
xchg
mov
in
push
fists
das
jno
mov
pop
lea
push
mov
dec
je
pop
push
inc
sbb
or
faddl
mov
pop
dec
lods
hlt
das
sti
mov
mov
cltd
mov
cltd
dec
adc
es
pop
xor
mov
lods
iret
pop
repz
leave
out
inc
sbb
dec
push
icebp
icebp
lahf
call
mov
push
jae
inc
mov
cmpsl
jmp
outsl
push
ljmp
add
pop
ret
sbb
pushf
outsl
cmpsb
scas
mov
or
sub
or
inc
ret
out
xor
sti
addr16
inc
fistps
into
int
xchg
in
sub
mov
sahf
or
sbb
sbbb
push
scas
jp
jle
gs
or
mov
pop
jne
cmp
stos
mov
int
gs
adc
inc
lcall
xchg
mov
jo
dec
stos
mov
adcl
xor
int
sbb
mov
xor
lcall
mov
jnp
push
inc
ja
les
push
jle
enter
xor
push
or
pusha
jb
popf
nop
nop
cmp
xchg
mov
mov
fidivrl
frstor
dec
mov
pop
pop
gs
lock
or
insb
popa
int3
jge
gs
lret
mov
fnstcw
pop
push
sbb
cmp
inc
dec
loop
cmp
popf
mov
add
je
gs
imul
push
stos
xchg
push
xchg
jb
mov
fs
js
xchg
push
push
inc
hlt
adc
mov
jle
outsl
adc
in
dec
push
xor
imulb
cmpsl
pop
pop
jg
mov
pop
jns
les
popf
into
and
mov
cwtl
xchg
stc
iret
dec
int3
dec
cmp
mov
pop
jae
jnp
imulb
lahf
or
into
xchg
cmp
jo
popa
pop
cmp
ret
cmp
dec
jmp
sub
cmpsb
fwait
in
adcl
inc
adcl
idiv
or
push
clc
insl
push
inc
fstl
pop
scas
dec
out
test
lahf
mov
in
inc
xchg
jnp
fstpt
ror
add
inc
enter
mov
push
out
push
cmp
mov
andb
repnz
jne
sarl
divb
dec
pushf
cli
push
or
add
adcb
cmp
jo
inc
jmp
xor
xchg
xor
sbb
mov
pop
lea
sahf
and
push
pop
in
popf
mov
pop
shll
xchg
inc
mov
rorl
daa
lcall
test
pop
nop
pop
mov
jle
sub
lds
inc
out
xchg
sti
cmpsl
mov
pop
xor
ljmp
ss
cmp
mov
sub
cmc
pushw
xchg
out
cwtl
mov
shll
cmp
adc
test
scas
jmp
adc
lahf
bound
je
rclb
cmc
mov
inc
fists
jb
sbb
mov
adc
push
out
jecxz
mov
xchg
cli
xchg
in
cld
or
pop
lods
add
cmp
das
imul
testl
hlt
ret
push
or
xchg
ret
out
pop
insl
clc
sahf
call
xorb
insb
fildl
sti
push
icebp
lods
dec
cmc
jo
mulb
pop
cmp
imul
mov
pmuludq
push
add
mov
pop
aad
sub
bswap
fcomps
dec
loope
out
or
repz
testb
scas
and
mov
in
lods
out
fcomps
push
dec
cmp
mov
mov
jl
fsubl
mov
call
xorl
call
lahf
inc
in
mov
stos
int3
add
stos
fcmove
roll
xchg
cli
lock
adcb
fndisi(8087
mov
out
lock
mov
and
dec
pop
mov
push
enter
out
pop
xchg
push
scas
xor
fnstenv
pushf
dec
enter
mov
andl
jbe
push
or
inc
sahf
inc
mov
loope
jns
scas
mov
pushf
dec
jae
cmp
mov
xor
xchg
int
orb
sbb
and
stos
cwtl
inc
mov
sub
inc
pop
and
xlat
dec
adc
sub
insl
xchg
aas
ja
sub
div
jecxz
xchg
push
dec
jnp
cmpsl
xchg
push
mov
mov
push
mov
pushf
out
adc
add
jmp
int
pop
mov
lods
mov
push
retw
add
xchg
cmp
js
sub
int
js
and
in
mov
cmp
or
lea
sbb
dec
mov
mov
rcl
pusha
movsl
xchg
push
push
mov
mov
sub
pop
adc
cmpsb
inc
cld
dec
mov
out
cmp
dec
es
mov
dec
imul
cwtl
es
addb
fwait
jno
pop
mov
xor
movb
jno
cmp
mov
scas
cs
dec
pop
jl
xor
outsb
outsb
xlat
and
mov
mov
xor
stos
and
xorl
movsl
cs
or
sarb
rorb
push
mov
xlat
repnz
sbb
loope
pop
das
xchg
xor
test
adc
dec
mov
cmc
mov
and
aad
mov
cld
and
outsb
cwtl
add
les
mov
gs
push
out
push
insb
pop
mov
xchg
jmp
imul
test
push
push
int
imul
in
cmp
test
add
mov
into
dec
icebp
cli
push
jge
cmp
mov
and
out
xchg
mov
loop
lahf
dec
rcl
xor
pop
movsb
shll
sub
ja
outsb
cltd
fstpl
push
jnp
pop
push
pop
fcomip
std
stos
fcomi
js
xchg
insl
mov
jecxz
sub
add
push
sbb
dec
in
pop
popa
cli
push
mov
adc
or
ret
or
mov
push
lcall
imul
dec
out
in
cli
out
movsl
subl
pushf
fisubl
pop
iret
mov
dec
jo
ljmp
xchg
mov
hlt
pusha
aad
test
xor
out
data16
mov
out
popf
xor
mov
pop
rcll
popf
xchg
cli
or
jno
mull
cltd
pop
icebp
dec
dec
or
loopne
adcb
insb
mov
sbb
and
movsl
lret
dec
push
add
cli
fidivs
ja
inc
leave
mov
xor
loope
daa
mov
addr16
adcb
ljmp
mov
inc
mov
mov
xor
ss
addr16
jb
mov
add
jbe
aam
ret
adc
mov
fcompl
jb
test
test
aas
scas
in
data16
movb
aad
cmpb
imull
cmp
cmp
les
cmp
cmp
std
popa
scas
negb
movsl
pop
cmc
dec
in
push
mov
push
push
popf
sbb
mov
movsl
popa
xor
inc
and
out
je
adc
mov
jecxz
cld
lret
out
inc
adc
gs
mov
dec
jmp
cmp
int3
addr16
xchg
out
test
xchg
arpl
sbb
xchg
xor
sbb
jns
sar
mov
add
pop
and
inc
movb
jae
sub
test
enter
jle
mov
in
enter
pop
js
les
push
add
mov
stos
fwait
adc
jbe
inc
lret
aas
xchg
add
mov
std
outsl
les
daa
xlat
cs
push
loope
mov
out
outsb
dec
jl
inc
scas
cmpsl
in
dec
insb
mov
pop
shll
int
ljmp
pop
in
aam
cmpsl
repnz
xchg
jp
das
gs
xor
push
sbb
jbe
mov
cli
cmp
scas
and
sbb
sub
add
in
mov
addb
movsl
cmp
lret
and
lcall
test
pop
lods
mov
push
mov
sti
jns
jo
push
and
mov
hlt
push
cmc
xor
cmp
xchg
mov
inc
cmpsb
jno
cmp
enter
scas
inc
popf
lret
mov
jle
outsb
xchg
lret
ficompl
jo
sbb
mov
push
and
in
jl
test
add
push
or
shll
daa
dec
pusha
adc
imulb
les
icebp
in
lods
xchg
add
xchg
adc
xchg
dec
js
push
mov
or
int
xor
mov
lods
rclb
rolb
popa
gs
mov
pop
xchg
out
xchg
push
mov
push
pop
push
dec
addl
cmp
xchg
xor
xchg
test
xchg
mov
iret
and
mov
mov
outsl
nop
loope
movsb
es
cmp
fistpll
cmp
out
xlat
lds
stos
xchg
into
fwait
or
pop
ja
mov
and
push
adc
xor
xchg
pop
cmp
aad
aad
add
dec
ljmp
aad
push
mov
ja
scas
jne
sbb
pop
mov
pusha
and
dec
xor
lock
dec
test
jae
xchg
and
or
les
xor
pop
or
sar
push
pushf
xchg
stos
jb
insl
inc
mov
jbe
ds
mov
jecxz
dec
fwait
xor
test
sub
and
enter
js
pusha
clc
mov
add
cmpsb
sub
test
mov
out
sub
mov
dec
out
std
cmp
mov
dec
push
mov
mov
inc
and
xchg
jmp
lds
xchg
mov
sti
scas
sbb
push
or
gs
xor
das
in
add
movsl
test
push
push
xor
jne
into
adc
js
aas
inc
mov
pop
les
inc
scas
adc
test
pop
mov
pop
fisubl
ret
test
data16
pusha
lods
push
aaa
sbb
fwait
inc
mov
jmp
daa
adc
pop
test
in
dec
inc
into
dec
adc
out
or
or
add
add
hlt
pop
pop
call
out
test
test
push
jge
xor
dec
pop
mov
mov
push
loop
mov
gs
rcl
outsb
hlt
int
lea
pop
loop
movsb
repz
pop
adc
lahf
cmp
dec
push
mov
loopne
sbb
loop
xlat
xorl
lret
ja
in
push
mov
adc
rolb
jns
mov
aas
je
ror
aad
pop
lahf
lret
pop
movsl
dec
orb
mov
add
test
loopne
mov
scas
into
push
insb
mov
enter
sbb
stc
cmp
enter
jns
mov
setnp
cmp
push
dec
jg
pop
bound
push
sub
and
lods
dec
nop
pop
push
mov
lahf
cmp
test
sub
insl
xchg
mov
push
daa
jle
mov
in
jg
push
inc
sub
cli
or
sub
loopne
mov
notl
imul
mov
push
iret
sbb
adc
xchg
sbb
pop
pop
add
and
sub
mov
inc
and
or
fdivrl
add
lods
in
jo
dec
cmp
xchg
mov
pop
lahf
mov
pusha
or
jle
xchg
out
push
mov
into
cmpsb
cmp
jg
std
sub
xchg
lds
xor
fldz
mov
push
pop
xchg
xchg
push
jb
xchg
inc
daa
test
xchg
sarb
or
sub
mov
dec
jnp
inc
out
les
push
mov
jge
movsl
sbb
loopne
lods
fs
fsubrs
subb
sbb
pushf
repnz
int
dec
aam
mov
jmp
int
flds
cltd
cs
add
je
cmp
adc
mov
inc
lods
std
inc
mov
mov
sbb
shr
dec
cli
pop
push
xchg
mov
outsb
cmpl
stos
psraw
xor
aas
add
fwait
lods
pop
insb
ja
dec
sti
push
enter
in
in
dec
movsb
add
pop
out
aad
ss
jo
mov
push
pop
in
and
sub
jle
loope
pop
pushf
jmp
daa
stc
or
add
inc
je
shll
dec
mov
pop
xor
ja
test
mov
mov
sti
push
jns
movsl
push
mov
dec
add
jmp
mov
sbb
and
enter
inc
pop
repz
popa
movsb
cltd
imul
xorl
xor
clc
into
and
imul
add
jl
int
popfw
in
cmp
loop
xchg
cli
mov
push
dec
add
mov
sbb
adc
mov
repz
mov
insl
sub
sbb
xchg
mov
daa
jbe
iret
mov
sbb
mov
scas
xchg
mov
cld
xor
gs
repnz
xchg
add
push
push
pop
xor
inc
mov
xor
sahf
mov
mov
jge
and
mov
and
pop
in
inc
cmp
adc
adc
cmpsl
sbb
out
data16
push
sahf
pop
pop
adc
call
int3
mov
jg
sbb
loop
subb
pop
roll
pop
out
pop
sbb
aad
enter
dec
push
sbb
pushl
adc
and
popa
pop
cs
or
push
inc
inc
add
test
out
push
xor
and
dec
pushf
add
cmpl
loope
add
push
and
sub
adc
mov
dec
orps
subl
out
mov
loopne
inc
dec
clc
add
pop
cmpsb
lock
adc
jp
pop
dec
and
test
xchg
rolb
repnz
add
in
std
stc
roll
xchg
inc
adc
jbe
fadds
mov
arpl
push
jo
xchg
popf
and
int
xor
mov
imul
add
loop
iret
push
cmp
insb
subl
push
sti
cli
and
das
mov
into
fisubl
push
lock
push
je
ss
mov
les
inc
out
loopne
nop
inc
jecxz
push
js
or
loopne
adc
std
jo
adc
adcb
insl
cmp
dec
fidivrl
sub
inc
mov
adc
add
mov
lcall
jo
xchg
dec
jb
xor
jmp
mov
jl
imul
stos
ret
push
movsl
aad
or
cmp
jmp
push
and
iret
imul
xchg
push
outsl
inc
inc
ficoml
mov
sub
inc
les
adc
lock
call
icebp
push
ret
fstps
jl
into
cmpsl
add
enter
pop
pop
je
mov
jne
es
jmp
and
xchg
dec
and
fisubl
shll
scas
mov
and
adc
xchg
cltd
jne
int3
leave
mov
jge
sub
xchg
repz
cs
popa
xchg
imul
int3
jb
dec
or
jge
pop
xor
push
lahf
lret
pop
scas
dec
or
dec
cmp
push
mov
leave
adc
or
cld
or
repz
scas
mov
jno
pop
imul
sub
ljmp
push
lret
ss
pop
xchg
mov
and
mov
stos
adc
sbb
mov
daa
sbb
nop
orb
push
cmpb
shrb
push
cli
call
cs
and
cmp
jle
jmp
mulb
pop
lret
daa
mov
clc
pushf
loop
je
mov
xchg
das
dec
out
cmp
iret
fimull
jae
mov
stos
mov
cmp
mov
outsl
xor
dec
es
cwtl
dec
xor
jecxz
fnstenv
sub
js
mov
sahf
pushf
int
push
dec
push
push
pxor
inc
ret
cmp
mov
fsts
cmp
jp
sar
ds
pop
adc
inc
mov
pushf
adc
xor
int3
cmpsl
fucomip
aaa
insb
cmp
repz
lods
sbb
mov
push
lcall
push
jg
pushf
in
cmpb
insb
mov
and
loope
sarb
sub
hlt
psadbw
cmp
andb
xchg
mov
mov
in
jg
out
cmp
xchg
cwtl
xchg
push
pop
stos
outsb
push
push
sbb
jle
mov
insl
mov
fwait
xor
sub
lods
add
lea
xchg
addl
cs
daa
mov
sbb
or
push
daa
imul
pop
mov
lret
je
mov
popa
insb
in
adc
outsb
pop
mov
jae
push
dec
cs
shlb
pop
or
popf
fimull
test
dec
fsubrl
sub
stc
aaa
mov
pushf
out
cs
jp
mov
push
stc
fwait
inc
or
pop
fadds
ret
pop
xchg
pop
sahf
cs
pop
imul
cwtl
stos
hlt
or
faddp
inc
lods
jg
shlb
push
adcb
jg
sbb
cmp
add
or
mov
in
in
and
mov
aam
mov
adc
sbbb
jecxz
cmp
cmp
mov
hlt
pop
lret
xchg
add
mov
shl
hlt
fwait
mov
inc
pushf
enter
xchg
in
pop
mov
sbb
or
cmp
mov
xchg
cmp
push
pushf
inc
adc
mov
out
aam
out
shll
aas
pop
popa
cmpsl
jne
mov
mov
subl
and
cli
push
loop
pop
mov
push
xlat
cmp
out
mov
add
inc
loopne
jno
insl
dec
mov
and
imul
mov
movsl
push
jge
or
sub
in
aam
xchg
fs
mov
call
rorl
cmp
xchg
and
push
lock
adc
sbb
sbb
inc
das
movsb
pop
out
popa
call
outsb
xchg
push
testb
fadds
into
pop
and
xor
insl
lret
inc
pop
and
sub
cmc
dec
lret
ja
mov
rolb
fxch
and
call
or
fcmovu
in
cmpsl
xchg
mov
lock
jbe
cmp
jbe
mov
int
xchg
hlt
and
stc
push
fisubrs
fisubrl
movsl
adc
popf
mov
je
movsb
jne
ret
dec
pop
gs
inc
mov
jnp
xchg
in
in
enter
orl
dec
xchg
call
mov
ljmp
jno
shrb
notb
push
int3
mov
pop
imul
in
ss
pop
lock
push
shrl
xchg
divl
adc
inc
mov
dec
inc
imul
or
loope
sub
mov
je
inc
mov
mov
inc
mov
xor
cs
loope
inc
iret
and
loop
ljmp
jge
imul
mov
iretw
iret
lret
mov
std
popf
fidivl
lea
stc
mov
pop
xor
xchg
out
add
movsb
lock
outsb
pop
enter
xor
stc
adc
pop
fs
inc
add
je
pop
scas
sub
sbb
rclb
leave
sub
out
imul
cltd
push
addr16
mov
in
mov
out
data16
out
stos
jecxz
fs
lods
insb
sub
push
mov
cmc
add
lods
ljmp
lods
lcall
aam
loopne
sub
push
mov
cwtl
mov
adc
gs
mov
or
jle
jae
adc
addl
dec
lods
jge
sub
stc
pop
out
inc
icebp
cmpl
mov
data16
in
sub
pop
je
cmp
inc
adcl
nop
xlat
je
push
and
cld
aas
nop
fnsave
mov
or
ficomps
xchg
inc
sbb
lea
or
xorl
push
repz
in
cmp
lods
inc
pop
sbb
mov
xor
shlb
pushf
test
lock
ret
add
push
cmpsb
fmuls
int
push
fwait
adc
jbe
cmp
jmp
xor
mov
pop
xchg
or
xchg
movsl
push
sbb
xor
mov
data16
fst
lahf
dec
lock
xor
enter
scas
xor
push
mov
push
rcrb
pop
mov
add
add
jnp
push
push
mov
mov
adc
mov
dec
adc
or
sbb
pushf
stos
loope
movsb
xchg
test
mov
xchg
inc
adcb
lcall
dec
iret
cmp
cmp
fiadds
mov
cs
rorl
xor
mov
or
inc
cli
movsb
data16
adc
sbb
dec
mov
std
xchg
cmp
scas
mov
dec
inc
sbb
sub
subl
lock
jmp
lahf
pop
data16
pop
divl
fwait
cmp
mov
mov
scas
jge
mov
aam
int
aad
push
out
lea
xor
pop
sub
dec
lods
adc
testb
inc
cmp
std
shrb
int3
xlat
lock
mov
xchg
test
icebp
sahf
loope
jae
das
arpl
clc
and
roll
xchg
int3
repz
rorb
mov
or
lea
cmc
dec
adc
dec
adc
loop
mov
pop
pusha
test
mov
mov
test
and
popw
xchg
xchg
popa
ja
cmpsl
loopne
dec
add
ja
push
add
shlb
add
mov
ret
dec
xchg
push
dec
cmp
jecxz
das
dec
xchg
shll
xor
lods
xchg
movsb
dec
ret
push
loope
clc
pop
pop
xchg
mov
movsl
leave
pop
mov
or
or
sub
jne
sbb
sub
mov
mov
fildl
hlt
jb
ja
dec
mov
add
pop
out
or
mov
inc
call
int
xchg
arpl
fmull
and
mov
xchg
or
jg
pop
dec
add
lock
xor
mov
fcoml
sbb
mov
lock
dec
or
fcompl
mov
and
xchg
sub
dec
ljmp
aad
in
scas
push
mov
test
pop
jp
jmp
cmp
sbb
imul
sub
pop
scas
das
loopne
xor
dec
cltd
xchg
cmpsl
fistpl
or
push
dec
mov
les
dec
jnp
test
cmc
aad
sti
loopne
mov
adc
push
jmp
movsl
scas
cmp
lret
mov
inc
icebp
mov
jnp
xor
adc
sarb
xor
jmp
mov
or
push
lret
sub
repnz
shr
addr16
test
in
icebp
pop
push
sub
jnp
cmpsb
adc
mov
cmp
jae
mov
das
ja
in
in
xlat
mov
cmpsl
negl
xchg
xsha1
cmpsb
or
xchg
add
jmp
sub
mov
fsubl
jae
xor
dec
add
fldl
mov
push
lds
test
dec
mov
add
pop
loop
or
and
pushf
sbb
daa
addb
jb
fimuls
imul
popa
je
mulb
fcoms
push
fdivrs
sbb
add
out
push
loop
mov
cmp
xor
xor
push
xchg
movsb
je
jns
lds
push
sbb
repnz
xchg
sub
insb
addr16
pop
and
sub
cli
lcall
push
push
icebp
int3
mov
jns
mov
sub
add
mov
int
or
push
fwait
lcall
popf
jmp
ficoms
lods
push
je
xchg
inc
or
scas
mov
movsl
jp
mov
out
xchg
ljmp
test
mov
lods
adc
shlb
sbb
pop
xchg
mov
lahf
scas
adc
inc
cmc
add
dec
in
clc
or
fnstenv
scas
mov
adc
adc
inc
jl
jae
jnp
jnp
in
sub
pop
hlt
xor
mov
in
in
sub
sub
fldl
sbb
daa
add
sub
xor
cmp
loope
in
lret
push
lcall
jb
lcall
mov
adc
repz
mov
insl
sbb
cmovae
cmpsl
gs
in
pop
mov
shrl
fistpll
dec
pop
enter
loope
inc
leave
adcb
and
lcall
repz
cmp
je
cmp
fnstcw
int
add
adc
xor
mov
cmp
fsqrt
rcrb
in
fcomi
adc
dec
dec
push
mov
nop
shrb
sub
jae
pop
fidivrl
fsubp
repz
shlb
das
or
sub
popa
mov
lds
xor
and
ja
mov
mov
xchg
ja
or
xor
xor
test
stc
out
sbb
sub
lods
adc
fisttpl
mov
xchg
inc
hlt
xor
jge
push
inc
fadd
mov
adc
lods
lcall
and
xor
ret
xchg
adc
dec
dec
xchg
pop
sbb
addr16
test
jb
adc
test
pusha
sbbb
popa
or
pusha
pinsrw
test
jns
data16
sub
fstps
mov
rclb
in
inc
mov
sahf
adc
and
add
loopne
pop
loope
aad
mov
push
mov
xor
cld
mov
sbb
and
stos
or
pushf
pop
cmp
movsl
loopne
xchg
sbb
pop
mov
dec
stc
inc
mov
popa
fistl
sbb
jno
fstps
in
push
fdiv
or
ljmp
int
sub
lock
fisttpll
pusha
icebp
jecxz
nop
bound
lods
je
push
adc
inc
dec
mov
daa
int3
fwait
or
je
push
rclb
imul
push
cmp
mov
adc
add
clc
sbb
int3
lret
push
mov
pop
fnstsw
imul
adc
xor
loop
js
pop
gs
jmp
push
sub
shrl
pop
rorl
pushf
adc
mov
sbb
les
inc
mov
jne
push
adc
or
aam
push
aaa
sbb
adc
shll
xor
loopne
push
jbe
daa
pop
insb
jb
outsb
and
dec
jns
mov
movsb
fwait
push
fdiv
fildl
xor
push
adcb
xor
push
fadds
les
jns
push
pop
sub
inc
std
loopne
daa
dec
shlb
inc
inc
repz
or
dec
hlt
mov
mov
mov
sbb
insb
lea
push
repnz
mov
pusha
push
push
testl
nop
pusha
je
ret
mov
pop
mov
mov
cmc
sahf
aam
cmp
ja
test
push
movsl
lcall
out
stc
xor
dec
negb
aam
arpl
cmp
ss
ja
jmp
or
mov
jecxz
lds
orl
push
sub
popf
push
or
dec
or
xchg
dec
push
pop
jno
mov
icebp
in
mov
adc
les
movsb
insb
cmpsb
test
rcrb
jge
inc
lods
subl
cmp
movsl
jl
pop
div
push
jmp
dec
mov
add
cmp
aam
popf
std
push
adc
imul
daa
in
inc
sarb
add
push
loop
hlt
jmp
in
andb
dec
and
add
jge
fldcw
mov
dec
xchg
in
dec
or
adc
mov
shl
cmc
add
mov
mov
sbb
adc
ficoml
inc
shll
loope
outsb
sub
dec
push
cmp
mov
push
push
in
mov
cmpsl
movsl
cmp
cli
add
fsub
push
lcall
pushf
clc
adc
ret
gs
test
jp
pushf
adc
shr
stc
icebp
popa
stos
in
mov
dec
sbb
cmp
loope,pt
dec
pop
roll
mov
xchg
mov
pop
cmpsb
ret
xor
lock
mov
xlat
test
pop
pusha
xor
jmp
hlt
scas
and
jo
addr16
fists
and
call
cmp
in
das
xchg
inc
xchg
inc
pop
jb
cmp
cmpsb
pop
adc
sub
push
push
insb
mov
lret
dec
or
xchg
mov
cmp
jae
fucomip
std
dec
fs
insb
xor
test
mov
jge
into
jp
jecxz
call
shl
sbb
je
xchg
insl
fisubl
xchg
inc
fwait
data16
and
sbb
mov
mov
cwtl
dec
sub
sub
and
xchg
mov
ds
in
call
mov
xor
jg
stos
int
jb
adcl
icebp
push
lret
sti
sub
out
pop
fucomip
pop
sub
sub
mov
pop
loopne
mov
test
loopne
sub
sbb
inc
or
dec
xor
xchg
bound
sbb
add
js
xchg
loope
das
xchg
add
push
jl
cmp
int3
pop
add
cli
or
fwait
sbb
and
sub
roll
mov
in
sub
pop
mov
cmc
pop
fildl
dec
cmp
lea
sub
adcb
arpl
hlt
mov
jmp
loop
jg
xchg
xchg
jb
sbb
pop
xor
shlb
mov
xchg
dec
int
fsubl
mov
out
push
mov
jb
inc
lods
jb
xor
mov
pusha
lds
or
hlt
das
out
sub
sbb
dec
mov
jmp
lods
jg
mov
add
data16
enter
add
subl
jge
pop
jge
negb
xchg
in
or
bound
mov
add
xor
sbb
pop
dec
jne
test
pop
lea
test
sub
adc
int3
leave
jle
popa
pop
sub
or
and
dec
mov
mov
int3
arpl
dec
mov
ja
lods
jb
lahf
cmc
mov
cmp
mov
xchg
jbe
xchg
repz
test
repz
ret
insb
xchg
jle
adc
aas
fwait
mov
jns
and
aas
cmp
orb
sbb
mov
adc
aam
jnp
cmpsb
cmp
add
out
xor
cmp
in
pop
mov
cwtl
mov
and
stos
aad
mov
jns
mov
sarb
outsl
fildl
mov
popa
push
mov
cltd
cmp
movsb
popa
std
sub
inc
iret
or
push
inc
pusha
mov
dec
out
jle
lret
jae
mov
dec
rol
imul
out
negb
ss
cmp
fwait
inc
mov
push
push
lods
notl
adc
movsb
jns
add
ds
cmpsl
cmp
adc
mov
popa
into
dec
cmpl
mov
movsb
aam
xlat
cwtl
mov
jp
inc
fcompl
bnd
sbb
pop
cmp
sbb
aad
test
mov
test
jbe
in
divl
fdivrl
jbe
aaa
mov
dec
or
xor
jbe
rorl
es
xor
push
mov
repz
jmp
sub
dec
and
push
cwtl
cmc
out
xchg
les
mov
cli
push
adc
gs
add
push
mov
aam
xor
push
mov
std
xchg
add
sbb
push
lret
ss
push
jle
loopne
ljmp
cmpl
jmp
mov
cltd
dec
inc
adc
cmpsb
js
cmc
cs
les
outsb
xor
or
pop
in
fadd
iret
cwtl
push
mov
jae
mov
mov
lahf
jle
inc
lods
sbb
pop
xchg
cmc
nop
arpl
mov
or
jmp
rcrb
mov
dec
lahf
aam
xchg
adc
xchg
sub
lret
and
stos
inc
mov
loopne,pn
ret
mov
push
pop
add
jecxz
mov
fs
jae
dec
mov
sbb
dec
test
jp
into
test
and
daa
push
aas
mov
add
xor
fs
ds
sbb
and
mov
cli
jl
ret
in
sbb
outsb
jb
adcl
and
out
pop
outsl
mov
int3
mov
adc
rcrb
stc
mov
pop
jle
rcrb
add
push
arpl
lods
loope
rcrl
mov
scas
inc
mov
and
cld
leave
or
dec
mov
imul
dec
and
xchg
jae
sbb
adc
mov
cs
les
imul
xchg
push
mov
cs
imul
mov
add
jne
test
inc
xchg
cmc
jecxz
aad
mov
push
loop
imul
adc
repnz
and
xor
add
js
xor
cmpsb
ss
dec
scas
aaa
loope
pusha
mov
pop
les
movsb
out
cmpsl
xor
pop
sbb
test
jmp
nop
mov
adc
dec
xor
sbb
test
cmp
sub
mov
jno
cmpsb
lcall
xor
xchg
inc
sahf
pop
pop
adc
xchg
iret
loope
push
pop
pop
sub
ja
mulb
adc
inc
xor
xchg
loopne
fimull
dec
mov
push
faddl
dec
sub
sub
mov
sbb
or
lds
sti
lahf
push
mov
lret
movsl
add
or
cmp
mov
sub
jmp
fimuls
jns
and
mov
movsl
dec
mov
inc
mov
add
divb
dec
and
adc
xor
mov
mov
movsb
pop
aaa
dec
neg
add
fldt
sub
in
cmp
pop
enter
or
arpl
push
mov
fxch
sarb
xor
lahf
mov
imul
cmp
dec
add
mov
pusha
pop
int3
ret
fists
mov
add
loop
or
rcrb
in
push
out
xor
gs
stos
adc
cmc
mov
in
iret
ret
jnp
std
outsl
mov
test
mov
fisttpl
push
adc
inc
adc
jl
scas
mov
mov
push
fcoms
cmpsb
cld
stos
std
sbb
lods
les
xor
cltd
sbb
lahf
pop
ret
or
popa
test
xor
rcl
or
cmpsl
pop
pop
dec
jb
mov
mov
leave
pop
cltd
gs
mov
push
out
jecxz
cmp
add
dec
cmpsb
flds
adc
mov
jl
in
sahf
xchg
cmp
push
add
pop
movsl
mov
lahf
ret
adc
inc
out
push
xor
ret
push
int
jle
aad
xchg
dec
mov
popl
add
cmp
or
mov
jge
lret
movb
lods
test
cs
nop
fidivs
nopl
sarb
add
scas
and
xadd
mov
test
shl
mov
outsb
pop
sbb
insb
jns
mov
test
mov
pop
fimull
sub
pusha
mov
xlat
jmp
int
push
aam
stos
ret
mov
pop
push
and
sub
dec
fisubs
cmp
xchg
stc
call
sub
jne
mov
add
xor
push
inc
or
in
in
dec
cmc
xchg
cwtl
in
out
divl
mov
cmp
xor
lahf
icebp
push
and
std
jmp
aad
aad
lds
pop
ret
xchg
dec
inc
aad
sbb
adc
insb
sbb
fwait
add
xor
out
incb
ret
cli
pop
jnp
in
lods
loope
fucomip
jle
xchg
sbb
and
mov
lock
mov
xlat
ja
popf
add
xchg
push
add
stos
add
in
inc
outsl
push
icebp
cmp
add
inc
add
dec
rcrl
pusha
and
adc
lds
in
xchg
mov
bound
mov
jbe
es
rolb
lds
test
pop
jecxz
xchg
pop
or
push
sub
movsl
popf
or
rcrl
xor
pop
fistps
cmpsl
test
xor
aas
aad
out
cltd
inc
mov
js,pn
inc
inc
roll
pushl
mov
in
and
mov
mov
inc
and
jb
adc
sub
fdivrl
or
mov
jno
xor
lods
mov
inc
mov
or
pop
add
xchg
std
pop
data16
mov
and
xchg
pop
xchg
int
cld
popf
lahf
pop
mov
rol
sub
out
jae
rorb
std
out
jl
fimull
pop
push
jb
lcall
sbb
mov
mov
aad
xlat
scas
fldl
jns
pop
iret
sub
dec
mov
imul
inc
ret
ss
push
jecxz
movl
xor
mov
dec
pushf
notl
addb
xchg
mov
sub
aaa
xlat
jno
or
push
ficoms
icebp
ja
mov
andb
pop
mov
push
and
mov
pop
dec
scas
into
push
push
jne
jae
lods
mov
outsl
sub
xchg
aas
orb
and
mov
insl
xchg
push
mov
call
loop
cmpl
push
xor
pop
jp
jb
dec
pop
roll
lock
scas
pop
imul
outsl
xchg
cmc
enter
mov
inc
aad
dec
add
sub
and
aam
mov
in
sub
jge
lods
in
subps
out
shlb
dec
imul
xorl
push
jo
inc
dec
je
test
mov
pop
das
addr16
in
jl
xchg
mov
add
pushf
pushf
addr16
cmpsb
iret
out
adc
adc
push
out
nop
cmp
mov
cmp
into
inc
scas
jae
std
scas
scas
popa
xor
orb
ds
adc
repz
add
out
into
aad
inc
jbe
adc
xchg
jb
arpl
outsl
add
cmp
add
jle
ss
adcl
in
jmp
sbb
mov
fcmovnb
dec
shll
in
jp
lea
pusha
scas
push
dec
inc
sbb
add
lahf
cli
jae
stos
sbb
add
mov
out
outsb
scas
pop
cmp
fidivs
int
jno
xchg
jo
dec
notb
aas
aaa
pop
stos
inc
or
in
lahf
fimuls
sbb
imul
addr16
iret
xor
fidivrs
pop
xor
loop
mov
cld
mov
ds
daa
imul
or
cld
mov
xor
inc
cmp
pop
out
dec
out
outsb
pop
push
popa
xlat
dec
pusha
mov
dec
jg
or
cltd
mov
imul
sbb
sbb
sbb
fs
mov
sti
adc
adc
push
mov
mov
sub
jecxz
jmp
mov
push
lcall
arpl
sbb
scas
push
in
sarl
jb
fldcw
pushf
pusha
imul
imul
pop
ret
nop
and
mov
jbe
add
mov
imul
mov
shrl
jp
push
push
mov
icebp
add
aad
into
das
fimuls
xchg
xchg
scas
das
push
shll
or
dec
sub
aam
xchg
leave
push
in
nop
xchg
cmp
loope
scas
jno
mov
xchg
push
push
mov
mov
aad
and
loop
add
sub
jbe
jg
mov
jbe
add
xlat
stos
nop
mov
out
loop
mov
mov
mov
mov
xchg
test
insl
xchg
fimuls
and
bound
ja
jns
inc
hlt
fs
dec
adc
xchg
ljmp
adc
imull
mov
mov
inc
roll
je
fisubrs
push
mov
pop
scas
xor
iret
std
jne
out
xor
imul
cltd
shrb
lret
inc
stos
sbb
jl
lahf
lret
cmp
and
rorl
rorl
dec
xor
mov
sub
scas
subb
mov
inc
sbb
mov
ds
adc
xor
sahf
xchg
packsswb
lea
pushl
cmpb
xchg
sub
mov
dec
mov
shl
and
and
or
test
jae
add
adc
fsubrl
movsb
repz
mov
xchg
mov
daa
mov
lahf
adcw
dec
pop
mov
cld
sysexit
pop
adc
inc
hlt
scas
notb
and
adc
push
mov
pop
rcll
jmp
xchg
mov
testl
and
sahf
inc
ss
push
mov
sbb
outsb
jae
dec
lods
in
adc
xchg
pmaddwd
mov
aaa
scas
scas
lret
mov
shr
push
xchg
pop
xor
mov
out
and
xlat
and
testb
or
xchg
imul
add
jae
inc
icebp
stc
ret
rorl
mov
insl
xor
mov
sub
mov
into
data16
pushf
jmp
xchg
push
rcrb
aaa
mov
cltd
push
inc
test
cmp
inc
in
test
mov
cmp
pusha
pop
int3
pop
adc
test
ja
mov
loop
fidivs
imul
aad
xlat
ficompl
pop
add
dec
pop
push
mov
sbb
pop
add
push
jno
inc
loope
sub
out
xchg
shll
negl
xchg
je
ljmp
shl
lods
and
pop
out
or
idivl
cmp
xor
cli
stos
and
inc
sbb
negl
xchg
pusha
cmp
adc
jno
sub
repz
jae
mov
lea
cs
dec
lea
je
andl
fcomi
test
popf
xchg
sbb
jmp
inc
inc
sub
aam
imul
push
fcmovnu
fimull
cmp
popa
daa
ljmp
idivb
mov
jae
pop
xchg
pop
adc
xor
add
mov
adc
mov
adc
or
pop
jg
mov
mov
jbe
out
loopne
ret
mov
pop
adc
outsl
out
ljmp
in
push
and
or
clc
mov
add
or
inc
stos
out
aaa
xchg
sub
cmp
aad
jle
lds
clc
add
mov
adc
push
sub
push
shrl
mov
push
movb
mov
push
cmp
mov
cmp
sub
xor
cmp
sub
sub
push
pop
adc
icebp
pop
add
aam
add
js
sbb
test
popa
inc
add
lcall
leave
mov
sub
adc
fcoml
mov
xor
int3
inc
cmpl
sub
loop
in
dec
int
mov
dec
cmc
mov
push
dec
imul
adc
xchg
movsl
in
dec
dec
negl
cwtl
lret
inc
fistl
mov
dec
rorb
mov
inc
jo
fisttpll
pop
pushf
lds
add
mov
and
mov
outsb
jmp
push
shlb
cs
jg
adc
adc
push
movsb
lret
push
push
pop
sub
imul
add
pop
ret
dec
push
fadds
jb
jbe
inc
movsb
daa
jo
out
shlb
mov
inc
xchg
or
rol
lock
subl
inc
sti
adc
mov
jo
sbb
repnz
mov
lcall
xor
push
push
cmp
mov
xchg
and
xchg
xor
push
aam
xchg
shlb
cwtl
jne
fidivrs
bound
insl
mov
cli
xor
mov
jae
shlb
loop
sahf
insb
push
loopne
pushf
xchg
gs
mov
push
pop
cmpsb
and
adc
dec
fwait
adc
stos
sub
adc
mov
loopne
xchg
arpl
jo
movb
ljmp
jno
sub
and
xor
mov
movsb
jnp
dec
add
aas
cmp
cmp
lods
or
bound
test
fsubrl
xor
adc
jb
gs
scas
aas
test
pop
cmpsl
idiv
subl
lods
dec
or
imulb
call
faddl
jbe
pop
imull
stos
push
aas
fists
adc
std
sti
test
test
pusha
scas
jle
pop
push
stos
shr
dec
ja
pushf
mov
mov
sub
sub
push
adc
adc
push
int3
div
cmp
xchg
movsl
pop
pusha
pop
adc
inc
dec
out
js
aam
or
and
xor
inc
cmp
rcl
pop
jns
inc
jo
movsl
cmp
mov
leave
and
dec
cltd
add
dec
pushaw
push
ret
sub
inc
xor
cmpsl
mov
push
cmp
je
stos
je
aam
dec
xor
in
and
scas
repz
iret
cmp
add
mov
adc
sbb
jmp
mov
push
insl
std
fs
and
cli
push
jle,pt
xchg
xchg
lods
add
push
cmp
fisubrl
sti
leave
fbstp
push
iret
fwait
and
mov
mov
out
hlt
sbb
stos
mov
insb
push
xchg
dec
mov
pop
cmp
jle
or
jno
imul
xor
mov
shl
rolb
testb
cmp
fwait
int
or
push
scas
pop
cli
fistpl
xor
push
leave
push
imul
ret
fisubrl
inc
scas
inc
dec
cmp
mov
mov
out
shl
cs
in
xor
mov
inc
cmp
mov
ds
push
sahf
mov
repnz
bswap
xlat
xor
xor
jecxz
loopne
mov
add
jge
icebp
xor
inc
imulb
movb
cwtl
jno
cmpl
dec
sub
sub
mov
mov
invd
sub
bound
add
xchg
jle
sub
fistl
fwait
cmpl
lods
or
push
pusha
jmp
insb
xchg
aaa
push
inc
pop
out
sub
mov
aad
imul
sarl
ret
xchg
cmpl
fisttps
mov
mov
xchg
xchg
push
cli
mov
mov
sbb
in
or
or
xchg
jno
subl
jmp
xchg
xchg
xor
fdivl
pop
test
enter
xchg
repz
inc
mov
ljmp
in
mov
int
add
and
dec
jmp
subb
push
pop
data16
out
push
xchg
mov
lods
mov
xor
add
add
iret
call
call
pop
sbb
das
or
dec
test
sub
es
and
sbb
and
jge
cmp
out
notl
test
icebp
or
adc
jnp
pcmpeqw
pop
or
pop
push
cltd
lret
push
fisubrl
arpl
jmp
les
add
sub
mov
inc
cli
and
outsl
lret
iret
xor
es
xchg
test
and
xchg
pushf
icebp
xchg
mov
subb
movsb
dec
cmp
ja
inc
fwait
cmpsb
push
adc
adc
jbe
and
mov
sbb
xor
sub
or
lret
out
fisubs
in
push
ds
cmc
mov
and
shlb
ss
and
insl
lods
repz
sbb
cmp
sbb
aas
xor
pop
idivl
mov
mov
nop
insl
mov
sub
sarl
sub
dec
jmp
repnz
add
movsl
shlb
inc
je
inc
das
push
jecxz
fndisi(8087
popa
push
leave
fmuls
adc
insb
sbb
sahf
stos
mov
mov
push
clc
jne
or
inc
pop
xor
sbb
xchg
rcll
sti
je
es
lea
jns
xchg
pop
mov
lock
inc
sbb
mov
dec
push
fsubp
sub
inc
push
negl
push
jae
add
idivl
outsl
push
out
movsb
dec
scas
aas
repz
jno
es
imul
dec
les
aaa
jns
pop
es
mov
push
idiv
xchg
clc
lods
out
inc
dec
idivl
in
imul
mov
fmull
dec
inc
sub
mov
jl
outsl
dec
adc
pop
std
adc
dec
and
and
sbbl
inc
sar
lret
fisttpl
loope
dec
rcl
and
ljmp
mov
dec
sbb
int
sub
js
mov
loopne
int
iret
addr16
pop
inc
lret
dec
jl
daa
or
in
test
out
dec
arpl
std
sti
lds
lret
cmp
mov
xorb
mov
dec
inc
insb
pop
rolb
or
and
loop
add
rcll
adc
dec
aas
add
mov
xor
cmp
xor
mov
test
xchg
adc
sub
inc
lods
lds
lea
sub
xchg
dec
icebp
xchg
fimull
and
ret
jb
inc
stc
mov
mov
push
insb
cmp
repnz
dec
fs
bound
xor
adc
jno
mull
adc
dec
jp
clc
pop
scas
pop
mov
bound
xlat
inc
xor
jne
xor
gs
mov
xor
pop
or
and
cmp
lods
cmpsb
lods
pushf
iret
xorl
fucom
adc
fstps
fisubl
daa
mov
and
stc
fldt
and
mov
jb
mov
jl
int3
pop
mov
in
push
pop
lds
call
leave
icebp
sbb
push
test
adcb
xchg
lock
ds
adc
xchg
xchg
mov
jp
mov
and
sarl
popl
pushf
movsl
xor
shrl
adc
pop
popa
leave
push
xchg
loope
pop
nop
adc
fnsave
mov
mov
xorb
dec
sub
fdivs
xchg
push
aas
add
pushf
push
fistpll
imul
sub
jo
mov
and
cmpsb
jge
mov
in
and
inc
loopne
sub
rep
lret
jb
fwait
ds
mov
in
ret
mov
sbb
inc
out
lahf
inc
mov
ret
out
add
sti
pop
push
pop
mov
sbb
push
xor
add
or
lret
fs
dec
adc
inc
inc
gs
ret
or
movl
andb
add
ds
pop
shlb
mov
test
sar
fpatan
repz
sbb
ss
test
imul
fsubl
nop
sub
add
loope
sbb
cmp
mov
mov
in
pusha
add
mov
mov
lea
sbb
ja
mov
xor
outsl
sbbb
jle
in
es
fsubr
push
rorl
cld
add
or
jp
add
insl
testb
rcl
lret
shlb
into
push
sub
mov
out
in
sti
push
add
sub
jae
loopne
pushf
lahf
das
fs
movb
inc
andl
mov
sub
mov
sub
outsl
adc
xchg
jno
jp
xor
pop
push
sti
mov
sahf
jge
inc
cmp
mov
adc
mov
fstps
or
pop
loop
jae
jle
mov
bound
push
inc
push
ss
xchg
ljmp
cmp
pop
inc
in
inc
addr16
pop
lea
inc
sbb
aaa
call
cmp
sbb
and
lret
ss
loopne
sub
push
aas
or
mov
xlat
fisttps
mov
cli
xor
popf
mov
or
mov
inc
fistps
stos
inc
cmp
out
sub
dec
mov
push
int3
sbb
xchg
or
xchg
cmp
arpl
imul
fisubrl
push
int
cmpb
iret
andl
stc
jl
test
aam
xor
xchg
inc
loope
jb
jnp
mov
ret
xor
je
std
mov
lods
pop
xor
add
pop
fs
mov
leave
int3
cmpsl
fs
jl
xchg
mov
scas
mov
add
mov
shlb
fcoml
outsl
fadd
lret
inc
mov
daa
test
call
cmp
add
sub
ja
jg
adc
jo
aaa
pop
imul
dec
or
push
push
inc
bnd
pop
add
or
int
push
into
sti
leave
push
lods
inc
popa
jecxz
aas
push
pop
leave
jmp
test
stos
aas
or
repnz
out
sbb
mov
lret
aad
test
gs
xlat
ret
in
and
icebp
inc
sub
push
in
nop
rol
stc
adc
call
pusha
orb
cltd
add
mov
and
into
push
push
xchg
and
fsubrl
in
adcb
push
cmp
bound
cmp
aad
aam
sbbl
xchg
insl
push
mov
cs
fldenv
ljmp
cmp
popf
aam
outsb
loope
mov
loop
daa
dec
dec
roll
pushf
addr16
sarb
adc
mov
adc
fbld
js
leave
jno
xor
push
xchg
add
jbe
pushf
xor
mov
or
xchg
sbb
or
inc
jmp
jle
sahf
aam
std
xchg
rclb
fstps
dec
inc
repnz
and
negl
in
gs
ljmp
movsl
mov
or
sbb
pop
sub
mov
js
outsl
pop
push
fwait
sbb
lahf
dec
loope
and
sarb
in
cmp
addb
pop
out
iret
add
jo
sub
test
int3
inc
ffreep
leave
gs
in
scas
jecxz
and
mov
mov
ret
arpl
sub
repz
sub
call
pop
dec
push
jecxz
ja
in
fbstp
cmpsb
xchg
adc
jo
xchg
lock
pop
aad
and
inc
mov
and
pop
push
ja
imul
xor
dec
fsubl
sub
jle
inc
out
xor
imul
pop
fs
scas
call
scas
mov
divb
and
sbb
ret
adc
sbb
dec
dec
movb
movsb
mov
and
adc
movb
push
daa
xor
sbb
loope
lods
cmpsl
cmp
push
pop
jae
cwtl
dec
and
rclb
sub
jp
xchg
fidivrl
and
clc
dec
sub
push
les
arpl
es
icebp
cmc
pop
mov
jmp
sbb
cmp
push
test
cmp
adc
outsl
add
pop
mov
cmpsb
lret
xchg
push
xchg
jecxz
xchg
sar
scas
lret
add
sbb
xor
inc
loop
dec
dec
lcall
mov
push
sub
sahf
sub
cmp
ret
repz
mov
addr16
clc
les
popf
jno
les
mov
jns
jle
repnz
fsubl
nop
hlt
push
and
adcl
in
jne
sarl
js
sub
sbb
mov
loop
cmp
mov
mov
inc
mov
xor
icebp
imul
adc
and
rclb
sbb
out
jmp
mov
inc
and
repnz
xor
lahf
addb
mov
pop
jecxz
neg
out
shl
lods
jo
mov
mov
lea
loopne
pop
jbe
cmpb
mov
pop
inc
or
outsl
mov
push
scas
repnz
add
xor
nop
popa
lods
pop
test
inc
cmp
insb
or
sub
or
push
popf
ret
in
cmpsb
add
enter
outsb
test
int
mov
jns
subb
insb
mov
in
mov
lcall
push
fdivl
shrb
and
cmp
adc
inc
data16
jg
cs
cmpsb
mov
adcl
dec
insl
mov
jle
ss
ja
jl
mov
arpl
pop
adc
int
mov
add
cmc
les
mov
pop
cli
shll
shl
or
rol
dec
in
in
xchg
stos
add
mov
cmp
mov
or
cmpb
inc
pop
outsb
cwtl
ror
out
push
repz
negl
push
pushf
cmp
xorb
aaa
push
mov
scas
loope
jb
cmp
out
push
jno
test
dec
inc
test
pop
inc
in
imull
test
fstp
push
daa
or
lret
popa
xchg
pop
negb
icebp
inc
js
mov
sbb
add
add
out
gs
and
cmp
sub
and
cs
mov
int3
test
dec
das
mov
mov
add
out
outsl
xchg
mov
cwtl
repnz
xchg
jne
push
cmp
push
pop
xchg
mov
inc
rcrl
fcmovnb
sbb
mov
insb
jne
lods
repz
sahf
scas
lock
aad
popa
adc
filds
pop
loopne
sbb
mov
fldcw
fisttpll
mov
pusha
or
roll
leave
lea
rol
dec
lds
cmpsb
jne
dec
rcr
jmp
popa
mov
cmp
lea
das
outsl
sub
push
fbstp
fs
inc
repz
stc
outsl
mov
mov
mov
negl
mov
dec
pop
stc
stos
iret
xor
or
cmp
push
in
outsl
add
lds
fisubrs
mov
add
in
sahf
fldcw
js
popf
or
enter
and
loope
cmp
cmpsl
divl
mov
mov
enter
jecxz
mov
push
std
cs
mov
mov
add
mov
imul
pop
or
jns
jne
jne
push
xor
jg
test
xor
sub
jnp
xchg
insl
in
xchg
inc
and
or
imul
mov
jbe
in
mov
jp
add
and
sub
fstpt
dec
pop
mov
ret
dec
mov
scas
cmc
icebp
popf
out
jno
fsubrs
fs
xor
mov
lods
fs
push
lods
pop
mov
test
push
xchg
lret
and
les
add
rcrb
cmp
xchg
pushf
jmp
call
shl
pop
pusha
fs
gs
mov
lods
jl
jmp
inc
dec
popa
or
cmpsl
jp
mov
jae,pn
dec
dec
jo
and
jmp
dec
mov
pop
and
jle
movsb
add
sub
and
scas
jge
addr16
cmp
stos
cli
sahf
lahf
pop
leave
xchg
mov
and
pop
dec
xchg
call
cmp
adc
rcrb
jmp
test
ds
insb
push
mov
outsl
cwtl
insb
xor
xor
mov
add
and
push
ljmp
mov
int3
data16
bound
push
leave
das
ficoml
leave
mov
loope
shll
xor
add
lds
xchg
aam
xlat
mov
test
outsl
ss
mov
pusha
adc
xchg
jae
mov
push
jmp
repz
in
and
sub
sahf
mov
movsl
push
sbb
fcomps
sarb
cmp
pop
std
lea
inc
xchg
fmul
test
mov
sub
clc
xchg
aas
movsb
lds
mov
adc
inc
jmp
inc
push
ds
cltd
fmull
or
xchg
add
or
inc
cmp
and
rolb
loopne
data16
cmpsl
pop
lret
negl
jg
xchg
jns
add
push
add
push
jmp
push
leave
fs
mov
shll
and
mov
sub
in
fsts
jmp
push
sbb
adc
cmpsl
cmc
cmp
jnp
mov
clc
into
rcrb
sbb
ret
loopne
insb
cs
mov
int
leave
or
fisubrs
mov
push
push
cmp
test
cmp
push
or
add
test
repz
xchg
test
jmp
xor
push
je
out
dec
loop
rolb
add
lock
scas
xchg
outsl
push
insb
std
int3
and
xlat
xor
repnz
xor
imul
add
in
outsb
out
push
add
mov
ret
push
inc
sub
add
adc
push
fmuls
lret
hlt
jge
movsl
mov
lcall
icebp
adc
jge
mov
nop
jmp
sbb
cwtl
sbb
xchg
inc
pop
aaa
or
hlt
loopne
jbe
scas
xorl
add
mov
cld
or
xchg
jno
stc
inc
arpl
jl
imul
jns
cmp
or
cwtl
imul
jg
mov
inc
cmp
mov
cmp
fstl
dec
and
and
out
repnz
sub
leave
ljmp
mov
dec
lods
lea
fcomps
and
and
fbstp
addl
stos
lret
mov
rcll
cld
xchg
imul
cld
test
push
push
hlt
lds
scas
adc
inc
dec
addl
stos
idivl
adc
mov
jl
lock
push
xchg
jmp
pop
scas
mov
mov
call
inc
dec
imul
and
or
into
imul
lret
scas
orb
jecxz
test
jno
cmp
push
or
jno
inc
xchg
mov
push
xlat
insl
out
xor
dec
or
mov
mov
add
jns
mov
jle
ror
es
mov
dec
cmpsl
test
addr16
in
inc
mov
jl
pop
addb
gs
pop
ficoml
aaa
mov
sbb
inc
cmpsb
pop
pushf
dec
or
inc
enter
jae
dec
aam
xchg
dec
test
loopne
mov
cmp
dec
sbb
sub
cmp
adc
divb
das
inc
inc
cmp
shrb
jns
popa
xchg
mov
xchg
push
or
inc
addr16
lahf
popf
cmp
jecxz
andl
mov
daa
sub
fidivrs
out
mov
cmp
jmp
fiaddl
call
adc
imul
adc
xchg
xorb
add
mov
sub
mov
adc
add
pop
lds
push
push
or
pop
add
fcoms
mov
fmul
push
push
addr16
lret
pop
or
sar
lods
xor
movb
cmp
sarl
js
xor
imul
or
add
cmpsl
not
push
enter
rep
out
clc
scas
xchg
clc
mov
sbb
dec
call
movsb
cltd
xchg
inc
nop
addr16
call
fdivl
push
mov
xor
popf
mov
xchg
es
sti
mov
fldl
dec
ret
and
lea
xchg
push
clc
stc
sti
icebp
sbb
test
xor
pop
dec
arpl
push
cmp
pop
insb
mov
gs
fimull
jb
jg
xor
ret
into
stc
add
pop
lds
sub
out
mov
push
adc
mov
mov
cmpsb
sar
orl
xor
dec
mov
outsl
scas
jl,pn
xchg
bound
nop
int
inc
sub
out
add
shll
scas
push
rol
inc
cmp
andl
cmp
pop
out
adc
dec
inc
in
insb
lret
mov
mov
fs
sub
xor
inc
add
or
dec
add
cmp
sti
iret
jl
stc
je
aas
out
loop
jns
mov
out
cs
mov
sub
lret
xchg
hlt
jge
mov
xchg
or
out
xchg
jge
mov
or
out
pop
adc
iret
sahf
or
mov
jge
push
cmpsb
ja
leave
adc
movb
lret
lock
popa
out
inc
fdivl
jmp
sbb
loop
int3
fmul
lea
cwtl
into
push
ret
pop
adcb
push
ljmp
mov
ds
aam
mov
pushf
idivb
scas
adc
mov
sbb
out
sbb
shrl
cli
data16
fisubl
mov
mov
dec
movl
pusha
nop
xchg
int3
lret
std
pop
mov
inc
ljmp
scas
rorl
or
cmovnp
leave
xchg
adc
lock
dec
insl
jo
jecxz
adc
jle
jne
push
pop
cwtl
mov
xor
lods
jl
sbb
or
ret
gs
push
out
jp
popf
into
mov
aas
sbb
mov
adc
movsl
sbb
pop
xchg
and
jnp
fnstsw
cmp
jae
mov
imul
pushf
fisubs
mov
arpl
mov
mov
add
cmp
add
mov
loope
jae
inc
xlat
std
inc
push
aas
sub
jg
xchg
outsb
or
adc
inc
add
arpl
jle
rorl
and
adc
xchg
and
fisubl
cmp
xchg
jecxz
roll
xlat
adcl
xor
and
lea
sub
cwtl
jecxz
aaa
jge
clc
and
inc
mov
jp
inc
pusha
ljmp
lds
cmp
js
insl
fistpll
imulb
or
mov
xor
lcall
and
in
faddp
arpl
push
fucomi
adc
mov
lds
cmp
sub
inc
es
daa
jmp
nop
fdivrl
dec
cmc
js
rclb
adc
mov
cmp
and
mov
and
rcll
add
clc
stos
pushf
sbb
adc
jb
xor
in
mov
loope
push
stos
mov
out
xchg
std
mov
sub
rcrb
call
into
inc
lret
sbbb
mov
ja
in
push
out
inc
xchg
cmp
adc
inc
xor
jns
std
cmpsb
movsb
mov
in
enter
aad
xor
push
pop
jno
loopne
xchg
cmc
add
bnd
inc
int
enter
cmc
sbb
lods
popf
test
cmpsb
aaa
jle
shll
and
xchg
inc
pop
gs
je
xchg
or
dec
adc
fiaddl
jp
xor
pop
in
rol
mov
mov
movsl
pop
das
or
jp
test
sarl
in
lock
push
pop
xchg
mov
test
out
sbb
fimull
movsb
dec
add
js
jp
and
pop
divl
ljmp
xchg
sub
sbb
push
jb
pop
mov
cld
xchg
cmc
or
pop
test
addr16
shll
xor
sub
mov
mov
es
cmp
sub
lret
adc
mov
jp
jecxz
mov
mov
je
mov
dec
movsl
sahf
cmp
inc
scas
xchg
fwait
push
pop
mov
inc
and
cmp
push
xchg
negl
inc
lods
xor
lret
sub
or
dec
loopne
mov
gs
mov
inc
adc
mov
adc
pop
ror
pop
mov
cmp
mov
inc
and
mov
and
fwait
push
xchg
mov
and
mov
aad
add
jbe
std
add
fistl
xchg
bound
and
jb
pop
pop
pop
stos
xor
stc
jne
sub
pop
xchg
loop
inc
or
adc
adc
push
adc
scas
jno
xor
in
jb
mov
out
inc
cs
js
enter
daa
and
push
and
dec
mov
adc
rorb
mov
popa
fdivl
lahf
pop
inc
adc
mov
fstps
sahf
sar
xchg
pop
mov
sbb
and
daa
jae
mov
add
pop
dec
add
xchg
sbb
ret
adc
cltd
push
divb
gs
mov
sbb
hlt
lods
fistpl
outsb
push
mov
lret
mov
lret
fwait
sahf
sub
out
das
js
movsb
push
or
das
mov
or
shll
or
mov
mov
pop
sub
pop
jmp
fimull
push
int3
or
pop
aad
jmp
mov
pop
cmpsl
shl
std
mov
addr16
sbb
cwtl
shlb
jge
xor
data16
fldl
es
imul
enter
addr16
adc
dec
iret
mov
clc
push
jno
fimuls
outsb
xchg
std
bound
ja
lods
into
mov
stos
mov
push
enter
aam
push
incl
rcr
je
push
jmp
ds
rorl
xor
repnz
mov
push
int
jmp
repz
mov
adc
mov
mov
mov
adc
xchg
mov
rcll
shrb
push
jp
add
dec
push
and
fsubrl
cld
jmp
jecxz
fnstsw
sub
cltd
nop
lds
rcrl
mov
in
jbe
ljmp
movsb
adc
jmp
push
mov
mov
jb
cmp
repnz
adc
add
std
fldl
fdivs
daa
mov
pop
cwtl
insb
je
jecxz
inc
jo
mov
jo
gs
mov
outsl
bound
cmp
xor
xchg
cmp
movl
and
mov
xor
andb
dec
lahf
push
mov
rcl
popa
push
cs
and
adc
call
jnp
daa
push
mov
push
cmpsl
dec
pop
or
push
out
pop
jmp
aaa
popf
or
outsl
pop
test
mov
inc
lahf
xchg
hlt
dec
dec
test
inc
mov
in
jb
addl
fisubrl
pop
adc
xchg
dec
jmp
rclb
ja
pop
aas
out
jbe
sbb
sub
mov
andb
and
loope
repz
movlhps
xchg
sub
mov
sbb
add
cs
push
stos
push
add
mov
push
mov
fldl
mov
addl
add
cmp
and
pop
repnz
aad
and
dec
pop
mov
mov
lea
and
adc
pop
and
dec
pop
jne
mov
fsubl
mov
stos
jl
mov
testl
jle
daa
rolb
outsl
sti
cli
ret
fists
cmp
jo
fildl
aaa
call
sbb
in
mov
mov
jle
subb
xlat
jp
scas
add
push
into
data16
cli
aad
insb
pop
jno
dec
dec
push
adcb
mov
test
push
iret
mov
and
sub
and
push
sar
fldl
fistpl
shll
inc
flds
sub
fadds
mov
es
rolb
mov
jb
pop
lds
mov
gs
test
outsb
mov
pop
adc
pop
stos
lret
xchg
insl
jns
mov
stos
adc
jmp
je
dec
jo
out
push
push
packssdw
hlt
mov
ja
add
rcll
cmp
xchg
mov
xorb
out
pop
cmp
xlat
jno
popf
mov
into
xchg
adc
shll
cld
ffreep
inc
daa
cld
lret
inc
mov
mov
or
ret
sti
push
out
or
mov
push
inc
xor
sbb
ss
out
lock
movsl
in
xchg
sub
and
cmpsb
and
mov
out
pushf
pusha
mov
repz
sub
sbb
aam
ret
cmp
scas
aad
push
sub
and
fdivr
mov
add
stc
movsl
sbb
out
mov
lods
mov
clc
and
fwait
mov
lods
xlat
loope
pop
xor
or
dec
fstp
ja
or
lret
test
cltd
mov
cwtd
xchg
cmp
jmp
outsl
outsl
lcall
int
push
pop
sti
jl
mov
leave
mov
iret
mov
dec
lds
sbbb
fmul
jge
push
xor
inc
in
lahf
xor
adcb
andl
cmp
xchg
jbe
add
inc
lock
andb
jl
cmp
aam
dec
xchg
push
jl
or
cmp
stc
push
icebp
mov
push
sub
jl
push
lcall
cmc
scas
push
mov
in
inc
pop
inc
stc
xor
sahf
nop
ds
sub
pop
loop
lret
jp
push
loop
rclb
jecxz
insb
xchg
push
push
outsb
pop
sbb
cmc
mov
dec
iret
sar
add
jae
adc
jl
dec
loop
mov
add
std
fbld
call
push
repz
stos
scas
outsl
and
shll
inc
mov
jmp
mov
inc
mov
pop
cwtl
mov
cmp
int3
fadds
dec
sbb
jnp
ret
nop
ret
mov
dec
lret
push
pop
pop
sub
sbb
dec
arpl
addr16
std
push
mov
cs
mov
pusha
sti
and
push
ss
pop
arpl
mov
rcll
in
int
sub
lret
notl
pop
push
dec
movsl
jl
or
sahf
xlat
jmp
pop
js
loope
dec
cmpsb
cli
and
fisubrs
sbb
jb
pop
cmp
pop
or
andl
inc
jo
mov
aaa
mov
in
cmpsl
xchg
in
inc
cmp
add
dec
inc
mov
cmp
pop
sti
cmpsb
inc
aad
pop
add
ljmp
jg
mov
pop
pop
jmp
mov
hlt
sbb
ss
adc
shrl
jbe
fists
mov
cmp
cld
fcomp
les
pop
fdivr
add
sbb
add
stc
fcompl
data16
jne
mov
std
dec
mov
push
push
scas
add
lret
jg
xchg
loope
mov
aam
jnp
push
add
jge
fcoml
sbb
adc
mov
data16
xchg
cmp
dec
imul
cmpsb
repz
pop
xor
dec
xor
gs
ret
sub
icebp
popf
add
loop
lahf
mov
test
add
dec
mov
cs
imul
incl
movsl
push
addb
push
pushf
dec
dec
sub
aaa
fwait
stos
aad
rclb
repnz
pop
sbb
mov
sbb
xchg
out
pop
test
popf
fdivs
mov
xor
pop
outsl
in
push
repz
cmp
cmpsb
jp
xor
sbbl
shll
leave
pop
inc
repz
and
outsb
jecxz
or
cmp
mov
sbb
mov
mov
nop
gs
sub
pop
pop
mov
add
std
add
mov
sub
test
and
aad
inc
out
inc
lea
repz
pop
jmp
lea
or
and
mov
scas
push
enter
pusha
repz
in
add
inc
in
sbb
in
adc
lahf
sbb
ja
in
pop
fs
outsl
cld
push
lcall
aaa
int
jb
ljmp
jnp
in
lret
or
or
lock
sbb
roll
cmpsb
xor
adc
xor
mov
or
and
push
les
cmp
dec
and
xchg
mov
mov
adc
dec
mov
add
mov
push
xchg
das
xor
jg
sahf
aad
leave
push
decb
bound
xchg
mov
in
mov
xor
in
push
pop
out
jecxz
jle
ljmp
pop
mov
imul
in
xchg
lds
fldt
arpl
sti
mov
jae
xor
adc
aam
repnz
mov
xor
push
add
cmp
add
adc
ret
mov
clc
fstpt
and
sbb
aam
xchg
outsl
ret
decl
pop
stos
xchg
mov
mov
decb
fcmovbe
repnz
add
inc
adc
repz
sbb
mov
loope
lods
inc
inc
pop
fisubl
lods
mov
mov
sarl
pop
movl
sbb
testl
bound
pop
inc
mov
mov
loopne
mov
mov
subl
mov
jecxz
add
aam
stos
mov
mov
xor
mov
mov
push
ret
gs
fstl
ror
les
std
push
fcoml
out
dec
jae
sahf
ja
popa
sbb
xchg
fisttps
lea
popf
add
push
ja
push
cmp
mov
fs
mov
out
dec
push
add
jle
xor
aam
and
mov
sub
push
rolb
das
cwtl
jo
shl
call
mov
ja
es
mov
imul
mov
data16
jmp
call
and
lret
dec
adc
and
rclb
add
mov
sahf
mov
push
push
lds
inc
ret
rcrb
cmp
sbb
xor
sub
jb
push
xorb
push
jle
iret
or
es
xchg
push
pop
mov
aam
inc
xor
inc
jbe
loop
out
pop
mov
or
lods
popf
pop
or
adc
inc
inc
enter
pop
xor
mov
xchg
cmp
rcrl
jp
mov
inc
popa
nop
sub
bound
shll
jb
mov
vaddsd
pop
xchg
sbb
and
ftst
pop
cmpsl
or
or
cmp
sub
adc
gs
cltd
pop
iret
mov
jle
jle
push
cld
xchg
bound
jmp
adc
pop
test
jl
xor
sub
inc
xor
mov
mov
andl
fdivp
mov
push
cmpsb
inc
pop
sub
pushf
in
ret
adc
hlt
push
cld
pop
push
nop
mov
push
adcb
lods
jg
imul
xor
popa
inc
xchg
jnp
outsl
mov
push
jl
call
sbb
xor
ret
push
xchg
dec
ds
xor
push
mov
jle
fstpt
roll
pop
push
cltd
mov
out
jmp
sti
xchg
repnz
inc
sub
and
mov
pop
in
push
clc
push
xorb
adc
pop
fdivs
outsb
das
mov
push
daa
das
jbe
cld
push
pop
cwtl
cmpsb
dec
or
mov
clc
cltd
or
and
std
imul
add
mov
test
mov
mov
inc
dec
push
fidivs
add
adc
add
xor
lahf
xchg
inc
dec
add
dec
mov
push
xor
imul
outsl
pop
push
insl
and
popf
je
jno
imul
inc
mov
shlb
aad
test
ljmp
sarl
jo
lds
js
mov
aas
movzwl
cltd
mov
aaa
cmp
cmp
dec
adc
inc
inc
in
dec
daa
inc
pop
insb
pop
mov
add
xor
imulb
mov
xchg
and
pop
or
leave
in
push
mov
dec
shll
mov
dec
test
in
nop
test
cwtl
and
orl
int
cmp
jl
cmp
loop
daa
ja
add
cwtl
xchg
fnstenv
es
mov
and
mov
shrl
dec
or
jbe
adc
lods
out
cmp
sysenter
jp
enter
fisubrl
je
fdivrs
test
shll
movsl
notl
xchg
ljmp
cmp
ljmp
xor
mov
sbb
or
lock
pop
int
enter
push
nop
xchg
push
test
dec
cld
sti
mov
sbb
cmp
mov
push
mov
daa
push
mov
mov
mov
out
add
mov
sub
imul
std
in
ret
dec
out
gs
add
dec
loope
test
cltd
push
lock
test
mov
dec
and
jecxz
popa
ljmp
das
inc
nop
push
sti
int
pop
mov
clc
pop
adc
cwtl
mov
in
pushl
test
mov
or
sarl
mov
lret
rclb
stos
dec
in
cmp
aaa
lea
mov
jge
pop
or
or
sbb
clc
fmull
inc
jecxz
and
xchg
ret
or
mov
xchg
mov
xor
inc
frndint
fadds
cmp
dec
loop
adc
dec
mov
ror
ja
adc
push
insb
clc
test
and
xor
mov
and
push
addr16
dec
xchg
mov
jns
lods
mov
jp
mov
ds
xor
and
ds
sbb
cltd
sbb
or
fildl
in
cmp
insb
lcall
out
push
icebp
push
jno
mov
enter
sahf
movsl
ljmp
xchg
iret
sub
cmpb
aam
push
idivl
or
in
pop
cmp
mov
faddl
data16
ss
shll
inc
jge
psraw
sbb
fpatan
sub
rorl
push
cld
and
je
ja
pop
js
pop
xchg
and
inc
js
enter
adc
cmp
jno
push
inc
dec
mov
jns
pop
mov
jg
pop
mov
push
jl
lcall
std
out
or
inc
sub
cmp
cltd
pmulhw
jne
jle
pop
push
push
data16
aas
repz
or
fistps
sbb
leave
fcmovu
sarb
repnz
inc
cs
es
jb
js
aad
mov
mov
pushf
xor
clc
mov
das
shr
scas
pop
insl
mov
cmpsb
addr16
int3
ljmp
lret
lods
loope
jmp
ret
je
stc
test
or
aad
or
cs
mov
jmp
insb
loopne
scas
add
pop
dec
fs
out
hlt
insb
scas
mov
imul
sbb
sbb
sti
out
inc
push
popf
loope
push
sbb
fisubl
xor
xchg
shll
sahf
call
sub
mov
and
sbb
lea
and
xchg
dec
lods
sub
pop
fdiv
jbe
call
cmp
jge
mov
fs
mov
ss
inc
outsb
mov
mov
mov
lods
stc
out
addr16
sti
sbb
aam
dec
pushl
xorb
xor
into
not
sarl
std
iret
pop
push
jmp
add
xadd
push
add
jae
xchg
xchg
pop
and
xchg
jne
xor
iret
jnp
call
mov
jmp
add
nop
mov
inc
lock
dec
fidivs
jno
test
outsb
sarb
out
adc
mov
push
loope
mov
sub
add
pop
sub
push
cmpl
ss
test
insl
bound
cmp
xchg
xor
mov
jge
pop
dec
sti
cltd
pusha
sub
cmp
mov
in
sbb
addr16
mov
stos
pop
lea
mov
adc
sub
stos
pusha
loopne
push
push
mov
adc
ret
test
mov
outsl
add
pushf
and
andl
xchg
dec
xor
insb
jecxz
adc
push
loopne
inc
mov
nop
inc
aam
inc
cmp
test
bound
cs
or
adc
sub
dec
adc
cltd
or
mov
int3
mov
xlat
cmpsl
mov
outsb
test
sub
rcll
mov
and
cltd
dec
shll
mov
mov
xor
popa
aaa
dec
xchg
and
add
mov
dec
movsl
add
out
and
iret
mov
xchg
jecxz
scas
pushf
or
mov
pop
and
cld
jp
mov
pop
mov
sbb
add
fst
rcll
stos
sbb
dec
push
int
jl
adcl
sbb
jle
cmc
nop
mov
sbb
sbb
out
mov
xor
add
jns
mov
nop
jae
jno
insl
cmp
push
dec
push
mov
push
aad
push
xor
cmpsb
dec
adc
pop
cs
hlt
xchg
stos
pop
jo
mov
lcall
mov
mov
xchg
sub
mov
push
int
xor
jmp
nop
mov
js
jmp
and
push
cs
jg
dec
mov
push
sbb
loopne
std
sti
cld
and
out
cltd
mov
in
adc
push
jle
and
inc
cli
mull
adc
mov
mov
orb
or
pop
jge
xor
or
shlb
in
scas
nop
pop
or
push
mov
lret
xchg
int
shl
dec
stos
push
or
sbb
lret
lock
xor
popa
or
aaa
or
adc
fwait
sub
sub
pop
lds
sub
test
popf
pop
adc
test
lea
dec
mov
mov
sbb
dec
or
gs
roll
xchg
inc
adc
sub
sbb
push
pop
into
lret
mov
aaa
aam
xlat
ret
decl
mov
dec
lock
fnsave
jle
dec
sub
sbb
sahf
insl
mov
int
shrb
cmp
or
aam
test
jecxz
xor
aad
mov
cmpsl
jne
cmp
aaa
shll
sub
cmp
lret
repnz
xchg
das
out
pop
pop
in
orb
mov
sbb
sbbb
and
mov
cmp
cmp
lret
cmp
dec
or
sub
stos
outsb
test
nop
or
jo
insl
aad
nop
xchg
lea
or
stos
nop
dec
jmp
arpl
mov
mov
jno
cmp
mov
mov
imul
sbb
lods
xor
xor
sti
imul
pop
pop
jl
movb
push
les
xor
jl
xchg
lods
jo
push
push
in
es
inc
loopne
sahf
xor
dec
xchg
and
add
jge
stos
jno
ja
and
pop
or
pushf
fs
ret
outsl
mov
hlt
jle
xchg
mov
adc
jmp
repnz
rorl
out
in
sbb
imul
loope
aaa
cld
jmp
out
scas
pop
sti
mov
ds
das
ret
out
cmp
mov
or
jns
cmp
sbb
es
iret
shrb
xchg
outsl
mov
xchg
sbb
mov
dec
or
adc
mov
mov
fdivrl
les
adcb
enter
push
nop
lods
inc
mov
lcall
dec
pushf
fistpl
mov
loope
add
sub
push
or
enter
notl
xor
and
fstpl
movsl
pop
fldl
pushl
mov
icebp
xor
cs
lods
xchg
sub
fisubl
push
les
cmp
out
push
dec
or
subl
jae
mov
adc
adc
sarb
pop
test
leave
call
cld
mov
sbb
iret
les
insl
addr16
mov
cmp
sbb
pop
jno
mov
xchg
in
dec
pop
popf
jecxz
dec
shr
jp
fptan
inc
addb
jns
pusha
addb
cs
mov
add
lea
rol
mov
cmp
and
cltd
outsl
in
mov
pop
adc
inc
sbb
cmp
call
push
lods
add
pop
call
lods
mov
xchg
pop
mov
fwait
and
push
cmp
pop
xchg
dec
fcomps
xchg
mov
leave
mov
inc
in
inc
test
add
addl
cmp
xlat
in
repz
aas
add
or
sub
mov
testb
std
aam
out
js
lea
scas
loop
push
adc
sub
imulb
fildl
ret
sbb
inc
call
fidivrs
stos
xchg
mov
dec
in
ljmp
bound
jae
lods
xchg
ret
pop
out
lods
add
enter
je
cld
outsl
faddp
fs
addl
and
jle
xchg
xlat
cmp
idivb
xlat
add
pop
bound
or
cmpsw
xchg
test
xchg
test
xor
fs
mov
jbe
sbb
shrb
cmp
jl
mov
adc
ret
es
xchg
push
sbb
out
mov
mov
in
std
mov
cli
xchg
outsl
jne
ja
shrl
inc
cmp
shll
cmpsb
or
aad
jp
pop
fisubrl
imul
test
push
fcmovne
insb
cmp
pop
mov
in
dec
jge
test
push
xchg
pushf
push
adc
pop
push
ss
insl
and
xchg
xchg
aad
jbe
stos
mov
iret
outsl
pop
jae
in
addl
add
fadds
and
clc
sbbb
pop
or
cltd
and
push
gs
add
jbe
dec
inc
lods
or
inc
adc
push
add
test
movsl
cs
mov
scas
fcmovnb
out
and
aas
popl
ret
ja
sub
dec
dec
stc
hlt
cmp
jmp
and
negb
xor
sbb
cmp
mov
inc
jmp
mov
sub
pop
rcrl
xor
mov
insl
jmp
into
jmp
xchg
lcall
test
rcrl
fsubs
pop
push
mov
sbb
stc
mov
xchg
push
arpl
or
insl
scas
cmp
fistpll
mov
pop
rorl
mov
sbb
je
pop
nop
jg
rol
sub
aaa
xor
add
pop
jecxz
sub
pop
fsubs
loopne
lcall
mov
outsl
xchg
jno
mov
pop
adcb
or
dec
jp
mov
mov
cmpb
clc
mov
testl
and
movsl
aad
sub
jle
sbb
in
xchg
xchg
cltd
mov
push
fcomps
pop
cmp
add
sub
call
mul
ja
mov
jp
inc
insb
imul
and
mulps
ss
and
xlat
adc
xor
in
das
popf
out
push
mov
add
jecxz
cmp
pop
xchg
push
jae
stc
inc
fcompl
xor
mov
or
push
pop
xchg
inc
sbb
xorl
cmp
leave
test
lret
cmc
cmpsb
cmp
or
xchg
cmpsb
loopne
sbb
cs
and
cli
jl
pop
jmp
adc
stos
pop
stos
inc
adc
out
icebp
aam
inc
jnp
sahf
adc
inc
inc
ror
cltd
insl
mov
cmpsb
stos
call
sbb
add
jo
call
xor
das
repnz
jle
xor
hlt
fmuls
mov
mov
cmp
adc
mov
xchg
repz
and
fs
in
push
in
jne
cmp
cwtl
jg
cwtl
adc
out
xor
xor
jne
or
loopne
pop
lods
sbb
daa
inc
mov
sub
jg
xorl
inc
and
or
dec
lahf
aas
dec
in
jl
and
frstor
dec
add
cmpsl
mov
dec
mov
inc
fistl
jbe
lahf
fmull
popa
fadds
mov
push
insl
in
fdivrs
out
xchg
and
dec
addl
push
bound
xchg
mov
jae
test
pop
scas
imul
sub
jmp
sub
xchg
lods
in
add
std
cmp
inc
mov
mov
mov
mov
movsb
dec
stos
fnsave
outsl
add
xor
ret
movsl
dec
rcrb
push
adc
arpl
lret
xchg
popf
push
push
cwtl
fwait
jl
std
scas
jno
xchg
mov
rcrb
dec
mov
xor
rol
push
jecxz
push
xchg
fbld
sub
push
cwtl
loop
icebp
add
test
test
sarl
sub
in
js
inc
push
ljmp
push
add
in
or
addr16
cs
adc
jg
jle
dec
lock
xchg
int
pop
push
arpl
mov
dec
jne
sbb
stc
mov
dec
mov
shlb
xor
pop
cmc
int
xlat
or
pop
mov
inc
aaa
pop
sbb
ds
jecxz
mov
sub
addl
sub
push
pop
mov
lcall
cmp
jp
mov
outsl
js
out
jnp
das
aaa
in
push
cli
and
inc
mov
mov
fdivs
je
mov
jecxz
aam
dec
iret
mov
fprem
jmp
aaa
ljmp
jnp
mov
gs
fmuls
ror
sub
sbb
push
sub
inc
call
fs
pop
pop
js
jb
repnz
jne
cmc
dec
std
mov
sbb
movsb
add
xor
push
mov
dec
cmp
cmp
cmpsb
out
in
adc
adc
cmp
dec
dec
add
sbb
push
pusha
jl
pop
and
movsl
lods
push
mov
jne
hlt
ret
mov
scas
repz
sbb
outsb
pop
push
xor
add
hlt
lock
clc
dec
fs
sahf
inc
sahf
rcrb
adc
les
mov
sti
mov
or
je
and
and
jno
enter
mov
pop
in
mov
or
div
mov
movsl
inc
sti
sbb
ja
decl
dec
icebp
push
ret
sarl
shrl
adc
in
outsb
mov
mov
mov
notb
jl
fldcw
xor
xor
jg
popa
inc
and
sbb
shll
sbb
inc
ret
movsl
fdivs
jnp
faddl
leave
fdivrl
add
nop
jne
add
mov
pop
into
sub
mov
sbb
cs
xchg
inc
sub
mov
hlt
cmp
mov
std
push
test
sbb
stos
add
or
push
ss
je
test
fists
push
pop
add
sub
jo
jb
and
xchg
dec
sub
fdivrs
lahf
adc
add
pop
jae
popf
mov
push
outsb
fmulp
jl
xorw
pop
inc
ja
outsl
rol
out
or
add
jae
out
adc
cmp
pop
lods
pop
xchg
mov
and
icebp
mov
ss
jb
out
fs
mov
lea
enter
fisubl
push
mov
xlat
imul
mov
loope
shrb
loope
lods
inc
xchg
and
mov
fidivrs
pusha
out
and
xor
rolb
mov
stos
jmp
push
stc
mov
push
imul
or
inc
mov
call
icebp
xchg
mov
sbb
inc
sub
mov
clc
dec
add
rclb
dec
inc
push
push
pop
push
fnstcw
lret
bound
xor
or
addr16
mov
inc
or
rcrl
push
push
or
pop
adc
add
sbb
das
push
jae
sbb
mov
inc
into
xor
fimull
jnp
leave
mov
inc
jns
in
sbb
into
pop
pop
sub
jns
das
loope
pushf
cmp
cmp
frstor
loop
sbb
cld
pop
imul
xor
popf
pushf
popa
cmp
mov
pop
addr16
or
test
popa
test
cmp
mov
dec
shr
mov
in
dec
neg
fsubl
mov
nop
pop
sub
cmp
outsl
movl
out
out
or
lret
aaa
pop
xchg
inc
adc
shl
add
add
jno
in
dec
in
repnz
cmpsb
vprotb
rcrb
lahf
cmpsl
movsb
imul
and
outsl
insl
das
sbb
popf
cld
subb
repz
test
loop
dec
xchg
add
cmp
or
add
or
shll
mov
jl
xlat
mov
jge
fimuls
fistpl
arpl
cmp
and
sarl
fldt
dec
sub
add
push
mov
movsl
sahf
mov
inc
jo
mov
pusha
xlat
mov
add
scas
dec
add
push
lods
pop
lea
adc
outsb
cld
and
leave
movsl
push
push
test
out
loop
cmp
mov
aas
lods
rcrb
adc
cwtl
dec
inc
push
jg
stc
inc
repz
pop
sbb
pop
mov
ror
or
idivl
jecxz
dec
cmpsl
arpl
or
out
scas
xchg
xor
mov
rclb
xchg
loope
out
xchg
ds
push
sti
lcall
pop
xor
xor
cltd
cmp
int
xor
cltd
in
or
mov
push
aad
in
xor
adc
xor
xchg
in
mov
sbb
sub
cli
mov
addr16
jne
dec
mov
mov
sub
inc
je
pop
test
outsl
je
xchg
imul
jb
cmp
ljmp
or
mov
mov
push
push
xchg
mov
and
push
scas
int
pop
insl
lods
push
cmp
in
and
dec
imul
mov
jbe
shll
fsub
sub
add
sub
scas
fstpl
push
pop
push
pusha
and
jo
mov
sbb
dec
fwait
les
call
enter
shll
in
lods
xor
aaa
fcmovnb
mov
inc
pop
cmp
sbb
daa
mov
pop
jmp
sbb
lret
pop
mov
int3
mov
repz
or
dec
add
dec
and
ds
popa
call
adc
adc
jmp
cli
jae
adc
cmp
xchg
cmp
repz
nop
leave
ljmp
repz
jnp
outsl
rcll
insb
in
cmpsl
inc
mov
xchg
sarl
mov
inc
sub
push
xchg
rsqrtps
frstor
push
fxch
jle
call
ret
pop
ja
inc
into
and
sbb
aam
xchg
lcall
push
aam
test
and
into
adcl
sub
mov
arpl
mov
es
mov
xor
mov
lret
pop
adc
mov
out
push
mov
add
mov
dec
stc
sbb
in
push
mov
cs
fisubl
xor
pop
lds
xchg
dec
mov
clc
or
pop
jmp
add
shll
addr16
loope
push
inc
out
sub
pop
xchg
adc
cld
push
or
push
mov
xor
add
jb
dec
sub
jo
inc
popf
shll
pop
dec
mov
movsl
test
pop
testl
loop
movb
stos
sbb
fcompp
mov
lcall
fldcw
and
adc
aaa
aaa
mov
aaa
add
dec
or
push
mov
sbb
repz
mov
jno
sub
cmp
push
aas
xor
loope
shll
repnz
lods
cwtl
cmp
shlb
in
mov
and
mov
push
push
aaa
inc
xor
outsb
adc
mov
movsb
sbb
test
test
mov
cmc
lret
fcomps
out
movsb
stos
pushf
rolb
loop
test
cmp
pop
sbbb
sahf
test
repz
sarb
cltd
inc
fwait
pop
or
nop
hlt
or
mov
sbb
daa
pusha
push
insl
cmp
aam
popf
in
andb
pop
dec
mov
ja
cmp
or
mov
hlt
jle
xchg
lds
sub
cmpsb
dec
xchg
shl
repnz
xchg
pop
push
cltd
cli
xchg
imul
push
out
int3
adc
outsl
stc
cmp
fucom
add
and
and
add
push
push
test
mov
andl
cmp
add
mov
xchg
dec
mov
lock
enter
sub
xor
or
enter
lret
cli
pop
or
mov
sbb
jmp
neg
jne
out
xlat
push
stos
mov
outsl
xchg
enter
inc
xor
mov
and
cmc
jg
out
push
testb
fldt
shl
stc
stc
and
cmp
xor
jb
sarl
fists
mov
sbb
adc
xchg
mov
cs
cmp
gs
lods
jne
inc
inc
pop
ljmp
out
adc
or
hlt
xor
stc
in
push
fxch
mov
cwtl
add
fsubrp
xlat
call
lret
fsubl
repnz
jb
xor
adc
add
pop
cld
fnstsw
xchg
xchg
push
jnp
cwtl
jle
int
add
push
push
cmc
test
dec
ret
sub
movsl
in
jns
std
pop
sub
dec
divl
shll
fcoml
stos
pop
jge
fnstenv
xor
push
scas
fcoms
jge
outsb
sbb
fs
xlat
dec
arpl
fwait
stos
and
loop
lcall
les
sub
cmpsb
inc
ret
subb
mov
xor
negb
aad
and
cmp
aad
xchg
mov
xor
lea
or
stc
or
jecxz
mov
xchg
xor
es
imul
lcall
sub
dec
repz
scas
jle
aad
rolb
sbb
mov
test
daa
insb
xchg
into
mov
negl
push
sahf
inc
mov
adc
out
add
sbb
jno
push
scas
mov
pusha
jge
insb
add
out
loope
into
pop
inc
dec
es
decl
adc
or
shrb
addl
xlat
sub
hlt
fwait
cmp
call
jbe
push
pop
nop
adc
sahf
or
scas
test
push
cmc
inc
add
sub
and
jg
adc
lcall
sbb
add
fwait
mov
ltr
std
fsubrp
sti
jle
in
dec
mov
or
sub
stos
push
pop
xchg
cli
daa
pop
fsubr
xchg
rcll
or
and
ficompl
fstpl
clc
jno
push
cmp
bound
jo
addr16
pop
aad
dec
aas
movsl
incb
mov
out
sub
aas
pop
lcall
aas
clc
adc
cs
nop
pop
divl
inc
stc
leave
cmp
and
scas
pop
stos
and
sub
aad
lret
mov
out
mov
dec
andl
popl
and
sub
adc
stos
nop
push
movsb
xlat
cmp
out
jnp
repz
das
fnstcw
pop
pop
aam
xor
int3
loopne
push
jae
stc
daa
cmpl
inc
add
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
enter
