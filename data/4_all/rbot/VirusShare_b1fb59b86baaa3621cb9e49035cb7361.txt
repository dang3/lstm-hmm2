push
add
mov
push
dec
add
call
dec
das
add
xchg
inc
iret
les
in
mov
mov
mov
lods
sbb
ret
xlat
sub
and
jp
adc
mov
fwait
mov
jle
or
pop
push
cmpsl
xchg
fsubl
mov
mov
xor
rcl
mov
mov
imul
dec
test
nop
fcompl
xchg
ret
insl
and
in
xor
mov
dec
adc
or
adc
adcb
adcl
inc
outsb
push
xchg
add
inc
cltd
inc
or
add
pop
adc
fistpll
push
fdivs
adc
push
inc
test
xchg
jecxz
incb
lret
pop
push
or
mov
and
sub
sbb
cmp
jmp
stos
notb
xor
xchg
aad
mov
int3
sub
call
loopne
int3
imul
ss
adc
lock
lea
popa
adc
push
adc
lret
lea
or
shll
popf
cwtl
imul
xchg
dec
push
popa
dec
insl
add
mov
mov
outsb
add
push
or
addr16
add
mov
out
xor
hlt
jb
outsb
or
and
mov
mov
cmp
scas
push
shll
or
inc
bound
stos
add
arpl
lock
inc
roll
jle
dec
xchg
inc
icebp
imulb
test
movsl
les
mov
frstor
mov
aas
xorw
mov
call
jecxz
test
sub
sub
rcrb
and
pusha
aad
mov
sub
and
adc
or
add
rclb
nop
xchg
insb
or
idivl
invd
adc
sahf
dec
les
xchg
lods
lods
arpl
stc
dec
punpckldq
xor
popa
in
adc
lds
mov
or
add
xor
jo
jae
arpl
or
mov
popa
cmc
sar
push
lcall
adc
jnp
jo
pushf
cmp
insl
lret
cmp
js
imull
cs
sub
lret
jno
mov
fiaddl
dec
jnp
lds
push
rcrb
adc
fadds
aaa
xorb
dec
push
xchg
mov
mov
sub
sbb
mov
notl
insb
cwtl
into
mov
or
adc
fdivl
mov
sahf
add
add
dec
mov
test
adc
int3
rclb
pushf
out
pop
nop
add
loopne
das
imul
pushf
sub
and
pop
or
inc
mov
jge
aad
add
inc
insb
nop
gs
jp
xchg
inc
test
dec
xorl
jmp
pusha
loop
sub
aam
jg
test
inc
ret
sub
movsb
sub
enter
mulb
jb
cs
inc
mov
int3
xchg
jge
adc
xor
push
xor
jmp
mov
sahf
repz
cmp
sbb
sarl
inc
or
add
loopne
mov
sub
mov
outsb
adc
xchg
addl
inc
lcall
cmp
pop
insb
icebp
lds
outsl
or
test
jl
sbb
loop
out
mov
ror
inc
mov
jmp
ret
adcb
ret
lea
pop
lods
iret
or
xor
and
out
loope
push
nop
push
bound
ja
lods
stos
xor
les
in
nop
call
jns
and
inc
leave
push
dec
imul
mov
dec
mov
mov
xor
cmp
push
adc
inc
js
jae
inc
dec
jns
lret
and
sub
mov
mov
sub
adc
xchg
nop
and
stos
les
insl
es
push
mov
xchg
jbe
popa
fdivrl
add
xchg
fdivrs
mov
je
or
and
adc
aad
or
mov
lods
mov
or
dec
test
int
ljmp
lea
fwait
jnp
fwait
mov
es
out
add
inc
inc
rcrb
bound
mov
or
jmp
cmp
xor
mov
js
mov
ror
jo
dec
mov
js
jl
int3
xlat
sub
mov
sbb
aaa
or
dec
pop
lods
add
cmpsb
aam
sub
mov
dec
add
jle
shrb
or
lods
icebp
std
inc
mov
dec
fwait
les
pop
or
or
ss
xor
add
jmp
shll
sahf
addb
push
mov
out
and
lret
dec
sbbb
adc
mov
mov
ss
insb
cmc
pop
test
and
icebp
mov
adc
shrl
cli
and
cwtl
cmc
insb
cmp
lds
push
mov
inc
or
cmpsl
xchg
cmpb
in
aam
inc
lods
mov
jb
addr16
pop
mov
jp
rcl
mov
outsb
aad
movb
mov
xchg
add
ret
sub
inc
icebp
lods
or
rep
cmpsl
test
sarb
or
lods
stos
lcall
ss
fisttpl
or
push
cmp
xchg
sbb
loopne
xchg
je
rcrl
xchg
add
push
mov
xchg
adc
xchg
mov
push
orl
arpl
inc
or
and
es
test
fsts
dec
jb
and
clc
fistps
sbb
test
daa
call
cltd
roll
ljmp
hlt
cli
mov
loopne
incl
ss
fwait
mov
mov
pop
rolb
pop
test
dec
or
lret
and
rol
pop
push
xchg
xchg
test
outsl
and
fdivrp
es
jle
xchg
adc
sub
ret
dec
add
shl
sub
aad
xchg
push
repz
js
mov
dec
outsb
and
out
fisubrl
inc
loop
cmp
dec
outsb
sub
loope
mov
adc
aad
ret
jo
imul
stos
les
add
sub
mov
dec
cmpsl
mov
bound
push
shl
inc
mov
pop
and
jb
xchg
jns
push
adc
and
sub
dec
lret
das
cmp
lds
pop
shl
dec
call
in
lods
icebp
pushf
lock
int3
xchg
dec
cmp
lds
cltd
cwtl
ret
mov
pop
repnz
ret
dec
es
pushf
and
loope
xchg
bound
inc
inc
je
add
enter
jl
loop
inc
xchg
lods
or
add
xor
and
data16
sbb
push
xchg
add
sbb
shl
mov
xor
pusha
mov
pushf
xlat
pop
cmp
adc
sub
imul
xchg
mov
xchg
adc
sub
test
inc
loop
cmc
out
ss
adc
cmp
aas
mov
and
les
sbb
mov
jecxz
cwtl
xchg
hlt
or
hlt
xchg
or
or
add
sbb
add
mov
imul
lods
push
rclb
shll
bound
dec
pusha
je
pushf
pushl
cmp
jmp
push
xchg
je
dec
mov
push
jb
pop
dec
mov
xor
test
iret
xchg
push
inc
and
xor
jg
imul
push
repnz
test
movsb
out
inc
jo
testb
add
add
add
not
rcrl
mov
and
jmp
rolw
loopne
xchg
cmp
enter
sub
xchg
int3
out
imul
int3
xchg
rolb
imul
xchg
xor
pop
mov
mov
test
pusha
mov
roll
jne
and
and
dec
push
push
mov
or
add
and
mov
pop
adc
inc
mov
pop
mov
push
mov
in
sbb
push
adc
insl
orl
push
movsl
mov
cmp
ljmp
jl
cs
loope
in
jbe
xor
add
stos
shlb
push
adc
sub
xor
rolb
mov
and
cmp
mov
mov
shll
cs
or
pop
pushf
mov
mov
mov
mov
push
in
inc
sbb
iret
fmull
mov
mov
es
mov
cld
or
and
xchg
inc
and
out
aaa
das
xchg
movsl
push
or
les
arpl
mov
adc
push
dec
stos
jle
push
aaa
pushf
add
sbb
popf
leave
xor
cmp
inc
push
jle
sbb
mov
repnz
and
cmpsl
mov
lock
ret
in
pop
xlat
icebp
out
or
xchg
dec
pop
cmp
dec
stos
mov
scas
push
sbb
test
mov
jb
xchg
push
iret
dec
xor
push
pop
inc
xor
loopne
sub
cmp
mov
xor
mov
sahf
sub
dec
mov
inc
and
add
add
sbb
adc
frstor
inc
xor
xor
push
imul
add
cltd
jb
ja
mov
jl
inc
inc
jp
es
jb
or
push
leave
xor
movsl
test
stos
dec
inc
out
cltd
pushf
adc
dec
inc
sbb
popa
xchg
xor
subl
or
jne
ret
lods
and
and
pop
jge
ljmp
cmp
sarl
or
mov
addr16
mov
sahf
jbe
jle
mov
mov
les
shlb
sub
lea
sub
adc
shl
jne
adc
and
and
stc
xor
popf
pop
bound
and
pop
add
push
xchg
or
jbe
lods
push
sbb
call
in
xchg
std
dec
std
std
xor
adc
test
iret
sub
or
push
js
cmp
test
rcrb
pop
das
mov
add
lret
pop
push
in
outsb
pmullw
sub
push
or
insb
mov
xor
repz
loop
xchg
ss
je
fdivp
mov
pop
mov
ret
clc
mov
inc
inc
xor
mov
sarb
lret
sub
sub
cmpsl
mov
or
pop
in
sbb
sub
js
idiv
add
iret
jns
and
rclb
xor
test
inc
cmpsl
add
loopne
dec
int
adc
or
in
enter
add
push
enter
repnz
fistps
fisttpl
sub
int3
sbb
fs
and
xchg
scas
xchg
mov
push
iret
pop
add
mov
in
and
das
popa
loop
xchg
fidivl
test
and
mov
xor
in
lods
test
clc
inc
cwtl
cli
mov
and
mov
push
sbb
dec
xchg
sbb
into
fcompl
adc
add
adc
adc
nop
inc
inc
dec
adc
es
push
jno
and
and
out
push
inc
jae
xor
and
cmp
inc
ret
xor
pop
add
add
sahf
call
push
xor
and
cmp
pop
fs
or
mov
fistps
ret
orb
jl
imul
lahf
add
adc
stc
int
subb
inc
fimuls
adc
mov
sub
out
push
fwait
and
inc
lea
lods
subb
ret
jmp
sbb
leave
int
push
add
inc
mov
and
or
lods
lock
lcall
mov
dec
or
sub
test
xchg
adc
push
lods
insb
dec
sub
pop
or
inc
and
aad
lods
pushf
jp
in
adc
mov
inc
stc
xor
popf
test
test
add
movsl
pop
es
xchg
outsl
lock
inc
scas
aaa
cli
xchg
sti
cmovb
pop
mov
mov
enter
mov
jb
adc
pcmpeqw
pop
dec
cmp
push
mov
or
lret
dec
lods
inc
lcall
inc
lock
cmp
scas
adc
jmp
roll
push
pop
ss
sbb
mov
cmc
jne
inc
int
or
leave
mov
arpl
test
sbb
pop
mov
pop
adc
cmp
push
mov
stc
in
add
add
jle
adc
int3
xlat
ljmp
pop
xor
pop
mov
into
mov
push
jbe
mov
jo
push
dec
xor
insb
add
sarb
or
push
ja
andl
cmp
and
mov
adc
mov
cmp
les
inc
ret
clc
aam
sbb
xchg
lds
fwait
or
ret
add
pop
aad
rcl
sbb
mov
inc
adc
add
das
rorl
fists
roll
mov
mov
xor
and
cli
cmp
push
xchg
fildl
mov
mov
sub
and
shlb
xchg
pop
lahf
les
mov
adc
and
mov
dec
dec
mov
test
test
js
and
shlb
jns
xchg
je
and
inc
mov
lea
subb
xor
xchg
pushf
or
add
cmpsl
xchg
mov
cltd
push
hlt
subb
xlat
push
jns
out
bound
lds
in
sub
or
mov
call
shll
jmp
out
cmp
xchg
mov
pop
outsb
sub
sub
shll
or
popf
adc
xchg
inc
ds
pop
adc
insl
fildll
xchg
or
mov
dec
lea
addr16
test
js
pop
mov
mov
and
dec
repz
popa
and
pop
inc
dec
loope
in
nop
aaa
cmp
and
xchg
test
lods
jno
das
inc
gs
cmpsb
xor
or
push
pop
and
or
pop
pop
xlat
xor
mov
jno
add
insb
push
cmp
outsl
cmc
push
data16
scas
mov
xchg
aaa
jp
add
mov
inc
lock
adc
or
hlt
jp
sahf
les
rolb
mov
xchg
or
or
push
inc
daa
insl
test
idivb
push
js
scas
sahf
push
add
dec
and
or
push
adc
or
sub
pop
xchg
fst
inc
lret
sub
or
xchg
pop
jl
dec
loopne
dec
jb
out
es
or
inc
mov
fstpt
push
bound
jmp
xchg
jle
jmp
jecxz
xchg
or
lods
aam
inc
bound
push
xchg
jle
fs
cmp
mov
lea
pop
in
mov
pop
add
push
std
call
pop
shrl
fs
out
daa
cmp
inc
add
mov
or
sub
mov
adc
cmp
testl
xor
adc
mov
push
mov
cmp
mov
pop
pop
jne
xchg
and
push
ret
imul
sbb
nop
test
scas
nop
mov
lds
in
arpl
loopne
xchg
rcr
loop
lahf
in
push
or
lret
pop
lret
add
adc
inc
add
pop
aas
loopne
sbb
loope
test
xlat
mov
adc
gs
push
out
push
stc
jle
stos
cmpsl
lock
cwtl
les
mov
push
into
push
inc
jecxz
out
popf
mov
loopne
lret
adc
push
popf
jno
mov
fs
call
push
popa
aaa
test
add
add
mov
insl
ja
mov
push
daa
cmp
sbb
lea
test
jno
test
lahf
test
testb
adc
mov
mov
ret
pop
xchg
pop
cmp
out
xchg
push
rol
scas
adcl
push
adcl
lods
push
addl
std
mov
jne
or
mov
dec
adc
cs
insb
mov
add
stos
or
adc
cmp
jmp
sarb
push
lds
or
push
dec
jmp
push
int
jmp
push
push
iret
shl
nop
jle
cmp
add
push
out
in
cli
in
pop
rcrl
push
jno
jg
dec
or
pop
add
cmp
add
push
rorl
sbb
out
or
push
jne
daa
leave
mov
fcompl
jo
ret
lcall
into
xor
gs
ja
lods
jecxz
enter
mov
cmpb
or
push
or
jl
mov
std
jle
shl
xor
inc
imul
sub
push
fwait
jne
dec
xchg
ljmp
xorb
or
inc
cmp
popa
dec
sbb
addl
negb
fmull
movsb
sub
or
jle
xlat
jp
xchg
shll
test
xor
and
dec
push
sahf
fs
pop
mov
push
push
or
pop
cmp
frstor
xchg
lcall
lcall
dec
stos
or
and
shlb
leave
stos
loope
xor
cmp
dec
dec
aam
pop
in
rorb
roll
addb
add
mov
lock
popf
add
in
ja
mov
push
lods
xor
push
push
push
fildl
sub
sbb
mov
and
fwait
sbb
movsl
pop
outsb
lock
mov
mov
dec
repnz
mov
xchg
outsl
dec
iret
push
aam
push
jge
idivl
inc
jle
ja
pop
scas
shll
movsl
cmc
cmp
sub
sahf
aad
cwtl
popa
in
out
ljmp
pusha
jne
insl
fisttps
pop
adc
mov
int3
sbb
inc
cmp
or
pop
sub
xchg
and
cmp
lods
pop
mov
in
icebp
jo
cmp
adcl
push
imul
push
sysret
pushf
cmp
or
pop
pop
ret
pop
mov
inc
out
sbb
and
jne
mov
xor
or
jbe
ficoml
mov
sbbl
aam
sub
xchg
jge
sub
inc
repnz
lret
and
push
cmp
sub
test
xor
jecxz
add
inc
add
or
mov
imul
xor
mov
inc
pop
cmp
mov
loop
sti
fsubs
mov
hlt
cmpsl
cmp
enter
test
dec
aam
std
out
outsl
mov
and
jp
xor
adc
clc
and
repnz
out
dec
push
add
adc
fbstp
clc
int
and
mov
mov
xor
in
pop
arpl
out
xor
or
mulb
cwtl
mov
push
es
jmp
dec
fsubrs
test
test
fwait
push
in
mov
mov
addr16
xchg
mov
stc
icebp
int3
pushf
mov
mov
or
movsl
and
pop
adc
sbb
and
mov
push
jb
test
repz
adc
fcmovb
dec
mov
int3
mov
ljmp
adc
push
aad
mov
or
out
fwait
insb
inc
rcrl
jne
aad
daa
pushf
mov
fdivr
aas
loope
in
jo
inc
jmp
mov
adc
xchg
std
push
xchg
fstpl
inc
or
and
imul
or
xor
imul
mov
lea
mov
push
aam
arpl
lods
test
jb
or
loopnew
in
repz
ficomps
sbb
mov
les
loope
sub
inc
push
adc
mov
in
inc
fldl
mov
push
mov
jle
and
lock
push
jl
pop
divb
popa
push
pop
xchg
push
fsubrl
rcrb
fldt
push
xor
inc
in
pop
cmp
sbb
sbb
dec
pop
xor
cs
jl
lods
pushf
pop
inc
outsb
inc
lret
test
xor
push
adc
push
sahf
add
jae
lds
push
adc
jo
lods
ss
push
shll
adc
mov
jne
lea
dec
push
push
jp
sub
ret
mov
bound
ret
sub
loope
and
pop
pop
scas
aas
jmp
cmp
sbb
mov
shll
mov
xchg
xor
icebp
or
mov
adc
push
addr16
into
ret
clc
push
mov
rolb
ret
lods
roll
call
and
and
movsb
loope
gs
scas
icebp
loop
xlat
fnstenv
or
inc
mov
and
stos
cwtl
stos
lods
nop
sbbl
jns
or
adcb
std
jno
sub
jmp
loope
or
mov
pop
cmpsl
push
std
cmp
imul
pop
xchg
mov
in
and
and
lock
mov
cmp
cmp
loop
dec
ja
fisttpll
in
add
hlt
fidivrs
xchg
outsl
shl
rol
movsl
sbb
mov
jb
ror
xchg
leave
iret
ret
push
mov
pop
clc
dec
mov
xchg
mov
in
in
andb
loope
sbb
pushf
pop
fs
xor
adc
mov
xchg
iret
mov
inc
test
push
xchg
inc
mulb
dec
mov
inc
pop
in
sbb
push
inc
mov
mov
cmp
xchg
into
shlb
loop
std
xor
int3
and
sub
push
dec
or
nop
pop
sahf
call
inc
insl
icebp
xchg
in
dec
int3
jg
sbb
mov
popa
push
hlt
xor
std
add
pop
dec
jl
negl
xchg
mov
inc
jecxz
xchg
sub
xchg
push
in
push
cltd
mov
movsb
cmpsb
add
inc
cld
pop
mov
stc
pushf
cmp
sub
cli
dec
sub
jge
inc
push
mov
jl
js
dec
push
les
add
rcll
or
add
pop
or
out
and
stc
add
scas
ffree
sbb
movsb
sbb
mov
pusha
daa
lretw
or
in
push
lods
enter
jle
sub
and
sbb
add
adc
into
sbb
xchg
xor
rorl
pop
mov
or
push
and
roll
and
pop
test
mov
aaa
jne
in
loope
cs
sti
cmp
mov
mov
aam
lea
andb
sub
and
dec
mov
pop
sbb
ljmp
inc
lds
push
adc
push
fsubrs
aas
scas
push
pop
xchg
and
movsb
sub
dec
dec
push
gs
daa
xchg
lret
mov
inc
loop
jne
xor
push
sub
pusha
mov
addl
loope
push
push
and
icebp
or
add
faddp
sub
inc
fldt
adc
jl
iret
inc
mov
dec
scas
mov
or
jle
sbb
cmp
pop
int3
push
inc
jno
mov
dec
in
xor
or
mov
xor
xor
sub
rcrl
out
rcl
mov
inc
cmp
sbbl
sarl
sbb
movsl
push
cmpsb
pop
dec
test
mov
or
or
adc
sbb
popa
pop
cmp
icebp
xchg
add
mov
ja
dec
cmp
inc
mov
inc
loopne
push
mov
mov
push
in
inc
mov
pop
pop
mov
das
xchg
gs
sbb
pop
ret
or
iret
xor
jmp
lcall
and
jns
cmc
and
cwtl
movntps
scas
adcb
aad
imul
leave
or
in
lock
dec
sbb
and
xor
sbb
mov
inc
std
dec
addb
or
inc
jbe
mov
test
pop
cli
add
xchg
push
xlat
xchg
andb
icebp
jne
subb
inc
imul
sbb
cmpb
imul
clc
ret
lret
and
xchg
xchg
iret
popa
cmpsb
jp
mov
or
loopne
push
testl
cs
fisubrl
flds
faddl
mov
jb
pop
xor
mov
sbb
pushf
imul
jl
cmp
xorl
pop
lret
xchg
arpl
push
divb
bound
fcomps
je
sub
jbe
sub
xchg
or
clc
scas
lret
dec
sbb
test
push
or
cmpsb
test
jns
gs
leave
mov
xchg
jge
jb
push
sbb
push
push
or
dec
or
xchg
pop
pop
sub
or
loope
sub
push
mov
stc
fs
cli
push
sbb
add
jmp
lcall
xchg
jne
ret
icebp
femms
popf
lcall
cmp
push
aas
sarb
out
or
add
xchg
adc
mov
or
adc
fadds
js
push
loopne
pusha
sbb
pushf
rcll
pusha
in
stos
lds
xor
ret
xchg
sarl
add
push
addr16
test
lret
adc
sub
imul
push
movsb
add
push
inc
cmpsl
sahf
fdivrl
adc
pop
mov
cwtl
jle
jno
mov
cli
cmp
cmp
fs
ret
fcmovnbe
cmp
xlat
pushf
mov
and
into
out
loop
xchg
xchg
cwtl
cld
rclb
pusha
enter
sbb
mov
fldl
xchg
push
mov
mov
inc
mov
rcl
repnz
test
mov
add
pop
sub
sbb
mov
shl
pop
lods
push
icebp
popa
out
xchg
pushf
pop
push
inc
cltd
test
repnz
ljmp
in
fldenv
mov
dec
sub
sbb
sbb
sbbb
bound
lret
push
pop
aas
push
scas
int3
or
pusha
pop
test
sub
imul
adc
loopne
cmp
jo
aam
sbb
sub
stos
mov
xor
sub
cmp
mov
test
or
sti
cmp
inc
adc
ss
data16
xor
dec
in
jg
test
adc
dec
inc
test
fcmovne
test
repnz
jmp
xchg
cmp
lock
mov
gs
shr
pop
pop
cmpsl
fsubrs
adc
addr16
rcrb
fsts
xchg
pop
adc
mov
adc
icebp
das
push
invd
sbb
mov
gs
inc
mov
divb
xor
xor
mov
adc
jns
adc
pop
sbb
aad
test
or
es
or
adc
in
add
in
or
dec
ret
cli
scas
dec
mov
sbb
daa
flds
cmp
sbb
cmp
lods
mov
mov
xchg
or
popa
jns
adc
push
invd
sbbl
add
push
xchg
cmp
xor
loop
iret
xor
mov
fdivrs
pop
cmp
adc
xorb
les
sub
ret
jae
xchg
xchg
fnstcw
fldl
test
inc
jnp
fiadds
repnz
das
and
cwtl
mov
inc
sbb
mov
and
mov
xor
aas
sbb
xchg
adc
inc
xor
add
pop
addr16
adc
inc
addl
or
adc
inc
ficoml
pop
or
inc
fsubrs
dec
adc
fldl
adc
imul
jnp
mov
inc
lea
sbb
lods
xor
and
push
push
jge
and
push
insl
xchg
pop
lcall
cs
nop
inc
in
pusha
inc
mov
or
imul
add
dec
in
std
push
rcl
jbe
jl
xchg
adc
and
and
test
sbb
xor
imul
mov
bound
inc
xchg
sub
xor
nop
pop
mov
int
cs
cmc
clc
popa
ret
lock
subb
adc
mov
sub
in
sbb
cs
mov
std
xchg
out
push
imul
repz
xchg
jl
sbb
les
je
insb
cwtl
repz
push
jg
adcl
js
mov
mov
pushf
jg
test
les
loop
jne
enter
ljmp
sub
sbb
mov
scas
inc
lahf
test
pushf
mov
aas
loopne
fiaddl
pop
mov
lea
and
mov
mov
jne
loop
pop
ja
mov
test
mov
mov
orl
mov
fists
sub
inc
fadd
in
stc
fs
push
mov
into
push
gs
cmpl
sarl
popa
lods
mov
loop
jl
in
cli
ret
jbe
leave
les
addr16
mov
lock
aaa
addb
sub
enter
inc
ja
faddl
add
nop
cmp
clc
mov
into
icebp
xor
sub
pop
imul
stos
push
lea
inc
push
cmp
sbbl
dec
mov
mov
mov
and
mov
mov
ret
sbb
pop
cmp
adc
addl
divl
loop
scas
or
js
bound
lock
xor
dec
pusha
mov
lock
iret
add
pop
mov
sti
lret
fdivl
mov
nop
mov
inc
mov
push
adc
sub
jnp
aaa
add
out
inc
mov
js
arpl
enter
pop
enter
les
adc
testl
xchg
pop
sbb
setp
stos
push
shlb
pop
lods
sbb
mov
shll
inc
adc
jbe
imul
lret
cmpl
aaa
mov
rorb
sub
outsl
inc
imul
mov
movsl
in
mov
mov
ljmp
ret
cmc
sbb
test
int
nop
scas
loopne
cmc
mov
pop
pop
jecxz
es
cmp
iret
mov
jae
jns
jb
pop
faddl
mov
jns
aas
mov
fnstenv
pcmpeqb
adc
add
mov
cmp
add
push
cmp
jns
dec
ljmp
adc
inc
movsb
push
inc
add
and
mov
mov
cs
and
js
popa
lods
xchg
or
pop
xor
mov
sbb
jle
or
lea
jecxz
cmp
loopne
fildll
mov
push
cmpsl
inc
stos
xchg
jbe
into
lcall
ret
xchg
sub
lods
xor
xchg
loope
pop
sbbb
push
sub
mov
aam
push
lods
jecxz
lock
inc
sub
mov
notb
std
sbb
test
sbb
jmp
adc
dec
pop
adc
out
adc
leave
fcmovnu
clc
addl
fs
ret
add
sbb
add
mov
jb
int3
les
enter
daa
mov
popf
neg
ss
lret
and
mov
xchg
dec
add
lcall
stc
cmpl
ss
add
nop
mov
mov
addr16
fs
sub
inc
loop
int
out
lods
mov
push
and
xchg
sti
icebp
push
and
adc
rcrb
push
xchg
cmp
aam
shr
stos
lahf
lea
iret
clc
insl
xor
inc
subl
push
xlat
or
or
add
lret
or
test
or
stos
cmc
jge
push
stos
add
inc
jg
mov
mov
xchg
push
stos
jecxz
pop
sbb
xchg
sbb
push
dec
sub
aaa
pop
cmp
and
cmp
movsl
mov
addr16
mov
jo
lret
ret
mov
arpl
and
pop
pop
add
ljmp
mov
mov
pop
and
icebp
fnstenv
out
add
icebp
mov
xchg
jp
mov
js
addb
iret
pop
pop
lret
add
mov
xchg
add
lcall
into
sbb
inc
test
mov
rorl
jge
arpl
andl
xor
out
xchg
scas
push
lock
dec
adc
sbb
test
mov
add
addl
mov
and
fwait
daa
add
jmp
add
inc
or
mov
ja
push
and
icebp
iret
ja
sub
test
stos
xchg
jnp
or
fwait
lcall
sub
out
movsl
sub
fsubl
ss
mov
add
stc
cmc
dec
jp
xor
cmpl
mov
cmp
shrl
decl
add
fadds
mov
sbb
icebp
ret
or
or
sub
sub
pop
jbe
jno,pn
mov
ja
xor
cmpsl
cs
test
sbb
js
icebp
repz
pextrw
bswap
pop
xor
xchg
fidivrs
jl,pt
aas
adc
icebp
lret
inc
std
addr16
cwtl
loopne
bnd
movsb
imul
jae
call
inc
divb
mov
mov
outsb
sub
lock
inc
inc
jno
cmpps
pop
test
bound
gs
push
aaa
lock
pop
loope
cmp
fwait
leave
clc
mov
adc
dec
js
in
xchg
cmp
jno
jne
cmp
adc
and
inc
add
pop
mov
and
test
stos
int3
mov
out
arpl
lods
push
pop
sbb
jmp
xlat
adc
pusha
push
lods
push
arpl
and
mov
test
clc
fsubrs
pop
lods
enter
lea
sbb
cwtl
lcall
movsl
je
test
inc
mov
dec
gs
or
cltd
lahf
idivb
jne
mov
mov
pop
mov
and
test
lods
sahf
ds
and
dec
xor
add
mov
cmp
inc
rcr
repnz
mov
fmuls
sub
lock
stc
inc
jbe
xor
push
in
in
sbb
cmp
mov
dec
ret
jne
pop
test
jmp
dec
pop
aam
pop
stos
add
inc
bound
push
inc
jne
test
add
xor
lods
mov
popa
arpl
mov
mov
sub
pop
or
imulb
icebp
lock
js
sub
mov
ljmp
arpl
mov
mov
push
sti
out
test
shll
sub
popa
fwait
or
push
adc
cmp
mov
or
pop
and
jns
pushf
xor
jecxz
cmc
jbe
loopne
fnsave
insb
or
sub
pop
lds
icebp
mov
jle
mov
push
or
pop
stos
jp
mov
and
cmp
out
ss
mov
and
gs
inc
in
nop
pop
scas
or
movsl
mov
addl
mov
push
dec
fldcw
ss
bound
fucomip
or
test
fcoml
jg
shrd
jl
jo
dec
loop
nop
cmp
insl
mov
imul
add
das
stos
divl
pop
xlat
leave
inc
mov
sbb
in
dec
add
cmp
adc
mov
lcall
stc
xor
pop
das
in
jg
pop
addr16
jmp
or
cltd
or
inc
out
pop
aas
or
adc
push
cmp
and
adc
cmp
push
icebp
mov
outsb
dec
ror
add
add
mov
jb
jecxz
jecxz
mov
movups
aaa
add
sub
loope
dec
add
enter
sbb
adc
jmp
and
xchg
aad
pop
in
mov
jmp
dec
lock
pop
mov
inc
pop
mov
icebp
lods
pop
push
loopne
mov
xchg
adc
dec
int3
sub
inc
pop
ror
or
je
and
push
mov
sub
pop
lock
in
push
loopne
mov
push
cld
iret
jne
xor
enter
push
mov
lods
popf
int3
jecxz
push
sbb
inc
shrl
imul
jmp
lret
shrb
iret
lret
stos
mov
les
xor
and
and
iret
je
in
icebp
inc
lahf
loope
xchg
cmp
dec
jns
out
ljmp
outsb
push
aaa
xchg
push
sbb
sub
cmp
add
pop
push
or
mov
stos
stc
xor
ret
inc
jae
inc
and
push
loopne
inc
mov
nop
into
mov
fcoml
stos
jno
jnp
or
int
js
movsb
jmp
jecxz
cmpsb
testl
mov
inc
adc
mov
aas
add
inc
inc
cs
fsubs
test
imul
or
sub
inc
and
add
fiaddl
shrb
add
sub
pop
mov
sbb
hlt
or
and
xor
cmp
jb
cltd
or
inc
mov
inc
inc
nop
imul
loope
inc
outsl
mov
jle
adc
cltd
xchg
adc
add
pop
push
jo
movsl
scas
push
inc
out
sti
das
and
inc
test
adc
lock
out
outsb
arpl
shrl
mov
movsl
ds
int
rolb
imul
mov
xor
or
push
push
jo
cmp
adc
mov
jmp
enter
cmpsl
adcl
ds
hlt
mov
mov
repz
dec
jg
ja
int3
or
push
mov
sub
mov
sar
xchg
xchg
pop
and
icebp
jb
pop
mov
add
divl
push
sub
sub
mov
add
lds
aas
or
dec
mov
fisubl
or
call
push
dec
imul
fucom
or
adc
test
pop
gs
ror
push
rorl
ret
mov
in
push
imul
dec
and
adc
mov
xchg
sbb
push
jge
push
ja
arpl
dec
nop
clc
sub
pop
xor
insb
popa
mov
or
mov
and
sub
lds
and
das
das
and
enter
aas
ds
cmp
dec
jge
mov
sbb
add
arpl
and
out
pop
bound
shl
sbb
and
or
and
mov
hlt
adc
ss
and
and
xchg
sbb
or
lcall
push
and
adc
scas
mov
imul
test
ljmp
mov
pop
and
mov
sub
push
xor
call
rclb
mov
dec
imulb
and
mov
jmp
jbe
xor
ret
repnz
filds
in
dec
imul
in
stc
mov
or
push
sub
addl
out
lret
sbb
pop
sub
sub
push
out
jg
add
inc
inc
lret
dec
orl
stos
insb
movswl
ja
cwtl
call
shlb
in
pop
dec
adc
pop
and
sub
clc
fnsave
xchg
repz
push
inc
int3
pop
cld
add
in
cld
pushf
bound
or
push
sub
adc
cmp
add
and
push
add
movsl
pop
pop
subl
cmp
xorb
mov
sub
decl
or
or
sub
dec
mov
dec
js
out
test
xor
fwait
jbe
bound
sub
cli
int3
push
cmp
clc
idivb
lock
mov
jo
xchg
inc
insb
pop
add
decb
sbb
repz
mov
or
xor
repnz
mov
aaa
jle
sbb
ds
movsw
xchg
or
arpl
cmp
jmp
hlt
fiadds
inc
les
mov
inc
ret
cmp
sub
out
xchg
xchg
dec
lods
pop
xchg
pop
mov
xchg
dec
mov
adc
mull
movsb
adc
lds
xor
push
adcb
out
loop
popf
dec
inc
mov
adc
addps
sbb
mov
ja
mov
into
cli
sti
aad
mov
pop
in
ds
cmp
cli
xchg
int
adc
pop
mov
xchg
push
add
mov
rol
iret
nop
or
xor
pop
imul
js
cmp
xor
sti
mov
pop
insb
xor
flds
add
or
xchg
xchg
or
enter
push
popl
icebp
pop
popf
les
xchg
pusha
mov
push
out
test
xchg
xchg
mov
outsb
mov
sub
jae
push
fisttpll
les
or
sahf
push
mov
dec
mov
lods
pusha
pop
inc
stc
ret
sti
bound
xchg
aam
and
inc
mov
xor
cmc
push
pusha
loopne
fsts
push
mov
xchg
movsl
ljmp
adc
imul
lahf
adc
je
mov
xchg
or
ljmp
les
subb
xchg
test
psllw
or
ds
and
ljmp
adc
hlt
dec
outsl
inc
push
mov
inc
push
mov
jge
adc
imul
insl
pusha
push
hlt
shrb
or
adc
pop
popf
mov
inc
insl
mov
hlt
add
mov
sbb
xor
enter
lods
inc
jp
sti
or
cmp
or
and
mov
xorb
cmp
sbb
dec
push
test
jne
or
out
test
mov
enter
subb
push
dec
aas
lret
fidivl
sbb
xchg
in
pop
scas
xchg
imul
pusha
repnz
xlat
rorb
ja
lcall
sbb
add
inc
push
repz
mov
adc
ret
stos
gs
jp
xchg
or
loopne
sbb
cmp
xchg
les
mov
sub
push
jns
inc
mov
call
inc
les
push
and
aam
xchg
pop
mov
ret
or
stos
sbb
xchg
sub
jge
sbb
cmp
sbb
movlps
jmp
cmp
cmpl
inc
mov
pop
sbb
mov
cwtl
dec
and
lods
mov
jnp
push
fldl
mov
and
je
pushw
pop
or
stos
lods
jecxz
push
movsl
repz
and
into
fmuls
les
mov
mov
inc
inc
movsl
dec
or
mov
mov
cld
sbb
push
mov
push
mov
test
lock
stc
addb
dec
mov
lock
sub
repz
xchg
add
test
add
xor
lock
mov
pop
pop
loop
pushf
jmp
dec
push
out
mov
sarb
push
cmp
mov
arpl
mov
fistpll
repnz
inc
loope
inc
lods
and
jg
mov
push
mov
mov
push
push
stc
mov
xchg
leave
push
add
std
mov
sti
nop
xor
mov
test
inc
ss
or
jne
mov
xchg
xchg
in
and
add
add
loop
les
adc
and
repnz
es
loope
cs
xchg
rol
mov
pop
mov
and
ljmp
mov
in
xchg
loopne
xor
xlat
sbb
pop
pushf
inc
std
dec
mov
sub
fdivrs
mov
into
imul
or
lock
cmpsl
add
js
inc
leave
pop
or
xor
sbb
sub
insb
jl
insl
xor
xchg
sbb
in
mov
adc
lcall
adc
jb
mov
nop
popf
xchg
cmp
push
loope
xchg
sub
icebp
mov
mov
jnp
xor
and
adcb
push
outsb
out
jnp
cmovle
clc
pop
mov
in
aam
adc
xorb
sub
int
mov
sbb
vorps
dec
lea
push
enter
and
and
rcrl
int3
or
stc
jl
or
add
fwait
sbb
and
xor
pop
nop
mov
fs
aaa
adc
xchg
sub
inc
movsl
insb
cmpb
inc
andl
push
cmp
xor
sarl
add
or
push
psubusw
jbe
inc
mov
jns
push
inc
ret
adc
mov
sub
xchg
jmp
mov
push
and
sbb
cmp
mov
repnz
sbb
and
and
cmp
mov
pop
push
adc
push
and
jg
cmp
dec
fisttpl
sbb
lods
rol
jp
loope
sbb
insb
sub
mov
jnp
bound
sahf
popa
loope
les
dec
xor
mov
jns
mov
xchg
aad
call
sbb
and
jne
add
jmp
pop
mov
js
inc
xor
sub
lods
addb
repz
rolb
xor
and
mov
jecxz
bound
mov
bound
or
out
add
ljmp
test
mov
iret
popf
hlt
xchg
and
loope
add
ret
xchg
mov
loop
aam
inc
dec
aaa
adc
or
xor
adc
out
push
dec
pop
mov
sarb
popf
xchg
test
bound
aam
xchg
push
arpl
mov
sbb
sbb
ja
mov
jl
cmp
jne
xchg
lock
sahf
add
scas
sbb
aad
dec
ds
cmp
dec
jecxz
ror
in
jno
into
mov
sbb
add
fldt
inc
jne
jo
pushf
pop
sub
push
jp
fcom
jmp
push
mov
repnz
psrad
in
fcoms
repnz
pop
or
movsb
xchg
mov
mov
rolb
pop
inc
push
add
xchg
repz
cli
jecxz
notb
mov
lods
aas
rolb
and
ficompl
pop
pop
dec
movsb
jbe
mov
sbb
gs
or
addb
sahf
and
cmp
les
mov
fistpl
mov
jae
jmp
adc
idiv
push
xlat
xchg
cwtl
xchg
mov
int3
js
mov
xor
fwait
xchg
or
sub
dec
or
mov
push
sub
and
adc
mov
jbe
adc
and
cmp
into
mov
jecxz
pop
sbb
mov
inc
scas
sbb
aas
and
jnp
add
movsb
dec
adc
push
adc
outsl
sti
jmp
xor
gs
mov
mov
stos
jns
mov
push
mov
mov
loopne
jp
push
pusha
xlat
inc
in
mov
fsubl
xchg
es
pop
sbb
mov
or
pusha
xchg
mov
enter
sbb
push
les
js
das
adc
push
out
imul
out
add
in
popf
in
jnp
mov
mov
or
xchg
mov
jbe
and
mov
cmp
flds
ja
cmp
jg
sbb
int3
push
inc
mov
mov
int
fcoml
movsl
in
testb
cmp
mov
ret
das
pop
sbb
sub
sbb
xlat
jp
cltd
dec
fstpt
xchg
andb
je
fdivp
loopne
sbb
jl
es
sbb
outsl
data16
add
push
sarl
push
and
add
les
jb
hlt
and
out
push
pop
mov
fldcw
sbb
xchg
stos
add
sub
addr16
mov
mov
pop
insb
cld
mov
push
dec
sbb
add
adc
int3
and
repz
pop
loope
push
scas
loopne
in
sarl
push
cmpsl
sub
jge
adc
jl
cmp
push
cwtl
jo
sbb
js
mov
mov
outsb
pop
test
icebp
sbb
mov
dec
mov
ljmp
or
sub
loopne
test
in
adc
push
and
pop
clc
stos
inc
mov
mov
sbb
push
adc
jmp
pop
add
ret
sbb
lock
pop
sti
inc
js
inc
es
push
stos
sahf
xlat
mov
movups
lock
outsl
xorb
adc
push
or
xor
das
mov
loop
sbb
std
hlt
push
mov
sti
mov
jno
or
sbb
loopne
jecxz
push
sbb
pop
nop
pushf
les
sbb
push
movsl
lods
pop
in
pop
out
xchg
out
or
inc
imul
in
arpl
jnp
mov
popa
mov
sbb
inc
adc
add
les
addr16
inc
sahf
cmc
dec
lcall
loopne
push
out
mov
mov
leave
add
clc
test
add
lret
rcrl
adc
lock
and
loop
dec
or
cmpb
jbe
pop
shl
js
sub
sub
sbb
and
inc
push
xchg
jecxz
mov
pop
cmpsl
gs
pushf
je
mov
sbb
adc
int
sbb
enter
and
loope
ljmp
sbb
iret
cmpsb
out
mov
inc
scas
clc
mov
cmc
ret
iret
stos
movsl
mov
cmp
fs
cmpsl
popf
sub
scas
scas
dec
adc
pop
mov
jae
adc
icebp
xchg
push
out
das
xchg
test
lock
out
cmp
or
mov
push
aad
or
gs
lea
mov
les
push
mov
icebp
sub
ja
push
orb
jb
sbb
fidivrs
in
and
fucomip
out
or
divb
and
push
jbe
xchg
xor
sub
adc
push
pusha
lock
push
mov
subl
popa
mov
cltd
xchg
stos
loope
stos
mov
shlb
sbb
fdivl
rcl
adc
or
add
sub
rolb
mov
or
lea
movsl
notl
scas
int
iret
xchg
add
xlat
stos
inc
or
aam
jmp
les
repz
mov
cvtdq2ps
repz
sub
aam
push
xchg
js
addb
inc
cmp
jmp
or
jecxz
xor
enter
popf
pop
dec
or
jg
cmp
mov
rolb
pop
cs
hlt
lcall
mov
mov
inc
push
fisttps
popa
push
insb
jecxz
sub
les
fldl
and
addr16
sbb
mov
sbb
neg
rol
test
mov
shr
in
test
lds
subl
call
mov
mov
dec
movups
or
push
and
sub
rcrb
xchg
cmp
sub
xchg
xor
inc
sbbl
das
in
pushf
lds
jg
imul
or
push
rorl
aaa
ret
pop
movb
xchg
sahf
xchg
inc
pushf
das
push
xchg
cltd
std
int3
repz
mov
cmp
xchg
mov
jge
add
xor
sti
rolb
jge
add
add
cli
mov
stos
orl
or
inc
fsubrs
movsb
in
cli
es
xchg
test
imul
arpl
mov
pop
push
add
xchg
pop
cvtps2pi
fs
mov
clts
ja
cmc
ja
mov
xchg
xchg
xor
loop
enter
sahf
fcoms
jb
push
or
daa
sbb
test
sub
fnstenv
out
mov
mov
push
mov
andl
mov
mov
out
jbe
aam
mov
imul
mov
xchg
inc
sbb
mov
adc
xor
sub
es
lret
mov
bnd
out
dec
inc
mov
in
sbb
andb
dec
pusha
add
sti
cltd
je
pop
xor
cmpl
and
or
shlb
and
push
mov
xchg
insb
xchg
stos
jbe
cmpsl
addl
lcall
enter
or
inc
mov
stos
aaa
sbb
cmp
test
inc
adc
lods
test
or
mov
addl
pop
mov
add
sub
stos
aaa
out
dec
xchg
lret
add
test
dec
sbb
and
xor
or
pop
lea
sub
cmp
cltd
or
sahf
pop
lock
xorb
rcll
pop
fadds
push
les
shlb
arpl
mov
filds
or
icebp
addr16
cmp
into
ret
daa
push
xchg
ja
idivl
out
pusha
es
mov
cs
call
call
hlt
xlat
xor
dec
lock
xor
sbb
mov
xchg
in
dec
push
mov
mov
xchg
sbb
clc
sarb
outsl
inc
popa
sbb
int3
pop
lahf
les
pop
and
mov
adc
scas
push
dec
add
scas
sub
add
mov
roll
xor
aam
jle
clc
and
push
push
pop
mov
mov
es
testl
adcb
pop
sbb
adc
loopne
jae
jecxz
or
pop
frstor
cltd
jp
adc
wrmsr
pop
mov
in
cmp
pop
adc
push
aaa
fadd
add
jno
stos
arpl
cs
shll
lods
push
lds
jnp
mov
aaa
or
fbstp
cs
pop
jo
bound
mov
jp
bound
cli
jmp
add
push
int3
or
sti
pop
xor
and
mov
inc
insl
in
inc
mov
bsf
sub
lret
dec
push
and
cmpl
sub
mov
lcall
push
adc
sbb
js
in
cmp
dec
dec
leave
int3
outsl
lock
insl
or
add
pop
xor
rclb
push
cmpsb
add
in
sub
movsb
out
cmp
call
and
adc
test
aam
leave
jge
fimull
inc
cwtl
cmp
fmull
adc
adc
dec
and
pop
lahf
lea
js
iret
test
inc
aam
push
or
cld
lds
out
fwait
add
in
andb
push
push
pop
add
es
adc
lcall
jb
in
inc
sbb
fldl
lret
scas
loop
xchg
shl
pushaw
repnz
sbb
inc
ja
imul
cmp
ja
imul
sti
shll
inc
sti
icebp
cmpsb
mov
mov
ljmp
js
popa
stc
aam
sarb
push
lds
mov
pop
mov
push
jecxz
jp
mov
in
sbb
xor
pop
xchg
aas
dec
stos
cmp
lods
xor
inc
imul
inc
pop
xor
sub
sub
xchg
push
stos
jecxz
es
or
aam
xchg
xchg
push
bound
sbb
push
mov
inc
jno
cli
fdivp
insb
lahf
frstor
rclb
aaa
xor
pop
and
adc
push
js
sub
adc
data16
add
das
mov
lock
adc
insb
xor
notl
sbb
sub
inc
iret
push
push
pop
sbb
aas
and
jbe
stos
mov
fs
jne
xchg
sbbb
dec
pop
adc
pop
adc
jecxz
adc
pushf
inc
fcomps
push
lock
iret
fldt
inc
cmp
fistps
pop
pop
inc
jge
and
push
fildl
adc
jge
jl
call
test
leave
dec
in
and
cwtl
cmp
pop
or
nop
xor
icebp
aas
push
out
dec
aaa
jne
call
cmpsl
mov
mov
ss
js
jg
ss
mov
jns
es
out
gs
jecxz
out
add
rcrl
xchg
aas
jne
push
pop
xchg
sahf
mov
mov
popa
sarb
cmp
mov
push
out
sub
xchg
repnz
fimull
fldt
rorb
in
cmpsl
xor
inc
xchg
lods
jge
adc
scas
adc
mov
arpl
xlat
pop
push
xor
loopne
inc
popa
pop
cmpl
adc
jo
aas
fisubs
out
scas
xchg
pushf
cs
cmc
or
xchg
jle
hlt
add
jnp
lret
mov
bnd
sbb
test
cmc
mov
add
push
movsl
in
push
or
test
mov
xor
add
ret
adc
and
add
aad
cld
xor
jns
adc
int
stos
jecxz
mov
jmp
addl
clc
call
add
int3
adc
and
fs
insl
push
pop
jmp
in
dec
into
test
cmp
stc
in
flds
xchg
outsl
mov
and
jge
cs
orl
pop
dec
testl
insl
jae
inc
add
mov
into
sahf
stos
icebp
xor
in
adc
push
xchg
sub
or
inc
stos
jg
les
jb
sub
rcrb
rcrb
mov
cwtl
push
push
push
es
xlat
jmp
icebp
pop
and
mov
test
scas
cmpsb
sahf
and
and
pusha
repz
in
cmp
or
je
imul
xchg
nop
ja
in
cmpb
inc
add
pop
repnz
xchg
sbb
aaa
cmp
pop
clc
in
clc
cmp
push
iret
jecxz
int3
jmp
das
call
and
arpl
mov
sbb
mov
sub
call
andb
out
and
call
dec
pop
movsb
addb
inc
or
pusha
pop
mov
cmp
ds
pop
xchg
divl
push
fwait
xchg
add
jp
hlt
xor
mov
movsl
rorl
flds
into
inc
xchg
mov
scas
sbb
inc
test
enter
out
xor
aaa
stc
inc
jg
cmp
lods
shrb
and
adc
mov
mov
nop
bound
test
sub
inc
imul
sbb
and
xchg
cwtl
jo
mov
shlb
fs
daa
jg
xor
scas
mov
lret
outsb
sbb
push
rolb
or
add
add
mov
pop
setle
mov
mov
pop
sbb
push
mov
or
incb
arpl
push
xchg
cmc
imul
das
sarb
loopne
and
jmp
inc
add
stos
imul
int3
pop
jbe
mov
push
push
mov
test
mov
push
push
and
dec
repnz
or
sahf
insb
or
add
cwtl
js
movsl
sbb
mov
fistpl
cwtl
pop
xor
lret
cmpl
jle
push
xor
loopne
dec
cmp
lcall
adc
insb
sbb
fisubs
inc
ret
inc
ret
sbb
test
sbb
addb
shrl
mov
push
inc
sbb
xor
push
xor
das
xor
push
and
adc
aam
in
mov
aad
inc
rol
add
adc
add
push
fcoms
xlat
inc
cltd
inc
rcll
fists
push
cmpsb
cmp
push
sti
iret
insb
or
push
xchg
es
fidivl
jg
out
gs
jno
jne
or
mov
fdiv
shrl
out
sar
cmpsl
inc
inc
clc
mov
inc
push
and
mov
loopne
xor
jmp
xchg
lcall
push
test
sub
out
icebp
pop
jl
jge
adc
and
sbb
and
and
adc
dec
dec
mov
addb
loop
mov
or
hlt
xor
sbb
cmp
out
stos
pop
xor
ror
stos
in
pop
fadds
in
and
cli
push
inc
push
dec
popf
into
test
aaa
adc
repz
inc
pop
push
es
sub
mov
inc
stc
inc
sub
push
addr16
loop
mov
stos
or
shrb
je
cmpsl
xor
push
and
sub
movsb
xor
adc
in
sbb
mov
mov
loopne
aas
push
icebp
movsb
xor
sti
or
enter
ret
popa
icebp
test
xlat
shll
sbb
int3
inc
je
bound
fmulp
push
ja
cwtl
in
das
mov
shrl
xchg
sbb
out
daa
push
pop
pop
imul
jne
pop
enter
mov
jmp
sbb
jno
stos
in
repz
lods
pop
andl
addl
in
arpl
fwait
clc
jl
push
loop
loop
cmp
cmc
jno
fs
daa
loop
inc
xchg
insb
xor
stos
push
adc
ret
les
test
lea
jno
enter
repnz
mov
call
add
pop
pusha
les
sahf
call
lret
inc
mov
pusha
mov
inc
xor
test
nop
mov
loopne
mov
or
shlb
inc
mov
mov
addb
xchg
mov
adc
aam
mov
jo
xchg
fsubs
test
inc
nop
leave
cmp
ss
pop
pop
ret
pop
jl
imul
cmp
sub
add
inc
repnz
jmp
push
push
mov
mov
pop
inc
add
mov
push
dec
ret
pop
insb
push
inc
xchg
add
aaa
mov
pusha
mov
xchg
pop
push
and
mov
sbb
pop
inc
mov
pop
or
in
movsl
dec
xor
les
imul
pop
sbb
dec
pushf
adc
loop
test
pop
xchg
call
popa
or
xor
cld
lock
test
aaa
int
les
mov
dec
mov
out
xorb
xchg
mov
test
push
xchg
bound
popf
or
in
push
ret
hlt
sbb
aad
cli
shll
mov
and
jl
xor
adc
cmp
pop
add
loope
add
cltd
in
pop
mov
nop
lcall
jb
movups
cli
test
cmp
sbb
cmp
and
shl
sub
or
inc
stos
int3
shrb
adc
ss
inc
mov
sbb
mov
mov
inc
cmc
data16
int3
mov
pop
adc
jecxz
jb
cmp
call
sbbb
mov
test
xor
mul
xchg
enter
dec
or
iret
loope
notb
xchg
movsl
inc
mov
mov
mov
or
int3
jno
xchg
mov
cmc
add
or
mov
push
aam
pop
adc
mov
xchg
push
sbb
aam
faddp
mov
jo
rorb
lods
xchg
int3
rcrb
les
xchg
sahf
jne
pop
push
xchg
clc
aad
and
in
scas
mov
sbb
xor
jne
imul
cmpsb
test
jg
mov
neg
test
sub
es
push
xor
outsl
inc
shr
and
lret
leave
lret
adc
dec
and
inc
mov
mov
and
mov
addr16
add
ret
stc
not
in
cld
pop
mov
inc
sbb
ljmp
shlb
stos
es
enter
mov
xchg
iret
jbe
push
gs
imul
push
out
jle
imul
pushf
dec
insb
xor
neg
pop
cmp
cmpsl
or
or
push
sbb
mov
inc
ds
data16
stc
add
lea
xchg
xchg
sbb
stos
add
mov
or
xchg
ja
pop
xchg
imul
xor
icebp
cmpsl
test
repz
negb
mov
sarl
mov
jne
loop
shl
mov
adc
cmpsb
xor
fwait
test
daa
mov
dec
jne
cltd
xor
mov
pop
add
popa
lret
or
lock
add
or
subb
cmpsb
dec
ja
pop
iret
add
dec
les
mov
pop
mov
sbb
and
or
mov
mov
bound
orb
je
fcomps
fisttps
ds
pop
pusha
push
sbb
sarl
loopne
adc
data16
movsb
sbb
lahf
push
outsb
inc
and
aaa
inc
lret
xchg
push
and
xor
mov
fwait
add
and
vandps
jecxz
pusha
int3
std
lock
out
sub
dec
jno
push
pop
sahf
stos
loopne
jb
xor
mov
aas
xor
dec
ret
jbe
jle
js
and
pop
repnz
ja
add
and
mov
bound
lock
inc
add
in
aam
mov
jno
out
xchg
scas
addb
aam
lods
xchg
push
dec
adc
pusha
mov
pop
mov
adc
adc
push
cmp
jmp
pusha
mov
and
orb
xorl
jge
mov
dec
hlt
ljmp
stos
lahf
insb
push
push
dec
rclb
inc
mov
sbb
jle
and
push
ss
nop
mov
stos
popa
scas
fsubs
lret
mov
cmp
scas
and
popf
push
cli
or
enter
xchg
je
inc
cmp
sti
jae
test
xor
movl
ret
adc
jecxz
xor
add
jnp
jno
adc
xchg
pop
push
loop
insb
or
dec
mov
lods
test
ljmp
scas
adc
cmp
addl
sub
out
jg,pn
mov
xchg
push
pop
xor
jmp
sar
or
mov
lods
popa
movl
cmp
xchg
and
adc
mov
clc
mov
pusha
pusha
xor
fwait
pop
pause
xchg
and
jg
xchg
jbe
daa
cmc
jno
fidivs
push
mov
mov
dec
movsl
mov
jne
decl
push
jmp
mov
addb
int3
xor
jl
and
mov
fnstsw
aam
iret
movsb
xor
adc
and
gs
mov
xchg
mov
pop
aad
xor
dec
aas
sbb
sub
dec
rcrl
testl
loop
test
mov
es
pop
rorb
call
repz
add
mov
inc
and
cmp
xchg
stc
ret
add
inc
cmp
push
sub
ret
push
push
lret
xchg
inc
mov
inc
push
dec
inc
call
mov
xchg
popa
sub
roll
fisubl
and
cld
sti
fsubrs
jb
jg
daa
mov
dec
sbb
jge
push
add
jl
dec
cmc
stos
xchg
lds
stos
and
adc
mov
push
lds
divl
pop
scas
xchg
out
stos
pop
mov
and
jmp
mov
rolb
ret
mov
or
pop
pop
adc
cmpsb
pop
xor
je
xchg
loope
cmc
jne
add
xchg
addr16
daa
andl
dec
sub
leave
mov
faddl
xor
das
ljmp
addb
popa
outsl
ljmp
xlat
dec
or
pop
sbb
jae
lret
xlat
rcrb
inc
xorb
dec
aaa
out
mov
popf
hlt
jnp
mov
mov
sbb
or
fwait
add
test
fwait
mov
xor
and
pushl
testb
mov
dec
cmp
fidivrl
adc
jmp
pop
dec
insb
inc
add
outsl
adcl
jecxz
add
lahf
jbe
fcmovnbe
enter
adc
mov
loope
xchg
or
test
hlt
into
xchg
insb
sbb
cmp
adc
lcall
mov
into
sub
adc
or
push
pop
int
cmp
and
push
mov
ljmp
or
test
mov
and
out
xchg
cld
iret
push
inc
leave
mov
inc
and
add
sbb
add
dec
popa
sub
mov
popf
adc
stos
in
add
sub
stos
lock
pop
clc
push
test
push
xchg
mov
pop
mov
push
icebp
mov
pop
nop
fnstsw
ljmp
inc
icebp
jns
add
mov
lcall
xor
les
les
pop
je
jbe
cmp
pop
addr16
loope
scas
in
icebp
push
pop
idiv
push
cwtl
push
and
push
xchg
jl
jp
cmpsb
aam
lea
inc
lahf
rcrl
jne
dec
cmp
enter
cltd
imul
or
sub
push
adc
adcb
xchg
push
xor
insb
xor
add
xchg
test
jne
cmc
ds
out
mov
lret
enter
push
popa
cmp
adc
and
repnz
sub
das
add
pop
add
mov
jp
cmp
xor
cmp
add
xchg
inc
fsubl
add
jns
adc
xor
push
cmp
inc
es
inc
jns
mov
sub
inc
es
inc
jne
jae
test
cwtl
xor
loope
popf
mov
jmp
add
xor
fistl
add
mov
loop
test
pop
mov
mov
jmp
dec
addr16
push
sbb
jne
movsb
ljmp
sub
jno
fwait
scas
xchg
addr16
and
out
clc
jg
pop
cmp
cmp
pop
adc
and
push
dec
out
push
mov
jl
sbb
jne
movsl
int
ficomps
and
rorl
mov
inc
mov
jmp
sbb
lahf
jg
add
sub
aas
fwait
mov
enter
cmc
adc
das
jne
cld
sbb
out
mov
jno
mov
ret
adc
mov
lcall
jge
and
ja
pop
dec
out
fcmove
mov
fs
sub
in
loop
clts
or
and
sub
xor
mov
xor
and
push
int
incb
jmp
or
adc
and
or
pop
dec
test
mov
fisttpl
sbb
or
mov
jp
imul
mov
xor
repnz
hlt
push
frstor
or
adc
pusha
push
pop
mov
ds
or
jl
in
adc
fbld
cltd
xchg
enter
add
loopne
adcb
push
push
push
add
jne
mov
sub
inc
mov
inc
in
and
or
jmp
fisttpll
test
push
in
add
test
into
jo
mov
push
cmc
lcall
or
cmp
fs
cmp
jnp
mov
lcall
mov
xchg
ljmp
mov
push
ljmp
bound
sbb
es
fistpl
cmc
andb
and
mov
sahf
ja
idivb
fists
movsb
sbb
cwtl
dec
outsl
jl
xchg
mov
fisubrl
lods
or
fnstcw
cwtl
leave
mov
jl
adc
test
outsb
je
aaa
xlat
push
lods
bound
push
push
cmc
ror
dec
js
pop
arpl
fimuls
cmc
mov
in
xchg
cmp
pop
push
pop
mov
pushf
aas
outsb
jno
pop
xlat
push
cwtl
mov
inc
lret
adc
lcall
push
subb
mov
popf
sbbl
xchg
sarl
stos
in
sbb
movsb
movsb
and
jae
sbb
xchg
inc
popf
and
push
inc
mov
lods
push
inc
aad
fistps
add
hlt
jno
shlb
xchg
lods
mov
das
push
dec
dec
add
daa
dec
xor
gs
lods
and
rcrb
mov
sbb
mov
cmp
and
push
arpl
or
jno
push
add
mov
inc
dec
mov
icebp
insl
pusha
sti
pop
divl
mov
mov
lods
jl
sbb
or
cmp
stc
and
stos
decl
hlt
je
adc
rorb
adc
or
jl
cmpsl
imul
cmp
test
mov
pop
stc
jp
lahf
std
fs
cltd
adc
push
fadds
mov
sbb
leave
pop
xchg
adc
mov
gs
rcrl
cmp
fisttps
pop
push
xor
jmp
jns
rorl
cmp
ja
or
and
mov
or
push
adc
shrl
or
in
sbb
or
dec
mov
add
push
imul
and
ret
mov
sar
test
push
out
mov
fnstcw
inc
mov
movsb
in
mov
insb
fwait
and
mov
cmpsl
fwait
subl
pop
mov
sahf
mov
push
sbb
or
fsubrs
test
pop
pop
inc
cmp
sbb
jge
pop
jbe
jecxz
adc
or
adc
adc
ljmp
adc
push
out
xchg
and
sbb
mov
andl
add
xor
idivb
xchg
push
insl
inc
dec
lods
mov
sub
push
jo
ljmp
xor
jno
imul
decl
adc
fidivrs
jecxz
jg
pop
popf
push
ret
sub
adc
pop
mov
fisubl
clc
pop
mov
fstpl
pop
cmp
test
mov
mov
or
adc
xchg
mov
dec
mov
ret
adc
pop
cmpsb
sub
sbb
mov
sbb
in
popf
push
xchg
mov
std
mov
cmc
lock
sub
loop
aaa
ret
sbb
decb
loopne
pop
fstps
ljmp
push
inc
stos
test
pop
pop
fwait
scas
mov
xchg
lods
pop
push
ljmp
xor
out
mov
push
sbb
mov
push
jmp
test
push
add
cmpsb
cs
in
add
cmp
mov
inc
mov
in
out
cmpb
xchg
xchg
fxrstor
and
pop
mov
cwtl
notl
xchg
add
jne
pop
jnp
inc
xor
mov
dec
pop
adc
lods
cmp
dec
ja
fucomi
push
inc
mov
pop
add
pop
gs
out
mov
sbb
sub
outsb
xchg
jbe
loopne
add
adc
inc
js
add
hlt
pushf
sbb
je
loopne
lahf
mov
or
push
mov
mov
mov
lcall
adc
sub
bound
inc
adc
imul
push
enter
loop
pop
add
imul
pop
push
add
push
fwait
cmp
mov
scas
push
pop
scas
aad
mov
pop
rclb
enter
lods
pusha
push
pop
sti
push
jg
enter
test
leave
mov
sub
cmp
popf
shlb
pop
roll
mov
mov
aad
or
push
inc
stc
nop
cmc
or
leave
cmp
cmp
or
pop
mov
popa
push
inc
inc
lock
mov
push
cs
xchg
and
cmp
push
push
out
rolb
andb
add
add
sub
lahf
push
add
test
test
mov
inc
fcoms
push
pop
xchg
jne
and
jb
gs
sbb
sub
inc
lea
cmp
mov
sbb
fistpll
jmp
xchg
add
addr16
or
pop
insl
adc
inc
inc
jecxz
and
test
dec
aas
loop
or
mov
xorl
pusha
cmpsb
xchg
data16
rorb
lea
xor
and
aaa
mov
divl
in
cwtl
jnp
push
add
es
push
jno
add
daa
in
popl
lcall
cmp
pop
pusha
mov
out
pusha
fildl
in
or
nop
dec
mov
popa
push
lret
cmc
repz
mov
sarl
imul
push
push
sub
in
push
mov
inc
jbe
xlat
aam
inc
in
add
clc
mov
cmp
dec
lahf
mov
mov
cwtl
loop
in
inc
pop
test
popf
push
clc
mov
jge
test
stos
call
push
aaa
test
mov
dec
pop
test
push
rolb
je
pusha
in
pop
scas
in
cmp
sub
sbb
mov
sub
add
pop
mov
push
clc
xlat
push
sub
and
sbb
or
push
push
push
push
je
lret
subb
inc
cmp
pop
xchg
xchg
in
shlb
and
xor
cmp
dec
lea
imul
inc
push
fidivrs
push
andb
ljmp
mov
add
or
lret
imul
cmp
enter
add
push
dec
ja
stos
or
push
decl
andb
lods
int3
out
mov
movb
mov
cmp
inc
add
enter
fstl
inc
sbb
xlat
dec
add
ret
daa
test
xchg
inc
std
push
push
fcompl
dec
cmp
packsswb
jno
mov
and
stc
cmpsl
pop
adc
dec
xor
adc
push
int
in
add
and
int3
xor
loopne
xchg
dec
stos
clc
cmp
xchg
xchg
lret
adc
jbe
lods
out
call
inc
into
in
inc
pushf
pop
in
and
inc
xor
cli
sti
xchg
add
sbbl
cmpsl
jge
and
jge
mov
out
and
inc
ljmp
xchg
push
imul
jecxz
add
orl
mov
adc
and
fsubs
inc
pop
stos
stos
xchg
adc
mov
roll
inc
inc
out
hlt
adc
out
sti
cmp
cmc
mov
inc
adc
popa
test
ss
sbb
push
mov
stos
add
nop
fstl
test
sub
sub
cmp
lret
movsl
sbb
cmp
int
add
outsl
and
xchg
or
fisttpll
les
mov
and
push
ds
pop
pop
js
stos
xchg
xor
pop
insl
scas
or
jl
mov
push
scas
int3
nop
mov
sahf
jl
js
sahf
and
aam
cmp
es
pop
mov
fs
adc
stos
jmp
pushf
mov
imul
xor
cmp
inc
inc
inc
enter
daa
jns
movsl
push
pop
stc
div
inc
cmpb
xchg
dec
jne
xor
sti
sbb
mov
mov
scas
je
cmp
test
push
cmc
pop
mov
fistpll
enter
scas
push
cltd
sbb
sbb
js
shlb
add
decb
sbb
xchg
add
stc
sarb
scas
xchg
ds
fwait
xor
mov
add
and
nop
and
mov
outsb
mov
push
outsb
pop
and
push
mov
rcrb
movsb
ret
les
lahf
push
push
test
jns
cmpsb
es
mov
push
jg
mov
movsb
movl
dec
cmp
stc
fistpll
sbb
pop
cmp
cltd
inc
mov
ja
dec
cwtl
std
jp
int
mov
cvttps2pi
sbb
sub
scas
ret
inc
mov
xor
loope
fnstenv
mov
mov
arpl
or
repz
sub
sub
pop
int3
dec
adcl
dec
aad
inc
gs
imul
sub
cmc
loopne
fidivrs
sub
loope
loop
dec
les
and
iret
add
mov
mov
mov
dec
es
scas
xor
insl
fists
ds
cli
xchg
call
mov
push
out
bound
jecxz
sbb
ret
push
jg
cltd
mov
xor
test
dec
xor
ret
or
push
repnz
or
filds
inc
aam
cmpl
mov
scas
jg
lods
xchg
mov
and
cmp
fwait
popa
repnz
cmc
into
fisubrs
push
jns
es
rorb
cs
sub
sub
addr16
es
imul
and
lret
rorb
sub
mov
mov
insb
pop
addr16
test
lds
xorb
aaa
lahf
or
sub
jo
pop
fnstenv
std
pop
and
insb
inc
dec
stc
test
bound
xor
repz
and
jne
xchg
stos
scas
hlt
xchg
loopne
aaa
xor
nop
sbb
sbb
dec
xor
rorb
xchg
sarl
sarl
nop
icebp
cmpb
and
inc
sbb
pop
pop
mov
sbb
mov
pop
mov
insb
jns
add
push
outsb
push
jns
mov
cmc
bound
xor
xchg
out
or
es
adc
ds
sbb
xor
in
in
fs
inc
rcrl
repz
iret
pop
adc
cs
or
push
mov
inc
dec
imull
xor
xchg
test
pop
fs
jnp
ja
int
adc
repz
sub
mov
or
dec
pushf
cltd
pop
or
mov
fwait
and
fsubs
and
jno
jmp
repz
xlat
in
aad
fidivs
pushf
sti
jmp
outsl
xor
jg
push
cltd
clc
mov
adc
inc
stc
in
add
push
es
repz
or
cmp
cmp
int
das
inc
out
and
test
in
imul
movsb
cmp
push
xor
pop
and
and
test
ret
nop
jno
fcmovu
mov
or
sub
mov
or
inc
je
push
int
sbb
fdivs
mov
mov
xor
mov
ss
inc
jns
imul
xchg
and
insl
jb
lahf
push
pop
mov
inc
les
jns
add
mov
mov
rolb
jl
push
xchg
or
push
add
inc
loope
outsb
iret
xor
andl
lcall
nop
dec
shlb
pushl
clc
pop
xchg
cs
adc
addr16
fcompl
outsb
enter
orb
inc
xor
xor
push
testl
add
xor
jo
xchg
lcall
xchg
test
xchg
mov
and
add
push
in
mov
sbb
pop
or
dec
xor
bound
mov
xor
xor
add
lea
icebp
mov
cmp
dec
fidivrl
rdtsc
adc
adc
jns
add
mov
mov
test
adc
and
in
inc
cs
xchg
lds
lret
ret
push
ss
fs
ficomps
cmpl
dec
dec
dec
xchg
pop
mov
pop
stos
or
mov
adcb
enter
cmp
dec
or
test
pushf
push
dec
or
insb
cs
push
inc
push
pop
adc
sub
xor
push
addr16
mov
fs
fidivs
and
stos
cltd
sarb
xchg
das
xchg
cmp
repz
add
mov
js
adc
andl
les
and
out
jecxz
adc
hlt
js
negl
xchg
inc
xchg
in
add
push
imul
nop
mov
mov
cmp
subb
negb
rcrb
jecxz
push
pop
cltd
hlt
jae
int3
cmc
dec
inc
js
inc
add
push
inc
mov
dec
in
add
push
inc
int
sbb
sbb
xor
cmp
xorb
push
shl
rcrb
inc
js
xlat
in
test
adc
sbb
lock
cmp
ljmp
fiadds
loope
test
es
push
xor
movsb
cltd
mov
xchg
xchg
fs
sbb
in
enter
sub
or
dec
mov
and
pop
test
xchg
adc
and
jp
xor
ret
or
inc
ret
mov
mov
pop
ljmp
dec
inc
cltd
test
ss
sub
sbb
sbb
loop
inc
push
rolb
cmp
orb
scas
out
and
add
cvtpi2ps
ret
cmp
in
inc
or
inc
out
ffree
cwtl
xor
or
mov
adc
fs
sbb
sbb
in
push
push
mov
cld
push
push
and
data16
jne
push
mov
cmp
inc
cmp
aam
push
jns
or
sbbl
nop
loope
fnsave
sbb
and
adcl
in
fs
cmp
xor
mov
imul
mov
and
cmp
adcb
enter
cmp
dec
cmpsb
pop
mov
pop
mov
shlb
cmp
andb
enter
cmp
adc
iret
inc
cmp
push
jne
lret
inc
inc
jp
ret
or
mov
inc
sbb
jno
gs
repnz
sahf
sub
dec
dec
adc
push
dec
stc
mulb
dec
ds
and
mov
adc
js
dec
inc
push
cmp
and
add
and
sbb
sbb
fwait
mov
roll
jecxz
idivb
jmp
sbb
mov
inc
lods
nop
add
test
loop
add
inc
in
dec
inc
lahf
jbe
push
rcrl
clc
xor
daa
popa
mov
and
inc
mov
dec
or
push
nop
or
cmpl
push
test
rol
icebp
arpl
jb
dec
out
fisubl
adc
sbb
jae
bound
or
shlb
jns
xchg
call
mov
push
inc
jnp
mov
pop
rol
and
test
xchg
cmp
ret
push
cmp
adc
add
and
fdivrs
inc
and
scas
jb
add
and
or
lds
pusha
and
mov
ja
nop
sbb
fucom
dec
and
rcrb
rorl
in
popf
rol
push
dec
mov
inc
cli
inc
jge
inc
adc
or
pop
les
aaa
add
repnz
fwait
add
call
and
cli
and
mov
or
mov
bound
sbb
sub
xchg
and
adc
and
mov
in
call
mov
sub
xchg
jbe
aad
jne
push
jb
dec
mov
dec
mov
jmp
or
add
stos
out
sbb
les
sbb
jmp
add
dec
mov
or
cmp
incl
ss
jmp
push
pop
loop
lret
fistps
adc
in
pop
xor
pop
addr16
add
jle,pt
stc
ss
jne
cmc
pop
ds
xchg
lahf
cmc
call
inc
popf
cli
popa
sub
shll
mov
ss
sbb
inc
js
in
adc
cmp
dec
mov
sub
cmp
jne
jns
add
adc
jg
andb
pcmpeqw
ljmp
int
adc
dec
or
push
ret
cmp
daa
cli
push
ret
cmp
sub
fadds
jmp
repz
inc
stc
movsb
mov
mov
sbb
inc
xor
dec
push
xor
out
pop
xlat
adc
push
adc
adc
adc
iret
sub
mov
daa
cs
das
jl
sub
arpl
sbb
cmp
sbb
scas
xchg
sbb
mov
xchg
mov
sbb
jg
cltd
fdivl
mov
andb
in
ret
popf
ja
and
hlt
stc
xor
cmp
mov
push
dec
xchg
bound
pop
ret
in
mov
stos
fwait
sub
call
mov
pop
and
inc
inc
aaa
dec
inc
or
subb
stos
out
and
jae
rcll
pop
in
and
pop
cwtl
popa
sub
sub
sub
cmp
mov
pop
cmp
jl
add
in
pop
push
ljmp
leave
and
or
pop
icebp
lret
out
xor
lock
push
repz
xchg
push
outsl
dec
mov
or
mov
fs
dec
sbb
mov
sbbl
and
xor
and
imul
sub
mov
cltd
push
repz
xchg
add
stos
jno
shl
push
mov
ja
stos
cmc
jo
fldl
data16
push
push
add
xchg
mov
jmp
stos
mov
mov
test
push
subb
push
jp
ror
cli
mov
push
jl
jp
ds
inc
dec
popa
stc
lret
jl
scas
push
es
xor
xchg
sbb
add
cmc
or
lea
sub
ret
cs
adc
mov
aad
or
mov
in
out
stos
mov
adc
rcrl
xchg
push
xor
pop
push
mulb
adc
sub
or
dec
push
push
add
push
inc
push
movsb
hlt
loope
sahf
icebp
adc
sub
js
out
adc
lahf
scas
aas
sarl
rclb
ljmp
push
push
add
pushl
sbb
sbbl
mov
sbb
and
push
sub
xchg
std
xor
jmp
pop
sbb
aam
lods
add
sub
and
xchg
sub
xchg
out
or
add
and
arpl
sub
add
das
pop
in
mov
inc
or
sub
inc
jnp
icebp
mov
inc
and
or
loope
ret
add
push
aad
cwtl
xchg
pop
adc
fs
enter
aam
xor
jne
add
out
xchg
pop
dec
lret
sbbb
stc
and
pop
bound
add
mov
rcr
icebp
xorb
addr16
or
push
lahf
fsubrs
mov
dec
or
icebp
push
scas
dec
enter
aad
inc
in
and
fcmovne
popa
pop
inc
jp
push
rorl
mov
or
sub
popa
add
jns
xchg
das
sub
xchg
adc
addr16
add
int
adc
idivb
ss
cmpsl
std
mov
lahf
ret
ja
sub
in
in
insl
adc
sbb
dec
andb
loopne
rcrl
push
test
xchg
aas
or
adc
sti
inc
inc
data16
in
pop
adc
and
pop
xchg
ja
jg
and
loope
rorl
mov
dec
add
sti
sub
in
jecxz
jae
and
popa
mov
jb
jmp
out
sti
pop
xor
mov
fs
mov
stos
popa
sub
xor
or
or
push
test
cmp
xor
leave
fisttpll
sbb
orb
jp
subb
or
bound
adc
pop
and
adc
lret
mov
repnz
or
pusha
leave
cli
lahf
je
sub
fstps
dec
imul
push
sbb
push
fistps
adc
sbb
cmp
mov
mov
loope
jl
cmpb
imul
leave
add
adc
push
sub
push
cmpsl
xor
xchg
mov
arpl
inc
or
jp
sti
pop
cmp
lods
jbe
xchg
rorl
mov
enter
lds
pop
out
lock
stos
sbbb
mov
sbb
xchg
lea
pop
subl
and
push
or
fs
mov
cmpsl
xchg
pop
iret
jle
lods
push
lods
cmp
rol
and
xchg
or
mov
clc
pusha
mov
adc
jp
lds
cmp
mov
and
push
adc
rcll
add
ss
popf
xchg
loope
lret
fadd
jb
sbb
testb
jne
push
dec
and
lock
add
je
sbb
loopne
push
je
mov
jb
loopne
and
xchg
mov
push
mov
sub
jp
in
add
xchg
xor
test
imul
xlat
push
cmc
andl
cmp
adc
add
jnp
xchg
nopl
xchg
shl
jg
and
xchg
and
adc
movsb
call
pop
jp
fsubs
inc
loop
pop
shll
dec
inc
imul
shll
int3
lahf
scas
in
dec
xor
jge
fs
xor
cmp
mov
insb
cli
adc
jb
subl
std
jl
lds
push
aaa
dec
stos
out
or
mov
jl
cmc
lods
pushf
push
push
push
lret
jmp
and
dec
push
lock
loopne
jge
jae
mov
lret
inc
jns
dec
out
and
sahf
movsl
sub
int
test
push
sub
stos
mov
xchg
cmp
inc
mov
xor
rcr
dec
addr16
add
xor
inc
add
pop
ljmp
std
or
insl
push
repnz
insl
dec
out
mov
jno
or
scas
ja
hlt
sbb
pop
test
lahf
imul
inc
leave
shrl
int3
add
push
lahf
xor
dec
das
dec
ret
outsl
dec
inc
addr16
mov
and
jmp
or
sub
cltd
ja
cmp
enter
out
mov
mov
loope
cmp
sub
push
xlat
xchg
in
mov
cmp
fsubr
pushf
dec
sub
pop
cmpsl
test
ret
and
dec
mov
jb
inc
sbb
xchg
loope
mov
add
add
mov
xchg
add
mov
movsb
and
xor
dec
inc
repz
cmpl
mov
pop
pop
xor
mov
mov
push
ret
mov
movsl
bound
mov
ljmp
mov
loope
fistpll
arpl
xor
mov
pop
cmc
xor
sub
sub
xchg
jmp
and
xor
inc
push
dec
mov
inc
inc
dec
outsl
std
push
sub
shrl
mov
jns
mov
fisubl
pop
mov
ja
cmp
cmp
in
xchg
daa
push
daa
adc
pop
mov
push
mov
ret
shlb
rcr
adc
mov
xchg
mov
mov
inc
cmp
xor
mov
add
ljmp
mov
scas
pop
push
inc
lret
sahf
shrl
pop
xor
mov
into
les
pop
sub
fiadds
cwtl
pop
mov
cli
dec
fdivrl
or
xor
adc
and
pop
jne
push
cld
dec
cmp
mov
mov
inc
sub
fstps
xchg
mov
or
add
adc
add
in
test
and
cs
dec
mov
out
and
push
mov
dec
inc
sub
in
cmp
test
insl
push
dec
adc
rcll
add
shll
je
dec
pop
cli
sahf
inc
xor
lods
cmp
sub
dec
add
in
sub
insl
sbb
add
sbb
mov
add
fcompl
subb
andl
mov
jecxz
ljmp
jo
out
mov
mov
pop
pop
jns
div
dec
ret
test
scas
out
mov
jmp
movsb
inc
cmp
and
andb
js
fstl
mov
popa
arpl
ret
inc
xchg
inc
mul
push
add
adc
adc
sbb
mov
jmp
mov
sbb
jecxz
push
xchg
pop
and
pusha
xchg
les
pop
dec
bndstx
test
sub
push
adcb
cmpsb
xorl
sbbb
push
insb
jae
in
into
cmp
mov
lret
stos
push
or
fnstcw
out
push
jmp
ficompl
sbb
cli
loope
arpl
test
nop
push
xor
add
xorl
mov
pop
pusha
xchg
push
jl
cwtl
and
es
fldt
mov
outsl
ficomps
fildll
xor
pop
adc
das
or
mov
inc
lds
subl
xchg
xchg
or
or
ds
sbb
lock
out
or
rol
popa
pop
shll
push
test
mov
sub
ret
adc
mov
xchg
lcall
lods
cmp
dec
test
dec
fs
add
push
addb
mov
orb
sub
xor
ret
and
js
add
cmpsb
mov
dec
pop
out
mov
arpl
adc
out
loopne
adc
jp
xchg
fistpll
push
movsl
mov
lods
push
fcoms
jg
pushf
mov
mov
das
add
insb
in
adc
push
bound
loop
or
push
das
and
mov
rolb
add
jle
cwtl
mov
jge
lret
lahf
adc
inc
das
mov
add
mov
push
aas
pop
imul
ds
test
cmp
int
jmp
adc
xor
fcoms
mov
mov
and
mov
mov
add
cmpsb
push
das
or
jne
mov
xchg
insl
xor
lcall
cmc
pop
jle
jno
imul
mov
cmp
mov
mov
andl
jmp
js
xor
test
sub
jns
pushl
pop
repnz
enter
sub
and
sub
and
sub
bound
push
mov
push
mov
xchg
out
das
mov
loop
mov
and
and
sub
jno
andb
xor
mov
jp
icebp
imul
or
jbe
adc
out
mov
ss
cltd
in
call
sti
inc
xchg
jne
fsubl
xchg
cmp
in
popf
std
add
push
lds
add
or
cmp
pop
adcl
or
jne
push
sbb
mov
nop
arpl
xor
mov
cmp
stos
push
sbb
mov
add
nop
adcl
xor
inc
push
loopne
push
pop
xor
jmp
mov
in
pop
lcall
cmp
jb
xlat
pop
push
jns
push
mov
xchg
push
andb
push
rorb
addr16
idivl
lahf
push
daa
sbb
mov
jae
xor
aad
or
cmp
or
lcall
sub
scas
lret
jl
sub
lods
or
push
xchg
enter
jb
jno
push
sub
push
push
or
cmpl
xor
or
dec
sub
or
dec
lea
pop
jno
adcl
or
mov
mov
or
mov
negl
or
je
fbstp
dec
pop
movsb
iret
mov
gs
fs
lret
enter
sbb
mov
push
sub
adc
mov
or
repz
daa
pop
ja
stos
pop
or
iret
test
or
aaa
xchg
mov
pop
xchg
repz
enter
pop
push
push
pop
xchg
cmpsl
gs
pop
add
jmp
jle
xlat
sbb
adc
or
daa
pop
sub
mov
sub
adc
adcl
sahf
and
flds
push
push
test
hlt
pop
nop
mov
inc
xchg
sub
and
jae
enter
fs
push
daa
or
pop
and
popf
repnz
jge
inc
mov
js
scas
xor
rorb
stc
cmpsl
push
repnz
hlt
or
mov
pop
shlb
dec
cmp
rcrl
xchg
test
cmp
jmp
dec
jae
inc
in
ja
cwtl
sbb
pop
test
dec
lock
cmp
test
xchg
mov
add
pop
shrb
push
aad
mov
test
or
inc
nop
insl
pop
popf
add
outsl
cltd
xchg
add
jge
lahf
cwtl
je
xor
adc
fcomps
lds
jo
ljmp
mov
mov
lea
mov
lods
dec
nop
sarl
ret
pop
aas
mov
or
cld
inc
cmp
stc
rcll
pop
in
push
sub
movsl
inc
and
inc
gs
pop
stc
add
lds
jg
lea
incb
ret
imul
test
icebp
jmp
mov
test
int3
test
aas
aaa
pop
inc
dec
cmp
js
and
out
inc
jmp
icebp
jl
out
lods
push
in
pop
xor
mov
adc
lret
in
ret
jno
jmp
cli
std
sub
aad
mov
or
inc
shll
ljmp
jne
push
ret
lds
pop
or
jne
cwtl
loop
adc
roll
push
mov
addb
data16
xchg
es
mov
aaa
jge
pushf
inc
jecxz
outsb
push
pop
out
movsb
loope
xchg
add
xlat
dec
popa
pop
push
push
pop
out
inc
sbb
int
popl
es
adc
jl
push
xchg
adc
or
sub
mov
in
inc
or
in
pop
or
clc
inc
adc
and
and
lods
es
sbb
les
fldenv
xchg
adc
or
les
mulb
dec
imul
mov
mov
xor
test
pushf
xor
mov
inc
adc
push
dec
adc
sbb
rcl
mov
or
add
pusha
mov
repnz
enter
dec
mov
or
mov
dec
inc
adc
add
mov
adc
pop
movups
lock
push
and
das
call
pop
clc
lahf
push
or
mov
lahf
mov
add
fsubs
shll
dec
ret
xor
xchg
in
mov
ficompl
mov
stos
ja
and
push
xchg
inc
cli
ljmp
cmp
into
inc
int
mov
cmp
push
in
leave
mov
add
push
sbb
cmc
test
add
lods
fnstenv
call
loopne
cmp
adc
pop
adcb
add
fisubrs
ljmp
sbb
add
and
or
mov
ja
adc
mov
fs
add
jp
in
push
loopne
jg
dec
shrl
scas
mov
lahf
les
imul
jmp
pop
jno
setbe
sti
decb
pop
stos
jp
cmc
dec
test
jnp
xor
in
pop
mov
je
pop
inc
mov
cmp
add
ds
leave
or
stos
push
adc
mov
cmp
fcmovu
pop
in
mov
push
mov
lods
test
adc
cmp
xchg
cmp
stos
add
arpl
stos
and
aad
scas
cmp
cmpsl
push
mov
andl
loopne
andl
test
add
xchg
ret
xor
iret
mov
es
repnz
xchg
and
cmpsb
sub
xor
and
adc
in
outsb
push
in
mov
lret
incb
inc
ret
out
sbb
xorb
dec
lods
cmp
xchg
xor
in
xchg
xchg
call
daa
push
clc
sahf
add
sbb
cld
orb
xor
aad
jnp
scas
push
subl
pushf
mov
add
mov
ret
push
push
xchg
enter
pop
enter
into
fistl
fwait
xlat
pop
mov
loopne
inc
repnz
cmc
push
add
add
addr16
arpl
mov
or
or
or
cmp
in
xlat
push
add
jg
imul
pmaxsw
jne
lock
popa
outsl
outsl
movsl
pop
push
adcb
mov
pop
xchg
jge
push
xchg
pop
pop
enter
or
ljmp
inc
aas
out
ja
jg
and
push
negb
push
lock
or
aam
sub
jne
outsb
outsb
loop
cmc
and
inc
js
aam
popa
stos
dec
or
xor
mov
push
jb
add
cmp
mov
or
in
stc
xor
lret
add
inc
push
add
inc
pop
or
jp
dec
inc
adc
dec
jne
pop
adc
pop
dec
scas
jmp
inc
cli
lods
data16
stos
adc
inc
xor
mov
sbbl
push
mov
push
adc
dec
inc
or
pop
pop
arpl
insb
stc
inc
inc
inc
dec
ret
and
clts
cmp
adc
stc
add
out
pop
test
fs
xchg
add
insl
lds
pop
or
push
push
mov
and
mov
sbb
inc
cmp
xor
dec
xchg
mov
iret
and
mov
or
lock
pop
stos
test
cmp
mull
jecxz
mull
jg
inc
int
daa
push
sub
repz
xor
xchg
push
sub
push
ja
cmp
mov
subb
pop
filds
adc
jns
xor
out
lods
jmp
inc
cmp
stos
int
push
lret
insb
sbb
or
in
xor
aam
out
mov
mov
mov
ss
inc
clc
test
push
or
imul
mov
adc
jmp
xchg
fwait
mov
sbb
idivb
insb
pop
push
ficomps
cmc
aaa
clc
pop
ljmp
add
and
add
js
enter
data16
sub
sub
ss
mov
jae
pop
xor
or
leave
dec
push
adc
mov
jnp
aam
pop
movsb
subb
fisubrl
adc
pop
pop
xchg
ljmp
scas
retw
push
movsl
ja
mov
ret
xchg
xor
in
mov
daa
ja
inc
loope
enter
xor
aas
mov
nop
or
cs
mov
jo
mov
push
push
xor
ret
push
jne
pushf
jg
or
cwtl
movsl
push
aas
je
mov
cmp
pop
mov
xchg
xor
mov
rcl
xlat
sbb
push
repz
push
pop
xchg
xchg
push
ljmp
and
xlat
sbb
into
jmp
movsb
clc
mov
jmp
mov
sbb
ficompl
push
test
dec
sbb
xor
and
sub
les
add
mov
fadds
mov
aas
mov
insb
jecxz
popl
lret
dec
testb
rorl
push
add
nop
cmpsb
mov
addr16
enter
mov
push
xchg
push
cmp
xor
cmc
insl
ja
mov
push
fildll
movsl
loope
stos
mov
sub
jg
jp
or
xlat
pop
test
xchg
xchg
mov
imul
inc
mov
mov
jb
mov
jae
xor
mov
push
inc
aaa
mov
cs
jecxz
push
test
mov
stos
les
in
aas
ljmp
jp
aad
dec
repz
sbb
adc
adc
rclb
pop
inc
xchg
bound
mov
nop
lds
or
popa
jp
das
outsl
incl
hlt
inc
mov
fimull
push
xchg
or
add
cmp
or
inc
add
xor
lds
cld
push
sarb
or
call
sub
flds
lock
cmpsl
push
pop
fisttpll
sub
add
test
mov
les
mov
sahf
test
inc
dec
stos
hlt
neg
sub
push
scas
push
fists
pop
je
or
push
fwait
test
fsubs
mov
jg
aas
push
notb
push
jne
cwtl
fdivr
jge
inc
cmp
push
or
and
xchg
jns
mov
jl
jp
inc
inc
mov
aad
pop
loopne
cmp
adcb
add
or
cs
mov
jo
rcll
cmpl
push
jb
ret
mov
loopne
ret
orb
fs
cli
xlat
ret
scas
cwtl
mov
mov
mov
repz
pop
xor
push
in
out
imul
mov
shrl
adc
cs
dec
adc
in
subl
dec
inc
cs
stc
and
jae
jl
add
sbb
movsb
mov
aam
add
bound
faddl
xor
sbb
add
js,pn
and
mov
sub
pop
ds
pop
dec
jecxz
cmp
dec
adc
and
cmp
fisttpl
push
sti
test
stos
popa
xor
mov
pop
sub
cmp
aam
mov
xchg
outsb
sub
call
enter
add
stc
adcl
fbld
test
add
jmp
into
and
jp
cmp
cmpsl
sbb
fisubs
pop
adc
movsl
jae
fbstp
decb
jmp
clc
aaa
in
adc
in
jnp
lret
cmpsb
xorl
xor
pop
pop
inc
xorb
xor
mov
adc
pop
or
cmpsl
movsw
push
or
adc
addb
imul
cwtl
aad
out
inc
js
lea
ret
jo
or
test
mov
or
adc
or
and
mov
pop
push
jg
push
add
pop
stos
pushl
dec
cmpsl
cwtl
cmpsl
aad
lock
ret
cs
xchg
outsb
out
or
cmp
pop
cwtl
popa
arpl
xorl
push
int
rorb
sub
shll
decl
cs
out
adc
out
pop
rorl
cs
cmp
jecxz
xor
pop
jnp
scas
test
clc
jmp
inc
loop
aam
jmp
enter
sbb
fiadds
testb
test
dec
ljmp
dec
push
js
out
or
cmp
ret
cmp
push
adc
stc
adc
inc
push
push
jo
sbb
stos
call
cmp
mov
insb
stc
mov
lahf
jge
and
push
fisubl
jg
pop
push
ljmp
bound
arpl
ret
cmp
fiadds
xor
testb
lock
or
aad
jnp
pop
adc
mov
mov
mov
mov
dec
push
jp
push
mov
fsubr
mov
popa
fs
adc
push
rol
fs
or
dec
js
orl
daa
sbb
pop
cmc
pop
push
movsl
std
jo
lcall
mov
movsl
pop
orb
test
push
mov
cs
das
lret
out
inc
sub
xor
mov
or
adc
and
push
mov
sub
xor
enter
pop
je
sbb
inc
shr
mov
push
cmp
xchg
push
dec
cwtl
sahf
pop
jg
adc
xchg
lahf
cmpsb
into
loop
into
rcl
loopne
sbb
test
push
xchg
xorl
xor
or
loope
xor
stos
or
xlat
call
in
cmp
sbb
inc
push
and
xchg
dec
add
add
fnstcw
xchg
cld
sub
je
sbb
test
jle
dec
push
sub
in
and
sbb
sbb
sbb
mov
add
push
stos
mov
mov
pop
jne
or
cmp
icebp
mov
int3
push
mov
or
xchg
ret
jb
or
dec
add
push
addb
jp
lods
enter
adc
lock
inc
mov
sbb
stos
mov
fucomi
js
pushl
loop
push
pop
mov
fs
enter
fcomip
push
stc
cli
filds
rorl
and
rcrl
push
popf
fists
leave
jmp
rolb
mov
mov
es
popl
mov
sbb
mov
hlt
mov
ljmp
popf
mov
inc
test
xchg
inc
dec
les
pop
mov
int3
add
mov
leave
and
mov
pop
call
mov
mov
in
ss
sub
jl
cmp
or
sub
nop
xor
xor
fsubr
dec
push
pop
xor
jnp
fcompl
push
jo
repnz
shlb
sbb
add
das
ret
lret
jmp
pusha
mov
mov
mov
mov
pop
lods
or
lcall
inc
or
aam
mov
lock
push
int
push
test
test
jecxz
mov
dec
push
adc
cld
addr16
adcb
and
push
mov
cmp
pop
out
lock
int
ret
pop
fucom
fildll
push
iret
mov
adc
xchg
xchg
dec
inc
jecxz
xlat
lret
jp
orl
pusha
fisttps
and
or
jle
loope
rcll
gs
insl
in
sub
pop
sti
aas
test
push
clc
js
xlat
pop
nop
das
xor
cmp
add
mov
xor
sbb
int
jne
cmpsb
daa
push
jns
lret
inc
in
sbb
adc
mov
jne
push
dec
cmp
and
cli
outsb
inc
jnp
mov
and
loopne
cltd
dec
mov
je
push
adc
pop
ret
cli
mov
orb
mov
test
inc
dec
jmp
mov
divl
fwait
and
mov
mov
push
hlt
mov
shll
mov
mov
loopne
xorb
insb
out
movsl
jg
pusha
enter
mov
mov
or
cmp
inc
int
jg
cltd
and
insl
mov
and
insb
shlb
or
jne
sti
push
jecxz
aad
xchg
jae
lds
call
cmpsb
sbb
sbb
mov
push
in
loope
pop
push
inc
andb
or
mov
stos
xorl
mov
jg
xchg
aad
push
xor
xchg
xor
pop
mov
out
push
push
cmpsb
mov
xlat
push
popa
push
addr16
sbb
push
mov
insl
ja
out
sarb
dec
repnz
stc
xor
inc
xor
mov
in
lcall
stos
pop
push
xor
sbb
cwtl
into
pop
add
inc
push
stos
mov
pop
enter
inc
sbb
push
or
gs
lea
jl
adcl
xchg
jmp
cli
add
and
adc
rcll
leave
insw
fbld
je
dec
push
imul
pop
and
fdivs
push
cwtl
aaa
sub
shl
fisttps
aad
xchg
sub
cmp
testl
and
xchg
add
neg
sub
popf
or
cmpsl
push
enter
insl
dec
jno
cmp
and
push
ret
bound
test
pop
dec
push
movsb
push
push
and
sbb
lret
stos
ja
pop
ret
sarb
mov
pop
fists
call
xchg
imulb
pop
xor
inc
leave
pop
shlb
fstl
dec
fs
std
cmp
nop
adc
xchg
movsl
fwait
or
andb
cli
pusha
pop
push
cmp
xor
cltd
mov
jno
cmp
mov
insb
movsl
test
mov
jnp
and
ss
ror
mov
lcall
xchg
xor
mov
aaa
fcomip
add
or
cwtl
bound
mov
pop
xchg
or
loopne
sub
negl
lahf
call
push
mov
xor
mov
xchg
xor
or
fprem
popa
inc
push
cld
push
xchg
adc
pop
cmpsl
push
icebp
mov
das
mov
pushl
fs
cmc
js
insb
mov
lds
sbb
cmpsl
xor
enter
sbb
mov
fwait
aaa
scas
jo
outsl
out
imul
jecxz
mov
inc
or
fimull
and
jo
out
and
pusha
mov
mov
xchg
les
aas
out
add
fwait
pop
imul
decb
xor
stos
stos
inc
dec
xlat
lds
mov
fisttps
jne
daa
push
or
sbb
pop
cmp
lods
call
add
push
push
jecxz,pn
add
mov
add
adc
out
ss
push
push
lock
add
inc
jo
sti
sbb
push
mov
sub
mov
pop
dec
jg
mov
xor
add
bound
stos
js
filds
test
fcmovb
cmpsl
cltd
mov
dec
push
pop
adc
cmpsb
test
xchg
push
adcl
jnp
std
push
jge
jp
pop
arpl
js
subb
jns
ja
aam
fbstp
and
loope
pop
jp
orb
fcoms
sub
xlat
ret
and
lcall
xor
sub
sub
stos
fisttpll
add
pop
icebp
mov
xchg
ja
add
sbb
mov
fdivrs
pop
or
jbe
aad
sub
mov
mov
mov
notl
shl
fstps
into
push
pushf
jl
add
repnz
lret
mov
leave
push
in
inc
ja
or
js
xchg
pop
fbstp
loope
dec
xor
xchg
pop
ret
inc
int3
fsubl
or
btsl
push
sbb
adc
add
ds
mov
orb
push
test
test
lds
sub
xchg
xchg
movsl
adc
test
mov
and
cli
sbb
mov
add
das
cli
shlb
lcall
sbb
inc
sarl
pop
das
inc
ja
mov
xchg
and
lret
pop
mov
sbb
ret
shlb
les
xor
movsb
testl
mov
mov
movsl
fcoml
mov
repz
xor
or
xchg
aas
std
sbb
and
mov
cmp
out
imul
xor
add
mov
jg
ja
js
jmp
jno
jnp
pop
leave
add
inc
xchg
sub
xor
lret
push
sbb
outsb
xchg
add
sbb
xchg
inc
dec
mov
xchg
push
subb
jp
shrb
mov
lret
fcoms
sub
loop
pop
or
push
dec
adc
dec
inc
lock
adc
sahf
aas
bound
push
adc
lret
cmp
mov
jmp
scas
adc
jg,pn
icebp
push
cltd
in
jnp
or
or
inc
pop
std
loop
dec
stos
andl
push
addb
sbb
pop
xor
xor
mov
pusha
add
sbb
add
push
mov
cmp
add
jge
xchg
cmp
jnp
lahf
orl
cmp
mov
push
cmpsl
xchg
xchg
cmp
mov
enter
pop
cmp
call
lds
dec
inc
les
jmp
ret
lcall
mov
cltd
les
lret
ja
adc
lret
lods
mov
push
xchg
mov
push
pop
fimull
stos
dec
dec
bound
lea
adc
xchg
xchg
pop
jbe
sbb
xchg
lock
arpl
repnz
rclb
inc
int3
scas
clc
scas
fldl
xchg
fcomp
mov
dec
mov
sbb
cmpsb
add
and
cmp
int
inc
xchg
push
cmp
les
insb
and
mov
stc
cmpsb
cs
mov
movsb
ret
push
pop
and
push
push
hlt
inc
mov
xchg
cmp
add
cltd
ljmp
sarl
xor
cmp
movsb
mov
push
mov
or
mov
add
js
sbb
ret
ja
bswap
sub
mov
mov
push
jg
jo
cmc
out
ds
bound
adc
and
adcb
ret
aas
and
insb
dec
adc
out
movsl
xchg
adc
cwtl
xor
or
or
sbb
test
cmp
cmpsb
out
or
out
or
decb
inc
cmp
in
aaa
adc
xor
js
aas
inc
ljmp
shll
pop
jb
sbb
mov
mov
add
xchg
and
jmp
adc
xor
scas
adc
jecxz
in
lods
out
movsb
mov
adc
iret
mov
jmp
mov
mov
insb
mov
or
cmc
arpl
test
push
iret
ljmp
daa
xor
inc
addr16
fnstcw
or
sti
sti
jb
fidivrs
arpl
or
das
cli
jne
xor
aam
cwtl
test
sub
ficompl
bound
outsl
dec
or
mov
mov
loop
or
jg
jmp
test
scas
imul
mov
xor
mov
cmp
incb
inc
ret
sti
in
push
lock
inc
jmp
leave
shll
mov
push
pop
ret
fstl
test
pusha
and
and
rcr
lahf
std
push
mov
dec
sbb
xor
in
int
mov
sti
jno
into
xchg
rolb
or
aad
and
popa
xor
push
subl
adc
add
push
mov
adc
mov
sbb
pop
negl
jbe
das
mov
xor
pushf
sbb
pop
cmp
pop
add
mov
aam
rcrl
xchg
insb
aas
sub
mov
int
push
lea
jbe
imul
test
lods
int3
pop
sub
fsubs
mov
push
sbb
sub
cwtl
gs
je
mov
push
mov
mov
xor
xor
fisubs
sar
or
shll
icebp
pop
lods
dec
ss
bound
add
xor
xchg
or
lods
or
shll
inc
sti
and
jp
mov
inc
inc
loop
or
adc
jb
dec
sbb
or
inc
outsb
inc
push
bound
repz
mov
dec
out
fs
aaa
ja
xchg
sbb
cmp
push
int3
xlat
cld
or
add
push
call
adc
sub
sbb
fst
movsb
std
sti
pop
ret
insl
mov
mov
push
aad
rclb
in
andb
inc
xchg
and
rorl
popa
arpl
xchg
in
or
mov
jbe
cltd
jmp
ret
movsl
or
les
sahf
popa
pop
fldcw
popf
insb
roll
roll
rorb
push
dec
aaa
daa
push
jmp
mov
and
enter
gs
and
dec
sbb
jge
and
imul
addb
mov
sbb
mov
in
or
fldenv
and
adc
jg
pusha
adc
adc
addr16
or
sub
adc
xchg
xchg
adc
mov
xchg
es
pop
xchg
aad
outsb
shll
insb
inc
imul
mov
sub
push
and
icebp
cmp
push
jg
std
jecxz
sbb
gs
sbb
repz
aad
push
and
sbb
jae
pop
xchg
outsb
push
xlat
nop
scas
xor
mulb
subb
sbb
call
mov
inc
push
xchg
xorb
mov
jg
mov
popf
jo
cwtl
int3
jne
data16
jg
xor
pop
and
stc
push
ret
adc
or
and
and
jo
and
rolb
pop
call
pop
pop
loop
sbb
inc
dec
jp
outsl
stos
jnp
int
andl
dec
stc
int3
fildl
fnsetpm(287
loope
mov
xchg
push
mov
fs
enter
ds
out
sahf
pop
shl
and
and
adc
rcll
push
push
sbb
xchg
ret
jno
and
in
inc
sbb
xchg
push
sub
ret
mov
add
mov
lods
jbe
cmp
sbb
or
nop
push
jg
pop
int3
repnz
push
out
ja
push
and
add
fs
aaa
jne
icebp
int
mov
lahf
roll
sub
adc
xor
out
aas
mov
mov
aam
and
and
cmc
jecxz
mov
mov
jo
scas
inc
push
jne
into
lcall
inc
fisubrs
xor
mov
adc
or
mov
lea
mov
out
push
clc
andb
div
ds
add
decb
push
ret
ret
adc
mov
jle
aad
and
rol
xchg
and
or
or
insl
aad
ficoml
push
sarb
js
lahf
mov
mov
xor
cmp
or
adcl
stos
pop
fsts
rcrl
in
mov
add
stos
lods
hlt
jl
cs
sub
mov
movsb
push
ret
aam
out
test
or
test
inc
sbb
and
ret
pushf
sbb
ret
cmp
repnz
inc
xchg
dec
aad
sbb
mov
dec
enter
cmp
or
sahf
test
mov
test
and
out
outsl
fidivrs
fistps
sbb
inc
and
in
testl
or
repz
add
sbb
sti
pop
cltd
sub
pop
stos
test
xchg
jp
mov
out
sbb
sti
push
cmp
adc
mov
fwait
mov
inc
adcb
cmp
sub
add
dec
cmp
jae
nop
and
mov
dec
push
mov
pop
jp
cmp
cmp
jbe
idivl
test
sub
out
test
mov
sub
in
sub
and
aam
daa
jge
bound
xchg
icebp
mov
sub
jg
fdivr
mov
imul
clc
mov
pop
pop
out
xchg
lahf
cld
inc
inc
and
push
ljmp
das
andl
add
mov
addl
add
orl
cli
leave
xor
or
cmc
mov
lea
or
sbb
fidivl
cmp
inc
inc
and
xor
lds
movsb
push
insb
cmp
pop
pop
rclb
aas
adc
and
ds
cmp
enter
push
fsub
xchg
mov
out
lcall
or
mov
cmp
hlt
repnz
lfs
and
mov
mov
push
inc
mov
out
insb
push
test
xchg
gs
fimuls
jnp
push
sub
dec
sub
cmp
mov
pop
adc
outsl
adc
or
push
inc
aam
or
rcr
loope,pt
dec
icebp
or
mov
adc
int3
aas
in
xor
stc
jb
scas
mov
xchg
cmp
push
cli
mov
cld
testl
push
dec
sub
inc
and
daa
mov
pop
push
dec
fwait
xchg
push
pop
inc
addr16
pop
dec
sub
andb
mov
dec
bswap
imul
mov
dec
add
push
or
sbb
push
stos
repnz
add
add
jne
push
xor
push
inc
sbb
out
pop
jmp
les
pop
js
incb
and
or
repnz
enter
mov
insb
shrl
jge
pop
aad
xor
push
xchg
lds
jge
push
xchg
mov
movsl
fistpl
stos
repnz
and
adc
and
sahf
rol
xlat
jg
inc
sahf
jp
jno
pop
push
adc
adc
ret
push
xor
mov
std
sti
pop
aas
data16
adc
jne
scas
or
push
enter
mov
sub
leave
adc
pop
fnstcw
js
and
jmp
mov
or
loopne
arpl
mov
xor
call
adc
mov
xor
jge
and
arpl
pop
add
cmp
scas
call
xor
or
push
pop
cmp
fcoml
xor
push
cmp
test
fstps
mov
cmp
jo
ja
mov
inc
lods
adc
inc
and
je
inc
add
aaa
testb
adc
daa
push
mov
xchg
sbb
shlb
subb
insl
adc
pop
sub
bound
jl
dec
or
cmc
dec
add
push
add
and
inc
sub
sub
cmpsl
cwtl
pop
pop
adc
scas
test
cli
shll
mov
sbb
cmp
pop
dec
pop
test
movsb
rcll
into
sahf
ja
push
les
sub
xor
ret
adc
add
push
loop
or
mov
in
xchg
jl
jo
and
sbb
ss
iret
mov
jp
inc
negl
jge
mov
fmulp
inc
xchg
sub
push
inc
negl
adc
outsb
adc
mov
stos
std
repnz
imulb
psubusw
dec
push
fstp
inc
push
fneni(8087
cmc
push
jge
rorb
mov
jp
ret
cmpl
sahf
xchg
push
lds
stos
not
ror
out
incl
xlat
sahf
nop
jae
inc
mov
inc
mov
lds
sbbl
aam
dec
push
inc
divl
cmp
cmpsb
mov
pop
lds
push
cli
int
xchg
adc
or
scas
jg
adc
mov
cmp
pushf
add
inc
icebp
out
mov
xchg
cs
dec
xlat
or
movsl
std
cld
insb
std
ja
ret
fucomip
std
fsubrs
sub
ret
sbb
popa
ljmp
cmp
mov
xor
incb
inc
push
ja
rcr
repz
rol
sti
scas
fimuls
int
stc
ja
rolb
push
xchg
dec
sbb
sbb
or
xor
in
push
addr16
push
adc
mov
inc
negb
and
movsl
add
jmp
and
stos
lods
xor
push
aaa
daa
xchg
add
sbb
push
push
mov
scas
jp
enter
xor
gs
dec
pop
iret
rorl
sub
loop
pop
adc
dec
jle
movsb
xchg
aas
mov
cwtl
fcmovne
lods
lahf
imull
pop
jb
pop
clc
insl
mov
je
mov
mov
enter
ret
inc
bound
inc
adc
mov
je
sub
fists
mov
nop
lods
into
cmp
in
xor
ja
add
fisttps
popa
data16
push
mov
outsb
xor
pop
orl
jecxz
push
or
in
nop
ljmp
outsl
push
add
pop
mov
popa
data16
push
sub
movsl
ds
repnz
mov
stc
fcoms
add
mov
push
sbb
fcoml
popf
xchg
pop
imul
bound
cmp
fucomi
scas
jno
mov
push
add
dec
loopne
arpl
pop
dec
aam
and
mov
sbb
push
ja
roll
mov
arpl
ljmp
or
cmp
or
add
cmpsl
cmp
mov
hlt
in
mov
dec
sub
lock
add
xchg
xchg
pop
ret
bound
lret
in
adc
std
and
aaa
mov
sbb
dec
push
mov
les
adc
xchg
int
pop
jo
rol
inc
xor
push
pop
lods
sub
out
es
lret
or
test
lds
or
arpl
mov
mov
dec
movsl
pop
lcall
sub
inc
and
sahf
fisubl
mov
xor
pop
fcomps
movsl
inc
sbb
in
cs
mov
call
pop
dec
outsb
inc
mov
sub
mov
sbb
xor
sub
and
cs
or
pop
pop
xlat
outsl
iret
imul
jbe
rolb
repz
ss
bound
lcall
cltd
sbb
inc
sub
xor
mov
inc
adc
out
xchg
push
inc
jne
clc
sbb
xchg
dec
and
hlt
shll
cmc
mov
int3
dec
test
pop
pop
fst
test
inc
and
xchg
lds
iret
lcall
test
scas
or
loopne
xor
adc
loop
enter
mov
neg
cld
enter
out
inc
and
add
and
aaa
push
push
ret
cmp
leave
ret
jmp
test
xor
adcl
xor
inc
cwtl
pop
jp
pop
outsl
lret
stc
adc
call
cltd
xor
jne
mov
sub
test
pusha
xchg
roll
adc
mov
jge
jns
jne
jp
adc
jmp
in
sub
test
jmp
mov
inc
add
leave
pop
fwait
mov
fadds
test
and
loope
jo
add
pop
loopne
dec
popl
push
mov
loopne
jle
loope
cmpsl
xchg
aam
out
push
xor
inc
or
imul
divb
in
cpuid
movl
mov
clc
push
sbb
dec
bound
mov
out
popa
cmpsl
pop
popf
or
jmp
dec
jecxz
insl
lods
mov
out
mov
xchg
enter
js
fcomps
jmp
jle
push
pop
adc
mov
stos
mov
mov
xor
mov
std
push
cltd
insl
mov
dec
pop
sti
into
jo
or
movsl
adc
mov
add
push
mov
repz
mov
or
cmp
sti
cmc
fstps
push
mov
mov
ja
push
mov
mov
or
aaa
aam
pop
ret
push
aaa
stos
pop
ss
mov
xor
sub
insb
fs
pop
bnd
mov
mov
push
mov
dec
out
mov
mov
ss
lret
cmp
pop
xor
push
inc
ss
movsb
fxtract
adc
sbb
sub
sub
xor
cli
insl
cs
xchg
fdivrs
jle
lret
in
push
sarl
repnz
js
call
dec
aad
dec
add
or
test
ds
adc
lds
test
les
mov
pop
js
adc
data16
dec
stc
cmp
jbe
xchg
or
sbb
push
or
adc
and
cmpb
test
lahf
push
push
sbb
cld
cmp
and
fs
push
jge
mov
lods
dec
cmpb
mov
push
lcall
test
and
cmp
dec
mov
test
push
mov
fwait
ret
stos
fisttpl
bound
fstpt
cwtl
ror
loope
mov
inc
xchg
sub
mov
adc
jnp
lcall
cmp
sub
insl
sbb
and
in
sub
xchg
dec
fs
fs
adc
sarb
out
and
in
push
xchg
cmpsb
lods
gs
xchg
outsl
out
pusha
das
movb
mov
jle
std
or
vandps
pop
sub
sbb
lods
outsb
xorb
mov
push
dec
scas
loope
mov
xchg
cmp
adc
dec
lock
cs
aas
mov
lock
outsb
stos
scas
insl
test
insl
mov
xchg
inc
xor
out
out
adc
jo
std
inc
jecxz
stos
outsl
enter
aas
jnp
xchg
daa
sbb
push
popa
adc
sub
and
and
aam
lret
je
cmpsb
lahf
push
sub
jne
sbbb
clc
inc
cs
push
ret
or
lods
adc
out
mov
addl
cwtl
cmpsb
dec
arpl
xchg
andb
scas
insl
pop
mov
out
adc
push
out
sub
jecxz
ljmp
jmp
xlat
or
roll
or
sub
cld
mov
mov
and
xchg
outsb
stos
loop
cmp
arpl
sub
mov
or
or
push
test
inc
inc
jp
stc
inc
inc
and
jmp
int3
mov
push
mov
pop
aam
rclb
sub
mov
aaa
push
mov
iret
into
ret
out
cmp
push
inc
dec
cltd
fldl
push
daa
cmc
push
or
mov
mov
pop
sub
int3
xchg
mull
dec
jecxz
std
xchg
aas
mov
push
xor
cmpsl
out
sub
pop
divl
mov
scas
inc
ja
cmp
in
mov
or
cmpsb
popf
loope
inc
imul
rcl
or
loop
ja
push
cmpsb
inc
js
cmp
pop
push
int
xor
xchg
push
scas
mov
adc
ja
xchg
popf
cmp
mov
mov
repnz
lret
inc
xor
and
fstl
inc
sub
cmp
mov
cmpl
in
cmc
xor
cmp
dec
ret
cmc
rolb
mov
test
les
sti
pop
test
shlb
inc
jb
sub
mov
in
mov
aad
mov
test
adc
dec
int
mov
jnp
and
adc
xchg
in
and
lea
mov
cmp
stos
inc
hlt
repz
test
cs
stos
or
enter
push
pop
or
adc
push
movb
aam
aaa
or
push
int3
sbb
lods
xchg
fs
pop
xor
or
jnp
adc
xor
mov
sub
sbb
mov
sbb
dec
inc
fs
mov
idivl
mov
or
xchg
mov
cld
pop
aam
out
pop
pop
pop
rorl
add
imull
ds
pop
or
fucom
add
iret
mov
sbb
ja
int3
stos
add
sbb
cwtl
ret
dec
loopne
lahf
shlb
addl
dec
add
mov
sbbb
sub
pop
and
add
loop
fstps
mov
in
cltd
add
fnstenv
in
xchg
es
adc
or
mov
jno
stos
mov
adc
jp
in
std
subb
movsb
repz
std
pop
and
inc
push
pop
xor
mov
xchg
add
cmpsb
loop
fmuls
inc
inc
sub
xor
jno
pop
mov
jb
push
mov
scas
jecxz
fcompl
test
mov
fcompl
popa
mov
mov
test
jl
or
push
clc
mov
add
sahf
stos
mov
adc
rolb
jg
xor
into
adc
cwtl
rcl
pop
cmp
adc
push
lahf
lds
fcompl
jnp
fs
scas
dec
icebp
sahf
pop
stc
inc
ret
adc
mov
pop
icebp
and
sub
adc
inc
test
loop
pusha
jl
cmp
outsb
shlb
or
imul
in
inc
mov
lahf
shlb
movsb
mov
pop
inc
das
call
jne
adc
ret
mov
dec
movsb
in
mov
sti
jb
lcall
xchg
push
and
pop
dec
xchg
lcall
xor
aad
in
cmpsl
repz
outsb
jge
add
jecxz
mov
out
into
pop
jnp
mov
or
push
jecxz
lea
ret
lret
loop
test
add
lret
int
pop
gs
pop
test
aam
enter
call
andl
ds
sbb
xchg
or
ret
push
cs
xchg
out
inc
leave
fists
inc
mov
push
inc
cmpsb
adc
mov
xchg
gs
pop
nop
xor
sub
mov
test
ret
shlb
test
dec
mov
or
bnd
mov
jbe
into
mov
stc
cmc
repnz
mov
add
and
sbb
call
pop
sub
sub
das
lods
xchg
add
iret
mov
aaa
cmp
push
pop
push
cld
and
jge
jae
aaa
pop
sbb
mov
arpl
jl
bound
or
sub
hlt
or
in
push
inc
daa
xor
stos
xchg
push
xchg
xor
orl
jge
lods
jnp
sbb
adc
mov
adc
popf
xchg
movsb
pop
sub
lret
inc
and
inc
dec
ja
sbb
test
cwtl
test
shl
shll
jg
xor
shll
or
mov
adc
add
pop
int
add
add
or
dec
sub
xor
shll
xor
dec
sbb
dec
rolb
dec
mov
pushf
imul
imul
rol
fxam
or
clc
pop
mov
xchg
and
subb
mov
es
movsb
ffreep
dec
je
das
adcb
mov
js
int
push
add
shll
fs
fisubl
push
sub
aaa
adc
mov
pushf
push
ret
pop
daa
mov
jbe
sti
mov
into
jbe
lods
sub
add
mov
xchg
push
and
sub
adc
fisttpl
jno
sbb
je
arpl
ja
pusha
xorl
and
shll
jae
xor
in
sahf
dec
jl
or
cmpsb
dec
inc
lcall
lcall
fwait
sub
inc
sub
shl
shll
mov
frstor
lock
in
dec
pop
cmp
repz
shrb
xchg
pop
jecxz
outsl
cmp
adc
mov
ret
cld
pop
outsb
jo
mov
push
dec
dec
adc
iret
nop
pop
jge
push
dec
nop
adc
call
inc
dec
jns
adc
pop
fs
push
dec
testb
jmp
lock
xchg
push
dec
sbb
xchg
xchg
aam
cmp
mov
add
pushf
aad
mov
jl
mov
sub
xchg
sbb
inc
adc
fcoms
cwtl
fsts
lods
aad
data16
and
enter
dec
jb
sub
ret
adc
lcall
ljmp
push
xlat
push
ret
cvtps2pi
loope
mov
jne
stos
mov
cmp
insl
unpckhps
add
cmp
ret
and
xchg
std
fcompl
dec
push
mov
test
push
push
and
dec
mov
or
scas
inc
lods
shll
cs
in
inc
adc
test
lahf
lret
jle
fwait
cwtl
loop
roll
or
test
test
inc
pop
lea
scas
push
xor
je
and
xchg
gs
je
jecxz
popf
pop
movsb
mov
dec
inc
call
mov
lea
xchg
inc
add
sti
dec
fsubrs
add
lods
jmp
aam
rcrb
out
loop
mov
or
pop
inc
sbb
int3
and
cmpsl
xor
sub
sub
mov
lods
add
jmp
and
stos
jbe
lea
int
in
mov
mov
adc
inc
sbb
fwait
push
das
pop
sbb
je
push
loopne
ret
pop
inc
lods
subb
mov
push
xor
in
lret
xchg
fwait
cwtl
push
mov
xchg
test
clc
mov
and
sti
mov
test
subb
les
lahf
insb
adc
mov
lcall
jmp
push
push
iret
decb
in
imul
mov
cmpsl
or
xchg
lret
push
pop
mov
mov
xor
int
xchg
cmp
jb
cs
leave
mov
scas
mov
push
std
ss
in
push
lret
scas
mov
stos
mov
pusha
jo
cmc
mov
cli
add
in
dec
mov
mov
pop
sbb
arpl
mov
push
loop
sbb
and
out
inc
or
mov
movsl
jnp
mull
push
dec
sbb
lcall
mov
test
add
js
clc
xor
or
lock
or
inc
inc
or
imul
sub
shrb
sbb
fisubrs
xor
leave
popf
pop
jns
mov
andb
cmp
outsb
pop
scas
insb
jmp
test
jg
mov
adc
and
and
jmp
push
cltd
sti
mov
pop
inc
movsb
out
lea
mov
xor
and
stos
inc
enter
orl
mov
cmc
pop
scas
add
or
addb
sahf
es
jnp
enter
xchg
bound
fs
aas
decl
in
pop
push
mov
notl
push
xor
lock
push
or
push
inc
jno
adc
xchg
dec
loop
and
cmc
and
sbb
cmp
lods
lods
sbb
cs
int3
roll
jae
std
mov
xchg
cmc
mov
sub
lret
inc
fs
loope
cs
dec
movsb
imulb
test
mov
push
sub
dec
or
bound
xchg
inc
cmp
lahf
gs
out
mov
mov
out
pop
test
dec
popf
popa
inc
push
cli
mov
inc
ljmp
movsb
icebp
lret
lock
arpl
jmp
mov
or
iret
paddd
mov
add
inc
pusha
fdivrp
adcb
xchg
sbb
pop
pop
inc
enter
and
arpl
mov
sub
dec
stos
data16
pop
mov
jno
in
lock
hlt
xor
mov
popf
jns
mov
adc
je
gs
mov
or
push
inc
cmp
insl
or
loopne
sub
push
lock
jbe
cmp
int3
dec
pop
dec
xchg
sub
andb
je
mov
or
cltd
and
and
lods
or
xchg
mov
add
or
inc
xchg
jo
mov
mov
nop
sub
xor
push
fisubrl
push
push
fwait
jp
xchg
pushf
and
or
mov
add
cld
mov
outsb
sub
rorl
or
popf
xchg
cltd
push
and
adc
mov
aad
jle
jb
ret
shrl
mov
sbb
js
adc
jnp
aam
add
les
call
xlat
xor
in
and
adc
push
pop
dec
mov
call
push
mov
mov
pop
add
cs
mov
lret
jecxz
inc
dec
nop
lret
leave
lds
lret
cmp
leave
adc
out
into
test
mov
push
iret
xchg
sbb
push
fdivs
jl
dec
fwait
add
adc
push
jns
pushf
sub
in
rolb
popf
inc
and
mov
xchg
fidivrl
imul
add
sbb
dec
lret
mov
jbe
push
jno
xchg
fimuls
sti
loope
xor
or
mov
insb
pop
add
shlb
xor
leave
pop
dec
outsl
mov
jae
jae
pop
sbb
adc
cmpsb
sub
subb
xchg
repnz
add
dec
popf
fidivrs
push
aas
pop
cs
adc
mov
lds
aam
scas
sbb
xchg
or
imul
rolb
sbb
jae
sbb
js
test
xchg
jb
mov
outsb
and
jle
popa
add
xchg
cs
jmp
jmp
mov
or
cwtl
push
push
xor
sbb
or
int3
push
inc
xor
mov
sub
ds
jo
test
pusha
mov
sub
cltd
ljmp
jecxz
mov
add
and
push
mov
sbbb
test
dec
test
sub
les
xor
sub
mov
jp
pop
dec
daa
out
or
rorb
dec
mov
hlt
data16
fidivrs
add
movsb
sbb
dec
inc
sub
mov
js
cmpsb
mov
int
push
push
insl
pop
push
jecxz
andl
popf
jnp
xchg
insl
add
lahf
fnsave
add
daa
and
mov
out
xor
repnz
sub
das
mov
dec
stos
lea
sub
mov
rolb
and
mov
pop
scas
xchg
fnstcw
clc
and
jl
or
inc
and
cmpsl
in
add
cmpb
xlat
xchg
dec
ret
or
int
lret
ret
cmp
jnp
movsl
pop
inc
outsl
inc
xor
adc
xchg
scas
pop
pop
mov
and
sbb
rolb
movsl
jae
stos
jp
leave
mov
mov
pop
adc
xchg
popa
mov
testl
dec
fsubr
mov
xchg
int3
and
cld
inc
mov
int
add
je
mov
mov
std
or
inc
push
loop
inc
pop
lods
loop
std
mov
rorb
aad
pop
xchg
sub
ja
dec
and
xchg
cli
fwait
gs
sbbl
jle
nop
push
pop
xor
fldenv
sub
ljmp
subb
mov
and
push
jne
push
xchg
fildl
sti
sub
in
enter
mov
add
aas
push
add
lods
in
jb
ss
fsubrl
xchg
cmp
ret
mov
shlb
outsb
rorb
orl
rolb
cli
or
sub
aad
jg
pop
jle
dec
test
dec
cmp
jp
adc
bound
arpl
or
fldcw
dec
mov
jo
sub
add
popf
dec
adc
and
fwait
pop
inc
and
das
addb
jmp
jns
mov
mov
int
xchg
out
push
mov
sbb
cmpsb
jl
jne
cmp
xchg
cltd
adc
mov
int
dec
scas
sahf
pop
mov
add
sub
or
dec
ret
adc
or
add
or
cmp
xor
std
adc
jecxz
fdivrl
ds
aam
test
push
jbe
push
mov
and
sub
inc
xor
data16
push
fidivl
addr16
jl
outsb
adc
rcr
mov
lcall
popf
mov
sub
lock
push
adc
jbe
mov
mov
or
cmp
rcl
add
pop
insb
repz
mov
inc
lahf
pop
cmp
rcll
jmp
int
jecxz
or
mov
daa
lods
adc
cmpsl
sub
xchg
pop
test
cs
or
scas
inc
or
das
mov
sti
jnp
jecxz
dec
repz
into
xchg
je
cmc
xlat
test
int
adc
inc
or
or
push
and
data16
clc
addr16
jnp
inc
push
ljmp
je
fs
imul
sti
imul
testb
jns
aas
test
push
movsb
ret
and
mov
pop
lds
lea
pop
mov
add
hlt
bound
in
push
jnp
repnz
imul
int
push
fst
sbb
push
pop
sbb
aad
cwtl
push
xor
inc
add
push
mov
ja
adc
xor
mov
jb
mov
fwait
sbb
pop
jle
xchg
adc
inc
fsubl
int
mov
push
cmc
imul
and
xchg
in
test
jp
jg
ret
in
adc
jecxz
push
add
test
sbb
jns
jle
ljmp
or
mov
inc
push
loop
rorb
pop
push
dec
pop
and
mov
push
push
dec
fiadds
fadds
push
icebp
cmp
sbb
xchg
das
push
push
push
outsb
in
jmp
test
popl
push
sbb
mov
or
sbb
sbb
push
std
adc
cmp
pcmpgtw
hlt
cld
inc
lock
inc
daa
push
lods
and
inc
cwtl
out
adc
cmovbe
sahf
aas
lea
out
test
popa
leave
mov
and
cltd
sub
pop
int
mov
addl
and
sbb
in
sub
fcomps
fwait
cmp
inc
push
repnz
lret
mov
sub
jg
hlt
push
jne
dec
jp
inc
hlt
les
push
jnp
pop
insb
mov
xorb
pop
test
out
xchg
mov
arpl
ja
outsb
lds
sti
rcrl
jbe
adc
sub
or
push
pop
pop
cli
stos
mov
dec
sbb
gs
jbe
lock
cmpsb
aas
inc
pmulhw
icebp
daa
push
xchg
dec
test
sahf
bnd
dec
in
and
cmp
jmp
add
aas
sbb
add
aam
dec
nop
mov
or
ret
push
adc
push
inc
cwtl
and
cmp
sub
imul
dec
jg
hlt
push
inc
sbb
mov
push
hlt
cmp
shll
add
or
pop
imulb
cmc
add
and
sub
lds
add
js
adc
scas
pop
ja
pop
clc
inc
mov
cmp
addr16
push
in
shl
out
jne
out
test
pop
dec
pop
cmp
pop
xor
enter
dec
push
push
sti
rorl
rcrl
inc
push
mov
mov
pop
std
out
mov
pop
push
xor
std
lahf
fistps
jecxz
insb
mov
mov
mov
pop
push
jnp
jg
adc
jecxz
add
out
inc
cmp
cmp
jnp
jecxz
mov
xchg
cs
push
jle
fistps
cmc
add
stc
sbb
pop
andl
sub
pop
jns
inc
repz
test
fs
mov
inc
cmp
clc
adc
fxch
push
sub
lret
test
adc
add
mov
add
xchg
cmc
int
or
lock
popa
or
popa
add
or
cmp
dec
push
push
jns
or
mov
test
jae
das
cmp
pop
mov
cmpb
jg
mov
fiaddl
mov
pop
cmpsb
fistpll
fstl
nop
or
ret
bound
lea
outsl
push
sahf
mov
in
repz
xor
cmp
loop
xlat
dec
daa
outsl
imul
fcmovbe
adc
test
push
mov
sub
movsb
or
pop
jbe
mov
stos
bound
es
ja
adc
mov
jno
pop
adc
arpl
cmp
loopne
insl
loop
rcrb
mov
pusha
mov
ret
add
or
movsl
pushf
inc
mov
loopne
ficoms
arpl
mov
jmp
sub
sub
inc
lea
dec
sub
xchg
dec
adc
inc
nop
hlt
stos
add
dec
out
dec
or
gs
xlat
pop
test
mov
icebp
cs
addr16
mov
xchg
lods
mov
stos
js
push
inc
bound
fsubs
add
jo
push
clc
in
gs
ljmp
push
mov
scas
adc
stos
mov
out
add
add
jg
mov
pushl
loope
jbe
cmp
aas
xchg
int3
int
das
jo
int3
aas
pop
inc
mulb
push
fcmovbe
mov
std
dec
mov
sbb
push
stos
out
or
enter
xchg
sub
icebp
and
xchg
out
add
lcall
leave
or
out
rorl
cs
std
pop
bswap
xchg
es
cmp
cmc
scas
mov
push
loop
lahf
lock
cmp
lods
mov
adc
xor
push
test
lods
sbb
mov
mov
add
mov
push
loopne
push
cli
stc
repnz
push
sbb
or
sti
cs
or
mov
mov
pop
or
inc
gs
ror
out
add
add
aad
jge
push
ljmp
sbb
in
pop
inc
and
sub
shrb
mov
popf
int3
cmp
push
mov
mov
pop
or
add
mov
inc
push
jg
and
push
mov
jb
cmpb
adc
aad
sub
pop
push
xor
jae
test
mov
les
and
das
addr16
cmc
pop
arpl
repnz
fwait
data16
lds
lcall
vandnpd
xchg
sbb
lock
sti
orb
paddw
int
aad
lret
xchg
fdivl
jo
xchg
jg
cmp
mov
pop
nop
shl
movsl
add
movsl
lock
and
fdiv
dec
stos
mov
out
pop
cmp
lock
jae
lahf
jno
jge
adc
sub
push
cmc
jecxz
cmp
mov
sti
and
les
add
xor
lahf
scas
push
test
xchg
test
in
iret
xchg
jns
inc
sub
out
out
mov
scas
cmpb
mov
jle
ss
scas
out
inc
roll
outsb
pop
jmp
dec
xor
sbb
add
or
popf
pop
sub
push
ret
mov
andl
lahf
jno
sub
enter
xchg
std
adc
push
fwait
pop
in
lock
shl
ret
and
std
push
subl
mov
add
inc
dec
mov
sub
fsubs
xchg
int3
and
dec
xchg
dec
and
and
xchg
xor
outsb
mov
cmc
jno
daa
dec
aad
cmpsl
fnstcw
and
inc
loopne
adc
push
lods
ret
inc
in
loopne
and
fnstcw
jo
add
fstl
mov
fidivl
xlat
filds
add
push
adc
icebp
insl
sbb
or
push
les
cmc
and
aam
scas
fstl
mov
xor
sbb
mov
jl
xorb
call
nop
scas
cmp
dec
jae
mov
push
movb
shl
sub
int3
xchg
xchg
push
xchg
jns
jbe
mov
mov
cwtl
ss
jne
or
cli
cmpsl
sti
pop
jnp
sub
push
xor
test
stc
cwtl
mov
das
jge
mov
push
mov
mov
mov
pop
jae
jne
aam
sbb
pop
adc
jle
and
cld
mov
stos
pop
sub
mov
repz
jno
pop
in
mov
ds
mov
je
add
push
out
movsb
sbb
fs
test
xor
orl
inc
ds
push
push
mov
hlt
je
or
repnz
addb
push
scas
dec
loop
sbb
sbb
fisubrs
out
mov
rol
inc
aad
xor
mov
xor
jo
xor
xor
leave
lods
inc
or
hlt
dec
ret
and
imul
popl
cmp
divb
jge
clc
addb
pop
push
push
stos
les
ds
std
and
cltd
rcll
shlb
add
shlb
cwtl
push
dec
xchg
jge
aad
jo
test
and
push
sbb
push
push
sbb
lds
push
in
adc
jecxz
pop
xchg
mov
vrsqrtss
cmp
outsb
test
mov
mov
sbbb
jno
dec
out
mov
mov
popa
enter
jge
in
je
mov
ret
pop
insb
mov
les
lods
aas
popa
fnstsw
das
sti
adc
or
cwtl
loope
lahf
jle
pop
arpl
ss
pop
dec
lods
xchg
aaa
inc
jmp
push
insb
adc
or
aam
jge
sbbl
and
mov
jb
cld
adc
sub
fsubrp
in
rcrb
xchg
movsl
ljmp
push
test
jge
and
pushf
or
push
xchg
sub
pop
jne
std
pusha
popa
aad
out
xor
scas
jg
call
xchg
sub
lods
cld
popa
add
jg
jecxz
dec
mov
arpl
xlat
push
js
loop
nop
andb
daa
imul
movsl
push
stos
ja
xlat
movb
cmp
ds
out
into
popa
adcb
mov
aam
aam
addr16
enter
inc
dec
data16
mov
push
dec
adc
xor
packuswb
out
lds
add
imul
push
je
jle
nop
fmull
nop
enter
jge
sub
mov
mov
jne
ret
lock
test
adc
push
lahf
fstp
movsl
adc
insb
pop
and
popf
xchg
cmp
lock
adc
lea
cmpsl
dec
call
enter
xor
sbb
jae
jne
adc
sub
xchg
loopne
push
sub
add
ret
lods
adc
or
jnp
scas
test
adc
rolb
imul
sub
imul
mov
pop
and
std
sub
and
and
jae
mov
push
mov
mov
dec
inc
das
mov
inc
icebp
mov
movsb
mov
sub
inc
jne
mov
jge
cltd
cmpb
mov
mov
push
adc
fiaddl
or
loope
push
lret
ss
mov
xchg
adc
outsl
out
jno
insb
mov
sbb
mov
pop
or
aaa
out
int3
mov
jns,pn
fidivs
adc
jl
cmp
sbb
mov
cs
js
lods
cltd
lods
cld
pop
scas
cmp
in
mov
dec
mov
jg
pop
in
hlt
outsl
and
mov
movsb
pop
mov
test
xlat
dec
out
test
mov
shll
movsb
cmpsl
jnp
jne
test
fmull
ss
sbb
cmp
and
stos
pop
mov
nop
pop
fs
mov
dec
cmp
jmp
jnp
bnd
je
icebp
cmc
jl
jnp
movsb
inc
addl
xchg
call
lea
negb
cld
pop
cmp
rcll
sub
ds
std
push
push
loope
loope
mov
xchg
repz
mov
lret
cmp
mov
stc
mov
mov
jge
xor
jmp
pop
sbb
push
mov
cli
xchg
sub
ja
xlat
sub
les
inc
xchg
inc
dec
jmp
and
add
rolb
lcall
inc
cmpl
icebp
adc
js
mov
les
mov
inc
divb
popf
movsb
inc
enter
fsts
pop
push
pop
enter
flds
test
enter
sbb
mov
jno
jp
or
data16
cmc
out
push
gs
fmull
push
inc
les
sbb
xchg
mov
lret
push
mov
arpl
or
push
movsl
loop
adc
mov
outsb
lahf
outsb
jle
test
outsb
popa
adc
sub
ret
inc
jge
stos
scas
mov
mov
lret
add
test
sub
mov
mov
jae
jo
popf
mov
push
or
adc
fisubrs
and
popa
shrb
mov
lahf
cwtl
adc
mov
cmp
in
jmp
push
std
notl
fiadds
mov
and
adc
popa
cmp
sbb
dec
cmc
insb
mov
lahf
sbb
gs
mov
sub
bound
mov
je
or
in
hlt
xor
filds
lock
xchg
jp
lahf
mov
insb
mov
ret
adc
pop
jnp
xchg
cli
loopne
and
mov
fisubs
push
inc
cwtl
int
push
int3
mov
clc
push
dec
ljmp
leave
xchg
je
js
push
scas
mov
mov
push
mov
xor
or
insl
add
aad
jecxz
pop
cltd
adc
and
mov
filds
hlt
push
xchg
mov
lods
test
test
movsl
xor
adc
cmp
out
scas
push
cmp
fadds
test
cmp
loopne
or
lret
outsb
xchg
jnp
and
or
xchg
ss
xor
mov
stos
pop
xlat
and
mov
adc
dec
loopne
push
mov
xchg
push
rcll
sub
jbe
adc
adc
lock
xchg
xorl
or
ja
mov
and
sbb
sbb
push
sahf
cmp
adc
orb
lret
xor
clc
movsl
push
sub
xor
not
popf
mov
dec
push
scas
stos
push
int3
adc
push
push
adc
and
popa
es
rol
sar
push
es
bound
mov
jbe
jle
popa
inc
mov
popa
cmp
int3
inc
gs
outsl
inc
fdivrl
insb
mov
mov
and
dec
loop
adc
pop
movsl
cs
jecxz
xor
lods
sub
push
je
mov
pusha
add
fstpt
pop
xor
pop
or
add
and
in
cwtl
sbb
sbb
cld
sbb
sbb
or
mov
mov
cmp
lcall
lcall
dec
pop
jae
mov
subl
mov
pusha
fcmovb
dec
fs
push
cwtl
inc
mov
in
call
xchg
lret
rorb
or
aas
push
insl
scas
xchg
mov
cmp
arpl
adc
jmp
sti
jb
or
movb
test
or
adc
aaa
rcrl
xor
and
xor
mov
xor
stc
jl
test
mov
sbbl
inc
std
repnz
sub
jae
jp
das
and
pop
mov
dec
into
cld
or
aas
fcmove
mov
call
cli
adc
adc
sub
xchg
pop
daa
data16
or
and
addr16
sbb
sbbl
lret
andl
adc
xor
loop
jnp
sub
push
or
insb
leave
enter
mov
aas
add
sbb
inc
mov
lahf
test
sti
jp
push
pop
push
leave
adc
out
or
cmp
xchg
ds
pop
pop
lcall
test
lods
pop
andl
pop
xchg
mov
aas
and
out
xchg
cs
cmp
mov
mov
mov
sub
xor
mov
int
mov
inc
lods
add
stos
cltd
lods
aam
repnz
aad
xchg
inc
adc
adc
fists
mov
repnz
rclb
jne
mov
mov
popf
xchg
ljmp
out
and
sbb
cmp
dec
insb
push
xchg
ljmp
shlb
xchg
push
xor
subl
fildl
push
push
and
cli
test
lret
xor
in
push
jp
icebp
adc
stos
sarb
fs
adc
cli
cmp
movsl
dec
pop
fstl
ret
cmp
dec
cld
or
sbb
mov
jmp
into
sub
jl
mov
inc
and
pop
pusha
rcrl
mov
jmp
jl
fcomps
mov
dec
test
jp
repz
or
imul
in
push
pop
mov
fiaddl
xchg
pop
mov
scas
nop
insl
mov
and
insb
jle
jg
xchg
sbb
lock
adc
cmpsb
movsl
idivl
setns
sub
push
arpl
jmp
add
mov
daa
xor
cmpsb
and
sbb
bound
pop
pop
outsb
xchg
cmpb
mov
ffreep
push
outsl
push
mov
jno
pusha
sbb
or
cmp
aad
aas
cs
ljmp
aad
xchg
add
lcall
and
adc
lock
das
xchg
popf
stos
mov
stos
mov
les
fwait
jp
dec
hlt
arpl
sbb
popa
imull
push
pop
sbb
sbb
addr16
outsl
shr
sbb
mov
or
stc
rorl
testl
jno
out
xchg
testl
icebp
push
xchg
jmp
fsubl
rol
inc
movsl
test
cmp
je
mov
cld
push
scas
sbb
rol
ljmp
jnp
jmp
xchg
je
test
mov
mov
call
pop
iret
std
push
mov
pop
jo
call
rcrl
add
inc
sub
iret
pop
int
sbb
out
mov
add
stos
xchg
divl
cli
cld
andl
mov
mov
cmpsb
and
ds
xchg
packuswb
fs
ret
add
popa
cvtpi2ps
rcrb
pusha
addr16
stc
cmp
cltd
rorl
in
loopne
push
mov
push
mov
xchg
stos
insb
ret
jl
pop
pop
in
sbb
out
push
adc
cs
rolb
adc
cwtl
sbb
out
fisttps
ljmp
inc
jae
sbb
push
pop
bound
lahf
push
into
sbb
xor
xchg
cmp
mov
ljmp
push
jp
mov
addr16
cmp
outsl
jmp
test
sbb
mov
cld
in
cmp
pop
ja
jecxz
push
xor
mov
orl
xchg
sub
mov
repz
push
mov
mov
stc
xchg
cmp
cmp
out
cmp
sbb
adc
and
movsb
and
adc
orps
push
jnp
xor
push
cld
mov
jmp
popf
xchg
push
enter
stos
xor
dec
bound
xchg
inc
jae
cmp
mov
imul
fwait
sti
mov
outsb
movmskps
cs
test
fwait
lods
adcl
pop
lds
push
pop
xchg
fwait
or
push
mov
mov
adc
std
movsl
dec
mov
inc
pop
or
push
adc
mov
jno
outsb
and
sbb
ljmp
adcl
cld
lods
cmp
mov
call
out
or
notb
add
xor
shrl
xor
shrl
pop
dec
les
add
mov
sub
imul
repz
and
out
mov
xlat
dec
fldcw
mov
scas
sbb
sbb
cli
add
mov
cmp
fwait
pushl
xchg
test
nop
rolb
sbb
jns
sbb
mov
pop
leave
fisttpll
in
sub
or
mov
xor
push
inc
sub
sti
inc
adc
cmp
push
ret
iret
jge
mov
jmp
and
push
add
sub
push
xor
ss
dec
xor
sub
aad
loope
repz
in
and
stos
xor
inc
jno
push
lods
jbe
and
subb
lahf
jp
add
stc
fsub
sbb
repz
js
jno
ljmp
in
fiadds
rcrb
call
push
loopne
clc
dec
jle
test
sbb
fcompl
cltd
jne
in
push
inc
dec
mov
adc
int
cmpsl
push
push
scas
jne
pop
inc
jnp
or
xchg
xchg
pop
mov
shll
sti
fsubrl
dec
ljmp
adc
stos
arpl
xchg
ja
cli
xchg
pop
leave
mov
ss
arpl
push
imul
roll
lock
repnz
push
fwait
dec
dec
and
int3
add
jnp
dec
pop
xor
out
push
lcall
jle
fisubrl
out
outsl
push
sub
xor
adc
adc
or
jne
dec
mov
fmul
test
popa
and
pop
xorl
mov
out
cld
int
loop
sbb
ljmp
out
aad
mov
mov
int3
cld
jecxz
lock
nop
daa
adcl
ja
xchg
pop
fdivrp
lret
ds
inc
into
insb
and
iret
into
xchg
sub
mov
shll
jl
dec
lahf
test
mov
inc
cld
ds
div
xchg
dec
sub
cld
sub
xor
enter
dec
fxch
jle
mov
aaa
xor
sti
mov
cltd
idiv
scas
xor
inc
aad
or
pop
fs
aad
test
push
adc
pop
nop
add
sub
fwait
add
jmp
scas
into
aam
sub
mov
adc
add
mov
or
je
xchg
mov
les
in
inc
sbb
sbb
lea
mov
ret
in
push
jg
repnz
std
mov
mov
nop
xlat
push
outsb
jno
inc
inc
loop
fdivr
imul
ficomps
cli
cltd
fcompl
adc
mov
mov
adc
js
mov
pop
fistps
mov
movsb
dec
push
fstps
add
mov
and
outsb
inc
test
pushf
mov
lret
sbb
xorb
and
movsl
out
sub
mov
mov
sbb
and
inc
dec
fcomip
push
sub
in
jge
test
adc
pop
adc
adc
mov
rclb
popf
mov
mov
jg
cmp
hlt
xchg
lods
push
ljmp
in
jae
inc
lahf
cmpb
fcoml
push
xchg
push
ljmp
cs
lock
dec
fdivrl
lock
aaa
insl
fistps
pop
les
jno
jg
out
int
cli
dec
jne
imul
and
mov
sbb
jae
push
dec
or
mov
jne
or
dec
jne
jb
adc
stos
es
push
jae
imul
xchg
add
lods
cmp
pop
and
adc
push
sub
cwtl
and
and
jo
aam
ret
pushf
adc
clc
push
movsb
fists
or
push
mov
sub
loope
lahf
subb
movsl
pop
jge
fs
cltd
jb
mov
lahf
in
dec
adc
cmp
test
popl
in
mov
js
sbb
stc
xor
je
jge
or
fld
je
mov
mov
fidivrs
insb
shlb
mov
popl
mov
cmpl
push
sub
mov
cmpsb
adc
ljmp
gs
fcoms
sbb
xchg
pop
popa
out
lcall
pop
movsl
inc
dec
push
xor
inc
push
cmpsl
insl
xorl
fwait
test
cmpb
daa
bound
ss
aaa
sub
sbb
dec
adc
xor
in
sub
push
jmp
push
arpl
repz
jl
or
sahf
mov
arpl
and
and
int3
push
test
test
xchg
imul
adc
add
adc
mov
fiadds
scas
out
mov
cwtl
mov
mov
inc
fistps
dec
rcrl
stos
cmp
xchg
xchg
enter
xor
xlat
jae
pop
fs
arpl
sahf
sub
test
movsl
stos
cmc
aas
push
push
not
cld
dec
xor
pop
push
xlat
mov
mov
daa
nop
imul
pop
cmp
out
jecxz
dec
inc
adc
adcb
daa
jg
mov
out
movsl
or
js
xrelease
mov
xor
mov
mov
addl
xchg
loopne
sbb
insl
ret
or
das
jno
movsb
push
mov
or
dec
mov
inc
cmpsl
sub
dec
jbe
push
pop
loope
movsl
xchg
sbb
mov
shl
ret
jl
xchg
test
xlat
cli
sbb
and
pushf
adc
dec
add
sub
outsb
adc
arpl
fcoms
and
gs
push
mov
add
aas
xchg
inc
sbb
data16
in
lcall
jns
push
sbb
sub
jne
sbb
or
pop
mov
xor
sub
xchg
or
lods
out
repz
ds
dec
push
dec
xchg
xor
fwait
jns
push
aam
out
repnz
ss
jns
add
icebp
cwtl
or
data16
mov
push
or
pop
pop
pusha
das
cmp
out
adc
mov
mov
adc
push
sbb
inc
sbb
mov
mov
enter
nop
xor
out
lods
pop
sbb
or
and
xor
sub
roll
in
mov
fst
inc
icebp
pop
fs
xor
cs
bound
dec
test
das
pop
inc
cmp
fsubs
shlb
ficoml
pop
pop
inc
loope
sti
leave
sti
mov
rol
inc
push
subl
push
add
push
cmp
adc
dec
out
cmc
or
imul
nop
inc
jo
mov
or
stos
pop
mov
outsb
adc
xchg
or
lret
enter
xor
or
dec
add
movsl
decb
xchg
sti
icebp
dec
cld
xchg
xor
sar
dec
stc
fwait
lahf
sbb
mov
leave
pop
or
cltd
jbe
sbbb
push
push
popa
push
sbb
xchg
ret
pusha
add
xorb
jae
xor
mov
adc
imul
cmp
push
ss
inc
test
or
insb
add
stc
or
sbb
in
out
add
popa
jecxz
call
rcl
aad
fcmovnu
pop
mov
push
or
jae
mov
and
mov
mov
xlat
mov
xorps
push
scas
mov
xchg
imul
fnstcw
fstl
popw
dec
jp
cmc
cmp
outsl
lods
and
test
mov
sub
xchg
daa
repz
add
jmp
dec
pop
or
lds
inc
cmpsl
adc
pop
stos
lahf
add
sbb
fcomps
jl
sbb
push
ds
add
loopne
iret
nop
test
inc
pop
mov
pop
or
add
cmp
stos
popf
pop
cld
inc
mov
jecxz
cmp
repz
or
popf
jne
stos
add
cld
std
jecxz
mov
add
aas
mov
cmp
idivl
lahf
imul
fildll
test
mov
fwait
ret
enter
pop
rcrb
push
adc
rcrl
xor
mov
mov
andl
adc
add
lcall
jb
pop
push
cld
outsl
jb
mov
jbe
pop
xchg
iret
stc
lods
and
in
test
or
out
xor
ret
sbb
inc
hlt
ret
or
sbb
dec
adc
scas
inc
inc
nop
dec
sbb
int3
adc
mov
mov
out
orb
aaa
mov
ret
scas
pop
jmp
fstpl
or
push
jge
mov
stc
push
aaa
push
xlat
jg
inc
dec
test
and
movsb
xchg
enter
xchg
fdivrp
adc
imul
jno
cmp
fmul
cmp
movsb
lret
sti
dec
push
adc
pushf
jle
jge
sub
jmp
pop
scas
mov
jp
insb
gs
xchg
es
xlat
test
pop
dec
pop
pop
fcomps
popf
and
jno
lea
lcall
mov
call
sbb
add
mov
cmp
and
push
jne
es
ret
push
xor
cld
add
inc
cmp
int3
pop
daa
sbb
adcb
arpl
and
les
lahf
ffree
fists
xchg
pusha
inc
dec
inc
pop
scas
mov
push
js
pop
jmp
testl
aad
adc
mov
sarl
sub
add
push
mov
cmp
out
fldcw
add
xchg
je
push
push
cli
cmpsl
hlt
decb
fists
mov
cmc
mov
sti
xchg
ret
dec
lea
ljmp
mov
ljmp
dec
sti
or
and
cmp
andb
push
icebp
out
sub
xchg
loop
and
push
lock
out
out
cmp
stc
int3
insl
inc
adc
in
scas
cltd
mov
push
loope,pn
loopne
pop
jae
cmp
int
pop
cltd
sahf
adc
or
das
ja
movsb
sub
cmpsl
daa
adc
mov
pop
bound
mov
xchg
mov
movsb
dec
dec
dec
pop
or
popa
jp
ja
push
push
sarb
ljmp
andl
xchg
mov
lods
sarl
mov
or
xchg
or
repnz
or
dec
cmpsl
decl
dec
shll
stc
add
sbb
int
add
inc
sbb
rolb
mov
pop
stos
arpl
jg
pop
sbb
mov
and
fdivrs
push
mov
add
popf
adc
jo
sbb
icebp
les
xchg
das
add
xchg
aas
jmp
stos
test
pop
mov
loopne
sarl
pop
add
cs
push
mov
adc
pop
int
cmp
mov
jle
sub
inc
stc
jmp
test
fisttps
std
mov
repz
ja
jmp
pop
push
and
mov
sbbl
push
insl
mov
ljmp
outsb
int
xchg
nop
mov
mov
and
sub
or
cld
ret
cmp
int
mov
dec
cmp
push
jne
pop
push
stos
loopne
cli
cld
sbb
fs
lret
inc
int3
push
xor
push
mov
push
dec
xlat
dec
es
jmp
nop
cmp
mov
out
nop
pop
test
cmpsb
mov
push
scas
scas
dec
dec
sbb
bound
sahf
cmp
fdivr
ret
mov
mov
stos
int3
ljmp
inc
out
inc
popl
inc
popf
inc
mov
shlb
inc
and
fadds
push
scas
loope
xor
in
in
mov
lret
in
lret
dec
sub
icebp
inc
inc
push
sti
out
sub
loopne
cmp
mov
or
add
mov
add
mov
pop
or
push
cld
pusha
das
call
xlat
cld
push
ja
xchg
xor
cmp
xor
jae
insl
shrb
push
push
aam
push
push
ds
mov
jnp
push
outsl
jno
pop
inc
notl
cs
test
test
push
cs
push
lahf
adc
push
push
or
mov
pop
es
fisttpll
ljmp
nop
xor
push
test
dec
pop
push
loop
mov
pop
add
std
aas
sub
cmp
out
xor
rorb
adc
cmp
or
inc
mov
sub
mov
outsb
sub
lahf
mov
xor
ja
pop
jle
rcrb
and
xchg
sub
stos
and
sbb
mull
lods
xchg
cs
mov
mov
stos
sub
sbb
fnstsw
in
andb
inc
inc
inc
or
or
pop
or
fstl
xchg
enter
mov
dec
xor
iret
sbbb
arpl
daa
dec
pop
jo
mov
aad
movsl
xlat
cmpsb
enter
inc
mov
mov
mov
cmc
push
loope
push
pusha
inc
subl
add
xchg
fadds
fldl
dec
or
sbb
adc
dec
movsl
movsb
cmp
xor
dec
aas
ja
xchg
mov
in
pop
push
xor
inc
mov
adcl
rol
les
inc
test
cmp
arpl
andl
sub
dec
cmp
cmp
or
push
push
add
into
xchg
fs
push
lods
inc
aam
jle
sub
loop
mov
mov
popf
push
sbb
test
clc
popf
push
jnp
pusha
xchg
dec
xor
xchg
fldl
adc
loope
and
stc
push
and
pop
cmp
sub
add
push
cmp
sti
cli
xor
call
push
or
test
dec
fsubs
push
add
add
jno
movswl
cs
shlb
xor
incb
int3
dec
cmp
lods
mov
and
adc
push
xchg
push
mov
push
je
pop
pop
mov
pop
pop
cs
or
inc
mov
adc
mov
mov
xchg
sbb
cmp
lods
jnp
jo
loop
cmpsb
ss
add
jno
aas
cld
daa
ljmp
jbe
xchg
adc
xchg
cmpsb
push
xchg
pop
jne
pop
mov
loop
adc
cmp
sub
ja
cmp
sti
movsl
xchg
aad
mov
outsl
testb
stos
push
rcrb
test
push
mov
shlb
rclb
mov
adc
inc
xlat
jl
sbb
sub
enter
aas
ss
inc
inc
pop
mov
xchg
sub
sbb
and
out
cmp
pushf
jo
xor
stos
test
jl
addr16
dec
mov
je
or
push
mov
add
cmpsb
insl
rcr
aad
mov
nop
cmpsl
scas
cmp
jg
dec
imul
xchg
movsb
push
push
stc
loope
adc
mov
dec
xchg
add
es
es
mov
push
das
xchg
push
aad
adc
jne
stos
add
fsubrl
imul
xchg
add
cltd
icebp
push
sub
sub
dec
scas
sbb
aas
push
cmp
decl
aas
or
pop
clc
mov
mov
loop
dec
push
cltd
sub
add
bound
movsb
jge
out
jmp
ret
mov
ret
test
adc
mov
in
scas
add
lods
mov
lods
pop
jbe
decb
movsl
and
inc
imul
loope
lock
mov
adcl
rcll
dec
fwait
or
int
out
cmp
call
sahf
aam
or
ret
xchg
out
push
adc
dec
xchg
lock
adc
xor
mov
inc
out
fstps
and
and
sub
cmp
jecxz
movsl
mov
arpl
add
fs
pop
stc
sub
dec
fs
andl
es
shrb
lret
mov
sbb
rorb
shll
lds
int3
les
sbb
cmpsb
scas
sbb
nop
cmp
in
and
xchg
jae
fisttpl
inc
cmp
sub
add
out
mov
int
jge
sbb
xor
lea
xchg
cs
sub
sbb
sti
ds
xchg
sub
or
in
scas
int3
mov
adc
fwait
and
and
cmc
jnp
sti
repnz
test
movsl
cmp
fstpl
roll
loop
and
addl
out
imul
dec
test
jnp
repnz
pusha
inc
aam
xchg
inc
sbb
push
pop
or
push
aam
push
scas
pop
and
dec
fiadds
std
das
jecxz
mov
xor
or
pop
js
gs
into
pop
add
mov
adc
or
call
dec
outsl
aas
adc
add
xchg
xchg
or
test
cli
sti
mov
std
jnp
sbb
dec
cli
arpl
loopne
cmp
mov
inc
push
mov
mov
sbb
std
fisubrs
andb
mov
cmp
adcb
add
loop
inc
fs
lret
cmp
cmp
inc
incb
sub
adcb
mov
sub
ret
shrl
pop
adcl
pop
dec
mov
push
push
lahf
shlb
movsl
fadd
inc
push
sub
pushf
lods
xchg
push
adc
pop
jb
dec
shrb
sub
or
fs
mov
sahf
adc
or
nop
test
movsb
pop
btsl
xchg
ja
push
lret
shlb
cld
mov
scas
dec
pop
cmpsb
cmp
push
lods
fs
cmp
adc
cmp
scas
pop
leave
mov
addr16
lcall
and
mov
adc
aad
js
js
lods
pop
or
sbb
push
fimull
jae
dec
sub
cmp
push
daa
pop
sti
lea
and
cmpb
dec
lods
push
aam
push
pushf
xor
sbb
arpl
pop
stos
in
insl
and
and
add
xchg
adc
movsb
in
cpuid
sbb
lods
push
test
jnp
lahf
or
push
and
out
lds
loop
xor
or
pusha
into
sub
sbb
outsb
push
push
mov
imul
cmp
mov
xlat
outsl
and
cmpsl
xor
stos
push
nop
sub
pop
lods
mov
add
add
daa
mov
daa
aaa
xor
stc
mov
fs
cmp
xor
test
xchg
xchg
lcall
cmp
push
test
or
xchg
or
adcb
test
mov
inc
adc
aaa
popf
and
aam
xorb
jl
cli
nop
cmpsl
xor
dec
aad
mov
pop
iret
je
and
inc
or
and
xor
xchg
pop
xchg
ljmp
test
add
ffree
push
xchg
add
stos
in
jl
scas
cwtl
or
mov
xchg
xchg
xchg
data16
or
jb
or
fbstp
adc
pop
sbb
push
push
das
call
lcall
ret
pop
mov
mov
cs
into
and
pop
sti
shlb
iret
cmp
outsb
cmp
push
sbb
flds
dec
xchg
imul
dec
sbb
loope
add
xor
pop
mov
clc
jne
out
sbb
fs
ds
cmp
add
aas
adc
ss
xchg
repz
es
xlat
shl
push
push
mov
xor
cmp
sub
and
and
add
sbb
cld
clc
push
shrb
test
in
and
xlat
icebp
cmp
xchg
or
sub
inc
or
dec
aas
sti
sbb
test
pop
inc
inc
mov
cmp
paddw
pushf
xchg
stc
adc
outsl
hlt
repnz
jmp
jne
in
hlt
imul
mov
mov
pop
jne
orl
inc
push
sub
fists
aam
mov
pop
mov
mov
adc
testb
fbstp
or
je
pop
in
jecxz
es
mov
dec
add
addr16
aad
jmp
outsl
scas
push
das
scas
sub
xchg
jb
jne
sub
mov
ja
int
out
fldl
dec
cmp
cs
xchg
jmp
sub
cld
fbstp
or
adc
sbb
sbb
mov
xlat
or
test
insb
inc
dec
fisttps
aam
hlt
test
cltd
mov
push
in
mov
mov
inc
jo
sbb
cli
sub
fcomp
sahf
rclb
inc
jo
data16
cmp
das
cwtl
stos
mov
dec
adc
push
push
mov
outsl
lds
ret
sarb
push
and
ja,pt
cmp
fwait
cltd
cmpsb
mov
stc
ret
jmp
clc
cmp
jnp
lock
adc
cmp
xchg
lcall
or
loop
mov
xor
cmc
pop
jo
jns
cmp
sbb
mov
mov
cmp
ss
xchg
pop
adc
in
ds
hlt
imul
sbb
mov
stos
xchg
nop
nop
ljmp
jne
dec
popf
lahf
push
js
aaa
fwait
enter
sub
stos
mov
gs
and
ja
mov
adc
add
sbb
sub
sub
and
inc
mov
push
mov
adc
push
mov
rcrl
sbb
jo
pop
outsl
mov
outsb
cmp
jge
arpl
pop
add
add
xchg
push
pushf
fistl
loop
neg
adc
cwtl
lods
xor
test
push
lock
mov
stos
cmpsl
scas
sbb
sbb
push
jb
idivb
ja
xor
arpl
mov
shr
stos
push
mov
push
xchg
sbb
add
or
shll
out
arpl
bound
mov
xchg
out
pusha
enter
inc
push
add
mov
inc
mov
xchg
cmc
mov
adc
cltd
aas
mov
jmp
flds
mulb
xchg
outsl
int3
test
ja
cmp
out
sub
test
push
or
ret
jge
js
mov
xchg
xlat
jecxz
cmp
and
or
imul
scas
outsb
aad
pop
jne
lea
dec
dec
add
lahf
icebp
aad
lea
scas
cmp
jno
in
and
mov
leave
into
cmpsb
mov
ret
int3
ret
je
test
sbbb
mov
jno
ds
cmc
adc
jbe
insl
rclb
dec
and
inc
dec
mov
adc
xchg
dec
aaa
std
inc
add
or
cs
subl
xchg
or
ss
pop
xchg
push
sar
aaa
das
sbb
pop
sbb
sub
mov
mov
xchg
pop
pop
cld
push
cmpsl
xor
rcrl
aas
add
jg
mov
icebp
xchg
dec
or
pop
in
and
or
or
cmp
xchg
out
lret
ljmp
hlt
aas
push
nop
call
fistpll
push
mov
mov
sahf
ficoms
mov
out
lea
idivb
push
addl
lret
test
mov
mov
ljmp
pop
push
inc
imul
jg
jl
fs
push
rcl
add
jge
cld
pop
js
rorb
jmp
gs
xor
jns
push
push
push
js
push
add
jo
and
test
push
push
push
test
mov
movsb
mov
insl
mov
aas
pop
int3
dec
pop
pusha
das
test
pop
dec
fdivl
fbld
stc
iret
cmpsb
or
jae
outsb
mov
shlb
or
repnz
decb
cmpsb
jg
imul
sub
sub
scas
sbb
jg
jno
mov
push
or
adc
pop
pop
mov
sub
or
lret
jle
xor
clc
test
pop
jmp
or
xchg
pop
mov
pop
lcall
pop
sahf
and
mov
lods
stos
mov
and
and
lcall
add
imul
push
sbb
scas
ror
aad
xchg
push
sub
pop
xor
insb
test
jno
std
push
cli
mov
popa
popf
loop
ljmp
icebp
sub
pop
leave
mov
adc
pop
stos
xchg
pop
xchg
sbb
add
sub
sub
pop
xor
jg
movsl
aaa
imul
or
popa
rclb
std
mov
sbb
mov
mov
xchg
mov
sahf
push
loope
mov
lahf
adc
andl
test
cmpsb
mov
mov
imul
cli
mov
jnp
jg
dec
xor
sub
cmpsb
pop
pop
or
push
ja
insl
adc
jbe
adc
and
insl
data16
faddl
mov
mov
out
es
lods
cmp
inc
adc
loope
mov
int
mov
mov
pop
xor
jb
ljmp
jae
and
jmp
push
outsb
or
lcall
pop
stos
xchg
jno
xchg
imul
aaa
inc
outsl
std
movsb
sbb
cltd
jne
paddw
xchg
psubd
push
push
xor
or
ret
and
in
iret
xchg
out
imull
ret
xchg
jle
mov
xchg
cmpl
popa
cmp
jno
dec
jmp
jl
stos
ljmp
dec
sbb
jle
leave
cmpl
jmp
ret
or
out
pop
fidivrs
int
adc
test
psadbw
jbe
jl
mov
or
cld
push
inc
scas
mov
cmp
popf
arpl
adc
dec
stos
stc
mov
push
movsl
in
je
or
push
aad
loop
and
cmpsl
mov
fwait
sbb
xchg
push
cmp
sub
pop
popl
stos
pop
stos
fstpl
jecxz
push
adc
popa
bound
mov
push
fwait
cmp
adc
add
xchg
scas
scas
push
pop
popf
xchg
jno
bound
sub
scas
movsb
jecxz
xor
pop
imul
mov
xchg
lret
jnp
mov
inc
movsb
lret
xchg
sub
mull
cli
and
inc
pop
mov
enter
jns
or
scas
unpckhps
inc
loopne
insb
aam
syscall
sub
scas
lcall
pop
push
jne
cwtl
xchg
jne
jge,pn
js
addr16
jae
mov
cli
xor
stos
std
mov
aas
jl,pt
mov
add
adc
inc
and
or
or
aaa
push
mov
push
mov
adc
in
mov
dec
iret
ljmp
or
negl
icebp
mov
mov
call
ja
jb
xchg
decl
push
sbb
sbb
adc
scas
nop
sub
mov
and
pop
mov
test
ss
ja
cld
mov
or
sub
cmp
dec
inc
or
dec
cmp
add
pop
adc
sahf
push
int
sbb
add
cwtl
int3
dec
or
mov
xchg
push
inc
cwtl
or
add
fdivrs
cwtl
add
lods
jmp
and
jno
pop
inc
pop
xor
xor
mov
stos
aam
jne
hlt
mov
mov
inc
inc
adc
sbb
leave
push
and
pop
cs
dec
push
aaa
sbb
sarl
sub
jg
push
es
clc
inc
xchg
pop
sti
negl
sbb
dec
jg
mov
jbe
pop
js
fldcw
mov
push
cmp
cli
loope
mov
stos
pop
addr16
clc
pop
mov
int
jb
inc
pop
pop
push
out
lods
loope
add
cmp
and
inc
pop
sbb
arpl
ja
fidivs
aaa
pop
xor
pop
loop
jl
xor
data16
mov
fisttps
mov
fisubl
aam
mov
adc
faddl
js
fbld
neg
pop
dec
loop
filds
sahf
es
or
lcall
fistl
test
push
and
mov
mov
out
scas
outsl
cs
bnd
cmpsl
xchg
adc
out
cmp
testb
jne
push
mov
pop
pop
loope
cwtl
xor
lods
in
sub
push
shld
add
loope
loope
out
dec
sub
lods
sarl
arpl
pop
testl
pop
and
xchg
dec
arpl
xchg
shufps
pop
gs
outsl
or
in
shr
in
js
lret
leave
out
sbb
cli
jmp
je
scas
test
push
cmp
fidivl
fwait
sar
adc
sbb
and
mov
mov
adc
mov
fcomp
icebp
add
mov
jg
push
sbb
inc
repz
sbb
aaa
push
xchg
sub
aad
mov
dec
dec
dec
mov
insl
adc
push
add
pop
push
fucomp
push
ficompl
cmp
int3
jo
loope
pop
jae
sahf
imul
cmp
jp
in
and
add
mov
cmpsl
xchg
test
addb
sbb
xchg
hlt
sahf
push
or
cmpsb
in
xchg
push
fnsave
int
in
inc
scas
test
mov
popf
xlat
mov
xor
andl
fsubrl
mov
leave
movsl
and
inc
sub
out
cmp
xchg
xor
sbb
rolb
push
aad
mov
les
cld
lods
lea
adc
sub
data16
jle
or
push
movsb
add
sub
lock
out
pushf
mov
int
or
or
fidivs
test
mov
test
xchg
pop
push
leave
lcall
popf
ja
outsb
mov
jl
mov
push
push
dec
loope
inc
jge
testl
adc
push
adc
mov
and
push
orb
pop
movsb
lods
test
adcb
mov
jmp
mov
or
or
cltd
and
dec
xchg
push
cmpsb
dec
adc
dec
sarb
mov
xor
or
sbbb
and
int
adc
add
scas
jmp
jge
fadd
and
faddl
cltd
or
lock
stc
dec
sbb
into
sub
jmp
inc
or
xchg
xchg
fcomip
inc
ret
je
xor
xor
pop
cli
cmpsb
push
fadd
push
jg
mov
cmpsb
push
gs
or
stc
mov
jnp
and
test
imul
iret
icebp
and
mov
enter
adc
inc
jae
pop
inc
xchg
dec
mov
pop
adc
sbb
add
adc
mov
dec
mov
adc
mov
sub
lods
mov
pusha
sbb
mov
lea
loope
bound
or
cmp
lcall
mov
and
jb
sbb
adc
out
xor
mov
push
xchg
fstl
cmp
and
pop
cwtl
in
bnd
push
jne
mov
xor
repnz
cmp
or
fiaddl
movsl
mov
test
fcoms
mov
inc
push
xor
mov
sbb
cmpsb
mov
and
sbb
in
sbb
mov
loope
test
mov
xchg
gs
mov
push
cmpsl
sub
xrelease
out
and
mov
lcall
add
jge
mov
clc
cs
lock
xchg
js
push
adc
push
stos
sarb
lds
push
mov
das
mov
lds
push
push
jns
adc
das
dec
mov
ja
push
push
aad
pop
sub
scas
pop
pop
fdivp
pop
stos
sbb
pop
sub
mov
add
sbb
cmp
mov
sbb
ret
sbb
imulb
hlt
mov
xor
test
stos
mov
mov
push
or
xchg
dec
insl
push
insl
outsb
push
mov
int
cltd
pusha
aas
je
shlb
cltd
sbb
inc
rclb
leave
xchg
aad
xchg
xchg
push
outsb
mov
mov
mulb
mov
test
mov
adc
fsts
mov
add
and
or
push
std
das
nop
xlat
pushf
push
pop
shl
sti
add
sub
or
push
mov
and
out
iret
mov
xor
sbb
filds
cmc
cwtl
fldl
cltd
out
mov
aam
dec
cwtl
xor
xchg
flds
adc
incl
jg
gs
add
sbb
lret
add
scas
stc
dec
and
and
or
xlat
adc
fldt
rcll
mov
inc
stos
jmp
pop
adc
mov
sub
clc
test
lret
pop
lret
in
sti
push
sbb
sti
jg
and
mov
call
and
cmpsb
and
rorb
stos
std
bound
and
daa
imul
mov
lds
add
aam
inc
and
pop
mov
inc
mov
pusha
mov
jb
testb
shlb
cmpsl
and
or
fwait
cmpb
in
outsl
stos
inc
enter
in
sahf
sub
push
imul
and
rcr
in
and
ss
stos
or
in
bound
dec
and
mov
or
xor
addr16
xorb
mov
mov
testb
mov
mov
xchg
push
movsl
fnstsw
dec
les
push
mov
adc
ds
cmc
push
es
xchg
sub
int3
les
xor
lods
lahf
lahf
mov
fistps
outsl
mov
sbb
add
rcrb
pusha
imulb
mov
mov
mov
xchg
lods
mov
jb
sub
pop
fimuls
movsl
mov
sbb
mov
aas
sahf
mov
xchg
pop
test
fdivrs
in
fisubl
ja
sub
in
jge
mov
and
ja
sahf
jbe
mov
lret
push
or
out
test
xchg
xor
int
mov
mov
lret
lret
pop
call
add
cltd
lock
shrl
sub
in
sti
push
sar
negl
cmc
cmp
test
cmpsl
imul
ljmp
mov
outsl
and
dec
push
scas
sub
xchg
jg
test
mov
xor
xchg
push
xor
push
xor
adc
dec
xor
mov
push
aas
stc
and
xchg
std
jle
mov
fiadds
outsb
in
es
dec
std
testl
test
sahf
push
in
fisubs
flds
test
and
xchg
shrl
push
mov
nop
cmpsl
mov
pop
hlt
cmc
aas
jp
js
popf
bound
jl
jo
pop
xchg
push
es
dec
and
pop
xlat
loopne
dec
dec
cmp
inc
mov
sub
mov
mov
adc
pop
pop
jne
pop
push
pop
cmpsb
fwait
jge
xchg
xor
and
loopne
add
cmp
mov
sbb
and
sbbb
pop
test
jmp
mov
or
inc
cmpsl
outsb
or
mov
outsl
ret
stos
leave
sub
push
xchg
cmp
lret
sarb
inc
popf
dec
xchg
push
pop
xchg
push
xchg
sbb
out
ljmp
adc
imul
bound
jg
dec
mov
shrb
out
mov
in
or
insl
mov
mov
push
push
sbb
push
and
or
imul
cwtl
fs
loope
inc
ret
das
andl
dec
sti
faddl
pop
dec
jmp
aaa
dec
jnp
sub
lds
xchg
and
sbb
lds
add
or
hlt
outsl
mov
mov
inc
and
int3
inc
lods
nop
xchg
pop
out
jl
aam
pop
xor
hlt
xor
add
call
rorb
lea
inc
xor
sbb
insb
sbb
lea
sub
mov
adc
les
lahf
call
push
sti
dec
lret
aad
dec
or
out
push
xchg
lcall
addr16
ljmp
es
fists
loop
rorl
dec
pop
stos
adc
subw
cmp
push
cmp
dec
mov
pop
mov
xor
push
inc
inc
xor
shlb
and
push
ss
push
loop
lods
scas
cli
inc
xchg
into
dec
out
or
sti
cwtl
and
and
and
push
cltd
pop
call
push
addr16
pop
jecxz
push
xchg
std
addr16
and
mov
cwtl
xchg
cmp
xchg
outsb
xchg
xlat
dec
or
pop
cmp
lahf
imul
pop
push
xchg
les
aaa
mov
loopne
les
es
lods
inc
scas
push
sbb
mov
aam
aas
nop
sub
jns
jbe
test
fsts
push
loop
pop
push
popf
in
push
sbb
sbb
add
sahf
adc
dec
js
and
adc
and
xor
cmp
add
adc
loopne
nop
mov
in
jbe
dec
dec
xchg
movsb
push
nop
inc
imul
and
sbb
xlat
imul
sub
mov
out
in
pop
stos
mov
stos
xchg
and
pop
or
xchg
std
out
stos
insl
mov
insb
push
pop
push
push
mov
sbb
mov
jbe
imul
das
mov
je
adc
sbb
or
cmpl
lcall
push
mov
aaa
adc
pop
jg
xchg
push
add
out
icebp
cmp
repnz
jg
or
sub
stos
movsb
out
cmc
adc
pop
xor
xchg
jns
test
lret
fidivl
sbbb
dec
push
cmpl
cwtl
add
movswl
stos
dec
int3
stos
xchg
scas
fwait
add
leave
push
in
xor
ret
and
aam
adc
push
insl
sub
out
jmp
pop
sbb
arpl
dec
cmp
enter
addl
mov
inc
push
adc
mov
mov
imul
int
mov
inc
add
leave
test
mov
mov
mov
jne
fisubs
fnsetpm(287
fists
add
lods
stos
test
adc
sub
clc
test
dec
or
xchg
bound
xor
mov
mov
in
inc
ret
std
rcrb
adc
cltd
lods
movsb
adc
mov
xchg
dec
add
mov
sub
xchg
adc
stos
xchg
inc
or
insl
add
scas
gs
lds
cld
inc
nop
push
and
adc
lods
dec
dec
inc
divl
stos
jp
or
shr
push
sub
pusha
mov
xchg
sub
cmpl
fcoms
cmc
pop
aaa
andl
or
jge
xor
bound
inc
and
fimuls
lds
bound
les
mov
js
dec
push
js
mov
push
or
add
mov
and
pop
fs
add
sub
scas
mov
loope
lods
pop
scas
jae
shlb
fistl
leave
rep
cmp
jbe
mov
lds
sbb
scas
arpl
mov
sbb
rolb
cmp
loopne
fildl
inc
mov
lods
test
popf
nop
ds
xchg
fst
ret
sbb
push
xor
in
inc
movsl
ficoml
mov
push
lods
ret
push
aaa
rorb
test
iret
insl
sbb
sarl
pop
add
sub
mov
repnz
movsl
addl
stc
in
push
and
push
cmp
movb
jb
gs
arpl
les
and
fistpl
nop
inc
in
mov
sbb
aad
loope
data16
xor
dec
add
jge
into
fdivs
push
jle
cwtl
adc
mov
push
cmp
pop
test
pop
into
ljmp
sbb
xchg
mov
stos
cmp
mov
sub
adc
dec
mov
testl
daa
mov
enter
loop
bound
or
jp
stos
push
scas
mov
dec
ljmp
inc
test
push
inc
popf
mov
inc
es
jo
js
xlat
rcll
inc
data16
and
dec
xor
adc
es
loopne
mov
sbb
pusha
lahf
sbb
ficoms
bound
adc
mov
inc
mov
jg
xchg
int
adc
mov
fisubl
unpcklps
stc
mov
mov
jl
aad
cmc
jg
mov
orb
xchg
xchg
std
adc
clc
in
or
xchg
pop
stos
cwtl
rcll
in
bound
mov
sub
mov
adc
and
push
cmp
xor
jae
xor
cmp
test
mov
loopne
leave
or
mov
jecxz
pop
fnstcw
jns
adc
dec
xlat
scas
lea
pusha
add
xchg
push
ljmp
cmc
cld
or
test
jb
addl
xorl
movsb
sti
lods
cmp
inc
cltd
jmp
dec
mov
dec
mov
xchg
jns
lods
dec
jne
jl
pop
pop
sub
push
sub
sbb
adc
sahf
xor
xor
and
insl
ja
jne
hlt
jmp
add
sti
fiaddl
mov
or
scas
ljmp
fcoml
jmp
mov
std
xchg
mov
lret
test
and
mov
add
test
lret
out
push
dec
dec
xchg
push
fstps
fsts
pop
jns
test
xchg
cmp
or
mov
aaa
xchg
add
mov
mov
jb
push
das
cmp
cmp
and
xor
faddl
pop
std
sbb
int3
mov
xor
xchg
jle
inc
dec
mov
aaa
xchg
sbb
enter
cmc
xchg
xchg
mov
or
jne
sbb
jl
xlat
mov
mov
jge
popf
sbbl
jnp
roll
mov
mov
sub
loopne
push
push
nop
adc
cmp
stos
repnz
movsl
xchg
dec
lcall
idivl
lahf
repnz
adc
arpl
inc
popf
dec
daa
pop
sub
sbb
mov
dec
orb
xchg
inc
pop
mov
aaa
mov
mov
rol
std
stos
div
push
sub
sbb
enter
push
mov
je
cmc
push
sub
cwtl
pop
enter
cmpsb
hlt
mov
or
jl
sub
xchg
and
push
aaa
push
mov
sub
cli
jp
loope
movsb
sbb
mov
stc
fiaddl
sbbl
inc
mov
dec
inc
int
dec
dec
in
inc
mov
mov
fmull
out
rcr
mov
mov
es
mov
imul
xor
inc
sbb
dec
clc
push
sti
or
les
sbb
and
int3
pop
out
fwait
mov
jmp
mov
dec
and
scas
outsl
mov
push
int
mov
loopne
adc
pushl
mov
addr16
cmp
mov
cld
test
xchg
cmpsb
or
lods
movsb
and
test
jnp
adc
inc
nop
push
into
movsb
sbb
mov
adc
ljmp
aas
sarb
push
inc
add
cld
inc
sbb
ja
dec
mov
sub
xchg
push
or
sub
movsl
fwait
mov
pop
sub
add
lods
insl
fisttpl
rorb
es
xor
dec
ret
xchg
test
xchg
test
aam
push
inc
cwtl
sub
mov
ret
ljmp
xchg
inc
jecxz
fmuls
mov
sub
shll
xchg
dec
call
cwtl
jb
and
es
mov
addr16
add
cmp
mov
out
pop
cld
out
sub
adc
jmp
xchg
inc
mov
imul
or
stos
and
sub
ret
mov
add
out
cmpsb
repz
das
pop
xlat
loop
jae
jno
scas
out
or
xchg
mov
xchg
adc
out
sbb
icebp
push
aad
das
dec
push
scas
push
andl
push
push
xchg
dec
sbb
or
and
mov
adc
xchg
test
sub
rcrl
leave
orb
stc
ja
jo
xor
clc
iret
arpl
add
pop
jp
enter
jge
sbb
inc
jbe
and
inc
cmp
je
jecxz
mov
lds
push
imul
jnp
call
stos
cmpb
sub
loopne
mov
outsb
dec
es
sarl
sub
pop
std
int3
and
ds
cmpsb
xor
cs
sahf
dec
divb
bound
sub
outsl
add
nop
shl
add
jo
sub
push
lds
jbe
jbe
xor
arpl
nop
sbb
subl
dec
inc
sbb
in
fldt
leave
rcll
sti
xor
push
mov
pop
shlb
out
loope
test
dec
aam
dec
insb
adc
movsl
test
dec
cmp
arpl
inc
add
fcoms
shr
setnp
add
xchg
shlb
ret
mov
adc
or
je
enter
in
fs
add
push
call
pop
sbb
mov
dec
cmp
mov
insb
ljmp
out
dec
push
adc
loop
jmp
push
pop
xchg
cld
jg
out
std
or
cmp
cltd
hlt
add
dec
lret
and
pop
pop
lcall
push
imul
call
stos
cmc
fld1
test
add
adc
stc
mov
sbb
out
xor
stos
lock
fnstsw
sti
pop
jae
adc
sbb
add
ja
or
cmc
mov
movsl
mov
xlat
inc
stos
dec
in
jl
jmp
out
sub
cmp
push
mov
mov
push
pop
sbb
mov
std
inc
sar
int3
lret
and
adc
mov
enter
imul
push
xor
fisttpll
mov
dec
cmpsl
xchg
sbb
dec
mov
ljmp
lret
add
idiv
mov
jg
idiv
sub
xchg
dec
popf
xorl
pop
and
mov
in
ret
adc
or
push
inc
sbb
hlt
pop
mov
inc
outsl
loop
or
test
dec
jno
repnz
pop
jp
sti
jmp
adc
or
mov
roll
inc
lock
in
xor
add
mov
or
mov
ljmp
aas
jbe
and
cltd
push
idivl
mov
mov
mov
pusha
add
add
and
repnz
es
fidivrs
jne
jle
jb
inc
xchg
inc
outsb
cli
mov
and
jae
enter
stos
shrb
push
inc
in
push
cmp
mov
push
jbe
dec
inc
scas
mov
mov
insb
imul
loop
out
jo
aas
cmp
cmpsb
mov
out
scas
mov
dec
test
push
xchg
and
int
pop
ror
inc
jl
scas
outsb
inc
test
cmp
dec
jmp
fstpt
jb
movsl
fcoml
sub
int3
xor
std
push
adc
jb
mov
push
into
cmpsb
orl
stos
in
scas
clc
sarl
push
clc
test
js
mov
loop
negl
xchg
fisttps
popf
add
cmp
pop
lea
sahf
sub
jns
ds
test
jl
pop
ljmp
jp
leave
push
rcl
shlb
imul
mov
out
roll
ja
mov
xor
mov
jns
sub
lahf
push
or
add
push
popa
pusha
cmp
ss
mov
xchg
mov
lret
jne
setle
cli
pop
cmpsb
in
int3
lods
imul
jb
pop
jne
scas
ss
repz
in
sbb
es
push
push
shll
data16
fldt
pop
cmp
inc
mov
pop
jne
sti
loop
mov
jle
lock
mov
imul
lds
js
push
inc
imul
or
jmp
mov
dec
push
mov
cmp
out
ret
push
imul
pop
ljmp
lods
int3
les
rorl
jb
fs
fcmovnb
dec
outsl
pop
dec
cmpl
ja
pop
mov
fdiv
sub
lds
cmp
push
into
mul
xor
iret
std
pop
or
lahf
jg
fcomps
sbb
xor
mov
jle
mov
cli
jg
sbbl
adcl
mov
mov
mov
pop
sarb
lret
or
popf
nop
movsl
int
jae
fs
add
insb
fdivrp
test
sub
sbb
push
or
pop
pop
in
enter
jmp
or
or
jns
fs
clc
pusha
insb
loop
int
aad
jge
push
sub
pop
lcall
push
mov
xchg
inc
mov
adcl
dec
lods
fmull
daa
push
jbe
push
mov
xor
or
pop
sbb
ret
fistpl
sub
sbb
sbb
and
jne
push
push
popf
jb
enter
in
inc
sub
lret
and
jle
jcxz
movl
fwait
push
icebp
and
fbstp
mov
outsb
pushf
and
in
arpl
push
push
push
imul
mov
ror
int3
adc
pop
fisubrl
push
cmp
push
psubsw
push
push
arpl
popa
inc
nop
add
fldpi
jns
cli
scas
sti
lods
or
lcall
sbb
pushf
jg
add
mov
daa
adc
pop
adc
jns
add
mov
mov
call
xchg
xor
and
popa
cs
lock
pop
mov
lret
popa
pop
dec
mov
insl
lret
and
add
popa
aas
in
popf
push
xchg
mov
xchg
movsb
dec
add
out
cmp
mov
lods
and
ja
incb
or
adc
data16
push
fdivr
sub
lods
dec
stos
mov
or
mov
adc
pop
ss
mov
adc
fimuls
into
jl
dec
je
dec
adcb
mulb
and
and
mov
adc
pop
movsb
aaa
loopne
cltd
arpl
sbb
xor
fldcw
cmp
cld
aaa
mov
pop
inc
add
xor
rcr
mov
ljmp
dec
leave
jb
mov
test
jecxz
call
out
lock
cmpsl
repnz
jno
test
xchg
jnp
xchg
mov
sub
sub
outsb
stos
sahf
loope
push
hlt
push
aam
jl,pn
ja
in
pop
pop
cwtl
pop
hlt
movsl
loope
out
cmpsl
adc
push
and
lds
out
adc
mov
js
jb
cli
mov
add
sbb
mov
addr16
dec
test
mov
mov
fistps
or
in
pop
ja
ret
shll
push
jb
cld
cmp
dec
movl
les
pop
adc
sub
lret
fdivs
jmp
xchg
stc
pusha
inc
pop
addr16
xchg
push
popa
inc
loop
mov
lock
sti
mov
adc
cli
jae
and
int3
dec
jbe
pop
cmp
cmp
and
inc
repz
push
cmpsb
jmp
cld
fisubl
int
pop
push
lret
test
xor
aas
and
and
fisubs
sbb
push
adc
scas
sub
sub
xor
xchg
lcall
jl
push
or
mov
or
inc
sub
push
inc
xchg
xlat
push
and
loop
add
insl
sub
pop
mov
add
push
stc
into
inc
test
xor
pop
push
and
sub
cli
xor
cwtl
and
mov
repz
adc
mov
lock
out
int3
in
push
sti
test
call
xchg
test
pop
mull
push
fistl
les
or
add
xchg
jl
out
adc
std
mov
cli
and
jmp
je
dec
sbb
outsl
cmp
lea
and
mov
pop
repz
lds
and
sbb
loopne
cmp
xor
or
xor
push
cwtl
aaa
sub
inc
push
xchg
mov
rep
push
jp
lahf
jb
mov
cltd
adc
lods
fidivrs
test
divb
and
pop
and
repnz
imulb
ret
xchg
ljmp
pop
andb
dec
addl
mov
andl
outsb
push
enter
ds
fstpt
jp
mov
pop
cwtl
pop
mov
mov
mov
pop
movsl
test
xor
and
pop
xor
out
lods
dec
fwait
push
mov
stos
mov
fstl
mov
adc
add
mov
sbb
push
xor
mov
sbb
pop
mov
mov
inc
inc
push
or
call
pop
adc
or
adc
in
icebp
cmp
in
ja
dec
inc
jl
jge
push
adc
arpl
cmp
iret
sub
mov
lds
in
out
dec
xchg
or
jp
aaa
pop
mov
cmc
repnz
inc
fdivrl
addr16
mov
dec
inc
add
push
push
xor
out
nop
pusha
inc
test
mov
in
mov
jae
pop
insl
pop
pop
movsl
std
push
js
and
sti
pop
xchg
add
pop
push
jp
sub
cmp
scas
push
lock
shrb
mov
push
jge
scas
add
adc
or
inc
xor
xchg
sbbl
bound
hlt
push
xor
sbb
loopne
std
jb
ds
cmp
push
mov
rclb
sbb
jb
mov
cmpsb
adc
or
mov
or
add
jmp
push
mov
rcr
fidivrl
in
sbb
inc
or
pop
xor
jg
jns
pop
push
insl
push
cli
sbb
sbb
stos
ret
or
dec
sub
insb
pop
repz
pop
push
jl
fildll
jle
xor
jg
cltd
inc
outsl
cmp
shll
mov
push
adc
rolb
add
cmp
cmp
adc
scas
lds
jae
jnp
sub
xor
sub
ljmp
mov
call
ja
pusha
shll
rcr
jecxz
mov
jl
lds
sbb
inc
xchg
sbb
jnp
test
cmp
push
jo
mull
pop
cli
sbb
cmpsb
es
dec
lods
adc
dec
and
lahf
in
pop
jg
repz
xchg
pop
cmp
test
adc
push
scas
dec
test
dec
xlat
aaa
mov
popf
mov
lcall
jmp
jl
ficoms
mov
not
in
xchg
xlat
test
jmp
mov
ljmp
pop
add
jne
nop
and
xchg
xlat
jge
daa
mov
xchg
out
aad
rcrb
pop
pop
lret
cmc
mov
aam
popf
add
mov
sti
ss
ljmp
enter
jae
push
xor
push
imul
movl
cmc
gs
push
jl
xchg
cli
mov
addb
shr
sbb
jmp
ret
xor
fsubl
cmp
pop
mov
aam
leave
pusha
mov
mov
das
stos
scas
movq
mov
cld
mov
xchg
mov
pop
scas
icebp
add
lods
jl
bound
cpuid
mov
mov
ja
dec
mov
jb
test
ljmp
dec
outsb
std
test
rol
mov
jle
mov
clc
mov
adc
lret
and
inc
jecxz
fidivrs
loop
pop
and
adc
mov
addb
mov
pop
movsl
fnstcw
push
cld
in
push
jno
insb
sub
add
test
push
test
sub
jl
cmpsl
adc
mov
ss
scas
scas
inc
popf
sbb
fs
and
andb
loopne
in
scas
or
aam
and
aam
pop
ret
mov
lods
repnz
roll
add
or
jo
mov
cmp
push
cwtl
dec
inc
jge
pop
or
jo
push
cs
mov
pop
push
mov
test
bound
cs
ljmp
nop
hlt
cmpl
mov
add
cmpsb
cmpsl
daa
rorb
push
dec
push
add
clc
push
andl
cmp
cmpsb
mov
aas
or
mov
adc
int3
dec
andb
mov
rcl
push
scas
ret
and
mov
or
test
mov
cmpsb
jle
subl
jo
sahf
pop
js
push
popf
jg
loope
hlt
rorb
stos
call
sub
clc
cld
jns
jne
repnz
cltd
gs
inc
loop
out
into
loopne
jge
hlt
mov
adcl
stos
xchg
imull
xchg
fisttps
fwait
call
or
cmc
and
push
push
mov
pop
daa
pushf
xchg
sbb
nop
movsb
std
dec
sbb
in
leave
dec
add
push
sahf
das
cs
mov
inc
mov
outsb
dec
sbb
js
dec
loope
scas
std
jno
test
cwtl
sbb
adc
xchg
mov
loop
mov
sub
inc
sahf
push
scas
pop
mov
aam
cltd
jp
into
insl
xchg
sub
das
xchg
dec
inc
mov
loopne
orl
add
nop
pop
adc
nop
pop
pop
inc
add
or
add
cmp
cs
stos
mov
testl
push
enter
push
ret
es
mov
dec
arpl
popl
rolb
out
movsb
xlat
scas
push
fiaddl
xchg
xchg
es
outsl
or
xchg
stos
sbb
xchg
into
adc
push
jbe
and
jecxz
pop
and
std
mov
pop
jg
add
mov
clc
in
push
bound
dec
frstor
inc
mov
dec
ret
jno
bound
cmp
and
mov
lods
pusha
lea
jge
ret
ljmp
cmp
movsb
adc
cmc
jb
lea
mov
pusha
addr16
aaa
jle
test
jbe
cli
sub
stos
sub
dec
cmc
sbb
das
mov
gs
fadds
data16
into
fs
js
mov
jp
xor
nop
adc
stos
mov
xor
insb
lods
adc
outsb
add
aad
addb
lret
ja
imul
push
dec
and
jb
cltd
fnstenv
flds
fcomps
out
stos
lock
insb
dec
push
cmpsb
pop
and
cmc
cmpsl
test
imul
iret
in
push
rcrb
mov
lret
inc
mov
scas
sub
jbe
cmp
popf
dec
adc
test
roll
xorb
cmc
jae
in
push
push
mov
push
sarb
test
cmpl
stc
nop
push
pop
fistl
pop
xchg
adc
mov
je
insl
dec
divl
and
dec
adc
mov
sub
xchg
repz
gs
fwait
mov
call
stc
sub
xor
popf
inc
jge
push
jg
call
adc
leave
lea
mov
xchg
mov
cld
mov
nop
adc
xchg
pop
xlat
and
pop
mov
pop
jmp
inc
or
push
movsl
lods
lahf
and
adc
out
dec
and
and
outsl
cmpsb
add
out
lds
mov
xlat
sbbb
cmpsb
or
loope
scas
push
sbb
movsl
dec
scas
xchg
ret
popa
shlb
outsb
jb
sub
mov
cmpsl
inc
sbb
dec
inc
xchg
push
inc
jg
fstps
sbb
scas
cmp
push
xor
sub
jno
aad
xchg
push
push
pushf
enter
test
setg
sti
fwait
cmc
cmc
pop
fucomi
and
fdiv
pop
pop
pop
jbe
pushf
lcall
dec
fimuls
adc
jae
loopne
int
bound
mov
test
or
add
jb
stos
aad
mov
adc
out
arpl
in
mov
outsb
ljmp
and
mov
pop
popl
mov
call
mov
daa
sahf
and
mov
fisubrl
sub
test
mov
mov
jnp
xor
les
mov
inc
pop
loope
inc
in
mov
xlat
call
lahf
mov
cli
in
std
cmc
xchg
sub
lahf
fistl
out
imul
lds
ds
scas
dec
ud1
int3
pop
xchg
imul
xchg
in
dec
cmp
adc
adc
sti
xchg
xchg
dec
dec
jl
mov
icebp
sbb
fdivs
fimuls
movsb
mov
jmp
int3
mov
jo
aaa
xchg
push
ljmp
out
fldl
inc
jle
pushl
stc
in
add
fs
and
mov
cmc
bnd
cli
mov
es
nop
popf
stos
insl
aam
mov
pushf
inc
push
add
cmp
outsl
sub
xchg
ror
scas
call
int
xchg
addl
outsb
mov
or
and
fisttps
lods
lods
pop
xchg
push
dec
lods
inc
insb
dec
bound
sbb
jmp
add
pop
orl
or
push
mov
lret
movsl
shrb
fldl
mov
cmpsb
sbb
daa
nop
xchg
jge
jne
jns
scas
test
and
xor
lods
push
adc
test
and
pop
cmpsl
pusha
add
xchg
pop
dec
leave
mov
lods
repz
lock
ficompl
gs
mov
sub
and
inc
outsb
push
mov
push
pop
pop
out
or
lods
xchg
and
push
ds
sbb
push
adc
hlt
popa
and
stc
stos
push
shl
jg
push
inc
nop
test
imul
data16
outsl
jae
push
xchg
lods
jae
popa
je
inc
ljmp
push
fnstcw
popf
bound
scas
jae
hlt
scas
push
jae
dec
lea
adc
icebp
jb
aad
sbb
ss
outsb
dec
xchg
jp
adc
addl
pop
xchg
addb
mov
cmpsl
movsb
or
pop
inc
push
aas
sti
ja
lahf
add
mov
mov
push
xchg
pushf
clc
lret
adc
stos
mov
jge
pop
inc
addr16
mov
dec
mov
lods
dec
sub
jnp
and
repnz
xchg
push
cs
dec
mov
push
sbb
pusha
loop
stos
mov
into
scas
out
xchg
outsb
shlb
stc
into
aad
xor
mov
push
adc
cmpsl
cli
lret
adcb
push
lea
lods
push
mov
stos
pop
adc
dec
imulb
aad
xor
or
push
pop
xor
jle
mov
cwtl
imul
jns
xchg
adc
inc
nop
cmp
add
aas
or
outsb
pushf
adc
scas
rol
lds
fadds
fisttpll
cmp
add
xor
ja
int
es
xchg
gs
test
loopne
mov
pop
add
push
adc
pop
cmp
out
or
stc
aas
div
cli
mov
add
in
into
push
xchg
pop
mov
push
jne
pop
in
fs
repnz
jg
jne
sub
lods
add
fsub
sbb
int3
ja
fisubrl
jns
scas
inc
pop
ret
adc
shlb
popa
ljmp
iret
mov
outsl
adc
mov
add
repz
xor
mov
cmp
jecxz
add
sbb
xchg
in
fcomip
aas
inc
mov
aaa
xor
cmp
pop
mov
xchg
xchg
mov
xchg
leave
ds
push
dec
subb
imul
mov
pop
test
int3
sub
and
and
adc
dec
shlb
rcrb
cmp
maxps
xor
push
sbb
lds
imul
mov
push
sub
enter
test
sub
mov
aam
inc
xor
lods
adc
pop
in
jmp
adc
xchg
mov
inc
pushl
sbb
add
popf
fwait
inc
sti
xchg
das
sub
daa
and
lea
xor
sti
cwtl
ror
pop
lret
dec
add
mov
sbb
xor
lret
jg
xchg
test
mov
inc
sub
imul
test
add
dec
sub
in
fcompl
pop
stos
inc
jnp
repnz
or
test
insb
push
out
push
outsl
push
push
jo
dec
cmpsl
out
movsl
call
mov
and
aad
mov
imul
and
sub
sub
add
js
xchg
jo
sbb
std
push
add
jp
mov
pop
and
and
icebp
movb
jg
mov
adc
jae
push
cli
mov
aas
mov
dec
mov
and
push
adc
cmpsl
cmp
cmpsl
push
popa
mov
jg
test
ja
inc
add
sub
stos
xchg
into
aam
or
insb
cltd
inc
lret
xor
cmp
xor
push
daa
nop
push
dec
mov
test
js
nop
dec
lret
inc
out
call
inc
add
lock
insl
add
or
mov
jno
pushf
nop
jo
jle
lods
enter
cmp
pop
cmp
stos
jmp
movsb
adc
mov
clc
xor
or
test
addr16
cmp
mov
out
ljmp
pop
out
lods
fisubrs
out
call
pop
cmp
mov
sub
incb
mov
jne
mov
dec
cld
iret
stc
lock
mov
fldenv
xor
into
jo
ljmp
sti
xchg
out
movsb
mov
imul
mov
fstpl
les
addl
outsb
repz
xchg
mov
adc
in
adc
xchg
push
fsub
jb
or
sbb
les
filds
pop
hlt
pop
xorb
nop
cwtl
loope
aad
cmpsl
std
dec
push
adc
pop
sbb
adc
repz
sahf
push
jnp
data16
repz
shll
testl
push
mov
xchg
inc
mov
push
inc
ljmp
adc
xchg
daa
stc
inc
jl
cs
add
popa
or
mov
imul
movsl
lea
pop
mov
stc
and
sbb
push
mov
stos
xor
add
je
loopne
shlb
add
cli
std
cmp
pop
xchg
scas
decb
mov
xchg
push
pop
js
lahf
jp
ja
pusha
lahf
mov
orl
pop
jge
js
mov
sbb
data16
dec
icebp
sub
push
add
mov
pop
sub
jo
jnp
or
out
fistpll
add
repnz
imull
cltd
mov
xchg
xchg
stos
xlat
xchg
add
test
xchg
sub
jbe
das
int3
lods
stc
push
cli
mov
xor
add
sbb
xor
cmp
mov
in
imul
jge
out
mov
cltd
mov
es
pop
icebp
out
jecxz
loopne
inc
outsl
push
fcoms
jb
pop
ret
pop
je
inc
aad
shll
adcl
das
inc
jmp
cli
push
icebp
pop
xchg
jl
and
fcoml
fstl
dec
int3
mov
sub
push
stos
xchg
jns
mov
addb
movsb
enter
xorb
popa
in
jbe
popa
cmc
or
leave
pop
sbb
cld
xlat
subl
mov
sbb
push
mov
out
stos
inc
icebp
loopne
dec
rcrl
jg
arpl
inc
stos
aad
xchg
jl
cmp
fnsave
add
pop
push
ret
pop
out
add
scas
push
rolb
int3
add
adc
fs
stos
adc
into
jae
out
add
or
fidivs
jmp
mov
aaa
orb
loopne
mov
mov
daa
mov
jge
cmp
movsb
push
adc
aad
inc
std
notb
cmp
leave
std
cmp
icebp
cmpsl
jle
adc
jne
daa
jmp
inc
fistl
inc
pop
mov
fwait
jp
mov
inc
inc
pusha
sub
bound
fidivrl
jp
das
imul
and
adc
pop
mov
adc
roll
xor
adc
or
cmp
cld
fnstsw
cli
push
adc
jbe
xor
outsb
mov
sti
test
and
cmp
cmc
ja
dec
push
mov
fcompl
lods
xchg
jns
hlt
ljmp
fwait
stc
es
arpl
adc
icebp
or
dec
jecxz
jg
sub
lea
and
or
cmp
mov
or
lahf
cmp
cmp
pusha
cli
mov
fst
jge
mov
jbe
push
pop
jno
jl
pop
jne
sub
int3
adc
sub
notl
cs
cltd
es
add
lods
stos
mov
mov
out
mov
xchg
pinsrw
dec
push
test
ljmp
inc
dec
sub
and
cld
push
jne
add
adc
jle
push
cltd
jge
cwtl
or
movsb
daa
or
fs
outsl
adc
out
loop
je
sbb
fcomps
cmp
push
test
mov
xchg
pop
in
je
sub
mov
sbb
jae
imull
popa
out
add
fbld
or
icebp
dec
sar
sbb
inc
repz
mov
mov
adc
jmp
cld
js
out
addr16
sub
inc
and
pop
mov
mov
inc
dec
test
rolb
popa
vmwrite
fistps
and
sub
dec
cltd
nop
lock
aaa
pop
sbb
mov
inc
xchg
push
loope
andl
mov
sub
cmpsl
aam
mov
int3
cmp
lock
and
test
stos
out
and
inc
pushaw
dec
aad
xchg
fidivrl
or
stos
mov
xchg
cmp
stos
and
cltd
clc
jmp
add
cld
add
mov
mov
arpl
cmc
outsb
add
incb
cld
mov
aad
push
lret
jae
jg
jbe
mov
xlat
mov
lret
jne
fsubp
cmp
aas
sub
inc
pop
pop
adc
jg
xor
xchg
inc
mov
mov
cld
cmpsb
xchg
cli
arpl
push
stos
pop
sahf
bound
and
inc
sti
push
cmp
inc
xor
mov
push
inc
and
xor
imul
inc
enter
jge
adc
mov
icebp
icebp
les
in
jecxz
push
insb
dec
inc
jne
stos
xlat
cmc
dec
xchg
sbb
mov
sbb
mov
int3
xchg
roll
inc
dec
add
andb
decb
push
aas
sbb
mov
push
imul
add
push
jo
cmp
das
mov
ljmp
cli
xor
outsb
inc
xchg
ja
or
imull
stc
inc
add
jl
or
mov
mov
mov
repnz
lock
repnz
adc
test
mov
and
mulb
adc
inc
push
sahf
scas
xor
ds
add
retw
push
mov
fcmove
leave
call
lcall
sarb
and
enter
cwtl
frstor
dec
outsb
fldcw
jmp
iret
add
inc
mov
pop
xchg
nop
sub
adc
xchg
mov
xchg
xor
dec
sti
mov
ja
test
pop
mov
jg
fiadds
jne
and
adc
inc
push
jo
mov
aas
mov
lcall
in
push
dec
stos
out
out
and
repnz
xchg
inc
pop
sbb
and
cmp
fdivrs
ljmp
cltd
lock
mov
xor
int
mov
pop
mov
cmpsb
push
jge
pop
popa
out
lcall
and
int
fisttps
push
js
and
sbb
sbbb
ret
mov
aam
mov
ljmp
mov
inc
jge
inc
jbe
pop
jnp
inc
movsl
cli
aad
loope
in
loopne
mov
mov
rorl
in
mov
ret
test
pop
sbbb
das
xor
pushf
fdivr
xchg
jno
jne
sbb
sbb
push
sub
inc
into
mov
push
push
inc
inc
mov
mov
fidivrl
mov
and
mov
andb
out
cmc
aaa
jmp
adc
inc
add
or
popa
inc
fisubrl
xorl
shll
sbb
jne
mov
push
adc
xchg
fdivl
sbb
adc
pop
dec
adc
add
push
call
sub
jl
dec
out
fnsave
push
leave
dec
push
add
add
nop
adc
dec
dec
push
cmp
in
adc
pop
inc
shl
push
xchg
inc
adc
xor
mov
xchg
xlat
fucomp
mov
sahf
addl
jmp
aam
push
inc
jge
push
xchg
int
pop
into
sbb
out
jne
xchg
movsl
out
cli
icebp
mov
xchg
and
xor
mov
imul
cli
push
xor
or
out
jae
iret
cmp
movsb
push
push
or
out
shlb
push
and
pop
push
pushf
aam
or
test
add
aam
mov
loopne
mov
lcall
push
push
cmpsl
jo
test
mov
test
imul
sub
sbb
or
jg
imul
push
mov
ljmp
fisubl
jg
gs
push
xchg
sub
push
nop
and
xchg
and
jle
cs
xchg
mov
pop
push
daa
and
push
movl
leave
pop
test
mov
jns
popf
adc
xor
push
shll
sti
movsl
pop
push
xchg
push
sti
lock
pop
mov
cli
loop
dec
xlat
sbb
add
test
push
lret
cmpsl
xor
mov
es
xor
sub
jmp
adc
add
xchg
ret
cmc
fisubrl
pop
inc
and
cmpsl
in
mov
xchg
pop
push
daa
sub
inc
inc
fs
into
inc
in
ss
push
mov
lret
mov
add
adc
popf
push
in
pop
mov
add
xchg
pop
jmp
in
push
sub
lock
cmp
sbb
or
xchg
push
outsl
stos
out
pop
imul
xchg
jbe
jge
xchg
inc
push
inc
cld
fiaddl
lods
sub
cmp
loope
scas
jecxz
pop
jns
push
mov
divl
push
pop
push
popf
mov
in
ds
and
or
sbb
jbe
xlat
pop
mov
xor
push
inc
add
push
test
pop
mov
lds
pop
lock
shrl
pop
scas
mov
stos
js
adc
push
add
mov
inc
mov
scas
sub
mov
ret
inc
pop
push
xchg
insb
loopne
mov
mov
imul
fiaddl
push
cmp
sbb
loop
jae
lcall
push
ja
add
and
loop
adc
jb
sbb
out
sub
test
xor
and
pop
jl
das
push
rclb
pop
inc
jmp
icebp
inc
test
ljmp
je
adc
jmp
pop
mov
je
fcomps
xchg
jle
scas
mov
inc
inc
nop
mov
mov
cld
fimull
and
les
daa
jmp
or
div
adc
jecxz
add
inc
add
push
adc
ret
std
frstor
test
in
daa
push
ja
or
icebp
xchg
lahf
push
mov
dec
test
dec
jg
loopne
mul
outsl
inc
sbb
pop
stc
mov
push
aad
mov
or
and
mov
or
push
add
or
aam
adc
jb
gs
pop
push
sahf
cmp
pop
outsb
lock
stos
ljmp
push
adc
and
xor
cmp
xor
sarl
or
xor
ljmp
pcmpeqb
int3
ljmp
dec
cmpsb
arpl
stos
ljmp
push
js
in
test
push
js
pop
jo
js
cltd
sub
test
jg
dec
inc
scas
stos
dec
xor
in
and
push
popf
xlat
je
test
arpl
pop
test
sbb
das
sub
imul
inc
lcall
aad
mov
imul
pop
ja
arpl
cmc
aam
sbb
cmp
aas
lea
icebp
xor
out
enter
loop
add
xchg
out
out
ljmp
shlb
pop
test
push
lret
adc
adc
push
iret
and
xor
pop
push
sar
pop
movsb
cmp
jae
and
aam
stos
xchg
jnp
cli
test
cs
stos
cli
sbb
call
inc
adc
xchg
mov
ss
stos
xchg
lds
neg
and
inc
es
push
and
loope
inc
add
push
lods
es
loop
notl
filds
outsb
add
nop
out
out
xor
adc
rol
xor
incl
inc
mov
and
stos
cmpsb
aas
or
mov
cwtl
fimull
or
jb
pop
aad
lcall
fs
adc
lods
pop
pop
jmp
sub
pop
add
jecxz
xor
adc
and
cwtl
and
repz
pop
std
out
mov
pusha
call
stos
addb
pop
fidivrs
jl
loopne
int
xor
leave
cmpsl
xchg
jne
faddl
fstl
push
cmpsl
lret
adc
sbb
sub
pop
lcall
inc
insl
cmp
inc
dec
lods
mov
iret
inc
cmp
mov
and
dec
test
lcall
and
mov
ljmp
das
xor
lret
adc
mov
sbb
daa
inc
in
xchg
iret
sub
movl
and
pop
sahf
xchg
mov
orb
popf
pop
cltd
push
cmp
inc
test
mov
cs
js
mov
lea
daa
mov
icebp
xchg
mov
subb
lods
loopne
outsb
inc
xor
sbb
aad
shlb
fwait
inc
jle
xlat
jb
mov
mov
dec
bnd
or
dec
pop
sub
jp
xchg
loop
movsl
xchg
sti
stc
test
inc
and
inc
inc
cmp
jbe
push
xlat
mov
insb
pop
dec
fnclex
adc
push
inc
push
and
and
ret
mov
jno
scas
dec
xor
add
pop
loopne
movsb
repz
je
add
jp
sub
mov
xorl
mov
out
std
push
movsb
xchg
adc
adc
pop
fmul
leave
ret
lods
or
and
in
pop
sti
pop
and
call
mov
jns
inc
adc
and
inc
push
xchg
jg
xor
mov
mov
xor
mov
rolb
icebp
out
push
das
repnz
scas
mov
pusha
jmp
sarl
push
or
mov
clc
movsl
negl
mov
or
bound
aam
push
insb
ljmp
repz
cmp
shll
shl
aam
cmp
rorl
jne
jmp
sub
push
xor
lahf
sbb
stc
repz
xchg
loope
into
sbb
shlb
fs
daa
sub
stos
add
roll
aam
or
imul
inc
mov
ret
clc
mov
push
mov
push
dec
lcall
test
nop
inc
fistpl
test
dec
mov
mov
daa
mov
lahf
lods
outsl
repz
pop
jmp
bound
lock
cwtl
dec
inc
adc
clc
insb
mov
jno
push
repnz
push
xchg
pop
shll
arpl
ljmp
inc
jmp
loopne
mov
and
pop
aad
pusha
sub
mov
cli
push
push
call
cltd
scas
popf
xchg
jns
cmc
push
repnz
andb
jae
push
fadds
xchg
push
popa
cmp
gs
adc
and
clc
aas
movsl
jne
sahf
sub
dec
push
sub
jl
hlt
cwtl
repz
mov
bound
xchg
fwait
jg
pop
cli
mov
sbb
fbstp
push
sub
int3
dec
jno
pop
or
mov
mov
inc
xchg
add
cltd
push
inc
push
push
nopl
stos
xor
adc
daa
xchg
push
aaa
loopne
cltd
cmp
add
cmp
gs
dec
in
blci
gs
hlt
mov
movsb
pop
insb
jns
mov
and
cli
mov
fsub
xor
add
pop
repnz
lods
int3
push
inc
sar
pop
sarl
xchg
xchg
or
jl
sti
mov
sub
xor
sub
cld
cmp
push
nop
and
lock
jg
ja
jne
fnstsw
xchg
sahf
dec
pop
out
dec
add
mov
pop
das
adc
test
jp
stos
push
adc
dec
ret
movsb
cmp
sbb
xlat
and
addr16
out
sub
sub
jnp
enter
cli
mov
mov
xlat
js
add
mov
les
nop
xlat
in
pop
mov
aas
std
mov
jmp
push
std
jmp
mov
jmp
mov
pop
in
push
decl
dec
lods
sbb
mov
filds
mov
nop
xchg
push
movhps
hlt
inc
sbb
aas
push
sbb
cmpsb
mov
cld
cmp
jg
lret
mov
jl
mov
dec
push
shlb
adc
imul
repz
dec
sti
rorb
icebp
in
lods
mov
aas
push
pop
mov
add
inc
out
decl
outsl
inc
icebp
xchg
call
out
inc
in
pop
jno
xchg
es
or
inc
sbb
sahf
push
rcl
xor
je
pop
mov
daa
fistpl
mov
inc
dec
and
int
mov
xor
jne
ret
cltd
jg
pop
and
lret
mov
out
xor
into
mov
in
in
clc
test
sbb
shlb
sub
test
icebp
and
xor
xorl
mov
and
lret
scas
int
cmpsl
fwait
jne
pop
dec
cmpsb
mov
pop
push
and
inc
jne
inc
imul
xchg
jg
scas
js
adc
das
in
int
sqrtps
jle
loop
inc
inc
jno
stos
sub
xor
sub
cmp
insl
or
pop
pushl
mov
mov
test
scas
push
pop
jg
pushf
mov
in
sbb
cs
mov
aam
pusha
add
mov
push
pop
sbb
mov
mov
repnz
xchg
adc
sub
sar
dec
inc
stc
jl
jo
outsb
lret
jne
outsb
and
fs
cmpsb
or
aaa
inc
mov
inc
int3
jbe
push
insb
js
sbb
repnz
insb
iret
push
ja
pop
cmp
movb
int3
mov
fdivs
into
or
dec
outsl
clc
movsbl
mov
push
adc
push
repnz
movsl
out
lahf
jecxz
movsl
outsb
fsubrl
cmp
pushf
icebp
test
xchg
mov
inc
lods
inc
xchg
fs
sub
test
aas
addr16
fimull
aas
arpl
decl
imul
xchg
and
push
xchg
and
or
pop
imul
xchg
and
xchg
imul
xchg
and
push
xchg
and
dec
xchg
and
xchg
imul
xchg
and
jbe
mov
dec
adc
outsb
xor
test
mov
enter
imul
and
lods
sti
test
xchg
enter
imul
and
lods
inc
test
xchg
and
mov
fwait
imul
pop
repnz
inc
out
fldl
in
xchg
push
sbb
mov
sarl
les
adc
icebp
adc
mov
push
and
mov
loop
sbb
xchg
loop
push
and
dec
loop
push
and
loop
push
and
insb
push
and
stos
push
and
stos
loop
push
and
loop
push
and
loop
push
and
aad
or
jns
jno
pushf
sbb
sahf
adc
mov
mov
dec
pop
push
add
add
sub
pop
cs
adc
cmpsl
adc
int3
jae
jl
add
push
addr16
xor
mov
xchg
inc
jns
sub
loopne
dec
aam
push
dec
sub
xchg
outsb
cmp
in
jo
pusha
inc
jp
dec
js
mov
call
push
mov
ficoms
dec
sbb
cwtl
addb
adc
fidivl
add
scas
notb
dec
test
bound
pop
int
ret
lds
mov
loope
mov
jle
mov
ja
push
inc
push
mov
test
add
ss
sub
or
push
cmc
std
popf
lock
addr16
std
rolb
or
cli
inc
jle
push
add
pop
push
rorb
pop
pop
clc
popa
aas
js
cltd
adc
mov
dec
enter
mov
je
add
mov
std
popf
mov
fimuls
dec
mov
fsubrs
popa
mov
pop
insl
jns
shll
pop
xchg
sub
mov
ljmp
adc
jg
push
xor
mov
xchg
mov
lods
lahf
das
cmp
cmp
es
mov
orb
pushf
mov
pop
cmp
inc
pop
out
xor
add
lock
roll
ss
ret
stos
out
int
push
xor
add
pop
nop
mov
inc
fadds
mov
ja
push
test
aaa
test
mov
movsl
out
cld
aaa
imul
xchg
mov
jmp
mov
aaa
rcrl
jo
mov
int3
jns
jmp
jns
or
lea
imul
xor
es
add
or
dec
fsubr
or
add
icebp
test
xchg
out
leave
mov
xchg
and
leave
je
add
xor
dec
in
fldl
jno
out
adc
jne
out
and
out
push
sub
jl
sub
pop
push
jl
das
fstpl
mov
out
mov
sti
mov
jno
xchg
sbb
add
push
mov
dec
fcmovnb
movsl
in
xor
inc
rcr
sub
push
xlat
pop
insl
ja
es
add
pusha
pop
inc
mov
or
dec
dec
loop
sub
les
mov
icebp
addr16
rcll
add
jmp
test
adc
stc
xorl
dec
or
das
add
mov
add
cmc
test
nop
or
popa
adc
ret
pushf
outsl
mov
inc
rcrl
push
int3
lea
lds
aad
insl
fpatan
imul
lahf
gs
stc
and
dec
add
mov
adc
popa
ljmp
inc
inc
popf
dec
and
sub
test
xor
out
mov
test
pushf
or
into
ret
mov
mov
dec
aam
mov
scas
xor
mov
push
subl
cmp
test
sbb
xor
and
xchg
rcrl
repnz
add
xchg
cmp
movsb
lret
into
mov
mov
inc
aad
in
std
jmp
mov
dec
and
fstp
mov
jne
dec
stos
sbb
pop
mov
scas
faddl
or
dec
pop
cmp
pushf
lods
call
out
imul
push
inc
aas
sub
xlat
rcrl
fdivrl
cwtl
dec
mov
enter
sbb
ret
mov
lods
ret
push
xor
cmp
leave
or
daa
dec
push
sbb
ret
int3
pop
adc
cmpsl
inc
dec
stos
shll
mov
dec
sbbl
xchg
cmp
cltd
push
mov
pop
sbb
ljmp
bound
jno
adc
sbb
pop
push
adc
orb
add
hlt
lea
mov
mov
mov
fs
int
and
aas
adc
inc
inc
cmp
dec
into
out
aas
xor
push
xlat
add
mov
mov
lcall
mov
ret
xlat
push
xchg
cld
add
movsl
dec
and
cld
push
movsl
pop
adc
call
xchg
pop
das
test
sub
sub
ds
int
pop
and
sbb
add
sbb
jp
nop
mov
fnsave
jbe
mov
cmp
sub
dec
mov
out
jg
sub
jmp
sbb
mov
outsl
xchg
nop
cmp
ja
inc
sub
ljmp
out
out
xchg
inc
ja
ljmp
add
mov
cmpsl
js
fsub
movb
xorl
fstpt
ja
xchg
shlb
retw
add
test
incl
jg
fisttps
cmp
and
jmp
pop
aam
inc
stos
scas
out
loop
fidivrl
xor
rcl
nop
mov
mov
mov
dec
scas
mov
gs
mov
push
fcomp
insb
adcl
stos
or
movsl
je
cli
jle
sub
loop
stc
int
insb
push
sbb
pop
lods
pop
mov
ljmp
jne
pop
mov
sarb
mov
inc
cli
add
and
orl
test
ljmp
push
jo
insl
lahf
mov
push
push
cwtl
testb
frstor
aas
jl
clc
pmaddwd
sub
xchg
ss
inc
bound
dec
je
cmp
icebp
xchg
ja
sub
cmp
nopl
jp
insl
and
sub
int
mov
rcrb
dec
dec
xor
lea
add
or
mov
mov
xchg
shll
gs
sub
mov
inc
rcl
out
adc
movsb
add
iret
add
ss
mov
loope
dec
adcb
popa
inc
xchg
jl
shll
loopne
push
loope
xchg
adc
and
sbb
cmp
jp
and
cmp
pop
mov
daa
lds
test
xchg
lret
bound
aaa
push
psrlw
mov
leave
loope
not
or
pop
movl
lret
dec
nop
repz
out
xor
aam
xchg
lock
xor
push
adc
push
lahf
mov
hlt
xchg
adc
and
or
pushf
or
mov
jns
push
xor
cmp
sbb
fwait
push
das
stos
or
dec
fimull
aam
push
leave
clc
xchg
cld
xor
dec
mov
pop
sub
imul
in
mov
movl
bound
jns
jb
cli
adc
shr
xchg
mov
lds
push
inc
addb
and
dec
pop
add
es
adc
clc
hlt
stos
push
and
and
pushf
cmp
and
imul
adc
inc
sbbl
cmp
inc
enter
rorb
mov
ds
adc
inc
push
cmp
mov
sbbl
outsb
mov
add
ja
out
sbb
mov
addr16
jmp
or
push
rcl
jbe
jns
xchg
push
mov
push
test
cltd
jge
xchg
jo
add
ja
dec
and
nop
and
call
repnz
lods
inc
sbb
js,pt
sarl
xor
mov
cmc
cwtl
aad
outsb
pop
cli
js
mov
lcall
loopnew
dec
xlat
xlat
outsb
subb
stos
xor
movsb
inc
stos
xlat
xorb
mov
test
aaa
std
adc
out
sub
fldcw
aad
push
subb
push
dec
outsb
mov
and
aaa
mov
lea
xchg
add
mov
ds
jae
cmpsb
std
dec
xor
xor
or
sti
arpl
sbbl
ja
ljmp
mov
xor
or
mov
std
inc
insl
int
scas
stos
insb
jno
imul
leave
pop
pop
xchg
adc
popa
int
jb
push
pop
sub
lahf
or
cmp
mov
add
aas
inc
adc
add
xchg
repz
and
push
xchg
xchg
icebp
js
sub
rcl
pop
sahf
xchg
mov
incl
xchg
and
fsubl
adcb
jmp
push
inc
adcb
adcb
xor
and
xorb
xchg
or
cmpl
xchg
mov
jge
cwtl
dec
arpl
int
ret
test
fldl
dec
pop
xor
pop
inc
or
aad
lds
outsb
mov
mov
xor
cmc
cltd
push
sbb
lcall
fwait
push
mov
stos
mov
jo
cmp
inc
mov
lea
loopne
lods
or
filds
int3
xchg
pop
ljmp
pop
out
clc
or
jg
xchg
add
or
lods
lods
pop
xchg
dec
mov
aaa
dec
pop
mov
rorl
inc
dec
sub
das
adc
or
push
insl
cli
ds
cmp
hlt
rcll
aas
lea
ja
inc
dec
sbb
in
sar
lcall
arpl
clc
mov
inc
in
cltd
inc
fidivs
ljmp
push
xchg
sbb
rorb
jg
sub
jno
xlat
and
xor
adc
adc
in
divl
mov
sbb
popa
jno
mov
mov
cmpsb
andb
in
xor
xchg
add
or
mov
sub
mov
jg
out
fnsave
jae
mov
fidivrs
mov
cmpb
adc
xchg
xor
stos
in
xor
in
push
jl
dec
sub
hlt
iret
jge
ljmp
inc
fnstcw
lcall
mov
xor
xor
je
sbb
inc
push
xor
roll
push
call
or
xchg
stos
inc
add
xchg
sbb
or
add
out
lret
hlt
pop
cmp
or
sbb
in
fnsave
inc
outsl
out
repnz
cli
jecxz
out
arpl
loop
pop
fwait
jg
or
daa
push
inc
jno
jle
jbe
and
xor
and
aad
xchg
pop
je
pop
ffreep
movsl
jge
mov
pop
aam
adc
in
cmp
push
sub
outsb
xor
sbb
cmp
dec
sbb
mov
adc
mov
adc
mov
popf
sahf
subw
es
cmc
rcrb
jge
popa
mov
out
push
sbb
insl
mov
loop
lcall
dec
mov
or
push
push
loop
js
push
dec
push
fmull
pop
and
in
stos
lds
int3
lods
and
mov
fmul
mov
mov
test
push
mov
clc
lcall
jno
adc
and
sbb
popf
jg
imul
add
es
aaa
mov
or
mov
lret
push
mov
or
adc
or
rcrl
out
mov
xchg
push
fnsave
movsb
jbe
or
inc
adc
sbb
push
cmp
add
cmp
or
aas
mov
cwtl
inc
add
push
ret
jg
clc
adc
je
jmp
and
out
ljmp
mov
mov
je
xchg
and
mov
ficoml
xor
inc
ss
xchg
xor
psubsb
mov
sahf
aaa
iret
add
sti
mov
sub
push
add
fmuls
sti
sub
sbb
and
or
adc
sub
inc
pop
cmp
xor
fdivrl
mov
repnz
cmc
cs
pop
pop
mov
scas
mov
pop
pop
aas
aad
nop
es
in
sbb
dec
xchg
popa
rclb
sbb
loopne
jmp
jno
subl
in
scas
das
aam
xor
push
cmp
mov
insl
mov
shrb
icebp
loopne
pushf
addr16
ja
pop
cltd
daa
dec
jg
imul
inc
or
xchg
iret
mov
sbb
test
xchg
in
push
xor
push
pop
adc
jno
sbb
sub
adc
subb
dec
lcall
psubq
cmpsl
or
dec
push
fstps
into
adc
rcrb
cmp
pop
jg
inc
dec
or
lcall
push
stos
js
subb
dec
push
add
push
mov
insl
mov
push
mov
xchg
inc
pop
loop
arpl
jbe
pop
stos
je
sub
pop
lahf
xchg
add
mov
and
int3
xchg
cmp
push
mov
sbb
sub
and
sbb
hlt
pusha
iret
pop
mov
rol
add
aas
push
lods
dec
stos
stos
pop
lret
jmp
add
pop
shlb
bound
jnp
lds
inc
mov
enter
cli
icebp
xchg
iret
inc
stos
outsl
cmp
or
lret
sub
int
jbe
outsl
jne
mov
add
push
or
or
test
jg
cmp
or
sbbb
imul
je
cmp
lahf
sahf
mov
lods
mov
mov
sub
push
out
mov
in
pop
in
ja
xlat
jmp
pop
fistps
mov
cmpsl
fisttpll
dec
dec
push
or
dec
and
cmpsb
sti
cli
or
mov
push
jmp
or
pop
xchg
stc
xor
nop
and
inc
out
clc
sbb
add
pop
and
pusha
xor
or
cmc
fadds
movhlps
jge
sbbb
jp
sub
lock
stc
mov
popa
dec
push
mov
mov
mov
rcl
adc
addr16
das
mov
jb
or
stos
xor
in
shll
es
aad
add
sub
out
push
into
jne
int3
xchg
stc
ja
stc
cltd
jmp
hlt
test
xlat
push
and
pop
fdivs
inc
mov
sub
inc
cli
mov
mov
lret
and
inc
cmc
xchg
or
ja
cmp
adc
cs
sub
cmp
sti
and
movsl
mov
jle
rorl
xchg
dec
sub
push
iret
inc
stos
out
dec
hlt
repz
adc
movsl
mov
cmc
push
or
push
adc
std
imul
jle
pop
bound
mov
cmp
es
mov
sbb
add
movsb
xchg
fists
pop
or
das
adc
jnp
jae
mov
push
aaa
xchg
pop
scas
pop
call
lea
sbb
xor
jg
scas
pop
popf
xchg
pusha
insl
int
enter
sub
std
xor
pop
js
cld
out
pop
fwait
mov
sbb
aam
into
xlat
testl
inc
ja
sub
pushl
jne
xor
inc
jbe
xchg
pop
out
subb
push
fcmovnbe
jb
push
mov
xlat
inc
inc
das
inc
ljmp
aad
out
cmp
cmp
add
mov
lods
ja
xchg
push
push
dec
stos
inc
stos
filds
dec
push
xor
push
ss
xlat
add
sbb
mov
shrb
dec
adc
sti
shrl
pop
mov
aad
iret
jmp
jmp
fisttps
xchg
push
adc
mov
pusha
push
shll
addl
std
adc
lahf
fstpl
lret
pusha
in
shl
into
inc
mov
sub
or
mov
pop
leave
btcl
lds
pop
push
aam
xorl
or
inc
scas
adc
inc
sbb
into
repnz
sub
dec
xor
dec
or
push
push
jle
or
pop
es
inc
loop
jne
adc
cld
lahf
stos
lcall
in
or
out
clc
sub
repz
stos
movsl
adc
adc
push
and
je
sbb
scas
mov
add
sbb
cli
je
cmp
imul
sub
pop
ljmp
stos
and
cmpsb
leave
lret
sub
dec
adc
dec
insb
test
test
call
jecxz
and
andb
inc
lret
int
nop
out
iret
inc
fistps
sbb
inc
mov
imul
lods
addr16
xchg
adc
subb
push
and
xchg
cwtl
aad
mov
les
add
ljmp
pop
cmpsb
adc
xchg
popa
fildl
lock
jg
movl
insb
jp
dec
xor
and
mov
xor
add
push
cmp
adc
xor
cmpsl
pop
lcall
pop
das
push
mov
push
or
outsb
jae
xchg
in
lcall
scas
jmp
xchg
jmp
stos
mov
xlat
cmp
call
popf
mov
pop
jp
pop
and
mov
stc
and
xchg
jbe
xor
jb
adc
cmp
pop
nop
mov
and
sub
and
enter
jl
cmp
inc
pop
fsubs
pusha
lret
and
adc
inc
xchg
mov
xchg
adc
testl
sub
sub
out
repz
fisttpll
mov
and
push
cwtl
testl
or
adc
lods
scas
jns
or
movsl
lods
rclb
push
and
pop
inc
sub
lcall
sbb
cwtl
xor
data16
sub
bnd
adcl
xchg
xchg
inc
subb
aaa
nop
jl
scas
stos
push
cmp
into
bound
push
jle
xchg
dec
xchg
pop
push
push
or
pop
cltd
mov
xor
adc
arpl
adc
stos
inc
xchg
sub
dec
push
push
mov
cmp
push
adc
add
test
pop
xchg
lds
push
lret
pop
call
cmp
es
jns
and
out
loopne
and
jp
rol
mov
mov
loop
fistl
or
pmovmskb
stc
cmpsl
fnstsw
jl
mov
fs
in
sub
xchg
cmp
in
xor
xchg
inc
pop
xor
es
push
add
in
lret
out
cld
icebp
lods
clc
jg
cwtl
hlt
inc
stc
inc
repz
cmp
popa
in
ja
xor
push
int
add
mov
out
cmpb
or
sub
sub
jp
inc
dec
cld
in
push
pop
ljmp
pop
fbld
sbb
push
push
and
jbe
sbb
lea
mov
addr16
sbb
jb
dec
call
aaa
xlat
mov
fldl
jmp
push
sbb
inc
dec
cmpsb
mov
push
daa
and
fs
aas
xor
pop
push
mov
mov
add
add
sub
vpmovmskb
lret
push
lds
pop
cli
xlat
add
pushf
mov
fs
xor
cmpsb
das
in
fsubs
insb
mov
pop
xlat
sub
mov
bound
and
scas
sub
ljmp
test
ljmp
mov
mov
mov
pop
out
repz
imul
fldl
mov
jg
pop
dec
leave
popf
inc
adc
test
jmp
jmp
mov
addr16
jmp
mov
xchg
pop
push
pushw
push
clc
outsb
mov
bound
mov
jmp
sub
mov
jnp
out
inc
or
les
sar
push
pop
dec
dec
scas
cld
jp
add
pop
mov
lret
mov
in
test
mov
mov
cs
in
incb
int
iret
sub
leave
sbb
stc
mov
mov
mov
cs
cmp
xchg
pop
add
imul
xlat
or
xor
ja
sahf
das
out
pop
sti
xor
mov
pop
enter
stos
std
adc
mov
inc
mov
mov
dec
loop
dec
xchg
rorl
sbb
fisubrl
shrb
leave
lcall
dec
das
shlb
fdivl
rcl
dec
xlat
call
fwait
daa
push
lcall
push
mov
and
cmpsl
icebp
push
mov
and
jo
loope
mov
xchg
add
dec
mov
or
and
int3
aad
aaa
jbe
mov
sti
xlat
pop
jns
pop
mov
jl
lret
or
out
pop
mov
xor
lods
cli
cmp
loopne
hlt
das
and
mov
mov
imul
jg
cmc
jecxz
movsb
ljmp
mov
mov
mul
inc
mov
rcll
bound
xchg
mov
lret
xchg
mov
or
or
and
in
add
xchg
ret
test
lret
sbbb
lea
jg
xchg
fs
adc
inc
es
xor
aaa
inc
pop
jne
xor
and
pop
mov
push
lods
xchg
es
xor
lret
add
iret
pop
lock
loopne
add
fwait
in
and
loopne
notl
lds
out
push
scas
mov
adc
inc
pop
cmp
mov
je
aas
xchg
cmpsl
jg
xchg
pop
sub
nop
dec
cmp
mov
inc
sub
movsl
cmc
dec
add
lods
jle
fbstp
mov
in
mov
leave
sub
repnz
insb
into
jg
jne
mov
push
fs
lods
jle
dec
cli
scas
mov
movsb
cli
clc
aad
imul
and
jecxz
push
and
sub
jne
rorb
sub
leave
mov
ljmp
mov
inc
pop
cmp
scas
ffree
push
aad
cmc
inc
pop
jmp
xor
cmc
pop
es
xchg
push
sahf
push
call
xor
cmp
ss
lock
test
xor
scas
in
dec
cmpsl
cltd
pop
mov
push
hlt
movsb
lods
inc
mov
xchg
mov
xchg
xchg
xor
sub
dec
incl
xor
sub
ss
and
das
dec
cs
mov
xchg
sbb
sub
ljmp
loop
loopne
jb
pop
sbb
insb
sub
xchg
inc
lock
lcall
pop
mov
and
bound
mov
into
adc
scas
fwait
iret
test
xchg
jbe
sub
loopne
sub
jmp
add
sti
mov
sbb
and
out
mov
daa
mov
cltd
mov
push
call
int3
pop
pop
mov
inc
minps
sbb
push
jmp
bound
call
outsl
pop
or
mov
xchg
mov
push
jb
xor
add
mov
pop
cli
test
imulb
cld
fildl
mov
pop
and
sbb
aad
cwtl
or
arpl
and
enter
mov
int3
sbb
jno
pcmpgtb
adc
scas
pop
hlt
pop
gs
mov
push
and
ficompl
lcall
in
sbb
shl
std
insb
pinsrw
negb
das
dec
xlat
in
pop
adc
daa
xor
inc
jns
lea
aaa
mov
test
ficomps
js
icebp
dec
mov
pop
cmp
ja
js
lahf
add
mov
jmp
add
mov
in
push
mulb
ss
pop
cltd
aas
test
addr16
icebp
pop
test
lcall
push
xor
test
xchg
fstpl
sahf
loopne
pop
mov
flds
cmpsb
adc
xor
pushf
or
bound
xor
testl
adc
adc
cmp
sbb
push
mov
jle
mov
push
sbb
outsb
scas
pop
js
xchg
fdiv
xchg
cmpb
enter
lahf
fldl
repnz
gs
cmp
xchg
add
jb
leave
pop
movsb
std
ret
mov
and
push
pop
repz
lcall
inc
pop
cmp
sbb
decb
lahf
hlt
aad
out
push
dec
gs
pop
jae
push
movsb
mov
scas
scas
outsb
dec
sbbb
aad
pop
fnstsw
push
mov
mov
aam
dec
fwait
mov
out
mov
mov
pop
pop
mov
mov
ret
jae
sub
xchg
push
xor
loop
push
push
dec
dec
inc
cmc
adc
sbb
jae
mov
insb
pop
pop
mov
adc
cld
jb
mov
or
mov
in
fcomip
mov
aad
inc
pop
add
xchg
dec
testb
mov
mov
imul
ds
lds
fildll
inc
push
mov
jmp
cli
lahf
lods
nop
cmp
lret
and
std
insl
aas
jbe
in
jg
add
sahf
mov
sub
notb
clc
jns
insb
mov
mov
dec
and
sub
daa
lods
arpl
push
push
jno
jl
push
add
sub
inc
cmpsl
jl
push
out
jo
lahf
sub
scas
xor
pop
outsl
push
push
fs
jg
inc
std
stc
or
xchg
sub
outsb
movsb
popa
je
cmp
stos
test
stos
jns
shlb
std
add
out
fmuls
push
sbb
jo
mov
aad
shlb
call
xchg
dec
mov
test
sub
push
imul
adc
popf
orb
ds
sub
leave
add
push
and
cmp
sbbl
icebp
mov
inc
fsubrs
loopne
inc
shll
push
repnz
and
adc
jae
or
pop
xchg
and
jmp
xlat
inc
jnp
sarb
cli
adc
jno
jl
inc
adc
imull
mov
addl
out
aas
shrl
pop
push
mov
sub
test
cmp
dec
jns
jmp
ljmp
ljmp
sbb
scas
cltd
insb
add
cmp
ss
in
adc
inc
cli
int3
sub
jle
and
pusha
sbb
adc
adcb
inc
or
xor
add
or
or
lock
jmp
adc
loop
jg
add
fcomp
insb
rcl
sti
popf
inc
loop
pop
negl
push
sahf
adc
dec
mov
pop
mov
and
dec
popa
or
pop
xor
hlt
xor
adc
sbb
jno
test
adc
sub
outsl
icebp
inc
push
push
int3
jns
mov
inc
cmp
inc
fs
inc
push
dec
adc
cmp
xor
push
jnp
push
xor
scas
xchg
orb
or
imul
or
mov
xchg
out
loopne
push
out
push
out
aad
movsl
xchg
xor
mov
test
pop
dec
inc
popfw
hlt
insl
sbb
popf
and
stc
mov
xor
stos
pushf
xor
cmpsl
cwtl
fsubl
and
cmpsl
adc
pop
cwtl
mov
movsb
cltd
inc
loopne
out
mov
add
lods
mov
mov
xor
sub
aas
aad
cltd
xlat
ljmp
xor
push
roll
or
mov
aas
clc
cld
xor
push
ljmp
dec
inc
mov
xor
imul
or
sarl
jl
xchg
fidivrl
mov
hlt
and
pop
or
adc
and
and
outsl
cwtl
and
imull
mov
sbb
or
mov
imul
filds
insl
adc
adc
pop
adc
inc
mulb
lgs
xchg
adc
or
pop
and
jle
xorl
push
dec
push
dec
lods
sub
cmp
or
fidivs
inc
xchg
sbb
push
pop
sub
hlt
inc
sbb
imul
int3
push
lea
push
push
mov
sbb
shlb
fsub
jbe
jnp
lods
fstl
in
push
pop
mov
push
nop
in
ljmp
pop
out
faddl
dec
out
mov
lods
test
mov
subb
mov
movsl
ret
jb
adc
out
mov
xor
test
lret
push
dec
movsb
insl
lret
scas
scas
mov
or
lahf
in
std
push
rcrb
stc
popa
popa
mov
jnp
mov
and
in
jle
jae
mov
dec
andb
imul
mov
or
enter
inc
push
mov
inc
lods
pop
jns
les
push
imul
xlat
inc
cmp
add
insl
shrl
int3
xchg
inc
notl
cmpsl
jge
mov
jmp
adc
mov
jno
pop
add
adc
icebp
cmpsb
mov
push
sub
fisttps
xchg
push
fs
iret
xchg
cmp
clc
xchg
cmpsl
pop
cltd
jg
mov
add
push
data16
es
dec
addb
inc
ss
jmp
cmpsb
sarl
shll
mov
mov
add
scas
int
jbe
inc
lahf
dec
aad
add
adc
gs
notb
lock
xchg
cltd
cmp
adc
jmp
in
xchg
lret
std
fiaddl
cmpsb
fs
jne
leave
and
and
mov
ja
jnp
push
jg
pcmpgtb
pop
adc
mov
sub
xor
mov
ja
inc
mov
and
mov
cmp
enter
mov
pop
jnp
or
ja
pop
div
in
das
xchg
orb
scas
gs
xor
ret
cmpsb
xchg
pop
arpl
sub
lcall
lahf
loop
fneni(8087
xchg
jmp
icebp
push
pop
pop
fidivl
xchg
jle
push
cmpsl
stos
jecxz
cmp
xchg
fcoms
stos
jecxz
add
xor
rclb
xor
xor
lock
mov
sbb
jno
push
in
out
xchg
dec
lahf
dec
loopne
mov
pop
push
or
pop
dec
mov
in
push
xchg
mov
push
ljmp
lcall
psubusw
push
je
iret
int
xor
mov
xor
icebp
sub
xchg
mov
shll
int
pop
std
addr16
and
lret
ficoms
stc
push
jo
nop
mov
into
lahf
jns
jge
pop
sub
ret
das
pop
mov
ret
mov
in
std
in
loopne
in
xchg
or
js
or
aam
xchg
or
mov
enter
cli
cmp
movsl
sti
in
fs
insb
xchg
xchg
pop
add
pop
fwait
fs
add
jbe
add
push
xchg
aam
jnp
fmul
pop
into
scas
mov
dec
cmp
lcall
mov
pop
or
mov
and
xchg
gs
xchg
and
xchg
xlat
data16
dec
cmp
out
mov
repz
push
push
push
cmc
roll
ljmp
mov
mov
inc
insl
add
mov
and
add
popf
out
ret
adc
aaa
or
movsb
xor
das
ret
xchg
stc
add
cmpsl
pusha
adc
dec
mov
pop
mov
ret
cmp
in
jne
dec
mov
xchg
add
sub
mov
stos
xor
mov
adc
and
and
push
xor
outsb
test
sub
cmpsb
push
push
pop
mov
mov
mov
jmp
aaa
test
and
inc
mov
push
add
push
mov
repnz
mov
lea
sbb
mov
mov
cld
shll
notl
lret
popa
or
ss
jmp
xchg
xor
popa
sub
lcall
sub
adc
rcll
push
sub
jae
js
push
loopne
fwait
fwait
push
imul
aaa
std
xchg
jne
dec
add
push
jns
mov
push
aaa
das
pop
push
lahf
pop
sbb
push
lock
std
rolb
das
cmp
jne
mov
in
imull
mov
pop
dec
pop
fsts
dec
stos
test
or
xor
push
gs
mov
cli
xchg
jl
outsb
enter
dec
loop
fsubrs
mov
fsubr
std
jp
dec
push
fcomps
je
fwait
rorl
dec
xlat
jnp
jne
popa
in
xchg
push
sbb
fildll
mov
and
sub
aad
jg
ss
pop
pop
dec
insl
pop
fsubrl
out
mov
hlt
and
jmp
cmc
stos
mov
add
mov
xlat
call
or
jp
fildl
jmp
aam
lcall
loopne
mov
ja
fnsave
lcall
shll
nop
out
inc
adc
mov
lods
adc
fst
jne
movsl
xlat
fscale
add
roll
ljmp
in
push
hlt
sub
mov
andb
and
adc
push
orb
push
rcrb
xchg
inc
sbb
push
sbb
inc
push
int3
je
sbb
movl
jae
lock
mov
and
call
push
ja
or
jmp
xchg
mov
mov
arpl
test
stos
rcrl
pop
repz
xor
jl
push
sbb
loop
mov
and
data16
mov
adc
inc
mov
std
push
xlat
jno
fbld
dec
xchg
adc
or
bound
dec
pop
and
cmp
mov
dec
repz
imul
sbb
or
xor
lods
fs
das
scas
cmpsb
jns
xchg
push
cmp
or
pop
pop
mov
jo
mov
imul
es
movsb
inc
adc
pop
push
xchg
jb
pop
sti
push
xchg
xchg
aam
in
lret
xor
push
dec
sub
lods
inc
pop
into
and
xchg
fs
repz
xchg
add
fnstsw
daa
push
jp
cmpsb
add
add
mov
shrb
dec
add
stc
es
aad
lods
xchg
pop
add
xor
lods
sahf
jmp
add
lahf
jb
sub
mov
sub
push
mov
and
in
xor
mov
pushf
cmp
jno
dec
clc
mov
or
imul
pop
pop
pop
loop
inc
shrb
and
mov
or
int3
adc
in
cmc
and
cltd
or
push
jb
sub
test
xor
mov
lock
xor
inc
into
xchg
mov
test
cld
movsb
hlt
fdivrl
inc
and
cmp
insb
push
inc
xchg
je
mov
loop
or
andb
xor
enterw
cmpsl
pushf
mov
sub
pushf
sahf
mov
jnp
fnstenv
ja
cmp
adc
insb
adc
jecxz
push
scas
ja
jo
lcall
adc
lret
and
test
dec
sbb
scas
xlat
adc
xor
out
dec
mov
push
nop
rol
sti
icebp
clc
mov
out
mov
aas
xchg
inc
aad
je
aas
sub
out
icebp
imul
sbb
jge
lret
inc
loope
popa
in
jl
mov
xor
add
movsl
pusha
inc
cltd
or
fmull
mov
xorl
cmp
faddl
push
sub
adc
dec
cmp
lret
lahf
xchg
mov
movsb
and
mov
out
and
and
cltd
out
fsubrl
xor
push
es
aad
inc
js
and
out
mov
ljmp
lds
popf
adc
jmp
mov
sub
sub
add
xchg
dec
loopne
ljmp
and
adc
scas
fcom
inc
sarb
or
lods
mov
mov
pushl
iret
jle
mov
popf
mov
test
test
and
enter
sbb
ja
lock
fmull
out
mov
mov
jne
and
push
scas
xchg
imul
sahf
pop
adc
jne
add
std
or
mov
rcrb
pop
mov
das
adcb
xchg
ret
aaa
test
in
scas
xlat
inc
adcl
jbe
add
pop
push
repz
xchg
jg
fsts
sub
inc
rcll
gs
add
jmp
sar
jo
insl
mov
sti
iret
into
and
int
nop
addb
fs
push
pop
divb
or
cmc
shlb
bound
scas
add
push
sub
adc
dec
xorl
mov
cmp
mov
lds
addl
stos
call
mov
pop
sub
sub
decb
movsb
sub
fidivs
js
ljmp
pop
mov
push
adc
pop
adc
inc
dec
push
jo
dec
add
into
cli
lods
test
inc
pop
pusha
adcl
insl
adc
data16
test
repnz
nop
or
das
ljmp
cmpsl
stos
adc
mov
stos
add
fbstp
je
test
fbstp
jge
inc
lea
stos
pop
repz
dec
fwait
cmc
mov
inc
out
repnz
lods
push
add
mov
inc
mov
sbb
andb
pop
jo
push
aam
mov
cmp
dec
and
cmp
out
lock
xchg
jne
pop
xor
scas
lods
and
incb
popf
bound
nop
jle
sub
xor
ljmp
xor
ss
rcl
pop
nop
and
rcll
inc
fcoml
dec
inc
xor
cmp
pushf
xchg
aaa
imul
testb
jge
pop
mov
rorb
icebp
fsubs
mov
fldl
test
lret
std
in
mov
shrl
jge
mov
cmpsl
sbb
mov
xchg
jno
shrb
jge
dec
sbb
hlt
nop
inc
mov
int3
fs
lock
xor
rcrl
scas
mov
push
cmc
fdivrl
add
and
pop
adc
dec
cs
add
or
add
fcmovb
fadds
rcll
hlt
sahf
sbb
dec
add
lahf
mov
dec
scas
and
xor
dec
jmp
and
mov
cmpsb
lret
pop
jle
loope
and
mov
jp
loopne
stos
stos
leave
inc
mov
sti
mov
mov
inc
fistpl
mov
inc
lock
out
aas
mov
stos
rcrb
cmpb
cs
sti
in
mov
inc
subl
inc
stos
scas
push
int
call
cli
cld
sub
pop
fst
out
sbb
aam
pop
adc
fcmovnbe
test
aaa
daa
push
add
aaa
mov
out
mov
insb
sub
dec
inc
mov
stos
fmuls
repz
and
imul
mov
mov
jae
out
movsl
lods
mov
sub
push
in
fnstenv
sub
pop
adc
inc
xor
adc
mov
pop
bound
loopne
mov
xchg
add
bound
out
mov
sub
cli
dec
nop
loopne
in
into
and
xor
icebp
imul
mov
xchg
sahf
imulb
pop
cltd
insb
fnstsw
push
jg
dec
popf
jmp
loop
and
pop
pop
imulb
rorl
sti
call
outsb
jnp
scas
pop
mov
or
inc
ss
stos
std
pusha
push
sarb
mov
outsl
negb
jge
cmpsb
cwtl
ja
or
jnp
cld
addr16
fisubs
sbb
ffree
mov
clc
test
push
push
xchg
sti
xchg
sub
rcr
sbb
out
mov
mov
shr
jo
mov
cmpsl
leave
push
sbb
es
and
jbe
jbe
mov
dec
sbb
pop
mov
gs
or
daa
mov
ljmp
sub
push
add
nop
adc
jne
or
or
nop
seto
or
dec
mov
xchg
inc
mov
pushf
pop
es
adc
mov
or
dec
cmovs
dec
daa
dec
and
dec
fisttps
dec
fisttpl
dec
xchg
dec
xchg
dec
orl
out
dec
in
dec
jmp
icebp
dec
dec
lds
dec
stc
dec
decl
dec
sti
dec
add
dec
cmc
dec
jecxz
jmp
dec
lret
dec
rorl
dec
in
xchg
dec
mov
cltd
and
and
and
and
and
and
and
and
and
and
and
and
and
and
popf
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
adc
insb
adc
js
jb
je
dec
adc
pop
adc
adc
adc
mov
and
and
and
and
and
and
and
and
and
and
and
and
cli
clc
mov
add
int3
out
ljmp
es
out
hlt
dec
out
lock
movsl
cmp
xchg
stos
movsb
movsl
pusha
push
fadds
lret
in
dec
fdivr
shrl
adc
adc
push
in
add
push
dec
pop
add
out
pop
shl
fstpl
sbb
test
push
mov
pop
xor
xor
movsb
adc
sub
xorl
pop
mov
mov
popf
subl
or
mov
iret
scas
mov
push
ja
xchg
aam
mov
js
cmp
push
cli
movhps
jmp
icebp
popf
filds
fnstsw
cmp
jle
pop
rclb
inc
xorl
negb
push
add
adc
add
aad
push
add
inc
mov
mov
sbb
add
or
dec
and
lock
pop
sub
lock
mov
mov
lods
cwtl
sub
and
or
or
inc
js
sub
sbb
lahf
mov
xor
sbb
xlat
mov
or
mov
jp
sbb
jge
pop
subb
adc
flds
nop
lahf
ja
stc
call
and
mov
jecxz
xchg
push
jg
or
sub
in
push
popa
sub
add
inc
ja
or
movsl
jle
es
idivl
sbb
popf
jge
nop
notb
adc
push
jp
imul
adc
pop
cmp
cmc
mov
shr
inc
jecxz
sub
sbb
movsb
fcomp
ret
fnstenv
mov
dec
add
mov
cli
mov
push
into
popf
jbe
mov
aam
mov
js
out
leave
fstpt
cld
xor
xlat
adc
dec
arpl
mov
jbe
jne
push
insb
out
es
ljmp
imul
scas
push
outsl
jecxz
cmpsl
int3
or
aas
int
scas
add
movb
mov
dec
mov
inc
stos
push
repz
int
imul
push
jge
xchg
pop
ljmp
sbb
out
inc
sti
fiadds
lea
icebp
test
sbb
jb
xchg
or
loope
hlt
add
cmp
or
add
int
jl
push
add
loopne
pop
sbb
iret
add
add
ljmp
and
mov
js
add
pop
repnz
xor
icebp
scas
pop
cli
aam
push
add
pop
int
lea
dec
add
mov
out
jmp
lret
jp
add
fsub
mov
add
fbstp
add
sti
fbstp
pop
dec
add
add
bound
outsl
and
push
repnz
or
cmp
pop
mov
add
int3
test
add
cmpsl
push
outsl
in
mov
out
inc
sbb
aad
inc
add
or
das
add
xor
add
mov
pop
adc
sti
add
outsl
repnz
test
jmp
jo
xlat
add
push
inc
add
push
cli
xor
adc
add
sbb
push
add
pop
mov
add
mov
aam
xchg
call
jecxz
adc
pop
idivb
add
loopne
data16
add
add
push
mov
notl
fisttpll
cmpsl
add
aad
push
into
dec
into
add
call
jae
and
sub
mov
pop
pop
push
and
or
pop
mov
fisubs
mov
ljmp
sub
in
add
push
icebp
mov
sahf
lods
call
jb
and
sbb
jbe
fiaddl
arpl
add
cli
inc
pop
adc
mov
cs
sub
cmp
adc
aaa
mov
mov
call
add
outsb
mov
mov
sub
into
call
mov
les
fwait
stos
stos
mov
add
xchg
mov
out
sbb
ret
jle
adc
cmp
push
pop
jg
add
push
inc
mov
add
add
ds
push
test
cmpl
mov
xor
add
ljmp
add
int
out
cwtl
iret
jnp
in
movsb
les
dec
xor
sbb
insb
add
jo
pop
jno
add
enter
push
add
or
cs
popf
pop
mov
shlb
dec
inc
add
fadds
pop
rorl
add
popf
xor
es
hlt
xor
gs
movl
pop
sbb
xor
shlb
dec
push
cmp
fiadds
pushl
ret
or
fistpl
jl
test
add
loope
orb
pop
add
mov
add
cmp
rolb
add
mov
add
in
pop
xlat
add
in
cmp
xchg
sub
mov
rcll
add
inc
cmpsl
stc
add
jno
or
movsl
cmp
popf
add
lds
cmpsb
pop
adc
mov
add
shrb
enter
push
add
adc
movsb
add
inc
in
add
push
nop
out
adc
jbe
je
in
add
arpl
add
popa
loope
fdivp
add
in
cmc
jno
and
outsl
dec
jecxz
enter
add
cwtl
test
add
sahf
dec
xchg
nop
xchg
movb
fsubr
int
mov
push
add
out
sub
and
mov
je
xchg
fcmove
pop
cltd
inc
add
xchg
cmp
js
aam
je
adc
shll
pop
jle
sbb
mov
mov
cmc
bound
inc
imul
mov
add
inc
test
xchg
aam
push
sbb
lea
cmpsb
lods
andb
test
test
add
cwtl
daa
in
or
insl
jns
push
jbe
add
jo
add
xor
jl
jbe
mov
or
adc
test
cmp
jp
add
sarl
fadd
adc
aam
pop
add
mov
sub
and
add
mov
or
test
cmp
adc
pop
sbb
push
push
push
add
and
daa
es
add
pop
or
outsb
cmp
sub
pop
xor
adc
cmp
sub
and
mov
dec
or
add
add
fiaddl
and
pusha
push
and
test
test
mov
add
mov
ficoml
cmpsl
or
ret
arpl
mov
mov
ror
pushf
aad
jnp
sub
add
inc
clc
inc
push
mov
xor
mov
data16
xchg
pop
sbb
xchg
adc
add
or
es
push
fstpl
data16
cmp
push
sub
and
and
inc
dec
pop
inc
or
inc
clc
rorb
dec
dec
dec
mov
fistpl
inc
dec
push
or
shlb
leave
add
mov
inc
mov
cs
xor
add
xor
rclb
neg
frstor
fwait
mov
les
sbb
jp
js
rclb
or
test
or
cmp
dec
sti
mov
add
or
push
or
adc
sbbl
pop
sbb
jg
test
xlat
cmp
shlb
add
scas
mov
int3
int
leave
adcb
jmp
mov
cltd
mov
jmp
lock
ss
fsub
xchg
lds
in
repz
loopne
idivb
cmp
ljmp
loop
negl
fbstp
lods
and
aas
sub
sbb
addr16
in
mov
mov
aaa
cmp
sub
mov
ret
xor
loopne
ret
int3
shrl
cmp
test
out
push
mov
mov
xchg
add
push
bound
jp
aaa
stos
cwtl
adc
jg
dec
inc
dec
pop
rorl
aas
int3
ss
pop
repz
std
mov
inc
ja
add
jo
push
dec
nop
or
mov
enter
fisubl
push
pop
lods
fdivr
dec
or
lds
cld
out
sub
fsubr
loope
jp
stos
rclb
sub
inc
push
cs
push
sub
sbbb
les
push
or
lods
lock
imul
add
bound
jp
gs
ds
jns
mov
data16
cmpsb
mov
inc
mov
lods
test
mov
add
lock
jg
es
mov
xor
ror
or
sub
add
repnz
jl
pop
cmp
stc
iret
repz
inc
bound
aas
jecxz
adc
push
pop
jb
jg
pop
dec
ja
jbe
mov
pop
add
nop
xchg
loopne
out
pop
and
or
scas
mov
jecxz
call
xlat
pop
rol
aam
mov
stc
mov
xchg
ja
sub
xor
mov
mov
out
rcr
pop
subl
and
nop
xchg
dec
scas
adc
fsubrl
or
sub
jge
sub
sahf
popf
and
inc
xor
inc
mov
xor
inc
mov
mov
mov
into
xlat
push
es
lds
testb
jecxz
mov
jg
test
dec
in
negl
movb
pop
add
cmp
xlat
xor
jp
popa
into
xor
xor
add
or
or
cmp
mov
pop
mov
mov
dec
das
pop
jge
jo
into
dec
sbb
call
out
xor
sbb
jae
cs
outsl
mov
xor
aaa
das
mov
fs
test
xor
sub
mov
shr
jmp
jecxz
mov
in
fmull
in
orl
std
cld
pushf
lcall
mov
fcoml
int3
inc
mov
add
mov
mov
xorl
rorb
sub
lock
mov
addl
cmpsl
cmpsl
sbb
lea
ss
stc
mov
push
std
fucomi
js
fs
lret
pop
pop
inc
or
cmpsb
sub
fsubs
pusha
push
lcall
lock
cmc
add
mov
ret
and
mov
xchg
das
mov
out
mov
dec
aaa
loope
xchg
mov
xchg
stos
sar
jb
fmulp
out
inc
or
rol
out
imul
idivl
push
in
scas
sbb
push
adc
adc
lret
fsub
mov
icebp
xchg
imul
pop
cmp
pop
adcb
hlt
adc
cmpsl
sub
minps
aaa
hlt
pop
loopne
cmpsl
or
jo
push
je
in
xchg
push
xchg
ljmp
inc
push
adc
mov
outsb
std
mov
scas
icebp
cmpsb
push
mov
scas
mov
xchg
sahf
jle
xchg
enter
xor
ljmp
out
loope
dec
cmp
mov
sub
imul
insb
push
mov
test
and
push
and
push
ret
xchg
mov
push
push
rcll
mov
lods
out
ljmp
jbe
jge
popf
insl
add
push
fldcw
xchg
or
mov
aad
xor
ljmp
jg
push
and
push
lahf
in
push
adc
test
mov
rolb
scas
in
stos
inc
mov
ror
cmp
mov
or
pop
cmp
scas
ds
in
ret
mov
and
add
std
popa
cmp
push
push
xor
pusha
js
push
jo
addr16
add
loope
push
inc
ss
xchg
dec
and
in
mov
into
arpl
jle
icebp
xchg
test
add
movsl
ljmp
mov
mov
shlb
fdivrp
jno
fldl
test
aad
dec
push
jp
mov
lret
les
ret
iret
cmp
hlt
xor
daa
add
pop
pop
pop
pop
and
xor
lock
stos
and
push
or
pop
inc
mov
pop
push
dec
inc
scas
dec
outsb
lods
fs
dec
cmpsb
add
in
pop
scas
push
movsl
int
cli
add
mov
dec
mov
pop
fldenv
int
xchg
xchg
outsl
xchg
loop
in
icebp
lds
test
mov
cs
push
pop
jnp
sbb
cmp
lds
sub
mov
xor
ret
sti
pop
pop
adc
fsubs
sub
stc
ja
leave
popa
jne
lret
ljmp
pop
dec
inc
xor
mov
iret
dec
cmp
cmpsb
jecxz
sbb
adc
jecxz
jne
call
push
dec
outsb
and
sbb
sbb
push
and
pop
push
int
xchg
roll
je
dec
mov
popf
pop
inc
or
add
sub
mov
loop
test
iret
pop
sub
ljmp
cmp
std
inc
ret
mov
nop
fdivp
loop
fcomps
loope
push
icebp
fs
jg
sahf
mov
aam
in
fidivl
pop
mov
mov
in
mov
stos
dec
movsl
cmp
sbb
jns
pop
sahf
jmp
dec
in
xlat
sub
pop
push
insb
pusha
imul
repnz
xchg
add
lahf
sbb
inc
jl
imul
pop
push
pushf
push
mov
mov
ror
int3
popf
aam
mov
fwait
sti
push
mov
mov
sub
xor
faddl
ret
mov
jb
jmp
fisubrs
lds
addl
push
in
xor
fsubrs
and
xor
sub
stos
add
xchg
adcb
mov
aaa
test
je
jp
mov
pusha
out
stos
scas
stos
pop
sbb
jnp
dec
cld
mov
sub
jbe
mov
jne
jecxz
mov
ret
sbb
into
ljmp
mov
cmpsb
out
inc
fcomi
sti
sub
cmp
std
xchg
imul
loop
cmp
clc
mov
xor
aam
repnz
pop
cmp
push
mov
or
inc
inc
adc
adc
pop
lret
adc
fisubl
andl
push
add
inc
dec
cmp
out
mulb
jbe
cmp
nop
sub
xchg
test
pop
lahf
mov
mov
xlat
xchg
mov
mov
mov
push
cmpsb
push
dec
scas
xlat
pop
adc
mov
xor
in
in
jge
ficomps
loope
xchg
arpl
push
pop
movsl
loope
mov
xor
push
add
adc
sbb
jle
cltd
jecxz
jns
insl
imul
jne
in
aaa
push
std
or
mov
adc
aas
lret
mov
dec
ss
dec
xor
pop
sahf
push
pop
xlat
addr16
es
out
movsb
int3
inc
repz
ja
scas
or
jmp
cltd
xchg
push
gs
aaa
fcmove
mov
inc
push
sbb
fcoml
ror
popa
sub
ja
mov
push
jg
lods
cltd
lret
sbbl
mov
scas
push
outsb
mov
pop
int3
or
es
pop
aaa
mov
sbb
push
xor
cltd
xchg
or
xchg
daa
imul
pop
out
mov
imul
mov
pop
test
xor
cld
mov
lds
imul
insl
idiv
mov
fisttps
arpl
fldl
into
pop
xchg
data16
scas
cmc
push
test
cmp
jmp
fstpt
icebp
sub
mov
aaa
jecxz
mov
test
shll
push
pop
mov
inc
cwtl
xchg
jp
cmpsb
lcall
imul
in
pop
dec
int3
jg
dec
lea
xchg
scas
repnz
fcom
iret
or
xchg
int
mov
cmp
repz
leave
gs
mov
adc
mov
push
and
je
mov
xor
xchg
aaa
sbb
sbb
es
pop
aas
cmp
sub
sahf
xor
ja
inc
imul
xchg
pop
push
dec
std
outsl
stc
jo
add
outsb
pop
push
cli
push
and
push
adc
pop
scas
add
insb
insl
lds
fcmovnbe
mov
addl
lret
sbb
loopne
xchg
push
jl
jl
pop
out
pop
clc
mov
sahf
movsb
ror
std
stc
shrb
mov
push
jecxz
mov
scas
std
jp
ficompl
les
or
xchg
lret
mov
imul
idivb
popa
hlt
mov
cmpsb
cli
dec
mov
pop
push
jg
cmp
fyl2x
pop
push
cmpsb
daa
outsl
pop
jecxz
daa
fldenv
repz
cmpb
push
sbb
mov
sti
cli
loopne
icebp
lods
push
mulb
mov
pop
cmp
in
cmp
les
jbe
xor
sub
push
push
loop
mov
imul
aaa
pop
and
jmp
dec
aas
adc
jge
inc
dec
dec
inc
mov
push
mov
fnstenv
test
xacquire
jb
cwtl
dec
ja
lret
push
mov
add
mov
nop
pop
ret
inc
add
adc
imul
add
add
push
inc
push
adc
sub
pusha
or
inc
std
sbb
sub
or
rcr
pop
mov
test
add
pop
in
int
bound
mov
jbe
and
or
aaa
movsl
fld
sarb
and
test
adc
or
into
xor
push
add
stc
mov
push
icebp
mov
stc
hlt
and
inc
test
mov
into
pop
mov
imul
stos
imul
sub
mov
add
dec
mov
xor
dec
push
pop
xchg
andb
fwait
nop
sbb
fbld
fimull
daa
pop
shlb
jo
fistps
shlb
inc
imul
and
aas
aad
enter
pop
add
add
xor
xchg
or
xor
out
lds
outsl
adc
sarl
push
mov
lock
or
popa
scas
into
adc
xchg
mov
adc
std
mov
jne
xchg
xor
pushf
or
movsl
sub
pushf
cmp
jne
and
pop
repz
jge
hlt
add
inc
je
add
dec
dec
neg
lret
in
add
aad
stc
fucom
cmc
loope
div
add
out
clc
push
xchg
aaa
call
sub
add
das
or
adc
push
adc
sbbb
inc
sub
jb
xor
mov
dec
adc
sub
ljmp
and
add
xchg
xchg
test
loopne
int
aam
add
cwtl
in
aam
fcmovb
ret
fstl
ret
dec
mov
pop
hlt
fdivs
mov
movlps
push
adc
ds
xorb
add
sbb
mov
and
jp
test
or
sbb
and
inc
jb
fmuls
pop
mov
ja
gs
xchg
xchg
add
mov
outsb
imul
xchg
adc
jne
push
js
mov
push
aam
fninit
ret
mov
out
sub
xchg
cmp
in
or
ficoms
mov
and
mov
cmp
mov
xchg
decb
xchg
test
sub
xchg
shrb
imul
loopne
in
dec
repnz
stos
lods
adc
mov
fistpl
xlat
fists
lods
divb
mov
mov
mov
push
sub
add
add
push
add
jno
jns
mov
sahf
aas
adc
cmp
xchg
cmp
fsubrs
imul
mov
xchg
mov
stos
jl
mov
leave
adc
test
sub
pop
mov
push
adc
aaa
add
xchg
inc
or
push
inc
sub
pop
adc
jbe
fldt
aas
out
jns
cmp
dec
sub
inc
sbb
mov
cmpsb
outsl
aad
inc
xor
add
add
xchg
adc
xchg
mov
or
dec
add
inc
outsb
jnp
clc
push
push
mov
mov
test
xchg
mov
nop
mov
ret
cmp
lods
push
mov
adc
sbb
shl
ret
fbld
jnp
mov
sbb
aam
add
fld
add
rcl
int
sub
dec
adc
push
vmptrld
pop
popa
bound
adc
jle
dec
outsl
fdivs
push
sub
xor
cmp
push
push
inc
add
pop
push
pop
sub
inc
jg
pushfw
gs
pop
add
jno
jne
mov
push
xchg
jne
bound
dec
push
addr16
in
xchg
aad
mov
mov
xchg
or
test
scas
xchg
mov
push
aaa
int3
cmp
xor
adc
rcrb
fcmovnb
lret
lret
sub
sbb
xchg
dec
test
pop
xchg
cmp
mov
das
push
cltd
xchg
cmp
stos
add
loop
pop
cmovbe
sbb
mov
adc
cld
into
sbb
dec
outsl
jp
pop
sbb
mov
mov
pushf
subl
mov
mov
inc
xchg
stos
push
jp
imul
insb
push
cmp
pop
rcrl
test
imul
int
sahf
push
in
jns
jb
mov
in
lcall
lcall
lcall
lcall
dec
jmp
add
xor
dec
dec
dec
push
xor
rcrl
xchg
shrl
imul
imul
pop
dec
pop
dec
xor
mov
mov
lods
rcrl
fucom
lcall
lcall
lcall
lcall
lcall
lcall
lcall
dec
add
dec
cmp
dec
lods
mov
rorl
pop
roll
jno
xor
sarl
or
pop
roll
dec
push
xor
lods
mov
cmpsb
test
aad
fldenv
lcall
lcall
lcall
sahf
push
push
ret
andb
dec
and
adc
jno
inc
sbb
add
dec
jg
cmp
jg
inc
jae
pop
jle
sbb
adc
cmp
in
fiadds
aam
fisubrs
int
cmp
mov
insl
push
dec
fldt
out
xor
les
arpl
ffreep
sub
jmp
lret
insb
insb
dec
and
cmp
es
lods
lea
push
sbb
rol
adc
push
or
push
fimull
ja
pusha
insl
ja
imul
test
mov
mov
ret
mov
shll
mov
inc
inc
inc
jb
in
mov
arpl
insb
bound
jo
sub
xor
in
sbb
adc
push
mov
and
enter
or
mov
mov
inc
test
subb
inc
repnz
push
clc
xor
jg
scas
in
cmpsb
into
outsb
repz
jl
jecxz
push
in
ret
loopne
loop
adc
or
pop
push
sbb
lods
jbe
mov
std
aad
mov
dec
in
xchg
pushf
cmp
cltd
arpl
xor
lret
icebp
jae
xchg
sbb
fisttpll
xor
imull
inc
js
cmp
and
xchg
jmp
daa
inc
arpl
sahf
mov
fidivrs
mov
mov
pop
pusha
stos
push
mov
iret
or
sbb
dec
shl
pushf
aaa
mov
cmp
jmp
out
lock
in
insl
mov
in
ja
mov
add
or
fcos
xchg
in
and
mov
xor
pop
bound
fiaddl
aas
pop
hlt
jmp
push
movsb
inc
inc
jno
push
sub
outsl
jge
mov
or
sarl
mov
pop
cli
mov
xor
or
xchg
or
ja
pop
rorl
push
ret
cli
jae
xchg
iret
sub
pop
jp
sub
outsb
leave
imul
les
sub
movsb
pushf
shrl
out
jle
stos
jns
or
adc
jns
add
mov
scas
inc
push
mov
popa
cmpsl
addb
mov
rcrl
xchg
shlb
xor
push
stos
xor
and
adc
fistl
xor
pop
mull
dec
sub
and
inc
push
adc
cmp
or
mov
icebp
add
or
or
in
xchg
dec
push
and
mov
ljmp
sarb
xchg
mov
cli
enter
cwtl
xchg
sub
addl
loope
mov
lcall
out
jl
xlat
rcll
mov
mov
mov
jbe
sbb
sub
add
loop
mov
arpl
ret
jns
js
cmp
gs
lods
mov
cmpsb
jle
gs
push
icebp
or
mov
pop
inc
mov
test
aas
pop
fnstsw
mov
lock
pushf
std
add
push
aaa
push
insb
scas
sub
loope
cmpsb
xchg
mov
mov
js
sub
or
cmp
xor
dec
mov
sbb
dec
push
dec
cmpsl
push
or
jnp
insb
leave
es
aam
jo
push
pop
push
imul
cld
movsb
mov
ret
fidivl
mov
or
mov
gs
div
mov
add
mov
add
movl
jmp
inc
lds
xor
mov
popa
movsl
xchg
xor
cmp
ds
cmp
cmp
jno
stos
pop
mov
gs
fldl2t
cmpl
icebp
xor
mov
out
cmp
adc
rclb
cmpsl
push
js
dec
mov
std
icebp
in
jl
dec
push
sub
mov
pop
jnp
jle
incb
inc
mov
pop
xchg
pop
xor
mov
jne
dec
aas
jle
push
pop
or
jne
outsl
mov
sahf
fildl
xor
adc
and
rcrb
out
xchg
je
jnp
lahf
out
mov
cmpsb
add
mov
cmpsb
jl
jecxz
dec
pop
mov
push
mov
clc
lea
adc
stc
mov
lahf
jne
sub
test
aas
xchg
aas
decl
les
jnp
lds
std
xchg
cmp
fwait
xor
cmp
sbb
lds
std
jp
ljmp
enter
mov
data16
inc
negl
out
lds
lock
jbe
xlat
sub
mov
int
inc
pusha
jnp
loope
and
push
sub
movsb
add
inc
mov
push
sub
dec
sub
icebp
push
leave
cmp
outsb
push
xor
lcall
sub
imul
cmp
cmc
mov
andl
cmp
notl
pop
aas
sti
sub
add
outsl
jno
fcmove
lock
xchg
push
sbb
mov
mov
cmp
stc
mov
rclb
cli
insl
outsb
add
add
popf
jle
and
imul
out
repz
insb
pusha
jns
jnp
rcrl
aas
loopne
pop
pop
push
xchg
or
add
insb
push
sub
or
popa
fsts
adc
jecxz
xchg
xchg
mov
mov
rclb
mov
jne
addr16
inc
inc
in
insl
mov
sbb
jge
pushf
mov
xor
or
scas
jne
cld
ds
call
cmp
ja
movsl
sub
sbb
xor
inc
imul
js,pn
lret
sbb
in
out
dec
cwtl
dec
inc
dec
out
iret
sbb
lret
out
xchg
jl
mov
in
jle
cmpsb
subl
or
bnd
xchg
sbb
ss
mov
pop
in
ss
push
shlb
pop
cmpsl
aad
rcrb
cmp
sub
pop
inc
pop
cmp
push
out
pop
sub
stc
cmp
jmp
jno
stos
push
mov
cld
lods
mov
ljmp
sub
dec
repnz
push
leave
movsl
pop
sbbl
std
cli
fnstsw
cmp
sbb
sub
aas
data16
jne
int3
sub
sbb
adc
sbb
pushf
xchg
mov
push
sub
xchg
push
and
cs
sahf
mov
push
sub
aad
andb
stos
loope
shl
or
dec
mov
lret
jae
rcrl
cld
add
loop
lock
in
xor
inc
or
add
lds
ds
aaa
push
popa
lock
push
or
cmp
clc
jb
aas
ret
dec
icebp
mov
aaa
stos
push
jge
mov
xchg
jecxz
iret
pop
lds
or
ds
xor
xor
xchg
ss
addr16
ss
mov
mov
pop
test
imul
mov
ror
aad
jne
mov
cmp
pop
push
pop
mov
js
push
out
lock
test
xor
adc
lods
mov
xchg
ja
pop
loope
xchg
xchg
das
pop
and
mov
jo
xlat
xor
sbb
push
sbb
xlat
push
jecxz
test
jne
aam
pop
cwtl
mov
dec
sbb
sub
xchg
aas
pop
pop
adc
mov
cmc
or
inc
movsl
adc
ds
mov
dec
xchg
inc
push
jmp
arpl
inc
inc
pop
dec
inc
push
push
dec
cmp
cmpsl
out
ficoml
clc
mov
inc
outsl
test
jne
push
insb
cmp
int
fdivs
xchg
cmp
aaa
lods
ja
loop
xor
cmp
sub
das
sub
jo
jbe
mov
in
mov
loop
fistpll
stos
nop
sbb
fisubl
push
ja
pop
popf
xchg
int3
ljmp
aad
pop
inc
push
pop
pop
fadds
aam
into
leave
subb
jne
imul
cld
pop
js
gs
push
cld
pop
push
outsl
mov
mov
adc
or
ljmp
pop
scas
or
jp
mov
mov
mov
nop
and
xor
sbbl
test
mov
stos
jl
jne
push
adc
aam
je
push
xlat
sarl
mov
popf
push
jb
roll
sub
bound
aad
aas
jb
lret
movsl
iret
mov
decl
jge
push
xchg
jns
std
icebp
pop
dec
jne
faddl
arpl
sub
push
jne
lods
mov
mov
mov
scas
fdivrl
xchg
mov
shrl
icebp
sbb
inc
jae
jg
mov
push
and
mov
aam
mov
sbb
fwait
xor
aaa
inc
sub
jg
xor
jno
mov
add
add
mov
jns
ljmp
jb
fldcw
ja
push
sti
xor
movsb
inc
dec
lods
xchg
mov
mov
sbb
pop
or
push
pop
dec
stos
in
xor
iret
iret
xor
ljmp
cltd
out
mov
adc
outsb
stos
fists
movsl
std
push
pushl
insl
lea
cmp
repz
xchg
fldt
jge
or
lods
mov
jb
xor
sbb
nop
mov
xchg
jp
aas
mov
dec
or
xchg
loop
mov
scas
insb
inc
or
fwait
mov
std
mov
push
pop
pop
js
mov
cmc
hlt
xchg
pop
in
dec
mov
in
cmp
cli
xchg
xor
fldt
into
orb
jmp
repz
jg
push
jle
jo
andb
add
push
pop
loope
inc
jne
mov
sbb
sbb
aaa
inc
push
aas
push
fs
xchg
cmp
push
xchg
xchg
inc
std
cld
icebp
lods
mov
jl
mov
popf
jne
rolb
push
or
std
jmp
jecxz
iret
scas
sbb
xor
cmp
jae
cmpsl
pop
xor
jb
scas
in
rorl
imul
mov
inc
push
outsl
xchg
pop
fwait
outsb
outsl
push
cs
enter
jecxz
in
scas
mov
scas
mov
push
xchg
fdivrl
push
pop
fdivl
aad
jecxz
pop
sbb
insl
sbb
lea
push
jle
mov
out
sbbl
ljmp
imul
jmp
or
int3
pusha
mov
scas
adc
push
fnstenv
in
test
push
out
inc
fwait
cmpsb
mov
mov
push
mov
fisubrs
lds
mov
mov
dec
jbe
popf
imul
sbb
packsswb
mov
xor
iret
imul
lods
into
not
pushw
and
jns
testb
inc
push
std
pop
loop
sbb
fs
lret
ret
es
gs
decb
lock
scas
movsb
test
xchg
jmp
stos
stos
cmp
mov
xor
push
and
test
outsb
ljmp
ss
je
xchg
stos
ss
inc
mov
int
add
xlat
inc
add
adc
sub
and
mov
cmp
jnp
jae
xor
mov
aad
jne
mov
shrb
out
xor
xchg
pminsw
shr
icebp
data16
nop
pop
lods
test
iret
stos
push
les
or
adcl
inc
lods
xor
aad
cmp
sbb
pop
rcrl
cmp
movsl
xchg
xlat
scas
cmp
mov
jp
mov
test
sub
adc
jne
test
shrb
xchg
cmpsl
cmpsb
jg
adc
lret
test
lds
mov
js
leave
xchg
ds
push
flds
aam
cltd
popf
push
sub
scas
jno
scas
aam
mov
push
dec
sub
push
rolb
mov
int
lods
adc
pop
xchg
in
fbld
jns
je
inc
mov
adc
ljmp
stos
mov
jp
xorl
insb
jp
cmc
popf
mov
insl
mov
dec
or
or
mov
jo
test
dec
sbb
nop
sub
fmul
movsb
cmpsl
dec
mov
cmp
jne
inc
out
ds
repz
jle
out
movsl
into
mov
and
jne
dec
inc
xor
aaa
subl
mov
ret
scas
mov
scas
xchg
movsl
lds
lods
into
xchg
push
cli
mov
push
mov
int
ljmp
insl
cltd
jl
lret
pop
fildll
jecxz
lret
sub
scas
xchg
xchg
arpl
std
push
or
adc
push
pop
push
call
scas
pop
xor
cmp
xchg
cs
push
pop
cmp
fs
push
out
lods
mov
repnz
mov
jg
sbb
mulb
adc
mov
jne,pn
inc
lret
movsl
xchg
test
jecxz
jmp
negl
pop
pop
sbb
jb
jne
in
popa
push
push
repz
xchg
fdivr
or
add
push
jl
cli
int3
cmp
aad
out
subl
lds
mov
pop
out
fwait
sbb
jno
lods
or
in
mov
fbld
jno
bound
outsb
jle
push
jne
idiv
cltd
jle
mov
xchg
pushf
sbb
xchg
cmc
cmp
pusha
arpl
adc
xchg
xor
sub
pop
movsb
int3
mov
out
icebp
pop
mov
cld
sub
std
loop
scas
pop
jmp
jge
ja
aam
push
je
pop
pop
gs
push
push
and
loop
push
or
ja
mov
popf
pop
cmp
mov
xor
sbb
mov
test
pop
fistpll
or
push
addr16
data16
cmpsl
repnz
add
or
cmp
cs
sub
into
xcrypt-cbc
cmpsl
xlat
dec
mov
xchg
sbbb
inc
mov
jae
push
xchg
jnp
pop
ret
ret
sub
ret
sbb
xor
decl
pop
fsubr
jb
pop
pop
push
hlt
jnp
pop
inc
adc
test
pushf
stc
mov
repz
sbb
ret
test
movsl
je
fcomip
and
cld
cwtl
mov
or
stos
mov
cli
sarl
in
cmc
hlt
out
fucomp
mov
ficoms
out
mov
stos
jno
call
adc
pop
movsw
bound
dec
pop
lcall
jnp
gs
out
add
stos
sti
or
pushl
xchg
xchg
adc
out
push
dec
xlat
lret
fucom
xchg
jb
jmp
sbb
dec
loopne
mov
sub
jmpw
out
clc
out
fsubrs
jle
pop
jns
ret
shll
fisubrs
mov
lcall
in
add
xchg
push
arpl
hlt
incl
mov
jnp
cld
rolb
lret
clc
jmp
cmp
call
filds
jbe
push
cmpsb
imul
xlat
dec
insl
jnp
cmp
mov
jmp
mov
xchg
xchg
repnz
popa
push
sbb
xor
push
mov
jmp
out
xchg
sbb
inc
dec
clc
jae
dec
cmc
lock
ret
xchg
inc
scas
mov
fcoms
push
mov
mov
mov
icebp
out
test
cld
lods
xlat
mov
inc
mov
test
ds
stos
fcoms
fwait
sti
scas
pop
mov
and
in
stos
adc
into
jge
pop
add
push
outsl
xchg
fnstsw
sbb
stos
jae
mov
mov
icebp
pop
xor
sub
and
pop
xor
pop
in
stos
cmp
jae
inc
push
aad
imul
lods
push
push
sbbl
sub
nop
aaa
xchg
lret
scas
test
jmp
dec
scas
lea
sbb
pop
mov
shll
lock
dec
mov
mov
fisubrs
out
fimull
stos
icebp
add
mov
cmc
mov
mov
or
stos
or
into
sub
push
lods
jmp
lret
js
stos
fcoms
stos
lds
cmpsb
aas
mov
mov
jns
lcall
je
lea
outsb
mov
iret
addl
aad
pop
sub
mov
div
jge
mov
out
push
mov
gs
call
outsl
popa
or
ja
mov
pop
xorl
or
in
and
mov
out
cmpsl
fstl
outsb
jle
std
xchg
jg
xor
icebp
sub
roll
cmc
scas
sub
cmp
push
ljmp
dec
mov
loopne
jp
mov
mov
ror
popf
jb
mov
lcall
push
int
ljmp
enter
jbe
movsb
fists
mov
mov
mov
je
iret
xor
ficompl
int3
out
xor
int
fsubrs
xlat
bound
ss
push
mov
imul
js
f2xm1
inc
push
pop
xor
cs
ljmp
mov
jae
icebp
mov
stos
test
scas
ret
out
xchg
jge
sbb
test
push
pop
cmc
out
insb
push
popf
xor
sub
test
sbb
pop
aam
cld
sbb
clc
adc
cmp
mov
sbb
ret
outsl
scas
scas
mov
lods
pop
scas
call
lcall
lcall
and
sub
iret
adc
les
js
inc
add
push
ret
stos
pop
pop
es
orl
out
stos
adc
add
movsb
stos
xor
and
fstp
cmp
xchg
dec
cmp
fimuls
add
sbb
push
cmc
aam
push
pop
stos
stos
fists
push
insb
adc
jmp
dec
mov
sub
push
ror
leave
fldcw
mov
xlat
xchg
inc
das
lahf
scas
test
jmp
xchg
out
xchg
int
push
iret
mov
cmp
or
icebp
call
std
in
iret
out
mov
outsb
push
adc
push
fsubrs
gs
jb
mov
xchg
sbb
xor
xchg
jo
outsl
pop
and
xchg
and
repnz
out
push
movsb
and
xor
lahf
andb
mov
ret
mov
pop
sbbb
push
test
mov
lcall
mov
adc
xor
and
cmp
mov
pop
add
cld
sahf
push
or
or
jbe
pop
test
scas
fstpt
cmc
inc
adc
mov
out
das
and
xor
test
sbb
in
out
insb
adcb
movups
adc
or
push
sub
flds
js
ret
cmp
pop
mov
mov
jg
leave
lcall
ljmp
jecxz
loope
imulb
jg
pop
test
imul
scas
test
mov
in
xor
ret
mov
mov
scas
scas
push
inc
push
mov
int
insl
jmp
or
sub
mov
or
leave
pusha
aam
je
sub
sbb
or
dec
call
inc
out
mov
mov
shrl
lahf
popf
filds
in
loop
and
in
lcall
clc
mov
mov
neg
and
scas
loope
pop
dec
xchg
aas
cmp
push
xor
sbb
popa
pop
or
outsb
scas
fildll
push
jecxz
fwait
pop
jp
sub
xor
dec
insl
push
out
rclb
inc
je
js
stos
fbstp
push
cmp
movsl
fstp
cltd
fdivrl
rcll
mov
movsl
mov
fidivrs
ljmp
sti
repz
mov
scas
ljmp
bound
xor
aaa
ja
stos
and
cli
jmp
icebp
xor
lret
push
mov
sub
or
push
push
jp
insl
insb
sbb
cmc
sbb
out
pop
jae
cmp
xor
into
jns
loop
insl
xchg
cmc
sbb
mov
stos
stos
orb
rcr
into
adc
and
scas
clc
mov
sarl
inc
mov
pop
ljmp
mov
mov
pop
iret
push
rorb
cwtl
jecxz
push
shlb
adc
insl
aad
xlat
pop
cmc
xor
mov
sub
adc
push
jo
cli
dec
imul
outsl
mov
int3
mov
hlt
repz
cs
fucomp
ljmp
aaa
jb
push
outsl
mov
into
or
dec
xlat
movsb
sbb
push
jp
push
frstor
ds
fisttpll
pushf
jg
fsts
scas
repz
dec
cmc
mov
xchg
jmp
lcall
sti
int3
call
lods
hlt
mov
incb
xchg
insl
lret
pusha
xor
cli
xchg
push
push
pusha
idivb
in
adc
or
popa
inc
push
stos
imul
jnp
fs
aam
mov
adc
pop
outsb
cs
cli
push
cmpsb
fsubl
cmp
xlat
xchg
mov
nop
pushf
sbb
mov
inc
sbb
aad
and
insb
pop
jge
fld
ret
shrl
mov
pop
cmp
in
cmp
add
xor
or
ja
pusha
push
pop
mov
xor
inc
rcr
aad
popf
xlat
lds
les
int
push
jg
aad
test
or
in
mull
and
lods
sub
dec
xchg
test
dec
mov
push
jns
mov
pop
sbb
inc
mov
psrad
test
repnz
lods
icebp
insl
mov
outsl
pushl
push
mov
loop
dec
adc
adc
push
mov
imul
xlat
push
push
out
cmp
scas
daa
out
in
rcrl
push
ja
xchg
fcom
push
cmc
xchg
adc
arpl
pop
pusha
mov
push
push
in
sbbb
dec
js
or
add
and
aad
lea
push
aad
add
adc
mulb
int
lcall
mov
push
sbb
das
sub
ror
xor
xor
stos
adc
xchg
lret
sub
jmp
shrl
lods
jno
andl
jge
adc
stos
jmp
leave
icebp
decl
scas
repz
test
dec
sti
xchg
fsts
cs
ljmp
ret
adc
sarl
hlt
xchg
loop
sti
das
sti
mov
rcr
jb
js
pusha
sub
cmp
arpl
jecxz
push
dec
sbb
mov
pop
mov
test
add
jno
rcrb
call
mov
cmp
data16
xchg
pusha
sub
rolb
in
add
jecxz
xorb
mov
adc
pop
mov
sub
ret
adc
andb
push
dec
nop
adc
outsl
add
leave
jne
jg
pop
add
adc
imul
add
mov
ret
adc
imul
add
mov
dec
xchg
sbb
mov
dec
inc
sbb
pop
sbb
popa
sbb
adc
inc
insl
xor
or
sbb
pop
add
push
mov
push
push
lret
mov
dec
mov
sbb
out
push
fadds
in
cltd
flds
add
push
gs
orb
lock
jbe
xor
sbb
add
ret
cltd
xor
add
orb
fcomi
mov
xor
pop
add
addr16
dec
push
insb
cmp
xchg
decl
mov
adcl
mov
pusha
add
orb
xor
out
push
fadds
into
ret
cltd
ljmp
add
bound
leave
xchg
mov
outsl
insb
dec
mov
xor
rolb
sbb
lret
sbb
add
int3
andl
mov
sbb
lret
sbb
lahf
mov
mov
rclb
pop
dec
or
lcall
dec
push
pop
or
add
ds
lahf
jl
cwtl
pop
gs
fwait
jnp
push
push
push
pop
ret
pusha
sub
mov
scas
dec
xchg
mov
orb
scas
rorb
adc
out
adc
enter
ficompl
and
mov
lods
add
or
add
sub
and
shll
not
arpl
pop
sbb
pavgw
ja
arpl
add
aam
test
pop
cwtl
jbe,pn
fldl
mov
loop
sbb
mov
xchg
aad
in
ja
test
cld
cmp
jg
arpl
fadd
push
loope
cld
cmp
jg
arpl
fadd
jg
push
lock
aad
loope
packsswb
jecxz
jbe
jge
pushf
mov
cmc
stos
jecxz
call
jmp
jae
out
enter
shrb
loope
mov
jg
mov
std
mov
xlat
jmp
rcl
loop
ljmp
pop
rcrl
dec
push
in
pop
mov
call
pop
pop
xchg
jle
inc
dec
pop
pop
inc
ja
fistpll
gs
pop
jle
lea
mov
cltd
icebp
test
mov
cmc
hlt
cmc
aad
adc
movsb
cwtl
sahf
dec
sti
ljmp
sbb
pop
xor
stos
mulb
aad
xor
lret
pop
les
ja
jp
push
pop
jae,pn
jns
dec
and
fildll
or
and
and
mov
repnz
ja
xchg
jb
fs
xchg
mov
gs
fistpll
lea
pushf
addr16
mull
testl
xor
pop
test
or
cmp
int3
mov
int
mov
mov
push
out
and
xchg
mov
sub
in
imul
loop
adc
scas
cmp
rorb
push
mov
popa
jo
add
adc
pop
add
mov
push
dec
add
nop
cmp
clc
cmc
test
adc
aas
sub
mov
pop
clc
push
hlt
xchg
mov
mov
jno
push
pop
ret
lods
inc
jne
mov
or
iret
std
test
cmp
cs
xor
and
mov
out
or
pop
pop
aam
mov
arpl
fs
push
pop
pop
mov
ret
pop
fiadds
xchg
es
pop
pushf
nop
out
mov
outsb
mov
xchg
test
movsl
mov
adc
xlat
scas
out
xchg
subb
sbb
shl
sbb
pop
ss
jge
mov
ret
mov
cmp
cs
inc
push
mov
ss
push
cmp
aad
push
cmc
pop
pop
lahf
inc
sub
movsb
add
dec
mov
mov
dec
jp
push
pop
gs
inc
fdivr
imul
cmp
addr16
jg
push
fcomps
mov
out
out
in
sbbl
lret
sti
lods
lock
jmp
not
mov
pop
testb
pop
dec
or
or
rep
sbb
cli
stc
push
mov
mov
jae
insl
addr16
or
xor
inc
inc
test
ss
lret
mov
mov
mov
mov
movsl
mov
lds
sub
hlt
sahf
push
jno
out
or
pop
cli
imul
stos
int
jno
fcoms
sub
outsb
and
insl
jge
leave
jge
aam
popf
jp
cmc
jnp
jbe
mov
lods
jb
dec
cmp
jno
mov
push
jae
lcall
dec
mov
call
pop
popf
fldenv
mov
scas
mov
cmpsb
outsl
cmpsb
or
sub
mov
sbb
rcr
loop
inc
notl
outsl
push
pop
xchg
inc
pop
xlat
stos
insl
xchg
gs
std
xchg
aad
in
xchg
movsb
add
pop
imul
inc
loop
sub
call
imul
in
bound
test
cmp
sub
fsubrs
mov
jne
aad
adc
lock
sti
test
das
xchg
ja
jg
or
lret
ljmp
adc
and
push
aas
stos
sub
andl
and
insl
ja
jmp
je
jne
pop
push
popa
imul
mov
fcomi
sbb
es
xlat
pushf
ss
fnsave
fstpt
mov
sbb
xor
aam
adcb
lods
jae
out
mov
stos
mov
adc
push
sub
cwtl
mov
lret
jp
xor
lcall
push
stos
sub
lret
loopne
mov
ret
insb
jo
in
in
jg,pn
mov
push
jge
inc
mov
ja
add
push
div
das
jge
and
aad
cmpsb
and
add
insl
xorl
xlat
inc
sbb
shll
lods
inc
fdivs
lods
mov
jns
jns
ds
call
inc
aad
sbb
adc
mov
or
popa
and
or
and
mov
outsb
js
inc
add
add
fldl
xchg
pusha
sbb
push
add
shlb
jns
stos
sub
xchg
jge
lcall
mov
mov
push
scas
iret
clc
lods
or
enter
aam
cmp
sbb
int
mov
stc
push
adc
cs
out
shlb
inc
repz
inc
xchg
clc
test
shrb
xchg
mov
inc
cmpb
adc
mov
xchg
mov
inc
dec
mov
jnp
xchg
cld
jno
pop
iret
add
xchg
xlat
nop
movsb
xchg
mov
and
xchg
or
daa
js
fwait
push
mov
mov
sbb
dec
mov
out
lods
mov
mov
push
cld
fxch
mov
jecxz
pop
repz
mov
pop
fs
add
xchg
stos
jo
jns
addr16
iret
push
ds
and
push
stos
jle
lcall
ljmp
or
jns
jb
pop
clc
loop
rorb
cmc
ror
pushf
test
inc
pop
sarb
lock
add
bound
ret
out
and
shlb
or
dec
sub
icebp
test
dec
push
add
push
push
dec
mov
not
scas
mov
mov
lds
pop
cmc
jns
push
xchg
cmpsb
nop
loopne
loopne
mov
sti
nop
div
notl
xchg
loop
ret
cmpl
das
scas
in
jl
pushf
repnz
mov
add
jge
inc
mov
in
inc
add
adc
arpl
leave
fists
add
push
cli
cltd
push
sub
cs
push
dec
aad
sub
adc
rcrl
fwait
stos
daa
push
rclb
pop
mov
or
popf
cmp
dec
mov
andl
pop
jns
mov
jno
xchg
or
cld
xchg
or
or
or
js
outsl
pop
push
adcl
jp
push
cmp
pusha
aas
and
std
xchg
stos
sbb
pop
aaa
add
stos
int
inc
jmp
mul
faddl
jecxz
cld
sbb
rclb
pop
adc
and
xorl
out
pop
inc
push
into
data16
jp
mov
cmp
inc
daa
ss
sbb
loop
pusha
pop
mov
fs
fsubrs
mov
ficoml
mov
mov
iret
mov
push
mov
cld
lret
frstor
add
lret
or
lds
sub
out
and
aad
adc
xlat
leave
push
cmp
xor
cmp
fsubrs
pop
jl
pop
cmp
xor
and
cmp
push
inc
mov
aad
shlb
nop
xor
xchg
call
pop
mov
rcll
inc
xor
sub
lahf
pop
mov
or
ja
xchg
push
sarl
data16
repz
int3
je
iret
xchg
lods
iret
add
sbb
sbb
repz
and
fcomps
sbb
inc
pop
dec
jge
daa
jle
in
jo
das
add
push
jg
in
jns
pop
cmp
shll
xchg
xor
mov
mov
fldcw
hlt
rol
lea
int3
mov
push
clc
fistpll
enter
movsb
lods
mov
jne
loopne
mov
pop
pop
adc
sbb
mov
inc
xlat
push
lahf
ljmp
sub
scas
in
dec
fistps
pop
ret
push
push
xchg
das
aam
mov
sahf
dec
test
mov
jo
push
call
sub
fsubl
dec
mov
xchg
pop
cld
sub
cmc
jmp
stc
inc
jle
or
idivb
cmc
dec
or
std
pop
arpl
movsl
jge
insb
fcmovb
lahf
popf
push
sbb
mov
notl
std
jg
xchg
pop
jne
cmpsl
fwait
xlat
fisttps
and
jecxz
arpl
fisubrs
mov
adc
loopne
sti
ret
jnp
push
inc
scas
sbb
cmp
adc
jge
push
scas
mov
inc
inc
inc
jp
outsl
jg
xor
out
cld
nop
iret
sub
sbb
adc
or
ja
and
push
dec
pop
int
push
push
xchg
sub
mov
lods
pop
mov
mov
cmp
lcall
cwtl
and
jno
pop
cli
dec
incl
mov
mov
test
pop
or
out
mov
or
div
jl
scas
mov
in
jge
sbb
je
jg
das
std
je
ja
xchg
xchg
fstp
popa
push
mov
pop
lahf
cmp
in
imul
lea
jne
mov
popf
fcomip
cmpsb
call
imul
cmp
lret
jg
mov
ja
imul
mov
scas
test
pop
repnz
sbb
lods
mulb
sti
jmp
addb
adc
inc
lds
sarb
rcl
popf
jge
mov
add
test
jp
or
lds
mov
xchg
lret
dec
mov
push
sarb
xchg
push
int
stos
imul
mov
push
fisubrl
dec
gs
push
mov
scas
fcoms
mov
or
xor
aad
push
aad
jecxz
pop
inc
xchg
cmp
mov
lret
adc
out
scas
or
add
mov
xlat
cmpsb
cmp
mov
mov
popa
dec
fists
mov
mov
inc
cltd
push
xor
outsb
mov
jno
lret
jge
mov
scas
adc
mov
lea
xchg
stc
lret
sub
mov
mov
sub
push
stos
stos
cs
mov
sbb
push
insb
es
int3
out
imul
inc
push
pop
sbb
or
ss
adc
insl
sub
repz
test
mov
fcomps
xchg
mov
cmp
mov
lcall
ds
sub
xor
jmp
pop
pop
repz
ljmp
mov
lahf
jge
xchg
fs
ljmp
stc
push
lds
fadds
aam
idivl
adc
lret
mov
clc
ret
xlat
or
lods
jb
out
jg
and
js
xchg
test
xor
mov
arpl
in
outsl
idiv
and
or
stos
stos
ret
lock
ljmp
or
push
cli
stc
test
and
push
cmp
xor
sub
test
xchg
jmp
or
out
leave
pusha
iret
insb
lret
cli
mov
dec
sbb
loopne
loopne
sub
scas
sbb
jbe
or
pop
xor
push
and
mov
sub
inc
test
movsl
aam
movsb
and
pop
jb
out
inc
mov
sub
and
and
cli
out
lods
cld
lahf
xchg
push
xchg
cmpsl
inc
daa
mov
call
stos
clc
shll
out
mov
dec
add
dec
cmp
push
xlat
sub
xchg
xlat
mov
ljmp
mov
sbb
add
or
in
stos
in
or
lods
sub
mov
dec
cmp
dec
pop
xchg
xchg
push
push
imul
ljmp
jno
and
cmp
push
jmp
push
push
movsb
xchg
xchg
fwait
stos
push
ja
out
push
cmpl
out
mov
cmp
pop
in
aaa
fldt
cmp
mov
std
test
loopne
in
pop
popa
mov
mov
cmp
push
stos
mov
cmp
rclb
mov
pop
jnp
push
flds
aad
cmc
pop
sub
fnstsw
sbb
scas
call
mov
push
in
adc
fiaddl
cmc
push
movsl
lds
fists
push
xchg
data16
aad
or
mov
cmp
jp
jmp
mov
cmp
stos
test
mov
scas
jo
lcall
mov
movsb
les
or
xor
fsubs
mov
push
test
clc
mov
subb
push
pcmpeqb
aam
test
inc
xlat
fidivl
and
push
mov
daa
jle
lds
and
or
cmp
jecxz
cmc
mov
stc
orl
stos
stos
mov
test
mov
subb
enter
imul
divl
xlat
fisubl
lahf
fucomp
sbb
dec
cld
pop
mov
int
orl
pop
pop
jle
in
loopne
cld
mov
frstor
xlat
cld
jo
pop
in
cld
clc
aad
jg
enter
loope
sti
sbb
stos
adc
sti
cltd
pop
leave
jecxz
out
hlt
lds
out
mov
pop
stos
mov
pop
out
cli
sub
mov
push
addr16
cld
or
push
push
lods
inc
lea
ja
xor
pop
push
ja
lahf
push
rolb
dec
mov
push
fsubs
arpl
jne
out
jbe,pn
stc
repz
repz
icebp
pop
lods
out
jae
adc
mov
popf
iret
fidivrl
addl
and
in
mov
mov
push
enter
push
push
xorl
and
in
mov
fwait
cmp
stos
in
adc
mov
push
enter
add
jne
pop
fstpl
call
ret
mov
jns
fs
sbb
push
fxch
pop
fs
nop
jecxz
inc
int3
fldl2e
pop
fs
sbb
test
mov
push
enter
and
leave
xorl
and
pop
push
enter
sbb
adc
fstpt
and
push
mov
ja
cmc
scas
js
xorl
adc
pop
je
and
push
mov
pop
fs
mov
in
pop
xorl
add
mov
push
enter
int
scas
scas
in
pop
pop
repnz
out
pop
imul
repz
mov
hlt
out
pop
mov
jmp
outsb
scas
add
cli
rclb
or
arpl
scas
imul
std
mov
dec
and
xchg
fldcw
icebp
popf
and
or
mov
negb
lods
xor
pop
pusha
iret
lcall
ret
cmc
inc
fidivrl
scas
mov
or
cmp
mov
cmp
insl
and
loop
pop
fld
push
push
inc
xchg
mov
dec
pushf
pop
dec
or
jmp
aas
stc
loopne
lahf
out
push
ror
addr16
fisubrs
pop
ja
popf
cld
dec
jmp
push
ret
repnz
jbe
sub
test
pop
fwait
aaa
sub
cltd
cmp
scas
pop
fsubrl
add
outsl
xlat
jle
mov
xchg
sar
push
inc
notl
and
dec
dec
mov
inc
push
jbe
sbb
mov
xchg
outsb
mov
orl
xchg
cs
loope
loopne
sahf
xchg
out
mov
dec
jmp
test
stos
push
jmp
pop
sbb
cmp
aad
jns
push
mov
cli
cld
and
xor
xchg
push
sbb
adc
out
loopne
js
lret
sbb
adcb
mov
jg
ljmp
mov
cli
out
mov
fldcw
push
mov
fistps
out
fs
push
inc
and
mov
sub
std
jle
insl
scas
fs
mov
outsl
mov
stos
cmpsl
ret
out
mov
decb
sub
lcall
fdivl
xor
imul
cmp
ds
jmp
sub
cld
inc
dec
sti
mov
mov
pop
jl
cmpsb
or
fcmovb
jl
popa
lods
int
cmp
int3
mov
pop
add
dec
inc
pop
lock
cmp
xchg
and
and
inc
cmp
add
imul
ljmp
xor
icebp
dec
sti
in
xor
sar
stos
les
scas
mov
and
sub
jne
xchg
sub
out
jne
mov
jne
xchg
gs
and
and
cld
clc
idiv
xlat
es
repnz
scas
jmp
fistl
aad
push
stc
iret
iret
sub
fisubl
cmpsb
mov
mov
jne
je
jne
mov
jae
push
cmp
into
imul
scas
add
xchg
mov
push
imul
lret
stos
rorb
dec
jno
inc
mov
xor
scas
push
cmp
call
popf
fstp
mov
mov
call
mov
and
ret
adc
jle
sahf
pop
jecxz
sub
mov
insb
adc
pop
test
mov
inc
xor
jecxz
test
mov
lcall
movsl
inc
pop
fwait
push
push
lret
xor
ss
and
scas
sahf
sbb
push
hlt
mov
sbb
mov
mov
mov
xchg
sbb
jmp
sti
jg
fistps
pop
fyl2x
sub
lods
push
imul
cmp
xor
jno
in
pop
cmp
in
popa
movsl
sub
fmuls
idivb
push
or
icebp
loope
into
xchg
inc
mov
clc
xorb
push
cli
andl
sbb
into
test
cmc
call
push
or
jno
cld
lods
inc
test
cmp
ss
dec
inc
sub
daa
and
sbb
scas
repz
dec
aam
push
arpl
pop
cmp
push
out
and
pop
pop
xchg
add
punpckldq
inc
jne
jne
push
stc
jp
mov
leave
add
jmp
cs
xor
xchg
xor
adc
iret
jge
gs
out
je
pop
je
enter
sub
adc
sarl
pop
mov
or
imul
cmp
arpl
adc
fcoml
dec
push
daa
add
ds
rol
cli
cmpsl
xor
mov
fidivl
add
inc
mov
inc
scas
scas
loope
stos
jmp
inc
mov
inc
add
ja
sub
sbb
cmpsb
and
dec
lcall
clc
in
loope
mov
mov
pop
cmpsb
jo
sub
test
mov
mov
dec
out
pushl
stos
push
xor
lods
pop
pop
fildll
push
out
fstl
pop
xchg
adc
mov
cmp
pop
lret
in
jg
pop
push
popf
push
hlt
clc
mov
push
std
aad
jge
pop
dec
popa
pop
adcb
adc
mov
js,pn
xor
inc
jne
popa
inc
or
sbb
pop
addr16
push
or
scas
dec
je
push
sub
ja
jno
call
adc
add
jg
adc
xlat
adc
sbb
mov
xchg
setge
lret
mov
cli
es
cld
shrb
sbb
divl
pop
filds
ja
sbb
pushf
xor
invd
mov
sub
iret
cmp
mov
push
test
inc
xor
push
sub
push
pop
xchg
fdivrp
xchg
jne
lcall
adc
ljmp
movsb
mov
stos
xorl
mov
sub
stos
mov
pop
in
jb
loopne
out
add
sub
out
jmp
mov
mov
adc
pop
pop
sarb
les
pop
stos
fsubrl
add
out
scas
call
sbb
inc
lret
cli
in
inc
sub
push
xlat
dec
stos
lcall
cli
sub
cli
out
mov
ljmp
jg
in
pop
dec
dec
jne
lock
scas
stos
pushf
cmp
sbb
stos
pop
das
jg
push
pop
push
jecxz
jns
mov
jmp
scas
inc
mov
ljmp
xchg
mov
mov
inc
std
stc
sbb
xorl
xchg
ret
xchg
jge
sbb
adc
xchg
sbb
test
rorl
sub
lahf
mov
int
push
outsl
dec
int3
pop
cmp
inc
mov
or
sub
pop
loope
lahf
cwtl
mov
cmp
leave
nop
notl
sti
inc
mov
add
lock
sub
mov
mov
adc
pop
test
aas
mov
inc
xor
movsb
insb
jb
fdivrs
sub
jae
in
mov
push
clc
jle
scas
sti
or
jno
or
or
pop
pop
in
jge
adc
gs
adc
sub
or
add
sbb
and
repz
adc
jl
adc
jecxz
mov
and
sbb
ss
adc
push
push
adc
push
mov
repz
jb
sbb
mov
pushf
sbb
jg
adc
sub
js
xor
xor
shll
js
push
gs
insl
nop
push
pop
fmuls
fisttps
cmp
ret
adc
xor
cmp
and
xor
and
and
test
push
int
movsl
push
mov
stos
inc
mov
loop
pop
les
xchg
add
mov
cmpsb
push
jmp
adc
out
shl
inc
cli
sahf
loop
lea
and
sub
jo
xchg
mov
js
stos
fcomps
popf
mov
inc
cld
aaa
cs
nop
mov
inc
lea
mov
mov
mov
add
xor
pop
sub
xchg
sbb
add
add
add
fidivrs
mov
cmp
dec
fimuls
cmp
push
push
mov
jbe
fcom
repnz
fs
xor
xor
ror
dec
movsl
xor
rcr
dec
in
xor
jne
lcall
lcall
in
roll
lods
iret
push
dec
orb
mov
pop
mov
push
and
xchg
fadds
jno
pop
stc
xor
ss
dec
lock
addps
aad
dec
mov
aad
add
sbb
adc
jne
test
mov
jo
rorl
inc
dec
shll
inc
dec
mov
nop
loope
test
sbb
inc
into
adc
adc
dec
sbb
in
and
rol
sub
mov
sub
jl
test
lds
mov
aaa
xor
add
leave
mov
les
jnp
push
sbb
mov
mov
xor
xor
les
mov
and
and
ds
xchg
out
lds
das
xor
pop
push
js
or
jno
push
jmp
lahf
xor
adc
movsl
push
push
mov
add
stos
adc
into
out
das
and
scas
sub
mov
or
dec
test
push
daa
push
inc
fninit
xchg
push
xchg
mov
adc
add
or
or
mov
pop
push
pop
adc
pop
mov
and
shlb
mov
cmpsl
ret
ds
lock
or
mul
mov
jno
adc
fs
sub
mov
dec
frstor
inc
and
pusha
and
push
inc
jns
ds
adc
cmp
pop
adc
add
adc
in
push
jns
mov
xchg
cli
pop
cwtl
loope
pop
and
lods
aam
test
xchg
lcall
xchg
xchg
lds
sbbl
imul
dec
cltd
sarl
arpl
mov
dec
loope
adc
adc
xor
sbb
jmp
in
and
and
jns
out
cmp
push
jns
mov
pop
pop
jmp
cmp
cmp
aad
lods
lods
mov
and
icebp
cmc
in
inc
mov
xlat
mov
shrl
jg
sarl
fs
and
push
jge
jne
push
out
js
in
cwtl
sti
call
adc
dec
cmp
push
fsubrl
mov
iret
adc
inc
cmp
arpl
jno
dec
sbb
add
out
lahf
pop
std
cli
jge
int
jle
aad
gs
test
cltd
adc
dec
inc
mov
test
jns
xchg
popf
fidivrs
jae
sbb
cmc
cmc
cmp
push
out
cmp
xor
pop
add
xor
clc
in
dec
imul
inc
add
push
adc
rol
dec
std
mov
ljmp
and
test
mov
xor
adc
inc
test
lea
jp
xchg
and
push
mov
inc
pop
jne
dec
adc
and
push
dec
xchg
push
inc
xor
fisttpll
mov
sbb
repz
sub
cmp
lods
xor
xor
xchg
jmp
in
mov
les
icebp
aad
jnp
jmp
jb
sub
int3
mov
push
hlt
fldenv
xchg
mov
xchg
sub
cmc
xchg
shrl
test
out
subb
inc
jns
sbb
cmpsb
rcll
sahf
sbb
pop
adc
aaa
popa
leave
adc
imul
add
adc
sub
lcall
lcall
lcall
lcall
xchg
dec
fnstsw
int
rcl
dec
rcl
xor
shll
stos
mov
fwait
inc
jmp
mov
adc
mov
int3
and
mov
leave
adc
loope
mov
test
out
cld
jne
add
in
dec
adc
xchg
jg
out
mov
jno
sbb
adc
pop
add
insl
rorb
enter
adc
ret
movsb
add
mov
sbb
add
cmpsl
mov
clc
xchg
add
add
testl
outsb
movb
jb
jl
mov
mov
jno
cmpsl
leave
add
popf
or
test
xor
jns
or
jl
lods
cmp
push
add
xchg
stc
rcr
xor
or
cmp
pop
xor
sub
sub
je
fdivl
mov
test
or
mov
fsubrl
and
shrl
jmp
stc
loop
cmp
movsl
add
add
lods
push
shlb
shlb
and
movsb
add
and
dec
pop
lods
addl
push
sub
lea
test
frstpm(287
xchg
popf
dec
roll
leave
mov
sub
ljmp
das
imul
cwtl
pop
add
mov
cmp
xchg
out
rol
addr16
add
add
mov
or
dec
xor
jae
add
sub
cmpsb
add
pop
mov
mov
mov
push
scas
add
xchg
in
xor
rclb
add
std
add
pushf
js
lea
xor
mov
xor
jp
or
aad
jnp
mov
nop
mov
jp
loope
mov
popf
jp
sbb
add
repz
jbe
sti
add
xchg
lcall
scas
pop
in
add
cwtl
cmp
movsb
dec
jmp
xchg
add
inc
nop
or
inc
mov
or
jp,pt
clc
out
dec
inc
add
test
out
xchg
pop
mov
add
or
sbb
mov
shll
cmc
stos
inc
sti
aas
add
into
jne
movsb
dec
lods
clc
add
data16
orl
mov
add
sub
jne
push
add
jbe
popa
mov
ja
lret
cmc
mov
xchg
add
jo
sub
lea
lcall
daa
sbb
jge
pop
pop
add
pusha
jge
loop
jno
and
fcmove
add
add
mov
sub
pop
pop
add
lock
pop
aam
popf
add
shlb
cli
and
fisttps
fadds
stos
mov
jno
pop
add
inc
jmp
arpl
sbb
dec
push
fisubs
push
jge
and
inc
mov
jle
and
adc
inc
and
not
sub
dec
xchg
out
dec
sub
push
push
push
and
cli
mov
jo
je
and
stos
js
dec
scas
dec
add
jmp
out
fadd
arpl
fldenv
mov
subl
jl
in
sbbl
imul
add
add
mov
test
fldenv
out
or
fnstenv
nop
push
scas
jno
cmpl
mov
bound
icebp
xchg
cmpsb
gs
enter
mov
inc
lcall
dec
dec
fs
test
or
js
push
inc
sub
mov
xor
mov
dec
movsl
sbb
cmpsb
das
inc
add
nop
aam
into
lods
jge
push
fidivs
cmp
xor
cwtl
loopne
clc
pusha
scas
mov
in
or
sub
pop
cmp
inc
xor
mov
add
in
lret
leave
inc
outsl
aam
sti
sub
ja
mov
xor
and
imul
lods
sub
dec
pusha
cmpsl
data16
icebp
neg
or
mov
in
popl
fisubrl
mov
orl
movsl
mov
jb
pop
dec
es
aam
xchg
pop
lret
cltd
xchg
mov
les
mov
stc
mov
rclb
or
sub
jle
add
push
jnp
mov
mov
xor
cmp
xor
jmp
or
stos
rcrb
dec
std
cli
dec
mov
adc
sub
dec
jae
test
sbb
mov
jmp
rorl
into
push
or
push
sbb
inc
push
sti
scas
pusha
lret
xor
idivb
add
sbb
rcrl
repnz
call
jle
call
loop
pop
xchg
or
cmpb
decl
and
mov
sbb
lcall
fistpll
test
mov
movsl
dec
add
cmp
add
xor
pop
xor
jnp
push
aaa
xor
sbb
xor
push
and
lods
bound
mov
xchg
push
repnz
and
mov
add
imul
adc
popf
inc
sbb
enter
rolb
pop
dec
xor
rcr
dec
in
xor
shll
dec
sub
jae
jns
pop
movsl
or
scas
sbb
sarl
lcall
lcall
lcall
dec
pop
sbb
dec
mov
xor
sarl
ja
xor
shrl
das
leave
fldl
xchg
imul
adc
inc
cmpsb
outsl
xchg
dec
shlb
shr
xor
shr
dec
xor
rorl
xchg
jg
imul
jmp
cmpsb
ffree
cltd
aaa
push
aaa
rcrl
imul
dec
cmpl
cmc
add
jmp
mov
mov
addr16
lcall
dec
shll
dec
sti
sti
xor
ror
dec
fstl
xor
rcll
dec
add
es
sbbl
imul
imul
ja
lahf
add
inc
js
inc
inc
push
jne
pop
inc
pop
jle
or
inc
inc
push
js
insb
mov
jg
dec
jo
jo
and
outsb
outsb
jl
inc
insb
sbb
insl
mov
sahf
addb
add
orb
mov
adc
mov
sub
fdivp
fadd
add
in
les
bound
add
push
fdivr
in
mov
and
xchg
mov
imul
aas
add
ss
push
xor
sub
in
sbb
cmp
mov
int
insb
mov
and
or
pop
bound
daa
or
je
cmp
dec
inc
mov
pop
xchg
and
xchg
sub
scas
scas
dec
sub
mov
test
push
in
xor
out
push
lock
fcomps
fmul
hlt
loop
inc
int
sub
ss
adc
cmp
in
cmc
ss
jbe,pn
daa
mov
and
icebp
mov
add
fisttpl
dec
push
cmpsl
pop
loope
cwtl
jns
sbb
js
push
out
loop
mov
xor
ret
pop
xchg
sbb
jge
cwtl
add
xchg
aad
movsb
in
mov
shrb
push
lret
adc
push
in
ljmp
mov
std
fildl
out
sahf
repz
inc
mov
int
sub
movsl
sbb
xchg
mov
push
sbb
leave
push
setb
and
sbb
arpl
add
pop
cmpsb
dec
movsl
insl
pop
ja
cmp
mov
mov
into
mov
sahf
mov
mov
adc
xchg
lods
and
rcll
out
adc
rcrb
out
dec
mov
lock
in
push
in
in
adc
es
or
adc
pop
mov
addr16
ja
jbe
testb
negb
gs
mov
add
out
push
subb
push
ficomps
or
cwtl
lea
adc
int3
mov
popf
sbb
xchg
lret
cmc
inc
mov
mov
push
mov
sub
lds
sbb
das
mov
or
and
or
orb
pop
dec
sub
das
fs
mov
dec
sti
aas
scas
xor
push
outsb
push
mov
mov
lret
dec
fwait
jle
dec
ja
out
mov
ss
pushf
jns
mov
xchg
cmpsl
push
stos
cmp
cmc
or
and
cs
imul
stc
repz
cld
iret
cmp
fcoml
mov
cs
cmp
lods
pop
xlat
xchg
pop
add
cltd
dec
mov
push
push
loopne
loopne
and
or
ret
push
addr16
mov
jl
mov
push
fs
addr16
dec
mov
adc
mov
addb
ficoml
push
pop
dec
xchg
jb
xchg
repz
jge
xlat
xor
movaps
scas
ss
test
das
stos
pushf
daa
fcmovbe
push
into
mov
mov
jge
daa
dec
pop
jno
jo
push
push
dec
xchg
inc
jmp
fldt
arpl
fstpt
stc
mov
sub
xchg
jmp
lock
jns
xchg
icebp
int3
test
xor
test
push
arpl
lock
xchg
loope
popf
shlb
add
loop
mov
loope
cmp
ljmp
or
cs
mov
shlb
js
repz
inc
push
dec
lea
and
scas
ficompl
pop
int
and
ficoms
xor
mov
sahf
jne
mov
cmp
jmp
adcl
sbb
paddsb
or
stc
xlat
dec
movsl
sub
mov
sbb
adc
jo
pushf
clc
push
call
dec
push
inc
jb
out
xchg
ds
.byte
inc
insb
add
add
pop
stc
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
push
mov
mov
add
lea
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
btr
jae
mov
std
push
pop
push
pop
add
add
rep
add
cld
jmp
add
mov
or
je
mov
mov
add
push
lea
jmp
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
cmp
jae
push
push
mov
jmp
cmp
jae
push
push
mov
jmp
push
push
mov
push
sub
dec
movsb
xor
cmp
jle
call
jb
movsb
xor
dec
jmp
inc
call
adc
call
jb
ret
sub
call
sub
jae
mov
inc
jmp
push
pop
movzbl
call
adc
dec
jne
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
cs
insb
imul
lods
mov
pop
add
add
add
adc
add
add
inc
inc
pop
add
mov
add
add
add
add
add
add
push
mov
pop
add
push
add
add
add
add
add
lahf
pop
add
add
add
pusha
pop
add
addb
add
add
and
add
lock
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
add
add
pop
add
mov
add
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
push
xor
xor
fs
insb
add
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
