push
call
ret
ret
cmp
lock
les
ror
fsubrs
ljmp
or
dec
jae
and
test
sbbb
add
pop
insb
mov
gs
imul
sahf
sbb
xor
jae
dec
mov
ret
adc
mov
shrb
jp
aad
xchg
and
jp
out
outsb
and
mov
xor
or
in
nop
mov
inc
mov
mov
and
out
in
sub
rorb
jae
repnz
jle
test
mov
pushf
out
aaa
rol
pop
jmp
mov
repz
jmp
mov
sub
mov
roll
dec
xchg
inc
ja
fmul
sub
inc
xor
sub
stos
mov
filds
push
cmp
lahf
and
movsb
js
enter
insl
movsb
sbb
push
lahf
aas
je
lcall
pop
in
pop
cli
fnstsw
fbstp
push
mov
add
jecxz
std
jne
mov
or
fwait
push
xchg
cmp
scas
nop
push
ljmp
nop
push
popa
hlt
push
mov
xchg
lret
frstor
jns
adc
mov
je
shr
mov
cmp
movl
add
add
cld
popf
pop
int
movsl
lods
das
lods
addl
pop
inc
cmp
fldt
ret
push
inc
test
add
or
xchg
mov
nop
aam
cmp
add
fisubl
cs
jns
pop
xor
repz
mulb
jo
lret
mov
iret
inc
les
rorl
js
out
ret
notb
jno
pusha
fisubl
xchg
lods
jge
mov
int3
clc
rorb
xor
leave
js
xchg
int3
push
and
in
jle
cmp
aad
clc
pop
and
and
mov
pop
imul
jns
movsl
ds
movsl
sti
dec
pop
out
repz
stos
in
pushf
mov
cmpl
or
data16
dec
inc
sub
ja
dec
or
fsts
pop
jg
out
iret
dec
push
std
sub
lahf
sub
cwtl
jns
dec
add
or
cmp
xchg
push
mov
scas
push
pop
xor
sti
or
insl
mov
sub
leave
xor
and
fsub
sbb
cltd
je
xchg
ret
mov
fucomi
or
in
into
fidivl
and
inc
loope
or
sub
mov
and
jmp
test
lods
sub
and
xchg
imul
or
sub
mov
hlt
mov
rclb
sub
push
xor
cld
mov
jg
bound
enter
mov
lds
mov
pop
jo
imul
sub
push
pop
roll
aas
push
push
stos
push
sbb
jl
cld
xchg
in
xchg
adc
pop
lods
mov
sub
test
fldl
in
add
scas
xor
in
or
incl
push
pop
nop
arpl
xor
pop
pop
stos
jns
sub
mov
cmp
mov
push
mov
ljmp
inc
sbb
imulb
into
jnp
inc
dec
jno
pop
insb
jle
loope
push
popf
cwtl
dec
add
cs
jnp
push
push
or
outsl
push
push
fsubp
ds
inc
dec
sbbb
sbb
stc
jge
push
jmp
mov
cmpxchg
ss
mov
jle
mov
fdivrl
pop
aas
jne
sbb
sub
imull
loop
cmp
adc
popf
clc
push
fmuls
ret
in
iret
cmp
fs
add
incl
aam
inc
in
jbe
pusha
js
mov
ret
add
fidivl
popa
and
cltd
xchg
sbb
mov
daa
inc
push
push
pop
push
mov
jb
mov
mov
cs
leave
mov
xchg
add
dec
test
mov
inc
dec
out
mov
and
repz
xchg
push
js
dec
inc
mov
cli
arpl
cld
sti
pop
and
inc
mov
rcll
jg
sbb
or
lds
nop
fs
arpl
inc
notb
mov
dec
or
sbbb
jb
mov
pushf
fnstsw
pusha
adc
cmp
pop
adc
pop
decl
in
les
cmp
jp
pop
popa
fsubl
jnp
popa
into
push
jno
and
popa
xchg
xchg
push
notl
jns
bnd
pop
fsubp
jp
arpl
pop
int
out
jbe
cwtl
addr16
cs
in
fildll
sti
movsb
inc
cmpb
pop
dec
xor
das
dec
push
fdivs
pop
mov
loope
and
push
jmp
test
jl
popa
dec
jmp
push
fiadds
aaa
ret
fcompl
ficomps
in
dec
lods
inc
test
idivl
idivb
add
sbb
add
scas
in
pushl
jne
ret
les
mov
aad
push
cltd
pop
out
inc
mov
push
push
jo
sbb
aam
push
and
inc
jnp
and
fisttps
movb
and
scas
testb
cld
cmc
add
inc
sahf
mov
add
push
ss
xchg
sbb
mov
and
push
lret
out
xchg
dec
icebp
int
and
jmp
mov
cmpsl
movsl
jg
cli
xchg
aas
cmp
aad
xor
je
fnsave
es
jmp
mov
pop
fists
sbbb
fildl
mov
jnp
inc
sahf
xlat
mov
add
cmc
push
xchg
mov
mov
out
sti
sub
mov
ds
repnz
in
mov
or
push
cmp
inc
mov
xchg
inc
lds
daa
and
inc
cmpsl
lea
addr16
faddl
or
lods
pop
scas
out
sub
cltd
xor
xchg
push
shll
mov
sub
lea
inc
fnstcw
mov
pop
mov
xchg
push
cmp
scas
adc
sbb
fmul
cmpsl
push
sahf
xorb
sbb
cli
stos
scas
lock
and
orb
xor
dec
sarl
popa
nop
xchg
lahf
js
mov
bound
movsl
stos
push
lret
pusha
mov
inc
mov
clc
popf
stc
rorb
xchg
mov
stos
pop
mov
repnz
loop
sbb
out
out
add
adc
stos
or
cmpsb
push
fsts
leave
xchg
jne
xchg
xchg
xchg
fnstsw
cmp
rcll
pop
test
and
repz
std
fmul
pop
mov
ja
cmp
and
fsub
jno
cmpsb
and
pop
inc
imul
enter
jno
enter
popa
int
out
popf
xchg
inc
dec
repnz
mov
mov
push
mov
popf
outsl
mov
cltd
sub
ljmp
cmp
js
ficoml
ret
std
test
aam
push
testl
mov
fadds
outsl
adcb
pop
lods
add
dec
sbb
pop
mov
ljmp
sbb
mov
push
hlt
xchg
in
fisttpl
cld
mov
shrb
fsubr
notl
pop
sub
mov
call
or
lldt
iret
add
daa
inc
xor
sbb
test
push
clc
cmp
leave
int3
jl
in
lods
add
das
xchg
mov
inc
lret
pop
and
enter
cmp
icebp
decl
jns
pop
cmp
jmp
rolb
and
and
iret
sbb
push
cmc
scas
lods
xor
fildll
lret
in
addb
sti
sbb
cmp
call
loop
dec
inc
pusha
adc
stc
stc
lcall
push
ds
out
or
js
or
roll
pop
cmc
mov
inc
gs
jmp
mov
xor
push
addr16
add
lock
daa
mov
scas
pop
movsb
test
mov
data16
bound
aad
mov
sbb
push
out
and
sub
icebp
out
and
movsb
or
aam
or
nop
in
loop
sbb
and
cmpsb
adc
jb
in
jns
fs
xchg
rclb
or
fdivrs
jbe
pop
lds
mov
movsb
cmp
test
repz
test
nop
ja
mov
jecxz
jl
jp
test
or
xchg
clc
into
outsb
jae
mov
in
ss
cmp
es
data16
and
xchg
jae
add
dec
dec
fstps
inc
cmp
jnp
xchg
pusha
stos
int3
sti
lret
lcall
imul
mov
es
dec
pop
lret
cld
fisttpll
mov
movsl
loope
sbb
mov
hlt
jecxz
insl
inc
xor
pop
int
inc
xor
pop
add
lock
sbb
push
cmp
jmp
sbb
mov
xchg
mov
jnp
mov
jo
rcl
adc
jae
movsl
push
jo
mov
aam
aad
inc
jb
xchg
jp
or
push
push
pop
cmp
inc
daa
out
or
test
pop
lcall
mov
jbe
lahf
jg
push
and
les
fwait
shrb
adc
hlt
dec
add
test
adc
dec
aad
stos
mov
or
inc
pop
mov
fsub
and
jecxz
inc
ret
cmpb
xchg
push
pop
push
pop
xlat
and
push
sbb
scas
mov
xchg
leave
scas
cs
shrl
cltd
add
int3
and
cmp
sub
hlt
inc
xor
hlt
dec
rcrl
pmulhuw
lret
aas
nop
fstl
push
lahf
push
in
lods
jae
int3
push
lods
add
inc
ffreep
jp
adc
movsl
mov
fcomip
loope
inc
shlb
dec
inc
mov
repnz
cmpsb
mov
aad
jle
sahf
loop
pop
sub
and
les
jbe
cmp
jnp
cmp
repnz
sub
mov
int3
or
xchg
cmpsl
cmp
fwait
and
and
out
out
fs
mov
ret
insl
adc
in
mov
xchg
repz
imul
sub
cmp
lods
lock
pop
test
push
in
sahf
push
lds
insb
dec
jne
scas
cld
adc
jae
jg
pop
pop
mov
sub
mov
in
and
repnz
mov
xor
pushf
mov
or
rorl
push
mov
pop
repz
ljmp
inc
inc
aas
sarl
repz
in
repz
aaa
adc
in
and
fdivl
jp
sbb
inc
fstpt
test
pop
mov
pop
ret
mov
repnz
inc
fidivl
outsl
fs
pop
sti
imul
add
mov
or
aam
dec
cld
add
mov
clc
lahf
sub
and
xor
fwait
outsb
sub
cmp
aad
add
test
jae
and
cmp
jge
daa
ficomps
xor
mov
jno
fbld
dec
popa
in
adc
xchg
mov
or
dec
filds
in
push
jmp
mov
rcl
iret
out
xchg
shrl
sarb
pop
push
mov
js
pop
repz
jno
pop
mov
insl
pop
lods
mov
dec
cmp
out
and
adc
sbb
cmp
je
enter
mov
lea
mov
scas
sahf
pop
fiaddl
jno
hlt
and
daa
std
inc
sbb
pusha
jmp
lds
insb
cwtl
pop
xlat
pop
pop
lea
push
lret
sub
mov
mov
ja
pop
das
or
mov
mov
inc
mov
in
sub
and
jle
imul
arpl
dec
fnstenv
lods
sub
or
mov
insb
ds
ret
test
scas
movsb
repz
push
add
mov
loope
dec
outsb
push
jg
icebp
ficompl
sbb
das
mov
add
jl
movb
das
in
pop
scas
out
mov
bound
and
ret
xor
or
dec
dec
pop
imul
mov
fmuls
outsl
cs
paddsb
xchg
cld
aad
leave
out
imul
cmp
mov
pop
xor
lahf
jge
aam
pop
xchg
popf
mov
std
outsb
faddl
shrl
and
inc
xchg
sbb
mov
or
std
xor
pop
addr16
or
cli
push
and
jmp
cmp
je
jns
sbb
xor
mov
std
popa
jno
push
mov
neg
xor
cmpsb
mov
mov
xor
add
repz
enter
popf
inc
loopne
jnp
mov
hlt
inc
loop
js
je
pop
cwtl
repnz
in
mov
adc
jge
mov
jl
or
stos
scas
je
dec
iret
mov
and
aam
cmp
aaa
outsb
adc
loop
fildl
inc
leave
inc
or
popf
cmp
aam
lahf
jl
insl
lea
xor
adc
lock
int3
inc
mov
aam
mov
sub
les
in
into
or
call
xchg
sub
mov
clc
int3
and
mov
adc
sahf
insb
xor
dec
out
lret
insb
jno
lret
mov
fsubs
and
mov
adc
ret
xchg
int
scas
adc
jnp
sub
jb
lods
in
out
loopne
clc
add
xor
jecxz
xor
xor
mov
mov
lret
aas
pop
imul
aas
data16
push
xchg
jle
aam
dec
mov
lds
jecxz
cmpsb
mov
mov
in
loopne
cli
out
test
add
iret
add
iret
arpl
bound
insb
cli
mov
add
pop
xor
cmpsl
sbb
repnz
sub
inc
jns
imul
test
push
rolb
mov
dec
mov
vmread
mov
lds
imul
add
add
and
lods
cwtl
aad
pushf
jns
add
or
mov
mov
out
aas
jge
repnz
jp
int3
hlt
leave
cmp
and
inc
mov
jb
push
mov
mov
xor
fisubrl
lret
sbb
cli
arpl
rcll
cmpsl
ret
or
inc
es
arpl
insl
lods
faddl
es
push
fisubl
ja
cwtl
or
in
out
jb
insb
mov
inc
xlat
mulb
in
or
loope
fiaddl
sub
mov
or
idivl
jo
push
mov
mov
push
imul
jae
jmp
mov
ja
lret
stc
test
pop
icebp
sub
es
mull
fcoms
and
es
repnz
ret
lods
xchg
ret
xor
and
sub
jno
push
sarb
add
inc
sysexit
inc
js
bound
and
int
sti
loop
shrl
das
sub
jno
jle
pusha
cwtl
les
mov
cmp
jnp
sub
fwait
cltd
lds
dec
dec
test
mov
adc
sbb
ljmp
mov
std
xor
xchg
xor
push
pushf
mov
ja
mov
cld
jae
pop
dec
mov
sub
fnstcw
dec
lahf
adc
imul
testb
add
insb
insl
test
xor
shll
lods
mov
jmp
test
icebp
sti
cmp
les
fnstcw
mov
aad
dec
popa
imul
je
jb
pop
sbb
imul
out
mov
movsb
lods
addr16
pop
mov
adc
nop
dec
sbb
jns
add
lds
les
loopne
sbb
lods
enter
es
mov
or
adc
adc
aaa
movb
sbb
shl
push
and
sub
sarb
inc
jg
and
dec
xchg
out
or
cli
outsb
mov
test
test
mov
push
dec
cmpsl
ljmp
sub
push
jp
idivb
pop
repz
aas
cld
into
sbb
into
ss
mov
movsl
out
scas
lahf
push
mov
adc
popa
pop
mov
lcall
xorl
mov
and
stos
dec
add
das
insl
xor
mov
cmp
sbb
ljmp
pop
xchg
push
xor
push
push
and
mul
mov
in
mov
mov
mov
ret
push
dec
add
pop
int3
xchg
pop
push
push
out
mov
aas
fwait
int
movsb
and
xchg
cmp
add
jmp
mov
adc
pop
xchg
inc
mov
das
mov
pop
ja
xchg
mov
jecxz
hlt
push
dec
imul
mov
lock
lods
fmull
int3
mov
jb
or
push
pop
xchg
xchg
loope
clc
imul
sub
fnsave
sbb
xor
je
xor
hlt
in
cmp
xchg
mov
outsl
out
mov
push
orl
sbbl
xchg
xchg
push
mov
lock
das
and
sbb
pop
sarl
shll
rcll
scas
inc
scas
push
loope
rcr
sti
std
mov
in
test
je
xchg
add
les
push
fidivrl
dec
push
push
fs
jbe
test
adc
in
insb
mov
dec
sbb
pop
mov
mov
xchg
mov
jg
lret
cmp
or
adc
or
pop
xchg
aam
sti
dec
out
clc
dec
int3
jb
mov
or
push
lock
push
into
repnz
mov
and
cltd
cmc
lcall
stos
and
mov
adc
mov
mov
mov
shll
jae
in
xchg
loope
icebp
jl
stc
jg
aad
imull
inc
cmp
pop
lock
adc
sti
mov
pop
ds
int
test
stc
fsubrl
or
test
pushf
das
or
cmp
stos
jle
mov
mov
fsts
test
stc
fstps
jnp
lret
imul
jmp
fcmovnb
xchg
push
mov
icebp
cwtl
js
jmp
xchg
push
xor
add
shrl
adc
bound
xor
repz
test
lods
adcb
shll
fwait
xor
fdivrs
jecxz
jg
xchg
shr
out
outsb
js
hlt
mov
inc
fidivl
lret
push
sub
ficomps
and
gs
notb
add
dec
int3
jbe
xor
les
addr16
fwait
call
mov
rcrl
add
dec
sbb
jle
sbb
xchg
dec
ljmp
test
adc
sbb
pop
mov
or
xchg
sub
mov
pop
mov
jbe
pop
sub
aad
pop
lret
fptan
cmpsl
aad
mov
pop
shlb
xchg
mov
push
int3
dec
lods
mov
lret
scas
daa
call
imul
aaa
inc
pop
ret
inc
rcr
das
sbb
fisubrs
inc
ljmp
insb
cli
adc
cld
sbb
lahf
lock
mov
or
jg
inc
test
sbb
sbb
lds
sub
inc
insb
loopne
mov
inc
paddq
loopne
andl
dec
push
adcb
sbb
adc
les
pop
aas
jnp
movsl
mov
mov
lret
je
lds
out
jno
out
push
lret
lahf
xor
xchg
incb
and
jle
sbb
out
jmp
cwtl
and
and
jmp
mov
sarl
jnp
into
cmp
lret
cmp
stc
sbb
mov
clc
pop
cmp
pop
cltd
aas
xlat
mov
dec
cmp
push
sbb
jbe
xor
xchg
xor
adc
nop
loop
iret
mov
int3
rdmsr
sahf
jno
jne
aaa
paddw
and
movsl
pop
movsb
arpl
mov
icebp
adc
cs
dec
push
in
imul
fmuls
rcrl
rorl
scas
and
sbb
push
rolb
sbb
mov
mov
mov
je
sbb
pop
xchg
and
out
popl
lret
push
adc
inc
pop
ss
sahf
dec
nop
mov
jp
dec
dec
jge
ret
xchg
subb
flds
and
sti
push
aad
jl
dec
and
sbb
mov
idivb
dec
fmuls
mov
lods
or
stc
jmp
insw
aas
dec
enter
lea
and
mov
test
mov
add
pop
xchg
cmpsb
daa
dec
and
pop
mov
pusha
or
add
xchg
xchg
add
xchg
icebp
jae
mov
out
mov
outsl
jl
hlt
jge
mov
pop
into
dec
mov
out
xchg
mov
dec
sarb
stc
scas
in
sub
ljmp
sub
dec
fimull
loope
addr16
jge
stos
pushf
addr16
dec
sub
adc
mov
or
xor
push
lea
fisttpll
add
push
dec
cmp
movsb
ret
adc
push
sub
gs
addr16
stos
lock
scas
push
ja
or
xchg
test
fsubl
scas
sahf
es
ss
cmp
jne
pop
aas
sub
mov
ss
pop
into
popa
push
hlt
stos
or
xor
loope
pushf
add
roll
mov
mov
int3
sub
mov
inc
out
inc
xchg
rcrl
int3
and
movsl
sbb
je
or
les
clc
scas
ret
das
testl
imul
adc
or
dec
xlat
xchg
mov
ficompl
stos
inc
aas
jbe
lret
ljmp
push
push
dec
mov
push
popa
jae
ja
pop
pop
pushf
dec
je
pop
sub
enter
push
jmp
iret
pslld
jp
lret
daa
scas
mov
lock
dec
xchg
inc
leave
xchg
inc
adc
push
gs
mov
or
fidivrs
fs
leave
add
inc
sbb
ljmp
stc
mov
dec
pop
inc
dec
add
cwtl
addb
fimuls
imul
je
dec
sbb
shr
fisttpll
lock
xchg
xor
in
mov
and
sub
pop
xor
sti
movsl
add
scas
icebp
call
xorl
adc
mov
sub
loope
flds
rorl
imul
out
inc
dec
pop
sti
cmp
sbb
or
outsl
and
aad
mov
xchg
hlt
fdiv
fisubrl
stos
loop
jbe
add
mov
mov
lcall
enter
and
in
jne
inc
mov
push
cmp
xchg
mov
mov
popa
movsb
std
adc
rcrl
std
movsb
bound
jns
and
ss
test
shlb
jmp
xchg
cmpsl
out
xchg
or
mov
movsl
in
call
imul
cmc
inc
lock
nop
and
test
fwait
daa
xor
inc
push
xchg
outsl
jne
stos
jne
push
shrl
mov
and
cs
sub
js
xor
sub
std
jmp
bound
daa
xor
xchg
cmpsl
insl
dec
dec
clc
fsubl
ljmp
rolb
or
mov
enter
jmp
xor
mov
and
add
aam
fwait
ljmp
adc
stos
iret
sbb
and
fidivrl
xchg
nop
add
pop
stos
jo
ljmp
cltd
jb
mov
jne
test
jmp
mov
mov
mov
out
out
sub
or
xor
cs
sbb
cmpsl
lea
mov
inc
fldl
aaa
jmp
in
xchg
inc
add
inc
in
popa
pop
leave
xor
icebp
into
cli
popa
or
into
mov
add
mov
popf
adc
loopne
or
push
shrb
push
cmpsl
test
in
shrb
pop
inc
push
mov
movsl
sub
or
xor
in
scas
enter
sti
outsb
cwtl
xor
call
popf
scas
jnp
adc
mov
dec
mov
andl
pusha
mov
add
lock
pop
lcall
dec
sbb
cmpsb
dec
xchg
pushf
insb
dec
pop
stos
js
push
aas
in
push
or
add
inc
or
gs
xor
xchg
xchg
xor
ret
lds
iret
into
mov
jge
cmp
rorb
orb
outsb
jmp
mov
cmp
push
shlb
cltd
les
dec
xorl
xor
lods
fadds
ljmp
cs
les
leave
mov
in
div
stos
iret
jns
out
push
add
ret
jle
pusha
mov
add
pop
loope
mov
jl
sbb
loopne
bnd
cltd
aad
sbb
xlat
adc
push
scas
mov
test
jb
push
std
pop
lods
mov
andl
fwait
enter
pushf
daa
add
loope
fs
push
mov
mov
jp
push
clc
push
xchg
fbld
sub
pushf
jns
call
xor
jmp
add
add
ss
sbb
and
int3
xor
loopne
das
pop
pop
out
movsb
out
sub
fildl
lret
mov
push
mov
stc
add
dec
sbbb
add
mov
sub
dec
add
mov
xorb
insb
bound
icebp
jecxz
mov
mov
sub
sub
ljmp
repz
sub
jge
dec
fnsave
add
lods
sarl
xor
je
sub
clc
xor
dec
insb
aad
mov
dec
ljmp
push
push
movsb
dec
push
dec
stos
and
scas
mov
jle
pushw
jb
push
ja
jo
pop
rorl
in
divl
lock
jno,pn
in
sbbb
cmp
dec
push
xor
repnz
mov
movsb
idiv
push
xchg
insl
outsl
sbb
outsl
dec
or
pop
sbb
int3
clc
imul
lcall
pusha
out
sub
or
mov
adc
cwtl
pushf
icebp
jae
leave
jmp
mov
arpl
pop
mov
mov
movsl
cmp
repz
sub
fadds
das
xchg
out
push
ja
ret
clc
imull
jae
je
movsl
sbb
mov
popa
jg
adc
pop
dec
cmc
and
cli
push
jae
pop
rorb
sbb
lcall
mov
pusha
shll
add
jbe
mov
out
adc
mov
adcb
mov
or
mov
adc
pop
fucomip
lock
dec
and
xchg
ds
sbb
outsl
bnd
aas
iret
cmp
push
and
xor
lahf
jbe
aam
mov
xor
test
push
cmpsb
call
mov
mov
ss
jo
mov
std
mov
mov
dec
test
add
outsl
pop
addr16
call
pushf
adc
jl
das
push
ljmp
cmp
cmp
push
mov
jbe
ret
push
clc
icebp
xchg
call
imul
jns
int
adc
push
mov
sbb
inc
mov
inc
push
repz
xor
les
dec
mov
outsb
notl
insl
adc
dec
inc
gs
or
mov
clc
fcom
xchg
loope
cwtl
popa
cli
or
in
out
xchg
adc
fcoms
xor
adc
test
pushf
push
mov
sub
in
mov
orb
nop
pop
sbb
xor
je
cmp
add
dec
adc
in
push
gs
mov
pop
jge
mov
ret
sub
mov
push
pusha
ja
push
xchg
cmpl
pop
pop
je
push
mov
outsb
clc
inc
ficoml
jnp
sub
inc
sbb
shrl
lock
sub
in
aas
mov
sbb
nop
icebp
jo
mov
out
pop
jnp
push
add
fs
jno
lahf
pop
in
push
nop
pop
scas
cmp
insl
scas
push
xlat
cli
sahf
and
out
nop
ljmp
jge
gs
mov
daa
mov
push
push
insl
fmul
add
jno
push
sub
dec
jno
mov
outsl
jle
jo
ss
cli
aad
ret
ret
adc
lcall
push
jae
adc
ret
jp
insb
add
aad
mov
roll
fucomp
dec
jbe
mov
and
push
pop
adc
push
or
sbb
es
cli
sbbb
shrl
mov
adc
xor
inc
mov
jne
shll
fwait
xor
jo
fcompl
cmp
jmp
sbb
push
cmp
push
xchg
fwait
sub
daa
jge
mov
daa
xor
jl
out
push
dec
pusha
into
add
lods
cmp
pop
or
dec
ja
enter
add
sahf
jne
mov
iret
loope
ljmp
mov
cwtl
or
inc
pop
in
dec
repz
cltd
repnz
xor
das
push
cmpsb
ljmp
mov
lret
add
insb
shl
cwtl
xlat
dec
lock
sahf
insl
mov
inc
call
jg
in
in
bound
cltd
imul
jp
sub
fsubl
fidivl
push
mov
add
or
cmp
lods
fisubrl
in
ja
push
sbb
dec
or
jne
mov
adc
sbb
pushf
lcall
sbb
lock
mov
cmc
xchg
pop
and
movsl
fcoms
iret
lods
in
js
movsl
rcl
jb
adc
and
pop
adcb
lock
ljmp
mov
cmp
int
ds
test
dec
mov
and
jnp
aaa
inc
and
stos
insl
adc
sbb
mov
repz
mov
in
negl
xor
and
mov
negb
lds
call
or
mov
mov
mov
aas
inc
or
bound
lret
rcr
test
shr
adc
lods
push
sahf
inc
adc
lods
add
clc
add
add
stos
loope
lea
test
cmpsb
fsts
js
in
sbb
not
gs
js
adc
xchg
gs
jle
mov
outsb
sub
mov
lds
xor
mov
sub
dec
inc
das
mov
and
push
mov
test
push
cmp
add
push
lret
cmp
out
xor
sahf
int3
std
xchg
or
repnz
dec
cld
fisubl
rol
inc
jg
das
pop
jno
xor
mov
adc
rcll
addb
jne
std
jle
inc
stos
inc
mov
dec
mov
mov
rcrb
mov
insb
cmc
mov
jnp
push
push
mov
nop
lahf
jae
mov
xor
cmpsb
mov
jae
ds
imul
dec
pop
sub
jge
shlb
and
push
push
cmc
and
sub
popa
sbb
jp
mov
lods
inc
jo
cmc
push
cltd
pusha
test
or
dec
push
je
lret
and
addb
inc
fisubrs
add
push
xchg
push
leave
xchg
sbb
insl
aaa
rcl
push
scas
cmp
jge
dec
popf
push
sub
out
fdivr
xchg
push
sbb
mov
ds
into
notl
pop
inc
rorl
inc
in
mov
inc
push
push
rcl
and
pop
popa
das
rcrb
sbb
mov
imul
jns
testl
push
movsb
dec
jbe
xor
mov
push
and
and
xor
xchg
repz
adc
arpl
nop
aas
nop
cmp
sub
xor
insl
aas
je
push
mov
or
xor
daa
test
inc
xchg
call
or
movsb
dec
into
push
ret
imull
pop
inc
cli
shll
inc
cli
js
lahf
jbe
out
insb
xchg
fcmovu
or
arpl
notl
adc
jnp
imul
lret
push
xor
into
mov
adc
sub
insb
jmp
dec
xor
sti
mov
inc
jmp
push
leave
dec
cmp
mov
inc
push
add
out
roll
pop
push
cs
jmp
jns
sub
mov
cld
jge
insb
test
push
fs
repz
stos
daa
cmp
adc
xorb
xcrypt-ofb
cmpsl
outsb
jg
rep
cmc
push
lret
add
push
add
dec
or
jae
inc
pop
xchg
adc
cli
cmpsb
sbb
mov
testb
xchg
jge
bound
dec
or
sbb
test
push
hlt
push
and
inc
xor
stos
jmp
xlat
sub
xor
xor
ret
lods
cmc
xor
mov
aaa
jae
repnz
jl
mov
aam
rolb
jg
mov
rorb
inc
pop
mov
mov
dec
push
test
inc
mov
jbe
cld
cltd
sub
jae
imul
push
push
xchg
movsl
mov
inc
cmp
mov
adc
js
into
dec
subl
inc
cmp
jp
adc
sbb
push
adc
adc
ret
call
inc
sbb
xchg
push
leave
inc
js
mov
cmc
out
movsb
leave
ficoms
dec
sahf
mov
in
inc
mov
xchg
mov
add
stos
jb
jns
js
push
imul
out
sbb
mov
scas
jbe
inc
shll
mov
pop
test
xor
aaa
pop
sahf
mov
lcall
push
fimuls
mov
pop
cltd
pop
mov
popf
push
mov
inc
add
notb
pop
lret
cmp
test
mov
mov
xchg
jle
mov
icebp
jns
pop
loope
iret
into
adc
jbe
jecxz
stc
xchg
std
sub
cmc
jl
xchg
and
push
add
xchg
pop
je
and
mov
fbstp
sub
dec
push
dec
mov
xor
add
movsb
into
adc
inc
js
push
test
sbb
cmpsb
inc
ljmp
pop
pop
sti
addr16
xor
cmpsb
insl
jge
scas
imulb
mov
add
outsb
sarb
adc
mov
lds
mov
push
scas
repz
sub
sub
lock
imul
rolb
mov
xlat
lods
xor
pop
or
pop
cmp
lods
jecxz
pushf
popa
in
mov
out
cwtl
xchg
sub
aas
rcrl
cmc
dec
push
cwtl
push
out
jae
ja
jmp
dec
mov
test
fwait
sub
repnz
fsts
inc
insb
punpckhdq
cmc
test
shl
push
xor
loope
cmpsl
and
imul
out
push
nop
in
sti
push
cmp
idiv
jmp
jmp
or
fdivrl
loopne
mov
rcr
mov
mov
xchg
outsb
or
xchg
or
test
cltd
xor
xchg
mov
hlt
inc
gs
cmp
mov
popf
ficompl
adc
adc
das
push
push
movl
adc
pop
jb
out
push
lea
jns
xchg
shlb
adc
test
icebp
xor
push
nop
mov
adc
scas
mov
lods
into
daa
jge
push
add
add
xchg
and
pop
sbb
and
jp
not
dec
mov
idivb
xor
hlt
adc
xchg
lahf
or
mov
lcall
xchg
jae
test
fs
std
cltd
mov
in
icebp
jno
sub
xlat
cmc
adc
in
xchg
subl
ss
or
push
mov
shll
mov
aam
decl
dec
lock
insb
cmp
mov
imul
lods
mov
imull
mov
enter
xchg
sbb
mov
add
dec
ljmp
sub
cwtl
jge
imul
cmpsb
test
test
lods
jle
mov
mov
cmp
inc
lahf
pop
xchg
cmp
pop
adc
in
or
jecxz
lods
mov
enter
je
mov
incb
test
adc
fldenv
loope
and
jg
push
rorl
push
lret
fcoms
clc
outsb
imul
xchg
lock
addb
dec
adc
out
js
and
call
jg
aad
add
aaa
popf
mov
daa
mov
pop
clc
fisubrs
mov
in
in
into
aaa
mov
xor
push
nop
lods
repz
bound
fst
inc
adc
mov
out
cli
enter
pop
sbb
fs
imul
sub
pop
dec
ss
mov
mov
imul
sarl
xchg
repz
cld
fisubs
int
call
les
inc
push
lea
jle
stc
sub
adc
cli
sbb
mov
xor
jns
add
leave
orl
and
add
pop
and
js
or
xor
xchg
call
and
sub
test
mov
fistpll
inc
pop
hlt
int3
mov
push
pop
mov
jne
push
mov
sub
xlat
rorb
test
jno
fcmove
xor
mov
sbb
data16
je
iret
inc
lea
cmpsl
xchg
pop
leave
outsb
in
mov
pop
ja
clc
sbb
sti
jne
ret
jg
and
out
adc
fstps
sub
adc
sub
mov
jnp
imul
call
cwtl
xchg
sbb
xchg
fdivs
stos
adc
add
or
aam
out
mov
loopne
pop
mov
or
icebp
daa
scas
dec
sbb
mov
fsubl
dec
clc
xor
enter
movsl
mov
fwait
stos
popa
fimull
add
or
std
inc
lret
int3
mov
out
bound
and
std
and
daa
mov
push
imul
bound
stos
xor
dec
dec
jb
push
movsb
or
mov
or
push
mov
xchg
aaa
push
lret
pop
ja
bound
push
test
add
scas
or
outsb
push
in
outsb
icebp
loope
orb
inc
jb
js
pop
add
mov
sbb
cli
test
add
movsl
in
arpl
xor
cmc
iret
icebp
mov
ret
mov
mov
mov
xchg
jl
sbb
cltd
add
cli
xlat
jnp
loop
mov
stos
shll
aaa
lods
sub
cmp
cwtl
in
jg
aam
mov
inc
sbb
sbb
mov
mov
dec
xchg
mov
out
loope
adc
bound
imul
mov
into
std
xchg
and
fldenv
sub
iret
adc
cltd
and
aas
lahf
sbb
fisubrs
cmp
shrl
mov
or
or
stos
outsb
mov
mov
and
fs
cmp
call
popf
xchg
sbb
test
scas
in
daa
inc
mov
sub
pusha
mov
mov
lret
gs
jne
xchg
jg
loope
leave
std
mov
ljmp
fs
scas
les
adc
out
mov
mov
leave
mov
mov
int3
xchg
testb
pop
mov
pop
xor
dec
dec
adc
loope
in
pop
lea
push
sbb
mov
cltd
test
mov
int
rcrb
leave
push
inc
sbb
xchg
xchg
sub
jecxz
jb
js
aas
pop
jne
cmpsl
mov
dec
xor
inc
mov
add
ss
push
pop
subb
mov
ret
add
out
adc
int
dec
mov
jne
frstor
mov
clc
hlt
sbb
xchg
cmp
push
fdivs
push
inc
dec
aam
shll
push
push
bound
jmp
cmp
or
ljmp
dec
inc
mov
mov
jle
cmp
orl
dec
je
out
sub
scas
fwait
or
fadd
xchg
jb
hlt
inc
xlat
xchg
ret
mov
cld
inc
js
imul
push
cltd
add
xchg
or
inc
jecxz
push
xchg
sbb
pop
mov
repz
or
fidivrs
adc
add
mov
xor
sbb
jl
push
std
in
test
pop
mov
fs
mov
jbe
addr16
xor
pop
push
pushf
jo
xchg
push
std
cmpb
stos
mov
push
fwait
into
setbe
in
bound
addr16
pusha
out
in
cwtl
jle,pt
pop
das
lahf
mov
inc
adc
roll
xor
loop
lock
pop
pop
stos
jae
xchg
iret
cwtl
lock
mov
movsl
jp
cmp
data16
push
jp
jecxz
in
and
mov
mov
in
loope
cmp
std
mov
pushf
notl
std
test
cmpsb
jmp
pop
fstp
jbe
xchg
push
arpl
mov
mov
mov
mov
mov
packsswb
mov
out
repnz
aam
shll
fisttpl
fldenv
mov
xchg
testb
lods
shlb
out
nop
cmpsb
stos
movsb
fisttpl
sbb
pop
bound
scas
cltd
xchg
cmp
loope
sub
xor
data16
add
push
inc
inc
test
testb
push
cmp
fisttpll
outsl
cmp
jae
inc
aaa
cld
xchg
and
jg
xor
jl
cli
icebp
add
mov
shrl
push
add
cmp
jmp
aad
addr16
dec
out
arpl
xor
mov
xchg
mov
xor
xchg
out
fwait
xor
jb
pop
inc
xchg
xchg
lret
fchs
pop
popf
fndisi(8087
cwtl
add
push
out
int3
and
cmp
cmc
clc
and
lea
decb
ficoms
lahf
in
fisubl
mov
test
loop
psubd
pop
cmpsb
cmp
test
gs
std
push
jg
push
ja
inc
inc
mov
insb
outsb
add
fldenv
mov
push
mov
xchg
icebp
loope
push
pop
pop
xchg
cli
test
pop
repnz
push
leave
add
sub
jmp
add
adc
add
or
mov
sbb
int3
inc
or
fistpl
inc
dec
sub
cld
lock
xor
sahf
and
out
push
jnp
repz
js
in
sub
jnp
sub
out
in
in
pop
test
pop
popf
mov
test
xor
mov
dec
jne
cmpl
pop
cmp
pop
xor
mov
ljmp
xor
jb
es
pop
lcall
aam
pop
inc
repnz
mov
fidivrs
pop
and
mov
fwait
imul
mov
inc
xchg
jg
test
pop
mov
std
lcall
sbb
ret
xchg
xor
hlt
nop
pop
data16
xchg
ret
jbe
adc
mov
fpatan
sbb
add
mov
loope
push
ret
xor
das
stos
aaa
dec
filds
ja
push
and
sbb
movl
lods
lret
and
mov
inc
sbb
mov
shll
rol
cli
enter
push
imul
mov
push
sbb
and
push
pop
dec
mov
iret
imul
jl
mov
or
gs
xor
sbb
jo
mov
scas
adc
loopne
mov
dec
lahf
nop
scas
mov
test
push
and
add
sub
sahf
jmp
pop
int
fs
adc
mov
sbb
es
inc
dec
dec
out
ret
leave
rcr
or
add
sbbl
push
ret
dec
fimuls
insb
mov
insb
les
pop
jne
push
lret
xor
lds
xor
std
test
and
dec
les
jne
jbe
jb
test
mov
addb
cmp
scas
loope
xchg
adc
and
popa
enter
mov
out
call
sbb
mov
jp
dec
pop
push
and
push
loopne
jge
push
and
dec
or
mov
bound
les
cmp
lret
in
and
sbb
out
jle
cmc
sahf
ret
dec
push
pop
xchg
push
cmp
fdivrs
adc
in
xor
dec
cmp
dec
push
stc
mov
or
inc
out
filds
sbb
or
cli
push
outsl
je
je
fidivl
push
stos
cmp
pop
cmp
jbe
xlat
adc
in
dec
jns
adc
mov
mov
cmp
sti
dec
ds
mov
sbb
xchg
sbb
and
mov
sub
into
cmp
inc
mov
jno
or
loopne
les
lods
je
ljmp
push
xor
mov
std
mov
arpl
jmp
test
outsb
cltd
cmp
pushl
pop
add
in
cli
insl
shl
movd
xlat
cmc
push
and
clc
fwait
addr16
es
jp
push
std
fsubrs
adc
mov
cmp
insb
push
add
fdivrl
pusha
sub
push
inc
adc
bound
inc
dec
je
aas
mov
vcvtss2si
sti
stc
cltd
out
pop
jl
movd
cltd
sub
fxch
and
call
add
jecxz
inc
adc
fcomps
imul
inc
jns
push
dec
cs
inc
cmp
cmpsl
xor
lds
rcll
ds
push
mov
xchg
mov
sbb
mov
and
int
and
and
mov
stos
sbb
xchg
inc
into
test
pop
sbb
leave
cltd
mov
xchg
icebp
adc
mov
daa
xlat
push
or
inc
ja
mull
out
or
jmp
pop
rolb
call
xchg
into
loop
in
aaa
push
popf
sub
add
push
enter
jmp
ss
jmp
outsb
movsb
cmpsl
push
icebp
je
cwtl
into
aas
mov
popa
mov
sbb
inc
push
into
jl
add
aas
test
outsl
insb
xchg
shrb
mov
es
nop
mov
test
xor
cmc
sub
sbb
mov
ja
sbb
lahf
cmp
pop
push
lods
shll
gs
dec
mull
shr
outsl
pop
inc
test
sbb
ss
mov
in
mov
xor
in
scas
nop
lahf
inc
cld
mov
and
pop
jo
pushf
add
pusha
jns
outsl
int3
sbbl
rolb
pop
and
ds
inc
dec
lods
sbb
mov
push
adc
imul
pop
out
lret
data16
jge
mov
call
jae
sbb
cmc
pop
icebp
nop
cmp
sarl
inc
cmp
mov
cli
cmp
sbb
clc
and
lcall
sti
cmp
fwait
nop
ja
mov
jg
inc
decl
mov
movsl
mov
push
lahf
lcall
push
xor
bound
daa
mov
gs
std
ljmp
jno
mov
js
mov
push
push
outsl
sbb
cmpsb
and
xchg
scas
pusha
imul
movsb
push
cmp
cmpsl
rcrl
mov
mov
fsts
popf
or
jle
aas
popf
jg
push
dec
mulb
dec
out
add
shl
aam
fildl
gs
fidivrs
or
and
sub
push
xchg
mov
lds
fisubl
mov
push
aad
outsl
adc
or
sub
ss
mov
ss
ds
icebp
push
cs
or
adc
es
xor
inc
push
inc
mov
hlt
cld
xchg
and
jge
mov
fiadds
loop
xchg
lods
movsb
sbb
push
mov
ja
pop
dec
dec
pop
fcompl
jns
fstpt
bound
imul
mov
adc
mov
xchg
sbb
loope
shrb
sbb
aaa
pop
jl
mov
bound
call
ljmp
and
idivb
and
adc
xlat
in
mov
in
lret
aam
adc
jne
push
cmp
mov
push
jns
mov
mov
ds
mov
popf
mov
jg
bound
fildll
mov
orl
add
xchg
popa
into
icebp
xor
jne
iret
or
insl
xor
stc
fadds
xor
ffree
loope
es
mov
push
mov
mov
cmp
mov
subl
sub
inc
sti
adc
mov
jecxz
stc
sar
lahf
jns
sub
push
cmpb
add
sbbl
cmp
mov
jmp
lds
push
shlb
adcl
xor
lods
fistpl
jecxz
ss
xor
mov
out
mov
insb
lahf
imul
pop
xchg
push
pop
jnp
ret
icebp
frstpm(287
ret
mov
sbb
incl
lret
arpl
mov
inc
pop
xor
loope
mov
mov
push
fmulp
cmpl
adc
and
into
add
mov
mov
outsl
xchg
loop
jo
adc
lods
lods
push
dec
xchg
jg
xchg
push
test
mov
outsb
inc
aaa
lods
mov
mov
pop
imul
dec
push
ficoml
dec
loop
cld
outsl
push
mov
je
andl
and
adc
hlt
sbb
cmc
sbb
in
js
push
pop
mov
mov
jae
pop
adc
jp
std
lods
push
lret
cltd
movb
in
pop
repz
and
xlat
hlt
insb
and
bound
push
stos
cli
ds
jp
mov
jb
das
popa
fnstcw
fs
stos
stos
sub
mov
mov
sahf
cmp
push
add
addl
cmpsl
gs
rcrl
pop
push
sub
stos
shr
outsb
and
push
rcl
fcompl
mov
aad
lock
mov
push
jecxz
adc
xchg
std
dec
mov
das
shrb
pop
rol
jbe
repnz
ret
fidivrl
cmp
sbb
je
aad
cmp
xor
sub
push
repz
mov
mov
mov
inc
dec
cmp
cmp
mov
dec
push
decb
and
adc
rcll
mov
cwtl
pop
gs
out
lds
xchg
test
or
cld
rorl
in
into
lock
test
adc
pop
es
pop
es
mov
xchg
adc
idivb
xchg
ror
ret
mov
lods
insl
mov
jle
cmpsb
and
lahf
push
stc
out
xor
xchg
roll
or
cld
xchg
xlat
add
in
int
ror
cmpsb
jno
aas
addr16
inc
sub
ljmp
add
or
dec
and
out
scas
cmp
mov
add
fdivrs
xchg
mov
and
lahf
lret
repnz
push
xchg
cmpsb
xor
adc
push
test
jb
mov
xchg
mov
xor
fsubl
sbb
fwait
jnp
push
stos
jle
test
pop
add
pop
mov
bound
test
jg
mov
pop
bound
inc
sub
push
out
cmp
ret
mov
xlat
mov
sarl
cwtl
scas
cmp
aaa
movsl
subb
jle
and
in
sar
lea
adc
mov
mov
push
add
push
rorl
push
mov
xchg
dec
in
cld
xor
or
rcr
mov
icebp
or
jecxz
cli
dec
clc
adc
jp
aas
xchg
inc
mov
aas
mov
ret
ret
mov
adc
adc
leave
pop
cmp
mov
inc
sub
shlb
lea
outsl
push
call
popf
and
stc
stos
pop
arpl
loopne
push
mov
pushf
cmp
pop
sbb
adc
mov
cld
es
cmp
test
mov
inc
inc
mov
pop
mov
push
loope
lods
mov
pop
daa
es
jmp
mov
pop
rcr
pop
iret
sub
dec
and
inc
daa
out
test
clc
dec
movsl
ss
jl
dec
cli
mov
lret
or
outsb
or
xchg
sti
pop
das
and
xor
stc
sbb
xchg
pushf
cltd
and
add
mov
mov
stos
fadds
rolb
or
roll
add
ss
sbb
and
jecxz
in
xor
addr16
ljmp
enter
lods
and
pop
mov
add
orl
lods
fisttpll
stc
lahf
cli
sti
jb
xchg
clc
adc
test
aad
into
mov
and
movsb
lods
scas
fnsave
jno
jp
pop
stc
jbe
mov
cld
pop
and
adcl
sbb
rcrl
adc
mov
pop
sub
aam
or
and
and
rcrb
repnz
fxch
and
mov
std
inc
dec
dec
xchg
sub
in
popa
lcall
cmpsl
fnstsw
add
out
dec
jb
mov
inc
scas
bound
call
and
inc
adc
clc
jns
popf
popa
push
mov
out
repnz
add
jp
aas
sub
inc
jp
cmpsl
or
pop
ret
call
jae
scas
jb
mov
test
call
imul
shl
das
dec
pop
fmul
adcl
mov
test
adc
pop
mov
xchg
mov
inc
push
in
cmp
lods
mov
retw
push
sar
jp
mov
push
jns
or
inc
pop
fmull
dec
cmp
push
cmp
mov
jle
xchg
mov
mov
sub
xchg
fstps
std
lock
xchg
ret
cmp
scas
divb
data16
mov
ja
dec
jb
leave
sbb
sub
mov
xor
push
and
daa
mov
in
mov
pop
xchg
pusha
mov
aam
or
mov
int3
fcmovnbe
mov
pop
in
lods
jg
push
xor
enter
push
and
xchg
shlb
fldcw
outsl
ret
xchg
cli
loope
lock
pop
inc
hlt
and
mov
mov
nop
dec
xor
xchg
adc
int3
sub
pop
push
add
jmp
cmc
push
or
jl
je
loop
xlat
push
aam
sbb
popl
hlt
fcompl
inc
cmpb
out
jo
pushf
push
insl
into
fdivrl
ret
and
test
aam
sti
stos
cmp
sbb
cmpsl
adc
pop
mov
loop,pt
sub
add
mov
cmp
and
push
cmp
imul
pop
aam
aaa
jb
ljmp
dec
mov
pop
movl
cmc
lods
shll
cmpsl
add
sub
mov
cmpsb
dec
insl
rcrb
sub
xlat
shl
mov
mov
mov
addl
jo
jg
inc
ss
out
mov
lret
mov
mov
jmp
mov
jge
iret
adc
sbb
scas
cli
pushw
cli
cmp
rcrb
mov
mov
lahf
xor
loopne
int3
mov
sbb
jo
or
mov
jg
xchg
frstor
cmp
xchg
mov
mov
insl
out
enter
lcall
imul
popf
iret
jnp
inc
dec
dec
dec
pusha
xchg
push
jb
pop
mov
adc
or
xor
pop
jbe
or
sub
lock
pushl
das
sahf
jns
cmp
cmp
cmpsb
push
loope
sbb
add
xchg
or
pop
test
lcall
xor
mov
sub
cmp
xchg
stos
divb
out
push
jl
test
or
pop
ret
mov
roll
or
stc
dec
sub
and
xor
or
std
lret
mov
out
or
notl
idivb
cmc
hlt
loop
jg
ds
mov
sub
jle
push
test
jno
lock
mov
sub
push
mov
lahf
mov
loope
jle
push
push
popa
call
push
cmp
rcrl
pop
or
hlt
mov
divb
in
sub
int3
enter
add
and
test
loop
out
sbb
shl
mov
rcll
push
cmpsb
jmp
add
shll
std
adc
push
repz
or
mov
lock
lahf
movsl
out
mov
popa
in
jl,pn
mov
adc
lcall
dec
adc
or
incl
popa
sbb
fstps
add
cs
and
rep
in
push
loope
loopne
pop
push
adc
shll
or
fnstenv
dec
push
mov
ljmp
clc
pop
out
or
mov
cmpl
xchg
cli
push
push
sub
aas
aad
loope
call
mov
gs
das
pop
cmp
xor
and
cmp
test
jo
je
gs
adc
sub
push
adc
fildl
inc
mov
or
mov
lcall
repz
shlb
jmp
les
adc
add
ret
cmpsb
rorl
cmp
mov
push
les
lcall
xchg
inc
test
jnp
outsl
sbb
xor
loope
ds
call
xchg
icebp
pop
jne
cmp
xchg
pusha
inc
int3
aad
arpl
mov
sbb
fwait
pop
jbe
mov
lods
push
pop
call
lea
dec
lea
add
sub
in
into
outsb
scas
lods
aad
xchg
xchg
push
jbe
mov
sbb
pop
scas
cmp
push
int
insb
mov
sbb
mov
aas
xchg
pushf
jnp
insb
loop
adc
jb
cmpsb
rcll
ds
xor
adc
pop
imul
sti
sub
jmp
xor
inc
int3
std
sti
sbb
cwtl
cltd
mov
push
dec
enter
outsl
xor
sar
insl
jb
imul
les
push
push
dec
mov
shll
mov
fstp
and
addr16
and
jb
and
loop
xchg
call
sti
loope
pop
xchg
sub
mov
jmp
sahf
mov
in
xchg
mov
movsl
jns
mov
add
dec
or
in
repz
nop
xor
dec
lret
scas
repnz
inc
jge
or
push
shrl
sbb
sub
cmpsl
sahf
sbb
jp
push
nop
insb
fstps
mov
push
aas
dec
fnsave
sub
pop
jge
add
add
aad
push
scas
popf
jne
xchg
arpl
repz
jbe
das
cmp
xchg
cmp
jbe
lcall
pop
std
xor
sub
cmc
sub
movsb
out
test
xlat
loope
push
sbb
mov
xor
xchg
nop
call
das
cmp
test
add
bound
dec
test
aas
lods
jecxz
loop
js
outsl
out
aad
addr16
pop
dec
jmp
es
mov
mov
mov
dec
jnp
je
and
jno
pop
cmc
pop
xor
xor
cs
mov
jle
xchg
imul
xchg
push
jge
outsl
jns
into
sub
loopne
orb
push
adc
adc
dec
fs
lea
loop
mov
dec
push
lahf
cmpl
cmc
or
mov
call
cmp
psllq
repnz
or
cltd
pop
loope
loop
mov
jmp
insl
mov
out
dec
lock
adc
lods
mov
xor
pop
fwait
std
aaa
int
sbb
rorb
xchg
jle
outsl
jnp,pt
push
and
pop
xchg
scas
jne
sbb
and
and
xor
push
pop
xchg
leave
jl
data16
outsb
fucom
mov
lods
dec
cmc
inc
lock
inc
js
sub
push
fldcw
loopne
mov
pop
pushf
gs
xchg
cmp
pop
lds
mov
out
in
hlt
aaa
mov
lods
imul
push
cmp
lcall
pushf
cmp
mov
mov
fwait
xchg
adc
push
lret
rol
xor
inc
fisubl
leave
addb
mov
aaa
fistps
les
adc
jecxz
movsb
dec
fimuls
lret
dec
lock
inc
mov
sbb
popf
mov
outsl
jecxz
mov
fistps
iret
pop
lods
mov
xchg
and
mov
sarb
mov
mov
fsub
inc
jne
dec
adc
cmc
popf
call
mov
jmp
cmp
ret
pop
add
sbb
lods
cmpsb
pop
inc
lds
push
mov
clc
das
sub
stos
xor
in
sahf
sbb
push
add
jae
mov
or
adc
adc
leave
mov
loop
adc
mov
je
out
das
pop
jo
enter
push
mov
inc
mov
xchg
test
jge
pop
leave
jb
adc
push
mov
sub
cltd
jb
dec
cli
pop
xchg
xchg
cltd
xchg
fcmovnu
sbb
sub
mov
mov
add
cmp
add
lods
mov
sti
cmp
add
jne
pop
fldl
jb
push
jns
es
sbb
fcoms
mov
test
bound
cmpsl
out
add
cmp
lods
push
inc
pop
mov
or
sbb
paddsw
jns
xor
ljmp
in
mov
inc
mov
adcb
pop
data16
jle
pop
jbe
call
sub
jmp
mov
outsl
rcll
push
sbb
mov
sub
sahf
mov
jnp
mov
inc
sub
jle
sarb
cmp
mov
and
out
jg
push
push
clc
sub
mov
daa
insb
or
push
sbb
jecxz
int
clc
test
pop
loop
mov
imul
stc
mov
push
arpl
mov
insb
add
or
loope
inc
push
test
mov
mov
inc
xchg
xchg
movsl
fmuls
cld
xchg
add
cwtl
pop
cltd
jne
lods
adc
or
add
inc
ret
sub
jns
cmp
cmp
inc
mov
dec
nop
sub
int3
into
ficomps
xchg
add
aam
dec
lods
aam
test
xorl
dec
pop
cmpsl
lock
lcall
pusha
clc
adc
and
mov
mov
sub
pop
test
pop
loope
sub
sbb
das
je
imul
cmp
test
xchg
xchg
sub
lcall
cwtl
sub
pop
leave
popf
into
clc
repz
mov
dec
repnz
jecxz
adc
jl
sub
notb
mov
out
jb
scas
xor
adc
into
xchg
sbb
insl
inc
lea
in
out
insb
imul
cmpsb
push
jns
mov
ljmp
sarl
shlb
in
bound
jmp
jg
pusha
andb
arpl
jle
stos
fstsw
push
js
inc
inc
mov
sub
pop
divb
mov
fisubl
fistpl
popa
stos
inc
sub
lock
sbb
and
push
sbb
out
cmp
cli
lcall
mov
mov
mov
inc
mov
add
jbe
push
xchg
lcall
sbb
ret
cwtl
and
test
bound
mov
aas
cli
jbe
hlt
or
sarl
cli
stc
nop
push
and
repz
fs
loope
pop
dec
xchg
dec
fcoms
shl
imul
and
nop
fwait
mov
cs
add
imul
cmpsl
push
push
push
jae
cmp
in
mov
adc
dec
pushf
inc
lret
imul
mov
add
sbbb
mov
xchg
daa
in
xchg
test
jmp
test
mov
pop
mov
mov
add
xor
add
aam
loopne
or
shrl
xor
hlt
and
dec
xor
push
mov
dec
dec
lea
cmp
fnstcw
loope
add
je
ffree
cvttps2pi
or
sub
add
xchg
mov
sub
enter
aam
sub
mov
mov
xor
mov
std
inc
xorl
adc
mov
sbb
pushl
dec
adc
aam
insb
xor
cli
jne
ljmp
jmp
icebp
and
das
xor
or
add
or
cmp
mov
adc
push
jne
inc
xchg
js
xchg
lods
fwait
iret
jbe
popl
lea
inc
loope
pop
sbb
xchg
jo
jne
ss
or
cmp
call
cmpsb
js
add
fwait
lret
and
mov
pop
jl
xchg
test
pop
outsl
push
push
loopne
cli
pop
sbb
stos
int3
outsl
push
stos
in
lods
xchg
arpl
sti
or
xor
fisubs
add
fcomps
icebp
mov
arpl
in
dec
sub
pop
fists
adc
es
lods
jle
loope
fs
jle
cmc
cmp
fs
push
inc
mov
popf
mov
mov
fstpt
ror
push
push
test
lds
inc
cwtl
dec
clc
mov
lahf
lods
mov
in
ljmp
push
fldt
insb
nop
cmpsb
adc
ficompl
adc
cwtl
inc
push
ljmp
pushf
in
sub
test
push
cmp
loop
adc
popa
mov
dec
dec
test
dec
int3
clc
and
push
das
mov
xchg
outsl
pop
push
jp
std
out
push
testl
xlat
scas
xchg
push
push
cmc
out
xchg
xchg
dec
ss
mov
sbb
lds
mov
xchg
aad
pop
inc
xor
sbb
inc
add
push
mov
scas
and
and
mov
cmp
push
sahf
push
and
insl
mov
loop
out
ljmp
cmpsl
pop
std
test
push
xchg
data16
mov
bound
inc
push
jmp
or
pop
add
lahf
enter
cmp
data16
add
push
mov
and
test
popl
loop
jl
dec
in
xchg
sahf
or
mov
addb
sbb
loop
inc
fmuls
movsb
sub
rclb
cs
pusha
xor
loope
mov
mov
lret
out
daa
pop
loope
pop
insl
push
in
cs
jle
daa
mov
in
fadds
pop
mov
sti
std
mov
jmp
jecxz
aas
fcoms
pop
cmpsb
xor
adc
loopne
addr16
stos
fmull
xor
cld
in
mov
pop
mov
mov
mov
movsl
cmc
sti
outsb
loop
push
add
fwait
and
cmpsb
cmc
mov
sub
jp
fwait
ss
roll
mov
push
test
jmp
sbb
in
dec
addr16
sub
pop
out
jg
jmp
sbb
add
fstps
gs
stc
lret
ret
pop
jnp
out
and
loopew
or
test
or
mov
xor
dec
jmp
inc
pop
adc
icebp
or
mov
dec
adc
lahf
es
in
ret
mov
inc
jo
in
pop
outsb
push
inc
je
loope
mov
mul
cltd
lret
xchg
addr16
mov
insb
popa
scas
mov
je
fs
mov
ljmp
jno
mov
sub
sub
xchg
es
fs
aam
rorl
xchg
sub
jmp
mov
out
xor
sti
es
aas
pop
jmp
shr
mov
test
add
leave
cmc
push
insb
push
cs
notl
je
ja
pushf
pop
or
daa
shlb
ffree
mov
loop
outsb
push
cs
sub
fnstcw
imul
push
jp
sub
jecxz
scas
pop
js
add
out
push
lea
mov
ss
and
or
inc
adcb
es
pop
inc
pop
mov
out
fld
jle
jno
int
divl
or
test
lock
xchg
fdivrl
ljmp
mov
sahf
test
out
jb
rclb
add
lahf
je
mov
aas
jmp
and
and
jg
andb
pop
adc
mov
mov
out
mov
sub
frstor
mov
dec
jmp
fucomip
fwait
in
in
aas
sbb
add
or
loop
std
mov
jmp
inc
sysenter
push
loope
add
arpl
pop
lcall
jp
push
mov
test
jo
xchg
or
pop
cmpsb
push
rorb
xor
pop
xchg
ret
xor
clc
imull
or
or
stos
in
push
sbb
jg
cmp
es
mov
ss
imul
and
imul
sbb
test
aas
pop
or
ret
sub
mov
sub
sbb
ret
xchg
fdivr
inc
rclb
mov
xchg
out
aas
add
outsl
and
bnd
adc
jp
sub
into
push
mov
adc
repnz
enter
xor
cmp
sub
mov
sbb
aaa
xor
adc
repz
popf
imul
aam
cmpl
and
jp
cmovo
aaa
mov
mov
xchg
dec
sbb
out
cltd
xor
or
xchg
and
pusha
cmp
xchg
lds
xchg
dec
and
int
gs
sbb
movsl
aad
xchg
push
or
sub
sarl
int
and
test
cmp
jge
cli
scas
fidivrl
inc
rcll
mov
repz
pop
pop
call
shll
addr16
jne
shr
mov
pop
adc
inc
lods
xchg
xor
cmp
mov
pop
lods
push
pusha
or
cmpsb
mov
les
stos
pop
xchg
xor
push
stos
movsl
pop
shld
sub
push
fbstp
jno
push
jg
or
jnp
lret
jb
into
lock
mov
jmp
insl
les
sti
sbb
out
mov
stos
iret
cmp
out
cmp
and
popf
icebp
mov
jns
pop
movsl
sbb
lods
test
lea
jecxz
pop
sbb
shrb
mov
push
mov
dec
xchg
sbb
ljmpw
cmpl
pop
mov
inc
mov
pop
push
mov
out
lahf
aam
cpuid
cmp
xchg
lods
fstps
inc
sub
arpl
loopne
imulb
notl
es
mov
shl
or
out
out
push
push
jge
cmp
fsts
mov
mov
scas
dec
lock
pop
push
pop
pop
das
or
fcomp
dec
dec
lret
sarb
shll
jg
das
cmc
inc
fstpl
aaa
mov
rolb
mov
inc
cltd
and
sahf
idivl
rclb
jae
jae
push
mov
jl
sbb
mov
sub
test
add
bnd
js
sti
faddl
mov
pop
loope
scas
or
add
shll
arpl
andl
xlat
xchg
adc
cmp
jp
ret
fdivl
arpl
ljmp
mov
clc
popf
pop
popa
arpl
cmp
xorb
jnp
addr16
sub
adc
and
mov
ljmp
mov
jno
test
jl
stc
cmc
jo
pop
test
adc
ljmp
inc
cmp
add
aad
dec
sbb
push
push
sbb
mov
jns
push
mov
cwtl
jle
inc
lds
adcl
jle
jno
sti
jg
adc
cmp
popa
push
ja
jg
loope
or
adc
jp
enter
dec
jmp
jle
cmp
ds
div
xlat
in
sub
imul
into
sbb
adc
push
lret
mov
rorb
xchg
aaa
das
arpl
adcl
mov
inc
fisttpll
ret
mov
shlb
inc
cmp
ljmp
outsl
out
test
andb
xchg
outsl
cmpsb
into
dec
mov
and
ljmp
js
call
fnsave
mov
xchg
in
xor
add
pop
and
jecxz
aad
adc
in
ja
add
stc
lahf
rcll
out
mov
adc
pop
pop
punpckldq
lods
and
fisubl
push
sub
fstpl
dec
mov
adcl
dec
outsl
push
jge
jbe
and
sub
hlt
cmp
andb
jmp
ffree
andl
pop
lret
call
lret
fsubr
xchg
stc
cwtl
bnd
jmp
outsb
sti
inc
push
xor
ret
inc
or
jne
add
mov
les
xor
shlb
test
rclb
mov
pop
or
mov
je
mov
ljmp
xor
sti
mov
xchg
dec
xchg
xchg
data16
call
lcall
add
mov
xchg
fisttpll
pop
jp
in
sbb
daa
aas
lock
pop
jne
xchg
jno
push
push
and
push
sbb
int3
js
add
adc
insl
cmpsb
das
push
out
dec
lock
fwait
dec
xor
xor
and
shl
push
push
sbb
popa
mov
shl
dec
jecxz
or
xchg
pop
loope
or
xchg
aad
and
mov
shlb
movsb
mov
fcmovnbe
mov
push
pushf
push
mov
ret
jl
pop
fs
cs
push
lret
jmp
cmpsl
pop
fcomps
xchg
sub
testl
popa
aad
pop
out
sbbb
fildll
cmc
cltd
jno
fdivp
icebp
icebp
cld
dec
stc
rorl
in
sbb
pop
sahf
dec
add
fiadds
lret
lret
mov
out
sub
out
pop
popa
lods
cmp
pop
sbb
pusha
jmp
dec
mov
fdivrs
pop
pop
cs
sar
test
xchg
cmp
lds
mov
lret
pop
aad
pop
push
dec
inc
mov
sbbb
xor
outsb
add
imul
push
mov
lods
inc
das
inc
sbb
or
es
pop
and
loopne
jle
sub
inc
fistpll
inc
inc
bound
fisttpl
mov
lods
movsb
bound
xchg
stc
dec
xchg
imul
pop
jae
das
cmpsb
and
mov
mov
jp
mov
in
fdivs
inc
add
mov
jne
jo
std
test
aaa
out
and
sbb
popa
xor
cmp
and
mov
decb
inc
dec
adc
lea
fucomi
sti
lret
mov
hlt
les
loop
inc
add
lods
mov
arpl
inc
popf
lahf
mov
xlat
cmp
xchg
enter
das
adc
add
scas
sbb
lahf
mov
fisttps
out
dec
out
xor
rcll
test
lret
gs
mov
cwtl
cmp
sbbb
sub
and
cmpsl
leave
insl
aaa
fsubs
ret
scas
pop
jbe
test
inc
mov
jmp
cmp
adc
inc
mov
jmp
inc
xor
fstps
inc
pop
dec
xor
fisubrl
xor
nop
cmp
es
pop
out
sub
aaa
nop
jle
jl
mov
dec
rorl
push
sbb
lahf
out
lahf
aaa
push
cmp
test
xor
clc
mov
add
loop
js
cltd
mov
stos
mov
rcrl
mov
ret
ljmp
fisubrl
lods
ja
shrl
cmpsl
cwtl
outsl
pop
sub
sub
mov
jb
lods
fwait
pop
or
into
xor
fimuls
xchg
fstpt
addr16
mov
or
mov
mov
aaa
push
xchg
mov
in
test
push
sahf
stos
pop
sbb
or
cmp
xor
mov
stc
jns
jp
inc
xchg
cmp
shr
lds
jo
in
inc
jecxz
inc
cli
aam
adcb
lahf
out
in
mov
or
lret
mov
and
imul
sbb
pop
inc
shll
cmp
add
jbe
sub
pop
fcoms
xor
out
and
mov
push
stc
xchg
lods
sub
mov
test
lea
mov
and
rclb
shl
shll
sbb
jmp
mov
mov
stc
das
cmp
lock
ret
ja
dec
ljmp
or
cmp
and
fidivrs
sbb
sub
sub
cmc
dec
mov
outsb
sub
xor
je
xchg
rorb
pop
jmp
mov
lret
andl
sahf
aam
sbb
rcl
mov
outsb
cmp
pop
dec
sti
xor
pop
cmp
push
imul
jge
xchg
jle
imul
or
into
xchg
test
and
sbb
push
in
pop
sbb
xchg
dec
mov
xchg
pop
stos
cs
push
mov
shl
mov
jbe
mov
fs
lea
lock
sbb
push
outsb
mov
addl
lds
sarb
leave
aad
data16
push
fistps
xor
pop
lahf
insl
repnz
xchg
jo
sarb
rol
push
xchg
sbb
push
cmp
movsb
mov
imul
int
test
push
mov
pop
lock
push
xlat
push
mov
lret
mov
jae
imul
aas
inc
xchg
fstl
cmc
int
jge
dec
sarb
add
dec
xor
xor
in
xor
out
fadds
pop
sahf
cli
push
pop
jl
rorb
loopne
push
gs
jecxz
cltd
lods
xchg
sub
es
pop
and
add
adc
scas
dec
xchg
rcrb
pop
xchg
cmp
mov
mov
inc
lahf
sbb
outsb
xchg
test
js
and
ret
xor
add
repnz
les
arpl
push
push
ljmp
mov
mov
leave
sar
mov
mov
push
mov
rol
enter
loop
mov
or
test
inc
stos
lods
xor
test
fildl
jge
jmp
out
jne
push
cli
inc
or
enter
or
rolb
lcall
les
ja
and
mov
xor
push
hlt
adc
aas
js
inc
and
add
and
adc
mov
scas
and
test
jno
cmp
cmp
ljmp
adc
cmpsl
jns
pop
push
lds
cwtl
inc
data16
pop
inc
jo
dec
dec
ss
sub
lcall
movsl
dec
mov
mov
rorl
push
leave
addl
xor
cmp
mov
jg
lods
inc
leavew
jns
repz
or
loope
pop
xor
ss
jb
frstor
push
push
cmpsb
shll
jmp
sub
xchg
out
and
lcall
push
pop
fistl
int3
inc
mov
loope
push
jmp
dec
cwtl
push
int3
out
jne
scas
jns
mov
cmpl
and
xor
ja
lcall
out
dec
mov
inc
sub
loop
cltd
mov
movsb
dec
dec
mov
or
push
jle
mov
lods
mov
pop
dec
cmp
mov
cmpsl
sub
fdivl
cmp
fisttps
scas
sti
gs
dec
aaa
outsl
stos
push
mov
loopne
pop
mov
dec
shr
cs
sub
loope
mov
pop
mov
adc
pushf
stos
pop
sbbl
std
sbb
push
fistpll
adc
xchg
inc
pop
loope
cs
mov
jmp
scas
rclb
jne
es
mov
add
loop
icebp
and
push
dec
pop
cmp
mov
push
add
lock
pushf
test
cwtl
dec
xchg
ds
mov
and
adcb
stos
mov
leave
jb
jb
out
inc
pop
jecxz
in
xor
xor
mov
arpl
xchg
mov
pop
xchg
ret
daa
jmp
add
imul
nop
dec
cmpsl
jge
mov
pushf
push
cmc
xchg
scas
mov
pop
mov
cmp
dec
sub
movsl
jnp
adc
dec
inc
inc
pop
sar
lds
and
or
negb
out
pop
push
inc
int3
shlb
mov
mov
ja
sbb
leave
ljmp
stos
je
push
rcr
fnstenv
mov
ljmp
out
sahf
addb
mov
xchg
mov
and
fidivrs
pop
pusha
inc
inc
imul
push
pop
push
dec
lods
call
gs
daa
loop
sbb
mov
mov
and
xor
cli
popa
push
xor
test
push
or
fcmovnb
lcall
mov
sub
incl
stos
popf
pop
test
cld
cs
adc
mov
cmp
sti
shrb
pop
dec
xchg
jns
cmp
sti
inc
cld
jns
pop
cmp
jno
and
or
mov
outsl
pop
xor
adc
or
adc
imul
push
xor
js
push
out
fdivs
xlat
cs
mov
scas
stc
inc
sub
lret
aas
ret
rcrb
adc
js
inc
push
popf
cltd
pop
rcll
mov
pop
fs
inc
lcall
test
cwtl
dec
and
nop
decb
cmp
pop
mov
cmp
roll
mov
jne
scas
xor
and
in
cmp
out
xor
fsubrl
cli
fsubrs
dec
inc
or
shlb
movsl
out
add
in
lods
leave
stos
fidivrl
int3
inc
fwait
jge
mov
push
dec
push
lahf
shrb
inc
sub
jnp
jae
shlb
dec
push
jecxz
cmpsl
push
outsb
sub
jne
leave
fadd
sarb
das
jmp
pop
mov
int
jo
cmp
adc
stc
or
cmp
sbb
mov
aas
xor
add
subb
outsb
add
aas
cltd
cwtl
push
insl
and
jmp
lds
lds
clc
jmp
loop
or
lods
add
ja
into
vpunpckldq
sti
jns
mov
lods
scas
xor
fistpl
loop
push
ljmp
or
inc
xchg
lds
popl
fdivrs
jmp
mov
imull
out
outsb
mov
inc
mov
pop
loopne
dec
insb
ficoml
test
pop
lret
mov
xor
inc
and
dec
cmc
push
scas
or
sub
xchg
popf
ja
test
sbb
pop
lods
ret
inc
sbbl
and
outsb
lea
scas
outsl
loopne
repnz
push
xchg
fildl
call
rol
cmp
lahf
out
test
cmpb
lret
das
pop
or
pop
pop
cs
cmp
gs
xor
add
mov
and
int
hlt
aaa
xor
jg
popa
orb
sub
popf
ss
hlt
pop
sub
enter
inc
or
flds
stos
lods
mov
and
push
dec
call
xchg
or
and
das
cmpsl
into
shrb
iret
pop
inc
in
loopne
xchg
fdivrl
imul
addl
nop
add
jbe
mov
mov
lahf
add
stos
lock
push
jg
stc
leave
ja
jecxz
scas
xchg
or
pusha
shll
xchg
jp
push
cld
dec
cmpsb
das
xor
dec
loopne
xchg
shr
notl
mov
outsl
cmp
dec
movsb
xchg
push
mov
fiadds
mov
add
xor
xlat
sbb
mov
and
xchg
fs
and
imul
cmc
dec
jecxz,pt
push
ds
adc
loopne
mov
pop
fsubrl
and
repz
popf
int3
jbe
pushf
sub
jbe
and
push
int
adc
mov
xor
jb
or
mov
mov
sbb
mov
jmp
mov
mov
xchg
out
in
pop
inc
daa
mov
or
repnz
or
pop
jns
jg
sbb
pop
icebp
gs
loope
push
add
jae
cmp
jb
or
push
shll
mov
dec
mov
jle
inc
mov
xor
shrb
bound
adc
inc
inc
ja
roll
push
cld
insb
aad
scas
out
sahf
fstpt
imul
sbb
roll
out
js
add
cmpsl
sbb
sub
popa
and
aam
fs
adc
shlb
lcall
push
or
xchg
pop
xchg
sbb
mov
enter
arpl
outsb
out
out
dec
mov
adc
popf
int
push
lods
fstps
mov
loop
pop
sbb
in
ret
jo
xchg
dec
xchg
xchg
push
jo
xor
push
repz
movsb
loope
cmp
fimull
or
or
in
enter
push
ret
aas
icebp
fisttpll
gs
jecxz
popl
bound
jb
repnz
mov
ss
push
or
pop
cmp
iret
imul
divl
rcll
xchg
arpl
scas
jno
movsl
xor
xor
test
sub
mov
xor
pusha
dec
adc
sub
stc
rcr
cmc
les
lds
je
push
out
out
fstps
lea
inc
iret
xchg
adc
mov
sti
iret
mov
icebp
add
xchg
mov
into
imul
je
add
rol
and
jns
testb
pop
fnstcw
xchg
rclb
adc
ret
jbe
cmp
mov
jle
ret
dec
nop
mov
dec
pop
push
xchg
jmpw
add
pop
lea
movsb
ret
push
int
ja
fistps
in
and
push
pop
clc
xor
inc
jge
repz
pop
add
ljmp
xor
jle
jo
dec
push
adc
decb
cli
dec
in
jbe
xor
pop
dec
xchg
inc
mov
mov
push
push
push
push
icebp
aaa
pop
sub
jecxz
aas
lret
pop
aam
test
inc
ror
nop
pop
daa
xor
cmp
aam
fcmovnb
out
fnstenv
add
aam
xor
xor
xor
jg
imul
pop
popf
icebp
and
jb
xchg
mov
jmp
hlt
push
ret
add
dec
rorb
inc
fstpt
das
andl
pop
push
iret
and
xorl
ds
bound
dec
scas
les
das
nop
inc
lret
inc
sub
add
idivl
cmc
les
dec
aad
js
ret
or
add
mov
nop
mov
mov
cmp
lods
es
pop
add
add
sub
outsb
xor
das
and
and
push
test
out
outsl
cmp
push
cwtl
into
das
fwait
andb
data16
shlb
and
cwtl
test
insb
mov
xor
mov
imulb
adc
call
arpl
pushl
dec
pop
out
hlt
imul
fstl
jg
pop
out
inc
sub
add
inc
aad
out
xor
aaa
fdiv
jne
out
orl
sub
add
outsb
pop
add
mov
icebp
stos
xchg
and
aas
add
ret
pop
test
shlb
adc
pop
xchg
aam
divl
add
les
sub
out
push
ds
xor
daa
jno
cld
cmpsb
addl
mov
mov
jae
sbb
or
in
cmp
or
out
mov
sub
pop
test
xchg
sub
loopw
and
idivb
lods
push
arpl
out
and
xchg
insb
or
sbbb
int
sbb
lahf
leave
repnz
in
jns,pt
cmp
es
sbb
mov
lods
adc
add
jo
sub
aam
mov
sub
xchg
and
jo
ret
test
nop
mov
sub
push
xchg
stos
sbb
and
and
arpl
push
int3
stc
shrl
testl
sub
sbb
lods
inc
rorl
gs
pop
mov
cmpb
out
dec
sbb
mov
or
imul
rcr
mov
mov
add
mov
fmul
icebp
sbb
xchg
add
fwait
jnp
popf
aam
xchg
xchg
ficompl
or
ljmp
pushf
xchg
dec
pop
mov
stos
icebp
or
xchg
cwtl
xchg
xor
or
test
stc
mov
jg
sub
stos
inc
xchg
and
fldcw
rorl
mov
aam
ret
xor
imul
mul
add
jno
jg
rcrl
cmp
jl
aas
loop
inc
dec
xor
outsb
fmul
test
xchg
add
mov
andb
inc
gs
andb
jbe
idiv
rcrl
pop
stc
xchg
in
mov
and
push
pop
xchg
mov
loop
push
ret
and
lret
cmp
cmc
idiv
cmpsb
sub
inc
movsl
out
nop
jno
in
cltd
imul
jmp
fwait
in
addr16
cmp
inc
sbb
movsl
stc
pushf
movsl
test
adc
jmp
es
jg
sbb
jne
adc
jg
loop
jecxz
xchg
out
inc
mov
clc
and
nop
insl
call
subb
pop
jae
cmp
mov
inc
xlat
push
xlat
pop
fimuls
mov
movsb
jge
lcall
push
cmp
jns
mov
mov
fstpl
or
dec
test
pop
jo
stc
xchg
mov
mov
ljmp
iret
pop
test
cmpsl
shl
aam
sub
jecxz
mov
rcll
test
pushf
cmp
test
jb
xchg
or
and
cmpsl
stc
loopne
test
mov
ds
mulb
dec
stos
cmp
xor
pusha
and
cmp
adc
sbb
je
xlat
fmull
xchg
es
mov
push
xchg
mov
and
cmpsb
dec
pop
stc
add
imulb
stos
movsb
sbb
add
inc
sar
mov
cwtl
clc
loope
sub
push
shrl
inc
inc
push
and
xchg
lahf
sub
inc
push
ret
jmp
lock
clc
jp
scas
test
out
mov
shlb
xor
pushf
dec
push
pop
stos
stc
aaa
roll
out
dec
push
icebp
mov
loopne
jbe
dec
push
enter
cmp
mov
popl
lock
das
pop
into
add
mov
fs
loope
imul
pop
adc
adc
clc
fnsave
adc
mov
or
sub
lea
cmp
mov
inc
aad
push
dec
loopne
addr16
add
les
cmc
mov
mov
clc
fsts
jmp
hlt
in
adc
mov
repz
xlat
sub
ror
mov
mov
push
je
iret
xchg
ret
mov
jmp
lcall
and
adc
imul
cmp
push
std
fisttps
sti
pushf
fisttpll
cmc
add
jge
and
xchg
push
cmc
jle
mov
das
test
adc
aad
ja
les
enter
lahf
mov
xor
add
sbb
dec
xlat
lfs
adc
push
and
es
xchg
pusha
mov
xchg
mov
jmp
test
mov
clc
inc
sti
movsb
push
push
fisubs
jecxz
cs
les
jns
orl
push
pop
sub
dec
in
dec
repnz
cmpsl
call
mov
mov
xlat
mov
push
mov
loopne
cmpsl
dec
pop
push
in
jmp
shlb
shr
inc
push
or
in
mov
dec
jne
shll
fimuls
lret
ljmp
sub
pushf
ror
push
mov
or
rorl
cmp
dec
mov
rcl
in
lock
fcos
mov
mov
fwait
js
ja
mov
daa
aad
mov
push
gs
cmp
push
outsb
mov
outsb
xlat
pop
fcmovnu
mov
inc
inc
push
push
cmp
mov
out
jo
out
iret
fs
call
rolb
int
notl
leave
ljmp
xor
jmp
cmpsl
dec
icebp
mov
imul
ss
push
mul
jae
insl
or
add
add
sub
fsubs
out
jecxz
fisubs
fimull
mov
jo
cmp
or
ds
jnp
ja
cs
mov
xchg
push
rcll
mov
sbb
sbb
xor
mov
jnp
aas
int3
outsl
pop
in
scas
cmp
sbb
jb
clc
mov
push
cmp
sub
mov
repnz
jecxz
gs
int3
std
xlat
fmull
adc
adc
mov
xchg
aaa
cwtl
pusha
sahf
sub
pop
add
test
mov
int
push
cmp
or
imul
frstor
rcll
add
cld
mov
add
movsl
xchg
aas
xor
aad
push
dec
rclb
add
cmpsb
test
mov
sbb
xlat
dec
xchg
and
sbb
leave
jne
std
scas
pop
and
xor
cltd
jbe
mov
inc
mov
inc
shrb
sbb
cmpsb
loopne
lods
mov
pop
roll
clc
mov
cmpb
mov
mov
push
stos
inc
icebp
movsb
iret
cli
lahf
or
daa
loopne
mov
jge
mov
jne
je
fimuls
jb
ljmp
cltd
mov
std
mov
out
movsb
sub
mov
pop
lods
push
mov
pop
inc
das
popf
push
sub
pop
jo
pop
cmp
pop
inc
rclb
ror
xchg
mov
sbb
push
dec
adc
cld
jb
add
pusha
dec
rorb
add
sub
push
xor
adc
arpl
fsubl
out
jmp
scas
or
xchg
pop
cmc
add
xlat
sbb
xchg
and
xchg
popa
je
jno
push
and
mov
in
cmpsb
out
xor
aaa
ss
loope
fstpt
inc
jecxz
loop
arpl
icebp
fcoms
in
push
and
dec
pop
sub
mov
aam
mov
pop
out
jbe
sbbl
imul
not
push
mov
mov
xor
in
mov
cmpsl
lret
fcom
int
xor
ljmp
or
repz
orl
push
pushl
sbb
lea
dec
and
fcmove
push
test
mov
cmpsl
mov
xchg
adc
scas
shll
loope
aad
jne
mov
jp
scas
cli
xor
jge
adc
out
cmc
inc
icebp
scas
xor
out
insl
test
push
add
fwait
out
mov
jo
dec
lret
hlt
mov
in
stos
pushf
mov
xor
xchg
inc
cmpsb
pop
xor
mov
mov
shl
pop
loope
jge
jl
inc
in
sbb
sbb
subl
pop
adc
fdivl
xchg
sub
mov
lcall
sub
hlt
sbb
mov
lcall
adc
mov
lret
lcall
mov
push
das
add
xor
xor
sbb
iret
hlt
push
fwait
neg
loope
dec
mov
push
icebp
sbb
or
sub
adc
fwait
mov
mov
mov
dec
test
mov
lods
daa
out
jae
push
pop
sbb
call
cmpsl
nop
cld
icebp
or
out
popf
mov
jge
xchg
pop
or
faddp
lock
out
call
pop
inc
inc
push
jne
dec
lds
arpl
scas
call
pushf
xor
cwtl
fwait
xchg
mov
sbb
jns
loope
test
out
xchg
add
addb
aad
in
out
lods
inc
test
lea
in
test
icebp
loope
adc
sbb
loop
dec
scas
int
imul
dec
add
sub
enter
shrb
sbb
xor
rep
sub
and
jg
mov
loop
mov
mov
mov
sub
ja
xchg
jae
xor
leave
out
inc
les
pop
cmc
sbb
xor
out
jecxz
jb
dec
aas
mov
je
push
adc
push
xchg
pop
pop
inc
mov
inc
loop
ret
rcrb
jp
adc
popf
popl
dec
inc
add
in
or
push
sti
lock
popa
stc
es
mov
outsl
dec
popl
js
push
aaa
in
in
cmp
dec
xchg
xorl
je
popf
imull
hlt
insb
pop
dec
insb
icebp
movb
daa
aas
adc
jmp
xor
dec
jge
pop
mov
insb
xchg
movsl
pop
mov
mov
or
push
inc
jo
pop
and
jno
cmpsl
xchg
dec
sti
stos
inc
sbb
cmc
scas
push
sbb
arpl
arpl
inc
dec
xchg
jo
outsb
mov
aad
xchg
and
movsb
rclb
jge
push
or
scas
aaa
ja
xchg
outsb
xchg
mov
xchg
and
sub
scas
fisubs
jmp
rclb
shll
fwait
and
jmp
mov
mov
mov
leave
clc
out
ds
xchg
outsb
arpl
mov
std
push
sarb
xor
lods
sub
mov
pusha
mov
stc
push
test
cmp
jecxz
pop
sbb
mov
jmp
in
mov
xor
xchg
mov
int3
dec
subb
adc
loop
lods
out
sahf
cmp
scas
in
js
xchg
scas
push
sub
add
loop
xor
add
imul
lcall
push
jecxz
scas
stc
out
nop
mov
fs
call
pop
cmp
mov
pushf
mov
notb
iret
lahf
shr
pop
mov
mov
xchg
add
mov
pusha
pop
jmp
and
test
sbbb
into
jnp
lods
xchg
lret
in
mov
jmp
outsl
xchg
xchg
push
fnstenv
cmp
aad
push
inc
mov
iret
sub
pushf
adc
in
cmp
enter
fisubrl
inc
xlat
jmp
push
mov
sub
pop
inc
or
clc
sub
cmpsb
cmp
lahf
push
mov
outsb
mov
mov
mov
add
inc
fs
addr16
imul
cwtl
pusha
cli
mov
pop
aas
mov
test
lods
xchg
adc
rcl
adc
mov
fucomip
outsl
aam
lods
cmp
cmp
lahf
frstor
add
mov
mov
mov
add
in
cld
lcall
and
in
lahf
pop
and
jge
icebp
ja
xchg
push
add
fimuls
lcall
das
pop
mov
arpl
rclb
cmpsb
dec
mov
dec
aaa
mov
imul
pop
jo
cmp
or
mov
insl
out
fs
cmpb
cmpsl
or
push
xchg
es
mov
pushf
push
dec
jb
movsb
or
xor
ljmp
push
cmpsb
mov
and
dec
negb
sbb
shrb
push
aaa
test
insl
subl
mov
jo
sarb
das
push
aam
sbb
jne
in
or
and
shlb
and
scas
lahf
subl
stos
movsb
cmp
pop
mov
arpl
sbb
jo
rcrl
pop
push
mov
clc
imulb
lock
lea
jbe
pusha
jmp
push
imul
std
mov
call
inc
inc
jle
in
xchg
arpl
leave
push
pop
or
pop
loop
xchg
cmpsb
rclb
idivl
mov
daa
std
inc
or
pusha
addr16
mov
or
sbb
jp
dec
jne
mov
bound
rcr
roll
outsb
loope
mov
adc
fsubrs
or
push
shl
push
or
pop
sub
std
sbb
jge
adc
insb
bound
adc
movsl
fmull
aam
inc
jecxz
popa
adc
mov
dec
int3
pop
mov
and
pop
je
inc
dec
add
xor
in
je
adc
mov
out
xorl
cmp
or
jb
cmpsb
fisttps
arpl
xchg
fs
lods
or
lds
outsl
movsb
or
dec
sub
xchg
push
sub
jmp
hlt
push
jle
imul
cmpsl
outsl
mov
int3
mov
lahf
push
out
fcmovnu
lods
mov
pop
stc
cmp
andb
stos
fmull
dec
std
and
or
sarl
push
repnz
pop
cmp
popf
jnp
insl
xor
xor
jne
or
aam
push
jno
xchg
pop
ror
insb
xchg
test
ljmp
pop
scas
lods
cmp
jp
jg
lret
inc
test
stos
dec
ret
fstp
push
xchg
inc
in
mov
push
sub
leave
movl
out
mov
jg
mov
sti
incl
fucomip
int3
mov
pop
xchg
divb
add
mov
aam
insb
dec
test
out
cmp
ret
insb
xchg
stos
sub
jns
shlb
sub
insb
lret
dec
sub
xor
nop
and
ss
nop
inc
or
cs
mov
bound
shlb
cmp
int3
scas
pop
jo
push
adc
add
shrb
mov
push
ficoml
or
mov
adc
loope
or
ret
pop
mov
xor
sbb
out
push
mov
jg
mov
into
xchg
ds
adc
adc
lret
repnz
outsl
aam
fstl
imul
and
mov
cwtl
dec
push
lods
xchg
sbb
aam
jle
mov
mov
stc
fsubp
imul
pusha
rcll
sbbl
xor
jmp
inc
bound
stc
dec
push
movsb
fcmovnu
mov
cld
fdivl
pop
gs
decb
out
push
pop
inc
fstl
adc
ficoms
and
int
xchg
jbe
or
adcl
mov
xor
js
leave
lds
cwtl
ret
ret
sub
in
xor
adc
orb
in
pop
inc
adc
leave
dec
inc
jge
pop
mov
jp
subb
iret
arpl
dec
data16
xchg
sbbl
int
pop
mov
es
pop
xlat
push
dec
jg
push
mov
cmp
xorb
insb
or
enter
cmp
das
sahf
insb
lock
cld
xlat
xchg
jo
push
jb
mov
pop
mov
lret
mov
mov
xchg
inc
push
arpl
shlb
pusha
ret
sahf
add
rorb
xchg
lret
mov
movsb
fadds
outsl
mov
cwtl
mov
cltd
imul
cwtl
scas
imul
rorl
insl
xchg
sub
mov
ljmp
push
inc
fisubrl
outsl
int3
push
aam
xor
loope
adc
mov
outsl
out
xchg
add
xchg
lods
pop
dec
inc
and
and
das
sbb
iret
push
mov
lret
movsb
loop
mov
je
inc
inc
dec
je
inc
loope
sbb
insb
xchg
call
test
mov
sbb
in
daa
inc
xchg
mov
or
lods
pop
negl
add
ret
xchg
and
sarb
cmc
imul
adc
jmp
xchg
sub
cwtl
movsb
cmpsb
push
sahf
add
cmpsb
cmpsb
pop
mulb
add
xchg
xchg
adcb
imul
aaa
mov
sub
movsb
les
out
jl
inc
dec
jmp
ret
adc
cmp
jmp
mov
xchg
cmp
dec
scas
jnp
push
dec
mov
inc
addb
jb
cmp
cpuid
rcll
dec
xor
lahf
inc
cltd
push
jb
test
fcomip
xor
xchg
mul
xor
movsb
and
dec
jp
mov
pushf
jg
inc
insl
sbb
dec
or
adc
pop
xchg
jmp
in
and
pop
lods
fbld
mov
jnp
stc
cltd
or
push
movsb
xchg
cmpsl
test
push
lret
insb
lea
sbb
imul
and
lcall
xchg
mov
in
testl
fidivs
inc
test
add
fcomps
icebp
test
outsb
lock
cltd
les
inc
imul
and
xchg
or
lea
jb
test
hlt
inc
popf
add
sub
mov
inc
jmp
mov
mov
push
cmp
push
cmp
mov
xorl
pop
fdivr
and
aaa
push
int3
int
lds
loop
popl
dec
pusha
sub
xor
popf
cltd
dec
push
pop
inc
mov
test
pop
pop
cltd
testl
adc
lea
out
dec
jge
lret
scas
loope
js
cmp
mov
inc
push
mov
pop
outsl
insb
push
mov
pop
pushf
idiv
sbb
cltd
fcmovb
sub
loopne
mov
cmp
jo
js
mov
iret
mov
cld
push
jne
pop
sub
inc
xorb
push
inc
dec
dec
clc
scas
push
xor
nop
out
mov
add
movsl
xchg
cmc
fnsave
adc
push
cld
arpl
jne
mov
adc
and
and
mov
in
lods
dec
add
std
std
push
xor
lahf
mov
into
xchg
cmp
dec
sbb
jae
fcomps
roll
subb
loop
cltd
sbb
inc
jo
dec
dec
aam
ljmp
repz
iret
dec
cld
dec
sbb
push
push
xchg
ljmp
mov
es
push
pop
mov
sub
nop
pop
cs
mov
test
lret
test
push
dec
or
push
outsb
mov
push
ficoml
imul
cmp
lock
cmc
cld
xchg
jo
xchg
xor
int
filds
cmp
fs
mov
sub
mov
in
mov
or
dec
mov
xchg
idivb
adc
and
out
jecxz
xlat
jo
jp
push
into
loope
push
rcrl
xchg
mov
cld
and
out
scas
mov
hlt
les
loop
ror
jmp
notl
adc
push
push
aam
stc
sti
mov
inc
jl
subl
push
cmp
mov
and
pop
out
xchg
cmp
in
test
fwait
aas
mov
xchg
add
fwait
out
rol
outsl
xor
sbb
xchg
add
mov
pop
mov
dec
daa
pop
mov
ucomiss
leave
leave
mov
das
repnz
mov
mov
dec
cli
ficompl
push
aam
push
xchg
mov
lea
lods
sbb
add
loopne
rolb
loope
lahf
mov
pushf
fcompl
push
test
leave
pop
movsl
xor
stos
pop
lock
cmpsl
hlt
loope
pop
dec
mov
inc
xor
jno
in
sbb
repz
bound
int3
cmp
sub
sub
mov
mov
inc
in
mov
add
jno
insl
lock
xor
pusha
dec
or
stos
movsb
xor
jae
jl
push
push
push
testb
outsl
jmp
fmuls
sahf
fistpl
pop
cmpsl
sbb
in
mov
sub
push
cmp
mov
shll
pop
lahf
jg
add
lock
cmpb
cmp
and
mov
fidivl
stos
icebp
mov
cmp
cmp
and
data16
cmp
pop
stc
mov
inc
sub
aaa
inc
inc
cmp
mov
mov
imul
in
and
inc
ja
sbb
dec
fs
ror
out
repz
pop
loop
ljmp
ret
mov
std
out
aam
scas
pusha
popf
icebp
loop
inc
std
addl
push
in
mov
and
mov
lret
enter
xsavec
xchg
push
icebp
mov
pushf
inc
adc
dec
push
lds
imul
mov
mov
lods
jl
mov
imul
or
add
jnp
movsbl
insb
cmp
lret
movsl
mov
pop
adc
out
popa
repnz
movsb
add
arpl
sub
testl
loopne
in
mov
cmp
addr16
jle
mov
test
inc
fisttpll
mov
add
sub
adc
cwtl
imull
xor
mov
sub
aad
dec
cmp
pop
repz
test
negl
lods
push
icebp
aaa
out
jmp
jnp
sahf
inc
inc
cmp
in
cld
call
sub
mov
mov
testl
jmp
in
cmp
xchg
test
mov
addr16
pushf
adc
push
mov
dec
mov
into
inc
mov
mov
test
inc
stos
push
mov
lret
das
inc
sbb
lods
mov
sub
test
shll
xor
bound
lock
pop
and
dec
mov
add
insl
xchg
mov
add
xor
lea
lahf
addr16
fildl
adc
imul
mov
cmpb
test
sub
push
fstpl
and
jg
cmp
enter
mov
lock
push
mov
sub
pop
pop
leave
out
cmpsb
xchg
push
jnp
test
jecxz
inc
scas
xchg
xor
add
shlb
add
enter
push
push
add
movsl
scas
std
adc
mov
push
aad
lock
dec
dec
es
imul
inc
repnz
test
xchg
dec
test
mov
pop
jne
inc
idivl
test
mov
mov
jns
sahf
jg
and
out
jmp
bound
sbb
xchg
xchg
fnsave
incl
aad
stos
mov
pop
ja
ja
xchg
mov
mov
int
and
sarl
push
or
incb
sub
mov
imul
frstor
addr16
sbb
jecxz
loop
jne
mov
stos
adc
test
adc
jne
mov
scas
mov
inc
add
dec
loopne
pmulhuw
sbb
into
jno
int3
add
imul
sbb
mov
and
adc
inc
test
movsb
das
out
test
paddsb
push
mov
aam
jae
fnstcw
shll
xor
xor
jns
lock
lods
push
je
push
inc
inc
sub
pop
loopne
lea
or
ss
repz
push
adc
fisubl
fisttps
mov
pop
dec
jle
sbb
mov
jns
sbb
out
loopne
pop
pop
sub
cmc
adc
cmp
imul
mov
sub
fcomip
scas
or
cli
pop
sbb
fsubs
cmpsb
inc
and
xchg
mov
pslld
out
aas
push
call
push
out
push
out
stos
and
push
or
pop
inc
cld
sub
lret
mov
or
and
rorb
push
shrb
stos
jmp
dec
call
push
pop
ja
fcompl
test
adc
jle
pop
jbe
xchg
push
mov
jg
sub
or
int3
in
cmp
xchg
sub
pop
lea
outsb
xchg
aam
and
out
nop
or
sbb
dec
mov
mov
scas
ret
xor
or
mov
mov
mov
pop
ljmp
clc
jg
adc
cmpl
or
shr
mov
test
xor
lret
mov
sub
in
or
lret
bound
les
dec
fidivrl
mov
sti
fsts
stos
mov
das
cld
jne
mov
inc
mov
cld
xor
pop
push
cld
or
addps
or
xlat
in
mov
jmp
jge
std
xchg
pop
aaa
jg
jbe
inc
dec
shl
fs
sbb
ljmp
mov
fdivrl
imul
push
mov
or
rclb
inc
mov
aad
or
test
dec
push
fldcw
jecxz
repnz
sbb
add
adc
out
jmp
cmp
int
mov
inc
lret
xor
push
pop
xchg
mov
gs
clc
loopne
inc
pop
dec
faddl
daa
mov
cmp
push
pop
insb
aas
jg
adc
scas
loope
lret
and
repnz
pop
mov
insb
and
aas
imul
jnp
push
adc
aad
imul
inc
jmp
fwait
inc
mov
and
sub
sub
pop
aas
xchg
in
insb
pop
and
or
xchg
aaa
les
add
fcomps
pop
insl
jno
jl
aad
aad
and
popf
dec
jne
add
negl
clc
inc
and
and
adc
add
mov
jp
jno
and
inc
jae
mov
mov
pop
mov
sub
jnp
inc
aaa
sub
sti
sbb
and
pop
aaa
push
imul
push
cwtl
test
fcomps
pop
cmp
das
in
ljmp
add
push
ficoml
xchg
jmp
mov
inc
jbe
adc
popf
or
mov
push
mov
xorl
imul
push
inc
pop
hlt
cmpsb
fisubrl
or
insl
sahf
das
in
dec
sbb
and
ljmp
cmp
loopne
sbb
stos
ret
and
jb
cmpsl
cltd
outsl
aad
jle
jne
jnp
mov
or
push
or
ljmp
ss
fstpl
mov
add
sbb
or
test
data16
cwtl
imul
fadds
bound
aas
sub
outsb
mov
pushf
cmp
add
push
repz
cld
mov
jbe
fxch
rorl
int3
sbb
mov
mov
sub
daa
xchg
pushf
jnp
inc
hlt
fs
ljmp
pop
jg
jecxz
rolb
jmp
mov
mov
call
fsubrl
rcll
lds
lock
sbb
push
cmpsb
dec
stc
jmp
push
rorl
push
adc
mov
and
stos
js
js
mov
je
jle
std
pop
cmc
int3
sbb
push
sbb
inc
cmp
add
pop
addr16
pusha
push
loopne
ret
mov
jno
cmp
sub
fstps
rclb
pop
aam
push
mov
ljmp
cmpl
adc
jne
sub
test
inc
xor
scas
xchg
xchg
sub
jge
and
lcall
sahf
fstp
sbb
inc
add
jle
jne
es
pop
xchg
jns
fistl
sbb
popf
testl
or
jmp
cltd
sbb
negl
mov
xchg
jae
jmp
stos
jg
add
dec
leave
sub
jecxz
dec
test
push
decl
test
test
inc
mov
pop
and
pop
push
test
xchg
rcrl
fldl
insb
in
je
sub
hlt
cmp
mov
lds
in
cmpsb
imulb
stos
pop
lret
decb
push
inc
push
push
pop
sub
icebp
aad
jbe
mov
sbb
in
sbb
nop
iret
mov
mov
mov
xor
in
xor
out
cli
jns
mov
cld
mov
fistpl
xchg
js
mov
lret
js
jp
leave
sahf
push
xor
or
pop
dec
pop
ret
jl
add
or
mov
xor
stos
pop
dec
dec
rcrb
add
add
pop
je
pusha
mov
cwtl
push
rorb
pop
adc
cltd
int
lcall
inc
sahf
addr16
rorl
push
ljmp
sbb
dec
adc
sbb
push
xchg
mov
cltd
xchg
dec
out
xor
test
mov
negl
push
cwtl
xchg
or
and
inc
test
test
fnstcw
pop
sub
adc
jge
outsb
fstps
pop
icebp
adc
fwait
mov
sub
xchg
pop
or
ljmp
out
mov
lret
xchg
movsb
fdivrl
sub
xor
pop
ret
xchg
xchg
pop
fldcw
fdivrl
mov
jns
mov
mov
pop
andb
dec
outsl
cmp
ret
mov
inc
pop
sub
sti
and
sbb
stc
and
popa
jmp
xor
and
xlat
outsl
mov
ds
add
iret
aad
lods
inc
sbb
pusha
mov
insl
lods
and
shl
pop
mov
outsb
xchg
int3
inc
mov
push
aad
test
pop
imul
inc
inc
popf
adc
pushf
or
cld
push
push
jge
je
iret
mov
pushf
test
mov
test
mov
leave
pusha
movl
xor
inc
test
inc
xchg
jge
daa
pop
push
xor
popf
and
xlat
cld
das
xor
lds
and
xor
inc
popa
out
dec
sbb
in
jo
or
sub
outsb
outsb
out
xchg
mov
outsb
mov
push
cwtl
in
pop
cmp
adc
bound
js
aaa
pushf
out
mov
subb
mov
pop
cld
inc
imul
daa
bound
inc
xorb
popf
xor
fldcw
cmpsl
test
js
jnp
movzbl
sbb
mov
in
loop
test
pushf
daa
fcompl
pop
in
int
dec
xor
add
sbb
lret
gs
in
fbld
pop
jge
sub
imul
xor
sbbb
mov
lahf
rorl
mov
enter
sub
dec
leave
comiss
pop
negb
popf
mov
mov
notb
jbe
push
ret
add
lods
inc
andb
scas
mov
or
add
out
je
das
nop
pusha
mov
push
mov
xchg
sub
sti
fmull
inc
push
sbb
cwtl
fnsave
cmp
xchg
push
in
pop
sbb
fisubrl
insb
mov
outsb
xchg
or
push
in
or
mov
dec
jno
shrl
dec
mov
xchg
add
into
aaa
and
sahf
push
inc
ds
pushf
inc
or
and
lcall
stos
cmc
cld
in
data16
xor
dec
fwait
inc
xchg
dec
movsb
sbb
xor
xchg
mov
andl
xor
leave
jno
out
jb
sbb
bound
cld
aas
ja
rclb
cs
mov
lcall
pushf
and
stos
xchg
stos
jmp
push
into
lea
sbb
jno
push
push
fstps
dec
rcrl
js
movsl
imul
lock
fcompl
sub
dec
in
cmpsb
mov
jp
faddl
lret
repz
movsb
jns,pn
cld
push
push
mov
add
push
sbb
je
mov
sbb
xor
pop
iret
inc
mov
cmp
inc
adc
push
dec
or
jae
dec
push
popa
cli
fwait
jne
leave
fcoms
sbb
adc
xchg
or
std
and
in
test
and
mov
jne
mov
mov
jmp
cmp
mov
outsl
fcoml
mov
inc
add
or
jo
movsb
mov
xorb
lret
fsubs
xor
cld
push
aad
rolb
sbb
push
rcll
sub
in
jno
sbb
ds
popf
pop
in
popl
sbbb
pusha
cs
aad
imul
sub
push
xchg
call
test
shrb
mov
ficomps
shlb
dec
subb
push
lds
lret
push
cwtl
mov
and
ret
les
std
pop
pop
mov
in
adc
loopne
xchg
sub
dec
lcall
scas
push
pop
mov
sbb
sti
mov
cmp
jmp
paddd
jle
and
mov
pop
adc
test
inc
or
mov
jnp
push
loope
inc
outsl
andl
push
je
insl
addr16
pop
or
loopne
arpl
fnstenv
lods
pusha
inc
and
jae
decb
sarl
scas
push
dec
mov
xchg
out
cmp
jp
add
stc
repnz
jmp
lods
dec
jp
sbb
or
lret
push
dec
cmp
std
mov
dec
or
jmp
das
divps
test
fdivl
mov
xchg
mov
inc
loopne
repz
jno
xor
adc
nop
dec
call
lods
or
movsb
jnp
in
scas
pop
dec
push
pop
xorb
cld
xor
lock
mov
push
lahf
mov
xchg
insb
aad
mov
ficoms
jl
xchg
jb
mov
mov
xchg
xchg
loopne
sti
xchg
mov
inc
adc
xchg
sbb
mov
push
hlt
outsl
int
inc
fxch
inc
jb
out
mov
std
mov
xchg
gs
push
popf
push
inc
cmp
out
sbb
xchg
mov
ret
sub
cmp
es
sbb
mov
pop
cli
xor
cli
and
imul
jnp
inc
fstpl
dec
inc
add
inc
mov
or
or
sbb
pop
mov
jns
fbld
sub
int
out
arpl
push
adc
addb
inc
gs
jno
mov
insb
test
pop
mov
add
or
rcll
sub
adc
cmpsb
jmp
pop
pop
test
adc
adc
mov
push
pop
xor
mov
push
mov
psubsb
add
add
sub
ja
xchg
mov
adc
sub
pop
popf
test
pop
or
jb
repz
out
fisttpll
mov
lock
fldenv
fimuls
push
add
sbb
sub
inc
adc
mov
or
sbb
jecxz
scas
mov
jl
mov
cmp
xor
ljmp
inc
lods
and
cmpl
dec
movsb
dec
mov
push
test
dec
push
jo
daa
dec
pushf
adc
ret
ret
cmp
jmp
cmc
mov
int
sbbb
xor
jg
dec
clc
adc
inc
lcall
xlat
xor
xor
xchg
and
sarb
jo
mov
cli
xchg
pop
pop
dec
jno
pop
jae
aas
push
jbe
mov
mov
jp
mov
in
out
imul
sbb
addl
and
or
fistpll
mov
aad
imul
loope
fsub
and
lahf
mov
jmp
fldt
mov
jge
je
rorb
add
popf
mov
rcl
fwait
adc
test
push
divl
mov
insl
pusha
sahf
rolb
fstps
or
int
imul
js
add
iret
xchg
outsb
aas
adc
cmpsb
imul
mov
dec
xchg
shl
fstp
lds
pop
fdivrl
adc
xchg
out
push
mov
cmp
adc
adc
pop
cmpsb
leave
pop
fxch
mov
adc
fiadds
mov
mov
jnp
fdivrp
or
aad
or
mov
mov
arpl
ljmp
fcomip
fwait
push
outsb
and
add
cmp
mov
popa
test
mov
iret
xchg
sbb
cltd
push
add
cmp
fidivrs
mov
loope
loope
popa
and
call
test
xchg
ret
xchg
mov
jo
pop
xchg
sbb
xor
lahf
sub
bound
je
sub
stos
rcrb
dec
xchg
pop
cmp
int3
addr16
es
sub
mov
mov
cs
adc
les
mov
fdivs
pop
mov
daa
mov
rclb
enter
add
jns
push
xchg
xor
out
pop
int3
dec
or
cs
push
jb
arpl
mov
mov
shl
and
mov
sbbl
and
sbb
icebp
push
xchg
xor
das
aad
jg
lock
and
imul
scas
aad
mov
data16
mov
ja
or
cmp
cli
or
sub
in
test
adc
inc
push
sub
lea
arpl
pop
mov
mov
cs
rorb
jp
xchg
xchg
or
mov
jg
rcll
idivl
cltd
adc
andb
stc
sub
inc
stc
push
aas
mov
push
inc
push
mov
adc
pop
pop
jns
ss
addb
xor
xor
add
movsl
adc
fs
pop
push
mov
int3
mov
pusha
and
adc
jle
or
cmp
es
rclb
pop
mov
lock
addr16
lahf
adc
ds
mov
or
lods
loopne
xor
in
aad
add
add
mov
or
out
mov
jg
mov
push
jle
popf
cwtl
xor
ret
cmp
sarb
sbb
push
aad
pop
pop
dec
insl
mov
cmc
jmp
pop
xor
nop
dec
and
sub
push
push
and
adcb
mov
fisttpl
rcrl
mov
imul
mov
xchg
je
mov
movsl
xchg
and
jae
xchg
rol
push
cmpsb
shll
mov
xor
pop
xor
sub
xor
scas
xchg
shlb
incl
xchg
or
jae
ds
cld
cmpsl
and
test
push
jecxz
mov
lock
and
xchg
or
fs
into
xor
out
mov
mov
dec
popl
in
jecxz,pt
jg
test
adc
leave
fdivrs
push
jno
sahf
fisttpll
dec
add
popa
in
jno
xor
add
hlt
cltd
das
lcall
pop
inc
cwtl
lock
lcall
fsubr
ljmp
cmpl
divl
aas
pushf
insb
fnstcw
mov
push
jne
xor
out
int
mov
adc
dec
and
ror
xor
adcl
icebp
xchg
mov
das
cmp
sbb
jae
movsb
xor
jnp
scas
adc
add
scas
sahf
adc
fnsave
mov
into
mov
aad
or
cmp
pop
shrl
dec
jae
in
in
dec
cmp
pushf
test
push
sub
jg
daa
popa
mov
pop
out
enter
dec
imul
xchg
cmp
sahf
mov
sub
cmc
sbb
faddl
ja
call
jp
add
imul
aam
out
sub
or
lahf
xchg
std
push
mov
push
aad
ss
mov
sub
movl
hlt
in
mov
mov
add
pop
test
mov
outsl
xchg
adc
in
cs
test
push
rolb
mov
xchg
and
outsb
push
mov
push
or
mov
adc
jle
out
iret
mov
cld
lahf
fyl2xp1
movsl
mov
fcmovu
stos
xor
rcll
imul
aas
ljmp
inc
sbb
pop
push
fisubl
imul
clc
xor
loopne
cmp
in
cmc
dec
roll
inc
in
roll
imul
lcall
mov
xchg
pop
iret
stos
sbb
sbb
sbb
pushf
fsubrs
or
es
lcall
inc
fcomps
mov
pop
xchg
xchg
scas
into
xchg
adcl
dec
or
cmpsb
lcall
inc
add
push
jbe
cli
inc
js
sub
and
imul
pop
mov
mov
jl
outsb
fmulp
push
pop
jns
ljmp
or
seto
idivb
pop
xor
mov
lret
dec
fdivs
shrb
sub
and
pop
push
or
xor
push
mov
mov
pop
sar
stos
mov
ljmp
test
adcb
xor
and
dec
adc
out
and
ret
jecxz
notl
dec
jae
push
fisubs
andl
hlt
xchg
out
or
mov
js
ss
inc
into
and
add
repnz
jb
mov
add
dec
jbe
mov
push
mov
mov
mov
jg
lret
xchg
push
jno
xchg
popl
outsl
or
sub
les
mov
js
cwtl
adc
mov
stos
mov
lret
out
inc
xor
mov
lret
lret
inc
rcrb
adc
mov
and
sub
loope
notb
dec
popf
push
jb
xor
fisttpl
fnstsw
jae
call
jmp
fs
mov
xor
scas
push
jnp
mov
add
popa
sti
leave
mov
push
mov
xor
jno
mov
push
mov
je
loop
insb
call
push
outsl
xor
lds
and
fisttpl
xchg
dec
mov
daa
push
addl
in
adc
sbb
mov
add
sarb
jle
imul
lret
sub
stos
addr16
mov
dec
push
insb
pushf
inc
ret
gs
pop
aas
mov
dec
dec
push
int3
imul
test
mov
and
fs
filds
loope
les
addr16
mov
jge
xchg
out
inc
pusha
stc
idivb
pmulhuw
or
imul
mov
mov
call
in
or
pop
in
dec
into
push
xlat
fwait
jns
and
xor
int
ss
ljmp
adc
or
mov
cmpsb
cmp
jle
sub
aas
inc
mov
stos
inc
xchg
nop
sbbb
sub
test
in
xchg
and
adc
shl
cld
pop
cmp
imul
or
inc
pcmpeqw
jbe
pop
jns
mov
out
gs
add
inc
aaa
addr16
sub
adc
and
mov
push
lds
sbb
test
in
xchg
pop
xor
fbstp
mov
aam
data16
fistpl
xor
scas
enter
mov
and
lods
notl
lret
push
sub
sbb
fst
addl
and
cmp
xchg
inc
enter
cmpsb
lahf
cmp
out
pop
lods
pop
aas
jb
mov
pop
cmpsl
jecxz
hlt
adc
xlat
mov
mov
jl
data16
adcb
mov
sub
stos
ss
push
dec
cmpl
cmp
push
sbb
mov
jp
jnp
cmpsb
cwtl
int
aaa
subl
shll
mov
jg
pop
test
xor
shll
enter
test
fbld
dec
std
and
cli
mov
lods
lahf
mov
sbb
mov
sbb
jbe
xchg
out
int3
mov
popa
out
lret
das
sbb
adc
mov
scas
jb
aam
fstps
xlat
sub
cltd
pushf
xchg
xor
movsl
into
lods
daa
insl
fldenv
mov
insb
adc
mov
jnp
in
cmpsl
pop
scas
mov
test
mov
pop
loopne
mov
out
in
and
test
xrstors
loopne
iret
jns
pop
adc
cmp
aas
dec
pop
sti
and
or
mov
lcall
and
mov
inc
ret
xchg
jge
sub
addr16
jo
xchg
inc
dec
lods
push
repnz
out
mov
hlt
xchg
add
iret
iret
ret
cld
outsl
jle
xor
pop
mov
mov
into
roll
rolb
sbb
jle
or
and
fsub
jbe
mov
jecxz
pop
into
dec
sbbb
inc
mov
push
leave
dec
adc
iret
xor
mov
cmpb
pop
sbb
subb
aas
sti
mov
mov
pop
imul
mull
dec
lcall
dec
scas
mov
push
add
xchg
scas
cmp
int
jge
lods
out
popa
ret
cmp
pop
scas
dec
inc
sub
add
pushw
clc
pop
and
iret
xor
xor
and
push
popf
mov
push
jmp
pop
dec
lock
xor
mov
aam
ss
pop
fcoml
and
shrl
das
pushl
adc
xchg
pop
push
test
ljmp
jno
call
push
jae
rorl
mov
sub
je
aam
rclb
test
aam
mov
outsl
inc
es
pop
sub
sbb
into
mov
push
xchg
sbb
mov
or
xchg
iret
mov
lahf
mov
pop
inc
fwait
dec
jmp
inc
or
gs
pop
dec
xorb
mov
and
bound
adc
out
rcll
xchg
jnp
push
sub
add
jne
cmp
xchg
pop
xchg
xchg
push
mov
inc
xchg
dec
sbb
xor
inc
cmpsl
push
jecxz
enter
aam
mov
loope
adc
sbb
nop
and
mov
nop
push
pop
mov
out
shll
jns
jne
rorl
outsl
loop
cltd
xchg
xor
in
jbe
aam
or
jb
fadd
mov
fnstenv
inc
xchg
and
subl
rcll
aad
in
icebp
push
jae,pn
les
xor
adc
adcl
sbb
lea
push
and
imul
xor
movsb
jns
push
push
loop
mov
sbb
sbb
mov
adc
dec
sti
push
push
cmpb
or
test
inc
or
out
movsl
adc
scas
imul
jecxz
xchg
pop
push
jnp
mov
xor
or
sub
lds
popf
cs
leave
mov
mov
shll
mov
into
ret
mov
into
push
sti
mov
mov
in
jge
stc
push
call
mov
imul
das
andb
push
ss
rcrb
jmp
imul
push
out
mov
idivl
lock
pop
shl
adc
ficompl
push
xchg
sub
test
inc
loopne
lods
xchg
cmpsl
inc
add
push
jmp
in
add
lret
stc
or
mov
xchg
sub
aad
mov
or
jmp
or
adc
dec
test
out
mov
stos
cmpsl
imul
jne
sbb
xor
or
mov
mov
sbb
adcb
mov
inc
adc
test
dec
xor
cmc
mov
sub
cwtl
cmp
pusha
popa
test
jmp
pushf
stc
sbb
push
dec
rorl
cmp
adc
mov
fisubrs
and
xor
movb
fbld
jae
jns
or
adc
or
mov
mov
in
subl
sub
push
push
and
lahf
das
xchg
inc
mov
lret
ret
popa
push
clc
repnz
sarl
jle
or
push
mov
test
jge
movb
cmp
and
dec
imul
xor
xchg
cltd
shlb
sahf
fs
outsl
pop
popa
lds
mov
xor
test
mov
lahf
loop
in
cwtl
mov
and
mov
lods
aaa
adc
dec
lods
or
pop
xlat
mov
dec
jle
cmp
mov
sub
lock
dec
fisubrl
jle
mov
cwtl
ret
imul
subb
jno
pop
add
hlt
cmp
aad
sar
call
sbb
jno
pop
cld
jb
cmp
data16
push
push
push
lret
jno
cs
mov
adc
faddp
adc
add
push
addr16
dec
sbb
xchg
mov
test
xor
mov
fmulp
push
int3
mov
and
and
or
push
leave
sbb
hlt
test
ret
push
mov
mov
repz
hlt
jne
mov
mov
out
push
test
adc
imul
xchg
shl
xchg
push
or
push
adc
lret
xchg
pop
dec
int
dec
loopne
jl
sbb
jb
lcall
cmpl
enter
mov
dec
adc
sub
bound
out
pusha
dec
dec
out
setp
in
mov
scas
push
je
pop
sbb
clc
xchg
sbb
fisttpll
cmpsl
lock
mov
xchg
and
xor
aas
add
scas
out
jb
arpl
mov
xor
adc
pop
ficoml
clc
sub
xor
lds
sbb
xchg
int
pop
sub
dec
and
int
aaa
cmpsl
loopne
shrl
lret
scas
mov
xchg
into
push
or
mov
loopne
sbb
leave
sub
cmp
push
addr16
dec
cmc
in
pop
cmpl
sub
fmull
mov
dec
mov
in
jnp
add
add
xor
jne
xor
clc
testb
fs
add
bound
push
push
loop
jnp
jmp
jbe
addr16
push
add
mov
int
loop
xlat
sbb
sbb
aaa
push
xor
in
cmp
pop
mov
cltd
jp
stos
rol
pop
adc
jnp
jb
rcr
test
mov
sub
addl
add
movsl
fwait
and
fidivs
adc
adc
test
pop
aam
jo
push
imulb
and
jmp
imulb
cmpsb
mov
push
fmuls
sbb
es
push
adc
out
xchg
add
std
pop
std
pop
aas
idivl
das
jmp
lods
mov
mov
push
push
in
ds
push
pop
fsubs
lods
andb
dec
out
push
mov
and
xchg
jnp
aam
and
mov
stos
push
or
inc
lea
cmpl
jmp
push
dec
fs
mov
push
fstpl
leave
cmp
sbb
lods
lret
add
mov
inc
push
test
xchg
mov
inc
stos
pop
insb
call
inc
ret
je
add
int
push
pop
popf
cmc
xor
sub
leave
sahf
add
cli
lret
fdivs
sbb
dec
mov
mov
dec
xchg
jle
sub
sarb
push
pop
jl
bound
hlt
fcoml
faddl
cmp
pop
push
jp
rorl
adc
cmp
jns
stos
fimull
sbb
div
filds
insl
cmp
aam
sbb
rcrl
mov
les
jo
and
icebp
cwtl
add
sub
lahf
into
imul
pop
in
cld
adc
dec
lcall
xor
jb
push
leave
dec
jb
dec
sbb
fwait
imul
dec
mov
mov
repz
push
mov
or
call
push
cwtl
dec
sti
cmp
pop
in
ja
js
in
sub
push
fsubrs
ljmp
movsl
roll
arpl
fs
fadds
aad
xchg
mov
cmpsl
lahf
mov
insl
pop
mov
sarl
sbb
out
fstp
lock
add
mov
xchg
daa
fmuls
call
lds
imul
fs
scas
dec
aas
xchg
add
ss
movsb
insb
pop
roll
mov
lcall
test
test
push
push
pop
sub
mov
push
mov
arpl
mov
cmp
adc
test
xchg
in
dec
push
stos
cmp
dec
xchg
push
mov
int3
mov
cwtl
pop
shll
lahf
in
and
sub
mov
sbb
bound
push
cmp
sbb
xor
arpl
xor
push
mov
insl
cmp
mov
push
fs
xchg
fwait
aaa
mov
aaa
sub
or
test
or
in
orb
push
add
in
push
lods
std
mov
jb
iret
fisttpl
lea
imul
cmc
aas
sbb
addr16
in
daa
jb
fstpl
sbb
xor
jne
out
inc
add
inc
sbb
add
lods
inc
pushf
sub
and
aam
pop
jmp
cmc
mov
sub
push
in
lahf
mov
ljmp
and
xchg
and
cmc
lcall
mov
push
add
in
mov
mov
sbb
in
sti
in
mov
inc
jb
cmp
sub
dec
inc
jb
icebp
arpl
and
cmp
mov
arpl
sub
aas
nop
sub
loope
clc
mov
out
sahf
sub
mov
add
add
sub
jmp
and
repz
mov
pushf
loopne
push
mov
paddsb
subl
lods
cld
outsb
mov
daa
sub
mov
push
cmp
pop
xchg
test
adcb
inc
mov
std
jl
xor
inc
mov
aaa
push
fnsave
fisubrl
dec
sbb
imul
fcmove
test
arpl
fidivrl
or
jbe
inc
mov
out
mov
inc
and
jb
sub
aam
les
add
in
push
ss
cmpsb
xchg
inc
dec
push
xchg
push
mov
bound
cmc
push
shlb
xor
rorl
xor
loope
mov
inc
andl
add
rcr
mov
push
xchg
jg
repz
loope
and
mov
jno
sbb
xorl
cltd
pop
fstpt
jns
cltd
lods
cld
mov
filds
lea
add
rcr
gs
sbb
out
enter
ret
jmp
movsl
mov
mov
cmp
lret
add
aad
lcall
pusha
imul
mov
pop
add
mov
sub
jnp
sub
cli
add
data16
xor
in
jae
mov
arpl
shlb
popf
sub
push
mov
aad
add
mov
dec
lahf
imul
lahf
dec
sbb
js
push
inc
ficompl
pushf
popa
pop
setb
fisttpll
mov
dec
sub
fcmovnbe
rcrb
add
jnp
pop
and
or
cwtl
adc
fnstcw
mov
mov
movsb
negl
scas
out
jb
imul
sub
and
push
sahf
in
mov
in
shll
add
or
sub
add
or
inc
mov
icebp
mov
scas
int3
or
lea
xor
enter
jge
pop
enter
jno
push
fadds
mov
scas
ja
mov
cmpsb
adc
dec
lds
fidivrs
ja
fimull
into
mov
xchg
out
and
ja
push
add
push
xor
nop
dec
push
push
add
sbb
inc
add
dec
fidivrl
cmp
jae
loope
in
cmp
and
aaa
mov
mov
lahf
add
fcompl
daa
les
movsl
push
xor
inc
inc
cmp
rol
adc
testl
mov
inc
jecxz
push
lret
sub
test
pop
repnz
mov
shll
add
subb
in
mov
push
xlat
push
jge
data16
xchg
push
rorb
push
movsb
sbb
pop
stos
pop
cs
iret
add
les
jp
sbb
push
in
jp
out
test
je
dec
xor
dec
xchg
daa
jecxz
xchg
mov
repz
sub
mov
lahf
js
call
out
rolb
lcall
xchg
in
xchg
pop
movsb
jbe
and
lods
sbb
in
pop
inc
fldcw
dec
pop
xor
mov
push
in
mov
mov
mov
in
fmuls
inc
ljmp
xchg
out
leave
or
sbb
pushf
test
mov
shrl
scas
lods
or
mov
cmp
dec
psrlq
lret
sar
inc
int
mov
mov
das
mov
sar
cmp
mov
adc
movsl
dec
mov
mov
pop
icebp
ror
add
cli
sbb
mov
adc
repz
mov
std
sarl
ss
sub
mov
xor
adc
inc
mov
xor
loopne
fisubrl
das
add
jl
sbb
mov
push
outsl
in
jmp
ffreep
std
xor
mov
jle
fcomi
les
cmp
inc
push
dec
sub
outsb
jb
sbb
add
inc
mov
pop
jno
xor
sbb
xchg
jecxz
in
movb
jo
lea
mov
hlt
int3
lcall
pusha
xlat
test
in
push
push
loop
pusha
in
xor
mov
xor
ljmp
pushf
movsl
mov
sub
push
xor
or
xor
push
into
dec
aad
scas
and
and
pop
aam
fcoml
jae
mov
mov
cmp
jecxz
xchg
cmpb
sbbl
out
in
lock
sahf
xchg
cltd
mov
dec
xor
lods
fwait
mov
data16
mov
dec
mov
imul
jmp
mov
out
mov
fisttpl
add
jb
cmp
xor
jo
int
xchg
mov
test
outsl
inc
fistpl
mov
pop
rorl
je
imul
loopne
ljmp
test
test
pop
leave
dec
and
inc
int
cmovb
jb
xchg
stos
mov
nop
sub
fldcw
les
sub
int
stos
cmc
jle
fwait
nop
test
fsubrs
fs
pop
jecxz
adc
mov
movsl
xchg
adc
mov
jno
adc
push
push
inc
cwtl
cmp
cmpsl
pop
mov
lods
xchg
push
push
sub
mov
mov
in
mov
stos
fcomip
adc
lahf
mov
loope
add
jno
sbb
jae
mov
cwtl
pop
sub
inc
in
orb
out
out
push
outsl
loop
adcb
notl
pop
les
mov
jmp
xchg
push
leave
adc
div
add
stos
push
in
dec
js
cs
into
adc
jp
sbb
into
jle
mov
xor
mull
gs
inc
jae
mov
pop
xchg
mov
mov
stc
scas
mov
mov
jg
adc
popa
les
in
stc
dec
test
pop
inc
sti
add
popf
out
pop
stc
pop
pop
imul
lcall
loopne
jno
cmp
jg
sub
xor
add
jbe
cmpsb
fnstsw
jl
mov
je
call
sub
enter
ret
pop
cmovbe
dec
add
lds
jl
addr16
mov
push
sub
cs
add
iret
add
hlt
cmc
inc
nop
sbb
cmp
jecxz
pop
imul
cli
gs
add
sbb
icebp
leave
je
push
inc
lods
aad
dec
xchg
aas
in
movsl
dec
xor
mov
icebp
inc
fwait
aam
dec
jns
push
inc
lret
xor
add
and
shrl
enter
dec
popa
mov
daa
push
jecxz
aaa
cmpsl
mov
and
mov
js
scas
sub
pop
imulb
mov
cmpxchg
and
mov
jns
ss
inc
xchg
lret
daa
sbb
stos
stos
xlat
lods
movsb
pop
sub
jnp
add
jmp
ljmp
hlt
and
cld
outsb
test
and
add
out
mov
jl
sti
mov
xchg
adc
sub
pusha
push
jg
xchg
repnz
ljmp
icebp
data16
mov
rorl
out
mov
or
jb
cmp
push
pop
and
in
jl
xor
or
lods
loop
incl
out
sub
loop
pop
mov
inc
jmp
or
inc
dec
xchg
insb
mov
insb
add
popa
aas
popf
xlat
in
mov
adc
xorb
cmp
hlt
bound
adc
pop
lods
dec
mov
cmp
pop
imul
and
dec
adc
cmpsb
mov
inc
xchg
adc
push
jmp
cli
outsl
icebp
dec
out
mov
pop
and
punpcklbw
mov
jne
testl
cld
fisubrs
dec
inc
lods
sub
sbb
call
mov
fistps
mov
push
dec
push
or
stos
lcall
push
filds
push
xchg
jno
xchg
ret
and
mov
fdivrp
sti
mov
stos
adc
or
dec
sahf
cmpsb
cwtl
inc
insl
imul
mov
adc
and
mov
ret
jns
pop
pop
sub
mov
call
iret
ret
xchg
add
fistl
lea
inc
or
adc
fucom
xor
insb
bound
rolb
inc
imul
stos
jns
mov
dec
notb
test
inc
orl
stc
fnstenv
into
add
aad
jno
cmpsl
stos
les
or
rcrl
sub
popa
or
jnp
movsb
dec
jp
movsl
pop
cmp
cwtl
imulb
dec
sti
add
mov
push
sbb
adc
test
and
mov
push
fistpll
sub
fadd
pop
mov
xor
roll
pop
aam
aad
bt
mov
fiaddl
pop
out
out
xor
sbb
jb
jnp
inc
adc
bswap
loop
icebp
mov
stos
les
rcr
mov
cmp
out
ficompl
pop
and
int3
push
ljmp
xor
popl
push
cmp
mov
js
sbb
mov
rcrl
jl
and
movsl
lret
cld
jmp
mov
mov
fistl
lcall
and
imul
pop
ss
das
lods
scas
jne
sbb
fcmovbe
cwtl
push
das
mov
jo
jecxz
push
mov
loopne
add
and
push
insl
aaa
out
mov
push
xchg
mov
dec
jns
adc
data16
pop
add
clc
rcl
data16
xchg
out
pop
sbb
cmp
in
pushf
inc
iret
je
repnz
jge
bound
mov
fistpl
pop
sbb
push
add
jg
jmp
pop
cmp
clc
pop
sub
sbb
mov
fildl
mov
popf
pop
pop
mov
jns
ds
push
mov
fs
in
in
mov
fdivrl
cmpl
pop
ret
mov
out
or
push
adc
cmpl
das
pop
popf
cltd
call
sbb
fldcw
sbb
pop
mov
mov
int3
loopne
jbe
stc
mov
and
dec
cwtl
xchg
jmp
push
aad
mov
ds
pop
test
popa
test
pop
xchg
xchg
hlt
or
lret
ljmp
inc
je
mov
or
push
cmp
adc
sbb
push
push
cmc
mov
mov
fdivp
int
add
arpl
mov
aaa
fdivrl
push
dec
and
xlat
shll
loop
js
mov
push
pushf
xor
pop
dec
dec
dec
daa
das
sub
jo
xchg
mov
jo
xlat
cmpsb
andb
xorl
mov
in
or
or
mov
sbb
mov
mov
aam
xchg
mov
mov
iret
aam
jl
pop
add
mov
cltd
jne
loopne
or
xchg
xor
fmul
sarl
mov
rcrb
jl
fdivl
dec
mov
lret
hlt
mov
push
pop
ficoml
push
adc
pop
int
shrl
sub
vmwrite
sub
sti
or
sub
out
or
add
in
int
mov
clc
cmp
xlat
and
mov
out
xchg
xchg
and
aas
push
xchg
sub
pop
inc
pop
pop
aam
lods
prefetchwt1
or
sbb
and
outsb
popf
cld
jb
xchg
pop
dec
iret
sbb
pop
pop
out
rcll
sbb
mov
dec
or
out
inc
out
lea
in
cwtl
xor
loop
adc
out
dec
mov
in
sub
xor
js
xor
mov
mov
sub
aam
cmc
push
fisubrl
dec
mov
gs
out
cld
loop
xor
cwtl
ret
fs
dec
pop
les
or
arpl
jns
sub
cmp
out
hlt
or
or
xor
fwait
bound
stos
cwtl
scas
sti
out
add
jg
test
stos
fistps
jns
xor
xchg
mov
add
or
sbb
xor
pop
daa
data16
test
push
stc
int3
cltd
cltd
jno
cmc
cmp
fcomps
fisubs
jno
push
mov
sbbl
ret
sbb
or
and
push
mov
mul
mov
adc
mov
dec
cmp
les
pop
out
lret
pop
pop
add
push
cmp
cmp
gs
mov
cmp
adc
int3
dec
scas
pushf
dec
fstpt
fsubrs
pop
hlt
xchg
out
or
jle
imul
add
push
pop
scas
push
call
sub
jle
push
xchg
push
js
mov
jle
inc
imul
je
insl
in
jne
pop
add
mov
xchg
cli
loope
bound
dec
pop
stos
in
jnp
in
mov
shlb
mov
cmp
adcb
ja
loopne
stc
in
leave
int3
pop
loopne
ja
out
or
dec
mov
push
fucom
test
fsubs
dec
pop
mov
loopne
ret
inc
sahf
das
inc
fs
or
cwtl
mov
ds
ljmp
inc
mov
idivb
and
xor
mov
add
push
push
in
push
sahf
push
std
cli
mov
addl
leave
out
ljmp
bound
xchg
bound
andl
mov
inc
inc
pop
push
out
sub
stos
xchg
in
pxor
icebp
lods
aas
int
sbb
outsl
repnz
add
mov
pop
dec
cmpxchg
mov
push
fcomps
test
xchg
or
xor
out
and
mov
inc
cmpsb
mov
aaa
adc
jne
scas
lretw
call
frstor
mov
aaa
add
ret
or
mov
mov
out
or
sbb
pop
push
jmp
loopne
repz
es
jl
nop
aaa
rorl
jno
dec
or
add
jo
mov
pop
lret
pop
aam
sarl
mov
or
xchg
ret
push
inc
inc
into
shr
imul
inc
and
pop
inc
mov
iret
ja
pop
aaa
adc
xor
out
ret
mov
adc
cmp
dec
mov
pop
xchg
in
jno
pop
insb
cmpsb
leave
jb
repnz
scas
mov
rcrl
cmp
xchg
stos
sbb
bound
pop
hlt
stc
test
fwait
cld
iret
aaa
mov
in
pop
push
jmp
push
call
stc
push
sub
adcl
push
sbb
orb
shll
mov
leave
sarl
xor
dec
sub
jnp
pop
lods
pusha
sbb
aam
mov
mov
cmp
mov
push
lods
dec
and
dec
inc
mov
cmc
push
lea
xchg
popf
and
daa
cwtl
ficomps
push
gs
in
dec
aad
mov
orl
sub
inc
into
cld
rclb
lfs
xchg
std
int3
aas
push
cltd
push
lret
mov
fadd
cmp
mov
mov
xchg
lds
adc
loop
jns
addr16
and
aam
add
scas
or
xor
dec
mov
icebp
pop
mov
dec
into
ja
push
enter
leave
or
int
imull
sub
sub
mov
push
jge
inc
mov
lret
xchg
incl
std
push
popa
dec
je
pushw
mov
fidivs
cmp
push
inc
test
mov
and
mov
or
outsl
xchg
fabs
mov
imul
dec
int3
sub
in
pop
pushfw
jbe
mulb
outsb
jo
push
std
xor
cli
movsb
jl
mov
sbb
scas
jg
insl
mov
adcl
jae
xchg
leave
imul
inc
or
in
andl
fiaddl
fidivrl
jne
mov
xor
jo
sahf
jns
mov
sub
cmp
sub
int3
cmpsl
jl
jl
push
popf
hlt
jmp
mov
mov
inc
leave
outsl
jae
push
sbb
pusha
loop
inc
xor
test
cmp
push
jns
sub
jge
jnp
outsb
lds
outsl
pop
das
outsb
jmp
jbe
mov
jbe
cwtl
jle
pop
jb
mov
jle
sbb
mov
rclb
loop
xor
cltd
cltd
jecxz,pt
jne
icebp
cmc
popf
cmc
sub
xchg
nop
mov
addl
inc
cmp
cmp
jo
adc
fsubrl
pusha
lock
lea
or
cmpb
push
mov
fwait
mov
mov
lret
lret
pop
fisubrl
repz
int3
mov
js
jne
lcall
test
jb
inc
aad
sbb
fcmovu
xor
cli
push
xchg
mov
dec
lahf
push
cmpsl
pop
daa
stos
lret
and
and
faddl
and
loopne
andb
add
mov
icebp
cmc
mov
push
jae
in
in
push
mov
imul
xchg
push
hlt
es
out
push
rcrl
aaa
mov
sub
test
pop
jmp
roll
adc
mov
xchg
aaa
iret
lods
dec
mov
pop
ja
xor
clc
loop
fistps
inc
pop
mov
add
inc
lcall
in
mov
scas
jb
xchg
pop
add
jae
jo
add
cmp
mull
scas
loopne
adc
cmpl
sbb
push
inc
fisttpll
out
jbe
in
movsl
xchg
cmp
xor
push
cli
lret
ljmp
pop
mov
adc
lahf
xchg
icebp
lea
cmp
dec
fsubrp
ret
out
mov
sub
push
xor
scas
scas
outsl
xor
js
push
loope
jge
adc
add
sti
or
into
fcmovb
adc
je
das
adc
sub
jecxz
jp
hlt
xchg
aaa
jl
add
lcall
sub
cmp
cli
iret
int3
mov
mov
flds
aas
repz
cli
fwait
lret
pop
jo
nop
dec
icebp
jmp
cmc
xchg
push
outsb
daa
sub
xor
cmp
mov
push
das
movb
out
int
and
mov
sub
call
cmp
push
daa
mov
or
stos
test
loopne
or
pop
jnp
xor
cmp
push
dec
bound
int
pop
lahf
sti
adc
add
and
push
pop
mov
cmp
xor
leave
lock
jae
es
jae
je
lret
je
ss
sub
mov
sti
mov
or
mov
mov
inc
xlat
xchg
mov
sbb
es
inc
sub
ret
jne
jl
movsl
test
jmp
cmp
cmp
pop
movsb
lret
loop
nop
push
lcall
repnz
arpl
sbb
in
push
push
push
test
adc
mov
mov
icebp
sarb
lea
aad
fmuls
in
ja
adc
or
sar
xchg
push
mov
or
inc
mov
div
js
xchg
sub
dec
mov
push
imul
es
jbe
mov
sbb
and
mov
sub
lods
ret
inc
adc
adc
pop
out
int3
das
jae
dec
inc
sahf
je
sbb
xchg
mov
in
sbb
cmp
xor
adc
mov
mov
pushf
jb
enter
xchg
inc
aad
insl
cmp
nop
stos
or
insl
iret
scas
cmpsb
xchg
scas
or
outsb
in
mov
xchg
mov
or
xor
shrb
jmp
dec
push
sbb
jbe
cld
scas
fisubrs
fsubs
sub
stos
xchg
mov
mov
xchg
or
inc
aas
xor
jg
fdivl
jge
adc
nop
mov
sub
push
jle
repnz
das
fcom
mov
cld
mov
shl
mov
adc
popf
jns
je
mov
xor
or
test
je
aas
cmc
mov
and
out
jl
insl
push
xchg
lret
outsl
out
bound
sub
lds
lods
dec
jo
cmp
lea
je
iret
popa
xor
push
push
popl
mov
aad
inc
dec
mov
lret
mov
icebp
and
adc
arpl
mov
xor
mov
cwtl
pop
sbb
mov
imul
jnp
in
push
mov
push
fwait
bound
jae
mov
mov
cwtl
fisubl
arpl
out
in
sbb
or
sub
arpl
cmc
ret
sbb
int3
pop
in
xlat
rclb
xchg
mov
stc
mov
jl
cmp
push
mov
sub
xchg
pop
mov
add
imul
cmpsl
mov
in
sub
cmpsl
out
cmpsl
ja
and
jge
mov
pop
push
cmp
into
mov
xchg
out
or
jne
cltd
fwait
movsb
mov
incl
mov
lahf
cld
addr16
jb
sub
push
lret
jns
ret
mov
mov
mov
push
push
push
mov
enter
mov
push
xor
cmpsb
and
imul
jbe
push
or
jns
jl
popf
xor
dec
mov
gs
jge
jecxz
inc
idiv
mov
js
aad
stos
fisubrl
jg
jl
inc
outsl
rcll
out
loopne
xor
xlat
ret
stos
sub
lret
sub
mov
cmp
mov
dec
cmp
stos
dec
hlt
push
mov
in
jge
mov
sub
add
out
xor
or
dec
jnp
cmp
lcall
in
lcall
stc
jge
mov
in
rorb
cmp
andl
adc
sti
imul
rcll
xor
into
xchg
daa
cli
test
int
negb
ret
lret
jecxz
xchg
hlt
pusha
insb
pop
sub
ret
jg
xchg
rorb
stos
jb
pop
pop
push
cmc
sub
push
dec
shrl
mov
out
push
hlt
leave
rdmsr
out
test
movsl
dec
testl
pop
cmp
sbb
and
push
xchg
push
orb
or
sbb
pop
test
das
mov
je
hlt
sbb
flds
test
mov
leave
push
sub
scas
xchg
xchg
sbb
in
pushl
and
movsl
in
cwtl
inc
pushf
adc
lea
inc
pop
mov
fcmove
sbb
inc
cmp
fwait
or
cmp
push
inc
aaa
adc
fistps
xchg
or
jne
in
jp
fidivl
inc
mov
pop
mov
int3
pop
dec
sub
lods
or
pop
mov
jp
adc
sarl
jb
and
sbb
jp
add
imul
gs
inc
push
cld
int
jl
mov
cld
sbb
stos
xchg
pop
xlat
iret
clc
or
addr16
loop
mov
stos
bound
push
pop
lock
xchg
push
inc
xor
fwait
bound
sub
jbe
sbb
xor
mov
jne
push
pop
add
test
push
xor
outsl
or
dec
pop
aas
or
movsb
fimull
sbb
xor
leave
mov
je
sarl
push
dec
cmc
rcrl
sub
in
dec
xor
inc
xchg
out
push
out
or
rcl
cwtl
stc
add
lret
movsl
pusha
inc
adc
mov
mov
mov
fstl
xor
repnz
inc
or
fistpll
jp
cmp
push
cmp
cmpsb
aam
enter
addr16
cs
rcl
addr16
add
xor
adc
jb
mov
mov
push
fcompp
icebp
mov
inc
adc
pushf
imul
stos
adc
push
incl
sub
xor
dec
adc
ljmp
inc
sbb
into
pop
lcall
xor
mov
cmp
jmp
jae
pop
push
dec
lock
adc
aam
mov
sbb
out
rclb
mov
push
xor
fldenv
sbb
or
lahf
dec
andl
inc
cld
es
mov
jo
mov
addb
sti
sbb
jmp
cmpsb
cmc
xor
push
pop
icebp
shr
rclb
push
aaa
mov
cmp
sub
ret
cmp
jae
js
popa
scas
sbb
jp
fnstenv
mov
lret
lret
fsubs
inc
int3
loopne
fldenv
mov
or
les
out
jbe
sub
int
mov
xchg
das
dec
pop
dec
les
ljmp
and
shr
aaa
add
int3
mov
pop
and
roll
lock
sbb
and
and
cli
out
fwait
stos
cmp
push
out
ja
and
cmp
mov
shlb
cmc
inc
mov
rorl
xchg
or
pop
imul
push
popf
adc
rcrl
aam
add
xorl
cmpsl
xor
sub
and
mov
ja
es
sti
outsb
push
or
dec
subl
sub
push
xchg
lcall
leave
mov
mov
into
aad
ss
scas
dec
fidivrs
xor
in
ret
mov
add
xlat
cmp
pop
mov
push
xchg
sub
addr16
adc
fcompl
ljmp
call
lods
icebp
cmc
fsub
enter
cltd
out
mov
xchg
stos
push
icebp
push
shll
int3
mov
in
repz
add
inc
lds
sbb
add
repz
cmp
popf
out
es
das
or
or
loop
and
arpl
insb
dec
icebp
sbbb
popl
push
and
pop
or
jne
or
push
mov
cmpl
sbb
lahf
test
hlt
mov
sti
push
cmp
mov
sub
push
xor
push
jecxz
ljmp
xlat
mov
xchg
lret
out
cwtl
les
sub
push
push
ss
sub
clc
lret
jecxz
mov
in
xlat
xchg
clc
inc
xchg
insb
jae
outsl
mov
dec
and
pop
push
adc
jg
xchg
sub
add
jbe
pop
aam
sub
lods
rcll
or
push
sbb
lea
mov
nop
jnp
int
rcl
pop
push
jg
jo
mov
mov
pop
aaa
and
fmull
aas
sub
shrl
mov
mov
scas
adc
mov
mov
rcr
mov
imul
outsb
xor
mov
sbb
rcrb
cmpb
push
popa
sbb
shlb
les
notl
xor
pop
fs
push
aam
icebp
sbb
pop
push
cmp
imul
cmp
mov
mov
in
jmp
pusha
je
int
sbb
or
mov
out
es
repnz
lret
fs
or
xchg
stos
cmpsb
push
cmp
in
sbb
cmp
push
xchg
sbb
inc
mov
pop
dec
cmp
dec
or
mov
adc
dec
ret
insl
lods
inc
xchg
js
in
in
push
mov
adc
xor
sahf
aaa
dec
fdivs
mov
push
xor
xor
notb
mov
mov
int
sub
mov
stos
fstpl
cs
mov
jb
inc
and
mov
repz
xchg
xor
xor
pop
push
or
ss
pop
or
jbe
xor
imul
add
push
lret
dec
in
jge
push
lods
imul
mov
xor
call
faddl
cli
and
adc
in
jle
into
adc
out
mov
sbb
dec
incl
jae
sub
nop
push
cmovo
and
lcall
or
add
or
rcrl
sub
sarb
fs
adc
shll
mov
in
mov
icebp
mov
xacquire
mov
cwtl
test
push
mov
out
and
mov
or
fwait
and
mov
adc
cld
mov
fmull
and
xchg
sbb
lret
inc
and
xchg
loope
xchg
fildl
push
sub
and
cmp
popa
pop
pop
pop
mov
js
cltd
lock
xchg
mov
add
fsubrl
pop
enter
pop
push
mov
pop
in
mov
sar
sbb
sbb
xor
jg
bound
xor
xor
into
and
pop
add
mov
fadd
fcompl
pop
ljmp
jbe
sbbl
leave
sub
jle
in
push
fsubr
adc
add
adc
mov
push
mov
faddl
inc
inc
xlat
mov
jg
adc
pop
call
dec
lahf
setbe
cli
lahf
test
arpl
int
fsubp
jo
iret
daa
ret
data16
mov
andb
dec
add
fnstenv
jg
pop
inc
jle
andl
pop
and
dec
mov
push
iret
adc
arpl
dec
cmp
or
popf
cli
cld
mov
pop
out
xchg
subl
lea
testl
call
push
das
push
sbb
scas
and
lods
pop
hlt
push
mov
pop
xchg
mov
sti
sub
cmc
xor
push
jp
push
dec
pushf
mov
hlt
popf
out
or
aad
cmc
aaa
xchg
pop
test
outsb
push
std
push
and
jne
push
pusha
aad
inc
inc
imul
pop
int3
inc
xchg
adc
dec
sbb
inc
adc
jecxz
fmulp
es
es
or
sarb
inc
scas
bound
insl
lret
jecxz
testb
cmp
pop
xchg
in
jnp
je
int3
pop
mov
movsb
fld
jmp
mov
jp
aas
insb
mov
leave
add
mov
mov
ret
scas
cmpsb
cmpsl
xlat
and
sbb
add
shlb
mov
fxam
stc
cmpsl
mov
and
mov
das
call
pop
imul
int3
nop
stos
sbb
enter
xchg
sub
xchg
cld
imull
lcall
mov
loopne
out
or
add
mov
sbb
es
sub
xchg
lods
cmp
pop
jmp
inc
adc
jbe
sbb
cli
stos
bswap
adc
movl
and
adc
mov
push
out
inc
mov
mov
pop
stos
icebp
ror
dec
int3
adc
sbb
negb
enter
fists
icebp
inc
mov
sub
mov
mov
jo
sub
jae
movsb
mov
jb
and
aam
andb
pop
xchg
and
jg
imul
icebp
xor
add
in
aaa
mov
cmp
in
dec
cltd
hlt
push
pop
mov
inc
pop
icebp
and
arpl
mov
adc
pop
dec
repz
push
inc
sbb
dec
add
mov
or
or
mov
dec
pop
int3
pop
leave
cmpsl
rcl
adc
xchg
enter
mov
sahf
scas
adc
out
adc
push
pop
cmpsb
fwait
jns
bound
pop
in
push
push
dec
rcrb
insb
jo
loope
pop
and
in
jg
jae
cltd
jecxz
adc
sub
sub
rcll
data16
pop
xor
xor
lret
mov
adc
aas
cmpsl
out
sbb
xchg
jbe
fdivs
ja
xor
cld
cwtl
in
pop
lds
les
pop
jae
std
xchg
mov
mov
fimull
adc
dec
cmp
sub
scas
mov
test
xchg
cli
divl
call
ror
outsl
mov
ljmp
mov
adc
insb
inc
add
xchg
push
divb
stos
or
dec
icebp
aam
lods
sbb
imul
call
std
or
inc
fiaddl
sbb
add
movsl
decb
xchg
int
or
xchg
mov
or
or
mov
sarl
je
inc
divl
cmpsb
sar
adc
das
rcrb
jns
rcll
dec
push
idiv
mov
mov
insl
mov
pop
jle
icebp
push
mov
int
and
bound
fidivl
outsl
cmc
imul
and
mov
cmpsb
cmp
xor
test
jbe
js
or
xchg
cwtl
loopne
ret
push
sub
sbb
jns
aas
test
or
mov
in
mov
cmpsb
pop
icebp
call
fucomi
idiv
add
jg
movsl
je
xchg
fs
jne
sbb
or
aas
cld
and
inc
je
jp
push
ficompl
rol
test
ja
gs
mov
add
adc
fstl
sarl
call
mov
xchg
lcall
adc
xlat
jns
xor
or
jae
pop
xlat
cltd
test
bnd
sub
ljmp
mul
sub
in
push
cmp
data16
or
les
push
iret
sahf
shl
cmp
and
icebp
xor
popf
je
sbb
in
mov
fcoml
decl
mov
jmp
jno
and
jnp
lods
pop
add
out
jg
imul
ret
sub
sahf
lret
jne
sar
mov
scas
push
lret
mov
sub
in
sti
popa
and
out
fimuls
test
sub
push
out
flds
enter
adc
xlat
mov
xchg
cmp
mov
lcall
negl
stc
imul
fadd
mov
xchg
mov
lods
mov
jp
add
in
sarl
mov
push
xchg
and
mov
add
rolb
pop
fcmovu
xor
shl
dec
adc
xchg
pop
sahf
pushf
push
mov
or
mov
movsb
adc
pop
and
aad
cmp
xorl
ja
test
scas
dec
sub
xlat
pop
lahf
fstl
sti
xchg
or
ja
repz
daa
sub
mov
pop
jp
sub
lret
mov
test
push
aas
stc
xorb
in
jmp
mov
fcomip
dec
fidivs
popw
jle
xchg
mov
rolb
loop
add
pop
movsb
lcall
xor
sbb
add
add
aaa
insl
push
sahf
loop
dec
les
sti
popf
fstpl
or
data16
sub
pop
call
dec
das
stos
in
jmp
cmp
and
mov
fbstp
aas
or
cmc
sbbb
test
mov
jg
mov
sub
mov
jg
test
movsl
cwtl
movl
dec
xor
add
and
daa
lret
jnp
cmpsb
fisubl
mov
or
je
inc
testb
ss
mov
in
push
add
push
push
jecxz
movsb
ret
test
lods
in
test
jns
pushf
jle
fstpl
mov
dec
leave
mov
sub
insb
inc
xor
jb
and
pop
adc
jp
test
adc
outsl
mov
pushf
in
aam
ret
mov
fldcw
add
arpl
int
sarb
lods
cmp
ret
dec
cltd
mov
in
push
movsb
or
popf
mov
mov
mov
ffreep
test
dec
or
mov
cmp
xchg
xchg
sub
xchg
fsubrs
lods
cmp
xor
adc
cmp
dec
ret
imul
pop
js
mov
inc
out
jns
dec
stos
xchg
loopne
lock
mov
call
dec
push
jne
sti
aaa
aad
lods
out
test
add
imul
leave
adc
faddl
in
cmp
hlt
outsl
fisubs
add
call
cmp
dec
inc
je
fcoml
scas
popa
jb
and
in
push
in
filds
and
scas
xlat
jmp
xor
pop
js
mov
jg
jg
fdivrs
cmpsb
fsubrp
test
mov
test
insl
cmp
dec
xor
ret
test
inc
or
adc
push
pop
push
and
jns
aas
out
test
cmp
dec
jne
dec
cli
xchg
jp
or
popa
inc
fsub
pop
pop
inc
pop
jp
fnstenv
ret
mov
insb
add
inc
ljmp
shrb
mov
push
es
and
imul
ret
into
cli
lret
and
es
lahf
les
push
loopne
insl
cmpsb
sub
mov
and
test
jecxz
stc
xchg
cmp
cmpsl
lea
add
pop
add
bound
scas
sbb
mov
xor
inc
mov
xchg
dec
and
nop
call
and
in
xor
add
jp
and
push
jmp
sarl
sbb
sbb
dec
shll
inc
divb
sbbb
adc
andb
jno
or
jg
insl
inc
mov
push
pop
rol
push
paddusb
filds
scas
mov
adc
popf
sbb
push
dec
xchg
sbb
mov
dec
or
lock
popf
mov
inc
test
repnz
pop
pop
inc
push
xor
mov
mov
cmp
mov
xor
out
neg
xchg
push
test
out
fcmovbe
or
jnp
sbb
xor
adc
cmovl
jo
jge
sub
in
fmuls
inc
or
jno
jle
mov
adcb
add
or
add
xlat
mov
insl
movsl
lock
or
fistps
scas
xchg
jle
mov
fs
mov
sub
bound
push
xorl
jle
dec
bound
jmp
cmp
leavew
jns
scas
test
cmpsb
enter
xor
shlb
adc
fldl
dec
ret
jnp
mov
push
in
add
and
roll
dec
testl
addb
mov
pop
ds
mov
jecxz
cs
mov
mov
mov
jne
cwtl
loop
repz
ss
cmpsb
insl
sub
cld
arpl
out
loop
xchg
negl
mov
stos
inc
bound
mov
and
and
fnstenv
xor
mov
lcall
and
cwtl
push
add
cld
inc
inc
roll
lea
inc
lahf
outsl
lahf
mov
into
dec
xor
in
sbb
dec
inc
push
jp
adc
adc
add
jp
rorl
pusha
push
loop
add
mov
aam
sbb
pop
testb
fdiv
in
aad
das
stos
mov
mov
loop
pop
and
xchg
xchg
mov
cld
in
loop
movsb
decb
mov
clc
adcl
mov
pop
inc
scas
out
sub
call
pop
stos
jp
nop
and
adc
enter
pop
orl
sbb
pop
lods
add
adc
mov
sbb
fcmove
xor
leave
or
mov
jg
push
cmpsl
mov
pop
push
outsl
test
test
imul
xor
outsl
sub
adc
adc
leave
mov
mov
jmp
in
mov
cmp
out
mov
fsubrp
fucom
lods
iret
push
push
pop
aad
inc
mov
cmp
rcl
test
gs
xchg
mov
cmp
pop
xor
adc
icebp
or
mov
xor
sub
scas
jae
mov
jge
jo
pop
sub
mov
pop
imul
lret
and
test
sbb
movsl
imul
xchg
jae
jne
adc
ret
push
xchg
mov
xchg
mov
stos
or
cmp
cmc
sub
push
push
fisubrs
pop
dec
scas
out
jbe
pop
popf
mov
testb
pop
sub
cmp
fisttpll
lods
inc
scas
push
int3
mov
mov
dec
push
cwtl
pop
leave
arpl
push
scas
xor
jno
jb
mov
js
loopne
ljmp
fldcw
dec
dec
int
hlt
popf
negb
movsl
jmp
or
inc
sar
stos
cmp
ljmp
in
bound
test
dec
mov
movsb
xchg
out
add
inc
mov
ss
push
mov
ficoms
push
int3
sarb
repz
cmp
cmc
inc
xor
jb
shl
scas
mov
mov
dec
cmp
nop
movsl
out
jl
push
mov
cltd
add
pop
push
loop
dec
add
cmp
dec
shl
in
hlt
and
imul
popf
out
jmp
sbb
movsb
xor
les
xor
mov
dec
scas
shl
add
test
mov
inc
lock
pop
and
or
aad
sbb
icebp
inc
push
sbb
jns
test
xchg
ja
mov
ror
cmc
xchg
stos
loop
xor
loope,pn
push
xchg
je
jae
sbb
cmpsl
mov
xchg
cmp
nop
push
push
xchg
aaa
in
stos
jno
dec
test
pop
pop
sbb
in
orb
std
add
out
mov
xchg
lds
jbe
jb
daa
dec
std
inc
lret
push
out
stos
lahf
sbb
or
inc
loopne
and
or
es
cld
in
or
sbb
sahf
mov
jno
data16
xor
mov
push
dec
add
push
movsl
jg
jmp
pop
test
mov
cmc
lods
adcb
popa
jbe
data16
sbb
push
insl
sbb
xchg
xlat
stos
xor
xchg
add
sahf
inc
leave
xor
push
pop
or
pushf
popa
aad
inc
add
mov
loopne
cmp
dec
pushl
mov
xor
xor
icebp
jecxz
mov
pop
imul
test
leave
std
cmp
sub
push
pop
sub
sbb
movsb
xor
mov
dec
push
loop
cmp
push
or
nop
scas
fadds
stac
out
scas
inc
popa
jmp
mov
dec
push
jp
jg
mov
fdivr
or
je
mov
dec
jbe
or
lcall
aas
outsl
sub
or
repz
inc
sarb
fists
xchg
fimuls
adc
insb
pop
cmpb
jle
decl
mov
add
inc
inc
jl
dec
in
idivb
dec
mov
and
dec
stc
mov
inc
mov
jmp
xchg
mov
hlt
push
pop
jmp
dec
roll
fildll
mov
dec
subb
insl
push
push
dec
and
jle
add
sbb
mov
nop
cmp
jae
orl
lcall
je
cld
dec
add
dec
repnz
push
dec
fwait
lahf
outsl
xbegin
leave
js
pop
mov
pop
cmc
outsb
repz
push
lock
mov
inc
sarl
cs
jno,pt
sbb
movsl
or
mov
fnstenv
or
push
jo
fcmovbe
xor
mov
adc
jge
or
int
pop
loop
add
popa
enter
xchg
pop
inc
push
jb
pop
scas
dec
jne
and
roll
cli
ficompl
mov
pop
jne
mov
fidivrl
cmp
mov
repnz
and
cltd
imul
xor
js
push
mov
or
jle
adc
push
movsl
in
test
fs
int3
lods
movsb
jb
add
scas
fadds
notl
fnstenv
loope
popf
outsl
inc
cmp
out
lret
sub
inc
push
ja
push
mov
mov
push
das
add
sbb
out
adc
add
out
mov
jp
jle,pn
aaa
adc
xor
movsl
cmp
int3
mov
and
rol
shl
rolb
in
cmp
repz
aaa
jl
and
mov
mov
fidivs
lds
mov
xor
jp
loope
loop
dec
mov
xchg
lock
nop
push
inc
jo
call
mov
push
lret
pop
jecxz
ja
data16
imul
adc
stos
jnp
lds
xchg
push
mov
lret
fcomps
inc
sbb
xor
out
fcompl
insb
repnz
mov
stc
push
adc
add
fadd
lea
out
test
aad
add
mov
cmp
scas
lret
dec
xchg
xchg
sub
loopne
mov
scas
inc
cmpsb
push
loope
shll
pusha
lea
mov
popa
rcll
mov
mov
psubb
lret
aam
lcall
sbb
outsl
ret
pop
push
cmp
jo
cli
pop
push
fsubl
xlat
ja
fcomip
cmp
mov
dec
icebp
mov
add
pushf
aam
mov
dec
mov
test
cwtl
pop
ss
shl
push
mov
stc
popa
xlat
push
adc
es
stos
mov
cwtl
and
loop
mov
xchg
jg
imul
lcall
mov
mulb
pop
ss
out
jl
sbb
dec
xchg
aas
and
ds
imul
ds
xor
adc
fcmovbe
scas
in
or
pop
je
jecxz
pusha
fisubs
pusha
repz
push
mov
cmpsb
mov
jo
adc
lds
sub
xor
jg
stc
ret
inc
add
inc
cs
sub
lret
mov
dec
repz
lods
sub
mov
jge
clc
ret
pop
test
mov
push
shrb
insb
es
mov
sbb
jmp
sbb
pop
push
inc
dec
mov
imul
pop
mov
or
dec
dec
pop
pusha
xchg
jmp
sub
add
xchg
das
jmp
cltd
push
repnz
dec
fcompl
cmp
lock
lahf
inc
aas
clc
mov
icebp
mov
adc
jp
into
ret
and
lods
stc
outsl
cmp
jb
pop
lret
out
les
inc
out
xchg
ja
mov
or
cwtl
xor
rcrb
mov
ret
aas
pop
and
mov
inc
vpavgb
pop
xchg
or
cs
aad
jo
aaa
test
mov
mov
addb
add
push
push
iret
stc
test
aas
fstpl
ret
adc
or
mov
pop
push
xor
je
mov
shlb
daa
xchg
xchg
loop
ret
out
mov
pop
fnstsw
pop
jge
xor
cmpsb
jp
sbb
adc
adc
lcall
dec
inc
mov
sbb
out
pop
push
clc
adc
jbe
fsubp
xchg
pusha
std
lea
popa
or
imul
les
pop
arpl
push
out
xchg
leave
scas
cmp
ret
sbbl
inc
inc
fs
mov
ret
jns
jno
repz
shlb
popf
jp
iret
je
gs
js
mov
and
addr16
lcall
sub
jb
pusha
stos
cmp
popf
and
fs
adc
jbe
aas
enter
in
mov
mov
sar
push
lret
out
ljmp
bswap
xor
shlb
cmp
push
mov
pop
dec
arpl
out
out
dec
add
dec
mov
clc
dec
dec
xchg
add
mov
imul
sub
faddl
pop
iret
es
xlat
ret
xor
sti
sti
sub
ljmp
pop
ss
rorl
and
push
cmpsl
xchg
and
pop
arpl
cmp
xchg
mov
push
sar
pop
and
pop
add
xchg
jnp
imul
fstl
dec
xlat
pop
mov
xorb
mov
inc
mov
mov
push
sbbb
cli
repz
in
mov
adc
sbb
mov
push
in
add
mov
adc
ss
gs
xor
in
xchg
call
daa
mov
outsl
jle
inc
hlt
xlat
out
cmp
cmpb
and
jle
xchg
mov
fdivrs
xchg
out
sbb
mov
jl
lds
lret
mov
fadds
dec
testb
pop
scas
ljmp
xchg
cwtl
mulb
push
sbb
jbe
inc
push
stc
mov
mov
pop
mov
adc
insl
sub
mov
fldcw
leave
dec
ja
push
jo
jbe
mov
hlt
enter
addl
int3
test
dec
mov
insl
push
stos
shl
mov
movsb
xchg
cmpsl
dec
push
dec
andl
flds
lds
or
cmp
stos
adc
sbb
inc
test
push
sbb
out
sarb
push
rcrl
jnp
fidivrs
xchg
lcall
mov
pushf
scas
push
jp
cmpsl
aam
push
test
fimuls
lcall
xchg
push
testl
mov
cmp
sbb
loopne
gs
jl
mov
es
sbb
aaa
xchg
mov
mov
lock
fucom
mov
mov
xor
cmp
cmpsb
inc
mov
iret
ja
xlat
push
fstps
xchg
aaa
insl
inc
aam
pop
gs
shll
popf
cmp
sub
shll
inc
popa
pop
xchg
loope
push
or
sub
in
sahf
xchg
out
popf
lret
insb
dec
popf
add
fisttpll
cmp
aas
lods
push
fbld
sbb
sbb
aas
inc
cmp
mov
dec
cmpsl
push
pop
dec
jmp
int3
ja
or
adc
rclb
mov
cmp
popa
sbb
xor
int3
sub
adc
jmp
mov
stc
sbb
clc
shlb
sub
xchg
push
add
mov
mov
lods
mov
mov
and
ret
std
add
jnp
rcl
xchg
ja
test
loope
mov
xchg
outsb
mov
push
sub
outsl
mov
jge
mov
push
xor
pop
es
in
ds
and
aas
or
sub
out
push
mov
push
pop
ss
pushf
adc
call
pushf
jmp
cwtl
inc
mov
jnp
and
mov
inc
out
fisubl
mov
bound
and
and
mov
xor
mov
sbb
push
dec
test
icebp
movsl
aam
adc
test
ljmp
call
jle
out
add
fcom
add
adc
inc
fdivrs
xchg
xchg
jns
push
in
imul
cmp
daa
popaw
xchg
jmp
sbb
dec
jp
sbb
jecxz
fwait
and
fcoms
fwait
data16
dec
aas
or
and
dec
mov
notl
and
jmp
sbbb
je
hlt
or
sbb
out
mov
add
into
in
fisubs
test
push
sbb
shll
xchg
rolb
jecxz
cs
sbb
push
mov
call
sub
dec
enter
mov
fiadds
xchg
and
or
mov
push
push
test
in
cs
popl
repz
sbb
push
hlt
cmp
mov
fstpt
sbb
lods
adc
lods
xorb
lods
add
shrl
repnz
sub
inc
mov
and
and
jo
cmp
cmpsl
pop
out
out
push
xchg
adc
push
jae
mov
icebp
test
hlt
xchg
mov
xchg
push
andl
xor
loope
mov
dec
cmp
mov
mov
push
push
push
repz
jg
jno
inc
push
dec
fidivl
sub
cld
push
mov
jecxz
sbb
xor
inc
shl
popf
loop
and
iret
xchg
lds
and
stos
js
loop
movsl
repz
jmp
in
into
cmc
mov
popf
popa
lock
std
push
cwtl
rcrb
add
jge
mov
jge
out
sahf
enter
fs
jo
cld
dec
inc
jmp
cmp
mov
fists
fucom
push
push
and
ss
addr16
pushf
sti
push
mov
es
jecxz
mov
scas
xor
popw
sti
fnstsw
sbb
sub
sbb
adc
jp
sti
sti
faddl
imul
out
sti
daa
cmpsb
pusha
push
int
sbb
push
sub
xchg
mov
xchg
inc
mov
loope
jae
scas
arpl
adc
sbb
fs
aas
fs
test
mov
jl
jb
movsb
loop
lret
sub
sbbb
sbb
jae
lea
push
jmp
sub
jle
add
xchg
movsb
or
bound
xor
mov
pop
aam
mov
fildll
lcall
dec
insb
fs
and
xchg
mov
and
jmp
inc
ds
shlb
and
std
lret
lcall
sarb
xchg
loop
cmp
insb
jmp
gs
jne
xchg
xor
sub
add
mov
iret
out
pushf
xchg
mov
and
xchg
aaa
mov
fwait
repnz
sub
xchg
and
push
cs
adc
imul
mov
bound
lahf
xor
gs
and
mov
xchg
jmp
lea
popf
or
xchg
mov
aaa
popa
popf
divl
outsl
jge
mov
bnd
fstpl
dec
mov
sbb
data16
push
adc
xchg
fsubs
xchg
cltd
jne
clc
mov
fidivl
jo
adc
inc
jmp
in
nop
mov
dec
lahf
popa
adc
xchg
pop
push
stos
sub
mov
push
mov
mov
dec
jecxz
xchg
and
pop
pop
out
mov
dec
adc
or
xor
movsl
lock
testl
rcl
jecxz,pn
xchg
stos
shlb
out
xchg
and
repnz
xchg
movsl
movsb
sub
jo
dec
sub
in
mov
test
sub
jo
xor
es
mov
cmp
je
and
pop
fcmovu
or
add
mov
and
adc
dec
inc
imul
rclb
je
sbb
cmp
cmp
xor
loop
add
mov
xor
fisttpl
ss
jb
xlat
addr16
mov
dec
cmc
enter
sbb
pop
mov
push
adc
jns
mov
addb
xchg
and
adc
stc
pop
adc
jno
lret
cmp
pop
pop
in
leave
jnp
sub
add
dec
and
mov
mov
sbbl
fisubl
daa
adcl
mov
stos
cli
sbb
cmc
loope
rcr
xchg
test
dec
insl
add
push
lret
sub
shlb
leave
push
push
cmp
mov
jg
repnz
movsb
lahf
ljmp
rcrb
fwait
notb
cmpsl
pop
mov
das
nop
andl
inc
mov
inc
fadd
xor
mov
push
cmpb
lea
lcall
insl
or
insb
sub
sbb
jp
push
imul
arpl
push
add
daa
lock
sub
dec
or
jle
mov
jns
or
push
in
adc
jne
jecxz
ds
push
jmp
cmpsb
cmpsb
mov
mov
cmp
or
and
dec
int
test
jb
outsb
rcr
imul
inc
test
mov
test
add
dec
bound
scas
imul
lahf
in
mov
xor
or
test
out
pusha
mov
cltd
cmp
cli
nop
or
add
fs
sbb
jb
push
aad
sub
jae
push
mov
ret
lret
pop
fistl
sarb
mov
inc
adcl
popa
inc
pop
je
push
shrl
cmp
sub
subb
les
mov
std
sbb
fsubr
mov
xor
inc
cmpsb
jae
hlt
arpl
push
hlt
fidivrl
bound
pop
and
xlat
cmp
adc
jmp
push
call
aad
mov
es
mov
lock
int
scas
jl
jp
adcb
xor
sbb
lret
or
dec
inc
and
xor
ds
in
dec
in
xchg
lcall
into
xchg
jge
nop
dec
adc
xor
add
stc
dec
mov
push
jns,pt
fmull
leave
xor
xor
sbbb
add
ret
daa
hlt
js
xchg
push
loop
push
ds
xchg
inc
xchg
das
xchg
inc
dec
jecxz
mov
jmp
or
cmpsl
aas
adc
mov
rorl
xor
mov
ret
adc
outsb
iret
pushf
outsb
movsl
mov
incb
pop
sbb
std
add
fs
pop
xor
mov
jmp
xchg
push
pop
jp
xor
in
dec
dec
stc
repz
or
jbe
mov
and
repz
adc
mov
dec
sbb
xor
insl
cli
iret
xlat
xor
sti
mov
pop
pop
jnp
mov
imul
insb
pop
dec
adc
add
cmp
fs
xchg
arpl
mov
cmp
test
inc
pop
pop
.byte
and
ret
cwtl
add
lea
push
popa
decb
xor
push
push
int3
mov
lods
int
xchg
ja
sbb
mov
scas
ret
out
mov
lds
mov
cld
out
pop
gs
lods
movb
adc
sbb
mov
scas
add
add
addr16
arpl
jp
xorl
sbb
imul
push
mov
lcall
icebp
leave
cld
das
test
sar
sbb
cwtl
sbb
pusha
cwtl
push
nop
pop
mov
roll
aaa
iret
mov
les
push
sbb
xor
adc
add
mov
sbb
in
cmpsl
ja
jb
insl
mov
dec
jmp
out
push
lock
inc
int
sub
dec
stos
mov
add
sbb
jmp
je
or
sbb
push
pop
lret
ljmp
add
subl
push
push
jnp
lea
fs
insb
cmc
mov
adc
mov
push
aad
mov
jns
imul
imul
adc
iret
outsl
dec
inc
test
xchg
adc
mov
mov
test
scas
fbstp
mov
jne
ja
add
arpl
ljmp
xor
scas
adc
xchg
mov
pusha
repnz
data16
mulb
jle
hlt
lahf
ljmp
stc
std
jmp
mov
jns
add
or
push
push
scas
pop
shlb
add
inc
test
shl
call
repnz
insl
xchg
test
aam
xchg
mov
adc
bnd
jecxz
or
push
pop
xchg
inc
jg
stos
scas
sbb
cwtl
or
cmp
je
cld
add
in
mov
and
gs
imul
das
inc
das
arpl
mov
mov
jns
mov
lahf
sub
pop
lret
scas
xlat
lret
loope
dec
lods
xor
loope
rorb
call
cs
outsb
jecxz
lahf
lods
stos
aaa
pop
mov
outsb
cmp
xadd
adc
sbb
and
mov
sub
pop
push
sbb
int3
fimull
push
jl
inc
jnp
jnp
mov
xor
push
push
push
mov
shlb
stc
ds
or
repz
cmp
in
sbb
jnp
test
sahf
and
ret
or
pop
push
leave
test
out
out
add
pusha
adc
scas
xor
mov
pop
lds
cmp
sbb
push
fldt
loop
or
call
pusha
fstps
or
lock
lods
addb
aam
lods
cli
sarl
jne
add
lds
iret
push
popa
jmp
repz
dec
out
mov
mov
loope
xchg
cs
jp
insl
das
mov
enter
fstpl
outsl
test
pop
xor
push
cmp
mov
xor
sub
pop
pop
lcall
std
std
and
idivb
pusha
push
xor
mov
test
push
mov
pop
push
popf
lds
mov
loope
dec
fnstcw
fucomip
imul
int
inc
arpl
sbb
sub
repnz
cltd
xor
icebp
sub
negl
in
push
push
and
jmp
inc
adc
popa
stc
cli
or
push
mov
xor
mov
loopne
outsb
les
mov
mov
fildll
xor
into
and
add
bound
adc
shrl
jp
jp
subb
addb
mov
test
mov
outsl
mov
enter
cmp
imul
xor
cmp
adc
in
xchg
or
adc
mov
int3
adcb
dec
adc
mov
divl
iret
cmp
dec
sbb
inc
movsb
push
mov
dec
call
xlat
mov
shrl
fdivr
push
ss
sbb
sbb
jb
pop
imulb
popa
fstps
fnsave
dec
xchg
cli
lods
push
adc
test
xor
sub
addl
sub
jo
loopne
jle
cmp
cmpsb
stos
enter
ss
add
int3
ret
and
mov
loop
jae
in
stos
xchg
sub
mov
pop
add
push
pop
test
xchg
stos
add
daa
jmp
jnp
das
add
repnz
mov
stos
add
fisubrl
in
push
adc
test
push
dec
inc
sbb
jns
xchg
pop
gs
fdiv
mov
mov
and
adc
mov
test
mov
xor
fldcw
sub
fisttpl
inc
xlat
mov
ret
insl
dec
mov
rorb
fistpl
cmp
mov
loop
or
xorb
fsubr
scas
fmul
adc
xlat
adc
cmp
hlt
in
in
pop
cmp
cwtl
test
aad
cmp
pop
adc
icebp
adc
mov
outsl
and
mov
test
nop
mov
inc
addl
fisubrl
outsb
cwtl
xor
out
xchg
inc
movsb
es
rolb
jnp
je
fdivs
mov
pop
adc
std
cmp
aad
push
shl
mov
sub
in
mov
mov
test
sub
sub
negl
test
arpl
das
inc
loop
lds
xchg
mov
cwtl
or
mov
movsl
adc
div
repz
test
sbb
inc
push
fwait
ss
xlat
sahf
xchg
inc
fistl
cli
movsb
mov
lret
into
dec
mov
push
add
nop
jle
cltd
cmp
pop
clc
push
test
mov
mov
jg
add
cwtl
arpl
outsl
nop
sub
jo
mov
mov
loopne
pop
aad
lds
insl
lcall
aas
pop
outsl
loopne
xchg
das
addr16
in
lods
test
fisubs
mov
shrl
inc
xlat
cmc
sub
push
xor
cmpsb
push
xchg
les
cmp
and
jge
out
jle
leave
inc
sub
push
sbb
js
or
test
jae
std
iret
das
bound
jne
jp
or
enter
jge
xor
pop
push
jmp
or
cmp
push
andb
lods
cmp
leave
mov
arpl
rcrb
jno
mov
nop
inc
je
rclb
pop
add
and
xor
movsl
mov
repnz
mov
test
mov
movsb
flds
jp
cmp
cltd
pusha
push
sub
jne
mov
cmp
fnsave
cli
lret
test
arpl
mov
jo
push
call
and
dec
xor
insb
in
mov
adc
lds
dec
enter
sub
inc
add
xor
cmp
or
std
jg
loope
das
and
insb
pop
rclb
jno
or
leave
mov
jns
mov
insb
pop
adc
mov
add
mov
rcrb
daa
adc
sub
pop
sbb
enter
sbb
jnp
cmpsb
dec
inc
adc
in
mov
cmp
inc
pushw
and
fsubs
push
fs
gs
pop
push
stos
in
ret
pop
xor
ror
mov
loopne
add
mov
jmp
jecxz
or
dec
test
stos
mov
or
inc
mov
aam
fdivrl
out
adc
popf
enter
aas
sub
sbb
shll
xchg
mov
sub
loopne
sahf
mov
lea
add
add
push
mov
dec
frstor
mov
mov
xorl
mov
xor
pop
and
add
sti
js
push
cltd
loopne
test
pop
mov
mov
and
pusha
xchg
addr16
fistps
cmpsb
xchg
jp
icebp
jl
ds
mov
test
lea
into
mov
mov
fwait
adc
insb
in
cli
sub
mov
sbb
fdivl
rol
sbb
jno
hlt
jb
jmp
mov
or
out
das
jae
popf
loop
push
cmp
pop
hlt
in
xor
aaa
pusha
adc
cmp
or
sbb
dec
lahf
lods
and
xor
jp
lods
push
pop
push
and
jns
cmp
cmp
stos
mov
xor
mov
repz
jnp
xor
jmp
clc
cltd
js
sarb
xor
rclb
jmp
into
mov
std
cld
or
ss
jp
push
leave
cmp
push
inc
rcl
ffreep
mov
mov
jnp
or
pop
rolb
mov
je
xor
lea
outsb
pusha
dec
mull
push
fistl
xchg
jecxz
push
aas
adc
addr16
fcmovnb
lock
cmp
xchg
es
aam
push
daa
notb
ja
pop
pop
cmp
imul
sbb
jnp
hlt
imul
sarl
xlat
cmp
addl
push
or
jne
pop
push
fcomps
pop
bound
xor
dec
dec
lret
lret
lret
out
es
inc
mov
cwtl
aad
dec
mov
mov
inc
outsb
pop
cmp
popf
jmp
xor
push
gs
xchg
push
cmp
fwait
inc
sub
cmc
int
std
cmp
pop
sti
adc
xlat
sarl
mov
insb
xchg
rcr
das
push
xchg
fiadds
int
jecxz
insb
push
scas
mov
dec
adc
inc
push
jae
inc
add
inc
ror
pop
test
outsl
adc
test
xor
adc
aaa
rcll
aas
adc
dec
pop
pop
push
jo
xor
stc
insl
ror
pop
add
inc
xchg
add
test
dec
and
lock
xchg
cmp
inc
mov
pop
pop
cld
pop
xchg
shlb
push
jmp
test
mov
lcall
pop
lods
mov
sbb
stc
jno
sub
mov
sub
daa
and
sahf
xchg
in
mov
mov
add
mov
imul
scas
mov
mov
data16
lods
mov
pop
xor
out
sub
adc
mov
fcoml
rcrl
pop
popf
outsb
bound
lcall
cmp
push
xor
or
mov
aas
outsb
lret
lret
add
movsb
stos
shrl
ficomps
sbb
sub
jmp
or
pop
xchg
cwtl
pop
test
dec
xchg
add
or
mov
pop
push
mov
and
lcall
fldt
ret
lret
int3
outsb
in
in
xor
jecxz
into
test
into
mov
lea
sti
jge
stc
push
vcvtsd2si
xchg
sub
push
cmp
jne
dec
xor
outsb
fstpl
push
dec
repz
xor
fldcw
push
cmpsl
jo
ret
xchg
in
mov
xor
loopne
push
inc
fcomp
xchg
or
xchg
add
bound
sahf
dec
lahf
mov
or
add
jo
sub
test
sub
adc
xor
fnstenv
pusha
fcomip
cwtl
add
ja
mov
aam
and
lods
or
std
loop
ss
call
add
pop
aam
iret
les
test
ljmp
add
mov
pushl
add
gs
mov
lret
mov
cmp
test
adc
xor
xchg
push
lds
mov
pushf
and
and
pusha
bound
sbb
outsb
test
add
dec
sbb
les
dec
mov
fstp
loope,pt
mov
xlat
sarb
jbe
adc
push
push
out
sub
cmpsl
mov
outsl
jmp
mov
pop
fistps
fdivs
cmp
xchg
cmp
push
fildll
lret
jmp
adc
sbb
lea
lods
insb
icebp
mov
dec
push
add
subl
dec
dec
push
pop
pop
mov
adc
aad
adc
adc
out
fadd
mov
mov
cld
fisubs
inc
outsl
push
lret
push
pop
inc
repz
nop
in
mov
scas
in
jl
jnp
sub
lds
adc
outsb
sarl
push
das
outsb
mov
hlt
notb
cmpsb
aas
cld
or
push
or
pop
xchg
in
pop
daa
repz
mov
mov
push
aad
dec
dec
xor
pushf
stos
lods
sbb
or
sbb
sbb
dec
xchg
sbb
stos
and
or
xchg
popf
add
dec
scas
in
jae
xchg
adc
inc
dec
vpmacsww
rcrl
push
inc
mov
jecxz
cs
fdivl
dec
jns
xchg
mov
sub
imul
adc
jbe
mov
in
sar
imul
and
cmp
dec
lock
nop
or
inc
cmp
pop
and
sbb
mov
je
inc
fadd
sbb
rcrb
mov
cmp
shl
cmp
decb
in
sarb
push
movsl
pop
pop
dec
subl
and
ss
or
inc
in
or
sub
or
mov
out
pop
mov
push
push
mov
push
lret
cltd
mov
movsl
out
stos
push
outsl
loope,pn
stos
cmp
add
bound
das
mov
fwait
inc
lret
push
adcl
mov
adc
push
mov
cli
je
dec
jns
movsl
fdivs
sbb
sbb
fdivrs
fsts
loopne
inc
xchg
jp
dec
xor
out
pop
xor
inc
xchg
inc
pop
pusha
mov
add
mov
insb
inc
xchg
enter
adc
out
enter
sub
mov
rorb
es
dec
loope
std
jo
or
adc
push
in
jb
push
test
or
in
xchg
push
jge
xor
aaa
movsb
pop
pop
lods
scas
inc
js
xlat
lock
mov
cmp
mov
fwait
and
sub
cmp
cmp
cmpsb
cltd
push
and
or
adc
sti
jno
fwait
or
xor
adc
pop
xor
mov
scas
int3
mov
xor
xchg
dec
cltd
in
pop
cmp
scas
addr16
dec
push
xor
mov
rcl
adc
clc
xor
pop
fs
xchg
or
notl
xor
das
es
dec
addb
int3
in
ljmp
pop
inc
mov
push
mov
mov
xchg
push
pusha
mov
addr16
mov
ja
mov
insl
hlt
dec
and
shrl
lods
cmpsl
popa
xor
push
xchg
mov
bound
sbb
sbb
jno
enter
ja
pop
jae
rolb
out
mov
outsb
adc
xchg
jb
mov
je
push
push
and
fs
test
inc
mov
sbb
mov
icebp
cmp
shl
pop
loope
insl
pop
test
lea
jb
daa
movsb
fisubl
imulb
nop
mov
add
push
into
fwait
cmpb
pop
mov
sub
nop
jle
or
cmp
test
and
ss
enter
nop
mov
scas
pop
dec
xchg
imul
mov
push
fadds
cltd
aad
xchg
or
aaa
xlat
pop
jp
in
cmp
add
dec
sbb
inc
and
lock
idivl
mov
cs
cmp
fistps
jmp
in
lcall
leave
jne
mov
mov
clc
inc
jo
and
sbbb
leave
mov
jae
mov
das
scas
cmp
jne
orb
lcall
es
inc
mov
adc
pop
aaa
push
mov
pop
pop
push
xchg
sbb
jmp
es
cmp
je
cmpsl
mov
xor
cmp
lods
push
aad
pop
mov
xor
jno
xchg
in
popf
cwtl
inc
mov
ss
xor
push
inc
cmp
mov
ja
or
movsl
sarl
sub
fmulp
pop
xor
ror
fucomip
dec
incb
popf
push
mov
stos
and
dec
test
cmp
cmp
push
in
xor
xor
xchg
push
or
mov
sub
mov
sbb
pusha
lret
fildll
rol
daa
and
lds
jnp
mov
pop
rcrl
pop
popa
icebp
cmp
or
mov
push
ja
and
lcall
ljmp
sti
cmpl
push
adc
arpl
sbbl
xor
repz
pop
mov
dec
xchg
mov
insb
jno
repz
ret
popf
pop
pop
adcl
pop
xor
pop
out
push
and
in
pop
mov
pushf
call
or
pop
inc
pop
dec
sti
into
mov
gs
sti
gs
leave
insl
cmpsl
std
loopne
mov
daa
movsb
xor
jmp
call
aad
pop
cmp
pop
push
pop
cwtl
push
push
out
fldl
mov
cmp
pop
sbb
xor
mov
jmp
jb
jle
fwait
rcrb
dec
push
pop
int
filds
xor
lahf
pop
cmp
mov
mov
pusha
and
sub
shrl
mov
mov
into
push
adc
sbb
inc
lahf
push
cli
jb
jmp
mov
fnsave
add
roll
loopne
out
jmp
adc
mov
and
push
stos
mov
mov
cld
aaa
and
add
xchg
jg
sub
fwait
jmp
mov
mov
leave
lahf
imul
int
xchg
je
bound
inc
jbe
or
pop
push
cmp
sbb
ja
cmp
daa
outsl
in
mov
push
jl
jo
fs
lret
jl
outsl
into
hlt
xor
ret
jmp
stos
mov
cmp
add
xor
push
rcl
push
shll
push
mov
fwait
popf
cmpsb
ret
sbb
lcall
mov
inc
sub
movsb
loope
cli
jg
mov
dec
push
loope
sbb
int
vunpckhps
bound
adc
nop
roll
mov
aaa
pop
sbb
lret
fdivl
xchg
cli
call
and
xchg
scas
pop
popf
insb
es
mov
aam
lods
movsl
aam
fldcw
or
add
push
inc
push
aaa
xchg
or
rcl
dec
xchg
data16
outsl
out
mov
std
bound
imul
jns
ds
nop
data16
rolb
or
aaa
loope
imul
inc
push
repz
push
sbb
mov
or
sub
push
mov
aad
arpl
testl
lcall
gs
cmp
add
lods
out
stos
xchg
push
sbb
sbb
mov
scas
adc
xchg
movsl
xor
pop
lds
mov
call
add
scas
mov
paddsw
jnp
cmp
rcll
xor
and
mov
jo
icebp
xlat
adc
sahf
scas
dec
xor
lock
xor
dec
in
jae
mov
xchg
add
cwtl
jbe
xor
aad
cmpsb
mov
out
cmp
pop
push
xchg
add
jmp
fs
mov
mov
popf
jecxz
jp
aad
mov
push
out
dec
cld
inc
int
or
or
out
inc
pop
cmp
rcrb
jmp
outsl
add
fstpt
ss
inc
and
shll
bound
fdivs
inc
sbbb
xlat
imul
int
mov
jmp
lods
sbb
loop
lcall
.byte
.byte
pop
and
cmp
adc
std
sub
jp
aam
cmp
pop
dec
and
lock
push
sub
or
shr
inc
ja
arpl
mov
sub
fistpll
call
pop
addr16
hlt
lret
aaa
pop
cltd
insb
and
dec
cmp
sub
fdivrl
clc
bswap
pop
cmp
loop
cli
push
aaa
dec
loop
lds
mov
add
xchg
into
nop
btc
data16
push
jl
cmpsl
add
cmc
mov
xor
popf
mov
push
pop
mul
mov
push
inc
rcrb
stos
aas
ret
int3
xchg
test
loope
push
scas
lcall
in
es
mov
push
mov
xchg
js
sbb
and
xor
call
cmp
es
lds
cmc
lret
mov
push
push
movsb
jp
cwtl
xor
cld
jg
mov
mov
add
in
push
and
jmp
ret
jmp
loope
add
mov
inc
or
insb
xchg
xchg
jbe
jno
stos
fwait
daa
xchg
aad
jae
imul
lods
cld
dec
push
rclb
popa
xlat
clc
or
ror
mov
test
mov
test
jmp
roll
sbb
sub
mov
jae
aaa
sub
sbb
pop
inc
sub
lods
jl
adc
jge
lcall
xchg
cld
arpl
pop
push
shll
stc
jno
movsl
out
and
pop
ss
test
in
jnp
roll
popf
stc
cmp
xor
js
leave
test
or
jno
sar
scas
and
sub
sbb
pop
mov
mov
in
xor
jle
notl
add
or
divl
add
inc
aam
imul
les
jle
arpl
and
mov
cwtl
push
inc
mov
dec
add
pusha
ret
dec
sahf
aas
mov
or
inc
icebp
jae
movsl
fsubl
pop
mov
data16
std
or
enter
sbb
inc
jnp
sahf
mov
pop
test
sub
mov
jbe
testl
in
push
xchg
arpl
jbe
arpl
xchg
stc
xchg
sahf
mov
cli
loop
rcr
in
sbbl
fsubl
push
rol
pop
mov
mov
sub
inc
add
and
stos
movsb
add
test
mov
xor
xor
test
lret
sar
dec
cmpsl
xchg
outsb
je
xlat
fiaddl
das
imul
xlat
xor
cli
push
inc
cmp
test
push
jg
jno
rcll
stos
fs
lahf
jnp
cmp
out
mov
clc
cmp
lahf
test
vxorpd
xchg
subl
mov
jg
dec
inc
dec
cli
push
pop
stos
shll
loopne
fisttpll
dec
lahf
rclb
mov
ss
jp
retw
xchg
xchg
orb
mov
ds
repz
xchg
xor
fs
mov
je
mov
mov
mov
pop
and
cmp
add
pop
mov
lret
or
cli
xor
mov
pop
mov
jle
dec
add
sbb
es
and
push
fldt
sub
adc
ja
cmc
cwtl
inc
divb
and
inc
testb
pusha
and
cmpsb
icebp
pop
out
sbb
xchg
push
dec
push
fs
fs
fldpi
or
dec
adc
sub
into
mov
xchg
loop
add
adc
push
mov
add
sbb
push
push
mov
jae
inc
inc
ja
inc
mov
and
jno
sub
mov
xor
jmp
lds
pop
and
sbb
push
in
repz
sub
test
mov
sahf
stos
out
dec
call
jge
add
ret
jb
mov
pop
minps
sub
out
lea
xchg
push
mov
cmp
stos
sbb
adc
mov
repz
cwtl
rcll
repz
nop
mov
adc
lods
cs
insb
jmp
xchg
cmp
lahf
mov
push
sub
pop
iret
or
out
or
lock
mov
xor
int
xchg
cmp
lcall
decb
cld
lods
pop
jg
fldl
sarb
scas
cs
push
sahf
mov
mov
int3
xchg
into
mov
loop
mov
cli
leave
cmc
xchg
mov
out
pop
pop
ljmp
push
hlt
xor
enter
loop
std
jle
mov
movsl
faddp
ret
dec
cltd
daa
pop
aas
pushf
or
rep
and
pop
test
mov
ds
add
xor
cltd
pop
mov
push
xchg
jns
adc
mov
sbb
in
fsubrp
jecxz
add
mov
lods
adc
adc
jecxz
inc
mov
mov
jns
adc
xchg
cmc
pop
xor
sahf
movsl
cmp
jmp
fmulp
add
test
insb
xor
shl
sbb
shr
mov
loop
insl
pop
mov
nop
inc
lock
and
pop
jb
mov
add
inc
outsl
ja
into
xchg
mov
mov
xchg
loopne
and
pop
into
push
lret
jp
ret
add
lock
cmp
jg
into
adc
fprem1
xchg
pop
and
adc
rcr
adc
stc
jo
sub
cmp
mov
cwtl
cli
xor
mov
cwtl
dec
xchg
xchg
mov
mov
and
cmc
dec
daa
jnp
xor
jb
into
rcrl
inc
xchg
ror
and
fnsave
stos
and
adc
hlt
outsb
decl
cmp
cmp
sti
cmpsl
jl
and
cltd
test
in
dec
xchg
xchg
xchg
xlat
cmp
sub
mov
pop
or
mov
inc
mov
aaa
mov
and
mov
jbe
cmp
cmpsl
sub
int3
leave
and
jnp
imul
cmp
sahf
fists
pop
andl
inc
cmp
adc
dec
mov
inc
sti
xchg
ja
subb
inc
dec
rclb
fstps
test
ret
pop
mov
adc
cmp
dec
jnp
push
sub
rolb
push
xlat
xchg
sbb
stos
cmp
leave
xchg
cli
xchg
dec
xchg
add
sub
into
inc
dec
fs
push
movsl
dec
push
retw
repz
shrl
shrl
fisttpll
int3
or
dec
jecxz
and
ljmp
and
lcall
mov
mov
in
jmp
fcomp
imull
adc
and
shll
sub
sarb
js
shl
jl
jecxz
inc
jmp
negl
dec
repz
ret
std
and
mov
lods
in
ss
icebp
testl
and
ret
popf
add
jae
add
fistl
repz
sbb
loopne
imul
test
dec
or
and
mov
in
nop
sti
stos
div
pushf
stc
iret
jnp
das
jne
jae
movsb
call
leave
xchg
xchg
insb
sbb
mov
mov
cmpb
pop
sbb
and
mov
mov
into
and
pop
jp
pop
mov
jae
sub
out
aam
js
loopne
mov
push
add
add
push
test
loope
stos
out
mov
ja
or
sbb
inc
cwtl
cmc
das
inc
inc
xor
fdiv
jmp
pop
pop
sub
and
or
lret
cmp
fisubrs
int3
inc
hlt
mov
xchg
icebp
mov
gs
cmc
add
data16
push
dec
daa
nop
mov
mov
sbb
incl
cmp
mov
enter
mov
adc
flds
mov
adc
xlat
shr
cmc
fcoml
imul
jg
popf
xor
test
sbb
push
popa
sub
xchg
xor
pop
adcb
xchg
test
jecxz
test
mov
sti
adc
call
mov
jbe
shlb
or
pop
and
clc
mov
fwait
or
gs
int
add
sub
jle
iret
cmpb
mov
and
loop
bound
outsl
out
fcmovb
shrb
mov
add
fdivrs
arpl
or
inc
data16
sbb
std
xchg
cli
and
mov
addr16
aad
fs
push
in
out
ljmp
cmpsb
loope
xchg
and
jle
cs
jne
lea
add
inc
mov
dec
mov
sbbl
jae
mov
jnp
or
cli
jl
leave
xor
aam
inc
pop
or
ror
inc
fwait
lcall
arpl
mov
xor
mov
pand
mov
mov
cmpsb
orl
jbe
fisubrl
xchg
nop
pop
dec
cmp
xchg
das
push
outsb
clc
ret
aad
sarb
cmp
insl
cmc
adc
add
xchg
outsl
xchg
mov
mov
push
movsb
int
cwtl
loope
in
int3
sbb
mov
cmpsl
jg
cmp
lods
loop
aas
sub
test
mov
sub
adc
jb
movb
and
push
mov
dec
sub
inc
jne
push
sbb
hlt
clc
xchg
sti
mov
or
xchg
mov
sbb
popf
xchg
and
je
scas
inc
les
push
gs
iret
add
lret
mov
xor
xor
push
movsb
shll
sbb
inc
test
sub
outsl
or
sbb
adc
pop
push
std
sbb
arpl
or
mov
shl
inc
add
pop
shrl
dec
xchg
cld
push
cmpsb
xchg
sub
push
dec
xchg
pop
push
rcr
xor
scas
pop
push
jbe
or
lock
out
dec
pop
rclb
mov
call
jl
vaddsd
stos
movsl
dec
out
les
jl
mov
add
aad
fiadds
and
dec
lahf
adc
outsl
nop
test
cmpsl
xchg
into
pop
lea
aas
pop
mov
xchg
dec
rolb
dec
loopne
jecxz
push
adc
xchg
aad
lahf
mov
pop
push
cmp
adc
xor
push
pop
jmp
movsb
jne
arpl
inc
push
sub
adc
xor
sbb
rolb
dec
pop
shlb
mov
xchg
leave
stos
jo
xor
loope
cld
xor
push
adc
cmp
push
sub
imul
xor
mov
xchg
and
sub
inc
push
xlat
shll
pop
movb
fdivrl
inc
sbb
push
push
jecxz
hlt
push
jae
in
xchg
sbb
sti
inc
mov
cmp
stc
add
ss
stos
jmp
cmc
xchg
xchg
fld
mov
jb
adc
mov
insb
fwait
sub
cmp
test
pop
xchg
je
mov
xchg
push
scas
out
lcall
in
dec
test
sub
bound
stc
jns
sbb
sti
in
adc
cs
sarb
lahf
aad
test
jmp
das
sti
pop
or
add
orl
push
fwait
xlat
enter
imul
scas
mov
xchg
dec
ja
jne
lahf
aam
sarb
aam
iret
lods
dec
pushf
cmp
or
int
adc
mov
and
pop
nop
sub
addl
push
in
inc
fistpl
pop
pop
ljmp
sbb
mov
popf
xchg
mov
sbb
mov
pop
dec
icebp
push
sti
mov
xlat
cltd
lea
push
arpl
and
lock
pop
adc
dec
adc
enter
push
test
cwtl
repnz
lret
popf
pop
loop
inc
mov
push
adc
in
loop
pop
or
push
out
jmp
stc
xchg
adc
ljmp
xor
cmp
sub
cmpsb
jne
add
or
call
jge
sbb
push
or
popf
jg
movsb
adc
iret
mov
fdivrl
or
inc
js
xor
int
mov
arpl
sti
popa
mov
pusha
mov
xor
mov
lock
icebp
and
adc
xchg
cli
push
dec
cli
lods
jle
xchg
stos
cmp
les
cs
dec
inc
pop
es
pusha
push
jmp
jnp
notb
push
jge
pop
or
pop
jno
rol
mov
sbb
cld
add
mov
push
xlat
lock
mov
add
add
jae
stos
jl
aas
in
pop
add
lock
xchg
inc
rol
andl
insl
sub
fadds
nop
mov
jle
adc
push
mov
cmp
add
movsb
add
fdivrl
mov
xchg
lahf
push
jl
notl
repz
mov
push
mov
xor
lds
xor
add
cwtl
jnp
cltd
mov
lret
or
xor
js
stos
lret
mov
rol
movsb
pushf
inc
and
jno
cmp
cmp
mov
inc
add
xor
jmp
lods
mov
inc
mov
pop
xchg
cs
add
in
xchg
cmp
sbb
nop
jge
subl
adc
adc
movsl
sub
xchg
mov
fisttps
sbb
mov
cwtl
test
enter
lret
enter
pop
daa
xor
xor
or
gs
push
lock
push
or
xor
jb
inc
xchg
inc
push
push
mov
call
lcall
jmp
cmpsl
mov
mov
out
mov
mov
xchg
ja
test
jnp
xchg
xchg
xchg
add
cmpl
pop
jmp
test
push
insb
fidivs
into
bound
mov
stos
into
dec
mov
aaa
test
dec
test
imul
cmpsl
sbb
or
xor
adc
sbb
and
lea
cmp
icebp
xlat
fldt
pop
daa
push
mov
std
jp
inc
jp
push
xchg
cmpb
dec
ljmp
fmuls
inc
repnz
cs
test
outsb
orl
imul
push
mov
int3
std
sbb
xchg
push
cs
jbe
dec
fcoms
int3
or
mov
cmp
loope
addr16
imul
mov
sbb
sarb
stos
das
jg
nop
xor
xlat
fwait
jle
push
out
push
mov
insl
mulb
lret
add
shlb
lock
mov
insl
pushl
icebp
cmp
sub
hlt
dec
inc
dec
mov
sub
add
pushf
cltd
push
fwait
aas
adc
jnp
mov
out
hlt
jmp
lea
shr
jo
imul
imul
call
xor
adc
movsl
push
enter
lods
mov
and
inc
dec
push
and
add
inc
dec
lods
sbb
stos
jecxz
mov
es
xchg
adcl
idiv
std
mov
call
mov
ret
jb
xchg
push
or
outsb
push
or
cmpsb
dec
mov
jne
mov
mov
testb
dec
loopne
movsl
test
mov
adc
scas
fldcw
repnz
add
gs
lods
cld
adc
das
ds
aaa
push
sub
fdivl
sub
fsubs
cmc
mov
mov
jnp
push
lret
push
arpl
orb
gs
xor
lds
jno
fldcw
js
dec
incl
ds
and
popf
into
inc
fstps
sub
outsl
pop
jg
loopne
pop
js
lods
sbbl
lret
pop
sub
je
leave
shrl
insl
sub
dec
push
cmpsb
xchg
inc
outsb
xor
xor
leave
cmp
loopne
sti
add
out
sub
xor
and
xchg
in
movsb
push
or
aam
and
cmpb
pop
mov
mov
and
js
jns
cld
cmpsb
pop
out
out
stos
ror
je
outsb
xor
xchg
xchg
and
lea
shrb
pushf
out
std
fidivrs
jo
ja
dec
ficompl
out
fiadds
push
and
or
ret
aas
jg
push
jle
pusha
out
sbb
jmp
xor
cmpsl
dec
lock
rol
pop
xchg
adc
loop
jge
lods
mov
fcmovnb
sbb
xchg
mov
cmp
and
or
pop
pusha
lods
fldenv
lcall
sub
ret
repnz
push
inc
add
jl
mov
adc
stos
test
mov
add
decl
call
cs
jmp
or
arpl
addb
inc
or
and
xor
ja
lock
jbe
iret
in
or
rol
mov
aad
push
cwtl
fstl
cmc
pushf
mov
movl
leave
jmp
fsubs
dec
adc
cmpl
or
int3
inc
testb
jmp
addb
stc
jmp
and
sbb
mov
outsb
lret
mov
sub
push
cmp
mov
cs
lret
clc
test
cltd
mov
sub
jge
add
jo
jbe
xchg
pop
xchg
add
mov
mov
sbb
in
xlat
or
or
nop
cli
add
or
outsb
popa
pop
mov
cmc
loope
out
dec
mov
fimuls
mov
test
repnz
leave
mov
add
ret
pop
shlb
jbe
testb
sbb
sub
ljmp
mov
bound
lods
dec
xlat
xor
sbb
std
jo
inc
sbb
data16
sbb
test
vaddps
adc
inc
es
mov
sbb
sbb
xchg
sub
outsl
mov
push
pusha
mov
cmp
or
push
jmp
cmp
sub
fsub
fisubrs
pop
jmp
mov
and
pop
fnstcw
ret
inc
add
fidivl
clc
mov
cwtl
mov
pop
repz
mov
repz
dec
xor
dec
mov
push
fstp
ja
aad
in
and
jle
dec
xchg
sysexit
ret
cmp
repnz
adc
ret
sub
push
or
mov
mov
pushf
push
jl
cmp
push
outsb
sar
stc
pop
jecxz
cmc
mov
dec
mov
aam
dec
push
sbb
ljmp
push
dec
fwait
mov
add
sbb
mov
ss
pop
inc
arpl
dec
sbb
fsubrp
sub
add
sub
mov
cmovb
dec
fwait
arpl
cltd
lea
in
cmc
clc
into
mov
inc
jb
push
mov
push
into
lret
dec
daa
cmpb
or
xchg
jecxz
xor
inc
call
mov
test
jbe
imul
xchg
xchg
fidivl
cmpsb
jmp
lods
add
orb
fcompl
lock
jle
scas
mov
pop
mov
inc
xchg
or
mov
push
or
sbb
addr16
adc
mov
adc
or
shll
jmp
push
or
cmp
repnz
or
sub
je
xor
pop
insb
pop
loop
dec
in
adc
test
xchg
test
cmp
mulb
test
push
orb
and
xchg
mov
inc
out
fcomi
popf
mov
and
mov
frstor
jo
movsb
rorl
push
or
mov
sahf
aaa
xor
push
les
mov
lahf
fwait
outsl
aad
js
mov
jns
jb
dec
mov
test
movsl
pop
loope
cwtl
mulb
and
cmp
mov
rcll
sti
sbb
pop
xchg
lcall
mov
push
adc
lret
push
pop
xor
aas
out
andb
mov
rcr
mov
inc
outsl
mov
lods
dec
jb
mulb
push
sub
cld
mov
ds
sbb
xor
pop
mov
xchg
es
out
popf
mov
and
out
cld
outsb
sbb
lds
jo
popf
test
xchg
xor
jl
inc
xchg
call
sbbb
jne
inc
loop
or
je
xor
jecxz
icebp
fstp
bound
data16
jle
pop
dec
shll
repnz
repz
sub
pop
andl
jno
lcall
xchg
dec
lods
cmpl
call
fdivr
sahf
inc
dec
jne
mov
shrl
decb
xchg
sti
ret
fcmovu
pop
mov
inc
rcll
push
in
inc
push
aam
lods
and
popf
shl
loope
dec
icebp
xchg
loope
inc
movsl
ficoms
mov
mov
and
cmp
mov
adc
mov
or
aad
sarb
aaa
bound
insl
cmp
sbb
in
dec
lock
jne
rcll
notl
cltd
lret
pop
lret
fcomps
ret
fwait
jno
nop
push
dec
out
pop
imul
pusha
push
or
int
dec
nop
ja
cwtl
ret
inc
and
jb
sub
sarl
mov
pop
ret
or
cmp
loopne
inc
xchg
pop
xor
lret
call
inc
test
ss
es
fst
push
btr
cwtl
aad
jns
shl
int3
sub
addb
jmp
pusha
test
jae
push
sbb
aad
ret
daa
loope
push
mov
and
push
mov
icebp
push
test
and
or
scas
lahf
loope
push
lret
push
push
lahf
mov
jbe
or
cli
test
xchg
mov
sti
out
add
lock
arpl
cmp
in
test
ss
stos
movsb
adc
insb
in
pushf
cmp
mov
add
movb
adc
shll
push
jl
nop
adc
inc
outsl
fisttpl
popf
xor
aam
and
ror
ret
inc
or
pop
add
jo
repz
stos
ss
repz
lret
mov
pusha
outsb
jbe
mov
push
scas
push
fnstenv
popa
add
dec
div
add
imul
sbb
inc
lds
iret
aad
mov
and
into
jo
fidivs
cmp
mov
std
and
pop
sbb
fstpl
inc
call
imul
mov
and
fisubrs
adc
and
jns
loop
test
pop
pushaw
push
jbe
or
aas
les
in
xor
adc
or
dec
push
sbb
push
jge
aaa
jmp
mov
cmp
jle
push
push
in
fldenv
in
adc
mov
das
outsb
cs
inc
pop
mov
insl
jae
mov
insb
loopne
jmp
test
mov
cmp
mov
je
ret
push
pop
xor
and
jne
inc
fisubl
lds
adc
mov
test
hlt
icebp
mov
sbb
sub
jmp
shll
add
cmp
push
loop
cmp
push
into
repnz
mov
je
and
int3
cmc
jle
mov
xor
sar
xchg
push
jmp
jns
lret
rcrb
test
gs
jns
dec
dec
popf
xchg
data16
fs
push
enter
fs
mov
adc
rorl
xchg
addr16
mov
inc
xchg
notl
jge
mov
out
inc
pop
sub
or
ds
cmpsb
xchg
inc
arpl
and
cmpsb
imul
rcrl
push
xor
jo
push
imul
adc
sub
inc
fistpll
outsb
test
mov
cmp
fnstsw
or
mov
fadds
dec
pop
sbb
adc
mov
jecxz,pt
jae
mov
imul
lret
lret
dec
popa
xor
and
mov
scas
cmp
aad
test
xor
test
cli
fcmovnb
imul
nop
bound
call
xorb
sbb
cltd
mov
inc
scas
lds
mov
pop
inc
in
fucomp
mov
lock
inc
ljmp
mov
cwtl
jl
scas
jmp
push
and
rclb
fisubrl
fmul
ljmp
aas
cmp
adc
adc
jecxz
ljmp
mov
mov
pop
imul
dec
add
inc
and
pop
pop
in
and
test
cmpsb
pop
pop
ds
dec
test
enter
pop
pop
mov
mov
mov
mov
cwtl
clc
imul
xor
movsl
cmp
in
mov
out
sbb
aas
fsubrp
jbe
mov
and
repz
xor
pop
xor
pop
movsb
add
ss
add
in
ljmp
jb
jl
mov
sbb
mov
shll
pusha
mov
out
loop
test
jne
pop
adc
ret
es
push
sbb
sbb
cld
xchg
mov
aad
aaa
xor
ret
jge
ret
adc
fistps
pop
sbb
cld
imul
aaa
decl
negl
add
mov
jno
in
fmul
mov
adc
pop
mov
sbb
movl
push
cmp
mov
jne
and
loope
jb
mov
insl
jbe
pop
dec
cmp
call
add
sub
hlt
lods
pop
out
xlat
cmpsb
jp
lock
pop
add
je
lds
mov
inc
mov
sub
jnp
cmc
adc
and
mov
mov
inc
xchg
sti
lea
jl
lahf
and
cmpsl
add
or
aam
or
into
jns
outsb
ljmp
mov
xlat
test
out
push
cmp
adc
push
dec
call
xchg
shll
popa
ficoms
fstpl
and
pop
hlt
mov
mov
jle
cmp
jo
pop
push
xor
dec
in
rclb
ret
mov
jl
loopne
cmp
mov
cmp
push
and
arpl
fsubl
leave
fistps
xor
clc
enter
add
stos
daa
cmp
insl
mov
push
out
jo
mov
dec
push
pop
test
mov
mov
je
inc
pop
sbb
xor
dec
dec
arpl
movsl
cli
add
or
xchg
sub
into
aam
mov
lods
xor
shrl
mov
push
cmpsl
push
mov
sub
negl
lahf
mov
popa
sti
movsl
push
mov
inc
sub
adc
add
ja
push
pop
insl
shll
mov
or
lds
jl
arpl
cmp
push
and
xchg
sub
pushf
xchg
cs
jnp
mov
shrb
push
and
sub
jo
sti
cmp
add
ljmp
in
repz
cli
rcll
dec
dec
sti
jle
cmp
dec
cmpsl
sbb
lea
movsl
push
jp
xchg
jne
aas
clc
xchg
repz
add
or
pop
sbb
jae
rep
add
out
adc
mov
movsb
fwait
inc
test
mov
jg
lea
mov
fs
sahf
mov
cmpsb
cld
fadds
adc
mov
cmp
addr16
or
mov
inc
in
sarb
std
outsl
call
insb
cmp
inc
call
pop
pop
mov
and
xor
enter
fidivs
icebp
or
hlt
inc
jo
dec
sub
test
fisttpll
sbb
jo
lcall
insl
and
mov
jge
outsl
or
jle
xchg
jno
into
cmp
pop
mov
je
xchg
lods
jo
fsts
mull
jne
mov
sub
aam
mov
aam
mov
mov
ss
loop
in
xchg
push
and
mov
insl
outsl
roll
cli
push
or
arpl
cld
jo
sbb
mov
dec
lock
mov
jns
jns
out
pop
insb
fs
jb
loope
rolb
scas
xchg
popf
out
scas
enter
nop
sahf
ret
mov
imul
aas
mov
or
cld
addr16
or
in
leave
gs
lret
dec
xor
subl
add
cltd
add
lahf
inc
shrl
jo
and
or
mov
inc
cmpsl
jne
out
jl
xor
aas
jle
push
scas
xchg
mov
jg
xchg
daa
pop
pushf
daa
in
mov
test
cmc
fcmovbe
jmp
sub
mov
stos
and
dec
sub
mov
scas
ficoms
inc
mov
outsb
mov
mov
std
es
adc
cmpsl
xlat
adc
cmp
cmp
scas
inc
faddp
inc
in
fadds
out
adc
xor
loopne
jecxz
cmp
and
out
addr16
bound
jg
push
and
mov
ljmp
add
and
xchg
shrl
outsl
outsb
sbb
stc
repnz
adcb
cmp
push
push
pop
mov
sbb
hlt
sub
aam
push
inc
pop
mov
and
adc
leave
js
or
pushf
fnstsw
mov
orb
add
push
xchg
xchg
cmp
add
idivb
mov
imul
xchg
jae
ss
mov
xchg
inc
and
or
ficomps
je
xchg
adc
jle
push
call
scas
and
enter
ljmp
adc
push
dec
jge
sahf
cmp
adc
mov
in
mov
and
push
mov
test
inc
fcomip
out
ljmp
dec
add
mov
inc
lock
push
lret
dec
cmpsb
ja
ds
out
xor
lods
cli
inc
add
decl
into
fwait
mov
inc
and
fsqrt
mov
cmp
mov
jns
mov
stos
xchg
jo
dec
aas
or
mov
mov
lret
push
in
rol
fbstp
lret
push
mov
jl
lcall
sub
mov
leave
outsl
pop
xchg
fdivs
gs
in
ret
test
and
pushf
pop
add
fs
xor
imul
pop
sub
lahf
test
sub
daa
fwait
push
xchg
shl
repnz
lods
xchg
pop
bound
iret
pop
jnp
test
divl
fdivrs
sub
bnd
push
movsb
mov
mov
sub
shlb
popf
rorl
or
xor
mov
enter
mov
movups
fnstsw
xor
mov
push
jbe
das
mov
push
dec
sarl
push
sub
dec
mov
jae
out
dec
test
ja
sarl
sbb
and
push
push
cmp
icebp
mov
push
mov
inc
movsl
xor
pop
push
jl
mov
pusha
push
pusha
mov
inc
enter
jnp
lds
cwtl
movsb
aas
add
out
cmp
cmp
push
popf
scas
or
pop
out
xor
pusha
add
push
jb
and
xchg
das
push
js
xchg
or
pop
imul
scas
test
or
jmp
outsl
js
add
dec
inc
mov
test
out
loopne
fisubs
ss
xorb
sbb
cmp
out
mov
cmp
jno
insl
js
cmpsb
test
out
in
pop
jge
loopne
je
pop
in
pop
xchg
cmp
pop
adc
aad
pop
sbb
addr16
mov
jbe
sbb
ret
jae
push
push
xchg
mov
mov
out
cwtl
mov
sub
into
ficompl
or
aas
shlb
jmp
ficomps
aam
jae
or
ficompl
inc
push
xchg
and
out
or
mov
push
xor
jo
std
jnp
lahf
cmp
jmp
inc
dec
mov
stos
stos
xchg
mulb
adc
xchg
aas
or
dec
mov
cmp
jnp
inc
adc
popa
daa
push
stos
out
dec
bound
fimull
mov
push
repnz
shll
ret
out
dec
shrb
icebp
js
cmp
add
push
out
cmp
xchg
xchg
dec
in
jnp
in
and
in
call
cmp
and
out
jne
loope
xor
shrl
pop
mov
xor
mov
cmp
addr16
lods
aas
lods
jmp
add
inc
add
out
stos
or
adc
pop
mov
sbbb
jg
lahf
sbb
or
sub
add
js
mov
stc
pop
sbb
testb
fstpl
sbb
sbb
jle
and
icebp
fidivl
bnd
cli
jae
mov
add
insb
inc
das
popf
mov
xor
pushf
idivb
xchg
ficomps
mov
test
mov
sarl
xchg
mov
in
jp
mov
aad
jl
mov
mov
shlb
ljmp
decl
inc
jns
xchg
das
stos
ljmp
sub
sbb
dec
mov
loope
lods
jge
cmp
xor
mov
adc
or
cltd
pop
xor
stc
sbb
dec
bnd
pop
jo
sub
cmpsb
pop
ss
clc
add
gs
pop
mov
xor
inc
clc
int
les
and
push
icebp
mov
dec
in
xorb
adc
mov
or
nop
dec
xchg
outsl
cmp
adc
dec
pop
sbb
je
lret
fs
sbb
mov
jg
jbe
fwait
sub
dec
shlb
add
test
inc
mov
sbb
addr16
add
xchg
mov
mov
pop
ss
xlat
cltd
inc
push
xchg
icebp
push
call
lds
push
repz
cltd
clc
jo
cltd
out
xor
xor
cmp
daa
rcll
xchg
dec
fldcw
out
xchg
xchg
insl
out
adcl
mov
cmpsb
fnstenv
xor
jmpw
push
inc
push
pusha
pop
cmp
sbb
xchg
cmpl
mov
out
jmp
jb
cmc
xchg
nop
cmp
push
mov
cwtl
and
push
inc
dec
cs
imul
pushf
sub
cltd
xor
or
shll
mov
mov
sub
inc
lods
fdivr
movsb
mov
sti
rolb
fisubl
jle
adc
cwtl
insb
test
mov
dec
xchg
and
out
insb
mov
mov
jno,pn
mov
aas
imul
xchg
jp
in
mov
sti
orl
mov
fcompl
sti
rcll
addb
imul
jecxz
dec
stos
pop
sub
stos
cmpsb
mov
mov
cmp
aad
mov
std
push
dec
and
pop
icebp
mov
stos
lods
xchg
push
xlat
push
push
js
cmp
add
pop
adc
fisttpll
jge
cmc
jecxz
inc
jnp
stos
xor
enter
ljmp
push
imul
int
and
push
jo
popf
xchg
adc
jecxz
into
and
inc
cmp
xchg
mov
and
or
mov
cltd
mov
mov
in
add
fcompl
cs
sub
mov
int3
ficomps
xchg
fisttpll
pop
shll
movsl
xor
int
inc
lock
jbe
shrl
cmc
inc
mov
jno
fimuls
ja
mov
dec
jmp
lcall
adcl
movsl
repnz
movsb
xor
es
ljmp
lods
leave
nop
jge
mov
aad
push
inc
add
adc
mov
fnstcw
mov
xorl
fidivrs
mov
jbe
aas
add
mov
cltd
add
enter
add
cmp
dec
push
clc
xchg
add
jae
pop
and
imul
ret
mov
or
insl
or
push
or
pop
imul
add
lcall
jbe
outsl
jno
and
inc
xchg
sub
push
fs
inc
adc
aad
sub
rcrl
mov
lds
js
stc
sbb
pusha
xor
or
mov
cmpsb
jo
mov
push
mov
push
enter
add
dec
iret
fwait
sbb
xchg
xchg
or
fisubl
lcall
mov
sbb
and
fistl
aad
out
inc
cs
xor
fnstcw
mov
jbe
mov
leave
adc
ficoms
cwtl
and
stc
and
fstps
xchg
push
or
cmovo
xor
pusha
stos
cmp
or
rep
les
das
dec
cwtl
xor
dec
jb
mov
sub
sti
cwtl
lea
or
push
xchg
pop
or
mov
lea
aad
enter
arpl
int3
xchg
arpl
push
insl
cmpsb
jb
inc
xchg
xchg
lret
pop
xchg
mov
sub
pop
pop
and
aad
xchg
dec
push
cli
sbb
sub
pop
mov
pop
dec
cmc
dec
movsb
gs
fcomi
sub
mov
adc
addb
sub
jbe
hlt
adc
popf
nop
fisubl
pop
pop
push
inc
dec
test
mov
or
scas
jb
and
insl
ret
idivl
pop
pop
mov
insb
push
mov
push
mov
nop
fimull
or
xlat
and
leave
inc
mov
mov
xor
aas
cld
or
clc
pop
fwait
inc
sub
fnstsw
stos
lcall
jns
cmc
in
es
jmp
insb
push
sbb
lods
stos
data16
hlt
popf
jnp
into
mov
xchg
aam
in
inc
mov
cmp
shrl
push
or
add
frstor
add
or
sti
mov
outsl
sahf
mov
sbb
jecxz
ret
pushw
mov
mov
jo
xchg
fwait
lret
jns
popa
jnp
shrl
xchg
pop
push
push
lods
pusha
mov
dec
stos
movsb
add
sub
and
aam
std
dec
lods
outsb
popa
mov
stos
fstl
lcall
add
adcb
fistps
push
bound
imul
aas
push
mov
pop
xchg
mov
adc
mov
dec
fstpt
nop
stc
xchg
dec
cmpsb
mov
add
repnz
inc
pop
inc
mov
sbb
cmp
pusha
inc
sti
repnz
or
push
into
mov
addr16
stos
nop
push
imul
inc
clc
cltd
int3
ret
xchg
aam
dec
out
js
xor
mov
icebp
adc
shll
bound
pushf
enter
add
outsl
dec
scas
mov
fidivl
sti
jmp
xchg
loopne
arpl
shlb
into
push
xchg
fsin
aas
cmp
shrl
cmc
lods
in
cltd
ja
loop
or
pop
push
mov
push
lcall
or
sbb
mov
and
pop
sub
inc
in
sub
addr16
jo
cmp
mov
cmp
fbld
iret
outsl
orb
cwtl
dec
lcall
jmp
sbb
cltd
movsl
and
adc
outsb
cmp
adc
cmp
sub
mov
sti
mov
jo
lret
cwtl
inc
rcr
in
repz
jp
and
vmovaps
mov
cmp
and
cwtl
ret
xchg
sub
pop
aad
and
or
lahf
adc
xchg
out
out
mov
xchg
into
jbe
aad
push
pop
leave
fs
fnstcw
lods
push
jle
dec
ret
mov
xchg
daa
adc
stc
and
and
in
or
xlat
in
xchg
cmpsb
in
cmpsl
shlb
movb
push
mov
cmp
gs
js
jge
or
dec
sub
std
loopne
pop
je
cmc
dec
jno
loop
mov
dec
dec
dec
loope
sub
nop
cmp
ss
mov
cli
or
mov
sub
push
ds
xchg
sub
bound
add
and
xchg
test
scas
fsubrs
sbb
mov
popa
push
cmp
cmp
jp
test
jge
filds
adc
lods
jmp
outsl
enter
fcom
stos
lods
ljmp
popf
cmp
xchg
seta
mov
cmp
mov
out
rcrb
mov
push
jecxz
sbbb
pop
push
fs
sub
sbb
out
in
push
push
cmp
adc
jb
cmp
lret
dec
insl
xchg
mov
mov
lahf
push
and
sti
mov
sub
mov
inc
dec
ret
jecxz
mov
sub
mov
mov
out
inc
or
dec
jl
sbb
out
mov
push
push
adc
sbbl
mov
push
hlt
nop
mov
push
pop
rcrl
and
fsubrs
les
jae
xlat
jb
sbb
int
dec
inc
dec
testb
aaa
mov
rclb
aad
add
gs
jnp
or
pop
dec
mov
test
outsb
mov
dec
push
mov
jbe
mov
or
sub
mov
sub
add
inc
out
daa
push
xchg
push
arpl
subb
cwtl
scas
jbe
test
xchg
push
xchg
push
jg
jmp
cmp
adc
mov
fdivrl
adc
cli
xchg
sbb
sub
enter
ret
and
cmp
push
or
ret
cwtl
mov
cmc
jnp
xchg
pop
push
xchg
out
aas
and
cmp
in
push
cmp
out
aam
xlat
mov
add
jmp
std
jl
mov
aam
lea
std
xchg
jbe
das
sti
movsb
int
lds
sti
sub
loop
jecxz
out
int3
mov
or
mov
push
loope
adc
movsb
pop
sbb
or
mov
mov
push
fstl
push
and
clc
data16
xchg
jmp
jmp
or
in
insb
inc
pcmpeqd
test
inc
outsb
bound
lods
or
xchg
dec
cltd
push
mov
mov
push
xor
movsb
push
sub
popf
repnz
pushf
mov
mov
xorl
add
loope
pop
mov
xor
or
xchg
mov
or
clc
in
scas
cltd
cmp
xor
mov
and
push
adc
es
push
rol
jae
sub
or
fwait
mov
mov
push
mov
std
mov
add
clc
lods
sbb
xlat
push
rcrl
mov
jbe
adc
test
repnz
adc
cli
divb
fbstp
lret
jge
ss
sbb
add
cmp
loope
xor
xchg
cld
and
aam
roll
movsl
mov
stc
mov
out
stc
jl
test
rcrb
and
aad
mov
push
rclb
das
mov
lock
mov
sbb
jae
in
mov
mov
jo
mov
add
dec
sti
inc
push
xchg
inc
mov
sbb
push
add
fwait
jge
pop
push
ret
rcr
sahf
ja
ret
test
ret
jb
aad
jae
push
sbb
int3
mov
inc
push
stc
xor
mov
cld
cmp
sub
adc
loopne
pushf
add
aam
xchg
jecxz
push
and
push
jnp
add
enter
push
in
push
xchg
adc
mov
jnp
push
mov
push
push
cmpsl
jl
xchg
xchg
push
and
mov
pop
adcl
cmp
dec
adc
mov
shrl
loopne
sub
jb
gs
inc
jo
in
addr16
sub
outsl
dec
int
cmp
sbb
adc
inc
lahf
push
sahf
sbb
push
adc
add
inc
loopne
or
popa
scas
jae
icebp
sbb
push
bound
andb
or
jg
mov
jge
mov
xchg
cmp
in
cmp
or
push
dec
add
subb
lcall
and
int3
fdivrl
sub
test
mov
test
test
cli
mov
mov
push
lds
inc
insl
adc
sub
sti
push
roll
dec
push
fidivrl
fwait
subps
stos
sarl
adc
or
dec
int
sbbl
test
negl
jno
imul
jg
mov
das
mov
sbb
in
mov
lret
add
push
nop
ljmp
andl
mov
insl
jns
xchg
jbe
test
fsubs
flds
movsb
lahf
pop
jecxz
adc
push
mov
bswap
mov
test
repz
or
add
imul
add
mov
mov
imul
addb
dec
inc
imul
push
jp
push
mov
adc
pushf
add
stos
pop
or
inc
and
inc
adc
sti
push
mov
fbld
or
sahf
aaa
testl
int3
mov
jl
div
scas
iret
or
pop
roll
ljmp
arpl
mov
and
lcall
je
sub
imul
mov
scas
cmp
push
lds
pop
xchg
jo
fst
add
in
inc
repnz
or
inc
out
mov
jno
inc
arpl
repnz
aad
dec
sbb
cwtl
mov
in
cli
cmpsl
pop
cwtl
ja
sbb
xor
dec
or
cmp
push
mov
sti
out
mov
insl
out
xchg
in
cmc
test
pop
push
push
xor
dec
in
jecxz
dec
sarb
addr16
inc
lret
xchg
add
mov
mov
sbb
pop
nop
std
les
pusha
mov
inc
xchg
sub
push
pop
mov
and
jl
in
sti
jnp
out
iret
in
roll
fxtract
xor
icebp
cmp
scas
xchg
addr16
das
popa
out
mov
lret
call
imul
xor
jb
mov
fsubrs
int
imul
adc
mov
add
adc
repz
ret
lahf
xchg
andl
push
and
clc
sub
dec
insl
sbb
inc
shr
or
out
movsl
jne
adc
fstl
cmpsb
aas
inc
in
mov
mov
or
data16
repnz
testl
mov
cltd
adc
ljmp
jle
in
and
and
and
lods
repz
enter
jno
icebp
mov
dec
cs
fstpt
lret
shrb
jnp
mov
fisubs
dec
dec
call
cmp
jae
sbb
mov
mov
ret
rcrl
sbb
int
add
lods
jp
pushf
cmp
std
fs
test
out
loope
mov
imul
xchg
std
jnp
pop
lcall
xor
aad
fwait
xchg
mov
loope
rolb
and
clc
outsl
je
lods
and
pop
imul
inc
push
ja
pop
dec
pop
imul
inc
loope
mov
js
push
or
psubw
sbb
mov
push
stc
sbb
and
xor
adc
xchg
xchg
mov
pushf
imul
clc
aam
mov
or
dec
js
inc
xor
hlt
int
sub
add
loop
lret
or
mov
pop
push
mov
cmp
xchg
mov
pop
cld
addl
mov
inc
mov
jle
fwait
cmp
add
loop
sti
jnp
xchg
jb
inc
xchg
das
ss
mov
sahf
jmp
or
int3
jmp
mov
dec
popf
inc
sbb
dec
ret
imul
cmc
mov
ja
mov
add
mov
mov
andl
mov
jne
adc
pop
jns
andb
in
sub
xchg
adcl
cs
push
dec
and
sbb
dec
lcall
mov
popl
or
mull
jge
mov
pop
jbe
jl
xchg
jns
into
loop
shll
xchg
cwtl
jge
inc
lods
pushl
push
outsl
and
pop
jno
and
dec
sbb
mov
sbb
ret
and
inc
jo
notl
xchg
pop
in
dec
in
mov
clc
pop
movsb
test
mov
xchg
mov
das
mov
mov
add
and
mov
ljmp
out
jo
movsl
lds
xor
stos
popf
cwtl
daa
jecxz
dec
push
pop
inc
and
add
fisttpll
orl
mov
cmp
faddl
lods
cmp
sub
xor
jge
xchg
xor
adc
jns
cmc
mov
mov
xchg
ja
outsb
loopne
cmp
pusha
dec
pop
ja
dec
aam
push
and
movsb
mov
call
fnstenv
test
mov
add
gs
icebp
repnz
mov
fwait
pop
sub
ret
push
sahf
dec
or
or
mov
insl
mov
adc
mov
cs
pop
les
mov
push
cmp
test
xor
call
ljmp
pusha
sub
adc
mov
jns
cmp
jl
outsl
xchg
push
cltd
add
xchg
mov
pop
and
out
pop
cmp
mov
adc
cmp
insl
jge
clc
cmp
and
fdiv
mov
sahf
push
adc
test
cwtl
fnsave
rcr
shlb
sahf
xor
mov
sub
into
jp
sbb
xor
pop
xchg
out
arpl
dec
imul
loop
mov
js
divl
mov
fidivrl
outsl
repz
jo
cmp
loopne
outsb
dec
fmuls
outsl
subl
inc
mov
sbb
or
lods
dec
mov
andl
xor
mov
and
dec
mov
jnp
imul
jnp
lods
adc
orb
shlb
outsb
in
and
sbb
shrb
mov
cltd
ljmp
adc
or
clc
and
cli
outsb
jae
xor
add
outsb
sti
addr16
pop
lock
test
pop
inc
dec
mov
fsubrs
mov
push
push
fwait
xor
sarb
sub
push
mov
sti
mov
nop
xor
mov
outsb
cmp
dec
jmp
cmp
sub
into
rorb
sub
dec
loope
sbb
rclb
clc
adc
push
sbb
scas
pop
mov
cmp
test
call
sbb
mov
sbb
ret
in
xchg
andb
add
lods
sub
xchg
pop
inc
loopne
mov
arpl
xchg
ss
xrelease
push
sub
push
clc
inc
xorl
mov
das
and
xor
in
test
ficompl
add
lock
jno
cli
xor
test
push
cmp
cmp
lret
sub
imul
call
sub
cmp
lcall
mov
pop
xchg
xor
inc
mov
sbb
les
mov
mov
mov
push
sbb
out
mov
ret
cli
adc
sbb
iret
lret
lret
jg
es
add
jns
bound
xchg
aam
and
movb
pop
fsubr
sbb
rolb
outsb
jno
repnz
fcomps
icebp
shlb
iret
pop
mov
fisubl
incb
movsb
insl
inc
imul
xor
push
pop
xchg
cmc
jb
fwait
out
adc
rorb
jecxz
jmp
mov
sub
arpl
cwtl
adc
jb
adc
sbbl
loopne
mov
xor
aam
and
loop
loopne
and
jecxz
pop
and
jo
repnz
gs
cmpsb
lea
jbe
sub
fdivl
out
dec
fistl
sti
inc
jb
data16
insl
outsb
mov
lret
enter
in
push
cmc
sub
ds
es
je
adc
addr16
roll
push
jns
shlb
in
mov
shrb
add
movsl
adcl
pop
jl
xor
cmpsl
jge
sbb
adc
arpl
rclb
shr
loope
scas
cld
rcll
je
pop
cltd
cmp
dec
adc
mov
es
scas
pushf
add
add
dec
test
cli
shlb
fmuls
jne
xchg
test
mov
or
popf
sub
xchg
fdivp
jle
cmp
fiadds
notl
sub
ret
shrb
dec
test
fstps
pop
fsts
aad
push
push
jmp
iret
orl
mov
xchg
hlt
sbb
aad
cltd
je
movsb
or
mov
pushf
imul
push
in
inc
pusha
inc
insl
mov
xchg
jb
subb
sub
insb
dec
cli
out
out
jecxz
ret
pop
lods
cmp
pop
pusha
scas
lea
movsb
cmpsl
jbe
push
lret
mov
jb,pt
xchg
rcrb
push
jle
push
cmp
ss
xchg
aaa
and
aam
fisttpll
jb
repz
lahf
push
lret
stos
cli
rolb
mov
jbe
cmpsw
pop
or
iret
jae
out
mov
aaa
mov
cmp
in
push
ret
cmp
nop
fdivs
fstpt
out
movsl
stos
adc
jecxz
jecxz
jg
mov
jmp
xchg
hlt
in
xor
xchg
aas
jne
adc
insb
ja
icebp
sub
mov
pushf
out
xchg
xchg
ret
xor
add
or
inc
test
cmc
sbb
pop
ljmp
adc
iret
adc
dec
mov
xchg
adc
or
inc
cmp
push
jge
dec
clc
sbb
add
leave
jp
sub
ss
xchg
call
xlat
bound
inc
cwtl
dec
cmpsl
dec
aad
jg
ficoml
or
or
jmp
out
inc
pushaw
jae
pop
xchg
aam
pop
or
cmp
imul
scas
cli
jge
push
hlt
lods
xchg
addr16
push
push
mov
ret
test
int
aad
pop
push
das
add
movsb
adc
rcrl
and
jle
in
mov
imul
es
push
cmc
pmulhuw
adc
testl
cmp
push
ljmp
lret
xlat
cmpsb
or
mov
xor
xlat
fiadds
into
jns
inc
adc
inc
mov
jl
aas
sbb
jl
mov
nop
cmp
cmp
mov
cmp
cld
cmovg
xchg
nop
inc
mov
aad
sti
xchg
out
jnp
fstpl
mov
neg
aam
and
lahf
and
rcrb
xchg
daa
loope
sbb
call
xchg
mov
out
push
push
je
dec
pop
mov
cmp
aas
and
popa
adc
daa
push
mov
mov
sbb
ja
outsb
fdivl
enter
test
push
mov
fcom
add
ret
push
mov
aaa
aad
js
or
popa
out
aas
jl
gs
lret
add
add
incb
or
sbb
insl
loopne
cmpsl
int
push
mov
inc
call
add
jnp
insl
repz
pop
shlb
mov
fiaddl
xchg
loop
lods
xchg
xchg
das
jmp
inc
sahf
jnp
jbe
ljmp
pop
bound
cli
inc
jle
imul
sub
mov
daa
mov
add
xchg
in
jmp
ret
int
loopne
shll
push
jae
div
pushf
mov
mov
int
sub
ljmp
sbb
inc
aas
sbb
mov
hlt
ss
mov
in
into
cmpsl
push
int
xchg
pop
push
aaa
xchg
push
gs
movsb
movsl
pop
sarl
push
loope
int3
add
fidivs
notb
jp
movsl
push
xchg
xchg
cmpsb
inc
test
sbbb
xchg
iret
mov
call
jl
into
sahf
jmp
ss
and
popf
push
loop
mov
mov
jne
test
adc
stos
jle
fnstenv
pop
pop
xchg
insl
cwtl
push
add
inc
fcompl
sbb
mov
mov
adc
mov
es
mov
xor
xchg
mov
pop
mov
mov
adc
rdmsr
loopne
or
dec
leave
pushl
cld
sahf
ret
jnp
int
jle
test
call
fisubrs
or
in
mov
pop
das
dec
and
mov
testl
jae
xor
in
loope
jae
mov
lock
lods
call
and
inc
insb
mov
dec
call
xorb
cmp
mov
cmp
ss
lods
jno
jo
test
popf
jg
pop
mov
and
outsl
lea
lret
mov
mov
pop
or
lahf
cmpxchg
and
icebp
push
xchg
shlb
mov
pop
and
cmc
lcall
cmp
scas
mov
cs
inc
roll
hlt
and
int3
daa
xchg
aad
into
fists
dec
pop
push
cmpsl
jp
and
clc
pop
mov
mov
xchg
jo
lret
ja
mov
das
and
dec
mov
xchg
xor
lahf
mov
testl
into
xor
cmpsb
movsb
mov
addr16
inc
sbb
cld
icebp
addr16
or
ljmp
aad
adc
nop
add
xor
ja
inc
loop
pop
insl
imul
ds
test
out
ss
stc
int3
jno
andl
mov
add
fstps
in
xor
sahf
mov
lods
mov
test
ja
xchg
mov
out
fs
push
shlb
subl
shr
and
in
andl
inc
dec
ret
sub
shll
shrl
xor
daa
inc
out
jl
shrl
push
mov
mov
loopne
sub
jno
loope
ret
repz
je
sbb
or
sub
clc
and
mov
jnp
pop
mov
lahf
lcall
pop
ja
ds
rorb
dec
mov
div
out
and
push
and
pushl
mov
mov
jl
stos
pop
pop
test
xor
daa
mov
push
or
outsb
xor
jno
test
gs
lret
outsb
lods
in
jl
and
jmp
lcall
dec
imul
jp,pt
ret
les
jbe
lods
lret
sub
mov
and
sub
mov
mov
jo
xor
mov
adcl
ffreep
addr16
fstps
mov
sub
inc
adc
cmc
pop
out
ficoms
mov
xor
sub
dec
sbb
icebp
xor
add
cmpb
sub
aad
test
and
sub
das
cmpsb
mov
and
lods
int3
jge
call
jno
xchg
or
push
out
pusha
sub
pop
stc
lods
scas
mov
mov
mov
test
shld
idivb
je
outsb
int
sbbb
rol
push
loop
add
mov
imul
arpl
push
popf
add
jo
inc
bound
jno
push
repnz
mov
in
push
mov
adc
push
jmp
jecxz
lods
aas
mov
mov
rcl
insb
sub
iret
adc
in
mov
inc
int
mov
int3
je
les
ds
test
and
js
inc
loopne
in
test
jle
cmpsl
jns
push
les
cmp
sbb
lock
jmp
movsb
mov
and
sub
mov
adc
push
jmp
ret
jg
clc
lds
sbb
shrb
andl
int3
out
enter
cld
push
sbb
mov
lds
lcall
je
call
daa
ja
push
aaa
push
int
xor
adc
lret
inc
xlat
cmp
mov
add
dec
pop
call
push
xorb
xlat
xchg
out
fidivs
pop
mov
imul
leave
push
mov
fwait
inc
adc
loopne
aas
mov
and
push
inc
loope
dec
ds
or
mov
negb
adc
push
jno
rcr
in
cmp
icebp
out
sub
inc
adc
loope
push
and
lcall
int3
push
jecxz
out
lds
ljmp
and
mov
orl
pop
dec
mov
cmp
dec
xchg
push
fldt
call
cmp
addr16
inc
mov
inc
into
adc
cmp
add
xchg
pop
mov
lret
cmp
dec
std
ret
mov
mov
mov
sub
adcb
sub
push
aad
fxch
adc
neg
adc
les
xchg
lret
xor
jg
out
outsl
mov
mov
xor
es
std
mov
mov
and
push
mov
push
inc
inc
mov
sahf
mov
or
popf
icebp
inc
and
fldl
pop
push
mov
sub
loop
call
cwtl
xchg
mov
push
jno
and
push
xorl
push
adc
jp
aam
add
imul
jecxz
adc
adc
bound
xchg
popa
adc
mov
jl
mov
push
cmp
inc
adc
pop
sahf
das
jp
xchg
mov
out
and
mov
mov
xor
xchg
popa
mov
addb
jns
stos
mov
inc
ret
mov
fbld
mov
xor
cmpsl
or
ljmp
fmuls
mov
das
mov
mov
insl
jmp
or
mov
lea
jg
push
cmp
out
xchg
fidivl
call
sub
push
xor
jnp
cs
imul
adc
loopne
cmp
std
jns
add
mov
push
add
xchg
xchg
rolb
inc
and
push
lock
popf
mov
es
mov
ds
pop
cli
or
mov
push
cs
pusha
ficomps
mov
sbb
cmp
mov
je
sub
mov
jb
inc
imul
cwtl
pushf
sbb
mov
push
xchg
or
stc
mov
out
in
pop
sbb
repz
popf
rclb
add
push
adc
out
mov
and
and
dec
xlat
mov
fmul
dec
xor
push
fstpl
push
mov
push
shrb
sahf
adc
jge
mov
cld
push
jle
push
in
mov
fsub
pop
add
pushf
jge
sub
mov
inc
mov
je
or
adc
pushf
pop
ds
jp
leave
push
hlt
jb
clc
rcr
jae
ret
fnstcw
dec
arpl
jp
push
inc
push
inc
mov
mov
lea
imul
scas
jb
cwtl
aad
inc
out
sarb
push
push
addr16
xor
dec
sub
sbb
and
clc
xchg
mov
jl
pop
out
aas
stos
add
test
jecxz
nop
aas
stos
xchg
repnz
mov
mov
push
iret
adc
nop
pop
xor
dec
gs
pushf
fs
sbb
cmp
inc
ret
mov
insl
lcall
xchg
mov
cmp
repz
fstps
or
icebp
xlat
xor
dec
sahf
pop
les
adc
scas
scas
vmovdqa
and
cmpsl
adc
add
sti
sub
aad
fadds
pop
or
mov
das
push
cmp
mov
sbb
push
lahf
mov
cmp
test
push
cmpsl
movsl
push
fcomp
mov
cltd
fnsave
inc
cmpsl
inc
lcall
divb
or
mov
gs
cwtl
iret
adc
push
mov
jnp
mov
in
add
mov
and
pop
addb
adc
shlb
sbb
mov
jae
pop
movzbl
sahf
imul
pusha
dec
addb
mov
imul
xlat
mov
pop
mul
das
ret
rcrl
adcl
stos
xor
stos
cmp
fidivrs
jb
cmp
add
jns
aas
xchg
das
sbb
push
jle
nop
xchg
and
mov
push
movsl
ret
dec
mov
popa
inc
data16
cmpsl
fld
aaa
mov
ret
data16
fisttpll
cs
fldt
lcall
inc
fs
adc
sbb
call
int3
push
inc
js
movsb
mov
mov
or
outsb
sub
adc
imul
dec
sub
cs
mov
fiadds
sub
dec
sub
enter
lds
cmp
sub
pop
sub
es
in
jmp
or
jl
rorb
dec
outsb
xor
lret
aam
jmp
jecxz
xchg
cli
and
fadds
pop
int3
hlt
xor
sti
pop
sub
xchg
add
ret
cmp
jge
inc
in
push
ljmp
imul
adc
sbb
jp
mov
out
movsl
daa
add
mov
mov
jne
dec
lock
xor
paddq
ret
out
adc
sti
test
loop
decl
and
sbb
cmpsl
xchg
fistl
lcall
cmp
das
add
out
push
addr16
or
pop
pop
jge
pop
inc
adc
push
push
cmp
shrb
or
outsb
and
lret
scas
push
cmp
movsl
adc
lahf
repz
sbb
iret
xchg
cmp
adc
pop
sti
in
jle
outsl
xchg
or
sbb
dec
movsl
cwtl
jge
mov
imul
mov
out
mov
mov
jecxz
insb
push
dec
xchg
outsb
xchg
stc
imulb
and
cmp
stos
andl
sbb
xchg
into
mov
cmp
pop
pop
insl
lahf
pop
or
imul
mov
shl
pop
inc
popl
es
inc
adc
ret
shll
in
add
cmc
xlat
or
jno
lret
push
jb
jecxz
or
lods
fwait
adc
xchg
sahf
int3
test
inc
pusha
movsl
aad
xor
mov
push
shl
fiaddl
adc
shrl
icebp
test
xor
adc
lahf
and
adc
jb
inc
push
mov
test
ss
lods
push
cwtl
testl
rorl
jecxz
xchg
ds
into
iret
lcall
in
hlt
and
sbb
and
or
out
jecxz
mov
mov
or
shll
cmp
lds
loop
xchg
aad
mov
adc
xlat
mov
stos
or
pusha
negb
icebp
and
out
je
cs
inc
repz
cmpsb
gs
or
jns
mov
std
xlat
adc
orl
cmp
jb
push
xchg
pop
pop
sub
and
push
leave
fisttpll
imul
loope
sub
or
fs
mov
mov
adc
xor
jbe
inc
pop
orb
fs
adc
inc
add
adc
mov
movsl
loopne
mov
mov
pop
fistpll
fcomip
mov
rorl
or
mov
mov
bound
and
lds
mov
inc
xchg
cli
arpl
fidivs
lcall
xchg
mov
mov
push
iret
push
dec
and
mov
sub
jle
cmp
inc
in
leave
xchg
pop
push
cli
bound
lahf
hlt
xchg
cmp
adc
lret
pop
push
pop
outsl
xorb
into
dec
push
fiaddl
cmp
ss
mov
stc
fwait
addb
loope
pop
mov
mov
or
fninit
and
lock
jo
mov
inc
fmuls
bound
jecxz
push
mov
xor
mov
mov
ja
fstps
and
or
test
out
xchg
rcrb
fildll
shl
pop
pop
jmp
pop
mov
and
outsb
pop
imul
rep
push
pop
fsubrp
iret
jg
sub
mov
out
cli
pop
mov
mov
adc
cs
dec
mov
shrl
stc
xchg
jb
add
xchg
and
xor
add
adc
or
pop
in
cmp
les
dec
pushf
lods
inc
jg
jecxz
mov
sub
shll
lcall
test
jne
pop
outsl
imul
inc
imul
pause
push
int3
mov
in
inc
iret
pop
pop
xor
mov
sar
inc
mov
mov
insl
jmp
mov
ds
out
jge
xor
fs
or
sub
adc
bound
push
jno
xchg
dec
and
in
mov
add
sub
xor
xor
or
adc
es
fnstsw
cltd
jno
add
pop
or
sub
popf
jle
icebp
sahf
xor
dec
push
push
dec
jl
mov
loop
lcall
gs
jae
adc
mov
push
jae
data16
mov
xchg
adc
aam
shl
sarl
leave
cmpb
mulb
or
enter
pop
popf
jl
bound
adcb
jg
es
aam
sub
sub
and
mov
shll
fmull
in
xchg
arpl
push
xor
mov
in
test
adc
testl
sub
imul
nop
addl
cmp
xor
roll
incl
adc
in
into
lcall
mov
sbb
pop
cmp
nop
adc
shrl
imul
push
push
iret
jmp
add
pop
xchg
jb
mov
leave
hlt
cmp
jg
lahf
testb
xor
cmpsb
cmp
lahf
push
aad
sbb
mov
lds
add
stos
jge
orps
push
insl
std
mov
lock
push
mov
enter
les
or
push
cmp
setae
mov
cwtl
mov
adc
outsl
iret
adc
push
xor
and
or
std
push
int3
popf
and
inc
cmp
pop
push
ret
xchg
adc
mov
fildll
sbb
pusha
loope
jp
loop
int3
mov
lods
stos
decb
add
arpl
sbb
push
cmp
mov
jecxz
fs
push
pop
push
es
icebp
outsb
lcall
mov
push
pop
leave
dec
add
push
iret
lret
inc
pop
push
lahf
dec
rolb
outsl
pop
xchg
dec
icebp
pop
stc
test
xor
xchg
popaw
les
pop
xchg
pop
push
mov
cmpsl
sub
cmc
das
push
push
and
push
pop
push
sahf
jns
xchg
xor
addr16
jle
mov
sar
add
pop
jmp
in
mov
cmc
cmc
movsb
jl
xor
shl
call
or
or
jo
shl
mov
movsl
enter
das
and
cwtl
cmp
js
or
sbb
int
jl
scas
sbb
out
fistpll
mov
and
mov
xor
mov
mov
fcoms
addb
inc
adc
das
bound
aas
xchg
mov
cs
dec
cmpb
cs
dec
lods
jno
xlat
dec
shrl
hlt
popa
add
fnstcw
mov
jge
shrb
jecxz
xorl
leave
mov
jmp
repz
insl
loop
andl
test
sbb
mov
aad
push
sbb
jbe
push
cmp
mov
or
mov
dec
scas
jbe
sbb
pop
addr16
and
mov
lahf
sbb
or
push
and
int
add
jae
xchg
push
inc
pop
xchg
add
or
or
push
inc
lock
push
jge,pn
adcb
dec
loope
jae
in
sub
mov
ret
xchg
enter
mov
pop
adc
or
imul
subb
fisubl
mov
xchg
mov
ja
or
inc
aam
sar
adc
xchg
inc
jg
vminpd
xchg
pop
adc
fwait
into
lret
xchg
pmaxub
cmp
cmpsb
and
cltd
dec
rolb
push
ret
stc
adc
sub
jle
jmp
jo
fisubl
mov
in
jge
xor
mov
data16
sbb
adc
scas
in
cmpl
mov
or
loop
stc
adc
jp
loope
js
pop
sahf
fisttps
fsts
jecxz
test
or
sbb
pop
add
fsubs
das
sahf
mov
jecxz
and
leave
aas
in
call
pop
jbe
sti
mov
push
jecxz
outsl
inc
idivl
out
push
inc
lds
lds
repnz
pop
and
sub
sbb
add
je
inc
jle
fstl
lock
cs
mov
xchg
lahf
xor
jo
ficomps
fmull
xchg
jnp
pop
std
push
adc
xor
pop
mull
clc
testb
push
add
popf
jno
stc
mov
jbe
mov
test
jmp
push
outsb
cmp
dec
dec
mov
xchg
popa
mov
xor
adc
adc
push
fistpll
ret
adc
mov
inc
test
andps
in
adc
fsubl
cld
inc
shlb
mov
inc
jno
sub
jmp
dec
jne
ss
fists
sarl
pusha
loopne
add
outsb
fs
dec
push
test
and
stc
mov
enter
repz
jno
call
add
xchg
std
jmp
jns
push
cmp
sbbb
pop
mov
cmp
mov
cmc
mov
or
push
mov
inc
mov
pop
data16
xchg
cmp
shl
ljmp
int3
mov
cmp
pandn
out
dec
fsubrl
insl
bts
add
add
ljmp
cmp
insl
add
jmp
cmp
dec
sahf
add
das
inc
sub
mov
out
inc
add
js
lods
and
lock
jns
adc
push
mov
mov
pop
lret
mov
movsl
shlb
int3
pusha
jmp
xor
xchg
data16
mov
bound
lahf
ret
push
incb
xchg
gs
test
pop
in
dec
mov
pop
aad
rcrb
pop
xor
or
mull
shl
xlat
and
inc
jge
out
jo
add
cmc
addb
iretw
xor
mov
xor
ds
addr16
lds
jo
jmp
add
shrb
in
inc
add
outsb
out
jg
sbbl
stos
outsl
icebp
jno
inc
pop
xchg
dec
mov
mov
cs
mov
popa
scas
je
push
mov
adc
aad
pop
xor
inc
std
xor
or
inc
inc
lock
shll
paddd
in
adc
lea
sbb
movsl
repnz
test
std
popf
push
out
pushf
jmp
xchg
cli
testb
xorl
mov
or
and
mov
push
shlb
or
push
pop
dec
jle
mov
or
nop
pop
mov
rol
mov
jo
or
xchg
or
or
insl
adc
push
jnp
sub
mov
roll
imull
cmp
out
out
fldl
lods
leave
pop
push
sub
ss
stos
cmp
cltd
add
jp
mov
mov
push
pop
outsl
push
jb
add
or
pand
lahf
mov
cmpsl
rcll
and
stc
mov
sbb
sub
lret
lea
mov
mov
aaa
xor
out
je
rcrl
js
scas
cmp
fwait
cmp
mov
sbb
cmp
leave
cltd
repnz
into
pop
mov
cmp
lds
adcl
enter
ret
insb
jb
add
adc
push
hlt
pop
cmp
push
gs
dec
hlt
dec
loope
dec
jnp
or
sbb
jmp
inc
ret
push
and
sub
mov
mov
mov
and
or
addr16
adc
movsb
xchg
push
into
xchg
outsb
jle
push
aaa
and
jp
jle
cmp
out
dec
out
mov
adc
cmp
inc
lret
or
mov
test
scas
pop
mov
popa
sub
ds
adc
dec
sub
pop
rcl
adc
sub
jp
inc
push
clc
ffree
jl
adc
into
xor
push
fidivrs
mov
mov
movsb
mov
inc
fcompl
jp
jnp
mov
ss
jp
lock
sbb
sti
inc
cmpl
es
dec
pop
cmp
ss
fidivl
xchg
mov
xor
pop
pop
push
cmc
adc
loop
subb
cmp
ss
test
cld
cmp
mov
je
sub
xchg
xchg
mov
mov
out
mov
adc
jns
cwtl
movsl
dec
lods
xlat
insl
push
shll
sbb
pop
adc
cmp
cwtl
mov
dec
xchg
pusha
jmp
mov
fcmovbe
imul
push
xor
loopne
mov
scas
dec
aam
mov
cli
pop
add
outsb
insb
push
xchg
xor
cld
insl
sbb
adc
dec
test
loop
xor
mov
sbb
and
shr
xchg
pop
in
mov
dec
cmp
ficomps
inc
fwait
and
jno
pop
call
ja
in
aam
pusha
loopne
mov
dec
shl
loope
mov
mov
fwait
inc
sub
add
or
sub
cwtl
addr16
sub
leave
mov
push
outsl
xor
inc
outsl
add
inc
je
adc
cmpl
mov
push
mov
jecxz
mov
fimull
arpl
pop
push
xor
xor
cltd
sbb
inc
popf
clc
pop
cld
add
fistps
or
ds
es
mov
sub
mov
pop
push
cs
and
pusha
jns
xchg
inc
testl
mov
ljmp
mulb
fwait
shrl
in
cmpsl
popa
shll
lods
daa
jnp
outsl
push
mov
testl
adc
in
push
in
lret
pop
mov
test
jge
sub
sbb
jle
xor
jae
push
jbe
enter
add
mov
xchg
add
ficoms
inc
mov
inc
idiv
mov
pop
jg,pn
pop
pop
lcall
or
arpl
mov
cltd
pop
in
xor
in
movsl
cmp
lahf
xchg
lret
out
fndisi(8087
mov
cmp
imul
das
cmp
mov
and
rcrb
es
lret
add
jl,pn
int3
outsb
inc
sbb
sahf
or
dec
xchg
es
sbb
fsubs
sbb
mov
jno
or
addr16
add
sarb
sbb
rcll
hlt
mov
jg
push
mov
lock
orb
dec
push
sbb
or
mov
push
mov
adc
out
mov
sub
repnz
pop
cmp
xor
xor
jmp
iret
dec
mov
pop
shrb
or
xchg
jge
mov
shlb
lret
inc
push
lods
cld
cmpsl
xor
sub
dec
add
push
xor
mov
lret
mulb
dec
jg
pop
add
cmp
sub
dec
xlat
dec
ja
or
lock
xor
ljmp
inc
out
hlt
push
pop
in
inc
or
pusha
or
cwtl
lahf
or
repnz
jl
push
adc
loopne
js
shr
out
add
sub
int
mov
dec
out
imul
pop
jno
mov
iret
sub
xor
dec
jbe
iret
sub
fnstcw
add
enter
cwtl
add
mov
mov
pop
out
jne
shl
jl
xchg
sub
push
mov
sub
dec
mov
sub
pop
cli
adc
mov
icebp
adc
lahf
mov
push
loopne
sub
push
xchg
sbb
daa
push
mov
and
ret
jp
out
add
mov
es
imul
lea
inc
jne
ljmp
icebp
lcall
adc
inc
xlat
xchg
aas
mov
xchg
lods
mov
push
call
sub
int
loopne
inc
rclb
jmp
inc
inc
iret
repnz
lret
jnp
dec
negb
push
or
cli
and
das
cmp
imul
sub
flds
sub
scas
xchg
or
inc
out
adc
andb
shlb
inc
out
movsb
in
sahf
and
pop
add
stc
lret
js
jl
outsb
pop
scas
lret
scas
dec
dec
lock
mov
ret
jg
add
pop
inc
js
mov
loope
or
shll
or
mov
sti
mov
jo
test
addr16
xchg
push
lcall
ss
jecxz
xchg
or
pop
mov
and
xor
mov
repz
xor
les
adc
cmc
mov
lcall
xchg
out
ljmp
ret
push
jo
iret
pop
push
lds
addr16
shl
and
inc
ljmp
inc
fwait
cld
adc
or
jno
dec
shlb
test
xchg
movsl
sub
cmpl
xor
and
push
stos
rorl
leave
dec
sub
in
test
scas
in
inc
push
out
pop
fs
nop
hlt
enter
pushl
sub
out
cmp
insl
and
icebp
xchg
test
push
adc
mov
and
out
push
adc
int3
mov
and
pop
dec
bound
xchg
fmuls
jle
jne
or
loope
fsubl
sar
out
or
mov
in
fs
out
outsb
push
imul
mov
mov
repz
sub
je
fs
fs
xchg
jp
div
add
movsb
sbb
dec
pusha
xorl
leave
dec
iret
repz
lcall
in
lds
cmp
fstp
cmp
or
ds
lret
mov
shlb
popa
mov
js
jl
mov
mov
fwait
xor
jmp
clc
dec
clc
fcmovne
outsl
daa
in
mov
sub
test
push
popa
push
lret
jl
jge
daa
add
add
add
and
add
xor
add
nop
add
and
add
and
xchg
mov
push
mov
push
out
pop
mov
and
adc
xchg
add
sbb
lret
aaa
ret
xchg
cmp
inc
fwait
and
push
fldl
insb
les
inc
loopne
jno
inc
andl
sub
lret
push
int
push
jecxz
xchg
jnp
hlt
cwtl
ljmp
xchg
mov
adc
insl
push
adc
sbb
dec
popf
pop
daa
mov
dec
dec
or
mov
push
mov
xor
int
or
shll
lahf
hlt
out
movsl
mov
xchg
cltd
aam
pop
dec
in
or
sbb
dec
sahf
adc
jl
data16
mov
xor
gs
rcrl
or
pop
jg
add
movb
test
inc
loop
ljmp
and
ds
cmc
shrl
inc
adc
bound
mov
xlat
int
fisubl
arpl
mov
or
jo
jb,pn
je
or
sbb
xchg
add
pop
cmp
rep
dec
adcl
cmp
mov
sar
pop
or
lds
sbb
dec
cli
inc
mov
xchg
xlat
xor
stos
mov
xor
ret
into
mov
test
jp
enter
loop
shrb
in
fisttpll
dec
add
out
fists
movsl
outsb
fadds
sti
dec
jge
mov
sbb
cmp
out
int
jge
lock
scas
push
jae
mov
pop
add
loope
adc
jo,pt
sti
int
les
fcmovnb
out
pop
and
leave
cwtl
in
int
std
aam
sub
and
daa
enter
mov
push
xlat
fistpll
aas
cltd
ret
inc
inc
dec
outsb
adc
cmp
outsb
mov
add
data16
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jmp
out
sbb
cli
stos
or
push
and
add
sahf
jg
xchg
pop
add
push
push
mov
pop
pop
push
mov
pop
pushl
jmp
sub
scas
dec
fsub
pop
jmp
popa
xchg
popf
adc
loopne
pop
aas
or
add
mov
xor
mov
xor
mov
mov
jo
sbb
and
sub
sbb
add
mov
cmp
jne
jmp
jmp
jmp
sub
pop
shlb
int3
adc
push
mull
xchg
aad
stc
pop
dec
stos
adc
jmp
push
inc
jno
and
mov
testb
clc
sub
pop
push
stos
adc
add
pop
xlat
icebp
mov
nop
js
mov
ljmp
sub
jne
cli
andl
dec
mov
bound
in
and
js
push
push
pop
jp
sbb
or
into
add
movsb
daa
clc
push
and
push
pushf
jo
dec
stos
adc
push
pop
test
cmp
sarl
jae
jb
loopne
popl
in
rcl
jecxz
mov
sub
xor
mov
jbe
lods
sub
add
cli
shr
mov
int3
mov
jecxz
cs
movsl
adc
push
or
int3
jle
ja
ljmp
clc
mov
mov
adc
xchg
xor
popa
inc
xor
popf
loope
lret
pop
dec
out
out
jge
mov
lods
outsl
mov
cld
mov
add
push
sub
cwtl
sbb
add
movsl
lods
sub
xchg
pusha
inc
movsb
gs
sub
in
rcrb
incb
xor
jno
add
sub
negl
addr16
lahf
jo
xchg
jmp
mov
sub
dec
stc
xor
in
in
and
int3
inc
std
xor
in
pop
stc
sub
xchg
add
in
popf
sub
dec
stc
xor
ja
cmpps
fwait
xchg
lea
mov
pop
fstps
push
arpl
adc
push
mov
sub
add
sub
stc
xor
cmp
stos
and
xchg
xor
out
jge
test
stc
xor
sbbl
sub
or
jae
jg
mov
popf
leave
inc
mov
pusha
adc
movsl
dec
stos
xor
xor
pop
test
dec
stc
sub
dec
stc
xor
add
lcall
xor
dec
lcall
dec
add
sbb
aas
mov
add
notb
stc
sub
mov
shrb
test
dec
dec
and
jne
test
push
movsl
mov
scas
movsb
fmull
ja
push
push
or
repz
push
movsb
mov
push
or
insl
popf
out
sbb
inc
gs
jnp
add
dec
cltd
push
adc
test
xor
mov
dec
jno
daa
int3
lds
into
mov
ret
push
imul
push
cld
cmp
jge
popf
fs
sbb
scas
mov
icebp
imul
es
mov
push
idivb
imul
shr
iret
pop
xchg
mov
dec
sub
mov
rcrb
arpl
fdiv
lcall
add
ror
subb
mov
or
pushf
inc
int3
pop
rorl
aam
daa
enter
rcrb
orl
push
cmp
int
rorl
or
orl
pop
shr
iret
hlt
mov
xor
pop
cmp
pop
rcrl
fldenv
iret
pop
test
sbb
imul
pop
mov
divps
test
movsl
fsubl
test
jmp
sbb
jecxz
pop
rcrl
push
aad
iret
repz
mov
out
iret
pop
sub
pop
shrl
pop
aad
iret
pop
push
out
add
mov
iret
pop
mov
out
iret
mov
testb
ror
iret
mov
pop
iret
pop
shrl
push
aad
iret
pop
cmp
xor
dec
loop
push
rcrb
xor
pop
cmp
int3
aam
cmc
add
imul
xchg
shr
test
pop
xchg
pop
shr
dec
sbb
test
out
iret
xchg
pop
test
daa
jecxz
pop
scas
rcrw
imul
shrl
fs
jmp
xchg
lods
fldz
iret
aam
stc
repz
daa
and
pop
cmpsl
dec
pushf
add
rcrl
pop
sarl
iret
pop
pop
imul
mov
out
iret
decb
imul
loop
add
pop
pusha
rol
xchg
push
push
inc
dec
loop
jecxz
pop
pop
xor
pop
inc
pop
shrl
andb
shr
cmp
or
iret
repz
test
add
pop
ror
iret
aaa
outsb
xchg
ficompl
daa
pop
shr
iret
pushf
iret
pop
shr
iret
pop
int3
push
cld
iret
push
push
pop
fdivrp
mov
insl
test
imul
xlat
xor
bound
adc
test
xchg
lret
mov
sbb
shlb
insb
xchg
dec
mov
out
iret
pop
xchg
lret
mov
int
in
clc
test
adc
sbb
insb
add
inc
xor
popf
shlb
insb
xchg
nop
sbb
aad
xchg
cmp
fadd
in
jb
iret
pop
shl
mov
sub
lcall
pop
pop
adc
in
inc
in
xor
shl
mov
sub
mov
pop
pop
adc
in
pop
je
xchg
daa
mov
lret
mov
and
push
pop
pop
adc
inc
fwait
rcrl
out
int
in
clc
test
adc
sbb
insb
add
inc
xor
jb
loop
pop
shl
cmc
dec
fadds
rcrb
in
push
cmp
out
and
lret
mov
gs
sbb
adcl
dec
inc
add
mov
insb
shlb
loop
je
repnz
fmull
test
push
xor
jno
dec
inc
fdivs
mov
mov
push
shr
iret
pop
shrl
dec
cmc
daa
rcrb
pop
add
cmp
out
pop
mov
call
ficomps
test
sub
jle
pop
shr
adcb
add
pop
fs
stos
pop
shr
test
push
pop
shr
cmpsl
push
shr
iret
mov
inc
add
and
pop
jae
inc
das
aad
out
int3
pop
shrl
shrb
push
push
scas
out
iret
lock
adc
push
bound
add
inc
or
cli
pusha
jne
test
mov
pop
sahf
dec
xchg
pop
ljmp
mov
cmp
adc
adc
int3
jecxz
in
loop
movsl
xchg
scas
pop
neg
jae
je
popf
jnp
ljmp
add
in
cmp
sbb
test
pop
shr
iret
pop
shr
iret
pop
shr
iret
pop
shr
iret
pop
shr
iret
pop
shr
iret
pop
shll
pop
and
pop
rcrl
iret
pop
shr
iret
sbb
shr
iret
pop
shr
iret
pop
shl
scas
pop
shr
iret
pop
shr
iret
pop
shr
iret
pop
shr
iret
pop
shr
lcall
out
cltd
pop
sarl
sbb
cltd
push
mov
ds
jno
mov
mov
fimuls
leave
pop
push
and
inc
or
iret
lret
loopne
adc
lcall
ja
xchg
push
pop
ss
sbb
adc
push
pop
in
xor
push
mov
or
jl
jnp
sbb
stos
shll
jl
scas
ss
inc
adc
adc
repz
mov
mov
bound
rcll
or
mov
jne
push
and
out
push
cltd
fdivrs
cmp
cmp
push
fstps
lock
and
add
sub
fcomip
jge
loopne
and
lea
mov
push
mov
into
inc
dec
adcb
out
pop
or
ficoml
sahf
pop
xchg
xchg
cmpsl
popf
fsubrl
add
and
add
add
add
sbb
add
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
or
mov
sbb
add
sbb
add
sbb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
addb
add
icebp
sbb
add
add
add
sbb
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
nop
or
add
add
push
pop
cmp
adc
dec
nop
clc
jg
lcall
and
enter
sahf
add
aam
nop
mov
dec
mov
jecxz
sub
enter
inc
lods
repnz
pusha
push
inc
and
scas
push
fs
dec
or
xchg
adc
add
cmp
inc
add
push
je
imul
sbb
push
and
mov
shrb
and
add
inc
aam
mov
adc
add
pop
push
dec
bound
arpl
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
aaa
sbb
and
and
pusha
in
jo
insb
sbb
push
xchg
add
in
jb
cmp
push
sbb
sbb
or
and
fcoms
add
cmp
sbb
add
lock
test
sti
inc
add
in
adc
les
loopne
call
or
inc
inc
sub
je
movzwl
js
sbb
mov
cmp
push
pop
lods
or
cmp
xor
or
cmp
sbb
sub
and
nop
lock
push
mov
cmp
cmpl
jne
push
add
call
add
test
jne
faddl
pop
mov
mov
jb
aas
or
mov
add
lea
js
sbb
mov
addb
inc
cmp
jne
in
icebp
cmp
adc
push
popf
pop
nop
mov
xor
add
rcr
daa
add
dec
cld
add
mov
aam
sbb
iret
or
outsl
adc
pop
cwtl
add
push
add
iret
add
push
push
adc
mov
nop
push
push
pop
loopne
icebp
into
adc
add
xchg
add
sbb
aaa
pop
inc
nop
cmc
cmp
inc
addl
rolb
push
or
push
jne
adc
adc
call
xchg
add
or
inc
add
jb
push
pusha
add
ret
scas
sbb
hlt
jmp
ds
aas
push
or
ret
test
add
es
call
add
mov
xor
insb
call
ret
std
sbbb
fmul
ja
pop
and
jge
mov
incl
sub
cmpl
add
gs
push
or
inc
add
into
mov
cli
iret
mov
out
jmp
sub
cmp
stc
mov
adc
mov
add
test
dec
or
je
ret
test
sti
repz
pop
xchg
adc
add
xchg
cmp
adc
pop
mov
jnp
add
out
or
mov
inc
push
add
and
push
and
cmp
mov
test
je
add
sarl
add
adc
inc
in
mov
add
decl
clc
aad
fs
psubusw
dec
test
js
push
push
add
or
push
pop
jne
pop
scas
jns
inc
push
and
jle
ja
add
mov
insb
in
cli
dec
inc
add
dec
in
xor
or
incl
scas
push
mov
pop
sbb
rol
sub
jnp
add
repz
jae
nop
pmaxsw
and
add
add
xor
push
hlt
mov
stos
or
lock
push
jae
xchg
sub
lea
adc
adc
add
cmpsl
data16
in
jle
add
sbb
insb
or
adc
cmpsb
shrb
mov
hlt
jmp
ljmp
add
sbb
ret
xchg
and
loop
or
mov
or
inc
mov
lahf
cmp
pop
pusha
jle
es
mov
mov
std
push
mov
cmp
sub
push
add
pop
scas
shll
xor
dec
mov
or
xchg
popa
je
jl
add
adcb
or
add
leave
xchg
orb
inc
test
and
jae
mov
rorb
add
addl
push
mov
cmp
mov
add
aas
xchg
data16
pop
aam
xor
ud2
jbe
call
and
pop
add
aas
je
lods
inc
dec
add
mov
adc
xor
leave
add
add
int3
arpl
cmp
and
movsl
scas
and
push
push
call
int
aaa
adc
dec
pop
xchg
pop
je
cli
adc
aas
xchg
in
add
xor
push
jne
cmc
loopne
test
jle
lea
sub
inc
pushf
rcll
das
cmpsb
add
into
aaa
or
xchg
push
mov
push
mov
mov
pop
insl
subb
dec
xor
rolb
jne
pusha
in
adc
sbb
pop
lods
cmp
or
jp
inc
test
cmpl
aam
adc
in
inc
and
or
push
add
dec
xor
rolb
stc
rcrl
sbb
jecxz
ss
add
push
or
fidivs
cwtl
lret
add
sub
lds
int3
mov
mov
test
je
pop
add
and
add
xchg
adc
testb
or
add
imul
in
loopne
push
push
dec
fs
xor
sahf
mov
aam
sub
inc
add
jle
movsb
adc
int
popa
and
sahf
mov
mov
aas
clc
dec
pusha
mov
cmpl
mov
adc
add
hlt
add
add
add
iret
and
jl
xchg
jno
add
mov
hlt
push
xchg
ret
add
and
in
or
cs
les
dec
stc
repnz
sldt
push
sbb
xchg
jns
add
sub
out
mov
pop
hlt
leave
adc
cmp
aad
cmp
mov
in
mov
je
xorl
in
cmp
xor
pop
push
lret
inc
sbb
mov
or
pushf
in
fstpt
loopne
push
cmp
xchg
sbbl
dec
or
cmp
cmp
add
add
ror
add
add
sub
js
pop
hlt
jmp
pop
movsl
popa
ficompl
outsl
xor
in
pop
or
testl
and
mov
dec
cwtl
in
push
shll
add
or
push
cld
adc
xor
sbb
or
cmpsb
adc
cmc
mov
add
jmp
pusha
cli
or
jl
adc
xchg
rolb
ret
cmp
mov
cmp
or
or
ljmp
add
rolb
loop
add
jg
add
adc
pop
cmp
mov
jne
sub
lret
mov
or
add
ret
and
bound
fwait
dec
and
loope,pt
xchg
push
dec
je
sub
fiaddl
popa
push
inc
sub
scas
xor
test
pop
and
and
decb
inc
cmpsl
shlb
cmp
mov
push
adc
push
insb
add
push
add
adc
add
fdivs
mov
addr16
add
pusha
fsubs
test
jne
in
xrelease
xor
inc
or
addl
hlt
xchg
mov
clc
add
or
es
mov
push
aaa
sub
movsl
repz
jg
leave
sarb
cmc
sarb
push
imul
add
xchg
and
mov
and
inc
into
add
in
repnz
mov
sub
add
lcall
inc
or
call
cmp
pop
clc
shll
dec
rcl
xor
inc
fisttps
mov
sub
sbb
addl
pop
aaa
push
test
xor
dec
ret
ss
dec
adc
adc
es
xchg
sbb
adc
adc
xchg
pop
sbb
int3
sub
cmp
jl
xchg
cmp
inc
jns
add
add
sbb
nop
mov
andb
aad
or
std
movsb
add
inc
loopne
mov
enter
test
adc
xchg
sbb
scas
mov
sub
rclb
imul
orl
lock
mov
add
dec
mov
add
cmp
push
clc
pop
and
fsubs
or
addr16
sub
xor
and
cmp
or
xchg
je
mov
rclb
call
mov
add
xchg
insl
mov
add
addl
daa
adc
xchg
fxch
sahf
push
aam
icebp
adc
push
lea
xor
mov
sub
inc
add
mov
add
int3
test
push
inc
je
add
xor
jb
add
add
push
push
pop
mov
stos
rorb
jne
push
pop
shr
test
mov
mov
push
stos
ja
jg
mov
sub
pop
mov
jnp
or
inc
mov
jmp
inc
pop
sub
scas
mov
push
in
or
adc
dec
inc
dec
add
fiadds
jmp
jp
dec
movsb
add
or
jge
cmpsb
test
aas
dec
dec
adc
add
xor
fsts
in
or
out
repz
xor
dec
jmp
dec
cmc
pop
ds
xorb
cmp
adc
xchg
int3
dec
jmp
adc
push
repnz
lock
sbb
push
lahf
dec
xchg
add
aam
push
arpl
andb
mov
or
add
push
es
xor
pop
xchg
mov
sti
rolb
or
orl
xchg
fxch
and
test
jge
je
and
and
add
inc
nop
push
adc
jne
sbb
repnz
add
hlt
test
mov
or
fs
xchg
push
mov
mov
loope
popa
cmc
push
xchg
out
stos
mov
add
daa
or
rorb
jg
push
orb
push
xchg
sub
xor
scas
push
outsl
test
xchg
push
or
pop
add
push
int
push
and
ret
add
cmp
add
sub
adc
cmpb
loopne
lock
or
jb
add
test
dec
cltd
pop
and
dec
icebp
loopne
test
clc
jne
dec
inc
or
jns
or
adc
movsb
shlb
add
add
mov
pushf
push
or
stos
add
loop
push
int3
cmpsb
aas
inc
add
cwtl
dec
sub
push
inc
push
sbb
add
adc
cmpsb
mov
add
popf
add
cmp
sub
jno
push
add
mov
add
cmp
adc
xor
je
je
add
cli
add
push
or
aaa
cmp
sub
mov
cwtl
push
push
or
and
mov
mov
add
mov
int
cmp
lods
and
mov
lds
in
adc
lock
pop
push
mov
push
push
lock
mov
test
add
or
add
movaps
lahf
cld
mov
jne
fsub
es
adc
repz
push
jge
push
cltd
pop
sub
or
bound
add
testb
add
sub
roll
sahf
add
jne
and
fstl
pop
sub
cmp
jmp
movsb
xor
pop
movl
addr16
add
ret
add
negl
push
push
sbb
add
add
sbb
or
push
add
and
or
mov
xlat
jmp
xor
add
ret
add
lock
loop
xchg
loopne
adc
jmp
gs
xchg
and
rorl
inc
pop
movl
cmp
xor
add
cs
push
add
and
fcoms
jp
mov
and
jns
add
imul
jmp
sbb
cmpsl
dec
fnstsw
add
and
add
and
xorl
mov
jmp
ss
xor
add
push
repnz
push
ja
add
lock
sarb
aam
adc
add
lret
xchg
call
mov
mov
xchg
test
and
nop
mov
sub
mov
ret
cwtl
mov
stos
mov
fsub
inc
sbb
jne
add
jo
or
loopne
sbb
mov
and
es
pop
pop
cmp
stc
aad
add
push
gs
adc
rcl
xlat
xor
loopne
shl
add
stos
scas
rolb
add
rorl
xor
mov
call
cmp
out
add
int3
enter
call
fcmovnu
lret
add
loopne
jecxz
in
in
pop
push
push
push
push
sub
pop
add
pusha
loopne
push
add
popl
stc
rcr
mov
nop
push
imul
scas
in
xlat
push
cmp
add
je
mov
js
add
rep
cld
push
and
pop
jmp
pop
cmp
or
sub
add
sbb
add
inc
rorb
add
xchg
test
or
jp
cmp
jbe
cmc
cmpb
jne
or
add
out
lcall
sbb
inc
loopne
mov
add
push
push
adc
lock
loope
add
dec
sbb
pop
dec
add
mov
into
add
xor
testl
ja
inc
js
xor
cs
lea
push
pop
and
add
inc
cmp
jbe
add
or
xchg
cmp
or
push
pusha
jl
jmp
arpl
call
inc
xorb
movzwl
add
sbb
repnz
inc
add
mov
push
add
add
call
testb
mov
xor
in
js
in
or
sbb
pop
jmp
jecxz
lret
sbb
je
subb
add
push
jg
push
pop
sbb
add
bound
sbbb
mov
sbb
movl
and
or
jb
cmp
roll
pop
add
inc
xchg
hlt
jle
add
pcmpeqd
ror
call
leave
mov
xor
push
shr
add
fwait
loopne
and
push
dec
into
popa
out
pusha
ret
es
xor
enter
fnstenv
dec
mov
add
cmp
cmp
mov
ret
push
sbb
jmp
enter
pop
lock
out
je
pusha
mov
cmp
jne
xor
adc
dec
std
mov
add
add
sbb
xchg
sbb
xor
jp
jl
pop
cltd
or
push
jmp
add
xor
nop
mov
mov
adc
or
add
or
stos
adc
dec
add
stos
pop
inc
imul
inc
mov
or
int3
push
nop
xor
dec
iret
mov
cltd
xor
sub
and
in
inc
add
push
add
xchg
xor
pop
pop
jge
test
movb
hlt
jl
loopne
add
stc
inc
add
add
fnstenv
in
shll
mov
dec
jne,pt
add
sbb
add
cltd
enter
sbb
xor
mov
mov
push
inc
add
push
and
sbb
sub
or
add
rolb
popa
aas
pop
mov
push
sub
sbb
test
sarb
jmp
iret
add
and
ja
sbb
sub
rclb
jne
dec
mov
adc
pop
imulb
mov
mov
fdivrs
lock
out
cmp
in
inc
push
fdivrl
cmovbe
je
xchg
add
popa
jb
mov
jbe
or
adc
pop
ret
or
add
rcrb
jmp
inc
pop
push
mov
dec
sub
inc
mov
mov
mov
repnz
inc
cmpsl
push
jae
out
push
xchg
xor
cmp
in
add
push
mov
pop
sbbl
dec
add
test
mov
lods
sbb
lahf
pop
add
adc
xchg
sub
xchg
loop
or
add
addl
add
movsl
sbb
nop
jmp
pop
xor
xchg
add
push
push
pop
pop
add
adc
dec
add
mov
es
or
pop
add
push
cmp
dec
clc
lea
xchg
jnp
sbb
call
dec
jo
sub
push
pushl
and
inc
hlt
xchg
ret
ja
add
or
xchg
loope
pusha
cmp
add
sbbl
addr16
push
inc
add
push
arpl
dec
cld
adc
out
mov
jmp
clc
or
loop,pt
int3
ret
mov
push
rorb
push
push
inc
push
inc
pop
add
outsl
jb
popa
outsb
fs
add
jo
push
dec
loopne
add
dec
popa
sbb
add
jne
movsb
imul
jo
int3
lods
jbe
ja
push
aam
leave
orb
sub
fdivr
sbb
adc
inc
lret
ret
sbb
add
xor
ss
mov
push
pop
add
call
mov
jmp
add
xchg
movlps
mov
call
or
mov
sbbb
lret
xor
loope
add
mov
sub
fidivl
cld
add
stos
mov
fadds
stos
sarl
and
pop
arpl
loop
mov
js
imul
inc
sbb
in
cmp
aam
sbb
add
testb
icebp
jnp
xorb
and
dec
add
cmp
add
adc
or
rcrb
js
shl
mov
les
or
push
push
cltd
add
and
enter
movl
ret
lods
fs
ret
pop
orb
sub
xchg
cld
mov
pusha
addb
mov
and
mov
mov
into
add
call
adcb
fstps
loope
lahf
or
add
mov
push
divb
jp
add
sbbb
add
jb
imul
and
or
and
or
pop
pop
pop
add
mov
add
or
dec
push
orl
mov
add
and
or
mov
add
push
clc
pushf
inc
test
cmp
mov
add
call
orb
add
loope
add
push
imul
cli
in
push
sbbb
sbb
fcmovnb
push
push
bound
pusha
enter
mov
add
shl
xchg
adc
add
push
mov
cld
jmp
fs
clc
push
adc
xchg
rcrb
inc
add
pusha
sub
jmp
or
pop
pop
mov
pop
ret
add
jl
push
add
imul
pop
pop
inc
pop
dec
sub
push
and
mov
jbe
cmpb
imul
cmp
cmpsb
jne
cmp
popa
fiadds
dec
adc
loopne
add
call
xchg
or
sarb
lock
add
push
adc
out
mov
mov
cmp
into
add
out
push
je
push
pop
movsl
add
jbe
cmp
loop
and
insl
xchg
push
ret
mov
les
xchg
js
inc
stos
popa
xor
lret
or
push
or
push
stos
cmp
lods
popf
daa
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
jle
add
leave
sbb
hlt
enter
das
mov
dec
add
add
jo
mov
insl
mov
add
aad
sbb
movl
stc
rcll
add
jecxz
ss
xor
xchg
mov
jmp
add
enter
je
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
cmp
add
in
lds
inc
push
out
dec
pop
cs
and
add
add
jne
pop
fs
jae
add
pushf
or
popa
into
je
adc
je
add
add
dec
add
popa
mov
mov
cld
xchg
jmp
ja
jne
add
sahf
inc
adc
daa
inc
inc
icebp
insb
hlt
xchg
and
inc
mov
xor
pop
lcall
inc
lea
call
or
rcl
and
mov
movsb
andb
movl
mov
pusha
and
incl
dec
cmp
pusha
pusha
push
push
jge
add
enter
push
add
imul
push
mov
ds
mov
ljmp
jne
or
andb
cmp
or
movsb
xchg
ljmp
mov
adc
add
mov
sub
cmpsl
dec
add
inc
pop
xchg
fs
mov
je
les
inc
add
rol
jmp
cmp
int
push
shlb
add
dec
test
sbb
lret
cmpsb
add
add
add
sub
pop
push
mov
cmp
adc
mov
jbe
xchg
cld
cmp
aas
jmp
add
mov
sub
add
ss
xor
or
adc
sub
add
inc
adc
and
jmp
add
push
mov
add
stc
sub
enter
sbb
jecxz
inc
int
and
iret
push
and
jl
jge
push
in
into
lock
fdivr
push
cld
or
frndint
push
add
roll
imul
test
pop
ret
sahf
and
repz
inc
cmpsl
jmp
lods
add
mov
cmp
cmp
fs
xor
dec
fimull
lock
rclb
sbb
sti
clc
add
add
sbb
inc
add
inc
sub
lea
bound
mov
push
movaps
cmp
dec
stos
pop
and
pop
movsb
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
adcb
add
add
and
mov
mov
sub
loope
push
sahf
jo
add
daa
push
enter
fistpl
lock
aam
add
out
cmp
adc
mov
insb
or
mov
add
movsb
jp
sti
cmp
fucomi
js
pop
inc
xor
test
repz
sbb
fbstp
ds
shrl
jg
in
pusha
mov
pushf
sbb
mov
movsl
add
add
lcall
jnp
jle
andb
pop
cmc
or
cmpl
nop
pop
mov
or
push
in
dec
push
leave
cli
inc
or
inc
mov
pop
push
mov
je
pop
call
mov
add
push
or
jne
movb
rcll
sub
inc
call
inc
sub
lea
add
inc
xchg
push
push
shll
iret
cmp
sahf
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
mov
ficoml
mov
or
add
incl
mov
push
pop
push
add
lcall
add
adc
sbb
sbb
and
sbbb
pop
xchg
sbb
sub
leave
mov
fxtract
xchg
shlb
add
cmpb
ljmp
add
pop
mov
sar
push
cmp
call
jne
nop
sbb
mov
aaa
and
push
push
add
mov
inc
jno
adc
sahf
sub
or
jnp
in
cmp
dec
adc
shrl
cmp
jne
or
mov
or
fsubrs
add
jbe
pop
fs
or
pop
and
jge
jne
mov
push
pusha
jg
pop
push
outsl
add
push
sub
orb
add
adc
js
das
add
mov
daa
add
pop
add
mov
jb
mov
outsb
add
inc
daa
jo
mov
out
inc
sub
lock
add
cmp
sub
stc
jns
add
mov
xor
jmp
xchg
outsl
neg
add
adc
inc
cs
add
inc
sub
jl
lock
test
lret
pop
push
lea
push
xlat
js
add
xor
add
test
lret
add
dec
stc
fiaddl
push
lock
inc
inc
jg
push
jne
mov
les
add
pop
in
jmp
sbb
add
inc
jl
xchg
dec
sub
sbb
jbe
inc
mov
push
jo
or
or
pop
mov
cld
add
clc
rclb
movb
inc
push
dec
mov
addb
js
xchg
sub
cwtl
hlt
lock
pop
mov
fs
mov
or
clc
cmpsl
icebp
ftst
ljmp
xchg
and
add
addr16
jge
leave
mov
sbb
push
and
call
add
andl
ror
je
xor
es
stc
mov
nop
loope
pop
inc
xchg
subb
cmp
push
mov
loop
mov
push
addl
push
cmp
stos
pop
pop
inc
push
es
add
cli
or
les
mov
adc
mov
sarl
pop
sub
in
daa
in
add
subl
pop
and
xchg
push
xor
xor
in
add
jbe
push
and
cld
inc
movsb
add
nop
push
push
push
mov
je
push
repnz
mov
pop
add
dec
xor
push
scas
or
jo
ljmp
mov
cld
testl
and
sbb
mov
jns
loopne
or
add
cmp
add
call
jp
push
dec
xor
adc
lea
testl
popa
scas
mov
jno
add
pop
mov
inc
push
inc
cmpsb
stc
dec
add
jmp
pop
shrl
enter
pop
adc
add
add
dec
mov
add
xchg
cli
arpl
add
sysenter
pop
and
dec
jg
aam
jno
mov
lret
or
push
push
roll
push
push
push
test
in
or
cli
dec
loop
and
pop
shlb
mov
adc
cli
jle
cmpsb
fadds
mov
into
push
orl
push
out
lods
inc
dec
and
pop
addps
repnz
jmp
rol
dec
lret
dec
jg
sub
add
scas
out
leave
sub
shlb
add
ret
ljmp
pop
inc
pop
dec
dec
add
pop
orb
pop
ds
xor
aaa
mov
testl
cmp
inc
adc
pop
mov
cmp
push
adc
pushl
loope
enter
add
jmp
push
popa
lret
mov
xchg
bound
out
in
add
nop
dec
rolb
or
inc
addb
mov
mov
out
sub
nop
xchg
in
movsb
pop
adc
imul
out
dec
int3
cmpsb
sub
add
insb
mov
add
add
pop
sub
das
or
sbb
hlt
sub
cli
add
je
push
in
fnstcw
aad
bound
stos
sahf
push
mov
sub
fiadds
jl
cmp
inc
jle
and
icebp
hlt
iret
in
add
jo
add
add
lea
cmpsb
jg
xchg
sti
push
push
lock
std
xor
xchg
aaa
jns
cmp
cld
lcall
add
inc
pusha
icebp
jle
jmp
rclb
mov
pop
cmp
repz
mov
je
movsl
add
or
scas
inc
pop
push
clc
adc
test
mov
and
and
cld
aad
and
and
sbb
ret
sbb
aad
xor
and
jo
push
scas
sub
add
adc
cli
nop
add
mov
adcb
add
aam
lret
pop
fistpl
repz
inc
jg
add
inc
movsl
inc
adc
pushf
push
mov
jo
in
push
loopne
std
loop
and
enter
nop
pop
sbb
and
jne
pop
clc
jl
or
scas
stos
repz
ret
mov
dec
pop
addb
iret
jmp
gs
leave
shll
or
push
pop
xor
push
movb
dec
pop
sbb
xor
pop
add
lcall
add
push
pusha
cmp
add
sbb
mov
pop
push
push
add
bound
sbb
call
icebp
shrl
pop
test
enter
pop
mov
dec
test
scas
jl
inc
push
icebp
cwtl
cmp
call
mov
mov
stc
loope
jb
fisttpll
push
in
push
pop
push
inc
cmpsl
clc
push
or
sbb
shlb
add
std
jnp
add
and
enter
mov
xchg
pop
mov
mov
mov
or
and
mov
pop
fistl
sahf
pcmpgtw
sub
sbb
cwtl
scas
pop
sub
testl
incl
adc
pop
repz
add
aad
push
xor
hlt
sub
add
jno
jmp
shrl
sbb
cs
aas
stos
cmpsl
push
add
lock
jmp
inc
sbb
setb
or
int3
movsb
popf
add
jmp
and
mov
lock
xchg
sub
push
and
shlb
cmp
inc
and
pop
das
jmp
jp
or
call
mov
sub
or
cli
mov
repz
ret
xor
xor
mov
popa
sub
pop
cli
xchg
or
xor
cwtl
add
and
mov
cltd
cwtl
cmp
into
cmp
xor
clc
push
or
pop
sarl
pop
stos
add
and
cs
addb
pop
cmp
sarb
xlat
or
push
orb
in
cld
add
pop
clc
dec
shll
mov
cli
adc
iret
call
and
jmp
dec
adc
add
push
xor
jl
add
inc
dec
xchg
dec
lock
add
or
and
cltd
xchg
in
aam
fstpt
add
cmp
addb
sbb
mov
add
ds
adc
lock
mov
pusha
sbb
cvttps2pi
ljmp
cmp
shll
add
cltd
jmp
les
inc
adc
popa
test
jge
and
subb
mulb
dec
jne
jmp
pop
and
loop
cmp
fs
add
lcall
or
and
cltd
jo
pop
sbb
pushl
cwtl
incb
pop
add
aaa
ret
jmp
mov
mov
inc
imul
add
pop
add
je
or
add
push
sub
inc
xor
mov
xor
test
push
in
movsb
scas
xchg
aaa
nop
nop
mov
mov
add
ficoml
jne
adc
fistpll
in
cmp
loopne
mov
ljmp
jno
js
imul
add
inc
sbb
cs
mov
add
addr16
pop
addb
push
or
jnp
sub
lods
mov
fdivs
dec
sub
inc
cmp
stos
add
fisttps
xor
inc
mul
shld
loopne
testb
das
insb
push
mov
add
scas
or
popf
adc
popa
xchg
inc
fcoms
add
sub
mov
nop
ret
or
cmp
std
aad
jne
cmp
jb
faddl
je
loop
and
add
mov
inc
ret
sub
or
es
or
adc
call
mov
popa
cmp
add
xchg
std
test
fisttpll
dec
daa
jmp
adc
ja
cmp
sti
xor
pusha
push
cmp
jae
sbbb
ljmp
ret
jg
push
ss
movd
xor
xchg
loop
add
or
in
cmp
pop
mov
add
inc
pusha
ret
xchg
nop
push
add
mov
or
sub
sbb
fdivrl
add
push
adc
jge
push
mov
pop
add
xor
pop
lea
inc
lock
push
inc
cmpsb
add
xchg
push
xchg
add
mov
es
fwait
scas
dec
pop
sti
add
mov
sub
loope
mov
mov
test
fyl2xp1
xor
dec
jno
add
and
jns
mov
dec
cltd
dec
jmp
test
ror
call
sub
outsl
lret
cmpl
fldl
adc
sub
sbb
lahf
aam
repz
clc
test
cld
icebp
int3
jmp
add
jge
stos
daa
push
inc
add
jb
push
mov
scas
mov
mov
jl
or
std
in
xor
mov
or
out
add
sbb
xor
ret
mov
cmpsb
daa
cwtl
imul
ja
add
aam
fdivs
jne
or
jmp
pop
cmp
add
sti
or
cs
dec
stos
sbb
push
stos
testl
add
jbe
xchg
xchg
pop
out
add
xor
xor
xor
pop
int3
aam
and
imul
sbb
push
pop
mov
add
inc
sbb
add
cmpsl
mov
imul
addr16
inc
sbb
add
shlb
inc
inc
imul
fcomps
add
les
and
push
dec
pop
addps
inc
mov
push
add
sub
cltd
imul
jae
decl
ja
add
and
nop
lcall
stos
or
dec
loopne
push
cli
lods
test
pop
jo
sbb
lods
inc
lcall
sbb
jge
mov
add
add
and
jbe
test
push
lock
mov
mov
xor
sub
inc
inc
add
cli
mov
and
rolb
jge
sub
cmp
jle
push
cs
pop
add
insl
call
fmull
cmp
cmp
push
ds
andl
popl
add
xchg
sbb
sbb
sub
jno
or
or
lock
loop
nop
pop
jg
das
push
in
add
lods
popa
jmp
decl
ja
or
lock
fadds
ljmp
push
xchg
insb
or
call
popf
xor
leave
loopne
sbb
cs
adc
push
add
push
enter
hlt
mov
sub
ret
dec
cld
daa
adc
cmpsl
add
pop
add
mov
or
sub
lock
push
add
xor
clc
adc
jle
int
sahf
xchg
dec
jo
add
aaa
jl
inc
push
push
dec
adc
dec
add
lea
add
ret
movsb
ret
out
jmp
dec
xor
mov
mov
push
pop
nop
mov
push
call
or
or
repnz
mov
jns
test
add
je
xor
pop
mov
xor
addl
ret
jl
inc
sbb
mov
adcb
pop
push
push
mov
in
out
clc
pop
ds
or
adc
fimull
fisubrl
add
pop
sbb
js
push
sbb
pusha
notb
xchg
push
mov
sub
outsl
add
ret
mov
add
cmp
push
or
add
jg
adc
adc
hlt
out
jmp
push
cmpsb
xchg
lahf
mov
fwait
out
jnp
je
add
dec
sti
jo
dec
hlt
ret
jge
xchg
je,pt
xor
jns
or
cmp
and
xorl
data16
push
add
fcoml
test
adc
punpcklbw
leave
dec
cmp
fsub
inc
or
add
jne
shl
add
cmp
mov
add
inc
ljmp
xlat
sub
add
test
pop
push
add
mov
cmp
xchg
add
add
cli
and
movsb
jg
push
push
nop
pop
xor
movb
sbb
shl
scas
dec
push
jo
mov
inc
addr16
jmp
test
mov
sub
push
addb
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
xor
fists
imul
adc
clc
push
mov
outsb
pop
cwtl
insb
xor
cs
cmc
add
inc
inc
je
outsl
outsb
add
popa
mov
add
adc
test
loopne
add
movsb
jge
jecxz
sub
rol
out
fs
add
or
dec
add
add
jno
add
pop
adc
xchg
ds
dec
or
or
pop
lea
les
cmp
xchg
outsl
test
dec
add
shlb
add
nop
dec
jmp
mov
cmp
jp
dec
dec
repz
data16
stos
jae
push
inc
inc
push
add
add
sbb
andb
movsb
or
xchg
pop
addr16
sbbb
add
test
pop
and
jne
cs
adc
mov
add
inc
cmp
scas
add
jne
xchg
jb
xor
jle
jns
inc
mov
testl
xchg
loopne
push
or
je
in
jb
rcrb
arpl
dec
hlt
jae
fcomps
pop
dec
cmpsb
js
and
sub
and
mov
ljmp
mov
dec
adc
and
push
add
icebp
mov
ret
and
out
cmp
add
testb
cmpsb
push
imul
imul
push
pop
and
dec
and
pop
repz
roll
cld
cmp
xchg
cltd
dec
add
jmp
mov
cmovnp
and
push
cld
jne
xchg
add
dec
mov
cmp
fmull
ret
add
ficoml
cld
lods
add
je
loop
add
add
jge,pt
icebp
inc
arpl
add
pop
xor
in
lock
sbb
fists
mov
stos
shrb
daa
iret
sbb
dec
or
inc
mov
sbb
jge
push
add
pop
bts
setle
add
cmpb
aam
add
pop
and
sbb
popa
adc
or
lea
rclb
mov
nop
add
sti
mov
divl
sarb
mov
leave
loope
notb
push
rolb
dec
xor
movsb
add
jno
aas
mov
sub
and
jne
cmp
cmp
movb
inc
mov
add
or
jle
add
jmp
les
cmpb
ret
inc
xor
cs
daa
sbb
mov
mov
paddsb
shrb
mov
jnp
add
mov
rorb
push
add
jae
push
sub
push
add
lods
fisubl
cmp
jmp
add
add
mov
dec
fstl
ss
inc
leave
adc
jae
pop
enter
cmp
cmp
mov
mov
scas
mov
test
mov
mov
outsb
jo
add
cmpb
pop
inc
mov
sub
dec
jecxz
sub
adc
jmp
push
cmp
mov
dec
pop
or
jle
add
sub
xorl
mov
fsts
outsl
imul
xor
adc
add
test
in
pop
ret
rorb
bound
add
jle
fistpl
iret
add
or
push
lret
data16
sbb
add
mov
and
icebp
and
cmp
sbb
add
push
adc
pop
es
sbb
psraw
sub
mov
add
pop
xor
add
mov
sub
icebp
in
and
pop
push
add
sub
test
push
orl
cli
add
push
inc
or
and
adc
sbbb
mov
lock
lods
inc
rolb
roll
sarb
rol
add
jmp
stc
inc
cmp
inc
rcll
or
inc
sbb
pushf
push
mov
sub
mov
push
dec
jbe
push
pop
dec
adc
jb
add
add
sbb
inc
repz
xorl
add
ficoml
ljmp
cmp
cs
add
dec
mov
int
dec
adc
cmp
lret
adc
jl
mov
inc
jl
add
stos
subb
add
int3
xor
and
into
mov
add
pop
aam
test
pop
int
les
popa
push
iret
ret
add
je
and
adc
cmp
cs
lods
cmovs
mov
decl
rol
add
lods
in
and
jae
test
pop
add
jbe
mov
and
push
sbb
push
pusha
mov
push
icebp
mov
push
mov
mov
cld
mov
dec
mov
inc
int3
add
jne
cs
add
mov
and
roll
sbb
add
pop
rolb
sbb
xor
ja
sub
jmp
add
cmp
add
rcrb
add
dec
adc
int
ja
pop
mov
mov
pusha
sbbb
and
jmp
mov
cmpsl
add
dec
sbb
pop
aad
jp
int3
andb
ret
sbb
push
xor
jo
imul
or
add
jle
inc
push
shrl
ljmp
nop
sbb
mov
jmp
fistl
push
clc
inc
cmp
cmp
pop
mov
pop
xor
daa
ret
loop
mov
ja
sbb
leave
inc
andb
sub
mov
dec
shrb
ljmp
sbb
pop
movsb
jno
and
add
nop
sub
loopne
pop
repnz
not
dec
sbb
pop
jbe
nop
xchg
mov
xchg
add
dec
xlat
aaa
push
jecxz
out
ja
nop
je
inc
cmp
mov
jo
pop
out
add
xchg
fldt
fmulp
add
call
add
cmp
sub
rclb
and
call
xor
mov
sbb
and
jbe
jge
jge
add
hlt
sub
flds
out
scas
adc
addb
aas
sbb
and
inc
add
or
or
cmpsb
ret
leave
add
hlt
adc
add
andl
sub
imul
idiv
mov
cld
mov
and
aam
cltd
test
xchg
xchg
cwtl
xor
and
mov
add
mov
jecxz
xor
add
leave
sbb
lds
mov
rolb
jbe
imul
fimuls
add
mov
inc
bound
lods
inc
addb
xlat
fadds
lods
add
xor
xchg
mov
add
or
sbb
test
int3
into
sbb
add
test
add
pop
mov
ror
movsl
push
sbb
nop
add
outsl
cmp
and
jo
lret
hlt
into
jo
add
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
es
xchg
jp
pusha
cmc
pop
out
jg
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
dec
daa
popl
fiadds
adc
push
push
rcrb
jmp
add
fs
aam
imul
pop
add
dec
jp
iret
mov
cmp
fadds
ds
push
jl
pop
scas
mov
pop
or
cmpl
leave
dec
dec
in
xchg
jo
add
xor
in
hlt
cmp
mov
mov
push
movsl
mov
popa
es
mov
sbb
clc
add
daa
mov
and
push
fwait
xchg
and
leave
push
add
and
aad
bound
or
xor
aas
push
cmpsl
add
enter
in
hlt
or
ficoms
add
or
jno
cmp
or
xchg
add
lock
mov
stc
dec
call
jne
or
fisttpl
or
fisubl
add
sbb
cli
movl
outsb
pop
shlb
add
loopne
shr
in
xlat
add
cmp
jb
ja
mov
repz
add
sbb
inc
loop
out
add
ret
adc
add
push
repz
shr
test
sti
or
cmp
or
jne
or
xor
add
add
ljmp
add
and
scas
stos
scas
hlt
xchg
das
add
sub
add
pop
nop
pop
shrd
lds
dec
mov
lock
add
xchg
cmc
bnd
add
fcomp
inc
xor
addl
mov
and
stc
and
jl
icebp
mov
imul
stos
shl
lds
loop
cmp
jo
push
sar
add
mov
cmp
int
lods
dec
jmp
js
icebp
rorl
call
add
test
xchg
rcrl
jne
add
aaa
test
loop
add
les
cld
ja
in
pop
add
push
movsl
xchg
call
inc
in
add
inc
shlb
add
push
shlb
add
or
mov
push
std
jmp
add
add
inc
cmp
inc
testb
data16
incl
mov
or
xchg
or
stos
cmp
imul
lods
inc
sub
or
adc
sbb
aam
outsl
sub
add
cmpsb
and
or
jno
minps
dec
verr
xchg
sbb
leave
and
sub
addr16
ljmp
and
call
adc
enter
jb
or
or
xchg
add
xor
inc
add
int3
xlat
add
jge
xor
ja
adc
sbb
inc
add
cmovnp
mov
or
idivb
add
adc
mov
add
cmp
sbb
add
call
add
sbb
push
jne
aas
xor
sub
dec
ja
push
adc
xchg
adc
pop
mov
add
sbb
mov
lods
sub
daa
dec
sbb
mov
add
sub
xor
rol
adcb
cmpsl
pop
mov
add
loopne
mov
pop
mov
cmp
aam
movsb
xor
push
stos
or
push
fsub
mov
mov
mov
orl
movsb
or
adc
dec
cmp
jnp
add
mov
jle
jne
cmp
push
add
popf
mov
dec
ja
ds
in
add
inc
mov
push
or
call
cmp
mov
adc
popf
add
cmp
xor
mov
mov
rorl
jmp
dec
loopne
inc
in
cmp
xor
cmp
xor
and
setno
sub
and
xor
aaa
pop
inc
js
lods
or
add
and
push
add
jb
cmp
sbb
call
addl
jb
cmp
andl
int3
enter
ja
mov
add
dec
and
in
jb
or
xchg
sbb
and
enter
pop
jb
or
sbb
and
push
in
add
cmp
add
mov
and
ret
jb
cmp
scas
hlt
add
and
insb
enter
fs
cmp
shlb
and
dec
or
dec
out
rcrl
dec
lods
xchg
xchg
movzwl
rolb
shl
adc
ret
call
sarb
mov
and
sbb
add
orb
cmp
xorb
scas
mov
jnp
xor
push
subl
imul
add
mov
mov
shlb
jae
in
xor
aam
or
icebp
xchg
repnz
enter
cmc
or
negb
out
add
stc
xchg
cli
enter
pop
jb
cmp
sbb
loope
sub
and
xchg
in
in
out
jb
cmp
adc
adc
jmp
gs
inc
in
or
in
sbb
inc
out
xchg
adc
shll
add
jb
cmp
sbb
subb
and
xchg
fcmovne
add
in
jb
cmp
sbb
shlb
and
xchg
add
enter
jb
cmp
sbb
leave
mov
xchg
lret
add
in
jb
and
iret
inc
inc
mov
mov
xor
mov
in
pop
test
and
in
jb
cmp
mov
dec
call
sbbb
aas
adc
inc
test
out
mov
cltd
loopne
or
cmova
mov
pop
rolb
xor
add
rorb
js
shlb
ja
add
popf
repz
fiaddl
adc
pushf
add
dec
gs
jo
pop
nop
stc
pcmpgtb
test
loopne
pusha
jmp
add
gs
outsl
add
cmp
clc
movsb
pop
divb
and
jp
and
or
dec
outsb
add
jno
lret
pop
cmp
inc
jp
and
or
pusha
subb
insb
add
nop
cmp
pop
mov
mov
fs
insb
jno
pop
pusha
enter
or
push
adc
add
or
xor
or
or
imul
mov
xchg
sarb
scas
outsb
gs
sbb
fimuls
loopne
dec
jbe
add
xor
sbb
inc
addr16
addb
or
pop
dec
lds
xor
enter
int3
popw
dec
mov
jbe
sbb
fs
add
sarb
clc
adc
mov
sarb
and
pop
rorb
xchg
push
insb
inc
popa
xchg
mov
outsb
pop
push
fs
lea
mov
punpcklbw
int
test
int
xor
push
repnz
xchg
add
stc
jp
mov
outsl
mov
fcoms
shll
adc
inc
inc
arpl
push
mov
pop
insb
popa
and
push
add
pop
sub
push
loopne
jns
add
in
nop
pushf
pop
push
jb
add
or
imul
int3
push
repnz
dec
je
cmp
loope
pop
hlt
add
inc
ds
xchg
or
lods
pop
in
popf
add
gs
push
std
inc
dec
popa
rcrb
lea
jo
add
insb
popf
pusha
inc
push
or
test
jb
jae
mov
pop
sub
lods
xchg
cmp
sbb
aas
nop
shr
adc
add
add
xor
push
and
in
mov
inc
ret
pop
ljmp
pop
or
adc
xorb
mov
stc
mov
jge
add
pop
dec
dec
and
into
imul
and
insl
jnp
add
pop
or
out
add
mov
fnstcw
xchg
fmuls
jge
push
daa
pop
pop
hlt
add
dec
sub
shl
clc
ds
or
mov
cmp
add
inc
jp
shrb
mov
inc
xor
sub
jmp
int
xchg
jbe
jmp
stc
addr16
push
mov
shll
add
in
leave
add
cmpsb
je
or
xchg
fimull
adcb
fsubl
mov
mov
sti
je
fmuls
xor
add
push
lods
nop
dec
call
push
adc
adc
adc
adc
fisubs
or
pop
inc
dec
jp
add
adcl
mov
adcb
lahf
and
addb
ja
jae
hlt
add
jge
cmp
adcb
xchg
sub
xor
add
lret
push
inc
cmc
sahf
push
addr16
shlb
ret
push
test
or
aas
pusha
ret
mov
shl
stos
adc
or
lods
and
and
and
lret
adcl
adc
dec
cld
mov
loop
mov
xchg
xor
sub
leave
sub
or
add
in
mov
mov
je
cmp
add
ds
dec
aas
sbb
hlt
dec
fidivrs
xor
push
add
add
hlt
and
mov
add
push
lock
mov
add
mov
jno
je
pop
push
inc
bound
cmpsb
dec
ds
mov
fidivl
aaa
xor
aad
mov
add
test
push
js
add
ror
dec
adc
cltd
pminsw
dec
iret
mov
stc
inc
xchg
sub
test
xchg
daa
loope
fmuls
fadd
mov
push
sub
xchg
call
sub
sbb
enter
xchg
negb
or
jne
in
aas
push
ljmp
xor
add
lahf
rcrb
fsubrs
stos
dec
nop
lret
pop
add
pop
sbb
push
nop
sub
pop
pusha
addb
xchg
rolb
jmp
cmpsb
jbe
repz
cmp
jg
mov
pop
lcall
fcompl
xor
and
push
cmc
push
aas
add
sbb
adc
add
push
divb
pusha
add
sarl
xchg
es
mov
mov
ljmp
addr16
sbb
ret
mov
xor
cmp
call
and
movsl
rol
lahf
add
cmp
or
and
add
addl
insl
dec
loope
adc
clc
hlt
push
cmp
push
add
sbb
dec
pop
sbb
lods
pop
sub
jo
sbb
add
push
adc
ret
call
das
subb
xchg
add
lock
incb
adc
enter
rorb
jmp
mov
add
shl
push
cmpsb
aas
std
roll
jecxz
mov
mov
add
out
in
in
out
cmp
dec
sbb
cld
sarl
pop
add
and
sar
add
clc
inc
cmp
adc
pop
pop
push
mov
lret
dec
mov
push
jne
add
push
add
imul
jb
bound
dec
lock
ret
adc
and
or
call
decl
shlb
add
adc
inc
push
cli
test
pop
or
pop
sbb
fsubp
cwtl
push
xor
jl
test
or
add
sub
test
lods
add
push
inc
pop
test
adc
mov
andb
jne
cs
dec
dec
inc
sub
adc
shlb
dec
je
loopne
add
cs
in
scas
add
or
icebp
jbe
push
lea
jg
nop
sbb
daa
add
and
lahf
adc
mov
add
roll
lea
por
inc
stos
shll
sar
sbb
pop
and
in
add
pop
out
jl
nop
sarb
push
call
mov
test
add
iret
jge
and
pop
add
mov
roll
dec
test
add
add
lret
decl
popa
add
stc
inc
or
and
push
add
mov
add
add
ss
inc
lea
repz
out
mov
pop
scas
push
inc
jae
add
shlb
inc
and
dec
lock
cmp
into
mov
lods
or
and
bound
aas
sub
add
dec
das
sbb
hlt
out
cmp
ret
push
orl
sbb
add
xor
or
lcall
and
jmp
adc
dec
mov
addl
loopnew
xor
jne
push
cmp
sbb
add
hlt
dec
jae
push
fisttpl
cmpb
jl
add
adc
roll
movsb
pop
xchg
mov
pop
rcr
xchg
push
faddl
lahf
add
mov
push
mov
add
jmp
pop
clc
leave
add
test
xor
sarb
getsec
imul
pusha
cmp
jae
mov
rorb
push
addb
xchg
in
jmp
mov
push
add
call
mov
jl
mov
es
je
xchg
dec
fsubrl
add
mov
cmp
push
pop
test
jne
lea
fisubs
movzbl
shr
and
sahf
pushl
add
loop
inc
stc
mov
lds
pushf
or
cltd
xchg
jns
shlb
xor
jl
add
inc
and
push
notb
movsl
xchg
push
rorb
dec
fsubrl
adc
iret
add
test
cltd
adc
leave
cwtl
push
int3
cmp
inc
cmp
push
aad
orb
jne
sarb
testl
je
leave
sbb
pop
mov
and
mov
add
stos
enter
jne
addps
out
loopne
cmc
sub
dec
add
pop
xchg
sub
pusha
pusha
mov
jb
pop
xchg
dec
push
push
mov
mov
fldl
or
shlb
lea
xorb
roll
or
add
pop
cli
jmp
mov
pop
inc
test
xchg
pop
shlb
pop
negl
dec
aas
setg
cmpsb
xchg
mov
into
add
bound
aam
add
push
js
imul
push
add
xchg
add
inc
xor
xchg
add
mov
ret
inc
mov
xor
and
cmp
dec
mov
lock
ja
add
or
push
jl
or
mov
add
pop
jle
add
push
pusha
or
xor
dec
add
stc
mov
push
add
inc
adc
inc
loopne
dec
dec
mov
mov
add
pop
pop
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
or
add
sub
mov
es
push
cli
add
or
call
pop
roll
flds
cld
and
xor
js
or
xchg
stc
dec
mov
add
arpl
popa
lahf
in
fs
or
or
shlb
loopne
add
pop
gs
xor
add
rorb
xchg
xchg
add
cmc
pop
sbb
and
fisttpll
add
push
add
inc
cmc
cmp
leave
sar
add
out
rcrl
lret
or
add
jecxz
movsb
jne
add
sub
test
out
or
cwtl
jnp
add
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
popf
aam
dec
xchg
cmpb
push
cmp
mov
outsb
add
arpl
dec
in
dec
mov
or
sbb
mov
sbbb
add
mov
outsl
enter
push
ret
xor
mov
in
cmpsl
fdivrs
add
mov
stc
popf
sub
je
add
fldt
fs
adc
int
ljmp
dec
dec
and
mov
sub
or
cmpsb
sbb
xor
sub
push
or
clc
mov
add
mov
xchg
clc
add
jl
inc
pop
pushl
jae
dec
or
add
inc
add
cmovno
fstpl
ret
adc
imul
sub
add
ret
add
add
or
rorb
and
fildl
fdivs
inc
or
sbb
mov
pop
mov
movsb
add
dec
fstl
add
push
pop
and
jp
add
popf
jno
cmp
iret
add
int
sti
imul
or
add
and
jo
jp
add
rolb
clc
pop
fwait
cmp
and
mov
adc
push
or
adc
xor
add
mov
mov
mov
adcb
xchg
inc
and
cmp
cltd
or
iret
daa
cld
add
aaa
push
and
add
imull
pop
xchg
or
test
add
loopne
mov
add
mov
mov
add
fisubrs
mov
psllw
je
xor
leave
out
sub
clc
add
dec
in
xor
std
dec
add
xchg
or
imul
jg
add
out
cmp
lds
and
popf
orb
xchg
mov
xchg
push
shlb
cwtl
aam
add
popa
jb
or
add
xor
insb
cld
xbegin
sbb
ja
adc
jle
jae
shlb
pop
dec
aas
add
in
push
mov
cltd
mov
icebp
insl
lds
add
mov
sbb
sub
lock
fwait
mov
add
jl
or
orl
add
adc
je
data16
add
test
test
and
js
imul
and
ja
adc
add
test
and
dec
std
adc
and
xlat
add
jg
insb
mov
aad
or
pop
in
mov
insl
and
fs
inc
jno
add
jl
sbb
jmp
jno
imul
in
mov
xor
lods
es
imul
jne
mov
or
imul
pop
inc
je
push
sub
lcall
dec
sub
add
add
or
sub
push
sbb
fimull
and
add
sahf
aas
xor
add
in
in
mov
push
sbb
jb
cwtl
and
push
inc
add
fistpll
add
push
add
icebp
andb
hlt
cltd
mov
push
aas
test
xor
push
dec
or
insb
pop
pop
mov
mov
pop
iret
ss
cld
mov
add
ret
fisttpll
loopne
test
push
movsb
jecxz
dec
add
or
sub
lret
cwtl
mov
xchg
in
rolb
imul
sbb
jecxz
mov
and
insl
mov
sbb
and
mov
and
mov
cltd
cld
jbe
jg
sar
or
fcmovbe
add
test
inc
adc
inc
adc
jmp
repnz
mov
add
cwtl
sbb
xchg
push
rcrb
pop
pop
sub
out
lods
nop
adc
xlat
add
add
xor
popa
in
in
insb
push
add
out
pop
pop
xchg
sub
mov
pop
add
mov
data16
pop
movsb
dec
fwait
mov
es
add
jmp
push
jnp
mov
mov
je
push
mov
mov
add
lods
js
push
adc
addl
ds
pop
repz
popa
sbb
add
push
dec
repnz
sbb
add
jecxz
dec
xor
dec
aas
out
call
rcr
push
add
sub
je
imul
add
mov
cld
sub
cwtl
and
push
in
gs
shrb
lock
xor
mov
mov
stos
adc
cwtl
in
push
mov
jge
sub
push
xchg
sbb
dec
dec
clc
loope
cmpsb
jno
orb
add
das
fsts
mov
pop
sub
dec
jne
mov
leave
sbb
fsub
add
ret
in
inc
push
add
cs
gs
jno
enter
add
jmp
inc
cmp
add
dec
xor
jecxz
adc
repz
stos
in
push
pop
aas
cmp
fbld
xor
ret
loop
push
adc
or
jno
mov
test
mov
cmpb
testb
daa
out
pusha
and
push
jmp
cmp
dec
in
xchg
repnz
mov
shlb
rorb
add
dec
adcb
add
jg
in
mov
push
jmp
inc
shrb
aam
adc
scas
cmovae
add
cmpb
jb
pop
push
inc
inc
or
dec
hlt
add
mov
add
sub
push
clc
into
jns
loop
add
sbb
mov
fadds
repnz
add
aad
add
test
jecxz
sti
push
lea
hlt
mov
cltd
out
adc
adc
mov
sub
xor
jecxz
pop
loop
cmpb
mov
add
bt
das
jae
cld
sub
lahf
clc
sub
add
dec
add
add
cwtl
add
sbb
or
adc
add
clc
sti
rorb
push
add
pop
xor
add
ja
addb
hlt
cmpsb
push
jmp
sub
or
loope
or
aaa
dec
shrl
add
rolb
ljmp
or
ljmp
inc
xor
dec
ret
mov
test
and
inc
pop
std
cs
xchg
lsl
and
outsl
sbbl
mov
xor
and
dec
mov
mov
ret
or
xor
mov
dec
es
lea
lea
cmp
iret
sub
outsl
sub
addr16
xchg
mov
jae
add
add
add
xor
xchg
push
mov
test
pop
les
inc
inc
lret
movsl
pop
add
fmuls
je
and
push
addr16
movsl
add
ja
imul
popa
das
push
call
fiaddl
scas
and
mov
mov
sub
add
and
leave
push
or
mov
loope
jne
jmp
cmpb
scas
mov
jp
sub
jl
or
dec
jg
je
jnp
add
jmp
push
pop
add
pop
cwtl
sbb
push
enter
push
inc
add
sahf
jne
mov
mov
ljmp
ror
adc
loopne
adc
add
jne
fs
add
inc
xor
mov
add
hlt
test
shlb
cmp
ljmp
push
jg
lahf
pusha
ljmp
je
xor
call
pop
jle
jp
add
push
adc
add
ds
sub
popf
loope
int3
lea
add
fmuls
loop
xchg
in
push
cwtl
rcrl
or
pop
xchg
or
test
lret
add
inc
mov
push
stos
add
dec
mov
jne
sub
or
or
push
add
sub
daa
add
add
popa
sub
xchg
add
cmp
call
repnz
shll
cltd
and
pop
fstl
rolb
add
loop
xor
cli
fisubs
pop
inc
loopne
lret
aas
mov
fwait
mov
ljmp
fcomps
mov
add
fimull
or
call
out
xor
mov
dec
xchg
cld
rolb
mov
sbb
jo
adcb
lock
add
cmpsb
dec
or
dec
int3
mulps
pop
sub
cmp
out
add
clc
lds
mov
add
pop
and
adc
lods
insb
or
stc
aaa
aas
push
add
mov
fcoms
mov
daa
lds
add
jo
inc
dec
das
push
jnp
cmp
add
sbb
insl
adc
hlt
or
add
sub
cwtl
sbb
test
xchg
fcmovu
leave
inc
ret
add
and
or
mov
dec
lds
jns
add
pop
jmp
inc
add
dec
adc
jns
aas
pushf
sbb
inc
inc
shlb
or
scas
adc
hlt
aad
pop
lds
jmp
pop
jg
inc
inc
push
add
add
popf
mov
add
js
test
fs
mov
pop
push
add
xor
jmp
mov
add
enter
setg
ljmp
mov
test
andb
or
or
jp
adc
cmp
jle
fnstsw
jle
add
scas
pop
int3
or
add
add
pushaw
xchg
cmp
jecxz
shlb
jnp
pop
mov
cmp
out
cmp
aam
mov
sub
push
mov
pop
dec
push
xor
clc
call
inc
sub
and
cmp
pop
clc
add
inc
lods
mov
xchg
fmull
call
adc
jno
pop
je
ja
sub
repz
cmp
ret
mov
mov
std
add
xor
gs
sub
fildll
je
sbb
enter
sbb
jo
push
or
loop
push
or
imul
lock
add
pop
sbb
jle
filds
ret
das
out
dec
pop
mov
add
insb
xor
ja
push
aad
xor
and
adc
call
inc
mov
es
aam
sbb
hlt
sub
mov
pop
xchg
pusha
adc
add
pop
mov
xchg
enter
sbb
or
ret
or
sbb
jle
fmuls
fnstcw
mov
push
adc
xor
jg
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
frstor
int3
movsb
add
daa
add
hlt
inc
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
sti
loopne
jle
pop
adcl
inc
out
adc
in
or
orb
inc
inc
cwtl
mov
jnp
pusha
aam
repnz
jo
addr16
jne
cld
add
inc
dec
jl
lods
jae
cmp
sub
adc
sub
lea
add
cmp
ficoms
insl
xchg
dec
jns
movsb
sbbw
push
sbb
mov
mov
add
adc
jp
pop
jno
xor
add
xchg
or
sbb
mov
pop
ljmp
jo
test
lcall
add
sbb
jb
inc
and
bound
es
out
add
mov
and
add
ss
sbb
inc
les
notb
mov
pop
call
sbb
lock
aam
sub
movsl
push
jbe
lldt
jl
dec
clc
jmp
ds
cmc
push
mov
out
push
add
adc
and
push
mov
fcompl
ds
in
adc
stos
sbb
sbb
jbe
cmpl
aaa
jle
and
jno
add
xor
insb
xchg
nop
notb
sub
mov
push
jnp
add
sub
pushf
je
fildll
test
add
fwait
cmpsl
xchg
test
or
cmc
mov
sbb
add
mov
push
pop
and
fmul
cmp
push
add
cli
pop
pop
call
sub
sbb
pop
ret
je
pop
daa
push
fmuls
mov
or
add
outsb
push
add
cli
push
out
icebp
ds
jno
maskmovq
nop
mov
movsb
mov
adc
mov
gs
pop
and
add
add
shrb
and
sbbb
call
and
test
push
pop
imul
xchg
inc
add
mov
jmp
add
sub
test
add
aad
ret
pushf
or
and
jne
jmp
roll
ret
add
inc
sbb
sbb
fildll
adc
or
lea
sbb
push
gs
push
add
mov
xor
inc
mov
add
sbb
pop
cmpsl
js
cmp
dec
pop
shlb
or
and
adc
push
iret
cmp
pusha
mov
in
sub
mov
mov
pop
sbb
fcoml
lret
int3
lea
add
add
leave
or
add
outsl
js
lods
inc
test
popa
lea
push
add
push
fmuls
push
dec
sbb
sbb
cwtl
adc
lods
icebp
and
xor
sahf
jl
sub
xchg
jbe
adc
das
jo
inc
mov
jmp
add
lods
or
sbb
add
loopne
jb
inc
or
test
dec
xchg
adcb
sub
idivl
and
cmp
aaa
or
adc
es
jo
add
and
je
add
shlb
add
inc
in
in
add
fldenv
clc
push
or
adc
js
add
mov
ret
pop
lcall
es
add
dec
rorb
add
in
shll
outsl
xorl
xchg
add
dec
bound
mov
mov
push
xchg
call
mov
popf
addl
add
aad
pop
and
inc
orb
jl
cs
std
jmp
or
adc
nop
mov
add
js
enter
in
and
inc
cmp
jg
scas
jno
dec
test
test
add
dec
jmp
insb
mov
pushf
push
sub
ficoms
push
mov
in
lahf
add
jmp
xchg
jle
je
xchg
and
pop
pop
inc
mov
add
mov
insl
jp
les
testb
pop
test
sub
add
sub
shlb
call
xchg
scas
mov
pop
or
mov
add
sti
loope
xchg
or
sbb
lock
add
insb
popa
push
xchg
aam
mov
sub
popw
add
xlat
cmpsb
push
outsl
fucom
popl
pop
std
into
inc
dec
stc
arpl
or
movsb
das
cmp
addb
mov
ss
push
add
add
push
mov
loopne
add
enter
fiadds
jl
xchg
pushf
jo
loope
add
scas
mov
nop
mov
and
imul
setl
and
addb
xor
add
subb
adc
insb
repz
stc
std
xor
add
inc
push
ud0
cmpsl
fadd
and
push
mov
inc
add
sub
adc
sub
add
jle
shr
stos
mov
mov
scas
lods
push
cmpl
mov
and
sahf
cmp
dec
dec
test
add
jmp
test
ja
xchg
cmp
lock
dec
js
jge
push
hlt
es
and
adc
jbe
pop
aas
add
sbb
sbb
test
pop
add
jne
and
and
inc
add
lock
sub
jle
adc
cld
mov
jmp
xor
xchg
mov
mov
add
lods
sub
adc
add
jge
andb
push
add
cmp
cmc
jne
push
cmp
rolb
movsl
and
mov
push
cmpl
pop
pop
popf
out
std
mov
call
and
push
dec
ds
ret
and
mov
movaps
popf
xor
mov
mov
call
inc
rolb
and
repz
and
inc
inc
mov
adc
add
adc
jae
push
sub
mov
data16
into
movsl
clc
xchg
adc
add
cs
push
mov
das
out
inc
cld
mov
add
jg
and
orl
insb
hlt
dec
je
or
sbb
or
addr16
lret
int3
add
mov
inc
mov
lahf
push
add
mov
pop
rolb
mov
or
dec
ficomps
xchg
aas
push
xchg
loopne
jbe
cmpsb
add
or
repz
add
call
add
stos
mov
addl
inc
icebp
xor
ficoms
ss
push
add
sub
jmp
dec
and
add
hlt
or
inc
add
shl
push
decb
add
jmp
fcomi
lds
sub
sub
dec
cltd
jb
enter
cmp
add
cld
add
scas
ret
mov
fwait
push
inc
test
jle
dec
pop
cltd
jl
subb
adc
sti
sbb
sahf
aad
imul
adc
mov
fldenv
add
outsb
cmp
sbb
lea
push
add
push
mov
arpl
dec
ret
testl
test
sti
pop
push
jg
or
clc
jne
icebp
inc
push
adc
add
fs
jmp
sbb
jne
mov
inc
std
loopne
test
jmp
mov
add
inc
mov
add
imul
dec
adc
rorb
push
addl
push
jb
or
and
mov
add
xorb
or
lcall
jge
add
cltd
pop
nop
add
mov
xchg
enter
cld
xchg
cmp
sahf
push
jl
adc
jg
add
jmp
pop
push
add
jo
in
addb
add
push
lock
jge
hlt
add
xchg
and
xchg
lods
add
pusha
jae
dec
in
pop
ljmp
into
inc
mov
pop
add
dec
inc
cmpsl
add
mov
les
mov
loope
mov
call
add
andl
add
sub
or
insb
xchg
lcall
enter
pop
popa
shrb
rolb
xchg
add
out
addb
xor
sbb
xchg
jmp
jae
in
xor
repz
repnz
adc
xor
push
jmp
loopne
or
add
and
add
enter
jg
pop
inc
or
orl
or
adc
jns
mov
fcoms
nop
incb
xchg
movsl
sbb
or
mov
and
adc
mov
add
cmpl
popa
jg
and
xor
sbb
add
and
lock
add
jne
pop
sub
in
and
out
test
cld
add
dec
lea
cs
mov
notb
add
mov
xchg
and
mov
les
xchg
push
ror
enter
in
mov
shlb
adc
sbb
mov
orb
cwtl
imul
jg
jnp
cmp
mov
jle
cmp
add
sbb
into
mov
mov
inc
mov
mov
outsl
call
pushl
fstps
xlat
arpl
mov
mov
cmp
rclb
add
or
lret
or
movsl
pop
sbb
add
pop
ret
stos
out
cmp
xor
addl
lods
scas
je
lock
pop
loopne
mov
xor
or
repnz
add
adc
xchg
push
add
xor
mov
testl
adc
scas
aaa
add
fistl
and
jne
mov
test
xchg
je
arpl
aas
lret
mov
and
test
cld
das
in
jl
add
xchg
add
adc
pop
or
add
shrl
and
test
clc
sahf
mov
jns
add
xor
mov
inc
dec
nop
cmp
frstor
mov
mov
add
cmp
add
add
ss
pop
lods
sbb
aam
test
or
cld
test
pusha
inc
sbb
sub
mov
mov
add
and
popa
in
xchg
pop
mov
mov
scas
pop
and
mov
daa
add
lret
add
cmpsl
or
add
outsb
ficompl
lods
xor
test
xchg
data16
pusha
mov
adc
push
fs
cld
outsb
jmp
dec
mov
add
jl
mov
xor
or
andl
nop
es
add
or
cmp
add
in
adc
stos
sbb
inc
fsubs
out
ret
pop
pop
jns
imul
add
testb
dec
sarl
xchg
imul
nop
sub
leave
push
adc
sub
xchg
cmp
xchg
mov
or
add
sub
sbb
xchg
push
push
adc
in
pop
negb
add
or
repz
les
inc
sub
sbb
incl
sbb
add
inc
shll
add
jnp
add
jle
mov
pop
push
add
adc
fwait
and
outsl
add
imul
sbb
mov
mov
rcrb
add
xor
fildl
mulb
lret
add
aas
shlb
sub
push
int3
inc
cs
shlb
roll
add
add
xchg
jg
add
jp
pop
test
jmp
decl
add
add
testb
add
cmp
test
inc
jge
cltd
or
pop
loopne
mov
add
lahf
mov
jge
adc
cli
add
cs
sub
inc
in
out
mov
hlt
cmpsb
jnp
addb
jl
in
add
js
jge
lea
add
lds
out
add
arpl
test
and
in
cmp
cmp
or
add
xlat
ret
pushf
adc
clc
sub
push
sbb
add
inc
in
ret
jne
xchg
add
dec
cmp
incb
imulb
movsl
fstl
shr
mov
sub
pop
adc
adc
call
xor
add
push
clc
jle
push
add
js
sub
adc
inc
in
jp
pcmpeqw
sti
inc
aam
daa
lods
scas
add
push
insb
movsl
mov
inc
push
or
pop
call
push
inc
stc
add
mov
mov
retw
pandn
sarb
repnz
add
adc
add
cmp
cmc
xchg
dec
push
pop
jae
dec
loop
cmp
stos
add
setg
lret
lds
mov
loopne
lret
dec
addb
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
dec
int3
lret
cld
out
add
repnz
shrb
aam
sarb
pop
int3
test
mov
icebp
orb
push
push
cmc
and
jecxz
and
test
mov
push
xchg
sub
push
roll
adc
int
add
and
in
add
jbe
add
sbbb
sub
add
xchg
add
jb
add
loop
loopne
sbb
dec
mov
mov
push
mov
repnz
pop
adc
push
xchg
push
outsb
xchg
sbb
mov
das
mov
cmc
rcr
mov
pop
cmp
sub
add
add
sbb
aam
test
jbe
sbb
mov
inc
cld
add
dec
insl
jo
mov
and
add
mov
hlt
ret
pop
shl
ja
cld
or
cwtl
push
hlt
cmpsb
daa
push
enter
inc
aam
jmp
mov
lret
sbb
les
mov
mov
pop
fsubl
push
adc
push
rol
hlt
mov
clc
inc
mov
push
cld
push
inc
pop
inc
mov
push
add
adc
adc
mov
stc
or
and
and
stos
mov
pushf
ds
add
fnstenv
sbb
mov
das
jb
popf
cmp
and
sub
out
mov
add
hlt
or
add
test
and
outsb
in
shlb
enter
ltr
nop
cmp
movsl
test
sbb
push
adc
add
cmc
and
cmpl
pop
ret
jmp
mov
test
call
inc
icebp
sbbb
and
sub
mov
cmp
pop
or
add
fsubl
add
inc
imul
add
popa
arpl
inc
xor
inc
mov
mov
add
cs
adc
add
cld
loope
enter
mov
shlb
pop
ds
dec
subb
cmpb
cwtl
sete
dec
popa
and
and
jp
iret
cli
jl
subl
adc
or
push
movsb
xor
cmp
xor
adcb
and
mov
sarb
or
cwtl
xor
mov
xchg
es
idivl
add
mov
add
in
sub
clc
sbb
fdivr
lock
in
or
call
dec
int3
sbb
outsl
adc
test
popf
call
and
xchg
shr
mov
loope
insb
in
aad
cltd
push
mov
and
rorl
adc
and
loopne
cmp
push
xor
adc
insl
pop
pushf
sub
xchg
push
loopne,pt
mov
mov
pushf
pusha
lahf
adc
dec
setg
scas
fs
or
cmpsl
repz
sti
adc
adc
mov
fistps
xor
mov
aas
xor
nop
jg
insb
adc
test
sbb
dec
jl
jle
xorl
mov
jg
add
out
sub
cmp
push
push
dec
dec
inc
inc
inc
xchg
xlat
es
mov
dec
fildl
stc
mov
pop
pop
mov
cmp
gs
jge
mov
jle
cmp
dec
or
sub
std
addb
jge
add
ljmp
inc
movsb
lock
cld
popf
add
lds
mov
fsubrp
inc
lahf
sbb
scas
jmp
mov
and
jne
mov
adc
sti
add
add
ja
xor
mov
add
pop
aaa
scas
pop
ljmp
outsb
add
rcrb
mov
add
jne
mov
rorb
arpl
insl
cwtl
dec
sub
cmp
inc
add
cmp
jl
push
sbb
leave
pop
sbb
punpckhwd
xchg
mov
and
in
jmp
sbb
stos
xor
xchg
je
clc
sbb
mov
loopne
and
stos
push
pop
lret
or
pushf
or
xor
push
aas
add
sub
mov
loopne
and
lret
adc
sbb
or
repnz
xchg
mov
mov
add
mov
stos
or
inc
xchg
jmp
nop
add
jge
cmpsl
cmp
mul
mov
stos
xchg
push
add
xor
in
add
aad
or
jmp
ds
push
adc
pop
adcb
add
push
loop
add
add
sub
fistl
roll
mov
div
mov
add
mov
dec
je
dec
add
mov
xor
sbb
ret
jecxz
aas
jns
pop
add
daa
sub
idivl
ret
mov
xor
and
and
add
cmp
fnstenv
add
int3
fisttpll
daa
mov
mov
cmp
je
push
push
in
and
nop
sub
sub
or
lcall
syscall
pop
pop
inc
loop
scas
push
ret
rolb
das
test
add
sbb
cld
inc
sbbl
and
jg
cmpsl
insl
or
and
mov
lahf
lock
sub
inc
add
and
clc
xor
mov
cli
cs
push
cmp
cli
insb
add
xor
mov
xlat
jne
xor
xchg
mov
add
mov
push
mov
addb
inc
add
xchg
jmp
pop
scas
jle
or
pusha
jmp
push
dec
lock
mov
call
pushf
adc
pop
pop
cwtl
nop
rolb
cmp
mov
scas
icebp
add
xor
aaa
dec
fimuls
pop
or
stc
add
adc
jne
and
push
add
sbb
adc
out
jecxz
outsl
xor
scas
jp
add
xor
add
int3
sub
mov
ljmp
sti
dec
sub
or
jecxz
sbb
and
mov
xchg
adc
push
pop
out
loop
mov
loopne
add
or
inc
or
rolb
lods
cmp
movsl
shlb
add
mov
add
mov
add
push
hlt
push
mov
mov
and
pushf
add
daa
xor
jb
je
add
ss
clc
inc
clc
mov
jmp
inc
inc
int
outsl
mul
add
addb
jbe
xor
add
push
mov
and
sub
mov
add
or
sti
jmp
add
testb
sub
test
ljmp
testb
or
in
ret
nop
mov
xchg
adc
movsb
push
rcrb
stos
cmpsb
and
aas
bound
sub
faddl
sbb
ljmp
add
or
cld
cmp
mov
clc
sub
adc
jbe
repz
out
and
dec
sbb
inc
push
icebp
dec
xor
into
subl
mov
test
pmuludq
shll
cld
mov
jne
fsubl
inc
inc
add
int
add
mov
xchg
add
and
xor
pop
jmp
out
push
ret
fiadds
fsubs
std
arpl
out
mov
dec
add
jmp
or
xor
les
in
adc
push
inc
or
inc
and
or
mul
cld
xor
bsr
xlat
loopne
insb
jmp
push
add
pop
inc
addl
push
jle
pop
mov
sub
repnz
jne
push
mov
dec
rolw
jecxz
mov
cmp
mov
xor
insl
pop
movsb
xor
leave
or
inc
shlb
add
or
testw
adc
add
add
dec
inc
adc
add
push
fldt
adc
pop
aas
or
imul
clc
in
test
fsubs
loope
pop
dec
xchg
jo
add
sub
fsubs
fldl
cmp
add
int
inc
pop
out
clc
filds
ds
jnp
mov
add
fucom
mov
and
mov
xor
jmp
mov
clc
lsl
add
cmpb
sbb
or
add
aas
cld
jg
sbb
orb
push
and
pop
in
jmp
add
cmpsb
xor
mov
sbb
and
inc
mov
or
ljmp
add
dec
ret
add
mov
cmp
add
or
mov
add
adc
jne
xchg
ljmp
add
xor
jl
add
sub
addl
or
push
add
sbb
lock
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
aas
lock
notl
or
sbb
ret
les
jne
add
lret
jmp
test
add
stos
and
push
and
inc
sbb
lea
xchg
push
adc
cmp
aad
cmpb
sub
mov
jmp
dec
stc
leave
lock
push
aad
dec
dec
push
inc
lock
icebp
push
rcr
loop
sub
out
add
xor
cmpsb
sarl
incl
cwtl
lds
or
add
jmp
sbb
cmp
sub
adc
je
aas
sub
add
sbb
xchg
call
sub
rolb
or
and
add
ret
popa
rclb
stc
inc
add
fchs
xchg
addl
aas
jmp
and
add
mov
std
loopne
ds
adc
loopne
ret
lods
out
add
lret
dec
cld
cmp
orb
jae
fimull
nop
repz
push
push
adc
ljmp
daa
pop
mov
dec
xchg
sub
jns
cmp
lahf
xor
sar
add
sbb
adc
cmp
adc
mov
push
jne
lret
popa
mov
es
les
push
add
and
add
push
test
inc
sbb
shrl
add
inc
pushf
mov
cmp
mov
add
rcll
sub
push
mov
jl
xchg
xor
sub
or
push
and
mov
clc
sub
add
int3
or
lret
jns
stos
das
push
loope
mov
jae
xchg
dec
movsb
xchg
pop
add
and
ljmp
add
adc
xor
sbb
clc
fldl
add
jo
scas
xchg
adc
fwait
je
add
xchg
cmp
jmp
ficoml
jo
js
and
rolb
bswap
ret
adc
and
jl
fadds
mov
pop
push
or
sub
pop
ljmp
dec
cmp
xor
fninit
push
not
mov
cmp
sarl
add
loopne
add
add
call
out
cmp
sub
test
pop
inc
cmp
cmp
or
cmp
or
jl
add
xor
mov
addb
iret
fdivr
imul
pop
add
test
jbe
arpl
add
lret
enter
stc
push
add
dec
andl
sti
mov
cmp
ja
mov
adc
push
adc
cli
jae
pop
shll
add
call
adc
inc
mov
sub
jb
pop
jecxz
adc
int3
loopne
jne
mov
sbb
dec
leave
inc
and
movsl
std
cmp
sbb
arpl
loop
int
les
fnsave
add
stos
push
ret
orb
sub
into
dec
pop
out
mov
daa
lea
dec
add
jmp
leave
addb
xor
xchg
add
daa
or
ret
lahf
sub
je
xchg
add
shlb
add
and
add
test
dec
clc
repz
ljmp
push
and
mov
mov
or
adc
xor
and
ja
add
dec
loopne
incb
test
rorl
nop
add
add
mov
aas
sbb
daa
movzwl
mov
push
xchg
mov
jl
pop
push
add
pop
cmp
mov
bnd
xchg
jb
insb
add
mov
ret
inc
inc
push
std
dec
mov
into
mov
mov
es
push
je
nop
ds
or
out
addl
push
jne
js
add
add
test
gs
pop
cmp
cmp
les
dec
sbb
add
jne
add
mov
fildl
sub
dec
pushf
in
rcrl
add
push
jne
jno
jp
mov
lods
adc
sbb
loope
setne
and
hlt
loop
add
jecxz
rorb
shrd
sbb
xor
lds
jne
aam
and
sbb
cmpb
xor
xor
lock
xor
cmp
mov
imul
xor
bound
mov
dec
xchg
cmp
daa
mov
lds
int3
addr16
pusha
or
jle
leave
in
mov
stc
lahf
add
imul
ljmp
jmp
push
divl
add
or
add
jmp
and
inc
pusha
es
pop
in
movsb
aas
cli
or
xchg
xchg
test
je
clc
out
jl
jl
add
mov
mov
pop
inc
inc
inc
inc
inc
add
dec
dec
push
dec
dec
dec
dec
add
push
push
push
add
push
mov
pop
popa
dec
bound
data16
push
insb
sbb
outsb
outsl
add
jb
je
cmp
add
jp
xor
xor
in
ss
cmp
sbb
das
cmp
sub
cmp
add
cmp
and
daa
orb
adc
mov
sub
add
cmpsl
shrb
add
bound
pusha
sub
cmp
cld
lahf
ds
ss
hlt
cmpsb
in
sub
xor
and
cld
push
add
push
mov
insl
inc
dec
lods
inc
pop
clc
cs
adc
add
cmp
or
sarb
push
mov
fcmovbe
sahf
fistps
int3
or
lret
push
push
push
scas
bound
add
mov
or
cmpl
sub
add
xchg
es
xorl
sub
enter
jl
inc
pop
ja
imul
and
sub
mov
roll
pop
bound
inc
dec
ret
out
push
data16
mov
jne
add
inc
lock
jne
fs
and
daa
push
pop
out
pop
adcl
stos
movb
lahf
jg
push
mov
jle
sbb
sub
call
fcmovu
jge
rclb
movsb
dec
push
pop
inc
movmskps
add
jg
add
lahf
lcall
add
add
add
jbe
pop
sub
jl
push
push
aas
out
fs
add
testb
add
inc
icebp
rolb
loop
xchg
aas
adc
jl
inc
jne
loope
bswap
orb
adc
add
cwtl
sbb
adc
popf
rcrb
decl
mov
add
jne
roll
adc
out
or
ret
add
jmp
mov
sti
cmp
cmp
repz
cmc
pop
flds
sub
nop
mov
add
add
mov
daa
fprem
and
repz
movsb
mov
insb
dec
pop
inc
pusha
sub
stc
jp
mov
add
aam
in
cs
mov
idivl
bound
add
adc
mov
adc
shrl
xchg
inc
sar
out
in
imul
mov
int3
adc
add
ja
shrl
je
add
pop
push
xor
jb
or
push
jbe
cs
inc
cs
fucomp
shlb
push
adc
adc
pop
rcrl
icebp
sbb
sub
clc
sbb
mov
push
cmpb
lret
add
pop
pop
xor
out
lahf
inc
shl
mov
adc
push
add
pop
mov
cmp
xor
mov
xchg
or
lret
add
cmp
mov
sti
jb
xchg
cmpsl
stos
or
push
add
pop
adc
lret
sub
fs
jle
add
cmc
enter
sbb
cmp
add
dec
pop
inc
mov
bswap
test
xor
iret
arpl
dec
mov
dec
or
mov
pop
mov
out
jl
dec
addb
lret
sbb
add
je
stos
in
add
pop
out
xor
movsb
cmp
movsl
xorb
mov
mov
cwtl
lcall
mov
ret
push
mov
mov
pop
mov
dec
fs
neg
add
jne
xor
loopne
cmp
add
pop
jle
in
cmp
mov
push
or
in
add
es
icebp
add
jae
xchg
sub
add
pop
das
push
into
sbb
fildl
out
push
mov
jne
dec
inc
and
fbstp
add
mov
add
pop
mov
inc
inc
lds
push
dec
push
add
bswap
in
add
adc
pushf
add
mov
icebp
push
sub
add
adc
rolb
or
jl
push
add
add
dec
adc
fimull
fsts
add
in
pop
cmc
add
bound
mov
jbe
add
cs
je
mov
mov
inc
xchg
mov
jo
xor
xchg
add
mov
es
sbb
mov
dec
pop
cmp
rolb
sarl
fsubs
push
add
movb
jg
xlat
fs
scas
add
jl
in
add
push
jns
cld
jne
add
push
leave
add
jecxz
push
sub
xchg
jl
pop
dec
jl
add
push
pop
add
cmp
pop
adc
cmp
or
fmull
inc
cld
xor
or
lret
sbb
add
add
add
mov
rolw
jmp
push
fdivs
loopne
and
mov
add
xor
enter
add
push
pop
not
ret
add
add
shlb
cwtl
mov
pop
cmovle
stc
enter
repz
fisubrl
sub
lods
add
cld
shll
pushf
rolb
adc
mov
push
fcomip
movsb
clc
pop
shr
add
xchg
faddl
mov
sub
mov
bound
cmp
test
sbb
push
add
and
and
call
mov
fsub
pop
filds
jge
mov
jmp
adc
fwait
sbb
adc
or
enter
and
push
jae
cld
in
lock
notb
pusha
cmp
dec
jo
add
jmp
inc
inc
cmp
jb
pop
icebp
daa
roll
sbb
mov
clc
add
enter
cltd
dec
in
add
fmuls
lods
cmp
incl
pop
jl
movl
sub
lahf
add
adc
add
inc
adc
jecxz
or
add
jne
movsl
stos
nop
add
das
gs
jmp
aad
out
les
add
int3
mov
das
into
mov
jge
mov
lds
xor
inc
pop
mov
pop
rorb
mov
pop
push
dec
mov
add
mov
int3
and
or
into
sub
sub
leave
iret
loopne
outsl
mov
xchg
sbb
fcomps
adc
xchg
lock
mov
mov
pop
mov
xor
and
pop
out
mov
inc
pushf
add
lret
xchg
rolb
and
adc
mov
inc
mov
cmp
in
in
lret
and
test
cmp
push
sub
xor
daa
out
add
dec
mov
shlb
mov
dec
jecxz
test
lock
cmpsl
adc
or
mov
add
pop
mov
jae
add
inc
loopne
movsl
insl
add
aad
scas
and
add
out
and
aam
mov
outsl
stos
les
mov
test
sbb
ljmp
xchg
int3
leave
lea
lret
mov
push
sbb
fsubl
popf
xchg
cmc
inc
out
or
jne
sub
mov
into
mov
inc
rcl
out
loop,pt
imul
data16
add
or
cld
or
mov
jno
add
jg
je
int3
push
and
sub
pusha
xlat
add
push
enter
sbb
add
jmp
nop
xor
mov
sub
push
pop
add
movsl
scas
mov
mov
dec
loope
imul
hlt
xchg
add
das
mov
int3
ja
add
incb
dec
cltd
bnd
fimuls
dec
cwtl
loopne
mov
mov
push
mov
std
jmp
jo
or
jo
pop
add
fsubl
xchg
js
and
or
and
and
mov
push
and
inc
sub
int
das
enter
add
inc
fisubl
add
push
cmp
xchg
dec
dec
dec
mov
repnz
inc
xor
ds
roll
cwtl
sbb
call
test
inc
jge
mov
add
popa
loopne
and
or
push
sub
loop
loopne
push
and
pop
das
pop
adc
and
inc
mov
loopne
pop
push
dec
or
lods
add
fwait
and
push
add
pushl
push
loopne
add
mov
lret
iret
sbb
pusha
testb
sub
xor
sahf
cltd
clc
fsub
cli
sbb
push
xchg
mov
dec
or
pop
add
sbb
fidivs
or
negb
add
or
and
add
fs
add
daa
cmpsl
pop
ds
sbb
add
xor
into
das
shr
adc
push
inc
xchg
xor
or
in
ret
mov
add
aad
pop
jl
loope
leave
pop
imul
adc
fsts
ret
inc
ret
enter
push
daa
incb
loop
push
cmp
or
shrb
in
roll
enter
mov
daa
dec
out
sar
jno
enter
jns
add
imul
insl
jae
outsb
into
call
cmp
xor
nop
add
sti
scas
inc
nop
xor
ss
in
add
pop
push
adc
xor
mov
pop
loopne
out
adc
cld
mov
mov
pusha
sbb
imul
test
and
add
push
dec
xchg
mov
adc
and
add
stc
xchg
inc
mov
add
mov
jne
test
lret
and
add
les
js
dec
jne
adc
shl
imul
and
cmp
add
push
sbb
jmp
in
add
idivb
addb
les
popf
xor
fldl
je
sub
mov
out
rclb
sbb
pop
dec
xchg
mov
jbe
push
cmpsl
clc
cld
mov
push
cmp
pop
add
add
jbe
clc
dec
call
or
pushf
adc
or
shrl
sub
and
sbb
loopne
lds
xchg
and
je
jl
add
dec
jle
adc
hlt
and
dec
and
cwtl
std
push
dec
push
mov
xchg
sarb
lds
pop
sub
add
adc
icebp
add
mov
mov
dec
jecxz
inc
pop
jge
dec
pop
mov
jne
js
lea
outsl
push
mov
test
or
adc
mov
movsl
mov
push
gs
int3
add
mov
xor
movsl
mov
call
test
lock
sbb
xchg
push
mov
rorb
mov
sbb
insl
mov
add
xchg
jmp
inc
dec
or
inc
loopne
xor
rolb
inc
rol
ja
add
add
xchg
test
mov
push
xchg
setp
jp
or
mov
mov
push
jge
mov
in
filds
aam
push
pushf
and
adc
jmp
add
adc
pop
aam
jl
mov
add
jns
cld
in
inc
insb
add
mov
push
add
fwait
negl
push
pusha
faddp
mov
or
loope
xchg
fcoms
add
add
int3
add
testb
jp
test
push
out
sbb
idivl
mov
fdivrp
loop
dec
add
jecxz
je
and
add
aad
in
subb
mov
les
cmp
movsb
push
push
mov
test
pop
cld
jl
add
adc
inc
repnz
push
mov
sub
stos
add
sub
popa
lods
arpl
dec
call
loopne
std
jbe
test
scas
xchg
stos
mov
or
pop
sub
xchg
push
in
adc
fistl
dec
add
rclb
push
imul
out
popf
lahf
add
clc
mov
add
mov
inc
add
and
sbb
mov
cwtl
es
popf
mov
out
push
push
push
pop
sbbb
adc
subb
add
roll
pop
xchg
notl
add
js
xlat
mov
fs
pop
imul
push
hlt
xor
ror
pop
dec
jns
bound
mov
push
fimuls
mov
pop
fdivs
sbb
add
add
cmpl
add
mov
adc
add
nop
in
mov
fwait
popa
sub
dec
mov
mov
xchg
cmp
pushf
popl
xchg
ret
les
cmp
add
js
or
fisubrs
sbb
iret
shlb
adc
mov
inc
sti
sar
pop
lods
adc
cli
xorb
xor
mov
sahf
inc
adc
or
gs
cld
in
add
adc
outsl
add
cmp
mov
xchg
add
jmp
mov
adc
lods
imul
pop
fidivrs
jle
inc
add
fcompl
decb
add
mov
jne
sub
mov
fsts
and
sbb
test
push
add
aaa
lret
int
inc
daa
hlt
test
jne
add
mov
lods
fcompl
roll
mov
insb
popa
add
cmp
mov
add
aam
loope
lock
add
jge
fmull
popf
sub
xchg
add
nop
fidivl
pop
rclb
mov
lahf
add
lods
insl
add
sbb
lret
jo
pop
add
mov
mov
dec
inc
sub
fiaddl
fcmovnbe
loopne
push
insb
nop
je
movsl
daa
cld
rcrb
das
add
jmp
and
imul
leave
or
in
std
xchg
inc
dec
jne
sub
push
adc
shrb
int3
adc
sarb
xor
dec
add
rcll
rcrb
pop
nop
fistps
mov
hlt
jo
das
gs
scas
icebp
mov
dec
adc
mov
loopne
mov
xchg
scas
cld
repnz
add
mov
lea
mov
push
pop
stos
inc
nop
and
and
shll
jb
cltd
mov
sti
clc
mov
inc
in
into
add
stc
test
sbb
je
std
mov
in
jae
call
mov
jno
cmp
enter
and
pop
adc
mov
cs
add
pop
data16
xchg
sahf
inc
add
jne
sub
mov
in
xor
cmpsb
aam
add
data16
pop
lcall
jecxz
enter
sbb
adc
andb
in
ret
jns
add
into
push
call
pop
sbb
test
mov
push
cmpl
or
dec
hlt
and
adc
push
pusha
dec
movsl
push
add
pop
mov
adc
add
clc
jbe
add
sbb
sub
fsubrl
repz
add
sbb
clc
xchg
mov
cmc
inc
in
daa
dec
adc
add
mov
push
scas
mov
lahf
clc
mov
push
cmpsb
mov
xchg
mov
movsl
mov
popf
mov
adc
adcb
les
das
sbb
jae
xchg
jns
and
mov
lock
mov
and
jbe
pop
sahf
sbb
mov
pushf
fists
push
arpl
add
or
rolb
mov
enter
dec
add
mov
std
add
int3
jbe
add
movb
add
cmp
shll
imul
rcrb
js
jle
shl
fcmovbe
mov
test
mov
add
pop
les
add
pop
es
mov
mov
add
and
pushf
mov
js
fmuls
js
pop
test
mov
movsb
int3
fsubrl
rcll
aad
add
push
adc
aam
les
add
dec
pop
and
cmp
add
or
dec
sarb
popf
push
add
sbb
call
and
and
mov
adc
dec
pop
push
sub
inc
fistl
xchg
adc
push
adc
outsb
mov
mov
inc
add
adc
adc
or
sbb
mov
daa
int3
scas
or
dec
mov
push
mov
dec
rolb
adc
nop
daa
fidivl
add
push
movb
lea
add
or
jg
jle
sarl
add
js
movsl
or
add
mov
cmp
xchg
mov
inc
adc
stc
or
out
andb
mov
push
sub
sub
mov
sub
add
pop
test
push
jmp
dec
inc
fdivr
ja
fldl
std
out
cli
pop
sbb
popa
pop
popa
cmp
or
or
shr
mov
pop
pop
jae
pusha
jmp
or
jge
sub
inc
adc
ljmp
add
mov
ljmp
arpl
leave
add
sahf
sub
cmp
adc
or
loopne
push
cli
sahf
dec
xor
repnz
orl
stos
enter
add
decb
add
jb
adc
jae
pop
adc
inc
nop
mov
inc
push
push
jo
ja
cmpsl
add
cmp
fmuls
fs
repnz
adc
out
add
push
and
mov
cmp
loop
sub
fidivl
and
hlt
push
paddusw
push
sbb
imul
out
mov
mov
xor
jmp
sbbb
add
repnz
cmp
jb
xor
movlps
sbb
rcrb
inc
push
decb
pop
inc
or
add
dec
sbb
add
sbb
stos
pop
pop
add
or
xor
cmp
out
add
sub
inc
addl
mov
add
adc
arpl
mov
rorl
fwait
movswl
xor
lret
adc
dec
add
or
jb
dec
or
dec
push
flds
popf
inc
and
add
xchg
push
mov
add
mov
sbb
sub
aas
and
dec
sarb
and
mov
mov
test
pop
push
sbb
lret
adc
ret
cmp
imul
test
into
adc
dec
adc
es
xor
movsb
sbbb
movb
xor
int3
cmp
and
je
add
or
dec
xor
arpl
xor
add
call
cmp
pop
jg
ret
notb
add
dec
mov
cwtl
fs
and
int
jle
pusha
sar
inc
jns
xor
push
dec
cli
add
and
aas
xchg
add
xchg
jbe
adc
jge
test
sbbb
add
std
and
dec
xor
mov
add
ret
stos
cmp
loopne
xchg
sbb
add
cs
xchg
lods
inc
add
and
iret
inc
hlt
jno
dec
cmpsl
clc
sbb
mov
mov
fadds
out
pop
and
xchg
add
test
mov
push
inc
in
pop
or
out
adc
xchg
mov
mov
mov
xor
stos
sbb
push
daa
add
fsubr
add
pushf
jmp
add
pop
ljmp
adc
jmp
les
pop
lods
in
add
in
out
add
jne
adc
outsb
push
cwtl
adc
dec
outsb
imul
mov
shlb
aad
shr
out
sub
or
movups
sbb
loopne
adc
add
or
xchg
nop
xchg
adc
jp
jl
popa
and
je
mov
push
jne
inc
or
inc
jmp
sbb
pop
pop
pop
push
and
add
rorb
fiaddl
jmp
pusha
sbb
dec
ljmp
loopne
jmp
movl
mov
ret
lock
in
sbb
addl
paddq
add
adc
scas
add
jge
in
add
mov
int
fwait
aaa
cs
lock
call
popf
into
loopne
punpcklbw
jle
rcrb
dec
add
mov
sbb
fdivrs
add
call
jg
daa
mov
inc
hlt
rcrb
pop
add
dec
push
mov
xor
or
add
sbb
jg
idivl
call
repnz
andb
out
add
add
enter
add
mov
les
dec
sub
aad
or
mov
arpl
ja
mov
imul
int3
add
stos
adc
push
mov
push
or
cmp
decb
xor
cmp
les
adc
adcb
add
fwait
bnd
and
add
push
push
jmp
arpl
add
dec
loope
xor
cs
xchg
aas
mov
cmpsb
jmp
or
xor
inc
and
push
adc
add
pop
repz
adc
in
jle
cwtl
cmp
inc
cmp
mov
push
xchg
inc
push
inc
mov
lcall
pop
push
clc
mov
lret
pop
cmc
into
out
add
aas
jp
fsubl
mov
lret
pusha
or
out
pop
pop
inc
outsl
icebp
sbb
loop
push
add
hlt
fstpt
jne
inc
sub
fs
repnz
repnz
xchg
les
and
mov
lret
loopne
mov
pop
js
sbb
xor
ficoml
pop
cld
call
gs
int
aad
test
mov
outsb
movsb
adc
add
dec
or
add
scas
dec
push
add
cmpsb
hlt
movsl
pop
dec
push
dec
loop
add
dec
push
test
cmp
aam
add
hlt
cli
and
js
or
stc
mov
ds
pop
xor
add
jno
add
adc
lock
jbe
fcoms
and
mov
pop
add
cmp
mov
ja
sbb
test
mov
mov
mulb
clc
fbld
mov
repz
add
sbb
or
and
add
fs
call
mov
add
rolb
insb
add
rorl
int3
sbb
push
sub
roll
cmp
inc
in
sbb
add
xor
repnz
dec
cmp
add
add
add
mov
fsubr
andb
fisubrl
mov
add
xchg
xor
repz
sbb
inc
or
mov
mov
add
pop
adc
pop
pop
add
xor
mov
jo
insb
flds
in
add
jb
xorl
outsb
fs
jbe
or
bswap
lock
loopnew
sub
push
add
pop
add
adc
mov
xor
or
or
cmp
mov
add
pop
cmc
sbb
jl
add
ja
fcmovb
cmp
popl
in
ror
add
shlb
leave
pop
popf
sbb
add
lcall
add
test
mov
pop
inc
xlat
add
mov
push
cwtl
add
fcompl
inc
add
push
or
loopne
push
adc
push
incb
and
mov
testl
loope
cmp
add
iret
jne
shl
movl
inc
lods
sti
and
mov
sbb
add
ffreep
pop
clc
cmp
pop
int3
call
lea
sbb
and
jmp
or
xchg
mov
out
adc
out
adc
jp
add
xchg
into
cmp
arpl
jmp
mov
fisubl
adc
out
xchg
aam
adc
pop
or
test
and
loop
pop
sbb
inc
sub
nop
je
arpl
add
mov
jl
ret
xor
sbb
test
mov
and
add
mov
lock
ftst
cmp
push
jecxz
add
call
std
in
add
mov
addl
sbbb
jno
push
shrb
out
xchg
push
jecxz
fisttpl
sub
addb
icebp
test
ret
ss
push
or
jmp
sub
ds
bound
mov
xor
mov
js
add
cmc
jp
add
and
movups
in
mov
je
jecxz
aad
arpl
test
inc
xor
pop
sbb
and
inc
sahf
xacquire
sbb
test
sub
add
or
rcrl
xor
clc
cmc
or
hlt
repz
cmp
add
mov
and
sbb
repnz
insb
fiaddl
jp
movsl
nop
stos
enter
add
add
add
jbe
in
adc
in
add
mov
fwait
add
add
lock
or
hlt
pop
xor
loopne
sarl
add
mov
dec
idiv
lock
sub
and
adc
xor
jp
add
nop
sub
jg
loope
adcl
mov
stos
mov
scas
sbb
inc
shll
and
sti
push
test
sbb
cmp
add
fcomps
sub
or
dec
cmc
enter
ja
lds
fs
sbb
xchg
add
jmp
clc
xor
and
call
add
jl
rcr
and
add
dec
dec
push
and
or
push
inc
inc
push
ja
xor
negb
pop
lods
scas
test
add
mov
adc
mov
movsl
xchg
fadd
cld
dec
add
and
inc
addr16
dec
mov
stos
int
out
add
fdivrl
jbe
xor
add
loope
rol
add
sti
mov
push
pusha
cwtl
jl
add
incb
out
int
mov
push
add
sub
pop
ja
fnstcw
add
loopne
push
aas
movb
inc
mov
add
outsl
sbb
rorb
imul
push
adc
push
test
loopne
lods
inc
mov
fldl
and
daa
mov
add
decl
mov
das
ja
add
jle
sbbl
add
aas
add
cli
xlat
and
std
push
cmp
jge
or
push
inc
sbb
sub
test
add
lea
cld
cmp
add
out
xadd
call
jl
bound
cwtl
sbb
ljmp
or
dec
add
mov
fldl
les
xchg
movsb
push
or
cwtl
fisubl
inc
add
xor
add
sti
repz
int3
pusha
push
mov
adc
xor
sub
and
lods
idivl
add
arpl
and
imul
adc
aas
imulb
mov
add
xor
xlat
ror
les
addl
repz
loopne
scas
adc
orb
nop
mov
sub
movb
dec
fcomi
pop
cmp
cmp
add
inc
xor
aad
sbb
add
xchg
arpl
cmp
adc
cwtl
push
inc
imul
add
inc
xlat
pop
mov
push
js
mov
jmp
or
xchg
in
add
sbb
cli
out
jge
jge
pop
and
imul
or
pop
xchg
jno
cwtl
std
loopne
fdivrl
addr16
repnz
adc
cmpsb
add
pusha
test
mov
dec
fs
or
mov
bound
imul
add
add
inc
mov
rolb
fstp
or
mov
push
mov
addb
xlat
data16
in
cmpsb
add
cwtl
stos
push
enter
xchg
xor
iret
dec
add
add
sti
adc
or
cmp
das
inc
mov
dec
cli
sahf
add
add
or
fsubrs
mov
leave
sbbl
cwtl
and
sti
shl
add
frstor
or
mov
sub
out
add
xor
sbb
xchg
add
aaa
ret
or
adc
cmp
aad
andb
repnz
add
adc
inc
jmp
push
sbb
les
add
and
add
loop
sti
cmp
cmp
out
cmovb
adc
jb
nop
push
add
add
xorl
mov
cmc
aam
stos
test
out
nop
add
cmp
pushl
in
popf
mov
add
jb
divb
rolb
or
or
sub
jo
popa
dec
popf
insl
inc
cmp
mov
adc
cmp
add
in
sbb
daa
pop
fists
and
or
cltd
mov
inc
ljmp
dec
test
fidivs
fimuls
sahf
add
add
mov
aas
and
or
add
mov
mov
jle
jg
hlt
roll
loop
cmp
cli
daa
sub
and
jns
out
add
add
inc
ficompl
add
sbb
loopne
mov
rcl
fld
push
out
pop
fidivrs
inc
iret
inc
in
add
push
cmp
pop
mov
int3
nop
or
add
push
lods
push
pop
out
and
sub
hlt
inc
leave
enter
out
add
inc
push
ljmp
pop
ljmp
inc
shl
or
pop
sub
fimuls
das
or
sbb
pushf
pop
add
add
rol
xorl
add
sub
cmp
dec
add
leave
or
lock
lcall
add
pop
and
sub
leave
mov
add
xchg
int3
aad
sbb
xor
add
out
decl
roll
pop
test
xor
add
dec
jle
outsl
add
adc
jge
add
out
sbb
nop
mov
rcll
mov
frstor
or
add
adc
shrb
idivl
mov
repnz
mov
mov
rcl
sub
repz
push
add
ret
roll
xlat
push
es
fstpl
popa
dec
mov
cli
cmc
call
add
es
mov
add
ret
jg
pop
push
push
fcoml
movzwl
rcl
call
adc
or
outsl
psubd
mov
mov
add
inc
sub
dec
test
lods
jge
add
testb
add
out
inc
add
mov
call
dec
xchg
stc
lock
cmp
test
or
ljmp
push
dec
mov
aas
cli
sub
add
and
jge
add
pop
sti
inc
sub
loopne
adc
push
mov
mov
mov
lock
cmpb
push
adc
mov
loopne
and
inc
pop
icebp
cmc
sub
mov
add
lahf
xlat
cmp
inc
mov
pusha
ljmp
add
inc
push
add
add
sub
push
loopne
les
or
fdivrs
sbb
loope
push
xor
clc
enter
xor
adc
loop
or
cwtl
add
pop
std
not
jns
clc
cmp
int
out
insb
outsl
dec
insl
mov
jecxz
clc
cmp
daa
xchg
ljmp
mov
adc
out
gs
jp
insb
add
dec
xor
add
sbb
iret
hlt
add
fs
cs
daa
push
test
push
add
add
jle
add
add
sbb
adcl
pop
mov
notb
cmp
lcall
add
aaa
and
adc
out
lret
testb
pop
cmp
add
or
iret
xchg
fildl
or
sbb
inc
push
in
or
pusha
clc
fwait
add
cmp
adc
adc
pop
ss
push
fwait
jb
add
ds
lods
cli
inc
add
push
and
or
adc
sub
loop
test
mov
add
jmp
mov
adc
jp
mov
push
or
inc
mov
and
dec
fstpl
xchg
sarb
jne
jge
add
addr16
enter
add
jle
cmp
call
xor
push
fidivl
loopne
adcb
and
add
dec
call
add
test
fs
les
jmp
jge
add
out
jl
pminub
imul
mov
test
aas
sub
sbb
inc
xor
xor
movsb
sbb
aas
dec
pop
adc
test
fs
fistpll
add
mov
arpl
xor
add
sbb
addl
mov
and
into
repnz
and
aam
gs
xor
sbb
push
fs
test
and
adc
or
adc
xlat
or
sub
lock
add
das
jno
jmp
jp
add
pop
scas
out
or
pop
pop
jae
mov
xor
out
test
push
xor
and
int3
add
adc
mov
push
push
in
jle
or
and
call
aaa
add
push
adcl
add
mov
and
adc
sahf
or
mov
pop
test
inc
or
pop
std
cmp
push
movsb
lcall
dec
fdivl
add
enter
mov
outsl
adc
lds
in
mov
push
xor
cmp
jle
pushf
or
adc
and
bound
les
xlat
ret
push
jns
cmp
adc
pop
sbbb
adc
ds
add
push
test
xor
lds
or
aas
xor
outsb
rorl
js
adc
lar
gs
cmp
xor
lods
jmp
pushf
push
add
pop
stos
or
xor
call
pop
aam
add
sub
cmpsb
add
and
sarb
popl
cmp
push
xor
mov
pop
cmp
incl
jo
dec
add
mov
enter
add
test
xchg
or
int
adc
sub
jge
add
std
adc
or
xchg
jg
mov
add
push
daa
arpl
cld
sub
or
stos
in
push
in
lods
fsubrs
mov
nopl
fcmovnb
sub
test
shl
shl
in
into
or
cmpsl
incl
add
je
cmp
xchg
sbb
les
and
cmp
out
sbb
push
xor
lcall
xor
adc
fcmovnu
add
sub
inc
dec
adc
or
into
mov
push
and
or
inc
aas
loopne
jmp
xor
imul
aaa
cs
inc
js
inc
mov
das
ds
mov
mov
aas
shl
enter
int3
fdivl
adc
push
xor
mov
or
pop
loop
adc
add
loope
add
push
std
les
inc
fdiv
or
cs
push
out
add
lret
frstor
jl
aas
cmc
popa
decb
push
sub
nop
pop
pop
lret
add
jbe
test
fdivs
jo
cmpsb
add
ja
jno
dec
pop
sbb
les
sub
aaa
mov
adc
mov
and
clc
lds
call
add
adc
dec
pop
loope
neg
mov
pop
or
repz
and
std
hlt
pop
fcomps
in
and
and
sub
loop
add
rcrl
adc
jo
mov
int3
orb
clc
xchg
add
sbb
nop
xchg
mov
push
and
dec
daa
add
dec
adc
inc
adc
or
cmp
js
js
add
fisttps
addr16
in
cmp
adc
pop
mov
add
and
loop
sbb
jnp
add
inc
ret
orb
sbb
dec
push
cmp
repnz
push
mov
cld
or
inc
inc
out
call
sbb
lock
xor
cld
sarl
out
mov
add
test
jecxz
add
or
aas
sub
adc
mov
sbb
addr16
adc
pavgb
testb
jo
clc
xchg
sbb
repz
mov
stos
hlt
or
add
rorl
adc
pusha
mov
movq
add
sbb
and
arpl
out
outsb
mov
or
test
stc
mov
pop
nop
inc
mov
dec
lahf
jp
sbb
add
in
adc
lahf
mov
add
inc
or
pop
loopne
jl
jnp
pop
mov
push
repz
pushf
cmpsb
and
iret
stos
test
add
les
jge
mull
inc
adc
in
add
outsl
popa
imul
push
mov
cmp
jmp
dec
cmpb
adc
add
aaa
sub
iret
or
jecxz
enter
jle
faddl
mov
out
rolb
xchg
cmp
call
and
out
adcb
jle
mov
dec
sbb
clc
xor
sbb
stos
add
movsl
adc
add
adc
clc
add
shrb
in
xchg
xor
sbb
or
lock
psubusw
and
push
cmpsl
outsb
pushf
push
cmpsb
cld
je
jle
out
mov
push
jmp
cltd
mov
sbb
sbb
mov
in
inc
jp
shrb
jle
add
cmp
sar
pop
add
or
std
xor
lcall
cli
inc
xor
xor
mov
or
push
in
cmp
into
add
pop
adc
mov
or
push
jle
and
push
loopne
mov
test
in
push
add
or
xchg
sub
adc
pop
pop
loop
aam
adc
in
pop
jbe
jle
ds
into
mov
add
jns
pop
shlb
push
and
sbbb
cmp
mov
lcall
scas
icebp
lods
xchg
sidtl
in
test
cmpsl
iret
adc
lock
loop
cli
pop
xor
xor
adc
sub
loop
add
pop
sbb
cmp
jg
add
add
inc
push
dec
adc
xlat
jno
add
sbb
icebp
pop
xor
lret
lock
push
dec
adc
pop
popf
or
ret
push
pop
repnz
aas
inc
dec
arpl
sbb
adc
jo
push
jne
clc
add
sbb
pushf
ret
jg
adcb
add
cmp
add
xchg
add
mov
xor
inc
inc
stc
mov
jmp
cld
das
xorb
add
dec
je
add
inc
hlt
xor
enter
shl
push
and
movb
cmpsl
sbb
sub
xchg
in
scas
pushf
test
add
adc
sbb
add
mov
lcall
dec
ficoml
sbb
pop
in
inc
xor
jbe
pop
test
shl
add
add
inc
xchg
add
xchg
mov
jle,pt
add
and
repnz
addb
arpl
push
or
out
sbb
add
mov
sub
stc
xor
call
lahf
inc
or
push
lods
xor
loopne
pop
mov
repz
cs
mov
test
sbb
push
fs
push
dec
lcall
xor
je
add
push
cmp
test
jecxz
jp
call
loope
and
pushf
adc
mov
push
incl
cld
pop
sbb
sbb
and
out
xor
inc
sub
xor
repnz
in
push
inc
add
inc
scas
and
inc
add
lea
or
enter
or
xchg
cli
push
stos
mov
clc
mov
mov
divb
stos
lock
lock
hlt
mov
stc
cmp
lock
jo
fsubl
in
repnz
add
and
test
sbbb
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
mov
mov
pop
push
or
test
mov
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
add
push
inc
lods
or
cmp
outsb
sbb
add
out
jmp
scas
in
inc
add
shrb
and
dec
pop
xchg
add
inc
or
and
and
sbb
adc
mov
andb
shrb
jb
pop
cmp
push
mov
xor
xchg
lcall
mov
ret
add
repz
add
es
in
jp
jo
xor
sbb
push
inc
hlt
jmp
clc
sbb
shll
add
ficoms
xor
xor
cmp
popl
push
jmp
mov
mov
scas
adc
sahf
inc
and
inc
sbb
and
rorb
sub
ljmp
xor
sarl
sbb
push
mov
aam
xorb
add
pop
dec
push
add
add
hlt
lret
cld
enter
sbb
add
mov
mov
add
roll
shll
dec
and
out
lods
mov
add
rcr
inc
daa
add
lock
outsb
nop
jecxz
jnp
std
add
add
dec
daa
jne
jbe
cmp
inc
xor
add
je
jcxz
push
and
mov
xor
movsl
call
xor
in
out
pop
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
sarb
add
roll
add
xchg
in
pop
orb
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
rcl
sar
sarb
lock
xor
pop
xor
add
shl
cwtl
mov
inc
xor
dec
testb
shlb
hlt
xadd
cld
cmp
insl
dec
shlb
movsl
push
lock
dec
cmp
cmp
sti
loopne
add
stc
addl
sub
inc
sub
imulb
cmp
mov
das
mov
in
push
sub
sarb
and
test
add
and
ret
pop
jecxz
and
loope
mov
lret
and
jmp
sti
pusha
mov
arpl
mov
inc
bound
movaps
jo
add
add
insb
shrl
add
shrb
and
scas
out
mov
out
imul
stos
add
test
push
loopne
lock
stos
add
inc
jg
jg
jg
jbe
sbb
loopne
add
mov
xor
mov
je
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
add
rcll
xchg
rclb
push
jae
jne
ja
sbb
cmp
adcl
pop
inc
popf
loopne
addb
sbbl
fwait
rcrb
cltd
mov
inc
cwtl
mov
dec
mov
rorl
cmovle
mov
rorb
inc
jo
add
roll
rolb
into
into
xchg
scas
inc
in
cmp
mov
in
add
rorb
push
mov
add
in
pushf
pop
pop
add
xor
popf
push
pusha
mov
test
inc
add
push
push
push
out
add
mov
ss
pop
popf
mov
pop
pop
pop
test
inc
mov
sbb
pusha
push
inc
shl
jae
sbb
call
aas
push
scas
add
mov
add
movl
adc
movsb
dec
rorb
sub
loopne
push
pop
xor
add
mov
fistpll
add
arpl
add
call
minps
xor
pop
mov
jle
insb
add
push
cld
cli
mov
and
cmp
lods
add
ret
rcll
ljmp
repz
sar
enter
dec
or
mov
clc
test
pop
pextrw
pushf
sub
mov
shlb
inc
lods
add
and
dec
mov
outsl
enter
cld
dec
bnd
pop
aad
int3
push
lods
cmp
push
jae
jmp
add
sub
push
test
repnz
add
mov
xchg
and
cli
add
push
int3
gs
or
decl
xchg
hlt
je
rolb
mov
cmc
add
lea
inc
pop
cwtl
mov
lock
push
lcall
xchg
cmp
inc
add
lret
jbe
test
cltd
mov
sub
push
cwtl
addr16
jge
add
xor
cmp
shrb
or
pop
cmp
mov
push
cmp
mov
pop
test
inc
add
cmp
repz
dec
and
and
addr16
stos
mov
ret
in
les
leave
cmp
icebp
pop
shlb
pop
jmp
add
or
repnz
xchg
dec
xchg
sbb
into
sbb
pop
adc
add
icebp
cmp
mov
cmp
iret
pop
fsubp
push
push
fldenv
adc
outsl
add
sub
mov
test
sbb
and
adc
shrd
mov
add
and
jno
popf
sub
add
add
mov
and
data16
cwtl
mov
sarb
or
push
adc
add
jb
stc
jbe
push
add
push
xchg
cli
fisubs
sbb
movsl
aas
stc
bound
adc
mov
pop
repz
push
test
add
nop
push
fcompl
stc
movsb
ret
in
and
lods
dec
or
addl
pusha
cmp
and
xor
push
cmp
and
and
movsl
adc
jo
add
or
mov
sbb
push
and
and
leave
or
nop
div
xor
add
imul
mov
outsb
sub
arpl
add
je
stos
leave
loope
lock
dec
pop
cld
jno
cmp
mov
adc
lret
mov
mov
mov
int3
sub
andb
sti
jo
mov
mov
sbb
nop
jecxz
mov
lock
xor
stos
pop
and
dec
pop
adc
add
add
inc
and
or
pop
icebp
add
push
mov
jle
add
pop
push
or
cmp
das
mov
inc
pop
mov
sbb
aas
aam
lea
xchg
pushf
cmp
js
or
or
add
adc
idivl
jmp
repz
stos
and
or
xor
test
add
xor
mov
ret
mov
int3
icebp
or
leave
loopne
push
popf
push
add
mov
loopne
add
pusha
xchg
roll
pop
cmp
push
adc
mov
leave
je
inc
mov
adc
roll
int
inc
dec
mov
xor
sarb
hlt
push
add
or
mov
inc
xor
dec
add
sbb
or
mov
jmp
repnz
outsb
cmpsb
push
push
inc
dec
sahf
stc
adc
scas
gs
jno
pop
inc
push
and
dec
lahf
and
or
or
fcmovbe
dec
ret
stos
add
hlt
dec
add
xor
add
inc
pop
xor
mov
pop
fnstcw
cld
sbb
or
push
push
ret
xchg
or
lret
adc
sub
adc
adcl
jmp
leave
pushf
loope
inc
push
add
and
cld
xor
mov
test
mov
icebp
jno
add
imul
pop
add
xlat
mov
add
filds
jae
sub
push
stc
lret
jg
jecxz
adc
xor
cwtl
add
sub
fbld
and
mov
mov
ficoms
dec
or
mov
jo
lock
inc
xchg
mov
push
pop
add
push
pop
pop
add
cwtl
loop
mov
sub
xor
add
shl
icebp
and
add
insl
cmc
and
xchg
push
push
lcall
data16
xor
sti
cli
add
in
repz
repnz
add
addb
push
adc
sbb
shrb
push
adc
xor
repz
nop
out
out
jecxz
mov
mov
nop
cmp
sti
out
imul
and
cmpb
cmp
lea
cmp
xor
mov
movzbl
mov
dec
add
stc
sbb
ja
mov
xor
cmp
pop
orb
cmc
push
roll
insb
int3
push
rol
mov
sti
sub
add
mov
mov
cmc
sahf
add
cmp
add
pop
cmp
test
incl
pop
shr
dec
loope
sarb
inc
mov
lea
jo
and
push
cmp
inc
push
add
dec
add
jne
xchg
lahf
push
mov
add
and
push
mov
jge
std
sbb
xor
cmp
test
popf
jl
les
xchg
dec
add
add
mov
sbb
sldt
xchg
std
lahf
add
aaa
push
sbb
jmp
mov
lods
sub
add
push
outsl
add
pushl
add
test
jge
out
adc
divl
lahf
jnp
lods
mov
cmpl
cmp
stos
popf
mov
add
mov
in
sbb
jl
enter
push
mov
inc
jno
or
test
or
testl
add
in
cmp
mov
mov
adc
incl
xchg
jb
push
or
or
out
push
add
cmp
or
xor
add
sarl
mov
xor
push
push
lea
push
dec
or
or
mov
inc
cmpsb
mov
add
mov
out
adc
mov
loope
ja
add
sub
in
insb
out
dec
clc
hlt
test
xor
add
cmp
inc
adc
dec
movsl
fisubl
and
fsubrs
mov
push
jg
adc
rclb
sub
outsb
into
shrb
mov
or
lea
xor
add
in
ss
rclb
add
mov
inc
out
rcr
push
ja
add
repnz
adc
add
loop
shll
decl
push
sbb
inc
or
pop
loop
out
pop
arpl
imul
mov
loopne
add
dec
ret
dec
inc
sbb
notb
movsl
add
loopne
subl
mov
jbe
mov
cmp
je
lret
add
jo
mov
movsl
loope
imul
mov
push
xchg
idivb
or
mov
jl
add
in
in
stos
jmp
jne
adc
les
add
pop
test
loope
dec
push
mov
add
sub
add
shrb
pop
sub
dec
test
jnp
or
lcall
xchg
pop
inc
mov
lahf
scas
loopne
xor
add
fs
jno
mov
sub
pop
out
rol
add
testb
cs
loopne
movw
ret
push
out
or
clc
adc
cli
xor
add
push
sbb
ret
fisttpll
xor
adc
mov
sbb
add
rorb
or
out
cmp
loopne
sub
jno
packsswb
je
xchg
and
pop
adc
push
adcl
mov
loop
repnz
in
inc
push
aam
push
push
mov
pop
jne
incl
jle
sbb
ljmp
les
arpl
mov
dec
test
jbe
add
loop
xor
dec
addr16
mov
dec
scas
jbe
pop
pop
xchg
push
adc
pop
mov
add
insb
inc
add
jbe
dec
xor
pop
cmp
test
inc
xor
ja
jbe
add
loope
cli
jo
movb
fcmovnu
or
inc
mov
ficompl
fstps
cmp
rol
mov
mov
das
add
int3
cmp
xor
pop
mov
push
roll
cld
mov
or
dec
es
lret
in
loopnew
fmull
mov
test
mov
imul
or
push
loopne
mov
pmulhw
or
scas
repz
mov
and
pop
loopne
dec
test
add
jle
mov
add
dec
mov
push
add
inc
daa
lahf
or
pushf
mov
cmpsl
sub
xlat
mov
cmc
add
sub
pop
adc
add
fists
cmp
mov
hlt
shr
mov
lock
ret
jg
pop
test
mov
add
sub
inc
outsb
add
and
jo
add
fiaddl
jmp
ror
dec
mov
rcl
add
sbb
loopne
add
mov
or
shlb
andl
adc
or
add
test
add
nop
sbb
outsl
add
sub
loopne
js
mov
inc
push
in
add
stos
pop
icebp
ljmp
add
jns
int3
fdivl
push
pop
or
ficompl
pop
and
xchg
pop
mov
add
out
and
sbb
inc
stos
mov
jbe
xlat
add
dec
add
and
jmp
mov
cmp
xchg
xchg
and
jl
movsb
dec
add
fimuls
mov
lock
push
mov
pop
rolb
adc
mov
push
xchg
or
out
add
xor
in
mov
cmp
sbb
lds
add
cld
in
cmp
mov
shrb
lock
pop
fsubl
notb
outsl
fs
data16
mov
sub
add
idivb
inc
adc
hlt
mov
add
clc
add
sub
mov
pop
mov
push
mov
leave
dec
int
in
stc
fcoml
fcmovnu
enter
inc
or
xchg
mov
add
ret
shlb
add
xor
lret
cmp
stc
sahf
cwtl
mov
ja
xchg
ror
add
inc
sub
pop
sub
lock
inc
jbe
pop
add
mov
out
mov
push
out
fistps
sub
jmp
add
push
mov
mov
push
lock
push
cmp
dec
loopne
loop
xor
jle
test
aam
xchg
add
cmpb
inc
gs
jl
or
adc
mov
mov
pop
xchg
push
add
mov
mov
add
xchg
cli
xchg
add
icebp
shll
and
dec
mov
std
add
push
add
dec
or
ret
jmp
add
push
mov
add
sub
add
rcrl
aam
cld
push
push
ret
jg
add
into
or
push
mov
inc
in
cmp
sub
dec
cltd
je
sub
xchg
add
add
sub
movb
push
jns
sub
add
push
cmpsl
pop
adc
dec
push
stos
cmpb
add
jne
sbbb
dec
or
loopne
mov
mov
add
add
mov
cld
push
add
cmp
das
fcoms
cmp
and
inc
push
cld
mov
in
in
ja
inc
or
sar
loope
xlat
inc
lret
add
sub
pop
add
pusha
push
sbb
repz
orb
add
xor
incl
es
dec
jo
addl
push
push
movsl
pop
add
xchg
inc
arpl
clc
imul
aaa
movl
push
test
push
xor
jo
inc
sbb
popa
or
cmp
cmpsl
xorb
stos
shl
lock
sbb
pop
and
test
mov
dec
push
in
jne
rclb
lea
inc
sbb
jl
add
and
shll
mov
add
mov
incl
pop
adc
hlt
mov
jecxz
cmp
std
sub
jle
orb
add
inc
mov
call
add
ret
add
ja
xor
or
xchg
fcmovnb
ljmp
push
add
add
sbb
loopne
fistpll
xor
xor
or
test
lret
add
cmp
jge
mov
inc
dec
push
or
or
ret
add
xchg
je
add
stos
add
fimull
add
mov
jae
jb
arpl
mov
sub
mov
cmp
inc
test
cwtl
mov
or
lret
call
xchg
mov
xchg
add
add
jns
jge
cwtl
sub
adc
imul
add
imul
mov
call
pushf
adc
add
xchg
mov
dec
add
leave
inc
jb
out
or
xchg
hlt
push
pop
push
mov
popf
xlat
fcoml
incl
dec
sbb
cmpsl
pop
ljmpw
jnp
jle
je
jo
push
aad
in
shrb
adc
pop
cltd
inc
aas
cmpsb
mov
pop
and
add
fsubr
xor
subb
mov
add
mov
aam
or
lock
or
cs
and
arpl
and
add
push
jne
push
pop
add
jp
test
negb
inc
lods
add
lock
cmp
and
adc
or
push
push
gs
std
lret
popa
inc
or
jg
add
sub
push
add
cwtl
inc
aam
sarb
add
or
fistl
xchg
pop
pop
popf
mov
movsl
rcrl
xchg
pop
inc
add
je
fsubl
je
cmp
inc
jbe
aad
xor
jg
add
adc
fstpt
push
fadds
not
movsl
cmp
mov
enter
test
adc
cmpsl
pop
sgdtl
push
cmpb
sub
dec
aaa
test
add
pop
inc
inc
dec
push
cwtl
sbb
adc
add
mov
xchg
cltd
add
rclb
pop
stos
and
out
outsl
pop
scas
mov
or
lock
cmp
shrb
clc
mov
dec
add
xor
mov
pop
out
test
int3
cmp
jg
ret
mov
aad
sahf
and
jns
jl
add
cmpb
lret
push
or
ret
add
xor
popa
cmp
mov
fs
add
or
xor
push
popa
xlat
jo
out
cmp
or
push
pop
lcall
push
imul
fnstsw
sbb
mov
decl
cmp
aam
adc
dec
jne
ja
movsb
jg
add
jl
sub
push
and
push
iret
ljmp
inc
pop
pop
xchg
lret
mov
mov
cltd
fcoms
adc
aad
add
mov
in
jno
cwtl
push
or
add
xor
inc
stos
shrb
lret
add
push
or
movb
cmp
adc
dec
jle
sub
test
adc
sub
xchg
add
mov
add
fnstcw
stos
js
jg
out
lds
pushf
or
push
loop
fiaddl
jno
adc
add
mov
pusha
inc
push
icebp
push
es
pop
je
add
jp
lods
inc
add
add
jbe
movsl
ret
pop
xchg
push
ljmp
mov
jecxz
into
add
fs
push
pop
fucom
aad
clc
cli
sub
sbb
push
pop
add
and
lock
hlt
add
adc
sbb
lock
push
pusha
mov
rorb
add
push
jo
xlat
inc
mov
mov
movsb
add
in
popa
enter
pop
adc
add
jbe
clc
les
dec
scas
xor
adc
bswap
add
stos
rolb
push
loopne
ret
inc
cmp
clc
stos
push
and
loopne
add
cld
add
or
lea
iret
cmp
or
and
push
pop
imul
mov
mov
dec
xor
push
adc
add
aas
jno
test
pop
add
loopne
pop
add
scas
int
sub
ljmp
mov
sbb
jle
xchg
push
nop
and
add
xor
sub
cmpsb
popa
or
jecxz
imul
rcrb
inc
js
add
test
mov
jmp
rolb
push
push
int3
xchg
ret
pop
add
adcl
int
loopne
mov
add
adc
cld
jae
cs
andb
ja
insl
or
dec
cs
cmpsb
adc
mov
add
idiv
test
clc
jmp
dec
shlb
add
sub
pop
lahf
jbe
add
sub
sar
popf
dec
and
repnz
cmpsb
jb
or
add
sarb
cmp
dec
inc
add
push
ret
clc
xchg
sub
pop
cld
rorb
addr16
stos
add
cmp
lds
mov
rol
or
fadds
cwtd
inc
inc
stos
mov
add
je
rorl
rcr
loopne
fsubrs
dec
add
sub
pop
cwtl
in
or
mov
mov
les
add
push
shlb
pop
inc
fadds
mov
jbe
and
dec
mov
push
js
add
push
inc
test
loop
lock
sub
add
add
adc
and
add
push
pop
stos
push
mov
and
mov
mov
jno
lds
stos
les
das
push
add
inc
mov
outsb
aas
pop
jnp
mov
add
mov
js
dec
stos
add
and
dec
data16
mov
mov
dec
add
fcoml
push
incb
pop
inc
popa
call
add
std
adc
sti
push
push
test
inc
inc
clc
sbb
and
idivb
inc
testl
test
xchg
jl
add
mov
test
incb
xor
ljmp
leave
adc
add
loope
test
jle
es
in
adc
mov
pop
pushf
xchg
inc
shll
xor
or
mov
inc
inc
pop
pop
mov
les
sub
mov
xlat
and
sbb
xchg
jge
rorb
pop
leave
dec
arpl
shlb
sahf
cmp
insb
sub
lcall
jp
cmp
or
pop
xor
arpl
call
incl
add
stos
sbb
call
add
sbb
out
stos
pusha
xor
cld
and
pop
adc
xor
aaa
cmp
pop
mov
insl
adc
jbe
shl
xor
addb
or
xchg
pop
adc
xchg
lret
int3
jl
mov
inc
push
mov
subl
stc
push
adc
pop
in
add
sub
repz
dec
frstor
add
mov
les
call
or
add
ret
inc
adc
and
lret
les
or
sbb
jmp
or
dec
add
stos
dec
adc
xor
xchg
and
add
cmp
inc
lret
adc
add
push
fistl
jo
add
out
lea
testl
xor
pop
xor
mov
add
pop
jb
push
divl
inc
sbb
in
mov
pop
xor
cmp
add
and
test
mov
add
repz
dec
add
rcrl
cmpsl
xchg
clc
mov
inc
add
cmp
dec
sbb
jo
push
fldenv
cmp
add
sahf
sbb
pop
test
add
daa
gs
inc
sbb
inc
dec
pop
xchg
xor
mov
add
dec
cmpsl
xchg
mov
addb
in
push
das
test
aam
cmpsb
add
xor
sbb
mov
xor
add
call
gs
sbb
sti
lcall
dec
push
push
pusha
pop
cmp
inc
add
popl
add
adc
and
cmp
and
push
sub
inc
scas
imul
sub
stc
adc
or
push
sti
movlps
ret
jmp
and
jno
add
push
arpl
jne
and
adc
loop
pop
add
jmp
clc
cmpb
stos
pop
icebp
pop
sub
daa
lahf
loopne
pop
sub
cli
push
xor
mov
stc
movsb
notl
sub
pop
mov
push
xor
sub
and
das
cwtl
clc
sahf
push
pop
xchg
pop
andb
xchg
clc
mov
je
add
lods
or
jbe
pop
testb
pop
jno
addl
out
lds
mov
rorb
push
jno
dec
jp
mov
call
push
les
mov
test
je
xor
dec
ja
cli
std
das
or
mov
adc
out
add
pop
inc
and
add
cltd
mov
mov
lcall
sbb
roll
les
inc
mov
mov
add
pop
or
push
cmp
pop
cmpsb
addr16
xlat
push
aas
cld
test
pop
imul
icebp
cmpsl
mull
sub
add
xlat
and
mov
sahf
add
cld
pop
mov
repnz
jns
cli
push
test
mov
or
pop
add
sbb
inc
pop
inc
loope
inc
and
ret
andb
pop
add
mov
mov
push
add
subl
sbb
movsl
sbb
mov
loopne
sarb
and
add
pop
in
sbb
je
rol
jbe
jo
xchg
cmp
sub
stos
mov
movsl
dec
fisttpl
jmp
and
adc
sbb
test
sub
add
xchg
cmp
imul
inc
pop
notb
addr16
push
cltd
pop
add
or
pop
and
add
push
mov
add
or
in
jbe
sub
pop
push
push
lods
mov
movsb
add
enter
movsl
out
sbb
loope
rol
or
dec
clc
cmpsl
and
mov
add
mov
mov
movsl
outsb
icebp
push
lock
jecxz
add
sbb
or
outsl
or
adc
xlat
fs
mov
pop
cmpsl
loopne
add
je
mov
xchg
sahf
add
inc
sbbl
clc
addb
jbe
cmc
xchg
test
addb
push
cwtl
loope
xchg
or
xchg
jbe
cmp
std
imul
dec
pushf
inc
outsl
bound
and
repnz
add
in
lock
clc
jo
add
xchg
je
jns
popa
sbb
repz
add
mov
in
cmp
or
pusha
pop
hlt
dec
mov
cmc
sub
bound
clc
incl
out
stos
cmp
add
repnz
sbb
push
aad
inc
in
xor
jnp
inc
push
cmp
shrb
or
mov
pop
add
fbld
jns
xchg
add
cld
pop
loop
lods
dec
out
inc
fbstp
aad
cltd
lea
jp
mov
pop
jb
addl
data16
push
daa
iret
jo
pushf
cltd
rcr
add
jno
jg
pop
mov
dec
sahf
jnp
add
add
jae
cmp
add
xchg
xor
mov
jnp
add
fisttpll
imul
arpl
shl
clc
jg
push
mov
loopne
or
add
dec
pop
movsb
dec
loop
add
sbb
rolb
sub
fs
add
lea
add
inc
cld
mov
int3
mov
jbe
add
fnsetpm(287
lods
add
std
dec
push
add
mov
xor
inc
fldl
insl
xchg
add
mov
mov
add
jns
cmp
fildl
mov
sar
sub
sbb
jp
push
add
lcall
shlb
ret
cmp
add
inc
or
mov
and
lcall
cmovle
xchg
inc
inc
or
mov
add
add
xchg
add
sbb
in
pop
add
xchg
pushf
call
push
cmp
sti
pop
adc
inc
inc
adc
loop
std
lock
sub
push
add
pop
cmpsl
insl
add
mulb
adc
out
add
test
arpl
xchg
cmp
and
movsl
adc
test
push
push
xorb
lret
pop
loopne
pop
lahf
lods
xchg
push
repz
std
scas
inc
scas
fcmovne
mov
xor
pop
add
js
rorl
test
cmc
movsb
pop
or
add
stos
enter
pop
pop
or
push
xor
test
mov
testl
fists
nop
and
push
add
jo
xchg
add
fs
cwtl
test
or
xchg
inc
mov
push
dec
xor
mov
orb
dec
push
lds
emms
bound
mov
push
add
arpl
data16
jae
outsb
cmp
add
inc
sbb
push
inc
inc
jl
pusha
jbe
jb
stc
jmp
add
lock
cmpsb
and
push
sbb
jmp
dec
jge
push
jl
iret
nop
dec
dec
outsb
idivb
addr16
push
in
cmp
jne
pop
outsl
insb
shlb
push
out
add
jae
jns
jle
outsl
fs
test
inc
cmp
test
fwait
add
jno
jp
mov
test
arpl
add
push
popa
jb
pusha
ret
add
jl
addr16
adc
add
push
jno
inc
popa
les
je
in
test
dec
outsb
dec
push
jbe
pop
ja
push
inc
mov
or
push
add
jae
arpl
inc
outsl
test
inc
push
push
sbb
imul
arpl
inc
jne
dec
js
mov
aas
push
popa
add
pusha
daa
push
outsl
add
outsb
add
into
sarb
and
xor
gs
imul
shr
xchg
xor
loopne
dec
jl
jns
mov
xor
add
push
adc
add
jbe
and
push
mulb
in
sub
test
lock
push
bound
sahf
jbe
inc
test
add
push
pusha
xchg
sbb
inc
ja
arpl
and
inc
leave
jno
add
jmp
insl
add
adc
sub
dec
sti
add
and
jl
mov
fbstp
pop
adc
jp
jnp
inc
nop
fidivrl
orl
mov
in
push
cwtl
mov
inc
sbb
mov
inc
add
add
and
int3
cmp
push
int3
xor
adc
andb
add
push
pop
js
mov
sarb
add
mov
xchg
adc
cmp
ja
dec
int3
sbb
cmp
mov
in
cli
testb
add
out
or
xchg
mov
insb
add
lea
or
jp
add
rclb
or
pusha
mov
dec
test
int
sbb
inc
adc
push
pop
ret
out
fs
scas
cmpsl
jl
jae
add
popf
loop
std
ss
in
in
dec
push
cld
mov
hlt
add
jo
mov
mov
push
bswap
mov
jne
add
inc
loop
jge
lds
mov
mov
subb
sbb
pop
jmp
push
mov
pop
add
pusha
xchg
dec
or
pop
ljmp
jle
clc
add
mov
jb
sbb
xor
into
and
shll
cmp
xchg
daa
jl
add
add
repnz
jns
fiaddl
jge
cmp
rorb
inc
jge
add
and
flds
add
pop
adcl
or
ret
shlb
and
mov
cmpb
adc
ret
fiadds
in
int
out
mov
fcoml
jno
xchg
xchg
cmpsl
hlt
cmp
sub
fstps
push
enter
cmp
mov
ljmp
xor
xor
add
and
inc
nop
xor
add
mov
adc
push
push
mov
in
ljmp
sbb
jae
out
mov
sub
add
or
test
add
dec
mov
fs
repnz
aaa
xchg
jo
mov
outsl
and
add
mov
pushf
jge
inc
cmp
mov
mov
xchg
jns
add
and
mov
add
out
mov
scas
push
test
into
cmc
add
rol
test
sbb
leave
or
inc
pusha
std
and
dec
pop
es
cmp
je
push
dec
mov
fs
repnz
insl
cmc
shll
push
nop
mov
cmp
pop
loop
pop
inc
mov
mov
and
pop
inc
enter
test
rorb
mov
sub
fmull
loopne
in
push
call
pop
inc
in
movsl
mov
lock
hlt
push
aas
pop
arpl
mov
sbb
cmc
pop
hlt
jmp
push
lcall
or
or
ja
and
adc
add
clc
sbb
les
xor
or
jnp
sub
icebp
movb
xor
inc
cmp
jbe
add
lds
add
call
add
xor
fmuls
mov
sbb
mov
add
dec
clc
dec
and
dec
aaa
mov
add
mov
jg
dec
sldt
leave
push
push
cwtl
lods
mov
adc
inc
mov
add
xchg
xor
gs
das
pop
adc
or
add
fldl
add
adc
cmp
jle
xor
sub
xor
inc
pop
in
aam
shrl
cmpb
ljmp
fdivs
xor
adc
mov
repnz
pusha
out
shrd
lock
out
and
fdivs
jne
fcompl
je
add
rclb
add
push
aad
mov
pop
pop
add
in
loop
inc
lahf
and
shlb
push
add
adc
mov
jne
add
in
dec
aas
scas
or
das
test
nop
cltd
cmp
or
jne
addb
add
jge
inc
mov
lea
cmpsb
add
mov
aas
cmp
sbbb
pushw
sub
push
cmp
js
pop
movsb
cmp
sub
test
jl
add
popa
pop
push
les
jne
push
pusha
ret
fildl
lret
mov
test
add
cmpb
xchg
add
xor
aaa
in
pop
movl
inc
add
cs
lret
push
repnz
and
fadd
shlb
loope
lock
pop
mov
cmp
fdivrl
add
cmp
and
enter
cmp
fiaddl
pop
fcompl
bound
jae
sub
inc
xor
rol
or
add
pusha
mov
add
dec
ret
lret
fsubs
call
gs
outsl
jne
jns
data16
jb
ljmp
pop
shl
and
add
mov
sub
fsubr
jae
ret
sbb
int
and
lret
xchg
sar
scas
clc
rorl
cli
shl
roll
jge
or
lea
add
dec
push
pop
dec
add
cmp
lods
xchg
ljmp
push
add
pop
lret
jne
rcrb
xlat
roll
lcall
inc
pusha
jp
sbb
add
mov
decl
push
aad
pop
adcb
nop
add
test
jnp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
add
xor
push
add
sub
add
jmp
fcmovb
xchg
and
dec
popa
add
sbb
mov
add
call
in
loopne
mov
test
ret
inc
mov
push
push
add
pop
sbb
les
rolb
xorl
in
jo
cwtl
aam
hlt
mov
pop
pushaw
cmp
mov
mov
push
push
into
add
add
jg
enter
je
pop
pop
adc
out
mov
lret
mov
add
push
out
ds
leave
cmpb
out
add
mov
pop
xlat
pop
rol
loop
xor
inc
outsl
add
mull
mov
enter
xchg
mov
jl
inc
dec
xor
inc
mov
or
jmp
cmpb
je
ud1
das
out
push
shlb
push
sbb
sahf
out
inc
arpl
or
add
aad
pop
movsb
int3
in
inc
add
mov
enter
add
push
and
inc
or
jne
push
scas
cmpsb
clc
dec
add
pop
daa
jbe
cmpsl
das
imul
jbe
pop
dec
fwait
add
sbb
or
add
stc
sub
jmp
out
push
fldl
add
jecxz
or
inc
aam
pop
icebp
mov
stos
jmp
dec
cmp
xchg
add
mov
add
imul
lods
jne
subps
sti
jecxz
dec
jb
add
jl
idivl
push
dec
add
adc
or
ss
lcall
repz
cmpsb
cmp
adc
andb
xor
and
test
xchg
mov
bound
iret
subl
in
ret
jo
push
jle
jae
pop
add
and
cld
dec
sub
rol
aaa
outsb
orb
inc
inc
add
es
add
shr
daa
addr16
adc
add
inc
jmp
lea
xlat
ljmp
cmp
add
pop
xchg
cmp
adc
jno
mov
and
in
pop
jne
rorl
add
inc
mov
lds
inc
test
or
add
shlb
add
mov
rolb
add
mov
mov
jp
xor
mov
jmp
lea
add
cmp
arpl
push
test
in
jle
xchg
adc
xchg
inc
iret
lock
xor
andb
adc
je
add
mov
lcall
ds
or
adc
orl
loopne
adc
push
cmp
fistps
and
add
repnz
cmc
sub
clc
mov
mov
dec
nop
ja
sbb
jae
inc
or
es
add
pop
iret
sub
enter
lea
pushf
lret
inc
or
dec
test
adc
rorb
push
xlat
mov
inc
pop
ficoms
push
add
lcall
hlt
add
imul
fistpl
cmp
pusha
sbb
lea
sub
outsb
lret
jbe
dec
mov
mov
test
inc
and
push
movl
pop
xor
adc
inc
add
mov
jge
mulb
adc
mov
add
adc
push
sub
push
add
int
xor
imul
adc
aaa
rorb
bnd
pop
sbbb
inc
movl
add
mov
jb
jge
add
jl
xor
mov
insb
sub
mov
ss
pop
pop
add
jae
lea
inc
xchg
lret
adc
arpl
pop
add
inc
adc
push
xchg
jge
cld
push
jmp
out
pop
test
adc
jo
gs
dec
aas
add
push
pop
pop
pop
sub
cmp
les
sbb
add
dec
and
ret
fnstenv
mov
test
fisubl
inc
or
outsb
pushf
lcall
jb
in
sub
rol
fadds
add
and
scas
mov
add
nop
jae
xor
mov
je
jle
cltd
scas
and
mov
pop
adc
jge
aam
pusha
out
sbb
cmp
dec
dec
xor
popf
mov
xor
cmp
mov
jg
fmull
jle
adc
js
xchg
lahf
push
out
add
adc
jne
aas
cmpsl
mov
lret
or
das
add
push
xchg
int3
cmp
xchg
add
insb
decb
test
mov
stc
testb
add
xor
and
cmp
cli
pop
jae
mov
pop
inc
sub
or
lds
add
push
inc
cmc
dec
add
fld
inc
or
test
sub
sub
daa
mov
es
adc
stc
pop
stos
jp
jbe
sub
ret
nop
inc
jecxz
add
fwait
cmp
dec
jl
jns
clc
sub
xchg
nop
sub
xchg
adc
cmpb
je
mov
mov
fcomi
es
push
mov
clc
subl
loop
cmp
ljmp
push
nop
xchg
psubb
in
call
push
mov
in
xchg
add
loopne
mov
adcb
pop
dec
add
std
mov
cmp
aas
loopne
mov
push
cld
mov
pop
pop
add
or
add
cmp
std
nop
das
xor
or
les
pop
add
aam
fs
mov
dec
add
cmp
popl
xchg
cli
lcall
orl
outsl
ljmp
test
int3
in
movsb
sbb
fnstcw
pop
add
push
cmp
addb
ss
inc
add
jo
std
add
xor
sarb
loope
mov
xchg
or
add
fiaddl
je
inc
pop
push
sub
mov
jo
inc
je
nop
and
sub
mov
add
test
add
add
mov
add
lret
sbb
sub
test
inc
movzbl
stc
loop
sbb
das
add
pop
sti
loop
xor
add
jmp
add
push
out
add
arpl
imul
pop
cmovb
sub
mov
fistl
add
mov
add
sbb
jecxz
pop
clc
add
mov
roll
repnz
mov
or
cmp
ljmp
repnz
jb
nop
es
das
cmp
and
movsb
inc
dec
xchg
push
outsl
mov
mov
cmp
nop
test
jmp
sub
and
xchg
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
ret
ds
popa
add
sub
xlat
cmp
jbe
xchg
dec
int3
mov
pop
add
iret
xor
ds
imul
sbb
add
arpl
sbbl
mov
push
or
push
int
sub
hlt
jmp
lock
push
clc
pop
rolb
push
jbe
data16
pop
fs
or
mov
aad
xchg
inc
mov
cmp
dec
testb
fucomi
jo
ret
loope
mov
mov
fs
pop
jge
cmp
push
adc
xchg
pop
shrl
sub
or
push
mov
scas
or
inc
mov
mov
adc
pop
lock
iret
push
mov
push
dec
pop
mov
cld
pop
sbb
add
and
sub
jle
hlt
dec
ret
das
push
push
imul
rolb
add
sbb
fisubrl
mov
xchg
loop
or
je
sub
add
stc
adcb
iret
add
ja
rcrb
rorb
je
fs
push
into
add
jl
aas
fstl
mov
dec
fmuls
movsb
jg
lds
mov
repz
lret
cwtl
mov
cmpsb
pop
or
mov
add
mov
scas
inc
stc
or
repnz
xorb
rcrl
fiaddl
mov
inc
add
inc
pushf
movsb
shrb
cmp
addl
push
mov
fwait
push
adc
sbb
add
adc
test
into
test
sbb
fldl
cmp
int
pop
cmpsb
pop
add
or
add
mov
push
cmpl
xor
lock
test
rcrl
das
mov
add
mov
unpcklps
add
dec
xor
add
clc
call
fwait
jnp
add
je
mov
sub
xor
adcl
lea
sbb
sbb
dec
in
pop
mov
adc
sar
leave
xor
out
inc
xchg
pop
pusha
in
inc
adc
int3
movsb
lock
add
mov
rolb
sub
dec
mov
cmp
sub
jns
sgdtl
lds
ret
push
xor
and
shl
pusha
add
push
add
loopne
sub
dec
jne
stos
or
adcb
add
push
jmp
int
xor
incl
ja
jmp
divl
mov
add
and
popf
fadds
xchg
aad
dec
call
jno
or
icebp
and
or
loopne
out
andb
jbe
sar
add
jl
imul
mov
ret
aam
xchg
push
xchg
sub
mov
add
adc
je
or
repnz
ja
xchg
mov
mov
aam
xchg
xor
dec
add
out
aas
cmp
jbe
test
jns
add
inc
dec
inc
int
aad
int3
jae
sub
push
std
sub
lds
xor
inc
xor
add
jmp
xor
add
inc
repnz
add
or
ss
mov
sub
scas
sahf
mov
dec
add
adc
les
enter
xor
inc
add
repz
stos
mov
xlat
movsb
out
or
adc
aas
xchg
cmp
xor
add
and
add
orl
fcoms
mov
push
aam
add
jmp
mov
push
push
inc
lods
mov
push
xlat
sbb
daa
mov
add
cmp
add
or
xorl
cmpsb
adc
push
sbb
fsubrl
xchg
fisubl
jnp
shll
push
sbb
test
add
cmp
hlt
and
xor
jl
and
imul
int3
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
push
add
adc
cmc
mov
mov
mov
add
mov
or
inc
adc
sti
add
loopne
pop
cmp
ja
and
scas
cld
jge
pop
pop
mov
sub
pop
enter
xor
mov
ljmp
jp
cmpsl
mov
popl
sarb
mov
dec
icebp
add
jae
add
movsl
shl
push
aaa
add
jns
mov
in
and
loope
add
sub
insl
add
cwtl
jae
inc
mov
cmp
and
add
xor
loope
dec
cld
mov
cmc
jnp
iret
in
cmp
popf
sub
ret
jo
rclb
add
int3
shll
ret
push
cmp
das
sub
dec
add
nop
jns
add
sbb
add
lahf
mov
cmp
push
add
sub
insb
add
or
rolw
inc
xor
push
add
sub
sub
add
jge
cld
rolb
sub
ss
jb
xor
adc
and
inc
add
mov
add
sbb
push
pop
adc
pop
jne
or
add
dec
mov
ds
cmp
jno
add
adc
fistps
data16
inc
test
stos
out
aam
push
mov
inc
insl
adc
jle
xchg
add
jne
or
outsl
inc
push
pop
orb
add
mov
jle
movsb
or
cld
dec
push
fadds
rolb
inc
loopne
jne
leave
cmp
mov
movsb
jae
dec
push
in
dec
adc
addr16
dec
jl
sub
add
data16
xorl
cmp
adc
xchg
enter
and
movsb
cmp
dec
orb
add
insl
fsubs
and
cmp
add
push
mov
in
stos
xchg
loope
nop
sti
xlat
clc
jecxz
shl
pusha
add
in
jne
xor
jb
add
out
test
cmc
mov
lods
mov
add
test
jg
aam
clc
cltd
add
sub
cmp
adc
cmpsl
sub
dec
and
mov
push
in
jmp
mov
outsl
xchg
mov
dec
add
int
fisubrs
fdivs
jo
cwtl
rolb
cmp
cmp
out
xor
popl
popa
icebp
push
jbe
xchg
mov
pop
push
imul
movsb
and
xor
scas
shlb
add
xchg
fists
cwtl
dec
xchg
add
push
loop
add
ljmp
js
add
movsb
std
fwait
enter
add
movsl
xor
ljmp
enter
add
xchg
bound
punpckhdq
add
shlb
movsl
pop
std
xor
clc
jp
add
mov
sub
push
add
or
call
push
add
push
xchg
cld
into
mov
add
and
addl
mov
inc
mov
andl
push
popa
add
mov
mov
je
adc
jmp
fstpt
lret
or
add
inc
xor
xabort
sbb
push
or
ja
cmpsb
sbb
dec
xor
pop
add
push
adc
shll
idivl
add
xor
outsl
dec
push
dec
outsb
je
cmp
cmpsl
push
jb
sti
add
iret
mov
add
jnp
or
test
dec
xor
loop
dec
mov
add
call
mov
sbb
pop
sbb
push
or
lret
pop
mov
xlat
addb
jne
add
cmc
pop
popf
idivb
in
scas
add
out
lock
scas
jmp
push
rol
jae
negb
rorl
jg
ret
push
fldpi
mov
lock
add
cltd
cmp
lea
les
mov
xchg
fstpt
sbb
jge
adc
mov
bound
sbb
xor
aad
daa
sub
jge
xchg
cmp
xchg
adc
sub
mov
rcrb
cld
jbe
or
in
pop
xchg
adc
lret
addl
inc
ja
pusha
fwait
enter
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
add
js
enter
adc
add
mov
fistpl
gs
and
and
jg
mov
xchg
fs
adc
cmp
test
gs
enter
call
ljmp
push
loop
add
sub
dec
adc
dec
dec
cli
int
or
ljmp
ljmp
add
adc
pop
mov
fimuls
stos
sbb
add
adc
call
sahf
fdivrl
sbb
insl
add
jae
imul
das
insb
jbe
shr
sub
test
add
mov
inc
xor
cmp
hlt
jl
xchg
dec
cmpsb
add
popa
aaa
cmp
sbb
inc
ljmp
mov
inc
pop
ljmp
aam
icebp
test
push
add
cltd
xlat
neg
jns
psubq
or
test
jl
cmp
jmp
out
mov
mov
adc
add
cmp
fists
nop
cltd
ret
push
jg
pop
in
xchg
cmp
stc
mov
push
dec
adcl
adc
js
add
lock
and
jmp
out
addb
dec
xor
test
dec
cmp
mov
roll
inc
bound
leave
dec
pop
test
adc
xchg
adc
dec
xchg
mov
jmp
jb
sbb
jae
lock
pop
fadds
loop
sbb
fmull
mov
jae,pt
inc
add
lret
adc
sub
pop
push
adc
and
imul
sub
adc
leave
add
mov
pop
stc
xchg
dec
test
stos
movsb
mov
jae
ljmp
aam
jmp
add
in
mov
add
lock
ja
add
add
cltd
push
cmp
dec
add
clc
pop
jg
add
mov
shl
xor
sbb
pop
decb
aas
jl
add
insb
sub
loope
add
and
xchg
push
pop
add
or
add
movzwl
dec
roll
out
or
sub
ja
inc
ss
ja
shrd
sub
sub
int
dec
stos
dec
jp
pop
repz
stc
and
std
jbe
sbb
sbbl
les
lods
or
incl
gs
or
outsb
push
xor
add
adc
cmp
test
lock
add
mov
xor
adc
je
and
sbb
movl
sub
fsubs
add
jmp
aas
pop
outsb
lahf
lods
push
add
repnz
in
inc
sbb
test
test
das
push
mov
inc
pop
stos
and
lcall
add
fdivl
jbe
add
add
inc
add
ret
in
adc
push
xorl
and
or
rorl
push
mov
pop
pop
push
ds
fldl
add
adc
push
mov
dec
pop
faddl
je
or
add
sar
shlb
or
inc
sbbb
xor
cld
dec
jg
jmp
ljmp
hlt
pop
jnp
push
pushf
push
ljmp
add
xchg
repnz
add
fcmovu
scas
test
add
movsl
repnz
and
movl
or
cmpsb
dec
inc
xchg
fadds
jbe
add
ficoms
call
js
testb
dec
cmc
or
jbe
fs
mov
add
lods
inc
fnstenv
rclb
mov
and
rcll
cmp
rsm
enter
hlt
mov
int
cmp
adc
fst
out
jle
add
add
add
nop
pop
sub
mov
dec
fstps
or
add
addb
jg
fwait
jbe
adc
pop
sbb
xchg
addr16
insl
jnp
add
and
loopne
and
add
jmp
add
adc
cmpsl
and
decl
sub
dec
and
push
insl
scas
add
mov
mov
mov
add
outsb
stc
pop
jmp
xor
bnd
pop
les
mov
leave
pop
add
hlt
mov
xchg
inc
orb
adc
or
enter
and
adc
pop
xchg
mov
daa
mov
push
mov
lahf
push
les
mov
pushl
sub
int3
sub
dec
loope
xchg
jge
and
js
push
orb
xchg
mov
aas
pop
jmp
leave
lret
loopne
jne
add
adc
pop
jge
unpckhps
pop
insl
inc
sbb
xchg
mov
push
add
loop
int
xchg
jae
inc
shll
enter
imul
and
sbb
das
sbb
in
loop
mov
push
cmpsl
or
mov
xor
nop
incl
add
ja
add
aas
leave
dec
cmpb
add
inc
push
and
mov
mov
daa
addl
add
jo
add
cld
add
dec
int
pop
leave
into
xchg
push
push
sub
sti
cmp
jp
dec
pop
add
mov
add
lds
lods
es
mov
mov
inc
mov
pop
lea
inc
xor
cmp
xor
aas
pop
add
mov
mov
daa
loop
cmp
xchg
or
add
mov
jo
repz
test
and
push
push
or
fs
ficomps
nop
cmpsb
rolb
add
in
cs
sbb
add
cmp
and
pop
cltd
xchg
and
dec
dec
mov
pop
sub
pop
rorb
cmp
mov
xchg
mov
pop
push
mov
hlt
and
in
cltd
push
xorb
mov
add
adc
mov
mov
fsubr
cmp
mov
cmp
adc
jle
aas
mov
shll
and
addl
jge
xchg
adcb
icebp
cmp
loope
mov
lock
out
jmp
mov
xlat
jne
add
fldt
ret
rolb
mov
fsub
pop
add
clc
dec
add
mov
jmp
and
mov
lret
xchg
mov
push
or
je
adc
inc
cmpsb
inc
ja
inc
add
mov
mov
cmpsl
mov
les
jnp
xor
inc
notb
add
adcb
subb
adc
cmovp
add
xlat
nop
idivl
popf
add
add
cli
add
and
cmpsb
ret
aad
pop
test
push
andb
add
jl
dec
sbb
jecxz
inc
aad
sub
push
lahf
xchg
add
push
scas
nop
cmp
add
add
dec
mov
pushf
cmp
inc
ds
lock
mov
sub
out
repz
pop
movsb
arpl
bnd
xchg
push
dec
xchg
sbb
add
adc
and
add
jg
movb
or
add
push
sbb
int3
scas
sub
pop
je
out
adc
lock
adc
sub
dec
repz
shr
sbb
leave
aas
cmpsb
cmp
rorb
mov
lock
jo
add
mov
mov
inc
mov
sub
inc
xchg
jae
pusha
or
xor
add
orl
rcl
sub
mul
bound
test
mov
addl
add
sbb
enter
add
xor
add
fsubr
lcall
loope
sbb
ffree
cli
jae
enter
sub
or
jmp
clc
jg
add
lock
leave
add
xor
adc
mov
inc
pop
sub
leave
and
sbbb
adc
mov
repnz
lea
shll
in
jns
orb
xor
inc
push
enter
lea
pop
push
add
jns,pt
add
fiaddl
ja
add
pushf
sbb
inc
add
aad
mov
jo
pop
mov
loop
mov
mov
or
add
push
jne
pop
push
dec
aas
cmp
outsb
out
jo
pop
les
pop
test
or
and
pop
jle
jmp
mov
jo
dec
mov
mov
inc
je
and
inc
dec
popa
outsb
leave
addr16
out
push
mov
cmp
mov
fadd
xlat
add
sbb
or
adc
adc
cmpsl
stos
cmp
jp
add
or
add
pushf
push
inc
mov
testb
fistpl
decb
lcall
js
sti
dec
and
mov
inc
add
add
cmp
add
testb
cmc
sbb
imul
push
test
ljmp
push
bound
push
pusha
dec
inc
enter
mov
add
and
mov
rclb
sub
call
movsb
cmpb
xor
add
xor
leave
add
outsl
adc
mov
daa
or
cmp
pop
je,pt
push
test
out
mov
adc
mov
add
inc
push
or
pusha
scas
xchg
sbb
pop
inc
je
or
jecxz
pusha
es
mov
add
into
fs
fidivrl
jo
lock
arpl
push
or
clc
inc
cwtl
mov
int3
fisubrl
jmp
rclb
and
mov
adc
lock
add
fimuls
clc
jge
add
movb
mov
sub
adc
xchg
adcb
mov
aas
fbstp
add
stc
fsub
stos
frstor
pop
sbb
mov
push
jne
or
nop
mov
sti
inc
add
xchg
shlb
sbb
pop
jl
stc
dec
adc
and
push
and
lea
inc
add
add
mov
xchg
test
push
and
psubsw
imul
sub
lret
add
xchg
dec
add
fucomi
ror
dec
push
test
leave
mov
adc
push
sbb
mov
outsl
aaa
xchg
inc
lcall
pop
or
test
add
shrb
xchg
mov
jns
or
push
scas
orl
jge
jp
insb
xlat
ljmp
mov
sub
cwtl
add
add
xchg
add
mov
movsl
sub
xor
or
pop
js
lcall
mov
das
ret
pop
jne
mov
add
mov
sbb
cs
adc
and
mov
test
scas
mov
jb
pushf
and
shlb
ds
in
das
xlat
jns
push
and
sub
mov
sub
in
mov
popl
daa
cld
shl
das
je
fs
stc
jns
push
sub
inc
jmp
xchg
repnz
add
adc
les
add
inc
jg
add
adc
lret
test
hlt
pop
mov
mov
add
mov
test
mov
add
add
add
stos
xor
hlt
xchg
jne
imul
popf
push
in
imulb
add
xor
mov
pop
add
jmp
push
add
leave
push
out
rcr
and
dec
adc
cmpb
or
jb
xorb
clc
pop
fiaddl
pop
xor
mov
xor
mov
rolb
cmp
in
es
add
cmp
inc
in
mov
mov
jge
inc
cmp
mov
xchg
je
lahf
in
test
mov
mov
mov
mov
cmp
repnz
adcb
add
jns
ret
add
andb
scas
mov
call
faddl
cmpsb
mov
add
js
aad
add
ds
mov
sub
js
cwtl
mov
ret
stc
mov
mov
push
add
cli
mov
push
push
xchg
sbb
mov
cmp
inc
or
push
lds
int3
stos
add
sbb
aas
popa
add
jle
inc
loopne
add
or
enter
insb
pop
rolb
push
adc
xor
xor
jae
cmpsl
add
sbb
incb
push
jge
cmp
inc
inc
jb
xor
out
pop
jno
pop
add
mov
cmp
in
pop
add
std
test
jb
int3
in
adc
push
add
fwait
insl
leave
stos
jmp
roll
sub
add
adc
shlb
imul
mov
pop
inc
jmp
pop
push
mov
sti
add
aam
mov
add
movsl
test
and
test
mov
push
fsub
shr
mov
idiv
and
mov
popa
pop
out
jnp
add
sbb
xchg
les
in
sub
lcall
imul
imul
pop
std
daa
ss
out
cmp
rcrb
push
sub
std
ds
jecxz
push
fdivl
cmp
stos
add
pop
lds
jo
add
push
adc
stc
add
lock
je
xor
add
inc
std
out
into
imul
aaa
xchg
pusha
jbe
cmp
add
sbb
add
ljmp
mov
inc
and
out
mov
push
test
ljmp
out
inc
dec
cmc
cli
fldl
movb
mov
mov
loopne
and
add
add
repnz
sbb
pop
daa
adc
inc
mov
add
ljmp
mov
int3
push
and
inc
das
add
jmp
sbb
add
jmp
cld
and
add
movzwl
or
int3
or
fwait
jmp
adc
les
mov
inc
mov
add
xabort
mov
or
add
out
or
ds
repz
push
lods
add
xlat
mov
aas
or
movsl
ljmp
jle
pop
xchg
in
fldenv
add
fwait
fcompl
or
sarb
add
iret
aas
mov
lea
pop
mov
call
test
sub
roll
pop
push
inc
sbb
add
mov
std
fildl
fsubs
pusha
add
mov
loopne
ja
sub
add
or
and
pushf
fidivs
mov
ret
int
adc
ss
mov
push
test
ds
inc
hlt
sub
dec
mov
out
dec
add
call
mov
mov
movsb
add
repz
data16
fcmovbe
pop
xchg
nop
and
dec
add
iret
mov
movl
repz
aaa
cmp
or
je
pop
jo
add
testb
mov
ljmp
sbbb
mov
mov
ja
je
sub
mov
repz
sbb
and
addb
pop
mov
push
add
fwait
mov
rcrl
pop
xchg
xchg
add
sbb
int3
add
xchg
sbb
rclb
insb
add
cld
sub
inc
es
out
add
test
add
sub
out
shl
add
aas
sti
push
add
adc
cwtl
cmc
nop
cli
add
mov
add
test
add
scas
shlb
into
mov
or
add
add
pop
fs
xor
loopne
add
aam
movsl
jbe
inc
aas
add
and
add
mov
data16
sub
add
mov
rorl
fdivrs
cmp
mov
outsl
mov
out
add
sti
in
pop
subb
in
stos
add
mov
xor
rcrb
or
sub
sbb
add
jp
test
movl
fcomp
adc
dec
pushf
push
add
push
jb
stc
push
xor
xor
addl
jp
fs
add
add
push
fldt
push
pop
mov
xorl
add
imul
jb
in
push
imul
sub
jp
add
movsl
pop
cmp
je
add
pop
lahf
adc
and
daa
out
add
dec
add
push
outsb
jb
imul
fs
push
cmp
out
add
das
pop
mov
jg
cld
or
xor
cli
leave
add
xor
inc
push
lock
or
cs
ljmp
dec
xor
movsb
inc
orb
jae
cli
shrb
adc
sarl
cld
add
pop
lea
bound
insb
and
cmp
push
mov
inc
cmpb
mov
cmpl
xor
add
dec
add
add
and
add
pop
cmc
negb
inc
dec
push
jne
mov
nop
xchg
out
js
movsb
imul
or
popa
push
dec
aas
sbb
aaa
bnd
arpl
add
pop
imul
add
dec
pop
cwtl
mov
das
pop
push
cmp
addb
pop
mov
fists
cs
cmc
add
add
int
lret
les
add
adc
test
pop
xorb
adc
orb
add
add
mov
gs
hlt
or
mov
add
lret
cld
xorb
loopne
add
inc
lcall
push
out
mov
ret
scas
pop
rolb
push
dec
or
push
pop
jnp
mov
and
add
les
dec
int3
in
dec
add
pusha
mov
gs
sarl
cwtl
in
xor
add
je
add
sbb
stos
mov
nop
cld
jae
mov
xor
leave
outsb
fidivrs
xor
scas
add
xor
and
cmp
sub
mov
jge
inc
sahf
add
inc
mov
enter
jo
inc
dec
fs
xchg
add
addr16
lds
mov
xor
repnz
inc
mov
and
jmp
sub
sahf
rolb
enter
cmp
lods
lods
add
cmpsb
push
nop
push
ds
jo
add
and
jno
shlb
cltd
sbb
sub
push
add
orl
pop
mov
add
xor
jbe
mov
xchg
cltd
stos
negl
sbb
and
and
test
pop
xchg
subb
xor
dec
ss
add
daa
pop
pop
adc
add
pop
push
scas
sbb
insl
popa
add
pop
jne
jno
jbe
add
or
sub
lock
and
add
jmp
jg
pushf
jmp
out
subl
push
xchg
sar
in
str
hlt
rorl
out
test
mov
pop
ss
jp
aam
rcrl
test
jno
ja
in
add
cmp
cmp
xorb
cmp
cld
xor
loopne
push
cmpsb
add
pop
xchg
pop
imul
icebp
hlt
cmpsl
loopne
add
daa
xchg
sbb
pop
or
and
add
clc
cwtl
push
cmp
fsubl
ljmp
pop
pusha
scas
add
mov
loopne
add
jnp
sub
fwait
shrb
sub
mov
mov
add
lock
push
sbb
repnz
sbb
add
cltd
lret
js
rorb
sub
mov
lea
jp
add
push
or
aaa
add
jl
pop
sbb
daa
xchg
add
inc
add
adc
or
xor
ficoms
add
popa
add
std
pop
cmp
sbb
pop
adc
cmp
clc
jo
add
pop
or
add
je
push
add
lock
pop
jo
test
popf
push
mov
lock
shl
add
or
call
sub
jl
xor
or
movsl
pop
test
sbb
add
cmpsb
adc
add
jp
ljmp
inc
or
ret
pusha
or
and
xlat
xor
jp
adc
xchg
cmp
stc
cmp
shlb
rolb
sbb
lds
and
xchg
lea
sbb
xor
or
jg
jno
add
addl
add
inc
jg
mov
sbb
push
pop
out
lcall
xchg
icebp
jmp
push
lock
mov
enter
jns
cmp
add
lret
in
xchg
fcmovu
out
add
inc
nop
mov
adc
jmp
xchg
adc
adc
inc
cmp
mov
xchg
push
ja
add
cmp
pop
movsl
jge
push
test
push
sub
xor
inc
dec
add
mov
ret
aas
xchg
push
addb
cmp
or
fstl
jb
mov
inc
sbb
and
gs
add
inc
ss
add
call
lret
lock
cli
data16
rcl
clc
inc
imul
pop
inc
andb
idivl
push
add
sub
repnz
cli
add
push
in
cmp
mov
mov
push
je
hlt
mov
jnp
lods
das
push
dec
mov
aad
sarb
mov
add
test
add
or
mov
xor
xor
pop
or
add
pop
sbbl
stos
add
cwtl
xchg
mov
adc
cmpb
mov
jmp
aaa
inc
addl
mov
mov
scas
out
add
mov
leave
mov
or
and
lods
sbb
les
lcall
std
int3
pop
xchg
jns
in
push
lahf
icebp
nop
jl
imul
add
sbb
subl
sbb
inc
mov
add
pushl
push
pop
pop
adc
xchg
mov
inc
xchg
and
adc
int3
add
test
das
add
fistl
adc
mov
mov
test
sub
stc
xchg
adc
add
or
sti
adc
and
inc
and
addl
pop
xlat
and
dec
imul
movsl
jns
jp
add
xchg
pop
adc
pop
fldt
or
inc
add
cld
xor
add
std
mov
and
adc
or
sub
sldt
mov
adc
push
pop
lret
shrb
push
pop
jmp
in
cmp
and
pop
aas
lock
sub
aaa
loope
jle
sbb
das
test
call
repnz
xchg
and
jne
pop
sbb
push
xchg
out
negb
int
mov
adcb
lock
mov
or
jb
mov
andb
inc
adc
sub
add
and
mov
xchg
cmp
ficompl
add
outsb
pop
mov
lret
jb
push
cli
mov
out
and
jnp
sbb
or
test
outsl
rol
sarb
fcomps
xchg
leave
pop
loopne
mov
mov
dec
pop
stos
icebp
mov
push
push
inc
scas
xorl
pop
mov
cmp
add
dec
mov
neg
add
or
sahf
push
push
push
adc
pop
lods
andl
push
mov
popl
add
lea
loop
dec
add
mov
mov
aam
enter
add
add
pop
filds
dec
mov
sbb
add
test
outsb
cs
push
cmp
inc
or
bsr
mov
xor
xchg
ret
pop
jge
mov
sub
outsb
xor
mov
inc
mov
pop
push
pop
dec
and
sar
rep
shlb
cmp
dec
js
pop
pushf
rclb
addb
ljmp
data16
or
shll
movsb
ljmp
dec
shlb
cs
cmp
xchg
adc
pop
add
push
cwtl
fidivrl
push
or
or
adcb
pop
cli
sub
xchg
sbb
add
jecxz
mov
push
leave
stos
insb
inc
sbb
imul
lds
add
and
pop
pop
push
insb
enter
neg
sub
pushf
aas
leave
scas
pop
shlb
add
psrlw
fisttpl
push
aam
jecxz
xorb
nop
outsl
and
cmp
sbb
jb
cmp
das
xchg
jle
or
cmp
jae
das
lahf
lea
in
clc
loop
int3
dec
pop
xchg
inc
or
adc
cmp
mov
or
dec
sbb
in
add
ficomps
push
mov
pop
add
and
iret
test
dec
push
mov
scas
add
fwait
andb
pop
rolb
movb
dec
repz
add
ret
push
cmp
add
out
adcb
or
mov
stc
sub
lock
add
or
dec
add
mov
inc
insl
mov
in
jmp
loopne
hlt
inc
add
lret
push
faddl
pop
outsb
out
clc
test
scas
addb
fsubl
out
ret
repnz
add
dec
mov
hlt
xchg
fcomi
arpl
or
add
inc
adc
pop
and
pop
incb
or
dec
aam
scas
iretw
loopne
punpcklbw
lret
xchg
adc
inc
mov
pushf
add
fbstp
or
pop
adc
add
add
sbb
movsl
inc
fs
movl
jp
add
mov
jne
sbb
dec
loope
and
popl
cmp
nop
incl
add
mov
xorl
push
mov
jmp
push
mov
dec
xor
cld
and
mov
cli
clc
add
aad
pop
or
mov
add
pop
scas
in
xor
mov
push
add
test
pop
iret
xchg
inc
pop
dec
cmpl
add
mov
and
je
dec
or
and
xor
in
jl
dec
add
daa
or
into
sub
inc
nop
add
fmuls
movsb
and
inc
mov
sbb
jle
xorb
pop
into
add
mov
sub
imul
dec
cmc
shl
fcoml
add
sbb
repz
incb
loop
int
mov
pop
push
repnz
or
in
shl
push
sti
add
cli
scas
xchg
nop
push
fsubr
int
push
add
jne
test
mov
add
sub
pop
test
adc
jns
mov
adc
add
dec
and
add
movl
cmp
adc
dec
outsl
lea
dec
and
sbb
sbb
adc
add
aas
je
push
cmp
cmp
and
dec
push
in
aam
sub
addl
dec
add
out
and
xchg
add
xlat
xchg
inc
fs
leave
lcall
pop
test
fdivr
xor
mov
add
cld
adc
add
jbe
add
rclb
cmp
inc
dec
jne
pusha
or
loopne
push
lret
pop
sbb
fcoms
add
push
ret
inc
cmp
add
mov
push
sbb
jle
jb
add
fwait
mov
sbb
mov
aaa
lock
push
xchg
call
lcall
test
shlb
clc
ja
adc
xchg
pop
call
adc
shll
mov
out
dec
sbb
addb
bound
shlb
add
pop
and
cltd
jb
testb
incb
inc
cmc
adc
push
pop
sub
lea
pop
lret
gs
push
add
mov
mov
xchg
inc
inc
aad
nop
insb
flds
sbb
mov
cmp
xor
add
inc
mov
xchg
inc
push
pop
xchg
out
add
cmp
rcll
add
jle
imul
cmpb
xchg
mov
adc
xor
jl
pushf
les
sub
add
fwait
pop
jo
mov
fiaddl
ja
lahf
mov
cmpl
or
inc
add
xchg
push
pop
cli
pop
les
pop
ja
sbb
and
into
xorb
test
jle
xor
and
add
xchg
pop
cwtl
or
fdivp
push
mov
or
jne
push
xor
enter
xchg
stc
xor
adc
pop
cmp
add
jae
data16
add
and
adc
daa
mov
mov
cvtps2pd
bound
dec
loopne
inc
pop
xchg
out
lea
dec
jne
in
adc
leave
in
stos
fldl
mov
test
lret
push
fisttpl
jg
mov
xchg
adcl
out
sbb
adcb
push
xchg
add
mov
ljmp
cmp
pop
rclb
stos
mov
push
insb
jmp
adc
mov
pop
fldl
inc
sbb
or
inc
outsl
and
pop
adc
or
add
jecxz
and
pop
mov
orl
add
xor
add
sub
add
mov
jb
mov
mov
cli
pop
inc
mov
cmpsl
repnz
sbbw
jge
lgs
mov
adc
mov
fadds
mov
xor
shlb
cs
sub
aad
dec
add
push
inc
testb
add
call
dec
xor
adc
testb
sahf
pop
sub
fstl
push
cld
sbb
add
sete
dec
das
xor
hlt
and
ljmp
mov
lret
add
or
add
dec
xor
sub
nop
push
pop
dec
adc
fldl
int
shrl
sbb
nop
and
nop
mov
jne
repz
add
inc
sub
leave
jmp
pop
and
out
ret
mov
clc
loope
jae
inc
add
cmpsb
mov
popf
adc
sub
sbb
lods
or
xchg
inc
or
xchg
jmp
dec
out
xlat
and
outsl
jns
add
lea
das
int
push
mov
sahf
and
icebp
xor
adc
rol
add
jp
icebp
push
cmp
inc
mov
clc
lds
movsl
add
repz
mov
into
adc
jbe
pop
out
xchg
add
lock
push
and
sarl
add
decb
leave
in
dec
add
xchg
test
xchg
adc
clc
mov
xor
mov
pop
and
cmc
imul
push
arpl
jle
fdivl
push
stos
jecxz
daa
pop
add
ljmp
jne
sbb
cmc
insl
loop
add
pop
ret
test
stos
add
fnstsw
push
nop
dec
faddl
add
jg
add
push
loopne
pop
fbld
lock
mov
aad
mov
imul
sldt
adcl
movb
and
cwtl
scas
add
loopne
stos
ffree
push
and
lods
bound
fistl
xchg
push
inc
ja
add
dec
movsb
mov
add
movsl
int
jge
jg
add
test
adc
xchg
dec
add
std
out
jg
dec
loopne
pop
xchg
lret
jne
mov
jbe
pop
jno
imul
sub
je
add
fdivs
insb
xor
shrb
adc
jb
add
out
dec
pop
cmp
jmp
cmp
jecxz
add
push
mov
pop
cmpsb
and
jo
addb
push
mov
mov
inc
and
mov
cltd
xor
pop
in
push
bound
push
push
push
movsl
leave
add
and
aad
insb
mov
pop
fmul
sbb
jne
cmp
dec
andl
fsubrs
enter
pop
rol
sbb
rclb
add
mov
jmp
jne
js
dec
inc
ljmp
stos
xor
loope
and
cmp
or
pop
adc
add
add
gs
cmp
loopne
push
or
std
add
or
enter
cmp
xchg
push
subl
pop
enter
add
mov
adc
in
jns
and
test
inc
mov
and
cld
addl
fidivl
and
mov
add
mov
pusha
movl
add
repnz
dec
xchg
les
dec
incb
add
push
or
pop
aam
add
sub
inc
cmpsb
jl
add
mov
inc
rclb
lods
jnp
movsl
adc
aad
add
sbb
jmp
and
dec
fs
dec
mov
push
and
in
or
call
dec
lret
jo
ficoms
add
sub
pop
xchg
cld
push
outsl
xor
push
mov
add
pusha
inc
push
je
or
push
mov
nop
add
add
push
and
add
sub
add
mov
jo
add
test
adc
push
push
js
stos
frndint
push
je
lret
dec
or
adc
xchg
push
add
mov
add
test
test
imul
fcoms
shr
mov
lret
inc
test
in
add
cld
pop
lods
inc
clc
enter
lret
outsb
cwtl
icebp
pusha
les
inc
push
aam
push
repnz
roll
hlt
dec
pop
lock
push
jno
push
cs
add
xor
jbe
paddsw
scas
sub
and
idivb
jno
cmpb
jge
adc
out
scas
std
inc
loopne
mov
pop
add
adc
push
leave
xor
adc
pop
sahf
orb
inc
clc
dec
add
shlb
mov
mov
subb
push
ds
je
push
leave
cwtl
push
imul
sbb
in
enter
or
js
bound
mov
xchg
cmp
fimull
adc
out
call
xor
lock
inc
cmp
les
mov
leave
pop
sub
pop
sub
cmp
adc
fsubs
nop
or
hlt
jnp
add
jmp
mov
aas
add
jb
test
dec
js
cmpsb
stos
data16
dec
insb
ret
pop
adc
add
sub
adc
cs
add
nop
pop
add
imul
subl
in
outsl
fnstcw
cmp
aas
and
setb
mov
cs
pop
add
or
stc
add
std
sbb
mov
xchg
inc
mov
add
jle
imul
sysret
mov
lea
add
pusha
or
add
jne
into
add
lahf
add
dec
mov
add
add
jmp
adc
xor
sbb
add
call
cmp
or
pusha
pop
aaa
sub
adc
out
fs
adcb
sub
adc
rcl
push
and
movb
stos
je
mov
adc
jne
pop
mov
mov
jb
or
push
or
push
bt
sar
add
test
popf
and
gs
xchg
sub
jp
or
add
inc
jo
add
adc
in
fildl
inc
cli
add
cmp
add
add
add
xchg
nop
xor
mov
or
inc
xor
adc
popf
add
nop
inc
in
dec
cwtl
mov
jne
addl
das
pusha
mov
cmpl
mov
add
std
loope
jp
or
sahf
mov
mov
and
hlt
push
inc
and
movsl
pop
or
cwtl
sub
add
ret
add
push
pop
and
out
cs
popa
inc
movsl
add
jo
sbb
jp
test
push
in
insb
lock
inc
xcrypt-ecb
cmpsl
dec
xor
cld
jl
out
add
fdivrs
pop
adc
and
popa
or
scas
aam
sub
imul
mov
add
xchg
mov
cwtl
pop
sbb
push
jmp
jne
add
pop
xchg
cld
xchg
mov
add
dec
or
xchg
fdivr
add
sub
addb
mov
add
xchg
add
or
sbb
push
sbb
mov
dec
add
pop
cli
cwtl
inc
cli
mov
or
add
push
nop
jg
repz
dec
fldt
seta
fists
add
push
aad
jecxz
repz
sbb
rolb
fdivrs
push
jne
push
test
mov
repnz
stos
add
neg
add
push
push
or
dec
pop
xor
add
pop
dec
push
jg
pop
add
insb
cmp
lea
pop
add
test
pop
pop
ja
add
hlt
xchg
shlb
rolb
clc
gs
dec
push
push
andb
mov
add
stos
mov
stos
push
xchg
ucomiss
sub
jbe
jno
aam
roll
dec
imul
in
pop
scas
mov
cmp
push
clc
mov
movsb
iret
jecxz
mov
xchg
add
mov
in
movswl
add
add
imul
andb
pop
add
insl
mov
and
add
fisubrl
js
lea
pop
cmp
clc
in
test
mov
cmp
xchg
push
xor
push
push
mov
imul
pusha
lds
inc
sub
lret
cmpl
ret
shrb
ret
mov
pushf
movq
mov
mov
push
scas
sub
and
mov
cmovne
push
je
dec
push
ja
pop
pop
add
mov
adc
mov
push
mov
cmp
or
sub
pop
add
mov
mov
rclb
popl
test
sbbb
sbb
sbb
or
sub
adc
cltd
cmpsl
add
mov
outsb
pusha
fidivrl
xlat
imulb
jl
xchg
push
pop
sti
or
xchg
push
add
inc
inc
int
test
arpl
xor
xor
push
push
add
fbld
and
and
add
jge
in
sbb
jo
cwtl
inc
or
push
rcll
dec
add
cmp
ret
xorb
push
dec
push
subl
and
add
or
add
movsb
sub
fdivrs
or
sbb
lea
or
add
mov
pop
in
cmp
adc
adc
fistpll
xor
add
test
mov
sarb
scas
inc
push
and
mov
inc
idivb
sbb
cmp
mov
xor
or
adc
aas
pop
fiadds
mov
mov
dec
pop
dec
mov
loope
pusha
xchg
sbb
mov
jns
or
add
and
adc
fwait
adc
outsb
enter
jo
add
cwtl
add
push
push
mov
jnp
divb
sbb
nop
jmp
push
lock
pusha
xchg
xchg
add
add
outsb
add
xchg
adc
dec
ret
mov
add
push
loope
jbe
pop
cltd
cmp
add
or
add
jl
dec
les
data16
das
dec
outsl
roll
add
adc
mov
addl
mov
or
mov
pushf
add
jbe
sbb
mov
add
rcrb
add
outsb
pusha
cmp
call
push
cmp
or
in
add
jbe
pushf
lcall
adc
or
in
add
aam
jg
pop
loop
add
jns
or
push
mov
and
push
pop
xchg
inc
push
add
sbb
push
cmpsl
sub
dec
cmp
add
cld
sbb
lret
inc
add
xor
and
ds
xlat
add
mov
add
dec
adc
or
cmp
and
push
sub
test
mov
add
adc
add
and
dec
add
mov
or
mov
subb
bound
xorb
inc
repnz
lods
cwtl
adc
loopne
pop
add
aad
fmul
pavgw
cmp
sbb
rcr
jo
pop
cmp
es
ss
add
add
or
or
jecxz
dec
pusha
pop
add
cs
arpl
dec
cmp
sub
cmp
xor
incb
addb
aam
out
mul
xchg
and
xor
and
aas
or
mov
popa
sub
add
sub
inc
insb
sbbb
test
add
add
aam
and
dec
rorb
in
rolb
lds
mov
sub
bound
inc
mov
add
adcb
add
loope
gs
andb
push
popa
mov
add
inc
aam
add
addr16
inc
xor
in
cli
add
pop
hlt
xor
inc
movb
loopne
jne
int3
inc
sbb
mov
sub
pop
add
cvtps2dq
cmp
add
scas
sub
mov
add
mov
les
int
add
sub
ja
add
stos
shll
add
movsb
repnz
ljmp
sti
jl
sbbb
lcall
pop
add
inc
jae
icebp
clc
std
lahf
sbb
lea
subb
and
mov
add
xchg
jl
inc
pop
cld
decl
sub
adc
shl
add
push
mov
add
je
jns
add
jae
jl
imul
add
fadd
add
out
movnti
insl
mov
in
add
adc
test
dec
inc
add
ret
rorb
pusha
roll
add
out
mov
aas
inc
sbb
inc
push
push
adc
and
fs
sbb
inc
add
push
inc
mov
mov
js
sbbb
mov
push
adc
pusha
and
mov
mov
andb
js
lsl
fmuls
cmpsl
fwait
push
push
or
decl
lea
and
adc
add
mov
or
mov
jbe
add
sti
or
xchg
lods
or
int3
lock
push
mov
rolb
lds
jns
mov
insb
xchg
add
call
jl
jge
aad
add
and
jo
flds
add
je
movsb
adc
enter
test
pop
ret
xlat
adc
das
rclb
sbb
in
mov
pop
cld
cmp
or
or
or
mov
lcall
jl
je
mull
jg
cltd
pop
and
sbb
popf
movb
cmpsb
mov
hlt
mov
sub
push
inc
add
jmp
test
mulb
sbb
xchg
xchg
stos
and
int3
testl
xchg
and
inc
clc
cli
sub
dec
gs
hlt
inc
add
cwtl
shl
push
and
xchg
movl
lea
cmpsl
jae
in
pop
sub
fdivl
sub
jno
sbb
pop
aas
push
mov
xchg
mov
lods
adc
dec
cld
pop
push
add
mov
mov
sarl
inc
je
lcall
loope
add
lock
jl
push
idiv
push
and
scas
add
cmpsl
cli
cmp
add
mov
andl
ret
add
xor
and
enter
mov
pop
ja
call
movsb
stos
pop
sarb
nop
xchg
adc
adc
or
dec
sbb
mov
cmc
mov
mov
adc
jb
cmpsl
fsubr
xor
mov
add
xchg
add
dec
jae
mov
call
or
shrb
inc
scas
add
sub
sbb
push
inc
pop
dec
or
add
arpl
pop
cwtl
sbb
jge
add
clc
cltd
cmp
cmpb
xchg
mov
dec
mov
call
test
rcr
loope
xchg
sbb
adc
jecxz
dec
inc
jae
add
ja
mov
push
push
xchg
pop
jbe
dec
xor
pusha
lds
lock
bound
test
stos
in
test
cli
outsb
in
ljmp
xchg
pop
mov
scas
cmp
shll
push
push
repnz
jecxz
mov
xor
push
insb
fistps
add
adc
sbb
nopl
xchg
cli
xor
cmp
jbe
push
hlt
dec
adcb
je
and
call
xacquire
push
pop
cmpl
rcl
add
fildll
add
pop
shlb
fadds
mov
xchg
mov
fucom
enter
jle
mov
add
and
enter
mov
into
ljmp
arpl
ret
or
les
sub
xchg
inc
test
pminsw
adc
xchg
add
mov
aam
push
in
loopne
inc
dec
icebp
mov
adc
mov
sub
shlb
nop
dec
lods
push
loopne
jns
xchg
jo
lods
add
mov
inc
pop
sbb
add
mov
rol
add
mov
xor
xchg
add
add
push
add
push
adcb
inc
add
inc
jmp
add
cmp
mov
adc
add
shr
pop
add
ret
orb
sbb
sub
push
xchg
popl
mov
cmpsl
je
add
push
leave
add
push
inc
or
and
sbb
pop
add
cmp
cmp
dec
pushf
or
pop
add
add
and
clc
add
lock
addr16
hlt
aaa
add
mov
jbe
xchg
sbb
shl
push
test
inc
imul
adc
mov
in
jbe
ret
mov
leave
push
xor
addr16
popa
add
lea
incl
adc
imul
add
and
mov
repnz
xchg
xor
cwtl
test
jge
gs
aas
movsl
cmpsb
cld
push
cmp
add
mov
push
cmpb
ss
push
movb
dec
jne
popa
aam
jmp
sub
repnz
jge
pusha
xor
push
add
add
add
sub
push
ficoms
jne
les
addb
pop
xor
mov
popf
fimuls
cmpb
or
add
adc
push
mov
pop
fstpl
add
xchg
insb
sar
loopne
leave
loop
sub
mov
cld
dec
ja
add
push
pusha
inc
inc
movsb
and
mov
and
pop
cmp
push
ror
mov
pushf
nop
xchg
cltd
sub
sub
call
and
mov
gs
adc
mov
lods
xchg
outsb
pop
lret
aad
xor
pop
mov
xchg
hlt
scas
or
lea
add
popf
adc
filds
mov
call
push
xchg
repnz
add
fstps
call
pop
add
outsl
shlb
xchg
test
jg
std
cmp
jae
jo
pop
and
add
xor
jp
add
adc
cmp
out
stos
cltd
mov
mov
add
sbb
jmp
jle
test
add
mov
repnz
add
push
xlat
das
cli
mov
inc
push
insb
lret
pop
lock
xchg
pop
in
and
push
popa
xchg
or
movsb
pusha
cmpsb
and
sub
stos
jecxz
add
jmp
xor
lock
sar
and
sarb
add
mov
add
cmpsb
and
scas
pop
faddl
sub
push
jae
add
and
lock
push
cwtl
jmp
fmul
xor
cli
mov
jae
xlat
push
pop
ret
mov
add
push
fwait
push
sbb
add
inc
mov
inc
add
mov
sahf
mov
repnz
sbb
les
sbb
pushf
mov
and
cld
cmp
adcb
cmp
dec
inc
adc
jb
jo
add
sub
fwait
mov
movsb
xor
dec
cmp
inc
test
inc
inc
or
jmp
mov
push
dec
out
add
adc
pushf
jl
jbe
add
ds
shlb
test
in
outsb
add
cld
mov
push
jne
test
add
push
mov
push
popa
sbb
pushf
inc
cmp
pusha
add
daa
clc
add
incl
or
je
push
in
js
loopne
mov
or
inc
add
stos
pusha
push
ljmp
pushf
sti
adc
in
add
pop
cld
or
pop
push
ljmp
ja
mov
sub
push
add
inc
js
rorb
in
call
pop
mov
lea
or
jmp
push
mov
repz
push
fsubs
xor
xor
cmp
inc
lock
out
jg
pusha
cmovg
pop
mov
sub
orb
jo
outsb
lds
les
sbb
int3
sarl
push
pusha
xchg
ja
xor
mov
add
jmp
arpl
sub
cmp
sbb
push
push
xor
dec
xchg
rclb
or
mov
fwait
popl
cmpl
je
add
decl
pop
es
cli
dec
shlb
shll
lea
sbb
mov
into
add
stos
adc
bound
into
add
sub
xchg
pop
add
add
push
test
dec
xchg
add
adc
or
mov
or
mov
outsl
cltd
rorb
mov
mov
orb
jo
fdivl
sarb
adc
nop
dec
test
mov
orb
sub
nopl
adc
jmp
int
repz
adc
add
inc
lea
add
sti
and
inc
add
inc
cmp
sub
loop
xchg
sbb
pop
fistps
pop
inc
adc
add
pop
jl
pop
addl
push
mov
xchg
add
inc
loope
adc
fimull
sub
xor
add
jle
imul
and
add
out
sub
jg
jecxz
add
push
mov
mov
cmp
icebp
sbb
xchg
add
xor
test
add
push
add
add
test
push
add
test
jne
xor
xchg
add
push
jg
nop
or
cld
push
push
mov
pop
repnz
sbb
lods
clc
cmp
shlb
test
jg
xor
or
rclb
cmp
xor
sbb
inc
enter
sub
cmp
dec
adc
imul
push
add
in
loopne
add
shl
fucom
and
jecxz
jmp
outsl
push
pop
pop
add
xor
and
test
scas
push
pop
stos
xchg
shll
movsl
mov
jae
cmpsl
jb
push
mov
std
adc
mov
pop
jg
push
pmaxsw
pop
cmp
movb
data16
sbb
add
add
movsl
jne
pop
aam
xchg
subb
test
leave
add
xchg
lret
push
pop
test
pop
subl
add
shlb
stc
shlb
ljmp
pop
call
insb
add
mov
and
ror
and
pop
add
dec
bound
nop
mov
push
out
add
repnz
ljmp
jae
in
jge
push
push
mov
or
mov
out
inc
pop
add
in
add
test
jmp
mov
mov
xchg
sbb
jl
adc
xor
insl
jo
imul
outsb
dec
push
dec
fwait
adc
push
mov
imul
inc
jg
xchg
ljmp
cs
outsb
scas
fdivl
dec
loop
dec
jb
xchg
popa
inc
pop
subb
cmp
mov
add
and
mov
cmpsl
pop
movsb
fsubrs
sbb
pop
pusha
sbb
push
icebp
fadds
push
xor
jae
add
sti
lahf
adc
ds
pop
and
test
cld
into
add
popf
in
out
repz
mov
dec
out
xchg
pushf
add
mov
movsl
xor
add
push
pop
pop
setne
add
ljmp
push
add
fdivr
or
push
jl
sbb
push
icebp
add
outsb
shl
iret
shll
mov
pop
add
cs
jmp
sbb
inc
xchg
movsl
pop
test
rolb
fcmovnu
lds
stos
add
add
inc
add
movsl
cmpsb
outsb
and
xchg
pop
les
dec
loop
add
loopne
pusha
imul
in
cmp
in
push
pop
xchg
sbb
leave
add
xchg
sub
les
add
pop
mov
pop
xor
add
jmp
imul
or
add
cmp
xorb
add
pop
pop
mov
mov
cwtl
xchg
lds
dec
dec
jo
inc
push
in
push
add
push
mov
mov
out
in
dec
std
fnstsw
mov
add
int3
pop
lea
xor
lahf
mov
add
add
xchg
mov
and
clc
add
sarb
cmp
xor
inc
inc
inc
arpl
cwtl
mov
js
add
fcompl
es
add
pop
ds
fsubrs
add
fidivs
cli
pop
pop
in
add
xor
rol
mov
cltd
mov
add
pop
stos
iret
dec
add
and
push
cmp
add
jecxz
add
add
shrb
jle
add
xchg
xchg
push
dec
jp
leave
push
add
in
test
out
pop
add
mov
jmp
ljmp
mov
push
add
xor
lcall
add
call
enter
and
fwait
push
xchg
push
pop
cmp
push
xor
out
loopne
outsb
pop
loop
leave
add
cmpsl
add
psllw
fwait
mov
push
sbb
inc
jle
mov
jae
aaa
fistps
dec
pop
fidivrs
cld
jns
dec
arpl
adc
add
inc
out
jmp
ror
push
add
jno
cwtl
in
mov
rcrb
and
xchg
add
fisttpl
add
andl
repnz
add
fcompp
push
push
bound
arpl
fsubrl
ljmp
call
aas
int3
pop
adc
sbb
out
adc
in
in
nop
or
mov
mov
in
lods
std
add
insl
call
push
rolb
lods
add
insl
push
jno
lock
jbe
adc
inc
add
fmull
push
lock
pop
mov
in
dec
fsubl
ret
add
rol
xchg
xchg
sub
add
cmp
call
dec
popf
add
leave
das
mov
mov
xlat
push
shll
inc
rol
les
jae
jl
jle
jb
pop
push
jmp
pushf
ljmp
jge
jg
cmp
sub
std
mov
into
arpl
add
xor
filds
add
or
data16
mov
and
mov
lcall
lock
add
leave
test
xchg
inc
push
aad
fsubr
push
add
jecxz
mov
mov
dec
push
cmp
xchg
xchg
jne
loop
out
add
pusha
stc
clc
fs
cld
aas
add
idivb
cmp
xchg
add
nop
aad
popa
xchg
add
sub
pmaxsw
dec
add
sub
in
push
movsl
and
dec
add
out
btr
stos
pop
and
add
mov
out
lock
leave
lret
mov
pop
andb
mov
jge
push
ja
movb
fnsave
pop
xchg
ret
ret
lock
mov
popa
cltd
lcall
test
add
out
jbe
or
add
mov
lods
sbb
sub
into
add
jns
add
mov
rclb
test
pop
stos
mov
and
pop
add
jge
cwtl
and
inc
ja
inc
jne
jae
call
inc
dec
pusha
mov
add
movsl
enter
adc
dec
mov
mov
push
add
mov
add
mov
lods
push
stos
sub
add
add
mov
loop
jne
sbb
push
adc
add
sbb
add
jbe
sub
jae
jge
outsl
pop
sbbl
es
faddl
sbb
dec
jle
add
popf
mov
fsubp
lcall
andb
mov
cmpsl
jno
add
ret
add
loop
xor
and
lds
push
or
cmp
arpl
mov
mov
inc
and
xor
mov
add
lods
addr16
cwtl
dec
xchg
mov
sub
add
lar
ja
rolb
fucomp
and
add
dec
test
sbb
add
cmp
and
mov
add
dec
add
in
add
xor
arpl
mov
outsl
xor
and
in
lock
add
call
repnz
loopne
add
xor
add
cmc
mov
aad
xor
lcall
push
add
add
call
push
xor
inc
into
and
add
sbb
sbbb
adc
rolb
push
mov
dec
push
ret
add
call
lcall
jo
shlb
lods
or
xor
xacquire
mov
aad
out
add
pop
out
subl
jecxz
ja
adc
iret
aad
mov
dec
cmp
icebp
add
js
add
int
out
shr
cmp
mov
unpcklps
ljmp
cmp
les
gs
add
xor
lds
add
movsl
idivl
xchg
lret
aam
fbstp
fmull
mov
xchg
movl
push
popf
fldt
sbb
mov
mov
add
leave
or
add
les
add
adc
mov
sub
out
out
call
add
inc
mov
cmp
loope
lods
or
mov
in
xor
dec
ret
inc
inc
pusha
add
cmp
out
xlat
lds
out
mov
pop
pop
rolb
daa
loopne
loop
adcb
and
lock
faddl
out
add
push
dec
orl
mov
sbb
jp
fcmovu
add
test
add
add
mov
in
jmp
out
inc
fdivl
outsb
mov
in
add
mov
fdivrs
insb
ret
shrb
jno
xchg
xchg
imul
or
pop
jb
dec
je
rolb
int3
test
add
or
pop
jns
add
mov
hlt
cmp
or
fildll
cmp
int3
int3
iret
out
call
add
mov
mov
stos
jge
sbb
mov
mov
jo
sbb
add
rcr
lods
dec
xor
add
mov
out
enter
jnp
jnp
jp
or
scas
inc
xor
in
add
jo
pop
cmpl
out
in
les
add
aam
xchg
ds
cmc
add
xor
pop
sub
add
fwait
jae
jns
inc
out
or
sbb
das
add
xchg
pusha
scas
xchg
add
fsubp
insb
aam
push
add
fsubrs
inc
cmc
aad
jns
orb
sbb
loopne
push
add
jmp
out
sub
ret
add
cmp
fcompl
cmp
cmp
ja
jmp
cmc
dec
test
adc
rcrb
lock
mov
je
movsbl
add
cltd
and
out
scas
add
adc
call
push
in
add
stos
imul
loopne,pt
add
jg
movsb
aam
pop
add
repz
stc
int
lahf
add
in
hlt
mov
sbb
fcmovu
xchg
fsts
lods
insb
add
fsubs
nop
test
pop
xor
nop
push
adc
or
test
push
pop
and
lahf
shrb
movsl
add
mov
push
add
push
add
in
pushf
lea
push
cmp
push
and
mov
rolb
add
imul
lret
xchg
push
or
mov
jle
mov
pop
xor
nop
jb
sbbl
mov
push
loop
pusha
test
stos
or
sti
xchg
mov
add
xor
lahf
add
cltd
jle
pop
imul
mov
add
lock
sbb
xor
pop
push
sti
sbb
subb
sbb
outsb
xorb
cwtl
jb
loopne
add
pushf
pop
cmp
addb
push
ss
fadds
je
and
aam
sub
push
fs
adc
mov
and
xchg
inc
push
add
or
loopne,pn
leave
shl
pop
dec
cld
mov
xchg
lods
addl
mov
adc
xchg
clc
inc
and
push
jmp
push
aam
cvtpi2ps
rolb
jnp
lods
mov
loopne
stos
add
mov
data16
inc
xchg
push
adc
std
imul
fbstp
jp
mov
mov
mov
add
xor
addb
add
mov
popa
add
adc
xor
jno,pt
or
push
add
inc
mov
insb
add
cmc
loopne
add
or
add
mov
dec
in
cmp
push
add
sbb
call
xchg
mov
dec
push
adc
add
cs
inc
or
aas
or
add
push
cmp
and
or
and
inc
mov
push
cmp
push
add
pop
add
or
ja
aam
or
mov
fists
push
dec
enter
xor
mov
out
add
and
push
xor
push
out
decb
cmc
jo
sbb
nop
lds
inc
ljmp
leave
dec
call
add
addr16
add
add
movsb
add
pop
cmp
ljmp
call
add
sub
xchg
add
mov
mov
rcll
xlat
jge
xchg
jl
add
inc
outsb
call
or
cmp
addb
ja
and
fdivrl
daa
lret
push
xor
adc
ljmp
mov
add
mov
lret
adc
test
arpl
jbe
add
sbb
cs
push
push
std
xlat
push
add
es
add
or
sbb
push
add
ja
sarb
add
or
mov
jmp
or
add
sbb
aaa
test
mov
add
and
push
pop
loop
add
jne
sub
testb
jmp
and
cld
cs
fadd
dec
outsb
arpl
loop
mov
sbb
bound
xor
push
xor
add
aam
push
pop
cld
and
inc
sub
jns
add
inc
xor
je
push
add
pop
mov
xor
add
outsl
ret
mov
fs
push
clc
add
es
add
and
push
adc
jl
pop
or
cmp
dec
pop
jecxz
fdivs
adc
ret
mov
adcb
stc
sbb
pop
or
cmp
jle
adc
adc
bound
inc
mov
std
xchg
inc
loop
add
cmp
jb
jo
push
repnz
or
popa
icebp
jne
xchg
lock
fs
xchg
xchg
add
push
xor
outsb
outsl
sub
movl
movsl
inc
push
jae
out
mov
pop
packuswb
xchg
xorb
pop
jo
jecxz
add
sub
or
call
clc
jne
shr
push
mov
cmpsl
adc
mov
jo
push
sub
pop
adc
in
lcall
sub
add
lods
movsb
fsubl
sub
add
inc
shlb
and
add
sub
push
cwtl
add
stc
cli
jecxz,pt
and
es
arpl
out
int3
incb
mov
movsb
shll
call
sub
sbb
popf
ret
imul
cmpsl
test
and
cmpsb
add
daa
lea
aas
in
aad
sti
xchg
fdivp
inc
push
sub
sbbb
push
jmp
add
mov
lret
dec
cmp
add
mov
popa
xchg
mov
lcall
loope
push
cmpsl
or
mov
add
sbb
movb
pop
hlt
pop
sub
lds
jl
add
cmpb
push
mov
icebp
ja
stos
push
insb
add
xchg
clc
push
dec
cmpsl
insl
add
jmp
mov
hlt
roll
pop
jmp
mov
and
push
adc
lea
test
dec
call
not
arpl
xchg
icebp
adc
xor
dec
cmp
dec
sbbb
cld
mov
inc
stc
mov
push
std
mov
mov
adc
add
jp
pop
pop
jbe
test
mov
or
sub
inc
push
lds
incl
addb
mov
ss
xor
push
sbb
lahf
push
add
icebp
add
pop
push
dec
mov
sarb
imul
mov
andl
mov
sbb
and
add
push
or
inc
mov
add
pop
mov
in
inc
pop
arpl
in
testb
pop
push
lds
outsb
add
jae
enter
add
clc
jg
add
dec
push
push
stos
add
cmp
and
addb
dec
fidivrl
or
xor
bound
adc
push
inc
add
add
pop
mov
inc
adc
out
imull
pusha
jle
add
popl
and
aas
cmp
mov
jbe
jne
lock
adc
sub
adc
incl
xchg
es
sub
pushf
push
add
bound
mov
sbb
mov
push
add
mov
add
gs
sub
scas
push
pusha
pop
rolb
stos
fs
push
xor
add
mov
jge
pop
add
loopne
fcmovbe
cltd
lea
push
jmp
dec
daa
fsubrs
je
notl
cli
inc
add
scas
pop
adc
lahf
pop
mov
sbb
pop
ret
test
pop
stos
hlt
cmpsl
mov
testb
fidivrl
mov
xor
mov
add
lods
out
cmc
add
and
sub
push
sbb
inc
add
in
push
aad
mov
movb
test
cli
and
stos
add
dec
scas
fs
and
test
or
test
push
push
loopne
stc
paddq
push
lock
cmp
addr16
add
dec
je
add
je
inc
leave
sub
add
push
mov
fs
push
add
scas
call
sbb
lock
lahf
ret
jae
sub
enter
add
in
mov
scas
cwtl
dec
ja
add
cmpsb
pop
sbbl
add
add
add
mov
in
je
pop
add
imul
jle
or
inc
cltd
sbb
push
sub
jmp
cmp
dec
test
cs
lea
inc
add
es
rol
inc
pop
cmp
sbb
mov
push
je
mov
add
or
and
inc
loopne
lods
pop
shrb
pop
inc
outsl
add
pop
xor
push
ja
add
loope
sub
sub
inc
mov
sbb
push
adc
cmpb
push
je
cwtl
out
pop
hlt
cmp
push
jl
add
xchg
add
push
mov
test
sub
add
push
cld
ljmp
inc
push
add
in
add
jne
data16
cmpsl
mov
popa
and
or
xchg
dec
mov
and
add
clc
icebp
pusha
ljmp
cmp
aaa
add
adc
sub
ds
sbb
mov
add
cmp
add
mov
add
push
mov
adc
mov
outsl
sbb
add
xor
stc
cwtl
cmc
loopne
cltd
mov
adc
in
xchg
out
pop
jl
js
add
mov
mov
xchg
xchg
push
mov
cmp
adc
jne
add
mov
jge
pop
insl
pop
push
add
jb
je
mov
push
dec
insb
push
pop
std
sub
pusha
xor
jae
sub
push
adc
push
push
push
es
in
add
inc
cmp
shlb
add
cwtl
dec
std
xchg
scas
add
clc
sub
pop
inc
sbb
ja
jo
or
sgdtl
and
pusha
xchg
xor
roll
xor
jecxz
sti
pop
adc
sub
cmp
mov
test
loope
and
mov
scas
add
jmp
sbb
sub
enter
xor
adc
xchg
add
add
push
push
adc
pop
clc
add
loopne
jae
xchg
mov
or
loop
test
js
jmp
sbb
inc
lahf
pop
add
fildl
pop
inc
mov
filds
pop
test
dec
jae
add
daa
test
ja
addb
sbb
sbb
inc
and
loopne
outsl
add
jge
enter
push
add
pop
xor
rolb
f2xm1
sbb
or
cmc
add
fwait
cltd
xchg
mov
push
outsl
add
mov
pcmpeqb
push
or
out
idivb
add
mov
arpl
sub
lcall
insl
add
and
imul
lcall
sub
add
mov
imul
mov
out
mov
mov
mov
jne
in
inc
fmuls
adc
push
inc
mov
add
fld
clc
roll
mov
add
gs
rcrb
add
sbb
sub
test
xchg
test
cmp
dec
cltd
idiv
pop
inc
test
add
mov
fwait
xchg
loop
in
or
or
or
mov
inc
out
sub
and
enter
add
mov
fstps
mov
mov
dec
push
add
sbb
call
cmp
or
rdmsr
lcall
cmc
lahf
pop
adc
push
rorl
mov
add
pop
push
call
jnp
push
sti
mov
add
push
cmpb
jp
add
ret
push
arpl
call
add
dec
jo
push
rorb
xlat
add
xchg
out
ret
bound
push
push
jge
jp
mov
xchg
sbbb
dec
int3
cmpl
jge
add
ret
lret
int3
sub
lea
cld
fisubs
sub
add
adc
lahf
or
cmp
jge
mov
xor
add
daa
pop
jb
inc
jbe
add
cmp
jne
mov
add
pop
outsb
adc
xor
bound
repnz
jae
jo
flds
add
les
mov
jnp
cmp
addb
rolb
pop
mov
insb
daa
mov
testb
call
test
add
jl
mov
push
neg
add
shlb
add
push
jmp
cmp
add
mov
dec
ss
andb
testb
mov
test
dec
push
sbb
sbb
cmpl
or
push
push
pop
ret
sub
in
mov
adc
call
sbb
incb
arpl
mov
mov
add
add
jb
nop
pop
add
data16
xor
hlt
sub
dec
les
pushf
cmp
pop
jb
gs
lcall
mov
imul
sub
lock
enter
int3
rcrb
jg
repnz
xchg
add
out
adc
sbb
push
loopne
cwtl
xorb
add
add
fdivrp
cs
push
adc
inc
pop
mov
push
enter
dec
int
rorb
add
jne
add
cs
cwtl
jl
jae
adc
aas
lea
add
pop
sub
cltd
xor
add
xchg
adc
xchg
data16
loope
andl
push
add
test
daa
xlat
mov
add
jp
xchg
dec
mov
arpl
nop
cmp
shlb
andb
add
cli
mov
mov
inc
mov
add
mov
aam
or
pop
add
jle
add
clc
sbb
add
jno
sub
incl
sbb
test
or
xchg
shrb
mull
add
push
jp
in
add
mov
inc
fistpll
ret
adc
add
inc
sub
jnp
pop
xor
inc
sbb
mov
xor
cmp
jnp
adc
add
xchg
ffreep
add
insl
lea
sbb
loope
stc
add
and
loop
fiaddl
call
icebp
int3
adc
in
add
xor
push
into
jp
adc
and
or
add
popf
push
add
pop
addb
dec
jne
popa
call
int3
lods
bnd
out
pop
add
je
dec
pusha
dec
push
out
aam
pop
xor
and
or
aas
add
mov
lods
mov
xchg
inc
cmp
add
push
cmp
add
mov
push
mov
lds
mov
jge
jnp
mov
or
ret
arpl
fists
dec
add
lods
jns
jle
cmp
pop
push
insb
add
aad
enter
xchg
sarl
inc
cmp
subb
xchg
add
or
add
push
pop
adc
jns
and
cmpl
pop
fwait
cwtl
adc
cmp
add
cmp
sub
cld
inc
push
sub
push
or
movaps
pop
mov
mov
sub
push
cli
inc
subps
xchg
loop
ds
insl
push
dec
jl
sbb
or
adc
jle
mov
mov
fidivrs
mov
lea
mov
push
ret
cmp
ss
xchg
in
xor
enter
push
adc
icebp
rcrb
add
aam
push
and
cmp
jno
pop
and
and
insb
shl
or
lock
or
bound
addr16
test
insb
mov
or
xor
daa
cmp
pop
or
arpl
jecxz
bswap
push
jge
jl
ucomiss
pusha
iret
popf
scas
in
das
loop
push
jb
shlb
add
add
outsb
push
movsb
jmp
pusha
add
push
insb
pop
push
imul
push
xor
dec
call
or
add
nop
es
jns
pop
mov
xor
cwtl
and
adc
aam
popf
orl
push
xor
std
dec
int
add
push
fisubrs
mov
shrb
or
sbb
inc
cmp
sub
jne
add
sti
fadds
cmpb
add
mov
and
add
pop
jmp
add
cmp
add
sub
xor
add
ljmp
add
cmp
fadds
repnz
mov
ret
xor
mov
inc
mov
mov
mov
xor
dec
add
rolb
movsl
mov
ss
int
xchg
out
in
add
pop
dec
pop
add
aam
add
pop
xchg
mov
xchg
mov
lcall
sahf
pusha
sbbb
add
and
pop
ljmp
rcrb
adc
repnz
add
sbb
aas
test
push
sub
les
mov
pusha
add
cmpsl
or
loopne
xor
sbb
mov
and
adc
and
xchg
ljmp
or
pusha
mov
and
inc
jno
xchg
nop
add
test
and
in
and
adc
dec
and
mov
adc
insl
xorb
jecxz
dec
xor
jns
dec
shlb
xor
shl
ja
adc
jmp
xor
inc
xor
jl
mov
std
adc
into
shll
sti
call
mov
inc
outsl
add
and
in
push
add
inc
sbb
imul
sahf
les
mov
adc
cwtl
add
jb
outsb
jae
add
fstpt
sbb
jne
mov
dec
mov
xchg
stos
inc
xchg
sbb
or
in
jns
add
xor
pop
push
scas
ficompl
nop
jo
outsl
mov
inc
jb
je
jne
movl
nop
adc
mov
pop
test
add
jae
push
push
add
push
push
fidivs
dec
add
fstpt
test
bound
jp
cmp
sbb
mov
movsb
das
cmp
mov
dec
xchg
cmpl
jno
outsl
sbb
out
imul
add
xchg
scas
sar
jno
test
jmp
loopne
stc
je
or
and
arpl
jmp
push
add
dec
js
subps
sub
popa
sub
jmp
dec
addb
in
push
jmp
adc
movsl
ret
das
sub
mov
mov
loop
and
adc
add
hlt
clc
stc
gs
add
mov
mov
adc
jg
jae
lock
out
mov
je
and
lock
push
push
in
lret
scas
add
enter
in
insb
aam
mov
xchg
jg
or
test
dec
add
loopne
push
pop
sub
pop
adc
mov
jne
dec
cli
xchg
add
fldl
push
sbb
aam
or
add
xor
in
in
inc
add
movsl
sti
or
jo
stc
mov
pop
loop
mov
pop
das
jo
test
sub
dec
push
test
pop
cmpsb
test
add
xchg
pop
inc
sub
mov
mov
mov
dec
call
ret
add
into
and
sbb
push
dec
inc
rorw
jmp
fiadds
cmc
gs
sub
push
mov
mov
lock
jbe
mov
loopne
mov
cmp
sub
sub
xchg
add
xchg
inc
stos
add
pop
pop
add
pop
rcrb
sbb
lds
int3
push
call
add
mov
push
add
lea
je
push
fadds
ss
and
je
add
sub
pop
mov
mov
xchg
jns
pop
sub
lret
xor
inc
lock
add
mov
dec
and
inc
cwtl
add
sbbb
insb
push
cmp
sbb
add
mov
icebp
cmp
scas
insb
ret
adc
iret
jne
cmp
mov
xchg
pop
sbb
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
lea
leave
lock
add
jle
jns
and
add
add
mov
sbb
js
inc
sbb
scas
add
xchg
add
add
imul
dec
hlt
inc
pop
mov
nop
std
test
xchg
add
lods
mov
lock
outsl
add
adcl
test
xor
add
movsl
xchg
int3
adc
mov
mov
rclb
sti
add
pop
jmp
movb
sub
adc
xchg
inc
fs
and
pop
push
in
mov
add
dec
add
ds
cmp
cmp
sub
pop
sbb
cmp
mov
fs
pop
and
sbb
sub
inc
dec
leave
mov
jb
mov
pop
add
movl
and
movsb
inc
lret
in
mov
xor
xor
inc
nop
enter
pop
or
and
jo
adc
cmp
insb
pusha
inc
and
and
push
mov
dec
sbb
add
jnp
xor
mov
add
xlat
mov
das
pushf
adc
shrb
pop
leave
jge
repnz
jnp
add
push
pop
inc
mov
test
cmp
mov
stc
adc
lods
or
and
ljmp
sahf
stos
lcall
lods
rcll
ud2
add
adc
lods
add
add
jbe
inc
shll
dec
addb
popf
sub
fcoms
sub
push
mov
xor
test
add
jmp
ljmp
lods
sub
loop
add
out
adc
add
fists
add
xorl
movsl
push
and
adc
push
popa
jb
loope
and
jl
add
das
out
aam
mov
mov
push
jns
mov
jecxz
pop
je
maxps
pop
iret
andb
loope
or
into
xchg
xorb
out
pop
xchg
adc
mov
push
dec
lret
aas
and
mov
push
mov
xor
mov
add
out
enter
jb
hlt
adc
mov
xor
mov
fiaddl
adc
in
xchg
xchg
or
xor
mov
cmpb
lods
gs
sbb
lret
or
push
lea
mov
shl
sub
add
cld
jmp
roll
in
incl
jb
cs
fisubs
popl
pop
sub
insl
inc
push
push
mov
cmpsb
push
scas
fwait
cwtl
mov
and
adc
js
das
inc
cmp
stc
add
out
sub
inc
inc
jno
xchg
xor
jae
sub
push
and
adc
or
sub
ds
loopne
mov
test
sbb
popf
sub
aaa
add
xor
popa
sub
sbb
arpl
mov
dec
pop
push
les
inc
mov
aas
scas
cwtl
add
add
inc
aam
mov
or
leave
or
pushf
adc
insb
add
push
fmull
inc
push
dec
xor
add
jo
pop
jg
iret
jg
movsb
add
leave
sbb
add
mov
jae
xor
lock
jno
adc
shrb
sub
dec
stc
imul
push
add
das
mov
loop
xchg
js
les
adc
add
jo
out
scas
rcrb
jne
mov
fs
aam
cmpsb
mov
push
dec
aam
loop
add
mov
jge
fildl
add
sbb
add
xor
sbb
adc
sbb
add
and
mov
out
lahf
mov
imul
jmp
stos
adc
and
add
adc
jne
push
fadds
lahf
outsl
nop
les
add
xor
dec
mov
jl
and
cld
pop
xor
push
test
push
jg
add
faddp
jmp
aad
fsubrl
add
stos
mov
or
idivb
push
sbb
incl
add
fisubs
and
mov
jl
cli
or
xchg
iret
pusha
mov
test
mov
jbe
filds
lds
cmc
push
fldcw
mov
adc
lods
adc
sbb
push
lea
fsubrl
clc
pop
std
dec
add
cmpsl
aam
sub
mov
fs
sbb
pop
lahf
xchg
adc
or
fildl
inc
adcb
xor
or
jne
pop
add
pop
push
push
mov
adc
dec
shr
push
stos
mov
jae
jg
add
sub
push
lds
xchg
andb
and
aam
or
or
lock
call
pop
dec
pusha
add
mov
mov
push
addb
sbb
out
or
adc
dec
out
loop
dec
jns
int
mov
pop
call
xor
jo
add
inc
or
xchg
test
jne
cmp
je
aaa
call
int
in
addb
jge
sbb
add
or
jae
shlb
dec
push
push
adc
rcrb
inc
test
psrad
lcall
lock
pusha
push
mov
inc
testb
cmp
mov
add
filds
in
add
dec
mov
stc
xor
lods
mov
shr
sti
add
mulb
test
insb
pop
cmpsl
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
scas
or
add
mov
adc
cltd
cmp
add
push
cmp
xor
pop
or
stos
int
rcl
add
test
dec
ret
add
adc
mov
push
test
add
pop
dec
xor
lock
pop
mov
cltd
int3
les
inc
lock
sub
inc
ffreep
dec
add
movsl
test
mov
adc
add
sti
ljmp
icebp
filds
mov
xchg
sbb
lea
sti
cmp
adc
adc
int3
add
fildl
mov
mov
xlat
stos
add
lahf
jno
adc
sub
push
das
push
push
pop
add
xor
inc
xor
add
ret
das
cmp
loope
push
popa
sub
movswl
repz
mov
add
ljmp
cmc
sub
and
inc
and
add
mov
inc
jb
add
out
dec
orl
cmp
loop
sbb
sub
fisubrs
inc
xchg
leave
enter
or
fiaddl
jg
mov
add
fisttps
enter
add
inc
je
add
dec
lret
shl
add
dec
inc
cmp
je
stos
in
jge
mov
out
xchg
jl
jbe
aad
fimuls
mov
add
jne
cltd
shrl
xor
cmp
or
push
orb
jge
lods
add
sub
test
ja
imul
add
test
or
popa
push
or
rolb
test
lret
cmc
jp
inc
mov
jo
sbb
mov
jmp
shlb
mov
shlb
sbb
addr16
sti
xor
sub
ret
out
mov
cmp
mov
aad
mov
inc
push
jmp
or
mov
add
inc
xor
ret
scas
mov
push
les
outsb
inc
loope
jne
add
push
roll
test
test
adcb
adc
jmp
cmp
scas
sub
push
add
daa
add
lea
pop
mov
mov
add
in
movsb
push
fbld
lret
cmp
xor
add
jns
pushw
mov
test
mov
cs
jl
dec
test
inc
mov
je
cmp
add
push
sbb
push
adc
add
cmp
add
cld
loopne
scas
mov
loop
push
add
outsb
add
adcl
mov
movsl
or
in
mov
inc
addb
out
adc
mov
fistpll
add
into
mov
inc
getsec
pop
fsubr
and
daa
or
ja
clc
loopne
rcrl
sub
add
or
jbe
mov
or
mov
adc
adc
jle
addl
inc
jmp
jo
dec
sbb
add
adc
icebp
jne
dec
jp
add
xor
std
sbb
outsl
add
flds
adc
inc
jmp
add
jo
inc
das
or
stos
adc
cwtl
add
ja
repz
cmpsb
and
mov
aam
in
mov
lret
fistpl
xchg
pop
repz
leave
dec
add
mov
add
pop
out
cmpsl
test
pusha
mov
das
call
mov
lods
mov
lock
mov
xor
stc
sub
rcll
and
cmp
or
pand
mov
sub
add
scas
mov
push
in
inc
mov
pop
jns
dec
add
loopne
mov
add
xor
fcoml
insl
pusha
ljmp
cmc
sbb
jge
pusha
mov
icebp
rclb
cmp
ds
xor
int3
rep
lock
loop
mov
ja
nop
mov
add
push
and
inc
fwait
jp
ds
fildl
lret
or
mov
pushl
test
shrl
mov
push
aas
dec
push
mov
jp
adc
mov
imul
inc
rorl
mov
mov
mov
jmp
sahf
add
in
jo
add
imul
push
imul
cmp
cli
call
jnp,pt
pop
mov
ljmp
insb
jbe
push
add
jnp
jg
pop
stos
add
pop
push
mov
dec
push
add
hlt
imul
mov
push
add
dec
outsl
insb
mov
mov
dec
jne
dec
ljmp
cmpsb
xor
mov
and
push
fiaddl
jnp
add
popf
pop
addr16
mov
add
aaa
fldcw
push
call
sub
das
dec
jl
cli
cmp
mov
and
sbbb
pop
test
lcall
aas
or
inc
shl
push
cwtl
pop
add
fsub
das
jp
cmp
push
in
mov
insl
mov
sub
pop
stos
movsl
sub
jp
xchg
outsl
inc
int3
cmp
jecxz
cmc
cmp
dec
mov
push
mov
fcmovb
xchg
inc
jns
scas
mov
add
jae
push
sub
xchg
call
pop
pusha
push
adc
das
and
xor
jge
fldl
adcb
aam
xchg
bound
pop
mov
dec
or
js
dec
out
sti
add
shlb
pop
mov
inc
leave
pop
fidivrl
jl
incl
je,pn
outsl
incb
cmp
add
dec
jmp
cmpsb
sbb
rcl
jmp
push
adc
or
fiadds
jae
pop
xor
pop
push
lret
sub
jo
sti
and
jg
mov
inc
incb
lret
xor
mov
and
aas
pop
das
outsb
imul
push
push
mov
dec
dec
int3
add
xchg
rolb
add
aaa
sbb
add
jmp
or
es
in
je
or
pusha
in
lods
cmpsb
mov
add
outsl
push
movsb
jo
mov
ds
andb
jecxz
enter
dec
test
out
mov
add
push
push
popa
aad
nop
outsb
add
jge
lods
pop
adc
add
filds
shrl
mov
add
adc
and
sub
add
or
les
jnp
cmp
xchg
xor
pop
andl
push
add
jo
sub
jne
mov
and
xchg
cmc
ds
push
addb
jg
adc
in
and
leave
add
pop
push
sti
cmp
add
push
dec
nop
mov
cmpsb
scas
cs
push
adc
mov
push
jne
adc
inc
sbb
xchg
daa
jne
pop
and
jbe
setno
and
pop
in
inc
out
push
pop
dec
popf
inc
cmp
test
inc
pusha
cwtl
gs
jl
dec
call
add
push
pop
add
dec
adc
loop
jne
pavgb
dec
mov
fsts
mov
mov
inc
cwtl
movb
clc
and
shlb
js
add
adc
ja
or
add
inc
sbb
mov
sbb
xchg
sarb
sbb
mov
mov
inc
cmpsl
or
mov
sub
add
pop
imul
dec
in
xor
addr16
outsl
push
out
pop
inc
xor
nop
sub
adc
jo
je
call
loopne
imul
lcall
popa
sbb
dec
add
jmp
inc
jg
add
dec
lock
push
xchg
cmp
cld
es
cmp
xor
sub
mov
push
ret
add
or
sbb
test
mov
adc
add
stc
incb
dec
cwtl
dec
inc
xor
sub
mov
pop
add
adc
jns
pop
xor
shrb
daa
imul
jmp
aas
inc
mov
mov
fld
adc
scas
mov
dec
push
pop
push
adc
mov
test
aas
arpl
and
mov
dec
data16
mov
dec
in
xchg
test
mov
adc
enter
jp
xor
sbb
add
sub
es
add
jg
or
lods
add
stos
cmp
inc
push
arpl
add
fs
cld
inc
shrb
cmc
lock
inc
dec
push
inc
dec
dec
sbb
push
jae
cs
add
ja
enter
or
inc
cmp
fcomps
mov
cld
roll
sbb
add
cmp
jle
mov
stos
mov
and
add
sar
daa
sub
jo
test
pop
sub
cmp
ret
adc
mov
add
jp
stos
inc
add
xchg
dec
push
add
inc
mov
mov
stos
mov
mov
sub
add
pop
dec
and
dec
add
and
cmp
mov
les
inc
cli
inc
push
add
dec
dec
cmp
test
fisttpll
out
mov
fistl
add
mov
and
xlat
add
cmp
xchg
xchg
cli
shrb
add
dec
or
mov
pop
lock
fs
adc
ret
sub
inc
ja
loopne
mov
push
enter
add
and
mov
or
mov
push
add
pop
push
add
in
mov
nop
push
inc
inc
push
mov
inc
xor
insl
pop
xchg
xchg
cli
adc
add
push
daa
jne
aad
icebp
sub
mov
stos
pop
js
subb
push
inc
repz
enter
add
outsb
cmp
or
cmpl
pminsw
lods
dec
outsl
and
in
data16
add
int3
scas
rcll
cwtl
add
mov
bound
inc
jb
jge
push
aam
jo
addr16
test
ja
or
test
adc
addr16
cmp
arpl
gs
ds
movl
cwtl
pop
imul
push
push
pop
pusha
and
rol
mov
sbb
loop
adcb
ret
push
mov
lcall
rolb
add
int3
xor
add
pop
add
add
mov
jl
push
call
dec
pop
pop
mov
xchg
dec
add
lcall
inc
shrl
add
in
push
cmp
je
scas
jp
add
jne
negl
bound
subb
je
inc
push
add
lea
in
push
mov
mov
lock
pop
adc
imulb
xor
clc
add
incb
imul
pushf
das
movsb
push
movq
mov
add
cltd
xchg
push
std
adc
adcl
mov
mov
push
pop
jbe
push
sbb
push
xchg
nop
xchg
test
mov
lret
stos
dec
pop
mov
imul
jne
or
mov
popf
out
sub
test
dec
xchg
lock
push
inc
lahf
push
les
imul
mov
movsb
in
out
pop
fs
rolb
jle
ljmp
lea
mov
add
push
sub
mov
or
mov
fdiv
rorl
outsb
mov
add
sub
sbb
dec
loopne
or
sarb
sbbb
xor
xchg
cmpxchg
dec
imul
sub
addb
mov
cli
aas
add
cmpsl
and
and
push
mov
dec
adc
inc
push
adc
movsb
add
mov
or
ljmp
xchg
and
dec
movsb
repz
fmull
jns
test
rcll
fidivrl
sub
fnstsw
pop
imul
aam
in
add
sub
mov
pop
or
inc
inc
sub
ds
clc
dec
add
push
push
stos
cmp
fs
xor
jno
inc
add
insl
adc
call
aad
sub
pop
ret
cmp
ds
push
test
sbb
das
sbb
pusha
insl
stc
rorb
sbb
insb
xchg
stos
les
inc
mov
mov
cmc
add
pop
and
lahf
repz
push
xor
pop
add
and
mov
mov
add
test
loopne
loopne
add
orb
push
data16
cmp
add
add
clc
bound
sbb
repnz
pop
xor
mov
jmp
mov
add
icebp
repnz
push
arpl
cmpl
mov
sub
mov
pusha
cld
push
push
mov
sbb
fstl
nop
sbb
mov
mov
xchg
les
enter
add
inc
shlb
mov
adc
sbb
and
add
xor
cmp
dec
push
stos
push
push
pop
jmp
insb
inc
push
outsb
add
stos
repnz
mov
inc
add
jo
or
cs
add
or
and
jae
cmp
sub
aas
adc
or
daa
in
or
aad
push
lcall
mov
roll
push
push
call
lret
jl
lds
pop
popf
cld
cmpsb
sub
sbb
push
sbb
add
pop
add
mov
cld
add
adc
push
add
addb
xor
adc
adc
add
sbb
inc
addb
push
mov
jne
xchg
jnp
add
adc
push
add
mov
sub
sub
inc
inc
cmp
jno
sbb
imul
ds
pop
add
push
sub
aam
cli
cmp
cs
outsl
imul
mov
jbe
clc
adc
es
add
and
pxor
xor
add
iret
inc
dec
or
lahf
shl
call
or
xchg
out
sub
xchg
push
in
test
jne
adc
mov
mov
xchg
call
ss
adc
pop
xchg
mov
shrb
inc
in
ljmp
mov
adc
stos
ja,pt
mov
sub
jns
or
incl
inc
adc
dec
fs
lods
add
imul
sti
sub
and
fldcw
in
divl
fadds
mov
adc
sarb
xchg
sbb
shll
add
aam
aaa
dec
lcall
sti
scas
sbb
or
or
xchg
and
mov
add
hlt
and
les
movsb
adc
inc
mov
int3
or
mov
inc
mov
add
mov
aam
fbld
or
sub
push
orb
lahf
cmp
out
and
push
roll
jo
mov
lods
or
add
adc
test
add
movsb
mov
add
sub
xor
push
add
push
in
push
jmp
jle
ja
dec
mov
cmp
push
aam
jb
popa
jecxz
add
pop
and
push
mov
leave
js
cmp
sub
enter
pop
test
add
dec
hlt
push
nop
lock
clc
data16
loop
add
dec
adc
ret
mov
aas
in
or
and
adc
mov
xor
jl
cs
sub
pusha
cltd
cmp
mov
and
xor
add
lea
out
add
sbbb
push
jle
adc
inc
add
test
pop
mov
pusha
dec
push
add
lret
int3
adc
adc
lcall
nop
pop
push
rol
xchg
push
js
xor
add
andl
cmp
cwtl
dec
test
add
test
xlat
fnstsw
mov
inc
pop
jo
and
leave
add
mov
pop
cmp
insl
shrb
cld
adc
add
xchg
fcmovnbe
ds
loopne
mov
xor
jl
dec
movzwl
daa
loope
or
mov
out
cmpb
ljmp
data16
adc
mov
fisttpl
push
inc
inc
pop
xor
data16
add
ss
lods
xchg
and
sti
mov
push
xchg
add
inc
repz
push
in
iret
mov
dec
mov
push
dec
dec
fildl
and
cs
add
aas
push
add
sub
push
jbe
add
mov
lds
sub
aam
ss
xchg
mov
jb
jo
bound
ja
fs
add
sbb
arpl
adc
push
push
dec
gs
jne
push
add
jge
hlt
push
push
ss
adc
cmpsl
jp
push
pop
enter
gs
pusha
pop
lret
cmp
pop
dec
pop
nop
jl
and
jmp
push
fimuls
push
cwtl
and
add
ja
push
pop
jl
push
adc
dec
cmpsl
aad
inc
add
jno
cwtl
jae
sbb
es
pop
imul
pop
and
dec
pop
imul
addb
adc
or
add
adc
add
and
loope
xlat
ret
xchg
inc
sarb
fiaddl
scas
push
xor
and
xchg
ljmp
lea
add
enter
fcoms
xor
sbb
sub
mov
and
addl
stos
sub
xchg
jmp
cmp
js
mov
test
stos
adc
cmpsl
inc
inc
rcrl
inc
dec
jo
add
sub
je
leave
or
push
pop
cmpsb
subl
movsb
fldl
enter
lcall
dec
adc
das
shl
mov
sub
nop
testl
sbb
out
add
push
xor
xchg
jmp
sarb
mov
push
adc
outsb
push
lret
push
sbbl
xor
pop
mov
pop
test
test
cli
std
in
mov
leave
jo
pop
inc
mov
push
incl
xor
push
push
add
jnp
mov
cmp
xorl
test
inc
movsl
or
or
jbe
out
enter
xor
adc
nop
xlat
cwtl
sbb
bnd
adc
xor
add
push
sub
add
in
dec
mov
test
pushf
popa
in
repz
les
cmp
sete
pusha
ss
xorb
jecxz
mov
sbb
cwtl
add
or
testb
xchg
cmp
add
cmpw
in
addl
js
ss
push
fnsave
pop
push
repz
leave
adcb
or
addl
push
add
cld
xor
jmp
movsb
pusha
dec
insl
not
ss
js
add
lds
mov
xchg
dec
aas
test
add
dec
je
add
add
jmp
stc
sbbb
add
cmp
bound
and
jmp
add
mov
or
out
shr
push
loopne
jmp
add
in
movl
pop
ja
shr
out
add
push
lock
jnp
adc
mov
sbb
xor
sbb
jo
add
pop
scas
mov
adc
pop
add
pslld
adc
add
movsb
out
push
jg
and
out
add
into
cmp
pop
scas
nop
and
data16
out
mov
push
add
add
jo
add
or
popf
nop
push
mov
inc
repnz
push
xchg
rorb
cmp
xorb
pop
sub
scas
nop
jno
data16
test
add
mov
popf
loopnew
imul
add
inc
in
xchg
xchg
add
pop
xlat
and
mov
dec
je
mov
ljmp
jbe
jl
rolb
add
loopne
add
cwtl
arpl
xchg
sub
pop
sbb
mov
sbbb
repnz
bound
inc
mov
pop
les
ja
iret
jae
nop
subl
xor
arpl
mov
mov
in
pop
andb
cmpsb
cmc
test
and
push
dec
mov
mov
pop
add
and
inc
jmp
test
mov
test
fs
paddq
mov
ret
shll
add
pop
test
xchg
push
lock
rcl
adc
aam
mov
cs
test
xor
inc
rorb
fs
out
pop
cmp
add
or
sub
mov
xor
stos
loop
inc
jbe
dec
loopne
add
in
jle
cmpsl
xor
sti
inc
cli
jp
lret
pop
pop
add
rcrb
daa
rolb
out
mov
mov
ret
push
add
divl
scas
jmp
cmp
jecxz
rcrl
je
xor
stos
mov
pop
inc
adc
roll
out
loopne
add
push
repnz
add
mov
xchg
movsb
add
adc
pop
jmp
imul
adc
inc
pop
inc
pop
adc
pop
jb
sub
sbb
int3
lcall
cmp
add
mov
push
sub
rep
jb
fistpl
mov
add
fiaddl
pop
ficomps
mov
les
mov
push
fdivs
aas
adcl
sbb
add
sbb
lcall
jb
test
out
add
xchg
das
repnz
add
mov
or
lods
add
push
sbb
dec
enter
jnp
cmp
cmp
dec
outsb
leave
mov
push
adc
add
xchg
xor
dec
adc
fnsave
push
pop
add
cmp
jb
pop
je
add
or
push
mov
sbb
std
dec
jnp
jbe
lret
add
in
add
push
sub
sarb
movl
jg
push
sbb
or
mov
popf
jecxz
push
dec
vorps
add
es
xlat
push
pop
lahf
dec
pop
jle
add
mov
adc
push
orb
cltd
add
adc
add
cmp
hlt
insb
dec
xor
stc
add
popa
clc
std
andnps
pop
mov
stos
and
decb
mov
pushf
andl
jl
pusha
add
add
inc
cmp
dec
add
add
or
sbb
mov
jl
add
call
adc
leave
adc
adc
loopne
push
add
sar
add
out
sub
xor
repz
fwait
mov
pop
fistpll
xor
or
decb
out
ret
push
add
mov
lods
add
les
rcll
mov
orb
pop
nop
mov
lea
in
add
sub
bswap
negb
jbe
lcall
shlb
jg
add
sbb
mov
scas
cltd
dec
add
xchg
pop
stos
mov
fists
ds
in
mov
add
add
test
sbb
add
jmp
dec
iret
adc
mov
loopne
push
or
xor
add
adc
mov
inc
or
pop
mov
add
xchg
pop
add
cmp
inc
xchg
sub
mov
add
pop
sub
cmp
add
aam
out
lret
int
test
stos
push
loopne
add
les
scas
sub
mov
cmp
lock
pop
jnp
xor
xor
es
add
movntps
add
enter
in
pop
add
cmp
sbb
dec
andb
inc
cli
rolb
and
push
xchg
test
sbb
lods
sbb
nop
xchg
xor
cmc
cmp
cmpsl
aas
cmp
jle
or
cmp
xor
repnz
xchg
add
adc
movsb
add
jo
dec
push
inc
inc
je
add
add
stc
jecxz
out
rcl
mov
aad
add
dec
shll
lret
add
xchg
and
outsl
filds
jns
sbb
cmp
add
push
arpl
cmp
mov
outsb
ret
nop
sbb
xchg
cmp
jb,pn
lods
add
xchg
push
xor
or
cmp
in
lret
fistpll
jp
mov
dec
test
cmp
adc
jbe
push
mov
push
shr
mov
mov
inc
jge
js
add
out
and
lock
jo
jo
outsb
add
pop
mov
add
jg
mov
add
xchg
jne
daa
add
pop
cltd
sahf
sarl
cli
add
jmp
rolb
or
addl
push
sub
stc
nop
sub
lret
pop
xlat
push
jmp
incl
add
sub
jo
insb
add
or
mov
jg
imul
sub
sbb
sub
mov
fs
cld
lret
cmp
sbb
pop
mov
add
xchg
inc
cmpb
pop
test
pop
out
sub
je
rorb
add
orb
repz
push
add
aam
fistps
mov
xor
cltd
stc
fisubs
jbe
mov
add
adc
add
push
jae
xor
js
cmp
pop
andb
nop
jge
bound
or
add
adc
dec
push
fadds
shl
mov
pusha
mov
dec
aas
dec
cmp
ja
jb
jmp
cld
add
jl
pop
inc
shr
imul
jne
inc
fcoms
add
pop
sar
xor
movb
or
test
in
cwtl
add
add
dec
pop
sub
popa
dec
ljmp
jae
in
jge
cmp
mov
adc
inc
pop
mov
iret
rclb
push
push
call
mov
jne
and
scas
loopne
push
pop
xorl
add
push
sub
jae
loopne
inc
push
and
data16
and
rol
and
and
mov
add
pop
scas
clc
mov
dec
push
icebp
nop
loopne
and
add
fdivr
push
mov
jnp
jecxz
test
mov
dec
add
mov
fwait
xor
pop
sub
cld
add
popf
push
lods
push
lods
ret
nop
adc
out
and
jae
add
cs
and
in
inc
pop
sbb
in
std
orb
push
push
add
clc
js
popa
cmp
dec
mov
mov
in
test
data16
dec
cmp
mov
add
jmp
or
outsl
and
hlt
leave
add
ja
ret
mov
cmp
jb
adc
mov
in
sbb
cmp
add
and
or
pop
js
push
sub
inc
jmp
lsl
shlb
mov
push
test
iret
push
pop
add
cld
call
sbb
into
jne
push
jge
push
mov
aas
sub
jne
add
cld
jnp
inc
lock
addr16
cmp
fdivrs
add
jle
in
add
stos
adc
test
sub
mov
aam
sbb
add
mov
cwtl
repnz
imul
cmp
inc
aam
cmc
pop
in
sti
in
fcoml
mov
push
popf
or
pop
inc
fstl
mov
sub
mov
jno
cmp
jb
add
rclb
or
mov
ret
mov
mov
daa
add
fbstp
push
or
push
test
add
and
xchg
push
adc
ja
adc
add
sub
mov
sahf
dec
adc
xchg
mov
psraw
mov
sarb
pop
movl
repnz
lock
cmpsl
bound
int
stc
pop
cmpsb
sub
add
and
out
testb
or
mov
ret
add
jmp
and
xlat
cmpb
int
jne
adc
adc
je
data16
repz
pop
add
jb
and
call
subl
add
mov
insl
push
dec
mov
xchg
scas
addr16
lds
or
or
leave
les
pop
lods
in
cbtw
movsb
int3
mov
mov
inc
data16
sbb
sbb
leave
outsb
inc
daa
xor
add
xchg
outsl
fadds
pop
add
imul
push
ljmp
pop
xlat
add
or
cmpsb
add
punpckhdq
add
lock
bound
lock
add
rorl
fnstcw
push
mov
xor
roll
mov
insb
call
inc
push
stos
push
in
jl
add
mov
jo
mov
or
loopne
add
and
cmpsl
nop
es
or
test
lret
sub
jge
sbb
jmp
mov
or
mov
iret
loopne
xor
cli
add
push
inc
fwait
add
scas
subb
add
es
xor
jp
dec
cmp
add
dec
pop
sbb
push
int3
xor
add
push
inc
aas
inc
into
adc
dec
push
mov
out
in
cmpsl
push
inc
xchg
test
mov
daa
sub
lret
test
loope
pop
cmp
sbb
inc
stos
aam
cmp
test
lret
sbb
dec
das
dec
aaa
pop
adcb
pop
mov
insb
add
xchg
sub
jbe
sub
clc
roll
dec
pop
jecxz
dec
mov
inc
jns
add
rcrb
cltd
or
push
dec
add
je
sarl
pop
fs
mov
jae
and
popa
add
pop
inc
js
outsl
fsub
test
popf
add
mov
in
insl
adc
cmp
xor
add
add
faddl
jne
int
mov
imul
loopne
loope
lock
out
js
popa
cmp
or
cmp
add
loope
incl
inc
loopne
pop
lahf
push
test
nop
jo
hlt
cs
mov
dec
sbb
enter
lret
lods
jge
jo
aas
mov
adc
lock
sub
push
mov
jnp
mov
pop
pop
fisttpl
add
mov
cmp
dec
jnp
add
mov
jmp
rcrb
test
lock
push
clc
aad
fs
scas
cmp
push
insl
jp
inc
out
mov
inc
mov
push
lahf
mulb
test
ljmp
jmp
minps
or
arpl
sbb
sti
push
xlat
rolb
push
cmp
arpl
sub
sbb
inc
mov
outsb
in
jg
nop
cli
jg
add
push
mov
push
push
add
subb
sti
push
pop
mov
xchg
pop
inc
inc
dec
lret
mov
push
add
add
and
inc
mov
stc
shrb
test
cmp
ja
add
dec
adc
mov
xor
jmp
add
xchg
je
or
pop
jne
sbb
add
test
xor
pop
add
fstps
add
mov
pusha
ret
call
push
jae
xchg
repnz
and
jne
idivl
mov
jb
mov
jne,pt
pop
push
push
mov
shl
add
pop
mov
inc
jl
cmp
pop
rcrl
add
adc
pop
pop
add
fdivrl
fstpt
enter
in
hlt
mov
or
fisubrl
xor
add
pop
lods
adc
fadd
push
stc
mov
inc
add
ljmp
add
test
addl
add
decl
push
mov
lret
add
mov
push
add
addr16
or
cmp
add
push
add
out
lds
xor
sub
add
icebp
outsl
mul
jp
in
add
negb
dec
std
fistpll
jae
sbb
cs
imul
add
dec
lea
push
repz
pusha
sbb
fs
mov
cmp
mov
adc
clc
lods
pcmpgtw
mov
pop
ret
add
mov
adc
nop
xorb
push
pop
jg
push
fnstcw
icebp
loopne
jne
pop
jmp
loopne
add
cmp
lar
jge
incl
lods
add
jne
add
movsb
add
leave
xchg
push
push
sbb
adc
dec
push
sbb
fwait
push
pop
lret
add
arpl
pop
adc
adc
xor
clc
adc
aaa
jno
pop
cmp
lods
mov
loopne
or
sbb
inc
dec
add
xor
es
or
pop
jmp
roll
test
mov
scas
stos
es
adc
xor
addl
xchg
mov
fdivs
add
xor
addb
xchg
pop
cmpsb
cmpb
repz
add
push
jl
pop
mov
xor
test
cmp
je
add
sub
add
add
das
rcrb
loopne
aas
lods
pop
mov
repnz
cltd
xchg
inc
add
and
pop
add
dec
test
jmp
fsubrs
add
xchg
xchg
cmp
icebp
sub
add
add
push
sldt
adc
push
inc
push
stos
movsl
xorb
jo
xor
xor
fcomp
addl
sahf
cli
movb
das
jmp
fldz
cmp
add
add
incl
add
and
inc
mov
insb
add
ret
mov
dec
ret
ja
pop
clc
adc
pop
pop
and
iret
or
pop
dec
add
jns
push
cwtl
mov
pop
inc
xor
adc
push
xchg
add
mov
pop
ret
add
jne
and
cmpsb
das
add
jl
dec
jo
insb
jg
pop
aad
fs
cmp
ds
pushf
aaa
mov
sbb
jne
rorb
add
mov
add
fildl
inc
test
mov
nop
xor
sbb
xor
fdivr
pop
and
movsb
inc
rcr
pushf
or
add
je
pop
lock
push
lea
es
sub
mov
hlt
adc
jne
pop
xchg
cld
leave
inc
xor
in
pop
pusha
push
pop
or
mov
add
mov
xchg
fmul
popf
add
sub
or
popa
push
in
add
mov
les
bound
inc
sbb
imul
jb
inc
adc
cmp
add
dec
sti
jns
push
xchg
clc
and
inc
or
cmc
pop
loopne
lods
scas
je
add
pop
das
test
lods
shl
add
daa
inc
add
sbb
add
pop
stos
cld
enter
adc
adc
or
jle
jne
add
jmp
test
pop
and
add
iret
lret
adc
mov
dec
push
xchg
and
aas
mov
rorl
int
test
ds
scas
adc
aam
xchg
insb
push
out
mov
xchg
push
xchg
hlt
pop
addr16
sti
or
aam
jb
push
dec
adc
dec
mov
das
add
mov
inc
mov
enter
push
imul
sub
push
fists
in
adc
mov
or
xorb
mov
dec
pop
mov
cltd
add
subb
push
mov
cmpl
and
sar
push
loopne
add
lods
push
lods
sbb
jnp
rorb
ret
add
inc
lcall
add
jo
scas
loop
push
push
add
sub
sar
add
jae
mov
pop
or
xchg
push
add
js
pop
add
mov
xchg
divl
pop
imul
xor
sbb
jle
sarb
pushf
imul
xor
push
dec
jne
push
sarl
shr
movsb
or
and
call
int3
mov
or
pop
mov
inc
dec
nop
decl
sti
ret
mov
or
cmpl
inc
mov
or
jne
jecxz
or
cli
pop
and
nop
xchg
cwtl
ljmp
movsl
stos
jecxz
add
xor
xor
add
jp
lea
inc
pop
push
adc
pop
popf
clc
aam
add
imul
test
push
pop
ljmp
cmp
mov
loop
sub
add
ds
jmp
pop
lahf
cmp
orb
js
and
xor
add
imul
xchg
inc
sub
nop
mov
inc
sbb
add
adc
mov
sub
xchg
mov
add
jmp
out
push
call
aad
mov
and
lds
jne
add
stc
dec
adc
rclb
xchg
dec
lcall
repz
bound
stos
jmp
mov
cld
add
mov
add
dec
push
dec
add
roll
setne
jbe
dec
jg
xor
xchg
add
not
and
push
movsb
or
xor
add
clc
ret
call
mov
and
inc
sub
ja
jbe
add
sbb
mov
mov
add
sbb
mov
sarb
mov
call
or
mov
nop
and
push
outsl
cmp
lock
aaa
cmp
mov
sti
sub
and
dec
sbb
stos
adc
adc
mov
add
sub
push
jb
test
orb
jne
rolb
icebp
call
push
mov
adc
enter
push
pop
add
lcall
lock
jecxz
nop
add
and
lret
shl
inc
and
or
cli
push
push
cmp
mov
push
add
stos
dec
sub
dec
roll
rcrb
insb
movsl
ja
add
mov
enter
mulb
enter
in
add
inc
je
repnz
jmp
jg
mov
popf
sbb
or
scas
andb
jo
sub
pop
add
movsl
add
rorl
dec
and
and
pop
push
cmp
addr16
nopl
mov
int3
fstpl
push
jmp
aad
add
inc
pusha
pop
icebp
imul
pop
jg
call
or
sbb
and
clc
stc
frstor
push
dec
adc
nop
inc
add
adc
push
rcrb
jl
xor
enter
cmp
xor
cmp
jne
pop
mov
jp
mov
dec
push
add
inc
lea
rolb
jmp
sub
pop
enter
sbbb
add
push
lret
mov
push
sub
pop
aad
cltd
sub
dec
in
or
pop
idiv
clc
movsb
cmp
mov
testb
insl
push
daa
inc
jns
sbb
les
adc
int3
push
jo
xchg
in
inc
cmp
popf
xchg
dec
rorl
ficoml
bound
inc
enter
and
mov
xchg
cmp
adc
in
loopne
dec
pop
adc
push
test
push
mov
or
icebp
add
test
push
add
mov
out
aam
mov
add
pop
xlat
push
jmp
push
sub
ret
incb
and
push
setb
mov
inc
in
cli
adc
jmp
and
clc
lods
add
inc
cmpsl
add
jge
add
les
test
leave
je
add
or
add
xor
add
lret
mov
out
in
sbb
and
xorb
pop
sbb
jns
add
outsb
test
mov
push
lock
out
fisttps
ds
mov
imul
xor
xchg
stc
push
inc
cli
outsl
dec
add
stos
repnz
jl
out
inc
mov
ret
popl
iret
cwtl
pop
roll
lds
add
pushf
lret
lock
out
pusha
sbb
xchg
fmuls
jecxz
adc
test
mov
add
and
jp
popa
movsb
lcall
jge
sub
inc
les
cmpsl
add
inc
mov
cs
loopne
mov
push
sub
shlb
or
aad
aaa
inc
xchg
and
xchg
sub
xchg
or
mov
nop
movsb
jne
loopne
inc
add
lods
pop
outsb
or
add
js
popa
adc
aas
je
and
inc
stos
sub
cmp
cmp
add
add
add
and
or
xchg
adc
inc
hlt
mov
add
xchg
fcoms
jg
mov
ljmp
adc
cmp
sub
jecxz
add
out
inc
mov
and
jb
dec
pop
js
movsb
xorl
mov
stos
add
adc
push
xor
xchg
jmp
popf
add
lahf
aas
loopne
jne
mov
cli
push
shlb
repz
mov
and
std
mov
cmp
xchg
cmp
leave
arpl
pop
add
test
stos
mov
sub
sub
out
jb
xor
xor
sbbl
enter
push
xchg
xor
in
cmc
push
cmp
orb
xchg
dec
loop
add
add
jg
sti
nop
xor
testb
push
cmp
sbb
dec
push
fcmovb
je
bound
mov
push
add
fwait
xchg
pop
add
addr16
sbb
imul
add
and
js
pop
add
push
mov
adc
add
adc
nop
add
add
xlat
mov
sti
sahf
mov
fcomps
mov
fisttps
popf
sets
mov
rolb
xlat
fwait
push
and
mov
mov
mov
inc
clc
add
mov
push
add
testb
dec
add
sbb
cmpl
pop
sub
and
jg
pop
pop
jb
mov
loopne
push
lea
xchg
mov
cmpsl
and
sti
testb
mov
xchg
dec
or
jp
clc
rcl
aas
and
adc
xchg
adc
lahf
inc
pop
andl
add
jmp
add
clc
cmp
xor
cs
add
stos
mov
repnz
pop
fistl
add
sarl
sub
sbb
or
leave
popa
in
jmp
push
cmpl
ds
push
xchg
push
loope
adc
add
icebp
mov
ret
or
jmp
es
add
ret
add
ljmp
push
push
xchg
add
push
sarb
in
stc
adcb
pop
or
ds
add
clc
fiadds
int
ljmp
cmp
mov
fs
decl
push
pop
jecxz
pushl
jl
jmp
xor
not
loop
add
inc
xchg
and
mov
xor
inc
sub
loop
cs
adc
imul
lcall
add
jne
or
shlb
je
push
fcmovb
lock
or
bswap
fldl
rolb
lea
add
call
sub
pop
das
adc
add
sarb
sub
jp
push
dec
and
and
xorb
push
add
int3
in
add
push
aam
jne
mov
lea
mov
fiaddl
cs
jno
test
lret
popa
xchg
sarb
test
std
push
push
in
dec
bound
pusha
movsl
lcall
sbb
lea
add
xchg
negb
jo
mov
loope
imul
add
mov
lret
xor
mov
xchg
pop
lock
hlt
and
dec
inc
add
pop
dec
adc
mov
lock
add
mov
outsl
cs
xchg
daa
imull
dec
add
xchg
loopne
mov
sub
shlb
and
test
roll
cltd
shrl
ficoml
push
adc
xor
mov
repnz
jmp
icebp
add
cli
shlb
inc
sub
or
mov
mull
mov
add
mov
push
pop
shlb
mov
sbb
jmp
mull
xchg
pop
mov
push
push
clc
dec
in
and
inc
flds
add
shrb
or
add
push
rorl
or
xor
jecxz
leave
or
cmp
fwait
add
clc
and
mov
jl
iret
call
leave
push
out
aas
jp
add
subb
push
jb
bound
jmp
add
in
and
mov
pop
nop
js
or
dec
jp
add
movsl
sub
jecxz
aas
add
push
insl
stos
xchg
or
shll
cmp
and
nop
das
add
outsb
adc
pop
les
xor
aas
lret
mov
adc
add
adc
daa
xchg
xchg
sbb
mov
incb
add
call
notb
jbe
lret
add
xchg
pop
or
in
add
test
add
insb
iret
sbb
cmpb
jne
push
jns
fimuls
adc
popf
ljmp
mov
loopne
add
cmc
xchg
push
loop
sbb
mov
test
cmp
fadd
rolb
xor
movsl
and
or
aad
stos
fimull
xchg
notl
roll
xor
inc
testb
repz
in
pop
sar
lock
sbb
or
cs
xor
push
mov
add
scas
xlat
lods
mov
pushf
sub
mov
dec
stc
add
xor
stos
pop
mov
xchg
sub
adc
cmpsb
in
and
dec
sbb
sbb
rorb
dec
hlt
je
stos
negl
or
stc
add
adc
add
mov
and
mov
sbb
mov
mov
cld
xchg
mov
out
add
das
and
fadds
je
add
cmp
xlat
call
fildl
fsubp
add
lret
insl
mov
in
inc
aas
lds
dec
cmp
adc
jg
lret
mov
xchg
idiv
add
andl
out
adc
je
add
and
sub
pop
aas
add
dec
cmp
add
mov
and
jns
or
adc
hlt
xchg
sub
rolb
aam
enter
mov
push
pop
mov
les
dec
jnp
sbb
jns
idivb
mov
mov
sbb
push
add
add
pop
lods
fdiv
bswap
sahf
cmp
pop
sbbb
add
aad
pop
mov
enter
adc
lea
mov
mov
lds
mov
add
xchg
add
ret
inc
fmuls
xchg
xlat
lret
inc
imul
das
inc
push
and
add
jecxz
push
pop
rcrb
iret
add
fwait
inc
xchg
cmp
rcrl
lods
push
mov
dec
addb
push
cwtl
loop
shll
pop
movsl
mov
dec
nop
cmpsb
add
or
fs
xchg
pop
mov
add
cld
xor
push
out
pmullw
insb
add
addl
lock
mov
jl
jns
sub
jmp
and
pop
sub
add
sub
or
or
push
adc
addr16
andl
faddp
xrelease
add
popa
hlt
push
fisttps
clc
sarb
and
add
je
in
in
lcall
mov
test
add
jle
or
and
add
pop
dec
push
mov
rolb
call
jmp
xor
add
xchg
jecxz
and
add
and
add
test
sub
call
dec
xchg
push
cmp
lahf
dec
rclb
dec
cli
jnp
in
push
movzbl
enter
add
popa
inc
jo
push
sbb
add
rorl
rcrb
ljmp
je
es
push
or
jmp
jl
push
push
inc
add
jb
sub
xor
and
test
lea
sub
leave
nop
push
sub
add
or
clc
jne
or
add
jb
pushf
push
fdivs
call
cmp
add
inc
pop
je
mov
cmpsl
dec
lret
pop
fldl
add
add
and
cmp
push
jae
roll
dec
xchg
lldt
and
mov
xchg
add
jae
divb
shll
dec
cmp
push
std
int3
add
inc
fistpl
xchg
add
cmp
add
in
shlb
jns
addr16
add
xor
push
add
or
cwtl
xchg
jmp
sub
or
nop
adc
add
and
or
cmpsb
stos
xor
fisttpll
or
mov
test
add
mov
aam
fiadds
in
adc
test
seta
push
cltd
jecxz
pop
push
nop
add
jp
xor
or
jmp
pop
inc
jl
cli
mov
dec
in
and
cmp
hlt
mov
sub
out
mov
fcomps
push
icebp
pop
xchg
out
repz
scas
dec
inc
mov
adc
push
add
daa
ja
lcall
out
push
xchg
xchg
mov
es
enter
jmp
or
inc
sbb
movsl
jne
fwait
paddsb
sbbl
add
cmc
les
pop
or
addl
clc
pop
or
testb
adc
std
add
dec
hlt
mov
mov
ret
pusha
xor
jge
sub
jae
test
pop
and
in
cmc
sub
xor
add
ja
push
inc
ret
je
cmp
pusha
aas
jns
add
jg
cmpsb
loope
aad
clc
lods
add
lret
mov
and
cmp
or
pop
call
lahf
push
mov
push
jl
into
add
sbb
inc
add
add
or
jp
ret
loopne
imul
fwait
lret
ds
out
ss
or
outsl
iret
pop
push
adc
adcl
xorl
inc
adc
push
dec
inc
dec
and
inc
or
lods
sbb
aas
ret
testb
cmpsl
clc
jo
dec
movsl
sbb
xor
sbb
fistps
dec
jmp
mov
je
xor
pop
xchg
addr16
and
push
add
adcl
in
add
scas
rcr
push
ljmp
inc
push
add
insl
shld
leave
loop
mov
repnz
cmp
fdivrs
les
nop
mov
sbb
sub
mov
inc
mov
test
lea
jecxz
loopne
int
imulb
in
in
leave
inc
mov
cwtl
pushf
add
push
push
lahf
roll
cmpb
sbb
ljmp
sub
dec
or
dec
cmp
add
sbb
stc
ljmp
shll
xor
cwtl
pop
fisubrs
pushf
push
jle
cmp
loop
das
into
nop
test
push
mov
cltd
or
pop
add
push
push
add
push
addb
lret
incb
pop
push
js
dec
xor
enter
sbb
pop
fistl
push
push
incl
fdivrl
shlb
lahf
bound
popf
and
mov
addl
inc
push
xchg
inc
mov
add
dec
jmp
fs
cmp
stos
aaa
cmpsl
xchg
push
test
adc
leave
subb
inc
push
add
sub
lret
test
add
aam
out
mov
int
add
mov
add
jb
or
in
andb
add
dec
push
add
lcall
leave
ret
sub
add
ret
add
dec
and
dec
jge
mov
mov
push
or
mov
rclb
jecxz
mov
xor
dec
pushl
add
je
inc
leave
cld
push
pushl
xchg
dec
jne
mov
dec
cmpsb
inc
push
push
dec
push
jno
push
loope
jmp
mov
pop
sub
dec
or
jne
jmp
xor
cmpsl
pop
inc
sub
dec
xchg
rcl
loopne
dec
jno
add
sub
add
push
imul
add
push
lock
add
or
pusha
lret
or
push
aas
push
add
xchg
inc
add
adc
adc
shlb
stos
mov
movsb
cmpsb
and
jmp
or
push
clc
imul
push
fsubl
xchg
adc
outsl
jno
add
dec
xchg
mov
cmp
inc
jmp
aas
loopne
mov
dec
iret
loop
pop
loopne
or
sbb
cmp
inc
mov
pop
call
jae
pop
dec
call
push
or
add
in
add
lahf
call
mov
dec
cli
divl
add
or
or
ret
and
dec
or
test
std
mul
add
add
dec
sbb
jecxz
adc
push
jmp
add
inc
icebp
push
push
and
push
xchg
add
jbe
or
mov
mov
and
iret
dec
or
add
and
adc
pusha
push
les
repz
push
bound
add
or
stos
mov
adc
cmp
leave
xor
add
daa
fs
fsubs
rcll
in
mov
ret
xchg
push
add
inc
aad
icebp
mov
adc
or
pop
or
jnp
add
mov
lcall
add
mov
or
faddl
xchg
int3
cli
test
mov
and
leave
mov
gs
stos
add
jbe
test
add
sub
xor
add
int
in
sbb
mov
in
cmpb
pop
orl
leave
add
jne
pop
jle
add
xor
push
movl
inc
mov
xorl
dec
xorps
and
adc
jmp
pop
mov
mov
add
and
push
xchg
sub
add
jae
ja
add
jecxz
mov
jl
add
or
bound
inc
mov
in
loope
mov
pop
add
jae
push
ds
dec
jle
mov
stos
add
pop
imul
cld
test
cmp
je
mov
in
pop
ja
lods
add
sub
mov
cmc
loop
xchg
gs
dec
cmp
je
pop
push
or
cwtl
dec
add
xchg
add
push
sbbb
sub
ss
add
pop
jno
lret
add
dec
in
sbb
leave
inc
insb
shl
mov
xchg
js
push
imul
vmovapd
xchg
dec
add
sub
inc
bound
sbb
cmpl
add
xchg
add
mov
add
out
mov
push
xorb
orb
fistpl
push
data16
and
cmc
add
roll
outsb
call
fcoml
inc
jg
in
dec
ljmp
loopne
push
dec
into
es
jns
loopne
inc
enter
loopne
add
shr
and
push
int
mov
not
and
or
cmp
push
unpcklps
sub
dec
arpl
cmp
xor
cwtl
mov
data16
icebp
hlt
loope
jo
add
pop
insb
and
not
js
in
jae
bound
sbb
pop
inc
cmp
xchg
add
sbb
stos
inc
lahf
inc
or
arpl
fildll
push
xchg
scas
call
cmp
pop
xchg
or
jmp
add
imul
push
int
mov
jno
add
xchg
test
mov
add
imul
lcall
inc
arpl
adc
dec
add
jno
das
fidivl
pop
mov
jo
call
sbb
xchg
jne
adc
sbb
pop
incl
jmp
lods
cmpsl
jl
xchg
inc
xchg
nop
cmp
int
and
jmp
mov
mov
inc
popf
jmp
cld
sub
xor
lcall
data16
add
fldenv
ds
xor
scas
adc
cs
cmpsl
jmp
add
leave
mov
and
pop
add
js
rolb
xchg
aas
lret
mov
add
fsubrs
inc
xor
xchg
add
mov
dec
sbb
stos
aad
sub
dec
mov
rcrb
hlt
sub
jbe
clc
or
and
or
bound
in
not
xchg
aas
add
scas
pop
jecxz
and
and
and
fs
inc
rorl
jle
mov
enter
jns
rorb
cld
cmpsl
add
dec
test
mov
xchg
cmp
or
outsb
push
in
sbb
cmp
jmp
xchg
imul
or
add
add
loopne
adc
dec
or
and
add
push
sub
sub
push
pop
mov
push
mov
jp
add
pop
enter
cmpsl
data16
mov
or
mov
and
mov
lock
pop
jno
imul
adc
std
daa
mov
sbb
and
test
dec
add
aad
lock
inc
ljmp
push
xchg
push
lea
inc
mov
pop
add
insl
or
loopne
and
sbb
inc
add
pop
push
lods
adc
add
dec
add
sbb
popf
xchg
je
inc
xchg
add
jb
sarb
das
xor
loopne
call
push
negl
xchg
int3
imul
je
add
dec
cld
mov
in
push
mov
divl
jecxz
add
aam
inc
sbbl
enter
adc
cmc
inc
outsb
pop
in
jle
add
mov
iret
testl
add
stos
adc
cmp
mov
rolb
dec
inc
sahf
cmp
pop
cmp
add
inc
mov
push
cmp
mov
pop
adc
test
mov
shll
add
lock
add
sbb
dec
adc
add
sbb
xchg
sbb
icebp
and
je
jl
sbb
lcall
rol
aam
or
mov
call
xchg
lock
xor
inc
inc
push
add
fnstenv
push
sub
bound
fiaddl
mov
sub
push
jl
cmp
mov
int3
shlb
out
mov
or
cmpsl
push
mov
notl
xor
ja
mov
in
incl
sbbb
dec
dec
mov
in
xor
fmull
pop
insb
or
pop
sarb
cwtl
ficompl
cmp
shlb
insl
in
and
aas
xor
sub
lcall
pop
andb
setne
and
fadd
cmp
lods
add
cmpb
negb
jae
add
movl
add
and
loopne
xchg
mov
mov
adc
call
add
fldl2t
fs
in
mov
pop
fiaddl
ja
sub
ficomps
mov
mov
lahf
xlat
jnp
fisubrl
je
inc
lret
add
pop
movsl
outsl
jo
xchg
ja
subb
xchg
fiaddl
or
in
sbbb
bound
sub
je
push
imul
add
cld
push
shr
out
add
imul
jbe
push
push
daa
div
loope
das
or
mov
jmp
popa
cmp
jmp
add
jb
add
pop
mov
add
or
mov
je
repnz
lods
aas
and
sbb
push
jg
mov
xlat
push
ds
xchg
and
dec
xor
jmp
push
lock
adc
lret
jnp
daa
add
push
dec
sahf
add
add
mov
lret
add
dec
loopne
jmp
pop
testb
andb
and
or
incl
or
and
insl
cmc
add
adc
add
aam
or
mov
mov
pop
mov
lods
inc
hlt
add
jmp
cmp
add
sub
push
daa
addr16
movsl
jl
loopne
call
orb
out
mov
pusha
pop
xchg
gs
add
or
add
cld
subb
add
push
adc
and
and
pop
out
add
sbb
xor
addl
and
pop
sub
inc
test
inc
add
and
loope
shll
int
fimull
shrb
pop
shrl
push
push
in
gs
scas
int
xchg
mov
inc
cs
pop
jle
sahf
rorb
push
pop
and
sarb
add
mov
jl
pop
dec
cmpsb
inc
in
mov
add
pop
mull
ror
push
aaa
neg
je
nop
or
lahf
mov
or
mulb
sbb
out
test
jmp
add
sub
cmpsb
data16
sbb
or
push
add
xchg
dec
ljmp
das
and
or
in
and
sbb
decl
jmp
xor
pop
shr
cli
inc
es
add
ret
push
inc
sbb
mov
lods
jl
add
shrb
adc
adc
adc
pop
jmp
testl
pushl
adc
ss
call
jno
dec
pop
das
test
sub
and
or
sarb
shlb
mov
popf
cmp
dec
je
scas
jmp
add
jl
mov
jge
shlb
sbbl
sub
dec
jmp
cmpsb
aam
mov
jl
add
out
and
and
add
fisttpl
add
loope
popf
dec
mov
add
lret
dec
add
shrb
sbb
xchg
add
add
and
and
sbb
test
adc
sbb
sahf
mov
ja
add
jmp
push
jl
add
adc
xor
add
sub
leave
fs
in
in
stc
pop
mov
jns
gs
scas
add
adc
and
mov
and
sarl
add
push
mov
add
fildll
out
ret
or
add
xchg
notb
pop
jecxz
add
inc
sub
mov
push
add
dec
outsl
xchg
jge
mov
cltd
cmpsl
shl
clc
push
cmp
xlat
add
mov
outsb
jb
inc
or
adc
mov
inc
nop
add
ljmp
outsb
add
test
push
mov
stos
jbe
pop
sbb
sub
cmp
add
sbb
mov
adc
out
xor
add
and
lea
sub
loopne
stos
cmp
or
shll
mov
clc
lds
xor
leave
das
cmp
add
test
dec
jns
call
repnz
mov
clc
xchg
je
push
mov
jo
lock
mov
add
je
addl
int
and
push
add
push
lds
andb
cli
jno
and
xchg
adc
lods
stos
scas
add
aam
add
call
pop
xor
xor
test
dec
mov
inc
add
push
pop
xor
and
out
mov
in
movsb
add
jl
mov
pop
sgdtl
cmp
sbb
add
mov
sbb
xchg
inc
loopne
cmpsb
xor
scas
mov
popa
icebp
inc
jp
cld
xchg
stc
fdivrs
pop
comiss
add
mov
sbb
imul
or
pop
pop
inc
or
sbb
push
sub
sbb
ljmp
cli
pop
mov
sub
lods
push
push
and
or
add
out
imul
push
mov
jbe
push
ds
orb
hlt
add
out
push
push
shrb
dec
mov
sbb
leave
xor
xor
xchg
push
mov
add
cld
in
adc
adc
mov
out
inc
dec
and
daa
xchg
dec
mov
mov
test
test
pushf
mov
mov
push
jp
xor
mov
jns
add
jg
xchg
dec
adcl
negb
jo
or
aam
loop
shll
jecxz
setns
enter
out
int3
rclb
adc
pop
leave
and
iret
jecxz
out
std
loopne
shrb
adc
xchg
adc
je
adc
dec
aam
adc
mov
stos
ret
stos
cmp
xchg
lods
out
scas
jo
jecxz
mov
adc
jae
sbb
sbb
data16
bound
add
shlb
add
xor
xchg
push
lret
xchg
lret
testl
mov
es
ret
jg
and
shlb
xchg
add
loop
jl
rolb
add
call
cmp
pusha
popf
mov
shlb
pop
pop
jmp
cmp
aas
cmp
push
shll
repz
add
lret
and
arpl
push
andb
or
add
sarb
dec
inc
cld
jb
add
dec
mov
cld
xor
jo
scas
sub
adc
gs
popa
ret
add
pop
sub
add
mov
add
mov
lods
add
jno
mov
jne
hlt
add
lds
push
add
aas
or
rolb
or
movl
in
push
test
add
xchg
adc
xchg
mov
sub
add
data16
clc
dec
mov
jnp
mov
stos
nop
cli
add
jle
or
xor
jge
insb
addl
lcall
inc
dec
call
dec
xchg
ret
add
cwtl
pop
jne
rclb
add
jae
bound
cmp
add
std
cmp
add
pop
pop
lods
mov
add
test
imulb
adc
adc
pop
push
and
mov
inc
flds
dec
adc
push
or
inc
or
cs
call
mov
les
add
jmp
mov
adc
mov
sti
add
enter
add
or
or
cmp
leave
push
push
inc
inc
fnstenv
test
daa
mov
push
inc
adc
movsl
jmp
stc
add
xor
or
push
xchg
add
test
sub
rorl
out
and
and
sub
add
incb
xor
sbb
or
xchg
jbe
or
fldln2
inc
add
ja
loopne
and
pop
out
cmpsb
in
pop
rclb
push
push
in
cmc
sub
adc
sbb
adc
cmp
pusha
orb
addb
add
xor
add
or
dec
jne
add
or
xor
test
call
cmpb
das
xchg
lock
cltd
cld
popa
cmp
hlt
jecxz
imul
add
pop
aad
pusha
outsb
add
cmpl
ljmp
rolb
mov
aas
int3
bnd
add
dec
jne
cmp
push
push
inc
les
add
test
add
jo
pop
fstpt
in
sbb
dec
or
add
mov
jns
adc
inc
dec
jne
fsub
ljmp
push
icebp
cmc
jnp
aad
in
or
ja
add
xchg
add
scas
mov
pop
sbb
add
add
push
add
cmp
rol
add
xor
str
adc
mov
sub
js
xchg
lret
fmull
lret
push
push
ret
or
fcmovnbe
or
add
cmc
sbb
loope
push
pop
cmpb
inc
std
add
xor
ret
add
lahf
jno
push
mov
pop
das
xlat
movsl
xchg
mov
and
jne
das
mov
and
gs
xchg
test
loop
fcoml
cmp
popf
movsl
cmp
rorb
push
inc
mov
sbb
adc
jmp
sub
imul
das
sbb
cmc
sub
inc
loopne
add
mov
adc
jle
add
sbb
cmp
lods
test
or
push
adc
xor
cmp
inc
xchg
ljmp
int3
jmp
fildl
inc
clc
loop
add
jno
or
add
sub
addb
mov
sbb
pop
decl
xlat
ret
data16
xchg
push
rclb
adc
adc
filds
and
mulb
cmp
bound
lock
sahf
add
fcoms
cltd
cmp
and
pop
lock
push
nop
add
mov
mov
push
outsl
add
jg
xchg
rorb
or
inc
or
sbb
pop
lock
stc
mov
je
sbb
shlb
jp
lea
jecxz
push
jnp
test
mov
sbb
je
sbb
lea
pop
inc
add
xor
stc
out
hlt
push
jne
push
jnp
add
add
pop
lods
jmp
aam
and
test
mov
xor
push
and
rol
enter
nop
mov
cld
outsb
add
sbbl
dec
inc
xchg
add
jge
cmp
stc
cwtl
or
push
aaa
or
insb
cmpsb
pop
sti
loopne
popa
push
add
sub
pusha
adc
jnp
ja
xchg
aaa
nop
js
jo
jmp
push
in
rclb
sub
test
pop
adc
stos
les
or
pusha
pusha
out
nop
and
and
js
cld
test
loopne
pusha
mov
or
adc
test
out
adc
or
fneni(8087
ds
fs
or
lret
arpl
lock
jo
bound
or
or
pop
lock
adc
clc
inc
pop
jnp
js
aad
adc
sbb
cmp
or
add
jg
xchg
pop
mov
xchg
and
hlt
aas
mov
ljmp
mov
nop
add
push
mov
decb
std
add
mov
hlt
fwait
cmp
movsb
mov
mul
lahf
shrl
jmp
int3
push
sbb
add
ds
mov
loopne
sbb
rorb
les
scas
push
jp
add
mov
in
aas
stc
push
sub
cmpsl
and
and
add
mov
pop
sbb
add
in
lahf
push
sbb
mov
lods
mov
inc
jmp
mov
mov
cmp
and
ljmp
lods
add
imul
adc
out
in
andb
cltd
adc
mov
mov
mov
mov
mov
mov
fisttps
cli
dec
je
xchg
push
test
cs
loope
sahf
xchg
ljmp
data16
push
mov
mov
les
jl
inc
shrb
idivl
xchg
ret
insb
iret
cmp
lahf
pusha
xor
adc
cmpsl
sub
mov
push
xchg
repnz
sbb
out
ret
bound
add
shr
cmp
incb
out
sbb
jecxz
dec
cmc
incl
cmp
mov
out
mov
jo
jmp
adc
inc
cli
mov
adc
ljmp
aam
add
inc
inc
inc
pop
adc
mov
mov
daa
mov
add
pop
negb
mov
lock
adc
add
and
loope
dec
rclb
inc
sub
and
nop
out
into
in
or
daa
jl
inc
mov
sub
add
add
movzbl
clc
shll
lret
or
sar
and
les
add
inc
xchg
dec
ret
pusha
xchg
pop
ljmp
or
je
xchg
xor
or
repz
push
movsl
jb
inc
push
ja
dec
ret
cmp
cld
cmp
cmp
xchg
mov
lods
fldl
mov
scas
out
loope
mov
inc
mul
movups
inc
in
inc
inc
sub
sub
lahf
add
std
push
adc
xchg
add
jmp
add
ret
in
pop
sub
sbb
pop
pop
mov
jo
and
into
inc
xorb
sbb
js
inc
ljmp
xlat
jo
inc
add
inc
mov
jge
lea
ds
jne
repz
or
clc
adcb
jge
add
stc
dec
push
iret
xor
in
fcoml
movsb
iret
js
add
ja,pt
add
pop
cmpsl
add
jecxz
test
out
fisttpl
sbb
and
icebp
mov
sbb
pop
and
cltd
or
out
pop
cli
icebp
test
lret
sbb
arpl
in
test
insb
aas
inc
icebp
mov
add
lock
add
test
sti
add
push
orb
loope
shl
movl
push
daa
jle
add
adc
adc
rorl
inc
pop
xor
sbb
jg
xchg
and
jo
sbb
xorl
rdmsr
push
jmp
sub
rcl
push
ret
pop
sub
loope
adc
and
or
daa
aaa
test
aam
dec
aaa
and
or
pop
pop
jbe
sub
aas
sbb
sub
sbb
lock
add
xchg
mov
lea
and
repz
adc
testb
mov
mov
xor
mov
xchg
and
inc
hlt
add
sbb
mov
adc
and
add
xchg
dec
and
arpl
add
fsub
push
mov
addb
or
setno
imul
inc
jg
lahf
icebp
mov
out
fmull
dec
mov
inc
fistl
cmp
sbb
push
test
loopne
inc
adc
nop
call
cli
and
and
pop
or
lock
add
cmp
cmp
add
sbb
sbb
sbb
das
inc
push
dec
jp
mov
repz
shlb
pop
pop
push
push
xorb
or
insl
and
add
inc
movsl
insb
sub
repnz
pop
loop
sub
jnp
lcall
imul
outsl
pop
cmpsl
mov
pop
sub
test
sbbb
add
aam
mov
sbb
mov
fists
lret
dec
push
test
and
adc
sub
lea
xchg
les
cmpl
push
js
pandn
dec
cld
loopne
jecxz
push
or
push
pop
sbb
sbb
and
push
std
add
das
loope
je
cmp
fldl
and
mov
test
jl
xchg
icebp
push
mov
fisubs
pop
add
repz
repz
dec
fdivrs
sbb
scas
cmp
in
or
add
cmp
cmpsl
pop
jb
cwtl
inc
sbb
mov
sub
and
shll
xchg
pop
mov
jecxz
loopne
es
pop
outsb
out
lret
pop
test
xchg
ds
jp
popf
test
test
xorl
jae
mov
gs
testb
and
xchg
cli
rolb
xor
mov
adcb
and
dec
int
dec
mov
push
cmpl
inc
add
inc
cmc
xor
rclb
xor
pop
cmp
jmp
inc
andnps
cmp
and
adc
push
in
es
movsb
stc
sbb
loope
lds
adcb
add
xor
roll
mov
xorb
adc
nop
clc
mov
xor
xchg
adc
testl
xchg
repz
fisubs
or
mov
insb
sub
subb
lds
popf
icebp
in
inc
sub
mov
mov
sbb
fsubs
scas
inc
rolb
jae
lock
cmc
or
out
xchg
clc
xchg
dec
addr16
adc
cmp
cmpsl
out
out
loopne
adc
je
mov
xchg
loopne
adc
add
ficompl
es
sub
filds
clc
pop
test
add
mov
cmp
pop
shl
dec
sti
dec
mov
dec
idivl
mov
lahf
add
and
iret
lret
sub
cmp
adc
ret
and
jge
dec
stc
out
adc
add
push
adc
out
nop
add
shrl
cmp
and
test
push
icebp
shlb
add
sub
ljmp
and
push
jnp
cmpsl
cmp
mov
fldcw
mov
daa
mov
dec
loope
inc
add
mov
mov
sysret
das
or
dec
add
addb
bound
imul
fidivl
sbb
inc
add
adcb
in
mov
mov
mov
mov
sub
add
and
mov
pop
test
xor
aaa
push
pop
inc
or
aad
in
mov
jle
xchg
add
adc
repz
jg
mov
je
pop
xorb
daa
mov
and
addr16
xor
leave
push
adc
xchg
mov
and
int3
pop
xor
int
stos
shlb
jge
xor
clc
mov
mov
mov
push
adc
repnz
inc
leave
popa
cmp
or
inc
ljmp
lahf
add
dec
pop
ret
mov
and
cltd
rcll
lods
bound
icebp
call
cli
shr
cmc
push
sbb
imul
rolb
mov
into
mov
movsbl
das
lods
xor
fsubrs
test
or
adc
push
jno
mov
fdivrl
and
dec
dec
jmp
mov
lock
cmpsl
pop
xchg
jg
push
or
xchg
hlt
sbb
and
pusha
adc
jg
pop
lea
mov
out
shr
loope
out
and
scas
ret
push
add
mov
pop
inc
nop
and
testb
inc
imul
mov
sbb
or
test
sub
xchg
and
mov
mov
popf
orl
sbb
add
repz
incl
lods
pop
mov
or
or
xor
inc
in
dec
cmp
add
ret
ret
js
lds
push
xchg
or
jnp
jno
or
loope
add
jp
mov
pop
pop
and
or
aaa
or
cmp
adc
adcl
inc
jns
and
and
xor
out
iret
test
or
insb
sub
imulb
lock
lcall
xchg
or
andb
inc
adc
push
mov
adc
aaa
sti
xor
test
enter
sbb
or
jle
push
inc
adc
mov
std
add
cmp
add
aam
add
xchg
hlt
adc
and
add
cmp
pop
aas
xchg
insb
cmpb
push
xchg
aam
or
clc
jg
jp
add
adc
arpl
ltr
add
mov
icebp
loope
or
and
stos
xchg
ret
mov
jge
xchg
add
mov
dec
adc
sbb
fistl
add
lcall
fdivs
pop
push
sti
push
pop
andl
iret
outsl
and
mov
jmp
ds
add
out
add
pop
jno
inc
inc
dec
out
adc
mov
pop
btl
push
add
shlb
fs
in
out
into
roll
lea
adc
test
idivb
jbe
lcall
lods
test
pop
or
dec
sbb
fiadds
lahf
lret
or
dec
cmp
cmpsl
jle
lock
sub
jmp
sbb
and
test
nop
or
sub
stos
jmp
mov
mov
sub
ds
psllq
roll
mov
pop
sub
les
xchg
js
enter
add
cmpb
mov
mov
or
sub
das
push
cmpb
inc
inc
lea
jp
es
hlt
movsl
lods
and
subb
or
lock
add
lahf
ds
inc
mov
inc
dec
inc
adc
mov
pop
or
or
ja
push
push
cmpb
xor
push
and
mov
cmpsb
push
mov
ltr
lret
pushf
pop
outsl
mov
imul
cmpsb
cmp
adc
push
cmp
dec
out
add
in
rorb
jmp
int3
hlt
out
pusha
inc
in
add
xor
add
add
xor
ret
mov
sub
sbb
xor
mov
cs
aam
roll
outsb
pop
daa
mov
cmp
fs
out
aas
cmp
adc
add
div
rolb
push
or
inc
sbb
sbb
lea
fcomi
add
cmp
dec
add
ja
mov
push
pop
rcr
mov
fsub
arpl
add
idivb
add
test
sbb
stos
das
adc
fistps
pop
clc
movb
mov
add
xchg
mov
dec
add
xchg
push
sub
inc
xchg
sbb
cmpl
push
sub
inc
fs
xor
pop
add
inc
cmp
shl
movsb
adc
mov
repnz
or
test
pop
add
loope
xchg
inc
call
out
jecxz
hlt
sti
mov
dec
cmp
sub
ss
jecxz
pushf
rolb
lock
push
lahf
sub
xor
mov
inc
in
or
jge
out
xor
jg
add
sbb
xor
cmpsl
mov
add
add
test
out
add
inc
and
cli
leave
mov
add
or
clc
add
cmp
xor
jnp
push
pop
lock
xchg
add
dec
cmp
aas
daa
mov
add
lea
cmp
xor
scas
hlt
pop
ret
popf
and
popa
add
sahf
loope
mov
push
je
mov
mov
add
sbb
lahf
add
jnp
sbb
mov
sub
cmpl
test
inc
add
adc
add
ljmp
or
add
out
loopne
arpl
lea
xchg
adc
imul
call
cmp
je
push
lea
xor
roll
xor
jnp
push
add
hlt
and
pop
shr
add
dec
add
pop
ja
pop
in
add
lods
call
js
lahf
jle
repz
add
xlat
add
mov
enter
pushf
std
inc
mov
jns
pop
sarl
mov
mov
rolb
out
push
enter
ret
into
pusha
or
cmp
sub
daa
sti
jg
inc
std
adc
mov
push
rolb
add
sbb
int
subb
pop
xchg
sub
pop
test
test
xor
aad
pop
daa
dec
aaa
add
cmp
cmp
pop
sbbl
add
mov
sub
lock
rorb
add
imul
push
and
fdivrs
cwtl
scas
and
or
shll
pop
fnop
push
xchg
cli
lret
pop
in
add
push
cmpb
or
jae
add
inc
lcall
xor
mov
je
push
in
rcrb
out
fsubrp
or
ds
pushf
xchg
ret
jnp
or
js
cmp
add
insb
add
test
sbb
add
jg
mov
int3
add
pop
inc
adc
out
lahf
add
rcr
mov
ret
inc
jne
cmpsb
or
add
bound
push
xchg
cmp
sbb
mov
xlat
add
mov
test
repnz
add
cltd
aad
fidivs
inc
pop
jecxz
add
cwtl
xor
fdiv
inc
add
je
sub
mov
sti
iret
dec
push
and
clc
fiaddl
stc
jbe
xchg
imul
lods
add
pop
mov
cmpsb
out
inc
mov
leave
xor
test
stc
add
or
mov
movsb
adc
add
add
loop
rolb
pop
jo
xor
ja
push
in
push
ss
fists
lahf
fiadds
les
fdivrs
subl
loopne
push
inc
add
std
and
mov
inc
pop
dec
sbb
loopne
scas
inc
add
pop
aam
inc
inc
sbb
cmpl
jg
rorl
inc
add
fs
add
push
xlat
dec
pop
xchg
pop
adcb
jo
cs
je
push
jbe
mov
xchg
add
mov
mov
inc
and
cli
inc
aam
or
and
or
add
and
add
inc
or
stos
push
aas
inc
cmp
adc
sbb
cmp
cmc
sub
pop
shlb
mov
jp,pt
mov
clc
mov
and
inc
cmp
loop
cli
imull
enter
pop
sub
out
lcall
in
push
call
inc
mov
push
sbb
xor
fsubs
mov
cmova
xor
fs
cmp
xchg
nop
cld
cwtl
push
lcall
inc
add
pop
sub
cmc
pop
sbb
sbb
stos
mov
iret
xorb
dec
test
sub
pop
shrb
xlat
and
clc
mov
pop
xor
ret
fnstsw
nop
js
add
mov
rolb
std
icebp
add
in
js
idiv
sbb
test
sub
jns
push
mov
inc
lods
mov
pop
cli
mov
push
push
orb
xchg
and
add
sub
cld
rolb
add
mov
jne
mov
add
jns
mov
add
int
in
hlt
inc
imul
inc
cmp
add
pop
or
mov
ja
push
loop
movsl
pop
inc
mov
add
sbb
adcb
jp
das
stos
insl
sbb
scas
push
sub
add
jmp
pusha
mov
sbb
add
add
xchg
pop
lds
adc
popf
cmc
add
leave
stc
jl
cmp
xchg
mov
mov
rolb
mov
jae
mov
add
push
add
add
ret
ja
xchg
aas
nop
iret
lahf
add
xor
sub
jmp
outsb
test
xchg
xor
add
push
add
popa
jb
push
movsb
jp
clc
clc
pop
push
and
ret
out
ja
push
test
leave
jne
sub
dec
repz
add
fwait
cmp
aam
cld
pop
cli
adc
pop
movsb
push
mov
push
mov
dec
popa
mov
add
iret
or
adc
and
add
daa
dec
cmp
mov
pusha
loop
adc
pop
and
push
add
dec
add
or
vminps
cmp
dec
rcrb
or
ss
movsl
das
xor
add
lock
pop
adc
or
call
or
inc
fwait
test
sbb
xchg
add
aad
push
jle
add
dec
aaa
inc
sbb
mov
cmc
pusha
add
push
into
push
sti
lret
test
adc
sbb
xchg
mov
xchg
jo
fdivl
rorb
idiv
in
test
mov
jae
xor
mov
and
push
dec
pop
xchg
push
and
sti
test
pop
and
imul
add
or
setb
dec
cmc
enter
mov
push
inc
nop
pop
or
hlt
icebp
call
inc
aas
or
pop
test
repnz
push
lret
clc
and
add
push
mov
adc
xlat
loopne
push
hlt
adc
pop
add
xchg
repz
mov
mov
mov
incl
mov
xchg
sub
sub
add
push
bound
cmpsl
xor
pop
mov
jge
push
add
mull
or
add
mov
cmp
dec
scas
fbld
js
inc
inc
cmp
xchg
sbbb
xor
leave
hlt
dec
jle
add
loope
fstl
jmp
les
cmp
sub
add
cli
fsub
jbe
add
loop
add
jb
pusha
cmp
push
push
call
push
xchg
pop
add
add
add
iret
insb
rcl
pusha
loopne
out
add
xor
or
lcall
push
pop
mov
dec
jns
in
imul
sbb
je
add
lock
lret
sbb
cli
lret
or
cmp
cwtl
sbb
leave
add
dec
hlt
add
fwait
loop
cmp
jae
in
mov
addb
imull
inc
pop
pop
out
add
int3
aas
in
and
jne
or
cmpsl
lret
jbe
lods
mov
jo
dec
add
add
mov
sub
push
call
mov
mov
add
sahf
add
clc
sub
add
dec
jle
pop
jmp
sbb
out
rol
sahf
lock
add
int3
inc
add
call
add
push
int
push
mov
cmpl
ret
adcb
add
add
push
mov
adc
mov
rolb
dec
or
nop
add
sbb
sub
jge
adc
cmp
sbb
or
into
dec
sti
add
imul
xlat
hlt
and
mov
mov
xor
jns
and
out
add
aam
add
dec
frstor
cld
rorb
mov
xchg
dec
sbb
iret
mov
int3
xchg
add
aad
stos
cwtl
fists
movsb
cmc
aam
sub
mov
add
clc
mov
stos
pop
add
aaa
xor
and
sub
push
out
xchg
add
pop
xor
pop
pop
adc
add
sub
pusha
clc
fdivr
mov
shll
dec
push
dec
ret
dec
inc
jne
add
out
rolb
movsl
test
imull
fldenv
insl
add
mov
loopne
lcall
clc
sbb
testb
fistps
dec
or
fiadds
xchg
push
push
call
pushl
pusha
inc
add
jg
and
fmuls
adc
cltd
or
or
add
inc
and
sub
add
sbb
add
xor
iret
add
lds
cwtl
scas
add
sub
sbb
sub
cld
add
hlt
or
fwait
lea
inc
add
pop
dec
push
push
cmp
or
adc
insb
stos
das
adc
nop
ljmp
pushf
mov
shrl
add
push
lcall
sub
push
mov
and
inc
push
sbb
adc
or
jne
xchg
jno
cmp
add
sbb
pop
adc
and
cmpsb
add
subl
stc
mov
sub
and
mov
test
outsl
mov
xchg
punpckhwd
add
adcb
repz
adc
cmpb
je
and
dec
clc
add
cs
push
xchg
adc
repz
add
popf
push
jge
push
jge
push
faddl
jne
xor
add
sbb
outsl
add
imul
add
xchg
stos
loopne
in
or
sbb
pop
mov
shr
neg
add
lods
dec
push
adc
pop
push
out
aad
push
xlat
jns
or
lock
sub
dec
jne
addr16
lret
cmpsb
xor
sub
dec
dec
inc
adc
imul
in
dec
call
sub
pop
adc
sbb
add
lret
ret
pop
sub
add
jmp
inc
push
outsl
dec
jne
add
cltd
sbb
mov
cld
cmpb
int3
test
call
push
xor
aad
jge
add
fstpt
jb
add
les
clc
jno
call
rorl
add
addl
jne
pop
jge
add
push
js
cmpb
mov
ret
ret
les
int3
push
push
push
fdivl
aam
movsb
push
sarb
inc
add
xchg
jp
add
cli
sbb
sub
inc
sub
leave
les
add
call
mov
aad
clc
test
add
cmpl
jne
cmpsl
mov
dec
inc
inc
pop
pusha
rol
pop
add
cmp
add
adc
stc
adc
addr16
pusha
loopne
cli
je
add
add
fiaddl
movsb
and
sarl
repnz
add
cwtl
xor
inc
xor
xor
push
cmp
xorb
stos
or
add
les
add
add
or
cli
enter
inc
xlat
nop
scas
mov
stc
dec
pop
clc
inc
jns
add
cmpb
jl
add
mov
addr16
xchg
add
repnz
jb
jbe
xchg
mov
push
popf
push
data16
cs
repnz
and
pop
call
mov
lea
leave
jno
add
arpl
jecxz
cli
js
add
cltd
cmp
push
pop
push
inc
add
lock
imul
mov
test
out
push
inc
dec
inc
icebp
scas
adc
pop
std
lcall
faddl
loopne
and
iret
bound
cmpl
mov
lcall
adc
fsubrs
or
ret
xchg
sub
test
or
dec
das
dec
lret
aaa
ja
in
xchg
inc
and
sub
or
add
add
or
mov
add
add
pop
cmp
add
sahf
jecxz
fmuls
jg
loopne
jmp
leave
xchg
dec
add
cmp
xchg
loopne
stos
aam
add
aad
fsubs
add
dec
push
cmpsl
out
inc
call
dec
fildl
sbbb
push
daa
pop
fdivr
dec
add
lahf
push
punpckhdq
inc
test
in
pop
inc
ja
sarb
pop
cld
gs
push
pop
mov
js
cltd
inc
mov
add
loope
xor
fsubl
ss
mov
pop
cmp
add
add
popf
rorl
add
movsl
and
mov
add
cvttps2pi
int3
mov
and
add
stos
sbb
sarl
push
cld
jbe
mov
ret
les
in
add
div
or
add
mov
jecxz
leave
loopne
aad
add
shrl
orb
add
cmc
fldl2e
xchg
jb
xchg
add
inc
push
into
rcrb
mov
das
jecxz
clc
add
jle
test
dec
ret
add
xchg
xor
add
icebp
aaa
lahf
add
sub
jns
and
xorb
inc
push
sub
addl
push
pop
pop
call
xchg
sbb
pusha
add
dec
add
mov
in
sub
cld
cli
lahf
push
pop
mov
xor
arpl
sbb
rolb
jg
imul
imul
add
xchg
cmc
je
sub
icebp
es
xchg
adc
cmp
add
cmpb
xorl
mov
add
test
jne
pop
clc
adc
jb
mov
xor
mov
jne
mov
sahf
incl
and
mov
or
pushf
inc
xchg
stc
adc
push
adc
sbb
arpl
add
push
pop
add
movsb
push
hlt
std
add
icebp
test
dec
dec
add
clc
sub
movsb
cmp
push
xchg
add
cltd
add
mov
aam
test
pop
in
in
adc
enter
or
pop
cld
xchg
cli
push
add
in
adc
mov
push
loopne
add
test
jmp
ds
and
repz
add
pop
fcomps
pop
dec
add
add
mov
ja
add
ds
lds
ljmp
gs
scas
mov
dec
sbb
fcoms
add
xor
bound
shl
xor
dec
movsl
dec
pop
cwtl
dec
mov
lret
mov
jmp
inc
xor
or
adcb
sahf
mov
js
cltd
pop
mov
repz
jmp
fwait
iret
rolb
add
sub
das
or
std
sbb
sub
xchg
out
dec
in
add
pusha
arpl
lock
testb
jecxz
mov
and
push
add
push
pusha
daa
ljmp
das
pop
fidivrl
in
rolb
rcrl
lahf
add
pusha
decl
movsl
pop
setb
push
sub
jl
lahf
ret
enter
mov
add
test
sbb
push
push
mov
fadds
xor
xchg
push
pop
dec
pop
mov
lock
lock
add
pop
mov
mov
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
fsub
mov
aaa
cmpsl
pop
sti
scas
add
push
lea
out
roll
and
xchg
pop
add
push
enter
add
mov
inc
mov
insb
cmp
test
sub
add
cmp
adc
inc
pop
movsl
and
mov
or
xchg
mov
pop
inc
sbb
ret
push
jns
enter
add
mov
imul
out
and
add
mov
add
add
pushf
jb
pop
cmp
sti
and
pop
pop
dec
dec
push
jbe
pop
add
adc
jo
push
cmp
add
add
roll
lahf
dec
jne
ficomps
xchg
pop
in
flds
wbinvd
mov
inc
push
xor
sbb
cmp
dec
xor
mov
xor
add
test
sub
jmp
inc
sub
add
rorl
in
imul
push
xchg
jg
rolb
decl
fiadds
xchg
and
mov
shlb
cmp
movsl
jmp
cmp
add
and
int3
addb
mov
adc
cs
lcall
adc
inc
add
add
mov
test
add
repnz
cmc
mov
clc
sub
add
cld
pop
aam
push
xor
dec
cs
add
dec
add
mov
or
sbb
sub
pop
divb
fimuls
pop
mov
cld
add
sub
dec
add
push
add
and
add
ret
pop
sub
std
movsl
or
mov
sub
ljmp
imul
jge
add
xchg
push
aas
pop
mov
repnz
clc
testb
add
aas
mov
cmp
jne
call
add
sbb
out
mov
test
cmpsl
push
inc
inc
jp
and
xor
xchg
push
and
and
xchg
pop
nop
adc
into
pop
push
leave
sub
scas
fsubl
imul
adc
jl
es
sub
in
add
or
push
jae
clc
lret
das
add
or
cltd
and
stc
roll
mov
xchg
lods
adc
addl
inc
inc
xor
mov
add
xchg
into
sub
push
out
stos
lods
aad
icebp
in
and
sub
mov
jl
or
add
push
mov
test
out
pusha
dec
idiv
rorl
push
or
loope
pop
cmp
ja
mov
stc
xor
add
sbb
xor
push
mov
mov
add
pop
xchg
adc
enter
mov
pop
aam
mov
cs
jg
add
xor
les
cltd
and
in
add
movsb
and
int3
adc
add
outsl
jae
xchg
fidivrs
in
filds
adc
push
add
push
mov
add
pop
sub
mov
lock
xor
jmp
stos
add
xor
push
leave
or
nop
push
add
fstl
xlat
out
movsb
nop
add
jae
mov
sbb
dec
push
cltd
test
and
ljmp
les
into
xlat
inc
cmpsl
mov
call
sbb
push
push
add
flds
sbb
sub
jmp
jle
or
mov
test
xchg
adc
ja
cmpb
insb
adc
inc
pop
lcall
aaa
add
mov
ror
add
add
mov
stos
jbe
insb
mov
adc
add
test
jmp
cmp
cmp
cmp
mov
mov
cli
adc
adc
or
mov
fldt
pop
je
jnp
add
je
shll
pop
jno
add
mov
int
clc
daa
repnz
sbb
or
js
or
mov
jl
inc
mov
cwtl
xchg
push
sahf
rclb
add
mov
cli
add
imul
xor
stc
aam
lcall
add
nop
int
mov
sub
adcl
cmp
test
mov
cmovbe
dec
loopne
call
out
pop
imul
add
inc
insb
fisttpll
ret
out
pop
into
call
rorl
notb
mov
negl
sbb
push
adc
and
loope
inc
cmp
push
cwtl
add
dec
sub
ljmp
mov
loop
mov
enter
xor
push
test
ret
pusha
cmp
pop
mov
dec
inc
inc
add
push
scas
or
adc
inc
movb
mov
movl
add
arpl
mov
shll
xor
jbe
inc
push
add
jnp,pn
jmp
pop
aad
rol
hlt
xchg
add
incl
and
xor
xchg
cmp
lock
inc
lret
orb
call
and
xchg
out
add
adc
movsl
add
fs
cmpl
add
aaa
lods
mov
rclb
pop
lock
clc
jae
jbe
les
fsubs
xchg
pop
or
popf
aad
les
rorb
mov
ja
fidivl
xchg
jmp
test
and
inc
jg
in
in
add
xchg
jne
add
adcb
cld
test
add
inc
sub
sbb
stc
repnz
sbb
adc
add
stos
mov
dec
lea
inc
xor
out
daa
and
mov
xchg
adc
add
sbb
dec
addl
or
jge
add
jno
repz
and
in
stos
mov
mov
cmp
pop
push
in
cwtl
movsb
add
jo
adc
mov
mov
dec
pop
add
iret
shr
mull
lret
inc
xchg
mov
cs
pushaw
sbb
add
adc
cltd
inc
std
xor
imul
out
mov
add
mov
call
scas
or
aaa
push
cmp
das
inc
or
inc
cs
mov
cmp
loopnew
lods
stos
add
lods
dec
hlt
sar
aas
mov
mov
call
aam
cmp
shrb
ljmp
aam
fimull
or
jae
mov
sub
adc
push
adc
xchg
int3
fsubs
mov
adc
test
inc
aam
stos
mov
pop
add
mov
jns
imul
dec
imul
dec
jo
and
xor
fildl
je
push
shll
scas
test
ucomiss
stos
cmp
lock
mov
out
dec
fbstp
add
adc
add
stos
mov
push
das
aam
add
mov
cmp
rep
jmp
add
addr16
je
clc
adc
jo
cld
xchg
cmpsl
std
cmp
test
sub
add
dec
out
sbb
unpckhps
pop
push
ficomps
xchg
sub
cmp
sub
add
add
dec
dec
xchg
sbb
add
xor
inc
filds
jecxz
pop
rcrb
mov
in
add
and
or
shrb
cs
ss
test
adcb
popa
add
sahf
andb
cmp
pop
pop
mov
ret
jle
push
cli
add
sahf
mov
das
movsb
icebp
pop
jmp
in
movsl
add
cmp
add
jnp
cli
jns
iret
adcb
aad
push
add
int3
out
scas
sbb
pop
add
jmp
inc
sub
rolb
or
arpl
jo
add
pop
jb
rolb
movsb
int3
jbe
cli
adc
xchg
cmp
inc
pop
or
out
add
fdivrl
sub
xchg
add
pop
cmpb
loope
sbb
cld
push
add
lods
insb
fisubl
mov
in
pop
inc
divb
add
cwtl
imul
ret
into
pop
push
add
das
xor
es
lods
adc
enter
sub
pop
shrb
jae
sbb
xchg
adc
lock
mov
xlat
popf
sarb
movsl
in
mov
jo
dec
ss
mov
pop
testb
dec
and
push
out
add
cwtl
pusha
adc
aam
sbb
cmp
out
pop
jo
add
aas
repnz
hlt
mov
xor
xchg
repz
add
mov
mov
sbb
mov
jnp
add
pop
ret
or
in
adc
or
add
cs
das
push
stc
add
xor
mov
inc
stos
fwait
push
fadds
sub
cmp
cltd
adc
addb
ja
dec
or
testb
push
lret
orb
xor
jmp
jne
xor
movb
cmp
cmc
add
and
jo
push
push
loopne
fiadds
cmpb
fisttpl
leave
ja
push
cmp
lods
or
insl
jnp
add
inc
jne
mov
inc
add
out
mov
fildl
scas
pop
stos
add
cmc
jne
in
rolb
sbb
add
fmuls
mov
pop
pop
pop
pop
add
lock
xor
jne
add
out
xchg
cmp
mov
xor
jp
pop
lods
rorb
mov
inc
add
inc
negb
call
in
inc
push
cmp
addl
arpl
test
les
push
sbb
dec
add
inc
lds
sub
in
hlt
jmp
push
shrl
add
movsb
mov
call
icebp
aaa
sar
pusha
test
loop
into
sbb
or
test
push
push
pushf
popf
add
cmp
mov
add
add
inc
mov
xor
jo
add
cmpsb
pop
test
mov
or
adcb
mov
inc
mov
push
pop
lret
cwtl
dec
add
sbb
cmpl
add
adc
push
xchg
outsl
loopne
loopne
gs
push
cmc
add
and
lock
fucom
mov
mov
daa
jne
push
pop
or
rorb
jge
mov
jno
sbb
loopne
pop
or
pop
pop
xchg
pop
jb
loopne
push
adc
add
jg
stos
fldl
daa
faddp
out
shl
jmp
fsts
scas
pop
arpl
inc
outsb
sbb
mov
out
or
xor
stos
and
stc
mov
sub
rolb
sub
outsb
dec
add
icebp
cmc
sbb
mov
sbb
out
dec
cld
cmpsb
pop
into
movsb
and
add
mov
and
push
dec
test
add
lods
scas
mov
mov
add
xlat
fldcw
and
adc
mov
movb
insb
pop
daa
orb
mov
pop
lea
push
or
mov
add
ds
pop
mov
push
in
push
rolb
push
sbb
cmp
sub
jo
or
test
dec
out
ljmp
cld
pop
cmovae
and
dec
sub
add
fs
stc
mov
pop
loop
insl
jns
add
lcall
add
mov
inc
fsubr
add
xor
std
setbe
lea
adc
mov
notb
pop
add
loopne
add
adc
mov
loopne
inc
enter
ss
add
dec
xchg
scas
pop
andl
ret
add
int
clc
mov
xchg
test
roll
call
mov
ljmp
andb
leave
loop
add
rcrl
xor
sub
pop
and
sti
pop
add
popa
iret
jmp
jno
frstor
add
sbb
mov
mov
adc
mov
int3
adc
xchg
fwait
add
ds
ss
push
ret
dec
popl
test
dec
insb
lret
iret
dec
dec
push
mov
add
push
shl
sti
jo
sub
mov
movsb
pop
push
adc
lods
sbb
mov
in
and
or
push
in
and
push
mov
xor
popf
jbe
cmp
dec
aam
jo
add
pop
lods
out
sti
jle
cmp
add
das
cmp
mov
sbb
clc
ljmp
add
jne
insl
test
add
fcmovbe
repnz
mov
pop
push
add
fwait
add
sbb
inc
mov
arpl
cmp
dec
aad
sub
push
dec
lcall
scas
pop
jmp
add
fdivrs
sahf
add
cmp
xor
or
das
jnp
or
add
xchg
cmp
add
xchg
enter
shll
mov
int3
mov
add
add
push
cmp
cmp
fcomps
dec
rol
jnp
push
and
fstl
add
push
pushf
aas
add
pop
ja
mov
std
test
push
cltd
cli
imul
xchg
pop
cmpb
inc
or
xchg
add
fstps
gs
add
push
mov
add
dec
jecxz
adc
xor
dec
subl
push
mov
mov
scas
pop
scas
cmp
lock
je
pop
and
mov
or
jne
test
xchg
push
mov
mov
and
sbb
testb
movsl
stos
mov
add
andb
add
mov
push
sbb
xchg
add
jo
add
mov
inc
stc
or
adc
mov
leave
and
sub
inc
jae
add
mov
add
add
cmp
pusha
aad
add
aas
mov
imul
adc
negb
iret
add
push
mov
aad
lcall
pusha
sbb
sub
sbbb
test
jbe,pn
add
and
dec
push
dec
je
xchg
sub
adc
push
add
inc
out
adc
bound
pop
push
push
je
inc
add
or
sub
cmp
xor
push
add
jecxz
xchg
adc
jae
xchg
add
es
or
push
and
mov
add
rcrl
add
and
add
daa
arpl
fwait
add
add
aad
or
mov
xchg
pop
add
mov
add
inc
adc
clc
movsb
sub
push
vmovaps
shld
movsb
sub
jno
add
das
cmp
jns
add
aaa
ret
xor
mov
push
call
lods
movb
or
mov
loopne
and
call
loop
js
push
add
ret
xor
call
xlat
add
mov
addb
loope
rcrl
adc
imul
sbb
popf
rcrl
mov
stos
mov
in
jg
dec
add
sub
sub
add
or
pop
mov
push
xchg
pop
adc
dec
js
cltd
adc
add
in
add
cmp
add
ficomps
test
or
add
mov
insb
and
adc
rorb
jae
jmp
adc
aaa
sub
adc
cmp
add
bound
push
inc
test
call
cli
or
movsl
enter
mov
cmp
mov
loopne
sbb
pop
add
std
dec
call
jmp
pop
lock
add
xor
test
push
clc
imul
add
enter
rolb
fs
stc
mov
xchg
shl
xor
jno
in
enter
xchg
aad
mov
adc
je
andb
js
adc
jae
xlat
mov
pop
test
sti
lahf
in
add
out
test
dec
jo
pushf
mov
push
and
add
sub
mov
lea
add
adc
test
out
add
or
adc
cmp
pop
or
pop
out
add
adc
scas
jne
add
daa
mov
or
pop
sbb
les
xchg
add
and
call
stc
aas
pop
add
push
clc
rcrl
lock
notl
mov
cmp
stc
inc
mov
cld
sub
mov
push
in
or
js
pop
call
nop
in
pop
outsl
add
mov
lods
push
bound
movsb
pop
imul
or
adc
lcall
jnp
xchg
add
sbb
ret
push
xchg
cli
pop
add
sub
push
push
jmp
pushf
adc
pop
push
add
ret
aaa
dec
sbb
push
jmp
lea
add
push
outsb
add
sub
push
sbb
or
jecxz
xor
xchg
std
pop
add
sbb
xor
mov
jne
imul
cmpl
inc
bound
jecxz
add
cmpb
and
mov
jl
int
and
dec
pop
loope
sahf
rcll
or
push
adc
adc
mov
pop
jecxz
daa
add
and
ljmp
lret
testl
adc
and
andb
mov
or
dec
pop
add
shrb
cwtl
cs
add
mov
je
xor
xchg
cld
jecxz
fwait
loopne
add
xor
lcall
add
jecxz
or
hlt
pop
cld
js
icebp
mov
shll
add
repnz
cs
loop
add
mov
xor
mov
pop
pop
dec
cmpsl
mov
pop
push
imul
mov
dec
inc
movsb
sahf
mov
pop
xchg
lret
sub
in
push
pop
les
popa
sub
divb
add
int3
add
xor
add
xor
add
add
cltd
lock
inc
ss
mov
xor
out
lds
cmpsb
push
negl
cmp
add
fdivrl
sbb
adc
jbe
add
call
insl
nop
jecxz
add
push
bound
add
sub
ret
push
mov
mov
stc
outsb
test
mov
xchg
adc
add
cmp
mov
cmp
scas
in
loopne
enter
fucomp
ja
add
cmp
loope
mov
jge
add
out
clc
push
mov
xor
mov
jo
add
sub
ficompl
popf
verw
adc
icebp
xchg
xchg
cmp
adc
mov
repnz
add
cmp
adc
add
jp
and
push
ljmp
mov
add
loopne,pt
lret
push
repnz
or
mov
stos
jge
andb
fwait
sarb
add
xchg
xorb
mov
cmp
add
imul
mov
adc
cmp
addl
mov
mov
sub
mov
and
jmp
pop
aas
incl
inc
push
roll
xor
ret
imul
push
push
inc
pop
pop
sbb
add
add
push
or
mov
adcb
in
daa
nop
adc
rcrl
add
push
sbb
pop
mov
bound
mov
popf
add
adc
in
out
loopne
pop
sbbb
es
mov
add
or
mov
pop
icebp
insb
test
mov
jb
mov
lret
and
fdivp
add
add
or
mov
jne
add
dec
loop
shl
xchg
adc
pop
insb
push
push
pop
loop
add
dec
pop
cltd
cld
clc
jecxz
out
add
sub
pop
cmpsb
les
jge
dec
mov
lods
movsb
pop
cmp
xor
test
imul
mov
jnp
js
add
popa
bound
push
pusha
jle
pop
call
jp
pcmpeqb
sub
repz
dec
hlt
adc
inc
mov
mov
stos
add
shlb
pmovmskb
mov
or
add
or
xchg
cmp
dec
dec
cld
inc
add
dec
pop
mov
mov
mov
mov
lea
mov
lds
stos
rcrb
mov
sahf
pusha
adc
add
xchg
pop
enter
add
outsl
leave
mov
mov
test
sbb
adc
pushf
push
es
mov
subb
push
add
lds
lahf
lods
aam
mov
add
push
mov
cwtl
mov
add
leave
lahf
add
icebp
pop
add
jle
add
pop
pop
push
mov
mov
jg
leave
shrb
mov
adc
mov
add
push
sub
les
cmp
call
mov
and
add
push
xor
test
inc
lods
add
push
add
inc
add
lds
or
sub
cmp
outsb
push
mov
push
jg
testb
adc
add
sub
cmp
inc
push
pusha
pop
jo
mov
add
add
inc
add
or
mov
or
cld
jle
dec
movsbl
test
jo
add
or
jle
add
jb
push
mov
add
mov
adc
mov
dec
and
inc
or
mov
and
cmc
jp
add
decb
adc
cmp
jae
pop
hlt
jb
dec
daa
add
add
into
shr
rcrb
and
adc
js
mov
ds
pop
test
icebp
or
add
popf
clc
push
push
add
sbbb
mov
pop
or
mov
push
cmp
add
push
mov
dec
cs
add
mov
add
lods
and
sbb
jp
pop
jbe
or
pop
mov
sbb
or
inc
addr16
mov
jb
mov
je
insb
sub
add
inc
ret
adc
add
add
sbb
mov
or
loopne
clc
sbb
inc
les
xchg
js
wrmsr
jle
xchg
rcrb
ret
addl
cmp
inc
inc
std
addl
cmp
ficomps
out
add
ds
lret
add
mov
add
xchg
arpl
sbb
data16
jbe
add
scas
push
lret
pop
add
mov
dec
sub
dec
xchg
mov
lret
pop
mov
jo
fidivrs
add
loopne
xor
rorb
cwtl
pop
mov
lock
jbe
icebp
mov
adc
add
and
push
mov
add
mov
xchg
cmp
sbb
cmp
faddp
enter
mov
add
and
dec
js
add
mov
add
fisttpl
ja
add
jp
xchg
shrl
xchg
or
sbb
clc
mov
filds
pop
pop
stc
lock
shlb
psubusb
cltd
dec
out
lret
inc
loopne
loopne
add
pop
push
and
fs
adc
sub
mov
add
mov
inc
shr
cmp
mov
jae
or
mov
adc
xlat
sbb
sbb
sbb
or
adc
add
and
and
add
test
jns
call
or
sbb
mov
out
pop
shr
rcrb
rorl
add
dec
pop
repnz
cs
mov
mov
xchg
cmpb
mov
and
mov
shl
jae
add
jb
and
mov
jl
xchg
cmp
mov
or
xor
push
push
inc
adc
rolb
xchg
nop
add
add
jmp
sbb
dec
shl
jnp
push
mov
ffree
cmpb
jecxz
push
orb
push
mov
mov
adc
push
push
add
add
add
or
call
pop
arpl
cmp
les
pop
add
push
hlt
int
rolb
inc
cmpb
sub
sub
stos
xor
call
mov
rcll
aad
adc
add
lea
aad
add
xchg
add
xsha1
cmpsb
or
in
add
adc
add
adc
dec
cli
ret
pusha
xorl
inc
jmp
jne
add
xor
rcl
add
jle
cmp
inc
dec
push
xor
dec
add
jg
jmp
add
xchg
push
add
in
jae
or
ja
add
and
inc
dec
jno
in
movsb
andb
mov
xchg
scas
push
add
push
cmp
and
cmp
das
and
icebp
adc
push
rorb
inc
xor
movb
subb
add
out
dec
add
push
pop
add
sub
dec
mov
add
sarb
test
outsb
xor
add
jne
bound
inc
xchg
inc
cmp
dec
pop
faddl
nop
pop
loope
add
cmp
pop
pop
sub
pop
push
or
movl
xchg
rclb
pop
add
addr16
out
nop
jae
push
add
fistpl
mov
mov
lds
and
mov
sti
and
or
repz
cld
sub
mov
test
sar
mov
cltd
lods
test
sbb
or
add
fstpl
fwait
jb
xor
pop
adc
pop
sbb
adc
loope
jp
pop
mov
js
lret
sub
xor
add
jo
rcrl
loopew
hlt
jno
shld
fisubl
rcr
test
lret
loopne
adc
mov
add
bound
inc
cli
add
je
cmp
jb
out
push
inc
jp
std
xchg
pop
sbb
xor
add
vpsrad
mov
cmp
xchg
add
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
xchg
leave
xchg
jmp
test
jmp
pop
xorl
ljmp
mov
xchg
jbe
mov
mov
add
mov
add
hlt
mov
jmp
incb
adc
mov
ljmp
mov
push
and
inc
lds
cmp
adc
loopne
roll
inc
mov
add
xchg
in
and
push
jnp
xchg
rolb
aam
decl
cld
movsl
mov
sbb
add
outsb
sub
add
imul
or
sub
mov
je
add
movsl
lcall
dec
and
mov
add
jae
sbb
inc
add
sub
sti
pop
fucomp
fwait
roll
arpl
test
cltd
sub
dec
les
sarl
lods
lock
cmp
inc
push
rorb
jns
sbb
and
add
insb
rclb
and
loopne
in
or
pop
inc
dec
pusha
and
and
add
adc
cmp
out
lds
cld
adc
add
sarb
ret
shll
pusha
fadd
nop
popa
add
xor
mov
test
je
jns
and
cmp
xor
int3
inc
adc
pushf
adc
inc
and
inc
cmp
sbb
or
dec
cs
adc
dec
faddp
shr
or
adc
sub
xor
jmp
pop
push
or
or
nop
outsb
cmp
pcmpgtb
pushf
mov
aam
movsb
cmovbe
jno
jp
adc
push
mov
enter
pop
inc
add
inc
cld
popa
add
nop
jmp
cwtl
xor
xchg
dec
push
inc
sbb
sbb
fsubl
pusha
pusha
popa
sub
pushf
adc
jns
mov
and
xor
loopne
insb
adc
mov
or
cwtl
pop
xchg
push
mov
mov
mov
add
mov
les
add
mov
sub
sub
clc
data16
clc
test
popa
and
mov
dec
add
mov
addb
movsl
cmp
xchg
cld
addb
adc
and
xchg
inc
xor
int3
mov
cmp
test
sub
push
xorl
cwtl
xor
test
and
hlt
dec
add
or
xchg
sub
xchg
mov
addl
dec
loopne
mov
and
mov
in
inc
cwtl
adc
sub
mov
and
loop
adc
add
iret
add
shlb
fsubl
push
adc
adc
jl
dec
dec
test
imul
mov
xchg
dec
add
test
inc
loope
pop
add
out
add
mov
mov
push
lea
add
add
mov
sbb
adc
add
mov
xor
dec
rclb
outsb
je
insl
gs
jb
loop
out
addl
clc
ljmp
inc
sbb
shrb
mov
push
and
in
or
dec
rol
pop
or
xchg
add
inc
mov
cwtl
cmp
add
or
ljmp
aad
clc
loopne
add
popa
mov
push
mov
add
shlb
dec
fdivs
and
bound
sbb
and
sub
xor
cmp
cli
notb
pop
mulb
inc
push
cmp
std
nop
std
cwtl
pusha
cltd
test
mov
sar
fdivr
loopne
call
add
mov
add
add
and
enter
or
mov
lods
and
add
enter
bound
js
sub
mov
xor
add
lods
add
push
mov
push
movsb
xchg
sub
aaa
adc
or
dec
orb
std
and
or
pop
add
hlt
add
inc
dec
popa
add
adc
arpl
cmp
dec
incb
add
jbe
add
popa
imul
dec
push
out
and
push
add
pop
sbb
push
inc
add
movl
fdiv
lock
pause
in
and
loopne
adc
add
cmp
cwtl
add
cld
in
jp
or
iret
and
je
mov
sbb
pusha
dec
add
cmp
pushf
xchg
or
call
and
fdivrs
dec
test
mov
rorb
sbb
int3
cmp
add
and
dec
adcb
lret
or
sbb
jo
add
jp
out
pusha
pop
fwait
pop
lea
and
movsl
and
les
jnp
loopne
int3
jl
lock
jne
or
add
orl
in
add
add
dec
adc
or
mov
lock
cmp
roll
adc
adc
push
mov
mov
cltd
inc
add
mov
test
xchg
sbbb
mov
push
add
or
sbb
and
popl
push
or
push
add
pop
xor
in
jo
shrb
std
mov
inc
std
pop
or
or
or
or
push
pavgb
jns
cmpxchg
int3
add
inc
push
add
jl
paddsb
clc
mov
fnstenv
mov
push
add
pop
add
in
pop
sahf
mov
add
les
packuswb
push
test
adc
add
cmpsl
add
mov
add
jmp
jne
jae
sub
adc
and
rcll
dec
nop
cmp
push
adc
inc
mov
inc
jp
add
jl
dec
and
add
fcoms
imul
aaa
cld
addr16
repnz
cmp
dec
mov
or
xor
pop
daa
or
mov
adc
cmp
inc
sbb
nop
push
jb
iret
orb
add
xchg
fadd
daa
push
mov
add
mov
cmp
mov
outsl
aam
shll
sbb
or
pusha
xor
inc
shrl
pop
loope
pop
mov
xchg
fmull
aaa
cmp
cld
fs
add
dec
enter
sub
cmpsl
or
iret
cmp
sbb
xor
sbbb
testb
xor
mov
cltd
clc
aas
adc
adc
call
and
add
cwtl
cmp
xor
je
or
cltd
adc
push
dec
nop
orb
dec
and
inc
fdivs
add
jo
jl
sbbl
mov
jmp
add
mov
orb
sbb
xor
add
adc
xchg
mov
call
and
push
es
xor
pop
aam
test
test
lea
dec
xor
cwtl
loope
add
andb
add
sbb
or
xchg
rclb
xchg
aam
icebp
push
inc
add
ds
cmpsb
bswap
inc
push
adc
and
scas
pop
jecxz
loop
dec
add
inc
cmp
stos
sub
xchg
and
lock
sbbb
mov
inc
pop
inc
nop
aad
mov
shlb
call
les
sarb
mov
adc
jbe
test
lahf
ror
fmuls
mulb
or
sbb
dec
push
cwtl
aas
dec
stos
mov
shr
sar
push
inc
mov
add
dec
rcrb
data16
mov
js
push
mov
in
clc
mov
or
adc
and
das
or
add
xchg
shlb
ret
mov
adc
and
pop
add
fwait
inc
xor
or
xchg
jle
mov
mov
mov
adc
dec
add
or
xor
mov
pop
cltd
xchg
repz
pop
rorb
jle
iret
xchg
movl
and
push
lret
hlt
add
dec
adcl
test
pop
and
outsb
inc
jp
mov
sti
fdivr
in
jle
add
mov
dec
add
add
push
nop
adc
mov
or
in
jae
add
sbb
xor
adc
sbb
inc
mov
mov
ret
cmpsl
aam
in
imulb
adc
dec
push
adc
or
dec
lret
add
or
test
adc
push
and
inc
loop
clc
add
sbb
jb
rorl
add
inc
add
mov
add
popa
fs
adc
push
sbb
inc
jb
jns
push
arpl
push
mov
outsb
xor
dec
inc
jbe
add
mov
movsl
sbb
addr16
insl
daa
mov
xor
jmp
inc
in
lea
push
inc
mov
mov
sbb
push
sbb
jmp
adc
imul
push
cld
xchg
insb
mov
xor
pop
or
and
sub
out
inc
fisubrl
ret
arpl
jge
sti
push
jnp
jp
add
call
xchg
loopne
js
inc
add
shlb
aaa
nop
addl
add
sub
adc
outsl
jge
add
fs
add
imul
add
outsb
repnz
inc
sahf
adc
inc
imul
scas
push
movsb
pop
lods
dec
test
xchg
inc
jb
cmpsb
enter
insl
sbb
dec
xor
ljmp
or
xorb
inc
xorl
hlt
push
jge
cmpsb
popf
lods
cltd
dec
push
std
pusha
bound
andnps
dec
ror
inc
cmp
push
mov
je
sub
push
xor
adc
pop
dec
add
cmp
addb
test
or
pop
scas
sbb
mul
push
lock
jo
xor
inc
fs
add
inc
sub
inc
dec
adc
mov
push
imul
clc
jo
inc
inc
xchg
jp
movsl
fldcw
add
test
jb
add
into
dec
fs
cmpl
out
out
or
lret
adc
jbe
cmovb
dec
inc
adc
dec
sti
insb
cmp
sbb
imul
addr16
fs
xchg
mov
dec
arpl
mov
add
mov
loope
orl
cmp
mov
les
jne
add
out
xchg
add
add
lods
sub
cmp
push
adc
xchg
adc
pusha
lcall
xor
loop
push
add
mov
sbb
inc
add
jbe
adc
add
rolb
in
loope
ds
adc
adc
mov
and
movsb
jbe
repz
jne
xchg
xchg
sbb
adc
push
or
shrb
mov
imul
out
lret
add
adc
dec
sbb
xchg
enter
movsb
mov
mov
pusha
sti
lret
cltd
outsl
fnstcw
xor
pop
nop
inc
add
sbb
cmp
add
jns
sbb
dec
inc
sub
xchg
jmp
lods
sub
push
add
jae
inc
push
add
push
repnz
jg
sub
inc
mov
push
cmp
sahf
push
stos
lock
sbb
movsl
add
imul
add
sbb
mov
xchg
mov
pusha
rolb
cmp
push
mov
push
mov
push
add
shrb
xchg
sahf
aam
pop
scas
pop
into
add
inc
in
xor
stc
call
or
push
adc
xchg
aad
inc
push
dec
inc
das
mov
sub
fisubs
scas
mov
lahf
in
mov
jns
inc
mov
jmp
add
and
lods
jecxz
xor
add
dec
aas
aam
inc
mov
add
or
jo
insb
add
cs
mov
mov
int3
push
jbe
lret
cmp
lods
push
out
adc
add
push
movsb
dec
outsl
mov
sbb
pop
lds
lret
into
xorb
inc
dec
add
and
sbb
and
push
push
xchg
loopne
outsl
ja
adc
or
sahf
xor
add
dec
dec
imul
or
jo
imul
test
icebp
mov
hlt
mov
test
mov
jl
aas
sbb
fmul
mov
xchg
arpl
push
lcall
xchg
or
and
fsubs
fcompl
lods
jne
icebp
addr16
or
movsl
pop
sbb
test
ret
sub
dec
fists
lods
xor
daa
adc
movsl
sub
cmpsl
or
js
es
add
mov
movsl
iret
add
ja
fisttpll
sbb
jge
ret
inc
in
jmp
inc
xorb
xchg
sbb
and
cmpsb
pop
push
push
mov
not
jno
stos
mov
jbe
fcomi
jmp
out
mov
or
push
add
dec
les
in
push
or
mov
cltd
lock
ret
rorb
call
shlb
dec
add
or
xor
sub
inc
cmp
xchg
inc
push
dec
out
dec
push
mov
punpckhdq
jp
or
iret
xchg
iret
lcall
iret
mov
iret
ror
fcmove
loop
ljmp
xor
add
adc
sbb
and
sub
xor
icebp
cmp
inc
dec
dec
mov
pop
punpckldq
jb
jp
or
iret
xchg
iret
lcall
iret
mov
iret
test
clc
push
xor
push
je
jbe
js
jp
das
jl
jle
daa
rolb
sysenter
add
xor
inc
call
leave
add
test
pop
aaa
sbb
add
mov
sahf
aad
push
fstpl
sti
xchg
add
pop
daa
and
aas
push
dec
push
push
pop
pop
mov
jb
iret
movsl
mov
mov
ret
iret
leave
iret
jecxz
ljmp
cmp
daa
pop
inc
xor
sarb
cmpsl
dec
sub
pop
fidivl
mov
add
cmp
leave
xchg
cmpsl
flds
cmp
in
pop
push
cmp
aas
sahf
dec
push
push
push
lahf
pop
pop
arpl
fwait
mov
pop
xchg
stos
popa
push
aas
sbb
sub
add
jmp
stc
ret
xchg
lret
iret
add
dec
inc
and
sub
jb
je
jbe
jne
test
jl
jle
pushf
je
jbe
add
call
push
and
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
add
jle
mov
lahf
xchg
pop
pushf
xor
add
or
daa
adc
addr16
jp
orl
dec
mov
lgs
add
insl
xor
add
mov
mov
add
jbe
js
push
mov
aas
mov
push
fwait
add
mov
mov
inc
cmp
add
daa
in
add
push
in
icebp
inc
ljmp
mov
rolb
ds
call
lock
add
add
adc
inc
or
pop
dec
add
cmp
mov
xor
lret
push
xor
in
pusha
xchg
add
jno
add
jl
sbb
xor
sub
push
jp
movsb
pop
jl
mov
cmpsl
xchg
mov
aas
xlat
xchg
loopne
out
stos
pop
inc
daa
pop
inc
push
cmpsl
add
xchg
out
rolb
imul
jmp
add
ss
push
shrl
fnstcw
or
jmp
pop
fbstp
repz
dec
push
rolb
cs
inc
mov
in
xor
inc
pop
cmp
leave
jp
sub
add
movsb
js
sbb
cmp
pop
sahf
outsl
add
lea
test
sbb
inc
daa
dec
pop
inc
push
or
push
xor
add
wrmsr
dec
rol
shlb
in
call
adc
inc
dec
movsb
add
test
mov
cmp
loope
ljmp
je
jbe
js
jp
jl
repz
sbb
sahf
cmp
inc
lahf
dec
add
push
xchg
push
dec
cmp
jb
je
jbe
js
jp
jl
jle
jle
add
out
in
mov
add
push
inc
fldcw
inc
lret
add
dec
insb
mov
iret
cmp
or
clc
or
decl
pop
loope
mov
xchg
mov
aam
out
repz
add
shll
flds
sub
xor
cmp
cmp
adcb
lcall
popf
ret
insb
and
mov
repnz
sbb
or
and
dec
xor
jle
inc
int
aad
fstpl
in
push
jb
jp
cmp
mov
mov
mov
loope
jmp
ljmp
add
or
xchg
int3
sub
xor
inc
push
out
repz
jb
repnz
leave
xchg
rcrl
jmp
loopne
clc
sbb
pusha
sub
add
cs
pop
lahf
hlt
popl
mov
nop
rcrb
add
out
daa
rolb
rolb
add
repz
testl
add
sub
sti
pop
daa
push
inc
in
lock
pusha
in
add
jo
stos
cmp
leave
nop
rcrl
jmp
sar
stc
sar
fdivr
loopne
call
and
xor
or
adc
sbb
and
add
jmp
inc
enter
dec
pop
inc
aas
push
addb
cwtl
out
out
loopne
cs
cmp
cmp
cmp
cmp
clc
test
xor
xchg
pop
add
iret
cmp
inc
dec
pop
mov
pusha
movsb
shrb
adc
jo
in
rcr
pop
out
daa
mov
xchg
xchg
cmpsl
int3
shl
aam
fsub
fsub
loopne
call
xor
and
sub
sub
loopne
add
cmp
cmp
inc
mov
js
adcb
push
mov
xchg
mov
mov
add
aaa
in
xchg
in
sub
out
ljmp
jmp
cmp
rolb
sbb
stc
dec
enter
and
mov
mov
jmp
jo
dec
add
in
iret
lock
hlt
mov
push
add
add
or
dec
inc
js
jp
mov
pop
and
dec
pusha
sub
movsb
cld
test
lods
cld
mov
mov
mov
lods
cmp
aaa
aas
or
adc
adc
and
inc
lea
insb
lcall
jle
jle
push
cmpb
cmp
sbb
dec
je
test
and
jl
jo
aas
mov
add
sbb
and
and
sub
leave
cmp
mov
mov
js
jl
xor
repz
repnz
add
pop
int3
mov
aam
fsubs
clc
add
and
add
int3
ds
cmp
lcall
mov
and
push
mov
lods
flds
scas
fmul
fsubl
xchg
sbb
out
popf
in
sbb
add
and
test
xor
xor
rcrb
inc
in
pop
dec
in
dec
lock
xchg
sbb
xchg
sbb
lahf
test
rcrb
dec
mov
xchg
add
add
clc
dec
cld
push
in
call
pusha
ds
cmpsb
lahf
mov
pop
lods
lahf
mov
mov
mov
pop
dec
movb
xchg
movsl
ds
adc
jb
jp
add
jo
rcll
loopne
add
lcall
cmpsb
in
stos
lock
xchg
push
pop
sbb
lahf
mov
xchg
movb
cmp
cmp
add
lock
inc
in
sbb
mov
dec
lret
add
sub
je
pop
jbe
push
cmpsl
mov
cmp
call
aaa
aas
xchg
movsl
mov
add
inc
addl
mov
loope
mov
in
xorb
mov
add
jl
jle
dec
lea
cmovbe
popa
adc
movsl
sub
cmp
xor
inc
nopl
pop
int3
mov
jecxz
data16
add
in
inc
add
in
std
call
je
jno
cmpsl
js
jp
dec
jno
add
xor
out
add
data16
mov
add
cmp
sar
aad
push
jecxz
push
xor
dec
xchg
add
insb
mov
jo
jl
into
jle
push
clc
mov
cmpl
push
add
inc
out
popf
add
in
cmpsb
pop
pop
popl
mov
sahf
xchg
scas
inc
mov
add
dec
ftst
jecxz
add
adc
dec
add
iret
jbe
cmpsl
dec
mov
mov
pusha
xor
aaa
jb
add
shll
push
fisttpll
jle
add
inc
xor
add
cmp
add
sarl
cmp
add
loopne
xchg
nop
add
js
jp
test
jle
in
add
cmp
dec
add
lods
pop
pusha
mul
sahf
adc
pop
ds
push
cs
in
inc
mov
cmp
das
add
jns
adc
pop
xor
cmp
and
xchg
int
add
lock
xor
adc
pop
in
jp
pop
and
xor
aas
inc
cs
mov
roll
call
xchg
add
sti
loop
rolb
xor
daa
sbb
sub
xchg
add
loope
nop
and
pop
dec
pop
inc
pop
lret
pop
mov
push
ss
add
shlb
pushf
popf
repz
pop
and
lock
outsl
js
jp
jl
jle
js
add
ret
or
adc
mov
andb
leave
dec
cmpsb
push
push
cli
or
adc
add
call
leave
dec
rcll
pop
loope
jmp
and
fmull
sbb
aam
fcomps
push
sub
add
pop
dec
or
enter
daa
push
adc
out
push
add
fisubs
pop
inc
pop
and
jo
je
sub
ror
cmp
adc
xor
dec
rorb
push
fadd
lds
leave
clc
rorl
push
or
inc
cwtl
pop
sbb
sbb
and
sahf
xor
xor
cmp
inc
jns
adc
dec
dec
pop
loope
push
insb
mov
sahf
inc
dec
xchg
lcall
pop
adc
leave
int3
test
out
movsb
in
lock
or
add
adc
sbb
jb
dec
xor
aas
push
aas
push
sub
lods
lahf
push
push
and
cltd
add
inc
loope
jmp
stc
int3
cli
les
xchg
add
push
push
xor
jg
popf
add
ret
icebp
cvttps2pi
push
cmp
xor
xchg
sti
mov
in
call
or
mov
daa
lods
inc
mov
and
jle
sub
loope
add
push
ds
test
lret
sub
popf
dec
cmp
push
popf
pop
adc
mov
inc
cmp
mov
mov
cmp
add
sub
leave
pop
jecxz
in
movl
jp
adc
cmp
cmp
pop
rorb
xchg
fwait
mov
fnsave
jmp
divl
jbe
sub
xlat
in
add
xor
out
pusha
sbb
push
aaa
test
add
cmp
mov
add
jb
and
cli
push
mov
adc
add
xor
inc
mov
call
xchg
cmp
adcb
pop
aas
sti
pop
hlt
push
mov
inc
push
jl
adc
roll
out
sub
pop
in
call
lock
hlt
ljmp
xor
add
or
push
or
std
add
loope
xor
jne
pusha
into
shrb
fldl
push
test
je
dec
jbe
dec
lar
add
xchg
xchg
loope
mov
jne
push
cmp
movl
or
std
add
andb
inc
dec
test
mov
cmp
push
je
jbe
in
sbb
cmp
dec
les
add
xlat
addb
loopne
clc
and
orb
out
ss
leave
and
das
fstpt
dec
aas
push
popf
pop
sbb
mov
daa
cmp
or
cs
sub
cmc
add
pushf
and
jl
add
sub
sub
cmp
add
push
jecxz
mov
in
pop
je
xchg
subb
jno
fdivrs
cmp
mov
faddl
add
clc
lock
mov
pop
loop
stos
pop
dec
nop
imul
inc
add
xchg
lcall
dec
call
mov
scas
add
pop
mov
mov
imul
shl
add
jbe
add
sub
lcall
cmp
add
add
jge
in
call
inc
jbe
adcl
add
add
push
jle
sub
sbbb
push
add
test
xchg
sub
dec
dec
mov
push
push
outsl
mov
add
mov
je
mov
xchg
xchg
lahf
lods
rolb
pop
mov
sarl
add
mov
xchg
dec
dec
cmpsl
adc
shrl
add
sub
cwtl
pop
xor
lcall
sahf
rorl
jl
lock
pushf
sub
mov
push
movsb
and
psrlw
sarb
in
sar
pop
ds
jae
add
or
adc
adc
rol
sub
pop
mov
add
les
je
mov
inc
in
push
call
rcrb
adcb
enter
mov
mov
dec
inc
pop
add
and
roll
into
inc
mov
inc
add
jp
jl
jle
dec
dec
dec
pop
js
repz
hlt
lock
movsb
pushf
xor
add
ss
leave
imul
flds
mov
mov
pop
xchg
xchg
clc
mov
xchg
cmp
pop
cmp
and
jle
add
shl
cmp
and
inc
addr16
mov
loopne
or
ss
xchg
mov
nop
mov
into
dec
aas
imul
fsubl
ljmp
adc
sbb
pusha
dec
testb
add
pmulhuw
cs
inc
or
hlt
imul
in
test
je
testb
push
add
and
xor
pop
xchg
ret
push
and
loopne
sarl
pop
orb
and
dec
ret
push
shlb
jp
mov
xchg
cld
add
cmp
push
cmp
dec
pop
mov
iret
popa
pcmpgtw
sub
movsl
push
push
adc
dec
nop
fidivrs
clc
cmpl
les
outsb
mov
cmp
add
jb
je
pop
add
lar
das
lahf
iret
sbb
rcll
mov
hlt
sysexit
jb
icebp
add
cs
movsb
cmp
insl
mov
rolb
push
sub
cmpsl
xlat
add
mov
lret
push
outsb
dec
jb
mov
inc
daa
push
dec
inc
add
mov
pop
out
jno
add
add
js
add
pop
daa
pop
inc
insl
xor
leave
jne
rclb
jb
pop
pop
mov
and
les
pop
pushf
and
pop
test
pop
sbb
push
xchg
cmp
add
cmpsb
daa
stos
dec
fiadds
mov
andb
push
jg
icebp
pop
jle
stos
xchg
mov
enter
addb
xchg
add
mov
cld
addr16
pop
mov
pop
pushf
lahf
inc
xchg
stos
sahf
daa
lret
ss
call
adc
xchg
sbb
dec
and
mov
push
imul
ret
add
push
scas
xchg
mov
cmpsl
dec
cld
out
pop
cmp
add
push
adc
sbb
mov
into
mov
ret
andb
add
cmp
xorl
in
mov
loope
subb
aas
jg
cwtl
rcrb
add
mov
test
pop
mov
pop
loopne
sub
shlb
cmp
push
out
add
jbe
shll
adc
xor
and
loopne
add
pop
mov
jo
int3
mov
dec
sar
stc
aaa
pop
add
cmp
lds
xchg
cmp
test
movsl
fs
call
stos
sub
add
jg
pop
jne
inc
pop
cmpsl
and
dec
cld
sbb
incb
test
bnd
add
dec
repz
js
insb
xor
gs
sub
mov
pop
xor
or
sbb
mov
add
mov
pop
in
fnsave
in
add
and
fcoms
sbb
pop
sbb
aaa
scas
popf
iret
adc
mov
add
push
jle
push
je
jbe
es
jp
dec
mov
push
loope
pop
stc
xchg
insb
mov
rorb
push
out
inc
cmp
xor
cmp
and
shll
add
mov
lahf
movsb
xchg
test
ret
mov
shl
enter
sub
je
jbe
dec
add
lret
sub
nop
cmp
xchg
cmp
add
imul
adc
dec
mov
adc
mov
mov
cmp
popf
inc
xor
in
cmc
sub
mov
xchg
mov
sbb
push
xor
and
sub
sahf
add
in
stc
out
and
xchg
mov
rolb
mov
xor
cmp
xchg
cmp
aas
sub
jno
add
pop
and
xor
js
add
pusha
sub
jle
inc
add
in
call
lds
inc
inc
ss
leave
push
enter
cmp
int3
push
popl
dec
dec
fisubl
add
push
or
cmp
iret
cmpb
add
je
sbb
aas
jnp
xchg
cmpsl
mov
adc
xor
pop
pop
inc
dec
lahf
ret
add
fucomip
cmp
sbbb
lock
jo
add
jmp
scas
add
inc
orb
mov
xor
xchg
add
ret
je
adc
daa
ss
pop
out
clc
testl
pop
mov
push
movsb
mov
and
xchg
or
and
or
lods
add
repz
daa
cmp
inc
loopne
shll
sahf
sbb
test
push
and
sub
inc
jb
add
addl
mov
add
xchg
cmp
dec
add
dec
js
jle
dec
pop
pop
ret
pop
popa
repnz
pop
pop
insl
xchg
xorb
out
sub
mov
test
xchg
add
pop
mov
adc
add
mov
das
mov
xchg
mov
fisubrs
icebp
add
and
insb
and
cmp
pop
cmp
push
lcall
divl
mov
add
dec
mov
add
bound
test
fcomps
pop
sahf
adc
pop
lret
xchg
faddp
add
jbe,pn
add
int3
lret
adc
and
mov
aas
and
mov
sahf
dec
call
xchg
inc
hlt
add
push
add
xor
xor
aad
fisubrs
adc
pop
sbb
pop
push
andb
pop
and
add
addr16
xchg
and
mov
loopne
or
add
mov
cmp
xor
cmp
dec
jge
or
aas
mov
or
mov
sub
ds
inc
jl
adc
test
jp
fwait
adc
hlt
stos
clc
scas
mov
scas
pop
mov
mov
movsl
mov
aad
fsubr
repz
add
data16
iret
xor
dec
jo
sarb
push
jb
adc
cmpl
pop
shll
fldenv
loope
add
das
inc
popf
in
enter
sub
in
add
ljmp
popa
mov
xor
gs
lods
pop
and
pop
jle
and
test
outsl
mov
mov
js
jp
dec
add
sbb
je
pop
aam
xchg
push
daa
push
inc
pop
add
mov
imul
cmp
mov
leave
aas
fldl
sbb
jbe
add
inc
jp
jl
fwait
dec
pop
loopne
push
dec
pop
cwtl
aas
in
call
cs
lahf
movsl
enter
aaa
fcoms
je
mov
movsl
ljmp
shrb
jbe
js
jp
mov
lods
loopne
in
pop
dec
push
addb
cmpb
pop
aas
loopne
add
and
gs
fiadds
mov
jle
xchg
jno
mov
sbb
repz
xchg
shl
adc
or
push
aas
pop
js
push
cmp
dec
movsb
jb
outsb
enter
faddl
mov
loopne
xor
popf
lcall
aam
cmc
add
movsb
cmp
add
and
ds
pop
mov
dec
imul
insb
je
jnp
rolb
andl
pusha
out
in
rorl
adc
lock
iret
shr
hlt
repnz
dec
testb
leave
inc
rorl
or
pusha
push
push
je
pusha
or
xchg
loope
add
lret
shlb
add
popf
or
sbb
pop
sbb
shlb
rolb
dec
test
scas
dec
cwtl
push
mov
add
popf
mov
push
outsb
sbb
dec
jns,pt
test
popa
add
call
enter
dec
mov
mov
dec
mov
and
xor
xor
aas
add
sahf
ja
xchg
add
fildl
and
pop
xchg
mov
jb
popf
rolb
xchg
add
jl
stos
mov
and
push
leave
jg
sbb
cmp
cmp
pop
add
and
rcrb
jae
sbb
jle
popf
fildl
loope
repnz
jo
mov
aas
add
dec
dec
push
xchg
sbbb
mov
adcb
je
jle
cwtl
xchg
add
add
aas
inc
js
mov
add
cmp
xchg
enter
dec
add
in
mov
adc
or
fiadds
cmp
dec
icebp
clc
cmp
jbe
mov
jle
sbb
dec
mov
aam
lar
push
rorb
pmulhw
movsl
push
jne
adc
cmpsl
std
add
sbb
xchg
and
fcoms
inc
hlt
test
ss
add
and
adc
mov
push
jge
add
pop
jno
mov
cmp
ret
leave
test
lret
icebp
cmc
and
into
add
je
dec
cmp
vmread
mov
cmp
add
loope
out
add
in
call
add
movsb
clc
test
cmp
sbb
add
ljmp
lock
loopne
jp
add
adc
push
xchg
xor
adc
js
add
push
or
pop
fiaddl
xchg
lds
jbe
add
mov
in
clc
shlb
dec
fst
push
loope
psrad
push
ret
js
mov
enter
add
pop
jge
xchg
scas
jbe
into
pop
in
testb
orb
add
jmp
pop
push
aas
dec
dec
mov
nop
daa
mov
rolb
cld
nop
incl
pop
and
jmp
cltd
andb
add
out
testb
push
cmp
rolb
icebp
or
xchg
inc
jle
add
vpcmpgtb
stc
jb
add
and
cmp
fdivrl
or
test
loope
cmp
sbb
mov
add
xorl
repnz
out
add
test
or
hlt
fldl
mov
pop
std
xchg
xor
call
mov
repz
loopne
andb
add
in
imul
or
pushf
fdivr
pop
fisubrl
jbe
xchg
add
pop
data16
xchg
xchg
movsb
mov
iret
jo
dec
out
shr
jl
add
xchg
fwait
stos
lock
sbb
inc
xchg
inc
mov
fadds
popf
inc
adc
pusha
pop
sub
ss
rcll
roll
fs
add
addb
sahf
pushf
lcall
mov
fsubs
adc
xchg
test
mov
and
lret
inc
sbb
add
mov
cld
lahf
je
add
cmpps
out
test
pop
or
add
test
das
xor
push
push
inc
dec
imul
cmp
or
add
mov
ds
sbb
adc
add
lcall
add
or
add
out
in
mulb
pop
pop
testl
inc
sub
mov
iret
outsl
dec
mov
and
cmpsl
or
add
sub
xor
add
or
adc
lret
test
lret
and
add
cs
hlt
jae
mov
sbb
jmp
pop
xorb
add
sbb
dec
fwait
test
mov
loopne
xor
jp
pop
add
rol
enter
fimuls
xchg
fdivs
xor
in
call
xchg
cmpsb
inc
or
ds
or
sbb
and
add
hlt
rorl
push
cmp
ret
add
jmp
hlt
xchg
add
es
popf
cmp
xchg
add
test
fdivs
inc
xor
add
xor
mov
adc
hlt
mov
xor
test
add
test
sub
add
cli
loop
shrb
call
lds
pop
clc
fcomps
dec
pop
xor
repz
in
call
jno
bnd
push
fdiv
pop
jle
push
cmp
pop
sub
fs
insb
cli
fcoml
mulb
lahf
cmp
add
stos
leave
out
mov
mov
pop
pusha
js,pt
je
push
stos
ds
ds
cmpsl
sahf
popl
adc
fdiv
dec
sahf
mov
mov
daa
out
add
addr16
xchg
cmpsl
test
pop
fists
adc
adc
pusha
pop
sbb
and
add
nop
mov
dec
xchg
cli
mov
mov
lcall
outsb
xor
and
and
mov
loopne
add
popa
xor
pushf
jbe
insl
mov
jns
stc
lea
jb
xor
idivb
xchg
pop
xchg
lar
add
stos
jo
jle
xchg
mov
mov
hlt
movsb
add
shr
dec
xor
js
mov
mov
cmp
cmp
inc
add
dec
jp
push
aam
pop
repnz
push
fdivrs
xchg
int3
pop
jg
mov
mov
out
lahf
test
jbe
add
or
adc
inc
mov
daa
sub
inc
dec
jnp
mov
add
dec
das
fsub
je
sar
jp
cmp
mov
js
mov
push
add
mov
ret
cmp
ds
inc
addb
fldcw
and
add
std
xorl
ret
adc
lret
sbb
add
adcl
mov
ret
or
test
or
aas
fcomps
dec
dec
cmpb
daa
add
jp
mov
rcll
cmp
inc
adc
add
jge
orl
loope
jmp
or
mov
aas
pop
setae
test
xchg
sbb
test
into
mov
mov
lret
lock
add
add
cmp
jecxz
out
and
stos
femms
add
iret
inc
addr16
rclb
add
jo
in
fiaddl
xor
mov
push
imul
into
add
cld
jle
dec
fiaddl
in
call
lock
cmp
in
lahf
test
fidivs
mov
jle
cli
pmuludq
lods
subb
pop
jp
and
mov
fidivs
push
cmp
aas
push
push
fcmovbe
lret
jle
mov
or
fadds
fcoml
ret
add
shl
jle
sub
outsb
mov
add
pop
test
push
mov
sub
add
add
addb
leave
dec
int
dec
aad
and
inc
ja
vmptrld
jb
pop
iret
repz
cwtl
fisttpl
add
out
xchg
repz
nop
sti
repnz
fsubr
pop
pop
pop
jo
cmp
insb
mov
enter
add
rolb
leave
add
stos
adc
add
js
and
and
jmp
mov
add
outsb
daa
mov
call
mov
test
rclb
sub
mov
add
dec
add
int
aam
lock
cmp
dec
adc
mov
mov
add
xor
xchg
insb
add
sbbb
xor
cmp
mov
jle
cs
les
adc
push
xchg
cmp
jle
ret
movb
add
and
aas
out
jmp
je
jno
out
loopne
cmp
adc
push
stos
add
sub
aam
loopne
add
popa
mov
je
or
cmp
sub
cmp
out
sub
xchg
and
mov
js
subb
mov
push
add
mov
jmp
adc
in
scas
add
jp
sub
add
or
aas
cli
pushf
jo
add
xor
add
xchg
jp
fadd
daa
shl
add
in
adc
or
mov
cmp
imul
pop
aas
gs
add
jo
pop
inc
jns
jbe
mov
xor
add
pusha
int3
inc
pushf
cli
pop
nop
adc
or
jno
jns
add
mov
lcall
add
fsts
add
jbe
cmpb
aas
mov
test
xchg
sub
add
push
cmp
and
out
jle
dec
or
sbb
cwtl
add
jne
negl
xchg
rcrb
mov
fsub
loope
out
in
lock
das
str
cmp
clc
test
dec
data16
leave
dec
mov
fs
cltd
mov
lcall
cmp
inc
cmp
add
dec
sub
add
jecxz
jmp
xchg
add
add
or
inc
inc
add
and
out
cli
nop
and
call
lcall
push
xchg
loopne
scas
hlt
mov
mov
lods
aam
je
aas
add
or
sbb
and
pop
data16
add
adc
or
icebp
and
cmp
jo
jge
cmp
lahf
inc
xor
leave
add
xor
adc
push
dec
xor
subb
test
call
pop
xor
inc
xor
pop
int3
bound
add
mov
das
adc
popa
sahf
dec
add
call
lods
leave
shl
rcrb
add
adc
xchg
mov
ret
pushf
shlb
mov
subl
dec
add
negb
hlt
push
cmp
dec
shlb
add
sahf
das
or
sub
cmp
outsb
cmp
add
popa
shlb
mov
rorb
adcb
ljmp
lock
adc
or
sub
xor
pop
dec
icebp
jg
xchg
and
cld
mov
ss
fiadds
dec
inc
mov
pop
add
gs
outsb
pop
jns
mov
andb
add
lahf
clc
xchg
add
cld
adc
clc
push
jae
add
cltd
in
pop
mov
dec
sbb
sub
cld
add
popaw
cwtl
mov
scas
push
and
in
xchg
mov
adc
les
and
or
call
xchg
add
mov
mov
pop
xlat
mov
enter
cmp
shll
add
outsl
insb
push
aas
subl
add
lock
sub
mulb
add
rolb
xlat
push
xor
adc
aas
add
dec
call
imul
popf
cs
jbe
lret
cld
aam
je
cmc
lahf
out
test
or
push
test
adc
dec
das
lcall
and
movsl
xor
add
rclb
pop
ror
jecxz
cwtl
cld
or
push
cmp
cmpl
xor
xchg
push
clc
pop
loop
sbbl
mov
pop
jle
sub
in
or
scas
push
mov
dec
cld
mov
sahf
add
je
pop
fs
mov
icebp
adc
enter
rcrb
dec
clc
lret
scas
mov
repnz
mov
cmp
popf
pop
test
jmp
movsb
jg
mov
int3
add
add
sbb
sbb
and
mov
scas
inc
cmp
xchg
cmpsb
lahf
mov
inc
in
sbb
xchg
sbb
and
dec
mov
insb
pop
je
cmp
mov
sbb
call
rorl
les
jo
js
push
pop
push
mov
inc
test
xchg
mov
addl
mov
sbbb
xor
into
add
stc
and
lret
les
jbe
push
movsb
call
lods
mov
in
dec
mov
add
sub
aas
cld
jo
add
shr
and
and
lcall
pop
ljmp
inc
arpl
mov
lock
jae
jl
jo
xchg
in
dec
cwtl
jbe
dec
mov
gs
sarb
ja
push
mov
call
hlt
jne
push
popa
push
sarb
cmp
les
popa
cs
lahf
jg
cmc
xchg
inc
mov
dec
sete
pop
push
and
shlb
push
xchg
jl
iret
sub
add
scas
add
nop
pusha
call
jmp
mov
xchg
push
nop
cs
mov
xchg
add
sub
mov
cli
das
pusha
cs
jne
int3
loopne
push
or
xchg
in
xor
mov
sbb
in
adc
sub
nop
sub
mov
jge
mov
push
push
push
mov
stos
into
sbb
es
cmp
ret
push
call
enter
js
mov
repz
stos
and
jbe
ss
push
add
mov
add
pushf
inc
and
add
pop
cmp
dec
adc
adc
nop
call
or
pop
and
cltd
sub
add
mov
incl
pusha
or
fstpt
xchg
mov
lea
loopne,pt
xor
and
mov
sti
add
sti
push
sbb
add
or
push
xchg
popf
mov
add
inc
add
sub
test
add
rol
push
add
push
add
cmpb
mov
aas
xor
or
add
je
js
xlat
add
sbb
add
add
in
sub
addl
add
dec
jge
push
loopne
js
pop
bound
add
add
movsl
lea
loope
jge
add
mov
sbb
jge
jp
dec
roll
jg
aam
in
call
stos
dec
ret
loopne
sbb
shlb
mov
mov
pop
and
mov
cmpsb
add
jle
sub
aam
jge
lods
add
out
shr
enter
into
or
sub
and
jecxz
sldt
pop
ljmp
push
push
mov
loop
in
sahf
faddl
popa
movsl
mov
and
or
cmc
ret
push
nop
out
add
sbb
push
push
lock
outsb
dec
and
mov
push
xor
jp
adc
stos
sbb
sbb
add
sbb
mov
or
movsb
mov
inc
movsl
jne
mov
inc
add
push
stos
mov
add
add
test
pop
add
outsl
and
add
xor
jecxz
lcall
adc
fdivrl
sub
jle
rorl
dec
roll
add
arpl
ds
jnp
cmp
push
int3
fs
add
push
and
add
lods
push
adc
add
jmp
push
xchg
dec
leave
inc
adc
flds
and
cmp
add
adc
cmp
shrl
sub
xchg
sbb
pop
add
rcr
push
add
fiadds
dec
cwtl
mov
daa
xor
xchg
dec
mov
add
fcom
addl
xor
add
leave
testb
or
je
add
pop
add
int3
sub
push
sub
mov
cmpl
fsubl
inc
add
jae
pop
or
xchg
add
jge
out
push
pop
loope
es
lret
std
jle
jne
repz
rclb
dec
mov
and
popl
jg
mov
fldpi
xchg
nop
cltd
jl
sbb
xor
push
loop
adc
dec
jnp
adc
sti
lock
test
fs
pop
aaa
std
add
push
sbb
add
mov
repz
add
cwtl
inc
push
sub
or
out
jmp
test
cmp
mov
js
je,pn
lcall
inc
scas
inc
ret
add
repz
or
test
mov
stos
fcomp
push
xor
mov
add
ljmp
test
ss
add
and
setno
mov
aas
iret
fcomps
mov
or
sti
cld
shrl
scas
hlt
pop
movsb
add
adc
test
lea
xlat
add
add
mov
pop
pop
clc
aas
jns
add
and
clc
invd
sar
in
add
sub
insl
loopne
and
lds
mov
ljmp
add
pop
add
aaa
adcb
xchg
add
test
fdivs
cld
test
jmp
sub
adc
clc
or
rcr
xchg
cmpl
push
jae
mov
xchg
and
dec
mov
rcrl
fistps
pusha
aas
jnp
jbe
jne
cmp
xchg
into
sbb
mov
add
xlat
test
inc
mov
push
push
cli
in
shlb
movsl
ret
filds
dec
xlat
fldl
repnz
pop
daa
gs
jg
sub
xor
mov
mov
movsb
std
add
mov
cmpl
cmp
cs
sbb
and
imul
hlt
xchg
aaa
dec
lahf
inc
add
xor
push
add
test
xchg
mov
sub
add
cmc
ret
push
pop
pusha
sbb
imul
or
add
xchg
aam
cs
leave
add
xor
pop
xor
in
xchg
push
and
or
or
dec
sti
sbb
std
lods
sbb
mov
mov
icebp
in
mov
mov
cmp
dec
add
inc
sub
jae
int3
cmp
add
add
sbb
push
add
es
add
or
add
aas
sub
out
stos
mov
shll
mov
mov
sbb
dec
into
andb
dec
add
and
pusha
lcall
lea
in
mov
enter
int3
and
ret
push
lcall
jge
jbe
rolb
add
dec
jne
ret
cmp
mov
or
rorb
aas
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
sub
ficompl
aad
mul
sub
loope
mov
and
jmp
dec
shl
mov
mov
xor
jo
arpl
jae
and
add
inc
lock
xchg
fisttpll
ja
fdivs
add
add
roll
stos
mov
mov
push
pop
in
sbb
iret
cld
popa
add
or
jns
das
adc
imul
add
ds
imul
pop
or
pop
or
clc
outsl
out
stc
arpl
addb
sbb
icebp
jae
cmpsl
inc
jne
mov
sub
sti
mov
shlb
outsb
je
adc
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
jb
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
add
les
lds
mov
jne
aaa
stos
test
jo
leave
jecxz
push
popa
xor
mov
out
jnp
add
lret
mov
xchg
rcll
mov
js
mov
sbb
push
cmpsb
out
xor
pop
push
cmpsb
je
aas
cld
imul
lcall
lock
jle
mov
lock
sub
lods
pop
dec
aas
sti
pop
mov
adc
sub
into
jecxz
mulb
fidivl
in
and
adc
mov
add
pop
pop
outsl
xor
shrl
pop
and
cld
outsl
xor
iret
xor
imul
fs
jp
jb
jle
xchg
clc
mov
inc
cmpsl
jl
dec
clc
int
xchg
dec
jmp
dec
sub
inc
out
lea
add
addr16
xor
cmpsb
pusha
popf
push
cmpsl
clc
pop
lret
xchg
fnstsw
scas
out
lods
jns
sub
ljmp
in
lods
jecxz
add
iret
mov
pushf
repz
movsl
mov
pop
jns
in
not
testb
xchg
inc
repz
in
pop
idivb
pop
xor
mov
ret
insb
out
jns
mov
aam
lods
pop
mov
or
sbb
push
adcb
push
and
xor
xchg
movsl
jge
xchg
push
int3
enter
popa
pushf
push
shrl
pop
rcll
rclb
lock
and
push
test
adcb
ja
mov
popf
cmp
insl
repnz
mov
aam
out
bound
lahf
fwait
pushl
ljmp
pop
inc
mov
faddl
adc
lods
das
shll
jbe
push
and
jmp
cmp
stos
lods
ljmp
dec
int3
popl
test
sbb
sbb
adc
push
sbb
stos
push
mov
xor
stos
mov
cltd
repnz
mov
sbb
enter
in
sbb
frstor
pusha
mov
sub
cmpl
js
fbld
jmp
add
stos
and
and
sub
jno
inc
mov
cmp
lret
in
mov
mov
insb
xchg
lret
mov
inc
ljmp
jmp
aad
xchg
jle
in
jp
sub
jg
fwait
aaa
loopne
popf
lret
shll
jnp
hlt
pop
xchg
in
sbb
mov
daa
dec
mov
jp
push
inc
xor
movups
xchg
sbb
mov
insl
fs
std
mov
std
hlt
rol
jno
jge
jns
pop
addr16
sub
mov
mov
iretw
cmp
mov
in
adc
repnz
mov
jle
orl
mov
popa
adc
out
pop
xlat
or
test
scas
sarb
mov
stos
jb
mov
pop
insl
out
adc
lods
data16
dec
aas
aas
jle
inc
and
addr16
rclb
mov
xor
lcall
push
inc
jle
cmpsl
fsubs
rolb
in
inc
push
sbb
cs
xorl
add
fists
mov
loopne
push
lcall
xorl
sub
mov
xchg
cmc
mov
lods
and
xchg
pop
repnz
xchg
enter
mov
out
cmc
xor
cli
inc
mov
pop
popf
inc
mov
cmpsb
xorb
fimuls
inc
mov
jg
into
sbb
jl
bound
jle
fwait
cmp
fsubr
in
cld
imul
enter
hlt
sbb
mov
sbb
clc
out
dec
jb
sub
cmp
imul
xor
push
mov
rcr
mov
and
iret
ret
int3
ss
cld
push
and
sbb
xlat
xor
mov
sahf
stc
sbb
fcmovnbe
into
pop
xchg
in
push
adc
pop
outsl
fyl2x
xchg
jmp
pop
mov
inc
mov
ds
pop
and
xor
xchg
mov
xor
insb
mov
dec
dec
out
pushl
pusha
sub
jge
xchg
test
aad
xchg
mov
cmp
popf
scas
int
mov
mov
js
push
pop
xchg
or
push
jns
jp
repnz
mov
in
in
cltd
push
add
xchg
jae
stc
sub
and
xchg
jbe
or
xor
add
movsl
imul
loopne
aam
pushf
imul
push
outsb
sub
jb
mov
cmp
add
outsb
rcrb
dec
and
mov
jmp
cld
ds
cmc
mov
adc
inc
pop
dec
sub
sub
daa
sti
rcrb
sbb
cmpsb
mov
nop
adc
test
dec
push
jecxz
imulb
aas
cmp
sbb
or
sbb
mov
test
or
cltd
or
scas
cmp
enter
stos
xor
and
fincstp
lret
xor
adc
xchg
add
inc
add
icebp
sbb
out
xchg
mov
adc
ljmp
dec
jnp
inc
adc
rolb
adc
push
in
push
or
mov
pop
shlb
cli
test
into
mov
jae
mov
pop
inc
jae
push
imul
add
sarb
fbld
xchg
inc
movsl
sbb
insb
lock
mov
icebp
aas
add
push
push
cwtl
or
fisttpll
push
jno
and
cmp
inc
jle
nop
pop
dec
adc
xchg
clc
sub
lahf
mov
cmc
fsubs
sbb
pop
cmp
pop
add
push
mov
add
cmp
push
outsl
in
icebp
mov
stc
cmp
push
adc
cmp
test
shll
insl
xor
icebp
punpckhwd
mov
adc
aaa
shlb
mov
mov
fsubrl
sub
sub
push
repnz
fisttpl
push
sub
xor
loopne
call
mov
scas
ficomps
rorb
and
js
rolb
xchg
stos
pop
lcall
insl
mov
jno
gs
or
fcoml
xchg
popa
jb
adc
lret
leave
and
sbb
dec
int3
mov
iret
add
aaa
loopw
or
gs
cwtl
jecxz
or
inc
popa
mov
mov
inc
lock
and
push
jp
out
or
int
inc
jbe
mov
sbbl
cmpsb
and
pop
mov
inc
out
outsl
cld
mov
xor
rorb
call
fwait
pop
fimull
mov
jp
jb
scas
mov
mov
jo
xlat
cltd
jno
pop
sahf
dec
and
andl
dec
jne
stos
mov
aas
loop
jne
insl
sbb
enter
leave
mov
popa
fdivrs
enter
jo
bound
lock
xlat
gs
cld
cmpsb
rclb
sbb
pop
jb
or
mov
js
mov
add
int3
push
push
je
stos
jle
cld
mov
bound
adc
ljmp
pop
dec
int3
add
mov
mov
xchg
shll
push
inc
gs
push
jl
mov
mov
sbb
or
aad
sub
xchg
inc
sbb
sahf
mov
ss
push
into
out
imul
mov
pusha
out
add
aaa
inc
or
lret
scas
jbe
mov
ss
sub
jbe
ljmp
dec
ret
and
test
cld
lcall
push
add
bound
jno
dec
xlat
ja
test
sbb
jmp
xor
es
inc
int3
gs
leave
aas
imul
cmc
mov
into
sub
pop
mov
inc
cli
and
cltd
hlt
sbb
stos
mov
pop
cmc
out
aad
mov
aad
loope
jb
orl
mov
inc
mov
adc
mov
cli
enter
test
jmp
pop
repnz
sbb
or
and
and
add
bnd
jne
dec
lock
loope
xchg
daa
cmp
mov
mov
scas
add
outsl
pusha
movsb
cltd
fsubl
mov
pop
fcoms
push
sbb
mov
pop
sub
insb
clc
lods
sbb
imul
push
rcrb
les
ret
push
lock
aad
push
test
loop
push
mov
pop
cmc
addl
fstpl
pop
mov
adcb
jecxz
push
mov
mov
shlb
test
inc
mov
cmp
push
insl
xchg
add
lods
push
ds
push
mov
in
sub
js
lock
scas
dec
fistpl
outsb
loop
out
push
pop
sarl
mov
jl
out
pusha
cmp
and
cmp
inc
xor
cmp
decl
out
cmp
inc
out
add
enter
iret
xor
ret
mov
jecxz
leave
pusha
insb
loopne
and
orl
mov
imul
stos
and
movsl
xlat
repz
dec
dec
inc
push
add
pop
inc
jo
pop
insb
pop
gs
aaa
xchg
jno
fstpt
or
movl
add
cli
jno
orb
clc
push
into
loop
scas
xchg
and
pop
pop
and
aaa
cmp
mov
ret
dec
ss
adc
les
shlb
jle
push
mov
or
xor
jnp
sub
scas
jmp
mov
cltd
aam
pop
xlat
or
in
aaa
xor
mov
push
sti
inc
adc
aam
xor
xchg
in
popf
out
push
shrb
pop
ljmp
fstl
shlb
cmp
in
test
into
les
xchg
sub
and
or
lods
jno
jmp
push
je
xchg
mov
gs
lea
stos
dec
jns
mov
and
jge
jg
sub
cmp
sti
repnz
xlat
pop
inc
imul
mov
sbb
mov
inc
ss
aaa
mov
out
mov
inc
pop
in
sbb
xchg
sbb
mov
shll
jecxz
mov
push
scas
addr16
loop
jns
lods
jmp
or
mov
sti
mov
cmp
mov
xor
inc
jbe
push
jmp
sti
pop
bound
jns
aas
sbb
popf
jo
ljmp
xor
lods
and
jge
mov
leave
in
lret
adc
hlt
or
push
insb
fwait
mov
mov
aam
sahf
lods
xchg
inc
ja
in
mov
xor
add
lock
fcmovnu
push
xchg
cmpsl
cmpsl
xchg
int3
cltd
inc
xor
adc
xor
mov
lods
out
push
dec
mov
and
jle
pusha
cmp
xchg
scas
js
add
sbb
and
mov
mov
nop
or
add
jg
add
lahf
mov
jns
jno
ds
mov
push
cmp
jg
jne
inc
xchg
cwtl
out
sbb
popf
insb
fcmovu
push
outsl
xor
jmp
and
andl
cwtl
inc
jle
mov
rcrl
inc
push
lret
add
jnp
adc
xchg
aaa
dec
inc
sub
cmp
lahf
leave
cmp
xchg
je
dec
cs
jns
sbbl
cmp
es
sti
movsb
xchg
fmull
sti
xor
and
fisttps
sbb
aam
pushf
iret
mov
aaa
fcmovu
je
dec
adc
nop
lahf
in
scas
mov
cmp
push
mov
xchg
leave
xlat
popa
movsb
pop
sbb
pop
dec
jnp
mov
dec
pop
stc
jmp
mov
repnz
add
arpl
push
add
adc
icebp
jne
fnstenv
dec
shrb
xchg
xor
out
xchg
xor
or
and
mov
jo
aad
xchg
push
into
jnp
shll
jae
shlb
push
sbb
stos
cmc
sbb
stos
bound
out
pop
dec
mov
loopne
std
movsl
adc
and
ljmp
push
ret
sbbb
lret
inc
mov
mov
jno
lea
dec
lds
mov
push
or
mov
adc
or
aam
mov
and
xor
popa
nop
stos
mov
inc
scas
push
mov
out
or
xor
subl
in
lahf
ror
inc
xchg
sub
lods
das
jge
push
dec
inc
dec
and
das
sbb
nop
jbe
sbbb
call
or
add
pop
mov
out
cmpsl
pop
les
push
test
dec
mov
mov
test
in
xlat
pop
sbb
std
repnz
mov
in
ret
xor
cmp
pop
insb
jne
jbe
cmc
mov
sub
shrb
mov
lods
out
fsubr
pusha
gs
nop
or
xor
daa
imul
insl
xchg
stos
xor
test
psrlq
and
push
repz
mov
mov
lcall
jecxz
shrb
pop
inc
xchg
mov
add
jbe
jmp
xor
mov
xor
out
into
ljmp
ja
push
sbb
in
mov
enter
imul
shll
adc
sub
xlat
ficomps
inc
xor
andb
cltd
inc
push
in
sahf
push
int3
aas
in
mov
mov
fidivrl
inc
les
sbb
inc
sbb
dec
jnp
popf
ljmp
pop
xlat
call
roll
es
sub
pop
std
out
cltd
cs
xchg
dec
jne
pop
jbe
nop
jbe
dec
mov
jge
fisubl
ljmp
divl
rorl
into
xchg
mov
pop
jmp
nop
push
mov
ds
aas
or
or
outsl
fisttpl
sub
in
out
enter
mov
pusha
mov
insl
out
inc
aad
cmpsb
fwait
push
pop
hlt
jbe
xor
mov
xchg
out
xchg
and
add
dec
xchg
sbb
jnp
sub
les
cld
inc
test
mov
adc
inc
xor
fiaddl
cmpsb
xchg
push
inc
stos
imul
test
jge
je
mov
or
dec
sahf
add
sar
loop
stc
test
cmpsl
cli
cli
xchg
insl
in
test
data16
loope
test
test
cmp
pop
cmpsb
in
and
lret
xchg
jle
fbld
adc
icebp
hlt
shrb
or
pop
adc
in
fsubl
sub
jnp
jmp
nop
int
pop
push
jg
imul
xchg
mov
push
sbb
add
jbe
movsb
clc
cmp
push
out
xchg
rorl
rcr
cs
xor
push
mov
sub
testl
loopne
shl
lods
filds
cltd
jg
fisubl
aas
aaa
lea
lds
pushf
jb
sbb
fnstenv
lcall
je
xor
mov
rol
scas
imul
shll
xchg
dec
push
dec
cmp
push
adc
loopne
pushf
js
jecxz
je
iret
push
mov
inc
mov
ja
enter
imull
cmp
sbb
loop
stos
test
and
pop
inc
sub
andb
inc
fldl
icebp
jge
imul
sub
iret
popf
data16
scas
fcmovnbe
test
js
or
or
repz
sub
or
loope
jg
mov
mov
inc
push
sub
cwtl
xor
movsb
cwtl
rol
popf
inc
outsb
cwtl
lea
cld
sub
xor
or
loop
push
push
cld
pop
jo
lods
lea
mov
fldt
ret
sub
jmp
test
dec
movsl
aam
neg
nop
pusha
scas
push
xchg
jecxz
lret
movsb
movsb
jge
cmpsl
std
xor
arpl
into
xchg
pop
push
fdivrp
pop
fs
notl
add
inc
sbb
xor
inc
je
insl
ret
dec
xor
hlt
pop
push
aad
test
cmpsl
dec
stos
scas
inc
sub
pusha
dec
push
or
mov
outsb
sbb
test
xor
ret
pop
and
popf
mov
push
lret
stc
xor
negl
pop
add
pop
pop
imull
or
test
inc
lahf
jl
loopne
out
lods
xor
divl
pop
imul
xor
xchg
push
lret
sub
daa
es
aaa
stos
test
leave
adc
cld
push
jae
sub
add
xchg
mov
dec
mov
mov
pop
or
jp
aad
xlat
test
xchg
aad
or
cltd
jge
fnstenv
inc
and
pop
andb
mov
aas
mov
les
repz
pop
loope
mov
push
sub
test
push
stc
pop
in
mov
pop
sbb
out
cmp
jl
adc
popa
mov
push
mov
mov
data16
adc
pop
sub
out
mov
movsl
pop
xchg
loopne
out
pop
aam
shll
or
inc
stc
es
push
popa
pop
and
int3
iret
dec
mov
testb
les
sub
push
mov
pop
loopne
or
xchg
xchg
fsubrl
les
or
stc
jnp
fdecstp
mov
or
lahf
cltd
mov
and
mov
jle
ror
sarb
mov
int3
adc
and
and
or
mov
add
and
bound
sbb
xchg
and
inc
mov
test
inc
jge
cld
js
mov
xor
mov
rclb
dec
int3
add
ja
mov
sbb
hlt
addl
lret
loop
lcall
lds
pop
adc
jns
push
icebp
xor
aaa
stc
jbe
jge
jb
inc
lcall
mov
daa
cs
nop
popa
push
jae
and
xchg
mov
clc
in
push
cmp
mov
and
mov
stos
popa
shll
decb
jl
jbe
adcl
shll
fisubrs
cs
and
jp
inc
imul
in
inc
cli
and
pusha
xorl
cmpsb
jbe
lock
cs
xchg
bound
pop
push
push
push
jb
adc
fldcw
pop
sub
lcall
fsubr
fsubs
mov
arpl
lods
movsb
sub
jno
sbb
decl
cmpsb
fldenv
cmc
cmp
xor
or
cld
mov
mov
cld
push
scas
mov
pop
jp
int
add
rorl
jmp
jo
inc
push
lea
popf
int3
push
mov
sti
cmp
mov
test
fldl
out
lcall
push
fidivrl
ss
fsubr
jge
std
lds
idivl
xchg
pop
das
pop
icebp
or
adc
and
and
pusha
mov
das
add
adc
inc
fisubrl
aam
leave
push
popa
dec
in
in
jge
xchg
push
nop
push
insl
or
push
test
les
arpl
xchg
xchg
dec
cmpb
rorl
aaa
jne
cltd
lea
nop
dec
xor
push
cltd
hlt
cmpsl
xor
stc
dec
adc
jne
imul
ret
adc
and
pop
mov
mov
sub
in
aam
test
lods
pop
push
lret
loopne
lahf
popa
pop
jae
pop
mov
dec
mov
bound
cli
shll
mov
cli
jmp
cmpsb
mov
dec
or
int3
mov
jns
outsl
outsb
or
mov
in
pop
fdivr
pop
fcomip
xchg
fs
leave
dec
out
inc
xor
push
cmp
cmpsl
and
push
loope
ficomps
loopne
cmp
inc
gs
ror
popa
cmpsb
cs
push
in
pop
mov
repnz
loopne
imul
and
ret
jb
sarl
in
arpl
pop
enter
cmpsb
aas
in
add
ret
jne
loopne
out
cmp
adc
into
xor
xchg
add
dec
cwtl
xchg
push
repz
imul
pop
xchg
scas
pop
pop
rorb
jecxz
sbb
push
fmuls
or
xchg
cltd
pop
inc
push
mov
lods
add
roll
push
jnp
loope
test
cmpl
and
repnz
adc
movsl
mov
pop
pop
adc
lods
movsb
outsl
xor
and
movsb
cmp
and
clc
xchg
fstpl
aam
pop
pop
das
add
aad
jge
dec
out
sub
push
popa
xchg
jnp
outsl
mov
push
pop
push
pusha
xchg
add
add
pop
sbb
jbe
out
adc
lret
add
xchg
xchg
pop
lret
push
sti
mov
test
ret
adc
cltd
es
jg
or
ret
and
ficoml
xchg
fimull
xor
loop
mov
mov
int
arpl
je
push
inc
out
mov
divb
push
aas
aad
jg
mov
cwtl
mov
sbb
sub
push
mov
ffreep
es
dec
shll
enter
ret
insb
push
incb
cli
enter
sub
sbb
pop
test
sub
and
sbb
insl
mov
insl
jp
push
dec
cmpsb
or
xchg
pop
pushf
mov
push
mov
jle
mov
push
addr16
xor
repz
xor
pop
sbb
push
inc
js
adc
or
or
sub
jp
rcll
jle
xor
es
clc
pop
test
push
fcompl
rolb
bound
std
or
loopne
or
test
cld
jbe
pushl
push
test
ja
aad
push
fldenv
xchg
mov
push
ficomps
jo
or
mov
jbe
popa
movsb
mulb
xchg
rclb
dec
cmpsb
sbb
push
mov
dec
mov
inc
call
in
push
stos
mov
jle
jmp
mov
xor
int3
adc
out
popf
jb
rol
lea
mov
loope
pop
inc
les
pop
mov
pop
lcall
xor
sbb
sti
fiadds
push
push
lret
cmp
cltd
pop
sti
sbb
cs
ja
bound
fldl
das
loope
xor
mov
dec
or
icebp
cmpsb
mov
jb
pop
xchg
mov
inc
fistpl
mov
repnz
sub
test
jbe
mov
out
in
scas
add
dec
sbb
or
xchg
adc
cmpl
pop
inc
mov
push
jle
xchg
jns
rcrl
jge
mov
je
les
xlat
push
ret
and
arpl
xchg
sbb
pop
es
in
test
xchg
lods
data16
sahf
jg
add
sub
lea
addl
pop
xorb
or
int
sbb
jecxz
movsl
jnp
push
mull
jns
add
imul
fcomps
pusha
ret
hlt
xchg
rcrl
cmp
add
mov
int
ret
xchg
call
xchg
sbb
daa
cwtl
sbb
pop
mov
mov
pop
pop
sub
test
cltd
shl
gs
xor
idivl
or
pop
xor
iret
mov
mov
mov
jb
test
sub
lcall
das
or
inc
ljmp
hlt
imul
fsubl
fisubl
loop
xor
inc
xchg
subl
in
pop
dec
andb
hlt
xchg
sti
xchg
sub
lds
push
inc
jle
leave
int
test
jb
out
add
xor
fdivl
ror
sbb
sbb
fdiv
and
shll
cld
push
cmpsl
mov
hlt
push
fldt
stc
cld
xchg
xchg
imul
add
sar
xor
cmp
xchg
pop
mov
sub
aad
rcll
test
jecxz
mov
std
movzwl
scas
insb
inc
dec
mov
dec
mov
aaa
xor
fistps
xor
jns
sub
lds
jno
cltd
loopne
int3
in
mov
jmp
call
push
imul
mov
xor
jae
inc
sub
fisubrs
movsb
pop
test
sub
push
int3
add
xor
stos
cmp
sbb
hlt
lret
xor
mov
pop
sbbb
daa
mov
mov
sub
imul
inc
js
push
das
sub
cmp
pusha
add
cwtl
mov
inc
pop
xchg
sub
das
push
mov
mov
or
pop
into
cltd
jg
push
cld
cmpsb
outsb
pop
adc
push
popa
dec
push
adc
popf
cmp
in
and
repz
cmc
push
add
out
push
pop
mov
cmp
loope
hlt
lret
jns
and
or
xchg
or
std
popa
xor
push
test
mov
std
push
in
ret
ret
inc
mov
mov
dec
aam
dec
sarl
and
or
shll
pusha
mov
mov
lods
jmp
mov
push
xchg
in
mov
jno
pop
xchg
fcomps
arpl
lret
mov
sbb
push
pop
ds
push
inc
mov
cmpsb
insl
and
pop
push
leave
mov
pop
cld
xor
fidivrl
movsl
adc
xchg
jmp
ret
push
outsb
insb
push
fisttps
or
nop
add
enter
lret
sub
mov
popa
sub
dec
test
mov
pop
test
movsb
bound
int3
inc
dec
aaa
lret
adc
fbld
popf
push
std
jle
adc
adc
and
cld
stc
in
cmc
out
pop
jno
cmp
and
adc
fndisi(8087
popf
jle
leave
js
lret
xor
les
sbb
jns
popa
xchg
jno
mov
xchg
cltd
sub
les
add
loopne
jne
push
aad
shll
lret
loope
int
jp
cwtl
push
mov
lds
test
mov
insl
xchg
lods
icebp
adc
sbb
push
hlt
fcoms
cmp
and
xchg
fidivrl
sbb
push
stos
and
or
jmp
inc
xor
mov
inc
adc
fcomi
adc
inc
out
jecxz
adc
mov
add
sti
iret
add
cmp
fisttps
ljmp
out
xchg
xor
or
shlb
xchg
nop
jmp
mov
sbb
jo
lcall
shll
jp
stos
sbb
jb
rolb
repnz
inc
xlat
or
adcl
psubsb
add
leave
xchg
xchg
pop
lds
test
pop
int3
fwait
ret
adc
cmc
adc
push
push
mov
dec
jp
pop
call
push
test
or
das
dec
fsubp
loopne
sub
xchg
cmp
lods
jecxz
pop
mov
add
mov
stos
jle
lret
negb
adcl
out
lods
hlt
mov
les
sbb
aaa
mov
loop
mov
mov
mov
mov
scas
pop
xchg
xor
inc
and
iret
loopne
cmp
clc
jecxz
xorb
sti
call
bound
in
xchg
mov
enter
lods
or
mov
adc
cld
fs
inc
push
pop
add
scas
push
push
add
mov
insl
arpl
fisttpl
sbb
cld
pop
cmp
bound
out
mov
iret
sbb
xor
push
push
adc
insb
in
pand
fs
dec
cwtl
push
inc
push
sarl
mov
mov
adc
sti
daa
push
push
mov
pop
popf
and
lcall
pop
ret
sbb
push
pop
shlb
push
cmp
jns
das
cmp
add
sub
jecxz
arpl
es
mov
cwtl
icebp
xchg
dec
je
out
jbe
mov
jae
filds
shl
xchg
clc
dec
cmc
gs
inc
mov
lcall
aaa
cmpsb
mov
and
adc
add
sbb
fld
sahf
cld
add
mov
push
cmp
add
add
scas
mov
mov
mov
lcall
lods
jmp
lret
out
les
mov
in
pop
pop
jl
jmp
ss
outsb
xchg
jae
divl
jecxz
aaa
push
dec
shrb
aad
fs
lret
jbe
xor
cmpsb
shll
jmp
lret
mov
pop
mov
cmp
gs
mov
pop
ja
rcrb
pop
lcall
cli
cmp
lock
inc
daa
movsb
repz
cwtl
lock
fcompl
inc
cmp
aas
or
inc
xlat
push
pop
xchg
pop
test
pop
insb
jp
dec
add
stos
push
xorl
or
sub
lea
aaa
mov
movsl
pop
js
jo
adc
enter
mov
sti
loopne
iret
push
scas
cltd
testl
add
loopne
orb
inc
sub
movsl
pop
adc
aam
in
push
jmp
pop
pop
lods
ja
xchg
inc
add
pop
cmp
cmpsl
mov
les
shll
push
mov
xchg
rcr
adc
pop
movsl
or
loope
jns
add
mov
fxch
aas
ja
pop
or
mov
sahf
int
mov
adc
sti
dec
mov
mov
mov
les
lret
adc
xchg
dec
loop
sub
cmpsl
fbstp
push
lods
outsl
pop
jge
mov
mov
push
in
cmp
insl
addr16
xchg
leave
sub
ret
aas
dec
cmp
mov
frstor
repnz
aaa
jmp
jp
cmpsl
and
or
lret
xor
test
lds
jbe
aam
mov
lahf
imul
mov
aad
negl
add
out
jl
mov
nop
push
sub
jae
insl
jo
call
push
iret
fmull
lds
lds
sub
mov
or
test
xor
jae
mov
adc
mov
cmp
xchg
or
inc
push
pop
adc
pop
and
repnz
jae
xchg
insl
and
xchg
add
xor
push
push
icebp
jb
dec
cmp
cmp
sbb
hlt
fidivl
pop
cmp
mov
test
int3
stos
aas
stc
gs
lods
pop
out
cmpsb
sub
bound
or
clc
cmp
ds
xchg
out
imul
repnz
cmp
lea
or
pop
sti
push
mov
adc
jp
stc
jl
stc
stos
std
ss
jmp
lods
xlat
repnz
pop
xchg
mov
in
hlt
jns
clc
clc
repz
int3
adc
icebp
cmp
or
cwtl
mov
filds
addr16
sarl
xor
jg
pop
push
hlt
data16
push
icebp
out
cmp
adc
pop
orb
aas
xor
push
clc
push
dec
cli
mov
sbb
xchg
mov
dec
out
aaa
or
les
les
ss
pop
out
adc
sub
mov
mov
rcr
pop
mov
out
push
gs
jge
lds
lds
cmp
out
fldl
popf
ret
mov
add
cmp
mov
mov
push
divl
shll
fwait
sbb
fisubrl
test
scas
cli
lock
outsb
push
or
cmp
inc
jb
jle
and
fwait
mov
std
push
adc
decl
push
mov
cld
aam
cmp
pop
xchg
jne
adc
mov
and
les
movsb
out
fnsave
push
push
mov
sub
mov
jno
pop
movsl
mov
push
and
cmc
add
loope
pop
mov
mov
xor
jmp
pop
rcrl
sub
xchg
test
fstl
mov
lds
int
mov
stos
rol
ret
mov
leave
sub
movl
mov
ja
addl
mov
aam
test
jnp
cmp
mov
imulb
in
push
push
jg
add
mov
cwtl
cld
sahf
sbb
out
lret
out
pop
call
mov
xchg
mov
cmp
addl
sub
bound
jp
decb
jo
sbb
jp
sti
clc
mov
cmp
popf
stos
sti
sub
push
in
lret
mov
and
adc
or
adc
decb
out
aas
jle
loope
out
sub
ret
outsl
into
jge
and
shll
pop
lcall
mov
test
popf
push
push
imul
xor
dec
cli
test
xor
lcall
xchg
pop
xchg
jmp
inc
repz
jne
sub
cmp
aas
clc
xchg
mov
inc
mov
dec
cmp
lret
mov
adc
pop
je
pop
pop
push
das
leave
or
hlt
clc
inc
inc
setp
pop
inc
out
jbe
mov
xchg
sti
mov
enter
testb
int3
push
repnz
call
pusha
jmp
adc
jge
rolb
push
push
lock
adc
cmpsb
test
push
lods
std
xor
cmp
dec
in
push
enter
pop
cmp
dec
cmpsl
movsl
cwtl
xor
push
dec
mov
in
push
mov
adc
test
test
or
cmpb
std
xchg
int
call
je
cmp
xchg
mov
pop
aas
lcall
enter
lods
and
int3
adc
call
pop
xchg
ret
jmp
or
xor
mov
push
mov
rcrb
and
fisttpl
es
add
jbe
sahf
mov
bound
shll
data16
mov
mov
sub
arpl
or
stos
push
out
or
sub
je
inc
push
xchg
out
adc
and
xchg
push
sub
mov
fisttpll
ficoms
add
xchg
adc
mov
data16
mov
cmpsb
pop
mov
mov
xlat
loop
pop
lock
fxch
loopne
rcpps
cmc
addr16
mov
arpl
dec
in
sub
cmp
jmp
cmpsb
clc
out
xchg
push
imul
cli
jl
add
jl
push
mov
adc
test
pusha
mov
pop
xor
or
sbb
rorb
enter
cli
sbb
ret
js
adc
or
mov
xchg
arpl
xchg
fsubrs
rolb
push
sub
idivb
lahf
adc
int
popl
mov
gs
pop
aaa
nop
add
jbe
xor
ljmp
dec
jbe
test
iret
add
mov
jge
mov
mov
push
mov
add
sbb
daa
jnp
popf
enter
push
cwtl
les
aaa
add
xchg
jecxz
push
cmp
sbb
inc
mov
xor
ljmp
sbbl
mov
lcall
xchg
or
out
imul
xchg
inc
mov
sub
repz
loope
lea
out
sbbb
xchg
sahf
ret
dec
lods
dec
call
adc
mov
shll
ret
pushf
lret
sub
adc
cmpsl
ja
cmp
pop
push
popa
fcomi
ljmp
subl
dec
popf
lea
ss
popf
cmpl
ret
inc
mov
jmp
lahf
mov
ja
addr16
xchg
lret
out
aaa
cmc
xor
jl
outsl
pusha
test
add
int
fs
add
movsl
lock
aas
sub
idivb
push
sbb
in
sub
dec
lahf
mov
iret
in
in
test
fadds
mov
clc
repnz
push
ss
push
cmp
shrb
pusha
mov
add
xchg
ficomps
xchg
into
js
dec
mov
test
ror
fsubl
fidivrs
or
sbb
dec
mov
mov
adc
mov
in
cmp
stos
push
aaa
lods
pop
adc
adc
aad
stc
xlat
std
xor
leave
cmp
dec
hlt
nop
data16
mov
jecxz
cmc
xlat
mov
fidivrs
or
push
sbb
cmp
and
imul
fs
clc
push
mov
jo
popf
push
ret
and
mov
and
mov
pop
mov
pop
or
inc
shlb
int
pop
pop
mov
insl
ljmp
mov
inc
jmp
jge
addl
in
stos
pop
dec
das
mov
pop
sub
loope
lds
jbe
cwtl
push
mov
cmp
xor
iret
sbb
sahf
mov
das
or
xor
fnstsw
and
push
mov
pushf
ret
cmp
cld
in
xor
sub
inc
cmp
test
popa
pop
mov
popf
incb
bound
xor
pop
sub
cwtl
xor
dec
inc
add
jle
jmp
adc
or
stos
mov
mov
add
in
lcall
inc
stos
mov
sahf
sbb
imul
add
aam
cmp
adc
rclb
sti
subb
das
sub
or
sub
xor
cli
test
movsb
lock
and
imul
mov
xchg
loope
imul
xor
in
mov
arpl
mulb
aas
push
add
push
or
or
sub
push
push
inc
xchg
push
mov
scas
mov
jmp
cs
incb
adc
negl
xor
push
fwait
mov
lods
adc
push
ss
add
adc
aaa
bound
or
popf
outsl
sbb
dec
fs
es
ds
pop
sbb
sti
ljmp
jmp
mov
cmpsl
leave
xchg
push
lods
outsb
sbb
and
mov
mov
negl
mov
out
repz
std
clc
out
leave
and
inc
js
ror
test
xchg
dec
adc
jl
in
roll
outsb
mov
scas
fwait
sub
jbe
dec
push
mov
fstps
mov
or
add
jbe
ret
adc
add
push
insb
inc
adc
jo
xlat
mov
cltd
jns
pop
repnz
std
pusha
loop
dec
inc
cmc
and
add
in
pop
fists
add
inc
cmc
xor
inc
aaa
mov
sahf
dec
arpl
les
mov
repz
cmp
add
jg
mov
stc
push
test
gs
aas
and
push
inc
mov
ror
call
mov
dec
into
loopne
or
mov
sub
icebp
testl
mov
and
push
jbe
call
jb
xchg
xsave
aaa
lret
imul
loop
push
sub
cmp
cli
movsb
inc
add
xchg
icebp
cld
mov
cmpsb
pop
cli
mov
push
clc
bound
daa
int
inc
pushf
fldcw
fdiv
pop
lods
cmp
adc
jl
rol
pop
outsb
movsb
testb
sub
js
aas
mov
push
insl
push
loope
out
ja
jno
clc
fsts
insl
inc
cmp
enter
jne
push
ljmp
add
mov
pushf
repnz
cmp
mov
dec
pop
mov
inc
sbb
cmpsb
jp
mov
jmp
cmc
data16
mov
push
pushf
xor
sti
mov
daa
adc
sub
mov
jle
lahf
push
pop
int3
in
xchg
mov
scas
push
xor
xor
icebp
std
pusha
fucomip
inc
push
lret
push
bound
into
sbb
lahf
mov
aam
sbb
into
dec
aad
rcll
mov
data16
sub
jmp
aam
ror
pop
xchg
pop
and
insl
aas
dec
mov
inc
inc
mov
mov
inc
mov
add
je
push
inc
movhps
ds
pop
enter
popf
cmp
mov
fcoms
ss
push
addr16
addb
jns
xor
jns
xorl
out
in
test
adc
jno
rcrb
mov
push
inc
push
call
adc
or
dec
or
imull
scas
mov
insb
lea
es
mov
out
and
int3
push
jae
dec
fld
inc
sub
cmp
sbb
mov
leave
xchg
lret
decl
mov
call
pop
dec
cmp
loop
mov
mov
jne
xchg
mov
addl
push
add
and
in
jmp
mov
ret
aaa
ret
xor
push
jb
mov
jecxz
pop
and
enter
lret
adc
loope
jne
mov
inc
in
dec
nop
loopne
int
pop
rol
mov
sahf
in
out
and
xor
mov
pop
mov
pop
sbb
fcmove
or
xlat
push
dec
out
scas
test
mov
repnz
xchg
test
lret
pop
sub
test
std
fisubrl
mov
ds
cmp
lods
cmp
cld
sub
inc
call
enter
mov
push
lods
push
pusha
popf
ss
mov
les
insl
mov
imul
dec
adc
int3
sub
pushf
stos
cmpsw
out
sbb
int
mov
sub
fwait
or
xchg
xlat
gs
xor
mov
adc
xchg
push
pop
sbb
inc
and
sub
arpl
fisttpl
into
push
imul
mov
test
push
dec
jae
arpl
addr16
repz
mov
pop
mov
outsb
pusha
data16
mov
jmp
mov
sbb
repz
add
xchg
adc
sub
inc
add
pop
popf
pusha
dec
jnp
pop
push
loope
loope
rcrb
pop
jge
dec
fcoml
push
addl
push
push
orb
pushf
popf
fidivrs
mov
in
shrb
push
sbb
mov
fistps
mov
imulb
mov
mov
push
movsb
push
jbe
or
gs
rorb
sub
scas
mov
sti
sbb
clc
adc
push
fucomip
pop
dec
pop
pop
je
rorb
jo
addr16
mov
sbb
bound
out
fsubrl
and
add
jg
push
in
sub
push
les
mov
add
push
sub
or
std
mov
in
inc
out
jge
jnp
scas
cmp
add
cmpl
in
pop
pop
dec
outsl
pushf
ret
jle
je
or
xchg
pop
cmp
mov
mov
aas
mov
es
out
mov
pushf
hlt
inc
xchg
dec
loope
rolb
sbb
push
mov
xor
push
push
mov
or
ja
adc
loopne
sbb
stos
loope
pop
mov
jne
pop
ret
mov
or
nop
push
jle
lods
mov
insw
sbb
daa
add
pop
fsubr
outsb
movsb
lret
addr16
fistps
dec
fs
cmp
stc
add
add
add
test
mov
std
ja
fisubrs
mov
movsb
jmp
xchg
popf
into
test
movsb
push
ret
or
or
jnp
sbb
divl
fnstenv
fcmovu
sti
dec
pop
xchg
test
icebp
cwtl
and
cmpsb
outsb
mov
imul
xchg
add
bound
sbb
cmpl
ljmp
xchg
cltd
int
xor
lods
jae
gs
fnsave
jb
ret
sub
in
fwait
mov
call
push
aas
in
adc
add
and
lock
icebp
jg
sub
test
dec
dec
cmpsl
movsb
les
xchg
sbb
mov
lcall
mov
or
xor
ret
cmp
mov
mov
xor
pop
icebp
mov
or
mov
lea
and
cmp
xor
cmc
mov
inc
cld
aas
lret
jle
push
mov
insb
jne
cltd
int
mov
jmp
push
clc
mov
daa
int3
sbb
std
xchg
in
jno
or
shl
ljmp
outsl
jb
mov
jge
mov
mov
sbb
js
leave
dec
andb
inc
mov
fsubr
adc
cmpsb
adc
ret
pop
int
test
mov
mov
inc
fisttpll
ds
pmulhuw
es
xchg
bound
std
inc
adc
imul
push
scas
fisubl
jg
lret
call
stos
cmpsl
push
dec
mov
and
enter
rolb
and
inc
jle
sahf
mov
adc
dec
jl
pop
inc
lcall
pop
mov
les
cmp
dec
dec
stos
cwtl
loope
mov
fwait
push
in
incb
mov
xchg
dec
ret
fs
pop
mov
mov
out
scas
orl
mov
inc
rcl
icebp
xchg
addr16
fsub
xchg
es
mov
int3
pop
fisttpll
adcl
cli
xor
mov
loop
and
and
pop
sub
pop
mov
rcll
dec
enter
cmp
outsb
dec
dec
mov
and
dec
push
pop
and
cmp
cltd
aas
lds
adc
dec
dec
sbb
sbb
mov
jl
xchg
xor
lods
and
test
fidivrs
ficoms
clc
mov
or
xlat
pop
sbb
call
test
insl
rcrl
dec
mov
out
stos
dec
dec
loope
push
pop
ljmp
mov
fadd
cmp
inc
mov
movsl
xor
cmp
enter
fsts
sub
lods
jecxz
jl
movsb
jnp
addr16
push
popa
pop
and
les
mov
pop
inc
fstpl
push
lock
loop
or
push
aaa
dec
jne
cmp
cld
pushf
rclb
outsb
add
test
ja
pop
pop
fldenv
enter
test
xor
hlt
and
fildl
and
call
sub
int
fnstcw
mov
sti
cmpsb
xchg
aam
xchg
aam
push
cwtl
enter
in
mov
xor
lahf
pop
inc
addr16
fstpt
mov
fildl
cmp
cwtl
gs
gs
mov
sbb
mov
jecxz
pop
sub
mov
data16
inc
iretw
fs
rcrl
and
imul
mov
xchg
cmp
adc
mov
add
dec
outsl
sbb
les
movsb
in
insb
mov
arpl
lcall
mov
notb
sub
mov
mov
out
scas
mov
push
jg
rorl
sub
int3
fxch
pop
inc
inc
dec
push
dec
dec
add
lods
sbb
sbb
js
jae
stc
out
xchg
push
mov
push
cmpsb
loop
mov
cmp
and
scas
loopne
sarb
out
scas
jae
xor
xor
push
js
jmp
iret
or
xor
or
xchg
xchg
in
xor
in
inc
loop
insl
mov
mov
int
inc
pop
dec
cld
dec
jge
insl
aam
movsb
push
imul
cmp
repz
rcll
mov
mov
daa
dec
pop
pushf
and
mov
aam
xor
push
push
sbb
mov
jbe
push
xor
jne
pop
mov
inc
int3
fxch
loop
sbb
sbb
mov
dec
and
test
push
mov
out
xchg
mov
and
sahf
push
enter
insl
mov
push
or
push
and
mov
and
jae
pop
js
push
mov
sahf
je
mov
cld
push
loope
cld
fcompl
or
or
pop
dec
xchg
cltd
movsb
std
testb
and
push
cmpb
add
lea
ja
push
push
inc
xchg
xchg
cmp
fsubl
test
jmp
mov
sub
and
sub
imul
addr16
les
jg
sbb
mov
mov
adc
dec
inc
adc
sub
inc
jb
pushf
adc
mov
ss
int3
cmc
pushf
repnz
pop
repnz
insl
test
push
cmpsb
mov
into
jne
ja
sub
pop
shrb
mov
cmp
push
jb
cltd
fisubrl
adcl
in
push
rcll
stc
fnstsw
inc
jg
inc
mov
orb
lcall
xchg
sbb
push
sub
pop
mov
pop
js
sahf
test
cmp
jg
add
addb
xchg
pop
sub
cmp
pusha
cmc
push
imul
cmp
aas
scas
or
daa
addl
xchg
mov
push
adc
mov
adc
adc
and
xchg
rolb
shlb
xlat
add
insb
stc
sbb
arpl
dec
mov
les
les
lea
aad
ror
xchg
sub
fs
cmp
dec
lret
and
popf
test
adc
sub
cmpl
roll
mov
cmp
add
popa
stos
jns
jne
out
popf
outsl
mov
in
cli
mov
mov
daa
lds
push
fsts
xchg
je
adc
fistpll
cltd
in
nop
pusha
aam
loopne
repz
jne
subb
shr
and
lds
test
jg
shlb
lret
xchg
xor
ret
pop
push
mov
xorl
ss
push
and
lret
adc
addr16
jne
xchg
xor
xor
cmc
and
addb
fldt
rcrb
ds
sbb
xchg
ljmp
cmp
mov
iret
and
xor
cmp
or
push
inc
push
push
mov
or
push
and
outsl
sbb
and
dec
arpl
aam
push
cmp
add
sbb
sub
cmp
in
popa
cwtl
out
movsl
jp
ja
jo
push
xor
arpl
fistl
jne
sbb
in
dec
sub
xor
negl
fldcw
or
int
push
in
adc
outsb
pop
push
cmp
cli
pop
sbb
mov
int3
in
pop
sarl
push
adc
lcall
mov
cmc
cmp
leave
dec
in
cltd
test
and
xchg
xor
mov
cmp
xchg
and
lcall
or
rcrb
test
or
es
sub
jmp
or
or
dec
jg
daa
fwait
adc
xchg
inc
mov
mov
dec
rorl
icebp
dec
xchg
mov
ja
popa
loopne
ret
jbe
lea
xchg
jge
into
cmp
pop
xchg
mov
pop
shll
jae
mov
add
xchg
out
lret
jnp
enter
mov
int
js
cmpl
xchg
lods
sub
aas
push
fs
lahf
mov
sbb
push
or
rol
cld
lds
sub
inc
inc
ss
rorb
cmp
bnd
pop
cltd
sub
sbb
push
mov
xor
pop
adc
jbe
pop
pop
negl
in
std
jno
cld
jp
jmp
xchg
pop
push
push
pop
xchg
imul
mov
outsb
js
jnp
cmc
inc
stos
fs
sbb
inc
push
subb
jg
aaa
cltd
dec
stos
or
dec
stos
jb
mov
enter
das
add
or
dec
out
xor
outsl
sbb
dec
in
scas
mov
loop
inc
mov
xchg
iret
push
pop
pop
jmp
iret
mov
leave
lock
out
adc
setno
xchg
push
mov
inc
cltd
fucomi
mov
push
stos
ret
out
cmp
mov
xchg
into
enter
jle
mov
push
fsubr
inc
sbb
dec
aad
je
mov
outsl
or
push
push
push
sarb
sub
mov
or
dec
pusha
xlat
pop
xchg
scas
sbb
arpl
push
add
mov
push
jae
daa
jl
inc
or
pop
add
lods
sbbb
inc
jmp
loope
ljmp
imul
push
pop
cmp
out
add
rorl
inc
dec
inc
mov
pop
xor
lock
adc
jl
push
int
jecxz
xor
jne
xchg
sbb
insb
call
add
cmp
xor
adc
aam
daa
jle
add
xchg
push
push
cmpsb
addr16
js
sub
shlb
jp
into
adc
cli
lret
std
and
shll
repnz
and
lcall
mov
ss
and
xor
lahf
je
jmp
fstpt
push
es
pop
or
lods
or
cmp
push
mov
jl
stos
cmp
hlt
ja
push
cltd
je
inc
out
loope
lods
mull
out
es
push
add
xor
pop
test
mov
push
das
scas
loop
mov
mov
arpl
sbb
fistps
xchg
iret
xor
sbb
test
outsl
jns
push
jbe
sbb
inc
loopne
and
mov
and
and
mov
pop
int3
mov
test
mov
xor
mov
stos
push
lret
and
and
dec
push
mov
repnz
and
jg
loopne
outsb
int
jae
lahf
dec
shld
fimull
cld
test
push
stc
ret
fistl
aad
cmpsl
mov
adc
outsb
adc
and
sub
dec
notb
pmovmskb
adc
pop
push
sahf
shlb
rclb
mov
jno
sub
cmp
push
mov
and
mov
push
sahf
mov
dec
sub
xor
hlt
imul
push
andnps
rcrb
mov
push
xor
popa
loop
add
cmpsb
rorl
xor
pop
lods
ret
mov
mov
add
adc
add
pop
xchg
mov
in
out
dec
sarb
rcrl
pop
adc
out
or
sub
push
jmp
push
and
daa
inc
mov
rorb
lock
fwait
fs
xchg
dec
push
sbb
mov
data16
mov
xchg
out
and
movsb
adc
mov
fs
inc
pop
sub
xlat
inc
push
test
rcll
add
sub
js
pop
in
ss
xor
xchg
fs
or
int3
pop
or
pop
hlt
pop
jg
in
mov
dec
adc
nop
push
lret
lods
mov
cmpsl
and
fdivl
sahf
jmp
fadd
add
iret
pop
jb
mov
cmpl
sub
cmc
xor
ret
mov
lret
std
pushf
lahf
cwtl
xor
stos
cmp
xchg
and
aam
stos
jb
adc
sarb
mov
pop
xchg
adc
gs
jmp
ret
lret
mov
cmp
clc
fwait
lods
imul
stos
aas
jno
sti
xchg
fdivs
cmp
jp
mov
inc
andl
subb
pop
nop
or
dec
sarl
mov
sahf
fwait
xor
xchg
idivb
popf
xor
mov
add
lcall
mov
or
adc
sbb
mov
mov
test
sub
mov
leave
mov
rorl
inc
add
xor
pop
or
clc
mov
out
sbb
mull
pop
scas
adc
shlb
or
mov
inc
mov
leave
mov
jae
inc
cmp
dec
bound
mov
mov
xchg
pop
fwait
std
sahf
sub
xor
movsl
js
popf
xor
rorl
adc
xchg
gs
sbb
ja
in
mov
xor
sbb
jne
scas
lret
repnz
data16
cmp
push
cmp
pop
jecxz
mov
inc
and
or
dec
pop
push
insb
add
cwtl
mov
mov
lret
stc
pop
inc
inc
or
into
or
pop
ljmp
ret
jns
outsl
or
sub
enter
cld
stc
testb
push
mov
aam
scas
ret
mov
adc
cli
shll
je
shlb
lcall
out
sub
mov
daa
or
mov
lret
and
mov
push
adc
sbb
sbb
enter
into
lods
xchg
jno
bound
sub
ss
cmp
xor
sbb
pop
jno
je
inc
stc
cltd
fs
fdivl
stos
stc
ret
mov
and
adc
pop
int
add
int
pop
lcall
mov
inc
and
add
int3
dec
jne
ljmp
lock
icebp
xchg
cmpsb
mov
decl
cmp
fwait
add
out
addl
aaa
add
and
aas
dec
xchg
stc
or
inc
and
ret
push
repnz
push
jecxz
sarb
mov
jae
cmp
ss
cmp
add
cmp
idivl
xchg
xchg
out
jns
mov
lock
lods
jge
add
xor
in
and
pop
lods
and
add
sarb
mov
popf
xchg
movsl
icebp
cmp
scas
pop
add
push
mov
fisttps
cli
inc
loope
dec
leave
mov
and
out
or
mov
inc
dec
das
mov
jb
iret
aaa
sarb
mov
or
adc
inc
rcrb
xchg
inc
inc
loope
mov
test
nop
xor
es
dec
insb
enter
pop
jbe
jnp
jg
push
hlt
fidivrs
dec
enter
dec
pop
mov
imul
lea
jae
out
scas
ljmp
sbb
xor
out
mov
mov
pop
sbb
and
push
ljmp
int3
pop
sbb
mov
out
add
fwait
cmp
mov
and
sti
fsubs
mov
dec
fs
jae
mov
jp
mov
iret
inc
and
fildll
sarb
xchg
insb
sub
sti
dec
sbb
and
mov
bound
push
insb
repnz
inc
int
mov
push
ror
test
mov
cmp
fistpll
cld
mov
sahf
mov
sbb
sub
pop
rcl
jecxz
xchg
dec
fcmovnbe
aad
dec
and
lret
test
sbb
inc
pop
xchg
sbb
insb
lahf
mov
in
in
cmp
inc
mov
sti
popf
shrl
or
cmp
xor
jb
and
mov
insb
or
sub
mov
xor
jge
fs
fcoml
daa
mov
aaa
psubq
jns
jb
push
xchg
pop
sub
fidivs
adc
jl
sbb
andl
out
jno
pop
clc
xchg
push
add
gs
jp
imul
stos
push
xor
pop
adc
ja
jge,pt
inc
xchg
and
shll
jmp
inc
push
seto
push
add
and
and
pop
call
sub
dec
cltd
dec
es
push
mov
push
shlb
dec
lds
pusha
xor
sbb
push
outsl
fldt
movsl
jnp
cld
and
popf
dec
arpl
jno
movsl
mov
ss
jb
or
add
xchg
adc
nop
inc
fldt
test
int3
fsubrl
cmp
popf
adc
cmp
push
shrl
jne
sbb
arpl
outsb
sahf
cwtl
sahf
sub
xor
cld
mov
leave
cmpsl
mov
sbb
cwtl
stos
xorb
push
sub
mov
pop
cmc
and
inc
jns
xchg
aas
mov
shr
ds
lret
xlat
or
mov
sub
sahf
jbe
iret
lods
mov
lret
iret
add
xchg
mov
sbb
and
popf
xchg
push
add
pop
cmc
jbe
sbb
pushf
jns
cwtl
flds
ss
add
push
fsts
mov
or
faddl
push
mov
jnp
test
push
cmpsb
jle
cmp
out
push
loope
iret
jp
inc
adc
cmp
shrl
adc
test
mov
jl
xlat
mov
xchg
or
jl
inc
sbb
rclb
test
inc
imul
jle
or
jo
pop
xor
and
cmp
in
ja
sti
mov
movsl
pushf
mov
cmp
adc
inc
iret
mov
out
sbb
sub
dec
in
gs
bound
fistl
in
pop
movsl
insb
dec
push
dec
pop
pop
outsl
and
inc
mov
cwtl
popa
jg
sub
sarb
and
adc
dec
jb
inc
jecxz
lods
adc
inc
fs
test
add
push
dec
pop
mov
mov
out
xor
in
push
idivb
lods
sub
push
mov
jne
and
adc
and
lret
dec
xchg
xor
jae
out
clc
movsl
fimull
rorl
sub
frstor
into
fidivl
or
jl
sar
xor
mov
in
sbbl
ja
sbb
or
stos
icebp
mov
xchg
inc
push
loop
mov
and
sahf
jbe
sbb
in
lcall
loope
jnp
repnz
xchg
mov
dec
push
xor
pop
jmp
fdivrs
out
push
movsl
xor
mov
hlt
in
dec
fs
add
insl
pop
repnz
add
repz
fldcw
scas
xchg
cwtl
pushf
loopne
adc
sbb
push
adc
add
mov
icebp
out
and
push
lock
push
imul
cs
in
fbstp
cwtl
mov
pop
sti
cmp
or
xlat
mov
mov
lds
inc
and
xchg
pop
mov
js
ss
fsubrl
enter
aaa
jbe
mov
dec
jp
cmp
sbb
incl
cmp
pop
lcall
mov
call
imul
pop
pop
cmp
jmp
int
or
mov
ficompl
adc
popa
push
pop
insl
push
lahf
adc
xchg
xchg
push
jns
lods
sbbb
hlt
loope,pn
fistl
inc
fists
adc
pusha
insb
mov
shrl
add
pop
out
ljmp
bound
mov
nop
out
or
push
mov
repnz
popa
inc
jmp
mov
jmp
imul
or
pushf
test
imul
xchg
mov
mov
lcall
mov
sar
out
fiaddl
push
stos
hlt
xor
push
add
sub
sub
add
xchg
into
cmp
xchg
loopne
jmp
lret
cmp
bswap
mov
jbe
xor
mov
push
bound
mov
cltd
mov
mov
inc
dec
cwtl
jno
adc
pop
mov
les
mov
jae
imul
clc
les
push
push
ds
dec
pusha
arpl
xlat
test
and
cmp
adc
jp
ljmp
jmp
jbe
sub
jmp
lods
aaa
push
ficompl
jge
aas
pop
and
sti
imul
repz
gs
imul
jle
sbb
enter
xor
xchg
ds
aas
into
fstl
stos
cmp
adc
push
inc
inc
and
hlt
and
jge
mov
popf
inc
dec
adc
mov
sti
cmc
cwtl
push
jbe
sbb
stos
stos
or
push
mov
lret
es
or
sahf
xchg
jmp
add
mov
dec
in
and
and
bnd
cmp
subl
inc
cmp
inc
and
jmp
fwait
pop
movsl
mov
es
lods
lods
dec
js
push
mov
mov
in
mov
sub
rcr
sub
mov
rcrl
inc
fiaddl
mov
inc
stos
pop
jmp
sub
sub
dec
xchg
inc
sub
fidivrs
fnstenv
mov
xchg
sahf
sbb
jno
push
daa
test
arpl
andl
mov
cmp
aas
dec
btc
lods
xchg
es
inc
popf
enter
sub
int3
stc
out
les
xchg
mov
je
adc
rcrl
stos
pop
xchg
incb
sbbb
dec
daa
jnp
mov
orb
mov
leave
or
or
cmp
pushf
popf
cmp
ror
lds
push
jge
addr16
aas
repnz
adc
xor
xor
sub
sbb
jne
jne
mov
push
pop
decb
out
or
and
mov
push
cmpsb
adc
jo
pop
int
xor
movsl
push
out
dec
shl
pop
or
aam
scas
gs
dec
dec
pop
sbb
ss
sbb
repnz
jecxz
mov
push
mov
mov
pop
mov
push
testl
sub
jne
or
push
cmpsl
shrl
insl
cmp
inc
mov
adc
bound
insb
sub
pop
aam
or
inc
inc
jmp
xchg
roll
mov
or
pop
std
xchg
add
mov
adcl
sub
shrl
xlat
outsb
push
aam
pop
xor
and
in
lods
movsl
lock
mov
mov
cmpsb
dec
push
cmc
pop
sti
test
aad
shlb
or
push
enter
sbb
sti
imul
sbb
ret
in
add
dec
sbb
sub
push
je
mov
xchg
push
xor
shl
cmp
popa
in
inc
mov
pop
in
daa
test
push
repz
xchg
dec
dec
jecxz
das
pop
lods
mov
rorb
lret
je
sahf
xchg
dec
sti
jge
mov
mov
add
stos
je
cmp
xchg
cmovne
xchg
fsubrl
call
mov
enter
adc
jmp
call
xchg
test
adc
dec
repnz
test
js
int3
fsubr
adc
stos
inc
and
and
in
out
push
popf
mov
adc
fistps
dec
push
xchg
test
icebp
and
jmp
adc
loope
in
cld
lods
enter
cmp
movsl
jmp
xchg
push
mov
mov
test
lods
jp
adc
gs
push
inc
pusha
lret
pop
cld
lcall
into
mov
int3
sbbb
push
aam
frstor
movsl
test
pop
dec
pushf
push
test
adc
pop
or
dec
aaa
inc
imul
in
insl
and
mov
pop
fs
xlat
push
fiaddl
push
mov
dec
adc
aam
sar
sub
mov
sub
and
cmp
or
shr
fidivrl
pushf
lds
fstps
jo
lods
out
and
scas
push
arpl
clc
sahf
test
mov
xchg
wrmsr
les
cmp
xor
pop
je
mov
push
imul
jnp
shl
enter
lret
sub
cmp
dec
mov
out
cmp
insl
mov
mov
es
push
popa
sub
nop
movsl
add
or
push
repnz
xchg
cmp
rcrl
ret
push
pop
sub
cld
dec
mov
pop
frstor
dec
mov
rcrb
dec
cltd
ljmp
dec
in
adc
std
pop
dec
cmp
cli
xor
cmpsl
mov
std
dec
rcrl
movsb
mov
nop
ja
xor
inc
dec
adc
push
sbb
and
sbb
andb
push
mov
pop
pop
addb
stc
cmpb
mov
sub
jnp
fcoml
sbb
adcl
jnp
sbb
lods
lea
gs
mov
movsl
jl
jle
pop
jle
loope
push
shl
xchg
cmp
jg
loope
lret
jl
jbe
lcall
mov
aaa
xchg
data16
adc
xchg
cmp
cmp
dec
dec
shll
push
sti
or
adc
cmp
or
jmp
cwtl
test
xor
xchg
cmc
cmp
add
aam
dec
stc
call
ret
jo
mov
cld
dec
jne
in
aaa
mov
das
mov
in
xchg
int
add
xor
ret
lods
fisubrl
add
push
call
sub
or
cmp
fisubrl
stos
inc
mov
lahf
adc
mov
or
adc
mov
or
aam
mov
cmpl
sbbb
je
sub
and
decl
push
xchg
setnp
jb
sub
shrb
mov
or
xchg
mov
jecxz
adc
mov
mov
pop
mov
jnp
or
or
push
mov
ss
xor
bound
mov
insl
add
mov
rorl
mov
xchg
or
int
xchg
daa
pop
dec
inc
push
inc
xor
mov
pop
out
adc
imul
jg
push
or
arpl
or
cltd
jae
adc
sti
pushf
add
lea
jae
stos
jmp
out
lret
fdivrs
notl
push
addr16
lea
push
xchg
jbe
test
loop
dec
les
adc
leave
pop
xchg
xchg
mov
inc
inc
out
insb
jl
cld
cmp
lcall
ret
loop
mov
mov
xchg
xor
clc
lret
aam
in
jl
rcl
scas
or
addr16
not
sbb
jae
popl
adc
icebp
mov
ret
scas
or
xchg
push
fdivl
mov
xchg
sbbl
jb
js
xchg
pop
pop
fs
in
jmp
mov
sbb
add
xchg
xor
call
lret
xor
xor
sbb
subl
mov
hlt
stos
jne
and
clc
and
xchg
sub
add
inc
sbb
cmp
mov
xlat
negl
jne
fs
dec
fsubl
inc
enter
nop
jo
mov
leave
das
mov
loope
mov
in
test
xor
fsubr
aad
mov
ss
jb
ret
test
subb
mov
cmp
jnp
mov
scas
and
enter
clc
and
out
lret
jb
mov
cmp
les
test
xor
cltd
xchg
sub
jl
sbb
mov
testl
sub
inc
cmp
in
dec
out
shl
outsl
imul
push
xchg
cmp
imul
nop
roll
jecxz
and
nop
mov
sbb
fidivs
out
sbb
leave
xor
test
inc
xor
add
push
adc
pushf
loopne
iret
xchg
mov
mov
sub
lods
cltd
insb
int3
sahf
scas
call
sbb
or
dec
inc
adc
pop
push
mov
loopne
mov
mov
or
xor
mov
mov
jg
dec
test
adc
pop
xchg
adc
pop
std
in
stos
loopne
xchg
ret
lds
push
jle
sbb
jg
mov
sub
jge
push
shrl
push
cmp
jl
or
or
jp
push
ret
mov
bound
das
pop
or
mov
mov
inc
pusha
addb
in
scas
xor
jne
inc
pop
cld
sbb
mov
adc
mov
mov
mov
jno
and
push
leave
shrl
mov
sub
push
mov
xlat
xchg
sti
ljmp
mov
xor
filds
cmp
mov
and
test
ret
stos
inc
or
sub
cmp
sub
pop
outsb
mov
add
insb
les
loope
stc
sti
mov
test
jle
dec
sub
jb
or
out
sub
push
decl
push
xor
sub
sub
fs
xor
pushf
jne
outsl
fidivl
clc
mov
xchg
sub
mov
pop
and
das
in
xchg
ss
mov
fiaddl
mov
mov
mov
mov
sub
icebp
xor
nop
stos
aam
sahf
push
lods
jbe
popa
in
cmc
out
out
add
mov
js
lret
decb
test
test
mov
push
shlb
sti
loope
lods
add
cmpl
imul
mov
inc
cmp
mov
in
in
push
gs
jns
imulb
scas
add
pop
sahf
dec
dec
push
cmp
mov
inc
push
mov
lret
xchg
mov
dec
testl
fcompl
xor
or
mov
test
mov
mov
push
cmpsb
push
rcll
cltd
xor
imul
mov
xchg
sbb
jbe
inc
pop
not
jmp
dec
or
mov
or
jns
adc
or
adc
mov
imul
sbb
xchg
cmpsb
es
enter
xor
stc
xchg
cmp
xchg
in
adc
orl
push
xor
jecxz
call
not
xchg
test
push
test
sub
call
inc
aad
popa
rorb
jge
sti
je
fidivl
mov
fiaddl
fisubrl
xchg
xchg
jg
insl
sub
jge
movsb
xchg
xor
push
lods
js
gs
out
jb
cwtl
push
inc
into
or
cmp
cmp
stc
clc
sbbb
outsl
aaa
push
jb
xchg
jmp
or
pop
movsl
test
mov
lret
xor
sarl
jae
jecxz
cmp
xor
pop
mov
mov
ret
and
sti
cmpsl
sub
mov
adc
jecxz
es
sub
daa
fnstsw
enter
repnz
pmaxsw
mov
and
pop
jecxz
icebp
xchg
popf
mov
je
mov
push
fst
sahf
lods
adcb
int
xchg
mov
mov
push
ficompl
pop
sbb
fsubp
add
ficoms
sbb
and
stc
ss
push
ret
imul
jns
lea
cs
cmp
xor
dec
lret
pop
or
push
mov
cli
into
mov
mov
scas
cmp
lret
les
dec
orb
les
push
and
and
and
mov
pop
pop
push
addb
test
and
xor
cmpsb
lods
gs
sbb
sbb
jecxz
inc
repnz
inc
in
push
inc
shrb
push
and
nop
lods
xchg
enter
movsl
test
mov
pop
pop
push
jbe
stos
add
push
xchg
vsqrtss
ljmp
call
inc
pushf
ret
cmp
pop
out
ljmp
jmp
fs
lret
lcall
cmp
xchg
cmp
push
push
mov
sub
popa
push
loopne
rcrb
pop
je
out
pop
mov
cmp
adc
imul
popf
dec
cs
sbb
inc
data16
sbb
adc
jae
mov
nop
mov
mov
negl
ljmp
movsl
sbb
icebp
in
cmp
mov
or
mov
adc
xchg
ds
inc
cmp
jb
sub
xor
pop
xchg
rclb
cmpsb
loopne
xchg
and
jo
dec
movsb
dec
lods
mov
aaa
mov
pop
addr16
push
lock
sub
jmp
pop
sbb
out
mov
repnz
pop
loopne
add
sti
cmp
and
lahf
adcl
movsl
pushf
leave
push
pop
repz
mov
pop
rcrb
jg
out
fnstsw
ret
mov
jp
outsb
adc
sti
sarb
lock
pop
mov
fbstp
xor
push
in
es
movsb
xor
pusha
mov
push
inc
xlat
inc
imul
fdivl
insb
repz
jne
adc
xlat
dec
ljmp
pop
shr
mov
shll
out
icebp
aaa
dec
cmpsb
cli
push
pop
or
test
mov
addr16
inc
ret
add
pop
or
and
pushf
push
mov
pop
negb
inc
testb
lods
imul
icebp
mov
shlb
mov
xor
or
pop
dec
out
mov
inc
loopne
mov
sbb
in
dec
cmp
test
add
inc
xchg
sbb
dec
push
inc
leave
jb
data16
dec
out
and
adc
les
mov
sbb
jle
scas
and
je
push
dec
and
aaa
clc
mov
push
repnz
sub
sbb
add
dec
sub
test
jns
ds
xlat
sbb
aad
fisubrs
cmpsl
shlb
arpl
pop
call
je
stos
and
jb
data16
xor
inc
jno
push
testb
test
and
and
add
imul
adc
out
jmp
xchg
mov
in
nop
test
roll
rorb
shll
cs
pop
out
clc
aaa
iret
loop
cmp
test
gs
fucomp
push
pusha
movsb
sti
addr16
push
jecxz
in
sbb
xor
push
xchg
cmp
dec
or
shll
add
addb
sub
test
in
mov
push
jle
push
roll
out
push
arpl
sbb
jge
mov
clc
int
movsl
in
loop
in
and
iret
inc
es
cmp
xchg
dec
xchg
adc
test
leave
loopne
fdiv
mov
cmpsb
insl
jmp
test
je
lods
push
sar
mov
sti
push
fdivl
push
adc
loopne
push
xchg
dec
push
cmp
stos
ja
inc
push
inc
push
jmp
sub
mov
addr16
dec
shlb
mov
adc
fistps
jg
inc
imul
icebp
push
push
jmp
add
inc
lahf
fcoml
ja
mov
cli
dec
jmp
test
mov
out
movsb
lods
and
adc
outsl
popf
test
mov
xchg
pushf
pop
inc
cmp
ret
in
clc
lock
lcall
cmc
subl
je
push
sub
cmp
mov
pop
jg
adc
xchg
add
rol
push
stos
adc
es
mov
pop
addr16
mov
mov
aas
push
mov
outsl
mov
jecxz
or
data16
je
dec
lods
and
xchg
ljmp
gs
add
insb
cwtl
lods
or
lret
addr16
mov
cs
mov
xchg
cmp
adc
xchg
repnz
adc
push
fcompl
fstps
les
fsubp
mov
loop
repz
jae
dec
mov
cltd
rolb
cmp
pop
pushl
adc
cwtl
push
pop
inc
into
ss
push
sbb
test
roll
jge
jle
iret
ret
xchg
loopne
les
adc
sbb
sub
xor
adc
mov
jge
jb
popa
cli
in
xchg
add
push
pushf
jo
addr16
mov
je
mov
inc
aaa
movsl
loopne
pop
jne
mov
xor
and
push
fcoms
inc
xor
push
popa
pop
jae
xchg
push
mov
pushf
xor
jp
add
rorb
add
mov
lcall
xor
jg
popa
cmp
or
add
test
mov
fwait
popa
fsubrs
cld
push
arpl
push
enter
and
cwtl
in
nop
test
sti
loope
lahf
addr16
iret
or
sti
clc
jb
sarl
enter
pop
lcall
jno
adc
adc
adc
sub
mov
mov
test
xor
aam
push
push
dec
sub
push
cmp
sbb
adc
or
stos
flds
sub
cmc
test
in
mov
stc
jne
or
cmp
xchg
sub
int3
lcall
notl
add
scas
mov
stos
outsb
mov
xchg
nop
pop
js
or
xchg
inc
iret
in
test
cmp
add
cmc
jne
inc
outsl
enter
pop
mov
shl
mov
ret
mov
add
adc
and
mov
xchg
imulb
outsb
pushf
dec
and
aad
mov
dec
cltd
mov
dec
ja
aad
mov
add
jmp
leave
repnz
loope
ficoml
pop
lods
mulb
lret
fs
fsubrs
mov
cmp
xchg
inc
out
xchg
push
xchg
push
cwtl
rclb
aad
pusha
test
push
mov
in
xchg
lock
lea
jle
or
push
insl
rcrl
adc
push
cvtdq2ps
push
mov
cmp
subl
mov
xor
push
inc
lds
cmpsl
fcoms
xchg
arpl
dec
jmp
imul
shll
inc
adc
xlat
push
push
adc
mov
or
xchg
add
int3
and
push
sti
popf
push
ret
mov
mov
inc
cli
fs
int3
xchg
or
cmpsl
mov
mov
jge
sahf
imull
data16
pop
adc
mov
mov
out
xchg
cld
stos
mov
imul
popa
scas
test
int3
xor
test
mov
push
aad
xchg
mov
cmp
jae
mov
mov
es
or
test
jbe
xorl
add
gs
jno
popf
idivb
push
dec
sub
pop
mov
aad
cs
popf
sbb
mov
add
dec
popa
fwait
test
into
sbbb
test
sub
lret
lods
and
push
sbb
icebp
std
dec
push
arpl
or
mov
mov
divb
cltd
pop
scas
lahf
xor
lea
cmp
rcll
dec
rol
fimuls
mov
lods
dec
push
sti
mov
mov
lods
mov
call
or
push
bound
mov
inc
and
push
xlat
cld
jb
repnz
dec
stos
sbb
mov
xchg
xor
inc
aas
movsl
xor
pop
sti
pop
sbb
jo
out
push
adc
sbb
outsl
dec
pop
pop
test
or
inc
sub
outsb
je
out
mov
int3
dec
cmp
mov
mov
sbb
popa
cld
and
das
das
xchg
enter
popa
je
pop
mov
jp
hlt
mov
lret
mov
pop
sub
js
or
adc
xor
push
xor
adcb
sti
push
sbb
sub
xor
add
sub
pushf
pop
mov
pop
or
push
pop
rcl
xchg
xor
fdivrs
fistpl
or
aam
mov
popa
sub
scas
mov
sahf
add
pusha
push
and
mov
mov
cltd
ljmp
mov
ja
insl
sub
xchg
inc
inc
mov
pop
and
and
enter
in
lods
inc
cmp
lahf
mov
insb
xlat
jmp
fnstsw
cmp
in
cmp
jbe
pop
aaa
and
aas
and
hlt
rcll
les
xchg
test
push
dec
clc
add
mov
jns
push
test
dec
fimull
dec
lret
add
out
jb
and
push
and
faddl
dec
cwtl
dec
icebp
std
js
jle
or
jecxz
aam
shrl
ds
pushf
lock
xor
popa
mov
or
cwtl
mov
cmc
mov
ljmp
sbb
or
dec
sbb
sarb
pop
test
mov
or
pushf
pop
in
or
outsl
scas
xchg
out
mov
fsts
inc
push
dec
nop
outsb
bound
in
lods
mov
popa
jnp
inc
xchg
in
call
das
mov
push
in
push
pop
xor
xor
push
test
and
mov
js
push
mov
stc
negb
inc
int
push
lods
dec
push
lods
loopne
jne
add
xchg
and
repnz
stos
add
iret
std
pop
or
imul
add
lahf
or
cs
ficoml
sbb
mov
sub
nop
adcl
inc
push
enter
ret
and
xor
xor
push
mov
xchg
or
mov
cmp
dec
cmc
mov
popf
mov
outsb
sub
lock
dec
push
or
cld
push
out
icebp
mov
ret
scas
jg
inc
adcb
jecxz
mov
outsl
mov
nop
push
mov
sbb
mov
jge
xchg
mov
mov
insb
and
shrl
jle
add
inc
lods
mov
add
gs
mov
xorl
sbb
repz
sbb
jmp
negb
and
jl
pop
out
xchg
orl
mov
andb
cmpsl
push
xchg
inc
xchg
out
test
sub
mov
jmp
jecxz
test
xlat
xor
data16
push
or
lock
xor
xor
testl
adc
cmp
arpl
dec
adc
push
inc
cmp
hlt
sub
pop
fs
sti
jp
js
push
push
ja
fs
sbbl
repnz
pusha
lods
test
sbb
sub
mov
popa
and
js
xchg
stos
fsubl
andnps
mov
sbb
fwait
arpl
mov
mov
adc
push
mov
ret
leave
cmpsl
fisubrs
sbb
loop
add
mov
adc
in
ss
pop
jne
sub
int3
cmp
xorb
sub
cltd
pushf
sbb
into
out
push
mov
es
sub
js
mov
dec
push
xchg
jmp
fldenv
jb
lods
aas
mov
lods
lods
or
push
jg
nop
mov
imul
xchg
notb
ret
pop
pop
add
lock
outsl
jno
dec
call
adc
mov
out
popf
sub
ficoml
bound
ret
dec
test
mov
outsl
xchg
aam
xchg
xchg
mov
cmp
nop
insl
add
dec
mov
mov
aad
in
inc
rcrl
out
flds
and
jge
movsb
ss
imul
shrb
lea
outsl
mov
stos
mov
mov
andl
lret
push
push
push
cmp
pop
jb
adcb
mov
lds
dec
out
mov
sub
push
push
ljmp
mov
int3
or
add
lds
dec
pop
mov
or
je
mov
xchg
jmp
leave
jbe
mov
push
push
scas
les
movsl
orl
jnp
pop
push
addr16
xchg
and
icebp
lret
adc
stos
clc
icebp
mov
imul
xor
iret
xchg
dec
aaa
loope
popa
loopne
dec
mov
ret
pop
mov
shrb
jecxz
fdiv
hlt
in
loopne
cmp
pop
mov
adc
ss
mov
fs
pop
sti
hlt
test
movsb
pop
out
adc
jb
and
inc
add
data16
mov
jbe
dec
xor
xchg
xor
ret
fisubl
or
into
loop
outsl
outsl
movsl
push
fnstcw
repnz
test
mov
fisubl
add
aad
xor
push
test
mov
cli
and
out
out
insb
jb
push
js
nop
push
icebp
cmpsb
leave
push
rcrl
jge
and
popa
in
cld
std
jmp
push
shll
daa
sbb
je
jo
xchg
in
insl
test
jmp
adc
xchg
push
xchg
hlt
in
mov
lcall
dec
mov
addr16
jne
fiaddl
idivb
jge
mov
shll
shrb
or
lds
mov
movsl
mov
push
sub
adc
add
push
das
xchg
or
lock
bound
inc
lock
das
les
inc
out
pusha
pushf
hlt
push
inc
shlb
fiadds
push
out
mov
pushf
pop
xor
push
call
pop
adc
push
mov
insb
xor
test
inc
imul
or
pusha
rorl
in
dec
jp
in
push
or
jne
rorb
xor
push
mov
mov
adc
and
cmp
cmp
push
xchg
mov
add
shlb
pop
inc
stos
sub
lods
inc
dec
cmp
lret
in
cmp
hlt
pop
das
jecxz
fldt
leave
or
std
sbb
test
jle
shll
mov
roll
arpl
pop
mov
mov
call
pop
sti
sub
lock
in
pandn
fnstenv
lret
fcmove
pusha
cmpsl
push
sbb
cwtl
das
inc
push
xlat
jno
div
sbb
pop
add
xchg
pop
fisttpl
mov
xor
xchg
or
dec
inc
or
in
jmp
jg
jmp
xchg
and
inc
jbe
jno
ficoms
mov
lods
jns
pop
testl
pop
cmp
fildll
mov
dec
lcall
adc
add
jl
push
and
cmp
inc
dec
mov
arpl
push
sbb
add
cmpsb
hlt
imul
fs
jecxz
ljmp
pop
in
iret
sub
sbb
fcmovbe
sahf
adc
pop
in
add
scas
xchg
cmp
js
dec
sub
inc
jle
jnp
push
inc
mov
dec
adc
cmp
pop
push
or
ss
jle
pop
mov
test
pop
adc
outsl
fwait
add
mov
xlat
loopne
push
filds
xchg
pop
mov
mov
lds
inc
stc
cli
es
push
test
out
or
push
shll
fidivrl
dec
push
test
repz
das
lret
adc
mov
inc
jns
inc
adc
mov
movhps
cltd
push
fsubp
jno,pt
mov
lahf
sti
adc
out
mov
shll
sahf
jmp
adc
sbb
sub
jle
mov
mov
adc
dec
cwtl
jno
mov
cmp
pop
outsb
outsl
cs
mov
lret
pop
mov
sub
adc
push
jle
cmpsl
push
loopne
xchg
popa
fwait
test
outsb
stc
jmp
mov
add
mov
les
cmp
push
mov
rol
mov
cmpsl
adcl
out
fisubs
push
test
ss
pusha
scas
inc
xchg
bnd
mov
adc
fidivrl
imul
and
cmpsl
in
rorb
dec
jmp
inc
mov
inc
push
aam
push
lods
xchg
gs
int
xlat
sbb
push
jg
mov
ret
mov
push
sbb
iret
call
les
psllq
test
xchg
push
xchg
fwait
outsb
les
stc
sub
cli
or
cmc
sahf
cltd
inc
xor
jge
sub
mov
xchg
push
ljmp
test
fnclex
sbb
cld
cmp
jno
and
jo
sbb
pop
aas
sub
or
mov
pop
sub
sub
mov
out
jo
mov
into
hlt
subb
push
xor
or
fst
xchg
and
sbb
popf
mov
stc
mov
lahf
outsb
jp
jae
sub
popa
xchg
mov
adc
iret
xor
rcrl
sti
fcomps
sti
dec
inc
sbb
aaa
daa
rcrb
xchg
dec
jns
jg
imul
jbe
push
fdivl
mov
roll
rcrl
sbb
pushf
pop
js
jbe
sub
inc
pop
jae
and
sub
leave
fwait
inc
mov
adc
jo
insb
xor
dec
lret
scas
mov
xchg
push
shlb
sub
jns
mov
push
mov
xchg
test
loopne
lcall
popl
push
pop
mov
je
and
jle
jbe
ljmp
ret
pop
inc
jle
or
inc
add
test
xor
aad
rorb
iret
mov
aaa
mov
xor
sub
test
jmp
mov
sahf
and
cmovge
icebp
or
bound
loopne
pushf
mov
daa
fs
xlat
push
inc
sub
inc
mov
push
cmp
shlb
mov
cmp
cmp
push
mov
aam
push
jl
popf
lahf
pop
mov
out
pop
in
pushf
test
fld
loopne
test
in
jmp
xor
imul
cmp
in
je
sarl
or
rolb
sub
fdivs
xor
rol
and
push
nop
fsubs
mov
inc
jge
and
add
ja
mov
jge
mov
dec
xor
cs
ja
sti
cmp
out
and
and
mov
lock
push
sbb
mov
repnz
cmc
xchg
jbe
sbb
mov
aas
imul
int
jbe
cltd
int
mov
pop
test
insb
and
mov
xchg
stos
lahf
dec
sbb
add
pushf
addb
stos
les
cmp
aaa
call
imul
js
pop
femms
xchg
rorl
clc
adc
out
lods
fidivs
popl
or
dec
xchg
lret
jp
dec
dec
out
jge
sbb
lds
js
nop
cwtl
insl
pop
sub
scas
arpl
icebp
inc
sub
lods
lea
cmp
jne
jecxz
fsubl
inc
adc
aam
rcr
pop
dec
lcall
adc
sub
addr16
out
popf
das
outsb
pushf
dec
cmpsb
jp
fs
gs
and
and
mul
in
insl
push
mov
lock
mov
mov
push
out
add
adc
jb
push
sub
roll
fdivl
iret
xchg
mov
pop
lret
pop
scas
sbb
imul
lcall
jbe
mov
out
dec
scas
dec
add
inc
andl
jge
repz
mov
sbb
cmpsl
xor
test
adc
ja
pop
mov
sub
cmc
ja
insb
push
mov
fsub
movsl
fs
mov
mov
pop
sub
and
out
jmp
cmp
adc
jno
sub
out
push
daa
or
adc
dec
int3
pop
divb
jl
or
cmp
mov
sub
jno
dec
xorl
outsb
mov
pop
xchg
push
jns
mov
mov
or
lcall
mov
popf
loopne
xchg
and
mov
mov
or
mov
bound
sub
mov
or
mov
or
dec
int
ja
pop
mov
test
loope
dec
mov
sti
cltd
sbb
mov
sbb
jmp
fnstcw
ss
sub
std
sbb
push
push
mov
jnp
xchg
mov
jecxz
idivl
outsb
aam
dec
mov
mov
std
pusha
mov
add
pop
dec
rolb
lahf
sti
cmpsl
or
mov
ljmp
and
inc
int3
adc
dec
ds
jae
loope
jle
lods
mov
insl
push
adc
cmp
js
pop
test
mov
xor
fdivrl
pop
add
fisttps
sbb
bound
lods
adc
popa
jg
push
popa
fs
mov
cmpsl
inc
call
into
jbe
insl
mov
mov
push
loopne
mov
jne
jecxz
pop
mov
arpl
jae
in
inc
test
aaa
jmp
in
leave
jle
stos
lret
idivl
cmp
dec
dec
andb
pop
mov
adc
lods
popf
dec
push
out
cltd
inc
pop
fsub
inc
cmc
mov
rcrb
jb
mov
aam
mov
mov
lods
iret
mov
dec
sahf
inc
test
sub
nop
xor
adc
inc
popa
mov
daa
imul
xor
mov
sub
mov
inc
jmp
sbb
das
mov
fidivrs
adc
hlt
and
hlt
mov
bound
ljmp
push
fdivrl
out
bound
in
sarl
sbb
push
jno
sar
pop
scas
cmp
jmp
test
sub
pop
call
aad
push
int
ret
out
push
push
shlb
sarb
xor
jmp
adc
movsb
cmp
or
insl
mov
push
mov
iret
popf
fmulp
mov
out
or
mov
data16
add
lret
fisubrs
mov
xchg
jecxz
xlat
push
adc
or
cwtl
jbe
push
lcall
jb
cmp
les
inc
jno
push
mov
mov
and
jne
push
addr16
adc
sbb
sbb
or
xor
cmp
ljmp
rcrb
mov
inc
jae
xor
outsl
seta
dec
sti
inc
mov
pop
pop
bound
push
sub
fsub
in
xchg
mov
mov
jae
out
jmp
int3
inc
mov
mulb
push
mov
mov
cmp
jmp
pushf
dec
ss
sbb
xchg
fcompl
popa
sbb
fildl
inc
aad
pop
pusha
jbe
cwtl
out
and
fldenv
adc
lock
push
jns
cmp
xor
jb
out
enter
daa
clc
push
pop
shll
xorb
xchg
and
sbb
sub
pop
push
jnp
sti
sub
call
in
adc
sbb
add
push
sbb
push
sarb
cmc
push
jns
test
repz
mov
sub
fnstsw
clc
jge
xlat
jne
dec
mov
push
pop
adc
fwait
add
fisttps
jp
xchg
aaa
mov
in
dec
sbb
mov
push
pop
sbbl
pop
mov
add
push
sti
jo
fimuls
addr16
pshufw
mov
scas
cwtl
fists
mov
jmp
mov
push
xor
ss
fistpl
frstor
xchg
nop
sahf
or
stos
push
enter
jmp
pop
cmc
dec
add
mov
and
push
std
imul
xchg
add
cmp
mov
mov
lret
add
scas
les
js
mov
or
mov
les
sbb
mov
lods
push
test
data16
mov
cmp
sub
inc
cmp
xchg
push
jmp
or
dec
lock
jns
pop
daa
loope
push
xchg
mov
sbb
xor
xchg
in
mov
xorl
fimuls
jo
mov
insl
test
das
sbb
mov
jg
lods
mov
sbb
add
pop
fcoms
lods
dec
xor
pop
xor
sbb
adc
cli
ja
mov
pusha
std
nop
adc
adc
insb
ss
fincstp
and
cmp
loop
or
roll
jns
mov
mov
inc
scas
stos
sub
mul
addb
xchg
rcrb
adc
inc
sbb
movsb
pop
mov
xor
dec
stos
in
fidivl
aad
push
pop
imul
mov
aam
cmpl
sbb
or
or
push
mov
mov
dec
loop
adc
lea
ret
loope
test
mulb
or
cld
dec
loop
cmpsl
popa
pushf
cmp
and
push
xor
sub
in
add
jle
es
jo
andl
scas
mov
mov
cmpsb
inc
mov
imul
sahf
cltd
push
fcmovnb
or
mov
or
fstpl
fdivr
dec
push
addr16
inc
aad
inc
mov
adc
pop
ja
jb
mov
inc
std
lret
stos
sbb
push
jmp
inc
jp
or
mov
pop
mov
pop
or
mov
push
je
mov
inc
mov
arpl
mov
or
mov
push
out
sahf
pop
cmp
lock
or
inc
js
ds
lds
or
aaa
sbb
fisubrs
ljmp
jbe
pop
jmp
lea
xchg
orb
or
xchg
loopne
push
jae
in
adc
rclb
sbb
scas
mov
sub
cli
or
lret
pushf
sarl
jbe
jb
iret
shrb
dec
ret
test
sub
das
cmpsb
in
adc
xor
aaa
bnd
dec
lret
iret
jl
xchg
inc
xchg
dec
lret
js
fsubs
test
imul
into
cmp
sbb
rorb
arpl
mov
push
aad
and
testb
cmc
mov
or
pop
call
ljmp
ds
in
pop
insl
movsl
decb
cmp
out
sbb
inc
mov
sbb
outsl
test
adc
roll
rcrl
ljmp
pop
jecxz
dec
and
rcr
xchg
shl
mov
push
mov
mov
jle
rcr
jp
loop
mov
in
jnp
mov
inc
jno
lods
aaa
int
inc
lcall
das
sbb
rorb
cmp
fs
xchg
loope
enter
push
adc
xor
iret
loope
in
cmp
cltd
cli
nop
sub
push
aaa
cwtl
jne
mov
lods
mov
pop
dec
add
push
mov
into
bound
es
mov
adcb
fldl
gs
iret
inc
mov
test
mov
push
mov
xor
test
imul
in
daa
mov
push
pop
imul
enter
popf
or
shrb
cmp
in
imul
aaa
cs
jo
lds
adc
mov
inc
fmull
jb
mov
lcall
int3
movsb
cmc
and
arpl
std
cmp
mov
mov
xchg
iret
xchg
inc
ljmp
iret
push
sahf
ficoms
cltd
xor
sbb
stos
mulb
lret
ficoml
ret
inc
jo
cmpsl
or
loop
adc
roll
adc
xor
lcall
andb
int3
mov
jne
jb
and
adc
test
bound
arpl
dec
jmp
jmp
push
daa
push
jae
shrb
lea
aad
sahf
lea
hlt
cmp
in
xor
or
or
nop
push
lcall
jnp
pop
int
mov
pop
jmp
aad
cmc
out
ds
jbe
bound
rcr
leave
or
add
mov
push
jp
and
out
inc
int
ss
pop
and
jecxz
addl
pusha
sti
nop
mov
xor
sub
das
movsl
lea
xor
mov
push
sbb
das
xchg
jecxz
xor
shll
ret
out
mov
and
sub
insb
shll
cmp
sbb
lock
mov
xchg
sbb
sub
jl
push
xor
pop
cmp
sbb
adc
sub
adc
fiadds
clc
push
mov
inc
cld
incl
lahf
xorl
int3
sub
mov
push
fnstenv
mov
cmpsb
js
std
push
lds
jmp
test
aaa
pusha
inc
adc
pop
mov
xchg
push
mov
lods
or
loopne
ret
cmc
sbb
pop
insb
xchg
test
js
jle
xor
jo
dec
nop
add
or
mov
mov
jb
out
mov
ljmp
push
shl
movsl
jbe
shrl
cmp
pop
mov
aam
jp
test
cmp
inc
loope
inc
js
lods
filds
xchg
in
and
push
imull
adc
lods
imul
daa
sub
xchg
mov
ja
mov
test
notl
jne
sbb
cmp
je
push
jp
pop
xor
mov
add
and
sub
adc
cmp
shlb
cmp
jnp
adc
scas
cmp
jge
pop
sti
or
sub
sbb
sahf
div
jnp
jo
sbb
add
movsb
cmpsl
repnz
test
jg
sbb
fnstenv
xchg
push
call
cmp
in
cwtl
in
xchg
push
add
sbb
adc
xor
jp
mov
inc
push
pop
mov
popa
int
and
push
imul
bound
sarb
pop
xchg
sahf
add
pushf
mov
xor
movsb
and
popf
xor
int
or
mov
icebp
xchg
fcmovnb
cli
clc
mov
sbb
push
mov
mov
in
mov
repnz
adc
add
cwtl
jge
push
je
sbb
scas
pop
cs
ret
movsl
sub
hlt
pop
out
sub
cmc
in
adc
pop
sbb
add
xchg
xchg
push
inc
push
jmp
or
popf
push
repz
aas
stc
cli
mov
jnp
cmp
aaa
jp
jo
cmp
inc
imul
mov
or
outsl
lret
mov
mov
inc
xchg
mov
mov
dec
sarl
lret
mov
mov
jb
pop
xor
repnz
inc
ljmp
mov
sub
xchg
cmpsb
and
sub
ret
or
cmp
ret
pop
imul
xor
daa
and
cwtl
push
cmc
adc
mov
jl
das
xchg
daa
push
bswap
aad
loop
and
loop,pn
push
in
inc
adcb
sub
adc
or
cltd
lods
mov
test
je
inc
test
scas
dec
icebp
aad
nop
or
jmp
in
flds
shlb
fstl
add
xchg
aaa
aad
stc
mov
aad
addr16
rolb
inc
mov
iret
repnz
xchg
nop
sub
mov
in
cltd
lret
out
push
in
mov
shll
xor
xlat
addr16
push
cmc
sahf
mov
dec
cmc
cmpsl
push
add
andl
xchg
push
push
addr16
int3
xor
xchg
cltd
sbb
pop
popf
pop
pop
jb
mov
fwait
add
arpl
repnz
lods
cltd
dec
mov
pop
test
pop
loopne
hlt
inc
push
int
cmpsb
lret
pusha
sub
repz
or
sbb
sbb
orl
cmpsb
mov
inc
cs
mov
int
sub
lret
inc
push
and
insl
and
cmp
mov
fisttpl
push
jg
dec
add
aas
push
imul
jae
mov
add
mov
hlt
jmp
rcr
loope
std
cmp
mov
inc
mov
popf
imul
gs
icebp
dec
adc
lret
lret
and
inc
test
lret
mov
gs
movsl
xor
sahf
imul
jg
sarl
push
dec
cmp
push
add
xor
je
add
sbb
mov
jnp
and
cmp
push
add
adc
cmp
mov
loop
cmp
lock
push
sbb
ret
jl
mov
stos
scas
cmpb
sbb
out
xchg
ret
adc
sti
pop
rcrl
hlt
sar
das
stc
int3
iret
sub
arpl
dec
inc
xchg
mov
pop
mov
stc
dec
pusha
xlat
aam
add
mov
jge
cli
out
decl
push
ret
mov
decb
nop
push
in
mov
orl
push
cltd
enter
xlat
lcall
in
movsb
adc
mov
lock
popl
popa
stc
mov
aas
mov
adc
mov
test
lods
or
jecxz
and
push
adc
cmpsb
aad
jae
lds
je
cmpsl
rcrl
xchg
arpl
stos
mov
mov
das
mov
iret
in
dec
lock
xor
test
js
xchg
aad
adc
mov
fcompl
xchg
fimull
stos
inc
into
mov
bound
mov
pop
mov
pop
and
push
sbb
inc
icebp
mov
mov
mov
push
mov
popa
movsb
ret
lcall
movl
or
jb
cltd
mov
xchg
jmp
xlat
int3
jne
int
ret
sub
pop
pop
lea
xchg
repnz
stos
insl
ljmp
push
lcall
pop
add
sbb
pop
repnz
subb
testb
or
pusha
mov
jge
mov
xor
in
repz
dec
aas
fidivrs
sub
aam
sahf
repnz
aam
push
loop
xchg
ljmp
lret
mov
loopne
mov
loope
sahf
repnz
roll
sahf
dec
mov
and
ja
push
pop
insb
or
pop
cli
add
bound
add
inc
clc
roll
fldenv
jecxz
es
ret
dec
hlt
mov
sub
add
pop
inc
pop
inc
je
jo
xchg
pop
add
xor
mov
jg
adc
mov
pushf
jno
inc
mov
mov
arpl
mov
insl
pop
push
stc
jns
jbe
ja
sbbl
inc
mov
xchg
dec
dec
test
pushf
inc
addl
sub
jmp
fwait
ret
daa
mov
or
jae
pop
mov
daa
pop
testl
andb
lds
and
je
inc
xor
jecxz
out
pop
mov
xor
pushl
mov
jle
inc
jp
mov
cli
cs
std
sbb
mov
sbb
and
jge
push
pop
xor
pop
loopne
sub
or
repz
adc
push
imul
jecxz
xor
in
movsl
aas
fs
mov
popf
cmp
lods
push
loope
repnz
adc
dec
int
mov
jg
xchg
inc
sbb
add
pop
das
imul
int3
pop
adc
inc
bound
sub
jl
fnsave
fsubp
or
mov
imul
andl
test
xor
out
xchg
cmp
mov
jne
pop
add
fldenv
mov
jb
xor
add
pushf
sti
test
mov
and
fistps
test
gs
jne
sysexit
cmp
cli
pop
bound
sbb
out
ret
mov
xlat
mov
and
popf
mov
in
push
cmpsl
les
aaa
lahf
and
inc
mov
cmp
flds
loopne
stc
aam
fwait
dec
xchg
andb
lock
pcmpeqd
fnstenv
out
mov
dec
int3
idivl
rorb
sbb
cltd
call
mov
and
xor
push
and
or
arpl
repz
dec
pop
push
push
pop
pop
repz
sub
xchg
pop
sti
cwtl
ja
insb
cld
insl
xlat
or
sti
insl
add
cmp
stos
lds
xor
add
cli
xor
test
add
int
mov
mov
in
mov
inc
lcall
push
call
iret
mov
and
jle
push
aaa
insb
shrb
leave
jecxz
test
iret
ds
dec
sahf
sbb
jne
or
mov
hlt
xchg
lea
insb
add
and
loopne
rcr
lret
daa
sub
pop
jl
cmpsb
push
adc
jl
xchg
cwtl
jg
mov
lds
jge
popl
mov
adc
pop
pop
jb
xchg
xchg
jno
push
dec
mov
jp
inc
add
jecxz
cmp
in
notl
xor
and
insb
imul
cltd
xor
jp
pop
push
lahf
lods
jge
bnd
jns
fxam
mov
push
roll
jbe
jl
js
cmp
cld
jno
subb
push
sti
lret
outsb
mov
lahf
mov
or
or
sbb
ljmp
and
fcompl
out
lds
or
mov
aam
aam
jb
cmp
or
and
fdivrl
sub
jg
lahf
push
repz
xor
push
cwtl
mov
int
out
mov
outsb
pushf
into
cmove
jb
jno
xchg
jmp
xchg
pop
mov
mov
lret
fdivs
cwtl
adc
es
push
mov
aaa
jne
jb
mov
lods
mov
sbb
push
enterw
xor
mov
push
push
jmp
mov
leave
into
fwait
inc
cmp
mov
aam
pop
inc
addr16
nop
push
jno
mov
pop
mov
sbb
lret
push
push
xchg
xor
out
enter
mov
mov
xor
mov
ret
aad
icebp
in
add
arpl
push
jo
mov
ss
cld
js
mov
jo
ljmp
ljmp
mov
clc
ss
mov
pop
fists
das
xor
rcrb
icebp
lods
test
adc
mov
xchg
jp
negb
lret
filds
inc
sub
mulb
sbb
mov
cs
jns
gs
jnp
pop
adc
sub
icebp
orl
lods
test
add
cs
es
shlb
or
jmp
pop
outsb
fcoml
das
pop
adc
mov
or
cmp
aas
out
arpl
mov
leave
and
shll
pop
cmpl
daa
pushf
sbb
fucomp
loopne
push
push
and
das
cli
dec
push
int3
pop
in
mov
inc
xchg
add
adc
xchg
dec
mov
inc
pop
cmpsl
adc
mov
into
xchg
js
xchg
adc
add
dec
in
add
test
enter
push
mov
out
or
xchg
xor
xchg
dec
popf
stc
cltd
push
lds
fcomip
insl
mov
loope
xor
nop
xor
fisttps
xor
jecxz
inc
sbb
pop
hlt
dec
inc
fisubs
test
xor
jg
mov
mov
or
fsubr
out
jmp
jmp
daa
cmp
inc
push
sub
jl
cmp
mov
lock
fadd
push
dec
or
out
sub
mov
idivl
xchg
ss
add
jmp
cmp
pop
push
xlat
aaa
daa
rcl
das
jg
stos
mov
adc
out
xor
or
pop
repnz
sbb
pop
inc
mov
jecxz
jbe
sbb
mov
or
mov
mov
fsts
dec
xchg
cmp
cmpsb
jecxz
jne
xchg
je
mov
clc
sahf
adc
cs
imul
sbb
push
aaa
cmp
jp
sub
dec
mov
jmp
add
ficompl
aad
outsb
sbb
sbb
pop
fcoml
pusha
bound
inc
scas
xchg
xor
jecxz
int
mov
addl
les
jle
mov
inc
fimuls
or
push
ja
pop
push
out
push
leave
add
mov
test
cli
daa
aaa
pop
cmp
das
push
mov
jp
lods
scas
stos
inc
fildl
pop
sub
clc
lret
hlt
mov
repnz
xor
fs
data16
jl
pusha
int
imul
jae
adc
out
in
inc
aas
ljmp
and
lock
add
xor
mov
jne
pop
sbb
xchg
jbe
mov
cmp
rorl
jns
scas
jae
and
xorb
fisubrs
loop
sbb
dec
mov
sbb
ds
nop
nop
in
test
sbb
xchg
lods
xor
pop
out
lcall
push
sarl
cmp
imul
adc
jne
ficoml
add
shrl
int
inc
mov
jb
inc
jle
fs
nop
clc
sub
test
outsl
sub
scas
inc
daa
cmpsl
outsl
xor
sbb
popa
lahf
call
mov
jmp
pop
push
add
das
push
js
jns
add
fidivrs
rorb
rorb
jle
mov
in
jl
jg
jl
cmpb
mov
fisttps
mov
mov
mov
cmp
cmp
jnp
lret
xchg
cltd
xchg
add
shr
sbbb
inc
pop
mov
push
sbb
cmpsb
xchg
jp
xor
mov
or
test
xor
sti
lds
mov
addr16
sub
sbb
hlt
lret
pusha
pop
pop
in
mov
std
mov
fs
jnp
bswap
into
mov
test
jne
mov
aam
sub
jo
fistpl
adc
push
xchg
dec
incb
shlb
jbe
movsb
xor
xorb
inc
inc
mov
jno
push
or
xchg
jno
sbb
repnz
mov
out
mov
pop
fisubl
pusha
addb
dec
mov
call
jnp
inc
jo
ffreep
jne
push
pop
add
mov
into
pop
imul
or
lock
pop
das
std
jge
aam
ffreep
adc
ret
xchg
pop
inc
xchg
push
hlt
insb
es
sbbb
ljmp
mov
ja
or
fcmovnbe
sub
adc
pop
xchg
fstps
clc
xor
scas
nop
dec
cmp
incl
lds
add
scas
jbe
gs
push
xchg
jb
jmp
xchg
cmp
mov
adc
xor
mov
test
push
jl
mov
lods
inc
push
adc
insb
aam
inc
lock
popf
mov
movl
inc
sub
nop
pop
sub
imul
push
push
inc
xor
sahf
inc
shrl
inc
movsb
add
mov
subb
and
insl
in
pop
dec
and
mov
fists
cmp
movsl
pop
stos
dec
xor
call
pop
ljmp
data16
test
and
jmp
int3
push
sbb
mov
push
icebp
bound
cmc
bound
sbb
arpl
add
stc
fistps
popa
ret
les
and
mov
xchg
sub
dec
bnd
mov
add
pop
idivl
pop
sbb
andl
aam
sahf
mov
int3
outsb
mov
pushf
xchg
push
dec
aad
mov
sbb
mov
sub
xchg
adc
mov
in
or
xlat
or
mov
add
je
mov
movsl
dec
sub
ret
inc
lods
std
pushl
inc
add
lock
jbe
ficoms
push
leave
mov
inc
push
mov
mov
mov
push
cmp
test
test
scas
mov
pop
aam
mov
rorb
jmp
and
cmp
mov
cmp
pop
dec
cmp
ss
add
out
dec
mov
dec
call
adc
adc
cmp
out
push
fwait
and
clc
imul
bound
push
dec
cs
ja
mov
jl
xor
sbb
in
xchg
psadbw
adcb
jg
inc
or
hlt
push
mov
adc
call
in
dec
mov
sbb
lcall
mov
in
push
mov
xchg
jae
xor
pushf
in
cmpb
xchg
lock
insl
add
dec
pop
and
xor
mov
aaa
pop
call
test
clc
out
pop
lcall
lea
jae
push
xor
sbb
inc
sbb
repz
dec
shll
jle
outsl
jmp
xlat
jl
cwtl
sub
jp
cmp
mov
sahf
or
scas
fildl
pushf
scas
sub
leave
pop
jae
ja
add
push
gs
cld
cmp
in
cli
std
arpl
outsl
cmpb
call
loop
mov
and
inc
dec
xorb
push
rcll
jns
xchg
aam
nop
jnp
cmp
sahf
jge
add
sub
push
xor
cmp
ret
insl
mov
and
idivb
mov
stos
out
push
add
xor
dec
adc
movsl
scas
and
jge
lods
nop
cmp
cmp
adc
mov
jmp
mov
mov
lods
add
and
nop
aaa
les
jmp
add
pop
arpl
imulb
arpl
mov
ja
ljmp
int
and
pushf
jno
add
push
aad
mov
call
sbb
pop
xchg
pop
fcom
push
jp
push
cmp
push
adc
xchg
and
lods
je
push
jg
add
xchg
pop
xchg
into
nop
jmp
aaa
stos
call
sarl
clc
adc
imul
jbe
ficompl
inc
mov
mov
mulb
push
sbb
testl
les
insl
int3
roll
fildll
pop
adc
and
rclb
cmp
cmp
xchg
pop
out
mov
xlat
popf
and
fucomp
add
pushf
dec
pushf
jo
scas
dec
dec
js
mov
popa
movsb
sbb
and
push
rcll
push
xor
fidivrl
orb
stos
cmpsl
pop
xor
aam
xchg
cmp
push
lret
sub
in
xlat
add
mov
out
add
inc
outsb
xlat
or
cmp
add
lds
xlat
fwait
add
or
cmpsl
jl
mov
je
test
divb
mov
mov
cmpsl
std
jo
pop
adc
lods
scas
aad
stos
sbb
sub
pop
pushf
jbe
push
lret
inc
cld
jns
jae
mov
xchg
dec
cmp
xchg
ret
or
inc
pop
dec
push
movsl
movsl
popa
inc
incb
sub
pushf
jl
cli
pop
sub
sbb
jnp
icebp
hlt
cli
cmp
ret
rorb
lea
inc
in
dec
and
fwait
sbb
addb
xorb
aam
dec
xchg
jge
mov
loopne
push
nop
cmp
scas
ret
insl
cs
inc
sti
lods
andb
xor
ror
stos
cmp
mov
fnstsw
outsb
or
xchg
fdiv
inc
xchg
loop
mov
dec
xchg
xor
adc
sub
aas
adc
jg
outsb
jp
add
out
mov
mov
rcll
xor
in
pop
les
lret
or
sbb
push
inc
add
lea
scas
xor
cwtl
loopne
add
mov
lret
dec
bound
pop
sbb
outsl
aaa
jae
out
dec
sbb
test
dec
fstpt
or
pop
push
movsl
icebp
ret
aad
sbb
and
int
ficompl
push
lret
lea
and
sub
push
subb
pop
fldt
sbb
xlat
fwait
arpl
jns
pop
push
loopne
lret
loop
dec
or
jg
xchg
lahf
dec
lods
mov
sub
arpl
popa
orl
incb
push
mov
inc
push
and
xchg
pop
pushf
dec
fdivs
xchg
fwait
add
push
roll
pop
mov
or
in
push
or
les
fidivl
mov
adc
enter
cmp
arpl
mov
popa
into
push
rcrl
xchg
pop
out
push
sbb
pop
pop
loopne
movsb
mov
stos
inc
xor
mov
ss
xchg
daa
idivb
call
outsl
mov
xor
ja
push
xchg
xchg
rcrl
enter
pop
andb
jb
mov
mov
sub
psubsw
sbb
cs
lock
adc
loopne
adc
and
cmp
arpl
scas
adc
add
pop
setge
mov
enter
fldcw
shll
imul
sub
cmp
cmpsb
out
sbb
mov
arpl
dec
xchg
fnstsw
mov
bnd
std
mov
lds
sbb
add
jno
mull
outsl
dec
jge
hlt
pop
ret
ja
adc
sahf
sahf
lahf
dec
jge
test
outsb
cs
xor
push
out
sub
rorl
dec
cmp
sbb
xor
enter
hlt
mov
push
cmp
iret
xlat
call
jmp
push
push
fdivrs
ljmp
scas
divb
mov
push
cltd
in
stc
stos
adc
scas
xchg
aam
shlb
clc
xchg
xchg
mov
push
adc
sar
addl
xor
mov
ret
mov
mov
sbb
or
imull
or
stc
mov
ror
mov
fnstenv
or
aaa
mov
or
cmp
adc
loope
pusha
daa
mov
adc
and
leave
enter
cmp
cmp
mov
push
in
xchg
rcrl
mov
push
aad
mov
sbb
pop
jecxz
dec
lcall
add
xlat
lcall
sub
sub
clc
dec
rcrl
ljmp
sbbl
dec
jno
sbb
aaa
xor
dec
loope
out
dec
mov
mov
lock
ljmp
mov
xchg
sub
push
fcomp
mov
sub
and
xchg
gs
mov
loope
push
dec
and
cmp
ret
push
inc
movsb
adc
cld
rcr
mov
mov
cld
xchg
xchg
push
movsl
push
pop
xchg
stos
jl
inc
mov
push
lcall
fptan
cmp
mov
lds
aam
out
sbb
clc
pop
sub
jbe
sbb
mov
jbe
les
mov
aaa
sub
mov
cmp
movsb
call
js
iret
sub
or
jle
pop
cwtl
hlt
ja
test
push
movsl
fcmove
pushf
int3
mov
out
add
jle
cwtl
push
pop
pop
aas
xchg
icebp
jno,pn
jg
ljmp
and
dec
out
loop
in
cli
cli
mov
subb
jne
pop
xlat
sub
xchg
jne
xor
xor
jge
lea
fs
jg
out
xchg
jo
cli
cmpsl
dec
pop
in
mov
mov
and
push
push
xchg
mov
test
imul
daa
sbb
mov
subl
jae
in
or
std
repnz
ss
mov
les
sti
cmpl
sub
mov
xchg
xorl
mov
and
hlt
mov
sahf
cltd
sbb
shr
test
xchg
cmp
adc
pop
pop
jle
sbb
aas
cmp
mov
mov
rclb
fwait
dec
and
inc
pop
insl
sub
pop
sub
push
pop
das
mov
inc
jecxz
insl
adc
arpl
fdivrl
pushf
mov
cmp
adc
shrl
mov
jge
pop
inc
push
dec
or
cmp
inc
jmp
and
jnp
mov
and
arpl
or
and
xchg
jb
inc
ficoml
pop
mov
xor
or
dec
inc
jns
xchg
sub
call
andb
in
jne
xchg
insl
popa
adc
lods
outsl
mov
and
hlt
lds
test
push
pop
stos
ss
xor
xchg
xor
scas
enter
and
jmp
dec
lahf
int3
sub
push
cmp
out
or
and
push
or
fsubl
cmpsb
pop
lods
cmpsl
mov
add
out
repnz
in
sbb
push
pop
das
xchg
repz
mov
out
adc
push
cmpsl
jne
arpl
ljmp
nop
mov
push
or
je
inc
cmpsb
cmp
setg
sub
mov
adc
adc
pop
les
fstpt
mov
sbb
pop
add
ss
and
jbe
sbb
sbb
mov
jb
push
movsl
add
push
pop
jae
loopne
pushf
push
test
xor
cmp
subb
dec
or
cmp
inc
movsb
push
xchg
sarb
stos
into
add
mov
cwtl
jl
jecxz
adc
cmpsb
and
sti
sbb
rcr
std
mov
inc
jo
call
push
repnz
cli
pop
loop
mov
fadds
ficomps
jns
xor
jge
nop
ret
dec
in
test
push
ljmp
cmpsb
mov
mov
inc
lea
mov
bnd
adc
add
sbb
fldt
and
jp
or
aad
push
testl
cwtl
outsb
xchg
pop
add
jns
dec
jbe
mov
mov
and
adc
mov
sarl
jno
lods
or
ficomps
sbb
jne
xchg
addb
imul
jnp
and
pop
decb
mov
push
jo
ret
pop
pop
cmp
inc
dec
out
in
add
add
fnstsw
mov
cmpsb
repz
mov
pop
hlt
mov
mov
out
call
sbb
push
aas
data16
test
push
push
test
push
xchg
inc
int3
movsb
loop
pop
int
mov
nop
jmp
adc
pusha
cmp
or
jno
lods
dec
jae
enter
into
mov
inc
fsubp
pushl
xchg
in
mov
into
jp
ret
sub
idivb
mov
es
or
push
xor
mov
fnstsw
pop
divb
pusha
imul
pushf
sub
xor
jnp
push
push
mov
sub
push
insb
frstor
lahf
sub
push
shrl
orl
insb
xor
repnz
mov
mov
inc
aas
pop
mov
xchg
call
fisttpl
mov
lret
jae
add
in
inc
mov
into
xchg
or
test
add
xor
bound
inc
pusha
test
in
or
mov
and
push
negb
cli
aad
dec
push
pop
shlb
dec
dec
push
loope
mov
sbb
add
or
cli
js
gs
add
in
xchg
outsb
or
xor
pop
mov
iret
add
pop
sbb
ss
push
cmpsb
movsl
inc
fcmovnu
push
jg
out
cmpsl
cmp
fcmovnu
stc
inc
pop
dec
lcall
hlt
enter
test
xor
push
test
pushf
push
cli
mov
out
out
sub
mov
lahf
dec
outsb
mov
loop
pop
sbb
imul
cmp
inc
jno
jo
xor
loop
cmp
outsl
pop
lods
push
sub
cmpsb
out
inc
cmp
xor
dec
xor
ss
ret
pop
stos
in
lds
les
into
aam
hlt
arpl
jl
and
or
mov
leave
sbb
movl
fdivr
imul
or
subl
cli
scas
cli
and
frstor
or
push
hlt
daa
jbe
cs
aam
add
out
jg
inc
out
test
jmp
shr
imul
fldt
inc
test
ficomps
cmp
lock
jle
dec
xchg
mov
mov
ja
cli
idiv
stos
dec
xorl
and
enter
cmp
or
push
int3
xor
pop
pop
imul
pop
add
mov
sbbl
inc
add
aaa
lahf
and
js
into
pop
outsl
jb
adc
xchg
push
out
pop
or
dec
lret
pop
es
adc
add
in
jns
jge
nop
shr
in
fsubrs
push
xchg
jl
bound
rorl
icebp
add
ficoml
ja
mov
push
push
testb
std
int3
shl
mov
ss
push
cld
roll
push
jle
rcrl
and
repnz
mov
mov
insl
scas
jnp
cmpsb
sub
xchg
lcall
and
adc
ds
or
lods
pusha
test
adc
outsb
mov
push
and
sbb
inc
jmp
insb
pop
adcl
jge
dec
push
pop
push
xor
pop
adc
push
or
test
add
daa
pop
sub
das
and
cwtl
adc
mov
adc
dec
insb
icebp
push
jmp
hlt
or
push
sub
sbb
in
pop
js
adc
cltd
adc
mov
fcos
bound
int
inc
bound
cmp
data16
testl
sub
divl
push
cmp
cmpsb
inc
inc
notb
cmpsb
popf
xchg
jecxz
cmpl
imul
xchg
push
scas
sbbb
mov
mov
in
shlb
xchg
aas
cmp
lock
call
imul
cli
stos
push
dec
mov
adc
data16
sbb
aaa
push
mov
in
xchg
mov
shll
mov
jnp
test
push
rcr
shll
int
fwait
scas
push
cmp
mov
add
sub
int3
out
loop
mov
inc
es
mov
mov
xchg
in
call
in
pop
mov
arpl
es
pop
cwtl
int
cmp
cs
jb
jecxz
loop
rolb
pop
add
or
sbb
ret
add
ljmp
loop
and
mov
notl
push
dec
add
jae
jbe
cmp
jg
mov
dec
repnz
scas
or
cmp
push
push
lea
inc
fstpt
mov
lds
inc
mov
push
imul
pop
fsubrl
lea
insl
scas
fistpl
mov
sbb
mov
inc
in
out
psubusb
add
xor
lahf
das
hlt
cwtl
sahf
xchg
cmp
mov
ja
mov
fimuls
sbb
pop
test
pushf
mov
int
push
test
frstor
mov
sub
sbb
shlb
nop
jg
andb
push
adc
scas
xor
or
and
sbb
std
ficompl
mov
or
dec
sub
icebp
and
mov
cmp
fnstcw
pushf
pop
test
xchg
lds
aam
mov
jle
fnstenv
dec
add
rcll
filds
xchg
fcompl
xor
mov
cmp
rcrl
cmp
in
repz
aad
mov
dec
insl
push
push
jae
or
dec
jns
xchg
push
dec
lods
in
imul
ljmp
nop
push
movsl
into
cmp
mov
add
popf
sti
les
cld
roll
or
cmp
push
into
pop
xchg
arpl
in
fisubl
stos
jns
mov
inc
mov
cmp
or
mov
or
rcl
inc
fisubl
and
psrld
mov
lea
jle
sub
jbe
mov
pop
repnz
repnz
pop
mov
test
jle
pusha
dec
jge
subl
push
dec
mov
add
adc
lods
xor
pop
in
push
divps
movsl
in
sub
mov
mov
mov
mov
ret
inc
rcrb
mov
sub
mov
xchg
lret
sub
push
xchg
shlb
sub
cmp
jl
insb
xchg
ds
test
lods
stos
aam
jmp
addr16
aas
mov
stos
push
gs
dec
fisubrs
xchg
clc
pop
push
add
jns
addr16
adc
lock
je
fucomi
cs
push
cmc
fisttps
mov
rorl
enter
mul
pusha
inc
fimull
mov
rcrl
xchg
and
aam
push
dec
popf
mov
dec
stos
aas
jbe
cmp
sarb
add
cmpl
mov
lods
test
lods
mov
pop
and
jno
mov
lret
imul
jbe
clc
fidivl
in
shrb
adc
pushf
fistl
gs
jae
push
enter
in
iret
shll
mov
add
mov
fs
push
js
imul
sbb
nop
mov
xor
pop
and
mov
rcr
dec
lods
xchg
subb
adc
push
push
rcrb
mov
xlat
icebp
out
push
inc
xchg
fidivs
adc
xchg
jnp
mov
jnp
xchg
adc
stos
pop
push
fs
jecxz
lds
or
mov
cld
mov
aas
out
sub
jne
stos
xor
sar
pop
nop
sub
arpl
aad
stos
mov
inc
xor
mov
mov
mov
mov
pop
in
cmpl
out
and
leave
out
add
bsr
add
ret
hlt
push
shl
mov
movsb
inc
out
pop
sub
inc
clc
sarl
push
jb
arpl
sbb
add
jnp
aaa
fwait
std
fwait
mov
xor
inc
xchg
aam
addl
mov
xor
rcrl
mov
add
add
pop
xlat
imul
mov
pusha
out
dec
add
sub
mov
leave
movsl
pop
sub
sti
xor
in
fs
jge
push
or
scas
adc
cs
adc
ja
mov
sbb
insb
aad
mov
push
mov
xor
or
loop,pn
stos
sub
mulb
mov
pop
mov
fucomp
in
icebp
add
notl
sarb
or
xchg
jno
loop,pt
sar
imul
lods
dec
imul
std
std
jp
iret
aad
ret
mov
fdivrs
jg
jae
mov
pusha
inc
jp
inc
cmpb
cmp
mov
jbe
fiadds
dec
sti
ficompl
sets
imul
xabort
inc
fldcw
rorl
sub
or
test
std
decb
aam
xor
mov
sbb
cltd
iret
pop
pusha
sub
xor
or
fstl
xor
xor
addl
lret
out
push
xchg
daa
sub
xor
pop
out
int3
jne
or
pop
ja
add
adc
mov
dec
aam
jecxz
push
rolb
pop
aaa
jnp
adc
mov
jecxz
lcall
jmp
cmp
mov
aas
adc
stos
push
mov
xchg
mov
stos
stos
mov
hlt
dec
repz
dec
adc
inc
outsb
outsl
adc
jbe
cmc
cmp
ss
xchg
jb
or
and
push
dec
out
fcoml
pop
jle
mov
add
mov
pop
sub
pop
imul
pop
into
adc
push
rolb
inc
xrelease
cltd
popa
inc
cmc
inc
add
jecxz
adc
stos
pop
push
push
mov
pushf
pusha
inc
in
cli
into
push
pop
enter
pop
dec
sub
mov
push
leave
mov
jmp
xor
push
lods
sub
mov
sub
data16
push
rcl
adcl
pop
fadds
sbb
inc
fldl
dec
dec
mov
or
mov
mov
or
fcmovnb
loopne
cs
cmpsb
bound
xchg
lods
stos
pop
cmpsb
imul
add
arpl
sub
js
mov
mov
xchg
add
xor
xor
xor
adc
lods
adc
movsb
out
pop
adc
jl
mov
ret
and
mov
mov
inc
mov
cmpl
cmp
lret
test
or
das
mov
sahf
scas
sub
inc
mov
out
jb
mov
sub
shrl
pusha
lret
fadds
pop
push
xlat
imul
loope
out
adc
jae
ja
or
pop
lret
shll
das
mov
int
fsincos
inc
loopne
test
mov
mov
xchg
rcrb
fidivl
jmp
xchg
jg
cmp
mov
push
popf
imul
cs
xor
push
pop
pop
mov
and
je
pop
loop
inc
not
mov
das
xor
int3
jnp
fistpl
jp
jge
pop
inc
add
inc
inc
push
jecxz
lods
imul
in
pushf
xor
jbe
pop
mov
jb
nop
jbe
push
icebp
mov
mov
push
pop
sbb
mov
ds
push
sbb
into
lods
or
dec
leave
xor
aaa
and
notb
pop
pop
lcall
cmpsb
inc
popf
cmp
daa
pusha
sbb
or
cltd
and
in
idivl
xor
xchg
dec
xchg
push
push
push
cmpsl
add
lods
inc
sahf
adc
cvtpi2ps
rcl
push
mov
sti
cli
mov
add
loop
push
or
add
cltd
iret
cmp
loope
xchg
hlt
sbb
push
stos
shl
fiaddl
roll
mov
mov
jmp
fsub
rolb
ror
es
pop
stos
fistps
aaa
mov
js
sub
ret
dec
mov
lret
pop
or
and
add
lea
rclb
adc
mov
jno
not
test
orl
stos
jns
jge
les
cmp
mov
push
filds
mov
pop
call
push
mov
ljmp
mov
jo
and
xchg
mov
sar
jbe
int
popf
outsl
jb
xor
aam
or
xchg
dec
imul
sub
or
cmovp
repnz
movsl
cmp
fistl
sub
xchg
xchg
push
jnp
mov
push
jmp
or
test
inc
repnz
pop
adc
js
fnstcw
ds
and
idivb
push
gs
bound
pop
mov
adc
fidivl
jge
fwait
mov
in
jns
ficoml
xchg
test
clc
aad
and
outsb
rcl
mov
xlat
mov
in
xchg
sub
sub
flds
fbstp
and
sbb
sub
inc
xor
in
add
adc
iret
adc
mov
stos
enter
and
push
in
cmpsl
test
arpl
cmpsl
fdivrl
repnz
jbe
dec
push
icebp
mov
fstl
adc
test
loope
cmpsb
test
pop
ret
add
mov
xorb
jle
out
mov
jbe
jbe
lret
inc
repnz
push
push
xchg
sahf
test
lcall
xor
jne
shr
je
loopne
jl
mov
push
test
or
jg
mov
push
inc
or
mov
fdivl
xor
sbb
inc
fidivrs
pushf
mov
inc
pop
jle
fsubrl
and
bound
mov
cmp
hlt
lock
sti
add
jns
sbb
loop
shrb
fnstcw
insl
leave
leave
and
hlt
dec
adc
sub
call
imul
fld
jno
mov
xchg
out
mov
inc
mov
shl
ret
jo
dec
mov
mov
out
sub
and
cmp
sbb
jmp
aas
mov
pushf
sub
adc
inc
inc
faddl
or
inc
mov
jns
inc
cmp
cmp
push
movsl
les
fwait
xlat
mov
and
lods
mov
mov
out
scas
add
ss
cmp
out
clc
cwtl
jno
or
mov
and
mov
ficoms
adc
jge
movsl
loope
pushf
push
xor
out
lret
and
xorl
test
inc
xor
mov
test
sub
jg
xor
bnd
cmp
pop
ja
call
or
inc
jle
add
pop
sti
aad
sbb
inc
in
lds
mov
mov
push
jnp
pop
xchg
sub
cmpsl
test
in
movsl
movsl
push
iret
or
xchg
sub
loopne
cwtl
or
inc
sub
jp
adc
push
fmuls
cmpsl
mov
lods
out
in
fstpt
mov
sub
mov
inc
jle
in
xor
decl
dec
pop
jno
test
pop
jo
fstps
das
cmpl
bnd
pop
les
xchg
adc
jae
xchg
xchg
out
mov
dec
addl
xor
in
mov
movsb
fiaddl
js
imul
mov
cmc
jmp
outsb
mov
dec
fimull
inc
mov
outsb
sub
in
or
inc
in
xchg
adc
hlt
addl
into
js
and
jnp
movsl
adc
inc
adc
fdivs
push
or
dec
push
mov
pop
loope
gs
push
sub
cmc
cli
mov
loope
popa
sub
xorb
dec
mov
mov
pop
mov
sub
cwtl
les
push
nop
sbb
sub
mov
jp
mov
inc
je
cmp
into
inc
cmp
emms
testb
flds
xor
and
pminsw
xlat
call
scas
stos
cmp
and
push
xlat
stc
sbb
xchg
faddl
sar
cmpb
vpshufd
test
dec
push
push
loope,pt
sbb
lods
loope
or
and
cwtl
cmp
cmp
jg
test
mov
shll
push
jge
movb
inc
pusha
push
inc
lret
jecxz
jle
fisttps
ror
js
cmp
les
fwait
push
inc
sar
arpl
dec
int
xor
call
xor
dec
mov
add
jp
dec
faddp
fadds
scas
js
out
shll
mov
das
out
jmp
test
fsubl
xor
jecxz
cmp
sub
mov
jo
pushf
nop
jmp
sbb
leave
push
inc
andl
lret
ror
sub
shr
imul
imul
enter
and
shl
sub
pushf
sbb
adc
pop
mov
neg
and
popf
in
and
dec
sub
mov
ucomiss
mov
cmpsl
loop
pop
xchg
ret
in
push
xor
aaa
and
cld
and
sbb
push
dec
mov
mov
cwtl
xchg
test
icebp
test
mov
fdivrs
fs
add
and
xchg
dec
sbb
jae
sbbb
das
in
push
sub
cmp
fistps
dec
cltd
add
jbe
mov
or
and
sbb
jp
jp
add
movsl
cmc
push
test
and
hlt
sbb
ss
xor
scas
pop
xchg
jbe
shlb
les
xchg
adc
fs
xor
pop
push
das
dec
daa
lock
clc
sub
shlb
sbbb
cmp
cmp
fstps
and
and
in
push
jg
jae
sub
lret
fsubrp
arpl
mov
push
cmc
jb
mov
jge
mov
inc
mov
lcall
lds
or
je
jle
mov
jp
add
jg
pop
aas
ret
cmp
outsl
cmp
in
xor
call
or
das
mov
xchg
push
out
dec
test
jns
pop
daa
inc
and
outsb
adc
xchg
ljmp
mov
cwtl
jnp
idivb
jmp
mov
mov
shlb
div
dec
adc
push
mov
shll
orb
xchg
in
jg
lock
pop
call
pop
sbb
nop
sbb
xor
negb
mov
xor
adc
dec
sub
int3
cld
push
jmp
adc
iret
pop
orl
mov
xor
in
jl
adc
loope
das
je
sub
xchg
int3
xor
adc
push
add
xor
and
ss
fcmovnbe
cmp
rcll
pop
data16
sub
movsb
shr
addr16
xchg
xlat
pop
pop
inc
mov
push
mov
push
sahf
lret
push
or
push
xchg
xchg
stos
out
push
arpl
dec
fdivrp
push
orb
xor
jbe
and
out
cmpsb
hlt
js
andl
dec
sub
scas
rcl
js
fsubl
pushf
test
add
sbb
jns
mov
lds
loope
dec
mov
mov
insl
scas
cltd
sbb
dec
sarb
enter
push
ret
lods
testl
popf
in
inc
sti
addr16
xlat
je
jbe
ret
add
xchg
pusha
fidivrl
fdivs
xor
adc
xchg
pusha
mov
hlt
stos
imul
clc
cmp
sub
negb
inc
cltd
sub
mov
inc
pop
xor
scas
push
es
js
icebp
mov
fisubl
add
jb
sbb
mov
mov
and
rclb
inc
dec
dec
lock
ds
jmp
sub
pop
add
into
fdivr
cmp
adc
test
add
jo
stos
jns
in
cmp
ljmp
push
adc
cmp
adc
cli
aaa
xchg
cmc
sbb
add
les
je
cltd
and
jmp
cmp
stos
dec
popa
sub
pushf
push
push
sbb
dec
jle
adc
aaa
pusha
shlb
enter
xchg
loop
faddp
dec
sbb
lods
mov
imul
push
jge
xor
fmull
in
xchg
cmc
icebp
pop
aas
adc
fcmovnb
movsb
add
jns
mov
mov
shl
jns
mull
scas
jle
inc
mov
push
hlt
jnp
imul
adc
aas
gs
push
pop
test
jge
or
cmc
fst
mov
add
outsb
pop
arpl
adc
jo
test
jno
data16
scas
mov
pop
jno
stos
ljmp
dec
jg
fwait
iret
xorb
inc
jnp
xor
insb
xor
add
ds
jno
cli
adc
mov
cwtl
xchg
repnz
insl
and
rolb
or
pop
sarl
inc
inc
scas
aam
xchg
add
pop
cs
shrb
insb
or
imul
sub
mov
js
adc
jbe
dec
or
in
mov
lret
mov
lcall
mov
loop
dec
xor
mov
stc
mov
cmp
cmp
jle
cwtl
pusha
dec
shrb
stos
mov
fistps
fsubrl
xchg
xlat
cwtl
aam
cwtl
in
mov
push
in
shl
and
xchg
xchg
nop
pop
xchg
sahf
cmp
pop
nop
pop
jno
hlt
cmpsl
jmp
es
das
pop
push
sbbl
ja
push
lret
outsl
repz
mov
xchg
push
andnps
jbe
movsl
push
test
shll
aam
xchg
out
jecxz
loopne
dec
push
cmp
dec
inc
and
jns
cltd
push
pop
xchg
mov
pop
dec
fildl
xchg
push
sti
pop
shrb
adc
inc
push
add
stos
pop
fildl
lahf
cmp
loopne
sub
test
dec
lock
dec
cmpsb
adc
xor
stc
mov
repnz
ret
test
insb
adc
addr16
andb
xchg
enter
cmpsb
adc
cmp
cs
in
mov
mov
ret
xchg
pop
jnp
dec
mov
mov
fiadds
adc
mov
mov
add
adc
xchg
lods
mov
push
sub
adc
ret
movsl
fidivrs
pop
push
inc
pop
int3
sub
sbb
push
addr16
pop
xchg
inc
es
jae
mov
and
mov
and
mov
stos
jo
fimull
pushf
out
jmp
ja
adc
mov
fwait
push
mov
push
test
stc
or
or
inc
arpl
xchg
xlat
push
int3
sahf
mov
mov
xor
xor
mov
mov
test
outsb
bound
bound
cmp
or
adc
sbb
adc
ljmp
hlt
int3
push
fsubr
xor
outsb
fsubl
sub
fdivrp
cmpsb
and
jmp
stos
jl,pn
jle
sahf
les
adc
push
jb
lock
and
jecxz
js
cmp
cs
shlb
jno
jbe
mov
push
sub
xor
xchg
hlt
ret
in
inc
jmp
std
and
insl
sub
lds
hlt
imul
test
push
inc
fmuls
xlat
stc
sub
lock
ss
xchg
in
lds
mov
mov
pop
adc
outsl
fcompl
in
adc
ljmp
call
jae
int
call
inc
fistps
xor
push
dec
stos
stos
inc
stc
pop
xchg
ja
jecxz
pushf
in
adc
xor
and
jp,pt
mov
lahf
test
addr16
jg
imul
xchg
sbb
aam
pop
cmp
cmp
cmpsb
icebp
push
push
arpl
arpl
or
push
iret
aas
and
or
add
or
filds
mov
repz
adcl
sbb
mov
xor
jmp
icebp
sbb
ja
pop
shl
mov
pop
pop
lock
mov
jg
in
and
cld
fbld
mov
and
in
xchg
mov
loopne
cli
xchg
out
cmp
or
inc
inc
enter
xorb
jo
les
ret
push
push
push
mov
icebp
add
gs
aaa
std
into
push
xchg
in
nop
aam
pop
xor
rcr
push
sbb
or
les
push
add
adc
lahf
xor
xchg
cmc
fcomip
je
mov
or
scas
shl
xchg
js
movnti
fists
cmpsb
cmp
not
call
imul
xor
test
fisttpll
mov
out
in
jo
inc
dec
push
fistpll
dec
rorb
addl
or
aad
insl
xlat
fildll
subl
and
dec
and
inc
subb
popf
xchg
push
test
cmp
insb
or
bound
lcall
cli
inc
lock
xlat
xorl
mov
mov
aam
mov
push
xchg
rolb
jecxz
cmpsl
js
mov
lds
inc
inc
ja
notb
sti
inc
pop
xor
neg
mov
cmc
bnd
out
sahf
cmp
cld
lock
andb
mov
cmp
mov
stc
in
ss
inc
mov
push
pop
repz
decb
nop
test
lahf
pop
inc
test
sbb
and
fdivrs
sub
insb
inc
fsubrs
testl
xchg
mov
sbb
push
aas
fwait
mov
and
mov
push
mov
scas
cmp
ja
dec
subl
jnp
push
fwait
repnz
sbb
adcb
shrb
shll
lds
and
sahf
dec
push
jnp
ret
inc
inc
push
jae
xchg
scas
dec
test
push
mov
mov
adc
pop
and
cld
clc
dec
fisubrl
clc
sbb
outsl
jmp
stos
dec
cmpsl
and
mov
cmp
andb
xorl
fwait
outsb
inc
int
jg
pusha
into
sub
sub
or
shlb
jle
stos
and
xchg
movl
popa
hlt
cli
ret
push
lods
mov
rcrb
or
fidivrs
shlb
jle
mov
aad
rcrb
xor
cmpsl
dec
or
add
cwtl
mov
push
adc
inc
fsubs
cmp
push
lret
xchg
cmp
cmp
pop
jle
outsb
add
jbe
push
dec
test
and
mov
or
ljmp
sahf
adc
or
cmp
sub
jns
adc
sarb
das
aas
mov
testl
mov
sahf
inc
clc
xlat
mov
mov
jo
fsub
jno
sbb
testb
sub
insl
sub
stos
out
xchg
imul
lods
add
call
sbb
push
in
mov
jno
scas
xchg
shrb
ss
test
push
pop
pop
dec
adc
push
mov
jmp
icebp
push
pop
out
cmp
mov
shll
sub
pop
lods
push
jle
and
mov
mov
addr16
jb
sbb
mov
stc
and
xor
push
pop
inc
sub
xor
bound
in
repnz
fcomps
ja
sti
mov
mov
pop
cmp
xchg
sub
fdiv
inc
iret
mov
inc
xor
jae
xor
clc
punpckhbw
and
ret
push
aas
pop
add
ret
xchg
imul
jbe
push
push
lahf
jg
mov
je
sub
std
gs
push
call
jl
push
ljmp
jae
pop
incb
or
xchg
xlat
mov
pop
mov
jg
jge
adc
cmp
stos
lret
js
sub
push
and
inc
dec
xchg
cmp
in
mov
mov
mov
loope
dec
xchg
push
jg
outsl
push
daa
add
mov
push
pop
arpl
jp
js
mov
and
xchg
or
add
leave
add
add
pop
enter
mov
fidivl
mov
movsl
or
pop
or
cmp
and
mov
out
fwait
rclb
cmp
repz
pop
aaa
cmp
push
push
xchg
inc
pop
nop
xchg
in
lock
outsl
add
sbb
inc
popa
gs
pop
sub
xor
shlb
mov
xor
lock
scas
sbb
adc
jnp
pushf
and
jmp
mov
mov
mov
mov
popa
and
pop
cld
mov
push
jno
sub
sbb
add
xor
in
je
stos
js
pop
xor
stos
lret
push
stc
jae
jmp
mov
out
mov
pop
lods
add
mov
dec
or
jmp
pop
sbb
mov
jecxz
push
mov
sti
mov
in
mov
sbb
dec
sahf
fnstsw
and
jle
insb
mov
inc
int
mov
ret
pop
jno
cmc
aaa
xlat
jmp
sti
sahf
sub
inc
incb
imul
fs
jle
add
xor
movsb
xchg
fcmovu
fcompl
mov
test
int3
sbb
sbb
bound
lahf
aas
cld
inc
add
loopne
in
mov
rclb
fiaddl
decl
sub
and
pop
mov
mov
je
imul
fcomp
adc
add
inc
repnz
mov
dec
push
push
pop
adc
lock
mov
xor
hlt
dec
add
ret
lret
sub
inc
scas
push
sbb
sbb
mov
je
mov
movsl
xchg
cmp
out
and
lock
repz
fiaddl
negb
dec
into
lods
daa
xchg
out
scas
shrl
push
movsl
or
adc
or
xchg
sbb
xchg
push
repnz
pop
add
into
incl
testb
aad
sub
outsl
or
mov
or
into
pop
xor
mov
je
cmpsb
icebp
pop
aas
jns
jno
outsb
shrl
push
repz
into
ss
add
loop
cltd
cmp
pop
test
jmp
sahf
mov
sub
hlt
and
adc
pop
fistpll
xchg
cmp
xchg
out
jae
pop
mov
lods
aad
or
add
xchg
jg
mov
cmp
int3
adc
dec
pushf
mov
pop
cld
push
cmp
or
inc
dec
push
mov
xlat
push
std
xchg
fwait
mov
cwtl
stc
sbb
cs
ret
cmp
out
nop
mov
push
jae
scas
and
sarb
mov
sub
jg
movsb
test
push
or
mov
add
sub
push
adc
mov
dec
or
repz
or
mov
sub
xor
mov
pushl
loopne
adc
inc
sub
clc
cmp
inc
mov
and
mov
lods
cmp
fcmovnu
pushf
lcall
ficomps
mov
sbbl
push
lods
inc
add
movsl
mov
and
sbb
cmc
cs
shlb
adc
jbe
sub
phsubd
andl
mov
imul
dec
in
decl
pop
pop
mov
jbe
outsl
sti
scas
xchg
inc
rol
stos
or
and
mov
sub
and
jge
aam
sbb
adc
jb
push
add
adc
push
pop
inc
inc
inc
add
jb
lcall
push
sbb
jle
jge
or
jge
dec
cld
mov
rcrl
xchg
and
test
mov
mov
es
hlt
test
out
imul
jg
roll
cmp
popa
aad
adc
jecxz
or
mov
xchg
cltd
push
sbb
int
xor
pop
decb
push
jp
mov
mov
sub
pop
cltd
mov
call
cmp
mov
hlt
sbb
std
adc
fildl
mov
daa
bound
pop
or
cmp
inc
rolb
and
lahf
push
jo
and
fidivrs
dec
adc
mov
sti
inc
pop
scas
mov
inc
aas
es
mov
aas
into
push
dec
pop
jbe
pop
xor
adc
lret
xor
and
cli
sub
cmp
or
test
xchg
sbb
fisubrl
int
cmpsl
mov
lret
dec
push
sub
mov
or
sub
iret
out
sbb
imul
mov
in
push
clc
lock
add
pop
mov
inc
popf
cmp
loopne
cmp
lcall
cmp
xchg
or
xor
mov
mull
outsl
add
sti
cmpsb
hlt
leave
mov
dec
xchg
jns
xorb
dec
pop
test
cmp
aam
ds
test
aaa
rcrl
aas
or
xchg
test
adc
cmpsl
jae,pt
pop
outsb
sub
mov
ss
jb
inc
dec
fildl
mov
rcll
add
inc
in
push
jnp
psllw
fistps
clc
bound
add
inc
pop
sbb
and
sbbb
test
mov
cmp
data16
in
notb
mov
cmp
lock
dec
push
push
sbb
xchg
add
push
xor
mov
xchg
ret
xor
loope
cmp
fbstp
fcmovnu
jo
scas
pop
sti
sarl
in
cmc
mov
lods
iret
adc
xchg
jb
lret
in
ss
mov
std
add
push
or
inc
popf
sub
push
xor
adc
or
dec
push
add
push
jbe
xor
cli
sbb
hlt
das
adc
js
lods
into
fcoms
push
xor
mov
ljmp
std
push
add
fmuls
out
popa
movsb
xchg
or
cmp
stos
jl
aad
outsb
call
filds
popf
ljmp
xor
mov
add
dec
into
sbb
test
jl
push
push
dec
shl
bound
and
push
les
sub
rolb
fdecstp
in
pop
add
xchg
xlat
shr
sar
and
adcl
out
out
xor
fdiv
sti
fdivrs
jae
data16
mov
fwait
or
xchg
mov
mov
das
das
mov
cli
jecxz
pop
pop
add
lds
xchg
les
pop
mov
sub
mov
pop
scas
adc
cmp
mov
idivb
or
loop
flds
jno
or
sbb
xchg
inc
out
in
jl
xchg
push
stc
fs
outsb
pop
popf
shlb
js
jmp
cmp
mov
adc
pop
test
cltd
inc
orb
xchg
rorl
jnp
sahf
jns
pop
adc
mov
outsb
addr16
sub
xchg
cld
sbb
cmp
cmpsl
push
jb
cmp
popa
or
loope
mov
insl
jne
sub
cli
in
mov
repz
rolb
jmp
fsub
outsb
insl
ljmp
sar
jmp
mov
mov
andl
das
popf
inc
mov
push
add
jmp
shrb
daa
insb
jmp
mov
mov
xchg
jae
out
dec
dec
aam
mov
xchg
insb
fildl
pushf
add
xor
xlat
mov
adc
cmpsl
insl
push
out
cltd
or
mov
and
mov
mov
outsl
test
jmp
cmp
imul
pop
gs
repnz
loope
xor
push
sarb
pop
fldz
subl
movsl
mov
mov
test
xlat
pushf
loopne
loope
lods
adc
lods
and
cs
out
lahf
push
push
daa
xchg
pop
push
pop
hlt
inc
cmp
inc
mov
dec
adc
jmp
dec
shll
or
sub
sbb
addr16
stc
push
mov
jnp
ss
cmp
pop
stos
pushf
pop
pop
pop
dec
test
cmp
inc
inc
jo
xchg
jecxz
mov
pop
jp
aas
hlt
stc
and
push
dec
in
cmp
dec
test
dec
and
cmpb
push
cmp
inc
in
pop
xorl
sub
xor
jae
sub
test
dec
inc
call
dec
mov
repnz
pop
aad
stos
pop
or
jecxz
cmpsl
aam
dec
cmp
mov
xor
add
std
mov
repnz
fldl
adc
data16
inc
mov
sub
xchg
mov
test
mov
mov
xchg
xchg
aad
push
daa
pushf
mov
lea
pop
aas
cmpsb
and
inc
xor
push
xor
aas
cmp
mov
sahf
dec
test
sub
in
outsl
insb
and
movsb
arpl
mov
pop
mov
lock
inc
mov
loope
lods
mov
jns
push
mov
dec
shrl
xor
cltd
mov
lods
mov
lods
test
sub
mov
lock
mov
je
push
subb
leave
mov
cmpsb
cmp
fcmovbe
adc
push
adc
sbb
xchg
ljmp
xor
mov
pop
jb
jae
ret
int3
dec
test
test
int
stc
jmp
mov
mov
fcoms
sub
xchg
repnz
cli
in
sbb
inc
fwait
xchg
sbb
mov
es
cld
out
mov
cmp
xlat
ja
and
pop
mov
data16
and
test
adc
out
pop
pop
push
repz
mov
out
lahf
pop
outsb
and
adc
rclb
jge
iret
movsb
cmp
sarb
mov
cmp
cltd
mov
movsb
and
aad
scas
mov
xor
mov
loopew
scas
andb
xlat
call
iret
and
insl
insl
mov
iret
jl
sbb
mov
es
push
in
push
pop
jbe
jg
jno
int
sub
jmp
mov
loopne
fcmove
adcl
adc
jmp
mov
repnz
int
les
pop
test
in
test
jge
aad
lods
push
jge
test
push
test
cmc
jbe
mov
mov
lock
add
push
je
mov
and
lcall
inc
in
les
xorb
push
push
add
gs
pop
push
test
mov
pop
dec
in
leave
pop
js
mov
es
sbb
cmp
ljmp
es
or
xor
dec
cmp
pop
push
nop
loope
faddl
cmpsb
mov
lret
lods
dec
scas
inc
sahf
gs
mov
push
les
mov
push
into
add
mov
stos
daa
stos
jbe
test
cs
cli
mov
adc
jo
fstl
and
xlat
jle
mov
cmp
ja
xchg
mov
lods
cmpsl
jno
or
jo
jl
sub
push
in
mov
leave
inc
sub
mov
je
into
lds
push
add
dec
pop
push
fisubs
mov
jb
repnz
fnstenv
or
sub
ret
mov
or
or
nop
sub
pop
adc
sarb
int3
add
scas
xor
jg
dec
and
cmp
mov
sbb
sbb
inc
and
int
pop
xchg
cmp
adc
cld
daa
sar
mov
cltd
dec
adc
push
pop
cs
shr
ficomps
loop
mov
inc
sbb
fwait
pop
in
cmpsb
mov
cmp
lret
in
mov
push
cmpsl
and
inc
jne
repz
or
js
sub
gs
das
sub
fcmovnb
lret
xchg
or
mov
mov
mov
mov
xlat
decb
xchg
xor
fisubrl
movsl
jae
pop
orl
std
test
or
pusha
addl
xor
inc
cmp
hlt
cli
mov
mov
cmp
bound
pop
mov
jno
pusha
into
mov
addl
mov
fs
stos
cmpsb
test
xor
test
mov
xor
std
and
jmp
xchg
loope
add
pop
pop
inc
cmpsl
mov
fimuls
push
les
and
adcb
push
test
stos
pop
jno
cld
into
mov
mov
sarl
js
dec
aas
popa
ljmp
lds
inc
mov
fs
adc
cmp
jg
je
aas
sub
dec
cwtl
sti
or
pushf
fists
int3
mov
pop
inc
and
add
andl
sub
mov
jnp
mov
stos
dec
testl
push
dec
mov
insb
cld
fs
hlt
push
lahf
fwait
xor
fistpll
shlb
icebp
cmp
mov
mov
popf
es
ds
rcll
mov
data16
outsl
je
adc
mov
mov
scas
mov
arpl
cld
or
push
in
dec
jns
cli
mov
sbb
in
cld
cwtl
adc
xchg
dec
mov
rcrl
fidivrs
div
jp
test
pusha
fisubrs
mov
cmp
mov
dec
mov
pop
popa
popa
arpl
int3
push
push
insb
mov
nop
inc
aas
outsb
lds
insl
sub
mov
or
and
loope
addr16
add
ds
subl
mov
divl
pop
add
movsl
and
mov
mov
jne
pop
ss
push
lds
rorb
ljmp
js
mov
fsubrp
cltd
push
adc
xor
fldenv
sarb
and
mov
push
sahf
ficoml
addl
pusha
call
xor
out
push
enter
and
or
push
jo
pushf
add
cmp
int
ds
xchg
orb
test
popf
out
pusha
dec
fwait
xor
and
lret
orb
adc
std
add
pop
jbe
or
cwtl
add
cmp
mov
outsl
push
mov
repnz
loopne
add
negl
pop
imul
cwtl
inc
orl
adc
or
cmp
mov
mov
or
sub
scas
ficoml
push
inc
xchg
fcomps
insb
mov
inc
mov
xor
push
xor
cmp
dec
jbe
push
xor
fidivs
mov
mov
jecxz
or
mov
inc
adc
jns
mov
cmp
pop
stos
sbb
dec
pushl
jns
mov
stc
sub
movsl
and
andb
sub
jne
pop
and
inc
mov
push
and
fstp
xor
bound
mov
mov
cmp
jmp
fisttps
mov
cmp
mov
lret
hlt
clts
cmp
in
dec
adc
hlt
daa
add
popl
adc
rcrl
mov
repz
sbb
aad
nop
in
test
les
inc
mov
aad
pushf
jl
xchg
test
mov
rolb
fldt
maxps
rcrl
fcoml
cmp
mov
push
dec
aam
rolb
jge
xor
xor
pop
push
adc
pop
ljmp
mov
leave
mov
test
sub
xor
imul
imul
cmp
xchg
bound
mov
ret
mov
loope
out
sbb
cmp
into
movsl
js
and
pop
ss
add
dec
sub
lcall
push
xlat
xchg
pop
jno
std
cmc
lock
fidivs
mov
inc
and
je
loope
fs
mov
push
sbb
mov
xchg
pop
pop
mov
out
sub
fwait
sarl
mov
std
pop
adc
push
scas
repz
mov
jg
and
jmp
sti
nop
ss
jno
test
add
lea
aam
ficompl
loopne
pop
sbb
push
add
repnz
sbb
push
mov
push
ss
xchg
jmp
pop
jb
out
out
shr
pop
mov
inc
mov
bound
iret
ret
cmpsl
push
sbb
xor
lahf
cpuid
rorb
sub
int
mov
xchg
ror
mov
xacquire
push
dec
test
mov
cmp
add
mov
and
insb
jge
jo
orb
in
or
adc
cmp
mov
jae
push
jb
jecxz
test
mov
std
int
xchg
decb
sbb
add
xchg
push
xor
daa
loope
push
jp
dec
es
js
adcl
jne
jo
je
iret
mov
inc
lcall
sahf
aaa
inc
clc
jmp
xor
lcall
pop
push
push
xor
pop
and
je
jbe
loop
aas
or
lds
mov
add
push
fimuls
or
jl
pop
jp
stos
gs
mov
sbb
cwtl
les
xor
outsb
jno,pt
mov
sbb
scas
inc
cvtdq2ps
cli
jno
lret
add
sahf
xchg
loope
jmp
sub
scas
xchg
das
mov
add
test
pop
inc
clc
insl
sti
adc
push
mov
or
int3
xchg
scas
push
xor
sub
fsubr
push
xlat
dec
or
popf
or
xor
push
or
inc
cmp
imul
hlt
inc
jp
enter
aas
lahf
and
cmp
push
cltd
repz
movsl
loopne
lret
push
add
sbb
jbe
cmc
xor
es
cmp
add
cmp
add
cmp
and
pop
mov
ud0
fbstp
leavew
inc
testl
out
call
and
es
adc
in
jge
push
inc
out
push
mov
push
ss
mov
cmpsb
stos
mov
cmp
xlat
outsl
fisubrs
and
cmpsb
ja
rorb
cltd
mov
lahf
in
inc
int
test
insb
js
sub
adc
stos
mov
in
xchg
arpl
pop
inc
lcall
js
fs
mov
jp
push
rol
movl
lret
mov
xchg
xchg
push
sbb
sbb
cmp
sbb
inc
pop
popf
and
xchg
add
xchg
mov
arpl
shll
sbb
xchg
sahf
jecxz
push
cltd
aas
xor
add
fisttps
and
popf
inc
icebp
jmp
cmp
imul
fmul
nop
push
pop
or
mov
mov
aas
jne
pushf
cmc
sbb
fidivrl
subl
dec
add
xchg
push
repnz
dec
dec
xchg
cmc
adc
push
adc
test
adc
hlt
mov
sbb
popf
arpl
cmpsl
sub
lea
shlb
data16
ljmp
mov
jbe
cli
push
dec
pop
daa
pop
cld
nop
sbb
cmc
test
dec
aam
jle
adc
scas
xchg
sub
or
test
lods
inc
lods
rdtsc
dec
mov
shl
insb
adcb
fs
insl
add
xchg
dec
or
pop
add
inc
stc
xchg
ret
nop
pop
jo
rcl
cmp
stos
xchg
xchg
mov
dec
inc
mov
and
loop
dec
daa
push
fwait
ret
jo
cmpsb
xor
sub
mov
push
test
loopne
mov
pusha
and
lret
cmp
mov
nop
or
cli
jmp
jl
pushf
push
hlt
cwtl
adc
pop
cli
mov
loope
inc
stos
adc
inc
or
lock
in
dec
push
fadds
je
mov
fs
add
shrb
lret
xchg
les
jno
daa
shll
rorb
and
or
sbb
iret
test
mov
mov
cmp
stc
push
xchg
cmp
push
and
jl
fisubs
mov
adc
outsb
shll
push
lahf
push
test
jg
fcompl
inc
in
popa
popa
inc
or
mov
aam
loope
fidivl
fnstsw
inc
stos
inc
xchg
xchg
les
inc
and
hlt
and
xlat
pusha
sbb
pop
outsb
mov
je
xlat
es
gs
jns
mov
push
jge
xchg
roll
and
xor
lods
iret
mov
popa
xchg
rcl
fisubrl
outsl
test
xchg
loopne
les
outsl
mov
cmc
add
xchg
push
jmp
xlat
sub
gs
cmp
adc
daa
clc
imul
push
loope
repnz
mov
stc
xchg
mov
xchg
inc
sbb
xor
mov
adc
and
fwait
out
add
std
test
cmc
jbe
mov
jno
mov
cmp
lock
mov
in
jmp
into
dec
loope
sbb
mov
scas
notl
push
fimuls
adc
cmp
call
mov
stc
jge
push
push
adcb
mov
inc
xor
fldt
adc
cli
call
div
sahf
cwtl
cmp
scas
ds
inc
pop
das
or
xchg
and
inc
stc
mov
adc
push
lods
out
add
pop
adc
js
loop
mov
dec
cmp
test
fwait
push
sub
mov
adc
pop
cs
out
fsubrl
xchg
pusha
test
lcall
sbb
sub
cmpl
jl
cmpsb
addr16
pop
jo
popf
adc
scas
fists
in
adc
push
mov
stos
stos
add
xchg
mov
jg
add
cmpsb
pop
mov
test
pop
push
pop
cmpsb
sub
loope
fiadds
pop
xor
jbe
add
cld
pop
sbb
add
adc
mov
pop
in
mov
rcrl
loop
repnz
lcall
aaa
loope
pop
aam
jnp
mov
lret
enter
jge
js,pn
cmp
insb
sub
loope
sub
or
popf
sub
sbb
jge
push
and
sti
in
clc
lods
lock
push
mov
cmpsb
or
pop
push
ss
sub
gs
sbb
outsb
push
inc
and
cmpl
popa
lcall
mov
mov
xchg
sbb
xchg
mov
push
adc
sti
jg
loopne
inc
enter
dec
test
jg
add
dec
bound
ret
mov
push
pushf
jg
loope
xorb
rcll
fiadds
sbb
sbbb
mov
mov
fistl
sti
push
cltd
cmpsb
sub
dec
pop
test
imul
inc
inc
negb
cld
pop
pop
push
jge
imul
insl
into
mov
bound
xlat
pushf
cmp
jno
jge
or
sahf
lods
loopne
cmp
lahf
jmp
or
clc
hlt
ret
push
addr16
push
xor
icebp
mov
fstpt
int
test
data16
cwtl
and
repz
jmp
inc
idiv
mov
loopne
pop
jle
movsb
popf
stos
ds
inc
sti
inc
call
in
pop
dec
jp
mov
cmp
bound
add
mov
hlt
pop
in
test
mov
mov
pop
int
jle
push
cli
sbb
mov
mov
or
hlt
in
lds
dec
jo
jne
adc
inc
push
xorl
xchg
xchg
push
xchg
and
add
adcl
adc
cmp
push
pop
inc
sub
daa
cmp
scas
mov
sub
push
fisubs
test
xlat
dec
lahf
cmpl
fidivl
mov
icebp
mov
mov
pop
inc
repz
imul
or
pop
fcmovnb
in
or
dec
mov
jno
sub
pop
add
test
decl
jns
rcrb
sub
lds
not
mov
jne
xor
out
cmc
xor
adc
push
cltd
and
ds
cmpsl
lret
in
xor
lret
sub
sahf
fstl
pop
adc
mov
inc
sbb
es
jg
jg
add
pop
incb
test
adc
outsl
pop
data16
pop
rorl
inc
mov
xor
std
jns
lea
dec
arpl
push
out
orl
pop
nop
mov
std
add
gs
or
data16
scas
lret
push
mov
jle
lahf
jbe
test
aas
data16
outsl
jl
xor
jge
jg
cmpsb
xchg
daa
cmp
out
sbb
pop
inc
sbb
data16
sbb
jno
push
push
and
lods
dec
push
mov
xor
ret
cmpsl
sbb
int3
adc
das
imul
movb
mov
sahf
outsl
cwtl
lds
shll
jno
mov
mov
mov
xchg
xchg
and
xor
daa
les
xor
pop
mov
mov
out
cmp
into
push
arpl
mov
in
lret
cmp
dec
out
lods
hlt
lret
fidivs
push
out
testl
jns
mov
jns
or
dec
pushf
mov
mov
sub
in
adc
pop
push
jbe
in
out
orl
les
movsl
fimuls
jg
push
shl
jo
lods
std
lahf
dec
and
sub
cmpsb
jne
push
and
jg
ret
sub
or
loopne
adc
push
mov
pushl
inc
add
mov
frstor
or
int3
mov
ret
add
fistpll
mov
sbb
dec
mov
push
fs
xchg
mov
dec
ret
inc
gs
insb
test
adc
jb
test
cmp
jbe
mov
aad
mov
mov
iret
mov
push
in
xor
mov
and
and
mov
pop
ss
lods
leave
cmp
ja,pn
mov
rorb
orl
cwtl
push
fdivs
lock
xor
push
mov
jge
movsl
repnz
fidivrs
dec
icebp
ja
push
jbe
test
pop
jmp
fisubrs
enter
and
xchg
inc
in
lods
mov
push
adcb
jge
push
outsb
sub
addb
mov
xchg
movb
scas
or
rol
ljmp
dec
data16
cmpb
sub
fs
scas
in
clc
pop
test
push
and
xor
or
pushf
loop
pop
dec
adc
enter
jae
jo
mov
std
int3
imul
shll
pop
cmpl
stos
in
out
adc
mov
hlt
test
cmp
sub
push
xchg
out
shll
or
pop
adc
and
in
dec
xchg
or
enter
or
and
mov
inc
sti
into
push
mov
sub
popf
inc
sbb
and
arpl
sbb
mov
rcl
mov
addr16
shrb
push
pusha
dec
dec
sbb
aaa
xchg
rep
iret
push
jmp
out
in
or
loopne
xchg
mov
mov
movb
cmp
cmpsl
and
es
pop
sub
adc
xchg
xor
push
xchg
in
mov
mov
in
add
xor
cmpb
shrl
mov
lds
dec
loope
push
movsl
and
ds
rorl
testb
inc
repz
cwtl
dec
mov
cmpsl
lcall
add
out
aaa
push
dec
xchg
ss
inc
test
mov
arpl
andb
arpl
gs
push
in
ja
mov
mov
fptan
jne
and
sub
mov
pusha
push
repnz
jae
mov
cmpb
sub
mov
rcll
test
popf
outsb
outsl
xchg
pop
lock
into
and
aaa
mov
aaa
xchg
dec
ljmp
xchg
jno
push
cld
jp
sbb
out
mov
into
lret
fcoms
and
movsb
fs
jnp
popf
lea
xchg
cli
inc
mov
mov
mov
mov
inc
mov
dec
xchg
jg
loop,pt
int3
out
or
movsb
pop
lret
imull
mov
pusha
ss
sub
xchg
ret
add
jp
cli
aas
addr16
inc
add
xchg
sbb
adc
imul
mov
lret
adcl
pop
lahf
mov
push
xchg
push
fimull
roll
rcl
xor
out
out
cwtl
test
xor
scas
push
ss
cmp
leave
or
adc
sbb
iret
dec
push
mov
ja
fcoms
sbb
mov
fsubl
inc
pop
lcall
cmc
pop
push
push
cli
movsl
push
mov
sub
jne
xor
jge
pushf
lahf
scas
sbb
mov
mov
push
int
scas
dec
aam
test
xor
jmp
test
adcl
inc
mov
clc
enter
in
ret
push
inc
pop
sub
negb
xor
aaa
sbb
test
mov
jb
xlat
xchg
movsl
out
dec
xchg
xchg
adcl
insl
push
fwait
je
dec
mov
dec
push
mov
ja
add
mov
push
stc
mov
sub
sub
inc
or
xor
or
jp
cmp
leave
pop
cmp
jg
lret
repnz
lcall
sbb
arpl
adc
dec
icebp
and
sub
test
adc
push
adc
and
add
sarl
sbb
mov
and
jbe
pop
in
idivb
insb
mull
jns
adc
mov
and
je
sbb
push
mov
sbb
sub
sbbb
aas
icebp
mov
das
movsl
inc
mov
pusha
pop
leave
enter
xor
in
into
out
or
into
inc
stos
lods
aaa
fimuls
daa
jne
cwtl
xlat
push
dec
imul
jae
cmp
push
movsb
repz
xchg
or
icebp
aam
fildll
daa
xor
pop
inc
push
cmpsb
mov
push
in
mov
or
mov
jge
cmp
xchg
and
lods
int3
enter
fsts
sub
daa
sub
stos
mov
mov
inc
cli
lcall
insb
jo
adc
mov
aam
adc
insb
and
mov
mov
insl
jg
lock
jae
xor
cmp
adc
das
cmp
inc
add
stos
aaa
mov
add
cmc
into
dec
or
lret
push
or
mov
decb
jmp
xchg
add
dec
mov
aad
sbb
imul
inc
lds
repz
add
cli
xlat
das
adc
sub
aad
subb
push
mov
dec
stos
fs
or
or
and
sti
push
mov
sbb
push
fwait
xchg
cmp
mov
mov
inc
ret
mov
cmc
and
or
mov
xor
fadds
push
cmc
jmp
in
mov
push
push
fbstp
int
and
sbb
jno
pop
jno
add
jno
sbb
dec
inc
mov
jp
aad
test
dec
pusha
popf
and
je
jo
lret
sti
test
jae
add
cmp
movb
jbe
mov
insb
ss
sub
pop
outsb
int
notb
and
mov
insl
ja
dec
or
pop
sub
cmp
mulb
mov
std
jo
cwtl
iret
cmp
lock
outsb
inc
shrl
hlt
ja
mov
cs
add
xor
push
ss
aas
pushf
pop
dec
mov
insb
jge
mov
pop
shlb
dec
sahf
sub
jecxz
popf
addl
iret
mov
loopne
in
sub
inc
es
jle
add
addr16
scas
pop
mov
pop
adc
scas
cld
arpl
xor
mov
ljmp
adc
dec
xchg
cli
mov
adc
and
lea
or
fadds
lahf
push
cmp
pop
aad
data16
insb
lds
rcrl
orb
and
mov
std
xchg
xchg
sbb
stc
cmpsb
push
ja
jg
in
xchg
xchg
shl
popa
ljmp
mov
and
mov
or
cmpsb
enter
cmp
xchg
mov
call
sbb
out
or
jnp
mov
pusha
push
inc
imul
call
and
mov
cmp
les
scas
lods
out
dec
pop
call
adc
inc
and
cmpsb
xor
mov
dec
repz
mov
sbb
dec
inc
mov
fcmovb
push
dec
aas
int
adc
and
jge
mov
mov
enter
mov
push
les
movsl
imul
pop
sbb
inc
daa
mov
xchg
clc
mov
mov
jge
hlt
outsb
fimull
inc
adc
loope
xor
mov
add
in
inc
iret
push
enter
shll
mov
in
andl
gs
xchg
leave
pop
push
push
sahf
dec
push
fildll
adc
sub
lret
xchg
push
loope
mov
cmpsb
mov
sbb
out
push
js
test
iret
stc
mov
inc
in
imul
rclb
and
and
test
movsl
hlt
je
mov
mov
int
roll
pop
sbb
lods
int3
or
imul
or
inc
pop
push
rcl
ficoml
jo
rolb
xor
and
icebp
push
jg
push
lret
lret
push
aaa
mov
repnz
and
push
stc
sbb
mov
das
add
push
ret
pop
loopne
sbb
fcoml
xor
pop
xchg
push
jae
cmp
filds
cs
pop
add
mov
je
call
adc
adc
mov
idiv
and
jb
mov
es
aaa
mov
sti
add
mov
push
xor
cmovbe
jp
pop
or
or
sub
sbb
fmuls
adc
sbb
sub
sub
je
xor
or
sub
std
sbb
out
roll
bound
xor
dec
jecxz
or
pop
sarb
mov
movsl
in
jo
jbe
adc
pop
cmp
out
mov
lds
std
incl
pop
mov
adc
sub
dec
sub
fbstp
dec
insb
mov
nop
sbb
and
cmp
rolb
and
lods
lods
mov
lcall
push
mov
scas
add
sarb
dec
xor
mov
ficomps
jne
mov
bound
jecxz
jp
or
jno
popa
shlb
fsubrs
pushf
popf
mov
imul
push
jmp
in
or
xor
movsl
call
pop
pop
lods
cltd
mov
enter
push
pop
pop
in
adc
lret
cmp
xchg
xor
cwtl
ds
mov
mov
add
insb
dec
dec
loopne
xchg
lahf
adc
hlt
push
push
daa
cmp
xchg
clc
shll
pop
outsb
mov
pop
mov
fsubr
push
cmp
clc
xchg
and
pop
ljmp
inc
inc
pusha
out
adc
arpl
dec
movsl
pushf
inc
fwait
ret
leave
mov
pop
xchg
daa
or
imul
scas
movsl
xor
ret
pop
shll
or
mov
into
bound
pop
insb
pop
fidivs
lock
xor
pusha
rol
jecxz
sbb
into
setb
aad
fs
stc
xchg
subl
add
divl
mov
fldl
mov
mov
pop
inc
xor
movsb
cli
pop
sbb
dec
pop
lds
add
mov
je
sub
mov
test
out
mov
ret
pop
fs
stos
push
sbb
dec
rorb
mov
negb
shr
imul
dec
sti
les
xor
cwtl
adc
data16
sahf
data16
sub
aaa
inc
add
pop
stos
dec
dec
xchg
loop
mov
outsl
push
cmp
clc
inc
push
mov
fcomps
test
sbb
sbb
cmp
stc
movsl
test
js
cmp
scas
or
mov
cwtl
sub
popa
loopne
add
dec
adc
leave
sub
push
xchg
lcall
mov
in
xchg
pop
arpl
das
cmp
scas
ret
sbb
lds
xor
push
into
mov
jmp
mov
div
pop
inc
std
adc
mov
stos
js
mov
loope
mov
inc
movsl
repz
and
sarl
rolb
int3
push
outsb
adc
je
mov
shrl
xchg
shl
div
in
mulb
jbe
cmp
xchg
scas
js
jb
add
repnz
jl
hlt
sub
pop
test
ljmp
icebp
int
in
sub
jo
lcall
fwait
mov
leave
loopne
cmp
dec
std
add
sub
xor
jecxz
subl
testb
es
cmp
mov
cs
mov
ret
inc
fisttpl
dec
push
jo
mov
jns
mov
shll
repnz
leave
ss
xchg
pop
lods
dec
out
sub
shl
mov
cmc
sbb
xchg
or
jnp
and
jno
sub
std
xchg
mov
fwait
test
mov
insb
fstpt
and
pop
pop
hlt
cmp
pop
cmp
mov
xchg
iret
shrl
dec
push
mov
jle
fistpl
dec
add
push
insl
lret
imul
subl
loopne
test
lcall
xchg
lock
push
std
andb
jbe,pn
or
lock
data16
lret
test
sbb
loop
bnd
lret
out
aas
aam
aad
subps
mov
mov
stos
jb
decb
and
dec
int
into
pop
lods
jmp
or
lahf
aaa
sbb
or
sbbl
pop
adc
and
and
cs
mov
or
push
jle
sbb
xchg
test
pop
jno
sub
pop
dec
jbe
pop
arpl
stc
ljmp
or
out
pop
xchg
test
xor
inc
or
push
dec
outsl
cmpsl
test
out
xor
ret
pop
pop
aas
mov
stos
mov
lret
inc
imul
adc
int3
lahf
mov
sbb
xchg
pop
ss
push
in
in
cmc
loopne
outsb
orb
insl
cmp
imul
arpl
or
xchg
xchg
shr
pop
cld
stos
xor
push
and
dec
repnz
in
push
sub
loop
or
arpl
js
ds
mov
ficoms
cmp
mov
push
incb
add
dec
insb
cld
clc
mov
jecxz
or
ljmp
inc
cmp
xor
jle
mov
lods
loop
adc
mov
add
loope
inc
jle
lcall
stc
jb
pusha
mov
jbe
or
ds
pop
into
outsb
outsl
xor
ljmp
neg
cmp
cli
fsubp
lods
daa
add
inc
and
call
xchg
call
xchg
mov
push
jne
sarb
lea
icebp
aaa
fildl
push
pusha
movsb
mov
stc
xor
aaa
addr16
pop
inc
insl
xchg
mov
jl
dec
xor
push
imul
lods
cltd
hlt
and
sub
pop
lea
sti
pusha
and
das
add
mov
test
xchg
mov
insb
dec
xchg
ja
cld
clc
cmp
dec
enter
pushf
xchg
sub
pop
ljmp
pusha
pop
mov
lahf
push
jnp
out
movsl
inc
sub
fdivrs
cmpsl
cs
incb
lods
mov
or
aaa
mov
inc
ljmp
jmp
ljmp
xor
sbb
gs
js
push
cmp
fistl
ret
fs
adc
jmp
add
test
in
cmpsl
push
inc
popa
fadds
or
out
mov
pop
jne
pop
mov
cmc
xchg
cmpsb
mov
pop
int3
inc
loope
or
mov
xchg
cmpsl
rol
pop
mov
sbb
data16
inc
into
gs
fdivrp
mov
cmp
add
dec
inc
cmpsb
jmp
aam
jle
xchg
jmp
out
inc
into
into
cli
mov
and
jp
icebp
jb
enter
fcoms
sub
or
aaa
add
test
mov
xchg
pop
xor
in
je
mov
sub
cld
pop
lock
pop
adc
testb
int
int3
cmpsb
or
inc
repnz
pop
in
push
mov
lds
iret
sbb
mov
daa
pop
mov
jg
and
iret
enter
int
jp
inc
loope
out
mov
arpl
inc
adc
leave
orb
xchg
mov
mov
out
fdivl
mov
push
cmp
pop
dec
push
xor
mov
cltd
and
fs
or
inc
jnp
in
testl
jae
movsl
and
push
adc
push
xchg
mov
imul
sub
xchg
xchg
mov
inc
fsts
sbb
js
sbb
subb
les
sub
mov
shlb
jnp
das
in
or
xor
sbb
outsb
ljmp
pop
add
jg
imul
dec
or
out
pop
xchg
das
add
outsl
add
add
movsb
inc
stos
push
adcl
xor
lret
mov
repnz
clc
loope
push
lcall
inc
pusha
cmp
cmp
jmp
call
in
ds
cmp
xchg
dec
dec
das
addr16
lahf
jp
lods
and
aad
pop
mov
mov
push
clc
jnp
lret
popw
jmp
subb
lods
mov
pop
mov
mov
jnp
divb
popa
movsb
repnz
xor
sbb
sbbb
push
or
sbb
int
add
cwtl
aas
movsb
jno
jo
cltd
dec
or
or
lea
subb
fwait
sub
fcoml
sbb
adcl
lods
clc
rclb
or
out
inc
inc
xchg
fimull
pop
add
lods
cwtl
xchg
jmp
mov
testb
ljmp
shrd
and
sbb
pop
adc
xchg
mov
xlat
je
mov
cld
push
sub
in
fcmovne
dec
sbb
nop
xchg
adc
loop
pop
arpl
xor
push
je
xchg
and
mov
sbb
xchg
mov
xchg
pop
push
or
roll
cmpsl
js
xchg
pop
addr16
aaa
xchg
testb
mov
and
decb
xor
inc
out
insl
add
iret
stos
push
and
insl
stos
stos
push
dec
lods
cmp
add
lcall
xchg
mov
jo
xor
xchg
or
push
into
dec
sub
ret
movsl
addr16
xor
mov
fwait
mov
addb
mov
push
jo
cmp
dec
adc
loop
xchg
popa
xchg
sbb
xchg
daa
fmull
loopne
cltd
ja
cmp
sbb
mov
pop
xor
icebp
insl
dec
loope
adcl
or
sub
cmp
ja
jg
adc
xlat
push
jbe
and
xchg
rclb
lock
lds
hlt
mov
sbb
lock
orl
mov
adc
aaa
xor
gs
xchg
xor
or
mov
mov
cmp
fwait
das
or
mov
jl
out
daa
and
fwait
repnz
sbb
rcll
cmp
nop
ljmp
test
pop
mov
push
mov
and
cmp
cmp
mov
int3
push
xchg
jle
fimull
inc
add
add
add
inc
loope
jbe
or
insl
pop
xchg
xchg
out
sub
popf
testl
mov
xor
shlb
or
cmp
data16
arpl
xor
mov
popf
sarb
or
pop
push
jle
int
test
push
roll
xor
xor
sbb
push
fildll
clc
dec
outsl
cmp
add
cmp
xchg
and
mov
sub
negb
mov
xchg
leave
aas
enter
jo
cmp
jnp
jns
inc
or
jne
inc
inc
mov
pop
mov
xor
dec
push
lods
fstl
dec
aad
outsl
dec
in
cld
push
orl
inc
jg
adc
das
jnp
push
jg
xor
daa
jae,pn
inc
sub
pop
or
mov
std
jae
xchg
fistpll
test
cmp
cs
dec
test
inc
mov
test
cmp
negl
cld
mov
sub
mov
test
lds
icebp
popf
xchg
das
test
out
pop
mov
adc
rcl
mov
dec
je
xchg
push
mov
xchg
push
dec
lahf
lahf
movsb
jns
sbb
jae
lret
adc
and
push
add
mov
xchg
je
add
rcrb
inc
cld
nop
jo
in
fstps
mov
pop
xchg
xchg
lcall
ds
sbb
addr16
mov
aas
js
jmp
push
shll
lea
xor
fwait
cmc
push
test
jg
lds
inc
sbb
js
pop
enter
paddb
outsb
xchg
adc
popf
and
stos
loop
adc
ret
aam
fstpl
add
je
xor
dec
sarl
cmpsl
cmp
or
mov
xor
sub
aad
test
pushf
jle
inc
in
pop
add
aaa
stos
std
outsl
xor
jle
jns
add
sbb
and
push
mov
push
or
insl
sub
dec
push
stc
jge
xor
ret
int3
outsl
cmp
sub
bound
ljmp
mov
xchg
stos
add
out
lock
jb
mov
popf
std
stos
out
loope
cltd
mov
sub
jne
dec
and
sti
jb
and
add
fsubrl
dec
jns
push
dec
psllq
movsl
or
inc
scas
dec
or
lock
and
mov
pop
sbb
leave
jl
int3
daa
cmp
in
mov
dec
out
rolb
rcl
dec
xorl
adc
imul
loope
xor
add
mov
mov
or
inc
add
jmp
sarl
in
xchg
lret
ljmp
mov
inc
movsl
push
jl
xchg
subl
xchg
lea
addl
push
int
pop
fidivl
adc
add
cmpsb
gs
inc
pop
xchg
stos
aam
xchg
fildl
jg
dec
or
xchg
insb
fldl
xchg
jb
cmp
ret
mov
popa
adc
loopne
rol
icebp
mov
push
cmc
movsl
xchg
shll
inc
add
inc
dec
xchg
cltd
out
adc
arpl
mov
cwtl
cltd
or
mov
in
testb
mov
lea
mov
add
xchg
push
ja
fcmovu
add
int3
cmp
inc
hlt
xchg
and
dec
pop
arpl
test
fucomp
jno
sbb
dec
pop
jl
insb
mov
or
add
sub
ja
in
xchg
or
addr16
inc
repnz
xor
mov
mov
xchg
add
cmc
push
addw
iret
daa
imul
pop
cmp
inc
testb
jl
outsb
pop
mov
mov
and
inc
mov
sub
push
lret
xchg
hlt
add
movsb
or
fcompl
pop
into
out
xchg
movsb
dec
in
mov
cmp
xchg
adc
popf
push
mov
mov
fidivl
mov
pop
mov
pop
xor
fadds
cmp
les
or
cld
inc
lods
sbb
mov
sub
pusha
insl
sub
in
je
jecxz
ja
cli
aaa
fiaddl
inc
cmpb
adc
inc
inc
pop
pop
dec
mov
data16
repnz
ficomps
xor
mull
mov
stos
add
je
pop
ret
imul
cmp
mov
or
das
jns
pop
ret
dec
jbe
addl
daa
inc
lods
lret
lahf
sbb
ljmp
mov
inc
push
or
mov
push
sub
mov
rcrl
push
mov
mov
cs
scas
test
adc
test
dec
mul
adc
xor
xor
mov
xor
push
out
repz
scas
hlt
push
into
js
rcll
cmp
xchg
jmp
pop
roll
ja
mov
adc
inc
or
and
je
js
xchg
leave
and
and
xor
adc
push
mov
aaa
iret
mov
stos
cmp
sub
fwait
cs
test
mov
pop
lods
mov
jmp
inc
popa
gs
roll
or
sbb
xchg
fistpll
roll
mov
arpl
push
push
cld
cmpsb
mov
mov
shl
fnstsw
pop
negb
roll
dec
dec
scas
aam
push
outsl
mov
lods
iret
je
out
sub
mov
sti
jb
iret
pop
cmp
dec
jmp
jb
push
pushf
push
dec
sbb
mov
test
and
add
mov
or
into
inc
jb
adc
mov
sti
scas
cld
in
sbb
inc
mov
jae
xchg
sysexit
and
addb
aam
adc
lods
dec
jbe
frstor
dec
ljmp
mov
xchg
xchg
inc
and
shrb
aam
loop
and
mov
test
rclb
in
data16
xchg
out
out
cmp
mov
inc
scas
loope
add
test
sub
jbe
mov
add
test
adc
ss
jne
cwtl
loop
icebp
push
loopne
push
ret
sbb
push
mov
movsb
shrl
lcall
jb
mov
add
daa
dec
adc
scas
add
addl
hlt
bswap
cmp
leave
call
adc
sbb
mov
push
andl
jmp
rolb
cmp
add
mov
mov
lahf
mov
call
pop
fs
imul
jbe
mov
shrb
jnp
repz
xchg
enter
gs
inc
and
or
ja
push
xchg
pop
lods
lret
andb
or
or
js
das
mov
xchg
fadd
aaa
cmp
das
fldt
jp
rorb
dec
adcl
xchg
fsubs
lods
in
xadd
xor
and
push
and
imul
jne
inc
aas
cld
std
or
xchg
pop
in
leave
sub
jecxz
xor
add
cs
lods
data16
cmp
jns
clc
lock
adc
pop
mov
mov
dec
jecxz
gs
enter
pop
add
xchg
call
rcr
and
sub
push
add
js
sbb
and
xor
sub
into
fimull
arpl
mov
add
push
std
and
lcall
xor
loope
cmp
xchg
xchg
jae
aad
mov
testb
push
mov
add
push
mov
and
or
jle
jmp
xchg
out
leave
lods
push
add
sahf
sbb
inc
scas
scas
sti
loope
adc
rcll
or
outsl
testl
lcall
aas
scas
sbb
ljmp
lea
cltd
out
outsl
xchg
aaa
out
daa
add
shrl
dec
sbb
mov
fnstenv
stos
pop
jg
mov
dec
popf
jnp
cld
jg
ljmp
fsubs
iret
test
sub
mov
and
adc
movsb
adc
sub
adc
subb
inc
in
movsl
xor
jmp
ror
testl
mov
lret
adc
cmc
in
rcl
pusha
std
adc
sub
add
inc
cmp
rdtsc
idivl
or
mov
in
daa
cmpsb
imul
les
stos
ss
xchg
pop
push
mov
adc
pop
nop
and
daa
jo
xchg
int3
or
dec
stos
clc
scas
mov
and
xchg
nop
out
addb
lock
add
repnz
aas
cmp
cmp
mov
mov
mov
pop
xchg
and
fsubr
push
aam
cmova
and
fwait
je
mov
dec
adc
fdivl
cmpsl
jg
je
data16
dec
inc
dec
push
test
mov
ret
ret
inc
hlt
mov
pop
pop
daa
int
in
mov
push
mov
or
jge
daa
out
jp
je
or
or
pushf
fs
push
sahf
bound
lock
lea
fsts
sbb
cli
cwtl
jle
pushw
shrl
or
int
cltd
shll
in
outsl
jo
mov
outsl
ljmp
sbb
mov
lcall
js
inc
ljmp
sub
shl
adcl
xchg
imul
inc
shl
ja
rcl
out
jne
stos
pop
dec
popa
pop
out
xor
cli
sbb
jns
loopnew
ja
jbe
push
out
jecxz
inc
xchg
mov
pop
popf
xorb
or
dec
adc
outsb
out
data16
xor
inc
ror
inc
and
sbb
push
sarl
sbb
xchg
push
add
popf
or
stc
cmp
cmp
pop
cmpsb
gs
jo
mov
cmp
repz
loope
out
sbb
divb
xor
pop
popa
in
adc
es
pop
xchg
loope
out
sub
adc
adc
test
std
rcll
jmp
inc
jl,pt
xor
add
iret
xchg
sarb
xor
ja
pop
dec
mov
cmpsb
stc
adc
rorl
aam
cmp
rolb
mov
in
xor
cmp
dec
test
xchg
nop
sub
icebp
mov
mov
mov
ficomps
push
mov
in
leave
mov
add
cmp
sbbb
lods
sub
cwtl
cmp
sbb
ficompl
dec
add
pop
jbe
cmc
cmp
paddusb
testl
movsl
std
lds
and
cmpsb
bound
shrb
lods
ds
sub
cmp
dec
mov
lods
nop
je
lds
mov
jne
gs
icebp
dec
or
ds
xor
test
rep
loop
push
scas
cmp
mov
push
fcoml
push
xchg
daa
cld
pop
jae
inc
mov
push
pop
roll
mov
mov
xchg
cld
xchg
test
sub
push
cmp
sarl
enter
das
stc
cld
insb
jne
das
cld
dec
push
ljmp
mov
test
aad
enter
push
jo
rcrb
or
push
in
xchg
pop
mov
pop
cmpsb
jns
pusha
mov
mov
inc
and
loop
sub
shrl
lods
xchg
in
cmpsl
push
inc
mov
push
pop
dec
jmp
push
test
int
mov
dec
out
test
push
push
hlt
or
inc
loopne
leave
add
pop
sbb
test
icebp
ret
dec
out
es
movsb
jne
xor
jg
pop
mov
fidivrs
les
sub
jns
loope
in
fists
jmp
insl
stc
lret
scas
xchg
pop
or
jo
add
aaa
adc
push
add
repnz
gs
pop
in
lds
mov
dec
jnp
mov
movsb
lahf
add
insb
adc
inc
add
xchg
add
jmp
pop
inc
or
adc
outsb
inc
cmp
ror
fs
mov
adc
jnp
mov
dec
jns
jp
mov
outsl
lret
mov
js
xchg
repnz
jg
pusha
popa
xchg
dec
or
cmp
adc
mov
lods
xchg
and
mov
pop
mov
scas
loop
jno
and
mov
and
mov
rcrl
pop
mov
xchg
push
test
in
mov
fistl
mov
das
addr16
stc
or
cwtl
in
sbb
push
imul
sub
push
es
das
or
mov
jge
mov
insb
and
inc
int
add
out
in
popa
cmp
add
cwtl
push
dec
mov
push
jb
and
sbb
out
les
jg
mov
hlt
xchg
pop
adc
mov
sbb
mov
pop
pop
dec
rol
mov
dec
dec
imulb
movsl
fisttpll
xlat
sbb
loope
and
scas
mov
repnz
cmpxchg
mov
sbb
lods
in
data16
pop
push
pop
in
incl
cs
arpl
or
pop
or
jecxz
mov
sub
lret
gs
nop
inc
pop
gs
push
jne
and
add
andl
or
inc
mov
andb
jl
sbb
popf
push
and
mov
orl
dec
sub
into
lock
mov
gs
cmp
cmc
jo
xor
ror
pop
cmp
mov
mov
and
push
pop
inc
add
std
xchg
push
cwtl
das
in
dec
test
ja
rcll
test
push
imul
stc
xor
mov
fs
mov
mov
loopne
sub
lods
xchg
insb
cmp
insb
push
xor
jecxz
mov
nop
in
xlat
sub
lock
ret
mov
scas
xor
loopne
test
insl
adc
add
mov
dec
mov
fnsave
ftst
pop
adc
je
and
xchg
cmp
xor
fwait
and
stos
ds
and
fsubrl
sub
loope
sbb
push
cmp
iret
jae
or
movsb
jnp
add
stos
xor
jmp
inc
loope
mov
outsb
inc
and
cmp
mov
iretw
test
jns
sub
or
loope
push
divb
in
js
sarb
insl
inc
mov
mov
jg
mov
jp
add
jl
dec
mov
push
jne
dec
insl
adc
push
push
lea
loop
cmc
in
out
addb
jae
aad
add
movsb
add
xor
hlt
enter
xor
jecxz
std
rcl
push
inc
out
outsl
xchg
imul
iret
cs
insl
xor
adc
pop
out
adc
push
or
fnstenv
sub
ret
insb
add
sbb
imul
mov
in
lods
je
jg
imul
scas
ljmp
popa
test
mov
ffree
xor
push
int
test
aad
icebp
dec
dec
insl
lock
les
push
test
sub
loope
sarb
sbb
dec
lock
pop
lcall
mov
test
xor
add
xchg
lahf
sahf
or
lret
mov
jnp
popw
das
sub
push
or
pop
les
push
sbb
bnd
mov
pop
pop
call
daa
repz
cmp
xchg
mov
scas
cmc
arpl
aas
sub
xor
add
scas
and
xchg
cmp
lret
xor
push
dec
jno
out
out
mov
icebp
sbb
int3
mul
jo
cmp
popa
pusha
push
xor
adc
push
push
add
ljmp
fsubs
out
pop
jecxz
popf
dec
loop
ret
cmp
push
fistpll
mov
cmc
pop
adc
les
adc
clc
xor
call
popf
add
mov
das
adc
pusha
int
mov
sbb
call
pop
fistpl
add
and
jl
jnp
sub
ja
or
test
jl
xor
pop
sbb
xchg
cmc
pop
aaa
into
mov
xchg
dec
in
imul
mov
cltd
xchg
sub
push
scas
out
test
pop
call
add
pop
sahf
inc
jne
inc
adc
out
hlt
dec
into
into
jmp
mov
mov
sbb
into
dec
xorl
sti
inc
test
pop
sub
mov
sbb
out
jno
lret
popa
jns
sbb
and
repz
cmc
pop
jae
sarl
pushf
addl
ss
mov
test
xchg
lock
xlat
and
aad
pop
pop
movsb
cmp
movsb
xor
pop
lret
lock
loop
stos
add
lcall
aas
dec
enter
inc
int3
shl
fnsave
inc
mov
add
dec
bound
daa
push
mov
sahf
jae
jle
push
and
jnp
dec
out
mov
push
jnp
sub
mov
cwtl
cmpsb
sub
gs
inc
faddl
out
sub
dec
das
inc
xchg
insl
pop
lret
xchg
incb
shll
inc
loope
push
shll
mov
or
sbb
popf
cmc
adcl
imul
mov
hlt
jbe
and
cmp
push
divb
xchg
push
mov
mov
icebp
inc
xor
loopne
jnp
mov
dec
out
add
push
lock
test
scas
sub
gs
mov
pop
ret
test
popf
scas
xor
pushf
sbb
inc
lcall
or
sub
aad
das
xlat
pop
push
ret
xchg
sub
jb
mov
pop
jmp
std
push
dec
or
cmp
mov
or
mov
hlt
fdivl
loopne
xchg
repnz
mov
sbb
mov
movsb
pop
pushf
push
adcl
dec
sub
push
mov
dec
mov
and
adc
cmp
inc
sbb
hlt
pop
test
jb
add
ss
or
arpl
popa
add
testb
dec
cmp
mov
jns
int
xchg
adc
push
xor
add
mov
imul
xor
cmpl
jmp
mov
inc
das
es
stc
lcall
push
mov
movsb
mov
xchg
popa
lret
sbb
sub
jo
push
leave
fnsave
sahf
or
mov
hlt
push
andl
stc
fstl
mov
pushf
pop
or
mov
lcall
jnp
data16
push
imul
movsb
ljmp
insl
add
iret
lcall
leave
sbb
dec
inc
mov
fdivrl
sahf
xchg
mov
push
jecxz
data16
testl
mov
aaa
dec
jo
jns
popa
mov
dec
jo
out
imul
lods
and
sbb
adc
mov
inc
and
scas
int3
or
and
pusha
scas
mov
cmc
enter
lock
lods
std
leave
inc
lret
pop
int3
mov
fnstenv
mov
jnp
xchg
call
pinsrw
imul
jmp
gs
out
lds
rorb
cmp
push
sub
mov
and
sbb
mov
inc
cli
lods
movsl
out
add
sub
jecxz
push
scas
mov
or
inc
pop
in
add
or
push
rorb
adc
movsl
pop
scas
lods
lea
pop
xlat
leave
mov
xchg
stos
mov
icebp
and
dec
jno
adc
adc
cmpsb
mov
dec
shll
repz
out
imul
dec
dec
cltd
shl
xchg
push
and
mov
jb
fwait
pushf
rorb
lret
adc
fstl
aas
test
dec
sbb
jecxz
dec
pop
pop
sbb
xor
int3
adc
pop
lcall
inc
dec
pop
adc
pop
push
push
jle
pop
je
int3
inc
shrl
rcll
xchg
enter
clc
lcall
test
xchg
jge
pop
pop
dec
pop
and
hlt
lahf
adc
lret
sahf
mov
mov
jge
in
sbb
test
and
test
dec
js
in
jecxz
add
out
cmp
sub
jmp
lods
mov
jno
leave
loopne
sub
push
xchg
add
mov
negl
iret
int
addr16
movsl
into
sub
xchg
mul
cmpsb
pushf
xchg
jns
adc
sbb
je
jecxz
insl
cmp
add
jne
hlt
cmp
add
pusha
and
imull
aam
sbb
pop
xor
dec
out
or
sbb
inc
pop
mov
xchg
outsb
test
fistpl
sbb
and
sahf
lea
aad
inc
ljmp
es
js
out
add
stos
adc
adc
dec
jne
stos
repz
adc
outsl
pop
jno
or
pushf
das
xor
stc
or
in
stos
and
loop
cs
sub
testl
jmp
out
mov
mov
and
nop
jge
add
mov
add
bound
cmp
push
sarb
sbb
repnz
and
xchg
and
adc
xchg
adc
mov
xchg
repz
mov
sbb
cmp
jge
lea
aam
lods
pop
ret
leave
andl
push
mov
icebp
mov
xor
pop
or
test
xor
jmp
mov
mov
mov
jno
fwait
bound
and
push
bound
jns
sub
popf
cld
lahf
adc
pop
shl
int3
pop
mov
inc
nop
addr16
mov
push
sti
dec
inc
lret
test
imul
inc
popa
mov
adc
jbe
and
in
mov
inc
jecxz
adc
andl
and
and
dec
jo
mov
out
or
aas
lahf
and
insl
sbb
mov
ss
call
push
or
shrb
mov
mov
and
mov
sbb
adc
stos
cmc
push
jnp
xor
jl
bound
push
scas
ret
imulb
mov
xor
or
add
sub
adc
out
mov
jno
push
fadds
pop
lahf
mov
or
pop
cmp
bound
and
mov
outsb
and
jp
or
xor
or
popa
pop
fsubl
jnp
rcrl
int
and
lods
pop
mov
adc
in
pop
pop
into
pop
ljmp
push
shll
fstpt
cmp
jl
lret
dec
cmp
outsl
sbb
outsl
cmp
and
cmp
jg
jae
cli
sbb
andb
mov
cwtl
sbb
mov
pushl
pop
add
and
pop
mov
roll
jno,pn
loopne
inc
int3
cmp
mov
fidivrs
imul
or
enter
xor
sub
call
out
push
imul
cmpsl
fdivrl
mov
jge
mov
jne
int3
pop
or
or
enter
lock
dec
sub
mov
mov
in
push
call
add
mov
jmp
pop
jge
notb
or
inc
or
xchg
mov
mov
std
pop
dec
out
xchg
arpl
xchg
pop
mov
test
push
xor
inc
mov
or
in
push
cmc
and
aad
roll
sbb
roll
stc
jne
sbb
int3
in
adc
lods
cmpsl
push
inc
push
mov
add
push
jl
xchg
push
jp
jns
bsr
rol
call
int3
sub
sbb
adc
xor
inc
sub
insl
jmp
into
sbb
xor
cwtl
dec
jmp
cmp
mov
fists
or
mov
add
nop
in
jno
adc
into
or
loope
bound
push
mov
push
enter
inc
mov
out
loopne
sbb
leave
lcall
das
into
insb
xchg
inc
fs
and
mov
out
jnp
bound
inc
dec
push
cli
inc
sbb
inc
xchg
adc
and
or
add
and
fcom
cwtl
mov
lods
lds
xchg
scas
adc
jg
aad
adc
cmpsl
mov
jo
adc
mov
test
cmpsl
sbb
cmpsb
push
xchg
std
aad
cmp
xchg
inc
dec
rcll
pushf
les
sbb
or
sub
test
mov
int3
add
aaa
mov
cmp
movsb
scas
es
xchg
loop
clc
cmpsl
push
mov
inc
xchg
cmp
jae
xchg
clc
ss
xchg
cli
pop
sbb
loop
loopne
and
sbb
adc
mov
movq
pop
lret
das
out
aad
loopne
dec
pop
jbe
call
dec
mov
or
push
and
mov
push
cmp
pop
sbb
roll
fwait
sbb
das
inc
mov
shl
aaa
push
inc
ret
bound
push
jo
leave
js
stc
pop
xor
xor
rclb
pop
mov
xor
popf
clc
inc
xchg
aad
jae
daa
les
sub
cmp
push
and
xor
jno
mov
mov
aas
sbb
pop
fcmovu
cmpsl
mov
sahf
mov
lods
mov
stc
movsb
adc
cmp
ja
pushl
jp
rcl
popa
pop
cmp
shll
pushl
xchg
sbb
mov
dec
inc
cmc
dec
inc
jl
mov
push
dec
adc
andl
mov
or
push
pop
shrd
aam
fcmovnbe
addr16
mov
xchg
idiv
add
lds
je
sub
xchg
push
insb
xchg
gs
fstpt
popf
add
pop
test
add
jge
or
outsb
cmpsl
or
call
pop
ret
and
adc
jp
insl
lcall
insl
add
daa
aaa
imul
jae
cmp
pushf
pop
adc
sbb
hlt
mov
sub
out
lods
jns
test
loope
mov
push
daa
pop
out
cs
inc
out
add
adc
jno
adc
sbb
aam
in
cs
jl
cmc
enter
jl
pop
or
xchg
mov
lret
fiaddl
dec
std
push
into
loopne
inc
arpl
std
imul
xchg
arpl
dec
add
mov
mov
je
in
repz
in
in
aaa
jmp
dec
icebp
jnp
int
mov
bound
les
shrb
mov
ret
insb
in
ss
outsb
test
adc
adcl
pop
mov
xor
push
in
pop
nop
clc
sub
ss
test
fdivrl
out
jne
pop
orb
daa
xchg
loop
dec
add
movsb
ss
mov
push
lods
bound
gs
fwait
mov
pushf
jno
sub
jge
adc
lea
jne
sbb
in
sahf
les
mov
cmpsb
jp
xchg
cwtl
scas
jnp
rorl
adc
sbb
pop
xor
bound
xchg
jb
or
push
dec
in
mov
sbbb
stc
insl
out
je
scas
fnstcw
mov
sti
aam
adc
or
mov
mov
insb
sub
pop
or
ds
loop
sti
shrb
xorb
dec
cmp
xchg
xorl
imul
jnp
repz
push
enter
pushf
jae
mov
movsl
add
add
insb
mov
sbb
movsb
or
hlt
je
cmpsb
add
cs
pop
cmp
shll
add
repz
or
and
push
pminsw
pop
sub
and
adc
gs
mov
xchg
aad
ret
cs
xchg
pop
push
sti
mov
push
pop
popl
or
push
xor
pop
pop
rolb
pop
stos
ljmp
incb
ficoms
jle
mov
fisubrs
mov
test
aad
in
adc
dec
lret
and
clc
mov
ss
sub
fwait
add
imul
shlb
mov
dec
cld
int3
pop
inc
inc
push
in
jl
or
mov
jl
orb
popl
dec
jp
pop
orl
add
mov
je
fs
test
jp
jbe
xchg
mov
dec
sub
fisttpll
or
iret
fs
dec
aad
add
push
mov
sbb
loopne
xchg
or
jge
pop
mov
jne
or
mov
clc
mov
std
out
mov
lcall
loopne
xchg
jg
daa
cs
sahf
mov
mov
dec
and
add
pop
pop
and
xor
mov
sbb
rcrb
stos
cmp
es
lcall
inc
inc
mov
fistpl
mov
fildll
outsb
xchg
pop
adc
loop
scas
lahf
push
ret
lret
push
mov
stos
or
jmp
into
fidivs
add
jne
add
push
pop
push
outsb
es
loope
lcall
and
je
xchg
sub
loope
in
sub
cmpsl
cs
xchg
adc
and
out
fisubrs
mov
arpl
imul
pop
out
add
in
ret
xor
jle
jecxz
incb
cwtl
outsb
enter
icebp
add
test
pop
repnz
out
fnclex
jnp
aas
lahf
push
jp
dec
or
bound
pushf
mov
movsb
icebp
mov
and
in
push
ss
pop
sub
and
pop
xor
mov
shl
and
dec
push
push
shrb
dec
sti
pusha
js
jns
or
shll
test
sarb
push
sub
or
and
insb
aaa
inc
ja
xchg
push
out
sbb
xchg
daa
fists
aas
add
nop
inc
icebp
jl
or
aas
mov
in
xchg
arpl
and
sub
dec
jge
push
xor
sub
inc
scas
push
fmuls
mov
mov
rcr
ret
inc
xchg
js
lock
lods
jne
adc
fcmovb
xchg
cld
fs
add
es
dec
mov
adc
cmp
adc
adcl
fistpll
push
pminsw
xchg
in
test
popa
add
mov
rorb
add
sub
mov
push
pop
dec
mov
daa
lods
jge
sub
iret
out
cmp
mov
jnp
scas
add
mov
mov
cld
inc
pop
movb
stos
pop
xchg
add
or
push
nop
mov
add
gs
dec
fisttpll
imul
mov
fldenv
xchg
push
add
in
pop
mov
pop
sub
sub
or
jg
and
pushf
cmp
add
mov
and
cmp
cmp
inc
adc
sbb
inc
push
xchg
xchg
shl
test
inc
sub
lcall
dec
sub
jmp
sub
pop
std
outsb
into
out
pop
or
in
es
jmp
andb
outsb
mov
dec
fcoml
pop
into
push
pop
int3
jo
push
push
jmp
inc
push
fwait
out
pushf
pmaddwd
test
negb
jge
or
sub
aad
lahf
scas
fmuls
xchg
fnstenv
mov
notl
cmpsl
inc
jecxz
rcr
jmp
outsl
push
aam
add
popa
ret
fldl
cmp
ljmp
jns
adc
adc
outsl
cmp
inc
ss
lret
and
sub
mov
mov
pop
jmp
sti
jl
sbb
iret
ret
in
fmuls
loopne
jl
mov
and
push
xchg
inc
mov
int3
aam
mov
ret
xor
or
fldenv
fistl
pop
pop
push
addb
xchg
loop
addr16
aas
mov
mov
mov
pop
pop
call
or
push
pop
int3
dec
sub
xchg
rcrl
fmulp
test
sbb
jne
in
pop
mov
fcmove
dec
add
cli
insb
pop
inc
ljmp
nop
xor
cmp
sub
jmp
cld
sbb
das
jmp
rcrb
jo
mov
daa
in
test
and
in
mov
pop
push
pop
push
mov
or
mov
imul
dec
mov
call
ret
cmp
mulb
jl
rcll
lcall
nop
int
mov
call
pushf
xchg
inc
and
in
xchg
scas
bound
xchg
jo
cltd
flds
mov
mov
mov
xchg
ljmp
mov
pop
cmp
cmc
cmp
fcom
ja
mov
pushf
add
xor
or
mov
inc
ds
cmp
into
dec
ds
jecxz
or
jns
pop
jge
pop
mov
xor
jle
jge
icebp
sub
cmpsb
dec
out
pop
sbb
bound
decb
mov
mov
nop
stos
mov
or
decl
jae
jae
xor
dec
cli
mov
popl
scas
mov
ljmp
sbbl
mov
testl
flds
lahf
sbb
in
add
fildll
int3
ficomps
cs
inc
test
jecxz
push
cmp
xchg
stos
cwtl
mov
les
sbb
adc
enter
shll
mov
mov
les
mov
push
inc
lea
dec
insl
jmp
sti
mov
xor
loopne
inc
xchg
or
mov
pop
sub
sub
es
mov
in
pop
out
adc
enter
cmp
add
imul
leave
cmc
out
mov
icebp
das
xchg
enter
lahf
sbb
push
divb
fstps
cltd
popf
mov
mov
int
or
adc
xor
lret
or
cmp
sbb
test
fidivrl
mov
xchg
pop
subb
imul
fsubr
imul
sbb
fldenv
pop
testb
xchg
sub
lret
jae
mov
cmp
fnsave
adc
int
mov
xorl
insb
loopne
jno
pop
pop
adc
in
mov
fbstp
outsb
pusha
add
cmp
dec
jp,pn
aas
outsl
add
mov
mov
addr16
fisubl
fs
sahf
mov
fs
imul
jae
jl
jne
out
outsb
pop
scas
xor
dec
adc
test
out
sbb
and
gs
js
jo
nop
fcompl
pop
pusha
cwtl
jmp
pop
xor
push
pop
pop
mov
cli
adc
pop
loop
fimuls
jns
jae
pop
jb
mov
aas
mov
dec
fnstsw
sbb
divps
mov
sub
addl
ja
imul
xchg
inc
jle
out
sti
hlt
ret
arpl
test
sub
je
jmp
sub
les
sbb
xchg
in
leave
xor
out
icebp
es
scas
ds
gs
sbb
aam
lock
jle
jg
xchg
add
cmpsb
and
sub
hlt
mov
jnp
fcoml
enter
out
or
ret
mov
mov
bound
xor
sbb
mov
jmp
cwtl
test
cltd
add
jnp
imul
push
adc
imul
fidivs
or
and
mov
das
nop
dec
leave
ds
cs
xchg
nop
ret
cmpsb
test
cwtl
insb
dec
lea
mov
add
sbb
sbb
push
push
or
jb
icebp
movsl
dec
adc
dec
mov
jmp
cwtl
mov
jle
ret
mov
cmpsl
in
mov
mov
pop
xchg
mov
add
out
int3
dec
push
adc
add
stos
xor
aas
cmp
bound
lret
and
cmp
daa
cld
fimull
inc
insb
xor
sbb
popa
mov
arpl
xor
fwait
sbb
cmpsb
lahf
cltd
or
pop
push
xchg
pop
pushf
jo
jno
enter
out
adc
xlat
pop
data16
lods
popf
insl
mov
xchg
cltd
jl
pushl
mov
mul
bound
jmp
and
mov
pop
clc
and
jmp
mov
pop
outsl
inc
stos
or
cmp
pop
dec
sti
xor
and
add
push
rcrl
aad
push
dec
daa
clc
add
stc
dec
cmp
in
ja
xchg
jne
rcrb
cmpsl
adc
push
mov
inc
cmpsl
xchg
push
das
mov
cwtl
lea
mov
xchg
add
insb
jl
pop
negb
or
jmp
arpl
mov
lds
mov
push
push
gs
dec
or
enter
inc
sub
pop
jp
fwait
in
setl
testl
add
cld
mov
clc
inc
push
into
mov
cmpsl
and
cltd
loopne
testl
push
mov
mov
movsl
popl
and
sub
mov
xor
mov
jae
dec
mov
dec
cmp
movsl
add
sbb
lea
imull
pop
sahf
mov
enter
or
jo
mov
out
imul
shrb
cs
rorb
add
adc
sub
xor
push
inc
sub
push
pop
sub
ss
shll
popa
data16
arpl
push
lock
imul
adc
sahf
jnp
lret
out
pop
adc
push
loopne
pop
push
dec
mov
rolb
mov
push
js
mov
cs
pop
fcomps
xorl
sub
das
aas
and
jnp
in
mov
les
pusha
add
cmpsb
push
adc
shrb
cs
jg
or
cmpl
push
jg
mov
clc
lock
adc
mov
inc
mov
mov
xchg
out
shll
stc
jne
in
unpcklps
pushf
jno
push
mov
xor
push
test
cmpl
test
fstps
ret
and
data16
jmp
leave
xlat
cmp
cld
arpl
push
xor
push
pop
movsb
adc
mov
rorl
sub
mov
les
inc
shrl
int3
sbb
imulb
ror
repnz
fimuls
sarb
cli
push
or
ljmp
xchg
in
lock
das
adc
mov
or
add
or
loopne
mov
lret
popl
push
mov
and
std
insl
add
add
lods
cmp
mov
xor
or
xlat
lods
lahf
xor
jecxz
inc
push
sub
das
insl
jmp
sbb
sub
or
pop
rorl
sbbl
or
cwtl
rcrb
pop
sub
xchg
ret
inc
dec
lret
lret
sbb
popa
ljmp
lret
lock
sti
jnp
adc
mov
xor
cmpsb
stc
icebp
int
lcall
push
pop
lret
aaa
mov
in
mov
xchg
push
xchg
sub
adc
stos
lods
adc
lret
inc
shl
scas
pop
xor
jae
xchg
out
inc
push
outsl
fimuls
mov
pop
pop
jnp
fidivl
cmp
repnz
test
push
xchg
adc
inc
insb
mov
outsb
sub
in
mov
in
push
push
sahf
roll
pushf
dec
test
fxam
cmpsb
out
lock
out
sarl
not
mov
jae
push
mov
add
out
push
xchg
lahf
test
push
fcomps
in
push
fstl
ja
mov
nop
ret
push
sbb
cmp
fstl
push
push
pop
call
jne
xor
mov
cmp
leave
jb
stos
fisttpl
pop
cmp
rdtsc
mov
jge
pop
lea
jp
jg
jg
push
xor
in
push
push
push
flds
sub
xchg
outsb
xchg
int
push
fmul
scas
lahf
push
shrl
adc
and
jb
pop
repnz
inc
dec
outsb
imul
lods
pop
test
movsb
xlat
inc
push
sub
and
rorl
xlat
or
and
js
pop
loope
sahf
xchg
xchg
mov
outsb
mov
arpl
mov
jl
pop
leave
sbbl
lret
into
stos
cmp
gs
dec
scas
popa
pop
pop
jle
rcrb
ret
mov
shrl
cmp
mov
push
andb
dec
adc
xchg
or
out
cs
jg
xor
imul
in
adc
pop
ret
cmc
sub
test
xchg
add
jnp
add
mov
orl
xchg
imul
jg
push
cs
xor
sub
mov
aad
sub
add
cmpsl
xorl
aas
test
out
iret
leave
insl
inc
dec
and
dec
dec
and
inc
adc
sti
mov
sahf
inc
dec
sbb
test
pushf
out
cmp
sahf
in
jmp
and
inc
mov
jns
ds
push
fmul
cwtl
fs
jecxz
mov
iret
pop
pop
stc
int
or
iret
mov
adc
ficoml
sbb
xor
push
pop
popa
or
pushf
sbb
xchg
cmp
rcrb
clc
popf
inc
pop
test
aaa
push
pop
rorb
cmc
xor
in
ror
sbb
mov
movsb
bound
ljmp
in
sar
aad
pop
aam
sahf
jns
mov
adc
in
push
vphadduwd
sub
mov
in
xchg
outsb
dec
lock
daa
jmp
and
clc
sbb
adc
arpl
adc
adc
pop
out
inc
add
push
jmp
and
inc
mov
lds
or
inc
cltd
jg
pop
into
dec
xlat
popf
pop
adc
imul
test
mov
test
jle
sub
and
inc
and
iret
rolb
mov
dec
sbb
scas
sub
or
les
and
pop
ret
add
cmc
cmpb
xchg
inc
push
cwtl
or
fmulp
mov
movsb
leave
lods
jl
lods
jmp
and
cmp
test
sub
out
adc
and
lcall
mov
mov
mov
pop
in
push
xor
ja
or
push
xlat
fidivl
out
pop
xor
dec
cmc
pop
fadd
sbb
mov
mov
hlt
sarl
inc
icebp
stos
push
adc
xlat
jle
xchg
push
push
shlb
dec
and
and
das
clc
mov
push
insb
repnz
cmp
iret
arpl
xchg
scas
add
sub
xchg
stos
mov
add
aas
sbb
adc
fsubs
outsb
out
push
adc
pop
push
lret
push
or
mov
js
fildll
xlat
pop
shlb
call
dec
mov
lods
inc
loop
aaa
push
fisttps
pusha
pushf
scas
adc
test
lahf
xchg
jl
pop
push
cs
pop
dec
pop
sarl
cmp
cmc
sub
jns
movsb
inc
mov
mov
out
jmp
leave
adc
lcall
repz
cli
pop
push
and
mov
mov
loopne
pop
aaa
jbe
mov
cmp
lock
fs
shrb
mov
or
dec
or
mov
arpl
loop
inc
mul
in
aaa
data16
mov
xchg
loopne
cmp
lret
inc
cmc
aaa
cmpsb
subb
dec
lcall
add
mov
leave
ja
inc
sub
imul
addl
xlat
test
jne
dec
sbb
test
mov
cmp
mov
aam
fldcw
mov
adc
dec
cmpsl
push
and
fcompl
mov
mov
xor
push
imull
test
subl
lret
mov
pop
mov
fiadds
fildl
nop
push
fcompl
inc
pop
inc
cmp
sub
js
jns
mov
jae
jmp
push
adc
mov
test
jb
out
lock
dec
and
hlt
add
fldenv
cli
gs
dec
jp
push
mov
lods
pop
fdiv
out
imul
dec
test
mov
aam
in
insb
jp
mov
dec
out
xorb
dec
orb
sbb
add
je
pop
and
ds
cmpb
push
inc
pop
fcoml
xchg
stos
pop
fcmovnb
loope
test
jae
dec
js
shlb
mov
stos
sub
movsb
cmp
mov
stc
push
clc
cmpb
inc
movsl
out
imul
sbb
jo
sti
inc
lcall
leave
push
shrb
in
mov
xor
lods
push
mov
mov
pop
xor
fs
int
test
inc
movsl
mov
jl
mov
dec
inc
mov
jo
flds
mov
js
sti
call
sti
or
or
sbb
jnp
inc
push
mov
fdivl
jnp
inc
insb
and
in
lods
jns,pn
int3
pop
mov
mov
push
mov
and
fs
mov
sbb
adc
sbb
ret
xchg
js
jno
mov
mov
sbb
and
dec
xchg
sub
rorl
jmp
and
pop
insl
andl
ret
aad
add
es
push
stc
aam
or
mov
dec
sub
test
lret
enter
in
push
mov
and
push
cmp
dec
inc
fbstp
fnsave
imul
push
loop
mov
leave
popa
xchg
mov
jnp
test
loope
mov
jo
add
mov
add
mov
xchg
test
loop
sahf
out
xchg
and
pop
adc
jo
xchg
cmpl
push
cli
pop
stc
xor
into
cwtl
mov
mov
mov
mov
mov
je
adc
test
jns
sub
movsl
sarl
or
sbb
sahf
xor
sbb
inc
aad
sbb
ss
repz
xor
mov
sbb
loopne
enter
or
repz
push
jmp
xchg
push
and
pop
dec
ja
dec
pusha
add
into
xor
faddl
sbb
adc
imul
jge
push
cmp
mov
pop
push
imul
shll
lea
mov
lret
xchg
cwtl
icebp
xor
push
addr16
sbbb
cmp
outsb
dec
fs
or
enter
pop
and
dec
push
sbb
int3
push
pusha
mov
lret
adc
xor
or
dec
xchg
leave
xlat
into
add
sub
mov
and
push
lea
xor
sub
adc
dec
outsl
mov
mov
sbb
sub
dec
mov
xlat
lea
insl
jg
jmp
add
adc
push
xor
lahf
je
mov
adc
sub
mov
inc
xchg
movsl
cmp
inc
dec
jnp
cli
dec
sahf
add
ds
loope
cltd
aad
addr16
sub
jge
rcll
xchg
or
ds
out
pop
insl
cwtl
xchg
mov
dec
inc
mov
cmp
xchg
into
xor
mov
or
adc
ret
inc
arpl
push
lods
cwtl
adc
mov
in
jmp
leave
pushf
scas
sbbl
add
inc
lret
and
mov
inc
add
imull
mov
loopne
push
push
mov
int3
mov
inc
fwait
adc
das
test
jne
push
ja
ljmp
push
mov
lock
enter
sahf
outsb
js
xor
rorl
jl
movl
xor
fsubl
and
mov
aam
lods
xor
ja
cmp
gs
push
scas
xchg
mov
stos
sub
jbe
sub
jg
mov
popf
out
jp
push
cmc
and
xor
and
or
fsubr
inc
xchg
dec
das
push
arpl
xchg
leave
mov
cld
insb
loope
leave
adc
and
jno
loopne
out
sbb
test
cli
loop
scas
push
popa
sbb
pop
popa
jno
jmp
pusha
xor
cmpsb
adc
inc
dec
cmp
dec
or
xor
insb
shll
push
imul
sbb
xchg
cmp
and
mov
fsubr
test
repnz
idivl
jge
popa
cmc
jle
mov
out
mov
pusha
cmp
daa
das
inc
loope
push
scas
cltd
mov
enter
sub
shll
mov
pop
mov
fldenv
sbb
lcall
scas
xor
repz
pop
and
and
sbb
shrb
mov
shlb
add
mov
lcall
push
sbb
sbb
mov
lods
inc
cltd
xchg
dec
mov
xchg
xchg
mov
dec
xchg
sbb
movsb
rclb
arpl
xor
dec
sub
sub
push
paddw
mov
cmpsl
icebp
gs
in
mov
jge
xchg
mov
sbb
loop
divb
xor
inc
xchg
dec
jne
shlb
cmp
xchg
mov
sub
jmp
lcall
or
push
out
addl
add
sbb
jmp
cmp
push
insb
das
nop
xor
aaa
push
es
jg
xlat
pop
loop
add
lea
stc
in
out
adc
fcoms
adc
ja
jmp
lcall
pop
out
popf
lret
int3
pop
mov
pop
push
push
sbb
and
mov
push
lea
loope
mov
or
addr16
xchg
mov
test
lock
fdivl
jge
xlat
fisubl
lret
sbb
sti
xchg
pop
cld
mov
insl
shlb
call
scas
jo
xor
adc
xchg
inc
test
cmp
ss
sbb
sub
cmpsb
test
fdivrs
sbb
add
xchg
pop
inc
add
mov
jns
jp
adc
out
stos
into
scas
mov
mov
add
clts
dec
pop
test
cli
mov
xchg
test
mov
mov
stc
loope,pn
mov
repz
out
mov
sbb
push
clc
dec
jnp
shrb
out
xchg
bound
insl
xor
fcomip
mov
pop
stos
lret
jle
cmp
in
cli
add
imul
test
lea
fwait
and
test
call
mov
sbb
or
dec
outsl
pop
sub
add
loop
xlat
push
les
sti
aaa
test
hlt
xchg
push
dec
lods
sbb
dec
jl
and
jmp
lods
pop
dec
adcl
lock
or
sub
lock
push
cmp
jl
rcl
cmp
nop
adc
aad
dec
xor
fmuls
aad
lret
xchg
pop
add
jno
jecxz
fimull
pusha
leave
movsl
notl
scas
aad
scas
mov
icebp
xlat
mov
or
cmp
rorl
into
sub
repnz
scas
adc
das
insl
arpl
aam
add
mov
sahf
xor
aaa
fprem1
lret
sub
adc
cmp
outsl
call
add
and
ret
adc
mov
adc
pop
xor
xchg
int3
pop
fildll
lock
push
inc
adc
jl
jbe
mov
sbb
loope
in
sub
les
aad
fs
mulb
xchg
xchg
imul
decb
fwait
inc
jmp
cli
clc
cmp
mov
mov
adc
das
mov
jecxz
aam
pop
cmpsb
push
test
push
sahf
xchg
sar
push
lcall
repz
shrb
sbb
iret
mov
int3
in
cwtl
out
sub
mov
sbb
cwtl
je
dec
xchg
mov
aas
add
addr16
sub
xchg
xchg
es
bound
dec
pop
sub
jo
bound
xchg
jle
mov
xorl
mov
repnz
pushf
imul
mov
cli
sub
cmpsl
pop
pop
sub
sar
mov
iret
xor
in
cld
push
jo
dec
dec
pop
pop
mov
add
and
cmp
ss
out
add
aas
inc
aam
add
int3
pop
or
mov
loopne
jmp
mov
ja
sub
push
andl
sub
ss
mov
bound
and
adc
pop
dec
cmp
xchg
jae
or
mov
mov
stos
test
outsl
add
clc
or
fdiv
cs
xchg
inc
stos
push
inc
and
dec
sahf
pop
adc
mov
mov
pop
jne
mov
push
fsts
xchg
inc
jne
in
inc
cli
xor
loopne
pop
lock
add
mov
repz
cs
cmp
mov
lock
fs
test
popf
int3
test
frstor
mov
or
mov
adc
into
lock
sbb
or
push
pop
lahf
jecxz
push
pop
cmp
fdivl
inc
lods
jno
hlt
fs
cmpsl
iret
pop
xchg
pop
push
mov
xor
fwait
dec
rorl
in
movsl
and
clc
ds
dec
fdivl
test
sbb
out
test
dec
fs
push
fmull
push
testb
and
mov
xor
adc
dec
fbstp
sbb
setnp
ret
lcall
movsb
out
and
or
adc
dec
mov
mov
sbb
dec
pushf
inc
repnz
enter
push
inc
out
enter
and
mov
cmpsl
dec
popa
jbe
ja
push
pop
xor
and
mov
js
cmp
int
cmp
js
sub
test
lods
jp
or
and
cmpsl
pop
and
or
lret
loope
xor
or
sbb
cli
mov
inc
jecxz
pop
scas
lods
mov
xor
or
rcl
jns
out
sub
xor
inc
mov
leave
fadds
jecxz
cmp
mov
xor
xchg
in
mov
je
adc
dec
inc
imul
fcomp
jl
mov
lea
cltd
mov
or
movsb
aas
fnstenv
jb
scas
movsl
cltd
pop
mov
add
xchg
sub
adc
pop
inc
icebp
test
xchg
mov
hlt
dec
xchg
fdivrs
mov
popf
test
pop
push
push
lret
pop
movsl
imul
sarl
and
out
push
push
sub
cmp
test
fnsave
enter
push
or
ficomps
jg
cmp
sbb
sub
jl
inc
icebp
pop
pop
or
imul
mov
dec
inc
shlb
push
xor
jmp
enter
loope
ss
sti
out
sbb
mov
mov
test
push
ret
jecxz
or
pop
pusha
outsl
rcll
mov
test
lret
lock
xchg
xor
std
dec
jmp
je
repnz
pop
arpl
mov
sbb
push
and
shrl
jo
icebp
or
or
inc
cmpsb
dec
cli
sahf
push
xor
enter
test
test
shlb
mov
dec
lahf
pop
out
sub
ja
das
pop
ja
imul
pop
inc
pushf
xchg
sub
mov
popa
sub
icebp
hlt
dec
nop
cmp
lret
iret
jae
std
pop
mov
pop
or
daa
mov
sub
adc
push
ds
punpckhwd
dec
pop
push
and
ficompl
jl
jne
jns
cmp
repnz
ret
and
xchg
push
push
sub
lahf
sbb
jbe
add
loopne
ds
call
insb
cs
out
cltd
frstor
arpl
jo
push
fwait
or
push
and
js
dec
mov
subb
imul
and
inc
addr16
xor
push
mov
test
int3
add
lahf
jge
dec
and
xor
dec
aad
rclb
cmp
out
sub
subl
dec
mov
jno
rep
inc
fisubrs
adc
in
imul
inc
ss
dec
or
leave
jle
or
sub
loop
cmp
lods
out
sahf
pop
out
rcrb
int3
dec
cs
mov
xor
add
test
add
aaa
in
and
push
dec
test
dec
adc
or
xor
add
movsl
sbb
leave
pop
lahf
sti
inc
inc
negl
sub
mov
push
mov
adc
sbb
gs
jecxz
rcrl
stc
mov
les
or
add
mov
repnz
xchg
pop
or
inc
sbb
insl
out
lock
lret
cmp
jo
scas
lcall
jbe
pop
or
or
pop
sbb
push
mov
push
mov
sub
scas
sbb
mov
cmp
mov
dec
push
jge
imul
out
sti
xor
jbe
addl
aad
xor
jno
lret
imul
lds
lret
and
jge
jae
pop
push
mov
xchg
xchg
mov
and
jle
jo
outsb
outsl
cmpsb
jle
insb
inc
xlat
xchg
dec
dec
popa
aam
and
lods
in
lret
repnz
mov
inc
pusha
pushf
xchg
mov
in
arpl
mov
mov
pop
adc
decl
pop
add
daa
mov
mov
mov
mov
out
lea
mov
stos
ret
sarl
inc
mov
ret
popf
cmpsl
push
outsb
fs
rcr
call
adc
and
and
clc
bnd
mov
adc
lahf
out
sar
aad
test
lods
pop
xor
pcmpeqb
mov
stos
sbb
iret
push
shrl
fwait
and
mov
pop
enter
lock
sub
nop
jmp
test
cli
arpl
jecxz
sbb
aas
repz
std
mov
xor
mov
push
add
mov
mov
repz
lods
add
sbb
iret
mov
or
iret
aaa
cmp
scas
test
xchg
call
cld
out
fldl
pop
mov
dec
dec
or
xchg
add
iret
add
mov
outsl
insl
dec
jae
sbb
adcl
jbe
push
sbb
jge
inc
addb
xchg
ffree
in
push
pusha
mov
jg
rclb
adc
out
out
or
sbb
xchg
xor
rclb
data16
mov
lcall
mov
cwtl
fnsave
jge
xchg
ja
scas
jge
and
mov
cmp
mov
test
push
xchg
nop
outsb
fsub
jo
inc
rorb
int3
shrl
add
rcll
mov
aad
int3
xor
xchg
mov
or
enter
ret
inc
aam
jns
sub
ja
add
clc
adc
and
mov
jo
inc
adc
aam
mov
ljmp
cmp
popa
hlt
lock
movl
in
adc
dec
out
adc
mov
das
push
data16
pop
inc
mov
xchg
inc
popa
setge
sbb
sbb
pop
pop
pop
pop
cmp
adcl
pop
dec
xchg
inc
or
and
lret
add
mov
inc
lcall
into
lahf
out
pop
xchg
jb
cmp
pop
add
inc
outsb
sbb
pop
mov
pop
pop
call
shrl
push
xchg
pavgw
pusha
iret
jno
fmuls
fsubl
in
adcl
xor
pop
cld
out
add
jns
loopne
in
nop
cltd
pop
inc
je
ss
dec
cmova
cmp
outsl
cld
popa
mov
inc
or
xor
and
nop
adc
negb
in
repnz
push
jmp
shr
jmp
mov
dec
pop
sbb
ss
cwtl
ss
dec
jg
push
out
popa
jecxz
and
ffree
stc
inc
sbb
push
sub
jecxz
fbld
lea
xor
sub
loop
icebp
mov
mov
outsl
es
es
mov
or
or
xchg
movsl
sbb
lcall
cmp
pop
subl
sti
in
in
and
push
and
add
popf
test
xlat
or
pushf
xchg
inc
notb
pop
scas
test
jae
xchg
call
pushf
dec
pop
pusha
jb
pop
inc
je
jnp
and
mov
scas
pop
xchg
mov
cmp
pop
loopne
rclb
notl
loop
jmp
push
xchg
icebp
xchg
jnp
jl
lret
cmp
jmp
fsubs
fildll
lahf
pushf
jle
data16
mov
out
sbb
out
gs
aas
adc
or
call
jmp
cmp
mov
xchg
sub
mov
mov
mov
cmc
jnp
iret
lock
lahf
adc
mov
in
jne
bound
test
xchg
ret
add
aaa
out
sarb
mov
xchg
rcrb
stos
sbb
jbe
and
rcll
pop
push
addr16
mov
outsb
mov
xchg
movl
xor
or
loopne
push
jns
push
sbb
pop
pusha
cmpb
je
stos
dec
mov
mov
mov
mov
dec
mov
fwait
pushf
cltd
inc
jnp
fdivp
sub
jns
jl
jbe
in
dec
cmp
sarl
iret
lahf
add
insl
jg
jg
inc
or
inc
dec
cmp
pop
inc
xchg
roll
pop
into
mov
icebp
mov
pop
sbb
xchg
mov
daa
sbbb
xor
mov
mov
lock
or
orl
jg
mov
imull
mov
and
jp
adc
inc
fwait
in
sbb
cmp
push
jbe
addr16
add
out
ja
stc
leave
ret
inc
es
rcrb
or
lock
pop
xor
addr16
push
stos
pop
xchg
lea
adc
fs
mov
fisubs
shlb
movsl
loope
and
cmpsb
add
nop
adc
adc
imul
add
mov
dec
out
fsts
inc
cmpsl
cltd
dec
fcmovb
cmp
lock
ret
in
nop
xchg
fwait
cmp
cli
add
into
mov
aad
lret
test
sub
lret
cs
loope
fs
mov
sbb
lret
jbe
push
rcrb
and
es
mov
mov
dec
mov
xchg
daa
mov
inc
lea
shll
mov
shlb
inc
imul
inc
cli
or
aad
js
addr16
mov
mov
cmpsl
addr16
icebp
stos
ds
cli
and
cltd
shl
cmp
jmp
jle
aaa
xchg
mov
xchg
or
jo
mov
xlat
pop
mov
int
xchg
out
sbb
jmp
adc
pop
pushf
jno
ret
inc
lods
xor
xchg
sub
scas
pushf
out
xlat
add
and
mov
jmp
cmp
rclb
in
sub
out
jg
ror
xor
std
pop
sub
imul
daa
pop
std
mov
das
mov
imul
mov
mov
cs
cli
mov
push
mov
xor
in
cmp
mov
popf
xchg
dec
ret
adc
sub
hlt
xlat
je
cmp
test
orb
shlb
cld
cwtl
rcll
inc
pop
mov
ret
cmpb
push
xchg
imul
daa
sbb
inc
js
add
xor
mov
cmpsb
sar
sarl
pop
data16
push
adc
inc
cmp
inc
or
iret
mov
xchg
xchg
sub
sahf
iret
push
mov
xor
popa
inc
fimuls
ja
fwait
push
mov
adc
lret
scas
int
imulb
cmc
pop
jge
test
shlb
scas
or
fimull
arpl
cmp
test
ds
gs
dec
dec
sub
int3
hlt
jbe
dec
xor
enter
stos
lcall
movsl
mov
int
mov
rcrb
sbb
jg
or
lcall
xorl
sbbl
daa
pop
cmp
sub
dec
lods
enter
imul
and
daa
jge
push
repz
sbb
xor
test
stc
mov
jae
cmp
orb
push
hlt
loope
pop
xchg
jge
mov
pop
or
fisttpl
and
xlat
cs
and
stos
sub
aam
xlat
aaa
les
mov
ret
into
jge
push
mov
mov
fdivrp
pusha
test
dec
je
je
test
mov
fdivrs
push
mov
dec
shrb
cwtl
sbb
adc
lock
cwtl
ret
and
xlat
dec
dec
adc
jnp
push
adcl
fstpl
or
pop
ds
iret
jne
cmpsb
int3
mov
cmp
push
cmpsb
stc
ds
addl
mov
jge
ss
jbe
fcompl
es
aam
aaa
and
ficoml
mov
orl
std
jmp
pop
leave
fistl
cmp
push
popa
jbe
sbb
sub
movsl
xchg
push
imul
cs
loop
ror
subl
ret
rorl
int
mov
popa
xchg
add
outsb
ss
jnp
jge
push
insl
aad
mov
cmp
int3
jmp
sbb
jecxz
inc
pop
imul
or
jl
jne
mov
fcmovbe
xchg
pushf
fwait
ss
mov
mov
test
mov
pop
clc
or
jno,pn
pop
sbbl
push
sbb
fcom
inc
dec
imul
insl
pop
mov
inc
mov
sub
dec
stos
or
add
stos
xor
daa
lds
data16
sub
lds
xchg
push
aam
scas
lret
lret
sbb
mov
sbb
sbbb
jne
push
int
xor
dec
sti
sub
mov
cwtl
daa
lcall
mov
test
push
pop
insl
imul
clc
adc
dec
or
inc
stc
and
std
cmp
pop
out
stos
stos
add
dec
jns
inc
dec
pop
cmpsl
ret
or
pop
sbb
pop
insl
inc
orb
cmp
mov
arpl
js
test
mov
aaa
aad
add
jae
mov
or
clc
insl
rcr
cmpb
xchg
orb
lret
pop
inc
fstpt
fdivrl
dec
mov
arpl
stc
mov
mov
es
icebp
adc
fstl
out
fwait
mov
sbb
outsl
and
fistpl
push
insl
fiadds
dec
hlt
test
sub
rorl
andb
push
add
lcall
in
mov
adc
adc
mov
loop
push
in
xchg
nop
cltd
jg
ss
in
and
cld
ss
or
outsb
loope
xchg
cmpsb
fldt
dec
and
xchg
pop
test
pop
and
and
push
pop
sub
cmp
sahf
or
mov
leave
call
and
mov
mov
imul
lds
sbb
mov
stos
fsubp
pop
push
dec
rorl
clc
hlt
xchg
fdivs
in
add
enter
mov
push
inc
cmpsl
push
inc
stc
pop
xor
mov
leave
sar
push
ficoml
in
cmp
mov
mov
xchg
add
inc
outsl
push
lea
movsbl
and
ds
mov
pop
inc
add
cs
neg
fadds
mov
imul
hlt
push
ror
dec
cmp
jle
adc
cwtl
shrl
add
add
lea
push
sbbb
add
sbb
lea
les
and
adc
div
mov
outsb
sbb
daa
icebp
rep
into
cmp
xor
jle
lds
icebp
fiaddl
daa
sbb
inc
adc
mov
jp
mov
jecxz
push
orb
fdivl
add
push
cmc
jb
sbb
shr
xor
cmp
cwtl
lds
data16
mov
es
push
out
sub
and
push
cld
mov
in
popa
or
mov
cmp
mov
ds
pop
dec
in
pop
dec
std
pusha
mov
pop
mov
ret
mov
mov
ja
mov
movsb
outsb
pop
ret
inc
mov
sub
pop
or
enter
xchg
mov
xchg
rcrb
cmpsb
pop
xchg
aaa
je
dec
das
xor
aas
in
ds
rcrb
out
mov
inc
mov
subb
pop
es
push
scas
into
jg
ret
imul
xchg
loopne
lods
and
push
mov
sbb
pop
mov
call
call
pop
inc
pop
in
push
jbe
out
jg
sbb
out
mov
into
inc
cmp
pop
mov
jae
imulb
push
sub
mov
cmp
mov
mov
out
xor
xchg
pop
clc
std
cwtl
or
bound
mov
jp
push
movsl
push
aaa
cli
push
sub
sub
jo
adc
jl
nop
mov
mov
das
mov
mov
jno
push
shl
sarb
sbbl
lds
loop
addl
in
dec
imul
bound
hlt
ja
sub
cmp
dec
inc
shl
inc
pop
es
xchg
cs
fcmovnbe
cmp
mov
mov
ss
aam
xchg
push
hlt
cmpsb
jge
add
push
inc
in
test
test
gs
and
cli
shll
or
jg
xor
cmc
dec
sbb
testl
bound
imulb
pop
aaa
pop
test
loope
aaa
jmp
mov
lock
cmp
adc
das
lret
insl
js
jbe
pop
xor
sub
in
xchg
fsubrp
mov
test
add
push
push
xor
pop
scas
xor
loope
push
pop
sbb
and
movsb
mov
mov
fstl
cmp
push
mov
dec
jg
js
movsl
push
jbe
fwait
fs
movsb
or
add
imul
cmpsb
nop
or
push
pushf
sub
aaa
and
popa
cmp
jg
cmp
pop
mov
lcall
adcl
sub
mov
pop
xorl
out
aas
out
cmpsb
or
or
aad
sbb
cmp
mov
push
pop
pop
repz
and
xchg
jl
jp
push
out
popf
icebp
jmp
pop
pop
push
push
jg
in
mov
jmp
and
push
insb
xor
lret
sbb
mov
inc
push
popf
jl
jns
add
fwait
cmp
add
and
pop
jge
ret
xchg
lahf
push
js
mov
and
sarl
aaa
jle
cli
je
jno
insl
inc
jbe
out
hlt
mov
dec
ja
repnz
testl
add
cs
test
arpl
sub
insl
sarb
sub
and
fcmovne
sbb
test
out
inc
hlt
sub
das
xor
rolb
leave
and
in
pop
stos
ds
push
lea
mov
rorl
mov
mov
lret
das
std
clc
and
xchg
sbb
sbb
test
mov
divl
outsl
push
mov
sub
scas
inc
mov
jne
scas
and
xchg
add
xlat
cmpsb
or
arpl
fidivs
aam
rcrb
jnp
icebp
jle
stos
mov
lods
mov
mov
pop
sldt
pop
sub
inc
xchg
push
pushf
push
or
jmp
and
push
fnsave
xor
pop
js
inc
xor
xchg
xchg
pop
test
mov
stos
je
sbb
cmp
and
jl
or
mov
cs
ficompl
mov
and
push
jnp
fs
xor
adc
inc
out
adc
sbb
popa
test
jl
sub
out
mov
sub
add
ret
out
cli
cmpsb
dec
shlb
push
xchg
shll
mov
imul
push
push
mov
sub
jl
inc
clc
ret
sub
insb
fwait
xor
or
jl
mov
mov
pop
repnz
loope
xchg
test
add
ss
pop
arpl
aas
imul
scas
pop
cmp
xrelease
sub
mov
mov
push
jl
mov
dec
in
arpl
rolb
fistpl
sbb
pop
ss
lret
jae
and
inc
push
adc
inc
push
es
push
push
rcr
in
push
mov
dec
test
loopne
ret
mov
pop
push
mov
cmpsl
xlat
gs
sti
pop
mov
popa
sbb
js
daa
pop
mov
push
jo
push
je
cs
cmpsl
push
scas
int
or
sub
push
cmp
shrl
fnsave
mov
mov
adc
lcall
inc
shll
aad
cmp
fisubrl
pop
iret
and
pop
fimuls
mov
xchg
stos
mov
aaa
cmp
aad
bound
add
lahf
dec
sbb
xor
jbe
out
cmc
shll
cmpb
mov
sub
das
jl,pt
pop
fxch
sbb
jb
out
inc
push
xor
fldenv
sub
or
fisttps
push
icebp
data16
jbe
rolb
leave
jle
xor
push
sub
lret
adc
push
ret
mov
sub
jae
jnp
sub
sbb
es
repz
mov
xchg
cmp
pop
adc
out
mov
movntps
fcmovnb
push
sbb
out
stc
pusha
jl
dec
xor
or
pop
les
dec
or
movsl
push
imul
cmp
inc
add
sbb
pusha
xlat
loope
sub
pop
pusha
or
stos
xchg
stc
daa
jno
push
push
xchg
sub
sahf
xor
pop
cmp
mov
cltd
sbb
int
sub
add
std
and
jl
or
enter
fisttpl
bnd
push
or
imul
cmpsb
cli
jnp
mov
or
mov
or
or
imul
pop
cmp
jmp
sti
adc
jo
adcb
cmpb
out
das
push
aas
fdiv
mov
jg
jno
addl
sar
aaa
xor
jecxz
jg
xchg
push
pop
mov
pop
push
ljmp
or
sub
cld
lods
sub
adc
xlat
aad
lcall
jae
push
iret
sub
enter
pusha
fistps
call
es
inc
and
sub
ss
xor
and
lods
ljmp
cmp
lahf
mov
jae
roll
scas
sub
jp
sbb
jns
or
push
pop
in
jge
and
leave
pop
std
pop
sub
gs
out
addb
js
or
sbbl
mov
mov
sbb
mov
xchg
mov
into
fmuls
pusha
jbe
mulb
add
pop
idivl
jb
or
test
idivb
adc
cltd
jno
imul
stos
lret
jae
loopne
adc
and
addr16
repz
cmp
repz
clc
xorl
sub
jne
cltd
cmp
ja
push
inc
scas
xor
mov
mov
lock
xor
push
adcb
mov
jb
jne
sub
ret
jbe
xorl
in
cmp
movsb
or
lock
test
xchg
test
loope
movsb
xchg
and
push
enter
hlt
sbb
je
mov
and
xchg
insb
pop
xor
shlb
outsb
es
xorl
or
sbb
pop
jnp
sub
jae
mov
hlt
jnp
scas
gs
xchg
and
cmp
inc
int
inc
lods
xor
pop
loop
inc
rolb
shrb
lcall
xchg
dec
mov
dec
dec
fsubl
mov
sub
or
jne
dec
das
push
cli
iret
dec
push
fwait
push
adc
xchg
pop
or
or
div
sub
jb
sub
mov
leave
xchg
in
out
jmp
push
push
mov
ret
out
or
pop
mov
sub
pop
les
jge
add
fcoms
rorb
dec
and
and
or
sbbb
xorl
fstps
scas
iret
pop
mov
dec
mov
bound
call
jbe
pop
pop
in
inc
test
mov
xchg
cmp
popa
adc
insl
adc
or
ds
pushl
ret
and
gs
sub
mov
add
out
cmp
and
push
xchg
xor
out
in
adc
fiadds
xor
ficomps
lret
mov
int
jge
add
lret
pop
aaa
mov
leave
or
lcall
scas
fistpll
cmpsl
ret
pop
adc
jnp
add
jecxz
dec
ret
cmp
out
js
push
ds
loopne
test
aaa
ficoms
imull
mov
push
sbb
iret
jb
xor
xchg
adc
push
xor
xor
inc
and
mov
push
xor
shlb
cmc
outsb
out
xchg
mov
mov
mov
std
ljmp
pop
lret
out
adc
mov
pop
sbb
pop
stc
mov
dec
xchg
sti
lods
and
in
push
test
inc
fldcw
inc
imul
xor
hlt
mov
mov
xor
inc
xchg
sub
xchg
movb
imul
or
popa
jge
xchg
cmc
int
sub
mov
and
imulb
inc
pop
jecxz
in
sbb
imul
incl
loopne
lcall
push
shll
cmpsl
enter
out
loopne
mov
adc
mov
es
ret
jno
les
dec
dec
jo
loope
shll
divl
push
jmp
cmp
aas
mov
and
dec
ja
or
jb
mov
xor
cmpsl
push
mov
cmp
in
neg
push
adc
shrb
std
and
xchg
in
js
ds
sbb
pop
scas
adc
add
es
shlb
mov
test
mov
lods
roll
lods
sub
adc
enter
rorl
mov
or
dec
cmp
pop
out
js
sarb
sti
mov
mov
in
popa
and
jmp
es
or
and
cmp
cmp
leave
int
pop
mov
xor
nop
sbb
cmpsb
mov
jge
aam
pop
gs
test
mov
mov
jae
mov
push
loopne
pop
mov
ss
loope
mov
stc
in
jp
push
mov
clc
pop
aam
mov
movsl
loope
div
fistps
out
inc
les
dec
mov
hlt
jns
and
inc
cld
cmc
shll
insl
adc
bound
mov
mov
lea
test
fisubl
mov
adc
jle
mov
test
scas
jnp
push
xor
xor
aaa
ds
fwait
jno
jne
jae,pn
dec
lock
sbb
push
sahf
arpl
xchg
ret
sub
fnstcw
mov
jbe
mov
iret
push
or
hlt
cmpb
push
xchg
or
xor
cmp
iret
repz
ds
movsb
ja
mov
push
push
xchg
and
mov
negb
add
and
pop
push
mov
xchg
popa
mov
les
xor
loopne
test
mov
push
in
je
shll
jge
insb
add
das
int3
and
sbb
movsb
xchg
inc
sbb
sbb
ja,pt
out
or
dec
xchg
fisttpll
sub
pop
sbb
int3
das
lods
adc
jmp
dec
mov
or
push
mov
push
int
pop
lret
sub
lods
aad
loop
xchg
enter
dec
cwtl
repz
je
push
sti
push
int3
in
push
clc
sub
xchg
sub
insb
mov
out
in
dec
push
xchg
aad
outsl
lret
lea
enter
pop
dec
pop
lcall
daa
imul
pusha
mov
push
inc
test
push
sub
or
fistps
sbb
aaa
bound
pop
sbb
pusha
mov
outsb
cld
add
or
dec
pop
dec
push
add
cli
and
imul
rcr
fwait
adc
mov
mov
imul
sub
fdivrs
fcoms
hlt
and
out
sub
adc
or
loopne
fiadds
inc
lds
mov
pop
loop
outsl
or
xor
inc
fidivl
lods
dec
mov
mov
clc
sub
adc
es
je
int3
ret
sub
loop
lods
inc
mov
cmpsb
cmp
out
test
shl
jge
jg
inc
out
int3
mov
test
aam
jp
xlat
shll
lret
mov
inc
sarl
jns
xor
lahf
enter
or
int
pop
lahf
aad
mov
mov
add
jge
add
jle
leave
out
dec
and
mov
gs
dec
inc
lahf
lods
or
and
jmp
sbb
sub
sbb
shrb
imul
xchg
mov
inc
jno
mov
in
pop
adc
jg
loope
sub
jno
and
xor
and
dec
out
loope
inc
stc
int3
cmpb
test
rclb
pop
test
movsb
in
lret
lret
leave
adc
adc
mov
xor
xchg
sub
jb
push
mov
daa
ja
mov
xchg
mov
xchg
fisttpll
push
push
jbe
xor
push
push
jo
mov
mov
js
hlt
mov
movl
rcrl
push
out
std
iret
and
imul
push
adc
fisubrl
fcmove
repz
mov
int
xor
shll
or
push
xor
jo
mov
out
pop
push
or
bound
pop
sbb
pop
movsb
outsb
fcompp
cwtl
scas
jmp
xor
xchg
addb
push
bound
lods
cmp
ret
cltd
or
cli
fcmovu
add
cwtl
pop
cmc
mov
test
ja
sbb
jl
data16
xchg
push
pop
add
test
xchg
jns
jg
cmp
xchg
enter
test
adc
push
jns
dec
andl
lock
shrl
jp
loop
jne
cmp
gs
les
daa
leave
sti
jbe
cmp
outsl
sahf
xchg
xor
add
mov
subl
fistl
pop
into
ljmp
pop
sahf
mov
je
add
mov
test
insl
pop
and
sbbb
addr16
out
adc
idivb
fcmovu
mov
adc
jno
in
sarl
dec
xor
movsb
or
push
mov
fdivrs
mov
lret
sbb
scas
dec
orb
lock
ss
ja
dec
ror
lods
sub
fbstp
add
shrl
xor
push
sti
cmp
insb
mov
inc
pop
ret
cmp
xor
testb
push
pop
das
les
fs
gs
andl
push
lds
adc
and
add
fwait
loop
lea
loopne
sbb
clc
aad
sbb
adc
inc
or
loopne
iret
mov
orl
push
lock
packsswb
es
dec
clc
lea
sub
loop
ror
sbb
sub
shl
dec
loop
pop
ret
aam
push
sete
and
out
repnz
insl
mov
push
xor
mov
iret
xlat
in
mov
negl
xchg
icebp
cmp
fldenv
mov
mov
inc
and
lret
ss
jnp
repnz
or
das
xor
mov
orb
dec
ss
xchg
into
fisubrs
or
jb
notb
mov
ror
inc
pop
push
sbb
ror
cmp
sub
mov
shrl
inc
aaa
mov
jae
shll
rolb
adcl
pop
fdivl
stos
xchg
cli
mov
outsb
mov
in
mov
fsts
mov
mov
push
mov
stos
int3
bound
rcrl
test
xchg
push
repnz
push
data16
in
cmp
xor
mov
scas
and
cwtl
ret
sahf
daa
cmp
and
stos
jl
mov
in
ss
xchg
sub
scas
add
pusha
icebp
fsubl
pop
ds
cmpsl
sub
je
repz
cmp
pop
cmpsl
cmp
les
jecxz
gs
xor
stc
xor
mov
in
jmp
lods
out
cmp
clc
cmpsb
pusha
or
and
add
mov
and
sbb
stos
shlb
or
fisttpll
xor
popa
mov
in
add
stc
xchg
mov
push
jae
adcl
dec
cmp
out
inc
jo
push
and
lret
mov
sub
mov
popf
cwtl
lcall
cmp
ljmp
stos
cmp
dec
fs
sbb
pop
mov
inc
xor
inc
xchg
cmp
mov
fmull
lock
stos
fsubl
add
mov
scas
sub
lret
jl
mov
cltd
pop
in
loope
insb
xchg
cmpl
push
out
fmull
fwait
jo
les
icebp
push
sub
mov
and
fucomi
adc
fisubs
jne
pusha
adc
pop
iret
fnstsw
jl
mov
out
jg
cmpsb
cmc
mov
sub
mov
add
rol
push
lods
adc
mov
leave
push
cld
jae
ss
jmp
les
xchg
cmp
inc
mov
jg
fistpll
push
rcrl
and
push
and
mov
inc
popf
inc
ret
xor
sbb
mov
xchg
cmp
imul
pushf
jb
imulb
mov
jb
pop
or
dec
pop
cmp
cli
sahf
xlat
push
cmpsl
out
sbb
mov
mov
push
pushf
xchg
push
aas
sbb
xor
imul
fbstp
push
in
in
xor
sub
mov
mov
test
test
cmp
scas
push
or
lret
or
xchg
fisubl
add
add
inc
jp
xchg
iret
xor
aaa
cld
stc
xor
add
clc
dec
jnp
xchg
addr16
gs
inc
iret
gs
push
sarb
into
scas
dec
clc
clc
push
pop
fwait
push
sbb
in
jae
loopne
subb
cmp
je
cmp
pushf
or
sub
sti
jge
inc
jne
cmc
pushf
inc
daa
js
mov
and
sub
sub
insb
mov
jne
les
pushf
test
mov
push
mov
stos
movsb
dec
jmp
repz
imul
lcall
in
mov
jecxz
cmp
test
jno
cwtl
scas
and
mov
push
jl
inc
jecxz
dec
xchg
mov
push
xchg
test
repz
push
jecxz
sahf
jp
jne
stos
xor
aam
cmp
add
xchg
inc
mov
xor
enter
hlt
mov
aas
cmp
cli
mov
repz
sub
jnp
dec
int3
pop
in
cmpsl
pop
adc
and
mov
test
or
mov
movsb
push
or
addl
test
movsb
js
and
stos
sbbb
cmp
adc
mov
repnz
inc
scas
add
mov
cmp
call
push
dec
imul
aaa
data16
dec
hlt
mov
cltd
enter
inc
ror
or
test
ss
cmp
enter
jb
mov
int3
push
sbb
movzbl
sub
xor
mov
repnz
orb
cmc
inc
inc
xacquire
dec
pop
lea
mov
sarl
or
test
rorl
imul
fstpt
adc
adc
xor
xlat
cmp
int3
aad
sub
fisubrs
mov
sbb
fwait
icebp
call
and
cmp
aam
repz
mov
mov
cmpsb
pop
push
leave
iret
and
ret
sbb
push
aaa
test
xchg
pop
jle
lret
mov
or
mov
or
cld
imul
call
mov
jns
or
ja
rorl
xchg
push
add
sysret
jbe
test
cltd
das
pop
lds
fnsave
push
lahf
mov
xor
mul
dec
sub
jle
push
popf
cmpsl
aas
js
sti
jne
jmp
and
pop
mov
mov
mov
mov
dec
clc
sbb
notl
xchg
lcall
lods
cmp
cwtl
sbb
bound
ljmp
cli
xchg
cmpsl
add
rclb
cmp
dec
test
pop
shrb
sahf
test
pop
mov
jne
sbb
loop
dec
cmpsl
add
in
xlat
aaa
adc
daa
cltd
and
or
jne
add
mov
mov
test
rorl
jns
out
add
or
mov
add
or
cmpsb
stos
addb
imul
jge
mov
add
imul
mov
lock
jo
push
sub
or
mov
cmp
movsb
cmp
lahf
in
loopne
mov
push
inc
xlat
aas
xchg
pop
sbb
fs
mov
jb
cmp
sub
test
scas
imul
aad
sub
add
ss
loope
or
mov
insb
lahf
push
shlb
and
divl
cmp
arpl
push
lcall
jp
jo
fcoms
xor
fdivp
scas
push
mov
aam
mov
vpsraw
and
out
mov
add
fcmovne
into
and
jae
lds
insl
cmc
inc
adc
mov
loope
dec
icebp
adc
dec
jne
insl
xor
xor
jg
movsl
ljmp
push
sti
push
and
dec
cltd
pop
lret
cmpsb
cmpsl
and
lahf
lods
das
stc
cmp
cltd
jne
mov
cmp
mov
mov
mov
sub
jmp
mul
in
test
sub
dec
add
loop
sub
lods
mov
lock
sub
fcoml
mov
inc
in
out
lahf
test
mov
cmpsb
inc
fdivr
test
xchg
shrb
pop
stos
stos
movsl
addr16
sbb
mov
out
inc
faddl
cmc
insl
jp
xchg
jne
jecxz
cmp
sub
inc
pop
pop
repnz
test
mov
mov
xchg
sbb
add
test
pop
xchg
pop
idiv
repnz
jge
repz
cmp
ret
rolb
outsb
data16
fsubr
movb
shlb
pop
outsl
sahf
movsl
inc
sbb
inc
loop
les
push
loop
inc
pushf
ss
jne
cmp
scas
sub
jno
mov
repnz
lahf
and
add
imulb
jge
inc
call
arpl
push
mov
sub
mov
push
pop
aad
cmp
outsb
dec
cwtl
shufps
push
or
xchg
lahf
mov
sbb
pop
xor
dec
test
sbb
jecxz
fwait
stos
hlt
adc
fwait
shrl
mov
outsb
test
and
push
jecxz
pop
repnz
rclb
push
popf
daa
adc
mov
cmp
adc
push
pushf
sbb
sbb
inc
jecxz
roll
dec
nop
lret
test
xorb
mov
jae
pop
data16
jg
ss
ficomps
and
pop
mov
fidivl
es
stos
fisubrl
jbe
pop
clc
shl
hlt
add
push
test
pop
or
adc
scas
pmulhuw
dec
xor
shrl
sub
mov
in
xlat
push
test
or
add
inc
push
test
mov
cmp
out
leave
jge,pn
dec
lcall
lods
fsts
test
dec
mov
adc
dec
xchg
aas
loop
sbb
and
lea
dec
pop
dec
mov
in
pop
or
sbb
shlb
dec
pop
rcrl
mov
fstl
int3
lret
cmp
ljmp
fwait
pop
add
int3
inc
xchg
and
in
stc
into
fmull
and
mov
pop
sbb
popf
dec
adc
int
sub
push
lret
test
lds
adc
xchg
ljmp
mov
sub
mov
dec
sub
push
jle
loopne
movsl
data16
or
jle
or
jns
loop
in
cltd
push
sub
or
inc
mov
aam
sub
mov
xchg
aad
aad
jne
js
pop
adc
jg
out
inc
push
ja
inc
and
sti
sub
or
stos
dec
lds
cmp
xchg
push
sbbl
sbb
xor
outsb
mov
lea
lahf
jns
jg
lea
je
lret
push
stos
shl
or
xchg
cli
dec
push
addr16
iret
mov
push
cmp
int
rcrb
cltd
pop
adc
jnp
or
fs
mov
add
mov
mov
shlb
movsl
ret
lods
cmc
not
popa
rcrl
xor
and
mov
cld
lahf
fldl
movsb
mov
fnclex
pop
dec
adc
clc
mov
mov
adc
es
xchg
addr16
ss
mov
int
js
out
xor
add
jmp
or
int3
lea
add
adc
push
push
push
mov
dec
aas
adc
sub
gs
popf
out
int
in
mov
int
aad
scas
add
shrb
mov
xchg
ret
add
and
rcrl
enter
sub
loop
or
imul
cmp
xor
dec
outsl
mov
ljmp
sbb
jbe
pcmpeqw
and
cmp
fistpll
lds
sar
loop
adc
xor
mov
jmp
xchg
inc
imul
fisttpl
dec
mov
lds
std
inc
cmpb
js
or
data16
je
scas
push
mov
sub
fisubrs
stc
dec
xlat
adc
out
orb
pop
push
imul
pop
dec
movsl
lahf
jmp
cmpl
ds
cmc
shr
mov
inc
pop
xchg
data16
je
fsubp
ret
test
lcall
cmp
mov
imulb
inc
sub
int3
in
mov
lock
xlat
out
jge
xchg
push
mov
sub
xor
push
cmp
dec
sarb
sbb
dec
mov
dec
in
aam
dec
pop
rol
imul
loopne
cmp
lahf
add
push
rolb
loope
sarl
jge
gs
rolb
and
mov
adcl
inc
bound
fsubl
shlb
mov
cmpsb
notl
insl
sub
stos
pushf
and
ja
loopne
fwait
and
push
aam
pusha
ljmp
call
outsl
inc
mov
andb
sub
mov
js
imul
test
push
gs
ret
mov
inc
in
repz
sti
ja
jge
cmp
leave
pop
repz
sub
jo
mov
cmp
loop
xor
rcrl
iret
mov
push
popa
add
add
push
sti
adc
and
adc
jae
xor
mov
or
xchg
mov
rorl
and
dec
out
fs
push
mov
dec
adc
add
and
std
popa
ds
pop
adc
mov
xorb
xchg
adc
push
sub
lcall
mov
jne
cltd
loope
inc
fisubrs
mov
rol
aas
push
mov
or
push
sub
popa
and
ret
leave
icebp
jg
ja
orl
shrb
sub
in
adc
das
ja
inc
loopne
mov
jl
les
jge
push
scas
sahf
adc
mov
mov
inc
ss
add
jp
or
ja
mov
ret
jecxz
jnp
xchg
mov
lcall
pop
jo
hlt
jmp
mov
in
cld
pop
xchg
cmc
cld
push
in
cmp
outsl
xor
ret
movsl
sbb
pop
rorb
ljmp
repnz
xcrypt-ctr
cmpsl
fiaddl
jbe
sarb
push
mov
cmp
sti
ret
jmp
repnz
jnp
in
das
pop
ficomps
pushl
pop
sbb
pop
sub
xlat
pop
nop
mov
dec
xor
pushf
sub
jp
js
and
mov
daa
push
leave
cld
mov
adc
fistl
jg
sbbl
out
push
sarl
je
xchg
dec
bound
cmp
lcall
lock
dec
sbb
cmp
ret
test
mov
cmp
cli
out
mov
js
add
add
push
pop
ss
sub
inc
pop
lds
cmp
neg
cli
sub
movsb
int3
push
mov
cmp
pusha
aam
jmp
lahf
mov
fadds
jbe
mov
xor
stc
xchg
aas
jge
and
jg
push
sbb
sub
or
ljmp
push
div
ret
lret
pop
push
ja
les
into
sbb
andb
inc
scas
fisubrs
inc
lods
pop
fsubrl
fiaddl
cmp
fstp
sub
pop
cmpsl
sti
lcall
dec
mov
ret
jp
loopew
cmp
ret
test
inc
cmc
mov
nop
inc
lret
xchg
jno
inc
sub
cmc
jp
sub
xchg
out
mov
aam
ret
adc
jne
filds
sbb
pop
sub
push
add
cmp
sbbb
adc
sbb
scas
mulb
jbe
cld
pop
test
jae
jecxz
push
les
andb
pop
jecxz
fs
int3
fcoms
lods
cmp
inc
mov
iret
repnz
jae
or
inc
sbb
in
inc
fcoml
jnp
and
xchg
lret
shrb
jge
les
iret
push
push
sbb
mov
lods
outsb
hlt
mov
andl
lods
cmp
ret
mov
notl
mov
cmp
xlat
scas
xchg
popa
add
mov
loope
xchg
jmp
xchg
push
mov
ret
mov
enter
xor
std
cltd
mov
push
cmpsl
xchg
into
cmp
sub
imul
xchg
lods
mov
mov
stos
rclb
and
adc
sahf
xchg
fimuls
sub
fsincos
mov
or
push
push
stos
cmp
sbb
pop
adc
addr16
and
ja
mov
inc
or
and
sbb
jnp
pop
mov
sbb
sub
jbe,pt
ss
sub
sti
inc
jmp
push
dec
andb
inc
fimull
rcr
leave
lcall
cld
sbb
jecxz
pop
inc
popa
mov
fucom
fst
aam
sub
and
pop
aas
sbb
mov
sahf
addr16
je
pop
xor
mov
fstpl
mov
inc
push
cltd
add
or
jnp
cmp
lret
ret
aad
and
aad
push
outsl
mov
cld
sti
xchg
xchg
mov
lahf
push
jo
push
mov
xor
iret
sbb
jle
push
jge
mov
inc
mov
xorb
sub
xchg
out
test
add
mov
pop
fucomi
loop
leave
idivb
pop
fsubs
jmp
loopne
xchg
push
int
fmuls
mov
push
lods
data16
les
bound
xchg
out
push
xor
lret
xchg
rorl
das
data16
xor
and
push
adc
mov
sbb
xor
mov
and
iret
adc
fisubl
lods
push
lods
cltd
or
cmp
xchg
cld
gs
ds
jae
jnp
inc
mov
mov
jbe
mov
ficompl
rolb
pusha
pop
xchg
push
mov
sysexit
push
fnstsw
mov
xor
das
add
out
jl
and
aas
std
test
dec
xchg
pop
and
sbb
out
push
sti
jno
adc
mov
popa
mov
jge
and
lds
test
fnstsw
cld
popf
and
mov
or
adc
cmp
mov
inc
ret
add
mov
cmp
mov
out
pop
lea
scas
push
hlt
fildll
sub
cmp
push
arpl
daa
andl
out
movsb
sbb
or
mov
lret
enter
scas
out
push
inc
cmp
leave
mov
jbe
dec
pop
xlat
and
and
fs
lods
mov
jne
data16
adc
sbb
adc
cmp
or
jo
dec
dec
sub
out
xlat
xchg
push
lods
mov
stc
cmpsl
jmp
add
mov
or
pop
jnp
aaa
push
lock
sub
mov
jl
out
sub
or
rcr
enter
push
jle
mov
popa
or
mulb
xchg
pop
lahf
lods
cs
cmpsb
fnstenv
add
mov
add
outsl
notl
sub
sub
jns
adc
dec
and
inc
add
inc
dec
sbb
sbb
mov
enter
inc
mov
xor
shll
mov
add
inc
roll
add
mov
jge
in
imul
flds
jle
pop
out
push
sub
jae
cmpl
test
mov
inc
inc
sub
fldl
pop
add
push
cwtl
or
fisubs
inc
mov
leave
lret
and
lods
ja
cmp
jge
stc
in
cmpsb
or
jge
arpl
out
cmp
and
mov
loope
xchg
cmp
jge
mov
mov
jno
mov
hlt
popf
negb
mov
hlt
mov
fs
dec
in
mov
in
in
dec
outsb
cmp
cltd
sti
das
pop
jae
stos
dec
fs
out
imul
pop
rcl
xor
das
iret
fisubl
enter
mov
jg
cmpsl
je
and
lret
hlt
stc
adc
xchg
sub
xchg
xor
das
push
jle
jecxz
inc
inc
and
xchg
stc
inc
inc
clc
iret
jp
adc
mov
scas
repnz
sbb
and
in
or
xchg
stos
cwtl
push
dec
outsl
fstpt
jecxz
int3
sub
imul
popf
mov
adc
mov
or
xlat
movsb
adc
mov
pop
inc
jl
mov
add
stos
loop
enter
mov
daa
negb
mov
nop
stos
add
adc
push
cmp
outsl
mov
loope
das
dec
pop
gs
bound
or
stos
test
xchg
sub
fstps
xor
and
cmpsl
jnp
popa
dec
adc
xor
aas
xor
mov
mov
ret
or
dec
adc
xchg
sub
inc
hlt
dec
loopne
cmp
mov
xlat
sbb
outsb
mov
repz
enter
pop
aaa
xchg
out
pop
push
push
mov
enter
or
pop
hlt
add
mov
mov
mov
std
jecxz
repz
add
popa
into
ret
jecxz
jae
fldl
and
cmpsl
xchg
dec
sub
pop
shrl
xchg
inc
adc
jle
xor
mov
and
mov
fidivs
add
sbb
scas
dec
add
push
push
or
push
adc
sbb
cmp
in
repz
sbb
or
cltd
adc
stos
cmpsl
push
pop
std
mov
mov
test
int3
popf
sbb
mov
xchg
sub
inc
adc
sbbl
inc
xchg
mov
jnp
xchg
and
sbb
cmp
ret
jge,pn
andb
js
out
jae
jne
cltd
pushf
mov
mov
subl
add
xchg
pop
pop
cmc
loope
cmc
mov
mov
pop
jg
mov
movsl
nop
in
das
push
mov
or
imulb
test
xor
sbb
das
ljmp
movsl
stos
dec
lahf
test
lahf
and
test
hlt
push
imul
lret
jb
loope
movsb
mov
push
cmc
daa
pop
jnp
clc
pop
cmp
aas
icebp
and
adc
adc
test
adcb
and
mov
mov
xchg
adc
inc
std
stos
or
stc
aad
mov
add
jp
lea
sub
cld
sbb
incb
in
adc
inc
and
cld
mov
inc
lods
lea
push
cmpsb
out
inc
shrl
std
jmp
cltd
xchg
adc
push
roll
pop
jae
fidivrl
inc
cltd
lods
in
dec
icebp
or
scas
bound
adcb
mov
out
call
mov
roll
mov
test
inc
or
dec
outsl
sbb
xchg
jmp
dec
scas
and
pusha
les
sub
movsl
fdivrs
in
xchg
jns
fidivrl
jns
ret
pop
cmpsl
pop
pop
sbb
xorl
outsb
mov
les
ss
mov
cs
cmp
stos
addr16
out
sub
scas
je
jno
inc
mov
cli
movsb
shl
jl
jae
outsl
mov
outsb
scas
popa
arpl
fbstp
int
jnp,pt
pop
lret
mov
or
sbb
jmp
mov
mov
gs
mov
mov
je
lds
jo
in
xor
lds
stc
outsl
dec
jl
lcall
iret
pop
or
xchg
jne
inc
mov
out
mov
es
pmullw
jne
add
xchg
scas
shll
aas
dec
movsl
sub
sti
xchg
add
into
xor
cld
shll
hlt
push
test
aam
pop
inc
and
push
mov
push
pushl
pop
fdivrl
loop
push
or
pop
xchg
mov
mov
add
push
lea
lea
test
cmp
sbb
cmpsl
jbe
lods
and
jnp
pop
sub
or
dec
dec
xchg
mov
sub
out
mov
jno
pop
jns
ret
mov
inc
cmp
orb
bound
call
gs
and
fisttpll
adc
repnz
imul
ficoml
pop
adc
ret
xor
mov
push
xlat
jns,pn
add
ror
jl
jb
pop
aaa
push
sub
dec
ret
adc
clc
inc
xor
dec
scas
ja
xorl
mov
int3
xor
mov
xor
mul
push
and
xor
repnz
sahf
sub
pop
repz
or
inc
fistps
inc
push
pop
lret
int
push
negb
test
enter
shl
mov
mov
into
sbb
or
adc
cmpxchg
popa
addr16
je
imulb
sub
cltd
sbb
cmp
dec
cmp
push
lds
mov
bnd
out
jno
adcb
rcrb
xor
mov
xchg
xchg
je
test
jbe
xchg
inc
push
call
push
sub
cmpsb
push
jge
inc
push
xor
fwait
and
out
cli
ljmp
and
adc
ljmp
mov
cs
mov
pop
add
cmp
sub
jle
mov
mov
adc
xchg
push
dec
jp
dec
push
add
popf
std
inc
xchg
lea
fadd
stc
sub
fidivrl
loop
das
daa
xchg
and
cmc
and
popa
pop
push
cmpsb
mov
or
push
inc
negl
push
mov
push
mov
dec
out
or
mov
sbbl
popw
inc
lcall
dec
negb
nop
cmpsl
jae
ss
inc
push
rcrb
insb
daa
sub
cli
out
cld
push
jbe
mov
mov
sub
xchg
outsl
fiaddl
jo
cmp
ret
or
pop
rcrb
mov
stc
xorps
test
das
cld
lods
inc
out
movsl
repnz
test
movsl
mov
nop
jecxz
rcrb
mov
dec
push
mov
sub
popf
out
aaa
adc
fbstp
inc
mov
lock
mov
inc
scas
xlat
mov
or
cmp
sub
jl
sahf
mov
dec
sbb
outsb
cmpsb
jns
mov
mov
in
stos
shlb
adc
scas
push
mov
or
cli
incl
sub
repnz
sbbl
icebp
mov
adc
push
dec
int3
or
xor
stos
mov
push
xor
popa
ret
js
lcall
or
outsl
icebp
mov
inc
pusha
add
lahf
mov
xor
jl
leave
cmp
enter
xchg
lds
hlt
cmp
cltd
icebp
or
rclb
and
das
cmp
inc
mov
test
nop
stos
pop
lock
mov
roll
movsl
sbb
xor
and
inc
mov
push
bound
xor
mov
movsl
pop
mov
push
stc
mov
nop
mov
push
imul
push
scas
cmp
push
xor
test
in
mov
das
inc
int3
inc
data16
ret
loope
or
fsubrp
sub
rol
clc
ds
lock
jle
shlb
jne
lahf
lahf
and
xorl
sbb
xor
cli
push
sbb
sbb
repnz
inc
mov
std
test
adc
mov
fldt
fcomip
jp
sub
stc
pop
ficoml
sbb
sarb
push
pop
gs
repnz
and
pop
pop
cmp
or
push
cwtl
and
hlt
mov
out
lock
cltd
pusha
fldenv
lcall
jl
scas
push
jle
roll
scas
sbb
std
add
mov
mov
fsincos
push
cmpsl
ficompl
xchg
test
jno
arpl
cmp
pushf
sahf
je
mov
adc
addb
inc
pop
mov
adc
and
mov
lret
xchg
xlat
inc
lock
popa
mov
sbb
dec
dec
pop
or
pop
push
test
mov
mov
sbb
pop
mov
fsub
rcll
mov
mov
adc
xrelease
ss
push
mov
pop
mov
adc
cmp
or
mov
mull
sbb
sub
call
ficoml
pop
sbb
sub
pop
mov
sahf
insl
mov
push
decb
insl
sbb
cmp
and
mov
sub
out
mov
add
jb
popf
outsb
mov
xchg
push
pop
aas
lock
loop
mov
inc
and
fadd
or
sub
mov
imul
add
das
push
gs
es
fistpll
push
rcll
push
or
lds
repnz
pop
mov
mov
lcall
mov
cmp
xchg
or
mov
lds
push
jno
mov
mov
or
mov
icebp
fstl
adc
pop
sbbl
lret
cmc
push
sub
pop
iret
pusha
sarl
