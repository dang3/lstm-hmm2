aad
popa
mov
push
jle
leave
xor
lret
imul
cltd
xchg
mov
pop
neg
mov
aas
test
test
jg
inc
mov
aad
pop
les
outsl
stos
push
shrl
lds
mov
cwtl
jp
lret
sbbb
jl
fbstp
call
rol
dec
jnp
adc
test
mov
sarb
push
out
daa
push
inc
push
push
imul
adc
lds
lcall
push
sarb
sbb
stos
adc
sub
fisubs
inc
rcr
push
adc
xchg
lock
popa
mov
cmp
rcrb
add
mov
dec
pusha
jmp
cli
cwtl
lea
xchg
stos
sbb
mov
cwtl
cltd
inc
sub
dec
cmp
pop
ljmp
insb
test
xor
cld
icebp
cmc
push
cmp
sbb
fiaddl
cli
sub
add
aaa
andl
and
jno
mov
pop
push
inc
cmpsl
mov
and
jg
push
mov
iret
lods
xchg
in
fildl
push
ror
mov
jle
jl
test
lds
xchg
ds
push
sub
loopne
lret
lahf
pop
arpl
dec
loope
inc
pop
ret
arpl
call
test
ret
js
sbb
adcb
ds
pop
pop
enter
xchg
lret
xchg
sub
gs
pop
push
hlt
popf
fs
out
fadds
jns
rol
xor
cmp
adc
mov
xchg
lret
add
sahf
pop
out
mov
ds
xchg
mov
or
mov
mov
xor
lea
ret
loope
mov
js
aas
and
out
divb
push
adc
out
pushl
cmpsb
arpl
mov
mov
ret
push
pushf
mov
jecxz
jle
lock
sarb
ret
jbe
fistl
cmc
mov
mov
mov
xchg
arpl
push
sub
sbb
in
fcompl
sbb
clc
ds
test
dec
xor
dec
inc
lahf
sbb
scas
or
ljmp
dec
aam
push
inc
mov
sbb
les
lea
jl
jmp
add
imul
mov
sub
ret
mov
mull
push
add
out
sub
bound
or
lock
mov
outsb
cmpsb
je
inc
xchg
popf
mov
popf
cmp
into
mov
movsl
inc
lds
inc
cmpsb
in
mov
call
fldl
sahf
push
jno
sbb
leave
sti
mov
and
xchg
aad
out
outsb
testb
outsb
inc
ficomps
lea
test
ja
addb
mov
or
push
xor
fistpll
sbb
loope
xchg
pminub
mov
cwtl
cli
loop
bound
fistps
mov
mov
mov
push
mov
cmp
xchg
outsl
ljmp
mov
imul
js
push
dec
pushf
or
loop
sub
pusha
fucomip
cmp
inc
enter
les
test
push
test
pop
in
scas
lret
cli
mov
cli
popf
push
xchg
adc
lods
push
mov
cld
stc
mov
push
les
sub
sub
aaa
test
daa
pop
stos
jno
and
test
push
repz
sub
fildl
add
mov
sahf
arpl
push
arpl
lahf
mov
loop
je
js
jle
popf
daa
sti
loope
shl
inc
idivb
jecxz
lret
mov
aam
in
stos
sbb
push
sub
push
rcl
movsl
sub
aam
sti
shrl
mov
jecxz
cli
mov
push
negl
push
push
js
or
jle
es
xor
jp
add
shll
cmp
scas
mov
pop
repnz
int
pop
pushf
test
add
add
jge
or
ja
cmp
push
sahf
popf
shll
inc
pop
aam
call
vshufps
out
push
add
insl
in
js
sbb
fs
jl
add
cmpsl
loop
push
andb
fidivrs
sub
sub
bound
xor
iret
mov
mov
sbb
rorl
das
push
pusha
pop
cmp
mov
pop
aas
sbb
sbb
sbb
sahf
inc
fnstenv
test
adc
lahf
xor
aaa
mov
inc
hlt
mov
pop
pop
xchg
xchg
jno
arpl
shlb
inc
ret
add
hlt
sub
cli
ret
inc
movsl
mov
ja
cli
push
pop
xor
pop
repnz
loopne
ret
lds
or
shrl
lret
dec
int3
js
sub
cmp
stos
mov
mov
sbb
xchg
mov
cmp
xlat
lcall
gs
lods
sar
out
cs
push
push
lea
push
push
xchg
pop
add
test
sti
insl
sbb
out
loopne
push
imul
test
leave
pop
push
cmc
push
bound
rep
sti
jne
add
xorl
jno
jne
dec
mov
xchg
ror
data16
sbb
es
movsb
scas
lods
sbb
int
mov
addr16
jge
loopne
sar
sub
mov
mov
sub
pop
bound
fcomps
test
mov
jecxz
les
lcall
cmpsl
je
mov
cld
sbb
ss
nop
sbb
xchg
mov
jb
loopne
mov
mov
push
jecxz
mov
sbb
cmp
icebp
push
and
adc
or
int3
push
icebp
xchg
data16
cld
mov
adc
ret
dec
ljmp
inc
js
orb
ficompl
push
jo
test
push
add
lahf
jecxz
mov
mov
cmp
pop
dec
in
mov
test
scas
mov
movsl
push
popf
push
dec
adc
jmp
pop
add
mov
hlt
data16
popf
jb
rcrl
push
ss
and
into
add
jl
inc
inc
xor
mov
add
xor
test
daa
and
sbb
movsl
sbb
test
dec
fistpll
aad
jne
daa
gs
adc
int3
fdivl
cmp
cmp
leave
jae
and
lock
scas
bound
pop
mov
inc
sbb
xchg
sbb
xchg
lcall
sbb
push
pop
mov
cli
mov
stos
clc
frstor
and
enter
and
es
lods
stos
lahf
adc
enter
js
mov
jl
sbb
add
insl
sub
mov
or
xor
cwtl
cmp
xchg
rcr
or
push
ss
jmp
jae
arpl
jno
out
cmpsl
cli
push
sub
sti
imul
inc
and
jg
out
and
test
sub
mov
and
pop
xor
lret
add
lods
jecxz
mulb
es
adc
cmp
xor
push
fmuls
stos
fstl
test
xchg
push
fst
adc
mov
jl
jp
mov
and
mov
ret
dec
push
jmp
gs
ret
jle
add
sti
mov
es
es
ljmp
add
push
pop
ret
and
xchg
fs
lods
mov
cmp
sub
xor
lods
lods
lods
outsb
call
loop
btr
cmp
sbb
mov
or
or
outsb
test
in
test
mov
or
ds
add
inc
xchg
and
add
adc
negl
test
ds
lret
and
pop
callw
mov
out
sub
mov
ds
js
jl
pop
aas
jl
cltd
je
inc
lods
movsl
rcl
inc
mov
ficoml
dec
hlt
lods
fdivs
sub
out
inc
jmp
insl
mov
xor
sub
gs
mov
movsl
mov
adc
add
clc
add
xlat
mov
inc
fidivrl
mov
js
push
inc
xchg
popl
out
movb
sarl
mov
cltd
push
lds
enter
ss
sbb
loopne
cmp
outsb
xchg
cltd
sub
loope
inc
jle
fucomp
cmpb
inc
fistpll
das
out
add
xchg
push
out
push
jmp
push
xchg
dec
jecxz
and
xchg
outsl
lret
sub
in
test
xor
fimuls
pushf
xchg
in
ljmp
xor
sub
sub
orl
ret
or
dec
jb
push
inc
mov
adcb
cmp
xchg
or
out
mov
outsb
mov
stc
jb
push
mov
aas
xchg
push
lret
aas
sarl
add
and
jmp
jle
dec
std
adc
dec
cmp
and
aas
push
stc
jo
xor
pushf
fnstcw
loop
sahf
fidivs
cli
lds
xchg
push
js
cmp
aas
jmp
ficomps
insl
jmp
out
leave
push
fsubrl
sbb
int
sbb
pop
pop
pop
test
seto
jnp
add
sbb
ljmp
lds
sub
ret
mov
pop
jp
mov
ret
fiadds
sti
loopne
push
dec
lcall
shrl
fistpll
subl
out
clc
inc
daa
lret
loopne
or
xor
and
sub
hlt
add
cmp
cwtl
sbb
into
add
dec
mov
cmpl
rolb
rcpps
xchg
jecxz
test
pop
outsb
jmp
std
faddl
push
add
add
ret
push
in
int
and
xchg
sbb
and
pop
add
pushl
jmp
fs
nop
mov
pushf
or
push
movl
fbstp
dec
dec
jle
js
inc
add
mov
sub
cmpsb
push
and
mov
xchg
out
sub
sub
pop
aam
out
js
inc
xor
pop
cmovnp
xor
ds
and
pop
or
inc
or
dec
fisttpl
xor
test
adc
repnz
movsl
inc
ficoms
scas
pop
out
fidivrs
int
pop
jge
sbb
push
ficoms
mov
into
adc
jb
test
leave
arpl
bound
inc
in
rorb
push
mov
adc
rol
fmull
ljmp
cltd
je
inc
inc
fsubl
sahf
repz
adc
xchg
and
lock
dec
test
or
rorl
popa
sti
fmuls
sub
inc
mov
out
and
pcmpeqd
dec
jecxz
mov
push
add
imull
repz
sbb
jbe
clc
dec
das
cmp
mov
or
and
mov
inc
xchg
test
ret
lea
pop
adc
inc
test
daa
or
fists
xchg
sbb
pop
fwait
inc
fstpt
outsl
inc
lock
mov
add
xchg
dec
test
push
in
outsb
cmp
cmpsb
mov
scas
and
insl
insl
les
dec
sub
aaa
add
out
lret
jbe
ffree
and
int
lcall
sbb
mov
imul
xchg
nop
mov
notb
cmp
insb
ljmp
adc
xchg
fcmovb
lea
push
cmc
jecxz
push
fdivr
cmpsb
imul
cwtl
ljmp
push
mov
mov
push
sub
jb
ljmp
aad
cmp
out
addb
pop
dec
incb
inc
cmpsb
or
jnp
inc
sarb
add
inc
push
aad
or
les
push
push
lahf
pop
jbe
pop
sbb
stos
cmp
add
adc
stos
pusha
scas
test
adc
fisubrl
popa
pop
inc
jg
jns
jb
fwait
das
or
negb
xchg
mov
push
xchg
sbb
sub
xchg
sbb
push
cmp
mov
out
mov
push
pop
and
pop
mov
cmp
mov
packsswb
jle
xor
sti
les
das
mov
mov
sbb
sbb
jmp
andl
das
and
mov
int3
add
shlb
cmp
dec
mov
cld
stc
mov
es
xlat
je
jbe
cmp
test
inc
push
loop
pusha
and
out
mov
mov
add
pop
loope
dec
loop
imull
ret
daa
stos
repz
lcall
fwait
adc
dec
ret
pop
test
and
int3
inc
xchg
xchg
sub
mov
mov
jbe
ret
hlt
jle
xor
scas
rorb
test
pop
jecxz
jle
sub
jbe
push
xor
sbb
mov
outsb
daa
lret
or
jp
cmpb
f2xm1
jp
push
adc
jge
lods
xor
add
lea
inc
sbb
scas
add
pop
cmp
movsl
push
sahf
add
xchg
mov
mov
idivb
insl
or
sbb
icebp
pop
dec
std
jmp
cmpsb
cmpsl
xchg
push
outsl
dec
push
xchg
jbe
sbb
add
inc
pop
xchg
push
movd
loop
cltd
jmp
lcall
xchg
popa
addr16
or
cmp
pusha
dec
bound
daa
stos
inc
jg
jns
scas
pop
test
jg
xchg
test
or
and
jp
out
pop
xor
cmp
pop
cltd
inc
push
std
sub
inc
dec
aaa
cmp
mov
dec
mov
jb
int3
movsl
leave
mov
cli
sahf
mov
and
jecxz
mov
dec
and
scas
movsl
add
pushf
cld
insb
adc
mov
pushf
les
popa
cmp
add
fwait
lret
jmp
lods
ret
popf
enter
nop
inc
mov
push
aad
mov
mov
dec
in
lds
fs
push
in
lock
lret
fs
dec
and
or
pop
daa
ds
xchg
sbb
les
mov
xchg
inc
scas
jmp
pop
and
cmp
inc
mov
pop
daa
dec
or
cwtl
movsb
pop
insl
mov
lcall
fwait
loopne
sbb
xchg
rorl
jl
in
incl
xor
sub
ficoms
push
and
imul
xchg
popf
and
stos
nop
mov
lock
or
ljmp
jl
push
jecxz
rolb
addr16
sbb
xor
fistps
jge
dec
mov
mov
mov
icebp
mov
aaa
test
xchg
fsubrs
and
lock
js
xor
stc
xor
movsl
mov
mov
hlt
in
test
sbb
test
aas
mov
cmp
iret
cmp
icebp
mov
inc
and
inc
inc
adc
stos
or
cmp
mov
cli
out
ret
stos
add
or
aad
jecxz
mov
lds
movsb
mov
ljmp
pmaddwd
pop
out
push
test
adc
sbb
cld
push
mov
or
jnp
mov
stos
cmpsb
pop
rcrl
test
mov
pop
in
xor
outsl
sbb
popa
iret
cltd
btr
add
pop
enter
pop
push
inc
lds
pushf
mov
jmp
loop
pop
stos
int
lahf
fnstcw
inc
int3
outsl
xchg
mov
inc
int3
mov
cmpsb
or
cmp
jl
sub
popf
into
mov
dec
sub
sbb
sbb
in
mov
ss
aas
push
call
or
loopne
add
mov
add
push
imull
loopne
or
lret
xchg
ret
insl
popf
xchg
nop
xor
mov
add
hlt
and
dec
lcall
gs
fwait
push
loope
push
inc
lahf
mov
in
push
in
mov
repz
decl
cmp
lds
cmpsl
dec
int3
loop
lds
sbb
jmp
jns
jbe
daa
add
out
sub
es
sahf
push
dec
mov
add
bound
mov
mov
cmc
scas
cwtl
arpl
mov
pop
cmp
cli
xor
mov
dec
and
mov
sbb
dec
dec
push
jl
mov
sbb
jno
xlat
push
xor
out
roll
daa
adc
jb
or
fld
xchg
sub
jo
pop
jl
test
cmpsb
sbb
push
stos
aam
into
lret
lea
out
dec
cli
push
pop
jbe
aad
xor
lcall
ja
js
out
cmp
push
hlt
fisttpl
push
call
fistl
fisubl
add
ljmp
ret
sub
push
ljmp
pop
rcrl
imul
and
inc
out
jmp
xor
dec
mov
inc
lds
adc
fucomp
icebp
test
push
sub
or
loop
and
sub
xchg
arpl
daa
popa
sbbl
dec
sarb
adc
push
dec
mov
and
jecxz
enter
mov
ss
add
lods
movsl
fdivl
and
dec
testb
add
cmpsb
repnz
mov
sahf
or
dec
int
aam
movsl
loopne
push
mov
lret
call
sub
push
ljmp
jmp
daa
fwait
sub
fldl
movsb
pop
stc
test
fnstcw
cs
cmp
insl
jl
mov
mov
cmpsb
movsl
loope
adc
inc
mov
adc
sub
shl
test
push
xor
push
sbb
fs
stos
pop
rorb
mov
or
xchg
cmpsl
popf
rcll
jl
stos
leave
push
gs
aas
rcrb
cld
fnstcw
push
mov
pop
test
jae
cmp
in
dec
pop
aam
jp
jb
xlat
imul
lock
pop
xchg
hlt
mov
repz
adc
dec
lahf
into
xor
inc
jg
rorl
pushf
mov
cltd
ss
cld
fidivs
pop
xor
xchg
sub
jecxz
dec
dec
inc
cld
mov
out
push
or
sbb
add
push
mov
sahf
sbb
add
testb
addr16
outsb
pop
jp
jle
shll
mov
xchg
cmp
ljmp
cmpsb
xchg
jecxz
jp
rcll
cltd
jl
stc
insb
pop
pop
mov
add
sbb
dec
dec
or
and
jbe
xchg
xor
mov
sbb
inc
addl
cmp
rolb
dec
push
test
lcall
inc
push
jo
movsl
mov
cmp
sbb
fiadds
dec
fwait
jge
movsl
enter
or
sahf
loop
pop
idiv
inc
jo
dec
cltd
push
icebp
xchg
push
aas
dec
push
lret
lret
inc
inc
out
xchg
sbb
lds
test
test
inc
test
and
cmp
dec
mov
mov
ljmp
in
push
and
out
push
dec
popf
pushf
cmpb
mov
mov
push
add
mov
in
xchg
jle
rol
and
sarb
push
inc
xor
js
ss
roll
fwait
mov
jmp
test
std
int
push
scas
lods
mov
dec
cmpsb
cwtl
inc
stos
cmp
sarb
lcall
popf
sahf
jl
mov
and
hlt
or
pop
xchg
cmp
push
mov
mov
or
movsl
mov
dec
mov
cmp
mov
ret
mov
lds
dec
js
imul
gs
fidivl
aam
xchg
adc
sbb
sub
xor
and
leave
push
sub
adc
inc
mov
sub
mov
jnp
out
aam
pop
gs
orb
add
mov
sub
insb
pushf
daa
jmp
xchg
sbb
fiaddl
cwtl
inc
pop
push
int3
aam
and
ret
fdivrp
daa
leave
enter
call
xor
add
dec
sbb
testl
insl
cltd
aas
insb
cmp
jecxz
cmc
xor
iret
in
push
pop
dec
cltd
fistpl
stc
pop
lret
inc
mov
sarl
mov
scas
loope
repz
or
pop
sar
stc
data16
xor
xchg
xchg
test
ret
stos
sti
adc
jnp
lds
sub
sbb
mov
push
and
jno
sub
jae
sahf
jbe
lea
aas
inc
dec
add
fsubrp
sub
dec
inc
imul
sti
fstpt
lea
insl
mov
inc
mov
out
testl
lret
cmp
and
cld
out
pop
subl
inc
lds
push
add
dec
in
dec
ljmp
adc
mov
fdivrl
cmpsb
mov
mov
arpl
faddl
lcall
xchg
test
jb
add
dec
das
sbb
pop
inc
pop
jns,pn
mov
loop
fmul
push
push
sub
sbb
punpckldq
aad
xor
clc
cmpsb
out
into
mov
push
aad
mov
push
dec
sbb
xchg
ljmp
mov
xor
cmp
sub
loope
mov
xchg
cmp
out
and
xor
jns
jg
shrl
sbb
sub
fistps
andb
lcall
adc
push
lcall
and
stc
aaa
adc
add
sbb
jle
lcall
pop
sbb
neg
pop
iret
popf
push
mov
js
cmp
mov
les
inc
popa
arpl
cmpsb
shl
out
jp
aas
fwait
loopne
add
xchg
iret
pop
or
outsl
mov
push
jnp
dec
ja
vmovlps
cmp
int3
mov
xcrypt-ctr
cmpsl
sbb
push
in
add
jl
jge
cli
out
add
cli
jne
push
scas
je
and
pushf
jmp
lock
aas
les
ret
test
or
sbb
jo
or
pop
fsts
mov
dec
stos
arpl
push
xor
in
movsl
cmpsb
mov
call
mov
pop
push
xchg
fwait
xor
pop
sub
or
cwtl
icebp
pop
lahf
js
push
cmpsb
in
push
push
dec
push
loopne
loope
xchg
fs
sub
roll
xor
adc
movsl
pop
cmpsb
lods
cmp
or
popa
cmpsb
push
mov
inc
lcall
xchg
lea
jge,pt
ret
add
mov
pushf
cli
shr
popa
inc
lods
imul
loopw
out
into
stos
adc
scas
dec
fwait
pop
push
mov
fisubs
nop
jne
cli
scas
popf
mov
rcrb
mov
cmpsb
jmp
lods
mov
loop
push
add
or
out
lret
insl
test
fnsave
inc
inc
jns
ds
push
movb
mov
repnz
push
repnz
sbb
adc
lock
outsb
jb
add
ret
shll
shlb
bound
sbb
in
push
fwait
aad
and
jne
cmp
xchg
and
and
pop
jle
sahf
rclb
push
push
cwtl
mov
out
xlat
jno
es
or
sub
test
xchg
sub
lahf
cli
int3
leave
add
jne
dec
sub
dec
inc
xchg
dec
sub
inc
push
dec
sahf
mov
out
bnd
jns
pop
in
cmp
xchg
das
cltd
dec
xchg
dec
xchg
push
jno
inc
rcl
arpl
and
pop
dec
or
int
cltd
xchg
mov
mov
pmaddwd
inc
jecxz
xor
dec
daa
lods
and
stos
push
fsub
into
ret
loopne
cltd
call
fldenv
push
outsb
rsm
loopne
xor
and
enter
imul
dec
inc
cwtl
addl
cmp
fldt
add
fwait
pop
sbb
jle
out
mov
inc
mov
cld
jo
adc
mov
push
test
lret
cmpsb
sarb
lea
outsb
jp
movsl
and
xorb
popf
mov
into
inc
fldl
int3
mov
inc
ds
add
shr
xor
xor
in
orb
xchg
or
lock
pop
jb
add
ljmp
dec
or
div
cmp
and
lds
insb
ds
incb
dec
out
popa
sub
dec
mov
mov
je
cmpsl
push
mov
pop
mov
out
pop
jnp
loop
xor
idivl
add
mov
imul
imul
and
movb
pop
cmp
or
cld
sbb
sub
test
xor
mov
xor
jge
cmpsb
sbb
pusha
sub
in
data16
hlt
insb
stc
mov
cmp
ljmp
lcall
test
arpl
cwtl
pop
or
hlt
sub
movsb
push
add
jb
out
jmp
jle
lea
fwait
sbb
cld
jb
xor
stos
cmp
jg
lds
pop
push
cmp
stos
fdivrs
cmpsl
adc
mov
ja
loopne
fists
xlat
dec
sahf
jmp
xchg
xchg
push
fldl
or
insl
push
aam
dec
fistps
test
mov
mov
dec
shrl
test
xor
into
cmp
xchg
xor
add
test
mov
popa
ja
jae
cmpsb
test
lods
inc
push
std
dec
ljmp
ss
stos
xchg
js
add
inc
cmp
add
and
bound
pop
sbb
cmp
or
sbb
push
movl
in
imul
mov
fs
fs
dec
mov
stos
pop
cwtl
push
dec
add
call
sbb
mov
jno
rolb
std
and
cmp
inc
je
xchg
sub
sub
in
mov
fiaddl
test
jge
fidivl
dec
mov
lea
rcll
jmp
out
popf
cmp
xchg
hlt
mov
shrb
inc
in
jg
popf
sub
adc
daa
rclb
repnz
dec
inc
and
imul
lret
decb
dec
push
inc
nop
rcll
dec
pop
fs
clc
and
ror
fdivs
das
push
mov
push
pop
gs
repz
ljmp
jp
imul
pop
insl
outsl
mov
pushf
or
pop
jns
mov
filds
add
or
mov
in
pop
std
cmpsb
lds
mov
bts
xor
push
test
sub
shlb
sti
imul
js
xor
cmp
inc
nop
sbb
inc
fcoms
stos
push
shld
fdivs
loop
or
pop
in
movsb
insl
jle
mov
ja
fnstcw
cmp
mov
adc
xchg
and
mov
pop
mov
xchg
pusha
cmp
push
jne
push
cs
push
test
out
movsl
mov
outsb
repnz
mov
cli
negl
jmp
lret
shlb
mov
arpl
enter
mov
sbb
repnz
stos
mov
mov
data16
sahf
mov
ficompl
sbb
cmpsb
test
ret
daa
jo
push
cld
cmp
inc
xchg
sub
jl
movsb
fidivl
shl
shrl
or
lods
jmp
jne
dec
cmp
ret
add
popf
popf
mov
lahf
jg
lcall
adc
shl
arpl
out
jmp
add
test
and
xchg
nop
xor
or
popa
adc
pop
jns
es
pop
test
mov
gs
movsl
dec
aaa
in
fldt
adc
ljmp
and
dec
rcll
insl
sub
lcall
daa
call
add
loop
add
mov
add
add
mov
cmpsl
fstp
inc
push
mov
test
stos
fcompl
out
jle
push
dec
cmp
and
scas
inc
mov
inc
inc
sbb
mov
stos
cmpsb
outsl
lcall
gs
cmpsb
and
cmpsb
pop
xor
dec
add
mov
pop
xchg
push
mov
push
popf
icebp
test
int
jmp
mov
pop
add
addr16
sbb
sahf
les
pop
js
imul
idivl
lahf
inc
mov
fmull
mov
inc
lcall
inc
filds
sub
jge
pop
jl
test
out
mov
incl
int3
inc
push
or
adc
cmp
das
jo
or
add
jne
rorl
pop
sbb
or
pminsw
mov
es
xchg
aaa
ret
push
movsl
sub
add
loop
push
movsb
out
es
inc
jae
push
sub
jno
sub
sub
in
sub
loop
add
mov
cli
sub
mov
ss
push
stos
pop
aas
add
jp
jbe
xchg
loopne,pt
jbe
mov
in
or
sti
inc
addr16
daa
jb
cwtl
mov
push
dec
sub
lret
inc
inc
ss
dec
sub
xchg
lret
inc
push
mov
jmp
aas
cwtl
cmp
cli
mov
xor
xor
movsb
repz
loope
insl
fs
sahf
cwtl
xor
cli
stos
repnz
sub
mov
lds
jno
jae
test
nop
adc
fistpll
cli
stc
xor
in
call
ret
stos
add
fsubs
sub
test
dec
daa
inc
push
fldl
lret
and
sbb
mov
xchg
adc
jmp
sbb
out
xchg
sbb
rcr
cmc
inc
fldl
xchg
mov
dec
cmovb
jno
mov
out
xor
xchg
mov
push
xchg
lahf
mov
sub
fidivl
push
sbb
jl
pop
pushf
jno
shlb
fwait
dec
add
in
jmp
sarb
xor
dec
std
pop
ss
in
push
stos
mov
xchg
cmpsb
test
inc
ds
je
aad
push
push
xchg
aad
les
jns
dec
in
jmp
mov
aas
xor
dec
lds
xor
fidivrl
adc
push
aam
jl
adc
dec
daa
mov
scas
out
pushf
mov
cmpsl
and
xor
insl
sbb
mov
adc
pop
call
pop
jne
fnsave
mov
gs
fsts
pop
dec
mov
jl
ds
ret
shll
leave
int
aaa
fadds
sub
sbb
dec
mov
dec
lcall
outsb
insb
enter
scas
and
fdivl
popa
sbb
sbbb
dec
loope
out
ss
ficoms
cmp
lret
jmp
mov
jbe
mov
int3
arpl
xor
and
cs
sub
lahf
aad
add
mov
adcb
mov
push
or
jnp
outsb
sub
cmpsl
adc
add
and
loop
mov
dec
scas
inc
push
out
pushf
sbb
or
mov
dec
sahf
push
fwait
rcr
data16
pushf
sbb
inc
inc
fnstsw
sub
test
out
jbe
jmp
pushf
clc
ret
scas
ja
push
mov
lcall
ret
rcrb
and
mov
fdivrl
ret
sahf
test
test
ret
xchg
movsl
xchg
pop
in
pop
cmp
pop
pop
arpl
adc
add
les
aas
fisttpll
or
adc
mov
inc
cmp
xor
mov
and
mov
lods
sbb
jmp
fbld
jnp
pop
inc
adc
pop
sbb
testb
inc
ret
or
ljmp
pusha
adc
cmp
or
jns
xchg
xor
clc
rcrl
in
fcompl
cmpb
js
ret
popf
cwtl
sbb
daa
es
ret
mov
pop
mov
cmp
arpl
mov
aas
xchg
xchg
cwtl
push
ret
inc
loope
pop
push
sub
adc
ret
gs
push
fisubrs
xchg
iret
add
add
fdivp
and
jle
or
dec
xor
pop
cmpsl
cmp
bnd
sub
sahf
cmp
lock
fdivrl
fiaddl
inc
lods
int
pop
cmpsb
ds
inc
and
inc
xchg
lods
add
jno
dec
pop
sub
and
dec
and
icebp
adc
xor
xor
push
mov
stc
in
and
adc
cmp
shrb
pop
out
std
jno
and
jg
data16
jbe
xchg
lods
popa
jle
sti
mov
fidivl
rcll
shrl
mov
jle
arpl
push
aad
or
pop
cmp
imul
xchg
pushl
xor
xchg
les
sub
testb
imul
std
dec
pop
lods
pop
fnstenv
scas
mov
sti
mov
vmovsldup
push
mov
mov
xor
and
sub
shr
xor
movaps
loop
xor
add
fcoms
jge
scas
push
fcomps
adc
repz
and
cmpsb
test
xor
out
lahf
mov
mov
pop
rcr
cli
cmpsb
daa
xchg
xor
fwait
out
lcall
adc
mov
clc
ljmp
rclb
cmp
push
gs
xchg
cs
ficoms
in
cmc
mov
lret
aas
jno
punpcklwd
xlat
mov
pop
mov
lret
sarl
or
xchg
cvtps2pd
mov
in
xchg
fsubrl
mov
scas
cwtl
aas
imul
adc
jns
sbb
xchg
mov
fbld
cltd
inc
and
into
aas
sub
jnp
out
ret
in
daa
dec
inc
ret
out
add
adc
mov
or
cmp
xor
sbb
jp
pop
mov
pop
or
mov
cmpsl
sub
push
movsb
push
mov
dec
fwait
jl
int
xchg
xor
dec
sbb
ss
mov
cmpsb
dec
mov
dec
ds
pop
dec
xchg
negb
pop
pop
aad
mov
cmpsb
push
pop
jmp
fstpt
clc
or
mov
ds
pop
dec
std
adc
outsb
shr
xchg
and
mov
xchg
push
nop
fistpll
lret
nop
cmp
mov
daa
enter
or
inc
mov
mov
lahf
dec
test
cmp
lods
sbbb
mov
pop
adc
loopne
sahf
subb
loop
dec
in
test
dec
icebp
cltd
mov
cltd
ja
mov
sub
mov
cld
mov
rcll
into
dec
ds
nop
push
inc
jns
fwait
aas
add
cwtl
ds
repz
in
or
daa
inc
sub
test
pop
sub
xor
jge
mov
inc
push
pop
cwtl
adc
je
push
cmp
mov
xor
enter
mov
cmpsb
pop
add
xchg
stos
inc
adc
daa
nop
scas
mov
jno
jmp
test
stos
jecxz
mov
add
jl
mov
shll
addr16
sahf
dec
xor
push
data16
push
das
shll
scas
loope
jle
mov
sbb
ds
xchg
leave
movsl
inc
jl
or
cmp
lret
stc
add
ret
cmc
subb
lcall
lds
dec
pop
jne
jp
inc
into
jg
movb
rorl
loop
test
in
out
stos
lods
arpl
push
mov
mov
scas
inc
ljmp
dec
decl
test
dec
pushw
or
shll
test
sub
jp
xchg
scas
mov
fs
test
fs
xor
xchg
cmpsl
inc
scas
jg
jp
push
pushf
mov
repnz
lea
mov
orl
and
int
inc
mov
mov
or
sub
pop
mov
aad
dec
movl
add
scas
push
push
adc
jnp
ja
dec
push
jp
orb
hlt
fists
insl
pop
aam
mov
mov
int
sub
adc
or
test
mov
jmp
add
shll
cs
xor
lret
mov
jl
scas
sub
pop
xchg
mov
outsb
ja
add
aam
lds
daa
int3
ljmp
pop
sahf
jno
add
jns
pop
mov
in
and
jle
sbb
rcrl
inc
pop
dec
sbb
shll
mov
std
adc
addb
cmp
cwtl
mov
dec
repnz
data16
dec
repnz
data16
dec
pop
aas
sub
aam
dec
hlt
in
subb
ret
aas
cs
testb
cwtl
inc
mov
mov
and
push
or
push
cmp
rclb
inc
fidivrs
xor
cmp
js
xor
ret
pop
out
xchg
imul
cmpsl
adc
inc
insb
add
cmp
jp
ja
scas
xor
insl
outsl
xor
mov
lcall
push
push
mov
loopne
push
out
inc
clc
pop
pop
sub
test
push
mov
fwait
je
xchg
adc
or
in
pusha
loope
aaa
mov
adc
cmc
jp
mov
pop
lret
dec
push
jge
popf
aam
cmp
cmpsb
pop
in
xor
pop
lcall
aaa
cmp
cltd
jmp
scas
xor
pop
push
cmp
mov
cwtl
test
sbb
inc
xchg
aam
push
cs
xor
mov
pop
cmp
cmp
lret
xchg
arpl
dec
inc
scas
rcrl
pop
in
add
testb
inc
dec
lods
inc
adc
ja
dec
lea
xchg
je
push
sub
add
sbb
cmc
movsb
pop
sbbb
xchg
mov
das
pop
jp
mov
ret
fiadds
xor
out
pop
popf
mov
or
pushf
js
ja
pop
mov
jp
mov
lods
dec
rorb
jge
xchg
jp
fadds
pusha
sbb
enter
loope
sahf
in
pop
mull
cmpsb
test
repz
jl
lods
pop
xchg
fsubl
fwait
xor
cmp
ds
fwait
cli
push
daa
pushl
faddl
mov
std
fsubs
adc
aam
repnz
test
out
stos
xor
icebp
lret
inc
stos
orl
push
lods
sub
mov
push
xchg
push
inc
add
adc
loop
push
ljmp
addl
adc
sub
ss
cmc
jbe
fisttpl
lea
adc
xchg
and
sbbl
bound
and
movsb
sub
jecxz
repnz
mov
xchg
and
cmp
pop
stc
mov
and
pop
ds
inc
sbb
int
sub
icebp
mov
inc
xor
stos
repz
sbb
add
adc
or
pushf
mov
ficompl
cmp
ficomps
cmp
cmpsl
jns
loop
lret
fcoml
cmpsl
jns
jmp
incl
test
cld
sub
inc
sbbl
sub
pop
sbb
mov
cmpsb
mov
jp
mov
cmpsb
pop
loope
ds
sbb
outsb
mov
repz
pop
fs
mov
sbb
cmp
xchg
loope
inc
out
xchg
ds
divb
xchg
and
ret
sbb
out
jae
in
sahf
sbb
xchg
fmull
xchg
into
hlt
bound
and
xor
mov
xchg
sbb
mov
std
pop
cmp
dec
or
or
mov
std
inc
adc
and
loope
fldl
pop
mov
jns
pop
cltd
adc
inc
ret
push
or
xchg
and
and
test
xor
pop
repnz
pop
mov
cwtl
cmp
lds
sub
test
idivb
imul
iret
push
stos
test
leave
sub
xor
cli
push
es
ret
add
mov
sahf
and
mov
adc
add
push
test
stos
pop
stos
xor
xor
out
mov
mov
inc
popf
cmp
mov
divb
lods
gs
pusha
movq
sub
iret
movsl
fnstcw
fmull
pop
int
in
mov
dec
dec
sbb
jbe
ret
mov
xchg
jns
push
or
outsl
jge
test
push
push
addb
cltd
lret
sahf
xlat
popa
push
cmovbe
xchg
aad
dec
aas
aas
mulb
popf
cmp
fbld
xorl
aas
pop
pop
lcall
sub
movsb
xor
lods
xor
xchg
inc
cmp
arpl
scas
mov
adc
and
ret
dec
scas
inc
jbe
aam
mov
pop
cmpsl
mov
cmp
movsl
mov
popa
cmp
shll
mov
mov
fsubs
xchg
mov
insb
dec
lcall
push
xchg
xchg
jbe
les
adc
adc
add
jnp
leave
push
and
test
push
leave
mov
cmp
fwait
out
or
mov
aas
orl
int
push
test
cmc
mov
cmp
es
mov
xchg
inc
pop
fistl
movsl
sahf
jge
in
jns
cli
add
stc
sahf
dec
lods
loopne
mov
popa
dec
cli
jmp
sub
lock
cmp
push
sbbl
and
pushf
lahf
mov
loop
and
les
std
mov
xchg
inc
sub
fildl
mov
and
push
xchg
ds
mov
cmpb
sahf
inc
jle
lods
lods
call
mov
push
or
lcall
adc
aas
dec
sub
adc
jge
ret
std
fidivrs
ds
ret
movsl
cmp
in
mov
mov
or
cmpsl
enter
pop
movsb
xchg
enter
out
out
rcrb
test
movsl
inc
xlat
out
movsl
jge
int
test
dec
into
xor
out
out
js
mov
dec
sbbb
dec
lock
xchg
aas
lods
sub
cmp
cltd
test
fs
iret
cmp
add
cmpb
lods
pop
push
and
jns
push
test
push
stos
mov
sbb
and
dec
arpl
adc
adc
stos
and
imull
dec
push
gs
mov
rcr
test
mov
mov
cmc
add
cld
add
mov
nop
adc
bound
movswl
sahf
sbb
divb
ret
aas
xchg
clc
sbb
jb
mov
mov
les
cs
aam
jns
sub
push
push
out
insl
in
andb
push
lahf
cmp
sahf
dec
add
call
mov
sbb
jne
xor
cmp
xchg
repz
inc
loope
out
mov
imul
sub
call
dec
pop
jno
fldcw
push
jecxz
out
jmp
fmul
es
ljmp
sub
cmp
sub
out
inc
add
sbb
call
pop
nop
fcmovne
push
mov
repnz
data16
in
mov
mov
or
jecxz
cmp
mov
es
jnp
cmp
cmpsb
mov
test
jae
ja
ss
ljmp
pop
push
dec
push
icebp
mov
add
xlat
mov
dec
jp
es
js
inc
cmp
in
mov
or
xchg
loopne
mov
fcompl
mov
xor
test
movsb
mov
je
and
xor
mov
stc
mov
call
clc
push
sub
ss
adc
daa
bound
lds
mov
shlb
jnp
test
or
ret
xor
jl
inc
lahf
push
mov
stos
lods
pop
outsl
cmpsb
add
pop
arpl
jb
cltd
xchg
mov
xor
aas
pop
rolb
or
sub
xor
and
sidtl
sbb
add
or
pop
inc
dec
and
xchg
push
inc
mov
ds
xchg
cld
roll
push
sbb
stos
add
cmp
es
adc
hlt
andb
sub
mov
dec
push
xchg
loop
call
push
rol
xchg
into
adc
jns
xchg
call
fisubrl
jecxz
add
fdivl
test
in
xchg
xchg
sub
push
test
mov
dec
stos
mov
sub
ficomps
mov
and
adc
bts
stos
pusha
sbb
sti
mov
out
in
in
daa
sub
add
lret
pop
aas
stos
inc
sub
mov
push
movl
cmp
into
inc
mov
in
dec
jns
mov
rcrl
in
cmp
mov
in
pop
pop
mov
ljmp
imul
inc
stos
std
mov
movsl
mov
mov
xor
in
insb
loop
mov
xchg
push
pop
enter
imul
and
loopne
lods
adc
enter
and
mov
imul
adc
sub
je
pusha
cltd
add
sbb
pop
xlat
mov
cs
shlb
mov
fbstp
xor
inc
dec
ljmp
enter
or
cmpsb
mov
pop
xor
sub
test
pop
jmp
mov
pop
out
aam
daa
jmp
cli
lods
sbb
mov
lock
test
out
lea
sbb
cmp
test
out
decb
lcall
addr16
lods
mov
jg
add
jle
cld
je
cmp
pop
pop
mov
xchg
lret
pop
sbb
mov
mov
and
aaa
imul
jmp
jne
mov
incl
data16
mov
dec
stos
and
aas
movsb
xor
cmp
test
mov
inc
les
inc
inc
lods
pop
jl
cmp
push
push
adcl
add
cmc
lret
mov
mov
push
cli
fsubr
in
cmp
jnp
sahf
mov
mov
push
out
out
std
xchg
out
dec
mov
xchg
add
mov
movb
push
sbb
mov
push
in
out
push
xchg
stc
movsb
int
push
mov
mov
sbb
adc
mov
cmp
test
sbbl
cwtl
fisubs
stos
sbb
imul
sbb
sub
popa
mov
jbe
int
dec
ljmp
dec
sub
sbb
fs
and
cmpsl
mov
frstpm(287
bound
and
sub
insb
mov
fsubp
mov
mov
xchg
sahf
jle
adc
inc
cmp
fildl
cmc
cs
cmp
rcll
cmp
mov
inc
cmp
jb
inc
push
inc
push
jne
sbb
in
lret
jbe
adcb
or
in
test
jae
mov
ret
dec
jnp
xchg
dec
jp
mov
dec
pop
fs
stos
jle
adc
cmp
enter
push
xchg
aas
fwait
inc
ss
adc
fnstenv
pop
movsl
das
mov
jmp
in
aas
cmp
jae
cmp
enter
rcrb
lds
xor
push
push
imulb
pushf
movsl
data16
mov
jns
cmpsl
sub
add
sub
and
fisubs
pop
adc
xchg
pop
int3
pop
leave
push
cli
movsb
cmp
pop
cmc
xchg
sbb
mov
mov
mov
imul
mov
loop
sub
arpl
sub
inc
add
out
pop
out
cmpsl
cmpsb
cltd
fwait
inc
lahf
pop
rclb
in
ret
inc
gs
push
rorb
loop
jnp
imul
in
outsl
add
jb
fisttps
dec
jno
mov
ret
gs
jbe
lcall
leave
mov
and
and
ficoms
and
nop
xor
cmp
sbb
mov
in
outsb
mov
xchg
int
pop
lret
jbe
and
dec
stos
insl
sub
lock
ficompl
movsl
jns
inc
push
sti
fs
inc
shr
mov
stos
mov
aaa
mov
jp
in
lret
test
aas
mov
jmp
popa
jo
dec
or
push
add
test
jnp
xor
xchg
fidivs
and
pop
popa
mov
fwait
sbb
pop
push
insb
adc
xor
outsl
jne
jne
ss
xchg
test
adc
and
sarb
gs
xor
or
out
add
ret
jmp
addr16
jns
xchg
pop
in
sahf
test
xchg
fnsave
popl
jg
int
cmp
mov
mov
jle
scas
loopne
mov
push
adc
pop
xchg
jae
pop
add
clc
lods
jae
pop
mov
stc
pop
stos
add
movsb
and
pop
ds
sarb
and
mull
cmp
aam
pusha
xor
stos
arpl
jecxz
dec
jle
js
push
clc
push
or
dec
cmp
dec
pop
mov
mov
jb
and
and
mov
pop
mov
push
cmp
test
fnstcw
mov
pusha
out
ret
inc
push
ret
lods
push
sbb
test
mov
mov
test
mov
icebp
push
mov
sar
push
pushf
fdivp
addr16
push
fisttpll
sub
push
out
add
jmp
mov
cmp
lcall
xchg
and
mov
lods
mov
jns
mov
mov
mov
outsb
cmp
aaa
mov
shlb
mov
shr
push
ss
cli
and
dec
addr16
cli
aad
leave
stos
push
setp
int3
sahf
lahf
std
loope
mov
jg
jae
enter
aad
arpl
rcrl
aad
fcmovne
push
repz
scas
pusha
fs
loop
and
aas
scas
out
push
push
imul
stos
inc
repz
lcall
mov
xchg
mov
not
sub
insl
repnz
ljmp
in
cmc
add
fwait
lret
pop
and
enter
cmp
cli
dec
mov
fdivl
js
in
cmpsb
add
and
repnz
movsb
out
aam
adc
jecxz
xlat
cmp
addr16
jbe
in
add
sbb
xchg
popf
mov
mov
mov
call
cwtl
cwtl
xor
fbstp
lods
aas
and
or
mov
cli
dec
cmp
pusha
dec
js
repnz
popa
daa
call
je
xchg
jnp
sbb
imul
jnp
enter
push
lods
js
mov
dec
lock
xchg
ret
or
sub
cmp
movsb
jg
push
lods
fsubrp
xor
push
call
dec
stc
xor
mov
sub
mov
pop
mov
inc
inc
sbb
jae
out
out
popf
inc
cmp
mov
pop
das
scas
fiaddl
cmc
imul
xchg
outsb
inc
stos
or
ret
mov
cmc
movsb
jge
test
adc
jecxz
pop
hlt
inc
xchg
add
mov
mov
lods
sub
mov
fists
sub
scas
mov
in
lock
cmp
sbb
jb
std
cs
imul
xor
imul
lahf
daa
cmp
lret
repz
fcoml
ret
movsl
or
gs
mov
pop
add
in
jl
dec
pop
xor
mov
or
jno
cmc
lret
cmpsb
xor
cmp
ss
inc
push
lcall
cmp
pop
sub
xchg
into
mov
iret
mul
jns
out
cmp
pop
or
repz
lcall
das
or
lret
xchg
stos
out
adc
dec
arpl
stc
lock
mov
mov
cmpsb
pop
mov
adc
or
mov
divb
lock
fsubp
clc
in
push
xlat
xor
shll
cli
jg
xor
push
inc
fmuls
fwait
sarl
mov
rolb
inc
xchg
mov
cltd
adc
or
sub
in
sbb
jp
push
imul
aad
dec
or
xchg
rcrb
mov
push
das
pop
xchg
subb
and
js
mov
loop
test
testl
mov
fcomps
inc
dec
add
adc
xor
and
mov
sbb
add
cwtl
push
mov
mov
mov
mov
lods
enter
ret
push
loopne
out
mov
add
push
inc
lret
pop
cmc
or
lcall
xchg
js
dec
xor
mov
adc
lret
inc
rol
lods
xchg
jmp
imul
sub
ret
daa
ret
subl
add
je
aas
push
repz
cli
pusha
aam
dec
sub
cltd
mov
pop
enter
sub
xchg
push
sti
add
or
mov
outsb
cltd
mov
mov
sahf
push
inc
mov
mov
push
pop
js
or
jecxz
fldenv
sahf
mov
movsl
sub
push
daa
mov
ss
add
add
xor
cmp
xor
cmp
std
popa
ret
push
push
mov
outsl
mov
sbb
mov
dec
scas
ss
fnstenv
lahf
int3
iret
xlat
adc
push
jge
mov
adc
dec
popa
pusha
adc
mov
dec
pushf
sub
dec
cmpsb
dec
rol
icebp
popf
negl
push
fbld
add
arpl
repz
popa
popf
jle
inc
loope
mov
pop
push
rep
adcl
add
cli
mov
mov
adc
mov
push
and
lods
filds
jbe
mull
lahf
cmp
js
idivl
not
rcll
xchg
push
jp
add
sub
outsl
mov
stos
push
adc
cmpsb
cmc
xchg
jl
outsb
adc
out
enter
and
pop
pop
mov
lods
xlat
sbb
sahf
push
aaa
mov
hlt
mov
fcompl
inc
in
clc
mov
xchg
add
test
xor
mov
dec
lcall
cltd
scas
in
fidivrs
jmp
insl
out
adc
rcrb
push
clc
sbb
movb
or
adc
or
ret
mov
and
xor
orl
lds
insb
lahf
pop
into
sbb
push
test
out
sbb
movsl
lds
rcr
test
gs
das
inc
movsb
in
sarl
inc
xchg
cmpsl
sub
fsubrp
jb
das
fxch
xor
push
ret
cmp
mov
xchg
shlb
out
lret
movsl
fildl
stos
lds
es
andb
mov
mov
incl
rcl
jno
pop
test
or
jl
fnstenv
cmp
sbb
mov
ss
cmp
mov
xchg
std
mov
or
cmp
mov
out
cmp
lcall
mov
cmp
lds
lods
cwtl
sub
mov
sbb
pop
popa
daa
in
lds
ljmp
mov
sbbl
sbb
or
andb
cmp
xor
addl
lcall
xchg
mov
mov
dec
scas
sbb
mov
inc
jp
add
xchg
xchg
les
int3
inc
mov
lea
add
mov
fdivrp
jmp
jge
rcll
cmovbe
mov
in
sbb
loope
pop
cmp
sbbl
scas
cmp
jg
dec
mov
stc
lods
pop
ss
push
inc
jne
adc
lcall
dec
jge
pop
cmp
xchg
or
jl
lods
test
retw
or
fadds
xor
push
hlt
add
jmp
outsb
lcall
lods
out
pop
mov
inc
pop
nop
jge
xchg
mov
cmp
pusha
lds
jmp
push
lods
jnp
push
inc
adc
cmp
push
push
pop
std
jnp
lds
add
pop
mov
mov
inc
lahf
cwtl
js
inc
pusha
sub
rcrl
xchg
add
fstps
pop
iret
inc
adc
mov
jae
and
test
jmp
push
dec
imul
stos
sbb
popf
xchg
xchg
add
lods
fs
cmp
cmp
jnp
xchg
es
leave
testl
jae
cmpsl
xchg
xchg
or
cmpsl
mov
sbb
loop
dec
push
mov
aas
in
mov
lds
sbb
std
cmp
imul
adc
or
mov
das
cmpsl
fxtract
fdiv
cmp
push
dec
mov
adc
inc
xchg
mov
daa
sti
fwait
pushf
push
bound
fisttps
lahf
lret
cmc
adc
mov
jns
cmp
roll
popa
jne
jg
sub
out
add
jo
or
test
inc
adc
lods
arpl
push
push
push
mov
sbb
xchg
adc
imul
jbe
inc
sub
add
jg
fcoml
pusha
mov
lret
lods
imul
in
mov
adcb
and
jl
mov
sbb
add
cmpsb
jns
add
mov
pop
pop
sub
cmp
mov
sub
or
pop
roll
cmp
cmp
sub
ljmp
test
lcall
jg
orl
aaa
inc
int
fisttpll
aad
inc
mov
sbb
js
add
xchg
mov
popfw
sti
jmp
inc
and
jno
jmp
push
sti
bound
dec
mov
dec
sbb
popa
mov
push
cs
xchg
mov
and
int3
sbbl
push
sub
mov
xor
mov
sbb
dec
cmp
shll
jne
inc
out
mov
inc
es
adc
jmp
inc
jnp
xchg
mov
repz
cmpsl
cld
in
ret
pop
pop
add
push
ds
inc
loope
lods
cli
and
enter
push
in
pop
push
fsubr
sub
sahf
out
cmc
sub
mov
popf
sub
aas
adc
sar
aaa
lea
pop
sub
pop
pop
iret
js
add
cwtl
jle
mov
sbb
cmp
push
cmpb
xchg
pop
jns
lds
in
push
mov
ljmp
mov
movsb
leave
pop
cmpsb
pop
sbb
add
loop
cld
pop
dec
jmp
adc
push
dec
jl
push
add
push
mov
inc
imull
xchg
cmpsl
mov
push
sbb
cmc
mov
nop
test
ja
clc
xchg
loope
fcom
out
dec
mov
inc
jmp
cs
xchg
add
and
push
stos
testb
fwait
cmc
and
jl
push
dec
inc
dec
daa
push
dec
fisttps
push
bound
bound
sti
hlt
add
pop
pop
sbb
dec
xlat
out
fs
dec
hlt
lea
push
sub
push
mov
fistpll
mov
in
dec
push
push
shll
jmp
testb
scas
ja
cmc
lds
mov
test
push
mov
ja
xor
lea
pop
inc
push
dec
fsubp
sub
xchg
mov
test
subb
incb
frstpm(287
es
pop
or
push
adc
roll
cltd
or
sub
add
stos
mov
je
sub
arpl
jge
lret
test
test
pop
test
negl
adc
sub
add
ds
push
sbb
arpl
and
mov
add
dec
sub
mov
popa
and
mov
mov
mov
pop
sub
test
pop
and
lahf
out
test
inc
adcb
insb
cwtl
pop
or
daa
lret
cmp
mov
and
lret
mov
sub
in
push
or
imul
jns
dec
shrl
pop
and
cmp
ret
out
imul
lret
pop
dec
adc
nop
popf
xor
jmp
sub
mov
mov
xor
scas
jb
add
push
shll
mov
lcall
filds
xchg
in
fwait
cmp
mov
dec
jbe
cmp
pop
xor
mov
xor
call
in
mov
lods
adc
and
call
push
cld
push
mov
sbb
punpckhwd
mov
pop
pop
movsb
mov
ret
jmp
jle
pushf
daa
add
jecxz
in
mov
test
mov
lods
test
into
cmp
cmp
lds
int
inc
loopne
mov
xchg
pop
in
adc
shr
call
scas
movaps
mov
push
or
js
cmp
cmp
mov
cmp
add
insb
mov
xlat
cmpsl
or
xchg
adc
les
dec
inc
pushf
insb
pop
test
cli
jae
sub
cmpsl
pop
insl
shrb
das
lahf
inc
jge
int
jmp
addr16
dec
lret
cltd
and
ret
add
sarb
cmp
shl
jge
adc
pop
push
fs
sub
dec
ficoms
xchg
ja
out
cltd
inc
pop
xchg
mov
leave
pop
mov
jb
repnz
cmpsl
out
dec
add
loopne
imul
sub
adc
inc
cli
pop
mov
sbb
dec
pop
bound
jno
dec
jbe
lods
pop
lea
xchg
das
cmp
xor
adc
or
cmc
sub
sbb
cltd
or
gs
stos
mov
xorl
daa
and
ss
fs
jmp
aam
lcall
arpl
test
cs
sahf
daa
cltd
cltd
out
aas
pushf
repnz
negb
add
jle
loop
repz
sbb
fidivs
cs
xlat
std
jns
lods
mov
push
cmpsb
movsl
cld
sub
orl
loop
gs
or
inc
outsb
out
sub
shrl
xor
mov
test
int
ret
pop
jb
cmp
xchg
in
push
popa
sbb
jb
lods
sbb
mov
and
std
cwtl
das
negb
sub
adc
xchg
movsb
and
xchg
inc
push
iret
mov
pop
orl
or
ljmp
push
pushf
aam
cmp
lcall
sub
in
inc
xor
xor
push
stc
push
xchg
dec
push
or
lds
test
jns
pop
push
jne
mov
xor
inc
push
xor
mov
stc
pop
cmp
or
fbld
mov
sub
ds
add
ror
cmpsl
out
int
pop
adc
pushf
movl
jg
ja
xor
push
faddl
pop
out
mov
in
jno
pop
mov
ja
sub
fildl
mov
pop
sbb
daa
fldl
insb
adc
and
bound
sub
imul
movsl
gs
lcall
dec
addr16
ret
and
imulb
add
jle
cli
mov
jbe
shll
test
repnz
adc
lods
jbe
movsb
sar
lret
pop
arpl
popa
inc
push
push
mov
xchg
xchg
cs
sbb
fisttpl
push
insb
sub
lock
scas
mov
jle
insl
xor
cmpsb
push
or
and
inc
bound
and
lret
lcall
jae
jp
or
int
pop
lahf
and
sub
dec
fildl
repz
xchg
mov
sub
fs
lods
push
push
pop
xchg
lcall
filds
std
movsb
gs
sbb
push
push
lods
rcrl
pop
pop
pop
pop
scas
fadds
sahf
pop
pop
jno
imul
xchg
add
sub
cmp
pop
mov
mov
dec
jae
ja
or
adc
xor
lds
mov
scas
insb
jmp
jns
mov
mov
loope
xchg
repz
jmp
ljmp
roll
xchg
or
std
mov
loopne
dec
cmpsl
sub
and
or
pop
inc
push
push
icebp
leave
xorb
pop
jle
xlat
add
cld
mov
les
out
mov
ret
mov
imul
mov
aad
xor
add
add
inc
xlat
mov
jl
and
push
dec
icebp
lods
enter
in
dec
inc
cmp
adc
mov
aam
pop
call
sahf
fdivl
aas
pop
mov
popa
jmp
jb
ret
mov
lcall
or
dec
xchg
fcompl
push
mov
ds
xchg
pop
stc
add
ljmp
sbb
or
mov
or
jmp
enter
jae
pop
push
jg
and
sub
dec
stos
test
sbb
gs
fmul
pop
stos
fwait
sbb
leave
dec
lahf
cmp
call
loop
sar
frstor
leave
fsin
sbb
stos
clc
push
outsb
ficoms
hlt
cmpsb
shlb
dec
jle
xor
cmp
jno
lods
mov
les
dec
fimull
pop
loop
fnsave
shll
dec
xor
dec
enter
imul
sub
mov
hlt
sub
dec
add
dec
les
outsb
add
add
stos
push
and
ret
mov
icebp
mov
int3
aam
rcll
add
cmpsl
test
inc
mov
mov
test
dec
dec
loop
dec
cmp
inc
mov
popf
push
sub
insb
add
pop
es
fxch
scas
or
out
aad
jge
scas
xchg
xor
fcmovnb
xchg
jecxz
adc
loope
cmp
jge
mov
shll
dec
jecxz
sarl
jbe
xor
and
lcall
sub
mov
outsl
inc
iret
xor
test
stc
mov
xor
cmp
gs
mov
loope
mov
ss
call
es
cmpsl
sbb
mov
pop
aad
inc
das
or
push
movsl
popa
sahf
cli
div
cwtl
and
inc
jne
jbe
ret
out
and
in
dec
sub
inc
cmp
cmpsb
adc
jae
scas
fstps
push
clc
scas
cltd
cmp
cwtl
mov
cmp
jge
push
jns,pt
and
jns
mov
sbb
push
mov
sbb
leave
cmpl
loope
insb
out
or
or
or
in
xor
cmpsb
aas
push
dec
bnd
fcoml
dec
aam
jmp
scas
and
lret
xchg
fbstp
sbb
dec
mov
push
pusha
push
test
jle
lahf
cwtl
fsubrs
call
inc
pop
cmp
in
inc
inc
hlt
mov
add
cmp
cmp
ds
out
or
lock
movsb
leave
cmp
pop
mov
inc
jecxz
or
into
rdtsc
lret
and
aas
inc
addr16
xchg
lret
inc
inc
mov
sbb
or
adc
or
scas
das
ds
cmpb
inc
jns
ret
nop
shrb
fbld
mov
jge
mov
dec
inc
int3
or
adc
lds
shr
pop
inc
es
lret
mov
xchg
daa
jl
test
and
je
sbb
pop
mov
cmpsb
mov
mov
mov
jns
out
es
das
xchg
add
iret
adc
cmp
test
mov
add
push
lods
inc
mov
xchg
pop
mulb
int3
lds
inc
cmpsl
mov
lds
adc
push
in
in
jmp
lods
push
mov
xor
pop
decl
filds
sub
add
imul
jmp
sub
mov
mov
sbbb
ds
ja
mov
sbb
cmp
xorb
fstpt
add
pop
xchg
cwtl
into
cmpsb
aad
dec
push
mov
cmp
push
dec
movsb
lds
push
jo
fbstp
shll
lret
subl
movsb
sbb
sub
sub
lahf
cmc
xchg
data16
lcall
add
jbe
mov
fcompl
cli
hlt
sbb
add
daa
sub
mov
push
sarl
ds
call
dec
clc
out
sbb
gs
orl
add
add
fs
or
and
mov
pop
cmp
movsb
lds
test
mov
subl
jns
dec
xchg
popf
sbb
xor
mov
xchg
and
dec
mov
ror
jno
add
addb
xchg
mov
sub
jp
into
xchg
pop
shlb
fdivl
cmpsb
or
in
and
cwtl
xor
cwtl
ja
inc
imul
loop
and
je
xor
les
lods
push
pop
mov
add
stos
jge
mov
adc
nop
cmp
call
jnp
pop
scas
jno
cmp
cmpsl
lods
jmp
adc
adcb
push
sbb
cltd
sbb
dec
movsb
fldenv
mov
xchg
ret
mov
inc
enter
add
mov
lahf
inc
cmp
stos
jmp
jmp
jae
ror
or
outsb
out
mov
pop
repz
cmpsb
mov
jp
jp
jmp
dec
and
lret
stos
add
fstpl
xchg
mov
jnp
in
jb
inc
js
add
mov
lret
xchg
mov
add
les
pop
pop
sbb
push
loope
cmp
lods
and
adc
sbb
enter
mov
stos
outsb
test
movsb
cmpsb
scas
enter
hlt
sahf
xchg
int3
dec
add
sti
mov
adc
push
loope
dec
inc
sbb
sub
dec
fcomip
aad
aas
testb
mov
xor
xor
lcall
push
xchg
js
das
idivb
mov
out
inc
cmpsb
out
mov
jmp
mov
out
out
mov
enter
xor
les
subl
test
sub
adc
stos
aad
int
and
sub
pop
add
push
stc
jp
push
mov
mov
test
add
push
fcmovnu
or
inc
repz
xchg
fstps
mov
mov
mov
js
int
orb
add
dec
sbb
sti
mov
ljmp
pop
mov
pop
cmp
stos
les
dec
or
dec
inc
push
sub
cmp
es
cmpsl
fs
mov
out
xchg
sub
imul
jmp
mov
ljmp
lahf
or
mov
ljmp
adc
sbb
clc
popl
pop
outsl
mov
xchg
jg
mov
add
iret
inc
add
fimull
mov
int
pop
xor
and
adc
mov
dec
lcall
pop
sbb
popf
shll
cmp
fdivr
xchg
jnp
push
jl
das
dec
test
fisubrl
inc
jl
imul
pop
inc
inc
dec
flds
xchg
cltd
cwtl
gs
jae
push
sbb
mov
and
iret
pushf
sub
pop
push
aas
and
sbb
lods
pop
jo
mov
pop
jle
push
ret
pop
dec
aas
inc
mov
fsubr
and
sti
cmp
adc
add
cmp
cmp
stc
daa
fildll
sub
cmpsb
mov
dec
fiadds
cltd
or
push
pusha
in
repz
dec
or
int
cmpsb
inc
inc
mov
xchg
mov
mov
add
test
fistpl
mov
cltd
fisttpl
lret
cmp
pop
pushf
and
mov
add
mov
lret
das
call
pop
mov
mov
cmp
or
jo
and
test
movsl
test
cmp
int
inc
dec
stc
mov
xchg
pop
fsubrl
mov
push
adcb
jbe
cltd
test
rorb
xor
xchg
sub
in
add
adc
dec
sub
incl
mov
cmpsl
ss
aas
or
sbb
cmp
sub
sbb
push
push
pop
pop
cmpsl
lods
mov
xor
cmp
sbb
xchg
jl
leave
mov
stc
pop
in
and
repz
ror
mov
dec
cwtl
add
fcmovbe
add
pop
jno
addr16
jmp
jo
xchg
repnz
jne
mov
and
lds
and
mov
test
pop
ljmp
ja
lcall
outsb
andb
adc
pop
push
push
in
ret
jmp
cmpsb
loope
or
fldcw
cmp
mov
cmp
jg
daa
jae
jmp
roll
sub
cld
mov
push
mov
jnp
pop
test
mov
or
mov
mov
or
add
stos
sub
cld
xor
dec
mov
dec
dec
pop
adc
pusha
pop
mul
cwtl
sbb
pop
rcrb
pop
mov
fs
fsubrl
jns
jmp
and
pop
jae
sti
pop
insl
fwait
sub
cmp
ljmp
jne
and
shll
lret
nop
dec
mov
sub
incl
and
inc
cmp
es
fildll
pop
cmp
jns
jmp
ljmp
xor
js
fs
and
clc
sbb
mov
push
ljmp
cld
int3
xor
out
sub
ljmp
insb
pop
movsl
outsb
sbb
loop
jmp
leave
es
jns
shl
xchg
xor
lods
mov
mov
stc
dec
xchg
jmp
fucomip
adcb
fisttps
inc
sbbl
pop
mov
push
pop
fnstcw
outsl
js
pop
fnstenv
fwait
fwait
loopne
fisubrs
inc
inc
xchg
or
jns
mov
or
and
nop
cmpsb
jmp
divl
and
cli
daa
imull
movsl
add
mov
sbb
cmpsl
dec
ds
push
in
ret
mov
push
cmpl
into
std
add
les
xchg
imul
inc
cmpsb
xor
loop
jno
nop
cs
jnp
xchg
leave
mov
stos
xor
push
in
inc
mov
test
ss
mov
fisttps
cli
ljmp
ret
insl
sahf
dec
movsl
repnz
aam
loop
lahf
out
add
test
das
pop
xchg
imul
mov
rorl
ds
sti
and
lods
pusha
test
nop
jl
inc
jne
inc
push
cmpsl
iret
pop
mov
mov
test
xchg
loope
mov
fs
ljmp
push
pop
cltd
xlat
pop
push
pop
jg
out
mov
sub
test
popa
bound
sub
mov
das
cmpl
jne
jns
pop
dec
xchg
cmp
les
fwait
xchg
mov
jbe
pop
call
xchg
test
push
or
test
fiadds
xor
clc
test
add
and
das
arpl
dec
jae
push
fcoml
loopne
jns
xchg
cli
imulb
test
out
rcl
xor
jecxz
scas
adc
inc
fdivrl
lahf
test
push
xchg
jmp
lcall
push
jg
jmp
add
in
push
sahf
int3
or
dec
aad
mov
cmpb
dec
mov
sub
or
mov
fs
dec
cmpl
orb
imul
dec
rorb
pop
sub
in
dec
ja
call
mov
cmpsb
pushf
cmpsb
out
mov
mov
xor
outsb
out
or
xchg
sbb
jbe
dec
cltd
cmp
sbb
dec
ret
jns
sub
bound
cmp
pop
pop
mov
mov
loop
cmp
lret
cmc
notb
cmp
in
mov
out
jg
dec
pop
jge
jmp
ds
out
dec
negb
and
rep
mov
pop
out
aaa
testb
adcb
pop
push
cmp
insb
ficomps
push
in
out
or
aas
jmp
mov
loopne
out
sti
popa
divb
shll
fdivrs
push
loop
sub
loope
jle
in
and
sbb
adc
or
mov
cmp
sti
xchg
adc
dec
cltd
fidivrl
push
dec
sub
xchg
mov
sub
js
stos
add
fcoml
dec
pop
faddp
loop
pop
test
rcl
jbe
jp
mov
mov
daa
sbb
or
ds
inc
aas
stc
add
inc
movsb
dec
sti
mov
mov
mov
sbb
lahf
call
bound
and
pop
dec
push
add
iret
jmp
add
inc
test
hlt
mov
mov
and
xchg
repnz
rol
mov
pusha
mov
cmpsb
aad
inc
and
or
movsb
mov
inc
adc
lock
inc
shlb
pop
stos
mov
push
xchg
xchg
mov
pop
mov
push
cmp
in
cwtl
pop
and
mull
sbbb
aas
fwait
mov
xchg
xchg
adc
cmp
sub
sbb
clc
cmp
adc
cmp
fwait
sub
pop
je
loop
jnp
sub
ret
jns
add
push
cmp
lds
mov
push
ss
fisubs
sbb
pop
sbb
sub
push
mov
adc
dec
inc
add
aaa
and
sahf
and
shrb
pop
pop
in
dec
lds
push
pushf
sbb
in
jbe
sbb
jmp
cmpsb
movsl
sub
cmpsb
and
sub
sub
popf
mov
cmpsb
adc
bnd
ss
fisttps
mov
inc
pop
mov
mov
adc
pop
in
mov
in
sbb
sahf
inc
xchg
pusha
jecxz
jns
or
dec
and
pop
or
mov
aaa
in
xchg
dec
or
cmp
enter
pop
fistpl
loope
int
stos
in
push
inc
cmp
sbb
mov
pop
ds
sub
dec
adc
ljmp
jnp
enter
stos
jecxz
cmp
add
mov
mov
sub
cli
mov
in
push
xor
in
popa
imul
adc
sub
arpl
mov
jle
jp
sarl
iret
adc
bound
jb
jle
jg
stc
mov
cmp
push
lock
rolb
scas
aad
pushf
sti
sbb
ss
in
pop
movsb
mov
mulb
mov
sbbw
mov
out
call
adc
inc
inc
jmp
cwtl
pop
fwait
jmp
int3
pop
cmpsl
bound
addr16
sub
adc
lods
mov
pop
mov
ret
pop
lret
cmp
out
fstps
mov
adc
into
fstpl
xchg
inc
or
mov
bound
push
sbb
js
out
cli
and
xor
in
pop
lock
add
mov
and
inc
outsb
adc
adc
es
lret
movsl
push
test
cmp
adc
sbb
add
cmpsb
scas
cmp
clc
cmp
ret
push
fbld
pop
add
add
jmp
inc
ss
lea
sub
xor
mov
popf
push
test
popf
sti
xchg
fisubrl
movsb
lret
cld
jbe
push
cmp
fsub
adc
fldl
es
xor
in
imul
stos
enter
lods
jge
xor
and
fiaddl
jne
push
orl
scas
les
and
mov
test
jmp
in
add
inc
sbb
shrb
push
mov
scas
fistps
lea
xor
dec
mov
and
outsl
lret
outsb
xchg
push
push
jg
add
aam
mov
fidivrs
jbe
aas
or
jl
push
outsb
pop
pushf
ss
movsl
pop
jmp
fimuls
and
jg
test
sub
lret
cmpsb
push
sub
sub
adc
shlb
adc
inc
cli
push
call
cmp
mov
cmp
lret
xor
movsb
fisubs
pop
pop
add
and
cmc
cmp
push
sbb
cmp
shl
mov
lcall
cmp
ss
jg
arpl
test
add
add
mov
add
mov
imul
jo
mov
jns
push
lahf
add
add
pop
sbb
or
pop
adc
pop
insb
push
push
lods
dec
and
jbe
arpl
out
adc
jns
dec
nop
dec
notb
sbb
es
arpl
pop
es
in
xlat
rolb
clc
adc
inc
bound
pop
sbb
sub
ja
addr16
test
es
inc
xor
xor
in
rcrl
pushf
sub
sbbb
mov
ret
inc
jmp
ret
adc
cltd
mov
jle
jb
add
or
rcl
popf
mov
push
cmp
lcall
jg
and
mov
xchg
loope
cmp
and
test
sub
addl
out
leave
mov
mov
out
test
das
enter
aad
dec
xchg
or
cmp
pop
pusha
mov
ds
dec
repz
xchg
sahf
stos
lea
jecxz
mov
pop
clc
or
sub
mov
insl
popf
xchg
xor
lods
aaa
lea
outsb
out
cmp
ret
jmp
shll
movsb
xor
mov
jne
cmp
lds
pop
sbb
jne
pop
les
dec
shl
sti
mov
and
mov
aad
cltd
into
aas
ss
loop
pop
test
js
pop
ss
cmp
cmp
mov
movsl
fistpl
divb
pop
in
sub
cld
pop
int3
js
shlb
jno
dec
sbb
mov
call
lcall
data16
mov
lea
hlt
cmp
repnz
jae
xchg
add
add
and
test
and
mov
push
ficoms
cmp
out
cli
add
cltd
mov
sbb
aas
dec
sbb
lods
inc
adc
and
cmpsb
lcall
and
fisubl
cmp
cmp
addr16
cmp
lds
xor
pop
inc
imul
mov
xchg
cld
fwait
fwait
jb
std
push
rcr
ss
sbb
repnz
xchg
xchg
ret
rolb
xchg
lahf
ss
mov
cmp
repz
in
mov
lds
mov
pop
cmp
adc
add
fs
in
adc
lahf
js
scas
aaa
xchg
sub
lahf
sub
xchg
call
bound
push
fistpll
imul
jle
lcall
xchg
sahf
sahf
cmp
jno
loop
push
out
addr16
shlb
xchg
movsb
mov
repz
stos
cmpb
inc
xchg
bound
xchg
lret
lods
add
movsl
mov
sub
pop
popf
mov
sarb
fwait
fwait
lods
cmp
in
pushf
mov
xchg
push
loopne
mov
addr16
fcomps
test
in
mov
cmp
std
icebp
test
jl
mov
outsb
gs
fwait
add
call
mov
movsb
in
xor
je
stos
out
dec
xchg
mov
mov
mov
mov
out
inc
cltd
adc
mov
ss
mov
in
xchg
iret
call
stc
in
out
addl
pusha
xchg
cmc
push
sbb
sbb
mov
lret
sbb
xlat
out
push
fmuls
cmpsl
lcall
stos
fdivp
xor
dec
push
cmpsb
xor
aas
dec
sbb
stos
cmpb
cmp
sbb
orb
fxam
sahf
lahf
js
mov
gs
pop
test
dec
fld1
add
xlat
arpl
sub
or
sbb
shld
add
mov
add
inc
iret
les
and
cltd
mov
or
jl
jecxz
jne
cmp
xchg
out
mov
add
cwtl
sbb
mov
loopne
inc
ret
add
cmpsb
adc
mov
sbb
xchg
mov
das
mov
pop
sbb
out
or
and
jl
or
mov
mov
cli
divl
jbe
ret
fidivrs
pop
cmp
scas
adc
ja
fcoml
out
clc
xor
push
lock
mov
enter
cmp
pop
ret
lods
lcall
push
push
insb
adc
rclb
popf
xor
jge
dec
mov
andl
lods
jae
add
mov
mov
jo
push
or
mov
aam
sahf
scas
pop
jp
sub
push
cmp
arpl
add
jp
cmp
fsubl
mov
or
ret
gs
iret
das
and
lahf
xchg
cmp
adc
add
inc
dec
cmpsb
out
xchg
sbb
push
inc
paddsb
ret
mov
add
fs
aaa
add
mov
icebp
jg
stc
pop
fwait
mov
push
mov
mov
cmp
out
lds
insb
or
dec
call
xsave
aad
shll
leave
stos
outsl
inc
mov
imul
pop
jne
out
repz
sub
pop
xchg
cwtl
mov
lret
xchg
cmp
mov
lods
and
sbb
add
cli
sbb
out
rorl
sbb
ret
cmpsl
andl
mov
mov
data16
test
xlat
out
aad
cmpsl
xchg
jnp
popf
addr16
lret
repnz
test
stos
lahf
roll
jbe
dec
cmp
jmp
out
ja
inc
mov
rorb
add
cmp
sbb
mov
mov
rorb
ror
repnz
adc
ret
in
cmp
inc
adc
jne
jbe
ss
inc
add
daa
inc
mov
lcall
inc
lock
push
add
es
mov
inc
inc
or
xchg
mov
popf
or
es
or
dec
inc
xchg
mov
ds
dec
and
adc
loopne
cld
mov
dec
cmp
out
ss
sbb
fidivl
test
jle
jle
push
mov
mov
mov
insb
sbb
inc
mov
mov
in
jecxz
or
fildll
aaa
and
adcb
sbb
sub
testb
mov
inc
mov
lds
js
xor
and
shld
and
mov
in
aas
mov
mov
cmp
mov
xchg
ret
inc
fs
scas
sarl
jbe
ret
mov
xchg
ljmp
jmp
stc
pusha
scas
in
or
das
sbb
mov
popf
movsb
inc
outsl
and
daa
mov
sbb
out
lahf
jbe
popf
cli
cmp
dec
ja
or
pop
ljmp
iret
fdivrl
mov
negb
int3
xchg
dec
inc
push
movsb
adc
mov
rcl
inc
arpl
lods
or
stos
insb
lcall
mov
loop
adc
repnz
and
addb
and
lock
icebp
or
pop
add
inc
xlat
jo
aas
stc
add
mov
push
pop
push
cmp
clc
daa
sbb
aam
lds
out
call
out
in
sub
inc
pop
imul
push
cmp
pop
lods
mov
add
fisubl
adc
xchg
pop
pop
or
xchg
pop
daa
push
in
call
sbbl
orb
into
int3
sbb
std
sub
inc
in
xor
jecxz
adc
loop
add
push
xchg
sub
mov
pop
inc
or
iret
xchg
popa
outsl
xor
xchg
mov
xchg
test
add
sbb
sub
or
enter
inc
repnz
cmp
mov
scas
jae
sahf
adc
cld
sbb
push
mov
dec
scas
cmp
popa
lahf
push
and
xchg
fwait
call
cmp
ja
pop
pop
hlt
mov
aam
notb
repnz
or
aas
xchg
fstpl
mov
cmp
mov
xor
cmp
jge
push
mov
shlb
dec
popa
aaa
adc
ljmp
cmp
icebp
jp
icebp
jp
jno
mov
mov
inc
dec
loope
mov
int
sub
iret
ret
int3
cmpsl
divps
jp
dec
inc
jl
push
push
lods
sbb
lcall
or
push
mov
adc
popf
cwtl
lods
mov
into
jno
xor
push
repz
push
stos
xchg
ss
jno
orl
sbb
aad
jmp
fisubrs
jo
stos
lods
push
lods
repnz
das
mov
fcmovbe
dec
fs
or
lock
mov
sbb
add
loope
vshufps
imul
aaa
xor
cmp
xor
mov
inc
lock
xor
or
mov
ds
lret
shr
xchg
xchg
jecxz
jns
xor
mov
sub
popa
push
cmc
mov
mov
cmp
mov
push
cmp
pop
inc
loopne
loope
or
int
ds
rorl
insb
xchg
or
add
mov
push
out
das
das
sbb
lret
mov
les
rcr
mov
out
xor
aas
mov
pop
ret
jmp
push
xchg
pusha
xchg
sbb
adc
cmpb
jmp
push
push
test
ljmp
mov
mov
movsl
imul
sbb
scas
jbe
jnp
mov
mov
insl
cmpl
pop
mov
stc
pop
and
jo
pop
xlat
or
mov
icebp
jmp
and
add
push
dec
repnz
sti
dec
push
int3
push
push
jmp
dec
leave
fiadds
add
add
shlb
repz
ret
jmp
repnz
xchg
add
popf
mov
sbb
rolb
stc
dec
push
mov
lret
clc
mov
pop
xchg
rcrb
mov
xchg
sbb
cltd
int3
pop
xchg
sub
das
test
fcmovu
lcall
dec
fwait
loopne
rolb
cmp
insb
mov
rcll
sahf
cli
lods
mov
dec
lods
jnp
mov
roll
push
ja
mov
xor
fiadds
subl
scas
lret
cmc
add
outsl
push
mov
mov
cmp
cmpsl
rcll
pop
jl
cmp
ret
inc
mov
and
fs
pop
repz
cmpsl
adc
test
lret
sahf
jmp
fbstp
add
cmpsb
sti
xchg
ret
push
or
lret
aaa
in
and
push
mov
iret
mov
jae
or
fisubs
adc
xor
pusha
ljmp
sti
jne
mov
scas
xor
insl
lods
inc
sbb
aas
movsb
add
and
or
aam
sub
insl
push
int
pusha
clc
cwtl
xor
aad
mov
in
pop
xor
in
xchg
mov
xchg
mov
stos
insl
dec
rcl
ds
push
adc
test
xchg
cmp
enter
shlb
cmpps
mov
data16
lret
in
insl
jo
and
gs
dec
dec
stos
mov
adc
add
jns
fstl
pop
icebp
jne
data16
test
sarb
icebp
leave
jl
mov
test
push
sti
stos
decl
movl
adc
out
or
mov
jnp
mov
fisubl
stos
fdivrs
jl
int3
mov
dec
push
call
and
lds
out
jp
ret
test
ret
stc
hlt
bnd
pop
and
fidivrs
push
popf
and
movsl
enter
sub
push
xor
push
mov
pop
pop
mov
sbb
push
mov
sub
andb
xor
and
xchg
pop
rorl
mov
mov
movsb
add
pop
sub
mov
out
int3
movsl
in
ds
pop
jbe
and
cmp
sbb
cli
dec
mov
out
mov
jl
cmp
jg
rcr
out
es
test
mov
and
adc
vpaddusb
inc
adc
fisubs
add
outsb
bound
adc
cmp
adc
movb
outsl
sti
inc
mov
mov
lahf
and
fs
mov
push
loop
dec
in
hlt
and
mov
in
shl
stos
pusha
cmp
into
fwait
push
mov
mulb
cli
fmul
cmpsl
pop
out
mov
jp
xorb
in
dec
push
stc
inc
dec
je
and
xchg
pop
sub
gs
sbb
inc
ds
xchg
pop
push
inc
pop
mov
repnz
push
cmpsl
sbb
pop
cmpsb
sub
lea
mov
add
or
je
xchg
pushf
bound
das
sbb
cli
jmp
add
aaa
ret
jns
sbb
icebp
stc
inc
lds
cmpsl
les
sub
cmpsb
pop
or
jmp
dec
shl
pop
sub
pop
dec
leave
data16
pushf
dec
ds
fcompl
and
lcall
insl
pop
loop
ss
ret
adc
mov
lcall
popa
jecxz
inc
sub
out
or
cltd
lcall
dec
loop
lods
gs
pop
inc
scas
fcmovnu
adc
xchg
test
dec
mov
jbe
mov
dec
loope
in
loopne
fimuls
aam
and
int3
shll
inc
leave
dec
pop
enter
sub
mov
mov
push
xchg
imul
cmpsl
jl
push
add
shlb
push
int3
jl
lods
xor
jmp
push
popa
pop
or
popf
test
xchg
arpl
icebp
fwait
scas
xor
es
add
add
fldl
sahf
adc
inc
in
push
mov
cmpsb
lret
xchg
sbb
push
lahf
or
fstpt
addr16
stos
mov
testl
xchg
push
mov
imul
xor
pushf
arpl
daa
and
imul
cld
cmp
jo
lcall
es
xchg
fisttpl
jl
inc
test
cmc
or
insl
scas
inc
and
or
mov
pusha
shl
std
adcl
mov
mov
fdivl
fisubl
pop
scas
ret
dec
and
pop
mov
in
imul
aas
rolb
lret
xor
dec
in
cmp
xor
push
pushf
xchg
mov
testb
inc
cld
pop
and
stos
xchg
xor
pop
jno
aam
enter
and
jl
push
xor
rclb
cmp
sub
pop
ljmp
popa
nop
int3
or
dec
dec
in
lret
cmc
lahf
stos
xor
jmp
fstps
jb
gs
dec
out
sub
ja
mov
test
fnsave
mov
or
jge
stos
loope
xor
sbb
in
sbb
insl
cmp
xchg
enter
mov
sbb
pop
mov
pop
pop
jecxz
shll
xchg
insl
insl
or
xor
pop
and
xchg
dec
scas
pop
jg
int
push
and
inc
sbbb
or
aas
adc
sarb
sbb
push
adc
hlt
outsb
std
pusha
push
cmpsb
insl
aad
xor
push
popf
push
ss
mov
cwtl
out
imulb
push
bound
xor
mov
add
pop
xchg
mov
xlat
inc
orl
test
sbb
les
dec
inc
xchg
movsl
popa
cmc
and
push
fsubrs
aad
cmc
pushf
aas
pusha
mov
imul
lods
push
pusha
sarb
sarb
nop
ret
imul
push
out
push
imul
dec
andl
cmp
jecxz
ret
ljmp
add
int
sar
cmp
orl
inc
imul
insb
push
orb
mov
stos
adc
ffree
jo
adc
repz
xor
jae
popa
mov
add
cli
dec
pop
and
aam
scas
push
jg
loopne
cmp
or
mov
paddusw
jl
outsl
push
pushw
repnz
ja
push
ficoml
loop
inc
xor
jae
push
xor
cmp
or
add
mov
mov
gs
insb
in
outsb
lcall
js
cli
setle
cmp
int
sbb
lcall
add
imul
sahf
pop
icebp
xchg
mulb
fldenv
dec
inc
inc
inc
xchg
or
xchg
and
mov
push
std
lods
pop
push
lcall
cwtl
xchg
inc
jmp
cmpb
mov
sub
cli
loopne
dec
addb
dec
dec
scas
sbb
icebp
mov
ffreep
les
sti
pop
xchg
sub
sbb
test
sbb
popl
repnz
icebp
testb
addb
shll
in
lahf
pop
xchg
push
lcall
sbb
jge
orb
adc
gs
popa
push
stos
nop
jnp
cmp
das
jg
push
mov
pmaxsw
sbb
mov
dec
inc
mov
movsb
xchg
rorb
and
fwait
jbe
or
xchg
arpl
and
lods
sbb
call
mov
jnp
add
bound
jno
inc
xor
repnz
movsw
sbb
or
pusha
stos
xlat
adc
enter
mov
push
xorl
push
pop
out
pop
movsb
push
or
pop
jns
jg
push
push
xchg
pop
stos
arpl
js
les
add
adc
mov
outsb
hlt
outsb
add
mov
jl
aaa
cltd
lock
scas
sub
leave
mov
inc
push
or
and
decl
add
lock
and
sbb
jg
mov
and
pop
pop
daa
mov
mov
pop
rolb
lahf
lcall
cmc
dec
in
pop
dec
insl
call
idivb
sub
pop
mov
jns
sub
mov
out
scas
mov
xchg
or
push
inc
push
inc
jle
lcall
ds
lea
sub
mov
cli
cmpsb
test
subl
fcoml
int
push
int
popfw
add
jmp
dec
adc
mov
cmp
mov
add
out
add
jle
mov
int3
jmp
lret
lcall
test
jg
call
ljmp
jae
lcall
call
jns
hlt
pushf
mov
add
mov
ret
xor
sahf
and
sbb
insl
dec
mov
mov
mov
dec
dec
sub
fwait
xlat
adc
test
mov
jp
mov
iret
xor
mov
ss
pop
push
add
pop
dec
pop
inc
lret
dec
outsl
mov
sbb
add
push
jb
dec
test
lret
mov
sub
and
and
add
mov
jae
mov
int
add
mov
sbb
aad
push
xchg
shlb
es
add
dec
jle
sbb
sub
stos
sub
cld
cmp
std
jge
fidivs
jmp
dec
fisubrl
int
push
mov
pop
jle
out
inc
mov
jl
cmpsb
pushf
cmp
testb
fldenv
cmp
stc
out
pop
mov
mov
push
add
and
cmpsb
adc
xor
fisttpl
fs
or
movsl
inc
jmp
or
out
jecxz
data16
jmp
ret
xchg
or
mov
repnz
mov
mov
movsl
pop
out
stos
xchg
jns
sti
rclb
cmp
jne
inc
pop
adc
cmp
int
sbb
in
repnz
je
loop
js
mov
mov
rclb
xchg
mov
mov
dec
mov
add
sub
push
mov
sbb
test
xchg
mov
inc
mov
daa
js
add
fs
lds
jp
pop
fcmovb
jg
out
pop
jle
fidivl
ljmp
mov
inc
std
hlt
cmp
repz
mov
aas
or
cmpb
mov
jle
ljmp
jnp
out
stos
fs
rclb
sub
outsb
and
sbb
push
stos
dec
lea
scas
fsts
mov
push
enter
push
push
popf
call
mov
cli
lds
pop
dec
cmp
cmp
in
inc
outsl
jecxz
cmpl
jle
sub
jle
mov
and
lds
loopne
jmp
adc
jne
xchg
cmpsl
in
add
jle
mov
or
out
popa
stos
subl
xchg
fs
jge
out
ret
pop
or
lret
dec
mov
inc
or
mov
ljmp
loopne
pop
mov
das
and
iret
aaa
mov
add
mov
lock
cltd
xchg
mov
pop
mov
loope
mov
aam
in
loop
mov
mov
pop
cmpsb
add
daa
push
movb
push
lea
lcall
ds
xchg
jae
pop
pop
fldcw
loope
mov
pop
xchg
loope,pt
xchg
cwtl
outsb
stc
or
outsl
add
scas
dec
in
jmp
lds
arpl
sub
cmp
add
pop
outsb
pop
mov
push
es
mov
jecxz
jbe
out
jns
or
mov
jle
icebp
fwait
dec
out
test
or
sahf
or
sbb
pop
inc
mov
ljmp
cmp
mov
movsb
enter
cld
inc
cmp
into
inc
out
fwait
daa
mov
sarl
jno
jne
mov
ds
inc
gs
test
xchg
mov
mov
scas
push
sub
jl
xor
lret
jno
mov
and
pop
les
xor
test
mov
lods
push
dec
sub
mulb
jcxz
dec
cmpsl
lret
mov
decl
test
xchg
gs
sbb
push
xchg
jae
mov
dec
jle
roll
test
call
mov
jp
xchg
hlt
test
bound
xor
push
pushf
bound
or
add
popa
roll
push
dec
mov
pop
and
mov
inc
and
cmp
push
rcll
imul
jle
bound
lahf
ds
cmp
push
jno
sbb
repz
mov
mov
pushf
xchg
jmp
popa
mov
pop
idiv
add
jbe
out
add
clc
sti
xlat
fucomp
mov
lods
or
push
jnp
cmp
xlat
jnp
loop
outsb
inc
stos
xchg
and
mov
mov
imul
pop
inc
dec
mov
mov
push
jnp
sbb
cwtl
pop
inc
aam
adc
jecxz
or
adc
ret
push
inc
gs
jb
sbb
lea
cltd
icebp
fistpll
and
add
dec
lcall
out
add
loop
imul
xor
std
dec
mov
mov
sahf
aas
es
cmpb
sub
in
add
pop
sub
aaa
mov
or
cmp
sub
sbb
popa
ret
jp
sub
arpl
push
cmp
mov
mov
sub
adc
inc
jno
mov
xchg
popf
mov
mov
lahf
push
repnz
mov
test
fld
rcll
setae
sbb
cmp
cwtl
repnz
std
dec
push
filds
xchg
sti
mov
stos
mov
bound
cmp
lret
sbb
loopne
or
pop
and
pop
xchg
stc
dec
flds
dec
mov
push
push
pop
pushl
push
pop
push
cmpsb
sub
mov
dec
aad
push
jecxz
adc
ljmp
pop
inc
inc
xor
lea
dec
sbb
call
nop
popf
sub
push
inc
sub
cli
int3
mov
cmp
enter
xchg
adc
lret
push
bound
lret
cmp
lods
pop
jl
ljmp
rorb
mov
aad
subb
out
call
outsl
rorb
test
mov
push
cwtl
jbe
mov
jns
movsl
arpl
cmpsb
fiadds
outsb
pop
sub
xchg
mov
pop
pop
test
fists
insl
pushl
push
and
mov
ds
in
popa
pop
mov
mov
xchg
mov
lret
fimull
sub
jmp
mov
add
movsb
jbe
lcall
inc
and
imul
aam
xor
pop
sahf
cs
stos
xor
call
push
jbe
dec
push
test
shl
popa
xchg
es
clc
push
in
into
jmp
add
or
lret
push
mov
dec
test
int
jle
subb
ficoml
add
mov
jbe
outsl
imul
sbb
lods
mov
jae
popf
mov
xor
or
pop
push
je
leave
sbb
fucomip
push
dec
sbb
aad
or
sbb
stos
in
popa
sbb
sbb
pop
lods
ds
adc
scas
les
outsb
pop
sbb
out
lods
divl
fsubs
mov
lret
out
xchg
or
ss
xor
lret
mov
addr16
mov
loopne
repnz
sub
pop
pushf
or
mov
mov
and
fs
rcll
mov
insb
leave
cmp
int
inc
sbb
dec
jp
addr16
mov
xrelease
sti
fcmovb
xlat
sbb
dec
and
inc
imul
test
pop
ljmp
xor
loope
jae
cmpl
push
jns
push
jp
adc
icebp
jle
pop
ja
jae
adc
mov
subb
stos
jae
push
dec
sbb
xor
push
sub
xchg
insb
fcomps
cmp
mov
call
xchg
mov
cwtl
lahf
mov
imul
pop
aaa
dec
and
xchg
mov
push
lock
sbb
xor
sbbl
sub
xchg
sub
test
sbb
scas
xchg
and
xchg
imul
xchg
fwait
into
lcall
enter
jmp
xchg
lods
pop
xchg
cmpsb
and
jg
xor
out
push
sub
fwait
ds
pop
bound
jne
loop
stos
cmp
movntq
sbb
mov
les
push
mov
ss
pop
pop
pop
dec
iret
pushf
sbb
sahf
test
call
test
mov
insl
testb
clc
push
xchg
nop
insl
add
or
out
fsts
inc
jmp
push
scas
subb
out
into
data16
fisttps
iret
ret
movsl
stos
jecxz
xchg
sahf
ja
mov
ljmp
push
clc
sub
rorb
sahf
vcvtsd2ss
scas
pop
mov
movb
ljmp
fnstcw
inc
adc
dec
xchg
cmc
movsb
pop
and
mov
nop
cmp
mov
cmp
cmpsb
packuswb
xchg
add
aad
add
lret
push
rorl
cmpsl
in
nop
aad
cmpsl
insl
ds
cmp
jg
stc
push
push
lret
stos
gs
adc
fdivrp
add
add
cmp
loop
and
inc
sub
ljmp
sahf
push
lock
fst
mov
mov
leave
out
jbe
mov
xor
loopne
repnz
sbb
jmp
or
test
push
jmp
jnp
test
mov
mov
xor
mov
push
cwtl
or
fwait
and
ret
and
lcall
arpl
xchg
jne
adc
test
sub
mov
fistpll
or
cmp
cmpsb
pop
mov
pop
xchg
movsl
xchg
ss
ud2
gs
and
dec
and
shl
pop
mov
daa
pusha
push
sub
mov
add
sbb
ljmp
add
adc
das
iret
mov
push
jo
add
jmp
loop
negl
mov
push
push
adc
or
xchg
mov
popa
mov
xor
ds
aad
mulps
xchg
and
inc
enter
sub
std
loope
cmc
add
or
or
adc
sahf
mov
pusha
push
lret
mov
push
fidivrl
rcrl
sbb
iret
dec
fildll
sarb
outsl
inc
adc
enter
or
js
into
fidivs
insb
cltd
and
mov
cwtl
std
mov
and
push
movsb
lods
movl
imul
mov
in
jns
int
lahf
cmpsb
hlt
sbb
fadds
test
orb
sbb
push
call
lahf
inc
fldcw
sub
mov
xchg
aas
shll
repnz
add
mov
inc
jmp
push
inc
cmp
rcl
and
inc
inc
dec
push
sbbl
push
lret
rclb
les
add
jp
bound
dec
xchg
dec
xchg
add
mov
int
idivl
jne
xor
mov
shrl
pop
mov
leave
popl
and
vpcmpeqw
dec
lcallw
fistpll
sbb
fistps
in
sub
in
jle
stos
inc
in
jmp
lods
in
ret
pop
sub
add
ret
mov
ficoms
mov
call
movsl
sub
cltd
mov
sbb
mov
pop
mov
int
sbb
inc
push
out
sti
and
mov
xchg
cld
inc
clc
sub
daa
pop
leave
xchg
xchg
stc
push
lret
aam
mov
dec
sti
mov
ret
push
pop
xor
sbb
clc
and
push
push
jns
dec
xchg
cmp
movsl
lahf
scas
xchg
shr
daa
mov
sub
roll
sub
aaa
iret
inc
testb
xchg
arpl
adc
mov
add
imul
add
jg
leave
inc
xor
imul
mov
xor
xor
cmp
lahf
scas
jmp
call
add
ja
pushf
std
call
mov
and
cli
add
pop
js
faddl
xchg
push
int3
xchg
xor
int
bnd
stos
shrb
adc
sub
in
fists
sbbl
in
rcl
jge
mov
dec
pop
lret
in
out
lahf
stc
je
pop
iret
xchg
ret
lods
or
inc
popa
lods
xor
jp
ficomps
out
push
xor
les
ret
mov
int3
dec
add
xchg
pop
out
add
lret
mov
stos
mov
mov
shl
xchg
push
aaa
sbb
push
xchg
inc
in
pop
mulb
pop
mov
sbb
repnz
inc
xchg
sbb
mov
dec
sahf
lods
push
xorl
dec
out
test
dec
cli
bound
pusha
lods
sub
and
in
sbbl
cmp
lods
repz
out
test
shrl
push
mov
js
cmc
pusha
dec
lods
rcll
lds
cmpsb
fmulp
testb
push
je
mov
jg
and
dec
loop
or
mov
fsubrs
and
mov
jne
sub
and
push
adc
repnz
push
aas
pusha
xchg
xlat
or
testb
jp
sub
aas
lock
xor
pop
std
lcall
mov
xchg
mov
fs
xchg
jmp
add
cmpl
addr16
jns
cmp
xor
sbb
js
pop
mov
sbb
dec
mov
adc
pushf
std
dec
cmpsb
cmp
or
cmp
adc
pop
lock
call
outsl
xor
cltd
testb
push
lret
sarb
add
pushf
pop
jae
movsl
mov
mov
or
xor
jl
sbb
and
dec
arpl
push
decb
fadds
loop
or
or
sub
shlb
pop
jbe
pop
lahf
xor
clc
out
in
or
shr
mov
adc
push
mov
add
mov
mov
cltd
psubd
mov
jp
loop
iret
xchg
dec
jnp
xor
popa
in
fs
cmpsb
xchg
push
fidivl
push
fsubrl
fstps
push
push
add
scas
pop
dec
jg
sbb
cmp
divl
test
icebp
lret
sahf
out
xchg
mov
mov
lret
pop
sub
cmp
imul
fwait
xchg
fs
push
jg
addr16
add
dec
dec
and
aad
imul
mov
imul
cmpsl
pop
cmp
mov
lret
xor
mov
inc
call
adc
sub
pop
pop
add
add
push
add
imul
jnp
dec
jg
jl
data16
pushf
mov
inc
add
adc
lock
lods
cmp
cmpsb
adc
adc
gs
mov
fcoml
sbb
add
xchg
mov
add
sub
jns
adcl
inc
repnz
jmp
gs
cmp
std
dec
movl
and
ja
xchg
cli
jp
mov
sub
lds
pop
dec
add
cmp
outsb
inc
insl
dec
lret
loope
loope
mov
sbb
mov
lds
movl
stos
push
enter
and
js
xchg
shlb
daa
add
fcoml
add
cmpsb
mov
cmpsb
and
adc
inc
loopne
sbb
ljmp
inc
cmpsb
nop
fildll
or
push
stc
dec
push
or
out
test
ftst
and
aas
test
cmpsl
pop
cwtl
adc
mov
xorl
mov
cmp
sbb
rol
bound
mov
lods
aaa
cmp
add
fcoml
xchg
push
inc
add
pop
jb
xor
xchg
cmp
je
inc
test
push
incl
rep
movsb
fs
push
in
inc
dec
outsb
mov
fs
dec
or
or
ret
fnstenv
test
lods
lods
fsub
mov
push
loope
lds
inc
xchg
add
push
jle
mov
xchg
add
cltd
pushf
lcall
xchg
xor
into
xchg
mov
push
pop
data16
push
sub
adc
stos
leave
inc
mov
mov
xchg
bound
enter
xor
fstpt
cltd
cmc
sub
cmp
lock
mov
xchg
push
or
ds
pop
les
pop
cli
enter
mov
inc
cld
and
sub
jne
pop
xor
insl
into
or
cmp
jg
sub
cltd
insb
jmp
inc
sub
mov
inc
push
fbstp
stc
outsl
pop
les
fistps
cmpsb
sbb
and
fwait
lea
cmovne
cltd
xor
call
clc
mov
mov
inc
fwait
clc
mov
add
mov
addr16
push
add
sbb
es
clc
sbb
add
add
addl
and
ss
sbb
cld
popa
pop
test
xor
xor
cltd
push
loopne
pop
test
lret
xor
or
ja
std
insb
sbbl
cmp
lea
popf
push
sub
sbb
sbb
cs
std
pop
jnp
int3
cltd
and
jle
sub
sbb
mul
push
dec
mov
mov
mov
lcall
fldl
or
js
pop
sbb
mov
in
lret
push
mov
xchg
lahf
fnstenv
dec
lods
dec
sbb
daa
jle
push
lods
jecxz
and
jg
sub
mov
jmp
jmp
cld
or
ret
sbb
and
sbb
test
sbb
lods
sbb
sahf
sub
out
fsubs
sbb
cld
mov
in
fisubrs
inc
sar
scas
xchg
or
inc
push
push
sub
sub
daa
lret
jge
cmp
dec
add
icebp
mov
sbb
lret
mov
mov
frstor
sub
mov
cmp
out
add
aas
cld
call
sbb
mov
cmpsb
mov
pop
ret
mov
imull
xor
imul
adc
sub
inc
fists
imul
leave
mov
ljmp
mov
hlt
sbb
insl
pushw
push
pop
mov
adc
xchg
aaa
cmp
mov
mov
push
sub
mov
es
mov
pop
jp
mov
outsl
dec
cli
icebp
add
jl
push
scas
lahf
je
mov
in
xchg
xor
aad
insb
iret
aaa
pop
xor
lods
mov
repz
inc
mov
ds
es
out
roll
cs
xor
pop
aas
loope
lods
cmp
jle
sbb
inc
sarb
xchg
sbb
stos
jbe
cmp
lret
inc
inc
pop
imul
xor
subb
scas
nop
dec
push
jecxz
les
adc
add
mov
jo
leave
aad
push
out
pop
test
pop
mov
mov
pop
pop
sub
sub
scas
jge
cltd
lret
xor
fidivrl
jge
orl
jbe
push
fwait
or
insb
xor
cmp
lahf
pop
js
test
jbe
test
cmpsb
add
push
testl
enter
xor
lret
dec
add
inc
cmp
test
adc
out
xor
rorl
xor
pop
cmpsb
daa
or
lea
cmpsl
pop
inc
push
ds
dec
imul
pop
js
test
movsl
push
adc
or
negl
inc
ja
push
pop
idivl
int3
les
mov
cmp
and
mov
fistpll
mov
rcl
and
fnstsw
mov
es
mov
or
mov
lds
loop
inc
or
sub
popa
sub
cwtl
popf
iret
add
movsb
je
rep
xlat
pushf
into
pop
dec
mov
aas
push
mov
cmp
dec
shlb
pop
pushf
jno
push
enter
and
cli
jl
mov
outsb
into
push
mov
idiv
mov
add
jb
dec
pop
mov
jle
pop
dec
popa
push
inc
adc
loop
cltd
jb
sbb
rorb
scas
es
push
sub
out
gs
idivb
fisubrs
cld
mov
cmp
sti
mov
fwait
sti
movsl
jne
sahf
lcall
xchg
jb
cmc
inc
aas
fcomi
dec
das
inc
xor
out
imul
in
addr16
scas
loopne
jl
stc
inc
adc
stos
xchg
outsb
adc
pop
fwait
mov
mov
mov
mov
jb
push
aam
xor
xchg
mov
nop
scas
lods
adc
pop
into
mov
sbb
into
mov
or
add
xchg
mov
imul
jle
jno
in
dec
pop
pusha
fisubs
add
or
push
push
inc
mov
inc
mov
mov
out
cmp
inc
mov
xchg
popf
sub
movsb
or
cltd
pushf
sub
push
idiv
cmp
sti
std
or
mov
pushf
push
adc
and
mov
imul
add
dec
stos
cmp
and
scas
xchg
fdivl
push
mov
ds
es
cmp
popf
sub
inc
mov
imul
mov
and
mov
mov
push
dec
ss
negb
clc
ffreep
clc
or
and
fdiv
dec
or
xor
add
inc
or
mov
and
add
add
dec
dec
lret
sti
lock
jle
push
and
lea
loope
cmp
lahf
or
test
push
inc
adc
xor
cltd
mov
clc
mov
push
pushf
ficoms
or
jnp
jb
out
xchg
ffree
push
jle
cwtl
lret
rorb
or
mov
jne
lea
arpl
cmpsb
sbb
mov
mov
bound
fadds
gs
sbb
adc
xorb
dec
popf
sbb
push
mov
je
inc
adc
mov
push
push
sbb
lods
rolb
push
dec
mov
or
aam
fistpll
push
popl
or
les
mov
je
adc
mov
jmp
ds
adc
pop
dec
sbb
mov
or
inc
loop
aad
mov
sbb
sbb
jle
mov
sti
andb
push
lret
psrlw
lret
inc
or
mov
pusha
xor
add
pop
out
mov
leave
adc
inc
mov
nop
adc
cld
roll
xchg
sub
in
jbe
sbb
rcll
inc
popf
ja
xchg
cmpsb
pop
push
out
jg
mov
add
or
out
ss
sub
fistps
cmp
cmp
and
mov
repnz
push
sbb
sti
inc
outsl
int3
popf
or
or
cmp
fs
outsl
or
das
ds
cwtl
mov
mov
lea
xchg
popf
in
mov
pop
vmovddup
or
int
dec
dec
sbb
mov
or
mov
push
jne
pushf
mov
mov
mov
lods
movsb
fnstsw
lret
in
ror
cmp
mov
add
dec
lret
mov
adc
cmp
data16
lret
pop
push
xor
movsl
sub
lea
mov
ljmp
xchg
cmpsb
pop
adc
adc
pusha
scas
or
cmpsb
outsb
out
cmp
fsubrp
cmp
lahf
cmp
jge
inc
pop
xchg
cwtl
aad
mov
xlat
mov
dec
call
ret
jg
addr16
fs
cmp
lret
out
push
out
jmp
test
inc
bound
sub
fmulp
sarb
xlat
jp
imul
pop
cltd
and
jns
cmp
dec
xchg
pop
push
pop
or
fs
xchg
enter
jnp
push
popa
cmp
mov
sahf
adc
call
mov
or
cs
hlt
std
lods
int
cmpsb
sbb
pop
dec
cmc
lods
ret
insl
cwtl
or
adc
mov
push
lea
push
sti
ljmp
mov
and
sub
shlb
cmp
out
mov
cltd
popf
mov
cmpsb
xchg
dec
pop
sbb
mov
sub
pushf
cmpsb
test
aaa
sbb
cli
into
mov
pop
xor
mov
arpl
js
fisttpll
inc
fisubs
xor
loop
jle
out
and
cmc
jne
sbb
jns
stc
inc
cli
mov
inc
jp
xchg
or
enter
jecxz
cmp
push
cmp
ljmp
daa
shr
insl
mov
lcall
shrb
or
or
stos
sub
hlt
lds
or
andl
lret
jo
mov
popf
sbb
mov
loop
call
jg
xchg
lds
leave
lcall
negb
popf
sub
sub
push
cmpsl
pop
leave
jno
inc
sbb
sub
outsb
notb
lcall
dec
sahf
lea
sarl
push
sti
sub
fiadds
push
test
mov
sbb
mov
fcomi
cmpsl
mov
mov
add
push
sbb
mov
cli
add
jo
adc
cmp
mov
mov
or
pop
mov
cmpsb
adc
dec
adc
mov
mov
dec
jae
out
mov
fcmovb
add
or
shrb
lret
out
adc
mov
cwtl
out
sbb
ds
inc
in
or
test
push
or
xor
pop
bound
mov
jmp
loopne
mov
hlt
ret
adc
adc
sub
and
loope
call
lods
adc
add
and
and
stos
or
mov
lcall
sub
or
add
into
cli
pop
inc
jno
sti
push
add
xor
cmc
enter
add
nop
hlt
out
sbb
and
lds
xor
inc
movsb
test
leave
add
jo
jno
xor
mov
shrb
inc
insb
adc
cwtl
test
xor
push
mov
lret
mov
mov
cli
xchg
fadd
lcall
push
xor
xchg
sbb
jns
push
and
xor
jecxz
mov
or
or
sti
and
dec
fcompl
ret
push
inc
sub
sar
inc
xchg
pop
sbb
pop
or
cs
sbb
rol
test
les
adc
push
fninit
repz
stos
xchg
rorl
sahf
test
add
inc
rorb
add
push
dec
lahf
pop
inc
cs
mov
inc
or
sbb
inc
and
ror
mov
and
ja
sub
idivl
scas
out
push
out
mov
xor
out
jl
inc
aaa
cld
stos
gs
add
pop
ret
pop
dec
enter
into
int
flds
data16
frstor
clc
test
xchg
push
sbbb
inc
xor
inc
mov
dec
inc
mov
test
stos
ja
movsl
in
ret
movsb
cmp
or
cmp
push
ja
xchg
mov
adc
mov
lods
lahf
imul
mov
jbe
jns
cmp
ret
and
or
dec
pop
sti
pop
mov
inc
sbb
or
cmp
cli
mov
sahf
popf
sbb
repnz
and
xchg
adc
lods
sahf
jle
cwtl
sbb
and
mov
jge
adc
pop
pop
pop
mov
xor
aaa
or
mov
sarb
xor
adc
call
push
flds
xchg
pop
add
push
insl
mov
push
push
fcomi
mov
mov
adc
xchg
mov
cmc
imul
push
inc
into
inc
test
add
nop
and
push
lea
inc
in
insl
dec
lds
push
pop
jmp
add
aas
out
pop
cltd
outsl
pushf
loop
push
xchg
movsb
lds
call
or
xor
popf
and
mov
sahf
jo
sub
mov
mov
sbbb
pop
ret
and
sti
sbb
mov
leave
inc
aaa
or
fildll
inc
pop
ljmp
push
jae
lods
and
call
loop
std
aas
inc
push
push
pop
pop
mov
sbb
jle
inc
sub
sbb
push
adc
inc
cltd
jmp
jl
nop
or
stc
sbb
stos
aam
pop
imul
push
pop
std
bound
into
or
xor
jo
pop
bound
jl
lods
xor
dec
dec
sbb
cmp
pop
xor
inc
jecxz
or
lods
movsl
fsubrp
fiadds
sbbl
pop
popl
mov
mov
sbb
xchg
popa
sbb
dec
mov
dec
rcrl
inc
test
mov
xchg
call
cmp
int3
movsl
jmp
enter
jmp
call
jno
add
or
mov
repz
ljmp
iret
cmp
pushf
mov
sar
cmpsb
mov
lds
sbb
or
dec
ret
xchg
or
push
mov
jno
inc
dec
jnp
and
daa
jp
pop
rorl
aad
es
rolb
sahf
dec
bound
rolb
lods
mov
pop
push
mov
nop
dec
and
cmpb
add
pop
cmpsb
stos
and
dec
sbb
sbb
out
mov
adc
es
cld
and
stc
adc
adcb
ds
aam
inc
dec
cltd
mov
fwait
les
xor
pushf
adc
rcrb
out
add
add
dec
stc
push
imul
push
cld
mov
shll
mov
cwtl
outsl
mov
retw
scas
add
data16
sarl
add
mov
xchg
mov
adc
add
sti
jmp
pop
jl
xlat
push
cmp
inc
mov
cli
inc
push
js
inc
jne
sbb
test
mov
mov
inc
nop
mov
pop
icebp
scas
cli
shrb
imul
pop
or
shr
pushf
sahf
sub
hlt
mov
in
xchg
movsl
ret
cmp
adc
inc
inc
cmp
mov
and
mov
adc
into
fs
in
ror
lcall
in
fcomps
cmp
out
jle
sub
lret
dec
pop
or
popf
mov
popf
mov
adc
sbb
pop
push
mov
mov
loopne
xlat
ret
dec
sub
aas
out
jl
scas
imul
or
decb
cltd
imul
sub
cmp
adc
xchg
out
les
mov
jecxz
dec
es
sbb
lret
add
sub
jge
push
mov
mov
mov
das
sahf
sbb
pop
pushf
push
cmpsb
mov
add
aad
and
sub
adc
mov
sti
pop
cltd
sbb
push
jmp
aam
and
pushf
cwtl
mov
packsswb
hlt
cmp
popa
repz
out
push
addr16
stc
or
daa
dec
nop
push
cmpsb
shr
xor
cmpsb
iret
fsubl
jg
push
inc
rolb
popf
lock
shl
add
shll
cmp
in
mov
mov
jo
stc
fldl
loope
repz
xchg
jns
inc
setne
mov
mov
inc
rolb
decb
xor
stos
mov
lret
mov
psubd
div
sbb
bound
ds
add
repnz
ds
push
pop
jbe
js
mov
xchg
mov
out
cmp
pop
call
fisubl
gs
ss
fwait
pusha
test
pop
sarb
aam
cli
fldcw
mov
lods
enter
roll
ljmp
andb
pop
or
inc
dec
loopne
std
cmpsl
jmp
in
sub
je
lret
jmp
xchg
adc
and
cmpsl
shlb
mov
add
pop
jmp
xchg
lea
mov
cmp
ret
xchg
cmpsb
cmp
xor
js
mov
sub
stos
pop
test
mov
mov
push
mov
and
jp
into
sbb
imul
call
sub
jle
scas
jnp
cltd
mov
sub
movsl
sbb
adcb
mov
sbb
mov
sahf
push
or
cli
or
cli
scas
vpsubd
gs
cmpsl
rorl
or
add
in
pop
testb
scas
mov
cmp
popa
movl
cltd
jbe
xchg
sbb
es
daa
pminsw
inc
mov
jnp
mov
lods
out
sbb
out
or
cwtl
and
cmpsb
pop
repz
and
arpl
repnz
fwait
sbb
fistpll
adc
cmp
cmp
or
out
stc
or
adc
pop
ds
lds
call
adcb
dec
pop
out
cmp
and
out
shlb
push
adc
nop
mov
jg
jns
pop
and
mov
add
xchg
pop
dec
ret
sti
ss
dec
ficompl
int
add
cmp
mull
roll
inc
cmp
cwtl
lret
jge
and
insl
pop
or
lea
ret
call
mov
push
cmp
aam
mov
jnp
scas
mov
push
adc
mov
jle
dec
ficompl
and
sbb
pushf
fnstsw
add
aad
xchg
cld
mov
ja
inc
push
insb
lods
jo
ficompl
outsl
mov
aaa
popf
clc
out
and
mov
leave
inc
aaa
mov
inc
fdivl
das
aam
scas
das
in
cmp
and
jge
dec
xlat
add
cmp
mov
inc
jle
inc
adcl
stc
pop
nop
or
push
jns
call
dec
test
in
lahf
push
lds
mov
xchg
cli
loopne
dec
fidivl
inc
fnsave
mov
loope
aam
inc
mov
inc
sti
and
push
jbe
inc
insl
mov
mov
sub
mov
sub
jno
mov
jecxz
pop
bound
sahf
in
and
cmp
fld1
push
aaa
inc
mov
add
cmpps
fadds
mov
rorl
andl
pop
mov
jb
pop
mov
incb
jecxz
mul
push
and
mov
lds
jns
mov
out
sbb
inc
cmpsb
push
pop
rcl
add
fstps
lods
mov
cmp
test
jo
mov
pusha
jp
fimuls
or
fistpll
pop
pushl
jg
and
adc
push
sbb
fwait
push
iret
je
scas
std
pop
clc
les
sbb
lcall
xlat
mov
and
popf
or
testl
leave
xchg
mov
nop
xchg
outsl
or
ds
bound
mov
pop
sbb
orl
outsb
ja
xchg
mov
cli
popf
inc
test
shrb
fstl
sbb
aas
data16
inc
push
cwtl
lods
jl
inc
int
sbb
ret
mov
pushf
pushf
cmp
mov
dec
push
mov
scas
push
lcall
push
insb
mov
push
test
call
pop
arpl
lock
sub
mov
jle
cmp
inc
shr
add
add
xchg
int
popf
jnp
jge
pop
popa
sbb
cmp
jl
mov
push
pushf
test
sbb
jne
push
lret
leave
adc
popf
add
xchg
xchg
fcoml
adc
loope
sbb
pop
repnz
xchg
cmp
inc
int
adc
repz
lock
add
sub
push
inc
movsb
popf
or
stos
je
xor
mov
adc
xor
or
clc
pop
mov
cli
aas
imul
sbb
sub
mov
fbstp
lock
jle
sub
push
out
test
mov
cmp
mov
pop
call
testl
xchg
fcmovne
es
and
rolb
jb
stos
ds
cmpsb
add
sub
mov
fildll
dec
mov
mov
fistpl
std
cmp
dec
test
movsl
cmp
and
repz
add
pusha
sub
xchg
out
mov
daa
sub
fildl
sub
fists
data16
sub
sub
into
cli
das
or
fisttpll
scas
es
inc
sub
rcll
je
das
xlat
add
push
scas
lcall
dec
ja
dec
pop
mov
loop
cld
or
push
scas
adc
sbb
push
cmpl
lcall
xchg
xchg
dec
dec
inc
and
pop
in
lock
fldl
mov
xchg
sbbl
xchg
mov
jecxz
lahf
ss
aad
outsb
sub
lods
cli
sbb
hlt
enter
push
add
cmp
fisttps
dec
mov
pushf
fs
cmp
pop
dec
arpl
cmp
adc
jb
adc
xchg
push
mov
inc
xchg
cmpsl
les
call
jg
out
out
sub
out
leave
movsl
xchg
mov
movsb
outsl
mov
xor
cmp
lock
mov
inc
mov
rorl
and
lds
shll
ret
add
test
push
xor
notb
jmp
outsl
in
popa
loope
push
cs
aas
stc
pop
lcall
cmpsl
lcall
adc
mov
scas
rol
je
pushf
hlt
push
lret
ljmp
jg
or
mov
or
and
sti
jnp
mov
add
or
dec
lret
cmp
or
xor
lcall
test
xchg
in
inc
hlt
repz
mov
inc
cmpsl
xchg
shl
sarl
ss
add
out
popa
xchg
cmp
pop
out
mov
movsl
cmp
adc
jmp
and
cwtl
cld
cli
xor
out
inc
arpl
sbb
xchg
dec
xchg
pop
stos
or
leave
mov
inc
mov
divb
or
mov
pop
mov
ds
repnz
inc
inc
pop
aaa
les
pushf
imul
and
or
and
cmpsb
cmp
mov
iret
sahf
in
rcrb
sti
sub
ficoms
popf
jnp
ja
cmp
sbb
sti
or
xchg
adc
sti
pop
mov
addr16
dec
adc
inc
xlat
sub
movsb
pushf
inc
pop
fsts
dec
das
je
cwtl
cmpsb
in
ljmp
repnz
inc
pushf
fucom
aas
loope
ret
pop
iret
scas
movsb
mov
adc
fidivrs
inc
jae
pop
xchg
in
xchg
push
adc
scas
adc
int
adc
test
in
dec
push
adc
pop
and
mov
and
pop
jnp
sbb
cmp
sbb
test
xor
mov
les
repz
xchg
and
sub
or
fs
movsl
test
add
cmpsl
sub
out
pop
outsb
iret
pop
xor
lea
aam
jbe
outsb
push
dec
pop
push
mov
mov
test
sub
jecxz
sbb
lcall
cmpsl
int
or
cltd
nop
lret
ret
jae
test
scas
pmaddwd
jbe
xchg
mov
sbb
pop
fcomps
lock
pop
in
mov
stos
mov
adc
add
das
pop
iret
fsubl
pop
jns
mov
xchg
sub
xor
not
insl
adc
scas
push
rolb
cwtl
sbb
fucomp
out
xor
adc
xchg
pushf
es
mov
cmp
pop
mov
clc
mull
mov
sbb
or
cld
push
sbb
je
xchg
mov
cmp
ret
sbb
xor
add
shrl
dec
jo
adc
cmpsb
in
clc
cmpb
sbb
loope
arpl
cmpsb
mov
and
cmp
data16
aad
pop
add
and
dec
cmp
push
xor
pop
cwtl
pop
mov
or
or
jne
push
xchg
cld
mov
cmp
ds
jno
pop
cmpsb
pushf
sub
out
popa
test
and
mov
test
cmp
mov
push
cmp
repnz
dec
sbb
mov
xlat
cmp
sub
xlat
dec
adcl
add
add
dec
daa
cmp
adc
cld
mov
pop
and
push
mov
push
ret
cltd
int
mov
push
and
and
paddb
xlat
aaa
lahf
push
mov
mov
test
xchg
ret
pop
test
icebp
inc
or
add
mov
jns
fcomps
dec
or
mov
or
popf
std
cmpsb
dec
xor
test
and
mov
fdiv
mov
xlat
mov
push
pop
push
xchg
push
stos
sub
movsl
scas
addr16
aad
sub
adcl
push
push
outsb
je
call
sbb
negb
es
insb
mov
mov
nop
ret
fbld
xchg
out
fiadds
call
xchg
imul
sahf
pushf
lea
js
call
out
mov
dec
gs
push
add
ljmp
lret
out
ret
mov
testb
sbb
adc
add
pop
fists
in
incb
sahf
bound
insb
push
sub
push
in
inc
dec
jecxz
mov
pop
and
in
into
popf
add
dec
daa
test
add
ret
push
movsb
jp,pn
adc
lret
jb
push
jne
pop
dec
data16
fists
jb
lahf
inc
bound
dec
ret
out
js
add
pop
dec
rcl
mov
scas
cwtl
and
fstpt
or
cmpsb
popf
call
aas
dec
jno
cmp
int3
push
enter
sbb
into
pop
sahf
loop
lcallw
mov
xor
test
into
aam
mov
dec
fmulp
mov
mov
sub
adc
cld
xchg
add
lcall
cltd
sub
adc
test
aas
mov
inc
ret
push
data16
and
aas
adc
jp
sbb
pop
cmp
cmp
and
lret
mov
mov
pop
dec
pushf
in
in
sbb
cltd
jge
mov
loop
stos
in
and
and
outsl
in
dec
stos
loopne
and
jbe
fsubr
xchg
and
in
cmp
dec
in
fucomp
fdivrs
out
cmp
jecxz
fiadds
scas
pop
xor
icebp
xlat
rolb
jle
out
fadds
call
fdivl
and
jb
sti
lods
pushf
nop
jle
cwtl
or
cli
unpcklps
pop
mov
movsl
repnz
notb
cltd
cmp
jno
inc
ficompl
inc
shll
cmc
cmpsb
hlt
xchg
pop
insb
or
pop
test
dec
pop
test
bound
mov
or
popf
es
in
loopne
cli
sub
in
pop
push
adc
aas
in
sbb
addr16
push
dec
push
sbb
scas
iret
bound
nop
dec
test
inc
sbb
adc
sbb
notl
xor
cmpsb
dec
pusha
scas
mov
xor
movntq
inc
xchg
jns
push
inc
arpl
clc
iret
sbb
mov
dec
mov
out
dec
pop
add
or
sbb
dec
in
sbb
shlb
mov
lret
fisttpl
lcall
lods
loop
push
push
or
testl
sbb
push
or
cmpsb
or
cmp
inc
shlb
aaa
popw
adcl
outsb
jne
into
dec
bound
movsb
sti
jae
push
add
inc
bound
andb
push
push
inc
popa
movsb
or
fistl
mov
xor
fistl
lods
fcoml
sbb
jae
add
hlt
mov
insb
dec
movsl
cmp
sahf
call
mov
movl
add
out
push
cmp
jl
xchg
insb
push
cld
or
lret
mov
lret
rcrb
popf
mov
and
fildl
push
pop
negl
or
lret
cltd
xchg
shlb
das
jp
jle
xchg
sbbl
decb
bound
icebp
cmp
xor
shr
mov
ss
and
sti
xchg
adc
sti
mov
sbb
pop
jp
pop
fstpt
or
aam
out
movsb
mov
mov
aam
test
pop
orl
imul
repnz
add
cmpsb
scas
retw
fbld
push
fsubp
mov
test
pop
sbb
cmpsb
add
test
call
cltd
and
push
lods
push
loope
or
call
or
xor
xlat
insb
jo
les
loopne
lock
mov
xchg
ret
dec
in
jns
ja
test
lods
movl
enter
lock
xor
data16
in
inc
out
dec
popf
adc
mov
lret
push
mov
mov
mov
mov
test
sbb
gs
dec
cmp
les
cmp
lret
into
mov
add
pop
scas
cld
cmpsl
pushf
ret
int3
and
rorb
xchg
push
xor
cmpsl
mov
or
and
or
pop
xchg
or
pop
pop
inc
out
sahf
dec
lods
call
out
test
outsb
pop
mov
inc
or
push
test
ljmp
out
push
imul
pop
xchg
ss
push
repnz
sbb
jbe
jbe
add
cmp
dec
inc
out
cwtl
xchg
push
adc
jle
xchg
jecxz
repnz
int3
out
and
pushf
std
cmpsb
cmp
sbb
jb
inc
push
fldcw
pop
test
mov
bound
imul
mov
add
sbb
inc
in
cltd
aaa
lret
in
jno
mov
test
mov
xchg
aad
stc
rdpmc
mov
cmpsl
arpl
sub
push
shll
mov
aas
xchg
jle,pt
push
inc
add
scas
out
lock
xor
aam
cmc
lock
sbb
or
sarb
stos
dec
cmp
pop
xchg
cmp
int3
mov
and
adc
scas
outsl
fs
xor
or
xor
jae
mov
test
in
adc
in
icebp
mov
test
es
lea
push
push
lret
dec
divb
movsl
arpl
movsl
int
popa
movsl
mov
iret
mov
pop
adc
push
cmpsb
adc
ja
shlb
sbb
out
dec
and
xchg
adc
jae
imul
data16
daa
jmp
and
jo
out
cwtl
jns
or
iret
cmp
mov
and
pop
popf
arpl
cmp
push
mov
orb
xchg
jbe
mov
test
jle
adc
repnz
xchg
xchg
sbb
xchg
mov
mov
outsl
aad
addl
loope
sahf
mov
stos
ret
call
ret
mov
inc
ja
sub
fucomp
std
cli
jb
loope
sub
add
je
mov
mov
pop
lods
insl
mov
je
or
xchg
adc
out
sbb
imul
test
jbe
gs
jns
push
mov
jl
pop
ficomps
xor
out
pop
dec
imul
push
roll
jne
imul
xchg
mov
adc
ja
btl
xor
imul
aas
pop
xchg
jmp
mov
jg
inc
add
add
dec
mov
fadds
sub
xchg
sub
aaa
pushf
cmp
sbb
pop
inc
call
dec
mov
movsb
inc
jns
add
xadd
test
loope
cwtl
jno
xor
gs
sbbl
test
imul
jae
jo
cld
sub
repz
inc
fucomip
out
fdiv
shll
or
mov
pop
jbe
arpl
xchg
mov
cwtl
subl
inc
int
sbb
adc
xor
xchg
dec
mov
lds
adc
push
push
inc
das
leave
stc
cmpsb
mov
scas
mov
adc
cmovbe
mov
inc
test
cs
mov
out
das
or
stos
lods
test
cli
mov
push
push
arpl
push
into
cmp
scas
and
pop
pusha
sbb
das
jle
pop
cmp
mov
pop
out
cmp
popf
mov
inc
jecxz
lods
adc
lods
loop
je
inc
inc
jle
insb
mov
or
cmp
movsl
movsb
push
call
mov
push
or
adc
ss
cli
out
and
in
mov
add
cs
and
dec
leave
ss
js
fidivl
push
adc
mov
push
dec
mov
dec
data16
push
movsl
hlt
mov
loopne
pushf
aad
push
adc
ds
enter
call
xor
cmp
lds
dec
popa
add
ds
jmp
out
cltd
pop
bound
fucomi
push
lds
pop
add
faddl
enter
in
pushf
sub
into
jle
jmp
icebp
aad
cwtl
dec
adc
push
jmp
sub
pop
add
adc
jno
movsb
pushf
test
fstps
push
mov
jns
cltd
pop
test
jmp
sti
cmpsb
orl
add
adc
push
adc
xor
jne
xchg
and
es
xor
mov
fst
adc
pop
inc
pop
mov
gs
int3
cs
das
out
mov
push
and
outsb
leave
lcall
or
sbb
jno
sub
jp
cmp
mov
popa
inc
or
dec
out
out
mov
sbb
xchg
and
cmp
mov
cmp
add
pop
and
sbb
xchg
stc
mov
mov
mov
mov
jbe
mov
jecxz
sbb
pop
pushf
cmp
scas
mov
or
clc
js
ljmp
or
out
sti
rolb
cmpsl
repz
pop
mov
xlat
cmp
jp
sub
int3
pop
test
test
mov
aas
ss
ds
sarl
push
int
push
mov
aaa
push
or
sahf
or
push
and
std
inc
repz
loope
cmp
mov
sahf
or
xchg
push
fsubrl
imul
or
sbb
mov
shlb
inc
and
mov
cmp
fcoml
sbb
push
xor
adc
cmpsb
inc
add
jg
data16
dec
adc
xchg
cli
jns
xchg
sti
jbe
push
xchg
mov
push
sbb
cwtl
movsb
cli
int3
jecxz
sahf
jo
mov
jecxz
or
lret
sub
inc
add
arpl
pop
jmp
add
pop
pop
icebp
push
mov
inc
and
andl
addl
jb
mov
cmp
mov
out
lock
sarl
push
mov
adc
dec
inc
ljmp
jmp
lcall
aad
fcomps
std
fwait
pop
fiaddl
ds
cld
adc
inc
fistps
arpl
rcrl
repnz
into
pop
aas
out
jecxz
pop
dec
sbb
clc
in
out
cmc
ja
dec
jo
inc
std
arpl
xor
ret
push
inc
xchg
arpl
das
leave
mov
or
add
jne
inc
or
mov
lods
dec
jo
xor
dec
adc
mov
stos
xchg
dec
add
call
sbb
xchg
adc
test
mov
movsb
cmpsl
push
lods
ret
int
cmp
aaa
xor
enter
cwtl
cmp
adc
cs
pop
mov
mov
and
fisttps
popf
rclb
jnp
in
push
push
sub
scas
sub
add
and
adc
les
xchg
cmp
push
imul
or
aaa
cmp
cwtl
lods
lcall
dec
sub
lods
out
pop
fs
stos
roll
gs
out
jnp
gs
mov
ss
mov
xor
aam
pop
cmpsb
sbb
push
mov
rcrb
mov
bound
jne
inc
cs
or
leave
adc
es
pop
andb
add
fwait
orl
cmp
inc
scas
test
add
push
fcomps
stc
leave
xchg
xor
cwtl
sar
cwtl
adc
mov
ljmp
leave
xchg
cmp
lcall
test
arpl
dec
push
jle
lods
and
dec
dec
sbb
aas
shl
dec
adc
jae
xchg
push
adc
jo
stc
mov
xchg
xor
jecxz
jns
aad
cmp
xor
jb
pop
inc
sbb
lcall
cmp
xchg
inc
cmc
jp
pusha
mov
pusha
pushf
add
jge
dec
cs
fsubr
cmpsb
lods
cltd
sub
mov
cmpsb
sbb
loope
and
mov
loope
daa
xchg
data16
or
stos
mov
add
or
xchg
lods
sub
mov
cmp
push
out
mov
js
mov
cmpsl
arpl
ja
mov
or
enter
inc
mov
inc
sar
adc
leave
mov
movsb
stos
dec
add
in
bnd
dec
and
pop
sub
test
and
dec
imul
mov
cmp
xor
popf
xor
xchg
movsl
cmp
inc
mov
lahf
inc
and
fstps
or
cmp
add
xor
imul
or
mov
sbb
and
or
jae
mov
sub
jb
jmp
in
int3
add
pop
cmp
xadd
jo
lcall
repz
cmpsl
sbb
push
jbe
mov
mov
das
test
or
or
adc
popa
xchg
pop
rcll
sub
mov
cwtl
ret
mov
scas
mov
push
lock
cmpsl
divl
mov
out
sbb
pop
call
mov
in
clc
inc
ret
jo
fs
sub
ret
cwtl
dec
test
mov
jmp
shr
jb
insl
out
aad
mov
sbb
or
mov
jle
lods
pushf
mov
mov
dec
push
inc
and
xor
es
in
imul
pop
xchg
jecxz
adc
sub
outsl
push
loope
add
push
imul
xchg
sub
add
movsl
pop
jge
dec
pop
lods
push
daa
mov
daa
mov
sub
cmp
stos
das
cmp
or
scas
in
iret
iret
inc
mov
ret
xor
popa
xor
add
pop
mov
pop
adc
mov
sbbl
mov
jl
in
cmp
push
push
cmpsb
notl
mov
ret
test
pop
adc
inc
push
mov
rclb
sbb
mov
cmp
sub
or
loope
or
mul
or
out
aam
cltd
add
popf
fsubr
cmpsl
and
dec
push
mov
scas
std
push
daa
mov
je
sub
gs
cmpsb
mov
pop
stc
movl
mov
pop
cmpsl
mov
push
lret
stos
xchg
lods
sarl
xchg
mov
stos
scas
or
loopne
ja
push
in
mov
jp
or
mov
je
sub
lock
aad
ret
jge
test
xchg
jne
ljmp
mov
push
popa
out
or
mov
addb
test
nop
jle
nop
mov
and
stos
xchg
pop
adc
jl
and
pushf
rcll
scas
add
lock
or
mov
mov
lcall
imul
and
rolb
orl
xchg
and
pop
lahf
xchg
lock
or
leave
fstl
push
xor
fcoms
and
loopne
fwait
push
sub
adc
inc
popf
cmp
push
cmp
jge
insl
lods
imul
das
push
pusha
sbb
sbb
in
int3
lcall
sahf
in
clc
stc
push
lret
xor
idivb
repnz
cltd
daa
inc
pushf
scas
movsb
out
mov
jmp
out
lret
push
adc
movsl
inc
lahf
mov
fsub
xor
imul
jae
cmc
je
cld
pop
push
stos
into
mov
mov
add
inc
leave
push
roll
mov
or
je
popf
insl
vmread
adc
mov
rolb
xchg
gs
push
test
test
cmc
mov
mov
and
and
dec
xchg
dec
mov
and
daa
pop
add
clc
sub
fs
test
ficomps
out
in
stos
mov
test
aaa
xlat
push
push
les
sbbb
and
cmpsb
ret
aam
imull
repz
sub
lahf
ds
fistl
js
shrb
jg
push
pop
and
loope
mov
or
xor
push
insl
inc
jnp
add
jge
les
pop
jl
dec
loopne
adc
es
xchg
cmp
cmpsl
dec
psrlw
mov
xchg
aas
iret
pop
pusha
ljmp
ja,pt
enter
inc
mov
imul
mov
mov
push
pop
sbb
enter
xchg
lds
cmp
inc
and
cmpsb
cmp
in
aas
iret
fidivl
fisttpll
cmc
loop
test
fistpll
sbb
push
push
repnz
sti
mov
xchg
pop
pop
pop
frstor
lahf
xor
out
out
pop
add
add
mov
cs
jbe
fucomip
push
dec
fildl
push
sub
jg
jle
jnp
add
rol
sbb
and
fcoms
pop
aas
pushf
pop
sub
dec
mov
mov
mov
mov
fsubrs
mov
or
shl
loop
jbe
jl
mov
int3
ds
test
sub
in
sub
jecxz
aas
mov
jno
repnz
cmp
test
push
and
xchg
cmp
mov
xchg
jg
add
stos
outsl
inc
sbb
push
xor
sbb
sub
in
xor
jmp
push
int
stos
dec
xchg
push
xor
test
dec
xchg
inc
mov
and
lcall
dec
mov
push
dec
mov
rcl
xchg
mov
mov
mov
dec
pop
cmp
sub
sub
in
or
sbb
test
fmuls
jle
sti
and
xchg
jecxz
rol
repnz
sbbb
fisttps
cltd
cmp
sbbl
sub
mov
fists
dec
cmp
jmp
int
fwait
xor
fisttpl
cmp
scas
fs
inc
popf
lret
and
testl
lcall
cmp
sbb
inc
rolb
pop
pop
push
xor
loope
push
dec
mov
jns
popf
dec
ficompl
mov
out
cmp
fistpll
xchg
xchg
mov
cmp
int3
ficoms
dec
pusha
test
fstpt
fsubrs
sbb
and
inc
mov
sub
jp
and
fucomip
inc
sub
into
mov
xchg
pop
push
lock
sbb
sti
add
lahf
and
ret
xchg
dec
clc
or
mov
jns
fmull
sarb
xlat
addl
out
shr
mov
lret
mov
fisubl
mov
mov
aaa
imul
orl
aas
jl
pop
lods
mov
insl
aas
lret
subl
xor
mov
or
sub
cli
or
xchg
lds
cmp
cmp
xchg
cmp
push
mov
and
popf
cmp
clc
ljmp
ss
ja
inc
sub
std
inc
cli
mov
xorb
movsl
inc
popa
jnp
outsb
scas
xor
xchg
dec
or
dec
xor
push
mov
bound
pop
mov
daa
inc
mov
pusha
sahf
inc
and
fstpl
loope
movsb
push
test
add
xchg
outsl
out
dec
push
jne
cmp
cmpl
ds
data16
lea
mov
imul
push
jns
jo
adc
mov
scas
sbb
mov
push
sub
icebp
add
sbb
stos
pop
inc
hlt
shll
aas
adc
mov
daa
adc
repz
push
testl
decl
dec
aaa
adc
sbb
jge
fcmovbe
sarl
jecxz
shlb
ljmp
rol
pusha
lcall
adc
call
dec
fs
test
aaa
scas
add
push
fwait
int
fildll
shlb
sub
sbb
cld
push
lods
sub
aam
test
xor
add
and
roll
out
bound
cmp
dec
in
shl
pop
dec
mov
insb
nop
clc
xchg
hlt
into
mov
imul
dec
insl
std
adc
add
adc
mov
jb
sub
mov
and
adc
arpl
imul
jmp
in
lahf
pop
xchg
loop
clc
scas
push
mov
lret
xchg
and
sbb
or
jb
loop
xchg
and
and
xor
dec
mov
sbb
add
add
ja
cmp
cmpsl
mov
adc
out
add
in
mov
push
or
addr16
lret
and
int
popa
outsb
xchg
push
hlt
xchg
cmp
cltd
pushf
jmp
or
movsl
stc
popa
stos
sbb
hlt
xor
inc
pop
inc
ds
std
outsl
sbbb
je
dec
or
and
adc
lcall
mov
fsubp
ds
fwait
lea
scas
fldl
mov
cmp
ljmp
and
push
mov
cmpsl
or
cwtl
out
hlt
mov
lret
sti
int
adc
fstpt
fidivs
xor
push
ljmp
push
mov
daa
mov
fsubrl
jne
mov
fsubp
lods
les
test
std
outsl
pop
pushf
jle
add
mov
mov
xchg
lret
out
xor
mov
or
adc
xchg
int
lock
fidivrl
push
pop
pop
sarb
dec
ljmp
pop
inc
aam
rolb
sbb
mov
in
test
jp
ljmp
in
sub
jne
int
sahf
sbb
std
jae
cmp
ret
xchg
imul
pop
dec
test
daa
xchg
sarl
mulb
into
mov
jo
fwait
mov
out
rcll
pusha
iret
orb
xor
roll
fmulp
fistpll
mov
lds
lahf
dec
and
inc
cmc
dec
push
fsubp
or
ret
xchg
dec
pop
mov
popf
stos
test
push
mov
push
sub
mov
cltd
mov
jmp
xchg
xor
jecxz
add
pop
repnz
hlt
data16
lcall
and
jmp
jno
and
jl
dec
fdivs
jnp
mov
push
stc
mov
inc
dec
dec
pop
iret
iret
popa
loop
je
or
loope
sti
add
out
sbb
nop
stc
insl
pop
cmpsl
ja
sub
xchg
adc
sbb
hlt
fdivrp
fsubrl
loop
xor
xor
imul
jge
mov
stos
lcall
jle
out
adc
jp
nopl
pop
add
pop
mov
pop
cmpsl
dec
loop
inc
push
mov
es
push
in
add
orl
sub
dec
es
cld
inc
add
mov
xchg
push
aas
xchg
push
pop
rclb
push
or
sub
out
dec
push
arpl
add
inc
ja
jmp
dec
inc
addr16
jae
lods
test
push
ljmp
cmp
inc
lds
out
ss
in
pushf
lods
jecxz
test
or
std
xor
jae
lcall
xor
nop
sbbb
aam
cmp
imul
adc
test
das
fcmove
xchg
xor
enter
cmp
pop
mov
xchg
enter
or
pop
mov
adc
pop
adc
push
cs
jnp
pop
mov
sbb
movsl
ret
push
jg
fiadds
repz
inc
lods
mov
mov
movsb
adc
jmp
sbb
ljmp
jnp
loop
in
ljmp
or
push
rclb
movsb
ja
lahf
movsl
lds
xchg
adc
inc
stos
push
inc
out
sbb
movsb
jecxz
jb
jp
popa
adc
inc
ret
mov
es
add
push
loop
popa
addr16
repnz
in
int
ds
lcall
outsb
rol
in
fisubs
lret
or
pop
jb
negb
push
xlat
scas
mov
mov
push
jmp
jbe
adc
addr16
shlb
mov
lret
and
sub
cmpsb
mov
pop
and
mov
jle,pt
lahf
pushf
imul
in
add
ret
mov
lea
dec
bound
mov
push
jo
jg
or
ds
sbb
xchg
fidivrl
out
xor
imul
sbb
fbld
push
mov
jl
hlt
sbb
inc
and
jbe
adc
mov
sub
jl
ds
nop
subb
scas
add
sbb
lea
cmp
repz
outsb
and
push
pop
pop
sbb
ss
adc
loope
cmc
out
fists
add
mov
inc
xor
stc
shlb
clc
imul
in
sarl
sub
jo
mov
mov
aas
into
call
gs
dec
test
dec
cli
cli
ja
or
push
movsb
stos
xor
cmp
movsb
sbbl
addr16
pop
outsb
mov
or
cli
pop
lods
es
scas
mov
mov
inc
dec
lock
shll
test
test
in
jge
es
mov
daa
clc
xchg
cwtl
dec
mov
test
stos
loop
xchg
mov
jecxz
shll
add
out
aas
sahf
cmp
subl
inc
push
clc
sub
das
idivl
xor
jnp
movsl
sub
xchg
pop
cmp
sbb
insb
cmp
ficompl
ds
fimull
sbbl
mov
insb
test
or
mov
test
push
cmpl
stos
lods
test
push
aaa
ss
test
jmp
into
push
pop
push
adc
push
popa
lods
out
fst
jno
jbe
cmpsb
mov
ret
or
cmp
lods
dec
mov
jle
es
or
out
mov
inc
xor
jo
fsubp
mov
adc
xlat
lock
orb
push
xchg
hlt
push
or
mov
push
inc
cs
lcall
push
rcrl
jp
sbb
fistpll
cld
adc
jl
test
sub
jns
fs
add
cwtl
sbb
sbb
mov
jbe
push
fistps
test
lea
sbb
pop
ljmp
and
ja
xchg
pop
mull
and
pop
mov
or
stos
cli
cmpsl
cmp
int
sbbb
test
sarb
push
xor
pop
pop
scas
cmp
std
cld
arpl
pop
cmpsb
jle
sbb
pop
jno
sub
fistpll
scas
out
shl
ss
filds
cltd
je
add
adcw
adcb
xlat
mov
jle
sbb
sti
jno
test
lods
push
sbb
stos
shll
dec
xchg
sub
mov
pop
mov
jb
cld
cwtl
fsubrs
pop
std
scas
pusha
mov
push
shlb
pushl
dec
mov
add
cmpsb
rcr
repnz
cs
mov
outsb
dec
orl
xchg
fsubrl
daa
sub
dec
popa
sub
push
cwtl
xlat
mov
cmp
popf
jne
ja
outsb
push
and
int3
sti
subb
mov
pop
call
mov
es
or
divl
sbb
repnz
push
repz
jno
daa
jl
out
mov
push
mov
inc
outsl
lea
rcrb
push
and
mov
icebp
add
es
mov
insl
fs
movsl
mov
mov
test
ss
test
dec
xor
fstps
push
js
cmp
xor
jmp
push
stc
push
xchg
push
inc
jl
sahf
dec
mov
dec
xor
jmp
add
inc
fcomip
sub
jle
pop
dec
fcompl
mov
scas
mov
dec
cmpsl
push
lcall
pop
adc
sub
cli
rcll
xor
shl
popa
mov
sub
jg
outsl
subb
ljmp
lds
repnz
out
hlt
sub
and
jb
sbb
aad
pop
jb
les
adc
je
popa
scas
lds
inc
sarb
ret
dec
jge
cmp
lock
dec
adc
add
pop
aad
out
xor
pop
push
in
stos
sub
jl
lods
mov
mov
rorl
ljmp
sub
repnz
hlt
cld
mov
inc
test
mov
mov
shrb
lods
mov
sub
jo
sub
mov
push
in
pusha
das
push
aas
jno
pop
pop
mov
xchg
iret
inc
mov
jl
ret
inc
cmp
or
rorb
fcmovnb
jle
jl
ret
pop
test
sub
sub
mov
data16
inc
mov
mov
scas
push
inc
stos
insb
cmp
hlt
pushf
ja
dec
inc
imul
cli
sti
fcmovne
add
pop
cmp
testb
jmp
lret
es
out
inc
push
repz
stos
mov
shll
fmuls
ficompl
popf
adc
data16
arpl
sub
mov
shrb
push
xchg
repnz
pop
outsl
inc
sub
in
loope
push
mov
lahf
push
imul
pop
test
dec
insl
sti
sbb
mov
and
fadds
inc
das
add
jb
sbb
movsl
call
adc
cltd
arpl
mov
push
fisttpl
sub
dec
jle
test
inc
lahf
push
mov
movsl
pop
sub
call
cmp
test
test
cwtl
loop
cmpsb
mov
sub
inc
xor
or
shll
sarl
mov
mov
into
and
cmp
lret
xchg
inc
pusha
cld
jl
pop
inc
xlat
sub
ljmp
dec
sbb
and
pop
repz
adc
push
inc
lock
or
mov
stos
bndldx
add
imul
push
ret
push
lret
fwait
aaa
or
jnp
movsl
inc
jnp
pop
jge
mov
jbe
sbb
or
mov
lds
lret
mov
push
add
cwtl
pop
and
sbb
sub
rorl
push
pop
xchg
lret
cmpb
pop
cmpsl
fidivrs
mov
lods
inc
lret
fcomip
cmp
les
leave
jl
icebp
add
jns
call
mov
iret
je
mov
jecxz
aas
int3
aaa
lods
mov
mov
aam
movsl
popf
sbb
cmp
mov
lds
sub
into
loop
cltd
inc
jecxz
rorl
push
inc
cmp
jo
lods
cld
lods
and
js
in
sarb
arpl
xchg
and
inc
mov
xorb
mov
xor
stos
loop
mov
addr16
arpl
mov
pop
hlt
fcoml
movl
in
aam
lock
pop
or
mov
jb
xor
sbb
inc
bound
fildll
xor
sbb
push
sbb
movb
sub
test
push
stos
inc
dec
cmpsb
add
jnp
add
lret
mov
cwtl
leave
jl
cmp
lret
loop
or
adc
xchg
dec
mov
jae
in
into
test
jnp
in
or
ss
jge
in
xchg
mov
xlat
jbe
sub
cmp
dec
sbb
lret
xchg
inc
jp
jge
test
std
mov
fists
and
aam
xchg
mov
arpl
test
fs
aad
fidivrl
and
cltd
test
popf
cmp
pushf
loopne
adc
test
push
stos
mov
mov
adc
cli
mov
xor
lret
in
mov
pop
fisubrs
stos
dec
add
gs
lret
dec
sbb
dec
mov
scas
sti
adc
jmp
push
aad
xchg
push
mov
dec
iret
cmp
stos
jns
xchg
data16
test
jg
push
aam
js
cmp
add
jo
outsb
and
out
ret
xchg
out
mov
lretw
xchg
das
mov
cltd
das
iret
loopne
in
or
xchg
sbb
filds
lea
loope
and
cmpsl
mov
xor
insb
cmp
mov
mov
adcl
pop
ret
pop
xchg
pop
popf
sub
push
jg
mov
mov
mov
rorl
sbb
mov
stos
test
jno
je
push
lahf
cmp
pop
push
pop
movsb
dec
dec
scas
jge
cmp
sbb
mov
fisubl
into
int3
add
daa
sub
xor
inc
ds
out
inc
std
fists
or
das
test
lret
inc
sbb
lods
gs
xor
scas
les
loope
aad
jno
lods
sti
or
push
fldln2
addr16
mov
lds
popa
sub
test
shlb
lahf
out
aas
cmpsb
into
scas
xor
aas
and
add
sbbb
pop
neg
and
lahf
sub
stos
push
ja
pop
das
push
pop
mov
inc
lods
sub
mov
sub
cwtl
add
dec
sahf
inc
xor
adc
and
xlat
les
cld
pop
dec
jnp
gs
inc
jo
mov
cmp
cmp
loop
or
xor
leave
cmp
popf
cmpsl
neg
fimuls
lcall
sbb
cmp
ljmp
jp
mov
mov
imul
jae
mov
insb
jae
loope
adc
addr16
gs
and
das
imull
sub
xor
push
subb
ljmp
mov
fnsave
imul
shrb
adc
xchg
stos
sahf
mov
stc
fimuls
cmp
mov
divl
mov
inc
xchg
push
in
adc
mov
cmp
sbb
movsl
rorb
arpl
call
jnp
mov
shll
push
je
sub
sti
dec
adc
notb
call
sti
jp
ds
insl
inc
xchg
xchg
lea
ss
cwtl
dec
cs
mov
mov
bound
mov
add
push
stos
jae
jmp
push
adc
add
jbe
imul
dec
hlt
dec
rolb
ja
jecxz
jb
adcb
push
cmpsl
cmp
fbld
jnp
inc
adc
mov
mov
sub
ficoms
sbb
pop
push
gs
adc
cs
ja
call
loopne
add
setns
sub
cli
sbb
dec
cmp
jp
mov
pop
cltd
les
dec
and
movsl
lret
loop
push
into
jp
mov
jno
dec
xchg
mov
int
inc
mov
rcrb
scas
push
ret
out
jmp
ret
cpuid
cmp
adc
push
iret
mov
stos
aas
out
sbb
adc
fcoml
jne
mov
gs
popa
cmp
loopne
mov
decb
sbb
les
fadds
mov
pop
sarb
xchg
push
add
mov
stc
ljmp
cmpb
js
mov
cmpsl
ljmp
jmp
movl
mov
leave
leave
cmpl
push
arpl
sub
dec
and
inc
lds
mov
mov
push
lock
ja
dec
jg
repz
pushf
cld
ss
cmp
mov
fld
or
cmp
lds
mov
dec
inc
xor
mov
int
xlat
repz
push
xor
inc
push
pop
stc
fildll
adc
loope
lret
dec
sub
inc
jmp
scas
in
fdivrs
cmp
sub
cmc
adc
outsl
rolb
xchg
push
cs
mov
inc
shll
outsl
sti
ficomps
loopne
jge
and
pop
mov
stos
inc
xor
jne
sbbl
mov
sub
es
or
clc
pop
aad
inc
jecxz
fsubr
imul
jne
pop
notb
push
fwait
out
inc
mov
push
jb
sahf
imul
inc
sub
pop
icebp
mov
cmp
lods
rcrb
dec
aam
fcomps
pop
fstp
xchg
cli
movsb
aad
push
inc
add
inc
dec
cmpsb
add
xor
sbb
push
idivb
mov
sub
cmp
mov
out
inc
add
sbb
in
lret
stos
jecxz
daa
out
push
daa
jp
xchg
dec
cmp
notl
aam
daa
mov
sub
push
pop
mov
add
pop
dec
adc
pop
pop
fimull
loopne,pn
xor
subl
pop
xor
jl
jl
icebp
pop
cmp
push
stos
sahf
add
testb
and
xchg
mov
cmp
lea
mov
jb
add
mov
sub
mov
mov
add
sbb
cmp
daa
dec
mov
das
cmp
pop
sti
mov
fsubl
popf
fists
ss
or
fs
jns
int3
addb
mov
or
mov
inc
fildll
rcr
vucomisd
sti
das
rclb
or
inc
shrl
lods
gs
test
clc
jmp
jae
and
xchg
lret
ss
pop
and
enter
adc
jge
bound
and
int3
ds
cli
aaa
push
mov
mov
test
sub
cmpsl
fs
add
jmp
sbb
outsb
popf
pop
es
sbb
sub
std
outsl
mov
sahf
lods
shll
fistpll
ljmp
ds
push
push
or
xchg
sbb
sub
mov
mov
in
mov
fcoml
inc
out
push
xorl
push
in
aaa
call
pop
cmp
outsb
bound
je
sbb
je
add
xchg
lock
loop
jne
pop
incl
dec
mov
and
out
cmp
mov
loop
pop
xor
jp
cmpsl
outsl
mov
push
fisubrs
rcll
xor
adc
lret
push
mov
cli
imul
lods
popa
imul
popa
outsb
daa
ss
mov
add
repnz
aam
add
shl
fnstsw
scas
jnp
adc
arpl
imulb
inc
mov
shll
and
sbb
pop
pop
imul
pop
iret
and
push
add
pop
aad
call
and
xchg
frstor
out
fistl
inc
rcrb
xor
dec
push
es
xchg
pushf
mov
stos
cld
push
je
std
out
mov
lret
es
sbb
mov
sub
pusha
out
push
scas
sti
test
jo
mov
xor
adc
mov
push
nop
push
test
paddsb
cli
je
in
orb
sub
stos
sti
lcall
aam
hlt
ljmp
sub
mov
insl
inc
scas
in
cli
loopne
fs
jl
std
loope
dec
inc
ret
inc
mov
mov
fbstp
lods
pop
cli
push
test
add
push
scas
in
push
sub
push
not
sbb
dec
vcvtps2pd
mov
push
mov
push
pushw
rolb
stos
or
mov
jle
cmp
flds
sbb
inc
inc
cmpsl
adc
inc
push
jne
pop
ret
mov
push
sub
dec
outsb
lret
ds
enter
iret
xchg
ja
int3
adc
arpl
dec
sub
ficoms
mov
std
imul
xchg
sub
ret
add
pop
dec
xor
stc
cmp
aam
and
rorl
arpl
pop
sub
jl
arpl
das
cltd
push
xchg
push
ficomps
ljmp
lret
call
ss
in
and
dec
in
xor
in
loope
xchg
mov
loop
lret
add
xor
sbb
std
shr
int3
adc
cli
pop
sbb
push
sub
or
xchg
push
mov
fbstp
jne
and
jb
push
fdivrp
stos
pop
inc
mov
pop
inc
xchg
fcomi
pop
cmpsb
data16
lahf
inc
xor
adc
dec
int3
aas
adc
or
jl
in
pusha
in
sbb
cmp
push
mov
decb
scas
sub
sarb
lods
int3
and
push
aad
push
sub
sbb
shll
aad
int
xor
cmp
js
mov
dec
add
test
and
mov
add
xlat
aas
js
fsts
mov
sbb
rcl
jge
mov
mov
push
mov
add
jne
add
xor
out
xchg
popa
xchg
adc
adc
dec
ja
and
fs
lods
aas
inc
clc
out
inc
or
cmpsb
inc
xchg
sbb
jp
jnp
ja
mov
and
jecxz
xor
sub
shr
inc
inc
enter
outsl
lea
inc
sbb
repz
xorl
popa
lods
xchg
sub
inc
mov
popa
inc
fs
rcll
xchg
jnp
cmpsb
xor
pushf
fsubrl
push
fsubl
popf
fcmovnu
and
xchg
sbb
fidivrl
inc
cmp
push
mov
mov
repz
xchg
push
mov
jecxz
mull
mov
stos
out
pop
aad
stc
jns
inc
test
xchg
dec
and
mov
pop
test
pop
pop
mov
sbb
adc
popf
jge
adc
stos
mov
jecxz
push
sbb
xor
xor
adc
xchg
jb
pop
cmc
fiadds
mov
pop
addr16
add
test
xchg
jae
iret
push
fmulp
push
sarb
xor
clc
push
sub
jo
push
add
sbb
scas
movsb
mov
lods
dec
jmp
lcall
in
dec
shrb
loope
dec
push
popf
pop
clc
imulb
aad
sbb
das
mov
or
bound
push
mov
insl
sbb
push
movsl
clc
push
std
jecxz
dec
sbb
xchg
pop
fwait
je
jb
jg
xchg
cmc
or
jg
jle
addb
rorl
arpl
js
push
push
mov
ficoml
adc
aam
mov
loope
clc
xchg
fsub
sub
xor
sahf
and
stos
cmp
jp
mov
jns
outsb
jbe
dec
mov
mov
scas
mov
adc
mov
adc
pop
sub
arpl
pop
sbb
out
inc
add
in
dec
push
dec
or
jbe
adc
push
mov
mov
mov
loope
jne
es
lods
dec
xor
gs
mov
cvtps2pi
adc
es
xchg
add
orl
xor
out
decl
or
into
sbb
mov
jle
cltd
mov
sub
lcall
push
jle
add
or
jecxz
fs
mov
mov
mov
ds
in
inc
or
stos
sub
mov
dec
iret
or
lods
mov
lret
and
jmp
cmpsb
rorl
sub
mov
test
mov
dec
pop
outsb
and
mov
dec
test
cmpsl
and
inc
or
rorb
push
jo
mov
pop
int
outsl
lea
and
call
jae
or
sbb
jbe
imul
je
push
imul
clc
ret
fiadds
cltd
mov
inc
push
addl
jecxz
inc
jg
stos
ljmp
jle
mov
aas
aaa
aad
sub
shlb
add
lods
icebp
sbb
xchg
jo
loop
cs
push
push
inc
add
in
mov
mov
push
sub
pop
mov
mov
dec
call
pop
push
lcall
sahf
and
cmp
jns
ret
andl
insb
aaa
mov
xor
inc
mov
scas
mov
jecxz
sbb
xchg
lods
mov
add
xor
cmp
push
into
adc
dec
jnp
imul
stc
mov
mov
out
push
insb
mov
shrb
mov
sub
idiv
insl
orb
aad
test
sub
add
xor
mov
pop
mov
inc
dec
xchg
mov
mov
lds
mov
test
and
ret
xor
pop
dec
sub
test
int3
test
popa
pushf
push
leave
bound
cmp
xor
les
lods
pop
outsl
inc
rorl
movb
imull
add
mov
dec
pop
cmp
call
dec
cltd
jmp
sub
xor
pop
movsb
arpl
lods
add
push
mov
pop
roll
xchg
xchg
int3
cmp
xchg
sub
add
gs
mov
sub
fdivr
lds
pop
inc
out
insb
mov
ret
push
adc
add
daa
push
outsl
mov
push
mov
sub
jl
mov
pop
mov
into
jmp
movsb
lcall
add
js
rorb
in
loope
in
mov
sbb
out
ret
test
aam
sub
icebp
std
pop
call
decb
shll
cld
std
sbb
aad
sbb
jbe
jle
cmp
or
int3
frstor
lret
jp
ljmp
cltd
add
mov
and
das
movl
lahf
cld
mov
xchg
das
arpl
mov
nop
pop
xor
in
out
incl
sti
stos
lods
dec
out
lret
inc
nop
lods
bnd
sbb
cmp
pop
pop
pop
hlt
and
jo
adcl
adc
mov
out
nop
icebp
pop
inc
cmp
add
loopne
jns
arpl
das
inc
mov
roll
movsl
dec
jns
cmp
push
or
mov
push
sbb
jmp
sahf
mov
pop
out
or
outsl
out
sub
cltd
xchg
inc
stos
push
push
rolb
movsl
xlat
mov
std
out
cmp
aas
sub
sub
push
mov
sahf
add
aas
inc
add
cmp
mov
div
sub
je
fimuls
pop
aas
lock
aaa
xchg
sti
and
clc
out
jno
dec
daa
jns
stc
pop
xor
repnz
xor
jecxz
insl
mov
mov
xor
addr16
hlt
aas
jno
pop
or
inc
imul
mov
mov
inc
pop
lret
sahf
decl
insb
cmpsl
fldt
clc
sub
mov
mov
imul
imul
ret
dec
xchg
jl
sub
add
mov
inc
mov
rcrb
loope
out
cmpsl
jg
in
dec
out
shll
mov
ret
bound
dec
pop
jae
sub
fimuls
mov
mov
xor
sbb
in
sub
cltd
out
sbb
cmpb
sbb
cltd
gs
test
test
xchg
pusha
popa
out
inc
popf
jmp
insb
xor
faddl
fs
stos
enter
jl
mov
sub
pop
cltd
fnsave
xchg
cmc
jo
cli
xor
stos
stos
jnp
clc
inc
inc
mov
into
push
cmc
inc
dec
cmpsl
popf
cli
cmp
lods
cmp
int
push
test
stc
idivb
jns
dec
adc
stos
lea
lock
test
push
push
enter
in
divb
jp
adc
das
cli
xor
xchg
arpl
dec
sti
inc
adc
fsubrl
mov
adc
push
mov
lret
movsl
xor
fisubl
fmuls
outsb
shll
sub
xchg
sub
mov
cmp
mov
add
sub
cmp
jnp
inc
dec
sub
fidivs
hlt
sub
pop
xchg
jno
mov
jge
mov
mov
or
gs
jbe
bound
fwait
inc
or
xchg
jl
out
popf
cmp
fdivrl
pop
mov
sub
bound
jb
fistpl
and
xor
xlat
cmpsl
adc
cmp
inc
and
andb
xchg
cmpl
out
add
imul
sub
popa
lock
call
ss
pop
loope
out
loope
inc
mov
jmp
in
aad
data16
jo
addr16
push
inc
aad
dec
push
mov
test
iret
pusha
pop
add
jb
mov
les
mov
pop
inc
cmp
test
stos
inc
or
pop
js
inc
push
addb
lds
shlb
lahf
or
aam
mov
mov
xchg
xor
jne
sub
sbb
push
ds
dec
cli
xchg
addr16
inc
pop
xchg
cmpsb
les
je
dec
and
mov
jbe
jb
mov
mov
scas
inc
insl
sub
frstor
mov
outsl
or
out
fistps
mov
pop
mov
cmpl
stc
subl
add
sub
jns
jae
mov
mov
test
das
jne
or
mov
sub
mov
sbb
mov
in
popa
sbb
in
popa
inc
clc
and
and
pushf
xor
push
stos
mov
add
dec
cmp
fisttps
mov
addb
sbb
cmp
pop
aam
xor
lods
or
lds
sub
and
xor
mov
adc
leave
call
std
sub
mov
xchg
cmp
mov
sbb
xlat
sub
in
mov
out
packuswb
ljmp
add
mov
mov
outsb
cli
ss
repnz
dec
sbb
insl
enter
push
aas
inc
jae
movsb
popf
mov
add
xchg
fstps
fisubrs
movl
adc
cs
dec
fidivrs
and
repnz
sub
cmp
push
lret
ss
sbb
fimuls
lds
lods
cwtl
in
xchg
xchg
push
push
mov
dec
push
sub
sbb
inc
xor
aas
ds
stc
pop
lock
push
push
cmp
lcall
out
bound
push
add
das
pop
push
sti
add
fisubl
pusha
sub
jne
adc
push
push
sbb
pop
cmc
out
jmp
lods
xor
sbb
aaa
add
mov
loope
arpl
sub
pop
push
imul
pop
rcrl
dec
ret
sbb
sub
jl
mov
scas
push
mov
rorl
scas
clc
ss
xor
lods
xor
out
pop
xlat
lods
mov
pop
daa
jmp
fsubs
je
add
push
add
dec
adc
test
rol
jl
xchg
jb
nop
and
sahf
xchg
lods
inc
xor
xchg
lea
and
xorl
and
iret
jp
repnz
ficoms
mov
and
mov
mov
sbb
jmp
dec
mov
insl
or
psubusw
lahf
hlt
inc
bound
pop
cmc
repz
or
sbb
add
sbb
xor
mov
push
pop
ljmp
ljmp
lret
addr16
mov
mov
stc
aam
cmp
add
lret
fcoml
pop
pop
movsl
mulb
mov
inc
addr16
lods
sarb
sub
in
fldt
xchg
call
push
mov
popa
or
cmpsb
frstor
iret
sbb
cmpsl
fwait
push
jns
ficoms
or
jl
lock
andb
add
cmp
dec
sarl
out
inc
sbb
sahf
add
fwait
pop
cmp
xchg
xor
pop
cmc
sub
loop
or
sbb
into
sub
cmp
fwait
xor
lret
std
sub
ja
idivl
xchg
inc
and
aas
mov
out
sbb
cli
lds
jns
jmp
andb
mov
pop
push
es
cmp
comiss
popf
or
enter
mov
cmp
mov
ja
bound
arpl
xchg
push
out
jge
cmp
sbb
sbb
push
js
or
and
xor
inc
xchg
and
mov
stos
orl
dec
push
adc
mov
adc
js
xor
xor
call
pop
sti
mov
test
ds
inc
mov
push
lods
jp
push
je
lcall
mov
xchg
scas
fcompl
adc
icebp
jae
mov
addl
push
das
xchg
xor
or
insb
sbb
cs
push
js
in
add
and
mulb
lds
test
cmp
test
int3
cli
cmp
mov
out
or
sti
das
hlt
push
xor
and
in
in
ret
les
call
insb
stc
cs
or
lcall
leave
mov
mov
dec
aad
nop
sub
dec
sub
hlt
cltd
cltd
push
pop
pop
ljmp
lods
icebp
orl
and
pop
popl
mov
cli
push
cli
fs
lret
add
cs
addb
jecxz
lods
ret
mov
or
aad
fdivr
mov
add
lods
aam
stos
xlat
mov
sbb
das
pop
add
aas
iret
xor
jo
push
scas
daa
pushf
nop
cmpsb
out
fiadds
cmpsl
sub
sub
ds
loope
mov
mov
hlt
loope
xor
cli
flds
dec
inc
std
cmp
js
or
mov
cmp
mov
sbb
mov
pusha
pop
sub
xchg
inc
rclb
mov
pop
cli
jge
push
loop
push
pop
ljmp
lcall
gs
arpl
aad
jbe
aad
inc
aaa
popf
mov
pop
and
bound
push
jg
mov
xchg
mov
sahf
outsl
in
jg
sub
fcompl
bound
adc
cmp
cmc
stc
pop
jle
push
test
cmp
arpl
stos
pop
cmp
outsl
leave
insl
cmp
enter
pop
pusha
or
mov
repz
leave
lds
aaa
pop
inc
and
in
std
fucom
pop
in
addr16
std
add
push
popf
ds
ds
aam
loop
and
testb
gs
adc
push
xchg
xchg
lret
or
sbb
lods
orl
iret
sbb
push
push
dec
testb
push
data16
mov
xchg
imul
cmp
movsb
outsb
loopne
je
das
add
adc
lds
out
lods
repnz
xchg
add
push
repz
sub
clc
aas
cmpsl
add
cmpsb
dec
cltd
sub
rclb
or
pop
je
jp
pop
stos
in
inc
adc
cmp
mov
mov
fiaddl
icebp
dec
add
enter
add
ljmp
jb
add
cwtl
enter
stos
push
xor
and
pop
sbb
insb
das
repz
ja
or
jns
cmpsl
fbstp
test
cli
mov
cs
sahf
repz
sbbl
es
pushf
bound
rorb
test
addr16
test
fwait
negl
push
and
test
arpl
outsl
ss
je
rclb
mov
mov
xchg
mov
dec
dec
sbb
xor
add
inc
incb
aaa
call
cmpsl
je
movsb
out
xchg
mov
pop
add
dec
or
cmp
push
xchg
xchg
or
xchg
and
adcl
iret
inc
xchg
xor
out
ljmp
mov
pushf
fst
shl
rorb
sub
out
dec
sbbl
add
or
lea
fwait
pop
xchg
cmp
sbb
mov
popf
scas
hlt
cmp
fs
mov
outsb
jp
les
popf
push
or
jle
jne
add
pop
cld
jns
push
jbe
repnz
arpl
and
sub
cld
sbb
dec
mov
cmpb
inc
adc
mov
or
mov
stos
inc
sub
inc
mov
outsl
mov
scas
mov
inc
ljmp
jl
iret
in
inc
jecxz
cmp
dec
cmp
inc
rcr
dec
mov
ss
lock
daa
daa
mov
mov
aam
pop
int
push
insb
mov
ja
aaa
jb
ret
lods
cmp
sti
loop
mov
xor
gs
mov
cli
cmpb
mov
insb
out
pop
add
daa
insb
mov
in
lahf
add
xchg
inc
out
xchg
push
inc
sbb
inc
or
fildll
aas
mov
sub
js
pop
and
pusha
pop
add
pop
push
ds
inc
mov
push
lret
das
pop
mov
add
jecxz
lret
pop
loopne
int
aam
nop
std
mov
shrl
outsb
dec
pop
xor
sub
imul
fcomi
inc
lods
icebp
fwait
jno
ret
sub
mov
push
sbb
aas
fsubrs
cmp
shrb
dec
add
adc
mov
lods
sub
add
xchg
mov
pop
add
stos
loope
xchg
dec
stc
enter
jl
pop
or
push
lret
mov
mov
cmp
sar
int
xor
call
mov
jo
mov
dec
dec
xchg
jo
stc
xchg
cmp
xchg
loopne
aam
sbb
rcrl
fstpl
adc
aas
insl
je
fisubl
or
adc
cmpsl
fsts
mov
sarl
mov
xor
int3
xchg
lods
lret
jnp
mov
or
das
mov
sub
es
ss
out
insb
pop
xor
xchg
test
and
pop
out
int
and
aaa
stos
fwait
insl
mov
in
gs
ja
daa
lds
sbb
fidivrl
and
xor
mov
rcrb
outsb
or
in
push
mov
jle
sbb
push
pop
sbb
push
in
pop
push
decb
andb
xchg
xchg
sub
mov
fistps
movsl
loop
jb
ret
fdiv
xor
rcll
sbb
jne
xchg
push
ja
arpl
sub
sub
fldt
or
fsubl
das
fmul
adc
enter
leave
jbe
ss
sti
cli
push
imul
arpl
sbb
sbb
lods
push
repz
test
or
xlat
subl
sub
xlat
std
jnp
sub
adc
xchg
fimuls
pop
add
cmp
or
es
popf
cmp
cmp
adc
in
mov
pusha
daa
inc
mov
lret
add
and
rcl
dec
nop
xor
push
sbb
scas
sbb
popf
pop
cmp
mov
inc
add
je
and
sbb
cltd
cli
test
push
add
jle
pop
xchg
dec
fwait
or
bswap
mov
adcb
cmpb
sub
je
pop
loopne
aas
inc
ja
xor
movsb
in
pop
or
sub
stc
imul
gs
sub
fisubl
into
push
aad
test
jp
push
push
mov
push
cld
jo
dec
jle
lods
sbb
dec
add
adc
mov
movsb
insl
sub
mov
scas
sub
fwait
push
lods
shrl
jnp
out
loop
jmp
add
inc
add
xchg
out
test
xchg
gs
and
pop
adc
rclb
adc
jno
dec
movsb
fdivrp
adc
push
pop
add
in
popf
and
cmp
and
mov
shll
dec
popf
or
sbb
adc
add
rclb
xor
les
test
out
adc
aam
popf
push
repz
jge
jmp
mov
xchg
mov
jmp
adc
cmp
mov
fcompl
lds
in
pop
icebp
jno
fldcw
mov
test
xlat
cmp
repnz
mov
lods
sbb
test
cltd
mov
xor
jmp
aaa
ljmp
mov
dec
xchg
andl
lret
sbb
lods
jg
shrl
cbtw
adc
cmp
cld
sbb
jmp
scas
rcl
bound
aas
sub
mov
idiv
add
xchg
sbb
cltd
lret
popf
sub
push
bound
fwait
inc
ja
bound
pushf
out
mov
mull
cmpsl
jno
sahf
mov
pop
jge
leave
loopne
and
leave
pop
movsb
inc
lcall
inc
ret
dec
mov
sbbb
mov
pop
mov
jb
or
push
repnz
stos
xor
ljmp
shrb
ds
xchg
mov
or
add
fimull
dec
stos
mov
add
loope
push
xchg
or
js
es
test
int
mov
mov
add
and
ror
jne
js
rorl
fiaddl
enter
jge
xlat
aad
imul
dec
mov
jnp
push
adc
data16
and
xchg
andl
ds
cmpsb
sbb
jecxz
or
fcomi
movsl
xchg
xchg
ds
mov
push
and
inc
dec
mov
jnp
mov
adc
xchg
lcall
sbbl
push
lods
insb
pop
jns
ret
inc
insl
shlb
sub
test
mov
sub
cmp
shr
jge
mov
cmp
ljmp
lcall
dec
and
stos
std
push
sbbl
dec
and
mov
and
xor
pushf
add
sub
movsb
mov
sti
fidivrs
xchg
add
fs
mov
addb
lret
es
xor
fsts
in
mov
cmp
mov
rorb
sahf
inc
mov
jb
outsb
shlb
jg
jo
mov
stos
sub
push
ja
mov
cmp
pop
shl
push
xchg
lods
push
ja
xor
repnz
sub
xchg
in
or
mov
mov
xchg
fistpl
sbb
in
inc
bound
sub
je
sub
jnp
ds
cmp
fldt
xchg
adc
shlb
pop
mov
gs
sbb
jge
pop
sahf
std
xor
stc
lahf
mov
push
imul
fsubrs
cmpsl
lahf
mov
pop
mov
jbe
call
jne
mov
sub
cmp
shrl
adc
fldl
adc
fdivrl
dec
aas
mov
repnz
mov
pop
cltd
fld
and
lods
sub
mov
mov
and
cmp
cmp
add
leave
ret
push
push
sub
fcoms
aam
jmp
pop
xchg
rcl
inc
mov
mov
je
js
call
adc
add
fdivrp
mov
xchg
adc
dec
push
dec
test
es
jmp
test
or
lods
xchg
inc
or
leave
mov
mov
bound
dec
test
outsb
movsl
leave
sahf
jno
in
nop
jne
fldl
add
sbb
fisubrl
sbb
testl
sub
adc
int
lds
popa
or
push
and
inc
aas
add
pusha
pop
cmpsl
in
out
xchg
and
cmpsb
mov
aad
inc
out
dec
pop
cmpb
div
inc
mov
and
mov
or
call
scas
jne
insb
inc
ds
pop
mov
xchg
sub
popf
or
stc
fisttpll
hlt
add
imul
inc
mov
xor
add
mov
sub
jnp
stos
jb
aad
push
jge
or
xor
fnstenv
inc
aam
and
mov
xor
jno
sarb
xor
jmp
std
ret
pop
test
sbb
cmp
addb
nop
push
push
shlb
into
push
adc
fs
jo
mov
lea
adc
pop
stos
push
pop
clc
inc
jmp
test
or
lahf
dec
pop
test
xor
stos
xlat
pop
mov
fcoml
aam
xchg
xchg
stos
inc
std
push
sbb
arpl
push
jl
and
stos
mov
mov
lds
or
pop
pop
popa
aad
popf
rolb
repz
sbb
cmp
jmp
mov
outsb
push
push
xchg
xor
jo
add
sub
into
push
and
pop
cmp
sahf
cmp
sub
out
les
jns
pop
sbb
dec
cmp
jl
hlt
sbb
sub
add
jmp
inc
ljmp
add
adc
xor
stos
push
movsl
pusha
or
or
cmpl
movsb
fnstcw
pop
int3
lret
jnp
xor
jg
loopne
pop
rcl
sub
mov
pop
dec
mov
nop
dec
stc
int
cmp
xor
adc
stos
lds
mov
testl
sub
xor
cmp
lods
loope
jmp
jle
push
and
xchg
add
iret
dec
int3
ds
or
rol
dec
fcomps
sub
scas
mov
add
inc
lds
insb
cmpsb
xchg
sub
mov
aad
fwait
mov
xor
bound
test
mov
add
lcall
sub
ja
mov
or
das
movsl
xor
or
xchg
std
sahf
mov
sarb
cmc
leave
cmp
sti
push
push
shlb
add
out
es
push
jmp
cmpsl
cmpsb
loopne
cmp
jno
cmpsl
test
xor
or
mov
push
dec
or
push
mov
xchg
test
push
stos
movsl
or
ja
ret
and
sbb
push
sti
rcll
mov
scas
xchg
es
aam
jnp
lret
loope
jne
push
push
andl
adc
adc
mov
cmp
xchg
dec
mov
out
push
mov
bound
outsl
fs
lcall
cwtl
imul
push
cli
adc
or
hlt
pusha
ljmp
in
mov
sbb
push
sbb
dec
jl
in
jbe
cmp
push
addr16
xor
pusha
cmp
mov
mov
sub
push
rclb
mov
mov
enter
lea
test
mov
mov
movsl
jg
xor
mov
adc
add
mov
shrb
mov
xchg
sbb
pop
push
into
dec
bound
sbb
mov
ret
clc
or
mov
cmc
inc
adc
push
cltd
mov
cwtl
cli
xchg
sbb
in
sub
push
jl
aad
or
pop
xor
xchg
push
clc
lret
jo
lods
stos
add
cwtl
in
mov
push
sbb
icebp
cmc
sbb
mov
rcl
xor
cmp
jns
out
add
jmp
mov
jnp
add
lahf
cmpl
xchg
sub
adc
fcoml
loope
jbe
repnz
sub
inc
sub
ds
xchg
mov
inc
aas
jno
push
push
mov
cltd
lock
pop
stos
xchg
lcall
test
cltd
test
sbb
pop
mov
adc
jge
xor
sub
sub
mov
fdivrp
lahf
and
daa
cli
inc
pushf
insl
sbb
or
stos
rorl
pop
daa
xchg
das
out
add
fstl
jg
repz
adc
loope
inc
pop
gs
xchg
in
add
sbb
cmpsl
adc
cmp
clc
inc
fistpl
sbbb
xor
xchg
xchg
leave
mov
inc
jp
test
inc
mov
pusha
popf
aam
cmp
sbb
outsl
incb
test
insl
mov
xchg
in
subl
dec
loope
xchg
jns
or
jg
mov
js
mov
adc
in
jle
sbb
cmp
sahf
fdivrl
cltd
rcrl
cwtl
fidivrs
mov
inc
push
nop
int3
popf
inc
inc
aad
pop
clc
adc
jne
call
js
jbe
mov
std
movsb
push
imul
cmp
lods
sub
cs
popf
sbb
add
or
cmp
clc
xchg
sub
jnp
sub
inc
lock
testl
clc
and
pop
jge
cmp
les
pop
shrd
mov
pop
adc
and
gs
add
clc
in
xlat
test
dec
testb
xchg
sbb
jle
sub
aad
js
aad
addr16
aam
scas
dec
jecxz
mov
mov
push
inc
sarb
andl
stc
adc
fisubrs
push
imul
mov
stc
loope
adc
gs
aaa
push
xchg
jp
and
jnp
mov
inc
xor
sar
push
rcl
xchg
pop
int
insl
int
insb
inc
aaa
es
xor
outsb
mov
jle
add
xchg
dec
in
and
jbe
loopne
push
scas
mov
bound
mov
lret
jmp
bound
xchg
stos
notb
leave
dec
sbbl
mov
inc
and
or
xor
scas
addl
xchg
or
test
xor
aaa
sbb
inc
inc
loop
push
jo
adc
leave
add
in
idivl
lea
repnz
out
aam
ljmp
push
or
xchg
mov
cmc
std
std
or
in
mov
xchg
cmp
out
xor
jno
xchg
push
test
sub
pop
cmp
and
daa
aas
lock
jo
cmp
mov
rclb
iret
iret
scas
fwait
sbb
cmpl
jnp
in
jbe
mov
cmp
jmp
pop
xor
fsubl
dec
adc
mov
and
cmpsl
and
push
loope
sub
aas
xchg
ror
sbbl
mov
push
inc
push
push
mov
cmp
mov
mov
leave
cld
inc
das
pop
sahf
xorl
jg
push
sbb
add
cmp
push
lret
sbb
inc
cmp
inc
sbb
jae
lods
or
xor
inc
and
dec
push
inc
xchg
xchg
repz
test
xchg
xlat
sub
cmp
test
mov
mov
cwtl
xchg
xor
xchg
push
js
sbb
ljmp
pop
sbb
out
xchg
push
pop
mov
lcall
movsl
adc
and
adc
mov
aad
sti
push
negb
aas
pop
in
xchg
fisubrl
xor
mov
rcrl
pop
sbb
xlat
movsl
push
inc
subb
ret
cmp
out
decb
add
mov
xor
cld
fsubp
jmp
cmc
ficomps
hlt
inc
and
inc
neg
addl
das
pusha
je
xchg
inc
ljmp
leave
or
mov
lcall
push
mov
add
push
sub
lds
xchg
rcrb
rep
mov
xchg
inc
popl
xor
mov
ror
mov
scas
push
std
in
mov
aas
call
mov
dec
cld
or
fildl
jne
xchg
dec
out
fidivs
add
out
std
sbb
in
ret
dec
jmp
daa
dec
in
jo
fwait
add
dec
stos
fwait
cmc
movsl
mov
add
call
lret
div
lea
stc
jns
jmp
loop
shlb
mov
mov
sbb
cli
stos
fidivrs
test
xchg
pop
xor
jbe
rcrb
adc
stos
mov
enter
loope
or
sti
roll
es
out
clc
popa
scas
and
xor
sbb
mov
fs
ss
or
xor
push
movsb
popf
cwtl
xor
mov
lahf
stc
push
ret
inc
xor
addr16
imul
leave
dec
xchg
cli
mov
lods
jecxz
mov
cmp
pop
sar
dec
pop
cltd
add
fmul
xlat
jl
fwait
jl
call
mov
add
aas
xorl
daa
call
mov
add
lods
mov
mov
enter
push
mov
std
inc
div
shlb
movsl
cmp
mov
mov
sbb
fidivrs
es
shr
movsb
jl
jecxz
call
or
mov
aas
or
jge
pop
inc
pop
andl
mov
insw
pop
fnstenv
andb
push
mov
sub
lods
in
ja
push
inc
xchg
or
repnz
lahf
pop
mov
scas
jo
sub
test
daa
rcrl
pop
loop
hlt
dec
cmc
dec
jmp
loop
pusha
inc
push
fistl
ret
aad
pop
insb
push
mov
dec
movsb
clc
pusha
aam
in
lods
or
mov
popf
fcoms
lods
xor
out
sub
iret
frstpm(287
pop
mov
mov
xchg
dec
fs
imul
sbb
jle
jle
dec
and
mov
les
sbb
push
mov
addr16
add
mov
or
or
rcrl
push
adc
je
sbbl
mov
inc
in
aad
cmpsl
ljmp
jne
jg
cld
mov
or
lret
jns
cmpsl
pop
mov
lahf
pop
mov
xor
push
add
xchg
pop
jp
data16
pop
icebp
inc
add
pop
sub
mov
scas
dec
and
scas
mov
stos
dec
sub
inc
cmp
lcall
jl
mov
cmp
scas
cld
jbe
jns,pt
sub
xchg
fwait
dec
das
mov
jecxz
push
iret
jle
adc
lods
inc
push
and
sahf
fs
cmp
fisubs
add
mov
add
ds
pop
testb
lea
mov
cli
les
pop
out
stos
sub
jp
data16
orb
lods
mov
les
aad
cmp
sub
cmp
mov
inc
pop
sbb
cmp
out
xchg
ret
sub
jecxz
rcr
pop
xchg
mov
test
mov
cltd
add
xor
in
xor
push
sarb
jnp
adc
les
out
pop
in
or
std
adc
cmpsl
mov
sbb
push
pop
andl
fisttps
rcrl
mov
push
imul
out
cmpsl
or
les
subb
call
jg
das
adc
fbld
pop
inc
sbb
out
stc
dec
cmp
sbb
and
push
movsl
stos
aad
add
jb
pop
loopne
pop
out
xorb
dec
xchg
push
mov
sub
aad
subl
mov
add
mov
insl
sbb
dec
mov
mov
bound
addr16
sbb
popa
sub
jns
dec
fwait
sub
pop
shl
sub
fnstsw
fcmovu
gs
pop
sbb
mov
adc
cmpsb
push
mov
call
lcall
stc
pop
inc
xor
adc
div
in
dec
ljmp
loope
test
popl
inc
and
jno
clts
int
jle
test
add
jae
mov
sarl
push
sbb
ljmp
imul
mov
icebp
in
out
shl
cmp
stos
test
xchg
test
mov
push
iret
inc
lock
leave
or
xchg
or
dec
mov
push
mov
mov
stos
jno
mov
addl
inc
jb
and
xlat
daa
out
pop
sub
jbe
dec
jo
inc
or
jne
xchg
mov
stos
pop
xchg
lock
aaa
test
inc
push
jge
jge
add
popl
fdivrl
push
cmovle
data16
lods
sub
mov
pop
and
lods
sbb
test
push
icebp
mov
push
mov
iret
lret
add
in
mov
adc
lods
popf
dec
int
or
jge
insb
xor
int
andb
mov
leave
mov
js
mov
or
ds
aad
stos
and
xchg
cwtl
gs
and
push
iret
bound
dec
loop
dec
adc
inc
cmp
subb
movsl
add
or
jl
mov
sbb
cmpsb
ret
xchg
in
mov
dec
pop
jge
mov
in
push
and
jns
sub
and
jecxz
sarb
and
movsb
mov
push
outsb
push
adc
shrb
xchg
pop
aas
cmp
sub
xor
xchg
inc
jae
fsubrp
inc
jmp
repnz
imulb
push
iret
pop
inc
rclb
movsb
mov
pop
sub
xor
sub
jg
xor
sub
cmpsl
pushl
insb
lds
movsl
pop
and
leave
sbb
dec
adc
sub
mov
xor
icebp
xor
pusha
push
mov
mov
andb
xchg
or
push
jg
fbld
pop
add
cmp
sub
rcrb
inc
out
and
inc
movsl
stos
pmaddwd
xchg
pushl
dec
int
xlat
lods
xchg
mov
pop
cmpsb
leave
insl
xor
js
out
loope
int3
sub
mov
in
js
jmp
pop
pop
sbb
aam
adc
xchg
jnp
jbe
inc
loope
pop
test
mov
shll
inc
mov
in
jns
sub
popa
sbb
ret
adc
jp
xor
loope
js
fidivl
push
mov
dec
popf
inc
mov
push
mov
adc
jmp
daa
out
lds
cmp
sbb
ljmp
mov
sub
iretw
sub
scas
mov
andb
rcrl
scas
and
ret
outsb
fstps
mov
add
fisubrs
inc
mov
stos
insb
in
sbb
std
repz
int
aaa
or
inc
and
mov
cwtl
mov
sub
ds
push
outsb
lahf
add
jle
jmp
in
add
lods
mov
mov
jo
xor
imul
cwtl
jno
ss
cmpsb
jl
jmp
pop
push
lea
adc
cmp
lods
lods
mov
sub
cmp
mov
ret
sub
pop
pop
add
sahf
xchg
mov
pop
jg
sarl
cmp
outsl
inc
inc
cwtl
rcll
mov
push
shl
mov
pop
mov
push
add
rcl
enter
fprem1
xchg
dec
adc
pop
dec
push
or
and
cwtl
ljmp
cmp
cmpsl
movsb
incl
inc
out
fiaddl
or
test
inc
test
ficoml
mov
sbb
sbb
or
sbb
adc
pop
jo
jp
out
mov
sub
out
sub
mov
out
rolb
sub
xchg
pop
xchg
data16
in
sti
or
cmp
xchg
je
out
xor
inc
mov
ljmp
mov
test
addl
imulb
sub
rcr
jecxz
test
adc
inc
hlt
sbb
and
pop
sbb
pusha
mov
jns
xchg
fs
fwait
add
out
lcall
repz
sub
bound
gs
aas
mov
adc
jl
add
fistl
mov
std
int3
sub
cmpsb
dec
int3
or
cltd
and
dec
cmp
lcall
inc
lds
test
mov
push
sub
outsl
sbb
sub
push
push
imul
sbb
mov
or
dec
cmp
sbbw
lods
lahf
cmc
out
sub
lea
and
lds
mov
or
pop
aad
movsl
mov
imul
jnp
adc
aam
xor
pusha
mov
cmpb
push
movsb
popf
sub
sub
scas
push
imul
cmpsl
into
movsl
xorl
and
push
sub
push
jne
mov
xchg
push
or
std
std
cmp
mov
sbb
push
js
ljmp
nop
pushf
lea
dec
jl
dec
jbe
and
popa
xchg
mov
sbb
mov
push
mov
scas
sub
sbb
ret
and
dec
lahf
inc
sub
cmp
cvtps2pd
inc
mov
clc
imul
mov
outsb
test
push
and
or
xchg
lea
shr
cmp
mov
imul
dec
xrelease
movsb
call
mov
popf
jb
sub
leave
cltd
fimuls
scas
jb
mov
inc
sub
dec
testl
lods
jbe
pusha
add
and
lahf
inc
mul
and
pop
pusha
cmp
xor
int3
dec
mov
cmp
out
mov
mov
fdivr
repnz
in
psrlq
cld
rcll
add
fildll
inc
pop
jle
cmp
cmp
push
and
jecxz
mov
fs
xorb
divps
imul
scas
jne
lret
jae
cmp
jle
sub
sub
in
sbb
cmpsl
movb
dec
lcall
clc
push
xor
aas
and
clc
sbb
fwait
out
push
sbbb
mov
fwait
adc
inc
push
pop
cmpsb
cltd
je
repnz
add
ds
ljmp
in
pop
aad
dec
jecxz
leave
pop
mov
sar
lret
movb
icebp
imul
fbld
imul
mov
scas
inc
daa
push
testb
shrl
lret
xchg
cmp
jle
add
add
lret
cmp
fs
fbstp
negl
mov
cld
pop
sub
dec
movsl
add
pop
dec
shl
inc
scas
loop
jne
sbbb
arpl
les
bound
gs
movsb
push
pop
xor
mov
xor
cwtl
inc
mov
jnp
fwait
out
mov
mov
sub
adc
jp
inc
fistpll
andl
xchg
scas
and
lret
outsl
insl
clc
mov
xchg
dec
in
cltd
mov
daa
rorb
and
push
adc
mov
sbb
jbe
inc
add
in
ja
or
dec
xor
dec
lahf
stc
xlat
in
cmpsb
das
stos
je
mov
icebp
enter
mov
mov
jg,pt
gs
imul
lea
adc
mov
loope
inc
mov
sti
inc
aas
mov
and
mov
add
sbb
push
pushf
lds
and
inc
jge
ja
inc
sbb
scas
inc
cmpsb
stc
vpsrlq
inc
test
lret
dec
in
sbb
ret
and
or
sbb
mov
add
rolb
mov
in
jg
sbb
ja
xor
dec
inc
fidivs
push
je
fisubl
mov
and
mov
fdivrs
ds
pop
push
ret
test
hlt
ja
dec
mov
mov
lods
in
xor
sti
imul
push
xor
clc
rcrl
rorb
jle
clc
jl
stos
add
sub
sub
xchg
insl
xchg
sbbl
add
ud2
sahf
cmp
std
mov
sbbb
aas
cltd
fcompl
or
push
mov
push
into
or
movsb
xlat
cmp
loop
sbb
jp
pop
mov
adc
and
mov
jb
or
imul
xchg
cmp
add
adc
flds
gs
mov
scas
inc
mov
sbb
lods
and
out
mov
fcompl
out
cmp
leave
les
inc
fldenv
mov
pop
daa
mov
popf
in
hlt
push
into
pop
adc
int
add
push
dec
and
pusha
mov
pop
inc
stos
pop
cmp
sub
fildll
push
adc
punpckldq
sub
stos
jl
shlb
test
mov
out
in
mov
daa
mov
mov
sti
shlb
out
mov
jg
dec
cli
cmp
jbe
and
loop
mov
je
sub
mov
and
pop
sub
and
mov
inc
cmp
fstpt
cmp
lcall
adc
cmpsb
sti
es
or
adc
push
xchg
loope
repz
adc
sub
xchg
lods
dec
push
jl
daa
sahf
jbe
xor
xlat
dec
ljmp
test
or
jle
adc
inc
enter
mov
mov
enter
jae
out
jo
mov
lods
call
ljmp
repz
testb
or
mov
imul
sbb
cld
lahf
pop
adc
sbb
push
xor
jmp
xchg
ret
cmp
push
cli
lcall
pop
sahf
sub
cld
ret
testb
es
test
fdivr
dec
aas
xchg
mov
stos
sahf
sub
push
cld
or
movsb
arpl
sub
aaa
fisubrs
dec
in
dec
ja
mov
pushf
xor
mov
jg
or
cmpsl
xchg
fcmovb
fwait
and
es
xchg
je
subb
xor
lret
jo
push
movsl
pop
mov
xor
cmp
push
cmp
mov
sub
jo
scas
clc
ret
shl
xor
sarb
add
add
pusha
out
dec
dec
add
fimull
pop
cmpsl
cli
mov
cmp
xchg
adc
sub
sahf
icebp
xchg
cmp
sbb
sarl
dec
in
cmp
cmp
icebp
cwtl
test
ret
aam
mov
in
adc
xor
and
mov
mov
add
int
adc
xor
and
mov
jmp
and
movsl
add
push
mov
sub
ds
bound
subb
sbb
xorl
xchg
test
je
dec
add
iret
mov
das
or
push
addb
loope
sub
cmpsl
fdivp
or
push
sub
arpl
xor
es
mov
mov
sahf
outsl
push
iret
seto
sbb
lcall
imul
repnz
not
out
fimuls
je
jb
popf
nop
mov
lahf
leave
lret
inc
test
decb
inc
mov
test
xchg
push
cltd
push
or
mov
lea
pop
adc
xchg
fwait
mov
fs
jns
leave
pop
lods
aaa
mov
fisubrl
mov
es
fdivs
mov
and
inc
cltd
pop
pop
mov
fdivp
mov
jae
pop
call
dec
lret
xchg
imul
add
xchg
outsl
inc
out
mov
faddp
sub
iret
xchg
loope
scas
dec
push
mov
push
pmaxsw
clc
js
dec
scas
mov
sub
mov
cli
data16
movsb
adc
insl
cwtl
fisubl
in
daa
lea
aaa
aas
shlb
push
lret
adcl
dec
jmp
dec
loopne
xchg
mov
add
sub
in
dec
faddp
repz
test
mov
fidivrl
mov
pop
data16
xchg
jge
or
jl
les
scas
lcall
jno
inc
xor
sub
add
cwtl
cmp
xorl
xor
rorb
imulb
xor
test
pop
sbb
mov
or
test
cmpsb
into
mov
mov
lahf
fnstenv
and
pushw
pop
bnd
lret
pusha
sub
es
cmp
into
mov
cli
mov
scas
scas
dec
mov
scas
out
adc
popf
loope
repnz
shrb
fistpll
jmp
push
adc
jecxz
aas
add
add
subl
call
test
ja
loopne
es
xor
sbbb
dec
mov
fcmovnu
mov
sbb
sub
frstpm(287
inc
jne
mov
inc
scas
lds
stos
fldcw
xlat
jnp
imull
lea
sub
dec
jae
call
test
inc
push
movsl
jno
aaa
adc
cmp
js
sbb
inc
add
push
sub
pop
lods
xchg
inc
ljmp
push
jp
push
mov
adc
scas
es
inc
pop
push
in
scas
push
cmp
fists
sub
push
pop
insl
repz
sub
cmp
lds
xchg
jno
leave
fwait
scas
sahf
jecxz
ds
fisubrs
ret
pusha
test
cli
icebp
adc
pop
push
js
sub
leave
push
jl
inc
ljmp
call
aad
out
adc
xchg
dec
jae
jl
stos
sub
js
cmp
adc
inc
and
aad
popl
bound
testl
dec
sbb
sbb
outsl
shrl
sub
popf
sub
push
lcall
in
clc
popf
and
sbb
fs
pop
out
in
push
inc
bound
dec
aad
inc
xchg
push
cld
adc
sub
push
ret
or
sbb
sbb
adc
add
shll
jbe
lret
out
stos
add
jno
imul
lods
loope
js
inc
xor
mov
push
imulb
mov
sarl
add
and
cmp
clc
jnp
adc
addr16
sahf
fsubp
inc
pop
imul
xor
std
jb
sub
imul
adc
test
jne
insl
ds
sahf
cltd
scas
xchg
hlt
xor
adc
pop
stos
mov
mov
les
and
cltd
stos
das
jnp
shrl
inc
out
mov
sub
mov
jle
mov
clc
inc
jnp
inc
mov
shll
test
xchg
xor
roll
in
xchg
cmpsb
popa
lods
pop
cmpl
cwtl
dec
out
fs
icebp
dec
mov
es
inc
movsb
daa
pop
lcall
pop
mov
int
jg
pop
ss
pop
mov
mov
incl
icebp
enter
mov
fdivl
xchg
lret
mov
pop
leave
jecxz
sub
xor
psubsb
aas
sbb
adc
cwtl
sbb
shlb
sub
fs
or
pop
aam
inc
mov
lds
mov
jle
jmp
scas
pop
xchg
xor
jg
shrl
jb
test
dec
aas
xor
push
fisttpl
je
xchg
testl
stc
repz
mov
jb
pop
int3
out
mov
in
jno
push
lahf
ficoms
push
stos
in
orb
mov
fnclex
shrb
cltd
xor
sub
shll
rep
js
dec
cmpsb
and
rcrb
cmp
test
rol
jae
add
roll
adc
stos
jb
insb
and
jp
push
stos
add
scas
loop
cltd
nop
cmpsb
js
or
roll
pop
or
les
int
dec
jnp
or
dec
dec
xor
xchg
repnz
fists
push
lret
jecxz
clc
icebp
push
or
cmp
push
clc
jne
mov
jne
add
xchg
cmpsl
mov
and
fnsave
mov
xchg
mov
mov
incb
rolb
setle
push
pop
imul
push
jmp
lds
shll
pop
mov
mov
push
jl
inc
inc
xchg
out
fisttpl
testb
aad
adc
aad
repz
sub
roll
imul
jp
cld
xchg
js
pop
or
shlb
mov
outsb
je
mov
sub
inc
or
jge
scas
lock
rcrl
int
mov
dec
xchg
cmp
lds
mov
jg
mov
inc
call
adc
jns
int
icebp
call
aad
and
outsb
cmp
mov
aaa
out
mov
push
pop
rclb
inc
mov
into
mov
lds
scas
dec
push
call
inc
hlt
hlt
cmpsb
xchg
jnp
or
xchg
shr
test
jbe
xchg
adc
sti
movsb
aam
sub
icebp
adc
jp
xchg
daa
insb
mov
nop
cmp
push
shrb
icebp
push
loopne
mov
cmp
in
outsl
sub
xorb
outsl
pop
xchg
mov
xor
stc
xor
dec
xor
dec
and
xchg
enter
sahf
ret
dec
mov
dec
sub
aad
es
pop
fidivrl
cli
mov
outsl
fwait
test
ss
imul
in
xor
clc
sub
mov
lock
mov
and
ja
and
sti
imul
ljmp
mov
mov
lret
push
jno
mov
fdivrl
sub
lods
loopne
jp
jo
insl
add
stos
aas
mov
mov
ficoms
aaa
pop
xor
stos
mov
aad
rolb
in
sbb
cmp
dec
pop
fisttpl
xchg
jg
mov
fldl
hlt
jo
addl
adc
or
lods
jge
sbb
es
loope
dec
fs
or
mov
push
ret
mov
xor
xchg
cmp
rorl
aad
imul
aam
lds
sub
sbb
sbb
xlat
inc
dec
mov
in
mov
ret
pop
jb
lcall
or
dec
orb
push
scas
fwait
es
hlt
aas
jle
push
push
cli
enter
jo
stc
push
adc
add
adc
das
inc
cwtl
movsl
mov
mov
cmpsl
fsubrs
popf
inc
stc
in
lahf
ret
mov
cltd
mov
repz
inc
call
adc
loop
push
in
and
pop
shll
inc
lea
xor
push
push
loope
cmpsb
in
sbb
mov
stos
lahf
dec
mov
repnz
cmp
push
lea
fmul
adc
repnz
jl
test
in
aad
sbb
stc
int
xchg
cmpsl
push
push
push
js
cmp
pmullw
mov
push
mov
dec
fstl
sbb
jl
mov
aad
push
mov
xchg
test
outsl
loopne
xchg
xchg
sub
adc
mov
add
push
xor
inc
icebp
adc
or
inc
lret
jge
imul
dec
ficoml
enter
int3
in
cmpsb
add
cmp
lahf
out
add
out
push
hlt
push
call
cmp
fldcw
rcr
xchg
imul
addl
orl
scas
in
out
mov
pop
in
sti
pop
xchg
pop
xchg
or
inc
jecxz
es
cli
push
push
adc
sub
pop
xor
lds
and
dec
xor
outsb
test
xor
pop
iret
stc
xchg
add
jne
fldcw
jb
loopne
jns
sub
loopne
xchg
cmp
xor
mov
js
mov
pop
inc
adc
mov
add
lea
adc
stos
xchg
xchg
inc
sub
int3
lods
insl
inc
je
mov
xorl
cmpsb
push
outsl
das
mov
xchg
ret
aas
pop
cmp
std
cmp
scas
mov
xchg
scas
les
add
cli
push
push
mov
or
daa
or
iret
ficompl
mov
sarl
xor
push
xchg
outsb
cmp
cmp
mov
adc
dec
lods
xor
aaa
and
movsb
js
sub
stos
sub
outsl
mov
scas
mov
pandn
or
jmp
test
xchg
movsb
test
add
lods
shl
jae
push
idivb
ljmp
xor
stos
xor
mov
mulb
mov
or
mov
dec
js
sti
ss
inc
dec
test
cmp
mov
addr16
push
fmul
inc
imul
jp
push
or
insl
push
dec
daa
xchg
rcrl
or
daa
movsl
xor
jg
icebp
andl
ljmp
arpl
test
or
fimull
pop
dec
data16
outsb
sub
ret
test
sub
push
imul
inc
jp
jl
push
movsb
xchg
push
divb
repnz
adc
int
call
push
fwait
pop
popa
cs
pop
mov
and
xor
inc
out
sub
aad
and
pop
xchg
sub
push
xchg
test
addb
mov
pop
sar
das
sub
sbb
and
loopne
xchg
inc
test
push
mov
lds
in
dec
iret
das
in
cmp
cmp
jo
lcall
push
or
dec
outsl
pop
sub
outsl
push
push
mov
or
sbb
movsl
push
sarb
jmp
popa
data16
fs
and
cmp
mov
pusha
xor
hlt
jae
push
sub
push
mov
inc
test
cltd
sub
mov
jge
pop
inc
push
insl
cmp
gs
lods
add
push
mov
lods
add
call
enter
jl
jno
jae
mov
push
lcall
mov
xor
popa
jecxz
aas
inc
inc
add
je
jl
add
adc
jae
cwtl
and
inc
xlat
sbb
popf
out
fadds
aas
xchg
loope
popf
test
push
jmp
cltd
dec
pop
loop
and
nop
inc
fbstp
cli
push
flds
loopne
pop
inc
and
jge
push
mov
xor
inc
imul
xlat
in
arpl
jnp
and
pop
pop
inc
aam
xchg
adc
mov
es
and
push
adc
fisubl
mov
lds
jl
lds
cwtl
push
test
rolb
loopne
loop
and
sub
xlat
or
mov
sbb
in
push
push
jle
gs
mov
mov
test
xchg
fwait
jge
shll
lret
push
and
mov
movsl
dec
jecxz
ds
jg
pop
inc
cmpsl
jl
jb
dec
repz
std
repz
xchg
jl
sbb
xchg
xchg
fidivrl
add
into
or
addr16
add
call
in
push
and
add
ret
pushf
sbb
notb
imul
jmp
aas
in
xchg
mov
fs
lea
rorl
mov
push
dec
pop
pop
hlt
int3
mov
mov
push
pushf
pop
icebp
xchg
fdivrl
xlat
fs
mov
mov
mov
daa
mov
je
mov
movsl
movsb
jno
mov
mov
fnstcw
add
push
dec
xor
inc
imul
mov
add
decb
loop
lcall
xchg
push
mov
xlat
ja
leave
sub
push
loopne
xchg
pop
fbld
xchg
jnp
sub
stos
data16
fcmovu
sbbw
mov
push
or
out
les
pop
aas
sbb
loope
and
lahf
aas
das
hlt
and
imul
pusha
jmp
mov
lcall
jp
push
jbe
and
andb
pop
xchg
jbe
scas
xchg
imul
cli
loope,pt
data16
mov
and
sbb
pop
rcrl
cltd
lret
pop
mov
gs
cmp
lcall
test
and
inc
imul
mov
pop
add
mul
mov
jl
in
lcall
xchg
mov
xchg
fldcw
push
mov
sbb
xchg
loop
shr
mov
adc
lods
pop
jno
ds
push
push
mov
sahf
and
push
dec
and
lock
inc
mov
loop
mov
xor
ss
xchg
imul
lock
inc
aad
jno
scas
xabort
pop
rclb
hlt
xlat
mov
loope
xchg
mov
mov
cmc
scas
adc
inc
push
pushl
add
inc
sub
ja
incb
dec
pop
es
loop
sub
adc
popf
fcmovnb
lods
ljmp
xor
orb
aaa
ss
xchg
mov
shr
pop
enter
notl
insb
sbb
js
fstl
popf
push
test
push
mov
adc
jns
sub
push
mov
stos
lret
cmp
add
pop
loopne
shlb
dec
dec
and
scas
fcomp
xchg
mov
xchg
sbb
pusha
dec
mov
and
push
lahf
lock
sti
pop
aam
lret
cs
fs
push
push
jno
aad
insb
lds
xor
mov
push
add
mov
mov
mul
hlt
and
pop
iret
mov
fadd
adc
stos
or
and
or
mov
ljmp
int3
dec
insb
mov
in
xor
lea
xchg
aaa
pop
rcrb
dec
imul
xorl
cmp
mov
subb
test
mov
loopne
and
loope
fldcw
testl
fisubs
nop
sub
scas
test
xchg
leave
lret
cmp
aas
add
movsl
or
cmp
outsb
idivb
cli
sahf
add
fs
repnz
popa
mov
out
loop
sub
cld
rclb
sahf
popf
and
rorl
setle
cmp
pop
movsb
aas
insl
push
dec
ljmp
jmp
aaa
lcall
mov
jmp
xor
rcl
pop
xchg
dec
cltd
outsb
xor
xlat
test
sub
sbb
push
stos
pop
xchg
mov
or
out
pusha
jae
hlt
cltd
int
ss
aam
in
in
cmpl
or
cmp
aam
out
sbb
fiaddl
fists
roll
hlt
jae
mov
jmp
and
cs
xchg
rcll
or
xor
sarb
lods
push
inc
push
push
inc
cli
stos
fs
adc
xchg
inc
std
iret
mov
mov
ja
pusha
rol
inc
xchg
pop
jl
pusha
inc
ss
incl
and
or
xor
sub
sub
jecxz
mov
sub
adc
cmp
cmp
pushf
add
or
lods
jns
mov
push
mov
xor
sahf
push
add
push
cmp
inc
jae
mov
mov
inc
push
fdivrl
adc
mov
and
int3
aaa
add
and
push
cmp
incl
add
adc
push
mov
jecxz
sbb
jns
push
imul
push
ss
popf
rcl
test
inc
cmp
xor
xchg
cwtl
sbb
outsl
enter
xchg
pushf
shlb
lret
stos
pop
notl
arpl
xchg
push
fildll
sbbb
dec
or
push
or
mov
outsb
lret
cmp
pop
mov
push
bound
mov
testl
cltd
dec
add
jb
popf
test
dec
mov
sub
dec
scas
bnd
cs
sbb
fisubl
scas
orl
jl
pop
daa
pop
clc
je
pusha
cmpsb
pusha
outsl
insb
sbb
inc
xlat
and
push
add
lods
lds
clc
test
lods
test
xchg
data16
add
add
sub
rorl
repnz
pop
popa
sub
push
insl
xor
sub
sbb
rcrb
movsl
xor
test
cmp
mov
adc
stos
mov
sub
xchg
repz
loop
push
jae
jmp
repnz
and
mov
jo
daa
jp
stos
lock
dec
xchg
lahf
cmpsl
fwait
ss
push
mov
cmpsl
push
daa
pushl
sbb
mov
cmpsl
mov
xchg
rolb
iret
mov
mov
inc
mov
test
fdivrs
pop
repz
test
movsb
clts
cld
xor
pmaxub
add
and
out
lods
adc
jnp
subl
inc
jb
jecxz
jns
cmp
sbb
arpl
add
daa
into
xorl
or
xchg
mov
jo
popl
subb
and
push
cmp
mov
sbb
xchg
dec
dec
imul
mov
out
lock
mov
cmp
js
mov
jbe
cmp
xor
pusha
shrl
or
lea
movsl
stc
arpl
or
inc
cmp
xchg
lods
adcl
jnp
loope
pop
out
test
popa
pushf
mov
pusha
cmp
lret
jge
es
lret
int3
fcompl
cmpsl
and
scas
clc
xchg
aad
aas
ffreep
notl
mov
mulb
out
xor
sub
shl
sub
adc
dec
enter
pop
cld
push
adc
jmp
lods
sub
sub
mov
pop
je
pushf
adc
aam
fildll
sahf
xchg
xchg
rcrl
pop
dec
inc
adc
xor
inc
pop
std
jae,pt
sub
lret
andl
xchg
push
adc
cmp
nop
xchg
push
pop
loop
gs
mov
insl
jl
into
outsb
mov
stc
adc
mov
inc
shll
pop
dec
mov
shlb
arpl
mov
cltd
out
mov
jecxz
sub
cmpsb
xchg
lds
and
data16
int3
sub
adc
sub
loopne
rcrb
mov
xor
fdivl
xor
mov
push
je
xchg
xchg
push
dec
mov
dec
cmc
add
jg
dec
xchg
insl
inc
xchg
loope
xor
xchg
daa
sub
in
jl
fnsave
hlt
xchg
xchg
adc
dec
scas
cli
push
mov
push
and
mov
jle
outsl
xchg
rcl
rcll
cmp
loope
xor
and
inc
mov
and
scas
or
shrb
mov
or
test
enter
xchg
cli
cs
xchg
push
repnz
call
inc
mov
push
icebp
jae
xor
outsb
nop
jle
jl
loope
push
lods
and
pop
jmp
push
dec
divb
in
dec
rorl
add
jbe
sbb
sarl
jl
pop
popa
xchg
xchg
in
lock
mov
int3
out
jl
and
pushf
adc
sbb
pop
sbb
xor
push
in
cld
cmpsl
scas
mov
xor
pop
lcall
cmp
xor
sbb
xchg
sub
stos
push
mov
jecxz
or
or
pop
pop
in
pop
les
inc
in
sub
scas
test
fisttpl
mov
push
xor
cmp
jne
mov
repnz
jp
sbb
bound
push
inc
mov
outsl
rol
sub
iret
sub
cli
scas
jl
xchg
aas
cmpsb
mov
cmp
and
bound
inc
lahf
cld
sub
shlb
enter
shll
mov
out
popa
les
mov
test
or
jo
aam
outsb
mov
adc
dec
ss
pusha
insb
xchg
lret
ss
xchg
mov
sbb
loopne,pt
shl
lds
hlt
adc
add
or
test
adcb
push
test
cmp
jp
inc
pop
outsl
clc
inc
outsb
inc
pop
mov
repz
sbb
lahf
sbbl
popl
xchg
xchg
aad
dec
test
mov
or
leave
lods
shll
pop
mov
shl
data16
sahf
mov
cwtl
pop
bound
testb
lahf
andl
lcall
pop
in
add
lds
test
and
outsl
test
mov
cwtl
mov
mov
jmp
push
jbe
outsb
dec
push
lret
outsb
outsl
fistl
cmpsl
adc
and
out
fildll
pop
std
sub
mov
mov
push
dec
jmp
xchg
mov
mov
dec
fmull
jp
int3
mov
test
test
adc
pusha
std
loopne
in
jns
inc
pop
xchg
fwait
push
pop
or
addr16
mov
sbb
div
jbe
pop
adc
xorb
sub
jecxz
cmp
xor
popf
movb
cli
clc
in
mov
pusha
dec
ds
push
cmp
call
fsubp
pop
int3
sahf
rclb
fldenv
push
cmp
jnp
cmp
dec
data16
enter
pop
mov
xchg
push
std
leave
rolb
stc
xor
inc
lret
jbe
inc
hlt
cmp
mov
fldenv
aas
push
jb
fst
xor
add
mov
fildll
es
jo
mov
mov
sub
push
iret
movsl
jg
loope
xchg
andl
fildll
filds
fdivl
into
jl
push
jmp
sbb
je
in
out
pop
aaa
inc
jae
mov
out
test
or
ja
test
fstps
adc
out
jle
pop
mov
sbb
aad
or
pushf
and
add
cmp
mov
dec
aas
inc
ret
mov
cmp
push
fwait
inc
das
pop
xor
bound
js
xlat
mov
push
pop
inc
movups
pop
dec
dec
aas
into
or
es
mov
sub
adc
lock
std
imul
add
sbb
ljmp
mov
aas
divb
fcoms
sti
jmp
addr16
sbb
rolb
add
shll
adc
and
jge
mov
lret
xchg
shll
test
xor
push
shll
mov
cmp
popl
test
mov
popa
cpuid
lock
hlt
fldcw
mov
aam
pop
insl
sub
fsubrs
cmpsb
adc
arpl
subb
add
mov
jmp
out
inc
imul
inc
lahf
stos
notb
jle
pop
mov
cmp
lods
mov
sub
out
sub
jns
std
mov
lahf
lock
xor
stc
pop
cmpsl
xchg
pop
das
jo
lods
push
jg
lcall
xor
push
jbe
std
gs
xor
jnp
inc
adcl
fwait
insl
cmp
aam
mov
sbb
outsb
daa
sbb
rorl
test
sbb
fisubs
rclb
std
cli
xor
add
lahf
ret
repnz
mov
fistl
push
loope
sbb
sub
test
lds
mov
xor
sub
repz
fldl
jecxz
cltd
test
xchg
or
incl
mov
mov
adc
aaa
pop
ss
push
inc
push
test
mov
push
or
data16
idivb
and
rol
pop
inc
shll
push
adc
dec
or
push
sub
push
loope
test
inc
xchg
out
mov
mov
pushl
fldenv
lock
sub
pop
dec
into
push
mov
cmpsl
insb
cmpsb
cld
fldcw
sti
and
sbb
jl
aas
jle
iret
out
xchg
dec
xor
cmpsl
loope
aas
inc
enter
lcall
mov
adc
and
loop
add
arpl
lock
js
xchg
cmp
js
hlt
xorl
fistpl
popf
fsubrl
jp
imulb
cmpsl
pop
out
idivb
lods
cwtl
in
xchg
cmp
das
call
mov
cmc
clc
ret
push
pop
out
pop
cmp
mov
cmc
fisubl
stos
out
dec
xchg
cmp
negb
inc
mov
adc
ljmp
in
adc
nop
jae
add
mov
mov
pop
and
mov
push
mov
mov
or
and
call
push
cli
cmpsl
lock
cmpsl
into
xor
imul
lds
sbb
ss
inc
xor
fsubrs
loopne,pn
int3
mov
pop
subb
push
aaa
xchg
xor
lahf
cmp
mov
add
pushf
les
out
inc
iret
cmp
cltd
add
loop
xor
fnsave
xor
adc
xchg
cmp
test
fnstcw
sbb
sahf
jp
popa
adc
aas
lods
mov
outsl
sub
testb
icebp
sti
push
bound
pop
mov
mov
push
test
cmc
adc
jbe
xor
lcall
adc
stos
cmp
push
adc
not
movsb
or
out
cmp
dec
bound
out
xor
xchg
mov
inc
adc
les
pop
std
ds
inc
pop
inc
lahf
lcall
cli
addr16
pop
mov
inc
sbb
or
aam
sbb
jne
aam
imulb
xchg
mov
clc
jle
aaa
sub
fstpt
jno
test
sarb
clc
dec
dec
pop
inc
pop
adc
jbe
sub
in
and
jo
fmull
or
out
sub
jb
adc
and
sub
imul
xchg
push
sbbb
popf
fldcw
inc
xor
dec
mov
push
movsb
mov
mov
push
sbb
pop
and
out
imul
pop
std
fidivl
xchg
test
pop
lods
leave
push
clc
sub
inc
sbb
aad
push
inc
adc
push
cs
ficoms
jcxz
stos
movsl
push
lods
cwtl
mov
xchg
dec
lods
mov
push
imul
jnp
and
push
stos
fstpt
icebp
xor
pusha
sbb
cmpb
test
faddp
aas
pop
xor
ds
in
inc
mov
in
lods
std
mov
ficoml
or
sub
xchg
aaa
xor
stos
test
lock
loope
cmc
cmp
xor
push
or
add
dec
mov
stos
jae
lea
stc
adc
xor
mov
or
adc
jae
or
dec
cld
mov
lods
aaa
loopne
adc
lds
cmpsl
push
test
cmpl
aas
dec
lods
mov
adc
roll
sbb
and
dec
ljmp
outsb
xlat
rorl
loop
push
aam
aas
pop
lahf
cmc
adc
sub
lods
imul
push
in
and
lcall
adc
sbb
daa
xor
aam
leave
stos
addr16
inc
out
jnp
mov
jge
sbb
sub
mov
mov
and
sub
inc
lods
int3
inc
arpl
fdiv
iret
pop
scas
inc
mov
ss
mov
xor
mov
dec
xchg
xchg
pop
roll
ficompl
and
arpl
pop
scas
add
push
xchg
popf
xchg
popa
enter
subl
dec
inc
sti
pop
sbb
and
inc
out
sub
xor
pop
and
jecxz
and
call
test
jle
add
nop
cwtl
sub
inc
dec
addl
mov
test
pop
fsub
rclb
js
sub
cltd
popa
lcall
not
aad
ret
int3
cld
pushf
mov
gs
adc
aad
jns
fsubr
sarb
mov
lcall
sub
adc
xor
push
adc
mov
add
pop
inc
jp
jp
fmul
adc
out
ror
stos
sbb
iret
fistpl
in
inc
cmovs
push
das
mov
cmpsb
mov
cld
add
adc
ds
ljmp
icebp
pop
shl
add
into
les
int
and
mov
clc
xor
sub
popa
int
dec
andb
adcl
mov
cmp
push
out
xor
jle
mov
cmp
add
mov
in
fnstenv
xor
jnp
dec
in
les
int
sub
int
push
fdivrl
and
mov
or
sub
mov
test
mov
ds
negl
add
mov
int3
cmpsb
add
aad
mov
repnz
mov
mov
pop
cs
psubb
dec
sbb
add
push
add
jb
cli
mov
xorb
iret
xor
cmp
pop
rclb
inc
or
xor
shll
cltd
xchg
mov
adc
add
adcb
add
xchg
aas
int
jae
xlat
and
xchg
adc
lods
adc
in
pop
mov
test
std
mov
int
shll
mov
mov
xor
dec
sbb
cli
jle
insb
push
adc
data16
xchg
inc
stos
in
clc
adc
out
inc
mov
iret
sub
cs
push
fwait
cmc
mov
mov
repnz
pop
sbb
push
pushf
shl
inc
sbb
fnstcw
jg
or
cmp
imul
mov
sti
xchg
out
xor
xlat
popf
cmp
inc
shll
popf
iret
into
push
inc
mov
sbb
sub
int
daa
lcall
dec
out
sub
sbb
fstps
jne
daa
mov
movsl
mov
add
xchg
cltd
and
cmpsl
popa
out
sub
int
jmp
lahf
fisttpl
movsl
shrb
xchg
lret
push
jno
test
fwait
sbb
fstps
dec
enter
daa
aaa
lods
xchg
wrmsr
xchg
jnp
out
mov
lahf
jle
in
adc
sbb
and
sbbb
imul
repnz
adc
xchg
push
push
push
addr16
pop
push
out
sub
xchg
inc
mov
das
es
popa
add
sti
pop
fwait
xor
sub
sbb
fldl
mov
sub
jg
loopne
sub
cmp
sub
dec
inc
jno
xchg
idivl
lcall
adc
leave
xor
cmp
or
imul
inc
mov
in
inc
into
inc
and
pop
pcmpgtw
cmpsb
add
mov
ficoml
adc
pop
push
cmpsb
pop
xchg
xchg
aas
sbb
outsb
dec
pop
in
jo
cmp
shll
arpl
fcos
mov
jns
addr16
adc
insb
pop
das
movb
pusha
andb
loop
push
inc
mov
cs
mov
addr16
mov
mov
outsl
mov
inc
xor
mov
insb
gs
mov
add
and
mov
testl
loopne
pop
test
sahf
imul
inc
xor
int3
into
push
xchg
scas
test
ss
lcall
subb
mov
push
cmp
add
movsb
jle
jle
xchg
xor
push
or
add
insl
sbb
inc
test
sub
jae
lret
loopne
stos
orl
lret
xor
adc
insl
dec
mov
fistpll
and
fisubrs
loope
add
lret
rcrb
dec
loop
cmp
pop
mov
mov
pushf
adc
and
push
add
and
outsl
arpl
push
rolb
mov
pushf
je
push
add
inc
sti
lods
jbe
inc
mov
cmpsb
jmp
scas
ret
out
testb
repz
dec
dec
mov
mov
out
std
out
pop
out
rcl
out
mov
jae
add
std
cs
pop
stc
push
add
pop
js
push
or
add
cltd
sar
lahf
jbe
jb
inc
mov
dec
ds
data16
mov
andl
int
ret
fldenv
cli
jg
rcr
in
add
sub
or
stos
std
movsl
call
push
aad
sahf
dec
lods
inc
and
xchg
subl
aas
cwtl
movl
pop
insb
out
movsl
aad
lcall
sbb
jg
mov
rorl
scas
cli
out
fistl
cltd
mov
adc
test
inc
cld
mov
mov
sbb
es
sub
push
lea
jge
sub
pushl
jg
in
sbb
js
add
in
scas
fsts
cmpsb
or
mov
imul
insb
cmp
adc
cmpsb
sbb
pop
xor
push
pop
cmpsl
jg
out
cmp
bnd
add
cmpsb
push
or
jnp
repz
adc
aam
gs
jl
data16
call
push
mov
les
and
pop
push
enter
out
loope
sub
jecxz
data16
sti
scas
lods
and
out
in
fisubrs
lds
sbb
push
roll
xchg
ljmp
pop
dec
test
popa
mov
stc
jbe
stc
insl
mov
mov
ror
xchg
dec
nop
popl
mov
mov
pop
lcall
xor
cli
lods
sub
sub
lret
xchg
loopne
mov
cmc
movsb
not
xchg
pop
stos
jo
dec
and
shll
cmc
testb
jg
ss
pop
jp
in
lods
dec
stc
mov
aad
add
and
sbb
ja
sbb
pop
in
sarl
orb
cmp
jbe
movsb
iret
inc
lcall
fistpll
outsb
daa
inc
lcall
pop
xchg
stc
dec
addr16
mov
fstps
mov
jno
add
adc
mov
clc
push
jbe
mov
adc
adc
lcall
push
add
dec
mov
rorb
cmpl
sbb
je
test
data16
push
cmc
and
movsl
xchg
xlat
or
out
dec
dec
adc
mov
pop
addb
rcr
jno
int3
push
daa
std
jbe
xchg
cmpsb
sub
sub
es
jge
in
insb
add
jp
mov
mov
jne
stos
movsw
jge
stos
aam
inc
cmp
xlat
and
adc
or
add
adc
stos
mov
cmpb
in
cmpsl
scas
cwtl
sbb
popf
inc
repz
cmpsb
aas
add
fistl
pop
mov
cs
push
pushf
jp
inc
mov
sub
sti
xor
cs
xchg
and
scas
jno
fiaddl
xchg
clc
adc
inc
push
loop
cmc
jge
push
xchg
jge
xchg
pop
outsl
jne
xlat
fimull
pushf
sbb
aam
dec
sub
insl
aad
test
lahf
aam
mov
test
loopne
mov
scas
mov
or
rolb
dec
sub
in
dec
sub
mov
rcl
fsubs
mov
jb,pn
stc
test
packssdw
addb
sub
inc
es
jge
or
xchg
outsl
std
mov
mov
pop
lds
test
xchg
jg
mov
jl
insl
ss
lods
sarl
out
lds
sbb
out
outsl
sub
cmpsb
jno
mov
dec
jp
add
inc
ljmp
rcrb
add
push
lock
jb
push
cmp
leave
dec
inc
or
push
jge
push
and
and
fs
xor
imul
cmp
pop
aad
xchg
sub
sub
loope
sub
jbe
add
and
repnz
jl
ds
movsb
popf
loopne
add
int3
pop
pop
stos
test
or
mov
xor
or
out
flds
cmp
adc
test
pusha
out
jb
jno
enter
mov
imul
mov
jnp
jl
adc
jecxz
rcr
es
cmp
xlat
sub
test
cs
add
xchg
aaa
inc
and
adc
jg
fistl
and
mov
ljmp
fbld
or
sbb
rcrl
sub
and
xchg
jmp
lea
sbb
pop
inc
adc
outsl
jne
mov
xlat
adc
pmaxub
mov
lret
push
mov
sub
outsl
cld
cmp
test
shll
dec
jg
out
fists
fsub
hlt
addb
shlb
and
lods
add
xlat
aaa
mov
jo,pt
cmp
decl
insb
jge
call
adc
or
or
add
insb
dec
pop
push
ret
fsub
sub
pop
add
insb
push
icebp
push
sub
ds
jbe
cs
mov
xlat
ret
mov
adcl
nop
mov
jge
roll
xlat
and
test
sub
fnsave
sbb
pop
pop
and
fldt
jge
mov
mov
mov
fcomps
xor
jl
test
sub
dec
stc
jne
or
loopne
addr16
ja
adc
mov
scas
aam
test
fsubrl
jae
mov
and
test
sub
cmp
pop
push
cmp
ror
xchg
mov
jge
leave
rcl
adc
mov
jnp
lock
ja
outsl
or
xor
ds
in
inc
inc
jge
jge
adc
hlt
cmp
sahf
out
out
insb
sti
dec
mov
icebp
stos
out
out
jbe
fsqrt
mov
jo
add
dec
ja,pn
std
lret
fistpl
in
lods
daa
sub
and
fmuls
dec
cld
adc
xlat
or
int
subb
movsb
insl
jo
lret
idivb
dec
orb
and
daa
mov
and
ds
repz
bound
jmp
inc
pop
cmpsb
cmp
repnz
daa
and
insb
sbb
jb
mov
adc
aaa
push
pop
pop
fdivrs
mov
sub
lcall
sbb
and
sbb
and
js
xor
inc
test
jmp
icebp
xchg
out
or
mov
iret
mov
cmpsb
insb
or
jbe
or
movsl
push
and
adc
or
pop
sub
and
bound
cmp
repnz
mov
into
fwait
sbb
push
and
sbb
es
mov
mov
cmp
out
mov
add
popa
aas
push
and
es
mov
fcoms
pusha
pop
sbb
sub
push
push
sub
jb
jae
or
inc
mov
sbb
push
sbb
ja
pop
pop
push
mov
inc
mov
mov
arpl
pop
test
daa
jp
push
add
sti
cmp
and
into
in
call
testl
dec
lcall
ljmp
or
dec
adc
adc
out
xchg
pop
sbb
ficomps
popa
sub
ds
push
insl
mov
push
add
lahf
push
iret
in
test
std
cmpsl
adc
xor
and
sub
repnz
popa
or
cwtl
sarb
movsl
sahf
mov
lahf
mov
roll
lods
mov
push
lcall
mov
pop
cmp
mov
pusha
cmpsb
pop
and
ds
shlb
dec
repnz
cmp
inc
push
jns
fbstp
pop
rorl
ret
enter
mov
mov
push
fcomps
imul
add
je
inc
jmp
mov
add
add
sbb
dec
popf
push
loope
sub
test
cmp
adc
dec
push
inc
insb
cmpl
aas
outsb
rcrb
and
cmp
iret
dec
cmc
aad
xor
inc
jnp
mov
pop
mov
mov
mov
sub
outsl
inc
loope
push
leave
push
repz
mulb
xor
leave
cmp
mov
ret
sti
jb
push
push
jo
add
mov
jecxz
les
add
out
mov
fcomps
add
hlt
add
jg
and
push
inc
dec
pusha
mov
ja
jmp
movsl
mov
adc
hlt
es
mov
pop
inc
xlat
les
push
xchg
mov
lds
repz
pop
pop
call
mov
push
inc
or
imul
sub
popa
daa
ljmp
adc
mov
test
cli
mov
mov
dec
push
cmpsl
pop
testl
clc
inc
leave
pop
test
push
adc
jno
fmull
sbb
call
pop
push
ss
xchg
shlb
sbb
xor
sub
sub
lods
mov
pop
fs
pushf
push
sbb
in
movsl
sub
xchg
test
pop
scas
mov
js
inc
cmp
enter
xor
jae
es
mov
and
and
cmp
mov
and
xchg
mov
cmp
and
andb
jge
mov
add
std
test
ljmp
push
push
imul
insl
cmp
dec
cmp
loop
mov
fidivs
out
cld
lods
inc
jl
xor
xor
out
push
scas
pop
pop
cmp
lret
lods
out
data16
lds
popf
nop
gs
rcll
outsl
pop
bound
jae
mov
fcmovne
int
imul
stos
xorl
ss
repnz
cmp
xchg
ror
mov
push
push
mov
mov
dec
dec
daa
popa
daa
xor
cmpsb
movsb
mov
mov
jl
ljmp
pop
xchg
dec
inc
scas
stc
push
cmp
sub
dec
loop
lahf
mov
fsubrs
jg
ret
dec
bound
cld
mov
xchg
add
mov
popf
mov
xor
jbe
cmp
mov
shl
jnp
jp
femms
xchg
xor
dec
bnd
jae
les
lds
sub
cmp
jnp
outsl
xor
pop
xchg
mov
sub
sbbb
testl
sbb
in
in
xchg
mov
and
bound
insl
jl
adc
and
gs
subb
testb
ret
pop
xchg
sbb
fidivs
andb
inc
popf
rcrl
sub
dec
mov
gs
mov
in
icebp
pushf
pop
stos
push
mov
jae
and
int3
sub
shll
pop
in
rcll
data16
xor
repnz
xchg
push
lcall
insb
lret
push
bnd
xchg
sub
sub
shlb
popf
je
mov
popa
push
cmp
pop
and
mov
xchg
fstps
cmp
pushf
dec
aas
rcrl
scas
mov
mov
test
push
and
xchg
or
out
bound
adcb
andb
push
sub
push
xchg
mov
adc
xchg
scas
or
mov
dec
mov
das
aas
shlb
das
dec
sti
cmpsl
test
cltd
mov
dec
xchg
cld
scas
sbb
cmp
mov
inc
test
push
mov
mov
pop
pusha
sbb
pop
dec
cmp
push
sub
test
stc
mov
mov
pop
mov
adc
aaa
add
test
inc
pop
sub
leave
and
lods
pop
aaa
lock
aad
sbb
leave
sub
xor
adcl
out
sub
pop
xchg
adc
mov
sub
stc
inc
xor
mov
mov
push
inc
sbb
xchg
xor
sbb
or
mov
nop
mov
mov
sub
dec
dec
xchg
push
pop
xchg
ficoml
mov
jno
sub
les
loop
and
or
scas
pop
out
mov
push
xchg
cmpsl
xchg
lock
test
xchg
cmp
or
pop
mov
inc
jae
mov
sahf
lahf
shl
cld
mov
inc
es
or
push
nop
daa
xlat
cmp
dec
in
sub
mov
imul
push
or
or
pop
and
mov
pusha
ljmp
and
inc
xchg
test
fwait
out
or
popa
xor
xchg
sub
xchg
mov
xlat
pop
aaa
fldt
in
push
fstpt
imulb
dec
jo
add
jp
test
ljmp
ret
ret
clc
adc
test
in
lds
xchg
inc
shlb
jo
mov
dec
or
mov
aas
mov
in
add
pop
sub
dec
xchg
sub
adc
adc
and
iret
mov
cli
pop
pop
xchg
popa
jle
std
xchg
enter
decl
into
mov
insb
cmc
cmp
test
leave
mov
lret
movsl
or
xchg
mov
xchg
iret
cmp
push
xor
outsl
call
add
mov
mov
sub
out
pop
rcrl
mov
xchg
jb
lcall
jge
das
xlat
imul
test
enter
out
mov
fadds
xor
setl
jmp
sub
mov
pop
arpl
mov
fwait
sbb
imul
and
imul
ds
pop
shlb
adc
mov
push
cmp
inc
pop
dec
mov
fsubl
es
sub
xchg
sub
cmp
rcr
mov
or
insl
jbe
add
push
sub
out
sub
clc
push
in
push
fwait
out
inc
mov
sub
insl
mov
xchg
rcl
adc
or
pusha
cmp
shll
or
cmp
adc
mov
jbe
pop
notb
push
and
arpl
inc
mov
push
popa
push
mov
inc
mov
hlt
pop
fimuls
icebp
cmp
adc
pop
xor
sub
fildl
mov
jno
cmp
xchg
add
mov
das
pop
add
mov
arpl
movl
and
sti
and
aam
int
mov
add
mov
in
xor
popa
imulb
adcl
js
lds
inc
pop
stc
pop
pop
pop
popa
lods
pop
testl
out
inc
test
sbb
fsubr
aas
xlat
cwtl
mov
pop
inc
xchg
rcrb
dec
lret
jmp
xchg
mov
inc
cs
xor
sbb
leave
adc
xor
movsb
test
xor
pop
into
fcmovbe
fadds
pop
add
sti
dec
xor
stos
inc
int
push
shr
push
testb
test
sub
lahf
inc
jmp
sahf
clc
shr
scas
rclb
jl
mov
inc
adc
cld
movsb
pop
sub
pop
and
sbb
pusha
cltd
xor
adc
or
inc
ja
push
cld
adc
ficomps
scas
jb
fstl
sbb
cmp
fidivs
inc
outsl
repz
cmp
lahf
cmp
mov
inc
inc
push
add
push
adc
stos
inc
jle
into
dec
imul
add
mov
pop
lds
or
shl
test
fbld
testb
psubw
or
cmp
cwtl
sbb
xor
mov
inc
in
fsubs
push
push
pop
test
pusha
lcall
sub
jge
adc
aas
jecxz
cltd
jp
jmp
jg
mov
test
xor
or
jge
pop
les
pop
sub
dec
cmp
clc
cmp
dec
xchg
xor
and
stos
cmp
cmp
push
sub
and
or
mov
pop
mov
outsb
rcl
aas
lea
stos
sbb
pop
mov
cmp
and
jp
xchg
dec
lcall
int
pusha
mov
mov
test
cmpsb
pushf
push
add
out
xchg
cmp
ljmp
popa
stc
or
sub
imulb
jbe
sbb
xchg
jmp
push
int3
test
flds
scas
inc
sub
mov
fucomp
enter
fstpt
jb
fdivrs
outsb
sbb
test
cltd
lcall
add
mov
mull
cmpsb
testb
mov
sub
test
lahf
int3
or
cmpsl
stos
cmp
cmp
ss
push
fsubl
orb
mov
dec
cmp
sbb
mov
je
popf
leave
bound
scas
leave
or
sarl
stos
xchg
dec
or
jne
jge
jbe
addr16
je
ja
por
cmpnleps
sahf
cmpl
sub
pusha
cmc
incb
loopne
xchg
dec
mov
cmpl
jbe
data16
imulb
mov
push
fnstsw
xchg
pop
mov
repnz
mov
test
cmpsl
loop
loopne
ja
mov
add
mov
cwtl
mov
and
add
xchg
sbb
sub
daa
inc
fisttps
dec
jne
inc
mov
push
add
mov
cli
pop
inc
movsl
mov
cmp
and
push
dec
sbb
mov
push
cmc
mov
ss
xor
shrb
sti
or
jbe
mov
jge
add
iret
popf
ret
jbe
jp
loopew
and
data16
pop
stos
test
ja
sbbl
cmp
and
push
loope
test
jl
adc
dec
pusha
iret
lds
add
adc
lods
mov
pusha
fsub
movl
repz
push
dec
lcall
gs
cmp
sub
push
nop
add
mov
cmp
fs
cmc
andl
and
loop
fnstcw
adc
add
pop
jge
or
mov
ss
dec
sub
cmpsb
fistps
and
xchg
push
or
sbb
dec
jns
icebp
push
add
jo
fwait
mov
xor
fistl
mov
adc
and
push
and
lcall
adc
or
xchg
imul
lret
repz
jmp
dec
stos
and
in
call
ljmp
cltd
dec
push
test
sbb
sub
daa
ljmp
aas
aam
and
push
in
dec
cmp
mov
sub
cld
xchg
lea
int3
movsb
mov
sbb
repnz
out
ret
mov
or
push
cld
and
or
or
push
add
imul
xor
cmpsl
jo
xchg
lcall
push
lods
fnsave
arpl
inc
mov
xor
jb
xor
scas
xor
mov
mov
mov
add
and
inc
arpl
testl
xchg
sub
pop
cmpsl
jo
mov
pop
xchg
ret
in
fcmovu
mov
add
cwtl
push
add
or
xchg
xor
arpl
or
out
pop
movsl
clc
loop,pt
inc
aad
lds
xchg
mov
xchg
inc
jmp
ret
mov
xor
enter
fimuls
addr16
sbb
insl
mov
sub
cli
push
flds
daa
cmc
aam
jnp
out
push
gs
jbe
mov
cmc
pop
mov
fistpll
lahf
in
jnp
fidivrs
cmpsl
jge
sti
ret
and
lret
les
cld
lcall
lea
pop
add
imul
mov
jmp
adc
push
adc
or
dec
pop
ds
and
pop
add
movl
stos
push
mov
mov
and
sbb
cmc
mov
fcomps
push
mov
jbe
jl
cmp
lcall
or
add
and
mov
cmpsl
push
jb
sti
push
packssdw
jae
jge
roll
jbe
ret
je
nop
repnz
or
xlat
inc
rcrb
push
sbb
sub
pushw
pusha
xor
jnp
lcall
jecxz
mov
xor
inc
std
inc
aas
and
fildll
dec
xor
sbb
push
bound
lret
imul
std
sti
inc
cmpsl
xor
shrl
out
and
dec
test
dec
test
dec
cmpsl
test
or
loop
and
popf
cmp
mov
inc
es
jnp
jbe
std
es
es
cmp
mov
and
xchg
cmp
jnp
stos
sbb
pop
aam
fwait
and
ret
sarl
or
popa
jne
dec
push
addb
jg
iret
fldenv
je
fwait
rolb
adc
jecxz
cld
jecxz
das
jg
cs
sub
es
arpl
push
mov
push
fptan
sbb
xchg
or
adc
push
popa
cld
lahf
xchg
adc
inc
dec
sub
cmp
adc
dec
outsb
mov
gs
add
and
mov
mov
mov
aas
and
std
jecxz
loope
stos
push
cmp
push
cmp
push
adc
ja
jmp
gs
into
sbb
sub
pop
fidivrl
push
vpsrld
xchg
or
das
mov
xchg
jge
pop
loopne
push
jl,pn
mov
jp
stc
repnz
and
dec
xchg
jl
loop
add
data16
shr
popf
inc
mov
and
std
fmulp
lret
xchg
testl
xchg
mov
fisubrl
daa
les
pop
or
xlat
mov
ffreep
scas
scas
out
inc
and
cli
je
xchg
add
pop
xchg
ljmp
lds
out
scas
push
aaa
int3
jbe
push
fstps
popa
les
ljmp
ss
fiadds
aad
pop
test
loope
pusha
aaa
lahf
push
mov
inc
mov
push
testl
sub
cmpsl
add
push
cli
ret
repz
mov
mov
jge
jp
pushf
and
aaa
call
mov
inc
lea
mov
sub
xor
test
mov
iret
adcl
shl
shll
add
out
mov
outsl
adc
stc
xlat
pop
daa
shlb
mov
pop
sbb
leave
pop
jle
inc
es
sub
insl
data16
stos
xlat
jbe
jns
jl
cltd
xchg
xchg
cli
jns
dec
jmp
fdivrs
movsb
imul
leave
jmp
es
and
call
inc
insl
push
mov
jns
push
cld
sbb
iret
popa
mov
dec
add
lea
popf
test
pop
outsb
mov
sbb
fucompp
dec
or
mov
or
mov
arpl
sub
ljmp
cwtl
outsb
xchg
fwait
add
lret
pop
jp
inc
or
pop
mov
mov
js
insl
aas
pop
pop
iret
icebp
jo
add
divb
test
pop
inc
scas
pop
cmpsb
iret
add
clc
inc
fwait
sub
inc
out
popa
aas
xchg
shll
xchg
fsubl
in
adc
mov
in
push
call
imulb
fdivrl
arpl
int
dec
push
pop
in
scas
cmp
sub
mov
ljmp
xchg
push
out
mov
jecxz
cmpsb
pop
pop
jg
xor
call
inc
fdivl
xor
sbb
dec
cwtl
bound
ja
pusha
ficomps
sti
jmp
lods
cmp
pusha
jg
cmc
pop
cs
data16
jb
xlat
and
lcall
adc
and
cmp
ds
add
sub
lcall
pushf
mov
insb
lcall
and
lea
pop
and
out
and
cwtl
pop
push
mov
pop
lret
ja
mov
adc
xchg
mov
ss
xchg
shlb
dec
sbb
sti
adc
or
cltd
cmp
cs
test
les
push
pop
pop
inc
or
pop
mov
mov
add
in
je
js
clc
push
ja
out
lcall
fildll
cltd
lods
pop
cli
inc
xchg
and
sbb
xor
cli
xor
aas
xor
pop
jle
mov
pop
push
pop
cmc
mov
cltd
daa
loope
xchg
cld
rcll
ds
pop
mov
sbb
cmp
outsl
mov
push
jnp
pusha
icebp
and
jl
ss
fstpt
add
adcl
addb
xor
sbb
adc
xchg
popa
pop
fisubrl
movhps
clc
sub
xchg
xlat
jo
jne
pop
ja
pop
dec
sub
in
adc
xchg
ret
xchg
adc
cmc
dec
ja
or
add
popaw
in
fistpl
push
scas
add
inc
mov
pop
add
adc
addb
cmp
or
pop
push
push
xor
jl
in
sbb
add
adc
mov
sbb
jecxz
in
aad
xchg
push
push
in
mov
loopne
mov
push
inc
push
gs
inc
sub
enter
or
push
mov
int
cwtl
pop
mov
dec
sub
pop
lret
fs
bswap
inc
and
insb
loopne
loope
fadds
outsl
lea
inc
mov
cmp
push
or
sbb
adc
jo
sti
adc
mov
stos
sub
sbb
dec
or
out
jge
cmp
rolb
mov
mov
insb
pand
push
enter
std
fisubrs
pop
adc
jle
sub
adc
sahf
ss
out
repnz
outsl
loope
orb
jp
icebp
adc
stc
out
nop
cmc
cmp
cmp
fdivr
xchg
mov
sbbb
repnz
sub
jle
jmp
mov
and
mov
es
dec
and
xchg
push
sti
fcomip
scas
lds
je
inc
push
push
mov
xor
pop
aam
mov
or
mov
fnsetpm(287
cmp
cmpsb
dec
arpl
ljmp
mov
data16
lcall
cmp
adc
add
jae
xchg
cmp
jno
sub
inc
mov
mov
ds
cmp
jns
sbb
cltd
add
pop
loope
fstpt
mov
and
jne
fisubs
aaa
or
fwait
sti
aad
xor
adc
pusha
orl
insl
inc
cli
mov
sbb
jg
mov
dec
mov
loop
xchg
lea
sub
notl
mov
int3
pusha
fidivrs
jo
imul
sbb
mov
mov
das
push
test
sub
outsb
jo
or
ret
lret
andb
cltd
push
nop
xlat
shlb
dec
test
mov
icebp
ljmp
je
ret
cmp
cld
scas
jmp
inc
shll
sub
add
cmp
sti
xorb
xchg
or
and
push
mov
xchg
add
cli
ds
sbb
test
in
cmpsl
imul
decb
push
jo
ds
add
lret
fsub
rcr
jge
jl
sbb
jbe
aam
add
xchg
fstpt
out
stc
outsb
sahf
stc
rcrb
cwtl
lahf
outsl
dec
mov
xchg
push
push
fcomps
sar
loope
popa
out
call
xchg
dec
scas
inc
dec
add
repz
dec
repz
adc
in
dec
sub
xchg
lds
push
inc
fbstp
xor
and
nop
sti
or
dec
xchg
js
notl
js
adc
cli
ljmp
fwait
inc
pop
testb
add
sbb
cmp
sbb
cld
loop
cmp
lcall
mov
pop
repz
or
out
sti
mov
arpl
cmpsb
jo
lret
les
gs
imul
in
stos
imul
cmp
sub
mov
or
jmp
xor
xchg
adc
adc
cmpsb
or
je
in
addb
mov
fwait
add
mov
inc
lock
lret
xchg
xor
pop
cltd
inc
fistpll
lods
popa
pop
jle
int
xor
xchg
xchg
lods
pop
aaa
xchg
cmp
and
xchg
iret
mov
push
and
add
cmpsb
cmp
ss
cmp
adc
gs
test
mov
sub
pop
pop
lcall
adc
jmp
cltd
pop
lods
push
test
push
stos
xor
shll
repz
xchg
out
mov
repnz
cli
leave
adc
add
in
loop
test
dec
mov
pop
jg
subb
fnstcw
inc
lods
xchg
les
je
ljmp
jg
mov
je
push
addr16
add
adc
test
sahf
imul
jecxz
repnz
sbb
push
xchg
lret
test
sub
push
xchg
call
push
lds
call
fwait
add
addb
inc
ja
popf
movsl
pop
stc
mov
push
ss
fucomp
or
add
div
shrb
pop
mov
push
gs
les
aas
rclb
pop
int3
sub
lock
dec
fldenv
push
into
icebp
into
aam
adc
xor
cld
xchg
ret
or
or
ja
out
xchg
mov
sub
xchg
pop
pop
movsl
popa
es
cli
sub
sahf
js
lret
push
aam
scas
nop
je
popa
out
lret
jae
and
sub
push
test
cmpsl
fists
out
sub
lret
test
add
out
je
fwait
aaa
movsl
mov
xlat
negb
or
sarl
lods
and
sbb
jo
lods
dec
movsb
sti
ds
mov
inc
cltd
push
ficoms
inc
adc
gs
xor
mov
adc
shlb
aad
add
call
fiadds
sti
int3
ret
lahf
in
dec
xchg
xor
xlat
mov
pop
movsl
dec
fbld
faddl
shlb
dec
cmp
adc
daa
jmp
and
push
idiv
mov
orb
test
dec
std
push
test
pop
pop
jle
sub
imul
cmp
or
lock
in
sub
mov
mov
xchg
jnp
inc
in
dec
or
xchg
jnp
sti
sbb
push
bound
and
mov
enter
jle
sub
mov
jge
pushf
inc
mov
dec
add
ss
jp
lea
dec
std
sub
cmp
into
xchg
lods
divl
fistl
pushf
popf
idivb
sub
sti
sub
subl
int3
fcoms
cmpsb
or
dec
fmuls
movsl
insb
sub
push
mov
dec
xchg
dec
fistl
or
fwait
jae
cmp
arpl
xchg
mov
adcb
int
std
fmull
lret
loop
cwtl
daa
inc
lcall
fnstenv
pop
mov
cltd
inc
out
mov
sub
dec
pop
addb
fsubr
dec
and
fldt
ficomps
pop
sbb
push
pop
mov
int
sub
mov
and
xor
outsl
cld
and
fsincos
repz
and
cld
lods
mov
cld
les
cmp
hlt
sahf
mov
mov
jge
lea
gs
inc
mov
fs
fidivrs
inc
mov
loope
jns
adc
dec
jns
je
xchg
pop
mov
pop
imul
inc
loop
dec
clc
mov
imul
xchg
rcl
cmp
add
add
inc
inc
fsubs
addl
lret
push
insb
push
test
pusha
pushf
jb
imul
test
adc
loopne
std
sbb
sbb
jmp
insb
mov
popf
inc
outsb
xchg
pushf
jle
inc
bound
jae
xchg
movsl
inc
bound
test
adc
add
pop
fcmovnbe
mov
das
cmp
fsubl
cmp
lcall
ds
das
jne
push
ds
fwait
jmp
pop
cmp
mov
push
inc
daa
jg
insb
and
add
cmp
popf
cli
xor
faddl
and
sub
pushf
out
insl
fdivrl
xor
fsubrl
loopne
adc
and
mov
xchg
arpl
enter
mov
inc
cld
arpl
push
icebp
xor
or
or
fcompl
jmp
sbb
cmp
pusha
push
out
outsb
nop
push
cmp
rorl
ds
dec
mov
and
inc
fldl2t
roll
out
imull
iret
repnz
jp
sub
mov
movsb
int
out
or
xor
inc
call
jge
and
and
dec
mov
jo
ss
or
jns
out
iret
pop
into
js
scas
mov
call
ljmp
add
mov
lds
lods
xlat
dec
push
aas
fstpt
mul
fisubrs
shlb
sub
ficompl
pop
add
fimuls
insb
sub
mov
es
jle
ds
pop
sub
push
lods
mov
and
jl
dec
jmp
cli
jle
dec
jmp
lods
jbe
in
popf
in
dec
test
mov
adc
rcll
pop
sahf
gs
adc
jno
and
gs
inc
js
mov
fildll
subl
inc
fstps
mov
ret
add
inc
xor
sub
data16
or
sbb
jge
adc
fisubrs
jnp
sub
dec
inc
cs
lret
nop
or
repnz
dec
xor
mov
fnstenv
pusha
cltd
jb
cmp
xlat
lcall
leave
xchg
mov
popa
inc
int3
ss
jl
stos
ror
shld
out
stc
xchg
ficomps
fcmovbe
ljmp
mov
cmp
std
mov
xor
pop
jbe
scas
xchg
iret
mov
cld
in
scas
lret
pop
pop
cli
popa
pop
pop
movsb
pop
mov
pop
jne
leave
sbb
push
sahf
pop
loopne
movsb
mov
pop
rcll
pop
fidivrl
out
and
leave
push
adc
cmpsb
adc
cmpsl
lock
loopne
push
dec
push
mov
gs
mov
fsts
mov
addb
repz
xchg
lret
bound
or
jmp
adc
cs
push
dec
ret
xor
popa
clc
jmp
jb
int
mov
in
in
ja
lock
pop
clc
pop
lgs
or
mov
insb
imul
sbb
cmpl
ds
push
jg
pusha
jns
xchg
sbb
aam
sub
xchg
push
add
pop
inc
mov
pop
cmp
adc
pop
int3
or
lret
add
bound
dec
mov
sub
mov
and
out
scas
mov
inc
jle
leave
xchg
int
arpl
clc
stos
mov
jle
test
fisubl
inc
loopne
xor
iret
aad
test
aam
push
xor
adc
sbb
pop
push
inc
xchg
push
mov
test
test
and
xorb
iret
mov
adc
or
push
mov
add
sbb
mov
jns
push
xchg
jl
dec
sti
push
dec
pop
int3
imul
subb
xchg
cltd
cli
fmull
cld
rcl
sbb
jnp
dec
and
mov
ds
jecxz
xor
xchg
std
inc
popf
add
adc
aas
dec
sub
mov
seta
dec
aam
pop
mov
jnp
jb
subl
xchg
cwtl
add
push
gs
leave
into
fidivrl
cmpsl
cmp
pusha
dec
adc
jp
add
aas
mov
add
inc
hlt
inc
imul
imul
push
clc
cmp
fcoml
inc
insb
in
gs
les
jo
out
into
inc
std
jp
mov
les
add
lahf
pop
loopne
out
test
movsb
jmp
dec
mov
cmp
pop
repnz
sahf
jge
in
insl
add
nop
add
js
mov
sbb
cmp
mov
pop
add
cmp
rcl
test
lahf
lods
push
loop
aas
out
and
jo
lahf
nop
aad
mov
mov
xlat
cltd
movsl
mov
data16
push
jmp
out
add
jbe
in
out
daa
test
daa
scas
pop
push
adc
push
adc
xorb
cmp
jmp
ret
pop
pop
in
mov
mov
fld
lea
sbb
sbbb
push
out
loope
fbld
jns
mov
xor
add
es
jg
pushf
ficoml
cmc
repnz
cmp
cs
mov
shrl
cmp
jp
xchg
cltd
in
or
mov
and
mov
cs
fisubl
test
mov
mov
test
mov
int3
or
or
adc
xchg
loopne
gs
mov
add
xchg
test
jns
xor
xlat
mov
push
pop
ret
ret
bound
push
enter
xor
pushf
loop
fadds
nop
jecxz
fldcw
fmull
pop
mov
xchg
lret
aaa
inc
aaa
flds
push
or
pushf
xchg
shll
repnz
cmp
test
pop
sbb
and
stc
icebp
sub
stc
xlat
ds
repz
lods
fstpl
aam
push
adcl
xchg
or
stc
cmp
sbb
fcoms
adc
push
imul
test
aas
or
ljmp
cwtl
inc
dec
test
xchg
mov
mov
aaa
jnp
loop
inc
or
idivb
ds
dec
jp
testl
into
cmp
inc
push
mov
ds
add
jmp
sbb
jnp
loop
inc
ret
fwait
sbb
pop
fwait
cli
loop
jae
push
sarl
popf
test
fildll
xchg
push
ret
lahf
cltd
leave
jns
out
pop
lds
mov
ljmp
gs
mov
pop
dec
inc
jmp
mov
lcall
adc
dec
jnp
adc
test
andl
in
dec
addb
sahf
fwait
pop
ljmp
jnp
loop
inc
push
or
icebp
mov
or
dec
cmp
mov
aaa
dec
cmp
dec
cltd
mov
or
pop
data16
jnp
loop
inc
cmpsb
or
fwait
push
lret
cmp
lcall
push
cmp
xchg
ljmp
dec
inc
out
mov
sahf
adc
jnp
loop
inc
repnz
dec
adc
fbstp
and
stos
fs
jns
out
out
les
inc
push
mov
into
pop
ljmp
inc
inc
mov
jp
mov
jns
out
push
lds
xchg
xchg
pop
cmp
jg
lcall
jns
and
inc
stos
or
imul
add
enter
scas
inc
sbb
jns
out
repz
inc
pop
mov
into
pushf
test
out
pop
inc
sbb
jp
loope,pt
add
outsb
inc
out
mov
or
out
outsl
rorb
jae
dec
mov
pop
cmp
mov
push
dec
lcall
testb
lahf
repnz
dec
jns
out
fsubs
and
leave
push
lahf
into
cltd
sub
inc
mov
jae,pt
cli
pushf
js
push
jnp
lcall
add
push
mov
stos
adc
sbb
loop
inc
push
mov
adc
sbbb
jnp
loop
inc
mov
mov
lcall
push
cs
dec
es
test
out
pextrw
pop
stos
lock
jle
idivl
pushf
nop
ljmp
js
loop
pop
xor
scas
rorb
or
aad
loop
sbb
sbb
pop
pop
fisubrs
mov
or
pop
cmp
mov
push
dec
mov
inc
leave
push
push
lahf
pushf
push
cltd
lods
jbe
hlt
mov
lds
cmp
jle
ror
push
and
stos
out
aas
test
ds
mov
cmp
mov
add
dec
cmpsb
mov
jae
out
cltd
push
jns
out
loopne
es
test
sub
jnp
loop
inc
orb
fidivrl
idivl
xchg
mov
inc
dec
lret
out
cmp
bound
fwait
pushf
ss
test
xor
popf
movsb
jmp
sbb
jnp
loop
inc
mov
arpl
cmp
lcall
and
push
cltd
test
cmp
mov
decl
inc
inc
stos
mov
outsl
lahf
add
xchg
enter
lods
push
sub
jnp
mov
into
inc
loop
pop
fwait
mov
mov
sub
roll
jns
lods
cmp
and
mov
pop
stos
sbb
jnp
loop
inc
decb
aaa
fwait
pop
or
cmp
popf
lods
aaa
es
xchg
cltd
in
jns
out
push
lds
cmp
out
inc
pop
dec
sbb
lret
sub
dec
bound
in
xor
lahf
and
inc
xchg
js
adc
dec
cmp
sbb
mov
arpl
das
and
cmp
sti
fisttps
paddb
add
mov
mov
adc
cld
subl
xor
test
cmp
rolb
test
add
jbe
or
imul
fldt
fisubrl
fisttpl
fmull
xchg
movsb
jecxz
insb
mov
popa
add
mov
adc
sti
in
sahf
xchg
sub
movsb
pop
ljmp
inc
pop
adc
or
dec
movsb
push
mov
ljmp
mov
and
push
dec
inc
mov
mov
lock
mov
rcrb
xchg
test
ds
inc
pop
inc
cmpsl
div
jbe
call
push
sbb
sub
or
xchg
popf
push
iret
jmp
sub
lock
jge
pop
jmp
jno
adc
or
mov
push
loop
jge
xlat
jo
jge
mov
jl
std
lods
xchg
stc
jecxz
pop
movsl
push
xor
mov
mov
jno
jmp
insl
pushf
add
imul
lcall
out
insl
imul
mov
inc
push
int3
jecxz
shl
test
push
mov
xor
iret
clc
xor
jno
sarb
mov
sbb
shll
pop
andl
scas
cmp
mov
dec
lret
fwait
out
jle
dec
jo
mov
cmp
cmc
inc
mov
outsb
out
mov
shrb
pop
add
cli
mov
pop
adc
adc
ja
xor
push
in
dec
cld
mull
mov
sbb
or
icebp
dec
dec
mov
ror
push
fisubs
cmp
push
cmp
push
call
out
mov
pop
imul
fdivrp
jae
inc
iret
stc
shll
ss
mul
lea
mov
outsb
sub
loop
icebp
in
lds
jecxz
ficoms
push
iret
mov
lea
adc
in
add
or
lret
add
ds
cmpsl
test
push
call
in
inc
mov
dec
out
pop
imul
out
jo
lods
in
mov
add
and
add
lcall
or
lret
mov
cmp
mov
iret
ljmp
in
xorb
adc
adc
mov
mov
fbld
sbb
sarl
adc
inc
jne
sbb
loop
xor
sub
pop
or
push
add
dec
in
jae
mov
lds
cmp
or
mov
inc
jo
or
call
inc
jno
fnsave
inc
push
adc
add
jmp
inc
add
cld
int
jle
testl
adcb
mov
lods
imul
jl
dec
jno
adc
lcall
xor
mov
arpl
insl
fcmovbe
jecxz
das
jns
adc
sti
outsb
popf
add
cwtl
mov
push
push
iret
addr16
mov
enter
xchg
js
jecxz
ss
fildl
dec
lret
je
lret
push
sti
out
pop
movsl
fdivp
pop
push
or
add
daa
push
add
std
ljmp
push
push
ret
mov
push
jecxz
call
push
xchg
cmp
cmc
sub
dec
negl
push
lret
in
mov
push
inc
fwait
icebp
ret
fsubrl
loop
push
imul
push
xchg
jl
scas
inc
ds
jno
lods
add
mov
mov
lahf
xchg
mov
rolb
in
test
repz
push
fsubs
cmp
notb
mov
mov
sti
add
cmpsb
ljmp
cltd
popa
out
dec
das
or
jno
adc
jecxz
pop
clc
rep
pusha
dec
xor
pop
fidivrl
call
mov
lahf
add
int
stc
out
cmp
arpl
out
scas
dec
sub
aad
gs
jns
xchg
jge
aad
daa
push
cmp
mov
xor
lahf
fs
add
cmpl
call
idivl
mov
inc
loope
das
sub
aas
icebp
jno
out
push
mov
cmp
or
and
inc
pop
fidivrs
dec
sbb
mov
mov
cli
aaa
sbb
and
jo
and
mov
pop
push
dec
sub
stos
pop
xlat
mov
jae
mov
jnp
pushaw
add
std
add
jecxz
fmull
jecxz
ret
mov
jae
cwtl
rclb
add
lock
xor
push
data16
mov
ficoml
shlb
or
ds
add
mov
inc
mov
test
push
roll
jo
and
inc
shlb
adc
movsb
ljmp
jae
movb
sbb
sbb
sarl
cltd
and
xchg
mov
mov
arpl
int3
push
addl
push
dec
insl
mov
xchg
je
dec
jo
loopne
ljmp
sahf
mov
scas
cmpb
ret
popa
outsl
test
pop
mov
xchg
test
cmc
and
jmp
or
dec
fs
adc
ror
stos
mov
jno
filds
popf
sub
cmp
lds
push
test
cmp
int3
adc
sbb
int3
lock
mov
xchg
sub
scas
hlt
dec
gs
imul
nop
inc
jbe
outsl
in
pop
in
push
pop
cmp
add
inc
mov
ficoms
loopne
sarl
mov
scas
dec
daa
inc
clc
pop
jnp
xlat
mov
mov
out
cmp
into
stos
frstor
mov
dec
hlt
push
lods
jmp
in
mov
cld
addb
push
dec
push
push
push
push
add
mov
push
push
inc
mov
push
iret
ljmp
aas
jmp
sbb
fbstp
std
stos
shlb
filds
cld
pop
pop
mov
add
fcmovu
icebp
inc
fldcw
lods
lret
call
loop
adc
lea
mov
ja
addb
or
fldl
xchg
dec
or
repnz
and
cmp
jl
xor
ds
sbb
mov
lea
xor
mov
push
xchg
mov
mov
insl
divb
int
cmpsb
std
cmp
testl
or
add
jne
pop
cld
cmpl
sub
add
inc
sbb
jno
mov
out
mov
xchg
mov
add
lods
loopne
fidivs
call
imull
pop
add
adc
pop
outsb
lret
ror
cmp
pop
jge
push
mov
ret
dec
adc
and
xor
pop
ds
dec
imul
fadds
ficomps
inc
loope
cmpb
pop
rolb
xchg
fdivrl
fucompp
iret
inc
rcrb
std
in
sbb
or
mov
cmpsb
cmc
mov
push
dec
mov
bound
add
or
xchg
pop
shl
lods
push
cmp
je
dec
icebp
scas
push
ja
cli
or
or
xor
mov
enter
fdivrp
pop
jle
sbb
push
xor
push
add
ja
sbb
mov
push
stc
rorb
adc
mov
imul
pop
push
mov
clc
orl
pushf
jae
mov
adc
push
test
dec
addr16
jmp
fnstsw
push
dec
mov
or
pop
jnp
paddusb
mov
sub
inc
js
repnz
loop
sbb
mov
xor
pushl
mov
iret
int
inc
js
pop
inc
test
inc
popa
iret
in
dec
and
pusha
jo
outsb
ds
fs
shlb
stc
stos
and
mov
mov
cmc
sub
xchg
fmuls
pop
cltd
add
mov
lods
add
scas
sbb
movsl
xorl
mov
and
aad
dec
ss
jg
push
les
add
inc
imul
cmpsb
jno
out
mov
mov
fiadds
and
xor
mov
adc
insb
add
inc
std
or
addr16
xlat
inc
iret
push
inc
rcll
xlat
imul
push
add
ss
jg
movsl
test
cli
call
mov
int
mov
test
add
insl
and
ljmp
jp
add
adc
lret
cld
outsb
loope
xchg
ss
jl
xlat
sub
sbb
cwtl
inc
pop
cmp
lcall
sbb
inc
push
sarb
mov
push
or
mov
nop
mov
jl
inc
icebp
mov
sbb
inc
mov
icebp
dec
jecxz
xchg
xor
cmp
loope
mov
cs
testl
mov
test
xor
xor
stos
imul
xchg
cmpb
je
or
dec
leave
push
xchg
into
sbb
sub
lret
adc
and
or
adc
scas
pop
sarl
cmpsb
out
pop
das
ljmp
sti
push
outsb
add
push
fsubrs
lods
push
sub
aad
mov
add
jbe
fildll
mov
stos
dec
popa
sahf
dec
push
sbb
sarb
and
xor
mov
jne
out
inc
dec
sbb
pop
repnz
fdiv
in
aaa
loopne
into
jp
pop
imul
inc
or
push
into
nop
dec
lret
or
addr16
dec
iret
out
lea
fwait
ret
push
jbe
xchg
inc
jbe
jmp
push
mov
or
jecxz
ficoml
test
ljmp
pop
rclb
mov
inc
iret
test
adc
nop
loope
dec
jecxz
push
adc
dec
jo
jo
dec
sbb
insl
dec
mov
mov
lods
lahf
mov
cltd
clc
addr16
fmul
and
lock
sbb
test
sahf
add
xchg
xchg
mov
insl
out
rcll
cld
xchg
xor
inc
ds
mov
int
cmpsb
inc
jae
out
xchg
mul
or
or
inc
inc
lret
push
mov
fwait
push
add
xor
aas
or
mov
inc
mov
andb
push
rcrb
mov
mov
inc
insl
cltd
jecxz
fisttps
mov
jle
push
xchg
add
cwtl
insb
pop
xchg
movb
cmp
stos
scas
test
sti
mov
adc
cli
into
jle
adc
es
cmp
xor
repnz
push
inc
lret
popf
pop
mov
inc
sbb
mov
out
loop
sub
and
imulb
sbb
popf
fstpl
arpl
cmpsb
rcrl
jb
scas
pushf
mov
hlt
pop
into
pop
or
out
ss
popa
push
and
insl
lea
mov
fimuls
loop
mov
cmpsl
inc
lcall
or
cmp
jmp
cmpsl
dec
push
xor
xchg
fucomi
xor
dec
adc
lods
test
push
pop
inc
mov
int
mov
xor
cs
xor
fimull
pushf
xorl
and
out
in
ret
fistpl
adc
jbe
int3
in
jle
adc
insb
in
fadd
fidivs
test
ret
aas
add
in
add
inc
pop
jl
ret
xchg
push
out
mov
mov
cmp
mov
ja
lea
or
fmull
adc
das
xchg
xor
push
or
xlat
enter
add
lock
sbb
lods
cmp
add
mov
jbe
xor
xchg
adc
cmp
xchg
jl
inc
pop
xchg
dec
lods
xchg
ja
gs
ss
mov
int3
dec
or
cmp
xor
xchg
adc
lahf
jne
add
xchg
dec
sti
xchg
xchg
aas
bound
push
jmp
mov
pop
mov
mov
dec
sub
movsl
sbb
sbb
lods
cmp
dec
cs
pop
mov
jbe
xor
data16
clc
xchg
dec
jp
sub
mov
cmp
sbb
aaa
test
xor
gs
xor
movsl
cmc
pop
push
mov
jnp
add
xchg
repz
dec
sti
pop
adc
xor
or
sbb
popf
js
add
add
testb
jp
or
cs
aam
mov
adc
dec
mov
dec
cwtl
add
movsb
int3
adc
inc
into
clc
test
adc
pushf
xlat
xchg
cmc
test
adc
sbb
fidivs
dec
and
enter
gs
pop
push
fs
inc
cmp
call
dec
addr16
dec
sbb
inc
mov
pushf
sbb
and
sub
or
loop
fs
in
mov
push
rcrl
sbb
fildl
insl
jbe
in
jo
aam
mov
pop
pop
test
nop
into
xor
imul
test
mov
loope
xchg
popa
mov
or
test
pop
inc
mov
inc
jbe
push
es
loop
out
sub
fwait
mov
push
push
cwtl
mov
add
out
pop
sbb
and
xlat
inc
js
sbb
test
aas
push
sarb
loope
in
adc
add
cmc
push
ss
mov
sbbl
movsl
pusha
das
mov
mov
sub
in
ret
test
fisubrs
jb
fwait
dec
lock
dec
adc
lcall
xchg
ffree
mov
insb
inc
xchg
enter
sbb
jl
lods
jns
mov
cmp
scas
sbb
iret
sbb
jae
scas
pusha
push
adc
fwait
sbb
mov
leavew
pop
or
in
xchg
add
aaa
loop
mov
lea
pushf
cwtl
dec
push
ljmp
in
ret
movl
dec
sti
lea
call
pop
popa
sbb
pop
outsl
xchg
sahf
mov
sub
adc
cli
jo
pop
push
push
loopne
sub
adc
jp
sbb
lcall
push
test
push
mov
enter
daa
test
js
xchg
sbb
xchg
adc
sbb
sub
int
xchg
mov
jns
xchg
cmc
cmp
pop
dec
cmpsb
faddl
mov
push
push
cli
lock
stc
fiaddl
push
pusha
mov
mov
xor
mov
into
xor
pop
bound
cmp
push
push
add
enter
mov
push
mov
xlat
adc
lahf
push
sbb
push
jmp
or
incl
ds
jl
stc
in
in
cmpsl
and
roll
aad
mov
shlb
aas
in
dec
mov
bound
lods
fisubrs
aam
loope
nop
mov
cmc
dec
jl
emms
fmull
push
outsl
sub
push
cmp
or
ds
push
adc
adc
push
cmp
pop
into
adc
in
cmp
stos
movsl
pop
fprem
std
adc
xor
pop
mov
fiadds
and
es
mov
dec
call
or
pop
mov
mov
cmp
dec
jmp
or
lds
movsl
sbb
fisubrl
adc
cmpsw
cwtl
jl
sbb
sbb
imul
pop
mov
sti
int3
es
inc
ljmp
in
out
pop
ret
jno
es
je
stc
mov
fmull
lods
fistpl
sub
jno
pop
xchg
and
jge
pop
mov
add
fs
rolb
push
xchg
mov
mov
dec
addr16
and
or
mov
xorl
mov
je
lahf
pop
fistps
fisttpll
mov
mov
or
xchg
xor
xchg
jns
mov
cld
shll
sub
or
orl
fs
jb
int3
pop
cmp
sbb
sbb
out
daa
jnp
mov
cmp
mov
push
dec
inc
arpl
arpl
scas
mov
push
sti
je
push
fistps
pop
xchg
test
cwtl
dec
inc
sub
mov
dec
pop
add
btr
jno
or
ficomps
xor
xor
push
jle
inc
ds
pop
aaa
arpl
add
ss
mov
popf
out
and
insb
dec
imulb
xorb
mov
inc
les
je
mov
push
cmp
iret
mov
xchg
es
xchg
mov
int
cmc
pop
pop
mov
shll
sub
mov
pusha
leave
push
insb
xchg
mov
jle
rclb
aas
ja
sub
leave
test
test
pop
in
aam
lock
cmp
add
push
testl
divl
rorl
push
lret
add
fnsave
mov
mov
cli
ljmp
fisubrs
add
stos
mov
and
pop
dec
add
ljmp
loop
cld
xchg
ret
mov
lahf
cld
js
test
inc
stos
insb
out
sub
repz
or
gs
cmp
fcmovu
repz
in
inc
rorb
mov
dec
loop
xchg
inc
leave
rcl
jo
in
repnz
jmp
hlt
repz
hlt
mov
xor
in
mov
clc
je
cltd
ds
xchg
push
rcrl
mov
xchg
jnp
lods
cli
cmp
pushf
fwait
push
pop
outsl
adc
clc
inc
or
inc
inc
je
mov
adc
mov
cmp
repnz
or
sti
loop
imul
pop
ds
les
loope
mov
jbe
push
or
jmp
inc
mov
lahf
mov
and
lcall
and
mov
leave
insb
inc
push
mov
jge
xor
mov
jb
cli
sub
mov
fwait
cmpsl
dec
aas
add
mov
das
sub
cmp
cmp
mov
jl
les
loopne
push
lret
fisubrs
sbb
sbb
xchg
mov
mov
pop
xchg
jle
inc
push
push
push
bound
sub
and
out
lret
adc
in
in
sbb
sbb
push
jnp
and
mov
stos
in
fwait
in
lcall
ds
in
mov
push
mov
mov
fldl
xor
pop
gs
testb
dec
fisubs
mov
testb
fisubrs
mov
fmull
js
adc
cmp
mull
cmp
mov
and
push
cmc
sbb
cmpsl
push
out
ss
add
in
leave
jb
sar
fisttps
insb
das
pusha
pop
syscall
mov
out
movups
adc
mulps
mov
shll
stos
les
xchg
inc
outsb
mov
or
rolb
add
cmc
inc
mov
popl
xchg
scas
sbb
cmp
cwtl
enter
mov
or
xchg
idivl
xchg
loopne
sbb
hlt
fldenv
std
add
pop
daa
push
in
pop
jmp
push
mov
call
ficomps
lret
mov
sub
repnz
xlat
or
mov
test
mov
mov
xor
nop
sub
sbb
inc
jnp
outsb
mov
lcall
dec
leave
push
fwait
out
lock
inc
cltd
xlat
add
sbb
and
push
mov
add
imul
out
addl
dec
es
and
iret
shll
rcl
or
jae
xor
pop
arpl
mov
enter
movsl
xchg
les
test
aam
lret
dec
pushf
lret
into
scas
cs
sbb
out
aas
cmpsb
lods
imul
xor
mov
fs
leave
cld
insl
xchg
mov
mov
hlt
pop
dec
out
js
in
jmp
fsub
cltd
jecxz
int3
loop
push
pop
clc
push
clc
popf
ss
sbb
imul
inc
xchg
out
pop
dec
add
dec
sbb
mov
lds
pop
movsb
stc
cmpsl
mov
pop
dec
lods
enter
fs
loopne
jnp
test
imul
cmp
dec
and
cld
leave
or
inc
adc
movsb
rcrl
pop
arpl
push
adc
loopne
and
cltd
loopne
xchg
ror
xchg
cltd
xchg
jge
xor
push
add
mov
adc
push
jbe
icebp
imul
lahf
filds
and
insl
xor
xor
jne
enter
jl
add
push
std
adc
xor
stos
int
mov
add
mov
mov
data16
mov
sti
sbb
push
das
dec
shr
xor
fsubl
jno,pt
test
inc
mov
insb
and
rol
xor
fs
mov
lds
out
adc
je
push
in
inc
int
mov
insb
or
shlb
push
divl
nop
or
pushf
loope
mov
jp
mov
cli
enter
sarb
data16
jmp
divl
pop
add
push
or
out
jmp
add
sti
cmp
popa
mov
and
insb
pop
ljmp
xor
les
push
jne
or
data16
sub
and
pop
mov
test
es
sbb
movsw
mov
dec
in
sbb
cmp
jge
roll
or
shlb
gs
add
push
shrb
xchg
mov
jbe
and
add
sub
add
push
jbe
mov
sahf
gs
ret
pop
or
addr16
sbb
imul
mov
data16
dec
sti
inc
dec
cmp
fwait
leave
push
aaa
mov
mov
mov
add
lods
pop
or
or
daa
add
pop
mov
xor
push
int3
in
std
pop
ds
mov
pop
sub
pop
pop
fdivrp
inc
inc
popa
adc
xchg
adc
das
pop
pushf
mov
sub
pop
aas
cli
sbb
adc
dec
idiv
fisubs
rcrb
inc
mov
test
jle
lahf
inc
repnz
test
data16
fsubrp
xor
leave
xchg
push
out
sbbb
dec
jbe
mov
and
inc
rorb
daa
fwait
cmpsb
cmpsb
add
cmp
mov
inc
dec
cmp
repnz
inc
lahf
inc
cltd
popf
jbe
or
cltd
or
scas
fcoml
xchg
test
mov
inc
inc
stos
adc
or
or
lods
lock
jbe
add
mov
arpl
das
and
outsl
lahf
add
dec
add
lods
rorb
aas
lret
mov
and
stos
out
nop
cmp
dec
dec
inc
movd
mov
cmp
call
dec
mov
mov
test
bound
ljmp
jnp
loop
inc
dec
or
pop
ljmp
mov
jmp
push
sarl
loop
incb
push
mov
fstl
mov
lods
inc
inc
lods
nop
dec
xchg
out
dec
pop
bound
fwait
js
loop
call
or
mov
or
fwait
cmpsb
jne
in
mulb
cmp
or
mov
xchg
mov
and
lds
mov
push
mov
sahf
mov
ss
adc
sbb
jns
in
mov
into
sbb
xchg
sub
mov
jle
or
xor
sbb
jns
dec
adc
and
sbb
dec
mov
stos
fcompl
mov
cmp
mov
mov
cmp
shll
lods
and
popf
sub
test
adc
dec
dec
pop
rcr
repz
test
gs
and
nop
mov
push
rcll
add
xlat
jb
stos
cmp
push
mov
shr
movsb
imul
mov
bound
lds
popa
ljmp
and
push
cmp
xor
es
xor
cmp
cmp
cmp
push
les
inc
in
push
aad
insb
mov
popf
push
or
ss
arpl
add
pop
iret
cmpsl
sub
iret
into
sbb
pop
test
sbb
mov
in
adc
sahf
test
mov
push
mov
mov
jecxz
test
inc
inc
insb
je
push
mov
and
data16
es
aam
xor
pop
push
cmc
dec
add
cmp
scas
and
scas
lock
inc
cmp
jno
es
int
sbb
cmp
and
rcrl
push
xor
mov
xor
xchg
cmp
pop
xchg
cwtl
inc
jno
popf
add
fistps
mov
sub
nop
arpl
inc
dec
cmpsl
and
or
out
add
fcoms
and
dec
outsb
imul
add
ror
sbbl
pop
repnz
jns
out
dec
imul
outsb
mov
inc
jbe
mov
in
pusha
inc
xchg
add
dec
adc
inc
arpl
adc
add
mov
ljmp
mov
cmc
shll
lods
pop
sti
cmpsb
push
lahf
or
mov
cmpsl
pop
ljmp
mov
negl
movsl
xchg
bsr
jnp
gs
ja
sbb
aad
xchg
mov
push
out
mov
lcall
mov
iret
xchg
clc
sti
aaa
popf
idivl
int3
fists
or
out
cli
sub
aas
nop
adc
pop
jae
ror
fs
jno
into
icebp
mov
pushw
and
inc
pop
addb
jno
adc
pop
aas
aad
and
fsubl
and
lock
pop
xchg
fisttpl
shrl
dec
cmp
xchg
ds
and
fisubrs
mov
into
mov
pop
mov
adc
enter
loope
in
jecxz
mov
movsb
sbb
js
lcall
dec
aaa
sbb
bnd
insl
daa
popa
sbb
cs
mov
sti
ret
pop
cwtl
js
jge
stc
push
pusha
jae
shlb
lds
data16
mov
cs
jl
inc
mov
and
lods
cmp
dec
and
pop
fadds
out
arpl
iret
inc
pushf
push
jge
and
push
cmp
add
cmp
or
xor
ds
imul
out
sub
inc
push
inc
mov
push
adc
cmc
in
inc
dec
scas
shlb
xlat
adc
dec
mov
sbb
or
push
and
movsb
xchg
inc
add
daa
sub
hlt
lahf
es
mov
pop
fs
int3
into
ljmp
jmp
pop
leave
jo
mov
xchg
mov
imulb
mov
inc
add
add
mov
fucomi
out
push
pop
mov
xchg
int
bswap
sbb
sbb
jle
sbb
outsl
dec
mov
loope
mov
fiaddl
push
mov
jae
mov
movsb
outsl
push
sub
adc
icebp
xchg
xor
pop
out
mov
inc
ss
pusha
ret
push
pop
fdivrl
push
sbb
jmp
bound
dec
lds
push
jge
xorl
jmp
adc
cmp
mov
shll
nop
xchg
mov
jle
divl
and
inc
push
dec
xor
pop
add
shl
adc
js
pop
and
or
ret
and
or
cwtl
mov
or
in
cwtl
out
mov
mov
cmp
inc
add
popa
jp
and
jb
mov
call
mov
int3
mov
mov
or
sti
jno
pop
je
fwait
cmove
je
fisubl
cld
cmp
dec
or
and
dec
or
or
lret
pushf
push
fstl
stc
sbb
mov
les
jae
xchg
push
and
mov
mov
es
push
js
sub
loope
int
iret
push
imul
cmp
stos
push
imul
mov
mov
loope
aad
pop
flds
fistpl
push
sbb
jo
add
lods
sub
int
mov
ss
ds
and
dec
pop
cld
leave
jb
sub
movsb
movsb
mov
addr16
mov
lods
jne
inc
repnz
das
or
or
push
jae
aam
sub
mov
loop
test
add
data16
pop
dec
std
sub
lock
xchg
xor
pushf
movsl
mov
mov
push
rcl
sti
aas
cmp
ss
mov
fidivl
mov
mov
add
movsb
sub
mov
fs
outsl
and
sub
js
jae
lahf
xchg
inc
sub
in
push
lods
cmpl
mov
popa
imul
push
xchg
or
dec
rcr
int
arpl
pop
adc
insl
pop
cmp
push
popa
mov
adc
and
mov
or
push
jp
cmp
scas
ljmp
jno
ss
insl
push
push
mov
movsb
fxch
call
xor
mov
test
xchg
xchg
cmp
cld
fs
push
pop
mov
cli
xacquire
mov
xchg
and
lods
mov
pop
sahf
in
fnstenv
fistpl
jp
popa
mov
dec
call
push
jae
mov
mov
lcall
jl
dec
inc
bound
mov
mov
lcall
pop
cmp
xchg
les
daa
push
xchg
ljmp
mov
xor
scas
sarb
xchg
and
cmp
jae
aaa
shrb
dec
lret
test
pusha
xchg
jl
les
push
inc
cmpsl
out
ret
inc
cmp
sbb
mov
shrb
jecxz
jne
mov
and
xchg
out
fsubp
movb
scas
sub
cmpl
mov
faddl
cmp
pop
sbb
xor
jne
fisubrl
add
push
les
lret
sti
pop
inc
leave
xor
xor
enter
and
lret
inc
idivb
sbb
mov
or
xlat
stos
fsubrl
outsb
push
xchg
or
push
movsl
arpl
out
lahf
pop
popa
in
iret
ja
sarb
scas
shl
aam
mov
sbb
mov
and
sub
in
push
pushf
mov
jb
jae
push
ret
or
repz
push
ret
add
lret
les
loopne
and
mov
loop
adc
out
dec
lret
sub
mov
jge
out
stos
test
pop
or
mov
push
or
fsubp
cmp
pop
lret
leave
push
push
xchg
repnz
push
dec
mov
adc
repz
pusha
clc
sub
int
inc
mov
add
pusha
repnz
mov
fisttpl
gs
push
cmp
mov
movsl
inc
clc
add
and
xchg
mov
xchg
test
cmp
sbb
test
jne
enter
testl
lret
xchg
fwait
mov
push
stos
xchg
das
mov
mov
and
mov
push
adc
fldenv
in
mov
arpl
pop
pop
inc
insb
sbb
xor
bound
sbb
or
cmpsl
cmpsb
pop
and
repnz
cmp
pop
cmpsl
in
repnz
in
xor
jo
out
test
mov
add
sub
adc
outsb
push
loop
cmp
cmc
fmuls
movsb
fwait
jne
mov
and
test
jnp
jmp
jp
inc
test
add
and
ret
std
iret
xor
mov
sahf
cmpb
leave
dec
push
sbb
push
jmp
dec
pop
adc
inc
lret
hlt
into
xchg
xchg
dec
mov
std
jae
mov
ss
add
lahf
in
and
cltd
insb
mov
cvtps2pi
movsb
ja
pop
dec
ds
inc
sbb
xchg
in
mov
sub
inc
shrl
dec
test
adc
movsb
jne
pop
pop
push
inc
mov
sbb
mov
cmp
inc
jne
js
lods
repz
adc
or
lret
addr16
in
or
cmp
lods
or
dec
and
out
pop
push
sti
adc
imul
push
add
pop
insl
dec
push
imul
push
call
or
loope
fcoms
stc
cli
sub
fmull
sarl
leave
sti
jae
dec
add
mov
dec
and
cmp
or
fsts
cmpl
mov
pop
dec
mov
stos
and
mov
iret
mov
push
aas
lods
pusha
push
and
pop
push
or
out
jbe
lea
enter
push
push
pop
and
xor
or
pusha
jns
fdivr
mov
push
imul
fbld
or
xchg
hlt
jae
jo
jnp
lcall
lret
cmpl
sbb
lods
pop
xchg
outsb
and
add
cmpsb
mov
dec
sbb
adc
fisttpl
pop
xor
vcvtss2sd
sahf
and
stos
pop
ljmp
xchg
dec
xchg
jle
loopne
ss
adc
fcoml
mov
loopne
pop
test
jmp
mov
xchg
fistl
jmp
pop
pushf
jbe
movsl
sbb
loope
sbbl
cld
mov
testl
popf
mov
add
out
std
jno
stos
xchg
lds
ret
push
xlat
sbb
addr16
aad
out
mov
or
sbb
or
leave
sbb
and
insb
xchg
stos
sarb
push
sub
pop
rcr
js
pushf
jb
lcall
iret
inc
sbb
aas
ret
pop
clc
stos
cmp
in
cmpsb
ljmp
sbb
sti
roll
sarb
jns
and
dec
pop
movsl
mov
lahf
test
ds
insl
je
lock
enter
fildll
movsl
jo
clc
repnz
xlat
test
and
inc
or
dec
mov
sbb
popf
cmovle
fwait
sbb
loopne
pop
scas
xor
ficoms
mov
lahf
xchg
mov
add
sbb
xchg
and
or
xor
andb
or
cmp
iret
adc
jnp,pn
mov
aad
paddw
ficoml
insb
mov
fstl
dec
hlt
pop
stos
xor
push
lret
icebp
mov
cwtl
sbb
add
leave
mov
mov
scas
ror
xchg
outsb
dec
dec
mov
ficoml
jmp
hlt
cltd
dec
rcrb
movsl
fcmove
mov
and
in
sti
dec
das
lds
jae
fcmove
test
mov
dec
sbb
push
mov
mov
test
andb
inc
or
cwtl
imull
das
pusha
stc
dec
mov
lds
push
cmp
push
lahf
in
and
mov
fiadds
stos
icebp
add
cld
xor
push
lret
mov
xchg
in
stc
lret
cmp
pop
sub
loope
sub
mov
mov
dec
mov
sti
xlat
dec
push
jne
cli
js,pn
mov
movsb
dec
mov
adc
push
ret
mov
pop
xchg
xchg
xchg
lret
andb
sub
mov
jne
push
cli
jne
inc
stc
pop
outsb
cli
and
into
inc
or
cmp
out
add
push
pop
incl
out
decb
sub
dec
jle
leave
mov
pop
adc
cmp
inc
mov
and
jg
mov
out
sub
xor
enter
xchg
test
outsb
xor
cwtl
jg
dec
sub
inc
fimuls
or
cli
cmp
jge
aad
test
xor
stc
insl
mov
scas
fcompl
ljmp
sarl
fucomi
mov
adc
xchg
sbbb
push
cmovne
xchg
incl
fs
adc
insb
popf
push
gs
cmp
xlat
pop
add
cmpl
push
sbb
sub
repnz
outsb
or
leave
out
sub
dec
addb
mov
test
mov
out
push
lds
das
mov
push
arpl
sbb
cmp
jb
push
or
push
fiadds
int3
out
sub
int3
bound
pushf
pushf
dec
jo
ja
sbb
scas
dec
test
movsl
cmp
stos
jne
ds
mov
or
daa
sub
lcall
push
ret
daa
jg
inc
outsb
push
out
cmpsl
shrb
inc
stc
pop
out
push
std
fcomp
sub
pop
sti
jg
add
add
or
push
scas
pushf
sub
test
lds
lods
fdiv
and
loopne
adc
aas
es
test
test
stos
cmp
adc
cmp
mov
dec
mov
adc
add
mov
adc
addl
add
mov
popa
push
sbb
cld
dec
es
ja
pushf
push
out
cs
mov
testl
sbb
or
inc
daa
jle
sub
sti
lcall
sub
add
jg
enter
lea
add
out
lods
std
and
leave
mov
out
in
aas
aad
ljmp
in
cltd
iret
lds
loope
push
sbb
add
and
lcall
inc
push
push
mov
cmc
inc
clc
adcl
mov
stos
dec
push
lret
xor
pop
dec
rcll
mov
mov
and
pop
mov
cwtl
loope
repnz
xor
mov
aam
rcrl
xchg
add
iret
push
dec
insb
pop
shl
mov
mov
mov
adc
pop
cs
cmp
sbb
dec
lods
das
cmp
mov
mov
xor
jns
leave
jbe
push
imul
out
or
mov
dec
push
cs
xchg
jle
add
cli
rcrb
adc
xlat
fidivrs
cmp
dec
stos
inc
push
push
push
sub
sti
push
pop
fstp
cmp
mov
add
mov
std
sub
cwtl
jno
sarb
pop
inc
jne
or
jns
mov
popf
pop
add
adc
sbb
cmp
flds
inc
frstor
hlt
sub
int
sub
add
and
dec
rcrb
mov
cmpsb
in
ss
pop
sub
das
dec
cmp
jg
jb
mov
sub
rorb
push
fmul
cmp
ljmp
jne
add
rclb
sub
cmpsb
test
cli
push
sbb
daa
test
cmc
lea
mov
es
push
cmp
dec
pop
jne
int
jns
out
das
loope
sub
cmp
sbb
lods
popa
ds
mov
movsl
bound
xchg
mov
fadds
sub
add
out
testl
test
mov
repz
pop
mov
mov
aas
push
or
loopne
dec
jg
popa
and
arpl
mov
sbb
inc
jmp
jmp
sbb
pushf
add
cmp
xchg
push
fdiv
cmc
into
jmp
mov
cmp
xchg
add
dec
cwtl
jae
lods
test
xlat
leave
sahf
dec
ss
add
adc
xor
xchg
aaa
sahf
adc
scas
mov
ja,pn
sub
push
data16
and
es
xor
or
xchg
and
pop
jo
fldt
dec
and
cmp
sub
adc
cmp
push
aas
pop
sti
fwait
sbb
test
imul
enter
add
idivl
repz
xchg
mov
xchg
mov
ss
sbb
and
inc
xchg
fs
add
dec
mov
cwtl
jl
repz
and
xor
in
dec
jge
je
push
lcall
mov
repz
out
dec
ss
mov
pop
stc
shll
mov
push
cmp
push
scas
jbe
mov
mov
mov
loop
cli
movsb
icebp
ret
or
arpl
cli
add
inc
mov
pop
xchg
aad
cmp
addps
cltd
push
push
icebp
stos
xchg
jno
mov
jp
sub
loop
popf
pop
jge
test
out
aad
xor
adc
sub
push
jns
mov
cs
sbb
push
adc
dec
es
pop
adc
sahf
mov
daa
mov
pop
outsb
mov
imul
subl
sub
cmp
std
jge
pop
fldt
jg
loop
adc
dec
mov
sbb
ficomps
shrl
pop
dec
adc
push
lds
fwait
fnstsw
dec
push
add
xchg
test
lea
ljmp
sbb
xchg
push
adc
xor
cltd
arpl
shl
inc
jo
pop
ds
sbb
mov
jne
mov
cmp
je
aam
dec
sbb
pusha
in
je
lret
not
dec
sub
xlat
bts
sub
or
scas
sub
test
adc
