xor
insl
push
sub
pusha
xchg
lods
adc
in
and
daa
mov
mov
lahf
push
add
pop
movl
int
pop
das
fwait
loopne
pushf
xchg
stos
adc
hlt
mov
pop
outsl
xor
and
jl
jp
rcr
shrl
pop
in
pusha
jns
xor
lret
stos
cmc
sub
sub
pop
inc
rcll
adc
inc
xor
fmull
fwait
inc
mov
xor
in
jge
jg
sub
mov
xor
std
mov
fstpl
scas
mov
rcrb
push
jae
adc
mov
xchg
mov
cmp
into
cmp
shll
ret
fmulp
mov
mov
mov
adc
fists
push
cmpsb
jecxz
loopne
or
adc
cmpl
cmp
das
pop
rcrb
jae
add
and
jo
dec
mov
nop
mov
cmp
sub
dec
lods
in
dec
jns
sub
test
xchg
fstpt
mov
adc
lahf
shlb
cwtl
movsb
mov
lods
pop
ljmp
sbb
and
inc
lret
lret
xor
rorw
pop
inc
test
outsl
shl
cmc
out
push
outsl
jp
fidivrl
nop
adc
push
mov
pop
test
mov
rcr
cs
mov
jmp
iret
notl
push
lock
push
mov
pop
call
lret
dec
clc
test
rcrb
in
push
test
jp,pn
fs
mov
subl
cwtl
mov
arpl
faddp
imul
call
je
push
and
ja
cmc
or
xor
jb
ljmp
cmc
ljmp
pop
test
push
data16
ljmp
ljmp
scas
or
inc
lea
dec
jno
mov
xlat
addb
add
je
sbb
jno
cmovbe
push
push
lcall
sub
les
push
xchg
mov
inc
lret
test
lret
push
gs
pop
dec
xchg
mov
add
jg
flds
daa
insb
xor
sbb
test
ja
icebp
andb
lds
call
and
mov
repnz
mov
leave
dec
cmp
sub
je
mov
xor
dec
int3
jmp
mov
pop
add
or
rorb
shlb
jle
push
cmp
sbb
and
adc
or
negb
aas
aad
mov
aad
cmp
xor
in
in
sbb
jmp
add
push
imul
outsb
jp
and
jns,pt
mov
or
xor
mov
fcmove
insb
mov
lcall
cmp
shll
lret
icebp
sub
cmp
cmpb
xchg
jmp
dec
pop
pusha
inc
fmulp
bound
andb
or
fs
aaa
das
or
or
xchg
mov
or
jp
das
add
pushf
sub
inc
pop
mov
xchg
lock
adc
lret
mov
popf
inc
imul
pop
jne
repnz
fwait
xchg
xchg
xorl
push
ljmp
xchg
fwait
push
mov
push
stc
faddp
mov
call
xchg
aaa
xchg
and
in
add
and
fcmovu
cmp
mov
int
push
imul
into
mov
shll
orl
aaa
jge
jae
ja
jnp
mov
dec
imul
lods
sub
pop
adc
scas
lods
dec
push
mov
push
dec
bound
mov
jb
jns
aaa
call
loope
mov
lret
xchg
sbb
test
and
mov
xor
mov
hlt
adc
add
add
jge
mov
sbb
into
lds
lock
jbe
xlat
in
push
scas
adc
nop
sub
sub
call
jns
and
lahf
pop
push
scas
pop
mov
cli
fyl2xp1
scas
push
mov
xchg
mov
sub
sub
jle
mov
adc
jge
cmp
rcl
mov
jb
test
adc
dec
outsl
movsl
or
xor
mov
xchg
das
jg
mov
jecxz
inc
mov
inc
push
sbb
jp
pop
rclb
pop
movsl
or
imul
cmp
sub
hlt
pop
pop
sbb
jo
pop
iret
jl
xor
imul
daa
mov
mov
xchg
pop
add
xchg
sbb
inc
mov
adc
ljmp
or
xor
call
cmp
inc
lahf
int3
pop
lahf
xchg
pop
nop
iret
call
scas
cwtl
jl
scas
xchg
inc
inc
cmpsb
pop
xchg
cmpsb
sbb
jo,pn
push
or
or
or
pop
or
mov
sahf
mov
sbb
rcrb
sub
into
xchg
pop
ds
out
push
xchg
and
aad
adc
ja
sbb
lea
mov
dec
dec
jnp
in
and
int
into
push
pop
cltd
and
inc
and
das
cmp
jl
iret
fwait
movsb
cmpsl
movsb
imul
add
pop
pop
data16
jmp
inc
incl
mov
cmp
loop
mov
int
add
adc
jne
icebp
push
test
out
iret
lea
inc
addr16
outsb
scas
or
call
dec
aam
or
add
add
pop
push
sub
pop
push
push
push
push
lea
push
push
push
push
mov
nop
stc
push
pop
stc
mov
xchg
add
rol
lea
jg
xor
clc
jmp
jmp
call
and
js
not
not
pop
sub
or
add
cld
clc
push
add
mov
pop
cmp
jl
push
push
lea
pop
pop
cmc
or
or
mov
xchg
js
sub
jle
jae
or
test
test
or
clc
cld
push
add
push
pop
pop
or
push
push
push
cmp
pop
pop
pop
cld
inc
dec
nop
xor
add
jp
xor
push
jbe
sub
pop
je
mov
push
jle
xor
pop
or
test
je
xor
push
add
pop
cmp
dec
inc
jl
jle
push
or
pop
test
push
push
ror
pop
pop
stc
push
add
pop
clc
add
shl
cmc
xor
push
push
test
pop
pop
jle
push
shr
pop
dec
inc
clc
ror
test
clc
stc
push
push
push
pop
pop
stos
push
push
pop
pop
pop
push
call
jnp
gs
pop
push
out
mov
outsb
aas
insl
mov
jno
ds
pop
sub
dec
test
inc
sbb
cmp
push
push
pop
add
pop
push
sub
pop
ror
ror
jmp
sub
sub
cmp
bound
pop
cmpsl
dec
iret
clc
jmp
inc
and
cwtl
daa
mov
and
in
push
das
pop
and
test
call
push
and
pop
push
movzbl
ror
push
mov
pop
lea
or
push
jbe
jbe
xor
pop
and
stc
loop
pop
push
je
push
push
mov
pop
pop
pop
dec
inc
cld
jmp
xor
inc
sbb
shlb
sub
andl
mov
test
leave
or
pop
mov
push
in
shl
fwait
inc
lods
imul
test
jp
sub
adc
sub
xchg
bound
push
arpl
decl
test
movzbl
push
or
pop
push
add
pop
cld
stc
mov
loop
pop
push
jp
shr
pop
jnp
test
shl
call
ficoml
add
ds
cmp
cmpl
gs
adcb
les
or
imul
stc
imul
loope
sbb
xorl
rorb
int
nop
sbb
pushf
ds
fstl
mov
dec
lahf
jmp
pop
mov
sub
out
or
ja
jmp
pop
repz
fsts
jmp
popa
es
push
sarl
sarl
icebp
cmp
ror
sub
fwait
xchg
add
add
sbb
mov
xchg
rclb
loope
lds
xor
roll
shl
jae
push
inc
jle
cmp
fidivrs
dec
push
jae
dec
mov
stos
pop
jg
xor
ficomps
mov
aam
dec
mov
push
in
jl
push
mov
adc
xor
and
sub
scas
ds
rcrb
xchg
std
mov
cmp
push
clc
xor
push
pop
stos
hlt
and
cld
push
sar
cmp
aas
les
sahf
call
pop
lods
aas
das
insb
dec
xchg
repz
shll
loop
or
scas
outsl
push
dec
cmp
fcoms
pushf
push
lods
inc
aad
ljmp
jle
jo
cmpsl
popl
push
cmp
aas
test
sahf
scas
jne
sub
jmp
mov
stc
xchg
icebp
test
xchg
jle
jg
adc
into
mov
xchg
xor
icebp
pop
push
pop
adc
into
loope
mov
or
out
shlb
mov
movsl
fcoml
mov
adc
pop
addr16
insl
lock
jmp
push
add
dec
fcoms
xorl
jno
movsl
jmp
fnstcw
rcl
popf
fstp
mov
divl
ss
jg
lret
inc
loope
ljmp
push
pop
push
mov
in
xor
js
test
sti
sbb
mov
test
xor
mov
lods
xadd
sti
data16
xor
adc
push
ficoml
adc
jge
and
lds
insb
mov
jmp
fistl
aad
gs
inc
or
and
movsl
pop
push
fistps
sub
mov
aam
mov
jecxz
pop
ret
pop
mov
add
js
xchg
sbbb
jnp
push
imul
enter
lea
xchg
jne
mov
rorb
pop
int
leave
out
sub
gs
sub
sbb
pop
je
stc
imul
lret
cmp
sbb
add
loopne
sub
jp
add
out
xor
loop
mov
jmp
inc
aad
dec
pop
lcall
jo
rorb
and
lret
mov
ss
jecxz
jl
arpl
mov
xchg
mov
lret
xor
out
mov
xchg
sbb
push
mov
mov
jle
ret
push
test
add
sbb
test
inc
jg
lods
or
add
xchg
pop
loop
dec
lds
add
jmp
pop
jmp
add
mov
outsb
fnstcw
shrl
loop
pop
jmp
call
sub
dec
rcrl
jbe
ds
xlat
nop
out
cmp
pop
mov
jo
repnz
jnp
test
fnstcw
dec
sbb
and
add
dec
in
push
sarb
imul
test
lds
mov
adc
lock
mov
push
rcl
xchg
ss
mov
xor
adc
ds
dec
mov
shrb
repnz
testl
loop
std
lods
pop
or
mov
inc
sarb
loope
lahf
jl
loopne
fdivs
dec
iret
mov
fldt
inc
cli
repnz
jne
mov
mov
loopne
sub
pop
and
in
adc
stos
or
notb
ret
or
fnstenv
out
pushf
mov
nop
sub
test
mov
xchg
dec
enter
xor
sbb
dec
and
xor
inc
lret
sbb
lods
cmp
lock
mov
ret
loope
jg
std
push
dec
cwtl
je
lds
mov
adc
or
clc
inc
call
or
or
cmc
cmp
out
rcll
lret
mov
popf
push
inc
sti
rcll
or
push
cltd
mov
xchg
xchg
lret
pop
inc
mov
aam
loop
pop
icebp
mov
outsl
xchg
cs
adc
cwtd
out
arpl
sbb
loopne
es
repnz
xor
dec
mov
mov
mov
out
jb
jle
fists
psubd
xlat
ja
out
push
cli
mov
insl
or
jo
cmpsw
popa
pop
testl
loope
roll
cwtl
gs
mov
and
xchg
stos
fcoml
aad
insl
and
leave
mov
xor
sbb
mov
outsl
or
lock
shrl
mov
push
cwtl
test
fucomi
pushf
stc
jbe
rorl
add
imul
inc
jae
mov
stc
mov
jp
cld
jmp
cli
or
mov
cltd
jne
jl
mov
loopne
mov
bound
adc
push
jno
mov
ror
add
dec
scas
aam
hlt
setns
pop
jg
dec
xor
dec
pop
mov
loopne
sbb
add
add
pop
imul
andb
sti
push
pop
pop
imul
jno
push
xchg
clc
lock
loopne
cmp
mov
out
xor
scas
mov
dec
xor
pusha
mov
mov
add
and
aas
adc
push
aas
insb
stos
inc
adc
pop
jno
mov
mov
push
jecxz
ja
and
push
mov
in
mov
xchg
push
push
add
xlat
test
jg
pop
push
and
adc
cmpb
mov
xchg
adc
dec
cwtl
shrb
push
sub
jecxz
int
mov
mov
repz
aam
mov
adc
sar
pop
icebp
cmpsl
iret
sbb
xchg
andb
lret
into
outsb
imul
lret
rorl
adc
loope
sub
cmp
pop
pop
jmp
ja
xchg
jl
pushf
dec
or
bound
cwtl
xor
lea
in
xchg
outsb
test
mov
inc
mov
inc
not
jno,pt
insb
shlb
repz
push
xchg
repz
clc
inc
mov
test
movsb
cli
lea
xor
jecxz
or
call
ds
call
fbstp
pop
hlt
popf
inc
push
and
bound
hlt
inc
dec
xor
xchg
xorb
cmp
andb
mov
inc
test
push
mov
push
inc
sarb
push
sbb
mov
mov
testl
and
lret
ret
or
movsb
test
sub
jbe
push
push
lea
lcall
push
std
mov
adc
jg
outsl
ljmp
dec
jb
push
mov
lret
inc
js
push
outsl
clc
rorb
push
nop
aaa
pop
mov
in
in
dec
sbb
imul
in
cmc
sbb
pop
adc
cmp
ret
iret
push
dec
arpl
push
xchg
daa
lret
push
idivl
mov
ret
stos
nop
sbb
or
mov
cs
fcmovnb
leave
sub
push
lock
stc
iret
test
sbb
jg
and
jns
inc
jns
sbb
add
fisubl
jmp
cmp
fsubrl
test
pop
cli
clc
mov
inc
lods
xor
sub
mov
jo
jmp
imul
mov
repnz
int3
dec
add
cmpsb
jbe
fdiv
negb
fmuls
mov
mull
inc
rol
and
pop
fdivl
lods
xor
adcl
arpl
into
add
mov
lds
lret
cmp
loope
ret
mov
push
not
clc
fldt
sbb
stos
add
arpl
lahf
rcl
fistl
mov
xor
sbb
rolb
outsl
dec
xchg
push
jmp
cmpsl
cmpl
jmp
adc
and
sbb
lds
adc
data16
in
nop
xchg
mov
repnz
popa
bound
nop
scas
cmpsb
push
mov
sbb
adc
lock
loope
inc
icebp
dec
pop
sub
divl
add
loope
je
call
nop
fadds
mov
daa
inc
fadds
sub
add
scas
testl
push
int3
negb
addr16
jb
push
cmpxchg
jno
cltd
arpl
lods
imul
xor
cld
js
dec
and
dec
dec
push
dec
adc
sbb
mov
push
lahf
icebp
xor
imul
test
or
scas
ja
mov
mov
lea
mov
in
inc
xchg
pop
lods
xor
jl
mov
popa
loopne
jo
lea
or
in
cmp
xchg
aad
fsubr
in
mov
mov
stos
pop
jb
xchg
inc
sbbl
mov
inc
stc
insb
mov
dec
fisubs
loope
rcr
rorb
push
cs
mov
icebp
lret
add
or
mov
loop
ds
mov
mulb
sub
mov
and
icebp
xchg
push
fisubs
movsl
test
pop
shll
loopne
jge
ds
mov
imul
jo
xchg
inc
pop
jnp
mov
bound
arpl
ja
out
inc
sub
leave
mov
les
push
add
mov
cmpsl
lahf
dec
mov
pop
mov
or
mov
hlt
fmull
rol
fiadds
and
dec
mov
daa
outsb
pop
sti
rcr
scas
stos
jl
push
je
das
pop
push
xlat
jae
xor
push
dec
jmp
lar
pushf
push
popa
js
inc
inc
adc
or
sbb
aad
icebp
dec
sub
rcl
subl
push
jle
xlat
shrb
add
xchg
inc
and
fwait
pop
sub
jle
aaa
and
pushl
nop
pop
mov
pop
dec
and
push
sub
dec
and
xor
pop
push
adc
dec
add
test
push
mov
outsl
pushf
xchg
mov
int3
ret
xchg
push
insl
sti
add
leave
insb
dec
xor
mov
and
or
fdivrl
or
lea
xchg
je
add
cmp
push
inc
rcr
jno
mov
aaa
and
jno
lea
add
mov
pop
imul
sbb
loope
xchg
adc
pop
push
fidivs
mov
test
push
jg,pn
lret
push
dec
cmp
jecxz
fimull
xor
popf
mov
mov
cmc
xchg
inc
or
jns
rolb
fildll
push
pop
pop
inc
mov
cmpsl
ret
push
cmp
negl
mov
popl
jp
movsl
lahf
popa
cmp
in
movsl
xchg
cld
out
pushf
mov
inc
sbb
cmp
popa
call
push
mov
fwait
pop
insl
outsb
dec
lahf
cmpsl
xchg
imul
test
das
inc
fmuls
or
es
std
cmp
push
hlt
lock
jmp
adc
call
ljmp
popa
int
sub
sub
xor
clc
xor
pusha
mov
lods
jecxz
shlb
clc
or
loopne
scas
push
push
or
in
pusha
jb
xor
mov
jne
mov
or
or
push
mov
add
and
rcll
in
or
icebp
push
sbb
lods
adc
shrl
into
xchg
lods
test
xchg
pop
ret
mov
gs
insb
outsl
pop
sub
jg
adc
and
maxps
lret
pop
inc
loopne
push
jo
lret
add
and
push
pusha
and
and
xlat
lods
xor
out
and
dec
gs
jecxz
or
lods
mov
push
cwtl
sbb
shrl
es
arpl
or
scas
jb
jns
aad
fsts
outsl
adc
cmp
lods
push
sub
cltd
mov
lret
loope
xchg
xchg
sub
and
mov
pop
enter
aam
mov
xchg
sub
push
scas
rorl
push
pop
mov
sbb
ret
pop
ss
sub
add
and
pop
daa
push
and
in
fwait
shl
mov
xchg
sbb
loop
adc
imul
add
push
in
and
dec
iret
inc
mov
cmp
fwait
stc
cmp
popf
dec
cmp
pop
xor
ja
sub
mov
testl
adc
mov
jns
stos
sub
popf
in
add
jb
jecxz
lcall
cld
mov
test
fisttpll
test
fisubrl
sub
aad
mov
push
xor
stc
jle
shl
jmp
add
xchg
mov
push
xor
lret
lahf
outsb
pop
add
js
add
jne
addps
inc
push
shlb
jmp
loop
insb
mov
inc
inc
imul
inc
inc
aaa
mov
test
shll
clc
div
pop
push
mov
shll
lea
and
ret
and
and
mov
pop
push
lds
sahf
jb
jo
scas
mov
lods
adc
and
jbe
daa
jbe
pop
cmc
xchg
add
jnp
jg
pusha
adc
adc
insl
adc
loope
cmp
test
lret
add
mov
add
mov
inc
getsec
sub
add
pop
jno
xchg
addl
xchg
cmc
xchg
cmp
loopne
subl
test
mov
bound
ds
push
movsl
out
pop
nop
jb
xchg
pop
sub
mov
out
ficoml
std
lods
xor
fidivrl
add
fmulp
jp
shll
xor
pop
and
xchg
ss
arpl
jle
xor
mov
jne
pop
imul
aad
mov
xchg
imul
shrl
adc
adc
and
inc
jmp
push
xchg
cmp
fistps
ljmp
rorb
mov
xor
push
in
xchg
jl
clc
leave
mov
cmp
mov
add
mov
aam
dec
xlat
cmp
je
jns
pop
jno
and
and
and
mov
lret
les
cltd
inc
push
add
or
pop
push
xor
in
fbstp
or
pop
dec
int3
push
xor
pop
lock
mov
add
jmp
pop
repz
test
cmpsb
les
xor
jnp
adc
cmc
leave
pop
jl
sub
lds
dec
xor
mov
mov
sub
xchg
outsb
xor
jbe
ficomps
sti
jmp
adc
pop
cmp
divl
push
dec
xchg
or
and
fucom
orl
cmp
add
and
int3
mov
cltd
jo
sbb
out
ja
adc
add
fcmovne
ds
dec
cmpsb
push
cld
aas
fstpl
movsb
lods
mov
lahf
fisubrl
xchg
jo
jecxz
in
ja
cmp
andb
push
and
sbb
inc
scas
jl
jmp
push
and
test
cmp
insl
mov
or
sbb
mov
and
in
sahf
push
enter
or
sarb
mov
scas
stc
mov
add
adc
jmp
ret
xchg
mov
ret
and
lods
dec
push
ljmp
iret
std
inc
mov
lahf
outsl
mov
adc
jmp
xchg
test
loopne
add
popf
inc
dec
mov
inc
mov
cmpl
pop
leave
mov
arpl
test
dec
dec
push
scas
jo
push
inc
or
lcall
mov
cltd
push
add
mov
fcoms
add
scas
jns
nop
aam
int3
test
pop
fwait
rcr
imul
lods
xor
inc
xchg
xor
packsswb
or
stos
loopne
jle
cmc
sub
mov
pop
mov
fcompl
jg
xchg
or
insl
xchg
sbb
stos
mov
in
push
std
xorl
daa
fs
in
jle
inc
es
lock
xchg
jl
xchg
adc
xor
jne
cmp
icebp
mov
into
ss
jg
lret
lret
xchg
cmp
jno
popa
in
xor
mov
out
stos
push
mov
mov
adc
mov
jnp
jae
mov
inc
addr16
cli
mov
lods
fsubp
test
dec
lods
push
mov
pusha
cmp
aas
outsl
mov
cmpsb
or
mov
push
lea
pop
mov
xchg
cmc
jmp
arpl
push
cs
aaa
popf
repz
mov
sbb
rorb
and
pushf
fmul
lea
mov
mov
cmc
fistl
fimull
xlat
fsubrs
and
xor
leave
cmp
test
adc
mov
add
rclb
mov
add
jle
or
dec
jmp
js
xchg
repnz
lcall
cmpsl
clc
cli
out
jne
dec
jg
insb
ret
add
lds
pop
call
dec
add
jae
aad
popa
pop
pop
scas
push
out
inc
daa
sbb
mov
fisubrs
xor
rcrl
xorl
ljmp
mov
xchg
fs
les
pop
leave
clc
sbb
mov
mov
and
scas
mov
fiadds
fsubrl
stos
xlat
inc
and
jl
loopne
inc
inc
push
inc
inc
jo
test
fmuls
and
mov
cmpsl
cmp
adc
inc
cmc
xchg
loop
adc
iret
cld
jno
inc
into
pop
xor
out
sub
xor
dec
sbb
cmp
mov
xchg
in
or
lods
imul
cmp
jmp
add
sbb
adcl
pushf
loope
dec
xor
sbb
stc
add
push
imul
out
xchg
pusha
xor
adc
pop
in
add
mov
dec
add
aad
cmpsl
jbe
push
mov
mov
xchg
dec
dec
inc
push
inc
jmp
repz
push
popf
dec
fsts
push
mov
dec
mov
dec
lret
push
xchg
push
scas
xor
leave
jle
aaa
xchg
fdivrl
stc
aaa
mov
pop
adc
leave
mov
push
cmp
jne
lahf
cmp
inc
stc
and
rcr
mov
shll
lods
into
xor
fistps
ja
xor
loopne
mov
test
stc
mov
and
mov
pop
jge
outsb
and
sub
pop
push
push
out
mov
mov
das
aad
push
adc
jl
push
dec
xor
enter
daa
add
je
xchg
lret
jge
cmp
daa
jns
aas
sub
aaa
xchg
and
lds
aas
xchg
xchg
sub
xor
jmp
popf
cwtl
push
movsl
cmpl
jne
orl
fistps
test
dec
fildll
cmp
lcall
inc
xor
inc
or
ret
jmp
pop
shr
test
xor
pop
divl
mov
xchg
les
cmp
adc
xor
xchg
push
and
rcl
repnz
jo
pop
stc
jb
push
stos
mov
call
int
sti
stc
and
js
cmp
mov
adc
cmc
or
pop
int
sub
jl
mov
test
sarb
mov
xchg
es
mov
fs
imul
dec
or
movsl
jg
testb
mov
bound
sub
int
and
dec
aad
mov
pushf
mov
js
sbb
mov
ficoms
or
xor
inc
mov
sti
in
push
aad
sbb
in
dec
push
repz
jl
rolb
lret
aaa
fistl
sub
sub
cmp
scas
leave
rclb
xorb
dec
sarl
mov
or
les
mov
loopne
pop
ret
ljmp
stos
lret
xor
rclb
push
data16
jl
cmp
fdivp
rcrl
adc
mov
movsb
mov
mov
sbb
mov
mulb
into
nop
bound
lods
test
cmp
imul
jl
cmc
ss
mov
jno
fisttpl
xchg
mov
inc
adc
stc
inc
pop
lcall
aam
cmp
sub
mov
aad
jecxz
cmpsb
and
add
jle
lahf
and
hlt
and
xor
inc
dec
adc
jbe
sbbb
popa
dec
lret
add
cld
push
leave
enter
pop
xchg
sbb
imul
ret
sub
pop
dec
and
fwait
stos
daa
jg
in
out
or
insl
ds
mov
inc
dec
sar
dec
in
js
enter
push
insb
mov
and
pushf
paddw
in
lret
sub
shlb
rclb
sar
mov
hlt
out
lret
jp
pop
je
mov
aas
mov
inc
sbb
rorb
imul
lods
insl
mov
cwtl
mov
and
xlat
sbb
mov
gs
rol
cmpsl
mov
shl
sub
jb,pn
lock
pusha
sub
sub
test
sub
mov
add
mov
loope
adc
adc
push
add
movsl
cmpsb
push
jb
inc
aad
test
inc
aad
insb
testb
dec
pop
cmpsb
jg
mov
pop
and
pop
fbld
mov
stos
call
jae
push
stos
aas
fldt
pop
fsubrs
xchg
icebp
punpckhbw
pop
outsb
cli
push
fcmovbe
repz
sbb
xchg
jo
nop
mov
sbb
js
bound
mov
sbb
pusha
dec
js,pn
jbe
or
and
inc
outsl
xchg
pop
jmp
lret
sbb
cltd
or
sub
add
push
inc
rorb
xor
adc
dec
roll
shl
cmp
add
sub
cmp
pushf
mov
jno
add
xor
xor
jbe
cmp
mov
xorl
stos
jg
gs
xor
pop
mov
push
lock
sbb
jnp
inc
pop
push
adc
push
inc
insl
rcrb
mov
stc
dec
lock
sub
rclb
mov
daa
ror
std
pushl
orl
mov
in
fbld
repz
inc
in
popf
mov
mov
ret
jo
in
push
push
jp
add
pop
pop
loope
ss
add
fmuls
xchg
int
sarb
and
cmp
adc
push
cmp
out
mov
mov
dec
jae
adc
lea
scas
inc
jne
shr
repz
cmp
ja
xchg
mov
mov
rolb
aad
xchg
mov
shrb
jae
shrb
movsl
jmp
mov
sbb
sub
cltd
aam
out
mov
cmp
pop
mov
jecxz
mov
insl
test
test
or
aas
es
mov
into
popf
inc
fmuls
adc
mov
jno
out
inc
jae
jbe
or
addr16
stos
rorb
enter
pop
cld
notb
test
add
jmp
popa
xor
and
pushf
cld
test
inc
mov
aam
jne
jl
shll
mov
cmpsb
sti
jno
sub
pop
push
mov
push
mov
inc
das
inc
lcall
gs
push
jl
dec
mov
rorb
int3
and
aam
or
add
invd
pop
mov
adc
sub
or
fmulp
jmp
xchg
sete
inc
stc
jl
mov
xchg
pop
jo
xor
push
icebp
xchg
push
jg
cmp
xor
fldcw
jae
pop
das
icebp
imul
movsb
cmpsl
push
lahf
add
int3
repz
push
jmp
and
adc
scas
je
xchg
jge
or
fwait
xchg
rolb
or
lods
cli
enter
pop
inc
scas
fwait
sti
in
mov
es
mov
mov
cs
inc
pop
xor
or
aaa
mov
sbb
sub
aad
adc
adc
push
fisubs
imul
jge
aam
hlt
cmpsb
int
ljmp
mov
pop
mov
sbb
mov
rolb
jb
test
mov
jne
fisubl
mov
inc
call
sarb
mov
and
je
movsl
push
ds
aas
dec
lret
int3
insb
xorl
je
movl
mov
and
dec
mov
roll
push
push
cld
pop
test
fidivs
dec
negl
push
jp
sub
xchg
jmp
xor
add
mov
cld
aad
test
adc
das
sbb
pop
dec
js
mov
xchg
lret
push
sbb
lea
sbb
xor
jbe
push
imul
gs
and
mov
and
insl
jae
jno
aas
shr
mov
xchg
data16
pop
sbbl
cli
ljmp
xchg
xorl
div
jecxz
mov
js
add
push
pop
mov
jnp
jne
sbb
inc
dec
loope
pop
mov
int
and
pop
outsb
repz
mov
nop
adc
jg
jno
pushf
iret
enter
es
mov
aam
leave
xor
call
cmp
mov
mov
sarl
mov
dec
mov
das
push
jae
imul
xchg
lret
adc
xor
scas
orl
mov
fiadds
cmc
push
lock
ret
rclb
gs
stos
pop
pop
movsl
bnd
pop
and
daa
mov
aas
or
xadd
mov
sbb
pushf
das
jne
in
xlat
in
sub
add
adc
mov
ret
xor
lret
inc
stos
movsb
ds
notl
mul
fldenv
xlat
shrb
addr16
mov
test
push
pop
aaa
inc
movsb
fcmovu
mov
arpl
cmpsb
xchg
pop
adc
dec
out
pop
inc
aaa
push
jle
sub
idivb
cmpsl
jg
ds
cmpsb
xchg
add
icebp
aam
add
sub
ret
or
mov
ret
ret
rolb
jge
mov
pop
dec
push
lock
sub
iret
std
subb
sbb
push
mov
inc
lea
mov
sbb
clc
cmc
imul
fimull
aam
es
pusha
cltd
ljmp
out
inc
les
shlb
mov
test
stos
inc
adcl
mov
jno
aaa
ret
mul
jge
test
jle
xchg
sbb
inc
fidivrs
inc
out
aaa
xchg
xlat
xchg
jns
jle
ret
in
and
int
push
cmpsb
test
adc
add
je
sbb
jmp
test
dec
pop
inc
cmp
mov
fbstp
jecxz
jbe
jp
les
dec
pop
jbe
in
sbb
pop
pop
mov
mov
scas
xlat
mov
data16
lods
mov
cltd
aam
mov
add
add
idivl
pushf
cli
dec
push
sahf
mov
mov
negl
testb
fstpt
shr
std
fs
addr16
test
insb
mov
inc
pop
jb
and
jmp
xor
sub
inc
jns
leave
sbb
inc
movl
fcmove
mov
mov
int
dec
sub
ds
fisubrl
mov
pop
or
xchg
jo
xorb
fwait
cmp
hlt
inc
jne
mov
cld
mov
mov
lcall
jle
ds
mov
pop
lcall
mov
popf
xchg
push
nop
cmp
scas
mov
ret
push
shlb
icebp
loop
cmp
sbb
iret
xchg
sbb
ss
mov
push
and
in
cmp
insb
nop
adc
cmp
test
mov
cmp
xlat
aaa
insb
les
int
es
push
xchg
or
fwait
mov
test
mov
mov
and
mov
xchg
clc
push
xchg
shlb
rcrb
cmp
or
iret
rclb
movsl
stos
in
push
mov
test
cld
dec
mov
lock
dec
dec
cmpsb
dec
gs
arpl
jecxz
loopne
or
je
lcall
pop
or
mov
push
aaa
or
je
mov
mov
pop
jp
add
push
pop
jnp
sbb
mov
int3
insl
in
dec
push
or
dec
cmpsb
nop
gs
rep
insb
push
jg
out
leave
enter
dec
pop
xadd
movb
lds
ret
mov
adc
pop
dec
int
lock
cmp
mov
fcoms
aas
pusha
in
test
stos
xchg
out
stc
adc
and
sbb
xchg
mov
inc
push
mov
push
sbb
add
imul
lds
movsb
mov
and
mov
test
mov
outsb
xchg
fimuls
xchg
jle
xor
scas
jb
pop
test
push
arpl
int3
inc
mov
lret
jno
pushf
mull
gs
lea
loopne
mov
adc
dec
arpl
stos
mov
cmc
cltd
dec
fmull
mov
out
cltd
inc
out
cltd
and
divl
push
testl
dec
js
xor
dec
mov
rcrb
fdivl
mov
xor
inc
int
xchg
dec
lock
xor
subb
fidivrl
xor
fiaddl
jge
pop
loope
lds
nop
jmp
inc
jmp
aaa
in
xchg
or
mov
jp
fisubrl
sbb
mov
hlt
pusha
cmp
sahf
adc
cmp
data16
sbb
push
dec
cmp
cmpsl
scas
lret
les
clc
mov
inc
mov
mov
ss
aaa
arpl
and
int
or
out
test
adc
mov
adcb
dec
xlat
outsl
test
pop
pushf
dec
sub
test
adc
jmp
mov
mov
inc
mov
movsl
imul
jle
pop
je
jbe,pt
xor
inc
jmp
mov
repz
outsb
cmc
sti
daa
mov
fincstp
lods
xchg
cld
fldl
divl
std
sbb
sub
pop
push
mov
xchg
outsl
mov
push
adc
cmp
lahf
xchg
loopne
fs
popf
and
adc
add
imul
mov
filds
std
jmp
adc
scas
xor
sbb
pop
testb
fcomi
mov
outsb
mov
js
out
jp
and
push
xchg
pop
mov
icebp
dec
inc
imul
pushf
xchg
cmpsb
imul
or
fildl
push
mov
sub
dec
lret
aam
cmpsl
pop
mulb
fwait
sub
aas
adc
lahf
mov
push
aam
xchg
dec
adc
ret
clc
shll
mov
inc
sbb
push
jns
inc
and
notb
aad
fldenv
mov
xor
dec
int
xchg
out
xchg
jb
shrb
fwait
jge
and
adc
ljmp
and
sub
arpl
pop
pop
leave
lods
jmp
je
adc
stc
popl
fucomip
pop
add
rorb
adc
sahf
rorb
mov
rcrb
and
xchg
xor
cwtl
jecxz
pop
es
adc
mov
orl
xor
inc
add
jno
xchg
jge
shll
add
mov
cmp
sub
inc
insl
cmp
cmp
dec
int
mov
xchg
shlb
aaa
outsl
loop
data16
pop
imul
test
cmp
mov
lahf
dec
jle
jmp
outsb
cmp
insl
bsr
dec
mov
insb
mov
cmp
xchg
dec
dec
push
xchg
out
ret
nop
fs
dec
add
hlt
shrl
mov
jnp
adc
mov
push
sahf
aam
or
je
data16
push
xor
xor
rorl
cli
loopne
push
subb
jmp
inc
mov
inc
sub
shll
cmp
fidivrl
or
popa
neg
les
sub
mov
jp
lahf
cmp
pop
jle
pop
sub
and
lea
outsb
adc
mov
xchg
daa
gs
ror
sub
test
xchg
fs
sbb
addr16
xchg
push
push
mov
shlb
mov
jb
in
push
ds
inc
adc
jp
mov
loopne
jge
sub
push
and
adc
out
scas
or
push
push
dec
in
push
rorl
sub
mov
hlt
sarb
mov
adc
jnp
inc
and
cld
dec
gs
cs
lock
mov
pop
lock
xchg
jnp
ja
and
shl
sub
ret
push
inc
stos
rcll
gs
jp
push
jbe
sub
addl
inc
ljmp
pop
or
outsl
incb
or
dec
clc
testb
lret
pop
sub
fldenv
cwtl
outsb
mov
xchg
cmpl
push
xchg
and
scas
mov
ss
mov
cmp
pop
loope
add
mov
ss
jge
push
cmpsb
stos
sahf
mov
aaa
testl
adc
xor
push
inc
arpl
lret
jl
sub
in
sbbb
lahf
push
aam
jno
sbb
test
in
fnstcw
jg
sub
leave
jbe
adc
mov
les
insb
imul
or
ss
test
xlat
orb
das
push
addb
jecxz
xor
stos
mov
ss
mov
dec
jecxz
scas
jmp
mov
sbb
rorl
mov
inc
pop
jl
pop
imull
call
iret
adc
mov
adcl
fidivrs
fisubs
mulb
loop
test
rol
shll
xchg
pop
fs
sub
xchg
scas
xlat
ja
fidivl
clc
xchg
roll
es
add
vmovaps
xchg
cli
adc
mov
frstor
mov
iret
pop
push
lock
xchg
fadds
xchg
push
add
pushf
ss
in
ret
inc
cmpsb
dec
es
out
mov
inc
mov
lret
push
jmp
mov
push
iret
ljmp
ja
lea
test
add
loope
sub
fs
imul
ret
testb
mov
cmc
imul
mov
push
and
pop
sub
inc
inc
sbb
sbb
int3
out
les
lods
inc
pop
jae
and
jg
lret
pop
sub
mov
adc
xor
cli
sbb
hlt
movl
mov
scas
fwait
cli
and
pop
jb
cli
int
adc
fwait
es
adc
fmul
stos
mov
add
scas
pop
cli
aad
scas
mov
pusha
call
pop
add
inc
xchg
lock
cmp
ret
mov
mov
pop
aaa
repnz
and
mov
js
cmp
dec
addr16
and
into
mov
cli
jecxz
jno
jle
inc
mov
mov
xlat
cmp
fdivrl
test
imul
in
pop
int3
inc
clc
xchg
stc
outsl
movsl
xchg
mov
sbb
sub
mov
in
leave
dec
xchg
jg
cli
leave
or
int
je
rorb
fdivrs
pop
mov
lahf
xlat
inc
mov
inc
add
bound
outsb
add
popf
sub
push
pop
mov
stos
in
push
pop
cmp
mov
add
xchg
mov
in
push
jo
push
dec
sbb
ds
add
dec
and
test
pop
xchg
inc
mov
mov
or
outsl
or
pusha
rcrl
ss
xchg
scas
orb
lods
imul
xchg
push
hlt
loope
std
fdivrs
stos
scas
int
pop
push
mov
jbe
add
fcompl
leave
push
jae
pusha
push
mov
js
mov
enter
push
or
int
adc
adc
test
sbbl
and
push
addr16
sub
loope
repnz
fdivrl
bound
pop
mov
xchg
mov
orb
jb
and
add
sub
or
sahf
dec
cltd
dec
sbb
inc
pop
sbb
mov
daa
test
cmp
dec
gs
insl
adc
int3
jg
and
ljmp
inc
and
pop
cli
test
mov
push
repz
stos
cmp
je
into
sub
mov
pop
std
mov
sbb
add
or
adc
sarb
dec
filds
xchg
dec
ja
outsl
jae
dec
test
ficomps
fs
mov
mov
mov
sub
push
push
jnp
pusha
and
dec
lret
push
add
cmc
cmp
fmulp
sbb
roll
inc
xchg
pop
dec
mov
test
cmc
aad
vmovdqu
fildll
fmuls
scas
sbb
mov
cld
rcrb
mov
inc
inc
jae
adc
add
xchg
sub
jne
and
sahf
in
shrl
int3
outsb
mov
dec
push
and
cmp
xor
aas
ret
mov
aaa
push
outsl
cld
pop
outsl
and
popf
cmp
js
sub
sbb
push
cmpsb
lahf
jg
sub
fsubr
xchg
filds
cmp
xor
sbb
fcmovu
sub
shrb
sbb
pop
jns
sar
fwait
ljmp
fdivrs
mov
and
bound
adc
stos
ret
lahf
insb
movsl
and
jns
cmpsl
rcl
cmp
andb
sbb
inc
dec
pop
dec
or
jb
loopne
add
dec
into
xchg
mov
lods
adc
stos
mov
or
ret
sti
enter
gs
sub
sti
mov
fimuls
cwtl
imul
into
xchg
jecxz
mov
add
data16
or
mov
stos
mov
lock
push
subl
daa
aas
mov
in
stc
mov
inc
clc
add
mov
pop
dec
adc
dec
and
fldenv
mov
int
mov
mov
push
les
mov
xor
or
pop
push
adc
or
orb
in
xchg
mov
cltd
pop
js
ja
xor
mov
sti
jle
loope
test
mov
add
imul
imul
dec
mov
mov
leave
test
mov
sbb
and
shl
fimuls
xor
or
xchg
pop
out
pop
or
daa
fisubs
jle
lret
dec
rclb
push
jno
cmp
sbb
adc
mov
movsb
xor
jmp
sub
das
scas
mov
sti
add
dec
jmp
arpl
cmpsl
scas
cwtl
push
jnp
jb
push
jne
test
test
push
xor
mov
xor
xor
and
push
sbb
adc
lret
lods
xor
fs
sbb
dec
or
lret
sub
mov
sub
lds
inc
dec
sub
or
scas
inc
xchg
punpcklbw
idiv
adc
out
mov
scas
sub
sbbl
jmp
push
iret
and
mov
in
loope
lahf
or
mov
cmp
jbe
pcmpgtd
push
dec
sub
inc
cmp
inc
mov
add
jl
lahf
jl
ret
push
loop
add
das
int
out
push
mov
add
jge
pop
xchg
std
ficompl
cmp
cmp
xlat
jo
lahf
rcll
mov
pusha
add
inc
pop
cs
jae
or
shll
pop
lcall
xchg
mov
into
jmp
push
in
sti
jmp
mov
xchg
test
jge
sbb
mov
icebp
xchg
cmp
mov
pushf
cs
leave
jb
aaa
addr16
out
push
cmp
mov
push
push
lock
enter
aam
in
lcall
stos
pop
imul
in
fstl
mov
mov
daa
js
and
cmp
shlb
cld
pop
or
pop
dec
pop
stos
lea
cld
cmp
int3
mov
fisubs
aaa
les
ret
cltd
frstor
or
pusha
jns
cwtl
int3
jno
popf
or
out
int
sarb
cmp
lret
mov
mov
xchg
pop
bsr
xchg
fwait
in
cld
push
nop
mov
loop
mov
dec
popa
dec
scas
xchg
or
aad
inc
in
pop
xor
rclb
jecxz
adc
adc
popa
adc
xor
mov
cwtl
out
test
mov
adc
mov
add
adc
jecxz
test
stc
out
adc
jb
mov
pusha
mov
jmp
pushl
not
lds
push
jno
xchg
jg
popf
or
lds
iret
idivb
dec
sub
and
stos
orb
adc
mov
fildll
jge
pop
hlt
popa
fidivl
pop
nop
adc
xlat
pop
inc
lock
add
in
mov
shrb
cld
fdivrs
or
jle
sbb
in
leave
cld
jp
andl
mov
movsl
mov
cmp
xchg
or
std
pop
ret
fs
sub
jp
js
int
lock
out
dec
sbbb
insb
or
outsb
jge
out
adc
xchg
fisubl
loopne
popa
out
pop
mov
stos
imul
push
jo
mov
out
shlb
iret
arpl
stos
or
aas
or
adc
inc
push
stc
hlt
and
pushf
stos
shrl
stos
stc
sbb
cwtl
stos
orl
jne
jb
loopne
dec
sub
and
arpl
scas
adcb
mov
lods
push
movsl
out
mov
cmp
mov
js
xchg
push
scas
out
ret
jg
mov
inc
into
dec
dec
loope
cli
das
adc
cwtl
int
xor
mov
mov
bound
jg
mov
sbb
div
and
mov
clc
xlat
or
dec
in
sarb
faddl
das
mov
push
dec
sub
movsb
decl
loope
add
lahf
push
dec
mov
cmpsl
repz
fisubs
xchg
push
mov
mov
inc
xlat
pop
mov
or
jmp
mov
add
pop
pop
outsb
mov
and
cli
add
mov
testl
gs
pusha
int3
cltd
sub
hlt
jle
andb
stos
aam
pop
jbe
cmp
sub
aam
pusha
shl
gs
popa
bt
xchg
cltd
xor
xchg
mov
dec
iret
aad
mov
outsb
fadds
js
or
ss
out
lods
sar
popf
fstps
hlt
inc
lea
cmpl
jb
call
fwait
mov
push
xor
push
inc
xor
pop
jns
ja
cmp
fwait
testl
mov
sub
das
cmp
xor
imul
dec
lods
dec
cmp
mov
jecxz
inc
cltd
jb
jl
pop
pushf
dec
mov
xor
sti
cmp
rorl
adc
pushf
std
xchg
push
scas
rcrb
sbb
in
or
mov
xchg
fdivrl
push
fbld
mov
cwtl
xchg
mov
mov
out
cmp
push
int
add
jnp
or
incl
push
inc
xchg
pop
shl
cmp
decb
pop
ja
movsl
dec
scas
fisttps
jbe
data16
loop
dec
push
loopne
xor
cli
jg
dec
mov
movsb
je
lods
imul
push
push
add
pop
xchg
dec
sarl
shll
push
cmpsl
sub
sahf
std
fidivl
cmp
not
xchg
inc
movsl
popf
gs
mov
loop
mov
negw
and
and
ja
push
dec
mov
movsl
or
gs
das
cmpsb
popf
pop
xor
shll
shlb
fdivl
imul
leave
add
mov
cmp
adc
stc
imul
cmp
jae
pop
mov
dec
cmp
frstor
cmp
cmp
loopne
sub
mov
test
cmc
inc
leave
cli
data16
push
push
fs
mov
mov
ja
fsubrs
or
pop
subb
cmpsl
inc
dec
sub
xor
loopne
push
xchg
pop
fwait
sub
fisttpll
popf
xchg
mov
jecxz
fwait
mov
cmp
in
jo
dec
stos
test
ja
add
out
jnp
scas
popa
mov
pop
lahf
ja
cwtl
jle
pushf
in
xchg
add
xchg
sahf
int3
push
mov
pushf
jns
repz
jle
add
add
inc
test
sbb
or
pusha
int3
wbinvd
dec
daa
lods
mov
mov
fbstp
dec
ret
add
push
rorb
xor
roll
cmp
in
mov
in
popf
adc
aam
popa
popf
dec
ret
adc
jns
xor
pusha
push
xchg
add
mov
adc
sbb
mov
mov
add
mov
xor
cmc
out
add
out
orl
pop
bound
mov
mov
sbb
stos
jecxz
push
mov
xchg
mov
pop
stc
adc
out
inc
jb
inc
lds
jle
jge
mov
jo
lret
adc
pop
sbb
add
call
pop
mov
fisubl
inc
inc
sbb
mov
push
popf
int3
cwtl
loopne
jmp
inc
cltd
fidivl
cmp
adc
mov
sub
shll
std
xor
fistpll
lret
imull
call
mov
fimuls
xor
hlt
jbe
xor
call
jle
push
and
jl
out
mov
and
into
repz
push
jg
sub
lea
cltd
cmp
cmp
lcall
sbb
adc
jge
data16
and
cmp
lcall
mov
sub
mov
add
cmpsb
xchg
aam
xchg
add
mov
pop
mov
mov
scas
aam
lret
orl
inc
xorl
jp
push
mov
lret
sbb
fidivrl
repz
adc
ss
jp
pop
mov
jne
jl
div
mov
loopne
outsl
sbb
movsb
outsl
rcl
sbb
ds
divb
mov
sbb
pop
or
inc
pop
enter
aas
push
loopne
in
into
pop
das
xchg
push
iret
jl
jecxz
jae
aam
and
jecxz
dec
xchg
andb
inc
jbe
mov
roll
fldl
sarl
popf
sbb
shlb
imul
into
jbe
fsubrl
or
sub
pop
jp
fisttpl
fldenv
shl
aad
cmp
cwtl
mov
mov
loopne
test
push
daa
xor
or
lahf
repnz
es
aaa
icebp
mov
data16
icebp
jecxz
sti
jbe
push
dec
or
sub
xchg
cmpsb
adc
sbb
std
sahf
rorb
test
xor
movl
jecxz
mov
les
in
mov
jae
adcb
lcall
mov
dec
mov
mov
and
sti
push
mov
cmp
inc
add
mov
push
xor
addr16
outsl
sahf
mov
mov
pop
xchg
cmpb
mov
mov
je
jl
sub
in
pusha
inc
fs
cmpsl
data16
or
arpl
popa
adc
jp
iret
xor
mov
ljmp
test
fwait
repnz
fmuls
and
fnstsw
cwtl
inc
dec
std
repnz
in
out
mov
clc
add
push
adc
call
push
inc
sahf
jecxz
xchg
sub
popf
mov
mov
jno
pop
inc
mov
jl
push
sbb
lock
and
inc
jno
fwait
mov
mov
or
mov
mov
mov
dec
jmp
push
cmp
lahf
loopne
pop
or
cwtl
adc
adc
inc
insb
fldenv
mov
out
lds
cmp
lea
enter
and
sub
in
xchg
inc
add
pop
xchg
xchg
repnz
jle
add
lds
movl
mov
xor
xchg
fcmovbe
mov
mov
jne
aas
push
jge
or
push
cld
cmpsl
sbb
or
mul
mov
mov
das
daa
popa
lods
out
xchg
rcll
sbb
in
call
jnp
gs
aad
jecxz
xchg
imulb
pop
lret
ds
push
gs
in
in
mov
ud2
rorl
sbb
ljmp
stc
jnp
ret
mov
out
inc
outsl
pop
loope
lahf
push
rcrb
fs
into
mov
dec
and
xlat
in
icebp
aad
lret
lcall
insb
movsl
jo
dec
mov
enter
scas
insl
in
sbb
movsl
dec
gs
mov
mov
outsb
pushf
fnsave
xchg
scas
insl
shll
ljmp
xchg
orb
aas
pop
xor
lods
movzwl
das
inc
xchg
lret
fs
lock
cmc
pop
repnz
push
cmp
inc
out
fs
cli
je
pop
call
call
xor
sub
jae
dec
sti
add
insb
cmp
je
shll
sbb
ret
xorb
sbb
cmc
lods
and
or
cld
sar
or
jnp
dec
fstps
pop
mov
adc
rol
cmp
lea
dec
jo
insb
cmp
jne
mov
dec
cld
cmp
inc
pop
mov
mov
es
xchg
shll
sbb
es
lods
mov
pusha
lret
xchg
lcall
mov
push
subl
add
pop
cld
leave
rcrl
push
lock
bound
int3
pusha
xchg
test
cmp
cmpsl
mov
je
int3
loope
out
pop
adc
repnz
ret
pop
inc
aas
test
ret
sbb
push
fwait
or
jns
inc
loopne
mov
push
add
mov
adc
call
dec
xchg
sbb
jle
or
mov
lcall
mov
lret
xchg
add
mul
xorb
stos
cwtl
stos
aam
std
test
test
aad
repz
jae
les
int3
xor
jle
outsl
push
pop
ret
inc
xchg
xchg
cs
push
push
mov
rcll
subl
daa
inc
jp
mov
stos
add
dec
cwtl
add
stos
ss
lcall
pusha
int3
fdivrs
push
cmpsb
movl
mov
mov
add
jbe
xchg
shl
int
pop
pop
pop
cltd
icebp
and
popf
movsl
fiaddl
in
push
in
ja
sbb
aaa
lods
and
lods
dec
test
andl
xor
inc
and
scas
mov
pusha
es
push
fwait
cmp
cli
aas
pop
inc
mov
mov
outsb
popa
add
mov
lahf
lods
cli
dec
and
xchg
jae
jo
repnz
pushl
sub
add
divb
iret
jne
inc
cwtl
xor
out
xor
pop
cltd
sub
sti
dec
mov
jle
lods
sarb
in
cld
stos
fsubs
sub
jns
in
or
mov
mov
sbb
das
andl
add
pop
pop
jecxz
js
iret
xlat
xchg
int3
dec
jl
push
ss
mov
fstpl
imul
imul
outsl
mov
jne
xchg
push
xchg
cmc
pop
dec
add
xchg
test
mov
or
sbb
push
stos
xor
popf
cltd
shll
and
mov
cmc
push
loope
pop
mov
jns
adc
sahf
addr16
mov
sbb
mov
out
jbe
sahf
dec
fs
pop
xchg
ljmp
insb
jb
dec
mov
lret
les
les
cld
add
insb
dec
stos
rcll
pusha
cmp
cmc
outsb
jae
out
jle
and
push
roll
push
cld
in
jae
enter
pushf
andb
fildll
inc
sub
fnstenv
cltd
loope
sbb
inc
es
xchg
jle
mov
std
mov
pushf
idivb
adc
pusha
jg
test
pop
leave
inc
mov
int3
xchg
cli
cmp
cmpsb
inc
in
cmp
push
push
add
cmp
mov
sub
rcrb
bnd
hlt
cmc
out
add
popf
jg
test
pop
cmp
movsb
xor
and
cmc
mov
das
pop
or
jp
std
cmpsl
push
lahf
mov
jne
hlt
lret
in
mov
out
push
pop
out
ficoms
insl
dec
sarl
cmpsl
subb
rorl
xor
call
iret
add
rclb
push
lcall
add
pop
pop
cmp
xor
ret
cltd
jo
pop
scas
pusha
inc
out
loopne
push
fwait
idivl
pop
sub
cmp
dec
pushf
js
pop
fisttps
push
arpl
push
std
and
fisubl
lret
push
lock
sti
pop
adc
inc
out
loopne
push
push
sub
adc
jle
and
push
push
ret
jl
mov
ficoms
adc
out
jae
jne
jo
mov
add
jg
fistpl
hlt
lods
inc
push
fmulp
mov
imul
sub
insl
xor
jno
dec
mov
xlat
ds
adc
jne
mov
mov
or
int
pushf
fcomp
imul
sbb
ret
push
cs
dec
into
push
jnp
sub
addb
cs
push
lods
jo
or
decl
and
lret
in
jbe
sbbl
lds
in
fdivl
xchg
das
movsl
sbb
jns
pushf
or
les
cmpsb
xchg
pushl
push
xor
or
shrl
inc
pushf
jnp
mov
push
sbb
and
arpl
inc
into
dec
sti
scas
xorb
xchg
ss
nop
mov
cmp
jle
das
fs
push
je
jp
jle
int
loopne
fwait
mov
outsb
sbb
aaa
shrb
out
pop
push
add
scas
mov
inc
loop
pop
test
mov
pop
sbbl
xchg
clc
xchg
xlat
imul
adc
hlt
rclb
fxch
out
out
or
pushf
hlt
mov
scas
jle
lcall
pop
xchg
int
hlt
int3
push
adc
pop
jmp
push
mov
cwtl
mov
and
jge
sar
cmpsl
xor
pop
sbb
inc
inc
insl
out
ja
jo
cmp
mov
cs
shl
xlat
icebp
rorb
ss
dec
fistpll
inc
mov
ja
test
add
std
shll
cmpsl
or
mov
pusha
xor
out
dec
mov
jle
mov
jns
popf
add
sahf
cmp
add
iret
sti
xor
lahf
fiadds
mov
mov
mov
repnz
insl
xchg
bound
xchg
jns
scas
inc
pusha
xor
push
fdivp
ficomps
mov
pop
fstpt
jbe
lock
xchg
sub
ja
cmp
push
sbb
cli
dec
or
aaa
popf
outsl
lock
mov
loop
inc
inc
fxam
lret
or
xchg
pop
mov
lahf
and
js
fwait
cmp
test
call
dec
adc
xor
dec
push
mov
xchg
in
dec
lods
sub
and
loope
xchg
aaa
push
imul
enter
mov
cmp
mov
mov
fidivl
xor
enter
or
sti
sub
pop
je
sub
mov
out
push
cmc
in
mov
xor
stc
fidivl
lods
test
jnp
ret
push
sahf
dec
push
orb
scas
int3
out
add
insb
cmp
out
pop
xchg
mov
mov
mov
hlt
divl
lds
xchg
dec
mov
in
stos
lods
xor
adc
jae
xchg
test
sarl
rcll
shl
repnz
out
fbld
repz
out
and
lret
push
sbbl
dec
pushf
fsts
dec
xor
xchg
and
mov
ret
es
aaa
xchg
add
adc
mov
sbb
mov
popf
int
jp
call
loope
loope
ljmp
xor
out
cmp
xor
dec
xchg
mov
std
sti
lods
popf
les
inc
xchg
std
dec
mov
imul
aaa
repz
xchg
subb
in
cwtl
inc
cld
push
test
loop
xor
xchg
ret
jbe
ficoms
adc
popf
dec
mov
jge
out
mov
push
stos
cmp
out
addr16
xor
sbb
and
arpl
jle
push
dec
mov
inc
dec
inc
sbb
div
mov
push
inc
insb
insb
bound
push
and
push
ret
in
pop
lock
js
scas
sbb
cli
cmpsl
leave
adc
outsl
jle
jne
shlb
jo
pop
jg
mov
mov
test
sbb
clc
pushf
xlat
lea
shll
mov
mov
mov
fsubl
and
jle
mov
movsb
ficoml
outsb
jmp
pusha
aaa
add
jo
mov
adc
leave
arpl
js
popf
repnz
ljmp
push
pusha
push
cmpsb
test
sbb
pop
movsb
inc
faddp
shl
iret
dec
int3
iret
xlat
dec
cwtl
xchg
test
adc
call
in
mov
or
sub
jns
int3
insl
xchg
movsl
xchg
lods
pop
ret
lds
and
insb
mov
mov
push
or
ss
mov
fdivl
out
mov
cmp
test
mov
into
fs
addl
iret
insl
adc
ja
mov
call
rcrb
mov
cs
dec
out
scas
jmp
fs
into
inc
xor
pushf
cmp
jbe
xchg
dec
jp
dec
push
lret
xchg
pop
sbb
adc
sbbb
jp
idivb
jle
or
out
xchg
aad
jmp
inc
dec
xor
adc
call
add
cmp
hlt
push
lods
jae
jg
and
and
into
rolb
sub
mov
adc
inc
pushf
out
sti
mov
jbe
sti
and
ljmp
clc
xchg
or
lods
pmulhw
jbe
mov
push
sbb
xchg
shlb
jae
xlat
in
sbb
adc
rcrl
mov
xchg
stos
daa
sti
pop
cmpsl
daa
adc
dec
mov
adc
int3
pop
mov
fldenv
loopne
pushf
out
int
hlt
pop
test
popf
arpl
data16
ret
inc
or
push
mov
outsl
xchg
mov
lea
adc
repz
push
pop
incb
xor
mov
xor
std
inc
push
dec
push
stos
out
in
push
mov
xor
mov
mov
orb
or
cltd
sbb
stc
sub
imul
mov
adc
pop
test
fcompl
push
cli
in
push
add
mov
xor
cmp
outsb
iret
cmp
filds
das
js
add
fcmovb
or
cmc
les
jns
jge
mov
sti
xor
addb
inc
repz
cs
or
mov
push
daa
cli
testb
xor
fs
jae
push
dec
fsubrs
and
cmp
dec
rcrl
sub
dec
jle
fs
xchg
mov
mov
cmp
ds
int
push
xlat
fcomps
push
push
mov
je
adc
cli
out
jg
jp
cmpsb
dec
sub
stos
mov
add
repz
xchg
inc
add
scas
or
rcrl
dec
adc
mov
mov
movsb
lret
mov
daa
push
mov
push
jmp
push
pop
sub
cld
nop
subl
mov
clc
cld
dec
sbb
out
repz
pop
pop
pushf
sbb
mov
outsb
call
bound
int
jmp
pop
cmp
adc
loope
repnz
jae
jmp
mov
xor
jecxz
negb
dec
popf
xchg
sbb
xchg
and
repnz
dec
push
jnp
icebp
je
lcall
jg
inc
pop
out
call
nop
icebp
mov
leave
fucomip
jmp
xor
pop
cmp
lods
push
mov
cmpsl
ss
mov
roll
jg
dec
lock
pop
aaa
bound
jo
loopne
mov
inc
push
ja
push
adc
aaa
into
xchg
dec
mov
scas
xchg
jmp
jge
xlat
aas
js
out
cmp
mov
adc
daa
fcoml
jns
xor
jle
fnsave
into
bound
daa
xor
shlb
mov
xor
cmp
dec
adc
nop
jne
and
pop
in
push
jp
cmpsl
lods
pop
scas
sbb
xchg
push
xor
ds
dec
jb
cmp
pusha
push
jle
push
insb
mov
cmp
jbe
dec
ja
mov
xchg
or
popf
movsb
sub
out
fists
lret
inc
scas
pop
jbe
gs
ret
mov
sub
and
lods
push
push
into
xchg
sarl
enter
negl
jns
sub
fsubrl
and
inc
clc
pop
testb
sti
adc
icebp
push
cmp
and
sbb
sub
add
jl
pop
push
xor
inc
mov
adc
adc
pop
ja
mov
pop
imul
jmp
cli
jge
pop
push
dec
mov
mov
xchg
lret
outsb
movsl
adc
pop
inc
orb
sub
jbe
xor
jno
or
or
cmpb
lahf
outsl
lea
das
outsl
sbb
ja
push
pop
cwtl
mov
xchg
daa
mov
mov
sbb
inc
pop
aad
lcall
mov
ret
xchg
das
sbb
jmp
mov
movsb
inc
scas
insl
repnz
clc
cmc
lock
mov
xchg
mov
mov
cmp
pop
dec
test
clc
add
arpl
lret
fnstenv
sbb
xchg
in
mov
call
sbb
das
jge
xor
stos
dec
jmp
in
or
sub
stos
and
ss
imul
push
call
arpl
movsl
shr
fsubs
in
insb
push
aam
push
aad
mov
mov
mov
aad
lock
inc
pop
ds
sbb
push
popf
xchg
xor
add
xlat
cltd
push
movsb
inc
pop
rolb
pop
mov
dec
lcall
out
adc
imul
ficompl
jmp
cmp
xchg
jno
mov
cmp
jne
enter
add
jno
jo
add
pop
test
push
push
sub
jb
sub
inc
mov
ret
ljmp
pop
cltd
push
mov
pop
dec
cmp
mov
notl
je
scas
andl
push
andb
in
inc
lds
pop
sub
popf
fisttps
mov
fidivl
cmc
std
jecxz
adc
sub
jae
jp
ss
mov
stc
mov
clc
jmp
addr16
add
mov
and
mov
dec
fcoms
je
jmp
lahf
nop
inc
cmp
lret
or
leave
jnp
movb
fmul
cmc
ljmp
xchg
inc
aam
out
insl
cmpl
cmp
dec
stos
add
lahf
mov
cmpsl
jae
pop
arpl
mov
cli
adc
cmp
imul
mov
decb
push
jle
mov
in
cmpsb
mov
and
jnp
and
iret
rcr
xchg
xchg
js
jle
test
scas
jae
push
cmp
inc
in
int3
out
mov
ffree
aad
arpl
add
push
add
xchg
cmp
xor
jl
je
sub
in
call
add
and
mov
movsl
jmp
mov
int
sub
xor
xchg
cmp
sar
movsl
aam
inc
fs
test
fcoms
xor
xchg
dec
movsb
push
and
stos
popa
push
sub
js
test
and
cmp
in
adc
pop
andb
adc
div
xchg
xchg
inc
dec
sahf
je
pop
adc
mov
adc
lock
add
leave
dec
mov
inc
dec
xchg
loope
bound
das
cs
ds
jmp
inc
jno
push
or
mov
test
fidivl
pop
mov
iret
xchg
insb
inc
test
fstps
test
loope
dec
movsb
inc
in
je
jge
jg
sahf
movsb
fistps
decb
gs
cwtl
jmp
fwait
fwait
adc
bound
out
jmp
pusha
inc
notl
push
dec
add
xchg
lcall
push
je
test
pop
dec
shl
push
add
es
mov
ss
pusha
outsb
dec
mov
jle
sbb
pop
pusha
outsb
pop
push
jne
xor
inc
push
lods
pushl
push
sarb
pop
outsb
jo
fwait
adc
out
pushf
rcll
dec
sub
arpl
lods
jbe
in
sub
testl
adcl
imul
jo
in
mov
mov
adc
jmp
clc
mov
adc
enter
jb
mov
or
fmull
out
orl
push
scas
jp
ja
scas
pop
dec
pop
aad
dec
inc
stos
roll
inc
mov
ljmp
into
popf
fwait
inc
ljmp
ljmp
aad
sbb
mov
popf
jnp
out
or
mov
or
adc
jne
sub
data16
push
int
mov
xchg
bound
rolb
cmp
or
xor
das
idivb
daa
out
add
sbb
ljmp
test
pop
add
call
xor
sti
jae
dec
xor
shlb
jl
lods
mov
outsl
movsl
sub
pop
push
sarl
lcall
call
adc
ds
adc
cmp
push
lods
push
jbe
sbb
jns
test
adc
mov
push
lods
insb
xchg
xor
jl
int3
sbb
cmp
test
inc
loopne
sbb
mov
cwtl
je
xchg
xchg
push
jmp
mov
test
sbb
mov
jne
xor
in
inc
jle
mov
add
cmpsl
out
xlat
and
divb
pop
icebp
dec
fdivrs
aas
inc
das
in
pop
adc
and
fdivrp
ja
push
lea
arpl
stos
xrelease
or
jnp
fsubrl
pop
dec
pop
dec
inc
pop
into
cmp
fidivl
adc
jns
push
push
xor
lea
ret
scas
dec
and
fsub
rorl
sub
xchg
mov
inc
cmp
or
inc
and
adc
dec
call
shll
mov
push
sub
sbb
sub
mov
add
mov
divl
mov
idivl
mov
outsb
fnstsw
pop
and
std
adc
pop
test
int3
std
insb
popf
pop
mov
out
je
stc
fnstcw
jns
lahf
pushf
je
push
jecxz
mov
cmp
sbb
and
jmp
out
jne
add
cli
and
xchg
shl
pop
call
cmc
mov
xor
mov
push
push
leave
cmp
pop
mov
inc
and
sub
stos
mov
jl
sub
and
inc
movsl
jnp
outsb
xor
int3
js
inc
cld
std
popa
xlat
popa
cmp
xor
unpckhps
aad
lret
xor
sbb
pop
pop
mov
cmp
cmp
fisttpll
mov
push
jns
test
lds
push
test
mov
sbb
mov
mov
das
push
lcall
mov
fldt
xchg
sbb
mov
popa
mov
lret
out
add
stos
cmp
xchg
movl
xor
mov
jle
and
ret
mov
mov
sbb
sbb
insb
pushf
jne
mov
dec
or
add
je
push
dec
fimull
xor
ds
jno
int3
jecxz
or
test
inc
push
scas
pop
fdivrp
pop
lods
dec
outsl
xchg
pusha
dec
hlt
pushf
cmpb
push
mov
mov
mov
fsub
mov
stos
mov
mov
pcmpeqb
ret
sbb
mov
lcall
outsl
adc
and
aas
xor
push
push
test
jg
lahf
inc
les
outsb
mov
jnp
jae,pn
dec
mov
loope
int3
movsb
jnp
and
xchg
frstor
popf
addr16
cwtl
dec
out
and
in
scas
cmp
stc
nop
icebp
xchg
lds
out
ds
scas
leave
push
mov
pop
pop
movsl
rclb
loope
sub
cli
sub
js
lret
mov
adc
dec
ud1
aaa
repnz
mov
and
pop
insl
sub
test
roll
cmc
shlb
in
cmp
jmp
ror
int
pop
in
inc
into
scas
xor
dec
and
jb
sub
imul
pop
cmp
jno
scas
in
inc
sub
insb
fildll
popl
scas
out
mov
inc
add
xchg
fs
ljmp
enter
stos
sahf
push
xchg
and
mov
dec
jmp
mov
push
cltd
add
sbb
mov
imul
iret
mov
adc
rcrb
cmp
popa
pop
sbb
call
mov
sbb
adc
or
into
ja
das
aaa
gs
mov
and
and
call
movsl
and
jno
pop
sahf
fwait
sbb
cld
imul
jne
inc
fldenv
cmp
rcr
jmp
nop
fdiv
push
pop
mov
and
mov
cmp
andb
dec
in
jae
cmp
mov
xor
or
out
shlb
cmp
mov
jge
add
repnz
fildll
pop
es
dec
jmp
imulb
push
cmc
popa
iret
std
adc
mov
and
jno
ret
and
mov
jecxz
inc
arpl
insl
repz
mov
sar
mov
test
lods
inc
repnz
jge
cs
out
fnstenv
dec
inc
rdpmc
arpl
js
iret
clc
jmp
call
or
mov
jns
insl
xor
xchg
add
rolb
pop
fistpl
xchg
pushf
sbb
daa
dec
dec
leave
pop
pop
adcl
mov
fnstenv
jb
loop
nop
pop
pop
or
sbb
mov
call
ss
mov
lea
mov
in
mov
pop
push
fadds
sub
pop
jle
xor
out
xchg
lds
dec
test
je
xchg
sti
mov
icebp
sub
cmpsl
cmpsl
sbb
add
orb
mov
lock
xchg
ret
mov
push
stc
xchg
xor
cwtl
mov
sbb
loope
mov
xchg
addr16
outsl
and
ljmp
lds
popl
push
xchg
add
mov
leave
dec
sbb
jge
daa
sbb
sub
jp
inc
ss
lahf
shlb
push
mov
insb
mov
leave
mov
lcall
and
int
ds
push
aam
or
add
fbstp
cli
jp
jo
push
and
sub
js
xor
jl
in
outsl
rclb
push
andl
jge
mov
jno
mov
jbe
enter
int
sbb
and
xor
inc
sub
rolb
aam
jmp
cs
xchg
es
pop
add
xchg
div
test
fwait
mov
cmp
test
push
or
xchg
mov
adc
lcall
mov
imul
xchg
or
cld
jg
add
lahf
gs
ficomps
jecxz
pop
enter
insl
lret
cmpsb
jo
push
add
dec
xchg
cmpsb
test
popf
or
xchg
push
aam
into
loop
adc
mov
ss
pop
jne
xor
imul
mov
push
xor
jno
cmp
add
lods
mov
daa
add
lods
pop
add
mov
or
mov
sbbl
xchg
jmp
mov
sbb
fistl
cld
cmp
sbbb
into
push
lods
fucomp
adc
jae
or
jg
sahf
and
push
pushf
push
jo
sahf
out
inc
jmp
jg
pop
lods
bound
mov
nop
jae
jle
je
jb
cmp
icebp
arpl
iret
ret
int
rcrb
pusha
or
mov
addl
inc
stos
scas
dec
hlt
and
negb
mov
lea
xchg
or
mov
pop
lcall
mov
shrl
sahf
js
pop
cld
mov
in
sub
out
fwait
int
mov
es
mov
sbb
jge
pop
or
adc
lods
mov
dec
xchg
mov
dec
xchg
or
mov
add
push
std
push
add
fstl
cmp
sbb
ljmp
mov
and
sub
aas
leave
aam
xor
aam
aaa
fldcw
push
fcmovb
test
jmp
mov
sbb
and
push
and
call
aam
or
push
aaa
pop
andl
xchg
xor
iret
xor
cmpsl
cmp
ds
jo
popf
mov
dec
lret
ljmp
push
in
outsb
and
push
into
mov
mov
push
xchg
sbb
mov
xchg
push
shlb
jb
mov
sub
or
ja
lret
inc
adc
push
data16
aaa
cmp
add
sahf
pop
daa
inc
pop
ret
ret
std
push
xchg
push
cld
cmp
test
sbb
cmp
and
xor
fsts
shufps
in
mov
jne
mov
add
xchg
repnz
push
arpl
push
sbb
ljmp
xlat
aad
insb
cmpsl
pop
out
cmp
add
cmp
xor
xor
jl
cmp
mov
mov
push
cmp
add
outsb
jns
pop
or
xor
jo
pop
jno
xor
jns
loop
outsb
std
mov
fistps
nop
outsb
enter
sub
or
std
das
push
ja
js
pop
aam
hlt
xor
sti
sahf
pop
in
jp
dec
insb
in
and
mov
jns
dec
xchg
outsl
cmp
test
mov
lds
fisubrs
repnz
jo
sahf
fimuls
dec
mov
lret
cmpsl
jmp
mov
out
in
and
add
mov
adc
mov
cmp
js
or
pushf
inc
pop
jne
mov
push
add
movsb
cmp
lcall
xor
dec
lahf
or
mov
cmpl
mov
mov
mulb
push
push
ljmp
out
popf
pop
jmp
sub
xor
or
pop
shlb
int3
jb
mov
fwait
sub
test
mov
jo
jae
jne
js
pop
push
ja
dec
cmp
jo
pop
fistpl
fdivrs
sbb
aas
loopew
jo
xlat
outsl
scas
test
dec
cmp
cmp
mov
add
adc
loop
mov
aas
mov
arpl
into
cli
addl
push
insb
and
adc
sbb
cmpsb
pop
mov
adc
push
ret
das
mov
sub
dec
adc
das
push
inc
sti
movsb
and
lcall
sub
or
jecxz
cwtl
and
mov
cmp
aad
sub
pop
movsb
xor
int3
inc
mov
sub
test
fdivrl
mov
loope
fstpt
je
jnp
cmpsb
je
stc
iret
and
pusha
repz
mov
fstpl
jp
and
ss
adc
rolb
sbb
ds
das
mov
xchg
and
mov
call
movsb
mov
sub
in
xor
push
stos
popf
int
cs
xor
and
sub
mov
push
xchg
lods
dec
xchg
sti
enter
dec
dec
push
clc
sbb
jne
inc
rorl
mov
xor
bound
push
in
mov
mov
xchg
roll
mov
out
dec
fnsave
bound
dec
jo
xchg
mov
jne
fmull
push
pop
pop
push
mov
fwait
jae
jecxz
xor
stc
icebp
push
xchg
adc
lea
int3
inc
mov
add
popf
pop
and
adc
and
lea
add
fstp
lods
add
cwtl
pop
and
jne
or
leave
fstpt
das
push
out
test
pop
mov
dec
aaa
sbb
out
movsb
ss
and
fdivl
rcll
cltd
mov
sub
lcall
xor
xchg
lret
fwait
cs
addr16
std
jecxz
aad
cmp
das
pushf
mov
cli
xlat
inc
out
bound
sub
out
jle
sbb
mov
xor
xchg
pop
cmp
aas
adc
mov
dec
or
sub
dec
clc
out
mov
and
sbb
inc
fcmovnbe
cmpsl
shlb
das
test
push
rorb
adc
sbb
sub
cmpsl
fucomp
insb
jl
jns
add
cmp
cwtl
in
fwait
xchg
js
fnsave
mov
add
movsb
and
dec
sub
sub
push
dec
js
sub
jnp
sub
rorb
jno
cmpb
popa
lret
out
lods
lds
xorl
loope
adc
and
into
or
int
dec
out
lret
push
in
inc
test
pop
sbb
loopne
loopne
aam
or
test
inc
aam
pop
mov
adc
pop
or
inc
push
ds
out
or
cmc
in
xchg
push
mov
pop
dec
hlt
mov
lahf
pop
sub
cmp
lcall
pushf
out
inc
jmp
ret
aad
pop
jae
rorl
inc
out
dec
cmpsb
xchg
sbbb
sbb
mov
in
iret
repz
push
xor
sbbl
cmp
jne
pop
mov
insl
leave
add
mov
mov
push
mov
mov
negl
mov
xchg
inc
sub
cltd
aad
nop
dec
adc
mov
jns
inc
pop
ficomps
mov
repnz
push
imul
xor
or
lock
xchg
pop
adc
je
aam
cmp
adc
andb
sbb
repz
sub
nop
push
std
lret
or
test
push
adc
push
sbb
jecxz
sldt
aaa
dec
adc
fwait
pusha
jecxz
outsl
pop
cmpsb
push
sbb
sbb
sarl
sub
das
add
in
scas
cmp
jo
cld
ja
pop
sbb
mov
arpl
sbb
xor
rcr
pop
mov
es
loopne
sub
loop
or
stc
data16
push
test
push
dec
movsl
sub
jmp
cmp
jmp
mov
mov
daa
ret
iret
movsl
lcall
enter
add
xchg
popa
jecxz
push
add
inc
popa
subl
je
addr16
push
jmp
in
es
mov
jp
dec
dec
pop
jl
xchg
js
lcall
fildl
push
arpl
pop
roll
shlb
mov
pop
dec
push
xchg
cs
nop
insl
popa
jmp
and
into
popa
xchg
or
sub
lret
ret
or
push
jns
stos
out
test
ficompl
add
inc
scas
mov
xchg
mov
repnz
cmp
jne
mov
jnp
cli
push
push
mov
outsb
or
xchg
dec
shl
xchg
gs
popa
xchg
and
andl
xchg
mov
je
push
call
and
adc
jmp
jp
pop
je
or
cmp
sbb
test
cs
cmpsb
mov
jecxz
lock
add
sbb
in
icebp
sbb
mov
icebp
dec
mov
ficoms
mov
repnz
or
repnz
orb
ret
adc
sbb
jecxz
test
lock
inc
or
xchg
imul
inc
lock
test
cmpsl
or
test
ret
inc
xor
faddl
sbb
pop
fdiv
jmp
cltd
and
fsubl
jne
or
movsl
addb
jg
rclb
mov
cmp
leave
xchg
and
jle
xchg
nop
movsl
clc
push
mov
push
test
es
cmpsb
fistpll
xchg
data16
jb
ret
adcl
adc
and
leave
ret
mov
test
fcoms
les
xchg
fnstsw
pop
xor
pop
scas
sti
rolb
jbe
rclb
adc
andl
outsb
or
das
pushf
push
rep
adc
xchg
lret
in
adc
mov
ret
or
loop
fistl
mov
or
in
jb
test
lret
movsl
sbbl
repz
fwait
insb
data16
popf
xor
js,pn
test
pushf
cs
cmp
xor
mov
adc
pop
dec
addl
xchg
jne
pop
cmp
or
cmp
add
push
les
mov
adc
jmp
add
test
pop
mov
and
adcb
rcr
sub
in
cs
cld
outsl
push
mov
push
pusha
out
jg
sbb
xchg
add
jecxz
fisttps
lods
mov
jo
or
adc
repz
es
lret
mov
mov
call
pop
loope
mov
in
enter
adc
add
push
or
rorl
repnz
dec
mov
cmp
mov
lock
daa
cltd
repz
out
stos
fs
inc
cmp
jne
cmpsl
jecxz
sti
popf
and
sub
vfrczpd
lret
fistl
daa
and
test
push
clc
cmp
andl
fstl
ja
jnp
xor
pushf
ror
and
and
jmp
add
leave
pop
xor
jnp
sbb
daa
movb
cmc
push
mov
mov
jns
iret
push
imul
out
lds
ror
jp
mov
stc
xor
dec
stc
popa
inc
push
aaa
inc
test
test
mov
mov
xor
xchg
out
movsb
jmp
aas
movsb
jecxz
or
jne
loop
sub
mov
into
push
aam
mov
lahf
fwait
pop
push
pusha
sbb
in
pop
rol
add
ja
or
mov
pop
sbb
cs
mov
popa
cmpsb
xchg
jb
loopne
hlt
repnz
fwait
sbb
inc
mov
sub
jne
mov
dec
sbb
xchg
out
xchg
add
shll
sbb
fs
cli
pushf
adc
pushf
mov
hlt
test
orb
lds
xchg
rcl
in
mov
jg
fidivl
out
lahf
cmp
ja
pop
jnp
cli
cltd
pushf
push
jne
int3
movsl
in
jecxz
outsl
pop
adc
or
int3
pop
nop
xchg
lret
iret
lret
lea
lea
xchg
cmp
adcl
jno
push
xchg
add
lods
mov
shl
pop
adc
mov
and
xorl
adc
fmuls
fldln2
xchg
sbb
fsubl
and
dec
and
inc
mov
pop
mov
cmp
xorb
in
inc
and
mov
rcrb
mov
cld
mov
mov
or
adc
fst
cwtl
negb
ficomps
nop
or
xchg
bound
lock
mov
cmc
movsl
push
and
xor
or
pop
mov
jecxz
and
xchg
mov
xchg
hlt
rcr
test
jbe
cmp
jne
arpl
pushf
punpcklbw
xor
test
sbb
arpl
loopne
iret
test
push
sti
je
dec
jg
sbb
fwait
and
fstpt
cmp
cld
adc
mov
mov
cmp
lcall
jecxz
xor
scas
xchg
and
nop
not
in
popa
cmp
fwait
xchg
jge
add
stos
pop
data16
lods
cmp
pop
or
les
je
sub
mov
cltd
and
outsl
clc
add
repnz
imul
pop
pop
cmp
imul
xrelease
inc
mov
mov
clc
repnz
pop
stc
in
inc
xlat
adc
fcmove
push
int3
pop
fisttpll
rcll
cmp
mov
icebp
and
add
out
stc
les
lcall
aad
xchg
jns
cs
mov
xor
sub
movsl
cltd
andb
pushf
into
pop
addr16
sbb
cli
jge
mov
push
pop
cltd
jns
mov
add
out
and
iret
inc
mov
inc
call
mov
jo
sbb
call
adc
inc
cmp
push
mov
test
and
test
repnz
inc
or
insb
mov
pop
pop
mov
imul
pop
int3
shlb
jae
loop
fdivrp
pop
push
int
or
sarb
mov
and
push
or
ja
imul
ss
cmc
ss
adcb
fisttpl
xchg
mov
les
push
sbbl
inc
mulb
aad
add
test
xchg
mov
sbb
or
mov
das
icebp
add
push
mov
push
fldl
mov
lods
mov
into
mov
adc
mov
in
jecxz
clc
les
and
sub
std
rolb
mov
sub
mov
out
int
dec
mov
enter
pushf
adc
or
inc
inc
xchg
mov
or
fildl
push
sub
inc
mov
cmp
pop
jle
dec
and
cmc
scas
dec
push
fcmovnu
inc
je
xchg
out
mov
mov
mov
scas
loop
shrb
int3
test
xor
in
fs
mov
psubsw
shlb
mov
lahf
and
inc
adc
pop
fidivs
cld
andb
inc
int
pop
mov
dec
pushf
xchg
mov
pop
int
insb
jecxz
and
dec
stos
cmp
or
imul
xor
cmp
jbe
dec
dec
cs
jno
fs
sbb
mov
xlat
aas
adc
mov
cmpsl
xor
cli
out
mov
and
andb
and
arpl
outsb
xchg
sbb
leave
push
inc
or
xchg
stos
jno
mov
cs
push
addr16
fwait
insl
bts
into
inc
or
mov
push
and
push
in
adc
jp
test
enter
dec
inc
mov
imul
int
cmp
int
dec
lods
jns
fnsave
mov
push
pop
clc
xorw
lret
mov
xchg
arpl
aas
dec
cmp
out
xchg
movsl
and
mov
dec
cmovb
sub
jns
repz
lods
inc
leave
aaa
inc
call
addr16
inc
inc
mov
mov
movsl
adc
sub
gs
mov
jmp
into
scas
adc
in
xor
fisubs
pusha
xchg
pusha
jl
mov
push
add
jmp
stos
cltd
adc
pop
xlat
pop
insl
push
cli
mov
jecxz
pop
mov
dec
test
jg
mov
fnstsw
adc
std
lea
sub
mov
push
or
adc
ss
or
cmc
ds
in
pop
mov
and
hlt
pop
add
int3
jns
in
cmc
jge
outsl
mov
incl
jbe
cltd
movsl
inc
into
or
pop
sub
xor
ljmp
adcb
mov
test
mov
fiaddl
inc
out
shlb
cwtl
mov
lcall
fdivl
sub
imul
test
dec
pop
inc
mov
sub
test
jo
int
out
frstor
int
or
xchg
inc
into
fstps
in
inc
or
mov
gs
inc
sub
les
pop
adc
xchg
sub
lds
pop
fcomi
aas
fcmovnbe
jae
and
add
je
addr16
popf
and
or
fucomi
out
jns
jg
imul
stc
ficoms
lcall
sbb
stc
pop
xchg
adc
and
ficoml
sbb
xchg
iret
push
loope
cmp
cmp
iret
sub
lcall
mov
cmp
test
mov
jo
or
insl
add
jae
enter
push
and
clc
or
sub
call
fsubl
cmp
hlt
inc
aad
sub
mov
dec
pop
mov
aad
inc
mov
arpl
adc
dec
or
mov
xor
lods
xchg
pop
cmpsl
insl
and
mov
mov
mov
pop
leave
stos
mov
mov
inc
xor
test
mov
inc
xor
repnz
and
sbb
aaa
and
ja
ljmp
fs
sub
mov
shrl
aam
jl
negb
mov
dec
rcll
cmp
fnstcw
and
and
or
sbb
loopne
dec
in
out
ds
int
sbb
sahf
dec
pop
sub
mov
xchg
jb
sbb
loopne
push
jge
jp
test
mov
mov
dec
repz
subb
icebp
lahf
mov
mov
pop
mov
loop
add
xor
cmpsl
das
jmp
push
or
cmp
leave
test
shr
adc
pop
lods
adc
pop
mov
xchg
push
loop
sub
or
les
push
das
loopne
xchg
or
sub
pop
push
mov
xchg
or
lret
dec
fadd
or
and
jl
aaa
and
sub
popa
push
imul
xlat
int3
mov
lds
shrb
mov
adc
into
outsl
adc
dec
inc
sbbl
clc
xor
dec
in
out
mov
and
push
jne
out
dec
push
cwtl
mov
stc
mov
jno
rclw
xchg
arpl
popa
outsb
adc
cmp
fiaddl
repz
lea
jae
xchg
add
pop
std
ret
dec
inc
jae
jp
xchg
dec
lea
sti
nop
push
jp
into
xor
xor
adc
cmp
push
push
cwtl
test
jg
xor
enter
cmpsb
dec
xchg
or
jb
sarb
fisttpl
adc
fistps
loope
shl
repnz
mov
mov
fsub
jp
adc
fs
push
fwait
mov
push
push
push
pop
mov
push
sbb
inc
aam
popf
add
and
int
scas
add
xchg
jnp
add
inc
loop
ret
and
mov
xchg
inc
xchg
call
lds
mov
and
sbb
adc
or
fstpl
testl
js
jle
out
mov
divb
sub
dec
mov
pop
scas
sar
jns
pushf
jae
mov
adc
mov
mov
xchg
mov
mov
int
inc
dec
test
jno
push
lods
push
push
cmp
hlt
sbb
pop
test
lret
mov
xchg
sub
je
xor
mov
loope
lahf
out
or
loopne
xchg
gs
xor
cwtl
push
jmp
ret
lcall
lret
cmc
pop
sarw
cld
dec
pop
cmc
popa
cmp
push
inc
pop
in
ret
arpl
aad
jno
cmp
mov
push
sub
mov
jbe
add
pop
push
mov
and
adc
and
sub
cli
jae
adcb
adcb
jno
and
push
clc
pusha
xorl
cs
call
mov
mov
cwtl
ret
xchg
mov
test
push
sub
dec
sahf
fistl
jp
jl
cmpsl
rorb
push
jae
adc
inc
js
lret
push
fstps
sarl
mov
or
jo
gs
out
inc
mov
scas
jmp
shrl
sbb
pop
pusha
dec
sahf
vhsubps
iret
jnp
cs
lret
adc
cmp
pop
fadd
and
or
into
sbb
mov
int3
ja
popa
sarl
scas
push
xchg
neg
call
and
leave
dec
movl
in
sahf
ffreep
xchg
sbb
cld
stc
mov
inc
ljmp
pop
testl
out
jp
fwait
xlat
negl
int
loop
call
jbe
and
push
lahf
lods
mov
aad
mov
mov
mov
jge
fwait
inc
inc
push
xchg
inc
pop
adc
addr16
cmc
in
das
pusha
xchg
aad
imul
mov
in
jle
sub
loopne
push
lock
ret
lcall
cmp
sbb
and
in
dec
cwtl
push
shr
jbe
test
sahf
sbb
test
push
inc
ds
cli
test
jb
loop
push
pop
ds
std
out
pushf
out
aad
mov
cli
pusha
xchg
ficompl
mov
sub
cmc
mov
mov
movsl
jg
and
xchg
jmp
int3
jne
mov
adc
mov
loopne
cmp
jp
and
fcmovbe
call
loopne
jbe
mov
test
or
dec
in
dec
je
and
pop
cmp
sti
adc
dec
and
xchg
ss
lods
sub
jb
mov
in
clc
pop
cmp
lods
sbb
movsb
adc
or
fs
lds
pop
mov
sbb
test
adc
lahf
push
es
leave
mov
pop
int
mov
xchg
dec
mov
aad
nop
fdivrs
jecxz
jecxz
fsubrs
mov
jnp
in
jge
and
cld
cwtl
jp
aaa
adc
pop
lahf
dec
movsl
data16
movsb
sub
sbb
pop
push
nop
add
or
lea
mov
ficoml
jmp
jl
pop
mov
dec
shlb
xchg
mov
jecxz
insb
stos
mov
das
loopne
sbb
jo
ret
add
cltd
andb
push
xchg
mov
adc
xchg
mull
sbb
mov
pop
sub
dec
dec
in
int
cs
pop
cmp
cmpsb
or
jl
std
sub
xor
push
inc
mov
jmp
or
adc
lret
insl
adc
sub
pop
pop
enter
ss
push
xor
enter
push
dec
cs
cmpsb
lcall
movsl
push
enter
and
push
lds
or
arpl
push
in
inc
mov
xchg
call
cld
ds
jp
sub
mov
repnz
arpl
rol
xlat
pop
rorl
push
cli
sub
push
and
imul
pop
popa
adc
xchg
mov
subl
lcall
and
jo
daa
mov
sub
insl
adc
pop
es
dec
movl
adc
inc
in
loope
and
aas
sub
test
dec
sbb
push
fcoml
push
jl
push
inc
jg
lods
out
mov
mov
dec
lcall
rorb
stos
mov
test
ja
add
stos
sub
xchg
adc
adc
nop
out
dec
enter
clc
sti
mov
push
pusha
jg
xor
iret
lret
add
push
and
movsb
pushf
mov
lcall
cs
out
std
xchg
dec
xchg
inc
dec
jo
adc
push
push
repz
ss
addl
cmpsb
mov
jno
cmpsl
in
and
call
jns
icebp
or
test
push
je
std
int
pusha
xchg
sub
aas
jp
mov
test
insb
lcall
lahf
mull
adcl
or
lret
jns
add
fscale
cmpsb
xor
mov
aam
sarl
fwait
xchg
adc
aad
xor
cmp
fs
or
cmp
movb
dec
shll
xlat
inc
int
into
lods
sahf
pop
add
mov
fisubrl
cltd
inc
cmp
out
out
pop
je
inc
cmpsb
push
aaa
lret
jae
ljmp
out
xor
xchg
xor
cmp
dec
push
jp
mov
or
mov
movsb
repz
mov
push
jb
imulb
in
shrb
cld
lahf
into
jmp
sub
xchg
stos
cltd
aas
and
mov
out
testl
mov
xchg
or
sub
scas
push
sub
xor
notl
lcall
jp
push
xchg
mov
mov
cli
jecxz
mov
or
sbb
jmp
lea
push
sbb
push
loope
nop
pop
lock
mov
loop
pop
push
stos
ret
ret
sub
xlat
mov
rorl
or
push
mov
pop
pushl
xor
test
shlb
pop
add
and
mov
dec
adc
sub
jns
jmp
dec
mov
xor
cmc
roll
sbb
int3
in
cmp
rorb
int3
xchg
outsl
fimuls
cmc
loope
ss
shrl
imul
test
sbb
pop
rcll
jle
push
sbb
bound
int
lock
mull
test
sbb
test
lret
xor
jmp
imul
pushf
and
leave
xchg
jl
nop
jmp
cmp
mov
mov
xor
mov
jno
ljmp
pop
insb
out
xchg
enter
hlt
out
leave
dec
lds
mov
pop
and
sbb
or
inc
mov
shrb
mov
pop
es
lret
lock
fistpll
dec
nop
or
cmp
hlt
lea
adc
push
rcl
push
rcrb
mov
je
int3
push
pop
fs
aad
pop
add
or
testl
pop
repnz
in
movsb
or
jmp
add
jns
lea
pop
jae
dec
add
cmpsb
push
sbb
push
xchg
add
inc
daa
nop
js
xchg
test
or
cwtl
pop
fsubl
outsb
dec
mov
pop
fnstsw
inc
cmp
mov
popa
test
xor
add
push
pushw
fwait
es
ret
fadds
and
insl
mov
or
inc
push
jbe
cwtl
sub
inc
jnp
imul
lret
inc
mov
add
sub
aas
dec
repz
pop
push
jl
popa
je
movsb
stc
loop
push
cmpsb
sbb
scas
gs
addr16
lahf
cwtl
push
and
mov
shl
xchg
push
dec
pop
ret
mov
dec
add
and
push
mov
in
jmp
pop
sub
outsl
mov
cli
into
pop
ljmp
orb
xchg
iret
inc
push
popf
mov
daa
out
push
jge
ljmp
inc
inc
dec
mov
mov
divb
sahf
sub
je
stc
jo
idivb
dec
and
ja
sub
mov
js
mov
sbb
mov
repz
inc
push
mov
pop
mov
js
je
cmpsb
jle
pop
mov
test
cwtl
fists
push
mov
cmp
hlt
outsl
mov
stos
sub
aad
mov
cltd
xchg
in
xor
push
loope
jecxz
mov
sarb
dec
cli
cmp
int3
arpl
rcll
push
adc
lcall
ljmp
mov
lret
stos
inc
ficoml
mov
ja
js
add
arpl
sub
mov
or
sar
xchg
mov
ret
addr16
or
lods
jne
mov
dec
and
call
cmp
imul
call
sbb
lret
xchg
adc
push
stos
repz
fcmove
insl
and
ja
nop
mov
popf
mov
xchg
mov
lods
mov
push
mov
std
arpl
dec
pop
inc
rcll
repz
out
stc
jl
fidivl
sbb
cmp
jmp
rorl
dec
jle
and
repnz
cwtl
mov
outsl
lcall
out
mov
icebp
mov
cmp
xor
sbb
in
mov
xchg
into
push
xchg
adc
ficoml
pop
cmp
out
dec
mov
shlb
jo
jl
pop
ret
xchg
call
pop
andb
in
mov
pop
decb
stos
jne
mov
pop
clc
ja
les
mov
push
cmp
cmp
mov
fucomip
fwait
hlt
mov
push
cs
add
xor
mov
rol
or
test
mov
cmpsl
pusha
dec
add
push
inc
ja
sbb
hlt
mov
fmuls
das
sti
push
imul
mov
mov
jmp
push
jno
decb
push
ja
xchg
cmp
push
pop
ds
fists
mov
dec
dec
mov
xor
and
sub
xchg
scas
cmp
xor
fstl
in
scas
ljmp
inc
mov
push
pop
in
add
mov
mov
sbb
hlt
push
and
ftst
mov
add
cwtl
mov
stos
clc
cli
push
adc
cli
inc
fadds
add
dec
xchg
imull
dec
sahf
bound
dec
test
in
mov
and
lods
and
dec
jmp
popa
adc
push
loop
ffreep
xor
jo
add
ds
stos
cmpsb
and
movsl
outsb
xor
mov
xchg
and
enter
and
mov
cli
orl
cmp
sub
xor
cmp
movsb
mov
mov
xchg
int
shl
mov
xchg
cs
inc
xchg
cmpl
jecxz
sarl
neg
mov
mov
dec
xor
andl
data16
js
out
adcb
fimuls
ret
inc
bound
xchg
push
xchg
scas
sbb
xlat
mov
addr16
and
or
iret
inc
xor
movsb
or
in
lods
divl
add
mov
dec
adc
daa
and
jmp
pop
xchg
inc
js
repnz
in
push
stos
mov
nop
jge
test
xchg
std
scas
adc
or
jecxz
pop
or
pushf
adc
shl
dec
fcomps
ja
cmpsl
dec
test
pop
clc
push
sbb
and
aaa
leave
in
push
arpl
cmpl
lods
push
mov
mov
jbe
and
movsl
bound
outsb
outsb
lods
orb
sub
les
push
adc
cmp
test
pop
cmp
negl
lret
arpl
jl
mov
rorl
mov
shrb
push
mov
sbb
sbb
inc
pushf
fimull
divb
pop
jle
or
jl
push
sbb
mov
mov
fcmovb
cmp
aas
push
insl
xchg
inc
lret
jmp
sar
sbb
ja
cs
adc
call
lcall
jns
andl
lock
inc
mov
mov
ja
and
imul
aas
loop
aad
enter
shrb
adc
lea
jl
xchg
xor
scas
mov
out
flds
das
or
xor
xor
test
inc
cwtl
ja
xor
mov
pop
mov
hlt
mov
mov
cli
adc
inc
pop
mov
push
adc
pop
test
inc
dec
repnz
shrb
repnz
add
clc
xchg
stos
mov
jae
lret
test
or
mov
adc
cltd
xor
arpl
arpl
dec
cmc
add
mov
bound
mov
imul
xor
jecxz
xor
sub
jp
fimull
inc
xchg
aaa
in
ja
cmpsb
rcl
roll
les
or
lea
xchg
xchg
cmp
loop
clc
push
cwtl
das
ja
int3
push
jle
enter
xchg
mov
cmp
mov
inc
movl
cmp
or
mov
xchg
leave
pusha
mov
popf
popa
das
cltd
fs
shrl
pop
adc
aas
addps
fs
pusha
adcl
les
xchg
fwait
mov
xor
adc
clc
imul
stos
pop
and
pop
cld
xor
sbb
jnp
sti
mov
pop
loope
cmp
sbb
dec
jbe
nop
lret
lea
or
jnp
xchg
and
call
int
push
push
and
pop
fcomip
mov
insl
sarl
sar
popf
xchg
movsl
add
lods
push
jecxz
fisttps
xlat
aad
dec
mov
xchg
test
jecxz
sbb
jnp
mov
cwtl
jnp
fildl
clc
jno
ljmp
sbbl
pushf
test
jg
jo
push
cmp
sbb
xchg
sub
mov
cmpsl
pop
lds
dec
mov
scas
inc
in
lahf
add
jo
inc
pop
pusha
test
sbb
jmp
lahf
shlb
movl
jbe
in
jns
add
ss
or
test
add
hlt
jbe
and
sub
arpl
adc
sub
dec
xor
gs
loop
aam
lock
push
in
and
inc
mov
add
adc
fs
sti
pop
pushf
data16
mov
call
xor
mov
push
pushf
test
mov
aam
mov
dec
sub
mov
mov
sbb
jle
js
out
in
pop
cmpsb
inc
xor
in
sahf
push
adc
pop
rcrl
mov
inc
clc
mov
pop
sub
inc
pop
xchg
xchg
daa
lock
sbb
mov
adc
jp
fdivrs
js
jge
xor
push
sub
push
and
inc
dec
popf
scas
stc
mov
inc
xchg
jp
insb
out
pop
ljmp
jbe
mov
push
mov
cmp
aam
mov
mov
andl
inc
test
int
mov
mov
inc
pop
lods
jbe
popa
xlat
xchg
in
and
shrb
sub
js
or
jmp
xchg
rolb
stc
loope
dec
popf
nop
cs
popa
sub
cld
mov
inc
xor
fwait
jmp
out
test
cmp
sub
adc
leave
test
and
mov
arpl
xor
inc
add
jno
stos
mov
rolb
pop
clc
mov
adc
jle
xor
dec
xor
out
lods
pop
xchg
cld
fs
pop
call
shrb
mov
xor
add
xor
push
mov
push
mov
ret
icebp
adc
sahf
icebp
pop
dec
gs
out
sub
popa
mov
leave
mov
pop
int
dec
sbb
shl
ret
mov
bound
mov
imul
pop
cmp
pop
adc
sar
in
and
ss
sti
stc
stos
push
and
hlt
pop
adc
mov
movl
imul
fs
mov
sbb
lcall
lahf
in
cmp
in
jmp
in
in
cmpsl
out
pop
inc
mov
shll
leave
mov
lahf
adc
insl
mov
sbb
in
jp
push
dec
xchg
cmp
lods
insl
std
jmp
flds
daa
ss
test
jb
cld
fadds
inc
ret
sub
mov
clc
mov
push
in
mov
cltd
xchg
fdivs
mov
movsb
enter
outsl
and
inc
adc
lea
out
jg
cmc
push
or
dec
nop
aaa
lods
sub
scas
cmp
repnz
lds
push
test
les
inc
sub
into
rcll
mov
outsl
add
sbb
scas
dec
inc
dec
daa
fdivs
int
mov
js
mov
jge
mov
xor
add
and
dec
dec
lock
sti
push
dec
call
movsl
push
pop
cmpsl
push
mov
jnp
mov
or
pushf
or
mov
std
lods
sub
jno
popl
cmp
mov
inc
pop
add
into
push
repnz
sahf
push
xor
cs
test
bound
dec
xchg
repnz
popa
xor
daa
in
repnz
cld
mov
outsl
xor
dec
mov
cmp
add
push
pop
mov
sub
xchg
add
out
xor
or
test
jecxz
lret
cmp
notb
lahf
ljmp
in
fucom
mov
mov
ficompl
inc
std
dec
inc
cs
arpl
fwait
mov
and
outsl
fistpll
ret
or
mov
jns
jecxz
rorb
in
iret
sbb
fisttpl
push
inc
or
lds
push
cmpsl
push
xor
xor
dec
xlat
out
and
cmp
nop
aad
enter
insl
adc
aad
push
add
cmp
loopne
dec
out
push
jmp
push
mov
iret
mov
jmp
dec
and
xchg
outsb
das
inc
in
pop
jae
push
imul
add
js
aas
test
xor
test
or
add
xorl
mov
mov
cli
mov
lods
daa
xchg
mov
fildll
jmp
out
and
inc
clc
loope
adc
int
cld
mov
or
leave
or
sbb
xor
mov
push
test
repnz
lret
push
xlat
subb
push
pushf
mov
mov
dec
addl
xchg
clc
in
ds
and
mov
mov
rorb
js
pushf
dec
mov
pop
add
push
mov
dec
jb
mov
fcompl
sysret
shll
les
mov
mov
mov
es
xor
aam
fnsave
pop
cmp
mov
push
clc
gs
sbb
xor
pop
lea
push
mov
xor
xchg
int
xor
out
mov
loope
push
xchg
ret
mov
cmp
pop
mov
mov
and
jmp
sbb
sahf
add
mov
out
icebp
int3
sub
cwtl
es
icebp
nop
add
lret
add
mov
fildll
loope
pop
push
lcall
jge
aam
dec
push
pop
into
sbb
sub
jno
inc
lds
cmp
int
xchg
loop
into
add
rolb
sbb
out
and
gs
movsb
rol
jecxz
ss
cmp
lock
mov
sub
mov
fimuls
aad
test
mov
mov
jo
mov
jecxz
xchg
nop
pushf
rolb
xor
gs
and
rol
adc
aad
fimull
push
mov
cmp
xchg
in
imul
inc
cmp
ja
je
xchg
sbb
pop
mov
fldl
ljmp
inc
lcall
es
stos
je
mov
movsb
or
in
fldt
lods
cmp
iret
dec
jmp
lea
cli
inc
imul
pop
sub
jmp
fidivrl
lret
sti
repnz
mov
mov
xor
ret
inc
add
pop
out
fcmovu
dec
out
jl
mov
inc
std
mov
xor
sub
inc
and
pop
or
inc
pusha
cmp
jp
sub
mov
dec
pop
xor
cmp
sub
inc
add
mov
sub
mov
std
xchg
ficomps
pushf
stc
lret
mov
fs
test
inc
loopne
and
nop
stos
sub
in
scas
xchg
pop
daa
dec
jnp
sahf
fwait
cwtl
imul
xchg
xchg
push
push
and
jle
insb
jge
dec
in
mov
xor
mov
cmp
rolb
jecxz
dec
out
pop
pushf
dec
popa
push
inc
pop
int3
inc
mov
dec
sbb
push
add
outsl
or
aas
adc
out
stos
lods
idivl
or
mov
cmp
and
out
xchg
xchg
inc
push
ds
clc
cmp
mov
shrb
call
in
xchg
jecxz
xchg
inc
dec
test
ret
pop
mov
dec
lret
cmp
jb
sbb
movsb
dec
enter
aam
subb
addr16
stos
push
push
cwtl
pushf
mov
out
je
jae
adc
mov
rolb
ret
pushf
sbb
out
scas
loopne
sub
pop
xchg
idivb
adc
in
pop
in
lds
cmpsl
push
inc
icebp
push
mov
jp
sbb
ds
popa
sarl
sub
mov
cmp
push
in
add
jle
push
sahf
xor
cmpb
loopne
aas
push
mov
cmp
mov
add
icebp
mov
cmpsb
fisttps
inc
cltd
sub
jg
and
lds
and
outsl
nop
xchg
loop
mov
jmp
mov
aas
in
and
cltd
enter
xchg
mov
and
pop
movsb
mov
inc
into
cmp
sub
out
push
jo
addr16
dec
ljmp
pop
xor
arpl
mov
pop
popf
add
mov
sub
xlat
and
out
bsr
cwtl
shll
push
adc
or
outsl
add
mov
xchg
sbb
sahf
add
iret
jl
add
insb
xchg
add
das
imul
push
in
ds
loop
call
mov
repz
les
add
fldl
mov
cld
lret
jmp
xor
cmp
sbb
inc
xor
aad
scas
and
xchg
lods
in
jg
jmp
out
je
stos
pop
sbbl
movsb
inc
or
lds
xor
fisttpl
sub
add
out
mov
test
iret
fs
cmpsl
pop
push
mov
test
mov
jge
pushl
loopw
inc
and
jp
mov
xor
cwtl
xchg
out
jg
cmc
leave
daa
aaa
sbb
or
dec
fildll
lret
cmp
xor
sub
testl
or
jo
dec
xor
int
xor
pop
add
push
add
call
inc
adc
xchg
movsl
pop
out
mov
sbb
nop
and
xchg
pop
scas
mov
xorl
test
hlt
mov
cmp
sub
jnp
fnsave
mov
inc
jo
dec
xor
xlat
pusha
cmc
push
ret
call
roll
sub
lods
mov
clc
pusha
mov
pop
test
or
aas
push
dec
in
std
fidivrs
adc
pop
arpl
adc
in
lret
scas
stc
pop
push
push
inc
call
enter
adc
sub
lahf
out
xlat
cmpsl
cmp
sub
call
and
mov
test
icebp
outsl
pop
cld
in
sbb
dec
ret
imul
cmpsl
and
xchg
js
outsl
dec
xor
sbbb
mov
push
lret
lahf
lock
fs
or
arpl
xchg
push
gs
test
lret
pop
inc
pusha
xchg
cmp
or
fadds
sbb
pop
xchg
lret
outsl
inc
aaa
sbb
stos
xor
mov
test
fs
out
insl
xor
xor
fs
lret
jo
pop
cld
jae
push
jae
fs
jo
sub
arpl
adc
hlt
loop
scas
xor
mov
or
xor
fwait
popf
jmp
mov
push
hlt
or
rolb
mov
sub
xchg
test
ret
mov
roll
push
rclb
nop
jl
aad
adc
mov
mov
lds
fisubl
or
sbb
mov
jne
test
xchg
jl
fdivs
adc
xchg
push
mov
sarb
in
push
jb
push
les
std
jnp
and
les
cmp
fimull
mov
insb
and
xchg
mov
stc
xor
push
jg
test
loopne
inc
or
mov
cld
xor
adc
push
push
jge
add
stos
fldenv
inc
fisubs
mov
jno
or
add
rcrb
sbb
cmp
dec
xchg
idiv
mov
dec
das
ret
jne
sub
shll
jmp
push
and
movsl
arpl
xor
in
pop
ror
rorl
inc
sbb
insl
mov
push
cwtl
shr
inc
cld
stos
inc
add
mov
xchg
xor
jo
aaa
mov
jmp
xor
ret
cmp
mov
add
orl
pusha
nop
rcr
xor
bound
mov
fsubrl
lcall
cmp
sbb
popf
mov
sub
lret
leave
fstpt
adc
repz
cld
stos
out
arpl
fbstp
lea
and
inc
insb
cltd
in
push
sub
adc
mov
pop
aaa
mov
pop
test
jl
sbb
iret
xchg
mov
outsl
mov
movsl
push
xchg
fstpl
xor
je
scas
int3
call
cmpsb
and
mov
adc
inc
out
sbb
push
inc
jmp
out
sub
out
jl
and
mov
fnsave
nop
scas
shl
mov
xchg
test
imul
push
ljmp
sbb
push
jmp
xchg
out
jp
inc
or
lds
jge
fdivp
lock
and
test
mov
adc
lcall
mov
andl
sub
outsl
ret
arpl
push
mov
mov
dec
mov
mov
sub
xorl
imull
sbb
and
out
stc
mov
lcall
popf
dec
shrl
repz
cmc
jb
pop
or
mov
sub
push
stos
pop
fcomps
ljmp
adc
call
loopne
push
pop
ja
mov
mov
cmp
rcll
mov
test
push
push
lret
xchg
pop
inc
mov
push
aaa
sub
inc
lret
push
rorl
js
push
fildll
mov
pop
and
ret
out
ja
pop
cmpl
ljmp
xchg
cmp
sbb
scas
stos
pop
cmp
insb
mov
mov
mov
xor
ja
cmp
ja
jo
cmpsb
add
add
out
stos
rcll
mov
inc
cmp
inc
cli
lret
jmp
scas
insb
mov
xchg
fidivrl
sahf
sbb
add
xor
adcl
push
clc
ja
lock
lret
push
das
fadds
jp
cmp
push
aaa
test
roll
in
fsubs
jbe
sub
xor
adc
or
xor
mov
jbe
cli
out
hlt
cli
lahf
loope
jmp
fadds
and
add
lock
adc
sti
pop
dec
jle
or
lods
loopne
fists
ror
inc
imul
mov
push
xor
lret
test
or
lret
cltd
mov
jge
inc
iret
into
hlt
imul
aad
cmc
mov
jg
and
push
repnz
int3
lock
mov
clc
push
mov
rcrl
xchg
or
icebp
and
xlat
shrl
cmp
cld
int3
mov
fs
mov
imul
icebp
fnstsw
mov
loop
iret
adc
jnp
cmp
adc
sti
std
das
add
jg
mov
data16
jge
push
les
inc
adcb
cld
lret
inc
cltd
aas
sub
sbb
in
add
xchg
dec
lret
cmp
cmc
adc
cltd
pushf
mov
adc
in
inc
test
push
and
pop
push
stc
arpl
cld
push
pop
jbe
pop
aas
mov
adc
sbb
ret
xchg
mov
push
cmp
or
jae
cwtl
cltd
pushf
sbb
bound
stc
iret
int3
xchg
inc
or
cs
aad
jns
push
movsl
data16
jmp
rcrl
push
sub
lods
lret
cmp
pop
rol
rol
gs
sbb
ficomps
sbb
adc
jl,pt
arpl
mov
fisubrl
out
aas
fdivl
fdivrl
repz
mov
dec
stos
out
pop
pop
mov
dec
add
xlat
mov
mov
inc
in
and
das
leave
aaa
addb
jl
popa
sub
ud2
push
inc
iret
jecxz
movsl
push
push
or
sbb
jb
les
je
sar
insb
mov
push
test
xchg
xlat
imul
mov
pop
xchg
mov
cli
into
fnstsw
fistps
mov
jp
iret
lret
mov
test
ret
addr16
mov
sbb
mov
adc
les
test
mov
cs
dec
in
cmp
xchg
les
bound
sbb
gs
dec
ljmp
sahf
pop
push
sbb
push
leave
pop
negl
mov
fimull
lcall
push
ds
mov
daa
sub
loop
loopne
sti
jg
addl
lods
dec
je
mov
or
rorl
and
call
inc
aaa
popa
arpl
mov
jbe
inc
ds
enter
shll
popa
aad
rorb
adc
js
adc
dec
pop
sub
sarb
sub
mov
xlat
mov
faddl
lahf
and
lwpins
sbb
gs
cltd
mov
cmp
lahf
mov
pop
xor
mov
xor
test
xchg
push
xchg
sbb
and
in
xor
mov
gs
xchg
repz
pop
cmp
cltd
mov
popf
mov
push
sbb
jg
outsb
sarb
sti
leave
mov
test
jg
lods
lock
sti
mov
push
push
add
sub
mov
int
sarl
cmp
iret
in
lea
inc
in
xchg
pop
dec
fsubrl
cmpb
xor
mov
lock
sbb
repz
jecxz
adc
idivl
sbb
lret
sbb
mov
mov
mov
jae
test
les
rorb
or
mov
and
cwtl
into
fsubs
pop
insl
lods
jp
mov
idivb
ja
enter
jge
push
adc
jno
nop
jmp
push
dec
pop
mov
data16
in
pop
cli
div
or
mov
pusha
jmp
sub
pop
adc
or
push
xchg
dec
call
aas
push
fucomip
es
dec
rdmsr
dec
daa
lea
cltd
and
adc
fcomip
sub
sub
mov
add
mov
fnstsw
pop
lds
xchg
cs
cmp
add
js
sub
loopne
inc
insb
in
loop
sub
outsl
xor
cwtl
repz
xchg
imul
jmp
jecxz
lds
cmp
xchg
xor
inc
jl
or
xor
and
mov
push
mov
stos
cwtl
in
test
add
push
and
adc
push
xchg
dec
mov
popf
fisubrl
mov
andb
sarb
out
std
mov
les
sahf
icebp
xchg
and
jns
sbb
mov
pop
mov
lahf
stos
icebp
test
and
sub
push
lds
mov
inc
push
out
inc
xchg
rcrl
push
ret
pushf
in
rcr
pop
ret
xor
push
rolb
imull
mov
inc
jbe
add
test
loop
add
xchg
fmuls
xor
das
mov
mov
push
ret
adc
jo
pop
mov
mov
jnp
ss
sub
sbb
data16
out
xor
push
sub
push
add
xchg
xor
inc
pop
pop
ja
loope
add
fwait
push
mov
out
push
mov
bound
jle
jne
xchg
mov
mov
push
cmc
or
pop
inc
push
push
adc
mov
push
pop
pop
lcall
xor
push
sbb
imull
cmp
gs
adc
decl
pop
cmpsb
xchg
dec
add
adc
fidivl
xchg
scas
out
jg
mov
sub
mov
lret
mov
and
sbb
subl
stos
ret
push
pop
stos
js
dec
sbb
ja
lahf
jmp
into
pop
pushf
insw
mov
push
dec
dec
dec
loopne
jbe
fisttpll
cmp
add
enter
aam
mov
pusha
in
stc
iret
inc
jle
clc
add
les
inc
push
popf
sub
dec
mov
mov
jae
loope
test
fstpt
cmp
outsl
cltd
int
pop
insb
out
cs
sub
lea
sahf
filds
cmp
and
loop
sbb
les
loop
je
pop
lea
xchg
mov
jg
push
inc
mov
and
xchg
lcall
mov
lds
scas
xchg
call
xchg
roll
lcall
mov
jo
outsb
es
aas
out
shl
jge
mov
jb
fucomp
int3
and
push
pop
fimull
sub
shl
aad
mov
sti
outsb
lret
pop
sahf
dec
mov
out
paddsb
xlat
mov
fcoml
push
hlt
push
sbb
nop
dec
insb
mov
out
in
rolb
mov
jl
cmpl
pop
fcmovb
aam
lods
es
popf
imul
ror
pop
daa
stc
icebp
icebp
cld
iret
mov
in
push
inc
jmp
xor
or
inc
dec
sbb
leave
inc
gs
rcll
lea
std
xchg
filds
cmp
mov
sbb
cmpsb
mov
mov
ds
mulb
pop
xchg
test
push
dec
cmp
pop
mov
cmp
add
fcoms
push
sahf
inc
jmp
mov
decl
shll
fcomp
ljmp
imul
dec
mov
sbb
cmp
inc
scas
loop
rcr
ficoml
pop
inc
jmp
mov
incl
push
shrl
or
mov
les
or
hlt
imul
cli
cmpsl
xchg
aad
adc
or
les
cwtl
in
iret
push
dec
daa
jb
mov
pop
ret
sub
sbb
inc
mov
jle
pop
clc
out
push
pushf
shlb
xchg
inc
xor
test
aaa
fdivl
out
sbb
xlat
xor
test
cs
loop
movsb
pop
roll
sub
loope
cmpsb
xor
out
inc
mov
push
pop
les
dec
fs
incb
ficomps
lret
xor
dec
mov
mov
add
mov
imul
jno
mov
sar
and
icebp
adc
inc
dec
inc
andl
xor
dec
out
pop
pop
sarl
data16
mov
das
sbb
bound
into
xchg
dec
xor
jmp
fwait
pop
movsl
xor
inc
sbb
repnz
xor
or
push
push
loopne
movsb
loope
data16
inc
or
sub
pushf
into
dec
stc
add
cmp
aam
jbe
sar
je
or
mov
jp
xor
ret
stos
dec
push
pop
and
add
dec
sub
push
test
movl
dec
testb
push
adc
lret
dec
cmp
mov
movsb
push
iret
insl
dec
cmp
adc
mov
icebp
pusha
stos
push
mov
and
jecxz
dec
jp
push
jge
sar
adc
add
into
add
test
adc
sbb
dec
ja
lret
fbld
sarb
movsl
dec
inc
pop
pop
push
xor
ds
lods
scas
vpaddusw
jecxz
adc
fidivs
jnp
inc
fstps
sahf
aad
lcall
stc
mov
sbb
inc
repnz
cli
inc
inc
sahf
mov
push
add
test
rcll
jecxz
and
iret
mov
js
sbb
xchg
int
inc
arpl
gs
dec
lret
xchg
shrl
paddb
pop
icebp
ljmp
cli
pushf
mov
dec
dec
or
pusha
push
and
adc
in
push
adc
jmp
xchg
dec
dec
jne
mov
cmp
adc
sub
test
mov
insb
aam
aaa
mov
mov
repz
xor
je
out
sub
jbe
mov
sub
mov
pusha
adc
lods
pop
jp
lds
mov
pop
hlt
in
push
movsb
data16
dec
call
call
push
imul
test
dec
rorb
and
cmc
fwait
les
cmp
nop
dec
push
rolb
add
je
lahf
adc
mov
loop
mov
pop
push
jg
xchg
lret
xchg
push
xor
fisttpll
push
es
push
sub
sub
ror
icebp
jmp
or
adc
test
or
sti
dec
scas
xchg
jg
and
flds
mov
pop
dec
pop
stos
adc
or
cmp
xchg
shrl
or
cmc
scas
mov
lret
mov
lock
loope
dec
scas
cmp
movsl
push
cltd
test
stos
jo
les
fisubrl
dec
test
stc
fbld
xchg
dec
adc
xor
inc
aas
sarl
cmp
arpl
push
fcmovnbe
fistpll
mov
jl
rcll
mov
xchg
imul
roll
jle
movsb
mov
iret
inc
inc
and
mov
sbb
mov
sbb
add
adc
xchg
mov
lods
and
push
lret
aas
pop
aas
push
mov
fs
test
xchg
imul
add
sbbb
ja
add
mov
rcl
sbb
add
sub
jno
cs
mov
pop
mov
imul
stos
mov
mov
imul
or
pop
xor
movsl
stos
jns
mov
push
jecxz
push
in
fnstenv
fsts
sahf
sub
jno
popf
inc
push
pop
or
or
imulb
js
mov
push
pop
aas
fsubs
popf
insl
lock
insl
ss
sub
out
pop
dec
push
imul
xor
mov
call
pop
adc
lea
adc
push
cmp
or
pop
mov
out
ret
nop
popf
stos
in
arpl
dec
pop
aaa
loop
daa
dec
sub
and
es
leave
lods
imul
xchg
xchg
mov
dec
pop
dec
sbb
jae
ret
jle
data16
popa
mov
push
mov
fsubrp
pop
push
mov
sti
mov
popa
inc
sub
shrb
xchg
adc
pop
std
dec
popa
cmp
xor
mov
sub
mov
icebp
loop
jbe
in
and
stos
dec
inc
jmp
bound
pop
popa
mov
pop
mov
push
push
rolb
in
push
repnz
enter
fdivr
adc
adc
pop
xor
out
xchg
mov
rcr
pop
sti
data16
stos
hlt
pop
xor
loope
insl
xor
iret
int3
add
pop
and
popa
xor
scas
ds
and
imul
xor
fimull
mov
subb
adc
sub
hlt
dec
jns
rclb
js
add
jge
std
mov
push
and
movsl
decb
inc
dec
mov
loop
imul
mov
fs
mov
add
mov
push
add
out
fnstcw
pop
jb
cmp
pop
cld
outsl
mov
fidivrl
fstps
dec
icebp
sub
mov
jnp
dec
outsb
out
lea
inc
jecxz
xor
xchg
or
loopne
mov
jmp
jg
aam
rolb
sbb
jne
adc
fwait
mov
xor
mov
xor
divb
rclb
lods
mov
lcall
ret
divl
adc
xor
fisubrs
ret
mov
enter
pop
incl
xor
pusha
addr16
das
xor
pusha
push
adc
popa
sub
jns
pop
and
sbb
and
divb
xchg
fstpl
dec
or
push
mov
rcrb
xchg
jg
xchg
cmp
dec
inc
pop
mov
cli
jns
sbb
dec
insb
stos
inc
mov
inc
stc
sbb
inc
sub
mov
outsb
lahf
sub
xlat
outsb
cmp
xchg
push
mov
fsubrs
imul
sti
je
repz
mov
inc
lea
rorl
and
mov
jge
adc
mov
lea
and
and
or
notl
data16
shrl
and
cmpsl
insb
sub
jno
jl
mov
mov
mov
fdivrp
xor
pop
push
push
nop
movsb
xor
mov
jl
js
into
out
push
ss
xchg
hlt
outsb
jae
outsl
xchg
cmc
lock
stos
mov
leave
fmull
vpaddq
xchg
test
mov
xchg
jg
nop
sub
mov
jp
jp
arpl
sub
out
xor
push
pop
lret
loope
push
cmp
in
int3
add
stos
sub
pop
xchg
xor
negb
iret
ficoms
push
out
std
mov
mov
fstpl
cmp
and
push
pop
movsl
or
fwait
xor
inc
jge
testb
je
dec
mov
or
mov
fldt
or
data16
imul
mov
int
pop
inc
or
dec
movsl
sbb
xor
push
js
hlt
mov
dec
pop
mov
push
pusha
and
xchg
lds
push
fmull
lcall
dec
ds
mov
sbbl
in
test
xorl
sub
imul
rep
enter
xchg
pop
pop
mov
jp
pop
into
xor
fimull
add
dec
xchg
lret
jg
push
pop
scas
in
fiaddl
lods
pop
arpl
ja
test
inc
lcall
sbb
movsl
fsubr
outsb
mov
xor
add
inc
push
push
orb
outsl
not
pop
or
push
aas
std
push
in
ret
jg
lcall
dec
int
mov
pop
mov
cmp
stos
ljmp
push
int3
stc
adc
pop
pop
push
xchg
inc
out
mov
add
rcrl
push
test
sub
decl
fdivs
sub
sub
jae
ret
adc
add
daa
aam
push
leave
loop
iret
outsl
push
js
or
mov
inc
push
adc
sarb
cmp
pop
cwtl
int
leave
mov
xchg
cmp
inc
dec
das
sub
cmp
jmp
dec
cmp
fdivrs
jl
mov
or
jo
jecxz
dec
test
dec
out
mov
jbe
push
out
daa
add
jb
or
and
test
inc
inc
mov
das
orl
dec
nop
and
mov
jp
addr16
mov
pop
pop
or
mov
pop
movb
scas
sub
inc
pusha
cs
mov
scas
stos
in
lret
call
icebp
xchg
movd
pop
sbb
push
fstpl
stc
xchg
jg
jne
mov
cmp
xchg
jle
fsub
adc
divb
aad
mov
and
icebp
xchg
mov
jge
insl
out
sbb
add
test
xchg
push
fnstcw
in
pop
outsb
loop
dec
add
andl
cmp
pop
aaa
mov
cmpsb
dec
lret
cmc
adc
mov
aaa
xor
insl
pop
stos
or
shlb
adc
sbb
adc
lods
mov
lods
orl
je
nop
xorl
pop
jbe
rolb
lcall
rorl
jg
pop
mov
insl
xlat
cli
push
outsb
fsubrp
sbb
inc
push
call
inc
push
in
in
enter
push
inc
and
adc
subl
aad
roll
rol
fcomi
mov
sub
cmpsb
mov
push
jb
subl
repnz
mov
lds
push
ret
mov
or
lcall
and
sbb
adc
xchg
or
cmp
add
fisubs
insb
fs
sbb
ja,pn
push
mov
pop
pop
lds
xor
sub
jbe
aaa
sahf
dec
xchg
les
xchg
mov
jp
or
loop
push
mov
aad
pop
insb
test
aaa
ljmp
cmp
enter
or
jmp
sub
addl
stos
xlat
sarb
pusha
ror
xchg
leave
sets
stos
cs
ret
add
jg
xor
jl
dec
cld
mov
mov
test
shr
sub
imul
jbe
or
jo
cwtl
pop
imul
mov
lock
xchg
and
cmpxchg8b
lods
sub
mov
sahf
pushf
jmp
mov
int3
fadds
inc
cmp
adc
cs
lahf
shr
and
xchg
test
push
sub
dec
inc
leave
push
and
pop
int3
shlb
sbb
inc
fcoml
pop
ja
push
notb
push
or
pop
hlt
data16
iret
mov
ficoml
sbbl
push
enter
or
push
fucomi
test
mov
dec
mov
scas
xchg
test
mov
outsl
lea
data16
sbb
repnz
xchg
inc
or
sbb
mov
in
sub
inc
cmp
aas
inc
inc
cmp
loopne
das
int
xchg
inc
mov
fcmove
orb
mov
xchg
mov
cmpsl
xor
test
loope
ficoms
push
lea
adc
lods
and
xorb
testl
ja
pop
add
pop
add
insl
inc
sub
inc
mov
rcrl
cmp
scas
int
pop
in
push
mov
in
or
add
fwait
adc
mov
xchg
mov
int
mov
pop
and
adcl
lcall
fbstp
add
push
ficompl
sub
push
ljmp
scas
xor
sub
pop
stos
adc
dec
dec
fwait
out
insl
jge
cmpb
xchg
mov
sub
cmp
out
inc
mov
jae
dec
and
mov
mov
addr16
push
pop
mov
jne
push
and
adc
les
jbe
and
cltd
cmp
cltd
adc
lret
int3
movsl
jmp
dec
ret
insl
pop
lods
add
out
xor
or
int
push
push
orb
jl
cli
push
adc
sbb
addb
push
out
sub
add
imul
push
fwait
mov
mov
jge
das
data16
sbb
insb
loope
inc
adc
xchg
shlb
mov
imul
push
adc
cli
mov
loopne
push
adc
xor
into
xlat
insb
add
pushf
mov
sub
xchg
adc
pusha
jmp
add
adc
cmpsl
add
pop
insb
mov
mov
cmp
shrl
sub
in
out
or
xchg
mov
push
pushf
loop
and
cld
and
insl
incl
adc
leave
hlt
mov
out
es
push
bound
add
adc
push
dec
mov
push
mov
dec
fwait
dec
idivl
or
or
xor
cmc
icebp
mov
jb
mov
add
popa
adcl
dec
lcall
sub
pop
add
inc
out
lahf
pop
xor
lods
sub
test
hlt
clc
jmp
cmp
loop
jnp
sbb
repnz
mov
call
push
test
mov
sbb
push
iret
mov
push
out
leave
push
movsl
mov
outsb
push
jge
xor
lods
inc
cli
shr
push
popf
cmpb
bound
pop
xlat
push
fistl
mov
nop
scas
stos
push
scas
shll
outsl
les
aam
push
or
mov
lods
ret
cltd
lahf
or
inc
in
ret
push
push
sub
punpckhwd
xor
mov
repnz
mov
mov
push
dec
lret
bnd
sub
inc
jne
jns
adc
sub
sub
xor
aas
jne
xchg
pop
mov
addr16
inc
ret
nop
arpl
push
outsb
push
cmpsl
push
mov
dec
inc
mov
xlat
and
bound
pop
add
xchg
mov
pop
cwtl
fimull
data16
testb
inc
inc
cmpsb
bsr
push
stc
lods
jge
mov
add
mov
cwtl
mov
pop
test
loopne
cltd
xchg
scas
sahf
mov
ret
es
lds
ja
mov
test
orl
imul
sub
ffreep
movsb
icebp
in
sub
dec
int
dec
mov
fdivrp
aam
test
push
xor
lahf
jp
or
aad
cmpb
int3
stos
in
xor
call
imul
lcall
fdivrs
clc
lds
add
jmp
gs
mov
sbb
inc
pushl
pop
into
iret
push
inc
xchg
sub
adc
negb
sbb
sub
test
xor
sub
dec
mov
mov
mov
jmp
mov
fld
push
dec
stc
xchg
adcb
cli
xor
xlat
jo
push
adc
add
movsb
jbe
mov
in
lahf
mov
leave
decb
jns
pusha
in
sbb
and
sti
mov
adc
sbb
popa
inc
mov
push
add
sbb
int3
dec
mov
inc
out
push
std
bound
cmpl
sti
pop
pop
test
adc
adc
hlt
push
jae
push
in
pop
lods
outsb
cmp
pop
xchg
inc
js
mov
push
jno
int
adcb
cld
add
fs
jne
ds
out
jnp
imul
mov
sbb
aaa
xor
xorb
ret
cmpsl
les
daa
data16
jmp
in
push
jge
push
dec
jecxz
pushf
mov
repnz
sahf
mov
inc
push
jns
inc
lahf
repz
out
popa
jg
mov
adc
add
orb
jb
mull
stc
push
out
stc
inc
mov
lcall
lret
ret
adc
fisttpll
jecxz
mov
clc
orb
dec
dec
add
fcompl
das
scas
mov
mov
mov
mov
xor
sub
or
in
adc
and
mov
inc
sub
and
pop
in
dec
ret
xor
fdivs
lods
addl
jl
fsubrs
jg
bound
loop
repnz
sbb
movsl
mov
mov
cmp
cmpsl
ss
repz
mov
shl
mov
jg
pop
push
lods
pop
push
xor
sti
lea
jge
push
cmp
addr16
fucomip
xchg
mov
lods
dec
adc
and
sbb
rol
mulb
push
inc
or
xchg
pcmpeqb
inc
adc
jae
aad
pop
cmc
cld
mov
ja
inc
inc
das
mov
pop
filds
nop
push
pop
rcl
push
data16
mov
push
adc
adc
int
popf
ljmp
decl
mov
sbb
in
in
jl
add
roll
push
movsl
in
push
dec
xchg
loopne
xchg
pop
les
adc
aad
pop
mov
and
adc
inc
cmpsb
dec
addr16
cmp
mov
cli
jnp
lret
fcompl
xor
push
movsl
sahf
jg
repz
aas
cmp
mov
jns
mov
aas
aaa
sahf
lcall
jecxz
jae
mov
pop
cmp
mov
jp
mov
js
xchg
cmc
fisttpl
fldcw
inc
push
sub
out
cld
fs
push
lret
jecxz
sub
mov
rorb
mov
jmp
jecxz
dec
loope
add
ja
inc
sti
fmul
mov
mov
das
shrb
xor
pop
aad
lahf
addl
or
xchg
adc
dec
push
xor
aaa
push
fidivs
dec
test
push
add
adc
inc
lret
je
lock
loop
arpl
adc
data16
lret
out
xlat
int
or
cld
test
mov
xchg
adc
xor
push
xchg
and
ja
push
testl
lgs
inc
dec
popl
dec
mov
lds
testl
jecxz
sti
icebp
data16
sti
sti
adc
fistpll
jecxz
nop
in
cmp
mov
push
out
add
push
jmp
sahf
add
adc
or
mov
mov
sbb
in
popa
dec
or
sbb
sarl
dec
xchg
mov
mov
jmp
sub
cli
out
in
mov
jle
repz
or
outsl
data16
outsb
movl
push
outsl
xlat
ja
idivb
jno
mov
or
jne
cld
sub
sbb
add
xor
xor
mov
fsubl
and
add
pop
xchg
push
jnp
dec
push
rcl
in
xchg
pop
or
test
cs
inc
repnz
xchg
mov
test
movsb
and
push
rcll
in
cwtl
or
out
scas
mov
outsl
popf
xchg
enter
xlat
incl
push
cmpsb
xchg
clc
sti
das
mov
shlb
fcomps
push
adc
push
std
fcompl
in
out
xorb
fiaddl
movsb
xchg
sbb
pop
dec
xchg
cli
push
cmp
push
lcall
mov
dec
out
loop
scas
pop
mov
jp
or
in
sub
and
xorb
xor
xor
inc
xor
inc
xor
or
out
and
mov
fldt
sarb
aaa
cwtl
pop
pop
xlat
cmpsb
shufps
test
mov
fs
pop
push
inc
cmp
inc
sub
lods
xchg
inc
xor
test
mov
or
jp
xor
mov
cwtl
add
pop
cmpb
xchg
pop
sub
fwait
rcrb
lods
xor
aad
lret
divb
mov
jo
int3
sub
mov
fmulp
cs
mov
pop
adc
mov
dec
in
in
icebp
adc
dec
add
pop
pop
addr16
and
pop
arpl
xor
test
popa
jg
adc
or
sub
adc
cmp
fistl
in
insb
push
dec
nop
jns
dec
test
shll
test
gs
or
repnz
int3
fidivrs
add
insb
and
pop
xchg
mov
adc
pop
jne
imul
scas
add
setbe
ret
xchg
push
jno
and
arpl
mov
les
test
and
addb
pop
mov
or
mov
adc
pop
dec
jge
push
dec
mov
sbb
js
pop
jo
mov
push
repnz
idiv
in
cmp
cmpsl
adc
mov
test
sahf
hlt
repnz
dec
jp
xor
lret
or
in
pop
adc
cs
sub
sarb
mov
mov
adc
push
dec
push
enter
push
jae
aad
xchg
js
xchg
cmc
xlat
fcoms
dec
mov
lahf
mov
adc
mov
int3
push
and
dec
insb
add
mov
xor
mov
dec
in
idiv
sbb
pop
and
xor
lods
jb
popa
fld1
sbb
sbb
pop
pop
sahf
inc
divl
xchg
jo
inc
and
inc
sbb
mov
cmp
lret
adc
mov
dec
das
xchg
push
stc
mov
loope
sbb
inc
mov
mov
adc
out
lahf
inc
push
shll
mov
sarl
jg
outsl
or
or
jmp
lret
adc
push
lcall
icebp
shrl
cwtl
pop
pushf
cmovle
pushf
repz
cltd
jg
push
stc
shlb
mov
test
dec
xchg
sub
aam
shrl
dec
std
pop
mov
dec
push
pop
fldl
or
add
sbb
outsb
xor
add
inc
push
stos
call
mov
aad
sbb
inc
adc
ja
mov
jge
lahf
leave
mov
insb
pop
pop
in
mov
jp
testb
push
xchg
push
les
cmp
imul
adc
lcall
xor
add
scas
or
mov
mov
int
adcb
fbld
jle
jb
mov
jne
repnz
loop
mov
mov
pop
jl
pop
data16
jb,pn
and
cld
push
ds
ss
rol
inc
add
xlat
sub
mov
push
stos
fildll
adc
ss
imul
pop
aad
xor
sub
nop
mov
fnstsw
mov
out
sub
jge
and
add
repnz
popa
fsubr
int
inc
pushl
js
out
jl
mov
lods
cld
subb
in
negb
push
push
loope
mov
mov
fldt
sti
sti
imul
sahf
ror
pop
xchg
mulb
sti
test
nop
cltd
jns
iret
pusha
leave
outsb
xchg
mov
pushf
pop
fisubrs
push
mov
pop
pop
pop
cli
sti
mov
loop
push
cmp
aam
popf
inc
leave
frstor
cmp
inc
fs
pop
aaa
push
and
cmpsl
out
cmp
pusha
pusha
sarb
test
dec
sub
or
outsb
add
out
mov
nop
xor
rorl
dec
or
jnp
add
push
out
out
add
fcomip
incl
or
inc
sbb
jl
jb
js
jb
pop
push
push
sub
sbb
movsl
arpl
arpl
lock
sub
jnp
xchg
dec
mov
popf
mov
testl
out
pop
enter
std
or
sbb
mov
mov
and
inc
mov
es
leave
pop
dec
xor
push
insl
lea
es
rcl
popa
cmp
and
les
push
sahf
and
xchg
and
mov
xor
jecxz
orl
aam
test
nop
lea
call
cmp
lret
in
jge
jnp
stos
fcmovb
pop
or
out
jo
outsb
push
mov
adc
fdivl
out
popf
xchg
and
lcall
jnp
mov
icebp
repnz
xchg
pop
test
movsb
xchg
lcall
lea
inc
int
into
xchg
nop
ds
adc
jnp
pop
mov
mov
es
enter
sbb
mov
jl
test
mov
lods
mov
daa
inc
outsb
sbb
xchg
in
xchg
jae
hlt
jns
xchg
mov
pop
adc
call
or
movsb
arpl
lret
enter
sub
lods
mov
adc
sbb
add
xor
xchg
mov
push
daa
adc
pusha
shlb
xchg
adcb
and
int3
imulb
movsl
dec
or
mov
movsb
hlt
sbb
rcll
dec
xlat
dec
mov
mov
sub
sub
cmp
cmp
aad
pop
sbb
shlb
sbb
mov
jle
lds
xchg
repnz
adc
inc
dec
imull
fidivl
jno
inc
mov
movsl
add
sbb
cmpsl
pop
imul
cltd
xchg
inc
cwtl
xchg
xor
in
clc
ja
movsl
jnp
mov
cmp
cmp
push
es
and
inc
pop
push
fisttpl
fcompl
pop
sbb
lret
insb
push
cmpsl
push
jbe
cmp
bound
int
sub
cltd
push
arpl
xchg
cli
sbb
in
stc
mov
fadd
jmp
xor
mov
push
xchg
pop
mov
and
xchg
inc
jmp
mov
or
pop
push
pop
dec
jge
rolb
xor
push
sub
ss
pop
les
stos
and
xlat
jmp
pop
mov
icebp
sub
dec
les
or
stc
mov
and
clc
sub
jb
outsb
push
push
push
rclb
or
push
mov
inc
add
push
xor
dec
push
loop
fs
mov
call
int3
sub
decl
int
aas
mov
inc
movsl
stc
xor
iret
lcall
mov
xchg
xor
inc
adc
lret
int
sub
push
xlat
dec
shll
test
and
jp
icebp
and
pop
xor
aam
cmp
mov
ret
in
lcall
mov
dec
lret
test
jmp
mov
js
cwtl
inc
and
mov
mov
mov
sub
mov
into
nop
jmp
push
jle
jl
lret
mov
add
fsubrl
stos
sbb
mov
movsl
jns,pt
test
test
insl
sub
xor
mov
push
or
xchg
dec
das
jp
test
jb
mov
rcr
inc
les
bound
rclb
xchg
sbb
push
fsubs
fildl
insb
inc
dec
push
jae
sub
cmp
out
aad
mov
fidivrl
test
dec
mov
mov
fcompl
jle
xorb
js
js
repz
push
repnz
lea
sub
inc
loop
les
mov
add
jne
mov
icebp
cwtl
sub
and
fs
fidivs
ror
imul
dec
test
loope
pop
sub
into
dec
pop
add
mov
cwtl
sahf
mov
pop
adc
xor
or
pop
enter
add
mov
jmp
dec
push
rorl
lds
dec
adc
stos
and
fstpl
lods
dec
sub
xchg
mov
adc
iret
or
negb
cltd
mov
addr16
aas
sti
call
ds
add
arpl
push
xlat
clc
mov
shll
sub
scas
or
push
sbb
push
cmpsb
cmp
insl
movsb
insl
xor
idivl
sti
pushf
arpl
dec
sbb
dec
js
cmp
aam
shr
std
lcall
push
jp
mov
lock
jg
mov
lods
pop
sub
leave
mov
inc
popf
out
loop
movsb
gs
repz
daa
dec
imulb
pop
xchg
mov
jge
mov
pop
cltd
sarb
int3
bound
out
es
loope
mov
cmp
enter
lods
imul
fisttps
pop
inc
adc
js
push
inc
cltd
jb,pn
jle
mov
outsb
pop
loopne
sti
xor
sbb
aaa
hlt
push
jb
ror
insb
incb
fwait
and
stos
jp
mov
incb
jp
jo
lret
sub
std
dec
into
xchg
cltd
movsb
mov
or
cwtl
dec
xlat
push
dec
repnz
std
repz
xchg
rcll
and
cltd
lret
cli
rcl
jb
rclb
test
push
into
push
push
and
jp
cmp
cmp
lcall
mov
and
pop
pop
mov
pop
pop
push
ja
dec
sbb
mov
dec
mov
cmp
push
jno
push
std
push
mov
fstpl
jge
mov
insb
insl
and
cmc
cmp
mov
loope
jne
lcall
es
push
rclb
cmp
outsl
outsb
scas
pop
popa
add
push
or
or
mov
icebp
xor
les
jg
fwait
out
adc
int
add
adc
aaa
loop
pop
push
sub
sub
mov
add
mov
popf
sbb
push
mov
pop
mov
mov
pop
test
push
pop
push
dec
loop
rol
and
pop
xor
mov
je
push
add
les
mov
cmpsb
mov
sub
in
sbb
sub
mov
mov
jg
pop
in
xchg
lods
std
jne
dec
pop
sub
dec
loopne
pop
sub
fsubl
mov
xor
cmp
dec
cmp
repz
lods
stc
pop
push
jae
mov
test
jg
lcall
fstpl
pminub
scas
mov
scas
jp
push
xor
mov
dec
adcb
stos
imul
cmp
or
push
std
into
int3
in
jns
sbbb
cmp
sub
mov
popf
ss
shlb
pop
push
inc
cmp
mov
push
cmc
nop
adc
fidivl
loope
pop
xor
loope
subl
or
jp
das
add
pop
pushf
push
sbb
test
ja
in
stos
pop
loopne
jl
mov
mov
cmp
das
imul
adc
out
xor
inc
out
sbb
jae
mov
lret
sbbb
mov
mov
sbb
pop
pusha
mov
aad
or
cmp
jno
xor
cmpsl
shlb
dec
mov
mov
movb
lods
lcall
pmaxsw
or
push
es
fnsetpm(287
or
lock
inc
outsb
mov
lret
push
bound
or
fsubl
sahf
add
orb
outsb
pop
adc
push
repz
mov
lahf
fimuls
test
sbb
and
sbb
dec
dec
xchg
js
or
fwait
cmp
orl
mov
mov
xchg
mov
fcmovne
push
sub
push
leave
mov
enter
mov
rclb
in
dec
dec
cwtl
arpl
pop
jmp
iret
adc
je
leave
rol
mov
aas
push
sti
call
std
cmc
aad
les
or
testb
je
dec
cmp
mov
enter
lock
jne
inc
add
dec
mov
out
lret
cmp
xchg
movaps
jge
iret
sti
inc
xor
daa
and
hlt
sub
imul
cmp
pop
add
sub
lds
ror
popf
mov
stos
addl
sbb
loopne
mov
sbb
in
lcall
fucom
clc
pusha
pop
iret
fidivs
lahf
div
lds
cmpb
mov
adc
cmp
inc
dec
jb
jb
pop
aaa
mov
icebp
pop
cli
jp
xchg
ds
push
aam
push
jle
xchg
lods
xor
pop
in
mov
adc
and
test
insl
cli
xorb
mov
pop
or
jle
xchg
or
pop
sbb
mov
mov
sub
mov
sbb
arpl
mov
mov
shll
lfs
and
and
mov
loop
mov
mov
cmpsl
shl
in
dec
cli
push
sbb
push
push
cmp
int
mov
repz
mov
test
cs
xorl
lahf
push
xchg
dec
inc
mov
pop
xor
lock
cmc
push
es
push
ret
aad
xchg
testb
in
lret
sahf
daa
xor
and
mov
jmp
xchg
adc
jg
outsl
test
fwait
insb
arpl
sub
cld
fistpl
mov
xchg
dec
addr16
jno
ret
mov
lcall
push
mov
pop
jp
out
jle
imull
stc
push
xor
push
jl
out
xchg
insl
sti
lcall
mov
mov
jne
mov
popa
decb
xor
out
insl
out
pop
and
push
pop
mov
test
xchg
add
mov
add
testl
push
in
es
and
pop
cs
mov
in
xlat
mov
xchg
aaa
lods
ficomps
push
into
sub
xor
ret
call
movsb
arpl
mov
jp
xchg
push
jge
and
imul
sbb
bound
mov
movsl
adc
xchg
faddl
dec
test
stos
pop
fs
aaa
in
inc
pop
cmp
inc
push
push
cmp
or
and
and
sbb
mov
xchg
mov
arpl
imul
xchg
sbb
cltd
jb
cs
insl
xchg
popf
mov
cmp
inc
jge
lds
aam
jbe
jge
push
pop
cwtl
shlb
jge
adc
dec
push
lods
movsl
push
sub
jg
out
sub
dec
jp
mov
les
lock
out
mov
push
aam
xchg
jnp
inc
aaa
bound
dec
and
sub
mov
iret
push
jnp
xor
adc
mov
ss
ftst
dec
mov
ret
push
loopne
lock
add
dec
mov
push
ss
jns
pusha
push
lock
cwtl
pop
jae
lods
adc
shrb
add
out
inc
aas
mov
sbb
sub
test
cmp
jne,pt
add
subb
xchg
add
pop
xorb
mov
adc
ss
jg
push
sub
icebp
mov
sbb
inc
and
lock
je
outsb
outsl
sbb
andl
inc
adc
ffreep
or
rcrl
nop
in
mov
pop
data16
lret
rclb
mov
std
and
cmp
cmp
sub
xor
pop
xchg
xchg
lret
mov
leave
and
into
jmp
and
add
movsl
test
sub
sbb
push
or
and
pop
dec
bnd
repnz
sub
push
pusha
adc
loope
mov
pop
aad
lcall
and
pop
add
sbb
adc
cld
nop
popf
add
jb
cmpsb
lods
adc
and
sbb
fnsave
xchg
jmp
hlt
jmp
sbb
cwtl
jae
movsl
xchg
aas
xchg
subl
dec
aad
or
in
push
shlb
ja
pusha
data16
ficomps
jb
enter
pop
pop
in
cmp
aad
sub
daa
mov
sbb
push
dec
mov
mov
cmpsb
hlt
bound
pop
lods
orb
jne
mov
add
js
popa
insb
cmc
ja
mov
cli
fs
stc
outsb
adc
inc
test
pusha
mov
je
clc
mov
jbe,pn
push
jge
mov
mov
mov
cmpsb
mov
inc
add
sbb
dec
test
xor
aad
pusha
das
mov
adc
icebp
pop
add
or
mov
and
add
fildl
add
and
sahf
push
mov
push
xchg
jp
cwtl
ret
stc
jge
call
js
push
mov
call
cmpsl
pop
int3
push
pop
jns
or
ret
pop
movsb
pop
fs
sahf
jne
push
ret
pop
scas
fs
scas
in
test
pusha
push
jp
adc
inc
or
inc
fwait
aas
mulb
adcb
jge
push
push
sbbb
mov
cmp
fs
lods
call
sbb
std
ud2
sbb
sarl
add
inc
inc
dec
rcll
mov
fcoml
test
adc
jle
scas
adc
dec
aad
add
mov
sbb
mov
clc
sbb
sub
iret
push
mov
inc
daa
cld
cli
lea
jb
sti
scas
mov
loopne
imul
test
pop
je
sub
mov
sbb
popf
stc
out
push
das
lret
mov
in
std
push
clc
push
stos
jmp
sub
repz
ret
lds
xchg
imul
push
inc
fisubrs
ret
aas
cmp
mov
mov
or
cli
loope
mov
int
ljmp
sahf
adc
repnz
xor
push
jbe
std
repz
pop
cli
mov
shlb
pop
cmp
xchg
xchg
fcmovne
jl
sahf
push
jl
jnp
stos
scas
leave
fstps
xor
and
cmpsb
mov
es
add
dec
gs
fbstp
mov
mov
push
in
out
fs
es
pop
movsb
and
pop
int
mov
push
inc
cltd
or
lea
jecxz
in
lret
push
shlb
jae
add
ds
or
xor
push
dec
or
sbb
shl
lods
dec
jns
mov
iret
mov
push
lahf
jle
sbb
push
aas
xchg
add
stos
sub
dec
adc
fiaddl
xchg
rcll
mov
in
mov
stc
cmp
dec
mov
sbb
mov
push
sub
stos
and
pop
fnstsw
mov
mov
sub
sub
arpl
pop
gs
popf
rorl
fdivr
mov
xchg
pop
sub
jecxz
add
or
fsubs
jg
fsubl
push
push
mov
jns
cmp
call
dec
add
aaa
xor
loopne
push
mov
sar
mov
mov
cld
mov
stos
push
mov
pop
imul
imul
mov
jne
arpl
xor
cwtl
cmp
es
cltd
dec
pop
mov
imul
sbb
lods
add
arpl
sub
pop
inc
iret
jg
add
jmp
cmp
popf
stos
pop
lds
inc
mov
enter
push
iret
outsb
and
dec
pop
jbe
enter
pushf
int3
ud1
hlt
mov
aas
jecxz
xchg
adc
mov
and
out
jmp
or
inc
repnz
sarl
pop
dec
add
mov
mov
loope
mov
mov
insl
mov
sub
shl
cwtl
dec
repz
enter
adc
add
sbb
aaa
mov
adc
jge
push
push
push
out
cmp
fsub
xor
out
into
xchg
jno
push
pop
out
inc
or
xor
out
imul
in
push
out
enter
into
xchg
mov
adc
push
sub
cld
outsb
push
dec
pop
xor
pop
or
mov
sub
daa
insl
leave
mov
in
push
repz
ljmp
push
and
lret
lahf
cmpsl
clc
cvtpi2ps
les
push
xor
aas
add
mov
lahf
mov
mov
push
pushf
sarb
push
adc
add
in
or
mov
ror
push
int
push
fucom
or
rolb
shr
dec
jge
sbb
mov
in
mov
fstpl
in
cltd
cmp
adcb
xor
daa
xchg
movsb
aam
push
cld
cmc
dec
rcrb
movsb
add
and
sbb
sub
out
push
dec
sub
mov
lods
sti
aam
in
sub
jg
repnz
into
mov
lret
push
out
push
testl
in
pop
adc
mov
test
jne
xor
xchg
mov
sbb
pop
sbb
mov
cmp
les
inc
aaa
aad
push
inc
xchg
inc
fimuls
xchg
xchg
int
scas
add
cld
cmc
iret
paddusw
int3
or
shrl
dec
fisubrs
inc
cltd
add
adc
xchg
or
xchg
stos
in
add
daa
add
dec
fsubs
cmp
aad
stc
rcll
cmp
inc
aad
mov
and
hlt
js
jnp
mov
xchg
fnstsw
popf
cmovne
sbbb
push
daa
sbb
mov
inc
ficompl
lret
pushf
mov
insl
dec
mov
adc
dec
sbb
inc
rolb
lods
jp
adc
adc
outsb
mov
in
or
stos
repz
nop
lahf
aam
pop
sbb
bound
xchg
in
add
cmp
sar
stc
dec
pusha
mov
push
loop
out
mov
xor
loope
fldl2e
pop
sub
pop
movsl
xor
mov
mov
sub
mov
cmpsl
daa
les
pusha
jl
sub
cmp
mov
cmp
fnstcw
lret
andb
sti
les
fwait
es
cmc
and
mov
jmp
idiv
es
mov
scas
or
push
inc
mov
inc
cwtl
das
icebp
dec
xchg
cmp
add
ret
aaa
ret
sub
xlat
and
or
adc
js
and
cmp
in
loope
push
ret
mov
xchg
cwtl
mov
mov
mov
test
int
jle
or
jp
test
bound
or
xchg
in
scas
add
ret
lods
xchg
call
cmpb
repz
or
rclb
nop
or
mov
or
movl
push
mov
rep
push
nop
in
repnz
cmpb
mov
clc
fstps
xchg
repz
je
hlt
ficoms
nop
out
mov
or
movsb
jno
xor
inc
lock
lock
cmpsl
push
sub
sbb
mov
jae
push
mov
sub
or
pop
cs
pop
cmp
add
jne
fmul
jge
add
pop
iret
sub
jg
loop
mov
inc
adc
daa
push
stos
aam
rcrl
mov
in
lret
in
hlt
loope
mov
js
push
lock
xor
pop
mov
loope
pushf
popf
scas
xchg
push
pop
imul
push
int
js
test
daa
xchg
xor
xchg
and
test
ret
push
int
xor
add
cmp
cmp
sti
pop
inc
xchg
out
fisttpl
lcall
push
mov
inc
rol
lds
nop
leave
arpl
and
shrl
data16
test
sub
push
lahf
dec
out
fstps
push
dec
adc
fisubs
repnz
addb
pop
add
mov
scas
shl
lcall
lea
mov
bound
into
repnz
sbb
lock
sti
lock
outsl
cli
jb
ret
xchg
lds
and
popa
mov
add
jno
sub
fisttpll
inc
and
or
lods
loop
inc
cld
inc
add
sub
dec
add
add
js
ret
div
bound
gs
inc
insb
xchg
add
addr16
dec
pop
int
test
mov
jb
testl
add
lret
cltd
sbb
cmp
sub
cmc
add
lock
jp
xchg
mov
sbb
mov
gs
mov
cwtl
adc
mov
pushf
aaa
pop
sbb
dec
sbb
daa
and
mov
and
push
enter
xor
dec
cmpsb
loop
jecxz
lods
inc
cmp
push
xchg
sbb
mov
xchg
daa
xchg
dec
cs
push
ss
adc
adc
rclb
mov
inc
dec
test
dec
std
inc
mov
cmp
inc
stos
xor
iret
add
incl
ja
in
mov
cld
inc
ja
test
aad
xchg
jnp
mov
ja
lods
inc
add
orb
push
icebp
hlt
inc
xchg
mov
scas
aam
aaa
xchg
sbb
enter
push
push
dec
dec
inc
push
jmp
xor
cli
aaa
mov
fstl
xchg
mov
push
repz
mov
jae
pop
and
inc
mov
std
adc
movsl
mov
pop
jbe
lods
xchg
bound
cmp
mov
fdivr
loopne
lds
fnstenv
test
mov
and
and
xchg
add
dec
mov
out
lea
mov
aam
aaa
mov
mov
repnz
mov
xchg
aad
jg
xchg
fistl
jge
arpl
inc
jns
or
or
test
and
mov
mov
popf
add
mov
add
out
lods
mov
xchg
mov
pop
inc
imul
cmpsl
cmp
cmp
loope
repnz
push
insl
mov
ja
pushf
mov
mov
xor
sbb
and
fmul
sub
inc
mov
ds
pop
cmp
pop
cmpsl
fisubs
jp
inc
dec
in
cmp
sarb
xor
unpcklps
data16
mov
fs
sarb
out
adc
in
fcoms
jle
and
testb
cld
hlt
push
lods
js
xor
push
pop
leave
inc
jbe
imulb
pop
or
dec
loope
mov
mov
push
cmp
mov
sbb
add
xchg
and
xchg
popf
push
or
shrb
jo
adc
aas
pop
int
and
inc
pop
push
add
cmp
xor
mov
jmp
enter
adc
sbb
stc
dec
add
ja
xor
hlt
sti
inc
lret
das
xchg
std
out
scas
jle
call
jle
push
push
cli
fidivl
test
aad
pushf
daa
xor
mov
ret
mov
cmp
insb
mov
mov
clc
adc
cmp
mov
sbb
sahf
mov
and
sarl
mov
mov
or
movsl
stc
int
pop
aaa
jmp
mov
lock
and
int
in
fimuls
jae
inc
stos
mov
and
sbb
mov
rcrb
jl
sub
or
mov
fstpt
jl
mov
sub
sub
mov
loopne
sarb
outsl
inc
enter
pop
arpl
xor
fwait
iret
sub
outsb
mov
test
mov
add
rcl
call
inc
fwait
dec
fs
add
ret
mov
bound
jmp
test
lock
jae
rcll
in
and
add
dec
out
jnp
jae
push
in
push
das
dec
pop
fcompl
in
outsl
dec
pop
cmpsl
sbb
out
lret
jns
inc
movsl
shl
cmc
ss
push
mov
jnp
jecxz
xor
push
pop
scas
lds
mov
lahf
xchg
lea
aaa
iret
gs
and
in
std
insb
cmc
sbb
and
sti
icebp
nop
sub
push
pusha
pop
imul
shl
ljmp
push
dec
cmpsb
mov
dec
cmc
lret
add
mov
lret
and
add
jge
and
mov
push
cmp
lods
push
xor
sti
sub
sbb
push
adc
sbb
ss
add
inc
inc
sub
adc
sub
sbb
dec
xor
xor
sub
push
adc
jge
dec
adc
xor
xchg
add
stos
pop
mov
sahf
cmp
or
push
pop
mov
dec
cmpsb
aad
push
clc
dec
pop
icebp
dec
jnp
cmc
lods
clc
inc
jb
cld
lcall
test
mov
push
das
ljmpw
call
repz
insb
xor
xor
cmc
lds
aas
inc
mov
cmp
push
pusha
pop
sbb
fidivl
lea
pop
xchg
and
fucomip
xchg
sbb
adc
jae
mov
lcall
and
xchg
xor
mov
mov
or
add
and
jb
aas
movsl
mov
jmp
ret
dec
jmp
incl
fsub
test
fldt
aad
jecxz
jns
mov
jecxz
je
movsl
cmp
loope
ljmp
jae
ds
cmp
push
push
sbb
data16
mov
push
jmp
dec
dec
loopne
movsb
cmpsb
adc
mov
pushf
bound
inc
push
push
xor
add
mov
insl
aaa
dec
jnp
scas
push
aad
adc
push
mov
add
call
popa
xor
insb
pop
call
popa
cmp
push
mov
add
jo
scas
ret
pop
bound
push
jl
int3
lret
and
lods
test
addl
sub
or
xorb
iret
cmp
xchg
or
dec
pop
push
gs
sbb
enter
movsl
stc
pop
jg
mov
sti
adc
fwait
in
mov
aad
push
dec
and
dec
shl
shr
aad
dec
dec
cmp
enter
push
scas
test
stc
mov
and
daa
mov
into
leave
push
inc
leave
dec
sbb
test
sbb
stos
adc
jecxz
pop
outsb
sub
jg
scas
or
mov
pop
subl
cltd
sbbl
adc
lcall
cmc
addl
mov
or
divps
push
fisubl
and
stos
lahf
jne
pop
rcrl
movsb
insl
mov
lds
mov
xchg
sub
and
sbb
or
sbb
cmp
jl
or
stc
xchg
in
dec
mov
sbb
dec
data16
enter
outsl
mov
in
lcall
cs
push
pop
je
out
push
jb
mov
data16
mov
xchg
decl
arpl
pop
ljmp
ds
push
mov
jl
mov
sbb
test
jmp
stc
mov
and
out
ss
movb
popf
loopne
fs
lds
lret
insl
mov
jle
repnz
int
testb
ja
jae
and
ret
cmovo
mov
test
push
pop
and
inc
aam
shrb
or
cltd
roll
insb
pop
faddl
lods
dec
pop
pop
jmp
in
adc
subb
mov
into
inc
push
cwtl
pushfw
sbb
stos
xchg
imul
xchg
mov
jle
mov
sbb
adc
arpl
push
mov
mov
out
adc
add
sbb
test
cmp
int3
mov
popl
lds
mov
int
push
lock
call
mov
mov
in
cli
jge
mov
pop
subb
add
in
sbb
in
xor
sbb
ret
mov
jg
popl
rcll
fidivl
dec
mov
xor
adc
xchg
aam
shlb
es
or
dec
fmuls
adc
inc
push
scas
ret
mov
rol
add
add
fstpl
push
jb
test
loopne
cmp
int3
movsl
popf
mov
or
dec
pushf
nop
add
xchg
test
shl
mov
pop
out
adc
mov
xor
repnz
push
or
lods
je
cmp
loopne
mov
or
cli
or
ds
jp
cmp
pushf
es
push
outsb
and
xchg
mov
in
adc
mov
dec
testl
mov
add
roll
mov
ss
inc
fmull
cmc
pop
addr16
aas
incb
scas
ret
sbb
add
test
loope
and
std
aas
pop
lcallw
xchg
add
addb
mov
or
mov
push
and
pop
push
aam
pushf
push
nop
cmpsb
mov
into
loope
ds
call
adc
lods
popf
shll
or
imul
mov
xchg
and
cwtl
es
cli
xchg
add
mov
add
pop
adc
push
push
sbb
xor
mov
outsl
pop
fwait
jo
cwtl
cli
sbb
pop
mov
cmp
sahf
cmp
xchg
jbe
stos
rcrb
jns
xlat
push
and
push
aaa
lret
jno
scas
mov
test
push
add
adc
imul
jnp
jbe
loopew
inc
int
jae
fcmovnu
fbstp
scas
js
cli
int
or
cmp
ret
fwait
andb
stos
mov
dec
loop
mov
enter
mov
hlt
mov
jp
int
adc
push
adc
xor
and
jns
add
jae
neg
jp
out
stos
xor
sub
xchg
add
movsb
mov
stos
xor
xor
mov
inc
pop
loopne
std
lret
pop
xchg
fldcw
xchg
mov
and
fidivrs
cmp
xor
jb
into
enter
mov
out
shlb
rcl
popf
sbb
mov
outsl
mov
cld
lret
in
xor
stc
in
adc
out
ss
cmp
mov
pop
xchg
mov
es
fwait
mov
ds
into
mov
push
mov
pop
pushf
fstps
sub
sbb
xor
lahf
into
push
aas
mov
scas
cmpsb
mov
stos
ds
lahf
adc
sub
int3
jmp
inc
cmp
cltd
fwait
mov
cmp
icebp
adc
mov
mov
adc
stos
sub
push
psubusw
out
test
repz
jno
lea
aas
lret
push
int
scas
pop
ljmp
pop
pop
cmpsl
cli
addr16
das
in
mov
sti
xchg
movsl
inc
xor
dec
xor
arpl
inc
sti
push
xor
lods
fnstenv
repz
test
pop
inc
cmp
scas
popf
cmc
push
pop
mov
loope
es
mov
jg
xor
xor
dec
mov
imul
sbb
inc
lods
fs
push
jb
lret
pushf
dec
addr16
iret
cmp
xchg
fisubs
aas
push
idivb
fcmovbe
fdivrs
sarb
jbe
xor
subl
daa
stos
jno
xor
and
mov
mov
dec
jmp
inc
mov
in
stos
mov
iret
lods
push
std
mov
lret
inc
ret
out
sti
lods
fdiv
lahf
in
aam
pop
sbb
mov
ret
pop
imulb
sbb
pop
jl
mov
fs
mov
fistpll
push
xchg
dec
adc
ljmp
addr16
pop
in
jnp
cwtl
jmp
xchg
dec
jmp
js
outsb
dec
mov
pop
add
andl
jno
std
push
addr16
cli
xchg
icebp
cltd
mov
xchg
push
std
cmp
in
jmp
mov
pop
in
push
xchg
lcall
mov
pop
inc
push
mov
aaa
push
pop
les
mov
ljmp
push
bnd
aad
std
out
add
pushf
fs
push
push
or
pop
adc
mov
cmpl
cld
jb
in
jmp
cmp
xchg
outsb
pushf
fsts
fs
add
inc
mov
rolb
xchg
leave
shr
clc
mov
cwtl
jb
pop
pusha
orb
push
sbb
inc
pop
ss
add
test
lods
push
test
out
add
lret
push
adc
cli
insl
sahf
stos
iret
xchg
pushf
repz
repz
dec
inc
xchg
mov
cmpsb
lret
mov
push
xchg
mov
and
push
idiv
push
lds
jp
add
sub
xchg
xchg
pusha
push
mov
cmp
dec
push
xchg
outsl
pop
into
adc
inc
imull
push
das
inc
iret
pusha
xor
ja
xchg
js
and
xor
sbb
mov
mov
cmpsb
mov
jmp
in
pop
jecxz
shr
pop
mull
dec
cmp
fcoms
enter
out
popf
pop
sub
mov
cs
pop
inc
jbe
dec
lock
arpl
stos
push
cs
inc
repz
and
loop
loope
mov
lret
jns
mov
xchg
xchg
xor
or
inc
inc
sub
aaa
cmpl
inc
mov
addr16
mov
pop
xchg
inc
adc
sbb
or
movsl
or
mov
sbb
jmp
aaa
fwait
push
imul
ret
dec
mov
lret
sbb
jne
loope
pop
sbb
and
and
cld
dec
adc
sahf
fsubrl
loopne
add
jmp
pop
sub
xor
fstl
cld
sahf
daa
aam
ss
sbb
sub
adc
xlat
adcb
mov
or
shrl
pop
mov
ret
enter
mov
dec
punpckhbw
int3
inc
add
push
jmp
in
test
popl
and
shlb
cwtl
loop
sbb
insl
je
jmp
es
dec
testb
jecxz
xorb
mov
mov
clc
loop
mov
pop
sbb
pop
out
and
rcrl
mov
mov
pop
xor
dec
out
dec
cmp
sub
jbe
pop
or
jno
in
xor
sub
xorl
scas
lcall
aaa
sbb
sub
or
push
or
pushf
xchg
in
add
es
lea
xor
jns
cmc
sbb
clc
daa
mov
pop
push
xor
jecxz
pop
mov
lret
call
dec
pop
xchg
outsl
pushf
mov
mov
fs
sbb
aad
sbb
fidivs
xchg
cwtl
jecxz
dec
mov
sbb
fsub
test
jmp
sbb
outsb
sub
and
pop
mov
test
pop
nop
out
xor
sbb
stos
fildll
stc
mov
push
jmp
cmp
cmp
out
jbe
adc
inc
lret
fstpl
lea
nop
pushf
out
push
add
xor
cmp
iret
fsubl
xchg
sub
gs
sbb
fimuls
cmp
xchg
jl
xchg
fcomip
loope
xor
mov
mov
push
fwait
int
imul
push
out
add
lcall
cmpsb
js
into
jmp
inc
das
jne
enter
insb
clc
mov
rol
cld
add
rep
jmp
icebp
xlat
ja
les
xlat
inc
insl
pop
decb
cli
xor
adc
inc
sahf
adc
aas
in
movsl
aas
in
xor
clc
add
cmp
popf
push
movsl
cmp
cs
movsl
loopne
push
xor
int3
pop
std
test
lods
sbb
or
mov
add
mov
shl
shrl
out
push
btc
sbb
imulb
xchg
xor
or
sahf
adc
addb
cmp
cmc
pusha
test
popa
pop
in
lcall
sbb
jae
arpl
dec
sub
xchg
sub
mov
out
roll
stos
push
movsl
icebp
add
aad
rcrl
inc
aam
mov
push
push
or
sbb
sub
inc
stos
mov
dec
or
imul
dec
sbb
xcrypt-ofb
cmpsl
outsl
and
scas
xor
call
push
inc
jmp
pop
imul
shlb
imul
shrl
xchg
dec
scas
adc
mov
rorb
cmc
and
les
daa
aaa
and
rcll
xor
mov
jmp
or
pop
lcall
add
jmp
in
cmpsb
push
adc
ficoml
stos
daa
cwtl
les
inc
jecxz
enter
add
or
inc
insl
cltd
xchg
adc
mov
xor
mov
push
mov
mov
add
xor
lods
iret
push
xor
mov
bound
dec
arpl
pop
xor
je
leave
inc
out
lahf
inc
cli
fimull
and
mull
adc
jp
fisttpl
mov
test
gs
or
inc
sub
imul
leave
lods
fsts
movsb
loope
mov
lods
push
jle
adc
out
and
jp
shl
mov
ficomps
pop
lock
dec
dec
popa
cmp
aas
lea
xor
test
adc
adc
dec
push
aad
jno
outsl
shll
pop
sub
inc
shrb
fldcw
push
into
xor
adc
gs
lods
ljmp
sub
pop
repnz
imul
inc
cmp
pop
dec
mov
inc
xor
data16
icebp
adc
movsb
sahf
xor
je
xchg
mov
sub
or
in
and
mov
sti
scas
inc
mov
adc
or
cmp
aaa
ret
enter
scas
cmpsb
jb
pop
sbb
rorl
mov
mov
mov
add
jns
xor
out
push
in
dec
stc
pop
rcrb
popf
outsl
jne
jo
aaa
outsb
pop
pop
jg
mov
rcrb
sbb
notb
test
movsb
mov
movsb
dec
arpl
mov
and
mov
push
neg
jg
jbe
dec
and
mov
sub
mov
out
push
sahf
test
pop
fwait
inc
repz
icebp
idivl
xorb
das
popf
sbb
testb
repnz
out
xchg
popf
xchg
into
sbb
jl
xor
mov
aaa
push
cmpsb
inc
or
aaa
inc
das
sub
dec
mov
jmp
das
push
pop
fnstsw
outsl
por
jp
call
mov
inc
inc
jg
daa
test
or
jne
cli
in
shrb
sbb
xchg
sbb
add
jnp,pn
shll
and
cmp
clc
push
test
lods
xor
adc
adc
xorl
sahf
mov
shr
cmp
scas
mov
clc
test
dec
mov
out
sbb
mov
push
sub
sar
pop
lret
imull
test
and
sbb
dec
push
aam
ret
pusha
out
enter
sub
mov
inc
scas
and
test
jmp
call
push
mov
or
fnstsw
lock
hlt
push
aaa
ret
scas
ja
je
icebp
and
loopne
les
adc
pushf
sti
pop
mov
cs
loopne
rcll
sub
sub
mov
sbb
lds
divl
in
and
mov
and
arpl
push
bound
out
std
dec
fldenv
data16
icebp
test
outsl
xor
fdivrs
sti
adc
andl
xor
insl
fmull
repnz
arpl
fwait
loop
iret
xlat
xchg
xor
jb
inc
xor
call
loop
mov
fldenv
sbb
mov
pusha
call
xor
mov
insl
push
cmc
add
push
movsl
lret
sbb
call
das
sbb
ljmp
aas
aaa
es
sbb
js
out
pushl
idiv
push
cmp
add
mov
out
xor
jecxz
lods
mov
pop
sbb
cs
ret
fisttps
shl
mov
call
into
jb
cmpsb
aaa
cltd
dec
cmp
push
in
int
push
xchg
je
jge
cmc
sub
aas
pop
pop
push
incl
or
aad
fldcw
pop
lock
lcall
movsl
sub
movsl
mov
sbb
jnp
jae
or
xor
lret
aaa
flds
and
xor
pop
repz
sbb
mov
inc
mov
sbb
aas
sub
test
test
iret
aaa
dec
cs
xchg
pop
dec
cmp
lea
pushf
jecxz
dec
cmp
jmp
leave
loope
sub
dec
cmp
iret
ja
idivl
xchg
insb
mov
das
lock
call
add
ljmp
dec
hlt
nop
push
xchg
divl
out
push
movsb
inc
pop
shl
scas
pop
sub
es
cmp
loopne
aad
rclb
repnz
xor
arpl
test
push
js
push
aad
in
nop
dec
xor
mov
popf
scas
and
and
dec
and
jg
dec
mov
mov
and
faddp
fs
inc
xchg
push
pop
add
push
xor
jp
lds
cmp
pop
clc
addr16
sub
mov
sbb
or
pop
dec
loop
mov
xchg
scas
out
stos
xor
and
loop
stc
imul
add
sub
lcall
cmp
ljmp
andb
clc
fnstcw
aaa
ret
data16
jmp
int
cs
es
or
adc
and
fsub
aaa
pop
std
mov
sbb
mov
add
xor
scas
sbb
repnz
dec
sub
sub
inc
xor
cld
mov
pop
jg
push
ja
mov
popa
xor
add
xlat
sbb
divl
inc
fsubp
sub
cmp
int
fdiv
mov
xor
dec
pop
and
cmpsl
imul
dec
fwait
push
pop
sub
les
mov
and
xor
jp
test
or
test
rep
ds
aaa
outsl
dec
fnstsw
jl
mov
pop
mov
mov
bound
lods
repz
xor
mov
mov
add
xor
mov
add
cmp
or
mov
mov
jnp
add
test
fdivs
lods
inc
daa
xor
dec
jne
pop
bnd
cmpb
stc
jle
xchg
inc
xorb
aas
gs
out
mov
out
push
mov
cmp
int
loop
fldenv
mov
cltd
xchg
repz
ss
push
adc
add
add
in
jl
fistps
in
or
add
mov
rcrl
dec
cmpsl
xor
mov
mov
mov
fcmovu
push
jb
adc
int3
dec
mov
jmp
sbbb
test
jl
cmp
leave
jno
clc
sbb
outsl
stc
test
mov
insl
call
aaa
mov
dec
mov
cwtl
jb
push
ror
cmp
repnz
out
adc
out
cmp
sbb
inc
in
data16
aam
ss
cmp
sub
push
xlat
aaa
pop
test
sbb
cmp
outsb
out
sti
cli
out
cli
ret
bnd
roll
cmp
adc
sub
pop
imul
xlat
daa
stc
lret
aad
add
push
jbe
or
push
dec
xchg
xor
xchg
stos
inc
push
mov
aam
imul
push
dec
mov
test
sub
stc
int3
mov
inc
int
jae
cmp
xchg
push
adcl
dec
imul
dec
push
jae
jns
cmc
mov
xchg
cmp
mov
icebp
xor
outsl
test
jg
mov
push
xchg
lods
sub
call
push
test
fnstcw
push
mov
fwait
rcrl
lea
repnz
cmpl
xor
testb
dec
mov
jmp
insl
cmpsb
in
and
int
roll
xchg
cmp
mov
sub
add
adc
xor
adc
dec
jo
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
