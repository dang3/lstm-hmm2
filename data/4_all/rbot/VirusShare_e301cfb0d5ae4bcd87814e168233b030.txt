add
std
mov
push
mov
push
pop
cmp
pop
rcrl
scas
mov
mov
cltd
outsl
dec
xchg
int3
test
movsb
jecxz
inc
ror
push
addb
mov
cmc
fnstenv
mov
dec
imul
stos
dec
xchg
shrb
adc
sub
std
sti
jmp
aam
rorl
jmp
pop
aam
adc
lea
jbe
mov
jmp
cmpsl
mov
sub
cwtl
cld
lock
push
jo
test
lock
ret
sti
push
sti
test
pusha
rcll
adc
gs
push
cs
cld
sub
mov
loop
pushl
adc
cmp
cmp
fs
sbbl
xor
fmul
mov
push
aaa
icebp
iret
testl
xor
enter
shrl
xor
push
lea
aas
jb
mov
inc
outsl
leave
jne
sbb
inc
or
rcrb
loopne
cmp
sub
fs
sbb
cli
out
loop
or
inc
mov
idivl
out
negl
xchg
cwtl
dec
adc
enter
cmp
pushf
mov
gs
push
lods
mov
stos
outsl
xor
sarb
dec
scas
xor
jl
push
push
negl
out
js
mov
mov
sub
pop
cmp
lcall
popf
cmp
movsl
pop
xchg
gs
scas
popa
jg
mov
aaa
enter
jge
dec
add
cmp
xchg
sbbl
add
ljmp
jp
rolb
call
cmpb
mov
aad
pop
cmp
sub
sbb
and
cli
jbe,pn
popa
xchg
mov
sti
insl
jl
icebp
dec
or
mov
enter
jl
jmp
lods
mov
sahf
cmp
stos
cs
jp
add
inc
push
sub
jmp
stos
ljmp
lret
mov
xor
imul
sbb
cmp
push
fcoms
dec
pop
mov
jecxz
std
adc
scas
mov
sarb
bound
mov
push
add
scas
pop
jo
xchg
jne
jg
pusha
dec
jl
mov
lds
xor
jae
mov
dec
xlat
jge
sub
sub
dec
pop
mov
dec
or
call
sbb
pop
cmp
jge
in
test
push
in
or
pop
cmp
inc
jbe
sub
in
repz
ret
inc
xlat
negl
mov
push
and
mov
adc
sbb
xor
push
adc
pcmpgtb
jl
cs
mov
mov
inc
mov
scas
fimuls
adc
jae
inc
adc
or
loop
sbb
sbb
mov
mov
lcall
iret
mov
lock
stos
or
mov
xchg
inc
ret
mov
and
bound
mov
repz
cmp
or
cld
in
jbe
dec
xor
cld
repz
xor
fwait
xchg
in
mov
pop
movsb
xchg
test
sbb
pop
dec
in
and
out
lods
leave
push
cli
std
xchg
push
neg
test
jg
xchg
mov
std
notl
sub
es
fdivl
stc
mov
flds
mov
les
insb
ljmp
or
pop
loope
push
xchg
xchg
jb
pop
notl
mov
mov
decb
and
cmpsb
in
push
dec
hlt
dec
ja
in
xorl
mov
lock
outsb
sub
and
sub
rep
mov
sbb
dec
test
cmp
pop
sub
sub
popa
cmp
movsl
jb
imul
int3
adc
js
add
lods
or
and
test
xor
aam
pop
repnz
insb
hlt
in
jp
adc
cwtl
gs
inc
or
jge
xchg
adc
and
ffree
popa
xor
jge
add
sbb
mov
lock
push
ret
pusha
adc
pop
cmp
mov
js
mov
aad
aas
xor
push
sub
push
jbe
out
int
jbe
mov
adc
add
add
sub
mov
cmp
aas
in
sar
les
sbb
xor
notl
lock
add
pop
or
shrb
das
mov
xor
xchg
cwtl
inc
rcrl
mov
repz
jecxz
jl
shrb
popf
mov
loopne
and
movnti
xor
imul
or
add
roll
or
push
inc
mov
cmpb
mov
gs
pop
negl
xchg
aaa
int
shrb
scas
aam
cmp
sbb
mov
fsubrl
outsb
or
inc
dec
jae
imul
daa
mov
scas
inc
adc
mov
jne
push
push
dec
mov
jne,pt
push
fistpll
rorl
in
fcoms
int
or
mov
jp
jge
clc
call
or
and
iret
pop
dec
push
rcr
xchg
xor
hlt
jb
mov
xchg
jo
pop
cwtl
jecxz
out
sub
fldt
mov
andl
pop
add
cmc
jo
lods
sub
in
cmp
xor
ljmp
cmpsl
dec
out
cltd
sbb
in
call
and
lret
sub
cmp
shl
or
push
cltd
jae
sbbl
adc
nop
sub
faddl
or
cmp
popf
imul
mov
lret
inc
xchg
lock
movsb
mov
add
jp
lcall
jmp
insb
adc
cmp
pop
mov
xchg
mov
es
or
or
out
push
xchg
cmp
jp
mov
mov
or
and
jl
insl
movsl
decb
hlt
fiaddl
sarb
mov
sub
negb
test
cwtl
rolb
xchg
rorb
xchg
xlat
add
add
negl
mov
outsb
jo
cmpsb
cmp
dec
sti
imul
ds
popf
stc
cmp
mov
cmpsb
call
call
jl
lods
stc
mov
push
push
inc
mov
sub
add
mov
and
ss
imul
movsb
daa
js
push
out
dec
sahf
xor
and
cmp
pop
into
adcl
push
mov
cmp
and
clc
fldenv
mov
lds
popf
sbb
faddl
cmpb
dec
jl
ret
es
out
adc
test
mov
mov
adc
add
sbb
pop
cmpsb
sbb
and
hlt
dec
int3
fidivl
or
addr16
rcrb
jne
xchg
xchg
sbb
xchg
xor
sub
movsb
adc
hlt
xchg
xor
fs
sarl
push
and
xor
std
adc
int3
insl
push
xor
mov
cmpsb
lea
dec
mov
das
loope
js
ds
fs
or
push
adc
fucomi
aas
adc
insl
push
test
sub
je
xor
sarb
inc
adc
xchg
es
push
shlb
add
sbb
pusha
and
cwtl
sub
dec
outsl
mov
fnstcw
hlt
pop
adc
je
loop
ret
push
in
push
mul
fdivrl
scas
push
sbb
mov
iret
push
adc
sbb
xchg
dec
inc
fiadds
jle
pop
mov
bound
adc
dec
sbb
pop
std
shlb
cli
inc
ret
add
test
push
leave
xor
xchg
cli
cmc
pop
arpl
dec
pusha
dec
dec
mov
pop
sti
pop
inc
ds
cmc
cmp
aam
lret
pop
and
fs
xchg
pop
push
pop
or
clc
cmp
ror
mov
std
inc
mov
pop
mov
shlb
repz
hlt
or
out
add
lods
add
cmp
pop
addr16
mov
sti
dec
pop
sub
fsts
jge
js
lds
adc
sbb
dec
mov
or
mov
loope
push
mov
sarl
test
mov
pop
nop
xchg
mov
nop
xor
xor
out
sti
jno
cmp
aad
mov
and
sub
movsb
mov
in
fcompl
idivl
xchg
int3
paddq
test
fidivs
cmp
xchg
add
or
inc
xchg
daa
inc
sub
pusha
ljmp
mov
sub
test
popf
pop
sbb
adc
in
pop
jge
and
jl
jg
push
mov
pop
or
ds
cld
pushf
push
add
flds
push
mov
fcompl
push
jnp
or
in
sahf
jo
imul
xchg
call
cmc
fldcw
mov
xchg
cld
xchg
cmpsl
xorb
jl
mov
push
push
repnz
mov
push
jne
rorb
aaa
mov
mov
cmp
jge
push
roll
or
inc
loopne
icebp
neg
clc
loop
sahf
aas
lahf
stos
push
cmpsb
out
pop
or
mov
inc
or
sub
fildll
or
xor
fadds
push
mov
pop
jecxz
adc
sub
push
imul
push
divl
add
ljmp
dec
mov
inc
test
fnstsw
js
mov
push
xchg
jne
into
add
mov
call
xchg
xor
xchg
inc
or
aad
scas
aad
sbb
mov
daa
mov
loop
add
adc
stos
mov
push
xchg
std
aas
add
jae
out
mov
and
cmp
push
pop
or
cmp
pop
pop
mov
xchg
repnz
inc
dec
movsb
xchg
cmpsb
loop
sub
xor
fimull
xchg
sbb
push
andb
lock
test
cmpb
pop
jae
push
int3
call
pop
stc
pop
mov
aaa
ror
jo
sub
xor
mov
outsb
push
push
or
dec
adc
int
pop
dec
clc
add
movsl
aas
cld
inc
test
movsb
rorl
sbb
mov
pop
push
aaa
lcall
popf
lret
xchg
xchg
mov
daa
dec
ljmp
mov
fimull
add
pop
cmp
je
int3
add
pop
push
call
test
inc
fsubrl
jmp
outsl
shrb
sub
xor
fcoml
dec
in
xchg
cmpsb
push
imul
mov
xor
shlb
stos
sbb
mov
mov
sbb
mov
scas
dec
scas
xchg
movsb
pop
xchg
test
in
loope
and
push
push
adc
ljmp
popf
push
inc
cltd
add
fimuls
lock
sbb
fildll
jmp
loope
arpl
jmp
cmp
inc
rep
mov
into
es
cmp
xor
insb
in
std
add
je
aas
inc
int
or
lret
and
inc
int
in
sti
movsb
cld
xchg
addb
inc
enter
loopne
loopne
add
add
inc
mov
dec
sub
adc
inc
mov
ja
pop
mov
push
mov
loopne
cmpsl
imul
mov
div
imul
ja
fldl
sub
gs
call
outsl
adc
aad
test
xor
and
push
mov
cmp
mov
repz
std
sbb
sahf
push
push
mov
lock
cmp
jge
jge
ret
adc
aaa
pop
ss
insb
cs
pop
push
adc
adc
aam
mov
cmc
sti
lcall
dec
sar
and
inc
push
sbb
cmp
daa
jg
or
fs
dec
push
adc
and
mov
xlat
arpl
sbb
pushf
pop
aaa
negb
mov
bound
mov
out
push
jbe
adc
lds
add
xor
dec
mov
popa
test
or
dec
mov
mulb
cmp
pop
ficoms
std
outsl
sbb
jmp
out
sub
jns
fdivr
inc
mov
pop
rclb
dec
push
cwtl
enter
sub
je
xchg
add
fistpll
cli
ss
xchg
jb
cmp
mov
pop
or
xchg
loopne
sbb
push
lea
cli
and
and
dec
fsubp
pop
sub
cmpsb
inc
push
lcall
pushf
adc
mov
out
stos
and
movsl
push
jo
mov
mov
dec
popf
cmp
pop
sbb
mov
and
pop
jecxz
mov
pusha
clc
sub
xchg
adc
jge
sub
jb
push
fs
incl
mov
xor
cwtl
test
sub
xor
and
mov
rcll
xor
add
insl
dec
jle
sti
insl
xor
mov
fldt
adc
and
aam
imul
push
outsl
jnp
inc
cltd
test
ds
sbb
mov
jno
fildl
cld
cmpsl
repz
cmp
cmp
sbb
pop
adc
push
mov
test
sbb
push
enter
xchg
push
js
push
push
ret
mov
push
inc
mov
jg
add
push
mov
mull
cltd
mov
jnp
lock
lods
adc
ja
and
sarl
pop
nop
pop
lods
xchg
cmpsl
leave
lods
test
mov
outsb
mov
cmp
in
and
imul
push
add
and
aad
shll
xchg
out
out
xor
add
test
jmp
mov
sbb
mov
std
sbb
add
xor
jecxz
lahf
cs
and
arpl
repnz
fdiv
outsl
leave
jo
jno
push
jne
push
dec
in
cli
jno
test
in
adc
lcall
sub
sarb
xchg
fimuls
fsubr
lods
inc
call
sub
inc
shl
in
loopne
cmp
mov
xchg
aas
test
push
repz
js
cmp
add
lcall
add
daa
fimuls
rcll
shrl
jo
mov
jl
dec
xchg
fildll
and
rol
lahf
sbb
push
push
mov
mov
sbb
push
xchg
inc
outsb
lods
jb
dec
scas
adc
and
mov
scas
xchg
sub
jge
insb
leave
daa
jmp
cli
xchg
fmulp
mov
pop
in
jbe
jno
mov
mov
shll
popa
cmp
cmp
jecxz
jno
int
out
add
in
pop
outsb
push
fwait
clc
and
test
test
inc
sahf
push
add
and
dec
faddl
sbb
sub
arpl
mov
nop
notb
add
inc
dec
aas
insb
fcmovb
jp
inc
int
mov
mov
ja
dec
xchg
sub
outsl
lahf
xchg
and
shll
jle
jne
sub
jno
scas
dec
sti
fadd
jbe
pop
sbb
test
insb
cltd
or
inc
push
mov
ret
in
sub
pop
mov
inc
inc
imul
fbld
adc
test
push
mov
mov
sbb
dec
fimuls
cmp
outsb
cmp
test
jns
shrb
lds
push
xchg
mov
xor
jle
sbb
adc
into
sub
inc
scas
mov
cmp
sub
dec
xchg
rolb
les
fisubrs
movsb
push
fsubrs
scas
jmp
mov
test
stc
data16
shlb
iret
fs
lahf
jge
lds
ds
andb
popf
shll
in
jl
outsb
sbb
lock
adc
movsb
sbb
sub
pop
jecxz
lods
mov
fsubrs
xchg
jge
insl
mov
lods
inc
fadds
sbb
push
jae
je
jb
mov
and
mov
cmp
rolb
ja
or
sub
daa
loop
cmp
sbb
in
pop
rcr
dec
incb
dec
jnp
cwtl
add
mov
jns
mov
and
fisttps
cmp
mov
sub
fmulp
lcall
cmc
test
addr16
popa
adc
imul
mov
jmp
out
jbe
cs
test
pop
xor
sub
mov
xchg
pop
mov
gs
cwtl
scas
shr
inc
cmp
dec
mov
aad
aam
loopne
xor
add
dec
ret
mov
pop
push
jge
inc
mov
sbb
mov
cmp
xor
dec
lahf
rcrl
sbb
and
add
fcmovnb
call
and
outsb
mov
shrb
dec
push
sub
lock
mov
jae
mov
sub
popf
pop
mov
mov
in
sub
les
popf
shll
bound
sbb
dec
scas
cmpl
jp
mov
in
mov
xchg
mov
inc
clc
mov
icebp
fwait
daa
add
inc
sub
ret
inc
imul
and
add
out
dec
mov
or
inc
sub
out
push
stos
es
pushf
mov
xchg
test
pusha
pushl
mov
xchg
xchg
ror
loope
lret
data16
push
cmovge
mov
fs
imul
pop
popa
hlt
test
jmp
push
popa
shlb
jbe
and
fildl
mov
scas
lea
and
out
ret
scas
cmp
popl
jae
movsb
das
cmpsb
mov
cmc
ljmp
sbb
inc
dec
in
lods
dec
xor
jbe
adc
xor
jl
push
pop
mov
lock
lret
add
decb
dec
cli
int3
add
push
jp
pop
cmp
shlb
mov
add
adc
sub
sbb
jecxz
pop
mov
xchg
ss
aam
mov
fdiv
dec
cmp
mov
mov
sbb
bound
lock
push
xchg
loope
jmp
pop
mov
jecxz
fidivrl
pop
in
pop
enter
sbb
mov
add
stc
test
shlb
xchg
mov
push
test
pop
mov
xchg
fidivs
jne
mov
lock
cli
or
out
pop
in
push
test
cmp
roll
cmpsb
ljmp
addr16
or
cmp
loop
cwtl
adc
rorl
outsb
lods
lret
mov
cmp
mov
mov
in
andb
fwait
cmpsb
cmp
fcompl
adc
mov
push
mov
es
cs
pop
adc
lock
mov
add
jg
xchg
mov
xchg
jno
push
adc
jmp
aaa
popl
movswl
rcr
mov
loop
adc
cmc
jns
scas
mov
dec
ror
cmp
imul
jns
dec
xor
dec
test
cwtl
inc
xchg
cmpsb
pop
lret
sbb
cs
sar
push
push
or
xchg
mov
outsb
rcrb
fcompl
sbb
repnz
daa
enter
sarl
out
cmc
mov
ret
push
inc
rcll
mov
pop
push
cld
cmp
loopne
and
rclb
rcl
scas
cwtl
push
in
ljmpw
movsb
xor
sbb
icebp
rolb
leave
xchg
mov
gs
popf
xor
lock
jnp
pop
jp
cld
add
and
mov
or
loope
ljmp
lea
jbe
xor
lods
cvtdq2ps
and
fbstp
pop
mov
outsl
jb
and
sub
cmp
mov
mov
pop
and
in
rclb
mov
in
dec
pop
or
clc
dec
push
clc
and
aas
mov
cli
mull
mov
mov
dec
cmpsl
mov
mov
inc
repnz
dec
fiadds
push
iret
ljmp
fsubp
push
add
hlt
push
out
sub
loopne
xor
mov
push
xor
lods
lret
lret
sub
adcl
push
inc
pop
xor
or
mov
inc
fwait
adc
mov
or
or
div
mov
or
das
inc
dec
add
fsts
adc
std
xor
xchg
dec
mov
in
lret
mov
or
hlt
sti
imul
jbe
testl
xor
jge
push
lds
cmp
mov
hlt
xor
mov
or
xor
test
adc
add
jnp
or
cmp
cmpsl
ja
mov
add
sub
icebp
in
dec
xor
inc
out
cmp
cmpsb
push
push
add
jmp
cmp
ret
mov
xor
pop
sbb
repnz
xchg
and
xchg
sub
call
push
mov
lahf
movl
push
fcompl
lret
mov
addr16
lods
mov
mov
cs
sub
or
sbb
push
xor
jnp
jb
stc
leave
xchg
out
adcl
sub
lods
lea
or
mov
inc
add
inc
test
mov
in
shll
or
mov
repz
mov
xchg
in
or
scas
mov
sbb
and
and
les
sbb
or
mov
jecxz
imul
inc
cmp
adc
aam
cmp
xor
or
or
jmp
roll
jne
push
test
add
push
icebp
loopne
jo
ljmp
mov
sbb
xchg
mov
xor
adcl
jge
push
shll
sbb
out
or
jns
push
mov
pop
daa
jp
or
push
sub
imul
and
add
inc
les
popf
add
insl
xor
add
dec
jb
rol
scas
iret
push
sub
adc
incb
outsl
icebp
loopne
push
xchg
lcall
sbbl
fbstp
loop
mov
add
dec
loopne
loope
sarl
out
mov
insb
mov
push
push
xchg
jnp
cmp
sbb
cmc
jg
add
shll
lret
dec
repz
data16
inc
cmp
mov
xchg
inc
testb
cmp
xchg
gs
sub
adc
mov
mov
stc
lods
mov
lea
stc
outsl
lcall
lret
dec
pop
out
push
mov
jae
push
sbb
pop
movsb
nop
mov
cmp
xlat
or
outsl
mov
aam
sub
sbb
ret
cmpsb
xchg
adc
das
sub
or
es
adc
sub
inc
mov
xchg
mov
test
or
cmpb
mov
std
add
cmp
add
adcl
decl
mov
test
repz
sbb
cli
das
add
add
addr16
fists
rorl
es
pop
stos
repnz
aaa
gs
lods
pop
into
shr
stc
mov
dec
mov
push
repz
dec
add
add
cld
xchg
xchg
mov
xor
in
inc
ret
loope
pop
sub
call
cwtl
cwtl
pushf
addr16
fwait
repz
pop
mov
cwtl
jb
aaa
jb
lods
into
mov
push
sbb
inc
into
imul
xchg
cmp
dec
or
shlb
push
xchg
mov
pop
mull
bound
cli
jge
xchg
mov
mov
pushf
loopne
fisttpl
movsl
pop
add
hlt
sbb
mov
je
adc
jo
mov
xorl
stos
dec
lods
in
mov
jno
mov
xor
pop
jp
xor
mov
pop
lea
cmc
imul
aad
js
jnp
inc
jl
sub
cs
jne
push
add
xor
data16
rcrb
adc
and
xlat
mov
xor
cwtl
sub
push
cpuid
adc
dec
ss
ja
adc
cltd
addl
scas
lahf
dec
mov
jmp
cmp
stc
jbe
mov
jnp
adc
in
and
cltd
aaa
cmc
push
testb
mov
inc
std
repnz
dec
sbb
push
ficomps
mov
and
jle
jnp
ss
fdivrl
rorb
or
cli
stc
scas
and
addr16
sub
xchg
xchg
adc
lds
inc
loopne
std
jo
and
cvttps2pi
xchg
aad
mov
cmp
jle
mov
inc
aam
push
jmp
jae
adc
ja
or
sbbl
jmp
out
sarl
adc
pop
inc
or
stos
sbb
adc
push
push
ret
dec
inc
or
scas
insl
mov
loopne
dec
dec
out
das
sbb
jb
mov
add
adc
orl
jbe
and
pop
and
xor
add
adcl
bound
xchg
lret
jle
xchg
test
cmp
inc
sbb
sar
xor
rcrb
push
cmp
nop
xor
mov
dec
sub
test
and
cmp
xlat
pushf
hlt
fidivrl
fs
sbb
sub
inc
fnstcw
xor
add
and
pusha
mov
ds
in
push
sti
insb
in
loope
scas
dec
bound
aam
jno
ja
mov
and
repnz
cli
les
dec
jecxz
sub
dec
ja
adc
dec
aas
push
push
fadds
xchg
jmp
cmp
pop
sbb
call
mov
xchg
push
sub
inc
scas
adc
add
je
popf
sub
movsl
popf
sbb
pushl
hlt
lock
fistps
xor
loopne
gs
popl
test
mov
das
dec
jl
jecxz
inc
adc
jl
dec
mov
in
in
fwait
sahf
icebp
jecxz
jmp
or
cmp
dec
sbb
mov
aad
mov
popf
add
xchg
inc
dec
mov
push
xlat
sub
loope
push
outsl
scas
sub
nop
shrl
popf
enter
sti
fwait
sub
mov
mov
dec
mov
lea
sbbb
aas
inc
xchg
mov
insb
mov
mov
adc
sub
adc
inc
inc
leave
adc
scas
scas
arpl
jecxz
enter
ficoms
cmp
je
ja
sar
hlt
imull
jmp
jp
lahf
ret
outsl
mull
xor
sub
pusha
add
jge
repz
sbb
sti
pop
add
in
or
add
add
push
stc
andl
jbe
sub
push
dec
lcall
adc
fsubrs
mov
hlt
aam
cmp
cmp
pusha
add
adc
js
fwait
adc
or
or
mov
pop
ret
add
mov
mov
jp
cmpsb
stos
loopne
js
out
pop
loope
sbbl
daa
pop
and
int3
jne
test
fcomps
lods
test
iret
mov
add
mov
xlat
push
push
adc
testl
andb
jno
cld
int
jmp
insb
enter
out
push
adc
jo
or
jae
les
mov
and
pop
shlb
inc
and
mov
rorl
mov
jne
sub
pop
add
dec
xor
xlat
push
addl
push
xor
mov
rolb
xchg
cltd
add
mov
dec
or
clc
dec
es
jge
jp
in
mov
xchg
fdivs
mov
fcmovbe
addr16
notb
xchg
gs
cmp
and
mov
scas
and
mov
inc
mov
pop
xor
je
decl
mov
and
stos
fneni(8087
ffreep
out
mov
dec
jo
orb
xchg
sbb
lods
fwait
xor
push
or
out
mov
push
scas
and
into
rol
mov
lods
push
loop
nop
and
cmpsl
xor
pop
insl
xor
in
daa
sbb
pop
scas
cltd
jle
fsubrs
stos
sub
lret
ljmp
mov
bound
xchg
cmp
xchg
test
addr16
pop
cmpsb
imul
aaa
je
xchg
push
push
dec
cli
movb
inc
movsl
or
shlb
gs
sbb
cmp
sub
cmp
clc
imul
dec
dec
call
xchg
jne
mov
enter
jle
lds
sbbl
pop
ret
clc
and
cltd
roll
dec
sub
cmp
pop
push
je
mov
clc
add
clc
je
fadd
test
push
stos
sahf
loopne
sub
loope
and
xchg
mov
inc
fldcw
imul
cmp
in
xor
push
mov
stos
lea
mov
add
shrl
push
out
rorl
outsb
out
int3
and
aaa
mov
xor
repnz
dec
stc
xchg
lea
dec
mov
add
cmp
out
mov
mov
gs
sahf
rcll
cmc
mov
dec
stos
pop
jmp
popf
or
lret
pusha
pop
mov
xor
lret
addr16
push
xor
adc
lahf
ja
mov
pusha
ljmp
or
aaa
mov
lcall
shll
stos
adc
ja
push
mov
xchg
mulb
inc
cld
pop
jp
sbb
xchg
sub
ret
jnp
push
mov
adc
dec
mov
sub
das
add
popf
mov
lea
testl
cmp
mov
ja
lock
adc
cltd
xor
pushf
jno
dec
jns
pop
sbb
dec
lds
cmp
push
and
mov
shll
adc
fnstcw
or
shl
les
scas
sub
or
adc
sbb
dec
outsl
negl
dec
xor
push
jo
rcrb
jmp
movsb
inc
inc
arpl
scas
sbb
cmc
pusha
cmp
mov
std
push
hlt
or
sbb
cmc
dec
sub
pop
and
mov
sub
sub
add
shr
push
xchg
stos
out
xchg
fsubrs
mov
push
jmp
push
and
movb
cwtl
mov
movsl
in
mov
stos
test
adc
in
inc
cmp
outsl
js
mov
out
mov
adc
cmp
repz
test
inc
jp
inc
push
add
rcr
iret
test
out
rorl
filds
or
cmc
test
sbb
adc
into
das
or
add
sub
je
call
xchg
jne
iret
stos
mov
cmp
cmp
lcall
add
push
iret
add
sub
jo
mov
sbbl
es
mov
jp
test
inc
jb
jbe
incb
push
es
sub
jae
fisttps
enter
dec
lahf
add
cmp
mov
stos
xchg
jmp
or
fisttps
dec
arpl
cmp
sbb
push
pushf
sub
add
call
lods
out
xchg
mov
out
and
insl
fsubrs
insb
addb
nop
bound
xchg
sti
inc
dec
adc
addr16
sbb
push
mov
xor
shlb
popf
dec
cs
shlb
fcmovb
ljmp
dec
ds
ss
inc
insl
mov
imul
bound
xchg
scas
clc
rcrb
mov
push
ret
xor
int
xor
testb
add
cmpsl
lods
mov
mov
out
pop
xorb
jp
mov
loopne
jge
adc
dec
out
adc
sub
negb
mov
rclb
xor
jo
ret
in
dec
mov
inc
test
pushf
mov
inc
into
dec
mov
shl
cmp
or
mov
fdivrl
add
outsb
stos
arpl
test
sub
push
call
mov
or
stos
lds
mov
cmp
push
jle
pushf
lock
repnz
int3
jbe
or
fildll
xchg
in
sub
and
das
dec
cmp
sub
push
icebp
icebp
lret
dec
popa
or
jge
sbb
sub
fwait
or
jno
push
add
xor
lahf
adc
mov
or
push
pop
or
jle
mov
daa
loopne
repnz
pop
in
inc
fstp
jecxz
ss
fadds
jb
fistpll
adc
pushf
and
jl
fimull
incl
inc
mov
loop
jl
lret
sub
sub
mov
mov
arpl
or
fwait
pop
sahf
loop
inc
xchg
push
adcb
clc
mov
adc
dec
add
mov
sarb
xor
insl
cmp
jl
mov
fcompl
pop
mov
imul
test
inc
cld
lock
add
mov
in
pushf
std
adc
lods
sub
push
inc
sbb
inc
mov
jge
inc
and
mov
push
mov
mov
daa
cmpsl
pusha
push
lds
pop
sti
lret
out
repz
pop
insb
rcrl
out
push
test
lahf
js
int
cmp
cmp
jp
lret
mov
sbb
test
sub
dec
mov
sbb
bswap
xchg
cmp
jg
lret
popa
mov
xchg
mov
repnz
sahf
gs
jbe
pop
jo,pn
mov
icebp
sub
inc
hlt
in
cltd
push
or
out
movsl
insb
shll
outsl
inc
push
fldz
cmp
movsl
imul
test
dec
icebp
jmp
mov
ds
xchg
stos
add
loop
jb
mov
fisttps
add
pop
dec
jge
outsl
and
inc
xchg
dec
scas
jns
jmp
movsb
scas
cwtl
inc
sbb
dec
or
add
dec
inc
ss
shlb
jns
and
add
shll
or
into
and
inc
in
or
dec
xchg
add
fmuls
pop
aad
mov
sub
jns
mov
xor
dec
xchg
fsubrl
outsb
loopne
testb
inc
pop
ficompl
dec
daa
push
daa
rcl
mov
dec
test
sahf
outsb
rcrl
sarb
insl
pusha
sbb
int
ja
cmp
inc
pop
in
mov
jne
ss
es
cmc
sub
add
push
pop
or
and
jno
in
xor
mov
mov
js,pn
xlat
mov
xor
jns
pop
inc
leave
add
cld
sti
std
movsl
cmpsb
popf
lahf
in
xchg
cmp
outsb
outsl
hlt
sub
popa
or
dec
sbb
jp
sub
xor
mov
les
pop
call
cmp
mov
into
push
shl
fcoms
outsl
fistpll
jmp
out
mov
adc
lds
lock
mov
cwtl
push
push
xchg
mov
cld
add
jmp
push
call
or
inc
bound
push
jae
dec
push
and
xchg
orb
xchg
push
mov
lods
mov
aad
seto
rol
push
loope
push
xchg
jecxz
decb
stos
cmp
fcompl
insb
push
div
outsl
cmp
lret
adc
roll
insl
sub
into
mov
jmp
add
fdiv
and
push
loopne
lods
pusha
add
insl
xlat
xor
out
lret
lea
adc
cmp
xchg
mov
popa
movsl
dec
test
xchg
into
nop
mov
mov
jno
pusha
jg
mov
jne
add
lahf
mov
jg
cs
and
aam
sbb
cmpb
jmp
cmc
mov
inc
push
xchg
or
pop
pop
jl
adc
scas
jae
mov
sub
scas
pop
xchg
mov
pusha
jmp
ds
xor
lcall
pop
mov
cmp
mov
cmp
inc
addr16
push
sbbl
push
pushf
gs
mov
fnstenv
xor
mov
sbb
add
std
inc
push
pop
loop
push
and
mov
push
cmc
mov
hlt
sbb
arpl
jae
pop
add
je
fmull
pushf
mov
faddl
inc
ljmp
mov
or
leave
push
sub
cli
hlt
sti
stc
dec
pop
lcall
repnz
cmp
out
push
and
xor
les
mov
je
pop
out
pop
int3
sub
cmpsl
adc
std
cmp
sbb
sbb
mov
jns
cmpsb
out
xorl
xor
pop
sub
dec
pop
orb
sbb
mov
sahf
cs
add
mov
xchg
cmp
add
repz
mov
shl
movsl
inc
fs
mov
push
mov
mov
jmp
test
or
mov
jle
fwait
mov
mov
adc
loope
dec
push
iret
fcomip
mov
int
sub
xchg
je
inc
push
jnp
dec
sbb
lods
pop
add
xor
movsb
mov
push
les
neg
dec
mov
jno
test
in
xor
loope
testb
add
xchg
sub
addr16
ds
sub
xor
mov
in
js
aas
lcall
inc
stos
mov
outsl
mov
cmpsl
repnz
mov
sti
into
adc
cmpb
in
popa
mov
mov
dec
pop
xor
mov
shl
sti
out
stos
add
jbe
ret
push
fisubs
js
clc
fcoml
mov
mov
xchg
dec
push
ficompl
or
sbb
imul
sarl
xchg
orl
xchg
pushf
add
inc
fisubrl
pop
adc
mov
dec
rolb
pop
and
inc
cwtl
rolb
mov
add
inc
adc
sbb
in
mov
fldz
hlt
jb
add
adc
xchg
mov
rorb
xchg
imul
sbb
mov
fs
ret
dec
out
movsl
loopne
test
pop
shll
mov
lock
loopne
xlat
es
push
mov
loope
inc
xchg
sbb
outsb
push
ds
subb
test
jg
loop
mov
sbb
ja
rolb
mov
cmp
ret
pop
jns
out
xchg
fisubrs
mov
rcrl
mov
popa
sbb
push
dec
iret
mov
sbb
incl
pop
into
xchg
and
pop
mov
jbe
rcl
sbb
mov
out
adc
mov
xchg
dec
mov
ss
xor
and
flds
mov
out
pop
ljmp
idiv
xor
xchg
jns
xchg
clc
call
jo
dec
pop
int3
xchg
pop
mov
pop
out
xor
scas
add
push
out
pusha
jge
mov
xchg
mov
or
das
in
jg
jno
in
sbb
add
cmp
or
sahf
icebp
xchg
cmpsb
or
clc
xor
lret
add
pop
in
aad
mov
add
test
or
rcll
jbe
loope
test
jp
test
jae
xchg
insl
arpl
pop
outsl
xor
shl
mov
cmp
adc
push
call
ss
mov
iret
pop
jle
sbb
mov
jbe
mov
sub
fidivrs
sti
jg
add
test
xchg
cs
push
or
jns
pusha
dec
xor
sbb
out
pop
mov
mov
js
addl
std
mov
test
adc
divl
or
sbb
rol
or
xlat
and
sti
push
jo
test
jecxz
ja
stos
jp
in
shrl
iret
or
mov
repz
stc
jg
cmp
xor
cltd
mov
lret
cltd
lret
xchg
add
nop
loopne
rorl
aam
daa
aaa
pop
dec
dec
in
pop
ja
test
pop
das
or
imul
mov
and
or
bnd
dec
pop
jg
js
sbb
stos
test
xchg
push
jae
ja
test
and
insl
mov
inc
mov
inc
jecxz
sub
adc
movsb
dec
sbbb
sub
orb
mov
movups
iret
sub
inc
int
fs
mov
cmp
adc
mov
xorl
sbb
adc
mov
jg
les
dec
push
xchg
ja
in
push
je
arpl
jg
add
push
loop
add
dec
cwtl
cmp
and
jnp
cmpl
lds
jns
jb
mov
fisubl
lea
cld
and
hlt
mov
inc
mov
mov
jp
shlb
add
jne
xlat
xor
pop
std
inc
fdivrl
pop
pop
popf
xchg
adc
outsb
cmp
xlat
test
jecxz
pop
pop
dec
inc
lret
mov
jle
xchg
lcall
aam
add
sub
mov
scas
movsl
mov
idivl
out
test
xor
push
pop
or
pop
and
inc
clc
out
jl
pushf
lods
push
pop
imul
out
pop
sbb
out
lahf
push
xor
in
sti
leave
jno
mov
aaa
ja
movb
mov
cmc
mov
in
add
js
mov
dec
lock
rcll
pusha
pop
orl
in
jb
daa
popf
sbb
mov
cs
lcall
mov
ljmp
jp
jbe
lock
dec
sbb
and
adc
and
js
mov
xchg
lcall
or
pusha
mov
sub
pop
push
push
xchg
sbb
shlb
leave
sub
pop
in
push
scas
sub
xchg
icebp
push
cmpsl
inc
sub
pop
mov
jno
cwtl
xlat
dec
xor
and
mov
nop
mov
in
xor
les
mov
cmp
arpl
fstl
sbb
xchg
lods
push
movsl
push
jecxz
mov
push
sbb
shrl
sbb
in
test
pop
adc
fwait
out
mov
ja
popa
cmp
jnp
mov
cmp
cmp
jecxz
pop
es
out
sbb
ja
inc
iret
mov
mov
mov
cmp
int
adc
jmp
int3
inc
sub
xor
jp
xchg
in
mov
jecxz
push
or
xchg
xchg
pop
into
pop
cmpsl
sbb
jbe
sub
loopne
jns
sbb
adcl
jae
fcoms
pop
pop
test
fsubrp
inc
movb
scas
in
and
into
scas
mov
jnp
inc
sbb
mov
mov
dec
aam
dec
or
push
push
mull
int3
jae
xchg
xlat
cld
mov
inc
call
out
cmp
out
sahf
aad
jae
xchg
push
xchg
call
dec
pop
lcall
add
lods
pop
pop
lcall
lret
hlt
xor
enter
lods
cmpsl
mov
xchg
and
subl
bound
divl
sub
xor
jmp
jo
mov
mov
pop
xlat
cmpsb
dec
mov
ds
push
hlt
and
or
mov
mov
cmc
jae
lock
popl
jnp
sahf
push
loop
jecxz
std
neg
mov
ret
pushf
dec
jo
xchg
test
lods
adc
test
mov
movsb
cltd
fstpl
jecxz
xchg
in
pop
or
pop
popf
fildl
jae
adc
call
in
jle
lcall
jnp
mov
xchg
insl
fstpl
mov
repnz
mov
mov
aaa
sbb
xlat
jecxz
pop
out
mov
mov
jo
dec
hlt
push
lcall
aam
repnz
scas
sub
xor
movsl
lcall
sub
pop
insl
mov
rol
aam
shl
pop
mov
shl
xchg
sub
push
jg
rorb
pop
sbb
jl
xor
cmp
mov
mov
repnz
es
call
popf
push
scas
ficoml
fmull
hlt
popf
std
pushf
enter
in
repnz
jno
enter
dec
add
and
out
cmp
clc
mov
adc
add
xchg
xchg
dec
jo
jle
pop
ficoml
adc
cmp
roll
nop
subb
pop
movsl
movsb
leave
in
cmpsb
inc
dec
mov
jae
add
xlat
jnp
in
mov
jge
nop
mov
mov
inc
or
aad
sbb
in
jae
fsubrs
scas
rdpmc
int3
lock
mov
inc
std
jno
mov
xor
daa
mov
push
push
test
lahf
iret
xlat
cltd
push
xchg
mov
and
cmp
or
lds
xchg
test
ret
aaa
lea
cld
pop
and
orl
outsl
in
dec
lods
lret
sub
ret
cmp
mov
cmpsb
sbb
xor
jecxz
xor
mov
mov
xchg
pop
jae
sbb
mov
cmp
pop
mov
pop
xchg
mov
xchg
lods
movsb
xchg
and
add
test
movsl
cmp
sub
scas
movswl
fadds
popa
and
and
pop
in
push
mov
test
and
sarl
js
mov
push
add
mov
shl
fucomp
xchg
cmp
out
mov
and
cld
cs
mov
mov
jbe
push
aaa
sbb
mov
das
and
enter
out
ds
mov
movsb
dec
test
xchg
sbb
test
dec
sub
mov
inc
push
mov
or
add
cwtl
mov
andl
imul
sub
push
add
mov
enter
cmp
cmpl
popa
adc
outsl
pop
cmp
int3
ret
and
out
test
xchg
push
push
jns
cmpb
movsl
xchg
es
movl
jge
clc
std
or
ret
aas
and
jmp
push
sbb
mov
cli
daa
jle
pusha
shrb
in
jns
imul
dec
cld
stc
ds
jmp
push
jns
sub
cld
fists
xor
lahf
mov
jl
sbb
fnstsw
jge
mov
jecxz
mov
sbb
add
jge
mov
mov
inc
out
sbb
cld
negl
and
es
int
iretw
dec
push
fstl
arpl
mov
add
andl
xor
arpl
lods
jg
add
stos
inc
ja
hlt
out
cmpsb
scas
addr16
aam
and
cwtl
loop
insl
shl
ret
sub
pop
test
pop
fsincos
or
inc
sti
inc
addr16
sahf
xchg
xorl
stos
lret
push
pop
int3
jg
or
and
xchg
pop
lods
lock
cli
shlb
xchg
dec
sbb
sbb
clc
jno
in
aad
mov
rcll
out
push
inc
sub
mov
std
mov
push
sub
ret
je
mov
test
out
jne
mov
adc
mov
xor
adc
push
repz
jns
push
push
dec
loope
cmpsl
stos
clc
or
sbb
cs
sbb
mov
jecxz
fisttpl
sbb
fstp
pop
or
rclb
or
insl
ret
push
rorl
push
cmp
bnd
push
inc
inc
stos
sub
xchg
ja
dec
jns
add
jno
jae
popf
loop
in
or
dec
sti
mov
lret
mov
adc
and
mov
or
inc
dec
mov
clc
jle
adc
push
cs
mov
push
icebp
loope
sbb
lea
cmp
lret
cmp
mov
xchg
sar
mov
les
sbb
faddl
xchg
cmpsb
das
sbb
jge
shr
sbb
push
xlat
fnstsw
push
mov
jae
mov
ss
lea
push
lcall
test
rcll
insl
mov
xchg
fcmovne
adc
pop
inc
test
push
xchg
or
mov
mov
adcl
gs
mov
mov
jecxz
adc
jnp
or
divl
js
fisttpl
xchg
xor
mov
lret
xor
hlt
mull
jg
repz
xor
push
and
adc
cmc
dec
jae
cmp
adc
mov
movsb
dec
pushf
jg
lea
mov
adc
push
loopne
flds
fdivrl
inc
mov
push
mov
negl
mov
mov
jo
sahf
mov
enter
sub
adc
inc
test
pop
xchg
sbb
or
bound
sub
push
push
mov
cwtl
push
ret
sub
push
inc
jae
aas
push
js
popa
adc
or
push
call
cmp
imul
and
sbb
dec
popa
cmp
jae
ja
inc
xchg
pop
testl
push
dec
cmp
jg
cmp
repz
mov
cs
int
sbb
adc
shl
lods
inc
adc
test
rorl
sub
mov
imul
mov
mov
mov
mov
je
call
out
push
jl
and
push
dec
mov
inc
jecxz
call
ret
fmuls
push
or
ffree
mov
mov
and
dec
and
dec
mov
frstor
cwtl
adc
add
and
cmove
lods
fmul
fwait
out
shl
paddq
outsb
arpl
es
loopne
rcrl
lock
dec
and
es
popf
mov
pop
cmp
inc
ljmp
nop
xchg
inc
xchg
fwait
or
jbe
and
sbb
stc
dec
mov
rcrl
cmpsb
cs
test
push
adc
cmp
inc
push
movsb
mov
inc
jecxz
push
sub
aas
xchg
fwait
or
cmp
fadds
popa
pop
add
lea
jg
xorb
cwtl
fs
insb
lret
mov
mov
leave
mov
jno
inc
sub
jno
icebp
inc
sbb
cwtl
jl
mov
sti
jb
dec
or
add
repnz
adc
sub
test
jge
inc
add
xchg
shlb
cli
xor
loopne
xchg
pusha
ret
xor
rol
fwait
mov
mov
cmp
cli
and
jl
add
cmp
mov
sbb
push
mov
push
push
stc
lahf
inc
ljmp
test
mov
adc
cmp
mov
inc
ss
out
jo
jl
aam
inc
mov
xchg
pop
sti
fcmovu
adc
mov
cld
inc
test
push
loope
pop
lcall
lock
cltd
and
xchg
aam
adc
fisubs
out
mov
shll
int
fwait
jo
adc
pop
xchg
cmc
pop
adc
inc
int
in
loop
fcoml
pop
idivl
aas
test
sbb
aaa
lods
out
jo
push
mov
inc
pop
sbb
jmp
sbb
bound
out
ljmp
adc
dec
ret
loope
fistpl
test
into
and
and
sub
call
pop
push
sti
movsl
mov
pushf
mov
pushf
lock
outsb
in
aad
mov
inc
stos
mov
jl
dec
cmp
xchg
jmp
je
cmp
movsl
loope
sbb
es
arpl
enter
ljmp
and
lret
dec
rol
xchg
mov
mov
mov
loope
or
in
je
pop
add
cmp
andl
mov
add
pop
xchg
push
xor
inc
cld
add
mov
fwait
dec
movsb
jbe,pn
loope
jp
mov
pop
arpl
sti
jno
sub
dec
xor
test
or
inc
lods
add
pop
daa
push
push
sub
jns
jns
jno
mov
cwtl
cmp
pop
inc
out
stos
invd
jnp
push
xlat
insl
je
imul
scas
add
bound
mov
mov
andl
into
cs
int3
inc
or
xor
adc
repnz
push
cmp
xchg
mov
in
push
insl
push
sbb
lods
xor
loop
in
inc
jo
ret
pop
insb
ljmp
lret
pushf
pusha
xor
adc
stos
adc
push
mov
jo
or
mov
xchg
or
es
inc
imulb
push
cmp
icebp
sbb
repnz
jle
sbb
pop
test
aad
push
scas
popl
sub
push
dec
js
test
and
inc
jnp
or
cmpsb
jmp
jl
rolb
lahf
inc
lods
push
adc
mov
push
je
sub
imul
js
jmp
jno
jae
push
mov
insb
ljmp
pop
sbb
dec
mov
fsts
and
push
out
in
xchg
rorl
lret
mov
xchg
dec
enter
pop
cmp
loope
mov
fldl
gs
dec
shrb
ret
testb
jb
adc
repz
and
das
imul
jnp
addb
dec
pop
in
iret
imul
int3
dec
pusha
add
decb
outsl
xor
mov
cs
repnz
jg
xchg
or
pusha
sub
and
add
cmp
adc
clc
jb
jae
adc
add
insb
in
mov
mov
jb
dec
lods
xchg
mov
lea
loop
roll
adc
aad
cmc
inc
cmc
adc
test
xchg
adc
or
and
addb
test
inc
xchg
repnz
ljmp
loop
adc
loopne
loope
pop
lret
and
sbb
inc
adc
mov
out
pusha
lock
and
mov
xor
in
sbb
xor
popa
cli
gs
mov
ror
xchg
xchg
or
aaa
xor
int
dec
mov
sbb
mov
in
cwtl
mov
mov
js
jecxz
cmp
mov
cmp
testb
cwtl
bnd
std
push
rcrb
popf
pushf
mov
in
mov
nop
sub
mov
pushl
mov
in
lea
or
iret
mov
pushf
sbb
bound
jge
push
sti
mov
pop
aad
je
xchg
mov
mov
or
sub
fistl
es
rclb
inc
add
insl
xchg
ljmp
dec
pavgw
sbb
jecxz
sahf
movsb
lods
cmpsb
and
int3
pop
inc
loope
cmp
push
dec
mov
in
dec
insl
dec
rcll
mov
push
cmp
das
and
fdivl
cltd
mov
popf
outsb
mov
xchg
add
lds
test
mov
and
loopne
inc
test
outsb
xor
xchg
cmp
sub
negb
dec
lcall
and
pop
xchg
jle
pop
sub
pop
fisttpl
fisubrl
mov
cmpsb
lahf
push
xchg
push
call
adc
pop
inc
adc
ret
dec
xor
sbb
push
cwtl
movsl
adc
cmc
adc
inc
dec
dec
and
xor
and
lahf
push
in
push
test
sub
pop
mulb
ret
in
mov
pop
outsl
fdiv
add
xchg
xchg
xchg
pop
rcrb
aam
jecxz
mov
aas
fdivp
in
push
cmp
inc
mov
imull
outsl
stos
inc
popa
enter
je
mov
enter
and
mov
push
jge
dec
cmp
push
xchg
movsb
sarb
cmp
sbb
mov
mov
cmp
jno
mov
fcompl
cmp
shlb
stos
ret
mov
jle
ficomps
in
ds
xchg
dec
push
push
fwait
mov
or
jmp
mov
addr16
mov
pop
pop
cmpsb
dec
mov
adc
mov
or
js
or
repz
js
jl
in
xchg
dec
mov
repz
push
pop
es
pop
roll
mov
sti
mov
scas
sbb
mov
into
outsb
pop
or
mov
out
xchg
cmp
adc
mull
push
in
jp
and
push
and
pop
roll
loope
cmp
mov
mov
mov
ja
mov
and
rorl
xlat
sub
inc
jmp
lods
imul
and
dec
dec
sub
fmull
xchg
cmp
shll
xlat
xor
movsb
lds
cltd
icebp
sbb
xor
jno
shlb
mov
push
in
stos
mov
ret
inc
and
pop
movsb
push
les
jmp
pop
mov
cwtl
lods
loope
jns
mov
and
pop
das
fcomps
or
loopne
pop
or
sbb
xor
das
mov
nopl
push
sbb
xor
add
cmp
pop
lods
pop
loopne
add
int
pop
push
lret
xchg
mov
je
in
sub
inc
xchg
push
aam
sub
mov
gs
fisubrs
mov
loopne
pop
xor
jl
push
cmp
sub
and
cmp
adc
out
jo
pushf
call
dec
mov
leave
aam
out
and
jl
rol
dec
dec
not
adc
cmpsb
and
push
mov
cmp
ret
sub
pop
pop
mov
mov
aad
outsb
scas
mov
icebp
lea
mov
add
jo
ja
cmpsl
jne
mov
xor
int
outsb
mov
cltd
cmc
clc
add
out
inc
sahf
sub
std
inc
stc
shrl
mov
or
sbb
inc
xchg
mov
jl
fdivs
and
movsl
test
test
mov
call
cli
dec
mul
push
mov
pop
push
jle
stos
scas
adc
mov
testb
mov
sub
pop
and
add
cltd
push
ds
je
jl
cmc
notl
add
xchg
add
cmp
push
add
jbe
push
sbbb
add
inc
ret
xor
sar
jg
icebp
sbb
pop
jle
xor
in
xlat
sub
push
xor
sbb
sbb
movsl
cwtl
fwait
inc
push
mov
imul
cmovs
inc
addr16
in
dec
jns
inc
outsl
adc
out
leave
popf
mov
pop
lahf
jbe
ljmp
pop
mov
mov
and
cmp
mov
adc
aad
cmp
push
shrb
inc
shll
inc
inc
fdivs
fisttps
fdivr
ja
or
fidivs
pop
out
pop
xor
aas
mov
ret
dec
clc
out
lods
pop
cmp
mov
fwait
in
icebp
adc
mov
push
sub
mov
dec
idiv
pop
push
adcb
cmc
fdivs
sub
ja
daa
xchg
push
mov
scas
dec
lock
push
adc
cmp
lods
push
mov
in
je
outsb
lock
leave
inc
xchg
icebp
sbb
outsl
cmpsb
out
mov
insb
pop
outsb
hlt
scas
pop
sub
imul
sub
inc
fnstsw
cmp
push
push
push
ljmp
mov
sbb
mov
inc
leave
inc
pop
sbb
push
sbb
mov
mov
mov
mov
xor
jg
xchg
mov
fs
or
sub
call
push
inc
xchg
push
cmp
or
fsubs
and
xor
flds
cwtl
pop
fwait
push
call
mov
ja
mov
push
cmp
dec
cmp
int3
sti
jecxz
jb
cmp
xchg
arpl
lret
jns
dec
xchg
mov
cmp
addb
arpl
adc
push
inc
subb
inc
cwtl
dec
nop
mov
mov
movsb
mov
inc
and
movsb
inc
add
shrl
sbb
cli
sahf
jb
or
dec
and
imul
pusha
mov
test
ja
fidivrs
aaa
test
fcmovb
out
dec
rorl
cmpb
push
mov
js
repnz
pop
xor
and
syscall
fucom
nop
out
pop
dec
fcompl
xor
mov
cmp
and
cmc
les
jg
jne
inc
mov
addr16
ss
js
test
inc
cmp
nop
mov
sti
and
xchg
xor
stos
subb
mov
popa
idivb
fwait
pop
push
repz
push
xchg
lea
js
lock
cmp
jge
cmpsl
cmp
adc
adcb
sbb
fnstenv
fstl
pusha
je
push
cld
imul
sub
add
aas
lcall
repz
sti
cmp
xor
jnp
sbb
adc
cmp
ficompl
ret
or
mov
cmc
mov
std
sbb
adc
mov
mov
jnp
mov
loop
leave
sbb
sub
or
add
loopne
xchg
add
add
mov
push
cmp
fists
int3
xor
or
cmpsb
sbb
mov
sbb
mov
les
mov
cmp
mov
add
call
icebp
rorb
and
ret
pushf
dec
add
pop
sbb
sub
test
pop
xor
push
xchg
cmp
sub
lret
sub
push
mov
inc
mov
and
jmp
insl
ficompl
or
or
inc
adc
mov
dec
dec
adc
jle
inc
lret
cmp
mov
fbld
pop
in
and
hlt
push
pusha
adc
or
insb
clc
dec
fisttps
xchg
shrb
add
or
enter
iret
aad
fiadds
push
lcall
dec
xlat
call
pop
cwtl
and
lret
xchg
cmpsl
jle
pop
xor
xor
mov
cmpsb
mov
addr16
sub
cmp
or
aam
inc
add
push
arpl
dec
dec
jb
push
add
or
jle
inc
adc
mov
inc
outsb
gs
in
bound
scas
scas
mov
or
insb
insl
and
mov
lods
add
jb
stc
push
xchg
popa
test
sub
adc
xor
xchg
outsl
fs
jno
cmpsb
stc
popa
push
sbb
mov
adc
test
push
push
out
adc
subl
sbb
cltd
orl
cld
fldcw
xchg
sbb
cmp
les
scas
aam
inc
inc
push
push
ja
push
imull
sbb
jno
stos
cs
arpl
push
imul
xor
adc
mov
mov
pop
imul
pop
in
jo
push
sar
cmp
call
lea
movsl
or
mov
repz
pop
xlat
dec
pop
fdivl
mov
pcmpeqb
pop
cltd
lea
push
fdivl
sahf
shlb
pushf
cmp
dec
cmc
pop
shll
loope
fmul
and
std
push
into
mov
sub
jecxz
test
fwait
daa
xor
scas
xchg
rclb
push
jbe
nop
mov
in
jbe
xor
xchg
loopne
test
mov
ds
loop
outsl
xchg
xchg
lds
in
pop
push
dec
jmp
add
ror
add
fdivrs
test
and
push
adc
sub
stos
inc
ret
sub
imul
adc
test
out
jg
cmp
mov
out
sbb
fwait
push
fildl
or
and
loope
rolb
jno
fwait
rorl
push
addr16
add
dec
jmp
xchg
lods
inc
cmpsl
mov
pushf
jbe
fwait
jge
fisttpl
mov
or
push
cmpl
or
cmp
pop
mov
fcomps
js
rol
cmpl
lahf
enter
jge
lret
and
mov
xor
mov
ret
xor
or
sub
fnstsw
xchg
push
inc
sub
cli
repnz
sub
mov
std
sub
jp
sti
lods
xor
insb
test
fsubs
xchg
xor
shlb
aam
cmc
add
jle
ret
xor
jns
lds
repz
cmp
int
in
cmp
pop
push
xchg
cmp
xor
stos
jge
lods
sbb
js
mov
push
fwait
out
inc
jb
add
std
stc
aaa
stos
pop
cltd
mov
dec
mov
pusha
popa
frstor
call
je
sub
test
pop
out
in
and
jb
or
imul
xor
icebp
sbbb
shl
nop
je
orl
jle
add
pop
jle
es
cmp
inc
adc
call
jae
mov
xchg
jge
push
pop
sbb
sub
xchg
add
push
pop
adc
es
cmp
dec
pop
pop
or
out
pushf
inc
roll
outsl
push
push
repnz
add
add
pushf
sbb
ja
adc
ret
sbb
inc
cltd
xchg
pop
pushf
xchg
pop
stos
mov
push
fwait
ror
mov
push
add
cmpsl
into
scas
leave
mov
fadd
in
xchg
call
pop
adc
jae
daa
movsw
shrb
xor
mov
addb
fisubl
jo
jge
insl
cmp
push
jecxz
sub
adc
xchg
rcrl
add
jne
addr16
dec
mov
int
fstpt
jmp
sahf
mov
shlb
jle
pop
lahf
inc
inc
movsl
and
rclb
mov
rcr
pop
pop
cmc
and
movsl
outsl
mov
mov
mov
or
pushf
je
insb
loope
jp
nopl
mov
aam
lea
xchg
inc
xor
imul
testl
or
jne
pushf
xorl
push
mov
and
lret
je
nop
sub
shr
fwait
cmpsb
mov
in
or
adc
icebp
mov
xchg
lea
push
jg
fisubrs
test
pop
nop
jp
push
in
cmp
xchg
mov
inc
in
sub
mov
mov
pop
out
ror
sarl
jns
out
icebp
inc
dec
iret
and
adc
in
stos
pop
add
dec
xor
daa
jg
mov
xchg
cmpsl
popf
lahf
sub
dec
inc
fadd
ret
push
and
mov
pop
sbb
std
adc
movl
lods
sahf
shrl
xor
addr16
repz
fwait
hlt
inc
loope
lods
leave
adc
jbe
popa
subl
sub
test
push
dec
add
jp
fmull
cmp
push
add
ljmp
add
aad
icebp
test
dec
jne
xlat
lret
lret
inc
sbb
jno
aaa
jecxz
dec
pop
out
testb
ljmp
xchg
and
je
adc
push
pop
mov
wrmsr
xor
jb
xorb
xchg
icebp
push
sti
imul
add
mov
popa
stc
repnz
or
jg
mov
pop
je
pop
or
push
dec
sbb
in
int
loope
sub
jo
flds
repz
inc
popf
out
inc
iret
jae
repnz
aaa
jns
adc
notl
in
mov
xchg
loope
sub
pusha
cwtl
pop
and
std
and
dec
mov
mov
cmp
sbb
dec
fsubrl
and
mov
gs
xor
pop
lea
xchg
aad
in
sub
sub
scas
add
int
jns
leave
pop
aad
xchg
xor
sub
push
scas
test
adc
add
in
cmp
test
cmp
outsl
inc
or
test
or
mov
into
pop
lahf
fiaddl
dec
aas
fistl
adc
mov
and
pop
pushf
adc
jne
movsb
lods
pop
xor
jns
maskmovq
idivl
in
sub
jge
pop
test
and
mov
xor
lock
jle
xchg
sub
xorb
imul
test
cmp
in
cld
lret
xchg
clc
leave
fldenv
insb
push
pop
sbbl
sub
jns
out
shl
leave
add
daa
shl
sbb
bound
bound
cmpsl
pusha
lods
sub
dec
sbb
mov
stos
fsubs
sar
lcall
mov
dec
mov
inc
add
seto
sti
es
cwtl
bound
into
loop
rclb
les
cmp
sti
sahf
adc
enter
ja
lods
mov
loopne
jg
mov
pop
mov
or
push
movups
jecxz
popf
in
inc
pusha
xchg
out
mov
cmovg
shl
mov
mov
int3
lods
cmp
and
aad
cmp
xlat
stos
movsl
push
das
outsl
jbe
xchg
adc
sarl
dec
pusha
cmp
out
lods
push
addl
lods
jmp
movsb
in
cmp
ret
xchg
inc
lds
lret
scas
rcll
xchg
inc
xchg
jne
push
out
sub
ss
mov
loop
adc
or
cmp
rcrl
mov
jo
ljmp
ret
mull
push
xchg
lcall
into
mov
adc
or
lret
imulb
ret
adc
fmul
popa
incb
jne
dec
stos
and
pusha
gs
fldl
and
or
adc
jne
inc
push
ret
push
ja
pop
and
stos
cwtl
test
loope
inc
shll
insb
scas
mov
scas
enter
xor
or
int3
cmp
icebp
pop
jo
ds
push
mov
lcall
adc
jge
cmpsl
inc
ret
inc
out
cmp
lret
push
cmp
pop
jp
fcmove
jb
mov
mov
pop
add
cmp
cmp
cmpb
sbb
div
int3
pop
dec
mov
jecxz
pop
and
mov
sbb
out
sub
stos
cmc
mov
icebp
decb
add
cmc
lods
pop
loopne
mov
fwait
sbb
or
insb
jp
lcall
test
mov
stc
mov
add
jbe
mov
lock
test
ret
push
mov
in
adc
cmp
dec
xchg
mov
xchg
leave
aas
push
cmp
cmp
and
sti
xchg
and
inc
call
js
jmp
push
cmpb
mov
inc
xor
and
rcll
dec
pop
mov
in
sbb
xchg
jmp
jl
cltd
arpl
pop
jbe
mov
or
popf
insl
in
inc
push
insl
adcb
mov
lcall
sub
and
daa
xor
add
das
jmp
mov
xorl
pop
jge
dec
push
jae
xor
xchg
ret
pop
test
aas
xchg
imul
jge
inc
push
mov
mov
in
lods
jne
xor
adc
popa
dec
ljmp
insb
mov
mov
adc
shrb
cmp
dec
nop
mov
and
call
mov
fs
or
push
or
dec
jne
or
mov
mov
mov
mov
jp
mov
gs
repnz
pop
dec
cwtl
inc
sbb
pop
push
mov
adc
je
mov
in
cmp
inc
adc
cltd
cli
mov
xchg
loopne
out
push
lret
lds
jne
push
shl
mov
adc
sbb
outsb
cmp
aam
sbb
vmovntpd
inc
xchg
lods
popf
pop
pop
rclb
push
add
jb
aas
xchg
jmp
dec
cmp
jg
mov
fsubrs
and
xor
icebp
xchg
and
xchg
inc
in
ljmp
xor
cmpps
and
cmp
cmpb
pop
dec
fiadds
lods
and
sahf
das
cmpsl
outsl
mov
mov
dec
xorb
adc
xchg
mov
fistl
mov
add
jle
fsubrp
jp
repz
int
stos
das
jb
add
push
js
push
adc
scas
lcall
jecxz
mov
in
dec
xchg
rorb
lcall
out
dec
xchg
cmp
dec
mov
pop
push
aaa
shll
ficoms
cmp
in
add
dec
add
xor
pushf
rorl
icebp
dec
push
mov
cli
cld
out
cmp
add
daa
dec
test
push
mov
or
call
es
and
jle
and
mov
mov
call
push
clc
mov
pop
call
mov
add
jno
adc
and
adc
inc
out
xlat
jecxz
sbb
lods
push
sub
push
in
push
push
addr16
in
dec
imulb
out
mov
cmc
mov
or
mov
jge
ret
popf
cs
xor
inc
iret
mov
xor
cli
jne
ja
bound
jno
push
dec
fwait
sub
lcall
cmp
lds
inc
mov
mov
push
leave
pop
leave
mov
inc
arpl
unpcklps
hlt
xchg
xor
mov
fiadds
mov
push
xor
stc
xorl
fisttpll
in
add
popa
mov
sub
icebp
adc
jle
mov
pop
fwait
add
push
addl
test
jge
outsl
call
rep
jne
sub
pop
jl,pn
add
add
xor
mov
pop
ret
or
sbb
lret
add
iret
adcl
add
int
hlt
fimull
xor
test
outsl
mov
xchg
adc
adc
stc
pop
stos
pop
fiadds
shlb
cwtl
sub
jl
or
leave
pop
sar
hlt
pusha
sahf
mov
je
shlb
test
push
push
lea
test
mov
xor
testb
add
jae
dec
in
stos
aaa
aaa
mov
and
and
outsb
int3
cs
mov
hlt
dec
xchg
stos
jmp
or
lret
jecxz
test
adc
push
test
dec
xor
cwtl
sub
mov
test
mov
vsqrtss
adc
cltd
pop
shlb
sbb
packsswb
popf
maxps
test
adc
add
mov
jecxz
sub
addr16
push
jmp
mov
mov
add
dec
sub
and
inc
aaa
sub
sbb
enter
mov
sbb
xchg
outsb
ja
popf
icebp
cmp
mov
jp
inc
dec
xchg
and
nop
xchg
in
mov
addr16
xor
les
inc
inc
je
inc
add
insb
mov
mov
pop
cmc
in
icebp
and
xchg
test
lahf
sti
jl
sub
imul
popa
int
jae
stos
or
dec
shlb
sbb
lds
test
pushf
popf
inc
aam
das
dec
push
cmp
jecxz
sbb
mov
sub
mov
imul
rep
mov
xchg
push
mov
aaa
and
mov
test
mov
lock
aas
add
out
fstl
cs
push
movsl
repz
cmc
jmp
int
pop
sbb
outsl
cmpl
sub
inc
ret
or
jecxz
js
mov
stc
jae,pn
mov
pop
daa
clc
out
cmpsl
lcall
mov
cs
xchg
mov
je
mov
dec
xor
pop
lret
repnz
dec
out
mov
popf
dec
std
add
xor
lret
sub
pop
lds
in
jns
xor
mov
mov
xlat
xor
sarl
push
sbb
pop
xchg
scas
fildl
scas
dec
jnp
test
xor
scas
shr
addb
outsl
sub
mov
aad
ficoms
xchg
or
mov
nop
mov
lods
push
push
mov
lret
jne
jmp
push
das
sub
fs
je
in
dec
popa
mov
lfs
sbb
pop
test
mov
add
adc
and
or
jno
lahf
xor
jg
jb
and
imul
dec
xchg
popa
add
in
push
shrl
hlt
hlt
adc
aam
fldlg2
jge
pushf
adc
xchg
test
ja
fwait
xor
sbb
fimuls
push
js
xchg
pop
fstpl
sti
add
dec
mov
push
cmp
xchg
movsl
icebp
jle
in
mov
add
or
sbb
or
add
gs
push
out
repz
push
mov
and
push
aam
add
in
cmp
insl
mov
pop
sbb
mov
jns
mov
adc
fdivrs
or
mov
or
push
stos
mov
mov
cmp
add
xor
stos
xchg
cmp
dec
mov
enter
and
mov
mov
and
out
loopne
push
and
jbe
push
es
out
rorl
hlt
out
cmpsl
sub
inc
enter
sbbl
mov
subl
icebp
cmpsl
adc
in
adc
push
jae
and
enter
int
and
pop
icebp
enter
fs
in
scas
stc
push
out
xchg
fidivrs
mov
mov
dec
adc
dec
shld
adc
sahf
hlt
lret
testb
lcall
fcmove
out
pop
enter
xchg
push
sub
sbbl
dec
cmc
rcl
dec
lock
inc
div
outsb
cmp
pushf
mov
lods
jg
jae
and
pop
fisttpll
jo
and
loop
mov
adc
sahf
loope
dec
lods
jle
add
mov
sti
lea
lods
lret
sbbb
inc
lods
hlt
cmpsl
repnz
jnp
pop
mov
cmpsl
push
push
adc
push
xchg
mov
out
add
jno
pop
ficoms
loopne
or
jle
dec
rolb
cs
cltd
dec
je
adcb
jne
xchg
stos
es
dec
and
lret
xchg
sbb
sahf
and
xor
testl
mov
push
in
cld
dec
adc
out
scas
fcmovu
add
xor
push
xchg
sbbb
mov
add
sbb
cwtl
into
cli
cmp
add
cmp
aam
loope
mov
jae
xor
or
cmp
sbb
pop
mov
adc
dec
repz
or
xlat
xor
mov
incl
push
or
ret
xor
push
dec
inc
adc
nop
xor
xor
sbb
pop
xchg
int
roll
or
mov
movsb
sbb
xchg
fnsave
lret
mov
aad
adc
jp
outsl
cmc
stc
dec
xchg
mov
jnp
test
mov
or
push
lea
out
fs
in
imul
mov
arpl
iret
pushf
push
int
pusha
push
mov
jl
xlat
lods
jle
leave
and
div
push
ret
sub
ss
add
movsb
push
push
push
hlt
fs
push
or
or
sub
xor
and
sbb
loope
push
insb
mov
mov
lods
cmp
bndldx
mov
stos
adc
adc
cld
es
js
sahf
push
lret
adc
mov
adc
ss
sbb
das
loopne
mov
xchg
mov
pushl
push
fistps
out
loopne
scas
in
js
stc
stc
cld
ds
std
and
daa
add
cmpsb
sbb
mov
aad
sbb
frstor
and
shll
test
cmc
jp
mov
xchg
jns
jns
mov
notb
push
out
outsb
sbb
mov
int3
cmc
push
cmp
dec
loopne
adc
mov
mov
cmp
rcll
jne
push
aas
sub
lret
mov
fnstsw
sub
repz
mov
jg
jmp
ret
lods
push
inc
cmp
stos
and
into
lcall
cmpsl
test
and
pusha
cmpsb
inc
les
loopne
fists
push
out
jg
ret
into
push
push
ss
jp
addr16
lds
inc
mov
in
xchg
jmp
insl
in
data16
xlat
push
jmp
push
jo
lds
jns
push
fsub
and
push
pop
pop
xor
jg
test
gs
adc
adc
scas
outsb
leave
std
mov
ljmp
lock
push
adc
nop
idiv
loopne
lods
mov
sub
shll
lock
loope
into
jl
and
cmpsb
and
mov
xchg
nop
lahf
test
adc
mov
or
mov
out
pop
sti
adc
stos
pop
push
pop
or
in
enter
in
pop
cmp
dec
dec
je
cli
in
cld
mov
jecxz
fwait
jo
push
mov
dec
adc
pop
sub
lods
test
jns
aas
cmpsb
add
and
cld
pushf
push
mov
das
iret
mov
fidivrl
sti
lcall
sarb
xor
xchg
sbb
clc
xor
mov
jl
popf
mov
or
jb
repnz
push
add
xchg
jns
nop
push
out
sbb
pop
mov
aas
xchg
outsb
dec
pusha
por
mov
into
jne
push
xlat
pop
xchg
jnp
cmp
movsb
sti
mov
push
iret
lods
icebp
xor
out
push
mov
push
lods
bound
push
into
xor
push
lret
pop
cmp
test
mov
cmpsl
rolb
mov
arpl
int3
mov
nop
in
xchg
xchg
cli
and
out
cmovge
pop
pop
adc
mov
sti
daa
mov
cli
aaa
push
mov
and
out
xor
or
je
jp
sub
jmp
xor
mov
les
mov
and
cmp
xchg
mov
dec
push
and
xorl
jmp
pop
mov
adc
jle
push
jns
fsts
data16
movb
fcompl
or
fsub
movsb
fs
fdivrs
mov
push
add
jecxz
ss
pushf
cmc
push
mov
xor
mov
je
orb
jns
xchg
push
mov
test
inc
ficomps
leave
add
iret
aas
rcr
pop
sbb
pop
jne
xchg
inc
int
cmpsl
lret
pop
inc
icebp
jp
lret
pop
repnz
aam
aas
xor
inc
dec
push
xor
sbb
dec
lock
test
jne
xchg
mov
add
testb
push
mov
mov
adc
xor
sub
dec
lock
and
les
mov
repnz
aas
outsl
cmc
add
push
push
pop
push
sbb
je
mov
push
mov
xrelease
push
jg
data16
pop
imul
cwtl
add
sub
mov
sbb
test
ss
sbb
sbb
xchg
test
arpl
mov
xchg
xchg
adc
pop
pushf
sbb
fxam
cmc
inc
ja
fiaddl
mov
sarb
cmp
push
dec
add
mov
jnp
pop
jno
dec
xchg
ja
scas
pop
cltd
fs
jge
inc
fwait
adc
ret
mov
add
fistpll
je
dec
aad
mov
adc
xchg
inc
lods
int3
ret
fcoms
popf
mov
mov
loopne
and
push
cmp
je
mov
push
lds
ficompl
jmp
test
adc
das
pop
loopne
insl
pop
pop
sti
xor
fwait
mov
mov
or
pop
add
push
mov
sbb
cmp
fistpl
stos
sub
sub
sub
or
imul
inc
test
das
and
dec
in
inc
mov
in
fdiv
std
imul
pop
and
out
stos
adc
out
mov
dec
cld
mov
jo
jle
adc
loope
mov
jnp
rcll
aam
push
test
cmp
nop
jb
adc
or
pop
fsub
in
pop
sbb
ret
and
int3
sub
and
sbb
insl
push
push
mov
jo
cmp
sub
leave
lgs
mov
cltd
add
data16
and
jbe
sahf
lahf
xor
adcl
mov
mov
out
jecxz
push
pop
out
push
lahf
shll
sbb
aaa
mov
cld
insl
push
daa
repnz
dec
ljmp
dec
sarb
dec
dec
les
fmuls
in
test
ss
jno
arpl
inc
daa
pop
and
ss
mov
or
push
insb
incl
je
rorb
dec
test
cli
or
xchg
push
rorb
data16
aas
push
js
xchg
xchg
callw
notl
pop
ljmp
lds
or
fwait
adc
popa
xor
mov
lds
or
mov
mov
cmpsl
fisttps
mov
icebp
fs
push
in
cld
insb
xchg
pop
aas
push
mov
inc
mov
jp
xor
lea
mov
lods
adc
push
lret
and
inc
push
inc
clc
fwait
push
dec
idivl
bound
outsl
sub
ret
hlt
add
out
loop
xchg
std
xchg
popl
lods
loopne
insl
mov
dec
mov
sar
mov
dec
push
js
adc
dec
xchg
ret
mov
push
xchg
jno
jnp
icebp
push
aas
es
fwait
sahf
shlb
lods
push
sbb
and
cmpsl
pushf
push
jns
es
insl
push
push
add
cmpsl
mov
in
pop
repnz
dec
popa
movsl
dec
sahf
insb
mov
xor
loopne
call
scas
hlt
xchg
adc
movsb
popa
xchg
add
sub
inc
pushw
inc
cmp
cmp
xchg
gs
push
xchg
popf
xchg
lods
pop
cmovs
adc
cwtl
cmpsb
add
imul
adc
cmc
mov
xorb
insl
lahf
jae
pop
mov
gs
mov
loope
cmpsl
mov
and
sub
fsin
mov
push
outsb
test
pusha
fs
inc
ljmp
adc
sub
je
mov
xchg
mov
cmp
push
ror
sbb
rorb
cwtl
lock
xor
pop
mov
xchg
cmp
mov
mov
mov
adc
push
imul
push
aad
arpl
popf
jns
aaa
dec
gs
and
orps
adc
add
fstps
in
movsb
arpl
rcrb
jo
jp
shll
dec
aas
ret
inc
sub
popa
ljmp
test
icebp
sub
sub
cld
out
mov
mov
jle
ret
xchg
popa
outsl
daa
xor
sbb
adc
mov
ds
cld
mov
das
cld
je
add
and
mov
nop
cmpsb
cld
stos
loop
lods
movsl
push
mov
mov
sbb
add
mov
ljmp
sti
lcall
decl
mov
es
popa
add
paddusw
push
stos
add
test
pop
or
sub
sbb
outsb
je
mov
or
push
jne
cmpsb
mov
je
out
add
testl
xor
movsl
jmp
jo
pushf
xchg
fsubrs
add
xchg
cld
add
or
mov
inc
aad
sub
xlat
in
pop
dec
cmp
loopne
insb
jnp
lret
adc
mov
aam
fildl
hlt
xor
fwait
push
pop
ja
cwtl
sbb
aam
cs
xchg
jp
stc
mov
mov
out
sbb
push
xchg
push
adc
movsb
add
rcr
lret
mov
nop
add
andl
stos
shll
roll
push
push
ds
ret
insb
pop
test
and
sub
inc
inc
jle
pcmpeqb
jg
adc
dec
call
pop
jo
mov
mov
or
int
lcall
xor
xor
lret
jne
xchg
mul
pop
add
fwait
push
push
hlt
inc
or
fimull
adcl
leave
ljmp
cmpsl
cmpsb
in
pop
loopne
xchg
push
ja
sbb
ret
out
addr16
cmpsb
movl
add
jl
push
xor
mov
sub
lods
push
sub
lea
pop
and
cmpsb
adc
xchg
fs
sub
aam
and
outsb
mov
daa
pop
stos
dec
pop
jb
imul
pop
xchg
out
and
les
push
out
pop
dec
ret
jle
jo
pop
jmp
jbe
in
push
scas
leave
es
mov
pop
in
mov
enter
jbe
jecxz
subl
dec
sahf
sub
fdivr
sub
pop
and
adc
dec
test
js
aas
lret
xor
ds
out
sarl
mov
adc
mov
call
imulb
addr16
jb
mov
mov
xchg
or
out
mov
inc
shll
rolb
in
dec
cwtl
movsl
cmpsl
fs
stc
insb
loope
dec
mov
jo
jmp
jecxz
lods
xchg
out
adc
cmp
fstps
test
scas
in
cltd
sbb
sub
sbb
push
nop
dec
int3
and
insl
insb
mov
xchg
sbb
dec
lea
sbb
jns
aam
enter
jo
iretw
cli
xchg
mov
andb
imull
scas
in
cmp
mov
fstl
mov
mov
dec
shrb
fucomp
mov
dec
dec
gs
sahf
and
mov
ret
cs
mov
nop
sti
xlat
dec
or
xor
mov
xor
roll
xchg
pop
loopne
dec
pop
sub
testl
mov
sbb
xchg
in
xchg
call
mov
push
inc
nop
insb
cmpl
cmp
dec
imul
sbb
and
mov
lods
mov
push
dec
jge
vpinsrw
inc
pushf
in
mov
dec
add
shrl
loop
cwtl
fs
push
jne
sub
pusha
mov
adc
xor
mov
fstpl
gs
mov
add
subl
jl
push
jns
repz
dec
test
lret
test
lods
test
pop
dec
push
push
fs
loop
mov
aam
enter
daa
or
cmp
mov
push
jo
ss
adc
mov
pop
xchg
push
add
cmp
bound
push
sbb
push
xchg
lcall
sbb
sub
jl
or
inc
push
scas
pop
mov
cmp
cmp
stc
inc
cs
sti
js
rcl
into
mov
loope
inc
jae
aad
xor
pop
or
mov
xchg
js
dec
jle
sbb
mov
dec
xor
pop
jecxz
and
and
jno
jl
and
outsl
sub
jae
sbb
aas
cmp
mov
insb
es
mov
adc
lods
mov
add
leave
mov
out
add
jne
sub
xlat
push
sbb
inc
fs
aaa
push
data16
inc
jne
pop
ret
gs
lock
lcall
push
call
fbld
clc
nop
subb
cmp
sub
repnz
negb
inc
jmp
test
shll
dec
std
lods
xor
xchg
and
jge
imul
xchg
jmp
add
popf
jmp
out
push
lret
sub
adc
xchg
jmp
add
xor
mov
sbb
icebp
cmp
adc
xchg
icebp
mul
sbb
ret
mov
insl
sbb
mov
dec
sub
sub
rorl
or
lret
loope
push
sbb
pop
aaa
mov
rcrl
sar
sub
movsl
testb
cmp
jmp
mov
cmc
popa
add
jae
fsubr
clc
insl
mov
mov
push
or
or
lds
and
inc
add
mov
push
adc
push
sub
ret
sbb
aam
cltd
jle
sub
pop
arpl
loop
mov
shlb
push
dec
pop
and
pushf
test
sub
mov
shlb
pop
lods
arpl
or
nop
outsl
inc
pop
mov
es
mov
jnp
jecxz
push
cmp
fildl
cmp
icebp
scas
test
fs
sarl
and
cmpsb
pop
iret
mov
enter
stc
xor
pop
fcomps
pop
ja
fdivs
scas
mov
push
sub
test
pop
sti
ljmp
jno
aad
aaa
pop
out
push
icebp
push
jnp
pop
sbb
dec
fsubr
mov
data16
out
lods
nop
jbe
fistpl
int
fmuls
add
sub
out
lods
sub
imul
add
test
into
addr16
or
fwait
in
rorl
sub
mov
mov
jge
insl
mov
and
mov
mov
shrb
shlb
adc
stos
cmpsb
add
xchg
push
popl
mov
ficomps
sub
sbb
lods
fsubs
rcr
jns
andb
xor
push
push
jecxz
adc
ds
inc
dec
mov
stos
adc
and
imul
aas
lds
cwtl
mov
lds
jae
outsl
mov
jb
jle
pop
sahf
adc
push
mov
lods
out
cmp
jne
xchg
pushf
adc
addr16
inc
and
loop
int
jbe
cmp
add
daa
test
filds
fs
xchg
mov
aam
mov
nop
xlat
aas
mov
jmp
mov
add
gs
cmp
xchg
shrb
mov
pop
test
and
xor
repz
lcall
mov
dec
shlb
mov
push
test
pop
push
pop
sub
sbb
test
jne
fadds
cld
sbb
cld
inc
mov
test
mov
fs
xor
jmp
sub
jae
adc
xchg
lods
into
mov
add
bound
arpl
jmp
sbb
cli
je
test
shll
inc
and
xor
rolb
mov
dec
cwtl
xchg
push
inc
std
sub
lret
jno
aam
sbb
jge
mov
add
sbb
dec
das
das
cmpsl
test
lea
inc
sti
in
cmp
and
in
jno
xchg
testb
xor
or
addr16
aam
rcll
xchg
out
sbb
dec
mov
jno
inc
loope
rcr
sbb
mov
pop
insl
pushl
fistps
les
inc
lcall
sbb
stos
inc
mov
jb
insl
aas
mov
mov
stos
add
sub
imul
or
ss
daa
adcl
cmp
ja
inc
fcomip
movb
pop
mov
cmc
aas
movsl
cmp
test
pop
mov
int
fistpll
dec
scas
pop
sub
stos
mov
jp
fs
xor
sub
movsb
inc
adc
outsl
add
xor
repnz
jecxz
clc
jb
and
loope
cmp
add
or
or
xor
packuswb
add
and
xchg
pop
mov
pusha
xor
or
cmp
push
mov
mov
sub
sub
lret
ss
cmp
mov
jns
sbb
decl
into
insl
or
clc
pop
adc
cli
adc
out
mov
leave
rolb
fadd
xchg
aas
aam
or
push
ss
mov
sahf
mov
lds
shlb
mov
mov
xchg
dec
clc
xchg
push
outsl
clc
cld
cmpl
jb
shlb
lods
push
mov
sub
shlb
addb
ja
rorl
xchg
daa
jecxz
cli
dec
push
xchg
ficoml
inc
in
cld
mov
jbe
mov
dec
loope
dec
xchg
mov
mov
pop
sahf
mov
jns
iret
loopne
push
inc
push
pop
mov
pop
add
hlt
dec
mov
scas
shrl
xchg
je
decb
fs
cmpsl
movsl
imulb
addl
jecxz,pt
sbbb
dec
sub
xchg
mov
sbb
mov
lea
stos
lahf
stc
outsb
lcall
sbb
or
ficoms
sar
dec
ja
movsb
aam
mov
pop
push
jecxz
mov
cltd
xor
xor
out
in
mov
cmp
inc
push
outsl
push
inc
sub
xor
xchg
xchg
jbe
pop
dec
addr16
jae
add
sar
movsl
pop
pop
jp
add
mov
insl
jl
repz
pop
push
dec
stos
repnz
ret
or
jl
cmc
mov
cmc
es
in
inc
push
pop
or
xchg
xor
mov
gs
sbb
push
clc
js
push
inc
adc
hlt
jmp
sahf
xor
xchg
pop
inc
pop
jge
jp
dec
je
xchg
leave
stc
dec
and
jg
xchg
movb
mov
cs
pop
push
mov
ja
or
lcall
scas
xlat
jge
test
push
push
dec
xor
repnz
icebp
mov
je
adcl
out
gs
xchg
xchg
test
dec
fs
and
test
jge
sub
inc
fildl
jne
hlt
mov
dec
mov
arpl
aas
mov
pop
pop
inc
std
inc
dec
je
repz
out
xchg
add
adc
inc
pusha
gs
fpatan
ljmp
daa
mov
xor
pop
add
pop
addr16
pusha
inc
or
jo
arpl
xchg
mov
adc
das
aas
jge
aaa
fistpll
in
aam
mov
xor
fsubs
and
cmp
gs
push
push
push
in
int3
push
add
loopne
loopne
in
cmp
add
lods
mov
pop
xchg
jge
setnp
lods
jnp
arpl
cwtl
xor
cmc
jae
sbb
rcr
cmp
out
test
add
insb
cs
pusha
hlt
in
cs
push
mov
cwtl
push
xchg
inc
ljmp
test
test
cmp
repnz
outsb
insl
and
xor
fisttpl
jg
fnstsw
popf
lcall
inc
cmpsb
jb
stos
xchg
dec
mov
in
test
adc
arpl
adc
push
jg
pop
lahf
sbb
mov
aaa
shlb
xor
or
loope
fbld
pop
cmp
rcrl
repnz
add
sarl
test
imul
addr16
aas
push
movsl
orb
aas
mov
cltd
cmp
movsb
pusha
jmp
lods
in
test
or
add
cmpsb
aam
testl
aaa
mov
popa
faddl
inc
lea
std
lret
jb
es
dec
test
fs
pop
push
test
in
stc
sub
mov
int3
adc
movsl
jmp
ljmp
lcall
dec
cmpsb
xchg
xchg
mov
push
lcall
add
add
jne,pn
dec
jne
xor
dec
jnp
xchg
xor
add
lods
sbb
dec
shrb
addb
cmp
mov
or
xchg
add
stos
sub
add
les
sahf
ss
xlat
mov
movsb
mov
iret
or
sub
call
xor
stos
push
mov
cmp
std
inc
push
or
addr16
jl
push
mov
pop
add
inc
fildll
xchg
cmp
add
cmpsb
jl
sub
and
daa
cmpsb
loope
adc
bound
xchg
sub
or
rorl
stos
inc
dec
jle
fucomp
in
bound
dec
cmpsl
loope
js
xor
aam
shl
jno
nop
sub
pop
lods
and
sbb
push
in
mov
setp
icebp
dec
fmuls
push
lods
push
movsl
inc
pusha
fcmovnu
lret
loope
in
subl
lahf
into
xchg
ror
add
mov
nop
xor
sbb
inc
rcrl
mov
lea
fwait
inc
in
xor
xlat
popa
scas
push
push
pusha
xchg
jmp
xchg
mov
dec
add
insl
pusha
push
dec
call
iret
xchg
popf
into
fsubl
popf
add
or
popf
jge
mov
mov
xchg
inc
xorl
pushf
scas
jno
in
push
in
sahf
cli
es
lcall
mov
xor
push
xor
insl
cmp
scas
xchg
pushf
sbb
bound
jmp
ja
jb
jo
insl
jg
enter
pop
xor
lods
insb
imulb
lcall
jo
cmp
cmp
std
pop
pop
enter
repz
cmp
pop
andb
mov
fstps
sub
adc
jl
jp
dec
mov
mov
xchg
ja
xchg
inc
xor
popa
push
ja
rclb
int3
rorl
mov
or
sbb
jge
cmp
sub
jle
mov
insl
clc
cmp
repz
pop
je
je
jbe
pop
xor
jmp
clc
xor
push
jae
popa
or
stc
ljmp
xor
inc
adc
in
adc
and
popa
mov
stc
leave
popf
movsl
sbb
add
cmp
jns
dec
loopne
pusha
and
popa
das
cmpsl
iret
xor
test
mov
movsl
inc
popa
je
insb
imul
pop
mov
push
mov
addr16
inc
sub
sbbl
clc
ljmp
jle
test
loope
mov
cmp
or
adc
dec
imul
ds
pop
test
cmp
mov
inc
push
repz
push
cwtl
mov
add
jp
pop
dec
jne
lds
xor
xchg
cmp
icebp
in
outsl
gs
test
jns
outsl
addr16
jb
ror
mov
xor
mov
xor
mov
dec
lods
pop
test
aam
or
dec
add
into
mov
shrb
jmp
pcmpeqw
adc
mov
xor
cmp
lcall
ss
cmp
popa
cltd
jne
inc
jne
and
or
xchg
inc
test
xchg
xchg
pushf
inc
jno
inc
sub
sbb
iret
fwait
int
pop
test
and
push
push
icebp
in
stc
pop
stos
inc
insl
inc
xor
mov
pushf
dec
js
xor
imul
jae
jp
jb
inc
jb
lret
test
int
jge
lret
daa
inc
lret
xchg
lods
mov
outsb
stos
jle
or
pop
mov
mov
pop
lcall
xlat
mov
das
cmpsl
add
cmp
addr16
loope
rclb
imul
mov
push
push
jmp
cmp
sbb
xchg
inc
and
int
rorb
das
jne
dec
add
sub
fldcw
sub
jne
push
jbe
mov
mov
add
adc
pop
sahf
in
sbb
cli
pop
jge
cmp
push
pop
dec
push
sub
jbe
mov
sar
dec
mov
popf
xchg
sub
adc
fimuls
mov
mov
shll
dec
loope
push
push
jo
push
adcb
movd
add
fsubl
push
jmp
inc
shrb
sub
mov
les
sub
jns
aas
mov
cmp
pop
and
test
dec
sub
xchg
popa
es
pushf
push
mov
and
push
and
push
adcb
lock
sbb
cmp
in
insl
repnz
aam
xor
or
popf
add
and
push
dec
inc
scas
mov
mov
aaa
je
dec
cmpb
xor
add
add
ja
pop
or
movsl
mov
rolb
rol
mov
mov
mov
mov
sbb
pop
adc
push
test
pusha
sub
sub
std
int3
xchg
sti
sub
mov
xchg
add
lea
pop
lret
fidivs
loope
loope
jp
rorb
add
dec
xchg
add
cltd
xchg
sub
test
sbb
pop
or
pop
insb
pop
nop
test
xchg
push
jno
push
sarl
test
mov
or
mov
int3
lea
jmp
mov
or
adcb
mov
data16
arpl
xchg
inc
loop
ss
in
dec
dec
sub
dec
fcoml
push
in
push
aaa
gs
push
repz
pop
xor
mov
fdivrs
pop
pop
inc
hlt
test
sbb
imul
fdiv
and
inc
dec
test
icebp
dec
loope
push
loopne
cmc
scas
shl
mov
dec
negl
sahf
ret
inc
cli
sub
jb
and
gs
loopne
aaa
xor
inc
push
lea
movsb
and
push
mov
jb
movsb
mov
pop
out
pop
mov
cmpsl
lock
lods
bound
and
std
and
out
mov
mov
mov
mov
out
and
scas
dec
lock
std
aam
in
lock
push
fadds
jle
mov
mov
movsb
mov
cmp
stos
push
gs
subl
jl
cmpl
cs
dec
mov
xchg
or
mov
cmc
lret
adc
xlat
fistl
fbld
cmpsl
sub
mov
out
neg
cmp
push
testb
jo
mov
add
pop
cmp
jne
fdivs
ficomps
cmpsl
dec
mov
xchg
dec
cwtl
test
push
mov
loope
nop
xchg
xchg
mov
sbb
pop
cbtw
jb
out
jne
fwait
mov
mov
inc
ja
call
scas
push
pop
pushf
cmc
push
dec
push
ds
test
fdivrl
push
cli
hlt
sbb
cwtl
or
mov
inc
xor
sub
jmp
iret
and
sbb
scas
mov
push
int3
addr16
sbb
xchg
add
adc
or
stos
lea
add
sahf
cmpl
mov
popa
adc
cmp
clc
ret
mulb
in
and
dec
xchg
jecxz
mov
popa
popf
pop
test
mov
xchg
ss
call
push
dec
mov
push
dec
jge
dec
loope
mov
js
pushf
sub
xchg
xchg
mov
pop
and
test
pop
adc
mov
pop
orb
dec
sub
in
les
lahf
pop
loope
xchg
cmpsl
add
sub
int3
mov
hlt
push
loopne
dec
sbb
enter
jne
push
cmpsl
xor
lds
mov
mov
out
sahf
xchg
jae
mov
cs
inc
cld
jl
xchg
test
loop
fdivs
xchg
test
pop
hlt
xchg
xchg
adc
hlt
lahf
jl
sub
sbb
xor
js
jne
jne
sub
out
or
sbb
mov
hlt
cmp
mov
bound
pusha
jecxz
insl
sbb
repz
sbb
mov
cmp
jmp
mov
sarb
jae
popa
out
rorl
shrb
pop
test
mov
cltd
stos
cwtl
dec
push
out
ret
mov
cli
mov
xor
lea
loope
sub
adc
cmp
loope
jp
shrb
push
sub
xchg
ret
lea
iret
jl
andl
lods
mov
or
jae
bound
add
sub
jo
jae
daa
jae
outsb
insb
push
lea
mov
mov
add
push
rorl
pushf
sahf
lea
js
mov
shlb
fsubr
mov
xor
inc
xchg
mov
sub
lcall
sub
pop
je
xchg
stos
push
repnz
shll
cmp
or
test
mov
lea
clc
sbb
addb
pop
and
test
add
mov
loope
sarb
xchg
pop
cmc
ljmp
leave
std
iret
push
aad
sbb
mov
test
mov
scas
sbb
test
cmp
jo
bound
add
add
jecxz
add
sar
xor
inc
lea
and
mov
pop
iret
dec
adc
cmp
lret
jle
test
aas
scas
or
roll
jo
popf
arpl
pushf
loope
sub
lods
sbb
cmp
loope
jp
rorb
add
dec
movb
sub
iret
jl
push
jae
xchg
inc
loope
aad
das
cmpsl
in
sub
or
lods
mov
mov
das
or
pop
mov
aaa
test
stos
stc
sbb
mov
xor
adc
out
lret
addb
aas
mov
sbb
std
xor
lcall
xchg
cltd
jbe
sbb
subb
data16
aam
icebp
jmp
ja
xlat
sti
mov
mov
cld
xorb
popa
bnd
cmc
mov
hlt
pusha
cltd
aas
insb
cmpsl
xlat
ljmp
jg
cmp
aam
movsl
or
dec
dec
ja
outsb
jbe
mov
cmp
xlat
enter
das
popf
hlt
inc
lods
mov
xor
outsb
sbb
test
imul
jmp
in
adc
testb
divb
xchg
fldl
pop
and
mov
xchg
lods
inc
cmp
mov
adc
call
ret
icebp
inc
xchg
add
aaa
jns
pop
imul
dec
mov
pop
adc
shl
mov
shlb
sub
jne
inc
push
or
jno
sub
jb
pop
pop
inc
loop
lahf
stc
cmp
push
in
cmp
les
fsub
rcll
jne
sbbl
rclb
add
dec
sbb
xchg
gs
fndisi(8087
outsb
dec
jmp
mov
movsb
test
das
jg
sbb
int
and
sub
and
xchg
xchg
sub
loope
nop
cmp
pusha
xchg
sahf
push
cmp
stos
and
icebp
seta
je
pushf
ret
dec
inc
in
bound
pop
std
lds
jno
in
or
in
mov
cmp
jge
loope
lret
popf
and
adc
add
adc
dec
jmp
sbb
stos
cld
mov
xor
mov
push
in
ret
inc
lods
push
jl
push
sub
dec
loop
inc
gs
dec
ja
int
push
cmp
lahf
xorb
sub
cli
aam
call
das
inc
fxtract
leave
jae
and
mov
push
icebp
adc
loope
movsb
adc
mov
stos
repnz
test
add
movsl
mov
in
shrb
fnstsw
outsl
jns
pop
outsb
insl
cwtl
sub
inc
push
push
popa
add
add
leave
inc
stos
nop
sbb
and
insb
xchg
fstl
popf
insl
lock
scas
in
sbb
cld
xchg
in
jae
jae
jle
call
ficomps
sbb
adc
cmp
sbb
mov
inc
jmp
jl
repnz
incb
jns
cmp
push
das
push
sub
jge
inc
das
fs
jmp
push
jl
mov
sbb
pop
les
fildl
dec
popf
mov
pop
cltd
push
push
insl
inc
push
push
mov
pop
mov
andb
jecxz
xchg
or
fisubrs
pop
sub
pcmpeqb
push
add
mov
xchg
popf
sbb
sti
sub
ljmp
jb
subl
aam
mov
pop
push
subb
adc
bound
lock
fisubl
pop
fisttpll
jmp
data16
xchg
mov
add
cmpsl
mov
das
andl
pop
xlat
xlat
es
adc
jnp
mov
dec
loope
xchg
hlt
sbb
push
sub
sbb
xchg
mov
sahf
loop
sbb
and
mov
adc
adc
push
and
das
jp
push
pop
aas
cltd
cli
out
out
scas
lods
mov
or
mov
cmp
sbb
sbb
sbb
push
mov
icebp
mov
cmpsl
dec
rcr
jmp
add
ja
xchg
lahf
loopne
jo
sub
add
lret
ljmp
sbb
sarl
jns
jae
ret
ljmp
loope
rcrb
adc
cmp
jns
pop
test
mov
mov
scas
fbld
dec
outsb
push
jecxz
clc
lock
ret
in
and
in
xchg
pop
pop
sub
inc
gs
test
je
fisttpll
mov
test
leave
cmpsb
aad
insb
popf
adc
xor
fs
pop
jae
scas
push
cmc
mov
adc
mov
leave
sbb
fs
jle
xor
je
addr16
ror
mov
sub
fiadds
lods
sub
fistl
out
push
pop
pop
js
call
xor
das
lods
sbb
enter
loopne
sub
les
stos
xorb
xor
or
mov
pusha
pop
lcall
xchg
pop
imul
es
cwtl
or
icebp
xchg
xchg
out
xor
icebp
or
daa
mov
ja
sbb
andl
add
in
in
sbb
inc
xchg
sub
mov
sarl
or
adc
add
cli
xor
push
pop
shlb
test
loopne
xor
cmp
int3
dec
push
sbb
es
cmpsl
in
jnp
mov
mov
mov
mov
idivb
dec
dec
sub
je
insl
int3
dec
fmull
add
dec
cwtl
mov
mov
and
data16
nop
mov
pop
sub
fs
add
les
fimull
fiadds
inc
cmp
pop
ds
jl
or
jb
int3
aam
scas
nopl
enterw
xor
mov
outsb
cwtl
ljmp
lock
pushf
pop
inc
sbb
sub
scas
adc
cmp
inc
shll
popf
sbb
fwait
test
adc
sub
mov
and
add
popa
or
leave
cwtl
aaa
ror
mov
sbb
mov
mov
push
int
ss
data16
pushf
push
test
outsl
incb
sbbb
xor
mov
sub
sub
push
add
sub
jle
adc
jno
add
pop
mov
jg
xor
andl
adc
fadds
fidivs
or
sahf
sbb
test
out
stc
popa
lret
pop
lock
int
sti
pop
jnp
sahf
sbb
dec
imul
iret
clc
cmp
inc
pop
and
call
push
inc
lcall
jle
xchg
push
into
sahf
inc
out
out
xlat
insb
sub
outsb
daa
mov
ret
xchg
and
cmp
mov
inc
xchg
cmp
cltd
fisubrs
rorb
jo
mov
orl
cmc
jmp
mov
shl
cmpsb
cmpsb
sub
push
arpl
push
mov
mov
jge
and
fcoms
enter
pop
add
dec
sub
cmpsl
cmpsl
and
jg
mov
sbb
fwait
push
insl
push
sbb
jno
fsubrl
aas
ss
fiadds
mov
lret
stc
into
shlb
cs
sub
loopne
xor
into
jbe
daa
dec
or
scas
cmp
sub
jmp
pop
sub
pop
fcom
repnz
negl
adc
outsl
mov
subl
push
xor
and
cmc
test
and
add
xor
push
add
test
dec
jge
mov
aad
mov
pop
dec
gs
imul
pushf
sub
adc
jne
pop
mov
add
gs
pop
adc
cltd
test
inc
push
mov
fdivs
cmp
bound
jecxz
cmp
sarl
xchg
fwait
in
jbe
sub
xor
push
insl
cltd
lret
jae
pop
icebp
sahf
push
sbb
mov
push
insl
sbb
jae
xchg
and
dec
and
xchg
mov
inc
mov
sub
sbb
jno
jo
mul
sahf
sbb
pop
jb
xor
outsl
adc
and
addb
sbb
sbb
cmpsb
mov
addb
pusha
leave
in
inc
dec
je
sbb
in
lidtl
loope
aam
mov
sbb
and
dec
jns
pushf
sbbb
pop
rclb
mov
dec
ficomps
or
mov
push
push
push
push
xchg
popf
xchg
vpsrlq
push
out
outsb
call
sbb
adc
call
cmpsl
inc
dec
add
push
lea
sub
lret
icebp
mov
cmp
sub
mov
push
outsl
lea
xchg
clc
xor
fwait
shll
scas
mov
adc
cli
das
test
cmp
push
fisubs
add
outsb
popf
adcl
rol
dec
in
inc
daa
lock
outsb
pop
decb
je
mov
jecxz
data16
push
jnp
sti
fdivp
xchg
ljmp
jecxz
aam
cld
data16
js
in
dec
pop
push
add
stc
lahf
es
push
dec
pop
into
xchg
mov
pop
popf
sub
lret
mov
xchg
mov
insl
imul
mov
sub
sbb
fidivs
test
test
sbb
adc
fmuls
mov
sbb
inc
repz
sub
dec
sub
test
aas
pusha
sbb
ret
xchg
and
leave
cmp
sbb
mov
lcall
mov
push
jp
jne
mov
mov
sub
sbb
add
push
aam
hlt
in
les
mov
sub
lea
push
push
pop
lods
mov
push
lods
and
mov
scas
add
stc
std
push
jns
ffree
and
pushf
not
int3
arpl
sub
iret
pop
dec
movsb
xchg
jle
out
pusha
or
cld
hlt
loopne
test
pop
movsl
das
pop
fdivrs
lcall
dec
xchg
mov
inc
adc
lret
sbbl
add
mov
stos
adc
push
xchg
fcoms
test
out
sbb
xchg
cmpsb
loopne
lahf
fwait
or
xchg
mov
sub
ja
mov
mov
iret
xor
inc
gs
push
inc
adc
scas
pop
lock
and
dec
push
les
adc
cmpsb
ljmp
xor
cwtl
mov
cmp
ljmp
in
ret
std
push
cs
cltd
sahf
in
insb
pusha
mov
pushf
mov
test
ljmp
bound
add
pop
push
fimuls
adc
cltd
cmp
mov
jle
insb
sub
sbb
arpl
lret
mov
mov
mov
xor
fsubp
dec
mov
lock
out
sub
or
adc
pop
push
jnp
dec
xchg
leave
inc
hlt
add
test
enter
push
cld
aas
es
inc
fisttpll
dec
xchg
push
jae
xchg
lcall
insl
out
leave
sbb
push
ficoml
inc
xor
lods
movsl
push
shlb
sarl
lea
jmp
and
sbb
popf
test
lock
jbe
and
cld
inc
cwtl
sbb
data16
aaa
jecxz
mov
outsl
push
in
mov
sbb
push
and
test
test
sbb
insl
and
cmp
mov
xor
movswl
inc
inc
xlat
fisubrl
mov
pushl
fcmovnb
xlat
shl
pop
xorb
pop
pop
cmp
or
mov
ret
xor
mov
add
mov
sub
data16
inc
xor
adc
or
bnd
xor
cltd
jae
ret
lea
adc
push
jle
push
xorb
push
mov
ror
stos
data16
sub
punpckhwd
cmp
inc
sub
imul
movsl
cmp
ret
aam
adc
and
popf
inc
jecxz
movsl
xor
or
push
jb
adc
outsl
mov
nop
insb
dec
cmp
loop
xchg
xchg
push
and
call
and
pop
sbb
cmp
push
nop
sbb
or
dec
inc
push
lea
les
out
aaa
add
test
js
cmp
adc
scas
sbb
jno
push
test
dec
mov
push
mov
sar
sub
out
hlt
rcpps
clc
and
es
jmp
je
pop
fimuls
nop
testl
mov
adc
push
adc
cmp
jp
pop
mov
ss
pop
es
sbb
movsb
orb
mov
dec
xor
icebp
in
outsb
fildl
loopne
ljmp
icebp
loope
sub
fsubrl
inc
cld
loop
arpl
ljmp
je
and
xchg
ret
xchg
stos
mov
in
mov
mov
sahf
ret
nop
adc
mov
arpl
scas
call
cmpsb
clc
mov
jmp
inc
pop
and
mov
xchg
pushf
cmpsb
dec
mov
sbb
mov
cmpl
mov
mov
mov
or
and
jmp
xor
lock
or
dec
lahf
lock
scas
fnstcw
negb
mov
sti
nop
cmp
stos
xchg
test
xchg
aas
jno
andl
mov
inc
enter
mov
cs
mov
mov
inc
aam
stos
adc
jo
imul
cmp
or
or
and
jb
mov
ret
data16
jnp
pop
in
pop
mov
cwtl
mov
aas
cmp
pop
mov
test
and
sub
gs
mov
xor
xchg
popf
dec
xor
cltd
jmp
daa
and
xor
and
cmpsl
das
xchg
mov
fcompl
cwtl
inc
mov
out
push
cmp
push
iret
rcrl
sti
sub
and
inc
cmpsb
insl
xor
mov
jns
enter
cmpsb
xchg
pop
dec
cmp
test
icebp
adc
mov
int
cmpsb
xchg
fdivl
sbb
cmpb
repnz
out
outsb
cmp
lock
jge
cmpsb
fisubrs
fwait
je
ja
stos
jae
ss
test
add
mov
hlt
ljmp
stos
ljmp
in
rclb
xchg
leave
lock
inc
add
sub
add
jns
int3
mov
hlt
jb
sar
or
sbb
lock
inc
push
aas
stos
sub
cwtl
mov
sahf
ret
sbb
cmp
lcall
push
popl
dec
bnd
mov
xor
xchg
in
add
clc
sbb
ret
or
push
adc
adc
enter
cmpsb
push
pop
shr
lcall
xor
pop
inc
mov
fidivl
scas
mov
mov
cmp
sub
mov
test
xor
and
and
mov
mov
movb
add
inc
jge
sbb
and
jle
mov
aaa
xor
xchg
mov
xchg
and
dec
add
shl
pop
xchg
mov
mov
lock
lret
rcrl
lock
lock
mov
int
jecxz
pop
ds
xchg
inc
dec
cmp
xchg
mov
pop
jg
int3
pushf
add
add
out
pop
jns
cmp
inc
add
leave
pop
dec
xchg
pop
sti
xor
sub
add
int
ret
data16
leave
imul
pop
jbe
adc
nop
mov
hlt
popa
leave
and
out
lret
adc
imul
jl
xchg
add
mov
flds
cmp
xchg
jo
inc
mov
sahf
add
aad
shrb
leave
bnd
dec
clc
popa
jl
mov
outsl
mov
cmp
mov
mov
iret
cs
jbe
inc
test
and
mov
mov
xchg
loop
jno
out
cli
xor
in
arpl
push
sub
repz
in
push
jae
sti
xchg
fs
scas
push
inc
push
mov
aaa
leave
fwait
and
pop
inc
xor
pop
sar
lahf
inc
out
push
push
pop
mov
mov
xlat
loop
add
cmp
addl
push
sub
hlt
ljmp
divl
daa
xchg
lods
push
mov
mov
jns
daa
test
repnz
jg
cli
inc
mov
adc
add
xor
jl
stos
xor
fldcw
test
push
mov
rorl
movsl
inc
pop
aaa
mov
jmp
dec
dec
pop
test
ljmp
fdivs
jne
or
call
lea
orb
test
and
push
jl
xlat
cmc
jae
cli
icebp
fcomps
jp
hlt
les
out
pop
add
fisubrl
inc
jecxz
fbld
cltd
lea
pop
lods
mov
sbb
faddl
popa
and
jae
jnp
sbb
into
int
je
loope
mov
mov
aam
imul
pop
lods
pop
push
jmp
sbb
or
pop
enter
iret
add
bound
imul
test
jg
cmp
mov
out
movzwl
pop
std
mov
flds
mov
xlat
xor
scas
loopne
sub
in
xor
out
loop
stc
pop
push
sub
fsts
push
add
xchg
xchg
mov
testl
adc
pop
cmp
popf
pop
repz
push
mov
in
mov
pop
adc
cmp
fbstp
repz
sbb
test
mov
aam
mov
cld
nop
pop
cmpsb
push
lret
mov
shll
mov
adc
or
adc
sbb
ret
pusha
sub
int
xor
xchg
inc
in
push
xorb
rcrb
push
sub
fcmove
jb
or
mov
mov
add
dec
addr16
pop
test
addb
sbb
cmpsb
pop
enter
mov
inc
jle,pt
sub
push
mov
fimull
ret
push
push
sbb
and
mov
mov
jb
in
cmpsb
loopne
sub
push
inc
ficompl
int
mov
ret
add
mov
xchg
outsb
pop
lods
pushf
push
mov
xor
xorl
test
dec
insl
pop
or
fs
sub
mov
cmp
mov
sub
outsl
std
xor
xor
hlt
push
aaa
inc
pop
cli
inc
adc
scas
cmp
sbb
sbb
ret
in
fucomip
adc
dec
dec
out
sbb
fildl
mov
out
mov
pop
xchg
pop
repz
ljmp
mov
mov
adc
cmp
jb
jmp
xor
mov
push
xchg
dec
jecxz
fmull
sbb
or
loopne
and
lock
shl
mov
sub
add
xchg
inc
loopne
inc
rolb
ss
fimuls
jl
cmp
jle
mov
stc
or
inc
nop
adc
loope
add
movsb
das
push
inc
pop
mov
and
in
xchg
xorb
dec
and
cmp
lea
mov
movl
mov
dec
sub
lret
xchg
popf
repz
movsb
insl
test
pop
andb
dec
insl
fidivrs
movsb
loope
cld
fldenv
ds
sbb
adc
inc
test
fsubl
js
xchg
lahf
hlt
push
test
icebp
ja
popa
jnp
cs
imul
dec
loopne
stc
xchg
or
not
push
mov
jnp
push
jne
popa
mov
jnp
jp
mov
enter
mov
jmp
in
dec
out
out
addr16
push
gs
out
mov
shrb
test
pop
ja
bound
xchg
mov
fnsave
inc
jne
fimuls
test
cli
movsb
shl
xor
add
sub
xor
and
movsb
xchg
cwtl
adc
adc
sub
imul
xor
cmpsb
xchg
push
aam
outsl
test
add
negb
mull
gs
rolb
jb
pushl
pop
cmp
sub
push
jge
pop
shlb
cmp
xchg
xor
mov
push
xorl
sbb
sbb
repz
jbe
sbb
mov
inc
mov
jmp
xchg
dec
xchg
pop
xor
xor
movsl
sbb
push
rcrl
lods
cltd
and
out
sbb
cmpsl
jne
dec
and
das
sti
das
imul
pusha
adc
add
push
cmpsb
jo
lods
aas
cmp
sbb
dec
add
mov
cmpsb
seto
cltd
mov
and
sbb
lock
popa
fwait
test
push
inc
daa
les
dec
jmp
test
or
xor
les
sub
add
adc
cwtl
jns
xor
mov
or
cmc
add
clc
mov
sub
mov
add
arpl
lcall
and
sub
add
aas
inc
xchg
scas
pop
in
data16
stc
xorb
push
xchg
xchg
outsb
jns
bound
das
pop
mov
or
sub
pop
mov
jns
or
xor
lret
in
cmp
push
outsl
and
add
xchg
test
in
lock
lock
sti
add
sahf
rcll
cs
sub
mov
bound
add
outsb
mov
dec
xor
add
repnz
add
inc
jne
mov
sbb
test
arpl
into
pop
xlat
out
test
lods
pop
pop
bound
jecxz
dec
mov
outsb
sbb
sbb
ds
icebp
push
mov
mov
dec
rcl
inc
xor
stos
mov
adc
ret
lods
mov
sbb
leave
lock
movsl
pop
push
pop
push
push
add
mov
pusha
mov
data16
push
repz
js
cltd
adc
push
movsl
dec
pop
in
sti
mov
iret
xor
loop
subb
out
pop
mov
mov
mov
and
test
ret
dec
cmp
and
fsts
push
xchg
xchg
inc
dec
test
mov
jb
push
aam
dec
mov
mov
insl
dec
sub
mov
lcall
adc
xor
mov
inc
mov
mov
or
lods
out
inc
aas
dec
cmpsl
mov
mov
and
jo
ret
jp
fidivs
dec
xchg
outsl
sbb
aaa
js,pt
es
jge
mov
out
fdivl
sbb
xchg
leave
mov
insl
pop
lds
out
insb
scas
mov
sbb
enter
sub
pop
stos
add
push
clc
sbb
leave
ljmp
scas
sarb
cmc
push
out
iret
rorl
dec
or
int3
sbb
jbe
aad
jg
push
cltd
fisubs
cmpsb
push
mov
mov
jns
cmp
push
push
mov
mov
test
or
push
jp
mov
loopne
out
aad
jle
aad
cs
push
and
and
das
sbb
cmp
lods
mov
popf
push
movnti
sub
push
pushf
jge
cld
mov
cli
aam
push
jecxz
enter
sbbb
in
pop
push
jne
lcall
mov
push
mov
mov
cmp
xor
jne
adc
ss
jae
mov
mov
xchg
shlb
cmc
lock
insb
xchg
xchg
adc
lret
popf
or
adcl
jne
mov
mov
xchg
or
lcall
lret
test
xor
jae
jnp
ds
pop
mov
or
cs
mov
mov
or
shlb
cli
jp
test
lahf
inc
clc
out
daa
mov
or
pop
or
int3
es
mov
aam
jecxz
je
outsb
outsb
mov
jmp
mov
jnp
ss
fdivl
mov
inc
movsb
cwtl
and
cmp
shl
lahf
bound
mov
push
out
inc
movsb
sbbl
xor
movsl
xchg
xor
mov
cmpsb
or
ror
hlt
xchg
enter
aas
sti
push
pop
mov
and
insl
shrb
cmp
or
xchg
test
testl
insb
dec
shlb
arpl
jnp
dec
sub
cmc
or
sbb
push
pop
push
je
jg
gs
pcmpgtb
shll
imul
cltd
pop
movsl
or
in
sbb
xor
jo
adc
adc
and
test
insb
dec
mov
or
push
into
daa
shlb
push
stc
cmp
sarl
loopne
in
pop
enter
or
sub
int
sub
lret
cmp
jb
addr16
adc
dec
dec
lock
lret
inc
sub
mov
mov
sub
insb
rcll
and
es
je
adc
je
cmp
inc
xchg
dec
adc
imul
jnp
dec
add
add
iret
sub
mov
jmp
stos
imul
out
in
dec
ud0
xchg
fisubl
or
mov
adc
rorb
xor
jno
jmp
ret
fidivrs
in
dec
lahf
lahf
ja
pop
push
mov
push
xchg
test
inc
lahf
cmp
mov
xchg
mov
pop
cld
inc
xchg
push
sbb
sbbb
or
lret
movb
pop
les
out
testb
fcomip
aam
rolb
test
inc
cs
xchg
pop
mov
mov
jo
dec
mov
inc
adc
mov
pop
leave
scas
mov
jns
rcr
inc
mov
clc
or
cmp
add
mov
stos
push
mov
mov
in
insl
into
jmp
outsb
xor
mov
inc
cmp
mov
push
mov
inc
lcall
xchg
les
dec
sub
add
pop
mov
das
rcrl
mov
leave
mov
int
dec
xor
sub
lds
jmp
xchg
dec
lds
mov
xchg
imul
sbb
pushf
cmp
sbb
and
movsl
push
pop
jns
les
cmc
or
arpl
aam
xor
mov
stos
cmp
pop
stos
dec
movsb
idiv
pop
lcall
xchg
in
xor
leave
xor
mov
popa
jnp
aam
mov
jne
lret
jl
cmp
push
push
push
je
push
loop
add
jnp
leave
daa
sbb
sub
push
ret
loop
or
xchg
loop
cwtl
loop
inc
cltd
lock
inc
cmp
std
aam
insl
imul
adc
jnp
jmp
cmp
in
in
mov
adc
jge
mov
cmpsb
shr
push
push
loopne
mov
sbb
jecxz
sahf
dec
add
repnz
test
lock
lcall
ja
dec
out
ds
shlb
rclb
lcall
pop
repnz
adc
cwtl
lock
push
jmp
ret
mov
mov
outsb
out
jge
mov
in
rclb
dec
int
inc
test
dec
imul
dec
mov
jb
inc
xor
jb
dec
dec
nop
adc
mov
push
sbb
in
std
push
mov
cmp
into
insb
movsl
addl
mov
xchg
cmp
sub
popf
mov
mov
shll
movsl
pusha
popa
sti
inc
dec
jnp
pop
jmp
ljmp
and
cmpsb
pusha
xchg
pop
mov
fstl
adc
push
je
lret
insl
loopne
cld
lock
xor
jae
and
repnz
lock
repnz
pop
aam
pop
cmpsl
fmull
subw
data16
mov
addr16
movsb
outsb
push
outsl
jge
xor
test
sub
jge
add
lret
mov
ret
inc
in
jle
ror
out
and
sbb
inc
verw
mov
inc
push
and
add
xchg
loopne
test
xchg
sub
add
push
into
incb
inc
xor
lcall
push
xchg
and
jecxz
imul
inc
scas
jp
mov
cmp
ds
lcall
mov
sti
div
xchg
sbb
scas
test
push
in
and
or
xchg
pop
sub
cmp
sub
inc
lret
fidivl
in
push
push
movsb
pop
pop
adc
fimuls
sbb
dec
jns
jo
xor
inc
push
hlt
repnz
pop
jb
loopne
shlb
push
xchg
lods
push
xor
es
cli
cmp
jne
in
or
jb
movsb
rcrb
dec
or
cmovne
jl
aas
icebp
pop
ss
xor
into
addb
rol
ds
xor
push
stc
mov
dec
add
or
add
mov
jp
sub
aas
mov
es
or
dec
jmp
sbb
jne
pop
in
pushf
mov
lret
add
inc
shll
sub
testb
pop
fsts
mov
out
cs
cmp
out
sbbb
sbb
inc
sub
sub
ds
in
dec
jbe
ret
hlt
jle
adc
inc
aam
xchg
lahf
jns
dec
pop
sbb
jg
or
insl
sub
loopne
jbe
mov
cmp
and
cmpsl
loope
imul
shrl
in
dec
sbb
loopne
pop
cmp
ror
dec
pop
test
scas
sbb
add
fisubl
push
rcl
xor
ret
sub
and
pop
jbe
mov
sub
insl
cmp
stos
or
mov
jo
lods
cwtl
ljmp
or
adc
ja
shll
jae
pop
repz
stc
xchg
dec
imul
ds
push
mov
fwait
cwtl
jo
call
loope
jnp
sub
dec
add
inc
adc
xchg
adc
popf
push
add
xchg
repz
shrl
add
dec
sbb
or
and
adc
test
jns
mov
repnz
jnp
cmp
push
int
xor
orb
add
sbb
pop
imul
jae
sub
or
ror
jmp
test
mov
popa
movsb
mov
ljmp
das
and
or
and
jo
cmp
addr16
mov
pop
xchg
pusha
xchg
jg
mov
add
fadd
and
into
xchg
adc
push
jae
mov
mov
pop
fdivl
repnz
mov
scas
cmp
push
push
push
pop
repnz
xchg
call
arpl
inc
bnd
dec
je
call
mov
and
lcall
pop
fwait
pop
pop
inc
cmp
pushf
mov
jae
popaw
out
jp
mov
ret
pop
add
cmpsl
add
aas
outsl
dec
pusha
sbb
jle
mov
jecxz
bound
or
icebp
in
stc
insl
lret
imul
iret
add
mov
xchg
test
ss
xorb
xchg
notb
mov
data16
push
sbb
xor
test
inc
rcr
into
lds
das
pop
xor
adc
add
in
mov
jb
pop
cmp
xchg
mov
sub
sbb
ret
mov
ret
add
xor
sbb
das
in
insl
jb
enter
cmp
ljmp
popf
xor
lods
les
push
mov
arpl
nop
cmp
pop
xor
cmp
mov
std
dec
dec
loope
xchg
in
outsl
mov
xchg
mull
cmp
xor
jbe
out
dec
jmp
xor
cmp
dec
xchg
inc
scas
jbe
cmc
aam
sub
and
roll
mov
mov
iret
xor
lret
xor
mov
push
mov
jmp
hlt
enter
add
jl
mov
sub
jo
rorb
ret
push
mov
push
mov
ljmp
add
dec
jecxz
cmp
lret
adc
out
sbbb
mov
sbb
leave
test
das
add
icebp
scas
pop
xchg
pop
or
sub
add
aas
jne
fistps
int
jb
into
fxch
jecxz
adc
in
adc
jnp
jle
fisubs
fmuls
and
pop
pop
ss
popf
pop
mov
adc
push
sub
sbb
outsb
ss
in
dec
xor
adc
xchg
jne
cmp
and
xchg
mov
xchg
xchg
push
in
push
or
je
xchg
pop
pop
stos
outsb
out
and
loope
decb
push
enter
ret
mov
movsb
insl
test
xchg
add
sbb
sbb
negl
add
xchg
sub
xlat
push
fadds
lret
adc
nop
mov
gs
fldz
dec
out
or
sub
cmp
stos
ljmp
outsb
jb
mov
enter
mov
mov
mov
leave
jb
orl
dec
xchg
xor
and
bound
inc
andl
push
pop
or
jle
repz
loope
lods
mov
dec
push
mov
or
test
mov
les
mov
call
sbbl
nop
lret
cmc
iret
adc
mov
and
lods
pusha
adc
dec
mov
test
push
push
sbb
out
mov
sub
sub
aad
lret
faddl
rorb
mov
mov
jmp
push
inc
int
inc
lds
jbe
jo
repnz
stos
mov
and
xchg
push
pop
ss
lret
jnp
lret
mov
outsb
xchg
fadd
add
roll
xchg
fdivr
sbb
and
stc
inc
int
inc
pop
mov
jecxz
addr16
pop
out
popf
add
mov
mov
lods
filds
sbbl
jnp
push
push
jbe
mov
aas
out
jmp
repz
cmpsb
xchg
fbstp
mov
cmp
sahf
je
shll
insl
dec
iret
test
sbb
fbstp
gs
incb
cwtl
mov
push
sbb
jmp
mov
lcall
loope
in
sti
jnp
nop
add
sbb
in
ss
or
inc
dec
ds
lock
es
xchg
jge
sti
sub
sqrtps
int
loopne
imul
push
cmc
dec
les
movsl
nop
dec
outsl
pop
jb
mov
out
rolb
outsb
adc
jg
jecxz
loopne
push
pop
push
popf
daa
cmp
jge
cmpb
pop
inc
jmp
out
lock
xor
push
repnz
pop
mov
adcl
jns
les
xchg
mov
fs
jno
ficoms
mov
sbb
cmp
int
nop
ds
test
out
not
add
testl
xor
or
sbb
push
or
inc
std
push
pop
mov
push
mov
cwtl
push
rorl
ja
xor
sub
jge
xor
push
adc
sti
add
jne
insb
pop
mov
push
test
sti
sahf
push
leave
mov
insl
lret
mov
jae
fstl
dec
mov
mov
jecxz
adc
xor
loopne
movsl
out
addr16
adc
xchg
sbb
or
subl
mov
in
test
inc
popf
sbb
sahf
mulb
out
xor
xor
mov
out
scas
pusha
adc
inc
adc
iret
inc
shll
xchg
push
xchg
clc
int
mov
cmp
pop
pop
je
lds
push
sub
pop
in
dec
test
test
fidivrs
cmp
inc
xor
sub
imul
mov
jb
mov
jo
fimuls
sub
or
push
push
or
cmp
je
pop
push
xchg
mov
addw
sub
pop
mov
mov
sbb
sbb
fs
inc
int
sbb
imul
stos
fucom
cli
xlat
popa
xchg
dec
rcrl
pop
in
pop
lcall
pop
loop
push
cmp
push
orl
add
mov
inc
filds
shll
sbb
lods
jns
test
pop
mov
inc
dec
push
jge
and
jmp
jns
std
decl
int
inc
loope
and
mov
popf
leave
push
push
push
add
mov
push
or
ret
test
std
enter
orb
cmp
xor
xchg
data16
rol
cmp
lock
test
mov
inc
mov
rorb
andl
andl
and
or
or
mov
loopne
cwtl
imul
test
sub
popa
shrl
out
movsl
or
mov
pop
divb
pop
mov
mov
out
pop
movsl
ds
mov
jne
xchg
ss
addr16
insl
test
sbb
mov
hlt
neg
lods
stos
sub
sub
sub
iret
pop
mov
test
repz
push
sub
fwait
incl
cmp
adcb
call
mov
stc
jae
jno
in
add
dec
sub
mov
xor
inc
scas
pop
in
popf
and
adc
cmp
dec
icebp
dec
int3
cmp
in
mov
aaa
lea
push
mov
sbb
jp
add
incb
imul
sub
imulb
push
cs
repnz
jno
xchg
push
cmpb
jae
mov
decb
jg
mov
pusha
shrb
subb
xchg
pop
add
and
lahf
lds
imull
ss
xor
and
ljmp
mov
in
or
out
cmp
decb
cmp
sub
xchg
gs
add
sub
pop
and
push
mov
fs
jg
push
loop
outsl
mov
bound
xlat
and
and
jg
pop
or
sete
sub
lret
int3
test
pushf
imul
mov
ret
jle
jae
lods
sbbl
push
cmpsl
xor
mov
xchg
cltd
shlb
arpl
adc
popa
push
repz
inc
pop
out
into
add
cmp
mov
inc
lea
test
xor
jp
popf
into
out
testl
xchg
stos
lds
inc
xchg
push
mov
iret
jae
icebp
and
sbbb
or
sub
dec
and
pusha
repnz
test
pop
mov
pop
pop
fdivr
add
fnstsw
sbb
ds
adc
shr
mov
cpuid
fs
fildl
inc
fcmovnb
pop
xchg
dec
lods
pop
add
mov
loop
sbb
jne
mov
adc
jecxz
add
mov
ficompl
cwtl
xchg
pop
lods
lret
sahf
pushf
jbe
pop
add
shl
bnd
fdivl
sub
mov
jne
scas
sbb
jmp
test
dec
mov
ds
pop
lock
jl
and
sbb
mov
jnp
ror
add
jmp
cmp
jno
dec
cmp
inc
inc
dec
dec
jne
lds
dec
fistpll
pop
cs
pop
dec
pop
sub
xor
jle
movsb
cmp
dec
mov
cwtl
shrl
mov
mov
xor
or
in
pop
lds
test
data16
ds
fstp
cmc
call
scas
pop
fwait
imul
and
xor
jge
dec
fstps
jno
mov
xor
addr16
xchg
popl
jno
jmp
inc
out
jmp
ret
lods
push
test
decl
insl
insl
pop
daa
sub
sbb
pushf
sbb
cmp
mov
sti
mov
mov
iret
enter
pop
mov
pop
nop
mov
out
or
sbb
pop
and
popa
lock
repz
out
lods
hlt
adc
bnd
repnz
ficomps
xchg
mov
inc
fwait
pop
xor
jns
push
pop
or
nop
pop
neg
shll
xor
int3
lcall
cld
ror
sub
push
mov
mov
insl
cmp
sbb
jecxz
mov
mov
mov
xchg
pop
add
jg
mov
jo
cwtl
lods
xchg
decb
or
mov
inc
ret
ss
cmp
movsl
add
mov
jmp
jae
push
fs
pop
pop
add
in
mov
shll
dec
jmp
pop
mov
stc
xor
mov
push
sbb
jge
std
dec
jns
or
dec
rclb
push
test
jmp
sahf
jnp
in
mov
hlt
pop
push
sbb
insl
imul
sbb
repnz
lods
mov
jmp
loop
push
fisttpll
xor
loope
sbb
push
fs
sub
sbb
dec
mov
pop
cltd
enter
ret
and
adc
cmp
or
cmp
cs
pop
or
cwtl
cwtl
xor
inc
push
add
scas
add
xor
movsl
push
mov
jo
sbb
push
mov
xchg
pop
push
ret
dec
jae
inc
mov
rcll
das
mov
inc
sub
add
repnz
stc
xchg
popw
imull
add
jg
push
pop
sbb
lock
sbb
xor
dec
sbb
mov
decb
jno
xor
addl
in
shl
out
rep
push
test
pop
in
outsl
pop
cs
xlat
test
jb
inc
in
mov
mov
xchg
mov
mov
out
xchg
sub
call
mov
ficoml
mov
push
into
cli
fiaddl
adc
cmp
xor
fstl
bound
loope
jmp
jmp
mov
xchg
jb
iret
movsb
cwtl
outsb
pop
aaa
aad
lods
test
pop
xor
mov
or
cmpsb
jo
or
stos
arpl
inc
sbb
push
shll
fistps
jmp
cmpsl
ret
pushf
push
mov
ss
push
test
mov
pop
mov
cli
gs
sarb
movups
pop
inc
xchg
dec
lret
sub
outsb
pop
xlat
mov
adc
lods
xor
push
loope
stc
lods
out
dec
pushf
xor
insl
icebp
pop
jmp
cld
fstpt
adc
mov
inc
and
inc
xor
lcall
cli
mov
mov
mov
mov
andl
fcompl
sbb
jmp
insb
mov
xchg
int3
xlat
pop
sti
in
mov
jne
pop
cmpsb
scas
xor
pop
icebp
arpl
in
dec
xor
fbstp
je
adcb
std
lcall
inc
xchg
add
fnstcw
mov
cmp
dec
pop
xchg
cmp
sti
ret
or
sbb
out
mov
xorl
leave
sub
pusha
cld
sub
fnstsw
pop
xchg
and
fcompl
and
jge
test
xor
and
cmp
les
into
cli
xchg
inc
leave
stc
add
pop
scas
lcall
pop
enter
push
adc
or
inc
jp
and
adc
xor
ss
inc
dec
jnp
push
clc
lock
sub
dec
lock
mov
jle
pushf
adc
and
mov
mov
movsb
cmp
dec
cmpsb
lahf
lret
push
and
repnz
shr
lds
cmpsl
aad
sub
xor
sub
aas
add
les
dec
dec
jge
adc
xor
dec
jb
movsl
xlat
inc
lods
pop
cmc
mov
mov
fidivl
sbb
or
add
jno
push
and
xchg
jg
ret
sbb
test
cmp
in
out
xchg
jmp
dec
aas
add
adc
mov
dec
pop
cld
shll
xor
pop
hlt
out
adc
jmp
xor
mov
cmpsb
sbbb
xchg
xchg
out
xor
outsb
pop
ret
mov
sub
jne
xchg
int
sti
ret
sbb
pop
jae
aas
test
pushf
mov
addr16
jl
cwtl
sbb
sub
mov
sbbl
adcl
jb
pop
sub
movsb
stc
adc
sub
pop
jge
push
sub
or
adc
sub
stc
jbe
fnstcw
divb
or
mov
mov
push
jno
popf
das
or
mov
mov
filds
movsb
cmp
sub
xor
imul
xchg
and
fdivrp
push
pop
imul
push
gs
or
inc
arpl
cmp
repz
je
shll
jnp
mov
mov
fs
pop
jb
test
push
leave
es
xchg
pop
fsubrl
mov
sub
xor
adc
pusha
cmpsb
enter
mov
or
inc
fdivrs
lods
pop
lea
adc
adc
sub
inc
addr16
shll
push
lods
jge
mov
sub
dec
ss
xlat
mov
push
mov
pusha
adc
mov
adc
mov
jns
mov
insb
test
cmpl
mov
jno
lcall
and
pushf
cmpsb
mov
shlb
sub
sub
jae
dec
jecxz
or
loope
cltd
xor
cwtl
push
cld
xor
cld
xor
lock
jmp
pop
dec
jae
ljmp
cltd
sbb
inc
cli
inc
addl
and
sub
push
dec
adc
div
push
inc
inc
mov
mov
sub
mov
sbb
repz
shl
jo
imul
adc
cmpsl
mov
xchg
add
sbb
pop
subb
lcall
adcl
push
mov
jns
cmc
jp
cmp
cmp
pop
inc
leave
xor
xchg
arpl
jl
aam
or
out
inc
mov
mov
sbb
add
sub
imul
cmp
repz
ljmp
cmp
int3
pop
mov
shll
dec
data16
nop
stos
mov
xor
shrl
daa
add
ret
push
xor
adc
sbb
iret
std
aad
xor
jge
into
fwait
mov
pop
add
xchg
push
push
xor
sbb
out
test
gs
ljmp
cmp
fs
add
cli
cmpsb
insl
cmp
lret
push
in
std
aaa
loopne
lea
lds
or
shl
scas
insl
push
xchg
sbb
mov
lods
rorb
inc
pop
cmc
xchg
or
jmp
xadd
push
stos
ret
mov
xor
fiadds
adc
ds
lcall
or
bound
xchg
xchg
push
stc
insl
adcb
lret
xorl
ss
mov
je
pop
and
arpl
dec
imul
jns
loopne
pop
rclb
scas
push
aad
imul
sub
rorb
push
out
int3
aas
mov
scas
insb
jl
push
test
scas
sub
clc
sahf
leave
mov
dec
mov
mov
sbb
pop
mov
ret
inc
popf
in
sbb
fwait
in
and
fs
dec
pop
pop
stos
andb
repnz
sti
adc
pop
fldt
aad
xor
lahf
jb,pn
repnz
pop
mov
cltd
cmp
xor
sar
dec
lods
adcb
mov
inc
ficoms
test
shrb
mov
push
xor
fwait
push
loopne
leave
aam
shll
out
les
jns
mov
dec
push
jno
xchg
jmp
iret
or
sbb
mov
std
sbb
cs
es
gs
repnz
test
gs
repnz
add
xchg
seto
test
push
daa
ds
mov
cli
push
or
pop
sub
ds
push
insb
xchg
add
iret
ficomps
mov
out
shll
not
test
mov
das
popf
inc
fldl
pusha
sub
pushf
daa
dec
lahf
push
pushf
or
stc
out
jbe
mov
jnp
dec
pop
inc
mov
mov
inc
jb
mov
mov
push
push
dec
mov
mov
out
jns
push
jecxz
call
jge
xor
or
dec
lods
js
mov
div
enter
add
mov
mov
or
add
stc
js
mov
inc
inc
lret
add
inc
dec
imul
add
jmp
jl
cmp
out
xchg
and
jmp
std
fucom
mov
xor
ds
in
cmp
call
negl
add
int
lret
cwtl
dec
out
adc
lods
inc
or
dec
mov
jmp
adc
out
inc
sub
decl
jns
and
push
xchg
sub
sub
loop
xchg
jbe
arpl
mov
cltd
outsl
aas
cmp
cld
cwtl
popf
dec
inc
xor
sub
pop
ljmp
bound
ffree
push
fists
fnstcw
lods
fcom
xchg
sbb
mov
mov
lret
pop
xor
dec
jo
mov
pop
mov
or
outsl
cmpsl
mov
xchg
dec
cmpsl
mov
lds
out
push
pop
stos
addb
sub
ret
popf
out
jo
mov
cmp
les
into
mov
lea
call
pop
or
test
mov
push
pusha
xchg
and
dec
cld
pop
add
jnp
nop
inc
xor
xchg
push
push
stc
scas
popf
test
pop
fdivs
push
jmp
sub
push
push
stos
jae
imul
jnp
testb
fdivrs
fstpt
mov
cmp
sub
xchg
lcall
push
inc
mov
jmp
and
sub
das
jns
push
or
pop
and
sarb
jle
sub
and
dec
ljmp
jg
outsb
xlat
jae
sahf
movsb
mov
xchg
aam
les
seto
pop
push
mov
int3
jmp
imull
outsb
jb
dec
aaa
repnz
jecxz
ret
ret
mov
sub
in
movsb
xchg
push
jbe
jbe
stc
mov
and
mov
adc
sub
and
mov
pop
pop
xchg
push
push
cmp
xor
adc
xorl
or
xlat
clc
mov
cmp
xchg
imul
sub
pushl
nop
movsb
lea
in
cmpsl
fs
scas
fadds
mov
or
cli
cmp
pop
in
jle
jne
adc
mov
cmp
xor
xchg
inc
sub
mov
jb
xor
gs
mov
aas
add
inc
push
ljmp
or
inc
mov
and
ljmp
push
adc
sbb
out
and
in
dec
insb
inc
sub
mov
pushf
loope
mov
inc
incb
jp
xchg
gs
test
mov
negb
push
mov
jnp
push
daa
scas
jnp
popf
cmp
dec
pushf
sbb
push
mov
inc
inc
popf
push
vpaddq
lahf
jbe
jp
pop
xchg
cmc
or
xchg
mov
vpmuludq
and
push
add
add
loopne
xchg
mov
jbe
push
xchg
fisubrl
stos
jnp
dec
ret
test
shrl
add
inc
int3
or
int
push
jae
dec
push
fsubr
mov
mov
mov
nop
sub
add
out
mov
sub
mov
xchg
and
loope
jmp
cmp
adc
push
inc
and
push
mov
movsl
cltd
bound
rolb
xor
mov
jle
add
fs
out
mov
xor
icebp
xor
lea
mov
lcall
daa
fcomps
addr16
shlb
test
shll
push
pop
pusha
xor
cmp
sub
adc
and
movsl
icebp
imul
imul
pop
mov
sbbl
add
mov
xor
xchg
pop
ja
xchg
aad
aas
fnstsw
jb
mov
or
lds
dec
fidivrs
mov
negb
repz
jb
sub
rcrb
jecxz
dec
cwtl
outsl
dec
add
dec
lods
rorl
xchg
xor
ret
xchg
adc
jge
xchg
cli
mov
test
test
dec
test
jo
test
repnz
int3
int3
or
push
or
jnp
add
mov
or
jle
sbb
inc
mov
jmp
mov
fstpl
jg
xor
pusha
xor
std
out
repz
mov
mov
sbb
loope
pop
push
inc
mov
inc
out
int3
mov
stc
inc
in
add
mov
test
inc
in
add
mov
pop
add
mov
gs
into
mov
adc
or
inc
sub
mov
shrb
jl
call
cltd
loope
pop
xchg
inc
jns
push
and
dec
enter
jns
dec
push
fwait
loop
cld
test
jno
cmp
mov
mov
add
lods
out
rcrb
stc
mov
pop
dec
cli
inc
roll
lock
fildll
pop
push
push
sub
out
or
sarl
repz
out
jg
sub
adc
movl
jnp
xchg
movsb
push
jno
sub
les
lret
flds
jae
mov
lods
xor
xor
div
jne
enter
loopne
inc
imul
xchg
xchg
pop
jo
push
push
sub
adc
or
adc
fistps
js
lret
mov
test
pop
loope
lock
sub
cs
cmc
aad
dec
sbb
adc
repnz
mov
xor
cmp
in
andb
cmp
cmpsl
jp
push
test
cs
out
mov
jo
push
imul
inc
mov
popf
xor
pop
mov
push
lcall
ljmp
mov
mov
call
jge
outsb
mov
jl
jno
sub
call
aam
pushf
jl
cmp
movaps
cmc
and
mov
lcall
pop
mov
mov
and
and
daa
movl
cld
test
add
add
sub
mov
cvtpi2ps
cmovl
out
mov
dec
xchg
out
pop
test
or
lods
out
rolb
jnp
lds
loop
mov
jl
inc
lock
ljmp
cwtl
lret
dec
outsl
daa
cmp
fwait
rolb
jns
loopne
adc
pusha
jno
adc
xchg
and
sub
inc
in
jae
mov
cli
push
insb
mov
pop
out
jne
mov
sbb
push
jle
daa
push
jmp
call
ret
std
ret
jmp
push
sub
ds
xchg
lock
sbbb
adc
or
pusha
mov
sbb
push
in
das
push
and
push
add
scas
cmp
cmpl
clc
push
xor
fs
mov
push
mov
xchg
pop
pop
xor
aam
cmpb
stc
xchg
call
inc
jbe
lods
test
enter
repnz
pushf
jmp
mov
pop
pop
mov
rol
pushl
dec
xchg
add
std
in
lahf
mov
pushf
jns
shlb
orb
les
cwtl
lea
outsb
pop
repz
mov
add
push
fs
fsubrs
jp
shll
call
outsl
out
or
sbb
shl
mov
inc
or
mov
sub
and
movsl
jp
adc
fbstp
sub
sarb
faddl
adc
or
aaa
cmp
jns
mov
jmp
pop
or
pop
rclb
pop
aad
imulb
data16
and
into
sbb
in
int3
adc
fcmovbe
adc
in
loopne
jl
cmp
sub
out
or
xlat
fisubrs
fistps
xorb
lods
jecxz
lock
in
xor
das
dec
jl
push
pusha
add
push
fwait
cs
into
xchg
add
rcrl
orl
sub
adc
xchg
mov
lods
icebp
fs
aas
mov
pusha
ja
pop
jns
jbe
adc
fdiv
mov
dec
arpl
cmp
dec
insl
sbb
push
jno
mov
pop
mov
repnz
cli
out
lds
sbb
pop
push
jle
fistps
mov
sub
pop
sub
stos
xchg
nop
push
das
or
jmp
rcr
add
pop
or
mov
add
mov
mov
sbb
ret
icebp
cli
xchg
fldl
mov
mov
xchg
std
lret
mov
push
sbb
daa
ret
xchg
pop
popfw
adc
addb
cmp
arpl
fldt
push
test
adc
push
stc
in
sarb
ret
cmc
es
pop
clc
inc
sbb
pusha
jge
repnz
ret
adc
insb
mov
nop
pop
mov
in
shr
sbb
inc
testb
sub
out
xchg
jne
adc
push
push
dec
dec
cmp
xorb
adc
nop
xor
das
outsb
adc
lret
jl
pop
adc
pop
pusha
scas
push
stos
mov
out
sub
fmul
xchg
sbb
push
inc
push
or
sub
stc
mov
sub
mov
mov
stos
push
fwait
daa
lds
cs
dec
in
cmp
movsb
sbb
jbe
mov
sbb
adc
es
dec
xchg
mov
in
pop
mov
pop
add
mov
xor
lea
faddl
sahf
sub
rol
jns
add
mov
jmp
cmpsb
jbe
pop
cmp
test
cmp
cltd
pushw
in
sbb
inc
xorl
push
fstpl
fwait
jbe
sbb
mov
test
inc
test
push
inc
ljmp
cli
xchg
je
jecxz
jbe
ds
fldl
push
shrb
pop
sbb
and
cmp
pusha
push
stos
es
dec
inc
cmp
inc
mul
stc
arpl
gs
jmp
mov
or
les
and
jmp
xchg
js
adc
or
cli
cmp
mov
mov
and
sub
scas
jno
and
add
sbb
mov
mov
push
mov
dec
xlat
repnz
or
jne
xlat
jl
fdivrl
mov
repnz
jge
sub
mov
jge
jae
sub
add
lock
data16
sbb
insb
add
cmp
jecxz
addr16
pop
or
mov
pusha
cmp
add
dec
pusha
xchg
push
or
add
out
mov
dec
pop
adc
aaa
push
mov
movsl
inc
inc
pusha
scas
out
pop
or
imul
sub
lcall
std
adc
ret
lret
aas
test
cmp
sbb
popf
cwtl
les
jle
and
icebp
dec
cld
outsl
lea
ficoms
cmp
add
in
mov
repnz
sub
aas
in
add
mov
lods
jne
inc
xchg
test
lock
xor
mov
popa
test
push
mov
aad
jae
fs
jp
cmp
xchg
dec
jno
std
aaa
scas
js
adc
aaa
push
sbb
mov
out
aas
lahf
add
add
xlat
jae
jecxz
mov
in
lret
inc
mov
dec
scas
in
xchg
lds
std
mov
out
jnp
xchg
jb
dec
shrl
insb
test
xor
data16
pop
shrl
jge
mov
push
mov
lock
mov
xchg
cmc
inc
push
mov
loope
mov
outsb
mov
sub
test
div
lods
pop
or
cltd
in
jnp
inc
int
sbb
mov
in
sub
and
mull
into
lods
je
roll
mov
dec
ret
mov
lcall
rol
dec
dec
or
into
mov
push
inc
lret
inc
in
sub
and
fistps
fisubrs
insl
fwait
adc
jl
mov
pop
out
fstps
insl
xor
test
mov
ror
test
sbb
pop
lret
adc
sbb
stos
in
hlt
push
mov
or
call
cmovp
std
xor
out
arpl
hlt
add
cmp
mov
add
outsl
push
das
fnsave
stos
lods
sbb
xor
sahf
inc
aaa
ret
lock
adc
jp
in
mov
xor
popa
adc
dec
mov
mov
imul
rolb
mov
jle
push
pop
in
andb
and
pop
or
rolw
test
sbb
repz
sbb
sbb
testb
pop
mov
lea
jb
sti
xchg
scas
leave
sub
clc
lret
sub
sbb
push
jns
clc
jae
cltd
arpl
xchg
or
test
xchg
cmc
adc
data16
mov
push
imull
hlt
test
jnp
dec
ss
roll
inc
jb
rclb
jne
jnp
xor
pop
push
jg
mov
dec
insb
cmp
add
xor
fwait
cli
jne
xor
lret
xor
dec
jge
xchg
fcmovnbe
or
sub
xchg
mov
lahf
sti
aas
xchg
sbb
push
xlat
adc
imulb
xchg
jne
push
cwtl
push
push
adc
pusha
jae
loopne
cmp
test
jl
fimuls
cmc
bound
mov
add
jno
jbe
mov
xchg
sbb
out
pop
aad
addr16
je
push
sub
pop
test
cmp
mov
cmp
aam
movsb
sahf
or
in
popa
pushf
incb
push
lahf
hlt
aas
mov
das
ljmp
mov
mov
sub
and
movntq
xor
std
and
aaa
js
xchg
mov
inc
hlt
popf
mov
and
lcall
sbb
or
cmc
lcall
std
xchg
lds
addr16
repnz
and
jge
mov
lcall
jne
repnz
mov
adc
lahf
push
hlt
int
inc
scas
push
jl
pop
jns
cmc
mov
ret
xorl
cmp
xchg
dec
mov
sbb
icebp
xchg
sub
sub
ja
ret
in
pop
and
push
jae
xchg
add
xchg
lods
and
test
jg
pop
dec
mov
xchg
adc
cld
cwtl
mov
push
aas
imul
push
out
cmpsb
xchg
imul
mov
imul
or
push
std
inc
add
add
xchg
cmpsb
out
jno
pop
jno
mov
hlt
xor
dec
daa
inc
sbb
adc
cld
icebp
jmp
jno
test
add
adc
sub
repz
add
mov
pop
push
fisttpl
push
cmp
lods
subb
mov
cmpsl
mov
test
dec
rcl
or
dec
movsl
add
fistpll
int3
xor
out
lea
mov
incb
dec
cmp
test
cmp
cmpsl
ficompl
and
cmp
test
or
xor
repz
fdivl
loopne
scas
rclb
pushf
xchg
xchg
inc
xor
addr16
call
xor
shlb
ret
inc
lahf
mov
ja
or
inc
jbe
push
jl
adc
sub
mov
xor
fsubrs
pop
jl,pn
insl
adcb
and
sbb
das
daa
cltd
mov
inc
gs
aaa
mov
xlat
cli
pop
cltd
pop
xchg
cmp
add
xor
push
pop
arpl
fst
inc
cwtl
mov
push
lock
pop
popa
lahf
out
add
inc
xorb
cmp
sub
xlat
and
test
in
push
scas
push
fsubr
fs
stos
xor
jbe
pushf
dec
mov
or
adc
add
add
icebp
nop
sub
imul
aas
add
rcl
roll
or
pop
mov
xchg
fldenv
in
lret
lret
push
cmp
sbb
out
repnz
daa
je
cmp
xor
mov
mov
lret
test
push
stos
pop
mov
dec
inc
cmp
xor
push
sub
and
ds
test
cmpsb
out
inc
lret
in
call
cmp
adc
add
or
pop
xchg
xor
jecxz
fcoms
pop
sbb
outsl
xchg
rorl
inc
push
inc
aas
pusha
xchg
push
jmp
pusha
inc
out
add
sbb
loope
ficompl
inc
rol
lods
ljmp
cltd
sub
lods
cmp
mov
fistps
cmpsb
mov
push
ja
jns
js
mov
pop
cmp
jecxz
xchg
scas
cs
int3
addb
adc
mov
add
shr
imul
cmp
add
jns
rcl
into
mov
test
or
push
addb
lods
push
adc
push
outsb
hlt
mov
nop
mov
ja
inc
subl
cmp
jnp
loope
dec
mov
insl
sbb
pop
subl
aad
out
pop
je
jne
das
mull
mov
xor
mov
or
xchg
out
adc
xchg
sub
enter
roll
ds
push
xchg
inc
call
mov
cmp
inc
sub
pop
out
cmp
push
inc
ret
jle
jl
push
cmp
shl
fs
mov
test
cmc
cmp
clc
cli
fiaddl
xchg
out
inc
cmp
les
scas
or
stos
shll
sub
orb
repnz
add
aam
cmp
or
sub
mov
popl
je
gs
inc
fs
in
out
or
mov
pushf
ljmp
jb
loopne
jecxz
dec
adc
push
mov
inc
psadbw
jmp
leave
inc
jo
dec
xchg
push
jecxz
jns
jno
std
jae
mov
es
dec
sahf
mov
sub
or
add
test
sub
repz
adc
pop
dec
xchg
push
rclb
loope
inc
cmp
popf
fs
fbld
aam
xor
sub
push
rclb
sbb
push
mov
outsl
stc
sub
jae
pop
push
add
lcall
mov
push
cmp
int3
sub
jp
inc
xchg
push
cmp
int3
xchg
sub
jne
jge
and
sbb
fistl
cs
push
andnps
sbb
jbe
mov
shrb
mov
les
pop
xchg
cmp
inc
in
popf
dec
or
fdiv
movsl
and
popf
lock
cmp
adc
ljmp
xlat
fwait
pop
push
cwtl
push
dec
in
xor
in
repnz
xor
xor
and
pop
cmp
xadd
addr16
jecxz
movl
sbb
jmp
push
push
ja
pop
addl
mov
sbb
cmc
pop
jp
inc
dec
stc
ret
push
xor
push
int
fmuls
xchg
sub
cmpsl
leave
mov
scas
bound
rorl
jg
mov
dec
inc
cltd
outsb
cs
jl
out
xchg
rcll
gs
push
pop
sbbb
xor
inc
push
cmp
pop
push
daa
adc
out
sbb
in
xor
jns
daa
std
lret
jbe
push
scas
push
fisttpll
std
ds
adc
sub
cmp
rcrb
mov
and
dec
jle
stc
adc
push
and
cmp
xlat
in
inc
push
push
das
cmp
sbb
lret
xchg
xchg
jae
aam
mov
xlat
sbb
into
mov
scas
out
iret
pcmpeqw
mov
in
mov
sub
mov
jno
das
xor
lahf
ret
mov
in
inc
lea
jb
or
mov
inc
fwait
and
pop
sahf
pop
in
and
mov
jae
in
xchg
sbbl
sti
mov
push
roll
fdivrp
add
xor
push
je
mov
sbb
add
inc
idivl
jmp
shll
ret
jecxz
jmp
stos
ret
test
in
aas
in
mov
inc
aaa
mov
aaa
mov
pop
fmul
mov
imul
sub
pusha
cmp
fiaddl
out
rol
xorb
roll
add
out
mov
ja
stos
or
jbe
and
inc
mov
push
jl
fcompl
mov
dec
cltd
cmp
aas
pop
repz
cmp
ret
jge
sti
sub
and
sub
pusha
lret
int3
push
xchg
pop
cmpsl
test
jno
scas
xor
mov
int3
arpl
mov
clc
cltd
and
cltd
mov
push
and
icebp
in
sbb
pop
lods
mov
mov
mov
call
xchg
adc
aam
cwtl
ja
out
mov
or
fdivrl
andb
out
cmpsb
mov
jae
push
outsb
out
aam
adc
add
insl
adc
mov
inc
add
aas
push
push
das
stos
xchg
pop
mov
aas
pop
cmp
addr16
scas
mov
jl
incl
inc
addr16
fisttpl
pop
andl
iret
daa
add
sbb
cmp
xor
or
in
jg
int
and
add
mov
rcll
and
mov
ret
pop
cltd
or
jae
mov
addl
ret
stc
popa
scas
jmp
adcl
pop
arpl
inc
mov
std
iret
cwtl
daa
push
dec
jle
mov
sub
and
mov
js
aam
jg
rorl
mov
sar
add
inc
jecxz
ds
xor
jg
xchg
cmp
mov
andb
push
adc
insl
add
or
in
es
and
dec
inc
shll
insb
loop
dec
enter
fld
mov
mov
leave
imul
lock
cmp
jmp
sub
lcall
stc
fildl
mov
clc
in
aad
sub
jp
jne
in
nop
pop
sbb
jno
sub
mov
xchg
stos
dec
daa
aas
jmp
mov
rcrb
add
std
enter
stos
addl
insb
cwtl
jne
fdivr
call
inc
mov
std
rorl
cld
outsl
push
icebp
jb
sbb
fsubs
fbld
inc
aas
jmp
sbbl
in
mov
lcall
xchg
sti
cmp
jb
ss
inc
insb
movsb
adc
popa
fsubrl
fstp
in
scas
test
push
xchg
push
int3
push
jne
cmp
icebp
add
add
daa
pushf
mov
jle
push
pop
test
lds
es
out
jp
test
xchg
xorl
mov
xchg
inc
push
pop
loop
scas
cld
shll
mov
cmc
xchg
repnz
js
int3
scas
nop
sub
int
and
xchg
jnp
push
scas
push
test
loopne
lahf
aad
xor
xlat
push
icebp
fsts
mov
clc
arpl
xor
jns
mov
out
jg
and
stos
inc
pushl
sub
inc
mov
lret
push
bnd
shrb
loopne
sub
rcrl
jmp
jge
je
addb
outsb
jmp
or
icebp
dec
or
dec
scas
imul
or
mov
cmp
adc
pop
mov
push
xchg
cmp
jne
pop
push
sbb
lock
addr16
scas
pop
call
sub
mov
fiaddl
sarl
sbb
jl
jns
popf
push
mov
jno
movsl
cmp
ja
call
out
test
mov
jns
js
mov
lcall
sub
adc
imul
test
add
inc
sub
or
cli
out
jle
mov
mov
mov
negl
jb
xchg
xchg
mov
movsl
loop
sub
add
inc
das
repnz
sub
std
test
hlt
xor
test
jmp
push
stos
fwait
dec
fbld
mov
inc
das
pop
pushf
sub
fisubs
pop
mov
stos
sub
fmul
insl
inc
stos
jns
xchg
sbb
rorl
scas
repnz
mov
or
lods
jle
or
xchg
imul
call
jno
movsl
jecxz
jnp
adc
stc
fildll
lcall
gs
jmp
hlt
mov
movsl
mov
jmp
mov
movaps
sbb
lods
scas
dec
in
sub
mov
lods
xchg
mov
xchg
out
or
div
out
cld
adc
imul
call
ljmp
shrb
std
jno
stos
inc
sbb
mov
in
sahf
adc
mov
outsl
jl
aaa
call
nop
inc
xchg
pusha
add
lds
push
push
icebp
mov
nop
dec
dec
fidivs
lahf
sub
pop
out
push
ffree
push
imul
outsb
jno
loop
popa
mov
xor
out
push
test
jecxz
mov
push
add
cwtl
cmpsb
mov
sub
lods
add
iret
mov
dec
pop
shrl
push
addb
inc
jae
mov
cwtl
push
adc
xchg
outsb
out
pushl
std
cmp
out
aaa
imul
sbbl
rcl
pop
inc
cmp
aam
add
mov
or
pop
push
daa
jge
pushf
mov
scas
push
pusha
jne
lret
andl
cmp
mov
mov
outsl
push
ljmp
or
imul
movlps
es
add
cmpsl
mov
mov
push
fnsave
jbe
jnp,pt
push
add
mov
dec
jge
je
mov
jmp
stos
inc
sbb
sub
push
xor
loopne
jne
mov
mov
inc
push
shll
call
jp
sub
subb
cmc
jne
or
lcall
es
add
sahf
inc
lea
sub
rcrb
or
sbbl
mov
cmpsl
dec
ret
add
je
pop
fldt
icebp
stos
push
jns
in
xchg
rcrl
fidivrs
sbb
jp
outsb
fidivrs
imul
pop
xor
add
jp
adc
jg
mov
cmp
dec
jno
cmp
pop
and
xchg
push
inc
adc
sub
testl
aas
cmp
sti
xor
jmp
std
add
adc
push
xor
or
xchg
push
inc
sahf
xchg
int3
inc
pop
fstpt
xorl
ret
and
fs
lock
xchg
jae
sub
mov
rorl
adc
sub
test
sbb
push
xchg
in
test
fidivrs
fcoms
imul
rcrl
out
mov
mov
xor
and
adc
into
sbb
adc
dec
or
pushf
sti
xor
or
pop
fdiv
repz
repnz
addr16
sub
adc
sub
xchg
test
pop
jecxz
dec
loop
cmp
dec
dec
push
dec
mov
movsl
cs
ja
adc
int3
or
std
mov
je
jmp
adc
mov
or
outsl
dec
addr16
pushf
add
loop
pop
and
xor
addr16
xor
mov
mov
mulb
into
lods
aaa
push
push
jecxz
sub
xchg
fldt
cmpsl
loopne
enter
out
adc
cmp
out
mov
mov
jae
aaa
mov
imul
cmp
xchg
lcall
scas
xchg
mov
loopne
div
add
xor
stos
shr
push
inc
add
or
fwait
cwtl
rcll
sub
hlt
mov
test
pop
inc
jmp
outsl
inc
lds
push
sbb
pop
aaa
inc
cmp
out
pop
out
dec
lret
roll
xchg
sbb
inc
xlat
push
shll
in
lods
sbb
and
jge
mov
inc
scas
cmp
adc
push
pop
test
lods
out
aas
ljmp
push
js
jg
jmp
movsl
jne
jbe
mov
mov
adc
fiaddl
sbb
jbe
imul
adc
dec
fs
mull
add
popf
dec
mov
test
add
in
sarl
popa
out
out
dec
jno
jno
push
cmp
sbb
mov
mov
fmull
pop
scas
lds
cwtl
addr16
out
clc
and
mov
mov
insl
jl
out
or
mov
es
sti
test
jae
cmc
in
je
or
or
pop
fidivs
call
lcall
mov
sti
push
enter
test
aad
lret
inc
pop
cld
sub
call
stos
xchg
sbb
in
mov
fwait
lea
xor
stc
push
xchg
pop
ss
adc
test
add
movsl
pop
cmp
fsubrs
push
ficompl
cld
idivl
or
rolb
push
sbb
xchg
fidivl
mov
add
xchg
pop
push
std
pop
and
pushf
outsl
loope
add
mov
inc
mov
add
lcall
push
popf
mov
vsubps
dec
sbb
push
js
add
lahf
pop
test
cs
xchg
popa
mov
jno
fwait
test
mov
lea
ficoms
test
imul
cmp
inc
push
jnp
orb
icebp
mov
das
fcomps
dec
mov
mov
test
dec
cmp
repz
clc
loopne
lahf
aam
jb
movsl
pop
cmc
insb
dec
adc
jl
in
inc
sbb
dec
aas
mov
mov
or
shll
in
mov
mov
jb
cmp
loop
push
and
jns
inc
xchg
and
out
fcoml
cltd
lock
push
popa
add
cmp
into
popa
add
sarl
and
clc
xchg
mov
sbb
sarl
sbb
dec
push
or
push
test
jmp
mov
cwtl
jns
js
mov
jae
lret
mov
mov
loopne
mov
stc
lock
packssdw
xchg
or
mov
cmp
leave
and
jp
arpl
jo
ja
fisubrs
enter
cwtl
jecxz
xchg
add
adc
jno
inc
sbb
sbb
push
hlt
pop
je
dec
movsl
mov
ljmp
insl
jnp
arpl
fdivr
lods
cmp
jge
out
popa
fs
call
xor
cli
and
scas
cmpsb
pop
jp
push
xorl
gs
add
xchg
inc
xor
pop
nop
aas
testl
in
mov
mov
stc
fistl
jae
mov
insb
dec
mov
inc
addr16
pop
jl
sbbb
xchg
scas
dec
dec
shrl
into
xlat
in
cmp
mov
jbe
add
inc
and
leave
jb
sub
push
push
in
ret
push
push
addr16
and
push
dec
dec
movsl
jo
mov
push
mov
inc
repz
push
std
lahf
or
push
cs
ss
mov
rolb
stc
divl
popa
aas
test
push
cmpsl
adc
mov
arpl
and
std
mov
sub
adc
outsb
movl
inc
push
push
xchg
jecxz
scas
mov
fsubrl
adc
inc
mov
hlt
out
xchg
lods
push
adc
push
and
pop
test
pop
idivl
add
push
jmp
mov
cmpb
loope
xchg
out
or
cmpsl
jge
cs
xor
popf
sub
adc
popa
int
aaa
stc
cmp
inc
andl
jg
nop
mov
ret
cmpsb
push
or
daa
pop
adc
push
cltd
xchg
push
mov
push
pushf
mov
lcall
lcall
mov
fildl
outsb
sti
out
cmpsb
push
sbb
pop
lock
xchg
and
pusha
mov
cmc
and
push
popf
mov
shlb
inc
pop
adc
clc
push
inc
mov
sub
xor
cvtps2pi
or
ds
ret
sti
push
ret
cmp
xchg
test
cmp
push
push
add
inc
push
mov
lret
mov
es
pop
dec
lcall
cmp
leave
pop
add
pop
mov
push
sub
push
xor
jle
adc
sbb
fistps
cmp
dec
cli
xlat
add
jg
mov
mov
ss
inc
mov
enter
fdiv
pop
xchg
xchg
fisubrl
inc
aad
adc
xor
xchg
or
outsl
mov
frstor
fidivrs
jg
and
mov
mov
js
fwait
into
xchg
sbb
push
arpl
push
mov
dec
pop
jl
enter
test
icebp
jae
lcall
cmpsl
scas
mov
sahf
stc
inc
inc
jne
pop
jge
xchg
add
jno
cmpsb
add
lret
lcall
xchg
pop
mov
push
loopne
js
lods
mov
and
cli
jns
mov
lds
cwtl
fcoml
xrelease
or
and
ror
cltd
sbb
jno
lea
xchg
jge
push
jecxz
inc
mov
jb
addb
stos
out
jns
outsb
mov
lods
fsubr
lds
enter
sbb
pop
imul
mov
jmp
rorb
stos
cmpsl
adcb
aam
mov
adc
rcrb
cmp
in
aas
cwtl
cmc
sub
and
pop
cmpb
push
pushf
je
loopne
push
jmp
cwtl
notb
mov
mov
inc
inc
or
in
push
xchg
ljmp
xchg
test
adcl
add
and
lods
sub
shrb
imul
or
mov
int3
ret
push
je
mov
add
mov
or
inc
scas
mov
nop
lcall
outsl
into
clc
stc
inc
pop
push
mov
cld
inc
sub
addl
out
xchg
sub
outsl
das
mov
ja,pt
mov
jno
and
das
mov
stos
popa
sub
sub
test
push
int
int3
repnz
out
dec
inc
push
rcl
fs
aam
mov
xchg
and
jbe
add
adc
mov
xor
lahf
ljmp
sub
xchg
mov
push
xchg
out
mov
lahf
hlt
push
jg
icebp
dec
xchg
sahf
xchg
push
aad
push
in
push
das
iret
mov
std
pusha
mov
fcompl
pop
mov
mov
clc
mov
dec
aaa
stos
inc
repnz
and
mov
pop
aam
cmp
push
cli
mov
xchg
cmp
jne
and
arpl
pop
dec
in
push
or
adc
das
push
cmp
inc
fidivrl
xchg
xor
cmp
es
push
jmp
lds
sub
sub
ja
mov
push
mov
loop
out
xor
xchg
cmpsl
out
das
add
sbb
xchg
push
mov
jno
icebp
dec
mov
int3
and
or
test
push
sbb
lret
xchg
xchg
je
scas
sarl
jne
iret
xchg
mov
cmpsb
ss
jmp
mov
cltd
dec
cmpsl
repz
mov
pop
jns
xor
and
add
addr16
add
ja
dec
movsl
lahf
shl
js
mov
negb
mov
dec
pop
jp
mov
jo
mov
sub
dec
mov
push
add
inc
shl
push
inc
xchg
sbbb
fcompl
enter
and
loopne
and
xor
ftst
cmpsl
fdivs
arpl
and
inc
test
push
cmp
cmc
pusha
and
sub
sub
in
xor
mov
fimull
xchg
std
push
add
popf
les
mov
lcall
lods
xchg
or
adc
inc
jno
or
xor
push
xor
in
lds
sub
ss
lods
ljmp
arpl
adc
ja
dec
aaa
dec
fstpt
mov
adc
scas
out
fs
cmp
sub
in
jno
xlat
fwait
sub
push
push
shl
add
jne
mov
in
ds
sbb
aas
fisubl
lods
mov
mov
mov
ja
stos
cmp
test
xor
lret
test
lock
js
sub
cmpb
or
add
xor
cltd
or
pop
jge
outsb
mov
ret
fmul
lret
pop
lods
inc
lret
adc
test
and
cltd
mov
iret
fbld
das
lret
cltd
dec
mov
mov
and
test
in
movsb
sbb
das
mov
or
mov
fidivrs
movsl
inc
imul
mov
jle
dec
mov
stos
push
insb
mov
clc
aad
adc
mov
mov
nop
jae
mov
dec
mov
shll
xchg
aas
stc
sbb
frndint
mov
into
jns
lret
dec
xlat
xchg
cmpsl
sub
rcrb
jne
ljmp
xor
imul
loop
xlat
movsb
fistpll
insb
test
sbb
cmpsb
pop
jecxz
cwtl
leave
iret
mov
sahf
push
ds
push
cmp
dec
push
sub
into
test
imul
sbb
decb
movsb
lods
sahf
or
mov
inc
fs
cmp
dec
aam
ffreep
lds
mov
sub
ficompl
insb
test
xlat
and
lods
aaa
fldl
pop
mov
icebp
adcl
sbbl
xor
test
mov
jle
in
sbb
add
dec
popa
int3
rcrl
xor
insb
leave
icebp
movsb
add
nop
hlt
or
jae
das
pop
jl
lahf
jg
scas
jg
add
push
loop
mov
push
lcall
sub
lods
repz
cwtl
cmc
ss
into
subb
dec
in
dec
pop
aam
rcrl
dec
popa
mov
cmp
mov
loop
mov
gs
cmp
xor
sahf
fs
enter
stos
inc
dec
out
in
push
xlat
mov
pop
pop
xor
xchg
cwtl
test
and
dec
aas
outsb
cmp
sbb
mov
movsb
imul
adc
popf
iret
jge
mov
lret
xchg
cmp
jno
pusha
lcall
lds
popa
mov
mov
sbb
dec
mov
inc
cmp
push
mov
jecxz
sbb
mov
sbb
cmp
inc
repnz
mov
sbb
jecxz
or
lret
xchg
cwtl
daa
sbb
ds
sbb
sbb
jmp
jmp
and
outsb
jecxz
xchg
enter
push
push
insb
jecxz
das
aaa
or
int3
gs
dec
cmp
add
sbb
pusha
sbb
addb
mov
add
mov
lea
mov
mov
imul
jnp
mov
xor
dec
cmc
out
sbb
jb
les
popf
xchg
loop
pop
popf
sub
pop
pop
lret
ja
mov
dec
sub
notb
mov
fistl
orb
addl
or
pop
mov
cmp
pop
daa
mov
sbb
xlat
xchg
pop
cs
add
sbb
insb
mov
jmp
not
cmpl
dec
sahf
lods
pop
arpl
and
out
xor
adc
ficomps
test
scas
fsts
cmpsb
adc
jno
pop
ja
push
jg
push
fnstcw
clc
stos
stos
inc
adc
nop
imul
and
inc
jno
push
aaa
std
and
jbe
sbb
and
add
push
xchg
addr16
sbb
lret
roll
jmp
pop
mov
pop
cmpl
das
out
xor
js
push
arpl
sbb
test
cltd
push
inc
push
push
iret
pushf
pop
pop
fistl
jbe
push
xchg
lcall
sbb
mov
or
insl
xchg
lcall
mov
mov
rcrl
mov
insl
mov
sub
mov
sbb
in
loopne
popf
sahf
test
or
mov
adc
clc
iret
scas
and
shl
jb
cmp
pusha
mov
jecxz
loope
insl
pop
inc
cltd
scas
test
in
dec
ja
jl
jb
mov
cmp
push
ja
pop
in
sbb
jge
cmc
rcll
cmp
pop
daa
rclb
inc
mov
shrb
mov
int3
arpl
adc
jmp
xor
jmp
sub
add
mov
push
fdivr
lods
popf
mov
add
arpl
push
fcoms
leave
dec
inc
xchg
pop
daa
jns
jl
ja
inc
scas
and
out
xchg
jo
pop
es
mov
sbb
xor
and
rorl
gs
in
lcall
jno
inc
loope
hlt
sub
pushl
push
pop
out
test
sub
aam
push
pushf
popa
mov
mov
jg
scas
jns
sbb
fs
push
add
std
mov
into
and
ljmp
movsl
push
fldl
rcl
ret
repz
lods
mov
fnstsw
cltd
mov
or
fstpt
mov
cmp
in
in
dec
jmp
stc
cmp
inc
mov
cmpsl
adc
jae
fucomp
push
popf
pop
jecxz
mov
std
mov
xorb
pop
mov
es
sub
xchg
out
cwtl
mov
in
aad
aaa
jge
clc
mov
daa
imull
push
out
rorb
aam
xchg
jle
loop
pop
jp
xchg
repz
dec
repz
cmp
mov
rcrb
out
test
and
mov
jg
or
xor
sahf
adc
fldenv
mov
sti
push
mov
cs
jp
daa
pop
popf
addr16
scas
jge
and
inc
sahf
inc
jge
xchg
leave
jb
je
adc
aad
out
addl
mov
dec
dec
push
aaa
dec
out
mov
sub
repz
inc
sbb
mov
call
sbb
mov
inc
data16
and
xchg
mov
xchg
pushf
jns
es
lock
bound
icebp
fdivs
jge
xchg
test
mov
stos
or
fucomi
and
and
xchg
ljmp
in
ljmp
cmp
out
js
inc
imul
and
jge
popf
les
dec
xor
adc
mov
mov
out
adc
cltd
rcrb
out
mov
mov
neg
cmp
inc
adc
cld
loopnew
push
cmp
adc
push
inc
mov
lret
repz
fnstenv
sbb
pop
sti
xchg
mov
nop
orb
insb
add
jne
dec
ljmp
sub
not
lahf
test
test
out
jl
ljmp
in
adc
jno
das
movsl
imul
adc
add
fwait
insl
mov
jno
jmp
mov
divb
jno
test
push
xchg
cltd
or
or
mov
leave
sbb
adc
icebp
pop
sar
lret
add
inc
test
pop
pop
inc
jbe
das
jae
sub
das
push
ds
lods
daa
add
loop
incb
aas
scas
fsts
sub
mov
jbe
xorb
xchg
test
sti
jb
lret
aas
jno
jns
test
adc
lods
jne
mov
push
mov
lods
add
nop
lea
xchg
xchg
push
fstpt
fucomp
pop
cmp
rclb
cmp
aas
xor
adc
mov
mov
lock
dec
xor
mull
jge
fisttpll
jne
add
ss
dec
xor
xor
daa
cmp
xchg
sbb
xchg
in
inc
lret
ljmp
mov
xchg
aad
sbb
mulb
stos
mov
xor
adcl
mov
jo
add
jmp
jb
dec
cli
or
clc
adc
xor
push
cmpsl
add
cmc
nop
jnp
enter
in
pop
test
pop
jne
fidivrs
push
sbb
insl
xchg
push
xor
sbb
inc
inc
mov
aam
lret
xor
lcall
mov
sti
sbbl
pop
in
inc
xchg
enter
fucomip
mov
test
insl
cld
jg
cltd
loopne
jle
and
ret
push
out
sub
aam
mov
xchg
ficompl
push
insl
insb
push
xchg
test
arpl
jbe
or
jecxz
jae
data16
stos
dec
lods
xor
ret
repz
inc
jge
dec
xor
jns
int3
cmc
dec
xchg
into
stos
mov
and
xor
aas
push
push
add
enter
roll
fldenv
ror
cmp
dec
xor
gs
daa
xchg
dec
pop
mov
jbe
pop
xchg
mov
gs
mov
xchg
jne
cld
lret
pop
pop
jns
sbb
mov
or
andb
jl
cli
mov
icebp
out
xor
inc
dec
lock
jno
or
icebp
and
fstps
sahf
sub
push
testb
add
sbb
pop
andl
daa
dec
xchg
mov
arpl
pusha
ljmp
cmp
fistpl
xchg
push
dec
clc
test
push
hlt
xor
push
pop
jo
outsb
xlat
out
xlat
outsl
mov
dec
or
dec
push
adc
shrl
dec
push
and
xor
xorl
lods
dec
pop
add
add
arpl
or
cmp
frstor
shlb
mov
pusha
cmp
mov
cmp
or
ficoml
cwtl
cmp
out
jns
fdivs
xchg
pop
ja
mov
dec
fnsave
popa
mov
sub
stos
sbb
adc
fs
cs
xor
inc
test
adc
roll
call
lods
int3
fnstsw
aad
in
cmovne
aad
and
imul
ret
or
push
mov
pop
dec
test
or
mov
sti
lods
xchg
test
inc
cmpl
xor
scas
ret
or
and
stc
loop
roll
cmp
test
lret
shr
cmp
mov
pop
aad
std
push
mov
push
cwtl
aad
pop
cmp
cmp
lcall
out
mov
push
int3
inc
and
push
jae
cwtl
gs
lcall
in
xor
mov
add
sbb
xchg
mov
fildl
ljmp
or
out
cmp
jbe
lods
xlat
add
adc
lret
lds
dec
push
push
push
push
inc
sub
push
int
test
movsb
xchg
push
sub
stos
sbb
xor
inc
mov
cmpsl
add
sahf
cmpl
and
mov
loope
cmp
ja
sets
popa
loopne
sbb
mov
in
dec
xor
xor
outsl
sarb
or
mov
xor
or
call
loop
cli
call
mov
fs
mov
lds
sbb
or
testl
aam
xor
sbb
enter
inc
pop
dec
push
daa
or
inc
pop
sbb
cmp
push
pushf
imulb
loope
inc
sub
fbld
sub
clc
xchg
mov
cmp
ret
pusha
push
cmp
addr16
fists
jns
inc
mov
pop
je
jl
dec
test
xchg
adc
cmp
mov
movb
je
fldz
arpl
popf
cltd
ret
push
fildll
dec
adc
int
pop
cmpsl
cld
repnz
mov
mov
or
xchg
ffreep
pushf
hlt
push
ret
fildl
pop
loope
sub
dec
lods
jns
insl
jns
ds
inc
mov
push
out
pushf
repnz
mov
jb
mov
mov
imul
into
aam
insb
xchg
aad
lahf
lret
xor
mov
fists
add
fstpl
fwait
jecxz
scas
inc
cs
dec
pop
cs
enter
pop
into
lods
mov
out
dec
fcmovnu
xchg
cmp
inc
xlat
mov
or
lcall
addr16
push
sub
fwait
rorl
orb
inc
rolb
mov
xchg
aaa
cmp
push
mov
subb
sbb
mov
pop
cmc
add
cmp
sbb
sbb
pop
cmp
out
arpl
jg
sub
inc
sbb
shrl
xor
fistps
mov
add
or
mov
cmpl
mov
pop
pop
cltd
inc
push
outsb
ret
mov
mov
inc
and
pop
aad
inc
aaa
lea
ret
xchg
xchg
mull
or
scas
mov
xchg
cld
ljmp
mov
movsl
mov
mov
sbb
add
cwtl
xchg
lahf
fildl
mov
sahf
pop
sarb
jbe
data16
jp
insb
mov
mov
fisubrs
sub
fmull
std
int
push
mov
loopne
sbb
mov
cmp
shll
adc
stos
dec
cmp
outsb
mov
xor
dec
push
dec
mov
out
movsb
xorl
lret
jp
popf
into
int3
adc
add
lahf
push
dec
imul
xor
gs
addr16
loop
cs
push
js
adc
lret
data16
xlat
push
pop
ds
push
push
lock
test
sarl
inc
aaa
push
jg
inc
mov
pop
xchg
mov
dec
mov
scas
inc
stos
in
icebp
jbe
mov
rep
pop
lods
lods
sbb
add
icebp
push
ljmp
gs
bound
or
bound
dec
adcb
mov
sub
fdivl
ss
pop
ficoml
push
idiv
jnp
addr16
popa
xlat
push
fst
ret
push
into
or
pushf
sar
inc
scas
sbb
add
mov
lock
ret
mov
jg
mov
std
jl
sbb
fldl
fwait
icebp
mov
mov
data16
push
out
xor
negl
push
fiaddl
shll
xlat
sbb
sub
roll
mov
sbb
adc
out
arpl
ficompl
fwait
cwtl
mov
sub
inc
in
add
cmc
stc
in
in
push
mov
pop
mov
adc
in
scas
es
out
and
jge
aad
out
das
sub
push
mov
push
push
sub
add
add
repnz
in
inc
addr16
std
fwait
adc
add
inc
cmp
push
or
sbb
mov
outsl
pusha
movsb
pop
das
ljmp
negb
outsl
push
pop
dec
imul
movsb
cli
xchg
or
cmp
pusha
lds
in
sbb
lcall
mov
jo
mov
loope
stc
adc
repnz
adc
mov
jns
in
cmp
fmul
jge
pop
insl
cmpsb
cmpsl
xor
mov
popa
ret
mov
ss
push
js
adc
cmp
ficoms
mov
shr
and
lds
inc
pushf
cmp
mov
mov
mov
js
cwtl
inc
inc
sbb
push
lods
fists
movsl
pop
pop
addr16
and
aam
fildll
arpl
push
jbe
in
jne
push
test
rclb
ret
out
add
jno
loop
mov
sub
ror
mov
loop
mov
sti
addr16
mov
imul
jmp
dec
xor
mov
jp
rcl
jnp
xchg
or
or
mov
sbb
aad
lahf
and
fwait
push
mov
sub
nop
pop
mov
sahf
mov
insl
cmc
enter
jmp
push
ret
jmp
or
push
inc
jp
aam
in
int3
daa
xchg
dec
push
fistpl
bound
xorb
fdivr
jb
cwtl
cs
xor
popa
adc
dec
inc
insl
fldl
sahf
cmp
dec
aaa
pushf
cmp
jecxz
fs
push
cmc
loop
and
aad
repz
icebp
push
mul
jne
cmc
or
mov
je
mov
cs
loopne
fwait
rorl
and
inc
cwtl
xchg
arpl
insw
pop
mov
xor
or
push
and
mov
mov
mov
inc
mov
push
in
in
sti
es
fwait
sahf
shl
inc
jnp
in
and
pop
dec
cwtl
xchg
adc
ds
addb
mov
gs
and
out
sub
outsl
test
xchg
sahf
pop
dec
mov
scas
sbb
inc
cmp
xchg
adc
into
pop
inc
pop
ljmp
js
cld
xchg
mov
jge
add
movsb
repz
mov
jecxz
int
fldenv
jecxz
inc
adc
shrb
mov
icebp
sub
das
add
test
loope
push
icebp
cld
inc
sub
jns
xchg
outsb
xor
xorl
sahf
xchg
inc
add
movsb
pusha
mov
lea
cwtl
and
loopne
push
int3
call
fwait
cli
push
xchg
mov
pop
push
xchg
shll
mov
adc
or
or
pop
jne
sub
in
ja
lea
mov
out
jle
and
mov
pushf
je
mov
lods
add
imul
ret
mov
mov
adc
inc
lcall
mov
outsl
xlat
sbb
xor
inc
jg
inc
stc
fcoml
inc
sub
sarl
sub
imul
scas
lea
orl
enter
aaa
dec
nop
add
mov
fimuls
push
jns
mov
jo
cmp
adc
into
pusha
pushl
xchg
xor
fs
push
mov
aaa
mulb
add
xchg
imul
mov
out
cld
inc
mov
mov
push
or
call
pop
icebp
mov
sub
and
fldenv
and
sub
ja
enter
cmp
or
aaa
sub
adc
in
mov
xchg
and
imull
sbb
mov
fwait
xchg
imul
jl
stos
cli
and
push
ret
mov
mov
icebp
rclb
in
mov
mov
lods
fcmovbe
ljmp
mov
or
ret
inc
stos
out
jmp
out
lret
jo
push
pushf
mov
test
mov
pop
mov
cmc
bound
mov
mov
insl
lods
mov
jae
push
sti
ret
xor
shlb
jp
hlt
sarb
push
mov
into
xchg
enter
fidivrl
adc
jno
mov
test
enter
xchg
lret
mov
mov
sahf
stc
aam
data16
scas
mov
mov
sahf
scas
pop
stc
sub
leave
ss
jle
mov
mov
test
hlt
test
pop
in
jb
xchg
insb
retw
mov
hlt
sub
das
dec
jne
pop
jno
lcall
fsts
or
dec
adc
adc
xlat
xorl
fldl
inc
sbb
push
mov
inc
jbe
in
jmp
jle
mov
mov
sldt
sub
mov
ljmp
jnp
push
lahf
mov
mov
shlb
out
in
and
and
das
fldl
int3
sub
std
mov
mov
adc
sub
insb
insl
flds
push
push
cmp
dec
ljmp
push
pop
xor
insb
ret
sahf
jo
jle
arpl
jl
cmpsl
or
out
push
daa
aaa
xor
sub
jnp
pop
or
cmp
fdivp
outsb
cmpsl
add
inc
not
daa
jbe
movups
jge
mov
adc
cmc
insl
addr16
lock
dec
pusha
dec
movsl
data16
mov
add
inc
mov
ss
push
orb
out
jb
fnsave
cmp
mov
popa
ljmp
sub
sbb
es
clc
out
popf
roll
mov
inc
js
mov
inc
mov
jmp
dec
sub
push
mov
shlb
mov
jecxz
aas
push
pop
push
fidivl
mov
inc
mov
popf
test
mov
push
xchg
repnz
sbb
movsl
cmp
mov
or
pusha
cmp
push
sub
cmp
add
mov
adcb
jge
xchg
enter
iret
int
mov
mov
adc
into
xor
inc
shll
cmc
pop
fsts
add
and
mov
xchg
arpl
push
mov
pop
pop
leave
cwtl
loope
and
stos
push
loop
mov
jg
mov
cmc
std
arpl
mov
inc
in
xor
fwait
cmp
fcomps
pop
data16
add
mov
idivl
loop
mov
insb
jmp
sub
xor
mov
imul
push
cltd
call
cmp
mov
cmpl
bound
jns
test
rol
xchg
test
jo
addr16
sub
adc
insb
test
hlt
das
and
dec
add
inc
sarb
xor
dec
inc
sub
scas
adc
test
arpl
cmp
jns
divl
cmp
enter
ljmp
push
cltd
ljmp
sti
adc
mov
jp
sti
jge
adc
loopne
jg
and
ljmp
lret
fs
testl
mov
push
jl
loope
xchg
push
pop
add
outsl
aam
out
fwait
pop
pop
jge
mov
jnp
jmp
xchg
cwtl
jle
insl
xchg
push
lret
ss
xchg
mov
sub
out
mov
outsb
pop
inc
pop
rol
stc
xchg
insb
rcrb
into
pop
les
pop
xlat
shr
fdivp
inc
aam
cmp
je
and
dec
xchg
aad
inc
rcrb
gs
mov
jno
dec
arpl
andb
in
jmp
subl
call
repz
out
ljmp
jo
mov
cs
mov
jle
out
cwtl
mov
cld
pop
push
aad
scas
sub
mov
in
bound
mov
stc
mov
cmp
sub
jo
add
ss
adc
popf
or
test
jge
sub
jge
fsubrl
push
or
pop
sub
loopne
dec
cwtl
clc
xor
push
fcmovnb
cmp
out
in
push
pop
fwait
test
movsb
cwtl
jge
in
push
aaa
pop
xor
inc
out
sub
mov
ret
or
adc
fsubl
sub
sbb
sub
shufps
lock
or
clc
jbe
lcall
and
push
pop
pop
add
or
pop
and
fnstenv
mov
jmp
nop
std
popf
rcl
mov
push
jo
fstl
mov
and
jmp
cmpsl
fwait
mov
lahf
xchg
loop
mov
sahf
jg
or
push
xchg
dec
mov
pop
jle
mov
add
and
or
sbb
pop
push
shll
ds
scas
push
jo
push
push
arpl
mov
or
jle
insb
jmp
cltd
mov
test
ffree
mov
fcoms
lea
jp
and
xor
jbe
imul
test
push
stc
out
lods
gs
je
jl
shrb
addr16
sar
fs
pop
mov
xor
or
dec
mov
xchg
sbb
mov
sub
dec
and
fs
xorl
mov
pop
cmp
cmp
jno
and
and
aaa
pop
mov
sbb
in
sbb
bound
sub
sbb
cli
jne
dec
add
sysenter
lcall
jle
lcall
sbb
mov
insb
out
mov
popf
in
loopne
and
cmp
jp
mov
les
cmp
xor
iret
enter
push
jge
mov
push
out
cmp
adc
pop
sti
or
popa
cmp
sbb
out
mov
push
std
call
jns
push
out
call
jbe
into
dec
jbe
inc
stos
inc
or
push
and
push
add
inc
mov
sbb
pop
xor
mov
adc
bound
and
insb
int
dec
addl
iret
mov
sti
sbb
lcall
aad
testb
out
test
fstpt
mov
shll
mov
xchg
ja
adc
mov
sbb
and
xor
mov
iret
fucomip
popf
inc
outsl
mov
inc
call
stc
fiaddl
ljmp
aam
add
pop
add
xchg
das
or
push
popa
data16
jp
jl
inc
add
xlat
cltd
fstl
sbb
in
mov
mov
out
jnp
push
pop
dec
pop
mov
sbb
mov
dec
fstpl
fwait
and
jbe
xchg
push
jmp
push
scas
repz
scas
aad
dec
and
dec
pop
inc
decb
add
adc
jle
push
std
and
mov
xchg
out
jl
arpl
fstpl
in
and
mov
mov
mov
dec
xor
aaa
sub
jecxz
adc
inc
cmp
mov
push
jmp
dec
and
mov
lock
std
jae
lret
cld
cmp
stos
iret
adc
notl
adc
ret
inc
enter
push
lret
pushl
push
stos
mov
scas
popa
push
mov
neg
andnps
popl
pop
rclb
int3
pop
jbe
fnsave
mov
sti
mov
push
popa
adc
inc
cmpsb
ss
jecxz
sbb
sub
out
int3
or
fdivrl
scas
sbb
jne
daa
cmp
mov
pop
push
fsubs
ret
fucomip
int3
mov
xor
mov
add
popf
sbb
les
jg
sub
inc
lods
idivb
sub
mov
adc
add
mov
in
stos
and
push
arpl
push
xor
pop
insl
lahf
dec
ret
hlt
pop
push
out
sub
mov
pop
pop
add
pop
pusha
std
or
push
in
cmpsl
clc
notb
mov
lret
mov
xchg
dec
jb
ficoms
rcr
fstpl
std
mov
stos
pop
in
adc
insl
sbb
dec
in
ljmp
popf
inc
xchg
add
adc
lret
xchg
pop
sub
mov
jge
lcall
dec
dec
push
into
cltd
adc
into
testb
cmpsl
cmp
push
sub
mov
xchg
mov
and
cmpl
sub
je
lds
pop
insl
loopne
add
push
inc
push
jb
icebp
and
cli
jno
xor
lods
pop
mov
jns
es
or
pushf
mov
pop
push
mov
mov
add
rol
pop
pop
mov
mov
lahf
pop
bound
push
add
scas
aam
xchg
cli
fs
adc
rcrl
pop
inc
mov
jle
stos
addr16
clc
mov
scas
test
lds
rcl
enter
cmc
lods
pop
fidivl
in
and
push
adc
mov
pop
test
sub
add
imul
js
test
mov
lret
negb
std
scas
mov
ds
outsb
push
push
daa
xchg
add
or
xor
mov
and
adc
movsb
in
mov
sbb
test
sbb
jecxz
cmpb
std
cmc
invd
jge
push
cld
arpl
aas
dec
sbb
cmpsb
rclb
push
inc
lret
jl
jl
inc
mov
fsubrs
sub
mov
push
xchg
clc
or
dec
jle,pn
sbb
push
lods
and
ljmp
or
mov
sub
xor
stos
inc
push
inc
xor
rcrb
jecxz
push
sbb
mov
pop
xor
sub
popf
mov
sahf
mov
push
push
mov
lods
gs
imul
fwait
cli
mov
ds
adc
aas
push
inc
stos
subl
lock
rcrb
icebp
add
popa
push
repz
xchg
mov
mov
inc
sti
or
mov
lret
xchg
pop
lock
pop
fcompl
rorl
mov
aaa
add
clc
push
inc
mov
or
cwtl
rclb
cmpb
mov
jo
mov
test
cltd
out
pop
fistpl
xchg
int3
sub
test
push
ret
fs
mov
mov
lock
mov
test
fcoms
lret
mov
faddl
test
xchg
test
add
lcall
push
pop
jb
mov
pusha
mov
arpl
notb
push
lcall
adc
dec
push
fwait
pop
and
cmc
pushf
pop
adc
jecxz
xchg
xor
jmp
lods
adc
aas
and
cmpsl
out
imull
testl
test
mov
adc
pop
rcll
inc
sbb
or
push
xor
sub
fcoms
rorl
cmp
lret
ds
jbe
into
fisttpll
sbb
dec
mov
cwtl
sbbl
xor
and
mov
sub
out
leave
add
add
iret
inc
dec
inc
jne
enter
and
leave
jmp
adc
pop
es
sub
mov
xor
out
inc
add
or
lds
and
xor
nop
pop
and
movsl
pushf
inc
vmwrite
lods
pop
loope
outsl
push
dec
pop
jmp
add
pop
sbb
lcall
std
jae
scas
ror
es
mov
in
fmuls
adc
xlat
xor
fs
jne
pop
lock
pop
rcll
jne
mov
add
xlat
negl
addr16
rol
shlb
movsb
int
cwtl
sarb
icebp
js
repnz
push
in
push
mov
pusha
and
mov
push
xchg
mov
dec
sub
xor
xor
aad
push
aas
adc
adc
sub
pushf
sbb
lret
out
xor
mov
mov
jle
bound
push
orl
xor
adc
jno
mov
or
jo
jae
fistpll
jmp
or
fidivrl
out
hlt
movsl
fildll
push
mov
lcall
aaa
dec
subb
push
ljmp
movsb
out
sbb
push
xorl
mov
mov
or
aam
inc
into
pop
cmp
pop
das
xor
lret
push
jbe
int
stos
jle
xchg
mov
imul
rcl
cli
xor
ret
pop
sbb
mov
jns
sbb
cmp
gs
xchg
icebp
sub
movsl
push
lahf
mov
je
sbb
fiadds
sarb
xorl
int3
mov
addr16
mov
push
add
sbb
push
xchg
mov
inc
std
sub
leave
test
inc
mov
insl
test
mov
insb
lret
or
iret
inc
xor
jb
cmp
out
faddl
sub
rolb
mov
shll
int
out
mov
sbb
push
outsb
jp
jge
in
cli
js
lods
cmp
mov
ds
jo
add
mov
jns
mov
xchg
repz
cs
fsubs
repnz
lods
fiaddl
mov
out
icebp
jmp
and
jne
mov
sbb
hlt
in
icebp
sbb
testb
or
stos
adc
mov
out
jl
add
fldl
xchg
in
and
jmp
cmp
and
mov
sbb
negl
xlat
in
ja
loopne
into
popa
or
sub
out
add
jns
in
fwait
in
adc
ljmp
or
pop
mov
or
inc
in
stos
cli
mov
adc
and
and
test
pop
call
rcr
scas
lea
add
stos
mov
dec
push
pusha
cmp
sahf
pop
push
rorl
in
addb
shll
jp
cli
lods
mov
xchg
test
mul
jo
pusha
xchg
mov
adc
stos
fcmovu
lods
cmp
pop
xchg
aaa
rol
insl
mov
mov
adc
movsl
dec
out
popf
adc
mov
arpl
insl
fstl
inc
shll
jae
and
sbb
dec
lods
adc
mov
arpl
test
les
cwtl
out
inc
sarb
je
aas
cmpsl
push
lods
test
sahf
jge
ja
mov
lea
mov
dec
enter
add
xor
int3
in
out
out
out
test
insl
xor
add
out
pop
cmc
cmp
outsb
xor
shl
adc
inc
adc
sahf
xor
add
cs
es
fistl
cmp
imul
jb
xor
dec
and
mov
xchg
sbb
addr16
push
push
inc
add
push
cmpsb
enter
pop
dec
aam
pusha
pop
push
int
add
popl
xchg
fisttpll
and
in
lods
jo
add
jl
in
call
mov
push
mov
sarl
test
pop
je
or
mov
subb
iret
sbb
or
cs
daa
jg
jno
pop
icebp
lods
mov
and
mov
mov
insb
je
ljmp
xchg
test
mov
xchg
xchg
jno
gs
mov
push
push
popa
je
and
dec
insb
pushf
in
xor
testl
adc
call
aad
jg
mov
xchg
shll
shl
inc
push
sub
mov
dec
cli
orl
xor
sub
mov
shl
mov
ds
jmp
lret
cli
ret
daa
adcl
add
sti
mov
sbb
xor
mov
into
jb
or
mov
cli
push
ret
xorl
in
cmpsb
ret
sub
shll
push
sub
addb
test
xchg
jp
inc
push
fs
inc
int
repnz
pop
outsb
push
adc
imulb
ljmp
cwtl
jp
jge
inc
or
mov
cmp
pop
mov
es
cmpsl
xchg
or
int3
jae
sbbl
cld
insl
sbb
push
jmp
push
test
call
cli
out
push
lock
lods
js
mov
out
int3
and
cmp
fists
sub
fwait
fs
mov
sub
cli
and
popa
xchg
rorl
jmp
xchg
pop
xlat
scas
push
inc
sub
fwait
xor
adc
push
jle
add
xchg
sti
xchg
push
into
call
nop
push
xchg
mov
je
jmp
pop
outsb
adc
cmp
jl
cwtl
ds
adc
pop
ret
cmp
in
mov
negl
daa
jmp
cmp
div
stos
out
clc
xchg
jg
jns
pop
es
outsb
xor
je
stos
sbb
aam
pop
or
pop
lcall
dec
push
cmp
and
in
icebp
cmpsl
dec
cmp
cmp
pause
xor
mov
mov
cmpsb
pop
sub
mov
sarb
in
dec
mov
call
dec
pusha
pusha
xor
jmp
ss
mov
pop
aam
scas
in
scas
icebp
jo
jmp
mov
push
cmp
add
xor
jno
rorb
xchg
das
or
sub
gs
xchg
outsb
xchg
and
mov
cmpsb
je
sbb
jb
js
cli
out
addr16
sbb
cmp
mov
cmp
xor
or
adc
adc
pop
or
ds
dec
cmpsb
push
ror
dec
bound
ret
pop
mov
inc
add
mov
pop
rol
push
sahf
out
dec
loop
scas
shll
cmpsb
and
imul
push
rcrl
shr
ficoml
fldl
fs
subl
icebp
mov
add
adc
addr16
mov
shlb
imul
and
pop
sub
hlt
xor
and
cmp
shlb
sti
sbb
xchg
or
stos
xchg
imul
and
mov
stc
imul
and
hlt
test
sbb
pop
gs
adc
aam
pop
mov
test
aad
and
adc
dec
jae
push
stc
jl,pn
es
outsl
icebp
push
pop
xchg
adc
mov
xor
push
jmp
or
pop
sub
aad
fimull
sbb
arpl
xor
gs
les
xlat
fisubrl
data16
pusha
idiv
movsl
unpcklps
xchg
mov
or
cmp
or
fisubl
xchg
inc
out
mov
xor
adc
adc
cmpsb
outsl
in
dec
jo
jg
fsubrs
lods
pop
outsb
fiaddl
movsb
pushf
mov
jl
out
fwait
or
jle
dec
inc
mov
test
subps
in
pmuludq
push
xchg
je
inc
adc
int
test
push
jge
xchg
dec
hlt
cmp
pusha
negl
jae
inc
xchg
and
addr16
movsl
and
inc
sbb
adc
jbe
adc
iret
in
cmp
int3
xchg
and
adc
and
jne
lret
test
dec
repnz
inc
xor
loop
pop
sub
inc
sahf
mov
pusha
jge
push
mov
jmp
and
mov
lods
add
add
mov
gs
and
add
inc
xchg
mull
int
and
shr
mov
in
cltd
enter
int3
push
mov
xchg
fisttpll
xor
fwait
xchg
std
dec
cmp
mov
push
cmpb
lret
scas
add
cmpsl
pop
lcall
sub
sub
mov
dec
test
sub
fsubl
adc
xorl
test
inc
jne
mov
or
out
sbb
pop
sbb
xchg
rep
or
pop
cwtl
add
in
inc
fs
test
mov
clc
je
repz
xorb
adc
lock
pop
ret
ret
xchg
inc
fdivr
cs
push
mov
and
popa
or
mov
or
int
imul
jo
addl
je
and
sub
popw
pop
cmp
int
addr16
ret
sub
jecxz,pt
xchg
mov
test
mov
pusha
div
sbb
xlat
jb
test
movsl
hlt
inc
cmp
cwtl
loop
and
inc
aaa
lahf
dec
mov
ss
fldcw
scas
cs
addb
call
arpl
add
inc
addr16
xor
rcll
das
or
js
push
sub
push
add
cli
inc
int3
fadd
xor
call
pusha
adc
fptan
push
push
push
dec
mov
sub
xor
inc
and
punpckhwd
xor
xor
xchg
mov
insb
cli
outsb
movsl
out
xchg
insl
fstpt
and
fldcw
aas
mov
stos
jno
sbb
icebp
and
cmp
xchg
je
inc
lcall
jae
or
sti
mov
cmpsl
test
lret
popf
and
stos
mov
sbb
ret
sahf
or
das
dec
orl
mov
sbb
and
or
mov
or
lret
add
nop
jns
call
clc
adc
add
shlb
push
rcrl
inc
mov
mov
inc
push
adc
mov
inc
std
mov
pop
cmpsb
fisttpl
sti
ds
aas
jp
rcrb
movsl
pop
jno
add
popa
jl,pn
int
insb
adc
lcall
pusha
repz
and
mov
xor
xchg
sub
daa
sbb
and
pop
and
insb
adcl
insb
and
push
push
and
jne
aas
stos
lea
cltd
or
mov
and
jp
and
mov
movsb
jmp
shlb
inc
sub
popl
xchg
dec
jb
jecxz
js
push
pushf
xchg
pop
xlat
repnz
aam
cmp
fcomps
arpl
dec
mov
mov
xlat
jnp
xchg
xor
pushf
icebp
clc
mov
mov
pop
cmpsl
pop
jmp
daa
sar
mov
cmpsl
mov
cmovns
inc
push
push
pushf
in
pop
xor
mov
push
and
daa
js
mov
stc
lret
jb
cli
lods
add
into
xchg
aas
sbb
loopne
std
outsb
xor
imul
mov
jecxz
fwait
cmp
test
pusha
push
scas
sbb
test
adc
pop
jbe
in
mov
add
fildl
imul
mov
or
mov
fbstp
add
fidivrs
aam
lret
push
bndldx
out
sub
fwait
dec
inc
lcall
repnz
or
push
lret
hlt
xchg
pop
jle
jo
fistpll
ss
xchg
pop
push
pop
and
addr16
dec
out
jl
mov
pop
rcrl
scas
mov
mov
dec
loope
inc
addr16
fidivs
push
inc
fbld
in
fcom
push
fs
cmc
jmp
cmp
leave
sbb
push
push
add
jne
sub
cmpsb
mov
xchg
push
jo
cmc
pop
test
jmp
jbe
fists
mov
push
fwait
popf
sbb
movaps
push
rcrb
adc
inc
int3
adc
jb
shll
insb
aam
jp
lret
xchg
mov
jae
sub
fidivl
shll
lea
mov
pop
daa
jmp
bound
pop
cmp
aad
ret
flds
pop
lods
stos
cltd
mov
dec
xchg
mov
add
dec
dec
je
mov
std
push
int
inc
dec
dec
push
pop
mov
pop
or
mov
add
push
dec
pop
adc
in
cli
cmp
roll
sub
rorl
lret
in
cwtl
adc
xchg
dec
jmp
push
xchg
dec
lcall
sub
jp
mov
cmp
sub
mov
arpl
je
mov
lds
addr16
insl
in
xor
rcl
adc
pusha
in
jle
inc
movsb
inc
xchg
and
cmp
mov
lret
mov
sub
rorl
inc
mov
or
fldl
jl
std
aam
jae
sub
push
test
arpl
hlt
ret
mov
jecxz
das
test
push
push
lahf
div
inc
adcb
ds
xchg
in
cli
inc
mov
lahf
les
xorl
mov
cmpsl
pop
xchg
add
in
scas
adc
jmp
cwtl
or
push
add
pop
jmp
cmpb
sarl
out
sbb
lods
xor
nop
adc
mov
mov
pop
movsl
out
jb
mov
and
mov
xor
mov
adc
int
std
sbb
mov
ljmp
or
rolb
jne
push
neg
mov
lds
pop
cmp
and
mov
stos
adc
sub
gs
das
sub
mov
in
adc
sbb
scas
in
sub
xchg
pop
fdivl
pop
mov
adc
push
jo
inc
mov
cmp
rclb
pop
aaa
incb
push
push
dec
jno
sub
xchg
mov
inc
rcrl
jbe
mov
lea
prefetchnta
jl
lock
test
std
out
xchg
sub
scas
lret
int
lret
lods
jl
mov
push
dec
sub
push
rolb
xchg
and
lds
imul
inc
data16
jl
dec
jmp
jns
pop
lock
mov
les
xor
repnz
push
lods
ss
push
popa
xor
aas
daa
mov
cld
enter
icebp
ja
sub
pop
mov
sbb
adc
ja
push
call
push
push
test
or
or
sbb
hlt
ret
mov
mov
iret
jl
mov
and
repnz
jns
mov
jns
icebp
repnz
test
sbb
jnp
fcoml
sbbb
sub
repnz
push
adc
dec
int3
push
loope
mov
pop
dec
sbb
pmulhuw
mov
test
cmpsb
lods
and
in
adcb
mov
and
adc
and
cmp
pop
and
lcall
mov
push
sub
xor
mov
out
out
in
jns
add
sahf
icebp
ss
lret
jns
jl
lret
jno
xchg
fldenv
sbb
sahf
pop
loop
icebp
lcall
sub
mov
in
addr16
stos
shl
mov
sahf
insb
mov
dec
imul
scas
push
cmp
addr16
in
mov
or
fs
mov
adc
outsl
rclb
add
or
push
or
xchg
cs
test
call
sbb
hlt
daa
xorl
inc
xchg
lods
jo
ja
fs
push
nop
sbb
pusha
rorl
xor
flds
mov
andb
push
push
cmpsb
cmpsb
aaa
cwtl
test
mov
mov
xchg
mov
cmp
dec
xor
dec
shrb
rcrl
movsl
pop
xor
push
stos
inc
shrl
cli
fcmovbe
ljmp
mov
movsb
push
push
push
cmc
fsubr
inc
daa
jmp
jg
sub
and
aam
cld
cmpsb
sti
in
add
adc
inc
push
pop
mov
add
bound
xor
in
inc
ret
loop
pusha
ss
leave
xlat
jae
adc
xchg
std
call
and
les
test
aas
lcall
das
mov
push
popa
sbb
fcmovne
push
xchg
movl
testb
or
in
mov
mov
mov
adc
sahf
out
cld
jmp
inc
cmpsl
mov
popa
mov
xchg
add
dec
popl
jns
sub
popa
lds
sbb
mov
and
test
jmp
mov
icebp
xchg
fwait
adc
mov
jno
das
in
mov
sbb
jle
pop
fstl
fidivrl
fxch
and
inc
push
add
pop
cwtl
inc
lahf
dec
pop
pop
and
push
mov
inc
fnsave
adc
repnz
ret
in
mov
imull
push
outsb
xchg
lcall
int3
lock
cmpsb
mov
testb
dec
stc
push
imul
pusha
mov
xor
jb
pop
add
xchg
aas
or
sub
sti
addr16
ret
jno
ret
add
stos
rclb
mov
divb
sahf
lods
enterw
dec
loop
xor
and
dec
aaa
cwtl
aaa
inc
mov
and
jnp
sub
test
icebp
add
popf
add
add
pushf
mov
addb
test
sbb
xor
add
sbb
es
mov
imul
xchg
lods
out
cmp
mov
cmp
test
enter
stc
movsl
inc
in
xchg
aaa
pop
pop
cld
mov
rcll
dec
fists
popa
pop
adc
popf
inc
xor
divb
inc
xchg
mov
dec
das
xchg
or
fs
fstpt
mov
mov
push
cmpsb
aam
push
arpl
stos
sub
aaa
sub
cmc
xchg
and
in
ja
out
add
xor
mov
lock
pushf
push
add
call
or
and
or
cli
xor
jb
ret
and
pop
lds
mull
push
pop
es
fwait
sbb
loopne
mov
cmc
xor
loope
add
in
fdivs
mov
mov
push
out
jns
pop
movsl
pop
fwait
adc
stc
pop
out
movups
or
dec
inc
shll
jne
cmpb
test
pop
xchg
mov
sub
sub
add
sti
stos
mov
add
inc
pop
jae
les
mov
add
ds
lret
pop
or
test
jge
pop
mov
in
sub
xor
in
lds
jbe
sub
jo
mov
roll
sbb
pop
sbb
cmp
xchg
les
scas
xchg
icebp
es
in
push
rol
outsb
lcall
dec
mov
test
icebp
fs
loopne
lcall
jmp
push
push
cltd
pop
push
push
xchg
or
es
dec
mov
mov
push
dec
jbe
orb
xor
and
cmp
jno
lock
daa
ret
popa
pop
inc
fidivl
mov
clc
je
movsb
mov
sub
and
or
int
add
sbb
jnp
mov
mov
movsb
fnstenv
dec
lods
fs
popa
dec
push
inc
mov
pop
or
xchg
shll
xor
icebp
movsb
loopne
jo
int3
push
sbb
imul
cmc
mov
in
fnsave
dec
mov
jge
rclb
mov
addr16
in
in
in
in
pop
cmp
inc
push
leave
cld
repnz
clc
stc
push
ljmp
xchg
sbb
xchg
hlt
scas
push
push
push
ror
popf
push
std
mov
mov
es
mov
pop
pop
mov
out
gs
push
cltd
imul
rcll
mov
xor
fidivs
aaa
les
xorl
jmp
mov
xorb
popa
cmp
test
mov
push
insb
cwtl
imul
cli
sub
les
inc
sub
pop
adc
and
or
in
loopne
jbe
sbb
and
push
insl
mov
rorl
adc
lret
cmc
movsl
jno
call
cld
xor
jno
das
and
sbb
mov
inc
inc
into
push
mov
test
push
nop
sub
push
scas
adc
std
jmp
adc
int3
xor
jg
arpl
jne
fstps
fildll
xor
sarl
out
ret
xchg
pushf
jecxz
pop
dec
outsb
push
mov
in
aad
add
lahf
adc
outsb
scas
dec
shrl
push
or
addl
cmpsl
xchg
lcall
call
add
jnp
cld
adc
push
rolb
test
lods
aad
std
sbb
ret
add
add
sti
push
push
or
sub
and
xchg
fwait
divl
xor
in
adc
or
popa
jp
and
aas
in
pop
int
add
cmp
rcrl
jnp
pushf
xchg
repnz
adc
test
out
insl
test
sub
ja
pop
notb
jge
push
sahf
dec
fs
jp
jp
out
cli
dec
in
mov
test
or
movsb
rorb
and
mov
aam
inc
sub
mov
xchg
xlat
add
mov
mov
push
or
mov
mov
add
cmp
xlat
ret
pop
call
addb
movsl
add
inc
in
or
push
test
mov
inc
ds
sarb
pop
mov
outsl
in
mov
hlt
out
sahf
das
xor
mov
gs
jge
mov
mov
jns
jge
stc
mov
je
rcll
sar
mov
and
roll
stc
test
jnp
xchg
idivb
jne
xor
mov
mov
lds
arpl
add
repnz
je
adc
jo
sbb
ss
pop
insb
adc
cmp
mov
jnp
fdivrl
xchg
xchg
stos
dec
int3
mov
xor
and
hlt
dec
lcall
out
pop
and
sti
pop
cmp
lea
sbb
fimuls
and
mov
dec
icebp
xchg
divl
popf
xor
clc
xchg
lret
movb
mov
jns
popf
leave
repnz
mov
shlb
subb
lret
jne
mov
pop
testb
ss
xlat
insb
sub
adc
in
inc
fiadds
test
sbbb
test
imul
ret
scas
or
cmp
jno
mov
xchg
mov
cmp
dec
inc
xor
pop
in
test
xor
push
lds
inc
and
insl
out
jae
imul
xchg
push
imul
aaa
push
jp
jmp
jmp
and
scas
movsb
add
inc
js
xchg
xchg
ljmp
repz
fcmovne
loope
das
or
jae
aaa
mov
sbb
sub
movsl
setg
pop
pusha
dec
fcmovbe
jno
sbb
xchg
inc
jle
ret
sub
mov
mov
dec
stos
sbb
lcall
mov
mov
cmpsl
mov
xchg
test
sub
test
adc
daa
lea
cwtl
mov
ds
stos
add
negl
stc
lea
shrb
mov
ja
and
mov
add
lret
test
adcb
push
sbb
outsb
ljmp
enter
sbb
mov
inc
push
xor
stc
popf
sbb
fstpl
pop
push
stc
cmpsb
sbb
xor
jnp
daa
scas
repz
sbb
pop
sbb
imul
or
cwtl
mov
loopne
aaa
add
sbb
add
adc
sub
outsb
stos
dec
outsb
inc
rcrb
jp
adcl
outsl
jbe
mov
xchg
jb
jae
push
cmp
shrl
xorb
sbb
mov
mov
mov
xorl
popf
nop
cmpsl
and
jnp
stos
sub
in
xchg
mov
test
fucompp
mov
ljmp
push
ss
int
fisubrs
iret
xor
addr16
jne
sbb
lahf
sbb
xchg
and
jg
jns
sbb
xor
testl
mov
jecxz
jns
push
es
mov
jne
or
pusha
sbb
ret
inc
mov
popf
mov
inc
pop
iret
or
mov
jge
cmpl
xchg
sbb
movsl
or
push
lds
stos
push
sbb
cmpb
push
jne,pn
test
adc
lds
je
iret
xor
push
jl
xor
adc
add
fs
ror
arpl
push
lods
leave
loope
cmp
mov
sbb
push
clc
jne
mov
sbb
jbe
and
jp
mov
sub
aam
jne
cmp
sub
insb
enter
andb
fisubrs
jmp
xor
loope,pn
sbb
sub
test
insb
arpl
pop
jnp
mov
or
cmp
mov
cmp
pusha
out
dec
mov
inc
scas
adc
sbbb
xor
jmp
clc
andb
ret
cmp
xchg
lcall
add
js
out
je
sbb
mov
mov
in
cmp
add
sub
in
mov
xor
pop
push
repz
mov
mov
fcomps
lcall
xchg
mov
jmp
ja
fimull
add
imul
inc
xor
scas
xchg
xchg
jecxz
ret
xchg
push
scas
aam
jae
sub
xor
xlat
sub
xchg
mov
js
rorl
mov
dec
jnp
xor
pop
jg
lock
fildll
add
or
inc
dec
push
dec
xor
cmpsb
in
out
and
adc
mov
pushf
dec
and
pop
add
pop
add
push
rorl
adc
mov
sbb
and
sub
outsl
aad
xchg
mov
jge
or
fnstenv
mov
sub
and
cmp
loop
jb
rorl
adcb
lods
xor
decl
jge
dec
cmovbe
out
fisttpll
test
lret
fdivp
rorl
sbb
xchg
insl
or
aad
loope
and
jecxz
fdivl
inc
mov
clc
sub
mov
leave
mov
psubb
sahf
pop
fisttpll
sbb
pop
pop
xchg
data16
cmp
mov
add
xchg
daa
in
push
fimull
cmpsl
inc
loope
mov
xchg
cmpsb
test
ficompl
insl
int
in
ljmp
mov
mov
iret
out
xlat
movsl
jg
cltd
in
push
xor
add
inc
shll
out
je
inc
hlt
or
add
push
fidivs
sub
imul
jo
add
negb
por
imul
ret
ret
out
aad
enter
sbb
pop
cmpsl
loope
cmp
imul
pop
mov
inc
lock
lahf
notb
cmp
and
mov
xor
sub
mov
cmp
add
cli
repz
and
inc
in
cmp
stc
repnz
in
dec
adc
mov
inc
lcall
and
add
out
jmp
lret
push
sub
movsl
jl
cmp
das
mov
adc
repnz
mov
lock
adc
push
mov
lds
out
add
shlb
jmp
adc
in
xchg
aas
cwtl
pop
lret
test
xchg
daa
pop
sbb
mov
out
inc
test
push
nop
add
mov
mov
fldcw
jno
out
xchg
loope
lock
or
jge
mov
push
cmp
ud2
je
jno
test
inc
insb
jnp
xor
dec
int3
or
jecxz
add
dec
pop
cmpl
je
and
rcrl
fnstenv
push
dec
dec
pop
ret
hlt
sbb
mov
fstp
shll
test
adc
enter
dec
loope
cs
mov
testb
xchg
repz
cwtl
cmc
xchg
out
enter
lret
push
mov
test
push
ficompl
ret
xor
pop
js
mov
pop
mov
mov
mov
mov
mov
mov
shll
imul
xchg
jg
pop
insl
pop
mov
shrb
test
ret
les
popf
inc
push
mov
jnp
sahf
mov
dec
addr16
insl
rep
xor
adc
fdivrl
repnz
aam
movsb
jecxz
and
xchg
lret
and
and
push
scas
add
jle
mov
icebp
xor
lahf
dec
movsl
outsb
ret
sbb
jnp
enter
out
int
mov
daa
pop
rolb
pusha
fldt
divl
imul
cmpb
shrl
icebp
cmpsl
pushf
dec
cld
ss
adc
stos
xchg
aam
pop
mov
mov
cmp
inc
adc
mov
push
shrb
imul
and
xchg
test
xchg
push
aaa
int3
mov
pop
fdivl
mov
lret
inc
flds
test
aad
lods
xchg
addr16
mov
idivl
rcrl
mov
jmp
and
int
shrl
out
pop
push
push
push
cmc
in
in
daa
shrl
jns
shlb
loopne
int3
lret
fs
scas
lock
sub
inc
adc
mov
push
jp
sub
mov
lcall
add
sub
fcompl
fistpl
push
mov
inc
mov
jns
mov
jae
movl
pop
lret
cmpsl
xor
mov
out
nop
mov
cmc
insl
add
popa
ljmp
dec
lcall
fisubs
not
leave
jge
jae
sbb
insb
adc
in
fcomp
fnstsw
add
lret
fsubp
cmpsl
test
scas
sub
leave
push
ret
cmp
sub
test
jae
dec
in
in
les
in
cltd
pushf
sbb
dec
xor
sahf
lods
xor
fstps
movsl
pop
sub
cmp
jl
incl
stc
pop
xor
sbb
push
or
lods
call
jno
xor
mov
sbb
pop
fcomi
adc
add
or
fisttpll
mov
jp
xchg
lods
std
pop
sbb
bound
ret
dec
in
stos
daa
mov
enter
gs
mov
adc
in
fcoml
ljmp
mov
sub
add
or
addr16
stos
ja
mov
sbb
or
jp
repz
mov
aad
call
insb
and
mov
sbb
iret
sub
or
add
aad
int
mov
jmp
aas
mov
stc
sub
repnz
inc
pop
call
or
outsb
leave
insl
int
aaa
lods
push
xchg
adc
lret
jno
xor
xor
mov
push
test
cwtl
xlat
les
or
adc
mov
mov
lods
mov
aam
cwtl
sti
ret
jge
dec
and
scas
in
cmp
sbb
jne
sarb
jb
add
sbb
push
xor
addr16
mov
jmp
xorb
cmp
mov
dec
sbb
jecxz
aam
and
jg
xchg
mov
inc
add
fcomip
call
fbstp
jbe
lods
daa
mov
pop
into
and
ret
movsb
jecxz
pusha
test
jp
pop
push
rorl
jae
inc
or
inc
andl
aam
sbb
mov
add
mov
dec
mov
and
je
repz
jecxz
cwtl
adc
pusha
in
jnp
push
sbb
fstl
or
notl
mov
scas
aaa
mov
not
add
sar
popf
mov
sbb
jo
pop
jo
add
jno
jecxz
dec
inc
ret
loope
mov
and
das
or
and
cmp
add
jp
xor
mov
or
loopne
and
add
add
pop
sbb
cli
push
pop
add
add
jnp
mov
sbb
dec
mov
je
aas
cmp
adc
std
pop
mov
mov
adc
lods
shrb
jbe
xlat
in
lods
test
in
shlb
aas
cmpb
sub
cmp
sbb
pop
lods
mov
inc
inc
dec
mov
ret
or
sub
in
dec
or
fidivrl
aas
repz
out
leave
adc
jno
pop
adc
loopne
movsb
pop
ljmp
std
mov
jmp
ja
and
fs
mov
xchg
