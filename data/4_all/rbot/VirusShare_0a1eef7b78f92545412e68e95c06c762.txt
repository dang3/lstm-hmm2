push
call
ret
ret
dec
xchg
mov
pop
mov
pop
mov
roll
ljmp
les
sub
jo
mov
aas
insb
leave
adc
sbb
mov
scas
ds
and
jl
outsb
fnstenv
push
cmp
xor
sub
cmp
inc
sub
xchg
push
push
xlat
sahf
fsubrp
sbb
cmp
xchg
jae
inc
push
cld
dec
lods
dec
mov
add
cmp
fstl
mov
mov
xchg
mov
xor
shl
imul
test
lcall
push
add
jg
xor
adc
cld
xor
pushl
sbb
out
mov
mov
cmc
cmp
and
mov
mov
xor
stos
iret
xchg
jne
test
into
pop
sbb
movsb
sub
push
sub
daa
insb
add
data16
cmc
mov
mov
adc
lret
mov
out
mov
cmp
cmp
sub
inc
inc
loop
add
mov
mov
les
pop
sub
mov
incb
cmp
xchg
movsl
mov
enter
fdivrs
imul
insl
mov
push
test
sbb
in
push
sub
mov
jg
sbb
fwait
sub
test
aam
or
fisttps
mov
sbb
mov
mov
inc
cld
push
adc
cld
das
sub
xor
rorb
repz
push
hlt
xor
inc
push
nop
fucompp
inc
rorb
cmp
jb
sti
or
in
loope
mov
lea
movsb
cwtl
push
sahf
add
repz
dec
pop
cwtl
cld
or
in
stos
jmp
outsl
arpl
rorl
jo
push
sbb
das
pop
jbe
fwait
cmp
gs
adc
mov
insb
fwait
test
scas
mov
push
dec
sbb
pop
clc
test
jne
pop
sub
push
xchg
imul
testb
jle
rclb
mulb
loopne
push
mov
lds
xchg
jnp
and
add
xor
loope
call
out
jno
jno
stos
fdivr
push
rclb
push
and
rcrl
mov
ficompl
in
inc
loop
lods
jge
dec
outsl
jno
pop
adc
lcall
mov
pop
mov
cltd
mov
jo
adc
sti
cmp
inc
cwtl
ja
mov
lret
add
iret
sbb
mov
mov
sbb
out
notl
ds
mov
inc
sahf
nop
cmp
add
push
mov
mov
cmp
sbb
adc
fimuls
int
shlb
fnsave
and
repz
test
aas
sbb
ja
xchg
mov
xchg
sbb
mov
jmp
fs
fwait
in
aam
jae
xor
outsb
int
mov
daa
jns
sub
push
popa
sub
inc
push
aaa
sbb
and
sub
shlb
mov
and
xchg
cltd
insb
xor
dec
xor
sbb
add
xchg
das
pop
lret
mov
jnp
loopne
or
int3
lret
and
jno
test
inc
stos
xchg
mov
xchg
cmp
data16
enter
data16
cmp
fsts
xchg
lods
daa
sub
aaa
popa
xchg
push
dec
mov
js
fsubs
ja
add
add
orb
mov
jbe
pop
mov
fsubs
cmp
jb
xchg
push
xor
lcall
addr16
int
mov
ret
adc
insl
cmpsl
xor
inc
fidivl
inc
sub
sbb
pop
icebp
aaa
cmp
lahf
les
and
sub
cmp
hlt
loope
adc
pop
fcompl
push
imul
das
dec
add
add
xor
shll
cltd
mov
out
stos
or
push
push
iret
shlb
popa
jbe
add
dec
pop
mov
stos
or
jmp
inc
inc
adc
sub
pusha
ficomps
inc
push
flds
or
ja
arpl
sbb
push
lea
insl
pop
stos
sbb
rcll
add
aam
push
mov
aaa
adc
leave
dec
test
add
leave
add
adc
jne
cli
mov
fsqrt
mov
std
sarb
jno
sbb
sub
popa
add
or
ss
out
push
jns
in
aas
jbe
out
add
adc
lods
adc
fs
dec
cmpsb
xchg
dec
add
in
outsb
rolb
adc
popa
in
and
shl
add
fs
xchg
fsubrl
aam
push
hlt
cltd
lret
aas
push
mov
lret
add
aad
sbb
daa
ljmp
loope
out
repz
outsl
orl
js
sbb
jae
mov
pop
sbb
shrb
push
mov
decb
dec
cs
mov
push
fildll
movsb
nop
daa
pop
pop
ret
pop
fs
in
add
sub
push
add
andl
subl
jbe
mov
sub
adc
daa
ret
scas
test
mov
xor
jge
and
call
sub
orb
icebp
int
cmp
sti
cwtl
inc
adc
pop
pop
or
mov
xchg
and
cwtl
mov
pop
lcall
gs
xor
movsl
testb
xor
xlat
pop
and
shlb
stc
push
sub
dec
push
mov
xor
and
or
mov
mov
inc
xor
aas
mov
sbb
push
jp
sbb
aad
inc
iret
push
jmp
std
test
in
push
cmp
or
js
jo
xchg
cmp
pusha
sbbl
add
inc
fucomip
or
movsb
int
scas
jmp
jne
cli
xchg
mov
int
mov
enter
dec
movsl
incb
loope
pusha
xchg
and
out
mov
dec
jg
icebp
xchg
mov
jne
sub
test
inc
loop
inc
call
shr
fucom
jnp
ja
std
and
pop
movsl
sbb
sub
pop
or
ret
mov
dec
hlt
xchg
fucomi
lods
mov
jl
shlb
lds
pop
sub
imul
pusha
mov
data16
rol
mov
sbb
dec
mov
push
push
mov
aas
xchg
neg
mov
test
lret
sbb
mov
loopne
stos
ret
insl
and
ljmp
repz
jae
inc
cmpsb
jge
pop
subl
lds
and
mov
mov
and
sbb
xchg
dec
jp
xlat
mov
sarb
push
sti
and
stos
push
mov
mov
xor
push
fdivs
xor
cli
pop
pop
je
cmp
cli
inc
lahf
loop
call
sub
iret
fs
daa
inc
add
arpl
jns
pop
xchg
mov
repz
cmpsb
repz
outsl
ficoms
push
fsubp
inc
inc
data16
push
adc
test
int
push
sub
mov
loope
sub
push
faddp
fists
pop
ljmp
fildll
push
mov
loopne
or
fistps
mov
dec
lods
add
pop
xor
lahf
adcl
outsl
adc
out
push
dec
cli
xchg
sub
test
fldt
test
loopne
dec
push
push
scas
add
mov
mov
xchg
nop
push
mov
jnp
pop
std
out
xor
addr16
xor
push
enter
sub
les
fcomi
and
ficoms
mov
adc
xchg
mov
ficomps
xor
outsb
push
popf
or
or
xchg
pop
push
leave
negb
shl
jae
mov
insb
in
testl
mov
test
fxam
out
call
and
das
out
and
pop
and
add
pop
and
mov
lcall
filds
sbb
jl
div
test
mov
lock
gs
aam
loopne
xor
pop
outsb
aam
dec
xchg
mov
sbb
lods
jl
xchg
stos
or
fsubrl
sbb
loop
mov
mov
rol
cmp
fmul
pop
pop
mov
nop
rcrl
in
test
jp
push
pop
inc
jae
lahf
mov
mov
repnz
stos
popf
mov
mov
fs
xlat
inc
mov
test
icebp
lea
xchg
pop
sub
cmp
sub
pop
cmp
ss
dec
fs
pop
push
cmp
dec
ss
adc
lds
push
lret
ret
mov
and
dec
fdivrs
inc
xchg
pop
pop
lcall
mov
les
insl
je
outsl
addr16
not
xor
lret
jge
push
lret
std
movl
inc
mov
cmp
inc
hlt
cmp
jne
push
in
mov
fisubs
push
dec
jle
jbe
orb
inc
xchg
arpl
xlat
ljmp
sub
ret
sbb
jecxz
pop
xor
cwtl
mov
fistl
adc
sub
iret
fldt
xor
je
jae
jmp
xchg
add
add
mov
in
dec
js
mov
pop
xchg
sub
insb
test
loope
and
push
dec
sbb
in
popf
sahf
jp
and
add
cmpsb
loop
movsl
sub
mov
mov
push
or
adc
xchg
loopne,pn
out
mov
repnz
cld
out
cmp
cs
sbbl
sub
repz
push
jl
bound
sbb
mov
fwait
sbb
cmp
xor
xor
lea
jge
pop
fnstcw
xchg
pop
mov
xchg
out
aas
fnstsw
xor
orl
push
icebp
jecxz
icebp
dec
xchg
fwait
cmp
jmp
cs
outsb
pop
aam
adc
daa
pop
int3
je
aam
push
stos
scas
rcll
mov
fs
out
lock
pop
add
xor
aad
or
push
pop
daa
adc
adc
outsl
cvtdq2ps
cmp
xor
neg
jmp
mov
ljmp
mov
dec
sub
mull
mov
nop
mov
adc
xor
bound
and
adc
adcb
jne
add
in
pop
jle
sti
pop
inc
pushf
pop
imul
sub
pop
xchg
ret
cmc
cmp
cmpsb
xchg
add
xchg
dec
sarb
pop
pop
or
aaa
mov
jge
popl
dec
xchg
shl
sub
pop
rcll
or
sbb
loopne
int3
xchg
int
repnz
cmp
pop
or
hlt
icebp
je
mov
rcrb
jp
andl
test
fs
mov
mov
insl
xchg
fbld
fsubrs
sbb
mov
adc
or
test
cli
sub
push
cmp
jge
test
popa
cli
pop
jge
test
mov
pop
inc
mov
push
inc
cmpsb
push
test
repnz
jge
adc
xor
pop
or
ja
jbe
pop
xor
movsl
mov
ficomps
mov
pop
clc
cmp
sbb
or
imul
outsb
push
push
in
cld
adc
icebp
int3
imul
mov
adc
inc
lea
inc
in
aas
daa
or
enter
adc
adc
repnz
pop
cltd
xor
mov
ficompl
cmpsb
fstp
adc
cltd
xchg
jbe
lea
push
mulb
sub
xchg
jno
dec
sbb
and
lds
xlat
mov
arpl
lahf
lods
dec
push
jecxz
into
xor
cltd
and
xchg
shll
lret
rorb
pop
cmp
jbe
adc
and
psubsb
adc
mov
movsb
jmp
push
psrlq
cli
push
js
jbe
movsb
pop
movsb
push
fwait
addr16
cmc
push
xlat
nop
mov
idiv
push
pop
jo
cltd
cmp
sub
or
in
and
leave
imul
pop
sar
xchg
inc
cs
ja
mov
lcall
and
sbb
stc
lahf
fcoml
pop
inc
cmp
ja
dec
lds
imul
push
push
jns
dec
lret
jg
mov
jbe
fadds
fisttps
fs
sahf
mov
inc
pusha
xor
insb
xor
mov
in
xchg
adc
pop
or
test
lahf
mov
scas
and
or
cmp
dec
jb
lret
add
aaa
mov
mov
lock
cmc
repz
and
sti
xchg
xchg
xor
outsb
mov
mov
insb
add
push
lock
pop
lock
push
push
adc
sbb
fisttpl
aaa
in
es
int
les
push
inc
cmc
mov
and
shl
test
stos
subl
stc
rep
adc
mov
stos
and
das
mov
push
ret
push
mov
dec
popa
mov
repnz
ficompl
stos
sbb
aam
push
stc
cltd
jno
test
je
mov
xor
pop
jecxz
mov
push
pop
das
aam
outsl
mov
push
int3
mov
jg
mov
xor
test
sub
pop
mov
movsl
sahf
and
xlat
add
xchg
fisttps
and
notb
pop
js
aas
adc
outsb
test
jbe
leave
xor
aam
mov
ret
xor
out
mov
bound
fimull
adc
jecxz
sbb
jl
cld
stc
mov
rorb
mov
mov
rcr
loope
hlt
xchg
mov
dec
addr16
int
push
leave
inc
mov
rcrb
mov
aaa
fnstsw
mov
test
movsl
popf
mov
mov
xchg
shll
pop
out
cli
mov
cmpsl
fmul
popa
pop
jae
sbb
sub
out
xchg
rclb
and
loop
lea
sti
push
adc
aaa
add
lret
xchg
fisubrs
or
push
dec
sbb
inc
dec
jmp
inc
cltd
lret
jg
and
or
or
dec
or
cmp
ljmp
nop
pop
mov
push
rclb
fwait
out
divl
orl
test
jle
stos
inc
lret
ret
pmaddwd
mov
pop
fildll
dec
cmpsb
jno
xchg
fildll
sbb
sbb
scas
inc
nop
scas
add
fsts
idiv
inc
fs
rcl
mov
push
aaa
enter
loope
fdivs
adc
jmp
int
cmp
push
into
and
xchg
sbb
jo
mov
inc
jae
data16
xchg
pop
xchg
mov
out
pop
aas
xchg
xchg
rcl
mov
fnstcw
movsb
idivl
scas
inc
sub
xchg
mov
cltd
in
mov
mov
push
dec
adc
cwtl
shlb
add
test
in
je
inc
inc
fadds
repz
test
test
int
std
test
test
cmpsb
and
popa
jg
xchg
ret
or
adc
push
or
inc
cmp
or
negb
push
and
xor
xchg
mov
inc
popa
cs
cmpsl
mov
jecxz
xchg
cwtl
stc
repz
aam
push
xchg
xchg
sbb
fs
mov
inc
adcl
rcrb
and
jge
notb
cmpsl
cmp
sub
push
es
mov
lret
ds
fisttpl
bound
push
mov
lea
xor
adc
lret
lods
inc
fldcw
rolb
scas
daa
jge
xchg
dec
loop
mov
out
mov
jge
cmpl
mov
fisttpl
jbe
aaa
inc
sahf
je
inc
std
mov
cld
jb
jno
lods
inc
cli
movsb
js
sbb
sahf
movl
jnp
sahf
and
cmc
xor
dec
dec
add
scas
adc
test
adc
dec
jl
jle
xchg
xchg
das
fwait
bound
lcall
xchg
add
bound
and
and
push
pop
jge
jo
lds
gs
xchg
push
mov
mov
add
push
sub
dec
mov
cmp
push
jle
test
dec
inc
dec
lret
jnp
sub
in
cs
cmp
cmp
jne
into
jae
stos
mov
cld
imul
hlt
mov
lret
dec
mov
and
imul
addr16
mov
in
stos
mov
aad
pop
es
movsl
scas
aad
inc
push
pop
mov
cmp
test
popa
test
fadds
das
lcall
sbb
repz
popf
xchg
xor
sbb
add
xor
mov
jo
arpl
pop
test
lods
mov
push
adc
xor
ficomps
cld
mov
std
ljmp
pop
dec
inc
mov
enter
and
mov
fimull
popf
icebp
test
fisubs
and
inc
lcall
inc
mov
and
inc
inc
or
jne
fstpt
stos
push
dec
popa
mov
les
les
mov
dec
sbb
test
sbb
cmp
movb
dec
xchg
dec
pop
xor
lds
push
jno
jo
jbe
mov
or
imul
ss
inc
icebp
cs
mov
test
jge
out
inc
push
test
popl
lcall
insb
and
int
in
jp
and
jo
cmp
in
and
mov
addr16
xor
ja
inc
leave
inc
sbb
xor
jecxz
mov
mov
xor
aaa
jns
xor
iret
cmpsb
mov
jae
xchg
lret
sub
add
xchg
in
and
addr16
lret
pop
mov
jne
push
or
aam
cmc
jge
add
or
jl
sub
pop
sub
rcrb
adc
and
lahf
push
rcrl
fmull
bound
xor
imul
mov
jge
jle
pop
popf
lods
jnp
jle
add
ret
in
inc
pop
lods
cmpsl
adc
push
incl
popa
fcompl
dec
mov
xchg
mov
dec
sbb
mov
xor
divb
and
popf
sbb
push
outsb
cmp
hlt
push
outsb
mov
add
push
out
repnz
scas
mov
cmp
jl
push
outsb
fstpt
nop
js
dec
pop
push
push
es
call
cmp
js
xor
sahf
hlt
cld
shrl
aas
test
push
stos
sahf
xchg
ss
mov
shll
loope
mov
pop
push
adc
popa
mov
aam
ds
xor
jae
in
mov
sbbb
cwtl
sub
enter
lods
aad
xlat
cmp
ljmp
loope
dec
out
hlt
push
loopne
push
cli
mov
call
or
mov
hlt
xchg
push
sbb
mov
outsb
sub
shl
and
sahf
dec
mov
mov
rcl
pop
fsubl
sbbb
jmp
or
shr
std
xchg
pop
sub
int
jae
or
adcl
rorb
xchg
xchg
aaa
lret
les
idivb
xor
out
mov
cmp
mov
aam
mov
push
lea
xlat
loope
lcall
pop
inc
test
rorb
ja
sbb
faddl
test
dec
rcr
fadd
outsl
push
sub
js
arpl
push
cli
cmp
add
mov
push
cld
subb
stc
inc
fxch
xor
outsb
ds
jo
inc
fwait
xor
xor
add
mov
and
pop
push
sub
dec
popa
ljmp
mov
mov
and
cmpsb
push
lahf
bound
aas
ss
aas
push
jbe
dec
cmp
add
pop
addr16
shlb
aaa
sub
lods
test
mov
int3
scas
mov
out
cmp
sub
mov
cli
sbb
out
or
cmp
cwtl
inc
adc
clc
sub
popa
push
iret
jns
or
cmp
add
adc
push
in
aas
push
pop
mov
mov
pushf
movsl
ret
aaa
and
dec
mov
test
xchg
fisubrl
sub
mov
xor
pop
sub
dec
jmp
push
inc
push
cmp
popa
outsl
push
fnstcw
hlt
testl
pop
sbb
xorl
dec
rcl
mov
push
xor
daa
dec
daa
aad
jl
or
mov
pop
leave
fadd
out
scas
add
xor
test
inc
stc
jbe
cwtl
lds
push
mov
mov
push
rcrl
out
cmp
stos
dec
mov
xchg
cld
inc
mov
inc
xchg
inc
jae
xor
mov
ret
in
sbb
popa
dec
mov
cltd
or
cmp
nop
and
outsl
mov
jg
dec
cmp
jge
xchg
mov
imul
sub
xchg
or
xchg
rep
mov
test
int3
dec
loopne
jg
xor
push
xchg
mov
sub
std
mov
out
and
sbb
int3
icebp
and
xor
cmpsl
jmp
jbe
or
and
outsb
call
push
sahf
cmp
sub
mov
jge
or
mov
andb
jg
imul
push
xor
lahf
dec
inc
sub
in
mov
and
sub
sub
outsl
cmp
into
mov
and
inc
jo
cld
or
jp
test
stos
aam
or
call
push
shll
push
xchg
out
jno
hlt
adc
push
clc
cmp
push
stos
mov
out
stos
bound
add
cmp
cmp
mov
ljmp
adc
adc
xchg
mov
mov
adc
in
cmpsl
add
subb
lods
loopne
push
outsb
or
xchg
movsl
mov
dec
pop
mov
xrelease
adc
inc
sbb
xor
or
adc
pop
aas
xlat
mov
cmc
repz
notb
jmp
sbb
in
pop
push
mov
lock
arpl
mov
sub
lcall
out
xor
xchg
nop
and
loopne
sub
jp
out
push
roll
shll
pop
xchg
sbb
inc
out
nop
add
xor
aas
lds
loope
pusha
mov
outsb
loopne
add
ljmp
mov
rcl
divb
lods
sub
adc
adc
inc
dec
imul
fdiv
cld
jo
adc
cmpsb
pop
xor
push
adcl
int
mov
mov
call
pop
bound
cmp
rorb
fcoml
mov
outsl
daa
scas
pop
push
out
and
xchg
lods
fmulp
loopne
out
shll
sarl
add
popf
xchg
icebp
call
loopne
pop
divb
jle
ds
pop
gs
jge
aad
outsl
lahf
sbb
jmp
cwtl
cmp
sub
lds
sub
and
sbbl
jecxz
pop
inc
pop
mov
jge
xchg
mov
sbb
xor
xchg
push
int3
push
xchg
mov
cmp
in
inc
nop
jne
and
insb
sub
cmp
cmp
cmc
mov
mov
jl
mov
stc
aad
dec
push
pushf
insb
mov
cmp
int
shlb
std
stc
roll
or
imull
add
popf
stos
jne
pusha
and
and
sbb
jp
mov
hlt
orl
fs
jle
adc
mov
movsl
aad
lods
lods
lahf
push
test
push
and
imull
jle
ret
lods
pop
dec
add
sbb
loopne
or
out
push
add
lods
sbb
xlat
dec
xchg
inc
mov
sub
enter
sub
jecxz
sbb
mov
out
adc
mov
repnz
adc
mov
push
orb
imul
mov
fs
mov
enter
add
jge
pop
sub
test
dec
push
or
mov
jb
dec
sbb
cmp
jmp
das
in
pop
dec
lods
out
jno
jno
into
mov
test
cmp
xchg
dec
cmpsb
subl
add
dec
fisubrl
pop
divb
cmp
aas
adcb
loope
addl
sbb
fstpl
dec
sbb
and
pushf
rol
loop
xchg
in
jnp
push
mov
lret
and
xor
mov
push
jg
jb
jp
rcrl
jo
mov
xor
out
jmp
add
jo
cli
pop
dec
rolb
cmp
mov
popa
sub
rcl
sarl
xchg
sbb
out
imul
sub
jmp
ret
xor
push
xchg
daa
loope
jae
repz
imul
lret
dec
lea
adc
push
pop
pop
aad
fs
enter
pop
mov
dec
sbb
out
adc
sbb
insl
mov
stos
andb
fcomps
leave
or
cmpsl
imul
mov
jb
jl
fsubrp
or
add
inc
popf
push
mov
push
mov
mov
cli
adc
xor
sahf
dec
lahf
sbb
gs
or
jg
push
jo
fcmovnu
mov
imul
jp
push
lahf
jge
ret
adc
test
jae
clc
mov
inc
shl
xchg
lret
imul
xchg
jo
push
enter
inc
and
ss
imul
sbb
mull
lcall
jnp
sbb
xchg
pop
loopne
fnsave
push
pop
sub
imul
inc
cmp
mov
movsb
ret
test
add
mov
aaa
aam
cmp
dec
lds
xor
push
dec
pop
pop
movsb
add
sahf
popf
pop
fwait
sarb
or
xor
jge
lahf
lea
rcrl
mov
add
fimuls
xor
aad
mov
mov
pop
adc
int3
ds
cld
cwtl
dec
gs
cmp
rcr
loope
mov
dec
and
inc
sbb
sub
jo
sub
jo
out
call
negb
ss
ficoms
in
inc
clc
int
sub
cwtl
adc
hlt
outsl
xchg
pushf
adc
and
push
push
xor
lds
mov
sub
adc
and
popl
fstl
lds
mov
shll
mov
idivb
insl
jne
jns
dec
mov
inc
sub
xor
xchg
xor
fs
mov
inc
push
insb
push
je
add
lds
rcr
lret
jp
fistpll
test
pop
pop
out
insl
es
loopne
pushf
push
decb
jg
and
push
mov
pop
pop
iret
jl
or
mov
in
xchg
stos
or
jecxz
add
cs
je
xchg
bound
fnsave
inc
cmp
or
jmp
cmpsb
jp
push
push
sub
jo
fninit
psllw
cmpsl
add
decl
iret
xchg
or
scas
in
pop
sub
enter
mov
dec
pop
loopne
jmp
mov
xchg
out
iret
jl
jle
lcall
push
xchg
pop
jmp
mov
inc
and
push
testb
sub
xor
sbb
mov
jbe
mov
mov
jb
mov
xor
add
mov
adc
jns
stc
data16
sbbb
aas
fdivr
mov
lock
inc
jl
shll
jecxz
mov
aas
dec
xchg
sub
in
frstor
stos
in
adcl
aad
push
push
push
insl
popf
ss
dec
jge
jns
sbb
xchg
lret
aam
adc
sbb
movsb
fisttpl
stos
xor
jns
outsl
mov
nop
div
inc
or
sub
sti
jle
xchg
pop
jo
and
xchg
movaps
add
fcmovnbe
scas
push
inc
das
in
movsb
and
aaa
test
adc
cmp
sbb
mov
aad
loope
pop
xchg
xchg
xor
cmp
push
mov
dec
sub
ja
mov
scas
iret
fwait
outsb
lods
addb
and
jecxz
stc
xchg
je
imul
bound
jp
sahf
in
push
mov
sar
inc
add
test
push
cmp
xor
dec
jne
jne
jp
sub
inc
ja
add
pop
rclb
pop
dec
nop
decb
das
in
add
lods
pop
in
lock
jmp
push
sbb
aaa
mov
int3
daa
push
les
js
lock
and
addr16
adc
dec
push
cmpsl
in
aas
gs
jns
or
pop
ljmp
sbb
jo
mov
xchg
dec
imul
sti
xor
cmp
xchg
mov
mov
rcr
mov
call
adcl
xchg
in
das
out
ret
dec
cmp
push
xchg
mov
cltd
or
scas
or
cmpsl
out
jg
cld
jle
xchg
add
popa
insb
repnz
mov
icebp
sbb
push
loop
inc
je
fucomp
push
lock
test
sub
rorb
loopne
mov
inc
in
xchg
imul
inc
mov
pop
lea
inc
ljmp
mov
push
jne
push
xchg
push
aam
jb
sub
xor
jg
sbbl
adc
sub
dec
bound
arpl
mov
js
gs
dec
sub
push
icebp
imul
dec
test
mov
push
clc
test
jns
outsb
movsl
pop
loopne
lea
jno
jg
dec
inc
and
cmovbe
stc
dec
push
in
scas
cmpsl
jne
push
mov
test
mov
hlt
jne
sbb
pop
add
jb
cmp
inc
pop
ljmp
push
and
sub
and
jmp
fwait
push
xor
push
nop
loop
shl
or
out
adc
add
test
mov
lret
pop
xchg
popl
arpl
fadds
int3
je
xor
fs
mov
mov
faddl
cmc
ss
push
xchg
stc
xor
fmul
popa
fdivl
arpl
add
testb
mov
lahf
mov
xor
add
mov
mov
sysenter
aas
mov
mov
inc
jp,pt
addl
mul
mov
addr16
psubusw
sbb
lret
bound
out
xchg
sbb
jp
or
xor
jg
shrb
sub
inc
sbb
lods
jns
lahf
int
push
sbb
mov
inc
adc
sub
enter
or
fldt
in
repnz
icebp
cwtl
fs
lahf
cli
and
mov
int3
ja
test
cltd
test
sbb
je
iret
add
push
inc
adc
dec
sbb
movb
pop
test
andl
and
pushf
addl
clc
pop
mov
xor
aad
icebp
cmp
mov
lds
icebp
andb
dec
adc
mov
or
arpl
imul
clc
incl
pop
jg
mov
adc
std
lds
fnsave
xchg
jg
stos
mov
xchg
mov
shrl
jg
push
out
xchg
stc
inc
daa
inc
enter
or
out
or
sbb
push
inc
outsl
addr16
jae
je
dec
and
pop
cmpsb
cmp
jg
cmc
adc
xchg
pop
cmpsl
push
pop
lcall
sub
neg
daa
mov
ret
int
cmpsl
inc
lcall
sbb
mov
add
jnp
jo
movl
sahf
rcl
jle
pop
mov
dec
jl
cmc
push
nop
xor
xchg
fcomps
sbb
mov
ja
xor
ret
mov
int3
jns
mov
or
inc
add
ds
fwait
inc
scas
sbb
jnp
mov
ret
insl
pop
popf
js
outsb
shll
fidivrs
mov
int3
mov
pop
fdivs
and
xchg
pushf
stos
ror
cld
into
test
add
repnz
test
dec
into
cmp
xchg
xor
sub
fcoml
imul
inc
cli
orb
mov
pop
pop
pop
dec
movsb
mov
call
enter
stos
arpl
aaa
push
add
cmp
pop
int
push
ja
push
std
jge
pusha
jmp
cmc
xor
mov
les
lea
insb
addr16
movsb
fcmove
jbe
mov
lea
xchg
jg
cmpl
aad
xor
imul
les
lock
data16
mov
inc
pop
xor
shlb
repnz
ss
mov
lret
xchg
add
cltd
push
cltd
sti
jecxz
in
mov
mov
mov
mov
jle
inc
cltd
fst
push
adc
push
push
jnp
mov
sub
xor
fsub
or
shrl
push
cmp
pop
mov
fs
leave
insb
push
popa
scas
add
jo
pushf
sub
mov
aam
outsb
ss
mov
lods
popl
test
movsb
loope
insb
jle
cmp
out
cltd
inc
inc
movsb
inc
lret
fwait
push
xor
add
jge
in
shlb
sti
xor
pop
pop
andl
sbb
jge
adcl
adcl
mov
rcrl
or
or
or
mov
push
cmc
sub
rcrl
mov
ret
lret
jp
pop
mov
daa
mov
jle
mulb
fisubs
leave
icebp
mov
test
pop
xor
gs
dec
repz
iret
mov
nop
xchg
scas
and
sub
test
jge
test
mov
cltd
imulb
cmpsl
and
subb
loope
fisubs
dec
and
stc
and
repnz
cmpsb
dec
sbb
cmp
xchg
push
addr16
sbb
lret
ja
call
sub
push
je
mov
leave
dec
arpl
jmp
jg
or
sbb
push
arpl
xchg
mov
push
xchg
adc
or
lea
cmpsl
mov
mov
cmp
dec
orb
cmp
ljmp
stc
xorl
xor
and
sbb
sub
sahf
cld
out
nopl
jnp
push
xor
loopne
bound
in
mov
pop
addr16
es
dec
mov
adc
lods
or
mov
dec
xor
jmp
enter
add
jne
js
cmpsb
arpl
out
imul
cmp
jno
rol
movsl
adc
ret
ds
loopne
inc
arpl
test
sbb
push
imul
dec
xchg
cmc
add
outsl
sti
sbb
add
inc
mov
daa
test
insb
sbb
mov
or
clc
fwait
std
push
push
cmp
cmc
out
out
sti
sub
xor
jo
movsl
push
jns
pop
clc
xor
insl
jne
inc
adc
add
inc
rclb
outsb
sub
pop
pop
cs
mov
shrb
fstpl
push
inc
fs
push
ss
insb
sbb
xchg
aaa
fwait
daa
ds
push
mov
inc
add
enter
mov
cmp
jp
rcrb
test
push
xchg
cmp
jo
xor
imull
ss
roll
pop
pop
arpl
aaa
in
mov
mov
jno
scas
mov
mov
jnp
xor
sbb
insl
or
pop
pop
push
scas
mov
js
out
add
push
mov
dec
in
adc
jo
push
xor
mov
shrb
mov
cltd
jg
stos
dec
or
adc
or
cmpsl
lods
dec
jnp
into
jnp
mov
sbb
jns
and
arpl
jns
mov
movsl
shlb
aaa
int3
dec
and
or
dec
inc
fldenv
cmpb
jno
cwtl
mov
mov
sub
mov
or
push
pop
jno
popf
xor
push
mov
lret
clc
mov
dec
lretw
and
fistpll
jle
ds
adc
into
arpl
jno
inc
push
call
xor
nop
lret
adc
cmpsb
mov
outsl
push
and
mov
fstps
xor
imul
lods
daa
stos
cmovg
arpl
loope
mov
push
cmp
aaa
inc
lcall
ret
faddl
xchg
cmp
stos
aad
repz
int
sbb
jp
sbb
out
jge
movb
insl
mov
fwait
aas
mov
test
push
mov
mov
sub
push
mov
adc
xlat
sub
std
adc
mov
popa
sub
js
dec
iret
dec
cld
cmp
rcr
inc
mov
add
jne
mov
les
fs
jae
cmp
or
adc
cmp
lahf
fwait
push
out
and
pop
inc
arpl
hlt
ljmp
jnp
or
pop
pop
rcrb
out
add
ror
or
push
sub
push
or
lea
sbb
or
add
out
or
call
lods
fbld
cmp
pop
stos
je
inc
arpl
sub
dec
cmp
mov
or
xor
jmp
js
iret
in
and
or
push
repz
lock
lahf
test
es
sbb
mov
popa
int3
pop
push
fs
dec
fmull
outsl
popa
xchg
jbe
fs
mov
sub
mov
stos
mov
out
out
xlat
inc
cmpl
lea
test
mov
out
jge
fldenv
outsl
and
mov
popa
and
mov
mov
pusha
push
gs
mov
aas
xchg
cltd
aaa
pop
sub
mov
sub
adc
xchg
adcb
loopne
or
fists
in
addr16
mov
pop
and
lock
sarb
pusha
popa
xor
mov
les
jno
mov
dec
pushl
mov
jg
sbb
sbb
or
cmp
inc
add
ss
pop
pop
outsb
pushf
dec
in
add
pop
test
sbb
adc
fidivrs
inc
aaa
jle
push
icebp
xlat
inc
ljmp
in
inc
outsb
sub
sub
in
in
pop
lock
out
push
push
mov
lahf
fwait
mov
cltd
inc
sub
push
not
dec
rorb
fisttps
push
mov
in
pop
xchg
jge
and
incl
mov
xchg
sub
or
nop
mov
inc
mov
dec
out
sub
leave
dec
jnp
out
sbbb
jp
inc
mov
les
jecxz
imul
pop
cmp
xlat
xchg
movsl
cs
add
andb
out
jle
cmp
fxch
cmp
test
ja
push
mov
cli
movsb
pop
shr
pop
out
pop
mov
mov
jecxz
ficomps
bound
and
mov
jp
mov
ja
stos
mov
imul
ror
andb
push
jae
mov
es
mov
dec
into
loope
ds
xchg
insb
cmp
and
dec
repz
xchg
inc
push
sbb
gs
push
addr16
jg
ret
daa
jmp
mov
adc
push
push
aaa
psubq
push
pop
pop
pop
lahf
jecxz
mov
pop
clc
add
pop
ret
divb
push
lods
cld
ja
insl
mov
cmp
add
pusha
lods
jb
imul
jo
sbb
inc
xchg
sahf
cmp
adc
cmc
pusha
xchg
test
or
dec
mov
jbe
dec
clc
mov
adc
pop
mov
lahf
xchg
mov
je
jmp
popa
mov
sub
pop
jg
lock
fisttps
repnz
jecxz
je
dec
mov
ljmp
sbb
loopne
iret
sub
int
jno
dec
and
test
sub
cs
inc
pop
mov
push
add
mov
xchg
fiaddl
adc
sbb
incb
jno
and
mov
adc
fnsave
jge
icebp
sbb
jle
mov
or
out
mov
mov
or
cmp
mov
jp
or
mov
jb
arpl
out
ds
imul
fwait
movb
les
ljmp
out
jno
aas
pop
jne
cmpsl
mov
xchg
jge
mov
sarb
repnz
bnd
out
lret
scas
mov
pop
inc
xchg
xchg
xchg
push
clc
fsubrs
ljmp
leave
sbb
int3
cmpsb
outsb
sbb
jae,pn
mov
pop
cmp
dec
and
call
jno
test
sbb
xchg
test
inc
sub
in
pushf
push
jne
scas
dec
pop
sub
orb
xchg
cmp
in
ret
push
push
loop
or
mov
mov
gs
int
push
sti
out
les
cmpb
insb
push
out
push
js
std
incl
cmp
mov
mov
decb
cmp
mov
jbe
or
int3
or
xor
sbb
cli
outsl
cmp
std
add
out
pop
push
pop
mov
mov
push
or
out
hlt
mov
add
insl
sub
jecxz
sbb
lret
call
ds
sub
outsb
dec
pop
inc
cmp
fidivrs
pop
push
push
inc
sub
jg
xchg
mov
inc
jmp
dec
enter
and
xchg
add
out
add
bswap
cwtl
mov
fistpll
daa
mov
dec
adc
push
jecxz
mov
push
adc
push
ja
insb
cltd
pushl
push
cmpsb
xchg
jmp
cmp
and
push
clc
xor
dec
pop
push
lock
orb
cmp
lcall
mov
cmp
test
in
in
je
push
jns
jnp
in
mov
cmp
dec
xorl
daa
pop
pop
push
sarb
xor
mov
pop
lahf
adc
out
dec
mov
fstpl
pop
cmp
sahf
fnsave
inc
mov
add
pusha
cmp
aad
add
add
xlat
and
push
push
mov
insl
inc
mov
mov
or
notl
test
xchg
mov
mov
pop
inc
adc
or
je
or
pop
daa
andb
cmp
jecxz
bound
mov
sahf
mov
into
inc
lret
sub
mov
das
popa
icebp
in
mov
mov
xor
movl
out
fwait
cmp
add
ja
fimull
pop
adc
in
or
pushf
iret
adc
and
sbb
mov
rorl
push
xchg
pop
cmp
and
or
bound
call
cmp
aam
jmp
rorl
inc
mov
cmp
in
subb
or
xor
cwtl
adc
in
test
cmp
cmc
shrl
ss
rolb
and
leave
test
xor
mov
adc
inc
mov
and
jg
mov
and
mov
and
sub
push
inc
jecxz
mov
sbb
and
pop
out
cmpsl
stos
sar
xchg
push
pusha
daa
mov
push
rdtsc
jb
cmpsb
cmp
pop
cld
sub
std
ret
xchg
lahf
xorb
lock
movsb
or
push
movsl
sti
add
or
jmp
or
or
adc
in
daa
or
out
in
and
and
pop
lds
scas
jle
sbb
inc
xchg
lods
ljmp
xor
nop
push
xor
sbb
add
pop
mov
push
fs
fadds
ds
lods
hlt
fisubl
jbe
pop
lret
and
cmp
or
xor
clc
inc
jae
and
out
aam
mov
leave
fstps
lahf
mov
inc
xchg
loope
pop
lock
jg
xor
ss
jmp
cs
sti
mov
push
jle
adc
sti
xchg
add
lahf
hlt
pop
pop
bound
popa
cld
pop
test
cmp
push
pop
jmp
insb
cmp
inc
les
dec
lods
xchg
test
cld
mov
in
loopne
cmc
and
cmp
xchg
mov
stos
xor
scas
sub
pop
add
push
push
xchg
or
xor
and
ret
push
adc
mov
loopne
sub
pusha
rol
pop
clc
test
cld
add
jae
cmpsb
mov
hlt
mov
std
pusha
aaa
aam
push
dec
mov
adc
popf
outsl
bound
js
dec
pop
mov
sbb
add
sbb
mov
js
fs
pop
pop
ds
cmpsb
add
es
pop
enter
sub
adc
mov
dec
adc
dec
fisubrl
cmp
ja
arpl
xor
aaa
stc
pop
popa
jae
test
jae
mov
cmp
std
or
sbb
lret
repz
setge
shlb
adc
mov
pop
inc
sub
cmp
data16
int3
pop
popfw
cmc
sti
enter
stos
push
lods
imul
iret
mov
mov
test
dec
pushf
jge
sub
rcrb
in
fidivs
out
or
adc
inc
clc
and
inc
cltd
cmpsb
jns
dec
dec
cmp
dec
xchg
push
jb
mov
sbb
scas
rcrl
jge
in
xchg
ljmp
fists
and
push
jle
and
xchg
mov
add
add
add
mov
pop
subl
push
and
sti
fucom
jge
clc
mov
xorb
jmp
jnp
imul
push
adc
nop
insl
xor
add
mov
mov
and
push
mov
sbb
ja
and
sub
lret
mov
mov
xchg
test
adc
jg
aas
jle
mov
stc
adc
rol
xor
sbb
xor
jne
insl
mov
xor
out
xchg
add
sub
lods
scas
or
adc
ss
sbb
cld
sub
xor
xchg
cmpsb
rcrb
push
lahf
ja
sbb
mov
pop
jl
jecxz
fdivs
cmp
push
or
or
scas
test
into
inc
outsl
jmp
pusha
or
xchg
rorl
and
xor
dec
in
div
aas
out
enter
shlb
inc
mov
int
push
jns
adc
repnz
dec
inc
out
call
inc
jns
lret
pop
mov
ljmp
pushf
nop
call
insb
out
scas
inc
out
lock
jae
jo
sub
hlt
inc
sti
and
mov
lret
add
ds
adc
cs
fbld
jp
push
mov
repz
xor
add
add
inc
dec
add
push
push
rorl
aam
xchg
in
xor
aam
ret
stc
pop
jle
outsl
push
cmpl
fiadds
mov
aad
add
mov
mov
movsl
push
inc
pop
dec
fisttpl
or
and
xor
mov
cmp
and
adc
insl
cmpsl
jne
ret
mov
rolb
aam
mov
repz
out
jmp
pop
repnz
push
mov
arpl
das
sub
adc
xchg
sarl
icebp
jg
aad
cld
adcb
xor
lea
jecxz
aaa
sbb
xor
dec
shll
xchg
cwtl
movsl
sub
outsb
cmpsb
inc
cmp
dec
and
cwtl
jle
mov
mov
push
call
mov
or
jecxz
inc
mov
mov
mov
imul
mov
jg
dec
fld
cmp
fsts
cli
push
les
out
add
or
shlb
fs
mov
and
adc
jp
imul
xor
and
and
jle
popf
lds
dec
lahf
enter
mov
call
mov
sbb
fidivl
xchg
out
or
inc
or
xchg
insb
je
or
cmp
and
fnsave
ficoms
xchg
lret
push
cld
inc
jae
dec
sub
xor
movsl
negb
adc
inc
sahf
das
or
inc
pushf
addr16
xchg
dec
adc
pop
mov
test
in
fmuls
sub
cmpsb
sbb
shlb
push
sbb
in
jle
and
sub
into
mov
shrl
add
inc
repnz
xor
cwtl
and
loop
scas
in
pop
jb
push
dec
mov
sbbb
sarb
and
mov
cmp
sarb
je
mov
insb
sub
int
add
and
into
add
imul
jno
add
pop
mov
imul
inc
rcl
in
shrb
lods
popf
xor
mov
shll
inc
test
cmp
mov
jae
sbb
pop
es
mov
and
test
ljmp
mov
xchg
add
stos
adc
cmpsl
dec
cmp
xor
cld
mov
lcall
mov
iret
lahf
add
aaa
fsqrt
sub
sbb
and
jne
mov
shll
and
repnz
cld
jecxz
pop
xchg
fildll
push
add
pop
notb
rol
sbb
mov
fucomp
cmp
inc
inc
inc
fildll
pop
xor
push
dec
or
sub
adc
test
xor
subb
cmp
repz
sbbl
sarb
jo
sub
lea
arpl
aaa
adc
negb
idivb
jle
mov
loop
adc
inc
dec
push
dec
xor
fsubs
pusha
jae
mov
cmc
out
lahf
mov
lcall
or
out
jns
shlb
ljmp
xlat
clc
xor
mov
insb
frndint
jmp
inc
xchg
cli
movb
repnz
adc
scas
jle
dec
cwtl
imul
subl
loop
push
std
addr16
pop
cmc
loope
mov
lcall
jne
popl
add
mov
adc
or
lock
lods
cld
push
sbb
mov
mov
xchg
cmp
jle
mov
test
xor
sbb
dec
cmp
xchg
test
add
iret
imul
sub
cmpsl
ljmp
jbe
push
sbb
jo
je
inc
fs
cmp
jp
adc
inc
mov
jb
popa
xchg
in
and
out
adc
inc
jecxz
notl
mov
daa
xchg
sahf
nop
shrb
mov
cpuid
dec
adc
or
nop
jns
pusha
sub
daa
sar
push
ljmp
sub
xchg
mov
mov
shr
or
popw
adc
stc
mov
sbbb
fwait
test
jge
call
fprem1
testl
mov
fsub
mov
lcall
mov
andb
add
es
scas
or
fisttps
cli
cld
icebp
sub
inc
sbb
scas
movsb
pop
cmp
loop
xor
or
mov
and
pop
pop
std
mov
push
lods
rcrl
jmp
out
lock
imul
inc
xchg
adc
es
push
adc
je
mov
jne
call
adc
lea
push
or
mov
pushf
stos
inc
outsl
fadd
stc
dec
les
jo
cltd
ret
pushf
mov
xlat
in
scas
mov
out
pop
jl
addl
cmpsl
cmpsb
pop
mov
or
pusha
aas
xchg
xor
mov
scas
in
leave
pop
cmp
or
je
repnz
int3
mov
data16
lock
jmp
pop
aaa
dec
adc
push
shl
jne
out
mov
stos
and
mov
insl
jp
adc
repnz
scas
jp
mov
imul
fsubrp
cs
js
test
add
lods
jns
cmp
push
iret
sbb
loopne
and
sti
xchg
dec
lock
rol
cmp
in
jmp
mov
push
and
and
push
jl
movsl
xchg
adc
or
push
std
adc
repz
in
loope
out
bound
test
pop
sbb
je
jo
outsb
aam
lret
ja
sahf
into
push
sarb
movl
fiaddl
inc
sub
test
inc
and
faddl
inc
insl
data16
fadd
insl
push
xchg
sub
sbbl
xchg
out
adc
sbb
mov
mov
pop
lahf
std
jbe
cmpsb
mov
adc
xor
sub
sbb
hlt
cs
in
lret
nop
adc
pop
adc
scas
repz
mov
mov
push
pushf
or
pusha
and
daa
mov
ret
jnp
cs
clc
shlb
inc
test
or
pop
stc
fsubl
test
jnp
dec
xor
push
mov
add
shll
loop
cmc
je
xor
or
ja
in
cltd
movb
push
pop
push
test
lock
pop
jno
adc
repz
xchg
test
push
fs
orb
sub
and
mov
rolb
sub
jmp
aam
mov
add
aam
in
and
xchg
mov
push
sbb
and
mov
sbb
mov
mov
dec
nop
es
sbbb
mov
pop
lds
inc
jb
or
out
adc
mov
or
movsl
inc
mov
jno
insl
aam
or
push
int3
fnstcw
cltd
pop
or
sbb
leave
dec
pop
lds
xor
rorl
sti
stos
mov
push
dec
pushf
scas
mov
leave
or
mov
add
cmc
fnstsw
movsb
aad
or
cli
pop
add
jle
lret
into
mov
dec
mov
pop
addr16
repnz
jp
pop
jmp
dec
xchg
or
adc
mov
and
fcoms
push
jge
mov
mov
mov
sub
flds
sub
mov
and
mov
idivb
bound
cli
mov
pop
push
mov
stos
xchg
fstpl
in
dec
sbbb
mov
out
jae
sub
ds
ja
xor
cltd
xchg
add
loope
sbb
dec
stc
mov
sahf
ss
adc
repnz
cmp
imul
pop
cmpsl
aam
les
xchg
push
hlt
and
insb
pop
aaa
outsl
add
jnp
mov
cltd
shll
lret
mov
ss
icebp
movsb
out
test
daa
repnz
mov
mov
mov
jmp
mov
and
pop
adc
xchg
ja
dec
adc
push
mov
sub
and
pop
push
pop
addb
loop
in
xchg
jg
pop
rorl
adc
push
ljmp
add
sti
inc
jle
pop
std
pushf
sbb
cs
in
sbb
mov
cwtl
push
jge
dec
scas
pop
inc
xchg
scas
test
test
jnp
jne
sbb
loopne
js
mov
pop
or
pop
dec
fcmovne
jp
fwait
inc
mov
xchg
test
jno
push
daa
fcompl
sub
push
or
add
cmpsl
in
fisubs
pop
add
sbb
or
mov
scas
stc
or
and
sbb
cmp
stc
and
xor
add
dec
mov
push
or
add
dec
pop
test
ret
jno
adc
out
jns
cs
push
jecxz
arpl
sbb
shlb
idivb
sbb
mov
sub
cmpsb
stos
jno
jae
add
xchg
cltd
enter
push
push
mov
jmp
test
or
cmp
mov
xor
into
dec
orb
xor
mov
push
jo
jecxz
icebp
js
jmp
in
dec
out
mov
adc
stos
jmp
lahf
daa
out
cmp
pop
sbb
test
popf
adc
fcomip
xchg
lock
ss
cmp
inc
pop
push
adc
iret
ja
jb
int
rcrb
xchg
repnz
lods
sub
pop
cmp
scas
cs
je
jmp
inc
xor
mov
decb
ret
movsl
and
inc
out
int3
das
push
jmp
xchg
pop
adc
xor
lret
sbb
ljmp
lahf
loopne
pop
jo
cmp
out
xor
out
ja
pop
or
out
or
fistpl
fsubrp
mov
jg
xor
test
cld
jnp
jp
pop
xor
dec
jae
cmc
fisubrl
scas
arpl
clc
in
push
out
out
in
cmp
ret
mov
fimull
lds
mov
push
inc
ret
mov
test
in
jb
js
xor
ret
repz
test
call
xlat
mov
je
loop
xchg
stos
jp
adc
pop
sarb
inc
and
gs
gs
inc
lods
roll
lods
mov
sub
popa
jp
mov
fsubrs
lahf
jl
adc
insl
lea
test
push
pop
int
inc
cs
sarl
xor
add
fidivl
jmp
jmp
adc
pop
sbb
mov
xchg
pop
xchg
shlb
mov
mov
inc
mov
js
sbb
add
std
inc
mov
cmp
jge
inc
or
and
push
mov
mov
adc
push
shlb
mov
mov
push
test
push
loope
cmp
mov
dec
shlb
mov
push
int3
xchg
adc
mov
repz
sahf
jb
daa
cltd
mov
jl
xchg
dec
xchg
push
dec
sub
out
adc
rcrl
bound
cld
out
fnsave
mov
jbe
dec
lret
movsb
mov
inc
leave
cmp
sub
clc
orb
jns
lds
mov
and
push
sub
and
fcmovb
xchg
lods
enter
lods
adc
mov
lcall
aam
sbb
or
aas
loope
mov
dec
mov
ja
incl
mov
cmp
sub
adc
in
mov
cmp
jb
xchg
jl
add
jmp
in
mov
mov
test
and
lea
stos
push
addr16
sbbb
mov
lahf
sub
mov
push
dec
lock
out
push
sbb
popa
stc
fsqrt
shr
jbe
or
sbb
insb
ljmp
and
mov
daa
fists
xchg
cmpsl
shl
jmp
inc
or
pop
out
or
mov
lret
push
inc
lds
sub
icebp
sub
pop
xchg
ljmp
jecxz
adc
cmp
sub
push
or
pop
mov
and
xchg
mov
jne
ret
xchg
lret
adc
pop
dec
insb
xchg
mov
int3
ror
into
pop
dec
pop
lahf
pop
inc
outsb
jbe
pop
jecxz
adc
push
mov
adc
push
outsl
dec
repz
xchg
not
in
bound
push
dec
cmc
stos
popf
cmp
cmc
mov
jns
xor
cmp
add
dec
xor
out
or
cmc
loope
test
jno
sbb
xchg
lcall
scas
int3
jns
push
mov
fnstsw
mov
ss
jne
inc
push
jmp
pushf
mov
push
scas
testl
lahf
out
add
pop
jne
cmp
xor
cmc
aad
ror
sahf
jp
nop
fwait
or
lock
je
push
and
sub
hlt
pop
dec
cmp
movb
nop
pop
jmp
lds
cli
stos
push
push
mov
in
sbb
mov
xor
xor
adc
cmp
mov
jbe
lahf
cmp
shrb
loope
jl
test
sti
pushf
mov
mov
stc
leave
cmp
or
xchg
add
mov
and
pop
adc
inc
sbb
add
jo
std
adc
mov
add
add
cli
popa
jp
push
adc
aam
pop
jo
dec
hlt
cmp
mov
lahf
adc
xchg
scas
inc
jae
aaa
jecxz
es
jl
xorb
xor
scas
loope
leave
mov
int
xchg
out
xorb
pusha
jg
ja
or
in
or
or
sub
xchg
mov
jle
mov
mov
and
nop
pop
movsb
sub
sahf
mov
or
adc
testb
jns
repz
adc
fidivs
jno
mov
fwait
or
add
leave
cmpsb
pop
daa
pop
fisubs
sub
fildll
xor
xor
jb
mov
fistps
fmul
insl
hlt
pop
xchg
mov
mov
hlt
pop
aaa
stos
adc
sub
fwait
popf
jns
inc
xchg
imull
sbb
push
jle
adcb
cs
test
popf
mov
dec
std
pushf
jae
es
out
stos
imul
add
repz
mov
push
rcr
mov
mov
push
jmp
leave
add
xor
mov
xchg
cmp
fstl
push
pop
aas
inc
push
insb
dec
aam
cwtl
pop
push
aam
jne
dec
inc
xchg
pop
mov
fs
leave
jl
lcall
out
or
in
outsl
pop
jmp
push
fldenv
hlt
ja
jle
ss
aam
cmpsl
lock
xor
pop
cmc
pop
jbe
jmp
insb
inc
cmp
iret
pop
ret
jp
test
push
ror
loopne
aam
or
sub
adc
or
or
and
sbb
mov
inc
mov
popa
inc
jnp
sbb
pushf
pop
mov
shl
push
gs
xor
xchg
out
add
popf
xchg
gs
ljmp
das
cmp
jno
aad
fsubl
mov
pop
scas
push
or
inc
lret
adc
stos
outsb
insl
shr
xchg
xor
in
loop
cmpsl
mov
mov
xchg
xor
jae
je
lret
aad
add
inc
xorb
das
push
imul
addl
loop
jle
cmpsb
cmp
mov
jnp
out
out
mov
int
or
mov
scas
xor
push
adc
push
adc
cmp
jns
fldl
aam
add
das
push
pop
loopne
aam
jecxz
arpl
fiaddl
inc
movsl
sub
cmp
jecxz
jnp
jle
xor
jg
xor
les
fwait
or
rcrb
sarb
mov
mov
fwait
daa
aad
adc
fwait
outsl
sbb
das
mov
xchg
into
andb
push
xor
ljmp
and
lods
cltd
cmp
movsb
mov
sti
add
xor
cmp
push
push
inc
rorb
loop
mov
imul
push
popf
fsubrs
pop
push
pop
add
add
mov
sahf
addl
cmpsl
jge
insb
es
and
pop
scas
mov
xchg
add
mov
sti
out
in
testb
mov
test
or
dec
fneni(8087
punpckhwd
inc
fstl
jae
clc
adc
add
mov
or
js
cmp
adc
repz
xchg
push
ret
lss
aam
data16
outsl
push
dec
add
cmp
movsl
out
popf
lahf
enter
inc
js
es
add
mov
js
jb
loope
loope
mov
mov
lods
sbb
add
insb
lcall
ja
outsb
dec
and
imul
test
pop
inc
dec
mov
push
push
fadds
movsb
imul
lcall
adc
mov
int
in
test
mov
or
and
pop
cmp
xchg
out
in
int3
mov
hlt
mov
lcall
lret
fisubrs
push
pop
cmp
mov
lahf
and
out
movsl
mov
int3
mov
dec
sbb
xchg
dec
es
data16
add
bound
leave
aad
dec
leave
pop
mov
jmp
int3
push
cmp
fidivs
push
mov
test
mov
mov
sti
mov
cmp
fidivs
push
lret
dec
adc
push
loop
xor
mov
cmp
aad
les
test
mov
addr16
push
out
into
cmp
inc
repz
xor
push
sbb
mov
in
sbb
scas
lods
fcmovnbe
imul
jns
shll
lea
sbb
add
ret
stos
dec
jno
mov
xor
bound
out
lea
push
imul
mov
call
xor
jecxz
pop
xchg
stos
push
outsl
lcall
push
adc
inc
mov
sbb
adcb
or
shll
bound
test
pusha
stos
cwtl
stos
dec
push
fdivrs
mov
jbe
xchg
or
cmc
lea
cmp
adc
imul
jge
xor
jle
and
dec
adc
mov
rcrl
popa
fcoml
mov
cmp
arpl
mov
lea
dec
or
xor
gs
fucomp
push
jle
test
fstpl
je
inc
mov
js
xor
movaps
lods
bound
cmc
sbb
sub
inc
std
pop
aas
cmp
xor
dec
or
stc
xchg
jns
pop
roll
jg
aam
jmp
out
jp
sbb
nop
lret
dec
sahf
push
sbb
xor
sbb
or
es
popa
xchg
pop
jmp
fwait
adc
test
movsl
notb
ret
test
inc
or
xchg
fsubl
stos
testb
jb
sub
push
mov
mov
xchg
nop
dec
xchg
push
lcall
jecxz
jmp
dec
stc
pop
mov
hlt
sti
lods
cmp
mov
out
sbb
push
xchg
jno
push
lcall
xchg
jg
mov
daa
flds
icebp
js
add
sub
add
aam
inc
xchg
inc
inc
insl
adc
movzwl
fisubrs
pop
push
jno
cwtl
movsb
add
fs
aas
std
into
cmp
jl
mov
xor
imull
call
dec
and
mov
lock
xor
test
addr16
push
repnz
xchg
fcoms
les
mov
out
jnp
pusha
addl
jl
mov
mov
outsl
jnp
cmp
loope
xlat
out
js
pop
sub
mov
aam
int3
sbb
inc
mov
int
loope
lock
cmp
inc
lret
mov
fdivrl
ss
xchg
frndint
pop
outsb
int3
cmp
out
scas
sbb
mov
push
fadds
push
movsl
sbb
cld
nop
dec
push
jg
addb
and
lods
and
pusha
clc
lea
pushf
xor
push
fldl
lods
movsb
push
xor
adc
or
inc
pop
cmp
add
pop
fmull
pushf
cmpsb
mov
movsb
xchg
jle
je
enter
jnp
int
loop
test
pop
repz
repnz
xchg
push
das
cmpsb
mov
arpl
dec
inc
cltd
insb
sub
xchg
call
aaa
jno
pop
je
adc
dec
ret
inc
pop
cmpb
nop
fidivs
pop
shl
and
iret
xchg
add
mov
neg
fsts
mov
push
adc
ss
rorb
dec
inc
fisttpll
dec
pop
mov
icebp
aaa
in
popw
popf
inc
cmp
mov
repz
xchg
stc
adc
loopne,pn
xchg
inc
cmp
add
sbb
cltd
ret
insl
adc
adc
and
out
xchg
mov
ljmp
sub
push
iret
popa
je
out
jle
mov
sbb
pop
hlt
imul
lret
das
icebp
add
dec
cmp
or
ja
sbb
sbb
push
inc
shl
jae
cmc
fnstsw
lds
fdivr
into
ret
xor
jmp
out
insb
in
lods
in
pop
mulb
jbe
mov
xchg
jb
in
adc
mov
std
mov
enter
pusha
jmp
sub
test
xor
or
shrb
test
jecxz
jo
xor
add
dec
insb
adc
fdivl
lock
push
idiv
filds
add
add
push
ret
mov
loopne
in
jae
mov
mov
std
sub
aad
pop
pop
sar
jmp
sub
mov
das
mov
pop
das
movsb
mov
popf
cli
cmp
cltd
adc
push
lock
pop
lods
fs
xchg
test
aad
add
nop
inc
clc
popa
test
rcl
mov
inc
lock
lods
sub
shr
and
jne
stc
aas
popa
cwtl
dec
int
sub
or
dec
std
adc
mov
and
adc
pop
imul
or
mov
sub
mov
xchg
jge
jl
cmpsb
lods
jno
sub
push
xchg
jle
hlt
jae
in
push
vmaskmovdqu
jmp
movb
ds
int3
cmpsl
scas
stos
scas
ss
jnp
insb
out
cs
cmp
popf
push
pop
jp
lahf
std
xchg
loopne
jge
mov
mov
push
in
jnp
ret
xchg
orl
scas
movsb
xchg
lock
sbb
fdivr
scas
and
pusha
movsl
cmpsl
mov
roll
pop
scas
lcall
cli
movsl
outsb
cli
das
adc
sarl
lods
sub
sbb
aam
add
lcall
mulb
add
mov
and
mov
out
test
jmp
cli
mov
mov
push
push
or
popa
mov
sbb
mov
cld
scas
mov
adc
nopl
pop
cmc
fcomps
sbb
xchg
pop
inc
pop
rcrl
push
decb
mov
movsl
xor
testl
call
jne
movb
pop
jecxz
sbb
mulb
cmp
jo
sub
test
fwait
dec
xchg
and
mov
adc
int
sbb
inc
add
popf
repnz
sbb
sub
or
add
pop
std
test
inc
mov
test
jns
xor
loope
mov
stos
pop
mov
dec
push
nop
loopne
xor
sahf
cmpsl
jecxz
cmpsl
cwtl
addr16
or
or
cmp
sbb
mov
inc
inc
ljmp
jbe
into
push
inc
jle
enter
idivb
pusha
inc
mov
cmp
das
arpl
lret
and
ret
push
adc
sbb
outsb
mov
jo
mov
es
test
mov
lcall
pop
out
adc
popa
mov
fnstsw
mov
enter
cmp
mov
lcall
push
popf
sbb
xchg
pop
aaa
jecxz
mov
daa
mov
sub
add
mov
cmpsb
sahf
xchg
dec
inc
add
bound
scas
fadd
xchg
push
fildll
rorb
dec
outsl
pop
cwtl
adc
js
cltd
sbb
push
aaa
inc
and
into
adc
dec
pop
dec
test
pop
xor
dec
xchg
adc
sbb
jp
cmpb
lcall
int
dec
aam
jl
iret
arpl
daa
jmp
jae
sbb
vmovaps
mov
andl
fwait
sbb
bound
lods
mov
ret
sub
xor
shrb
mov
dec
jmp
push
call
sub
addr16
dec
subb
insl
inc
mov
dec
in
xchg
loop
shrb
jle
inc
std
pop
call
stos
out
int
xchg
out
dec
adc
dec
je
push
cmc
movsb
mov
scas
je
mov
or
lds
movsl
das
fidivrs
mov
movl
int3
lods
inc
insb
push
lcall
push
and
sbb
in
sub
lds
jne
add
xchg
popf
mov
imul
xor
jge
push
push
lret
mov
lret
xchg
shlb
mov
aas
jbe
call
bound
xchg
sbbb
addr16
xchg
cmpsl
adc
push
add
and
cltd
jle
pop
xor
cmpsl
sarb
xlat
mov
aas
xchg
aaa
add
lahf
inc
mov
test
dec
cmpsl
xlat
nop
jno
incl
stos
sbb
push
aad
xor
xchg
sub
cmp
sub
ja
es
or
out
jno
hlt
hlt
repnz
pop
lods
sub
faddp
ljmp
clc
out
mov
mov
movntq
jg
pop
pop
imulb
shlb
mov
lcall
jl
leave
add
lea
jns
mov
sbb
lahf
inc
sbb
sahf
jbe
sti
cmp
jmp
js
dec
mov
adc
push
pop
or
fimull
pop
xor
out
mov
xor
das
int3
bound
xor
or
pop
dec
jne
sarl
ja
adc
mov
aas
fisubrl
lret
in
ja
xor
jge
sbb
ud2
dec
jecxz
pop
mov
xor
sbb
fdivs
rclb
and
pop
insl
mov
loop
or
and
cmp
fmull
jbe
push
repz
je
test
and
in
enter
out
xchg
adc
pop
jno
test
mov
cwtl
lret
cmpsl
sbb
pop
or
test
sti
dec
rcrl
mov
outsb
les
fidivs
add
and
pushf
testb
mov
or
mov
out
mov
pop
inc
mov
insb
mov
arpl
and
int
pusha
dec
pushf
push
mov
mov
push
ljmp
xchg
mov
mov
or
mov
jbe
insb
dec
sbb
int3
aaa
dec
inc
test
pop
mov
in
fcom
push
xlat
lcall
in
test
sbb
aaa
mov
add
and
lods
adc
mov
and
jecxz
inc
lods
call
mov
mov
mov
sbb
mov
out
stc
inc
push
test
cmovbe
aam
dec
jnp
in
in
scas
cmp
jae
mov
sbb
sub
pop
cli
push
adc
dec
push
mov
cmpsb
fidivrl
adc
call
stos
rep
ret
out
or
lea
testb
mov
xchg
imul
ss
aam
fcoms
ja
aas
mov
mov
out
cli
cmp
lcall
pop
call
mov
mov
mov
stos
jecxz
test
stos
inc
in
lret
int3
push
mov
lea
out
sahf
xchg
js
inc
xor
lds
jnp
push
mov
add
ret
adcl
in
jbe
leavew
jnp
cli
popf
xor
rcll
push
mov
mov
push
ljmp
cltd
push
and
pop
inc
into
xlat
and
rep
pushf
stos
adc
add
xchg
pop
outsb
call
frstor
mov
jecxz
adc
outsl
mov
push
repz
inc
jge
adc
in
jge
bound
hlt
insl
xchg
sbb
test
ret
or
xor
mov
adc
popf
movsl
scas
jmp
mov
scas
sub
mov
mov
sub
add
ja
pop
cmp
sub
lret
pop
lahf
inc
xchg
int
add
push
ljmp
pop
pop
popa
cli
xchg
push
outsl
pushf
roll
aas
nop
xchg
inc
shlb
mov
dec
xor
adc
dec
incb
push
dec
mov
sbb
sbb
pop
xor
cld
adc
addr16
mov
mov
inc
imull
and
or
insl
addb
sti
sbbb
sbb
int3
or
roll
rcll
pop
mov
dec
les
fst
xchg
lret
inc
adc
loop
mov
loopne
xchg
cwtl
add
fcom
xchg
mov
cwtl
jns
mov
lock
inc
adc
mov
test
out
repz
push
jmp
mov
sahf
das
xor
sbb
or
daa
mov
das
push
adc
sub
clc
mov
adc
or
jns
loop
fisubrl
push
or
add
mov
or
push
ret
jge
and
adcl
iret
xor
lock
rcrl
push
add
and
mov
adc
push
inc
outsl
and
shrl
mov
xor
adc
test
or
out
fsts
and
fimull
sbb
xlat
xchg
and
push
jbe
jl
jmp
shufps
loopne
jns
sbb
dec
inc
pop
dec
xchg
pushf
cld
cli
fs
xor
add
mov
and
add
push
fildll
add
inc
cld
xchg
pop
hlt
dec
push
sbb
mov
cs
or
push
adc
add
sbb
arpl
or
mov
lock
mov
sbb
jae
adc
int
movsb
dec
stc
pushf
inc
andb
clc
xor
fstpt
mov
mov
fidivrs
pop
mov
aam
lods
je
das
add
pcmpeqd
faddp
cwtl
insb
aad
iret
imul
out
jle
xor
xor
mov
mov
call
xor
xorb
xchg
out
xchg
std
popa
or
std
and
or
aaa
lcall
repz
movsl
xchg
lds
scas
pop
xchg
pop
repz
int3
xchg
lds
inc
nop
cmpb
test
xor
lods
dec
sub
xchg
lcall
rcr
cmp
sahf
xor
xor
out
cmpsb
ret
out
jecxz
xor
addr16
imul
enter
xchg
inc
xlat
ja
sub
sbb
cld
push
jg
cmp
fstps
jno
loopne
loopne
xchg
mov
fisubrs
pop
addr16
mov
inc
lret
jmp
sbb
out
jo
pop
pop
mov
mov
cmp
dec
cmp
push
push
loopne
fisubrl
dec
push
xor
rorb
cmpsb
ret
inc
std
leave
mov
push
out
jmp
cmp
movsl
xchg
ret
stos
sti
or
scas
xorl
cli
mov
das
or
in
js
repz
jae
jb
mov
les
xchg
add
pop
adc
mov
aam
mov
data16
ljmp
and
add
xor
adc
inc
ret
and
cltd
jne
mov
out
fbld
mov
xor
mov
sbbl
jb
inc
mov
push
dec
loopne
and
movl
push
and
xor
push
orl
mov
int
mov
mov
push
daa
ret
movl
arpl
pop
mov
or
sbb
and
mov
addb
sub
pop
imul
xchg
movsl
jmp
jno
mov
pop
jp
and
imul
dec
lahf
imul
push
mov
test
xor
cli
dec
sub
jle
ss
ds
add
xor
shl
or
ds
lea
lret
jg
mov
fiadds
mov
and
out
ja
ljmp
cmp
xchg
mov
movups
dec
add
fistpl
mov
mov
bnd
stc
pmaddwd
jae
xor
in
cmp
and
outsl
xchg
addr16
ljmp
sub
imulb
mov
mov
lods
dec
sub
dec
adc
cmp
inc
out
or
or
movsb
adcl
aaa
adc
mov
js
fdivrl
jmp
add
insl
jne
out
mov
inc
and
stos
lret
aam
dec
cmp
andl
loope
dec
xchg
ds
sub
adc
aaa
dec
inc
in
int
popf
cltd
xchg
dec
daa
pop
std
jno
rcr
mov
pop
in
inc
cmpl
and
adc
addr16
or
leave
fsub
xchg
movsl
and
aam
ret
addb
jmp
dec
repnz
movsl
lea
sbb
stc
cmpsb
sub
outsl
cmpsb
les
test
sahf
pop
adc
stos
mov
ja
lahf
mov
int
aad
insb
dec
jl
lahf
inc
lea
insl
lods
sub
pop
lds
scas
add
hlt
or
xor
pop
cmpsb
inc
xlat
aad
fcomi
mov
fstp
pop
lods
inc
xchg
push
stos
call
dec
aad
adc
ss
pop
add
adc
mov
jge
decb
sbb
xorl
dec
inc
inc
and
pop
mov
mov
mov
dec
pop
adc
sbb
aaa
cld
dec
pop
test
sub
sub
fistpl
add
stos
adc
jo
and
push
dec
testl
mov
cmp
fsts
into
popf
je
or
cmp
mov
sub
jnp
adc
rolb
inc
je
fsts
loop
xor
inc
into
ret
or
test
das
sbb
addl
aad
stc
sub
jnp
repnz
fnsave
sub
movsb
add
xor
jmp
push
test
test
push
out
add
mov
clc
popf
sti
mov
mov
dec
pop
adc
inc
arpl
push
rorb
add
gs
enter
lods
shrl
outsb
xorb
push
push
xchg
mov
dec
sub
ljmp
dec
add
cld
jmp
in
dec
sbbl
les
and
or
into
hlt
loop
movsb
push
sbb
ja
mov
int
fstl
nop
jg
cltd
lcall
mov
adc
sahf
cltd
add
push
cmp
xor
enter
jns
inc
movsb
add
outsl
test
cmp
mov
pop
push
or
adc
add
mov
add
lock
fwait
scas
icebp
icebp
sbb
ja
jo
mov
push
outsb
rorl
arpl
or
cld
mov
aaa
shll
incl
lcall
push
insl
je
mov
inc
int3
ret
cld
ss
popf
cmpsl
mov
fcomip
ja
clc
xor
push
cld
lcall
loopne
insb
add
mov
and
ljmp
lds
add
pop
xchg
add
push
lcall
ss
xchg
or
aaa
mov
mov
scas
xchg
mov
je
ljmp
jne
leave
push
in
gs
and
out
dec
xchg
cmp
xchg
sub
mov
into
mov
or
xlat
pop
pop
call
out
push
xchg
daa
xchg
lods
daa
les
push
dec
push
jle
loopne
adc
lahf
pop
push
pop
inc
push
push
aas
dec
mov
pop
and
adc
outsl
cld
dec
fidivl
inc
imul
fldt
out
mov
into
mov
ds
or
call
xor
dec
push
mov
adc
and
les
pop
out
adc
push
insl
popa
enter
pushf
popf
pop
cmp
add
mov
test
ficoml
push
inc
out
push
dec
fisttpl
mov
xor
cli
pop
mov
icebp
std
in
adc
test
jge
leave
pop
xchg
mov
decb
roll
in
or
out
lret
mov
sbb
je
mov
sub
jge
xchg
inc
aaa
xchg
in
mov
fnstenv
movsb
pop
or
xchg
je
out
cmp
and
mov
shr
and
lret
inc
cmp
pop
dec
mov
jmp
sbb
jo
test
mov
sbb
in
ljmp
lock
in
sbb
add
pop
fsub
sub
das
ja
mov
sub
inc
pop
jecxz
lea
xchg
mov
push
hlt
lds
and
mov
jge
fsubrs
mov
jo
dec
mov
sbb
pop
in
xchg
mov
push
es
add
cmovle
mov
fs
add
push
lcall
and
fbstp
mov
inc
xchg
mov
les
push
cwtl
push
and
ret
lret
adc
and
push
insl
shll
test
cmc
dec
test
cld
jns
addr16
dec
cmp
or
lret
imul
ret
into
out
fists
adc
mov
mov
and
adc
or
dec
sbb
addr16
cltd
lock
sub
jecxz
sbb
shrb
mov
cmp
cmp
dec
sbb
push
lds
call
stos
mov
mov
rorl
shrl
lods
stos
sbb
xchg
imul
push
xlat
shrb
scas
sub
dec
cmp
clc
sbb
xor
add
inc
or
imul
es
mov
jbe
mov
adc
sub
xor
pop
hlt
adc
xchg
push
pop
mov
rclb
cli
gs
stc
push
jne
std
js
push
rcr
pop
mov
inc
xchg
push
enter
mov
xchg
mov
sub
sub
aam
pop
daa
das
shld
test
cs
jp
ret
movsl
sar
mov
adc
push
mov
push
sbb
clc
jnp
or
pop
jbe
cmp
test
aad
inc
call
hlt
shr
lds
push
sub
jmp
jae
pushf
add
cwtl
mov
pop
shl
push
push
aam
in
idiv
pop
mov
jge
jbe
pop
std
inc
bound
loope
cmp
inc
mov
mov
movsl
sahf
aaa
and
pop
cmc
push
rorl
push
int
and
jo
in
push
xchg
xchg
sbb
stc
das
xorl
xlat
pushf
sbb
cwtl
jl
sbb
lret
in
xchg
mov
push
xor
in
push
add
or
ret
pop
sahf
dec
jp
xchg
stos
adc
sub
stos
es
sarl
add
popf
rcrl
jle
sbb
sbb
adc
not
jo
popf
out
inc
rol
sar
in
sbb
arpl
sti
ret
loope
ljmpw
add
in
std
adc
xor
mov
fmull
outsl
sahf
push
test
xchg
out
dec
pop
dec
dec
pop
xchg
stc
jmp
adc
pop
mov
xor
xor
outsb
stc
or
add
lods
adc
gs
cvtdq2ps
xor
push
and
dec
cmp
mov
push
iret
cmp
arpl
lock
jmp
dec
push
into
lds
sub
cmp
add
mov
xor
test
stos
rcl
pop
adc
xor
call
sahf
mov
add
cmp
imul
mov
aam
xlat
pop
pop
cs
fwait
xchg
cmpsb
fstpt
xor
and
pop
mov
xchg
fprem1
sub
push
jmp
and
data16
mov
jo
aad
or
mov
jb
xor
xchg
leave
mov
hlt
xlat
shll
fsubrp
fldcw
aas
cmpsb
lock
xor
mov
mov
push
lcall
dec
cmp
dec
jge
pusha
jl
xor
push
jno
into
mov
jp
mov
add
and
sbb
mov
adc
push
sub
ret
icebp
aad
jg
jae
sahf
enter
xchg
push
cmc
aad
dec
jle
cmpsb
cmovae
ret
call
adc
inc
sbb
xchg
gs
bound
aaa
bound
pushf
loop
fists
jmp
scas
mov
cmpsl
jne
or
sub
add
pop
cmp
jne
adc
sti
fimuls
jle
xchg
dec
lret
popa
push
arpl
call
pop
pop
pop
dec
lret
pop
iret
lods
scas
in
adc
and
aaa
mov
insb
sbb
sbb
maxps
xchg
inc
jl
lock
mov
shl
out
sbb
mov
mov
push
mov
push
sarl
in
mov
xor
xchg
shr
mov
test
pop
adc
dec
std
fnstenvs
add
lahf
sub
sub
sarl
adc
loope
xchg
push
xor
icebp
loope
fldz
stos
sbb
lret
adc
mov
pop
cld
pop
jns
pop
into
fwait
lods
xor
add
mov
fistl
mov
dec
fistl
push
dec
aaa
xchg
mov
aam
jo
test
ret
dec
sbb
cmp
push
sbb
sbb
insb
enter
mov
clc
imul
or
xchg
jle
sti
mov
cmp
fidivl
sub
or
jmp
mov
jmp
imul
fcoms
or
es
mov
pop
repnz
das
jb
shrl
adc
push
pop
les
ret
das
pusha
fs
jo
lods
xchg
adc
sbb
xchg
clc
popf
jge
mov
push
xlat
in
insb
ret
adc
cs
mov
mov
les
fwait
mov
fld
repz
jecxz
adc
dec
pop
clc
sub
inc
repz
adc
or
mov
aaa
jae
aaa
pop
sarb
jmp
pop
and
add
mov
mov
push
sbb
and
dec
ljmp
std
sub
push
lods
mov
pop
push
inc
xor
xlat
pushf
cmp
cltd
fwait
pop
xor
testb
sub
dec
mov
test
sub
cli
lcall
dec
out
lods
inc
jnp
jno
arpl
popl
das
fdivp
dec
mov
and
add
jmp
in
cmpsb
mov
int3
ds
test
lcall
mov
jb
outsb
outsl
cmp
out
jo
lcall
xor
sub
jmp
push
and
movsb
sbb
jbe
dec
cmp
pop
jne
cmc
cmp
aam
push
mov
or
pop
mov
pop
mov
pusha
jo
adc
fsubr
std
mov
xchg
cli
loope
jae
outsb
adc
fcmovnu
and
sahf
fidivrs
punpckhwd
rorb
jmp
sti
dec
out
push
adc
and
pop
sbb
lahf
push
out
or
and
fbstp
cmp
mov
dec
add
jmp
inc
jg
sub
test
cmpl
mov
aad
cltd
testb
ss
sub
daa
lods
xor
ret
jno
sbb
lcall
shld
jbe
cmp
rorl
data16
push
pushf
movsb
jmp
or
xor
push
mov
or
mov
mov
stos
out
xchg
mov
or
lods
mov
mov
or
push
sahf
popa
pusha
loope
movsl
dec
push
addb
mov
mov
mov
xchg
push
xlat
inc
dec
nop
xor
andb
or
mov
sbb
call
cltd
mov
jmp
sub
les
rcll
cmpsb
sub
dec
dec
add
add
sahf
sbb
fnstsw
sub
mov
adc
aaa
inc
push
ret
aad
repnz
stc
stos
jae
inc
and
cmpsl
push
pop
mov
pop
lahf
bnd
enter
mov
add
decl
xor
loopne
cmp
cltd
cmp
lret
cmpsl
addr16
bound
movsl
add
lock
or
add
in
aam
rcll
dec
xchg
pop
inc
jge
mov
fisttps
mov
cltd
sub
push
clc
xchg
mov
jle
inc
sahf
push
mov
rclb
data16
push
call
std
idivl
out
lea
or
xrstors
pop
mov
dec
lock
sbb
and
xchg
data16
inc
fbstp
gs
mov
je
lret
xor
mov
sbb
sbb
pop
ljmp
filds
adc
mov
xchg
imul
leave
or
push
in
aam
divl
push
adc
scas
arpl
adc
data16
dec
cmc
frstor
fs
ds
ljmp
push
gs
push
dec
jb
fidivs
aas
mov
and
aas
fs
pop
mov
jbe
add
jae
aam
xchg
xor
push
mov
es
les
pop
inc
lret
dec
sahf
into
int3
test
jg
pop
fwait
lcall
leave
cmp
add
test
mov
lret
or
in
inc
xchg
roll
nop
sbb
jg
jecxz
aam
loop
mov
scas
mov
int
sub
in
and
push
imul
inc
lret
es
fsubrs
fnstsw
push
push
cld
insb
ljmp
sbb
cwtl
not
or
test
xlat
mov
cmpsb
dec
inc
push
sbb
mov
aam
push
add
movsl
fidivs
sbb
mov
sarb
fistl
test
adc
xor
fwait
cmpsb
std
jmp
shr
jecxz
mov
dec
hlt
enter
cmp
enter
dec
adc
add
xlat
dec
nop
cltd
dec
pop
jmp
lds
ftst
arpl
adc
mov
sbb
aad
pop
shl
test
adc
xchg
je
push
hlt
xchg
cmp
sahf
push
test
mov
sbb
ret
mov
jno
xchg
std
ret
mov
out
mov
pop
add
scas
jl
subl
daa
mov
inc
sahf
mov
cmp
cmp
call
ja
jae
fs
roll
loope
shlb
popa
jb
andb
mov
cld
mov
or
mov
dec
xchg
lret
jne
inc
mov
xlat
mov
pop
ret
ret
xchg
xor
mov
add
inc
outsb
add
cmp
int3
sbb
jmp
ja
sar
mov
add
add
inc
inc
cmpsl
cmp
pop
push
mov
inc
push
shr
shlb
pop
in
jbe
dec
loop
fwait
loopne
inc
xor
xchg
sbb
int3
add
jg
cmp
scas
dec
jmp
cmp
add
push
push
mov
mov
cs
movsb
adc
daa
dec
in
rclb
jp
mov
sub
test
cmpb
mov
inc
cmpsl
jb
lret
mov
pop
loopne
mov
sub
xor
ds
inc
cmp
sbb
adc
push
aad
movsb
hlt
lcall
xor
mov
push
scas
xchg
stos
insl
jle
sbb
push
or
xchg
dec
xor
mov
das
jmp
fwait
scas
fisttpll
mov
and
stos
sub
or
push
inc
mov
push
or
je
lahf
xchg
scas
test
sub
dec
mov
jg
repnz
jge
lcall
adc
movb
lret
xor
rorl
lahf
xor
notb
faddp
jae
bound
dec
adcl
add
mov
repz
fistps
test
dec
inc
push
xchg
jb
xchg
frstor
mov
dec
adc
aaa
and
test
lret
mov
scas
push
or
test
lcall
jg
aam
inc
xorl
clc
xchg
fwait
lret
bound
mov
in
aad
push
sub
sub
daa
and
sub
pusha
cltd
loop
test
lahf
lods
sub
mov
popf
mov
xor
cltd
test
mov
mull
cwtl
roll
cmc
shl
pop
sub
rcll
int3
or
js
jnp
dec
fistpll
lret
or
mov
out
inc
in
cltd
or
jle
cmp
mov
xchg
roll
loop
sub
cld
mov
xor
jecxz
xor
cmpsb
fwait
outsb
and
out
cmp
push
inc
mov
pop
sbb
lret
outsb
cmp
sub
inc
add
mov
mov
cmc
jl
mov
or
outsb
ss
adc
jns
mov
fnstsw
mov
sahf
mov
ret
xlat
dec
inc
mov
clc
jle
and
push
cmp
leave
cmp
test
and
or
ja
push
fbld
jns
nop
les
mov
lea
mov
aaa
ret
fistpll
ret
and
je
and
add
iret
test
pop
inc
pushf
popa
loopne
pusha
loop
iret
mov
push
xchg
jns
in
pop
sbbl
pop
test
pop
rcll
into
lahf
je
jp
ja
aad
push
in
fsubrl
cmp
inc
push
sub
jo
cmp
cltd
and
mov
adc
std
pop
mov
js
cmp
mov
cmp
lcall
or
aad
sub
sbb
dec
mov
mov
adc
and
push
or
push
adc
jl
mov
pop
push
sbb
add
cs
xlat
call
ja
inc
das
pop
xor
xchg
fsubl
inc
int
mov
movsb
pop
mov
mov
testl
dec
stos
xchg
mov
ficoml
cli
rep
jbe
push
pop
icebp
cmp
fwait
add
je
popf
bound
adc
stc
cmp
pop
into
sub
xchg
gs
rcll
mov
jg
int3
jae
enter
dec
inc
mov
fs
ret
inc
push
xchg
dec
iret
push
int
je
cmp
in
mov
mov
cmp
push
sahf
cmpsb
xchg
in
sahf
dec
repnz
jo
add
dec
outsl
xor
push
lds
jge
sub
mov
sub
ja
std
ja
push
and
arpl
pop
loopne
int3
addl
sub
lods
inc
or
test
das
mov
out
scas
mov
cmp
fnstenv
lcall
mov
mov
mov
sbb
je
bound
cmp
push
orps
bound
nop
bound
shlb
sub
es
cmpsl
mov
pop
movsb
or
xor
or
dec
sub
sahf
push
sti
imul
dec
xchg
pop
adc
js
fiadds
jge
jl
xchg
add
dec
repz
adc
jae
xchg
jle
jnp
add
add
ret
ds
pop
lret
test
sbb
stos
jns
loop
mov
ret
leave
and
xor
push
xor
dec
cmp
mov
cmp
jle
jl
inc
loopne
sti
cmpsb
icebp
jg
adc
shll
mov
dec
outsb
lods
sbb
out
mov
aad
push
inc
outsl
dec
and
jmp
addr16
pop
out
stos
adc
cmc
sarl
add
divb
call
dec
jp
pop
out
cmp
xchg
jno
jne
in
out
pop
lcall
sti
fildll
push
xor
imul
mov
and
or
push
lret
cmp
xchg
sub
inc
mov
mov
fdivrp
mov
test
mov
pop
repnz
pop
jl
and
cltd
ss
mov
cmpl
pushf
and
scas
push
insb
insb
jae
xlat
sub
fisubrl
fdivl
jne
cmpb
sub
in
xor
pop
loopne
sahf
or
adc
int
jno
ret
mov
add
stos
xor
mul
mov
ja
and
push
mov
lds
dec
add
icebp
movsb
or
fwait
dec
ljmp
cmpsb
mov
adc
jge
mov
out
adc
inc
push
push
incl
mov
bound
mov
cwtl
gs
sbb
mov
sbb
lret
inc
mov
lock
and
sub
sbb
xor
loop
push
xchg
fs
repz
ret
mov
xchg
mov
and
add
jp
fld
movl
pop
adcb
inc
fimuls
jb
mov
gs
jno
js
mov
mov
mov
out
dec
jmp
int3
xor
sub
out
fmuls
inc
shrl
stos
out
inc
mov
dec
mov
enter
dec
dec
jmp
and
add
ja
and
loop
ljmp
push
pusha
mov
addr16
cld
incb
outsb
push
mov
punpckhwd
inc
and
xchg
xor
lds
mov
loopne
stos
pop
pop
jle
mov
loopne
mov
in
popf
sbb
test
loope
clc
dec
mov
jle
push
dec
dec
mov
gs
jg
cmpsl
xchg
loopne
mul
out
cmp
mov
xchg
mov
mov
mov
jmp
mov
pop
fs
negb
mov
stos
enter
jb
dec
inc
repnz
xor
je
add
sbb
inc
sub
rcll
outsb
mov
mov
or
hlt
add
stos
push
pop
sub
js
push
xchg
call
push
jp
lret
mov
daa
das
pop
cmpsl
sbb
dec
and
fildl
xor
cmp
pop
faddl
and
rorl
jne
mov
mov
xlat
not
pop
mulb
xchg
popa
lea
jp
mov
jecxz
dec
aas
outsb
out
and
xor
clc
mov
or
jnp
lahf
pop
hlt
jge
insb
dec
jo
inc
cmp
jle
xchg
lahf
cmovo
data16
xlat
out
imul
vsqrtpd
sahf
mov
and
xchg
add
testl
in
lock
jl
imul
test
xlat
in
mov
inc
xor
mov
mov
pushf
sub
imul
testb
inc
cmp
push
mov
leave
adc
leave
mov
mov
test
sub
psrld
test
ds
push
and
mov
push
add
inc
pop
daa
data16
jge
imul
inc
cwtl
jp
jle
sub
pushf
sbb
iret
mov
xchg
cmp
les
push
push
cmp
mov
jmp
adc
imul
or
add
loopne
pop
or
mov
add
push
shl
mov
sub
lahf
int3
out
mov
push
cmpsb
sbb
int
cmpsl
int3
in
sbbl
je
in
jl
add
or
in
outsl
iret
inc
inc
fidivrl
in
sti
fsub
fidivrl
xchg
nop
push
pop
or
jo
loope
arpl
loopne
cs
es
add
pusha
rcl
clc
mov
jp
out
push
notl
dec
or
popf
jb
lea
arpl
test
fadds
iret
enter
clc
or
sbb
test
arpl
mov
sahf
das
mov
jbe
sbb
dec
mov
repz
movsl
jbe
and
arpl
rcrl
cld
mov
insl
js
sub
fists
cmc
xor
ficoms
push
xchg
adc
mov
and
mov
adc
rorl
andb
stos
fcompl
lcall
ja
in
aam
or
lods
add
rcrl
out
fidivs
or
sbb
xor
arpl
inc
cmc
xchg
inc
aaa
mov
in
and
mov
leave
add
xchg
in
xor
arpl
js
stos
and
neg
pop
jecxz
jno
mov
jmp
std
mov
adc
jle
inc
fadds
loope
cmp
imul
mov
sbb
out
push
jo
add
mov
mov
xchg
sub
xchg
jae
adc
es
or
jno
or
xor
out
and
inc
cmp
push
cmpsl
lods
or
push
xchg
les
stos
mov
fistpll
ret
push
out
jmp
mov
push
inc
mov
add
add
rcl
outsb
push
cmp
sub
xchg
mov
push
dec
addb
lret
pop
stos
xchg
mull
and
test
fsubrs
jno
pop
iret
scas
xor
lret
sub
inc
stc
push
jmp
push
pop
mov
fstpt
ret
or
sbb
lret
sbb
sbb
inc
xlat
rorl
cmp
inc
pop
pusha
push
les
call
out
rolb
cmpsb
cltd
pop
call
cmp
test
jmp
sbb
inc
cmp
or
into
xchg
pushf
or
test
aad
xchg
add
in
data16
push
cmc
ljmp
aaa
jp
std
inc
inc
mov
cmp
sub
inc
sub
pop
and
pop
scas
mov
lret
jp
dec
xchg
xor
and
mov
clc
in
or
lcall
jle
test
loop
mov
mov
js
inc
das
shrl
xchg
jnp
mov
mov
jae
lods
fwait
imul
insl
test
sub
adc
lock
jno
or
shl
dec
dec
mov
cmpsb
mov
and
out
mov
sarb
mov
jo
adc
cmp
sub
mov
arpl
push
xlat
mov
fwait
mov
jns
jbe
fimull
xchg
mov
ss
sbb
mov
add
and
xchg
cmp
cmp
and
or
lret
lret
dec
lds
shrl
repz
sub
mov
mov
dec
fdivrp
fists
xor
aam
and
test
and
and
adc
lods
or
insb
testl
lea
ror
push
fstl
sbb
pushl
cmp
mov
test
mov
add
movsl
sub
inc
shlb
sbbl
add
pop
push
test
inc
or
scas
or
roll
and
mov
mov
scas
icebp
aam
pop
xorb
mov
mov
popl
out
call
aas
adc
fidivl
test
sahf
jnp
inc
cmpsl
scas
sarb
xchg
das
adc
shll
dec
sbb
es
mov
inc
std
or
sbb
lret
sbb
mov
dec
adc
out
icebp
mov
adc
mov
add
enter
stos
sub
push
stos
insb
push
push
xor
xor
adc
push
push
in
bound
rolb
stc
push
mov
jmp
in
mov
mov
sbb
jg
les
and
pop
sub
aaa
xchg
das
push
arpl
mov
push
push
add
inc
lds
aad
sub
push
dec
adc
mov
push
inc
cmpsl
mov
ja
bound
xor
cwtl
jp
cs
fadds
sar
in
pop
mov
jb
les
hlt
popf
mov
mov
jecxz
cld
loope
sarb
shr
add
mov
mov
mov
mov
je
stc
iret
sub
xchg
add
test
in
int3
xchg
push
hlt
sahf
fdivl
xor
testb
mov
ret
fwait
divl
push
adc
xlat
inc
stos
mov
sbb
cmp
sub
into
add
and
shrl
ja
pop
int
loopne
adc
mov
les
xor
lds
and
mov
push
jmp
cmp
insl
and
xchg
loop
scas
inc
jns
pop
mov
sbb
adc
mov
dec
lds
mov
inc
test
rcrl
lcall
lock
fsubp
xor
neg
sub
or
jmp
cli
stos
xchg
push
cmp
dec
in
xchg
inc
subl
or
dec
xor
cmpsb
outsb
leave
push
xchg
sbb
lods
movsb
jmp
mov
in
aad
pop
xor
jae
daa
aas
xchg
jge
imul
adc
shlb
mov
sbb
sbb
insl
mov
pop
loope
fsubl
and
or
daa
aaa
push
mov
pop
movsl
lahf
lret
cmp
ret
int
mov
dec
cmp
inc
addr16
sti
sbb
inc
enter
pop
or
adc
sbb
ljmp
fisttpl
test
sub
inc
daa
sub
imul
add
jge
push
inc
mov
jmp
add
cmc
test
mov
mov
out
cmpb
in
pop
into
and
and
jp
and
popf
popa
js
sbb
pop
lds
or
pop
mov
lahf
incb
repz
sbb
xchg
daa
fwait
cmc
dec
add
movsb
xchg
and
imul
cli
mov
fcmovne
mov
xchg
push
movsb
dec
mov
test
dec
or
mov
call
jns
cltd
xchg
xor
cwtl
xor
jnp
dec
pusha
cmp
leave
lret
das
and
cltd
add
pop
sbb
cmp
push
push
pop
notl
cltd
and
add
pop
les
cmp
adc
pop
aad
add
dec
adc
push
mov
call
add
dec
jne
pop
adc
movsl
cmp
mov
sub
andl
dec
fwait
out
inc
mov
inc
adc
dec
inc
inc
sbb
repnz
xchg
mov
or
addr16
test
dec
data16
jbe
xor
mov
rolb
sub
decl
inc
xchg
fldt
aaa
push
inc
add
scas
xor
and
push
shlb
arpl
add
test
sub
mov
and
mov
xchg
movsb
gs
and
sbb
repnz
aas
dec
mov
ljmp
xchg
movsl
push
outsb
jmp
add
test
scas
enter
ss
icebp
mov
enter
cmp
cmc
sti
inc
pop
gs
outsb
and
fldcw
xor
jns
dec
shll
xor
les
jecxz
and
in
adc
lret
scas
mov
adc
cwtl
scas
fldcw
mov
bound
test
int3
or
cmp
pop
aas
fsubl
xor
loopne
cmp
fsubrp
xchg
daa
pushf
dec
cwtl
cmp
cs
notl
aaa
or
ror
daa
jo
cmp
mov
inc
pop
add
stos
cmp
hlt
mov
ds
outsb
outsl
add
push
jae
xlat
aaa
mov
jp
insl
aam
cli
in
ljmp
rclb
pop
sub
lret
sub
lahf
negb
fistpll
inc
stos
decl
mov
mov
mov
sub
les
pop
fcom
adc
or
jp
inc
test
fstpt
adc
mov
int
notb
xchg
shrl
xchg
hlt
jecxz
mov
and
test
fcmove
add
cli
shrl
leave
out
cmp
inc
sub
dec
sub
stos
stc
mov
jg
fstl
sbb
mov
push
push
pop
jmp
lods
js
sub
fcompl
psrlw
mov
js
push
sti
mov
mov
gs
cmpsl
xor
mov
andl
mov
lods
or
cli
into
aam
push
lock
jo
push
test
incb
jns
movsl
sbb
stos
in
ficompl
inc
push
sti
ret
jb
hlt
rcll
cmp
lds
ret
pop
inc
xor
pop
xchg
out
es
cmp
push
pusha
adc
push
mulb
in
sahf
idivl
xchg
ja
orb
lods
aas
mov
imul
dec
push
dec
stc
test
sub
add
sub
outsl
jle
mov
dec
insl
jmp
xor
test
stos
cld
fldt
adc
dec
std
add
scas
jmp
pop
call
xor
push
jbe
sbb
in
call
test
push
pop
jle
aad
loope
shrl
insb
cld
mov
or
int3
adc
call
arpl
imul
int3
dec
xchg
cmc
lret
aad
xor
xchg
aad
ljmp
add
or
mov
movsb
mov
mov
push
xchg
jg
mov
xchg
xchg
xchg
sarl
in
rorl
adc
and
lods
rcrl
mov
mov
sub
icebp
fidivrs
shll
sbb
dec
add
sbb
fwait
xchg
clc
inc
mov
ret
mov
mov
or
ds
push
adc
mov
dec
cmp
jl
lahf
and
mov
pop
xchg
xor
rclb
hlt
sbb
ds
les
add
sbb
rolb
cltd
mov
in
loope,pt
pop
dec
icebp
mov
xlat
cmp
pop
xchg
into
mov
sub
inc
cmp
pop
gs
add
xchg
sbb
inc
in
faddl
jmp
adc
mov
loope
lds
ss
imul
test
test
jo
mov
add
jno
insb
mov
test
test
repnz
ljmp
mov
out
out
in
xor
push
cmp
xor
test
ljmp
rcl
fmull
or
dec
add
fldenv
dec
scas
in
sub
or
jmp
push
std
inc
jns
jb
mov
fdiv
outsl
jl
mov
pushf
jle
call
out
mov
pushf
jae
pcmpgtb
pop
aad
push
repnz
cmp
and
fldenv
sub
test
ja
test
mov
adc
xorl
sarl
lea
or
stos
mov
negl
xchg
xchg
shll
cli
adc
in
dec
movl
jg
out
mov
xlat
xlat
add
insl
test
repnz
mov
fmuls
je
mov
lcall
or
xor
jnp
cmpb
dec
hlt
bound
movsb
mov
inc
cwtl
ror
or
sbb
xchg
sahf
and
imul
loop
xchg
dec
mov
inc
movzwl
dec
dec
sbb
xchg
mov
fwait
jbe
push
xor
push
mov
mov
pop
repz
dec
rclb
jb
loop
dec
std
or
arpl
xchg
mov
mov
scas
sub
cmp
notb
and
adc
mov
stc
lods
jae
dec
push
pop
iret
loope
mov
adc
rcl
testl
cmp
popf
jp
mov
xchg
cmp
fs
lea
sahf
pop
cmp
sbb
mov
dec
push
and
xchg
and
mov
test
sahf
mov
add
repnz
xchg
cli
xorl
in
add
daa
rolb
lods
movsb
jnp
mov
pop
jb
popa
scas
lret
rcll
dec
mov
enter
loopne
add
mov
idivb
out
popa
nop
jnp
out
or
js
aas
fsubrp
hlt
xor
pusha
jmp
sub
xorb
or
outsb
pop
pop
xor
sbb
jb
test
add
and
in
clc
mov
xchg
scas
test
mov
movl
xorl
aas
pushw
imul
cltd
mov
jno,pt
xor
inc
test
or
shr
pop
inc
ja
xchg
push
jnp
sub
loop
add
insl
scas
mov
pusha
inc
gs
repnz
cmpsb
sbb
jns
sbb
notb
cli
lcall
clc
push
test
pushf
mov
jno
inc
cmpb
lahf
xchg
mov
pop
xchg
jge
sub
adc
or
or
iret
sub
outsb
cs
ljmp
cmp
sbb
pop
movsl
jae
andb
iret
add
loop
xchg
mov
sub
dec
fmulp
rol
test
sahf
std
xchg
pop
mov
sahf
xchg
ret
push
sub
aad
mov
add
aaa
inc
int3
in
xor
jb
inc
cmp
adc
nop
mov
rcrb
into
addr16
test
out
and
and
inc
cmp
or
jp
mov
jo
and
cmp
ret
pop
int3
in
mov
stos
aam
adc
or
lret
lods
dec
xchg
mov
xor
dec
jecxz
or
dec
xor
pop
fnstsw
jno
scas
dec
icebp
testb
lcall
and
in
jp
loope
test
out
push
bound
or
push
lret
add
out
push
inc
cmp
cltd
dec
and
sbb
add
sub
jecxz
repz
fcmovnb
shlb
mov
movsb
inc
lods
or
fld1
and
fistl
pop
sub
gs
dec
stos
or
push
sub
xchg
into
cli
fidivl
or
mov
repnz
aad
jl
cwtl
imul
fwait
xchg
insl
popf
out
repnz
lahf
inc
push
loopne
push
out
int3
mov
cmp
adc
addr16
mov
pop
das
into
dec
jno
test
ret
data16
jle
adc
sar
repz
or
cmc
sahf
xor
pop
adc
jl
sub
repnz
fbstp
mov
add
cltd
pusha
jl
xor
mov
pop
mov
mov
cltd
scas
clc
mov
inc
arpl
pusha
xchg
dec
movsb
xor
rolb
pop
rclb
repz
pop
inc
in
lods
or
fimuls
dec
xor
fs
inc
xchg
in
sub
cmp
mov
mull
mov
daa
mov
lahf
rorl
nop
test
or
push
jb
sub
mov
sub
lods
push
mov
xchg
push
jno
test
xchg
or
outsb
clc
andl
inc
loope
xchg
xchg
and
xchg
fsubs
cmp
sub
push
pop
int
sbb
adc
in
xchg
shlb
mov
push
fidivs
fdivrs
mov
inc
xlat
aaa
adc
ret
or
pop
push
sbb
mov
pop
push
leave
aam
dec
push
sub
pop
orb
in
xor
lret
mov
mov
out
mov
jno
cld
into
hlt
imul
dec
popa
lcall
pushf
cmp
test
dec
jb
push
or
adc
adc
aas
xchg
cmp
fstp
xor
jge
mov
xchg
jno
mov
out
loop
cmp
lcall
jg
sbb
call
cmp
inc
aaa
and
cmpl
fldenv
imul
mov
inc
out
lret
leave
lods
stos
ror
cltd
shrb
ja
pushf
mov
bound
lock
loope
dec
sub
mov
sti
test
cwtl
pop
repnz
in
nop
cld
cmp
fwait
and
push
pushf
mov
jnp
imul
das
popa
push
inc
mov
mov
cmp
and
cmp
lret
into
push
cld
xchg
mov
sbb
pushf
imul
pop
jb
es
mov
inc
push
movsl
inc
fldenv
lods
ficomps
jns
push
ja
or
insl
inc
and
mov
in
lret
sbb
sahf
pop
mov
pop
ds
pushf
jmp
outsb
dec
adc
push
loop
jo
mov
sbb
frstor
add
xor
movsb
jmp
mov
or
in
xchg
cmpsb
repz
push
sbb
leave
or
test
cmp
stc
xlat
lods
les
nop
add
or
cltd
jmp
jo
sbb
out
jl
and
aad
adcl
sbb
mov
lods
mov
cld
pop
jp
and
mov
push
dec
jl
jae
cmp
pop
arpl
dec
jecxz
nop
sahf
scas
inc
ret
or
outsb
sbb
mov
push
adc
cmp
or
int
jb
inc
arpl
push
cmpsl
pop
lods
pop
push
testb
sarb
pop
xor
ror
mov
bnd
xchg
lock
lods
iret
test
test
ja
xor
pushf
lcall
ss
push
aam
fs
divb
pop
add
mov
mov
dec
imul
sub
jecxz
cmp
xor
lods
add
adc
sbb
cwtl
add
rsqrtps
es
adc
imul
aad
or
loope
xor
push
aas
out
or
sbb
fldl
sbb
xchg
lahf
adc
loopne
jnp
pushf
cmpsb
cmp
cmp
rorb
mov
icebp
fadd
shll
aam
cmp
pop
cmc
out
add
mov
sub
mov
stos
adc
mov
inc
dec
push
cmpsl
inc
add
mov
out
adc
imul
rcrl
icebp
jmp
sub
sbb
sbb
pusha
jbe
cmp
fcompl
arpl
pop
std
pop
lahf
pusha
test
push
mov
fidivl
sbb
mov
sbb
imull
xor
or
mov
mov
jmp
icebp
lock
mov
aaa
jmp
cltd
push
sar
rorb
xchg
pusha
jl
cmpsb
fisubs
sub
lods
dec
gs
or
pushf
sub
ds
push
decb
xor
imul
push
cmp
fisubl
xchg
rol
inc
data16
outsl
ljmp
out
push
ret
shr
add
inc
shrl
and
in
and
in
insb
mov
mov
fdivr
cwtl
pushf
test
mov
sbb
pop
mov
inc
in
ret
cmpsl
mov
sahf
lea
sbb
insb
jne
mov
std
in
in
xchg
fwait
pop
push
cli
sub
fcom
jecxz
cmpsb
and
push
sub
sbb
dec
add
cmpsb
sbb
inc
or
pushf
dec
sete
cwtl
in
fstps
jmp
sub
inc
test
jo
mov
cmc
mov
cmc
test
jns
push
push
add
xchg
xchg
adc
pop
jns
cmp
imul
out
pop
stos
jl
jle
jecxz
rol
data16
jne
call
dec
movsl
stos
push
sbb
jl
shlb
out
ds
xchg
lock
loope
in
divl
xchg
sahf
adc
jle
jns
adc
cmp
mov
aad
loopne
js
lods
frstor
dec
arpl
movsl
pushf
aaa
push
xor
mov
lds
das
cmp
aas
pop
sub
cmp
mov
cmp
mov
push
and
in
out
imul
repz
pop
repnz
xchg
mov
lret
xchg
mov
add
pusha
sbb
lods
or
mov
negb
movsb
test
xor
lcall
popf
stos
xsaves
les
dec
cmp
jne
insb
mov
jns
jno
fisttpll
push
js
icebp
pop
aaa
movsl
leave
cli
xchg
or
pandn
repnz
daa
nop
adc
dec
xor
add
lods
sahf
mov
shlb
outsb
mov
sbb
push
inc
out
add
adc
into
xchg
or
cs
pop
mov
outsb
sbb
dec
test
je
ss
sbb
cmp
int3
push
dec
mov
fistpll
sub
pop
mov
adc
mov
int
mov
pop
pushf
lock
xchg
pop
insl
xor
imul
mov
inc
sbbb
sub
sbb
sti
jae
ret
pop
lds
xchg
lods
dec
sbb
xchg
insb
je
cmp
mov
in
stos
mov
jge
inc
lret
pushf
dec
sbb
add
test
jle
leave
les
fcoml
jno
cs
mov
fistpll
push
lods
push
lahf
push
mov
xor
shl
rorl
cmpsl
xor
lcall
xor
adc
xor
push
push
jge
fsubs
push
push
popf
jecxz
sub
cmp
insl
xor
add
mov
test
and
xchg
push
xor
adc
scas
mov
mov
cmp
and
and
jl
pop
cmp
insl
sbb
imul
insl
pusha
or
mov
fldt
mov
lret
inc
pop
call
sti
adc
cwtl
fnsave
loope
jge
dec
and
lods
test
insb
cmp
jle
jno
es
aaa
jb
cmp
test
or
cmp
jle
mov
mov
and
loope
add
mov
push
bound
out
int
daa
in
jno
decb
mov
pop
inc
lock
notl
mov
pop
loope
xchg
push
jge
sub
jnp
and
mov
jb
pop
loop
xorl
leave
in
mov
dec
push
idiv
mov
inc
mov
mov
idivb
lcall
push
test
fdivs
nop
cmc
sbb
test
mov
cs
mov
les
leave
in
push
or
jge
cld
shll
mov
shrb
imul
xor
cmpsl
cmp
jae
push
fistpl
sub
sbb
mov
loop
out
test
ret
sub
aam
sbb
adc
add
stos
je
push
xchg
add
adc
push
mov
ficomps
push
les
and
sub
dec
ret
adc
arpl
aas
jmp
nop
or
cld
icebp
add
inc
add
push
add
push
cmpsl
shrl
mov
js
bound
or
mov
arpl
mov
test
mov
xchg
leave
ja
or
xor
sti
lods
jbe
jb
xchg
jge
bound
xor
les
testb
loopne
inc
mov
sti
lea
add
push
repz
or
sub
in
push
mov
and
jecxz
out
ret
fs
subl
ja
mov
mov
sub
dec
sub
int3
fildl
es
lods
cmpsb
push
lret
int
aam
stc
and
js
in
stos
repnz
fs
adc
daa
push
push
nop
mov
gs
add
scas
jl
jno
in
test
cmpsl
movsl
orb
dec
call
adc
mov
sbb
imul
jno
popa
scas
or
and
lret
fcoms
pushf
ljmp
stc
mov
add
pop
cmpsb
pop
dec
mov
xor
sub
aas
push
jne
inc
xor
scas
xchg
jne
mov
popf
sbb
js
cmp
ret
adc
cmp
jmp
outsb
jb
and
cmp
stos
outsl
test
cmpsl
sbb
sbb
lods
xlat
lods
lds
hlt
jp
adc
int
xor
testb
jns
inc
pop
or
sahf
lock
test
mov
sbb
adcb
xchg
adc
cmc
and
mov
xor
int
inc
outsb
add
test
popf
negb
jl
xor
hlt
sub
mov
cmp
shll
enter
dec
out
scas
jb
pop
imul
cld
aam
stos
mov
std
cmp
out
out
rcll
xchg
pop
mov
sbb
out
mov
jmp
faddl
inc
addl
cmp
clc
loopne
aam
repnz
sahf
sbb
adc
xor
adc
add
sbb
mov
sbb
xchg
mov
adc
lahf
mov
xchg
clc
fucomi
and
filds
imulb
pop
jnp
jb
loopne
ss
mov
push
pop
pop
xchg
out
sub
ja
popw
xor
leave
cmpsb
add
and
sahf
or
sbb
mov
call
adc
outsl
push
popf
dec
or
lret
lahf
xor
arpl
fistps
divb
xchg
mov
arpl
cmpsb
pop
loop
repnz
fld1
inc
or
nop
mov
pop
jnp
outsl
test
cmp
pop
xor
dec
cld
into
push
int3
push
jns
dec
or
or
or
daa
mov
ja
jge
xchg
push
lcall
into
xor
fnstsw
xchg
mov
jb
stos
aaa
sub
std
push
mov
jge
mov
xchg
mov
and
fwait
cwtl
cmp
xchg
fisttps
or
jge
dec
add
cmpsb
push
fbld
in
pop
xchg
je
sahf
lahf
pop
inc
rolb
inc
jecxz
mov
hlt
sub
mov
sbb
jle
sar
lods
daa
push
dec
outsl
and
adc
imul
and
pop
out
repz
loop
mov
pop
mov
in
jnp
scas
scas
lcall
roll
and
xorl
mov
sbb
repnz
nop
mov
scas
dec
adcb
and
or
jns
enter
add
push
jp
test
mov
xlat
testb
pop
push
mov
mov
loop
lds
xor
adc
push
adc
sub
mov
popa
mov
cmp
mov
inc
inc
pusha
sbb
jecxz
dec
movsb
ret
mov
and
in
fists
mov
pop
pop
aas
call
dec
jl
pop
jmp
dec
bound
jbe
dec
nop
call
dec
aam
adc
enter
mov
ljmp
inc
ret
or
push
iret
push
lds
sbb
out
in
jle
add
or
push
outsb
in
dec
shl
adc
mov
xor
daa
inc
jecxz
mov
test
pop
lret
sub
push
pop
jnp
fistl
lds
movsl
jbe
repnz
ja
inc
fistl
shrb
adc
cld
clc
test
cmp
addr16
mov
lret
push
ret
repz
jp
sub
jns
in
loope
inc
dec
cmc
xchg
push
popf
mov
repnz
cwtl
out
in
in
repnz
movsb
popf
push
xor
shlb
dec
int
test
dec
enter
adc
sbb
rcrb
inc
ss
pop
xor
loop
add
out
push
xor
cmp
sbb
adc
dec
ret
out
ficompl
xor
fidivs
mov
js
pop
xchg
add
fcmovnbe
pop
aad
mov
inc
fmul
lret
sbb
sub
jl
int3
adc
loope
jae
int3
jns
adc
adc
mov
incb
mov
shll
enter
fcmove
or
cmp
sub
jb
stos
cmp
sub
movsl
sbb
inc
pop
idivb
js
push
lods
test
push
push
sti
ss
aad
mov
fadds
je
das
or
jp
dec
xchg
or
mov
or
jp
testb
jbe
mov
xor
test
xor
and
in
test
nop
scas
stos
push
ja
outsb
nop
sbb
imul
jb
aaa
mov
pop
or
in
and
mov
inc
imul
xor
push
aam
arpl
lods
aaa
sti
outsl
adc
mov
lret
nop
stos
lods
inc
rclb
subb
xor
push
dec
in
into
jne
iret
test
jle
popf
repnz
rcrl
enter
sbb
rcrl
lock
int3
outsb
jecxz
xor
pop
lds
pop
lret
enter
popf
dec
je
pop
shrl
adc
aaa
jmp
out
pop
mov
sbb
pushf
leave
jnp
adc
dec
imul
xchg
xchg
and
pop
mov
xor
std
fmull
pop
jne
lahf
cmpsb
repnz
adc
pop
lret
mov
push
sbb
pop
insl
cltd
mulb
inc
mov
xor
sbb
mov
pop
lods
add
dec
rcll
push
add
cmpsb
jns
mov
push
js
icebp
add
mov
test
jno
iret
hlt
in
stc
leave
inc
ja
subb
std
jnp
fsubp
inc
addr16
sbb
mov
in
sub
test
data16
test
stc
mov
inc
push
sub
push
repz
stos
mov
sbb
les
sub
aaa
mov
pop
cmp
lret
mov
sahf
out
data16
jnp
adc
mov
adc
add
pushf
xchg
std
push
jo
icebp
mov
fstpt
mov
push
add
cwtl
jg
aad
sbb
mov
fstps
fs
ljmp
cmpsb
xchg
fwait
outsl
daa
insb
cmp
dec
pop
mov
cmp
aam
insl
es
aam
aad
sbb
sbb
adc
std
out
push
lods
mov
push
ret
fimull
push
cmpsb
jnp
dec
rorl
movsb
push
sub
and
pop
push
gs
pop
inc
cwtl
mov
xchg
sub
push
andb
hlt
push
push
xchg
adc
push
xlat
ret
hlt
loope
loop
test
adc
push
addr16
icebp
daa
dec
mov
sub
movb
aad
movsl
mov
lods
sub
fidivl
fldl
adc
pop
bound
outsl
jg
repnz
dec
pop
or
mov
pop
stos
data16
stc
fildl
inc
push
imul
push
adc
mov
out
sbb
loop
adc
mov
mov
inc
dec
pop
call
xchg
adc
xchg
enter
lods
cli
jne
cmpsb
push
and
fdivs
dec
lcall
mov
jnp
sbbl
fsubl
stos
adc
es
sub
sbb
int3
es
jo
je
dec
add
xor
jnp
push
cmp
jle
sahf
push
push
lahf
das
mov
mov
fdivrs
femms
ficompl
shll
xchg
and
adc
dec
dec
and
shll
pop
popf
and
mov
lcall
sub
pop
xchg
xchg
sbb
movsb
pop
sbbb
cs
pop
xor
cmp
mov
stos
lods
subb
add
pop
cmp
jecxz
mov
popa
js
push
or
jge
inc
sbb
fwait
pop
cmp
fnstsw
push
fsubl
xor
in
mov
negb
dec
jg
or
push
ss
jge
aas
ud0
mov
mov
mov
test
gs
loope
mov
mov
in
mov
xlat
mov
mov
push
cmc
fiaddl
das
outsl
jmp
popa
mov
xor
push
sbb
repnz
bound
xlat
pop
lods
push
in
fs
imul
adcl
test
jne
xlat
lret
out
pop
adc
xchg
mov
shrl
cld
and
imulb
mov
cmp
xchg
shr
push
lds
mov
sbb
mov
jne
test
mov
out
mov
test
sbb
aad
mov
mov
push
mov
fcomp
inc
xor
pop
push
fadd
add
scas
xlat
inc
sbb
negb
pop
movsl
ds
adc
sub
and
cld
push
dec
imul
inc
loope
sub
pop
cmp
jne
enter
sbb
mov
xchg
sub
add
ds
ja
test
outsl
sbb
dec
dec
fbstp
rorb
cmp
fstps
outsl
in
lret
cli
pop
imul
xchg
jl
fwait
pop
push
jge
nop
gs
clc
push
xchg
mov
mov
es
scas
lods
lret
in
push
push
cmp
sub
rolb
xor
shll
cwtl
add
enter
add
lcall
insl
push
mov
sbb
add
outsb
iret
jmp
adc
int
sbb
jb
lock
imul
out
fdivr
xorb
inc
jns
in
std
and
test
lcall
mov
add
es
out
pop
sub
es
mov
popf
cmp
fdivrp
shrd
mov
jbe
fidivrs
jo
or
enter
lea
mov
into
fs
mov
xchg
cmp
std
add
push
test
cltd
jmp
ja
xchg
pop
sbb
sbb
mov
ljmp
add
fisubs
inc
test
sti
mov
fs
jmp
in
in
daa
andl
add
ret
or
mov
or
lret
shlb
stc
sbb
xchg
jb
mov
and
int
push
mov
xor
jp
xor
fcmovnb
push
sub
sbb
fs
xchg
je
add
outsb
sub
xchg
dec
lret
cmp
push
pop
or
mov
mov
push
sbb
and
jae
out
add
mov
adc
xor
fadds
imul
sbb
imul
mov
lret
imul
mov
fimull
cmp
in
dec
mov
fs
vpmulhw
fs
mov
in
jns
cs
movl
dec
scas
xor
jp
adc
jg
rcr
xchg
movsl
xlat
xor
loopne
imul
mov
xor
xchg
jp
xorl
bound
push
jl
mov
cwtl
jae
cmp
inc
dec
pushf
pop
insl
repnz
mov
mov
lret
adc
xchg
loop
jp
fisubl
sub
popa
popa
or
xchg
int3
sbb
lret
clc
mov
cmp
fildl
add
dec
inc
popa
stc
outsb
jmp
xchg
push
sbb
mov
cmpsl
test
or
sbb
xor
shlb
xchg
xchg
pusha
lods
inc
call
adc
arpl
pop
js
push
adc
jo
adc
adcl
pop
xor
leave
mov
push
push
inc
jnp
ja
ja
mov
sub
pop
sub
fwait
mov
jnp
jo
stos
popa
enter
adc
fwait
pop
cld
jg
jle
dec
call
arpl
lahf
cld
push
movsl
sbb
and
jne
xchg
jo
adc
lea
popf
or
fwait
xor
sbb
std
ljmp
xchg
pop
cmpsl
push
dec
push
sbb
xchg
mov
jmp
scas
aaa
mov
test
leave
cmp
clc
cmp
inc
mov
out
dec
fsub
mov
inc
scas
ds
loope
mov
cmp
lret
xchg
pop
or
rcr
and
aam
or
xchg
and
repnz
ja
adc
std
rcrl
pusha
mov
sbb
jmp
xor
push
pop
stos
les
pop
adc
les
mov
mov
cmpsl
js
or
mov
stc
mov
sti
into
mov
fbld
lds
add
add
int
stos
dec
mov
inc
subl
out
xor
sub
or
inc
cmpsb
sbbl
imul
push
outsb
sub
lret
pop
push
sub
xchg
lods
xchg
mov
jo
mov
sbb
mov
adc
sarl
das
jecxz
xor
pop
inc
mov
add
xchg
andl
std
cmp
jnp
or
mull
pop
mov
dec
xchg
mov
adc
or
dec
dec
fcompl
nop
mov
mov
out
pop
jb
int3
or
mov
dec
xor
cmp
sahf
es
hlt
hlt
ds
add
push
xchg
hlt
push
cmp
xchg
jae
and
sbb
cmp
fisttpll
mov
inc
test
shlb
mov
xchg
sbb
fcompp
add
adc
mov
dec
or
push
adc
lcall
cmp
add
cli
mov
std
xor
clc
jmp
push
in
and
and
lret
cmc
sbb
sub
sbb
and
fists
lcall
or
or
shll
sbb
jnp
pop
vmovaps
gs
cmc
fs
imul
lock
icebp
fcomp
dec
aam
pop
cmp
jno
dec
repz
shlb
xor
or
outsl
test
mov
ss
leave
cmp
or
hlt
jmp
das
pop
push
sahf
adc
int
fnstsw
in
xor
mov
leave
jl
adcb
adc
js
mov
or
push
inc
int
repz
sbb
push
lock
mov
popf
jo
mov
movsb
cmp
fadd
addl
inc
mov
mov
rorb
pop
icebp
mov
iret
pop
faddp
mov
shrl
or
push
jne
jno
les
xchg
push
dec
out
ja
pushf
mov
sbb
or
push
mov
xchg
or
xor
push
js
in
shl
iret
movsl
bound
cltd
add
mov
ljmp
push
dec
testb
test
sub
pop
repz
fwait
push
add
cmp
test
pop
xchg
ret
test
gs
mov
push
es
inc
xor
inc
dec
pop
test
jno
lret
push
inc
or
repnz
push
pop
cs
xchg
push
jne
adc
sbb
add
fwait
adc
xor
add
jo
mov
and
je
add
cmp
cmp
pusha
mov
outsl
mov
rcll
add
popa
std
mov
mov
push
lods
sub
repnz
lock
notl
inc
mov
jo
stos
cmp
push
or
imul
mov
imul
fadds
pop
icebp
jbe
cmp
mov
test
outsl
into
movsl
xor
fistpl
rcl
push
in
mov
xor
test
insb
push
cmp
inc
shrl
sbb
call
cmp
add
dec
inc
xorl
pushf
push
and
and
bnd
rclb
das
lahf
pop
aam
lods
gs
mov
lds
jmp
pushf
pusha
xor
push
je
mov
and
jb
push
jnp
and
adcb
stos
add
std
sti
decb
das
sub
iret
sar
add
adc
shlb
or
hlt
pop
jp
pop
pop
and
mov
jne
cmp
jae
xchg
es
mov
xlat
cmp
ret
scas
mov
sbb
or
adc
jae
sbb
stc
jno
inc
jmp
jle
daa
subl
push
movsl
lea
pop
inc
jo
jae
in
out
aas
daa
dec
lock
dec
xchg
popa
psrld
pushf
dec
pop
cli
movq
jbe
leave
cmp
mov
add
repnz
mov
pushf
cmc
rorl
in
hlt
sahf
lret
arpl
push
push
nop
aas
jge
ss
lcall
cmp
ret
push
int
das
cmc
daa
in
sub
inc
jmp
or
mov
sub
mov
rcrl
dec
dec
jb
cld
pop
sti
movsb
js
sbb
jno
in
and
ja
xchg
mov
xor
aaa
bound
or
add
xchg
and
mov
sbb
int3
icebp
aas
mov
xchg
shr
mov
lahf
xchg
sub
lcall
loope
xor
negl
test
adc
jae
repz
rcrb
mov
inc
mov
aam
push
cmp
push
iret
mov
in
dec
test
popa
jle
mov
test
scas
andb
popf
jl
inc
sub
adcb
ret
mov
js
test
jecxz
int
dec
jg
jae
in
fnstenv
pop
push
pop
sbb
imul
cmc
and
jno
dec
and
sbb
and
sub
es
cmc
test
les
mov
push
cwtl
cmp
pusha
xchg
and
lahf
adc
test
cmp
lds
imul
mov
out
imul
cld
cld
mov
lods
fdivs
xor
adc
mov
and
icebp
imul
cmc
aaa
fadds
ja
inc
lds
scas
scas
mov
mov
rorb
mov
lret
out
jne
mov
adc
sbb
rcll
je,pn
adc
push
or
jns
push
xchg
lret
xchg
adc
arpl
and
int3
imul
mov
ja
inc
mov
push
jb
lret
cmpsb
mov
push
pop
test
test
mov
ret
gs
dec
ret
loop
in
jne
dec
stc
ret
lds
xchg
out
cmp
cli
ret
imul
fwait
inc
in
cmp
and
out
mov
push
adc
jnp
adc
mov
inc
arpl
leave
les
push
adc
das
cmp
jae
or
xor
mov
jbe,pt
sub
sub
push
sbb
jo
push
fisubrs
jno
pop
cmp
imul
sbb
mov
xor
sub
adc
out
xor
insl
fcompl
sub
inc
cwtl
adc
xchg
pusha
xor
mov
adc
pop
das
lods
pop
pusha
loope
lds
xor
cwtl
fdivl
repz
and
fsubrs
lods
or
icebp
rcrl
aaa
cmc
or
adc
into
cmp
aam
fistpll
fcoml
jne
les
dec
dec
aam
pop
inc
cmp
sub
add
xor
pop
and
inc
add
add
lahf
adc
std
jmp
or
and
in
fdivrs
rcl
lcall
push
filds
test
sbb
mov
or
notl
in
xchg
int
movsl
mov
add
and
push
mov
push
popa
out
hlt
sub
in
adc
rorb
jno
cmc
and
cmp
dec
loopne
loopne
out
mov
and
or
jg
and
push
inc
mov
pop
cmp
in
pop
xchg
repz
jo
sbb
out
les
nop
out
ss
and
pop
ror
push
fdivrl
add
mov
stc
aas
xor
cmpb
testl
add
mov
imul
jne
stos
mov
push
xchg
mov
cmp
lea
enter
add
bound
push
sub
enter
ds
mov
out
cmp
cli
sbb
scas
imul
lahf
cmp
dec
jmp
out
pop
push
adcl
jb
jnp
fsubrs
mov
daa
mov
add
add
into
dec
mov
cmc
loope
pushf
push
fwait
jns
lods
mov
mov
bound
hlt
pusha
jp
std
cli
cwtl
dec
mov
addl
mov
inc
adc
adc
inc
lahf
push
dec
push
add
jne
mov
inc
xchg
fdivr
mov
leave
jmp
dec
les
push
dec
arpl
filds
sbb
fadds
add
cmp
shl
mov
xlat
push
xor
cmp
lds
loopne
jns
jnp
test
ret
add
push
mov
nop
leave
jb
push
cmp
and
cmp
xorb
lods
adc
les
push
sti
mov
rcll
xor
shlb
mov
sub
push
dec
sub
test
cmp
mov
and
lea
enter
outsb
repz
mov
push
xchg
out
mov
or
cmp
out
mov
iret
push
and
inc
fdivs
jg
push
push
xchg
dec
mov
repz
mov
inc
mov
mov
cmpsb
leave
cmp
cli
rcrl
iret
arpl
inc
mov
pop
mov
repnz
iret
xchg
vmovaps
aam
cmp
dec
xorb
jecxz
add
lds
fs
mov
and
cmp
mov
push
dec
outsb
stos
rclb
pop
in
mov
jno
push
arpl
rcrb
sub
fnop
sbb
cmc
jl
mov
cmpsb
test
icebp
push
sbb
mov
roll
add
data16
stc
outsl
xchg
lret
sub
or
imul
push
jnp
dec
adc
incl
std
push
addr16
jnp
and
cltd
adc
mov
cli
add
mov
dec
add
push
hlt
or
pushf
rcl
and
test
leave
push
in
dec
out
or
xlat
pop
and
ljmp
or
push
neg
mov
popf
jle
push
out
adc
dec
xchg
jb
mov
push
mov
add
push
dec
rcl
adc
popf
movsb
scas
or
dec
sub
mov
jle
inc
repz
xlat
mov
ds
xor
mov
xchg
push
fsubr
sub
idiv
fadds
test
cmp
cmp
jns
sbb
in
aaa
cld
dec
xor
fcompl
inc
push
cmp
mov
hlt
xor
dec
push
jns
out
iret
mov
repz
int
push
and
jecxz
hlt
dec
arpl
nop
inc
imul
int3
mov
sbb
movsl
leave
jg
call
dec
stc
fistps
aas
fcomps
pop
mov
mov
insl
jno
sahf
inc
xchg
add
adc
pop
xor
adc
push
out
mov
xlat
imul
out
shll
cwtl
and
cmp
stc
ljmp
idiv
inc
push
add
cmovp
push
push
add
dec
push
or
mov
xchg
cmp
cmp
jg
add
push
test
push
in
fwait
sub
test
dec
push
mov
rcrl
clc
cmp
sub
adcl
mov
jnp
vpmacsdqh
js
dec
push
stos
fildl
adc
sub
icebp
mov
xchg
xchg
ss
push
aas
ret
icebp
fwait
jl
lods
fs
and
dec
adc
in
or
jo
cld
addr16
fs
inc
add
iret
je
cli
decl
add
loope
jae
mov
sub
mov
daa
push
js
sbb
add
mov
cld
inc
xchg
js
inc
test
stos
jnp
xchg
sarb
cmp
or
fimull
outsl
das
fldenv
fidivrs
inc
xlat
mov
push
inc
push
jle
inc
push
xor
nop
lret
add
aas
add
sub
out
cmp
icebp
movsl
pop
xchg
ljmp
cmp
push
xor
or
mov
add
sbb
mov
decl
out
cld
mov
push
adc
dec
push
cwtl
pop
mov
aam
ficoml
cmc
out
push
sub
add
callw
movsb
les
or
mov
aam
jb
jmp
test
mov
mov
mov
fwait
xchg
out
lret
and
push
cmp
jns
push
mul
mov
xor
repnz
cmp
push
or
dec
jecxz
out
addr16
repz
pop
adc
pop
insl
jbe
or
mov
in
and
and
je
cmpsb
jle
mov
out
popa
fldl
mov
out
lock
jmp
in
das
inc
mov
jnp
pop
bound
xor
insb
sub
mov
pusha
dec
pop
and
scas
test
adc
sbb
add
testb
clc
lods
mov
cmp
iret
push
push
xor
jg
push
jmp
mov
dec
bound
xchg
nop
sbb
and
dec
dec
loope
mov
arpl
xchg
cmpsl
mov
push
out
jmp
in
decl
ja
ss
push
push
sti
inc
dec
mov
push
movsb
imul
notb
sbb
xchg
xchg
xchg
dec
addr16
movsl
push
dec
adc
lea
jl
cmp
mov
sbbb
push
enter
out
xchg
sub
femms
mov
mov
mov
call
pop
lcall
push
stos
call
int3
popf
or
add
mov
and
rol
repz
clc
cmp
fwait
dec
pop
pop
aam
mov
addr16
scas
rorl
popa
out
jnp
mov
inc
sub
lods
ja
sub
adc
push
iret
out
lock
popa
mov
or
cli
pop
mov
in
fnstsw
mov
shr
sub
std
movsb
repz
push
enter
sbb
repnz
adc
mov
or
les
inc
in
xorl
je
fwait
sbb
dec
push
pop
sbb
mov
push
dec
sbb
xor
aad
dec
cltd
adc
inc
xor
mov
popa
pop
aaa
or
xor
ds
and
pop
pop
clc
pop
dec
jmp
lods
sbbl
and
call
mov
cmp
sbb
in
fcoml
add
jnp
test
adc
mov
mov
lret
cmc
bnd
loopne
imul
andb
xchg
les
test
xchg
mov
in
cmp
test
xchg
adc
aaa
bound
in
pop
jecxz
mov
repnz
orl
pushf
rcl
test
hlt
mov
pushf
xchg
out
jge
jnp
cmpsl
add
sbb
add
mov
ja
iret
loope
ds
loopne
push
jne
adc
push
adcb
cmp
mov
or
mov
addr16
sub
and
mov
and
inc
ds
aam
sbb
xchg
stc
add
sbb
jb
jno
inc
into
jae
icebp
jl
jae
mov
pop
ret
insb
xor
mov
mov
stos
ret
or
pop
insl
icebp
hlt
stc
xchg
ds
xor
mov
inc
in
shr
add
push
or
pushf
stc
mov
cs
scas
inc
sbb
xor
mov
je
push
push
adc
ss
inc
hlt
lock
jno
pop
mov
fwait
jo
inc
or
mov
test
sti
dec
fwait
or
jmp
insl
arpl
sub
fistl
pop
push
dec
loopne
pop
jge
aad
add
inc
mov
shlb
dec
insl
or
repz
sbb
mov
loopne
mov
mov
push
mov
fadds
or
test
add
ss
aad
lea
jo
mov
or
ret
cmpsb
add
out
add
lret
fcmovne
jo
add
pop
pop
or
lods
or
push
jbe
mov
or
jge
push
das
jbe
out
push
cli
dec
notl
sub
test
jmp
popf
fprem
adc
add
dec
push
insl
push
fneni(8087
xor
mov
enter
push
ss
loope
jbe
inc
and
mov
dec
or
pop
shlb
imul
adc
in
clc
div
leave
xor
and
mov
or
stc
xlat
adc
sahf
jmp
xchg
data16
popf
addr16
pop
movsb
mov
mov
lret
bound
lock
mov
inc
sub
push
iret
rcrb
fsubs
insl
aad
pop
xchg
popa
stc
push
xchg
dec
data16
jg
sbb
and
jl
out
inc
dec
push
sbb
pop
push
popa
daa
inc
jp
cmp
push
sti
and
dec
xchg
sub
adc
movsb
dec
add
jbe
test
sti
adc
sbb
pop
mov
add
sub
mov
inc
stc
sti
mov
repnz
pop
ret
inc
cltd
inc
imull
add
dec
mov
sbb
les
cld
sub
scas
add
test
jmp
inc
push
mov
jo
adc
jb
adc
xchg
push
scas
add
mov
pop
mov
sahf
xor
or
add
jnp
or
mov
into
ficoml
push
test
jge
pop
xor
adc
jne
inc
jno
xchg
cmpsb
std
push
sbb
jne
movsb
shlb
in
add
cltd
adc
xchg
sbb
cmp
push
outsw
outsb
mov
mov
xor
pop
js
dec
js
sbb
lods
call
out
ficompl
sbb
outsb
xchg
mov
int
or
int3
dec
xchg
mov
adc
hlt
stos
push
inc
mov
push
jo
sti
imul
lods
shrb
jno
subl
dec
in
pop
lcall
hlt
lods
cmp
out
sbb
dec
cmp
das
stos
push
and
mov
lods
aaa
add
ja
mov
adc
lcall
incl
test
nop
loop
add
xor
jl
repnz
lods
int
mov
xor
push
shl
daa
sbb
xchg
or
lcall
fistpll
adc
mov
mov
sub
xor
shlb
fiadds
jle
adc
or
pop
mov
mov
lahf
sub
popl
aad
mov
cmp
repz
lret
inc
pop
push
loope
dec
lahf
jle
jge
adc
xor
fcomp
and
lahf
adc
or
pop
mov
andl
mov
push
mov
test
out
loop
je
fildll
adc
pop
push
adc
add
push
in
mov
out
pop
inc
sub
mov
imul
cmp
out
insl
inc
std
shl
fsubrl
addb
adc
fcomi
or
push
pop
repz
in
jb
mov
and
dec
mov
jmp
sbb
jl
jb
fucomip
shlb
pop
xchg
xchg
ficoms
ret
lds
addl
in
xchg
lock
int
lret
and
mov
dec
add
adc
mov
fidivrs
aad
sbb
xor
imul
lock
inc
es
and
mov
pop
test
in
aaa
pushf
ljmp
jecxz
inc
fldt
mov
mov
aad
in
xchg
lret
in
movl
xchg
or
out
aad
mov
sbb
jns
xor
sub
jbe
cmp
xlat
fdivrp
and
aam
fimuls
and
pop
scas
mov
mov
shll
clc
xchg
ja
sbbb
sbb
into
sbb
inc
cmp
xor
mov
push
pop
clc
fsubs
iret
jno
mov
push
test
jle
mov
out
jl,pn
mov
inc
jae
test
mov
xlat
fisubrs
repz
and
out
pop
popf
mov
inc
inc
mov
aam
xchg
mov
lods
jbe
sti
or
or
mov
cwtl
adc
insb
push
cmp
in
lds
int3
push
mov
repnz
and
push
mov
fisttpll
push
outsb
fmuls
pop
pop
into
xor
out
icebp
and
loopne
mov
mov
movsb
nop
gs
in
cmp
inc
mov
xchg
push
test
gs
xor
fistpll
lds
stos
popf
jne
jmp
mov
aaa
push
addr16
fstpl
pop
jb
or
scas
int3
push
loopne
xorl
mov
movsl
leave
sub
jge
not
sbb
fwait
fs
or
inc
insl
cwtl
add
sub
ss
or
inc
inc
push
lea
std
lods
mov
and
sub
jo
fcmovnu
aam
dec
xor
xchg
loope
mov
aam
stos
fcmove
push
pop
cwtl
mov
dec
mov
jl
xlat
test
and
jnp
popa
pop
fstpt
fdivl
sub
iret
and
out
lods
shl
enter
cmp
inc
push
cmp
in
loopne
scas
sarl
mov
sub
add
xor
mov
dec
mov
jo
popa
fldt
xor
fstpt
pop
repnz
and
lds
in
das
cli
sbb
mov
outsl
and
jp
outsb
sbb
xorb
stc
adc
push
lods
inc
xor
cltd
lahf
mov
sub
and
mov
jne
xor
dec
cwtl
test
xlat
cmpsb
sti
hlt
or
jg
fildl
cmp
sbb
lcall
mov
mov
in
jmp
or
int
ds
adc
inc
das
mov
push
dec
arpl
sub
nop
dec
inc
imul
jle
cli
cmp
dec
sub
mov
pop
mov
in
lea
gs
push
sbb
pushf
imul
and
aam
inc
enter
int3
rcrl
fiaddl
mov
into
sub
sbb
xchg
add
mov
mov
xor
in
aam
lds
inc
cs
loop
mov
jno
dec
xlat
adc
shrl
mov
push
and
inc
mov
je
iret
pop
inc
pop
jecxz
das
ds
and
sub
push
das
inc
dec
testl
xor
rorb
mov
jl
push
pop
and
inc
cwtl
pop
and
mov
aas
pop
xlat
iret
out
mov
out
and
lahf
or
adcb
xchg
addr16
lret
sub
imul
lock
push
clc
lret
lcall
dec
in
jge
mov
icebp
cwtl
mov
lret
pop
and
lahf
or
fcomps
andl
inc
lcall
inc
adc
xchg
pushf
jnp
mov
dec
scas
sarl
mov
xchg
lds
mov
shrb
das
pop
pop
ljmp
push
cmpsl
popa
lret
aam
xor
mov
and
cli
popl
mov
jno
sub
mov
mov
or
xor
fdivrp
sub
xchg
inc
cmpsl
mov
mov
cmpsb
popf
sub
test
mov
and
inc
xor
pop
aas
lret
aam
mov
inc
mov
xchg
std
mov
push
sub
popa
or
in
mov
rcrl
in
sbb
add
inc
scas
jle
lods
pop
cmp
add
incb
push
push
mov
jp
in
jmp
sub
imul
dec
mov
es
mov
outsb
mov
pop
pop
fildl
sbb
lcall
jo
cwtl
cmp
loop
jmp
pop
inc
mov
sbb
mov
cli
icebp
shrb
cmpsl
mov
sbb
mov
fisubrl
outsb
lds
mov
aad
jmp
add
dec
jecxz
mov
adc
mov
out
aas
insl
movsb
movsb
jo
adc
xchg
outsl
pop
stc
pop
into
mov
cmpsb
fucomp
ds
cld
ret
ds
shrb
popa
mov
xor
push
jle
xor
dec
and
mov
inc
xor
sahf
cmp
iret
repz
lahf
xchg
sbb
cltd
mov
outsl
pop
sub
jge
jnp
push
fstp
addr16
sti
fwait
pop
ja
push
lahf
sub
xor
lds
jno
pop
push
jo
scas
jae
lcall
popa
insl
data16
xchg
ss
inc
jns
pusha
fldl
fstpt
mov
adc
ret
outsb
ret
mov
dec
fsts
and
aam
jb
xor
mov
mov
cmp
nop
xor
lods
sub
adc
jbe
and
fcompl
mov
bound
out
dec
add
sub
cmp
ds
adc
ficompl
int
ret
cmp
jecxz
and
movsl
fsubrl
popa
test
mov
subl
jmp
add
xor
loop
cwtl
pusha
roll
test
andb
loope
hlt
call
and
subl
lock
subl
dec
cwtl
xor
sub
shlb
js
dec
ds
les
in
notb
push
rolb
rclb
movsl
jmp
cmp
loop
ficoms
rol
xchg
pop
push
or
mov
lret
inc
shll
notb
sub
stos
adc
adc
aas
ret
or
jge
pop
mov
push
mov
xor
pusha
lcall
in
jo
mov
xor
xor
lods
jae
add
movsb
aaa
jmp
mov
imul
push
std
dec
stc
add
mov
jecxz
add
add
ja
and
hlt
pusha
cmp
testb
mov
xor
push
in
mov
xchg
push
shlb
ret
xor
dec
xor
into
lcall
xchg
xor
int3
push
insl
movl
out
lret
pop
sub
mov
pop
loope
sub
jns
dec
data16
push
test
popl
dec
mov
mov
inc
sub
sbb
xor
or
loop
in
loop
leave
in
repnz
xchg
jne
jbe
arpl
lock
js
decl
fs
lahf
int
js
je
aad
jnp
in
sub
iret
lds
js
mov
add
adc
pop
xchg
xor
pop
inc
or
ds
mov
dec
pop
xor
popa
js
call
mov
lcall
adc
dec
mov
push
inc
lods
add
mov
divl
popa
adcl
mov
inc
pop
pop
cmp
cld
dec
leave
subb
ret
xor
repnz
pop
cmpsl
xor
sbb
xchg
mov
dec
les
mov
das
imul
andb
mov
inc
sub
sbb
push
adc
jp
aaa
sbb
sub
lcall
sub
xlat
pop
xchg
mov
push
sub
jnp
sbb
sub
inc
icebp
sar
inc
fldenv
mov
and
pop
jp
mov
mov
adc
pop
xor
cmc
mov
or
jnp
inc
cmp
cmp
lret
and
aaa
movsb
arpl
shl
inc
inc
jo
mov
adc
lock
fcoms
testl
js
in
shll
add
test
sub
push
xchg
lds
mov
mov
clc
ljmp
pop
addl
in
push
pushf
in
fisubs
icebp
push
push
cmpsb
mov
inc
pop
aam
nop
add
fsubs
mov
dec
and
or
sbb
ljmp
push
mov
cmp
jle
subb
push
xchg
arpl
xchg
pop
add
icebp
pop
cmp
popf
hlt
test
jno
mov
lods
rorb
lret
sbb
inc
fisubl
adc
movsb
pop
rorb
js
in
arpl
fldl2e
push
ss
ljmp
lahf
ljmp
dec
mov
aaa
sbb
add
inc
inc
inc
and
cli
dec
cmp
test
xlat
dec
fistl
aaa
imull
ficoml
ja
xchg
cmp
outsb
mov
inc
or
push
inc
fadds
xlat
rep
adc
pop
sysexit
das
xchg
adc
sub
js
pusha
xor
inc
mov
sub
pop
pushw
and
pop
rorb
sub
aad
shlb
rcrb
cmpsb
xor
and
shll
sbb
push
aas
mov
stc
jae
in
shl
adc
cmc
or
xchg
insl
cmpsl
dec
lahf
add
mov
cltd
scas
movsb
jne
jg
insb
stos
mov
data16
popa
filds
jmp
call
mov
sbb
push
and
pushf
jb
adc
pusha
loope
lods
mov
inc
mov
push
out
ret
enter
mov
inc
xchg
cli
lea
sbb
xchg
push
test
iret
jmp
jle
mov
pop
pop
mov
jmp
or
adc
xor
pop
jns
mov
cmc
daa
xchg
stc
mov
xchg
insb
clc
sbb
shlb
sbb
pushf
imul
jle
mov
sub
inc
repnz
arpl
xor
test
and
lods
mov
mov
adc
and
call
jle
push
fnsave
mov
pop
fldl
sub
ja
add
in
dec
or
in
loop
rcl
lea
insb
mov
sub
mov
cltd
sbb
jae
sbb
mov
mov
push
and
jo
lret
inc
lcall
xor
adc
sbb
inc
or
push
adc
xchg
arpl
mov
das
stos
jg
add
fistl
lock
ja
sti
mov
stos
dec
repnz
subl
out
imul
out
leave
cmp
push
cmpsl
and
mov
in
pop
cmp
addb
inc
jb
add
lret
sub
fsts
mov
test
xchg
and
xor
das
mov
mov
repz
lret
or
sbb
shlb
or
inc
imul
aas
imul
xchg
push
lea
mov
inc
jmp
xchg
push
inc
dec
xlat
cltd
mov
data16
sbb
loopne
rcrb
xchg
jnp
sbb
inc
arpl
stos
jns
push
pop
xor
xchg
pop
and
sti
cli
movsl
shl
int
mov
mov
enter
sahf
jl
push
jne
lock
das
sbb
divl
mov
inc
shlb
rorl
or
lcall
ret
pop
gs
xchg
push
popf
scas
jg
and
push
pop
int
lret
cmpsb
push
rolb
cli
in
xchg
lds
add
or
imul
lret
jg
aas
or
lret
fimull
xor
adc
sub
in
xor
lock
xor
mov
inc
loopne
and
mov
push
pop
xchg
int
pop
jg
cmp
fildll
rcr
pop
cmp
mov
add
xchg
adc
in
mov
lock
aam
inc
cmp
or
cmc
lea
push
jbe
mov
add
jge
js
cmp
push
mov
pop
cmp
jmp
and
cmpsb
pop
hlt
fadds
data16
lret
js
cld
pop
das
mov
lock
popf
negl
mov
stos
in
testl
xlat
inc
fwait
neg
xor
stos
sbb
iret
mov
push
gs
sub
cmp
pop
add
repz
adc
or
icebp
mov
lret
roll
pushf
xor
lods
dec
mov
in
iret
mov
pop
test
repnz
xchg
pop
xor
cmpsb
jae
mov
aad
cmp
jle
cmp
push
pop
aas
imulb
sbb
xchg
mov
sbb
out
xchg
mov
mov
js
xor
lahf
push
repz
sub
inc
iret
daa
cmp
add
popa
add
fsubrl
mov
push
or
stos
stos
testl
push
fnstcw
jo
aaa
rclb
push
lcall
ja
lret
jl
stos
cld
and
arpl
incl
dec
mov
clc
and
mov
lret
xorl
cmp
test
out
scas
fildl
aad
pop
mov
sub
movsb
js
in
fcomp
mov
lret
adc
repz
mov
into
popa
mov
mov
stc
add
lock
lcall
leave
aas
pop
lahf
cmc
pop
or
pop
loop
adc
jecxz
pop
add
stos
pop
xorb
int3
adc
cmp
xor
lods
aam
or
faddl
add
add
sbb
aas
pushf
sbb
dec
xchg
xchg
pop
test
popa
jg
and
daa
pop
sahf
sahf
or
mov
in
icebp
cmp
lahf
leave
sbb
xor
dec
add
jne
or
xor
fucom
xchg
mov
push
in
add
inc
mov
and
loope
scas
jae
icebp
dec
daa
insb
roll
leavew
push
sbb
js
ret
add
addr16
sar
int
sub
shll
es
cwtl
test
xlat
lea
or
xor
out
jbe
insl
int3
dec
add
mov
idivb
leave
jmp
fucomp
pop
push
ja
mov
mov
neg
mov
cli
mov
xchg
lea
pop
insb
mov
mov
jo
stos
add
pop
push
out
dec
shlb
inc
fadds
sti
in
adc
mov
add
mov
cmp
or
mov
or
dec
stos
imul
push
insl
adc
cltd
mov
out
pop
insb
or
sti
jne
fwait
cmpsb
push
dec
stc
mov
adc
in
mov
and
jecxz
cmp
repz
push
jl
mov
jle
mov
idiv
mov
xor
push
dec
pop
shlb
xorb
and
sub
call
pop
imulb
aaa
sbb
scas
xchg
gs
xchg
addb
nop
sub
out
jl
les
cmp
push
xor
push
push
lret
lods
push
lods
out
jg
sahf
fmull
popa
lcall
push
in
jbe
pop
xchg
add
pop
inc
stc
fistl
fs
sbb
scas
inc
push
test
shrb
sbb
inc
mov
mov
xchg
inc
push
xor
loopne
lret
pop
xchg
jae
scas
filds
push
mov
bound
lods
or
cwtl
add
enter
movsl
add
mov
mov
cwtl
inc
rorb
or
jnp
sbb
lahf
pop
aaa
sahf
or
nop
mov
mov
cmp
mov
fists
or
cmpsl
jmp
arpl
or
pop
lods
jns
xor
lock
xor
sti
sub
add
add
inc
dec
aas
dec
fisubl
jl
addr16
insb
stc
insb
insl
mov
xchg
ds
movsb
int
push
dec
dec
sti
sub
cwtl
push
mov
add
ret
pop
dec
loopne
jg
or
in
mov
enter
gs
ret
lcall
fstpt
push
pop
push
pop
mov
insb
shll
dec
add
mov
pop
pusha
insb
cld
cs
popf
xchg
push
ds
je
push
outsb
pop
in
jl
mov
ljmp
xchg
test
test
xchg
shll
gs
shlb
and
std
xor
cmp
mov
push
in
inc
pop
mov
cmpsb
cmpsb
inc
pop
sub
push
jno
dec
es
test
out
popf
jmp
insl
inc
inc
leave
add
sti
adc
test
add
pop
js
int
sbb
xchg
cmpsb
int3
and
or
imulw
enter
sbb
out
into
adc
mov
or
mov
add
idivb
fwait
sti
lret
jg
jae
sub
scas
mov
jno
sarb
lds
xchg
ret
mov
jb
xchg
mull
enter
mov
pop
jno
daa
sarl
das
or
mov
add
dec
pop
sahf
enter
ja
enter
enter
cmc
dec
je
enter
sub
xor
das
cmp
rcl
mov
test
fisubrl
andb
sbb
mov
cmp
das
cmp
or
or
push
loop
mov
mov
inc
sub
outsb
dec
repnz
lahf
fldcw
rclb
mov
cmc
dec
jl
int
xor
push
mov
jno
mov
das
daa
in
mov
imul
fsubrl
cmc
in
ss
xchg
sbb
ljmp
push
jp
icebp
jb
or
mov
push
jle
mov
and
xor
cmp
scas
and
pushl
out
or
mov
mov
push
aaa
sub
cwtl
or
test
push
icebp
and
xor
cld
inc
jmp
outsb
push
sub
or
imul
aas
push
mov
push
in
movsbl
add
lock
test
out
cli
jae
shlb
je
xor
adc
dec
xor
int3
out
fs
mov
pop
bound
or
add
push
out
mov
rorl
pop
lock
outsb
xlat
push
in
push
jp
pop
jl,pt
xchg
subb
or
leave
add
add
dec
dec
adc
sub
mov
rcl
pop
js
outsl
sub
xchg
lock
arpl
scas
mov
movsl
mov
mov
addr16
lds
out
dec
sti
jmp
fs
mov
daa
add
dec
sbb
clc
add
cmpsl
orb
add
mov
call
into
movsb
shlb
scas
movsb
fprem
insb
dec
push
or
inc
js
jne
push
jl
and
loop
push
and
stc
imul
rcrb
mov
adc
fdivs
movsb
pop
test
mov
mov
bound
or
mov
mov
lcall
test
adcb
int3
jb
imul
pop
mov
sbb
fmull
push
jo
and
adc
xor
mov
inc
imul
sar
lret
loope
dec
pop
inc
push
sti
lds
dec
jge
mov
cmp
and
fsubl
cmp
out
loope
js
and
sti
inc
call
add
cmp
mov
dec
mov
leave
ja
xor
mov
add
xchg
xchg
cltd
mov
std
push
adc
mov
sbb
push
fisubs
insb
jmp
lods
sub
mov
mov
nop
shl
xorl
sahf
hlt
andl
insb
xchg
xchg
mov
jge
adc
sbb
or
mov
or
jp
pop
lcall
fldenv
sti
xchg
adc
mov
xchg
push
add
pushf
mov
push
push
sub
add
test
scas
add
cmp
fdivl
les
mov
repnz
jle
xchg
cmp
cld
sbb
pop
call
xchg
pop
sub
insb
jb
push
out
and
jnp
stos
xor
sarb
jnp
addr16
out
pop
mov
pop
push
jne
jne
add
movsl
mov
outsl
xor
jns
push
cwtl
jae
push
mov
push
mov
inc
movsl
push
out
cli
xor
mov
pop
movsl
fists
popf
mov
push
test
ret
jns
xchg
mov
pop
icebp
cmp
std
popf
pop
add
xchg
jg
push
ret
mov
jne
ljmp
adcl
xor
dec
cmp
mov
sub
xchg
shll
mov
push
inc
mov
adc
jo
pop
jmp
or
mov
sbb
scas
fnsave
stos
out
dec
dec
stos
xor
jle
mov
repnz
xchg
ret
hlt
icebp
les
fs
cmpsl
shrl
mov
pop
add
enter
cltd
cltd
mov
pop
stc
outsl
fldenv
xchg
insb
jnp
pop
push
outsb
inc
inc
bound
fwait
popa
dec
cmp
add
xchg
jne
fsubrp
cmp
pop
jle
subb
popa
and
pop
popa
nop
rcrb
ret
sti
cltd
lret
jmp
fdivrl
and
cmp
jmp
icebp
ret
push
bound
push
shll
fistpl
addb
jb
mov
sarb
jle
mov
cli
add
mov
mov
push
nop
clc
jle
fisubrl
push
pop
push
mov
pop
inc
fcmove
adc
add
cmc
outsb
mov
mov
push
fsubl
dec
aad
cmp
jl
xchg
pop
roll
or
add
push
inc
aad
and
or
inc
pop
cmc
mov
es
add
pop
cli
shlb
ja
cmp
xchg
xor
out
fstl
xchg
aas
pop
cmc
lock
stc
inc
xchg
ds
sub
xor
in
insb
in
lcall
stos
testl
pop
mov
rcrl
mov
sub
jo
xchg
divl
xor
pop
clc
lret
inc
out
mov
outsl
mov
mov
fstl
sub
jns
adc
mov
push
test
mov
movsb
cmpsb
cmp
and
xor
add
loop
sub
clc
mov
enter
adc
push
js
fldenv
aam
push
dec
loop
clc
into
sbb
jno
cmp
ret
adc
and
and
mov
xor
enter
push
adc
push
stc
je
dec
inc
push
xchg
mov
ficomps
sbb
push
es
mov
lds
cmp
xchg
or
das
mov
divb
dec
sub
jle
mov
push
test
movb
sarl
cmpsl
shlb
lea
mov
xor
mov
jl
xlat
icebp
bound
hlt
push
sbb
and
out
inc
lods
push
mov
push
jle
pop
jmp
ret
or
jb
data16
or
mov
movsl
sbb
out
lahf
fcompl
sbb
fistpll
movsb
lsl
mov
movsb
jb
adc
popa
lahf
bt
push
and
lahf
pop
or
cmp
sarl
push
aam
ja
mov
int
lcall
adc
jno
inc
aaa
lahf
imul
mov
shlb
sub
sahf
sub
dec
mov
loopne
xor
inc
adc
outsl
mov
orb
xchg
call
in
and
int3
jl
and
fimull
test
pushf
pop
repnz
ror
shrb
insl
fdivrl
and
cmpsb
or
loope
movsl
jl
movsl
or
cmp
decl
push
or
mov
test
or
or
adc
cs
ss
int3
not
add
dec
frstor
fiadds
inc
lods
xor
push
fwait
pop
pop
movsl
in
pop
add
xchg
lds
loopne
cmpsl
pop
xor
dec
stc
sbb
pop
lods
jns
shrl
pop
inc
fst
in
pusha
movl
push
lcall
jecxz
dec
ds
movsl
inc
pushf
xchg
test
pop
iret
dec
jnp
adc
xor
xchg
push
movsb
sbbl
cwtl
sysenter
xor
xchg
jns
icebp
in
in
pop
jmp
and
jp
sbb
loope
xor
sbb
xchg
fsub
mov
push
rcl
mov
iret
jno
add
mov
inc
sbb
rol
sbb
mov
add
int3
ret
shll
aad
mov
jp
js
mov
xor
mov
sub
ja
sub
dec
mov
push
std
out
mov
mov
push
js
push
pop
fs
sar
jo
add
mov
push
divl
fistpl
adc
or
aad
cmp
pop
fwait
xor
outsl
scas
mov
insb
push
cmp
cmp
mov
inc
mov
add
xor
inc
daa
loope
out
inc
clc
maskmovq
testl
fmuls
add
clc
sub
jns
sbb
push
cmp
and
mov
mov
push
movsb
xlat
dec
out
and
rcrb
test
leave
pop
mov
fcoml
and
mov
mov
adc
nop
out
out
in
mov
fisubrs
leave
lds
add
pop
jp
imul
shll
out
jae
mov
sbb
out
dec
fbstp
jno
pop
lds
rolb
mov
cmc
xchg
pop
pusha
int3
enter
pusha
add
add
push
mov
jnp
test
iret
add
lods
gs
mov
test
push
imul
cmpb
sub
push
xchg
add
bound
push
xchg
add
js
les
jne
out
call
scas
iret
mov
cmp
jno
xor
xor
call
fwait
jge
pop
cltd
ja
shll
adc
sub
out
clc
lcall
pop
int
fidivl
into
outsl
ja
pushf
jp
sub
xor
test
orb
andb
mov
and
dec
sbb
stc
push
push
cmp
cmp
push
aas
lock
push
fidivs
popa
aad
add
in
andl
pop
imul
enter
negb
into
pushf
outsb
xor
aas
mov
iret
xchg
xchg
lock
sbb
sti
adc
popf
shl
jno
iret
push
xor
mov
nop
xor
sub
shlb
rcr
and
rcr
repz
add
pop
rcr
daa
mov
push
ss
and
mov
stc
jnp
sti
cmc
adc
xor
aas
mov
add
adc
je
rol
ss
pop
bnd
jae
enter
dec
sbb
add
sbb
sahf
dec
or
lea
call
sbb
into
mov
jnp
test
cmp
in
fs
jne
andnps
jecxz
sbb
mov
sbb
jg
lcall
xchg
add
sbb
in
push
push
cmp
and
pushf
out
out
sbb
and
imul
and
nop
push
inc
call
daa
sahf
call
dec
dec
or
adc
adcb
cli
out
push
add
pop
mov
mov
ja
icebp
mov
outsl
sbb
fadds
or
movl
pop
or
mov
imul
cmc
ss
fs
push
add
lret
enter
add
push
sub
and
cld
ss
mov
bound
mov
test
pop
ja
mov
pop
xchg
sbb
hlt
xor
lret
test
mov
cmp
dec
pop
popf
clc
popf
and
xor
mov
add
into
adc
pusha
imul
nopl
cmc
mov
jg
xor
insb
insb
outsl
xor
fcomps
verw
inc
cs
imul
xlat
pop
mov
popa
dec
push
out
insl
sbbb
fstpt
mov
test
fiadds
les
ljmp
movsl
xor
push
ds
shlb
and
sbb
jmp
in
mov
and
mov
fnsave
jns
fbld
lahf
pop
decl
je
cmp
sarb
and
jb
jbe
fsubr
inc
jno
pusha
aam
mov
mov
cs
fildl
stos
lahf
mov
negl
inc
shlb
ret
ds
dec
add
sub
call
mov
pop
mov
lods
mov
pusha
cmpsl
icebp
icebp
out
in
xor
ficompl
popf
add
add
icebp
jp
jle
out
call
ja
cmc
in
pop
data16
push
add
loop
repnz
aad
xchg
in
movsb
outsl
bound
cltd
mov
dec
mov
push
js
insl
mov
mov
jnp
jne
daa
daa
push
hlt
in
inc
fs
and
push
pop
loopne
outsb
mull
push
pushf
sbb
in
mov
mov
test
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
mov
pop
add
add
add
nop
add
add
add
aam
stc
in
sbb
in
xor
or
pop
test
