pop
xchg
cs
jmp
movlps
xchg
sbb
cmpl
jg
mov
arpl
add
out
and
adc
fidivrl
lret
push
aam
mov
dec
jnp
cmp
mov
ret
push
pop
aaa
and
negb
jp
ljmp
sbb
mov
add
shll
nop
mov
jecxz
inc
jno
jle
inc
sub
push
int
fimuls
mov
sub
mov
clc
jb
inc
dec
mov
fdivrp
push
bound
mov
fdivr
pop
imul
push
add
dec
ds
aaa
outsb
and
stos
xor
mov
xchg
mov
dec
das
imull
outsb
xchg
xlat
lods
xchg
sahf
stos
xor
sbbb
xor
mov
int3
xor
pop
push
jo
pop
sub
inc
cmp
fisubrl
jp
sub
imul
mov
adc
std
jecxz
icebp
jne
out
rol
cmp
negl
inc
push
dec
mov
jae
out
mov
pop
mov
adc
movzwl
shr
pop
add
enter
and
dec
push
lahf
iret
inc
shr
rcr
push
add
das
pop
sti
dec
bound
ljmp
sub
out
mov
mov
jg
sbb
lahf
pusha
xchg
shlb
mov
jle
pop
jnp
add
and
mov
mov
adc
cs
mov
shlb
out
orl
lock
pop
push
roll
mov
out
negb
and
lahf
or
inc
lret
aaa
mov
xor
mov
jecxz
push
add
ret
jmp
lahf
or
js
daa
clc
arpl
pop
cmp
cmpsl
mov
fildll
dec
xchg
xor
ret
int
movsl
jl
add
pop
aaa
movsb
outsl
lret
test
filds
add
mov
xor
fmul
outsl
dec
bound
lea
shrb
ss
popa
adc
cmp
jno
pop
ljmp
cs
div
mov
xor
fwait
jb
int3
inc
decb
sti
push
dec
stos
cmp
push
andb
cmpsb
sahf
mov
loopne
mov
out
cmp
mov
push
or
adc
hlt
fdivr
jae
adc
inc
in
push
dec
pop
setae
xor
jo
in
das
cmp
out
and
je
push
sub
stos
fdiv
push
loop
insl
xor
dec
add
rorb
rcr
scas
daa
mov
fnstenv
fisttps
pop
sbb
sbb
fucom
jge
in
leave
push
mov
outsb
xchg
out
mov
sbb
inc
call
enter
jp
int
lea
dec
pushf
sbb
and
pusha
imul
cmp
pop
rcrb
ret
pop
pop
xchg
rol
inc
jl
pusha
repnz
mov
push
xchg
aas
adc
sbbl
adc
in
xchg
std
push
or
mov
pop
pop
ret
sub
cmp
dec
sub
cltd
xchg
mov
mov
mov
pusha
jae
mov
jp
lea
sbb
and
mov
jmp
xrelease
sub
enter
repz
lret
call
cld
pop
movzwl
inc
mov
je
in
inc
push
mov
imul
cmpsl
out
push
mov
cltd
jnp
push
xor
and
sub
pushf
sti
pop
arpl
jbe
inc
xor
orb
add
xchg
push
js
outsb
pop
mov
ja
mov
lret
push
lret
cli
jbe
in
dec
xor
stos
iret
int3
nop
cwtl
aad
xlat
add
sbb
pop
scas
mov
shll
pop
arpl
fucomip
and
lret
bound
je
rorl
xchg
aad
dec
punpckhdq
outsb
pop
cmpl
imul
mov
aas
fidivs
pop
push
out
cmp
imul
hlt
repz
popa
ficoml
push
ret
jmp
scas
push
jl
jl
bound
adc
dec
rcr
addr16
pop
stos
adcl
or
sbb
popa
inc
xor
jo
je
mov
cmpl
jae
sbb
xchg
fcom
outsl
xchg
imul
pop
outsl
or
mov
fwait
and
push
adc
fcompl
push
sub
mov
fildll
pop
mov
push
sbb
adc
pop
sub
push
imul
xor
out
or
push
add
cmpsl
mov
addr16
push
sbb
mov
out
mov
pop
movsl
xor
jb
inc
cmpb
fidivs
add
dec
xchg
nop
lcall
je
xor
mov
add
sbb
sub
mov
insb
sub
push
xor
xchg
out
mov
pop
jo
hlt
in
adc
loopne
sti
clc
and
cmc
jg
add
adc
pop
rorb
push
mov
sahf
or
ds
push
andb
jbe
mov
mov
and
pusha
jg
push
stos
xchg
pop
scas
mov
xchg
lds
fs
in
pushf
dec
pop
out
sbb
sbb
loopne
sbb
mov
roll
lds
add
xchg
mov
loop
add
or
and
pop
sti
sub
out
mov
cmp
jbe
push
loopne
push
out
shlb
xor
mov
sub
add
addb
rolb
mov
lret
inc
pop
sbb
and
xchg
or
sbbb
and
mov
iret
arpl
dec
jo
repz
and
sbb
and
mov
mov
insb
loop
mov
cli
xchg
repnz
dec
ds
loop
out
pop
lcall
fstpt
fst
push
shll
sbb
cltd
out
pop
xlat
xor
loop
aam
xchg
loop
cmp
or
sbb
xchg
out
jle
iret
jbe
push
adc
shll
mov
mov
mov
mov
pop
inc
mov
jo
repnz
adc
dec
or
ds
fimull
cli
dec
int
stos
push
xchg
aaa
inc
pusha
outsb
aam
xor
ja
mov
adc
dec
test
negl
fisubrl
or
lret
rol
add
push
scas
push
xchg
sbb
filds
fisttpl
mov
sub
nop
push
mov
inc
push
stc
push
push
aaa
sbb
xor
and
mov
cmpl
sahf
and
push
into
dec
mull
inc
dec
cld
fwait
fwait
cmp
sbb
cld
cmp
jmp
ja
mov
les
cmp
icebp
lds
cmpsb
jle
incb
fldl
pop
inc
lcall
jo
arpl
repz
sbb
jle
mov
xlat
iret
lret
mov
loop
lahf
stos
imul
sti
lret
jae
data16
pop
sub
xchg
cmp
add
xchg
test
jae
lcall
mov
mov
add
ja
dec
mov
pop
lods
or
outsb
sub
repz
rcrb
xlat
add
in
rcrb
inc
pop
in
jbe
dec
mov
jle
or
sbb
ret
test
loope
movsl
push
push
cmp
frstor
ljmp
jmp
inc
xchg
fwait
sub
nop
ja
dec
mov
inc
incl
fisttpl
cmp
mov
dec
out
xor
sub
mov
pop
lahf
ss
cltd
lods
push
jno
ja
call
cmp
aas
popa
dec
sbb
repz
call
cmpsb
add
sub
xor
imul
stos
lahf
fcoms
pop
dec
in
xchg
mov
adc
fcmovne
out
inc
adcl
inc
clc
inc
add
into
dec
xchg
mov
jge
into
fsts
jbe
xchg
xchg
adc
std
fsub
mov
loop
icebp
inc
or
sub
nop
push
push
dec
mov
shll
fnstsw
or
fdivl
dec
aaa
xor
repz
mov
dec
adc
xor
addr16
stc
rolb
mov
jo
adc
ffreep
dec
jge
popl
bound
lret
mov
adc
pop
mov
and
iretw
jnp
cld
pop
andb
inc
fsubrl
pop
cld
ljmp
pop
test
mov
ret
mov
add
sbb
add
daa
xor
add
inc
lods
lret
popf
cwtl
in
insb
cmp
into
cli
pop
pop
iret
lahf
inc
or
imul
cmpsl
hlt
dec
jecxz
or
sarl
out
pop
push
subl
add
imul
xor
inc
icebp
xor
fwait
das
pop
mov
dec
daa
jg
push
scas
lret
sub
sub
ljmp
xchg
mov
pop
lods
xchg
addr16
repz
xlat
movsl
push
and
rcll
jmp
testb
pop
push
in
xchg
fisttpl
jp
lock
inc
out
add
and
add
mov
fcmovnu
out
sbb
popa
or
fstps
leave
jge
fistl
xor
push
sbb
xchg
div
mov
push
repz
cmp
dec
inc
daa
add
loopne
out
je
out
add
dec
mov
lcall
daa
add
out
add
or
dec
popf
or
rorb
into
mov
or
pop
in
mov
jb
movsb
pop
xchg
stos
xchg
ss
xchg
stc
inc
jp
ffreep
mov
sub
mov
xchg
js
pop
xlat
movsl
lret
mull
sahf
repnz
mov
addb
fildl
int3
aaa
enter
inc
mov
out
or
jp
push
jae
dec
adc
movsb
mov
push
xchg
stc
xor
shr
mov
ret
cmpsl
pop
ljmp
push
aas
mov
roll
out
dec
ud2
pusha
into
mov
int3
sub
sar
mov
leave
cmp
out
nop
push
or
pop
push
lret
sti
push
sbb
xor
sbb
das
xor
mov
push
pop
movsb
test
out
and
pop
jecxz
enter
xchg
jbe
mov
sub
lds
es
outsl
mov
mov
in
jp
pop
jl
in
ds
sub
inc
repnz
push
jl
movsb
loopne
inc
arpl
pop
fwait
lret
ret
shlb
incb
dec
daa
rcll
mov
xchg
pop
fiadds
pusha
aam
dec
test
mov
xchg
rcrb
push
jecxz
icebp
das
ds
stos
mov
lods
test
dec
mov
xorl
in
outsl
jecxz
dec
pop
fildl
movsl
cmc
push
jmp
stos
dec
push
data16
add
aas
sbb
mov
xchg
movsl
jle
or
nop
lods
mov
out
pushf
pop
cmpsb
inc
inc
rclb
out
cmpsb
stos
imul
dec
pop
xor
idiv
aaa
lea
lods
push
cmpsb
imul
add
out
sub
push
outsl
mov
into
sub
fisubl
sub
aaa
lds
stos
jl
stos
dec
cmp
std
pop
ss
loop
into
stos
daa
shll
mov
cwtl
mov
push
sub
xchg
dec
lcall
pop
push
dec
adc
and
outsb
push
ds
inc
pop
popf
pop
push
jl
aam
out
mov
fdivrs
xchg
shl
repnz
clc
mov
and
mov
cmp
sarl
dec
sbb
adc
mov
mov
out
sub
or
push
jp
gs
gs
fisubrs
addr16
mov
and
dec
or
data16
sub
rorl
test
jp
leave
push
mov
dec
cmp
int
lahf
xchg
fwait
jp
sbb
stc
enter
ljmp
pop
pop
les
add
push
aaa
add
das
bnd
xlat
fwait
inc
lea
hlt
xchg
rcrl
fwait
addr16
scas
enter
pop
xorl
out
push
push
ss
mov
imul
lahf
pop
add
hlt
test
mov
test
rclb
sar
or
xchg
xchg
int3
ret
sbbl
imul
jecxz
inc
lahf
lahf
dec
jp
lret
ror
or
jp
cld
scas
ret
cmpsl
repz
mov
push
shr
test
aas
flds
insl
fwait
sub
adc
jo
dec
out
inc
ret
fstpt
cmovg
fcoms
into
or
out
fwait
je
jo
outsb
incl
xor
sub
je
push
sbb
outsb
fs
js
xchg
add
shl
mov
pop
jae
in
push
add
fwait
cltd
add
out
cs
cmc
dec
inc
lods
lcall
mov
movsb
push
shrb
mov
lahf
push
add
and
jl
pushl
rorl
pop
out
ret
cmp
push
mov
mov
incb
push
mov
out
ja
jbe
leave
jecxz
pop
jl
push
testl
inc
pop
popa
mov
pop
xor
les
jmp
adc
sbb
jecxz
mov
jecxz
pushf
mov
xchg
sti
mov
cmp
xchg
push
ret
aas
and
inc
or
adc
pop
sbb
out
cmpsl
mov
movsb
movsl
xlat
mov
jae
pop
cltd
mov
jne
push
sbb
int
inc
nop
pop
fldt
inc
adc
and
sti
xchg
xlat
mov
or
testb
dec
inc
subl
lret
or
or
insb
ja
mov
pop
push
or
jmp
push
imul
int
fisubrl
xchg
lock
adc
adc
lret
mov
cltd
mul
dec
pop
repz
popf
jnp
xchg
stos
gs
sbb
cld
add
add
mov
shrb
loop
dec
das
fnstsw
dec
dec
cli
mov
sub
push
ret
mov
sub
inc
insb
lds
out
sub
dec
adc
lahf
push
clc
and
cli
xchg
fcoml
or
test
mov
bound
push
or
cmpsl
in
pop
outsb
mov
mov
fbstp
stos
stos
cmc
dec
fisttpll
sbb
pusha
fisubrs
stc
push
fs
pop
insb
mov
jecxz
push
or
or
scas
test
pop
out
push
xor
out
inc
call
clc
pop
add
loop
mov
xchg
in
cwtl
mov
lods
mov
bound
jo
adc
mov
pushf
xchg
in
decl
pop
inc
imul
dec
jae
addl
daa
out
inc
jnp
mov
push
ja
out
jmp
cwtl
mul
jge
adc
jmp
xchg
dec
decl
sbb
inc
out
in
stos
pusha
lock
and
xchg
rolb
fincstp
dec
sub
lods
and
mov
xchg
push
sub
inc
and
xor
xor
pop
xor
jp
lahf
and
int3
subb
push
add
and
outsb
sub
mov
sub
test
rdmsr
enter
adc
scas
mov
mov
jae
dec
push
dec
push
or
and
insb
xlat
jo
lahf
cld
outsb
je
jb
stc
daa
popa
adc
outsl
xor
cs
push
rorl
mov
mov
out
lret
js
mov
or
sub
pop
push
push
push
xchg
bnd
xchg
insb
jecxz
adc
popa
bound
out
outsb
mov
mov
in
xorl
jns
mov
lret
test
out
mov
mov
mov
xchg
scas
dec
adc
add
pop
das
out
xor
sbb
jl
or
xor
add
push
add
adc
test
pop
cmpsl
dec
out
xchg
icebp
cmp
lods
loope
cltd
fistl
mov
test
out
sub
testl
dec
mov
cs
loop
xor
mov
ja
mov
add
add
jmp
mov
out
and
mov
fidivs
and
jl
ret
sub
jmp
mov
ljmp
and
shrb
jmp
cmp
popa
cmp
in
jle
pop
push
jl,pt
pusha
out
je
scas
addr16
adc
or
adc
es
sbb
js
pop
in
jo
jle
mov
int3
loope
jb
xor
mov
aad
test
jne
mov
ljmp
sbb
adc
out
add
pop
rol
loopne
imul
fs
adc
scas
gs
mov
fidivrl
rep
pop
push
out
adc
jecxz
push
mov
fisttps
fbld
aas
dec
fstpt
stc
cmp
jbe
cvtdq2ps
shrl
pop
push
and
xchg
sbb
imul
call
mov
out
xlat
hlt
push
inc
inc
into
mov
pop
into
dec
jns
xchg
sbb
adc
and
lahf
xor
divl
push
ljmp
xchg
pop
push
xchg
cmp
xorb
test
inc
scas
mov
sub
jecxz
adc
loopne
int3
mov
mull
bound
scas
jl
jp
xchg
fcos
dec
jo
sub
fdivrs
or
xor
cmpsb
popl
icebp
std
out
sbb
fwait
xor
xor
into
fimuls
or
xor
mov
sbb
cmc
xor
and
dec
mov
jbe
leave
lret
out
popf
add
iret
pop
dec
sahf
pop
aaa
outsl
fiadds
outsl
sti
sub
outsb
int3
fs
mov
jge
hlt
test
add
xchg
aaa
aam
adc
repz
lea
add
mov
sub
movsb
lods
shlb
cmovne
or
rorb
sti
adc
inc
adc
out
xchg
rorl
pop
mov
out
jmp
add
popa
lret
mov
insl
ds
jp
int
sub
or
mov
in
out
lea
pushf
addr16
push
xchg
mov
cmc
mov
loope
mov
je
je
inc
inc
mov
int3
out
hlt
out
testb
dec
xchg
jmp
cmpsl
push
repz
iret
xor
add
movl
cmp
outsb
fmul
lods
lret
adc
cmpsl
adc
inc
aaa
gs
out
sbb
pusha
lock
xchg
in
leave
xchg
mov
jge
add
xchg
adc
mov
shl
hlt
sti
and
jmp
jbe
inc
push
imull
and
add
jl
lock
mov
mov
lahf
loope
test
stc
pop
mov
enter
push
inc
mov
test
dec
and
imul
jnp
daa
imulb
call
inc
push
mov
movsl
add
in
cmp
test
xchg
mov
daa
adc
push
lock
mov
fcmove
sahf
or
stos
idivl
cmpsl
rolb
mov
call
iret
and
add
mov
xorb
cmp
repnz
outsl
ret
mov
lahf
and
mov
xchg
push
out
xchg
jo
sbb
push
xor
aam
mov
adc
rol
ja
insl
and
ja
adc
jnp
adc
sbbl
leave
test
jmp
sti
fadds
mov
and
cmp
sub
xor
js
jnp
mov
mov
fadds
ja
pop
test
daa
testl
inc
cli
mov
fwait
ja
pop
mov
outsl
mov
ficoml
ja
js
and
pop
scas
fiaddl
xlat
xorl
xchg
add
inc
jb
daa
inc
adc
setbe
mov
imul
lret
arpl
fistpll
sarb
push
fcompl
cmp
sbb
insb
sbb
xlat
push
cmp
je
cmp
xlat
xchg
or
xlat
cmpsb
jmp
ss
jb
and
loop
pushf
rcrb
mov
scas
addb
inc
or
mov
inc
add
nop
mov
pusha
popa
popa
jl
cli
mov
jns
stos
scas
bound
scas
pop
pusha
es
sub
xor
in
mov
pop
push
adc
in
je
pop
nop
rcrb
test
rorl
mov
insb
inc
adc
jnp
xchg
or
or
divb
scas
and
out
xchg
adc
sub
int
mov
orb
mov
lret
push
and
lcall
add
dec
mov
into
ja
mov
fdivr
pop
popf
cmp
popf
add
scas
pop
xor
out
push
out
pop
mov
pop
cmc
pop
add
sbb
mov
xchg
bound
mov
sub
out
les
jbe
inc
fstpt
mov
insb
adc
ret
and
shrl
pop
xlat
or
sbb
stos
cwtl
inc
call
mov
dec
add
mov
jns
dec
pop
xchg
or
aas
cmp
jmp
jg
scas
call
orl
gs
sbb
aaa
xchg
pop
xor
inc
fmuls
scas
mov
iret
push
sbb
jp
mov
ljmp
movsb
icebp
insl
fimuls
dec
and
mov
loop
cwtl
pushf
xchg
fisttps
mov
clc
pop
or
imul
push
and
sbb
xchg
out
fidivl
pop
pop
or
hlt
orps
xor
mov
call
lods
xchg
bound
xor
movsl
imul
fstpt
mov
add
and
pushf
push
dec
loop
iret
fidivl
adc
xlat
pop
stos
mov
or
dec
std
jmp
enter
in
sbb
mov
scas
jae
andl
ljmp
sbb
mov
fistl
testb
movsb
dec
ljmp
mov
rcrb
test
sbb
cmp
lahf
push
mov
in
mov
mov
pop
test
add
shlb
cs
xor
fnstenv
ret
lahf
test
mov
mov
lahf
rcrb
arpl
jno
cmp
adc
data16
je
iret
push
push
call
outsl
inc
fsts
inc
ja
jl
pusha
pop
sbb
outsl
mov
repz
and
imul
sub
pop
call
jae
shl
mov
test
mov
push
mov
inc
push
das
mov
adc
shll
das
or
inc
dec
xchg
sbb
jbe
into
or
arpl
pop
decl
or
inc
sub
arpl
enter
mov
ljmp
add
ret
push
nop
dec
push
cmpl
out
jmp
mov
lea
movsl
das
jnp
stos
adc
pushf
jp,pt
push
iret
and
ja
daa
sbb
jb
fs
arpl
inc
lods
mov
test
addr16
jae
insb
repnz
rolb
jo
mov
mov
sub
frstor
test
sub
ljmp
sbb
scas
fistpl
mov
out
adc
mov
jle
fcomip
loopne
rorl
clc
mov
and
cltd
jmp
popf
and
jns
call
pop
lret
push
and
push
dec
or
ret
push
out
pop
dec
mov
cmp
cld
mov
and
mov
fwait
jbe
lahf
xchg
adc
pop
aaa
adc
outsb
mov
mov
das
in
fistpl
mov
jecxz
arpl
icebp
or
mov
pop
xor
sub
cmpsl
lea
stos
xor
or
ljmp
inc
movsb
cmp
cmp
gs
notb
cmc
loopne
sbb
lods
pop
sahf
movl
and
out
jo
aaa
lret
mov
mov
stos
test
cmova
push
jecxz
inc
andb
push
pop
or
in
pop
ljmp
fbstp
push
lret
mov
sbb
lahf
inc
push
aaa
add
cs
sub
mov
xor
fstps
idivb
cmp
ss
push
jae
inc
repz
add
cmp
fsub
hlt
sahf
out
mov
inc
imul
fwait
cld
dec
pop
insl
js
or
adc
jg
jle
pop
add
fnstcw
push
mov
in
cs
xor
imul
mov
xchg
or
fisubrl
pushf
mov
cmp
psrlw
mov
decl
arpl
mov
mov
mov
sub
xor
jno
or
nop
pop
icebp
icebp
test
fcomp
dec
sbb
and
jnp
mov
out
add
sub
aad
insb
fldl
iret
xor
cmp
rclb
or
jp
mov
dec
in
icebp
add
out
lds
scas
jl
repz
add
imul
jmp
std
arpl
adc
cmp
adc
es
xchg
fs
jnp
mov
or
cmpsl
inc
cmp
or
mov
xchg
mov
lret
pop
mov
push
xchg
push
adc
push
mov
ds
or
test
push
popa
mov
dec
add
add
jg
xlat
jmp
pop
test
adc
adc
ljmp
lcall
cli
mov
cs
out
cmpb
pop
push
mov
mov
fistpll
arpl
sarl
sbb
xchg
cmp
in
dec
or
jle
cli
xlat
jae
cmp
cmpl
inc
stos
ret
addr16
mov
xor
rcl
dec
dec
push
dec
out
enter
mov
fstl
xchg
and
jne
js
into
bound
mov
filds
cmp
adc
gs
jl
push
fstpl
mov
in
fildll
addr16
std
sti
fistps
stos
mov
std
cmpl
inc
push
jle
mov
push
fwait
cld
lret
arpl
mov
cmp
fimull
mov
iret
push
xchg
dec
xlat
pop
sbb
aad
fs
fldl
ja
sub
adc
enter
pop
xchg
dec
std
es
je
mov
cs
and
dec
adc
xor
push
imul
insb
push
data16
jae
popa
pop
cs
loop
inc
ds
pop
xor
daa
pop
lret
stc
mov
pop
ds
movsb
push
pop
jg
mov
mov
in
fucomip
stos
pop
xchg
mov
in
loop
mov
pop
mov
inc
xor
fdivrp
mov
jecxz
shll
cs
dec
aam
mov
mov
pop
push
pop
cmp
fs
arpl
mov
or
lods
inc
in
ss
add
cs
imull
jmp
cmp
seto
xchg
out
aaa
inc
loop
xor
push
pop
mov
adc
sti
loop
dec
ficompl
jae
adc
andl
mov
adc
fdivl
pop
incb
shlb
fcompl
bound
or
test
add
lds
dec
jae
cmp
inc
pushf
push
movsb
and
lods
xor
aaa
in
and
pushf
xchg
jmp
dec
ljmp
jg
sbbl
mov
movsb
mov
cmp
or
pop
push
xor
hlt
mov
jnp
out
cld
insb
sbb
push
sub
ds
add
cmp
call
jle
mov
push
arpl
dec
imul
push
xor
add
lret
cmpsl
inc
sub
add
mov
fmul
adc
out
rorl
jnp
cmp
jnp
push
daa
repnz
cmp
dec
xchg
sub
cmp
shlb
out
push
ret
jp
and
and
jecxz
popf
xchg
mov
adc
sarb
and
inc
or
mov
into
mov
pop
rclb
les
shlb
iret
int3
push
loope
push
int3
fistl
sub
xor
sbb
dec
shr
add
xchg
inc
inc
aas
dec
pop
fisttpl
hlt
mov
mov
inc
xchg
cmp
int3
movsb
fcoms
cmp
xchg
cmp
mov
iret
movsl
addb
loope
jbe
sbb
sahf
clc
xor
pop
int3
mov
inc
xor
cmp
pop
mov
mov
xchg
jnp
addr16
dec
mov
stos
out
ret
dec
mov
out
sahf
ret
lret
bound
ja
mov
fistl
int3
aam
pop
or
jecxz
mov
push
leave
adc
rcrl
stos
push
dec
and
mov
inc
repnz
jecxz
aam
xlat
cmp
cmc
dec
popa
jno
mov
jmp
cwtl
sub
mov
and
cwtl
out
xchg
andl
call
sbb
clc
mov
mov
cmpsl
out
dec
ret
int3
int
push
xchg
mov
js
shlb
stc
loope
loope
test
push
rorb
aad
rep
cld
xlat
inc
jb
xor
stc
dec
aas
adc
cld
in
leave
sub
aaa
fwait
imul
ret
shrb
mov
jns
arpl
loopne
and
inc
dec
bound
inc
out
or
popf
aam
jo
jg
push
add
aaa
xchg
adc
popf
faddp
mov
inc
dec
dec
mov
cmc
pushl
arpl
fmuls
adc
lahf
dec
fnstenv
pop
inc
in
lret
push
mov
mov
arpl
sti
pop
mov
cmpsl
cmp
xchg
mov
sub
sub
daa
sbb
fidivrl
push
adc
xchg
jmp
lret
pop
pop
adc
out
lret
cli
in
scas
adc
xorl
and
xor
inc
pop
cwtl
cwtl
lahf
bound
adc
push
outsb
sbb
dec
lds
push
iret
and
arpl
dec
and
sbb
sub
jmp
xor
jp
cltd
fwait
outsl
ret
cmpsl
add
sbb
stos
sub
xchg
xchg
dec
jbe
jl
andb
xchg
dec
and
cmpsl
sbb
xchg
add
xchg
insl
push
xchg
cwtl
fs
cmp
mov
stos
pop
or
dec
cld
jle
mov
cmc
inc
push
mov
add
jge
insl
das
fnstenv
push
outsl
outsl
inc
cmc
mov
in
mov
aaa
mov
mov
stos
jno
sub
insb
adc
hlt
mov
push
or
sub
mov
ja
sar
mov
pop
pusha
sub
out
ss
xchg
xchg
sbb
imul
cmp
dec
push
je
int3
add
push
subb
int
xchg
mov
pop
hlt
mov
and
push
fwait
sbb
xchg
mov
lret
lock
and
lret
gs
pop
fistps
fstpl
icebp
cli
push
and
dec
repz
js
pop
mov
mov
sbb
stos
cmp
jnp
mov
sahf
dec
outsl
add
int3
push
cmp
out
movsl
mov
test
adc
adc
add
push
dec
mov
rclb
fdivs
outsb
ret
shl
sbb
sahf
repz
iret
xchg
sub
data16
sub
fcoms
std
cld
mov
lods
bound
or
sub
push
imul
sti
inc
les
pop
xor
sub
mov
push
ss
xchg
into
sti
and
add
jecxz
js
adc
mov
ds
sbb
xor
in
lock
xchg
and
push
pop
cli
sar
shrl
int
mov
xor
insb
int3
xor
pop
lcall
xor
mov
push
jmp
clc
cltd
push
addr16
cmpsl
fwait
dec
adcb
dec
adc
cmc
fdivrl
and
lret
add
cwtl
pushf
mov
stos
stos
adc
pop
dec
inc
testb
lret
lret
shll
push
insb
test
sbb
sub
loopne
xchg
iret
dec
dec
sti
aad
lret
in
es
push
pusha
pop
rol
pop
jbe
fs
imul
xchg
cwtl
mov
jae
pushf
dec
jl
fwait
push
mov
sbb
push
push
fmuls
sub
das
jnp
mov
push
or
xchg
scas
jge
inc
dec
pop
insb
inc
push
xorl
fcmovb
test
adcl
mov
and
and
loope
fwait
mov
negl
int3
or
andb
sub
push
leave
fnsave
xor
fucomip
push
aaa
ret
nop
jle
test
iret
xor
iret
or
and
test
cmp
pop
test
sub
inc
insb
cmp
enter
dec
roll
dec
repnz
pusha
mov
call
inc
push
ss
inc
jae
dec
data16
mov
mov
or
subb
shl
sub
add
ljmp
dec
mov
sbb
cmp
imull
adc
adcl
pop
mov
mov
pop
inc
testb
dec
inc
test
or
push
scas
stc
fmuls
inc
negl
cmp
aaa
aam
arpl
dec
inc
adc
dec
cld
dec
jmp
dec
push
aaa
add
cmp
dec
xchg
inc
minps
push
mov
inc
mov
out
mov
clc
pop
arpl
jecxz
enter
jl
push
in
pop
mov
enter
mov
xor
mov
outsl
inc
dec
cld
dec
lahf
fiadds
cli
loopne
loop
mov
inc
push
push
rolb
xor
or
add
movsl
outsb
sub
dec
push
hlt
into
in
cmp
push
cmpsl
dec
inc
sub
inc
sub
push
add
popf
push
mov
pop
mov
push
testl
xchg
inc
movntq
mov
fcomi
shlb
cmp
mul
adc
iret
cmp
fcomps
js
ja
fistps
cmpb
dec
shr
inc
insl
xchg
mov
adc
insl
cltd
add
lret
push
nop
clc
pop
mov
insb
js
cld
insb
es
mov
insb
adc
outsl
sahf
xchg
sub
daa
aas
inc
inc
pop
clc
mov
loopne
bound
orb
out
mov
mov
cmp
add
jae
add
inc
cmp
xchg
push
test
lea
xchg
cmovo
dec
cmp
mov
arpl
negb
pop
xchg
cmp
and
cmp
inc
sub
aad
pop
bound
call
daa
ret
add
fcoml
add
inc
or
push
pop
movsb
jecxz
push
stos
popf
or
jecxz
xchg
jl
fwait
mov
emms
shll
or
cmc
dec
and
jle
pop
jg
sbb
and
arpl
cs
jge
daa
mov
cmc
jmp
xor
jmp
fwait
adc
xchg
scas
aaa
cmp
jecxz
pop
adc
add
sub
push
push
push
out
mov
inc
dec
test
sar
ja
xlat
mov
mov
test
adc
mov
inc
lods
pop
ror
out
rol
pop
mov
sbb
add
jno
pushf
sbb
jg
out
sub
lcall
sbb
shr
xor
sub
shll
or
dec
ret
rcl
jcxz
cld
mov
cmp
cmc
xor
or
fcmove
daa
cld
pop
and
bound
sbb
mov
cmp
cld
loope
ret
mov
pop
mov
jmp
xor
or
cvtps2pd
scas
scas
scas
aas
sbb
int3
jnp
cmp
jecxz
stc
xchg
push
add
jle
mov
push
aam
mov
mov
test
decb
lret
addl
cmp
ss
int3
cmp
out
mov
insb
xchg
fistps
fstl
clc
sub
popa
lds
pop
sub
seta
ja
fdivl
inc
fs
inc
pop
lret
addr16
add
jae
xor
mov
dec
xchg
cmp
mov
adc
xchg
pop
pop
imul
fwait
mov
jmp
inc
adc
adc
and
xchg
es
or
jae
sub
xchg
shrl
test
sub
imul
cltd
je
dec
mov
bound
push
ljmp
xor
sbbb
or
xor
fsubrs
paddw
inc
rcll
loopne
or
das
into
dec
push
clc
xchg
or
dec
xor
mov
jb
clc
mov
dec
push
cli
sbb
cmc
in
jl
std
pushf
les
aam
adc
movsl
xchg
das
mov
fildl
sub
mov
mov
sbb
push
lret
pop
sti
inc
subb
jg
lcall
push
popa
popa
mov
xchg
cltd
mov
iret
enter
xor
pop
sub
imul
sarl
xor
hlt
js
test
inc
cli
loopne
xorl
mov
sub
jne
addr16
mov
pop
imul
add
loope
inc
mov
xor
test
lcall
aas
popa
xlat
sbb
and
cmp
ja
inc
stos
aaa
cmc
scas
cmp
negb
lock
inc
sbb
jl
dec
or
mov
lahf
or
sub
pop
shll
mov
sub
and
cmc
ja
aam
ss
testb
sub
clc
sub
push
ss
das
push
pop
push
xchg
mul
fisubs
mov
sti
mov
ficoms
jbe
push
jge
out
insl
data16
xchg
outsb
aas
aas
movsl
addr16
testl
push
xor
outsb
and
orl
cmp
insb
psubq
pop
push
sahf
je
jbe
mov
dec
pop
jnp
sbb
lds
hlt
push
add
pop
xchg
faddl
inc
cld
cmp
sbbl
rdpmc
inc
insb
fs
btr
cmpsl
stos
adc
adc
adc
ret
jmp
mov
xchg
jmp
dec
jne
cmp
push
adc
mov
cmp
and
call
sub
test
lds
add
push
into
fbstp
mov
mov
lea
fistl
cmp
sbb
and
push
loope
fs
jmp
out
pop
adc
add
repnz
test
imul
and
cltd
sbb
cmpsl
or
mov
dec
loopne
ja
inc
xorl
mov
psubw
insb
subl
movsb
inc
movsw
add
jbe
bound
fildll
insl
push
je
cmp
subl
push
js
pop
inc
add
faddl
pop
push
fistl
adcb
fisttpl
fists
rorl
in
lock
lahf
test
mov
pushf
js
and
sahf
xchg
int3
push
jmp
lret
mov
sub
xchg
fcmovnu
sub
jnp
ret
jb
mov
mov
cld
notb
int
jno
mov
sub
iret
lock
and
lods
mov
fists
fidivrs
push
push
jno
jo
xchg
outsl
push
lea
fildll
add
daa
push
sti
shlb
lock
test
and
and
adc
shrl
stos
repnz
imul
mov
jb
aaa
ret
xchg
or
std
add
and
lret
ret
xchg
adc
or
or
xor
mov
mov
fistpll
mov
or
push
jb
inc
jg
popa
or
ret
push
stos
stos
stos
sbbl
pop
and
xchg
popa
adcl
inc
dec
outsl
jle
jge
arpl
adc
stos
pop
and
push
pusha
stos
mov
loope
dec
fbld
and
stos
insl
or
push
cmc
mov
in
int
cmp
sbb
loope
push
mov
jne
iret
mov
fistpll
in
pop
imul
push
pop
cmp
pop
ror
sbb
pusha
pop
popa
jb
pop
mov
es
call
mov
cltd
xchg
test
movsl
jmp
push
pop
jno
sub
test
lret
pop
push
pop
mov
aas
ja
aas
xchg
push
ficomps
das
repz
cld
ja
pop
sti
std
xchg
dec
ficoms
add
add
xchg
pop
call
and
or
jo
dec
ds
pop
lahf
mov
dec
cld
adc
jp
xor
fwait
lahf
pop
or
push
inc
fs
js
lds
or
jns
rorl
and
add
pusha
mov
jl
ret
pop
adcb
and
adc
jb
add
clc
bound
cmp
iret
negl
stc
push
xchg
cwtl
fcmovnbe
and
leave
lret
and
ret
add
cmp
or
add
rcl
xchg
mov
pop
inc
mov
dec
inc
mov
xor
imul
test
adc
das
dec
stc
inc
pop
mov
fwait
jae
or
pusha
mov
in
or
mov
sub
movsb
loope
clc
imul
enter
sahf
jmp
jp
ljmp
outsl
or
pop
adc
sub
and
push
mov
imul
pop
or
xor
cmp
mov
pop
in
test
mov
cmp
dec
or
jp
mull
push
les
pop
jb
test
repnz
push
insb
sbb
lods
jne
sub
cmp
shlb
call
jae
lds
add
int
mov
sahf
mov
je
mulb
ljmp
pop
dec
daa
in
jo
inc
in
xchg
fdivrl
addr16
scas
dec
sbb
fs
mov
mov
pop
adc
xchg
das
dec
aam
into
mov
stos
mov
inc
or
xor
jno
fbld
inc
andl
mov
daa
push
xchg
cli
inc
jmp
pop
negb
push
ficompl
push
pop
in
jle
inc
fidivs
pop
lret
mov
fld
add
movsb
inc
mov
jp
pop
jmp
dec
std
imul
rcrb
xchg
add
insb
cmpb
push
mov
das
mov
mov
insb
and
push
mov
or
jae
cmpl
mov
out
adc
scas
inc
xchg
fnstsw
cmp
cmpsb
sbb
xchg
jae
dec
hlt
pop
cld
daa
lock
sbb
add
mov
pop
out
into
adc
dec
and
lahf
jl
push
and
rcrl
xor
mov
dec
les
lds
mov
fwait
jl
lahf
sub
jne
sbb
jecxz
and
cld
adc
inc
fiaddl
pop
addr16
dec
out
pop
or
xchg
subl
incl
add
push
pop
adcb
push
and
jae
aas
daa
nop
pop
pop
test
cmp
jl
bound
pop
pop
add
orb
jb
xchg
pop
ret
adc
lds
xchg
stos
pop
pop
jo
push
mov
add
mov
xor
mov
pop
leave
pop
pop
sub
loop
sbb
xlat
jne
cli
pop
jle
fdivs
loopne
jg
stos
xchg
push
filds
arpl
adc
lcall
outsl
xchg
stos
xlat
sub
dec
or
inc
mov
jb
mov
imul
adc
fildll
dec
add
sbb
inc
ror
pop
pusha
push
xlat
out
ljmp
and
inc
fisttpl
mov
push
bt
shll
arpl
sbb
ss
call
jp
ret
or
repz
pop
nop
sbb
pushf
dec
mov
dec
call
ljmp
daa
add
and
iret
addr16
ficoms
or
clc
aas
add
imul
adc
push
shlb
dec
dec
pop
push
pop
fistl
pop
orl
fidivs
adc
dec
jo
outsl
cwtl
jg
sbb
ljmp
outsl
or
mov
int3
cmc
aaa
xchg
lcall
mov
pop
je
mov
sbb
in
mov
sbb
mov
das
test
fstpt
mov
pop
inc
inc
inc
in
hlt
ret
sub
mov
sbb
addr16
aas
push
pop
jl
sub
sarb
push
push
into
les
jnp
cmp
scas
test
adc
sbb
getsec
mov
stos
dec
outsb
add
pop
xlat
mov
dec
les
xor
mov
fdivrs
cs
je
mov
scas
xor
jmp
jnp
mov
rep
lds
mov
sbb
adc
idiv
sbb
adc
icebp
adc
stos
filds
imul
pop
testl
mov
flds
pop
idivl
in
pop
ljmp
loop
mov
rorb
lret
mov
xor
pop
je
aaa
push
xchg
sub
push
lret
shlb
and
sbb
inc
lahf
outsl
stos
cmp
dec
fs
cltd
mov
aam
aam
push
dec
pop
pop
mov
cmpsl
cli
xchg
mov
jl
push
pop
mov
dec
ljmp
dec
outsl
mov
mov
fs
and
dec
dec
inc
push
daa
call
cwtl
arpl
adc
jnp
or
xorl
mov
mov
pop
jnp
mov
pop
mov
enter
pop
fnstenv
testb
and
and
adc
ljmp
test
pop
inc
mov
iret
xor
shll
inc
cmc
fimull
mov
test
sti
mov
cmp
stos
push
inc
sahf
daa
arpl
xchg
mov
popl
mov
divl
fisubs
mov
push
jg
add
mov
mov
rorl
int
xchg
xchg
mov
ljmp
loopne
imul
mov
fisttps
pop
dec
push
scas
mov
jmp
repz
push
and
cmp
das
dec
repnz
je
nop
repz
sahf
lock
xlat
inc
ja
pop
in
mov
neg
fildll
popa
jo
fildll
jnp
nop
ret
pop
mov
adc
mov
jl
add
push
inc
xor
int3
push
daa
mov
data16
sub
push
mov
push
repz
xchg
je
inc
dec
out
sbb
xor
xor
push
outsl
scas
inc
push
sbb
rcr
push
push
xor
sub
movb
xchg
imul
or
sub
mov
filds
mov
xchg
pop
aaa
and
jecxz
loope
and
cmpsl
shlb
sarl
jmp
push
jg
sbb
push
pop
inc
inc
je
arpl
mov
enter
xor
cmc
and
cmp
mov
ja
pop
push
fwait
shlb
cmp
pop
fwait
mov
jl
push
addr16
and
adc
out
fbld
jne
repnz
push
shlb
add
xchg
addr16
push
hlt
pop
notl
push
xor
outsl
js
push
dec
jno
subl
mulb
push
mov
sbb
loope
testb
arpl
jmp
push
cli
push
sub
mov
leave
stos
movsl
out
mov
sbb
loop
scas
inc
sbb
popf
dec
fmulp
add
mov
fistps
sub
stos
add
mov
mov
adc
xchg
cmpsb
fcoms
xchg
popa
cmp
dec
cwtl
mov
das
pop
inc
adc
sarl
ljmp
fistpl
mov
ljmp
stos
sbbb
mov
pop
adc
or
mov
add
movsb
sub
push
test
pop
inc
and
lock
push
xchg
rcll
dec
lods
gs
inc
and
cmp
push
mov
int3
pusha
jge
inc
sbb
mov
cld
cmc
sti
push
or
mov
pop
repz
shl
adc
push
out
push
or
fisttps
cmp
and
out
xor
shrl
cmpsl
mov
mov
or
cmpsl
push
pop
out
arpl
jmp
cmp
sti
xchg
pop
stos
push
add
push
std
pop
aaa
sbb
cmp
mov
imul
jmp
xchg
mov
mov
imul
fmulp
mov
std
push
inc
pand
out
cmpsl
in
push
div
scas
sbb
and
mov
sbb
popf
insb
xorb
adc
mov
fwait
dec
pop
insb
jmp
jmp
sbb
sub
mov
mov
popa
dec
lods
mov
popf
cli
push
jbe
adc
pop
push
jb
in
ja
iret
xchg
fists
xchg
inc
inc
xchg
and
jnp
punpckldq
jg
cmp
push
pusha
hlt
mov
adc
mov
fstl
cmp
ja
mov
cmpsl
leave
jle
xchg
xlat
jne
push
and
pop
scas
inc
jns
xor
in
cmpsl
mov
push
push
aaa
outsl
inc
push
sti
push
into
ljmp
pop
ljmp
in
and
push
cmp
mov
push
ret
jle
add
das
sub
xchg
mov
dec
push
mov
scas
pop
xor
leave
mov
icebp
shlb
adc
xor
ret
pop
push
xor
test
fwait
aas
pop
out
and
pop
push
xor
add
mov
clc
adc
sub
out
inc
jnp
xchg
jp
fisttpl
xchg
adc
push
roll
rclb
repnz
or
sbb
lret
xchg
mov
ljmp
stos
or
xchg
ret
add
sbb
rorb
fsts
dec
xorl
or
jae
iret
call
mov
loopne
jecxz
iret
fcomip
repnz
imul
loopne
lods
cmp
and
xor
mov
xor
push
mov
lret
lahf
call
sahf
pop
jbe
adcl
mov
adc
sti
int3
xor
fldt
sbb
mov
mov
jg
negl
mov
pop
mov
pop
add
pop
add
hlt
xor
aam
fsubrp
sahf
pop
jbe
pop
out
in
pop
out
aad
xor
fsubrl
sbb
addb
xchg
xchg
ffreep
xchg
out
push
sub
mov
pop
call
pop
fdivrl
ds
cmp
out
test
cmpsl
add
push
jnp
mov
sahf
outsb
sbb
lods
or
rcrb
cmp
loopne
scas
pop
mov
out
or
cmp
mov
push
out
outsb
or
mov
insl
es
in
mov
pop
aas
mov
mov
mov
lret
mov
jle
adc
out
mov
fnstenv
ja
pop
scas
insl
push
call
pop
sub
neg
pop
push
mov
jg
mov
jo
popa
push
in
pop
inc
out
cmp
aaa
and
daa
js
jle
repnz
outsl
jmp
dec
into
jmp
adc
adc
cmc
clc
dec
mov
loopne
sub
sub
ret
es
stos
hlt
pop
push
dec
andb
out
dec
in
ds
push
packsswb
shrl
inc
gs
mov
mov
out
andl
xor
cmpsl
popf
jb
call
test
rcll
push
jns
cmp
les
jae
mov
mov
adc
jecxz
movsl
xor
cmpsl
cmp
and
nop
divb
insl
enter
cmp
in
aam
mov
inc
mov
shr
pop
aas
or
repz
ret
xchg
xchg
js
pop
ja
loopne
mov
aam
pop
and
inc
data16
xchg
sub
daa
loopne
jmp
das
in
imul
jecxz
sub
popa
inc
outsb
adc
pop
insb
leave
mov
mov
ja
int
push
loopne
cs
cmc
sahf
mov
mov
scas
inc
sbb
add
clc
fwait
push
or
mov
repz
in
push
in
mov
mov
scas
les
imul
inc
mov
das
inc
push
pop
mov
icebp
rorl
push
dec
push
fisubs
roll
iret
mov
pop
mov
stos
dec
dec
fwait
inc
ret
dec
jl
mov
or
jno
adc
loope
fwait
dec
xor
add
xchg
dec
ret
pop
jp
pop
hlt
fs
pop
add
dec
call
outsl
faddp
adc
enter
pop
pop
xchg
clc
dec
cmpsb
ret
pop
out
xor
ret
and
js
adc
mov
sub
dec
fsubs
out
int
andb
inc
mov
xor
lret
cld
xorb
dec
out
jae
pop
ficomps
mov
into
cmp
mov
lds
and
cli
dec
dec
stos
je
mov
inc
xchg
test
nop
jmp
jo
jp
decb
mov
pop
xchg
shll
push
ljmp
fstpt
rcrb
cmp
xchg
out
rclb
push
data16
pushf
xchg
mov
data16
xchg
stos
mov
sub
movsl
jae
jmp
call
lret
jmp
or
mov
push
cmpsl
sub
movntps
cmp
inc
push
jmp
add
pop
cli
loope
aad
outsl
imul
inc
std
outsb
lods
pop
sbb
stos
into
push
or
push
cmp
fidivrl
repnz
dec
push
cmpsl
mov
imul
and
in
divb
dec
rcl
push
rcll
out
clc
out
add
repnz
or
and
inc
lods
pop
dec
aas
daa
adc
xor
mov
repz
lahf
fwait
pop
xchg
iret
incb
pop
sbb
sub
mov
mov
mull
cmp
adc
test
mov
and
xor
clc
arpl
mov
push
rorb
mov
add
xor
inc
imul
and
jle
lock
pop
aam
sbb
add
sbb
adc
lcall
jns
push
cmp
mov
sbb
pop
iret
mov
inc
mov
xchg
or
add
pop
push
data16
xor
insl
and
stos
imul
push
xchg
fcomi
fwait
sub
pop
sbb
jnp
xchg
jns
xchg
data16
out
pop
loopne
pusha
pop
std
sbb
leave
pop
out
and
fwait
mov
pop
jmp
fnstsw
mov
pop
jns
push
mov
fisubrl
out
pop
repz
or
mov
nop
pusha
daa
sub
in
xor
fucomi
pop
xor
adc
pop
cmp
jns
outsl
xchg
sub
mov
jecxz
pop
cmpsl
fcomps
lea
dec
dec
or
insb
mov
not
add
loopnew
int
jo
fsubrp
pop
jno
mov
pop
cmpsl
or
push
xlat
xchg
addr16
idivb
scas
pop
adc
dec
call
xor
je
pusha
jecxz
dec
aas
mov
jg
push
push
jb
mov
xchg
lea
push
mov
xor
sbb
leave
mov
cmp
adc
stos
fidivl
ja
mov
lock
and
xor
mov
mov
or
xchg
cmp
dec
leave
dec
mov
and
das
xlat
jo
test
xchg
mov
int3
push
cmpsl
jae
jmp
inc
sti
sbb
xlat
dec
outsl
add
in
or
push
popa
xor
sti
push
inc
fisubl
rolb
scas
rcll
push
cli
sbb
sbb
push
rorl
dec
xor
mov
push
jo
mov
push
lret
bound
push
mov
shl
sbb
stos
repz
sub
mov
aam
iret
das
xor
icebp
dec
adcb
add
punpckldq
dec
rolb
lds
and
xchg
xchg
out
movsl
dec
fiaddl
push
icebp
sbb
mov
dec
xor
es
add
add
pop
movsl
mov
loopne
lahf
inc
repz
mov
add
mov
sub
inc
movb
out
jae
mov
movq
add
je
push
xor
sub
ret
xchg
pusha
pop
jnp
mov
pop
sbb
int3
add
xor
arpl
rol
int
pop
sbb
fs
mov
sbb
insb
jecxz
or
imul
xchg
outsb
test
inc
mov
call
or
add
cltd
mov
push
mov
out
and
pop
push
jl
and
adc
inc
das
stc
cs
cmp
mov
jg
jo
inc
inc
js
lahf
loope
pop
aas
xchg
dec
hlt
stc
lret
popa
push
stos
cmc
add
enter
jb
std
sbb
daa
adc
jnp
pushf
cwtl
sbb
popa
add
out
iret
add
out
push
sub
ljmp
idiv
adc
icebp
fcom
daa
je
jle
add
jo
push
push
jb
cmpb
dec
movsl
jl
lea
pop
sub
test
popf
or
xor
aaa
pop
outsb
pop
push
dec
inc
arpl
in
leave
dec
push
out
jnp
aaa
or
std
pushf
mov
fstpt
adc
popa
push
dec
test
pop
sahf
adc
les
sarl
mov
test
leave
call
loop
cmpsl
adc
loop
pop
xchg
jmp
fidivrs
loopne
or
adc
jo
inc
lret
sub
jmp
add
push
outsb
fdiv
inc
mov
mov
xchg
jnp
mov
ljmp
jns
int
fistpl
push
cwtl
jmp
mov
daa
add
xor
pop
fbld
adcb
sub
push
jecxz
dec
out
repz
mov
pop
aas
mov
dec
fiadds
jg
jmp
sbb
add
mov
inc
sub
call
or
repnz
pop
fwait
cmpsl
arpl
mov
mov
les
jne
enter
ljmp
ja
daa
push
lock
xchg
push
push
leave
repnz
je
pop
cld
xchg
adc
jo
inc
fwait
adc
inc
inc
into
movsb
dec
aaa
ficompl
mov
mov
adc
call
test
pop
fdivrl
imul
and
std
mov
mov
xor
push
dec
or
mov
mov
mov
mov
lcall
and
push
mov
jmp
fistps
lret
pop
sti
into
aaa
add
test
add
inc
fists
mov
fildl
shrb
push
mov
mov
cmp
inc
mov
cwtl
int
cmp
mov
mov
ret
sub
pop
mov
into
or
repz
inc
cmpsb
repz
inc
mov
dec
mull
stc
or
push
mov
mov
xchg
jle
dec
fsubrs
dec
lret
test
mov
xor
jnp
dec
arpl
repnz
push
and
ljmp
in
jmp
pop
jmp
cmp
gs
add
pop
mov
jne
xchg
pop
stos
ja
jp
xchg
pop
aaa
mov
outsl
in
inc
jmp
mov
mov
neg
shll
addr16
das
jmp
xchg
lret
imul
mov
test
and
hlt
xchg
push
jnp
out
pop
cmpsl
addr16
lret
push
aam
sub
mov
popf
dec
cmp
ret
pop
imul
test
mov
shll
push
add
cmp
xorb
test
and
lahf
nop
hlt
cmp
push
mov
sub
pop
aaa
imul
jnp
dec
outsb
pop
push
test
stos
cmp
not
add
xor
cltd
nop
xchg
xlat
pop
jecxz
repz
mov
out
sbb
out
push
dec
push
daa
jmp
fmull
xchg
xchg
stos
pop
adc
shlb
scas
lcall
in
ss
xchg
mov
setbe
inc
lcall
test
loop
cld
xchg
or
add
mov
test
test
and
mov
and
fwait
stc
pop
ds
fisttpll
aaa
out
fs
xchg
and
dec
loope
inc
jb
and
xor
arpl
jle
jnp
ficoms
roll
aas
out
mov
mov
pop
js
arpl
mov
xor
stos
xchg
lods
xor
insb
fdivrs
pop
add
shl
stos
mov
push
jp
test
sbb
mov
insl
push
and
xor
in
lret
xchg
ret
fs
push
push
adc
movsb
cli
mov
andl
xor
jbe
cwtl
push
add
jg
jp
cmp
mov
jne
xchg
ja
pop
add
ret
cmp
ljmp
insl
jmp
sub
inc
add
pop
dec
mov
mov
push
mov
mov
frstor
popl
mov
inc
sbbb
mov
lret
mov
dec
push
insb
mov
shrl
push
incl
daa
sub
dec
call
jecxz
cltd
outsb
fsubr
and
test
inc
or
insl
or
imul
or
inc
xor
xchg
pop
jp
cld
or
fisttps
arpl
jno
aam
mov
out
loop
lock
fists
leave
mov
xor
pop
push
hlt
add
insl
cmp
xor
clc
cs
ja
bound
roll
adc
pop
push
jb
xchg
add
inc
shl
xchg
pop
fcompl
ficoms
sbb
or
lcall
imul
or
retw
and
lahf
add
pop
mov
repz
es
insb
sub
stos
addr16
mov
mov
cs
or
or
cmp
mov
jb
sub
sub
shl
cmpsl
xchg
fwait
cmp
push
dec
ds
cmp
add
ret
inc
addr16
test
or
loopne
iret
xlat
test
mov
test
clc
imul
sub
and
jmp
ss
int
fs
ja
sti
pop
icebp
push
out
mov
lods
imul
int3
lret
pop
mov
test
xchg
and
inc
pusha
in
mov
dec
mov
je
pusha
or
or
nop
lock
lea
dec
ss
test
mov
jle
push
fsubrl
daa
in
xchg
adc
or
in
xor
sarl
lock
jne
jb
ljmp
adc
cmc
push
lods
xor
sbb
repnz
clc
jecxz
jecxz
sub
adc
mov
stos
sub
push
inc
jg
push
ja
bound
sbb
std
xchg
fildl
jo
adc
hlt
lock
cmpsb
push
sub
int3
pop
roll
scas
jecxz
jns
adc
xchg
mov
iret
sub
xchg
pop
fcmovnu
jo
sahf
jl
cltd
out
cmp
jecxz
pop
movsb
into
jg
inc
and
outsb
jp
call
mov
aas
xor
and
mov
les
adc
test
movsl
ja
decb
mov
enter
mov
fisubl
adc
mov
xor
loope
imul
add
iret
movsl
out
cvttps2pi
aas
pop
inc
gs
aam
stos
push
pop
mov
cmpsl
mov
push
outsb
mov
or
imul
jbe
xlat
stos
add
lds
aaa
mov
dec
icebp
cmpl
adc
lcall
jmp
in
pop
rorb
pop
ror
aam
push
mov
mov
in
dec
and
test
in
int
fildll
std
jge
imul
std
mov
and
inc
out
fildl
shlb
in
pusha
cmp
in
mov
pop
hlt
outsl
shr
xchg
repz
cmp
movsb
aas
push
push
add
outsb
fwait
aaa
mov
aas
inc
and
xor
mov
cmp
call
lret
inc
add
cmp
fisubrs
stos
and
mov
inc
sahf
cmp
out
add
jne
pop
xor
xchg
pop
subl
xchg
jecxz
fsubl
cmpsl
push
lcall
jl
scas
jns
cmp
rcl
inc
sahf
xchg
popa
out
sarb
cmp
jne
mov
mov
mov
movsl
adc
imul
adc
mov
mov
cmpsb
filds
xor
aaa
repnz
nop
cli
pop
cltd
into
aad
idivb
sbb
add
aaa
pop
xchg
shlb
push
inc
pop
aaa
dec
mov
mov
ljmp
movaps
out
in
stc
lea
pop
cmpb
jb
xor
jp
sub
test
push
out
dec
mov
mov
pop
inc
outsl
inc
imul
fdiv
sub
push
lret
test
xchg
ret
call
cmpsl
push
call
push
lods
or
int3
int
push
dec
loopne
push
cltd
jne,pn
test
mov
inc
repz
into
daa
mov
ror
mov
lods
push
or
rcrb
call
mov
sbb
mov
pop
xor
push
mov
or
packuswb
lds
addr16
idiv
adc
jnp
lret
pushl
aad
ja
xchg
dec
sarb
fwait
inc
das
movsl
test
xchg
push
fst
push
add
jecxz
insl
inc
dec
push
xchg
dec
notl
pushf
insb
leave
push
stos
cmp
fisttpll
jl
inc
inc
add
add
fstpl
push
jo
push
fistl
lea
iret
call
dec
or
mov
jmp
push
sub
mov
pop
mov
iret
cmp
mov
sub
in
pop
filds
lods
push
popa
addr16
sbb
scas
data16
outsb
cmp
fs
imul
lods
aas
out
addl
push
fsubrs
gs
clc
mov
mov
sahf
popa
pusha
xlat
fdivrs
push
pusha
jns
leave
aad
aas
add
das
das
loope
icebp
pop
cmp
add
push
push
addb
movsb
or
inc
sub
out
stc
push
pop
testb
inc
jmp
cmp
imul
leave
out
insl
cmpsb
pusha
pop
dec
int3
pop
test
jmp
add
mov
ss
dec
jb
mov
in
pusha
filds
movsl
scas
inc
sbb
pop
scas
xchg
stos
lock
mov
sbb
sbb
pusha
movb
mov
add
adc
and
iret
mov
mov
aaa
repz
dec
dec
hlt
push
stos
into
mov
incl
xchg
and
mov
je
jmp
aas
and
incl
hlt
hlt
outsl
repnz
fadd
out
xlat
inc
nop
mov
out
orl
pop
out
loopne
pop
pusha
dec
push
cmpsb
and
enter
aam
push
test
push
out
ja
dec
pushf
in
bound
ljmp
mov
cmp
mov
pop
pop
mov
adc
or
dec
gs
pop
ljmp
shrl
add
daa
in
pop
or
das
cmp
movsl
and
cmc
xchg
xchg
push
rclb
jbe
repnz
les
jno
lea
push
mul
pop
fs
inc
jmp
push
or
jne
cmpsl
pop
xchg
pop
add
mov
cmp
ret
aad
dec
or
in
sarb
test
jmp
cmp
mov
add
xchg
mov
mov
mov
lret
rol
mov
mull
inc
pop
and
pop
dec
push
inc
test
adc
je
in
mov
inc
inc
mov
ficompl
ds
fwait
rcrb
cltd
inc
test
and
pop
stos
xor
jl
cmpsl
je
mov
mov
pop
call
aam
push
pop
push
jl
fs
cltd
lock
js
sahf
xor
push
int3
ljmp
inc
icebp
add
ja
jmp
jg
push
imull
imul
mov
jb
int
add
dec
sub
in
scas
push
xchg
fwait
mov
cmp
cmc
divl
push
mov
lret
push
xor
ljmp
jecxz
test
movsl
push
pop
sbb
xchg
push
cmp
jecxz
mov
cli
arpl
dec
dec
bnd
mov
mov
cmp
cmp
mov
mov
or
addb
std
imul
int3
push
sub
add
clc
jge
sbb
add
imul
push
les
pop
popf
lea
jo
sub
mul
cmp
sub
and
js
insb
addr16
shll
lret
and
dec
lock
aaa
pop
pusha
dec
mov
aas
nop
mov
adc
and
scas
or
out
movsb
aas
cs
push
popa
frstor
push
fsubrl
xchg
adc
adc
neg
add
or
insb
mov
inc
add
dec
mov
pop
dec
sub
lods
scas
pop
mov
clc
adc
pop
stos
sbb
das
into
ss
cmp
push
scas
shlb
inc
push
sbb
dec
dec
jmp
hlt
sbb
aad
sahf
cmp
pushf
adc
jle
jae
inc
imul
and
jmp
dec
scas
push
xor
stos
out
divl
pop
js
aas
pusha
xor
pop
and
outsb
cld
movsbl
out
cmpb
xchg
xlat
fistpll
sbb
hlt
pop
xor
pop
sub
fcmove
xor
dec
and
or
sti
pop
inc
fdivrl
lret
rorl
pop
pop
push
out
or
loopne
or
ret
scas
icebp
fcom
jo
aaa
dec
inc
fnstcw
test
cmp
aad
das
cltd
adc
xor
sahf
fstl
sbb
call
cmp
push
mov
rcrl
xorl
cmp
jecxz
cmp
sar
es
jle
xorb
out
jbe
jb
mov
imul
lods
and
ja
push
test
push
pop
movsb
cmpsl
aad
adc
divb
mov
decl
xchg
dec
and
or
lahf
test
insb
sub
in
jg
sub
push
mov
pop
fwait
in
jae
jo
mov
js
hlt
inc
sbb
pop
pushf
mov
scas
enter
mov
cmp
test
sbb
adc
insl
lods
dec
and
lods
mov
mov
cmovb
jo
cmpsb
shll
xor
mov
pop
int3
aas
sbb
enter
bound
inc
fstpt
or
daa
dec
jae
mov
rcll
testb
pop
jge
pop
cs
mov
lahf
jno
mov
adcl
and
adc
loopne
lds
arpl
mov
push
dec
fildll
dec
dec
iret
adc
scas
sub
jecxz
cli
push
nop
mov
faddl
int3
sbb
addr16
lods
adc
jp
test
roll
mov
aas
mov
sub
pop
pop
arpl
or
sub
faddl
adc
testb
and
stos
jp
scas
adc
pop
mov
jno
or
idiv
xchg
mov
inc
mov
mov
aaa
rorb
or
test
negl
xchg
dec
sbb
pop
shl
fwait
hlt
push
lgdtl
pop
fistpll
adc
fistpll
adc
push
out
mov
dec
add
clc
hlt
cmc
and
fadd
ss
out
pop
movl
out
jp
jbe
xor
psubd
jg
movsb
push
loopne
stc
xchg
dec
mov
push
cmp
mov
andb
jp
leave
mov
out
clc
cmc
sub
in
fisttpl
mov
adc
xor
push
or
subl
enter
lea
mov
mov
sbb
rol
sbb
xchg
jg
ret
adc
xchg
sbb
xlat
dec
imul
cld
xchg
loop
add
jp
enter
sar
xchg
cld
rorb
jl
test
xor
cld
jb
pop
adc
fildll
inc
stos
outsl
sbb
push
rorb
cmpsl
and
xor
jmp
mov
inc
pop
xchg
ds
mov
aad
or
adc
adc
sub
popf
stc
mov
lcall
cmpsl
add
mov
jl
aaa
stos
imul
loop
xchg
ret
lret
cmp
push
in
sbb
mov
jae
dec
cmc
mov
cs
push
icebp
cmp
mov
and
enter
dec
inc
cmp
xchg
int
and
sub
cli
in
shll
mov
jne
adc
mov
xchg
and
add
loopne
js
addr16
mov
out
or
sbb
mov
icebp
pop
sbb
cmc
fcom
xchg
xlat
lcall
fsubl
outsb
or
sub
scas
pop
xor
xor
sti
dec
sar
js
pop
in
sbb
fadds
mov
sarl
mov
mov
mov
mov
fwait
xchg
xchg
and
clc
sub
and
push
dec
sarl
cld
or
add
sbb
pushf
mov
out
stc
xchg
mov
xchg
ss
fildll
je
je
xor
ja
insb
pop
pop
sub
pop
or
imul
in
add
repz
cmp
aad
cmc
lods
das
rcll
push
inc
xchg
jp
iret
aaa
cwtl
pop
sbb
xchg
pop
push
out
push
fsubrl
mov
or
sbb
popl
inc
lods
pop
mov
flds
jle
pop
mov
jae
cmp
jmp
addr16
fmuls
dec
cmpl
mov
out
adc
sbb
mov
incl
jae
mov
push
xchg
dec
jle
add
inc
shrb
jmp
lahf
pop
call
jp
jmp
jns
test
rcll
pop
mov
test
push
sbb
jle
ret
arpl
rcll
xchg
imul
inc
mov
jg
mov
jb
pop
mov
lea
call
xchg
jns
out
arpl
rcr
aaa
push
xchg
or
xchg
xchg
call
lret
adc
xchg
aad
loopne
adc
das
pop
fistps
lret
int
mov
inc
pop
mov
orb
mov
xchg
push
pop
or
dec
mov
aaa
out
sub
sarl
mov
fmuls
bound
out
mov
add
pop
dec
jle
mov
fsubrs
push
and
xchg
adc
and
sub
xchg
cmp
and
dec
jmp
fs
loopne
push
dec
ja
inc
repz
dec
cli
sti
push
mov
xlat
addr16
inc
pop
fists
loopne
jp
testb
inc
bound
cmp
xchg
fistl
nop
sbb
xchg
pop
sub
mov
jecxz
mov
push
mov
jg
imul
inc
push
cwtl
push
add
cmpl
popf
data16
lods
sbb
lock
cwtl
and
cmp
pop
mov
test
xor
dec
stc
cmp
pop
or
mov
sub
in
dec
jo
mov
je
mov
out
outsb
lea
mov
xlat
mov
and
outsb
jg
sub
out
jns
sbb
push
je
aad
xchg
xor
and
andb
xchg
xchg
push
jns
fs
adc
sbb
scas
mov
jecxz
shlb
iret
mov
mov
mov
not
mov
mov
aaa
pushf
cmpsl
pop
insb
cmp
mov
insl
mov
push
into
jno
cmc
lods
jns
or
xor
sahf
outsl
divb
adc
mov
lahf
jae
lcall
xlat
inc
add
sub
fwait
cmp
jp
js
pop
andb
pop
cmp
bound
dec
sbb
in
xor
movnti
push
call
xchg
jae
stos
xchg
push
cwtl
inc
aas
lock
push
loope
cs
mov
ss
lret
sbb
mov
push
call
sbb
inc
fnstcw
into
in
xchg
daa
dec
cmp
and
push
pushf
xchg
in
xchg
sti
xchg
sub
out
push
into
jmp
incl
mov
imul
push
xchg
lods
push
xor
stos
pusha
stos
insl
imul
and
xor
inc
add
pop
roll
mov
mov
jne
push
repz
imul
sbb
mulb
and
inc
mov
pop
cli
add
jne
in
ljmp
lds
jg
loop
adc
mov
mov
jmp
aad
scas
scas
lods
data16
lds
xor
mov
cwtl
daa
add
lret
outsb
dec
cwtl
das
xchg
mov
cmpsb
imul
xchg
jecxz
arpl
dec
adc
mov
loop
xchg
xchg
adc
sub
ljmp
movsb
xchg
and
cmp
pop
rorb
or
xor
stos
ds
xor
int3
pop
lcall
inc
mov
sbb
ja
dec
add
jae
or
inc
mov
jnp
jecxz
mov
dec
xchg
mov
mov
popa
adcb
xor
push
ljmp
fmuls
sub
or
popl
shll
dec
and
push
and
into
push
lock
sbb
push
ljmp
jb
lahf
xchg
mov
mov
or
add
inc
xchg
jo
push
stc
sub
aam
in
jnp
test
mov
sbb
or
fwait
pop
adcb
sub
pop
and
or
pop
sub
cmp
mov
sarb
cli
dec
aaa
ds
imul
into
mov
adc
shlb
int
add
scas
js
insb
sarb
mov
adc
mov
xor
xchg
daa
ret
test
pop
loopne
in
push
add
arpl
lret
ljmp
iret
loopne
cmpsl
pop
fwait
test
sbb
hlt
fwait
push
rdrand
xor
mov
dec
pop
mov
adcl
cmp
scas
aaa
inc
fwait
adc
aaa
lret
outsl
xorw
gs
pop
add
inc
inc
das
xchg
push
ljmp
arpl
dec
dec
sub
ret
pop
ss
ret
push
pop
mov
jecxz,pn
jg
jnp
sub
imul
fldcw
jnp
pop
pop
adc
sbb
xchg
fisttps
pop
push
icebp
mov
xor
lahf
es
sbb
pop
add
mov
xor
mov
xor
std
sbb
aam
stos
mul
mov
mov
je
fsts
mov
ret
pop
hlt
nop
stc
negb
jnp
fidivl
add
cmpb
bound
adc
push
push
addr16
scas
ss
in
jo
and
outsl
adc
fs
lret
mov
mov
dec
jae
jbe
mov
fadd
pop
mov
popa
push
cmp
arpl
mov
jmp
ficompl
push
cltd
jp
sbb
ret
inc
add
or
in
adc
sub
jnp
xchg
pop
ss
in
iret
scas
mov
jmp
push
adc
out
imul
or
sub
rcll
add
mov
or
sti
aaa
jno
mov
cmc
aam
sub
sub
and
or
sub
arpl
add
adc
push
aam
dec
mov
dec
inc
mov
push
out
mov
mov
cmp
aas
lahf
sbb
rcrb
lret
icebp
and
cmc
jo
aam
dec
das
jae
jp
jg
aam
sub
lods
sub
jecxz
push
xlat
xor
daa
inc
jg
movsl
clc
and
cmp
dec
adc
mov
cli
mov
pushf
aaa
sub
repz
xchg
lcall
dec
add
mov
or
adc
and
cmpsb
pop
pop
aaa
movlps
xchg
pop
sub
ror
dec
sbb
sti
addr16
iret
mov
stc
lahf
sti
add
jge
js
ja
les
cmpl
retw
pop
and
and
ret
pop
aas
jae
fistpl
enter
mov
das
pop
cld
jb
mov
in
dec
cmpsl
cmpsb
jle
jmp
pop
fmul
cmp
hlt
mov
inc
test
insb
mov
jecxz
into
push
push
imul
jmp
daa
dec
daa
loopne
negb
call
nop
push
pop
inc
cld
adc
xchg
sub
sti
dec
stc
xor
cmp
xchg
out
sbb
mov
insb
out
test
push
pop
loop
rcrb
aaa
mov
sbb
hlt
outsl
adc
fidivrs
push
fimuls
test
fcmovnbe
lock
push
mov
arpl
pop
push
dec
jl
outsl
clc
mov
dec
lock
into
daa
fcompl
movsb
mov
in
and
xchg
ret
lcall
mov
jbe
add
int3
mov
divl
lret
call
push
sub
mov
out
aam
dec
out
cmpsl
jmp
sub
cld
cmc
mov
movsb
and
adc
pop
mov
gs
scas
mov
hlt
mov
push
aad
mov
dec
mov
mov
fistpl
loopne
jbe
mov
lea
nop
ljmp
daa
daa
sbb
fistl
xorl
sub
je
jp
sbb
push
arpl
push
jo
jecxz
mov
sub
xchg
mov
push
subl
bound
aaa
inc
mov
aas
in
hlt
xchg
in
xchg
pop
pop
je
inc
in
xor
inc
xor
jg
mov
scas
ficomps
divl
jmp
jecxz
lods
cmp
inc
fildll
fcomip
mov
jbe
cmp
push
sub
or
scas
mov
into
xchg
push
dec
fdivs
add
xor
mov
fimuls
sbb
sbbb
sbb
add
sub
pop
xor
xor
xchg
adc
jmp
lods
mov
sub
mov
inc
mov
iret
jg
pop
inc
js
fbld
and
pop
out
pop
mov
ja
out
scas
mov
xchg
aaa
addr16
and
dec
add
cmp
dec
push
adcb
loopne
cmp
enter
dec
movl
icebp
pop
into
fwait
lret
cli
xor
mov
lcall
adc
in
jno
sub
xor
mov
or
movsb
inc
addr16
cmp
push
or
loopne
cmp
and
nop
and
push
push
aas
fcmovb
mov
scas
mov
daa
das
mov
or
cs
and
jl
rcr
adc
lock
dec
cmp
xor
filds
clc
mov
jecxz
js
jnp
jmp
add
and
or
push
or
out
popf
jge
mov
mov
aad
mov
iret
jp
test
jle
dec
mov
add
mov
lret
dec
mov
fucom
pop
mov
in
xchg
pop
das
ja
add
pop
repnz
mov
fnstsw
imul
mov
dec
movsb
mov
pop
loop
jne
lret
repnz
dec
stos
out
call
or
rcrl
xchg
in
sub
pop
inc
lock
sar
adc
int3
loop
inc
gs
mov
loop
pushf
popf
inc
fstpl
enter
movsl
sub
movsl
ljmp
test
pop
xlat
jo
test
pop
aas
js
mov
std
and
scas
adc
xchg
mov
in
xchg
das
gs
adc
xchg
fcoml
cmpsb
arpl
stos
ror
xor
stos
and
jecxz
add
imul
sub
mov
adc
stc
add
cmp
or
and
sub
push
imull
rcl
pop
push
repnz
loopne
fcomi
lods
fldenv
cwtl
jg
ljmp
sub
rorl
cmp
out
mov
push
push
add
cmpsl
pop
leave
pop
mov
and
xor
push
out
gs
insl
dec
inc
xchg
cmp
std
push
xchg
cmpsl
sbb
test
jae
xor
andb
push
pop
rolb
iret
leave
outsl
inc
mov
xchg
mov
and
and
cwtl
pop
xchg
lret
dec
mov
sub
and
fcmovne
cltd
xlat
adc
cmpsl
add
ret
push
loope
sub
sub
das
pop
lret
adcb
push
sti
jle
mov
stos
mov
andl
jg
dec
out
pop
add
fdivrl
adc
mov
xorl
mov
andl
outsl
out
xor
lods
fisubl
push
cmp
lea
cmpl
into
mov
mov
push
and
scas
xor
scas
dec
mov
popa
cld
and
sub
mov
repnz
adc
xor
out
mov
ljmp
outsb
in
scas
insb
pop
pop
push
fwait
hlt
scas
mov
scas
pop
into
stc
mov
pushf
out
dec
xchg
loopne
push
out
pusha
out
pop
xchg
mov
dec
mov
mov
xor
jbe
jae
shrl
icebp
jmp
mov
xchg
mov
fistpl
idivl
jle
sbb
rclb
repz
or
or
adc
adc
xor
adc
fistps
repnz
insb
sbb
dec
push
sbb
sahf
push
lret
add
iret
flds
mov
outsl
int
outsw
push
jb
insb
aaa
insb
inc
fwait
dec
pop
and
mov
movsl
sbb
sub
jmp
lcall
sub
sub
jbe
shl
jge
mov
sub
push
mov
jl
or
fucompp
mov
adc
cli
shrl
int3
xor
daa
cmp
jbe
scas
mov
mov
inc
test
jno
out
sub
xor
ja
mov
pop
in
pop
out
fisubrs
mov
sub
nop
add
orl
mov
mov
mov
das
xchg
arpl
xor
pop
adc
cwtd
xor
daa
enter
jnp
cmp
repz
jle
orb
or
mov
das
shll
xchg
jno
sbb
pushf
dec
les
cli
fwait
mov
fcomps
and
mov
pop
jne
xchg
sbb
shrl
push
push
pop
jbe
call
or
fs
hlt
dec
enter
mov
fidivrl
inc
daa
adc
and
ss
xchg
ficompl
call
fs
sbb
dec
fiadds
sbb
add
sbb
jle
inc
pusha
movsl
lods
mov
jle
mov
into
adc
mov
and
xchg
cmp
ds
cmp
add
iret
xchg
vandnps
scas
imul
xor
lock
dec
cmp
jo
push
mov
popa
lret
ss
jbe
inc
mov
arpl
xchg
adc
cmp
divb
mov
push
xchg
sbb
sub
push
aaa
mov
lret
lods
sub
insb
or
jg
outsb
popf
and
mov
popf
ds
les
loop
jg
dec
mov
addl
lds
cmpsb
and
inc
das
xor
push
hlt
outsb
cwtl
aam
es
mov
scas
mov
or
call
mov
xchg
out
hlt
xchg
lar
lock
ljmp
push
subb
jnp
mov
icebp
pop
adc
stos
and
loope
dec
jecxz
mov
dec
ds
iret
push
lods
xchg
ss
inc
jl
outsb
jmp
js
out
pop
mov
and
mov
sbb
fiaddl
sub
mov
adc
arpl
aas
out
lods
jl
fadds
fstpt
add
mov
rcr
out
dec
xchg
and
outsl
jnp
inc
inc
adc
fcoml
sbb
sbb
pop
and
repz
cld
daa
lcall
iret
jmp
sub
dec
adc
pop
stc
xchg
fsubrs
fistl
push
mov
ficoms
aad
xlat
enter
in
notl
in
dec
das
dec
jno
inc
inc
rcl
pop
sbb
xlat
inc
cmp
dec
add
mov
stos
jge
or
push
xchg
xchg
cmpsl
or
and
push
in
adc
pop
test
jnp
cld
or
repz
mov
xchg
push
xchg
jns
jle
les
mov
enter
mov
pop
out
faddp
idiv
popf
pop
test
or
xor
pop
xchg
push
pop
mov
pop
sub
xchg
mov
test
xchg
push
dec
ret
mov
cmp
shl
clc
nop
adc
lds
sbb
add
ror
lds
sbb
bound
outsb
mov
out
arpl
adc
xor
adc
adc
mov
inc
cmp
sbb
cmp
sub
pop
jbe
repz
or
sbb
fistl
pop
mov
aam
cltd
iret
mov
aas
xlat
xor
pop
jp
je
out
mov
stos
call
pop
push
fwait
dec
push
idiv
pop
stos
xchg
loopne
ljmp
or
movsb
jno
xchg
sub
fisttpl
add
roll
dec
xor
jnp
add
les
sub
jnp
fwait
sbb
adc
lock
adc
test
and
movsw
jne
xchg
loope
jg
loop
roll
dec
cmp
addr16
push
pop
aaa
adc
andb
or
jmp
mov
xlat
jns
push
lahf
outsl
addr16
rcr
data16
sub
or
jae
ljmp
add
mov
int
pop
jnp
mov
adc
xchg
stc
in
jp
mov
or
ffree
ficoms
repnz
arpl
xor
js
xor
jg
sub
add
popa
mov
dec
adc
lret
xlat
add
nop
jo
mov
in
pushf
out
jb
imul
inc
add
bound
mov
sub
je
outsb
stos
jo
push
jb
cwtl
push
and
sub
imul
mov
loope
daa
xchg
dec
jnp
adc
fcompl
inc
sub
lret
pushf
lods
out
mov
xchg
rorb
jmp
test
pop
inc
outsb
dec
sti
test
lret
mov
stos
xor
scas
lret
daa
pop
outsl
notb
jns
cwtl
push
ret
mov
or
xchg
popa
in
mov
loop
sti
aaa
mov
pop
xchg
int3
ret
mov
faddl
enter
cwtl
ds
inc
jecxz
xor
jne
daa
into
mov
das
lds
sti
fs
jmp
hlt
sub
pop
fistpll
in
pop
sbb
testl
mov
aam
mov
ss
inc
sti
add
mov
xor
xor
in
inc
push
lret
adc
mov
aad
lahf
test
xor
sbb
ret
xlat
pop
outsb
or
ret
push
pop
mov
pop
jmp
jle
mov
xchg
imul
scas
pop
dec
fadd
xlat
xchg
jbe
daa
push
rcrl
adc
sub
call
sub
sub
iret
fisubrs
aas
and
xor
push
cld
xor
inc
loop
loopne
cmpsb
movsb
mov
or
jp
push
inc
sbb
or
or
jle
cmp
push
sub
in
mov
aaa
fnstenv
push
lods
in
loope
fsubrp
or
out
or
adc
mov
rcrl
sbb
add
repnz
out
repz
js
shl
imul
xor
daa
stc
shll
mov
pop
dec
repz
icebp
adc
imul
cmp
enter
add
sbb
cwtl
push
out
xor
fnsave
jle
orb
imul
scas
push
inc
inc
mov
out
mov
repnz
and
pushf
imul
sub
fidivrs
or
xor
out
aas
mov
cmpsb
add
sub
aas
fwait
lods
les
or
sbb
push
loop
std
jg
ficoml
jmp
cmp
out
push
daa
add
jl
adc
testl
test
xchg
loopne
xchg
sarl
and
and
mov
repz
outsb
jl
aam
pop
push
jns
hlt
jecxz
jl
arpl
in
inc
jl
or
fwait
sarb
mov
inc
mov
or
cwtl
add
pop
xor
lcall
lods
adc
imul
out
int
dec
movsb
mov
and
enter
push
mov
mov
push
daa
js
dec
mov
adc
fsubrp
int3
stc
cmpsl
hlt
push
loopne
xchg
dec
xchg
pop
pop
inc
je
das
adc
mov
jnp
loop
in
xchg
pop
mov
cmc
dec
call
push
jg
imulb
xadd
insl
mov
out
stos
cwtl
ja
inc
dec
enter
testl
sti
pop
jbe
je
ja
xchg
mov
cwtl
mov
dec
insb
lods
and
orl
popa
pop
sub
push
aas
pop
mov
movsb
cmpsb
out
ja
rorb
cmpsl
pop
sbb
into
adc
jb
adc
shrb
jmp
cmp
sbb
stos
jns
in
fwait
xor
cmp
push
cli
push
jg
out
push
sub
jg
lods
scas
pop
sbb
sub
leave
out
xchg
fisubrs
cld
popf
mov
cmpsl
dec
dec
fdivl
inc
mov
adc
cmp
das
sub
cld
xor
inc
ss
lods
shl
lahf
daa
or
andl
in
out
lcall
dec
sub
rclb
data16
mov
fadd
cld
dec
push
ffreep
push
arpl
lret
mov
jl
mov
lret
sbb
push
jo
in
and
cmpsl
pop
sahf
jg
add
aad
jae
xchg
mov
loop
jl
sub
outsl
xor
pop
mov
mov
aad
test
scas
cmp
shl
jmp
jae
ret
xor
mov
lock
aaa
add
add
je
fwait
xchg
dec
and
out
shrb
cwtl
sub
add
mov
sbb
stc
sbb
jae
mov
pop
subl
jmp
push
in
ds
mov
in
inc
pop
sub
pop
pusha
pop
sub
cmp
and
dec
mov
mov
pop
xchg
jl
es
rorb
scas
fldcw
imul
dec
pop
cmp
cmp
ret
adc
inc
int3
xor
aam
nop
jno
pusha
aaa
pop
jnp
aas
sub
fstpl
stc
stos
cmp
dec
jbe
loopne
push
jb
push
test
push
push
jg
cmpsl
aas
and
add
ds
push
xor
and
pop
wbinvd
fwait
jae
lock
ja
sub
xor
lods
je
mov
jp
out
and
mov
stos
dec
mov
xchg
leave
pop
dec
shl
es
movsl
lock
jg
dec
scas
sub
imul
daa
das
sub
cmp
push
ret
add
lock
enter
or
pop
mov
xor
sub
ss
test
movsb
cli
sub
in
jmp
jno
inc
push
mov
ret
adc
insb
mov
jae
xchg
jbe
sub
fsubr
push
mov
adc
jmp
sbbb
cmp
sub
fcomp
dec
ja
push
or
cmpw
or
arpl
mov
mov
hlt
xchg
adc
push
add
xor
fbstp
and
cmp
xchg
push
push
jnp
insl
lret
push
arpl
iret
adc
jp
out
hlt
push
pop
mov
jle
test
inc
xor
pop
aas
mov
stos
add
mov
sbb
sbb
dec
lret
int
les
jmp
xlat
mov
and
pusha
jecxz
push
das
shr
and
xor
cmp
arpl
push
das
in
jae
sbb
sub
sbb
push
imul
or
push
stc
dec
pop
push
outsl
dec
xchg
ds
ret
aam
xor
icebp
xchg
pop
push
fidivs
xor
xchg
arpl
aad
add
xor
scas
add
jg
js
movsb
push
sbb
jmp
and
repnz
les
daa
les
adc
aam
inc
mov
shrb
mov
scas
mov
inc
xor
adc
cmpsl
or
jl
mov
sbb
dec
or
push
or
into
loopne
pop
or
aas
loopne
subb
push
sbb
mov
inc
repz
push
dec
int3
xlat
dec
xchg
adc
int
inc
lock
sub
jns
imul
movsl
outsl
xchg
mov
dec
xchg
testl
sub
negb
mov
mov
xchg
xchg
add
je
lods
adc
paddsb
cmpsb
and
fistpl
sub
lods
imul
jae
jecxz
dec
fucomip
cmp
test
lock
mov
pop
lret
lahf
add
adc
jecxz
enter
mov
pop
xor
adc
pushf
adc
out
sti
xchg
roll
push
fiadds
aam
mov
jne
xor
mov
and
lahf
adc
mov
loop
dec
das
imul
jg
cmp
je
ja
inc
xor
cmc
lahf
mov
idivb
adcl
daa
mov
dec
dec
pop
xor
jne
push
mov
addb
xlat
hlt
repz
pop
cmp
pop
pop
iret
ja
dec
lea
sub
inc
mov
mov
ret
xchg
movsb
push
push
movsb
outsb
nop
int
out
movsl
rcll
icebp
idiv
iret
in
add
add
push
iret
pop
and
std
jg
orb
mov
insb
add
mov
mov
repz
xor
xchg
mov
shlb
pusha
test
pushf
popa
push
dec
insl
fs
es
stos
sbb
adc
or
lret
iret
mov
lock
or
mov
mov
and
jmp
cmp
iret
pop
pop
mov
aas
aaa
js
nop
push
jmp
roll
jnp
mov
xchg
stos
lahf
xchg
ss
xor
daa
jns
dec
into
xchg
jns
jmp
test
sbb
or
xor
cmp
fnsave
pop
stos
mov
adc
ret
xchg
jne
lods
push
xchg
sub
mov
pop
rcrb
daa
testl
push
adc
adcl
mov
popl
or
jecxz
add
inc
mov
jmp
repnz
testl
push
sbb
sbb
bound
jnp
push
fcoms
mov
stos
subl
pop
enter
mov
pop
repnz
fistl
imul
lret
les
mov
xchg
sbb
mov
inc
pop
and
pop
xor
push
out
in
cli
adc
test
dec
pop
repnz
add
dec
scas
das
sti
xchg
std
adc
dec
mov
push
ds
pusha
data16
jecxz
test
and
and
mov
ret
gs
mov
mov
cmp
mov
ret
pop
mov
xor
mov
int3
push
mov
shll
je
dec
arpl
mov
ret
loop
in
outsl
xchg
mov
xchg
out
inc
mov
sbb
out
dec
cmp
dec
movsl
mov
adc
add
hlt
test
pusha
lret
outsb
or
lods
jp
mov
pop
mov
xchg
subl
mov
mul
mov
loope
aaa
sub
mov
mov
push
sarl
les
data16
adc
ret
pusha
sbb
out
loope
imul
int3
fcoml
stos
xchg
das
lods
dec
cmpsl
popa
ss
stos
and
sahf
adc
mov
cld
adc
sub
cmp
sub
addr16
sub
push
in
sub
sbb
xor
clc
dec
sbb
pop
adc
frstor
pop
xchg
stos
and
test
hlt
jo
or
jecxz
and
fimuls
lahf
mov
jl
xchg
jecxz
aaa
ss
mov
lahf
push
adc
scas
jnp
jnp
jle
stc
add
imul
imul
lods
mov
sub
pop
pop
into
xchg
enter
sti
rolb
push
inc
mov
push
mov
sub
nop
add
or
pop
ja
xor
xchg
cltd
cmp
mov
fsub
aam
xor
dec
lret
scas
xchg
arpl
and
fistpl
lahf
or
xlat
ret
test
xor
push
push
xlat
int3
xchg
neg
add
test
stos
cld
cmpsl
je
das
test
out
inc
mov
les
insb
lahf
js
aas
dec
pop
mov
in
nop
test
test
push
jne
mov
jno
push
sub
fimuls
and
orl
or
sti
add
jle
push
inc
and
fisubs
push
add
push
ret
shll
sbb
frstor
sbb
or
mov
mov
jmp
inc
and
iret
mov
leave
imul
hlt
pop
ds
adc
mov
popa
or
pop
sbb
adc
pop
js
add
pusha
mov
shrb
or
lret
hlt
push
mov
pop
push
aaa
jle
es
push
scas
mov
inc
pop
cmpsl
dec
stos
mov
rcr
or
imul
dec
mov
ja
cwtl
lods
out
imul
sub
adc
lods
sub
repnz
test
xchg
xor
outsl
jmp
mov
setle
mov
mov
push
push
mov
or
loopne
cmpsl
or
lock
in
mov
add
inc
pop
push
addr16
repz
cmp
jl
inc
sbb
daa
lahf
xchg
cmp
lods
lods
mov
mov
inc
xor
mov
enter
sub
sub
popa
les
or
mov
xchg
in
mov
sub
mov
push
add
stc
cltd
icebp
jmp
xor
insl
call
mov
xchg
lock
and
add
mov
inc
push
xchg
jge
adc
hlt
fdivrl
jg
pusha
ret
jmp
xchg
add
xor
or
pop
xor
dec
scas
popf
nop
mov
ret
xchg
jnp
insb
sbb
mov
dec
mov
cmp
sub
repz
pop
lock
ja
or
fwait
adc
je
div
jo
adcb
loope
pop
cmpsb
adc
test
les
mov
mov
pop
bound
sbb
xchg
je
sysexit
dec
mov
adc
mov
mov
lods
jnp
inc
mov
or
test
pop
pusha
lods
push
lods
pop
or
sti
pop
and
out
or
and
scas
cmp
jae
shrl
push
and
jmp
stos
je
mov
and
mov
movsl
cmc
and
fistl
jg
and
push
jmp
hlt
or
das
sti
xor
scas
daa
int3
repnz
xchg
imul
ljmp
aas
loopne
push
xchg
or
or
mov
pop
and
mov
lcall
pop
push
push
cs
dec
mov
adc
mov
xorb
lcall
inc
mov
inc
ds
cmp
ret
fst
jno
sarl
dec
lds
leave
xchg
jmp
xchg
or
dec
sbb
test
daa
sarb
out
scas
xchg
or
add
and
lds
test
xlat
clc
push
cli
dec
pop
inc
clc
imul
adc
inc
pop
sarl
rcrb
repz
adc
rorl
push
sbb
and
add
sub
ret
inc
mov
mov
pop
sarl
lods
pop
sub
mov
stc
xor
not
add
cmp
or
mov
pop
inc
scas
jbe
push
jge
ds
dec
inc
adc
outsl
imul
js
pushf
push
add
ljmp
mov
mov
popf
arpl
stos
fsubp
orl
xor
std
mov
inc
stc
dec
mov
add
ss
push
outsl
jo
jo
cli
lock
gs
xchg
lods
test
or
pop
out
dec
js
push
test
mov
jmp
ss
xchg
mov
mov
lock
stos
cwtl
loop
outsl
js
cs
das
out
fdivrl
and
and
cmpsb
inc
mov
sbb
enter
shll
mov
mov
lcall
test
lock
xor
stos
int3
pop
jnp
xchg
fwait
inc
pop
mov
in
movsb
cmp
sub
inc
aam
popl
cmc
iret
jl
lret
adc
inc
cltd
scas
pop
scas
pushf
push
icebp
gs
in
es
rclb
xor
push
jbe
dec
test
popa
and
dec
cmp
xlat
ret
gs
in
dec
mov
jecxz
faddl
dec
push
in
sahf
inc
insb
iret
push
hlt
ret
sbb
pop
daa
testb
mov
sub
fsubr
xor
aam
scas
add
pop
pop
xchg
pop
aaa
sub
lahf
mov
xchg
jge
movsb
dec
sbb
pop
adc
adc
decb
add
mov
push
push
add
imul
mov
mov
xor
jmp
pusha
je
ret
add
in
subl
lret
out
cmp
andl
mov
fdivrs
sti
aas
out
sub
in
arpl
or
movb
in
mov
lods
pop
xor
bswap
mov
cmp
xor
mov
ret
in
add
push
lahf
enter
and
or
xchg
lea
sti
cmp
adc
out
clc
pop
adc
dec
mov
out
mov
push
xor
mov
mov
dec
cld
inc
aas
ficomps
in
clc
lret
fwait
jmp
push
out
in
scas
push
cs
cmp
push
in
dec
movsb
mov
xchg
pop
js
mov
mov
mov
and
and
pop
aad
out
mov
aaa
xchg
sbb
clc
js
test
pop
inc
cld
pop
fmuls
cmc
shrb
mov
mov
sub
add
push
jg
es
adc
xchg
mov
xchg
xchg
inc
iret
cld
shr
bound
xor
push
rolb
sarl
out
add
xlat
iret
int3
cmpsl
mov
mov
scas
push
imul
test
and
outsb
aad
xchg
push
mov
sbb
xchg
das
or
mov
jmp
fadd
rorb
add
adc
std
imull
stc
shll
pop
ja
arpl
les
std
mov
lods
stos
dec
stc
jmp
pop
sbb
fcoms
jp
xchg
popa
jnp
insb
mov
jle
fisttps
or
lods
dec
xor
loopne
cmp
jp
imul
pop
inc
lea
sbb
sub
stos
xsha256
cmpsb
push
add
ds
cmp
push
jl
push
iret
mov
pop
aaa
mov
pop
push
fistps
jecxz
inc
in
or
out
mov
mov
push
test
xlat
sbb
xchg
pusha
fiadds
dec
pusha
push
sbb
popf
inc
stos
mov
jae
das
jne
pop
int3
xlat
sahf
pop
add
jmp
or
push
cmpsl
adc
imul
imul
sbb
xchg
imul
ret
int
jns
dec
adc
mov
push
dec
dec
lea
scas
cld
cld
ss
inc
pop
insb
inc
xchg
fdiv
sub
inc
jle
or
push
fisubl
xor
sbb
int3
xchg
arpl
arpl
lock
leave
and
arpl
jg
das
iret
pop
inc
outsb
fcmove
pop
rcrl
adc
fcmovu
jl
push
adc
flds
or
inc
fimuls
inc
xor
lahf
repz
push
mov
adc
mov
call
dec
lods
jp
loope
aam
mov
idivb
jae
push
bound
inc
out
cld
ja
add
add
push
mov
insb
daa
fwait
jns
cli
adc
outsb
shrl
adc
adc
xchg
dec
pop
push
lods
push
pusha
xor
or
nop
sti
out
cmp
out
pop
xchg
ljmp
lret
adc
push
repnz
aam
addr16
std
ret
jp
aas
lods
sbb
aad
pop
cmc
shl
mov
das
imul
fiadds
pop
mov
or
or
mov
lods
add
aam
mov
arpl
movsl
adc
pop
in
jmp
lahf
inc
mov
das
sub
imul
mov
lret
adc
adcb
movq
xchg
imulb
fs
mov
jo,pn
or
cmpb
adcl
adc
or
mov
mov
in
xor
jmp
push
leave
in
mov
push
xor
xchg
lret
loopne
and
push
cs
leave
mov
pushf
adc
gs
pop
jnp
jge
sbb
cmp
xchg
repz
daa
xlat
shlb
test
or
call
pusha
dec
mov
lds
adc
enter
in
pop
lahf
jns
cmp
add
rcl
xchg
dec
cltd
xlat
add
test
adc
or
icebp
mov
enter
je
jg
scas
fistpl
js
lea
pop
jg
xchg
sbb
jle
out
aas
sbb
jae
popf
and
mov
push
push
xchg
into
es
pop
jb
mov
xorb
xchg
jmp
rol
in
test
rcl
sahf
cmp
ss
stos
movsl
lahf
xor
das
cmp
sub
movsb
adc
xor
testl
stos
pop
dec
iret
loop
and
rorl
adc
jbe
rcl
lret
or
sbb
push
jle
jno
jns
jg
mov
xor
out
xor
fstpt
mov
mov
adc
test
fsubrs
sub
push
sub
xchg
inc
adc
mov
rol
loope
xor
in
int
pusha
fiaddl
inc
arpl
sti
or
jbe
ret
jmp
imul
mov
das
test
push
mov
aaa
xchg
or
xchg
ds
fst
cmp
cmp
pop
arpl
xchg
xlat
fcoms
push
dec
sbb
stc
jmp
mov
cmp
xlat
lahf
jo
adc
jecxz
lret
jns
insl
enter
jae
in
ret
imul
shlb
std
les
pop
jg
insl
fcomip
xor
inc
mov
insl
sbb
in
pop
fdivs
popa
test
dec
mov
nop
mov
ds
jge
push
mov
jo
idivl
shlb
movsb
xchg
insb
ds
pop
pop
out
mov
add
jle
mov
out
sub
cmpsb
push
lcall
xchg
add
fstpt
negl
fs
add
jecxz
hlt
sbb
mov
or
cmpsl
mov
out
cli
and
lds
mov
mov
daa
push
sub
test
jnp
cmp
push
jle
jae,pt
mov
mov
add
or
ja
adcb
aaa
or
je
das
fcomp
dec
fwait
enter
jecxz
push
cmp
cltd
std
pop
jne
nop
add
xor
mov
arpl
ljmp
xchg
dec
subl
push
leave
repz
mov
mov
in
xor
out
aaa
int
rol
dec
test
xor
or
dec
lret
icebp
das
push
leave
mov
sub
insb
cmpsl
inc
xor
mov
lahf
lock
ror
fnstsw
push
mov
mov
lods
and
cwtl
movl
std
pusha
push
add
adc
shlb
filds
push
dec
pop
popf
lret
dec
fdivl
sbb
ljmp
call
xchg
or
xor
push
push
arpl
xchg
xchg
cmp
add
and
push
ret
divl
call
cmp
cmp
shlb
gs
incl
pusha
cmp
js
shrb
jae
add
mov
mov
adc
popa
hlt
test
jp
mov
or
cmp
inc
mov
push
andl
out
mov
pop
je
pop
mov
std
push
and
lods
in
push
mov
inc
cmp
mov
in
lcall
mov
pusha
bndldx
popa
cmp
mov
scas
cwtl
xchg
fldl
mul
push
mov
repnz
test
add
das
sbb
and
faddl
add
inc
ss
or
das
mov
ret
out
stos
aaa
popw
stc
addl
adc
cmp
sub
leave
rcr
push
pop
es
aas
stc
mov
fdiv
jns
inc
das
inc
or
stos
dec
pusha
mov
jmp
mov
out
enter
test
je
xor
cmpsb
fwait
aas
mov
nop
sub
sub
fwait
jge
int
out
mov
loopne
test
adc
sbb
cs
dec
sti
xor
enter
outsb
pop
xor
xchg
cwtl
scas
jns
rcrb
pop
pop
inc
sub
in
cwtl
dec
sub
in
mov
mov
icebp
fcmovbe
insl
call
outsl
std
inc
push
inc
pop
in
and
push
push
mov
mov
push
out
dec
adc
xchg
xor
iret
insl
and
mov
push
out
cmp
jnp
push
pop
add
pop
pop
shrb
fsubs
cmpb
ret
push
daa
test
fwait
shll
inc
xchg
mov
add
push
cmp
dec
xchg
decl
pop
pop
movsb
push
fwait
sub
cltd
ljmp
jns
sbb
out
lahf
mov
arpl
xchg
inc
mov
xchg
sahf
sbb
cwtl
push
push
je
push
sub
adc
xchg
aad
pusha
or
xor
sub
or
jle
xchg
pop
dec
outsb
push
mov
dec
inc
enter
cli
jns
mov
add
into
nop
rolb
add
lret
mov
cmp
mov
push
mov
mov
pop
sbb
repz
popf
or
xor
and
dec
xor
outsl
addr16
push
icebp
jnp
scas
and
add
adcb
pop
xchg
cld
cmpsl
pop
lock
cli
lock
roll
push
or
add
dec
cmp
xchg
insb
fcomp
or
fstps
out
xlat
les
in
mov
mov
imul
js
nop
or
dec
jl
add
inc
add
sbb
movsb
pop
inc
xlat
push
repz
mov
pop
pop
in
pop
movsl
sbb
xchg
mov
sbb
or
mov
cmp
iret
daa
mov
insb
ret
in
mov
cmp
mov
roll
imul
lea
sbb
jecxz
xchg
mov
add
shlb
mov
xchg
fdivl
and
inc
hlt
xchg
cmp
and
xor
cld
cmpsl
pop
sub
ja
sub
aas
pop
int3
imul
in
icebp
mov
cli
icebp
cltd
arpl
jne
cmp
stos
adc
dec
scas
lods
outsl
sbb
mov
int
js
incb
out
shll
cmc
jns
neg
fsubrl
dec
mov
inc
dec
test
ja
insb
fcmovnu
fcoml
mov
and
push
stc
xlat
fldenv
adc
xor
ljmp
xchg
jp
mov
jno
xchg
mov
and
and
lock
push
rorb
bound
hlt
mov
or
mov
sub
test
fnstcw
push
inc
add
and
or
stos
lret
scas
js
js
push
xor
shl
push
rcl
jnp
out
cmpsl
or
pop
hlt
dec
fists
movsl
stos
jns
pop
jecxz
add
or
fnsave
ret
push
pop
shll
icebp
xchg
mov
insl
imul
cwtl
pop
jge
xchg
jmp
adc
stos
push
jmp
daa
outsb
jp
cld
ret
add
in
sub
adc
mov
mov
out
pop
xor
add
cs
sti
mov
in
push
adc
mov
cmpsl
add
aas
stos
incb
out
test
xchg
bound
mov
ja
int3
adc
xor
divl
push
imul
rolb
fiadds
lcall
inc
mov
aad
es
and
shll
xchg
mov
loope
sub
dec
jp
daa
in
in
dec
nop
push
dec
out
es
arpl
pop
das
addps
dec
loope
adc
mov
xchg
dec
in
inc
lret
add
inc
jmp
xchg
call
lret
and
mov
sub
sbb
dec
mov
inc
imul
fimuls
clc
in
aad
subb
sub
push
pop
icebp
addr16
sbb
pop
add
add
cmp
adcb
cmp
negb
inc
shl
daa
pop
push
mov
test
mov
or
mov
jb
push
sbb
push
pushf
pop
testb
popa
lods
mov
lea
xchg
push
ret
pop
xchg
enter
jmp
test
gs
xchg
gs
or
push
loopne
test
out
inc
movb
fscale
addr16
jge
popa
push
fidivrs
fisubrl
xchg
rorb
stos
sti
jnp
xchg
cmp
shlb
push
push
rcrl
loop
testb
inc
inc
sub
add
add
call
xor
cli
add
jg
mov
adcl
ja
test
lock
sub
imul
pop
jns
fimuls
pushf
dec
jg
icebp
das
aas
in
or
in
out
aad
stos
push
scas
andb
jg,pn
repz
aad
rol
mov
imul
cmp
scas
mov
xor
cmpsl
scas
popl
clc
sbb
in
xor
add
cli
jb
inc
mov
lea
inc
and
xor
push
pop
scas
xor
mov
add
pop
sbb
adc
xor
jae
cwtl
lahf
adcl
dec
xor
push
insb
push
das
sub
inc
insb
call
inc
add
and
je
xchg
mov
adc
daa
pop
mov
lret
addr16
lods
js
mov
int
idiv
nop
aas
cmpsb
aam
fcoml
cmp
cmp
out
sub
daa
cltd
gs
jns
lret
sbb
hlt
ficoml
outsl
jmp
xchg
sbb
mov
imul
out
mov
or
ret
jl
sub
outsl
jo
lock
and
ljmp
insb
mov
mov
ret
xchg
xchg
jl
cmp
mov
adc
cvttps2pi
sbbb
std
push
outsl
loopne
dec
and
or
cmp
push
int
cmp
xchg
sarl
filds
mov
sbb
jno
test
loope
imul
outsl
out
out
arpl
mov
mov
mov
adc
int3
jne
mov
ljmp
es
cli
jmp
cmpsl
das
xchg
lock
sbb
les
stos
scas
aaa
adc
arpl
rclb
movsl
int3
test
outsl
pop
into
and
insb
pop
push
jbe
cwtl
cmp
pop
ret
test
or
push
and
mov
dec
inc
dec
loope
xchg
enter
push
push
sbb
fldcw
sbb
pop
push
test
repnz
pop
fwait
xlat
mov
push
xor
lret
mov
ret
inc
jge
jge
imul
mov
insl
sbb
xor
jg
push
addr16
lret
xor
cltd
lods
fcmovbe
pop
inc
and
xchg
mov
mov
mov
mov
in
inc
xchg
fadd
sub
scas
mov
inc
jp
ficoms
clc
lods
ljmp
dec
enter
xor
or
ja
rcl
mov
in
cmp
mov
in
cli
repz
mov
mov
push
dec
xchg
mov
ja
pop
popa
add
loopne
fs
mov
xchg
in
cmpsl
sub
xor
sub
push
and
mov
int3
das
out
rorb
loope
jge
push
jmp
setg
fldenv
inc
aad
iret
lock
sub
push
dec
jg
in
ja
sub
mov
inc
dec
inc
imul
mov
das
pop
mov
das
pop
adcb
repz
or
mov
in
xchg
mov
int
gs
sti
jnp
jg
clc
pusha
fcoml
fimull
mov
or
jno
andl
push
push
cmpsb
insl
mov
jae,pn
lock
xchg
jb
out
ret
dec
outsl
rol
sub
jae
inc
jp
cmp
popa
out
adc
jae
roll
jo
sub
lret
fs
in
insb
je
xchg
and
fldt
adc
loop
pushl
jmp
ljmp
jmp
fdivrs
imul
cld
jp
sub
jle
dec
push
and
jle
scas
mov
gs
movsl
xchg
jp
popf
clc
jp
xor
push
mov
out
stos
jbe
lock
mov
movsl
loopew
mov
jmp
cmp
pop
test
adc
cs
mov
jmp
jnp
out
test
mov
pushf
jle
ds
sub
clc
shrl
dec
cmp
jle
lret
pop
ret
ja
lea
out
sub
sub
sbb
mov
test
xchg
adc
pushf
fcoms
sbb
imulb
stc
jns
or
inc
mov
pushl
loopne
aaa
sbb
stos
bound
xchg
and
call
jge
xchg
fldenv
pop
das
stc
insl
dec
js
lar
cmp
nop
or
mov
lods
div
pop
or
sbb
add
sbbb
jecxz
fidivrl
adc
mov
xchg
gs
add
popa
mov
add
xchg
test
adc
ds
test
movsl
pop
fnsave
std
outsb
mov
pop
test
dec
daa
sub
jae
in
test
mov
inc
out
mov
int
call
cld
xchg
dec
ja
cmpb
scas
add
sbb
call
push
xchg
int3
pop
js
inc
sbb
pop
pop
fisubl
movsb
mov
sbb
mov
or
push
cmp
mov
xchg
push
push
loopne
sbb
or
icebp
addl
ljmp
fwait
lret
push
clc
int
mov
add
mov
outsl
loope
clc
or
jae
lds
mov
das
aam
push
fwait
arpl
rcr
xor
inc
and
push
fnsave
fldpi
xchg
push
mov
addr16
mov
xor
ljmp
aad
iret
push
les
add
mov
xchg
dec
cltd
mov
add
and
test
mov
ljmp
push
cs
lock
cmpsl
sbb
xor
rcr
enter
repz
mov
jecxz
imul
inc
cmp
mov
fmuls
adc
stos
xchg
imul
pop
inc
sbb
push
sbb
xchg
ja
mov
bound
or
fldt
imul
fsub
dec
mov
cmpsl
pop
addl
dec
loope
dec
xlat
es
scas
xchg
or
lods
mov
push
jae
ret
add
add
mov
cwtl
jns
adc
sbb
jecxz
sub
mov
cmpb
and
lods
sahf
sub
pusha
fdivs
dec
call
stos
out
aam
rcr
fmul
lock
in
inc
sub
push
push
shlb
adc
in
daa
divb
xchg
adc
dec
pushf
jg
shl
cmp
inc
cmpsl
inc
mov
add
imul
daa
lret
pop
addr16
mov
xor
and
pop
push
jle
xchg
dec
out
jg
jnp
pop
ret
xor
mov
mov
insl
mov
fnstenv
cmp
bound
and
fdiv
push
jp
add
in
mov
mov
xlat
addr16
xchg
mov
mov
ficompl
or
xchg
cld
inc
mov
xchg
les
push
gs
and
push
lods
aaa
stc
cmp
dec
jnp
and
push
hlt
push
dec
enter
jne
push
fimuls
popf
pop
cmpb
mov
mov
xchg
inc
rolb
cli
mov
movsl
bound
dec
rcr
sub
mov
dec
jmp
cld
lahf
loopne
add
dec
push
adc
jns
arpl
add
pop
aas
and
pop
mov
mov
xor
jecxz
subb
mov
in
cli
loop
mov
stos
adc
lret
movsl
imulb
xchg
cmp
jbe
fsub
push
pop
ljmp
cmp
dec
pop
push
sbb
jo
outsl
mov
cli
ljmp
cltd
inc
test
xchg
jp
xor
sub
es
out
arpl
loop
jnp
push
divl
jnp
stos
lahf
mov
inc
cwtl
inc
mov
data16
ret
rcll
jp
aaa
cmp
or
inc
dec
movsl
add
jp
loopne
cmp
dec
dec
jmp
std
cmpsl
les
mov
outsl
cli
jae
sahf
push
jg
xorl
xor
mov
nop
xchg
sub
cmp
mov
outsl
xchg
pop
andnps
push
jae
incl
jbe
push
rolb
push
mov
add
lock
pop
mov
sbb
ret
xchg
sub
xlat
jecxz
dec
ja
loopne
cmp
lea
cmp
mov
test
enter
mov
mov
shld
test
outsb
inc
packuswb
or
pop
mov
cmp
test
fnstsw
pop
cwtl
dec
cmp
std
adc
xor
and
ret
sbb
mov
and
call
add
cmp
jae
in
jo
arpl
mov
adc
pop
arpl
adc
ret
jbe
gs
adc
icebp
dec
or
mov
lods
and
inc
lcall
xor
sbb
dec
or
andl
pop
mov
cwtl
xchg
cmp
and
xor
iret
rorl
push
adc
sub
shlb
push
cld
cmp
sub
dec
les
in
xchg
fcom
inc
lods
dec
cwtl
fwait
js
push
insl
in
pop
push
mov
hlt
sub
mov
scas
mov
into
dec
xor
mov
gs
js
sub
xor
dec
push
test
xchg
addl
mov
xor
sbb
mov
sbb
or
loope
jns
iret
adc
cmpsl
inc
adc
ss
rcl
sub
lods
pushf
scas
movsb
dec
mov
dec
stc
out
or
sbbb
scas
ffreep
ljmp
ss
xor
out
xchg
mov
or
cwtl
pop
sub
fdivs
cmp
rcr
xchg
mov
pop
stos
cmpl
into
in
and
mov
cmpsl
xchg
mov
dec
fisubrl
mov
addr16
stos
and
jp
push
xor
pushf
mov
subb
inc
dec
inc
push
cmpsl
mov
daa
inc
add
out
add
sbb
xchg
jecxz
mov
mov
cmp
sti
push
mov
dec
push
pop
bound
insb
mov
mov
subb
adc
sbbb
or
push
cli
cmp
daa
push
mov
xchg
fisttpll
and
js
and
jae
repnz
fs
in
nop
idivb
push
enter
cld
mov
mov
mov
pop
pop
cltd
add
push
xorb
call
shlb
push
sbb
mov
repz
pop
sti
lahf
inc
jge
or
incb
es
pop
enter
push
sbbl
ja
push
inc
sbb
cli
das
cmpsl
pop
ds
call
or
xlat
call
arpl
jp
iret
imul
cmp
xlat
inc
sti
xchg
jbe
pop
fcmovnbe
pop
in
push
inc
stos
jns
pop
and
pop
fidivrs
lock
stos
jne
mov
lods
fwait
aam
shl
jg
ljmp
das
mov
sub
or
add
out
fs
mov
lret
loope
loopne
mov
xchg
aas
adc
cli
ds
mov
xchg
daa
cltd
push
mov
xor
dec
pop
in
incb
and
mov
out
mov
nop
ret
testb
hlt
les
mov
pop
jge
xor
xor
fld
xor
pop
fwait
mov
cmp
or
fistl
pop
pop
add
stos
rol
loope
imul
mov
ret
adc
adc
mov
stos
mov
push
movsl
pop
push
jmp
or
fcomip
mov
pop
ja
out
jo
imul
arpl
adc
cmp
or
dec
mov
xchg
scas
mov
pushf
dec
mov
ss
mov
pop
sbb
hlt
pop
and
jno
inc
mov
shr
sti
pop
inc
mov
and
push
push
dec
jecxz
cmpl
jns
inc
push
cwtl
sbb
test
push
in
push
push
sub
push
cmpsb
push
test
movsl
lea
mov
mov
aaa
inc
mov
loope
xchg
sti
les
pop
xor
mov
mov
push
ds
cmpsl
loopne
inc
push
cwtl
pusha
adc
aas
inc
sbbb
fsubs
sub
test
mov
daa
mov
mov
xor
test
test
in
and
jg
cmp
or
imul
cmpl
out
imul
ljmp
cmp
shlb
test
fistpl
jecxz
cmp
lret
mov
shl
stos
sbb
xchg
cltd
fidivl
les
repnz
cli
es
or
cld
push
lahf
jne
dec
adc
aam
outsl
mov
xchg
js
call
jl
lods
mov
in
daa
aaa
sub
pop
into
mov
ret
xchg
aad
mov
in
movsl
inc
imul
movsl
imul
test
add
xor
mov
scas
mov
sbb
jo
push
fcmovb
outsl
clc
sahf
cmp
rclb
ret
hlt
loopne
add
leave
test
hlt
adc
shrl
xor
sub
add
loope
arpl
lahf
shll
and
jecxz
imul
ds
lds
jnp
push
jmp
lret
cwtl
inc
ljmp
mov
ljmp
inc
loop
ret
mull
shl
inc
pop
push
xchg
inc
mov
push
data16
cmp
fildll
jns
je
inc
xor
xchg
loopne
stos
das
xorb
or
in
fildl
imul
adc
dec
out
fidivs
jnp
mov
xchg
push
fcoms
arpl
fbstp
dec
testl
xchg
out
leave
adc
or
sub
repnz
push
flds
mov
sub
je
push
pop
sbb
mov
mov
sub
jmp
aaa
xor
stos
inc
jno
adcb
add
ja
add
stc
fstps
mov
pusha
inc
mov
sub
dec
fistl
cmp
cmp
movsl
cli
popa
xchg
adc
sub
cmp
push
out
mov
in
jecxz
pop
fldt
jmp
test
jp
dec
insb
repz
cmp
icebp
in
mov
mov
push
jecxz
ret
movsl
xor
xchg
cli
ret
imul
jge
andb
sti
mov
xchg
mov
xchg
out
cmp
out
push
cmc
fwait
sub
lea
xchg
inc
inc
movsl
push
xor
bound
mov
jo
jno
dec
hlt
cli
dec
int3
push
nop
cmp
jl
xor
test
dec
inc
jo
jmp
push
inc
jne
pop
pushf
cmp
aam
mov
mov
mov
cltd
bound
sar
iret
jns
aad
dec
sub
call
mov
cmpsb
jle
es
bound
jb
fimuls
push
and
cltd
ljmp
pop
out
movsb
pop
jae
xchg
jl
lahf
movsb
dec
or
call
popw
mov
dec
mov
pusha
or
sbb
push
ficoml
jecxz
fisttpl
add
cld
scas
cmp
out
pushf
cli
or
jl
cmp
sub
gs
mov
shlb
mov
imul
sar
mov
mov
xor
jo
adc
lret
ljmp
imul
mov
mov
and
test
ds
mov
dec
lods
shlb
adc
pop
ja
jp
pop
jge
push
jns
dec
sub
adc
in
aam
jge
jnp
test
rolb
inc
jne
xchg
sbb
negl
ja
popf
into
test
test
xor
loop
cmp
outsl
scas
pusha
and
jecxz
xchg
inc
push
test
push
int3
mov
push
lods
xor
cli
xor
shrb
out
shrb
outsl
out
outsl
shlb
lret
sbb
inc
jecxz
lcall
popf
mov
jle
rcll
and
jo
adc
pop
mov
lea
adc
nop
cmp
add
and
xlat
sbb
into
mov
mov
lret
or
sub
inc
cmp
cld
loop
test
xor
xchg
or
sub
mov
cmp
ds
repnz
jo
adc
cmp
sbb
out
idivl
out
inc
sbb
jne,pt
jmp
mov
or
pop
sbb
repz
and
mov
xor
repz
adc
mov
xchg
sbb
cmpsb
rorb
test
dec
sbb
out
jno
mov
cmpsl
aas
loope
dec
fdivp
sub
cld
pushf
push
ficoms
mov
jbe
mov
and
push
cmc
mov
mov
int
sub
xchg
dec
aad
jb
lahf
jmp
jnp
aaa
lds
pop
gs
pslld
or
stos
mov
push
ret
ffreep
aam
push
jo
maskmovq
negl
add
sbb
stos
sti
xlat
sub
jecxz
mov
and
sbbb
in
arpl
and
add
and
push
xchg
and
dec
mov
push
mov
inc
arpl
stos
std
inc
aam
fcompl
icebp
stos
or
fnsave
orb
mov
xlat
pusha
jbe,pt
insl
jg
push
jge
ds
pop
push
pop
imul
mov
sti
dec
incl
mov
cmp
xor
and
xor
cltd
dec
ss
outsb
pop
orb
pop
and
cmp
lods
sbbb
rorl
inc
dec
hlt
push
mov
ljmp
roll
cli
and
mov
test
stos
divl
cmpsb
push
jp
and
xchg
das
pop
xchg
xchg
repnz
cs
ficoms
inc
xor
add
dec
bound
dec
ret
push
jecxz
lret
mov
push
cmp
mov
hlt
pop
adc
mov
fisubl
xor
aaa
adc
push
mov
lock
adc
enter
jne
sub
test
mov
dec
xor
jg
inc
in
lods
push
jne
int3
sub
pop
cwtl
cmp
fsubs
or
mov
cs
mov
jp
out
ret
addr16
mov
push
lret
inc
into
in
std
lret
xor
popw
stc
jp
aas
scas
sub
push
pop
mov
mov
and
sub
fbld
aaa
js
aas
clc
mov
icebp
test
pop
push
shrb
mov
je
jmp
fisttps
sub
inc
inc
ljmp
lcall
test
add
add
or
cmc
mov
adc
jo
jno
jg
inc
sub
cmpsb
inc
shll
out
dec
or
push
pop
div
cmp
xchg
inc
mov
repnz
bound
mov
imul
jnp
pop
cli
test
popf
and
sub
xor
stos
hlt
xor
ja
imul
or
push
stos
push
stc
fld
xchg
sti
in
xchg
push
dec
jno
jecxz
pop
ja
jbe
inc
lahf
repz
gs
sbb
dec
mov
mov
sbb
dec
pop
xchg
test
sbb
or
sbb
and
xchg
sahf
xor
xor
roll
lret
and
add
test
movsb
call
jb
out
stos
mov
mov
mov
lock
notl
cmp
daa
jl
inc
pop
inc
sbb
pushf
pushf
stos
outsb
in
mov
mov
inc
or
aad
or
les
aaa
pop
es
push
add
xor
push
or
or
mov
nop
mov
pop
push
inc
mov
stos
mov
and
adc
sbb
outsl
shlb
lcall
mov
mov
cwtl
dec
dec
push
test
insl
mov
ret
cmpsl
xor
loope
jne
mov
push
arpl
inc
rcl
movsl
cli
jmp
push
aas
inc
mov
in
ret
pop
jp
add
inc
aas
xchg
in
inc
mov
int3
dec
fbstp
add
and
push
mov
movsb
mov
sub
test
mov
fucomip
out
lret
test
ret
cmp
dec
sti
jg
push
bound
mov
sarb
mov
insl
cmp
jmp
pop
push
xlat
pusha
mov
repz
adc
in
cmp
push
xorps
cmp
roll
jecxz
int
or
pop
pop
push
push
jl
ds
mov
dec
mov
pusha
jb
cli
popf
ret
test
push
add
fsub
hlt
and
cld
adc
ss
std
jb
push
dec
mov
pop
jae
mov
fisubrl
cmp
pushf
inc
push
lret
shll
xor
dec
jo
sbb
jmp
scas
sub
lods
test
xchg
sub
les
lods
cltd
adc
push
mov
xchg
imulb
sbb
lock
sahf
xor
sarl
adc
inc
cs
test
dec
inc
cmpsb
hlt
cltd
stos
or
or
mov
inc
push
shrl
xchg
mov
cli
test
insl
dec
mov
mov
cmp
mov
xor
mov
shrl
ds
mov
lea
xchg
popf
test
ret
loop
call
cld
out
ror
lret
enter
add
lcall
jp
ret
add
ret
sbbb
cli
in
movsb
push
jbe
sarl
inc
add
push
out
sbb
ror
fimuls
adc
adc
cwtl
and
mov
xchg
add
or
cmp
cmp
xchg
in
scas
sub
sub
nop
sbb
inc
pop
sbb
xor
out
pop
inc
shlb
movsl
mov
lret
je
adc
mov
xor
rorb
xchg
imul
pop
bnd
mov
xchg
push
mov
xchg
pop
andl
call
cwtl
mov
icebp
adc
push
mov
test
stos
pop
hlt
jp
xchg
pop
and
lcall
inc
nop
cmp
push
cmp
stos
cmp
mov
mov
push
cli
xor
jb
and
pop
inc
jb
mov
ss
xor
mov
or
sub
inc
push
or
into
mov
push
sbb
lahf
sub
fdivrs
movsb
loopne
lcall
pop
xorb
inc
sti
in
test
icebp
mov
xchg
jmp
xor
scas
mov
out
sub
inc
or
stos
fsub
jne
sub
mov
xchg
scas
dec
std
iret
fbld
pusha
test
inc
insl
ret
jae
out
and
jne
sub
je,pt
daa
in
and
sub
cmpsl
stos
ficoml
das
adc
ret
roll
push
int
sub
sti
aaa
int
jae
xchg
movl
hlt
add
subl
add
daa
dec
arpl
jecxz
pop
jle
jb
pusha
js
push
repnz
lahf
cmp
mov
movsl
push
imul
cmp
mov
outsl
insl
mov
push
dec
loop
test
lds
shll
pusha
pop
out
fsubs
cs
into
negb
add
xor
mov
fmull
cmp
data16
out
mov
cli
push
repnz
ljmp
cmc
dec
mov
out
call
ds
lcall
in
mov
cs
add
incb
shlb
pop
add
loopne
mov
stc
test
jmp
rcl
test
insl
lahf
dec
stos
inc
adc
mov
pop
movsb
test
cmpsb
mul
test
pop
dec
jl
sub
inc
pushf
sbb
insl
jbe
inc
gs
jge
mov
lret
mov
cli
add
sub
jne
push
hlt
mov
fsubs
cmp
roll
sbb
das
aam
add
mov
sbb
je
inc
pop
mov
lret
inc
inc
lahf
fwait
mov
sbb
sbb
cmp
imull
add
fwait
inc
repz
test
bndstx
mov
fsts
jmp
loop
inc
rcrb
adc
jmp
js
ret
in
repnz
je
adc
scas
jae
mov
stc
lods
mov
xor
sbb
sub
lret
je
andl
push
divb
pop
add
out
add
repz
rcr
ficomps
xchg
mov
pop
inc
sub
push
nop
cmp
sub
mov
jmp
dec
jle
iret
dec
imul
pop
lods
mov
inc
out
test
fs
pusha
std
loop
push
cltd
jl
inc
in
mov
push
jg
jbe
dec
sbb
lds
mov
jge
push
xchg
imul
mov
pushf
mov
pusha
push
ja
cmpleps
and
ret
andb
or
or
inc
jns
mov
outsb
xor
inc
std
and
mov
xchg
push
pop
rcl
roll
cs
shld
mov
lock
outsb
push
or
in
fs
xlat
je
adc
mov
xchg
cmc
push
adc
aad
mov
push
ljmp
xor
push
ret
xor
movsb
cli
out
xchg
lcall
cmp
movsb
xlat
mov
adc
jae
pop
jb
rcll
outsl
mov
jecxz
cli
cltd
idiv
out
dec
push
xchg
jmp
mov
popa
push
jae
or
das
jno
movsl
and
pusha
ds
and
cmpsb
jae
daa
test
mov
push
push
data16
test
movsl
sub
aaa
mov
mov
out
sub
mov
mov
scas
ret
mov
mov
mov
xor
ds
jb
int
mov
mov
sbb
cmpsl
je
cwtl
lods
cmpsb
inc
push
mov
xor
jg
adc
sub
xor
dec
jne
enter
shll
jmp
cmp
cmp
sbb
mov
and
fsubs
imul
cmpsl
lods
push
inc
sub
pop
mov
and
aad
xchg
mov
xchg
outsl
pop
mov
ds
lret
dec
mov
je
mov
inc
mov
mov
nop
sbb
jp
mov
push
jp
stc
aaa
push
mov
and
mov
push
jns
out
out
inc
adc
push
dec
fsts
cli
mov
outsl
out
adc
jg
pop
shll
adc
and
and
jp
push
push
or
push
push
mov
mov
xor
or
lret
lcall
lahf
sub
push
aas
shlb
xlat
push
sbb
jg
xchg
scas
mov
dec
jle
ret
jb
pusha
adc
sbb
mov
decl
sbb
std
dec
xchg
jbe
jge
mov
fcmovbe
jl
subl
push
xor
push
push
outsl
push
nop
int
mov
mov
je
mov
mov
inc
sub
fldenv
sahf
iret
movsb
mov
push
call
mov
xlat
gs
lret
flds
jl
mov
push
divl
jns
shll
sub
repnz
pop
mov
cwtd
loop
push
in
orb
jp
dec
lret
sbb
lods
cwtl
rolb
mov
or
pop
mov
cwtl
sahf
xor
cmp
roll
push
push
jmp
xchg
andb
test
or
into
push
xor
adc
clc
xchg
popa
popf
out
lahf
hlt
mov
es
aas
xchg
mov
or
enter
loopne
test
mov
pop
fiaddl
iret
xchg
xor
and
pop
cmp
mov
lcall
push
cmpsl
and
nop
xor
jp
aam
iret
push
mov
or
clc
popf
incb
and
or
lock
pop
repnz
imul
xchg
and
push
mov
adc
cld
push
add
push
push
std
insl
jb
or
out
movsb
mov
jno
mov
es
outsb
and
out
in
test
repnz
insl
jnp
loop
jp
orl
aam
inc
out
dec
out
inc
pop
lahf
mov
pop
mov
and
cmpsb
daa
test
jae
jns
jne
or
pop
xlat
cmp
pop
fmuls
nop
inc
jbe
scas
lahf
mov
bound
fdivrl
fcomps
mov
es
in
and
adc
iret
mov
push
imul
movsl
adc
lret
lods
mov
loop
icebp
fwait
push
and
je
mov
and
test
je
out
int3
mov
outsl
sti
xor
lret
stos
push
lds
jb
icebp
jno
push
mov
inc
cmp
push
scas
rolb
mov
pop
iret
xchg
fsub
mov
mov
mov
adcl
mov
sub
fdivrl
ljmp
cmpsb
ja
pop
adc
test
inc
out
xor
aaa
aam
adcl
jecxz
enter
adc
into
xor
out
mov
add
sbb
dec
jecxz
lret
push
push
arpl
cmc
int3
nop
push
push
test
in
xchg
aam
insb
cwtl
lahf
imul
ret
movsb
pop
push
outsb
mov
scas
out
jns
pop
out
bound
mov
push
dec
lea
fwait
mov
movb
clc
hlt
cmpsb
push
xor
lret
sbb
test
mov
push
mov
push
adc
adc
push
lret
dec
pusha
and
mov
xor
pushf
adc
in
in
xor
cmc
dec
cmp
xorl
loope
pop
lods
or
push
or
mov
fwait
mov
es
jb
mov
push
mov
jle
aas
lret
inc
les
repz
fs
out
jge
fdivrl
lea
outsb
inc
ret
mov
aad
mov
cmc
je
xchg
sbb
mov
jle
scas
xchg
lods
dec
sbb
in
or
andl
push
inc
aaa
jnp
aam
or
and
ret
fwait
pushf
mov
shrl
fldt
push
mov
and
test
xor
out
cltd
mov
add
push
dec
imul
mov
into
pop
sbb
in
test
jle
aaa
mov
push
loope
pop
hlt
fwait
lret
ljmp
dec
push
sbb
jle
jnp
test
mov
mov
jae
loopne
jecxz
fsts
mov
and
mov
jns
mov
movsb
aam
xor
rclb
faddl
fdivl
andl
pop
sbb
adc
gs
enter
sub
jne
lods
in
pop
cmp
pusha
pop
dec
pop
sbb
and
ret
imul
jnp
arpl
into
sub
pop
jo
inc
lock
int3
test
add
repnz
addr16
xchg
sti
lret
xchg
clc
mov
adc
cmp
pop
fiadds
ss
jmp
pop
jge
mov
xor
cmpsl
xor
dec
mov
inc
mov
test
push
out
int
out
dec
cmp
insl
push
cmp
pop
jl
push
lahf
adc
cwtl
clc
in
outsl
in
cmp
adc
movsl
mov
mov
pushl
sbb
mov
ss
jge
and
add
shrb
cmpsl
add
pmovmskb
scas
jnp
push
ja
mov
jmp
daa
dec
aad
mov
sbb
adc
clc
fldl
jl
sbb
and
repz
jo
cmpsl
sbb
xor
movsb
jg
cmp
mov
std
neg
call
mov
xlat
fs
xchg
mov
adc
lods
pop
popa
dec
repnz
test
or
push
ja
xchg
push
das
sbb
mov
cmpl
nop
add
outsb
call
or
cmp
inc
add
add
lret
je
mov
adc
lret
sarb
iret
cmpsb
pop
jo
push
pop
jbe
sbb
pop
sub
xchg
mov
lret
fstpl
mov
xchg
or
divb
ds
ljmp
mov
ljmp
stos
cmp
fcmovnb
not
mov
push
cmp
sbb
repz
aas
add
xor
jne
push
mov
xorl
repz
mov
add
outsl
dec
stos
ret
dec
adc
xchg
mov
cmpsw
shr
xor
in
scas
xor
mov
push
cltd
mov
divl
push
pinsrw
outsl
mov
imul
jge
dec
inc
and
loope
add
dec
into
cmp
mov
mov
data16
enter
mov
mov
adc
stc
mov
mov
jp
shlb
clc
mov
mov
fwait
sbb
scas
cli
push
pop
add
inc
loop
orl
add
lea
sti
aad
pop
mov
dec
movl
rclb
mov
bound
cmp
sti
leave
push
aam
aad
out
std
js
lahf
push
clc
and
popw
into
int3
popl
ljmp
out
cmp
in
add
mov
rdmsr
adc
xor
mov
push
and
imul
cmp
cli
pop
adc
mov
testl
movsl
addl
fcomi
pop
in
popa
push
in
iret
imul
pop
xlat
arpl
rorl
rcll
das
push
inc
clc
jl
push
arpl
or
outsb
aad
pop
loop
int
mov
in
outsl
push
mov
jb
jnp
jbe
xor
ffreep
jp
lret
cmp
xor
arpl
push
inc
insl
mov
dec
and
pop
sub
cmp
dec
pop
sbb
push
cmpsl
jbe
xchg
mov
mov
roll
icebp
cmp
aad
jmp
arpl
dec
mov
lods
scas
xchg
pushf
jnp
sahf
stc
les
dec
xor
xor
jmp
sbb
orb
ss
xor
mov
mov
lock
mov
enter
lods
test
ret
cs
cmpsl
mov
out
out
arpl
movsb
cmp
outsl
out
xor
mov
jl
fwait
popf
inc
mov
int
clc
mov
xorl
es
pop
jo
out
std
sub
push
add
daa
es
cli
lcall
mov
push
mov
shr
adc
test
jg
int
das
fistpl
xor
insl
cmp
xchg
push
push
xchg
inc
rcl
movsl
jle
outsb
call
xor
pop
pop
push
jmp
cli
mov
nop
xchg
xlat
mov
fdiv
aas
xchg
idivb
imul
pop
lods
inc
xor
cmpsb
sub
popf
xor
repz
inc
ffree
popw
lock
sub
test
xchg
imul
mov
cmp
xor
dec
cli
lret
jmp
pushf
jg
in
add
test
pushf
add
rcr
mov
fsts
dec
cld
dec
dec
push
jmp
jbe
lcall
sub
jecxz
sub
repnz
test
pop
lahf
inc
cmc
out
jae
out
imul
pop
fstpl
pop
addl
sahf
mov
aaa
cli
xchg
jo
and
fists
cmp
mov
mov
adc
insb
or
in
push
js
dec
jnp
xchg
adc
dec
addr16
or
jmp
test
scas
cmp
push
dec
sti
mov
mov
pop
xchg
cmp
jge
inc
push
ljmp
cltd
adc
imul
and
jmp
dec
push
jle
xchg
out
cmc
dec
dec
cmp
fildll
or
sub
add
pop
cmp
or
mov
mov
mov
xchg
out
imul
lret
inc
outsl
add
dec
pop
push
or
nop
cmp
into
push
sub
cmp
push
mov
test
fdivl
mov
js
mov
shlb
inc
sbb
cli
fbld
sti
fidivs
cltd
lahf
loop
xchg
aaa
xchg
stos
cli
test
leave
fdivs
pop
ds
leave
xor
into
jbe
int
inc
sahf
data16
stos
clc
push
push
scas
ljmp
xor
lahf
dec
mov
and
out
in
fstl
dec
cmp
stos
loop
iret
mov
lahf
jge
mov
lret
lds
cmp
in
popf
adc
sub
add
fwait
push
nop
lret
inc
idiv
loop
adc
popf
cs
pop
popa
inc
mov
xchg
and
dec
out
sbb
inc
imul
stos
add
std
push
fadd
push
mov
mov
mov
hlt
cltd
mov
sbbl
outsb
mov
sbb
fcomps
and
in
faddl
inc
cli
and
outsb
jp
lock
push
dec
mov
xor
and
daa
cmp
rolb
cmp
enter
bound
sti
fdivrs
dec
test
pop
cmp
movsl
and
push
std
insb
push
das
divb
pushf
mov
sub
adc
or
js
addr16
lds
inc
ljmp
xchg
or
mov
mov
aaa
sbb
jbe
mov
jmp
das
push
mov
call
xor
xor
gs
pop
andb
nop
inc
xchg
cli
test
lret
xor
loopne
lahf
mov
pushf
cmp
fists
loopne
repnz
out
insl
ret
hlt
jns
adc
jb
sub
cmc
xlat
xlat
jg
xchg
cli
rcl
adc
dec
movsb
push
ds
ds
fwait
aam
xor
ficoml
lret
nop
unpcklps
push
pushf
add
and
inc
adc
adc
adc
sub
mov
popa
sub
scas
dec
test
test
lahf
jo
mov
arpl
jg
fildl
lcall
cmp
add
lods
flds
push
pop
xor
bound
sbb
adc
xor
sbb
repnz
inc
es
ret
in
out
push
add
adc
push
and
test
adc
jb,pn
ljmp
lods
imul
mov
mov
push
std
aas
dec
jl
add
pop
xchg
mov
push
lods
insl
insb
cmpb
iret
mov
arpl
push
inc
dec
aam
add
push
imul
sub
and
sbb
cs
push
sbb
imul
pop
cmp
mov
jae
pop
incl
icebp
or
decl
orl
outsl
loop
inc
sbb
xchg
mov
dec
mov
int
es
jg
push
xor
out
lods
std
ficoml
subb
and
cmp
sti
cltd
cltd
shlb
in
jne
cmp
mov
add
push
scas
push
test
pop
loope
mov
mov
std
je
test
gs
or
andl
aaa
jge
mov
in
dec
sbb
adc
iret
mov
test
push
mov
xchg
loopne
xor
pop
pop
adc
mov
mov
stc
xor
cmp
pop
mov
orl
cmp
jb
test
push
adc
mov
push
jb
shll
jnp
xchg
enter
cmp
dec
lahf
out
ret
mov
inc
pop
lret
sub
out
dec
mov
rep
movsl
mov
xchg
adc
xor
xor
bound
inc
jg
add
mov
cmpsb
sbb
rcrb
fwait
jle
mov
cwtl
add
jae
jnp
call
jb
popa
scas
sub
loope
into
jecxz
repz
jge
dec
lock
mov
mov
adc
in
mov
sub
adc
add
push
pop
shrb
or
and
sbb
lds
cmp
fidivrl
sar
cmp
lahf
push
mov
and
cvttps2pi
add
mov
jl
nop
add
mov
stos
es
popa
or
push
jnp
icebp
push
or
mov
dec
dec
hlt
es
xor
xlat
dec
push
or
fs
movsb
sbb
pop
leave
mov
push
jb
out
push
mov
insb
push
jae
add
inc
sub
int
jl
gs
movsl
xorl
sarl
inc
daa
inc
xchg
jle
mov
bound
fnstsw
sub
xchg
inc
dec
ss
mov
shlb
jl
scas
repnz
cltd
jecxz
ljmp
outsb
add
and
dec
adc
xorb
addb
mov
xchg
es
mov
mov
sub
or
mul
mov
and
std
mov
mov
daa
jbe
shr
icebp
add
pop
push
into
pushf
lret
inc
xchg
out
jle
dec
jge
fsubs
pop
jns
lcall
mov
lds
or
add
inc
cld
jns
int3
mov
adc
inc
cmp
push
jmp
fidivrs
or
mov
sub
push
loopne
mov
fmulp
into
push
pop
lahf
adc
lods
lret
jmp
sbb
out
add
pop
in
pop
inc
jo
mov
repnz
cmc
cmp
mov
je
in
adc
or
popa
movsb
iret
pop
xchg
jp
xor
cld
add
cmp
push
sub
xor
sub
lea
mov
out
outsb
mov
sarb
andb
scas
and
in
pop
fs
push
cmp
mov
aad
push
adc
mov
loop
xor
pop
mov
sbb
iret
iret
outsb
imul
pusha
mov
fstpt
pusha
ja
add
ret
mov
cs
lcall
mov
in
or
push
bound
mov
scas
stc
nop
mov
or
iret
add
jecxz
or
push
addr16
out
pop
and
add
cmpsl
cwtl
sub
inc
pop
dec
leave
incb
fmuls
dec
arpl
mov
add
vphsubdq
xchg
and
sahf
push
mov
mov
addr16
cli
daa
mov
push
sahf
add
movsb
and
stos
jecxz
subl
jnp
jne
pop
faddl
push
inc
pop
or
faddp
dec
push
jle
cwtl
scas
xor
push
cmp
in
repnz
pminsw
aas
mov
jnp
ja
adc
pushf
mov
mov
xor
pop
cli
cld
ficompl
inc
sub
add
cli
fwait
stos
sbb
das
push
andb
test
adc
jnp
adc
hlt
push
mov
adc
push
jo
in
inc
cmp
test
in
jae
notl
push
mov
xorb
cs
out
pusha
aad
movsl
mov
dec
outsb
mov
orl
or
fildl
loop
cltd
mov
outsb
fmuls
cmp
cmc
add
mov
xchg
jle
add
sahf
or
dec
push
aas
or
cltd
mov
xchg
xchg
test
outsl
xchg
push
mov
inc
jmp
jo
test
outsb
rorb
cmp
inc
leave
sbb
or
rolb
test
sbb
insl
mov
lret
mov
fistps
bswap
adc
xchg
pusha
mov
mov
adc
clc
inc
dec
xor
mov
lock
fildll
mov
sti
ljmp
lock
mov
out
stc
faddl
pop
adc
repnz
cmpsb
push
inc
inc
mov
adc
scas
xchg
lret
lahf
cmpb
shll
mov
loop
cmpsl
inc
sbb
pop
add
jne
mov
inc
sbb
fucomip
mov
pop
les
orb
adc
sub
fidivs
jle
es
jle
mov
sbb
inc
or
faddl
ds
stos
sub
dec
xor
mov
data16
dec
and
lods
inc
jae
and
pop
mov
xor
lcall
mov
inc
addr16
out
dec
pop
add
inc
mov
mov
outsb
stos
jle
mov
cmp
xor
das
lret
jmp
dec
addl
movsl
int
imul
rorl
xchg
inc
sub
pop
sbb
or
and
adc
xor
mov
and
sbbl
sbb
pop
cmp
jl
jp
aaa
cmp
jne
jle
sahf
in
push
xchg
pop
call
clc
xchg
pop
or
dec
cltd
pop
xchg
das
cmpsb
aas
imul
cmp
lods
dec
push
daa
mov
xchg
arpl
nop
sub
push
adc
negb
mov
mov
add
lock
shll
cs
pop
or
add
dec
leave
stos
outsb
arpl
sub
cli
nop
pushf
jae
xchg
sub
inc
sbb
mov
je
fdivrp
inc
idivb
dec
mov
jle
jp
cmp
leave
dec
sbb
jmp
add
lods
in
jne
dec
aas
ss
jbe
outsb
and
push
xor
lods
into
jge
andb
push
mov
sbb
dec
subl
and
inc
sar
xchg
mov
xor
mov
jge
into
daa
inc
rclb
arpl
mov
mov
and
insl
lock
sub
xchg
sbb
stos
mov
in
push
mov
jp
das
frstor
inc
jg
pop
insb
jmp
mov
jne
pop
ja
push
mov
adcl
or
pop
out
push
pop
jo
mov
push
sub
xor
cmovg
fcoml
mov
rcll
push
lahf
fcoml
fs
mov
and
fsubs
push
stos
sti
daa
shll
adc
lret
rclb
push
sbb
add
call
adc
ljmp
add
mov
data16
nop
xor
cmc
adc
jl
stos
aaa
aam
jmp
dec
stos
or
xchg
xor
ret
imul
lock
jno
rorl
jbe
mov
lret
stos
mov
movb
add
pop
sbb
cwtl
dec
fisubs
dec
or
rorl
cld
mov
pop
jp
xlat
or
xor
call
or
ljmp
fwait
sarb
out
xchg
insl
mov
pop
sub
pop
data16
lock
test
pushf
push
imul
xlat
cld
sbb
pop
sbb
cmpsl
insb
jae
inc
scas
jg
dec
sbb
ja
push
jae
dec
dec
inc
inc
ja
fcomp
cmp
jmp
scas
cmp
fisttpl
jmp
pop
lock
cli
dec
xlat
push
pop
jno
jo
push
pop
xor
addl
cltd
arpl
enter
push
xchg
add
dec
cltd
pop
dec
pusha
mov
cmpsl
xor
xorb
inc
mov
inc
repz
dec
inc
cld
pop
sbb
repnz
dec
mov
mov
pop
movsb
adc
and
pop
imul
rclb
pusha
and
in
fsts
cli
imull
jg
sti
xchg
fstl
xchg
pop
push
es
sbb
icebp
inc
fisubrs
icebp
push
lret
enter
jmp
jae
mov
dec
jo
add
push
jmp
insb
pop
or
enter
outsl
or
scas
inc
xchg
jns
jl
fldl
sbb
adc
push
daa
mov
lods
inc
out
sahf
or
jae
pop
mov
cmpb
sub
xor
jae
pop
fisubrs
mov
pop
jle
xchg
and
test
cmp
push
xchg
nop
and
sahf
adc
daa
push
shl
pop
cli
leave
lods
cmp
fsubp
add
push
adc
cmp
dec
movsb
lods
dec
pop
mov
or
gs
and
pop
imul
push
icebp
and
pushf
mov
sbb
lcall
xchg
adc
pop
and
mov
sar
sbb
push
lahf
push
mov
add
sub
dec
repnz
cli
mov
int
insb
xlat
insl
xor
out
or
inc
aam
out
cmp
xor
or
cmp
out
popa
lods
stos
es
mov
jle
into
xor
adc
rorb
jo
xchg
mov
adc
or
pusha
ja
jp
lret
add
into
clc
and
lcall
push
push
ljmp
or
pop
hlt
adcl
shll
jmp
imul
push
rcll
scas
jp
mov
shll
fwait
dec
pop
inc
sbb
xchg
aam
adc
push
inc
cmp
bound
inc
sbb
mov
repz
add
xchg
call
outsb
mov
test
add
stos
sub
lock
mov
mov
not
stos
add
insb
pop
sbb
or
cld
es
inc
test
cld
clc
or
dec
into
lahf
jae
cmp
into
cmp
and
and
add
repz
pop
loope
cmpb
mov
int
cmp
pusha
addr16
shll
movsb
add
idiv
nop
sarl
inc
in
testb
test
out
stos
mov
cmp
ret
add
xchg
divl
stos
push
test
daa
adc
paddsw
fists
xchg
je
pop
push
ja
mov
pop
sbb
mov
bound
mov
mov
adcl
test
adcb
out
mov
insb
adc
out
xor
dec
add
les
insb
lret
fwait
add
fildl
or
popl
fwait
imul
lods
enter
adc
out
jg
out
cwtl
sahf
fiaddl
lret
scas
sahf
mov
movsb
cli
cld
sti
jle
fiadds
mov
adc
xchg
scas
ret
mov
stos
sbb
enter
sbb
rorb
xlat
mov
push
xchg
pop
pop
pop
loop
ja
xchg
negb
insl
xor
mov
dec
jb
cltd
enter
fs
loop
data16
cmp
mov
test
adc
pop
jns
iret
jns,pn
mov
out
lods
ljmp
lods
sbb
out
xchg
icebp
jo
inc
nop
xchg
ret
sbb
out
jecxz
adc
cmc
andl
xchg
xchg
mov
stos
iret
add
mov
xor
add
lret
lcall
mov
xchg
add
stos
leave
daa
push
inc
sbb
or
cmp
mov
xchg
cwtl
push
out
or
test
cmp
inc
aaa
inc
push
cmpsb
push
ret
or
in
les
nop
cltd
out
sbb
sahf
and
xor
mov
cmp
adc
shlb
movups
outsl
fwait
shl
das
fldcw
pop
or
push
dec
das
pop
jle
mov
bound
pop
sub
push
stc
rclb
fnclex
xor
orb
jecxz
je
mov
dec
push
cmp
mov
cltd
lahf
loopne
cmc
inc
movsb
jns
and
dec
push
jl
and
xchg
outsb
sbb
xor
es
mov
add
adc
add
xor
mov
cmp
and
dec
mov
popf
mov
pop
clc
jecxz
or
sbb
icebp
sub
or
fsubrs
clc
mov
xchg
jmp
xchg
mov
and
push
cwtl
dec
add
pop
mov
ss
stos
outsb
sbb
push
sub
mov
inc
shll
hlt
repz
and
mov
xchg
sub
shll
and
sbb
scas
mov
push
movsb
fiaddl
mov
or
dec
sub
stc
push
push
fwait
movsb
out
lcall
into
mov
sbb
mov
in
adc
dec
add
lcall
lods
aam
mov
aaa
addl
or
lods
mov
pop
mov
popl
shr
mov
rolb
cmp
arpl
daa
in
dec
xor
roll
push
jmp
push
pop
testl
testl
aas
push
movsb
cmp
pop
iret
ds
mov
aaa
addb
and
jnp
loop
lahf
pop
lcall
shlb
xor
cmp
sbb
dec
clc
pop
sbb
pop
es
in
out
jl
xchg
jnp
mov
inc
fcmovnb
jp
add
mov
adc
pop
and
and
rorl
cmp
pushl
pop
jp
daa
add
or
cmc
sahf
andl
adc
adc
scas
mov
pop
pop
mov
pop
std
fsubrl
xchg
sarl
dec
dec
pop
testl
ret
fs
test
repnz
outsl
popf
fildll
cmpsl
mov
push
lret
cmpsb
push
test
mov
mov
cmp
sbb
jae
test
adc
jne
adc
outsl
mov
push
push
or
sti
in
lock
movb
cmpsl
and
lahf
aaa
orb
sub
mov
add
fsubrl
aaa
and
dec
scas
adc
js
fildl
incl
dec
pop
fdiv
lds
pop
push
adc
dec
mov
push
and
xor
sarb
or
cld
mov
xor
adc
repz
fs
pop
dec
sahf
jmp
imul
mov
jb
aam
out
fiaddl
and
cs
adc
or
push
push
pop
add
roll
or
movsb
jbe
inc
nop
jne
icebp
lahf
sbb
repnz
fwait
loope
clc
loopne
jo
or
sub
mov
add
push
jecxz
fimull
notl
out
mov
mov
lds
les
cmp
push
imul
movsl
sub
insb
outsl
sbbl
push
xchg
pop
xchg
iret
test
out
sbb
push
add
jae
push
imull
arpl
pop
xlat
xchg
imul
frstor
pop
fimull
sti
sub
xchg
mov
adc
cmp
or
mov
push
hlt
into
pop
js
push
jle
dec
xlat
das
fcomps
inc
cmp
mov
cld
sub
inc
inc
js
call
les
mov
mov
pushf
outsl
orb
dec
repz
pop
mov
lret
jl
inc
sahf
mov
out
cmpsl
sub
mov
pusha
orps
lock
cmp
dec
std
enter
insb
test
or
or
xchg
or
int3
loopne
dec
clc
cmp
push
sub
or
sub
sub
sti
sti
cwtl
clc
adc
dec
ret
xchg
in
mov
mov
sub
popw
sub
repnz
add
jecxz
enter
jae
adc
dec
sbb
jb
mov
pop
inc
mov
pop
sbb
xchg
mov
cld
roll
jg
pop
dec
fs
ficompl
dec
addr16
mov
ja
sub
jge
sub
adc
aas
call
xchg
push
jne
sbbb
lcall
add
sub
push
xchg
inc
and
fldt
xchg
lret
ss
jb
sub
inc
jecxz
xchg
mov
push
fcompl
test
push
add
push
mov
xchg
out
and
mov
pop
sarl
dec
add
pop
ja
cmp
sbbb
dec
push
rcrb
inc
push
imul
popf
aad
fidivs
nop
insb
rcrb
movl
xchg
rolb
push
ja
ret
imul
jb
sbb
or
inc
mov
cmp
dec
sub
test
aas
xorb
in
xchg
xchg
sti
and
imul
pusha
jnp
pop
in
dec
pop
shl
xchg
cmp
push
mov
mov
adc
jo
into
ficoms
pop
hlt
mov
fcompl
jp
inc
loope
dec
mov
enter
movsl
out
jno
repz
mov
pushf
sahf
adc
ds
std
xor
sub
cmp
fwait
hlt
lcall
mov
mov
iret
int3
ds
insb
and
nop
push
iret
mov
fmul
fs
ljmp
stos
rorl
bound
jge
imul
dec
pop
mov
jg
xchg
fstpt
cmpsb
in
shr
lock
pop
and
cli
or
ret
dec
loop
cwtl
push
jl
pusha
or
inc
mov
test
pusha
daa
xchg
pop
cmp
pushf
xchg
lret
cs
idivb
lods
orb
xchg
out
push
ret
mov
lea
int
pop
push
mov
mov
xor
add
pop
movsb
iret
ja
test
lea
push
dec
jmp
ss
mov
mov
aad
lea
mov
xchg
mov
mov
cmpsl
icebp
daa
jno
dec
js
int
ret
or
rcrb
dec
xor
push
dec
dec
xchg
ja
loop
push
pop
mov
pop
push
or
sbb
mov
rcll
mov
pusha
out
ds
adc
fdivr
sarb
shll
push
push
dec
insl
fiaddl
ds
arpl
imulb
jge
bound
scas
int
incl
xor
add
push
mov
shl
mov
fisttps
fimull
push
sbb
jnp
mov
dec
orb
jle
insb
cmp
or
dec
xlat
in
mov
add
dec
cmp
cmp
xchg
cli
and
ret
mov
out
or
fdivl
cmpps
aam
adc
sub
xchg
in
cmp
or
ficoml
inc
inc
sub
pop
lock
shr
jge
cs
pop
sarb
dec
cld
dec
cmp
fwait
xchg
std
or
adc
rolb
mov
mov
loop
in
scas
cmp
clc
push
js
dec
in
fsub
xchg
incb
sub
add
mov
outsb
imul
rsm
sbb
shlb
mov
shlb
pop
aad
or
pop
mov
jno
rorb
push
dec
cmpsb
mov
mov
fimull
lods
adc
mov
add
hlt
fbld
or
jmp
push
or
pop
clc
call
sub
mov
iret
fsubrs
fstp
imul
enter
cmpsb
mov
jns
repnz
bound
adc
sub
je
mov
mov
add
sub
xchg
shlb
popa
sub
popf
cmc
cmpsl
push
fxch
pop
pushf
js
push
aas
jl
pop
dec
xchg
xor
cmpsb
pop
mov
push
or
push
xchg
push
mov
mov
push
or
mov
push
in
aad
sahf
mov
sub
test
push
cmp
test
nop
test
mov
dec
in
sbb
cwtl
lcall
add
push
push
in
je
adc
dec
and
cmp
cmp
fbstp
xchg
ret
cmp
jo
and
lret
push
or
xor
xchg
jl
faddl
mov
cmc
pusha
jno
test
xchg
insb
sub
xor
movsl
inc
push
mov
bound
sbb
das
leave
xor
pushf
rorb
cmp
and
and
cmp
icebp
mov
or
subl
sbb
and
daa
dec
loope
adc
add
loope
imull
jmp
ss
push
or
sub
pop
stc
push
dec
out
push
mov
movsl
out
ffreep
fxch
cmp
sbb
jp
nop
sub
ret
iret
fwait
scas
into
iret
int3
inc
add
xchg
jl
pop
shl
in
sbb
mov
pop
fisttpll
sub
mov
mov
popf
ss
aas
and
jmp
cltd
jl
jle
dec
fucomp
xchg
cltd
dec
jne
mov
scas
sub
xchg
sub
pminub
pop
cmp
fldl
pop
iret
adc
mov
addl
lods
pop
pop
ja
adc
sub
mov
jg
cmp
into
pop
inc
xchg
pop
lods
fisubrl
and
into
jb
jmp
rcl
push
xchg
xchg
movsb
pusha
add
mov
push
shrl
popf
add
or
sub
and
les
pusha
cmpsl
insl
inc
sbbb
push
xlat
and
jg
decb
insb
cs
dec
imul
orl
xchg
test
adc
add
mov
cmpb
outsb
lea
cs
icebp
data16
scas
and
inc
imul
outsl
xchg
enter
jbe
add
les
sub
or
jnp
sti
add
cmp
jecxz
ljmp
jnp
roll
pop
push
ret
sub
cmc
xor
lahf
mov
shl
sti
lods
arpl
mov
inc
cmpsl
fmuls
mov
sbb
jmp
inc
xor
adc
mov
in
mov
inc
inc
jle
out
and
cli
out
arpl
iret
test
mov
repz
je
sti
scas
int3
iret
dec
jecxz
das
push
adc
stc
adc
addr16
scas
inc
lods
dec
imulb
jl
cmp
mov
dec
cld
sub
pop
push
outsb
pop
mov
in
subb
mov
add
sbb
je
or
sbb
inc
idivl
out
movd
jg
and
xor
pop
cmp
into
dec
das
fildl
minps
les
sub
pop
dec
popa
lock
js
adc
jp
jo
and
pop
bound
pop
mov
addr16
push
add
arpl
mov
jnp
adc
lods
subb
inc
cltd
clc
movsb
and
and
mov
test
or
sub
hlt
sub
cltd
mov
jbe
icebp
xchg
mov
mov
pop
mov
aaa
bound
mov
adc
jmp
xor
lret
mov
das
iret
jbe
mov
andl
stos
loop
stos
pop
adcb
stos
mov
push
cmp
fwait
mov
andb
aaa
xchg
dec
data16
pcmpgtw
shl
incl
aaa
or
cld
jo
jmp
push
les
repnz
push
push
xor
sub
or
add
mov
lods
sub
or
mov
and
lret
jecxz
lret
repz
icebp
adc
loop
jge
std
pop
xor
xchg
xlat
or
xor
jno
push
aaa
add
jae
push
movsb
push
lock
jbe
xchg
aaa
and
and
sub
cmp
sbb
movsb
mov
add
cltd
arpl
inc
adc
stc
mov
jno
movsb
and
out
jp
mov
addr16
ror
ja
xor
daa
mov
pop
mov
repnz
dec
hlt
dec
std
cmp
inc
adc
in
lahf
call
es
cs
jecxz
testb
xor
cmp
mov
or
and
mov
mov
mov
jae
jo
jp
jl
xor
out
scas
pop
mov
or
add
pop
push
cwtl
test
mov
push
test
shrb
bound
ficompl
cld
mov
xchg
out
xchg
int3
mov
inc
in
scas
test
aaa
ljmp
pop
dec
fucomp
pop
aaa
mov
xchg
inc
scas
jge
push
mov
repnz
mov
jb
mov
insl
mov
mull
repnz
call
fwait
popf
xor
cmpsb
sub
cwtl
adc
stos
icebp
sub
mov
das
ja
sbb
ja
faddp
sbb
cmp
sbb
cmp
and
adc
loope
sarb
adc
mov
ret
push
xor
jae
je
lahf
mov
sub
and
pop
jle
arpl
outsl
das
clc
imull
inc
xchg
adc
jg
iret
push
fwait
mov
mov
lahf
sub
pop
arpl
fnstsw
mov
rsm
imul
pop
sub
and
imul
mov
dec
inc
les
xlat
xor
movsb
popf
imul
mov
loop
cli
int3
cld
jb
fimull
imul
xchg
jno
jb
aaa
loope
sbb
clc
in
pusha
pop
xor
fidivl
push
jmp
or
stc
or
cs
jecxz
out
push
cltd
lahf
xor
xchg
push
inc
jmp
cmp
sub
mov
jne
out
daa
xchg
sbb
push
sub
fbstp
sti
ret
jnp
mov
adcb
mov
lahf
ljmp
mov
adc
mov
mov
dec
sub
push
or
jmp
addl
clc
divb
in
test
fcmove
out
aas
call
jecxz
inc
out
addr16
decl
xchg
mov
addr16
cli
jno
jns
push
mov
jle
push
xchg
pop
inc
pop
movsb
imul
cli
xchg
repnz
add
fadds
sub
inc
push
sbb
ja
lcall
stos
das
scas
inc
jle
adc
cmp
or
loopne
dec
in
shll
mov
adc
int3
adc
jbe
jb
sub
outsl
xchg
dec
push
add
sarb
and
ljmp
aas
int
sub
mov
inc
jl
popf
xchg
cmp
lret
es
fisubs
jns
mov
js
push
xor
sbb
fidivl
pop
inc
mov
xor
dec
aaa
adc
sbb
loope
inc
mov
in
arpl
test
mov
icebp
push
movsb
push
jmp
dec
sub
pop
pop
lock
in
xor
cmp
imul
ds
and
jnp
lcall
movsl
adc
or
sub
aas
adc
lret
shrl
idivb
jno
dec
pop
xchg
popf
xorl
adcl
and
add
pop
movsb
mov
jge
push
cs
int3
addl
mov
dec
sub
cmp
sbb
out
pop
popf
sbb
xchg
and
cmc
cmpsl
mov
pop
xor
or
jnp
lods
jae
scas
cli
mov
nop
adc
imul
jbe
or
xchg
mov
push
imul
xor
pop
gs
mov
outsl
inc
jnp
inc
bound
imul
cltd
inc
cmp
dec
lds
aas
mov
mov
sub
pop
jae
push
xchg
mov
dec
sub
add
inc
xchg
jmp
popa
insb
icebp
inc
and
andb
and
repz
shlb
sbb
ficompl
xchg
lods
mov
mov
mov
inc
arpl
mov
popf
notb
push
mov
inc
mov
int
aad
sbb
mov
xchg
cmp
cmpl
daa
dec
icebp
jle
dec
out
lahf
pop
push
xchg
sub
mov
shrl
lods
scas
iret
aas
popf
pop
push
jecxz
mov
jns
jbe
jmp
push
movl
enter
mov
movsb
sub
add
pop
mov
fimull
jecxz
xor
or
sbb
jmp
movb
jp
mov
sarb
xor
nop
adc
scas
ret
add
push
jle
icebp
cwtl
mov
inc
xlat
shll
xchg
ds
ret
xchg
or
cli
add
cmc
sti
mov
aad
outsb
push
inc
push
dec
mov
scas
cmpsb
ret
sub
shl
cltd
push
cmp
aam
aaa
xor
subb
pop
dec
mov
ja
insl
push
and
iret
dec
mov
jp
iret
fdiv
sbb
push
mov
mov
mov
pop
xchg
int
inc
js
es
adc
mov
popa
sbb
repz
and
xchg
push
xchg
in
jnp
arpl
cmp
or
cmp
xchg
push
xchg
add
inc
or
push
mov
aaa
cmp
roll
cmp
pop
out
in
fwait
lret
inc
in
lret
mov
popl
and
adc
fs
jb
rcrb
test
push
int3
jne
or
aam
mov
adc
rorl
cmp
dec
jg
xor
aaa
cmp
hlt
popf
mov
inc
inc
jge
sub
dec
lret
mov
push
pushf
addr16
adc
repnz
sbbb
lahf
ds
das
movsl
jno
inc
mov
inc
lret
dec
jae
out
jl
dec
inc
or
dec
push
adc
push
mov
xchg
addps
cmp
dec
insl
stc
dec
lret
push
pop
mov
test
jb
and
pop
call
scas
loop
push
mov
pop
cmpsl
popf
std
fst
xchg
mov
call
mov
xchg
mov
cwtl
shll
sub
insb
jecxz
mov
pop
inc
retw
fimuls
mov
push
loope
fwait
lcall
fbld
ljmp
and
movups
pop
mov
les
gs
imul
pop
push
cltd
mov
xor
adc
or
hlt
jge
inc
xchg
dec
addr16
mov
imul
loop
aaa
pop
ret
jno
or
bswap
sbb
add
insl
push
ja
in
inc
adc
lret
sbb
jo
lcall
mov
mov
bound
imul
push
call
out
cltd
out
sbb
jl
sarb
scas
pop
mov
add
lcall
xchg
loop
pop
jbe
aad
lret
test
out
mov
xchg
add
mov
scas
fisubl
cli
jbe
lods
sarb
fildll
jg
mov
inc
mov
add
jle
sbb
mov
mov
pop
push
cmp
out
push
out
insl
add
sti
scas
add
insb
push
test
mov
loopne
jb
pop
movsl
xchg
dec
jnp
outsl
pushl
scas
test
jmp
xchg
push
and
jle
scas
or
mov
jl
mov
mov
ljmp
jecxz
jl
bound
aam
add
adc
adc
mov
cltd
push
mov
pop
xchg
jb
popf
mov
sahf
adc
fwait
cmc
jnp
inc
std
mov
xchg
xchg
inc
adc
xor
dec
pushf
inc
in
shl
push
cmp
andb
mov
loopne
mov
mov
sti
xchg
sti
dec
xchg
or
out
push
and
das
int
rcr
mov
add
or
in
shrb
push
xchg
movsl
sti
add
mov
and
dec
lods
xor
pop
pop
and
jae
xchg
mov
mov
dec
clc
iret
or
aas
mov
pusha
setne
imul
lock
fsubrs
pop
sub
push
fsts
xor
popa
push
adc
je
mov
dec
cmpsb
int3
inc
xchg
or
jg
fsts
fcmove
push
icebp
fimull
dec
insb
add
test
add
clc
xor
mov
jno
mov
jge
pop
xor
inc
rcrb
sbb
or
push
das
mov
mov
cmpl
mov
xchg
cmpsl
loopne
pop
xchg
inc
cli
dec
fimull
sub
and
sbb
xor
icebp
aas
mov
inc
pop
in
in
mov
mov
fldt
gs
mov
pusha
div
clc
sti
mov
pop
enter
add
js
ja
lock
dec
iret
std
cmp
jge
test
push
popa
sbb
xchg
call
arpl
sahf
sbb
bound
rcll
pop
push
out
cmp
aam
loopne
xor
sub
mov
in
pop
and
pop
fsubr
ss
jbe
sahf
xchg
nop
es
sbbl
mov
and
outsl
stc
mov
arpl
ret
rorb
icebp
mov
mov
imul
jg
lds
mov
xchg
inc
mov
push
mov
jo
mov
adc
pop
cmp
insl
call
jae
movsb
mov
lahf
out
rcrb
arpl
jmp
mov
jmp
cld
movsl
hlt
nop
lock
daa
cmp
xor
ss
lock
push
cmp
inc
mov
or
cwtl
out
push
stc
pop
bound
mov
inc
sub
xchg
jp
mov
inc
andb
ret
jbe
cmpl
test
scas
mov
icebp
sbb
xor
call
sub
nop
mov
pusha
das
ds
mov
xor
lcall
adc
imull
inc
mov
cmp
jne
dec
mov
add
jno
sbb
scas
mov
popa
cmpsb
pop
enter
sub
sbb
repz
movsl
cmp
in
imul
mov
pop
pop
gs
aam
add
aad
jp
adc
cli
xor
inc
daa
adc
inc
jl
xchg
sbb
jae
push
int
mov
sub
imul
repz
movsl
std
cmp
pop
ret
sbb
mov
fsubs
lods
jnp
sbb
hlt
cmp
push
add
jl
inc
and
xor
adc
sti
mov
xchg
push
push
dec
pop
lcall
dec
insb
mov
fnsave
xchg
scas
je
pop
mov
aaa
enter
sub
mov
inc
mov
outsb
mov
pusha
dec
mov
fsubr
cmp
pushf
lret
or
jo
xchg
push
push
and
in
dec
jp
jl
push
dec
adc
xlat
dec
adc
push
daa
xchg
scas
adc
lret
push
add
test
jecxz
push
mov
inc
or
daa
sub
sbbl
sti
fwait
push
fnsave
jb
int3
outsl
push
std
push
and
xchg
adc
fcmovnb
out
mov
ret
pop
loop
pop
clc
or
ljmp
cmpsl
aaa
sub
xor
jne
jne
mov
popa
or
mov
js
nop
cmp
jo
nop
mov
rol
mov
xor
sub
cmpb
add
in
in
gs
mov
push
jmp
add
push
js
cmpl
scas
data16
iret
insb
mov
adc
in
push
and
scas
xchg
adc
arpl
xor
inc
fistpl
gs
pop
sbb
movsl
test
out
pop
movsb
mov
rol
sbb
inc
mov
and
mov
and
fcmovnb
push
dec
clc
push
dec
lcall
push
insb
xor
hlt
imul
nop
lods
inc
ljmp
js
cmp
pushf
orl
ret
xlat
pop
inc
dec
rcrl
jno
dec
mov
out
stc
jae
out
xchg
imul
addl
clc
pop
lcall
movsb
jl
sbb
add
sub
out
test
lahf
cmpsl
addb
loopne
clc
push
jp
js
ret
add
loopne
das
inc
inc
sub
outsl
add
idivl
insb
cmp
pop
xchg
std
enter
dec
imul
cli
sbb
inc
aaa
stos
pusha
es
inc
leave
cmpsb
jnp
repz
stos
test
repz
es
sub
mov
cltd
je
push
add
jb
addr16
xor
iret
scas
repz
cmpsl
out
mov
insb
in
jnp
lcall
fs
xchg
js
and
mull
je
sti
mov
mov
push
lea
mov
inc
mov
push
std
sahf
data16
repnz
arpl
addr16
iret
and
les
outsb
pop
cmp
aaa
movsl
xor
jge
add
jbe,pt
mov
or
and
outsb
ret
add
fildl
mov
test
popa
cs
push
add
push
fidivs
dec
pop
mov
jo
or
pop
stos
cwtl
adc
data16
dec
mov
mov
jmp
lret
adc
mov
stos
negb
xchg
mov
pop
mov
inc
fwait
ds
pop
lods
add
mov
insb
sub
lock
test
hlt
jo
ljmp
pop
enter
pusha
jecxz
iret
cmp
push
lahf
ss
daa
and
dec
xchg
aas
sbbl
dec
fnstcw
lahf
iret
int3
lods
push
add
inc
push
add
pop
loopne
dec
fisubl
add
pop
addr16
or
dec
sbb
sbb
ja
pop
fdivl
and
mov
add
jno
add
mov
add
inc
push
test
scas
push
in
mov
inc
jno
test
xchg
adcb
jne
inc
data16
subl
jmp
add
push
pop
sbb
push
jmp
les
imul
mov
fcoml
pusha
mov
mov
sub
dec
mov
push
addr16
int
add
xchg
in
dec
mov
adc
or
inc
pop
jne
cmp
xor
fs
dec
scas
inc
xchg
das
aas
aaa
mov
mov
cmp
stos
adc
cwtl
adc
push
lret
fwait
imul
das
adc
xchg
lahf
cmpsl
out
repnz
push
mov
xor
call
inc
lret
cmp
jns
dec
jmp
xlat
outsl
xchg
aad
sbb
jle
push
or
mov
inc
into
das
xor
out
or
lea
hlt
cmc
jecxz
aaa
cmp
mov
cmpsl
sub
mov
dec
imul
iret
paddsb
clc
cmp
and
in
push
in
cmpsl
cmp
int3
lods
popf
mov
sbb
xchg
daa
arpl
xor
sub
inc
sub
cld
arpl
ss
pushf
daa
sub
or
xchg
ret
jne
addb
lods
push
xchg
cmp
js
mov
push
outsl
enter
cld
cmp
pop
cmp
jle
lret
rolb
jne
pop
movsb
pop
inc
enter
push
inc
cmp
pop
ret
ret
ja
mov
add
loope
aad
clc
mov
inc
lea
mov
mov
push
or
pop
mov
iret
xor
lret
xor
das
jbe
mov
lahf
mov
inc
push
dec
cwtl
jmp
lock
and
pop
aad
mov
mov
movsb
push
jmp
xchg
jns
lea
sbb
incl
jbe
xchg
xor
lds
stc
adc
sar
clc
sbb
enter
mov
call
mov
mov
pop
cld
xchg
fbstp
or
and
imul
data16
mov
cmp
xchg
dec
mov
fs
push
out
and
or
inc
ja
repz
aam
lcall
adc
test
outsl
xor
daa
int
cmp
push
inc
dec
cmp
sarb
adc
xchg
data16
mov
mov
pop
dec
mov
jo
xchg
cltd
inc
add
mov
push
ja
xchg
jecxz
loope
dec
mov
loope
pop
inc
outsb
mov
cmp
mov
mov
cmp
push
decb
daa
push
fbld
mov
lahf
lods
pop
mov
fs
js
xchg
arpl
or
pop
fbld
xchg
xlat
stc
adc
bnd
sub
push
sbb
cmp
jae
push
mov
call
arpl
stos
xchg
sbb
xlat
lret
in
pop
sub
sbb
cli
adc
dec
aaa
or
loopne
and
cmovnp
push
jle
push
cmpsl
cmp
out
iret
mov
jae
js
push
jmp
mov
sbb
push
les
inc
or
rcll
xor
cmp
mov
mov
int
pop
cmp
push
inc
or
push
ja
xor
push
dec
fmuls
mov
lods
iret
mov
dec
ds
mov
ds
or
add
inc
lcall
mov
mov
ss
mov
imulb
arpl
inc
aam
mov
pop
jo
mov
mov
lret
mov
add
push
pusha
lret
ret
cmp
repnz
mov
mov
xchg
inc
adc
push
in
push
mull
ss
out
pop
push
stc
pop
mov
clc
jnp
adc
mov
cmp
int3
cmpl
sbb
fwait
decl
and
lcall
cld
arpl
cmpsl
rcrl
mov
out
mov
arpl
int3
push
cmp
adc
and
sub
jge
movsl
insb
add
repz
sub
outsl
ds
outsl
mov
fstpl
je
xchg
push
sbb
inc
leave
xor
roll
xchg
mov
arpl
mov
pusha
jb
mov
pushf
jle
imull
add
sub
jns
dec
or
jbe
inc
sub
cmp
cmp
add
cmpsb
fistps
fcoml
test
ljmp
xchg
push
mov
das
pop
and
in
mov
inc
repnz
aaa
pop
mov
int3
pop
mov
movsb
cld
mov
aas
shr
mov
xchg
addl
daa
lods
mov
fucomip
je
fwait
popa
nop
mov
pop
mov
arpl
push
iret
adc
stos
sbb
cmp
imul
jns
xlat
outsb
test
sub
cwtl
sbbb
xor
inc
arpl
cli
jl
inc
lock
xchg
xchg
notl
adcl
loopne
or
les
shll
out
jecxz
jno
aas
mov
pushf
pop
xor
jae
push
pop
pop
jae
out
pop
push
cwtl
jecxz
sbb
dec
xor
add
or
aas
aas
aaa
push
mov
sbb
pusha
out
in
jbe
mov
jnp
jmp
push
push
addb
adc
add
ja
mov
add
mov
push
cmp
jnp
and
shll
test
or
xlat
cmp
xchg
in
or
pop
fnstenv
and
imul
scas
sub
inc
gs
jo
jmp
in
mov
or
and
xchg
outsl
jp
out
lds
push
inc
roll
inc
test
mov
sbb
sbb
mov
popl
enter
loop
in
arpl
shlb
or
ljmp
push
iret
mov
loope
or
jg
fiadds
js
pusha
cmpsl
xchg
cmp
in
sub
subb
sub
lahf
mov
loop
shrb
inc
cld
insb
mov
add
or
jae
popf
mov
adc
push
jecxz
inc
mov
cmc
filds
mov
jnp
add
mov
adc
push
pop
int3
lcall
cwtl
fadds
stos
aaa
inc
stos
daa
cmp
mov
cli
in
push
ficompl
jo
xchg
outsl
push
sub
adc
test
int
ljmp
mov
out
xlat
push
out
mov
rcrb
push
and
shl
out
xor
popa
std
xor
daa
push
sbb
pop
psllq
inc
fistl
jl
push
pop
jae
xchg
cmp
lods
xchg
mov
in
mov
fisttps
mov
mov
sbb
rclb
or
jne
lahf
outsl
mov
mov
pop
dec
enter
jbe
jbe
push
ret
nop
pop
stos
pop
cmp
fwait
leave
jno
lods
lahf
add
xchg
in
mov
jo
xor
cld
pop
out
push
dec
xchg
xor
ret
pop
or
mov
jne
out
mov
fsubrs
int3
push
mov
inc
loop
les
jbe
xchg
mov
or
add
push
nop
sahf
ja
push
xchg
sbb
bound
jmp
sbb
cmp
jl
cld
adcb
xchg
pop
jns
dec
and
jp
jo
xor
aaa
loope
neg
ds
imul
push
inc
hlt
xor
dec
cmp
psubsb
out
ret
jp
sbb
int
dec
les
xchg
imul
cmp
inc
dec
pop
adc
push
xor
cmp
xchg
lret
aaa
add
push
xor
mov
pop
xlat
ret
adc
in
ret
sbb
inc
xor
lods
and
mov
and
fistpll
push
jae
popa
mov
cmc
add
push
outsl
add
ret
pop
adc
sub
xor
ret
fldenv
fildl
jb
ret
clc
je
stos
popf
mov
std
inc
sbb
sbb
mov
xchg
pop
sbb
scas
std
test
jae
gs
arpl
mov
mov
mov
adc
inc
popa
or
fs
mov
xchg
ss
push
sar
and
out
jne
fists
clc
lcall
cmp
repz
cmp
jnp,pt
dec
mov
dec
jle
fdivrp
mov
xchg
mov
cwtl
mov
mov
cwtl
inc
roll
fwait
dec
shll
stos
decl
shrb
mov
jle
jg
scas
aas
push
mov
out
das
mov
mov
std
les
add
bound
mov
mov
dec
imul
xor
sahf
inc
dec
sbb
mov
call
pop
push
push
dec
int
shlb
dec
sub
xchg
shlb
inc
cmpsb
aam
cld
mov
xor
xor
or
dec
ret
sub
push
nop
into
sbb
fs
cli
les
xchg
cld
imul
ficomps
push
cmp
mov
fistl
sbb
test
mov
pop
jne
cmp
mov
sbb
sbb
and
lea
jo
inc
inc
jle
dec
xchg
lock
pop
pop
filds
test
insb
js
mov
out
and
jbe
sbb
cltd
mov
out
int3
cmp
or
scas
jb
in
pop
push
lahf
sub
pop
hlt
pop
jmp
test
cmp
shr
sbb
iret
mov
jmp
out
or
pop
fisubl
fs
lock
das
adc
push
test
jbe
and
add
and
pop
inc
mov
ss
or
add
mov
mov
sbbb
fidivrl
or
add
pop
sub
fstpt
lret
aam
sar
jecxz
lret
fsubrl
sub
mov
dec
rcl
push
cmp
cli
mov
xor
cmpsb
pop
into
fstpt
dec
jno
mov
fnstcw
imul
test
jle
fcomps
psllw
and
repnz
pop
mov
mov
bound
push
cmpsl
loop
out
dec
mov
pop
cs
pop
pop
lahf
cmp
cld
adc
insl
cmpsb
pop
test
lock
or
aaa
sbb
lods
xlat
sbb
in
pop
mov
fldenv
or
cmpsl
pop
mov
xor
jle
pop
mov
and
adc
dec
mov
sarl
in
loopne
cmpsb
push
outsb
or
pop
es
imul
push
jl
xor
gs
jecxz
sar
fnsave
xor
fiaddl
xor
pop
mov
pop
or
fwait
sbb
lahf
and
sbb
mov
lock
enter
inc
pop
inc
stos
cltd
ss
and
rcr
mov
xchg
push
add
add
shl
jg
imul
xchg
push
daa
rcll
fcoml
xlat
gs
xor
push
push
mov
lods
into
mov
push
dec
imul
sub
xlat
mov
sbb
cmp
out
dec
add
pushf
loope
cmc
repnz
pop
scas
mov
mov
lods
inc
out
fdivs
jno
test
data16
push
rclb
jge
sub
shrl
sub
shlb
mov
in
push
lcall
fiaddl
outsl
adc
and
sbb
or
mov
out
jmp
mov
rcrb
aad
push
adc
mov
mov
vcvtdq2pd
dec
movsb
shlb
das
fstl
xchg
movsb
mov
ret
leave
or
lods
mov
dec
fbld
shrl
push
pusha
sub
push
out
aam
and
xor
pusha
add
scas
push
cld
cmp
push
xchg
lahf
cmp
mov
out
dec
out
cmp
out
jnp
mov
or
mov
add
dec
sub
or
into
xor
mov
inc
negl
fldt
xchg
into
push
stos
mov
aas
repnz
js
xchg
sar
jnp
push
mov
daa
or
faddp
sarb
shll
and
jno
imul
or
in
incb
inc
mov
cmp
test
popa
clc
movsb
lods
insl
cmpb
cmp
icebp
push
xlat
sbb
dec
cs
shr
imul
mov
mov
jno
lock
mov
popa
sahf
jb
out
clc
jge
fs
cltd
popf
mov
jae
mov
in
mov
cmpsb
xor
adc
repnz
insl
cltd
xchg
negl
mov
sbb
or
lcall
pop
lahf
mov
mov
les
mov
std
fwait
mov
adc
pop
pop
imul
jmp
push
xor
stos
sbb
mov
adc
mov
lret
hlt
imul
js
fisttpl
cltd
lock
scas
jns
or
inc
lea
xchg
jo
repnz
ss
jl
lret
sub
pop
fildll
movsb
enter
push
ror
fdivr
cwtl
sub
mov
clc
sbb
loopne
push
mov
xor
mov
cmpsb
xchg
xlat
cmpsl
call
ret
int
dec
fistps
push
fwait
je
fildll
mov
xor
sbb
movsl
push
lods
clc
jnp
sub
mov
rcll
rcll
sbb
outsl
jmp
lret
into
and
xor
sub
inc
xchg
outsb
xchg
pop
int
mov
mov
out
pop
jecxz
mov
test
jg
cmp
and
mov
xchg
pop
out
or
and
mov
adc
sub
jmp
rorb
ljmp
mov
mov
sahf
dec
jno
sarl
push
mov
sbb
dec
jne
repnz
xor
arpl
iret
jb
cmp
push
push
cmp
sub
fwait
lods
int
jmp
inc
dec
lcall
fistl
test
movsb
sbb
push
rcl
lcall
out
enter
lock
jb
mov
inc
pop
cmp
dec
adc
pop
and
jno
push
fsubs
push
sbb
movsl
fisttpll
mov
shlb
xchg
jg
ja
xchg
adc
testl
add
or
mov
xor
jle
pop
rclb
clc
add
test
in
xor
mov
loopne
iret
adc
ljmp
lods
daa
scas
mov
mov
shll
cmp
andl
gs
dec
sbb
mov
gs
insb
fiadds
cmp
mov
push
or
int3
iret
push
cmp
in
bnd
add
adc
stos
dec
rcrb
push
mov
ja
mov
jmp
mov
ja
lret
hlt
fucomp
fucomp
sub
loope
jmp
mov
mov
es
insb
cli
mov
cmpsb
ss
das
fsubrs
cmp
clc
js
pop
add
imulb
dec
xchg
scas
push
shll
sub
leave
loop
mov
cmp
call
out
add
icebp
pop
and
and
jbe
xchg
mov
lock
jp
pushf
mov
jo
fnsave
enter
mov
jmp
xor
jno
dec
aad
adcb
mov
inc
push
sti
enter
sub
pop
pop
addr16
add
jle
add
pushf
daa
cmpsl
fiaddl
cs
cmp
ret
sub
out
mov
lea
mov
jnp
dec
aad
outsb
cmp
mov
pop
mov
dec
mov
mov
sbbb
dec
jmp
inc
add
in
sahf
sahf
into
aad
stc
push
in
aas
fiadds
cmp
and
xchg
xor
pop
and
cmp
pop
cmpsl
test
cli
pop
imul
gs
iret
in
fstl
pop
notl
push
sub
jnp
cld
sub
mov
inc
cmp
pop
ret
pop
subl
out
cmpsl
inc
mov
push
mov
and
fsub
and
sahf
scas
push
sbb
in
mov
xor
testl
and
inc
shlb
mov
mov
in
xchg
mov
and
sbb
and
jp
icebp
jecxz
out
jge
push
lahf
cli
push
jbe
sti
subl
shrl
cltd
cmpsl
adc
packuswb
sbbb
popa
insb
shlb
je
icebp
hlt
cmp
mov
nop
out
push
and
add
pop
pop
repnz
lahf
daa
ficoms
loop
in
push
sbb
inc
lea
inc
aad
addl
int
dec
adc
pop
shlb
shrl
jle
xchg
rcrb
add
das
jae
cmp
loop
sbbl
in
lds
adc
test
xchg
cmc
test
ja
hlt
jmp
pop
push
cmp
and
sub
mov
dec
out
push
mov
lahf
adc
daa
pop
sbb
adc
test
jb
dec
xchg
addr16
ret
mov
sub
mov
pop
sbbl
out
fildll
push
das
mov
push
pop
stc
mov
and
push
dec
push
fistl
fldl
push
icebp
push
iret
iret
add
push
xchg
add
inc
stos
test
cli
out
repz
sete
jge
ljmp
cmp
and
dec
in
clc
push
das
sbb
jns
pop
push
jno
mov
jle
call
aas
adc
jecxz
shr
adc
dec
dec
mov
sbb
ficomps
or
add
ds
dec
push
add
add
inc
int
xor
or
cmpsb
mov
out
jae
bound
out
pop
arpl
ds
shlb
nop
mov
bound
movsl
outsl
mov
imul
repz
mov
das
pop
loope
mov
out
rclb
lret
fs
test
in
pop
call
push
outsl
sarl
sbb
fadds
outsl
pop
add
fmuls
hlt
mov
and
sub
std
fsubl
mov
orb
or
push
icebp
jne
pop
idivl
cmpsl
into
in
or
aam
sub
int3
push
sahf
push
adc
fsubrs
popf
inc
icebp
xor
sub
sti
cmpsb
adc
mov
clc
xor
int3
add
js
jnp
sub
pop
imul
xor
and
notb
sti
mov
inc
int
in
sub
dec
cmp
mov
and
int
mov
jno
orb
and
mov
jp
pop
cmp
outsb
inc
mov
out
mov
push
jb
clc
stos
mov
inc
scas
mov
lea
adc
js
sbb
add
jmp
push
xor
adc
icebp
repz
inc
je
les
push
mov
ds
mov
pop
cmp
push
mov
aam
fdivrp
loope
jmp
dec
adc
inc
mov
mov
movsl
cmp
cmp
cld
enter
xchg
aas
js
ficomps
cmp
pop
mov
jae
xchg
mov
repnz
adc
arpl
jg
clc
call
in
jl
cld
into
xlat
xor
push
bound
adc
mov
pop
jecxz
pop
adc
push
loopne
ret
int
fnstenv
orl
sbb
loop
and
dec
push
imulb
movsl
dec
or
jmp
pop
into
push
mov
test
adc
imul
jb
movsb
outsb
in
arpl
sub
fdivrl
sub
push
lods
movsb
scas
xor
xchg
push
mov
arpl
inc
sbb
mov
data16
popa
and
aas
arpl
dec
ljmp
les
and
xor
push
mov
ret
stos
shlb
test
jge
icebp
xchg
sbb
mov
lea
cmp
dec
test
ljmp
inc
dec
mov
xor
fbld
jne
sbb
loop
dec
leave
xor
mov
xchg
mov
cmpsb
push
stos
mov
jo
sub
loopne
mov
add
pop
adc
cmp
addr16
mov
call
imull
inc
xor
jmp
mulb
dec
fiaddl
adc
jle
adc
mov
push
and
jg
arpl
cs
pop
sbb
cmp
push
dec
cli
popf
icebp
aad
inc
dec
dec
jle
lds
add
stos
adc
mov
jne
cmp
pop
fnstenv
inc
sub
push
mov
outsl
or
jge
cmp
stos
in
incl
push
or
sbb
add
imul
cmp
add
lcall
icebp
inc
je
pop
aam
jbe
xor
cmpsl
and
sub
js
push
cmp
in
push
sti
subl
xchg
in
push
out
stc
or
test
sti
mul
mov
int
push
fnstsw
mov
aaa
pop
scas
lret
ss
sub
dec
mov
cli
jle
mov
sbb
dec
jp
jns
sbb
sub
mov
jbe
xor
enter
stc
adc
lds
mov
pop
notl
adc
mov
fmull
loopne
inc
stos
insb
mov
and
xor
es
jecxz
inc
sub
push
jmp
push
dec
dec
xlat
cwtl
jecxz
cmove
jmp
rcr
add
push
jbe
inc
aam
push
flds
cmp
popf
xor
jl
insl
mov
inc
nop
mov
pop
jmp
pop
repnz
rcrb
push
inc
mov
sbb
mov
aas
sbb
test
jbe
imul
mov
out
testb
xchg
or
and
outsb
insb
jo
push
in
iret
mov
inc
pop
stos
or
es
hlt
or
and
pop
mov
dec
je
xchg
mov
jns
push
stc
ret
mov
inc
das
lods
stc
pop
xchg
stos
popf
roll
jmp
mov
lea
push
out
ja
mov
in
push
loop
lds
mov
div
push
mov
cmp
push
push
or
scas
dec
out
mov
mov
in
lea
mov
sbb
repnz
pop
into
pusha
pop
sbb
in
out
pusha
mov
sub
xor
test
mov
push
test
loope
pop
xchg
push
jmp
addb
push
xchg
push
addr16
inc
cmp
jae
mov
mov
rcrl
jmp
sbb
push
test
pop
popf
or
xchg
imul
fsubrs
xor
push
lret
pop
jns
lcall
push
xchg
xchg
xchg
ljmp
shrl
dec
loope
dec
orb
inc
dec
xchg
repz
pop
sbbl
push
imulb
mov
cmp
inc
mov
sti
inc
pop
push
in
test
sbb
dec
inc
pop
mov
and
jmp
hlt
les
adc
mov
mov
mov
add
adc
dec
adc
xchg
cmp
in
test
sti
leave
adc
lahf
enter
jo
xor
pop
aaa
mov
mov
mov
pop
inc
xchg
repz
loop
mov
outsl
mov
in
and
push
jmp
jg
pop
loopne
add
pop
add
insl
mov
nop
mov
or
aas
dec
sbb
inc
loop
cmp
jg
and
and
ret
dec
xor
push
cmpl
cmp
adcl
pop
adc
imul
mov
arpl
dec
pop
clc
mov
popa
sti
xor
pusha
xor
cmp
inc
out
dec
loop
in
dec
lods
push
rcrl
sarb
sti
in
mov
adc
or
jnp
test
clc
jge
sbb
pop
fidivrs
scas
insb
xor
xchg
fsubp
js
or
pusha
test
cs
ret
or
test
or
mov
mov
leave
adc
mov
adc
dec
test
sub
cmpsl
add
iret
xchg
cmp
ret
ja
jae
mov
and
or
push
pop
sub
mov
jge
or
dec
xor
add
xor
dec
or
mov
mov
hlt
test
cli
insl
hlt
xor
shrb
jecxz
test
stc
mov
add
push
jb
iret
sub
movsb
repz
and
or
xchg
jmp
nop
xchg
popf
repz
shr
mov
repz
sbb
insb
jl
mov
sub
bound
adc
push
loopne
lret
pop
xlat
push
fsubrs
aam
sub
cs
push
addr16
mov
in
xchg
cmc
xchg
cmp
shrb
lcall
mov
adc
leave
cmp
out
dec
fcoms
push
cmp
fnsave
adc
je
pop
add
push
mov
sbbl
jnp
clc
xchg
scas
adc
add
or
jecxz
imull
lock
fstps
icebp
lahf
pop
xor
mov
jp
aas
lods
jno
cmpsl
mov
mov
mov
fisubrs
jle
mov
or
pop
sub
es
dec
push
push
pop
out
clc
jg
iret
push
sbb
cmp
cwtl
insb
orb
inc
sub
insb
xor
je
and
ja
aas
xchg
pusha
cwtl
imul
xor
mov
jle
mov
dec
shll
add
and
or
push
cmp
inc
push
mov
sub
lea
aad
jb
push
daa
xchg
pusha
cmp
das
test
sbb
jmp
and
pushf
ficomps
sub
inc
adc
insl
push
stc
mov
test
mov
mov
jmp
nop
xchg
aam
mul
lea
clc
adc
lret
cs
pusha
jecxz
pop
cli
in
mov
or
testl
pushf
or
cli
clc
mov
dec
jns
in
jle
push
adc
ret
iret
mov
xchg
push
add
jnp
dec
mov
jbe
pop
or
lods
inc
lea
adc
fisubl
xchg
sub
imul
mov
pop
cmc
cmc
jae
mov
dec
pusha
or
addl
out
jecxz
adc
out
jge
insb
out
and
imul
loope
mov
negb
jle
inc
xlat
call
and
lea
xchg
cmpsl
icebp
in
or
adc
mov
cmp
jmp
pop
insl
ficomps
dec
shlb
scas
adc
push
adc
and
loope
mov
xchg
jl
shlb
scas
pop
mov
xor
test
mov
stc
sar
mov
aam
push
and
xchg
ljmp
mov
cmp
test
out
mov
mov
lahf
test
repnz
cmp
inc
ds
dec
popa
mov
shrb
out
out
pop
ja
dec
mov
mov
les
and
out
in
lcall
push
jl
inc
cltd
jns
inc
ret
add
jmp
add
mov
cld
mov
or
cmpsb
bound
push
lcall
dec
cmp
jmp
es
sbb
ficompl
lret
sbb
add
mov
sbb
push
fucomip
and
mov
adc
aaa
mov
test
dec
mov
sub
push
cwtl
out
add
test
push
outsl
aaa
adc
loopne,pt
xchg
fmul
ds
push
inc
mov
push
into
outsl
sbbb
loop
mov
in
mov
sub
mov
xlat
mulb
cmp
mov
pop
fwait
add
out
test
jbe
mov
adc
jecxz
mov
cs
adcl
insb
outsb
push
dec
push
aad
insb
xlat
pop
or
dec
mov
mov
mov
pop
push
push
jbe
sub
shl
push
pop
int3
ss
dec
sub
in
sbb
cmp
fcomp
hlt
sbb
jg
mov
and
cmp
mov
ljmp
inc
and
scas
movsl
dec
jb
and
insb
lahf
mov
call
jl
jno
mov
mov
cmpsb
xchg
mov
jg
adcl
xchg
mov
push
push
and
jle
pop
es
stos
ret
or
xor
pop
or
mov
ret
je
sbb
lcall
movsl
or
rcrl
dec
movb
sysret
push
sbb
test
lock
fidivrl
add
inc
jbe
bound
ret
lahf
fwait
push
shr
push
nop
sub
mov
les
outsb
outsl
adc
xchg
and
mov
push
mov
cmp
fstl
loopne
push
psubd
data16
add
push
arpl
dec
jb
sbb
insb
pop
dec
pop
es
mov
jbe
in
xchg
and
mov
cmp
and
aaa
jge
xchg
cs
stc
mov
jecxz
mov
xorb
inc
outsb
repz
ret
push
popf
cmc
ds
fildl
mov
mov
cmp
loop
xor
dec
mov
enter
shlb
pmulhw
cld
andb
add
loope
sub
mov
out
bound
inc
pop
mov
cmpsb
inc
fdivp
insl
sbb
out
push
and
cmp
fmull
jbe
jb
lret
push
and
cmp
sahf
hlt
mov
sub
or
std
ret
mov
push
int3
adc
lds
pop
ret
cltd
outsl
sbb
and
and
mov
xor
pushf
sarb
sti
mulb
movsl
lret
mov
adc
cmpsb
stos
loop
dec
lahf
fcompl
and
cld
ds
rcrl
test
mov
fwait
jle
pop
jno
push
jg
popa
addr16
stos
ss
bound
adc
sbb
adc
or
fidivs
pop
lcall
dec
sbb
ret
mov
out
fdivl
fadds
mov
fidivrs
fdivp
pop
mov
or
ret
adc
cmpsb
ja
adc
xchg
mov
lock
lret
das
mov
dec
push
pop
pushf
cli
rcl
push
xchg
stos
shr
ret
ljmp
sub
mov
inc
inc
icebp
out
es
jg
ret
sti
shll
rorl
dec
xchg
xchg
jno
ja
xchg
sbb
in
mov
cmpsl
and
sbb
stos
jne
cmp
push
lock
push
xchg
dec
cld
out
dec
nop
dec
les
je
sbb
jmp
pop
es
lea
mov
mov
sub
pop
jae
lret
mov
mov
fstpl
cld
dec
stos
pop
fldenv
loopne
sti
enter
and
pop
xor
subl
f2xm1
push
mov
adc
jge
xorb
adc
sub
insl
xchg
jl
inc
fs
cmpsl
mov
push
jg
and
imul
xor
cmp
sub
sub
rcrb
leave
mov
mov
ja
push
pushf
cmp
mov
rep
lods
out
fld
aad
aad
mov
push
es
inc
xchg
cld
arpl
and
stc
in
das
xchg
and
cs
pop
push
in
adcb
cmp
mov
int
inc
jp
mov
cli
into
push
mov
cmp
enter
inc
xchg
mov
jnp
enter
adc
lret
fs
mov
lods
mov
and
or
pushf
cld
cli
sub
mov
sub
int
clc
mov
dec
inc
xchg
fmulp
notb
mov
jmp
mov
inc
push
movsb
sbb
cld
mov
cmp
mov
cld
fsubrl
sub
mov
int3
out
inc
cmp
push
mov
and
push
lcall
mov
repz
sbb
jge
mov
xor
mov
or
mov
pop
scas
xchg
xor
stos
add
pop
pop
rep
jno
cmp
cwtl
sti
test
fs
adc
jle
inc
push
cmp
stos
enter
push
fistpl
xchg
jo
cwtl
push
out
sbb
dec
or
stos
inc
add
shrb
int3
push
and
repnz
stos
ljmp
popf
loopne
je
xor
mov
lods
cmpsb
pop
insb
scas
xor
dec
xor
xlat
mov
jl
repnz
lods
sub
pop
sub
add
sbb
js
pushf
sbb
test
add
sbb
dec
push
mov
pop
adc
xchg
xor
out
push
insb
add
inc
int
aad
dec
rcrl
mov
pushf
jmp
fs
out
push
aas
fcoml
jne
and
push
push
lahf
lock
fldt
mov
mov
ret
jbe
sub
fnstenv
mov
sbb
shl
xchg
mov
out
sub
das
and
push
xchg
and
test
push
mov
and
test
jge
push
cmpsb
popw
addr16
fisubl
cmp
pop
sub
sub
push
lcall
insl
fstpl
xchg
clc
popf
pop
iret
inc
int
dec
push
lret
in
xchg
data16
clc
push
adc
mov
sbb
aad
dec
adc
int
add
cwtl
push
push
out
push
xor
lods
inc
pop
sbb
inc
jne
bound
xor
xor
shrb
aas
inc
fnclex
out
fwait
and
cwtl
xor
mov
cmp
xor
add
jns
sar
scas
mov
data16
fstpl
xchg
andl
testb
push
icebp
lea
outsl
lcall
divl
rcll
or
mov
sbb
in
jno
add
in
lea
mov
stc
popa
cmpsl
ret
dec
or
jnp
dec
aam
mov
mov
data16
daa
sbb
and
xchg
push
push
in
icebp
inc
push
mov
sbb
es
push
insb
adc
xor
xchg
push
sahf
shlb
or
es
pop
push
lods
sub
pop
fsts
out
or
push
or
test
enter
sbb
les
leave
sti
je
clc
iret
loopne
enter
and
std
sub
add
pop
xor
xor
flds
movsl
ret
rcll
push
mov
inc
and
popf
sbb
add
xchg
das
pop
or
fucomp
test
iret
cmp
push
dec
cli
pop
jne
cmp
ss
adc
pusha
push
arpl
xchg
outsb
xchg
aaa
jmp
into
mov
xchg
pop
into
cmp
xor
inc
fwait
mov
fadds
out
mov
pop
adc
mov
mov
outsl
mov
inc
pop
mov
pop
mov
xchg
ficoml
lods
popa
xchg
enter
sub
xchg
cli
pop
ja
ret
dec
or
or
adc
in
out
sub
pop
lcall
sarl
mov
cmpb
mov
inc
pop
out
out
add
sti
xor
or
in
and
fists
inc
pop
dec
addb
aaa
cmp
dec
sbb
push
or
out
adc
or
insb
outsb
cmpsb
data16
sbb
sub
out
lret
stos
add
das
test
push
das
arpl
cmc
leave
xor
shrb
loop
mov
mov
iret
dec
mov
ficompl
jp
push
jo
push
ss
int3
test
sti
mov
stos
fstps
jge
mov
xchg
dec
or
enter
pop
jle
cmpsl
fimuls
inc
xor
in
push
scas
mov
xor
adc
dec
mov
add
int
push
lock
mov
clc
fisubrl
inc
mov
int
addr16
aaa
mov
mov
stos
jg
and
in
jmp
std
sub
xchg
mov
mov
pop
movsb
popf
outsb
dec
fbld
out
xchg
or
or
ss
je
mov
adc
aas
je
lahf
add
add
adc
rcrb
imul
pop
sbb
in
js
mov
and
addr16
sub
fnstcw
fwait
pop
subl
jbe
loope
jge
sahf
or
mov
or
incl
inc
push
lahf
imul
ja
getsec
push
or
fiadds
ss
sbb
push
mov
sub
sbb
cmp
aaa
out
lods
mov
xor
repnz
das
repz
sbbl
stos
getsec
cmp
cmpsl
fcomi
lods
sarb
stc
push
mov
jg
fstpt
andl
mov
fldl
leave
or
sbb
scas
aas
into
dec
add
sub
mov
loop
and
mov
sbb
mov
inc
imul
out
sub
sub
push
jnp
mov
pop
out
mov
pop
loop
mov
fimull
lret
inc
stos
xchg
push
push
xchg
addr16
cmpsb
repz
lret
mov
daa
push
scas
push
sbb
out
stos
push
repz
test
repz
jg
jle
pop
pop
adc
jecxz
sahf
int
imul
xor
pop
std
notl
cmc
cmc
mov
bndstx
cs
dec
jnp
lds
pop
cli
sbb
movb
inc
ror
clc
lea
lcall
lahf
fimuls
jg
shll
jmp
inc
pop
xchg
mov
shrb
inc
icebp
aaa
push
jnp
jmp
xchg
out
fwait
mov
lcall
ret
xor
mov
inc
fisubrs
sbb
scas
inc
mov
add
mov
lret
scas
movsl
mov
popa
rorl
push
jns
push
jo
push
into
cmp
and
sbb
push
sub
push
ja
cmpsb
xchg
cltd
push
pop
add
sbb
jb
dec
mov
int
cs
fcoml
ljmp
pop
int3
test
sub
pop
aam
loopne
jle
cmc
or
sar
cmp
arpl
ret
pusha
push
fisttpll
fwait
jbe
xor
ds
call
lock
mov
scas
pop
fsubrl
sbb
pop
loop
mov
push
cld
icebp
fmulp
shlb
andb
faddl
mov
mov
sub
je
xchg
lcall
xchg
dec
icebp
push
fbstp
mov
mov
rol
out
mov
cld
push
push
ja
jle
jge
fucomp
je
xor
mov
cli
pusha
lcall
mov
xor
aaa
push
adcl
mov
pop
xorl
hlt
adc
adc
jns
insb
sbb
xlat
and
cmpsb
xchg
or
xor
mov
sbb
out
add
fisttpll
rorb
test
cmp
scas
nop
xor
jne
pop
or
lret
lds
divb
insb
je
push
ret
mov
mov
xor
jg
stos
adc
int
sti
ds
push
vprotw
xlat
imul
ret
nop
mov
outsl
push
push
cli
xor
mov
jl
xchg
les
jo
clc
imul
add
stos
mov
push
adcb
fsts
hlt
loopne
inc
jle
test
in
iret
loop
push
sub
inc
and
dec
xor
out
fists
out
dec
jne
sub
jl
scas
inc
mov
ja
xchg
add
sub
out
into
adcb
push
xor
push
sarl
push
sbb
mov
out
mov
movb
ficompl
shl
xor
out
adc
add
fwait
xchg
dec
mov
pop
push
out
ljmp
push
mov
stos
xchg
fs
in
jge
inc
mov
mov
lcall
adc
repnz
in
orb
outsl
insl
shl
adc
and
sub
mulb
sbb
mov
jp
adc
and
xchg
ljmp
add
cmp
scas
cld
cs
repnz
push
mov
rcr
mov
add
movsb
inc
xchg
mov
push
xchg
mov
mov
sub
push
aas
test
aad
inc
mov
fidivl
insl
pusha
out
sbbb
cltd
lods
ficomps
roll
into
cmp
ljmp
je
push
sti
sbb
and
xor
lock
incl
push
mov
rcrl
fidivl
jl
adc
adcl
push
sahf
sub
pop
add
scas
sahf
sti
int3
pop
xor
pop
inc
or
jne
in
cmpsl
rclb
jns
and
hlt
clc
icebp
add
mov
movsb
shll
dec
ja
mov
ret
test
sub
cmp
xorb
mov
xor
leave
lret
in
loopne
push
mov
lods
das
or
add
mov
pushf
into
movsl
sbb
dec
mov
xchg
push
adc
xchg
mov
jl
add
rorb
das
mov
and
jecxz
lods
imul
jecxz
push
test
push
mov
rcll
mov
add
mov
push
xchg
fs
pop
push
xorl
adc
sbb
and
ret
int
xor
inc
dec
sbb
jecxz
mov
xchg
cli
jns
cmp
js
pop
sub
jecxz
jmp
into
xchg
adc
repz
sbb
jbe
and
jo
jae
pop
in
add
and
sbb
loop
js
xchg
loop
loop
and
cmp
pushf
jle
jb
sti
movsb
ss
hlt
mov
mov
mov
inc
xchg
dec
inc
loope
fcmovbe
push
in
sbb
or
fimull
sub
push
sbb
mov
cmp
clc
jbe
push
jmp
ss
cmpsl
xchg
icebp
fsubrl
or
fwait
iret
repnz
sub
out
mov
mov
stos
sahf
pop
push
movsl
push
push
sahf
lret
sbb
test
roll
repz
aaa
mov
xchg
jb
xor
ror
fnstcw
subb
push
dec
xchg
add
add
lret
scas
cmp
out
or
ljmp
outsl
add
popf
mov
sbb
mov
and
icebp
cmpsb
xor
push
das
dec
or
sbb
or
xchg
mov
ret
cwtl
push
or
push
pop
inc
cli
push
cli
mov
imul
xor
sub
and
cmp
loope
pop
mov
cs
lret
xchg
mov
outsb
inc
cmpsl
dec
aaa
inc
sahf
dec
cmp
sahf
ljmpw
jnp
sbb
push
sub
leave
out
ljmp
xchg
test
push
jmp
pop
push
int3
xchg
rcrl
popa
add
or
mov
pop
repnz
insl
mov
adc
sbb
sbb
icebp
sahf
dec
enter
jmp
lods
lods
mov
iret
in
mov
aas
adc
xor
out
inc
pop
or
add
popf
lds
negb
stc
jmp
inc
mov
adc
adc
pop
insl
jb
dec
ds
mov
mov
push
inc
popa
mov
in
out
imulb
cmp
test
mov
ficoml
or
aas
mov
testb
mov
jae
ljmp
cmp
movsl
jb
movsb
push
daa
sti
jae
ja
push
pusha
sbb
clc
dec
sub
jmp
xchg
popf
pop
mov
cli
xchg
xor
and
hlt
jg
sti
jne
dec
popf
adc
or
leave
mov
cmp
shrl
add
mov
mov
jnp
sbb
inc
add
jae
dec
sub
sub
pusha
fdivrs
dec
dec
adc
daa
xchg
mov
popl
filds
xchg
sub
das
xchg
out
inc
xor
push
lcall
inc
mov
xchg
mov
fsub
xorl
pop
mov
add
out
cwtl
xor
mov
mov
pop
push
outsl
mov
jg
lret
mov
lret
cmp
into
das
xchg
lds
inc
jbe
jl
cli
and
into
xor
rclb
inc
addl
iret
jle
xchg
mov
dec
popl
into
or
gs
rorb
in
inc
int3
jp
mov
lret
or
mov
cmp
scas
cmp
out
ficompl
clc
adc
lods
jle
cmp
add
fucompp
outsb
pop
lods
js
push
sbb
out
shll
inc
out
js
mov
pop
push
jmp
dec
cmp
stos
lret
gs
data16
pop
and
pop
xlat
or
push
xchg
mov
mov
mov
ljmp
lds
outsb
pop
mov
cmpsl
jge
hlt
push
outsb
sub
pop
jb
mov
ds
sbbl
fidivrs
and
loopne
test
jae
sbb
dec
inc
mov
loope
fwait
and
out
jecxz
outsb
mov
pusha
repnz
sub
push
inc
xchg
aaa
das
or
inc
shll
lret
lds
outsb
and
mov
pop
add
sub
mov
sub
xchg
test
out
jecxz
jae
ret
cmp
cltd
je
inc
aas
outsl
and
shl
jae
mov
fisubrl
or
jge
loope
xchg
mov
iret
push
mov
mov
or
jnp
aas
xchg
repz
insb
stos
xchg
mov
call
pop
test
leave
mov
scas
xchg
sbb
addr16
push
adc
xchg
mov
aas
inc
hlt
push
in
dec
aam
add
sti
rorb
push
mov
push
sbbb
dec
js
or
enter
mov
jmp
outsl
repnz
movsl
dec
or
mov
inc
add
add
push
loop
cmp
add
and
cmp
lahf
pop
or
lcall
lods
inc
scas
dec
add
push
mov
call
xor
inc
xchg
sub
or
cmp
or
cmp
adc
loop
mov
in
xor
xchg
push
inc
jbe
mov
push
cmp
dec
repz
sub
mov
sub
shll
rorb
movsw
nop
in
mov
push
xlat
push
leave
adc
sub
lods
cs
and
inc
pop
inc
xchg
xchg
int
mov
mov
jecxz
xchg
adc
push
push
jp
inc
insb
lret
daa
jg
cmc
mov
sarb
jbe
dec
addr16
sbb
mov
cltd
sahf
jge
addr16
testb
pop
icebp
pop
sub
mov
mov
pushf
xchg
adc
jle
leave
or
sbbb
pop
ljmp
xor
ss
adc
mov
in
inc
fsubrs
test
lret
jle
rorb
mov
dec
xor
dec
repnz
leave
fdivl
mov
and
sub
jmp
clc
push
mov
lcall
inc
mov
sbb
and
jg
pop
mov
test
shlb
shr
push
std
je
fsubl
inc
mov
jecxz
rcll
push
and
sbb
cmp
shll
inc
mov
insb
fidivl
push
mov
movsl
insl
sub
sbb
mov
mov
aaa
sarb
je
cmp
repnz
hlt
loopne
cmpl
jns
dec
cmp
mov
or
cmp
push
adc
cmp
mov
iret
cli
cld
mov
mov
insb
lret
pop
mov
mov
jb
addl
icebp
sti
inc
xchg
xchg
test
xor
aas
lods
sahf
mov
stos
mov
sti
outsl
sbb
notb
mov
ljmp
lahf
mov
push
xchg
or
add
dec
enter
mov
xor
xor
and
into
mov
push
inc
mov
into
dec
ret
add
mov
xchg
aas
ficoml
push
cmc
xchg
dec
adc
jnp
cmp
bound
sahf
xor
add
xor
pop
and
lods
push
cmp
mov
dec
rolb
pusha
adc
add
pushl
mov
call
push
ja
and
sbb
out
push
mov
sbb
int
lds
shrl
or
ror
dec
sub
pop
add
in
mul
and
dec
pop
mov
mov
sub
out
hlt
repnz
sub
and
push
push
mov
mov
xchg
add
dec
inc
in
dec
mov
mov
addb
mov
inc
sarb
or
addr16
cmp
fldcw
leave
testl
xchg
xor
cmp
xor
std
mov
in
testb
pop
xchg
js
clc
mov
mov
sub
pushf
cmp
xorl
adc
hlt
shl
mov
dec
adc
out
mov
test
test
jnp
mul
dec
cmp
inc
or
lahf
jl
fisttpl
ficoms
sbb
notb
nop
sbb
lods
loopne
ss
mov
jns
and
inc
dec
mov
or
or
adc
dec
fs
ret
aas
xchg
or
jbe
iret
xor
xchg
pushf
push
les
jno
mov
adc
scas
push
fsubr
pop
sbbb
xor
out
into
mov
mov
rorl
lock
movsl
mov
imulb
cmp
inc
mov
sbb
lods
shrl
and
out
repnz
mov
add
rolb
pushf
or
mov
mov
mov
jp
mov
xor
pop
fwait
fs
mov
push
add
sbb
mov
test
mov
insl
test
add
repnz
int3
in
scas
lcall
mov
mov
daa
lret
das
movsl
adc
xchg
push
pop
fsubp
xchg
sbb
inc
cld
hlt
notl
or
dec
inc
xchg
jg
jg
mov
jnp
cltd
stc
dec
pop
or
stc
cs
out
xchg
mov
or
xlat
jno
sbb
in
and
or
daa
outsl
nop
jmp
repz
movsl
sbb
and
xchg
aaa
mov
jae
push
pop
add
lret
aad
pop
add
es
sbb
stos
pop
inc
lret
jne
push
sub
ficompl
cld
dec
cli
fisubrl
out
outsb
jg
ffree
or
jl
push
xchg
ss
add
jle
push
push
movsb
add
jl
sbb
js
popa
jno
inc
or
dec
ljmp
ljmp
cmpsb
fdivrs
jmp
mov
jmp
cmp
push
xchg
and
jle
mov
clc
pop
sub
push
leave
out
in
mov
xor
jae
bnd
xchg
or
shr
sbb
sti
pop
sbb
cld
daa
out
dec
int3
xchg
and
popa
inc
out
aaa
pop
test
pop
mov
das
loope
sbb
sub
ss
inc
aaa
sub
mov
fwait
scas
or
inc
add
mov
sub
popa
mov
hlt
bound
data16
jns
adcl
fcomi
scas
mov
mov
icebp
fbstp
in
shr
cmp
ret
sbb
push
sub
movsl
pop
dec
pop
loopne
sub
cmp
xchg
mov
insb
insb
jo
and
xchg
insb
jl
int
fnstcw
rcl
pop
xchg
cwtl
in
fs
ret
test
dec
sub
shrb
and
out
pop
movsb
push
or
sub
mov
sbb
int3
mov
into
lock
mov
xchg
push
push
xor
repnz
lret
je
adc
jle
lahf
jnp
or
mov
aaa
push
out
in
dec
int3
fsubl
push
xchg
cli
outsb
mov
xor
sub
stos
inc
push
xchg
add
inc
sahf
lds
out
repnz
inc
push
sub
xchg
stos
repz
stos
popf
lcall
mov
mov
lock
jb
scas
cmp
pop
das
in
ljmp
mov
dec
sbbb
add
add
imul
add
sub
scas
mov
or
pop
test
xor
pop
push
je
mov
fwait
dec
lea
rolb
or
rorl
mov
push
sarb
sub
test
xor
xor
add
fsubrl
cwtl
sbb
out
lock
ffreep
imulb
out
adc
call
adc
repz
dec
lret
mov
mulb
sub
lcall
and
dec
xor
jp
shrb
jbe
insl
jp
sbb
in
outsb
xor
mov
cs
lahf
mov
xor
xor
shrb
push
dec
add
or
rcrl
adc
out
add
scas
cmc
scas
lret
out
sub
xchg
fidivs
mov
int3
and
jo
data16
or
pop
pop
inc
cmpsb
push
jl
and
sub
ja
sbb
or
sbb
adcl
and
sahf
pop
aam
mov
outsb
fisubrl
sub
and
pop
jge
and
push
adc
add
push
nop
xchg
sbb
decb
movsb
pop
mov
insb
xchg
add
mov
addr16
loope
enter
push
xor
and
sub
nop
sub
repz
adc
mov
pop
into
pop
xor
dec
jo
push
or
mov
cli
mov
mov
sahf
mov
jb
and
inc
and
mov
dec
scas
xchg
sbb
subl
sub
std
sub
pop
lret
clc
xchg
pop
xor
mov
es
mov
out
lret
dec
std
inc
lret
lods
mov
pop
dec
cmc
outsb
jmp
ljmp
rcrb
setle
repz
mov
lods
inc
sub
jns
stos
insl
xchg
add
mov
and
scas
inc
or
test
aad
push
jp
sub
addb
xchg
out
fwait
mov
jle
jecxz
shl
data16
push
ds
es
jne
cwtl
notb
xchg
and
push
adc
lcall
js,pt
jns
or
dec
sti
push
test
sub
dec
movsb
cmpsb
lods
es
push
push
jo
sbb
mulb
cmp
pop
shlb
add
sub
cmpsb
ljmp
scas
sti
lcall
dec
cmp
mov
mov
mov
cmpsb
cs
pop
ret
and
push
roll
sub
insb
pop
or
xchg
xorb
jae
adc
andb
popl
mulb
cmp
dec
xchg
dec
sbb
push
mov
xchg
jecxz
es
ret
xchg
ret
stos
pop
fmuls
sub
mov
xchg
pop
xchg
bound
lret
fists
in
into
into
add
mov
mov
es
in
ljmp
jbe
loope
js
jbe
into
inc
cmp
push
movsl
pushf
cs
mov
lcall
add
out
andl
sub
dec
push
dec
sub
movsl
add
cmp
imul
dec
hlt
out
adc
js
xlat
jo
jnp
lock
push
sbb
movb
cwtl
mov
jl
sti
fsubp
stos
pushf
xlat
dec
icebp
jb
lods
jnp
loop
pop
pusha
inc
leave
adc
jne
ret
inc
ficoml
out
or
mov
mov
rorb
stos
in
data16
adc
jp
fs
ja
mov
jp
mov
shlb
cmpsb
fisubs
mov
lret
mov
repnz
ds
loop
loopne
stc
push
mov
gs
pop
mov
mov
test
lahf
in
popf
das
push
or
ret
cs
mov
ljmp
fs
push
stos
jg
aas
mov
repnz
ss
int
xchg
or
pushf
outsl
data16
jbe
jnp
cmp
lods
dec
addr16
or
dec
add
or
pop
sbb
mov
and
loope
movsb
add
sarb
sti
jb
stc
cmp
aas
push
cmpsb
jb
loope
inc
mov
in
inc
cmp
lea
in
xchg
pop
mov
shll
jo
mov
push
push
pop
fcmovb
push
adc
inc
mov
lcall
xchg
lahf
jb
sub
or
sbb
sub
and
leave
mov
pop
xbegin
mov
fwait
inc
xchg
test
mov
cld
push
in
inc
pop
xor
jg
push
lret
mov
sub
push
sub
arpl
xchg
add
lea
outsb
mov
push
in
ds
sub
sbb
mov
pop
scas
scas
jl
hlt
cmc
bound
sub
in
mov
dec
or
xchg
sbb
daa
lds
adc
cltd
gs
xchg
xlat
daa
mov
cmc
pop
insb
lods
xchg
push
cs
in
inc
fadds
hlt
pop
enter
repnz
push
mov
and
cmp
jne
js
cltd
xor
xorl
ljmp
sbb
sub
mov
cli
inc
mov
repnz
outsl
in
sbb
in
test
jne
fcmove
inc
sbb
in
cli
xchg
leave
xor
xor
shrl
loopne
scas
xchg
movl
mov
jl
pushl
inc
bound
dec
pop
xor
stc
gs
jecxz
cld
push
inc
fimuls
mov
lods
pop
xchg
sahf
aam
push
and
jecxz
sub
cmp
lods
mov
pop
lea
imul
push
mov
sbb
cmp
cmpsb
inc
or
ret
lock
sbb
jp
in
adc
lds
jecxz
push
jo
pop
ret
xchg
xor
lods
jl
adc
push
jbe
inc
fildll
int
dec
mov
xchg
hlt
mov
push
decb
ds
fisubs
mov
xchg
dec
push
out
jecxz
xlat
push
jb
xchg
adc
hlt
lods
xchg
mov
mov
call
loopne
mov
mov
mov
add
sbb
jnp
mov
rep
jnp
mov
cmc
and
xchg
sub
lock
push
imul
mov
mov
insb
sub
and
sub
and
sbb
xchg
fisubrs
pop
mov
mov
fsubrl
inc
std
push
adcl
and
daa
fisttpl
pop
adc
cld
dec
dec
or
adc
ljmp
xchg
mov
sbb
pushf
clc
jmp
sbb
cmpsb
test
movsb
loop
lods
sub
add
and
in
je
fistl
fistps
mulb
jmp
jge
lahf
jae
int
mov
ret
or
test
jb
imul
in
xchg
jmp
loope
ss
shll
test
dec
pusha
bnd
scas
icebp
push
aas
mov
pop
and
sahf
incl
sbb
mov
test
or
cmpb
mov
mov
bound
inc
add
lret
mov
adc
or
and
xor
and
xchg
jnp
xchg
ja
xorb
xorb
pushf
les
fcomps
add
cmc
bound
fsts
scas
jl
les
cmp
or
ret
mov
sub
stc
out
push
sbb
sub
movsb
call
leave
ret
xchg
sahf
jg
movb
xchg
ja
jecxz
ds
outsb
lods
dec
repz
mov
sub
int
jb
xchg
xchg
or
inc
and
jo
sbb
sbb
test
mov
movsl
addr16
loope
sbb
and
add
sbb
aad
jecxz
inc
mov
lcall
je
inc
daa
sub
and
jnp
push
addr16
and
mov
add
js
xor
jb
cmp
mov
insl
ffreep
inc
nop
jp
fimuls
inc
xlat
push
jae
mov
jmp
mov
sbb
lret
sub
push
mov
mov
addl
loope
inc
sbb
inc
fcomip
and
cmp
mov
add
mov
sarb
dec
pop
or
lahf
mov
test
lock
mov
inc
mov
jb
jnp
xchg
filds
inc
adc
les
inc
aad
add
inc
inc
les
addr16
sbb
cmpsl
mov
fisubs
pusha
das
mov
les
adcb
fnstsw
cmp
cmp
in
and
sarb
pop
test
or
adc
sbb
sub
add
xchg
mov
xchg
and
je
mov
pop
dec
jae
push
pop
mov
outsl
jle
jae
adc
sarb
xor
lret
push
setbe
pop
adcl
mov
pushf
mul
mov
pop
mov
pop
mov
enter
push
repnz
cld
cmpsb
cmpsl
lret
xchg
les
scas
xorl
push
mov
inc
mov
inc
fisubs
fnstcw
jbe
jle
aad
lcall
push
and
mov
mov
imul
mov
pop
les
cmp
pop
dec
sbb
xor
pop
mov
mov
test
loop
mov
xlat
es
ret
sar
ljmp
outsb
cmp
stos
add
es
xor
xchg
push
fnstcw
fldenv
mov
inc
pop
push
push
cld
arpl
sbb
push
push
lea
in
sub
push
cwtl
cwtl
push
jo
jle
push
fs
in
imul
fs
shrb
push
sbb
lcall
lret
dec
in
fcompl
cs
adc
mov
lods
adc
sahf
mov
out
outsl
roll
mov
shl
repz
lea
fildll
dec
dec
cld
cld
adc
ds
lahf
jg
mov
xrelease
mov
mov
cmp
and
jnp
arpl
mov
push
jp
out
adc
nop
mov
mov
fs
hlt
inc
shll
lods
push
mov
mov
call
repz
xor
adcb
pop
dec
push
enter
xchg
sub
pop
imul
ret
jg
data16
cmp
jb
leave
aad
loopne
mov
mov
adc
leave
mov
cmp
ss
cmpsl
or
es
test
pop
popa
mov
in
jmp
jnp
pop
xor
sti
dec
imul
iret
ret
pop
aaa
int
mov
test
inc
adc
sbb
inc
sti
aad
sti
or
es
data16
cli
jae
jb
xchg
cmp
xchg
adc
pop
push
aas
rolb
ret
mov
cli
add
pop
jnp
inc
inc
test
subb
jl
outsb
lcall
lret
jg
mov
rorb
sub
addl
stc
inc
mov
adc
scas
filds
mov
imul
shlb
cmp
jg
inc
ja
cmpsb
aas
lret
dec
les
sub
push
push
mov
pop
movsb
jb
mov
in
xchg
js
mov
adc
dec
inc
pop
dec
jecxz
xlat
adc
cmp
pop
pop
and
shl
out
and
imul
xor
imul
rorb
pusha
mov
ljmp
enter
js
cmpsl
sub
cs
addr16
dec
xor
lds
pop
sti
les
pop
jg
cwtl
je
and
pushf
lcall
lahf
mov
insl
inc
push
jbe
jp
inc
xchg
les
inc
out
mov
mov
add
sub
xlat
xor
mov
or
dec
add
rorb
repz
loopne
jl
xchg
inc
push
mov
mov
sbb
lods
fld
pavgw
shll
cmp
loop
lods
fistl
or
sub
shrb
lds
movsl
cs
out
aam
pop
daa
xor
or
jb
orl
in
add
xor
jecxz
cmp
jno
and
mov
add
push
mov
xlat
movsl
push
sarl
popa
lsl
movsl
push
sbb
add
sahf
sub
std
jge
rcll
and
imul
mov
sbb
nop
rorl
test
xchg
inc
pop
into
xchg
das
icebp
stos
jmp
rcr
insb
jne
push
popa
cwtl
sub
mov
sbbl
push
hlt
sar
in
sbb
test
faddp
fisttps
sub
test
cld
sub
add
jle
xor
pushf
xchg
pop
mov
mov
divb
fnsave
je
jg
sahf
outsl
call
ss
xor
adc
inc
xchg
push
push
pop
daa
je
or
xchg
push
push
mov
dec
push
push
lcall
int3
pop
xchg
xchg
mov
sbb
int3
clc
je
mov
call
sbb
aam
in
test
mov
jmp
movsl
xchg
in
pop
adc
in
imul
inc
jle
pop
jg
sbb
fwait
dec
adc
ljmp
dec
push
sub
or
iret
mov
mulb
mov
jno
jo
mov
lods
cmp
pop
xor
sahf
push
adc
jnp
pop
adc
sub
pop
jo,pn
addr16
push
int3
in
pop
gs
dec
mov
pop
add
jg
mov
jge
xor
xor
lds
pop
fstpl
sub
add
movsb
fwait
movsl
mov
jb
push
fildl
cs
mov
xchg
in
jle
jecxz
lret
pop
in
adc
add
xchg
hlt
int3
rcr
fcoms
mov
sbb
or
mov
filds
mov
pop
inc
in
push
mov
out
pop
shll
sbb
xor
add
test
int
xchg
xchg
in
sbb
fs
out
and
adc
sub
mov
ljmp
arpl
jp
jns
or
fbld
jmp
add
mov
scas
stos
sbb
ret
int
mov
jne
int3
cmc
mov
sahf
xchg
lods
iret
mov
fdivr
daa
adc
into
stos
sub
push
jg
mov
jmp
in
pop
pop
inc
outsb
pop
sub
loop
push
std
adcb
mov
push
popf
mov
push
in
push
pop
dec
sub
mov
pop
cmp
loopne
repz
cwtl
xchg
jns
insl
xorl
add
dec
in
fmul
and
cmpsb
xor
push
push
test
test
js
jge
or
adc
in
sbb
out
out
scas
adc
adc
cmp
adcb
adc
pop
aad
push
xchg
cmp
cmp
fsts
cmpsb
push
jg
arpl
nop
outsb
pusha
outsb
aaa
leave
jnp
lahf
sbb
add
sbb
jno
hlt
in
mov
es
pop
adc
cli
orb
insb
and
jge
lock
stos
cli
inc
sbb
lret
inc
add
mov
ficoms
mov
clc
xchg
adc
jnp
lcall
aas
and
xor
incl
aaa
inc
mov
push
xor
push
jp
pop
cmp
cmp
andl
xchg
sbb
ja
sbbb
cmp
add
cmp
or
aam
xor
pop
fidivrs
repz
jmp
fcompl
faddl
lock
push
mov
or
mov
aas
xchg
mov
and
cmc
add
jnp
mov
jmp
call
lcall
call
pop
shl
add
ss
and
lock
rorb
or
jb
test
push
in
loope
loopne
sbb
pop
jmp
pop
or
subl
xchg
testl
out
push
dec
dec
rcrb
mov
add
mov
cmp
out
add
dec
xor
pop
xchg
adc
mov
paddb
push
cs
divl
xorl
jmp
fdivr
or
out
mov
pop
inc
jg
fldt
sub
jne
mov
fwait
cmpl
sub
xor
test
movsb
xor
xlat
js
sahf
sbb
cmp
aas
insl
fildl
push
testl
inc
dec
inc
jl
in
jg
popa
addr16
cltd
mov
mov
push
es
pop
mov
sbbb
insl
jecxz
mov
jl
mov
nop
sarl
push
mov
shl
pop
mov
in
jbe
in
lea
pop
or
push
mov
xor
pop
dec
mov
aaa
stos
int3
idiv
sbb
adc
iret
es
cmp
lods
sub
leave
dec
dec
subl
inc
push
add
and
mov
data16
sti
jle
mov
adc
mov
leave
dec
rclb
pop
repnz
divb
jl
pop
fldl
add
sub
test
pop
push
sub
scas
adc
xor
es
scas
scas
dec
and
dec
xor
ja
lcall
cmpb
adc
les
pop
fists
fwait
sbb
inc
inc
sub
inc
ljmp
dec
xor
push
dec
cwtl
dec
add
push
push
add
aad
daa
cmp
iret
sbb
cmp
fsubs
add
fdivrs
rcl
inc
dec
stos
ljmp
in
adc
pop
aad
repnz
adc
pop
or
icebp
out
ret
xor
jb
dec
mov
push
ja
add
scas
sti
cmp
lea
mov
ret
loopne
out
mov
jno
add
dec
sbb
imulb
pop
popf
rcrb
cld
jno
filds
pop
adc
mov
dec
arpl
adc
and
sub
in
sbb
fbld
pusha
add
adc
sti
stos
sbb
sbb
push
shrb
mov
jp
rcrb
push
ret
adc
fadd
mov
aas
loopne
sub
mov
mov
lea
ret
jp
inc
int
test
mov
push
push
pop
nop
pop
adc
sahf
mov
aas
insl
lahf
leave
testl
mov
or
inc
inc
dec
loopne
pop
pop
inc
pop
jnp
pop
fadd
mov
cmp
iret
jae
cmp
push
dec
frstor
mov
or
inc
addb
aaa
mov
daa
jnp
mov
sub
xor
ja
dec
movnti
fwait
imul
mov
push
jecxz
jno
jp
fisubrl
adc
psubsb
mov
pop
xor
ret
pop
push
imul
jmp
or
and
push
xchg
inc
out
idivl
ja
jecxz
ret
cld
xchg
add
cmp
mov
xchg
fists
mov
out
ret
out
stc
lcall
cmc
pushl
dec
test
fbld
outsl
sub
fists
enter
testl
push
dec
icebp
xor
mov
and
xor
iret
sub
push
icebp
lahf
cltd
push
mov
push
scas
pop
jge
rcrl
pop
das
int
cmp
scas
arpl
sbb
pop
std
repz
lcall
jns
sti
scas
jno
fsubl
addr16
movl
aas
dec
add
out
jno
adc
hlt
mov
shlb
xor
adc
cmp
lret
in
sahf
movsb
imul
sub
das
sub
outsl
xor
not
fbstp
sbb
cltd
pop
mov
xchg
mov
out
stc
inc
push
pop
movb
push
pop
mov
repnz
jne
mov
test
pusha
in
ficomps
enter
jp
int
pop
mov
adc
aas
or
pop
icebp
sub
mov
adc
mov
test
and
and
sarl
dec
stos
xchg
push
mov
push
jbe
pop
js
lahf
jge
hlt
mov
add
mov
outsl
ret
into
mov
push
sub
xchg
fdivl
out
push
sub
adc
outsb
mov
add
out
scas
ja
and
decb
mov
dec
sbb
test
xor
mov
xor
cmc
outsb
and
repz
into
cmpsb
cltd
mov
push
inc
xchg
jo
imul
lret
sbb
xorb
pop
and
pushf
dec
in
adc
jbe
ds
inc
xchg
fists
std
mov
jae
sbb
leave
fwait
xorb
ljmp
stos
shlb
call
mov
jle
add
pop
out
cmp
mov
fdivr
xchg
movsl
dec
nop
ret
mov
sub
int
mov
cmpl
adc
std
lcall
and
int
fwait
add
mov
jae
xchg
and
js
pop
lret
add
jo
adc
fmull
dec
mov
cwtl
adc
push
push
pop
jecxz
loope
dec
ss
sbb
xchg
cltd
jno
cmc
xor
jno
pop
clc
decb
jne
addb
add
leave
mov
loope
push
pop
pop
pop
adc
mov
mov
jo
push
outsb
cmp
mov
out
add
es
movsbl
ljmp
mov
pop
or
jno
in
cmp
cmp
push
mov
jbe
aam
push
adc
jl
mov
xor
and
pop
orl
add
fmull
and
cmp
jb
lret
xor
cmp
ret
cmp
add
in
std
inc
sbb
adc
ret
les
sbb
das
push
mov
push
loope
aad
das
jp
repnz
cltd
or
les
and
sub
push
inc
test
and
or
adc
rclb
push
test
int
leave
es
mov
adc
sub
daa
pop
inc
mov
mov
in
movsb
movsb
jecxz
clc
jecxz
iret
test
loop
test
inc
aas
pop
jle
loope
addr16
lcall
mov
cmpsb
sbb
lcall
pop
and
cmp
rorl
add
neg
cmpb
jl
das
dec
sbb
cmp
movsb
aas
xor
cmp
sbb
inc
xchg
dec
xor
aam
pop
int3
dec
data16
cld
mov
fs
ret
cmp
pop
sub
andl
and
aad
dec
cmp
lcall
cli
cltd
pop
and
arpl
imul
stos
xchg
jbe
pop
xchg
adc
mov
push
hlt
dec
jnp
cltd
mov
cmp
and
andl
xchg
rolb
mov
stc
fdiv
imul
sbb
or
and
mov
lea
pop
fisubrl
lret
sub
or
jge
aas
lahf
cli
add
add
mov
fiaddl
sti
or
lret
mov
push
fimull
cmp
out
jl
imul
or
xchg
cmpb
pop
sbb
push
enter
adc
mov
imul
test
aas
jle
xchg
jp
in
out
pop
lods
jbe
and
out
add
sarl
fbstp
push
inc
xor
mov
lea
cmp
mov
jge
push
add
pushf
nopl
enter
in
and
cmpsb
pop
mov
xchg
dec
sub
jns
addr16
push
pop
mov
xchg
push
ss
outsb
push
and
sbb
mov
xor
movsl
add
dec
test
jmp
xchg
inc
and
jmp
repnz
mov
outsb
sbb
out
negl
mov
sti
sub
scas
aam
lods
ljmp
inc
push
mov
xchg
inc
mov
pop
cmp
sbb
stc
sbb
imul
jo
imul
sub
mov
and
adc
push
fmul
movsl
loop
lahf
out
cmovnp
push
test
mov
pop
cmp
sarb
sub
sti
sbb
daa
mov
call
int3
or
popf
les
xchg
mov
xchg
mov
xchg
test
inc
mov
mov
inc
sbb
mov
test
lcall
mov
or
into
daa
getsec
jb
dec
es
in
mov
je
out
inc
sbb
sbb
dec
xor
xchg
bound
aam
shlb
es
mov
or
ret
dec
fisttpl
pop
lock
xor
fisubs
sub
adc
or
mov
movsl
lret
test
cmp
ficoml
cmp
adcb
ss
test
in
test
mov
jae
and
jbe
xor
mov
scas
mov
or
jle
sbb
push
lds
cld
imul
bound
int3
inc
std
and
out
dec
lods
ret
mov
sub
outsb
inc
arpl
xlat
cld
shll
adc
daa
mov
data16
pop
test
or
and
cmp
arpl
or
push
cs
mov
pop
adc
mov
loope
add
xchg
jnp
ds
fs
pop
sub
pop
repnz
jp
adc
pushf
cld
inc
add
cmp
sbb
cmc
repnz
fs
jo
outsb
cmp
fcoml
mov
jle
cwtl
ljmp
cmp
adc
daa
xor
pusha
add
hlt
cmp
mov
lret
jae
jmp
cld
and
inc
push
ds
push
int3
aaa
jb
aam
aam
push
out
cmp
insl
pop
icebp
es
call
divb
adc
adc
std
jbe
add
frstor
pop
stc
sahf
arpl
ljmp
mov
divl
jp
mov
sbb
sbb
std
cmp
and
push
incb
fldt
push
adc
adc
lcall
insb
and
movsb
cmpsb
jecxz
outsl
or
data16
fnsave
and
jg
scas
push
push
jg
in
fisttps
incb
cwtl
fs
pop
and
mov
loop
mov
mov
push
cmp
lcall
fadds
lcall
dec
xchg
sahf
pushl
or
movsl
mov
or
cmpsb
pusha
lods
pop
es
orb
and
enter
inc
push
xor
in
add
sbb
ret
jecxz
jnp
pusha
pop
mov
mov
cmp
xor
testb
sbb
insl
mov
loopne
mov
xchg
adc
push
xor
dec
mov
adc
leave
adc
les
xor
dec
es
xchg
dec
inc
roll
push
outsl
adcl
pop
adc
xor
outsl
enter
aaa
ficompl
adc
and
jge
sti
psrld
leave
mov
sti
jo
in
cmp
popa
mov
bound
stos
out
xor
aam
scas
adc
push
dec
lahf
jmp
pushf
std
movb
jge
ret
sub
sub
gs
iret
addr16
data16
cmpsl
pusha
ljmp
stos
dec
ds
adc
sub
jg
iret
jns
stos
and
xchg
gs
dec
dec
mov
pop
jo
mov
jg
ficoms
jle
cmpsl
dec
push
dec
mov
roll
mov
ret
xor
push
cmp
shll
fidivrs
sub
xor
and
es
adc
push
inc
dec
push
push
inc
rolb
nop
pop
das
pop
jb
lock
aad
fs
hlt
mov
jae
mov
cwtl
sub
jae
adc
loop
mov
xor
push
rcr
pop
cs
pop
aaa
inc
cwtl
clc
stos
push
and
cmpsl
cmp
test
lock
cmpsb
mov
add
dec
cltd
mov
or
push
div
adc
fwait
or
arpl
jno
repz
cmp
xor
enter
cmp
mov
jmp
mov
mov
mov
insl
ljmp
mov
cmpsl
inc
addr16
ss
fisttps
ds
inc
ficoms
xor
inc
inc
sbb
push
outsb
and
in
bound
lods
fwait
repz
pushf
outsl
cmp
rol
and
dec
xor
pop
fwait
call
aam
sbb
inc
inc
ret
cmp
repnz
imulb
movsb
adc
fiaddl
movsl
jmp
aas
ds
mov
xor
mov
pushaw
aam
sub
jnp
imul
cmp
jne
jnp
lahf
xorl
and
or
push
sbb
cli
fildl
jmp
andl
xchg
aas
inc
adc
jne
mov
stos
cmpl
insl
cmc
jne
loop
pop
push
mov
inc
push
and
lds
addr16
jmp
ss
das
jg
and
cmpsb
bound
andb
hlt
lcall
mov
das
cmpl
dec
mov
andb
add
dec
imul
adc
xor
ds
fldcw
adc
sahf
lret
dec
pusha
mov
push
add
pop
jmp
cmp
test
lods
sub
cmp
aam
sbb
lds
pop
mov
in
outsb
pop
cmp
inc
arpl
cmc
mov
es
and
adc
xchg
loopne
imul
jb
scas
mov
popa
arpl
inc
pop
mov
movsl
push
icebp
je
sbb
mov
mov
add
xor
ret
cli
icebp
jns
call
add
push
inc
out
imul
jne
clc
decl
cmpsl
stc
sub
stc
subb
add
ret
mov
lods
sbb
mov
xchg
js
xchg
mov
xchg
mov
push
inc
dec
add
mov
cmp
out
push
imul
cmp
fcomp
cmp
insl
add
xor
es
jp,pt
mov
lcall
adc
popf
push
mov
xor
cltd
dec
mov
mov
add
sti
pop
mov
pop
icebp
loopne
pushf
or
shll
or
xchg
jp
jb
inc
jg,pn
aam
inc
pop
xor
or
out
test
sti
push
in
jge
jo
lcall
mov
mov
je
fsubrl
jecxz
inc
push
cwtl
pop
or
xchg
es
scas
insb
pop
rclb
xor
sti
push
mov
dec
bound
stos
pusha
xchg
cmp
jmp
fdiv
loop
jecxz
insl
imul
push
and
insl
mov
lods
cmpsl
mov
adc
loop
repnz
stc
pop
into
adc
pop
mov
jns
movsb
adc
inc
and
inc
or
test
adc
fldcw
cmp
and
iret
insl
sub
cmp
shr
jbe
movsl
xor
shrl
lds
pop
mov
inc
push
daa
nop
mov
adc
incl
cmp
mov
ffreep
dec
loopne
roll
jae
push
push
es
sarl
test
or
lea
jl,pn
adc
mov
das
rorl
inc
lret
mov
or
stc
addb
or
dec
mov
pop
repz
dec
push
test
push
and
mov
das
or
cmp
sti
push
movsb
push
les
pop
cmp
push
xchg
and
pop
imul
cld
and
xchg
sub
adc
stos
adc
aas
jbe
addr16
dec
mov
int3
lock
imul
outsb
dec
popa
mov
pushf
inc
pop
xor
inc
jnp
insb
pop
dec
nopl
push
lahf
lea
outsb
pop
cs
stos
adc
mov
pop
mov
jno
xchg
std
fnstenv
imul
gs
pushf
push
xor
sbb
mov
mov
pop
js
lret
pop
mov
js
xorb
dec
test
fldl
adc
testb
cmp
inc
int3
dec
fcoml
and
in
pop
cld
and
imul
roll
aam
inc
dec
subl
sub
or
adc
mov
adc
ss
test
lret
mov
fistpl
add
xor
lea
xchg
dec
xchg
popl
in
xor
ja
mov
jns
ret
mov
adcb
xor
ja
sub
jmp
clc
dec
push
cld
inc
in
hlt
cli
inc
inc
out
rolb
lods
mov
push
inc
fnstcw
ret
out
cmp
adcl
neg
leave
mov
ss
mov
out
js
and
rep
mov
daa
mov
scas
jno
inc
fldt
lret
aaa
idivl
loopne
lds
cmpsl
fnstenv
xchg
mov
inc
lahf
sahf
lods
cmpsb
pop
add
fildl
push
lock
pop
lea
jmp
fnstcw
or
loop
imul
inc
jb
outsl
pop
fisubrs
mov
mov
jbe
enter
push
adc
popw
dec
jecxz
scas
movsb
sbb
aas
push
lret
and
jb
pop
jmp
cs
pushf
cmp
cmpsl
sub
sahf
adc
push
ficomps
stos
adc
andb
ret
mov
adc
dec
inc
push
insb
rcrb
mov
mov
mov
insl
pop
sub
xlat
fisttpl
dec
cmpsb
imul
adc
cmp
mov
xor
push
sbb
cmp
in
add
xchg
or
subl
mov
imul
in
repnz
dec
mov
cmpsl
jns
data16
push
cmpsl
call
cld
jnp
outsl
ds
clc
mov
dec
mov
jle
xor
pop
push
xor
cltd
movsb
add
push
xor
cwtl
push
adc
scas
div
pop
fisttps
xlat
stos
sub
sbb
gs
push
pop
stos
ja
xor
pop
adc
sahf
or
movsb
fwait
cmp
xchg
leave
sbb
scas
xor
stos
add
xchg
xchg
fbld
inc
imul
push
mov
and
jns
dec
and
push
rcl
jbe
pop
fcoml
sbb
iret
xchg
jae
push
in
cmpsb
jp
std
bound
lret
lahf
jg
fsubrl
rolb
mov
sahf
rcl
cld
pop
jns
pop
or
ret
or
dec
xor
xchg
roll
int
push
jp
notb
cld
aam
jmp
sub
dec
xchg
push
in
insb
inc
push
inc
xor
or
cmp
push
fstps
push
adc
or
notl
fildll
stos
int3
xlat
add
add
in
mov
lods
pop
pop
in
mov
movsl
pop
scas
inc
mov
sub
sbb
cld
add
mov
add
fnstenv
das
fs
std
lods
jp
shrl
repz
cmp
pusha
imul
and
flds
imul
or
dec
bound
repnz
xor
xchg
ret
jo
out
xor
inc
pop
push
cmpsl
xchg
xor
leave
daa
mov
jae
pop
shlb
xor
xor
lea
aaa
xor
cmp
into
cli
repz
and
pop
lret
add
push
add
or
or
xlat
xchg
mov
or
or
mov
pop
push
jns
cmp
cmp
xor
mov
or
inc
xchg
outsl
inc
out
or
sub
int3
dec
sub
pop
call
repz
out
ret
addr16
or
sbb
sub
mov
mov
sarb
fistl
mov
inc
adc
cmp
and
pop
loope
lcall
fldenv
dec
dec
out
insb
pop
mov
fsubrs
cwtl
enter
mov
cmp
adc
rclb
pop
and
mov
movb
lock
loope
pop
cmp
pop
stos
jae
push
or
js
pop
aas
lret
cs
iret
inc
xchg
xor
test
lea
mov
jbe
lret
adc
adc
in
dec
cmp
sbbb
insl
lret
das
jnp
out
stc
dec
dec
dec
stos
cli
clc
imul
fcomp
push
int
sbb
cmp
add
sub
mov
addb
rcr
jecxz
xchg
pop
es
dec
dec
sbb
inc
fcomps
jecxz
jns
sbb
je
mov
nop
loope
insb
fwait
inc
dec
adc
fldlg2
pop
aaa
push
mov
sbbl
pop
in
dec
sbb
xchg
push
add
les
pop
arpl
pop
outsb
rolb
out
ds
xchg
js
out
push
push
pop
insb
arpl
decb
mov
pop
jo
pop
mov
arpl
jno
fiaddl
fwait
lret
insb
push
cs
pop
cmpsb
push
das
xor
mov
adc
dec
or
aaa
aas
dec
stos
insw
xor
jae
stos
in
or
cld
sti
repnz
xchg
std
movsb
ret
daa
fdivs
stos
ds
fbld
and
int
jnp
pop
xor
xor
pop
ja
push
pop
pminsw
mov
xlat
repnz
push
push
mov
add
loopne
push
add
sbb
lods
dec
lods
pop
into
clc
or
jae
mov
add
inc
adc
adc
push
imul
pop
sti
sub
cmp
pop
jg
popf
and
mov
jge
daa
lea
imul
into
iret
and
xor
imul
and
jp
pop
lcall
xor
xor
mov
cwtl
hlt
mov
push
xchg
cmp
fsubs
cmp
push
imul
cmp
loope
cli
dec
repnz
sbb
scas
xlat
jge
pop
or
es
cmpsb
dec
icebp
dec
int3
inc
dec
iret
pop
dec
cmp
pop
je
dec
mov
loop
shrb
cmp
les
test
pop
subb
fists
fwait
rcrl
add
inc
aam
lret
aas
fimuls
jl
or
lret
fdivrs
imul
sub
das
cwtl
pop
or
scas
push
lds
inc
enter
cli
cmp
mov
adc
dec
dec
jb
sub
dec
sbb
and
filds
jmp
push
lock
icebp
inc
jns
test
fsubs
xchg
iret
jbe
dec
js
xor
fstpt
sahf
stos
mov
cmp
fstpl
test
cmp
scas
cmp
adc
das
mov
enter
pop
inc
cltd
pusha
dec
mov
cmp
outsl
xchg
sbbb
pushfw
adc
out
sti
mov
fidivl
aam
or
xchg
jmp
adc
arpl
test
sahf
xchg
add
cmp
fmull
mov
dec
mov
not
jg
iret
xor
dec
jge
pop
jbe
cmc
xchg
mov
jbe
enter
decb
sbb
sbb
out
enter
push
add
jmp
test
fists
repnz
fsubrs
lods
test
add
pusha
lods
xchg
int3
mov
push
sarb
dec
inc
jmp
mov
add
xchg
mov
mov
adcb
or
mul
jmp
jae
hlt
aaa
mov
scas
push
dec
xchg
add
and
loope
cltd
pusha
mov
int
pop
push
nop
push
adcl
icebp
or
jae
idivl
xor
add
pop
push
je
ljmp
ss
and
icebp
enter
mov
xor
jmp
lods
cs
icebp
mov
cli
lret
out
addl
cld
cmp
pop
xor
sbb
jb
jbe
loop
test
sub
fisubs
repz
sbb
test
push
sahf
and
mov
test
pop
mov
pushf
jno
dec
sbb
dec
daa
inc
std
adcl
jo
scas
xchg
pop
cld
mov
cmovb
xchg
nop
test
lret
movsl
or
mov
jge
fadd
pop
cs
dec
inc
icebp
inc
sub
outsl
adc
push
adc
jae
fwait
sub
inc
cmp
rolb
add
jnp
xchg
lds
es
mov
icebp
lcall
jnp
sub
mov
or
cmp
pop
insl
mov
negl
jae
test
xchg
mov
cmpsb
mov
lcall
sub
add
or
lds
scas
add
in
xchg
pop
sub
in
clc
add
fldcw
lret
mov
jp
add
or
fbld
or
xlat
adc
je
jae
xchg
int
dec
pop
flds
add
inc
mov
popf
pop
push
popf
in
mov
push
dec
mov
sbb
pushf
push
stc
mov
test
cmp
sub
insl
out
shll
jl
in
addr16
xchg
pop
mov
ljmp
pop
jns
sbb
mov
xchg
cli
jmp
hlt
jnp,pt
dec
mov
jg
pop
movsl
jbe
divw
in
ljmp
xchg
fisubrs
inc
in
int
dec
push
sahf
xchg
inc
decb
adc
subl
pop
lods
in
mov
lods
fisttps
jbe
mov
loope
push
stos
xor
cltd
push
sub
and
mov
lahf
cltd
mov
leave
movsb
adc
daa
inc
int
cs
ret
mov
negl
test
or
jle
roll
sarl
mov
and
lret
and
subb
or
addr16
jb
jae
mov
movsl
add
jns
mov
js
push
jo
adc
cltd
cs
xor
repz
imul
xorb
arpl
pop
cli
aam
ljmp
jne
je
movsl
notl
mov
pop
mov
mov
adc
out
cmc
loop
sub
out
jae
sbb
sarl
or
std
es
sub
adc
icebp
arpl
into
and
xchg
jno
insb
andb
fsubr
loop
jg
add
or
movsl
les
sub
cmpsb
mov
xchg
sub
inc
cmp
cli
lahf
idivl
dec
leave
das
imul
stos
fdivl
fidivrl
jb
repnz
enter
mov
sub
sbb
call
stos
xchg
into
out
fidivrl
stc
out
sub
mov
or
dec
xor
or
fsubl
pop
push
sub
popa
fs
sub
cli
cmpsl
mov
pop
popf
iret
js
xor
jb
les
inc
call
repnz
add
fwait
pop
das
js
add
rorb
jle
adc
test
adc
adc
inc
into
pop
mov
adc
cmpsb
stos
out
mov
push
shlb
xchg
xchg
push
sub
cli
mov
dec
les
js
adc
jge
pop
cmp
dec
mov
push
jle
sti
cltd
inc
mov
push
loopne
sub
lcall
dec
push
addr16
stos
xchg
sub
pushf
in
xchg
sbb
pusha
ficomps
sub
into
push
mov
xchg
push
pop
mov
sbb
into
sub
pop
ror
dec
push
int3
xor
lcall
add
stos
stc
adcl
xor
and
fsubrp
daa
mov
dec
lret
inc
mulb
sbb
ss
inc
pushf
sub
xchg
cmp
xor
call
enter
mov
mov
cs
mov
daa
testb
push
notl
lret
inc
mov
jb
pop
cmpsb
dec
jbe
pop
scas
nop
ror
mov
push
sub
push
int3
sub
and
or
out
and
sub
inc
dec
cmp
imul
mov
add
cmp
mov
scas
mov
mov
test
out
add
or
mov
mov
cli
fidivrl
mov
lret
push
std
add
adc
js
xlat
mov
xor
jecxz
inc
push
dec
mov
inc
jae
mov
and
push
repnz
stc
dec
xor
push
and
jmp
shll
pop
or
cmp
sahf
mov
fsubrl
lea
xor
sbb
and
mov
inc
int
xchg
test
ficoml
push
jmp
pop
cmc
jne
mov
adc
xor
and
stos
sbb
loop
push
mov
loopne
sub
mov
das
daa
in
mov
xchg
add
and
fwait
mov
push
movsl
and
mov
sbb
cmp
xor
inc
jns
cmp
dec
or
dec
cmp
and
fs
aad
call
jge
dec
das
fcompl
mov
in
dec
and
aam
adc
lods
mov
pop
inc
test
leave
std
pop
lods
inc
sub
scas
jl
insl
jno
cltd
mov
cmc
mov
stc
add
add
movsb
daa
lea
test
fisttps
mov
fs
push
shll
in
outsl
jne
xor
pop
in
imul
xor
mov
scas
fistl
add
popf
dec
sub
cwtl
xor
and
xor
mov
mull
jns
dec
adc
shl
arpl
jns
and
loopne
stc
popa
adc
adc
enter
cmp
inc
mov
jo
mov
aaa
jmp
cmp
imul
inc
cmc
icebp
enter
xchg
fnstenv
pushf
shlb
clc
mov
dec
loope
in
fmuls
add
mov
jo
xchg
jno
push
or
les
insb
fadd
mov
add
and
adcl
mov
xchg
incl
cwtl
test
outsl
mov
js
add
ds
mov
sbb
mov
and
add
test
cwtl
arpl
mov
js
pusha
jmp
cli
insl
xor
insb
sub
pop
loope
movsl
bswap
sbb
call
insl
mov
mov
push
aam
fiaddl
or
mov
inc
xchg
mov
dec
add
xor
jo
sub
jno
push
repz
mov
leave
or
or
mov
jne
or
mov
cmc
mov
push
adc
gs
sub
and
inc
rcrl
jo
pop
adc
sti
test
inc
add
xor
xlat
stos
fdivrs
pop
inc
jl
mov
pop
mov
mov
js
je
aad
or
pop
jo
pop
adcb
or
xchg
lods
push
sbb
mov
mov
shlb
fnstsw
xchg
mov
cltd
int
inc
inc
inc
add
mov
mov
int3
pop
xor
jmp
pop
jns
sub
gs
sbb
mov
add
shr
push
fstpl
and
push
popf
mov
cwtl
cmp
clc
pop
insl
imulb
sub
mov
test
inc
int3
mov
cmpb
cmp
inc
add
push
or
movsb
dec
adc
or
lods
lds
test
out
adc
hlt
jne
jne
test
inc
out
add
frstor
and
leave
sbbl
cld
mov
mov
mov
sbb
cmp
and
cmpsl
cmc
roll
shlb
mov
sub
add
dec
pop
imul
notl
adc
mov
aad
adc
sbb
aam
fnstsw
in
movsb
fs
sub
push
dec
cmp
pusha
int3
pop
sti
lea
lods
je
fs
jno
sub
mov
aad
mov
aam
clc
scas
fldl
mov
icebp
lret
cli
iret
or
int
mov
adc
and
test
clc
int3
xchg
lret
push
push
or
das
lods
and
pushf
adc
sbb
inc
cwtl
out
mov
mov
mov
outsl
cmp
mov
jp
fsts
iret
xor
push
leave
je
push
push
and
lcall
push
sbb
sub
mov
fstl
cmp
bound
dec
jns
arpl
fisubrs
inc
xor
xor
push
add
sub
xor
out
sbb
pop
aad
jge
inc
inc
sub
add
lcall
sbb
into
mov
subb
scas
scas
jmp
mov
xchg
and
rclb
pop
outsb
add
ds
mov
fildll
icebp
imulb
push
and
push
scas
sub
add
cmp
pop
mov
push
add
js
sub
mov
aaa
sbb
iret
outsb
or
aam
xchg
into
fcoml
jge
cs
fwait
out
xor
arpl
jg
sbb
stos
loopne
mov
pop
mov
sub
inc
cmp
xchg
push
stos
int3
mul
mov
and
jae
sub
aas
adc
mov
cmpsl
sub
adc
inc
sbb
icebp
hlt
and
lcall
and
fmull
fdiv
inc
scas
xor
or
js
ret
ss
lock
adc
mov
stos
out
fimuls
mov
pop
movsb
xor
bound
in
or
lahf
cmp
loop
les
jae
adc
inc
movsl
or
int
add
ja
pop
sbb
cmp
test
xlat
js
lret
bound
ret
inc
xor
pushf
es
adcb
mov
hlt
push
mov
fsubrl
cmpsl
das
add
mov
add
cmpsb
stos
cwtl
shrl
pop
push
aam
test
test
jbe
xor
mov
push
sub
ret
fwait
cli
inc
clc
adc
lock
andb
xor
in
bound
repnz
jns
pop
in
fwait
in
dec
fwait
push
xchg
outsl
iret
push
xlat
push
orb
jle
push
mov
or
fstpt
inc
hlt
jae
rcr
push
std
or
sahf
fsubl
and
call
cmp
cld
mov
sub
lock
out
nop
mov
out
mov
in
or
test
arpl
call
pop
inc
fs
dec
jecxz
and
rol
push
arpl
int3
insb
sti
push
mov
jo
sub
sbb
dec
rorb
lock
cmp
int
sub
jnp
movsb
cmpsb
out
aaa
shr
jle
sub
daa
enter
mov
mov
nop
int
xlat
faddl
dec
push
lret
in
and
xchg
pop
and
pop
jbe
loop
xchg
push
push
mov
jnp
inc
xchg
cld
bound
dec
xor
outsl
rclb
fnstsw
inc
fucomip
pop
test
aaa
sbb
js
mov
lret
lods
or
inc
bound
fwait
dec
ss
adc
add
loopne
xor
cmp
xor
les
cmp
stos
sbb
stc
xor
aam
iret
dec
icebp
jbe
push
pop
jnp
sbb
jnp
ret
sarb
pop
inc
es
jbe
mov
lcall
outsb
loopne
testl
sbb
sti
sub
sub
fnstsw
xchg
leave
mov
stos
cmpsl
cltd
sbb
cmpsl
inc
push
test
sub
or
jp
xchg
lret
cmpsb
pop
test
add
add
add
add
add
int
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
