jmp
insb
imul
add
add
add
outsb
ds
jmp
push
mov
jmp
stc
addl
jmp
repnz
jmp
dec
dec
ret
jmp
inc
shr
pop
push
push
pushl
jmp
dec
std
ret
mov
jmp
aam
jmp
scas
push
jmp
fidivl
shr
add
ret
jmp
pop
jecxz
cli
add
add
add
jmp
push
repz
add
or
out
pop
jmp
pop
popf
jmp
mov
xorb
popl
add
jmp
jnp
enter
jmp
or
cmp
add
sbb
out
insl
stc
push
xchg
adc
sbb
shl
push
arpl
and
dec
mov
or
fnstcw
cmp
outsb
subl
outsl
lods
mov
es
sbb
adc
push
shll
pop
pop
lahf
sahf
push
imul
mov
loop
insl
jg
popf
sub
jae
insl
jae
cmp
lods
inc
shll
pop
xchg
inc
sbb
push
mov
imulb
out
mov
rclb
lea
cwtl
adc
loop
je
clc
imul
jp
push
inc
dec
jp
push
pop
adc
mov
roll
gs
push
scas
xor
bound
cld
cmp
out
jb
push
pop
inc
mov
daa
repnz
lods
jl
inc
loopne
ficoms
sub
mov
lock
push
and
dec
dec
jg
push
and
or
lock
sbb
fiadds
aas
test
xor
test
out
imul
pop
ljmp
icebp
fdivs
test
jl
xchg
stos
xchg
lods
mov
lods
mov
data16
jno
movsb
inc
cmp
aas
test
jbe
mov
fnsave
sub
xchg
push
fs
lds
fwait
push
call
mov
aam
and
inc
dec
xchg
subl
jbe
lods
xor
or
xlat
insb
sbb
push
sbb
pushl
xor
pop
hlt
jecxz
sub
bound
sbb
xchg
fldl
cltd
nop
cmp
add
push
mov
inc
jle
shll
cmpsl
lds
dec
jnp
adcl
hlt
sub
xor
mov
shll
cs
push
push
xor
mov
and
out
sbb
add
sub
add
or
or
jmp
lock
sub
cli
ja
and
xchg
pop
push
adc
lods
pop
movb
fwait
addr16
cwtl
lahf
pop
and
int3
js
mov
enter
xchg
dec
mov
in
push
sbb
iret
arpl
imul
mov
cmp
js
push
push
ret
sub
fwait
lods
and
aaa
jae
rep
sbb
xchg
mov
repnz
int3
or
div
test
dec
fcomps
scas
jno
pop
mov
mov
shrb
fbld
orb
cmp
outsl
inc
and
xor
mov
jo
loopne
cmp
fwait
cwtl
inc
mov
dec
imul
insb
xchg
imul
push
lret
sub
and
test
sub
add
xor
cmpsl
cmp
mov
pmaxsw
adc
test
jae
mov
sbb
add
mov
and
outsb
pop
sub
fs
lds
nop
sub
jle
bnd
jge
push
fbld
xchg
mov
add
or
dec
mov
fldpi
std
inc
cmp
mov
lock
inc
test
xchg
and
movsb
popf
imul
test
mov
mov
rcrb
stos
rcll
cmp
arpl
in
icebp
adc
jbe
dec
inc
jo
rol
lahf
and
rcll
repnz
xchg
in
xor
cli
mov
movlps
loopne
cli
test
pop
inc
in
xchg
dec
sbb
fstpt
lods
imul
ucomiss
lret
loope
mov
shlb
hlt
loop
ljmp
test
sub
insl
pop
mov
sarb
out
dec
lods
push
pop
mov
imul
aam
pop
jl
aad
dec
jo
jb
lods
mov
push
mov
inc
jmp
sub
and
push
jle
jb
pop
int
push
sub
pop
jns
push
hlt
or
popf
ja
jae
dec
jmp
in
dec
popf
inc
dec
adcb
stos
dec
jl
mov
mov
sub
cmp
and
arpl
push
pusha
insl
and
mov
es
mov
mov
mov
aas
or
dec
push
ret
insl
mov
imul
mov
mov
sarb
sub
lret
cmpsl
sbb
sbbb
xor
lock
cli
cmp
nop
add
cmpsl
jl
dec
xlat
insl
and
adc
cs
pop
sbb
sub
cmpsb
mov
es
push
imul
out
jl
out
pop
xchg
test
aam
cs
add
fcoms
das
es
out
or
mov
xor
pop
mov
cli
lds
xor
icebp
sub
popf
xlat
fdivrs
dec
es
and
mov
je
push
inc
mov
mov
dec
xchg
xchg
mov
shll
jne
lods
sub
pop
addr16
pop
test
iret
sbb
lret
push
pop
mov
popa
loopne
cmp
outsb
dec
cmpsb
sub
cli
loopne
cmp
fisttps
cltd
mov
fldcw
in
jg
adc
cwtl
cltd
inc
dec
cmp
mov
popf
pop
rorb
vpor
jmp
scas
cmp
push
jmp
imul
jns
mov
inc
loopne
or
xchg
add
inc
outsl
shll
iret
xor
icebp
pop
xchg
xor
nop
cmpsb
push
dec
test
push
mov
sbb
scas
pop
insb
mov
out
pop
push
popf
mov
jne
jle
imul
push
cmpsb
pusha
jnp
push
fildll
shlb
std
xor
and
xor
lods
stos
xor
inc
or
fiadds
jnp
mov
pop
lret
mov
ret
xor
ljmp
mov
and
dec
xor
pop
rcll
pushl
pop
sub
sub
pop
mov
aaa
fabs
jb
daa
push
mov
dec
mov
pop
negb
dec
divb
mov
mov
hlt
mov
lret
hlt
jge
add
mov
hlt
in
in
xchg
sbb
fcoms
fdivl
pop
adc
add
subl
ss
mov
sbb
dec
sbb
dec
in
pop
mov
xor
or
jmp
sub
push
out
mov
and
fucomip
mov
aaa
cs
fs
sbb
jae
pop
cli
cli
cli
inc
add
insb
shll
push
imul
mov
or
push
je
pop
cmc
dec
adc
cmpl
push
in
in
inc
roll
push
inc
jnp
mov
jp
hlt
std
xor
ret
nop
aaa
sub
push
sub
xchg
sbb
jge
fcmovnu
mov
cltd
pop
pop
repnz
cmpsb
xchg
shlb
inc
jmp
ds
loope
mov
pusha
push
xchg
int3
mov
jge
xor
jno
movsb
push
filds
adc
dec
lea
das
in
fists
dec
mov
es
sbb
icebp
xchg
inc
mov
mov
js
add
jb
in
and
pop
stos
std
jbe
fisubl
std
imul
ss
mov
in
in
xor
or
cmpsb
sahf
and
shll
shll
inc
test
out
lret
push
lds
inc
movsl
jb
bound
pushw
scas
mov
xchg
mov
jne
orb
mov
mov
mov
adcb
xchg
int3
mov
pop
fcoms
shlb
add
dec
je
lcall
in
insb
lock
pop
jp
jae
movl
xchg
pop
mov
jl
mov
lock
frstor
ja
push
cmp
pop
rolb
fwait
into
loopne
push
jmp
sbb
adc
in
push
iret
aaa
ja
or
and
and
sbb
cli
sbb
ja
mov
js
xchg
or
shrl
dec
pop
xor
push
outsb
pop
jbe
and
fs
or
inc
roll
push
fdivr
mov
xor
arpl
jns
jg
cmp
mov
mov
call
insl
in
mov
pop
fnstenv
addr16
sbbb
mov
aam
jo
enter
mov
xchg
xorb
inc
push
mov
cmp
fsubrl
dec
add
hlt
jno
pop
call
pop
adc
imul
arpl
xor
insb
in
jnp
push
adc
rcl
imul
idivb
inc
es
push
cmp
das
inc
pop
xor
outsb
jb
stos
push
mov
lahf
pop
mov
arpl
xchg
push
dec
mov
insb
enter
in
xor
pop
sub
int3
pop
mov
sti
stos
bound
ja
inc
ja
pop
idivl
gs
xor
jno
jecxz
push
sti
sbb
stos
inc
iret
or
jo
cmc
push
jl
test
pop
data16
push
xchg
rorb
lret
fstp
jo
or
mov
inc
mov
inc
push
negb
push
xor
inc
repnz
sbb
push
xor
jg
sbb
push
insl
inc
or
dec
xchg
inc
push
pop
test
xor
dec
std
loop
insb
cmp
ja
into
inc
pop
invd
jbe
and
cmp
hlt
sub
jbe
loope
inc
dec
xchg
test
clc
scas
jne
jno
sahf
aad
repz
xor
shrl
xchg
lds
inc
mov
jle
imul
jne
ret
jns
push
sub
addr16
in
jmp
das
popf
bound
sbb
adc
sbb
pop
or
pusha
mov
les
mov
loopne
pop
mov
je
loopne
cmp
mov
lock
andb
inc
xchg
pushf
push
pop
inc
pusha
jne
jge
inc
scas
das
sbb
imul
rcll
pop
or
dec
sub
jg
push
loopne
pop
mov
int3
out
dec
mov
mov
fwait
inc
stc
movsl
pop
addr16
fists
int3
xchg
pop
push
or
or
jge
inc
outsl
mov
dec
test
jno
and
mov
or
xlat
push
mov
idivb
enter
scas
jno
inc
in
or
inc
addb
in
popa
mov
aaa
imul
ljmp
idiv
dec
inc
out
mov
and
loopne
sub
adc
ljmp
ret
dec
stos
out
insb
dec
pusha
aaa
sub
xchg
cmp
sbb
mov
cmp
popf
icebp
jp
popa
xor
in
dec
add
pop
enter
not
lret
ret
inc
das
adc
adc
and
ds
in
ss
mov
or
cmp
enter
and
mov
imul
xchg
push
lcall
ds
aad
jg
mov
mov
shll
xor
xchg
add
mov
mov
add
lds
sbb
pop
in
mov
rorl
inc
sarb
setnp
sub
xchg
shlb
sub
mov
adc
insl
sbb
xchg
mov
sub
popl
rcrl
daa
and
xor
insl
jmp
adc
add
imul
ss
or
jp
lods
jbe
adc
lods
adc
mov
mov
add
mov
cmp
popa
test
stos
jne
sahf
xorl
cmc
mov
cmpsb
dec
mov
push
mov
cmp
js
inc
sub
sbb
fstl
loop
push
sbb
pop
cmp
mov
js
mov
mov
inc
inc
lds
loop
push
mov
sbb
negb
testb
and
xor
in
xor
inc
inc
nop
icebp
notl
andnps
adc
xor
jns
mov
fcoml
lock
or
idiv
push
int3
je
add
mov
popf
sub
or
jno
mov
ret
adc
dec
in
pop
mov
jecxz
repz
gs
rorl
xor
xchg
sbb
enter
jno
push
lods
adc
push
inc
cmp
cmp
jnp
xchg
xchg
mov
pop
mov
mov
dec
mov
add
stos
shrl
push
jge
inc
cmp
ds
xor
int3
pop
lods
cs
rcrl
or
jge
aam
repz
ss
or
mov
mov
jecxz
push
mov
lcall
aaa
dec
out
rorb
ds
xchg
sahf
xor
nop
adc
pop
jns
out
loope
and
ret
and
or
sbbl
daa
push
sub
xor
repnz
fwait
sbb
ret
or
ja
push
xor
int3
leave
pop
and
ja
sarb
adc
lea
cmpsb
ret
jp
repz
fdivs
fildll
mov
psubusw
and
ret
int3
jle
inc
xor
or
mov
int3
scas
popf
cmpps
sahf
sbb
adc
jge
and
loopne
sbbb
out
jge
sbb
pop
or
or
dec
outsl
sub
in
pop
xchg
loop
dec
sbb
cmp
aam
scas
adc
das
xor
js
lods
sbb
xchg
inc
push
mov
sub
lods
xor
inc
nop
mov
jmp
mov
and
pop
dec
repnz
dec
mov
sub
adc
push
xor
cltd
stos
ret
loope
mov
movsl
mov
loop
pop
fisubl
ja
inc
fdivl
cmp
pop
arpl
arpl
pop
pop
daa
mov
xor
jg
and
pop
adc
fimuls
jle
lds
push
mov
lret
sub
test
ror
leave
pop
sub
pop
cmc
mov
rolb
clc
inc
loope
fbstp
stos
jnp
adc
outsb
dec
test
push
into
cmc
pop
aaa
cld
lea
inc
mov
sub
mov
adc
sbb
xchg
in
jp
sbb
xchg
dec
ds
mov
stc
push
je
imul
mov
xchg
in
das
push
pop
jae
adc
pop
jecxz
push
dec
sub
nop
scas
jno
sbb
ror
lods
lret
in
add
pop
or
push
mov
jl
test
or
cs
push
ds
repnz
loope
inc
call
std
movsl
inc
in
inc
push
mov
shll
scas
dec
push
repnz
insb
sti
mov
daa
sarl
test
push
mov
cmp
or
inc
and
jae
sar
div
and
sub
out
cld
dec
xlat
xchg
clc
inc
mov
cmp
mov
mov
ds
cmpsb
inc
scas
je
and
shrl
inc
xchg
pop
nop
in
xchg
in
leave
sbb
mull
bound
int3
or
sub
jge
fwait
push
cmc
xchg
xchg
and
lret
jl
enter
mov
inc
ja
adc
cmp
outsl
cmp
cltd
or
inc
xlat
pop
mov
cmp
fwait
js
ret
loope
xchg
cmpsl
arpl
push
icebp
loop
out
test
xlat
loop
xchg
mov
js
sarl
test
fcmovnbe
lcall
cmp
inc
stc
mov
push
divb
das
cmp
push
mov
pop
xchg
dec
repz
inc
pop
sti
mov
shrb
jo
xchg
bound
pop
and
dec
ja
out
mov
cltd
xor
jp
inc
or
lods
mov
inc
fidivrs
aam
leave
or
mov
jno
or
or
out
xchg
sbb
sub
cwtl
jp
inc
stos
arpl
jmp
ret
jnp
stos
jmp
imull
push
jns
jecxz
repz
scas
outsb
jbe
adc
das
inc
popa
sbbl
xor
decl
xor
cmpsb
hlt
jb
mov
arpl
push
pop
dec
imul
cs
jg
movsl
or
sub
sbb
jp
rclb
insb
idivb
sbbl
sub
clc
pop
repz
inc
sbb
mov
fnstcw
inc
or
or
jl
dec
adc
negb
mov
fwait
xlat
popa
fwait
pushf
subb
add
jb
incl
cmp
mov
and
ret
inc
mov
jb
mov
add
enter
jle
pop
daa
cmp
je
jecxz
mov
mov
out
mov
dec
lods
push
jb
push
pushf
pop
sub
stos
subl
rorb
in
xchg
xor
cli
add
push
mov
dec
inc
fcoml
dec
add
sub
jne
adc
push
stos
sarb
pop
int3
loopne
xor
shrb
imul
cltd
inc
cmp
or
subl
pushf
sub
add
inc
nop
ss
or
jae
xor
nop
lcall
lcall
sar
sbb
repz
pop
aam
cmp
push
rolb
fdivrl
sti
clc
hlt
mov
popl
mov
leave
pop
out
arpl
std
xchg
inc
fisubrl
stos
pop
repnz
push
stc
aas
push
jae
es
jb
movsb
hlt
je
std
add
outsb
jl
mov
int3
leave
leave
pop
cwtl
jmp
cmpsb
cmp
dec
lock
fwait
pop
push
mov
in
mov
cmp
mov
dec
lahf
repz
inc
in
orl
sub
and
xor
mov
add
jns
movsb
int3
lea
pop
sbb
sub
icebp
cld
pop
in
jp
loope
pop
mov
xchg
pslld
push
out
mov
shlb
xlat
jge
call
cs
ja
mov
mov
mov
xchg
scas
pop
add
cld
mov
sbb
mov
inc
add
mov
cmp
aam
addl
pop
movsb
and
jg
fs
mov
mov
inc
add
xabort
lods
cmp
movsl
adc
pop
lret
scas
dec
push
cmp
pop
hlt
cmpsl
sub
mov
and
pop
sub
outsb
mov
xor
mov
ret
pusha
sbb
into
add
dec
loop
jb
insl
aas
adc
test
dec
test
mov
lret
mov
jmp
xchg
pop
add
ret
mov
mov
jg
or
pusha
xor
repz
div
jo
sub
xchg
inc
add
add
imul
or
jmp
xchg
nop
push
leave
push
filds
mov
pop
dec
pop
std
xchg
dec
testl
les
mov
ret
cs
filds
mov
daa
lock
shll
es
pusha
jae
addl
imul
add
inc
notb
mov
mov
xchg
dec
and
call
cmp
adc
fcmovu
cmp
icebp
or
pop
pop
sub
push
mov
mov
cli
mov
jbe
xchg
cli
mov
dec
mov
in
mov
fs
jp
int3
arpl
ficompl
icebp
testb
aaa
xlat
imul
stos
ret
push
sti
je
lock
test
aaa
or
jae
out
pop
jle
daa
icebp
xor
push
ret
insl
addl
ficoml
fxch
mov
mov
or
adc
jno
xchg
mov
andl
ja
cmpsl
test
aad
lock
inc
cwtl
lds
ret
inc
daa
insl
mov
fistpll
jmp
addr16
cli
dec
jg
inc
cltd
pop
xchg
cs
out
inc
and
lcall
xchg
sub
gs
jl
pop
or
fwait
cmc
jg
cli
xor
xchg
push
test
jle
mov
mov
pop
bound
shrl
popf
pushf
repnz
pop
rolb
cmc
fs
fucomi
test
sub
push
mov
es
sbbb
data16
mov
cltd
push
add
push
scas
hlt
in
push
inc
out
jb
jb
data16
shlb
mov
dec
ret
rorb
pop
into
cmp
cmpsl
push
rcr
push
and
push
aam
jle
add
inc
out
pop
xchg
shl
and
dec
sbb
insb
adc
adc
adc
inc
ljmp
nop
jne
fdivr
mov
cmpsb
shrb
mov
test
cmp
and
lods
leave
add
lcall
es
xor
in
stos
add
lea
or
adc
mov
mov
cmp
mov
or
jbe
mov
add
ror
fwait
and
push
ja
sub
imulb
or
mov
xchg
lods
outsb
jnp
mov
hlt
cmp
fucomi
lahf
sbb
pushf
clc
frstor
sahf
sbb
data16
mov
add
into
int
leave
or
aas
es
jmp
xchg
mov
xor
mov
fsubrp
outsl
add
mov
movsl
out
jge
push
adc
outsl
mov
or
cli
lds
daa
in
cmp
pop
inc
push
insl
pop
or
test
loopne
loope
mov
pushf
shl
sbb
add
insl
ret
imul
push
lock
loopne
fnstenv
ret
xor
movsb
cmp
push
outsl
jno
cmp
sub
je
rolb
sub
rcrl
into
inc
mov
out
and
inc
cs
aad
mov
sti
inc
stc
idivb
xor
cmpsw
inc
pop
push
jle
fwait
jb
sbb
test
fisttpll
dec
loop
movsb
jmp
pop
test
mov
push
jp
jae
negl
and
push
std
cmpsb
jmp
fs
in
push
dec
cmp
je
insl
mov
and
xlat
mov
mov
mov
adc
imul
jb
pop
mov
cmpb
jne
mov
fdivr
insl
cwtl
inc
aad
stos
mov
mov
shlb
pop
mov
ltr
or
out
or
pop
scas
fstpl
cwtl
xor
dec
jmp
fnsave
test
xlat
mov
out
scas
push
popa
pop
data16
xchg
movsl
into
in
mov
sti
pop
cmp
inc
push
fimull
or
in
cli
push
sub
popf
pop
add
mov
iret
ss
lret
adc
cmpsl
aad
jmp
loop
and
jo
dec
rorl
les
add
mov
push
jg
xchg
adc
and
icebp
cmpl
add
or
scas
pop
cmpsb
in
nop
jecxz
xchg
rcr
jns
imul
xchg
aaa
lods
loop
daa
jno
fdiv
and
inc
fs
xchg
jnp
cmc
xor
dec
dec
sbb
imul
jo
add
inc
insl
loopne
lret
push
sbb
and
divb
pop
loopne
add
fimull
movsl
arpl
inc
movl
cli
pop
mov
xor
xchg
push
pcmpgtd
dec
adc
in
xor
pop
pop
ret
adc
aaa
call
clc
jnp
add
inc
cmpsl
addr16
inc
in
ret
mov
in
pop
or
out
cmpsb
fcompl
cmpb
and
lods
pop
add
sbb
lods
pop
leave
loopne
aaa
fdivs
adc
leave
sub
cli
imul
lret
and
or
or
jno
cmp
lods
mov
sbb
mov
les
pop
jno
or
ljmp
dec
and
adc
or
dec
lock
push
mov
fsubrl
arpl
scas
dec
mov
out
mov
cmp
mov
xchg
in
push
xor
mov
or
inc
adcb
and
ds
push
sti
jmp
or
in
or
iret
adc
xchg
lcall
loop
cmp
in
pop
shrl
cmpsl
or
inc
lea
mov
or
inc
push
pop
push
cmpb
dec
dec
xor
add
mov
mov
push
adc
jge
mov
addr16
inc
mov
xor
leave
mov
mov
xor
sbb
push
mov
pop
es
xor
loop
xchg
fidivs
ret
aam
xchg
xchg
stc
push
fbstp
mov
sub
repz
es
jne
imul
rclb
mov
jp
sti
jmp
inc
lea
and
mov
test
addl
test
mov
mov
add
les
push
push
notb
fstpt
sub
lods
adc
jno
cmp
jge
enter
fs
imul
call
pop
das
into
jnp
push
cs
or
mov
ds
jl
mov
ds
dec
frstor
pushf
mov
mov
out
shl
lock
jecxz
enter
or
fs
dec
es
test
add
sub
mov
mov
and
ret
fstpt
pop
pushf
mov
sub
dec
repz
outsl
imul
imul
ffreep
and
mov
jo
sbb
push
jbe
std
lret
mov
sbb
mov
pop
xlat
and
andb
mov
test
out
fstpt
les
sub
ret
cmp
lahf
imul
add
dec
lds
push
jp
push
lods
mov
push
push
pop
aam
hlt
jmp
pop
sahf
mov
adc
pop
loopne
ror
mov
mov
add
mov
inc
pop
mov
add
cmp
or
stc
lods
push
adc
push
ljmp
inc
lds
and
out
sbb
cli
mov
dec
idiv
jns
sub
push
push
divl
out
das
lods
test
mov
jg
mov
inc
dec
cmp
pop
sbb
les
dec
mov
insb
fcomi
xor
test
inc
mov
pop
sbb
incl
push
sub
aad
xchg
sbb
adc
xor
pop
negb
insl
mull
clc
fsubrl
dec
rcll
mov
xchg
ds
mov
xchg
mov
loopne
pop
jl
mov
int
mov
cmc
jecxz
flds
repnz
inc
mov
or
loope
adc
or
push
aas
fnsave
xchg
lahf
sub
fldcw
xor
xor
mov
jne
jnp
test
inc
xor
inc
lea
addr16
call
ret
insl
adc
dec
shl
inc
pop
fildll
repz
push
mov
sbb
testb
notb
into
imul
repz
mov
fisubl
or
pop
mov
fimuls
ret
dec
xlat
sub
add
mov
pop
es
inc
mov
xor
push
inc
xchg
mov
or
xor
in
fisubrs
imul
in
adc
dec
stos
lds
cs
xchg
shl
jne
mov
sbb
mov
je
xor
add
push
cld
sub
pop
movsb
dec
out
ret
stos
in
hlt
jp
push
cmpsb
mov
sbb
imul
dec
pop
xor
mov
aas
or
and
bound
fdivr
push
xor
hlt
mov
dec
shlb
stc
jmp
imul
add
aaa
and
popa
outsb
aas
mov
adc
mov
or
lcall
xchg
ret
pop
jns
lahf
scas
movsl
push
push
int
xor
stos
insb
or
push
inc
pop
in
imul
hlt
cmpb
xchg
dec
aas
pop
daa
arpl
shl
mov
sbb
gs
lcall
insb
jnp
dec
mov
cmpsb
out
mov
jb
out
int3
into
mov
js
jnp
pop
mov
ljmp
mov
mov
pop
mov
xchg
cmpb
jno
mov
cli
push
ret
and
pop
xor
aaa
fcoml
push
in
repz
mov
cli
xchg
sub
xor
push
jno
mov
push
popa
mov
sub
cmp
lret
sub
int3
or
mov
test
xchg
mov
sub
out
push
orl
adc
flds
push
outsb
inc
push
xor
aad
popf
inc
and
sub
pop
pop
subb
jne
dec
jp
add
inc
sbb
push
or
adc
js
push
icebp
adc
adc
cmp
in
mov
add
out
dec
in
dec
out
les
scas
test
push
loope
ljmp
cmpb
or
or
nop
adc
xor
pop
orl
cmpsl
dec
adc
xor
and
dec
or
aam
das
xor
xorb
dec
repz
ss
daa
xor
enter
test
dec
inc
fstpt
nop
stc
pop
pop
mov
decb
scas
mov
xchg
mov
jnp
mov
cmpsb
mov
xchg
insl
mov
dec
mov
mov
and
sub
mov
out
dec
stos
xor
pushf
enter
inc
sbb
imull
mulb
mov
xchg
nop
or
ds
and
jmp
jne
lcall
in
cmp
sbb
out
mov
divl
aam
fldl2t
adc
push
in
fs
inc
adc
mov
mov
mov
dec
dec
dec
adc
insl
fsts
pop
inc
in
fs
push
leave
jbe
push
icebp
push
and
xchg
push
jb
pop
inc
and
cmp
ljmp
push
xor
sti
sbb
jecxz
rcrb
mov
inc
cld
movsb
cmp
xchg
xchg
ljmp
pop
mov
test
gs
cmp
jmp
inc
pop
lret
imul
mov
pushf
pop
into
fstpl
jns
outsl
cs
addr16
push
xor
xchg
xor
mov
cmp
push
mov
test
outsl
push
pop
jg
xor
jne
ljmp
add
mov
or
test
dec
adc
rorl
sub
iret
sub
les
cli
test
in
xlat
adc
lods
dec
sahf
pop
std
sub
and
stos
xor
mov
dec
loop
or
int3
jmp
scas
sub
fs
clc
je
xor
enter
imull
sbb
filds
xlat
popa
jle
jae
js
loope
imul
dec
sbb
cmp
xlat
icebp
stos
test
push
popf
mov
xor
cwtl
hlt
rcr
push
fsubrs
push
dec
dec
je
mov
cli
pop
xlat
cmp
cmpsb
shrl
iret
xor
mov
mov
dec
mov
pop
mov
stc
or
add
sbb
mov
mov
sub
adc
add
repnz
cmp
mov
dec
pop
push
scas
xlat
outsb
cmp
add
repnz
adc
push
push
xchg
rcll
test
sub
lds
push
dec
adc
xchg
pushf
popa
pusha
cmp
ljmp
pushf
cwtl
push
or
mov
pusha
pop
mov
sbbl
mov
and
scas
jb
rcr
ja
or
cmp
xchg
into
add
aas
lea
pop
push
dec
cmp
testb
adc
jmp
movsl
fisttpll
sub
cmp
dec
in
aaa
dec
sub
dec
test
jns
mov
fstpt
dec
fcompl
cmp
jo
cmpl
inc
pop
repnz
pop
inc
jb
push
stos
fucom
xor
das
in
movsl
popa
lds
xchg
aas
cmp
inc
aas
sbb
loop
icebp
mov
add
negl
sbb
dec
inc
hlt
mov
inc
mov
hlt
loop
cwtl
stos
or
in
lods
adc
sbb
jbe
movsl
inc
add
push
mov
dec
sbb
sahf
push
cmp
dec
jmp
and
cltd
adc
pop
pop
test
adc
mov
xor
in
sbb
fmull
pop
sbb
cmp
dec
cwtl
repz
mov
cmp
arpl
sub
adc
adc
push
rorl
outsb
inc
cltd
aas
push
dec
lret
inc
xchg
scas
aas
fwait
notl
dec
std
sti
cmc
fdivp
ret
lds
inc
mov
xchg
fidivrs
in
cmp
pusha
repz
movsl
xchg
lcall
out
add
dec
add
lret
mov
aaa
push
dec
in
and
leave
dec
xchg
dec
repnz
lds
mov
stos
cwtl
jmp
cmp
fcoms
std
jl
aaa
rcrb
pop
hlt
and
imul
notb
les
fcomps
push
mov
enter
add
andl
mov
bound
pop
mov
inc
pushf
mov
inc
xor
lahf
cmp
sub
mov
jb
xchg
sahf
es
inc
adc
adc
aas
pop
xlat
inc
pop
mov
subb
jb
sub
or
push
fmuls
xchg
mov
sub
js
mov
lret
mov
stos
mov
popf
xchg
xchg
mov
imul
inc
xchg
daa
xchg
mov
test
jb
xorl
movsw
outsb
mov
ret
pop
dec
fwait
xor
sbb
rolb
stos
and
jo
insb
sbb
fmull
sub
push
dec
mov
cmp
jp
or
xchg
les
or
mov
aam
pop
inc
add
cmp
aaa
pop
stc
xchg
inc
xchg
inc
add
jle
inc
pop
jl
nop
adc
roll
in
dec
cmpsb
adc
mov
in
inc
data16
jecxz
mov
mov
mov
xchg
loop
clc
cmc
sbb
stc
jb
and
ret
subl
jmp
jge
hlt
mov
stc
jb
sub
outsl
js
pop
xor
jae
push
inc
test
clc
jae
outsl
mov
mov
rorb
clc
jae
pop
xchg
ljmp
rolw
clc
jae
hlt
loopne
dec
lret
add
add
rorb
stc
jb
jp
sub
stc
jb
add
mov
ljmp
jne
popa
clc
jae
fcmove
jo
ret
sbb
out
outsl
pusha
je
inc
pop
loop
jp
rcrl
pop
jns
inc
jecxz
leave
aad
inc
loop
inc
ljmp
adc
add
xchg
dec
push
es
fildll
ljmp
dec
mov
sub
pop
inc
orl
popa
and
mov
mov
rclb
jge
outsl
es
mov
xor
mov
cmp
iret
pusha
loop
mul
call
inc
lcall
aas
mov
pop
test
imul
les
dec
mov
jb
xchg
bound
insb
vpxor
addr16
mov
add
sarb
xor
jp
jno,pn
and
xor
add
scas
ljmp
loopne
bound
mov
iret
mov
mov
ja
pop
sbb
loop
les
dec
cwtl
xor
add
cltd
nop
pop
ja
lods
jl
mov
jmp
cs
xor
sub
mov
pushfw
xchg
cmp
leave
sbb
lret
sub
icebp
fbstp
pusha
test
in
sbb
pusha
dec
dec
bound
in
dec
std
loop
pop
and
add
pop
push
mov
mov
xor
out
aad
cmc
dec
sub
lods
mov
sbb
mov
fisttpl
and
push
xor
test
loop
sbb
sbb
fisttpll
cmpsl
jb
or
roll
xor
mov
addr16
test
sub
cmc
popf
cltd
xor
icebp
sub
pop
icebp
xchg
in
dec
mov
ret
dec
dec
jl
mov
pop
pop
mov
fs
mov
mov
inc
sub
dec
lods
jg
pushf
hlt
push
adc
dec
fcomp
jns
cmp
or
cmc
jecxz
lcall
aam
rorb
cmp
add
xchg
mov
ret
inc
andl
pusha
add
dec
test
in
test
mov
or
sub
sbb
rclb
test
cmpsb
add
rolb
scas
cmp
pop
pusha
jae
jae
sub
sub
mov
hlt
pop
enter
mov
out
mov
aam
cmpsl
iret
cmp
xor
jmp
icebp
mov
repz
mov
out
loope
cwtl
xor
fistps
add
add
add
mov
movsb
mov
cmp
sti
into
push
pop
repz
or
imul
push
cmp
dec
fwait
hlt
mov
pop
dec
flds
pop
or
ljmp
add
enter
inc
fisubl
rol
mov
aam
sub
sbb
stc
fidivs
idivb
add
aaa
adcl
pop
jb
jns
out
mov
mov
jae
stos
cld
les
stos
and
push
test
sbb
add
pop
ret
push
add
sahf
add
add
add
add
cli
dec
test
cmp
hlt
call
adc
js
mov
push
mov
lret
iret
aaa
sarb
and
cmpsl
jg
data16
jg
adc
aam
inc
int
mov
or
sbb
sub
cmp
decb
mov
fs
stos
das
stos
mov
dec
js
xlat
xchg
fsubl
push
inc
std
and
mov
icebp
pop
inc
lret
jp
loope
push
adcb
push
shlb
cwtl
cmpsl
sbbb
mov
mov
test
test
loop
clc
jne
inc
xchg
es
ds
leave
and
dec
mov
pop
test
shl
push
in
pushl
daa
jmp
pop
and
fwait
pop
push
stc
addb
es
xchg
sbb
xchg
ja
sbb
movsl
or
sbb
in
add
push
cwtl
mov
sahf
jmp
ret
cltd
xor
movsb
mov
adc
mov
lcall
decb
test
push
ljmp
insb
mov
movl
push
jno
mov
fs
scas
push
cli
sbb
stos
sbb
pop
lcall
lds
negl
jae
outsb
pop
mov
xor
icebp
xchg
mov
mov
xchg
inc
loopne
pop
int3
pop
mov
dec
push
fstpl
pop
sbb
aad
sub
dec
sub
sbb
inc
je,pt
add
mov
aam
lret
xchg
aad
inc
in
test
cs
or
jb
imul
int3
out
inc
jle
pop
and
sub
arpl
inc
inc
mov
pop
aad
xchg
cmp
sub
movsl
jle
out
pop
icebp
sub
or
outsl
hlt
pop
xor
mov
fimull
dec
fwait
sti
jb
mov
cmp
pop
xor
cmpsb
fcmove
lock
fstps
jb
sbb
inc
xor
sub
push
xchg
jae
sahf
xor
aam
and
cmp
jns
pop
mov
xchg
imul
cltd
aas
int3
ljmp
stos
mov
adc
xor
pop
outsb
push
jnp
addl
in
js
mov
in
xchg
xlat
nop
cmpsb
pop
pop
in
call
mov
fildll
inc
or
adcl
dec
and
pop
mov
xor
inc
out
mov
cli
pop
inc
mov
shl
jbe
adc
lret
pop
jge
lods
call
scas
or
cmp
insl
inc
jns
fnsave
ret
pop
mov
dec
jg
xor
push
gs
outsb
stos
imul
mov
add
sbb
pop
jmp
xlat
test
in
push
adc
and
js
sub
shrl
xor
nop
inc
sahf
sub
es
sub
stc
loope
pop
dec
lock
popf
sbb
popf
mov
xor
sahf
push
popa
lock
inc
rolb
cmp
or
inc
shl
insl
insb
loopne
repz
pop
xor
test
push
ljmp
stc
cmpsb
mov
popa
test
xchg
dec
stos
mov
jae
cmp
out
fwait
mov
xor
push
mov
dec
xchg
sbb
loopne
adc
pusha
inc
cli
lret
mov
mov
xor
and
adc
fldenv
ds
roll
hlt
push
xchg
es
incb
jle
js
es
std
sarl
pop
jns
jb
nop
add
sbb
in
icebp
cmp
jae
loopne
lcall
jbe
xlat
push
or
stos
insb
loopne
inc
jecxz
pop
mov
popf
xchg
mov
xchg
dec
push
and
cmp
je
shlb
popf
push
xchg
fiadds
lret
push
repz
xchg
mov
pushf
mov
ret
nop
enter
enter
inc
jne
repnz
xor
inc
jnp
sub
popa
imul
pusha
gs
cmp
imul
shll
add
or
jge
mov
pushw
xchg
lds
fcoms
lahf
inc
rcr
out
jmp
pusha
cmp
jge
dec
aam
add
cli
imul
repnz
loopne
rorl
je
ret
lcall
dec
imulb
stos
out
je
iret
dec
cmp
test
loopne
add
faddl
fcomp
andb
add
add
sub
imul
incl
add
add
xor
ja
sbb
add
js
lea
lahf
lea
xlat
es
mov
adc
xorl
dec
lret
cmc
es
sbb
call
rcll
movsb
and
daa
wbinvd
pop
cmpl
or
jecxz
ret
fimull
add
adc
repnz
sub
insb
ret
repnz
sbb
pusha
prefetch
xor
adc
popa
test
mov
mov
in
jmp
stos
mov
gs
clc
mov
or
jbe
and
mov
je
sbb
leave
out
dec
jp
adc
pop
rclb
sub
sub
pop
mov
pop
sbb
inc
mul
addb
js
in
sbb
jno
adc
sti
jl
and
jge
push
shll
mov
ficomps
adc
push
sub
inc
outsl
or
rep
xchg
push
cmpsl
es
mov
xchg
popa
jns
push
pop
inc
mul
addb
sahf
stos
cmpsb
ret
jmp
mov
mov
mov
out
add
jo
cmp
and
loop
jg
push
sub
dec
lret
dec
es
adc
negl
jmp
mov
ja
dec
ret
dec
jo
aas
ljmp
xchg
fdivrl
push
rcrl
adc
adc
push
popf
negl
lods
scas
jmp
ss
xchg
lcall
dec
dec
mov
push
sbbb
cmpsb
and
dec
aaa
nop
sbb
xor
dec
hlt
loopne
pop
out
fstpt
mov
cmp
lods
outsb
gs
mov
dec
mov
stc
cmp
leave
insb
xchg
xor
test
xorb
test
stos
or
hlt
jno
mov
sbb
int3
imul
inc
not
int
pop
jecxz
push
mov
cmp
sbbb
mov
inc
bound
or
mov
cmp
outsl
pusha
mov
sub
pop
cmpsb
and
pusha
jno
push
push
cltd
pop
lahf
stos
cmp
js
sbb
ret
or
lahf
idivl
pushf
bound
daa
jp
leave
outsb
cwtl
sbbl
lcall
jmp
add
cs
ret
in
mov
dec
mov
mov
stos
ret
cmp
fmull
fcoml
and
add
inc
push
out
lds
mov
xor
icebp
sti
movsl
jg
cmp
not
jl
pop
loopne
xor
fisttpl
jnp
pop
push
in
ret
incb
pop
in
sbb
sbb
mov
pop
leave
sub
ret
push
push
sub
mov
mov
xchg
pop
cs
or
insl
icebp
cwtl
aad
loopne
pop
mov
or
ret
enter
xchg
rol
cmp
sti
ret
ds
add
lock
and
fld
ja
push
lahf
adc
ljmp
in
jno
imul
cmp
mov
push
cmpsl
stc
mov
pushf
popa
test
in
xchg
sbb
mov
xlat
enter
mov
das
cmp
rol
sub
push
inc
imull
mov
aad
outsb
and
mov
jp
les
imul
lcall
mov
ret
out
and
stos
stc
xor
xchg
fidivl
daa
in
rclb
jmp
sbb
mov
mov
mov
loope
outsl
cs
sub
dec
inc
or
test
sub
sub
adc
sub
xorl
mov
into
inc
je
xorb
out
mov
stc
out
lret
repz
cmp
mov
mov
lods
add
fistpl
jecxz
clc
jle
jmp
nop
pop
xchg
push
mov
fmul
xlat
jbe
jnp
shlb
mov
sub
and
pop
push
sarl
dec
mov
xchg
loop
pop
add
ret
test
jmp
add
imull
pushf
mov
cs
je
mov
aas
testl
ss
es
stc
out
sbb
cmpsb
jns
push
mov
xchg
jmp
xchg
in
push
add
xor
scas
std
pop
shr
xorb
outsl
lock
fstpl
pop
jge
clc
jle
nop
mov
cmc
or
aas
out
int
lods
jle
inc
out
xchg
loopne
jbe
jns
xchg
rcrb
mov
push
sub
data16
inc
or
cwtl
xlat
or
xchg
int
iret
sti
stos
movsb
test
push
and
jg
sub
adc
pop
jae
enter
mov
pop
xor
pop
fdivrs
xchg
dec
mov
out
mov
out
sbb
pop
ficompl
sbb
fxam
or
into
mov
or
mov
jge
sbb
mov
std
and
push
or
xchg
xchg
pop
sbb
rcrb
out
jp
pop
cmp
jo
ja
mov
cmp
push
mov
aas
dec
out
pop
xlat
add
push
sub
add
cmpsb
cmc
cmp
jmp
jbe
imul
cmp
lods
fdivs
inc
adc
decb
mov
mov
fildll
sub
xor
mov
jg
jmp
mov
leave
inc
pop
jle
mov
xchg
or
scas
fidivrl
mov
jle
push
data16
mov
xor
cmpsb
and
inc
xor
jbe
xor
mov
dec
and
pop
xchg
jne
sub
xor
push
jg
lahf
and
mov
dec
inc
xor
orl
mov
sarb
out
test
dec
stc
popa
lret
jb
stos
and
das
rclb
insb
dec
test
cmp
dec
and
pop
cmp
or
repnz
xor
pop
dec
and
pop
xchg
jne
sub
xor
push
jg
lahf
and
mov
dec
inc
xor
orl
mov
sarb
out
test
dec
stc
popa
lret
jb
stos
and
das
rclb
insb
dec
test
cmp
dec
and
pop
cmp
repnz
imul
jbe
xor
mov
dec
and
pop
xchg
jne
sub
xor
push
jg
lahf
and
mov
dec
inc
xor
orl
mov
sarb
out
test
dec
stc
popa
lret
jb
stos
and
das
rclb
insb
dec
test
cmp
dec
and
pop
cmp
sub
aad
imul
into
dec
push
jnp
push
sub
push
jle
and
testl
stos
mov
lods
aad
push
inc
shl
xchg
loope
inc
push
cmp
adc
adc
lock
pusha
std
push
loopne
fmuls
repnz
rorb
mov
xor
and
das
arpl
adc
std
aas
movsl
jno
jae
mov
fcoml
ret
cmpsb
mov
add
push
fisttps
inc
xor
mov
dec
and
pop
xchg
jne
sub
xchg
inc
int
jp
inc
cmpsb
mov
ljmp
fbstp
test
xchg
jnp
dec
flds
outsb
int
lcall
mov
ret
popf
push
shrl
in
xor
mov
testl
jo
push
mov
ja
into
cwtl
cmp
pop
out
mov
gs
cmp
or
add
les
sub
nop
enter
push
mov
mov
mov
mov
lret
insl
fs
sahf
dec
fcoms
imul
pop
addl
mov
cmp
mov
rol
fidivl
and
fcoms
jnp
jae
cmpsl
data16
dec
xchg
push
sub
sub
lret
out
cmp
test
out
test
dec
dec
add
mov
aam
add
xchg
and
fisttps
mulb
cli
or
and
lcall
pop
mov
out
ss
sbb
int3
repz
sub
bound
mov
lea
out
add
push
push
mulb
pop
jbe
imul
cmp
in
mov
and
scas
sahf
push
pop
nop
sbb
lods
bound
mov
cmp
out
mov
xor
pop
mov
insb
add
in
xor
mov
testl
jo
push
mov
ja
into
cwtl
cmp
pop
out
mov
gs
cmp
or
add
gs
jbe
or
mov
aas
fisttpl
fdivrs
fdivrl
pop
mov
mov
lret
insl
fs
sahf
dec
fcoms
imul
pop
addl
mov
cmp
mov
rol
fidivl
and
fcom
add
mov
or
stos
mov
or
xchg
push
in
xor
dec
lret
out
cmp
test
out
test
dec
dec
add
mov
aam
add
xchg
and
fisttps
mulb
cli
or
and
lcall
out
jbe
loope
and
add
aad
sub
bound
mov
lea
out
add
push
push
mulb
pop
jbe
imul
cmp
call
mov
xchg
mov
jl
test
out
xchg
push
pushf
or
gs
hlt
push
cmp
dec
repnz
jecxz
out
jg
and
pop
inc
add
mov
mov
or
push
test
xchg
sub
or
cs
push
xor
sarb
out
test
dec
stc
popa
lret
add
fstpt
xor
inc
maxps
movsb
sub
cmp
lcall
in
add
idiv
cmp
addl
aaa
jg
aad
fadd
arpl
fs
pop
xchg
ss
loop
adcb
sub
jnp
sti
push
mov
dec
lret
out
cmp
test
out
test
dec
dec
add
mov
aam
hlt
lcall
aam
sbb
sub
cmpsl
in
mov
xor
aam
xchg
aad
mov
jne
cmp
imul
gs
data16
and
sbb
loope
sub
jecxz
mov
inc
test
push
test
sbb
or
loopne
xchg
push
xor
sarb
out
test
dec
stc
popa
lret
add
fstpt
xor
inc
maxps
movsb
sub
cmp
lcall
in
add
idiv
cmp
addl
aaa
jg
aad
fadd
arpl
fs
push
call
jne
enter
mov
adc
enter
lret
pop
repnz
xor
jo
movsl
shll
sub
repz
mov
imul
sbb
inc
mov
fwait
aaa
xchg
sub
or
sub
push
outsl
insb
jmp
ljmp
add
or
lcall
insb
pop
shrl
mov
mov
lret
insl
fs
sahf
dec
fcoms
imul
aaa
sub
test
faddl
arpl
rclb
inc
in
mov
inc
outsb
push
and
sbb
inc
imul
gs
pop
ss
mov
sub
lret
out
cmp
test
out
test
dec
dec
add
mov
aam
push
hlt
sbb
mov
mov
aam
inc
movsb
sub
xchg
or
subl
dec
add
pop
dec
mov
bound
mov
shll
adc
gs
sub
xor
mov
jg
jmp
mov
sub
loop
cmp
fdivrl
cmpsb
mov
add
inc
mov
into
loope
lahf
jnp
lret
aas
push
mov
and
je
rcll
jmp
int3
jne
popf
addb
add
cmpsb
cmc
cmp
jmp
jbe
imul
cmp
jge
or
xchg
mull
stos
sbb
out
int
rcrb
dec
xor
sti
dec
jno
data16
pop
cmovl
aad
or
loopne
xchg
push
xor
sarb
out
test
dec
stc
popa
lret
jnp
sub
fucomi
mov
lret
stos
adc
push
pop
lock
addb
sarb
adc
imul
in
cmp
in
xor
dec
lret
out
cmp
test
out
test
dec
dec
add
mov
aam
push
hlt
sbb
mov
mov
aam
inc
movsb
sub
xchg
or
aaa
push
and
shll
fcoml
add
push
sub
loop
cmp
sub
xor
mov
jg
jmp
mov
sub
loop
cmp
fdivrl
cmpsb
mov
add
inc
mov
into
loope
lahf
jnp
lret
push
mov
fidivrs
inc
push
add
pop
lods
es
push
ret
push
mulb
pop
jbe
imul
cmp
jge
or
xchg
mull
stos
sbb
out
int
inc
bound
subb
push
dec
mov
add
adc
or
loopne
xchg
push
xor
sarb
out
test
dec
stc
popa
lret
push
or
cmp
cmp
xchg
insl
movsb
mov
sub
fwait
movb
mov
out
out
into
movsb
in
add
idiv
cmp
addl
aaa
jg
aad
cmpsl
cmpsb
adc
in
lahf
scas
in
outsl
cli
jbe
adc
jbe
xor
insb
add
in
xor
mov
testl
and
or
sti
and
ljmp
loope
push
adc
mov
mov
push
pop
sarl
sbb
sbb
inc
sbb
jle
add
push
imul
mov
push
incl
fstp
mov
clc
dec
push
ret
push
mulb
pop
jbe
imul
cmp
lods
fdivs
inc
adc
decb
mov
mov
in
leave
scas
sahf
pushf
push
cmp
dec
jecxz
out
jg
and
pop
inc
add
mov
mov
push
sbb
in
sub
and
arpl
sub
mov
insb
add
in
xor
mov
testl
and
or
sti
and
ljmp
loope
push
adc
mov
mov
push
pop
sarl
sbb
sbb
inc
sbb
jle
add
push
imul
mov
or
cmp
cmpsl
mov
cmp
xor
dec
cmpsl
xchg
insb
pusha
inc
push
push
jo
jp
jae
or
xor
pop
fcmove
stos
sbbl
leave
dec
mov
jae
mov
dec
mov
mov
lea
inc
xor
or
arpl
push
jecxz
push
lea
add
outsl
movsl
jno
mov
push
nop
cmp
cmp
sbb
fwait
add
push
dec
inc
xor
int
push
jge
stos
pop
lret
cwtl
jb,pt
lret
outsb
loope
sub
dec
push
jno
sbbl
loopne
icebp
dec
fldcw
lea
cmc
add
lret
xor
lret
xchg
xchg
sub
pop
lock
xor
in
push
xchg
push
mov
sahf
rorb
adcb
mov
dec
push
jp
xchg
ret
cmp
stc
push
aam
xchg
cmpsl
inc
jne
test
test
pushf
and
pusha
add
adc
xchg
fistl
test
xlat
or
dec
jns
cmp
cltd
mov
stos
movsl
mov
shll
push
aam
out
xchg
jge
dec
mov
mov
popa
out
xchg
cli
dec
nop
mov
sub
hlt
adc
orb
push
jno
das
push
lds
adc
xchg
sbb
mov
sbb
push
mov
xchg
cmp
fisttps
sub
imul
insb
sub
or
in
jae
xor
ss
xor
sub
mov
sub
pop
adc
lcall
jb
or
sti
sbb
lret
in
push
movsl
or
jmp
sti
arpl
jae
cmpsb
mov
pop
stos
ficoml
repnz
dec
lds
stc
jg
sbb
xor
add
cld
mov
mov
xchg
std
sub
dec
push
and
push
xor
shr
push
or
pop
dec
sub
out
xchg
adc
lea
mov
cmp
xor
std
daa
repz
cwtl
aas
xchg
push
jnp
je
jne
adc
pop
jno
aas
fistpl
test
ficompl
out
jmp
cld
bound
add
xchg
dec
dec
xor
jno
test
mov
popa
iret
inc
xchg
inc
enter
and
push
stc
mov
inc
pop
push
inc
fwait
imul
xchg
aad
dec
test
mov
pushf
pop
adcl
rcrb
adc
inc
mov
ret
push
sbb
mov
rorl
mov
pusha
mov
inc
sti
jmp
pop
cld
push
xchg
push
cmp
sbb
popa
bnd
in
imul
pop
jle
out
cmc
dec
mov
xchg
mov
mov
xor
add
ret
sub
incl
das
shll
fstl
jns
mov
nop
jmp
xor
pop
ret
cmp
fdiv
repz
imul
dec
arpl
in
pop
mov
pop
stos
lea
imul
lret
mov
fisttpl
int
call
sbb
out
repz
test
dec
or
sub
sahf
xchg
lods
imul
push
pop
xchg
aam
rclb
cmc
lret
rolb
sbb
ds
mov
push
xchg
pop
imul
adc
aas
outsb
push
mov
jg
add
cs
fdivp
pop
xor
icebp
inc
js
call
fldl2e
rcrb
or
and
push
push
xchg
sbb
arpl
and
and
or
pop
xchg
jge
sub
mov
fidivrl
fidivl
or
or
enter
jnp
cmp
in
jbe
inc
mov
dec
clc
add
mov
es
shll
xorb
movsl
lds
pop
lahf
push
mov
enter
adc
loope
add
push
mov
cmp
sbb
out
imull
cmp
cmp
outsb
psubsw
mov
test
popf
or
scas
push
adc
cmpsl
push
push
sbbl
xchg
stos
push
cmp
xchg
sbb
lcall
cs
adc
test
xor
aam
pop
cmp
ss
inc
into
sbb
xor
and
ret
pusha
jecxz
xor
push
jne
add
push
mov
pusha
leave
add
aaa
jmp
out
cmpsl
dec
addr16
push
nop
pop
jno
xchg
fwait
mov
int3
mov
add
and
cmp
out
aam
ficompl
lcall
sbb
and
ja
int3
cs
and
repz
cmp
or
fwait
xor
stos
lods
bound
cmp
xchg
push
gs
test
inc
out
mov
mov
lahf
pop
ret
ficoml
sub
pop
push
xor
jbe
insl
lods
or
mull
mov
loopw
mov
xor
push
in
or
sbb
dec
dec
xor
xchg
or
outsb
push
dec
les
xor
mov
ret
and
outsl
mov
sahf
xchg
sbb
sub
cmp
loopne
insb
mov
sub
decl
ljmp
dec
sti
and
jo
pop
mov
pop
int
mov
dec
lcall
dec
mov
pop
sub
mov
xchg
push
cmp
cltd
aad
cwtl
cmpsl
push
outsl
popa
int
cmpsb
test
mov
xor
or
pop
add
out
adc
push
aas
dec
cmp
hlt
dec
xchg
repnz
leave
sbb
xor
ds
adc
xorl
sbbl
mov
flds
imul
or
xchg
push
or
mov
mov
adc
mov
ds
mov
jmp
out
popa
fbld
mov
popf
push
imul
lret
pop
mov
or
jns
lahf
push
cltd
mov
clc
or
jge
jae
cmp
push
out
arpl
jecxz
outsl
aaa
in
adc
out
pop
lret
sbb
mov
and
mov
popa
testl
sub
loopne,pn
and
lods
or
xchg
mov
outsl
data16
xchg
rcr
mov
ss
adc
jbe
pop
lea
push
mov
pop
push
movsl
dec
pop
loopne
or
pop
pusha
cmp
jmp
pushf
push
jb
scas
ja
xor
repnz
popl
pusha
mov
mov
arpl
loope
icebp
sbb
bound
je
mov
stos
test
stos
jl
xchg
jns
and
mov
es
repz
cs
lret
pop
scas
and
fdivrl
cmpsb
js
loopne
notl
fcmovne
loop
pop
lock
cmc
inc
lcall
push
stos
add
mov
rcr
rorb
xchg
mov
mov
xlat
xchg
mov
or
in
and
push
push
ret
adc
or
les
dec
test
outsl
ror
out
aas
mov
in
dec
push
mov
out
loope
push
sbb
in
cmp
sbb
sbb
and
test
push
fistps
scas
cmp
hlt
int3
push
mov
jae
iret
hlt
cli
mov
sbb
cmpsl
mov
loopne
inc
andl
je
lret
add
and
ljmp
mov
rcll
cmp
mov
sub
outsb
inc
fildll
test
lds
xlat
mov
data16
add
xor
jb
sbb
dec
sub
cmp
cs
pop
or
pop
push
sbb
test
outsl
mov
push
jmp
adc
les
lcall
push
movsl
outsl
inc
pop
pop
xorb
aas
xchg
cmp
sub
sbb
mov
dec
into
andb
cmp
test
jl
xor
or
push
pusha
adc
fists
sbb
xchg
push
jno
or
int
adc
xorb
and
or
out
pop
ja
pop
add
sub
push
hlt
xchg
imul
daa
cmp
inc
or
out
xorb
xchg
sub
push
push
call
ds
sahf
add
fwait
in
add
push
insb
xchg
jne
pop
mov
fistpl
cmp
xor
mov
arpl
fiadds
xchg
push
stos
bound
stos
aad
lret
jb
push
xchg
popf
ret
or
fstps
lea
push
jmp
jg
movsb
outsb
insb
cmpsl
mov
popf
mov
push
push
jno
mov
movsl
call
xor
fisttpll
adc
nop
adc
stos
shll
imul
dec
adc
lahf
inc
je
push
cmp
cmpb
scas
loop
sub
pusha
repz
je
inc
bound
xchg
xor
cmpsb
or
cmp
cmp
outsb
int
int3
test
into
cmp
out
add
and
mov
das
and
out
xorl
adc
out
test
mov
jae
scas
xchg
pop
gs
daa
sarl
outsb
test
adc
cmp
imul
sbb
pop
loop
cmpsl
ret
icebp
or
push
inc
jne
dec
lret
jno
rcrb
add
inc
sti
ret
mov
dec
sub
loopne
das
test
cmp
stos
mov
mov
jnp
mov
cmp
mov
dec
adc
mov
cld
mov
mov
push
xor
add
add
jbe
rcr
pop
dec
jmp
mov
imul
add
xor
adc
ds
out
mov
je
lcall
insl
sbb
shrl
popf
imul
mov
ret
jb
ljmp
out
push
lock
xor
cmp
sbb
or
xchg
cmpsb
dec
pushf
mov
xor
jmp
mov
add
xlat
stos
sti
mov
popf
sub
adc
aad
js
mov
cltd
xor
push
lods
clc
sbb
jae
jo
fld
insl
jns
sti
pop
ret
shl
fs
sarl
cmc
pop
push
int3
out
lret
xchg
dec
push
stos
pushw
cmpsb
pop
pushf
dec
sbb
fwait
adc
push
xor
in
jae
or
icebp
mov
jno
repnz
lds
pop
xor
add
xor
std
pop
aam
xor
imul
sti
scas
cwtl
xchg
mov
popf
lcall
mov
bound
mov
inc
data16
aam
fwait
mov
jno
pop
push
adc
sub
pop
sarl
jmp
mov
dec
sarl
lret
rcrb
test
push
popa
mov
hlt
sub
fistps
ss
jl
dec
ss
lea
mov
cli
pop
int
push
dec
mov
cli
rorl
fisubl
dec
inc
mov
daa
movsb
lret
testl
stc
pop
pushaw
lret
fcoml
movsb
rcll
mov
xor
sbb
adc
xchg
scas
ror
sbb
scas
or
aad
mov
enter
mov
push
movsl
fs
xor
or
jl
push
push
pop
mov
shl
and
cmc
add
insl
mov
cmp
sarb
and
icebp
push
sahf
sub
fmull
mov
test
xor
add
ret
jp
jb
cwtl
imul
out
jne
movsb
xchg
mov
xchg
iret
pop
ret
inc
je
xchg
mov
ret
jge
cmp
repnz
test
dec
pop
js
fistpll
cmp
scas
fwait
lahf
or
sbb
cmpsb
in
or
movd
sub
movsb
jae
xor
mov
mov
addr16
xor
and
cmpl
xchg
xor
mov
shll
pop
jmp
and
add
ror
in
fcmovbe
jg
dec
stos
or
inc
mov
pop
sbb
cltd
fildl
jo
mov
xchg
cmp
jmp
gs
in
mov
icebp
pop
enter
inc
adc
loope
das
daa
add
outsb
mov
std
dec
gs
mov
sbb
mov
push
inc
jo
and
mov
pop
jp
in
add
sti
jmp
cwtl
sbb
cs
push
adc
and
mov
lods
inc
arpl
cli
stos
in
pop
mov
and
out
test
in
lcall
shlb
sub
cltd
stc
mov
adc
xor
inc
movsl
adc
cmp
pushf
inc
push
daa
cmpsb
out
mov
xchg
aaa
and
iret
fwait
lods
or
jp
imul
xor
push
lahf
into
pop
fistpll
dec
jns
shr
fsubr
push
pushf
sbb
das
xchg
test
fisttpll
push
jae
aad
push
xchg
es
nop
add
pop
xlat
loopne
jns
mov
into
andl
xor
sub
xor
adc
pop
cltd
into
popf
es
mov
mov
lahf
in
lahf
jmp
lock
or
stos
sub
mov
and
test
outsb
push
add
arpl
pop
scas
jg
rorl
cmp
cmp
mov
mov
loope
adc
mov
subb
ret
mov
jle
int
pusha
subb
rcrb
and
sti
push
js
jp
dec
popf
pusha
pushf
xor
movsb
iret
push
inc
cmpsl
shlb
outsb
dec
xchg
test
jecxz
mov
inc
mov
jne
popf
cmpsl
sbb
into
loopne
jo
or
cmp
sub
push
pusha
dec
lea
dec
pop
dec
sbb
mov
xor
call
inc
imulb
aam
mov
xor
jl
lds
test
test
loopne
add
jnp
scas
jg
pop
xor
jbe
xlat
mov
mov
mov
cmp
cmp
fs
adc
les
mov
jmp
xchg
add
sub
jge
fstl
stos
jno
aad
cmpl
bound
pop
fs
js
jnp
fldt
dec
imul
gs
lahf
xchg
outsl
stos
enter
xorl
mov
ljmp
lods
and
inc
push
fst
push
xlat
es
sbb
inc
jno
sbb
xor
pop
imul
xchg
clc
mov
sub
out
pop
cltd
shr
jmp
movsb
daa
mov
or
movups
xlat
xor
add
ret
fiaddl
dec
loopne
sbb
pcmpeqb
and
leave
push
xchg
mov
and
test
repz
pop
jge
sbb
and
pop
jns
cmp
xchg
xchg
sti
out
xor
mov
xchg
ljmp
inc
and
mov
fisubrs
mov
push
rolb
and
mov
or
pop
dec
test
arpl
sbb
mov
lea
adc
sbb
push
dec
test
jmp
repnz
inc
clc
xor
push
push
sub
mov
aas
or
test
mov
pop
clc
fnsave
cmp
add
rcr
clc
lret
adc
fldt
and
aad
cmp
test
sub
aaa
lcall
rclb
dec
adc
and
jns
cli
ret
mov
adc
mov
repnz
sub
mov
mov
or
aaa
and
sbb
repnz
popa
push
mov
adc
aam
or
xchg
lds
adc
aad
xor
add
stc
popf
sub
jne
aaa
arpl
insb
pminsw
lret
push
and
adc
add
xchg
mov
mov
shll
fs
jge
lahf
mov
push
dec
movnti
add
in
clc
ja
into
jl
popf
fadds
aam
cmpsb
mov
loop
or
repz
adc
test
cmp
int
test
lret
and
sbb
mov
ja
daa
in
cmpsl
pop
in
ja
fildl
pushf
and
sbb
outsl
xchg
mov
cs
imul
jbe
xor
jecxz
sub
pop
xor
cmp
pop
movsb
imul
push
sub
and
xchg
jnp
addr16
jg
mov
out
or
xor
data16
shrl
stos
inc
inc
stc
fwait
push
fcmovbe
jno
in
dec
mov
adc
sahf
or
cmpsl
mov
ljmp
sub
xor
gs
test
sbb
pop
jge
add
xor
popa
ljmp
add
jge
inc
mov
inc
push
in
loope
mov
loopne
push
dec
fldl2e
add
jnp
ja
push
aam
cltd
cmpsb
and
cmp
or
cmp
es
lcall
loopne
cmp
sub
cmp
icebp
mov
aaa
sbb
scas
das
adc
sub
adc
xchg
mov
iret
lock
pop
ret
mov
js
dec
xchg
mov
xchg
mov
or
mov
ja
or
mov
imul
cmp
fucomp
jmp
scas
adc
sbb
pop
and
lcall
fs
sbbb
lods
fcompl
in
insb
sbb
roll
nop
mov
pop
in
or
repnz
popa
lods
lret
stos
lods
loope
sub
and
icebp
wrmsr
ja
shr
outsb
enter
test
mov
jns
int3
xor
leave
shll
mov
jge
repnz
mov
clc
enter
ret
sub
sbb
cmp
lock
pushf
js
in
pop
pop
mov
bound
incl
jnp
adc
daa
mov
arpl
mov
and
nop
clc
pop
xchg
loop
jge
push
mov
adc
popa
arpl
inc
stos
cmp
jnp
stos
xlat
sbb
rclb
push
jo
push
sbb
adc
and
jbe
lock
mov
jp
je
sub
mov
and
add
int
jmp
das
cmp
arpl
out
fstpl
orb
cmpsb
pop
push
les
jecxz
mov
stos
icebp
stos
xchg
sub
mov
arpl
lods
call
adc
and
rcr
jge
cli
cmc
sub
icebp
mov
sbb
xor
sbbl
cmp
ljmp
loopne
dec
add
mov
adc
adc
frstor
inc
int3
rcrb
and
ljmp
lahf
jle
into
xchg
jbe
or
jne
cwtl
sub
lock
imul
mov
jne
or
lock
fisttpl
loopne
cltd
testb
gs
loop
xor
es
or
hlt
loop
ret
movsb
dec
repz
jbe
or
cmp
mov
mov
roll
mov
pop
imul
in
das
jne
fcmove
jbe
sarl
jb
jae
and
dec
jbe
jp
xlat
nop
dec
lea
nop
ret
ja
push
jmp
lods
mov
call
and
dec
sahf
repnz
mov
inc
ds
and
pop
lahf
repz
adc
mov
ficompl
mov
jle
ljmp
dec
jb
fcmove
xchg
mov
jg
clc
cmp
test
es
in
xor
sbb
xlat
hlt
lret
adc
pop
leave
inc
inc
mov
rcr
das
daa
pop
and
insl
movsl
or
in
mov
sub
adc
leave
mov
lods
inc
dec
mov
stos
push
mov
dec
std
sbb
out
pop
jl
in
in
jo
jnp
fbstp
sbb
ret
xchg
dec
mov
in
jle
test
mov
jbe
dec
xchg
mov
xor
das
jno
jg
loope
nop
sbb
push
push
and
or
pushf
xor
rclb
mov
mov
xchg
push
mov
mov
cmc
cmp
push
pop
pop
mov
in
xlat
pop
pop
push
arpl
nop
aas
add
std
into
adc
mov
aam
or
pusha
outsl
js
mov
repnz
leave
cmp
mov
jge
call
inc
ljmp
insb
popa
dec
mov
dec
std
movsl
xchg
ret
lock
add
sbb
jns
lea
xchg
icebp
lret
xchg
jl
cmpsl
fiaddl
mov
and
cmp
xchg
in
mov
leave
and
push
dec
outsb
jl
repz
ss
loop
push
dec
cmp
xlat
jnp
loope
leave
fwait
lods
dec
cs
push
cmp
jmp
pop
adc
push
xchg
es
jns
xchg
lods
repz
dec
das
aad
inc
stos
repnz
das
mov
adc
dec
cs
sysexit
xchg
mov
cmp
and
popf
mov
inc
in
ljmp
ret
inc
jo
cmpsl
into
or
test
jmp
cmpl
dec
inc
sete
sbb
mov
movsl
jge
pop
cmp
and
pop
sbb
and
pop
push
shlb
imul
jecxz
test
mov
addr16
es
popf
movlps
xchg
adc
sarl
and
xor
mov
sub
push
pop
sbb
stos
aas
xor
inc
pusha
loope
movsl
sbbl
dec
adc
fwait
cmp
rorb
movsl
jne
xchg
xlat
loope
push
leave
push
push
fldl
and
insb
test
mov
mov
hlt
lret
push
mov
sahf
mov
and
std
jg
push
xor
jo
jmp
adc
ret
mov
or
popf
test
sub
sbb
cld
jnp
and
mov
mov
dec
jmp
jecxz
xor
fsub
inc
ficompl
mov
xchg
cmp
pop
mov
dec
add
shll
stc
push
lds
cmpsl
or
enterw
in
mov
pop
andb
mov
repz
in
and
arpl
adc
mov
mov
mov
inc
lahf
pop
cmc
pop
jecxz
pop
clc
pop
pop
inc
mov
sub
repz
xor
ret
bound
xchg
clc
pop
jmp
loope
out
jae
popa
push
sbb
aaa
bound
push
xchg
shlb
push
inc
adc
push
push
mov
mov
pop
push
sub
xchg
popa
jnp
xor
jge
lds
adc
fildl
mov
push
ret
jecxz
out
movsb
cmp
cmpsb
ret
jg
int3
mov
xor
jb
ljmp
sarl
sub
dec
in
nop
jae
jg
shlb
mov
loope
add
adc
inc
jnp
test
rcrl
fcomip
call
rolb
mov
xlat
jno
shll
lock
or
or
add
cmp
test
push
push
lds
shlb
gs
in
add
dec
cmp
imull
fnsave
fistps
nop
mov
mov
stc
test
inc
sar
hlt
inc
and
loopne
xor
xchg
push
or
sbb
js
leave
insl
in
dec
fidivrs
add
jp
sub
addr16
jg
sahf
xorb
daa
pop
add
dec
push
jne
or
cmp
daa
insl
divl
and
add
ja
shll
fisubrs
xor
xchg
pop
cmp
sbbl
mov
decl
inc
sub
ds
adc
ss
cmp
mov
stc
je
dec
in
dec
addr16
call
cld
push
pop
and
andb
sahf
fiaddl
lcall
xlat
xor
add
sub
fmuls
cmpsb
pop
call
lods
and
cld
ficoms
out
aaa
stos
cmpsb
and
cs
push
add
or
mov
cli
jmp
stos
push
push
outsl
and
dec
push
pop
xchg
xor
dec
test
mov
loopne
loopne
xchg
aad
add
movq
icebp
jne
lods
lret
fstl
adc
lcall
test
jbe
pop
push
bound
pop
sub
insl
cwtl
fcompp
insb
stos
stos
ficoml
fnstsw
inc
ss
out
movsb
cwtl
cmp
dec
insl
mov
xchg
stos
ds
in
sbb
test
lods
sub
lret
insb
shl
dec
mov
lds
insb
jae
push
mov
xor
loope
add
push
repz
test
push
pop
jg
inc
test
and
loop
inc
movsl
stos
jns
insb
repz
mov
nop
sbb
lods
shl
jne
xor
sbb
mov
mov
pop
xchg
mov
imul
sti
loopne
inc
stos
push
pop
arpl
jg
ljmp
dec
jns
into
enter
rorl
mov
enter
xor
jbe
insb
lock
mov
pop
xor
ret
inc
pop
pop
pop
dec
cmpsb
lahf
xchg
imul
test
or
cmp
xor
mov
int3
into
or
ja
or
test
cmp
lea
orl
pop
mov
cmp
popf
fiadds
mov
mov
lret
add
scas
hlt
jg
fistpl
std
lahf
jbe
mov
xor
cltd
xor
ret
jmp
dec
hlt
je
ret
xchg
mov
jbe
and
push
inc
in
push
mov
rclb
sahf
mov
push
inc
lcall
xchg
das
sub
jge
sub
shl
insb
test
mov
adc
adcb
insl
mov
int3
dec
ret
mov
ljmp
mov
and
jp
test
mov
hlt
aam
lds
cld
jo
sti
sbb
ljmp
cli
sbb
out
fwait
mov
jnp
mov
jae
dec
test
dec
pop
gs
cmpsl
les
add
popa
aas
pop
jg
and
xlat
add
loope
sbb
pusha
lds
jae
inc
dec
movsl
fistpl
ret
push
adc
xchg
adc
setno
add
call
stos
mov
les
add
or
mov
pop
cwtl
mov
rclb
jmp
ds
arpl
mov
popf
mov
shll
inc
and
push
imul
adc
sti
imul
ret
das
fs
sbb
cwtl
push
fisubl
insb
dec
scas
mov
outsl
push
push
xchg
repnz
cmpsb
aaa
dec
sti
out
out
or
int
mov
and
add
pop
addr16
mov
shlb
ja
imul
jbe
in
mov
in
clc
movaps
and
movsl
jno
sbb
scas
ja
cmp
adc
iret
lahf
mov
jg
push
daa
dec
pop
out
popf
data16
push
and
sub
into
nop
lods
lcall
inc
add
lcall
cmc
or
sbb
or
jge
add
fnsave
in
cld
pop
mov
scas
sbb
xchg
mov
and
and
mov
mov
popf
add
push
hlt
fnsave
mov
aam
sub
clc
pop
adc
je
xchg
faddl
jno
push
mov
dec
mov
loopne
ljmp
aam
out
mov
jno
pushf
sbb
sub
test
std
push
aad
jbe
cmpsl
mov
pop
daa
scas
test
jmp
jns
inc
xchg
xlat
mov
add
test
ficoml
outsl
stc
pop
jb
movlps
jp
xor
mov
in
jo
fisubrs
test
js
nop
xor
jge
sbb
push
bound
xlat
out
adc
test
xor
mov
pop
push
mov
sub
icebp
xchg
jno
jge
xchg
lcall
into
es
mov
ds
add
and
test
lods
push
call
roll
test
and
or
repz
fisttpll
sub
xor
std
iret
sub
jl
cmp
pop
sarb
mov
push
cli
cmc
shl
dec
or
cmp
cs
dec
in
jo
lds
dec
clc
sub
daa
fisttpl
xlat
fidivl
cmovle
jecxz
jl
inc
repnz
out
mov
lods
iret
int3
cwtl
xchg
pop
xlat
xor
lret
add
adc
xchg
add
sub
cmpsl
inc
mov
dec
push
dec
push
outsl
push
xchg
xchg
aad
imul
sti
mov
and
fwait
nop
push
push
xor
push
lods
outsb
aad
inc
in
movsb
rcrl
sbb
pop
and
add
loopne
adc
fidivl
hlt
push
nop
in
cmp
cmpsl
faddl
shrb
add
loop
ret
mov
mov
xor
pop
mov
push
jnp
pop
insl
dec
fisttpl
icebp
enter
sti
sbb
sub
loop
sbb
lcall
call
mov
scas
pslld
mov
imul
ljmp
dec
mov
xchg
mov
ds
je
bound
and
es
xor
hlt
lret
dec
cmp
cmp
mov
addr16
sti
dec
push
mov
push
mov
repnz
loope
mov
and
ljmp
mov
mov
insl
xor
les
mov
adc
inc
sub
mov
xlat
dec
pusha
outsl
into
xchg
daa
jb
mov
lock
movsb
dec
push
repz
nop
mov
and
lods
in
movsl
push
roll
adc
fwait
add
test
cs
insb
mov
dec
sub
mov
mov
jo
ja
lcall
and
jl
dec
imul
mov
mov
notb
inc
inc
sub
imul
mov
fwait
xchg
add
fsubrl
addr16
lea
mov
test
insb
push
inc
sbb
cld
push
mov
in
js
mov
cmc
pop
rcrl
xor
pop
xchg
push
and
sbb
fdivr
dec
jbe
sahf
mov
adc
repnz
add
lock
loope
sar
std
mul
fstps
inc
movsb
repnz
stc
cltd
in
loop
mov
lahf
movsl
add
dec
sbb
daa
adc
mov
xor
scas
jle
insb
cmp
sbb
sbb
in
jmp
sub
push
insl
arpl
stos
test
lea
cwtl
xor
xor
icebp
ljmp
jge
test
pusha
and
jl
les
andl
out
dec
ja
or
popa
repz
mov
sbb
lods
lea
std
mov
xchg
mov
rsm
rclb
in
icebp
or
and
push
cmpsl
pop
sub
icebp
mov
jmp
ss
jne
dec
xchg
in
xchg
lds
es
int
mov
mov
ret
in
sub
ss
cmc
loope
and
loope
negl
push
icebp
pop
inc
test
mov
lret
jae
push
les
inc
je
cmp
mov
pop
in
pop
lret
dec
int3
pushf
shll
add
pop
pop
test
pop
nop
mov
into
xchg
mov
push
stos
sbb
data16
aas
sbb
in
push
push
lahf
popa
jne
cltd
mov
adc
sub
rclb
add
mov
inc
rcrb
jno
jmp
dec
iret
jecxz
lret
push
aad
cmp
add
mov
in
ljmp
sbb
sahf
fbld
test
mov
fimuls
push
flds
add
add
adc
mov
scas
rolb
mov
jg
push
jno
mov
dec
push
xor
xlat
pusha
roll
loopne
lods
dec
lea
jl
xor
repz
sub
stos
or
bound
ret
bound
fwait
mov
out
mov
jne
cmpsb
adc
cmc
mov
ds
jp
pop
shrb
es
out
test
sbb
js
dec
dec
xor
fsubl
mov
rcr
xor
aaa
jle
or
add
pushl
out
jae
xchg
add
sbb
fcom
outsl
loop
pop
sbb
cmp
mov
int3
xor
xchg
lds
pop
inc
loope
loop
push
or
adc
mov
push
pop
adc
test
mov
add
mov
out
mov
cmp
inc
daa
adc
cld
fcomp
push
push
dec
mov
out
or
in
das
push
subl
out
mov
add
pop
sbb
xchg
and
outsb
xor
imul
mov
xor
aad
push
jmp
test
out
fdivl
rcrl
jnp
jb
cmpsl
cmp
clc
nop
ret
push
xor
pop
xchg
inc
out
adc
push
push
xlat
in
daa
shl
jne
pop
leave
fcoms
fwait
cmp
pop
adc
dec
fstl
cmpsl
js
sub
into
push
loopne
lods
subb
sbb
pop
shrl
push
shrl
sub
js
addr16
jle
or
gs
cmp
es
outsb
push
inc
iret
icebp
imul
cmp
sub
insl
clc
mov
insl
inc
mov
dec
cmp
pop
test
rcr
dec
xchg
je
rcr
pop
pop
xor
push
pop
in
adc
lods
lods
loop
dec
inc
jb
and
in
sti
cmp
inc
in
mov
jno
and
shlb
mov
jns
jno
test
mov
notb
mov
pop
dec
pop
pop
cmp
adc
sub
mov
xchg
and
clc
lcall
rcll
rolb
push
inc
in
call
adc
jbe
loope
lods
ret
movsl
xchg
jo
out
or
mov
leave
mov
push
js
lret
cmp
rcl
xchg
adc
pop
mulps
daa
fs
rclb
pop
mov
or
jmp
and
lret
jmp
push
and
sbb
out
pop
inc
ja
popl
mov
insb
cmpsb
pop
stos
jmp
ret
lret
add
sahf
pop
jg
jbe
adc
fwait
adc
xchg
push
in
faddp
sbb
dec
sar
cmp
mov
xchg
imul
jns
aad
jbe
add
or
je
aam
mov
fmul
cmp
into
pop
or
pop
dec
inc
push
out
sub
mov
std
in
and
push
ja
jae
shlb
sti
jb
ljmp
mov
adc
and
scas
mov
imul
sti
jge
fdivrs
call
pop
aas
cmp
pop
jo
rcrl
icebp
movsl
cmp
outsb
push
jl
sbb
fisttpl
nop
shl
leave
ljmp
stos
fs
enter
hlt
outsl
sbb
xor
lds
stos
sbb
cwtl
imul
push
aas
repz
lahf
sbb
inc
mov
aam
jnp
into
dec
sub
jne
and
ret
push
lods
out
dec
sub
xor
mov
sub
lahf
pop
out
add
mov
stos
mov
mov
xor
inc
ja
rcrl
mov
inc
test
sbb
sub
lret
shlb
xchg
mov
dec
in
cmpl
pop
add
dec
mov
sbb
adcl
scas
push
stos
add
xor
xor
push
fidivl
data16
dec
push
sub
lcall
jo,pn
movsb
inc
sub
push
pushf
cwtl
stc
and
mov
les
pop
mov
int3
push
jno
xchg
ficomps
outsb
cs
in
das
test
push
pop
inc
int3
out
decb
fs
xor
je
in
lret
adc
push
cmp
mov
jge
add
sahf
add
add
add
add
add
and
xchg
fs
mov
sbb
daa
mov
mov
add
fnstsw
inc
insb
mov
sub
insl
mov
sbb
dec
jl
add
stos
xor
mov
js
bound
sarl
stos
lcall
iret
or
repz
add
std
pop
cs
sbb
pop
notb
daa
mov
jns
call
xor
gs
pop
jle
gs
mov
pop
dec
add
clc
fldl
xchg
cwtl
loop
stc
and
inc
cwtl
pop
push
sub
jno
aad
and
cli
fcoml
lcall
mov
or
xor
dec
cmp
sti
lods
jne
mov
sbb
out
and
andb
out
push
std
xchg
loope
push
mov
fisubrs
sahf
std
das
sarl
es
btr
push
rol
lcall
jb
pop
jle
sub
mov
cmpsb
xlat
mov
pushf
lcall
lock
std
popa
and
mov
cmp
jp
test
test
arpl
aas
or
cmp
pop
or
mov
pop
popa
mov
mov
movsb
jae
in
jne
fwait
inc
xchg
int3
lretw
jle
or
or
es
mov
imul
arpl
mov
into
std
fisubrs
jb
sti
jb
pop
cs
mov
dec
sub
push
xor
xchg
mov
mov
repnz
jns
jge
sbb
cmp
xor
fst
aad
dec
mov
jg
mov
xor
loop
fisttpll
adc
inc
stos
mov
pop
mov
nop
leave
inc
mov
inc
adc
mov
sti
dec
outsl
imul
les
inc
mov
ja
enter
pop
xchg
insl
lcall
sti
cmpsl
cmpsb
loope
mov
js
push
xchg
test
xor
pop
imul
mov
mov
cmpsl
stos
sbb
fcoml
jle
sbb
pop
jno
cmp
int3
popf
dec
dec
mull
push
sub
lret
or
into
mov
mov
ret
cs
adc
leave
sar
mul
sbb
pusha
jg
sub
test
in
outsl
jo
unpcklps
lret
dec
lahf
jnp
dec
bound
insl
inc
or
sbb
scas
and
lock
and
fwait
and
idiv
push
daa
in
enter
xchg
xchg
dec
ja
sbb
xchg
mov
push
push
xchg
jmp
lods
shlb
mov
out
outsl
mov
lods
push
xor
sbb
add
mov
jne
nop
dec
fwait
add
mov
xor
mov
fstpl
les
rorl
out
sub
cmp
inc
dec
sub
gs
aas
xchg
xor
jno
inc
mov
push
in
fsubs
out
aas
mov
sbb
or
orl
fmulp
js
loope,pn
mov
ljmp
cmpsb
push
lds
xor
icebp
adc
xchg
inc
push
jb
sbb
popf
hlt
mov
mov
fcomp
push
or
pusha
rcrl
sbb
jge
mov
popa
jmp
dec
add
movsl
mov
in
stos
cmp
cmp
iret
jbe
cmp
and
stc
insb
das
xchg
pusha
sub
and
jecxz
sub
ret
and
push
add
fwait
and
jbe
in
stos
mov
pushf
in
and
hlt
inc
lahf
leave
out
pusha
leave
push
int
lods
leave
push
sub
mov
or
mov
popf
jg
lods
imul
xchg
jmp
das
nop
and
push
push
mov
rorl
inc
das
loop
xlat
imul
dec
lods
jp
out
jg
es
jl
outsl
lods
push
jbe
xor
outsb
push
mov
inc
mov
test
ret
pop
push
add
sti
notl
mov
test
push
xor
out
movsb
add
or
fdivl
loop
fiaddl
test
stc
test
js
mov
pop
aas
and
inc
insb
pushf
je
out
aaa
or
xchg
out
mov
adc
pand
pop
xlat
push
sub
mov
in
ss
movl
xor
add
mov
mov
jno
mov
or
pusha
icebp
and
xor
cmp
cmp
cmp
leave
pop
push
xchg
add
imul
add
add
add
je
adc
negl
into
xlat
mulb
out
jmp
push
lea
inc
movsl
cs
mov
sti
pop
cli
cwtl
mov
push
test
dec
cmp
mov
paddw
pop
dec
push
icebp
inc
mov
jo
and
mov
jmp
xor
out
cwtl
push
out
sub
movsb
pop
adc
repnz
addr16
push
push
sbbb
repnz
popa
jge
sbb
mov
mov
pop
out
shll
adc
int3
xor
mov
inc
mov
test
aam
scas
push
dec
loop
daa
add
mov
cld
in
pop
push
out
lods
iret
and
cmc
outsb
adc
arpl
fistpll
insb
xchg
cmpsl
leave
jne
test
mov
push
inc
test
out
aas
sbb
lea
ret
push
pop
daa
mov
insb
push
xlat
adc
pop
enter
cmp
imul
js
daa
mov
sbb
and
cmp
xchg
insb
jno
cmp
sub
inc
movsl
push
fimull
loope
test
aaa
dec
mov
gs
or
dec
gs
out
jno
push
imul
xor
and
scas
sbb
push
xchg
fsubs
loope
rcl
lods
cmp
dec
inc
dec
fldl
cld
push
sbb
cli
pop
mov
sbb
sti
jl
xchg
jmp
pop
push
mov
mov
stc
out
sbb
dec
out
cmp
movsb
orb
test
clc
in
fdivl
xor
mov
movsl
inc
in
sbb
adc
adc
test
sbb
pushf
lcall
sbb
jne
mov
negb
mov
mov
cmp
daa
add
mov
cld
in
pop
push
out
lods
iret
and
cmc
outsb
adc
mov
cmp
jecxz
mov
mov
inc
test
out
aas
sbb
lea
ret
outsb
xchg
push
jae
imul
push
jno
sub
pop
enter
cmp
imul
js
daa
mov
sbb
inc
adc
adc
xchg
js
into
dec
cltd
inc
cmp
cmp
sub
inc
movsl
push
fimull
loope
test
aaa
dec
scas
jmp
lea
mov
dec
push
call
imul
xor
and
scas
sbb
push
test
cmp
sti
rcl
lods
cmp
dec
inc
dec
fldl
cld
push
sbb
cli
pop
mov
sbb
sti
jl
xchg
sahf
jmp
icebp
movsl
push
stc
out
sbb
dec
out
cmp
movsb
orb
test
clc
in
fdivl
xor
mov
mov
jecxz
push
adc
test
sbb
pushf
lret
sbb
push
jo
push
inc
xlat
and
stos
fdivl
or
lods
out
hlt
imul
inc
mov
adc
int
jbe
out
pop
loopne
lods
mov
mov
and
hlt
jns
mov
bound
shll
lock
lahf
xchg
jmp
mov
mov
insl
aad
sbb
inc
sub
adc
mov
clc
and
sbb
mov
cltd
aad
inc
pushf
add
cmpsb
fs
xor
lfs
cltd
jb
pusha
sub
sahf
mov
pop
jecxz
xor
aaa
dec
jecxz
inc
mov
outsl
cmp
add
cli
jmp
dec
mov
mov
xchg
imulb
std
xchg
adc
int3
xor
lods
and
mov
sbb
outsb
out
push
dec
lahf
out
and
xchg
add
out
xor
mov
dec
cmc
shl
add
or
mov
and
rorl
cwtl
in
and
test
cmp
sahf
in
cmc
outsb
adc
mov
cmp
pop
and
pusha
add
xchg
hlt
fdivl
inc
and
add
sbb
jg
mov
int
mov
mov
and
xor
and
out
sbb
xchg
into
add
sbb
arpl
sbb
mov
dec
dec
scas
sub
and
pop
call
pop
pop
cmpsl
inc
mov
pop
test
aaa
pop
in
push
push
std
ret
cmc
lret
rorl
cmpsb
inc
pushf
add
cmpsb
fs
xor
lfs
cltd
jb
sub
sbb
stos
add
push
xchg
pusha
sbb
inc
mov
outsl
cmp
add
cli
jmp
mov
mov
cmp
loopne
push
mov
imulb
std
xchg
adc
int3
xor
lods
and
mov
pushf
data16
and
movsl
lahf
out
and
xchg
add
out
xor
mov
dec
cmc
shl
add
insl
stc
ret
inc
lahf
mov
jg
lods
mov
jecxz
mov
cwtl
in
and
sub
out
inc
or
jb
aad
pop
push
mov
aam
xchg
adc
clc
test
aad
xchg
push
out
scas
jp
and
out
push
in
push
leave
and
rcr
fcoml
orb
jmp
xchg
jae
ret
jbe
scas
cmp
in
test
or
jg
xor
cwtl
test
das
add
and
xchg
mov
lret
iret
jecxz
sbb
pushf
add
cmpsb
fs
mov
insl
or
mov
mov
xchg
insb
mov
sbb
adc
jmp
add
push
pop
ret
orb
out
into
cmp
mov
xchg
cs
and
out
sbb
mov
cmpsb
pop
xchg
mov
inc
cmp
dec
cmp
and
fcompl
xabort
or
and
sub
and
decb
dec
push
arpl
arpl
mov
inc
or
jb
aad
pop
push
aaa
sbb
mov
fwait
mov
nop
xchg
push
out
scas
jp
and
out
push
in
nop
dec
lcall
nop
cmpsb
movsb
outsb
clc
es
das
mov
sbb
mov
jle
pusha
cwtl
inc
imul
sub
sbb
insb
mov
movsb
orb
test
in
push
rcl
sti
inc
iret
pop
ds
xor
adcb
lods
jne
or
loope
cwtl
scas
add
enter
mov
stc
jnp
xchg
cmp
dec
lret
add
imul
xor
sbb
push
add
sub
dec
mov
or
hlt
cmp
fstps
pop
mov
xorl
or
adc
pop
mov
pop
enter
cmp
imul
push
sti
xor
mov
push
cld
sbb
push
fdivr
fdivrp
negb
push
push
bound
cmp
jl
xor
push
rcrl
fisttpll
jl
adc
movsb
sbb
testb
lret
xchg
push
out
scas
jp
pop
push
xchg
mov
fcomps
sbb
adc
xlat
sub
pop
sub
pop
mov
cltd
into
lock
dec
xchg
nop
gs
shrl
ret
mov
mov
or
mov
xchg
std
loope
sbb
pop
mov
mov
enter
sti
cmpsl
jg
cmp
inc
sub
xor
iret
mov
and
lahf
fildll
ret
bound
mov
adc
mov
jno
mov
jne
pop
fs
fldl2e
sbb
cmp
pop
mov
mov
ret
neg
jmp
ja
subl
and
and
push
cmpsl
bound
lods
or
les
xor
cwtl
test
sbb
xor
add
imul
sub
popf
pop
sub
mov
add
popf
fwait
mov
movsb
jmp
inc
lret
xchg
push
out
scas
jp
pop
push
xchg
mov
fcomps
call
and
adc
int3
sbb
sub
pop
mov
cltd
into
lock
xor
loopne
scas
jecxz
cli
adc
or
mov
xchg
std
loope
sbb
pop
mov
mov
pushf
inc
push
cs
outsb
mov
sub
xor
iret
mov
and
lahf
stos
inc
or
test
imul
gs
jbe
cwtl
mov
sbb
adc
mov
pushf
pop
lahf
mov
les
jo
sub
test
neg
jmp
ja
subl
and
jbe
sbb
push
fsubrl
fadd
fisubs
pop
mov
xor
mov
aad
adc
mov
sub
stos
xchg
cmpsb
addr16
test
mov
aaa
inc
cld
dec
mov
mov
xchg
jecxz
mov
mov
xor
push
mov
jge
pusha
inc
jnp
mov
adc
mov
mov
adc
xor
or
sub
mov
popf
mov
xor
aas
andl
lcall
ret
pop
add
add
sahf
add
add
add
add
lea
fnstenv
stos
xchg
imul
fnstcw
movsb
imulb
cwtl
and
dec
loope
cld
cs
add
mov
and
push
cld
addr16
mov
jne
adc
flds
mov
xchg
sahf
popa
cld
add
mov
mulb
jecxz
in
int
jge
xchg
pushf
and
jo
or
jecxz
es
daa
push
std
push
shll
arpl
fnsave
jae
cmp
mov
std
std
cmpb
cmp
stos
iret
inc
shrl
insb
xchg
dec
repz
and
or
test
imul
mov
ss
popa
leave
ds
push
push
test
mov
test
pop
aaa
test
cmpsl
outsb
mov
int3
push
mov
es
pop
repnz
nop
adc
ficoms
stos
loopne
adc
idivb
ret
jmp
xchg
ret
dec
mov
js
mov
mov
inc
add
jl
ss
mov
std
xchg
mov
sbb
inc
scas
cmp
arpl
sbb
cmp
rcrb
mov
pop
roll
cmp
jnp
add
pop
in
out
in
dec
sti
xchg
lahf
or
ss
dec
addl
arpl
test
mov
pop
adcb
mov
clc
rcr
and
shrb
shll
fbstp
lret
repnz
pop
movsb
fwait
insl
inc
sub
inc
outsb
jae
sub
jle
icebp
adc
fst
divl
ds
adc
mov
int
mov
neg
adc
or
push
and
xor
popf
rcrl
adc
hlt
inc
mov
outsb
scas
xor
pop
lds
mov
inc
jl
xchg
mov
mov
sbb
push
ljmp
or
sbb
dec
mov
les
dec
sbbb
fs
xor
add
push
ljmp
pop
lds
arpl
movl
fnsave
pop
mov
iret
leave
mov
aaa
js
mov
pop
int3
inc
scas
sahf
in
xchg
dec
rorl
mov
mov
iret
out
jb
in
andb
push
xchg
je
pusha
in
movsl
test
addl
xlat
cmpsb
sti
inc
cmpsb
cwtl
cmp
dec
mov
movsb
fidivs
mov
mov
jo
jnp
xchg
jnp
jmp
stc
pop
test
push
adc
fiaddl
cmpb
jmp
in
add
insl
cmp
sahf
inc
jns
xchg
adc
ljmp
xchg
std
pop
jecxz
and
push
inc
test
or
cwtl
xchg
pop
xchg
scas
daa
mov
loop
ljmp
outsb
push
sub
cs
out
push
cmp
test
and
xchg
mov
ret
mov
mov
aas
cmpsl
add
sbb
int
mov
jnp
mov
mov
sti
adc
and
cmpsl
pop
sbb
push
or
cmpsl
pop
sbb
push
or
cmpsl
pop
sbb
push
or
cmpsl
pop
sbb
push
or
cmpsl
pop
sbb
clc
pop
sbb
jbe
mov
aaa
push
hlt
cmp
adc
mov
shlb
ret
cmpsl
push
pop
and
cmp
xchg
mov
shll
jecxz
cmpsl
pop
push
push
mov
xchg
arpl
inc
ja
mov
popf
push
mov
out
xchg
xchg
into
dec
les
fisubl
inc
jo
dec
roll
insb
sub
jg
scas
dec
push
les
pop
test
addb
outsl
mov
pop
mov
jbe
sahf
cmp
add
jmp
mov
in
add
loop
cmp
push
daa
cmp
cmp
cli
cltd
xchg
in
and
xchg
mov
les
sub
lods
rorb
add
sahf
add
add
add
add
cmp
fisubl
mov
jo
call
cmp
mov
xor
xor
mov
and
lahf
push
repnz
push
xlat
pop
adc
jo
jge
push
out
cs
je
adc
adc
jo
dec
imul
das
cmp
mov
mov
lods
add
sub
add
xchg
push
inc
ret
inc
dec
jmp
push
dec
mov
xchg
mov
xchg
pushf
mov
sbb
aaa
cmp
xor
pop
in
or
fs
adc
idivl
stos
clc
or
jo
push
push
into
xchg
mov
cmpsl
test
movsl
pop
inc
mov
xchg
filds
push
ss
enter
mov
test
mov
outsb
and
pop
cltd
shrl
fs
and
fisttpll
insb
xor
mov
push
pop
mov
pop
out
insl
ret
fwait
ljmp
dec
repnz
in
sahf
xchg
mov
sub
dec
mov
fistl
jbe
and
int
loop
lock
nop
add
sbb
test
faddl
sub
sbb
mov
icebp
pop
or
xchg
jge
lock
or
popf
adc
nop
das
or
add
ret
lret
inc
xchg
push
nop
mov
xchg
push
sbb
pop
fisubrs
jnp
clc
imul
js
iret
mov
lea
mov
cmp
add
rcrb
dec
push
shlb
pop
and
jae
lcall
mov
out
popf
in
repnz
sahf
jecxz
mov
and
mov
xchg
mov
xchg
dec
in
sbb
int3
cmp
aas
mov
xchg
xor
xor
cmp
pusha
fmuls
add
mov
lret
mov
mov
cmp
loope
pop
sbb
jp
mov
inc
icebp
mov
test
pop
add
imul
add
add
add
mov
push
pop
adc
mov
aad
push
push
pop
jno
push
clc
fisttpl
fwait
jg
hlt
mov
and
push
and
lahf
sub
in
mov
ds
pop
adc
fldenv
push
gs
mov
add
inc
mov
lcall
aaa
mov
das
jns
push
jns
or
decb
addr16
fimuls
sti
dec
adc
sub
adc
jle
inc
inc
cmp
aas
mov
andb
addr16
cmc
push
or
ret
mov
mull
jnp
test
jge
in
call
push
mov
jecxz
sbb
stos
outsl
push
mov
pop
in
loop
rcll
bswap
in
adc
les
and
sub
dec
stos
push
fldl
fs
mov
inc
inc
sub
sub
lods
add
es
mov
stos
xor
call
ja
mov
insb
mov
imulb
into
dec
pop
aaa
stc
arpl
add
imul
dec
inc
bnd
add
fldenv
daa
sub
inc
jne
cmp
fs
fcom
xchg
lret
or
in
inc
ljmp
adc
adc
aaa
or
lcall
mov
push
jecxz
and
lcall
mov
pop
aaa
stc
arpl
xchg
daa
sub
mov
lahf
test
stc
dec
int3
or
popa
mov
das
lahf
pop
dec
pop
jg
aas
mov
out
stos
or
sbb
pop
pop
cli
ds
in
hlt
stos
stos
pop
pop
repnz
out
pop
xchg
imul
fs
loopne
fldenv
lret
call
adc
pop
dec
add
jmp
nop
sbb
cmpxchg
xchg
out
imul
pop
out
lret
rorb
cmp
add
sub
in
sti
sbb
shll
push
inc
cmp
out
mov
es
decb
test
pop
gs
dec
inc
dec
mov
jge
mov
sti
stos
sub
mov
push
fs
dec
lahf
idivb
mov
xor
cmp
and
pop
pop
mov
jmp
jns
ss
push
std
insb
add
ljmp
or
arpl
mov
leave
jae
adc
iret
xor
push
jns
pop
mov
mov
pop
movb
gs
outsl
mov
pop
mov
and
jmp
insl
mov
push
cmpb
sahf
mov
aas
mov
inc
xchg
push
xchg
testb
xor
jbe
dec
in
in
mov
mov
sbb
int
repnz
addr16
xchg
adc
jb
movsl
daa
mov
js
mov
jecxz
mov
cmp
lds
sbb
mov
ljmp
fstpl
xchg
xor
and
fsubl
xchg
mov
fildll
or
push
cmc
ds
cwtl
push
shlb
fwait
sbb
out
pop
mov
sbb
cs
je
outsl
jmp
or
lret
push
adc
sbb
pop
leave
cmpsb
shrb
inc
xor
mov
push
js
pop
push
aaa
loop
in
imul
mov
adc
shr
clc
lcall
cmp
sub
jae
sarb
xchg
jl
lock
lods
inc
push
adc
sahf
or
bound
fisttpll
mov
and
sahf
out
cltd
add
jge
sub
mov
movsb
in
call
jecxz
mov
sti
cmp
jns
idivb
push
cmpsl
mov
xchg
out
add
outsb
dec
outsl
into
js
aam
and
inc
jecxz
jb
add
dec
sub
mov
test
push
jne
test
pop
xor
sar
stos
data16
jno
dec
das
inc
mov
std
subb
rcrl
shr
pop
xor
pushf
add
jb
imul
jl
mov
adc
inc
out
and
adc
jnp
fcmovbe
fiaddl
inc
in
out
test
shlb
sbb
cmpsl
cli
sub
add
mov
cmp
inc
cld
js
iret
fs
lahf
mov
pusha
dec
dec
push
mov
add
es
fcmovb
adc
push
outsl
sbb
push
push
or
mov
mov
mov
mov
sbb
pop
xor
add
and
jae
ljmp
cmpsb
stc
sbb
outsl
mov
in
out
mov
xchg
je
mov
pop
rcr
js
mov
pop
iret
outsb
in
push
jo
mov
xchg
cli
pop
dec
lcall
pop
xchg
add
add
in
out
and
push
rclb
test
imul
dec
fldt
aam
fcmovu
test
cli
mov
ret
sahf
mov
in
mov
add
fsubp
jecxz
lret
or
popa
lods
cmp
dec
dec
xorl
stos
les
iret
repnz
or
cmp
fisttpll
xchg
cli
aas
xor
jno
push
mov
aaa
xchg
cmp
mov
mov
subb
cmp
fistpl
jmp
test
roll
xor
movb
shll
dec
xchg
dec
shll
push
xchg
scas
sarb
test
jb
pop
xor
test
les
mov
into
jmp
fst
mov
xor
adc
clc
jb
adc
in
mov
pusha
inc
shl
arpl
jl
test
mov
or
jp
push
aad
fildll
dec
pushf
jnp
fidivl
rcl
outsb
jge
ja
push
sub
or
jp
mov
cltd
pushf
loopne
dec
pop
bound
inc
sahf
push
mov
jmp
rcrb
hlt
call
mov
out
scas
inc
scas
add
arpl
dec
jg
arpl
fcoml
cli
dec
mov
outsb
ret
gs
fwait
mov
pminub
mov
xchg
and
lds
imul
sub
aad
add
lret
inc
jb
jb
daa
std
mov
mov
hlt
daa
jb
add
dec
jmp
stos
xchg
xor
cmp
add
idivb
or
pushf
mov
inc
pop
cmc
sub
adc
xchg
inc
pop
out
mov
sub
mov
xor
fcmovnu
sbb
xor
and
sub
sahf
sar
enter
xor
sbb
imul
and
and
sbb
cltd
test
sub
mov
add
jnp
aam
cltd
sub
dec
jmp
push
add
cmpsl
cmpsl
dec
inc
push
xor
fldcw
or
xorb
or
mov
jecxz
inc
test
sub
lcall
xorb
int3
sbb
pop
loop
dec
in
aaa
je
xchg
fnstcw
sbb
jl
aad
xchg
cwtl
cli
out
sti
fildl
lock
imull
lcall
insb
sahf
addb
rcrb
jge
inc
lods
sbb
ja
ja
out
je
push
scas
mov
rcrl
mov
inc
push
repz
outsl
rcrl
sub
xlat
pop
add
in
jl
push
std
adc
imul
inc
xor
test
pop
ficoms
add
inc
leave
test
pop
mov
or
fstl
push
push
loopne
fnstsw
pop
out
pop
pusha
adc
fidivrs
xlat
fincstp
ljmp
loope
dec
or
stc
or
repz
repz
fmuls
push
push
mov
ss
push
sub
sub
xchg
sub
mov
sub
xor
mov
out
cmp
stos
and
inc
pushf
lds
cmp
push
pop
jge
lret
inc
mov
ret
dec
dec
lcall
mov
stos
fwait
cltd
jle
cwtl
jl
inc
int
cmp
call
addl
push
aaa
leave
push
ret
cmp
mov
stos
rol
mov
add
pop
pop
lahf
xchg
dec
es
cli
pop
rclb
cmpsb
jno
rolb
clc
and
mov
int3
or
mov
daa
mov
push
fs
sarb
inc
mov
cmpsl
aam
mov
mov
or
jge
out
sub
in
adc
andl
shrl
das
lock
ljmp
bound
mov
jp
xchg
sbb
lods
aaa
imul
or
jb
mov
loope
pop
mov
iret
aas
sbb
mov
push
cli
jno
inc
jae
scas
iret
cmp
sbb
push
and
lea
xchg
movsl
xchg
lds
iret
mov
mov
jns
popa
adc
lea
std
stos
jl
in
lret
bound
mov
shlb
std
cld
out
cli
add
xor
cli
sub
xorl
test
add
inc
sti
ds
or
test
jmp
and
fprem
pop
sub
mov
add
mov
add
mov
aaa
jmp
data16
test
sub
pop
xchg
imul
and
leave
sub
jns
add
loop
sahf
aas
insb
mov
mov
add
out
adc
ja
jl
mov
mov
push
lret
mov
and
or
and
cmp
xchg
stc
adcl
aaa
outsb
stc
mov
insb
repnz
out
inc
or
insb
push
mov
add
pop
test
ja
jle
in
cltd
mov
or
mov
pop
ljmp
lahf
inc
test
mov
into
shl
or
js
mov
cmp
pushf
adc
adc
popa
jmp
lcall
aaa
cmp
and
hlt
aaa
ret
mov
push
push
repz
mov
inc
inc
dec
out
mov
xchg
test
je
arpl
imul
pop
pop
pusha
or
jmp
out
fmul
inc
inc
jne
mov
lcall
pop
pop
cmpsl
lea
int
rorb
jecxz
inc
add
insb
negl
add
adc
push
in
adc
inc
ret
xchg
es
out
insb
pop
in
xor
pop
out
cmp
cmpsb
jl
xor
lock
aam
scas
roll
repnz
lock
sub
addr16
aam
shrl
add
shr
mov
out
test
cwtl
clc
leave
sbb
arpl
mov
adc
or
pop
sub
inc
pop
mov
into
imul
out
pop
xchg
bound
int
int3
test
mov
test
xchg
sub
xchg
in
mov
test
sub
jnp
xor
aaa
add
sub
xor
push
cmpsl
jp
jae
cmp
xchg
mov
xor
inc
js
xchg
mov
icebp
jns
cli
mov
lock
push
push
int
imul
xchg
dec
stc
pop
and
ds
xchg
add
stos
mov
sbb
ds
pop
mov
fists
in
cwtl
cmp
hlt
mov
sahf
jae
xor
shl
cltd
add
cmp
push
ret
jnp
jg
jmp
adc
rol
in
loopne
mov
enter
lea
imulb
xchg
push
jns
arpl
pop
mov
mov
in
in
loope
mov
out
dec
data16
cmp
icebp
push
inc
push
or
push
loope
fcompl
add
lea
mov
loope
push
ret
pop
sarl
mov
xchg
mov
and
pop
enter
adc
adc
loop
xor
repnz
sbb
xor
rdmsr
pop
dec
les
mov
dec
push
test
aas
clc
cli
jmp
mov
mov
cwtl
fwait
shrd
xor
pusha
int
testl
jge
cmc
sbb
xchg
push
cmp
andb
and
jp
pop
lcall
push
sbb
rcl
ds
adc
jbe
mov
aas
xor
int3
cltd
aaa
adc
not
inc
in
xchg
mov
rep
jg
inc
dec
lahf
inc
test
dec
xchg
dec
jbe
ret
int
pushf
mov
and
or
dec
jo
pop
cltd
pop
leave
sbb
lret
xor
int3
mov
in
and
add
adc
js
push
lcall
xchg
decb
insl
push
xchg
dec
int
fisttpl
push
push
xor
jge
imul
push
stc
insb
xchg
clc
xchg
ds
sub
daa
push
imul
mov
xor
mov
mov
inc
fwait
jg
andb
ja
loop
sbb
clc
pop
and
mov
pop
gs
mov
xchg
add
mov
pop
call
mov
fcom
jne
or
adc
sbb
repz
mov
in
out
loopne
clc
sub
mov
out
std
mov
popf
mov
sub
sub
insb
pop
jbe
xlat
aam
aaa
fidivl
xchg
popa
pop
inc
scas
sbb
xchg
mov
adc
xor
outsb
in
mov
imul
lahf
or
fcompl
xchg
mov
outsb
jg
int
xor
lahf
mov
bound
adc
cmpsb
jg
pop
sbb
add
ret
sbb
inc
cmc
ret
cmp
nop
cmp
and
adc
xchg
xchg
xchg
sub
lret
push
loopne
outsb
mov
cmc
jp
pop
cltd
js
push
mov
aaa
sub
xor
cmp
aaa
cs
popf
negb
mov
pop
push
out
inc
insl
pusha
xor
cmpsb
push
mov
sbbb
fs
cmp
push
cmp
xor
mov
bound
mov
jne
adc
jge
inc
out
shlb
mov
jb
inc
rcrb
inc
notl
jno
js
loopne
add
pop
sbb
mov
fnsave
out
mov
mov
adc
mov
imul
repnz
mov
cld
push
add
and
sub
cmovp
lea
sarb
push
mov
stos
repz
outsb
push
sbb
and
idivl
hlt
jmp
sbb
fildl
mov
dec
test
aaa
inc
lods
test
ss
xor
and
cmp
dec
add
movsb
xor
xlat
lret
cmp
sbb
addr16
mov
lcall
subl
arpl
cmc
add
inc
movsl
loope
out
pop
pop
pop
outsl
lods
jge
int3
in
push
mov
add
daa
mov
divb
jmp
ljmp
jne
mov
sti
arpl
fwait
movsb
add
frstor
push
das
jle
and
dec
jnp
inc
and
lea
lret
xor
loope
imul
lret
daa
aam
inc
insl
adc
bound
pop
and
ret
test
jno
mov
pop
jmp
sub
jns
fcompl
popf
or
popf
or
dec
daa
shrl
imul
nop
rcrb
mov
subl
mov
mov
sbb
test
dec
sub
dec
add
sub
cmp
fwait
and
je
in
cmp
nop
cltd
dec
jge
insb
js
or
dec
jecxz
add
test
mov
xor
pop
sub
push
pop
imul
lret
jg
fiaddl
push
aam
mov
fs
in
jl
dec
xchg
loopne
bnd
rclb
jnp
les
into
add
out
cmc
push
sbb
sbb
sub
movl
or
bnd
xor
icebp
xor
data16
cli
adc
xchg
mov
idivb
mov
cwtl
mov
xor
sbb
dec
and
lret
ror
mov
inc
js
or
jecxz
js
mov
pop
sub
data16
mov
sahf
pop
lods
pop
adc
fcoms
imul
sbb
push
pop
xlat
fdivrl
dec
xchg
pop
loop
jae
add
jecxz
add
in
popa
dec
fldcw
insl
xchg
data16
xor
and
lcall
or
sarl
adc
fldt
mov
mov
sbb
or
fistl
ret
dec
out
aas
xor
std
pop
mov
mov
sbb
fs
or
in
jb
cmpsb
pop
mov
push
xchg
mov
mov
mov
cmp
pop
xchg
cmp
mov
outsl
leave
les
sti
mov
into
stos
inc
ret
test
out
addr16
xchg
dec
mov
mov
jg
dec
push
fwait
push
mov
jae
clc
inc
cwtl
sbb
xor
pop
jl
jmp
or
pop
test
mov
leave
xchg
nop
inc
xchg
xchg
lcall
jecxz
add
mov
lret
in
or
jl
imul
stc
fldln2
sbb
je
andl
push
mov
mov
adc
cli
sub
lret
push
mov
or
add
or
cli
js
into
cmp
push
xor
cmpsb
mov
xor
fsubr
into
xor
stc
mov
cmp
das
data16
addb
popa
popf
mov
callw
rorb
cs
mov
iret
xchg
popa
pop
mov
addr16
aaa
lock
addr16
insb
scas
jg
xchg
pop
jo
pop
push
jmp
push
adc
pop
mov
mov
dec
stos
push
pop
or
fldcw
cmp
or
ret
int
out
mov
or
in
xchg
push
scas
dec
stc
outsl
dec
xchg
push
imul
dec
clc
jmp
cmp
mov
xor
ret
fwait
std
dec
mov
jnp
inc
aam
mov
sub
ret
push
sbb
pusha
sbb
and
inc
mov
push
pop
mov
jnp
mov
mov
sub
mov
mov
ja
cmp
lahf
mov
or
lcall
and
xor
push
cmp
imul
xchg
cmp
fsubr
mov
lods
lret
fldlg2
mov
cmp
jle
lods
and
inc
cli
cmpsl
jg
cltd
daa
clc
mov
daa
pop
lret
xchg
cmp
clc
xchg
loope
mov
shr
add
pop
cmp
mov
les
lret
sbb
orl
push
jo
pop
dec
mov
adc
jne
jmp
cld
pop
cmp
dec
xor
inc
lcall
in
js
xchg
out
aam
ds
ds
shl
cs
mov
push
jecxz
and
stos
test
frstor
cmp
push
cs
sbbl
lcall
mov
cmp
adc
fidivl
cwtl
bswap
outsb
and
sbb
pop
out
pop
sub
dec
in
jns
push
cmp
jge
sub
aad
push
adc
dec
sub
mov
push
inc
leave
dec
test
stos
lcall
mov
dec
mov
adc
pusha
adc
mov
xor
push
sbb
aaa
and
jnp
mov
jnp
pushf
pop
adcl
inc
int
cmpsl
sbb
icebp
mov
bound
ljmp
outsl
mov
sarl
call
iret
cltd
or
mov
ljmp
cltd
lea
push
dec
les
cwtl
jns
aaa
xchg
jbe
and
xor
divl
xchg
mov
pop
fxch
cmp
inc
adc
scas
imul
fisubs
jmp
add
movsb
dec
push
divb
ret
mov
fnstsw
jle
mov
fstps
dec
je
pop
shrb
sbb
roll
mov
jnp
push
call
push
xchg
push
push
ret
jecxz
addb
popf
int
test
jge
insb
mov
or
sti
test
mov
test
push
in
dec
xor
jp
xor
ret
scas
and
mov
daa
leave
xor
inc
int3
push
xor
or
sbb
es
leave
inc
stos
in
pushf
push
push
or
imul
or
xchg
cmc
adc
xor
outsl
imul
movsl
xchg
or
mov
mov
fbstp
jg
xchg
xor
jo
pop
sub
xchg
pusha
jno
ret
dec
and
scas
sbb
dec
mov
pop
jb
dec
sbb
xchg
xor
or
pop
pand
inc
dec
or
add
sahf
add
add
les
fsubrl
jb
out
ret
shrl
push
dec
lcall
inc
mov
add
les
sar
stos
sub
mov
push
push
mov
aam
jnp
fwait
in
mov
shlb
mov
push
push
pop
dec
xor
fidivs
mov
shlb
jl
adc
sahf
mov
jae
lods
adc
mov
mov
pop
mov
mov
xchg
pop
aad
ja
add
leave
pop
js
and
scas
popa
jno
pop
test
bound
adc
lds
pop
out
aam
pushf
icebp
push
jmp
xchg
sbb
xchg
in
daa
inc
mov
and
cmp
push
adc
pop
pop
inc
sub
nop
insl
add
cltd
mov
push
jbe
and
les
mov
lock
jge
aas
int
les
sbb
fiadds
xchg
adc
dec
lahf
sbb
push
fidivrl
shll
sbb
and
sub
jl
mov
fmull
dec
and
add
std
in
mov
push
push
daa
xor
aam
stos
pop
test
stos
cmp
push
in
cmp
bound
stos
or
ss
jecxz
cmc
cmp
jmp
xchg
jnp
movsb
addl
mov
bound
sahf
and
xor
mov
mov
mov
ja
mov
sub
mov
or
das
jo
les
xchg
push
inc
addr16
sub
cmpsl
add
sbb
pop
xor
test
repnz
pusha
adc
rorl
movsb
lcall
mov
mov
fcoms
inc
shr
sarl
std
jne
inc
mov
lods
shl
in
lock
dec
mov
jb
sub
adcl
push
mov
fdivs
outsb
adc
xchg
mov
test
xor
pop
and
jbe
pop
fmuls
xchg
and
clc
mov
xor
inc
jmp
orb
ret
arpl
sti
and
add
pop
mov
sbb
loop
jo
mov
pop
dec
bound
pop
stc
aas
test
ficoms
lds
or
jbe
iret
cmp
xchg
jl
fmuls
les
mov
loopne
stos
pushf
not
jb
adc
sahf
dec
cmp
inc
jnp
aas
xchg
cmp
add
insl
fwait
ret
jp
mov
pusha
xchg
jp
push
stos
cmpsb
mov
push
inc
fs
filds
dec
jmp
addl
xchg
mov
inc
inc
lea
hlt
and
pop
int
fstpl
loope
std
jae
int
sbb
adc
adc
mov
add
bound
stc
in
pop
fldt
loope
and
push
in
inc
fucomip
out
inc
mov
negl
dec
xbegin
mov
add
cmpsl
jo
in
cli
dec
jns
jecxz
out
or
fcmovbe
rclb
mov
clc
cld
xchg
fld
cmpsb
pop
cmp
push
ja
xlat
int
dec
ret
movsb
gs
cwtl
inc
test
dec
xchg
mov
xchg
xchg
fcomp
je
mov
loopne
jb
and
ud0
aaa
test
js
sub
inc
mov
pop
in
xor
dec
test
pop
enter
rep
jns
nop
test
dec
out
cmc
push
cmpsl
cwtl
sub
jne
jmp
pop
aaa
jmp
repz
cltd
or
and
sarb
lods
mov
repz
sahf
ret
jne
clc
jecxz
cld
out
adc
sbb
call
cs
sarb
lock
lds
je
int3
push
or
adc
das
add
aas
jb
jo
jg
cmp
mov
subb
imul
adc
sbb
or
sbb
daa
push
or
inc
mov
inc
push
cs
aas
repnz
sti
sti
aam
or
xor
cmp
ja
mov
enter
mov
sti
and
dec
or
dec
mov
pop
push
add
aad
outsl
xor
jmp
lods
add
or
dec
fcoms
adc
adcl
mov
jae
mov
fildll
orl
cmp
shl
cmp
movsb
jecxz
imul
into
mov
sbb
fidivl
and
aad
shrl
fs
out
pop
hlt
sub
and
mov
adc
jno
fiaddl
test
lods
jle
add
and
sub
inc
xchg
push
jp
adc
fldz
roll
adc
lods
mov
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
clc
outsb
aaa
mov
or
add
add
jno
add
imul
add
add
add
iret
repnz
mov
lods
mov
sbb
and
bound
adc
push
and
mov
dec
and
or
add
jp
insb
or
mov
pop
jns
jg
xchg
lcall
stos
jne
adc
xlat
pop
pop
mov
pop
push
insb
rolb
fildll
addl
movsb
and
jge
sbb
push
arpl
mov
dec
mov
dec
out
outsb
pop
shrb
insb
mov
incb
sbb
pop
std
scas
pop
out
jmp
jns
enter
mov
nop
xchg
cltd
push
and
xor
sub
cmp
inc
and
xor
hlt
mov
or
fildll
mov
lods
push
pushl
clc
mov
icebp
cmp
data16
push
dec
xor
jge
repnz
push
in
jbe
jg
cmc
arpl
lcall
xlat
pop
sub
inc
pop
out
add
mov
xchg
adc
pop
aaa
sbb
mov
xchg
sub
rol
ss
sbb
flds
adc
mov
dec
push
cli
push
repz
adc
xchg
xchg
enter
jae
xchg
repnz
jg
lahf
test
das
jnp
cmpsb
xor
jns
cmp
pop
lcall
xor
inc
imul
in
push
adc
mov
int
cmp
fldl
adc
add
jbe
jp
adc
sbbb
lds
push
popf
hlt
sbb
jl
push
movsb
push
and
imul
mov
subb
adcb
insb
iret
jb
dec
mov
mov
fs
repnz
mov
lret
mov
push
mov
fdivr
mov
inc
test
mov
xor
sub
lahf
shll
fisttps
adc
xchg
sbb
mov
xchg
xchg
add
out
pop
loopne
mov
mov
adc
aaa
dec
push
pop
mov
imulb
dec
stos
into
aam
push
or
je
dec
and
push
popf
loop
cmpsb
pop
or
fnsave
subb
sbb
int3
sti
mov
pop
mov
fdiv
popf
sti
push
fsts
test
ret
inc
push
mov
idivl
mov
lods
test
cmp
inc
lahf
repnz
iret
dec
mov
ja
imulb
dec
push
cltd
outsb
xchg
and
jo
les
out
inc
sbb
cli
sahf
rclb
hlt
setp
sbb
outsl
nop
cli
push
sub
cmc
mov
mov
sub
push
das
pop
scas
push
lahf
outsl
mov
leave
add
adc
push
test
repz
sarb
xchg
cmp
mov
pushf
int
das
inc
cmp
xor
pop
dec
xorl
movsb
sub
and
insl
es
xchg
mov
xor
mov
add
xchg
adc
mov
sbb
bound
jbe
pop
int
arpl
add
aas
jae
and
add
out
dec
mov
dec
or
fistps
mov
add
iret
out
sbb
sbb
mov
xlat
jle
and
nop
xor
push
lds
add
lock
jnp
add
es
pop
adcb
clc
into
add
jp
cmp
call
ljmp
aam
dec
jge
outsl
lds
adcl
les
lock
and
in
imul
adc
cli
inc
inc
xor
or
jg
jne
cld
add
dec
inc
incl
outsl
jb
cs
mov
add
lock
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
scas
dec
insb
jmp
push
in
mov
mov
ficomps
fsubr
jl
mov
imul
out
sub
daa
leave
addb
addr16
lods
adc
aad
mov
roll
add
imul
incl
add
add
dec
nop
xchg
cmp
xchg
jb
or
dec
movsl
add
push
adc
jb
out
sub
fidivrs
out
jge
cs
pop
mov
cmpl
sub
jbe
cmp
arpl
adcb
mov
flds
xchg
test
sbb
in
pop
add
stos
test
pop
in
imul
mov
jge
mov
testl
push
push
ljmp
scas
mov
in
add
pusha
out
lcall
je
jp
mov
and
xchg
lods
push
sbb
cmpsl
push
jb
jo
xor
cmp
pop
mov
cld
xchg
adc
iret
lcall
mov
fistps
incl
add
add
cwtl
addw
cmp
cmp
psubq
push
inc
dec
push
ret
leave
or
pop
cwtl
adc
cmp
loop
mov
aad
enter
sbb
mov
push
xor
bound
insb
sbb
scas
xor
dec
sub
mov
arpl
dec
xor
inc
das
lods
cli
cmp
andb
shlb
cmp
cltd
sub
cmc
lret
jmp
xchg
rcl
inc
pop
xchg
xlat
adc
inc
orb
xchg
adc
loope
adcl
cld
inc
notb
or
jbe
sbb
inc
or
pop
daa
in
xor
xor
jns
xchg
mov
pushf
add
add
sahf
add
incl
add
add
or
xlat
mov
stos
imul
xor
cltd
jl
cwtl
mov
movsl
fidivs
sti
cmp
jg
stos
jae
pop
xchg
xchg
icebp
sarb
jae
imul
and
cwtl
loop
push
subl
loop
cmpb
rolb
xor
enter
insb
out
mov
dec
and
push
cmp
lock
scas
pop
addr16
mov
adc
pop
loope
cmp
lock
lahf
rcl
scas
mov
sbb
or
and
ret
add
add
sahf
add
add
add
add
adc
mov
cmp
dec
rcrl
in
cmpsl
andb
pushf
dec
pop
or
xchg
mov
in
pop
dec
add
inc
imul
xor
cli
test
ds
and
fistps
jl
jae
mov
jecxz
and
sbb
pushw
jle
mov
or
cmp
ret
cmp
adc
jmp
mov
pusha
mov
or
xor
xor
or
mov
xor
jle
sub
rolb
add
sub
sar
shl
xor
jmp
sub
mov
mov
and
push
movsb
or
pop
mov
xchg
xchg
or
ud1
arpl
ret
or
jmp
nop
lret
int3
lods
lods
dec
add
dec
xchg
push
stos
ss
jg
cmp
xor
pop
loope
mov
jmp
fstps
rolb
leave
add
lret
xorl
pusha
dec
pop
cmp
or
das
imul
pusha
cld
dec
dec
push
addl
jae
and
aaa
and
lahf
jge
imul
data16
xchg
mov
mov
incb
xchg
jne
cwtl
in
fisubl
cld
inc
xor
es
jl
enter
push
cld
fdivrs
add
cmp
shll
inc
dec
push
jo
dec
cs
cwtl
stc
pop
faddp
aas
loop
loopne
jno
and
fisttps
popf
fbld
mov
xchg
std
fs
xor
jge
stc
fs
cmp
jmp
and
test
sbb
push
cltd
push
push
mulb
cmp
test
mov
jo
push
jg
push
lock
xor
push
shll
and
sbb
mov
daa
mov
fwait
mov
jb
inc
adc
pop
sti
popf
loope
lcall
xchg
rcrl
mov
mov
sub
out
xor
stos
test
movsl
jb
out
pusha
jns
push
sub
sbb
adc
nop
test
and
cmpsb
jle
add
dec
pushf
mov
rorb
push
mov
outsb
sub
xchg
sbb
inc
dec
push
xchg
lods
or
sub
out
mov
fsubrs
cld
add
cmp
sub
mov
daa
sub
push
inc
pop
rcrb
ret
enter
sub
test
xchg
into
cli
jnp
dec
or
mov
test
addl
dec
xorb
cmp
mov
lds
outsb
add
jecxz
les
push
sub
movsb
mov
lret
lahf
das
sub
cmp
mov
lods
jnp
aad
mov
add
jne
xor
imul
cmp
inc
cwtl
and
and
insl
mov
je
roll
xchg
popf
cmc
pop
stc
andl
iret
popf
call
cmp
push
adc
lcall
mov
pop
mov
ss
insb
arpl
in
xchg
sub
pop
lock
ja
jle
xor
mov
cmp
loop
lods
addr16
inc
sti
pop
lock
mov
aas
add
mov
pop
mov
add
push
push
ret
fidivrl
addr16
fnsave
scas
sahf
pusha
popf
rorb
lahf
fimuls
and
enter
int3
add
in
outsl
push
out
into
mov
push
sbb
sbbl
decl
enter
and
push
xchg
popf
mov
dec
inc
outsb
lds
mov
outsl
jae
pop
jp
repnz
push
repnz
fistps
add
add
add
fbld
cmp
push
sti
mov
mov
loope
std
cmp
sbb
pop
cld
lret
sti
sbb
pop
xchg
lret
jg
sahf
lods
add
mov
mov
shll
pop
loope
cmp
push
adc
mov
dec
lods
inc
add
cmp
sbb
popa
inc
lds
data16
imul
fwait
mov
pop
outsl
addr16
mov
inc
cmp
push
in
nop
mov
rol
add
and
xor
and
jbe
and
call
xlat
mov
ja
iret
dec
jl
push
sub
movsb
mov
pop
jno
sti
mov
sbbl
add
inc
xor
in
push
adc
es
repnz
lock
les
mov
add
sbb
or
movsl
ljmp
mov
movb
dec
mov
sti
sub
loopne
stc
int
popf
clc
mov
lods
in
cmpsl
repnz
pop
sub
int
fsubl
sub
daa
loopne
push
fcompp
jecxz
popf
shrl
pop
jne
push
jmp
aam
fldcw
and
pop
mov
jne
sub
mov
adc
cmc
inc
pop
adc
iret
rorl
sub
mov
out
fdivl
cmpb
or
enter
pushf
adc
push
fadds
push
xor
add
imul
add
add
add
sar
scas
fdivl
cmp
decb
popa
push
sbb
or
push
xor
push
pusha
fisttps
and
push
inc
dec
hlt
call
xchg
aaa
push
adc
xor
test
and
subl
xchg
xchg
test
push
shll
arpl
lret
xchg
mov
xchg
inc
dec
pushf
mov
je
xchg
sbb
out
and
sbb
push
cwtl
push
test
jns
sub
pop
pop
xchg
mov
in
dec
loope
and
sub
xlat
js
lods
cwtl
clc
mov
cltd
jae
fs
loope
sbb
sbb
enter
pop
es
fldcw
daa
sbb
push
stos
xchg
addr16
adc
js
and
into
pusha
cmp
scas
in
mov
jge,pn
inc
mov
cmp
xor
mov
repnz
sbb
jo
pop
fsubs
and
mov
repz
testl
xchg
ja
in
sbb
loope
ret
inc
test
mov
icebp
les
pop
mov
push
scas
in
xchg
cli
leave
mov
cli
or
or
arpl
adc
inc
insl
or
dec
jge
add
leave
xchg
test
jae
xchg
in
xchg
pop
add
movsb
adc
mov
std
mov
loope
cmp
pop
les
or
mov
aam
dec
or
popa
nop
vucomiss
sbb
in
aas
leave
out
push
leave
xchg
aam
es
sarl
movsl
stos
or
fisttps
insb
pop
cmp
iret
lret
sbb
xchg
xor
fnstcw
movsb
cmp
mov
popl
mov
or
dec
out
neg
mov
jmp
ljmp
or
xchg
loopne
push
xor
or
lock
jge
ljmp
data16
jmp
mov
push
dec
add
mov
add
xor
gs
sbb
out
paddsw
adc
repz
cmp
push
incl
int3
adc
fistps
adc
jnp
cmp
lcall
scas
xchg
iret
in
popf
adc
lcall
daa
cmp
or
movsb
dec
cmp
pop
aas
add
mov
add
loop
in
mov
add
adc
jp
and
and
les
rcrl
lods
pop
ds
lret
loope
leave
enter
xorb
test
jno
mov
cmp
sub
stc
inc
fdivp
mov
inc
pop
push
arpl
push
aas
xchg
push
jno
inc
fbld
stos
ret
xchg
mov
pop
scas
aad
dec
mov
mov
lcall
not
mov
mov
cmp
lahf
ljmp
les
and
xchg
push
out
out
pop
rcrb
add
cltd
jnp
mov
popf
dec
outsl
fucom
pop
les
xchg
xor
cmc
js
add
imul
add
add
add
adc
popf
ja
pop
and
and
xchg
push
fsts
test
mov
push
sbb
pop
and
scas
cltd
ss
bound
rorb
pop
push
gs
cmpsl
add
mov
out
scas
push
jns
mov
stos
dec
test
jmp
repnz
stos
jmp
leave
xlat
cmp
jp
xchg
xor
pop
mov
in
cld
push
add
insb
imul
jp
fadds
push
jno
mov
ljmp
xchg
sbb
dec
fisubs
lcall
jge
or
jecxz
xlat
xchg
loope
cltd
or
addb
pusha
or
add
pop
push
or
adc
mov
mov
stos
insl
shrl
scas
mov
push
jle
mov
movsl
imul
mov
sub
sub
and
cli
int3
notl
outsb
lea
fsubr
imull
sbb
outsl
movsb
mov
jo
jne
test
add
je
fcmove
and
sti
adc
lods
std
rorb
sbb
lret
pop
push
stos
call
pop
cmp
mov
sub
pushf
mov
imul
jle
int
add
xchg
sti
cs
repz
lahf
add
icebp
sbb
ja
test
or
mov
enter
xor
cmpsb
fdivl
cmpsb
dec
lea
pop
dec
mov
sahf
popf
dec
pop
push
daa
cmc
stos
aaa
leave
or
cs
cld
or
ljmp
inc
push
pushf
loope
stc
mov
nop
movsb
jne
lods
das
mov
loop
test
xchg
stc
fs
adc
aas
mov
out
std
clc
mov
aam
lds
rorl
mov
adc
mov
sbb
adc
add
jp
sbb
xchg
popa
mov
jnp
cmpsl
pop
push
orl
lods
iret
or
jle
shrl
ljmp
outsl
jl
cmp
aaa
test
mov
add
fisttpl
int
mov
test
hlt
push
sub
sbb
add
popf
xlat
jmp
test
push
mov
and
ss
mull
pop
cmp
loope
mov
push
lock
add
out
mov
mov
shll
fstp
fdivl
and
ljmp
mov
cmc
adc
lret
push
andb
inc
xchg
hlt
and
popf
inc
fmulp
fsubrs
mov
shrl
aam
in
out
in
jmp
sub
add
mov
lret
ret
jl
mov
mov
lock
sub
repz
sub
fisubrs
das
push
pop
cltd
je
xor
cld
data16
mov
outsb
inc
cmp
outsl
xor
push
fnsave
outsl
cmp
cwtl
sbb
xor
add
scas
cmp
xchg
insl
add
mov
clc
sti
xchg
adc
xor
pop
sub
leave
sbb
mov
mov
ret
shll
inc
lods
sbb
xchg
dec
fdivrl
faddl
sahf
sbb
repz
cmc
fildll
ljmp
in
test
cmp
jle
dec
out
or
cld
adc
xchg
sub
xor
xchg
fwait
sbb
jmp
popf
mov
popf
shlb
test
ret
sbb
js
mov
mov
mov
sbb
xor
fs
into
into
adc
xchg
inc
push
inc
jno
pushf
test
push
jl
mov
pushf
or
adc
xchg
rcrl
iret
lahf
imul
mov
aas
popf
in
loopne
xchg
or
mov
mov
lahf
je
in
xor
sahf
iret
aaa
bound
add
int
rolb
push
scas
fmul
sbb
mov
and
inc
insb
cld
call
icebp
je
nop
adc
out
mov
movsb
fs
outsl
inc
jbe
adc
ja
pushl
test
and
dec
shll
mov
ret
cmp
xchg
xchg
imul
cli
sbb
repz
roll
ret
push
jns
inc
lea
lahf
insl
scas
or
jecxz
aas
ds
outsb
pop
sti
xor
addr16
pop
pusha
cmp
repz
es
mov
cmp
xchg
and
cwtl
movsb
rcrb
pushf
test
in
pop
mov
mov
push
lods
stc
icebp
out
call
movsb
xchg
mov
mov
mov
js
faddl
in
dec
mov
sti
mov
dec
xchg
xor
mov
xchg
cmp
cmpb
scas
popf
mov
stos
stos
das
mov
cs
mov
or
aaa
out
xchg
jecxz
cmc
shll
sub
xchg
popf
clc
inc
sbb
mov
in
mov
jae
mov
sbb
data16
jle
xchg
adc
nop
and
mov
data16
xor
lahf
in
push
jecxz
jns
cmp
xchg
stc
dec
and
je
xlat
stos
mov
jp
scas
mov
cld
cmpsl
mov
push
popf
scas
sub
xor
xchg
cmp
xor
loope
insb
bound
fistl
cmp
fistps
movsl
mov
daa
inc
jbe
aam
test
inc
and
mov
inc
cwtl
jge
test
cld
inc
push
add
push
ror
pusha
mov
mov
setnp
movsl
jnp
jae
mov
and
inc
xchg
sub
push
cmp
mov
fnstcw
out
sub
sbb
inc
mov
xor
sbb
insb
pop
or
jg
fisubs
fsubr
dec
xchg
xchg
sub
out
setge
cmpsl
andb
cs
cltd
pop
cmp
or
add
jle
fstpl
loop
das
fdivs
inc
push
add
xor
and
mov
or
insl
add
mov
lods
adc
xchg
leave
xor
into
repz
add
stc
stos
sbb
mov
or
and
out
out
add
stos
jo
mov
ret
mov
lret
adc
stos
xchg
les
daa
xor
leave
inc
xor
les
lret
fisubrs
fsub
dec
xor
mov
test
inc
mov
mov
aaa
mov
jns
push
xchg
cmp
push
loop
rcrb
cli
in
icebp
cmc
jae
aad
movsb
insl
mov
or
data16
or
bound
push
add
roll
mov
or
xor
adc
lahf
fstps
dec
ret
sbb
jnp
cmpsb
adc
mov
cs
fcoms
mov
aad
test
pop
sahf
mov
sbb
in
testb
dec
icebp
push
jge
insl
inc
in
add
pop
mov
and
sub
and
push
mov
xlat
push
mov
mov
xchg
jecxz
addl
call
cld
cmp
movsb
push
pushf
or
mov
inc
ja
in
loope
std
pop
hlt
xchg
mov
es
pop
gs
sub
mov
or
push
inc
ljmp
mov
int
mov
push
add
mov
xchg
cwtl
lock
push
mov
incl
and
in
dec
rorl
or
mov
out
fwait
sbb
xlat
insl
cwtl
adc
jo
inc
add
mov
pop
cmp
in
adc
or
jns
popf
filds
pop
or
arpl
push
and
hlt
jecxz
inc
cmp
and
fs
lds
cltd
adc
adc
lcall
in
fisttpl
aad
loope
mov
push
pop
rorb
pop
lds
add
add
add
sahf
add
incl
add
add
stc
into
movsl
enter
add
sahf
pop
dec
mov
dec
pop
inc
xor
mov
jmp
mov
lds
jns
mov
sbb
imul
enter
add
insb
outsb
cwtl
inc
dec
jecxz
fwait
inc
das
pop
push
xchg
fisubs
icebp
in
aaa
lea
cmpsb
jns
dec
pop
into
dec
test
aas
loope
repnz
adc
adc
add
pop
add
add
sahf
add
add
add
leave
mov
pop
pop
mov
loop
and
pop
adc
sbb
stos
popa
int3
xchg
stos
pushf
mov
push
mov
mov
add
pop
and
pop
cli
and
das
inc
sub
jo
rcrl
xor
cmp
pop
addr16
call
arpl
lahf
addb
add
sahf
add
incl
add
add
mov
ror
ljmp
mov
imul
lcall
out
fnstcw
mov
addr16
xor
cmp
addr16
or
cltd
cmpsl
pop
xor
shl
xchg
dec
dec
sub
popa
add
add
sahf
add
decl
xchg
sub
jle
lods
inc
in
test
lock
adc
push
aam
idivb
inc
xchg
cmp
cli
or
movsb
push
imul
xchg
sub
and
fdiv
cmp
inc
pop
mov
popf
xchg
imul
mov
bnd
xlat
int
cmp
inc
adc
inc
ljmp
sub
cwtl
std
decb
sbb
xchg
jo
mov
jg
hlt
pop
mov
mov
imul
mov
scas
pop
push
ds
ss
dec
hlt
shl
xor
push
push
fcoml
mov
movsb
stos
and
inc
adc
jmp
push
subb
adc
fistpll
push
shrl
out
shlb
iret
out
cmp
inc
mov
inc
adc
gs
xchg
icebp
cmp
in
ret
orb
xchg
inc
insl
push
dec
test
fcomi
xchg
rol
cmp
or
mov
cmpsb
xlat
shl
add
test
xchg
cmpsl
or
adc
notl
or
jp
mov
mov
push
xlat
popa
mov
jmp
outsl
sarb
mov
lods
add
outsb
adc
popf
adc
in
adc
dec
jbe
adc
mov
add
imul
incl
add
fmull
in
push
js
popa
pop
jne
incb
xchg
fistpl
or
outsb
xchg
outsb
cmpsb
mov
xor
cmpsl
out
mov
cmpsb
jp
mov
cs
dec
xchg
pop
andl
push
jne
adc
cld
xor
cwtl
adc
push
stc
lods
mov
int3
push
lret
push
into
lcall
dec
add
pop
repnz
push
in
test
pop
mov
loop
gs
push
pop
inc
addr16
stos
add
das
dec
mov
jmp
pop
sbb
out
call
cli
out
lret
xor
mov
cld
stc
fucomip
and
call
in
fiadds
int3
fiaddl
sub
jae
dec
fadds
pop
leave
lcall
sbb
bound
inc
addr16
out
mov
inc
cmpsl
aad
jno
bound
fiaddl
xchg
mov
out
xor
pop
addr16
pshufw
push
pop
xor
mov
mov
jecxz
mov
push
outsb
cmpsl
imul
rorl
movsl
jnp
subl
arpl
jmp
jno
outsl
scas
xor
mov
cmc
jb
pop
xchg
jbe
sub
data16
test
negb
push
lret
xor
xor
cmp
mov
addr16
sub
fsubrs
mov
jb
adcl
fwait
enter
lret
inc
mov
sub
or
add
dec
jg
mov
push
sub
repz
sub
or
daa
out
jl
lods
xor
mov
push
cmp
push
fdivrl
push
ret
bound
or
pop
mov
dec
add
loope
push
mov
jns
inc
push
xchg
mov
push
add
stc
lret
or
test
sarb
add
add
cmp
addr16
jge
scas
xchg
in
das
jne
jmp
mov
mov
outsl
popf
loope
fstps
pop
imul
fisubs
mov
push
divl
jno
cmp
lods
je
popa
push
add
sti
dec
jne
adc
fidivl
popf
and
xor
iret
jo
inc
xorl
mov
adc
shll
inc
pop
lret
jecxz
fucomip
or
test
jb
cmp
add
lret
mov
jmp
push
and
or
xor
ja
or
pop
decb
xchg
shlb
sub
mov
cmpsb
lret
clc
fidivrs
sbb
sbb
mov
adc
cmp
mov
out
sti
cli
cmp
fildl
and
int
add
add
sahf
add
incl
stos
imul
inc
jno
out
lock
sub
gs
push
arpl
adc
add
sub
fucom
loopne
addr16
stc
dec
inc
inc
imul
xchg
pop
movsl
jb
into
lods
sbb
and
xlat
insb
in
pavgb
sar
dec
mov
lods
icebp
inc
dec
insb
mov
dec
inc
dec
jb
jp
add
mov
out
insl
cld
pop
push
into
ret
fcmovu
adc
xchg
in
scas
popf
ljmp
icebp
xchg
rcpps
loopne
fs
ljmp
pop
mov
push
mov
pop
lods
inc
fsubrl
aas
loopne
dec
addr16
jmp
sub
push
cmp
xchg
flds
jecxz
dec
aas
lods
mov
dec
leave
ljmp
int3
inc
adc
pop
jbe
enter
fimuls
xorl
fldenv
cli
test
sub
scas
in
adc
sbb
mov
loopne
loopne
movsb
mov
test
jns
popf
sbb
adc
mov
xor
or
out
sbb
fadd
mov
imul
stos
sub
test
js
adc
jge
xchg
cmp
les
mov
mov
daa
outsb
out
dec
sbb
mov
or
nop
movsl
dec
jnp
push
mov
jmp
cld
push
and
xchg
mov
insb
mov
pusha
inc
rcll
ret
push
xor
lods
punpckldq
mov
das
sbb
push
inc
add
add
add
sahf
add
incl
add
add
imul
adc
push
pop
in
divb
pop
in
xchg
nop
dec
xchg
pop
fwait
xchg
jnp
xchg
cld
push
fstp
dec
xor
cs
xor
xor
jle
je
push
sbb
jb
lahf
rclb
xlat
sub
cli
jae
jno
insb
push
ds
push
cmpsb
pop
mov
arpl
lock
aaa
xlat
sbb
rcl
adc
cmc
push
repnz
rorl
jnp
xor
mov
ds
inc
mov
pop
out
jo
icebp
mov
subl
mov
outsl
pop
pop
mov
xchg
loopne
or
inc
xchg
loopne
or
inc
xchg
loopne
or
inc
xchg
loopne
or
inc
xchg
loopne
or
inc
xchg
loopne
or
inc
xchg
loopne
or
movb
add
add
