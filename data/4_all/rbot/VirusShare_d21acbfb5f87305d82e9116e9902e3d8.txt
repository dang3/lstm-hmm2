cmp
jo
pop
xor
jno
push
fiaddl
addr16
add
outsb
fdivr
and
push
addr16
push
ret
adc
les
dec
jae
sub
inc
leave
xchg
pop
nop
out
add
clc
push
es
push
add
sub
xor
dec
mov
cltd
xchg
inc
cmpsl
ret
test
popa
add
xlat
pop
adc
enter
jg
jl
xorb
add
imul
sahf
pop
mov
xor
adc
jge
popa
ret
call
stc
out
std
mov
dec
jnp
negl
sub
sar
rolb
iret
cmpsl
dec
popf
cmp
xor
imulb
dec
stc
arpl
mov
jns
push
fildll
jecxz
mov
test
and
addl
pop
xchg
lods
pop
ret
ficoml
add
popf
addps
or
test
popf
xchg
fsubrl
jo
inc
pusha
leave
mov
int3
pushf
push
xchg
jl
jae
je
icebp
sbb
adc
arpl
inc
cwtl
or
mov
dec
es
or
fwait
jge
pop
push
push
mov
pop
inc
and
sbb
add
sahf
pop
push
add
add
dec
adc
push
mov
movsb
mov
xorb
fwait
inc
and
jne
sti
stos
pop
fwait
mov
adc
pop
xor
fidivrl
es
push
and
lea
dec
cld
rolb
in
ret
insl
dec
pop
iret
test
jge
push
lods
aas
iret
out
leave
inc
xorb
dec
mov
fs
mov
lods
call
pop
push
and
mov
push
push
mov
pop
mov
sahf
dec
pop
jecxz
inc
add
adc
lcall
xor
ret
rclb
cli
movsl
mov
shl
add
mov
cmp
mov
enter
add
subl
jb
dec
orb
pop
adc
sbb
jo
jbe
int
mov
mov
adc
jo
xor
mov
insl
cmc
jmp
cmpsb
jle
enter
mov
dec
adc
std
push
int
inc
cwtl
mov
inc
adc
scas
fiaddl
or
daa
adc
pop
dec
or
mov
jle
mov
pop
int3
jle
and
mov
repnz
into
mov
hlt
add
xor
push
sub
add
jmp
cld
or
inc
imul
jbe
and
dec
fsin
insb
jge
shl
push
divb
popa
scas
lods
mov
push
jmp
xlat
out
pop
mov
es
test
cld
sub
sbb
sub
sub
vsubss
dec
out
pop
sub
fisubrs
jp
and
in
leave
insb
and
push
adc
push
shlb
or
je
sub
sarb
jmp
int
dec
aam
fldcw
sbb
jno
jle
xchg
ficomps
jg
pop
sahf
ljmp
loop
fwait
lea
iret
fnstsw
jnp
jmp
push
push
dec
nop
dec
inc
cmc
clc
cmp
mov
mov
dec
inc
aas
repz
push
mov
inc
xchg
adc
pop
mov
jecxz
ret
leave
movl
mov
mov
fiaddl
mov
cmpsb
int3
mov
pushf
jbe
add
stos
mov
aaa
mov
dec
pop
mov
xor
jne
sahf
jge
aam
inc
lods
pop
pop
xchg
in
cmp
js
add
bound
xor
scas
ja
add
stos
pop
add
add
pop
mul
push
xchg
shlb
push
add
mov
test
cmp
jle
add
out
or
jl
rcr
cmp
addb
jmp
mov
adc
movsb
enter
rclb
dec
jp
scas
add
stos
loopne
sub
sbb
clc
clc
xor
bound
ds
cmp
xor
xchg
test
sub
test
mov
add
mov
imul
fsubs
cwtl
ret
sti
pop
mov
cmc
add
sub
sbb
dec
jmp
add
or
mov
sub
js
xchg
gs
push
lods
xchg
sub
adc
push
mov
fildll
fs
test
repnz
icebp
add
push
sbb
ret
or
or
test
pop
mov
movsl
or
sbb
fistl
xchg
push
jecxz
mov
fldenv
pop
leave
sbb
js
ds
inc
fwait
leave
cmc
cmp
and
lahf
or
es
mov
inc
nop
sbb
sarb
cmp
xchg
mov
lahf
sub
xchg
imul
popf
jmp
cmp
loopne
fdivrl
jne
shl
stos
int3
add
push
and
mov
add
loopne
fildl
lret
sbb
inc
sub
outsb
int3
sbb
lods
add
jb
mov
cmp
ljmp
stc
jge
rol
pop
repz
xlat
lds
pop
stos
dec
aaa
loopne
pushf
jnp
mov
pushf
mov
lcall
jno
mov
push
push
cld
sub
aaa
mov
sub
sar
pusha
cmc
movsl
dec
sbb
xchg
xor
or
pop
sbb
imul
mov
fiaddl
movsb
ss
mov
xchg
pop
or
mov
add
jmp
imul
inc
sarb
loope
jecxz
dec
xor
out
push
dec
sarb
js
dec
jmp
or
ljmp
mov
pop
sub
popf
xor
in
cmovs
mov
xchg
pop
out
mov
decl
add
sbb
in
sub
and
dec
sbb
in
sbb
xor
sub
test
ss
and
xchg
movsl
dec
sbb
aas
push
cmc
sbb
mov
pop
adc
rorl
test
or
mov
jl
cltd
inc
or
lods
jno
mov
int
fists
mov
jne
pop
sub
cmp
sub
cmc
sbb
mov
cld
sub
idivl
loopne
mov
mov
add
inc
sbb
sbb
outsb
jno
cs
adc
and
mov
sbb
sub
xchg
adc
cmp
pop
mov
adc
xchg
lahf
and
pushf
jne
pop
jns
or
test
inc
insb
orl
or
call
mov
and
sbb
push
mov
xchg
stos
insl
sub
adc
bound
dec
sbbb
push
mov
ss
push
out
mov
pop
in
cmp
fwait
lahf
stos
and
mov
lock
cmp
outsb
cmp
or
loop
add
testb
popa
ret
sbb
add
cmp
stos
mov
jnp
inc
in
xlat
xor
in
add
lods
mov
mov
mov
mov
xchg
push
fcoms
sbb
cmp
xchg
add
cli
inc
sbb
scas
test
lcall
inc
or
lds
stos
mov
jecxz
popf
sahf
xchg
fwait
inc
rclb
mov
push
inc
xchg
cwtl
add
je
push
mov
mov
fwait
jmp
data16
or
mov
and
int
sub
cmpsl
sti
dec
popa
jge
outsl
or
xchg
add
fnstenv
stos
mov
arpl
int3
pushf
test
imul
mov
cmpl
addr16
repz
mov
imul
in
mov
adc
into
sti
mov
imul
inc
sbb
test
lcall
data16
iret
mov
dec
sub
test
sahf
sbb
xor
bnd
loope
add
mov
sar
xor
sti
fcmovne
into
je
mov
sub
adc
or
xchg
aas
stc
dec
cmp
jmp
xchg
fimull
or
fwait
lods
jge
shrl
inc
xchg
inc
lds
xchg
fwait
inc
sub
pushl
into
mov
andl
sbb
dec
jno
xor
fsub
jmp
cmp
jl
sub
movsl
fidivl
test
cmp
test
cmpsb
jnp
clc
jno
jecxz
pop
push
add
mov
push
or
lea
lret
sbb
add
insl
mov
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
cmp
cld
repnz
rcrb
ret
mov
adc
lret
cmp
cltd
nop
loop
test
pushf
dec
and
ror
sbb
popf
pop
push
fwait
enter
lret
pop
insl
mov
jmp
or
icebp
add
or
pusha
jmp
dec
push
stos
adc
pop
sub
jp
add
sbb
scas
dec
xchg
popf
adc
fimuls
cmp
push
inc
push
dec
sbb
fimuls
sti
out
push
fmul
aam
leave
and
or
dec
sub
inc
mov
xor
fsub
sub
imul
xchg
mov
push
jns
enter
ljmp
sbb
mov
mov
cwtl
push
sbbb
pushf
test
hlt
out
mov
cmpl
sbb
or
add
and
mov
test
fwait
lahf
aas
pop
adcl
inc
sbb
mov
add
sub
mov
sbb
jmp
iret
xor
adc
add
push
dec
sbb
lahf
sub
fildll
stc
mov
push
lahf
fisttpll
test
or
push
ret
dec
lcall
ja
lds
ljmp
cmp
lods
pop
xchg
push
xchg
stos
std
push
inc
xchg
loop
pop
scas
aaa
mov
cli
jnp
inc
mov
or
int
xchg
adc
mov
or
lret
pop
sub
test
or
push
fisubs
pop
jmp
ret
xchg
es
fisubs
cmp
fnsave
in
sub
je
or
and
jge
dec
add
fwait
dec
dec
mov
insl
lea
movsb
out
and
push
xchg
mov
xlat
xorb
divb
xor
jno
mov
add
ss
xor
inc
sarb
cmpsl
mov
cli
pop
and
iret
inc
sbb
jbe
mov
pop
push
lcall
test
xchg
sbb
or
cmpsb
shll
mov
xorb
roll
lock
push
sahf
push
fistl
fimull
jae
cs
lods
jge
shrl
cmpsl
pop
push
fucomi
cmc
mov
enter
inc
mov
or
sbb
add
xchg
sub
xor
inc
shrb
push
pop
cmpsb
call
push
cmp
outsl
push
ret
jae
sti
and
into
call
pop
mov
adc
enter
mov
add
insl
sub
ret
fwait
pop
loop
cmp
mov
shlb
lds
roll
in
rol
dec
add
add
cmp
stos
cltd
sub
mov
movsl
dec
cmpb
lret
hlt
dec
pushf
inc
stos
pushf
adc
mov
ja
cmp
aaa
stos
xchg
mov
out
pop
popf
scas
mov
jae
cli
jo
mov
loop
pusha
mov
adc
mov
lods
jne
inc
pop
lret
stos
xchg
fimull
cli
outsl
sub
lahf
loopne
pop
pushf
ret
sbb
inc
sbb
scas
popa
jae
loop
xor
or
inc
xchg
cwtl
add
sbb
in
fsubs
adc
aam
out
loope
fwait
xor
push
sub
and
and
mov
cmpsb
jnp
clc
jno
jecxz
jns
push
orb
out
add
xchg
fidivs
cltd
fimuls
jb
outsl
mov
shrb
inc
scas
daa
sub
xlat
xchg
stc
pop
push
iret
sbb
mov
cltd
xor
rcrl
mov
cli
dec
and
iret
aas
xchg
out
xor
mov
pop
stos
push
insb
aad
sbb
inc
lahf
push
std
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
aam
jge
or
xchg
or
xchg
lcall
lret
pusha
mov
pop
jno
push
jp
cwtl
fstl
pop
rclb
cmpsl
lahf
scas
std
fabs
cmp
xor
insl
fcmovnbe
loope
inc
or
push
inc
shlb
add
jge
jb
pop
mov
sbb
test
in
fwait
jmp
ret
xchg
and
cmpsb
sahf
mov
cmp
fnsave
insb
sub
xor
xor
xor
fwait
dec
dec
mov
pop
lea
movsb
out
and
push
xchg
mov
add
mull
pop
divb
je
iret
ret
clc
shll
mov
hlt
mov
adc
mov
mov
sbb
leave
pop
test
movsl
ret
insb
test
cltd
cmp
pop
and
clc
mov
xchg
and
jns
popf
inc
sub
sbb
in
repz
movsl
sbb
rorl
in
dec
dec
xchg
add
pop
imul
pop
ja
inc
jb
imul
mov
int3
loopne
cmpsl
push
fucomi
cmc
mov
enter
adcl
mov
adcl
or
or
lret
cltd
aaa
mov
test
push
fisubs
popa
jmp
ret
push
jge
mov
jmp
std
mov
sti
and
and
sbb
fwait
stos
ljmp
xor
mov
pop
push
mov
les
mov
arpl
inc
jmp
divl
sub
add
std
sbb
adc
mov
fs
out
xchg
jecxz
sbb
incl
push
test
cwtl
xor
mov
das
lahf
popf
stos
mov
jae
cli
jo
mov
or
mov
push
sbb
movsb
mov
or
jecxz
mov
xchg
sbb
enter
cmpsb
enter
pusha
jle
scas
pop
icebp
leave
outsb
mov
fists
nop
andl
xchg
rclb
outsl
dec
push
xchg
xchg
cwtl
sarl
sub
and
push
mov
xchg
cmpsb
mov
xchg
pop
int
pushf
mov
popa
jge
outsl
or
xchg
add
cltd
push
adcb
pushf
test
out
out
mov
cmpl
push
jb
popa
mov
shrb
and
imul
inc
pusha
pop
repz
cmp
mov
hlt
leave
add
sbb
test
lcall
push
lahf
push
hlt
mov
nop
xlat
dec
sub
ret
sbb
fildll
stc
mov
insl
sti
sub
lahf
jae
shll
insb
les
sbb
test
mov
lock
dec
sahf
xchg
fistl
mov
cltd
shrl
test
scas
mov
lahf
fists
fistpl
nop
xchg
sbb
or
xchg
stos
mov
lea
jns
adc
add
or
mov
insl
xchg
adc
and
test
fld1
jne
popf
out
push
ret
lret
jge
out
inc
aas
sub
sbb
test
dec
dec
enter
mov
add
insl
sub
ret
lsl
sbb
test
cmp
mov
lock
xchg
xor
rcrl
pmulhw
mov
rcrl
inc
rcrb
mov
cli
sub
aas
adc
adc
test
sbb
push
insb
aad
sbb
dec
pop
xchg
stos
ljmp
or
lods
mov
mov
jno
inc
push
loop
push
dec
jl
adc
or
xor
mov
cmpsb
xor
jb
fcoml
jecxz
popf
adc
in
sbb
bnd
lods
scas
fbstp
inc
rclb
adc
cmp
inc
mov
inc
jno
int3
scas
popa
out
ror
notb
mov
in
subl
jp
enter
adc
fdivs
mov
test
loope
adc
inc
lret
mov
shr
and
dec
mov
push
add
iret
mov
push
test
fiaddl
les
fstl
dec
mov
daa
cld
into
jns
sbb
mov
sbb
mov
add
cmp
jbe
mov
leave
sarb
imul
mov
sbb
sub
push
lahf
push
sub
adc
jns
sti
jnp
pushl
rorl
sbb
shrb
mov
lret
stos
xchg
fimull
sbb
pop
sbbb
xchg
sbb
add
cltd
lods
jle
test
iret
popa
or
push
test
loope
inc
or
inc
aam
gs
jae
add
jge
jb
pop
inc
stc
mov
cmp
andb
xor
push
insl
fstpt
mov
enter
cltd
mov
addb
jle
cmpsl
dec
dec
mov
inc
data16
mov
sub
xchg
repz
lds
cmp
and
mov
test
lock
daa
ljmp
mov
movl
add
adcb
and
hlt
mov
mov
cmpsl
clc
out
and
ja
xchg
pop
lret
xchg
cmp
scas
mov
sti
fisubl
fbstp
xchg
in
test
stc
mov
pop
sub
les
push
pop
push
stos
loopne
mov
pop
stos
jne
test
pop
mov
enter
js
mov
fmull
pop
scas
dec
push
mov
mov
lret
repz
nop
xchg
sbb
ljmp
mov
pop
repnz
and
mov
xchg
adc
fs
add
xor
and
pop
mov
cmpsb
fstps
cmpsl
data16
xor
out
and
andl
and
cwtl
outsl
fisubrs
sbb
xlat
adc
int
mov
repz
mov
imul
imul
outsb
es
jmp
cld
jmp
out
cltd
pushf
push
sub
enter
cwtl
or
mov
fwait
mov
cwtl
lret
inc
sub
mov
test
mov
sbb
int
dec
cmp
inc
push
rcr
jae
cmpsl
or
xor
xor
push
sbb
sbb
or
sub
lret
jno
mov
fidivs
test
xlat
or
scas
aaa
mov
cli
jnp
inc
mov
cld
cmp
adc
mov
ret
jns
dec
nop
lock
mov
cltd
xor
enter
sbb
inc
mov
cltd
inc
push
lahf
outsl
push
ret
sbb
sbb
mov
cmpb
sbb
lock
insl
inc
ds
xchg
fwait
or
aam
in
jmp
loop
mov
int
fld
repz
dec
call
loop
xchg
cwtl
aas
in
mov
jnp
mov
adc
sub
mov
xchg
sub
adc
inc
in
xlat
mov
inc
and
jmp
sbb
std
mov
subb
out
addb
test
pop
sahf
adc
adc
or
and
shrl
cmpsl
pop
push
fucomi
cmc
mov
enter
inc
mov
or
sbb
inc
rolb
mov
dec
and
inc
add
push
mov
sub
cmpsb
push
fucomi
hlt
std
mov
sti
and
testb
fimull
stos
in
sub
adc
bound
sbbl
lock
add
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
mulb
std
jmp
mov
fs
icebp
ss
in
leave
cltd
adc
inc
ret
in
sub
xchg
cmpb
iret
push
lret
into
loop
std
mov
sub
adc
movsb
sub
cwtl
jo
xchg
fimull
cli
outsl
sub
sbb
testb
lds
and
sahf
xchg
fwait
js
adc
cli
jnp
inc
mov
adc
mov
add
jge
jb
pop
inc
stc
repnz
movsl
ret
dec
mov
inc
fstl
jmp
inc
ret
sti
xor
cmpsl
in
popa
inc
pop
in
adc
jecxz
enter
or
sub
mov
cmp
adc
int
ja
ret
fwait
pop
loop
in
pusha
mov
shlb
mov
nop
cmp
rol
dec
bswap
add
cmc
lods
inc
sub
movsl
sbbb
aas
shl
ss
js
and
and
lds
pop
pop
imul
popf
stc
mov
pop
das
xchg
stc
cli
in
test
nop
sbb
cltd
sub
push
cltd
adc
mov
inc
push
lret
stos
xchg
fimull
cli
outsl
sub
into
lods
fmulp
fldcw
xor
sti
push
dec
rcll
data16
scas
ret
mov
xchg
fdiv
sbb
or
inc
add
sbb
cwtl
outsb
xlat
negb
mov
xor
sbb
jmp
movsb
jp
mov
inc
gs
inc
inc
mov
mov
loopne
bound
cmpb
es
imul
and
jle
mov
das
cmp
mov
add
add
mov
popa
push
mov
aam
sti
jmp
dec
out
jmp
jnp
mov
out
jnp
mov
adc
ss
mov
and
and
mov
inc
stos
adcb
mov
or
stos
sahf
in
inc
mov
test
into
xchg
stc
cli
in
test
or
mov
sub
add
xchg
lcall
invd
std
lock
movb
loope
fwait
loope
inc
xor
or
jnp
jg
scas
loope
pusha
loopne
and
mov
and
xor
add
sub
mov
push
xchg
adc
repz
rcrb
movsb
inc
add
ljmp
fsubl
xor
push
and
adc
andl
sub
sub
mov
push
dec
mov
sbb
dec
inc
ds
lods
push
cmc
mov
call
pop
lret
insl
mov
loopne
jmp
jl
scas
in
clc
outsl
cltd
pushf
lcall
sbb
inc
pop
adc
mov
jl
inc
dec
cltd
nop
mov
xor
mov
movsb
fisubl
stos
inc
push
sbb
fbld
jns
sbb
in
test
nop
sbb
idivb
pop
mov
add
lret
stos
xchg
fimull
cli
outsl
sub
into
lods
fmulp
rcr
or
push
dec
movsl
push
arpl
scas
ret
mov
xchg
fdiv
sbb
popa
or
mov
addl
or
cmp
es
cwtl
inc
stos
sbb
fisubl
mov
mov
fwait
in
cmovae
cmc
mov
ret
cmp
je
cltd
push
bound
jb
mov
test
sub
cmp
ret
vpmacsdd
icebp
fsts
stc
ss
lcall
setae
jecxz
push
mov
std
aas
add
mov
cld
sbbl
out
add
testb
mov
xor
mov
movsb
fidivrl
insl
and
jne
std
inc
fs
mov
mov
je
mov
mov
or
lock
sbb
lcall
adc
loopne
cmp
or
dec
mov
fmull
jnp
dec
push
mov
in
mov
leave
loop
in
nop
xchg
sbb
or
lcall
lea
mov
pop
jo
or
or
addr16
lock
lahf
outsl
aas
add
pop
cmpsl
sti
mov
ret
jnp
int3
inc
cmp
push
inc
ds
xchg
fwait
or
cmp
das
in
cmc
xor
mov
js
inc
orb
ret
iret
sbbl
repz
ret
repz
pop
and
test
lock
jae
test
jmp
push
pop
iret
sbb
iret
notw
sbb
sub
push
lahf
push
sub
xchg
das
cli
mov
pop
mov
dec
arpl
or
movsl
xchg
dec
bound
xchg
add
and
mov
lds
cmp
sbb
int
fwait
popf
adc
sbb
bnd
lods
scas
fbstp
jecxz
outsl
push
inc
sbb
sub
adc
dec
leave
push
xchg
adc
sbb
lds
mov
shlb
movsb
inc
add
ljmp
or
jmp
and
mov
mov
andl
sub
mov
fsubr
push
and
rcrb
mov
cmc
mov
xor
mov
imul
jecxz
or
push
add
mov
faddl
lcall
xchg
xor
dec
out
and
sbb
add
cmp
stos
mov
jnp
inc
in
xlat
xor
repnz
stos
jecxz
sbb
mov
sar
xor
lahf
addb
or
mov
adc
lcall
adc
loopne
fistl
cltd
xchg
sub
lods
fidivs
test
ficoms
stos
popf
scas
jg
stc
icebp
xor
push
mov
add
inc
mov
and
inc
xchg
dec
and
sbb
jo
adc
ret
cmp
lahf
xlat
mov
mov
pop
mov
out
adc
adc
pop
adc
ret
inc
mov
ret
pusha
lret
mov
push
jne
pop
push
jl
jle
sahf
shll
jp
aas
in
mov
jnp
mov
adc
sub
aam
cmp
push
rcrb
mov
movsb
fisubl
ja
inc
push
mov
cmp
fbld
jns
sbb
in
test
nop
sbb
cmp
mov
mov
add
lret
stos
xchg
fimull
cli
outsl
sub
pop
loopne
pop
cld
ret
add
insb
jnp
scas
popa
mov
repz
loop
inc
mov
pop
jb
cmovbe
mov
add
jge
jb
pop
cmp
push
movsl
ret
dec
mov
dec
in
push
gs
fwait
mov
mov
fldenv
pop
sub
je
or
and
mov
dec
dec
mov
in
cmpb
mov
inc
sub
xor
mov
arpl
mov
in
ret
loopne
mov
push
cmc
lret
in
fldl
jns
mov
add
mov
push
dec
sbb
mov
jl
xor
out
and
ja
xchg
pop
mov
mov
xchg
jmp
fidivs
push
repz
ljmp
inc
cmp
adc
inc
cld
adc
lcall
xchg
or
xor
lods
pop
jno
push
pusha
xchg
adc
adc
lahf
scas
std
fabs
cmp
xor
ja
or
sbb
or
mov
add
jge
xchg
sub
mov
add
mov
mov
mov
cltd
call
clc
mov
jge
sub
ror
cwtl
dec
push
or
fsubl
outsb
dec
mov
lcall
mov
lods
sti
and
pop
lock
in
rol
dec
shrd
in
or
add
ret
sbb
dec
inc
sbb
push
jmp
lds
out
lds
pop
ret
xchg
sub
scas
mov
sti
lret
fisttps
lret
xor
mov
cmp
add
inc
dec
retw
pop
jno
inc
scas
ja
add
fdivl
lds
ljmp
sbb
loope
dec
stc
aad
mov
jmp
lahf
adc
pusha
out
or
inc
rorb
rorb
mov
mov
cmp
popa
inc
cwtl
inc
stos
sbb
fisubl
mov
mov
fwait
in
cmovae
fisubs
xor
push
and
andl
sub
sub
xor
push
dec
mov
lods
int
mov
repz
mov
imul
pop
call
cs
lcall
iret
jne
jp
add
push
mov
pop
mov
xor
dec
xchg
jo
loop
dec
sbbb
jne
clc
pop
push
repnz
std
xlat
cmp
inc
and
inc
push
xor
mov
mov
mov
inc
pop
xchg
shl
xor
or
fisubl
dec
outsl
les
pop
sahf
mov
aad
mov
add
inc
pushf
rclb
and
aam
cld
loop
xor
dec
loope
out
js
mov
adc
rolb
divb
cwtl
adc
or
or
mov
insl
xchg
imul
cltd
lret
cltd
inc
jl
sbb
call
mov
inc
inc
mov
sbb
sbb
test
cltd
sahf
inc
cmp
inc
inc
and
xor
dec
enter
sbb
xor
mov
push
adc
mov
ret
jns
mov
mulb
mov
xlat
jle
divb
cwtl
lret
inc
sub
rcrb
sbb
test
or
leave
push
pop
cli
mov
bound
dec
lret
sbb
movsb
fldt
jmp
xchg
jo
je
shrb
sbb
lods
xchg
imul
push
sbbb
sbb
add
mov
leave
shll
icebp
leave
push
nop
sbb
repnz
and
jo
inc
xchg
mov
sub
xchg
xchg
cwtl
rcl
or
and
xor
clc
xor
mov
pop
pop
inc
or
xchg
xchg
cltd
xabort
xor
sti
sti
and
movsb
movsl
mov
pop
mov
adc
enter
mov
add
insl
sub
ret
pop
add
ret
mov
pop
test
cmp
mov
xchg
jns
push
iret
sbb
mov
cltd
xor
std
cltd
inc
aas
adc
mov
fs
out
sbb
and
fmuls
dec
iret
or
mov
test
leave
test
cs
lahf
popf
stos
mov
jae
ljmp
push
out
sahf
fsts
mov
add
lret
stos
xchg
fimull
cli
outsl
sub
lahf
loopne
or
lds
ret
mov
jecxz
fwait
sahf
xchg
fwait
inc
adc
push
imul
cwtl
add
mov
push
dec
mov
and
dec
inc
dec
and
sbb
mov
adc
xchg
jae
loopne
add
ret
mov
jmp
lret
gs
movsb
dec
mov
mov
sbb
or
jne
mov
dec
cmp
fimuls
lret
cltd
fimuls
jb
cli
mov
shrb
and
imul
inc
pusha
xor
cmp
icebp
repnz
pushf
sbb
ret
mov
adc
lret
cmp
cmp
insl
cmpsl
cwtl
loop
and
ja
xchg
pop
ret
xchg
cmp
scas
mov
sti
fisubl
fbstp
xchg
in
mov
test
xchg
mov
cmp
rcll
or
outsb
les
add
sbb
leave
shlb
mov
leave
push
nop
add
scas
inc
xchg
ret
sub
pop
xchg
add
cwtl
sarl
or
ret
stc
mov
cmp
or
jb
xor
push
insl
fstpt
mov
enter
sub
or
ljmp
test
mov
in
xlat
adc
int
ja
xor
mov
call
push
sahf
shrl
mov
std
jb
call
out
mov
adc
ss
xchg
gs
das
loop
movsl
mov
mov
xor
and
inc
loopne
inc
mov
test
pop
inc
sbb
jo
mov
or
mov
push
sbb
lds
add
rcl
cwtl
pushf
xchg
sbb
lock
scas
dec
push
xchg
loop
iret
or
inc
fwait
imul
js
or
mov
fwait
push
dec
mov
and
inc
dec
dec
and
sbb
insb
jns
push
insl
fwait
adc
fdivs
mov
test
cltd
enter
rcll
dec
or
movsl
movsl
inc
fimuls
addl
mov
sub
push
inc
pop
push
mov
repz
push
pop
mov
ret
loopne
mov
dec
jg
sbb
mov
cmp
mov
add
cmp
out
or
cltd
mov
cwtl
pop
fsubrl
pop
int
sbb
rcrb
adc
mov
mov
inc
lahf
push
lock
and
pop
cld
mov
frstor
cmp
xchg
orl
xchg
dec
bound
xchg
adc
add
roll
xchg
out
leave
pop
mov
mov
mov
xchg
test
popf
adc
xor
jg
leave
push
nop
add
ret
sub
pop
xchg
add
cwtl
ror
mov
inc
stc
mov
cmp
lea
mov
pop
mov
pop
mov
gs
fcmovu
sti
sti
and
inc
mov
pop
mov
xchg
inc
loope
mov
sub
ffree
mov
add
mov
movsl
sti
and
int
pop
mov
jecxz
push
xchg
mov
jbe
add
mov
xor
imul
scas
inc
pop
dec
and
mov
test
push
dec
sbb
lahf
sub
mov
mov
insl
sti
mov
pushl
shll
stos
les
sbb
test
lret
add
or
fnsave
testb
ret
cmp
sbb
scas
popa
fildl
repz
test
and
or
cmovbe
mov
add
jge
jb
pop
out
data16
mov
test
in
fwait
jmp
ret
push
insl
fstpt
mov
enter
js
mov
sbbb
and
mov
xlat
adc
int
ja
xor
mov
call
push
sahf
shrl
mov
push
popf
mov
cmp
jp
add
add
mov
inc
movsb
or
add
ret
and
leave
push
jmp
lds
push
cld
mov
mov
sbb
std
fistpll
arpl
lds
outsl
and
sub
test
adc
rorl
xchg
out
sbb
add
or
pop
pusha
ja
lods
loopne
and
jmp
popf
movsl
dec
popa
mov
js
lods
das
fbstp
ret
add
add
sbb
sbb
mov
dec
mov
xchg
and
and
push
mov
xchg
cmpsb
mov
push
pop
leave
xchg
cmp
cmpsl
sti
fsubs
lahf
pop
movsb
in
out
cmp
mov
in
adc
dec
or
sub
mov
fsubr
push
and
push
mov
loope
push
mov
pop
cmp
mov
clc
sti
pop
es
rcr
repz
mov
jb
mov
add
sbb
insl
movsl
xlat
cmpb
mov
inc
stos
cwtl
adc
mov
aaa
mov
xor
push
mov
sbb
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
cmp
pop
mov
orl
movsb
stos
fnsave
fwait
loopne
pop
cld
ret
cmp
inc
sbb
scas
jg
leave
cwtl
inc
hlt
add
ss
rclb
insl
ret
dec
mov
adc
sbb
push
xchg
and
and
push
mov
xchg
cmpsb
dec
aad
pop
leave
xchg
pushf
adc
fsubs
lahf
pop
test
repz
mov
inc
inc
mov
cld
dec
pop
xchg
xchg
jmp
cmpsb
inc
jbe
mov
mov
sub
insl
enter
lea
jns
outsb
dec
stos
aam
sti
jmp
inc
jg
repz
mov
ret
lcall
fstps
jl
mov
pushf
sub
cmp
movsl
mov
mov
dec
sbb
push
insl
fcom
mov
test
fimuls
dec
dec
dec
pop
lods
fldt
jmp
xchg
or
test
mov
xchg
lcall
xchg
or
sbb
pop
jno
push
insb
xchg
loope
inc
xor
add
push
mov
mov
adc
pop
jb
or
cmp
and
fsubs
or
mov
loop
repnz
std
inc
inc
xchg
adc
sub
call
push
ret
lret
jge
out
inc
sub
sbb
or
inc
inc
and
mov
xchg
cmp
xor
add
fimuls
test
cmp
mov
xchg
lcall
iret
adc
mov
cltd
addb
mov
mov
sbb
xchg
out
cmpsl
ret
sbb
pop
stos
mov
jnp
inc
in
xlat
dec
sbb
mov
xchg
popf
inc
mov
fidivl
push
repz
ljmp
inc
cmp
cli
inc
sbb
adc
or
cmp
les
cmp
or
jnp
cltd
fmull
fwait
scas
dec
push
xchg
inc
fwait
imul
js
or
mov
sub
loope
aam
aam
lock
mov
rcl
xor
adc
jp
mov
shlb
inc
add
ljmp
fsubl
xor
push
and
adc
addl
mov
mov
mov
push
inc
mov
ret
loop
mov
push
jne
pop
call
out
lcall
dec
xchg
jecxz
daa
fdivp
cmc
jmp
sbb
mov
inc
cmp
add
std
ja
push
xlat
sahf
or
mov
fwait
xor
cwtl
lret
inc
sub
pop
xor
pop
xor
jb
mov
inc
add
dec
add
pop
popf
in
nop
xchg
mov
xchg
xchg
in
push
jl
sbb
cmp
inc
sbb
or
stos
arpl
cmp
scas
xchg
movsl
xchg
mov
add
jmp
icebp
scas
pop
push
mov
scas
aaa
mov
cli
jnp
inc
mov
sbb
call
mov
loop
mov
nop
lock
mov
cltd
xor
scas
mov
cmpsb
hlt
pop
fidivl
into
xchg
cltd
test
cmpsb
jnp
clc
jno
jecxz
stc
push
sbbb
out
add
xchg
out
aad
sbb
mov
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
xchg
push
hlt
mov
pop
mov
or
sub
jg
bnd
icebp
mov
cmpl
mov
inc
mov
stc
sbb
xchg
test
cld
mov
lcall
dec
rcr
jae
or
mov
test
lret
or
and
fnsave
lahf
loopne
pop
pushf
ret
cmp
jo
into
scas
popa
dec
inc
clc
repz
loop
inc
mov
pop
jb
movzbl
in
adc
push
sti
adc
or
mov
fwait
xor
push
sub
and
gs
movswl
jmp
std
mov
sti
and
test
xchg
or
cltd
sahf
ret
call
imul
jb
mov
popa
push
mov
aam
sti
sub
jnp
mov
sbb
jbe
mov
xor
and
insl
movsl
clc
bound
adc
and
mov
test
adc
push
cmc
arpl
jns
mov
mov
mov
inc
pop
xchg
rcr
nop
pop
dec
push
pop
daa
xchg
stos
std
cld
pop
mov
std
xor
mov
inc
mov
loope
dec
xchg
aad
mov
jmp
lahf
adc
pusha
cmp
and
adc
inc
mov
fdivs
sub
xchg
fildll
xchg
and
notb
fisubl
xchg
imul
cwtl
adc
rcl
adc
cmpsb
inc
test
jp
inc
mov
cltd
push
sub
inc
aam
sub
fidivl
insl
cmpb
lahf
xor
shlb
mov
sbb
lds
push
mov
adc
mov
mov
cmp
jp
add
jl
jno
or
cltd
inc
loope
xor
mov
negl
sbb
test
push
in
xor
rcll
outsb
mov
sbb
in
or
test
inc
scas
ja
les
std
xor
mov
inc
mov
fstl
pop
pop
and
in
sahf
xchg
fwait
inc
loopne
mov
push
jg
adc
cmp
cwtl
add
pop
adc
or
adc
aam
stc
mov
dec
stc
push
pop
jae
xchg
cmpsb
dec
jmp
jno
add
sti
sub
cmpsl
in
out
cmp
mov
or
rcll
int3
inc
push
xchg
cmc
test
lock
xchg
jle
mov
das
cli
cmc
hlt
imul
xor
into
inc
mov
icebp
pop
dec
out
mov
sub
jnp
mov
repz
mov
adc
ss
xchg
out
cwtl
sbbb
mov
inc
stos
adcb
mov
aad
stc
mov
sbb
int
dec
mov
mov
fidivl
mov
jae
add
cmp
and
sub
test
push
stos
stos
rorl
xchg
out
leave
dec
mov
mov
mov
and
popf
adc
dec
push
mov
scas
aaa
mov
cli
jnp
inc
mov
add
dec
push
test
jb
addr16
adc
js
xchg
mov
mov
mov
and
fstl
jmp
retw
sti
xor
fsubl
cmp
mov
or
rcll
int3
dec
loopne
rcr
lret
cs
int3
in
mov
jne
or
jbe
mov
sbb
mov
imul
in
ljmp
jecxz
movsl
mov
add
ret
enter
mov
cmpsl
ret
test
mov
or
lret
pop
dec
push
sbb
mov
inc
and
inc
mov
pop
aaa
push
repz
rcrl
test
roll
fsts
pop
packuswb
jo
pop
sahf
xchg
fistl
fimull
jae
mov
lods
jge
shrl
cmpsl
pop
push
fucomi
cmc
mov
pushf
repnz
lahf
in
stos
inc
push
mov
adc
push
sti
xor
rcr
mov
out
loope
jp
imul
xchg
mov
push
cltd
scas
enter
xchg
cltd
mov
cmpsb
jnp
call
cwtl
push
add
mov
aad
dec
lea
inc
decb
push
xchg
mov
jns
xor
shlb
xor
mov
cmp
jp
add
xchg
mov
pop
mov
sbb
leave
cltd
xchg
lret
movsl
ret
insb
test
ljmp
test
and
inc
jnp
pop
dec
push
lret
pop
imul
cmp
sbb
ret
xchg
push
or
mov
add
sub
fistl
fiaddl
jae
mov
lods
jge
shrl
xor
pop
inc
mov
fists
addl
or
repnz
fwait
push
dec
mov
out
dec
aam
inc
fbstp
adc
mov
xchg
pop
pusha
clc
popa
mov
cmpsb
inc
jl
adc
ret
or
cmp
mov
sbb
sbb
es
pop
test
out
sub
mov
push
dec
mov
ret
loope
mov
push
jne
pop
add
cmp
popl
shll
jp
aas
in
mov
jnp
mov
adc
sub
xchg
adc
cmpsl
ret
sbb
adc
iret
cmp
xor
lret
push
dec
push
dec
pop
mov
lods
movb
in
jmp
xchg
or
sbb
inc
or
xchg
lcall
lret
pusha
mov
pop
jno
push
gs
fstl
mov
fabs
cmp
xchg
add
xchg
sbb
or
lcall
lea
add
xor
jge
inc
jecxz
and
pop
cmpsb
fsubs
sub
call
push
ret
insl
push
andb
cmp
or
cmp
xchg
sub
mov
inc
sub
xor
mov
arpl
xchg
shl
ret
loopne
mov
push
cmc
lret
daa
repnz
cld
iret
sbb
xorb
inc
mov
add
movl
into
scas
lds
dec
pop
out
push
divb
nop
xlat
dec
sub
ret
push
lret
pop
stos
fildll
stc
mov
adc
sbb
sahf
je
mov
sub
adc
xchg
sub
inc
push
lret
stos
xchg
fimull
cli
outsl
sub
into
lods
fmulp
nop
cmc
jl
sti
push
movb
cmp
mov
scas
aaa
mov
cli
jnp
inc
mov
jle
jmp
mov
and
dec
nop
lock
mov
cltd
xor
mov
xchg
sbb
inc
mov
cltd
inc
inc
mov
lods
int
in
bound
cmpb
out
xchg
lahf
xlat
dec
dec
mov
mov
out
and
push
xchg
mov
icebp
arpl
mov
popa
scas
ret
loopne
mov
test
mov
pushf
ret
lock
add
movl
aad
pushf
cmp
mov
dec
int3
dec
and
mov
test
jne
sahf
les
inc
mov
test
push
fldl
test
or
mov
lods
gs
mulb
inc
rorb
rcl
cltd
pushf
xchg
sbb
les
mov
push
mov
js
mov
iret
js
mov
jecxz
enter
adcl
mov
test
or
gs
jle
and
addr16
jb
mov
xchg
sbb
pop
push
xchg
push
pop
and
cmp
jb
pop
mov
jne
jecxz
out
jns
addl
or
sub
mov
fsubr
push
and
mov
push
mov
adc
aaa
ljmp
push
mov
repz
cmp
mov
out
in
loopne
add
cmp
sub
cltd
mov
cwtl
pop
fsubrl
pop
int
sbb
rcrb
adc
mov
mov
pop
lret
xchg
sub
scas
mov
sti
lret
fbstp
jbe
movsl
in
mov
pop
sub
les
push
dec
lcall
int3
scas
xchg
stos
jge
or
jle
mov
sbb
shr
sbb
popf
in
mov
leave
loop
in
nop
xchg
sbb
or
mov
rorl
dec
aam
adc
xor
movsb
fs
add
xor
lods
inc
and
es
repz
fcmovu
sti
sti
and
test
push
or
cltd
sahf
inc
sub
sub
aam
add
and
test
fiaddl
les
fstl
dec
mov
daa
in
in
mov
lock
loop
inc
sbb
xchg
test
ret
test
lcall
sarl
test
gs
push
sub
and
pop
dec
pop
dec
pop
dec
pop
mov
lods
movb
in
jmp
adc
insb
inc
cmp
xchg
test
cmp
xchg
add
mov
fwait
adc
loopne
cmp
fsubs
cltd
fmull
jnp
dec
push
push
arpl
enter
inc
mov
or
sbb
add
xchg
sub
testb
movsb
xlat
push
mov
sub
popf
push
stos
xor
jnp
xor
cmpsl
in
out
cmp
mov
or
rcll
int3
inc
ds
inc
pop
cltd
cmpsb
push
inc
dec
sub
cs
cwtl
cmpb
xor
dec
mov
pop
and
mov
and
push
adc
cmp
dec
sbb
jns
mov
add
xor
add
lods
movsb
sbbb
cmpsl
mov
nop
push
lcall
out
lds
pop
scas
mov
sti
fisubl
fbstp
imul
test
leave
mov
pop
sub
les
push
dec
lcall
int3
test
stos
jge
or
pusha
addl
sbb
pop
inc
mov
scas
fdivl
jo
arpl
add
and
xor
mov
rol
sub
lret
push
xor
dec
imul
call
jge
aaa
popa
insl
lahf
pop
inc
sti
mov
ret
repnz
inc
inc
mov
sub
jmp
cmpsb
inc
out
imul
fisubs
fdivs
pop
cmp
adc
mov
xor
mov
jno
mov
aaa
call
sbb
sub
pop
adc
insl
movsl
sbb
mov
xchg
sub
adc
xchg
pop
jo
mov
xchg
jmp
and
lret
pop
imul
inc
les
mov
xor
outsb
les
push
mov
xor
add
add
gs
iret
js
jle
scas
pop
or
xor
inc
or
inc
shlb
add
jge
jb
pop
and
repnz
movsl
ret
dec
mov
dec
cwtl
push
jne
sbb
mov
fldenv
pop
push
adc
cltd
into
jecxz
enter
or
fimull
negb
out
loope
dec
mov
mov
lcall
push
into
lea
cmp
mov
jns
into
jge
into
ret
fdivp
mov
pop
and
test
lock
jmp
cltd
mov
xchg
iret
sbb
iret
sbb
cwtl
adc
mov
sbb
sub
push
lahf
push
lret
imulb
stc
mov
xchg
orb
lret
scas
icebp
add
or
andb
das
sbb
stos
adc
pop
sub
jp
add
sbb
xchg
cmp
jmp
popf
test
stc
bnd
lods
scas
fbstp
inc
rclb
add
adc
or
push
sbb
out
ror
xor
inc
jns
push
stos
icebp
mov
dec
sahf
insl
or
cmp
psubw
call
dec
add
sbbl
add
mov
push
dec
mov
ret
loop
mov
push
jne
pop
out
jp
sbb
adc
fneni(8087
mov
xchg
jnp
mov
adc
ss
fwait
cli
daa
ret
das
loop
leave
movsl
mov
mov
xor
jb
mov
inc
sbb
dec
add
lahf
popf
ds
mov
pop
xchg
frstor
fisubrl
or
mov
push
sbb
nop
lcall
fnsave
imul
sbb
aam
mov
xor
push
pushf
rorb
cmp
push
ja
leave
in
loope
inc
or
inc
add
add
cwtl
inc
mov
js
outsb
test
mov
in
cmpl
movsb
jp
test
gs
adc
fdivs
mov
test
cltd
enter
rcll
dec
add
cmp
add
push
push
xchg
stos
push
inc
sub
inc
cwtl
jge
dec
movsb
adc
fsts
mov
mov
mov
test
rorb
mov
lock
add
adcb
insb
xchg
hlt
mov
xchg
ret
cmp
loope
and
ja
xchg
clc
mov
pop
mov
mov
xchg
jmp
jge
xchg
inc
arpl
test
xchg
pop
cmp
stos
xchg
test
mov
dec
sahf
push
fistl
fimull
jae
mov
lods
jge
shrl
test
scas
mov
lahf
fists
fcmovne
pop
adcl
or
or
cmc
mov
in
rolb
push
sti
adc
rcr
mov
stc
repnz
sbb
popf
inc
inc
imul
and
into
clc
xor
fnsave
xchg
xor
int3
pop
and
mov
stos
out
adc
enter
mov
add
insl
sub
ret
ds
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
lcall
sarb
cmpsl
mov
cli
pop
and
iret
aas
adc
mov
xchg
pushf
ljmp
sbb
dec
sbb
stos
inc
aad
jae
mov
in
mov
dec
xor
imul
xchg
mov
lods
testl
adc
push
test
popf
adc
pop
push
mov
jg
jno
jnp
inc
mov
xchg
data16
adc
mov
nop
lock
mov
cltd
xor
clc
inc
jge
sbb
inc
mov
cltd
inc
jbe
push
pop
inc
sti
mov
ret
repz
inc
inc
mov
sub
outsl
xchg
jmp
cmpsb
inc
imul
fsubp
xchg
pop
pop
mov
shr
xor
aam
sti
repnz
loope
mov
mov
xchg
in
clc
outsl
cltd
pushf
fcomps
dec
enter
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
inc
and
jmp
gs
mov
or
mov
push
sbb
movsl
mov
mov
xchg
dec
mov
xchg
sbb
das
add
add
jno
pusha
mov
lahf
scas
mov
lahf
jecxz
enter
adcl
inc
push
sub
mov
adcb
mov
xchg
lock
add
sbb
mov
gs
movswl
jmp
std
mov
sti
and
imul
sbb
adc
pop
stos
or
dec
cmc
popf
icebp
pop
pop
dec
shll
sub
and
mov
test
add
loop
divl
rcrl
mov
adc
addb
push
cmpb
insl
mov
ficompl
jne
les
cmp
lds
sbb
test
fcmovb
rcrb
pop
in
dec
shrb
or
or
fldl
push
outsl
les
mov
imul
lcall
jge
pop
xor
pop
or
js
popf
fists
repz
nop
xchg
filds
mov
jge
cs
dec
mov
pop
cmc
addr16
sbbl
mov
push
ficoms
add
fadd
pop
fisubs
out
push
hlt
or
add
sbb
jle
mov
jmp
lret
cltd
incb
push
cmp
sbb
in
popa
push
test
lcall
mov
pop
add
clc
sti
mov
es
pushf
rcrb
nop
mov
push
add
jbe
mov
dec
pushf
in
sbb
vandnps
stc
ja
mov
stc
ja
fwait
mov
cld
test
mov
jo
fbstp
or
scas
addl
shrl
jge
stos
movsl
mov
cld
jp
add
pop
test
xor
xor
fwait
out
cmp
int
xchg
loopne
data16
or
sbb
mov
fwait
push
dec
mov
repz
jnp
inc
push
mov
jp
mov
mov
add
jae
inc
rcr
cmpsl
ret
popw
std
xchg
xor
popa
shl
mov
int3
loope
movsl
sbb
add
pop
dec
mov
fisttps
in
dec
sahf
dec
mov
nop
mov
dec
and
mov
mov
test
fwait
lahf
jg
clc
sti
mov
in
inc
inc
sbb
lods
adc
les
jmp
pop
push
adc
mov
sahf
sbb
test
lods
js
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
dec
pop
cmpsl
lret
dec
movsl
push
or
xor
mov
cmpsb
xor
jb
fcoml
mov
push
lret
ret
mov
or
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
cmpsl
imul
mov
mov
jnp
inc
push
mov
xchg
sbb
dec
cmpsb
jmp
jecxz
mov
jmp
std
mov
sti
and
push
leave
sbb
sbbl
lea
cmp
jne
aam
shl
sbb
jne
rolb
mov
lds
cmp
sahf
divl
mov
and
sti
dec
fists
inc
insl
cwtl
mov
fsubrl
lahf
sub
sub
sbb
les
lcall
sbb
mov
inc
leave
fs
jno
inc
push
scas
xchg
inc
mov
test
aam
fwait
lcall
cmp
sbb
push
lret
ret
mov
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
rorl
mov
dec
add
add
mov
or
in
mov
jnp
inc
push
mov
xchg
sbb
sub
mov
pop
fcomp
movswl
jmp
std
mov
sti
and
push
mov
xchg
inc
add
sbbl
lea
cmp
inc
pop
lret
call
add
iret
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lds
imull
sahf
jnp
popa
mov
fwait
and
cmp
mov
or
mov
xlat
push
xor
das
cmpsb
int3
sub
in
mov
scas
shrb
fs
mov
add
add
inc
fcoml
jg
clc
inc
and
add
or
sub
imul
fnstenv
push
int3
ret
cmp
mov
mov
xchg
fadd
pop
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
lcall
stc
inc
pushf
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
jmp
decb
push
insb
xor
lret
mov
in
addr16
or
push
ss
int
inc
jno
pop
cmp
into
ret
addb
sub
xchg
outsb
shll
mov
mov
ss
addb
add
orl
xchg
into
imul
push
inc
xor
mov
cmp
imul
orl
pop
pop
divl
ret
jnp
inc
push
stc
or
or
loope
jnp
in
lret
jg
scas
mov
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
shlb
data16
bound
jbe
shrl
inc
jae
lds
inc
iret
mov
dec
inc
lds
or
mov
mov
jo
test
lds
ret
repnz
mov
icebp
push
pushf
mov
in
dec
sub
push
add
adc
mov
or
push
xorl
les
fsubr
jmp
dec
mov
mov
mov
jne
pop
pop
cmp
ret
jmp
inc
stos
xchg
or
fmuls
das
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
xchg
lock
popf
fimuls
mov
jae
or
sbb
mov
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
sbb
mov
out
inc
test
jns
outsb
negl
sahf
pop
or
mov
mov
inc
dec
adc
pop
sbb
xor
je
jo
xorl
lds
fldt
sbb
in
dec
jle
mov
xor
cmc
ret
ret
aad
shlb
add
mov
cmp
sbb
fs
sbbb
push
sub
inc
cmc
sbb
mov
push
adc
arpl
lds
sbb
sbb
icebp
inc
scas
xchg
stos
mov
inc
lds
adc
lods
push
movsl
push
sub
leave
test
mov
mov
out
sti
pop
pop
xchg
jo
inc
clc
aam
adc
sub
pop
int
or
fsubs
pop
jae
cs
xchg
mov
repz
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
push
add
add
andb
js
sbb
mov
mov
xor
push
jne
les
jg
cmp
mov
lods
push
sbb
leave
cmp
xchg
adc
xor
mov
push
or
sub
or
mov
test
sub
dec
clc
xchg
test
push
dec
cmp
hlt
movsl
push
jno
pop
cmp
mov
adc
inc
cmp
movsb
shll
lock
inc
sub
sub
xor
sub
mov
repnz
xchg
sub
aam
mov
rolb
jb
inc
sub
push
es
test
shr
iret
fucomi
repnz
dec
adc
or
das
push
rcll
clc
push
insl
in
fadds
mov
je
jge
xchg
or
test
mov
push
mov
aam
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
mov
xor
push
jne
les
jg
cmp
mov
push
aaa
inc
mov
push
aas
push
fwait
cltd
cmp
and
mov
adc
movsl
inc
jle
sbb
roll
push
das
and
int3
and
test
cmpsl
inc
xchg
pop
popf
fnstcw
lods
mov
jge
pushf
cmp
mov
or
sbbl
jmp
stos
std
cld
jns
rcrl
rorb
jb
fisttpll
cmp
lds
cmp
das
pop
icebp
or
cmp
fs
loop
out
lods
shrb
das
adc
sbb
pushf
lcall
lret
jle
inc
outsl
ja
fildll
mov
fwait
adc
test
and
jl
cmp
mov
pop
lods
cmpsl
inc
lods
mov
mov
add
or
nop
add
add
inc
and
mov
lea
add
rcr
jne
sar
pop
int3
add
or
js
sbb
ds
lock
mov
aad
xor
jae
jo
sbb
add
lods
xchg
sub
adc
fldenv
push
cmpsl
inc
and
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
dec
xchg
das
cmpsb
int3
push
aas
scas
shlb
ss
mov
aas
scas
shrb
sub
in
mov
and
xlat
insb
loop
mov
out
out
ret
jg
out
and
lret
and
mov
pop
out
inc
mov
push
in
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
leave
jl
adc
mov
mov
add
daa
insb
xor
mov
cmpsb
ret
xchg
xchg
push
xchg
ret
push
inc
push
mov
pop
or
cmc
cli
sbb
test
lret
sub
mov
lods
lret
dec
orl
sub
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
dec
scas
std
stc
inc
repz
lret
std
cli
jnp
inc
mov
add
adc
cs
add
and
mov
mov
negb
mov
je
pop
lods
addr16
and
aam
sbb
jbe
fcompl
jo
packssdw
push
jo
insl
das
fidivl
adc
ret
nop
and
push
xchg
in
imul
daa
mov
pop
sbb
insb
add
ja
lahf
jl
jne
jmp
jae
xor
pusha
xor
lock
adc
int
cs
inc
add
sbb
lock
and
lds
and
jb
mov
out
inc
test
std
pusha
and
fsubr
cmpsl
cmpl
popa
fidivrs
imul
adc
ret
filds
lcall
shll
lods
xchg
roll
insb
xchg
xchg
add
jb
sbb
pop
aad
bound
orb
test
jmp
jbe
jle
mov
push
mov
and
aad
pop
mov
fcoml
mov
sub
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
and
mov
cmp
inc
and
xor
les
mov
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
mov
stc
ret
mov
xchg
ja
ja
std
shlb
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
iret
lods
leave
push
sbb
das
cld
xchg
adc
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
imul
lcall
jge
pop
xor
mov
mov
lcall
pop
jb
add
xchg
cmpsl
or
mov
ficomps
xchg
out
test
jge
sahf
jp
popa
lret
mov
pop
push
leave
jne
sbb
out
mov
push
loope
cs
mov
outsb
out
lahf
stc
cmpsl
leave
jns
fcoms
add
mov
mov
sbb
mov
in
or
mov
ja
cmp
push
arpl
call
int
push
pop
jmp
popa
shrl
push
cmp
or
push
les
xlat
mov
adc
dec
int3
dec
jp
sbb
rcrb
aaa
xlat
xchg
cmp
mov
xchg
repz
cmp
icebp
add
push
cmp
sbb
int3
inc
or
fwait
xor
xchg
int
xor
jb
fisttpll
cmp
push
push
movsb
ret
sahf
sahf
xchg
sbb
js
adc
cmpsb
inc
fwait
leave
xchg
jl
andl
imul
push
fwait
adc
add
sahf
xchg
mov
push
xchg
insl
mov
sub
stos
dec
sub
pushf
xchg
push
bound
cs
stc
pop
std
out
or
push
out
fldenv
inc
and
mov
pushf
fcmovnb
adc
cli
test
cmp
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
scas
popf
iret
ret
clc
sti
jae
ljmp
add
cltd
sub
adc
lods
cmpsb
sbbb
fs
in
push
mov
call
sbb
ljmp
daa
sub
mov
push
mov
mov
mov
jp
rorb
enter
sub
orl
jl
sbb
push
mov
sub
test
lds
push
shrl
fstpt
loopne
adc
dec
mov
lds
adc
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
roll
enter
pop
test
mov
xorb
aaa
push
addr16
ret
mov
mov
dec
sahf
inc
adc
inc
cmp
jle
inc
ret
int
dec
adc
cld
daa
clc
test
xchg
cmc
lahf
popa
xlat
dec
adc
mov
sti
add
imul
sub
and
push
outsb
movsl
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
insl
int3
push
test
iret
iret
jo
fists
clc
dec
pop
movsl
test
inc
sub
shrb
stc
dec
dec
adc
lret
jl
das
inc
iret
rcrb
sub
mov
stos
push
mov
or
lods
pusha
mov
inc
jl
xchg
add
fadd
pop
loop
mov
inc
int
lods
repnz
nop
test
inc
mov
insl
test
stc
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
push
mov
fistl
xor
sbb
test
lcall
daa
and
iret
mov
sbb
mov
push
lcall
scas
cmp
mov
out
stos
sbb
movsb
pop
imul
lods
push
fmuls
xchg
test
push
push
dec
sub
stos
les
aam
add
fs
mov
adc
sti
add
xchg
inc
fwait
leave
cmc
xor
cmpsl
sub
sub
push
stos
cmp
repz
push
cld
xor
mov
mov
fs
push
mov
jnp
out
cmpsl
mov
jg
inc
push
pusha
jns
iret
stos
pop
lds
cmpl
je
inc
jl
outsb
xorl
and
jmp
es
fxch
cli
sarb
inc
inc
inc
inc
lahf
ds
add
and
inc
push
sarl
or
fwait
mov
lcall
inc
inc
xchg
cmpsl
icebp
leave
fcoml
insl
movsl
cwtl
icebp
sub
mov
shr
divl
dec
scas
cmp
repz
cmp
ret
mov
in
add
xchg
mov
fmuls
nop
adc
fimull
out
rol
fwait
movsl
pop
jno
lds
inc
lds
mov
xchg
fsts
mov
dec
mov
sbbl
xchg
pop
adc
and
mov
in
mov
jnp
inc
push
mov
or
xchg
and
movsl
inc
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
add
xchg
outsb
xor
xchg
mov
cs
add
notb
sub
and
adc
sbb
out
aad
xchg
hlt
mov
cmpsl
roll
lock
in
iret
imul
inc
inc
xor
sbb
in
jmp
test
aaa
jns
pop
push
andl
ja
stc
cli
in
test
or
pop
sbb
outsb
or
int
lcall
push
and
and
popa
xchg
jecxz
mov
rcll
pop
pop
xor
sub
adc
dec
sub
aas
js
sbb
inc
orl
andl
push
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
and
testb
fucomi
hlt
std
mov
sti
and
sbb
lret
dec
sbb
addl
mov
inc
fstpt
fwait
idivl
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
in
popa
push
push
rcll
daa
push
rcll
cmpsl
adc
mov
in
fsubrl
fwait
scas
cmc
stc
mov
inc
fistpl
call
fisubl
scas
fildll
out
inc
mov
xor
xchg
outsb
mov
pop
sub
testl
test
adc
jbe
sbb
out
xchg
pop
xor
adc
inc
fdivrl
jecxz
fistps
test
in
repz
rcrb
in
cmp
mov
sahf
dec
dec
aam
je
cmp
pop
cmp
cmp
and
mov
xchg
xor
sub
ljmp
mov
jae
adc
pop
mov
enter
cs
mov
cmp
push
dec
rcrb
jno
addr16
mov
xchg
sahf
cmp
cmpl
xlat
cmc
cmp
movsl
mov
or
mov
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
push
mov
insl
aam
rolb
inc
jle
push
inc
sbb
mov
dec
aam
jne
sahf
stos
scas
push
mov
xchg
lea
mov
les
in
mov
out
jno
lahf
outsb
ret
cmp
enter
sar
jg
fwait
adc
add
pop
xchg
mov
scas
mov
nop
arpl
rcl
ss
lods
push
jae
fidivrs
sahf
sub
aaa
shll
pushl
mov
xor
mov
xor
rolb
sub
aas
ja
dec
les
test
test
aad
imul
popf
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
inc
mov
push
fsubs
adc
test
push
jnp
lea
orl
mov
and
jecxz
lret
mov
insb
xchg
stos
insb
repnz
mov
pushf
xchg
das
cmpsb
int3
mov
adc
enter
lods
xchg
int3
mov
in
mov
jo
fs
les
jno
insb
loop
mov
dec
repz
das
mov
mov
pop
repnz
lret
inc
add
xor
stos
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
ljmp
jno
adc
test
sbb
mov
mov
xor
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
js
push
lods
cli
fwait
adc
aaa
jl
or
pop
or
cmc
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
cwtl
add
and
xchg
xchg
pop
inc
mov
scas
out
mov
xor
daa
fs
mov
lods
dec
fsts
push
pop
mov
arpl
jae
lods
sti
jecxz
arpl
bound
push
mov
ss
cmp
leave
fs
sub
xor
out
imul
loop
mov
jmp
clc
mov
shlb
sahf
add
and
adc
sahf
add
mov
cmpsb
sbb
daa
or
xchg
jbe
push
call
jle
sbb
jmp
add
fnsave
and
fstpt
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
lods
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
pop
mov
mov
popf
pusha
out
das
dec
lock
jl
das
dec
iret
shl
idivl
das
incl
scas
loope
sti
jnp
fwait
jae
fidivrs
lcall
test
xor
mov
push
test
sarl
lock
out
mov
int
int3
lea
add
xor
ja
mov
lret
int3
ret
xchg
test
xor
mov
icebp
push
pushf
add
jmp
gs
mov
and
add
jbe
lea
shll
ja
lret
ljmp
mov
mov
xchg
flds
xchg
shll
cmp
xchg
pop
or
bound
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
push
pusha
jle
das
pop
icebp
or
cmp
sti
daa
sbb
cld
rolb
jg
out
das
dec
sahf
notl
dec
pop
iret
xlat
hlt
jbe
mov
call
push
int
jo
jnp
sbb
pop
pop
push
add
repz
lahf
jo
jnp
int3
xchg
fnsetpm(287
dec
mov
roll
fcoms
inc
pop
lcall
jle
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
nop
push
lcall
scas
jge
mov
mov
ds
mov
loope
fisubrs
push
sahf
jge
loopne
sbb
call
subl
gs
xchg
aam
jne
insl
outsb
pop
lcall
roll
adc
subb
inc
outsb
cmp
inc
mov
cld
inc
ret
inc
or
pop
lret
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
sub
stc
test
xor
sti
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
mov
jge
clc
mov
xchg
repz
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
sahf
inc
mov
leave
xchg
sar
cmp
add
cmp
jl
adc
shrl
mov
cld
add
sbb
loop
push
xor
out
cld
jb
dec
sbb
add
mov
or
and
xchg
xor
ss
xchg
jbe
fnsave
cmp
sub
ljmp
jecxz
cmc
jg
dec
cmp
inc
sub
data16
js
or
aad
cwtl
mov
mov
aam
lahf
repnz
push
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
decl
test
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
vplzcntd
push
dec
movsl
sbb
inc
stos
xchg
stos
xor
mov
out
scas
push
and
sub
fs
mov
adc
sti
xchg
inc
xlat
pop
mov
dec
mov
xor
pop
sub
out
jns,pt
outsb
or
add
aaa
pop
dec
add
xchg
jecxz
fldl
cmp
ja
popf
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
sub
js
cld
or
lea
cmp
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
mov
sbb
loop
mov
and
xor
dec
movsl
arpl
pop
cmp
dec
and
adc
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
jg
shlb
jns
inc
mov
test
mov
rolb
jb
lods
xchg
cmpl
jnp
stos
push
xchg
push
pop
mov
and
int
and
push
stc
and
in
or
ret
inc
or
stc
xor
or
cmp
jmp
int
add
testb
fucomi
hlt
std
mov
sti
and
test
stc
sub
push
hlt
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
out
and
daa
adc
rorb
dec
sbb
push
fmul
adc
sbb
pop
test
push
fidivs
dec
or
cmp
mov
adc
cmp
test
lock
inc
sub
sub
add
push
and
push
xor
dec
adc
adc
jne
dec
sahf
test
mov
and
mov
push
push
ret
scas
inc
add
and
cmp
pop
out
cld
jb
mov
sbb
push
mov
aas
add
xor
sub
jbe
push
js
fldl
pop
pusha
jns
iret
stos
pop
lds
cmpl
je
inc
jl
outsb
xorl
and
jmp
mov
lret
test
and
xorl
sub
mov
cmpsb
mov
jle
mov
outsb
and
xchg
sbb
aaa
fisubl
shr
push
push
lds
pop
icebp
pop
iret
sahf
imul
jmp
jnp
inc
das
mov
dec
fcompl
pop
mov
add
rol
fisubs
imul
roll
fsts
aam
repnz
outsl
xor
and
jns
or
shl
sbb
cmp
mov
in
jnp
cli
jnp
inc
mov
add
adc
cs
add
and
mov
mov
negb
and
jnp
lods
inc
jae
add
cs
jae
lcall
repz
rorb
dec
xchg
jno
mov
mov
addr16
mov
ret
mov
aad
cwtl
mov
scas
addr16
lahf
mov
push
push
mov
mov
add
setle
xor
mov
cltd
cwtl
or
std
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
adc
mov
rorl
addl
cwtl
mov
sub
mov
cmp
sub
jp
xchg
cmp
fidivs
into
xor
jecxz
test
das
rorl
lods
out
xor
and
adc
jnp
dec
mov
faddp
push
int
push
mov
mov
cli
jno
movsb
imul
jb
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
gs
stos
jns
gs
inc
push
push
cwtl
cmpb
xor
pop
loopne
inc
push
push
cmpsb
ret
arpl
lds
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
pop
imul
test
scas
scas
imul
jmp
in
addr16
repnz
dec
popf
lret
add
xchg
imul
leave
ret
cwtl
xor
mov
xchg
int3
xchg
sbb
xor
pop
jecxz
adc
mov
lds
xchg
or
inc
fdivrs
iret
ror
mov
popa
sbb
in
cmp
mov
and
adc
push
adc
and
insl
out
sbb
inc
add
pop
stos
ret
shr
jb
in
test
jp
mov
mov
sub
mov
hlt
addb
or
loopne
cmp
or
movsl
cmp
xor
dec
mov
mov
lock
jo
push
sbb
mov
out
push
xor
in
es
nop
pop
sti
add
inc
test
shll
stos
fstps
push
mov
cmpsl
pop
test
popf
fwait
ja
lret
push
jbe
mov
mov
mov
pop
xchg
shll
cmp
xchg
pop
or
bound
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
jle
jbe
lods
inc
in
or
sbb
js
jle
mov
pop
jo
inc
mov
mov
cs
in
cmp
das
jae
out
cmp
scas
add
pushf
mov
iret
mov
pusha
lahf
cmpsl
fisubl
ret
fstpt
outsb
shll
out
mov
dec
adc
xor
and
lock
mov
cs
add
or
mov
arpl
mov
sti
jecxz
xor
jecxz
lods
sbb
in
fs
mov
xor
cmc
ret
ret
aad
shlb
add
mov
cmp
sbb
fs
or
mov
pop
scas
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
pop
das
adc
outsb
cmpsb
sub
mov
addb
rcrb
xchg
outsb
push
inc
sbb
mov
pop
out
jno
lahf
jle
mov
sbb
scas
pop
push
in
pop
popf
mov
or
xchg
imul
leave
xchg
jo
enter
dec
test
and
jae
pushf
sub
sar
lds
sbb
jge
negl
fildll
lahf
stc
cwtl
shrl
pushf
ret
addr16
sub
or
dec
xor
cmovs
fists
mov
and
ja
and
add
repz
fists
addb
rcrb
hlt
das
lock
mov
jge
fs
pushf
cmpb
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
jp
xchg
adc
bound
push
mov
rcrb
cmp
not
push
jmp
sub
mull
into
add
roll
or
and
stos
cmc
mov
and
in
pop
mov
repnz
inc
dec
je
jge
lds
jg
mov
ror
jmp
pop
mov
adc
pop
mov
arpl
push
jo
pop
test
movl
faddl
jp
mov
mov
ret
dec
sbb
fisubl
push
xchg
mov
push
and
mov
mov
test
add
in
mov
repz
rorb
mov
mov
fldcw
pop
into
push
mov
mov
xchg
adc
enter
pop
mov
fstl
in
jne
pop
xlat
cmp
ret
lods
add
sub
or
push
mov
jnp
inc
pop
mov
loopne
mov
sub
mov
sahf
pop
or
mov
add
je
fiaddl
xchg
mov
jne
subl
subl
adc
mov
and
addl
mov
mov
or
mov
add
aad
bound
cltd
add
mov
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
pusha
shrl
in
push
cmp
int
mov
daa
sbb
daa
adc
xorb
mov
imul
mov
push
fwait
scas
cmc
stc
mov
inc
fistpl
call
inc
mov
rcrl
cmp
in
xor
xchg
cmpsl
mov
andb
add
push
sarb
pushf
test
jp
add
cmp
push
pop
push
movsb
ret
sahf
sahf
xchg
sbb
js
xchg
xor
dec
in
ss
mov
cs
test
or
into
sahf
ds
rcrl
mov
loop
jp
pop
add
out
jnp
sbb
into
js
cs
repnz
jns
popf
arpl
dec
pushaw
test
add
test
jno
leave
xchg
jle
push
insl
test
stc
sahf
xchg
rcll
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
jns
mov
add
sub
pushf
ret
pop
mov
mov
sbb
insb
mov
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
int3
pop
into
xor
add
xchg
int3
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
ljmp
mov
pop
dec
and
mov
test
add
inc
sbb
shl
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
jae
popf
pop
ljmp
xlat
mov
lock
cmp
mov
adc
dec
mov
xor
push
dec
add
addb
shll
adc
inc
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
add
adc
xchg
push
cmp
inc
mov
into
fsubl
xchg
cmc
mov
cmp
mov
mov
in
lock
std
pop
push
xchg
int
jno
jecxz
pop
push
rclb
add
xorb
add
insb
cmpsl
xchg
ret
dec
sahf
dec
movsl
sbb
pop
inc
inc
lods
aad
adc
inc
ret
mov
xlat
pop
pop
inc
or
in
clc
sti
popf
arpl
lock
ds
adc
inc
push
adc
les
orl
mov
push
pop
jbe
fwait
ds
push
inc
in
stos
mov
push
or
jmp
into
inc
inc
fbstp
jns
loope
lret
aam
gs
xchg
cwtl
nop
std
pop
mov
sbb
ja
mov
xchg
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
dec
pop
movsb
ret
sahf
ficomps
jnp
inc
mov
cwtl
add
and
xchg
xchg
pop
inc
mov
scas
out
mov
push
jno
dec
cli
inc
test
mov
mov
mov
xchg
aas
movsl
dec
fistl
ficomps
xchg
fistpl
cmp
jle
push
dec
xchg
xor
sbb
and
andl
and
xchg
push
cmp
call
inc
mov
cmp
and
xor
repz
adc
and
jns
pushf
rcrb
sbb
or
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
adc
mov
sbb
das
push
inc
inc
out
sub
sub
shl
dec
dec
pop
dec
scas
push
dec
add
dec
adc
mov
jl
call
je
jnp
cmp
fistl
rolb
sub
xchg
xchg
aas
inc
mov
dec
fsubl
xchg
cmc
mov
jp
fst
in
mov
mov
or
mov
add
aad
bound
cltd
add
aaa
jl
pop
push
mov
dec
test
imul
aad
sbb
or
and
and
pop
jae
in
mov
mov
ret
jns
ds
and
std
mov
fmul
shrb
pop
pop
sbb
adc
gs
ret
gs
cltd
fs
hlt
sub
sbb
lds
xor
sbb
std
fistpll
cmc
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
inc
dec
push
cmpl
pop
insb
scas
in
mov
jmp
pop
mov
push
sub
sbb
repz
add
cmp
cmp
push
hlt
idivl
mov
and
xchg
stos
cwtl
xor
sti
pop
pop
popa
stos
lods
icebp
sbb
repz
pusha
mov
jno
popf
push
sbb
lds
xchg
sti
gs
dec
dec
mov
sbb
pop
shrl
loopne
jne
dec
mov
mov
add
push
stc
dec
mov
mov
imul
push
popf
mov
cmp
jp
add
add
mov
sbb
xchg
orb
xor
mov
test
sub
push
enter
lods
push
shrl
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
push
xchg
stos
aam
xor
inc
lahf
jb
lods
mov
test
push
jb
adc
iret
jns
negb
orl
fldt
mov
fsubrs
rorl
repz
out
das
dec
lock
jl
das
dec
iret
shll
inc
int
fsubr
sti
mov
dec
and
mov
pop
mov
and
cmpsl
jnp
or
adc
sbb
xor
gs
es
or
inc
and
or
sahf
imul
adc
sbb
jo
fdiv
aaa
fsubrl
sbb
ror
sub
push
xor
push
cmp
sub
xchg
lock
lret
xchg
in
push
dec
xchg
div
subb
cmpsl
arpl
rcll
stos
out
mov
test
popa
in
jg
div
rcrb
pop
jne
push
sahf
loope
lret
xor
imul
push
jb
popf
push
aad
pop
fdivs
push
ja
shrl
fsubrl
mov
dec
cmpsb
cmpsl
push
insl
mov
popa
shrb
jecxz
aas
and
enter
pushf
add
adc
cs
sub
or
and
ja
pop
inc
fimull
pusha
adc
lds
mov
xlat
shrb
movl
cld
pop
inc
inc
mov
sbb
out
enter
cwtl
stc
add
lcall
xlat
adc
or
sub
sub
outsl
int
cmc
test
cmp
mov
ds
jne
push
xchg
xor
leave
add
mov
or
mov
push
dec
xor
hlt
sub
in
test
mov
scas
push
sub
lods
and
cs
mov
push
mov
pop
clc
cmpb
cmpsb
mov
sbb
aad
adc
dec
lods
cmc
xor
xor
mov
nop
fidivs
lds
xchg
adc
mov
add
lret
clc
aaa
jge
push
dec
mov
sahf
dec
dec
aam
inc
addr16
cltd
xor
fcom
push
fdivrs
and
aad
jl
cmpsb
lods
out
std
jg
or
sahf
pop
or
dec
fdivl
adc
sbb
imul
nop
and
push
or
mov
adc
and
push
inc
cmpsl
rcrb
pop
cmpsb
mov
movsb
insl
mov
add
jb
es
lods
enter
roll
lock
in
iret
imul
inc
inc
xor
sbb
in
jmp
test
aaa
jns
pop
push
sahf
cmpsb
jg
in
mov
mov
in
bound
sbb
outsb
or
push
and
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
mov
shr
jo
sbb
xchg
xchg
xor
addr16
clc
push
sbb
leave
cld
icebp
jg
out
ud0
dec
mul
push
dec
cmpb
mov
cmp
push
sti
vxorps
mov
out
cmpsb
enter
inc
ret
fldl2e
scas
cmp
jns,pt
outsb
repz
cwtl
add
inc
and
xorl
std
cmpl
decb
inc
sbb
adc
std
int3
inc
pop
dec
int
jle
pop
mov
add
add
inc
fidivs
lret
lock
inc
adc
inc
fdivrp
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
xchg
jnp
jb
lcall
mov
sahf
das
xchg
stc
cli
in
test
or
test
pop
das
adc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
push
repz
fidivrs
jnp
mov
add
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
test
aam
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
pushf
xchg
lods
data16
dec
cmpsb
loop
mov
and
shrl
rolb
cmp
jae
pop
imul
fsubs
js
push
xchg
mov
bound
dec
mov
push
mov
les
add
leave
dec
and
cmpsb
fcoml
jl
inc
push
inc
mov
jnp
xor
xor
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
aam
pop
mov
gs
sbb
push
stc
and
loopne
push
pop
pop
mov
mov
xor
ucomiss
mov
sarl
cmpl
push
mov
bnd
add
movl
fs
push
pop
roll
push
pop
ljmp
cmpsb
sub
ja
push
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
js
repz
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
dec
sarb
lds
jo
mov
dec
rorl
dec
inc
sbb
jmp
cmpsl
fadd
xor
nop
shlb
sbb
stos
repz
fwait
cld
sub
mov
fbstp
ret
mov
mov
xchg
std
add
stos
sti
add
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
aam
inc
mov
pop
jb
mov
iret
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
and
xor
repz
sbb
push
cmp
je
test
stos
xchg
push
aam
ljmp
lret
fstl
in
cmp
cmpsb
mov
stos
sahf
jg
shll
xchg
add
mov
cli
movsb
xchg
stos
lds
sub
dec
int
pop
lcall
das
mov
inc
xchg
fdivl
adcb
xchg
pusha
mov
popf
push
push
stc
and
in
or
ret
inc
or
stc
xor
or
cmp
jmp
int
add
testb
fucomi
hlt
std
mov
sti
and
test
pop
sub
cmp
mov
popa
dec
mov
mov
push
xchg
jb
sbb
mov
dec
pusha
xor
aam
clc
mov
std
cmp
pop
mov
test
jbe
push
leave
cmpsl
inc
icebp
xchg
jle
sbb
adcb
call
sub
push
inc
outsb
jne
cmpsl
mov
push
lea
push
lret
in
js
push
lods
cli
fwait
lret
xlat
cmp
in
dec
cmp
xor
or
mov
xor
add
sbb
call
lds
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
add
jle
nop
inc
stos
jae
nop
and
push
jb
xor
ja
mov
dec
pop
inc
dec
movsb
gs
mov
pop
mov
loopne
out
mov
clc
sti
jne
jp
adc
dec
daa
and
mov
push
dec
cmpsl
bound
push
push
push
push
mov
inc
ret
pop
ficomps
pop
push
stos
test
negb
and
push
inc
out
xor
into
repz
cmpsl
mov
mov
xor
add
addb
shll
push
push
xchg
aam
xor
dec
popa
push
into
add
das
mov
inc
dec
int3
sbb
cmovns
and
test
lret
xor
inc
scas
pop
push
lret
fiadds
lahf
cmp
jl
cmp
clc
push
jmp
push
mov
test
lcall
push
xchg
insb
sub
leave
bnd
scas
pop
or
cltd
psubusw
rcrl
cmc
or
lret
ret
fisubrs
fldt
lea
fldl
lahf
sbb
push
mov
mov
add
setle
xor
mov
cltd
sbb
test
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
rcrl
pushf
sub
jnp
mov
js
call
iret
adc
jb
cltd
enter
daa
out
xor
gs
es
or
inc
and
or
sahf
imul
adc
sbb
mov
movsb
sub
les
xor
or
inc
xchg
jge
ret
stos
and
std
mov
xor
inc
push
inc
mov
mov
dec
gs
jg
xor
popa
lods
fldt
or
sub
lahf
push
mov
mov
pop
cmpsb
mov
xor
xchg
push
pop
clc
cmpb
cmpsb
mov
sbb
aad
neg
pushf
test
fwait
rolb
ja
xor
jae
and
mov
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
jne
mov
addr16
xchg
xchg
inc
push
mov
or
cmc
inc
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
flds
es
popf
test
jno
mov
dec
xchg
aam
cwtl
adc
nop
call
xchg
push
inc
push
imul
and
mov
mov
push
inc
push
add
test
insl
negl
fs
push
dec
mov
cmpl
insb
sub
push
mov
insl
in
inc
sub
mov
mov
stos
es
mov
mov
loop
mov
xchg
cmp
jns
push
inc
test
add
cli
test
xchg
fcmovne
aad
adc
sub
test
jmp
cwtl
inc
xor
inc
xor
mov
bound
xlat
in
repz
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
leave
or
push
jge
dec
jnp
in
lret
loop,pt
pop
dec
xor
xchg
dec
mov
adc
js
cmp
mov
fldl
sbb
xor
fcomip
repz
lea
mov
arpl
mov
ret
xchg
cwtl
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
add
popf
mov
push
popf
mov
cmp
jp
add
cltd
sub
adc
daa
add
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
lcall
ret
stc
pushf
pop
pop
mov
lahf
fisttps
pop
xchg
jecxz
icebp
fsub
loopne
push
sub
add
push
jg
shl
fcmovnu
adcb
stos
xchg
mov
rcll
test
mov
cmc
push
leave
mov
inc
pop
leave
push
dec
add
sbb
push
mov
xchg
ret
add
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
pop
or
int
imul
jmp
mov
daa
push
imul
inc
mov
das
mov
jo
push
jl
std
roll
ret
imul
sub
mov
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
enter
fadds
jle
pusha
das
dec
lock
mov
pop
xchg
mov
subl
jp
scas
scas
loope
repz
dec
push
mov
pop
cs
icebp
in
jns
outsb
out
loope
addl
mov
and
fadd
faddl
adc
mov
dec
mov
cs
add
and
push
pop
push
nop
push
mov
sahf
inc
movsb
jle
ljmp
mov
lret
roll
insb
jp
mov
je
in
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
xchg
inc
and
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
pop
and
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
pop
int
pop
insb
into
pop
mov
repz
push
rcll
scas
push
push
orl
fsubrs
sbb
aad
mov
inc
mov
mov
lcall
xchg
push
mov
pop
cmpsl
lock
xchg
jae
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
lcall
adc
test
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
push
es
leave
inc
add
add
sbb
into
xchg
fwait
cmp
lock
lods
hlt
addr16
pop
dec
ret
push
imul
mov
test
fwait
lcall
inc
mov
sahf
jle
sub
sub
movzbl
mov
push
in
xor
mov
push
push
push
mov
jne
dec
scas
push
dec
in
xchg
mov
cmp
imul
orl
pop
pop
notl
sar
sbb
pop
or
xchg
fstpl
aam
stc
lock
ret
stc
arpl
or
and
out
cmp
cmp
mov
ret
xchg
test
pop
and
add
add
sbb
mov
dec
sbb
xchg
mov
pop
adc
adc
mov
mov
jle
mov
inc
jge
pop
rcrb
adc
cmp
adc
sub
add
data16
aas
mov
notb
stos
subl
push
adc
mov
sbb
sahf
jb
and
mov
shlb
or
inc
mov
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
in
jnp
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
test
add
les
xor
fs
inc
data16
or
nop
and
setne
sbb
mov
and
sub
int3
push
xor
or
inc
xchg
dec
aad
or
dec
adc
push
and
fnstenv
rol
fiadds
xchg
adc
in
mov
outsb
mov
insl
and
mov
insb
movsl
sub
cmpl
fs
mov
insl
int3
imul
mov
rcr
dec
sbb
mov
push
inc
add
and
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
je
inc
mov
jne
mov
cmp
mov
and
adc
mov
push
mov
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
leave
jecxz
arpl
aaa
jl
or
pop
or
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
add
adc
cs
add
and
mov
mov
negb
loop
push
add
sub
xchg
fbstp
sub
ljmp
mov
mov
sbb
leave
rclb
into
sbb
mov
iret
movsl
mov
cmp
xor
push
in
nop
shll
fucom
cli
xor
roll
inc
test
lods
mov
cmp
and
jl
jp
push
fs
add
das
jo
or
ret
ret
insl
adc
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
test
movsb
jb
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
fwait
das
adc
outsb
cmpsb
sub
mov
inc
fimull
mov
pop
test
lods
cmp
dec
jae
in
cmp
jge
mov
andl
mov
sbb
je
jge
xrelease
in
data16
lret
ret
iret
hlt
ss
outsb
ja
out
loopne
ret
out
mov
outsl
mov
repnz
cld
add
sbb
push
dec
xchg
sahf
lret
outsb
dec
sbb
sub
ror
jp
incb
mov
orl
sub
xchg
jnp
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
ror
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
test
out
jo
jecxz
pop
mov
fcom
xor
out
das
dec
lock
jl
das
dec
iret
ror
jmp
fld1
stc
jp
scas
scas
loope
sti
jnp
out
scas
lods
icebp
sbb
stc
out
xchg
out
imul
leave
pushf
cwtl
adc
cli
test
cmp
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
mov
clc
sti
mov
stc
clc
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
mov
shlb
or
adc
aad
push
mov
mov
mov
aam
out
cmp
mov
into
or
das
mov
dec
jb
sahf
fisubl
mul
int
inc
xlat
pop
mov
xlat
fmull
sti
add
or
cmp
pop
pop
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
pop
inc
arpl
cmpsb
mov
mov
jmp
std
mov
sti
and
test
sahf
sub
cmp
mov
fimuls
cmp
lods
into
pop
stos
movsb
lcall
push
pop
push
outsl
xlat
test
mov
push
mov
pusha
test
inc
inc
cld
push
dec
xchg
mov
js
cmpsl
push
leave
fsubrl
cltd
mov
insl
movsl
imul
test
push
inc
mov
mov
imul
cld
int3
es
mov
mov
insl
int3
imul
mov
xchg
cmpsb
xor
add
aam
adc
push
fimull
mov
clc
inc
add
or
inc
adc
lahf
leave
pop
std
and
js
in
xchg
jl
sbb
fistl
popl
push
jo
mov
subb
mov
pop
jb
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
sbb
mov
xchg
int3
cmpsb
sub
sbb
pop
popf
sar
stos
test
imul
mov
push
xchg
bound
pop
adc
push
popa
add
jne
mov
adc
out
enter
mov
add
inc
rclb
fucomi
mov
xchg
sbbb
ja
jp
or
fcmovnbe
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
arpl
lds
adc
mov
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
int3
cmpsl
ficoms
hlt
ja
std
outsl
addr16
call
push
lds
xchg
dec
enter
pop
mov
bound
dec
and
out
sbb
mov
ja
or
mov
or
loopne
cmp
idivl
arpl
pop
xor
fisttpl
pusha
jae
les
xor
loop
sarl
cmc
and
fistpll
bound
rol
fiadds
and
arpl
push
mov
shl
movl
cmp
inc
xchg
pop
mov
mov
jne
call
mov
xor
ret
jbe
pop
xchg
iret
or
inc
scas
sub
lods
gs
xchg
jmp
dec
stos
in
shrl
data16
pop
test
push
xlat
les
sbb
adc
ret
xchg
cld
sbb
cmp
add
mov
hlt
inc
fidivrs
inc
mov
addr16
rcll
test
xor
cmp
jne
mov
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
push
leave
pop
jecxz
in
push
cmp
sbb
daa
adc
rcrb
mov
es
push
insl
aad
dec
and
stos
lea
push
gs
mov
loope
fwait
aad
and
fcoms
in
dec
cmp
xor
or
mov
xor
add
sbb
call
lds
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
cs
add
and
mov
xchg
jne
pop
ret
inc
lods
xlat
xchg
mov
jle
pop
sbb
fcoms
jmp
add
arpl
data16
out
jno
jnp
pop
mov
rcrb
lods
xchg
pop
push
and
addl
pop
sbb
push
inc
push
pop
push
test
sbb
xchg
nop
stos
repnz
xchg
and
daa
adc
xorb
mov
stos
sbb
lahf
cmc
gs
sbb
and
jo
cltd
dec
mov
in
stos
cld
xchg
adc
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
imul
lcall
jge
pop
xor
mov
mov
cli
out
je
inc
mov
pop
jb
add
mov
out
push
scas
sar
xor
jbe
mov
pusha
or
dec
aaa
xor
lods
inc
mov
lret
xchg
jae
sbb
aam
and
push
lds
dec
test
outsl
mov
rcr
push
rcl
hlt
cmp
or
lret
rcll
sub
or
dec
adc
lds
pop
mov
mov
pushf
sti
add
push
jp
mov
je
in
iret
rorl
in
movsl
cmp
rcrb
adc
test
push
sti
push
push
push
pop
cmpsl
inc
and
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
xchg
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
sbb
xchg
into
pop
mov
repz
xor
xchg
mulb
cwtl
scas
push
repz
mov
push
dec
je
xor
pop
dec
subl
cmp
pop
adc
and
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
das
inc
test
sbb
push
push
cwtl
cmpb
xor
pop
loopne
inc
push
inc
pop
cmpsb
ret
arpl
lds
push
sarl
hlt
mov
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
pop
xchg
dec
mov
fisubrs
fld
push
add
adc
jns
ffree
push
int
or
add
adc
int3
pop
rcl
xor
xchg
pop
lock
ret
inc
add
and
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
je
inc
mov
js
pop
xchg
in
cmp
mov
and
adc
mov
push
mov
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
clc
inc
and
orl
dec
push
or
inc
fs
dec
rcrb
pop
jno
sarl
addr16
js
imul
loopne
iret
jl
in
test
pop
rcrl
mov
ret
ret
inc
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
mov
fistps
test
push
es
dec
push
leave
aas
test
mov
and
mov
pushf
rcrl
addr16
scas
push
repz
xchg
xchg
mov
scas
mov
out
dec
mov
jae
pushf
bound
push
loopne
jb
jb
jmp
mov
xor
adc
pushf
add
jmp
pop
inc
inc
push
push
inc
inc
mov
push
jne
in
gs
xchg
test
xchg
fimuls
jnp
cmpb
push
adc
int
mov
sbb
sub
jl
std
mov
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
sbb
mov
aad
inc
sahf
pop
pop
cmc
test
dec
pop
jo
sub
cmpxchg
lret
xor
jle
scas
pxor
ret
sti
subb
cmc
jl
das
dec
xor
or
fwait
scas
fsubl
adc
push
rcl
ss
lods
push
jae
fidivrs
sahf
mov
jae
mov
icebp
cwtl
ret
test
ljmp
mov
adc
rclb
mov
rorl
jg
mov
adc
mov
sbb
or
in
test
jne
push
xchg
xor
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
mov
call
test
dec
dec
lret
mov
popf
enter
mov
test
sbb
cmp
or
stc
xor
or
cmp
jmp
int
add
testb
fucomi
hlt
std
mov
sti
and
sbb
lret
dec
sbb
lea
cmp
ret
mov
test
jl
or
int
rcrl
pop
xor
add
or
mov
scas
loope
leave
ss
roll
js
mov
jmp
lret
mov
inc
dec
mov
sbb
lds
inc
mov
inc
sbb
sub
cmp
pop
dec
sbb
and
fcoms
cmc
mov
inc
push
sbb
or
xor
jb
fisttpll
cmp
lds
sti
scas
push
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
popf
inc
xchg
cmpsl
or
mov
ficomps
fbstp
insl
cmp
dec
notl
call
jne
rcll
rcr
jnp
popf
xor
xor
stc
cwtl
shrl
pusha
scas
fdiv
lods
imul
leave
fs
ret
es
andl
leave
bound
stos
ret
call
call
int
shlb
mov
xchg
in
test
jo
adc
mov
cld
jg
cmpsl
xlat
in
sub
push
insl
mov
jne
pop
test
push
stos
xchg
sbb
push
jmp
imul
inc
jns
ds
movsb
ret
xor
dec
inc
sub
sub
inc
inc
nop
insb
shlb
movsl
out
stc
xchg
scas
push
mov
dec
xor
jb
mov
xchg
push
dec
cltd
jo
pop
and
pop
pop
jo
dec
test
pop
mov
es
or
jb
shlb
shlb
xor
jle
pop
dec
test
call
push
int
loopne
enter
daa
dec
mov
repz
std
push
iret
inc
add
ret
inc
inc
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
xor
jnp
cmp
sub
mov
iret
add
inc
sbb
shl
jecxz
movsl
mov
cltd
jo
or
inc
imul
dec
sbb
es
push
xchg
inc
jmp
ficomps
adc
lret
push
sbb
mov
and
call
dec
inc
lret
jp
and
lods
add
fsubl
mov
mov
int3
mov
scas
roll
adc
dec
lods
cmc
xor
and
jp
sbb
xchg
adc
mov
add
rcrl
repnz
fwait
push
dec
mov
pushf
xchg
sub
xor
imul
xor
inc
and
aas
int
fs
mul
jle
inc
fxch
bound
add
hlt
dec
pushf
inc
addr16
fs
inc
dec
adc
mov
adc
and
push
inc
push
call
es
repnz
enter
jle
insl
and
rol
pop
inc
add
mov
daa
add
fsubrl
ret
dec
lret
cltd
adc
sub
or
sbb
lahf
jne
fcompl
cli
int
push
aam
ja
stc
cli
in
test
or
test
sbb
adc
outsb
cmpsb
sub
mov
mov
dec
loopne
adcl
test
ljmp
sub
bound
lock
mov
cmpsl
sub
add
add
call
push
iret
lret
subb
xor
sub
hlt
ss
outsl
jae
fdivrp
xor
scas
adc
sbb
pop
in
sbb
push
mov
aas
mov
pop
fldenv
aaa
adc
addb
fcompl
pop
ret
mov
mov
movsb
popf
divb
fstl
test
clc
test
xor
jne
xchg
mov
mov
sub
pushf
ret
pop
mov
mov
sbb
xor
in
scas
mov
lea
push
lret
add
pop
mov
fsubs
cmp
bound
in
ss
stos
xor
mov
inc
jne
ret
xchg
js
addr16
call
in
cmpsb
aas
stos
shrb
sub
btr
addr16
test
lret
xor
xor
mov
fildl
in
inc
or
push
add
pop
icebp
add
add
and
movsl
lret
jbe
out
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
lods
mov
cmp
cmpb
xchg
sub
popf
out
mov
xor
push
jne
les
loopne
ret
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
sub
push
mov
insl
push
imul
test
imul
cmpl
imul
sub
xor
xorl
push
outsl
and
repnz
xchg
stos
mov
aam
add
xchg
ss
jmp
aad
adc
jbe
call
mov
fwait
stc
loop
cmp
mul
dec
clc
aas
fisubs
dec
mov
repnz
test
pop
aam
lret
fwait
adc
dec
mov
push
scas
fcomp
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
idiv
addb
and
and
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
mov
adc
adc
lock
push
inc
mov
mov
mov
pop
push
movsb
lret
xor
dec
ret
sub
pop
adc
xor
or
movsb
and
xor
mov
rorb
jae
xor
mov
rcrb
jnp
mov
mov
ficoms
fnstcw
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
pop
roll
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
clc
inc
es
pop
rcrl
add
ja
pop
cmpsb
dec
cmc
sbb
mov
xorb
mov
call
imul
xor
rorb
ss
inc
ret
arpl
mov
push
fbstp
jmp
ss
movnti
push
push
lds
pop
icebp
pop
iret
aaa
or
xchg
jmp
jnp
inc
das
dec
test
inc
mov
inc
fbstp
jns
loope
lret
aam
in
jmp
repz
hlt
inc
ret
dec
roll
or
fidivrl
fucompp
xchg
outsl
or
std
fwait
loopne
cltd
fmull
cmp
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
dec
cwtl
dec
and
adc
test
sbb
mov
xlat
jbe
iret
test
jecxz
inc
cltd
enter
in
inc
inc
and
aas
ja
xor
bound
xchg
mov
insl
lahf
aam
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
je
outsl
mov
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
lcall
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
imul
mov
mov
pop
pop
push
repnz
push
es
dec
adc
in
jo
sub
cmpxchg
out
jno
insb
out
jecxz
mov
out
sar
jg
out
das
dec
lock
jl
addr16
sub
jo
inc
int
dec
and
xchg
add
lock
mov
enter
xor
xor
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
dec
push
dec
mov
add
dec
and
cmp
and
mov
test
add
inc
sbb
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
ja
imul
mov
and
adc
inc
cmp
mov
pop
incb
shl
pop
pop
add
out
mov
xchg
add
jge
and
fwait
lret
push
ds
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
add
adc
xchg
push
cmp
and
pop
adc
outsb
mov
push
mov
inc
insl
out
pop
aad
jns
mov
call
sub
cwtl
xor
into
add
xchg
and
xor
arpl
aaa
fs
sub
stos
iret
jp
sbb
es
js
and
push
inc
add
mov
push
sbb
xchg
rcr
push
xor
push
cmp
sub
mov
decb
aad
push
arpl
push
lds
and
and
jo
cltd
mov
sub
fnstcw
imul
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
push
adc
imul
cmp
stos
xor
xor
mov
mov
jge
je
inc
mov
pop
jb
add
mov
out
push
scas
shll
ret
mov
out
jo
jp
scas
xchg
push
enter
dec
data16
fidivrs
xchg
inc
jl
xchg
add
fadd
pop
xlat
mov
rolb
xchg
subb
or
and
or
dec
mov
ljmp
or
jmp
call
mov
inc
outsl
mov
mov
fsts
inc
pop
cli
add
inc
mov
push
fsubs
adc
fs
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
sbb
sbb
daa
xlat
insb
mov
sbb
pop
sub
adc
jl
pop
lods
out
std
adc
es
movl
or
inc
fs
inc
dec
adc
mov
repz
mov
pop
sbb
insb
add
fadd
fldl
push
rorb
aad
movb
sbb
sbb
ja
push
mov
adc
add
lock
mov
mov
stos
out
jbe
push
push
movsb
jmp
scas
jmp
outsb
mov
pop
sub
jae
int3
push
stos
ja,pn
lds
cmpsb
icebp
lcall
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
and
adc
outsb
mov
push
mov
inc
insl
out
fstl
cltd
cltd
cmpsl
ret
scas
insb
lock
aam
and
scas
xchg
hlt
xor
adc
insb
adc
xchg
fsts
xchg
pop
xchg
dec
xor
adc
leave
arpl
mov
push
pop
add
push
sbb
out
aad
xchg
hlt
mov
cmpsl
xchg
movsl
or
push
xorl
inc
in
sbb
lcall
js
iret
sub
push
jne
fisubs
xor
jbe
dec
mov
call
rcrb
enter
mov
jne
insl
outsb
mov
sub
jmp
ficompl
pop
dec
out
cmp
xchg
inc
and
mov
addb
xchg
mov
filds
add
xchg
iret
shl
idivl
outsl
outsl
call
out
dec
loopne
std
inc
into
out
popl
sahf
xchg
xchg
inc
jl
xchg
add
fadd
pop
es
fcomip
ss
add
inc
lods
xchg
mov
jno
leave
orb
dec
mov
out
mov
shlb
xlat
push
int
sarl
ret
xchg
add
movl
lds
mov
push
mov
mov
push
leave
push
loopne
xchg
iret
cmpsl
insb
and
lods
test
imul
jmp
loop
fsubrl
push
dec
push
mov
scas
iret
pop
push
loop
fmuls
dec
lahf
gs
xchg
cwtl
nop
std
pop
mov
sbb
ja
sti
or
lcall
sbb
rcl
fistpl
fwait
pushw
dec
pop
movsb
ret
sahf
les
pushf
jne
jnp
inc
mov
mov
inc
out
xor
clc
dec
mov
je
mov
adc
test
sub
mov
push
cmpsl
fbstp
fldl
jns
popf
outsl
fs
add
or
sub
sub
sub
sub
push
add
xor
inc
and
or
mov
movsl
push
jmp
fldcw
cmpsb
clc
test
xchg
cmc
popf
popa
xlat
dec
adc
mov
sti
add
imul
sub
and
push
adc
ret
aaa
lahf
lret
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
cmc
mov
mov
test
in
andb
cmpsb
lds
xlat
and
inc
movsb
xchg
xchg
push
es
test
shrb
push
xchg
ja
xor
je
add
ret
shrb
xor
iret
shl
aaa
lods
sarl
cmc
pop
adc
popa
test
pop
out
cmp
pop
fidivrs
jnp
mov
add
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
test
aam
pop
add
inc
cwtl
dec
and
mov
mov
test
add
inc
sbb
jecxz
movsl
mov
cltd
jo
or
cmpsl
push
fiadds
jmp
cmp
test
imul
push
stos
mov
imul
mov
and
mul
pop
cld
sub
cmc
mov
roll
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
jbe
pop
jp
mov
fisttps
mov
mov
cli
out
je
inc
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
cs
lahf
jmp
loope
lahf
stc
cwtl
shll
pop
xor
jnp
sbb
xchg
andnps
sbb
push
inc
push
pop
lock
or
xchg
xchg
adc
adc
xor
divl
rol
les
mov
shlb
fsts
inc
pop
bnd
movsl
mov
jg
adc
mov
adc
sbb
mov
enter
pushf
ss
pop
fnstenv
mov
or
cmp
adc
mov
push
lret
mov
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
xor
rorl
mulb
cwtl
scas
push
push
orl
imul
jns
pusha
mov
lret
ret
imul
pop
cmpsl
lock
xchg
jae
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
lcall
adc
test
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
enter
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
sbb
ss
or
movsb
and
xor
mov
rorb
jae
xor
mov
rcrb
jnp
mov
mov
ficoms
loope
movl
cli
or
sbb
mov
fwait
push
dec
mov
and
adc
push
adc
and
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
or
push
sub
push
xor
lds
and
daa
adc
orb
and
jmp
decb
aad
push
sub
dec
dec
xchg
dec
push
in
ficoms
fcomi
call
sub
cmc
sub
sbb
daa
in
inc
out
mov
push
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
cld
jmp
jo
mov
pop
jb
add
add
or
por
inc
dec
mov
scas
mov
jp
mov
out
hlt
xor
sub
cmp
cmp
ret
cmpsb
ret
fldcw
cmpsb
pop
es
pmulhw
test
mov
dec
jmp
push
mov
mov
clc
lcall
in
test
arpl
call
add
and
sub
inc
enter
sahf
rcrb
out
mov
movsb
jg
or
icebp
aaa
mov
sbb
jge
les
xchg
mov
dec
add
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
fs
data16
push
jns
cmp
imul
dec
cmc
dec
mov
sub
ljmp
shr
sbb
in
mov
in
add
push
ror
pop
xchg
inc
mov
adc
out
mov
sbb
push
lret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
adc
cmp
or
cmp
xchg
sub
popf
out
mov
xor
push
jne
les
pop
mov
out
fwait
inc
movsl
dec
dec
xor
dec
sti
add
shll
outsb
push
movsb
sbb
daa
push
out
dec
imul
xchg
dec
in
push
xchg
cmpsl
mov
fsubrl
fmul
movsl
mov
and
xchg
addr16
std
push
stos
mov
dec
shrl
mov
cmpsl
shll
mov
jno
dec
rcrb
out
jb
inc
mov
and
in
and
sub
fwait
adc
dec
lods
cmc
xor
xor
mov
nop
fidivs
lds
xchg
adc
mov
add
lret
clc
aaa
jge
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
ljmp
xor
xchg
adc
daa
bound
inc
inc
popa
movd
decb
js
push
lret
lods
je
or
int
push
dec
in
xor
aam
xchg
arpl
iret
inc
filds
pop
mov
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cmp
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
lcall
ss
mov
fiaddl
inc
imul
ss
ja
adc
or
gs
sti
addl
sbb
dec
test
dec
fidivrl
cmp
jmp
std
stos
mov
mov
push
imul
mov
sti
sti
and
test
ljmp
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
xchg
mov
shll
push
and
enter
inc
mov
and
lret
repz
sbb
sarb
jb
rcrl
fisubl
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
xor
xchg
mov
push
sbb
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
cs
push
push
lock
or
call
psrld
ss
dec
pop
mov
js
cs
icebp
in
mov
sbb
mov
cwtl
shll
or
and
andl
cwtl
nop
xor
xor
adc
fwait
jge
lret
les
pop
mov
orb
fistl
push
cwtl
add
test
gs
mov
add
or
pop
into
push
add
out
sbb
push
cmp
je
movsb
xchg
test
push
aam
sbb
push
inc
inc
jae
pop
xchg
lcall
lods
fsts
std
sub
les
jl
or
add
pop
xchg
cwtl
enter
jge
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
repz
and
sub
xchg
rcrb
mov
fists
xlat
cltd
aad
imul
test
or
fbstp
jl
sbb
int
daa
mov
cwtl
add
pop
adcb
jmp
pop
mov
cmp
test
repz
ret
mov
ljmp
repz
add
push
add
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
cld
sbb
mov
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
jp
or
dec
movsl
or
stos
xor
mov
out
scas
push
and
sub
es
inc
mov
jnp
btr
outsl
jno
insb
out
mov
scas
pop
adc
or
pop
jge
sub
mull
mov
popf
jmp
adc
xor
push
push
sub
cmp
inc
movsb
mov
xor
je
cmp
lahf
sti
cwtl
inc
test
sbb
xor
push
mov
sbb
and
rcll
xor
xchg
sub
pop
sti
pushf
scas
cmp
or
out
out
cmp
adc
popf
ret
pop
push
sbb
lock
sub
inc
sbbl
inc
push
mov
sub
cmp
ret
xchg
addr16
mov
into
sub
dec
subb
clc
pushl
insl
mov
add
andl
pop
push
addb
mov
stos
inc
arpl
popa
int
pop
test
or
push
cmp
icebp
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
in
insl
xchg
popf
pop
adc
stos
aam
pop
mov
gs
sbb
mov
xchg
int3
push
sub
cmp
pop
push
lds
imul
mov
add
and
pop
push
adc
inc
dec
daa
jp
or
xor
or
in
test
icebp
scas
xor
sbb
rolb
out
inc
mov
and
div
push
add
pop
icebp
cmpsl
dec
inc
orb
and
dec
movl
dec
mov
dec
push
addb
mov
fdivr
popf
lea
adc
sub
les
jl
or
add
pop
xchg
cwtl
and
inc
stos
jge
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
bound
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
popl
mov
push
xchg
dec
ret
dec
fcoms
outsl
aas
fisttps
inc
sbb
pop
cmp
mov
inc
jecxz
rolb
adc
pushf
shll
or
add
and
fsubr
mov
jge
dec
pop
fists
enter
das
lea
mov
insl
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
cwtl
inc
xor
test
inc
mov
add
out
in
xlat
mov
aad
push
sahf
aaa
push
testl
sahf
std
and
mov
xchg
xchg
dec
mov
or
sub
xor
push
sub
inc
and
pop
cmc
sub
mov
iret
dec
lret
je
rcrl
ret
or
js
jle
mov
ror
jge
pop
enter
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
cwtl
xor
inc
int
jns
mov
mov
or
lahf
cltd
pop
adc
hlt
xor
cmpb
je
test
loope
and
arpl
sbb
imul
sub
inc
lods
jo
push
inc
mov
add
inc
push
sbb
ficompl
adc
xchg
shll
sub
into
lahf
mov
arpl
pop
inc
xchg
dec
inc
nop
jg
adc
fdivr
pushf
xchg
inc
outsb
jns
xlat
push
mov
push
adc
sub
scas
push
cmc
mov
mov
mov
sti
cmpsl
jae
test
mov
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
test
pop
mov
mov
enter
in
xchg
incb
jmp
xchg
xchg
mov
scas
mov
out
dec
cld
lods
xlat
xchg
test
mov
mov
lds
jg
lahf
lods
xlat
lret
cwtl
shll
sub
mov
nop
lds
cmpsb
dec
pop
or
mov
pop
xor
xor
mov
popf
movsl
dec
sbb
jmp
popa
mov
cmp
rol
pop
add
rcrb
xlat
fs
orb
lds
xchg
movsl
aam
cmp
test
mov
mov
repnz
inc
push
int
add
decl
ret
lret
movsl
inc
fcomps
lds
sbb
mov
push
mov
xchg
pushf
xchg
lcall
inc
int3
xor
mov
adc
pop
rcll
aam
adc
aas
pop
sub
testb
out
out
xlat
dec
cmp
cmpsl
out
movsl
pushl
jecxz
out
repnz
sub
repnz
xchg
push
mov
pop
cmpsl
lock
xchg
jae
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
lcall
adc
test
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
inc
dec
xor
pop
sub
mov
add
lcall
jge
inc
sub
jg
xor
jno
call
add
cmc
push
mov
scas
iret
bswap
stc
dec
push
out
and
add
aam
addl
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
mov
cli
out
je
inc
mov
pop
jb
add
mov
out
push
out
xor
test
inc
mov
ror
jmp
jno
lds
jnp
lcall
loop
cmp
inc
outsb
out
fucomi
xchg
cld
pushf
rolb
add
mov
push
scas
or
and
or
call
xlat
test
add
je
js
shlb
mov
testl
rclb
out
mov
lea
mov
adc
mov
adc
inc
xor
pushf
or
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
lcall
jo
pop
mov
shl
jmp
adc
lods
jp
and
sub
inc
loope
cmp
lock
pop
lahf
add
bound
sbb
mov
jmp
aad
jmp
out
jno
lods
pop
jae
adc
mov
repz
out
sub
mov
xrelease
mov
dec
sbb
pop
addl
push
sub
and
xor
les
stc
test
aas
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
or
push
leave
cmpsl
inc
icebp
xchg
add
pop
mov
call
movsb
jbe
mov
aad
mov
movsl
lods
sub
push
movsb
jbe
mov
pop
into
pop
mov
mov
push
adc
xchg
jbe
pop
xchg
or
shll
in
xor
cmpsb
add
sbb
jns
pop
mov
mov
lds
xorb
dec
subl
push
inc
xchg
fdivl
adcb
aas
orb
mov
std
fdivrl
mov
adc
adc
and
add
and
adc
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
inc
mov
cmp
cmpb
xchg
sub
popf
out
mov
xor
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
push
mov
insl
cmc
imul
test
movsl
je
push
les
outsb
js
xorl
inc
int3
in
loop
popf
push
adc
ret
insl
dec
mov
xlat
mov
movsb
xchg
sub
stos
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
popf
aas
stos
shrb
sub
btr
outsl
jno
lahf
data16
push
jl
inc
dec
imul
pop
out
fdivr
push
gs
fadds
mov
test
xchg
sub
and
push
cmp
mov
enter
rorb
arpl
lret
xchg
repz
fildll
dec
sbb
les
mov
shrb
inc
negl
mov
clc
dec
sahf
mov
push
cmp
and
subb
inc
mov
testl
rclb
jmp
ds
add
or
mulb
mov
cmp
pop
iret
sahf
das
push
pop
insl
ljmp
mov
pop
push
lods
xchg
lret
inc
ficomps
lret
jle
mov
lcall
adcl
cmp
cli
xchg
add
push
dec
and
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
sti
out
je
inc
mov
pop
jb
add
mov
outsb
shrl
inc
hlt
idivb
pushf
jmp
popa
lret
jp
scas
lahf
push
int
mov
out
scas
inc
leave
sahf
xor
cmp
jns
outsb
jecxz
stc
cwtl
add
pop
mov
inc
push
movd
inc
nop
js
push
lret
lods
je
or
int
push
dec
in
or
fstps
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
test
aas
movsb
lds
nop
lds
mov
aad
push
sahf
aaa
push
testl
sahf
std
and
dec
cmpsl
xchg
int
sar
int3
mov
adc
out
in
or
mov
sub
hlt
mov
scas
push
and
sub
es
addr16
sbb
jle
out
test
xor
arpl
das
push
roll
mov
shll
cs
xchg
mov
and
push
xor
lret
scas
loope
mov
lods
push
jae
fidivrs
lahf
and
iret
icebp
or
mov
sbb
pop
inc
loope
lea
iret
push
andb
push
mov
sbb
arpl
je
imul
jne
les
cmpl
sbb
imul
pop
adc
mov
jg
aad
pushf
ret
pop
mov
mov
sbb
nop
push
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
sbb
loope
xor
mov
aad
in
es
shlb
jns
inc
dec
xchg
aam
mov
pop
test
ss
stos
call
xchg
rcrl
ret
or
scas
pop
fwait
leave
pop
mov
xor
inc
and
rorb
mov
clc
sahf
imul
jl
insb
jbe
popf
repnz
add
rcll
pushf
ljmp
ds
sub
xor
pop
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
ficoml
mov
add
dec
and
cmp
and
mov
test
add
inc
sbb
shl
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shl
jae
mov
aas
insl
push
jns
cltd
int
xor
and
cmp
push
enter
dec
push
iret
fsts
mov
inc
lret
push
dec
lods
ret
jb
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
sub
inc
andl
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
stos
aam
pop
mov
gs
xchg
inc
test
dec
les
shrl
fsubl
dec
in
leave
nop
inc
xor
push
dec
pop
xchg
inc
gs
je
pop
mov
into
pop
stos
shl
pop
scas
pop
rorb
adc
out
jg
lahf
cwtl
cmp
pop
push
push
inc
rcr
cmp
roll
jmp
add
ds
hlt
movsb
dec
ljmp
stos
dec
movsb
mov
cmp
dec
pop
imul
fbstp
mov
xchg
bound
js
clc
test
cmpsl
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
inc
fisubs
aad
jle
fcoml
aad
xor
xor
mov
bound
xlat
in
repz
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
leave
or
push
jge
dec
jnp
in
lret
loop,pt
pop
dec
xor
xchg
dec
mov
adc
js
cmp
mov
fldl
sbb
xor
fcomip
repz
lea
adc
mov
pushf
pop
adc
cli
test
cmp
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
cmpsl
popf
iret
ret
clc
sti
jae
ljmp
add
mov
repz
add
mov
fidivs
adc
stos
push
pop
sbb
pop
mov
mov
cs
dec
mov
fdivrs
inc
popf
imul
xchg
mov
aam
inc
test
xor
mov
lock
jl
rcll
pushf
adc
push
push
pop
movsb
ret
sahf
inc
jb
jle
mov
std
cli
jnp
inc
mov
mov
int3
out
aaa
sbb
sbb
test
add
cmp
movsl
ret
xchg
cmp
cli
aad
jns
shrl
jae
aaa
fstpl
jge
mov
inc
lods
fnstenv
add
enter
subb
jle
jns
imul
mov
adc
mov
sbb
int
push
mov
in
test
inc
push
jl
jne
push
xchg
xor
and
lcall
daa
and
iret
mov
sbb
mov
push
lcall
scas
cmp
inc
cmpl
in
ds
lret
imul
jae
sarb
dec
fsubl
mov
sbb
mov
fcmovne
aad
sti
stos
xchg
add
xlat
loope
movsb
fstl
fdivrl
lock
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
sbb
mov
xchg
cmp
popa
dec
pop
mov
sbb
jae
nop
and
xchg
inc
gs
sbb
cli
mov
imul
out
or
and
cmp
push
inc
sbb
shrb
push
outsb
outsb
aaa
dec
in
pop
or
sub
ror
imul
inc
daa
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
cwtl
cmpsl
lcall
jno
adc
test
mov
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
add
jns
enter
iret
ret
jp
scas
es
push
push
iret
fcomip
jbe
mov
lret
xchg
mov
mov
push
pusha
mov
inc
outsb
jecxz
fisubl
loopne
or
outsb
or
movl
push
push
lret
popf
flds
and
add
ljmp
jnp
adc
jno
or
js
sbb
scas
sbb
roll
fcomps
je
cmp
pop
mov
mov
sbb
xor
in
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
sub
daa
je
loop
pop
cltd
enter
adc
sbb
cmp
ficoms
xchg
mov
insb
out
pop
mov
sub
xor
sbb
add
add
lcall
inc
mov
dec
xchg
aam
xchg
ja
xor
je
notl
stos
stos
sbb
push
pop
xchg
out
clc
int3
es
daa
int3
std
je
pop
push
pop
jp
dec
mov
xchg
jmp
and
push
mov
cmp
and
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
inc
popf
lret
sahf
jnp
popa
mov
mov
mov
mov
and
clc
mov
testl
and
fwait
lret
push
cmp
loope
xchg
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
add
adc
push
repnz
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
inc
or
dec
push
pop
xor
rolb
add
inc
rorb
xor
stos
stc
add
gs
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
add
rolb
adc
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
sbb
cltd
enter
lods
mov
mov
lods
into
fsubrl
sub
cmpxchg
out
jno
sbb
jno
arpl
out
rol
shrb
cmc
jl
das
dec
xor
mov
fwait
scas
fsubl
adc
push
rcl
ss
cmp
ja
mov
stc
in
loop
vaddsubps
mov
enter
lea
or
and
dec
mov
add
ja
jge
push
xchg
jb
sbb
mov
fiaddl
or
das
js
lret
test
jg
enter
lds
fistl
or
ret
gs
cltd
fs
hlt
sub
sbb
lds
jge
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
hlt
and
outsl
ljmp
cmp
enter
mov
inc
scas
outsb
or
mov
imul
int3
add
and
mov
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
lock
cmp
cmpb
xchg
sub
popf
out
mov
xor
push
jne
les
pop
mov
or
aas
iret
fucomip
test
sti
mov
jb
jae,pn
mov
mov
iret
not
pop
test
cs
push
cld
push
cwtl
dec
rcr
fsub
imul
lcall
int3
jmp
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
sarb
xchg
mov
fcompl
aad
xor
xor
mov
mov
jnp
je
inc
mov
pop
jb
add
xchg
cmpsl
or
mov
ficomps
xchg
out
test
jge
sahf
jp
popa
lret
mov
pop
push
leave
jne
sbb
out
mov
push
loope
cs
mov
outsb
out
lahf
stc
cmpsl
leave
jns
fcoms
add
mov
mov
sbb
mov
in
or
mov
ja
cmp
push
arpl
call
int
push
pop
jmp
popa
shrl
push
cmp
or
push
les
xlat
mov
adc
jbe
xchg
push
stos
mov
ja
mov
in
imul
dec
and
loopne
and
jae
mov
xor
dec
inc
sub
sub
or
push
sbb
addb
mov
sub
mov
sti
mov
dec
stos
inc
in
stos
pop
push
fcoms
inc
jb
sahf
pop
and
sub
outsl
mov
mov
adc
sub
mov
shrb
mov
mov
adc
fimull
arpl
pop
mov
fs
ficoml
jle
filds
aaa
jae
int3
xchg
sub
push
roll
sub
fs
fs
fsub
mov
mov
mov
lods
and
push
mov
inc
cmpsl
lcall
mov
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
loop
mov
aas
pop
dec
dec
pop
or
ja
push
pop
mov
sahf
das
push
pop
insl
ljmp
mov
pop
push
lods
mov
lret
jle
mov
lcall
adcl
cmp
cli
xchg
add
jg
and
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
sti
out
je
inc
mov
pop
jb
add
mov
out
push
out
popa
add
fisttpl
mov
shrl
fmul
push
lods
push
jmp
test
mov
lret
into
call
data16
out
xor
into
adcb
push
repnz
jmp
adc
lret
rcl
ficoms
or
adc
leave
push
dec
imul
lret
adcl
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
pop
daa
add
lods
cmpsb
fdivs
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
inc
cwtl
dec
and
sbb
sub
jnp
mov
js
call
iret
adc
ret
and
jo
not
fisttpll
js
out
cmp
mov
cmp
call
movsb
lea
push
pop
pop
push
test
mov
lds
add
mov
cmp
jp
add
add
mov
sbb
sub
push
testb
mov
dec
and
pop
sbb
imul
adc
ret
mov
mov
aam
dec
cltd
insl
addr16
inc
sub
sub
inc
dec
fsubs
pushf
mov
in
pop
fmulp
xchg
cmpsb
dec
sub
cltd
enter
lods
mov
mov
fwait
mov
popa
shr
pop
sub
cmpxchg
out
jno
insb
out
pop
mov
out
or
cld
icebp
mov
or
pop
dec
add
inc
dec
aam
stc
lock
ret
stc
arpl
or
and
out
cmp
cmp
mov
ret
xchg
test
pop
and
add
add
sbb
mov
mov
xor
push
jne
les
jg
cmp
mov
jae
cmp
mov
xchg
adc
outsb
xor
xchg
adc
pop
jmp
jecxz
icebp
out
mov
aaa
pop
dec
imul
mov
xor
mov
out
pusha
std
mov
out
andl
jo
outsb
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
pop
jmp
jo
mov
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
mov
jnp
sahf
sub
ljmp
mov
shll
mov
inc
adc
jle
nop
lds
dec
dec
adc
jo
mov
bound
mov
and
sub
pop
inc
pusha
lods
in
xor
pusha
jnp
cmc
dec
inc
test
xchg
shr
inc
sbb
leave
or
es
cmpsb
stos
mov
mov
push
scas
jnp
stos
inc
js
lea
jnp
dec
pop
pop
cmp
add
fstpt
mov
and
insl
adcl
mov
inc
imul
jge
dec
push
adc
mov
or
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
imul
adc
in
cmp
mov
and
adc
mov
push
mov
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
pop
sub
or
pop
cmpsb
dec
xor
imul
inc
fwait
divl
add
xchg
cmp
fistl
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
pop
adc
fsubs
adc
test
push
cli
add
movsl
imul
lods
add
mov
lret
sbb
sbb
pop
subb
adc
mov
mov
divl
loop
scas
shlb
dec
rorb
push
lret
ret
mov
sbb
and
js
fidivrs
jo
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
gs
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
push
movsb
mov
dec
push
dec
orl
or
xlat
mov
pop
pushf
pop
mov
call
push
add
jl
fbstp
dec
sbb
push
ret
enter
push
cmp
add
outsl
hlt
jmp
decb
push
insb
jne
lds
cs
mov
mov
dec
mull
imul
dec
and
iret
jae
xchg
rcr
mov
and
mov
das
sbb
dec
movsl
or
sbb
fistl
mov
and
cmpsl
or
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
xor
jnp
lods
inc
jae
add
cs
jae
xchg
lods
xor
adc
sbb
outsb
push
mov
or
nop
add
pop
cmp
xor
push
in
repnz
mov
push
pop
lahf
fistl
inc
mov
fstps
cli
es
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
mov
pop
leave
jae
pop
jbe
mov
add
out
in
xlat
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
sub
xor
imul
xchg
push
pop
push
jnp
xchg
and
stc
xchg
and
pop
push
aam
int3
imul
into
mov
pusha
mov
in
mov
es
test
inc
das
sub
mull
nop
jle
xchg
add
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
clc
sub
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
movsl
mov
fwait
add
cltd
adc
sbb
inc
mov
and
daa
and
mov
push
test
jle
sbb
mov
movsl
push
aad
jbe
mov
inc
and
add
imul
movsl
mov
jne
adc
inc
ds
movsb
ret
enter
popa
mov
fwait
and
cmp
mov
or
mov
mov
icebp
inc
mov
repz
cltd
xchg
pop
push
mov
scas
adcb
mov
xor
cmc
xor
sti
or
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
jg
fsubs
test
stc
into
clc
rcrb
inc
mov
leave
aaa
jae
int3
xor
dec
pop
add
jne
xchg
push
frstor
jb
lock
lahf
aam
add
jb
add
pusha
or
pusha
push
sub
push
xor
shrl
pusha
mov
daa
push
mov
inc
add
sbb
in
pop
adc
test
push
daa
mov
popa
lods
js
push
jno
xchg
mov
push
sahf
jns
loope
pop
lods
push
jge
and
push
pop
bound
jg
out
out
push
add
lods
outsb
mov
pop
jmp
shll
pop
shr
adc
iret
pop
test
xor
popf
mov
mov
scas
push
inc
clc
or
fwait
push
dec
mov
and
adc
outsb
mov
push
mov
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
enter
pop
inc
cltd
inc
in
cmp
sub
pushf
ret
sbb
std
sub
xor
xor
adc
adc
bound
lods
sub
adc
pop
popf
xchg
mov
les
shl
nop
jle
sbb
mov
ficomps
fldcw
loop
dec
pusha
sub
push
ljmp
jae
pop
cmp
popf
lret
add
and
xlat
cli
aad
idivl
int3
and
out
sub
mov
mov
xchg
inc
and
and
popf
adc
gs
cld
in
jmp
jge
outsl
jno
insb
out
mov
scas
pop
adc
mov
je
mull
mov
rcrb
xchg
xchg
or
fwait
out
jp
in
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
push
add
push
lds
gs
xchg
inc
stos
repz
dec
je
fildl
in
inc
inc
sar
repz
rcrl
lahf
bound
add
add
stc
loop
mov
aas
pop
dec
dec
pop
lret
adc
dec
pop
push
cmp
popa
ds
mov
cltd
jmp
loop
fsubrl
push
dec
dec
xlat
data16
pop
dec
stos
lret
cmp
pop
fstpt
jns
push
inc
test
add
cli
test
xchg
fcmovne
aad
adc
sub
test
jmp
cwtl
xor
inc
xor
mov
mov
fsubr
je
inc
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
sub
je
pop
lods
addr16
fidivrs
cmpsl
inc
fld1
insb
icebp
mov
lahf
popa
cmpsb
push
imul
mov
or
dec
sarl
xchg
jno
dec
adc
mov
ret
mov
movl
xor
or
cmp
or
add
lock
add
mov
cmc
sub
mov
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
mov
aad
push
sahf
aaa
push
testl
loope
lret
movb
vplzcntd
push
dec
and
xchg
stos
xor
mov
out
scas
push
and
sub
es
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
cld
inc
ret
inc
or
pop
lret
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
sbb
stc
test
xor
sti
sti
and
aas
lahf
es
dec
loope
sti
dec
dec
mov
cmp
in
push
divl
sti
fnsave
push
adc
inc
pop
call
imulb
xor
jle
insl
mov
xor
pop
test
jbe
push
leave
cmpsl
inc
aaa
decb
push
mov
data16
testl
mov
xchg
ret
pop
push
or
push
pusha
jb
lods
jp
xor
sub
cmc
jns
sti
cmpsl
pop
or
roll
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
sbb
xor
inc
xor
mov
mov
pop
out
je
inc
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
cs
icebp
in
jns
cs
jl
pushf
pop
pusha
test
ret
rcrb
or
dec
adc
inc
bound
test
shrb
hlt
push
test
mov
pusha
push
pop
add
pop
das
pusha
test
stos
sub
hlt
push
inc
or
mov
pop
and
mov
adc
pop
and
fstpt
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
ret
push
rorb
push
fisttpl
mov
push
lret
mov
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
daa
sarl
out
ud0
dec
testl
out
cmp
sbb
pop
repnz
sub
mov
xchg
and
decl
mov
xlat
pop
pop
and
out
test
test
popa
mov
mov
jl
push
or
jns
dec
cmpsb
mov
xor
dec
movsl
sub
js
jle
lahf
dec
xchg
add
mov
xor
ret
jl
jg
fildll
pop
mov
add
adc
ret
ret
sbb
inc
ds
repz
aad
mov
fldl
xlat
mov
jb
pop
push
bound
push
test
mov
inc
xchg
je
sahf
cmp
in
test
or
test
fisubrl
adc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
push
repz
fidivrs
jnp
lret
xchg
jae
inc
pop
popl
in
loope
rcll
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
cltd
stos
stc
sahf
inc
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
mov
lock
adc
loop
popa
lahf
mov
orb
les
and
nop
movsl
insl
and
test
pop
and
jmp
cmp
sahf
xchg
aam
push
frstor
scas
insl
jno
fnstcw
cmpsl
xchg
fwait
pop
push
sub
shll
sbb
es
sub
outsl
jne
scas
xchg
stos
stos
lods
je
xchg
adc
jmp
popf
jae
in
xchg
and
pop
rclb
push
mov
cmpsb
xchg
faddp
mov
cmpsl
roll
in
bound
xlat
push
xor
jbe
cmpsb
out
push
les
xor
les
jnp
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
sub
or
shl
xor
xchg
sub
popf
out
mov
xor
push
jne
les
loopne
ret
ret
sahf
imul
add
dec
mov
shll
aad
mov
adc
push
leave
int
and
aaa
leave
fcoml
insl
movsl
cwtl
icebp
movd
jne
mov
push
scas
shlb
pop
push
lods
test
lret
inc
fiadds
lret
jle
mov
lcall
adcl
cmp
cli
xchg
add
ds
and
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
cmp
je
inc
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
dec
push
jbe
xor
inc
pop
inc
iret
movsb
sbb
mov
pop
push
xchg
push
jns
inc
call
inc
mov
cmp
and
xor
repz
adc
and
jns
pushf
rcrb
sbb
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
roll
arpl
jge
les
in
mov
xor
ret
icebp
shlb
jne
add
mov
lods
notb
push
aam
movsb
ljmp
icebp
cmp
jne
inc
movl
sbbl
cmp
es
dec
xor
and
adc
push
adc
and
jmp
mov
mov
or
lahf
cltd
pop
adc
ljmp
je
test
jle
jl
out
mov
icebp
push
mov
pop
pop
lcall
xor
arpl
or
orb
rorl
rolb
mov
xchg
icebp
nop
jle
mov
push
sub
jno
sbb
shrb
lea
aam
lea
fildll
loopne
aas
adc
inc
dec
push
mov
dec
test
bound
iret
inc
scas
xchg
ficoml
push
xchg
stos
ja
add
out
and
sub
es
test
mov
into
inc
ja
adc
xor
jl
pop
out
ret
cld
jae
cld
out
daa
add
mov
pop
cld
mov
inc
mov
dec
insb
mov
inc
loopne
imul
pop
call
jp
in
jns
outsb
out
lahf
stc
test
cmp
movsb
xchg
ss
inc
jl
xor
das
outsl
or
loope
add
xor
inc
and
or
mov
movsl
push
jmp
sbb
pop
neg
jmp
cld
cmp
or
test
jl
out
adc
jae
push
adc
jl
clc
sub
int
inc
jmp
rcrb
ficompl
jne
mov
jecxz
dec
sub
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
sbb
adc
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
jge
sbb
lret
xchg
mov
inc
out
scas
mov
fildll
les
fldcw
andb
rolb
aas
or
xor
lret
push
mov
dec
sahf
dec
mov
mov
ljmp
insl
mov
daa
jo
push
sbb
inc
and
add
lahf
jmp
lock
sarl
cmp
and
insb
jne
inc
into
push
mov
mov
inc
push
cltd
jns
ret
xchg
ret
dec
lods
jmp
cmp
inc
push
stc
inc
jb
dec
mov
lret
wbinvd
sub
push
outsl
sbb
push
in
dec
out
outsl
stos
sub
mov
jb
int
sahf
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
fcmovnu
test
fstpl
repz
ds
jo
in
dec
add
out
mov
aam
mov
fdivrl
cli
xor
fists
out
cmp
outsl
sbb
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
out
and
rclb
pop
inc
shrl
fs
mov
data16
test
pop
test
push
stos
lea
inc
push
mov
push
sub
mov
fildll
push
mov
mov
outsl
mov
loope
data16
add
push
mov
mov
or
mov
jb
out
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
mov
push
mov
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
imulb
daa
xchg
test
dec
popf
push
aad
inc
fdivs
push
add
cmp
inc
mov
scas
push
and
sub
es
adc
test
movsb
aaa
xchg
popa
cmp
stc
mov
or
pop
xchg
mulb
fldcw
push
fisubrl
xchg
add
ja
jmp
int
adc
ret
or
mov
loopne
sbb
dec
push
xabort
mov
pop
mov
dec
sub
fisttpll
imul
jo
insl
das
fidivl
adc
popf
sub
push
or
dec
cmpsb
mov
xor
dec
aam
roll
lds
ret
ret
test
xchg
repnz
ds
mov
mov
stos
stc
sbb
xchg
lock
mov
pop
mov
sahf
imul
jmp
loop
fsubrl
push
dec
dec
pop
mov
rcrb
jne
dec
fwait
inc
sarl
mov
stos
test
test
repz
inc
cmp
int
pop
movsb
and
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivrl
dec
sub
fistps
jno
jnp
inc
mov
add
adc
sub
repnz
adc
mov
shr
jmp
jnp
out
mov
out
loopne
js
xlat
cmp
lahf
lea
stc
testb
pop
test
mov
or
repz
lods
xchg
add
xchg
xor
jbe
mov
mov
imul
and
clc
push
aam
and
push
aas
mov
adc
outsl
mov
or
or
mov
ja
adc
mov
xor
and
ss
int
inc
mov
scas
lods
bound
movl
and
sbb
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
gs
pop
xor
mov
cs
adc
imul
rol
dec
jae
xor
jns
dec
mov
adc
lret
inc
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
rorl
mov
mov
xchg
cmp
or
aas
out
lods
imull
push
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
mov
loopne
mov
je
or
inc
pop
jno
and
sub
ja
push
loope
popf
lret
ret
aam
add
stos
dec
repnz
mov
or
mov
mov
mov
filds
mov
jnp
push
cltd
xchg
pop
push
mov
scas
adcb
mov
xor
cmc
xor
popf
or
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
scas
aam
pop
mov
gs
pop
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
popf
movsl
dec
sbb
jmp
popa
mov
mov
and
push
dec
xchg
mov
dec
push
pop
push
adc
mov
imul
mov
dec
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
jmp
cmp
js
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
loopne
cmp
mov
push
or
jo
test
jae
cld
add
cmp
cmpsl
fdivp
sbb
mov
xor
sub
in
cmp
sub
loope
clc
adc
gs
add
stos
inc
inc
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
xor
jnp
cmp
sub
mov
iret
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
sub
mov
call
push
xlat
sub
jbe
pop
mov
dec
adc
jg
shl
je
sub
out
fistpl
dec
jno
enter
lods
mov
mov
in
scas
aas
test
fs
in
mov
in
mov
sti
out
pop
dec
subb
push
stos
arpl
iret
int
add
cmp
out
xchg
scas
out
cmp
scas
mov
xor
jbe
jae
test
popf
icebp
lfs
xchg
xchg
jle
push
jo
push
jnp
movl
faddl
jp
mov
mov
ret
dec
sbb
xchg
mov
push
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
push
push
mov
outsb
xor
lret
stos
test
fimull
aam
add
push
pop
adc
ljmp
dec
subb
nop
shlb
or
inc
mov
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
jg
xchg
test
jnp
inc
mov
cwtl
add
and
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttpll
icebp
cwtl
ret
leave
shlb
rclb
add
andb
xor
mov
jmp
jecxz
dec
ja
repz
in
inc
inc
xchg
and
ja
and
add
sub
fists
addb
rcrb
hlt
das
lock
mov
jge
fs
jne
jns
lds
nop
lds
push
push
add
mov
stc
inc
jecxz
cmp
fidivs
loope
and
popf
push
aad
pop
fdivs
push
sub
lods
loope
ljmp
pop
lcall
das
mov
or
in
sbb
int3
xor
repz
add
xchg
dec
ret
add
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
arpl
std
add
and
push
or
outsl
adcb
and
dec
push
and
cli
inc
ret
icebp
add
jns
fistpll
testl
cld
jg
inc
test
shr
xchg
push
hlt
lds
ret
xchg
mov
lcall
mov
mov
mov
or
inc
jge
shlb
aam
adc
fcoms
shlb
inc
or
mov
xor
add
sbb
call
lds
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
ret
push
jae
dec
sub
pushf
push
push
bound
lret
cmpsb
clc
jmp
jle
mov
add
and
ljmp
mov
mov
mov
dec
fcmove
imul
pop
push
inc
push
sbb
int
lcall
push
sahf
add
insl
mov
test
add
fdivrp
sbb
sbb
mov
rorl
or
sub
aas
outsb
xor
test
ljmp
mov
sub
fisttps
mov
les
xchg
stc
cli
in
test
or
test
std
sub
outsb
cmpsb
sub
mov
dec
lcall
pop
test
lods
cmp
dec
inc
shll
test
mov
cmc
leave
push
and
push
lret
jl,pn
icebp
push
xlat
mov
dec
cmp
push
mov
dec
add
shll
or
test
xchg
and
cmp
sbb
adc
jmp
dec
push
add
add
andb
js
sbb
mov
mov
xor
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
insl
cmc
imul
test
movsl
je
push
les
mov
mov
mov
leave
aaa
jnp
popf
fnsave
cmpsb
loop
lret
add
mov
stos
or
lcall
sbb
rcl
fistpl
fwait
pushw
mov
ret
sahf
les
pushf
jne
jnp
inc
mov
cwtl
add
and
xchg
xchg
pop
inc
mov
dec
out
mov
xor
das
stos
xlat
shll
test
mov
ret
cltd
call
sti
mov
xchg
dec
test
aaa
mov
pop
jle
nop
add
mov
sahf
dec
gs
inc
pop
adc
or
call
jg
dec
push
sahf
sub
mov
jnp
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
ror
inc
sub
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
jp
jge
scas
xchg
iret
stc
push
mov
mov
scas
push
mov
roll
xor
and
dec
pop
jo
sub
cmpxchg
out
sub
inc
cwtl
das
push
roll
push
sbb
and
imul
leave
pop
iret
shl
idivl
outsl
outsl
call
stos
subl
out
scas
mov
pop
scas
insb
lock
stc
inc
iret
outsb
iret
arpl
out
xorl
mov
push
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivrs
imul
xor
loop
sti
pop
es
sub
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
popa
les
push
mov
push
outsb
mov
sbb
arpl
in
es
outsb
scas
subl
imul
sub
test
mov
jb
pop
adc
xchg
aam
jno
in
mov
xchg
or
add
jb
sbb
je
push
sarb
inc
sarb
js
fildl
je
or
les
xchg
and
fldl
inc
mov
movd
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
fildl
inc
mov
mov
or
sbb
inc
push
pop
xor
or
out
inc
mov
icebp
xchg
jle
sbb
mov
adc
movsb
jbe
mov
aad
mov
mov
xlat
inc
pop
stos
mov
mov
daa
push
dec
dec
fisttps
jno
and
mov
mov
insb
mov
inc
xchg
push
xchg
in
inc
mov
test
call
xor
and
jp
sbb
xchg
adc
mov
add
lret
clc
aaa
jge
push
dec
mov
and
adc
mov
push
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
add
and
test
arpl
pushf
xchg
cmp
or
orb
lods
popa
shrl
push
cmp
roll
dec
sbb
mov
xchg
mov
xchg
scas
pop
mov
adc
shr
jle
sbb
inc
mov
rcrl
mov
aad
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
sarb
pushf
test
inc
cmp
cmp
push
pop
push
movsb
ret
sahf
sahf
xchg
sbb
js
sbbl
fnsave
add
jns
in
xor
or
mov
mov
fwait
inc
push
rol
lock
outsl
jae
fsubrp
cmp
scas
xchg
scas
out
xor
out
mov
jns
or
clc
int3
pop
into
je,pt
enter
outsl
ror
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
cli
pop
push
mov
sbb
jns
pop
mov
test
add
in
mov
sbb
aas
ja
int
mov
mov
cmpsl
jle
inc
sbb
scas
push
lods
stos
das
mov
and
adc
repnz
stos
test
or
imul
push
jo
xor
dec
xlat
dec
roll
add
fidivrl
fcmovu
xchg
outsl
cmp
std
dec
loopne
cltd
fmull
cmp
jle
jp
add
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
cs
add
and
mov
mov
negb
xor
jae
mov
adc
jge
test
dec
xchg
lret
lret
or
and
mov
mov
outsb
or
test
or
call
xlat
fsts
fwait
push
mov
push
loopne
mov
cmp
or
mov
in
inc
rcrl
add
ljmp
or
int
ret
gs
push
lods
xchg
sub
adc
inc
in
xlat
mov
aad
push
sahf
aaa
push
testl
orl
xchg
test
sbbb
push
adc
add
movl
rcll
and
push
popf
das
test
in
mov
mov
dec
add
js
popf
into
jmp
mov
mov
sub
inc
sbb
pop
rcr
mov
push
mov
xor
clc
jp
pop
pop
pop
jne
sbb
mov
mov
leave
adc
jg
fwait
and
mov
xchg
test
lret
mov
inc
lfs
dec
dec
adc
mov
fisubrs
lret
arpl
call
int
push
pusha
lods
in
xor
leave
pop
ret
push
sub
xchg
mov
and
js
or
push
pop
bound
push
cld
pop
outsb
fistl
insb
jnp
inc
sub
jecxz
cmp
into
repz
mov
push
hlt
inc
ret
dec
inc
sbb
outsl
pop
jge
dec
fsubl
mov
rcr
je
lret
repnz
push
mov
aam
or
test
imul
fidivs
pop
aad
sti
inc
mov
fucomp
or
popf
xchg
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
pop
dec
movsb
sbb
and
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
out
hlt
xor
cmpb
je
test
loope
and
jecxz
pop
sub
decb
add
sub
and
sub
rcrb
jl
popa
shrl
push
cmp
roll
aam
sub
mov
fldt
push
mov
insl
aad
dec
aas
outsb
xor
cwtl
pop
stos
push
test
rcll
push
jno
pop
cmp
cmp
mov
sahf
jno
jecxz
enter
push
ret
add
cli
scas
xchg
stos
mov
int3
sub
in
mov
scas
shlb
push
sub
ret
mov
xlat
mov
pop
add
in
in
pop
aas
xchg
fbstp
pop
enter
cmpl
lcall
mov
cwtl
in
aaa
sbb
mov
pop
xchg
cmp
les
push
mov
clc
jecxz
mov
jmp
std
mov
sti
and
test
pop
sub
cmp
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
out
and
daa
adc
rorb
dec
sbb
push
fmul
adc
sbb
pop
test
push
stos
lea
aam
mov
push
sub
mov
fildll
push
sahf
jns
out
dec
in
mov
or
push
dec
add
addb
add
jge
and
fwait
lret
push
mov
loope
xchg
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
mov
add
adc
push
repnz
fwait
push
dec
mov
sahf
dec
dec
aam
inc
addr16
cltd
xor
fcom
push
fdivrs
and
pop
jae
sbb
lahf
std
cmpsl
enter
sub
pushf
ret
xchg
lret
out
or
pop
pop
xor
inc
out
dec
add
bound
mov
add
push
test
or
push
sub
adc
lds
pop
mov
sbb
daa
adc
xorb
lea
pop
add
sbb
xlat
mov
insl
aad
mov
outsb
xor
mov
xchg
ret
push
movsl
adc
pushf
jle
jmp
mov
rcr
jecxz
xchg
test
pop
xchg
inc
mov
shll
or
rcll
lods
notb
push
aam
movsb
ljmp
push
js
xchg
xor
fwait
leave
movsb
mov
sbb
fisttpl
or
sub
icebp
jmp
cmpsl
ficoms
outsb
cmp
jns
dec
xlat
jno
lret
loop
jbe
fsubr
sbb
inc
and
cmp
sub
in
dec
jns
mov
push
test
rcrb
fcomi
aaa
sbb
pop
popf
sar
stos
test
mov
sbb
cmpsb
ja
test
shlb
pop
mov
adc
cld
test
test
xchg
cmc
movsl
popa
xlat
dec
adc
mov
sti
add
imul
sub
and
jb
outsb
movsl
ret
aaa
lahf
lret
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
cmc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
call
inc
jb
adc
orb
jecxz
pop
and
bound
pop
xchg
cld
jae
jl
or
add
push
xor
or
xchg
or
fwait
lods
lds
pop
pop
ret
adc
and
popf
test
aas
sbb
bound
lea
mov
xchg
and
ss
in
add
mov
sbb
jb
and
dec
add
xor
and
mov
rcrl
mov
into
fwait
cmp
xlat
dec
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
xor
in
scas
cmp
mov
out
dec
jae
fldt
insl
int3
imul
mov
pusha
push
dec
and
addl
jbe
lahf
aam
jne
mov
inc
push
mov
xchg
sbb
and
dec
inc
lods
aas
stos
shrb
filds
xchg
xlat
test
inc
sub
divl
sub
mov
jo
imul
lods
cmc
fdivrs
lods
enter
rorb
arpl
fwait
jmp
push
std
mov
int
mov
or
scas
jnp
or
int
imul
push
in
mov
add
test
bound
jns
ss
repnz
incl
daa
cmp
jp
add
add
mov
sbb
sub
push
testb
mov
dec
and
pop
mov
imul
adc
ret
mov
mov
aam
xchg
push
sahf
jns
loope
pop
push
xor
sub
mov
repnz
pop
shll
outsb
stos
cmpsb
dec
sub
push
mul
scas
into
adc
das
mov
in
scas
aas
test
sub
sbb
pop
jecxz
pop
mov
icebp
mov
dec
mov
pop
int
or
dec
or
cmp
scas
mov
out
hlt
xor
sub
lock
outsl
jae
fdivrp
xor
scas
adc
xabort
jg
scas
xor
into
cmpb
cwtl
inc
adc
push
out
mov
test
jae
je
and
lret
adc
or
cmp
pop
mov
sbb
cli
test
in
test
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
and
push
ret
test
pop
and
gs
sub
adc
call
clc
mov
shlb
fbld
fidivs
jb
pop
lea
dec
push
sahf
jge
call
dec
dec
fsub
fsts
push
lock
mov
stos
outsl
dec
mov
lret
adc
inc
sbb
cltd
lret
inc
push
pusha
push
cmpsl
sahf
xchg
cmp
or
icebp
cmp
mov
add
jmp
jl
mov
inc
or
je
decl
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
out
jecxz
mov
adc
inc
lock
xor
pop
xchg
push
pop
shlb
movsb
sub
das
jns
dec
pop
mov
cmp
pop
inc
in
seta
dec
dec
in
imul
sub
mov
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
cmp
adc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
push
ss
test
jns
jmp
xchg
insb
push
dec
movsl
ss
js
pop
das
rcrw
inc
and
add
or
push
or
test
mov
jb
fmul
push
lods
scas
jecxz
jnp
out
cmpsl
mov
incl
cmpl
test
pusha
leave
adc
inc
roll
xor
mov
popf
das
jnp
sbb
in
out
mov
mov
mov
ljmp
stos
mov
pushf
scas
cmp
or
out
out
cmp
adc
lods
sbb
in
and
jno
sti
xor
cmc
ret
ret
aad
shlb
add
mov
cmp
sbb
fs
add
xchg
mov
fcomip
xor
cmc
sbb
std
fistpll
cmc
mov
mov
test
sbb
subb
imul
cmp
vsubss
lods
inc
inc
int3
mov
mov
in
ja
sbb
jge
pop
enter
or
sbbl
xchg
aaa
sbb
mov
pop
xchg
fimull
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
jle
adc
push
hlt
mov
popa
dec
mov
into
scas
stos
shll
inc
xchg
in
mov
sub
test
mov
inc
mov
aaa
scas
stc
aaa
add
mov
push
ficompl
pushf
dec
and
mov
or
fisubl
cmp
inc
push
inc
dec
pop
adc
ret
mov
mov
pop
cmpsb
in
or
and
mov
mov
insb
in
push
and
movsl
push
cmc
dec
ret
inc
add
and
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
je
inc
mov
jne
mov
cmp
mov
and
adc
mov
push
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
add
and
test
mov
push
sbb
xchg
rcl
push
xor
jecxz
xor
outsb
push
jecxz
or
fiadds
dec
inc
add
faddl
sbb
sarb
jb
rcrl
cmp
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
mov
mov
push
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
les
insb
pop
mov
jno
add
addl
pusha
das
inc
out
es
das
inc
iret
shl
ja
std
outsl
addr16
call
xchg
out
cmpsl
mov
jg
repz
jns
outsb
out
sti
cwtl
inc
data16
add
add
jle
nop
inc
fs
inc
dec
adc
pop
sbb
add
mov
dec
pop
ret
fs
fwait
aaa
ja
xchg
jbe
mov
rcr
or
xchg
fistpll
or
mov
adc
jl
clc
sub
int
inc
jmp
rcrb
ficompl
jne
mov
jecxz
dec
sub
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
and
ret
int
lcall
cmp
dec
in
mov
sahf
mull
push
sub
and
scas
es
fwait
jmp
repz
bnd
outsb
or
test
sbb
lret
jl
fadd
xor
jp
in
outsl
inc
xchg
jnp
out
sti
out
xor
and
int3
cmp
fstps
cmp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
mov
ror
ret
push
sbb
ret
js
test
or
aas
test
fildl
push
push
cmpsb
ret
arpl
lds
push
sarl
test
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
sub
pop
xchg
dec
mov
stos
lods
scas
imul
jno
pop
aas
adc
mov
cmp
or
ret
loop
sbb
adc
pop
cmpsl
lret
dec
movsl
push
leave
or
movsb
and
xor
mov
mov
enter
jp
sbb
jnp
mov
mov
ficoms
cmc
mov
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
push
adc
and
insl
out
pop
sarl
jle
ljmp
dec
inc
bound
in
push
test
lock
inc
iret
mov
dec
inc
out
shlb
gs
hlt
movsl
adc
xor
int
sarl
ret
xchg
add
in
loopne
inc
jge
mov
cmp
mov
and
mov
push
adc
mov
adc
inc
inc
xor
pushf
or
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
pop
mov
mov
jmp
scas
cmp
push
leave
clc
inc
or
sbb
inc
and
movb
in
data16
lret
ret
sub
xorps
cmp
lahf
into
sbb
add
dec
xor
int
jno
popf
push
sbb
lds
xchg
sti
gs
clc
push
dec
inc
dec
dec
mov
sbb
pop
shrl
loopne
jne
dec
mov
mov
add
push
stc
jo
imul
call
push
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
in
outsb
mov
in
jg,pn
xchg
xchg
sub
jne
sbb
push
inc
ficoml
jmp
mov
in
scas
aas
test
xchg
adc
lret
int
jle
xor
dec
push
leave
inc
mov
aas
fisubs
and
or
cs
xchg
pop
test
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
popf
out
mov
xor
push
jne
les
loopne
ret
ret
sahf
imul
sbb
inc
mov
mov
subb
push
decb
push
insb
jne
jmp
lret
inc
ret
and
pop
test
mov
pop
cmp
sub
lds
jb
pop
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
sarb
int
dec
movsl
xchg
mov
fcompl
aad
xor
xor
fwait
movsb
pop
das
jle
scas
jb
ss
inc
pop
sub
push
sbb
and
imul
iret
aad
idivb
outsl
jg
dec
xchg
xor
sub
jb
sbb
fidivrs
fildll
adc
jge
fninit
outsb
jmp
in
add
pushf
xchg
ss
ss
int
inc
mov
ljmp
xor
inc
mov
call
xor
insl
mov
mov
leave
mov
lea
pop
ljmp
and
jl
pop
adc
cwtl
inc
xor
test
fs
push
cmp
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
mov
pop
cltd
xchg
inc
dec
inc
jne
dec
inc
popf
aas
stos
shrb
sub
btr
outsl
jno
lahf
data16
mov
fdivl
imul
pop
out
pop
jge
sub
and
adc
mov
test
adc
push
in
lahf
adc
pop
jp
lea
dec
sahf
loope
es
jle
fildll
dec
ret
cmp
mov
sbb
jo
or
leave
or
and
dec
mov
shl
jae
sti
or
gs
ja
sbb
daa
mov
mov
ret
inc
stc
push
push
test
in
out
enter
adc
mov
hlt
or
cmpsl
mov
stos
push
mov
lret
cli
push
scas
jnp
stos
ret
fcoms
adc
and
ror
mov
lret
repz
mov
mov
inc
mov
jp
sub
jae
int3
push
stos
ja,pn
lds
scas
icebp
lcall
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
bound
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
call
ret
inc
rorl
sbb
test
and
sub
les
push
jp
xor
divl
cmp
push
inc
add
movsl
add
rcrl
in
incb
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
fwait
das
adc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
movsl
out
cmp
movsl
mov
inc
sub
subb
jg
out
daa
dec
lock
jge
inc
xor
xchg
test
repz
and
iret
cmp
mov
jl
ds
rclb
lret
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
adc
insl
int3
nop
mov
dec
and
mov
mov
test
add
inc
sbb
shl
jecxz
movsl
mov
cltd
jo
bound
push
xchg
xchg
cltd
lret
movsl
mov
and
and
ja
dec
xlat
xchg
jecxz
mov
sbb
mov
sbb
daa
sub
insl
jo
push
imul
sub
add
and
push
pop
jmp
dec
xchg
aam
jne
insl
bound
enter
lods
adc
mov
icebp
jbe
mov
rclb
inc
adc
in
add
iret
add
arpl
int
and
int
fsubrs
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
pop
cmpsl
sti
clc
fnsave
sti
sti
and
test
mov
xchg
push
hlt
mov
xchg
test
push
lds
pop
repz
fwait
pusha
or
scas
adc
adc
sbb
cld
loop
inc
sbb
ljmp
outsl
aam
sub
jae
pop
push
mov
cmpsb
shlb
push
stos
lea
aad
lea
pop
mov
jne
cmc
fwait
inc
shrl
push
sahf
jns
loope
pop
fisubrl
inc
dec
fsub
ja
in
jg,pn
shl
je
sub
loope
leave
and
jmp
fimull
push
xor
clc
mov
aaa
fcmovnb
pusha
mov
pop
bnd
popf
rcll
inc
lret
loop
xchg
rcrb
fildl
pop
jge
add
mov
push
lret
imul
mov
mov
faddp
aaa
fbld
cmpsl
icebp
iret
movsl
cmpsb
daa
ss
xchg
cmp
push
add
xchg
and
rorl
jle
cs
xchg
and
dec
fcmove
imul
pop
push
dec
push
sbb
int
cwtl
aaa
arpl
xor
jecxz
lods
xchg
cld
fstps
out
jae
mov
rorb
je
in
iret
imul
inc
inc
xor
sbb
in
jmp
test
aaa
jns
pop
push
pushf
cmpsb
jg
in
mov
cmp
in
test
or
test
cld
sub
outsb
cmpsb
sub
mov
inc
fimull
jmp
in
int3
mov
adc
rcl
in
jo
sbb
xchg
int3
pusha
xor
rorl
dec
daa
rorl
outsl
cmp
adc
outsl
dec
call
notb
add
ret
fists
cmpl
cltd
enter
addr16
xor
in
mov
mov
adc
pop
mov
jmp
inc
pop
sbb
pop
or
push
pop
push
test
xchg
xor
popa
ret
push
xor
jo
and
out
inc
mov
sub
mov
xchg
outsb
into
push
mov
insl
aad
insl
ficomps
fldcw
stos
lea
gs
test
pop
outsb
hlt
sub
sub
xorb
movsb
mov
sbb
adc
push
aaa
or
mov
out
movsb
clc
dec
add
test
shrb
rcll
gs
dec
sbb
mov
lock
mul
mov
add
push
cmp
nop
cltd
cmp
or
and
scas
cmc
out
xor
addr16
fs
mov
inc
rcrb
jb
cmp
hlt
xor
stos
sti
add
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
aam
inc
mov
pop
jb
mov
iret
add
test
jne
push
xchg
xor
leave
add
mov
or
cmp
cmpsl
mov
arpl
lcall
push
mov
scas
shl
jae
pushf
pop
pop
pop
loope
std
lahf
and
adc
inc
cmp
fwait
push
sahf
jno
jecxz
fsubrs
ret
loop
cmp
addb
andl
hlt
cltd
pop
add
dec
loop
dec
push
mov
fcoml
dec
cltd
lods
je
int3
test
iret
mov
out
mov
lock
jle
dec
mov
loopne
push
repz
cmpb
int3
mov
idivl
outsl
outsl
and
lahf
xor
sub
in
sti
jnp
out
scas
mov
pop
fisttpll
mov
outsb
out
lahf
stc
cwtl
shll
or
add
insb
adc
fs
insb
mov
outsl
stos
sbb
cmpsb
ja
test
shlb
filds
movsl
push
mov
out
mov
clc
sti
jne
jp
mov
addb
jbe
push
aaa
scas
stc
aaa
sbb
insb
jne
inc
xor
imul
inc
ret
add
jnp
mov
es
test
sahf
cmpsl
mov
adc
enter
cmc
movsl
testb
in
aam
dec
mov
adc
lret
dec
sbb
adc
push
stos
fnsave
inc
mov
jmp
push
cltd
xchg
pop
push
mov
scas
adcb
mov
xor
cmc
xor
pop
or
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
mov
andl
sub
push
inc
inc
loope
pop
pop
out
xchg
jnp
test
loopne
int3
inc
pop
insb
adc
add
iret
ret
xlat
or
cmp
mov
adc
mov
xor
cmc
ret
ret
aad
shlb
add
mov
cmp
sbb
fs
inc
sbb
fcomip
xor
cmc
sbb
std
fistpll
cmc
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
imul
int3
inc
in
mov
scas
sub
adc
dec
cltd
mov
mov
pop
sub
mul
mov
add
mov
cli
mov
sti
arpl
dec
mov
fcoml
mov
inc
mov
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
jae
dec
mov
cmp
inc
and
xor
les
fildll
aas
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
add
pop
test
push
stos
lea
stos
int
push
fistl
sub
mov
fildll
push
sahf
jns
loope
pop
fcom
add
in
jg,pn
out
in
lret
sub
jne
insl
outsb
mov
xchg
pop
test
dec
test
pop
and
ja
pusha
xchg
mov
test
mov
repz
dec
das
add
icebp
push
xlat
mov
dec
cmp
push
mov
lea
gs
addr16
mov
pop
incb
cmp
sbb
adc
jmp
dec
push
add
add
andb
js
sbb
mov
dec
sbb
xchg
mov
pop
adc
mov
ljmp
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
arpl
cwtl
pop
push
paddd
xlat
insb
aad
insl
sub
sbb
outsb
aaa
dec
lea
jecxz
lods
shrl
imull
bound
std
shll
dec
rol
sbb
xchg
pop
push
cmp
ret
adc
sbb
mov
push
xchg
mov
test
xor
inc
xor
mov
int3
scas
inc
fs
add
and
cwtl
lock
sarb
add
mov
out
movsl
pop
popa
mov
xor
xchg
dec
pushf
inc
and
jnp
imul
jp
js
fldl
jle
fisttps
dec
cld
mov
xor
lods
scas
sbb
shrb
ret
jne
push
pop
add
inc
rorb
xor
test
in
gs
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
add
rolb
mov
cmc
mov
xchg
sub
adc
fldenv
push
cmpsl
inc
and
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
push
outsl
pop
push
loope
test
enter
lods
xchg
das
cmpsb
repz
insb
test
scas
shrb
lret
jno
das
jno
insb
loop
mov
scas
add
ret
jg
out
add
lret
jl
das
inc
iret
shl
aaa
jge
pushf
inc
and
divb
aas
xor
xchg
ret
fdivrp
pop
pop
iret
rorl
adc
and
cmp
rcl
loopne
hlt
mov
xchg
mov
add
orl
sub
xchg
rorl
pop
stos
pop
add
cwtl
dec
and
mov
mov
test
add
test
jne
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
movsl
push
jno
pop
cmp
mov
outsb
out
movsb
shll
lock
loope
pop
pop
mov
addl
mov
sub
sub
rclb
jb
lods
mov
dec
push
cmc
aas
test
fs
in
mov
jmp
popa
sti
out
lret
adc
mov
xor
cmpsb
mov
shll
push
inc
jge
outsl
ja
fucomip
js
mov
in
jp
mov
loopne
js
lock
loope
xlat
ds
test
ss
push
shll
or
lds
jbe
sub
add
sbb
dec
int3
ret
xchg
test
aam
subl
and
repz
jmp
jo
and
daa
adc
int3
dec
sbb
dec
fldcw
push
ja
addr16
inc
aas
push
inc
push
fwait
xchg
push
add
xchg
inc
pusha
pop
stc
rolb
je
fistl
jae
lret
add
in
dec
cmp
mov
inc
or
mov
xor
add
sbb
call
lds
lcall
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
out
lret
mov
xchg
clc
dec
mov
je
cmp
movsl
ret
lock
add
mov
xor
sub
ljmp
mov
inc
cmpsl
leave
stc
mov
or
mov
nop
lds
int3
xchg
es
pop
mov
inc
rclb
aam
rcrl
sub
mov
out
iret
popa
shrl
or
inc
xchg
dec
aad
or
ffree
sbb
or
inc
mov
mov
dec
gs
jle
inc
dec
stos
xchg
scas
lods
pop
imul
pop
push
mov
in
daa
push
jle
mov
mov
shrl
mov
shrb
test
push
cwtl
push
dec
xorl
jmp
lahf
fistps
inc
leave
cmpsl
push
xor
mov
push
push
or
push
enter
arpl
das
push
roll
dec
pop
or
iret
iret
jl
cmpsb
push
sbb
jbe
aas
push
and
pop
iret
inc
stos
push
shll
pop
dec
add
mov
add
and
dec
cltd
addr16
xchg
mov
push
je
test
test
aas
mov
dec
mov
rcll
mov
sub
or
lods
lea
push
loopne
mov
cmp
dec
daa
cmp
jp
add
add
mov
sbb
sub
push
testb
pushf
cld
movsb
fsubrl
stos
shl
xlat
jl
sub
jno
pop
cmp
jb
pop
adc
imul
push
outsl
and
xor
xchg
sub
jne
insl
outsb
mov
sub
xchg
clc
xor
jo
sub
cmpxchg
out
mov
jno
icebp
jle
scas
pxor
cld
repz
out
das
dec
je
inc
dec
addr16
sub
hlt
cmc
mov
mov
mov
lcall
movsb
cli
xor
daa
mov
cmp
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
xchg
fwait
rcrb
dec
lods
lock
mov
orb
daa
jb
sub
xor
divl
es
test
dec
jecxz
rol
and
js
or
push
pop
bound
push
cld
cwtl
in
outsb
xor
push
dec
repz
int
inc
ret
pop
mov
push
mov
jmp
mov
sub
pop
adc
or
xor
lret
jnp
jbe
mov
sbb
push
inc
ficoml
test
and
xchg
mov
mov
push
jb
es
add
xchg
fwait
test
rcrb
cld
inc
ret
inc
or
pop
lret
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
imul
test
xor
sti
sti
and
test
jg
adc
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
mov
outsb
xor
scas
popa
xchg
rcl
movsl
push
test
push
sub
jb
fcoml
movsb
rcrl
mov
xchg
mov
mov
cs
cmp
mov
sub
in
pop
dec
adc
sub
lods
xchg
mov
mov
and
lods
adc
fisubl
negb
dec
cwtl
jae
adc
leave
icebp
xchg
adc
es
ss
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
jns
adc
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
aaa
imul
ret
stos
out
mov
push
imul
in
movsb
mov
cs
subb
xchg
insl
aam
cmp
dec
les
inc
aad
shll
pop
shr
adc
iret
pop
test
xor
popf
jmp
and
add
mov
fwait
push
dec
mov
and
adc
mov
push
mov
inc
insl
out
pop
aad
jns
mov
call
sub
jge
sbb
jg
into
add
les
aaa
outsb
add
xchg
or
and
jbe
and
ja
adc
and
push
inc
mov
sbb
push
sbb
xchg
nop
out
xor
test
push
and
out
inc
push
xorl
push
sub
push
mov
insl
aad
or
push
inc
lahf
push
rclb
push
mov
aas
daa
jae
pushf
pusha
push
popf
mov
dec
cli
xchg
sub
pop
sub
fsubl
ja
in
xor
adcb
fadds
add
out
imul
stc
add
sbb
cltd
lret
inc
push
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
mov
inc
or
lahf
xor
aam
mov
jnp
inc
push
mov
or
xchg
and
movsl
inc
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
fstl
add
xchg
outsb
dec
sbb
xchg
cmp
repz
pop
int
push
arpl
jg
rcll
lods
cmc
dec
ret
ficoms
dec
and
jbe
push
imul
sbb
mov
push
xchg
mov
lahf
popf
fnsetpm(287
adc
sbb
jge
ror
jmp
dec
ds
je
fnstenv
aam
jl
ret
add
xchg
or
decb
fwait
int
xor
jb
fisttpll
cmp
lds
cld
stos
push
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
lods
shlb
adc
ret
das
adc
sbb
pushf
lcall
hlt
jbe
scas
out
mov
ds
pop
push
jo
jp
cmp
sbb
and
in
repnz
inc
lods
iret
xor
into
orb
or
mov
test
inc
mov
insl
cltd
aam
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
insb
mov
fistl
xor
sbb
test
lcall
daa
and
iret
mov
sbb
mov
push
lcall
scas
cmp
inc
cmpl
jae
jecxz
cmp
ret
mov
in
dec
dec
fsubl
stos
fs
cmp
mov
aam
out
cmp
mov
push
lods
subb
int3
sub
push
loopne
mov
icebp
cmp
jne
inc
movl
sbbl
cmp
es
dec
xor
and
adc
push
adc
and
jmp
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
cmc
mov
dec
imul
sbb
daa
or
xchg
push
jmp
jle
xchg
js
inc
into
push
mov
insl
in
inc
ret
cltd
jmp
loop
fsubrl
push
dec
push
mov
scas
iret
xchg
lcall
lcall
inc
test
mov
into
ss
mov
ja
aad
cmp
rorl
stos
mov
sbb
xchg
xor
jge
pop
xor
mov
mov
sbb
je
inc
mov
pop
jb
add
xchg
cmpsl
or
dec
or
mov
dec
pop
call
xchg
scas
out
jp
mov
fwait
cmpsl
xor
je
xor
mov
xchg
scas
jb
in
dec
push
lock
inc
fs
inc
dec
adc
dec
je
les
sbb
cmp
je
clc
jb
mov
xchg
jns
lret
or
stos
js
lret
test
xchg
jg
enter
lds
fistl
or
ret
gs
cltd
fs
hlt
sub
sbb
lds
jge
sub
cmc
sbb
std
fistpll
cmc
mov
mov
test
pop
or
lds
stos
xchg
stos
cmp
mov
cwtl
lods
inc
sbb
mov
lds
loop
fmull
sti
add
or
pop
cs
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
jns
arpl
cmpsb
mov
mov
jmp
std
mov
sti
and
test
pop
sub
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
cs
mov
mov
dec
mull
cltd
fbstp
repnz
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
sarb
xchg
mov
fcompl
aad
xor
xor
mov
mov
mov
mov
pop
jb
add
dec
sbb
add
or
push
mov
out
pop
int
inc
mov
jns
mov
xor
movl
mov
pop
out
adc
mov
cmp
call
movsb
lea
push
pop
pop
push
test
mov
lds
add
mov
cmp
jp
add
cltd
sub
adc
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
popf
xlat
stos
mov
rcll
pushf
pop
pop
pop
loope
lcall
stc
jnp
sahf
movsb
xchg
xor
dec
inc
jae
adc
outsl
mov
loope
pop
in
push
test
cli
imul
xchg
sbb
ja
test
loope
movsb
fstl
fdivl
cltd
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
xchg
jns
fimull
push
mov
or
in
jg
fsubs
test
xlat
stc
into
clc
rcrb
jbe
lret
out
sbb
sub
dec
push
xor
gs
adc
shll
movsb
push
imulb
je
sub
sub
stos
add
outsl
xlat
sub
sarl
dec
lahf
lret
in
data16
arpl
jae
cld
inc
daa
xchg
lret
push
fidivrl
inc
movsl
sbb
mov
mov
inc
pop
fisubrs
loop
gs
mov
jge
clc
mov
xchg
repz
mov
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
sahf
inc
mov
leave
xchg
inc
mov
push
test
or
stos
xor
xor
mov
mov
je
inc
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cwtl
mov
pop
cs
lahf
jmp
loope
lahf
stc
cwtl
shll
pop
jne
cmp
pop
push
lds
stos
les
nop
and
movsl
shrl
pop
sbb
push
inc
imul
push
push
sbb
xchg
adc
lret
hlt
xor
stos
jns
sub
cwtl
fcmovb
xchg
adcb
incb
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
fs
data16
scas
fisubrs
in
or
loop
push
and
into
xor
das
movsl
repz
test
cwtl
dec
inc
hlt
dec
lds
mov
data16
and
rclb
xchg
andl
and
int
fsubrs
repz
sub
lret
fdivrs
cli
pop
lods
inc
gs
imul
mov
mov
pop
cmpsl
sti
clc
int3
outsw
sbb
and
cmp
mov
or
or
les
rolb
mov
xchg
int
dec
arpl
fcmovbe
inc
in
sub
pop
lahf
add
sub
hlt
sbb
inc
lcall
shrb
pop
popf
add
inc
mov
jmp
cmp
ret
fmull
jne
mov
xchg
rcrb
xor
mov
mov
mov
mov
fists
in
pop
push
xchg
jl
add
bound
dec
sbb
mov
cmpsb
xor
jb
fisttpll
sbb
jle
jbe
lods
jae
jbe
pusha
mov
pop
repz
mov
pop
mov
scas
pop
out
jg
out
aas
dec
lock
rclb
push
lods
sub
inc
stc
push
test
and
ss
sub
xor
xchg
push
fimuls
repz
cmp
in
jae
xchg
pop
jle
cwtl
enter
je
fcoms
inc
pop
jp
adc
mov
sbb
bound
ret
adc
cwtl
dec
and
mov
mov
test
add
mov
xchg
mov
inc
outsl
js
sbb
cmpsl
jb
cwtl
jle
sbb
es
test
sub
mov
outsb
xor
and
xor
jno
pop
cmp
push
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
dec
xchg
jmp
lret
sbb
insl
and
inc
pop
inc
jle
mov
std
pop
dec
pop
adc
mov
in
mov
inc
fucom
or
push
xchg
add
cmp
jb
xchg
out
mov
stos
adc
pop
aam
mov
lret
in
mov
mov
or
cmp
jb
out
pop
or
cltd
inc
rol
sbb
xchg
dec
nop
sub
mov
lock
cli
int3
mov
push
nop
pop
test
loopne
notl
fistpl
sbb
jmp
idiv
arpl
cwtl
add
in
aas
inc
lods
dec
push
or
sub
or
mov
jb
mov
mov
fildll
aad
test
mov
pop
cmp
flds
adc
arpl
lds
sub
jl
sbb
fdivs
and
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
inc
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
loop
enter
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
push
mov
and
inc
inc
fcmovnu
loopne
outsl
mov
mov
mov
sbb
push
outsb
sbb
ret
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
int
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
sbbb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
dec
jmp
xor
mov
popf
dec
stc
or
rorb
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jl
jo
jb
dec
mov
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
out
scas
inc
movsl
fcompl
xchg
outsl
or
add
jbe
dec
fldcw
sbb
aas
sbb
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
mov
mov
dec
cmp
cs
aam
and
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
cmp
cwtl
jbe
mov
jbe
push
xchg
add
mov
iret
add
mov
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
pop
subb
insl
mov
pop
rcl
lcall
jb
mov
xor
inc
xor
fdecstp
js
insl
popf
scas
inc
movsl
fcompl
xchg
push
or
mov
add
push
aas
xchg
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
jns
push
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jecxz
mov
sub
xlat
inc
and
call
cmp
cltd
enter
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
cmc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lret
lea
outsb
out
mov
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lcall
or
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
cmpl
mov
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
and
nop
xlat
push
mov
jmp
sub
mov
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
jo
dec
lods
fidivs
aad
mov
aad
jmp
fxch
add
push
mov
or
sarb
clc
jb
mov
jb,pt
xor
adc
mov
int3
ret
dec
lock
pop
movsb
mov
pop
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
push
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
fucomip
jl
or
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
idivl
mov
sbb
cld
ret
loopne
dec
pop
inc
sbb
repz
sbb
and
lahf
lret
jecxz
gs
cmp
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jae
mov
data16
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sti
mov
pop
mov
mov
push
mov
mov
add
shrb
sub
das
fwait
pushf
dec
and
xchg
push
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
movsl
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
test
lcall
sub
shrl
inc
mov
mov
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
je
scas
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
or
jo
pop
dec
mov
sub
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
repnz
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
cltd
push
dec
test
dec
aam
fcoms
and
xchg
jbe
pop
jae
inc
insl
icebp
out
xchg
jecxz
mov
arpl
or
add
mov
repz
repz
sub
sbb
sub
out
jne
cmp
fmull
negl
inc
fwait
clc
lock
imul
stos
into
sbb
xlat
mov
dec
ret
fcmovne
addb
lcall
dec
mov
ss
xor
iret
mov
sbb
test
dec
jo
jnp
mov
test
movsb
sbb
sub
sbb
dec
or
bound
sbb
and
cmp
lock
mov
push
dec
add
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
or
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
or
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
or
pop
ja
stos
sub
addl
add
push
aas
and
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sar
andl
mov
mov
and
xchg
jp
dec
mov
fdivrs
outsb
sbb
lods
ret
fld1
std
jge
xchg
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
and
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
mov
adc
pop
and
inc
or
test
jle
movsl
aam
mov
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
iret
fisttps
fimull
jecxz
test
dec
shlb
jo
and
add
pop
mov
scas
sbb
fcoms
stc
leave
mov
dec
lods
mov
jnp
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
rolb
sbb
mov
sbb
and
xchg
jp
dec
pop
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
and
mov
sub
add
lahf
jle
dec
xchg
call
cmp
inc
and
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
repnz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
cmpsb
inc
cmpsl
fstp
out
mov
mov
test
enter
sbb
lret
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
ss
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
xorl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
inc
call
cmp
loopne
dec
pop
inc
scas
jmp
clc
sbb
and
lret
jecxz
gs
pop
enter
int
and
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
dec
and
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fcmove
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpl
rol
mov
mov
mov
add
daa
push
cwtl
sub
das
mov
inc
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
js
mov
mov
stos
mov
ja
pushf
test
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
push
sbb
sbb
aam
filds
int
cmpb
jnp
lret
adc
push
mov
negl
loop
leave
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
dec
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
dec
fildll
int3
mov
mov
bound
dec
out
sub
cwtl
sbb
addb
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lahf
lods
mov
mov
xchg
test
dec
mov
aad
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
ljmp
mov
push
dec
shrb
sbbb
ret
mov
jge
shll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
lods
mov
mov
push
adc
ret
outsb
pop
dec
call
int3
xor
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
psrad
jb
dec
add
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
add
scas
inc
movsl
fcompl
xchg
xchg
or
mov
add
push
aas
cmp
mov
ret
inc
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
andl
mov
mov
and
xchg
jp
dec
jne
push
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
fs
mov
sub
inc
inc
and
call
cmp
enter
cld
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
int3
push
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
rorl
shl
mov
mov
test
enter
sbb
pushf
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
shlb
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
fucomip
jl
sbbl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
jne
jb
repz
ret
loopne
dec
pop
inc
leave
jmp
clc
sbb
and
gs
jg
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
movsb
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
scas
mov
pop
inc
mov
adc
sbb
lcall
pop
push
cwtl
sub
das
sbbb
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
into
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
and
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
mov
adc
js
xchg
adc
dec
mov
cs
xorl
jns
sub
fidivl
push
gs
fwait
pop
call
pop
mov
fmuls
mov
and
and
je
and
xor
je
mov
out
mov
ficomps
into
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
mov
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
or
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cli
movsl
mov
mov
stos
mov
ja
and
shrl
inc
mov
cmp
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
push
sbb
sbb
aam
filds
int
cmpb
jnp
lret
adc
push
mov
negl
loop
leave
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
cmc
movsl
mov
mov
stos
mov
ja
push
test
test
inc
mov
shr
mov
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
les
mov
bound
dec
push
sub
lcall
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
insb
lods
mov
mov
xchg
test
dec
mov
adc
dec
mov
pop
dec
les
lods
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
stos
inc
movsb
pop
sbb
lods
mov
mov
push
adc
ret
outsb
pop
dec
ljmp
int
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jo
jb
dec
add
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
nop
jp
mov
jbe
adc
leave
mov
sbb
jmp
fisttpl
pop
or
xchg
jns
xor
pop
clc
bnd
loope
jne
std
xor
fnstenv
mov
push
cmp
jns
nop
out
test
mov
or
xor
lock
test
add
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
popf
loop
xchg
dec
adc
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
pop
mov
jnp
inc
mov
mov
adc
out
mov
sbb
loopne
aad
arpl
push
je
movsb
lea
lfs
xchg
dec
out
repz
push
imul
fwait
pop
mov
sti
call
jo
or
or
cltd
dec
or
xor
sbbb
xchg
sarl
sbb
push
repnz
movsb
fnstenv
dec
adc
mov
rcr
mov
add
test
mov
ret
int
lcall
lods
mov
mov
and
or
pop
mov
cltd
lods
inc
and
lahf
scas
mov
mov
das
loop
xchg
dec
icebp
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
or
pop
push
xchg
pop
or
stos
add
jbe
dec
fwait
push
aas
sbbb
jae
pop
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
andl
mov
mov
and
xchg
jp
dec
loop
push
sub
cmp
sbb
xchg
ret
fld1
std
jge
mov
lock
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
into
xchg
mov
sub
pop
inc
and
call
cmp
enter
movsb
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
mov
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
xchg
adc
dec
test
mov
ja
adc
lcall
ret
push
sbb
inc
cld
cmc
mov
inc
mov
fcmovne
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
cmpsl
pop
sub
mov
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
sub
and
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jno
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
cmc
push
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
test
je
mov
jecxz
inc
sbb
std
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
sti
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
dec
mov
mov
je
repz
ret
loopne
dec
pop
inc
or
repz
sbb
and
gs
pop
enter
int
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
cmp
mov
insl
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
dec
pushf
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ljmp
xor
mov
imul
xchg
add
inc
push
cwtl
sub
das
stos
pushf
dec
and
xchg
jnp
pop
stos
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sbb
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
in
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
and
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
mov
adc
js
xchg
adc
dec
mov
cs
xorl
jns
sub
fidivl
push
gs
fwait
pop
call
pop
mov
fmuls
mov
and
and
je
and
xor
je
mov
out
mov
ficomps
into
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
outsl
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lds
lcall
sub
shrl
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
ret
mov
imull
mov
mov
bound
dec
movaps
cmp
or
cmp
inc
lcall
gs
lods
xor
dec
jg
incl
sbb
scas
xchg
push
andl
inc
sarb
pusha
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
fbstp
inc
add
imul
hlt
or
les
mov
clc
push
sub
cmp
sbbb
mov
mov
les
aam
cmpsl
lods
jp
push
jb
xchg
mov
pop
lock
pop
adc
xor
mov
lcall
sub
add
cmc
cmpsb
add
inc
mov
icebp
mov
movsb
lds
nop
lds
mov
jo
test
cli
enter
mov
imul
aas
arpl
sub
xor
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
xchg
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
xchg
xor
sbb
scas
fucomi
jge
shll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
jae
bnd
int3
xor
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
loop
enter
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
push
mov
and
inc
inc
fcmovnu
loopne
outsl
mov
mov
mov
sbb
push
outsb
sbb
ret
sbb
lock
ss
fs
icebp
testb
sbb
pushl
xlat
mov
ds
int
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
andb
inc
movsb
pop
sbb
jno
xor
cltd
push
adc
ret
outsb
pop
dec
pop
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
inc
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sbbl
int3
xchg
insb
or
mov
or
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
mov
imul
test
mov
jp
dec
and
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
dec
xchg
mov
sub
fwait
inc
and
call
cmp
cltd
enter
jbe
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xchg
push
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
or
je
push
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
in
inc
inc
cmp
push
lock
shll
or
mov
sub
pushf
dec
and
leave
pop
inc
add
repnz
jns
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
scas
push
xchg
into
test
imul
pop
cltd
inc
adc
jp
adc
jge
scas
stc
xchg
sti
lds
cltd
jmp
cmp
jnp
jg
xor
icebp
mov
sub
sbb
adc
xor
mov
cmp
ror
mov
adc
fidivrl
jp
pop
push
enter
xchg
pop
mov
xlat
or
or
fldt
mov
enter
sbb
imul
inc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
mov
jmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
fucomip
jl
xorl
mov
bound
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
and
nop
xlat
push
mov
jmp
sub
mov
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
jo
dec
lods
fidivs
aad
mov
aad
jmp
fxch
add
push
mov
or
sarb
clc
jb
mov
jb,pt
xor
adc
mov
int3
ret
dec
lock
pop
movsb
mov
pop
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
out
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
fucomip
jl
xor
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
xor
mov
icebp
call
cmp
ret
loopne
dec
pop
inc
sbb
in
and
lahf
lret
jecxz
gs
enter
int
pop
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
mov
xchg
pop
lock
enter
add
push
popl
fcmovbe
sbb
fistpl
xchg
std
mull
lds
mov
scas
jg
lret
jno
shl
out
js
inc
shlb
lds
test
inc
or
jne
xchg
xchg
fwait
jmp
mov
imul
in
mov
lret
das
shrb
sub
mov
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
dec
mov
mov
popa
call
cmp
loopne
dec
pop
inc
movsl
jmp
clc
sbb
and
lahf
lret
jecxz
gs
enter
int
pushl
inc
lds
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
scas
mov
push
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
push
mov
popa
mov
mov
add
mov
xor
pushf
dec
and
xchg
cmp
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sti
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
add
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
out
mov
mov
stos
mov
ja
add
cmp
mov
sbb
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lods
fildll
add
mov
bound
dec
aas
sub
dec
sbb
addb
imul
nop
aaa
fwait
lods
gs
lods
xor
dec
jg
incl
sbb
scas
xchg
push
andl
inc
sarb
pusha
add
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
push
fbstp
inc
add
imul
hlt
or
les
mov
clc
push
sub
cmp
sbbb
mov
mov
les
aam
cmpsl
lods
jp
push
jb
xchg
mov
pop
lock
pop
adc
xor
mov
lcall
sub
add
cmc
cmpsb
add
inc
mov
icebp
mov
movsb
lds
nop
lds
mov
jo
test
cli
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
add
dec
mov
les
pop
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
sub
xor
mov
jge
rorl
xchg
jecxz
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
inc
movsb
pop
sbb
jno
push
push
cmp
ret
outsb
pop
dec
adc
bnd
int3
xor
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
out
loop
xchg
dec
xchg
adc
pusha
sarb
sub
push
mov
rcrb
mov
das
xchg
mov
pop
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
outsb
popf
scas
inc
movsl
fcompl
xchg
jle
addl
add
push
aas
cmp
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
sub
cmp
inc
out
mov
ret
fld1
std
jge
lds
lock
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xchg
mov
sub
inc
inc
and
call
cmp
testl
sbb
cltd
inc
mov
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xchg
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
add
cmpsb
inc
cmpsl
fstp
aam
mov
mov
test
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
fbstp
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
call
cmp
pop
inc
pop
jmp
clc
sbb
and
jecxz
gs
mov
int
xorl
int3
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
or
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
out
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ret
mov
pop
pop
mov
cwtl
mov
mov
add
pushf
push
cwtl
sub
das
push
pushf
dec
and
xchg
or
in
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
and
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
mov
adc
js
xchg
adc
dec
mov
cs
xorl
jns
sub
fidivl
push
gs
fwait
pop
call
pop
mov
fmuls
mov
and
and
je
and
xor
je
mov
out
mov
ficomps
into
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
aam
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
frstor
lcall
sub
test
test
inc
mov
xor
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
scas
mov
imull
mov
mov
bound
dec
mov
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
popa
lods
mov
mov
xchg
test
dec
mov
mov
dec
lret
pop
dec
les
fwait
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
sbb
jno
pop
push
cmp
ret
outsb
pop
dec
lods
jmp
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
xchg
jo
jb
dec
adc
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
popf
scas
inc
movsl
fcompl
xchg
mov
addl
add
push
aas
iret
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
dec
test
sub
cmp
sbb
cmpsl
ret
fld1
std
jge
jns
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adc
sub
xchg
mov
mov
and
call
cmp
enter
mov
lea
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
mov
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
xchg
adc
dec
test
mov
ja
adc
lcall
ret
push
sbb
inc
cld
cmc
mov
inc
mov
fcmovne
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
cmpsl
pop
sub
mov
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
aad
mov
sub
cmp
lahf
jle
dec
fsubrp
jb
js
cmp
enter
jno
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
int
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmp
fcmovnu
out
mov
enter
sbb
cmp
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmc
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
fucomip
jl
adcl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
idivl
jb
repz
ret
loopne
dec
pop
inc
scas
jmp
clc
sbb
and
lahf
lret
jecxz
gs
sub
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
jo
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jg
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
loop
mov
aaa
mov
mov
mov
add
shrb
cwtl
sub
das
dec
pushf
dec
and
xchg
pop
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
xor
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
movsl
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jecxz
mov
mov
stos
mov
ja
test
test
inc
mov
adc
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
enter
mov
imul
mov
bound
dec
stos
sub
aad
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
int3
lods
mov
mov
xchg
test
dec
mov
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
cwtl
test
xor
sbb
loopne
fucomi
jge
rcll
inc
fwait
push
shlb
jae
sub
jns
jle
xchg
sub
cs
or
mov
clc
push
fdivrs
aam
inc
and
lret
gs
repz
or
xor
fcoml
mov
rcll
adc
xchg
cltd
pop
inc
stos
dec
scas
or
dec
pop
jnp
enter
jbe
mov
cli
pop
lods
pop
sub
out
ds
jp
movsb
fnstenv
hlt
or
aad
or
and
nop
addr16
sbb
xchg
mov
rcrb
mov
inc
mov
sbb
scas
xchg
sbb
in
bound
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
and
xor
sbb
pop
fucomi
jge
shrl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
inc
movsb
pop
sbb
jno
punpckhbw
ret
ret
outsb
pop
dec
xchg
bnd
int3
xor
mov
popf
dec
stc
jmp
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fsub
jo
jb
dec
ljmp
adc
pusha
sarb
sub
push
mov
rclb
movsl
ret
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
or
fcompl
xchg
dec
or
data16
jbe
dec
in
push
aas
lret
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
test
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fsts
sub
xchg
mov
pop
inc
and
call
cmp
enter
pop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
fcomps
imul
fwait
lea
mov
inc
adc
sub
sub
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
lea
insl
out
mov
enter
sbb
jae
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
push
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
loop
repz
ret
loopne
dec
pop
inc
mov
repz
sbb
and
lahf
lret
jecxz
gs
test
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
gs
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
je
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
aaa
mov
loop
ret
mov
add
loop
xor
pushf
dec
and
xchg
xchg
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
shufps
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
or
cwtl
outsb
mov
movl
mov
push
xchg
mov
fsts
sarl
aas
out
and
adc
and
or
mov
mov
test
int3
sub
mov
push
xchg
mov
pop
adc
sbbl
jns
cs
pop
mov
mov
cmp
sbb
into
add
shrl
sub
das
repz
dec
and
xchg
lods
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
adc
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
adc
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
clc
movsl
mov
mov
stos
mov
ja
add
cmp
pop
inc
jecxz
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
fs
mov
bound
dec
lea
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jecxz
mov
mov
xchg
test
dec
mov
loop
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
jle
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sub
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sub
jo
jb
dec
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
scas
inc
movsl
fcompl
xchg
push
or
push
add
jbe
dec
lock
aas
mov
mov
ret
mov
lahf
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
shll
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
outsb
mov
in
iret
inc
sbb
pop
sbb
idivb
aad
mov
cs
lret
fisttpll
lcall
pop
in
mov
testl
xchg
mov
xor
ret
cmp
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
add
pop
std
xchg
mov
adc
pop
add
jbe
dec
pushf
push
aas
jno
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
sbb
mov
sbb
andl
dec
mov
fdivrs
rcrb
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
movsl
xchg
mov
sub
adc
lahf
jle
dec
fsubr
jb
js
cmp
enter
push
int3
pop
sub
push
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
iret
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
lods
push
or
int
imul
push
sub
je
mov
out
repz
inc
or
mov
aas
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
add
fisttpl
test
enter
sbb
inc
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmpsb
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
fucomip
jl
orl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
icebp
call
cmp
loopne
dec
pop
inc
ja
repz
sbb
and
lret
jecxz
gs
loope
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
pop
mov
int
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
lahf
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
inc
mov
pop
gs
mov
pop
mov
mov
add
imulb
cwtl
sub
das
lret
and
xchg
scas
lret
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lods
movsl
mov
mov
stos
mov
ja
sahf
test
test
inc
mov
ds
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
adc
fldt
arpl
add
xchg
dec
inc
shlb
or
imul
nop
aas
fwait
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
outsl
cmpsl
xchg
test
dec
mov
fiadds
dec
in
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
les
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
pop
jmp
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pop
loop
xchg
dec
inc
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
adc
scas
inc
movsl
fcompl
xchg
or
adc
scas
add
jbe
dec
push
push
aas
int3
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
mov
aas
popl
lods
sbb
in
and
xchg
jp
dec
or
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jne
mov
sub
and
lahf
jle
dec
test
fdivrl
sahf
cltd
enter
insl
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
dec
push
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
lea
lods
out
mov
enter
sbb
cmp
inc
cli
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
orl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
idivl
inc
call
cmp
pop
inc
push
jmp
clc
sbb
and
gs
push
enter
int
adc
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
ds
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sbb
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sub
pop
mov
jbe
xchg
mov
mov
add
cli
push
cwtl
sub
das
ret
and
xchg
loop
pop
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
and
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
ror
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
pop
lcall
sub
test
test
inc
mov
adc
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
nop
fildll
ss
mov
bound
dec
bound
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
mov
xchg
test
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
jne
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
dec
loop
xchg
dec
mov
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jns
scas
inc
movsl
fcompl
xchg
mov
addl
add
push
aas
push
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rol
andl
mov
mov
and
xchg
jp
dec
jge
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
push
xchg
mov
sub
jno
and
call
cmp
enter
insl
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
std
pop
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sub
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
push
fstp
mul
mov
mov
test
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
test
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
sbbl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
pop
call
cmp
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
lahf
lret
jecxz
gs
and
int
outsb
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
mov
loope
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
or
pop
add
mov
jbe
dec
mov
mov
add
bound
cwtl
sub
das
pop
pushf
dec
and
xchg
mov
in
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
dec
movsl
mov
mov
stos
mov
ja
push
test
test
inc
mov
xchg
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
in
fildll
mov
pop
mov
bound
dec
cmpsb
sub
call
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
fisubrl
jo
add
xchg
push
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
inc
jmp
xor
and
sub
inc
sbb
mov
test
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
repnz
xchg
dec
movaps
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jno
scas
inc
movsl
fcompl
xchg
adc
addl
add
push
aas
sbbl
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
shll
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
outsb
mov
in
iret
inc
sbb
pop
sbb
idivb
aad
mov
cs
lret
fisttpll
lcall
pop
in
mov
testl
xchg
mov
xor
ret
cmp
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
insb
popf
scas
inc
movsl
fcompl
xchg
mov
adc
xchg
add
jbe
dec
in
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
ror
andl
mov
mov
and
xchg
jp
dec
cmp
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cmp
sub
sub
mov
lahf
jle
dec
aam
jb
js
cmp
inc
pop
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
sbb
imul
fwait
lea
mov
inc
adc
sub
jae
or
int
imul
push
sub
jo
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
fucomi
out
mov
enter
sbb
sub
inc
mov
fmuls
in
rcrb
xchg
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
or
fucomip
jl
orl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
push
call
cmp
ret
loopne
dec
pop
inc
sub
clc
sbb
and
lret
jecxz
gs
push
enter
int
dec
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
cld
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
fwait
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpsb
mov
pop
add
mov
or
cmp
add
stc
push
cwtl
sub
das
jmp
dec
and
xchg
push
lret
fsubr
test
xchg
leave
pusha
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
cmc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
sub
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aad
mov
mov
stos
mov
ja
shrl
cmp
mov
cmpsl
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
loope
pusha
mov
stos
in
fsincos
cltd
out
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
or
sbb
xchg
adc
data16
push
fidivrl
into
ss
xorb
or
and
pop
cmpsb
fcomi
sti
jne
loope
enter
out
pop
ret
rcl
dec
inc
sbb
xor
cmp
das
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
dec
movsl
mov
mov
stos
mov
ja
fildll
cmp
inc
mov
xor
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
loope
pusha
mov
stos
in
fsincos
cltd
out
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
or
sbb
xchg
adc
data16
push
fidivrl
into
ss
xorb
or
and
pop
cmpsb
fcomi
sti
jne
loope
enter
out
pop
ret
rcl
dec
inc
sbb
xor
cmp
das
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
add
lcall
sub
test
test
inc
mov
cmp
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sub
scas
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
or
dec
imulb
pop
dec
les
mov
dec
mov
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
rorl
mov
push
gs
aam
mov
stc
sahf
insl
cmp
ljmp
lods
fnsave
xor
adc
jnp
mov
jns
outsl
inc
sbb
add
mov
xchg
mov
mov
adc
test
push
adc
cmc
sbb
pusha
test
mov
mov
xchg
test
dec
mov
cmp
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
cmc
test
xor
sbb
mov
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
jmp
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cmp
or
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
nop
jp
mov
jbe
adc
leave
mov
sbb
jmp
fisttpl
pop
or
xchg
jns
xor
pop
clc
bnd
loope
jne
std
xor
fnstenv
mov
push
cmp
jns
nop
out
test
mov
or
xor
lock
test
add
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sti
loop
xchg
dec
sub
adc
pusha
sarb
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
popf
scas
inc
movsl
fcompl
xchg
mov
adc
adc
add
push
aas
ret
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
pushf
and
xchg
jp
dec
aad
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
and
sub
xchg
mov
scas
inc
and
call
cmp
enter
cwtl
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
lret
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmpsl
lea
icebp
out
mov
enter
sbb
mov
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
iret
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
jmp
mov
lahf
aam
xor
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
dec
call
cmp
ret
loopne
dec
pop
inc
arpl
repz
sbb
and
gs
adc
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
icebp
mov
pop
je
mov
push
sbb
flds
or
sbb
push
cwtl
sub
das
lret
pushf
dec
and
xchg
inc
lret
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
call
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
pushf
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
out
mov
mov
stos
mov
ja
mov
push
cmp
pop
inc
aad
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
loope
pusha
mov
stos
in
fsincos
cltd
out
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
or
sbb
xchg
adc
data16
push
fidivrl
into
ss
xorb
or
and
pop
cmpsb
fcomi
sti
jne
loope
enter
out
pop
ret
rcl
dec
inc
sbb
xor
cmp
das
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
call
pop
lcall
sub
test
test
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
stc
sub
pop
sbb
addb
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
xor
stos
mov
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
ds
xor
sbb
test
fucomi
jge
sarl
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
and
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
fwait
loop
xchg
dec
shrb
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jg
enter
mov
inc
or
int
inc
sbb
pop
inc
test
dec
shlb
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
rclb
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
pop
xchg
stos
or
lar
jbe
dec
punpckhbw
sbb
aas
hlt
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
loop
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
dec
xor
mov
sbb
insb
push
push
xchg
cmpsl
inc
sub
lret
xchg
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
sbb
mov
sbb
lahf
and
xchg
jp
dec
mov
push
sub
cmp
sbb
sub
fld1
std
jge
sbb
lock
mov
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
mul
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
xchg
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
inc
mov
mov
jmp
dec
shl
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
ret
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
push
xchg
mov
sub
popl
lahf
jle
dec
cmp
jb
js
cmp
inc
sahf
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jge
mov
xor
ljmp
repnz
loopne
xchg
pop
push
add
xlat
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
and
lret
lods
repnz
dec
subb
push
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
ror
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
imul
mov
inc
adc
sub
jmp
dec
mov
fisubrs
popf
xchg
adc
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
aaa
or
dec
push
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
push
popf
push
jnp
stos
dec
rol
jl
jnp
hlt
stos
jae
or
add
sub
cwtl
inc
mov
dec
add
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
les
mov
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xor
fisttpl
je
xor
jecxz
inc
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
je
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
inc
push
movsb
ret
cli
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
lds
mov
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
sbbl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fisubrl
inc
in
mov
insb
ja
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
icebp
lcall
movb
inc
pop
mov
scas
jno
mov
sub
pop
push
inc
xlat
in
sti
test
scas
dec
add
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
adc
ljmp
pop
mov
gs
insl
mov
repz
and
sub
add
mov
in
idivl
adc
repz
ret
loopne
dec
pop
inc
enter
sbb
and
lahf
lret
jecxz
gs
pop
enter
int
dec
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrb
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
jo
sbb
in
inc
mov
mov
lods
jo
leave
icebp
cmp
fiaddl
mov
add
xchg
inc
push
and
lods
dec
subb
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
xchg
lds
xchg
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
adc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
hlt
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
jb
fwait
add
enter
cmpl
in
ja
or
dec
jmp
inc
test
or
nop
inc
aam
and
add
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
enter
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
arpl
pop
push
mov
scas
mov
mov
add
clc
push
cwtl
sub
das
ds
dec
and
xchg
adc
pop
stos
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
hlt
sbb
sbb
test
mov
pop
icebp
imul
inc
push
movsl
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
leave
xchg
inc
mov
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
rorl
fwait
lods
mov
jbe
xor
loope
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
or
pop
movsl
jp
mov
pop
scas
fsubr
pop
fisubs
movb
scas
fcmovnb
enter
scas
test
pop
aam
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
insl
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
or
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
mulb
lahf
push
pop
xchg
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
cmc
cwtl
test
xchg
fwait
push
int3
ret
ret
sbb
mov
stc
insl
lsl
call
inc
aad
bound
add
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
lret
shll
fisubl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
lcall
sub
test
test
inc
mov
fucomip
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
jo
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
stos
js
sbb
xchg
push
into
ret
test
movsl
je
enter
push
adc
add
mov
orl
mov
test
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
scas
mov
imull
mov
mov
bound
dec
dec
sub
aas
sbb
addb
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
scas
jp
cltd
add
mov
outsl
ror
add
sti
in
mov
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
int3
adc
adc
leave
ret
inc
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lock
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
jecxz
ror
cmpb
jmp
sarb
popf
xchg
pop
adc
sub
push
mov
cmpsb
ret
imul
mov
test
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
test
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
push
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
jns
jle
xchg
sub
cs
or
mov
clc
push
fdivrs
aam
inc
and
lret
gs
repz
or
xor
fcoml
mov
rcll
adc
xchg
cltd
pop
inc
stos
dec
scas
or
dec
pop
jnp
enter
jbe
mov
cli
pop
lods
pop
sub
out
ds
jp
movsb
fnstenv
hlt
or
aad
or
and
nop
addr16
sbb
xchg
mov
rcrb
mov
inc
mov
sbb
scas
xchg
sbb
in
bound
sbb
and
cmp
lock
mov
push
dec
sbb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jbe
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivrl
lods
cltd
pop
pop
minps
imul
out
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
into
adc
scas
ret
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
fwait
pusha
cli
pop
inc
arpl
iret
cmpl
js
lret
lock
fiadds
dec
inc
push
orb
or
ret
xchg
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
lods
ret
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
popf
or
mov
dec
jmp
sbb
cld
mov
fs
xor
push
or
std
jle
cmp
or
add
xchg
int
stos
xchg
xchg
sti
mov
cmp
xchg
mov
pusha
outsl
lahf
ret
pop
mov
pop
cmpsb
mov
out
or
aam
inc
ret
dec
push
or
shll
jbe
testb
mull
mov
fcomps
cmp
dec
pop
and
insl
xor
mov
mov
hlt
inc
mov
call
dec
jecxz
jb
push
decb
pop
shlb
pop
cwtl
arpl
and
jno
test
sub
add
jmp
xchg
mov
sbb
lcall
ljmp
std
idivb
imul
push
mov
mov
out
and
push
push
leave
mov
jp
bnd
cmpsl
sahf
push
fwait
leave
in
and
push
mov
in
mov
pop
mov
dec
in
push
daa
xchg
fisttps
test
adc
mov
ljmp
inc
fists
dec
jp
fwait
lea
sbb
aas
popf
iret
iret
push
or
aam
dec
add
jl
mov
ror
repnz
mov
inc
pop
inc
xor
or
add
enter
inc
divl
pop
or
add
xor
fnstsw
or
dec
or
pop
mov
cmp
jo
pop
dec
push
mov
lret
inc
add
fadd
adc
scas
add
shrl
mov
fisttps
dec
mov
xor
xchg
int
mov
xchg
orl
xchg
dec
bound
jns
push
ja
or
push
fistpl
push
pop
push
loopne
xchg
cmp
inc
inc
lahf
jae
inc
pusha
sti
jmp
xchg
inc
fwait
imul
add
push
mov
pushl
ret
rcr
push
sahf
mov
xchg
push
movsl
ret
dec
inc
xchg
leave
movsb
inc
jne
sbb
jo
fsts
pop
clc
and
in
jns
cltd
dec
inc
fstps
jae
enter
int3
push
sbb
lret
push
cmp
cwtl
cmc
xor
pop
das
or
ficoms
std
dec
adc
inc
rorl
inc
mov
fisubs
andb
jnp
xchg
cs
mov
fwait
xchg
sbb
add
lret
cmp
lret
inc
stos
mov
jmp
lds
lods
push
dec
jb
stc
mov
pop
sbb
outsb
pop
popf
imul
xchg
fcomps
arpl
scas
push
sbb
sub
inc
mov
test
pop
arpl
lret
dec
stc
xchg
inc
adc
mov
sub
lahf
inc
fwait
leave
ss
out
xcrypt-cbc
cmpsl
xlat
mov
sub
inc
add
adc
daa
dec
cmc
jp
inc
cmp
cmp
push
mov
pop
lods
pop
mov
cmp
into
imul
xor
daa
enter
insb
aaa
popa
mov
push
sub
mov
cmc
clc
dec
imulb
andb
adc
sti
mov
out
mov
enter
inc
divl
cwtl
or
add
xor
ret
popf
pop
or
pop
imul
fldl
sbb
jl
pop
adc
aam
xor
mov
inc
stos
cwtl
adc
scas
add
lods
gs
mov
mov
sahf
das
xchg
stc
cli
in
test
or
xchg
dec
jae
cmpsl
lock
or
or
mov
stos
hlt
mov
sbb
xor
push
pop
test
push
mov
jmp
mov
push
mov
ret
scas
outsb
add
lahf
or
adc
rclb
cmpsl
jb
inc
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
fdivrl
jnp
mov
iret
insl
lcall
into
inc
mov
dec
dec
mov
sbb
imul
out
pop
ret
cmp
mov
add
adc
pop
mov
loopne
ljmp
sbbl
jnp
sahf
rcrb
lock
adc
lret
pop
shlb
mov
sbb
jge
out
cmp
mov
push
in
dec
scas
lret
pop
adc
mov
mov
out
cmpsl
mov
or
cmp
adc
sbb
mov
les
jge
or
scas
cmp
mov
xchg
mov
add
pusha
cmp
in
int
out
xlat
fcoml
sti
and
xchg
add
mov
jns
xchg
fildll
dec
and
mov
lods
adc
insl
jecxz
test
test
bound
or
jmp
and
mov
mov
leave
sbb
sub
movsl
push
hlt
mov
xor
int
mov
lea
shrb
sub
loopne
mov
in
lea
dec
adc
jno
pusha
jbe
add
insl
adc
aad
pushf
ret
pop
pop
dec
test
jno
or
jle
add
scas
fdivl
jge
sbb
ljmp
sar
pop
inc
shrb
mov
sbb
addb
mov
jo
movsl
sbb
lcall
xchg
mov
enter
jp
sub
cmp
cmp
call
shl
cmp
mov
inc
xchg
mov
inc
cmc
addr16
mov
push
mov
adc
mov
lret
in
mov
mov
or
pop
fdivrl
jnp
mov
iret
insl
lcall
jecxz
adc
push
imul
pop
push
pop
push
or
cwtl
test
aaa
jmp
les
cmpl
dec
lahf
lret
in
ret
mov
or
jl
adc
mov
cltd
mov
mov
ss
dec
and
rorl
or
incl
xor
push
in
int
les
nop
pushf
cmp
mov
std
mov
inc
mov
cmpsb
mov
fisubrl
sbb
std
inc
daa
inc
sahf
fs
test
loop
data16
icebp
adc
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
lock
sbb
lcall
int
popf
cltd
lret
inc
aam
fistpl
icebp
dec
mov
xchg
imul
stos
adc
mov
iret
inc
mov
mov
shl
inc
popf
pop
out
add
or
pop
ret
mov
fldl
int3
adc
js
test
or
pop
or
repz
ret
pop
jne
mov
jns
cmpsl
std
mov
incl
adcl
ret
cmp
lret
iret
repz
cmp
dec
mov
lret
mov
cli
test
fidivl
add
mov
xor
lret
xchg
xorb
ret
cmpsb
in
lret
mov
push
lcall
jge
mov
ret
pop
dec
mov
movsl
and
add
pop
push
clc
push
mov
fidivs
jp
pop
std
and
adc
leave
sbb
rclb
push
or
and
xor
fmuls
xchg
dec
cmp
mov
add
dec
pushl
xchg
lods
bound
xor
clc
sbb
int3
push
cltd
enter
repz
insb
in
mov
mov
lea
outsb
aam
mov
negl
xchg
xchg
mov
inc
mov
and
and
sbb
dec
sbb
sti
mov
jecxz
push
xchg
xor
jle
adc
mull
mov
sbb
sub
imulb
and
mov
mov
adc
flds
dec
inc
fucomip
repnz
psubsw
fucom
cli
mov
cld
lods
dec
bound
fcoms
fsubrl
xchg
stos
enter
cmp
scas
xchg
mov
adc
dec
mov
fsts
les
mov
pusha
mov
push
inc
fwait
mov
cmp
pop
sub
inc
add
sbb
subb
jmp
faddl
inc
stos
adc
mov
adc
xchg
jbe
rcrl
pop
lahf
lods
lea
aad
sti
mov
push
sub
imul
and
jle
mov
mov
popf
xchg
out
lock
sbb
aad
repz
pop
mov
jne
loop
fbld
mov
lock
pop
adc
iret
pop
adc
push
dec
mov
js
or
mov
aam
sub
cmpsl
lahf
cwtl
stc
pushf
dec
subl
adc
lret
movsb
push
sub
xor
lods
inc
fs
jae
repz
mov
fs
jae
aam
mov
adc
imul
jge
push
cmpsl
and
sub
test
push
cltd
sub
mov
push
inc
sbb
loop
sub
mov
or
or
push
pop
cmpsl
jne
sub
lock
negl
fistps
fsubl
sub
pop
mov
jmp
out
call
inc
cltd
addr16
gs
in
pop
sub
ljmp
mov
daa
jb
lret
adc
rclb
cwtl
dec
and
mov
mov
test
filds
clc
ss
xor
rcrb
mov
sbb
cltd
nop
addr16
sbb
dec
ret
int3
adc
mov
outsl
pop
mov
fldenv
mov
movl
pop
xor
test
pop
imull
roll
inc
scas
xchg
ficoml
fiadds
mov
fwait
mov
dec
movsb
push
int3
clc
xchg
add
lahf
push
xchg
mov
incl
enter
cmp
add
ds
pop
repz
push
pop
fimull
or
xchg
iret
fucomp
xchg
mov
scas
xchg
cmp
cmp
and
call
pop
adc
add
xor
addr16
or
xchg
aaa
imul
xor
imul
rorl
insl
sub
push
pop
rcll
pop
repz
lods
lods
mov
xorl
jmp
mull
leave
xchg
out
mov
pop
imul
inc
mov
mov
jge
fs
sbb
ja
dec
aas
push
inc
push
and
lcall
or
sbb
inc
and
push
and
js
les
sbb
sbb
dec
scas
xchg
stos
mov
xchg
push
adc
push
mov
add
push
cltd
dec
push
pusha
jnp
xor
mov
leave
loop
xchg
lret
add
pop
adc
adc
add
push
cmp
inc
std
pop
pop
xchg
lcall
inc
out
loop
cmp
jb
fwait
lea
xor
sub
jecxz
test
push
or
fldt
cmp
scas
mov
aam
adc
and
sub
push
mov
pop
cmc
lock
mov
push
rol
sbb
sub
movsl
leave
fsubrl
repnz
pop
adc
and
jne
dec
sahf
cwtl
stos
push
test
mov
mov
and
cmp
xchg
pusha
std
test
lods
lret
inc
ret
pop
sub
nop
pop
aas
sub
xchg
int
inc
mov
stos
rsm
mov
mov
loopne
or
mov
loopne
lahf
scas
fisttps
js
mov
out
test
cmp
rolb
imull
test
ljmp
xchg
inc
push
mov
or
mov
sub
stos
negb
inc
leave
test
mov
jb
sti
cmc
fwait
xchg
iret
sbb
test
inc
sub
mov
add
inc
dec
cmpsb
jne
fsubr
mov
adc
lods
pop
das
or
shll
mov
pop
hlt
aas
movl
pop
or
aas
int3
ss
rcrl
sbb
ja
bound
xor
sbb
leave
out
inc
sub
mov
das
sarb
sub
push
stos
push
ret
push
gs
repnz
xor
cli
mov
lds
cmp
cmp
xchg
in
jbe
addr16
loopne
mov
push
sub
lcall
sbb
mov
in
add
sbb
repnz
jge
sarl
sub
test
adc
idiv
push
sti
adc
rcr
mov
or
cmpsb
cmp
sahf
dec
fsubrs
pop
push
pop
mov
aas
inc
cmc
jmp
and
mov
dec
rcrb
inc
jmp
jecxz
and
xor
popf
inc
cs
int
pop
cmpsb
xchg
jmp
or
mov
addb
pop
loopne
mov
clc
sub
pop
sbb
sbb
sahf
ds
pop
andb
nop
fcmovnu
in
ja
pop
adc
imulb
xor
dec
sbb
mov
test
adc
sbb
insb
inc
pop
jp
mov
and
mov
and
icebp
roll
sbbb
test
inc
sbb
sbb
inc
mov
xor
stos
inc
into
sbb
mov
xchg
xchg
inc
sbb
ret
jecxz
cmp
and
scas
jg
stc
idivl
and
rcrb
icebp
jl
lods
mov
in
ficoms
xchg
int
incl
stos
sbb
mov
fsubr
jbe
inc
sub
add
push
fwait
int
inc
cmc
sahf
or
dec
rep
add
jp
sbb
mov
inc
or
xor
xor
mov
push
mov
add
or
pop
test
or
fsubl
sbb
add
jmp
lret
or
lret
stos
cmp
pusha
xor
dec
cmp
xlat
or
push
test
ret
ss
sahf
sbb
fisttps
in
inc
insb
or
flds
lds
idivl
mov
cmp
gs
scas
cmp
xor
sub
fcompl
dec
mov
sar
mov
pop
xor
pop
inc
shlb
add
xchg
sbb
sahf
out
pop
adc
push
lods
daa
enter
mov
fistpl
js
in
pop
in
cmp
data16
jne
xchg
int
xor
int
and
movsl
dec
mov
jl
dec
mov
xor
push
xchg
jmp
fcomip
hlt
sbb
das
jge
mov
pop
fadds
cmovbe
mov
xor
add
mov
mov
repz
inc
inc
mov
fmulp
mov
push
sub
sbb
add
mov
or
sbb
add
je
stos
mov
ja
repz
pop
test
sbb
out
mov
and
push
inc
data16
scas
icebp
or
xchg
cwtl
push
testb
pop
inc
mov
or
pop
inc
cltd
xchg
adc
shrb
cli
sbb
xor
mov
and
push
repz
loop
repz
clc
rcrb
call
pop
or
add
mov
mov
fwait
push
mov
cmp
mov
sti
fldenv
sbb
jge
in
ret
enter
dec
inc
je
mov
inc
sbb
sbb
lret
mov
dec
sbb
sbb
lea
xor
inc
inc
pop
rorb
mov
and
insl
mov
inc
mov
xor
sar
mov
jbe
mov
mov
mov
pop
nop
nop
or
add
xor
cmp
dec
inc
push
and
std
xlat
cmp
inc
dec
popa
fnsave
mov
sbb
xadd
ret
sub
retw
inc
pop
mov
rolb
movsb
rorb
iret
push
adc
aas
out
shrb
loopne
push
mov
enter
stc
dec
bnd
scas
xlat
mov
loop
push
xchg
mov
add
mov
arpl
mov
aam
mov
jnp
inc
push
mov
xchg
sbb
and
data16
xor
movswl
jmp
std
mov
sti
and
test
push
or
icebp
mov
xchg
cmp
or
aas
ljmp
push
mov
arpl
fsubrs
popf
mov
cmp
jp
add
mov
mov
add
ret
push
lods
xchg
sub
adc
repz
sahf
les
inc
mov
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
invd
mov
shlb
scas
xchg
ficoml
lcall
jge
pop
movsl
nop
aaa
mov
sbb
cwtl
popf
adc
cmpsl
push
pop
lret
push
enter
cwtl
sbb
rolb
and
or
add
decl
jnp
inc
push
mov
pop
xor
gs
mov
inc
sbb
mov
jne
fnstcw
mov
mov
cwtl
mov
mov
cmpb
xchg
sub
sub
in
cmc
fisubrs
sub
out
and
sbb
pop
call
inc
sahf
sub
mov
pop
add
xchg
xor
inc
or
inc
movsl
xchg
sub
pushf
ret
pop
pushf
dec
test
xor
xlat
dec
sbb
xlat
or
inc
shrl
ret
fucom
jmp
ljmp
and
mov
pop
sub
mov
jae
or
sbb
ja
lret
stos
add
sqrtps
pop
cmpsl
pop
pusha
jbe
mov
or
ficoms
ficompl
and
xor
add
js
sub
cmovne
repnz
cmp
push
mov
pop
xor
insl
in
imul
insl
fdivr
sbb
jmp
std
mov
sti
and
or
xlat
mov
insb
push
test
pop
out
mov
cmp
in
cmc
hlt
mov
mov
arpl
int
popf
sub
cmpl
adc
movsl
add
mov
lock
lock
sub
jl
repnz
fwait
sarb
rcr
push
mov
sub
cmp
sub
cmc
sbb
inc
out
lods
mov
popf
imul
mov
shlb
fwait
xchg
stos
aad
shlb
sbb
fcoms
cmp
pop
jp
mov
test
sbb
cmp
mov
and
push
pop
lcall
add
ja
sarb
fcoms
test
fstpl
push
xchg
inc
iret
imul
sbb
pop
mov
cmp
je
pop
mov
movsl
in
and
loopne
jecxz
mov
inc
or
cmp
fadd
mov
imul
clc
js
test
orb
icebp
fdivrs
or
jns
cltd
mov
add
mov
cmp
jp
add
adc
and
lcall
push
jo
ja
out
pushf
mov
lock
jns
insb
push
or
shrl
sbb
xchg
mov
stc
cli
in
test
or
xchg
into
adc
les
ss
mov
mov
int3
mov
mov
dec
test
fcoml
pop
fisubrs
js
popf
enter
out
xchg
iret
inc
das
add
out
add
rcl
adcb
je
adc
inc
test
xchg
jmp
movsb
mov
int3
inc
fimull
rolb
rorl
mov
lea
mov
repz
sub
cmp
fidivrl
add
orl
addl
mov
push
sub
sub
fucomip
repz
inc
hlt
xchg
mov
inc
jnp
sahf
fwait
inc
arpl
adc
flds
inc
imul
icebp
ss
xchg
sub
and
les
inc
lahf
mov
aaa
xchg
push
jp
cmc
mov
insb
or
lds
int
int3
mov
xor
or
movsl
xor
sbb
test
cmp
cmp
sbb
xor
jae
sbb
mov
in
inc
or
xlat
mov
dec
in
dec
add
inc
xor
or
and
mov
movsl
cmp
loop
sbb
push
jo
sub
std
push
xchg
cltd
mov
dec
jg
subl
stos
in
jmp
cs
fmull
and
loopne
call
pop
sub
fdivrl
pause
push
loope
dec
fdivr
into
mov
outsb
sub
mov
test
jno
stc
and
lahf
inc
sbb
sarb
pusha
jb
les
stos
jnp
ss
imul
notl
lahf
pop
lock
shlb
push
xchg
sbb
xor
mov
xchg
jl
cmpsl
and
pop
cmpsl
cmpsb
ja
cmp
cmp
int
xor
push
and
int3
cmp
leave
loop
and
sub
hlt
sbb
mov
test
xchg
sub
mov
lea
test
jge
ljmp
cmp
call
iret
inc
mov
cmpsl
js
or
cmc
dec
loope
and
sti
inc
sbb
mov
shlb
ljmp
or
or
mov
pop
daa
xchg
sub
mov
in
sub
out
cmpsl
push
sub
cwtl
add
sub
test
sbb
leave
aam
xor
aas
bound
cwtl
arpl
test
clc
sub
xor
cmc
sbb
dec
jle
xchg
pop
les
negl
dec
mov
das
sbb
mov
jl
rcll
lods
pop
int3
mov
mov
aad
pop
pop
inc
jmp
push
inc
jmp
loop
and
sub
sbb
aas
js
or
push
icebp
or
les
xchg
sub
mov
xchg
ds
or
mov
cmp
cmp
xlat
push
out
enter
push
je
inc
shlb
es
inc
pop
cmp
fisubs
aam
test
cmc
inc
or
pop
test
mov
mov
mov
test
clc
sub
push
pushf
cmp
adc
jbe
push
xchg
mov
dec
jno
dec
xor
dec
sbb
in
mov
popf
je
ds
fcmovne
out
sbb
movsl
jge
dec
jle
cmpsl
mov
popf
ljmp
mov
scas
mov
test
das
jl
fcmovnbe
push
dec
sbb
jb
lods
ss
sarl
lds
pushf
shl
fistps
sahf
xchg
fwait
push
push
mov
shlb
dec
xchg
push
out
idiv
subl
jecxz
incl
xor
add
jbe
sbb
mov
sub
pop
popa
jge
jecxz
inc
cltd
enter
cmpsb
enter
insb
aaa
and
mov
push
cltd
or
imul
sbb
cmp
pop
pop
pop
dec
int
cmp
repz
dec
call
je
xchg
cmp
cs
dec
lahf
lds
enter
xchg
lock
js
mov
sbb
in
xchg
aad
fisttpl
jl
outsb
sub
pop
stos
push
ret
push
push
ljmp
lret
fucom
cli
mov
lods
xchg
dec
popf
cld
push
rcrl
mov
mov
and
mov
push
xchg
xlat
aaa
loop
mov
xchg
imul
dec
in
jbe
in
ret
imull
ja
lods
filds
mov
xorl
jl
adc
sbb
sub
xor
inc
fcomps
cmp
mov
test
push
dec
xor
shl
jb
push
sub
out
and
jge
ss
mov
sub
mov
xor
dec
mov
pop
push
mov
jbe
fcomps
into
add
into
sbb
out
mov
lock
aas
add
mov
cld
or
ret
in
dec
cltd
nop
push
les
outsl
sub
jno
scas
push
sub
jne
ja
inc
sub
xchg
fbld
ficoml
cmc
push
xchg
fld1
push
data16
jns
dec
cmpsb
xor
jb
fisttpll
sti
mov
xchg
mov
add
inc
test
add
icebp
adc
loop
xchg
jecxz
jae
pop
mov
in
pop
rol
popf
ret
sbb
cld
inc
cwtl
dec
and
mov
and
mov
rorl
cmpl
imul
mov
cmpb
cmp
loop
aam
fcoms
sahf
sub
cwtl
dec
mov
fwait
pop
cmpsl
jns
aaa
in
mov
xchg
hlt
and
push
jae
adcb
push
push
aaa
inc
cmp
add
ror
and
js
inc
sbb
pop
inc
test
jne
mov
push
sbb
test
sub
inc
aad
fildll
movsb
fistpl
clc
sub
aaa
jns
cmc
roll
xchg
lret
rcll
adc
stos
loopne
jl
or
and
sub
lods
divb
dec
shll
pop
out
or
js
xchg
jg
push
adc
mov
jl
mov
xchg
subl
rclb
mov
adc
mov
inc
push
mov
or
sub
sub
fsts
inc
inc
ret
push
xchg
adc
les
push
mov
bound
scas
cmpsl
jb
inc
cmp
hlt
xor
xchg
enter
fsubs
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
out
mov
mov
inc
sahf
xchg
aam
push
mov
push
push
aam
dec
sbb
fcoms
pop
invd
cwtl
les
inc
scas
xchg
stos
popf
fdivrl
fwait
xchg
fsub
mov
jle
pop
jb
adc
jle
lahf
jle
lods
pop
icebp
leave
cmc
add
add
xor
test
adc
jnp
clc
mov
add
jmp
or
xchg
or
jge
fwait
cmp
mov
int3
push
fdivrs
jp
cwtl
push
gs
insl
push
mov
mov
push
mov
mov
push
hlt
dec
test
push
ds
nop
adc
pop
inc
sbb
mov
fisttpl
pusha
sbb
leave
xor
add
and
jns
inc
inc
lahf
mov
mull
and
ret
loope
and
sub
xor
les
stc
add
stos
pop
mov
leave
and
xlat
sbb
push
jbe
addr16
mov
or
sbb
xor
mov
fadds
cmp
inc
mov
dec
mov
inc
jg
xchg
fstpt
insl
int
jns
ret
fisttps
mov
mov
push
cwtl
mov
jmp
mov
push
xchg
andl
shlb
cmp
addl
jmp
jge
int
or
adc
push
fists
outsl
je
ret
mov
in
or
pop
fidivrs
dec
test
bswap
test
jae
out
mov
sbb
jnp
jns
sub
mov
sbbl
dec
push
inc
inc
ror
lahf
rcrb
gs
iret
in
cmp
add
dec
or
dec
ret
jg
adcb
rclb
cmpb
xor
sbb
add
repz
lret
xchg
mov
aad
pop
mov
sbb
aad
jmp
ljmp
pop
in
pusha
mov
mov
mov
hlt
mov
enter
insl
or
xchg
outsb
mov
lock
fstps
loop
add
inc
xor
mov
xor
sub
inc
mov
out
stc
xor
mov
test
add
adc
add
xchg
imull
add
lds
vreducesd
jecxz
mov
scas
jp
sub
sti
dec
mov
mov
cmp
fcom
shrb
mov
jp
dec
mov
loopne
or
leave
sbb
xchg
inc
int
imul
xorl
add
jno
leave
das
add
fistl
movsb
mov
adc
lods
jno
or
shl
or
in
push
add
lret
testb
inc
arpl
ret
popf
push
iret
movsb
lret
inc
std
mov
push
lea
push
lret
jmp
dec
popf
in
stc
jo
push
nop
mov
dec
test
jns
icebp
sahf
iret
cld
jo
sub
scas
inc
ret
cmp
es
push
inc
adc
cmc
test
xorl
push
cltd
movsl
mov
xchg
mov
aad
jb
out
sbb
pop
ficomps
inc
pop
adcl
cmp
test
dec
dec
sarb
fcomip
and
xchg
imul
repz
jno
das
fsubl
lahf
in
cmp
push
out
fsubs
out
jmp
xchg
adc
or
push
mov
ficomps
dec
mov
fsts
rolb
adc
push
test
sub
mov
lods
lods
or
and
shrb
adc
mov
add
and
test
or
dec
xchg
jno
fdivs
jns
movsl
mov
aas
pop
scas
aad
jmp
lahf
cmp
or
pop
pop
pop
inc
aad
jae
pop
add
xor
add
inc
sarb
mov
jg
sub
fs
fwait
dec
mov
xchg
sahf
jmp
test
scas
pushf
scas
in
subb
orb
xchg
arpl
addl
inc
cmc
inc
jmp
xchg
jge
xchg
sub
outsb
mov
add
fdivl
jo
lret
sub
clc
and
pop
adc
pop
hlt
xor
mov
int3
sub
loop
je
stos
nop
lea
xchg
movsb
lea
inc
xorl
aam
add
int
sti
ret
mov
in
adcl
mov
inc
or
inc
movsl
xchg
sub
pushf
ret
pop
pop
inc
mov
icebp
idivb
sbb
add
inc
cmpl
pop
fidivl
mov
negl
add
dec
xchg
lret
add
ret
add
sbb
cli
mov
mov
dec
es
add
pop
pushf
or
sbb
push
div
leave
loope
ret
jg
mov
cmp
repnz
hlt
mov
loopne
push
sbb
rcr
enter
or
or
xchg
ret
and
xchg
mov
jge
dec
push
push
fistps
pop
repz
insb
cmp
sbb
and
hlt
call
adc
data16
dec
inc
mov
fmuls
mov
xor
daa
test
addl
push
dec
sbb
out
or
out
movsb
divl
inc
sbb
lods
in
mov
mov
xchg
imul
scas
jno
inc
leave
mov
sbb
and
jmp
sub
mov
push
les
outsb
inc
push
lcall
jp
mov
mov
outsb
xchg
or
idivb
das
jne
adc
pop
sub
jp
add
jp
pop
nop
mov
lods
dec
pop
jl
pusha
add
sub
js
jg
xchg
mov
loopne
addl
adc
add
mov
aam
stc
repnz
movsb
pop
repz
in
imul
cmp
jae
ds
xlat
push
fiadds
ror
adc
jp
pop
mov
enter
std
fisubrs
daa
popa
stos
mov
sahf
or
cmp
aad
pop
push
jle
lcall
into
dec
call
mov
leave
pusha
and
pop
sub
dec
popa
cwtl
mov
sbb
adc
mov
push
sbb
xor
popf
sti
add
cmpsb
push
dec
lret
inc
std
mov
lret
push
in
movsl
sti
dec
lcall
sub
pop
arpl
xor
inc
lds
dec
mov
pop
inc
adc
mov
cltd
or
jp
dec
jae
pop
fwait
lods
jge
mov
inc
inc
shll
aaa
jge
inc
mov
idivb
into
xor
sti
and
stc
repnz
and
push
add
lret
add
cmpsl
movsb
sbb
test
inc
push
fidivrs
arpl
mov
sti
ljmp
xlat
pop
push
out
aam
mov
cltd
fldenv
cmpsb
hlt
xor
test
in
aad
add
push
adc
push
test
pop
jae
add
cmp
lock
in
and
cmc
sbb
mov
add
cli
mov
scas
sbbl
xlat
lods
leave
fsubrl
aad
inc
sbb
pop
lret
mov
sahf
cmp
jp
or
mov
fistps
lahf
lcall
hlt
dec
pop
orl
pop
aad
adc
xor
xor
xor
mov
fsts
inc
rcrb
fnstsw
mov
sub
cmp
push
lret
pop
popw
adc
sbb
xchg
jge
arpl
lea
andps
and
dec
les
adc
cmpsl
ret
into
add
mov
mov
sub
jmp
jae
xchg
mov
xchg
out
mov
insb
lahf
dec
inc
push
sbb
adc
lock
cmp
and
repnz
inc
mov
mov
sbb
nop
call
and
sbb
jnp
std
fwait
cwtl
in
mov
imulb
test
push
pop
ret
mov
jge
dec
test
jno
dec
xor
cmpsl
mov
inc
pop
stos
sbbb
test
add
mov
cmc
lret
fstpt
cmc
mov
mov
push
mov
scas
xchg
fisttpl
aam
push
pusha
leave
dec
jb
mov
lods
cmp
or
and
xchg
dec
xchg
pushl
stc
clc
mov
out
je
push
mov
inc
orl
andl
mov
insb
xor
dec
sarb
in
int3
ret
stos
pop
ss
les
mov
mov
rcl
jnp
inc
test
jp
and
inc
enter
sbb
sub
mov
gs
sahf
ja
pushl
mov
mov
pop
mov
gs
mov
clc
sti
pop
or
push
out
iret
push
sub
or
add
mov
pop
mov
pop
insb
dec
pop
mov
dec
inc
pushf
dec
and
pop
sub
rcrb
cmp
mov
xchg
rcl
cmpsl
mov
dec
icebp
cld
ret
insb
orl
xchg
dec
bound
jg
push
xchg
stos
vshufps
inc
daa
push
jae
cmp
movsb
push
rcl
in
es
mov
add
push
lahf
pop
adc
pop
leave
sbb
rclb
idivb
fwait
push
repz
decl
sar
add
push
xchg
dec
mov
mov
jne
mov
inc
fmull
fwait
sbb
popf
iret
and
mov
and
mov
inc
testl
stc
sahf
insl
test
mov
xor
pop
or
icebp
dec
dec
mov
inc
xor
fldcw
outsl
mov
dec
cltd
mov
loope
dec
sbb
mov
fstps
inc
sub
in
mov
cmpb
test
in
xor
inc
mov
lret
inc
mov
gs
imulb
daa
xchg
test
dec
gs
sub
mov
lds
xchg
sbb
pop
notl
fwait
mov
add
cli
sbb
xor
adc
jnp
fdivr
mov
mov
test
aas
cmpsl
sub
or
mov
sti
rcll
rcrb
mov
cmpl
movsl
xlat
insb
popf
test
lods
pop
mov
mov
jnp
clc
jns
mov
sbb
inc
dec
loope
mov
dec
mov
mov
pop
mov
popf
pop
xchg
stc
add
jp
lahf
pop
mov
insl
xor
mov
xlat
dec
lcall
ret
in
loopne
loope
dec
dec
or
or
push
leave
cmp
lret
movsl
ret
pusha
or
stos
mov
pop
sbb
into
lahf
push
and
mov
sbb
mov
pop
sub
and
in
xorb
xchg
dec
or
sub
inc
lcall
sahf
int
lret
mov
mov
ret
inc
sti
in
bnd
cmpsb
fsubs
sbb
add
inc
jae
scas
mov
cwtl
pop
or
mov
mov
inc
mov
test
sub
fsubl
cmp
add
std
or
xor
aas
cmpl
mov
dec
push
or
stos
ror
pop
lret
dec
mov
dec
add
cmp
lea
fistl
mov
lret
mov
fsubrs
inc
inc
push
lahf
pop
andb
fcomps
popa
icebp
popa
mov
adc
jmp
iret
imul
inc
inc
xor
pushf
inc
loop
push
mov
pop
stos
inc
movsl
lods
jne
dec
test
popf
xor
cmp
lret
icebp
out
cmp
movsl
pusha
inc
inc
iret
xchg
test
cmp
cltd
vmovaps
shlb
gs
sbb
push
cltd
loope
in
rcll
sbb
adc
mov
ss
je
xlat
cmp
mov
pushl
adc
pop
xchg
int
mov
scas
mov
and
cmpsb
in
lods
cmp
push
sahf
jnp
pusha
jo
sbb
nop
test
shlb
negl
dec
inc
pop
and
sub
fisubrs
dec
mov
mov
jl
imul
call
add
mov
sbb
clc
sti
mov
jecxz
mov
pushf
int
push
dec
mov
movsl
imul
subb
or
rcrb
push
rcll
mov
es
jno
push
pop
sbb
iret
jae
dec
cmp
xchg
aad
dec
fsubrs
and
mov
sbb
fmull
fisubrl
in
stos
push
mov
xor
push
fcmovnu
jbe
rolb
outsl
jg
imul
sbb
je
sbb
fwait
xchg
jns
jge
sub
add
and
icebp
xor
stc
sub
insb
repnz
push
fstpl
cld
cwtl
aam
xor
fisubrl
add
dec
inc
and
shl
xchg
div
inc
cltd
enter
jb
cld
add
inc
mov
adc
mov
mov
rcrl
jecxz
out
imul
xor
aam
cmp
jmp
sahf
mov
cld
and
subl
fcomp
cmc
mov
cmpsl
mov
dec
clc
mov
stos
cmpsb
mov
mov
orb
push
add
mov
jmp
inc
hlt
dec
stos
aad
aad
popf
xchg
movsb
ss
cmc
or
mov
fldenv
or
and
sbb
iret
mov
jb
push
adc
mov
cmp
lods
jle
mov
push
cmp
repnz
in
fwait
stos
arpl
dec
filds
mov
add
mov
popf
outsl
fsubs
cmp
xchg
or
push
stos
pop
movsb
inc
pop
lcall
sub
mov
mov
pop
mov
mov
push
or
fisubrs
dec
jmp
mov
add
mov
mov
test
xor
add
xchg
shll
jne
sbb
aaa
cvtpi2ps
or
mov
xlat
cmpb
mov
cmpsb
arpl
lods
lds
stos
lods
mov
add
push
adc
lods
stos
xorb
arpl
lds
add
mov
mov
or
inc
inc
mov
xchg
xchg
out
leave
dec
loope
into
dec
lods
ret
movsb
std
rcrb
jge
cmp
adcl
movsb
cmc
cmp
cmp
adc
inc
clc
or
fwait
push
dec
mov
movsb
sbb
jle
adc
sub
add
movsb
les
mov
ja
test
iret
inc
test
push
stc
push
xchg
enter
daa
je
and
jns
mov
or
cmp
loopne
sub
adc
pop
mov
test
clc
sub
push
pushf
mov
jae
mov
sti
jecxz
iret
lds
inc
rcrb
cmp
and
jne
mov
jecxz
lret
sbb
add
mov
pop
cld
repnz
int
adc
push
out
loopne
mov
jo
pop
mov
pop
sbb
xor
push
push
jecxz
loopne
scas
cmp
or
xchg
cltd
mov
mov
sahf
mov
in
push
or
inc
fsubl
cmp
cmp
lods
int3
lahf
and
mov
sbb
aam
stc
repnz
inc
fucom
pop
xor
pop
xchg
mov
mov
into
pushf
leave
jb
adc
cmpsb
inc
test
push
insl
mov
mov
inc
or
aas
gs
jns
push
xor
lea
cmp
fildll
mov
pop
inc
dec
imul
call
sbb
jecxz
pop
popf
out
jl
sub
test
lahf
out
cld
sbb
mov
out
out
push
cwtl
lret
movsl
dec
sbb
pop
mov
push
ret
stos
push
test
sbb
loop
leave
pop
push
lock
jbe
je
scas
xchg
fisttps
sbb
les
sub
roll
test
inc
stos
pop
lock
fnsave
scas
dec
push
mov
test
mov
mov
movl
sbb
cmp
in
jl
stos
cwtl
mov
pushl
mov
fwait
jmp
mov
inc
jecxz
cmp
pop
cmpsb
fldt
mov
pop
imul
lea
or
inc
cltd
jmp
xchg
cmp
mov
push
inc
mov
test
or
mov
sbbl
sbb
imull
push
stc
mov
imul
and
adc
cmc
sbb
enter
aad
xchg
sub
pushf
ret
pop
jl
mov
dec
pushf
dec
and
aad
sbb
test
test
inc
mov
popf
int3
jmp
dec
ds
xchg
xchg
movsb
ret
xchg
and
mov
or
push
adc
sbb
pushf
xchg
pushf
xchg
ja
mov
mov
data16
jmp
mov
jg
mov
ss
mov
testl
es
dec
decb
std
mov
mov
jnp
inc
push
mov
or
mov
aam
ljmp
cmp
test
cmp
imul
sub
jp
fisttpl
cmp
ret
dec
sbb
mov
jmp
push
cmp
inc
inc
sbb
and
mov
push
popf
mov
cmp
jp
add
adc
or
add
inc
mov
icebp
negb
pop
dec
adc
subb
xchg
mov
xor
scas
lahf
sbb
jae
ficomps
fs
icebp
add
jl
mov
daa
or
lock
push
xchg
dec
mov
lret
jnp
out
cld
and
adc
ret
mov
push
and
sarb
dec
jmp
iret
sub
add
or
arpl
xchg
and
lods
adc
cmpsb
shrl
push
fidivrl
out
cmpsl
jnp
or
lcall
push
add
mov
dec
xorb
sbb
and
mov
and
hlt
test
test
stos
les
push
sahf
xor
pop
cmpb
ds
and
iret
lock
push
sbb
ret
ret
bound
sahf
sbb
hlt
rolb
cmpb
dec
mov
std
pushf
shll
ja
test
add
test
jne
jnp
int
jae
jns
movb
jmp
test
xchg
push
pop
ss
push
push
mov
lret
sbb
pop
push
mov
lods
sarl
fstl
faddl
mov
icebp
or
mov
cld
adc
adcb
mov
inc
sbb
mov
dec
mov
pop
repnz
push
cwtl
dec
xor
loop
std
mov
sbb
stos
cmp
call
and
and
cmpsb
hlt
pop
and
ret
sub
push
adc
pusha
mov
inc
mov
sbb
sub
or
cwtl
movsl
push
ljmp
pop
mov
cmp
fists
rol
adc
add
or
and
js
push
mov
faddl
or
repnz
test
sub
sbb
mov
inc
and
out
std
mov
stc
cli
in
test
or
adcb
sbb
push
xchg
pushf
stos
and
sub
mov
shll
repnz
lods
mov
sbb
xor
jp
fwait
xor
fwait
mov
lea
or
or
xor
add
and
lret
and
into
fisttpl
adc
dec
test
pusha
movsb
inc
add
mov
xchg
inc
call
inc
or
xor
mov
sbbb
sbb
loopne
aam
mov
sub
inc
mov
xchg
dec
movsb
adc
fisubl
call
mov
scas
clc
test
mov
sti
mov
dec
sub
repnz
sbb
sub
add
jg
faddl
psadbw
nop
adc
scas
repnz
mov
inc
or
dec
add
push
mov
call
dec
mov
insl
jbe
cmpsl
xchg
fcoms
xchg
xchg
jns
sbb
sbb
dec
mov
lds
fidivrl
xchg
dec
rolw
fdivl
jecxz
push
sahf
xchg
pop
js
cmp
scas
pop
aad
mov
sub
ret
je
andl
jno
pop
rcrl
pop
out
fwait
cmp
mov
or
stos
xor
mov
pop
jnp
fsubs
jb
xor
dec
inc
push
jb
dec
test
sbb
and
push
xchg
mov
pop
adc
call
push
loopne
in
cmpsb
ficompl
pop
es
mov
or
and
xor
ret
mov
sarl
jne
inc
loope
xor
add
nop
adc
stos
push
ja
addl
bnd
loope
or
xchg
lret
sar
cmp
mov
mov
cmpsl
xchg
test
mov
inc
or
int
stos
std
cld
dec
popa
and
xchg
stos
std
mov
mov
xlat
xorl
popa
sub
pop
lret
jo
jge
mov
movl
adc
lock
aam
mov
xor
lahf
dec
sbb
dec
enter
lea
test
sub
mov
cmp
jmp
ds
xlat
push
pop
xorl
or
inc
sbb
fcoms
int
xorb
rcrb
mov
add
sbb
pop
test
cmp
dec
or
mov
xor
mov
add
fwait
mov
adc
xchg
mov
gs
outsb
xor
test
jbe
xchg
fsts
push
test
add
sbb
and
fsub
mov
fimull
mov
jae
inc
jbe
js
inc
shrb
or
mov
xchg
xor
mov
mov
dec
nop
mov
lods
push
sbb
cwtl
xor
cmc
bnd
movsl
pushl
sub
and
add
add
xor
sub
adc
jae
mov
inc
enter
aam
sahf
mov
mov
movsl
inc
stos
xor
in
jo
pop
mov
dec
mov
push
push
xor
add
inc
out
dec
daa
das
in
jne
mov
adc
adc
inc
mov
movsl
imul
hlt
cmp
xchg
sbb
mov
inc
cmp
or
std
cmp
orb
lods
int3
fwait
mov
cwtl
lret
inc
sub
sarb
jno
test
mov
lods
clc
push
cld
cmpsl
outsl
pop
lock
mov
sahf
stos
jae
mov
mov
ret
fisubl
add
ret
and
das
sbb
cmp
fwait
int3
dec
mov
xchg
cmp
sbb
jge
pop
xor
fwait
js
cmp
scas
jg
dec
or
mov
pop
xchg
clc
xor
adc
or
xchg
adc
mov
cmp
xchg
imul
out
imul
lret
out
insl
cmovl
mov
xchg
jle
jne
jecxz
enter
inc
cmp
mov
je
cmp
call
mov
adc
lds
mov
adc
loopne
mov
sahf
sbb
gs
cmp
mov
xor
outsl
outsl
lods
out
mov
mov
mov
xchg
xorb
movsl
out
xchg
lods
rcrl
dec
loop
stos
add
int3
sub
mov
and
in
xor
dec
xchg
sti
cmpsl
pop
adc
test
pop
sub
pop
imul
xor
stos
jne
xchg
loop
push
mov
or
fwait
rclb
sbb
iret
xorb
or
leave
loop
or
std
xor
cmp
out
std
dec
rcr
push
in
cmc
cwtl
out
push
adc
jnp
sub
mov
mov
cmp
pusha
jo
fwait
insl
or
sbb
inc
popf
aas
loop
enter
jb
or
mov
fldpi
mov
lcall
mov
cwtl
push
mov
push
loopne
pop
add
fucomip
daa
stc
rolb
dec
or
jecxz
cmp
dec
or
adc
daa
add
cmpsl
mov
inc
pop
mov
sbb
popf
fbstp
rcll
or
lods
mov
std
xchg
shll
inc
test
rcrl
and
and
and
sbb
sbb
cmpsl
fwait
xor
loope
sub
les
xor
mov
sub
inc
ror
or
cmpsl
std
jnp
jl
mov
jne
js
dec
daa
xor
insl
xlat
jp
sbbb
and
repnz
inc
ret
daa
sbb
test
dec
ds
sarb
arpl
jp
jecxz
mov
pop
aad
mov
push
addr16
sub
ja
sub
xchg
dec
pop
or
adc
or
repz
mov
inc
mov
sti
pop
adc
cmp
mov
inc
or
mov
lcall
lret
inc
lods
jno
sbb
in
mov
sbb
lds
cld
dec
aad
sbb
xor
insl
mov
test
and
fldl
mov
mov
mov
imulb
jge
mov
dec
jecxz
add
push
jno
xor
movsb
std
sti
sbb
cltd
sbb
mov
sbb
xchg
mov
cmp
inc
fdivrs
xor
mov
sub
out
inc
jno
xchg
data16
insl
ljmp
rclb
cmp
xlat
insb
jbe
mov
inc
and
test
fldenv
mov
cmpsl
cmpsb
inc
cltd
lret
out
mov
enter
adc
or
push
fisubrs
push
insl
mov
mov
stos
in
stos
sbb
mov
push
loopne
cld
mov
mov
ret
aas
fwait
andb
cwtl
push
stc
test
push
fsts
lds
jecxz
sub
dec
scas
push
stos
mov
cmc
sbb
sbb
dec
aad
sub
mov
icebp
xchg
test
cwtl
pmaddwd
add
xchg
cmp
push
loopne
inc
scas
push
mov
shlb
mov
jb
jl
leave
mov
pushf
jecxz
fists
repnz
add
push
rclb
pop
mov
pop
mov
or
pushf
mov
movsl
pop
jae
inc
pop
fucomp
or
popf
or
cmpsl
xchg
loope
clc
pushf
lea
iret
inc
cmc
frstor
sbb
test
int
mov
dec
push
or
add
mov
int
and
daa
inc
dec
sbb
aaa
inc
mov
sbb
pop
sbb
cmpsb
ret
pop
xchg
jne
lea
repz
jnp
sub
cmp
rcrb
stc
test
or
add
xchg
mov
fsubrl
fmull
jnp
jb
shll
test
iret
mov
lret
pop
push
push
xchg
cmpsl
xchg
test
dec
cmpsl
shrb
fwait
xchg
loope
add
jne
imul
lcall
jb
add
cmp
xor
sbb
sub
sub
xor
in
lock
mov
rcrb
sbb
imull
cmc
push
mov
push
mov
inc
aas
and
cmp
jecxz
inc
sbb
mov
lcall
lret
bound
push
mov
hlt
jb
add
pusha
jo
mov
mov
stc
mov
fwait
add
aam
in
sub
sbb
fildll
test
cwtl
jae
clc
sti
pop
popl
cld
sub
ss
sbb
pop
sbb
movsl
xlat
cli
lods
pop
mov
jecxz
xchg
mov
dec
xor
movsl
dec
pop
out
jne
jae
cwtl
xor
test
sub
out
stos
iret
push
add
mov
add
and
loop
lods
hlt
and
fwait
scas
imul
sti
jmp
jne
lods
pop
call
lods
pushf
scas
mov
mov
jg
scas
and
faddl
inc
adc
cmpsb
add
mov
inc
adc
xor
inc
xchg
dec
xchg
jno
xchg
sub
test
push
sbb
jp
cmp
subl
push
xchg
or
sar
inc
adc
jge
fwait
lea
xlat
out
inc
fwait
push
sbb
xchg
movsl
push
or
inc
dec
fsubrl
mov
int
dec
mov
push
je
jecxz
in
mov
arpl
mov
sti
jge
divl
cmp
mov
das
add
fs
cmp
adc
jle
leave
lret
xchg
or
sbb
movsb
lret
or
inc
clc
push
sbb
fimuls
mov
in
jnp
jno
clc
out
or
mov
out
call
adc
adc
out
orl
pop
mov
push
mov
xchg
mov
inc
rorl
cmpl
ret
push
mov
dec
gs
sbb
cmp
add
add
cmp
aaa
push
popf
mov
ja
inc
jb
shlb
xor
inc
popf
jle
add
dec
push
push
xchg
mov
sub
sbb
sbb
mov
ja
stos
les
in
sub
cmp
cmpsb
push
lahf
lds
cmp
jp
ret
inc
sbb
or
lcall
les
push
pop
pop
mov
leave
fildl
outsl
sub
or
adc
test
and
gs
dec
pushf
mov
lock
dec
data16
adc
mov
adc
sbb
pop
jnp
movsl
icebp
lcall
xchg
shl
jno
adc
inc
fidivl
mov
les
std
fstpt
aas
rcrb
cmp
out
jnp
sub
enter
and
out
fwait
xor
dec
mov
xchg
ljmp
pop
fisubl
cmp
jo
jne
cmpsl
movsb
dec
enter
xorl
sub
lods
outsl
push
or
imul
fistl
mov
add
mov
mov
cmp
jp
add
adc
sbb
mov
insl
cltd
mov
adc
arpl
notl
pop
stos
pop
push
inc
sub
mov
dec
xor
fcompl
es
dec
outsb
bound
cwtl
nop
mov
int3
sub
cmpsb
or
or
mov
stos
negb
or
pop
add
lods
jecxz
nop
cmpsl
push
dec
xor
and
push
push
or
pop
mov
in
xor
jl
arpl
or
idiv
data16
mov
push
testl
adc
push
aas
fwait
lret
in
mov
mov
or
cmp
mov
idivb
jae
jecxz
adc
inc
pushf
cmp
mov
adc
xchg
cmp
or
lahf
test
data16
scas
and
lock
mov
iret
jbe
xchg
imul
push
sub
jecxz
add
fs
les
pusha
int
sbb
rcrb
stos
jge
cmp
add
aam
cltd
push
aad
dec
ss
imull
fs
sar
push
sbb
fcoms
sbb
pop
outsb
push
jl
dec
xchg
adc
dec
inc
cmp
les
adc
jbe
or
mov
aas
and
dec
stos
loope
popf
fimuls
mov
sarb
jb
add
adc
gs
xchg
sub
rcll
push
fidivrs
pop
stc
scas
inc
insl
jmp
test
xchg
pop
into
divb
pop
fisubs
out
and
mov
sbb
xchg
mov
jne
cmp
push
dec
mov
int
call
int
aas
imul
cmpb
mov
test
add
sub
test
push
sarl
or
repnz
fdiv
test
xchg
dec
in
push
xchg
cld
sahf
lahf
mov
into
imul
std
es
lds
jns
pop
inc
dec
pop
or
inc
rorl
jo
das
mov
int
int3
adc
adc
rcrb
stos
dec
inc
lcall
test
fistpl
ret
orb
shrb
scas
stc
sbb
in
push
sahf
mov
jo
lds
mov
pusha
mov
bound
pop
xchg
in
repnz
and
test
in
inc
dec
out
dec
loopne
std
aad
mov
pop
cmpsl
mov
jo
enter
pop
das
frstor
xor
aas
mov
inc
repz
aad
shll
mov
fisttpl
push
jne
or
lods
movnti
cltd
xor
in
ret
and
and
mov
mov
and
rcl
inc
push
leave
pop
daa
lret
movsl
ret
insb
test
lock
test
lods
sbb
inc
lahf
sbb
ficoml
insb
in
das
orb
xchg
inc
iret
dec
movzbl
mov
mov
jne
fiaddl
push
imul
and
sbb
scas
push
push
pushf
sub
sbb
repnz
or
mov
or
push
mov
and
or
loop
mov
mov
inc
cwtl
inc
stos
adc
fidivrl
pushf
call
lret
pop
call
fiaddl
ljmp
mov
adc
jnp
push
lock
repnz
ficompl
or
jo
add
xor
dec
xchg
jo
fwait
or
jnp
jecxz
cs
mov
mov
mov
sti
pop
es
cmp
cwtl
sbbb
icebp
test
pop
imul
cmpl
mov
pushf
in
imul
add
cmp
arpl
jne
dec
movsb
pop
cs
mov
gs
into
mov
jge
and
push
pop
subl
in
inc
stos
outsb
cli
imul
pop
ror
mov
mov
shr
rcrl
dec
mov
jno
fldt
mov
les
and
sub
pop
out
add
lcall
fisttpl
cmp
xchg
mov
push
add
leave
xchg
xchg
cmpsb
call
lods
sub
jns
fdivrl
sti
icebp
jp
jnp
inc
cmp
mov
in
push
fwait
rclb
int
imul
cmp
in
xor
xchg
sahf
cmp
loopne
mov
repz
pop
add
add
dec
jle
mov
cltd
jl
popf
jne
fsubrl
pop
leave
inc
adc
sub
sbb
les
or
lcall
xchg
fistps
arpl
push
add
shlb
and
jp
shll
mov
or
es
push
inc
mov
sahf
adc
ja
fwait
leave
in
test
adc
in
cmp
mov
icebp
push
mov
ljmp
scas
push
imul
lock
dec
inc
cmc
fldl
int3
pop
or
mov
aas
adc
push
xchg
jmp
inc
sbb
mov
and
cmp
movsb
mov
loop
inc
and
mov
push
dec
cltd
mov
and
imul
in
leave
fsubrl
lea
inc
hlt
push
adc
scas
and
inc
sub
test
adc
dec
popf
imul
cmpsl
xchg
fcomps
outsb
or
aad
stos
lds
xchg
out
fnsave
push
mov
xor
jge
test
inc
orb
jns
jo
and
shr
inc
pop
mov
mov
mov
adcb
dec
in
cs
xchg
and
addr16
outsl
mov
fwait
push
mov
subl
call
dec
repnz
push
ljmp
jb
ds
lcall
pushf
dec
inc
in
into
sub
and
xchg
sbb
xchg
and
pushf
gs
xchg
outsb
cli
mov
aad
ss
and
dec
movsl
dec
add
lahf
push
cmc
js
pop
ds
and
xchg
lret
aaa
fdiv
mov
in
ja
fwait
addb
or
leave
push
add
movsl
mov
out
pushf
mov
shr
mov
jno
scas
push
sub
add
ljmp
xor
fsubrl
movsb
push
dec
pop
bound
in
or
insl
pop
mov
subb
lea
pop
stos
xchg
mov
rolb
or
push
ja
add
fistl
fdivr
orb
mov
pop
js
mov
or
repz
jmp
inc
xor
sub
xor
cmp
xchg
mov
push
cmp
lock
cmpsb
cmp
xor
into
int
xchg
dec
subl
xchg
jb
jle
adc
inc
pushf
sbb
stos
mov
jge
repz
add
das
push
xchg
loopne
adc
mov
in
popf
dec
push
subb
divps
add
ja
fisttpl
hlt
scas
cli
mov
xchg
lret
movsl
ret
pop
jbe
sub
cmp
sub
cmc
sbb
xor
fcmovu
jae
mov
or
cmp
adc
insl
inc
mov
or
inc
sbb
dec
aas
and
mov
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
add
mov
dec
dec
sbb
sub
lea
sub
xchg
mov
daa
push
out
movsb
inc
sbb
cmpsl
ret
es
rorb
inc
mov
shll
daa
je
seto
pop
pop
cli
cs
mov
mov
push
pop
adc
jo
call
xor
add
iret
cmpl
jmp
ficoms
mov
fsubrl
adc
gs
lcall
inc
repz
and
xchg
call
pop
dec
mov
push
stos
mov
aaa
imul
lcall
jae
cmp
xor
push
loopne
mov
add
inc
enter
xchg
lcall
adc
pop
pop
enter
rorb
aaa
fwait
lods
adc
push
sbb
add
rorb
aad
cwtl
sbb
cltd
cmp
add
add
adc
xchg
mov
les
inc
push
test
hlt
aam
movsb
cli
mov
out
adc
dec
push
cmp
int3
bound
out
in
pop
sub
loop
mov
mov
je
popf
shlb
xor
ret
pop
push
or
add
call
add
push
mov
pop
mov
fldt
adc
sbb
add
out
leave
xchg
adc
sbb
nop
push
lret
pop
stos
adc
push
pop
inc
inc
jae
stos
scas
push
add
arpl
pop
mov
sub
xchg
cmp
inc
lcall
ficoml
dec
mov
int3
aaa
cmc
mov
das
sub
jmp
xchg
dec
sti
cld
push
mov
inc
in
arpl
dec
scas
and
ror
rclb
mov
xor
ret
inc
stos
jecxz
inc
or
and
mov
cmp
aaa
popf
bound
loop
leave
add
mov
inc
mov
pop
mov
test
xchg
fcoms
pop
jmp
mov
adc
adc
out
scas
rorb
or
xchg
mov
pusha
mov
inc
mov
test
push
addr16
out
jmp
mov
sbb
shl
or
dec
xlat
and
push
mov
sub
and
dec
jae
cli
je
leave
jno
in
add
jae
cmc
es
sbb
inc
pop
push
push
xchg
cmp
je
lcall
adc
arpl
inc
inc
mov
aaa
outsb
mov
les
mov
cmp
rcrb
addl
mov
dec
out
aas
daa
xchg
and
mov
xor
mov
imul
push
mov
je
cmp
fsubl
ds
rolb
out
cld
adc
or
jecxz
cmp
in
push
xchg
xchg
gs
xchg
jmp
lcall
ds
fwait
jmp
les
jg
aam
sti
sub
pop
and
ds
movsb
jl
push
rclb
xchg
sub
pushf
dec
push
hlt
mov
arpl
add
jb
add
test
sahf
gs
sbb
push
adc
mov
sub
cmpsl
xchg
add
sbb
or
cmp
adc
lock
mov
mov
or
add
xor
in
push
jle
int3
lods
arpl
fucom
adc
lahf
mov
repz
lret
fwait
cli
jnp
inc
mov
adc
push
mov
mov
fidivrs
les
sub
sbb
or
adc
popa
dec
push
imul
shrb
fs
push
pop
js
mov
testl
sbb
cltd
mov
dec
push
movsb
xchg
dec
dec
mov
rcl
cmp
ljmp
idivl
add
xchg
or
js
pop
add
adc
ret
fcmove
or
repnz
push
sub
mov
sarl
mov
fimull
fsubrl
adc
push
push
mov
cltd
sbb
loop
sub
shr
xor
in
pop
and
repz
in
and
scas
or
push
adc
mov
mov
insl
movl
dec
pop
repnz
mov
dec
inc
xchg
lods
or
jae
xor
xchg
xlat
mov
or
movsb
test
out
add
lret
enter
dec
pop
loope
test
adc
xchg
stc
dec
in
bnd
mov
pop
push
scas
sub
je
aam
mov
arpl
iret
xlat
jbe
std
cmpl
inc
xchg
in
orb
inc
popf
shlw
fldenv
mov
std
data16
iret
subb
inc
rcr
sbb
mov
daa
push
pop
push
int
push
movsl
shrb
xor
in
xchg
std
add
mov
push
pusha
push
lods
push
lret
sahf
pop
inc
fmuls
mov
jnp
sahf
das
xchg
stc
cli
in
test
sub
sub
mov
or
scas
xchg
stos
lds
imul
mov
ljmp
cwtl
test
pop
adc
mov
pop
icebp
sub
fstpt
pop
xor
cmpsl
sub
or
stos
filds
xchg
lea
test
jnp
mov
push
fidivrl
sub
mov
push
cmp
mov
fwait
nop
out
xchg
imul
sbb
add
lds
test
sub
push
and
enter
dec
ja
mov
xchg
add
xor
mov
dec
push
adc
rolb
sar
jl
sbb
dec
add
mov
push
aaa
stc
add
mov
add
xor
mov
lock
outsl
sub
dec
fwait
cmp
test
push
xchg
aam
push
mov
xor
mov
sub
pusha
inc
add
jmp
add
xor
cmp
mov
stos
inc
fnsave
cs
mov
jnp
push
jb
push
int3
push
imul
repnz
cmp
call
clc
pop
cmp
pavgb
comiss
add
mov
loope
cmp
sub
fsubs
sti
adc
lods
cmp
sahf
daa
dec
sti
mov
test
lods
je
mov
mov
add
add
mov
dec
roll
popf
adc
xchg
lods
sbb
in
dec
and
or
add
sbb
dec
sarl
mov
xor
push
xlat
bound
adc
out
ret
inc
fistpll
or
jp
mov
adc
pop
or
push
movsl
hlt
xchg
lret
in
jp
lahf
daa
jnp
push
rol
test
movsb
jmp
leave
lcall
adc
dec
cs
int
sbb
rcll
call
stos
add
in
repz
ret
cmp
lret
or
mov
dec
pop
in
jb
loope
shrb
push
and
test
push
jns
jle
inc
cli
or
mov
pusha
out
or
pop
jnp
in
jmp
cld
lret
mov
pop
push
sub
idiv
pop
push
mov
xchg
cmp
in
add
mov
ret
enter
mov
rcrb
sbb
insb
cwtl
arpl
sub
xor
pop
mov
dec
mov
xor
lret
inc
push
popf
push
bound
in
or
dec
cmp
stos
or
imul
rcrb
cmc
mov
pop
push
push
loopne
shrb
mov
push
pop
mov
imul
data16
xchg
dec
scas
insl
fisttpll
dec
and
movb
in
dec
sub
in
jnp
xchg
lock
int
test
cmp
int3
dec
xor
inc
inc
push
mov
fwait
inc
lret
arpl
xchg
inc
fisubrl
xchg
js
loope
sahf
add
ds
cmpsl
mov
test
xchg
sbb
sub
xchg
jbe
popf
push
loopne
int
mov
or
jg
je
popa
xlat
negl
mov
jbe
std
mov
jmp
mov
sbb
test
setp
imul
jnp
mov
mov
inc
xor
and
test
test
or
ret
jl
inc
pop
shll
rorb
roll
pusha
arpl
mov
aaa
pop
push
push
into
addr16
and
inc
hlt
inc
mov
push
cmp
jne
cmpsl
mov
mov
xor
mov
lret
jge
pop
push
push
lds
and
xor
movsl
xchg
dec
mov
faddl
leave
jno
inc
push
xchg
push
xlat
xchg
fldl
shufps
xlat
loope
or
and
lock
popf
movsb
cmp
xorl
pop
test
jae
flds
jmp
stc
rcr
sarb
inc
cmp
ljmp
xchg
data16
fstps
push
jne
dec
rcrb
inc
iret
es
mov
shll
xchg
mov
icebp
hlt
jl
fimull
pushf
mov
in
jne
sbb
push
out
shr
or
mov
gs
inc
xor
std
cmp
lahf
lret
aaa
repnz
enter
jne
pop
cli
lock
ret
popf
int3
arpl
jae
fadd
sub
xor
test
test
inc
lret
pop
xchg
pop
mov
cwtl
adc
mov
or
inc
mov
pushf
jbe
jnp
push
lods
cmp
sub
mov
std
and
cmp
decl
push
jle
cmp
lock
movl
add
cmp
test
sbb
mov
inc
or
rcll
inc
les
in
push
push
js
sub
cli
jno
scas
imul
xor
lea
cwtl
enter
push
adc
inc
mov
xchg
fdivr
jl
inc
lea
sbb
or
jns
pop
add
dec
jp
push
stc
jo
imul
inc
movsl
inc
mov
cmp
mov
pop
scas
mov
aad
pop
sarl
or
cmpsl
into
sbb
lds
or
lods
lret
xchg
and
lret
popa
repz
nop
rcll
in
dec
repnz
lds
and
lret
cmpsl
xchg
test
mov
leave
enter
in
scas
xchg
fisttpl
fsubrs
std
mov
outsl
scas
dec
jae
test
enter
sbb
movsb
test
aaa
ja
in
push
fcmovb
ljmp
inc
cmp
addl
or
cld
js
sti
pushf
mov
sbb
notl
stos
xchg
mov
mov
pop
int
mov
clc
popa
mov
sbb
jmp
fldcw
inc
or
out
mov
mov
push
xchg
sbb
ret
fcmovnb
adc
jge
idivl
fdivs
addb
xor
push
pop
add
mov
repz
jecxz
push
xchg
xor
jns
ja
inc
add
dec
mov
fsubl
fisttpl
pop
and
fldcw
sahf
les
inc
mov
icebp
test
push
inc
stos
xor
rol
divb
inc
movl
push
xor
test
xchg
or
xchg
daa
repnz
inc
jne
lret
flds
into
stc
or
mov
frstor
or
flds
mov
lds
pop
ds
pop
test
jb,pt
addr16
sub
jmp
test
ret
adc
push
dec
ja
mov
pop
sbb
negl
shlb
jmp
sub
jbe
sub
test
fisttpll
pop
ret
mov
inc
call
inc
mov
insl
xchg
addb
mov
bswap
fs
pop
xchg
pop
call
mov
lret
pop
imul
sub
lods
int3
lret
sti
xchg
push
sbb
sub
ljmp
lods
push
dec
dec
sbb
dec
pop
pop
cmp
xchg
sti
cmp
movsl
in
icebp
sub
inc
icebp
cmp
cmp
fistpl
stos
sub
pop
scas
jb
xor
movsb
push
lds
and
inc
and
lahf
scas
jg
fimull
xchg
or
in
mov
jecxz
aas
cmpsl
xlat
add
mov
jbe
enter
sbb
mov
insb
mov
mov
out
into
lods
lock
popf
push
cmp
dec
add
inc
out
sbb
pop
loopne
pop
iret
ds
rcr
mov
jbe
xor
cwtl
iret
aam
sbb
popa
dec
les
jno
add
aad
xchg
insb
les
jg
push
mov
mull
lret
call
mov
mov
iret
not
add
aam
jne
test
loope
fisttpl
dec
and
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
ret
lods
inc
sub
push
ja
test
mov
pop
xchg
add
out
sbb
popf
and
push
push
aam
mov
cltd
dec
ljmp
out
lods
lea
and
std
flds
pop
pop
add
stos
je
xchg
testb
mov
pusha
adc
lds
mov
dec
jge
inc
fists
into
jns
in
pop
vpsadbw
xor
shrb
and
lods
mov
push
sub
dec
jns
inc
test
xchg
dec
inc
pop
popa
pop
dec
mov
pop
push
sub
ss
cmpsb
jns
mov
iret
inc
mov
into
popa
sbb
sbb
dec
aaa
xor
mov
dec
rcrb
add
cmp
movsl
mov
xor
dec
fwait
stc
imul
andl
pusha
and
dec
mov
xchg
and
cmp
sub
xchg
or
mov
cmp
xchg
out
negb
stos
dec
cmpsl
dec
loop
shrb
test
mov
mov
lret
sti
add
negl
jmp
data16
testl
or
mov
adc
fiadds
xor
addr16
adc
mov
xlat
insb
sbb
ret
push
cmp
push
clc
outsl
adc
jnp
inc
mov
adc
lret
sbb
cmc
dec
dec
or
test
imul
rorl
jge
mov
mov
mov
cmpsl
and
xor
jmp
pop
test
push
xchg
xor
sub
mov
cmc
mov
jge
repz
jmp
fisttpl
insb
or
stos
push
dec
dec
insl
mov
add
pop
notl
je
fnsave
fwait
lahf
loopne
mov
icebp
sbb
insl
and
or
cmp
cmp
stos
xchg
fimull
cli
jne
adc
add
push
inc
mov
fldln2
mov
stc
sahf
inc
fimuls
mov
aaa
das
add
ret
jle
sbb
std
mov
pop
sub
lock
push
lret
dec
fldl
jne
mov
inc
add
jns
fldenv
pop
mov
out
cmp
adcb
xchg
adcl
xchg
adc
popa
mov
jae
movsl
push
out
shr
push
mov
adc
inc
idiv
sti
daa
clc
add
mov
vlddqu
fmull
add
jne
pop
rcll
mov
push
mov
into
addr16
mov
xor
ret
fcmovnbe
dec
pop
inc
stos
push
lods
stos
repnz
inc
pop
push
mov
push
stc
xchg
sbb
stc
dec
pop
in
xor
xor
push
sub
adc
push
loope
mov
popa
jmp
push
arpl
test
js
and
int3
cmpsl
out
bound
inc
mov
sbb
lret
clc
push
es
cmpsb
sbb
movsb
sbb
dec
and
push
roll
movsb
addr16
mov
and
ficompl
add
aaa
dec
rcr
mov
and
lock
pushf
hlt
test
push
repnz
adc
sbb
pop
mov
xor
popf
and
imul
jnp
scas
and
sti
hlt
in
push
fmul
add
sbb
push
loop
daa
inc
or
leave
xor
sbb
dec
and
and
mov
scas
sub
rcll
ljmp
mov
and
addr16
stc
inc
mov
adc
cmp
gs
pop
and
cmpsl
pop
pop
mov
aad
pop
lods
fwait
add
mov
test
xor
ss
mov
js
addl
mov
pop
nop
sti
test
fcoms
pop
xchg
hlt
ljmp
mov
fsubl
push
cmp
jb
fwait
out
pop
enter
mov
mov
lds
test
sub
push
and
enter
dec
ja
mov
xchg
add
xor
mov
dec
push
adc
rolb
sar
jl
sbb
dec
add
mov
push
aaa
stc
add
mov
add
repz
in
push
mov
cwtl
mov
dec
pop
repnz
xor
cmp
pushf
lret
mov
inc
jnp
int3
stos
jecxz
enter
lods
in
adc
mov
sbb
cmpsl
mov
imul
cmp
mov
repnz
fistpl
hlt
lcall
cwtl
pop
stc
xor
sbb
lock
daa
xor
mov
imul
test
ret
sbb
dec
mov
mov
cmpsl
or
adc
jb
inc
push
in
mov
adc
imul
cmc
test
loope
rorb
jne
jnp
nop
out
jbe
push
dec
mov
mov
dec
call
sub
add
cmpsl
mov
in
subb
sub
hlt
std
lds
sti
mov
xchg
orb
mov
or
sbb
cmp
fcmovnbe
in
repz
mov
adc
and
push
inc
pop
daa
jae
jmp
shll
repnz
loope,pt
les
push
es
inc
sbb
push
repnz
arpl
jmp
out
mov
add
add
mov
push
popa
outsl
mov
inc
mov
add
xchg
pop
in
jge
pop
and
cmpsl
sbb
mov
mov
daa
cmp
popa
sets
movl
xlat
insb
imul
aaa
lahf
in
cmp
push
out
sbbb
cmc
lds
cmp
pop
cmpsb
jbe
pop
xchg
jmp
loopne
mov
shll
stc
add
mov
sub
add
out
jmp
test
sbb
stc
sbb
dec
adc
imul
arpl
xor
hlt
aas
dec
hlt
popf
mov
push
popa
lea
sbb
ret
addl
popa
fimull
out
jno
jl
jmp
mov
jae
push
push
pop
mov
push
push
and
stos
push
sbb
xchg
dec
mov
out
std
add
loope
dec
fimuls
adc
or
add
in
stos
mov
mov
inc
je
xchg
bnd
test
sbb
and
push
sahf
dec
loopne
jbe
push
inc
fcompl
cmp
lea
mov
jl
out
mov
aas
or
push
movsl
mov
fcomp
push
dec
adc
lcall
and
push
movsb
mov
out
and
push
jle
add
add
nop
pop
ljmp
popa
das
inc
adc
or
mov
xchg
sbbl
dec
xchg
in
cmp
adc
inc
xor
test
cmpsb
pop
and
subl
mov
popf
in
xor
push
jbe
imul
loope
test
add
cld
mov
mov
gs
xor
data16
sbb
adc
mov
push
xchg
sbb
rolb
pop
callw
xchg
ds
ret
notl
outsb
dec
dec
scas
aad
jp
std
add
xor
loop
mov
adc
sbb
mov
in
cmpsl
pop
jno
lahf
jae
xchg
inc
test
dec
les
out
mov
xchg
imul
sbbl
mov
dec
push
fxch
xchg
mov
inc
xor
loope
push
lcall
push
mov
sbb
add
or
xor
ret
cmpsl
inc
dec
pop
push
cmp
rolb
adc
sbb
test
outsb
outsb
movsl
mov
cld
insb
cmp
sub
scas
pop
jbe
add
gs
sbb
fildll
shr
and
mov
push
lods
outsl
jge
insb
xchg
sar
mov
fwait
xchg
push
out
movsl
add
into
lds
xlat
push
in
iret
xchg
js
subl
and
xchg
push
and
dec
xor
mov
bound
lret
xlat
pop
aas
inc
mov
jo
sbb
pushl
jne
cmpsb
push
movsb
sbb
mov
addr16
cmpsb
sarl
cmp
sbbb
es
cmpsl
jnp
push
fs
jo
pop
repnz
xor
or
xchg
inc
and
push
shll
cmp
fisubrs
and
pop
shlb
xchg
add
mov
pop
sbb
insl
cmc
fcomip
ja
imul
pop
sbb
mov
cld
pop
inc
xchg
mov
imul
sub
movsl
iret
dec
push
inc
rclb
add
jmp
int
and
jne
inc
enter
lret
jnp
adcl
mov
dec
jae
dec
mov
jge
dec
xlat
int3
adc
adc
pop
jecxz
dec
fs
lods
dec
out
iret
and
jbe
outsl
in
cmc
das
sub
shl
add
enter
push
std
jl
inc
sub
dec
dec
and
sbb
mov
addr16
rclb
in
xchg
add
push
fildll
std
jg
xchg
pushf
es
imul
hlt
xor
mov
jmp
sbb
enter
push
lods
bound
push
jne
sbb
or
lock
sub
je
or
mov
insl
scas
ret
push
fistpll
xchg
add
jecxz
inc
push
add
stos
bound
ret
add
iret
inc
add
pop
mov
popf
fsubrl
push
lret
pop
loopne
fwait
stos
dec
gs
push
jo
jge
jae
push
ljmp
add
push
loop
jns
sbb
cli
int
dec
ret
cltd
mov
std
test
scas
dec
sti
xchg
mov
test
fmull
jae
and
movl
jl
pop
mov
call
in
xchg
pop
jns
dec
fists
out
push
cmp
push
repnz
push
jecxz
testb
call
jns
enterw
mov
js
out
jo
arpl
mov
mov
xlat
imulb
cmp
push
sub
sub
mov
into
cmp
sub
and
mov
dec
hlt
jge
sbb
aaa
push
sub
xchg
nop
clc
jg
movsb
ret
mov
cwtl
xadd
push
arpl
dec
xor
jbe
cli
sti
inc
mov
aad
out
sub
mov
jns
push
sub
imul
addb
mov
lret
mov
movsl
add
dec
jns
pop
inc
fdivs
xchg
cmp
adc
int
insb
in
cmc
loopne
mov
and
pop
aad
jle
or
or
loopne
xor
or
xor
cmp
xchg
mov
fbstp
dec
sahf
mov
mov
xchg
aad
push
sub
fs
aas
incb
mov
mov
in
lahf
orb
add
push
gs
loop
push
aam
aas
push
sbb
inc
int3
lret
aaa
repnz
es
aad
add
dec
adc
mov
fcmove
andb
inc
xchg
mov
in
push
lods
push
adc
sbb
mov
ljmp
inc
sub
arpl
sub
push
mov
stos
cmp
movsl
and
xchg
xchg
xlat
inc
push
inc
inc
push
lea
repnz
inc
repz
and
dec
mov
adcb
adc
ljmp
adc
pop
mov
sbb
int3
cmc
cwtl
pushf
sub
xchg
mov
lods
xlat
adc
mov
sbb
ficoml
outsl
adc
ss
popf
mov
fneni(8087
insb
aaa
add
cs
hlt
add
mov
cmpsb
mov
pop
xchg
jmp
cmpl
js
lahf
mov
inc
call
cmc
xchg
loopne
adc
mov
adc
jge
jle
stos
xchg
jecxz
add
mov
pop
les
add
test
outsb
outsb
movsl
mov
cld
insb
sub
push
dec
cmp
sahf
scas
pop
jbe
add
gs
mov
xchg
xor
mov
and
mov
lods
outsl
jge
insb
xchg
sar
mov
fwait
xchg
push
out
movsl
add
into
lds
xlat
push
in
iret
xchg
js
subl
and
xchg
push
and
dec
xor
mov
bound
lret
sarl
pop
aas
inc
adcl
mov
mov
jne
cmpsb
push
movsb
sbb
aaa
outsb
addr16
cmpsb
mov
cmp
sbbb
es
cmpsl
jnp
pop
xchg
fs
jo
pop
repnz
xor
or
xchg
inc
and
push
shll
cmp
fisubrs
and
pop
shlb
nop
jecxz
mov
pop
sbb
insl
cmc
fcomip
ja
pop
push
pop
add
mov
out
mov
cld
pop
inc
xchg
mov
imul
sub
movsl
iret
dec
push
inc
rclb
add
jmp
int
and
jne
inc
enter
lret
jnp
adcl
mov
dec
jae
mov
xlat
int3
adc
adc
pop
sti
mov
dec
out
iret
and
jbe
outsl
in
cmc
das
sub
shl
add
enter
dec
cli
jl
inc
sub
dec
dec
and
sbb
aaa
outsb
addr16
rclb
in
xchg
add
push
fildll
std
jg
xchg
in
es
imul
hlt
xor
mov
jmp
sbb
enter
push
lods
in
mov
jmp
call
lds
dec
mov
add
xchg
jmp
rolb
fcomps
cmp
mov
cmp
add
dec
mov
fcoml
orb
out
pushf
fs
cmp
push
dec
push
inc
cmp
adc
dec
mov
in
inc
cli
outsb
pusha
arpl
lock
mov
lock
movsl
xchg
test
rcrl
xorl
xchg
fildl
mov
sub
jbe
cmp
jbe
addr16
enter
lea
filds
sbb
xor
mov
addr16
and
aas
loopne
int
sbb
sahf
pop
lcall
mov
ret
sti
xor
and
jle
pop
in
add
sti
sub
jmp
lret
imul
fwait
or
in
or
xchg
inc
or
outsb
pop
pop
mov
mov
sbb
inc
repz
pop
sarl
enter
or
popa
ds
inc
push
jo
mov
pop
inc
push
push
iret
out
in
jnp
pop
ss
cmpsb
test
icebp
pop
mov
mov
les
and
jae
mov
sbb
mov
daa
cltd
lock
push
mov
scas
sbb
or
fwait
lods
mov
aaa
xchg
dec
cltd
dec
push
dec
mov
pusha
cmp
add
cld
hlt
popf
scas
inc
sbb
sbb
ret
xchg
push
mov
dec
in
das
daa
xchg
and
mov
push
mov
dec
cwtl
imul
add
mov
inc
sub
shlb
pusha
nop
dec
inc
lret
subl
inc
or
xchg
dec
test
mov
das
or
int3
xchg
sbb
sub
ficompl
xchg
cmp
lret
mov
call
pop
fcomps
sub
ret
cmp
jg
xor
leave
and
repz
and
movsl
ja
lret
push
test
out
shlb
ss
js
lods
push
dec
cmp
stos
jo
in
mov
inc
test
jb
push
scas
cmc
sbb
xchg
dec
shll
mov
mov
push
dec
lods
cmc
repz
mov
push
test
shl
mov
std
loop
push
popf
enter
je
inc
loop
cmpsl
xlat
add
inc
cmpl
adc
out
scas
addr16
add
sar
pop
ss
adc
aam
pop
ljmp
and
jo
fwait
test
jg
push
lds
xchg
inc
and
cltd
and
gs
xchg
jmp
sbb
add
mov
enter
inc
divb
jae
inc
inc
repz
jno
xor
lahf
pop
leave
pop
jle
mov
lock
ja
leave
test
test
jle
jmp
movsl
aam
cmp
mov
movsl
mov
dec
test
rcrl
jnp
in
inc
out
sub
jo
mov
push
cmp
jge
cmp
xchg
into
adc
sarb
subb
fwait
cs
mov
mov
or
pop
xor
leave
add
pusha
push
jg
sbb
mov
in
inc
add
or
jle
clc
mov
in
dec
add
inc
xor
add
or
pop
fdivrs
les
or
mov
inc
mov
inc
cld
imul
xchg
sbb
jae
iret
and
es
add
cmc
lds
aas
loop
dec
mov
sbb
das
xor
popa
mov
lds
jmp
pop
pop
pop
push
loopne
cli
stos
clc
test
loopne
movl
add
add
pop
adc
sbb
or
mov
lock
out
addr16
adc
and
cmp
dec
jl
jnp
jns
sbb
ret
stos
adc
fdivr
popf
push
dec
cmp
inc
test
add
idivb
rorl
lds
shrl
push
xchg
int3
adc
jae
mov
gs
inc
lds
mov
leave
pop
sahf
and
js
aas
test
iret
pop
enter
add
adc
xchg
add
mov
daa
xchg
sub
or
cmc
cwtl
pop
mov
ret
dec
loope
std
scas
cmp
sub
jmp
out
jo
es
shrb
test
and
ss
inc
aas
repnz
dec
push
adc
jle
lcall
jae
cmp
mov
out
lahf
pop
sbb
repz
jl
cmc
setg
hlt
std
xchg
push
fmul
inc
iret
or
sbb
adc
lahf
sbb
leave
andb
mov
inc
stos
xchg
adc
sub
mov
adc
push
mov
mov
mov
push
aad
adc
push
les
xchg
lds
jne
in
shl
inc
stos
jge
pop
adc
and
loope
int3
dec
lods
jle
mov
cmp
xor
rolb
out
stc
xor
mov
test
add
adc
add
xchg
imull
add
lds
vreducesd
arpl
xor
addl
xchg
xchg
sbb
mov
jae
outsl
add
cs
mov
mov
dec
inc
dec
push
or
dec
test
cmc
mov
ss
and
pop
or
imul
divl
fisubrs
jge
sbb
inc
sub
insl
mov
movsl
xchg
lods
outsb
and
cwtl
lret
push
add
jmp
fcoml
and
push
dec
jb
mov
int
dec
xor
sbb
push
and
cmc
mov
cmpsl
mov
enter
pop
push
pop
mov
lcall
push
inc
test
rcrb
loop
pop
adc
jnp
add
jbe
jmp
cli
mov
jl
popf
scas
cmp
rorb
pushf
addl
enter
jns
clc
out
out
addr16
scas
mov
cltd
xchg
ljmp
push
in
and
movsl
sbb
add
fwait
lea
loope
loope
or
fstps
or
or
sbb
lret
rorb
and
popa
mov
fdivl
test
int3
test
idivb
fstl
inc
adc
mov
xlat
mov
cs
add
or
sub
inc
dec
and
fstps
dec
mov
pop
or
sub
stos
push
test
adc
adc
stos
mov
ljmp
js
pushf
dec
test
std
sub
push
cmp
shlb
nop
xchg
mov
sbb
pop
ret
push
xchg
test
lock
ficomps
or
and
cli
add
popf
jle
jecxz
shll
lea
por
xor
lea
addr16
and
xchg
jno
jp
sub
push
push
fiadds
into
pusha
jo
fwait
mov
mov
mov
mov
aam
inc
sub
stos
dec
mov
gs
jmp
lret
adc
xor
stc
pop
dec
imul
jae
ja
jnp
pop
add
cmp
sbb
jne
add
mov
mov
inc
add
imul
add
cmpsb
adcb
ror
addr16
shlb
arpl
sub
test
movsb
push
dec
repnz
sahf
pop
and
push
jge
fs
or
je
movsl
pop
mov
push
cld
mov
xchg
ficompl
outsb
imulb
gs
pop
repz
in
jle
jns
xchg
dec
jns
push
push
fildll
pop
pop
and
js
fidivrs
popf
cmp
roll
lea
inc
jg
popl
sub
les
push
call
adc
outsb
ja
test
js
pop
std
es
sbb
and
dec
orb
repnz
pop
out
ss
adc
jne
roll
xchg
add
cld
cmpsl
add
push
jne
or
and
pop
or
xchg
or
push
push
enter
inc
mov
push
cmp
std
sub
inc
iret
adc
xchg
mov
xor
insb
std
pushf
insb
or
movsb
push
dec
jb
dec
sahf
push
sub
test
and
aas
ja
push
push
rolb
stos
xchg
mov
sbb
outsb
or
push
pop
jbe
bound
aam
add
cmp
dec
sub
adcb
bnd
movsb
lret
push
leave
cmp
inc
xchg
jnp
adc
loop
add
xor
xor
mov
xchg
imul
andb
fidivs
mov
lahf
fwait
pop
into
mov
stos
stos
std
rolb
push
std
sub
push
xchg
push
lds
dec
mov
sub
inc
fdiv
shl
cmp
inc
push
loope
les
push
or
push
pop
pop
jl
mov
add
notl
and
enter
add
movsl
insl
mov
lret
or
inc
jg
in
call
and
mov
test
int3
and
aad
jno
sbb
xor
je
movsl
pusha
insl
pop
rorl
and
add
jae
mov
jb
xor
popa
scas
pop
inc
outsb
aam
sti
arpl
push
and
add
xchg
into
out
pop
les
sarl
rclb
pusha
sub
shrl
das
daa
xchg
xor
mov
cmp
fisttpl
mov
push
jns
dec
cmp
jo
jnp
mov
fmuls
bound
sbb
mov
es
repnz
daa
dec
sub
inc
stos
pop
fists
rorl
or
adc
das
xor
ret
loopne
pop
or
jae
fsubrs
jne
sbb
add
data16
xlat
nop
cld
mov
jg
xor
xchg
cmp
int3
addr16
les
cmpsl
arpl
stos
cli
jno
mov
lret
add
inc
jne
sub
les
jecxz
fisttps
cld
or
insb
fcomps
ds
mov
je
push
mov
mov
lods
popa
push
cmp
lahf
ljmp
inc
inc
adc
inc
ljmp
std
xor
sbb
aas
lock
add
loope
mov
cwtl
ror
out
test
inc
aas
and
cmpsb
xchg
push
in
lods
out
pop
movsl
pop
xstore-rng
cmpsl
ret
push
aam
iret
jae
pop
dec
pop
jge
push
rcl
mov
pop
popf
cs
sbb
mov
std
and
mov
fildll
pop
test
jmp
fiaddl
inc
mov
sbb
dec
adc
jb
lods
xor
clc
add
ret
pop
lock
fidivrs
inc
xor
push
shlb
arpl
add
and
mov
push
mov
movsb
inc
and
add
ret
xor
xchg
test
push
addr16
scas
cli
in
xchg
lds
xchg
dec
cmpsl
stos
negl
inc
lds
sarb
movsb
in
arpl
mov
push
ret
xchg
xchg
inc
filds
imull
sti
clc
jle
add
inc
push
dec
jmp
js
iret
rclb
mov
enter
fdiv
pop
jge
push
xchg
xchg
gs
jno
cmpsb
cs
pop
xchg
push
decb
and
push
push
or
insb
inc
in
mov
inc
jmp
and
iret
jmp
mov
faddl
lods
mov
cmp
fcoms
or
push
mov
and
add
pop
shll
mov
scas
lea
ja
xor
lods
xchg
add
fdivs
cwtl
add
cmpsb
test
dec
pop
div
add
call
pop
popa
das
movsb
cmpsb
aad
sahf
xchg
xchg
mov
int
lock
pop
out
or
jl
xchg
and
push
pop
jmp
dec
cmpsl
outsb
xchg
sbb
mov
cmp
push
dec
inc
jbe
jmp
and
sbb
jo
mov
scas
and
pop
je
mov
push
loope
mov
ficoms
jl
std
outsb
dec
daa
inc
lret
bound
cwtl
jl
pop
jmp
jb
ret
xor
dec
mov
iret
jae
inc
fbld
pop
popf
adc
jne
mov
mov
and
frstor
repz
and
rolb
clc
stos
jo
dec
fsubl
lfs
rcrl
int3
jae
cmp
fcoms
pop
sbb
mov
pop
dec
dec
inc
cmp
outsb
xor
ss
rcl
lret
mov
hlt
test
lods
popf
popf
inc
dec
fcom
push
adc
push
and
mov
xchg
cmp
inc
cwtl
push
mov
cmp
imul
clc
test
test
push
mov
jne
sarb
movsb
xchg
je
push
fidivs
setg
sbb
mov
iret
cltd
aam
jl
pop
pop
sub
or
idiv
xor
enter
dec
scas
sbb
addr16
and
xchg
icebp
pop
mov
lret
hlt
pop
mov
mov
lret
ret
stos
stos
std
rolb
push
std
sub
push
xchg
push
lds
dec
mov
sub
inc
fdiv
shl
cmp
inc
push
loope
les
push
or
push
pop
pop
jl
mov
insl
push
mov
into
inc
xchg
inc
inc
test
rclb
std
in
ja
cmc
xor
sbb
jne
pop
ret
das
loop
movsl
mov
mov
dec
xor
daa
mov
push
repz
cltd
in
jmp
scas
sbb
gs
pop
mov
jb
push
shlb
mov
jns
filds
mov
add
loope
lea
sbb
xchg
cmp
dec
sub
dec
dec
js
mov
jmp
loopne
sub
loope
shlb
jo
roll
mov
pop
pop
sbb
or
ds
cmp
xor
je
mov
cmp
mov
mov
or
cld
stos
iret
ss
movl
push
fmull
sbb
xchg
rolb
mov
sbb
pop
or
mov
in
mov
or
cmp
mov
lock
mov
sbb
pop
int
inc
pop
bound
pop
push
mov
and
sbb
sarb
push
out
orb
lcall
cmpl
dec
outsb
mov
sbb
je
in
mov
testb
sbb
xchg
mov
push
out
jmp
rolb
pop
push
xlat
clc
dec
cs
push
add
mov
sahf
jecxz
or
fisttpll
sub
mov
dec
in
jg
xchg
nop
xchg
inc
test
cmpsb
sbb
imul
sbb
aam
pop
out
mov
es
insb
mov
test
lea
cli
mov
mov
mov
inc
jl
mov
sub
ret
cmp
inc
mov
cmc
dec
les
inc
inc
mov
mov
into
xchg
pop
jo
pop
rolb
in
lds
add
aad
mov
loope
negb
add
and
adc
negb
nop
adc
mov
xchg
push
push
rclb
mov
push
mov
dec
popf
lret
mov
imul
xchg
into
adc
fcoms
xchg
or
add
xor
jno
mov
add
lods
inc
pop
lcall
and
es
popf
push
push
mov
scas
movl
andl
shl
lret
out
jp
jmp
push
test
lods
vcvtdq2ps
pop
lret
sub
jp
cltd
pop
adc
or
xor
mov
insb
aaa
es
imul
mov
xchg
pop
mov
cmp
pop
push
mov
pop
jle
add
fiaddl
jmp
in
cmp
pop
cwtl
and
addl
out
or
xor
outsl
fldt
lret
outsb
push
or
push
cwtl
repz
in
push
mov
sub
mov
sbb
stos
lret
in
mov
bound
rol
scas
lcall
cld
in
int
mov
dec
imul
icebp
lcall
cmc
jae
xor
mov
or
andb
fcmovnb
fldcw
bound
repz
cmp
mov
inc
cmpsl
dec
jae
cmp
fcoms
loope
dec
pop
xchg
orl
movsb
test
inc
filds
push
nop
mov
addr16
push
std
add
mov
mov
cmp
xchg
xchg
sub
xchg
push
and
xlat
jo
adc
pop
stos
jno
pop
inc
xchg
enter
out
adc
inc
inc
pop
adc
test
jmp
les
sbb
sbb
cmp
xchg
lea
aaa
mov
lret
bound
mov
cwtl
xchg
rorb
mov
jae
sbb
gs
xchg
in
ss
andb
mov
insl
jb
cmpsl
adc
mov
cmp
fldt
in
xor
push
mov
mov
jmp
call
mov
pop
aas
inc
fsubrp
loopne
jle
mov
add
add
pop
cmp
jp
inc
les
clc
push
lcall
out
fistl
xlat
sbb
dec
fwait
dec
or
lahf
pop
xor
shl
mov
out
scas
ffree
jne
fs
jns
sbb
mov
inc
int3
xchg
and
or
mov
or
lock
xor
lahf
lret
clc
jne
sbb
fiadds
je
pop
dec
pop
inc
pop
sbb
cmpsl
ret
xchg
sbb
mov
lock
outsl
sub
add
push
lods
rcl
fisttpll
fcoml
and
inc
loope
jae
sbb
pop
and
into
inc
dec
gs
test
xor
jp
shrl
jbe
gs
ss
fnstcw
pop
adc
test
lcall
sbb
pop
je
fcomip
jl
adc
outsl
pop
xchg
sbb
jne
or
mov
push
mov
jae
outsl
lcall
ret
xchg
sub
fcoml
fucomi
scas
inc
sti
mov
cmpsl
adc
vsqrtss
jo
or
mov
xchg
inc
xchg
or
jmp
pop
and
pop
ltr
das
and
lret
hlt
loope
pop
adc
pop
adc
inc
rorl
sahf
aad
cmp
pop
mov
sbb
int3
inc
jnp
mov
inc
ret
idivl
push
push
push
loope
orb
loop
fidivrs
cltd
mov
out
push
notb
mov
imulb
mov
test
dec
lods
mov
dec
sbb
inc
pusha
push
ret
xchg
lea
push
fildl
pop
aas
add
sbb
les
pop
mov
inc
sbb
mov
fwait
push
cmpsl
sbb
mov
movsl
inc
dec
mov
into
ret
es
fwait
add
inc
mov
mov
sbb
popa
mov
xchg
mov
dec
sbb
mov
mov
pop
cs
or
add
pop
andb
adc
pop
subb
pusha
lahf
dec
andb
cwtl
pop
icebp
test
inc
aas
stos
shll
loop
into
xchg
frstor
mov
sbb
cmp
stos
push
test
lcall
movsb
fsts
inc
fsubrl
xor
cli
into
xchg
stc
cli
in
test
or
jo
sbb
dec
enter
fcompl
push
gs
xor
and
lds
push
rorl
and
add
mov
jno
inc
idivb
xchg
inc
xor
lds
xor
divl
inc
orl
fdivp
fidivrs
arpl
lock
push
sub
pop
xchg
pop
dec
inc
pop
jmp
push
dec
dec
add
das
insl
cmovae
xlat
add
xchg
inc
cld
pop
sub
aas
mov
leave
test
mov
lret
mov
push
mov
and
scas
jo
dec
add
leave
inc
shl
mov
je
adc
push
subb
mov
inc
dec
ja
push
inc
jecxz
or
and
dec
or
xchg
fsubrl
lahf
cmc
gs
sbb
fwait
aam
sub
push
push
loop
repz
mov
cmp
mov
add
push
xor
popf
sbbb
in
jp
inc
jp
push
sarb
mov
mov
imul
hlt
into
cmpsb
outsb
and
jne
add
adc
jmp
sbb
lahf
scas
movl
data16
sti
sub
push
mov
js
sbb
inc
icebp
or
pop
arpl
test
fwait
xchg
inc
or
sub
mov
fs
stos
test
outsl
mov
pop
mov
jno
outsb
inc
xor
out
dec
sbb
push
rcrb
cmp
push
lcall
lcall
sbb
sub
jge
sbb
sub
test
lret
jecxz
add
scas
jnp
mov
ret
ret
bound
mov
or
loopne
xchg
sbb
stos
stos
clc
mov
cld
mov
jnp
xchg
sti
sub
notl
jnp
xchg
mov
inc
cmp
mov
cmpsl
xchg
adc
repnz
sub
icebp
inc
inc
scas
ja
add
iret
add
jle
jne
fiadds
inc
sbb
arpl
adc
subps
lock
add
pop
pop
notl
jnp
decb
mov
fsubl
shlb
ret
push
xchg
jmp
push
ret
adc
mov
xchg
sahf
cmp
fldl
bound
adc
inc
and
dec
xor
int3
testb
xor
cmc
mov
movsl
testb
test
lock
mov
adc
ja
add
roll
push
pop
sti
fwait
cmp
cmc
mov
cmp
fistl
adc
stos
adc
sub
dec
out
mov
js
inc
dec
in
imul
add
push
adc
daa
cmp
xor
adc
jns
inc
popf
cmp
lock
xchg
mov
push
aad
xor
xchg
adc
ret
scas
push
xchg
fwait
adc
test
adc
inc
std
movsb
test
adc
adc
mov
ret
pop
out
mov
shll
popf
pop
cmpsl
mov
icebp
xchg
inc
jns
inc
mov
out
jp
lea
push
sub
cmp
mov
sbb
pop
ficomps
roll
adc
add
mov
dec
jl
dec
xchg
mov
rcr
sub
dec
fnsave
imul
pop
mov
lds
sahf
add
pushf
mov
enter
sbb
jb
sahf
mov
cmpsb
dec
cmpsl
cmp
sbb
aas
ja
int
int
mov
or
and
push
inc
sbb
ja
icebp
mov
faddl
fbstp
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
push
inc
fsubrl
xor
js
xchg
jg
sub
loop
movhps
fsubrp
test
mov
mov
jmp
mov
inc
or
push
jle
mov
out
sbb
imul
orb
ret
flds
mov
mov
inc
jae
int3
inc
cmp
popa
mov
out
sbb
fcmovne
fisubrs
pop
or
jp
cmp
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
xor
mov
test
js
inc
jb
add
push
push
mov
inc
aaa
inc
hlt
test
lods
popf
popf
inc
dec
fcom
push
adc
push
and
mov
xchg
cmp
inc
cwtl
push
mov
les
nop
jmp
sub
inc
cltd
adc
mov
add
mov
mov
leave
fs
cmp
das
mov
jae
das
sub
dec
fsubs
sti
mov
mov
fmulp
enter
xchg
fucomi
or
inc
jp
inc
addr16
addb
data16
push
jge
ret
and
adc
push
pop
arpl
movsl
into
fistpll
xchg
sbbb
mov
mov
adc
or
adcl
test
mov
in
frstor
sbb
pop
dec
dec
enter
add
xorb
add
add
adc
in
and
mov
cmp
iret
fcomps
std
popa
int
pop
fcomi
imul
adc
inc
xor
pushf
jbe
inc
push
stos
mov
loop
dec
pusha
pushl
sbbl
adc
sbb
mov
adc
mov
push
rcrb
cmp
sub
push
stos
pop
insl
xchg
jnp
mov
xlat
push
shll
ss
and
inc
pop
sub
ret
jmp
mov
aad
push
mov
pop
jl
adc
pop
sahf
scas
cltd
js
stos
aas
xchg
insl
cmp
jno
icebp
xchg
in
cbtw
mov
pop
dec
push
pop
clc
ljmp
mov
lahf
scas
fistpll
push
stos
xorb
repz
add
and
hlt
stos
addr16
ror
pop
xchg
jmp
sbb
std
fisttpl
push
dec
push
movsl
daa
test
in
scas
add
dec
ret
lahf
mov
or
sub
pop
mov
add
mov
push
mov
lret
inc
xor
nop
dec
movsb
pop
inc
movb
dec
inc
mov
mov
in
mov
fldt
fs
add
dec
bound
sbb
les
push
mov
dec
std
sub
inc
pop
mov
imul
insl
push
jle
mov
xchg
jp
mov
jl
mov
xchg
ficoms
je
inc
xor
add
add
dec
sbb
add
pop
push
mov
inc
in
pusha
nop
jno
icebp
pop
jns
ret
fwait
not
pop
add
lret
sbb
push
xchg
ret
fnsave
addr16
adc
les
leave
pop
and
bound
adc
ret
pop
inc
popa
sub
aad
or
dec
ret
es
mov
sub
or
pop
mov
and
or
inc
ret
mov
pop
add
sahf
mov
es
sub
sbb
test
lcall
inc
mov
jns
or
fcmovnbe
leave
sbb
pop
jbe
test
movsb
jge
ror
ljmp
sahf
push
loop
cmpsb
imul
push
sahf
xchg
cmpsb
movsb
inc
cmp
xchg
cmp
inc
push
xchg
test
inc
lock
dec
lods
jno
fldcw
pop
cmpsl
call
jg
ret
cmc
cwtl
cmp
in
inc
mov
mov
jbe
ja
loope
sbb
leave
je
test
jno
sahf
nop
fisubrl
jns
pop
jbe
inc
out
loopne
mov
daa
push
lret
push
jns
ret
xchg
add
sbb
push
fists
inc
leave
lcall
jbe
and
mov
xor
imul
mov
test
push
daa
jno
clc
xor
adc
inc
inc
cmpsl
add
iret
sbb
jnp
std
xor
sbb
mov
enter
mov
hlt
nop
hlt
iret
pop
mov
shrb
rol
or
jg
adc
in
cmpsb
ror
push
inc
std
cmpsb
mov
dec
or
push
in
mov
mov
xchg
sbb
push
pop
cwtl
and
sbb
pop
add
sets
cwtl
cmp
dec
sbbl
js
andl
adc
pop
out
add
and
les
push
pop
pop
or
enter
push
hlt
xchg
daa
data16
gs
jb
lahf
mov
push
out
lahf
aam
cmp
int
mov
lahf
out
mov
icebp
pusha
stc
lods
cmp
sub
push
test
enter
mov
pop
fistpll
mov
divl
jb
xor
sarl
jo
dec
push
nop
jnp
adc
clc
sarl
es
cmp
mov
repz
or
jnp
das
test
mov
insl
test
or
sub
xchg
sbb
xchg
ds
outsb
in
scas
shrb
lcall
aaa
stos
inc
test
pop
in
mov
jae
pop
subl
je
filds
popf
or
add
ret
cmpsl
lds
jl
adc
insl
cmpsl
add
push
iret
add
jle
jne
fiadds
inc
sbb
arpl
adc
subps
lock
add
pop
pop
notl
jnp
decb
mov
fsubl
mov
and
dec
and
xchg
lds
mov
sub
scas
imul
call
out
xor
lock
mov
or
adc
sub
test
ret
add
xchg
popf
fcompl
pop
dec
fwait
divl
inc
les
sar
pop
test
call
lahf
subb
mov
mov
adc
xchg
andb
jl
xchg
xor
int
sbb
sarb
jb
rorb
push
or
sbb
insb
scas
dec
inc
ljmp
in
gs
addl
jp
into
xchg
mov
xor
push
push
xchg
insb
lds
add
fcmovnb
into
jne
into
pushf
js
push
ja
add
dec
lret
fsubrl
insb
repnz
cld
enter
pushf
cli
inc
xchg
add
mov
addr16
inc
cmpsl
dec
jae
cmp
fcoms
loope
dec
pop
xchg
orl
movsb
test
inc
filds
push
nop
mov
addr16
push
std
add
mov
mov
cmp
xchg
xchg
sub
xchg
cwtl
mov
lcall
dec
imul
xchg
sarl
int
sbb
jl
jg
fbstp
test
pop
mov
fldenv
mov
mov
mov
adc
push
imulb
jno
cltd
and
mov
lds
pop
push
inc
push
xchg
cmp
inc
insl
push
in
dec
push
shrb
xor
int
gs
jmp
stos
add
sbbl
and
icebp
fcoms
test
xchg
add
dec
out
xchg
pop
gs
arpl
clc
and
pusha
dec
fdivrl
mov
nop
mov
inc
out
decl
setb
mov
popf
push
lea
data16
push
icebp
jns
push
pop
or
mov
lret
fidivrl
sub
cmp
and
cmpsl
ret
pop
aaa
shll
lcall
mov
mov
add
int3
test
sub
push
or
in
inc
xchg
add
rolb
fdivl
hlt
push
inc
fdiv
mov
jge
lea
cmpsl
enter
adc
addr16
jecxz
and
test
jecxz
test
sbb
jae
mov
rcrb
xor
lcall
in
inc
mov
int
pop
push
inc
popf
sbb
dec
cli
cmpl
int3
jno
sub
push
movl
movsl
dec
test
sbb
lret
xchg
lahf
fs
push
mov
sbb
icebp
push
xor
sbb
loop
and
aam
xchg
xor
dec
incl
inc
sub
stc
repnz
and
int3
push
fcomi
dec
mov
inc
push
std
les
nop
cmpsb
std
sbb
shll
jb
int
fcomp
dec
jecxz
arpl
add
push
sub
shl
in
push
loopne
int
or
int
pop
or
into
cvtdq2ps
pusha
cli
ds
jne
add
cld
pop
jmp
stos
ret
ja
leave
in
pop
leave
push
outsl
mov
cmp
mov
dec
add
leave
lcall
mov
cs
scas
or
sub
sbbl
sub
cli
and
aam
stos
subb
xchg
pop
jb
sahf
xchg
xor
mov
jnp
push
jb
push
inc
pushf
xor
fildll
xchg
mov
cld
cmp
add
or
andl
jne
movsb
cmp
mov
les
inc
add
mov
fs
es
xchg
ds
jbe
cmp
pusha
mov
jle
cmp
mov
sbb
cltd
inc
xchg
gs
xlat
test
mov
inc
cld
inc
add
ss
mov
loopne
mov
xor
fwait
loopne
icebp
aaa
test
jge
decb
fists
les
xchg
cmc
sub
xorl
aam
cmpb
ficompl
icebp
cmpsl
aaa
push
mov
leave
xor
imul
rclb
xchg
repnz
pop
adc
iret
jns
and
roll
sbb
pushf
mov
push
mov
sti
add
mov
sbb
sbbb
scas
ficoms
cmp
mov
xor
add
add
cltd
dec
mov
aad
jp
mov
push
or
loope
into
movsl
push
adc
ret
push
jg
dec
sbb
subb
test
test
sub
inc
fmull
enter
insb
adc
mov
ficomps
jae
jle
mov
sarl
sbb
mov
xor
leave
popf
rcrl
and
xchg
or
loopne
test
icebp
nop
fs
add
push
int3
clc
add
jmp
xchg
ss
ja
inc
sbb
subb
adc
mov
xchg
mov
or
lds
pop
movsb
pop
and
jge
jae
in
pusha
in
mov
sbb
nop
faddl
or
mov
xchg
add
mov
movsl
or
lock
mov
xchg
fisttpll
mov
pop
rcrb
jg
xchg
ds
leave
insl
je
andl
inc
les
add
addr16
sbb
popf
es
sbb
enter
or
xchg
pop
inc
pop
pop
addr16
ret
adc
lcall
dec
add
rorb
fisubrs
xchg
inc
gs
data16
push
dec
push
cmovne
inc
cmc
clc
pop
movsb
out
push
sbb
sub
pop
cmc
fists
mov
push
push
sbb
or
sub
inc
test
jnp
test
std
arpl
ljmp
adc
inc
ss
sub
xor
jae
xchg
cmp
pop
push
mov
repz
mov
xchg
xor
inc
mov
mov
mov
dec
or
lahf
jae
ljmp
rol
sbb
cli
xor
ficoml
lcall
std
mov
jns
inc
pop
std
mov
push
cltd
popf
push
dec
mov
gs
mov
ljmp
xchg
ss
js
or
pop
xor
dec
cmc
xchg
mov
hlt
cmpsb
popf
mov
mov
les
inc
push
into
xor
add
push
inc
xchg
movsl
inc
movsl
call
into
stos
insb
lock
cmpsb
mov
xor
sbb
push
mov
je
pop
imul
mov
mov
stc
lock
and
cmp
inc
xorl
jns
arpl
push
clc
out
fwait
inc
test
cltd
xor
lret
dec
dec
lahf
lret
inc
jmp
pop
mov
jecxz
in
clc
cmp
sub
push
mov
roll
hlt
mov
addr16
lea
dec
adc
push
xor
sub
and
fwait
dec
xchg
loop
dec
jmp
pop
fisubl
sbb
flds
cmpsb
lds
mov
or
dec
sbb
std
jae
push
cltd
sbb
mov
and
pop
rclb
inc
adc
mov
add
xchg
pop
in
jge
pop
and
cmpsl
sbb
mov
mov
daa
cmp
popa
sets
movl
jne
mov
mov
gs
clc
xor
enter
rcll
add
push
pop
jo
shl
mov
add
mov
or
xor
push
repnz
and
mov
test
add
mov
push
mov
add
loop
gs
pop
sub
cli
stos
insl
cltd
cmpb
ret
fwait
sbbl
mov
dec
cmp
cld
mov
xchg
push
push
sub
mov
cs
lahf
cmp
stc
dec
push
and
xchg
popf
lds
xchg
push
daa
or
subb
imul
inc
inc
dec
inc
xor
add
ja
cmp
stos
push
clc
ret
es
rolb
adc
cmc
xor
inc
es
clc
or
fwait
push
dec
mov
xor
loop
fucomp
push
mov
push
push
in
mov
adc
lods
sub
xor
xor
ror
shlb
rorl
or
mov
ror
fisubrs
fdivrs
mov
sub
outsb
leave
mov
xchg
push
icebp
mov
fnsave
inc
test
scas
and
mov
inc
sbb
ret
inc
adc
daa
add
daa
cltd
jno
mov
dec
push
jmp
lds
pop
cli
stos
repnz
out
shl
mov
sar
sbb
fistps
jl
fiaddl
inc
jbe
xchg
adc
xor
jb
pop
adc
or
nop
fwait
lods
jge
push
pusha
testl
pushl
pop
repnz
jg
xchg
out
js
popa
or
pop
jae
or
adc
inc
sti
xchg
in
test
ret
inc
jecxz
daa
ficoml
arpl
fwait
scas
imul
jmp
std
mov
sti
and
xchg
inc
inc
mov
ret
jl
xchg
movsl
xchg
mov
fadd
jle
pop
jge
and
test
bound
call
popa
or
lods
mov
jae
mov
lahf
lds
icebp
add
sub
mov
stc
andb
ret
inc
sbb
mov
mov
mov
clc
sub
jmp
jecxz
lret
lahf
sub
in
fildll
mov
xchg
stc
cli
in
test
or
xchg
dec
jae
cmpsl
lock
or
or
push
and
cwtl
testl
fists
fwait
mov
js
pop
sbb
sbb
iret
jns
dec
sbb
mov
loop
xchg
adc
mov
in
pop
testl
lcall
fimuls
into
mul
jle
out
loop
jnp
aaa
inc
and
and
pop
cmp
sbb
icebp
leave
std
xchg
xchg
adc
ljmp
fcoms
lret
inc
mov
inc
popf
into
push
stos
adc
xchg
in
lock
movsl
and
lock
and
and
adc
lock
aas
movl
mov
pop
jo
inc
jge
pop
mov
leave
leave
xor
fwait
mov
cmp
lret
mov
popf
mov
clc
mov
dec
push
arpl
inc
sbb
or
imul
rol
push
dec
pop
sar
dec
scas
push
mov
add
mov
ret
pushf
loop
dec
xorl
mov
popf
adc
xchg
aaa
call
bnd
incb
or
sbb
ds
xor
shlb
adc
push
push
mov
dec
pop
std
lock
out
xchg
das
pop
push
out
mov
xchg
in
jnp
push
jns
xrelease
or
cmpsb
std
icebp
sub
push
ljmp
mov
mov
cmpsl
mov
fdivrs
jbe
lods
add
or
enter
int
lahf
ret
sti
pop
mov
mov
mov
jl
xor
mov
into
jbe
test
out
or
mov
popf
pop
sub
arpl
add
jb
mov
lock
daa
dec
inc
es
fcoms
clc
xchg
cmp
rcl
push
test
inc
pop
and
xchg
je
ficoml
shll
cmpsb
push
test
dec
sbb
into
xchg
aas
mov
dec
in
mov
jbe
xor
sub
cs
out
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
push
mov
mov
cwtl
inc
and
sub
mov
adc
mov
mov
cmp
mov
ret
mov
sub
lds
mov
testb
insb
push
or
sub
mov
xor
and
dec
sbbb
xor
scas
shr
repz
int3
lock
mov
out
mov
pop
jno
mov
lahf
frstor
inc
inc
add
mov
in
mov
mov
aam
or
sub
mov
xchg
lret
movsl
ret
pop
jbe
mov
add
add
ret
sbb
lahf
sub
xchg
lods
mov
mov
xchg
test
dec
mov
das
sbb
dec
cmp
xchg
dec
mov
mov
stos
popf
xor
mov
inc
mov
stos
inc
sbb
scas
fisttpl
negl
popf
push
push
js
je
inc
sarb
clc
mov
adc
mov
inc
icebp
xchg
pop
nop
jnp
movsb
sbb
xor
sbb
fs
call
clc
mov
ss
lds
mov
or
sbb
loopne
jmp
dec
adc
popa
mov
xchg
cmp
inc
or
imul
mov
dec
mov
sub
ret
xchg
jbe
mov
jns
repnz
pop
inc
inc
imul
push
popf
mov
cmp
jp
add
ret
mov
xchg
orb
sub
aaa
cltd
xor
jmp
lods
mov
dec
xor
test
imul
pop
clc
stos
jb
imul
pop
ljmp
popf
lret
sub
nop/reserved
in
jge
or
mov
test
jp
add
xor
sub
push
test
pop
pop
xchg
loopne
repz
bnd
loopne
sbbb
mov
loopne
push
mov
pushf
mov
dec
adcb
mov
pop
pop
pop
adc
mov
inc
shr
cmp
xchg
jbe
ljmp
pop
and
cwtl
dec
push
cmp
inc
pushf
fsubrs
stos
jmp
or
lds
and
pop
in
xchg
hlt
mov
movsl
mov
xor
clc
sti
pop
mov
test
insl
dec
ljmp
cltd
or
lods
inc
pop
or
fldenv
lods
pop
xor
xor
arpl
mov
xchg
cmpsl
jecxz
dec
sbb
ja
lret
sar
xor
lret
sbb
test
sbb
stos
pop
and
imul
mov
push
mov
xchg
jp
mov
loop
cwtl
imul
cs
sub
xchg
fwait
cld
sub
pop
pop
jmp
mov
pop
repz
inc
cwtl
dec
and
cmp
and
and
call
or
or
enter
cmp
sbb
lds
inc
push
pop
dec
jmp
cltd
push
je
movsb
popf
in
mov
jb
idivl
push
arpl
int
jg
loope
out
and
fneni(8087
mov
push
lock
mov
push
adc
out
addr16
popa
push
sub
lods
xchg
sub
adc
mov
bnd
loope
jne
std
jae
fisubl
push
mov
ljmp
inc
sbb
test
mov
sbb
mov
and
das
rcrl
fwait
lods
js
cwtl
push
sbb
scas
fcmovnbe
mov
adc
pop
mov
andl
mov
cmp
insb
out
rcr
int
je
rcrb
dec
and
xchg
inc
mov
sub
mov
xlat
or
add
testl
sbb
cltd
mov
dec
push
adc
cmp
mov
int
jle
fsubr
mov
cmc
mov
jae
loope
mov
call
ss
loopne
jae
imul
mov
jecxz
pop
stos
scas
mov
movsl
push
jecxz
lcall
fcoml
push
xor
mov
inc
adc
stos
push
xor
cmp
cmp
sub
stos
xor
jae
fwait
mov
cwtl
jne
arpl
nop
test
mov
push
or
mov
and
sbb
cmp
stos
shrl
push
push
pusha
pop
dec
lods
xlat
repz
scas
inc
fwait
shll
out
pop
xchg
lahf
sub
or
or
adc
data16
fsubrs
sbb
dec
and
jp
mov
shrb
add
xchg
jb
popf
cmpsl
jge
jns
cmp
test
push
inc
mov
xor
leave
clc
cld
adc
xchg
xchg
arpl
adc
pop
pop
jne
add
ds
rclb
imul
inc
mov
or
repz
jo
fdivs
jns
push
rorl
mov
movsl
nop
scas
mov
xor
cmp
lds
mov
sub
scas
sbb
ds
repnz
lcall
mov
movsb
aaa
adc
imul
nopl
sub
sbb
mov
and
scas
push
push
lcall
xchg
shl
sub
enter
pusha
jnp
test
xchg
push
xor
roll
mov
adc
loop
test
stc
addr16
test
xchg
and
and
jmp
mov
push
fdivrs
cli
adc
pop
mov
shll
les
cld
xor
daa
add
pop
sub
je
enter
xchg
mov
fisubrl
mov
xchg
jl
lods
lcall
arpl
mov
sbb
pop
xchg
mov
sbb
ret
fdivp
jnp
lods
rol
or
out
mov
cs
adc
testb
int3
xchg
or
mov
pushf
pusha
das
stos
push
push
out
xchg
sub
outsb
adc
xchg
out
out
jecxz
mov
jl
jbe
test
xchg
pop
push
inc
mov
imul
sbb
jp
mov
xchg
adc
push
pop
insb
adc
xlat
bound
push
or
jg
cmc
test
out
xchg
out
idivb
icebp
rcrl
pop
inc
ret
gs
out
inc
int3
push
fstpl
sbb
test
adc
sbb
les
std
xchg
mov
std
xchg
aas
and
add
push
insb
inc
adc
sahf
inc
insb
inc
push
push
int3
mov
and
adc
sahf
insl
lahf
popf
repnz
jno
loop
lahf
cwtl
int3
ljmp
xchg
and
test
mov
dec
push
ret
fnstenv
xor
fnstenv
add
fnstenv
adc
fnstcw
popa
fstp
mov
jno
fnstcw
inc
int
arpl
insb
js
out
cmpsb
shrl
xor
repz
inc
shrb
int3
or
in
mov
stos
andl
sbb
mov
cmp
lds
lods
push
inc
add
sbb
sbb
xchg
hlt
xchg
add
and
lret
sbb
dec
mov
mull
mov
sub
test
cmp
xor
mov
daa
dec
mov
pop
inc
xor
adc
pop
faddp
ret
lea
adc
ret
xor
ja
rcll
add
cmp
add
dec
int3
inc
dec
aad
jb
fcoms
sub
adc
and
aaa
jbe
int3
mov
leave
insl
int
mov
jg
dec
subl
adc
mov
or
mov
mov
mov
jae
lds
lods
rorb
mov
ficoml
clc
addr16
inc
out
test
inc
rcr
dec
push
repz
cli
jae
sbb
dec
mov
mov
jns
inc
arpl
inc
sub
in
addb
aam
pushf
inc
add
stos
ja
jbe
addr16
jbe
lea
dec
fnsaves
mov
jp
fucomi
jl
jle
and
pop
mov
cmp
dec
push
adc
in
pop
cmp
xchg
inc
sti
decl
cmp
sbb
scas
int3
jl
dec
xlat
pop
dec
cmp
fs
xor
inc
inc
inc
push
push
or
jbe
inc
inc
mov
add
lcall
into
xchg
outsb
mov
add
push
mov
cmpsl
rcrl
idiv
stos
and
push
inc
inc
mull
ret
mov
dec
xchg
push
adc
mov
cmpsb
stos
and
mov
push
push
shrl
data16
movsb
in
int3
dec
into
addr16
sbb
fldt
in
fsubl
and
mov
xor
enter
ja
test
pop
xchg
jbe
inc
push
push
xor
rolb
inc
pop
mov
push
adc
bnd
or
hlt
test
sti
clc
mov
add
ja
push
cli
and
xchg
sub
sbb
inc
or
and
push
mov
in
xchg
pusha
push
sbb
pop
test
jnp
or
leave
out
xchg
inc
out
and
xor
pop
inc
loope
fsub
inc
push
add
in
sahf
icebp
push
jae
out
sti
xchg
xor
mov
sub
mov
enter
into
stos
mov
int3
fcomi
inc
int3
or
enter
jno
mov
jmp
gs
push
outsl
test
or
add
rclb
push
jg
and
jns
pop
sbb
mov
mov
movsl
xchg
dec
popf
push
je
xchg
or
and
pop
mov
in
sub
stos
lds
or
test
addr16
mov
lret
push
in
xorl
dec
lods
fst
lahf
clc
sti
insl
movl
adcl
insb
dec
sbb
sbbl
inc
sub
icebp
add
inc
push
fldl
sub
lret
movsl
lcall
dec
inc
test
xchg
ljmp
lods
jo
jnp
lcall
push
shlb
es
enter
mov
ljmp
or
jne
mov
fisubrl
push
xchg
movl
les
dec
fdivrs
aaa
out
iret
movsb
cmp
lods
fcoms
xchg
dec
jnp
scas
subb
in
lock
or
or
cmp
mov
mov
hlt
mov
inc
in
test
pop
jne
shlb
or
rep
xor
mov
scas
pop
les
inc
and
xchg
ret
test
inc
dec
hlt
add
ds
add
sti
sub
cmp
or
out
sbb
inc
inc
rorl
cli
shl
cld
mov
iret
rorb
in
mov
add
inc
pusha
rolb
rcr
out
addr16
sub
and
subb
lods
pushf
mov
pusha
push
sub
gs
sti
jmp
imul
lahf
daa
adc
loop
mov
sarb
enter
call
std
insl
das
mov
cmp
sbb
cmp
or
int
add
loopne
fsubrp
adc
adc
cmp
cli
and
ds
and
jnp
and
movsb
ret
imul
and
or
xor
sub
out
ret
test
and
push
sub
lods
iret
cld
sbb
stos
mov
adc
mov
xor
pop
out
or
and
in
pushf
aam
hlt
and
rol
icebp
or
shlb
add
lds
mov
insb
push
sbb
fisubrs
pushf
jp
xchg
add
add
sbb
or
sbb
add
mov
shll
push
adc
lcall
into
adc
sub
add
jo
outsl
es
andb
data16
sub
movsb
jb
ds
insb
or
sub
repnz
mov
xlat
xor
push
gs
cwtl
fnstcw
fiaddl
mov
arpl
mov
std
andl
into
stos
pop
xchg
loopne
leave
fbstp
cmp
hlt
mov
insl
popa
rcrb
ja
js
inc
xor
scas
insl
or
mov
adc
mov
cli
loop
and
inc
fstl
repz
cltd
lods
sbb
xchg
cmp
test
inc
dec
or
pusha
inc
inc
adc
rcl
inc
and
xchg
mov
add
inc
push
push
or
add
scas
inc
sbb
jmp
sbb
add
cmp
nop
ss
push
je
sub
andl
das
mov
lods
cli
push
sbb
shll
es
ficoms
dec
push
inc
pop
pushf
or
cs
xlat
sub
bound
mov
test
outsb
inc
rolw
aad
xchg
dec
fsubr
sub
les
push
dec
shr
je
test
mov
pusha
mov
ret
jo
js
push
lock
adc
cmp
shll
push
add
call
inc
jp
in
mov
fiadds
push
out
dec
lods
movsl
push
xchg
mov
cld
mov
scas
mov
dec
jle
shl
cmp
adc
inc
clc
orb
test
adcl
addr16
adc
or
xchg
frstor
pop
jge
sub
pop
adc
mov
inc
shlb
inc
xchg
jo
call
aad
lods
pushf
xchg
and
ja
js
test
in
push
inc
cmc
push
adc
roll
xchg
and
std
int
iret
test
add
out
pop
and
xor
sbb
xchg
cmc
data16
lods
xchg
shr
pushf
sub
mov
cmc
lods
cli
mov
jmp
xor
dec
clc
mov
out
loopne
mov
vaddss
mov
iret
lock
push
and
cmp
push
test
xor
mov
push
push
xchg
mov
notb
inc
out
addr16
and
jmp
jmp
rcll
mov
pop
jno
test
roll
mov
cmp
mov
and
jne
adc
movsb
gs
aaa
pushf
into
roll
or
mov
mov
ss
push
add
lret
icebp
test
adc
shll
inc
stos
outsb
sbb
test
stos
popf
lock
sub
mov
mov
pop
scas
ja
fld1
jb
lea
insb
jp
ss
add
jg
es
sarl
mov
and
call
add
xchg
test
aaa
sub
imulb
test
mov
and
and
inc
xlat
mov
stos
in
lds
sub
ret
int
cmc
cld
mov
inc
cmp
cmp
sub
dec
xchg
in
test
push
jl
xor
sahf
inc
jnp
mov
lcall
rorl
mov
pop
sub
inc
push
dec
xchg
adc
push
stos
fstpl
leave
mov
mov
call
popf
inc
cli
scas
push
or
lea
mov
test
push
adcl
popf
pop
shrl
xor
out
rcr
xor
mov
or
adc
inc
mov
faddl
adc
xor
mov
mov
jg
popf
xadd
push
lock
mov
lock
mov
pop
dec
mov
les
xchg
sti
popf
jl
mov
pusha
mov
ds
xchg
mov
sarl
inc
ret
add
or
dec
std
dec
ret
lods
mov
das
hlt
test
push
jnp
mov
lret
jnp
push
imul
xchg
hlt
inc
loope
aaa
mov
pop
jnp
and
fimull
fmuls
lcall
jno
jbe
or
xchg
stos
inc
movsb
dec
add
pop
enter
cltd
aam
inc
cmp
xchg
jge
push
adc
push
lock
inc
out
fcmovne
or
idivl
mov
sbb
mov
mov
mov
sub
sbb
cli
sbb
insb
push
xchg
and
cwtl
inc
int3
sub
mov
mov
sbb
mov
push
or
faddp
xor
enter
rcrb
cmpsb
jbe
push
add
mov
pop
dec
xchg
jb
movsl
dec
aam
cs
clc
sti
pop
push
addb
adc
sbb
das
mov
cmpsl
ret
test
mov
scas
cli
hlt
lea
mov
das
push
inc
addr16
sbb
fisttps
or
xchg
mov
cld
push
loop
or
rcll
cmpsl
jno
inc
add
jnp
add
push
inc
push
inc
ss
mov
xchg
jae
push
insb
or
into
cmpsl
mov
jbe
jle
lods
ljmp
in
jmp
push
cwtl
in
inc
add
add
mov
push
dec
mov
xor
jmp
xchg
mov
xchg
fwait
jo
fwait
push
fchs
cmp
cmpsl
sbb
mov
int3
pop
mov
fsub
mov
popf
inc
shlb
dec
xlat
mov
inc
cltd
pop
gs
xchg
xor
shlb
je
xchg
adc
add
ds
sbb
insb
jbe
or
sub
add
cmpsl
std
push
lods
imulb
adc
mov
add
and
orl
sub
aad
cmp
ljmp
popf
fsub
les
repnz
inc
and
fcompl
or
lret
lcall
pop
leave
xor
xchg
sahf
int
xor
push
nop
dec
test
fsubr
sbb
cltd
lds
mov
leave
popa
fwait
test
clc
push
adc
leave
xchg
add
xor
and
and
stos
andl
adc
lods
push
mov
test
call
cmp
movsl
xor
inc
cwtl
push
insb
dec
orb
jae
sbb
loopne
push
mov
in
xor
cmpb
mov
xor
js
xor
fucomip
in
test
dec
pusha
adc
push
lods
lock
adc
jo
dec
adc
mov
mov
dec
xor
jns
aas
jp
rcr
lods
jle
or
js
add
decl
and
das
fnsave
popf
in
nop
mov
adc
push
sub
mov
mov
popf
mov
and
adc
jo,pt
sub
inc
sbb
cs
jmp
bound
mov
loop
inc
jl
mull
call
jl
or
mov
xchg
test
dec
jbe
dec
test
adc
je
or
std
imul
inc
xchg
add
sbb
mov
arpl
or
pop
mov
or
mov
popf
fwait
sub
xor
out
stos
cwtl
shll
pop
test
xor
movsl
cmp
inc
scas
jmp
clc
cmp
js
lds
or
pusha
and
adc
popa
sahf
push
and
leave
mov
pop
sbb
mov
mov
sub
inc
mov
push
lahf
lret
lret
dec
into
push
jo
mov
sub
lret
cltd
add
pop
dec
or
add
mov
jge
shrl
push
xlat
fdivp
dec
movsb
lahf
pop
push
das
fucomi
ds
cwtl
cltd
scas
pop
cmp
pop
inc
clc
mov
adc
shl
inc
sbb
mov
or
mov
xlat
bound
xchg
out
xor
popa
jmp
cmp
ret
test
xchg
mov
pusha
sbb
inc
mov
and
xor
inc
or
mov
hlt
lods
jl
jecxz
adc
fisubrs
out
push
and
sbb
push
rol
add
sub
arpl
mov
repz
sti
and
sub
lret
jmp
test
mov
pop
add
enter
sti
lcall
popf
jnp
leave
insb
lret
mov
sub
cmpsb
mov
cmp
inc
imul
test
lcall
repnz
es
mov
pop
or
pop
dec
push
mov
pop
jle
mov
pop
and
movsb
jo
adcb
inc
pop
lcall
jl
js
cmp
xor
test
addl
sbb
or
mov
mov
mov
pop
addl
call
cmp
or
popa
push
dec
and
in
push
mov
out
push
into
cmp
push
hlt
push
mov
xchg
mov
sub
mov
sahf
lret
aam
or
cmp
call
cmp
sti
mov
sub
loop
xor
shl
mov
mov
inc
sub
add
cli
mov
sti
sbb
or
inc
cltd
nop
ds
sub
aad
mov
call
sbb
ds
pop
cmp
mov
cmpsl
pop
nop
jl
fimull
jo
xchg
push
mov
or
outsb
shrl
or
or
pop
inc
jo
or
fstl
inc
push
cmpsl
lahf
fnstsw
loop
sbb
add
jl
mov
idivl
mov
out
sbb
and
fmuls
add
mov
pop
in
rorl
dec
adc
inc
mov
xor
icebp
xor
lcall
int3
pop
mov
mov
mov
or
rclb
lret
sbb
imul
ret
fildll
dec
cmp
call
inc
into
xchg
sahf
adc
out
outsl
call
bound
and
jae
imul
adcb
sbb
cmpsb
int3
adc
lods
add
sbb
fbld
ficoms
inc
mov
lret
mov
sub
mov
rcll
cs
sar
cmp
adc
adc
jge
push
sbb
lods
pop
stos
inc
pop
pop
pop
in
fwait
push
adc
push
movb
cmp
lds
jg
mov
andl
add
fmull
sar
fwait
jg
fs
push
push
aam
inc
and
pop
mov
xchg
imul
lcall
push
cltd
out
cmp
and
or
inc
js
push
or
cmp
jmp
adc
xorb
xor
fnstsw
push
jae
xor
jmp
loopne
fstl
nop
out
sti
pop
inc
jg
push
in
mov
add
mov
lock
mov
mov
dec
hlt
dec
xchg
dec
sbb
out
pushf
les
mov
xchg
dec
sub
dec
stos
sti
cmpsl
in
mov
jne
mov
dec
dec
lret
rolb
xchg
push
and
or
movsl
mov
rcr
sub
decb
dec
push
out
test
insb
xchg
sbb
inc
pop
xor
insb
xchg
fildll
xchg
add
fdivl
es
sub
mov
clc
popl
nop
push
inc
sub
js
int3
inc
mov
sub
jbe
lea
mov
pop
test
fidivrs
pop
popf
iret
out
adcl
inc
lock
popa
adc
int
cmpsl
add
enter
sbb
mov
test
mov
mov
mov
mov
mov
hlt
mov
in
sbb
mov
or
ja
int3
in
mov
sbb
sbb
test
jp
leave
inc
push
sahf
ss
out
jmp
jno
lods
mov
vpblendmw
mov
and
addb
fsts
std
xor
mov
movsb
es
dec
xchg
lret
pop
pop
rorl
jecxz
pop
cld
ret
jns
mov
shlb
addr16
clc
repz
jge
mov
into
xor
js
roll
inc
mov
pop
inc
sbb
sub
dec
adc
fnstenv
int3
add
sub
loop
push
dec
cmpsl
mov
mov
push
pop
out
dec
inc
jae
imull
dec
fwait
mov
test
or
mov
xchg
push
inc
lock
daa
dec
mov
xor
inc
pop
ror
mov
sub
mov
cli
pop
mov
and
xchg
and
jno
cs
lods
push
lods
mov
xor
mov
mov
push
inc
pop
adc
sti
fs
mov
sub
ror
cmp
fxrstor
lds
adc
mov
jmp
fldt
mov
cld
out
in
push
les
xchg
dec
xchg
push
sbb
cltd
dec
push
inc
fcomi
outsl
cmp
movsl
fwait
adc
fistl
cwtl
out
mov
mov
push
mov
bnd
pop
out
inc
fwait
sbb
pusha
sub
andl
inc
sub
negl
iret
rorb
pop
cmc
gs
rol
mov
negl
lret
jns
add
lea
xchg
add
mov
mov
loope
out
sub
push
fsubp
cmovae
rcll
sub
push
adc
ficoms
scas
push
mov
adc
add
jle
je
sbb
dec
mov
mull
test
cmp
rcrb
add
loopne
dec
sub
sub
jo
jge
leave
fdiv
xor
cmpsb
mov
stos
jnp
dec
sbb
xchg
pop
push
test
pop
push
push
push
push
inc
adc
dec
pop
jp
in
mov
xchg
loopne
ret
gs
frstor
push
sub
lcall
xchg
stos
mov
pop
cs
mov
inc
cmpsl
adc
test
pop
das
dec
scas
add
cmp
arpl
dec
pop
adc
iret
addb
mov
js
dec
test
clc
or
lods
sbb
lds
popa
out
idivb
in
cmpsb
lds
shr
cmp
xchg
pop
enter
xor
mov
and
mov
pop
out
repnz
xor
jo
dec
les
xor
inc
or
inc
fisttps
iret
stos
mov
xor
add
jle
inc
pop
adc
mov
mov
dec
xorb
lret
pop
cwtl
push
test
push
mov
imul
pop
das
aas
mov
dec
pushf
mov
adc
xchg
dec
add
lret
mov
or
add
mov
cmp
mov
push
jp
mov
call
bound
mov
or
test
lock
out
idiv
jmp
or
imul
fildll
and
push
sbb
jp
mov
js
sub
bound
mov
lods
mov
xor
inc
cltd
out
push
and
xchg
and
mov
mov
aad
add
movsb
popf
out
inc
mov
jns
xor
into
pop
mov
cli
repz
iret
xchg
rcr
adc
iret
out
repz
ret
sbb
in
adc
lods
push
push
sbb
inc
aas
cli
or
inc
sbb
dec
cmp
rdmsr
mov
outsl
mov
mov
ja
inc
test
jnp
xlat
out
push
call
or
lret
ror
cmp
lods
cwtl
nop
popf
movaps
sbb
push
adc
push
and
dec
pusha
adc
std
mov
les
insb
mov
fstl
cld
mov
pusha
inc
int3
mov
movsl
cmpsb
xor
pushf
mov
cmp
lds
and
roll
test
orl
pop
rcll
jbe
or
pop
mov
lods
push
mov
sub
xchg
mov
mov
sub
testl
add
jp
inc
xchg
adc
or
sub
xchg
pop
es
je
ss
into
daa
mov
int
clc
mov
loopne
in
mov
jae
mov
xor
push
pcmpgtw
pop
mov
dec
enter
mov
popa
pop
xchg
rcrb
mov
mov
jo
stos
mov
dec
cmp
xor
jns
vmaskmovpd
mov
pop
jno
fcoms
mov
push
push
dec
popa
icebp
sub
mov
mov
lods
pop
push
out
mov
mov
and
fmull
into
inc
fwait
and
adc
or
or
cmp
mov
ret
sbb
xor
cwtl
dec
xor
shll
jge
jp
test
cli
pusha
fidivrs
jo
leave
xchg
in
cmp
sti
filds
cltd
test
lahf
inc
js
push
or
test
add
stos
inc
add
int
sarb
inc
sahf
cmp
movsb
mov
insb
sub
aam
rep
pop
sbb
lds
xchg
pop
mov
jns
pop
xchg
ror
and
daa
pop
jb
push
lret
pop
stos
inc
in
stos
fstps
inc
pop
mov
cmc
cmpsl
int
test
popa
in
outsl
add
std
add
mov
ljmp
sub
mov
pop
ficoml
rcrb
movb
sub
cltd
push
xchg
fsubl
push
dec
mov
bound
mov
lret
cmpsl
ja
clc
data16
jge
xor
dec
loop
fwait
jns
sub
pop
xlat
push
cld
jno
jne
daa
enter
inc
and
stos
sti
lcall
jmp
inc
cltd
leave
fwait
out
fadd
fnsave
cwtl
push
xor
rolb
mov
adc
dec
xor
jecxz
cmpsb
mov
aam
inc
scas
imull
mov
sbb
fildl
or
idivl
in
or
push
mov
ss
add
sub
mov
insl
cwtl
aam
sahf
mov
ret
lods
fiadds
mov
in
cmp
aad
jmp
lahf
mov
cmp
sub
aad
test
cmc
rol
call
and
adc
pop
stos
ja
dec
ret
pop
jnp
nop
mov
dec
call
or
fidivs
aad
cmpsl
roll
mov
hlt
ds
xlat
pop
or
fmull
fwait
add
das
add
andps
ret
sti
stos
fptan
sub
pop
in
imul
adc
or
test
pop
inc
call
sti
xor
cmp
loop
enter
inc
out
cmpsb
je
or
int
les
mov
negl
orb
push
pop
push
addb
test
mov
stc
sti
mov
std
je
mov
push
sti
inc
pop
sbb
or
negb
sbb
shlb
push
pop
mov
fwait
push
fsts
mov
testl
jae
imul
xor
stc
test
ret
add
jle
scas
adcl
mov
inc
lds
mov
xor
xor
push
mov
fcmovnb
js
jg
mov
test
push
xchg
add
xchg
jmp
push
and
repnz
mov
movsl
fnstcw
ret
push
adc
in
inc
les
pushfw
ret
std
mov
push
fld1
jb
movsb
cmpsb
add
sahf
and
scas
xchg
hlt
mov
out
cmpsl
dec
sbb
cltd
cmp
fcoms
movsl
cmc
loopne
bound
mov
sub
mov
fwait
cwtl
inc
jo
push
mov
jno
fidivrl
insb
testb
enter
jo
bound
arpl
cld
imul
cmpsb
ret
sbb
adc
sub
test
push
pop
cmp
out
push
faddp
xor
mov
pop
shlb
xchg
push
nop
mov
imul
jp
mov
lcall
std
lock
mov
mov
mov
and
pop
jo
pusha
jnp
test
sub
sbb
adc
nop
inc
shlb
adc
sarb
jns
pop
cltd
fidivrs
mov
stc
xchg
jo
cmp
xor
rorb
movsl
shl
enter
int
addb
and
notl
mov
mov
lods
push
dec
je
andl
lock
push
les
pop
js
je
cmpb
mov
jnp
mov
adc
jecxz
mov
cli
or
jb
sahf
cld
jl
in
enter
mov
pushf
mov
gs
je
push
dec
mov
lahf
cli
dec
gs
xor
iret
jae
inc
pushl
icebp
cmp
test
jg
ret
test
jmp
adcb
lds
fimuls
insb
mov
iret
push
mov
cmc
adc
lods
xchg
or
or
int3
repnz
test
shll
cwtl
cmpsl
shll
adc
dec
xor
ret
adc
lea
mov
movsb
daa
inc
pop
or
pop
xor
rolb
cmp
pop
imul
cmp
inc
sub
and
and
lret
dec
adc
or
arpl
xchg
test
call
pusha
test
pop
sti
mov
data16
push
mov
das
shrl
mov
and
in
mov
jecxz
sbb
scas
push
test
cld
mov
dec
sahf
push
cmc
mov
sarb
test
sarb
imulb
pop
insl
lahf
fdiv
sbb
xor
out
inc
inc
cmp
jbe
pop
shl
adc
lds
adc
js
mov
cli
test
stos
push
negl
xchg
lahf
addr16
inc
sbbl
mov
xchg
jecxz
incl
xchg
fwait
xor
daa
fwait
cwtl
les
or
stos
repz
lahf
filds
adc
cltd
add
mov
pop
ror
jae
aas
add
dec
in
mov
outsb
test
xchg
pop
lds
rcll
jecxz
icebp
fidivrs
in
mov
jnp
daa
sti
add
push
enter
test
jl
pop
mov
inc
lret
iret
inc
test
shrb
adcb
lret
and
pop
stos
xor
adc
arpl
sbb
in
pop
add
mov
xchg
fsubrs
xchg
std
inc
or
xchg
ss
sbb
inc
mov
test
push
std
sbb
ja
xor
ss
aad
cli
std
scas
jle
inc
sbb
pop
outsb
dec
scas
jg
gs
or
test
shlb
cmp
adcl
dec
pop
in
xchg
mov
movsl
mov
clc
inc
and
sub
pushf
cld
flds
subl
shrb
negl
rcl
and
sub
add
out
aad
add
loope
out
push
mov
add
mov
shl
test
fimull
repz
mov
sti
lahf
inc
pusha
ret
int
mov
push
sub
lock
mov
jno
mov
fs
pop
mov
push
xchg
jmp
mov
pop
stos
fists
stos
sbb
out
lods
jo
jae
jp
cmp
fwait
lds
jnp
inc
pop
outsb
push
roll
xchg
lods
push
jne
les
pop
push
add
std
insl
dec
and
movsb
test
sub
xor
mov
push
push
bnd
mov
in
sbb
adc
push
mov
add
mov
test
sbb
pop
mov
sub
mov
jle
mov
fld1
adc
pusha
jno
xchg
sbb
call
popf
pop
sub
xchg
arpl
test
push
nop
mov
insb
sbb
and
xchg
incb
aad
je
xchg
push
pop
jo
adc
xchg
lahf
adc
or
das
xchg
in
inc
push
fwait
mov
inc
or
enter
jb
or
push
or
bound
lahf
jp
push
push
pop
push
add
mov
add
dec
pop
add
and
xorl
xchg
mov
lcall
cmp
jmp
dec
fistl
cmp
lds
in
shr
ret
push
and
or
imul
sub
or
cwtl
into
cmp
adc
cmp
push
insb
xor
or
inc
sub
inc
and
push
aaa
inc
test
adc
inc
ficomps
xor
push
cld
je
sbb
inc
sub
shlb
addps
bound
test
outsb
or
push
dec
mov
push
pop
es
movsl
jbe,pn
pop
movsl
aad
aad
jb
pop
and
jle
pop
movsb
push
fcomip
push
jp
pop
and
repz
inc
pop
push
mov
inc
sbb
incb
das
mov
int3
addr16
xlat
mov
scas
sti
aad
jno
mov
dec
sbb
mov
es
dec
and
cmc
lods
testb
add
rolb
cltd
xchg
sbb
sub
into
jge
scas
pop
icebp
jge
mov
rorl
hlt
jbe
xchg
inc
fcmovne
jns
ficompl
scas
sbb
xchg
add
lahf
scas
push
xchg
lock
push
jo
xlat
or
movswl
push
or
lret
xor
and
mov
or
sub
jbe
aad
jns
mov
and
mov
lret
or
cs
lea
xor
inc
test
leave
jecxz
rcrb
mov
lret
sbb
add
add
idivl
int
mov
mov
aad
xchg
scas
leave
xchg
repz
lahf
xor
inc
leave
dec
push
mov
je
mov
cmp
sub
cmpb
ljmp
pop
ficoml
cmp
std
imul
stos
inc
cmp
sbb
inc
pop
clc
test
fnstenv
cmp
cwtl
jns
dec
mov
or
inc
xchg
mov
stos
std
push
or
inc
inc
mov
inc
mov
sahf
maxps
adc
jp
pushf
xchg
popa
test
inc
mov
mov
inc
mov
pop
mov
and
mov
imul
pop
xor
inc
insl
out
inc
mov
sbb
cmpsl
push
inc
inc
imul
mov
mov
lods
xor
std
out
mov
jle
push
test
imul
mov
mov
sbb
ljmp
cmp
into
and
insb
divl
xchg
std
scas
out
sbb
shr
mov
and
pushf
fcomi
mov
scas
jno
leave
call
in
fcoml
movsb
aam
pop
movsb
cltd
pop
shll
test
mov
sbb
cmpl
pushf
or
sub
stos
push
cld
inc
ret
sbb
test
les
pop
stos
hlt
xchg
add
jne
sbb
sbb
adc
xchg
lea
stos
mov
jecxz
mov
in
std
add
mov
add
add
in
and
add
mov
and
test
pop
movsb
imul
ja
xlat
aad
and
sbb
push
or
adc
push
mov
ds
es
movsl
add
je
imul
mov
adc
mov
xor
shrl
mov
pop
add
loop
cmp
push
nop
outsl
inc
push
sbb
rorl
cmpsl
das
and
jl
or
adc
dec
popf
sbb
push
hlt
stos
lret
lods
in
dec
sbb
fcomip
mov
jnp
dec
sub
stc
dec
pop
inc
arpl
and
mov
lds
sub
jno
pop
divb
stos
inc
lcall
cmp
lods
inc
sbb
xor
lds
xlat
andl
lods
subl
jo
mov
in
dec
mov
and
shll
pop
mov
inc
sub
mov
xlat
jl
adc
mov
aaa
aam
jmp
sti
push
rolb
leave
mov
mov
xor
jnp
sbb
inc
lock
xor
and
insl
pop
enter
xchg
jne
sub
mov
inc
cmpsb
inc
dec
lahf
call
jns
pop
jnp
out
jmp
sahf
pushf
ret
xor
dec
inc
pop
xchg
pop
movsb
shrb
push
fists
mov
flds
arpl
aaa
or
fcomi
pop
or
mov
add
or
mov
hlt
sbb
fisubrl
out
cmc
mov
in
dec
mov
jmp
jmp
aad
mov
sub
fcmovnb
pop
stos
lret
test
ret
enter
js
js
nop
filds
inc
pop
js
ljmp
inc
xchg
adc
mov
xor
imul
inc
dec
mov
cs
pop
fmul
test
mov
sub
bound
insl
add
mov
dec
stos
cwtl
jns
fdivp
mov
dec
xchg
mov
jg
pop
lea
adc
fdivs
xchg
mov
jnp
mov
std
je
mov
push
cld
and
xchg
iret
cmpsl
dec
push
mov
and
mov
jmp
xchg
and
stos
js
cltd
push
mov
scas
fldt
jecxz
bound
xchg
jg
test
pop
jns
lret
out
imul
jae
out
jmp
xchg
adc
push
loope
mov
inc
sbb
arpl
stos
or
popf
bound
out
int3
mov
arpl
addl
mov
jae
sub
xlat
sub
inc
cwtl
xor
lds
push
jnp
xchg
sahf
jno
das
inc
mov
gs
jb
xlat
fsts
mov
lret
scas
lahf
jp
push
sub
jne
dec
cmpsb
inc
aaa
xor
pop
stc
js
inc
mov
test
push
xchg
add
sbb
imul
and
inc
pop
xchg
jecxz
add
jbe,pn
mov
xor
inc
int3
out
mov
mov
dec
jno
mov
movsb
add
stos
push
icebp
dec
imul
shrl
insl
ljmp
pop
xchg
arpl
pop
jns
xor
imul
scas
xchg
mov
in
xchg
stos
mov
mov
cmpsl
push
lcall
clts
cmp
cmc
mov
fwait
leave
in
andb
call
push
inc
mov
or
in
mov
xor
fnstenv
fiadds
data16
or
pop
cli
pop
test
sub
mov
subb
mov
cltd
enter
dec
mov
add
addl
jp
push
and
pop
jne
cltd
lahf
fsubr
dec
mov
adc
negl
les
jbe
push
jo
lcall
add
decl
push
inc
pop
hlt
loope
inc
in
sub
add
shlb
in
inc
cmp
xor
add
xor
shll
xchg
inc
cwtl
repnz
test
mov
loop
push
xor
and
pop
xor
test
iret
fucom
push
or
test
std
adc
inc
in
stos
icebp
cmpsl
sbb
mov
push
out
icebp
inc
lcall
dec
jmp
shr
push
pop
xchg
or
mov
outsl
fs
addr16
movsb
cmpsl
outsl
lahf
nop
sbb
dec
jg
scas
cmp
sub
les
adc
test
pusha
inc
cwtl
push
sub
daa
jp
mov
dec
or
inc
inc
imul
cmp
jb
fs
and
sbb
push
push
or
sbb
sbb
mov
push
add
ljmp
mov
mov
mov
xchg
stos
scas
pop
stos
les
sub
jnp
scas
add
jmp
xchg
pop
popa
jb
in
clc
hlt
loope
inc
in
sub
add
movsb
loope
fsts
orb
and
roll
enter
xlat
stos
movsb
or
test
and
stos
in
dec
call
lret
jmp
imul
xchg
dec
fists
inc
outsb
out
pop
sahf
fwait
sahf
pop
stos
pop
je
xor
mov
xchg
mov
fdivl
adc
test
es
pop
cs
or
mov
idivl
cmc
push
pop
test
stc
rcl
dec
cmp
sti
ret
je
cmp
out
jp
mov
insb
ss
mov
pop
popf
and
cs
test
and
insb
mov
push
mov
dec
imul
enter
leave
cs
sub
nop
std
pop
push
iret
shr
xchg
rorb
or
mov
int
inc
lock
dec
clc
pop
adc
mov
jecxz
ret
lods
or
add
out
inc
cmp
xor
pushf
dec
and
push
xor
jb
lcall
pop
ficoml
mov
mov
mov
popf
lret
mov
sub
int
push
addb
stos
dec
cmp
stos
inc
gs
mov
sbb
mov
push
lret
mov
pop
pop
or
js
insb
pushl
stc
jbe
negb
or
jo
or
add
pop
cli
add
push
insl
xor
test
fwait
cld
jg
jp
clc
inc
jne
adc
and
test
gs
leavew
dec
mov
xchg
jae
enter
decb
push
mov
mov
push
inc
mov
sbbb
adc
stos
repz
out
loopne
inc
sbb
sbb
ljmp
daa
mov
adc
xor
iret
cmpsl
ret
xor
cwtl
or
adc
jb
jp
and
sub
sbb
add
pop
xchg
arpl
mov
jae
add
scas
xchg
fcmovb
lcall
and
dec
pop
adc
jmp
jno
or
sbb
shlb
cmc
in
sbb
rcrb
ljmp
add
cmp
dec
fnsave
push
sahf
inc
mov
cmp
fistps
es
arpl
fwait
lea
outsl
enter
hlt
add
shl
hlt
sub
or
scas
lods
fisubrs
insb
xchg
lds
dec
mov
movsl
ds
mov
pop
mov
push
in
xchg
xchg
and
or
out
mov
jnp
mov
pop
sbb
cmp
push
stos
cmp
cmp
and
and
xor
mov
mov
add
jnp
lahf
xchg
sbb
mov
data16
sub
cmp
jno
dec
pop
subl
push
mov
pop
sub
or
dec
pop
adc
pop
xor
jle
insl
lock
mov
mov
idivb
pop
js
lahf
je
inc
xor
hlt
add
xor
sub
add
and
pop
mov
and
inc
inc
fimuls
aam
xor
pop
jge
xchg
mov
mov
or
fwait
outsl
lods
add
stos
adc
out
test
aam
fsubl
mov
xchg
pop
xor
mov
push
mov
mov
les
mov
or
push
xchg
imul
cmp
lcall
xor
pop
mov
push
jecxz
ret
lods
or
or
shll
dec
dec
mov
movsl
ret
popf
jnp
add
lret
mov
push
jmp
cltd
aad
sbb
cmpsl
test
addr16
clc
ret
xor
cmp
addr16
jl
or
jmp
push
sbb
and
mov
inc
and
add
push
cld
dec
xchg
icebp
shrb
sahf
mov
lahf
jnp
pusha
mov
test
jae
icebp
cmp
cmp
mov
or
xchg
adc
rolb
aad
mov
adc
mov
cmpsl
sar
int
inc
mov
inc
xor
cli
ds
xlat
pop
icebp
xchg
xor
lea
pop
cld
and
mov
lea
imul
insl
add
repz
test
sar
lds
mov
repz
mov
fwait
hlt
mov
or
sahf
ret
mov
and
cmpsl
mov
fidivrs
push
mov
pop
jle
jmp
mov
lds
xor
fsubrs
xchg
mov
dec
cmc
lods
inc
popa
mov
dec
popf
in
dec
es
adc
jae
cld
scas
or
or
lcall
rorb
cwtl
push
repz
push
jbe
pop
insl
lock
pop
test
mov
push
mov
js
mov
pop
sub
jo
mov
cmp
aad
add
dec
fwait
and
mov
mov
sub
out
mov
xchg
ret
or
or
shrb
jb
push
jns
and
out
fldenv
or
fsubp
mov
cwtl
cltd
out
pusha
in
mov
daa
adc
dec
je
pop
mov
scas
pop
stos
pop
clc
fdivl
std
imul
sti
clc
sti
pop
fs
in
clc
add
scas
scas
adc
bound
mov
cmpsl
mov
cmp
int3
fadd
inc
mov
xchg
stos
les
test
pop
xchg
lods
push
repnz
js
mov
push
stos
daa
jb
pop
imul
ljmp
mov
and
addb
clc
in
lock
inc
andb
jmp
ja
push
cltd
lods
mov
scas
rcl
mov
scas
jb
out
mov
fwait
leave
repz
xchg
or
mov
repz
pop
daa
aam
test
adc
mov
fiadds
dec
xor
sti
add
rcrl
rclb
adc
orl
pop
add
push
mov
scas
lcall
pop
and
jbe
mov
lret
mov
ret
loopne
stc
scas
push
dec
adc
in
mov
idivb
scas
test
lock
sub
lds
xor
dec
cmp
and
mov
mov
pop
movsb
adc
test
jmp
jae
les
mov
aas
jae
inc
mov
movsl
pop
sub
popa
inc
sub
add
xchg
xor
sub
sbb
insb
aas
movsl
xchg
call
cs
inc
push
popa
call
jnp
adc
scas
inc
push
inc
clc
xchg
push
pop
clc
push
lds
inc
xchg
and
lcall
xor
rcll
xor
mov
clc
mov
adc
mov
lahf
inc
pop
pop
repz
or
pop
xchg
outsl
add
add
fildl
scas
es
pop
subl
repnz
jne
ja
xor
in
mov
movsb
mov
out
movsb
pop
mov
pop
xlat
pushf
add
push
sub
mov
inc
mov
mov
mov
scas
or
pop
cli
mov
loop
shll
jl
nop
aaa
repnz
dec
lods
push
hlt
mov
das
stos
push
call
loopne
push
and
loopne
xchg
test
dec
mov
xor
stos
mov
xchg
popf
push
jge
sbb
xchg
shr
mov
inc
sbb
lods
inc
jnp
bnd
sbb
jg
xlat
out
cmpsl
dec
or
mov
fidivrs
inc
repz
pusha
push
fdivs
add
mov
je
mov
lods
jle
push
shr
mov
cltd
enter
ss
ret
fs
xor
scas
test
mov
fsubr
xor
push
pop
aam
int3
neg
sti
shr
aas
jae
negb
sub
repz
mov
ja
push
repnz
jbe
add
jmp
mov
inc
cmp
dec
cmpsl
mov
inc
jmp
cwtl
lret
mov
jno
sbb
nop
loop
notb
test
andl
pop
sbb
je
pop
lods
mov
shl
movsb
cmpsl
xchg
cwtl
popl
pop
test
outsb
flds
mov
subb
fimull
roll
jns
fsts
cmpsl
popa
jle
lahf
cli
filds
cmp
jmp
jge
mov
iret
mov
loop
lds
sbbl
inc
sub
cmpsl
add
aam
rclb
inc
test
cmpsl
ja
xchg
out
xchg
les
cmpsb
subb
gs
cmc
mov
mov
and
popf
mov
cmpsl
cmp
pop
and
and
hlt
xchg
xchg
in
mov
fsubr
push
lret
dec
dec
mov
jle
stos
les
inc
xor
pop
add
mov
clc
sti
pop
inc
shrl
jp
inc
addr16
push
inc
xor
sbb
sbb
test
punpckhwd
ret
icebp
frstor
nop
adc
pop
pop
stos
cmc
inc
aad
dec
mov
test
stos
fildll
mov
pushf
aaa
in
or
mov
xchg
hlt
pushw
jmp
inc
mov
cmc
xor
movsl
nop
push
out
jge
or
lods
movb
add
inc
stos
mov
pop
mov
pop
sub
xchg
inc
xchg
inc
xchg
mov
push
addl
mov
cmp
add
sub
xchg
mov
sbb
xor
sbb
movsl
popa
jno
pop
cmp
dec
xor
sub
enter
sbb
sahf
cs
fidivrl
adc
add
lret
xorb
and
ljmp
rcrb
dec
and
xorb
cmp
lock
rep
into
cli
push
jno
leave
mov
pop
add
and
mov
imul
push
pushf
pop
and
dec
repz
mov
jno
push
ljmp
pop
dec
push
push
inc
dec
in
lret
jbe
inc
inc
das
sub
popf
call
or
jmp
lcall
xchg
pusha
add
inc
dec
sub
sbb
jno
adc
sbb
adc
addl
cmp
inc
xor
fsubrs
xchg
dec
stos
pusha
inc
cwtl
inc
rcrl
stc
cmpsb
fildll
cmp
dec
inc
movsl
push
sbb
mov
or
mov
incb
sub
jmp
cmp
andb
jns
lea
and
xor
cmp
rclb
cmp
mov
add
stc
push
lea
pop
and
mov
inc
daa
sub
adc
leave
out
popf
enter
stc
pushf
dec
mov
mov
adc
pop
and
hlt
push
lahf
adc
sbb
test
pop
mov
lock
adc
inc
aas
mov
ja
add
insl
movsl
call
dec
push
pop
lahf
push
lcall
jns
es
leave
repz
call
test
sar
addr16
push
mov
push
adc
clc
push
call
push
xchg
ss
xlat
ffreep
into
test
iret
hlt
xor
xchg
js,pn
add
inc
mov
outsb
xchg
add
gs
int3
jmp
jno
cmp
lds
mov
les
sbb
mov
into
cmp
fisttps
mov
lock
cmp
enter
lock
sbb
jae
dec
xchg
ss
sbb
popa
jne
sarl
int
testl
mov
dec
and
adc
jg
sar
fidivrl
sbbb
js
ret
push
jne
inc
xchg
pop
dec
rorl
ds
das
pushf
adc
cmp
mov
mov
jge
inc
mov
pop
mov
sub
jp
loopne
and
inc
iret
or
or
add
jns
pop
xor
push
inc
sub
pop
out
cmp
mov
cmc
inc
or
stos
cltd
sub
fmul
jnp
cmpsl
mov
out
lds
stc
adc
push
mov
jb,pt
dec
push
adc
insb
xchg
lods
into
or
shl
mov
push
arpl
test
lahf
mov
test
js
hlt
xor
pop
inc
ret
sahf
add
xor
leave
je
repnz
jbe
sbb
push
mov
fldenv
push
push
lock
or
push
dec
push
lret
push
add
lret
or
or
jge
and
lods
fsts
fistps
pusha
test
rcll
cmp
sub
lock
test
jno
ret
xor
jnp
cmpsl
pop
insb
aas
lret
mov
fldl
xchg
cli
js
sarb
pop
repz
call
scas
inc
adc
shrb
sub
adc
mov
or
jecxz
and
stos
xor
aam
icebp
jb
cmp
repz
jno
fwait
jo
pusha
jmp
push
test
mov
cwtl
mov
jg
cltd
incb
fdiv
imul
push
arpl
pushf
sbb
outsl
pop
in
inc
jnp
sbb
dec
loop
cmc
sub
movsl
mov
out
lret
rcrl
sbb
inc
cltd
popa
sahf
ret
sbb
fs
xlat
and
test
ret
xchg
push
mov
out
jae
push
lods
incl
pop
icebp
mov
add
jo
xchg
mov
les
pop
stos
filds
or
jl
adc
filds
xor
jg
in
bnd
xor
sub
push
cmc
icebp
push
cmp
xor
in
dec
sti
arpl
dec
dec
inc
mov
inc
or
push
dec
mov
pop
in
push
bound
jnp
gs
imul
pusha
fdivrl
mov
inc
jge
jbe
loopne
xor
test
test
lea
inc
xchg
lahf
adc
movsl
lds
sahf
dec
cmp
cmp
cmp
jae
cmp
pusha
sub
mov
lods
into
cltd
cmp
popa
jp
jb
mov
arpl
xchg
or
jno
dec
in
push
push
xlat
in
dec
xchg
ja
xchg
mov
pop
js
ret
popa
out
lock
cltd
mov
pop
sbb
sub
and
das
inc
fsts
std
sub
stc
rclb
adc
dec
xor
xor
arpl
into
lcall
scas
dec
xchg
test
cmpl
push
pusha
dec
lcall
mov
data16
mov
test
push
push
andl
pop
out
xor
sub
sbbw
mov
jne
inc
test
xchg
leave
push
cmp
iret
push
sbb
xchg
add
cwtl
dec
push
sub
cmp
xchg
xor
push
enter
rolb
shll
call
inc
mov
ja
sbb
lods
imul
test
jbe
dec
adc
cmp
std
lds
imul
mov
push
cmp
mov
lahf
push
sar
rcrl
fidivl
arpl
jns
jp
jle
sbb
and
sbb
add
push
xchg
fwait
inc
scas
sahf
or
mov
jle
leave
shrl
sub
imul
out
jmp
into
inc
fwait
add
nop
pop
cmp
mov
stc
or
or
imul
push
pop
ret
push
das
push
mov
xchg
dec
push
add
inc
std
jo
adc
xor
pusha
inc
push
sub
stos
adc
xchg
rclb
pushf
xchg
test
jp
lds
test
out
mov
data16
mov
and
pop
push
sbb
sahf
aas
mov
mov
loope
xor
jge
aad
aas
shrl
jg
xor
mov
dec
sbb
xlat
pop
sbb
test
daa
loop
cltd
mov
int
jae
lcall
dec
les
mov
mov
into
mov
xor
addb
les
scas
fwait
adc
fwait
lods
movb
ret
lcall
jnp
lods
hlt
dec
loopne
lcall
icebp
sub
adc
roll
sbb
cwtl
fdivl
jl
sbb
out
fsts
xchg
mov
push
stc
mov
sub
mov
fdivrs
pop
fsubl
xor
incb
dec
jb
out
jne
mov
push
hlt
inc
inc
loope
ss
cwtl
ds
in
leave
sub
cmpsb
std
nop
inc
fwait
leave
scas
loopne
cmc
xor
outsl
pop
icebp
pushl
xor
pop
adc
pop
nop
dec
clc
iret
jae
ja
inc
imul
cmc
sub
mov
add
xor
popa
sbb
jo
cmp
mov
aaa
mov
inc
sbb
mov
in
sbb
dec
loopne
cmp
fs
mov
ljmp
mov
xchg
dec
xor
aam
ret
inc
xchg
or
xor
dec
mov
jmp
stos
add
inc
pop
dec
pop
cmc
push
pop
xchg
xor
lods
jno
mov
pop
jo
sub
sbb
repnz
les
mov
push
std
pushl
or
fdivrs
rcll
push
mov
testl
xchg
xor
in
mov
jl
sbb
aas
cmp
fdiv
jb
outsl
fildl
adc
push
adc
xchg
sub
add
add
xorb
mov
loopne
mov
clc
sti
mov
pop
or
xchg
sbbb
mov
or
mov
sahf
push
push
xlat
lds
mov
xchg
inc
in
push
dec
mov
test
popf
or
mov
divl
sbb
or
fcomps
xchg
pop
imul
sbbl
adc
sub
orb
imul
sub
div
loopne
push
bound
js
xchg
cmp
fistl
lea
mov
dec
aam
fstp
pusha
xor
dec
aam
test
daa
rcrb
inc
add
jo
dec
dec
lds
or
sub
popa
mov
enter
lret
adc
mov
mov
mov
dec
popf
or
roll
xor
mov
daa
cld
test
jnp
dec
lock
sti
mov
loope
inc
lods
add
adc
cmp
scas
jg
scas
mov
push
leave
and
jle
mov
adc
jle
jge
stc
and
mov
insl
mov
ja
push
mov
ljmp
pop
dec
jp
inc
popa
jbe
fucomp
adc
das
cmp
dec
subb
push
mov
rorb
shlb
add
or
adc
push
adc
push
mov
in
std
and
sti
stos
iret
cmpl
or
in
mov
jnp
fwait
mov
cmp
cli
xchg
mov
mov
mov
cmp
lea
xor
mov
inc
cmp
cmp
test
in
sub
fcmovnbe
mov
push
ficoml
pop
ja
sbb
jo
and
cmpl
roll
int
outsl
cmp
add
add
ss
inc
inc
in
pop
mov
adc
frstor
jnp
sub
mov
scas
add
and
lds
aaa
outsl
outsl
js
xor
cmpsl
outsb
out
xchg
lret
pop
xchg
mov
pop
loopne
lret
cmp
or
add
fstpt
sub
xor
nop
inc
lds
cmp
inc
mov
inc
mov
push
loop
scas
popa
sbb
and
adc
addl
cmp
ret
dec
daa
clc
cmp
xlat
mov
popa
xor
sbbl
mov
lcall
dec
pop
int
sbb
lretw
mov
bound
and
xchg
push
insb
add
test
ja
push
sahf
mov
ds
mov
shlb
jmp
fbld
sbb
sub
push
iret
in
cli
cmp
mov
pmullw
cmp
push
sub
stos
sub
jo
and
mov
loop
xor
iret
cmp
add
xor
mov
xchg
scas
inc
nop
addr16
mov
push
iret
jae
arpl
mov
push
out
arpl
rorl
ret
xorl
dec
lret
lea
pop
clc
push
arpl
mov
aaa
fnstsw
cmp
jecxz
cmp
fidivrs
mov
jmp
cmp
pop
stc
xlat
add
cltd
ds
mov
loopne
rcrb
clc
add
loopne
gs
xchg
xor
mov
pushf
das
fldenv
ja
jns
ljmp
insb
ss
out
mov
scas
inc
jmp
int3
jae
addr16
adc
add
and
sub
mov
scas
fs
cmc
mov
pop
adc
push
cld
outsl
sub
mull
xor
xchg
loopne
loop
rcll
pop
or
adc
jmp
dec
aaa
shl
dec
or
mov
xor
sub
rorb
dec
and
aad
xor
pop
cmpsb
add
add
int
test
mov
push
out
arpl
sahf
shrl
out
enter
add
mov
pop
jge
ljmp
mov
loop
pop
enter
ljmp
jl
jp
out
jg
shl
sbbl
pop
mov
mov
mov
xor
test
mov
mov
adc
in
arpl
jb
outsl
push
das
ficomps
pop
cmp
pop
xchg
popf
in
and
push
add
xor
loope
xchg
push
xchg
fs
mov
jl
in
orl
mov
aaa
into
jmp
jmp
rcrl
idivb
pop
mov
jno
pop
cmp
mov
inc
mov
jle
or
loope
xor
xor
or
inc
mov
push
cmp
jmp
jl
nop
xlat
stos
aad
inc
dec
lods
mov
xchg
cli
ficomps
std
mov
inc
iret
jae
pushl
cmp
es
adcb
add
or
inc
xchg
stc
mov
mov
mov
xor
dec
in
jle
mov
push
imul
out
hlt
div
cwtl
fnstsw
js
push
cwtl
cld
sbb
mov
fwait
push
dec
mov
sub
fsubs
fwait
jg
jge
scas
jno
adc
dec
hlt
or
mov
arpl
dec
mov
cltd
enter
es
mov
and
jae
mov
aas
lahf
inc
int
pop
fisubrs
pop
push
mov
cmp
pop
loope
inc
dec
ret
lcall
dec
xchg
pop
mov
cmc
clc
sti
mov
sti
jae
arpl
inc
mov
repz
cmp
cmpsl
mov
in
outsl
movsl
mov
test
stc
mov
decb
je
and
jle
arpl
loop
push
fimull
xor
pop
sbb
or
cmp
adc
lds
shrb
aaa
bound
out
cmpsb
fcoms
jb
lods
popa
cs
mov
xchg
jmp
outsb
iret
mov
stc
loope
data16
icebp
xchg
dec
xchg
in
lcall
mov
mov
mov
fldenv
mov
mov
frstor
mov
cs
mov
adc
rcll
aam
xor
movsl
push
cld
push
push
push
leave
push
and
mov
sbb
arpl
sbb
cmp
fdivrl
or
inc
or
movl
push
stc
repz
mov
cmc
mov
testb
das
push
mov
sbb
jle
adc
push
loop
mov
pop
dec
pop
dec
das
xchg
loopne
sbb
call
mov
dec
out
call
pop
dec
addr16
aad
push
mov
sub
adc
aad
xor
mov
push
test
push
xor
ss
std
push
mov
xor
adc
sbb
add
stc
fbld
je
adc
xor
out
test
test
pop
sub
movsb
lret
mov
inc
loopne
frstor
jmp
out
int3
loope
out
inc
faddl
cmpl
hlt
lret
push
fildll
xchg
int
dec
mov
enter
ficoml
pop
aam
test
mov
xor
cld
jbe
add
sti
and
pop
jmp
lret
ret
arpl
aad
aaa
adc
cmp
and
inc
out
xor
dec
inc
dec
jns
lods
xor
mov
push
xor
push
push
shll
outsb
iret
jae
loopne
mov
cs
arpl
or
je
ret
test
test
lds
rorl
jae
fsts
xchg
cli
loope
jp
cmp
lods
jg
shr
icebp
cltd
jle
mov
pusha
mov
andl
xchg
into
rorb
aad
frstors
fldenv
mov
stos
lods
inc
stos
cmp
out
mov
dec
mov
and
xor
push
xchg
inc
shlb
push
and
ret
sti
jne
dec
ja
lods
inc
mov
jbe
jne
sbb
lods
cmp
movsl
dec
call
push
fbstp
sbbb
outsl
add
xor
add
mov
and
orb
cwtl
fsubrl
xchg
mov
adc
imul
pop
xchg
pop
loope
test
xor
stc
mov
aaa
mov
rolb
imul
clc
push
clc
popf
dec
das
shlb
rcrb
insl
or
movb
xchg
int3
fimuls
lea
divl
in
out
and
cmc
cld
inc
adc
adc
fcomps
push
sub
add
push
jle
pop
inc
jne
test
xor
lcall
stos
jb
push
lock
jae
rolb
jns
sbb
ficomps
push
dec
stc
jmp
xor
dec
push
and
cmp
jmp
out
movsb
jge
xchg
call
scas
fbstp
js
test
fucomip
in
dec
ret
cld
pop
and
fbstp
jne
icebp
or
stc
jecxz
in
mov
add
push
xchg
nop
mov
das
mov
cmpl
lds
push
sbb
out
mov
in
shll
ret
inc
cltd
mov
clc
gs
push
insl
jmp
insl
jg
push
imul
inc
pop
sub
lods
subl
and
aam
insb
aad
mov
movl
mov
pop
sub
mov
sub
repz
lds
sub
push
sub
lds
adc
daa
enter
lods
in
push
or
add
aaa
push
jge
xchg
jne
and
daa
xchg
enter
cld
shlw
lret
jp
xor
cs
push
ret
daa
pop
pop
push
inc
std
std
call
add
dec
pop
movsl
and
xlat
sahf
mov
jle
addr16
dec
outsl
lret
push
sub
add
lds
jbe
movb
out
and
jne
in
out
shll
jno
aaa
xor
aas
sti
loop
movsb
and
int
jae
xorb
fwait
pop
mov
testl
xchg
mov
sub
popa
popa
mov
sub
movsb
mov
xchg
adc
addr16
ret
sahf
xor
aam
stc
in
jmp
gs
hlt
insb
lcall
ja
or
inc
fwait
out
pusha
sbb
mov
push
mov
inc
cwtl
movsb
in
add
push
or
mov
adc
and
test
sahf
stos
int
sub
int3
adc
movsl
lret
cmc
xor
out
sub
mov
jo
dec
dec
sub
mov
push
stos
sbb
add
xlat
and
or
xor
scas
shr
je
mov
addr16
jno
push
xor
inc
test
push
jl
xchg
jge
sbb
ds
icebp
sti
jmp
incb
sbb
jecxz
push
sti
xor
shll
cmp
in
addr16
xchg
ljmp
mov
inc
dec
push
pop
into
test
fucomp
insl
push
jecxz
push
and
xor
jns
repnz
inc
repnz
in
vandps
inc
shrb
push
lock
das
sub
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
popa
in
bnd
xor
adc
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
or
or
xlat
cmpsb
test
dec
jb
fldenv
fwait
outsb
aam
sti
pop
lcall
pusha
rcrb
jle
negl
aam
aad
aad
fnsave
mov
inc
or
xor
popa
gs
push
mov
inc
pop
stos
shl
test
mov
push
mov
push
divl
hlt
add
sub
mov
stc
shlb
fadds
cmp
inc
lret
fcompl
cs
cmc
stc
ljmp
dec
sbb
repz
dec
push
enter
fidivrs
test
das
pop
rcrb
xchg
mov
adc
sbb
iret
jp
or
dec
aas
inc
lahf
push
dec
jnp
push
lods
pop
add
subl
into
push
inc
orb
jae
add
inc
cmp
je
shl
pop
or
mov
andl
movsl
popf
mov
pop
push
sbb
call
and
inc
clc
jo
aam
mov
cmpsl
std
mov
je
mov
daa
xchg
enter
add
orl
std
fisubrs
mov
mov
fstpt
ss
jnp
out
test
cld
and
stos
std
xor
enter
pop
std
inc
outsl
fcmovbe
out
outsb
jne
add
mov
cmp
xchg
xor
xchg
imul
mov
scas
mov
stc
lret
mov
add
push
sbb
xor
xor
ds
sbb
mov
xchg
divb
divb
mov
and
pop
jnp
and
andb
and
add
xchg
cmp
pop
jns
or
mov
lock
pop
adc
pop
ja
incb
mov
cmpsl
test
inc
push
in
mov
push
out
cmp
loopne,pn
js
push
add
xor
insl
mov
xor
iret
sub
sbb
hlt
imul
ljmp
mov
mov
cmp
loop
lret
inc
lds
xor
push
sub
lods
and
xchg
cmp
popf
js
loope
push
sub
andb
decl
adc
int3
aad
jp
sbb
adc
icebp
cld
jg
or
jne
sbb
add
dec
in
adc
loop
and
lock
int3
stos
push
jmp
xor
push
pop
call
sub
bound
js
push
push
lods
out
add
push
or
dec
aas
dec
lahf
jp
dec
jnp
clc
or
in
pop
pop
inc
sub
or
push
sbb
sbb
aas
inc
stos
shr
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
popf
lock
adc
mov
pop
int3
xchg
fwait
xor
in
mov
ljmp
das
push
aas
push
xchg
gs
inc
sbb
xor
jecxz
icebp
xor
jbe
ss
push
and
aam
mov
or
leave
rclb
or
jl
jecxz
mov
ret
outsl
push
adc
push
inc
ret
mov
outsl
lcall
lcall
icebp
loopne
fs
cmp
jmp
test
inc
bnd
scas
test
cwtl
xchg
mov
fmull
or
sub
sbb
jge
sub
movsl
stos
mov
sub
add
test
push
stc
loope
jecxz
clc
jb
aaa
lock
fs
sub
lock
add
push
in
xor
testl
or
or
test
daa
xchg
and
into
cmp
jae
sahf
add
pop
sbb
sbb
lcall
sbb
test
int
cmpsl
aam
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
inc
jns
pop
fildll
es
mov
out
xor
push
mov
in
cmp
pop
pop
loope
sbb
inc
push
mov
jae
sbb
or
inc
jmp
jle
int3
adc
pop
into
lahf
adc
test
push
dec
std
sub
pop
add
mov
sbb
and
mov
cmp
int3
cld
incb
lea
mov
dec
jns
mov
dec
jg
push
fs
test
lods
fcoms
ficomps
es
imul
fistps
inc
cld
hlt
add
inc
ja
cmpsl
adc
inc
jl
cwtl
pop
nop
les
fnsave
fbld
dec
sub
sub
pmuludq
push
fs
movsl
rolb
dec
aam
imul
mov
jo
loopne
jp
aaa
es
js
adc
cmpsb
pop
clc
lods
outsb
inc
mov
bound
push
pop
aaa
dec
popf
jnp
or
loop
test
enter
inc
aas
push
cmp
mov
sbb
ret
scas
ret
mov
pop
shll
sbb
movsb
mov
jle
or
orl
and
mov
imul
and
mov
les
push
jg
and
xor
addl
sub
sbb
shl
je
mov
push
scas
dec
pop
jnp
sbb
mov
add
pop
pop
jmp
mov
push
sub
fistpll
js
inc
stos
fisttpl
lds
pop
rorb
inc
cmp
pop
lcall
je
cmp
je
xor
imul
adc
out
jns
and
jb
insb
mov
and
les
movsl
movsb
imul
cs
test
jle
pop
dec
fistpll
or
iret
push
les
xor
pop
js
mov
cmpsl
xor
outsb
add
push
push
sub
inc
inc
jmp
add
lock
fs
mov
pop
leave
cmp
xchg
out
sti
ja
push
adc
js
and
mov
jae
shll
add
cmp
pop
jae
cli
or
outsl
vandps
inc
or
outsb
int
in
pop
pop
in
daa
dec
lods
rcll
test
aaa
push
fdivr
fdivrp
and
std
rcrb
dec
ss
xor
insl
repz
pushf
add
push
out
cmovo
adc
cmp
loope
fucomp
adc
stos
frstor
jb
flds
xor
dec
sbb
sbb
lea
mov
xchg
iret
sbb
lret
leave
pop
cltd
lcall
inc
xchg
je
loope
cmp
insl
pop
nop
test
jo
adcb
les
mov
jl
fiaddl
push
mov
in
sub
fdivl
add
sbb
rorb
negl
gs
loopne
fs
cmp
jmp
test
inc
shlb
scas
test
cwtl
xchg
mov
fmull
or
sub
sbb
out
jge
sub
movsl
stos
mov
sub
add
test
push
stc
loope
jecxz
arpl
jne
lahf
das
outsl
jge
nop
cmp
push
es
push
add
and
out
idivl
cli
sbb
xchg
loope
test
test
addr16
cmpsb
scas
mov
test
test
push
pop
mov
es
xchg
mov
push
aaa
popf
aas
mov
outsb
pusha
jecxz
lods
sbb
sbb
or
sub
pop
adc
jo
mov
daa
jno
adc
xor
ror
js
out
jge
or
addb
sub
push
incl
add
jae
cmc
iret
maskmovq
divl
outsb
jb
or
lea
add
in
cmpsb
sbb
lret
cmpsl
adc
stos
mov
mov
shlb
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
sahf
in
xchg
ror
push
clc
daa
out
xchg
in
enter
fdivl
outsl
in
jo
outsb
lods
rcpps
orb
xor
test
xlat
add
das
xor
sbb
adc
mov
mov
xchg
mov
cmp
adc
pushf
lcall
jp
es
gs
cmp
outsl
jbe
imul
add
mov
mov
xor
mov
movsl
aad
test
leave
cld
fisubl
push
fnstsw
fdivl
jge
jle
inc
and
lcall
fisubl
mov
popl
pop
add
sbb
loope
fsubrl
push
mov
dec
inc
adc
dec
push
pop
dec
out
adc
mov
mov
fmull
cmp
lds
xor
subl
loop
daa
fstpl
mov
push
mov
dec
pop
jns
in
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
mov
out
sbb
mov
inc
stos
push
lret
fs
cmp
imul
das
jecxz
xchg
inc
cmpsb
ja
das
les
mov
jo
fimuls
mov
aam
cmp
xor
and
rcrb
xor
sysenter
lcall
loopne
enter
lcall
mov
inc
into
loopne
xor
jge
add
out
add
inc
push
fwait
jbe
loope
popf
pop
adc
xchg
dec
jl
xchg
or
insb
mov
jbe
loopne
push
mov
pop
gs
adc
mov
js
pop
int3
test
xor
dec
scas
rcrb
into
imul
hlt
and
and
pop
je
sub
fs
jle
adc
scas
inc
pop
and
call
jns
dec
mov
js
lcall
clc
jle
mov
leave
fisttpll
aam
pop
jae
mov
jl
fs
cmp
aam
jne
dec
lods
add
mov
sbb
int3
andb
sub
loope
out
int
inc
je
cmp
data16
aaa
out
mov
je
fcoms
push
lods
arpl
adc
xor
add
push
or
addr16
js
add
lret
push
or
loop
and
testl
or
jo
daa
jg
sbb
cmpsb
movsb
jl
insl
xor
push
and
test
in
xor
mov
mov
jmp
sub
push
dec
mov
cld
aaa
jbe
clc
mov
mov
add
ljmp
push
mov
xor
xchg
sub
inc
in
xchg
sbb
dec
inc
testb
jo
mov
or
subl
push
scas
xor
jo
dec
std
xchg
xchg
popf
lock
push
insl
hlt
sbb
out
push
aaa
adc
sub
jb
in
jp
adc
pop
xor
dec
and
push
out
jmp
dec
inc
mov
mov
movsb
jg
mov
fs
incb
jae
int
add
sbb
mov
xchg
sbb
bound
push
and
mov
jge
daa
dec
jo
test
mov
xor
ljmp
das
in
jne
fs
subl
loope
pop
push
dec
in
xchg
mov
into
imul
and
pusha
dec
inc
testb
pop
pop
testl
jbe
cmpsb
mov
mov
push
sbb
enter
mov
jno
dec
mov
inc
jge
lahf
insb
aad
sub
bound
or
jg
xlat
push
jb
stc
xor
ljmp
push
xchg
out
xchg
out
dec
cmp
loope
fucomp
movsb
imul
cmp
aaa
xor
pop
adc
sbb
jl
data16
add
and
sbb
loop
xor
shr
insb
jb
xchg
movsb
mov
jnp
push
cmp
ret
pop
movsl
fsubrl
arpl
push
fnstsw
fdivl
jge
jle
inc
add
lcall
mov
mov
popl
pop
add
sbb
loope
fsubrl
push
mov
dec
inc
adc
dec
push
pop
dec
out
adc
mov
mov
lock
push
jg
jge
lcall
rcrl
add
push
pop
jmp
outsb
sub
add
cmp
push
lds
inc
push
xchg
mov
pop
jns
hlt
inc
pop
or
push
hlt
pop
sub
fnsave
add
sbb
add
mov
negl
mov
inc
stos
push
repz
cmp
imul
das
jecxz
xchg
inc
xchg
das
les
mov
jo
fimuls
mov
aam
cmp
or
adc
sarb
mov
cmpsb
mov
xor
xor
pop
add
push
std
jecxz
arpl
popf
cs
cmp
lds
jmpw
je
mov
inc
push
fwait
push
add
adc
xchg
dec
jl
xchg
or
in
mov
jbe
loopne
push
mov
pop
gs
adc
mov
js
pop
int3
test
jge
lahf
imul
cltd
aam
imul
hlt
and
and
push
sbb
mov
pop
in
xchg
ss
in
or
test
outsl
jo
push
orb
mov
enter
cld
cmc
and
pop
aas
add
leave
xor
cli
cs
pusha
shl
paddq
push
jae
mov
jl
fs
cmp
aam
jne
dec
lods
add
mov
sub
add
push
sub
mov
mov
leave
cmp
out
loope
out
mov
je
fsubs
jns
adc
xor
fcomps
je
adcb
fstl
sbbl
sub
bound
sarb
mov
insl
outsb
adc
pop
dec
jno
lods
inc
leave
xor
rcrb
jnp
fwait
mov
sbbl
icebp
xor
adc
dec
mov
adc
jmp
loop
pop
cmp
pop
int
adc
jg
push
imul
iret
and
jnp
les
negb
lods
mov
mov
xchg
stc
mov
test
ss
mov
sti
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
repz
sbb
je
cmp
je
jp
jg
jns
xchg
or
aaa
bnd
mov
inc
mov
sbb
xchg
jmp
dec
inc
mov
mov
gs
mov
fs
incb
jae
int
add
and
js
xchg
mov
and
in
bound
push
and
mov
jge
daa
dec
jo
cmp
xchg
adc
lock
fcompl
in
inc
imul
push
adc
test
gs
js
and
into
adc
roll
repnz
and
testb
pop
pop
testl
jbe
cmpsb
mov
mov
push
sbb
enter
mov
jno
dec
mov
inc
jge
lahf
insb
aad
sub
bound
or
jb
stc
cmp
ljmp
push
xchg
out
hlt
mov
popf
adc
ret
es
or
or
lods
mov
pop
jnp
inc
jbe
loopne
js
mov
or
jo
lret
mov
cltd
sbb
jl
aas
adc
xchg
imul
mov
add
xor
mov
inc
divb
aam
stc
jl
fbld
mov
decl
adc
int3
aad
dec
add
add
movsb
mov
cltd
pop
adc
sub
dec
in
adc
loop
and
mov
popa
push
out
fisubl
or
push
xor
ss
mov
and
dec
bound
aad
scas
xchg
dec
scas
shlb
out
mov
pop
loop
xchg
push
mov
lret
pop
ja
int3
notl
and
mov
scas
movl
cmc
data16
das
rol
arpl
enter
cwtl
mov
out
xchg
fwait
push
pop
pop
or
and
in
fs
inc
lcall
push
pushf
out
inc
orl
pop
inc
test
loopne
mov
jb
pop
mov
cmpsl
push
pop
fidivs
ss
xchg
add
jecxz
jl
dec
push
mov
mov
xchg
ja
imul
or
pop
or
int
pop
movsl
pop
in
js
mov
cmpsl
add
inc
jl
mov
lods
es
dec
cmpsl
fldl
repz
and
add
or
mov
das
dec
xor
divl
arpl
push
sahf
xchg
sti
mov
sub
mov
ss
jae
sbb
mov
mov
arpl
test
push
arpl
test
ss
add
cmp
jmp
stos
sbb
insb
mov
addr16
lret
lods
es
lods
ret
int
mov
add
scas
xor
shll
in
cmp
xchg
daa
addl
pop
push
jno
popa
inc
mov
sbb
cmpsl
ret
jns
outsb
idivl
sti
sti
and
add
mov
dec
leave
mov
mov
jmp
xor
lret
adc
movsl
mov
mov
cmp
jg
inc
and
adc
sub
addl
adc
ret
sahf
and
or
xchg
fcoml
mov
pushf
mov
xchg
and
add
mov
push
leave
lret
mov
add
fstpt
mov
fst
dec
popf
lret
loop
push
cmp
cmp
mov
jl
or
stos
lds
gs
outsl
push
fidivrl
mov
add
inc
ljmp
xchg
xchg
imul
cld
rolb
lods
xchg
andl
loop
mov
jmp
in
jns
clc
and
sbb
xor
pop
push
hlt
pop
in
mov
imul
cmc
lds
cltd
xchg
cmc
mov
test
sti
cmp
aas
cmp
jne
push
adc
mov
xchg
test
mov
add
xchg
cmp
inc
repnz
fwait
call
cmp
ret
rcrl
cmpsb
in
sbb
repz
cmpsb
arpl
add
inc
call
dec
aad
fsubl
xor
test
fcmovne
lret
out
xchg
and
inc
dec
movsl
ljmp
ja
sub
sbb
dec
jae
xor
fld1
jp
push
dec
and
cwtl
adc
popf
addb
and
pop
sub
stos
pop
lods
dec
mov
and
jnp
mov
xchg
push
std
scas
and
or
pop
stc
movsb
and
xchg
push
dec
data16
add
jb
pusha
or
fldcw
sbb
xchg
test
dec
adc
movsl
popf
mov
outsb
aaa
andl
testl
mov
jnp
enter
lcall
in
loope
sbb
leave
xor
sbb
sbb
psllq
aad
ffree
andl
jno
pop
jmp
les
mov
add
mov
xor
mov
push
sti
rcpps
shl
jl
hlt
mov
mov
add
jecxz
add
mov
iret
or
scas
mov
sahf
xchg
leave
aaa
popf
out
sbb
xor
xlat
outsb
jne
mov
push
out
js
test
sub
cmpsb
aaa
mov
out
mov
xchg
loopne
in
daa
and
cs
dec
mov
or
xchg
imul
xor
aam
jb
push
jne
xchg
imul
repz
jmp
mov
xlat
adc
mov
add
adc
daa
inc
stos
cmp
dec
lcall
andb
insl
imul
pop
fistpll
jnp
js
adc
aas
sti
sti
mov
jb
lea
mov
sbb
stos
aas
mov
mov
jmp
lret
mov
sar
jae
shr
repz
pop
out
test
mov
in
stc
shll
cmp
or
inc
mov
add
and
lock
pop
add
xor
loop
shlb
dec
inc
dec
pop
mov
push
xchg
popf
xor
mov
fildll
jge
cmp
aad
imulb
cmpsl
xchg
test
dec
mov
push
push
inc
adc
jbe
fistpl
add
inc
xor
cli
pop
cmc
aad
mov
xchg
push
mov
and
jmp
push
sti
ret
enter
in
test
mov
aam
xor
ljmp
push
mov
aam
dec
fadds
and
xor
inc
ret
cmpsl
ret
xchg
mov
cmp
cmp
add
sbb
or
jo
xor
add
lret
repz
push
mov
cmc
mov
insb
lds
cmp
mov
mov
push
xchg
test
ljmp
or
insb
inc
mov
cld
cld
xlat
inc
cmp
pushf
ss
cmp
push
mov
or
adc
incb
lret
lods
push
or
cmpsl
das
in
cld
leave
lods
push
inc
das
in
jbe
nop
test
push
mov
daa
adc
adc
inc
cltd
dec
cs
outsb
push
int
popf
mov
push
lea
fcoml
mov
mov
jns
lahf
sahf
cmpsl
xchg
cli
inc
cmp
into
sti
movsb
adc
or
scas
pop
pop
stos
xchg
adc
inc
mov
popa
xor
and
cmpsb
cmp
mov
mov
jecxz
cmp
outsl
cmp
mov
ret
sbb
adc
jmp
fwait
sub
cmp
ret
das
cmp
js
mov
clc
ss
movsl
dec
pop
mov
lods
sti
jl
popf
in
cld
mov
xlat
hlt
mov
mov
xchg
or
das
cld
sbb
jmp
mov
movsl
push
and
clc
lret
sbb
loop
icebp
arpl
adc
into
mov
fisttps
cmpsb
dec
mov
or
outsb
cmpsb
sub
cltd
mov
or
mov
inc
js
inc
push
cwtl
movsb
ret
subb
jns
xchg
insl
push
add
jl
push
cmpsl
stc
pop
or
les
push
inc
or
jecxz
push
mov
dec
jbe
aam
push
test
push
mov
inc
out
inc
sub
jp
xlat
add
call
or
cmc
outsl
test
and
ss
loope
test
in
jns
mov
push
xor
mov
or
pop
sbb
repz
sub
mov
mov
sti
pop
es
int3
xchg
push
scas
es
mov
push
sub
stc
pop
sbbl
mov
mov
fisubs
stos
and
out
mov
mov
cmpsl
push
inc
mov
insl
mov
jnp
loopne
aam
lret
shrb
pop
add
addl
std
ret
xchg
stos
orb
repnz
lea
mov
jbe
js
insb
dec
fsubrl
mov
push
scas
cwtl
sub
xor
leave
xor
jl
cwtl
pop
dec
mov
pusha
ljmp
fcoms
shrl
xchg
inc
pop
push
ret
cs
mov
inc
out
inc
pop
in
out
sbb
sahf
cmpsb
inc
arpl
sbb
pop
mov
in
jecxz
or
ficompl
imul
cltd
cld
popa
cmpsb
mov
rol
loope
pop
or
int3
repz
and
xchg
push
or
push
insl
cltd
sahf
popf
sub
lock
cmp
sbb
lock
fucomp
xchg
adcb
sahf
push
xchg
pop
addb
push
sub
nop
adc
sub
rcll
icebp
stc
sbb
mov
movsl
mov
into
xor
dec
cltd
lods
fldenv
scas
pop
mov
cmc
xor
dec
cmpsl
xchg
stos
shlb
jne
sbbl
sbb
cltd
mov
in
jbe
cmp
or
or
popf
mov
insb
ss
das
cmpsl
xlat
in
loopne
andl
adc
movsb
sbb
dec
and
movsb
dec
iret
pop
lods
xlat
or
jp
enter
adc
jb
aaa
jge
push
mov
mov
int3
mov
cmc
inc
mov
add
mov
cld
in
mov
adc
dec
lock
pop
call
loopne
dec
in
push
and
repz
fdivr
xor
cltd
fnstsw
call
or
leave
outsb
leave
std
mov
adc
and
pop
stos
incl
loopne
dec
scas
sub
test
scas
jge
je
jae
out
or
popf
imul
mov
jae
push
xchg
arpl
shlb
push
in
mov
and
jne
inc
add
add
sbb
nop
push
add
scas
pushf
shll
push
xchg
sbb
inc
andl
or
push
sbb
test
xchg
sub
fucomp
push
mov
add
sbb
push
lea
fdivrl
mov
sbb
enter
hlt
sub
or
push
xor
dec
mov
sub
pop
jb
js
mov
mov
pop
mov
in
mov
sti
daa
jne,pt
sub
lock
jb
pop
and
cwtl
push
adc
jecxz
mov
cmpsl
scas
jl
push
sbb
arpl
add
fwait
mov
int3
jns
test
and
jp
in
lock
fmul
add
mov
jl
daa
arpl
sbb
or
stos
vmaxss
mov
mov
movsl
push
sub
and
pop
push
mov
push
or
sub
inc
add
inc
jg
jp
bound
cli
clc
or
add
or
add
sti
adc
and
and
out
movsb
rolb
jecxz
lds
insl
test
mov
jle
fwait
ljmp
sarl
movsb
jno
je
inc
xchg
mov
out
cmpl
aam
stc
pop
ja
aam
hlt
out
pusha
mov
aad
pop
sub
leave
push
dec
or
push
or
into
movsl
sbbb
or
fidivrs
leave
leave
mov
aas
stos
push
faddl
xor
dec
iret
scas
mov
sti
cli
js
loope
push
mov
insb
or
sbb
cmpb
push
jle
xchg
stos
jge
stc
ljmp
lret
mov
fcompl
sub
lcall
fxam
jle
mov
jle
push
jo
add
jle
movsb
js
scas
or
je
add
lret
xchg
je
shl
fsubs
stc
std
pop
movsl
ret
dec
adc
scas
mov
mov
movl
int
add
adc
inc
xor
in
sbb
dec
jl
mov
ror
cmpb
dec
mov
dec
mov
mov
cmpsl
fwait
stos
sarb
arpl
lock
out
mov
xor
cld
pop
rorl
cmp
lret
enter
pop
iret
cmpsl
sbb
fwait
lret
movsl
cltd
jne
mov
xchg
popf
jne
mov
or
push
scas
mov
and
jae
scas
loop
mov
scas
shll
repz
les
xchg
add
sti
or
inc
outsl
mov
adc
test
mov
jmp
test
es
mov
jmp
xchg
call
sbb
or
adc
in
enter
mov
mov
push
mov
push
jg
mov
xchg
fisttps
and
lods
cmp
mov
mov
pop
out
mov
mov
icebp
mov
aas
gs
xchg
jns
xor
sub
add
jge
xchg
jp
or
jmp
lahf
lods
dec
add
cs
push
cmc
cwtl
in
fists
ret
sti
jno
pop
pop
enter
fdivrs
stos
pop
inc
or
jg
xor
test
sbb
fldt
stos
mov
adc
cmpsl
inc
add
rcr
lret
xchg
fisubrs
jle
xchg
sbb
fsubrl
pop
add
inc
mov
xor
mov
xor
add
add
leave
cmp
enter
sbb
push
pop
and
mov
and
adc
gs
push
dec
xchg
adc
imul
rol
sbb
sahf
rcrb
pop
movsl
dec
test
mov
xchg
pop
jecxz
pop
push
sahf
sbbb
fwait
in
mov
fcom
lea
xchg
inc
dec
pop
dec
inc
fnstenv
or
lock
and
dec
mov
js
sbb
aad
imul
xchg
dec
dec
mov
loopne
scas
mov
pop
aas
in
and
dec
jecxz
les
in
pusha
test
dec
mov
mov
lds
dec
test
dec
fs
and
jnp
les
clc
sub
or
fdivrl
mov
adc
mov
insb
push
jl
mov
mov
xchg
xchg
ret
cmpsl
stos
xchg
stos
lret
pushf
xor
adc
int3
push
loopne
sub
sbb
repnz
or
inc
out
inc
sub
jecxz
or
jno
inc
sbb
gs
xchg
jge
sbb
out
pop
fucomi
push
test
sub
cmp
lcall
dec
fisttps
sti
cli
pop
jb
sbb
xchg
enter
add
jnp
pop
ja
mov
jmp
add
enter
das
sbb
std
call
pop
mov
addr16
inc
pop
adc
mov
dec
mov
xor
test
imul
add
xorl
inc
inc
xchg
int3
addr16
adc
push
and
in
addr16
mov
and
sub
subl
xchg
sbb
mov
nop
inc
xorl
inc
mov
outsb
push
sbb
insb
push
cmp
mov
mov
push
sbb
repz
xor
bnd
push
mov
test
sbb
cmp
rcrb
sub
andl
xor
ljmp
push
and
sbb
imul
pop
icebp
xor
mov
call
lahf
add
lea
into
sbb
push
sub
dec
mov
jl
jmp
cli
imul
mov
jmp
xchg
jno
loop
das
insl
mov
or
stc
cmp
mov
or
sub
sbb
mov
aas
xchg
ret
mov
fwait
movsb
int
mov
lcall
leave
pushf
insb
mov
mov
mov
add
sbb
sub
dec
fisttps
repz
daa
sbb
xor
sbb
jae
xor
push
mov
mov
ret
xchg
stos
pop
cmpsl
pop
fs
fcmovnu
and
mov
xor
pushf
scas
jg
jmp
mov
idivl
cmpb
outsb
mov
xlat
stos
mov
fwait
outsl
mov
cmp
orl
pop
push
test
into
cli
cltd
lea
out
ja
pop
sub
or
push
xchg
dec
hlt
jl
xchg
cmpsb
aas
dec
mov
mov
push
fmuls
cmp
mov
mov
ret
or
jl
iret
and
fucomi
fnstsw
stos
call
pop
add
mov
negl
or
dec
jnp
pop
in
or
xor
adc
test
jb
inc
mov
dec
pop
mov
cmpsl
jae
jae
out
cmpl
sub
aas
adc
bswap
dec
pushf
sub
xchg
stc
lcall
dec
adc
lea
jns
call
sbb
ret
mov
es
and
mov
inc
fwait
out
in
repz
adc
or
imul
inc
popf
orb
movsb
ror
aam
adc
adc
cmpl
jmp
mov
mov
les
and
sti
enter
mov
sub
jp
jae
dec
cmp
push
gs
fcomps
inc
imul
inc
cs
or
lea
cmp
xor
pop
push
add
mov
lock
push
lods
sar
aad
dec
cmp
xor
pop
in
jg
pop
test
fidivl
sbb
sti
inc
cli
mov
cli
mov
out
inc
icebp
mov
inc
movb
sbb
ffreep
mov
xor
mov
mov
push
jnp
adc
xor
push
sub
lds
cmp
int3
fistl
rol
negl
jo
andl
mov
dec
xor
xchg
sbb
sub
outsl
xor
jne
jle
pop
dec
inc
stos
je
push
mov
sub
lcall
or
test
ficoms
lds
fsubr
rcll
add
adcl
fsubp
inc
loopne
daa
push
jge
lods
cmc
push
adc
movsb
xor
pop
addl
inc
cmp
add
dec
cmp
jae
orb
cmp
in
iret
imul
dec
push
scas
lock
in
or
mov
lods
mov
sbb
mov
mov
push
fisubl
and
lds
pop
popf
rol
dec
inc
jae
scas
xor
ljmp
fiaddl
push
sbb
inc
scas
lods
xor
and
or
sarl
pop
pop
sub
or
cmp
int3
lods
fistl
scas
inc
fwait
leave
jg,pn
add
and
xor
pop
push
sub
pop
xchg
push
inc
ss
sub
sub
outsb
mov
adc
dec
shrl
dec
mov
inc
mov
leave
mov
sub
stos
movsl
mov
dec
dec
xor
push
cmpsl
jne
movsl
notb
outsb
push
dec
jb
add
mov
fisubrl
fmuls
into
cmc
xor
pop
add
inc
inc
add
cmpb
hlt
pop
rclb
sbbl
ret
ret
fdivp
ret
mov
push
jne
push
adc
stos
mov
dec
cmp
bound
rcl
xor
arpl
push
push
inc
in
mov
test
mov
mov
mov
in
pop
gs
mov
pop
mov
or
xchg
adc
adc
or
jno
mov
ret
cmp
mov
adc
mov
push
mov
lahf
fists
and
mov
clc
xor
inc
std
xchg
jmp
out
cmp
lcall
mov
pop
das
inc
rorl
sti
in
pushf
pop
fsubl
inc
fwait
push
push
addl
sub
dec
push
and
shr
mov
test
aad
or
dec
rcrb
adc
push
mov
inc
call
inc
mov
fstp
add
iret
in
addb
cmp
bound
out
ret
cmp
sbb
loope
cmp
pop
int
inc
xor
out
xor
pop
push
mov
jle
test
test
mov
sbb
mov
jg
fdivr
mov
mov
lcall
insb
push
mov
mov
push
mov
adc
adcl
xlat
push
add
lods
pop
sbb
push
pusha
jnp
mov
and
mov
xchg
fbstp
jl
push
roll
leave
inc
dec
or
add
xchg
or
fistpl
pop
mov
test
or
mov
int
call
es
lahf
aaa
dec
cmp
mov
mov
ja
test
out
stos
push
cltd
jnp
iret
sub
dec
shrl
lds
mov
decb
pop
mov
mov
sar
sti
mov
dec
dec
inc
jecxz
enter
mov
cmpsb
inc
rorb
pop
dec
push
das
jp
out
jge
add
inc
shlb
mov
mov
lods
rorl
pushf
xor
popf
xor
cmpsl
xchg
clc
test
mov
test
push
mov
jl
addl
dec
cmpsl
imul
mov
dec
lods
cmc
jne
f2xm1
mov
lods
jae
mov
popa
xchg
push
dec
leavew
loopne
xchg
ds
sub
cmp
mov
add
scas
dec
pop
out
inc
mov
sbb
adc
xchg
dec
jb
shrb
mov
push
in
xorl
inc
bound
inc
mov
push
rclb
cmp
jmp
sub
fimuls
add
rol
xchg
std
fmull
inc
iret
jmp
scas
shrl
pop
pop
jecxz
out
jbe
scas
cmp
ret
mov
movsl
jg
cmpsb
add
pusha
mov
xchg
mov
and
lret
push
push
call
xchg
inc
mov
fcmovnbe
sbb
jns
push
xor
sbb
cli
xchg
rolb
inc
xchg
sarb
shr
aam
push
lcall
pop
push
ret
sbb
push
sbb
loope
test
jmp
inc
movsl
fsub
out
js
pop
repz
mov
cwtl
cmp
cmp
popl
jb
jbe
dec
sbbl
test
push
aaa
xchg
adc
xor
cltd
enter
das
add
fwait
enter
nop
les
mov
cmovne
add
idivb
cmp
pop
cmp
jnp
cmpsb
mov
cwtl
add
stos
ret
pop
dec
fldl
rorb
pop
loop
inc
movsl
mov
sbb
nop
adc
push
idivb
and
dec
mov
sub
jne
xchg
repz
scas
sbb
int3
sahf
push
bound
jp
outsb
push
rcll
or
scas
cmc
inc
inc
xchg
fwait
adc
mov
xchg
dec
push
enter
pusha
dec
cmp
nop
cld
inc
call
inc
push
dec
sti
icebp
arpl
ret
pop
inc
sarb
decl
jl
xor
popa
cmp
xchg
lret
movsl
ret
js
stos
pop
movsb
shl
stos
gs
fdivrl
roll
sub
enter
pop
inc
or
or
dec
inc
cmp
movsl
cmp
mov
pop
fwait
idiv
mov
rcrb
xor
inc
sahf
xor
mov
pusha
cmp
and
dec
mov
sti
jb
cltd
je
inc
sbb
fs
mov
pusha
push
sbb
cmpsb
sarb
int
ret
pop
lods
push
dec
cltd
mov
mov
gs
rol
adc
arpl
jle
push
add
lret
pop
ret
pop
jmp
test
and
xchg
stos
xor
stos
cmc
push
mov
pop
xchg
mov
push
mov
inc
shr
repnz
sbb
add
and
inc
or
or
lea
subb
jo
out
dec
clc
test
sub
mov
sbb
inc
mov
rcrb
jmp
add
mov
outsb
rclb
add
lods
fstp
imul
arpl
das
xor
and
jns
add
inc
jae
repz
pop
mov
cmpsl
jb
std
cs
cmp
std
inc
fsubs
les
bound
out
daa
add
imul
out
mov
jb
imul
inc
frstor
xchg
push
and
aaa
push
jbe
xchg
push
push
pop
xchg
mov
xchg
test
mov
or
add
cltd
add
inc
mov
cwtl
ja
push
test
mov
xchg
les
push
mov
inc
mov
jb
pop
add
test
inc
adc
and
xchg
scas
sbb
add
jae
and
addr16
push
xchg
jmp
inc
pop
xchg
inc
mov
mov
icebp
push
jo
mov
dec
push
outsb
aaa
popf
mov
dec
enter
das
sti
add
hlt
jl
push
sub
and
dec
sahf
inc
cmp
or
les
aaa
out
rorb
pop
cmp
ja
lret
and
inc
inc
xlat
mov
xchg
mov
pusha
and
shll
mov
pop
fisttpll
iret
icebp
ret
add
mov
push
push
pop
dec
add
or
loop
push
dec
mov
pusha
std
stos
int3
scas
mov
cmpsl
jno
or
scas
xchg
sbb
add
xor
inc
adc
cmp
dec
int
and
in
push
leave
kxnorb
das
xchg
dec
lahf
mov
bnd
fdivl
mov
inc
hlt
mov
loopne
ret
rolb
enter
lret
add
addr16
or
pop
xchg
imul
arpl
sbb
sbb
fxtract
sub
cmp
xor
dec
movsb
lcall
sbb
cltd
dec
leave
mov
inc
lcall
roll
dec
mov
test
mov
clc
mov
mov
push
fucomip
and
add
mov
in
fmul
jo
stc
fwait
adc
mov
push
cmp
imul
shll
fcmovnbe
jg
mov
mov
dec
les
mov
imul
les
jnp
int3
add
cltd
push
ret
jge
add
cmp
inc
lds
xor
pop
or
jle
stc
call
out
push
and
les
shlb
addl
bound
and
dec
es
fsubrs
cmc
push
hlt
dec
push
jecxz
fistl
mov
sub
icebp
xor
and
call
sub
push
push
dec
jecxz
aam
jle
mov
dec
pop
out
shr
nop
jne
mov
add
es
rep
jle
mov
pop
test
mov
movsb
mov
xchg
clc
sti
mov
sbb
pushf
mov
jp
pop
fldl
addb
jnp
mov
mov
and
adc
lret
cmp
push
dec
repnz
cmpsl
lret
fucomp
and
bound
test
mov
in
add
xchg
mov
dec
xchg
dec
fcmovne
xchg
sbb
jb
or
test
sbb
xlat
mov
adc
leave
jmp
push
pop
fs
sub
inc
adc
orl
or
sbb
or
fisttpll
push
cmp
push
clc
sub
shrb
test
mov
pop
fsubl
pop
sarb
xchg
mov
pop
dec
inc
pop
movsb
push
sub
inc
fcmove
rolb
adcb
mov
lret
and
xor
push
jl
mov
mov
xchg
jle
inc
mov
icebp
lcall
movl
pop
sub
or
jecxz
xlat
xchg
xor
cwtl
je
mov
aam
and
iret
mov
test
dec
and
and
sbb
rcl
mov
xchg
or
pop
fs
mov
push
das
inc
divb
inc
std
jae
inc
sbb
mov
push
mov
jge
dec
fucomi
repnz
fildl
cmc
neg
andl
stos
jle
clc
sub
add
out
xchg
sub
iret
mov
cmp
dec
jbe
jns
mov
add
mov
ret
jp
gs
in
mov
out
inc
mov
dec
mov
add
mov
add
adc
xchg
cmpsb
fldt
leave
mov
fisubrs
insb
push
add
mov
pusha
lds
shrb
mov
clc
jg
icebp
ret
gs
pop
sub
xor
pop
lds
lret
fwait
stos
shrl
mov
int3
jle
je
in
lods
cmp
cmpsl
jno
add
js
xchg
cltd
mov
sub
es
mov
mov
sahf
xchg
mov
rorb
or
xor
aaa
mov
jecxz
mov
adc
cld
idivb
les
mov
xchg
data16
mov
mov
test
mov
push
out
dec
aam
and
sub
or
xchg
pushf
lock
popf
insl
jg
lret
mov
adc
orb
jne
lods
xor
mov
lods
sub
imul
mov
adc
lock
stos
outsl
cmpsb
aam
out
cmpsl
imul
cmpl
sub
or
mov
adc
inc
mov
jne
icebp
sbb
adc
addr16
push
scas
xchg
pop
jnp
and
and
fmulp
and
movl
push
cmp
mov
fadds
cs
fidivrl
sub
push
pop
fidivl
lods
jle
cmp
ss
add
adc
cmp
or
mov
in
in
loop
xchg
repz
adc
push
jo
cmp
into
je
adc
push
movsl
ret
addb
mov
fwait
outsb
cmp
jb
pop
mov
rcll
fstp
lods
rorl
imul
stos
aas
dec
and
mov
or
scas
flds
sub
sbb
add
sub
test
in
cmp
adc
pusha
pop
bound
mov
in
roll
popf
jp
mov
std
lret
iret
pop
adc
test
lret
mov
nop
push
xchg
dec
in
jmp
popf
mov
fisttpll
mov
mov
xchg
jle
dec
push
cmp
cmc
mov
lods
push
subl
insl
pop
jmp
roll
aas
or
mov
sahf
xchg
cmpsl
int3
test
or
lods
sbb
leave
and
movsb
ret
cmpsb
ficoms
jge
inc
add
insb
stc
mov
xchg
ret
or
jle
sbb
leave
cmc
lret
mov
lods
cmc
cwtl
mov
cltd
aam
test
pop
or
mov
ja,pt
test
fxch
mov
sub
inc
cltd
enter
popa
cltd
int3
pop
es
pop
arpl
aas
mov
xor
je
dec
push
inc
imul
mov
insl
xchg
in
push
sbb
loopne
xor
insb
pop
and
push
inc
inc
fisubl
pop
dec
inc
insb
sub
mov
add
jae
fmull
mov
pusha
pop
adc
pop
and
xchg
pop
jle
test
mov
leave
push
push
sbb
mov
xchg
lds
scas
sbb
mov
dec
loope
cmpb
lret
push
push
mov
mov
push
das
xchg
dec
iret
xchg
mov
iret
xchg
aas
or
sub
ds
aas
lock
inc
adcl
ljmp
test
out
inc
fbstp
out
push
cmpsl
xchg
cmpsl
cmpsl
fdiv
sbb
adc
lahf
xchg
cltd
lahf
aaa
fnstenv
cmpsb
inc
cltd
out
adc
xorl
fmull
xchg
hlt
sub
mov
aad
mov
repz
push
jb
mov
dec
xlat
filds
popa
arpl
mov
inc
mov
test
adc
lea
aas
sbb
pop
lcall
pusha
mov
jg
inc
jnp
xor
mov
cli
outsl
sub
clc
sbb
ss
test
inc
sbb
mov
into
dec
mov
icebp
fisttps
leave
mov
add
jp
or
xor
and
xchg
stos
jecxz
ljmp
jno
shrb
cltd
frstor
cs
mov
or
or
mov
leave
or
mov
add
dec
mov
div
js
push
out
lret
out
jp
iret
push
mov
jl
push
loopne
test
cwtl
inc
stos
and
push
jp
fcmovnu
sti
xor
mov
xchg
pop
cmp
pop
dec
adc
xlat
mov
test
jne
jge
lods
outsl
sbb
adc
ja
idivb
mov
inc
mov
xchg
movsl
cmpsl
push
test
pop
pop
movsl
adc
pusha
nop
xor
mov
inc
sub
ret
ret
pop
push
jns
xchg
andb
xchg
dec
or
and
sbb
fwait
jle
and
push
jbe
cmp
add
pop
jp
mov
mov
or
mov
fisubrl
sbb
add
jmp
scas
roll
or
inc
mov
jge
stos
fnsave
pop
pop
sbb
test
lds
push
ret
lds
mov
popf
push
adc
cmp
jl
cwtl
pop
adc
mov
andl
push
subb
jbe
pop
mov
xchg
arpl
or
outsb
jbe
mov
lahf
addr16
js
jb
mov
out
and
add
inc
clc
push
dec
inc
je
dec
les
xchg
gs
fsubrs
test
fst
cld
cltd
testl
mov
inc
mov
je
arpl
repz
cmpsl
cmp
lahf
lret
aaa
icebp
mov
xor
pop
add
or
mov
js
leave
and
scas
jl
mov
leave
sub
xchg
loop
icebp
stc
and
mov
neg
push
xchg
add
jecxz
and
adc
hlt
mov
test
pop
sub
sbb
dec
lea
or
adc
test
lahf
scas
aaa
data16
inc
xchg
add
add
js
sarb
jl
mov
sbb
adc
mov
call
jae
push
jno
or
ficomps
mov
cmp
std
mov
add
push
inc
mov
cwtl
and
dec
push
test
clc
jmp
sbb
mov
pop
push
xchg
enter
sub
mov
test
fistpll
std
jae
or
cmp
neg
jo
mov
outsb
jnp
out
jge
js
leave
jg
mov
push
xorb
lret
xchg
sbb
insb
daa
fcom
ljmp
popf
lret
or
or
mov
pusha
add
or
xor
fisubrl
fdivl
cmp
negb
je
pushf
jp
lahf
fisttps
cmp
nop
xor
andl
add
xchg
add
leave
push
mov
mov
push
mov
int
xchg
xchg
mov
enter
ret
mov
lahf
mov
pusha
iret
cmpsl
movsb
orb
dec
xorl
push
adc
ret
mov
inc
jle
jbe
lock
xchg
cmp
repz
xchg
sub
mov
jnp
mov
test
in
ss
out
mov
mov
mov
pop
mov
mov
xchg
int
mov
dec
pushf
inc
stos
pushf
adc
repz
clc
xchg
pop
push
mov
push
xor
pop
in
jb
stos
and
xor
nop
sbb
stc
sbb
lret
addb
sub
jmp
push
icebp
lcall
jge
add
pop
pop
dec
push
pusha
jp
enter
cmc
test
loope
ljmp
lea
in
inc
cmpl
in
std
jmp
xchg
pop
mov
xor
xchg
bound
xchg
dec
jbe
lds
push
sub
test
mov
push
ret
fsin
repz
and
nop
cmp
hlt
xor
jnp
mov
mov
jl
out
mov
outsl
sub
cmp
nop
fdivrl
or
idivb
mov
lret
adc
xchg
or
pop
jl
mov
call
pop
cmp
shrl
xor
icebp
dec
cld
cmpsb
imul
movsb
inc
dec
and
add
pop
fnstenv
jle
cwtl
mov
mov
and
push
cmp
lods
xchg
or
xchg
pushf
arpl
dec
mov
mov
movq
cmp
rcr
push
xchg
inc
std
stos
pop
and
jnp
xchg
aam
dec
insl
fsubrl
pop
aas
mov
dec
scas
add
nop
inc
mov
mov
sbb
je
xlat
cmp
push
mov
lret
popa
cmp
mov
xor
jp
push
addl
fisubrl
jmp
sbb
dec
lea
fwait
lea
imul
js
mov
fimull
imul
jmp
jmp
xchg
cmc
pop
cmpsl
push
movsl
jo
mov
call
xchg
mov
mov
outsl
push
mov
enter
add
fsave
or
xchg
fs
pop
cmpsl
and
mov
mov
stos
test
jp
inc
and
push
push
aas
pop
mov
dec
lahf
cmp
mov
xchg
xchg
dec
popf
lret
aad
repnz
pop
sub
mov
add
dec
push
aad
in
dec
rorb
mov
iret
ret
sbb
sub
shll
jno
cmp
or
push
ror
sub
js
bound
movsl
sbb
pop
jno
pop
fnstcw
in
mov
aad
ljmp
push
stos
movsb
inc
sbb
cmpsl
pop
jne
jb
fwait
out
or
mov
repnz
sub
xchg
adc
in
pop
cmp
jns
mov
pop
or
arpl
xchg
cld
dec
pop
mov
mov
clc
sti
dec
push
ret
loope
add
mov
enter
shlb
cmp
or
sbb
or
and
jne
add
fwait
movsb
fisubl
mov
sub
xchg
arpl
in
popf
in
dec
sub
pop
sbb
xchg
and
sub
stos
scas
lea
xor
ret
cltd
cmpsb
mov
mov
jmp
mov
ss
test
xchg
pop
inc
mov
lcall
jle
inc
mov
or
outsb
add
enter
cli
cmp
dec
adc
daa
pop
pop
out
in
mov
jl
shll
add
xchg
outsl
jge
repnz
inc
sbb
adc
gs
daa
adc
jnp
inc
push
int
pop
movsb
add
or
push
sbb
pop
jecxz
iret
shl
lock
call
or
adc
xchg
xor
int3
jg
pop
ret
dec
xchg
adc
lahf
add
scas
xchg
lods
xor
cld
pop
jle
fmuls
jmp
inc
mov
jg
xchg
fdivrs
popf
adc
inc
xor
mov
push
cs
repz
ret
mov
mov
sbb
mov
movsb
inc
and
nop
outsl
gs
push
jmp
inc
adc
or
jl
clc
data16
and
mov
or
in
mov
jnp
fwait
mov
and
jb
dec
ret
cmpsb
rcrb
xchg
inc
pop
std
jb
and
xchg
sub
pop
test
adc
test
sbb
mov
mov
insb
pop
xchg
or
adc
jecxz
jo
sarl
cmp
cmc
pop
mov
push
or
icebp
ds
mov
add
jmp
mov
cmp
mov
add
lods
xchg
sub
adc
lcall
mov
lret
pop
in
mov
cmp
sub
mov
ret
je
mov
sbb
or
lods
push
xchg
cmp
dec
jae
dec
fs
jge
fldcw
pop
cmp
movsl
inc
fucomi
jb
iret
or
fs
imul
das
jae
sub
testl
sub
xchg
and
xchg
cwtl
dec
and
cmp
add
fdivrs
cli
pop
cmpsb
inc
adc
rolb
fldpi
insb
lods
cli
outsl
jg
pop
mov
inc
mov
mov
loop
or
add
mov
cmp
movsb
cmp
sbb
xor
lds
pop
stos
shll
mov
jl
jecxz
leave
mov
jge
cmpsb
pop
scas
sub
imul
mov
std
mov
pop
cli
jle
pop
dec
push
testb
dec
pushf
dec
and
clc
stos
mov
sahf
push
test
test
cmc
sub
lret
test
xor
pop
cmp
mov
jnp
push
mov
xor
mov
pop
scas
dec
fs
lcall
mov
sbb
or
sbbl
mov
ljmp
dec
xor
sbb
lods
mov
mov
and
sbb
iret
push
nop
jns
mov
add
inc
fsubp
scas
inc
repz
cmp
adc
pop
mov
rolb
and
or
xorl
inc
add
adc
jne
aad
pop
dec
mov
aad
mov
mov
rol
loope
pop
mov
sbb
das
and
jmp
jae
movsl
fwait
pop
in
cld
add
mov
jno
bound
ret
sbb
add
dec
lahf
ret
jge
inc
dec
jl
ja
icebp
adc
stos
cmp
xor
inc
std
dec
cmp
pop
mov
dec
fmulp
sbbl
loopne
cmp
ljmp
jns
sbb
xchg
ds
lret
call
xchg
xlat
mov
xlat
mov
mov
shll
ffreep
mov
mov
xchg
jo
fiadds
or
add
out
fiaddl
sbb
jbe
adc
test
xchg
mov
mov
call
inc
mov
fwait
lea
mov
in
sub
popf
dec
shll
xchg
test
and
inc
bound
andb
cmc
push
mov
cmp
stos
mov
loopne
lods
lahf
or
in
mov
clc
lds
in
in
mov
jns
sbb
js
lcall
dec
vsqrtpd
cmp
fdivl
push
push
outsb
ljmp
mov
dec
sbb
and
mov
sub
push
mull
into
mov
lock
xorb
xor
shl
lea
test
mov
jmp
std
add
push
sbb
push
fsts
xchg
addl
sbb
mov
scas
ds
xchg
and
stc
test
xchg
fwait
jbe
mov
rclb
xchg
adc
pop
mov
fwait
inc
mov
pusha
xchg
add
xor
sbb
push
cmp
int
xor
pushf
imul
rolb
cmp
push
lcall
and
mov
pop
add
push
inc
push
pop
bound
fwait
xchg
cmp
adc
mov
xlat
cmpl
mov
sbb
lods
push
ja
push
push
xlat
mov
jb
cmpsb
stos
movsl
push
push
aaa
pushf
add
sub
cmpsl
dec
fs
mov
mov
inc
add
addb
stos
xchg
stos
inc
test
push
stos
cmp
movb
adc
push
cltd
int3
ljmp
push
or
mov
xor
push
xchg
in
testl
std
pushl
add
fsubrs
jecxz
fadds
and
test
cmp
xchg
and
mov
push
fwait
adc
aaa
jge
mov
sbb
test
dec
xchg
test
test
inc
rclb
jecxz
cmp
arpl
mov
je
pop
loopne
pop
aaa
jmp
stc
fnstsw
jmp
cmc
jecxz
enter
lods
rcrl
xchg
daa
add
fadd
sbb
sti
pushf
fisttpl
mov
dec
push
mov
lods
popf
loope
cmp
pop
and
mov
xor
sub
test
dec
pop
stc
sbb
inc
lret
jge
outsb
cmpsb
sub
xor
mov
cmp
pop
inc
lahf
xchg
movb
push
repnz
cmp
movl
in
loop
repz
jl
cmpsl
dec
push
insb
add
std
jne
js
inc
daa
xor
pop
sti
jg
stc
mov
xor
xchg
mov
mov
jg
xchg
sahf
out
mov
adc
mov
sbb
test
lods
xchg
mov
sbb
lock
adc
ret
cltd
jbe
daa
adc
adc
stc
push
cvtdq2ps
ja
push
shr
aaa
call
xchg
bound
pop
inc
test
or
sbb
in
shrl
mov
mov
rclb
pop
dec
mov
loop
cwtl
lret
pop
into
jl
and
mov
cmpsl
xchg
enter
movsb
fildll
lods
int3
pushl
jne
js
or
addr16
sub
lock
push
xor
test
fcoms
jnp
ret
cmp
les
pusha
jge
test
movsl
popf
scas
shrb
ret
dec
xor
or
lock
in
jns
or
dec
fstp
ljmp
xchg
cmp
ficoms
xchg
mov
push
jns
enter
xlat
dec
fmul
xor
mov
clc
cmp
int
mov
xor
push
add
lret
cmpb
cld
dec
je
stos
xchg
sub
in
jecxz
ds
mov
jbe
cltd
mov
test
sbb
or
arpl
insl
dec
cmp
cmp
mov
pop
sbb
cwtl
lret
inc
sub
imul
hlt
pop
movsb
leave
test
push
mov
fstl
push
mov
int
stc
mov
leave
cld
xchg
sub
leave
test
out
shll
sbb
fisttpll
jl
popa
mov
push
es
jge
jns
push
mov
js
pop
clc
test
fisubs
inc
jecxz
mov
add
and
cltd
push
cmp
sbb
cmp
nop
jae
ljmp
pop
dec
int
cmp
mov
sbb
inc
hlt
lahf
cmpl
inc
scas
mov
adc
mov
arpl
sbb
stc
jmp
mov
cmp
call
inc
mov
jmp
jge
cmp
fdiv
mov
mov
dec
sbb
push
adc
sbb
sbb
test
pop
hlt
sub
mov
push
aad
xchg
mov
and
adc
test
pushf
dec
mov
arpl
mov
sarb
outsb
cmpsb
sub
xor
mov
sub
jbe
test
shrb
enter
mov
scas
fldt
scas
jg
ss
add
jl
int
xor
andl
rcr
push
pushl
push
lcall
mov
push
xor
sub
mov
and
js
ret
lods
iret
inc
cs
sub
rclb
xor
mov
cmp
loope
scas
and
mov
mov
mov
cltd
cltd
aam
mov
xor
cmp
repz
mov
fwait
cmpsl
lods
shrl
ss
inc
cmp
add
scas
mov
addr16
imul
adc
test
fwait
cli
dec
cmp
push
jge
fstpt
pushf
sti
lret
sti
push
cmp
bound
xchg
ret
lods
xchg
aam
dec
lock
dec
scas
fisubrs
adc
xchg
jne
cs
lret
fldt
dec
xchg
inc
cwtl
mov
cld
jmp
js
dec
inc
fwait
ss
cmc
xor
testl
adc
in
lea
lahf
les
cmp
dec
pop
jns
stos
out
sub
adc
mov
xor
mov
iret
sub
shlb
pop
add
in
fstl
aad
ret
lcall
into
pop
movsl
dec
add
ret
popf
ds
mov
sbb
loop
mul
sti
loopne
xchg
pop
push
addb
lea
sub
or
xor
testb
fs
cmpsl
mov
imulb
pop
into
gs
pop
xor
cli
lods
push
and
test
and
repnz
xor
repnz
cmp
xor
xchg
sahf
dec
mov
scas
leave
inc
scas
xchg
ficoml
sub
repz
mov
mov
shr
into
lret
and
pop
bound
adc
mov
repz
push
shrb
mov
addb
adc
out
dec
fsubrs
xor
dec
shlb
adc
mov
sub
das
enter
div
cmp
cwtl
das
fistl
add
mov
jae
loopne
int3
pop
sub
into
or
lds
rclb
call
mov
lcall
or
leave
out
mov
or
sti
mov
or
mov
enter
aaa
iret
fs
test
cmpsl
xor
movsb
js
popf
lret
movsl
sbbl
jl
or
push
mov
dec
sbb
decb
jle
fs
mov
sbb
pop
xor
lock
adcl
or
jae
push
push
int3
mov
mov
dec
js
int
xor
shlb
mov
mov
popf
and
xchg
add
xchg
test
pop
or
mov
xor
add
jge
sbb
xlat
and
xchg
pop
sahf
call
inc
sbb
mov
mov
jo
fwait
jl
dec
test
icebp
stc
int3
pop
mov
lea
or
mov
das
dec
mov
popf
cmpl
or
movl
add
mov
jb
mov
je
hlt
mov
cmp
mov
inc
je
jne
push
negb
and
movsl
push
sbb
and
aad
pop
movsb
xor
mov
call
movsl
clc
mov
iret
in
pop
mov
xchg
fnstcw
xlat
xchg
test
sub
or
mov
stos
xchg
sbb
std
or
bound
popf
sbb
mov
fildll
repnz
push
shlb
inc
add
add
add
gs
addr16
ficompl
fisubrs
or
adc
movsb
fidivl
stos
xor
ficomps
idiv
test
lea
xor
rcll
pop
adc
enter
je
or
dec
mov
dec
sahf
inc
push
mov
pop
stos
int
leave
stc
mov
out
mov
in
lahf
jl
stos
mov
jae
lcall
lahf
pop
mov
iret
sbb
inc
fdivs
inc
iret
movsl
mov
aas
outsl
and
mov
add
dec
or
ljmp
jmp
mov
sub
mov
popf
shll
jo
pop
shll
xchg
inc
dec
mov
mov
push
stos
inc
xchg
push
lret
pop
test
pusha
push
push
mov
and
lahf
scas
jg
pop
jl
insb
scas
fld
int
jo
add
iret
and
aad
adc
mov
clc
dec
fidivrl
outsb
add
int3
push
mov
sub
xchg
inc
and
notb
int
out
mov
jno
stos
push
mov
sub
mov
dec
xchg
xchg
cs
mov
lahf
xchg
xlat
adc
or
lods
ds
mov
adc
popf
je
js
out
scas
cli
pop
adc
mov
or
sbb
imul
mov
int
dec
inc
sbb
add
ret
ja
sub
test
and
xlat
xchg
cmp
mov
lcall
aad
popa
push
and
jns
sbb
fdivs
movsl
dec
insl
cwtl
vmptrst
rorl
stos
aad
imul
or
mov
pop
test
rcll
and
std
adcl
and
bound
gs
fs
xor
loop
rcrb
popf
dec
inc
sbb
mov
iret
jbe
dec
pop
push
fwait
scas
addr16
push
int
scas
jae
xor
aas
addb
cmc
xchg
sub
pop
mov
mov
add
mov
sub
mov
push
sub
les
aam
or
xlat
pop
push
add
cmpsl
loopne
bnd
hlt
fsubrs
and
mov
fildl
adc
jae
mov
ret
mov
rolb
sbb
sbb
push
jne
xchg
lret
test
fmuls
pop
lds
out
std
stos
dec
dec
sti
sbbl
xchg
add
sub
mov
jo
mov
andb
outsb
les
pop
ret
add
pop
cmpsl
push
pop
jb
mov
icebp
jmp
cwtl
jp
pusha
test
push
rorl
xchg
std
dec
testl
sub
in
movsl
test
dec
fstpl
imul
add
rorb
es
cmp
popa
and
inc
jecxz
cmpsl
hlt
add
orb
pop
adc
mov
popf
faddl
adc
dec
xchg
mov
call
pop
mov
mov
mov
fcmove
or
movsb
repnz
add
inc
mov
arpl
pop
mov
faddl
pop
repnz
aad
test
lcall
and
xchg
repnz
xchg
mov
js
ret
test
jg
xlat
xchg
addl
rorb
test
lret
inc
rcl
or
pop
rcl
cwtl
fstl
mov
test
jmp
test
xchg
pop
aad
jle
into
mov
cmc
icebp
ret
mov
cwtl
mov
rolb
add
mov
and
mov
add
lods
push
sub
mov
mov
lahf
filds
jb
xchg
vpand
loop
inc
adc
insb
aaa
dec
push
pop
sbbb
test
mov
adc
or
push
inc
pop
mov
leave
cli
inc
sbb
aam
add
cltd
mov
xchg
out
jg
enter
mov
add
test
jmp
push
and
mov
movsl
mov
lcall
mov
push
lods
sub
mov
and
mov
adc
ljmp
mov
addl
push
aas
insl
leave
inc
scas
mov
add
xchg
int3
dec
mov
lret
mov
leave
lods
rolb
lret
lods
inc
cmp
dec
fiadds
test
test
mov
add
inc
sbb
add
inc
jnp
pop
cltd
xchg
fnstenv
imul
addb
js
jp
gs
mov
push
sahf
jl,pn
push
mov
sub
lcall
lret
jns
call
mov
pop
stos
shll
mov
ret
or
jmp
clc
cmp
jnp
stos
xor
ret
mov
add
push
inc
cmp
push
xchg
scas
adc
mov
lds
mov
xor
fistl
or
mov
or
sti
pushf
fisttps
or
xchg
test
add
xchg
in
mov
rcrb
push
or
cmp
push
mov
addr16
xchg
pop
rcll
jne
inc
das
push
inc
pusha
xchg
jb
nop
dec
mov
into
ss
jle
rcrb
cmp
cltd
jae
std
cld
rcl
cmovb
pushf
jb
pop
mov
adc
mov
push
pop
test
jbe
pop
inc
cmp
sub
mov
pop
jnp
clc
fdiv
jecxz
and
cmp
or
cmp
xchg
les
push
inc
xor
ds
pushl
mov
test
shll
or
cmpsb
ja
jnp
jae
mov
idivl
xlat
lret
insl
mov
aaa
andl
std
scas
mov
lcall
jns
cmpl
std
mov
pop
xchg
icebp
mov
and
jle
stos
jae
mov
stc
cli
out
inc
iret
cmp
cmp
pop
mov
sub
mov
or
add
test
add
sbb
inc
jb
sub
add
es
push
jae
sarb
xchg
clc
mov
mov
or
nop
and
sbb
xor
adc
fiadds
roll
test
icebp
ret
jnp
sahf
in
xchg
jmp
sti
and
sub
iret
sub
int
in
icebp
mov
int3
lea
cmc
test
mov
adc
and
dec
or
or
push
clc
repz
mov
jae
ja
jnp
repz
loop
cmp
lcall
inc
dec
adc
loope
mov
mov
scas
mov
ficompl
xor
pop
xchg
xchg
adc
lret
shrl
int
cld
stos
adc
bsf
mov
and
jmp
or
cld
js
stos
lret
test
stos
mov
xchg
pop
int
adc
xor
adcl
loope
add
loopne
inc
fsubrs
test
and
xchg
xchg
add
cmp
popf
orl
mov
out
out
stc
inc
bound
sub
jns
xor
push
jnp
aaa
mov
mov
jl
test
in
mov
add
sar
les
enter
push
sub
xor
lods
jmp
add
cltd
std
ljmp
adc
fs
mov
adc
xchg
ljmp
xor
pop
sub
pop
sbb
cmp
daa
sub
jno
jl
shll
sbb
insb
jg
cmc
sub
les
cmpsl
testl
mov
in
lds
push
xor
sub
inc
in
lret
mov
test
ja
jge
jns
scas
or
mov
mov
and
mov
jmp
out
sbbl
rorl
push
repz
arpl
ljmp
xchg
sub
insb
cltd
cmpl
push
xchg
jge
adc
insb
dec
add
mov
sub
cmc
shlb
pushf
pop
and
enter
shl
jb
sub
or
pmaxub
mov
in
push
ds
rcl
push
lds
mov
movsb
fldl
inc
ficompl
fisubs
in
xlat
ret
jl
nop
cld
scas
jbe
push
out
add
cs
mov
inc
fsubrl
pop
xchg
pop
sbb
xchg
dec
mov
in
jbe
mov
fucomp
jae
jle
dec
mov
or
lret
xchg
lea
iret
in
jge
pop
cmc
stos
movsl
and
ret
ljmp
shl
scas
mov
lods
inc
sbb
call
mov
dec
test
and
jns
pop
aas
cmpsl
aad
pop
inc
sarb
or
lahf
imul
cmp
xor
ret
mov
mov
mov
xor
jne
fldcw
cmpb
jle
ss
inc
enter
mov
movsb
xchg
xchg
push
xchg
dec
jno
adc
add
shrl
and
pop
pop
mov
ds
pop
cmp
add
je
sub
mov
fdivl
inc
sub
fprem1
cld
jg
pop
rcrb
pop
fildl
loop
mov
sub
xor
testb
jb
mov
movb
scas
pop
lahf
sbb
jno
insb
dec
scas
jo
test
sbb
orb
adcl
lret
cmp
sbb
mov
push
add
sub
push
mov
scas
aaa
mov
cli
jnp
inc
nop
and
jmp
push
and
pop
jnp
xor
daa
sub
int
iret
sub
ja
pushf
jb
int
int3
int
pop
cli
cmp
dec
stos
lahf
out
mov
dec
mov
inc
sbbl
mov
sbb
outsl
imul
aas
sbb
push
mov
mov
pop
jb
add
pop
mov
cmpsb
ficompl
je
or
mov
scas
bound
pushf
jg
jnp
jge
lods
mov
mov
out
cmc
dec
or
xchg
sahf
aad
pop
leave
mov
push
cmp
dec
fildl
and
pop
dec
xor
push
sbb
test
pop
pop
hlt
pushf
push
out
cmp
fidivrs
int3
add
lock
push
rolb
and
adc
push
ret
sbb
and
lods
jne
gs
cmp
or
xchg
aam
cwtl
push
sub
aas
xchg
push
cli
push
add
pusha
jecxz
fst
push
push
dec
dec
lods
fwait
int
dec
mov
xor
cli
xchg
mov
int
mov
ret
adc
es
mov
cmp
dec
mov
or
mov
ret
xchg
mov
in
aam
or
push
add
test
sub
xchg
mov
sub
lock
xor
add
pusha
xor
in
jecxz
fmul
adc
lret
in
dec
adc
add
adc
dec
repnz
dec
push
mov
mov
mov
sbb
sub
cmpsl
adc
cs
je
sub
mov
sub
hlt
xchg
jl
fdivs
rclb
ljmp
roll
test
jbe
adc
and
sbb
das
pushf
ret
push
clc
or
lcall
je
and
nop
push
sub
push
fisubs
xor
mov
inc
mov
inc
fisttpl
int3
cwtl
cmpsl
pop
cmp
add
ljmp
mov
and
push
xchg
mov
jae
orl
into
pop
stos
aam
idivl
shll
mov
icebp
lret
push
insl
fcom
rol
mov
sub
xchg
sub
jns
outsb
push
adc
cmp
mov
negb
mov
lods
stc
orl
push
mov
sbb
cld
int3
fstps
mov
into
xchg
pop
lock
adc
cld
jnp
adc
inc
lret
inc
sbb
cmp
mov
clc
and
lods
push
sbb
push
ficoms
mov
frstor
mov
add
cmp
adc
add
or
shlb
ret
movsl
daa
je
pop
dec
shlb
and
push
mov
sub
xchg
push
insl
xchg
cmc
data16
pop
gs
in
mov
mov
mov
fcoml
and
inc
xchg
push
and
stc
popa
mov
or
xor
adc
jae
ja
mov
call
jle
pop
loopne
cli
cmpsl
fadds
scas
mov
sarb
mov
fs
popa
sahf
push
js
or
add
or
mov
outsl
adc
stos
bnd
sub
push
push
jge
movsb
fsts
dec
cld
iret
les
or
es
mov
insl
ret
fistpl
sarl
hlt
add
gs
jo
jle
scas
dec
jns
dec
inc
mov
xchg
repnz
scas
hlt
fldl
sti
fbld
mov
das
jmp
lock
mov
test
rcll
push
jno
scas
add
sbb
retw
sub
and
jno
push
fs
leave
movsb
inc
sbb
push
fists
out
inc
and
xlat
pop
test
fs
dec
sbb
fbld
or
and
add
jns
lcall
les
cmpsb
xchg
cmp
mov
out
arpl
adc
xchg
in
movnti
sbb
jecxz
outsb
ja
movsb
insl
loop
jmp
fidivrl
sbb
xor
inc
add
lahf
scas
arpl
cmp
sti
jp
mov
divb
dec
mov
jmp
xor
cmp
dec
pop
lds
adc
xchg
bound
scas
jne
jnp
test
sub
pop
rclb
sahf
mov
sub
dec
lods
jle
inc
xor
mov
mov
push
jb
mov
jo
lods
enter
mov
add
pop
js
std
adc
xchg
jns
out
shrb
fbstp
cmp
push
sub
cli
daa
cmc
jge
jmp
pop
popf
iret
jle
mov
mov
dec
sbb
dec
mov
xchg
loopnew
mov
push
das
or
xchg
jge
xchg
repnz
pop
loopne
repnz
mov
jl
dec
shrb
lds
xchg
mov
enter
subb
xchg
or
or
xlat
lret
lret
push
xchg
xor
fisubrs
ffree
stc
push
or
arpl
jp
lcall
sub
in
mov
scas
mov
jecxz
loopne
mov
xchg
int3
fldcw
mov
ljmp
jp
xor
xchg
pop
dec
fwait
aad
jo
or
js
adc
adc
ret
cmpsl
scas
sbb
mov
mov
and
inc
mov
out
pop
mov
sub
cmp
das
sub
push
pushf
cmpsl
add
inc
jle
add
test
out
inc
sub
mov
shl
fisubrl
inc
adc
xor
scas
int
add
jge
xchg
jp
mov
adc
nop
inc
sbb
arpl
test
cmp
fdivrl
mov
inc
mov
insb
add
inc
or
or
xor
int3
addr16
pop
mov
xlat
stos
dec
scas
sbb
dec
sbb
cmp
dec
shll
and
adc
sti
arpl
movsb
jae
cmp
add
push
stos
xchg
arpl
sub
je
lds
xchg
xchg
data16
pop
cmpsl
push
popf
fwait
pushw
into
nop
movsb
ret
jg
cmp
stc
xchg
push
mov
sub
add
push
jne
cmpsl
push
fcmovb
and
pushf
jno
sbb
sahf
fisubs
mov
sub
ja
jns
mov
add
dec
inc
clc
inc
les
mov
hlt
jmp
xor
push
xchg
jmp
mov
nop
push
pop
adc
mov
inc
jbe
je
int
inc
inc
repz
sub
js
push
mov
test
dec
adc
outsl
jmp
in
jns
outsb
leave
roll
pop
ret
jl
push
mov
mov
das
scas
shr
imulb
in
lods
sbb
sub
pop
jne
sbb
adc
inc
popa
in
fsubrs
add
xchg
shlb
sbb
add
mov
test
xchg
int3
sbbb
les
outsl
mov
and
or
dec
add
loop
xchg
cltd
mov
mov
push
insl
call
icebp
mov
fxch
inc
test
dec
adc
shrl
mov
xchg
into
ret
lds
cmp
cmp
xchg
sbb
jg
lds
pushf
xor
leave
adc
iret
sbbl
or
pop
or
out
into
add
fisttpl
inc
pop
mov
addl
sub
bound
jne
pop
lahf
add
std
pop
ljmp
mov
lahf
xchg
jbe
dec
inc
in
adc
imul
sbb
imul
and
xchg
hlt
jp
xlat
subl
cmpsl
xchg
in
movsl
std
cli
dec
test
adc
insl
cmpsl
fisttps
inc
pop
mov
sub
cmpl
cmpsl
cwtl
mov
push
sub
push
mov
mov
aam
mov
clc
loop
xchg
or
or
lcall
push
xchg
mov
js
ljmp
push
call
dec
inc
ret
jecxz
insl
cmp
mov
outsl
mov
out
cmp
push
data16
sbb
inc
xor
or
aaa
mov
pushf
imul
ficoms
test
adc
cld
dec
pop
fdivr
addr16
fstl
cmp
scas
test
adc
ret
sahf
or
cmpsb
jecxz
sbb
mov
imul
cmp
clc
jno
jp
ror
clc
cli
jno
lret
xlat
stos
movsl
std
xchg
test
jnp
lret
cmp
cmpl
xor
xchg
fcmovb
mov
aam
cmp
lcall
or
movsl
xchg
pop
xchg
fistl
jb
sub
and
inc
jmp
sahf
fsubp
fwait
iret
push
jo
into
xor
adc
arpl
xor
and
aaa
scas
arpl
iret
add
add
movsb
push
mov
jmp
adc
repnz
les
ds
inc
repz
insl
jecxz
popf
fisttps
clc
out
lock
jl
jp
aaa
sub
push
mov
mov
pop
pop
fdivp
inc
adc
mov
pusha
push
ret
jo
xchg
push
icebp
int
xor
popf
arpl
into
push
dec
adc
cmp
repnz
pop
fldenv
lret
push
mov
add
add
jl
loope
or
xor
jp
aad
inc
pushf
or
outsl
xor
lock
push
and
les
inc
sbb
fldl2e
jae
push
test
std
lea
icebp
pusha
inc
push
push
lcall
das
pusha
dec
push
sub
dec
pop
cmp
xchg
add
push
jnp
les
cwtl
insb
or
mov
outsb
jp
fadd
fucomi
rep
dec
jg
shrl
mov
push
lds
sub
fsubs
mov
clc
push
test
fwait
xor
enter
inc
sbb
mov
pusha
sub
cmp
test
push
adc
mov
mov
dec
adc
test
or
addb
mov
jp
or
test
mov
push
in
and
push
pop
nop
pop
pop
addb
jecxz
enter
mov
sub
dec
mov
jno
sub
sbb
push
xlat
stos
mov
push
dec
push
in
dec
mov
add
outsl
ds
or
mov
aad
mov
hlt
cmp
xchg
xor
mov
push
test
mov
leave
dec
pop
lods
pop
and
movsb
std
jae
push
cltd
fstl
outsl
xchg
iret
add
inc
popa
insb
jle
aaa
jbe
leave
mov
inc
nop
orl
push
sbbb
mov
mov
xchg
sub
add
and
xchg
push
and
mov
dec
sub
insb
lahf
insl
cmovae
or
out
add
dec
and
lock
dec
mov
jecxz
leave
pop
pop
inc
sbb
inc
jnp
jle
mov
xlat
inc
or
jg
into
in
mov
mov
fisubl
stos
pushl
cwtl
jmp
jb
pop
push
ret
jecxz
add
test
sub
mov
stos
pop
add
leave
lahf
jns
cwtl
lret
aas
mov
xor
push
pop
xchg
xchg
xor
jl
mov
scas
mov
fisttpll
mov
xor
pop
push
pop
push
or
xor
fucomp
inc
mov
and
pop
jae
mov
jae
sub
and
jnp
inc
pop
test
fs
jno
sub
adc
mov
popa
pop
loop
movsl
jecxz
inc
mov
stc
dec
ja
int
pusha
xor
dec
movsb
movsb
add
or
or
and
and
pop
test
push
in
daa
jnp
dec
jb
fwait
lea
cmp
mov
int3
pop
jbe
fstp
lods
rorl
imul
xor
fsubrs
dec
aad
xor
and
adc
orl
ret
leave
sub
sti
mov
std
lock
int3
ja
push
mov
orb
xor
lret
cltd
push
dec
pushf
pop
and
add
sbb
mov
sbb
lahf
cli
pusha
stc
decl
pop
xchg
flds
pop
inc
cltd
out
sbb
icebp
mov
cltd
jmp
imul
or
inc
shrb
mov
sub
jg
xchg
dec
and
add
cld
cmp
mov
pop
inc
fsubl
mov
add
jae
fsin
inc
shr
shrl
adc
mov
or
mov
push
fimuls
fcomi
mov
cltd
jo
cltd
push
sub
adc
jae
repnz
push
vpor
push
aam
pop
cmpb
and
push
mov
fdivrs
lahf
jne,pt
pop
mov
dec
lahf
lret
loop
lret
jo
leave
or
inc
mov
and
mov
sbb
mov
xchg
leave
test
clc
stos
adc
scas
pop
pop
cmp
daa
inc
cmp
sbb
ja
mov
arpl
sub
test
cmpsl
repz
inc
cmp
imul
add
pushf
dec
pop
sub
push
inc
lcall
push
push
push
fisubl
jb
dec
sahf
jns
cmp
ds
sbb
mov
lahf
xchg
sbb
push
je
aad
js
push
leave
add
mov
test
push
clc
test
test
xor
cli
cmpsb
sub
adc
and
call
repz
stos
mov
adc
call
mov
cwtl
lahf
pop
mov
xor
out
fstl
push
mov
popf
dec
or
les
jmp
sbb
jne
xor
xlat
fucomip
jnp
mov
sbb
into
inc
ret
clc
xchg
addr16
test
leave
fsubl
mov
in
jge
xlat
stos
les
cmp
cmp
inc
nop
pushf
pop
in
mov
mov
addr16
or
cs
or
or
xchg
mov
and
dec
sub
sub
test
sbb
fisubrs
inc
inc
jmp
jp
mov
pslld
and
dec
xchg
arpl
ret
mov
inc
cwtl
mov
gs
imul
cmp
cmpsb
lods
and
shll
jnp
enter
out
mov
lds
mov
les
mov
rclb
mov
push
push
push
mov
stc
fisubrs
aam
in
cmp
mov
pop
aad
cmpsb
rcll
dec
imul
sahf
jmp
xor
mov
adc
les
mov
or
add
pop
ret
dec
inc
adc
ljmp
popf
fstpl
dec
sbb
pushf
sub
xchg
pop
std
fdivrl
mov
repz
int3
les
stos
faddl
das
or
pop
mov
and
add
dec
rcr
xchg
mov
rcrl
movb
ret
pushf
int3
push
jge
pop
pusha
jle
dec
call
sub
xor
add
in
xchg
push
dec
pop
add
imull
rclb
idivl
out
bound
xchg
adc
data16
push
cwtl
movsl
jp
pop
jo
cmp
mov
loopne
pop
xchg
mov
cmc
sub
mov
mov
mov
push
je
sbb
hlt
test
xchg
sti
jle
movsb
ljmp
inc
sbb
out
push
ret
sub
repz
mov
add
pop
ror
pop
pop
xlat
arpl
mov
inc
mov
in
cmp
mov
jbe
and
add
icebp
jo
pop
jne
or
mov
pop
xchg
out
mov
dec
adc
jg
fwait
mov
xchg
push
mov
dec
call
xor
in
pop
in
jg
les
dec
popf
ljmp
inc
stos
cld
lcall
cmpb
enter
inc
mov
mov
lods
test
daa
jns
mov
cmpsl
jecxz
mov
clc
in
sub
mov
insb
in
add
add
sbb
addl
mov
dec
cmp
mov
and
xchg
jmp
jae
or
scas
mov
push
lods
xlat
mov
call
std
add
push
push
add
jp
leave
iret
cmp
dec
cmpsl
sbb
sub
andl
push
mov
je
adc
insl
inc
ja
fdivs
jnp,pt
shr
repz
cmc
push
mov
inc
int
jmp
clc
mov
test
popa
pushf
add
popf
cmp
pop
pop
imulb
or
test
movsb
mov
ret
pushf
fmul
xor
vpclmulqdq
lret
cmp
mov
bound
xchg
or
add
push
push
fsts
scas
jne
inc
xchg
fndisi(8087
mov
lds
mov
add
jmp
sahf
sahf
arpl
leave
cs
fyl2x
and
add
jge
and
and
sub
push
mov
dec
jae
and
movsl
ret
inc
out
jb
icebp
inc
mov
and
call
pop
insb
arpl
mov
sbb
adc
jecxz
mov
mov
mov
mov
xchg
in
enter
mov
mov
sarb
popf
add
pop
adc
mov
mov
loop,pt
add
shrl
lds
xchg
mov
or
mov
sti
aas
stos
mov
jp
mov
jns
xchg
jecxz
out
jnp
ja
cli
mov
aad
test
mov
adc
sbb
xor
xchg
fnstcw
cmc
loope
mov
push
sbb
ret
cltd
stc
loope
mov
ss
dec
div
in
imull
popa
insb
add
pop
mov
lock
ds
inc
xor
mov
movsl
fwait
pushl
sub
iret
clc
insb
jbe
jle
mov
daa
jnp
js
iret
cli
dec
cmpsb
inc
cltd
sbb
cltd
fwait
das
add
mov
mov
xchg
and
lock
xor
push
repz
inc
cmp
out
notb
aam
icebp
cmp
sbb
dec
lods
jle
lods
xor
std
xor
mov
xchg
mov
loope
add
sub
lret
mov
and
and
rcr
mov
cwtl
pop
mov
push
inc
in
xlat
int
shll
mov
int
push
negl
inc
cmp
mov
dec
lret
scas
and
dec
xchg
push
pop
sbb
inc
dec
mov
test
jle
jbe
xor
mov
mov
pop
cs
sbb
loope
cmpps
fdivs
mov
inc
shl
aas
out
adc
incl
fidivrl
sub
add
adcl
dec
cmp
cmp
jb
inc
adc
bound
pushf
js
aaa
add
hlt
hlt
sub
fistl
inc
inc
testl
mov
mov
dec
movsl
mov
jae
xchg
dec
ret
lret
cltd
cmc
mov
sub
test
test
test
dec
sbb
sub
test
jne
push
sub
push
bnd
lcall
sbb
mov
mov
test
aad
pop
int
mov
cmpsl
dec
out
xchg
jl
roll
outsl
cmp
pop
xchg
xchg
loope
cmpsb
popf
adc
in
and
sti
cmp
nop
xchg
bound
mov
or
mov
jle
in
push
addr16
stc
out
std
mov
inc
imul
cwtl
dec
movsl
inc
push
mov
or
cs
push
ss
push
push
popf
mov
push
xor
je
fwait
pop
xlat
pop
xor
les
dec
push
mov
jecxz
mov
aas
cmpsb
xchg
jns
jge
lods
out
xlat
sbb
cmp
pop
dec
faddl
adc
and
dec
fucomip
andl
iret
icebp
mov
decl
xchg
mov
cld
outsb
jo
cmc
adc
lds
dec
add
mov
sbb
icebp
stos
lds
xchg
pop
add
mov
add
mov
sbb
insl
cmp
push
mov
pop
inc
push
xor
inc
inc
fstl
xor
xchg
int
adc
or
push
add
pop
and
jne
shrb
lea
sbb
jmp
push
shlb
call
lock
add
loope
add
rorl
loope
test
sbb
add
mov
xchg
jmp
push
and
icebp
mov
daa
leave
jbe
icebp
pop
in
stos
sub
push
fld1
jne
lahf
out
push
or
les
popf
std
adc
jecxz
push
mov
fdivrs
dec
adc
lods
sti
dec
pusha
adc
idivl
xor
loopne
sub
inc
mov
pop
jae
jae
xlat
cmc
sub
je
mov
cltd
test
mov
cmp
faddl
inc
dec
pushf
dec
fsub
fsts
out
mov
mov
stos
mov
lret
fldl
in
jns
stos
js
stos
mov
lods
jmp
inc
cmpsl
fisubrs
push
fistpl
pop
arpl
out
stos
jp
push
mov
jne
add
jb
xchg
jne
mov
cmp
sbb
lahf
fisttps
roll
std
jecxz
sub
movntq
out
sbb
xor
lods
movsb
sbb
sub
push
cmp
and
xlat
sub
test
mov
pop
xchg
fcoms
pop
js
pop
cmpsb
lahf
inc
xor
scas
mov
and
nop
fstp
imul
out
xlat
adc
sarb
inc
movsl
repz
jge
pop
sti
shrb
stos
aam
cmp
or
incl
in
cmp
sbbb
xchg
pop
sbb
jne
fbld
fsubrl
lret
sbb
push
mov
cmp
sbb
sbb
lret
les
sub
repz
mov
lcall
sbb
aas
jae
repz
mov
in
pop
jp
enter
inc
movb
lods
loopne
add
push
cld
gs
or
lahf
shl
sbb
ret
cld
xchg
stc
add
xor
inc
sbb
orl
mov
inc
jecxz
test
push
pop
add
pop
cmp
sub
mov
add
cmp
mov
mov
push
les
inc
popl
fimuls
aas
push
mov
push
jmp
lret
inc
rcrb
inc
and
insb
mov
mov
aas
adc
loopne
loopne
mov
mov
mov
mov
ljmp
sti
push
addr16
ret
sbb
shl
sbb
inc
jnp
dec
mov
movsb
into
sub
pop
jmp
adc
xor
fmuls
inc
lcall
popf
stos
dec
out
push
sub
xor
pop
and
movsb
jl
xchg
or
cwtl
pushf
inc
pusha
fisttps
mov
sub
adc
push
lret
pop
sub
mov
lds
cmp
mov
adc
cld
inc
inc
mov
jae
repnz
sbb
cli
lret
aam
mov
add
mov
xor
fs
dec
aas
xor
lret
jecxz
cmpsl
lret
mov
push
ret
xor
mov
cmpsb
fimull
jo
inc
into
pop
stos
movsl
sub
dec
pop
mov
sbb
cmovno
jmp
rcll
lcall
mov
add
sahf
cld
sbb
cmpb
mov
dec
push
cld
jl
push
push
stos
mov
fists
mov
sbb
pop
and
scas
mov
sbb
mov
sbb
cmp
xchg
aas
sub
xchg
test
addr16
xchg
stos
xchg
xlat
push
sbb
adc
dec
fs
js
scas
mov
pop
inc
sbb
pop
jp
dec
jmp
inc
add
hlt
js
rorl
test
js
add
xor
imul
je
and
enter
and
add
mov
stos
cmp
and
add
aam
jo
rcll
or
out
pop
hlt
sbb
nop
test
dec
adc
fsubr
push
movsl
mov
sahf
stos
jecxz
inc
push
jge
lret
cmp
pop
insl
or
xchg
stc
stos
inc
cwtl
pop
dec
xchg
sti
mov
ror
ds
in
std
leave
pop
push
dec
jecxz
sbb
movsl
dec
sahf
cmp
sbb
jae
mov
add
push
ds
fcoms
icebp
push
pop
add
sti
sbb
sub
mov
push
xor
ja
in
xor
xchg
push
xchg
sbb
or
in
push
cmp
dec
sub
gs
mov
cmp
out
dec
data16
sti
mov
pushf
mov
or
sbb
out
push
and
xor
or
mov
insl
inc
lahf
sti
insl
out
jp
sbb
je
ret
push
sti
or
add
sbb
inc
sahf
sti
sub
int
jbe
iret
sbb
mov
aaa
sbb
cmp
jae
jl
adc
mov
daa
adc
aas
ret
jb
pop
das
or
mov
pop
or
cmp
jae
cmp
add
cmp
repz
or
add
mov
ss
notl
mov
or
ljmp
loop
sbb
dec
mov
imul
add
out
fwait
cmp
push
dec
mov
lret
xchg
ljmp
mov
mov
stos
mov
jo
push
cmp
pop
inc
jp
outsb
push
mov
js
push
cmp
arpl
push
mov
pusha
fs
cmp
sbb
jp
push
mov
push
cmp
jp
bound
sub
xor
jmp
ret
cli
aam
pop
js
or
mov
xchg
out
jp
or
and
cmpsb
jb
sub
ja
ffreep
lods
cmpsl
ret
xchg
fs
sub
popf
insb
xor
mov
ret
jl
adc
test
fisubrs
jp
dec
inc
mov
cmp
and
push
sub
mov
mov
imul
pusha
adc
scas
sub
in
or
and
movsb
lret
insl
mov
aas
mov
pushf
fwait
sub
xor
shll
dec
xor
stos
scas
test
mov
push
xor
sti
cmpsl
mov
sbb
arpl
daa
push
stos
divb
sub
push
ss
sbb
lahf
mov
pusha
jecxz
popf
lret
push
jnp
push
pusha
test
dec
repz
or
push
inc
ffree
cmc
and
cmc
movsl
jl
mov
sub
add
jnp
xchg
lock
pop
mov
or
cmpsb
lcall
pop
cwtl
out
lock
mov
in
mov
jle
iret
dec
push
ja
xchg
rorl
mov
cmp
test
insl
adc
sub
inc
cmp
jmp
inc
ja
jle
movsl
adc
mov
mov
sub
stos
push
xchg
xor
inc
imul
outsl
into
pop
cmp
xor
inc
test
fisubrl
cli
inc
fwait
sbb
mov
out
outsl
inc
fcoml
sbb
gs
xor
sti
xchg
rorl
and
mov
sbb
fsubrl
adc
addl
pop
jno
lods
outsb
dec
adcl
arpl
lret
jecxz
nop
fwait
out
xchg
scas
jg
int
jbe
mov
push
inc
xor
pop
push
andb
addl
and
rcll
fadds
xchg
flds
fwait
jb
xor
int3
push
movl
sub
cmpb
test
sub
inc
inc
xor
js
push
mov
fidivs
aam
cmp
bound
repz
in
out
and
arpl
inc
ja
ds
jb
lahf
mov
test
jo
testl
mov
jmp
push
cmp
jbe
repnz
mov
stos
sub
repnz
lods
fstl
mov
push
cld
fcoml
push
push
adc
stos
xor
lds
lret
xor
push
popa
neg
sub
or
or
leave
lods
outsb
dec
adcl
arpl
lret
jecxz
nop
fwait
or
add
outsl
jno
imul
ret
out
or
popa
cmp
das
test
mov
sahf
dec
pushl
xchg
sub
sahf
lds
pop
mov
rclb
cmp
repz
push
jge
dec
pop
sub
call
iret
inc
pushfw
lcall
les
dec
inc
fildll
dec
mov
ret
sbb
adc
fnsave
pop
gs
mov
sub
adc
ret
mov
stos
fisttps
fists
test
add
mov
aam
aam
xchg
fmul
out
mov
and
xor
or
pop
xor
push
rcr
adc
sahf
cmc
sti
jp
faddp
popf
mov
repz
int
mov
dec
int3
xchg
inc
faddl
add
xorb
sbb
rolb
or
int
pop
das
adc
cltd
fstl
add
push
add
mov
sbb
push
repz
outsl
pop
mov
dec
mov
fimull
xor
jge
sub
pop
loope
call
jns
leave
scas
mov
pushf
xor
dec
sarl
lods
int
inc
popf
iret
and
xor
movsl
xchg
hlt
jl
lea
push
shrl
out
dec
sahf
lret
mov
iret
pop
stos
fucomi
push
ja
lret
pop
mov
xor
pop
dec
add
inc
fnstenv
sbb
push
jbe
sti
xchg
adc
mov
arpl
addr16
push
cltd
push
fdivl
test
push
mov
mov
mov
cltd
test
lock
mov
ljmp
dec
in
pop
mov
js
cmp
inc
test
jbe
cwtl
mov
push
adc
movsb
and
add
xchg
repnz
scas
and
dec
sub
sub
mov
int3
jl
rorb
push
xchg
jmp
ss
je
ficoml
cli
push
imul
xchg
loope
lds
and
pop
out
xor
fld1
lahf
cmp
xchg
xchg
mov
shlb
movsb
outsl
pop
aam
xchg
xchg
out
mov
sbb
jns
and
dec
daa
inc
or
dec
mov
mov
into
pop
stos
shrb
mov
loopne
mov
repz
aas
ljmp
std
cmp
xchg
pop
sub
mov
addb
sbb
add
mov
mov
decb
jmp
adc
cmpsb
lret
inc
sbb
jno
sbb
cmp
jae
cmp
lods
pop
popf
into
arpl
jge
test
mov
test
inc
imul
arpl
dec
movsl
xchg
mov
add
add
mov
and
ds
icebp
mov
movl
cmp
or
nop
hlt
mov
stc
rorl
xchg
xor
test
cmp
xchg
xchg
mov
mov
mov
and
pop
lcall
out
mov
cmc
jnp
test
dec
jl
cmc
jmp
int
je
popf
xchg
call
inc
fwait
neg
movsl
mov
ljmp
inc
mov
es
pop
jns
or
jns
ds
lahf
fwait
jnp
add
call
sbb
cs
movsl
cwtl
mov
inc
mov
push
imulb
inc
in
xlat
dec
stos
movsl
mov
xchg
ds
dec
repz
mov
aaa
popf
out
arpl
in
mov
dec
mov
push
jp
xor
aaa
hlt
mov
mov
mov
imulb
cmp
shrb
inc
xor
outsl
push
cmp
cli
ficoml
push
insb
inc
andl
pop
push
repz
inc
int
fldenv
adc
aam
test
cwtl
mov
xor
jecxz
fnstsw
xchg
mov
jmp
cmp
out
sub
aas
pop
sti
addr16
xchg
inc
mov
mov
push
fsubs
cmp
mov
aad
inc
lcall
cmp
mov
jns
shrb
jecxz
adc
iret
repz
sti
xchg
arpl
lock
aaa
inc
pop
shlb
lock
cmpsl
jecxz
cld
push
cmpb
popa
popf
scas
pop
mov
fcoml
divb
jg
push
xchg
js
xchg
pop
and
add
or
call
les
cltd
insb
and
lock
mov
jl
rcll
mov
lods
arpl
loope
xchg
pop
test
mov
or
movsl
mov
cs
or
xchg
loop
xchg
adc
mov
gs
dec
dec
xor
jg
in
sub
popf
dec
jno
dec
adc
mov
xchg
cmpsb
dec
and
scas
or
repz
jb
jae
xor
jns
sarb
adc
lea
adc
fsubl
rorb
inc
stos
in
bnd
adc
adc
inc
idiv
mov
mov
test
icebp
outsb
pop
adcl
mov
movzwl
add
nop
in
in
cltd
fsubrl
pop
data16
and
push
push
cmp
sub
jmp
xor
dec
mov
lock
push
add
cwtl
loopne
bound
xchg
jno
sub
add
cmpsl
mov
fidivrl
sub
mov
lcall
fwait
lods
cmp
imul
dec
sbb
scas
movl
cmc
out
popl
andl
add
mov
test
inc
adc
mov
or
or
adc
rorb
mov
xchg
adc
fisubrs
adc
cmp
lea
jp
xchg
enter
hlt
xor
aad
outsb
mov
and
push
xchg
mov
in
ljmp
cmp
das
xlat
jmp
mov
cltd
mov
inc
rolb
je
adc
mul
add
xchg
idiv
and
lea
dec
pop
and
scas
lret
jns
push
test
xor
sbb
ss
shll
pop
push
xor
sahf
jp
add
fmuls
xchg
fsts
lahf
or
dec
or
push
mov
push
mov
loopne
aaa
mov
sbb
pusha
xchg
jge
stos
neg
clc
js
ficoms
xorl
cld
aas
push
mov
in
addb
bswap
jg
rcr
mov
mov
test
xchg
adcl
mov
push
outsl
sti
repz
mov
cmpsb
xchg
adc
out
enter
aaa
mov
in
sub
rcr
adc
adc
mov
mov
leave
movsb
lods
mov
xor
or
arpl
lods
rol
loopne
jno
add
cli
mov
sbb
mov
dec
je
adc
xlat
icebp
cld
jg
jg
leave
faddl
sub
mov
mov
stos
mov
ja
xor
dec
push
pop
sbb
fisttpll
sbb
mov
jge
adc
sbb
lret
adc
cltd
add
repnz
fidivrl
jl
xchg
adc
cmp
ret
and
mov
pop
fwait
leave
push
mov
std
test
bound
push
sbb
xchg
shlb
add
mov
ret
fdivrs
mov
in
cmpsl
jnp
sub
mov
bound
leave
out
fcompl
xchg
mov
xor
repnz
popf
fisubrs
popf
mov
push
xchg
dec
mov
mov
push
xchg
fistl
inc
repz
lcall
dec
outsb
xchg
into
das
jae
and
sbb
and
sbb
add
inc
sbb
out
dec
adc
jmp
jp
imul
jb
pushf
fstps
xchg
stc
dec
jno
push
hlt
int3
pop
sbbb
inc
shrl
stc
pmaddwd
arpl
cmp
hlt
xchg
mov
aad
imul
push
mov
dec
out
loopne
sub
inc
sbb
dec
cmp
jnp
sub
cld
stos
repz
pop
or
mov
sbb
mov
rcr
push
and
mov
cmp
mov
movsb
xchg
sbb
xchg
pop
jno
sub
cmp
xchg
sbb
pusha
xor
das
and
jmp
xor
shr
xchg
adc
jmp
adc
inc
add
fistps
lret
in
or
adc
sbb
sbb
clc
cmp
aam
ss
shlb
sbb
adc
inc
or
mov
pop
adc
push
inc
xor
aaa
sbb
push
mov
push
js
mov
addl
jmp
cmp
xchg
sbb
mov
mov
or
xlat
xchg
jno
aad
in
popf
adc
rcrb
fcmovne
js
jle
mov
sti
cmp
dec
jl
sbb
movsl
rcr
pop
jne
mov
mov
inc
in
shll
ret
add
sub
movsl
mov
xchg
cmp
mov
dec
mov
inc
mov
pop
xchg
enter
xchg
loope
nop
lock
cmp
arpl
xchg
ds
mov
inc
aas
pop
sub
xor
mov
and
mov
repz
inc
mov
fdivp
jae
sbb
jns
jmp
mov
pop
pop
jp
xor
pop
fsubrl
sbb
dec
and
sbb
mov
int3
sbb
push
xchg
pop
or
pop
mov
popf
lret
or
inc
mov
shr
mov
jno
add
dec
jmp
mov
lea
pushf
cmp
xchg
fdivl
jae
pop
mov
nop
push
mov
sbb
test
jo
sbb
loopne
mov
cmpsl
std
or
cmp
std
sub
xchg
xchg
inc
push
lock
stos
pop
mov
xchg
mov
mov
out
enter
pop
cmp
int3
jb
fwait
outsl
push
or
sbb
fwait
push
mov
jecxz
xchg
jo
pop
push
ret
leave
mov
int
imul
mov
adc
mov
push
push
mov
in
jmp
into
and
mov
hlt
stc
ficoms
aaa
movsl
icebp
enter
leave
movl
inc
or
into
in
int3
lahf
stos
repnz
mov
les
shll
stos
xor
lret
dec
lcall
das
xchg
iret
out
xchg
mov
pop
sub
jle
push
jl
pop
in
andb
ljmp
mov
mov
and
imul
dec
scas
sti
ljmp
enter
add
mov
push
push
xor
xor
rolb
mov
mov
jp
sbb
dec
sub
repnz
dec
cmpl
shlb
movb
movsl
jb
pusha
loopne
and
repnz
cli
ret
leave
mov
or
sub
lods
fwait
mull
cmp
scas
or
pop
aam
ds
pop
jns
or
cmp
sbbl
mov
mov
loop
stc
mov
or
daa
sbb
insl
jae
or
movsl
adc
dec
fistpl
lods
das
inc
or
mov
fsubrl
mov
or
loopne
jnp
lret
push
jo
cmp
xchg
mov
jnp
or
dec
jmp
xchg
dec
fcmovu
fcmovu
in
add
imul
jg
nop
bound
popaw
sub
cmp
dec
sarl
cli
clc
sub
cwtl
dec
nop
rcll
and
stos
adc
int3
xor
mov
stos
mov
in
push
std
call
jnp
outsb
pop
aam
sbb
dec
fstl
call
mov
lret
or
out
into
inc
test
icebp
pop
orl
lcall
mov
pop
xchg
push
lcall
in
pop
inc
or
inc
mov
pop
jno
scas
xor
cld
jg,pt
arpl
test
and
xchg
hlt
xor
test
xchg
sti
cmpsl
jae
aam
push
loopne
xchg
push
and
add
dec
add
imul
fistl
cli
test
adc
jl
push
dec
add
xor
sahf
inc
inc
ljmp
test
in
cmpl
xlat
in
ja
inc
mov
push
adc
hlt
inc
and
lahf
lret
and
jl
push
mov
int3
sub
fidivrs
mov
stos
out
and
cld
inc
int3
in
repz
fnstenv
rep
daa
sub
lret
mov
in
mov
shl
mov
mov
addl
mov
cmpsl
aam
xchg
add
ficomps
pop
dec
sbb
ja
cmp
lods
xchg
shll
mov
cmpsl
mov
or
jbe
lret
adc
cli
stos
repnz
imul
pop
xchg
push
in
popa
iret
mov
cmc
jae
fldt
jge
mov
cmp
lret
xchg
lea
fidivrl
idivb
imul
push
xor
testb
adc
or
movsb
std
push
sbb
cltd
lret
jp
fnstenv
loope
push
or
sti
cmp
icebp
jno
in
pop
xchg
fwait
jmp
out
mov
sub
pushl
fnsave
cld
vmovntdq
mov
vpxor
iret
cmpsl
push
jae
xlat
insb
imul
pusha
adc
pop
mov
pop
dec
iret
fnstsw
insb
aaa
and
sbb
xchg
lock
ds
ret
fsubrl
inc
roll
enter
mov
aam
add
cmp
or
add
mov
xchg
rorb
mov
mov
addr16
or
jbe
mov
hlt
lds
sbb
mov
pop
dec
dec
add
fucomi
data16
scas
push
and
sbbl
mov
or
movsl
xchg
outsb
popa
fcmovnu
push
xchg
cwtl
sub
cmp
mov
lahf
mov
xchg
lahf
mov
pop
leave
loop
sub
js
pop
xchg
andl
push
add
push
sub
cmp
in
push
mov
lods
jge
xchg
cmpsb
cli
fwait
sub
stos
mov
in
dec
jns
jb
pop
mov
sub
and
loop
jecxz
mov
dec
int
mov
mov
mov
dec
mov
mov
inc
call
cmp
mov
jnp
out
pop
mov
ret
or
jae
pop
aas
imul
movsb
cmp
jo
mov
les
adc
lods
xor
fidivrs
in
push
stos
mov
in
push
test
subb
jae
and
push
je
mov
ret
cld
mov
and
dec
mov
jo
xorl
daa
jge
imul
push
or
xchg
das
int
adc
imul
mov
pop
push
lcall
popf
shl
add
js
mov
xchg
je
cs
and
sbb
mov
sbb
cwtl
sbbl
mov
cmpsb
jnp
js
xor
outsl
das
add
sbb
cmp
dec
dec
test
fsubs
aaa
jle
add
mov
add
xchg
mov
push
or
mov
mov
pop
into
test
lret
mov
sub
mov
or
or
pop
mov
jle
dec
mov
pop
or
pop
stos
dec
pop
jne
lds
pop
push
fwait
and
xlat
clc
push
adc
jae
dec
fldenv
mov
cmp
xchg
cmp
push
xchg
arpl
adc
test
xor
loopne
mov
xchg
les
lahf
adc
pop
mov
cld
or
popa
leave
loop
inc
aam
jae
stc
xor
cmp
fdivr
jo
cmp
add
fdivrs
pop
mov
pop
xchg
je
rolb
pop
adc
push
pushf
cmpsl
test
mov
mov
jl
fimuls
add
mov
add
dec
loope
jl
out
mov
int
int3
cmp
adc
fdivl
cmc
sub
sub
adc
sbb
jg
repz
sti
pop
mov
adc
mov
pop
mov
data16
and
mov
mov
dec
mov
in
mov
popf
cmp
jge
scas
shll
stc
sub
lret
fucom
or
mov
inc
mov
xchg
iret
cmp
fcompl
fsubrl
addb
mov
dec
xchg
dec
add
xor
scas
dec
int
xchg
pop
inc
pop
addr16
lods
inc
sbb
mov
mov
sub
loop
mov
inc
mov
nop
adc
fninit
sbb
pop
dec
aas
jb
mov
stos
repnz
andl
cmp
movsl
jbe
ja
fucomi
fbld
bswap
inc
test
pop
jnp
test
dec
xchg
out
mov
loope
lahf
sti
cwtl
and
iret
cs
movsl
push
jne
pop
adc
cmp
cld
dec
pop
lds
mov
mov
fistpl
push
pop
inc
test
mov
sbb
ja
nop
xor
stc
jg
pop
scas
sub
push
sbb
mov
adc
cmp
cmpsb
and
hlt
xor
pop
inc
mov
pop
in
arpl
repz
gs
cmp
sbbb
rolb
xchg
cmp
notb
or
and
push
mov
iret
push
sub
push
lea
lahf
lret
ret
fnstcw
and
or
fs
adc
and
in
imull
jecxz
loop
std
cmovge
rcr
stos
stos
je
test
xchg
mov
lods
call
lds
repz
ror
inc
lds
imul
mov
mov
jl
inc
mov
cmp
jo
incl
pop
das
pop
cmpl
dec
xchg
inc
repz
pop
xchg
pop
add
xor
jge
lods
xor
mov
daa
add
mov
dec
aas
rorl
iret
fs
adc
jg
and
jno
mov
lret
aad
jae
mov
cmp
imull
or
xchg
test
lds
stos
mov
mov
mov
mov
lods
outsl
or
xchg
push
push
mov
jnp
cltd
cmpsl
adc
test
pop
pusha
mov
mov
fistpll
sbb
add
popa
or
inc
test
popf
dec
sbb
add
mov
sbb
xchg
mov
push
jmp
pop
inc
sbb
pop
cmp
jmp
popa
mov
popa
mov
test
mov
sbb
jecxz
lds
adc
outsl
fisubrs
jmp
xchg
adc
push
pop
adc
cwtl
icebp
ficoml
rorl
cmp
and
insl
adc
in
cmp
lret
cmp
mov
or
mov
jmp
gs
sbb
and
jp
pusha
jmp
sbb
push
cli
stos
jb
dec
mov
sahf
sbbl
pushf
fnsave
add
cs
test
dec
je
stos
jge
mov
fildl
mov
pop
lret
sub
ja
sbb
xchg
sub
mov
sbb
test
mov
push
push
popl
mov
or
or
lods
dec
aam
cmpsb
xchg
pop
insl
dec
push
push
mov
insl
cltd
inc
lahf
pop
mov
and
and
mov
and
and
sub
loopne
hlt
mov
in
jb
xor
das
push
mov
pop
xchg
mov
repz
cmp
popf
mov
sbb
ds
and
or
ret
cmpsl
fldcw
pop
sub
leave
mov
pop
cld
sub
mov
xchg
mov
insl
sahf
fsub
insb
insb
fldcw
xchg
repnz
sbb
shr
jnp
jno
lcall
stos
mov
repz
je
imul
js
rorl
popf
fdivrl
xlat
cmp
jnp
inc
dec
push
fsubr
dec
push
add
cmc
dec
jmp
lcall
mov
cmc
jmp
pop
andl
sbb
mov
sub
jns
xchg
test
pop
mov
mov
ret
inc
lret
movd
sbbb
cmp
int3
sbb
pop
sub
aaa
jmp
fnstenv
or
cwtl
imul
or
loop,pt
dec
push
adc
push
arpl
mov
outsb
in
xor
sti
jnp
cwtl
out
leave
xor
test
lds
icebp
mov
and
aaa
pop
push
pop
in
jecxz
push
popf
mov
sbb
lahf
jae
mov
push
mov
std
les
jl
fimull
push
jl
lret
or
push
push
adc
mov
out
rcll
pop
push
shl
ffreep
sub
push
pop
iret
pop
mov
pop
jb
loop
sub
jl
popa
or
sub
or
jo
ret
pop
fistpl
cli
mov
cmpsl
bound
scas
or
jl
cmp
jne
cltd
dec
mov
or
xor
rcl
lret
gs
adc
xor
adc
and
pop
dec
fnstenv
imul
mov
std
nop
xlat
dec
ror
sbb
fmull
inc
cmp
aad
hlt
roll
movsl
add
xor
push
and
or
mov
push
mov
les
sbb
test
mov
xchg
inc
jmp
enter
dec
cmp
xorb
add
in
push
movsl
dec
gs
leave
dec
pop
and
cwtl
loopne
sbb
sub
inc
add
movsb
cs
or
in
lahf
adc
std
and
push
mov
incl
jle
insl
or
mov
in
lahf
mov
jno
fidivrl
jno
sub
dec
pusha
jo
pushl
stos
mov
pop
in
add
ds
inc
mov
sbb
and
adc
subb
dec
or
ficoms
lds
push
cmp
xor
fistl
add
jge
mov
gs
cmp
xor
jne
inc
adc
adc
in
inc
pop
adc
mov
insl
popf
mov
dec
or
repnz
insl
cli
les
xor
cs
sbb
push
sbb
xor
and
test
scas
es
or
jbe
movsl
insb
aas
or
and
pop
std
addb
aaa
popf
icebp
aas
cmpsl
push
ja
mulb
xor
pop
push
mov
sbb
mov
pop
jae
aas
pusha
add
cmpsb
in
es
add
lret
xchg
xor
jl
pop
aad
sub
add
mov
xchg
sub
sub
mov
dec
xor
jbe
or
xor
add
cwtl
fsubl
mov
sbb
mov
mov
je
fldl
lcall
push
mov
jnp
aam
jae
cmp
lds
xor
clc
mov
test
sbb
push
push
or
pop
pop
or
pop
mov
push
dec
ss
hlt
scas
push
lds
ds
popf
jp
lods
fst
push
into
stc
and
pop
gs
stos
scas
push
adc
stos
cmc
insb
pop
mov
jl
push
dec
pop
int3
xor
xchg
aas
jge
add
lret
mov
xor
test
xchg
jge
cmp
adc
jns
inc
addl
mov
sti
pop
js
popf
push
adc
js
repz
jno
cmpsl
int3
test
cmp
mov
push
es
leave
hlt
out
push
sbb
mov
xchg
cmc
mov
mov
lcall
pop
adc
shlb
lock
sbb
mov
dec
inc
cmp
mov
xchg
inc
arpl
mov
xor
mull
movsb
adc
mov
add
mov
lods
pop
mov
lock
dec
or
pop
pop
rclb
fisttpl
and
adc
lcall
and
js
mov
fs
lock
sar
imul
lods
in
xlat
dec
stos
mov
cmpsl
sti
mov
inc
sbb
les
lds
inc
pop
mov
sub
icebp
jae
inc
pusha
jo
data16
fldl
int3
sub
xchg
lods
adc
ret
mov
outsb
ss
or
std
fs
lea
lds
pop
fsubl
pop
decb
clc
adc
pop
arpl
mov
adc
frstor
je
add
ss
mov
xor
pop
clc
clc
aam
jbe
fbld
and
aam
popa
mov
or
xor
mov
xsavec
loope
mov
xlat
mov
mov
popf
mov
loop
jge
cmp
mov
mov
aaa
add
mov
adc
sbb
xchg
orb
ret
or
xchg
push
pop
loopne,pt
xor
xlat
jmp
int3
add
test
add
iret
jae
jp
cmp
sub
dec
pop
jae
les
pusha
test
sbb
add
push
les
mov
sbb
in
add
xchg
xchg
fnstenv
cmpsl
mov
out
pop
cmp
sub
dec
stos
sub
test
push
stos
pop
add
popl
int
dec
mov
jns
mov
rcll
outsb
decb
cwtl
subb
cmp
jnp
out
cmpl
gs
or
sbb
dec
push
or
sbb
mov
xor
lahf
inc
mov
insl
sbb
sub
cltd
repz
adc
cmpsl
inc
inc
pop
adc
fists
aaa
gs
outsb
aaa
mov
mov
jmp
or
inc
hlt
fs
xchg
mov
mov
stos
add
pushf
lcall
sbb
push
ret
in
arpl
repnz
int
movhps
cmp
cmp
dec
mov
add
jmp
mov
lea
add
pop
cmpsb
js
lds
inc
push
or
sub
sbb
rcl
inc
loop
mov
add
mov
mov
les
add
push
fdivrs
gs
imul
or
pop
cmpsb
arpl
cmpsl
popf
and
inc
enter
rcrl
dec
pop
adcl
mov
adc
sbb
pop
aam
fstl
lret
imul
pop
xorb
gs
jne
xor
mov
xlat
pop
adc
inc
pop
adc
imul
mov
pop
sbbl
stos
xchg
lret
test
dec
sub
lret
sbb
ss
add
xchg
int3
push
jecxz
dec
repnz
sbb
adc
lds
addr16
xchg
jp
sub
sub
das
xchg
mov
imul
outsb
mov
scas
inc
xor
sbb
int3
mov
cwtl
or
inc
out
fsubrl
repz
add
pusha
inc
pop
mov
push
adc
ror
std
dec
and
push
cmc
test
lods
add
das
push
aas
in
cmp
enter
iret
pop
inc
mov
popa
mov
cmp
leave
cwtl
sahf
out
insb
out
mov
ljmp
mov
jl
mov
sub
or
adc
sbb
and
pop
add
inc
dec
into
lret
jecxz
fcomi
cs
fs
jo
mov
cld
imul
imul
push
mov
cwtl
adc
stos
insb
push
xrelease
mov
mov
cmp
add
popf
xor
daa
xchg
jp
stos
stos
rep
in
test
jmp
adc
mov
mov
xor
or
int
xchg
icebp
jp
arpl
std
add
add
add
push
popa
xchg
xchg
lock
adc
pop
xchg
add
or
inc
mov
xor
cli
sbb
pop
mov
adc
cmp
cmpsb
clc
stos
add
les
pop
mov
jnp
lea
iret
std
xor
xor
mov
mov
cwtl
dec
daa
adc
cmpsl
fstpl
andb
stc
mov
mov
jl
jmp
fdivrs
in
sub
fbld
loope
fildl
adc
or
inc
lock
iret
mov
mov
jecxz
fsubrl
mov
lods
sub
mov
out
mov
inc
pop
cmp
cmc
movsl
mov
mov
or
inc
push
adc
lret
dec
inc
shll
imul
les
fwait
xchg
inc
lock
dec
push
push
sbb
lods
push
and
jo
ds
nop
xor
icebp
jl
lds
out
sbb
adc
aas
fisubs
outsb
dec
mov
jo
cld
lret
inc
fbld
pop
pop
mov
inc
push
std
adc
xor
or
xor
jmp
add
stc
bound
and
int3
pop
lods
ljmp
out
repz
push
mov
lods
shlb
das
pop
in
fninit
dec
lea
and
lret
push
cmp
sbb
addr16
xor
inc
leave
in
cld
int3
pop
sbb
inc
outsb
jno
lret
cli
xor
jecxz
adc
arpl
sbb
adc
xchg
test
out
mov
xor
aas
mov
test
dec
bound
add
sarl
and
in
jge
cmpsb
xchg
stos
mov
add
jne
cmp
fdivrs
aas
movsl
dec
cmp
inc
mov
cld
mov
repz
cwtl
hlt
inc
fisubs
mov
or
mov
sbb
ret
dec
sub
pop
movsl
icebp
xchg
push
js
jno
popf
mov
ss
sub
sub
lock
mov
test
mov
mov
arpl
lret
mov
jnp
sub
push
hlt
mov
xchg
jmp
out
xor
lret
sub
stc
inc
adc
pop
fistpl
xchg
lds
add
mov
leave
jns
sbbb
incl
dec
inc
or
or
xchg
push
cmp
and
dec
rorb
jne
dec
popf
pop
or
pop
sub
xchg
push
std
out
stos
test
xchg
dec
mov
int3
stc
movsb
push
ljmp
or
push
xchg
cli
js
or
test
inc
xchg
mov
push
xchg
pop
push
mov
mov
or
sbb
sbb
insb
mov
inc
ja
mov
lahf
inc
jge
je
cmp
mov
fwait
data16
into
mov
cmpsl
les
inc
idivb
add
mov
sbb
mov
xchg
popa
xor
cmp
out
mov
mul
ja
in
pop
dec
cmpsb
es
pop
adc
xchg
popf
inc
jmp
pop
lcall
pmaddwd
shlb
dec
scas
jne
xor
into
mov
push
outsl
sbb
stos
pop
or
daa
std
loope
lret
mov
push
sti
pop
iret
shlb
aaa
test
mov
repnz
add
bound
push
push
cmp
push
mov
sbb
call
inc
jg
repz
test
inc
sbb
cli
scas
xor
test
push
mov
or
dec
cmpsl
outsl
les
sub
mov
ss
sub
mov
jbe
movsb
mov
cmp
sub
mov
sbb
mov
xlat
adc
aas
jne
pop
dec
aam
repnz
xchg
jp
jge
data16
xchg
loope
pop
xchg
sbb
or
pop
fidivrs
dec
xchg
jb
add
inc
iret
pop
mov
inc
fcmovnu
insb
aaa
and
xorl
push
and
clc
js
test
adcb
test
jbe
xor
inc
mov
sahf
fdivrs
jecxz
jp
mov
push
or
loop
repnz
sub
mov
sub
jb
adcb
popf
add
fst
int3
or
xor
and
aaa
dec
mov
outsl
mov
jae
mov
xor
and
push
xor
inc
stos
cmp
push
adc
dec
and
movb
jbe,pt
mov
inc
mov
push
ret
test
scas
imul
mov
stc
adc
jl
imul
je
test
daa
movsw
out
js
sbb
addr16
push
cmc
cwtl
mov
pusha
outsl
aas
addb
daa
jnp
adc
fdivs
inc
xor
add
mov
sub
dec
mov
data16
adc
adc
add
std
dec
pop
mov
mov
aas
int
hlt
ds
push
stos
inc
les
cld
repz
or
sub
rcrb
mov
and
aad
aaa
ds
pop
push
dec
mov
repnz
test
jl
aas
cmpsl
xlat
xchg
hlt
dec
repz
mov
aaa
and
cli
jecxz
mov
cmp
mov
add
push
mov
push
dec
push
fistps
mov
lds
or
lods
inc
sbb
imul
bound
xchg
insl
jecxz
fsubr
das
cmp
xlat
add
scas
mov
rcll
js
mov
mov
mov
xchg
inc
fidivs
pop
inc
adc
mov
xchg
inc
jbe
xchg
pop
cmp
call
int3
jbe
test
fadds
fwait
inc
xor
mov
push
rcrl
cwtl
cld
sub
push
pop
cwtl
jb
and
mov
mov
rcrl
je
mov
out
jnp
stc
std
xor
repz
dec
aaa
xchg
imul
iret
std
or
mov
loop
into
xchg
fnstsw
fsts
movsl
mov
inc
shrl
lods
push
push
cli
sub
pop
sub
add
push
dec
lret
xchg
ljmp
mov
insb
push
dec
adc
xchg
dec
data16
cmpl
push
pop
cmpsl
push
ret
shlb
cwtl
ljmp
push
sub
add
aas
popa
outsl
lahf
sub
mov
pop
jb
test
mov
add
push
gs
out
je
aam
cmp
cmp
out
xchg
int
xor
lret
sub
shrb
mov
sbb
inc
mov
mov
ss
mov
push
leave
mov
or
xor
cmp
inc
in
inc
mov
movsl
mov
sbb
inc
inc
divl
rolb
push
in
ja
test
cld
jg
cmpsl
xchg
leave
fsubrl
push
xor
arpl
dec
inc
outsl
dec
pop
cmp
mov
cli
pop
pop
test
mov
test
mov
lods
xchg
dec
popf
lret
or
inc
dec
mov
mov
adc
mov
lcall
xor
int3
ss
cwtl
mov
jb
mov
out
adc
pusha
push
push
xchg
sbb
repz
es
mov
fisubs
imull
jecxz
push
inc
xor
push
inc
js
mov
mov
packuswb
in
call
mov
xchg
imul
xor
pop
xchg
cltd
dec
addr16
jb
jg
out
adc
push
jno
sbb
ss
loope
xchg
sub
push
inc
xor
repnz
das
push
dec
inc
jle
cs
xor
mov
sub
cmpsb
ret
mov
test
add
pop
pop
inc
mov
mov
sbb
mov
cld
push
stos
jo
jg
xor
outsb
jne
mov
movsl
mov
cmpsl
xor
outsl
push
lcall
push
dec
sbb
add
mov
xor
dec
repnz
jbe
adc
cmp
mov
and
scas
inc
scas
xchg
mov
cs
dec
fcmovne
nop
mov
push
jb
mov
pop
push
push
mov
stos
ret
jge
enter
or
test
pusha
jo
shrl
sub
or
movsb
mov
lret
sbb
or
add
fsubs
mov
xor
pop
dec
mov
mov
sub
sub
sti
jne
xor
jne
fldcw
pusha
pop
cmpsl
cmp
aaa
mov
add
clc
shr
lret
sbbl
pop
ss
lcall
daa
jne
out
or
push
sbb
loopne
jle
sbb
in
mov
les
mov
pop
adc
jns
rorl
pusha
scas
xor
loopne
js
mov
stos
test
mov
lods
sub
jne
dec
jb
cmp
int3
aaa
outsb
inc
cmp
shll
mov
jl
bound
pushf
imull
mov
stos
xor
dec
in
push
test
push
adc
pop
pop
lret
jno
fisubl
and
fs
and
idivl
and
test
mov
xor
mov
cmp
fmull
mov
int3
sub
fdivrl
jnp
mov
or
mov
xchg
dec
jge
and
push
popf
mov
fwait
int
repnz
clc
add
sbb
and
xor
xor
sub
mov
inc
mov
out
sbb
xchg
mov
cltd
int3
dec
pop
mov
imul
inc
push
push
cli
push
pop
in
pop
jp
mov
and
in
xor
xchg
popf
lret
xchg
jnp
repz
lret
ret
push
rolb
and
addr16
and
push
or
mov
adc
pop
lret
js
jge
out
daa
inc
xchg
leave
loop
jb
pop
xchg
fwait
jmp
scas
pop
dec
pop
or
fsubrs
and
jge
fwait
xor
enter
cltd
ret
mov
inc
jmp
sub
jge
in
jae
enter
out
lcall
dec
push
or
push
mov
lcall
mov
movsb
cmc
jne
cltd
int
imul
pop
movsl
int
fistpll
dec
fadds
iret
aas
ret
lret
gs
dec
lahf
sbb
aad
cmp
xchg
sbb
outsl
jmp
push
cltd
dec
mov
dec
mov
dec
dec
test
jle
dec
popf
std
push
mov
dec
loop
push
pop
inc
push
xchg
aas
jge
mov
lret
xchg
stos
iret
jmp
out
jbe
xchg
jge
xchg
stos
lds
arpl
push
std
mov
push
or
lea
pop
pop
leave
and
jmp
fimuls
out
push
adc
mov
imul
clc
jo
and
jae
xchg
out
lea
mov
cmp
jp
movsl
ret
cld
xlat
sub
aam
pusha
shlb
cmp
enter
mov
jl
ficompl
xor
mov
aas
or
dec
data16
packuswb
sub
mov
fcoms
cmpsl
inc
add
mov
mov
adc
rolb
rorl
xchg
lahf
lret
in
ret
inc
stos
nop
cmp
fisubrs
push
inc
jecxz
bnd
movsb
dec
sahf
pushf
xchg
pushf
sbb
and
nop
aad
xor
fidivl
sbb
mov
adc
sbb
ficompl
xor
jbe
jp
or
mov
push
lock
add
sbb
mov
dec
loope
in
sbbb
iret
js
adc
push
cmp
xlat
in
andl
mov
and
push
inc
pop
jecxz
daa
jp
fldl
mov
cmp
jmp
mov
out
mov
int3
es
pop
adc
aaa
mov
out
mov
mov
cmp
mov
sbbb
pop
test
cmp
mov
rcr
jno
sar
pop
inc
leave
cld
inc
insl
mov
clc
daa
xchg
std
cmp
jno
sti
xor
cmc
ret
ret
ret
adc
negl
add
outsb
movsl
aam
popf
xchg
movsb
pop
stos
and
sub
mov
xor
arpl
mov
jae
xchg
adc
dec
push
or
inc
roll
and
das
cwtl
fcomp
inc
stos
outsb
cmp
xor
test
inc
mov
std
jmp
push
cltd
mov
push
cmp
and
scas
jge
push
je
pop
cmpsl
mov
adc
push
mov
dec
in
mov
inc
xor
add
arpl
mov
xchg
cwtl
les
push
int3
mov
inc
mov
rorb
cmpsl
lock
mov
add
bound
xchg
imul
test
xor
cmpsl
aad
fimuls
push
cltd
es
stc
add
gs
push
fildll
lret
repz
jns
sar
lahf
pop
jmp
repnz
mov
mov
test
sbb
sbb
mov
aad
lret
adc
cmpsl
pop
jge
arpl
jbe
rcrb
lahf
inc
aad
sbb
scas
movsl
xchg
add
mov
stos
test
cmpsl
pop
or
shrl
inc
xlat
mov
inc
inc
inc
mov
sub
outsl
mov
insl
pop
rcrb
sub
scas
jno
mov
xchg
mov
mov
inc
add
in
push
sahf
xchg
xchg
add
add
xor
jb
fld
pop
xchg
jmp
push
xchg
jmp
insb
inc
sbb
push
cmp
in
pop
enter
enter
bound
and
sbb
orl
lods
lahf
jmp
sbb
add
cmpsl
sarl
leave
or
rorb
cli
mov
in
shll
rcrl
cmpsb
into
cmc
aaa
adc
sbb
or
jbe
mov
fwait
icebp
movsl
cwtl
pop
movsl
mov
mov
mov
xor
lret
adc
sbb
mov
rcrb
pop
pop
cmc
mov
mov
add
jecxz
pop
inc
test
xor
or
inc
mov
shrl
inc
push
or
pop
mov
or
rolb
sbb
scas
insb
fiadds
js
fsubrs
gs
pop
enter
jmp
xorl
jne
movsb
cmp
xor
jnp
xlat
mov
dec
mov
cmpsb
pop
fs
xor
pop
movsb
jno
cmp
out
jb
fimull
add
popf
add
xor
inc
shlb
negb
push
xchg
jmp
sbb
add
inc
aam
xchg
stos
or
repz
popl
sarl
int
call
sbb
out
incl
sub
fnstsw
dec
push
pop
sub
cmpsl
movsb
lret
xor
pushf
xchg
shrb
mov
popf
xor
mov
sbb
jge
clc
mov
xchg
repz
pop
mov
push
inc
cmp
xchg
into
adc
imul
mov
cs
stos
jbe
cmp
push
or
lret
mov
lret
scas
es
repnz
cmp
out
clc
pop
je
mov
or
les
ja
or
pop
lret
cmp
ljmp
test
and
fs
jo
pop
movsb
js
pop
aam
inc
andl
and
jo
mov
sbb
fwait
sti
push
dec
xchg
mov
mov
pushf
frstor
mov
adc
or
iret
adc
mov
add
jecxz
inc
mov
or
xor
jecxz
outsb
lea
xchg
std
jns
dec
rcrb
stos
ja
stos
mov
fwait
push
scas
sbb
jge
icebp
lahf
jne
mov
popf
push
jns
push
inc
test
add
and
cli
lahf
pop
inc
lds
mov
push
xchg
int3
adc
test
jae
cmpsl
mov
ds
lods
jne
stc
and
mov
repnz
dec
loopne
xchg
ret
adc
add
sbb
push
mov
sbb
shlb
cltd
push
int3
ret
ljmp
xchg
inc
adc
and
sbb
pop
cmpsb
jns
push
hlt
xor
mov
mov
pop
arpl
mov
aad
mov
inc
mov
lret
mov
jecxz
push
mov
inc
call
inc
mov
cld
imull
mov
jno
lea
jecxz
icebp
pop
fmul
xchg
sub
into
ret
insl
adc
daa
add
fmull
cmp
loop
pop
lods
nop
dec
out
mov
pop
stos
xor
dec
push
fisubrs
sti
repz
pop
movsl
fdivr
popf
push
imul
jg
push
and
lds
divb
testl
ljmp
xchg
sbb
cltd
lret
inc
push
pusha
jnp
mov
push
mov
add
xchg
test
add
leave
inc
aad
mov
dec
add
inc
inc
xor
or
outsb
cmp
pop
aaa
fisubrs
or
mov
xor
xchg
mov
mov
icebp
aad
add
xlat
js
out
cwtl
pop
arpl
shlb
mov
clc
push
addr16
fwait
neg
sbb
pusha
xchg
push
roll
dec
xchg
adcl
es
aas
clc
lods
xor
lret
xchg
mov
xor
ret
ret
insl
adc
sbbl
fmulp
imul
mov
pop
mov
and
loope
push
int
inc
ljmp
jmp
sahf
sub
xchg
mov
jnp
cltd
lock
mov
push
inc
stos
lcall
mov
mov
cmc
xor
xor
mov
or
fcmovb
jmp
mov
push
popf
enter
je
inc
mov
add
arpl
push
mov
dec
dec
add
sarl
push
mov
xchg
inc
add
ret
sbb
scas
pop
cwtl
insb
pop
cmpsl
push
add
mov
and
adc
das
inc
mov
dec
mov
mov
mov
ja
aam
shrb
mov
stos
pop
addr16
int3
dec
imul
fstpl
and
repz
ret
test
stos
andl
cltd
pop
out
mov
in
ss
or
popa
jbe
cli
hlt
cli
aad
lret
imul
xor
test
adc
xchg
pop
movsl
fnstcw
int3
imul
in
mov
sub
pop
mov
roll
cmpsl
or
mov
sub
pusha
push
dec
lods
cld
popf
ss
push
sbb
inc
push
dec
scas
hlt
mov
adc
mov
in
lret
dec
rol
pop
jnp
add
add
mov
enter
jb
fadd
pop
xchg
inc
add
mov
jo
inc
aam
xlat
data16
inc
push
addl
enter
js
adc
mov
enter
jnp
or
aad
imul
xchg
aas
push
dec
mov
dec
lcall
jp
fldenv
mov
loopne
hlt
mov
inc
outsl
mov
mov
arpl
adc
mov
pop
dec
test
repz
aad
pop
cmpsl
movsl
cwtl
pavgb
xor
mov
jne
mov
shll
jbe
push
fmulp
adc
sbb
or
out
andl
jo
js
out
popf
xor
shrb
repnz
test
inc
sbb
mov
pop
xor
enter
scas
std
fwait
dec
fs
mov
clc
push
ds
mov
inc
and
sbbb
mov
inc
cmp
imul
les
fildl
cmpsl
dec
add
movsb
jno
sbb
inc
lds
xchg
mov
inc
push
mov
out
sbb
lods
clc
push
sub
mov
fdivs
jp,pt
dec
addr16
adc
jmp
push
mov
ret
sarl
sarl
daa
stc
addb
jne
push
aad
pop
out
lods
jp
mov
je
in
iret
lds
mov
aaa
pop
dec
add
stos
rcrl
pop
in
mov
inc
mov
inc
mov
dec
xchg
repz
mov
out
adc
sub
movb
lds
dec
test
filds
out
fwait
add
fisubrs
jge
inc
lds
ret
repnz
cmp
call
cli
cltd
mov
sbb
sbb
ss
mov
push
mov
add
in
ret
add
mov
adc
lret
sub
or
push
sbb
rorl
xchg
jnp
dec
inc
inc
mov
insl
mov
mov
gs
scas
pop
call
inc
mov
iret
xchg
mov
test
ret
inc
test
sbb
jp
mov
sahf
test
xor
jb
mov
hlt
pop
leave
adc
sbb
pop
dec
test
adc
jp
rcrl
pop
call
adc
jb
je
mov
and
jecxz
lods
ret
stos
push
pop
stos
pop
or
add
xor
enter
lods
in
sbb
dec
pusha
fisubrl
insl
xchg
inc
movl
xorl
add
or
push
mov
sbb
mov
cmp
pop
movsl
icebp
xor
mov
xchg
jmp
test
inc
lcall
and
rclb
add
mov
add
loop
frstor
jg
stos
gs
jnp
mov
mov
rorl
imul
xchg
sar
pop
lods
fstps
pop
mov
mov
in
jg
enter
pusha
mov
add
fsubl
mov
cwtl
jmp
fdivrl
push
mov
jne
movsl
jmp
int
sbbl
pop
dec
add
xor
add
add
addr16
lret
repz
or
div
leave
push
adc
mov
xchg
test
or
push
cmp
call
in
lcall
testl
pop
leave
inc
push
pop
sub
sub
xor
or
sub
cs
movsl
clc
popf
or
sub
ret
sbb
es
cmpsl
lock
xchg
jae
out
pop
mov
in
mov
enter
jg
mov
pop
adc
inc
test
cwtl
int
mov
fwait
divl
int
xchg
dec
mov
or
or
jge
sar
lahf
in
stc
pop
mov
mov
pop
rcrb
jg
or
aad
fcmove
nop
ds
outsb
movsl
movsl
dec
in
push
and
pop
pop
nop
push
mov
cwtl
sub
mov
frstor
imul
icebp
or
repz
inc
inc
sbbl
or
and
outsl
sarb
loopne
dec
lods
cmc
jae
xor
mov
or
andb
push
stos
add
mov
in
inc
add
or
notl
jmp
mov
add
ret
subb
lods
pop
lret
inc
aam
stos
clc
xor
push
sbb
or
sbb
es
cmpsl
stc
lahf
dec
in
inc
xchg
imul
add
sbb
popa
mov
and
sbb
fbld
int
aas
jmp
dec
mov
sbb
xchg
inc
add
push
and
or
pop
xchg
xchg
dec
push
or
mov
outsl
adc
movl
fdivrp
sbb
sbb
jne
bound
cwtl
push
loopne
jle
dec
inc
test
ja
lret
ljmp
xchg
inc
xchg
pop
movsb
fnstcw
es
bound
jno
imul
mov
sbb
ja
mov
or
xchg
jecxz
inc
add
lret
xchg
fsubs
ja
mov
inc
mov
hlt
repz
adc
mov
in
shl
mov
test
addb
int
fmuls
call
cwtl
inc
scas
adc
into
and
add
int
push
fsubrl
int
icebp
jb
sbb
push
negb
mov
sub
cltd
lock
gs
xchg
jmp
sbb
cmp
pushl
pop
push
inc
push
loopne
cli
mov
test
insb
mov
mov
movl
lret
iret
imul
inc
inc
xor
pushf
insb
cmp
pop
dec
inc
mov
lret
xchg
mov
mov
andl
cwtl
jl
inc
test
lcall
mov
adc
jbe
cltd
inc
sbb
test
rol
sub
mov
xchg
sbb
js
fsubrs
rclb
mov
inc
orl
andl
rcll
add
and
adc
dec
or
movsb
jmp
push
lret
sub
sub
aad
sub
inc
mov
ret
xchg
sti
popa
mov
mov
lahf
int3
and
cmp
imul
mov
ret
pop
fucomip
push
iret
inc
mov
fcomps
sbb
out
push
push
sub
cmp
mov
xor
in
iret
imul
inc
inc
xor
rcr
fisttpl
or
xlat
addr16
movb
sbb
jge
pusha
fabs
mov
lret
mov
les
jge
mov
or
fwait
lds
movsl
mov
jg
out
xor
imul
pop
or
jne
sbb
mov
bnd
inc
inc
add
xchg
sbb
test
inc
les
adc
mov
push
mov
xchg
and
xchg
jmp
add
adc
xchg
leave
ja
into
push
call
jle
mov
fstp
insl
rorl
sub
dec
mov
lret
outsb
jbe
jmp
mov
test
hlt
popf
or
call
pop
inc
fnop
inc
insl
mov
mov
fistps
mov
out
dec
lahf
push
jns
lds
sti
mov
xchg
orb
mov
mov
mov
addr16
or
rcr
dec
rorb
push
mov
jae
pop
movsl
fdivr
popf
in
jns
push
inc
test
dec
cmp
jae,pn
or
push
mov
cmp
mov
arpl
fadds
dec
lods
jl
cs
pusha
arpl
call
je
jns
cmp
add
dec
inc
sbbl
pop
movsl
movsb
sbb
lods
ffreep
dec
push
pusha
fwait
pop
movsl
icebp
jno
mov
xchg
inc
add
andb
ret
adc
add
inc
pop
add
in
add
xlat
js
or
mov
shlb
cli
test
int
imul
cmp
stos
ret
rcr
jno
sar
pop
inc
leave
mov
fwait
dec
gs
daa
mov
stc
les
mov
xor
cmc
ret
ret
ret
adc
xchg
mov
pop
jmp
movsl
aam
fiadds
cmpsl
push
pop
stos
and
dec
js
jns
pop
movsl
jmp
arpl
cmovbe
jae
xchg
xlat
fisttps
mov
cmpsl
pop
or
and
das
cwtl
fcomps
stos
outsb
pop
mov
sub
rorb
popf
inc
pop
std
jmp
push
cltd
mov
push
cmp
and
scas
jge
outsb
je
pop
mov
mov
in
cmp
push
mov
dec
in
mov
xchg
dec
inc
add
arpl
mov
xchg
pop
les
push
int3
mov
inc
mov
add
pop
cmpsl
lock
cmp
add
bound
xchg
jmp
jecxz
sbb
test
xor
lods
aad
fimuls
push
sbb
cmp
add
gs
push
fildll
roll
lret
jns
sar
lahf
pop
jmp
repnz
lea
cmp
sbb
mov
adc
jmp
pop
lret
cmp
jbe
rcrb
fiadds
mov
xchg
add
cmp
js
sbb
add
add
jmp
jmp
inc
xlat
dec
inc
push
scas
pop
or
inc
mov
sub
outsl
mov
insl
fxtract
pop
push
inc
mov
xchg
mov
mov
inc
add
in
sub
push
mov
add
pop
movsl
fsubs
jb
fadd
pop
xchg
jmp
push
xchg
mov
insb
inc
sbb
push
cmp
in
pop
enter
enter
bound
and
sbb
or
rcrl
mov
jp
leave
or
imul
cli
mov
in
loope
xlat
dec
rcrl
cmpsb
les
scas
fdivrp
sbb
or
int
cwtl
pop
mov
cmp
xor
lret
adc
sbb
mov
rcrb
lahf
pop
cmc
mov
mov
add
jecxz
inc
add
or
inc
mov
shr
ret
inc
push
lret
dec
push
mov
or
rolb
sbb
scas
insb
pop
aas
jle
and
test
mov
jl
loope
xorl
jne
movsb
cmp
push
mov
adc
lahf
cmpsb
pop
fs
adc
pop
movsb
jno
fldenv
mov
jb
xchg
add
inc
add
popf
pushf
out
enter
loop
or
and
mov
mov
jmp
sbb
icebp
add
into
xchg
sub
repz
int
cmpsb
ret
sarl
sarl
int
call
sbb
outsl
lock
out
incl
sub
icebp
jge
dec
push
pop
sub
cmpsl
movsb
leave
xchg
stos
dec
stos
fdivr
pushf
xchg
clc
outsb
jns
lock
add
test
xchg
mov
sbb
jge
clc
mov
xchg
repz
pop
mov
out
or
stos
popa
cmp
xchg
into
adc
imul
imul
stos
jbe
test
or
lret
mov
dec
xchg
daa
mov
repnz
cmp
out
clc
pop
repnz
mov
or
les
adc
xchg
cmp
repnz
and
fs
xor
pop
movsb
js
and
and
mov
add
pop
cmpsb
jo
mov
sbb
lret
cmc
push
dec
xchg
mov
mov
pushf
fbld
mov
loopne
push
std
ja
xor
or
cmpsb
ret
inc
loope
iret
adc
outsb
mov
add
jecxz
inc
test
or
mov
mov
sbb
xor
xchg
fnstsw
dec
rcrb
stos
jp
stos
mov
fwait
push
cmpsb
sbb
jge
icebp
lahf
inc
in
pop
mov
jns
push
inc
test
add
and
cli
mov
cmp
int3
adc
test
jae
cmpsl
push
rorb
jne
jns
sub
repnz
dec
add
xchg
add
add
into
hlt
sbb
sbb
push
mov
sbb
shlb
mov
int3
ret
ljmp
xchg
inc
adc
and
jo
pop
cmpsb
jns
arpl
xor
xchg
hlt
pop
arpl
mov
aad
mov
mov
frstor
call
inc
mov
cld
negl
adc
or
jecxz
icebp
sbb
enter
iret
ret
insl
adc
dec
mov
jge
dec
sub
mov
in
scas
nop
dec
out
xor
pop
stos
xor
dec
push
fisubrs
idivl
sahf
das
xchg
stc
cli
in
test
int3
or
inc
ja
lock
sbb
inc
inc
mov
ja
je
lcall
cli
gs
daa
cmp
mov
ret
dec
scas
pop
ret
dec
or
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
roll
dec
mov
bound
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
lahf
mov
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
