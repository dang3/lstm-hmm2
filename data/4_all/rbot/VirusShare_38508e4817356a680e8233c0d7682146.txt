push
call
ret
ret
mov
pop
ret
arpl
bound
fnsave
outsl
test
adc
xor
mov
sti
fistpll
aam
mov
stos
aad
inc
pop
inc
leave
popf
or
popf
mov
roll
pop
lea
lods
flds
jnp
push
popf
mov
bound
out
movsb
xchg
mull
or
push
cmpsb
pop
arpl
sti
cmp
in
add
or
cmc
imul
adc
jne
lock
or
jne
push
add
mov
adc
dec
lds
fxch
mov
dec
push
pop
xchg
stos
fcmove
popf
cmp
leave
dec
mov
stos
test
cmpsb
imul
mov
addr16
xor
repnz
xor
xchg
cltd
fistps
mov
std
mov
mov
mov
out
in
outsb
popf
aad
xchg
pop
sbbb
popa
push
fildl
adc
push
inc
inc
dec
in
not
dec
loop
inc
sub
mov
int3
inc
mov
outsl
fimuls
mov
cmp
sub
stos
xchg
cmp
sahf
fs
cmp
rolb
mov
fs
and
add
ror
leave
scas
jb
xor
popf
add
lahf
pop
sbb
lret
or
push
pop
mov
js
jecxz
in
dec
daa
xor
iret
push
add
push
lret
pop
daa
push
dec
or
or
shl
jle
push
sbb
cwtl
in
xchg
fwait
or
or
sarl
xor
imul
aas
cmpsl
lahf
xchg
repz
pop
dec
mov
mov
int
lock
dec
mov
clc
out
xchg
ds
sub
sbb
push
jecxz
mov
mov
aam
mov
fisubrl
sbb
mov
xlat
loop
les
jno
cmp
arpl
push
xchg
and
std
xchg
aad
mov
pop
pop
into
jmp
lahf
leave
jnp
out
mov
sbb
das
repz
cld
rcrl
dec
repz
cld
neg
adc
mov
andl
jnp,pt
andb
jnp
bnd
fs
mov
dec
sbb
inc
jae
aam
jp
and
cmp
in
leave
jo
adc
jae
push
xchg
sbb
mov
jmp
mov
add
les
sbb
iret
in
lods
jge
xor
pop
ret
mov
notl
pop
inc
loope
push
adc
stos
xor
mov
mov
add
cltd
push
jmp
movsl
and
sub
mov
or
repnz
add
mov
jno
test
push
inc
loop
ret
fdiv
scas
push
pop
frstor
jne
xchg
lods
outsb
mov
out
ret
es
lret
mov
in
fcomps
test
pusha
pop
addr16
pop
out
mov
inc
xlat
xchg
jl
icebp
jb
imul
outsl
push
shll
outsb
bound
sub
push
lret
rcll
nopl
mov
cmp
out
pop
dec
lock
icebp
add
in
in
lea
daa
sub
mov
xorl
fs
in
aam
jo
mov
lahf
inc
jno
stos
repz
into
or
fcomps
pop
lods
cmpsb
xchg
outsl
push
outsl
stc
inc
ret
test
lock
into
add
dec
inc
dec
sbb
scas
sub
aam
pop
fs
xchg
outsb
roll
shll
dec
sbb
inc
in
sahf
sbb
or
jbe
movsb
sbb
aas
mov
into
adc
pop
cmp
adcb
sbb
mov
cmp
stos
stc
int3
push
push
mov
gs
mov
sub
dec
push
repnz
adc
sbb
inc
sti
push
mov
pop
sub
int
or
push
stos
insl
xlat
mov
sbb
shlb
outsb
mov
mov
pushf
add
push
fwait
iret
adc
jmp
stc
pushf
cltd
daa
and
clc
adc
cmp
dec
jp
sbb
push
cs
and
add
adc
adc
mov
lds
sbb
mov
xor
add
and
lcall
pop
jns
lods
repnz
cmpsl
inc
jmp
mov
inc
and
test
push
push
adc
jp
inc
cmpl
and
pushf
lods
xor
stos
jae
or
add
mov
and
mov
mov
inc
cmp
and
sbb
test
xchg
jno
ret
addr16
les
push
outsb
cs
and
pop
and
enter
mov
iret
div
push
je
fs
jo
int3
cmp
lret
scas
int3
inc
mov
cltd
push
jbe
ljmp
mov
sub
ret
shll
aad
mov
xor
addb
test
lret
stc
inc
push
imul
adc
je
aam
mov
xor
or
adc
dec
sarb
call
enter
jecxz
loop
push
inc
mov
fadd
test
lods
mov
push
adc
mov
push
sub
xchg
xor
sub
inc
sahf
and
ljmp
arpl
call
mov
inc
in
idiv
scas
aaa
mov
lret
mov
cltd
mov
arpl
mov
nop
pop
sub
imul
jne
jne
cs
nop
das
or
mov
push
push
and
pop
in
jae
jecxz
dec
or
lret
fucomi
repnz
dec
das
jae
lods
xchg
cwtl
aam
push
vunpckhps
cmp
xor
push
xor
or
pop
mov
roll
call
rolb
inc
add
andb
and
testb
cmpsb
andl
lcall
push
sub
test
sub
pop
push
or
cmp
lahf
inc
or
and
add
loop
push
sbb
xor
inc
jb
fs
test
jbe
jnp
xor
push
pushf
dec
add
sub
jle
inc
dec
mov
sahf
outsb
jnp
pop
xchg
movd
mov
or
aaa
popf
push
mov
xor
push
lods
adc
inc
cmp
and
je
popa
dec
in
scas
inc
movsb
or
ret
cmpl
sbb
xchg
sti
rorb
jo
mov
ret
push
sbb
dec
mov
and
jl
push
mov
cmpsb
rcr
out
scas
dec
mov
and
and
test
clc
cmp
ss
jg
cltd
pop
mov
lock
sahf
xor
popf
push
js
sbb
insl
mov
stc
arpl
xchg
aaa
mov
int
mov
fsubl
repz
push
mov
jg
and
push
pop
sub
pushf
js
xor
xor
fwait
dec
pop
lret
fsubs
cwtl
repnz
push
scas
stos
and
jo
push
ret
sub
arpl
cltd
imul
orl
mov
mov
cmp
rcl
inc
fwait
mov
movsb
and
mov
jle
pop
pop
inc
add
and
movsb
in
sbbb
lea
mov
mov
ret
cmp
mov
xchg
daa
dec
cmp
pusha
and
jae
je
inc
cmp
outsl
and
lret
lods
inc
fisubs
push
andl
jl
mov
xchg
xlat
xchg
lods
mov
mov
inc
rcrl
dec
xor
sbb
out
sub
add
js
xchg
mov
out
jle
sbb
xchg
out
out
jle
push
ljmp
jmp
imul
dec
fwait
lret
push
xchg
dec
mov
pop
mov
addr16
movsb
adcl
pushf
sub
jmp
rcll
and
in
les
outsl
in
sti
out
mov
orl
pop
enter
pop
jle
cmpsl
rolb
stc
test
pop
dec
push
test
aaa
stos
test
rol
adc
bswap
fscale
fcomps
loop
and
clc
cmpsl
cmp
push
mov
jns
mov
int3
leave
xchg
in
icebp
xor
out
jne
sbb
fidivrs
inc
ds
and
xchg
pushw
adc
mov
sub
mov
aas
lock
lret
push
arpl
add
mov
mov
mov
dec
add
insl
fwait
mov
es
or
bound
in
pop
or
sbb
xor
add
jno
imul
jp
mov
or
cmp
push
ret
fs
aad
and
mov
fisubrs
outsb
cmpsw
sub
pop
cmc
dec
lock
insb
xchg
xchg
lret
inc
cwtl
sbb
fisttpl
jle
or
sar
repz
jmp
dec
cmovno
rcl
jmp
push
mov
mov
cmp
push
enter
imull
bnd
incb
mov
jno
fs
mov
cs
sub
imul
orb
mov
jne
addr16
sbb
lret
fbld
hlt
add
aaa
sbb
and
ds
mov
add
or
sarb
jmp
insb
ret
jnp
out
call
into
popf
and
add
and
jno
cmpl
out
pop
fwait
or
imul
mov
and
outsb
stc
sbb
aad
into
inc
cmpsl
out
aam
pop
sbb
in
gs
inc
mov
movb
push
fnsave
mov
call
aam
test
dec
iret
aad
fcomps
dec
aaa
rclb
or
cmc
xchg
push
stc
je
mov
cmp
enter
rcr
in
push
xchg
cmc
clc
xor
sti
scas
shll
pushf
xchg
mov
repnz
mov
mov
sbb
push
arpl
andl
dec
push
inc
imull
mov
test
ja
lret
pop
adc
fcomip
fidivs
dec
push
pop
inc
cmpb
addl
test
cmp
jge
mov
in
rclb
lods
mov
sub
stos
add
fcmovne
pop
dec
jle
pushf
push
insb
mov
jecxz
or
faddl
cltd
and
dec
dec
or
inc
mov
inc
pop
lods
sub
xor
jmp
cmpsl
cmp
testb
cli
popf
std
scas
xchg
enter
leave
movl
ret
cld
test
pop
dec
adc
sbb
xchg
fildll
lcall
out
cmpsl
iret
lods
add
popf
xor
push
fwait
cmc
sub
shrl
leave
mov
mov
or
sub
add
in
add
addb
inc
sbbb
fcompl
mov
and
sbb
mov
mov
fldcw
sbb
xchg
mov
bound
lock
sbb
or
or
xchg
in
cmp
pop
mov
iret
inc
outsb
addb
int
clc
xor
inc
leave
push
xchg
daa
les
sbb
cmpsl
fs
in
insb
fldt
lock
insl
xchg
es
xchg
sti
lret
in
dec
jle
push
xor
push
push
fwait
mov
xchg
insb
and
xor
fldl2e
dec
mov
mov
add
mov
ret
add
jl
ljmp
mov
mov
xor
sub
inc
fisttpll
ljmp
push
add
and
lea
pop
fdivl
push
pop
cmp
xor
cmp
test
xor
pop
pop
imul
movsb
mov
sub
mov
repnz
ret
leave
or
push
mov
loop
fcomps
pop
mov
dec
adc
mov
das
adc
mov
out
fisubs
mov
jns
jno
into
outsl
and
int3
adc
pop
mov
sub
pop
das
ret
mov
dec
gs
stos
lds
mov
and
push
mov
xchg
testl
fisubrl
outsb
add
cmp
pop
ljmp
jg
int
loop
jmp
int3
push
add
inc
aas
fcoml
std
mov
inc
pop
in
movsl
mov
pop
ss
lret
xlat
shlb
les
ret
lret
xchg
movsb
stos
mov
xlat
ret
mov
in
jns
or
xchg
cmpsb
jne
test
out
fs
cmp
jae
push
inc
inc
xchg
lcall
adc
iret
addr16
fildl
outsl
inc
push
mov
out
ret
and
pop
in
in
cs
sbb
jnp,pn
xchg
pushf
out
xchg
mov
cmpsb
mov
sbb
pop
cmpsl
mov
cmp
push
sbbb
rorl
inc
fucomp
in
xor
inc
mov
fcoms
push
imul
sub
adc
inc
int3
cmp
lahf
mov
or
dec
mov
les
int
int3
sbbl
xorb
sti
hlt
lods
pop
jne
icebp
pop
and
stos
cli
fmul
push
mov
pop
rcr
js
mov
ret
outsb
loop
movsl
fcmovu
ja
pop
hlt
push
mov
icebp
ret
inc
cmp
pop
dec
hlt
iret
enter
out
jnp
xlat
mov
out
jge
inc
xchg
or
push
and
sbb
test
stos
sti
lret
sahf
test
xchg
js
add
adc
ds
sbb
adc
scas
dec
pop
js
xchg
in
jo
sahf
cs
sbb
mov
xchg
les
or
dec
push
add
push
hlt
clc
jge
dec
ss
add
dec
fdivrl
mov
sub
sub
push
cld
lcall
test
fisttpll
inc
add
cmp
add
or
xor
jmp
cmp
movsl
adc
push
movsb
jb
jb
lea
lret
xchg
dec
inc
adc
inc
sub
in
mov
test
test
js
gs
inc
jmp
push
lods
adc
lret
sub
add
cld
pop
mov
mov
insl
jno
pusha
std
and
repnz
add
jp
vmulss
outsb
addr16
mov
sbb
aad
out
inc
pop
cmpsl
jae
push
std
adc
cmp
push
shl
and
in
addr16
fwait
adc
sub
jne
repz
add
scas
push
cmp
cwtl
sbb
adc
push
cli
fldl
jge
mov
cld
test
cmp
lahf
cmpsb
movsl
mov
mov
jne
gs
mov
lcall
sbbl
or
xor
sub
das
stos
push
loope
popa
lds
jmp
jns
icebp
popl
roll
or
addl
or
outsl
pop
ds
pop
loopne
cmpsl
insb
dec
movsl
dec
out
jne
je
xor
sahf
loope
and
imul
adc
test
mov
xor
pop
ret
pop
arpl
ja
leave
add
xchg
mov
mov
jl
xchg
jl
cmp
adc
enter
pop
inc
mov
dec
nop
call
das
insb
fidivs
and
in
lcall
cli
mov
aad
jae
xor
xchg
lods
sbb
rcll
popa
mov
in
stos
sti
fdivl
and
mov
cmpsl
std
sub
cmp
sub
sti
test
cmp
out
and
jg
push
int3
sbb
lret
icebp
in
outsl
daa
mov
jl
jp
fistpll
jg
xor
mov
jmp
push
hlt
pusha
mov
adc
fcoms
add
dec
push
shr
je
repnz
pop
sbb
jne
push
push
ds
mov
xchg
sarl
psubusw
outsb
out
mov
xor
pop
inc
xchg
mov
xchg
sub
inc
pop
pop
nop
movsb
stos
daa
insl
out
lcall
es
push
out
lahf
and
int
xor
or
stc
sub
add
rcll
cli
or
push
in
scas
mov
in
pushl
mov
imul
sbb
xor
fwait
push
in
loop
jmp
pop
das
sbb
pop
les
xor
sub
push
iret
xor
jnp
pop
xchg
insl
test
push
int3
xor
pop
aad
repz
mov
int3
es
test
fidivrs
outsb
pop
mov
fs
pop
sarl
pop
popa
addb
lods
loopne
cld
ret
test
or
imul
sbb
add
xchg
pop
mov
adc
lods
mov
in
cld
loopne
data16
adc
cmp
nop
insb
rcll
pop
pop
inc
inc
fistpl
push
ljmp
pop
in
mov
inc
xor
cwtl
add
imul
xor
mov
push
int
mov
notb
adc
mov
leave
mov
dec
movsl
call
jns
insb
and
mov
cmpsl
sbb
jo
icebp
dec
es
mov
lods
cmp
aas
jno
lret
mov
pop
push
decl
jnp
in
out
lahf
dec
add
sbb
lahf
rcrl
sub
rcrl
cmpsb
ljmp
adc
jecxz
mov
inc
out
rorb
lods
pop
loope
cmp
jecxz
mov
pop
xchg
mov
dec
inc
sub
scas
adc
dec
scas
push
iret
ret
stos
clc
adc
lds
sti
adc
test
lods
rol
addl
xor
or
test
aam
mov
add
lret
sti
sbb
lock
into
xchg
nop
add
sbb
ficoml
cmp
clc
dec
sub
adc
adc
aad
fildl
mov
aaa
mov
sbb
jae
lret
sahf
or
xchg
adc
cmp
ljmp
dec
lea
lods
loopne
jmp
sbbb
hlt
cld
roll
add
cmp
daa
rep
mov
sbb
cli
sub
out
push
sub
lock
popf
je
cmp
and
pop
nop
movsl
jg
dec
mov
sub
push
mov
xchg
push
or
inc
inc
leave
jmp
push
adc
jmp
push
mov
inc
push
out
leave
cmp
int3
xor
test
leave
inc
cmp
aaa
shr
or
push
cs
movsb
pop
mov
sub
cwtl
lods
popf
icebp
push
jns
in
leave
loop
or
repz
aaa
adc
icebp
jb
leave
xchg
rcll
mov
shll
mov
adc
ret
add
push
adc
aad
xlat
sub
mov
push
or
out
cmp
inc
or
and
test
cmp
and
and
inc
imul
and
std
das
fisttpl
sub
cmp
pop
xchg
repz
insl
jae
fcomps
cmpsb
dec
jmp
cmp
arpl
ds
cmpb
mov
mov
fs
dec
push
dec
sub
xor
outsb
sbb
popf
daa
mov
xor
dec
imul
and
ret
mov
jb
dec
mov
or
dec
cmpsl
fwait
add
aam
push
pop
sub
mov
or
pop
rcll
sbb
pop
std
jl
std
jmp
pop
push
xlat
lret
hlt
xor
and
inc
jg
nop
iret
andb
inc
out
add
int3
mov
addl
lret
xor
movsl
sub
out
lds
sub
fcmovnbe
mov
mov
and
mov
cmp
cmp
ja
xchg
mov
dec
fsubrl
add
jbe
cmp
out
push
adc
dec
mov
jle
aam
inc
and
test
iret
lcall
addr16
mov
fwait
xor
cmp
xchg
faddl
jecxz
aad
and
fwait
and
mov
adc
cwtl
mov
dec
jecxz
ss
out
and
aam
cmpsl
xor
pop
sahf
lahf
pop
pop
push
rolb
xchg
adc
mov
mov
mov
test
inc
and
pop
lods
xchg
or
fsubrp
sub
pop
ret
mov
xchg
dec
dec
xchg
jl
fimuls
mov
loopne
dec
cmp
std
xchg
ds
ret
pop
aad
xchg
pop
jmp
stc
cld
das
movsl
push
ljmp
test
test
ljmp
daa
lds
push
fs
and
sub
enter
sub
imul
xor
les
jbe
test
mov
iret
jb
mov
mov
daa
jge
scas
cmpsb
jno
mov
int3
xchg
insl
into
xor
add
xchg
sbb
mov
dec
xor
mov
aam
fwait
movsl
lret
push
add
stos
ss
mov
cmp
add
mov
int3
adc
rcl
cmp
scas
clc
xchg
dec
imul
push
js
xchg
sbb
les
mov
lretw
inc
fsts
cmp
xchg
pushf
push
mov
xchg
mov
out
add
lret
pusha
jl
xchg
arpl
mov
jp
mov
lahf
stos
push
xchg
xchg
mov
in
lock
mov
roll
mov
xchg
xorl
sbbb
int3
push
jl
sti
sub
popa
sbb
outsl
sub
and
xchg
movsb
jecxz
fndisi(8087
cmp
ficoms
roll
push
or
push
mov
imul
leave
lret
xlat
insb
jp
sub
mov
out
adc
pop
pop
dec
adcb
pop
xchg
insl
push
iret
pop
lcall
fmuls
mov
ret
es
dec
or
lret
dec
sub
cli
and
dec
out
xchg
dec
xor
add
sbb
es
adc
aas
out
insb
je
enter
xor
add
cmp
in
test
addl
test
push
js
out
push
sub
cmc
imul
push
mov
test
outsb
pop
cmc
popa
mov
pop
adc
cmp
push
popf
sub
xchg
sbb
fnsave
and
into
add
add
mov
test
addb
sub
pop
bound
sbb
mov
xchg
add
inc
lock
push
adc
dec
mov
fwait
xchg
andl
mov
fld
cmpsl
insl
clc
sbb
and
and
or
int3
ds
and
or
testb
push
test
sub
xchg
aaa
lods
and
testl
out
nop
push
add
push
mov
test
incb
outsl
dec
adc
ds
pop
xchg
iret
xchg
movsb
push
cld
mov
inc
xchg
sahf
jb
adc
fistl
and
xor
sub
loopne
bswap
std
scas
iret
jmp
repz
mov
movsl
loop
dec
cltd
xor
xor
mov
dec
cld
mov
std
out
or
leave
inc
mov
inc
imul
pop
and
sbb
aam
test
mov
sahf
rolb
jmp
in
add
jp
int
popa
lret
jb
and
inc
shlb
lcall
add
ja
faddl
and
xlat
call
cs
pop
dec
call
mov
xchg
dec
fmuls
cmpsl
lock
pop
mov
cwtl
int
cmpb
xchg
jmp
test
scas
push
add
mov
popf
popf
loop
lods
in
xor
scas
out
sub
nop
aas
mov
cmp
ljmp
xor
adcl
lcall
inc
inc
movl
rorb
mov
push
fadd
sahf
mov
fsubs
dec
mov
sub
adc
cmpl
jg
js,pn
into
jg
inc
int
fs
loope
bound
jbe
js
jl
cs
ffree
jmp
aaa
push
call
popa
cmp
xor
cli
std
pop
out
insl
aam
dec
fsubrs
and
out
adc
cmpsb
inc
cld
push
mov
pop
test
mov
and
dec
insb
test
lret
mov
push
mov
ret
mov
imul
pop
mull
lock
popa
push
xor
push
ss
enter
adcl
ja
mov
and
popf
enter
clc
mov
inc
fadds
jo
pop
push
and
add
fldenv
inc
mov
out
imul
add
test
add
mov
jae
cli
ja
dec
sahf
fidivrs
or
and
pop
scas
pusha
jl
incl
xchg
nop
xor
iret
inc
mov
stos
fistpl
mov
or
sub
repz
push
and
movsb
sbb
sbb
popa
or
ror
mov
or
insb
jns
pop
mov
lds
mov
dec
test
popa
add
popf
sarb
push
test
mov
inc
sub
mov
lahf
in
mov
adcl
cmc
dec
pop
cmp
ljmp
dec
mov
popa
les
jp
cli
dec
mov
cltd
and
repz
ret
divb
out
xor
clc
repz
pop
out
inc
mov
xchg
aaa
push
push
push
xor
add
or
adc
lea
mov
loope
or
jmp
add
pusha
mov
daa
mov
push
das
jnp
push
mov
out
push
ljmp
sti
lds
xlat
js
lds
jmp
mov
test
jb
dec
cmp
ljmp
sbb
ja
adc
dec
loop
and
xchg
scas
adcl
sub
stos
aas
mov
fdivl
sbb
xchg
push
incb
test
inc
mov
and
mov
mov
cmc
jne
adc
hlt
ds
stc
popf
cs
push
ret
or
xor
movsb
stos
mov
mov
pop
add
scas
rclb
or
push
mov
add
xchg
xchg
add
jecxz
fisubrs
add
lahf
aad
jb
mov
lods
adc
out
mov
push
loope
mov
sbb
push
and
wbinvd
cltd
or
cld
add
popa
mov
stc
jg
mov
mov
fstps
scas
jnp
mov
mov
pop
inc
add
sub
ret
add
inc
xchg
stc
xchg
and
iret
jne
push
pop
std
aas
dec
cmpsb
jnp
insl
adc
insb
xchg
jl
mov
jo
lds
push
mov
pop
xor
testl
mov
xchg
pop
adc
xlat
or
test
or
out
push
dec
xchg
out
add
xor
out
and
jg
mov
test
mov
negb
lds
mov
dec
fmulp
and
ljmp
mov
jno
lcall
nop
or
scas
int
push
outsl
repnz
mov
push
lods
lcall
int
sbb
and
adc
cmp
adc
push
mov
add
insb
pmulhw
aas
mov
or
inc
jo
mov
adc
inc
sti
push
or
and
sti
sub
push
fiadds
fsubs
js
xchg
mov
sub
xchg
frstor
jle
mov
jns
push
mov
or
add
es
jae
in
mov
aad
mov
jge
or
inc
and
mov
pushf
push
rcll
aam
cmp
xchg
inc
dec
mov
and
cmpsb
out
add
in
test
xor
add
stos
daa
outsl
insl
jmp
mov
clc
jae
cmpsb
cmp
fisubs
mov
mov
sbbb
sbb
jbe
xor
or
call
push
ucomiss
adc
andb
sbb
pop
daa
sub
rorl
les
add
imul
adc
sub
dec
dec
sbbb
outsl
mov
or
sbbb
push
cmp
pop
lods
sbb
adc
sbb
iret
es
mov
or
add
stc
inc
nop
jne
jno
insl
inc
jb
xchg
and
push
lret
push
adc
inc
daa
mov
sbb
fmull
inc
xchg
lods
pop
inc
lea
or
mov
push
adcb
repz
push
insb
ret
hlt
addr16
fs
jge
pop
jns
cmp
push
pop
aad
jo
pusha
push
pusha
cmc
les
push
lock
and
mov
jne
push
adcb
addr16
jae
and
mov
popa
rorb
lock
and
mov
lcall
jne
sub
jp
xchg
ret
call
push
sub
pop
push
mov
lret
orb
ficompl
popf
inc
psrld
outsl
ffree
pop
lret
xchg
mov
fnsave
push
jmp
sub
pop
leave
jae,pn
sub
into
mov
out
or
cmp
cmp
ljmp
or
xor
out
lea
push
sbb
xlat
dec
movsb
loope
xor
xchg
aaa
add
mov
push
xor
gs
popa
insl
mov
into
adc
fsubp
ss
xchg
adc
sbb
ficoml
inc
popa
dec
dec
aad
or
clc
imul
lret
aad
clc
cmp
shlb
push
xor
adc
in
bound
sbb
pop
pop
stos
scas
push
and
dec
inc
sbb
ret
cmpsb
push
lods
cmp
movsb
inc
cmpsl
loope
ret
out
xor
add
jae
dec
and
jno
mov
gs
adc
cmp
mov
fxam
adcl
cs
jp
xor
popa
inc
sub
push
or
add
or
icebp
adc
in
imul
xorl
popa
in
test
jl
jmp
fidivl
adc
lret
cs
popf
jne
inc
jnp
sbb
pop
pop
xchg
ficoms
cmc
inc
pop
sar
xchg
or
icebp
jecxz
mov
fcoml
adc
fiadds
ficoms
xor
dec
jmp
adc
aam
fisttpl
call
mov
lods
adc
adc
xor
pop
cmp
adc
pop
bound
int
xchg
sbb
cmc
je
pop
and
lret
sub
pushf
mov
mul
testl
push
out
cmp
idiv
andl
hlt
lcall
xor
pop
shlb
test
cmp
lahf
push
ret
fsts
jae
and
pop
cmp
data16
mov
or
aad
int3
jae
mov
fadd
loop
or
out
xor
sbb
ss
sbb
test
pop
pop
das
push
cmp
dec
dec
and
pop
test
lret
mov
call
mov
adc
decl
jb
test
out
fldz
in
inc
stos
pop
sub
dec
push
or
and
repz
stos
jg
rolb
cld
and
inc
xchg
fs
add
mov
loop
push
pop
xchg
xor
lods
mov
nop
mov
add
lret
sbb
or
lods
push
into
xchg
adc
pminsw
pop
pop
jno
add
xor
cli
mov
and
push
das
icebp
sub
imul
mov
loopne
sbb
inc
mov
jl
mov
xrelease
and
inc
iret
stc
test
jb
inc
adc
pop
inc
xor
pusha
push
mov
in
daa
lods
cmpb
popa
jae
sbb
cs
je
fistpl
mov
stos
test
adc
mov
testl
movsl
pop
push
or
js
lea
leave
sbb
arpl
mov
int
adc
inc
cmpsb
lds
jb,pn
mov
sbb
loope
mov
cmpsb
push
pop
les
addr16
mov
pusha
out
out
call
jle
xchg
push
push
xor
loope
lret
movsl
aaa
xchg
inc
insl
mov
dec
cs
lods
sub
pop
clc
dec
pusha
or
mov
repnz
cmp
incl
pusha
and
cmp
add
fcoml
pop
test
push
sahf
fcoms
xchg
jb
outsb
pop
push
push
cmp
add
push
imul
movb
push
addr16
stc
lock
pop
repnz
repz
cmpsb
jbe
std
stc
test
mov
rcl
push
sbb
cmp
outsb
aaa
js
mov
jg
lahf
enter
sub
mov
pushl
pop
iret
or
mov
data16
mov
jecxz
nop
in
dec
jb
movsb
es
push
xchg
xchg
mov
xor
btr
addps
mov
bound
xchg
xchg
lret
or
fidivrs
add
jbe
incl
test
xor
out
dec
or
data16
push
adc
mov
xorl
adc
fcomps
push
repnz
jp
in
rclb
repnz
aas
cmp
cwtl
imul
cmp
jge
ds
incb
imul
pop
xor
pop
imul
test
icebp
push
xchg
in
mov
pop
lods
sub
ds
inc
mov
pop
pop
fcompl
push
pop
call
adc
test
inc
sahf
pop
push
xor
adc
test
sub
cmpsb
cmp
jo
cmp
xor
insb
sbb
ja
xchg
out
fst
pop
ss
jbe
cmp
mov
cwtl
push
cmp
jnp
out
xchg
daa
xchg
xchg
in
sbb
lods
jo
shrl
push
in
outsl
in
outsl
int3
lods
stos
hlt
xchg
jae
loope
int
jp
iret
in
pop
adc
and
push
adc
mov
pushl
ret
fwait
push
mov
add
cmpsb
into
sub
pop
inc
arpl
sub
shl
fidivl
lock
inc
pop
nop
adc
sbb
jle
leave
jne
btsl
add
pop
clc
mov
and
test
aam
in
icebp
out
ds
repnz
cmp
cmp
daa
jne
nop
mov
push
testb
out
and
ret
or
daa
jno
mov
xor
cmc
movsl
or
fcoml
pop
sub
xchg
into
cmp
mov
mov
insb
int
xor
pop
fnstenv
xlat
int3
xchg
leave
out
mov
fwait
pop
and
ljmp
xchg
push
dec
outsl
or
imul
test
sub
mov
cmp
or
in
testl
cmp
mov
lea
jecxz
add
mov
mov
add
adc
in
repz
out
add
dec
and
add
es
mov
pusha
dec
mov
sbb
xchg
jbe
fld
push
jae
add
cmp
mov
nop
ret
push
push
test
mov
mov
popf
push
leave
shlb
mov
loopne
jnp
enter
stos
jb
cmp
scas
push
xor
fucomp
mov
test
mov
in
cmpsl
out
inc
jl
xor
cmp
ss
xchg
add
inc
pop
int
repnz
adc
jns
pop
out
or
xor
push
sbb
adc
ret
sbb
xor
dec
int3
test
mov
enter
add
fs
inc
loope
hlt
mov
test
and
mov
sub
sub
clc
test
push
pop
int
push
push
lods
insl
sub
push
mov
push
scas
lea
loopne
faddl
dec
xchg
xor
sub
push
add
sarb
rorl
mov
jg
lcall
dec
cld
sub
stos
jb
repz
inc
daa
jg
fldt
sbb
inc
fstps
ss
mov
rcll
negb
fwait
dec
loopne
mov
aad
int3
das
pushf
mov
pusha
rcrb
cld
mov
sbb
iret
xor
adc
mov
scas
jl
pop
fdivrl
scas
push
ss
or
std
sbb
mov
rcr
mov
inc
fwait
lea
mov
push
xchg
pop
and
js
push
incb
adc
je
adc
or
xchg
lock
fcompl
sbb
rorb
xchg
pop
mov
xchg
imul
shl
push
test
jae
cmc
inc
mov
cmp
insl
test
adc
lret
cmp
mov
pop
mov
xor
mov
pop
ja
pop
cli
or
xchg
sbb
popf
adc
cwtl
repnz
test
xchg
icebp
xor
xlat
into
jns
dec
pushf
jge
rcrb
ret
roll
cli
jno
fiadds
push
xor
adc
cmp
test
push
dec
iret
ljmp
loopne
jecxz
sub
jb
out
stc
inc
cs
jecxz
je
adc
push
pop
stos
inc
mov
pop
adc
in
adcb
mov
inc
jbe
ds
cmc
sub
lahf
jecxz
mov
ret
clc
rcrl
jle
xchg
fdivs
out
add
sahf
cmp
filds
insl
pop
xchg
dec
inc
jp
jb
mov
stc
push
mov
adc
and
insl
and
jae
cmp
push
jg
lock
cwtl
addb
movsl
inc
jg
inc
in
lret
fnstsw
cmp
cmp
and
leave
pop
push
mov
pop
and
sbb
xlat
mov
mov
mov
push
mov
test
pop
lcall
enter
mov
cltd
inc
xor
pop
inc
pop
mov
enter
insl
test
sbb
and
or
fidivrl
adc
cltd
xor
push
adc
adc
jl
out
xchg
sub
or
jo
cli
add
shrl
push
or
mov
test
cmpsb
js
and
mov
or
mov
fnstenv
sbbl
std
loop
sahf
jmp
loop
push
js
inc
or
and
sub
aad
fcom
xchg
dec
ja
inc
mov
xlat
imul
data16
arpl
popf
lods
cs
sub
add
and
sub
in
aam
inc
test
inc
mov
or
and
je
xor
mov
lods
ja
mov
test
adc
push
in
enter
push
jo
icebp
int3
adcb
lods
mov
mov
inc
sbbl
aas
int3
adc
jge
or
jg
dec
loope
pop
add
insl
lock
add
lret
sarl
dec
adc
mov
out
pop
push
pop
cmp
test
or
sahf
mov
insb
stos
stc
pop
cltd
inc
or
add
mov
xchg
flds
outsl
xor
popa
push
aad
push
add
js
call
cltd
push
jbe
xlat
xchg
clc
jmp
cmp
mov
mov
fst
bound
fists
lock
sub
add
ret
push
mov
int3
pushf
xor
mov
test
ret
loop
inc
sqrtps
inc
add
icebp
repnz
jo
sbb
fmuls
mov
shrb
pushf
mov
sarl
push
scas
add
mov
mov
pop
jb
enter
jp
cwtl
nop
sbb
dec
mov
in
in
leave
adc
pop
jnp,pt
or
add
test
mov
stc
in
das
add
inc
or
insl
sbb
push
xor
outsl
and
and
sub
cmp
je,pn
icebp
mov
sub
xlat
xor
or
imul
mov
inc
xlat
std
mov
jbe
xchg
mov
leave
pop
ret
scas
jbe
or
and
xchg
outsb
sub
mov
inc
xchg
fs
imul
mov
jge
ret
dec
scas
cmp
insb
xchg
loopne
sbb
testl
mov
or
jbe
mov
adc
pop
ficompl
push
aas
pop
jnp
add
mov
out
stc
xchg
int
mov
daa
add
xchg
cmpl
lods
xor
in
sub
inc
js
jo
cmc
jge
in
into
rcr
cmpsl
mov
popf
inc
mov
gs
jbe
jns
fsubrs
sbb
mov
inc
mov
mov
lahf
lds
cwtl
adc
fsts
out
cmpl
or
jo
loop
stos
mov
leave
nop
ljmp
outsl
sub
mov
and
std
out
sub
std
int
pop
fisubs
and
jmp
shl
pushf
xchg
sub
out
xchg
cmpsl
cld
daa
or
sub
adc
or
cmpsl
roll
cmc
mov
cmc
lea
or
out
mov
dec
add
sbb
xchg
out
loopne
adc
scas
bound
lock
insb
mov
adc
dec
in
je
setno
mov
adc
fstpt
xchg
lods
mov
das
lock
push
adc
sbb
fists
ret
scas
cmp
jae
in
sub
sbb
adc
xor
hlt
dec
fidivs
in
and
rol
jae
ss
sub
and
adc
xor
cmp
pavgb
out
mov
mov
pop
sbbl
enter
mov
push
dec
pop
cld
or
aam
out
daa
das
popa
inc
inc
ja
fldl
mov
xorb
mov
jmp
mov
cmpsl
stc
daa
and
cli
or
mov
mov
stos
and
in
inc
daa
jle
loop
daa
fimull
or
shrb
cmp
jle
movsb
mov
inc
cmpb
inc
mov
and
aad
sahf
ret
xor
outsb
stc
cmp
lret
ja
sbb
inc
stc
or
rcrl
or
sub
xor
cltd
lcall
mov
test
das
loopne
jmp
cmp
in
and
and
repnz
dec
jno
adc
clc
popf
ret
push
dec
into
fimull
mov
jecxz
les
and
notl
es
mov
xchg
bound
inc
inc
js
jecxz
pusha
and
and
cmc
shll
jbe
test
int3
sbb
out
cs
adc
filds
add
inc
out
cwtl
mov
popf
lret
fbstp
fdivrs
cli
lret
sbb
ds
imul
sbb
adc
jl
sti
mov
or
cltd
repz
inc
add
repz
sub
fildl
push
jecxz
xchg
mov
sub
and
movsb
stos
pop
imul
incb
cmp
and
ljmp
dec
repnz
fildl
inc
testb
jnp
sbb
and
add
repnz
push
jge
out
call
pop
test
ret
test
pop
outsl
ret
pop
imul
adc
or
in
push
js
outsb
fists
or
fyl2xp1
mov
push
or
dec
incl
mov
lcall
movsb
or
inc
dec
push
xchg
jg
lret
inc
scas
clc
ror
movsl
lea
in
lock
sbb
lcall
add
test
xchg
sbb
lcall
addr16
mov
adc
jne
jl
lret
lea
and
ficomps
mov
pop
xchg
jl
out
mov
sbb
dec
clc
dec
pop
xchg
das
mov
xchg
jmp
jno,pn
std
bound
lds
mov
jne
add
pop
mov
sbb
jge
mov
fcom
leave
fcmovu
pop
add
push
pop
xor
or
dec
and
mov
ret
pop
cltd
push
jns
fildl
lret
pop
pop
lea
xor
loop
dec
in
test
sbb
add
bnd
shlb
push
jne
inc
movb
pop
repnz
add
fsubl
imul
loop
clc
and
push
stos
inc
loop
jl
cmp
pop
loopne
mov
aad
ret
dec
or
mov
xorl
dec
pop
adc
pop
hlt
jge
or
sbb
imul
call
daa
clc
pop
cmp
add
lahf
inc
sbb
je
inc
push
lea
sub
into
lcall
push
arpl
sub
mov
push
mov
hlt
mov
add
or
cmp
mov
xchg
jmp
xlat
xor
mov
push
or
fcmovu
rcrl
or
cmpsl
mov
dec
or
mov
popa
sbb
repz
mov
pop
ss
stc
mov
pop
enter
cmp
pop
sub
xchg
lods
dec
cltd
xchg
sbb
mov
push
cwtl
or
int3
and
inc
test
inc
cmp
bound
jno
jmp
scas
fistps
lock
sub
outsb
subb
ss
movsl
icebp
aam
inc
jg
imul
xor
and
mov
dec
inc
roll
xchg
mov
in
loop
ror
mov
rolb
sbb
popa
dec
fwait
jnp
and
jecxz
mov
xor
mov
rol
jle
js
pop
adc
test
xor
scas
out
cmp
gs
inc
pop
inc
roll
xor
popa
pushf
sti
dec
dec
pop
inc
jg
mov
and
out
add
xchg
mov
dec
pop
in
ficoml
rcr
push
shrb
or
add
ret
repz
addl
adc
arpl
aas
push
mov
pop
loop
mov
loopne
lcall
andl
nop
adc
inc
sbb
lahf
sub
in
jp
lock
cltd
jmp
cs
xor
or
in
fsin
and
dec
data16
lds
or
movb
push
dec
scas
add
and
aaa
xor
add
pop
mov
das
xchg
out
push
jns
adc
lock
mov
sbbb
add
sub
aam
pop
push
in
pop
arpl
and
adc
popa
imul
cmp
test
xchg
jge
clc
xor
insb
fiaddl
mov
ja
mov
mov
xchg
dec
push
pop
lahf
out
loope
push
out
in
xchg
and
inc
mov
push
inc
insb
sti
xor
xorl
mov
enter
push
scas
xor
and
ja
inc
jnp
lds
jno
mov
ds
aam
aas
loop
jne
out
stc
into
dec
jmp
inc
push
pop
jne
adc
imul
sub
movsl
cmc
and
movsl
test
add
cmp
stos
xchg
mov
sbb
mov
push
repnz
pop
or
pop
add
ja
inc
adc
jp
shll
jl
stos
inc
sbb
clc
xor
ficomps
cs
cmpsb
pop
arpl
int
pop
leave
loope
mov
daa
mov
pushf
add
inc
push
mov
stc
hlt
xchg
out
sbb
pop
pop
mov
add
push
add
outsl
rcrb
out
aad
movsb
mov
pop
popf
das
mov
cmp
cmp
and
xlat
push
lahf
push
pop
add
ret
or
and
inc
fucomp
sub
popf
notl
sti
ret
aad
add
pushf
mov
mull
xor
push
sbb
hlt
sub
pop
push
in
and
xchg
imul
push
imul
dec
pop
xorb
sub
pop
loop
lds
cmp
movsl
jmp
call
fptan
sub
xchg
cmpsb
lock
sub
sbb
fistps
mov
dec
adcb
outsb
xchg
cmp
mov
mov
xchg
std
jmp
shlb
xchg
dec
test
cmp
push
repnz
dec
mov
inc
sti
lods
fists
faddl
sub
sbbb
ret
push
mov
xchg
push
mov
nop
idivl
jle
out
add
scas
xor
jg
xor
mov
inc
into
push
shr
imul
cmp
mov
sub
xchg
inc
imul
inc
cmpsl
dec
mov
rcrb
pop
in
mov
add
and
das
push
repnz
cmp
pusha
and
adc
loop
stc
cmp
sub
stc
int
sub
dec
in
rcr
add
movsb
sub
iret
add
cmpsl
andnps
iret
out
repnz
loope
pop
aaa
popf
je
test
lcall
push
cmpsl
loop
push
push
out
aaa
push
xlat
sbb
pop
mov
test
pop
lahf
mov
adc
cmp
adc
je
jmp
adc
inc
mov
jo
add
inc
repnz
leave
pushl
lea
mov
jae
popa
out
jb
stc
pop
push
add
sub
mov
lcall
pop
add
out
dec
xchg
pop
imul
mov
fisttpl
cmp
lret
and
dec
xor
shrb
pop
rcll
push
das
lds
inc
stos
mov
mov
mov
cmpsl
or
mov
hlt
inc
fildll
jns
jecxz
movsl
xchg
fwait
adc
iret
inc
pop
cmpsb
pushf
nop
nop
xchg
xchg
jbe
ja
aas
push
lcall
or
ja
push
aas
xchg
insb
rclb
pop
mov
push
mov
push
cs
dec
pop
xchg
divl
bound
dec
scas
lock
or
into
gs
ds
shll
jge
sub
daa
and
jne
cmp
inc
movhps
cmp
fwait
out
ret
test
aaa
sbb
or
add
out
jle
cmp
roll
jne
push
adc
iret
cmp
and
das
or
lea
iret
test
mov
imul
sbb
pop
aas
and
jbe
push
adc
pop
lds
stc
aam
lea
stc
aaa
pop
insb
dec
rorb
inc
add
jp
push
dec
mov
loop
cmpsb
andb
outsl
lock
sbb
or
test
sub
dec
lds
loope
or
cwtl
pop
and
cmovns
sub
adc
out
mov
or
popf
push
mov
test
jo
sbb
or
sbb
daa
lret
test
imul
shll
inc
sbb
mov
mov
fcom
outsl
fcompl
int
jbe
lock
mov
mov
and
push
jae
adc
data16
dec
scas
aam
int
repz
fisttps
mov
je
push
fdivrs
push
sti
pop
push
nop
sub
mov
loope
in
or
cld
fbld
addr16
arpl
sbb
cmpsb
out
mov
mov
add
inc
ficoml
xchg
xlat
push
mov
testb
push
in
push
sub
xchg
jno
sbb
fwait
aad
cltd
jbe
movsl
les
mov
or
aaa
ficoml
and
dec
fscale
in
cmp
loope
lea
sbb
mov
call
sahf
ror
cld
repnz
lcall
cmpsl
test
mov
cltd
inc
mov
sub
pop
lret
jne
sbb
mov
sub
mov
cmp
mov
nop
push
mov
mov
push
xlat
repnz
mov
add
push
pop
cmc
push
jb
push
ret
insb
out
mov
loop
andb
mov
es
dec
push
xchg
adc
roll
cltd
inc
jle
fnsave
jno
xchg
fimull
fildl
mov
cmp
cli
out
mov
push
sbb
add
mov
lahf
icebp
pop
sbb
push
cmovno
into
mov
cs
pop
into
xor
cli
sbb
movsb
mov
xor
mov
test
pop
jns
icebp
xchg
mov
push
xchg
push
jge
clc
jo
pop
nop
cwtl
int3
xchg
inc
stc
jne
pop
jg
fldenv
fdivrp
push
xor
nop
imul
inc
and
push
or
dec
inc
inc
movsl
dec
mov
mov
inc
jbe
mov
cmp
mov
in
and
lcall
push
js
shll
int3
jp
adc
mov
push
and
mov
movsl
popa
fstps
pop
out
fstpl
cmp
in
mov
mov
inc
jle
sbb
call
and
nop
rcrl
mov
into
sub
mov
push
add
push
mov
and
mov
repz
icebp
inc
add
jns
movsl
mov
loop
dec
fcoms
in
test
add
cmp
sbb
icebp
and
jmp
daa
cmp
adc
stc
sbb
filds
lahf
popa
ds
push
lcall
jno
in
xor
mov
lods
mov
fs
xor
fimuls
xchg
popf
cmp
mov
jg
and
inc
inc
inc
xchg
test
je
cli
pushf
xchg
jae
je
jle
mov
outsb
lret
fnclex
jae
das
mov
subl
imul
or
fistpll
lahf
pop
cmpsb
test
insb
mov
inc
or
insl
or
je
push
testb
mov
mov
push
cmpsb
jg
dec
rcr
std
or
int3
or
xchg
repz
lods
mov
or
jp
xor
ds
xor
leave
stos
fnstsw
fwait
mov
cmpsb
pop
out
fadds
es
ljmp
cmp
adc
movsb
pop
in
add
fcoms
xchg
rcr
push
dec
ret
ret
lret
aaa
shrl
shll
sahf
jg
js
fmull
inc
xchg
add
or
and
mov
ret
lahf
ss
movsb
xchg
fsubrl
ret
sub
lea
add
mov
js
lret
sti
jp
mov
add
pop
js
inc
scas
iret
scas
cwtl
int3
mov
popf
jg
dec
bound
es
add
dec
dec
xchg
out
mov
jne
aas
sbbl
mov
push
inc
inc
dec
inc
cmpsb
stos
in
pop
add
daa
test
aas
or
dec
pop
pop
xor
ficoms
inc
jl
xor
leave
rcrl
mov
std
flds
dec
in
std
pop
xchg
mov
pop
adc
or
inc
sbb
and
dec
push
dec
xor
movsl
pushf
mov
mov
adc
jge
xchg
fadds
dec
cmpsl
lcall
inc
fwait
or
jmp
jnp
pop
in
fldenv
mov
cmp
mov
imul
rcrl
mov
sbb
sahf
jbe
movsb
xchg
movsl
sbb
inc
xchg
jnp
es
lods
popa
mov
stos
out
sub
aaa
outsb
pop
or
scas
inc
out
xchg
test
test
add
mov
clc
cmp
mov
inc
xchg
stos
xchg
js
dec
push
stc
jo
pushf
nop
pop
pop
jle
iret
pop
jno
movsb
mov
pop
in
bound
scas
pop
cmp
orl
pop
shl
or
inc
data16
iret
inc
fidivl
or
mov
pop
jb
leave
mov
js
lret
xchg
inc
pop
pop
sbb
rolb
jg
pop
lret
stos
inc
test
inc
addr16
lock
orb
fdivr
js
cmp
xchg
cmpsb
add
xorb
aaa
mov
fucomp
mov
fnstenv
sub
mov
ret
jl
inc
subb
push
sub
fstpt
push
dec
cmp
fbstp
scas
jmp
loope
sahf
cld
xchg
jne
mov
cmpsl
jae
mov
cli
or
out
les
mov
mov
xchg
imul
add
insb
and
add
ja
cmp
or
outsl
aam
int3
xchg
sbb
mov
subb
insl
lcall
ficomps
in
jo
stc
mov
imul
add
movsl
xor
xor
movsl
jae
into
rcrl
jecxz
cwtl
adc
hlt
jle
aad
mov
test
add
add
inc
stos
nop
aaa
fstpl
pushf
and
jecxz
sub
jbe
test
movsl
jp
ja
xchg
add
adc
inc
shll
aad
jecxz
xor
cmpsb
ret
cmp
cmpsb
ljmp
adc
repz
mov
movl
cltd
mov
fldenv
cli
fs
and
shrl
push
test
sti
xchg
add
xchg
mov
add
insb
pop
mov
icebp
adc
push
imull
push
pop
sbb
mov
dec
mov
mov
das
sbb
pop
or
mov
rcrl
push
jb
jbe,pt
dec
xor
mov
sbb
filds
jo
xor
fs
and
arpl
sti
movsb
cld
and
subb
xchg
push
adc
sti
or
inc
call
xlat
ret
test
repz
sub
cmp
mov
mov
addr16
data16
inc
daa
mov
push
cs
rcll
add
or
lods
inc
sbb
dec
push
mov
or
and
adc
loope
rclb
mov
xchg
sbb
dec
xlat
fistpll
push
jp
fnstenv
mov
add
push
sbb
inc
jp
enter
jecxz
or
sahf
es
dec
pop
mov
xor
adc
inc
loope
push
test
and
jno
orl
in
jg
sbb
popa
push
inc
loop
dec
adc
pop
outsl
bound
and
hlt
mov
lock
mov
jl
and
cmp
out
and
and
pop
daa
movsl
xchg
test
rcrl
repz
push
mov
das
arpl
jmp
dec
cs
mov
scas
add
sub
xlat
enter
clc
shll
out
mov
sbb
pop
fiadds
test
and
and
setp
sub
inc
stc
out
xchg
cmpsb
xor
bswap
stos
jo
push
mov
hlt
frstor
mov
inc
xchg
stos
js
aam
mov
into
popa
lods
sbb
xchg
and
dec
movsl
bound
inc
loope
rorl
sbb
add
mov
push
or
test
inc
icebp
mov
jbe
adc
dec
stos
adc
data16
int
pop
jecxz
fimull
dec
adc
mov
js
inc
jae
test
sbb
fwait
pop
jg
mov
xchg
outsb
aaa
inc
and
mov
js
inc
lahf
ljmp
scas
mov
jmp
enter
push
jmp
jle
ds
imul
cmp
and
mov
push
cli
popl
mov
sbb
insb
fwait
dec
xchg
rcll
scas
ds
inc
jno
dec
out
adc
jmp
imul
hlt
push
fldt
movsb
movsb
xor
mov
cmp
ljmp
sub
fidivrl
dec
lds
dec
fdivrl
push
inc
orb
or
sub
dec
mov
dec
xor
cltd
jne
jo
pop
pop
add
jl
outsb
xor
gs
add
shll
push
add
xchg
hlt
inc
loopne
jo
mov
cltd
inc
lods
inc
pop
ja
or
cmc
movsl
in
xchg
pop
add
clc
jle
add
stos
clc
dec
test
ret
adc
cmp
push
ror
aas
or
lds
psubusw
push
int
lahf
sub
cmpb
push
pop
mov
negb
xchg
cmp
sbb
mov
inc
cld
xchg
mov
cwtl
jne
test
stc
fs
out
pusha
mov
sbb
std
ficoml
mul
fbstp
dec
push
dec
fsts
scas
xor
mov
xchg
test
cltd
je
mov
mov
dec
inc
lock
and
sbb
cmpsb
mov
sbb
mov
mov
mulb
push
adc
repnz
or
cmp
leave
out
adc
aaa
pop
sbb
mov
push
mov
sub
jne
jmp
test
data16
mov
addr16
lods
bound
mov
pop
movsl
stos
or
mov
loop
add
mov
enter
mov
movsl
out
fs
xchg
and
lret
popf
sub
sbb
jg
add
jl
pop
pop
cwtl
leave
test
mov
jecxz
lret
stc
das
loop
and
push
ss
xor
jg
and
out
lds
pusha
mov
pop
xchg
pop
fdivs
addr16
sbb
cmp
xor
mov
inc
adc
push
ss
in
call
push
inc
dec
jne
mov
push
add
aam
sub
pop
push
cltd
daa
lods
sub
mov
out
into
or
loopne
inc
jp
fistps
mov
mov
lods
sti
mov
lret
or
push
mov
int3
sub
ds
in
iret
clc
mov
or
fcomi
pop
divb
je
xor
test
xchg
stos
test
xor
fbstp
xchg
pop
lea
jb
test
dec
lods
xchg
cmp
push
shlb
pop
sbb
inc
xchg
loopne
push
or
push
clc
das
xlat
xchg
sub
lahf
and
fldenv
dec
sub
loop
mov
out
sub
stos
lret
xchg
push
inc
jmp
or
test
les
mov
jnp
and
lret
repnz
mov
mov
cltd
pop
adc
jmp
ljmp
pop
pop
cmp
pop
daa
pop
sbb
pop
dec
gs
gs
dec
push
daa
into
jns
jno
xchg
sarl
adc
les
and
cs
xchg
xor
adc
scas
xor
popa
into
nop
cmp
aam
popa
adc
popf
dec
jp
sbbl
mov
sub
lahf
push
les
into
xchg
lret
jmp
jnp
out
cmc
push
test
or
imul
jecxz
pop
inc
dec
jmp
enter
test
outsb
xor
xchg
sub
sbb
js
adc
test
pop
and
pop
pop
inc
and
or
icebp
movb
xor
repz
roll
gs
dec
data16
rcrl
popa
sbb
push
sub
rcl
mul
jmp
or
rorb
gs
ja
rcl
fdivr
dec
mov
jge
loop
decb
leave
dec
add
ficomps
xlat
jmp
cmp
dec
mov
push
insb
add
lea
or
cmpsb
push
inc
je
cmc
adc
lock
or
and
stc
xor
imul
mov
clc
out
shlb
jno
ja
add
xor
xchg
sbb
out
cmp
sub
cmp
xchg
lock
pop
xchg
pop
and
call
xchg
cmp
das
jl
repnz
into
inc
push
imul
xchg
push
cltd
inc
cli
fs
nop
shll
or
xchg
add
movsb
mov
cmp
test
stc
mov
push
add
adc
leave
pushf
js
movsl
jae
into
sub
pop
cs
mov
cmp
gs
mov
pop
rcll
divl
mov
mov
jae
mov
mov
popa
dec
sbb
jno
jo
popl
mov
adc
jle
in
mov
lcall
xchg
pop
inc
adc
xchg
loope
sbb
loop
adc
jl
mov
cltd
popa
insb
lret
push
add
inc
into
pop
shll
inc
sub
cwtl
mov
fwait
or
mov
bound
and
sbb
adc
sub
or
mov
call
daa
jns
dec
adc
mov
inc
jl
lods
rorb
inc
loope
cmp
ljmp
subb
mov
lret
push
icebp
test
or
push
and
sahf
adc
mov
pusha
push
add
dec
sbbb
outsb
and
cmp
pop
jnp
push
incb
loopne
dec
mov
add
je
dec
sbb
rcr
imul
sbb
mov
notb
jnp
mov
loopne
dec
add
push
xor
and
push
jl
or
mov
rcrb
xor
fcomps
movsb
dec
sete
add
test
ficoms
push
outsl
and
ljmp
outsb
lahf
leave
jne
push
jge
mov
mov
movb
ja
push
inc
pusha
testl
pop
add
lock
xorb
sbb
imul
nop
and
ds
data16
fnstcw
test
adcb
imul
out
stc
xchg
or
outsl
sti
movsl
lea
cmp
fs
dec
shlb
rorl
sub
scas
fwait
arpl
and
inc
mov
pop
arpl
data16
push
dec
neg
inc
test
xlat
aaa
movsb
and
xchg
add
addb
fcomps
adc
inc
xlat
cltd
push
testb
dec
adc
mov
pusha
xor
sahf
mov
jno
ret
inc
repnz
loop
xor
in
pop
pop
mov
mov
ret
insl
add
inc
out
mov
in
inc
cmp
cmp
or
push
mov
mov
rorb
pop
movsl
xlat
bound
push
cmovb
adc
lods
in
lahf
fsubrl
jecxz
cmpl
add
mov
mov
je
nop
push
xorl
inc
push
push
cmp
cmc
test
jmp
pusha
inc
dec
out
jo
xchg
pop
and
inc
mov
or
jb
or
jbe
icebp
cmp
add
das
fsubr
mov
fcom
insb
mov
pop
lods
cli
xor
lock
lret
jl
loopne
dec
xlat
icebp
mov
call
lods
enter
xchg
ret
fistps
or
xor
push
fs
mov
pop
sti
aas
lods
mov
stos
icebp
test
xchg
mull
insb
mov
sub
inc
ss
push
loopne
push
or
push
mov
or
ljmp
fdivs
pop
mov
mov
mov
insl
out
xchg
pop
mov
jmp
jecxz
xchg
pop
into
clc
mov
sbb
inc
addr16
add
imul
or
xchg
adc
popa
arpl
dec
les
fdivp
sbb
enter
pop
add
mov
nop
imul
cmpsb
andb
push
mov
jae
lock
pop
leave
lahf
mov
mov
adc
std
cwtl
hlt
imul
mov
mov
subb
push
insl
and
pop
mov
cmpsl
inc
es
movsb
mov
xchg
jge
jb
aaa
adc
sub
mov
add
cld
leave
ffreep
loop
ljmp
idivl
jnp
popf
es
lahf
ficoms
push
out
dec
popa
mov
outsl
aas
std
out
ret
push
lock
mov
xor
or
jnp
lods
dec
into
scas
dec
pop
scas
add
or
xchg
dec
sti
xchg
loope
sbb
mov
and
fs
mov
outsb
push
pop
add
mov
push
or
mov
push
or
loope
and
jmp
scas
das
lods
sub
jmp
mov
fcomps
movsb
push
pop
xor
mov
aam
xchg
scas
cs
fnstsw
shll
out
and
or
negb
pop
and
xchg
cmp
push
add
push
pop
roll
dec
cltd
int
pop
in
bound
pop
frstor
cmp
mov
test
in
in
into
fsub
inc
pop
sub
and
and
lret
dec
xchg
std
fmulp
jmp
lods
out
inc
outsb
adc
ret
push
pop
popa
or
cmp
test
and
nop
loope
rcl
and
cmp
jmp
add
in
push
cmp
rcrb
testl
add
jne
pusha
push
inc
test
les
sbb
lahf
test
xlat
ds
fcom
outsb
mov
xchg
pop
or
insl
or
cmp
int3
push
mov
or
pop
aad
adc
scas
test
daa
pushf
jo
inc
cmp
fidivs
daa
popf
lods
daa
cmp
xor
mov
xor
inc
push
inc
stos
inc
push
adcl
aam
push
ljmp
pop
aad
cmpsb
push
sbbb
data16
mov
jg
orb
ja
aas
cmpsl
movsl
std
jge
aaa
outsb
push
lods
in
jne
fcoml
int3
pop
loop
nop
adc
jle
cwtl
jb
lret
sub
rcrl
out
scas
sbb
cmpsl
pop
fwait
dec
mov
and
mov
dec
stos
mov
mov
outsb
push
popl
lea
and
mov
adc
aaa
aaa
mov
mov
push
stos
shlb
imul
pusha
adc
ds
pop
sbb
or
push
xchg
stos
out
push
sub
push
mov
or
lds
into
adc
dec
lret
cmp
jle
outsb
mov
inc
out
adc
xor
push
pop
mov
mov
sub
outsl
or
add
jns
iret
mov
in
sbb
xor
popl
jae
repnz
add
fwait
shr
dec
mov
into
icebp
push
mov
mov
data16
ret
jo
push
sub
imul
push
stos
add
mov
cs
xor
cmp
jg
xorb
sub
jo
sti
int
clc
cmp
jge
popa
ljmp
push
pop
mov
addl
int
jns
lods
push
andb
test
data16
outsl
pop
or
and
cli
inc
outsb
aam
dec
adc
ds
aaa
or
and
cld
inc
shrb
or
mov
pop
out
mov
ljmp
arpl
jp
sbb
pop
xor
insb
sbb
dec
rcr
insl
cmc
fisttpl
ret
repnz
sbb
adc
push
mov
popa
push
jecxz
mov
and
lret
xchg
sti
mov
xlat
dec
mov
cmp
dec
adc
dec
out
pop
mov
jb
mov
stos
xlat
aam
jno
shll
xor
out
sbb
scas
xor
pop
push
push
dec
jne
bound
mov
fbld
pop
dec
dec
push
pusha
rcrb
fisttpll
jl
sub
scas
adc
fnstenv
pop
popa
mov
dec
stos
inc
jg
mov
add
jns
cmp
iret
stos
in
insb
das
sahf
dec
sbb
call
xchg
ret
mov
gs
out
jge
add
cltd
divb
dec
and
push
ds
fcmovnu
dec
hlt
inc
mov
jnp
call
je
add
ljmp
mov
fwait
pop
aas
inc
imul
push
pop
xchg
loop
sbb
mov
mov
popa
push
pop
xchg
or
cld
push
jp
scas
dec
push
insb
cmp
ss
inc
aas
sub
mov
dec
popa
imul
xchg
dec
mov
mov
mov
ret
les
cmp
push
mov
addl
lahf
sbb
mov
xchg
push
jb
dec
ret
movsl
fnstcw
add
nop
jecxz
pop
div
xchg
dec
leave
aaa
push
jg
outsb
and
pop
inc
ret
pusha
ljmp
repz
mov
xor
adc
lds
jb
pusha
stos
rol
shlb
pop
stc
pop
adc
subl
into
or
xor
neg
stos
push
fdivl
jp
inc
mov
out
incb
fs
or
test
push
push
jmp
test
test
mov
scas
sbb
dec
xlat
popa
int
cmp
popa
inc
int
cltd
clc
inc
push
icebp
and
mov
repnz
xchg
pop
mov
rcr
mov
push
ret
jmp
inc
clc
pushf
push
loope
mov
xchg
loopne
xchg
mov
adc
scas
or
mov
in
mov
mov
dec
cmp
in
xor
das
xchg
xchg
cmpsb
pop
notl
into
cmp
aaa
inc
loopne
pop
and
js
cltd
inc
and
sbb
in
mov
mov
leave
add
aaa
adc
leave
jp
xor
adc
ss
js
add
xchg
js
in
add
or
fbstp
jle
push
sar
fmull
hlt
and
xor
pushf
mull
push
push
rep
repnz
fisubl
int
or
movsl
mov
shrl
and
mov
in
aam
int
add
inc
cs
jo
lods
or
mov
cltd
negl
daa
cmp
add
add
arpl
push
es
jecxz
hlt
test
ret
adc
cmp
sub
mov
mov
inc
stos
mov
lea
stos
inc
cmp
mov
adc
jno
out
ljmp
sub
out
out
insb
jecxz
inc
lret
cmp
and
push
push
jmp
int3
pandn
mov
aam
jecxz
in
sbb
outsl
mov
adc
icebp
outsb
push
aad
cld
rcll
sub
inc
inc
dec
inc
jne
scas
push
sub
stos
xor
in
ljmp
notb
lret
popf
into
movsl
pop
fmull
mov
mov
mov
shl
pop
inc
imul
mov
aaa
insb
add
inc
lea
cmp
adc
int3
push
pop
dec
cmp
pop
push
jle
mov
push
loopne
mov
outsl
sbbb
mov
mov
push
jmp
cli
lods
xor
icebp
icebp
push
jno
popf
add
sbb
ja
cmp
js
sub
rolb
ss
mov
repnz
jae
xor
loop
test
les
jecxz
enter
repz
sub
inc
iret
and
nop
rcl
loope
pop
pusha
mov
out
adc
sbb
and
jne
scas
ficoml
mov
aaa
rorb
pop
fisubrs
je
mov
ret
or
inc
loop
sbb
and
fnstsw
pop
rorb
into
outsb
sbb
pop
bound
mov
adc
leave
int3
cmpsb
pop
mov
pop
rcll
xchg
xor
adc
mov
and
lods
stos
jnp
dec
or
mov
cltd
arpl
rcrb
lods
aas
jmp
mov
sub
add
jg
ss
and
push
imul
cld
and
ljmp
sub
pop
mov
imul
xchg
scas
mov
xor
or
xor
sti
sbb
push
je
push
aam
pop
test
in
jle
mov
xor
in
mov
xorb
push
sarb
sbb
into
cmc
xchg
loop
es
addr16
mov
adc
mov
mov
xorb
mov
mov
je
xchg
add
cmp
pop
xchg
mov
enter
dec
or
inc
pusha
leave
xchg
fisubs
jne
andl
pop
push
cmpsb
mov
cli
inc
xor
jae
pop
jmp
jmp
sbb
rorb
adc
in
int
insb
repz
in
test
sub
sbbl
dec
out
sub
sahf
mov
or
sti
jae
mov
jecxz
mov
dec
pop
lcall
add
repz
out
addl
insb
sub
mov
mov
or
mov
rolb
cmp
sub
lcall
stos
pop
mov
mov
repnz
das
mov
daa
ds
mov
jne
das
or
lea
fidivrs
mov
jp
xchg
push
retw
cltd
push
pushf
and
sub
cli
jns
jno
or
icebp
xchg
int
int3
jbe
shll
shll
xchg
adc
jae
daa
mov
mov
xchg
mov
adc
loop
nop
int3
mov
jmp
xchg
fcmovu
cmp
in
and
bound
out
stc
jne
jo
in
fisttps
mov
xchg
sub
inc
xor
dec
hlt
xchg
sub
xrelease
mov
xchg
sarl
xor
iret
cmpsb
sub
int
gs
movsl
jmp
pop
xchg
aam
cld
imul
ficompl
dec
pop
roll
test
inc
dec
push
adc
in
and
push
mov
push
mov
pop
daa
adc
jne
andb
rcll
sti
js
int3
mov
imul
loop
div
jns
cmpsb
mov
inc
sbb
icebp
push
pushf
mov
loop
insb
loopne
not
divb
or
mov
dec
daa
push
xchg
xchg
sub
outsl
pop
mov
ljmp
add
aaa
dec
aad
pop
iret
push
ss
add
pop
test
mov
dec
jmp
cmp
cmpsl
fistl
roll
cmp
push
add
sbb
sbb
rep
aaa
adcb
jno
imul
fwait
dec
push
hlt
cmp
out
xor
jns
daa
or
jle
cmpsl
push
lods
and
xchg
xchg
jb
push
bound
lds
or
push
mov
inc
fildll
rclb
sbb
push
call
fs
push
push
outsl
fcoms
jne
xor
leave
adc
leave
pop
data16
xchg
sbb
fistps
mov
mov
dec
mov
inc
cmpsl
lock
dec
lcall
sub
jle,pt
sbb
pop
adc
arpl
mov
jbe
or
pop
call
mov
rol
out
je
test
sbb
jmp
test
xchg
mov
fwait
es
xor
jae
mov
pushf
dec
lea
fcompl
adc
leave
cmc
pop
lea
push
dec
sub
jge
mov
fdivrp
les
add
shrb
or
mov
xchg
inc
out
into
adc
jns
roll
mov
loopne
jae
sbb
pop
in
xor
pop
xorb
hlt
lock
adc
lahf
pop
div
xor
xchg
inc
stos
movsb
mov
insb
dec
mov
shlb
in
shll
mov
jns
cmp
ljmp
outsl
mov
je
xor
mov
push
xchg
dec
pop
xchg
daa
cs
cli
mov
cmovp
xchg
pop
leave
ret
fildll
add
aad
push
inc
push
fisttpl
sbb
dec
xorl
cltd
fadd
adcb
add
sbbb
cmpl
cmpsl
xchg
in
push
cmp
test
outsb
in
sub
hlt
dec
or
mov
ja
cld
out
add
push
roll
mov
nop
inc
adc
dec
pop
xlat
scas
out
pop
or
or
icebp
mul
lret
call
imul
mov
fwait
das
dec
inc
adc
or
push
dec
mov
int3
jmp
push
and
adc
mov
jmp
test
les
adc
push
loope
or
adc
loop
ss
je
mov
mov
or
mov
push
jb
jecxz
pop
mov
je
mov
filds
cld
push
dec
sbb
test
cmpsb
sbb
movsl
inc
push
mov
push
subl
cwtl
pop
mov
call
push
push
sti
jo
fistps
mov
es
cld
bound
adc
xchg
lea
cmpsl
xchg
in
lcall
repz
in
add
sub
addb
xchg
add
dec
mov
sub
ret
mov
jmp
inc
cs
jmp
dec
jb
push
addr16
out
mov
fidivrl
nop
sti
pop
je
stos
nop
push
xor
add
dec
and
lock
dec
sbb
imul
loopne
es
movsb
outsl
repnz
in
stc
mov
pop
lods
sub
lds
cmp
jle
clc
dec
push
jne
add
mov
adc
or
int
push
aaa
inc
ret
es
cmpl
cmp
jmp
cmpsb
cli
sub
and
sub
adc
ljmp
fldt
and
add
stos
inc
movsl
mov
jmp
imul
movzbl
lods
pop
pop
sbb
dec
inc
xlat
popa
adc
inc
sub
jp
lahf
int3
cli
divb
fldt
cwtl
lahf
rorb
and
ret
cmp
push
mov
add
arpl
loopne
pushf
mov
loop
insb
or
mov
lods
ficoml
call
and
sahf
jl
push
arpl
movsl
mov
cmpl
dec
xchg
push
inc
pop
test
xor
adc
mov
leave
jno
push
loop
mov
loopne
mov
out
shrb
inc
fwait
cmpsb
insb
ja
and
mov
or
or
jnp
fldcw
xor
insb
cmp
mov
loope
dec
fnstcw
sti
sub
fcoms
xor
ret
ljmp
xchg
mov
sbb
iret
or
jo
scas
dec
cmp
pop
cmp
in
aaa
cmpsl
movsl
mov
insl
mov
fisubl
pop
cmp
std
iret
idivb
andb
test
scas
dec
js
lahf
psraw
mov
inc
cld
dec
mov
ss
xlat
add
in
mov
ja
mov
mov
and
bound
cmp
gs
pop
mov
pop
leave
cmp
hlt
test
loopne
mov
jmp
mov
cmp
jb
add
testb
pushf
femms
in
cs
push
inc
out
fucomp
mov
and
pushf
notb
add
push
sbb
add
repz
insb
push
pushf
push
add
xlat
ljmp
push
xchg
mov
pop
subl
xor
mov
add
xchg
xlat
or
jnp
adc
cmpl
xor
and
push
jb
in
adc
stos
in
push
or
inc
jno
add
es
mov
cmpsl
dec
sbbb
aad
jnp
bound
inc
stos
mov
add
ret
and
arpl
jae
inc
ret
mov
fbstp
fdivrp
lods
xor
notb
xor
out
mull
xor
jae
fisttps
lahf
jo
pop
xchg
daa
mov
repnz
mov
inc
inc
push
loopne
aaa
mov
mov
adc
arpl
lahf
insb
xchg
repz
icebp
fbld
scas
inc
andl
pop
sbb
jle
arpl
ja
test
data16
lods
addps
add
aas
iret
jge
lock
icebp
push
in
cltd
xor
jns
fs
lods
mov
xchg
xchg
int
xor
mov
mov
inc
es
ljmp
push
cli
pop
mov
icebp
adc
nop
and
popa
mov
pop
lret
jno
push
or
daa
xchg
fcompl
xchg
jg
enter
mov
add
cmp
aam
mov
sbb
imul
stc
popa
cltd
add
sbb
stc
cmpsb
mov
fwait
lahf
lahf
inc
dec
das
jns
mov
cmp
lds
mov
insl
rcrb
out
repnz
xchg
cwtl
stos
inc
adc
push
mov
lcall
inc
pop
add
mov
inc
jp
or
and
mov
or
cltd
mov
jae
gs
out
push
outsl
sahf
test
mov
mov
jmp
dec
call
adc
arpl
int3
push
out
aaa
jg
ret
push
cmpsl
js
jp
std
lds
clc
jnp
rcrl
xor
fadd
loop
jmp
jbe
jb
jmp
xchg
movsb
push
push
repz
jae
mov
dec
mov
mov
fdivl
iret
pop
jno
imul
jp
movsb
xor
lcall
das
xor
push
xlat
mov
add
jns
fldcw
or
test
les
lea
jnp
sub
and
pop
mov
js
out
adc
adc
lret
inc
shrl
repz
pop
xor
out
jle
outsl
lret
xchg
pop
lret
jle
mov
cwtl
mov
or
or
notl
rcrl
mov
pop
or
push
and
popa
sbb
insl
push
loop,pt
inc
repz
stos
push
xlat
xchg
sti
or
mov
cld
test
es
push
insl
test
addb
mov
adc
and
sti
in
adc
mov
pop
push
xor
lahf
dec
mov
push
push
pushf
shll
nop
mov
test
ja
aas
pop
jns
xchg
hlt
xchg
das
pushf
ja
dec
movsl
and
sbb
call
iret
and
ds
out
or
ss
outsl
sbb
in
scas
fsubr
push
sti
fimull
jbe
sbb
cmpsb
enter
cmpsl
js
fwait
ret
mov
xor
std
cmp
scas
lea
mov
lods
pop
popa
test
add
repnz
loope
or
jmp
leave
push
sbb
sub
mov
dec
sbb
into
add
in
arpl
cltd
and
add
stos
out
movsb
xor
sub
mov
sbb
xlat
cs
pushf
adcb
fdivrs
mov
jae
cmp
or
test
sbb
add
call
fisubrs
or
test
hlt
sub
hlt
out
test
aas
fimull
pop
sahf
jns
jle
mov
jno
imul
xor
add
inc
mov
xor
jno
mov
sbb
push
popa
leave
cwtl
add
cmpsl
mov
enter
adc
xchg
sahf
xchg
xchg
and
lods
in
or
popf
rorb
cwtl
mov
jmp
mov
inc
cmp
mov
ffree
inc
imulb
mov
cld
jg
push
test
sub
std
mov
ss
sti
xchg
dec
rcl
psubusw
xor
xchg
mov
sbb
imul
out
jge
or
insb
sub
in
mov
es
loopne
add
push
add
jle
rclb
iret
in
out
fisttpl
mov
xchg
xor
xchg
clc
push
outsb
adc
push
repnz
sub
ljmp
cmpsb
outsb
xor
mov
addl
aam
loop
jl
jnp
daa
xor
mov
push
ja
aam
dec
pop
cmp
ret
aam
addb
out
xchg
test
cltd
cmpsb
dec
pop
divb
sub
aaa
aad
fxam
adc
push
data16
xor
shlb
cmc
cmpsl
cmp
in
imul
push
aam
cmpsl
in
sub
sub
mov
push
in
insb
stc
out
imul
fs
cwtl
pop
mov
rorl
xchg
jge
ljmp
dec
cmp
mov
cmpsl
push
hlt
mov
push
add
push
gs
out
outsl
mov
loopne
popf
jnp
sahf
lahf
arpl
lcall
sbb
xor
jp
rolb
xchg
out
mov
push
icebp
pop
dec
dec
cmp
aaa
insl
pop
hlt
mov
loopne
adc
push
pop
xorl
pop
xchg
add
xor
cmpl
adc
cmpsb
scas
mov
or
loopne
and
stos
leave
cmp
ljmp
jl
push
fmull
mov
dec
inc
pop
lods
fdivp
push
les
clc
add
xor
dec
jl
bound
imul
mov
std
mov
pop
jp
roll
xchg
sub
sub
push
mov
and
sti
xor
rcrb
test
leave
xchg
jne
mov
lds
scas
and
fildll
xor
jae
xchg
imul
aas
inc
cmp
jne
cli
cltd
xchg
popf
and
jae
les
and
jne
sub
dec
push
jae
hlt
out
movsl
mov
and
and
jmp
xchg
aad
jg
push
aad
jne
sbb
sub
cld
inc
pop
loopne
ds
loope
xor
dec
stos
pop
scas
stc
sub
sub
inc
jns
cld
push
mov
and
mov
jp
adc
sbb
out
add
inc
cmp
dec
inc
loope
add
in
fs
xor
push
xchg
sub
or
loope
in
mov
dec
mov
ds
out
and
xchg
sbb
stos
adc
push
push
cmp
pop
js
adc
lret
es
mov
and
and
insl
or
inc
adc
int
mov
lods
jb
pop
sub
mov
aaa
rcrb
cmp
stos
in
negl
or
jecxz
xchg
xor
push
sub
pop
cmc
jmp
pop
mov
test
mov
into
sub
mov
cmp
jo
lds
add
mov
arpl
add
cmpsl
fmul
fs
push
dec
mov
inc
enter
faddl
jb
cmp
dec
test
out
fwait
loope
mov
mov
fwait
adc
je
lock
adc
pop
clc
repnz
cmpsb
int3
insb
dec
sbb
jecxz
lcall
icebp
in
jge
mov
idivb
cmc
add
ret
mov
lods
mov
dec
inc
and
dec
push
inc
or
lods
movsb
cltd
mov
mov
pushf
clc
imul
xchg
cmp
ja
addr16
jecxz
xchg
pop
jmp
cmp
sbb
dec
lret
xlat
in
mov
leave
insl
stos
mov
add
gs
jns
mov
inc
lods
xchg
sti
xor
inc
lods
cmc
int
pop
mov
and
loopne
enter
int
pop
xchg
cmpsl
out
repnz
cld
mov
mov
gs
ret
push
dec
and
cs
imul
hlt
mov
jno
cmpsl
rcrl
test
pop
clc
pop
jmp
adc
pop
outsb
lret
mov
pop
out
mov
inc
xor
loope
xor
adc
mov
adc
stc
cmp
pop
movsb
sbb
inc
dec
out
jae
ficompl
dec
arpl
mov
insl
addr16
mov
add
sti
xchg
int3
mov
insb
xchg
leavew
imul
sub
dec
mov
cwtl
push
mov
pop
inc
ljmp
add
xor
pop
add
lret
stos
loope
int
mov
popf
shll
out
pop
call
mov
scas
movsl
sbb
dec
fucom
and
push
sahf
xchg
xchg
in
mov
lret
jl
cmp
xchg
cwtl
popa
jge
outsb
mov
xlat
mov
shlb
push
inc
sub
xchg
push
scas
inc
dec
inc
mov
push
cmp
xchg
sub
xchg
mov
out
or
movsb
pusha
jbe
aaa
mov
cmp
loop
add
iret
xchg
mov
pop
jbe
into
inc
fistpl
xor
and
mov
sub
adc
xor
in
js
mov
jo
push
sbb
pop
sub
jl
xor
cmp
gs
xchg
jnp
xchg
push
je
pusha
mov
and
stc
in
mov
stos
pop
sti
adc
in
hlt
cmpb
stc
lcall
xchg
lods
dec
lds
ja
pop
pop
mov
in
inc
or
jnp
shll
cmpsl
jmp
jne
jecxz
dec
push
mov
fisttps
jae
push
cmp
sub
xor
inc
pop
or
cltd
push
or
fisubrl
mov
jb
add
adc
loopne
and
adc
and
cwtl
orb
jle
clc
sbb
popf
icebp
and
pop
jnp
and
adc
and
jb
xchg
cmp
mov
cwtl
test
xchg
stos
fistps
cmp
out
mov
ret
pop
outsb
mov
mov
out
std
jb
loopne
dec
push
jb
lea
mov
clc
out
clc
inc
sbb
push
loop
jmp
loop
dec
cmp
call
stos
and
xchg
clc
dec
pop
fwait
mull
stc
dec
add
arpl
aad
nop
in
dec
and
jbe
sub
jns
das
mov
xor
ss
loop
dec
xor
and
xlat
jle
les
call
ficomps
loope
ds
sub
and
pop
adc
xchg
bound
mov
out
mov
iret
push
mov
mov
mov
jae
mov
fldt
cltd
dec
or
mov
add
jo
mov
rorb
test
bnd
and
sub
outsb
xorb
in
iret
push
add
clc
cli
xor
repz
data16
lds
push
mov
sarb
mov
subb
or
insl
in
cmp
movsb
scas
adc
les
mov
pop
add
stc
scas
pop
movsl
sbb
xchg
rcrb
icebp
lret
mov
mov
push
and
or
aam
sub
shll
mov
fsubrp
add
jmp
push
dec
fwait
nop
push
jnp
cmp
and
ror
cmp
push
xlat
loopne
mov
or
pop
cmpsb
mov
ja
dec
lock
movsl
movsl
incb
xchg
popf
and
ds
adc
enter
mov
dec
hlt
outsb
fstsw
xor
xchg
add
jnp
repnz
shlb
jmp
loopne
xorl
lcall
adc
or
fistl
and
xchg
push
push
jl
or
xchg
jmp
push
nop
cs
mov
hlt
out
stos
addr16
cli
sub
inc
lods
sahf
push
mov
pop
mov
fstl
dec
sub
jmp
cwtl
rcl
xor
shl
push
push
jnp
fstps
dec
sbb
lret
ja
mov
sbb
pop
pop
mov
mov
push
push
add
sbb
add
xchg
mov
mov
and
sub
pop
cmp
popa
in
sub
scas
add
jbe
sub
inc
in
inc
enter
inc
pop
xchg
jo
repz
cmp
pop
inc
mov
push
stos
into
scas
pop
jbe
add
push
xchg
aas
inc
jb
or
insb
and
sbb
int3
sti
ja
mov
mov
jp
test
cmp
cwtl
aas
cld
xor
enter
adc
scas
push
mov
in
sbb
mull
js
sub
fistpll
pop
aam
pop
insl
or
xor
cmpsb
jp
pushf
adc
mov
icebp
and
testb
pop
in
fcmovbe
pop
fwait
xor
push
fwait
int
push
test
jp
mov
loope
movsl
pop
inc
int
cmp
lock
aaa
daa
adc
lock
lock
push
or
fiadds
xlat
mov
jns
outsb
xor
ret
out
shr
push
xchg
in
ljmp
mov
out
dec
idivl
hlt
adc
test
pop
out
js
icebp
sbb
dec
mov
idivb
mov
mov
push
add
dec
cmp
and
test
push
inc
jg
das
je
cmp
arpl
and
fdivp
mov
xchg
cli
scas
aam
inc
test
add
pop
insl
fists
inc
xor
into
cltd
emms
lcall
addr16
pusha
xchg
orl
xor
test
cmp
lods
xor
gs
fcompl
orb
mov
jae
adc
push
ror
hlt
sbb
imul
cltd
nop
add
push
and
sub
mov
dec
aad
fstl
lea
pop
push
jg
and
call
sbb
cltd
sbb
popa
inc
mov
mov
pop
idivb
mov
sbbb
or
xorb
loope
sarb
jge
fcoms
incb
js
data16
cltd
stc
addr16
push
aad
sbb
push
lcall
es
ljmp
ss
xchg
or
loop
inc
cmp
and
push
in
sub
vpcmpeqd
push
lret
movsl
cltd
inc
imul
xchg
mov
fcoml
pop
cmpsl
std
dec
xchg
add
shlb
dec
sbb
test
rcr
das
add
movl
adc
into
sbb
imul
pop
into
mov
push
inc
pop
and
lods
aaa
loope
push
ret
in
in
int
xchg
out
xchg
leave
adc
in
imul
push
loope
clc
sub
mov
or
das
mov
cltd
sub
push
jns
sbb
cli
in
sbb
sbbb
jne
jae
sub
push
cli
cmpb
in
sub
mov
into
jmp
xor
add
int3
lcall
push
cmpsl
int
add
in
divl
xor
je
dec
xlat
call
inc
imul
test
gs
mov
adc
fimuls
adc
pusha
and
xchg
push
sub
cmp
adc
lea
push
je
inc
fs
jl
lods
ja
inc
xlat
xchg
in
sar
sub
xchg
into
dec
and
in
hlt
inc
mov
lods
out
test
jo
lret
add
cmc
jb
inc
pop
mov
stc
adc
mov
pop
lret
je
out
dec
or
aam
xor
xchg
movsb
mov
test
outsl
icebp
arpl
lcall
out
add
fdivs
lahf
shlb
or
jmp
cmp
pushl
es
mov
push
inc
popl
cmc
test
sti
jns
das
es
ja
lods
loop
stos
jge
xchg
xchg
sbbb
push
stos
mov
test
addb
iret
and
ficompl
int3
mov
shlb
xor
add
inc
sbb
dec
cli
pop
inc
sub
mov
jns
xchg
cmp
pushf
sbb
or
sbb
push
roll
mov
les
or
mov
adc
ljmp
int
inc
int3
rol
cli
adc
addl
imul
lea
pop
and
lret
sahf
sbb
lds
mov
in
and
inc
test
negb
shll
enter
jecxz
in
pop
xchg
mov
adc
dec
dec
repz
out
nop
in
xor
cltd
jae
int
in
jmp
fimull
jge
jo
jge
shll
repz
sti
xor
sti
stc
mov
sub
pop
inc
subb
movsb
sub
mov
sub
add
inc
cmp
je
adc
daa
ret
pusha
movsb
sbb
cmpsl
in
fisubrl
ja
test
test
in
out
jne
ret
int
cmpsb
ljmp
push
jl
adc
ret
mov
sub
jnp
es
push
add
push
fnstcw
xchg
call
scas
iret
jge
aam
lret
dec
dec
xor
inc
rcl
and
adc
adc
mov
mov
sahf
nop
pop
movsb
pop
lret
in
aad
inc
arpl
je
mov
cmp
dec
cmp
mov
pop
pop
mov
sbb
pushf
andb
shr
sub
fnstenv
aam
mov
repz
icebp
jp
mov
cmp
ficoml
jp
dec
hlt
or
out
push
ljmp
icebp
ret
stc
ljmp
ficoms
and
jp
jb
dec
hlt
jno
xor
in
jne
pop
mov
add
xor
and
push
cli
dec
adc
jo
in
jno
xchg
add
imul
mov
push
dec
pusha
out
out
add
out
inc
in
add
sub
pop
scas
mov
imul
rorl
inc
push
int3
push
out
bound
jbe
sbbb
sub
lods
push
jb
cld
xchg
ljmp
sbb
jbe
xchg
nop
das
dec
jno
mov
inc
int3
jle
mov
xor
jge
pop
ds
inc
lahf
cmp
rclb
jne
insb
movsb
shlb
and
pop
inc
sbb
aam
sarb
jae
fwait
mov
fs
push
push
inc
inc
lock
mov
dec
sbb
mov
test
xor
movsl
mov
faddl
jne
and
sar
push
dec
xor
dec
std
scas
sbb
xlat
jns
dec
add
mov
loop
stos
jg
push
outsl
push
in
or
and
or
arpl
sub
sti
dec
scas
inc
enter
jo
sbb
push
sbb
popa
pop
push
jge
mov
sub
mov
sbb
push
sbb
xor
jmp
ljmp
cli
add
xchg
push
loop
sub
shlb
xor
pop
xlat
dec
and
imul
mov
fimull
sbb
push
xor
sbb
outsl
pop
add
aam
mov
xchg
int3
shll
xchg
sub
mov
adc
repz
clc
cmp
das
mov
add
adc
mov
fadds
mov
mov
ljmp
mov
push
inc
test
sbb
dec
rclb
das
mov
mov
imul
mov
sbb
in
inc
frstor
push
mov
xor
out
push
test
je
cs
repnz
mov
mov
or
ljmp
in
pop
pop
mov
insb
enter
dec
jmp
dec
mov
mov
or
dec
ret
cmc
ret
lret
xchg
push
shl
pop
push
xchg
fsubr
lcall
sub
sbb
pushl
test
jns
dec
mov
adcl
test
sub
fistps
adc
sbb
into
adc
or
mov
jbe
sbb
hlt
push
enter
jns
cmp
inc
leave
js
inc
dec
push
loope
mov
push
cmp
pop
xchg
xchg
rcl
in
cwtl
leave
dec
xbegin
push
xchg
call
fldl
inc
out
xorl
push
xchg
add
les
or
pop
andb
mov
fs
repnz
imul
fwait
pusha
sti
push
or
xor
icebp
xchg
popa
pop
mov
xchg
popa
inc
pusha
outsb
stc
jg
mov
xchg
xchg
cs
push
push
mov
cmp
pusha
pop
test
adcb
movlps
mov
addl
xor
pop
arpl
adc
popf
mov
mov
fwait
cmp
add
jg
push
adc
add
scas
cs
inc
pop
lret
and
sarb
lock
es
sahf
dec
adc
movsl
fs
insb
add
lods
xchg
pop
jbe
mov
cltd
shr
jp
test
imul
dec
test
adc
pushf
mov
jl
insb
inc
jb
add
xor
mov
inc
add
jle
or
mov
sub
pop
dec
lods
into
add
jne
inc
movsl
pop
xor
shrb
lods
movsb
xor
je
add
addr16
rcrl
xor
pusha
call
and
insl
popf
je
inc
mov
mov
addr16
ret
out
mov
push
nop
and
mov
loop
mov
cmp
popf
lock
movsb
mov
loop
mov
mov
std
fsubrl
and
movsb
inc
jge
push
adc
loop
pop
dec
push
push
inc
push
fldl
mov
aaa
cmp
mov
addr16
clc
xchg
lea
test
cmp
jno
mov
pop
jge
mov
xchg
ja
cltd
push
or
xchg
mov
call
fstl
or
sbb
aam
xchg
xor
lret
and
daa
dec
mov
daa
push
leave
clc
lods
add
mov
mov
in
mov
mov
or
mov
jp
fwait
xor
xor
repz
adc
sub
jp
sarb
mov
dec
mov
xor
movsb
xchg
sub
sbb
sbb
movsb
nop
push
test
push
or
mov
stc
jl
cmp
shrb
hlt
gs
cli
pop
and
mov
inc
pusha
cld
cwtl
leave
pop
xor
jle
lods
out
pop
inc
push
ret
ljmp
shll
sti
cmp
js
cmp
stos
fnstsw
sub
and
rcr
sbb
pop
jno
jne
mov
imul
xchg
push
fstpl
test
enter
jo
mov
mov
adc
cld
ror
xchg
dec
jno
xor
mov
in
mov
imul
push
repnz
mov
sub
cmp
es
dec
xor
mov
test
sub
cmp
fldcw
lods
dec
mov
jmp
je
adc
jo
sbb
inc
mov
add
and
and
loope
aaa
cmc
cmc
adcb
adcb
fs
push
cmp
cmp
push
or
mov
mov
fidivs
aas
out
and
sub
pop
xor
adc
sub
gs
xorb
stc
gs
fists
ja
gs
adcb
xor
adc
dec
lret
imul
shll
jo
jle
push
or
jecxz
ret
push
and
sbb
pushf
iret
mov
mov
rorb
sysenter
dec
sbb
dec
jne
xchg
dec
pop
lahf
pop
jecxz
sub
shl
ja
mov
pop
jmp
xor
jo
std
dec
scas
insl
xchg
pop
loop
push
push
xor
and
jmp
insb
sub
mov
aam
adc
outsl
pop
jnp
xchg
test
ljmp
or
adc
dec
mov
imul
repz
test
push
in
and
sub
dec
jg
dec
mov
sub
aad
sub
mov
sbb
or
jmp
flds
std
das
fidivs
lret
movsb
xor
sbb
cld
mov
into
out
jo
gs
jns
mov
mov
sti
inc
ret
ja
push
push
in
jae
into
jb
je
push
mov
xchg
jno
cmp
pushf
movsb
pop
mov
imul
sub
into
test
into
outsl
and
inc
clc
add
bound
sarl
ret
mov
subl
nop
test
dec
sub
popa
sbbb
scas
mov
add
mov
adc
rcl
mov
in
dec
sub
mov
xchg
rcr
outsl
add
and
or
cmc
mov
nop
add
fisubrs
movsb
jbe
fwait
test
out
popf
mov
int
and
mov
clc
adc
jne
dec
pusha
xor
or
loope
pop
out
dec
ret
fildll
js
mov
or
or
jae
pop
mov
in
pop
int
popf
lods
and
pop
jge
aam
aam
push
push
add
or
add
or
jns
dec
out
xor
or
fsubrp
fidivs
loop
je
mov
fbld
mov
jmp
dec
xchg
add
mov
fimull
or
lcall
jle
inc
pop
sbbl
mov
insb
pop
or
fs
inc
inc
xor
dec
sub
push
les
add
push
xchg
jo
sbb
mov
repnz
inc
or
and
lds
out
incl
add
clc
pop
rolb
add
adc
mov
push
sbb
data16
pop
xchg
lods
test
add
pop
arpl
mov
sub
shlb
outsb
mov
xor
xor
mov
jl
inc
movb
aad
mov
push
cmp
cmp
insb
aaa
js
mov
jo
jns
pop
mov
repz
and
mov
sbb
xchg
fidivrs
fs
mov
int3
popf
addb
jbe
imul
and
mov
icebp
das
cmp
std
push
sub
xlat
jecxz
mov
in
inc
aam
inc
mov
popf
inc
pop
cmc
popa
movsl
into
adc
push
xchg
shlb
lcall
pop
addr16
lcall
pop
and
inc
fidivl
sub
and
shl
push
push
dec
pop
pop
lahf
inc
inc
adc
fucomp
mov
xor
pusha
cli
add
pushf
or
mov
stos
or
or
sahf
and
sub
cmc
pop
xchg
arpl
lods
out
subl
mov
mov
adc
mov
or
insl
pushf
test
dec
dec
xchg
inc
pop
ljmp
jle
cltd
dec
sahf
mov
mov
add
dec
iret
fbld
push
adcl
adc
sbb
adc
scas
fadds
jne
call
xlat
insl
jg
shll
jno
add
jl
sub
ret
jnp
mov
lret
gs
jmp
cs
dec
or
int
mov
fs
repnz
push
adcl
bound
aaa
dec
test
pop
xlat
repz
lcall
out
mov
leave
bound
jbe
cld
sti
or
and
jb
dec
cld
or
fmull
out
test
xor
jne
int
jbe
std
scas
jle
and
mov
in
int
repnz
xor
les
pop
dec
cmp
in
push
xor
cmpsb
inc
lret
adc
stc
push
adc
mov
mov
test
fiadds
mov
inc
xor
dec
lcall
pusha
and
xor
mov
xor
cmp
negl
push
and
cmp
lcall
jne
mov
sbb
jecxz
xor
aad
pop
jg
loop
shl
inc
rorb
mov
roll
out
cmp
push
jne
sbb
sub
mov
mov
test
popa
pop
in
inc
inc
enter
mov
daa
repz
iret
push
divl
pop
in
add
xlat
cld
sbb
test
or
fs
into
cmpsb
sbb
push
mov
lods
rclb
adc
aad
inc
push
mov
push
inc
or
adc
jne
sub
lahf
push
mov
cmpsl
fldcw
push
movsl
push
or
rclb
inc
sbb
ret
leave
add
inc
mov
and
jns
fsubrs
sar
daa
imul
scas
aas
jnp
mov
mov
jbe
test
lret
hlt
or
fldcw
addl
lret
pusha
xchg
xor
or
aas
push
shrb
and
and
mov
mov
sbb
or
push
add
xchg
mov
xchg
sbb
and
into
pop
add
sarb
xor
xor
jnp
dec
and
cmp
dec
sub
and
jae
adcl
fcomp
or
jo
ret
pop
push
jg
fisttpl
fbld
xchg
aaa
adc
out
mov
mov
iret
test
subb
cli
push
push
lds
push
mov
xchg
jae
scas
push
mov
sub
xchg
jg
xlat
inc
xor
xchg
xchg
push
popl
sub
pop
mov
adc
and
and
cmp
repnz
xchg
insb
shlb
mov
adc
sbb
adc
out
insb
mov
shlb
xlat
xchg
fdivl
cltd
cmp
jae
and
clc
or
js
nop
filds
inc
sar
cmp
mov
sbb
xor
or
xor
mov
cld
imul
add
pop
mov
mov
jo
push
xchg
out
push
insl
jge
adc
test
adc
ja
lock
mov
imul
mov
sbb
stos
inc
loope
sbb
and
sub
pop
sub
adc
fwait
jno
cmp
sbb
out
mull
aaa
xchg
cli
pop
fcoms
pop
push
pop
out
pop
push
pop
arpl
push
sti
inc
jne
mov
add
mov
shll
rcr
sbbb
dec
inc
xchg
inc
cs
daa
dec
cmp
and
push
imulb
inc
test
iret
jns
int
adc
dec
sbb
repnz
xchg
and
pop
pop
push
cwtl
xchg
push
mov
cmp
sbb
add
push
and
sub
test
aam
cmp
adc
mov
movsl
cmp
repz
fcomps
fsts
cld
push
push
pop
dec
je
test
int3
push
mov
shll
and
movhps
jo
outsb
lds
das
ljmp
stos
fistps
fistl
cltd
xchg
leave
add
sub
gs
xor
ja
rcrb
mov
ljmp
push
mov
cs
sub
mov
mov
jb
xchg
cmp
data16
or
gs
xchg
or
adc
jns
add
push
fwait
daa
lds
or
mov
ds
mov
mov
std
adc
mov
je
movsb
bound
mov
mov
mov
inc
adc
mov
cmp
sti
arpl
enter
test
sub
stos
imul
pop
fisubl
lcall
adc
cmpsl
out
popa
dec
or
cli
mov
mov
cmp
addl
pop
shll
jns
lock
movl
scas
daa
and
mov
negb
pop
add
stc
shll
pop
pop
sbb
lods
jae
in
inc
adc
cmp
fidivs
cmp
mov
leave
xchg
or
sbb
inc
xchg
repnz
stc
inc
sarb
inc
leave
mov
lods
xchg
mov
ljmp
subl
mov
incl
inc
jle
xchg
mov
inc
stos
push
scas
dec
mov
sub
cmpsb
cmpsb
sub
dec
add
cltd
int
xchg
or
lea
test
or
xchg
iret
inc
xchg
mov
cld
cmpsl
xchg
cmp
test
xchg
cmp
sarl
movsb
jno
pop
mov
push
jnp
push
test
sahf
jo
add
js
jo
fcoml
xchg
testb
sahf
lock
shll
rol
loop
sub
outsl
jge
fwait
icebp
shrb
pop
xchg
int3
test
sbb
outsl
dec
iret
js
icebp
cmp
dec
stc
or
into
fwait
adc
pop
ds
add
jp
sbb
sbb
hlt
scas
cs
cmp
adc
cmp
mov
fwait
insl
xchg
mov
shrb
cltd
imul
mov
jp
cltd
mov
push
sahf
ljmp
psubd
push
and
out
pop
mov
cmova
aas
bound
jmp
push
add
roll
sbb
add
icebp
and
out
cmpl
jbe
subps
mov
out
fwait
mov
into
cwtl
fwait
pop
cmpsl
push
stos
aaa
fcmovne
sbb
out
movsb
xchg
bnd
jo
imul
or
fidivrs
sbb
hlt
cs
mov
mov
cmp
or
insb
sarl
xchg
stos
daa
pop
mov
pop
neg
xor
adc
stos
dec
mov
jb
test
sbb
and
sub
aaa
push
pusha
sub
and
lahf
mov
sub
outsl
icebp
jmp
inc
ss
inc
xorb
cli
jb
leave
loopne
sub
popf
dec
mov
push
adc
jne
aad
xchg
push
and
xchg
adc
xchg
ja
inc
ds
or
ss
or
xor
sub
mov
data16
xor
insl
and
aaa
mov
mov
push
lahf
push
push
mov
std
pop
ret
pop
jnp,pt
jge
std
scas
cmp
sahf
sub
movsb
lock
shlb
loope
jmp
xchg
add
repnz
daa
xchg
mov
movsb
xchg
xlat
test
pop
test
dec
stos
cmp
shlb
push
mov
in
sub
sub
and
adc
clts
mov
subl
and
inc
out
pop
mov
push
mov
or
nop
push
adc
stos
mov
je
adc
jne
pop
dec
and
sub
int3
jp
xchg
icebp
cmp
or
xor
sbb
or
clc
dec
clc
into
cmc
insl
push
fidivrs
cmp
push
push
ret
pop
mov
mov
xor
adcl
xor
push
jecxz
push
popf
dec
pushf
cld
xchg
jle
jne
jmp
xchg
mov
test
cmp
aad
push
lds
test
fnstcw
mov
int
adc
sbb
pop
subb
daa
xchg
aam
mov
sahf
sub
addr16
dec
sub
leave
insb
mov
push
leave
cmp
mov
je
sub
mov
ja
outsb
sub
xchg
in
inc
dec
dec
aam
and
or
push
mov
add
xchg
test
nop
xchg
outsw
dec
fsubl
or
pop
xor
add
add
cmp
mov
mov
enter
adc
xchg
adc
or
push
dec
xchg
xor
xor
xchg
push
xor
std
lret
mov
cmp
mov
in
pop
jl
push
xlat
xchg
or
xchg
jne
lods
rcll
xchg
jl
ja
clc
rcrb
out
jecxz
cs
inc
ljmp
inc
adc
fwait
pusha
jbe
stc
test
xor
xor
push
fildll
push
and
lds
ret
mov
sahf
cmpsl
mov
movsl
ss
fisttpll
frstor
push
mov
cmpsl
jbe
mov
je
mov
and
lds
xchg
mov
rcll
mov
cvttps2pi
in
das
pop
sbbb
jo
mov
push
mov
ja
cmp
addr16
sbb
dec
sbb
jge
je
jnp
fidivrl
nop
xchg
popa
in
jae
push
mov
scas
mov
outsb
mov
leave
scas
mov
mov
jnp
pop
adc
cmp
jne
test
sahf
xlat
sub
incb
inc
xchg
inc
std
adc
int3
pop
mov
int
fsubs
addb
mov
in
sub
and
insl
dec
adc
inc
sub
icebp
pusha
inc
or
dec
sbb
jns
add
ret
movsb
push
lahf
mov
sbb
jmp
push
jbe
out
sti
mov
push
inc
jl
pop
out
xchg
clc
push
pop
ds
jmp
scas
into
fcompl
push
pop
dec
mov
rcll
sbb
mov
mov
jno
add
inc
or
loope
xor
sub
adc
in
test
les
stos
nop
in
out
arpl
jmp
xchg
pop
ret
popa
adc
cmc
push
jecxz
xor
jbe
fwait
outsb
cmp
and
mov
movsl
jmp
imul
jno
xor
jb
negl
add
xchg
leave
and
iret
sub
cmpsl
lods
add
xchg
add
out
cmc
add
xor
push
test
popa
fisubrl
enter
outsb
pop
pop
xor
or
outsb
pop
scas
inc
movsl
jecxz
jb
mov
out
and
test
inc
js
imul
jmp
gs
mov
movsb
jg
dec
xor
lods
shll
add
das
mov
or
js
xchg
jne
add
and
add
push
outsb
cmpsb
fadds
fcoms
and
fisttps
movsl
aad
or
jle
fsubrs
insb
sbb
lods
rcr
or
ja
and
jg
pusha
call
jg
lea
jo
cmp
dec
cmp
xchg
add
fistps
test
add
fiadds
popf
push
clc
push
push
dec
imul
mov
pusha
add
jmp
pop
push
pop
jmp
sbb
mov
mov
cs
pop
mov
push
in
adc
test
or
std
push
mov
shl
adc
mov
cwtl
xor
leave
in
jmp
add
aaa
jbe
mov
into
cmpsb
pop
int3
fcompl
mov
arpl
xchg
aas
lcall
in
cmp
inc
test
les
adc
xor
push
shlb
roll
push
inc
pushf
das
add
adc
sub
js
icebp
or
jae
out
and
xchg
gs
xor
cld
inc
lret
movsb
out
mov
in
es
in
add
xor
gs
push
mov
fisubs
push
inc
push
mov
insl
mov
or
sub
stos
push
fwait
inc
pop
pop
or
pop
push
lcall
cmpsb
jo
dec
aad
push
dec
mov
push
xor
int3
test
bound
popa
dec
addr16
ljmp
push
adc
sti
mov
movsb
jg
fsubp
dec
aas
jb
ret
xor
loopne
idivb
push
pop
pop
xor
ljmp
push
sbb
jge
mov
testb
push
push
xchg
fcoms
pop
fisubs
mov
sub
pop
dec
push
sub
xchg
inc
push
es
push
jl
jg
and
movsb
xchg
sbb
jbe
adc
and
pop
jmp
and
scas
ss
jo
ret
mov
shrl
jmp
dec
dec
mov
add
jns
lds
push
jmp
xor
in
or
jecxz
dec
mov
ficoml
insl
ret
xchg
ficomps
ja
sbb
pushfw
mov
rorl
test
sarb
outsl
subb
rcll
or
lahf
das
push
out
mov
xor
jle
jmp
addr16
out
add
sub
fistpl
test
cld
out
xor
subb
aaa
inc
jb
leave
dec
sti
cwtl
fidivs
xchg
pop
xor
shld
xchg
imul
mov
or
int3
pop
mov
bnd
xchg
out
std
mov
andb
in
fdivrs
jo
setle
lcall
push
mov
inc
retw
gs
or
into
arpl
or
into
dec
and
push
fs
dec
scas
leave
push
or
cmp
sbb
dec
mov
ret
inc
stos
pusha
mov
shl
dec
in
mov
xchg
fs
adc
mov
cmpsb
sub
test
pop
dec
mov
fwait
and
fbld
cli
sub
jb
dec
imul
test
cli
pop
push
sbb
push
mov
dec
add
call
cmp
andb
jl
xor
repnz
icebp
lret
fsubrs
mov
mov
lods
clc
push
mov
imull
xor
cld
lahf
ljmp
in
or
pop
add
jne
dec
scas
rolb
hlt
test
stos
and
sub
je
inc
xchg
repnz
add
and
adc
push
jns
add
sbb
cmp
and
cmpl
lea
add
cmc
mov
xor
clc
xchg
add
mov
test
pop
mov
cmp
ljmp
icebp
jbe
jecxz
mov
mov
jmp
orb
imul
pop
and
sub
jmp
mov
sbb
dec
js
add
enter
hlt
roll
gs
cltd
add
pushf
test
pop
sbb
pusha
je
movsb
ficoms
sub
xchg
cmpsb
xchg
into
fdivrs
cli
jle
or
insb
sub
mov
cld
dec
ret
push
clc
jns
add
jmp
outsl
jl
ror
add
add
popf
inc
popa
in
push
scas
outsl
sbb
inc
xchg
ja
xlat
pop
push
les
cltd
jg
cmpsb
ljmp
and
in
sub
fldcw
mov
negl
mov
cwtl
cld
ds
ror
je
sbb
dec
push
and
sub
je
mov
out
and
mov
jbe
dec
insl
mov
fldcw
sbb
mov
push
mov
sub
daa
scas
imul
inc
test
sbb
or
push
in
cmc
ds
rcrl
mov
mov
push
mov
cmpsl
xor
int3
sub
lea
pop
adcb
jne
mov
or
scas
jcxz
sbb
nop
dec
cld
push
test
inc
adc
pushf
jne
or
cmp
mov
jo
push
jne
es
mov
jmp
push
hlt
int3
xchg
je
arpl
ds
ret
popa
dec
data16
or
jle
hlt
test
sti
sbb
js
pop
cmpsb
in
call
push
pop
push
fstpt
push
mov
add
out
fdiv
insl
fldl
or
pop
or
add
in
mov
mov
pop
in
iret
sahf
inc
mov
jbe
cmpl
std
je
pop
in
dec
and
cmp
nop
ss
fildl
fnstsw
mov
adc
cmp
mov
mov
mov
sbb
ljmp
pop
sub
aas
sub
repnz
arpl
popf
and
shl
pop
adc
adc
mov
lret
push
mov
jl
ret
push
and
stc
je
sub
fwait
sahf
icebp
cli
mov
ftst
sbb
mov
nop
sub
add
jne
and
iret
fldcw
icebp
lret
xchg
test
dec
push
ljmp
cmpsb
jge
enter
inc
mov
test
sbb
mov
hlt
inc
xor
jne
clc
jp
ret
add
lret
jno
inc
lret
in
loop
dec
pop
sbb
es
jo
mov
pop
xchg
call
in
cmp
add
mov
ret
fsts
push
fbstp
fdivr
sub
roll
dec
jae
sbb
pop
jp
scas
sti
pop
inc
jmp
adc
hlt
shrb
mov
adc
shrl
aam
cmpsl
jle
popa
les
lock
imul
lods
jecxz
pop
les
mov
pop
jbe
cmp
pusha
sub
xlat
nop
cwtl
push
mov
lods
and
push
jno
and
sbb
sahf
int
sbb
rcrb
push
sub
jnp
repnz
rclb
jae
inc
mov
cmp
rcrb
inc
mov
cmp
sub
decl
fsubrs
push
add
pop
loop
fimull
adc
movsb
std
adc
jbe
ficomps
rcr
mov
adc
sbb
mov
or
je
jg
jno
insl
add
pop
hlt
and
xor
inc
lods
cmp
loop
aas
pusha
sbb
loope
xchg
inc
pop
xchg
es
and
out
jmp
test
pop
push
enter
ds
or
mov
and
and
test
cwtl
dec
cmc
pop
cmpsl
sbb
call
cmp
lods
sbb
cwtl
lahf
rcll
lea
push
movsb
or
shl
inc
insb
push
imul
ret
inc
cwtl
loope
out
flds
pop
ljmp
cmp
push
ss
pop
push
sti
mov
flds
cmp
adc
jg
pop
xchg
cwtl
out
inc
adc
out
dec
sub
mov
jae
push
ret
push
mov
movsb
or
mov
add
dec
test
fdivrp
jp
jo
lcall
inc
mov
out
cmp
dec
repz
pop
fldl
pop
ret
sub
fisubs
xor
sub
out
call
fistps
mov
mov
int
adc
xlat
lds
lds
inc
test
or
repnz
cmp
push
cmp
insb
mov
cmp
dec
pop
push
jo
mov
xchg
sbb
mov
sub
mov
mov
mov
jo
pop
cmpsb
xchg
xchg
dec
hlt
mov
push
rcr
arpl
lret
cmc
in
push
decl
sub
or
stos
mov
cwtl
dec
test
enter
lock
mov
dec
mov
mov
jecxz
sub
sub
daa
fistps
sbb
aaa
or
outsl
adc
cmpl
jl
dec
pop
cmp
ss
adc
jns
pusha
and
xchg
xchg
roll
and
scas
xchg
and
inc
cmp
mov
xchg
lret
push
xor
mov
cmp
ljmp
aas
add
dec
jns
or
push
mov
into
and
clc
or
xchg
inc
mov
popl
mov
mov
test
and
xchg
sub
in
cld
repnz
sahf
pop
data16
loope
mov
das
bound
ljmp
adc
mov
and
push
dec
aaa
stc
pop
sub
mov
insb
inc
push
shlb
or
pusha
pop
add
push
push
sub
lds
xchg
aaa
pop
inc
in
outsl
jo
mov
mov
or
ss
ljmp
jmp
popf
shrl
pop
and
inc
andl
and
mov
mov
mov
cmp
sbb
hlt
cmp
and
ljmp
mov
and
cmp
ret
or
push
inc
insl
aas
fcomps
ljmp
pop
sbb
into
pop
jmp
push
jmp
fisubl
popa
mov
aas
mov
pop
mov
mov
fiaddl
or
pop
imul
icebp
push
sbb
add
pop
lods
fidivrl
mov
mov
enter
pop
xchg
leave
das
cmp
movsl
nop
in
and
pop
xchg
movsb
cli
mov
pop
jp
mov
push
loop
imul
xor
mov
inc
aas
adc
sbb
mov
popa
inc
scas
fnstenv
test
mov
in
xor
je
jmp
mov
idivb
int
pop
je
fcoms
mov
mov
sub
test
xchg
movsb
sub
adcl
inc
rcll
jne
test
dec
mov
push
or
repz
jb
test
jbe
add
scas
ror
addr16
int3
or
in
adc
loopne
cld
mov
hlt
enter
jl
addl
sub
sub
ja
jle
test
push
cmpsl
sub
in
pop
int
mov
dec
leave
stos
sbb
pop
daa
jbe
mov
mov
dec
dec
add
fwait
cmp
mov
mov
cmc
lret
out
push
in
pop
dec
jo
mov
cmpsl
movsb
push
sub
lds
and
stos
adc
sahf
cmp
fs
call
int
es
sub
orb
cmpsb
loopne
test
jp
xchg
cld
or
add
and
pop
cmp
jae
icebp
cli
add
popf
add
or
lahf
mov
pop
sbb
sub
mov
or
push
xchg
push
cmc
mov
outsl
sbb
rorb
mov
xlat
mov
iret
sti
jae
push
dec
add
dec
mov
jns
jle
sub
mov
mov
test
xor
dec
inc
je
les
xchg
mov
xchg
lock
or
jg,pt
mov
fstl
pop
add
fcmovnb
outsl
imul
mov
jb
test
enter
ja
fnstsw
mov
test
fstl
add
out
arpl
mov
add
xor
fidivl
mov
xor
jl
xchg
mov
lock
add
sbb
cmpsb
fwait
repnz
or
les
xor
out
jge
adc
addr16
mov
xchg
shlb
and
mov
ja
pop
adc
stos
jbe
out
mov
aad
stos
rep
pop
dec
jae
aaa
add
pop
xchg
gs
xor
lahf
pop
bound
ret
leave
pop
in
das
stos
popf
adc
enter
outsb
xchg
repz
test
mov
je
stos
les
ljmp
inc
add
sbb
ja
daa
aaa
jmp
mov
rcl
out
dec
int3
or
es
and
pop
out
pop
adc
popa
repnz
add
or
mov
subb
sti
pop
sub
out
adc
and
push
pop
xor
and
add
sbb
lret
ficoms
and
mov
mov
test
ss
rcrl
jo
hlt
cld
sub
mov
dec
arpl
cmp
and
out
sub
in
jno
push
rcrb
fnstcw
cmp
push
push
ss
push
les
push
int3
in
mov
out
pop
xor
or
push
mov
cmp
cmp
dec
ss
and
push
pop
cltd
xchg
sarb
lds
test
sti
js
dec
sbb
je
outsl
jmp
cmp
push
cmpsb
push
pop
mov
push
icebp
or
dec
rcrl
es
mov
jnp
inc
rcrl
mov
neg
pop
dec
pushf
cmc
test
jecxz
cmc
scas
ret
inc
lcall
push
mov
cmp
dec
mov
mov
inc
test
pop
add
pop
mov
icebp
sbb
pushf
movsb
insb
daa
mov
orl
ds
add
mov
mov
push
dec
adc
sbbl
mov
ss
push
cmc
lret
stc
adc
fisubs
jb
mov
lret
cli
xchg
mov
push
add
icebp
pop
call
jb
ret
xchg
outsl
iret
pop
iret
push
imul
out
hlt
loopne
notl
gs
aam
push
dec
cmp
int3
mov
add
jle
or
inc
cmpl
lods
or
insl
test
inc
cld
imul
aam
stos
ret
push
push
adc
sbb
add
sub
pop
popa
jae
mov
jnp
aaa
and
push
xor
test
cmp
addr16
cmp
ss
sub
mov
push
dec
fldl
stos
mov
or
rcl
call
pop
in
cmp
xchg
inc
loop
mov
adc
or
cmp
mov
ret
jne
lret
inc
mov
mov
jecxz
sahf
inc
inc
jmp
push
ja
pop
ret
xor
mov
data16
ss
in
and
push
loop
mov
scas
or
dec
out
gs
jb
pushf
mov
or
pop
mov
aam
cmp
mov
sub
cltd
inc
xor
fmull
mov
outsb
pop
push
imul
rorl
loop
dec
inc
sbb
push
popf
mov
movsb
or
and
mov
fwait
test
pop
jg
and
sbb
dec
test
cmpsb
xor
lahf
repnz
or
xchg
push
aam
cwtl
call
mov
and
scas
or
lret
jns
rcl
lcall
stos
cmp
xor
inc
cmc
clc
gs
xchg
push
aam
sbb
jecxz
sarl
jg
xor
and
lahf
fwait
cmp
mov
lock
jnp
sub
sarb
cmpb
push
std
cs
into
int
jl
cmp
nop
or
filds
dec
sub
movsb
dec
imul
imul
adc
mov
jnp
pop
in
leave
cmpsl
xchg
dec
mov
push
inc
mov
je
push
neg
add
outsl
or
lret
xchg
in
mov
push
jo
cmp
fcomi
push
xor
out
or
and
es
mov
out
dec
cmc
test
dec
ljmp
cmp
fsubs
mov
lahf
xchg
adc
or
jne
lods
fwait
int3
push
mov
ds
and
add
mov
insb
xor
mov
iret
int3
test
and
hlt
test
sbb
pop
in
fldl
jns
nop
lods
adc
mov
fsubrs
pop
nop
stc
stc
cmp
add
loop
out
ljmp
adc
clc
inc
push
or
jl
sbb
repnz
mov
adc
ds
sub
shr
lret
xchg
jb
sti
fdivrl
dec
xchg
ss
push
rol
aaa
fnstsw
mov
pop
outsb
ds
jae
imul
inc
and
lret
shrl
ficoms
arpl
mov
pop
mov
cmpsb
add
sbb
mov
adcb
push
ret
js
adc
and
leave
sbb
test
loope
mov
cmp
repnz
jmp
mov
sbb
push
dec
pop
jb
fldl
cltd
insb
cmp
push
sbb
test
sub
pop
adc
add
mov
mov
push
arpl
dec
cwtl
mov
mov
in
cmp
jnp
push
fcomip
stos
into
out
pop
lea
test
cltd
pop
mov
jmp
dec
dec
pop
fidivrl
nop
inc
int
and
add
mov
out
call
das
int3
xchg
mov
fdivl
jae
nop
sbb
pop
and
jne
dec
test
jmp
pop
test
aas
adc
test
fistpl
into
idivb
in
lock
aad
daa
pop
icebp
add
push
jg
shlb
cld
pop
mov
divb
arpl
cmc
in
push
and
fimuls
push
das
dec
shll
adc
cmpsl
fists
inc
loope
add
xor
cwtl
ret
mov
shrb
mov
or
mov
cmc
inc
jle
out
and
hlt
and
jae
cmp
test
pusha
fsubp
cmp
jne
repz
xor
or
outsl
icebp
inc
dec
shrb
sub
mov
mov
push
jns
dec
and
rorl
fidivrl
jbe
cmp
inc
jmp
mov
leave
jg
xlat
and
daa
addb
pop
dec
out
inc
icebp
cli
loopne
andl
cmp
scas
xor
outsl
scas
mov
lahf
shlb
hlt
in
xchg
sub
icebp
sbb
mov
push
fcomps
jb
pop
mov
cld
or
ljmp
sbb
or
and
jle
adc
jecxz
enter
xor
jns
cltd
lods
into
sbb
jae
das
out
or
mov
aas
xor
lcall
int
and
cmp
jbe
in
pop
push
pushf
xchg
jno
neg
dec
jge
sbb
pop
fwait
pop
vmwrite
adc
fucomip
ljmp
aad
and
ja
mov
aas
ja
and
pusha
mov
mov
xchg
push
xchg
add
xchg
and
andl
push
std
lret
testb
push
clc
or
dec
ret
aas
adcl
jno
out
mov
push
inc
mov
in
jbe,pt
xchg
mov
cmp
pop
pop
test
inc
mov
outsb
add
pushf
and
xchg
cmp
in
push
push
aaa
fdivr
cmc
cmp
out
into
fldl
cwtl
ret
movsb
aas
inc
mov
xchg
jp
pop
xor
hlt
test
or
test
cmc
arpl
test
adc
cmp
pop
rcll
mov
icebp
sti
xor
sub
mov
scas
test
fldl
add
mov
insl
cmp
imul
dec
in
loope
lret
jbe
inc
clc
mov
adc
lcall
loope
jbe
mov
mov
daa
imul
lds
faddl
cld
and
int3
loope
mov
decb
push
mov
xor
sub
mov
cmc
pop
add
push
jg
push
adc
stos
mov
pop
jl
sub
adc
xchg
dec
out
jg
sub
mov
loopne
inc
mov
push
xchg
clc
mov
sub
mov
mov
aad
inc
fcomps
ficoml
push
xor
mov
mov
addr16
repnz
mov
pop
test
test
mov
xchg
mov
fsubrs
rol
mov
ds
xchg
jl
dec
pop
fs
lcall
call
std
testb
adc
shll
stc
push
xchg
sub
in
mov
aam
pop
mov
call
lea
ret
fistps
sub
mov
dec
ds
mov
lret
int3
add
scas
lods
cmp
in
or
cwtl
insb
fdecstp
test
outsb
mov
rol
shl
lea
lahf
ja
test
les
insl
add
dec
repz
idiv
push
mov
or
push
in
mov
imul
popa
rol
cmp
les
or
xor
insb
xchg
int
dec
mov
pop
dec
xor
mov
lock
pop
out
out
lret
daa
rorl
sub
pusha
sbb
cwtl
pop
dec
xor
je
and
xchg
pop
repnz
or
test
cmp
sbb
xchg
scas
test
pop
int
jo
rclb
push
xchg
ss
xor
jo
jge
cld
ss
xchg
sub
cmp
scas
adc
xor
fwait
mov
nop
push
scas
sti
loopne
sbb
adc
mov
sbb
mov
pop
fildl
and
fidivs
shlb
mov
shlb
gs
dec
mov
push
popf
imul
or
mov
lcall
jnp
push
ret
shl
mov
repnz
xchg
testl
int
hlt
popa
inc
xchg
xchg
cmp
cmp
xchg
icebp
add
filds
adc
movsl
xor
pop
jl
jb
pop
shll
add
leave
inc
dec
loopne
add
mov
pop
icebp
dec
shlb
aam
cs
std
mov
inc
movsl
adc
mul
leave
mov
test
lahf
in
cld
imul
mov
add
cmp
mov
jl,pn
jbe
dec
push
je
pop
repz
cmp
into
out
add
pop
sbb
in
sti
mov
adc
mov
test
mov
aad
mov
push
and
nop
gs
test
mov
lahf
push
callw
aad
je
stc
add
and
mov
popf
sbb
inc
lcall
mov
xor
mov
scas
push
xchg
xchg
lret
push
idivb
fcoml
fisubrs
ds
daa
cmpsb
fwait
pop
pop
cmp
stos
aam
test
adc
jg
fiaddl
pop
mov
xchg
adc
mov
push
ffreep
rorb
sub
add
xchg
ja
sub
or
notb
sub
fs
cld
js
xchg
lahf
fcomp
mov
sbb
orl
add
sbb
test
imul
arpl
jmp
mov
and
addb
arpl
dec
push
mov
mov
xchg
push
rcrb
decl
js
xchg
aaa
adc
movsl
imul
aas
jnp
inc
cmp
jbe
stos
push
ja
shrb
insb
adc
adc
ljmp
push
out
iret
push
sub
mov
sbb
mov
test
sbb
sub
mov
int3
enter
dec
xchg
inc
mov
lods
aas
xor
ss
push
subps
sbb
out
dec
scas
orl
dec
popa
cmp
int
gs
jg
pop
in
mov
lods
dec
xlat
dec
and
test
stos
push
inc
je
and
push
sahf
xchg
mov
xchg
push
cwtl
fimuls
popa
jns
testl
mov
stos
pop
scas
jbe
xchg
sbbb
xchg
sub
stos
lahf
sub
faddl
ja
ret
repz
pop
andb
int3
enter
mov
lock
in
push
gs
mov
cli
movl
mov
inc
jp
push
mov
jmp
das
lods
add
scas
hlt
shll
mov
outsb
ret
enter
iret
cmp
xchg
lea
fisttps
subb
or
jmp
mov
mov
rorb
jne
rcl
add
int
xor
aam
out
addr16
add
lcall
sbb
imul
sbb
xlat
clc
std
xlat
sub
and
cltd
sarb
in
adc
sti
inc
mov
sub
ret
iret
sarb
mov
out
fs
rcll
or
dec
push
dec
in
fwait
nop
xchg
cmp
loope
jo
push
jle
in
ds
push
jl
gs
cmp
jg
in
or
fnstsw
mov
stos
mov
push
data16
fdivrs
inc
scas
loope
xchg
aad
outsl
adc
repnz
lock
rol
jno
call
in
cmpsb
test
push
push
xor
xchg
bnd
mov
shr
fisubrs
out
cmp
leave
test
iret
incl
xchg
inc
add
int3
mov
nop
outsb
jecxz
lods
pavgw
addr16
ss
outsl
pusha
ss
ror
mov
mov
pop
xor
and
in
xchg
dec
mov
push
loope
out
pop
cmpsb
xor
or
jb
push
push
jmp
mov
or
es
xor
les
push
mov
ret
sub
aam
push
pop
mov
fimuls
dec
cmp
pop
add
js
cmp
add
xor
lret
pop
xchg
mov
push
xor
xchg
imul
bound
mov
aam
lahf
sub
pop
jns
mov
popf
xchg
cmpsl
sbb
adc
mov
jp
dec
pop
mov
cs
sub
sbb
xchg
clc
adcb
mov
push
xchg
sti
ret
jne
vdivsd
test
aad
push
adc
les
repnz
cmp
icebp
and
xchg
xor
cli
hlt
jecxz
enter
mov
add
or
jmp
jnp
fwait
dec
lret
std
addr16
pop
rorl
out
fs
test
ret
push
mov
popf
adc
pop
or
orl
ljmp
cmpsl
in
sub
add
test
xor
pop
jno
push
push
cwtl
dec
enter
mov
cmovns
inc
cli
add
push
jp
mov
jns
mov
fdivl
dec
or
jno
daa
mov
xchg
jbe,pn
sbb
push
fwait
cmp
addr16
rorb
fucomi
in
call
or
fildl
mov
shlb
icebp
roll
push
lock
mov
inc
add
dec
or
mov
sub
repnz
ret
les
stc
sub
cmc
loopne
hlt
das
adc
cmp
cmpsb
jl
mov
lret
mov
dec
mov
outsb
push
mov
imul
mov
cmpsb
popa
pop
cld
mov
mov
testl
clc
int
insb
pop
imulb
pop
push
out
cmc
sbb
or
scas
or
rorl
pop
sub
or
push
xchg
push
xor
repnz
cmpl
adc
mov
gs
cmpsb
mov
jne
testb
mov
out
sub
mov
xor
xchg
push
sbb
lea
outsb
cmp
jbe
inc
es
ja
push
lock
adc
in
out
mov
jne
mov
fbstp
int3
sar
and
cmp
push
cmp
mov
dec
cli
shrb
sub
sbb
dec
mov
xchg
and
pop
enter
lods
push
cmpb
mov
dec
ss
pushf
adc
lods
es
loope
js
sbb
xor
neg
movsb
mov
adcl
ret
lcall
add
fnstcw
sbb
gs
lret
mov
dec
push
pusha
outsl
call
mov
or
roll
call
scas
test
push
xchg
mov
or
cwtl
mov
ret
pusha
mov
mov
outsl
and
mov
dec
insl
sbb
sub
imul
add
je
or
jmp
xchg
mov
dec
xor
add
jb
xorb
add
push
lds
mov
mov
test
negl
enter
pop
mov
mov
xchg
call
jl
push
outsl
in
dec
sbb
mov
daa
xor
add
imul
daa
shr
cli
pop
testb
jg
xor
inc
out
in
cmp
cmpsl
cmp
jmp
imul
push
xor
push
lods
xor
and
or
push
add
shlb
cmp
jo
aam
outsl
xchg
cmp
rclb
sahf
cwtl
in
nop
pop
add
lret
xchg
pop
sub
cmpsl
dec
scas
mov
dec
lret
outsl
xchg
inc
ljmp
lea
in
pushf
sub
jecxz
call
push
clc
cmp
mov
ds
jp
add
sbb
daa
cmp
xchg
add
loop
iret
out
mov
mov
lds
stc
pop
cmp
inc
cmp
xchg
rcrl
xchg
pop
mov
push
je
loop
insl
daa
lods
mov
xor
adc
or
xchg
insl
or
popf
mov
or
or
ffree
jl
cli
pop
inc
ljmp
mov
sub
inc
insb
lods
cmp
mov
mov
cmp
push
xchg
inc
cld
pop
adc
aad
dec
adcl
xchg
push
pop
nop
std
mov
cmp
push
jge
cmp
sbb
dec
xchg
lahf
outsb
sbb
dec
mov
xor
fs
data16
jo
jmp
sbb
lcall
dec
movsl
mov
addb
mov
out
mov
lret
dec
clc
xchg
adc
add
pop
jmp
stc
jmp
nop
scas
jno
lahf
xor
ret
lods
cltd
xor
mov
xchg
scas
inc
pushf
cmp
and
push
jbe
mov
dec
jge
or
inc
or
popf
fnsave
push
arpl
push
xchg
lret
stos
pop
fwait
gs
lret
nop
in
in
sub
iret
movsb
cmpsl
push
mov
stos
shlb
fistpll
icebp
lret
pop
aam
push
scas
sarl
scas
lahf
jae
pop
movsl
leave
cmp
mov
sbb
outsl
push
push
xchg
rol
nop
dec
sub
dec
cmpsb
daa
adc
stc
xor
sbbb
scas
iret
ss
push
push
insb
mov
mov
push
adc
mov
bound
mov
push
or
or
das
dec
cmpsl
mov
or
sbb
jmp
lds
xchg
sub
or
adc
or
mov
das
aaa
push
mov
dec
jo
mov
les
push
mov
add
mov
mov
in
mov
lret
ss
inc
xchg
xor
xor
es
jecxz
shrl
movsb
cld
xchg
cld
add
cltd
mov
jmp
inc
xchg
pop
sbb
ja
push
xchg
or
test
push
into
and
push
leave
mov
addl
rcrl
and
pop
sbb
jp
nop
jno
hlt
adc
stc
sar
mov
mov
cmp
sub
les
outsb
outsl
or
int3
cltd
leave
pop
stc
lcall
mov
xchg
or
mov
adc
ret
sub
jp
leave
xor
push
dec
aam
daa
lds
sub
adc
nop
jb
cmp
sub
stos
add
sbb
pop
jl
jp
and
in
sbb
jmp
inc
jge
loope
fst
inc
mov
dec
sub
fimuls
push
hlt
into
xorl
imul
adcl
adc
testl
std
add
sahf
inc
or
sbb
inc
movsl
pushf
mov
inc
push
std
xchg
ljmp
jo
pop
cmpb
int3
pop
mov
cmp
jno
adc
ret
rcrl
outsl
xchg
clc
push
in
add
sti
push
jbe
push
add
test
sbb
addb
shrl
enter
dec
xor
xchg
xor
aad
jae
mov
push
and
outsl
pop
push
out
aam
sbb
xor
lahf
pop
icebp
mov
fsubrs
adc
scas
mov
pusha
repnz
rclb
push
mov
fiadds
add
dec
test
add
lcall
repz
push
push
fistps
mov
sub
sub
repz
adc
sub
cmpsl
cmp
and
enter
push
movsl
cli
mov
neg
lds
xchg
push
lods
mov
mov
xor
lock
in
imul
test
adc
out
push
add
mov
mov
insb
sub
pushf
inc
mov
or
jl
xchg
push
mov
jo
lock
incl
pop
dec
testb
jnp
cli
mov
push
sahf
ds
clc
mov
add
push
and
push
dec
inc
sub
xlat
and
and
ljmp
sub
clc
hlt
push
jp
push
aad
arpl
dec
inc
imul
cmp
inc
and
sub
fs
xchg
std
gs
loopne
or
lods
test
and
or
rcr
shlb
cs
mov
sahf
push
xchg
pop
ljmp
bnd
int3
clc
lock
or
imul
add
out
add
dec
mov
mov
cwtl
in
lcall
insl
bswap
cs
sbb
outsb
xchg
mov
xor
pop
sbb
pop
mov
lahf
cmp
pushf
jg
sub
cltd
dec
xchg
aaa
lock
int
jns
push
xchg
fxam
out
adc
dec
jno
sbb
mov
mov
inc
cmpl
push
push
lods
cmpsl
mov
rcr
fsubl
adc
cmp
out
xlat
jnp
retw
stc
daa
cmpsb
frstor
jae
mov
or
add
mov
loop
and
mov
cmpsb
cmp
dec
mov
pop
shr
outsb
fiadds
mov
mov
outsb
mov
ret
pop
or
adc
cmp
int3
add
ret
stos
movsb
leave
mov
xchg
rorb
movsb
bound
lods
fnsave
js
addr16
scas
enter
and
mov
inc
adc
sub
cli
mov
sub
int
sub
or
pop
sub
mov
xchg
push
inc
and
cli
mov
in
jp
cli
push
jle
or
adc
pop
pop
inc
out
lea
int
xor
popa
orb
lret
test
jb
sub
pop
inc
add
ds
ret
push
or
sarb
mov
rcrb
mov
adc
pop
jmp
cs
call
es
add
mov
jns
dec
sub
movsl
leave
addl
sbb
xor
push
clc
fwait
cwtl
fstps
mov
cmc
scas
push
andb
ret
xor
movsl
outsb
pop
aaa
xchg
and
xor
xchg
mov
sbb
dec
xchg
push
aad
push
inc
jnp
xchg
and
jecxz
movsl
jecxz
push
pop
pop
mov
adc
stc
xor
sbb
mov
push
scas
je
neg
dec
xchg
dec
loope
ss
push
and
sbb
pusha
xchg
inc
and
mov
aam
repz
cli
xor
jp
jne
mov
fwait
sbb
fwait
jmp
cmpsb
jno
inc
rcll
sub
stos
xor
cmpsb
outsb
pop
pop
outsl
jnp
and
loopne
mov
or
inc
loope
imul
pop
adc
fs
and
fildll
cmp
inc
aam
add
push
stc
pop
es
cld
daa
and
push
xor
nop
mov
mov
ljmp
mov
push
jge
lret
arpl
pop
sbb
int
xor
pop
dec
and
inc
pop
fs
aas
sub
aaa
mov
std
into
loopne
ss
mov
pop
test
xchg
push
xorb
mov
pop
inc
hlt
or
lods
push
dec
sbb
insl
pop
xchg
in
pop
mov
xchg
shlb
xor
pop
adc
popa
cld
test
jl
outsl
adc
sub
test
adc
ds
xchg
mov
add
scas
lock
addr16
xchg
dec
or
xchg
xchg
arpl
and
into
mov
push
and
and
inc
stc
and
sub
orl
es
notl
mov
sahf
shrl
dec
add
loope
pop
or
es
mov
mov
mov
sbbl
mov
add
cmp
insb
test
inc
xor
push
jb
adc
inc
mov
int
jno
mov
out
addl
cmp
in
jge
adc
push
or
inc
lea
rorb
movsb
loope
shr
daa
inc
in
mov
repnz
dec
fildll
and
xchg
mov
sbb
fs
pop
and
or
sub
leave
cmpsl
push
inc
lret
testl
lea
insb
imulb
inc
sbb
ret
rcr
cmp
pushf
addr16
jmp
jbe
adc
xor
popa
loope
fdivrl
lcall
dec
test
jecxz
shll
popf
insb
xchg
sub
pop
mov
pop
mov
pop
data16
xchg
pop
mov
and
fisttpl
out
cmp
bound
fstpt
out
jns
in
jg
adc
push
in
movsl
xor
andb
inc
lea
add
adc
cmp
sbb
ds
mov
stc
jge
imul
inc
push
in
mov
push
jecxz
hlt
popa
sbb
mov
pop
out
adc
sub
sub
loopne
xor
mov
and
inc
ss
mov
xlat
xor
adc
or
or
xor
rcll
sub
imull
mov
cmp
and
out
lret
jge
inc
mov
push
es
dec
mov
aaa
xor
cmp
inc
xor
pusha
lds
cwtl
xchg
mov
mov
push
mov
pop
fimull
mov
movsl
lahf
dec
call
jno
cmpsb
popf
jns
out
mov
or
mov
js
mov
adc
test
pop
mov
jle
or
divb
gs
mov
inc
outsb
or
rcl
add
or
mov
popa
or
lea
fwait
mov
sahf
mov
mov
in
outsl
out
mov
andl
fdivrl
fwait
mov
leave
subl
cmp
aad
jge
cmp
pushf
pop
push
ljmp
lcall
mov
fsubs
pushf
into
pop
fnstcw
pop
mov
jp
push
sbb
xchg
test
cmc
std
fsubrs
pop
mov
not
pop
jg
add
cmp
jge
mov
mov
int3
imul
sbb
enter
fldl
jns
jnp
leave
frstor
scas
aaa
inc
rorb
cmpsb
outsb
mov
in
ret
lcall
jmp
mov
out
in
mov
pop
jb
mov
notl
andl
cmp
es
dec
cmp
std
or
imul
adc
xchg
xor
and
pop
pushf
jns
or
pop
adc
insb
mov
jb
hlt
inc
loope
add
inc
cmp
mov
fcmovu
nop
aam
or
rcrl
adc
push
in
lods
mov
pusha
jmp
jo
lret
ds
mov
sbbb
and
pop
adc
cli
data16
sbb
enter
inc
adc
insb
stos
and
sti
fwait
mov
leave
cmp
add
add
jb
inc
std
std
mov
mov
mov
sbb
fimull
adc
mov
pop
nop
addr16
popa
push
adc
dec
cmp
int
push
inc
divb
pop
push
arpl
out
loope
leave
xor
cmp
xchg
xor
fsubr
cs
rcll
stc
vmovd
mov
pop
jb
pop
adc
xor
or
daa
les
pop
and
add
nop
adc
dec
inc
xor
inc
pop
or
sub
xchg
and
mov
mov
xchg
loop
je
cmp
dec
scas
dec
inc
aad
cmp
mov
je
jo
mov
adc
pop
aam
fs
push
addl
cltd
aaa
lock
out
add
cwtl
in
outsl
jnp
lcall
inc
fcmovnu
sbb
lds
mov
test
fwait
int
nop
xlat
dec
or
ja
nop
mov
aam
ror
fcmovnbe
stos
mov
sub
jo
and
sti
xchg
test
inc
mov
cmc
push
aas
cmp
enter
sbbb
pushf
or
sub
xchg
loope
xchg
xlat
test
xchg
jns
cmc
insl
loope
test
aaa
adc
or
nop
adc
jmp
xor
dec
cmp
outsb
ret
incl
nop
sub
dec
mov
hlt
fmuls
add
dec
cld
push
repz
push
pop
cmp
aaa
sbbb
jae
mov
push
cmp
dec
pop
mov
out
incl
add
test
sbb
les
int3
pusha
mov
repnz
in
test
xor
mov
test
xor
or
or
daa
pop
nop
push
cmpsl
ja
push
fyl2x
sahf
xchg
rcr
fnstcw
adc
xor
pop
adc
and
sbb
cmc
mov
mov
test
ljmp
cli
jns
push
lcall
xchg
dec
dec
xor
push
aaa
dec
mov
xchg
cmpsb
movsb
xchg
inc
pmaxub
lret
addr16
mov
mov
cmpb
lahf
sbb
mov
xchg
push
pop
add
dec
fstpl
dec
mov
mov
jns
imul
sarb
ja
adc
jle
inc
addr16
in
mov
or
push
into
sahf
rcll
mov
jg
test
fildl
in
repz
out
cs
das
les
and
rorb
sbb
sub
jmp
cmp
push
cli
and
fdivrl
xchg
repz
mov
adc
and
jl
jle
push
std
mov
out
jne
inc
and
popa
jae
movsl
cmp
jle
clc
mov
orl
std
es
dec
or
sbb
and
pusha
cmp
daa
test
jle
iret
shlb
cld
hlt
popf
xchg
sub
or
test
in
jmp
cwtl
int
adc
add
or
xchg
pop
ret
add
inc
xor
in
shrl
jnp
into
shlb
or
insl
xchg
aam
mov
jmp
inc
cmp
mov
loope
sbb
js
jne
lods
pop
incb
xchg
inc
je
cwtl
cli
hlt
ljmp
lret
fdivr
das
sub
inc
xchg
push
sbb
cwtl
test
adc
mov
mov
inc
stc
rolb
sub
fwait
lea
xorl
mov
sbb
or
sbb
xchg
xchg
lcall
mov
lcall
lds
out
and
xchg
xorb
inc
pop
aam
push
idivb
mov
cld
jno
bound
cltd
dec
movsb
in
out
push
fs
je
mov
lds
pop
adc
sub
jne
cs
jne
fidivrs
add
mov
jg
arpl
es
add
push
es
repnz
sub
inc
out
mov
cmp
pop
pop
lods
icebp
stos
pushw
mov
jns
cmc
lcall
ja
mov
insl
popf
fwait
rolb
aad
mov
mov
in
xchg
enter
insb
pop
push
rorl
sbb
dec
jge
mov
jno
fistps
lock
mov
inc
jne
mov
movsl
call
mov
mov
sbb
mulb
inc
cmp
inc
cmp
mov
push
call
scas
pop
fsubrs
or
inc
stc
mov
pop
xor
dec
pop
movsl
adc
dec
push
cwtl
inc
in
push
mov
push
aas
in
cmpsb
xchg
cmp
cmp
cmpsb
lret
lcall
xchg
test
mov
loopne
pop
shrb
adc
roll
adc
sub
push
test
jnp
inc
sahf
pusha
adc
mov
enter
add
repz
rorl
add
in
jnp
inc
fidivl
popf
mov
sub
add
add
mov
pop
and
jle
mov
cmp
jmp
dec
add
push
mov
subl
inc
dec
sub
leave
cmc
or
xchg
sti
inc
mov
pusha
js
lods
xchg
mov
xchg
mov
jne
xor
xor
mov
sahf
pusha
icebp
stc
lock
adc
popf
aam
jmp
test
lods
inc
or
imul
or
movsl
pop
jno
mov
rorl
pop
mov
and
shlb
enter
pop
lcall
movsb
adc
dec
sub
sub
or
int
pushf
jecxz
lcall
ljmp
das
sub
sbb
cmp
lret
lds
addl
mov
xor
fisubrs
aam
add
add
movsb
jae
lcall
jns
cli
and
iret
xchg
aam
frstor
cmpsl
flds
mov
inc
sti
inc
or
and
movsb
push
jns
dec
adc
adcb
inc
pop
fmuls
lahf
xor
stos
pushf
jle
mov
jae
inc
shl
pop
icebp
dec
scas
add
xchg
mov
inc
sbb
pop
xchg
and
mov
xor
mov
mov
push
cmp
inc
pushf
fisubs
jae
adc
and
push
insb
jl
outsl
jno
dec
clc
sub
rolb
cltd
pop
lret
xor
pop
jle
mov
dec
bound
adc
mov
jb
xchg
pop
lret
sub
xchg
push
clc
mov
fwait
sub
pop
out
std
sub
stc
out
out
cmp
inc
mov
jl
leave
fistpll
ss
setb
adc
xchg
gs
sub
xchg
jge
push
icebp
inc
rcrb
pop
cmc
lcall
jl
mov
dec
cmp
lock
cmp
or
or
inc
cmpsl
pusha
jg
sar
sub
mov
out
js
les
cmpsl
leave
push
test
adc
xor
pop
xorl
xor
and
outsl
mov
push
loope
push
and
ljmp
pop
mov
jo
enter
cmpsb
int3
push
xchg
dec
and
insl
xchg
out
or
mov
jne
test
and
movsl
inc
and
lds
rcrl
pop
sub
pmaddwd
pop
dec
sbb
loope
mov
cmpsb
mov
out
lret
and
hlt
int
push
lock
hlt
mov
jl
mov
lds
pop
shl
cmp
pushl
push
mul
mov
adc
add
sub
push
push
pop
and
xchg
push
and
mov
cmp
add
or
push
rcr
stos
dec
add
and
lcall
pop
bnd
data16
sub
inc
jbe
into
cmp
insb
popa
xor
in
js
mov
mov
mov
or
inc
and
js
mov
push
jbe
sub
mov
shrb
xchg
jns
or
cmp
push
aas
push
in
mov
jp
icebp
jo
cmpsb
sbb
pushf
push
push
push
stc
repnz
sub
cmp
sbb
cmp
insb
shl
xor
xor
mov
mov
ret
sbb
xchg
shll
les
mov
cmp
imul
sub
mov
sbb
les
cli
mov
loopne
and
movsl
mov
push
shl
mov
jecxz
pop
mov
and
and
stos
inc
push
add
mov
push
jecxz
and
jecxz
jb
lods
mov
adc
dec
out
add
fs
dec
dec
das
pop
xor
mov
mov
mov
jmp
ja
insb
fstps
out
jne
lds
ret
das
dec
pusha
xchg
imul
orb
hlt
stos
lock
stos
movsl
push
push
mov
dec
sub
dec
int
jmp
movsb
pop
gs
lea
jmp
stos
pop
shlb
jb
xor
test
lds
dec
xor
adc
cs
sub
or
lds
pop
mov
cwtl
mov
hlt
pop
xchg
fsubrs
pop
stos
push
in
push
inc
leave
jns
out
aam
xchg
push
xor
jne
cmc
xchg
cmp
push
cmc
cmpsb
xchg
das
lahf
lds
sbb
iret
xchg
mov
mov
pop
adc
cmp
imul
mov
mov
mov
in
push
popl
xchg
jns
push
ljmp
loopne
stc
adcl
push
jns
test
mov
pop
lret
aad
and
mov
addr16
loope
scas
int3
sti
or
lods
and
lock
test
pop
cmp
xor
xchg
inc
out
dec
out
cltd
shl
icebp
add
jl
jmp
sbb
jnp
test
jno
out
adc
inc
sub
mulb
mov
int
shl
and
shl
xchg
movsl
pop
repz
pushf
fwait
inc
pop
cmp
and
ror
aaa
in
sub
fnstenv
xchg
mov
dec
vpsubd
add
lea
lahf
jno
out
cmp
leave
cmp
bnd
out
fnsave
sbb
dec
stos
pusha
xchg
insb
mov
sub
push
popf
fcoms
cmp
daa
mov
loop
and
mov
movsw
push
mov
jnp
mov
in
xchg
jg
out
and
and
push
rcr
fdivr
mov
rolb
push
push
mov
jmp
hlt
push
icebp
sbb
cmp
les
lret
pop
outsl
dec
xor
inc
pusha
out
jne
mov
adc
ja
mov
fistps
jg
lock
pop
subl
xchg
outsb
cmp
mov
repz
fwait
sbb
ljmp
pop
sub
outsl
jl
imul
cmpsl
push
inc
fwait
lods
sbb
idivb
in
iret
jne
mov
xor
push
mov
cld
cs
fsubrs
scas
cmpl
mov
or
inc
xchg
xchg
fdivs
adc
stc
stos
push
mov
test
pop
sub
inc
sbb
ficoms
sbb
mov
push
push
lds
push
fsubl
addr16
hlt
pop
mov
pop
cltd
and
int3
pop
out
xor
scas
xor
inc
jge
cmpsb
cs
loop
sub
test
and
jmp
pop
dec
mov
jbe
jo
sbb
jno
or
push
movsl
pop
outsb
test
fwait
loopne
sbb
pop
iret
mov
icebp
inc
aam
cltd
or
or
roll
insl
mov
js
mov
mov
push
outsb
and
cmpsl
and
mov
inc
push
call
xor
test
jne
mov
xlat
ja
shlb
mov
mov
ret
pop
mov
andl
push
sub
mov
aaa
or
add
mov
push
add
les
mov
stos
pushf
mov
daa
mov
and
inc
andl
stc
sbb
cmp
xchg
jae
gs
sbb
xchg
xchg
xchg
out
dec
pop
mov
mov
dec
and
xchg
js
pop
stos
in
adc
int
fbld
sar
inc
int3
jle
stos
adc
int
fdivl
push
mov
cmp
sahf
pop
cwtl
mov
lcall
insb
mov
pop
adc
in
cmpsb
iret
add
scas
aam
sbb
mov
js
cmp
mov
sub
fcmovb
dec
mov
daa
mov
sbb
cmpsl
addb
adc
addb
push
adc
dec
push
mov
mov
js
mov
jge
inc
sbb
test
in
push
mov
js
js
mov
lea
arpl
dec
cmpb
push
fldenv
pop
jmp
mov
sub
sarb
insb
insb
xchg
mov
leave
fistpl
jo
les
ficoml
inc
xor
popf
and
dec
push
leave
int
jae
mov
and
mov
push
jl
push
inc
ja
in
push
and
sbb
stos
mov
mov
and
sbb
lea
cld
add
xchg
ja
mov
pop
inc
jbe
adc
jae
cmp
sbb
mov
push
mov
adc
rcll
inc
push
mov
push
sbb
mov
stos
mov
cli
outsl
push
fstpt
xchg
jge
inc
mov
mov
xchg
sbb
ja
mov
imul
lcall
adc
mov
stos
cmp
xchg
jmp
push
sub
ljmp
test
adc
ss
arpl
xor
fsubl
fistl
inc
mov
inc
xor
jg
adc
testl
out
sti
ficoms
mov
jbe
mov
scas
sub
adc
sub
stos
in
push
push
scas
fs
cmp
fsubp
adcb
imul
push
in
rcll
test
fsubl
sub
inc
mov
mov
xchg
xchg
push
cli
pop
dec
aam
mov
inc
sbb
jae
add
and
jb
mov
dec
aad
rorb
mov
mov
dec
jb
out
cmpsb
adc
inc
add
ljmp
repnz
mov
cli
cmp
pop
adc
fiadds
xchg
push
adc
fmuls
sub
pop
iret
rorl
into
icebp
pusha
insl
push
xchg
insb
sahf
add
mov
into
pop
push
xor
jb
lret
lods
cmpb
in
insb
fbld
es
adc
jb
sub
dec
test
mov
mov
jl
sbbl
aas
push
shrb
jbe
and
cwtl
and
inc
inc
xor
notl
mov
push
adc
xor
mov
xor
rorl
push
adc
mov
adc
lahf
jo
mov
rorb
pop
fstl
jmp
mov
xor
inc
push
inc
outsb
xor
lcall
jne
cmp
jne
and
imul
insb
mov
lods
pop
adc
setno
push
paddsb
adc
repnz
daa
insb
push
mov
or
arpl
mov
shlb
addr16
jp
jnp
fiadds
sbb
in
add
loopne,pt
push
faddl
cmp
mov
adc
fdivrs
xor
testb
inc
mov
push
sahf
out
neg
mov
mov
cmc
idiv
subl
mov
std
mov
andb
adc
xchg
or
mov
ljmp
sbb
fs
scas
inc
mov
shrb
sub
jle
in
aaa
inc
xorl
sti
push
popa
and
pop
cld
in
cmc
xchg
sub
and
stos
mov
cld
test
mov
stos
rcrb
push
stos
push
loop
add
mov
in
sub
mov
cmpsl
out
sub
andl
sub
pop
cmp
jmp
in
in
lock
add
popf
nop
fsubrl
pushf
pop
dec
push
sub
ficoml
push
push
pop
in
lods
pop
or
mov
mov
js
les
lret
mov
push
jmp
pop
push
addr16
xchg
xchg
lret
jb
dec
mov
sub
shlb
clc
lods
cmpsb
add
mov
clc
sub
xchg
sti
xchg
xchg
xchg
aad
pushf
mulb
fs
sbb
push
hlt
adc
pop
stos
jp
jnp
in
and
push
lock
mov
cs
in
mov
xor
outsl
pop
dec
jae
sub
or
clc
cmc
stos
in
cmp
dec
sbb
jns
cmpsb
push
push
add
ficoms
xchg
lds
mov
pop
jb
xor
repnz
push
and
jbe
orb
push
push
and
pop
ljmp
pop
dec
mov
cwtl
sbb
outsb
push
cmp
je
rclb
mov
add
sbb
mov
push
call
ja
ds
mov
pop
in
loopne
sbb
insl
mov
in
ja
enter
mov
cli
adc
dec
inc
inc
loope
adc
inc
and
jne
fcom
jo
shr
lcall
aam
aas
jno
mov
sahf
das
fwait
test
push
and
xchg
sub
lahf
cmp
push
vfmaddps
dec
mov
jbe
mov
sbb
aam
popa
pusha
fistpll
jecxz
fmuls
sbb
arpl
ss
addb
loope
stos
mov
ror
loopne
test
jge
jp
or
add
add
dec
not
add
jo
repz
movsl
dec
and
xor
jo
xor
mov
xorl
xor
add
shll
pop
xchg
lcall
and
imul
mov
jne
cmpl
outsb
mov
pop
nop
pop
mov
dec
loop
jno
push
sahf
insb
lock
mov
insb
push
push
xchg
or
mov
cltd
movsb
out
inc
sub
or
and
pop
cmp
out
adc
inc
mov
test
movsb
inc
pop
and
rcl
dec
lods
jns
mov
mov
push
inc
inc
fsubrl
fcoms
and
dec
or
idiv
lock
xchg
sti
pop
push
les
push
test
cli
int3
ficompl
xchg
imul
rorl
sbb
add
lods
test
sbb
movsb
inc
lea
or
lods
jle
mov
cltd
and
mov
push
test
jmp
test
or
adc
ss
lret
lahf
lcall
dec
mov
andb
mov
loope
gs
cmp
fcompl
xor
adc
lret
fisubrs
jle
push
into
imul
pop
dec
mov
mov
sub
stos
cmpsl
in
test
int3
sahf
or
jae
adc
sub
mov
mov
fimuls
xlat
ss
jg
aas
scas
push
inc
and
stos
movsb
xor
inc
fdivs
mov
out
repz
out
call
out
inc
lods
inc
jl
mov
pop
pop
push
mov
push
add
scas
sub
decl
push
lret
or
xchg
jl
and
fsubp
mulb
test
push
jle
push
add
lods
stos
inc
dec
inc
repz
test
sti
or
xchg
loope
add
rorl
fwait
jo
sbb
out
fcmove
rcr
adc
sbb
out
jg
test
fwait
mov
les
fstl
ret
cmp
sub
xchg
scas
test
rolb
mov
sub
mov
ficoms
orb
cmp
in
stos
fwait
mov
mov
loopne
and
imul
or
in
cmp
clc
and
sbb
inc
sbb
dec
inc
repz
or
lret
dec
pop
dec
cmp
mov
push
sub
xchg
mov
pop
xchg
pushf
or
pop
mov
pusha
sti
sahf
cltd
mov
psubsb
xchg
mov
into
mov
test
iret
js
pop
adc
fistl
xchg
jg
or
cmpsb
cld
js
sbb
inc
mov
es
adc
and
pop
or
int3
stos
dec
and
xchg
nop
cmp
xchg
sbbb
jp
and
jp
es
and
aas
fisttpl
mov
iret
xlat
inc
mull
mov
stos
push
or
lcall
jne
pause
cmp
mov
dec
fadds
dec
or
cltd
jb
out
adc
in
scas
pop
push
cmp
sbb
scas
xor
stos
push
pop
sar
cs
scas
add
cmp
fcmovnu
imul
mov
js
pop
into
pop
add
cmc
fmuls
sti
lods
cs
popf
xor
les
push
xchg
outsl
iret
pop
lods
cwtl
fildll
icebp
mov
mov
xchg
imul
inc
jmp
imul
cmpb
mov
addr16
std
inc
in
jle
cmp
aad
xchg
sbb
xor
sahf
rcr
cmp
jl
neg
pop
rorb
adc
je
fcmovnb
and
outsl
hlt
in
push
shrb
and
jnp
lods
loope
adc
pop
mov
fcoml
ret
out
sub
lods
add
ds
jmpw
out
xor
sbb
sub
rcr
imul
idivl
ss
cltd
xchg
and
sub
cmp
ljmp
cmpsb
mov
add
je
aad
mov
cld
aaa
cmp
lahf
cmp
pop
hlt
mov
aaa
xchg
dec
sbb
add
lods
add
add
or
mov
mov
xchg
jae
popa
in
into
cld
pusha
jnp
jbe
xchg
out
dec
aam
shrl
push
xor
xor
fcmovb
out
call
lods
shll
jbe
orb
pop
stos
sbb
xor
mov
in
cmp
lock
jae
daa
stos
shlb
sbb
mov
insb
or
and
outsl
lcall
fdivrs
adc
movl
arpl
imul
jge
rcl
mov
cmpsb
or
lods
fs
or
inc
mov
sarb
fnstsw
icebp
mov
lret
pop
xchg
mov
xor
add
pop
pop
mov
or
js
push
scas
mov
sbb
push
cli
mov
push
inc
test
push
scas
pop
push
dec
xorl
aaa
and
call
daa
xor
jge
adc
loope
imul
mov
xchg
gs
cmp
aas
or
mov
or
repz
add
xor
or
movsl
cmc
pop
or
out
or
xor
stc
cmc
xor
loopne
xor
dec
addr16
push
hlt
adc
sbb
cmp
out
inc
mov
ja
push
jb
mov
or
arpl
sbb
jle
push
jae
add
push
sarl
jno
out
jmp
jbe
decb
cli
mov
and
mov
test
add
add
out
sub
orb
cmp
movb
xor
jno
imul
xchg
pusha
lods
xchg
dec
push
lahf
xchg
leave
xchg
mov
cmc
xchg
imul
sar
cmp
lods
inc
cwtl
jl
or
adc
out
inc
testl
out
jmp
imul
push
push
mov
push
push
insb
xchg
xchg
and
icebp
cmc
pop
jbe
sarb
push
or
mov
add
mov
jne
or
rcr
inc
mov
dec
pop
pop
scas
sarb
adc
adc
mov
ds
js
jge
iret
fwait
aas
dec
jecxz
loopne
jnp
cmp
stos
xchg
jp
fs
or
mov
sar
xor
in
jnp
outsl
andl
fstps
stos
mov
pop
lds
inc
call
jne
rorl
test
adc
mov
aad
push
sub
je
cmp
xor
ss
pusha
inc
icebp
adc
xor
xchg
mov
cmp
loopne
stc
shrb
push
fldt
push
xor
cmpsl
in
sub
mov
or
rclb
push
add
and
int3
in
into
stc
adc
mov
jg
mov
arpl
xchg
adc
bound
mov
sub
lret
mov
iret
sbb
mov
xchg
xchg
push
or
push
insb
rcrb
cwtl
jae
cld
movsb
push
and
sbb
mov
lods
xchg
mov
and
aas
insl
enter
dec
mov
scas
loop
pop
sub
sub
xchg
and
sahf
inc
in
fwait
sarl
cmp
shll
mov
xchg
lds
clc
push
pop
notb
mov
fwait
push
cmp
dec
push
inc
inc
xchg
jo
ficomps
push
jg
pop
mov
add
dec
add
fistl
dec
addr16
loope
or
jo
push
pop
xor
pop
mov
push
dec
or
sub
lret
and
adc
dec
xlat
add
push
push
fs
mov
popf
adc
jle
es
xchg
fisttpl
inc
loop
andl
sub
subb
dec
fs
ret
cmp
imul
testb
icebp
in
jg
xchg
push
xor
xchg
movsl
pop
dec
and
ror
pslld
int3
mov
mov
sub
clc
jns
fs
mov
cmpsl
mov
pop
mov
add
rcrl
jno
or
lcall
into
pop
in
or
test
push
cli
rorl
dec
mov
addr16
cmpb
and
je
sbb
sbb
push
rclb
push
xor
push
mov
jno
add
sbb
addr16
or
out
fmuls
pop
sbb
faddl
add
mov
inc
addr16
push
sub
popf
insl
pusha
movsb
sbb
pop
das
bound
shll
setbe
test
ds
imul
sbb
cltd
xchg
jnp
jg
or
xor
repnz
and
mov
sbb
outsb
repnz
mov
imul
clc
clc
sub
pop
sahf
sbb
mov
mov
sub
je
fadd
pop
cs
imul
and
loopne
and
leave
ffreep
out
push
cs
enter
push
push
add
test
sub
hlt
lods
jmp
xchg
pushf
dec
mov
inc
cmpsb
dec
mov
sub
push
push
inc
adc
stc
popa
cmc
fwait
hlt
mov
and
lahf
adc
shr
into
pop
xchg
mov
mov
pop
mov
pop
xchg
mov
or
pop
fs
and
fdivl
and
aaa
lret
push
sbb
js
inc
mov
iret
aam
add
or
push
push
pushf
addr16
daa
aad
cmc
cmpsw
xorb
jo
in
adc
inc
cmp
loopne
push
out
pop
sbb
push
daa
jo
pop
sarb
test
std
lret
push
cli
dec
xor
inc
cli
dec
inc
push
cmp
xchg
sbb
daa
push
adc
push
push
pop
sub
into
in
shr
nop
inc
lods
sbb
mov
xor
fcos
or
jecxz
fidivrs
sub
sbb
adc
or
push
lret
add
push
and
dec
test
pop
popa
mov
movsb
and
push
mov
cmp
add
xchg
cli
add
xchg
enterw
mov
divl
aas
clc
dec
jecxz
aad
jp
orl
loope
in
xchg
push
jo
lret
inc
orl
orb
pop
pop
add
xorl
jmp
test
jmp
xor
dec
lret
je
in
jp
pop
out
sub
sub
jg
mov
out
push
negb
clc
bound
push
sbb
aas
sti
jp
xchg
fistpl
lahf
jmp
mov
mov
call
mov
add
imul
push
mov
aad
mov
mov
dec
pop
es
push
popf
sub
pushf
xor
xor
jno
insl
repnz
push
or
jge
sub
or
and
jne
adc
sbb
lret
push
pop
push
or
sub
inc
cmpb
das
das
jecxz
lock
divb
addr16
sti
mov
lds
fmull
clc
ds
sub
cmp
lock
pop
shll
cmp
icebp
push
jb
stc
xor
fimuls
mov
mov
out
scas
cli
dec
mov
lcall
jnp
sti
sub
shrl
adc
pop
add
pop
jnp
rcrb
fdivrp
stc
es
pop
cld
xor
mov
push
push
fistps
daa
add
push
fcomi
and
test
push
and
push
fsts
je
jp
jne
jns
push
inc
flds
icebp
add
negb
jb
enter
push
shrb
mov
jge
ds
fs
mov
xor
lods
add
pop
adc
pop
inc
sub
and
aam
mov
lods
leave
pop
stos
sbb
push
loope
es
cmp
int
mov
lahf
outsb
in
inc
scas
sahf
mov
fs
jp
sub
jne
inc
hlt
jg
lds
roll
inc
rol
mov
xchg
jnp
or
fdivr
and
push
adc
movsb
call
mov
sub
or
fidivrl
sub
inc
xor
popa
sub
cmp
pop
pop
outsl
repnz
xchg
mov
push
imulb
in
sahf
adc
insb
dec
jge
jns
adc
pop
push
or
xchg
jmp
add
addr16
lods
sub
outsb
and
pusha
jge
stc
lcall
aad
into
push
jecxz
cmp
shl
dec
movsb
sbb
push
cmpsl
dec
das
lods
mov
mov
fsubrs
es
inc
repnz
mov
stc
inc
loopne
jno
repnz
stos
mov
lret
xchg
int
std
es
mov
or
cmp
sub
rcll
ds
out
mov
in
aam
mov
sar
fistps
fistps
sarb
test
rcl
test
push
add
sbb
xor
and
pop
cs
stos
pop
adc
mov
leave
push
cltd
xchg
and
fiadds
pop
pop
mov
cwtl
bound
mov
xchg
fucomip
jno
lea
jle
xchg
aas
call
cmpl
out
push
push
fadd
fsubr
in
shlb
mov
repz
enter
je
sub
scas
pop
test
dec
or
lds
jae
jne
mov
cmpsb
lock
sbb
push
mov
scas
dec
mov
add
lods
push
sub
lcall
lds
and
cmpsb
mov
mov
mov
rclb
mov
push
pop
mov
fcmove
xor
scas
mov
popa
add
leave
ss
das
call
or
or
stc
pop
add
xor
mov
sub
movsb
pop
sbb
and
sub
inc
xor
pop
mov
jns
in
std
xlat
push
inc
cmpsl
xor
cwtl
ss
mov
imul
adc
hlt
mov
dec
repz
xor
insl
inc
sbb
sub
test
jne
inc
out
and
adc
cmp
lret
fsubl
test
inc
sbb
and
mov
call
inc
mov
add
and
cmp
add
mov
jp
stc
fistl
push
xchg
xchg
dec
xchg
cli
sub
push
xor
les
orl
dec
dec
xchg
push
xchg
or
dec
adc
fmuls
jge
icebp
clc
and
sbb
fdivrl
and
mov
adc
push
lcall
inc
sbb
es
mov
or
fs
pop
popa
mov
xor
mov
and
push
shrl
popa
fs
loopne
jp
pop
jecxz
cmp
xor
outsl
mov
fiadds
pop
mov
repnz
out
cli
lahf
jo
jmp
lret
push
fldlg2
iret
jle
mov
xchg
pop
push
jns
shrl
add
mov
in
fmull
jnp
cwtl
ret
sbb
add
lea
enter
into
add
cmpsb
imulb
fsub
mov
cmpsl
lret
insl
repnz
ds
repnz
loope
pushf
mov
sbbl
and
shll
bound
inc
repnz
loope
or
jle
jmp
push
push
add
fwait
in
sub
cld
push
dec
push
and
and
sbb
nop
xor
adc
frstpm(287
mov
or
add
jp
ret
or
scas
mov
cmp
fcmovu
sub
inc
and
adc
arpl
and
sub
mov
add
sbb
sub
mov
jle
push
into
popa
iret
ret
fstpl
mov
jb
jecxz
xchg
and
hlt
lret
dec
loopne
lcall
daa
xchg
mov
push
cs
cltd
dec
fistl
mov
daa
add
fmull
or
loopne
addb
jp
inc
ljmp
das
rolb
out
repnz
xchg
out
out
add
push
adc
movsl
mov
and
xchg
leave
cmp
insl
mov
jne
pop
mov
xchg
or
popa
xor
mov
mov
pop
clc
in
sbb
mov
icebp
xor
push
add
cmp
fildll
dec
pop
cmp
lcall
fsubrl
imul
jmp
add
adc
mov
hlt
mov
inc
jmp
or
add
icebp
clc
mov
jmp
mov
imul
mov
xchg
push
lret
test
cmc
dec
iret
addr16
dec
and
leave
add
add
pop
roll
shrb
aam
xchg
mov
jno
sbb
pop
xor
scas
pop
daa
xchg
js
mov
into
xor
and
insb
mov
xor
pushf
jle
sbb
jle
pop
adc
mov
iret
fwait
cmp
cltd
inc
ja
jnp
addr16
imul
std
movsb
scas
push
and
clc
or
sbb
mov
rorl
flds
mov
mov
test
lock
cmpsl
jne
dec
or
pop
cmpsb
jle
ds
ds
and
xchg
jecxz
arpl
lcall
mov
fs
sbb
ds
push
mov
pop
sti
mov
mov
and
and
push
and
scas
adc
clc
pop
lds
pop
test
outsl
mov
repnz
xchg
in
aad
dec
sahf
mov
lods
ret
cmc
dec
xchg
sub
jns
sbb
dec
push
sbb
test
inc
sti
xchg
test
idivb
dec
mov
push
shll
jbe
call
sub
sbb
inc
pushf
fdivs
clc
inc
out
mov
and
push
ss
mov
and
sbb
mov
mov
sub
xor
out
aad
push
sahf
adc
mov
ret
shrl
aaa
ret
push
jb
pushf
pop
push
pop
fadd
pop
sbb
insl
sbb
jge
frstor
fisttps
mov
loope
je
sbb
stos
das
jo
imul
lcall
repz
repnz
sub
out
pop
cmpsb
imull
sbb
add
cmc
rcrl
cmp
xor
xchg
or
ficoms
add
lahf
ss
dec
and
pop
lahf
push
loopne
sub
popf
sbb
out
mov
rcrl
fsubrs
cmp
mov
rolb
xlat
push
sub
xchg
sbb
lahf
inc
aas
stos
xor
in
dec
mov
pushf
jle
and
cmp
adc
pop
xor
xchg
mov
add
loopne
mov
stos
push
int3
add
out
testl
sbb
inc
push
mov
testl
shll
cli
aad
int3
xchg
je
and
pop
push
aaa
sub
ljmp
sti
rcrb
and
stos
loopne
imul
les
or
dec
add
lds
aaa
fdivrl
mov
aad
sub
stc
dec
lock
mov
jb
js
xchg
icebp
out
les
cmpsb
xor
ficoms
jge
sbbb
es
movsb
mov
adc
inc
ja
and
inc
loopne
mov
rolb
loopne
pop
sub
sub
into
xor
sbbl
popa
xchg
hlt
inc
enter
ja
and
scas
call
or
sbb
stos
lea
push
pop
lods
imul
js
aad
sub
or
in
jnp
mov
jecxz
mov
or
jp
adc
nop
add
lret
and
icebp
add
mov
in
scas
outsl
in
stos
push
lcall
sbb
mov
das
imul
in
dec
xor
mov
xchg
imul
std
mov
inc
fwait
mov
jnp
dec
xor
dec
push
enter
cmpsl
call
and
xchg
into
cld
add
fninit
add
lea
outsb
or
imul
inc
xchg
xchg
pop
fcoms
mov
dec
mov
in
xor
xor
adc
dec
out
imul
jns
push
ds
jo
inc
sbb
mov
ret
push
insb
lret
or
push
xor
addb
fs
adc
xor
fs
jne
scas
pushf
push
and
or
push
cmp
inc
das
jo
or
push
movsb
inc
out
out
mov
push
imul
rorl
xchg
mov
out
fcomip
jp
cmpsl
cld
mov
or
mov
or
mov
popf
push
popa
inc
sbb
xor
shll
in
cmp
xchg
ret
sbb
push
mov
xchg
sub
clc
cwtl
jecxz
pop
aad
xchg
or
pop
stos
notl
lods
icebp
pop
add
pop
mov
stos
xchg
inc
fwait
xchg
jp
aas
insb
push
jmp
mov
xchg
movsb
popa
movsl
mov
and
mov
push
adc
inc
pop
and
mov
xlat
mov
pop
movsb
mov
es
insb
jmp
mov
xorb
push
cmp
lahf
push
jbe
pop
dec
int
dec
or
jecxz
jp
mov
and
adc
test
inc
cmp
in
mov
jge
push
or
cld
jo
out
adc
adc
movsl
fimull
jmp
sub
or
icebp
leave
xlat
or
sbb
cmp
mov
sub
pop
mov
leave
mov
test
ficomps
dec
sahf
movsb
mov
dec
pop
jmp
mov
sub
cli
popa
cmc
jg
inc
adc
sbb
sti
iret
fcompl
add
xchg
ret
add
mov
lock
mov
dec
icebp
popf
add
nop
out
cmovbe
data16
in
jae
leave
sub
ljmp
xor
iret
cmp
arpl
sub
sub
xor
mov
sbb
or
inc
in
scas
ret
bound
test
xor
out
fnsave
pop
cmpsl
adc
insb
adc
dec
pop
es
call
cmc
push
aam
inc
jb
movsb
sbb
scas
das
sahf
loopne
push
mov
loopne
lods
pop
mov
insb
mov
push
xor
jnp
xlat
loopne
cmp
es
mov
jne
dec
dec
inc
jg
movsb
inc
push
mov
push
pushf
ljmp
cmp
mulb
lods
sbbl
mov
xor
pop
push
xorl
cmp
xchg
push
xchg
dec
mov
or
dec
mov
es
add
shr
popf
xchg
or
idivb
and
iret
popa
add
aas
adc
or
jle
popa
fisubl
and
inc
scas
ss
movsb
xchg
add
sbb
lret
dec
out
push
outsl
std
pop
or
push
neg
aad
dec
mov
push
lods
inc
push
pushf
mov
xchg
push
pop
bswap
jno
adc
adc
mov
xchg
mov
sub
mov
sbbb
pop
adcb
rcll
insb
fcmovnb
jle
push
mov
rcl
jl
sbb
cmp
jl
fbstp
ret
gs
ret
xchg
xor
dec
xor
pop
push
test
arpl
adc
dec
repz
cltd
or
push
push
mov
adcb
lahf
sbb
mov
aaa
lahf
cltd
jge
sbb
push
mov
incl
xor
pop
cltd
flds
mov
movsb
push
jns
pop
cmpsl
mov
mov
and
pop
mov
fs
stos
stos
push
xor
test
fbstp
sbbb
cli
sub
mov
ret
je
int
fidivl
sbb
cmp
adc
into
pop
inc
sbb
add
xchg
mov
in
inc
cmpsb
fnsave
adc
shlb
mov
pop
ret
or
add
lahf
or
and
push
pop
aam
les
shlb
pushf
notb
adc
in
sbb
jbe
push
dec
lcall
mov
dec
rcrl
out
shrb
out
inc
je
scas
pop
sub
push
inc
aaa
add
push
out
subb
iret
js
and
and
mov
mov
fnstcw
lcall
out
adc
mov
fmulp
in
mov
lahf
pop
sahf
aam
or
sub
aad
xchg
sbb
xchg
lods
sbb
rcl
aad
rcrl
xor
push
xor
repz
ljmp
push
arpl
mov
mov
mov
and
jae
jecxz
ret
nop
mov
idivb
xchg
aas
jns
lret
test
cmp
jmp
scas
sbb
xor
sub
iret
bound
xor
xor
xchg
pop
sub
adc
xchg
fstpt
mov
ja
jg,pn
sub
mov
jle
cmp
push
shrb
mov
sbb
subb
push
mov
dec
lret
call
add
or
add
test
stc
or
enter
daa
jecxz
and
popfw
test
pushl
lods
shll
cmp
rolb
xor
lcall
mov
mov
jg
jl
mov
inc
mov
adc
mov
mov
adc
add
adc
fistps
add
sbb
fimull
mov
jnp
ss
xorl
popf
lcall
xchg
sbb
es
icebp
xchg
cli
lret
fcomp
hlt
ret
jp
xor
xchg
jge
jae
movsl
in
xor
loope
cltd
nop
pop
add
rcll
in
xor
popa
cltd
fsub
std
mov
jmp
push
int3
cmp
push
jae
adc
pop
mov
pop
pusha
or
jecxz
push
mov
inc
ret
push
mov
orb
xorl
xchg
stos
xor
outsl
push
enter
faddp
repnz
cmp
fdivr
push
xor
cmp
push
ja
stos
sahf
dec
mov
and
and
xor
loopne
sbb
xchg
jno
in
push
lock
int
pusha
mov
sbb
stos
popa
fldcw
test
arpl
aas
dec
push
cmp
daa
mov
dec
sub
add
imul
loopne
mov
adc
or
adc
and
js
lds
lcall
cmp
jb
lahf
sub
ja
sbb
icebp
dec
cmp
mov
pop
pop
andl
test
push
pop
out
push
xchg
inc
mov
negb
loope
xchg
insb
int
mov
cmc
dec
clc
sbb
jb
into
jb
loope
enter
incl
jne
add
jp
out
pop
pushf
pusha
jge
dec
stos
push
inc
lcall
int
adc
faddl
cwtl
sub
movsb
mov
cltd
sti
fimuls
sarb
insb
addl
inc
out
aam
in
repnz
dec
xorl
icebp
push
out
xchg
sbb
out
cltd
xchg
fadd
fiadds
lahf
push
mov
sbb
in
and
cmp
or
in
push
adc
shlb
out
movsb
or
xchg
insl
adc
adc
add
adc
pop
sub
test
sub
or
adc
add
pop
or
or
sbb
mov
xlat
notl
fdivl
fldt
dec
mov
adc
data16
cmc
jb
pop
test
jb
popa
cmp
iret
iret
loop
inc
test
pop
xchg
orb
insb
movsl
jne
push
pop
dec
cmp
inc
cmp
popl
daa
mov
lret
xchg
jbe
push
mov
je
cmp
dec
or
sub
hlt
bound
fisttpll
mov
pop
fildll
mov
cmc
add
jecxz
lret
lods
mov
flds
lret
and
ljmp
testb
mov
fisubrs
jp
repz
jbe
pop
cmp
or
ds
pushf
fldl
fstpt
sub
xchg
imul
popa
cmp
imul
cmp
inc
clc
mov
call
js
and
and
jns
int3
pop
or
popa
mov
int
xor
stos
out
lock
shr
mov
pusha
lret
into
jge
rcll
cmp
pop
push
jmp
mov
aad
jmp
xchg
popa
loopne
pop
xlat
add
push
jmp
movb
scas
sub
sarl
mov
in
dec
push
popf
psubusb
sbb
push
enter
scas
mov
sub
cwtl
fcmovnu
or
mov
daa
std
mov
in
xchg
shlb
mov
push
or
loope
hlt
sbb
inc
xor
mov
push
add
fwait
push
ds
mov
adc
adc
outsb
or
mov
mov
scas
add
mov
mov
lahf
or
mov
and
outsl
popa
mov
push
loope
pop
cmp
or
or
sbb
pusha
sti
lret
ret
clc
repnz
inc
push
push
inc
pop
pop
jl
test
mov
pop
std
pop
sub
xchg
mov
sahf
mov
stos
ret
clc
dec
arpl
cmc
xchg
clc
xor
adc
int
push
bnd
xchg
cmp
dec
push
inc
jb
rcl
pop
pop
xlat
cmp
pushf
lea
lea
movsl
push
fcmovnbe
fstl
movsb
iret
pop
stos
mov
push
cltd
out
lock
cmpl
jmp
cltd
das
jl
imul
fcom
xor
pop
decb
jle
dec
sub
loop
stos
mov
call
repz
or
sbb
or
test
bound
jl
int
and
xor
into
jge
lcall
sbb
andb
jg
inc
test
dec
push
lahf
lock
pop
cld
gs
xchg
fstpl
xchg
jl
frstpm(287
mov
enter
dec
pop
add
mov
inc
lahf
fdivl
lret
icebp
addr16
in
movsb
jmp
fs
mov
es
lcall
out
and
nop
and
and
cs
cmp
and
jne
xor
orb
lds
call
out
lcall
add
imul
and
cmp
cmpsl
pushf
jo
fs
add
push
gs
jns
inc
mov
mov
xchg
jb
outsl
jle
aam
std
fs
imul
sbbb
mov
inc
es
cmp
lret
out
popf
sti
rcll
and
popf
cmpsl
in
mov
mov
leave
sbb
gs
mov
mov
mov
loopne
repz
inc
adc
fildll
lahf
mov
fnstcw
arpl
pop
lock
loop
icebp
push
push
sub
pop
cmp
adc
cli
loope
bound
pop
clc
sbb
imul
es
call
sub
mov
data16
sbb
loope
out
mov
dec
xor
add
mov
into
stos
sub
push
sub
ficomps
movb
add
rcrb
pushf
sub
or
and
push
lods
pop
cld
adc
mov
add
mov
into
fsubrp
sbb
jnp
out
iret
fbld
call
sub
cmp
cs
divl
sub
push
scas
push
jne
cmpsb
adc
adcb
sbb
jecxz
js
jle
clc
inc
mov
mov
pop
push
or
movsl
fsts
loopne
pop
push
outsb
xchg
xchg
xlat
jecxz
mov
mov
les
xlat
mov
jbe
hlt
sbbl
jb
mov
test
rol
mov
mov
aad
insb
cmp
rorb
mov
fbstp
iret
sub
mov
ss
sbbl
hlt
cmpsl
mov
add
pusha
pushf
lahf
in
outsb
clc
inc
into
imul
sahf
cmp
push
cmp
clc
insb
rol
frstpm(287
dec
or
out
test
insb
mov
stos
cltd
mov
outsl
les
test
push
ja
cmp
ds
sub
subl
int
inc
sub
je
inc
leave
adc
pop
aad
lods
test
cs
in
cli
inc
add
inc
mov
ficoml
fs
clc
cmp
fisubrl
sub
and
cmpsl
cmp
repnz
in
xor
add
pop
cld
call
bound
mov
ret
cmp
xchg
cmpsl
pop
cmp
push
jmp
jle
arpl
sahf
or
jecxz
std
out
lcall
das
cs
aam
mov
insl
incb
dec
call
mov
loope
clc
dec
out
push
andb
and
aaa
lock
pop
ret
cmpsl
outsl
dec
mov
pop
movsl
movsb
or
pop
mov
dec
es
jecxz
pop
stos
nop
sbb
outsl
xor
push
mov
jmp
jge
inc
inc
or
mov
test
mov
scas
pop
loope
xchg
jae
popf
adc
cmp
cli
xchg
sti
adc
out
lcall
xchg
mov
jecxz
adc
leave
std
shr
push
jmp
adc
xchg
sbb
adc
mov
mov
pushf
push
inc
dec
jg
fdivrp
shll
sub
inc
idivl
mov
out
outsl
repnz
rcr
mov
cmp
int3
sbb
popa
cmp
xchg
push
outsl
pop
cmp
pop
popa
fdiv
mov
and
mov
call
ds
fsubrs
in
mov
aas
or
xchg
std
add
dec
out
xchg
adc
lret
fwait
cmp
inc
inc
andb
sti
shr
jge
cli
frstor
pop
jp
and
les
add
push
adc
divb
jmp
sub
jnp
fdivrs
push
mov
or
pop
mov
push
sbb
jno
or
enter
stos
inc
lcall
mov
into
sub
shlb
sbbl
enter
push
pushf
ud2
cmpb
stos
dec
int3
adc
dec
xabort
push
sbb
push
data16
sarb
mov
mov
sub
and
mov
and
into
push
pop
test
imul
jne
iret
mov
cmp
pop
jae
jl
lea
icebp
cli
ret
push
sub
inc
mov
push
leave
out
and
inc
pop
sbb
cli
xchg
notb
cmc
ret
scas
xor
sbb
lods
mov
std
out
mov
cmpsb
sub
cmp
movsb
or
cmc
jnp
add
xchg
mov
mov
sub
out
lahf
dec
lahf
xchg
xor
iret
out
sti
mov
pop
mov
ficompl
rcr
sub
inc
loopne
xor
dec
fdiv
push
data16
pop
popf
mov
divb
dec
push
leave
nop
xchg
ljmp
adc
in
push
push
adcb
pop
sub
mov
xor
aad
insb
nop
aaa
std
notb
adc
inc
lock
cmpsl
aaa
popa
in
ret
js
mov
in
inc
sub
fstl
andb
test
in
push
pop
je
mov
sbb
xchg
xchg
lods
enter
push
repnz
add
mov
ja
fsubrl
or
cmpl
fadd
leave
push
pop
jmp
stos
jns
adc
push
mov
mov
cmp
ja
bound
std
cmpsb
pop
sub
test
or
js
sbb
sarb
cmpsl
repnz
and
xchg
dec
cmpl
mov
aas
movsb
cmp
insl
pop
sub
test
add
repz
sti
lods
cmovne
sbb
xchg
pop
sbb
sub
int3
enter
or
cli
jl
mov
nop
add
inc
das
pop
rorl
cltd
ror
divl
outsl
int3
ffree
push
push
in
inc
aad
jge
push
inc
out
add
sbb
daa
rorl
mov
sbb
and
sbb
push
mov
das
pop
int
adc
insb
insl
adc
xlat
fwait
sub
dec
das
pop
xor
dec
fwait
and
in
mov
mov
dec
cmpsb
push
pop
push
insl
and
xchg
cmp
xor
sub
je
cmp
or
out
dec
jbe
inc
adc
inc
push
stos
testl
jl
mov
inc
mov
adc
ljmp
testl
ret
mov
mov
rclb
mov
fucomi
mov
xchg
loop
dec
pop
lods
ret
jb
fists
sub
lods
rcll
jb
lahf
sbb
outsl
push
jns
out
ss
cld
adc
inc
call
in
mov
jle
gs
dec
dec
bound
lods
jae
mov
adc
icebp
mov
ljmp
in
pop
sub
in
lock
push
sarb
inc
and
jbe
out
push
data16
popf
sbb
xchg
outsl
and
pop
sar
ds
and
sbb
fisttps
orb
mov
movlps
sahf
lret
cmpsb
leave
or
rolb
push
mov
hlt
jecxz
sbb
pop
cltd
les
mov
mov
mov
divl
mov
rcrb
out
sbb
mov
lret
xchg
rcl
fdivrs
incl
ret
xchg
sub
pop
mov
inc
shlb
movsb
sub
repz
mov
outsb
mov
or
fidivrs
mov
inc
cmp
sbb
cmp
push
int3
mov
imul
and
sub
jae
cld
cmpl
cld
ficomps
pop
in
jmp
or
cmpsl
xchg
cmp
inc
mov
jmp
cli
pop
push
outsl
push
cmp
dec
int3
dec
jg
inc
add
in
mov
mov
and
jecxz
cmpsb
mov
xchg
fildll
je
xor
imul
cld
aad
add
lcall
mov
jnp
mov
stos
inc
scas
orl
mov
movsl
cmpsl
cli
int3
jp
xchg
xchg
mov
mov
sub
out
jg
lret
xor
outsb
inc
loopne
ret
mov
jl
mov
out
nop
imul
adc
fdivrp
mov
ret
scas
jb
xorl
xor
dec
mov
in
movsl
mov
dec
cmpsl
fyl2x
mov
scas
jge
or
pop
aam
jecxz
imul
cwtl
loop
add
insl
add
repnz
lock
negl
addr16
lods
jbe
sbb
mov
mov
test
sbb
dec
inc
clc
addr16
fistpll
in
call
stc
pop
mov
push
dec
aaa
xchg
divb
or
aad
pop
mov
pop
insl
insl
shll
jns
and
push
sub
aas
cmpl
adc
pop
lods
daa
cli
int
xor
push
out
insl
mov
fsts
movsb
cmp
rcrb
jmp
cmp
push
das
lock
mov
add
stc
popa
mov
js
lret
and
push
cmp
sbb
dec
aaa
sbb
lret
mov
les
xchg
push
loope
cli
test
popl
stc
out
push
add
call
sbb
lahf
push
inc
scas
in
mov
in
sbb
xchg
push
mov
es
jae
sub
pop
loopne
jle
dec
subl
mov
aas
xchg
mov
mov
pop
pusha
xchg
outsl
jae
vfrczpd
add
stos
gs
mov
bound
daa
inc
push
ss
mov
xor
dec
inc
lds
ds
pop
add
ret
or
mov
dec
gs
mov
or
test
dec
mov
fdivrs
mov
dec
jp
std
imul
nop
jnp
lods
cmp
push
cmpsb
into
and
loop
ljmp
jne
xchg
fnstcw
cmpsl
xchg
push
sub
js
and
xchg
adc
jge
adc
mov
jbe
mov
sti
ror
mov
xor
sub
xchg
inc
pop
sub
jae
sbb
mov
xor
pop
xorb
xchg
clc
adc
dec
mov
repz
je
fcompl
sbb
cmpsl
xor
sub
stc
das
clc
stos
jmp
sub
pop
xchg
jns
fwait
adc
push
mov
pop
pop
rcll
mov
shll
adc
inc
ja
add
add
lcall
jle
shll
rolb
dec
push
lea
loopne
movsl
ja
jl
adc
clc
adc
jg
into
lods
insb
icebp
jo
arpl
inc
jmp
negl
addr16
popa
push
sbb
fisttps
jns
push
push
fsub
js
cmpsb
orb
lahf
popa
cs
repz
lock
pop
je
jns
mov
mov
scas
sti
mov
fcomps
into
repz
repz
shll
mov
pop
mov
sbb
dec
push
jl
fdivr
adc
imul
xchg
inc
jne
inc
adc
loope
push
icebp
mov
popf
aam
dec
xchg
lock
out
in
rorb
add
mov
jnp
filds
mov
pop
mov
test
mov
sub
xorb
mov
push
ds
movsl
sahf
clc
insb
notl
cld
sub
nop
int
outsl
hlt
cmp
jb
xchg
xor
jno
dec
push
mov
jmp
xchg
and
cld
cwtl
jg
xchg
pop
or
and
and
mov
aad
jl
push
enter
sub
pop
dec
arpl
mov
pushf
subl
dec
movsl
xchg
adc
ror
xchg
std
je
je
xor
mov
pop
sbb
jnp
ret
mov
pop
in
sbb
push
aaa
add
xchg
sub
rcrl
xchg
aad
sbbb
and
adc
cmpl
mov
fwait
sub
xchg
xlat
or
lret
mov
xchg
testl
xchg
pusha
or
dec
sub
adcl
xor
pop
add
pop
mov
adc
inc
fldl2t
sub
mov
add
sub
or
inc
rcrb
movsb
and
mov
lcall
imul
adc
mov
sbb
movsl
pop
sar
cs
pop
adc
cmpsl
loope
jb
test
adc
nop
mov
int3
xchg
jg
jecxz
or
test
cmp
lret
pop
fwait
xor
sbbb
adc
popf
in
pop
mov
pop
xchg
xorl
fdivp
int
std
xchg
xchg
shrl
sub
xchg
push
inc
lds
fucomp
loopne
jne
mov
pop
js
movsl
mov
gs
lret
mov
frstor
jmp
add
iret
sub
pop
dec
or
notb
loop
xchg
test
gs
insb
stos
mov
sub
je
and
ljmp
cmpsl
test
enter
mov
and
test
test
push
xchg
and
stc
pop
adc
cmp
pop
addr16
xchg
jp
adc
filds
cmpsl
push
mov
cmp
movsb
int3
ret
inc
mov
push
pop
std
in
push
dec
jb
std
popa
ret
leave
dec
sub
sub
in
pop
mov
rcl
push
andb
out
inc
fsubl
iret
adc
adc
jl
rolb
outsb
xlat
lahf
movsb
mov
xchg
fdivl
les
pushf
or
lods
aas
cli
dec
pushf
cmc
and
add
and
adc
jns
daa
ja
mov
out
xor
outsl
popf
dec
and
gs
aam
mov
test
mov
mov
fsubrs
sbb
xor
leave
lret
out
shlb
or
xor
mov
xchg
push
mov
adc
insl
sub
lea
push
pop
inc
mov
dec
clc
cwtl
add
lds
in
out
idivl
in
cld
popw
test
cmp
sahf
mov
mov
mov
inc
test
sbb
adc
sbb
sbb
fists
int3
mov
jo
cmc
scas
ret
rep
filds
inc
cmp
cmpsl
inc
jbe
and
xor
scas
pop
push
hlt
lods
cmpsb
stos
add
and
movsl
fcompl
out
sub
lea
sub
adc
mov
mov
lods
mov
and
fimuls
je
dec
imul
lahf
hlt
arpl
dec
push
int
fs
mov
adc
sub
in
cmp
aas
sub
pushf
add
roll
inc
xlat
jnp
mov
add
repz
out
sbb
push
cmc
lods
mov
test
pop
out
test
scas
lock
fwait
enter
popa
mov
into
out
xchg
lods
xor
mov
std
inc
lds
lcall
cmp
enter
or
les
daa
adc
rorl
or
stos
pop
xchg
mov
adc
inc
pop
cmp
inc
loope
xor
mov
pop
jg
outsl
cmp
mov
out
lahf
icebp
pushf
andl
nop
sbb
and
je
aas
mov
mov
repz
imul
pop
cld
jae
arpl
mov
nop
imul
inc
sbb
mov
lods
out
mov
add
loopne
jmp
sbbl
push
mov
dec
sub
and
les
xchg
inc
push
mov
cmp
out
aad
ds
cmp
js
or
push
xchg
and
stos
loop
push
adc
sbb
inc
cmp
cmp
xor
loopne
adc
sub
aad
jnp
stos
xlat
out
sub
adc
out
xchg
notb
xchg
xlat
js
cmp
mov
push
fcoml
sub
push
arpl
cld
jle
mov
sti
in
inc
mov
out
rorl
and
sub
or
mov
jmp
or
jno
aaa
mov
add
loope
add
inc
xor
je
mov
cmpsl
xchg
shlb
mov
pop
cmp
inc
lret
add
lock
jae
lahf
int3
jns
cltd
add
scas
cmp
lret
cmp
push
add
loope
cmp
mov
shrb
push
dec
xchg
sti
mov
cmp
iret
out
hlt
xor
pop
and
inc
lcall
insl
fisubl
xchg
call
pop
inc
cs
call
das
adc
insl
jecxz
inc
dec
inc
movl
and
jo,pt
shlb
les
fldenv
jge
inc
xchg
xchg
les
push
insb
push
call
xchg
andb
pop
push
push
mov
push
push
adc
xchg
sbb
and
xlat
mov
mov
xchg
out
rcrl
or
rorl
repz
cmc
xor
dec
and
mov
jns
mov
pop
movsl
push
scas
push
mov
lcall
add
sbb
dec
enter
mov
sbb
les
inc
dec
mov
inc
mov
mov
pop
or
in
cmpsl
inc
adc
repz
and
xor
int
jl
or
adc
cmp
insl
inc
sysret
setl
lret
stc
jb
push
push
add
xor
xchg
das
sbb
sub
dec
out
and
mov
push
lcall
sbb
lods
dec
hlt
fistpl
cwtl
aad
pop
fnstcw
xchg
mov
xchg
fxch
jo
es
sbb
out
jmp
sahf
pop
bound
ficoms
and
scas
jecxz
cltd
lock
loope
repz
ljmp
push
sbb
addr16
aam
arpl
pop
xor
div
mov
mov
adc
sub
mov
pop
mov
cmp
out
mov
mov
out
mov
movsl
cmp
adc
dec
xchg
call
test
and
mov
pop
outsl
ret
adc
pop
jl
sub
insl
inc
and
nop
mov
loope
cmp
sbb
pop
push
mov
xchg
cmp
pop
fwait
mov
es
xor
outsb
fdiv
aam
xor
sbb
dec
ret
and
mov
inc
mov
jl
outsb
jae
and
cmp
dec
in
fisttpll
loopne
jae
or
rcr
cmc
dec
ret
arpl
xchg
mov
int3
pop
scas
in
mov
lcall
les
or
test
ds
push
mov
and
cli
lods
enter
adc
and
call
gs
inc
lcall
loope
shlb
inc
dec
cwtl
call
jns
sbb
shrl
jnp
xor
or
push
pop
lods
mov
aam
in
xchg
imul
lods
jl
stos
pop
or
clc
dec
lods
call
div
ljmp
adc
push
lds
std
call
pop
mov
and
jae
cmp
outsl
jbe
das
clc
lret
lods
cmp
dec
add
xor
ret
add
mov
push
cmp
int
insl
push
sti
xor
or
inc
sub
add
xchg
xchg
adc
inc
fisttps
test
iret
into
jge
jmp
mov
mov
jns,pn
and
dec
pop
and
mov
pop
jle
pop
test
jmp
fisubl
jne
inc
cmp
xchg
and
jbe
loopne
fisubrs
dec
mov
ficoml
jo
out
popf
dec
in
in
aam
mov
cwtl
call
xchg
dec
popa
outsb
cmpsb
dec
lcall
push
inc
out
call
lcall
add
int3
mov
and
push
push
cli
icebp
xor
jmp
es
cmpsl
addr16
dec
pop
in
sbb
fildll
imul
jno
xor
pop
mov
jecxz
and
into
jne
lret
pop
dec
push
mov
inc
mov
imul
pusha
js
movsb
inc
xor
and
mov
sub
test
push
sbb
pop
icebp
into
jnp
sbbl
adc
cli
fcoms
xchg
mov
mov
push
ds
or
shrb
jmp
in
add
push
and
clc
xor
jb
sbb
out
add
adc
jmp
mov
dec
lcall
pop
add
les
and
pop
cmp
cltd
lods
mov
orb
mov
in
je
out
sarb
lahf
aaa
jle
xchg
lret
loopne
fdivrl
add
lcall
repz
push
ret
mov
vrcpss
and
loopne
dec
push
add
sbb
xor
les
testl
cmp
cmc
fst
or
mov
jo
mov
inc
popa
cmp
pushf
xor
imul
test
mov
jl
xlat
and
push
aad
lcall
popa
arpl
jle
push
jp
adc
sbb
xchg
or
sub
sbb
ljmp
mov
flds
add
cwtl
inc
jp
outsb
and
push
sti
mov
divl
ss
test
push
stos
ficomps
sub
push
adc
adc
xlat
icebp
sbb
cmpsl
imul
ljmp
movsb
out
xorb
xchg
sti
push
fisubrs
dec
lods
out
cmp
pop
mov
mov
mov
pop
les
push
mov
or
cmp
add
popf
ret
shll
mov
pcmpgtd
push
and
cmpl
imul
mov
xor
mov
icebp
scas
daa
sub
shll
pushf
ja
ds
shrl
mov
dec
in
inc
push
adc
add
inc
rclb
mov
jmp
stos
out
xchg
mov
sbb
cmpsb
mov
out
sub
cmp
loop
add
adc
ja
ret
addr16
gs
push
loope
shlb
imul
cltd
and
in
mov
xor
pop
mov
push
push
xchg
mov
adc
mov
les
jae
inc
xchg
cs
cwtl
inc
and
dec
sbb
out
ja
jnp
inc
sub
jne,pn
and
mov
push
pop
lods
movsb
std
sbb
pop
aam
aad
pop
sbb
inc
push
xor
std
jge
inc
dec
mov
jp
icebp
int3
icebp
push
fsubrs
es
mov
ss
out
mov
dec
in
cmpsb
mov
orb
lods
cmp
popf
shrb
dec
mov
ret
stos
jns
int3
pop
scas
fstl
jl
sbb
sbb
lea
arpl
push
leave
mov
or
imul
in
mov
sti
jp
adc
pop
scas
lcall
insl
cmp
aad
mov
push
aam
push
cmp
sti
loopne
or
jb
stc
nop
lods
inc
xchg
aas
aad
imul
mov
adc
adc
jmp
out
fldenv
cwtl
pop
pop
ret
add
xchg
cmpsb
jne
jbe
lcall
mov
or
dec
cmp
jo
test
xchg
outsl
cmpsl
add
sbb
jle
ss
ret
ds
sub
cmp
xor
popl
iret
sar
lcall
mov
shll
mov
stos
xchg
dec
js
xor
lahf
fdivr
cmpsl
push
fmull
in
leave
inc
pop
sub
getsec
js
mov
shrb
les
jnp
sub
lret
iret
adc
and
xor
lds
int3
adc
je
mov
into
mov
cmp
jl
lds
iret
pop
mov
adc
outsl
sub
or
cmp
test
add
fisttpll
mov
out
inc
in
loope
jmp
push
add
call
mov
push
xchg
cmp
mov
and
aad
lahf
or
mov
dec
xor
aam
mov
movsl
jl
push
rcr
dec
xor
cmc
and
iret
shrb
daa
lods
lods
mov
or
sbb
iret
shl
insb
and
or
orl
sub
jne
movsl
push
adc
mov
outsb
lock
pop
sub
add
inc
cs
js
jle
xchg
jmp
fnstenv
sbb
mov
cmpsl
stc
inc
shl
and
test
dec
add
enter
cwtl
mov
sbb
aad
lds
fdivrs
je
scas
adc
jae
jae
sub
gs
addr16
xor
pandn
xchg
cld
fldl
lcall
xchg
ds
pop
inc
xor
das
ret
mov
or
outsl
inc
std
and
adc
dec
inc
in
je
inc
outsl
xchg
mov
xchg
xor
fsub
pop
fidivs
mov
shlb
cli
push
push
xchg
dec
loop
mov
icebp
aad
fstl
push
mov
cmp
jo
shlb
sub
jmp
sbb
das
decb
sub
fimull
out
into
sti
inc
fdecstp
mov
jmp
mov
xchg
shr
adc
push
aad
pop
out
out
iret
push
and
push
jno
popf
lret
xchg
pop
pop
push
add
jmp
dec
push
sbb
bound
pop
dec
lahf
sub
jno
cmpsl
push
shl
push
lcall
jmp
fbld
sbb
rcl
mov
ja
imul
xchg
cli
lret
mov
sbb
sbb
xchg
test
jmp
jmp
clc
fisubrs
dec
mov
es
and
mov
stc
in
scas
orl
test
jle
clc
cli
out
mov
mov
popf
ret
pop
test
jg
jnp
push
and
arpl
cltd
adc
test
sti
xchg
push
mov
movsb
lods
les
or
roll
imul
mov
repz
cmp
jne
sbb
push
ja
pop
repnz
sub
jl
inc
int3
stc
push
loop
mov
dec
fbstp
push
rclb
sub
lods
aaa
add
ja
jno
jne
cld
mov
or
pop
mov
or
jnp
arpl
cmc
push
mov
cli
ljmp
out
jne
inc
push
or
adc
cmpsb
rorb
in
pop
ss
cmpsl
fwait
out
xchg
push
call
and
repz
pop
loopne
in
and
and
cwtl
ja
mov
lds
ret
fwait
stos
adcb
pop
cltd
mov
test
push
jg
fcomps
push
push
xlat
push
push
in
sbb
scas
notl
mov
sbb
fsts
mov
ja
mov
push
cmpsl
inc
roll
jp
mov
inc
pop
pop
bswap
test
fcompl
cli
adc
cmp
pop
xor
test
ja
push
xor
mov
inc
pusha
push
push
dec
inc
xor
add
inc
mov
aad
pop
jmp
scas
mov
cwtl
push
xchg
scas
mov
in
mov
loope
and
push
aaa
rol
leave
mov
arpl
lret
xchg
imull
and
orl
add
xchg
punpcklwd
pop
or
inc
pop
popa
mov
push
and
popf
mov
adc
mov
add
push
adc
ds
push
sbb
pop
cmp
cmp
push
or
insb
xor
pop
emms
test
cmpsl
popa
sahf
inc
pushl
pop
ss
sub
mov
fnstcw
roll
mov
add
sbb
cld
rorl
mov
xor
dec
push
adc
rcll
in
lods
fs
dec
lds
fildll
jp
fsts
fistps
repz
xorb
data16
cwtl
imul
push
mov
push
jl
adc
jne,pn
addr16
ret
sarl
add
adc
int3
rorl
dec
push
inc
and
jge
aad
adc
inc
dec
inc
mov
inc
jp
subb
andb
pop
mov
mov
aad
mov
aaa
xor
aaa
out
sub
punpcklbw
mov
sbb
push
es
out
adc
xchg
lret
and
jmp
sub
mov
adc
adc
insl
xor
addb
cmp
xchg
and
fisubrl
sub
popf
mov
cmp
into
xchg
lret
pop
xchg
loope
fwait
xchg
leave
xor
stc
mov
or
add
push
or
mov
cmpsb
dec
jnp
popf
sbb
sub
cmp
mov
ja
and
or
push
xchg
gs
enter
mov
testb
out
or
pop
shr
push
test
jnp
aad
imul
cmc
sbb
mov
sbb
or
mov
dec
adc
fisttpl
or
outsl
xchg
imul
jge
into
imul
arpl
mov
pop
imul
in
cli
sbb
cs
sbb
ljmp
clc
and
mov
or
test
fnstcw
push
push
push
inc
stos
add
pop
lret
lods
aas
repnz
ds
shrb
arpl
repz
insl
mov
mov
mov
sarl
lock
cmp
mul
mov
in
into
mov
push
pushf
inc
mov
cld
add
call
inc
ljmp
mov
aas
lds
add
cld
repnz
sub
or
sbb
dec
sbb
mov
sbb
adc
jmp
cmp
rcr
int3
cmp
movsb
add
push
lret
icebp
loopne
xchg
roll
das
sbb
xchg
sbb
es
fwait
loope
mov
jb
or
mov
jle
jle
rorb
xchg
icebp
ret
int
mov
or
das
rorb
das
push
adc
xchg
fwait
jo
dec
mov
or
insl
mov
pop
js
dec
out
push
xchg
loope
cmpsb
call
jmp
inc
or
cld
xchg
xchg
xor
push
loopne
xorl
dec
ror
xchg
or
aas
mov
or
shrl
sbb
enter
xor
fs
lock
pusha
mov
stos
inc
and
mov
repnz
test
inc
cmp
clc
jle
out
mov
aas
addr16
lret
test
sbb
push
xchg
pop
push
pop
sbb
adcb
cmpsb
inc
inc
test
jne
loope
addl
push
mov
leave
in
dec
pop
dec
sub
orl
pop
mov
push
mov
dec
or
outsb
js
lcall
and
mov
push
call
enter
push
jae
call
leave
push
add
jno
push
shlb
sub
neg
inc
lret
inc
and
cmp
testl
push
add
push
mov
fs
xor
incb
pop
sbb
xchg
mov
dec
and
adc
gs
stc
adc
pop
jno
shrb
mov
imul
jnp
mov
insl
fwait
cmpsl
rolb
in
cmp
mov
lcall
mov
cmp
adc
sbb
imul
sub
mov
decl
cmpsb
mov
cmpsl
and
pop
mov
iret
sbb
test
jg
cmp
lret
cld
cmc
popf
sbb
stos
ds
jbe
pop
push
leave
add
pop
adc
andl
fidivs
das
adc
shll
sbb
gs
shrb
imul
push
push
push
inc
fs
divl
popa
cld
lahf
sahf
mov
jnp
test
pushf
and
inc
lret
adc
mov
popf
xchg
xchg
pop
pop
lahf
imul
add
bswap
push
or
outsl
lahf
aam
divb
test
in
sub
out
or
mov
cltd
cld
sub
xor
bound
lods
cmp
fisubrs
xchg
adc
mov
cmp
into
outsl
xchg
sbb
test
xchg
out
sub
clc
in
or
cmc
cltd
sbb
lods
jge
sti
test
sub
mov
adc
jmp
mov
out
xor
mov
mov
push
fiaddl
cltd
mov
std
push
cmpsl
jle
ss
pop
popf
add
in
xor
daa
push
clc
or
dec
les
mov
pop
add
cmc
icebp
loope
add
push
jae
push
mov
xor
lret
pop
fnstsw
repnz
mov
mov
addr16
lods
sahf
ror
cwtl
add
add
js
cmpsl
repz
les
jo
cs
shlb
daa
xchg
add
xchg
mov
ret
scas
iret
mov
ret
sub
sahf
mov
bts
xor
sub
shr
gs
aad
cli
dec
or
jb
cld
xchg
pop
cmpsb
imulb
adcb
jp
xchg
add
fdivl
cmp
ret
xchg
xchg
cmc
lods
lods
stos
sbb
cmp
mov
ret
xorl
mov
cmp
pop
fld
in
push
lods
xchg
mov
arpl
dec
fs
nop
push
xchg
adc
std
in
xchg
scas
or
add
fsubrl
imul
shll
jno
push
into
push
fwait
xor
rolb
jo
pop
fimuls
jae
adc
pop
in
mov
pop
les
jb
xor
push
push
lret
xlat
xor
lret
movb
insb
orl
in
mov
xlat
add
mov
mov
sbb
cltd
inc
lock
mov
lret
push
rolb
rorl
int
aaa
sub
ret
mov
cltd
scas
dec
push
and
jae
cli
out
daa
jno
cmp
rolb
jae
into
xchg
cmc
lods
test
sub
push
pop
aad
out
dec
push
jbe
push
pop
lcall
cmp
ds
lret
push
xchg
fisubs
adc
imul
push
mov
push
and
add
pop
fdivrl
jb
lods
pop
nop
xorl
push
add
dec
fstl
adc
sahf
pop
sbb
fneni(8087
cmp
hlt
mov
rcr
dec
scas
adc
dec
fsubp
sbbl
cmp
xchg
sub
lods
scas
or
subb
sar
rcr
inc
lods
mov
dec
sub
lret
out
push
add
dec
pop
leave
rcr
clc
and
outsb
jle
and
loop
mov
jbe
out
jl
jb
jp
inc
and
scas
call
test
xchg
jg
mov
enter
mov
xor
cmp
cmp
mov
push
xchg
shr
ret
or
mov
or
push
leave
cmp
lcall
loope
cmpsl
inc
mov
sub
mov
notb
test
stos
sbb
idivb
rolb
stc
in
xchg
inc
xchg
mov
shll
scas
mov
es
cli
pop
addr16
mov
mov
repz
daa
enter
mov
mov
push
mov
lret
push
xchg
jmp
xchg
rolb
add
bound
cmp
dec
xchg
ret
jb
add
test
leave
dec
mov
mov
sub
mov
sti
lahf
mov
sahf
ret
js
and
aad
rolb
daa
lahf
lahf
cltd
lahf
inc
rorl
in
sub
push
add
clc
adcl
in
out
mov
mov
outsb
sub
push
filds
xor
popa
xchg
mov
clc
aad
jg
lret
inc
add
stos
clc
jle
cwtl
xchg
hlt
jo
lahf
cmp
into
add
jno
call
sarb
rclb
neg
jno
jbe
push
jno
sbb
pop
leave
pop
ljmp
adc
jno
cmp
jmp
xchg
push
pop
aaa
aad
and
loope
push
aaa
jnp
jns
add
mov
cmc
scas
mov
scas
fidivs
xor
lods
jbe
insl
xchg
and
push
dec
fdivrs
je
sub
inc
es
pop
bound
dec
movsl
jl
cmpl
jle
mov
lds
fimull
imul
mov
test
adc
jecxz
lahf
cmp
mov
movsl
inc
mov
and
pop
and
mov
or
mov
stc
cmp
pop
cmp
test
xchg
mov
outsb
icebp
aaa
in
push
jb
lahf
incl
mov
out
repz
enter
mov
cltd
xor
xor
pcmpgtw
adc
adc
xorb
xlat
mov
dec
and
push
imul
shrb
xor
and
cmpsl
mov
adc
mov
xchg
adc
cltd
ss
ds
mov
pusha
dec
enter
ret
xor
sbb
cmp
dec
add
or
pop
lret
jecxz
push
mov
push
sub
xor
out
sbb
inc
repz
xchg
fisubl
mov
cmp
shl
jae
or
xchg
mov
cmp
or
adc
cmc
push
sbb
pop
pop
inc
pusha
rcll
or
ret
pop
jecxz
mov
add
sub
push
or
call
and
mov
jb
xchg
mov
add
je
inc
cmp
jno
imul
fsubrs
dec
iret
push
clc
or
out
xchg
cmpsb
out
enter
sub
add
cs
mov
ds
mov
sahf
add
push
dec
sbbl
aas
cmp
pop
mov
and
mov
sbb
gs
addb
pop
out
mov
inc
movl
cli
je
out
pop
jb
mov
jne
pop
mov
push
pop
inc
jnp
sub
jno
flds
and
or
movsb
inc
jl
push
and
pop
and
jb
mov
jge
stos
pop
sub
add
mov
mov
inc
aad
xchg
es
push
scas
mov
cs
testb
mov
inc
pusha
inc
cmpsb
inc
dec
movsl
push
jo
push
into
sub
popa
jmp
dec
sbb
inc
lcall
test
sub
pop
cmp
jg
in
ljmp
adc
xchg
mov
jmp
andl
jecxz
rcll
addr16
cmp
push
in
loopne
or
subb
repz
cmpsl
mov
ljmp
sbb
jl
lcall
jnp
scas
and
xchg
mov
pop
inc
sbbl
push
cs
aaa
scas
mov
pop
iret
cmp
cmc
sbb
adc
xor
xchg
into
mov
sub
xchg
mov
push
jle
movsl
mov
cmpsb
and
stc
iret
mov
add
ljmp
xor
cmp
pop
xor
jge
xchg
adc
ds
mov
sbb
xor
test
js,pt
jp
insl
push
mov
movsl
dec
cmp
cwtl
fdivl
adc
stc
mov
mov
ret
mov
negl
cmp
movsl
divl
jnp
lock
shrl
lds
pusha
mov
jp
ljmp
add
sbb
pop
xchg
push
dec
call
lahf
je
leave
fsub
xor
adc
ss
lcall
inc
adc
dec
xchg
nop
inc
aas
xor
popa
push
clc
inc
leave
std
mov
insb
pop
lds
in
outsb
fdivr
jnp
xchg
sbb
lods
mov
pop
sub
inc
mov
sbb
imul
pop
mov
push
xor
inc
xor
sub
xor
mov
je
lret
push
jne
mov
and
fldenv
sbb
sub
mov
stos
das
pop
sub
pop
sbb
mov
and
push
nop
add
lret
insb
mov
lea
dec
aas
xlat
call
out
cmp
push
jge
push
push
jbe
sbbb
hlt
loopne
sub
iret
test
mov
mov
pop
inc
inc
iret
shll
shl
push
cld
mov
xchg
icebp
xchg
add
and
add
cmc
mov
push
or
int3
lods
or
cmpsl
test
aas
xor
cmp
fcoml
cli
or
movsl
push
scas
cmp
mov
lahf
push
leave
xor
cmp
pop
push
cmp
imul
in
push
dec
sahf
mov
lods
or
notl
imul
test
fsub
push
lds
xor
push
in
setbe
cmpsb
stos
test
add
xlat
lock
ret
cmp
fcomi
rorl
push
xchg
in
test
in
xchg
es
and
outsb
sub
ljmp
mov
loopne
mov
scas
mulb
sahf
je
add
insb
out
xor
pop
lods
shrb
xchg
negl
mov
scas
push
push
bound
or
cmp
jnp
add
jg
xchg
incb
add
adc
jg
arpl
push
clc
mov
cld
js
cld
sbb
mov
lret
sbb
inc
sbb
stos
stc
inc
inc
stos
cmp
sbb
mov
push
xor
lods
mov
stos
test
ja
jnp
pop
pop
xor
dec
inc
sarl
mov
push
pop
jo
testb
cmpl
add
or
cmpb
xchg
add
scas
inc
pop
int3
imul
jb
mov
mov
out
pop
dec
je
pop
dec
xchg
mov
shll
push
pop
fcoml
inc
mov
jle
pop
cmp
daa
mov
cmp
jmp
mov
cli
dec
pushf
aam
test
pop
subl
pop
sub
sahf
lods
pop
pop
loope
inc
bound
jle
cmp
sarl
fmuls
scas
pusha
push
mov
aaa
push
cmp
movsb
stos
pop
icebp
roll
dec
outsl
mov
fimull
ss
js
jno
xchg
hlt
jg
add
inc
dec
icebp
mov
jecxz
outsl
sub
roll
scas
pushw
add
fcoml
mov
clc
les
inc
add
inc
dec
mov
sbb
jmp
jne
out
and
jp
jbe
cltd
xor
lahf
cmpsb
int
and
or
mov
cwtl
mov
int3
scas
pop
inc
outsb
rcll
sbb
sub
adc
jae
jbe
sbb
clc
sbb
lret
add
jmp
push
lcall
loope
shlb
mov
or
das
dec
loop
repz
test
enter
arpl
test
out
es
mov
in
push
es
imul
sbb
insl
stos
sbb
sbb
aaa
out
jmp
jl
stos
pop
pop
jp
int3
out
es
add
mov
sbbb
mov
ret
pop
gs
jnp
adc
jp
jmp
fdivrl
mov
sbb
jle
repz
xchg
cmp
sahf
inc
imul
mov
or
mov
jl
gs
dec
jecxz
and
xchg
shll
gs
ja
test
shl
lret
rcrl
sbb
mov
or
and
jae
mov
dec
xlat
jl
jl
push
adc
adc
inc
inc
jo
es
ficoms
stc
pop
xorl
cltd
mov
aas
xor
sahf
inc
push
jo
outsl
fwait
add
cmp
cmp
jno
lods
cmpsl
adc
out
dec
xor
and
inc
ret
and
nop
push
and
sbb
in
insl
add
lods
daa
inc
insb
jg
popf
cwtl
ljmp
inc
push
fidivrs
fwait
ja
and
push
mov
jbe
insb
test
jno
xlat
jp
dec
pop
in
mov
mov
mov
aas
hlt
sub
inc
sub
mov
stos
lcall
and
mov
add
je
pop
stos
push
cmp
jns
cwtl
lea
cld
test
call
dec
and
iret
sub
inc
pop
push
lret
test
mov
scas
sub
addr16
mov
mov
stos
mov
in
daa
idivl
insb
sbb
cltd
or
enter
xchg
fmull
movsl
insl
insl
mov
fidivrl
cmc
add
sahf
jo
popl
imul
lcall
fsubl
mov
pop
pop
data16
adc
je
and
sub
jp
jg
scas
sub
jne
jecxz
xor
jo
test
xchg
push
push
loope
std
jae
cmpsl
pop
das
outsb
cmp
jg
sbb
xchg
mov
out
lcall
and
push
fdivs
arpl
repz
mov
into
les
into
scas
jo
cmc
imul
jns
into
adc
pop
xchg
jae
mov
mov
arpl
aad
xor
push
sbb
sahf
movsb
lret
cmp
or
fcompl
jl
push
loope
sarl
or
into
ss
push
neg
dec
add
das
mov
andl
push
sub
std
push
xchg
jnp
hlt
dec
jne
xor
pop
lahf
xchg
cmp
and
dec
dec
sbb
jmp
push
shlb
dec
lods
sbbb
in
cmp
retw
adc
pop
enter
lahf
dec
xchg
ja
outsb
outsb
sahf
cmp
out
push
scas
into
inc
pop
mov
pop
daa
mov
pop
jp
cmpsl
fidivs
jne
inc
outsl
cmpsb
or
push
lds
xchg
int
or
in
dec
jne
jns
push
fisubs
lahf
fsubs
subb
aad
insb
push
add
and
out
push
jp
fwait
pop
lds
mov
jg
xchg
idivl
inc
aas
or
aam
test
add
test
lds
inc
mov
mov
jmp
cmc
add
mov
shrb
test
lea
test
jnp
xchg
xchg
xchg
in
pop
in
mov
cld
or
xor
jb
mov
addr16
jnp
push
imul
cmc
jae
scas
cs
xchg
testb
repz
and
push
arpl
and
cmp
inc
pop
adc
fildll
bound
adc
jle
xlat
out
scas
es
mov
jge
outsl
mov
mov
out
cmpsb
dec
iret
repz
cwtl
js
inc
jne
add
or
rcr
les
fildl
mov
pop
sub
int
fwait
adc
mov
and
sub
mov
loope
jg
jnp
sub
sub
gs
testl
leave
mov
mov
sub
js
lods
test
jp
cli
jle
pop
sbb
dec
icebp
jg
mov
jl
push
push
enter
dec
das
ret
test
stos
lods
sub
movl
and
add
push
fnsave
mov
out
inc
push
pop
popa
enter
xchg
dec
outsl
out
negl
xor
push
xor
stc
mov
mov
repz
jno
xor
xchg
je
lret
mov
outsb
sub
shlb
mov
sti
fwait
jmp
sbb
iret
shrl
xchg
repz
push
xor
ljmp
and
lret
es
ds
jb
add
outsb
or
add
add
cmp
dec
aad
xchg
int
or
dec
imul
mov
or
xchg
xorl
call
stos
imul
insl
pop
outsl
scas
push
jns
in
dec
dec
pop
sub
in
fs
push
sahf
jns
push
rolb
inc
jae
sbb
das
stos
push
loope
punpckhwd
or
adc
out
sub
mov
fwait
movsl
jae
ja
lcall
jmp
ljmp
cld
mov
std
sbb
mov
sub
inc
sbb
xor
scas
or
add
pushf
mov
xchg
inc
dec
inc
fstl
adc
cs
fildl
xchg
stc
mov
out
test
xor
mov
pop
fs
pushf
addr16
jecxz
ss
pop
mov
in
aad
ret
mov
fistl
cmpsl
loope
loopne
fisubrl
test
mov
out
inc
or
and
mov
int3
xorl
xchg
pop
mov
nop
cmp
in
jo
and
test
mov
ret
mov
mov
arpl
jge
xor
pop
xor
cmpsb
ret
cmp
mov
imul
xor
mov
dec
mov
push
add
add
out
xor
scas
mov
outsl
push
xchg
adc
pop
rcl
int3
sub
push
sarl
sub
cmp
arpl
dec
mov
push
add
outsl
mov
mov
xchg
ss
int3
pop
pop
imul
xorl
cld
repnz
mov
push
testl
loop
dec
jnp
pop
cmp
out
xchg
test
aam
xor
push
mov
gs
xchg
cwtl
mov
lods
add
mov
negb
sub
inc
jg
and
mov
sub
mov
inc
push
xchg
jno
movsl
repnz
sub
popf
jnp
cmp
dec
inc
add
in
dec
mov
ss
xor
ja
pop
adc
mov
bound
adcl
sbb
pop
push
cld
xor
mov
int3
cmc
mov
mov
daa
clc
lahf
jl
inc
out
mov
xor
aad
jbe,pn
and
lahf
or
pop
lret
add
xchg
das
out
subl
rorl
call
sub
xchg
cmp
add
stc
inc
int3
mov
hlt
sbb
pop
faddp
xor
lods
mov
dec
or
test
or
stos
mov
test
push
jbe
pop
push
push
or
pop
das
and
inc
mov
sahf
sbb
roll
xchg
push
push
pop
mov
adc
xchg
dec
mov
faddl
and
push
push
xchg
adc
imul
sub
aaa
call
out
pusha
xchg
cmc
xchg
dec
cltd
push
fs
inc
adc
pop
popl
sub
les
jbe
xchg
sbbl
xchg
or
scas
sub
and
xchg
fnstenv
and
lcall
pop
aaa
pop
mov
and
pop
jge
or
test
out
arpl
mov
mov
ficompl
inc
jl
stos
cmp
aas
xor
in
xchg
in
fwait
cmp
inc
pop
aad
shlb
mov
cmp
and
shll
sub
dec
pop
sbb
repnz
das
testl
sub
xchg
fcoms
sbb
lret
std
popa
adc
inc
scas
sbb
dec
cmp
jae
xor
or
push
dec
popf
dec
inc
subb
push
in
popa
mov
mov
int
test
out
and
int3
aas
or
push
ret
subl
sub
jg
mov
out
push
push
loopne
fildl
sbb
out
ljmp
ret
mov
push
xor
cmpl
pop
sbb
pop
lret
pop
sahf
movsl
mov
test
pop
loop
insl
into
incb
mov
loopne
lcall
stos
idiv
xchg
bnd
mov
pop
mov
fsubrl
sbb
sbb
sub
cmpsb
inc
or
push
cltd
push
mov
push
shlb
cmpl
leave
or
cwtl
insl
das
mov
and
sahf
js
cmp
out
and
mov
call
cmp
aad
sub
add
and
inc
mov
imul
in
fsubl
lcall
pop
dec
ror
and
lods
bound
or
xor
and
push
xlat
jnp
pop
jb
mov
mov
js
push
loope
imul
jl
mov
iret
fisttpl
out
mov
stc
mov
lods
inc
test
jecxz
mov
pusha
das
pop
adc
popa
addr16
pop
jns
lar
lods
sbb
movsb
xchg
pop
stos
push
sbb
rcrb
stc
mov
bound
xchg
mov
xor
pop
cmp
add
imul
test
out
push
insl
jmp
das
xchg
or
cld
pop
xchg
sbb
mov
call
arpl
lcall
jg
xchg
icebp
stos
test
testb
push
std
outsb
hlt
bound
push
push
or
dec
pop
test
fxch
cmp
pop
xchg
push
pusha
sub
mov
stos
inc
cmp
xlat
jo
and
and
popa
push
xor
push
fwait
lahf
xor
pop
fimull
inc
ficompl
sbb
lods
sbb
jmp
pop
xchg
outsb
mov
std
int
xor
mov
fcompl
movsb
add
sbb
inc
pop
or
push
mov
inc
and
mov
jg
or
push
je
jnp
xchg
dec
mov
addr16
movsb
fwait
xor
or
push
mov
mov
sbb
jnp
popf
push
sub
cli
adc
test
mov
lret
mov
insb
mov
leave
and
add
mov
pop
in
aaa
adc
push
add
or
jecxz
ss
pop
setae
fnstenv
and
leave
push
movsl
test
sub
jno
repz
int3
push
lcall
lods
loop
add
rolb
add
leave
in
xor
or
lret
loopne
out
sub
int3
in
jl
sbb
sub
loop
jae
test
rcrb
cmp
sub
call
mov
ss
push
inc
jp
lods
xor
andb
or
jno
scas
stos
subl
push
pop
push
jle
adcl
pop
lds
mov
xor
sti
cs
mov
adc
pop
push
inc
adc
loope
sbb
and
pop
test
sbb
inc
ss
jecxz
sbb
dec
xor
jae
push
test
mov
fistl
ror
loope
mov
dec
mov
sti
mov
lods
fistps
mulb
outsb
add
lock
sbb
cltd
push
sbb
int
sbb
sub
bound
stos
cltd
pop
mov
mov
push
loope
fdivrp
btr
aam
xor
out
or
or
int
repnz
movsl
scas
jmp
in
push
and
lds
or
add
aaa
and
repz
jb
jp
mov
adc
sub
imul
dec
mov
xor
mov
sarl
jbe
mov
fwait
sahf
add
fisubrl
cld
bound
add
imul
pinsrw
scas
cmc
adc
or
inc
xchg
jae
inc
mov
movsb
repz
imul
jmp
lret
sbb
sub
ret
xlat
lds
mov
lock
jg
adc
lahf
js
mov
in
xchg
and
cmp
xchg
hlt
jp
mov
pop
adc
mov
mov
cltd
stos
fptan
stos
or
mov
mov
fsts
mov
add
nop
rcrb
and
mov
outsb
dec
cltd
pop
dec
mov
ljmp
in
incb
lock
mov
cltd
and
outsb
lahf
jmp
dec
jns
cmp
jnp
arpl
jb
pop
lods
sarl
xlat
pop
xlat
cwtl
iret
fisubrs
jg
cmp
dec
data16
push
in
dec
jno
pop
ret
jae
pusha
pop
and
sbb
mov
add
sarl
mov
test
add
cwtl
xchg
mov
movsl
xchg
cmp
xor
mov
addb
push
pop
fistl
incl
sub
lods
mov
mov
test
and
or
jae
or
fld
lds
shll
scas
xchg
incl
fwait
or
pop
jbe
daa
fistpll
andb
push
addr16
dec
jmp
jmp
adc
sub
inc
inc
lock
fs
sbb
xchg
sub
mov
xlat
or
es
loop,pt
mov
jge
cld
pop
in
push
inc
aam
and
xlat
lea
mov
icebp
gs
add
or
repnz
lret
sbbl
icebp
adc
and
push
lcall
loope
stos
fwait
mov
cmp
sub
push
call
sbb
adc
mov
sub
ss
sbb
sub
mov
cmp
push
fs
iret
mov
push
inc
or
and
dec
dec
dec
jb
rol
or
xor
mov
fistpl
inc
pop
inc
pop
sub
jle
mov
inc
pop
loopne
sub
cmp
outsl
jnp
push
pop
hlt
and
lea
ja
and
push
xor
cwtl
or
bound
lret
cli
in
sbb
adc
add
mov
and
xor
sub
adcb
ja
cmc
dec
inc
call
pushf
dec
xchg
out
addl
xchg
dec
jle
arpl
in
loop
decl
divb
popa
inc
xchg
sub
je
add
repz
lods
gs
or
push
rol
adc
incb
mov
inc
cmp
dec
xlat
jo
xchg
xchg
das
jmp
push
jns
adc
pop
sar
in
jae
sub
decb
sub
mov
pop
fs
inc
rcrl
cmp
lods
push
outsl
push
es
int
dec
or
sbbb
jecxz
sbbl
inc
ficomps
xchg
shrb
adc
nop
or
mov
adcb
jnp
sub
sub
pop
mov
stos
inc
push
aam
div
xchg
jo
xchg
push
mov
decl
shl
aad
addr16
inc
mov
in
in
faddp
push
inc
sbb
int
adc
push
in
pop
push
adcl
pushf
mov
lret
lods
mov
mov
in
pop
jmp
mov
test
sar
stc
stos
mov
xchg
cwtl
insl
push
incb
push
or
and
insl
sub
adc
repz
fs
or
lock
leave
inc
pop
jno
push
icebp
xchg
or
stos
daa
sub
into
jmp
add
and
aad
pop
xor
sub
inc
mov
sub
cld
adc
add
push
mov
xchg
push
out
mov
jbe,pn
cli
add
add
call
pusha
add
pop
dec
or
out
fiaddl
mov
popf
in
fs
sbb
in
xchg
repz
jno
test
jl
leave
pop
mov
rclb
scas
xor
mov
mov
or
jg
mov
mov
ret
cmpl
jo
mov
in
data16
imul
xor
test
roll
mov
lahf
xor
inc
ljmp
aaa
sbb
pop
or
cmpsl
lods
sub
and
ja
adc
sti
pop
inc
movb
cmpsb
stos
lods
mov
lcall
mov
pop
jnp
xlat
sbb
cwtl
add
jae
inc
scas
enter
pop
pop
pop
jo
xchg
cwtl
mov
fnstsw
dec
mov
jno
cmp
ljmp
lahf
jb
xor
lock
pop
fcomp
xchg
cld
lock
test
and
popa
imul
or
pop
push
cli
clc
add
pop
rclb
pop
neg
mov
negl
push
stc
mov
jmp
mov
iret
sti
xor
mov
or
mov
push
test
sub
mul
sbb
adc
mov
or
jno
mov
adc
dec
xchg
push
fwait
hlt
sbb
daa
fwait
pop
repnz
push
push
test
or
fmul
cld
pop
aam
out
ja
mov
add
leave
inc
sbb
or
rolb
addr16
in
jbe
movsb
adc
out
jp
fsts
lods
test
xchg
push
stc
push
jl
insl
shll
lods
movsb
mov
enter
xchg
jmp
or
add
cmpb
inc
jecxz
ljmp
sbbb
aaa
dec
mov
cli
sub
push
jnp
push
jno
pop
int
push
std
cmp
pop
add
inc
xor
dec
mov
into
jge
cmc
leave
xor
push
insl
stos
xchg
xchg
mov
inc
mov
sub
fisttps
subb
inc
lret
xchg
sub
jae
mov
inc
scas
xchg
pop
or
adc
jb
or
cld
fld1
mov
fwait
mov
fwait
pop
add
pop
and
aam
outsb
ret
dec
or
dec
les
in
sub
fimuls
xchg
rcrl
jge
or
push
sarb
pop
xor
out
dec
or
mov
mov
pop
addr16
pushf
imul
mov
sub
mov
sbb
xchg
or
iret
mov
cmp
je
bound
inc
mov
cltd
push
addr16
mov
dec
sub
ss
lods
push
mov
shll
mov
cs
rol
pusha
sarl
lods
movsl
out
xor
stc
xor
popa
pop
jbe
rorb
std
xchg
pop
jnp
sbb
mov
pop
jae
lock
add
cmp
lods
out
imull
divl
mov
js
push
lea
fidivs
test
je
lods
ljmp
loop
push
add
xor
test
mov
mov
jmp
jmp
and
popf
or
stc
mov
ret
stos
jo
mov
cmp
push
push
scas
push
add
stc
fwait
adc
gs
and
js
popf
inc
mov
dec
in
inc
ds
pop
lahf
push
cld
out
dec
ud2
inc
inc
lods
add
and
lret
and
ret
xchg
mov
cmpsl
mov
mov
sahf
jle
mov
push
lahf
push
dec
jnp
mov
mov
dec
inc
pop
enter
lods
fmuls
rorl
shlb
mov
mov
cli
sbb
shlb
loope
data16
mov
fnstsw
lcall
xor
mov
xchg
test
mov
out
imul
dec
mov
movsl
addr16
mov
push
and
je
cmp
jns
push
or
ret
xchg
sti
xchg
and
xchg
sarb
mov
movsb
mov
mov
mov
or
arpl
js
in
popf
rorb
call
jae
mov
cmpsl
imul
inc
sub
les
sub
mov
xlat
popl
jge
call
jb
psubsw
aaa
and
xchg
ljmp
cmpsl
mov
ret
or
ds
sub
cmp
in
arpl
fwait
loopne
fs
mov
ss
aaa
add
rorl
popl
mov
mov
les
pop
fsubrs
fxch
notb
sbb
mov
mov
test
das
add
rorl
or
rorb
push
jp
adc
shlb
out
insl
mov
pop
hlt
xor
xor
loop
lcall
cmpsb
out
js
notl
lds
sarb
out
cld
sub
fisttpl
std
xchg
inc
popf
rcr
fcoms
xchg
mov
jge
dec
dec
dec
popa
test
pop
into
je
scas
bound
daa
xchg
daa
cmc
jo
mov
popf
mov
push
add
negl
or
in
ret
out
ret
cli
lock
data16
lock
adc
mov
jns
mov
add
icebp
mov
mov
mov
int3
sahf
stc
jo
dec
sbb
cmpsb
mov
or
mov
shl
adc
pop
xchg
push
xchg
fsubrl
cmp
popa
xorl
xchg
fisubl
push
gs
lods
aad
out
and
or
repz
xchg
stc
and
pop
xor
push
xor
mov
clc
xchg
in
sub
cmp
sti
in
or
lret
das
adc
addr16
pusha
adc
add
push
dec
inc
lock
lret
or
push
fmuls
aaa
test
out
jae
or
aam
sub
jno
cmpsl
int
dec
inc
and
and
adc
out
xchg
dec
add
out
out
sti
data16
and
call
xor
shlb
stos
or
xchg
enter
out
xchg
sbb
dec
or
or
aam
and
xor
jbe
push
push
ds
adc
js
xchg
jno
jp
mov
xchg
addr16
out
mov
insb
fisubrs
out
push
xlat
sbb
jle
pop
scas
aad
movsb
enter
cltd
mov
add
mov
les
sti
mov
cli
ficoml
inc
jecxz
mov
rorb
xchg
dec
imul
lods
mov
pop
je
cmc
je
or
push
mov
roll
scas
shrl
js
into
in
rep
xchg
mov
inc
and
mov
mov
jl
lahf
imul
push
or
xor
loope
or
aas
pop
je
aaa
imul
cmp
test
lods
mov
cmp
sub
cltd
and
mov
cvtdq2ps
fistps
pop
stc
dec
insb
pop
in
jp
push
ja
mov
push
data16
test
add
dec
filds
cmpsb
pop
pop
inc
rorl
adc
mov
pop
add
jp
insb
or
jg
dec
fcoml
shrb
pop
aas
pusha
mov
jbe
push
adc
sahf
xchg
test
and
pop
repnz
push
testb
jl
fadd
push
int3
push
filds
xchg
jl
jae
mov
xchg
xchg
jle
stos
lret
addr16
xchg
jno
or
ret
jno
jge
sbb
in
xor
sub
sbb
jbe
pop
pop
scas
jnp
popl
mov
scas
mov
int
lods
imul
push
clc
sbb
fstl
mov
iret
pop
xchg
or
jo
mov
pop
popf
pusha
and
call
lret
test
int
int
movups
pop
and
xchg
pop
adc
out
and
mov
mov
das
std
inc
clc
loope
popa
cltd
lds
stos
mov
stc
pop
sarl
aad
mov
imul
addr16
popf
ffree
push
into
test
std
addr16
iret
push
dec
sub
stc
lret
jle
cmp
pushf
and
into
es
jl
pop
jae
pop
int3
add
lahf
xor
inc
or
clc
call
push
lock
hlt
pop
clc
inc
cmp
dec
sti
inc
mov
out
mov
jns
into
push
fidivl
je
jp
inc
stc
fidivrl
ret
mov
cmp
mov
pop
daa
into
add
stc
les
cmpsl
mov
mov
cli
sub
or
cmpsl
sbb
push
pushf
inc
inc
lods
in
xlat
mov
insl
push
ret
pop
fldcw
scas
pop
call
push
popf
data16
push
and
push
mov
mov
pop
lods
pop
sbb
inc
rorb
fxtract
aad
ljmp
imull
aam
jl
jae
xchg
int
subb
push
lods
iret
jbe
mov
aad
adc
adc
cmp
dec
stos
mov
lret
imul
mov
or
sub
das
pop
stos
pop
addr16
add
loopne
enter
pop
sbbl
inc
add
cmp
in
movsl
rcr
aas
stc
cmp
sbb
mov
sub
in
xchg
pop
xchg
inc
inc
rcl
xor
mov
sti
leave
ret
aaa
mov
and
pop
add
or
cmp
subl
sbb
in
dec
push
movsb
or
mov
sub
mov
adc
ljmp
mov
cmp
jmp
cld
mov
out
ret
mov
sub
xchg
sbb
mov
les
notl
jo
mov
movsb
sub
hlt
dec
push
dec
mov
and
mov
insb
sbb
pop
or
adcb
repz
jmp
stc
push
xchg
jp
inc
mov
jge
sub
ds
in
loope
cwtl
out
fidivrs
daa
mov
inc
push
je
aaa
or
lock
add
add
pop
add
loope
mov
lcall
push
test
jb
repnz
mov
ljmp
and
aam
fwait
loopne
lock
push
inc
or
repnz
push
adc
lods
lds
xchg
sbb
or
stc
push
scas
mov
or
xchg
xchg
adc
jo
cmp
push
fwait
iret
test
jmp
adc
pop
leave
repnz
leave
rorl
test
data16
std
cli
aad
insl
mov
add
loop
inc
aaa
push
fsubs
aam
lods
push
adc
pop
mov
dec
sub
jns
adc
inc
gs
mov
out
aam
lret
pop
mov
lock
in
leave
imul
sbb
pop
lret
aam
xor
adc
stos
test
sbb
inc
arpl
and
push
xor
mov
sbb
sbb
in
jg
shll
aad
imul
ss
ret
xor
ss
xorb
pop
cltd
lret
int3
mov
push
xchg
outsl
xlat
sbb
clc
scas
nop
ja
dec
ss
mov
xor
popa
sub
xor
sub
fcompl
inc
imul
int3
dec
add
dec
adc
inc
sti
lods
fs
inc
pop
lea
pop
sub
lcall
dec
jnp
icebp
xchg
cmpxchg
mov
fbstp
pop
xchg
adc
popa
cli
jbe
xchg
lds
cmp
xchg
pop
lret
je
pop
xlat
out
push
push
adc
lahf
mov
leave
xor
jmp
mov
repz
std
push
mov
mov
and
mov
cs
push
popf
movsb
mov
popa
adc
es
jp
lcall
adc
mov
mov
ja
xchg
in
test
sbb
ds
adc
jo
sbb
insl
or
cmp
jo
and
sub
sbb
xchg
sub
inc
push
xchg
sbb
mov
mov
call
dec
sbb
or
aam
pop
add
fildll
adc
jbe
ss
std
xchg
xor
int3
sar
sahf
arpl
dec
jg
add
dec
add
inc
mov
sbb
xchg
bound
sub
popa
cbtw
jmp
loope
std
ficompl
daa
or
push
sub
mov
jne
cwtl
fldenv
push
out
cmpb
daa
mov
sub
and
mov
es
out
push
jno
jne
loop
dec
stc
cmpsl
sbb
and
jns
xor
xchg
scas
repnz
push
in
gs
addr16
add
or
not
xchg
cmp
ret
cmp
pop
sub
scas
cmp
ja
jo
in
xor
cmp
sarl
lods
mov
int3
rcll
mov
movsb
or
adc
pop
and
dec
or
mov
dec
add
mov
sbb
xor
jno
push
add
adc
and
inc
out
popf
outsb
hlt
jmp
mov
ret
sbb
mov
jno
stc
imul
cli
inc
push
jecxz
mov
leave
inc
popf
daa
and
fistps
sarl
xchg
fwait
out
ss
jg
mov
sub
jne
int
loop
push
cmp
lcall
sub
movsb
into
aas
ror
xchg
daa
idivb
hlt
jae
test
push
and
aad
sub
jl
xor
outsl
dec
js
add
insl
add
js
mov
push
sarl
inc
sub
mov
inc
imul
scas
dec
outsb
jnp
aaa
add
push
and
cmp
push
shl
lock
les
out
outsb
sahf
adc
iret
jmp
pop
push
jmp
out
inc
xor
xchg
stc
int3
pop
cmp
push
inc
call
fstpt
dec
push
sbb
dec
lret
jle
ss
sbb
cmp
negb
fwait
lahf
inc
stos
pop
mov
inc
sahf
mov
adc
cmp
ljmp
fs
scas
ljmp
dec
push
test
call
mov
scas
cmp
pop
xchg
mov
adcb
sbb
test
xchg
mov
pusha
sti
es
xchg
rorl
mov
in
aaa
inc
lret
in
pop
faddl
outsl
add
sarb
ret
cli
adc
stos
mov
push
xchg
sbb
xchg
sbb
jge
sub
sub
adc
pop
mov
jle
sub
xchg
fistps
lods
cltd
xor
mov
fwait
mov
aas
sbb
aad
mov
sti
ret
sbb
aad
mov
mov
pop
dec
rcll
addr16
push
pop
or
shlb
xchg
cmp
outsl
sbb
mov
dec
push
mov
shrl
add
bsf
shll
mov
outsb
in
pushf
pop
jo
pusha
test
cld
test
std
jmp
inc
imulb
les
cmp
push
or
insl
mov
lea
jo
fdivrl
add
xor
shl
xchg
lock
fsubl
push
insl
dec
mov
cmpsb
imul
inc
cwtl
cwtl
jg
rorb
pushf
jp
addr16
inc
aas
aam
or
pop
dec
mov
push
add
movsl
fisttpll
stos
movsb
mov
fisubrl
ret
pop
mov
scas
cs
pop
cs
out
stos
pop
out
xor
adc
mov
outsb
or
pop
iret
insl
fs
and
sub
add
push
dec
xor
nop
stos
xchg
xlat
neg
add
ds
outsb
in
mov
cltd
loop
pushf
loope
mov
jp
jns
or
cmpsl
and
icebp
xlat
cmpsl
dec
jae
lret
jnp
mov
inc
ret
mov
jno
jl
dec
popf
pop
mov
xor
das
lods
mov
jb
sub
lods
out
mov
fwait
add
mov
or
loope
loope
cmp
sahf
aaa
shl
cmp
bound
cmc
mov
xchg
aad
xor
lret
call
xor
addr16
jmp
andnps
cmpsl
and
inc
out
push
mov
mov
outsl
dec
call
cld
push
lods
stos
sub
xor
mov
jnp,pn
mov
cmp
daa
dec
push
add
push
testb
push
pusha
sbb
test
testl
lea
xlat
enter
or
mov
pusha
mov
mov
cmp
movsl
jns
stos
jmp
scas
add
xchg
jp
repnz
mov
and
add
imul
out
nop
cmp
clc
adc
gs
jnp
mov
mov
mov
cmp
loopne
add
sbb
push
addr16
out
sub
ss
pop
out
ret
pop
inc
in
mov
ds
add
cld
or
mov
in
mov
jnp
or
gs
daa
jne
or
push
sarl
cs
jl
je
out
lret
sbb
push
push
push
and
adc
ret
mov
cmp
mov
dec
call
inc
scas
fcmove
xchg
push
call
lock
pusha
shr
pushf
shl
sub
repz
stc
ljmp
sub
mov
dec
jo
addr16
mov
mov
clc
lds
cmc
lret
cmp
shlb
test
or
ja
aas
pop
out
mov
cmp
inc
repz
lret
inc
fwait
stos
popa
test
ret
movsl
test
repz
sub
pop
mov
xor
sti
sbb
shrl
cmp
and
in
fcoms
les
dec
xchg
inc
jno
repz
adc
xchg
mov
pop
inc
push
je
xchg
dec
addl
test
mov
lock
pop
pop
pusha
dec
stc
xchg
push
mov
aaa
call
stc
pop
cmpsb
push
cmpsl
xchg
leave
mov
push
and
pop
sahf
xchg
dec
add
pop
in
stos
dec
jnp
and
pop
jmp
and
pop
aas
std
out
loop
jnp
fildl
clc
push
ja
inc
test
cmpsb
daa
cmp
in
enter
mov
pop
inc
shl
insl
arpl
pop
in
mov
ja
pusha
mov
daa
push
loop
jge
jg
outsb
sahf
int
rclb
icebp
ss
inc
cmp
std
fs
dec
mov
jno
xor
popf
popa
imul
sti
pop
pop
cmpsb
and
or
aaa
dec
sbb
out
rolb
subl
sub
inc
cmp
mov
xor
push
push
mov
fdivrp
leave
or
mov
push
cltd
dec
js
lods
xchg
jle
clc
nop
inc
into
lahf
ljmp
jne
add
shrb
add
repz
mov
ds
cmc
cmp
clc
adc
orb
push
jnp
aam
insb
and
mov
and
das
mov
mov
dec
cmp
push
xor
mov
mov
div
subb
dec
xchg
mov
daa
ret
or
push
pushl
arpl
cmc
and
outsb
inc
mov
push
or
xchg
or
addb
xor
pusha
sbb
or
int3
jecxz
andl
or
cmovns
shr
add
dec
dec
pop
inc
negb
pop
shl
sub
mov
push
pop
mov
in
cli
pop
xchg
in
mov
inc
lret
aas
push
pop
inc
push
push
adc
push
add
sbb
push
les
sbb
push
cmp
sub
or
cmpsl
cld
jnp
pop
xchg
lea
sar
adc
mov
call
in
sbb
lahf
sbb
adc
pop
mov
lods
bound
popa
jnp
jp
add
dec
jmp
inc
loopne
pop
mov
aaa
inc
les
push
out
push
int
cmp
inc
and
test
sub
push
push
lret
inc
push
dec
fs
jne
pop
into
cld
sbb
loope
cmp
fwait
dec
fnsave
movsb
popf
add
push
fwait
and
rclb
addl
sub
xor
pop
nop
cmp
sti
and
out
addr16
adc
mov
gs
mov
sub
sbb
scas
dec
inc
add
sbb
mov
xchg
in
leave
pusha
push
jmp
call
movsl
pusha
rorb
and
push
push
inc
push
faddl
cmc
je
pop
push
push
sbb
pushf
inc
mov
fcomps
pusha
or
xchg
fldenv
sbbb
loope
aaa
into
bound
push
mov
into
cmp
int
inc
bndldx
push
movsl
test
ficomps
out
mov
enter
ss
pop
add
dec
xchg
sub
lret
pop
jne
or
fistpl
loop
sti
sahf
into
rcr
sub
push
pop
sbb
dec
adc
dec
pushf
leave
std
dec
inc
stos
add
or
mov
and
xor
mov
cmpsl
xchg
sub
cwtl
mov
jmp
jo
fmuls
pop
jae
aas
jl
pop
scas
pop
jne
int3
negb
mov
outsb
pop
movsb
insl
push
inc
mov
lods
xor
hlt
js
scas
xchg
lds
sbb
mov
inc
mov
lret
lret
and
pop
out
push
push
push
xchg
push
in
shlb
and
data16
xor
out
shll
xor
out
push
repz
test
aam
inc
shrb
add
lret
sbb
mov
sbb
mov
mov
add
adc
xchg
xor
mov
or
ret
add
jo
mov
cltd
sub
ficoms
call
dec
add
jmp
mov
push
movsl
pop
inc
je
mov
pusha
xchg
jmp
and
cld
adc
sub
jg
enter
fnstcw
int
stc
push
cltd
subb
xchg
sub
xchg
sbb
mov
inc
mov
outsb
adc
nop
outsb
push
notb
mov
sar
pop
sbb
dec
decb
in
ficoms
push
out
mov
jmp
jp
sub
int
mov
inc
sbb
addr16
fstps
in
cmp
sbb
pop
popa
dec
arpl
pop
cs
in
iret
test
repz
test
cld
or
add
dec
xor
sbb
fcmovnbe
dec
sbb
call
adcb
xchg
addb
adc
mov
rcll
add
cmp
pushf
mov
test
fs
jle
je
inc
mov
ss
pushf
xor
movsl
jb
or
mov
dec
sysenter
outsb
inc
lar
lcall
sbbl
jnp
jb
cmp
sbb
adc
cmpsb
es
out
out
sbb
or
daa
xchg
cltd
fstps
loop
jp
and
push
cmc
push
or
das
gs
jl
cmp
mov
xchg
sti
ret
push
adc
sub
out
stc
dec
dec
jns
lret
gs
inc
pop
push
pop
outsb
imul
roll
xchg
dec
cld
in
add
fbstp
add
xor
nop
test
std
lock
dec
aas
je
out
pxor
sahf
push
mov
rolb
dec
adc
dec
mov
mov
sbbl
push
incb
mov
add
xchg
mov
xlat
add
cmp
mov
sub
sbb
cmp
inc
or
popa
xchg
sbb
or
xchg
ds
std
repz
cmp
sub
adc
frstpm(287
fcompp
push
mov
gs
push
lahf
test
bound
dec
jnp
arpl
rcl
dec
leave
dec
or
mov
cmpsb
aam
push
aas
jne
mov
adc
aas
stos
lock
aam
and
mov
shll
scas
push
clc
push
aad
add
data16
push
mov
cmp
jle
sbb
mov
jno
lods
data16
sbb
rcrb
repz
shlb
sub
push
leave
lahf
ret
sbb
add
inc
sub
adc
mov
push
notl
mov
inc
fstl
std
mov
xor
xchg
aaa
aad
out
sub
adcl
std
stos
ret
repz
mov
xlat
repnz
lcall
jp
into
stos
insb
ljmp
mov
sbbb
and
lds
jo
test
add
out
imul
xor
jns
mov
pop
lahf
insl
stos
rcll
mov
push
cwtl
scas
sbb
mov
pop
nop
mov
insl
scas
xchg
fldenv
mov
lcall
mov
leave
jl
filds
rorl
adc
xor
push
fadd
ss
xor
adc
push
mov
test
aad
jecxz
dec
sub
popf
js
jg
sahf
imul
mov
or
lahf
or
mov
jbe
mov
insl
insb
sbb
ja
adc
or
mov
js
mov
xchg
test
gs
aad
addr16
scas
jbe
mov
push
stc
add
mov
andb
xor
imul
fcmovu
or
xor
pop
push
sbb
iret
stos
pop
test
pop
xor
inc
add
leave
test
cmp
ds
sub
fwait
and
lods
mov
cmpsb
mov
dec
test
cmc
cwtl
and
mov
bnd
cmpsb
insb
ljmp
fsubs
pop
xor
pop
cmpl
imul
adc
rorb
int3
add
shll
fstpl
rorb
mov
ljmp
push
dec
idivb
xchg
loop
adc
sub
jno
stos
fsubr
push
roll
bound
mov
test
xor
jl
sub
jecxz
cwtl
mov
mov
jmp
or
xchg
movsl
xor
enter
pop
push
adc
mov
ret
sub
js
pusha
adc
clc
sub
js
mov
push
jno
jle
ja
je
mov
pop
enter
cld
and
test
lds
sub
jle
xchg
mov
daa
or
daa
rorl
nop
xchg
lods
std
in
in
mov
inc
sub
lcall
or
pop
pop
xchg
out
add
aas
data16
stc
xchg
test
mov
add
dec
popa
pop
mov
mov
scas
sti
fcoms
mov
or
mov
inc
popa
enter
cltd
mov
pop
push
xor
sub
mov
ret
jo
dec
push
out
xor
dec
push
xchg
das
or
pushf
lea
dec
fistl
adcb
insl
adc
daa
aad
ljmp
repnz
mov
push
andl
xor
fstpl
into
lcall
mov
mov
xchg
imul
push
inc
aam
iret
push
sub
in
sbb
testl
push
dec
push
sti
xlat
pushf
push
mov
fldt
jns
push
xor
cmc
and
repnz
pop
popa
adc
mov
aad
xchg
ss
outsl
repnz
js
scas
jb
loop
popa
es
xchg
inc
adc
cmp
and
xchg
ljmp
imul
call
jl
gs
inc
mov
test
arpl
dec
mov
cli
or
ss
xchg
mov
insb
adcb
and
stos
and
cmpsb
xchg
pushf
xchg
loop
test
lods
xor
adc
push
inc
rcrl
pushf
push
jno
pop
aaa
mov
out
push
mov
and
jnp
fisubrl
testl
in
dec
testl
fcompl
mov
testb
xchg
lds
add
scas
mov
enter
push
xchg
cmp
je
xchg
mov
lods
clc
das
clc
into
push
pop
mov
out
je
sahf
test
jl
sbb
mov
ficoms
cmp
lock
test
cmp
lcall
sbbb
mov
out
push
sub
sbb
mov
push
mov
movsl
in
imul
add
xchg
je
jmp
push
mov
and
mov
ljmp
sub
rolb
push
movsl
loop
jns
dec
sub
mov
aaa
repz
pop
hlt
cmovb
and
loope
adc
jnp
adc
push
jne
comiss
andb
imull
add
cmp
data16
cwtl
loope
xchg
and
jb
push
iret
mov
dec
and
jne
xlat
cmpsb
popa
ret
push
and
out
jge
mov
cmpsb
mov
or
dec
iret
in
xchg
and
xchg
daa
or
sub
iret
xchg
popa
repz
sbb
mov
sbbb
or
lcall
mov
fbld
test
fs
adc
and
jne
jae
jle
loope
call
xchg
jae
xchg
add
je
inc
out
inc
sbb
test
xchg
or
jp
mov
mov
xor
lret
push
faddp
das
sub
adc
into
mov
xlat
in
mov
add
insb
inc
incl
mov
cli
lret
sub
lcall
xchg
repz
push
test
mov
cs
cmp
stc
cld
mov
or
mov
fdivs
cmp
push
int3
les
fstpt
and
xchg
mov
or
nop
pop
scas
mov
and
dec
mov
mov
cltd
sub
jmp
icebp
pop
into
adc
rcrb
roll
ljmp
or
sbb
pop
rcrl
mov
les
std
clc
rolb
adc
fstpl
or
xchg
hlt
pop
iret
leave
lret
sbb
jmp
mov
xchg
or
mov
das
mov
push
ret
push
shll
cwtd
outsb
les
fwait
adcl
mov
ret
push
mov
pop
push
mov
cmpsb
ret
or
pushf
jmp
jbe
out
or
cmp
cmc
ret
or
push
icebp
lock
out
mov
or
xchg
fwait
cmp
cmpsb
scas
fsts
cmpb
sub
pop
insl
sub
pop
stos
inc
push
sbb
pop
adc
xchg
inc
mov
sbb
or
or
into
dec
mov
mov
packuswb
xchg
mov
jp
pop
mov
in
aad
pushf
inc
loop
add
lret
scas
loopne
jg
mov
fnstcw
xchg
pushf
jne
and
test
rcll
dec
aas
dec
mov
push
fmuls
jmp
inc
push
leave
int3
test
sbb
xor
sbbb
jnp
add
in
lods
sub
ja
cmp
testb
jb
mov
dec
lock
jmp
inc
xchg
shlb
adc
push
bnd
sub
push
loop
dec
sbb
sbb
movsb
cmp
addr16
aaa
in
loop
sahf
push
pushf
or
mov
movsb
adc
out
cmp
xor
jmp
bound
mov
add
out
ja
pop
jno
mov
cmp
hlt
imul
stc
pop
mov
mov
movsb
add
push
popf
sub
mov
jb
pop
insl
les
bt
out
xchg
push
ds
in
xlat
shlb
pop
inc
cld
in
push
cmp
jae
dec
inc
fwait
xor
fsub
cmpsl
inc
icebp
and
test
ja
enter
xchg
cmp
inc
xlat
cmc
pop
imul
adc
out
decb
ljmp
loope
pop
scas
fdivl
into
add
out
popa
sbb
out
cs
clc
mov
or
xor
sahf
sub
pop
cld
push
aaa
int3
push
inc
pop
xor
push
mov
sbb
mov
call
mov
dec
mov
dec
out
pop
lea
mov
ja
sarl
ss
push
push
ret
inc
mov
mov
cwtl
push
adc
std
repnz
inc
pop
mov
in
int3
mov
push
pavgb
jae
push
negl
pop
cmp
mov
call
loopne
aam
mov
jbe
mov
xor
sti
popa
insb
jle
mov
and
loope
ret
mov
cld
xor
jecxz
mov
fld1
shr
fs
mov
loopne
ret
dec
xor
sub
lea
push
lret
and
inc
lret
ror
test
jge
cmp
je
xchg
jmp
cmp
hlt
sub
ret
jae
in
aam
mov
icebp
pop
sbb
fwait
mov
cld
sub
inc
mov
cmpsl
push
addr16
daa
cmp
sub
and
push
pop
add
xchg
sub
lods
inc
add
sub
repnz
dec
inc
pop
mov
xor
mov
movb
mov
mov
or
push
test
add
jmp
sub
jno
divl
xchg
mov
adc
idivl
cmc
pop
mov
into
repnz
popa
sbb
push
sub
pop
repnz
scas
arpl
jns
inc
pop
inc
rorb
imul
dec
lret
repz
and
das
nop
andb
arpl
dec
loope
fdivrp
xchg
push
in
lahf
mov
xorb
mov
sbb
add
sbb
pop
or
sub
mov
cmp
dec
dec
mull
aam
bnd
daa
or
push
push
insb
pop
mov
iret
es
pop
fists
gs
push
dec
data16
stc
mov
insl
int3
or
xor
lret
scas
mov
in
cs
jl
xchg
jg
clc
adc
cmp
lods
dec
jb
addr16
iret
lret
andps
out
hlt
shll
ljmpw
jl
into
aaa
aaa
jo
ja
inc
jg
stc
icebp
test
add
test
inc
and
outsl
fcoms
push
fsub
popf
mov
aaa
mov
or
sbb
sbb
adc
cli
mov
movsb
pop
shrb
jbe
xlat
sti
push
clc
int
mov
sbb
test
xchg
push
test
cmpsl
dec
xchg
ficoml
aas
and
ds
push
and
nop
pop
gs
xor
aad
add
mov
inc
mov
adc
lret
loop
mov
cs
cmp
in
fidivrl
loop
pushf
ja
out
sahf
scas
pop
and
lea
mov
fwait
enter
scas
cmc
jns
loopne
daa
dec
dec
pop
mov
sbb
icebp
fs
cmp
sahf
inc
dec
lock
hlt
mov
sub
and
mov
in
cmpb
pop
push
add
repnz
adc
inc
fisttps
xchg
cmpsb
add
filds
lods
add
mov
in
sti
rcrl
subb
iret
out
push
xor
sbb
push
lods
cmpsb
outsl
in
jge
or
or
sub
rorl
stos
xor
roll
shlb
jb
jbe
and
sub
stos
jle
mov
icebp
mov
int
out
cmp
mov
xor
iret
loop
jmp
jmp
xor
jno
mov
ret
cwtl
dec
ja
sbb
dec
mov
mov
adc
movsb
add
rorb
addl
psubusb
push
add
imull
ror
or
jno
xchg
out
test
pushf
xchg
add
xor
sub
sub
repz
mov
xchg
add
sbb
ret
call
sbb
incl
lods
inc
xchg
dec
or
inc
xor
iret
pop
stos
push
sub
xchg
mov
sub
in
or
mov
int
testl
insl
sarb
call
and
jbe
and
popa
jmp
lret
mov
mov
es
aas
bound
mov
test
jne
xor
push
mov
clc
inc
jge
incb
loopne
sub
mov
cmp
andb
xchg
sti
aad
jg
jg
cwtl
mov
out
xor
sahf
mov
xchg
jg
xchg
push
gs
push
push
shl
xor
lcall
push
fldl
or
pop
arpl
icebp
jb
mov
mov
lods
out
jecxz
imulb
xchg
sub
outsl
or
arpl
mov
sub
cwtl
jo
push
and
push
pop
sub
sub
adc
fs
lea
pop
mov
xorl
push
movsb
pop
stos
in
das
mov
decb
push
pop
cmp
subb
daa
xchg
pop
ret
push
jle
sbb
adc
inc
pop
mov
inc
hlt
rcrb
inc
int3
rcll
cli
hlt
insb
out
std
sub
dec
inc
inc
or
and
movaps
nop
in
sub
sub
in
mov
jns
xchg
cmpsb
push
pop
xchg
movsl
shrb
mov
popa
and
xorb
mov
lahf
loope
lock
dec
popf
aas
and
push
xchg
or
xor
rclb
scas
pop
pusha
mov
jbe
lret
and
adc
sub
mov
into
rcrl
mov
mov
notb
cmpsb
mov
imulb
inc
jl
mov
movsb
fxch
cmpsl
sub
fisubs
aad
jns
push
sub
or
push
fwait
lret
stos
xchg
mov
dec
pop
and
xchg
mov
test
inc
inc
mov
test
rolb
fistpl
push
sub
in
sub
adc
out
add
stos
sub
int
es
adc
jg
clc
popf
mov
sub
mov
out
pusha
mov
daa
dec
mov
inc
mov
popfw
adc
mov
int
mov
mov
dec
dec
lea
mov
mov
lods
fistpll
loope
add
repz
mov
mov
hlt
add
enter
mov
shll
fdivrs
negl
inc
int3
fs
fldl
int
lea
sbb
pop
jno
jno
cmpsb
stc
shl
stc
xchg
js
rcl
scas
push
push
nop
inc
fdivrs
sbb
dec
fwait
les
xchg
dec
je
sub
gs
test
dec
loopne
or
and
sub
jbe
pop
add
jp
sbb
sti
cmp
into
nop
xor
shrl
cmp
inc
pop
xchg
sub
pop
sbb
or
dec
dec
jns
sbb
ss
adc
sub
lcall
sub
lods
jo
test
int3
scas
scas
jp
and
xchg
das
mov
aas
popl
mov
xor
ret
aam
cld
xchg
cmpsl
aam
fsub
lret
mov
in
icebp
sahf
and
rcrl
jle
out
adc
adc
inc
add
ret
daa
jp
mov
sbb
jmp
push
lods
sbb
scas
or
pop
xor
push
out
fwait
and
rcrl
adc
data16
hlt
push
xchg
stos
cmp
push
popf
shrl
xor
add
dec
mov
sub
shlb
dec
fsubl
mov
push
sub
in
sub
add
loop
lds
fsubrs
sbb
fcmovu
cmp
cmpsl
mov
jns
mov
rcl
add
push
cmp
push
repz
pop
lcall
push
shlb
push
scas
mov
push
mov
imul
lods
mov
dec
add
call
ret
jecxz
sbb
out
mov
push
ja
adc
cli
adc
iret
jae
mov
insb
sbb
es
out
pop
lds
dec
repnz
pop
adc
xchg
test
scas
jbe
and
mov
or
mov
shld
adc
pop
push
hlt
imul
les
leave
mov
jnp
sub
mov
add
push
or
movsl
xor
or
adc
ljmp
loopne
out
ret
add
lods
lods
xchg
loopne
fisubrs
dec
loope
xor
push
adc
mov
fs
dec
test
pusha
iret
and
test
inc
test
mov
jb
push
adc
push
and
fisubl
lods
loopne
add
repz
sbb
push
mov
ss
cmp
shlb
nop
inc
xor
lahf
in
pushf
lcall
leave
pop
ljmp
mov
hlt
int3
xor
mov
jp
fcmovne
std
xchg
mov
stos
or
pop
jnp
pop
jmp
pop
hlt
sar
inc
mov
inc
mov
add
dec
and
or
xor
rolb
xchg
mov
imul
add
sub
jns
inc
mov
aas
add
icebp
icebp
or
hlt
stos
out
clc
and
push
push
jmp
xorb
bound
jae
jbe
test
jp
shll
xchg
inc
sbb
sbb
cmp
add
mov
dec
mov
pop
divb
mov
into
xor
mov
and
ret
sbb
loope
clc
repz
pop
mov
pop
pop
stos
iret
aas
bswap
cmc
cmp
xor
scas
mov
mov
or
sbb
jns
mov
loop
pop
inc
out
sbb
sbb
dec
cmp
pop
scas
mov
aaa
mov
push
decb
or
inc
xor
stos
inc
xchg
jnp
mov
push
fwait
sbb
fwait
in
xorl
popf
pop
imulb
inc
dec
mov
stos
jns
iret
in
push
adc
cs
pushf
loopne
mov
aad
lea
pop
or
icebp
xor
jl
pop
cld
and
cmp
push
mov
pop
test
jnp
or
cmc
pop
insl
rcr
in
dec
sar
daa
or
push
cli
mov
dec
fsubl
scas
mov
xchg
jbe
sarl
dec
cmp
call
lods
xchg
pop
push
mov
pop
push
jae
mov
fiadds
sbb
lods
popf
cltd
fiaddl
test
or
nop
mov
or
ljmp
mov
mov
jmp
pop
in
add
push
dec
pop
pusha
jge
mov
int
xchg
andl
cltd
cmp
sarl
in
and
outsl
repnz
cmc
andl
jbe
cmp
cmp
sub
xchg
das
push
mov
aas
leave
jae
push
jmp
insb
inc
mov
xor
xchg
shl
aam
sbb
sub
add
rcrb
and
nop
and
adc
es
out
dec
xchg
stc
lahf
lock
mov
gs
mov
shlb
rcrl
cmpsl
inc
xchg
stc
dec
jp
decb
leave
add
pop
call
cmp
enter
mov
push
aaa
fstl
push
lock
sub
mov
loopne
or
scas
dec
jge
mov
adc
movsb
mov
rorl
jmp
dec
ja
push
movsb
aad
xor
ds
push
movsb
and
mov
arpl
add
scas
or
mov
std
dec
cld
mov
mov
pop
mov
xchg
adc
dec
mov
and
adc
mov
jno
or
movsb
adc
nop
fisttpll
add
push
in
mov
test
mov
push
rcl
mov
push
xchg
imul
mov
pop
cmp
push
mov
out
repnz
xor
dec
inc
das
ficompl
and
scas
mov
lcall
jae
or
out
pop
adc
push
cld
lock
mov
rorl
inc
jns
mov
addr16
jle
shrl
stos
dec
mov
leave
sbb
daa
fildll
int
fs
inc
aaa
xchg
mov
lods
cmp
iret
sahf
ret
fisttpl
mov
xor
sbb
call
fists
xor
mov
add
es
bound
fildll
in
sub
mov
or
dec
mov
das
int3
mov
cs
into
cmpl
jle
jp
push
jecxz
pop
inc
xchg
cmp
loopne
mov
xor
dec
mov
imul
rcl
and
mov
mov
out
xlat
mov
loop
rcrl
lock
in
movsb
push
adc
loop
cmpsb
repnz
push
mov
popf
mov
mov
test
call
push
sub
outsb
les
sub
jl
cmp
cmp
lcall
push
rclb
in
jns
ffreep
mov
aad
js
popf
push
xchg
stos
xor
ret
push
or
in
mov
mov
mov
insl
lds
cwtl
push
inc
add
ljmp
mov
divl
rcrl
or
stc
pop
xorl
cmp
jo
push
aas
lret
and
jae
xor
xchg
ret
jecxz
dec
pop
xchg
cmp
adc
mov
and
add
dec
pop
fucom
dec
je
push
iret
pop
pop
sub
sbb
in
pop
dec
push
push
loop
ljmp
gs
nop
cmp
sub
dec
push
cmp
stos
out
jbe
sbb
jo
sub
or
enter
dec
orl
lret
fcomip
lcall
and
or
mov
sbb
xchg
xchg
pushl
lods
xchg
fldl
xlat
xor
test
addr16
mov
js
int
mov
or
or
fimuls
cwtl
jl
inc
in
pop
inc
dec
push
in
pop
and
push
push
sub
std
xor
push
adc
test
rcl
push
movsl
incb
cmp
mov
sub
sub
cmpsb
push
imul
mov
andl
pop
outsb
cmp
mov
or
add
movsb
clc
out
jecxz
cmp
ja
cmp
ljmp
cmp
es
jo
mov
adc
in
lahf
xchg
cmp
lods
xchg
pushf
das
enter
icebp
and
ret
popf
jnp
adc
in
push
rcrl
mov
sub
sub
mov
cltd
sub
sbb
pusha
sbb
daa
inc
arpl
mov
cmp
loopne
push
xchg
addr16
and
adc
push
push
popa
mov
push
jecxz
je
jae
dec
mov
sbb
cld
lret
add
inc
and
pop
cmc
push
in
inc
mov
push
roll
das
inc
push
jg
data16
push
or
in
dec
add
add
cmp
sti
and
dec
pop
cmp
sub
jne
fnstsw
or
andb
adc
aad
mov
adcl
push
mov
into
lods
mov
inc
push
jp
fucom
mov
lds
xchg
fimull
xchg
mov
outsl
jns
inc
or
push
sub
sbb
sub
outsl
andb
xor
test
push
mov
aaa
xchg
into
add
mov
neg
sub
jns
mov
lea
fdivp
addl
adc
add
jecxz
lods
cwtl
push
aas
andb
cmpsl
and
fcoms
jo
xchg
leave
jl
sahf
sahf
cmp
call
cmp
sti
std
cli
cld
mov
pop
scas
in
cli
add
xor
fldcw
repz
add
outsl
lret
jmp
push
mov
push
cld
mov
movsb
push
scas
cmp
aas
sbb
in
mov
pop
mov
inc
pop
mov
lret
fwait
dec
popa
jnp
js
icebp
or
ja
in
push
sti
nop
and
popa
push
rorl
add
adc
std
and
hlt
or
mov
xorb
fcmovb
xchg
out
loop
push
or
lcall
loop
jge
nop
test
and
mov
orl
inc
mov
cmpsl
push
sub
inc
lcall
mov
sahf
stos
xchg
in
addr16
sbb
pop
cmpsb
imul
mov
lcall
mov
pop
mov
dec
push
addl
push
shl
mov
push
scas
pop
and
pop
mov
test
gs
fwait
addr16
mov
inc
flds
pop
pushl
mov
mov
cmp
rorb
xchg
enter
mov
adc
push
add
fisttpl
jmp
ja
add
xor
lods
fiaddl
mov
dec
mov
mov
jle
sbb
movsb
xor
rclb
loop
mov
mov
enter
hlt
adc
ret
pop
jle
and
jns
cmp
xchg
mov
test
push
stos
int3
test
movsl
insl
cmpsl
jl
in
xchg
add
pop
pop
ret
sbb
mov
sub
arpl
test
add
je
push
pop
jo
loope
mov
into
rolb
xchg
inc
jl
jnp
cmp
ret
leave
arpl
push
xor
fcmovb
sbb
mov
adc
push
jp
mov
enter
push
mov
and
sub
std
cmp
pslld
sbb
shll
mov
dec
clc
jno
into
dec
lret
inc
push
popa
mov
hlt
xchg
dec
mov
xor
in
roll
add
leave
daa
mov
add
jae
mov
fld
pop
arpl
push
mov
leave
push
es
in
push
push
cwtl
mov
movsb
and
mov
jnp
mov
pop
out
mov
sbbl
scas
test
sub
and
stc
xchg
lock
movsl
dec
sub
inc
mov
stos
data16
addr16
xlat
pushf
mov
jo
ficoms
jge
push
cli
sub
ret
aaa
jle
mov
pushf
or
neg
mov
cmp
sbb
lock
cmpsl
lcall
shrl
adc
dec
pop
stc
mov
or
stos
mov
and
aam
out
and
mov
mov
bound
jmp
call
cld
pusha
dec
dec
daa
jb
mov
iret
add
dec
popa
test
js
sbb
das
lds
sbb
jo
out
inc
mov
push
and
or
push
lea
cmp
loope
inc
bound
push
enter
cmp
mov
test
adc
xchg
aam
xor
push
push
addb
das
add
and
push
je
shr
cld
mov
ss
push
mov
push
punpckhbw
outsb
in
inc
mov
xchg
ss
sbbl
insb
nop
pop
and
pop
jle
int3
in
jecxz
mov
xor
call
mov
je
rcr
into
sbb
or
jmp
shl
nop
xchg
insl
lret
adc
and
int3
imul
loop
je
sub
and
sub
lods
lds
je
aam
xchg
ds
or
mov
add
mov
xchg
rcll
mov
sbb
pop
popl
repz
sub
jmp
lret
push
jmp
out
mov
ljmp
icebp
mov
push
mov
push
lahf
lcall
sbb
or
dec
lds
inc
xchg
cltd
sub
js
pusha
mov
jge
cmpl
fidivrs
cld
sbb
mov
lcall
movsl
push
cmp
inc
push
ljmp
jns
add
cmp
sub
jmp
scas
ret
sbb
dec
cmp
push
test
sahf
test
push
push
daa
pop
out
push
imulb
ficoms
leave
add
dec
sahf
repz
rcl
cmp
test
daa
shll
rcrl
mov
lret
pop
cmp
mov
je
cmp
pop
mov
sub
xor
and
sbb
sti
inc
mov
cmp
or
push
pop
in
or
dec
add
enter
insl
push
or
cwtl
push
fiadds
daa
ljmp
insb
fwait
push
in
mov
cmc
out
lret
vxorps
loop
shlb
movsb
es
repnz
xor
ja
push
jmp
jb
jmp
push
add
dec
movsl
xor
dec
jge
out
in
stc
lods
push
mov
xchg
pop
xchg
and
jle
test
cmp
and
adc
cmp
in
sbb
js
dec
sti
addr16
roll
push
les
push
dec
and
pop
mov
rol
push
adc
cmp
jle
fmull
sbb
sub
call
pop
adc
pop
jns
pop
fwait
jbe
pop
scas
ds
lret
inc
xchg
dec
dec
sbb
test
mov
aam
mov
jge
or
loopne
aad
lcall
mov
hlt
or
test
stos
push
addl
ss
fnstcw
gs
orb
push
daa
clc
mov
sub
dec
sbb
add
mov
lret
cmp
clc
add
xchg
xchg
mov
dec
aaa
push
adc
or
mov
push
inc
add
jne
mov
ljmp
fiadds
gs
lods
mull
pop
inc
test
arpl
pop
mov
inc
cmp
inc
mov
cmp
push
or
test
cmp
jmp
mov
mov
icebp
xchg
gs
fldcw
jecxz
popa
in
out
add
int
pop
loop
movsb
aaa
add
mov
ja
int
jno
dec
xor
ss
xlat
push
idivl
sub
rclw
aad
imul
cwtl
mov
pop
dec
inc
cltd
loop
fbld
pop
dec
int
xchg
stos
sarb
inc
xor
mov
mov
lods
inc
add
inc
add
ljmp
es
mov
pop
xor
push
jbe
mov
js
mov
lahf
loopne
divl
mov
lret
xchg
mov
and
adc
sub
leave
cmpsl
jns
lock
aad
jns
adcb
jno
xchg
pop
jb
mov
xchg
pushf
mov
loop
iret
sub
inc
xchg
jne
pop
daa
jmp
xlat
xchg
aad
mov
iret
inc
mov
hlt
loop
test
jle
icebp
movsb
mov
lock
push
fildl
adc
jno
pop
fwait
out
aaa
or
mov
int
sbb
jne
dec
in
movsl
aas
jo
adcb
int3
loopne
cli
stc
cmp
mov
or
sbb
xchg
sbb
in
xchg
pop
push
bound
out
xor
fs
std
jae
sti
cmp
notb
inc
nop
fstp
or
mov
xor
mov
mov
rclb
and
inc
push
out
ret
push
mov
scas
pop
negl
mov
lea
push
fisubs
mov
push
fcomps
inc
push
scas
and
pop
outsb
pop
les
shrb
lret
inc
mov
cmp
sbb
andb
xchg
lcall
xor
push
rclb
mov
push
xor
rcrb
jl
and
ja
pop
icebp
dec
lret
out
aas
iret
lahf
sbb
dec
mov
push
filds
push
test
mov
or
cmc
rcr
sub
scas
inc
cld
xchg
jg
add
rorl
xlat
loopne
mov
pusha
loop
mov
lcall
jg
cwtl
add
loope
sbb
pop
mov
leave
les
inc
clc
add
push
and
lock
fsubl
cld
sub
inc
loope
mov
jge
pushl
sahf
cmp
sub
add
dec
outsl
xchg
iret
repnz
test
aam
mov
mov
sti
cmp
stc
jecxz
inc
cmp
mov
into
mov
xor
jb
cmp
adc
push
sbb
imul
mov
jge
xor
inc
outsb
mov
fstpl
pushl
and
aad
mov
arpl
lret
rcrb
bound
cmp
mov
lods
movsl
push
pop
xchg
mov
movsb
out
adc
test
mov
push
push
xchg
mov
rclb
mov
cli
or
pop
insb
int
xchg
jmp
pop
sub
mov
scas
into
rcrl
jge
jb
cmp
outsb
loope
lock
pusha
lods
sub
icebp
mov
add
icebp
into
or
xor
pushf
xchg
dec
call
or
inc
out
add
xchg
rcll
push
inc
mov
and
mov
pop
push
push
lret
ret
ljmp
or
out
stc
mov
cwtl
mov
and
in
mov
insl
enter
mov
int3
in
out
mov
xlat
lret
jnp
inc
pop
loope
xchg
repz
shl
xchg
loope
sahf
xchg
push
pusha
aam
lret
ljmp
add
imul
fdivrp
popf
adc
mov
ds
dec
lea
sbb
mov
dec
dec
movsb
sub
in
les
pop
je
dec
in
enter
jne
das
cmpsl
mov
imul
cld
add
add
sub
adc
mov
xor
add
into
jge
mov
push
ja
into
xor
fldenv
mov
and
inc
mov
lods
xorb
mov
pop
test
adc
popa
insl
sbb
outsl
out
xor
fmul
into
aas
push
pop
mov
daa
xchg
jl
inc
xchg
test
jbe
shr
push
dec
insb
repnz
push
je
popa
sub
ss
jne
fiaddl
jo
int3
test
xor
sbb
mov
push
ljmp
sbb
cmp
push
shlb
push
fbld
jb
add
in
cmp
adc
xchg
jae
mov
lods
in
cmp
out
repnz
jle
push
xor
inc
ret
es
mov
xor
outsl
int3
xlat
std
add
xchg
lcall
dec
jns
scas
pop
pop
xchg
shll
xchg
aaa
jns
fs
jb
in
mov
shrb
sub
add
fcoml
dec
pop
adc
mov
or
faddl
fwait
xchg
lea
mov
or
mov
pop
push
call
aaa
idiv
mov
mov
and
inc
mov
pop
test
outsb
xorb
in
adc
je
adc
or
xchg
repz
sbb
or
dec
add
sub
enter
test
jne
in
or
loope
dec
ret
jp
adc
sbb
fs
daa
aaa
mov
add
aaa
shlb
scas
add
fsubrs
pop
rcll
adc
inc
sti
mov
jle
mov
pop
mov
push
pop
jbe
es
data16
dec
xchg
push
fadd
add
daa
lea
ja
jnp
or
push
rcr
mov
cs
inc
mov
mov
pop
addl
mov
into
movsl
bound
in
rolb
fsubrp
sub
loop
shrd
scas
dec
test
shr
adc
dec
neg
pop
mov
mov
lds
test
jle
xlat
dec
shl
adc
sbb
pop
adc
cld
pop
mov
mov
loopne
mov
mov
hlt
call
jne
ret
repnz
lds
mov
xlat
cli
sbb
out
std
fisubrs
mov
mov
push
cwtl
sub
into
mov
pop
mov
sahf
xchg
cs
inc
mov
mov
xchg
cmp
out
dec
adc
mov
inc
lcall
mov
lret
jb
scas
mov
sbb
out
mov
xchg
mov
les
repnz
outsl
cmp
sub
test
dec
ljmp
sbb
jmp
aaa
jne
ror
cmc
mov
xchg
aam
fstl
mov
adc
jno,pn
mov
scas
jae
xor
xchg
add
and
mov
cwtl
mov
fnstsw
mull
jmp
mov
inc
out
pop
sub
loop
arpl
mov
pop
adc
pop
fldl2t
lahf
mov
test
xor
mov
repnz
adc
cmpsl
pop
mov
push
adc
adc
pop
dec
xor
jmp
or
pushf
dec
jmp
shll
cmp
inc
xor
mov
cmpsl
cli
xor
jg
pop
rolb
push
dec
test
icebp
out
sbb
clc
shll
adc
pop
test
sbbl
clc
mov
mov
daa
imul
cmp
mov
push
in
imul
adc
jb
mov
and
lock
push
ret
sbb
hlt
add
cmp
cmp
mov
lret
scas
push
pop
pop
bound
aaa
and
xor
imul
push
sbb
xchg
and
in
sbb
fwait
adc
push
xchg
negb
or
jno
and
sbb
xor
scas
inc
pop
inc
push
mov
xchg
fisubl
ljmp
popa
mov
cltd
rcl
aam
adcb
dec
cmpsb
xchg
in
sar
fs
fidivs
mov
mov
cmpl
and
lock
js
test
sbb
pop
pop
loop
out
subb
repnz
stc
jnp
test
or
push
icebp
ss
jno
clc
jg
iret
push
mov
repz
mov
push
ljmp
fiaddl
inc
fsts
add
cmpsl
aaa
xor
and
in
jb
cmp
mov
jnp
mov
add
dec
add
mov
push
inc
xchg
cmpsl
jb
mov
repnz
aaa
xor
cmp
test
fnsave
push
insl
jmp
ds
sbbl
mov
out
nop
out
cltd
xor
inc
jge
cmp
sarl
dec
leave
lods
shlb
mov
pop
in
nop
les
or
xor
sub
fsubl
mov
pop
ss
bsf
imul
mov
lahf
xchg
jns
sahf
pop
xchg
mov
xchg
pusha
and
test
jl
outsl
movsl
insl
imul
aad
pushf
dec
or
in
inc
jb
xlat
cmp
stos
ss
test
je
add
dec
dec
out
shrl
out
jecxz
adc
adc
mov
rcrl
mov
cmp
in
xor
adc
push
inc
cwtl
in
cwtl
inc
xchg
repz
add
inc
add
sub
movsl
push
aas
in
mov
lods
push
jns
dec
push
mov
lds
push
sbb
or
cld
mov
in
ljmp
pop
mov
xchg
inc
mull
cmp
push
call
shll
xchg
and
add
adcb
xchg
push
pop
or
xchg
xor
cmp
mov
dec
psllw
sbb
lret
clc
lods
xchg
cmc
aam
sub
mov
test
cmpsl
pop
gs
sbb
imul
mov
pop
dec
in
jo,pn
mov
in
xor
jp
jae
sub
fs
outsb
cltd
sbb
nop
inc
lds
outsl
popa
cmp
fwait
inc
data16
add
xchg
push
mov
cmp
sub
push
cmp
sub
fwait
sbb
sbbb
xchg
and
pop
into
jmp
leave
push
xor
ret
inc
std
add
shl
loopne
push
fildl
roll
and
sub
jg
sti
mov
inc
cmp
pop
xchg
jbe
sti
lock
repz
jb
inc
xchg
mov
push
loop
xor
mov
loopne
lcall
mov
jae
pop
pop
add
sub
dec
push
repnz
jne
test
rorb
jo
sub
cmp
add
lock
dec
ds
xchg
mov
mov
fnstcw
mov
call
cmp
shrl
sti
mov
rcll
es
push
cltd
push
lret
hlt
push
inc
mov
adc
cld
out
jl
es
out
cmp
mov
jno
fwait
cmpsl
pusha
testb
pop
mov
push
in
push
das
xchg
imul
xchg
and
frstor
dec
cmp
insb
out
jno
add
xchg
xorb
mov
cmp
andl
cmc
outsb
imull
aas
mov
pop
pop
mov
sub
cmp
cmpsl
pop
xchg
sarl
call
add
mov
or
add
enter
jp
xchg
mov
lock
jge
sbb
sub
pop
divl
and
test
jecxz
test
loopne
fldcw
jecxz
pop
outsl
sbb
xchg
add
leave
pop
or
clc
dec
jnp
pop
orl
xchg
gs
outsb
test
inc
push
jl
cmp
bnd
ss
shrl
fwait
outsl
pop
fwait
shrb
shrl
pop
into
push
mov
adc
in
pop
sub
out
jmp
pop
clc
stc
ret
out
les
in
outsb
xlat
cld
mov
movsl
dec
inc
ds
mov
aaa
push
jl
dec
roll
or
adc
test
fiaddl
mov
jns
iret
leave
xlat
jg
add
divb
xchg
repz
fcmove
insl
mov
cld
daa
nop
xor
inc
jmp
loopne
cld
aad
jae
ret
or
pop
mov
mov
jp
shr
loopne
pop
xlat
sub
subb
std
mov
jp
popa
and
repnz
out
xor
fxch
lahf
sbb
adc
mul
adc
xchg
or
icebp
or
insl
push
and
ds
in
stos
mov
jae
mov
scas
ret
adcb
xor
roll
in
ja
xchg
push
or
outsl
movsl
xchg
test
adc
icebp
jg
fstpt
inc
lret
xchg
mov
sub
fldcw
dec
xor
fwait
mov
ss
xchg
insb
jle,pt
or
daa
and
jecxz
repz
sub
add
fistpl
pop
and
dec
and
lock
mov
ret
data16
mov
js
mov
cmpsb
flds
imul
pop
and
inc
push
sub
lret
movsb
into
fucomip
mov
cmp
cmp
push
inc
mov
sbb
aad
lock
and
mov
or
push
jae
jnp
pop
movb
lea
pop
pop
aad
repnz
lret
jb
pop
pop
rorl
pop
into
mov
sub
cmp
fwait
je
add
nop
inc
mov
push
mov
fninit
leave
pop
repz
out
test
stos
push
out
mov
sub
push
mov
or
inc
or
jo
repz
addr16
mov
push
fildll
pop
cmp
sbb
and
inc
and
xchg
insl
mov
inc
pop
sbb
mov
cmp
pushf
leave
jo
xlat
adc
jge
sub
adc
ds
xor
adc
popf
inc
ss
pop
mov
xchg
imul
pop
sbb
pop
dec
lret
dec
push
outsb
mov
cwtl
or
out
in
adc
js
add
shrl
inc
mov
pushf
dec
cwtl
fnstenv
outsl
adc
or
pop
insb
fwait
jne
xchg
nop
pop
inc
mov
and
inc
mov
cld
shll
inc
jl
incb
lods
cmp
int3
cmpb
scas
mov
cs
jno
sub
jecxz
sub
fidivrl
mov
sbb
add
pop
lds
movsl
mov
xchg
inc
in
inc
xchg
jecxz
push
clc
icebp
pop
cmpsl
cmp
or
les
sti
jae
lahf
dec
and
xchg
inc
fcomps
test
icebp
pop
sti
cmc
mov
or
mov
aam
push
ds
imul
aas
leave
jmp
subl
xor
call
mov
ret
fmul
outsl
in
add
and
cmp
movsl
outsl
dec
outsb
mov
fadds
sbb
insb
mov
popa
sbb
jp
and
xchg
test
cld
hlt
jbe
jmp
cmp
mov
daa
jp
movl
mov
or
sub
outsl
cmc
into
xlat
mov
sbb
fxch
lods
mov
jae
pop
std
or
out
mov
cmp
insb
mov
push
dec
or
out
ds
aaa
push
imul
jno
aam
push
es
daa
dec
jp
js
push
mov
lcall
lret
and
xchg
aam
cmp
mov
cltd
out
test
xor
and
mov
cmc
inc
mov
dec
in
js
incl
mov
fidivs
scas
or
jnp
dec
arpl
shlb
cmp
sti
sub
out
dec
cltd
xor
sbb
daa
loopne
daa
push
out
int3
adc
leave
loope
mov
cmp
arpl
lret
add
scas
push
iret
mov
adc
and
incb
mov
jo
sub
test
mov
nop
fdivs
lret
add
bound
jne
jnp
outsb
idivb
mov
cmp
rolb
cli
or
jo
jne
or
repnz
and
ror
mov
nop
mov
cmp
cmc
enter
dec
adc
sub
out
cmp
pop
xor
cmp
jg
movsl
out
or
jmp
movsl
pop
rorl
mov
mov
add
mov
jno
jmp
jle
inc
mov
cmp
push
stc
mov
gs
mov
lds
loope
pop
and
jbe
out
pop
insb
or
xor
add
xchg
insl
pmullw
mov
xchg
stc
xchg
mov
or
dec
adc
jp
or
pop
cmpsl
pop
aam
inc
mov
les
cmp
adc
lcall
inc
xchg
xchg
jl
push
mov
fistps
cmp
in
jnp
push
xchg
movsb
mov
pop
fs
mov
jmp
out
push
mov
ret
pop
jns
dec
add
fsubs
lahf
pop
pop
push
lret
push
shlb
or
xchg
jg
scas
push
dec
sub
xchg
cs
int3
fsubl
mov
les
aam
jae
popf
adc
jo
mov
push
sbbl
lahf
imul
out
enter
dec
push
sbb
sbb
mov
sub
into
sbb
dec
or
fwait
xor
repnz
out
jae
xchg
cmp
out
sub
sub
es
mov
mov
insl
add
sub
mulb
cmp
out
cmpsl
out
xchg
mov
test
repnz
or
jbe
adc
lock
sub
jmp
ja
pop
or
sbb
or
aas
fsubr
aas
jae
mov
int
push
mov
adcl
add
dec
add
dec
setbe
cmpsl
in
popf
jmp
hlt
mov
stos
adc
push
int3
sbb
test
xor
icebp
popa
inc
inc
pusha
into
ljmp
jne
into
xor
pop
adc
ret
lea
mov
pop
mov
divb
xchg
imul
or
xor
inc
push
push
push
sbb
sub
mov
aad
push
and
in
mov
dec
lret
dec
mov
and
sbb
aam
ljmp
packssdw
lods
rorb
push
mov
daa
in
aaa
cld
insl
jp
gs
loopne
pop
ljmp
bound
mov
cld
xchg
ret
cmpsl
push
jb
stos
cs
sbb
das
jae
mov
arpl
inc
cmpsb
popl
scas
or
push
fwait
out
cwtl
in
or
or
jnp
dec
ss
fwait
lret
lcall
jmp
mov
daa
sbb
int
sbb
gs
or
mov
dec
inc
xchg
push
xor
imul
lahf
icebp
and
or
inc
and
jl
push
sbb
add
loop
pusha
mov
jo
mov
mov
call
and
pop
xchg
pop
xchg
cmp
insl
int
test
ljmp
and
leave
and
mov
ret
leave
mov
fndisi(8087
int3
xchg
ljmp
sbb
or
cmp
ja
sub
movsb
shl
mov
pop
ret
lods
dec
leave
add
cmp
aaa
subl
in
push
dec
test
ljmp
adc
mov
mov
pop
add
push
mov
fldl
cli
enter
add
and
inc
into
roll
lds
or
loop
stc
xor
rcrl
and
stos
ret
pop
daa
sub
stos
xchg
mov
jnp
mov
inc
lret
mov
sahf
mov
mov
cwtl
push
push
cli
and
xchg
andl
ss
lods
outsb
lods
push
imul
dec
and
dec
cld
test
mov
fadd
sub
out
jmp
mul
push
and
mov
andb
mov
mov
mov
inc
sbb
out
lods
jle
sbb
sbbb
aaa
xchg
in
xchg
popf
and
mov
push
sub
cltd
xchg
pop
test
mov
sub
addl
mov
push
cld
ret
sbb
movsb
enter
mov
pusha
xchg
repnz
stos
push
mov
pop
inc
aad
aam
aaa
pop
add
shl
testb
sti
pxor
das
cmp
adc
int
scas
xor
mov
enter
and
jb
pop
sarl
jo
loope
inc
xor
imul
dec
cmp
in
and
add
mov
loopne
cs
push
inc
mov
push
in
xor
mov
add
stos
or
nop
jg
fs
xchg
in
inc
xchg
jle
in
outsl
lcall
xlat
pushf
inc
cmp
and
push
push
scas
popl
cwtl
inc
outsb
inc
iret
nop
xchg
xchg
pop
sbb
les
int
ret
cli
testb
cmp
pop
pusha
loope
mov
xor
stos
jns
test
stos
setle
aad
repnz
test
cli
out
outsl
data16
cmc
loopne
pop
push
add
incl
aam
mov
add
inc
add
ret
or
les
fwait
jno
push
mov
mov
and
jmp
push
or
jecxz
leave
int
add
std
xor
xchg
ffree
push
repnz
repz
lret
into
pop
mov
jl
mov
bsr
mov
xchg
add
mov
and
add
scas
jmp
test
jle
and
xor
mov
cmp
adc
sub
out
add
push
mov
jecxz
insb
mov
daa
fwait
imul
push
xor
hlt
popa
out
add
mov
lods
sbb
in
mov
pop
call
fisttpll
aaa
lea
or
push
jl
push
jbe
js
fistps
dec
push
push
pop
mov
clc
clc
mov
inc
push
or
popa
call
pop
adc
test
xchg
mov
scas
lock
jecxz
je
popf
lcall
test
cwtl
imul
mov
push
int
mov
dec
clc
jg
clts
popa
xchg
pop
push
lcall
loopne
movnti
lret
xor
rclb
mov
xor
outsb
jg
ror
fimull
sub
aas
ss
repnz
inc
jae
mov
dec
mov
pop
in
pop
or
loopne
fs
scas
pop
movsl
imul
and
rol
dec
js
adc
int
sbb
cwtl
lret
push
sarb
stos
andb
outsb
iret
xchg
inc
test
repz
push
cmc
jle
mov
push
sbb
inc
stc
cmpsb
js
mov
mov
push
and
or
push
test
adc
clc
in
sub
outsb
nop
push
stos
fsts
dec
leave
cmpb
lcall
aam
mov
mov
daa
and
ljmp
add
push
cmp
inc
lea
mov
js
je
jne
repnz
pop
cld
cmpsl
mov
inc
jp
jnp
arpl
lods
adc
out
lods
fistpl
push
jno
push
ljmp
cmp
lods
sbb
mov
fidivs
cmp
or
jp
aam
out
js
cmp
in
push
sub
in
xchg
out
pop
xchg
sti
out
repnz
clc
outsl
test
imul
sbb
jmp
push
movsl
les
push
cmpsl
popl
bnd
ljmp
les
inc
ja
dec
inc
xchg
lods
ficompl
mov
dec
pop
movsbl
pop
leave
les
insl
sub
int3
add
cmpsl
repz
into
in
cmpl
jb
jne
bound
xchg
lcall
in
test
cld
arpl
scas
fdiv
mov
mov
xchg
data16
loop
dec
mov
fiadds
mov
xchg
sti
jo
nop
inc
int3
mov
pop
cmp
xchg
das
sbbl
pushf
into
inc
mov
or
int3
pop
inc
dec
push
cmp
in
xor
ljmp
test
inc
jle
les
cmp
adc
sbb
add
lods
mov
imul
or
out
fwait
mov
jns
enter
outsl
nop
bound
cltd
push
out
pushf
jecxz
loope
dec
int
add
fsubp
out
ret
xchg
movsb
push
out
ficompl
ja
mov
pop
mov
scas
push
mov
loop
mov
pop
stos
scas
add
pop
inc
ja
ret
fistpll
and
cltd
adc
push
mov
xor
call
shrl
xor
xor
jbe
xchg
or
add
sub
inc
loop
pop
rolb
jge
lcall
and
je
cli
into
inc
fldcw
mov
pop
xor
cs
jmp
sbb
push
sbb
dec
push
mov
cmp
xchg
xorps
lahf
sub
mov
dec
inc
rcrb
pop
das
xchg
dec
daa
and
mov
cwtl
ret
jmp
aas
mov
xchg
xor
cltd
or
and
xchg
xchg
lds
add
rcrb
pop
mov
dec
rcrb
je
arpl
movsl
fst
sub
push
aaa
mov
and
aas
cmp
xchg
bound
xchg
mov
and
push
decb
dec
outsb
lock
fs
or
rcrl
cwtl
adc
insb
xor
xchg
and
pop
mov
push
pushf
in
and
flds
dec
add
or
cli
rol
in
aam
ljmp
rcrl
push
outsb
sbb
rcll
lahf
cli
mov
xchg
lcall
das
push
mov
jl
daa
sub
jb,pt
pop
in
and
xchg
test
cwtl
inc
sbb
sbb
out
stos
cmp
les
lret
lret
mov
cmp
dec
jmp
out
addl
negb
popf
push
dec
rcrl
ret
mov
bound
call
sbb
xor
fcoms
cmp
pop
mov
xchg
and
push
dec
inc
scas
xchg
mov
bound
xlat
loopne
scas
xchg
idivl
jg
jp
adc
mov
add
add
movsl
mov
xchg
fmul
iret
mov
mov
xchg
xor
xor
sub
xchg
lret
lods
jb
lcall
jl
push
mov
push
and
and
fs
sub
jbe
mov
push
push
fnstsw
aad
and
idivl
dec
ficompl
aad
adc
jb
testl
jecxz
insb
mov
loopne
mov
push
out
jb
mov
js
test
out
or
into
jns
push
stos
and
xor
inc
cmc
inc
andb
icebp
mov
mov
add
aad
cli
adc
mov
insl
cmp
xlat
pop
adc
daa
jmp
inc
pmulhuw
xor
ljmp
mov
inc
jno
add
xlat
pop
das
cmp
je
dec
xor
scas
call
jne
fisttpl
mov
subl
mov
imul
sub
inc
cld
pop
cmpsl
jbe
jmp
lahf
xor
and
push
faddl
sub
push
and
cwtl
es
pop
jl,pt
or
jbe
lret
lea
repnz
xor
lahf
stc
jno
fbstp
mov
adc
leave
xchg
mov
add
scas
mov
add
sub
ja
or
mov
lds
fstps
in
mov
mov
mov
pop
sub
ss
push
out
inc
js
cltd
inc
cmp
mov
push
or
leave
cli
dec
sub
adc
mov
int3
popf
enter
shr
mov
jp
xor
clc
and
and
or
mov
sti
push
aam
in
pop
daa
cmp
shrb
imul
stc
dec
adc
or
in
lret
imul
fildl
jae
jne
lock
push
push
cmp
femms
lahf
push
les
pop
fdivs
pop
outsb
int
mov
test
shr
adc
sub
or
jl
ja
pushf
jp
lret
sub
out
xchg
shr
dec
jb
cmp
test
cmp
lea
sub
mov
cmpsl
cmc
imul
mov
call
mov
and
shrb
lret
push
pushf
ret
jns
adc
cs
xor
movsb
mov
sti
adc
jmp
mov
imul
jg
xchg
fcmovnb
dec
loop
cmpsb
cmpl
fcomp
mov
jg
push
sub
jl
in
shlb
mov
mov
xchg
je
add
testl
or
jge
fdivrl
outsb
adc
jle
bound
aas
xor
into
jle
movb
aaa
dec
inc
sbb
pop
in
mov
popa
rcrb
or
mov
in
ja
mov
or
ret
inc
xor
subl
stc
inc
sbb
inc
outsl
cld
xchg
xor
jg
mov
ja
ret
mov
dec
icebp
jmp
ljmp
cltd
inc
lods
sti
sub
jl
mov
jl
mov
adc
fldenv
mov
fmulp
jg
ljmp
cmpsl
inc
ds
ljmp
test
add
mov
sbb
dec
stc
cmc
mov
pop
out
ljmp
xchg
dec
fsub
fwait
movsl
xchg
push
xchg
lcall
outsl
js
fisubl
imul
std
adc
sub
popf
out
es
pop
jmp
sbb
cltd
int
imulb
fwait
jge
shl
inc
push
sti
jbe
sbb
lcall
push
ja
test
mov
icebp
jge
push
xor
or
inc
les
xor
sbb
sbb
xchg
cmpsl
fists
xchg
test
scas
ret
andl
movsb
int3
mov
xor
adc
pop
sub
xor
out
add
into
mov
xor
lods
loope
pop
movsb
xchg
jecxz
stc
mov
call
jo
mov
sub
xchg
idiv
cmp
pop
test
sub
push
popf
inc
jmp
inc
inc
les
stos
out
popf
xor
jno
cmp
pop
fiaddl
cmc
js
and
ret
jle
cmpl
icebp
hlt
call
aas
jns
imul
jae
sbb
mov
repz
ds
ljmp
xchg
fcoms
stc
sbbl
cmp
jae
es
out
cmp
incl
sub
mov
in
loop
dec
rclb
push
add
jo
leave
sbb
adc
ljmp
lock
in
sbb
adc
icebp
insb
ljmp
cli
jno
pop
out
repz
adc
lahf
dec
cmp
enter
imul
int3
cmpsb
jle
push
jp
aam
leave
xchg
xchg
je
add
pop
and
repz
cwtl
in
popa
call
jae
mov
push
loop
jle
lret
xor
cmp
xor
mov
cmp
jne
or
loope
out
mov
test
xor
in
cmp
xchg
adc
push
cmp
pop
movsl
movsb
addl
xor
xchg
pop
shlb
push
adc
and
cwtl
test
leave
je
xor
lahf
sub
gs
push
iret
xchg
dec
out
jp
adc
hlt
in
lea
pop
mov
add
sub
jmp
sahf
sub
sub
mov
dec
cld
call
andl
xor
pop
lea
add
fucomp
ss
gs
mov
or
dec
mov
aaa
or
dec
fdivrs
lret
in
les
cmp
aad
pop
fnstsw
dec
push
xchg
orps
mov
clc
bound
dec
ss
outsb
in
fsts
and
in
hlt
dec
scas
cs
scas
repnz
mov
jge
dec
push
sbb
xchg
out
xchg
or
aaa
jae
xor
ds
pop
xchg
or
mov
jl
pop
loop
pushf
dec
stos
lods
rorb
pop
jle
loopne
mov
add
mov
adc
sbb
xor
dec
mov
mov
mov
ficoml
inc
sbb
or
or
xchg
push
mov
negl
daa
mov
out
push
js
or
mov
mov
dec
jecxz
mov
xchg
mov
sti
fcoml
cmc
ret
cmp
or
sbb
push
mov
adc
push
pop
cmc
xchg
xor
jo
sbb
jp
inc
xchg
or
dec
push
es
into
lock
sbb
pop
pop
sti
lds
and
fwait
push
dec
fwait
inc
sti
xor
stc
mov
mov
mov
adc
icebp
xor
cmp
fldl
or
mov
mov
lock
inc
sahf
pop
jg
jp
inc
sub
push
adc
popf
insb
inc
icebp
lret
pop
jle
adc
mov
imul
rolb
push
push
mov
xor
xor
dec
icebp
roll
ss
inc
mov
push
sbb
out
fwait
movl
fimuls
fs
test
push
push
sub
lea
test
and
mov
or
pop
cs
loop
sub
sub
out
inc
sub
enter
mov
xchg
jo
pop
pop
xor
pop
fcomip
xchg
sarb
inc
aas
clc
popf
mulb
cmp
ss
xchg
pop
gs
mov
sub
inc
sub
int3
gs
mov
fs
adc
aaa
add
dec
xlat
fimull
xor
pusha
pusha
aam
scas
jbe
jg
push
or
negl
xor
ja
adc
jg
cmpsl
inc
aas
mov
sub
and
cmp
jg
mov
pop
cltd
cwtl
dec
dec
mov
test
pop
fucomi
ljmp
out
and
dec
fldl
pop
shl
pop
sbb
sub
repnz
fisubl
or
std
cmp
repnz
inc
cmc
xchg
daa
push
and
add
decl
cwtl
pop
xor
ret
addr16
andb
and
xchg
mov
imulb
nop
ljmp
imul
xor
loope
fsubrp
test
push
sub
push
cmp
xor
popf
fsubr
sbb
jbe
add
pop
dec
jle
or
pop
fistps
pop
dec
das
mov
in
je
inc
adc
sbb
ds
inc
data16
xchg
scas
add
xchg
mov
pop
sahf
rcll
cld
js
test
mov
leave
push
jns
inc
sbb
push
sub
jp
adc
jg
xor
stos
and
nop
dec
adc
nop/reserved
inc
hlt
insb
movups
xor
testl
in
and
fistps
xchg
lods
xchg
push
mov
scas
push
add
jno
loopne
cltd
cmpsb
push
pop
dec
mov
aaa
dec
add
lret
test
movsl
lahf
sub
mov
fwait
rcrb
sub
loopne
mov
lea
lcall
xchg
loop
nop
idiv
test
lahf
mov
pop
cmp
scas
mov
jmp
icebp
jecxz
jge
fcomps
xchg
push
jbe
data16
in
cmp
mov
mov
pop
je
adc
push
lea
popa
jg
push
or
in
jae
mov
clc
dec
ss
das
dec
test
lret
pop
mov
push
ja
mov
dec
and
jb
cs
and
adc
adc
xchg
ss
aaa
jle
movsb
mov
mov
push
das
js
js
mov
dec
inc
icebp
es
mov
out
out
je
sub
frstor
or
out
mov
mov
xor
cs
js
lahf
push
aad
aad
js
push
adc
es
cltd
into
cltd
mov
imul
inc
pop
add
sbb
inc
pop
popa
push
das
jle
push
pop
sbb
leave
cmp
and
sub
mov
gs
shll
loop
add
sahf
fdiv
call
sahf
xchg
dec
or
add
inc
lods
fwait
addr16
shrb
ficoms
pop
out
cli
insl
or
rclw
and
shrl
sub
xor
ja
roll
add
cmp
mov
dec
lds
cmpsb
cli
shrl
sbb
jae
cmpsl
xor
adc
pop
mov
mov
xlat
push
daa
jmp
pop
addb
and
mov
cmp
pop
aas
jbe
cs
mov
cld
sbb
push
mov
in
push
mov
adc
push
ds
push
mov
daa
popa
neg
mov
adc
fiadds
push
cmp
cmp
movl
mov
or
mov
stos
shrl
sub
add
inc
and
test
icebp
dec
test
jb
xchg
adc
cmp
pusha
lds
ret
add
out
ljmp
out
jg
in
outsl
xchg
insl
andl
adc
inc
pop
aas
jae
mov
mov
pop
sbb
pop
pop
cmpsl
xchg
pop
jns
in
jecxz
ja
imul
push
hlt
sub
push
fidivrs
push
lods
sbb
cmc
pop
or
or
jne
push
pop
int3
shrl
clc
xchg
inc
push
push
sbb
lods
jecxz
xor
fisttpl
aaa
ja
insb
lret
push
lods
mov
inc
pop
dec
push
mov
out
inc
int3
vmovmskpd
popa
cmp
jne
scas
mov
shll
sbb
rcrl
int
push
ja
add
std
sbb
xor
sbb
clc
loope
cld
imul
icebp
movl
cld
xchg
or
dec
das
push
std
out
mov
inc
mov
rcrl
loopne
sbb
dec
mov
int3
js
xor
cmpb
inc
enter
repz
ja
nop
mov
push
push
inc
stos
adc
pop
mov
push
fbld
imul
dec
xor
loop
imul
ds
scas
stos
sbb
rorl
mov
and
fstps
mov
sti
mov
mov
loope
lods
lahf
sbb
or
adc
addr16
loopne
cwtl
xor
push
loop
mov
adc
pop
jo
jnp
sub
bswap
bnd
cmpsl
enter
or
xchg
cwtl
xor
lds
add
push
inc
sub
mov
leave
out
xchg
pop
mov
stc
dec
dec
cmp
pop
jo
inc
sbb
mov
xchg
adc
mov
cmp
xor
rclb
cmp
dec
pop
pop
cld
and
fbstp
adc
lahf
cmp
jge
mov
ja
mov
jecxz
ret
inc
jecxz
fsubl
lods
push
enter
xor
jo
outsl
mov
pop
pop
dec
mov
fcmovnu
pop
push
mov
push
xchg
mov
ja
arpl
jo
test
int3
sti
pop
sbb
xor
xlat
in
pop
cmp
leave
sbb
and
insl
cmp
inc
subb
or
jge
pop
sub
notb
dec
add
aaa
or
mov
jecxz
data16
aas
mov
inc
push
xor
std
sub
adcb
popf
dec
pop
adcl
xor
cmp
iret
mov
cwtl
addr16
loope
ret
jmp
loope
addr16
call
xor
inc
jmp
das
inc
mov
xor
push
xor
les
ds
push
pop
int
fmul
decl
cli
jmp
jle
adc
add
aam
xlat
in
cmpsl
gs
aas
push
inc
outsl
xor
push
or
popf
in
clc
and
cmpxchg
jae
xchg
cmp
push
gs
loop,pt
mov
dec
into
xor
sbb
mov
js
mov
in
sub
sub
cld
dec
xchg
sti
sbb
cltd
mov
adc
xor
mov
call
push
or
cltd
std
xorl
adc
mov
imul
movd
mov
int3
outsl
or
add
adc
sbbb
lahf
or
rcr
lahf
push
mov
cmp
in
jnp
sarb
ljmp
xor
addb
mov
jae
xchg
pop
xchg
out
shl
sarb
mov
ljmp
mov
add
or
push
lods
loop
mov
pop
lret
cmc
lcall
ljmp
xchg
lcall
mov
lods
fistpll
jo
movsl
or
jo
or
inc
sub
pop
dec
mov
add
mov
data16
inc
je
ja
movsb
fisttpl
inc
repz
out
jmp
pusha
xlat
out
mov
repz
push
mov
and
loopne
xor
adc
sub
sti
dec
sub
cmpb
xchg
cmp
ficoml
jg
adc
popf
gs
aaa
ja
sub
cmp
adc
pop
dec
xchg
stos
jb
cmpsl
cld
adc
add
pop
mov
mov
sbb
push
daa
xchg
pop
jne
inc
adc
pop
dec
dec
pop
test
cmp
cmp
mov
stos
adc
sub
xchg
sahf
fcoml
and
inc
call
out
jae
jns
frstor
push
sbb
in
fwait
xor
xchg
sbb
int3
mov
fwait
xor
mov
dec
in
repnz
dec
ljmp
test
mov
sbbb
adc
pop
lds
rorb
mov
stos
push
jo
insb
scas
sarb
inc
and
xchg
sub
xlat
and
arpl
fs
in
sbb
adc
in
pop
xor
fbld
imul
cmp
cs
ret
xor
add
stc
adc
loopne
mov
mov
xor
lahf
and
dec
daa
push
test
mov
test
inc
push
orb
outsb
adcb
push
repnz
shl
xor
clc
lret
and
jbe
sub
mov
push
or
popf
sub
lret
out
cmp
sbb
nop
in
push
add
inc
les
ficompl
xchg
add
pop
add
fstps
adc
sub
mov
and
cmp
in
xor
sbb
pop
mov
popa
mov
bound
mulb
ja
ret
out
lret
je
cmp
sbb
sub
cs
fcompl
jecxz
xor
pop
outsl
cli
add
push
fcom
push
adc
pop
jbe
inc
lret
cmp
add
push
mov
sarl
and
int3
dec
imul
dec
dec
fmul
dec
add
mov
je
push
push
jp
push
or
sarb
andb
lds
lret
test
and
push
shrb
and
pop
nop
mov
jbe
cmp
daa
fiadds
imull
push
insl
out
fists
js
adc
xchg
push
out
repnz
notl
imul
sbb
inc
and
roll
lock
int3
push
inc
pop
dec
xor
incl
xchg
pop
clc
xchg
xor
xchg
sbb
stos
mov
pop
sti
jp
inc
sub
icebp
mov
sub
pop
jp
loop
or
shl
orb
in
das
pop
pop
add
loopne
fistpl
add
repz
test
and
clc
pusha
adc
jb
frstor
loop
imul
clc
sub
mov
sub
sbb
jns
push
or
gs
mov
mov
scas
ja
sub
dec
fldl
sbb
loope
mov
cwtl
lret
arpl
mov
push
jg
data16
xor
dec
mov
mov
ret
jl
xchg
rorb
adc
andb
inc
js
into
sarb
int
mov
idiv
push
mov
xchg
cltd
mov
lods
dec
mov
mov
scas
mov
xor
repz
es
sub
push
mov
pop
mov
and
lea
xchg
cltd
dec
push
mov
cmp
imul
je
dec
dec
push
mov
ffree
fnstenv
mov
insb
sbb
lea
lods
jb
cmp
mov
push
jge
xchg
push
lods
add
mov
mov
out
pop
popf
pop
sub
test
push
add
arpl
or
mov
mov
int
add
fldt
mov
cltd
sbb
add
fisubrs
nop
lock
and
add
cmp
inc
jbe
outsl
es
xchg
mov
jg
lret
xchg
addr16
jle
pop
mov
stos
movb
cmp
or
add
push
enter
sbb
outsl
push
subl
pop
xchg
mov
mov
ret
aaa
lods
imul
jl
add
rclb
fstps
rcrl
adc
ds
shlb
int3
mov
adc
pop
stos
into
push
ud1
push
sub
jnp
dec
fldcw
bound
add
push
les
std
xchg
and
jecxz
and
cmp
shr
push
and
loop
jne
loopne
outsb
mov
inc
push
mov
push
mov
add
mov
xor
cmp
mov
mulb
pushf
leave
push
cltd
dec
jns
sub
aaa
jp
sbbl
out
mov
xchg
or
imul
nop
lcall
ds
adc
xchg
adc
inc
addr16
push
imul
sahf
aaa
pop
xlat
cs
test
pop
cld
cmp
lods
pop
hlt
or
cmp
adc
add
xor
aam
test
fisubs
mov
xchg
repnz
into
fcompl
or
out
es
ss
mov
xchg
rolb
cwtl
push
rclb
sub
mov
adc
xor
stos
or
adc
jae
ficompl
lds
in
mov
jo
mov
fcmovnb
mov
es
lods
lret
dec
popf
stos
mov
push
lods
aas
add
loopne
jnp
xchg
mov
pop
repnz
imul
out
xchg
aas
ds
add
push
mov
testb
cmp
mov
xor
les
xchg
mov
fs
jno
enter
sahf
mov
sub
jbe
imul
movsl
add
inc
mov
inc
sbb
jb
scas
in
fidivs
and
insb
leave
or
inc
repnz
add
and
xchg
filds
sbb
cmp
and
and
sbb
add
shll
pop
fcmovb
clc
sbb
fdivs
mov
repz
loopne
dec
add
mov
xorl
pop
and
shlb
cld
sbb
call
lods
jg
push
sbb
or
adc
sbb
add
xchg
outsl
push
in
test
test
inc
sbb
xchg
ficoms
jmp
jle
dec
xor
loope
mov
pop
call
sbb
icebp
mov
sub
fwait
push
xchg
loop
loop
mov
mov
imul
leave
mov
fidivrl
sub
roll
jmp
shlb
xor
adc
mov
and
decl
dec
jno
push
fcompl
xorb
repnz
mov
sbb
daa
movsl
jp
std
arpl
fsqrt
xor
mov
jnp
inc
xchg
outsb
dec
adc
mov
out
xlat
popf
inc
or
movsl
cmp
cmp
cmp
in
stos
mov
je
into
xchg
cmpsb
cmpsl
lret
push
lods
divb
pop
mov
aaa
mov
pop
and
testb
stc
aas
jae
sbb
adc
sbb
jae
outsb
sub
cmc
loopne
notb
fcompl
mov
cwtl
jns
xor
mov
sbb
dec
jns
jp
dec
test
das
or
jmp
cmp
mov
gs
push
sbb
inc
mov
in
sbb
pop
jmp
and
and
pop
adc
stos
sub
mov
jl
adc
inc
jne
addb
stos
jmp
add
add
and
xor
icebp
hlt
adc
push
fnstenv
push
cwtl
mov
out
test
jge
mov
repnz
imul
xor
dec
cmc
adc
dec
pop
xchg
shll
push
cltd
add
fidivl
or
inc
addl
cs
ss
aad
lods
cmc
ljmp
push
adc
xchg
ror
xor
out
xchg
jp
adc
push
mov
pop
jmp
loope
cmp
add
outsb
into
rclb
imul
push
mov
cmp
int
rclb
push
xchg
outsl
xlat
xchg
pop
jle
push
shl
leave
mov
fnsave
push
adcb
pushf
cwtl
mov
pop
aaa
xchg
jg
mov
outsl
push
jae
test
and
push
mov
inc
cld
out
inc
mov
lds
in
fsubrs
sub
sbb
sahf
insb
pop
jne
inc
mulb
in
xchg
pop
xchg
push
and
pop
pusha
mov
icebp
sbb
nop
mov
mov
xor
xchg
jbe
or
sub
mov
leave
movsb
jg
sti
push
dec
aaa
jno
in
adc
jno
addr16
aam
push
int
sub
mov
inc
add
pop
jo
out
daa
aaa
and
or
sub
repz
outsl
lods
mov
int3
daa
mov
rcl
rolb
aad
arpl
xor
mov
sbb
stc
aam
cmp
mov
cwtl
enter
sarl
adc
ret
rclb
leave
jecxz
cmpl
mov
and
sub
ficoms
cmp
xchg
call
mov
lret
push
cmp
or
mov
mov
xchg
loopne
cli
out
jnp
enter
xchg
mov
mov
fildl
pop
adc
push
fdivrs
xor
mov
in
imul
inc
cld
inc
stc
mov
outsb
in
push
xchg
stc
ret
mov
outsb
adc
pop
xor
inc
push
mov
xchg
cmc
sub
addr16
push
stos
push
jnp
mov
xchg
les
or
jge
int3
aam
mov
mov
mov
xor
xor
push
shrl
dec
add
fs
mov
mov
sub
cmpsl
test
lea
mov
mov
sbb
xchg
cmpsl
sub
mov
jl
out
xorb
jg
stos
mov
add
int
jl
xor
ficoml
arpl
sbb
jae
movsb
sbb
inc
add
xchg
mov
addr16
jo
inc
lahf
incl
sti
fstpt
out
cmpsl
popf
pop
pop
mov
data16
outsb
inc
fistpl
or
inc
sbb
int3
fbstp
sub
enter
andb
xlat
in
das
sahf
repz
xor
xchg
sbb
loopne
jne
sbb
mov
es
sbb
push
push
sbb
shll
cmp
scas
rol
or
xor
js
xor
rorw
push
mov
add
jecxz
lea
stos
inc
icebp
cmc
mov
adc
dec
test
test
leave
cli
vpmaxub
mov
mov
fisubl
stos
mov
or
mov
shlb
js
dec
jmp
jae
xchg
test
push
pusha
pop
jno
xchg
test
xchg
js
mov
pop
cmp
pop
je
pop
jge
popa
sub
sub
dec
sbb
cmp
outsl
ss
fnsave
pop
pop
pop
repnz
inc
xor
shlb
push
push
in
push
sub
rcrl
mov
in
cmp
lea
inc
cmpsb
push
pop
rcll
xchg
movsb
push
add
fisttpll
mov
aad
bound
lock
jle
and
pop
aad
incl
mov
jne
xchg
mov
jle
push
and
arpl
inc
or
adc
movsb
fisttpll
inc
ret
repnz
int
sub
sti
pop
repz
aaa
fimuls
jmp
xchg
sub
rcrl
out
xor
add
data16
mov
repz
inc
fwait
jle
sub
mov
push
scas
stos
les
jge
push
xchg
dec
inc
xchg
cmpsb
add
push
ss
pop
mov
inc
and
fsubp
sub
and
std
dec
js
leave
sub
psllq
push
xchg
adc
stos
add
sbb
mov
or
je
shll
movl
xchg
cwtl
pop
jns
fcoml
inc
mov
cmp
jb
test
outsl
movsb
adc
jmp
xchg
stos
pcmpeqb
adc
test
scas
sbb
or
mov
fnsave
lahf
aaa
pushfw
outsl
jg
in
iret
xlat
int3
popa
push
dec
or
xor
aas
pusha
sub
cmp
cmp
dec
cltd
into
push
ds
ds
and
jb
loop
jmp
xor
mov
mov
inc
pop
pop
test
pop
stc
dec
mov
xor
mov
add
jp
out
clc
testb
xor
xchg
mov
fmul
stc
lcall
and
xor
in
jle
ret
inc
push
inc
dec
cltd
adc
cmpb
lods
dec
cmp
xchg
xor
jmp
adcb
jne
xor
inc
aaa
and
mov
adc
mov
arpl
pop
dec
outsl
push
in
stos
rcll
bound
pop
push
xor
std
mov
push
clc
fdivs
dec
sti
pusha
in
je
jle
adc
aam
sub
inc
xchg
imul
xor
out
push
orl
cmpl
adc
out
adc
test
cmp
sbb
out
inc
xor
xor
cmc
mov
sbb
sub
xor
xchg
mov
xchg
mov
addl
ret
andb
arpl
mov
popa
idivl
addb
out
int3
inc
loopne
cmp
out
xchg
pop
push
jno
adc
stos
pop
lea
fnstsw
xchg
xor
pushf
aam
sbb
cmp
dec
rorl
xchg
ljmp
ljmp
jmp
loope
scas
mov
push
nop
movsb
push
sahf
xchg
inc
dec
popa
pop
add
cmp
adc
cmp
or
jne
jo
int
out
sbb
push
add
ud2
push
xchg
call
push
and
inc
insb
cmp
dec
xchg
lods
sbb
stos
sbb
js
inc
bound
jae
mov
mov
fucomp
mov
mov
into
loope,pn
mov
push
sahf
cmpsl
fwait
lea
into
pop
ja
inc
mov
pop
in
aad
pushf
fwait
cmp
fdiv
xor
mov
fadd
stos
icebp
dec
push
notb
jmp
je
aas
jg
push
aaa
and
or
icebp
imul
cmp
mov
popa
dec
out
std
jmp
stos
test
sbb
xor
adc
stc
and
add
std
ffree
insl
mov
scas
jmp
js
and
test
ja
int3
mov
pop
fs
fildl
inc
dec
jns
add
push
adc
icebp
cmp
mov
loopne
popa
bswap
adc
pop
aas
jp
mov
sbbb
popa
imul
pop
in
outsb
inc
fisubs
aam
int
ja
mov
daa
pop
xor
push
add
mov
bound
sub
push
inc
test
pop
cmpsl
das
test
int3
jno
and
cmpsb
outsl
scas
lea
adc
or
int3
ficomps
lea
push
xchg
and
inc
ret
fcoms
hlt
fwait
repnz
and
xchg
xchg
xchg
call
jno
in
mov
call
ficoml
and
xchg
sub
fmull
pop
jmp
lods
loope
sarb
mov
rolb
mov
mov
mov
xor
stc
int3
ja
xchg
ds
aaa
cmp
imul
mov
pop
push
out
sbb
cmpsb
xor
jmp
mov
inc
pop
and
je
bound
sbb
sarl
out
xor
mov
mov
dec
icebp
mov
addr16
jo
xor
aaa
icebp
xchg
cmpsb
test
mov
pop
xorl
mov
sbb
xor
jmp
mov
lods
dec
movsb
cmpsb
pop
and
add
cmp
mov
sub
popa
push
jbe
mov
add
jb
pop
inc
imul
out
in
jns
sub
and
xor
sub
cmp
mov
ds
stos
lods
cmpsl
les
push
mov
cmp
into
xchg
xor
mov
pop
sub
sarl
dec
sbbl
out
les
or
mov
in
cmp
loope
inc
rolb
xchg
mov
inc
divl
jecxz
xor
sub
push
jo
sbb
faddp
std
push
xlat
out
adc
sbb
movsl
add
sarl
sub
mov
dec
xchg
push
xor
dec
add
lcallw
mov
test
decb
ds
shll
mov
pop
popf
imul
pushf
out
pushf
dec
xchg
mov
in
jge
cli
xchg
sub
pop
es
movsl
hlt
jae
lock
jmp
lret
aas
pusha
push
mov
and
mov
fadd
push
pop
pop
xchg
nop
int
adc
cmpsb
fldl
test
jo
mov
ret
lret
add
or
lcall
bound
dec
test
cld
mov
movnti
jae
stc
cmpl
xchg
sbb
js
xor
xor
movsl
and
cmp
sti
repz
sahf
fs
pop
scas
call
lahf
test
adc
jle
mov
call
adc
and
xchg
jno
test
imul
jb
sarb
cmp
mov
sub
cld
out
sub
sbb
xchg
loop
dec
daa
sub
bound
jo
fistps
dec
xlat
lcall
lea
aaa
ret
popa
adc
cmp
add
mov
mov
in
imull
outsl
mov
dec
cmc
fldcw
and
dec
dec
pop
inc
nop
dec
pop
jnp
mov
sahf
adc
and
or
fstl
rol
adc
jmp
lds
into
dec
loope
cltd
mov
jo
aad
rcrb
cltd
test
fisubrs
lods
jle
arpl
pop
es
mov
and
xor
ss
in
xchg
adc
in
xchg
mov
jae
sti
aas
in
xor
xchg
xor
add
sub
sub
inc
je
inc
je
xlat
add
cld
fdivrs
push
cmp
and
lahf
pop
leave
sbbb
pop
mov
sub
push
xor
ja
in
cmpsl
stos
sub
add
ja
aam
fstpt
mov
outsb
test
fs
inc
dec
std
sub
or
mov
mov
adc
divb
jle
in
in
in
outsb
pop
mov
push
add
loope
cmp
xchg
mov
push
cltd
or
xchg
mov
fcoms
jl
dec
inc
push
sbb
cmp
mov
shlb
jg
enter
xor
test
repnz
push
and
imul
in
pop
jb
add
shr
out
push
mov
mov
insb
aas
aad
movsl
scas
call
xchg
jbe
add
mov
jg
pop
fcoms
pop
cmp
push
out
lcall
mov
adc
pop
ret
rcll
push
jle
inc
lahf
mov
movsb
insb
imul
xor
arpl
cli
inc
bound
push
jmp
jecxz
xor
sub
sbb
push
or
mov
jge
cmpl
lea
outsb
pop
mov
out
mov
ja
inc
pushf
xchg
push
jmp
mul
loopne
jb
clc
mov
add
test
inc
daa
pop
outsl
std
ja
js
mov
popf
jne
push
aaa
xor
sub
xchg
adcb
ds
and
mov
lds
fldenv
mov
ljmp
pop
dec
pusha
fdivrl
mov
push
jns
pop
sarl
pop
or
ret
out
pop
mov
sub
xchg
cltd
or
ficomps
mov
movsl
xchg
inc
xchg
js
adc
xchg
es
push
sar
icebp
inc
popa
add
push
lock
mulb
dec
push
mulb
fidivrl
mov
bound
data16
pop
jne
stc
cwtl
mov
orb
mov
arpl
push
in
test
enter
sub
mov
lods
push
sub
jo
fsubrl
adc
sub
lods
cli
cmpsl
pop
test
imul
shrl
adc
into
jp
mov
fwait
push
mov
mov
cli
mov
lods
mov
mov
pop
or
sub
xchg
ficomps
xor
mov
add
jnp
and
xor
mov
arpl
call
push
js
rcrl
leave
jbe
push
loopne
sbb
fdivr
leave
loope
test
std
enter
arpl
rcr
lea
mov
aaa
cmp
shrb
add
int3
push
hlt
add
mov
pop
sub
jmp
jmp
in
xor
cmp
or
push
movsl
fstl
out
pop
cmp
jg
out
jge
ficoms
mov
xchg
or
iret
scas
test
bound
sub
rcll
es
in
push
mov
sbb
or
loop
xor
mov
and
mov
jo
out
mov
or
cs
xlat
shrb
xor
dec
fs
repz
mov
loop
jo
roll
adc
mov
test
test
jle
cmp
lods
lea
fwait
dec
push
pop
repz
cli
push
test
leave
push
fmul
mov
inc
inc
divl
rclb
jge
in
fwait
lock
xor
cli
mov
icebp
adc
int3
fs
roll
and
jae
inc
sti
prefetch
mov
add
mov
jb
mov
mov
cmp
into
cltd
shlb
jns
jmp
loopew
shl
incl
adc
cs
enter
lds
ret
mov
movsb
lret
push
jns
aas
test
xchg
sub
xchg
mov
adc
fnstenv
inc
in
insl
popa
iret
outsb
xchg
out
inc
mov
mov
ja
mov
mov
inc
pop
sarl
sbb
dec
inc
out
push
push
cmpb
and
inc
repz
or
mov
mov
cmp
call
jns
fcompl
jnp
and
filds
adc
xorl
sbb
and
sahf
mov
dec
clc
repnz
enter
mov
sbb
cmp
insl
jne
and
jl
push
test
loope
jo
mov
mov
pop
incl
rcll
cmp
lods
fs
int
pop
pop
aaa
mov
shlb
into
outsl
dec
dec
jg
lods
add
push
imul
movsl
adc
inc
cmpsb
jg
lea
mov
data16
test
flds
xor
pop
lds
xchg
repnz
sbb
nop
mov
inc
xorl
mov
in
jmp
ret
fisttpll
ds
ja
and
andb
ret
add
loop
inc
or
sbb
stos
sbb
push
nop
cmp
iret
movsl
gs
jecxz
adc
sbbl
in
or
inc
cmpb
das
mov
outsl
pop
push
xchg
cmpb
imul
test
popa
ret
fcomps
and
pop
push
cmpsb
sbb
adc
test
fdivr
mov
movsb
pop
xlat
scas
or
xchg
lret
mov
lds
mov
push
dec
scas
adc
and
lret
sbb
fs
cmp
add
sahf
push
out
decb
jne
add
pop
xchg
lods
mov
add
add
mov
sub
scas
jl
ror
push
and
fcomps
pushf
addr16
rcrl
enter
jns
fcoms
fists
push
lods
push
test
sbb
mov
gs
or
loope
gs
jmp
rol
mov
test
fiaddl
inc
nop
xchg
out
xchg
and
jb
sbb
xor
sbb
loop
inc
cmp
sub
add
imul
outsl
and
jnp
adc
and
sbb
xor
cwtl
dec
sbb
adc
mov
mov
sbb
cltd
out
ss
cmpsl
faddp
pop
lods
es
inc
hlt
cli
stos
loop
scas
andl
cld
rorb
shr
cmp
call
stc
fwait
sarl
sub
or
or
jge
leave
fstpl
jmp
ss
icebp
cmp
nop
testl
nop
xlat
iret
in
das
xchg
cwtl
jg
lret
jmp
jnp
cmp
fsubs
in
sahf
adc
mov
lds
popa
or
inc
jno
or
cmpl
or
rcr
jbe
jle
decl
fdivrs
pushf
call
leave
out
test
jbe
adc
inc
sbbl
outsb
pop
ja
mov
call
mov
push
out
dec
push
loop
stc
mov
pop
adc
mov
insl
in
add
lea
xchg
outsl
jbe
cli
std
jbe
addr16
fwait
mov
xchg
add
mov
jmp
mov
cmp
pop
pushf
movsl
jp
xor
outsl
lret
fs
fmull
or
inc
lds
lds
xor
stos
les
xor
xor
jo
mov
mov
out
xor
cmp
push
out
jbe
mov
cwtl
dec
repz
fsubrp
cwtl
push
or
les
ja
mov
pop
mov
sahf
out
aas
jae
aam
ds
jmp
xchg
sarb
in
mov
fimuls
pop
mov
lods
movsb
ret
sbb
aas
sub
mov
add
cmp
sahf
xchg
adc
cmpb
fisttpll
push
pop
or
sub
ss
daa
push
inc
das
mov
and
jbe
arpl
pop
inc
cmp
es
cmpsl
push
add
cmp
dec
sbb
sub
inc
gs
pop
insb
pop
dec
dec
mov
inc
adc
mov
mov
adc
adc
scas
push
popf
int3
fs
mov
pop
mov
pop
repnz
lds
in
test
das
adc
out
into
adc
sbb
or
sbb
dec
jge
push
shr
cmp
mov
mov
mov
and
jae
data16
adc
sub
pop
ret
sub
mov
fidivs
push
mov
mov
sahf
jo
push
inc
sarl
push
hlt
adc
xchg
xchg
adc
int3
adc
fwait
dec
movsl
das
notl
ret
lret
push
xor
vpmaddwd
jno
sub
sahf
adcb
push
sbb
inc
sti
add
les
scas
nop
int3
pop
das
inc
mov
cmpsl
stos
or
mov
add
xor
div
dec
sbb
or
push
scas
cld
imul
mov
xor
or
sub
adc
fisubl
pop
jmp
fidivrl
dec
sbb
popa
ja
rcl
lds
push
es
movsb
dec
aam
sbb
ljmp
or
dec
pcmpgtw
push
jnp
vzeroall
lock
dec
leave
mov
movsb
jno
xchg
js
xor
mov
ret
push
mov
xor
push
adc
and
movsb
inc
xorb
sub
mov
prefetchwt1
pusha
push
inc
mov
xchg
imul
xor
adcb
sbb
les
push
cwtl
mov
out
inc
jmp
dec
test
in
js
sbb
jo
jns,pn
inc
xlat
dec
mov
jo
aad
push
stc
dec
or
sar
cltd
cltd
call
mov
pusha
push
bound
mov
arpl
scas
pop
das
gs
or
mov
mov
adc
push
movl
add
jne
jmp
test
ja
icebp
cmp
mov
or
add
inc
mov
fmuls
loop
adcb
lds
insb
ss
loop
dec
jbe
xlat
mov
addr16
lret
sub
push
pop
push
sahf
adcb
mov
and
addr16
mov
sbb
mov
dec
pop
or
addl
sbb
jb
xor
sub
mov
mov
lds
daa
out
xchg
test
iret
mov
pop
mov
and
fists
sahf
xchg
icebp
test
push
dec
movsb
sbb
test
ljmp
scas
pop
cmp
outsb
mov
jecxz
repz
inc
jns
lods
xchg
clc
repz
insl
rcrb
cmp
xchg
ljmp
in
into
dec
xor
jmp
ss
fucomi
rol
fistps
dec
stos
cltd
outsb
and
xchg
int3
and
fwait
mov
loope
fldt
xchg
hlt
imul
inc
sub
scas
mov
fdivrl
pop
stos
stc
push
mov
int
push
imul
imul
mov
out
aaa
mov
pop
push
pushw
clc
hlt
pop
fsubp
pop
icebp
lcall
mov
push
ret
stc
jae
bound
mov
mov
and
push
mov
and
jmp
iret
dec
mov
and
xchg
lods
and
cmpsb
aas
fstps
in
or
cwtl
imul
andl
call
fldenv
sbb
cld
sub
dec
test
les
je
stc
mov
pop
adc
adc
movsb
sti
lret
mov
adc
lods
mov
daa
or
jns
out
mov
adc
sahf
adc
sub
push
pop
dec
jnp
inc
xchg
mov
std
add
cmc
cmp
in
mov
and
push
stos
jns
das
fidivrs
push
mov
mov
adc
cwtl
mov
or
jle
cmc
adc
rcll
cmpsb
movsb
bound
xor
mov
mov
push
fwait
cmp
sbb
dec
cmp
ss
fwait
sysretw
out
cwtl
push
mov
mulb
call
xlat
cli
and
push
xchg
int3
fucom
push
mov
in
xor
add
push
mov
test
jbe
mov
outsl
shrb
testl
add
mov
xor
jmp
mov
add
out
jnp
stos
pop
cmp
xchg
sbb
xlat
fs
jp
imul
push
lds
cwtl
fists
cmp
loopne
or
cmp
pop
fisubrl
inc
sub
call
sti
sub
sbb
xor
jne
pop
pop
sahf
imul
mov
loope
push
adc
cmpsl
mov
mov
jb
bound
lock
cmpsb
and
aas
jb
xor
dec
je
pop
ja
and
insb
push
icebp
insb
rorl
mov
cli
push
adc
dec
xorl
js
and
in
xchg
les
movsl
out
fwait
cmp
adc
lods
cmp
leave
xchg
int3
les
and
js
mov
inc
pop
cmp
out
or
and
hlt
mov
lds
ret
scas
lret
mov
or
movlps
dec
fisubl
pop
xchg
out
cmp
std
push
repz
mov
dec
sbb
inc
inc
pushf
adc
daa
jge
fsubrp
adc
in
and
add
daa
xchg
cmp
arpl
jne
jbe
fsubl
cmp
push
in
xchg
add
pushf
xchg
fwait
mov
pop
mov
adc
lds
sbb
popa
mov
call
out
adc
or
in
jmp
lsl
cmp
xchg
push
jle
pop
mov
push
push
sahf
and
dec
xchg
cld
mov
sub
push
dec
adc
lock
gs
fiaddl
stos
jmp
jb
pop
popl
ds
mov
lcall
iret
jmp
addr16
loope
mov
mov
subb
add
pushf
ja
or
movl
arpl
inc
test
subb
dec
cs
mov
mov
leave
ret
enter
test
cmpsb
mov
imul
cmc
xor
sbb
cmpsb
les
xor
push
shlb
loopne
mov
xchg
test
gs
imul
push
cmpsb
adc
pop
data16
mov
cs
cmpsl
push
fstl
xor
pop
xchg
sub
lret
shrl
xor
jp
xor
subl
imul
dec
aas
int3
notl
test
imul
shlb
pop
cltd
and
and
inc
pushaw
mov
sbb
pusha
mov
xor
ja
push
lret
insl
sbb
sub
mov
sbb
ljmp
loopne
pop
syscall
sub
out
push
addr16
inc
xchg
jl
cs
mov
pop
jnp
outsb
xchg
jae
out
sbb
add
mov
call
xor
xchg
jg
xor
fiaddl
and
repnz
out
clc
mov
fidivl
fcmovnbe
jbe
jge
xchg
fdivrp
cwtl
xchg
pop
sbb
xchg
and
pop
push
xchg
adc
out
xor
loopne
mov
mov
push
cltd
add
fcmovb
shlb
push
jl
cmp
cmp
add
inc
cltd
dec
mov
je
popa
sbb
outsb
stos
test
pop
data16
sbb
or
jae
clc
std
pop
mov
cmc
mov
rcrl
xchg
mov
lea
std
cmp
repz
int
popa
pop
mov
inc
pusha
loope
sub
sub
pop
call
cltd
inc
fimull
jg
push
jae
cwtl
xchg
mov
into
jle
xor
push
aas
jne
cltd
adc
xor
ret
rcrb
ret
fiadds
jp
inc
stos
mov
pop
stos
nop
pop
add
dec
dec
daa
sub
scas
es
dec
jno
pop
push
dec
fdivr
push
adc
fiaddl
xlat
pop
jecxz
lods
jmp
xchg
pusha
repz
mov
dec
push
dec
sub
dec
xchg
je
fs
daa
sub
add
ljmp
insb
pop
inc
loop
test
mov
rcrl
jp
jle
cmp
jb
pop
push
xchg
or
inc
ja
dec
popa
pop
and
inc
adc
nop
dec
ret
push
sub
jp
mov
rol
jae
pusha
jmp
les
das
dec
sbb
shrb
xor
insl
jg
mov
dec
cmp
xchg
pop
push
jg
inc
icebp
cltd
imul
leave
inc
pop
lahf
pushf
inc
ret
mov
mov
stc
jae
or
loop
in
or
idivb
inc
fld1
xchg
popa
shl
std
push
jp
push
shlb
je
nop
out
std
gs
test
inc
movsb
ror
mov
aam
cmp
test
sbb
sbb
jnp
mov
test
icebp
pop
fimull
xchg
loopne
inc
inc
nop
inc
fcmovb
pop
mov
dec
push
sahf
pusha
outsb
repz
mov
xchg
and
pop
sbb
pop
push
rol
fsubr
ja
jb
pop
jbe
lahf
xor
mov
jp
out
inc
movsb
dec
sub
out
mov
cs
mov
loopne
ud1
xchg
inc
mov
ret
pop
ljmp
adc
incl
out
mulb
loope
mov
xchg
sbbl
mov
sbb
jb
ret
jg,pt
aaa
xor
outsl
stos
flds
pop
lds
jmp
jmp
in
sub
pop
and
xlat
test
sti
in
jge
xchg
dec
mov
pusha
dec
addr16
scas
imul
mov
mov
sbb
dec
in
inc
cmp
lods
or
jp
adcb
ja
aam
enter
fisttpl
and
sti
aam
js
das
or
xor
jbe
add
jl
ljmp
rcrl
jns
cmp
addb
cmp
mov
aaa
pop
pop
aaa
scas
insb
popf
push
sub
subl
push
jecxz
jmp
or
call
push
mov
sub
jbe
sbb
cmp
lahf
jg,pn
into
iret
mov
sub
sbb
cmp
pop
movsb
je
ljmp
jno
fisubrl
aam
aad
es
jg
sub
iret
fsubrs
rcll
das
push
pop
bound
or
xor
stos
mov
and
or
xorb
ja
or
lea
jo
test
arpl
icebp
mov
push
mov
jnp
xchg
enter
mov
cmc
jge
cmp
jne
stos
cmp
xchg
data16
test
repz
popf
int
movsb
in
sbb
mov
iret
jge
nop
jg
stos
cltd
gs
ljmp
cwtl
mov
pop
fisubrs
shlb
fisttps
xchg
js
and
fcoml
mov
push
sbb
sub
test
negl
or
lret
int
push
push
sbb
test
and
arpl
movsl
stc
nop
fwait
insl
jmp
ss
call
lret
add
into
fwait
jmp
add
cmp
nop
aam
sahf
jmp
cs
jae
dec
mov
daa
mov
dec
pop
idivl
xor
xchg
data16
rcrb
pop
push
mov
out
call
mov
cmp
icebp
mov
inc
stos
xor
cwtl
pop
fs
jge
mov
js
push
jecxz
sti
or
mov
in
mov
lea
int
push
or
movsl
or
adc
int
stc
sarl
mov
and
push
push
add
movsb
dec
cmp
lcall
sbb
sbb
jp
mov
mov
jno
dec
imul
test
dec
pusha
pusha
roll
adc
cmp
icebp
popf
pop
dec
movb
add
insl
movsl
xor
xlat
mov
cld
jmp
inc
push
jno
ret
test
aaa
faddl
imul
xor
fsts
shrl
outsl
fcmovnu
movsb
loope
sti
psubq
mov
sbb
movsl
xchg
sbb
mov
sbb
lret
fs
nop
jl
jno
lods
aam
les
xor
add
popf
sti
dec
adc
sbb
lahf
or
jg
arpl
rcrb
jge
out
jmp
push
lret
pusha
inc
mov
movsl
adc
in
and
adc
xor
cld
adc
xchg
and
sbb
ja
xchg
adc
cmp
adc
mov
mov
loop
cmp
sub
fcoms
shr
push
movsb
xlat
or
dec
xor
in
out
call
and
push
adc
pop
jns
dec
mov
jg
jecxz
xlat
das
out
loop
dec
out
push
ror
mov
pushf
repnz
adc
popl
out
adc
push
mov
push
push
jmp
push
and
pop
mov
jp
movsl
stc
dec
lock
jge
mov
mov
adc
ja
sub
scas
jl
mov
pop
lret
sarl
idivb
xchg
fwait
xlat
ss
cmp
aaa
cwtl
clc
sub
les
dec
pop
push
jle
mov
out
testl
jbe
adc
movsb
test
in
das
sub
pop
ret
cmc
pop
sbb
xchg
test
arpl
mov
cmc
cmpsl
push
dec
fnstsw
inc
pop
jmp
ds
xchg
cmc
push
popa
lds
jno
push
cmp
cs
incb
repz
arpl
lret
out
addr16
mov
scas
sahf
stos
sbb
aam
jmp
xchg
xchg
lret
cltd
data16
jnp
adcl
shll
popa
cmp
jle
nop
fyl2x
xchg
ficomps
cs
sub
sub
xchg
xchg
sub
lock
ljmp
or
cltd
mov
xchg
mov
cmpsl
jmp
enter
mov
pusha
lea
or
stos
jb
jns
inc
mov
push
loopne
add
stos
push
daa
dec
cwtl
movsl
pop
dec
js
std
mov
or
sti
sbb
mov
inc
mov
inc
loope,pt
popf
cmp
jg
adc
cld
idivl
in
pushf
inc
mov
in
iret
mov
dec
adc
xor
jg
movsb
mov
mov
insb
dec
jl
lcall
push
inc
aam
jp
inc
or
inc
sahf
ljmp
sbb
in
fdivs
in
mov
adc
sbb
pop
shl
xchg
or
pop
mov
xchg
stos
or
xchg
in
adc
dec
sub
xor
mov
push
adcl
in
pop
shll
xor
lahf
pop
lock
sbb
insl
xor
xor
jne
inc
mov
xchg
stos
test
xchg
subb
xor
in
data16
iret
popa
nop
xor
jae
shl
and
jle
movsl
ret
out
add
jnp
jp
fdivrs
mov
sbbl
pop
sub
push
pop
ffree
xchg
lret
loope
movsb
sub
push
idivl
cmpsl
or
cmp
add
push
pushf
inc
jmp
mov
cltd
sub
out
push
data16
das
dec
enter
pop
sbb
bound
jno
xor
adc
mov
sbb
out
pop
popf
sub
call
ret
out
fdivrl
cmp
pop
out
daa
scas
cwtl
cmp
jge
lret
xchg
cld
aas
imull
test
xor
jl
jae
mov
lock
mov
gs
adc
pop
jecxz
sarl
mov
je
mov
pop
push
lcall
aas
xor
test
jecxz
pop
and
xor
out
pop
icebp
mov
xchg
lock
push
add
xor
repz
out
inc
mov
add
outsl
in
pushf
mov
lock
inc
jge
fstps
xchg
fs
mov
iret
push
das
fadds
jno
jb
mov
sbb
pop
xchg
mov
mov
test
jbe
sub
xchg
xchg
in
stos
imul
push
jp
jne
xlat
imul
imul
and
loope
icebp
jns
in
aas
or
sub
xchg
pop
clc
sbb
arpl
adc
iret
mov
push
pop
push
sarl
movsb
xchg
imul
cmp
sub
jle
aad
in
dec
lods
ja
mov
fwait
pop
cmp
jmp
jno
ljmp
pushf
xor
sti
xchg
aam
pop
dec
push
repnz
test
mov
jmp
dec
mov
inc
and
sub
int
cli
sbb
xor
add
adc
ljmp
inc
in
into
mov
sub
add
adc
add
lret
mov
or
push
jns
es
mov
cmc
jl
outsl
pop
inc
pop
je
inc
faddl
out
push
insb
lret
call
push
xor
mov
pop
ja
inc
mov
push
mov
stc
ret
pop
inc
lock
mov
cmp
mov
xchg
cs
jae
jg
hlt
push
cld
xchg
push
or
xchg
testl
movsb
mov
fmull
push
xchg
or
loope
lods
popf
xor
mov
movsl
jne
jg
je
in
jns
dec
jnp
mov
mov
or
lods
cmp
ja
cmpsb
mov
inc
insb
lea
or
movsl
push
dec
shl
daa
in
push
cmp
in
adc
insb
xor
mov
fnsave
or
faddl
add
pushf
push
ss
dec
mov
sbb
or
fcompl
push
cmp
pop
out
test
repnz
mov
js
fcomps
pop
leave
test
ja
std
fs
adc
gs
push
or
jno
dec
jo
jae
dec
jo,pt
dec
jge
fmul
repnz
inc
in
loop
jnp
push
orb
add
mov
cmp
xor
hlt
xor
mov
lcall
jns
mov
js
inc
and
dec
or
mov
mov
outsl
inc
sub
xchg
mov
aad
add
pop
xchg
mov
das
mov
gs
stos
mov
inc
in
mov
sarb
into
clc
or
xor
adc
test
mov
mov
stos
push
pop
add
mov
and
xor
int
jle
jg
test
rolb
les
and
stos
pop
pop
imul
test
ss
mov
loopne
je
inc
stos
and
mov
stc
sarb
push
xlat
cld
mov
dec
les
int
test
jae
push
jo
sbb
pop
sahf
push
sbb
in
or
dec
jge
js
push
push
mov
inc
enter
cmc
insl
ja
test
adc
ror
sbb
push
pushf
sub
test
add
add
es
add
cmpsl
or
inc
cmpb
scas
cmpl
std
outsb
mov
inc
add
hlt
movsb
fs
sbb
test
in
mov
out
shll
inc
fmull
dec
aas
outsb
roll
ret
sarl
rorb
xchg
jb
rcrl
loopne
jle
popf
pop
das
in
addr16
add
cld
outsl
hlt
insb
dec
adc
xchg
cmp
or
add
leave
dec
aam
fadds
jno
ljmp
cmpsl
mov
outsb
das
adc
push
sub
and
pop
and
adc
pusha
push
cs
mov
notb
lret
outsb
subl
or
mov
sub
cmp
jp
movl
jl
pop
scas
xchg
and
mov
int
sub
xchg
ljmp
lods
adc
xchg
cld
inc
xchg
test
pop
shrb
jae
test
lods
jo
and
cli
in
dec
shlb
inc
push
in
xchg
scas
cmp
mov
in
jo
jns
fisubl
and
cmpl
test
cmpb
dec
scas
and
jno
inc
lods
sahf
inc
arpl
pop
adc
dec
test
inc
lods
jbe
xor
push
pop
mov
int3
insl
in
adc
popf
jecxz
arpl
and
gs
das
test
ret
rcrb
xchg
insb
fldenv
sbb
cmp
cmpsl
aad
mov
fists
adc
scas
inc
pop
sub
or
cltd
xchg
dec
shrb
sub
cmp
lock
pop
push
or
movsb
mov
pop
xor
xchg
sti
jo
ss
cmp
shlb
in
xor
mov
int
mov
dec
fwait
xchg
xchg
es
cwtl
pop
cmp
xor
mov
mov
fisubrl
jo
repnz
pop
cmp
push
stos
pop
stos
gs
push
push
push
lock
sahf
dec
lods
or
cli
clc
xchg
sub
mul
pop
push
mov
rol
dec
popf
mov
xlat
or
mov
insb
lods
cmpsl
mov
sub
movl
rorb
pop
inc
jg
clc
sbb
fistps
loope
or
dec
cmpsb
ficompl
in
fucomp
or
push
or
inc
mov
or
and
fimuls
xor
cmp
inc
clc
sub
lock
lahf
xor
adc
sbbb
lahf
sti
sub
mov
stos
push
push
push
adcl
aaa
pop
xlat
dec
ficompl
pop
adc
dec
pop
movsl
pop
fadds
dec
jbe
stc
test
test
in
jns
cmpsb
adc
cmp
mov
xorb
mov
nop
mov
sub
push
das
call
ret
aas
leave
sarl
enter
mov
dec
jecxz
hlt
lock
dec
push
lcall
jne
cmp
rorl
dec
pop
push
xchg
aas
jno
fidivs
fwait
cmpsl
mov
sar
xor
sub
aas
repz
clc
out
jmp
cs
popf
and
mov
push
es
adc
hlt
push
jl
imul
hlt
cmp
pop
addr16
cmp
insb
lock
fisubrl
test
fisubs
out
mov
scas
sbb
add
les
movsl
outsb
xchg
and
xchg
pop
sar
pop
or
fstl
mov
xchg
pop
push
mov
and
sarb
lds
and
jno
rorl
sub
out
pop
and
xchg
cwtl
scas
pop
add
cmpsb
lret
xchg
gs
push
orl
popf
adc
or
cmp
les
inc
fdivs
jo
mov
loopne
cmp
dec
mov
pop
insl
push
out
movsl
or
xchg
sbb
sub
jmp
push
adc
ljmp
scas
vcvtsd2ss
pop
les
imul
xchg
movsb
or
cmpsb
and
je
sub
inc
add
ja
mov
adc
adc
scas
adcl
in
test
insl
mov
lret
and
movsl
or
push
push
push
mov
aam
mov
add
xor
jp
jge
inc
pop
lcall
or
mov
jge
outsl
insb
imul
sbbb
js
gs
jne
add
dec
subb
or
cs
mov
outsb
xor
js
popf
in
sbb
sub
cli
jge
int
cmp
mov
dec
pop
add
inc
aaa
xor
mov
test
push
aad
mov
pop
xchg
out
movsb
in
jge
stc
or
xor
repz
shlb
sub
out
or
mov
pop
push
mov
cmc
sbb
bound
imul
jg
in
mov
mov
adc
sub
push
arpl
adc
inc
test
cmp
mov
iret
je
inc
dec
repnz
mov
mov
jno
fidivrs
iret
push
nop
sarb
stos
add
call
dec
fsubp
push
cli
ljmp
outsl
mov
repnz
iret
in
inc
push
subb
pop
adc
mov
sub
pop
addl
cmp
ficoml
adc
ret
jle
aaa
jmp
lea
outsl
test
shrl
pop
pushf
mov
pushf
pop
pop
push
fs
xor
sub
add
popf
mov
or
pop
mov
sbb
scas
ret
or
jecxz
insl
test
call
dec
mov
mov
das
shl
sbb
xor
pop
fdivl
jecxz
or
aas
lahf
mov
popf
clc
jnp
stos
lahf
or
push
mov
and
jno
std
divl
jns
add
rolb
sub
insb
jo
shll
pop
lret
loope
and
and
pop
jne
stos
insb
mov
inc
js
pop
daa
sti
mov
scas
or
inc
inc
or
test
jp
std
adc
cltd
test
test
jne
fcompl
movsb
and
push
or
sbb
ret
out
push
jne
inc
dec
add
lret
jp
xor
push
xchg
loop
mov
mov
fisubrl
cli
in
inc
fstl
pusha
pop
mov
xor
mov
push
fstpl
stos
idivb
and
cmc
or
mov
add
nop
mov
push
das
cmp
sbb
xor
jle
mov
jmp
aas
cwtl
addb
insl
cmp
sub
dec
and
add
outsb
fwait
rcll
ret
out
scas
cmp
fnstcw
mov
jecxz
je
add
pop
gs
push
ljmp
mov
xchg
bound
repz
xchg
sbbl
push
pop
sbb
std
mov
or
sarl
scas
movsl
inc
and
dec
rcrb
lcall
rolb
js
cs
rclb
imul
mov
je
rep
out
lods
push
jmp
sarb
lcall
fmuls
and
sub
and
adc
popa
cmp
data16
mov
je
mov
in
or
push
xchg
adc
test
out
fwait
cmpsb
xchg
aaa
test
dec
xor
lahf
and
cmp
in
jae
mov
xchg
insl
sbb
xlat
pusha
or
iret
or
xchg
bound
lea
dec
arpl
adc
mov
repz
cmp
mov
xor
shrb
push
adc
pop
mov
sub
sahf
mov
out
cmc
js
test
adc
mov
mov
mov
pop
inc
or
or
orl
mov
lcall
cmp
push
cmpl
lret
lods
sub
mov
rcl
push
pop
pop
or
cmp
push
loope
jb
push
xor
rorl
jae
jae
test
pushf
mov
ds
sbb
int
aad
icebp
inc
insb
dec
lcall
pop
xor
inc
cmp
push
test
lret
sbbl
in
lock
jp
hlt
popf
xchg
or
aaa
push
inc
xor
and
push
sarl
inc
iret
shl
daa
mov
lcall
push
adc
adc
push
pop
mov
push
jno
mov
sbb
leave
sbb
pop
pop
xchg
pop
pop
divb
cmp
test
insb
fwait
sahf
hlt
addr16
dec
leave
dec
xchg
add
add
addr16
inc
sub
xor
jb
xor
mov
or
pop
test
mov
xchg
jns
cmp
and
jbe
or
pusha
xor
jmp
mov
sarb
ds
pop
mov
fbld
and
cmp
add
push
repnz
scas
lods
jnp
adc
xchg
inc
sbb
jns
mov
mov
arpl
jp
pop
or
fimull
inc
and
mov
pop
inc
adc
imul
repz
in
add
test
daa
mov
mov
push
push
lret
sarl
shll
lock
and
jo
inc
xor
loop
pop
dec
xchg
cwtl
les
int3
mov
bound
add
mov
lcall
aad
jbe
and
movsl
mov
lods
rcrb
pushf
and
clc
stos
sarl
mov
iret
add
fidivrl
lcall
and
or
call
xchg
pushf
cmp
jp
je
dec
int
xchg
push
sub
into
mov
jnp
data16
subl
or
or
cmc
jl
int3
or
das
pop
xchg
je
mov
xchg
ret
sub
in
jo
mov
gs
sbb
mov
test
inc
mov
repz
pop
jo
sub
lret
xor
test
xchg
daa
adc
xor
xchg
rorb
inc
ret
inc
jae
push
push
pushf
xchg
add
lea
xlat
stc
stc
mov
xlat
iret
ret
cmpsl
repnz
pop
std
dec
out
push
movsb
ds
testl
mov
fmull
mov
negl
mov
arpl
push
or
enter
push
mov
xor
inc
inc
sbb
xor
push
xor
stos
stos
loope
jecxz
orl
push
sahf
cli
cmpsb
xchg
lcall
clc
fnstsw
ss
sub
xor
leave
mov
xor
pop
push
adc
cmpsl
and
push
xchg
inc
and
test
aaa
xor
mov
jo
mov
dec
leave
repnz
mov
fs
in
movsl
loop
test
movsl
aaa
jnp
adc
jae
cmp
in
jp
jp
add
jge
xor
fwait
mov
mov
addl
or
xchg
fnstenv
pop
mov
push
lds
or
pop
fildl
or
pop
vminpd
leave
std
jle
pushw
inc
ret
push
das
push
pop
aad
decb
sbb
arpl
cmc
mov
mov
negb
aam
fstp
insb
add
xlat
sti
test
xchg
push
xchg
sub
add
mov
into
iret
pop
xchg
sub
mov
into
stos
fists
inc
dec
mov
das
adc
rclb
and
jne
sub
cmp
inc
push
fucomi
cltd
arpl
loopne
stos
mov
pop
cmp
add
int3
ja
ljmp
jmp
xchg
arpl
insl
and
insl
test
push
add
sub
lret
fdivr
pop
in
fldcw
fst
push
push
dec
fdivrl
ljmp
mov
std
pushf
insl
into
sub
dec
lock
mov
xor
in
test
add
outsl
popa
mov
aam
in
xor
cwtl
imul
scas
cltd
adc
mov
cwtl
in
mov
pusha
mov
add
into
or
pop
je
flds
push
jns
enter
jo
fistpll
es
push
cld
int
cwtl
jl
and
jno
inc
push
adc
outsb
pop
jns
fsts
xlat
orb
jae
mov
xchg
iret
jg
cmp
test
iret
rorl
lea
xor
xor
cmp
enter
mov
xchg
insl
add
mov
cmc
mov
scas
stos
mov
aas
outsb
fcomp
aaa
xchg
mov
jl
xorl
lds
adcb
adc
insb
inc
repnz
and
shrb
push
sub
fwait
mov
mov
or
mov
lock
push
mov
cwtl
fstpl
enter
adc
enter
imul
push
cmpsb
sahf
das
movsb
cmp
stos
pop
add
cli
push
dec
inc
sti
jne
push
sti
pop
mov
adc
cmp
mov
inc
test
stos
jmp
imul
fdivr
push
pop
pop
jg
pop
and
data16
scas
xor
dec
and
in
fcomi
shlb
rclw
outsl
call
adc
fdivrs
ret
mov
mov
pop
test
ret
dec
push
or
mov
jl
adc
pop
push
ja
jg
add
cmp
dec
dec
hlt
movsl
sub
addr16
loopne
fimuls
dec
dec
xor
xchg
hlt
pop
jno
push
add
mov
icebp
pop
jle
out
sub
or
dec
push
cmc
in
cltd
arpl
cmp
fs
addr16
and
xor
sub
dec
xor
ljmp
cmp
mov
rcr
adc
es
loope
cmp
fidivl
ja
cli
in
lret
ljmp
jbe
call
ss
sti
inc
inc
jge
mov
sarl
rorb
mov
insb
and
mov
inc
data16
mov
xor
int3
jl
loopne
faddl
jb
push
mov
mov
call
pushl
popa
jne
mov
mov
je
sbb
mov
lock
iret
lods
fs
out
adc
les
mov
rcll
jb
sahf
jecxz
and
sbb
out
arpl
cmpsb
sub
pop
push
xchg
adc
faddp
in
mov
or
pop
jb
push
mov
mov
shll
and
xrelease
pop
mov
pop
arpl
xchg
fstl
call
sbb
xlat
int
iret
mov
jge
cmc
and
inc
imul
jo
dec
popa
daa
sub
mov
mov
test
ljmp
sub
cmp
cmc
sbb
jns
xchg
xchg
push
mov
rol
dec
movsb
dec
pop
sbb
push
incl
xor
sbb
aaa
into
sub
js
stc
cltd
stc
mov
sub
mov
and
cli
pop
in
clc
push
xor
push
dec
or
mov
das
mov
in
adc
sub
cmp
popf
movsl
fisubl
and
icebp
dec
mov
rcll
mov
add
aad
xchg
push
fisubrs
pop
adc
dec
mov
leave
add
pop
ja
stc
inc
shrb
mov
rol
imul
imul
jg
rcr
pop
ljmp
enter
fadds
mov
aaa
dec
jae
cld
xorb
add
push
dec
repz
cmp
gs
outsb
xchg
sub
add
jp
jmp
lods
stos
pmuludq
mov
and
xor
imul
jb
mov
jecxz
inc
fisttps
mov
stc
push
cmp
mov
cmc
cwtl
and
movsl
insb
outsl
add
pop
daa
sub
data16
stc
sbb
and
push
sub
clc
adc
icebp
call
std
sub
loopne
xchg
mov
sti
enter
insl
add
xchg
repz
adc
jno
test
mov
or
push
jb
xchg
in
in
aaa
cmpsl
or
jecxz
pop
dec
push
pop
adc
rol
mov
jecxz
adcl
jbe
mov
lods
lret
repnz
lahf
ret
fiadds
mov
insb
ja
stos
imul
push
test
push
pop
sbb
inc
hlt
cmpsl
notb
rcrb
or
mov
pop
add
or
loopne
gs
imul
xor
xchg
xor
leave
jne
mov
mov
push
scas
lret
and
jno
dec
jno
arpl
push
sub
aas
adc
lods
ret
inc
sti
mov
iret
pop
lods
enter
lds
aam
ds
fs
pop
push
add
iret
ljmp
xchg
call
inc
add
xor
sti
inc
jp
cltd
mov
std
pop
aam
xchg
ljmp
or
push
aad
hlt
rorb
sbb
testb
xor
adc
aad
in
notl
stos
sub
inc
subl
xor
cwtl
pushf
cltd
cli
and
push
mov
push
jae
inc
int
jp
test
or
out
scas
dec
push
xchg
jecxz
sub
inc
mov
add
movsl
addr16
dec
cld
in
rclb
or
jmp
sub
xor
pop
cld
cltd
daa
and
mov
jae
sbb
jae
lods
sbb
lahf
jno
jbe
dec
fdivl
sub
iret
ljmp
sbb
cmp
icebp
push
and
inc
xchg
ss
dec
je
adc
ss
add
mov
pop
shl
jae
mov
add
inc
sahf
aam
sti
lret
lahf
pop
cltd
lcall
shlb
nop
stc
cld
dec
mov
rcr
das
sar
rcr
clc
and
xchg
outsb
in
rolb
and
les
mov
inc
stc
mov
cmp
or
lea
and
imul
or
dec
in
jg
enter
pushl
or
mov
data16
call
pop
fwait
test
movsl
int3
pop
movsb
push
pop
mov
cmp
lret
adc
test
je
xchg
scas
push
rclb
push
sbb
jne
sarb
jnp
pop
int
mov
rcrl
add
rcll
xor
push
test
test
test
dec
inc
push
mov
pop
pop
or
aaa
jge
int
movsl
pop
pop
dec
cmp
add
sub
sbb
fisubrl
pop
insb
inc
repnz
orl
inc
lahf
sub
push
fisttpl
push
outsb
jl
lcall
inc
push
or
rorl
pop
lods
lcall
rorl
in
sbb
movsl
mov
mov
cmpsl
jne
mov
or
lahf
movsb
mov
adc
lock
dec
sarl
mov
ja
add
jle
mov
add
mov
out
lahf
sarb
mov
inc
popa
add
in
inc
jmp
lcall
mov
icebp
pop
jecxz
in
cmp
xchg
ljmp
loope
mov
mov
fs
arpl
dec
mov
xchg
jns
movsb
jb
lret
ret
add
cmc
mov
movsb
push
jmp
adc
out
xchg
das
ret
or
ret
sbb
add
sub
loopne
push
pop
xor
pop
test
pop
test
sub
je
out
sbb
and
int3
pop
fimull
gs
jno
jge
jo
mov
in
or
xor
mov
pop
ljmp
or
lds
xorl
inc
or
sbb
add
lret
jmp
fstpl
sbb
cli
xor
ficoml
aad
add
mov
jnp
adc
loop
fiaddl
std
xchg
ret
adc
cld
pop
xchg
gs
fsubp
jle
mov
and
das
pop
xchg
or
andb
inc
push
jae
mov
push
xor
push
lods
push
sbb
push
das
das
add
mov
jne
push
rolb
leave
das
xor
pop
insb
push
dec
jne
cs
ss
outsl
je
int
loop
cmp
cmpsb
mov
add
dec
imul
inc
add
cmpsl
or
mov
mov
addl
mov
out
loopne
xor
nop
insl
lcall
sub
nop
std
mov
add
loope
and
and
into
cmpsb
xchg
mov
insb
add
js
fnstsw
or
push
popa
jmp
int
and
pop
movsb
cmpsb
xor
jbe
ljmp
fists
sahf
insb
adc
stos
lcall
xchg
push
outsl
hlt
inc
into
fnstsw
fstpt
lods
dec
and
pop
xchg
in
int3
push
or
cmpsb
je
aaa
fisubl
jge
jnp
cmp
dec
jecxz
test
mov
cmp
add
je
push
and
scas
sbb
push
xor
adc
out
pop
std
pop
pop
mov
dec
loop
rcll
mov
imul
sbb
icebp
xchg
xchg
stos
ljmp
cwtl
aaa
add
or
jmp
shr
mov
xor
pop
push
hlt
into
mov
fcmovnb
push
cmp
lcall
sbb
outsb
ret
push
cmp
pop
call
ds
idivb
pop
xchg
push
daa
les
sub
xor
js
out
adc
pop
inc
int3
push
sbbb
adc
mov
xorb
mov
adc
add
mov
test
dec
ljmp
dec
aas
cs
enter
pop
daa
test
push
xor
pop
xchg
and
xchg
pop
or
test
push
in
jnp
hlt
clc
notb
or
push
push
sbb
outsl
inc
stc
mov
mov
or
sarb
sar
fwait
mov
mov
adc
adc
inc
pop
test
fst
lods
loopne
rol
push
pop
inc
es
in
and
in
pusha
daa
rclb
icebp
out
jb
sub
mov
insl
ljmp
rcrb
sbb
sub
and
scas
push
cmp
cld
or
rorl
pop
daa
mov
cmp
sbb
stos
cmp
out
fucomi
jnp
xchg
repnz
lea
dec
decb
pop
push
jnp
mov
sub
sub
sub
sub
adc
test
popf
adc
gs
adc
add
xchg
test
outsl
or
adc
pop
fs
movsl
dec
xor
outsb
and
lret
aam
repnz
arpl
xor
imul
sub
mov
lret
mov
mov
cmp
daa
xorb
insb
idiv
sti
mov
sub
inc
clc
push
cmpsb
hlt
imul
popa
xor
insl
js
les
out
aam
adc
loopne
adc
icebp
mov
fwait
and
mov
decb
jle
out
rclb
fdivl
mov
mov
sub
scas
shlb
int3
pop
push
inc
mov
add
jne
inc
inc
scas
and
testl
int
out
dec
call
leave
dec
enter
jle
mov
dec
push
pop
lret
or
repnz
pop
pop
jmp
pop
js
jno
inc
xchg
movsl
and
push
xchg
fcomps
mov
in
cmp
stos
sbb
loopne
sub
es
cmp
xchg
cmp
mov
repnz
pop
test
test
pop
mov
sbb
xchg
inc
xchg
filds
aad
pop
xchg
push
je
int3
repnz
or
push
mov
mov
sarb
rcrl
pushf
mov
pop
data16
push
add
test
xchg
out
inc
mov
ret
xchg
mov
pop
dec
imul
shll
adc
cli
mov
xchg
xchg
mov
insb
adc
sbb
push
ss
push
cwtl
or
pop
insb
or
pop
shr
jle
leave
add
mov
cmc
and
add
out
dec
leave
mov
sub
aas
js
shrb
int
xorl
rorl
mov
pop
mov
jb
clc
scas
shlb
lds
imul
push
cli
lret
testb
pop
sbb
sbb
je
fidivrs
or
or
add
les
stos
aad
icebp
cwtl
mov
cwtl
stos
scas
in
sbb
xchg
push
test
push
and
in
add
jbe
imul
cmc
push
lcall
push
xchg
jecxz
dec
pop
aam
jo
test
popa
mov
loop
pop
cmp
repnz
or
cmp
fidivs
sub
cmpsb
pop
xchg
in
or
sub
cmp
cmp
mov
sub
xor
or
dec
mov
mov
add
inc
or
jbe
insl
sbb
inc
inc
jno
andl
push
pop
into
push
popf
subb
and
pushw
cmpsb
movsb
xchg
cltd
out
inc
shl
or
dec
sbb
xlat
xchg
pop
add
xchg
xchg
jle
jl
lcall
mov
xchg
push
jle
sub
sbb
inc
stc
jge
jae
movsl
jg
xor
icebp
frstor
repnz
mov
testl
hlt
aad
insb
int
push
fldl
xor
push
jg
cli
sbb
jno
jo
inc
fscale
inc
dec
mov
xchg
orl
pop
outsl
cli
in
vunpcklps
aas
add
addl
jns
xchg
fisubl
adc
pop
and
stc
scas
xchg
loope
cmpsb
adc
push
test
push
shlb
jns
add
sarb
push
inc
loopne
loopne
lods
and
lock
dec
and
push
fucomi
xchg
mov
sti
xchg
push
call
sbb
dec
push
xchg
mov
popf
mov
cmp
popf
xchg
xchg
push
or
pop
inc
outsl
ret
lods
sbb
push
pop
mov
mov
or
aas
sbb
stos
outsb
loopne
nop
sbb
xchg
jmp
jle
push
icebp
cwtl
rorb
or
test
scas
jne
icebp
lock
repz
or
fstps
xchg
stos
add
pop
int3
xchg
push
inc
divb
stc
rcrl
fistl
movsb
test
add
inc
popf
xor
xchg
cmp
gs
jmp
inc
ficoms
cmp
jge
sub
lret
pop
cmp
aam
call
adcl
ja
lods
push
mov
movsl
pop
pop
inc
mov
daa
xchg
mov
sub
sbb
mov
add
inc
in
repnz
cmp
inc
mov
mov
out
push
rorl
fwait
rclb
push
testb
pop
cmpb
movsb
add
mov
push
cmp
dec
xchg
mov
dec
cmp
sub
cmp
sti
dec
out
dec
dec
sbb
cmpsl
shlb
and
jae
sbb
dec
ficoml
pop
push
add
pop
or
pop
test
into
cli
mov
mov
push
std
fistps
push
stc
scas
and
inc
popf
inc
mov
cmpsb
fs
or
sub
ret
stc
mov
push
xor
mov
xlat
rorl
push
jbe
js
adc
fdivl
push
ret
aaa
push
cwtl
rcll
xor
nop
mov
mov
mov
aam
test
int3
pop
mov
adc
sub
lahf
mov
ds
add
loop
jno
xor
mov
cmpb
jp
dec
fwait
test
and
add
pop
inc
mov
stos
out
out
lds
stos
ljmp
aad
push
ret
daa
mov
push
push
sub
push
jg
jnp
pop
mov
movsb
pusha
cmc
flds
idivl
ljmp
jb
cmc
pusha
pop
mov
rcll
mov
add
and
pop
add
insl
imul
js
cmp
out
cs
sti
jnp
pusha
mov
pop
gs
mov
mov
loop
mov
nop
ret
jl
push
fldt
push
mov
hlt
pop
dec
fcompl
popf
sub
mov
dec
add
in
lods
filds
imul
hlt
fildll
adc
sub
pop
cs
mov
cmpsl
sub
sbbb
and
mov
inc
hlt
test
mov
movsl
jmp
add
insb
enter
and
and
test
jecxz
stos
out
inc
lret
jbe
outsb
dec
and
mov
or
fsubl
sbb
mov
pushl
cmp
jp
cmp
pop
jge
mov
sub
xor
inc
sbb
mov
jg
notl
mov
sub
mov
mov
daa
lcall
imul
jne
mov
scas
out
jns
sbb
das
in
icebp
lret
lret
out
and
dec
pop
test
movsb
xchg
or
andb
inc
xor
rclb
out
in
arpl
jmp
jp
jmp
pusha
data16
insb
inc
fs
sub
or
add
ds
lea
jg
loope
out
mov
iret
aad
dec
stc
add
adc
out
movsb
movsl
push
outsb
call
inc
stos
mov
pop
push
adc
or
push
pop
roll
and
lcall
push
cltd
sbb
pop
mov
mov
aam
cmp
addr16
sbb
icebp
test
inc
movsl
addr16
cmp
test
cld
rep
repz
pop
test
stos
nop
xlat
fwait
inc
aam
sbb
push
add
out
push
push
shr
mov
xchg
into
inc
mov
pusha
dec
or
push
push
out
jb
sub
lods
repz
adc
lahf
rcr
pop
ss
mov
adc
xchg
mov
push
sbb
inc
pop
adc
add
sub
mov
cmp
pop
cmp
xchg
lods
cli
xchg
jmp
mov
std
or
mov
lret
cmpsb
adc
inc
dec
xchg
jg
cli
jbe
dec
stos
mov
xchg
addr16
les
add
repnz
mov
xlat
popl
mov
jae
enter
adc
cltd
out
pushf
mov
repz
or
pop
dec
popf
aad
dec
push
int
push
push
out
imul
enter
bound
adc
out
out
and
fidivs
ss
pop
dec
out
cs
cmpsl
mov
mull
addr16
sub
pop
dec
add
test
mov
jno
push
and
dec
aad
or
push
xchg
xor
fnstenv
mov
add
jge
and
test
andl
and
mov
push
call
jl
cmp
inc
shr
xor
cmpsb
ficoml
adc
outsl
pop
dec
jns
ret
xor
jle
scas
pop
lcall
das
lods
add
cltd
mov
mov
stos
nop
mov
repz
adc
xchg
mov
leave
int3
pop
rcll
aad
jno
clc
pop
out
in
movsl
ja
cmp
jo
push
stos
inc
jg
xchg
repz
dec
cmp
adc
repz
shl
sbb
jnp
cmpsb
into
int3
adc
sbb
in
jae
das
enter
xchg
mov
pop
adc
dec
mov
sub
aam
cmp
sub
adc
cmpsl
push
inc
lds
fucomip
xchg
ss
mov
xor
outsl
lds
push
je
fildll
and
fdiv
dec
mov
leave
jle
arpl
rorl
jno
inc
mov
xchg
inc
mov
and
imul
shlb
bound
movsl
add
push
lds
test
ret
add
add
lcall
jge
xor
jnp
xor
sbbl
sub
dec
sbb
cli
pop
or
or
jmp
ljmp
mov
fcompl
imul
aad
add
pop
insb
inc
das
mov
cmp
jmp
imul
xchg
or
cmp
out
hlt
pop
imul
lods
sub
jo
nop
fmull
rorb
lcall
aam
jae
mov
cltd
xor
mov
sbb
push
sbb
push
rorb
ret
mov
out
pop
sbb
sti
orb
movsl
test
insl
scas
jle
inc
sub
lahf
xchg
js
ja
push
or
pop
data16
pop
dec
cmp
stos
insl
in
xchg
stc
cmc
push
sbb
aad
mov
cmp
adc
test
xor
or
xor
mov
sbb
bound
andb
movsb
pop
popa
dec
adc
adc
in
adc
fisubl
insl
iret
adc
insb
lods
add
dec
shr
xor
leave
ret
mov
insb
fstl
jno
lods
fwait
dec
xchg
inc
or
arpl
xchg
rorl
push
mov
aas
das
int
dec
std
mov
pop
mov
cmpsl
jno
adc
xor
inc
xor
pushf
mov
push
dec
sub
loope
sub
or
mov
bound
lcall
pop
nop
dec
and
in
cmp
es
ljmp
add
imul
rcll
std
mov
push
or
cltd
pop
mov
sub
sub
sub
repz
mov
push
jmp
out
inc
mov
bound
push
add
inc
mov
jp
lret
mov
jbe
dec
lret
movsb
and
subb
dec
adc
inc
jno
adc
in
daa
adc
jnp
add
sbb
xor
jb
mov
lret
add
cmc
dec
adcb
mov
sbb
xchg
push
popa
sbb
imul
dec
cmc
sbb
push
mov
jge
jmp
enter
mov
and
dec
decb
scas
aaa
dec
pushf
push
and
mov
pushf
mov
imul
stos
lock
xchg
xor
clc
daa
rclb
push
mov
mov
mov
ja
ret
movsl
push
pop
int
jno
iret
sub
adc
dec
cmp
cmpsl
jbe
rcl
adc
xor
or
mov
lret
xlat
aad
and
mov
call
push
call
paddw
or
cs
in
test
adc
ss
imul
and
xor
mov
and
inc
mov
jne
jns
sbb
xchg
mov
bound
mov
insb
hlt
pop
push
aad
out
lea
mov
sarl
jne
mov
sarb
insl
movsb
add
sbb
loopne
ret
mov
push
out
xchg
push
jmp
into
mov
lds
cmc
enter
jge
inc
push
stc
mov
scas
mov
or
jo
mov
xor
or
loopne
stos
jge
shl
into
and
cld
jnp
cmp
push
pop
in
loope
in
pusha
popf
push
xchg
int3
int
mov
and
pop
pop
sbb
faddl
repnz
lock
pushl
sub
loope
add
out
pop
cmpb
movsl
movsl
imul
mov
lret
fnstsw
lret
ret
fisubl
mov
add
ja
dec
lds
sub
stos
arpl
jns
push
mov
aaa
mov
loop
mov
push
jne
ss
icebp
add
sbb
repz
imull
int
pop
pop
mov
rcl
or
push
scas
mov
icebp
add
push
movsb
arpl
lret
mov
push
or
pop
in
les
das
mov
cmp
out
sub
repnz
jle
cmp
pop
cltd
cmp
jle
jbe
das
mov
stos
sbb
enter
test
shrb
js
cmp
aas
mov
pop
sbb
jnp
mov
sbb
push
adc
lea
adc
or
in
pop
xor
push
jecxz
mov
notl
push
dec
jne
popf
pop
out
mov
cmpsb
js
jle
cmp
movsl
iret
mov
imul
mov
dec
int3
les
or
test
sub
sub
test
pop
mov
jle
inc
outsb
mov
mov
mov
mov
repnz
adc
push
es
lods
rcl
sub
or
cmp
mov
mov
mov
push
aaa
push
repz
hlt
xchg
loopne
cmp
push
or
mov
jne
cmp
fistpll
xchg
mov
pop
jbe
in
movsl
addr16
stc
jno
cmp
fmuls
int
adc
popf
call
and
sub
adc
push
ret
stos
jge
shr
ljmp
ret
cld
mov
mov
sub
xchg
ja
fimuls
add
scas
ljmp
sti
daa
sub
cmp
jae
fldl
jmp
jmp
xor
gs
sahf
aaa
jb
add
adc
rcrb
or
stos
fwait
inc
xchg
jae
loop
add
loope
frstor
or
jmp
lock
js
repnz
rclb
add
inc
sbb
jns
and
mov
push
adc
insb
rorb
dec
xchg
mov
cmpsl
imull
inc
sub
add
cli
add
jecxz
inc
insl
repz
gs
push
xor
inc
mulb
xchg
ljmp
test
xchg
or
fsubrs
jmp
pop
ja
enter
xor
scas
pop
push
sarb
dec
push
mov
hlt
ret
in
push
pop
aam
roll
add
sbbl
movsb
push
jbe
cmc
cmp
popf
sbb
jl
les
ret
into
leave
push
iret
jae
push
fs
andb
jno,pn
inc
sub
lcall
adc
cld
aam
mull
or
inc
jl
sbb
jg
clc
or
ljmp
data16
jbe
ds
sub
or
daa
or
ja
mov
insb
jp
sbb
xchg
mov
ja
mov
insl
out
jg
popl
sub
out
daa
aaa
xchg
lcall
inc
or
mov
out
fsubrs
and
popf
or
clc
call
daa
fdivs
add
mov
movsb
add
pop
enter
fbstp
loop
pop
cld
pop
adc
push
push
xchg
loopne
pushf
dec
addr16
sbb
fisubl
test
jp
fnstenv
mov
enter
ljmp
lcall
lret
gs
or
lods
call
sub
jge
imul
loope
and
inc
push
or
jo
test
in
pop
and
jp
mov
mov
fdivl
push
mov
mov
adc
out
cmp
jecxz
and
fildll
sbb
and
test
and
je
add
bound
mov
mov
cwtl
push
push
lock
test
in
cs
push
cld
fmull
jb
xchg
fucomip
inc
xor
repz
popa
dec
ficoms
inc
lcall
xchg
jg
inc
inc
testl
sbb
push
sahf
cmpsb
jne
jecxz
dec
rcrl
subl
jns
add
cs
jge
pop
or
or
sbb
cmp
inc
sbb
fucomp
test
add
jge
xorb
jl
and
sbb
mov
mov
mov
loop
rcrb
lret
enter
clc
sub
xlat
pop
dec
sarl
fldl
xor
cwtl
js,pt
push
arpl
sbb
fldt
cmp
lock
imull
scas
fimuls
fdiv
or
pop
pop
lret
sahf
loop
mov
push
test
mov
in
in
arpl
push
lret
pop
out
push
nop
mov
jo
or
lea
testl
mov
imull
push
repnz
ror
mov
mov
dec
stos
pop
mov
imul
popf
add
shr
stos
xor
jg
mov
loope
xchg
jnp
out
sub
imul
pop
xor
xor
fldenv
fndisi(8087
and
jg
rorl
cmp
pop
xor
mov
add
pop
je
js
and
cwtl
push
adcb
test
or
aad
std
or
out
cmc
jmp
add
jns
fldcw
aaa
xchg
jmp
push
ret
cmpsb
pop
jmp
xorb
vcvtss2si
push
sahf
js
sbb
jnp
rcrb
ret
xchg
rcr
scas
lea
and
pusha
dec
push
pusha
and
jmp
mov
and
movsl
pop
or
jle
pop
mov
inc
jae
aad
inc
dec
div
xchg
cmc
mov
jecxz
cmp
or
inc
pop
and
xor
xchg
push
fmuls
push
sbb
sbb
repnz
in
mov
adc
xor
add
movsb
add
xor
cs
cltd
sarl
int3
dec
cltd
mov
pop
jg
xchg
mov
enter
orl
in
and
ret
ja
inc
pushf
idiv
je
xlat
clc
push
inc
mov
in
mov
cld
inc
scas
ret
inc
jo
idiv
andb
dec
bound
adc
ret
fisttpl
aam
cmp
inc
addr16
test
dec
xchg
sbb
dec
or
cltd
insb
push
and
pop
mov
xor
pop
insb
js
imul
add
dec
push
push
push
cwtl
sub
mov
rclb
adcl
ret
gs
xchg
mov
sub
jg
push
lcall
std
inc
lret
nop
js
jp
std
cmp
nop
stc
mov
jne
pop
cmp
jge
daa
jle
lcall
dec
pop
lds
fistl
loop
out
mov
inc
sub
popf
xor
mull
hlt
pop
jno
cli
dec
mul
dec
imul
xchg
fwait
out
jecxz
call
loope
and
sbb
lods
add
xchg
je
notl
out
ret
ja
pop
scas
sbb
mov
out
push
std
jne
sahf
pop
or
test
jp
mov
jne
jmp
shll
es
aas
aaa
aad
dec
and
or
data16
cmp
pop
loop
dec
stc
sbb
in
dec
mov
fmull
stos
jle
leave
jb
loop
addb
imul
sbb
js
addr16
lds
dec
jle
inc
and
shll
data16
aad
dec
mov
stos
mov
lock
sahf
add
in
jge
adc
or
or
sub
subl
sub
sbb
lea
sbb
cmc
pop
mov
data16
scas
cmp
inc
xor
pushf
fldl
scas
add
pushf
int
mov
sbbl
popa
cltd
fisttps
push
push
pop
les
dec
or
push
lods
dec
xchg
adc
lret
xchg
outsl
and
xor
je
mov
cmc
loop
out
addr16
cltd
hlt
push
clc
ss
cwtl
sbb
adc
dec
cli
lods
in
jns
adc
push
mov
jne
jne
cli
push
pop
subl
inc
aad
pop
loope
or
pop
mov
lds
xchg
mov
jmp
imul
mov
int3
and
push
lahf
xchg
jge
mov
sub
mov
jge
fsubs
cmp
inc
mov
dec
add
jbe
or
dec
fdiv
push
or
hlt
insl
fnstcw
shlb
mov
push
xchg
rcrl
leave
lock
dec
stc
xor
aam
lret
ret
push
test
mov
or
mov
cmp
inc
shrl
mov
fnsave
mov
or
push
into
es
imul
fwait
ds
pop
arpl
sub
fidivrl
cs
es
cs
das
dec
pop
mov
cld
imul
mov
fwait
jle
inc
xchg
scas
aaa
popf
mov
lcall
xchg
mov
loop
or
icebp
fisubs
mov
push
pop
sub
dec
outsb
or
enter
addl
xchg
sbb
bound
movsl
cmc
cld
lock
dec
ja
loop
adc
and
cld
popa
mov
outsl
lcall
hlt
loopne
test
ljmp
mov
inc
pop
inc
add
scas
dec
mov
sub
push
loope
enter
fscale
outsb
cmpsb
sbbl
mov
jg
out
inc
push
fisubrs
aad
jge
adc
or
pop
xor
xchg
loopne
in
xlat
add
ja
push
mov
movsl
les
repnz
movzwl
xchg
scas
xlat
pop
cmp
popf
add
sarl
jg
pop
sti
dec
mov
inc
xor
sahf
loop
stos
xchg
imul
je
icebp
jae
sbb
stos
sub
add
imul
or
jno
cmp
dec
push
xlat
add
and
sbb
lods
loope
xor
lret
push
push
out
popl
mov
mov
adc
mov
pusha
push
push
xor
cltd
pop
cmpsl
ljmp
push
cmpsb
daa
push
pop
xchg
mov
popa
ss
subb
push
pop
mov
test
insl
jns
dec
out
hlt
mov
inc
cmp
xorl
rolb
leave
cmc
call
mov
andb
sub
sbb
mov
imul
out
call
push
cmp
mov
dec
aad
enter
cmp
addr16
push
inc
pop
xchg
in
fisttpll
xchg
loope
or
mov
into
and
jle
popa
jbe
data16
imul
jle
xchg
add
or
in
js
or
out
imul
add
incb
in
out
sbb
adc
je
cmpl
frstor
mov
repnz
movsb
sub
in
insb
gs
pop
xor
aaa
push
imul
or
test
fdivs
mov
lods
sbb
insl
push
push
nop
or
dec
scas
in
loope
inc
jge
addr16
or
movsb
repnz
test
fdivs
cli
stos
or
inc
pop
mov
lea
repz
pop
jns
leave
jns
insb
adc
push
mov
imul
bound
pusha
xlat
lock
int
cmp
fbld
shll
in
sahf
rorl
gs
xor
iret
push
push
cli
pop
out
mov
mov
pusha
into
stos
xor
daa
mov
jl
and
mov
lret
int3
mulb
jp
xchg
and
sub
xor
mov
neg
xchg
lea
sub
ja
adc
or
sahf
add
jb
sbb
mov
hlt
fwait
jecxz
in
call
jmp
subb
aad
xchg
push
push
jae
lret
xor
or
xchg
xchg
mov
lock
xchg
adc
add
lcall
into
cmp
cmp
sbb
out
dec
cmp
stos
repnz
push
pop
daa
and
sbb
sbb
and
mov
push
test
cmp
int3
sbb
lods
je
es
push
or
movb
xor
mov
or
push
inc
jle
pushf
xchg
xchg
lods
sub
jp
das
testl
dec
mov
jne
aam
pop
rclb
xor
repnz
xchg
leave
ss
cmp
popf
add
push
aad
inc
stos
mov
fldenv
rolb
mov
fistpl
jecxz
jno
andps
mov
mov
dec
mov
sub
ss
dec
adc
mov
sbbb
pushf
cmpsw
and
sbb
xor
out
int3
insb
mov
inc
outsl
hlt
and
aaa
adc
mov
ljmp
out
nop
xchg
lcall
cmpsb
clc
mov
push
sbb
ja
ret
les
xchg
inc
mov
fildll
xor
xor
mov
inc
mov
push
cmp
scas
xchg
pop
test
insb
xchg
les
mov
call
dec
inc
sahf
pop
push
add
out
pop
dec
inc
dec
mov
mov
int
sub
mov
dec
ficoms
stos
adc
vsqrtps
std
push
jae
adc
or
test
adc
je
call
sub
adc
jmp
loope
push
push
jge
inc
negl
sub
xor
je
loop
fwait
dec
fsubrp
dec
or
rcll
out
hlt
repz
adc
and
lcall
mov
mov
shlb
lret
lcall
xchg
push
xor
push
fisubrs
call
movsb
xchg
cmpsb
bswap
add
in
and
push
lret
or
jns
adc
dec
popa
jns
cld
js
inc
add
pop
aam
xchg
sar
loop
mov
popf
dec
cmpsb
outsb
dec
outsl
mov
jmp
xchg
sbb
out
stos
loope
test
jb
or
hlt
sub
mov
movsl
dec
mov
push
xchg
movsl
mov
aaa
sahf
addb
inc
xor
inc
sarb
out
pop
fsubrs
push
or
scas
xor
inc
and
sarb
mov
adc
ljmp
popf
lods
bound
nop
mov
stc
adc
fisubs
es
dec
xchg
push
cmp
dec
mov
imul
pop
pop
cmp
mov
lahf
mov
dec
ds
cs
icebp
imul
mov
mov
hlt
jbe
and
sbb
inc
push
dec
lret
idivb
dec
pop
lret
rorl
fimull
ja
inc
lcall
pop
les
outsl
adc
inc
ret
daa
push
andl
adc
fiaddl
and
std
cli
addb
imul
test
fidivrl
xchg
cmp
out
loopne
in
pop
lods
inc
sub
mov
inc
push
mov
inc
icebp
dec
out
ja
inc
xor
xchg
jmp
xchg
adc
sbb
shl
mov
mov
push
push
xchg
pushf
decl
pop
mov
mov
data16
lsl
adc
push
mov
cli
pop
ljmp
std
lods
xorb
insl
dec
adc
popf
ror
mov
mov
or
jmp
fistl
sbb
pop
jne
mov
and
popa
loope
mov
arpl
aam
jns
hlt
sub
push
pop
loop
mov
pop
pop
xchg
jl
mov
jbe
ret
inc
fbld
dec
jmp
stos
sbb
shlb
jp
fwait
adc
jo
jno
add
shr
jo
xchg
orl
gs
es
mov
outsb
ja
ret
push
inc
cmp
fldcw
or
cmp
shl
mov
jne
push
xchg
adc
adc
inc
jg
pop
add
pop
dec
popf
out
call
inc
adc
ret
inc
inc
subb
cmp
mov
fldt
loop
rsqrtps
adc
dec
insl
and
test
lahf
test
enter
sbb
clc
cmp
pop
mov
xor
xchg
out
sub
xor
sub
sbb
pop
inc
stos
ljmp
hlt
sbb
fs
inc
add
in
mov
loope
das
xchg
sti
sub
jmp
add
sahf
ret
pop
aas
pop
push
les
nop
aaa
push
jp
inc
xor
mov
push
xchg
pop
push
push
roll
xor
add
mov
scas
cmc
lock
pop
cmp
movsl
lods
mov
jo
mov
inc
cwtl
jmp
mov
cmp
sti
insl
insb
mov
pop
cmp
jmp
loope
or
movsb
inc
out
dec
cmpsb
or
loop
push
fnstsw
hlt
aam
sub
imul
cmpsl
mov
mov
sbb
and
add
loop
jp
dec
pusha
cmp
lret
mov
ja
cltd
lret
fmuls
jge,pt
pop
into
leave
cmp
push
jg
fnsave
sbb
sbb
cmc
ds
cmp
xchg
pop
jae
ficomps
jnp
loop
in
push
pop
inc
daa
cld
stos
mov
xchg
jb
add
cltd
push
ret
xchg
xor
jecxz
arpl
pop
jns
xchg
pop
pop
aas
aad
mov
inc
ror
test
aas
inc
mov
insl
clc
sbb
mov
pop
cmp
aam
icebp
cmp
jmp
lods
scas
or
mov
or
cli
mov
mov
and
xchg
loopne
enter
lds
clc
mov
jp,pn
les
cmpsl
aas
ds
mov
or
nop
fcomip
push
sub
aaa
xor
mov
addl
insb
pop
shrb
scas
dec
sbb
adc
cltd
jmp
xor
or
fsts
push
mov
imul
inc
outsb
mov
cs
ftst
dec
hlt
sbb
push
jno
test
add
cltd
inc
adc
scas
jle
int
shll
fisttpll
push
int
xor
mov
insb
iret
in
add
int3
xchg
xchg
add
lcall
pop
mov
push
xchg
jg
cmpsb
sbbl
dec
sarb
adc
pop
das
inc
push
lret
stos
mov
scas
mov
das
xor
pop
out
xorl
push
jecxz
scas
xchg
arpl
and
xor
sub
inc
pop
push
ja
cmc
xchg
mov
or
aam
shll
outsb
rcr
inc
cltd
jb
out
out
dec
sbbb
or
lds
mov
adc
push
cwtl
stos
push
adc
dec
repz
inc
mov
mov
cmp
xor
cmp
xchg
nop
out
xchg
pop
adc
xor
out
mov
xor
cli
cmp
popa
mov
in
sbb
push
jp
add
out
out
stos
ljmp
arpl
or
insl
stc
outsb
mov
jge
mov
sub
sub
dec
daa
roll
jl
pop
ja
daa
js
jge
push
cli
jle
out
mov
es
pop
cmpsl
aad
loopne
test
fwait
leave
aas
ret
adc
xor
fucomi
push
cmp
in
mov
in
adc
xor
shlb
push
lret
outsl
dec
call
jne
and
gs
ficoms
sub
insb
push
xor
dec
mov
je
xor
lret
cld
lea
pop
hlt
stc
mov
mov
xchg
mov
cmp
clc
lock
sub
sub
mov
stos
xor
mov
testl
mov
push
insl
mov
loope
lcall
scas
in
xchg
pop
adc
mov
imul
mov
sahf
pop
cmpsl
xchg
fucomp
aad
xlat
fcmovnu
sub
lock
add
mov
sbbb
or
mov
call
push
cmpsb
mov
sub
std
add
into
mov
push
pop
adc
mov
hlt
test
or
fwait
jl
mov
xchg
outsb
cmp
inc
jle
mov
sbb
das
mov
jl
pushf
jo
mov
xor
lds
lea
xchg
mov
jae
xor
fs
jl
sub
daa
jmp
add
cmpsb
adc
hlt
inc
fisttpl
lds
adc
dec
sub
test
adcl
loopne
lock
dec
dec
adc
xlat
add
cmp
xor
adc
jb
cmp
addl
xor
xor
inc
mov
cmpsb
imul
or
pop
and
fisubrl
out
jecxz
and
mov
mov
cmp
outsb
and
push
mov
pop
mov
imul
adc
data16
sub
cld
les
and
cwtd
into
sbb
or
xor
jmp
push
leave
js
sbb
insb
jp
ficoms
shrl
js
jp
sbb
arpl
cmpsb
popl
pop
or
sub
test
sub
sbb
xchg
ds
sub
inc
xor
rcrl
fcmovnbe
fcomi
std
sar
add
xchg
jecxz
fs
test
in
inc
pop
inc
lret
ret
mov
int3
cs
hlt
pop
into
dec
sbb
lds
mov
cltd
test
das
and
xlat
mov
js
inc
xchg
lcall
test
adc
fildll
inc
xor
ljmp
enter
popa
cld
jecxz
pop
jl
push
cmpsl
stc
cmp
test
lcall
pop
pop
ljmp
or
cmp
aaa
pop
mov
cmpl
enter
push
dec
xchg
and
lods
aaa
lea
out
ret
jle
and
dec
xor
mov
ja
int3
mov
xchg
mov
jle
into
push
dec
xor
shrb
cmp
stos
pop
sti
dec
icebp
lea
jmp
jge
outsb
pop
into
rcr
nop
test
sub
push
jl
push
xor
in
sub
aad
imul
adc
dec
sub
lcall
test
addb
popa
xor
shll
jecxz
shrl
pop
aas
fdivl
sti
add
add
cmc
dec
test
fstl
adc
insl
stos
ja
dec
cwtl
popa
nop
xchg
inc
clc
hlt
mov
xor
xorl
and
add
xchg
or
and
jbe
mov
sahf
adc
jo
aaa
and
add
outsl
loopne
and
lods
aaa
mov
pop
or
sub
clc
fsin
shlb
cmc
std
fs
and
dec
push
test
les
cmc
mov
pop
sub
insl
arpl
sbb
in
jno
aas
notb
or
mov
jb
cmp
adc
test
mov
jnp
add
cli
sahf
in
mov
and
decl
dec
repz
mov
and
xchg
stc
mov
fwait
sub
mov
jmp
cltd
xlat
mov
gs
mov
or
ja
cmp
pop
hlt
sbb
push
pop
rol
bound
cmp
das
fs
movsb
sbb
aad
or
push
dec
adc
in
push
dec
xlat
lret
mov
fsubrs
aam
lret
data16
push
out
fsubs
cmpsl
stos
inc
or
and
fdivrl
mov
jmp
dec
sbb
ret
out
xchg
clc
xchg
push
fiaddl
cmpsl
inc
or
adc
fs
mov
loope
mov
cmpsl
pop
or
mov
mov
xchg
inc
rorb
rcl
flds
cmpsb
pop
fisttpll
mov
lds
xchg
lods
and
mov
pop
xlat
adc
insb
fisttps
movl
dec
push
add
cltd
pop
jo
xlat
stos
push
mov
lock
mov
das
push
jl
test
cmp
or
out
imul
jae
mov
and
repnz
xchg
mov
mov
ret
mov
dec
adc
lock
scas
repz
push
xchg
popa
mov
push
xchg
fisubrs
outsl
xor
dec
bound
pop
sub
insb
push
das
aam
and
movsl
xlat
push
std
jg
sub
cmpsb
addb
mov
adc
push
cmp
mov
or
test
adc
and
lahf
pop
push
fildll
xor
in
fst
adc
sbb
mov
pop
xchg
lds
mov
cmp
int3
outsl
cmp
sti
or
cmpsb
sbb
daa
jne
sub
and
inc
loopne
sbb
or
lds
sub
lret
dec
popf
sahf
fists
jae
inc
xchg
and
repz
push
push
mov
or
stos
shlb
mov
lea
icebp
add
adc
inc
mov
loope
rcll
pop
ds
mov
mov
mov
cli
in
test
sub
enter
fcomps
mov
mov
cmp
popf
sub
clc
bound
inc
ret
xchg
aad
in
int
add
dec
sub
leave
ss
fs
mov
mov
xor
push
in
mov
push
ljmp
pop
pop
out
add
jl
dec
mov
aam
jle
xor
or
ret
mov
mov
arpl
xchg
push
push
call
imulb
scas
or
push
arpl
inc
sub
insb
outsb
fstl
inc
dec
push
jne
inc
lahf
loop
sub
xor
call
sbb
xchg
cli
sub
daa
ja
and
mov
test
pop
shr
loope
or
and
push
loop
sub
or
mull
mov
mov
mov
jb
imul
stos
mov
adc
mov
int3
ret
adc
gs
mov
inc
xchg
push
aas
test
mov
or
and
jb
xchg
xchg
lds
loope
add
dec
mov
cmp
test
adc
out
add
pop
fwait
or
inc
out
mov
in
and
dec
push
and
test
stos
jle
push
shl
xchg
mov
push
jae
roll
lret
cmp
pop
lret
pop
cmp
jno
insb
es
fs
dec
stos
xor
xchg
sahf
sbb
cwtl
or
pop
add
sub
test
sbb
fcom
inc
outsb
hlt
cmp
mov
cwtl
lock
iret
lods
pop
mov
fildl
push
sbb
fwait
dec
sbb
and
inc
stos
xchg
xchg
pop
int3
addps
das
fidivrs
mov
xchg
xor
cmp
push
roll
out
clc
dec
jno
mov
jp
mov
cmp
pop
idivb
push
mov
cmp
dec
cmp
pop
in
call
jmp
mov
shl
mov
sahf
adc
fisttpll
dec
sahf
ficoml
mov
cmp
int3
and
test
daa
mov
movsb
add
mov
adc
cmp
mov
fdivrs
out
in
jmp
testb
sub
test
int
jae
push
loop
push
adc
xlat
pop
add
mov
push
sbb
adc
testl
add
mov
aaa
div
js
mov
fsts
into
mov
dec
lcall
mov
dec
aam
mov
add
mov
xor
mov
sub
inc
mov
data16
mov
out
sti
pop
and
sub
call
mov
rcl
leave
insl
shll
or
mov
mov
sbbb
adc
enter
sub
and
loope
in
mov
push
pop
aam
sbb
mov
fsubs
loope
popf
dec
lcall
xchg
and
dec
js
pop
dec
xchg
dec
pop
test
push
mov
adc
cmp
add
stos
shlb
sub
sbb
jnp
andb
popa
push
bnd
bound
fcomi
jge
cmpsb
or
jmp
sar
test
jbe
repz
cld
cmp
stos
jns
jle
aam
icebp
jg
sub
lret
mov
imul
test
adcl
jns
jp
adc
ljmp
sub
push
hlt
pop
mov
dec
mov
aam
pusha
jb
inc
ret
mov
enter
lcall
lods
cld
lock
inc
hlt
aaa
aad
mov
das
in
lret
push
adc
jg
fmulp
outsl
out
lock
leave
movsb
mov
or
repnz
adc
jnp
xor
pop
fisttpll
dec
out
ficoml
sub
lods
clc
idivl
sub
mov
lahf
fcmovne
jle
jo
sarl
add
xchg
lcall
xchg
adc
push
in
fnsave
sub
jmp
leave
ds
cmpsb
xor
mov
mov
dec
lret
pop
pop
xor
fadds
adc
and
jmp
lahf
fildl
xchg
aaa
inc
lcall
lea
loope
je
and
scas
mov
in
pop
stos
mov
lea
xorl
sub
sbb
scas
pop
sub
jne
mov
jns
or
sti
fidivrs
mov
stc
inc
lcall
push
loopne
lret
in
sarb
mov
mov
data16
mov
adc
and
adc
imul
fisttps
or
ret
jbe
xchg
pop
shlb
adc
xlat
push
xchg
adc
or
mov
lahf
leave
stos
xor
push
sub
adc
aad
jge
inc
pushf
mov
fdivrs
pop
inc
jne,pt
iret
ret
lahf
pop
push
mov
push
xchg
iret
xchg
and
leave
mov
dec
punpcklbw
lcall
inc
lret
mov
sub
pop
push
js
xchg
jl
jno
leave
mov
add
in
ja
into
iret
or
jle
pop
xor
pop
jne
cld
pop
jl
iret
inc
in
mov
out
jno
repz
mov
xchg
mov
fistl
lds
je
cmp
xchg
leave
int3
sbb
addr16
lds
mov
shrb
loope
jmp
push
iret
xchg
mov
test
ffree
inc
std
inc
out
xor
inc
ljmp
ja
sar
xor
sub
movsl
stos
xchg
roll
or
fisttpl
mov
xor
adc
rcrb
sub
pop
das
movsb
inc
ljmp
ret
inc
pop
dec
adc
movsl
adc
cmpsb
movsl
and
cld
fdivrl
xor
adc
pop
orl
mov
xchg
add
daa
dec
int3
mov
mov
inc
fcomi
orb
cmp
xchg
jo
aas
scas
inc
stos
inc
aas
mov
loope
sub
mov
xor
jae
inc
add
or
lods
cmp
pop
sub
int3
loopne
ljmp
leave
lods
movsl
add
dec
inc
lahf
sbb
insl
pusha
cwtl
mov
imul
xchg
jb
xor
mov
jp
lret
jae
and
addb
sub
push
fsubp
outsl
out
jns
xor
jl
pop
dec
adc
jecxz
dec
add
jl
fisubs
push
out
stos
mov
cmc
push
push
jno
ret
mov
mov
add
jo
icebp
mov
rcrl
repnz
push
out
int
xchg
jno
nop
andb
orl
push
ja
adc
jp
stos
pop
push
mov
sbb
jo
stos
out
mov
adc
xor
inc
rcrl
pop
fstps
mov
sub
mov
sbb
sub
outsb
xchg
jecxz
or
lods
mov
xlat
mov
pop
xchg
jle
pop
aas
movsb
xorb
test
insl
cmpsl
xchg
jb
pop
aas
cmp
imul
stos
jns
push
arpl
mov
mov
inc
and
adc
mov
inc
or
or
das
mov
dec
xchg
jne
gs
arpl
outsl
sahf
push
outsl
or
adc
clc
in
aam
loopne
dec
xor
test
aaa
mov
movb
cltd
jno
aam
xchg
fdiv
in
ljmp
icebp
push
dec
jne
out
rdtsc
pop
out
into
sbb
mov
add
movsb
enter
subb
xorb
jbe
or
adc
mov
xchg
ds
mov
dec
jns
sbb
cmp
or
xor
and
cmp
pop
xor
cltd
push
lret
ss
xor
adc
mov
jno
push
aaa
and
pop
test
lcall
push
repnz
arpl
push
jae
fistl
fs
adc
lahf
cmp
lcall
dec
mov
mov
mov
mov
jo
sub
lret
faddl
mov
out
sbb
ret
int3
push
dec
and
sbb
pop
lea
ljmp
pop
cltd
rcll
mov
ss
bound
jge
les
lret
sahf
ret
jg
jmp
push
sbb
push
push
dec
sub
scas
cltd
stos
pusha
test
xchg
jnp
xor
add
sbb
sbb
sbb
mov
test
enter
les
and
lods
not
push
push
inc
bound
and
xchg
push
mov
push
mov
cmc
cmpsb
stc
shll
clc
int
cmp
mov
in
cmpsl
cltd
jmp
sahf
push
scas
xchg
mov
test
into
xor
xor
inc
fdivr
fildl
add
dec
inc
fmuls
repnz
adcb
inc
dec
and
mov
movsl
nop
fstps
mov
call
push
cmp
dec
push
lret
fidivl
fnsave
sahf
mov
repz
mov
push
cmp
mov
lahf
mov
lret
sbb
enter
mov
into
movsb
xor
cli
popa
push
repnz
test
sub
lods
xchg
repnz
push
or
mov
sub
ret
cld
adc
test
mov
std
loope
jb
sbb
icebp
aaa
not
and
outsb
leave
out
xor
ljmp
clc
loop
test
xchg
push
pop
add
call
loope
movsb
sbb
cmp
clc
mov
and
loop
xchg
add
or
out
out
out
inc
mov
imul
jns
sub
xor
pop
push
je
push
dec
sub
out
mov
cmp
xlat
cmc
mov
loope
stc
and
stc
add
xor
fmuls
xlat
or
mov
shrb
notb
push
jbe
cmpsl
or
jo
lahf
mov
icebp
insl
or
imulb
pusha
loopne
inc
jg
mov
mov
aaa
out
adc
popf
inc
mov
mov
mov
xor
dec
and
cmp
mov
insl
jg
push
xlat
lcall
repnz
int3
sti
int
pusha
ret
movl
movl
mov
clc
push
and
inc
sub
popa
cmpsl
pusha
pop
int3
pusha
xchg
jge
aaa
mov
outsb
xchg
and
xchg
or
inc
stos
cmpsb
ficoml
sub
arpl
into
stos
mov
cmp
mov
xor
or
mov
adc
out
movsb
gs
pop
jmp
test
out
jg
data16
add
add
cmp
mov
adc
dec
mov
es
cld
xchg
and
das
xchg
push
xor
pop
mov
xchg
inc
flds
ja
cs
testb
insl
mov
jb
adc
or
lret
jae
in
jle
lret
cmp
push
shlb
cld
sarl
jmp
int3
xchg
mov
call
mov
adc
jmp
cmove
stos
pop
ds
imul
sub
subb
sub
jno
mov
inc
mov
push
jb
sbb
xlat
xchg
cmc
push
sub
data16
in
pop
add
pop
mov
in
cmp
dec
cmp
shll
or
xor
xchg
push
mov
fwait
dec
out
dec
jae,pn
adc
sbb
pop
jp
leave
rorb
loop
mov
popf
push
or
mov
push
mov
xlat
aam
arpl
sbb
adc
cwtl
stos
and
rcll
pop
jecxz
ss
mov
jae
adc
mov
cltd
scas
pop
push
mov
aas
and
and
dec
mov
cmpsl
inc
popf
insb
or
dec
shll
fmul
or
mov
mov
stos
imul
jmp
add
test
enter
push
dec
sub
test
out
cmpsl
ret
aad
push
dec
inc
dec
mov
into
aad
lahf
dec
pop
std
popl
jge
sbb
lods
insl
movsl
mov
in
sbb
cwtl
add
js
je
add
std
sbb
xor
sbb
lds
pop
inc
loopne
orb
les
pop
dec
aam
pop
add
cwtl
jmp
js
ret
adc
repz
mov
sarb
scas
iret
filds
into
mov
pusha
out
jmp
cmpsl
mov
xchg
push
jg
pop
pop
repz
pop
pop
pusha
idiv
sbbl
mov
jns
and
and
pop
sub
int
or
repnz
inc
jbe
test
xor
je
ret
mov
adc
jp
ja
jecxz
sub
outsb
pop
inc
fsub
mov
fldenv
dec
daa
pop
sarb
xchg
cltd
bswap
out
out
iret
in
insb
enter
push
lret
and
call
and
cltd
push
stos
scas
ja
stc
stc
scas
cmp
mov
imul
cmpsl
test
cltd
loopne
pop
jb
stos
pop
aas
adc
aam
insb
or
fwait
in
dec
inc
jo
ret
push
adc
jns
push
in
leave
inc
insl
fbld
and
push
cmp
jb
movsl
jb
jne
mov
xor
mov
addr16
pop
xor
xchg
insb
push
loop
stos
sbb
mov
ja
fldcw
xchg
fdivrs
xchg
dec
lods
push
in
add
fsubp
mov
sbb
insb
pop
mov
daa
mov
mov
adc
sbb
xchg
and
push
fcoms
push
push
push
and
out
xor
dec
ss
push
fwait
mov
or
inc
cli
fwait
addr16
add
outsl
sbb
cli
push
and
sahf
mov
jl
insb
push
add
inc
cmpsl
outsb
dec
das
pop
scas
mov
lret
movsb
or
fistl
xorb
adc
add
mov
call
in
int3
aas
lock
and
pop
jge
pop
es
adc
repnz
jb
xor
jl
xchg
lea
outsl
jp
sbb
dec
or
lods
cmp
mov
lahf
rcr
int3
testb
jmp
sahf
cmp
leave
in
enter
mov
push
xchg
int
test
push
bound
mov
pop
adc
int3
filds
sbb
fxtract
cmc
xor
outsl
xlat
idiv
mov
fs
imul
pop
and
out
mov
notb
push
add
mov
mov
jns
push
iret
xchg
lret
inc
loop
mov
les
aad
push
dec
idivl
mov
cmp
lea
adc
adc
cmp
mov
ret
or
push
je
push
sub
loop
test
adc
jge
clc
mov
out
mov
sarl
sbb
cwtl
mov
mov
adc
arpl
adc
mov
and
sub
pop
les
mov
xlat
xor
imul
jmp
loope
pop
adc
popa
mov
and
cmp
sahf
cmpb
dec
into
shll
sbb
jg
inc
or
jbe
ljmp
mov
xor
add
repnz
and
sbb
arpl
xchg
movsb
pop
lcall
mov
jl
pushf
scas
movsl
adcl
test
or
dec
fiadds
aad
je
and
repnz
lahf
jle
loopne
cmp
lods
outsb
and
mov
mov
out
jae
inc
test
and
jnp
in
jge
daa
dec
pop
jns
mov
push
mov
xchg
inc
cwtl
inc
xchg
jmp
fnstenv
jno
pop
jmp
lods
cmc
sbb
mov
sub
mov
in
xchg
rcrb
ret
out
adc
adc
scas
pushf
pop
or
xchg
push
dec
push
mov
int
jb
orl
out
dec
xor
dec
push
mov
push
mov
jb
sbb
sub
dec
lret
push
inc
mov
psllq
push
xchg
cli
icebp
xorl
mov
jecxz
dec
jecxz
setg
sti
pop
fisubrl
ret
mov
addr16
push
ljmp
shl
movsl
or
jnp
push
lret
out
sahf
test
fidivs
bound
jno
ss
movsl
cli
outsb
insb
movsb
mov
jo
mov
clc
jns
jne
nop
int3
scas
pop
fildl
adc
inc
pusha
xchg
mov
daa
push
sbb
push
rorb
mov
dec
xorl
sbb
repz
mov
notb
or
inc
outsl
xor
pop
or
and
stos
aaa
outsb
divl
mov
xor
enter
xchg
lds
xchg
ljmp
push
inc
adc
aam
int3
dec
cwtl
jp
mov
addr16
mov
push
add
popa
sbb
aam
dec
dec
pop
cmp
push
mov
adc
dec
leave
lret
cmp
and
scas
adc
imul
sub
cld
pop
jbe
add
fs
out
outsl
push
outsb
sbb
adc
cmp
shrb
scas
add
dec
xchg
mov
sub
sub
sahf
pop
inc
loope
lret
push
push
je
xchg
gs
pop
and
sbb
sub
lret
jl
xchg
insb
xchg
cs
clc
sar
loope
sub
xlat
mov
sub
mov
daa
push
rorb
fisubs
jp
daa
push
stos
push
and
test
adc
addr16
cmp
loop
mov
ret
jmp
daa
movsl
sub
ret
and
gs
cmpsb
pushf
dec
jns
mov
mov
out
mov
jo
fstps
leave
cmp
xchg
and
and
pop
mov
or
mov
jg
shll
into
out
fidivrs
xchg
sbb
ss
lods
jnp
ja
inc
sub
mov
subb
pushf
or
add
xor
sti
xchg
or
icebp
mov
adc
daa
in
mov
mov
add
popa
pop
sbb
lods
fdivs
bound
push
inc
mov
scas
imul
dec
push
adc
fildll
sub
fldcw
push
es
push
inc
pop
test
mov
jge
addr16
test
sbb
pop
lea
push
lcall
adc
xchg
lock
movsl
xchg
jbe
mov
out
aas
pop
mov
xchg
mov
mov
xchg
dec
test
xor
xor
jne
sub
adc
lcall
xchg
xchg
push
and
inc
jmp
mov
lahf
push
xor
loopne
add
iret
ret
jbe
jmp
pop
xor
lcall
addr16
jp
jl
out
les
iret
dec
xor
mov
mov
loopne
cli
jl
mov
lret
sbb
add
inc
lea
push
push
ret
pop
add
inc
int3
sub
mov
sbb
bound
mov
inc
rcrl
insb
mov
mov
lds
lret
jno
aam
dec
mov
dec
push
iret
into
imul
mov
pop
or
xor
push
pop
popa
xor
push
in
mov
jbe
arpl
mov
jb
pop
clc
mov
inc
push
xchg
sub
add
xchg
fisubl
je
gs
js
insb
pop
das
and
add
sub
stos
mov
mov
pop
inc
in
int3
pop
and
aad
shl
pushf
cmp
dec
mov
lcall
dec
push
pop
or
mov
imul
imul
add
movsb
movsb
sbb
test
pusha
test
insl
mov
xor
lahf
imul
xchg
lods
and
testl
jb
jbe
xor
and
rep
stc
cmpsl
and
dec
imul
daa
or
inc
ja
outsb
jno
or
xchg
inc
push
mov
imul
xor
jns
cmp
adc
xchg
js
cmp
sahf
jmp
jg
bound
into
mov
xchg
cli
mov
jne
std
add
hlt
insl
cmp
mov
mov
out
cmp
inc
inc
fldcw
cltd
pop
hlt
inc
fs
test
inc
loop
xor
jo
xchg
add
mov
push
mov
add
pushf
ds
enter
cwtl
lret
iret
out
mov
cmpsb
mov
xor
into
pusha
es
pop
fadds
popa
lock
lret
fnstsw
mov
inc
push
pop
mov
jge
sbb
jmp
je
and
test
inc
shrb
ja
add
sub
mov
divb
dec
data16
sbb
sub
shll
ret
hlt
mov
xor
sbb
stos
or
daa
sbb
ljmp
xor
jb
mov
jns
or
sti
or
mov
push
scas
sbb
sub
inc
lcall
cmpsb
insl
nop
out
or
lret
sub
popa
insl
mov
popf
cmpsb
push
pushf
jecxz
inc
adc
pop
jl
cmp
cmp
mov
inc
add
lods
insl
les
mov
and
inc
aad
loope
sbb
mov
call
mov
add
jo
es
inc
es
xchg
mov
scas
sarb
adc
push
dec
sbb
inc
xor
ljmp
cli
js
cmp
rorl
lret
int3
or
xchg
fdivrl
push
fwait
into
xchg
in
jecxz
mov
sbb
rclb
aam
cld
popl
pop
xchg
ja
inc
rcr
add
ret
stc
lds
pop
movsl
dec
push
sub
into
ffree
ret
inc
pop
pop
gs
fwait
dec
fcompl
stos
xchg
jbe
sub
push
mov
imul
xchg
out
adc
lods
xor
fimull
stos
ror
cmp
jb
jbe
add
dec
mov
push
in
jecxz
and
xchg
loopne
sahf
sarl
push
fcomip
fcmovnb
lds
popa
inc
loope
add
and
mov
pop
adc
lea
imul
gs
xor
cs
insb
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
or
add
addl
jle
sub
mov
pop
or
add
jmp
gs
dec
loope
hlt
sbb
fidivrs
add
add
jecxz
sbb
das
xor
call
mov
shll
std
repnz
sar
lahf
in
mov
mov
xor
ljmp
sub
mov
push
xor
popl
mov
sub
mov
add
mov
dec
jne
movzwl
jmp
addr16
mov
cmpb
ljmp
scas
dec
fsub
cmpb
mov
lods
test
push
lods
test
fxch
adcb
rolb
cmp
pop
jg
xchg
ss
add
movsb
test
push
lods
test
cmp
jp
std
or
iret
mov
sti
and
int3
sub
add
xlat
add
inc
adc
cmp
cmpb
sub
jp
and
aad
inc
lods
test
ss
mov
jnp
push
fisubs
pinsrw
or
xor
jb
test
mov
adc
repz
imul
lods
test
mov
lds
mov
dec
push
jae
leave
cld
sahf
mov
mov
dec
xor
cltd
mov
push
xchg
dec
jmp
mov
xchg
ja
add
stc
mov
jne
pop
insl
sub
xchg
arpl
add
lods
mov
cmp
push
mov
pop
sbb
scas
cmpb
pop
dec
cmp
cmp
insb
out
shlb
sub
popf
inc
xchg
arpl
sbb
sbb
aaa
push
movsl
ret
andb
pop
adc
sbb
mov
stos
mov
out
push
jno
pop
cmp
jle
out
ret
negb
aad
les
mov
daa
fs
mov
cmp
mov
adc
test
cmp
cmp
push
push
shlb
enter
and
cld
cmp
test
jecxz
sahf
push
and
jne
popf
adc
xor
mov
jae
inc
in
jmp
jle
adc
movsb
test
inc
mull
and
cmp
dec
lds
mov
cmp
movsb
sbb
outsl
xchg
mov
popf
dec
add
popa
outsl
les
mov
inc
pop
and
xor
sub
cmp
and
xor
into
iret
mov
loope
cmp
ljmp
push
seta
dec
xorb
rclb
subb
jne
xchg
sbb
adc
and
lea
lcall
stc
jae
or
adc
test
xchg
sbb
jmp
sbb
lea
rcrl
mov
adc
shlb
sbb
rcl
addb
mov
cmpsb
repz
sahf
das
addl
mov
sarb
sub
scas
and
adc
xchg
sbb
sub
inc
ret
in
jb
mov
adc
leave
xchg
inc
adc
shlb
xlat
sarb
dec
jl
mov
ret
into
mov
lods
xchg
cmp
das
js
push
popf
cmp
iret
jecxz
jbe
testb
in
ljmp
ss
cmovo
pop
lods
fistpll
inc
dec
cmpl
lods
fbld
inc
push
cmp
cmpsl
lods
fistpll
push
jbe
das
push
outsl
jecxz
jle
inc
sub
lods
mov
dec
lret
cs
xor
fcmove
mov
mov
test
mov
push
mov
sbb
sub
lret
aam
sarl
mov
push
data16
lods
sarl
lods
inc
xlat
lret
cmpsb
lods
imul
cmpsl
test
mov
lods
cmpsb
test
mov
test
mov
mov
add
mov
cmpsl
lods
dec
int
ss
pop
mov
xor
mov
lods
fbstp
adc
fistpll
mov
cmp
mov
inc
test
sarl
out
mov
mov
jns
mov
dec
jns
ret
fst
mov
jmp
loope
fsubrs
stos
fs
xor
data16
out
mov
cmp
sarl
aad
mov
mov
out
mov
lods
dec
repz
dec
jno
inc
mov
or
sub
push
xchg
mov
or
fistpll
push
rol
mov
pop
jae
es
cmpsb
xor
add
scas
fistpll
lods
fistpll
dec
xchg
xchg
mov
push
or
adcl
xchg
mov
addb
and
ss
add
call
dec
addb
and
add
adc
ret
jl
fbld
mov
mov
pushf
pop
mov
divl
dec
ljmp
addb
andl
rcrl
dec
jl
enter
sbb
roll
inc
divl
dec
ljmp
addb
sub
sub
mov
cmpsl
lods
fistpll
divl
dec
ljmp
addb
sub
xor
mov
pop
jg
jp
cmpsl
test
jns
mov
mov
ss
mov
fbld
mov
mov
pushf
or
jbe
dec
and
fildll
cmpsl
lods
popa
cwtl
out
dec
mov
mov
mov
mov
pusha
scas
test
ficoms
mov
test
inc
pop
inc
movsb
jb
aad
and
add
xchg
out
mov
fildll
iret
xor
cmc
pusha
mov
mov
inc
xorl
add
jle
mov
sbb
sub
fldcw
inc
cmp
jg
dec
xor
orb
mov
lods
dec
xchg
movsl
lods
fistpll
mov
fistpll
and
inc
ss
mov
aam
xorb
scas
js
mov
dec
xchg
pushf
jo
mov
jns
stos
jmp
adc
scas
or
shrl
shll
jb
inc
flds
sbb
les
out
std
lret
cmp
dec
mov
fwait
or
sub
aaa
leave
in
loop
dec
loop
mov
lods
xor
sub
cmpsl
lods
fistpll
lods
fistpll
lods
fistpll
lods
fucomip
mov
lods
ljmp
lods
fistpll
insl
fistpll
lods
fistpll
mov
mov
cmpsl
lods
fistpll
lods
fistpll
lods
fucomip
inc
cwtl
rolb
xchg
hlt
test
adc
mov
shrl
rcll
ja
xor
xchg
pop
mov
xchg
adc
lea
jecxz
jo
scas
imull
xor
ljmp
sub
fsubp
lret
cmp
cld
setns
leave
sbbb
repnz
out
lahf
iret
dec
loop
lahf
xchg
mov
cmpsl
xlat
mov
std
xchg
jmp
insb
stos
inc
mov
mov
mov
and
adc
movsl
xchg
push
rcl
or
dec
pop
sbb
pusha
data16
and
data16
xor
loop
out
movb
in
hlt
movsb
fdivs
repnz
pop
fcmovnb
mov
mov
mov
mov
jge
pop
add
in
dec
fwait
test
mov
inc
add
sbb
mov
movsb
cmp
addl
add
add
or
add
sbb
cli
or
inc
cli
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cli
or
cld
stc
or
mov
or
fsqrt
or
mov
cli
or
int3
cli
or
jmp
add
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
icebp
cli
or
add
add
pop
sti
or
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
or
add
cld
add
or
xchg
add
jne
adc
mov
les
and
and
and
inc
jl
push
and
addb
push
and
adc
mov
xor
mov
or
lods
mov
leave
mov
jmp
adc
or
push
je
add
xor
add
ret
xor
sub
int3
and
rolb
inc
aam
mov
adc
add
pop
push
dec
bound
add
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
sbb
test
andl
js
shlb
shlb
and
pop
add
pop
in
jb
cmp
sbb
add
inc
xchg
fmul
fsub
add
jb
cmp
cld
add
and
add
call
in
adc
or
add
call
or
inc
and
faddl
je
push
movzwl
add
jmp
sub
cltd
xor
or
js
and
xchg
pop
and
and
sbb
push
push
mov
adc
add
push
leave
call
add
test
jne
add
mov
mov
xchg
or
sbb
ret
rorb
mov
sbb
push
inc
inc
cmp
jne
add
iret
adc
push
pop
nop
add
mov
hlt
pop
je
jbe
or
call
test
dec
dec
mov
push
mov
push
or
addb
bound
inc
pusha
ret
add
jg
jle
gs
pop
push
adc
mov
nop
push
push
orb
out
pop
bound
cmp
loopne
mov
scas
cmp
inc
mov
push
or
push
jne
addl
frstor
sbb
sbb
jmp
xchg
add
add
or
cmp
jl
icebp
clc
jg
add
pop
pop
add
mov
jns
add
mov
mov
jb
inc
into
add
add
call
ja
add
jne
in
or
cwtl
or
stos
cmpl
and
cmpsb
gs
jmp
add
divb
add
into
fldl
clc
aaa
xor
iret
pop
sub
add
sub
aas
sub
add
jl
cmp
adc
rolb
sarl
test
add
or
or
pop
cmp
cltd
inc
sbb
pop
xchg
nop
pause
mov
in
lock
jge
pop
mov
cmp
out
adc
add
or
push
add
and
sbb
cmp
testl
and
sarl
sbb
addb
mov
shlb
pop
clc
stos
fs
call
fmull
add
push
pop
push
push
push
pop
jne
jns
lret
and
cmp
ja
movsl
add
movsb
insb
lahf
in
rorb
adc
movl
adcb
call
add
mov
rorb
push
xchg
repz
nop
out
ja
inc
and
movb
ds
xor
push
push
xchg
jbe
add
cmpsb
jne
push
jae
add
sub
jo
cltd
dec
adc
cmp
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
add
add
xor
sbb
clc
call
or
pop
inc
adc
sub
fs
push
test
shrl
cmpsb
jmp
adc
mov
mov
xchg
imul
je
sub
mov
and
xchg
sahf
jmp
inc
add
pop
leave
lock
sub
cmovno
add
mov
or
out
fdivrp
lea
std
pop
sub
inc
inc
dec
pop
inc
loop
adc
add
inc
sarb
incl
aas
push
xchg
add
cmc
add
xor
pusha
movq
sub
jl
xlat
push
push
call
and
push
std
add
dec
jbe
nop
mov
fnstsw
rclb
and
adc
cmpsl
add
pop
movsl
and
add
call
insb
aaa
add
jp
pop
mov
clc
je
add
cmpsl
xchg
add
bound
dec
pop
adcb
test
inc
mov
movsb
loopne
xchg
fimull
pop
test
es
mov
das
mov
push
xor
test
es
inc
jne
test
mov
popf
out
dec
mov
or
push
or
mov
push
add
pushw
cmp
sub
sbb
mov
cmp
push
fdivs
add
cmpl
outsl
sub
imul
or
inc
movups
push
adcb
cwtl
sbb
jecxz
xor
add
push
es
sti
add
jae
ror
push
add
mov
repz
mov
mov
and
mov
push
ret
mov
cmp
inc
je
add
push
adc
out
pop
adc
add
mov
in
pushf
cmp
dec
fs
pushl
int3
andb
xor
leave
cmpb
roll
adc
ja
cmp
shlb
mov
push
cmp
add
orb
cmp
shl
hlt
add
push
rolb
daa
add
jl
movb
sub
pop
cmp
push
test
mov
ret
jmp
in
mov
les
dec
ds
add
xor
rclb
sbb
or
daa
push
xchg
push
call
mov
imul
rcl
lea
cmp
and
add
pushf
mov
pop
jo
pop
jl
scas
pop
cmpsb
orb
jmp
out
sub
jbe
in
push
pop
push
in
pop
cmp
loopne
cmp
inc
movsl
adc
add
cmp
jo
add
test
jns
cmp
stc
add
movsl
das
jne
add
jmp
xchg
pop
mov
sub
push
pusha
mov
scas
sub
pusha
dec
movsb
popf
adc
dec
add
roll
pop
add
or
movhps
test
cmp
cmpsb
adc
and
cmp
mov
les
clc
add
add
jl
add
push
cwtl
test
mov
sub
jl
adc
leave
and
mov
orb
incl
rolb
loop
cld
popa
in
test
add
adc
outsb
or
add
xor
push
sub
xchg
hlt
ret
and
sub
push
dec
fs
xor
and
or
add
dec
sub
add
push
sub
scas
bswap
xor
testl
divb
sahf
loopne
inc
andb
sarb
push
and
add
add
ret
push
fs
gs
mov
icebp
test
or
in
fadds
and
sbb
repz
inc
or
add
andl
xchg
lret
mov
and
mov
pop
dec
xchg
pop
fsub
shlb
sub
push
shl
jg
leave
fsub
ds
mov
dec
adc
add
push
xchg
in
ja
addb
pandn
add
adc
sub
in
cwtl
and
inc
xor
mov
imul
push
lcall
mov
or
clc
add
cmp
xor
add
mov
addb
mov
add
xchg
nop
add
mov
out
test
shlb
dec
lret
orb
imul
add
xchg
jmp
lcall
mov
pop
out
stc
cvttps2pi
or
dec
or
adcl
fbld
xor
add
fnstcw
add
or
add
mov
sub
adc
dec
enter
adc
pop
add
sbb
enter
lcall
lea
cld
adc
pop
or
xchg
cmp
sbb
es
sub
add
and
add
repz
je
and
aas
mov
xlat
xor
adc
and
dec
pop
xchg
aaa
insl
sub
outsl
incb
dec
sbb
addl
pop
fs
adc
xchg
pop
mov
add
fldl
icebp
call
cmpsb
add
jnp
mov
jne
add
and
mov
cmp
dec
stos
pop
dec
push
xor
addb
clc
add
dec
push
aaa
pop
bound
push
addb
jne
or
pop
ljmp
push
dec
mov
or
je
jo
ja
jg
test
sub
icebp
insb
or
jnp
or
mov
jg
jge
pop
arpl
je
push
jle
jmp
fcoml
or
push
add
inc
xor
pop
sub
mov
add
cmp
fldt
les
or
test
mov
mov
add
mov
pop
or
xor
and
dec
mov
fdivrl
bound
cmp
or
roll
add
or
bnd
dec
cmp
jecxz
push
add
pop
pop
aam
add
mov
insb
pop
mov
add
mov
mov
or
or
add
push
jo
dec
add
dec
xor
lock
pop
out
inc
fsincos
inc
pop
rolb
subl
int
dec
jge
je
jns
sub
ret
add
shlb
dec
sahf
jmp
add
hlt
lock
xchg
lahf
jno
or
or
or
adcl
cs
mov
lock
add
and
inc
sbb
daa
xor
jns
adc
loope
or
sub
inc
mov
cmp
add
xchg
and
mov
xchg
inc
push
cmpsl
pusha
adc
and
and
pushf
andl
add
cmp
inc
sub
jmp
add
jge
jb
pop
jmp
cltd
test
adc
jne
push
cmp
ret
pop
fs
inc
adc
sbb
jns
or
ret
mov
or
push
add
pop
je
mov
mov
add
sub
loopne
dec
push
int3
aas
enter
dec
sub
ret
pop
sbb
data16
xchg
push
imul
cmp
mov
or
push
addb
loop
add
xchg
movsl
scas
add
add
je
sbb
add
and
add
aaa
orl
test
mov
out
js
mov
clc
rcrl
jbe
add
or
icebp
adc
push
bound
roll
mov
and
cmpsb
fsubrs
js
addb
adcb
out
add
dec
mov
ret
add
pop
mov
mov
add
nop
enter
syscall
mov
lahf
fdivrs
jne
cmp
sub
add
add
es
mov
dec
rsqrtps
rcrb
sub
adc
or
testb
add
test
aam
scas
sti
movsb
jl
sbb
pop
pop
incb
mov
xor
or
or
and
jae
add
adc
sbb
jb
ret
push
sbb
sub
sbb
add
sub
sbb
jmp
test
mov
xchg
js
ret
jg
in
pop
cmp
add
lods
cmpl
add
jmp
dec
sahf
movsb
xchg
push
sub
dec
add
cmp
dec
pop
sub
fcoml
add
mov
xor
adc
or
jmp
dec
jmp
lods
cmpsl
imul
push
bnd
add
cmp
and
movl
cld
jmp
ss
sbb
xchg
xor
mov
ret
in
dec
sbb
psubb
adc
call
jmp
pavgb
mov
jge
jo
and
cmp
add
sbb
xchg
xlat
adc
sub
ret
test
dec
sbb
xchg
mov
mov
test
add
jl
sbb
and
pop
lahf
jne
imul
jge
pop
pop
cmp
lods
push
pusha
adc
rolb
xlat
cltd
xor
adc
cwtl
loopne
lock
or
add
call
dec
adc
add
jns
call
add
or
out
or
cmp
iret
add
into
fcmovnu
lret
fcmovu
add
loopne
jecxz
in
in
pop
or
push
mov
pop
push
shlb
gs
push
inc
push
popl
syscall
jmp
adc
enter
cmc
std
xlat
add
adc
xchg
pop
add
rep
incl
frstor
push
cld
inc
add
add
add
xchg
push
movw
or
nop
les
cld
push
cltd
cwtl
push
jb
decb
loopne
add
jbe
cmpb
jne
or
or
or
add
adc
jmp
add
and
jl
inc
push
add
push
add
test
cmp
pop
in
pusha
jnp
add
pop
rol
jl
add
cmc
add
mov
sbb
clc
mov
xor
cmp
push
leave
adc
sub
and
mov
enter
subb
out
repz
xor
inc
cmp
mov
jl
mov
jnp
shll
loopne
scas
call
enter
addr16
mov
add
imul
data16
mov
inc
jns
mov
add
imul
loope
sbb
add
mov
in
or
or
mov
insb
jl
or
fstps
add
jo
add
push
sub
pop
sbb
cmp
dec
push
sbb
add
cwtl
nop
mov
aaa
add
arpl
inc
adc
adc
add
out
shll
add
dec
xlat
xchg
fiadds
jbe
add
dec
add
mov
push
lds
shr
fwait
loopne
add
daa
repz
loopne
in
out
sbb
es
ret
sbb
dec
in
adc
pop
add
xchg
sbb
adc
push
add
add
loop
push
and
add
out
clc
add
je
mov
cmp
add
xor
dec
add
rorl
mov
push
inc
or
addl
sbb
aam
mov
adc
ret
jbe
jmp
sbb
nop
push
mov
xchg
adc
or
add
or
stos
mov
dec
xchg
stos
pop
inc
and
adc
test
les
test
add
loop
push
xchg
int3
adc
wrmsr
adc
iret
orb
in
pushf
pop
mov
or
icebp
xchg
adc
add
add
out
mov
jae
pop
sub
mov
sbb
xchg
add
pop
sub
jne
jl
add
mov
rorb
and
dec
shlb
adc
xor
xchg
jmp
enter
push
leave
ljmp
mov
push
add
add
mov
cmp
sub
sub
data16
and
cli
popa
pop
pop
hlt
pop
pusha
inc
mov
aas
sub
test
jmp
or
cwtl
addr16
add
clc
mov
add
jb
insb
fcoms
jne
pop
out
int
add
jl
add
mov
and
js
movd
js
add
fidivs
push
add
push
xor
je
ret
shlb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
test
jmp
jo
add
inc
mov
dec
jne
cmp
cmp
dec
add
pop
add
push
inc
xor
out
in
add
push
jbe
xor
es
aas
and
fdivrl
mov
sbb
and
cld
jo
jl
mov
or
loope
rolb
cmp
add
push
sbb
add
jbe
mov
push
insb
and
jne
loop
cmpsl
or
add
sub
cwtl
add
rcrl
add
mov
pop
push
add
dec
clc
jae
ss
push
add
das
push
mov
imul
cs
sub
xor
xor
mov
add
inc
hlt
mov
add
clc
mov
enter
lcall
sub
cmp
lods
push
inc
add
cld
sub
mov
mov
pushl
and
ret
or
add
mov
adcb
sbb
push
inc
add
pop
inc
outsl
jb
insb
popa
cmp
cmpb
jo
push
dec
rolb
add
popa
jae
push
add
imul
mov
add
jo
xor
mov
cs
mov
cmp
add
sbb
je
mov
add
hlt
jbe
xchg
push
add
pop
call
mov
jmp
mov
test
rolb
add
or
leave
dec
sbb
popl
jl
sub
loopne
stc
add
inc
gs
pop
pusha
fiaddl
mov
add
push
cld
push
mov
ror
stos
mov
nop
aas
fimull
gs
pop
hlt
imul
arpl
mov
add
pop
xor
jo
sbb
jmp
cmp
mov
rol
sbb
dec
jae
testb
or
cmp
clc
aaa
dec
jne
cmp
test
fxch
adc
fildl
sbb
ret
dec
add
push
push
cltd
and
sarl
adcb
add
repnz
clc
or
add
ret
pop
add
sub
enter
cld
notl
pusha
adc
cmp
pusha
lods
push
cmp
nop
rclb
or
rolb
into
movsb
cld
pop
add
adc
adc
jmp
lahf
xchg
popa
sub
push
push
push
add
cmpl
in
je
add
imul
and
movsb
or
add
or
pop
inc
lock
push
mov
inc
sub
lods
or
or
sbb
push
pop
and
dec
pop
daa
and
sbb
adc
call
add
pop
lods
mov
out
stos
push
push
call
adc
loope
jbe
push
imul
in
push
cltd
cmp
int3
aam
xchg
push
fistl
push
add
push
push
cmp
mov
rclw
pop
adc
add
push
push
or
mov
pop
cld
push
add
leave
shlb
cmp
popa
sub
or
nop
and
add
inc
add
add
xchg
push
jbe
movsb
add
loope
pop
sub
out
adc
xchg
and
or
mov
jbe
push
add
mov
and
add
inc
idiv
out
cmpsb
sldt
cmpl
cmp
orb
outsb
add
call
push
cmp
adc
test
push
mov
out
mov
dec
mov
into
cli
out
push
je
aaa
jg
add
jbe
pushf
add
ja
imul
ret
mov
loop
inc
out
and
js
mov
mov
sub
cmp
stos
push
push
ljmp
or
xchg
icebp
mov
dec
add
push
xor
fstpt
sbb
mov
sub
das
shll
rcrl
jl
inc
add
decl
mov
insl
mov
cwtl
aad
push
pop
add
inc
shrb
xor
add
lret
mov
jecxz
ss
lods
sbb
adc
or
add
jmp
push
nop
xchg
cmp
je
pop
mov
add
add
and
add
inc
cmp
add
or
dec
mov
or
and
rclb
inc
inc
add
fdivrs
jae
xor
ficoml
imul
inc
call
je
mov
imul
add
dec
fld
jns
push
popa
add
adc
mov
inc
mov
jmp
ja
jne
add
daa
and
xchg
push
loopne
adc
add
mov
roll
push
call
test
vpmadcswd
or
add
inc
ret
idivb
or
add
inc
and
cmp
push
push
push
mov
pop
add
sub
mov
push
inc
xor
xor
jne
and
or
or
pusha
sar
pushf
add
or
xchg
jne
bound
xor
fdivrp
and
push
push
adc
adc
push
lea
and
pop
lret
jecxz
dec
je
les
push
inc
pop
call
loop
addb
dec
das
xor
add
and
das
cmpsl
inc
add
shl
dec
xor
movq
inc
pop
sub
inc
push
sub
mov
adc
dec
jmp
pusha
add
les
orl
dec
add
cmp
adc
sub
add
push
pop
and
cmp
add
wrmsr
das
push
mov
es
sub
enter
leave
cmp
jmp
int
and
sbbl
xlat
aad
in
in
fdiv
push
std
or
fprem
push
daa
add
loopne
jmp
in
or
pop
and
adc
add
add
repz
push
cmc
loop
lods
dec
cmp
clc
popf
cmp
and
std
mov
adc
pusha
popl
add
je
xorb
add
pop
mov
arpl
cli
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
adc
cmp
sahf
or
stos
adc
fistps
ja
in
mov
jmp
add
add
cmp
dec
add
jo
push
or
je
cmp
cld
cmc
cmp
mov
push
scas
xchg
adc
push
add
or
mov
add
push
fstpt
sar
inc
fiadds
push
dec
xchg
sbb
and
add
sahf
mov
mov
add
or
nop
pusha
mov
sti
push
xor
je
push
push
js
inc
and
cmp
jle
inc
sbb
mov
test
shrl
jg
pusha
pop
add
mov
jge
les
movsl
mov
mov
sbb
jecxz
lods
enter
add
or
cmpl
mov
mov
and
sub
inc
rolb
mov
add
mov
je
incl
mov
sbb
cmpl
jne
mov
pop
cld
es
mov
and
xor
testl
inc
je
sbb
lea
mov
push
push
js
daa
and
add
cmpsb
pop
cmp
add
test
add
lods
sub
imul
pop
mov
adc
adcl
add
dec
push
mov
add
inc
pop
pop
incl
addl
jp
push
add
call
test
rdmsr
ljmp
pushl
sbb
and
aaa
xchg
movsb
add
pop
adc
add
sbb
leave
test
addl
add
pusha
ljmp
sbb
sbb
add
sti
and
out
sbb
phaddw
aaa
and
push
adc
mov
loopne
xor
cmp
in
or
and
dec
mov
mov
call
pop
sub
insb
pop
push
pop
mov
mov
inc
or
or
sub
and
mov
pop
pusha
cmp
push
xchg
pop
fistps
pop
inc
fdivrl
lds
push
add
outsl
sub
ret
dec
mov
jb
add
movsb
mov
or
lret
mov
mov
sti
xchg
add
pop
add
mov
jb
je
add
jae
jns
jo
cli
aas
add
jp
sub
addl
sub
scas
lret
add
insl
mov
push
nop
mov
mov
bnd
dec
fisttpl
cmp
sbb
dec
and
jl
lock
push
inc
lret
push
lea
in
add
pusha
inc
add
movl
push
or
pop
pminsw
dec
lret
xor
or
inc
inc
jg
pusha
cmc
inc
jo
mov
pop
daa
es
sbb
dec
cmp
pop
imul
outsb
xchg
dec
add
jle
sub
xchg
mov
pop
loopne
push
adcl
repnz
or
stc
add
jo
clc
xchg
pop
xchg
jle
add
mov
xor
jnp
cmp
clc
add
xchg
or
inc
cwtl
movsl
lock
pusha
outsb
and
or
mov
clc
icebp
ds
flds
or
push
and
addb
jge
sub
mov
sbb
add
push
push
adcl
add
icebp
test
add
xchg
into
mov
fwait
in
push
add
aam
dec
ds
push
test
loope
mov
addb
mov
loop
lock
push
sub
push
or
sbb
pop
icebp
inc
xor
lahf
add
rorb
es
and
add
add
mov
pop
sub
inc
push
in
and
push
xor
bound
and
or
add
xorl
push
jbe
sti
and
cmp
mov
inc
and
nop
push
push
adc
xlat
mull
imull
pop
mov
sbb
pusha
and
add
xor
xchg
add
add
add
lahf
and
je
xor
mov
jmp
add
cmp
in
call
jp
push
sbb
jbe
testb
cmpsb
test
aaa
popa
pusha
add
mov
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
xchg
dec
lock
lods
dec
xor
pop
lea
loopne
mov
or
popl
lret
imul
mov
aaa
push
xor
ja
add
ret
ljmp
pop
and
inc
dec
push
pop
test
pop
out
mov
fwait
sub
ljmp
add
sub
cmp
add
cmp
out
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
in
rorb
dec
cld
nop
cmp
add
inc
js
or
jno
sbb
push
cmp
add
jmp
add
add
lods
push
out
inc
int3
pop
add
mov
pop
sbb
es
jl
cmp
or
add
sarl
push
sbb
hlt
insb
xchg
xchg
ret
mov
add
mov
icebp
out
adc
add
sahf
pop
mov
sub
add
cld
dec
jl
ret
dec
ret
ret
add
cmpsl
iret
data16
stc
add
cmp
setb
push
xchg
cli
jmp
fbld
xor
cld
rolb
adc
jle
cli
aad
adc
repz
sbb
mov
dec
add
jne
or
dec
cli
out
add
popf
inc
mov
mov
xor
add
scas
and
jne
cli
dec
in
es
sbb
loopne
ja
push
xlat
mov
mov
inc
scas
xor
fsubrl
rorb
stos
xor
cmp
jl
mov
add
jmp
test
aam
leave
pop
fildl
adc
enter
repz
add
fimull
push
inc
sub
in
orb
add
loop
mov
call
add
in
sub
mov
jecxz
push
adc
pop
sbb
ret
or
dec
xchg
pop
xor
add
test
pop
adc
add
leave
cltd
or
push
mov
xor
dec
sbb
mov
test
sub
push
sarb
sbbb
mov
lods
adcb
or
jecxz
pop
push
push
dec
add
cltd
and
inc
sbb
and
jg
add
rcll
add
mov
cld
inc
push
mov
add
inc
test
cwtl
scas
cmp
push
mov
add
adc
mov
push
dec
jg
sub
dec
stc
or
jb
movsb
mov
in
cli
add
adc
iret
nop
aad
add
or
pop
pop
or
push
ljmp
adc
mov
in
mov
mov
dec
or
jmp
sahf
add
inc
daa
jmp
js
out
pop
add
sub
in
popa
add
sub
and
pop
xchg
ss
repz
push
add
aad
push
add
mov
pop
lret
add
mov
roll
push
cmp
dec
add
jno
std
cmpsl
push
push
lock
sbbb
add
mov
push
inc
lldt
mov
inc
add
and
test
sbb
xchg
and
mov
test
and
pop
clc
or
test
inc
cmp
inc
adc
dec
sub
mov
jp
imul
xchg
mov
pop
push
xchg
and
adc
jp
xchg
mov
sbb
xchg
popa
pop
pop
cli
or
jecxz
stos
shrb
ds
mov
cltd
mov
push
inc
add
lea
sbb
sti
call
or
add
sarl
stos
jo
lock
ficompl
leave
jbe
adc
addb
cmp
pop
push
cmp
dec
test
cmp
push
orb
in
out
mov
mov
pop
adc
push
nop
dec
xchg
loop
fldenv
cld
jmp
jge
inc
arpl
lea
xchg
pop
ret
inc
xchg
pop
xchg
add
mov
cltd
xlat
add
xor
andb
push
loop
nop
add
mov
pop
adc
aas
mov
sbb
cmp
in
add
dec
add
dec
jne
pop
test
jg
push
out
lahf
inc
pusha
and
iret
subb
mov
movsl
notl
inc
popa
and
xchg
or
pop
pushf
leave
inc
add
dec
mulb
pop
xorb
xor
addb
and
add
test
cli
add
push
add
pushl
add
movl
imul
add
inc
sbb
mov
adc
inc
add
adc
inc
loopne
ret
or
sub
addb
or
sub
inc
in
and
mov
jae
add
jno
leave
fimull
jne
add
sbb
stc
pop
and
lret
fchs
rolb
and
ljmp
mov
stos
pop
inc
das
hlt
dec
add
mov
and
lds
addr16
sub
into
test
push
jnp
and
fadd
xor
sub
cmp
stos
ja
cli
push
bound
push
xor
test
xor
push
sbb
mov
or
or
fs
add
push
scas
aaa
arpl
or
jno
add
mov
sub
fiadds
adc
or
add
lahf
call
cmpl
jb
subl
jne
jmp
add
pop
mov
add
andb
cmpsb
lock
movsb
dec
icebp
cmp
cmpw
subb
jne
add
mov
or
inc
jmp
call
dec
mov
add
pop
pop
lahf
pusha
cmp
lret
in
cmp
push
add
inc
or
ret
cltd
jo
cmp
mov
jle
daa
add
xchg
xor
pop
popl
call
fiaddl
cmp
sub
ret
xor
or
sub
sbb
fdiv
xor
lock
adcl
pop
pop
push
cs
lock
and
sub
das
sub
pushf
rcr
add
push
cmp
adc
dec
pop
add
pop
scas
inc
shrb
push
mov
mov
test
nop
jno
add
loop
repnz
dec
jmp
add
or
iret
call
add
rclb
push
fst
and
add
sbb
mov
out
clc
add
or
or
adc
jmp
sbb
aam
inc
push
daa
push
mov
push
add
push
imul
cwtl
inc
pushf
scas
and
inc
pop
push
std
add
popa
cmp
cld
out
adc
or
and
fadds
ffree
dec
daa
xor
add
stos
ljmp
inc
add
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
jmp
dec
sub
daa
xchg
test
inc
popa
adc
push
pop
xchg
aam
imul
cmpsb
popf
clc
xchg
inc
add
inc
arpl
dec
ret
inc
add
aad
gs
rorb
mov
add
xor
shld
sub
pop
ret
les
jns
mov
sbb
add
lret
sahf
jo
inc
jge
add
jo
fiadds
and
add
loop
imul
pop
push
out
into
xchg
fldenv
fsubs
dec
add
icebp
xor
mov
cli
cmpsl
pop
pop
dec
repnz
push
sbb
cmp
or
mov
dec
call
jp
dec
fbstp
or
push
lock
imul
sub
aas
cmc
popa
add
call
add
xor
cld
xor
pop
add
insl
call
mov
cmp
xlat
cmpsb
push
shlb
nop
lcall
mov
jnp
dec
sbb
cmc
sub
cmp
xlat
add
add
dec
lock
mov
pop
loopne
push
pop
in
push
nopl
or
mov
std
dec
fcoms
dec
imul
rolb
pop
arpl
popf
xor
rcrl
push
cs
add
arpl
add
insl
push
enter
mov
or
dec
add
xor
cmpsl
add
xor
mov
es
sub
scas
jge
push
mov
pop
add
push
pusha
andl
cs
or
aaa
add
and
sbb
aam
dec
psubusb
push
shll
clc
pusha
add
add
out
add
and
incl
loope
movsl
inc
icebp
or
add
pop
pop
gs
dec
clc
inc
paddusw
push
or
lret
add
lret
inc
pop
insb
xor
cmp
add
test
clc
rorb
hlt
dec
pop
xor
cmpsb
dec
add
push
push
mov
lret
inc
int3
mov
clc
pop
jl
and
xchg
add
ficompl
sub
in
add
stc
adc
cmpl
push
imul
sub
add
mov
lods
or
cmp
lods
or
or
hlt
add
sbb
or
int
adc
sbb
pop
pop
cmpsb
and
test
pop
mov
addl
mov
loopne
push
hlt
test
add
mov
loope
sbb
popa
or
hlt
inc
push
lahf
add
je
pop
cwtl
insb
test
insl
sarl
mov
call
leave
cmp
cmp
into
orl
add
jne
add
out
call
add
mov
xlat
push
mov
cld
add
pop
orb
sub
or
push
fs
mov
cmp
int3
jnp
add
inc
cmp
popl
push
add
xor
dec
xor
mov
loope
je
cmp
ret
test
mov
loop
add
iret
aam
cmp
add
inc
jo
add
dec
movb
inc
inc
dec
lods
inc
and
cmpsl
aaa
or
add
test
and
push
pop
call
add
sub
fs
cmpsb
mov
jb
xor
ucomiss
in
shl
inc
xorb
outsb
addr16
popa
out
jno
rcl
insl
cmc
inc
inc
adc
add
cmpsl
nop
jge
jecxz
push
add
jmp
movb
pusha
out
add
icebp
loopne
das
sbb
add
lret
push
adc
jno
add
aam
and
enter
push
and
call
push
shlb
outsl
or
dec
sub
xchg
movsl
add
pop
sbb
dec
jmp
imul
push
xchg
out
movsb
int
and
inc
add
repz
add
sub
sbb
les
mov
and
scas
mov
or
jae
out
into
add
insl
dec
add
push
and
jne
sub
add
adc
pusha
or
mov
push
dec
scas
push
jne
mov
popa
in
std
push
sti
rolb
imul
es
inc
cmp
and
dec
loopne
add
data16
adc
gs
fisubs
lahf
jmp
mov
movsl
and
mov
inc
cli
mov
cmp
fmuls
hlt
cmp
je
push
dec
shll
cwtl
lods
add
sub
add
test
mov
cmp
lahf
in
inc
mov
mov
push
add
iret
movsb
pop
enter
lods
cmc
addl
rorl
cmp
cltd
add
mov
dec
push
add
push
cld
inc
repnz
add
sub
add
aas
cltd
sbb
fisubl
cld
add
je
les
add
add
inc
movb
inc
or
js
pop
add
in
clc
icebp
or
mov
stos
sub
iret
dec
pop
xor
jle
add
fdivrl
push
ljmp
pop
push
cmp
mov
xor
das
mov
ficoml
add
lea
rolb
add
lock
clc
or
mov
repz
mov
nop
aad
imul
in
stos
pop
add
xchg
xor
pop
dec
xor
imul
lock
pop
mov
in
pop
orb
mov
inc
dec
mov
add
push
adc
test
cmp
or
and
cs
mov
dec
cmpb
add
movl
add
daa
push
sbb
adc
adc
pminsw
cwtl
or
in
pop
push
and
xchg
or
mov
xchg
lods
mov
adc
pop
push
cwtl
push
inc
lock
lods
fcmove
add
cmp
mov
jle
mov
scas
into
sbb
sti
mov
call
leave
and
jae
xchg
xchg
or
cmp
push
mov
inc
inc
popa
lea
or
sbb
jnp
add
mov
dec
add
sbb
or
and
subl
sub
dec
cmp
sub
shll
addps
push
rcrb
push
orl
cmp
pop
add
dec
jle
adc
add
jne
push
cli
mov
imul
and
les
jmp
and
add
fldt
lea
adc
aam
cmp
lret
int3
add
sbb
jno
and
fmuls
add
bound
sbb
mov
nop
sbb
adc
scas
or
pop
dec
pusha
sbb
ret
push
push
pushl
push
add
sbb
pop
push
push
and
scas
popa
idivl
add
loop
sahf
and
pop
add
push
addb
add
ja
push
test
mov
pop
loope
and
pop
fisttps
movsb
sub
shlb
in
push
jbe
add
aas
pop
add
cmpl
sbb
jae
mov
push
int3
test
add
inc
xor
ret
movsb
xor
or
inc
mov
sbb
add
inc
shlb
push
add
or
mov
movb
incl
stc
stos
sbbw
nop
add
inc
dec
fiaddl
aad
push
mov
out
pusha
dec
dec
out
inc
cld
add
popf
icebp
pop
cli
adc
dec
shlb
int3
dec
pop
adc
sub
add
add
jl
mov
add
inc
cmp
je
pop
or
jp
out
jmp
dec
sub
add
into
leave
push
jne
add
dec
push
test
pop
jae
ret
xorb
in
adc
add
jne
icebp
or
mov
dec
imul
lock
jae
mov
or
mov
push
jl
add
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
pop
pop
jmp
add
add
and
push
daa
or
jne
push
lahf
push
vaddps
sub
dec
mov
bswap
ja
inc
pop
jno
orb
cmp
inc
jle
inc
jmp
mov
cmpsl
mov
inc
dec
mov
pop
aad
add
int3
pusha
incl
ret
jae
sbb
leave
and
and
in
sub
add
mov
ljmp
dec
sbb
mov
lret
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
push
jg
sub
in
rolb
js
adc
mov
pop
mov
subl
add
pop
jle
jnp
cmp
movb
push
negl
inc
outsl
add
mov
mov
or
or
adc
add
cmp
inc
sub
inc
fiadds
lret
adc
sbb
ljmp
ret
shll
push
mov
je
scas
repnz
cvtps2pi
add
fs
push
sub
mov
add
pop
add
call
adc
in
jb
cmp
pop
or
add
sbb
call
add
cmpb
fs
mov
lahf
adc
nopl
test
dec
jmp
or
clc
jl
jmp
push
mov
add
cmp
sbb
mov
dec
nop
jle
pop
das
mov
push
add
aas
aam
sub
jl
cmpsb
dec
inc
das
sub
daa
jns
pop
inc
sub
sbb
add
mov
dec
mov
or
inc
adc
test
sub
imul
add
lods
add
dec
pop
sbb
and
pop
jp
add
shlb
aam
xor
movsl
push
add
fsubs
orb
mov
mov
or
call
outsb
or
jnp
pop
add
adc
js
cld
jne
or
cmp
mov
out
adc
push
jbe
lret
mov
in
mov
push
or
call
lds
pushl
mov
mov
cmp
fs
sub
pop
xor
jno
adc
or
or
cmpsb
pusha
dec
cwtl
insl
jl
jp
orb
lret
fs
xor
cmp
sbb
pop
jecxz
cmp
and
cmp
enter
jb
cmp
sbb
add
xchg
mov
mov
lods
cmp
mov
enter
nop
jb
cmp
and
js
je
jo
insb
dec
cmp
and
pop
add
push
jb
pop
cmp
inc
mov
or
adc
and
add
sbbl
push
and
enter
inc
jb
cmp
sbb
xor
xor
sub
add
enter
jb
sbb
mov
rolb
shl
or
cmp
ret
sub
adc
clc
adcb
lahf
add
push
out
js
xlat
xor
dec
pop
xor
sub
mov
enter
xor
call
add
in
arpl
and
lock
or
sbb
xchg
mov
cmc
mov
clc
cmp
xor
and
and
add
icebp
mov
jb
cmp
sbb
sub
add
out
out
call
jmp
mov
jmp
pop
xchg
daa
add
in
jb
cmp
xor
inc
shlb
shll
call
enter
jb
or
ficompl
sub
add
fstl
rolb
sarl
sbb
add
les
lds
in
jb
or
sbb
and
mov
xchg
into
leave
iret
and
cmp
add
mov
mov
mov
mov
mov
and
mov
cmp
mov
and
cmp
orl
xchg
test
shrl
stc
loopne,pn
dec
ds
cld
add
repz
xor
or
cs
adc
mov
hlt
xchg
add
add
or
arpl
dec
jo
scas
mov
cmp
pop
pop
orl
call
dec
inc
pushf
cmp
add
loope
adc
pusha
test
bound
loopne
or
dec
jne
je
data16
insl
outsl
jb
cmp
pop
shrb
inc
jo
jmp
or
outsb
mov
sub
push
hlt
test
orb
lock
pop
fcomps
sbb
pop
popf
and
or
push
adc
adc
push
sub
or
dec
andb
out
cmp
inc
imul
mov
sbb
sub
xchg
rclb
adc
gs
negb
adc
add
dec
jbe
add
insb
outsl
ja
je
mov
fs
add
push
mov
sbb
or
xchg
pop
sub
imul
and
fsubrp
in
xchg
mov
and
xorb
nop
mov
and
sbb
popa
out
inc
cld
push
nop
das
push
push
sub
pop
mov
inc
inc
pop
mov
push
inc
outsl
jmp
fst
add
ror
movl
scas
fs
inc
call
or
outsl
mov
push
lods
cmp
sub
inc
pop
arpl
push
mov
insb
or
mov
push
imul
dec
inc
fldl
push
inc
lea
push
lock
or
arpl
andl
adc
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
scas
pop
add
rclb
or
cmp
addb
dec
outsl
lea
aad
pusha
in
aam
jns
aas
add
jge
and
mov
xchg
pusha
rorb
xchg
push
lods
mulps
push
andl
stc
xchg
scas
movlps
popa
rorb
movsb
cmp
jo
lcall
dec
push
and
pop
mov
pop
pop
add
add
adc
jge
cmp
or
add
adc
js
das
add
push
mov
call
dec
add
xchg
lods
dec
imul
pop
inc
and
insl
sub
cmpsl
sub
iret
das
mov
jno
cmc
cmp
mov
pop
sub
mov
add
fiadds
jo
mov
iret
jmp
sarl
aam
scas
add
jge
mov
cmp
dec
add
call
sub
jns
mov
daa
jne
stc
pushf
dec
cmp
add
addl
outsb
xchg
int3
or
fwait
imul
sarb
rsqrtps
jle
add
cmpsb
je
add
mov
mov
movsl
cli
jl
std
lea
mov
add
add
mov
push
mov
sub
or
movsb
int3
jbe
add
fadds
mov
inc
ds
arpl
mov
add
mov
sub
rclb
lock
mov
xorb
pop
loopne
pop
jmp
jbe
hlt
add
jge
mov
call
dec
xchg
sub
xor
insb
add
sub
push
inc
cmc
sahf
jae
push
addr16
xor
outsl
cltd
sbb
and
jno
add
mov
add
mov
push
dec
notb
sub
and
add
sahf
cmp
and
add
dec
in
hlt
ja
add
xor
bound
lock
leave
mov
xchg
or
daa
push
add
je
push
cmp
add
mov
sub
lret
push
aas
inc
jmp
add
out
aam
lock
stos
cmp
in
mov
sub
dec
add
hlt
imul
popf
sarl
cmp
pusha
or
pushf
test
shlb
xor
inc
bound
or
dec
push
jge
push
aaa
stos
xor
pop
pop
add
dec
leave
dec
jae
add
add
mov
push
aam
mov
mov
xor
data16
inc
stos
imulb
dec
and
enter
mov
je
push
cmpl
fwait
pop
and
dec
pop
test
mov
into
addb
fadds
unpcklps
push
test
sbb
push
out
mov
mov
pop
jg
mov
add
jmp
mov
sbbb
testl
rcrb
add
jne
dec
popf
loope
jg
idivb
add
and
mov
mov
cwtl
add
es
mov
add
in
push
pop
add
loope
xor
sbb
por
mov
mov
pop
cmp
and
sbb
and
push
lahf
popa
call
or
hlt
and
dec
cld
cmpl
mov
imull
mov
or
mov
sbb
fildl
push
cmp
outsb
out
test
shl
xor
or
test
xor
nop
sbb
mov
xor
inc
in
sti
clc
nop
add
lods
xchg
xchg
loop
add
subl
adc
push
enter
mov
sbb
lret
inc
add
psubsw
roll
sbb
inc
call
aaa
and
std
and
outsl
das
out
cmp
cmp
dec
fisubs
aas
push
pop
push
lret
cmp
repz
fwait
lret
aas
inc
inc
andb
pop
scas
push
push
add
lret
dec
das
add
jp
add
inc
sub
sub
fstps
pop
loope
stos
out
xor
xor
jmp
ficoml
mov
pop
mov
add
cmp
xorb
xor
inc
shr
mov
inc
clc
test
add
cli
daa
pop
inc
ljmp
mov
xchg
jl
mov
inc
enter
lods
and
nop
xor
jp
xchg
shlb
add
or
dec
push
inc
mov
pmuludq
dec
sub
je
add
loopne
icebp
add
push
lea
add
sbb
inc
add
flds
pop
orb
in
lea
adc
add
stos
dec
and
int
sub
adc
sub
inc
shlb
sbb
inc
or
adc
into
mov
insb
in
add
jge
repnz
push
pop
jbe
add
rorl
add
test
popf
aas
dec
add
mov
jp
add
ret
testl
icebp
das
shlb
inc
and
divl
add
cmpsl
fsubrs
lea
daa
repz
and
pop
sub
adc
rclb
movsl
xchg
pop
jge
push
inc
in
push
hlt
or
jno
add
cmp
inc
mov
inc
je
and
loopne
aas
sub
add
jmp
xor
mov
xor
cmp
xor
lods
call
mov
cmp
or
xor
aas
and
fists
mov
add
sub
xchg
fcoml
shll
mov
pop
mov
add
jae
push
fistpl
cmpb
lcall
dec
shl
in
xchg
lret
or
jg
mov
push
mov
call
addb
das
cmp
je
or
xor
jb
add
ja
imul
xor
cmp
je
adc
sub
add
push
sbb
sbb
sar
adc
push
adc
xchg
push
je
dec
fsubrl
sarl
jae
enter
jne
add
push
loopne
in
mov
and
popf
addb
jbe
cmpsb
pop
adc
in
xchg
pop
add
xor
xor
and
jno
int3
inc
xor
add
call
loopne
pop
dec
fdivrl
sub
stos
xchg
add
sub
pop
data16
adc
incb
dec
pop
push
popa
cmp
je
jg
cmp
sub
pop
add
jne
mov
testl
je
dec
sbb
orl
pop
stc
call
mov
sub
push
add
mov
lea
lods
add
add
and
add
and
sbbb
dec
push
push
push
sbb
dec
mov
fisttpll
jb
lea
mov
push
mov
dec
jbe
cmp
js
add
xorb
add
movl
repnz
cmp
mulb
jns
pop
fadds
call
inc
lahf
scas
add
pop
jne
ds
add
sarb
add
mov
mov
pop
and
lahf
mov
cmp
jmp
xchg
js
out
inc
sub
leave
and
mov
dec
sbb
lods
mov
mov
shl
fildll
sbb
lock
sbb
push
inc
jb
or
xor
divb
mov
dec
loopne
loope
test
pusha
push
sub
xor
jecxz
sub
jo
lret
mov
inc
push
add
loopne
or
lds
orb
dec
sbb
add
jg
push
sbb
add
inc
repz
ljmp
adc
jg
cwtl
pop
add
cmp
jbe
dec
mov
jne
mov
push
add
sbb
sub
subb
add
push
push
pusha
repnz
iret
call
dec
dec
shll
ret
push
add
mov
mov
and
or
mov
sub
arpl
daa
popa
stc
xchg
pusha
sbb
or
into
call
or
add
add
in
xor
cld
xchg
push
or
push
dec
sub
movsb
mov
add
loopne
lock
dec
add
add
scas
rcll
sub
add
and
sbb
in
jne
add
loopne
lea
cwtl
inc
jnp
or
inc
add
rolb
clc
xor
das
add
pop
inc
xor
add
test
pop
jge
sub
push
adc
arpl
mov
push
sbb
jns
setb
inc
cmp
xor
and
mov
add
out
ret
push
xor
inc
add
pop
in
inc
add
jg
add
movsl
outsl
leave
popa
push
pop
cmc
add
mov
sub
cmp
add
add
or
push
popf
int
dec
pop
adcb
push
or
add
pusha
mov
call
fcoms
jl
movb
outsb
jnp
sbb
jae
or
cmp
inc
orl
mov
faddl
in
mov
rolb
sahf
dec
pusha
pop
sbb
ret
roll
xor
or
mov
fdivs
rorb
push
fwait
cmpsl
add
das
inc
pop
xor
lret
sub
movsb
dec
jo
fisttpll
hlt
es
cltd
jp
cmpsw
pop
jns
add
iret
cmc
adc
or
adc
daa
add
and
addr16
jp
inc
hlt
rclb
add
clc
pop
sahf
xchg
and
mov
addb
xor
cltd
add
or
mov
mov
cmpsl
mov
adc
xchg
inc
sbb
cltd
or
iret
daa
cld
sub
push
add
icebp
imull
pop
xchg
or
test
enter
and
mov
adc
mov
mov
pop
xchg
sbb
fidivs
add
icebp
add
je
xor
add
sub
clc
test
insb
cli
add
dec
in
cmp
dec
pop
add
cmp
add
xchg
loopne
lea
out
xor
lds
popf
mov
jb
add
jle
es
popa
add
or
sti
add
sbb
clc
cmp
sbb
pop
adc
jle
jae
andb
ds
jle
xor
in
mov
cltd
mov
icebp
insl
lds
rorl
sub
pop
inc
fwait
mov
add
jl
or
leave
jne
loope
add
adc
je
mov
pusha
xchg
fcoms
jl
and
sarl
imul
cli
hlt
add
add
dec
repnz
mov
and
push
incb
and
test
jg
pop
lret
adc
push
aad
or
add
jmp
cmc
add
xchg
lock
test
mov
push
add
jl
jg
xchg
imul
adc
xchg
add
lods
mov
xchg
cltd
sbb
add
or
out
dec
js
cmp
hlt
add
ds
sub
aaa
jns
jnp
add
sub
loopne
add
repnz
mov
push
pop
pop
adc
push
cltd
mov
cmpsb
add
je
pushf
dec
push
pop
dec
mov
pop
in
mov
cmp
jb
insb
or
jmp
fisttps
loope
cltd
cmp
insb
add
es
hlt
mov
and
inc
les
adc
pop
xor
push
or
push
shlb
mov
mov
sub
cmp
test
cld
mov
out
pop
inc
dec
add
cmp
add
cmp
lds
sub
and
pop
fstl
lret
dec
ss
push
push
inc
pop
repnz
add
adc
das
inc
push
repz
add
mov
and
push
ss
and
add
mov
cltd
scas
jo
inc
sar
add
fidivrl
repnz
mov
xchg
add
push
mov
lret
xchg
pop
mov
cmpsb
mov
add
push
sub
lods
and
jns
push
adc
imul
add
call
add
cwtl
idiv
xor
in
mov
add
mov
in
and
loopne
add
je
xor
inc
pop
lock
xor
rclb
and
add
mov
jmp
add
mov
inc
add
cmp
je
mov
nop
cmp
mov
mov
hlt
js
push
sub
add
jne
fists
lahf
inc
das
cmp
sbbb
dec
out
mov
test
bnd
aad
movb
push
je
cmp
jecxz
xor
pop
in
push
test
and
pop
mov
ficoms
mov
popa
clc
outsl
mov
add
rcll
roll
test
push
add
jae
xchg
add
repnz
test
ret
scas
into
icebp
and
add
insl
mov
or
push
add
inc
mov
xchg
and
jecxz
cmp
push
mov
mov
dec
pop
sub
subb
adc
inc
add
and
or
jne
or
orb
or
push
add
aas
add
lods
push
xchg
and
cmp
jne
push
xor
les
add
pop
aas
mov
xor
add
popa
dec
adc
int
rolb
xchg
adc
nop
sbb
ficoml
add
hlt
testb
pop
daa
lahf
icebp
sbb
xorb
jmp
xchg
add
in
push
and
add
insb
sub
push
aam
cmp
pushw
inc
subb
jg
in
and
shrb
or
sub
jp
je
xor
push
and
rcrb
inc
adc
dec
mov
add
arpl
jle
push
scas
add
pushf
jns
les
adc
dec
fadds
sti
in
fsubrl
pop
jns
or
cmpl
jl
or
push
sbb
call
aam
out
sub
adc
add
adcb
test
pop
sub
fs
dec
loop
addb
add
mov
add
add
jae
push
repnz
mov
push
add
cmpsb
dec
pop
pop
add
xor
ljmp
and
mov
jne
lock
dec
ljmp
dec
nop
inc
add
push
cmp
xchg
sub
sbbb
add
scas
cld
sub
or
jae
ljmp
add
idivl
add
pop
sbb
or
add
ss
or
cmc
adc
test
je
xor
test
mov
pop
mov
rcrl
jmp
or
sbb
lods
imul
scas
ja
add
leave
lods
sub
add
mov
mov
iret
xchg
xchg
ds
sbb
dec
add
cmp
and
adc
sub
fcoms
sub
and
dec
mov
mov
out
cmp
sbb
xor
xchg
xchg
pop
sub
test
sub
sbb
pop
addb
out
je
icebp
int
add
cmp
out
imul
fcomip
push
add
scas
and
add
sub
add
and
leave
push
or
pop
jg
mov
loope
jne
jmp
sbb
adc
add
mov
call
add
jg
je
jnp
and
arpl
jne
inc
add
hlt
push
xor
pop
shl
jecxz
pop
or
jge
sahf
jne
dec
mov
mov
ljmp
push
or
inc
xchg
and
jne
enter
jmp
adc
sbb
mov
inc
mov
test
sar
imul
adcb
rcll
pop
call
adc
xor
cmpl
push
push
or
push
mov
pusha
add
shlb
call
jg
aam
xor
jnp
push
adc
sbb
pop
xor
push
in
jns
add
test
add
push
jne
sub
mov
jge
xchg
push
jns
pop
and
push
popa
test
cmp
cmp
inc
pop
xchg
das
mov
jae
out
xchg
add
mov
into
push
jnp
add
jno
or
fwait
cli
jp
dec
inc
inc
movsb
sbb
neg
roll
and
sti
mov
imul
add
shlb
and
sahf
psubsb
pop
out
and
mov
stos
xchg
dec
pop
inc
cld
dec
push
sub
add
push
add
js
xchg
add
ljmp
add
sub
lds
nop
mov
xchg
imul
inc
jne
dec
clc
push
add
cld
std
test
add
and
cwtl
loop
adc
jb
shrb
xorl
mov
cmp
inc
and
pop
daa
pushf
imul
ja
inc
dec
das
push
out
mov
push
or
add
add
fcoml
and
sbb
test
adc
push
pop
lods
mov
por
add
cs
jo
mov
dec
in
mov
jns
add
icebp
sbb
pop
xchg
int
and
adc
jns
mov
sbb
xchg
sarb
in
clc
sti
pop
cwtl
lock
das
fdivrs
add
shlb
pop
pop
in
in
hlt
sub
fistpl
das
sarl
insb
lret
add
mov
pop
add
xor
jmp
pop
mov
add
enter
pop
lock
cmp
xor
add
add
mov
inc
addb
add
sub
jae
xchg
add
nop
mov
add
jle
sbb
add
pop
or
add
sub
fnstenv
movsl
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
jge
push
add
mov
js
add
out
cmp
dec
test
add
sub
inc
or
cltd
add
bound
add
jl
xchg
mov
jnp
test
icebp
or
adc
dec
pop
jl
or
add
sbb
and
sti
jg
fnstenv
clc
cltd
add
sub
pop
ds
add
sub
je
sbb
add
push
or
jbe
les
pop
push
push
sbb
or
push
and
js
clc
push
push
inc
pop
or
jle
filds
ret
xchg
outsb
cwtl
cltd
pop
adc
scas
xor
add
add
add
les
cmp
and
addr16
add
call
mov
mov
mov
enter
dec
lds
mov
sub
stos
pop
pop
jo
xchg
add
mov
dec
or
jecxz
ret
enter
add
mov
lock
adc
mov
add
mov
ja
cmp
pop
cld
cltd
xor
sub
add
add
sarl
add
jg
fdivrs
cmpl
loopne
bound
adc
pop
roll
push
adc
dec
loop
xor
add
lahf
roll
cld
movb
fsub
addl
fcmovb
adc
add
dec
out
add
dec
mov
mov
ret
jnp
shl
leave
sub
pop
shl
fiadds
fbld
dec
leave
add
or
adc
fwait
add
or
add
out
dec
dec
xlat
pusha
movsb
add
mov
add
sbb
inc
fwait
mov
loope
hlt
push
push
imul
xlat
jno
xor
or
dec
or
inc
int3
and
add
pop
ljmp
sbb
cmpsb
pop
jmp
sbb
inc
push
jb
inc
and
add
cs
jge
or
shll
adc
scas
hlt
lods
adc
andb
and
je
hlt
add
pop
mov
adc
sbb
lock
ljmp
adc
cli
andb
pop
jo
add
popf
cmc
push
pusha
jno
pop
dec
adc
push
add
sub
xchg
loop
inc
jecxz
pop
repnz
test
push
aad
sbb
or
cmp
cmp
sbb
jle
and
add
mov
nop
or
loopne
adc
mov
movsl
mov
push
jo
cmpb
cltd
jmp
add
inc
sub
push
enter
xchg
andb
pop
jmp
lea
xor
or
add
test
roll
lahf
fsubl
addb
pop
add
lret
push
fcomps
xchg
popa
add
sub
ja
jbe
jae
add
test
test
add
clc
lahf
adc
inc
xor
jb
les
jae
mov
add
push
and
inc
ret
or
gs
or
add
orb
lock
push
shr
pop
test
dec
testb
and
pusha
incb
jnp,pt
cmpb
je
add
dec
sub
sub
inc
add
mov
sbb
pop
loope
or
mov
add
and
cmp
mov
and
ret
or
je
lret
mov
cmp
push
push
frstor
jge
les
popa
repz
enter
add
dec
push
sbb
test
and
decb
or
lldt
pop
incb
rcrb
sub
or
dec
add
mov
adc
ret
pop
imul
cs
les
push
sbb
call
int3
lret
pop
lea
lds
sti
jl
cwtl
or
cmp
inc
fdivrp
adc
daa
dec
mov
pop
mov
loope
orb
mov
bswap
fdivs
int3
adc
or
add
and
push
aas
xchg
inc
push
jl
jne
dec
xchg
mov
xchg
jnp
test
mov
sub
frstor
xchg
fcoms
sahf
jb
cvtps2pd
add
xor
add
pop
jnp
lods
adc
orb
sbb
aas
loopne
mov
jno
add
mov
sbb
dec
and
add
inc
rcl
fsubrs
data16
add
or
inc
into
adc
nop
add
popf
push
roll
inc
inc
mov
sahf
jnp
das
pop
or
shlb
or
adc
add
mov
cmpsl
popl
push
movsl
xchg
inc
cli
loopne
add
add
lods
outsl
add
insb
nop
jns
push
stos
add
xchg
pop
xor
xchg
movsb
in
stos
xchg
add
mov
adc
fdivrs
push
push
das
rcrb
add
jle
xchg
cmp
add
add
hlt
test
inc
lock
test
add
rclb
jne
add
and
nop
gs
add
jns
add
mov
add
lods
gs
mov
lds
mov
roll
jns
or
mov
jmp
insb
jo
or
pushf
cltd
push
sbb
test
push
dec
jp
cmp
cmpb
sub
or
or
pop
jne
xchg
cmp
popf
and
pop
mov
add
or
daa
add
jp
les
or
xchg
ds
sahf
add
and
inc
jmp
jg
add
scas
js
jp
pop
add
mov
inc
lods
and
pop
loop
movsb
add
sub
aam
mov
or
add
push
clc
outsb
jge
jbe
sbb
std
jb
dec
stc
shrb
test
add
loop
lahf
movsb
frndint
push
mov
mov
add
add
jne
push
add
movsb
test
stos
fs
fidivrs
xor
loope
mov
inc
cwtl
xchg
xor
dec
push
adc
ret
push
add
mov
mov
insb
xor
add
cmp
sti
add
lock
mov
ljmp
rcrl
mov
aas
mov
call
loop
sub
add
pusha
jle
jmp
mov
aad
imul
xor
add
lcall
pop
lds
test
rorb
mov
push
mov
js
jmp
ljmp
and
inc
enter
add
jg
push
rorb
fcompl
xor
or
pop
add
fiaddl
enter
xchg
lock
nop
lods
movlps
addl
mov
aaa
cli
dec
pop
les
fistps
lods
mov
add
adc
mov
add
out
sbb
or
cmp
rcrb
add
imul
add
sbb
daa
jne
push
enter
std
jns
add
pop
and
push
and
sbb
psadbw
adc
pusha
cmp
nop
out
add
push
jmp
or
popf
jns
pop
lds
mov
call
inc
rolb
cs
and
adc
and
pop
adc
mov
lods
adc
call
inc
and
xor
mov
push
popa
into
dec
lock
add
add
mov
cli
fisubrs
add
out
cld
and
dec
inc
cmpsl
add
rorb
xchg
pusha
popa
adc
sbb
mov
xabort
lret
cmp
es
inc
mov
add
test
add
or
sarb
lea
cmp
movsb
xchg
mov
push
xchg
sbbb
add
or
nop
test
das
repz
or
dec
and
add
mov
mov
inc
mov
and
icebp
add
xchg
or
out
inc
jle
push
push
bound
add
and
add
jmp
rcrl
inc
add
jp
pop
in
sub
fmull
add
xlat
adc
lods
nop
mov
jb
fs
mov
outsb
add
mov
and
loop
in
testb
test
jecxz
jmp
addb
and
paddd
cmp
mov
pushf
and
clc
jbe
shrb
add
sbb
test
add
and
arpl
cmpsl
add
xor
fildl
call
jbe
aas
ja
loope
fucomp
je
clc
jne
icebp
push
adc
and
mov
xchg
and
int3
add
add
sbb
add
xlat
push
push
std
mov
mov
jo
add
xchg
mov
mov
push
jns
sub
rcrb
dec
je
or
psubusb
jb
jmp
mov
ja
and
pop
xor
adc
subb
movl
outsl
mov
add
repz
daa
nop
dec
push
add
cld
call
popf
or
xchg
or
jb
pop
roll
and
dec
push
mov
sub
outsb
sbb
add
push
rorb
jge
inc
hlt
clc
xchg
subb
push
loopne
mov
mov
mov
popf
dec
into
mov
fcmovnb
or
xchg
aad
add
pusha
sbb
dec
mov
xchg
fidivs
insl
add
mov
xor
add
shll
sbb
lcall
nop
or
mov
mov
cmp
clc
pop
sbb
add
inc
push
bound
add
daa
jmp
out
fnstenv
aaa
in
inc
sub
push
jmp
push
les
inc
mov
fs
add
jne
add
or
inc
addr16
call
mov
jns
mov
mov
push
fmuls
sbb
mov
rolb
dec
icebp
fisttps
add
sbbl
add
xchg
movsl
or
jmp
add
sbb
push
call
dec
and
es
lock
add
movsl
mov
mov
cmpsb
in
mov
xchg
movsb
insb
data16
hlt
mov
push
dec
in
adc
xchg
xchg
mov
add
push
mov
or
mov
les
sahf
in
adc
and
shlb
push
sub
pusha
add
fsubrl
lea
pusha
imul
cwtl
push
test
loopne
movsb
xchg
repz
test
sub
sbb
and
cmpsb
cmpsl
leave
sbb
arpl
mov
add
mov
std
cmp
jmp
stos
pop
arpl
dec
dec
push
add
rolb
add
or
sbb
sub
and
pop
test
cmp
push
nop
inc
add
pop
xor
sbbl
je
loopne
add
inc
push
cli
bound
imul
into
sub
rolb
inc
mov
fisubrl
mov
xorb
and
les
cmp
or
jb
add
test
mulb
dec
push
std
push
pushf
jg
adc
add
or
add
mov
stos
cmp
add
pushf
inc
mov
cmp
inc
sahf
dec
fnsave
add
mov
cmp
or
push
or
es
add
mov
mov
mov
xor
test
fdivs
int3
inc
fsubrl
pop
mov
pop
hlt
and
adc
dec
cld
cmp
xchg
mov
push
add
dec
xor
nop
add
shlb
jo
test
add
movsb
or
inc
fdivrs
or
fdivl
loopne
lock
cmp
add
xor
sarb
pop
pusha
mov
mov
outsb
add
jmp
mov
dec
pop
cld
add
test
jl
mov
or
or
add
sub
add
dec
pop
or
inc
test
jne
add
xchg
inc
push
cmp
inc
fildl
xorb
ret
cmpsl
popa
add
faddl
pop
dec
in
sub
add
add
pop
test
rorl
xchg
testl
add
pop
fistpll
gs
test
jle
jp
sub
lods
pop
dec
jge
cmp
inc
add
sbb
adcl
add
inc
xor
push
out
mov
mov
dec
pop
daa
mov
shll
sub
push
inc
mov
jmp
jns
add
imul
sbb
xor
pop
lock
add
mov
inc
add
movsl
leave
dec
in
enter
add
jle
xchg
int3
daa
cs
add
and
and
inc
lock
pop
add
mov
fsubrs
mov
pop
inc
xchg
or
or
add
cltd
ror
cmp
add
inc
outsl
push
in
fstpl
bound
sbbb
push
xchg
mov
cmc
ljmp
popf
sub
fs
adc
add
adc
outsb
lock
sti
push
sub
inc
rol
add
sahf
sub
ljmp
add
push
pop
bound
in
js
jge
xchg
jb
test
lds
mov
cltd
stc
aas
cmp
test
outsb
fdivrs
mov
rclb
je
faddl
mov
jl
das
jno
movb
sub
sbb
pusha
mov
inc
add
cmp
imull
push
packsswb
shlb
cli
das
jbe
push
cs
fnstenv
xor
jge
subb
movsl
inc
xor
or
xchg
push
add
pusha
add
mov
movsl
add
je
xor
inc
add
nop
dec
mov
fsubrl
hlt
cwtl
add
call
mov
mov
push
add
std
call
inc
bnd
cmp
adc
pmaxsw
rolb
cld
push
add
sbb
aad
push
or
adc
lea
stos
add
setg
lret
lds
mov
loopne
mov
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
inc
int3
lret
jne
out
loope
repnz
test
or
int3
add
mov
fiaddl
test
push
push
cmc
nop
cwtl
add
and
aas
add
sbb
add
mov
add
add
das
add
movsl
push
lock
inc
daa
inc
adc
jbe
sbb
inc
fwait
mov
sub
jmp
push
fisttps
push
ss
nop
mov
mov
subl
mov
adc
repnz
inc
adc
rorb
xchg
repz
sub
in
xchg
sbb
mov
das
pop
mov
loope
pop
sub
pop
push
cmp
sahf
or
mov
pusha
adc
cmp
xor
cld
or
push
sub
rolb
nop
loope
mov
int3
lahf
test
jle
xchg
add
pop
clc
bound
cltd
in
pop
lock
shll
nop
stos
aam
lret
pushf
rdmsr
sbb
cltd
aas
jne
jbe
out
fcomps
add
bound
hlt
add
mov
jge
push
cld
push
jle
add
cmpsl
inc
push
sub
sub
sbb
fimull
or
adc
pop
xor
aad
cltd
cmp
idivb
sbb
mov
inc
push
insl
cmp
fs
test
pop
push
push
add
scas
repnz
popa
cli
or
push
jo
inc
sbbb
xor
adc
verw
nop
jecxz
push
into
add
adc
add
mov
add
add
mov
mov
add
jmp
mov
stos
and
dec
out
loop
add
inc
lods
and
and
mov
cmp
or
inc
dec
jb
mov
jns
jo
imul
push
push
inc
push
shlb
inc
js
add
mov
mov
in
mov
add
adc
add
sbb
mov
fidivl
mov
mov
fmuls
test
enter
or
cs
dec
aas
pop
nop
mov
mov
dec
orb
cmp
fisubs
or
fs
mov
add
or
es
pusha
subb
mov
aas
push
xor
cmovs
cmp
jecxz
and
enter
repnz
adc
out
sbb
dec
test
repnz
jo
adc
xor
fwait
mov
xor
inc
and
popa
in
mov
add
js
jns
aam
push
add
xor
inc
pop
add
sub
movsb
loopne
fsubl
xor
fdiv
orb
jns
js
shlb
clc
enter
dec
jge
iret
fcmovb
sub
inc
mov
mov
popl
cmp
lods
pop
mov
xlat
movsb
repz
mov
aas
mov
jp
xchg
jge
jge
addr16
mov
xor
call
aad
xor
dec
clc
sbb
push
or
je
movsb
jp
jg
fbstp
insb
setb
push
pop
sub
jbe
push
test
mov
in
dec
daa
cmp
push
and
inc
in
call
rcrb
pop
aas
or
call
adc
fdivrl
pop
push
adc
inc
and
xlat
es
mov
dec
add
stc
mov
pop
pop
mov
add
ret
add
xor
pushf
push
sub
testl
xor
pusha
in
clc
inc
mov
add
lds
mov
shr
lahf
sbb
scas
jmp
mov
and
jne
out
mov
adc
sti
add
je
add
ja
xor
mov
jle
mov
sbb
adc
sti
lods
pop
mov
add
cltd
fstpl
cmp
scas
int3
cs
lcall
lods
or
sbb
pusha
ret
mov
out
add
sub
cwtl
add
push
in
mov
cmp
std
jl
or
leave
xchg
sbb
pop
stos
inc
test
inc
mov
and
push
jmp
clc
stos
mov
pop
je
sbb
loop
or
add
stos
push
xor
dec
clc
mov
pop
cmc
andb
push
push
sarb
mov
sub
mov
xchg
ljmp
inc
sub
add
dec
stos
or
jne
add
jmp
mov
maskmovq
pop
mov
cld
les
stos
xchg
push
mov
test
testl
sti
and
mov
jmp
add
xor
pop
and
addl
adc
add
fwait
dec
in
inc
add
sub
mov
jo
add
dec
mov
div
mov
sbb
inc
mov
dec
je
dec
jne
add
pop
push
xor
jmp
add
sbb
add
inc
rol
sub
add
test
loop
orl
add
or
inc
add
pop
jbe
cli
jae
fisttpll
mov
xor
push
je
push
push
push
leave
and
sub
sub
call
jg
imull
add
fdivrl
rolb
dec
cld
push
inc
pop
ret
and
outsb
inc
add
popf
mov
cmpsb
and
std
aas
sub
jg
push
sub
pop
add
push
data16
sbb
jle
inc
call
sbb
fisubl
fisttps
xor
daa
sub
xor
inc
pop
ret
add
and
mov
mov
jb
add
jbe
sbb
jmp
scas
inc
jns
stos
out
fcoms
jnp
dec
ret
sub
lea
cld
dec
add
sub
inc
pushf
dec
mov
bound
nop
add
lock
add
mov
data16
dec
jp
cmp
push
or
cmp
shll
mov
sbb
jle
sarb
negl
sub
mov
add
xor
pop
push
mov
mov
lock
dec
or
shl
cmp
jne
or
sbb
add
and
add
add
loop
mov
cld
sbb
add
or
nop
add
add
rolb
cmp
movsl
shl
sbb
imul
out
ljmp
mov
add
aas
mov
add
push
clc
push
hlt
push
mov
mov
and
add
daa
xor
movl
ss
clc
inc
cld
mov
add
inc
inc
int
outsl
testl
jge
and
add
mov
xor
mov
push
mov
and
sub
add
testl
pop
in
ret
pusha
pop
sub
add
sub
test
ljmp
sti
movsb
or
adc
pop
inc
xchg
add
adc
outsb
cmpsb
and
ds
add
sub
faddl
sub
arpl
jne
add
add
mov
jl
pop
clc
dec
into
inc
daa
jmp
mov
sbb
sbb
dec
and
dec
mov
test
int
jno
add
out
add
lock
insb
add
or
in
push
xchg
cmp
sbb
add
mov
out
gs
dec
lea
into
add
mov
fisubrs
fmuls
sbb
jne
sbb
inc
sarb
add
in
adc
inc
subb
inc
dec
pop
or
fneni(8087
icebp
pop
xor
outsl
data16
lret
insb
pop
jmp
cmp
sahf
push
dec
rolb
inc
adcl
add
leave
repnz
jne
add
stos
mov
cltd
rcll
mov
stc
das
inc
add
movsl
mov
pusha
mov
imul
dec
add
cmp
add
inc
push
push
popa
sbb
cmpl
add
add
inc
outsb
push
jmp
fldt
sbbb
imul
cmp
clc
das
inc
add
or
sub
cli
flds
pop
loope
dec
mov
inc
dec
cmpsl
sahf
fmuls
fisttpll
sbbl
inc
je
fidivl
push
cmp
clc
add
jne
lea
mov
fwait
mov
mov
cmp
xor
sbb
bound
jmp
rolb
inc
mov
dec
add
lea
add
cmp
cmp
adc
arpl
jb
xor
mov
add
cmp
adc
jmp
add
cmpsb
xor
add
mov
sbb
and
pushf
icebp
inc
and
cmp
roll
mov
mov
add
mov
push
cs
test
enter
je
cld
jns
idivl
imul
add
mov
sahf
cwtl
js
cld
and
pop
mov
orb
cmpsl
add
add
dec
xchg
dec
push
add
js
hlt
fildll
xlat
mov
ret
sbb
xor
mov
dec
fwait
cld
adcl
mulb
or
pop
mov
or
xorb
lret
cmp
roll
cmp
and
push
and
xor
dec
ljmp
adcl
aad
aas
inc
shl
stos
mov
jmp
stc
mov
sti
je
mov
push
add
dec
jge
fisttpll
fnclex
add
mov
or
add
cmp
lds
pop
add
inc
sbb
adc
add
inc
test
cmp
je
lds
filds
test
call
pop
add
push
inc
loope
and
loopne
ret
sub
stc
add
xchg
stc
test
adc
add
loopne
ds
aas
jnp
jmp
add
test
mov
add
add
ret
mov
insl
inc
nop
fadds
cwtl
lret
push
dec
jmp
cmp
orl
xor
push
dec
nop
inc
push
ret
ret
sbb
push
add
mov
or
dec
jnp
add
imul
nop
add
cli
add
loopne
jb
ljmp
pop
daa
jle
loop
ss
add
test
cmp
add
call
aas
jle
je
add
mov
add
stos
call
mov
nop
push
mov
sub
pop
aas
cmp
jo
rorb
nop
adc
push
adc
and
ror
push
jae
xchg
or
or
mov
clc
add
and
loopne
adc
sbb
test
cmp
test
cmp
inc
xor
push
arpl
adc
cmp
xor
mov
sbb
jae
mov
pop
hlt
pop
stos
xchg
mov
leave
jb
scas
sbb
and
sbb
js
rclb
add
add
mov
test
mov
or
inc
jp
add
sti
lret
lcall
dec
mov
hlt
xor
add
push
not
mov
pop
or
inc
das
sbb
shl
add
xor
fstpt
add
repz
add
ret
or
fnstcw
hlt
push
inc
pop
dec
ja
ror
insl
or
mov
jmp
lea
xor
add
lcall
fdivr
fcmovb
loopne
repnz
pop
divb
adc
add
shr
mov
stc
cmp
jne
addb
frstor
add
into
add
cmp
ja
add
jp
adc
push
adc
cmpsl
cli
jae
lock
sarb
add
dec
push
add
mov
sub
cmp
jecxz
adc
int3
orb
mov
test
add
movsl
idivl
arpl
pop
xchg
push
das
test
outsl
testb
push
mov
add
into
dec
pop
xacquire
mov
lea
mov
cmp
ror
int3
leave
addb
xor
add
push
add
daa
or
adc
je
xchg
add
rol
jne
add
and
dec
pop
mov
test
dec
lock
ljmp
push
mov
jl
add
mov
or
push
cmp
push
xor
and
out
push
out
dec
popa
pop
incb
test
push
shrl
xchg
adc
add
fmul
aas
add
paddsw
push
test
cld
pop
push
ljmp
xor
lea
cmp
es
movsl
pushf
add
mov
mov
pop
inc
inc
inc
mov
jo
call
or
mov
mov
sbb
sbb
or
out
and
mov
or
adc
add
add
fldcw
data16
xor
fwait
dec
push
add
jnp
popf
push
and
mov
mov
mov
add
je
push
rcrb
xor
adc
out
pop
xchg
add
flds
or
loope
xor
xchg
adc
loop
mov
pop
testl
adc
lea
jg
add
jne
xor
add
mov
xchg
add
jne
shlb
pop
mov
pop
inc
sub
in
or
pop
bound
outsb
add
addr16
in
loopne
out
mov
mov
fcmovb
movsl
mov
loop
xlat
ljmp
pop
sub
mov
mov
aas
pop
mov
push
or
lods
adc
sahf
xchg
adc
cmp
mov
adc
lods
sbb
addb
mov
or
and
iret
and
clc
loopne
jno
dec
pop
add
sbb
pop
adc
pand
jae
cmpb
lock
sbbl
call
add
mov
sbbb
in
add
ret
add
cltd
mov
out
jl
call
ret
sbb
dec
and
and
mov
sub
int
add
sub
fdivs
inc
cwtl
rorb
mov
pop
in
ljmp
adc
cmp
repnz
add
clc
mov
fs
add
pop
das
mov
add
or
add
stos
jae
inc
push
stos
jle
scas
jbe
push
add
mov
cmpsb
pop
add
insb
inc
xchg
dec
push
js
xchg
loopne
lock
inc
cli
add
cs
pusha
test
add
mov
push
cmp
push
scas
imul
inc
rcrl
jl
or
pop
dec
inc
or
xor
add
jmp
les
in
add
add
aas
add
mov
rcrb
adc
push
iret
lret
add
xor
dec
add
jno
and
loopne
inc
add
jnp
cld
push
jl
add
dec
ja
mov
cltd
add
ret
imul
mov
add
mov
add
mov
add
fbstp
and
cmpsl
pop
lcall
call
push
repnz
xchg
jecxz
push
pop
sub
leave
rolb
sub
pop
pop
hlt
je
inc
das
ret
std
xlat
or
adc
add
roll
push
dec
pusha
mov
xor
dec
or
add
rolb
lods
xor
mov
jmp
mov
or
shr
push
fdivrs
or
sysexit
and
in
incb
pop
into
jne
xor
and
mov
testl
movsl
jns
pop
test
rolb
jns
call
pop
pop
dec
pop
dec
fiaddl
not
adc
ret
aaa
add
jno
add
or
mov
addl
add
sbb
lods
sbb
add
ljmp
sbb
movb
mov
push
cld
subb
dec
loop
xchg
add
mov
shr
loopne
imul
add
inc
sti
ljmp
add
in
movsl
sbb
inc
add
xchg
cmp
add
mov
xchg
push
int3
in
mov
testb
mov
call
jmp
inc
inc
cmp
adc
icebp
add
rcrl
cmp
fistpll
popf
les
lret
xchg
shll
cmpsb
mov
add
out
pop
cld
add
cmp
orb
cmc
add
or
add
adc
pusha
jecxz
ret
mov
es
fdivrl
pop
rorb
hlt
out
xchg
sub
jmp
jns
mov
add
pop
pop
out
dec
clc
movsl
in
add
rclb
lret
sub
sbbb
repnz
and
mov
jae
mov
push
scas
dec
add
fadds
dec
add
and
xchg
add
mov
xchg
emms
pop
pusha
mov
sub
je
add
pushf
push
lret
movsb
and
jmp
sbb
enter
jg
mov
pop
packsswb
mov
push
les
sbb
jecxz
push
pop
inc
icebp
loopne
sar
add
div
xchg
in
and
shl
mov
and
push
sub
and
movsl
jb
mov
shlb
pop
in
inc
push
mov
jo
test
cmp
cmovo
cmp
mov
pop
add
movsl
inc
insl
add
pop
xchg
push
dec
call
xchg
xchg
cld
fists
push
mov
mov
pop
sub
mov
pushf
jo
xchg
int3
xchg
adc
jge
mov
pop
or
sub
lret
dec
out
add
packuswb
mov
outsl
faddl
push
mov
pusha
pop
fstl
add
pop
scas
add
push
fmull
int3
pop
enter
xchg
ret
shlb
or
jg
je
movb
add
out
nop
add
and
mov
mov
push
adc
rcrb
movsb
push
adc
jmp
nop
xor
add
push
jnp
add
pop
mov
add
loope
jmp
dec
bound
cmc
sub
mov
jne
lock
jns
out
add
in
repnz
mov
sbb
add
push
jl
loope
sti
xchg
jo
mov
movb
dec
xchg
js
dec
sbb
pushf
sbb
mov
repnz
mov
dec
cmp
and
pop
dec
stc
xorl
inc
fiaddl
cwtl
add
xchg
adc
sub
inc
xor
pushf
xor
test
mov
popa
bswap
stos
adc
mov
xchg
call
and
lret
sub
daa
mov
loopne
add
jnp
mov
shlb
call
and
xchg
cmp
mov
add
or
pop
enter
mov
fwait
dec
or
lock
push
cmp
fstpl
in
or
mov
mov
and
in
pusha
negb
lds
fwait
inc
int3
push
fdivr
and
add
xchg
je
or
sbb
mov
nop
sbb
mov
or
sub
jge
jne
daa
pop
inc
jbe
add
repz
add
mov
aam
das
mov
and
ljmp
sbb
pop
pop
cmp
dec
xor
fidivl
push
loop
test
add
ret
xor
add
pop
aas
jg
add
les
js
pop
or
add
cli
pop
add
or
add
pop
push
mov
jl
jbe
hlt
sub
jb
iret
fistpll
xor
or
push
stc
add
cmp
sbb
adc
test
pop
xor
enter
adc
lret
pop
mov
add
jo
pop
adc
add
xchg
enter
mov
xor
jbe
shl
cmp
add
lret
lods
ss
imul
mov
adc
push
add
or
lock
mov
push
or
mov
and
scas
fwait
add
add
out
movsb
jmp
push
add
into
enter
push
dec
inc
add
movsb
fstl
sahf
add
shll
fisubs
add
add
jae
mov
xchg
cmp
lcall
jecxz
les
test
pop
inc
cmp
cmpps
xor
add
or
add
imull
enter
inc
xchg
clc
arpl
mul
dec
movsb
mov
hlt
inc
sub
daa
add
test
jl
pop
test
add
popa
mov
or
dec
mov
pushf
add
lahf
jmp
int
xor
cmp
stos
popa
loope
mov
pop
add
iret
outsl
sti
jno
fsubp
jecxz
add
cmp
mov
add
sbb
test
add
fisttpl
mov
or
inc
movsb
inc
pop
pop
fs
add
or
adc
inc
add
lea
mov
dec
add
add
xchg
shrb
clc
jo
and
add
jns
jge
mov
push
sub
test
add
popf
xor
dec
mov
pop
and
jge
inc
hlt
mov
inc
or
lds
sbb
incb
add
add
popf
mov
cltd
dec
inc
lods
xchg
cmp
add
push
lock
mov
mov
adc
dec
leave
test
mov
sbb
cmpsl
adc
adc
and
clc
sbb
lods
xor
jp
movsl
adc
add
adc
rolb
push
insb
lods
mov
das
sarb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
sbb
adc
sub
inc
mov
add
dec
fwait
sub
add
sbb
and
mov
add
pop
lret
jno
push
pop
dec
mov
fs
je
adc
jns
jno
jle
add
les
outsl
int3
pop
mov
dec
rcr
scas
push
push
xchg
rolb
addl
das
mov
in
and
ljmp
or
push
mov
cld
ja
mov
jle
push
fildll
pop
shlb
clc
push
sbb
and
ficomps
xchg
push
aaa
pop
push
add
jo
nop
push
aad
jb
daa
pop
and
inc
insb
cwtl
cmp
pop
jae
add
push
sbb
pop
sarl
lock
incb
jge
repnz
mov
xchg
sbb
push
or
ljmp
add
xor
pop
dec
push
test
insl
out
shrl
cmp
mov
inc
and
jge
dec
cltd
add
mov
dec
mov
pop
fsubs
inc
add
inc
push
gs
ret
pop
add
sub
lcall
inc
shlb
push
sbb
jge
add
test
arpl
xchg
sbbb
movsl
int3
mov
add
cli
jle
sub
fsub
es
cmp
enter
sarb
or
inc
xchg
pushf
pop
add
inc
int3
sub
add
or
pop
mov
test
add
jae
shll
lea
pop
movsb
pop
mov
lea
cmpsl
rolb
ror
pusha
add
push
adc
push
cld
es
add
enter
adc
sti
pop
adc
in
add
cltd
push
xchg
push
pop
mov
punpckldq
and
push
pop
or
cld
or
push
call
jg
clc
mov
jge
ror
mov
jp
add
mov
int3
roll
sahf
inc
inc
add
je
scas
aam
jno
test
sahf
lods
ljmp
adc
xchg
cmp
and
ret
add
clc
popf
leave
cmp
mov
rcll
add
mov
jne
ja
adc
sbb
sbb
mov
sbb
add
lea
mov
sbb
mov
out
loopne
into
add
inc
aad
push
clc
push
sarl
insb
add
inc
daa
sub
jle
push
push
mov
call
add
mov
aam
mov
mov
add
fists
add
adc
enter
add
mov
pop
iret
fnstsw
pushf
push
xor
test
orb
test
incb
dec
inc
rorl
imul
fwait
inc
lret
mov
dec
sbb
add
xor
cmp
mov
jo
pop
push
fdivrs
icebp
and
jo
mov
pop
add
movb
add
addr16
cmpsl
xor
popf
lcall
cld
fcompl
cmp
rcrl
cmpsb
xor
es
add
hlt
loopne
hlt
scas
add
and
je
cmpsl
inc
mov
jge
xor
aam
add
pop
rorb
lea
dec
cmp
fadds
mov
xor
mov
jp
cltd
mov
mull
int3
xchg
jns
jecxz
out
push
mov
adc
test
xor
mov
add
push
push
dec
and
add
pop
sbb
mov
xchg
inc
mov
ds
add
mov
adc
jg
xor
mov
add
addr16
adc
adc
pop
push
adc
pop
sub
subb
mov
jmp
push
mov
jge
fimuls
roll
jle
movsb
push
adc
pop
add
pop
push
ret
add
adc
add
jle
sub
xchg
rcrb
pop
ss
or
sbb
ret
inc
or
adc
or
add
and
add
js
rorb
push
ljmp
jmp
add
mov
stos
xchg
add
sbb
inc
out
add
dec
test
add
adc
pop
aam
mov
mov
fdivrl
add
ja
sub
cmpsb
out
adc
add
push
push
pop
jmp
cmp
dec
pop
jne
in
shll
cmp
jge
lcall
addl
or
lods
pop
xchg
mov
ljmp
icebp
push
stc
xor
ds
cmpb
add
insb
push
fbld
cli
cmp
pop
fs
and
push
aas
out
add
dec
hlt
sub
fistl
adc
into
xchg
lock
jb
push
xor
or
mov
adc
mov
ja
add
test
lret
add
enter
inc
sub
pushf
adc
out
add
add
sbbb
cmp
pop
les
pop
sub
mov
and
and
xor
jnp
jno
add
sub
inc
xor
outsb
add
outsl
addl
mov
dec
cld
push
xrelease
and
repnz
cmp
add
imul
rolb
std
or
or
je
ja
add
sbb
xchg
test
scas
popf
add
sub
lock
pop
add
mov
dec
dec
inc
mov
fwait
jbe
mov
adc
aaa
movb
addb
orb
or
aad
xchg
jno
ljmp
mov
add
movsl
ja
cli
cmpsb
add
sub
fldenv
and
jge
xchg
inc
push
nop
scas
into
ljmp
push
popa
fisubs
clc
movsl
rolb
mov
sub
add
scas
mov
add
test
adc
test
aas
xchg
ds
xor
mov
lods
push
add
es
adc
jb
adc
mov
sub
enter
aaa
andb
or
movb
add
pop
or
cmpsb
add
nop
mov
pop
pusha
add
into
sbb
pop
add
ret
sub
push
mov
cwtl
jnp
iret
and
bswap
jg
call
inc
jns
jnp
mov
imul
sub
jg
or
scas
shll
xor
push
aas
test
add
adc
jne
or
dec
pop
fstpl
ss
adc
cli
xor
push
ljmp
fnstsw
add
xchg
subl
or
jns
jg
decb
cmp
loopne
mov
fdivp
inc
pusha
data16
add
jg
xchg
mov
add
and
and
cld
loopne
sub
sbb
add
and
enter
xchg
loop
dec
jl
add
and
add
lret
std
xchg
fadds
lods
aaa
add
outsl
insl
dec
outsb
imul
hlt
xchg
jle
pop
or
jno
nop
fisttpll
out
add
push
fs
icebp
mov
call
imul
push
jno
add
lcall
add
cmp
or
imul
jnp
adc
push
cwtl
push
add
and
test
sub
mov
daa
cmc
push
loope
or
js
jne
out
and
ljmp
icebp
or
nop
push
xchg
loopne
lret
sub
sbb
stos
pop
mov
mov
lret
inc
or
fstl
add
cmp
add
xor
or
aad
clc
in
pop
lock
or
fldl
pop
enter
jno
aaa
add
test
stc
jg
adc
inc
sbb
lahf
push
outsl
dec
rcll
cld
pop
fmull
loope
in
cmp
or
inc
jmp
dec
into
push
testb
testb
shlb
add
pop
lock
loop
jno
and
mov
jnp
in
testb
icebp
add
jno
cmp
movsl
mov
sbb
mov
ljmp
mov
loope
inc
je
pusha
scas
xor
shl
or
jmp
bound
xor
pop
cmp
add
jecxz
xchg
mov
rcrl
hlt
arpl
sbb
stos
pop
push
mov
push
jle
rcrl
aas
jecxz
lods
ljmp
in
sbb
push
pop
inc
movsl
adc
addl
cltd
inc
rclb
pop
mov
jg
mov
lea
in
jnp
mov
shrl
imul
add
popf
xor
sti
push
push
pop
add
aam
clc
mov
mov
es
test
adc
lcall
sub
daa
dec
push
lret
mov
inc
push
pop
lcall
sbb
push
jb
ss
inc
xchg
sub
sub
add
pop
push
pop
xor
push
fiaddl
push
push
in
gs
mov
call
orb
cwtl
pop
cmpsl
sub
test
cmpl
fstpl
es
out
rorb
jae
pop
mov
pop
loopne
aas
cmc
inc
in
pop
pop
mov
lods
int
call
paddw
repnz
add
lock
pop
stc
push
sbb
add
push
clc
insb
pop
sub
mov
icebp
ljmp
dec
aad
es
add
jne
xchg
aas
and
add
mov
push
bound
icebp
mov
fwait
les
out
and
mov
push
add
lock
push
subl
jmp
add
icebp
je
fildl
or
dec
cs
pop
dec
add
int3
push
mov
outsb
ret
popf
in
add
inc
test
add
xor
bound
out
mov
sbb
cmp
jge
dec
shll
lods
ficompl
outsb
call
lods
mov
and
xchg
push
fsub
imul
push
je
subl
call
fs
repz
add
loopne
call
add
xlat
dec
ret
pop
xchg
scas
addr16
stos
sbbb
or
push
bndldx
loopne
inc
fyl2xp1
sub
pop
add
mov
shlb
xchg
xor
push
inc
flds
xchg
mov
out
lahf
call
xchg
xchg
mov
aas
in
stc
cmpsb
clc
shrl
mov
jo
call
jne
add
jp
jle
dec
sub
cmp
rolb
and
test
sub
cmp
mov
add
lock
inc
pop
cmp
in
or
or
add
nop
sbb
sbb
add
and
fs
cwtl
pop
add
insl
cmc
rcll
and
add
data16
xor
rclb
clc
push
add
rolb
xor
pop
add
jo
push
in
jle
cmp
popf
cld
inc
ljmp
repnz
in
pushf
dec
or
mov
test
and
int3
add
adc
add
pop
pop
add
stc
ss
hlt
scas
aas
insb
bound
test
in
jl
add
pusha
push
je
popa
outsb
jae
inc
jb
in
daa
xchg
lock
sarb
add
push
sub
cmp
cmp
mov
xchg
rol
fnsave
pop
mov
lock
out
and
adc
add
cmc
mov
add
bound
stc
sbbb
cmp
je
mov
leave
pop
jne
sahf
roll
dec
incl
test
add
jle
pop
inc
cmpsl
or
mov
lea
mov
and
testb
pop
dec
xorb
inc
jg
pop
add
and
inc
jmp
aad
and
loopne
add
cmp
iret
pop
mov
shl
addr16
dec
add
and
and
out
or
add
cmpl
add
cltd
call
push
add
stc
and
add
or
neg
xchg
cmp
add
out
adc
clc
add
fimuls
lods
jmp
add
inc
add
xchg
into
cmp
add
or
jae
sbb
adc
in
adc
add
and
add
test
mov
lock
nop
and
mov
jno
sbb
ljmp
and
push
faddl
mov
je
mov
pop
inc
mov
inc
cmp
pop
adc
add
add
ret
push
lret
adc
int
sub
sbbb
scas
jg
add
int3
out
xchg
fmull
push
adc
push
pop
mov
dec
xor
ss
jmp
and
sub
xchg
add
outsb
into
call
or
test
add
ret
adc
add
dec
movsb
les
cmp
jns
test
mov
loope
nop
out
mov
or
int3
or
iret
inc
inc
sub
in
icebp
sbb
sbb
sub
dec
push
test
jle
leave
and
roll
scas
or
xchg
or
movb
cld
sub
test
jle
cmp
inc
sub
adc
lret
inc
cmp
cmp
sbb
mov
call
cltd
and
sub
add
pop
mov
jmp
add
and
and
cs
sbb
sub
lret
mov
inc
push
imul
adcb
jno
add
and
ja
lsl
in
add
lret
enter
jle
add
add
or
loopne
push
nop
adc
bound
shlb
inc
js
and
jbe
ds
subb
mov
or
pop
in
int3
mov
push
ret
jg
xor
stc
cmp
xlat
dec
test
lds
xchg
mov
fwait
jae
add
dec
inc
push
pop
ljmp
push
add
std
lahf
sub
ret
cld
in
mov
inc
add
dec
add
add
dec
mov
pop
mov
rclb
xor
adc
rol
cmp
and
pusha
cwtl
loopne
fdivr
add
fs
int
mov
inc
aas
add
push
sub
add
xor
lock
cmp
add
or
int3
jle
inc
outsl
sub
rorb
in
mov
push
test
xor
sub
arpl
pop
icebp
pop
mov
or
fildll
add
daa
mov
add
cmc
mov
add
das
pop
jo
fstps
or
inc
jle
in
outsb
subb
pop
cli
jb
xor
push
cmp
add
or
add
adc
mov
add
nop
scas
cmpsb
loopne
fs
add
xchg
sub
sub
add
push
out
rolb
outsl
adc
loope
jl
or
sbb
xchg
jmp
jbe
add
jge
dec
add
test
push
push
dec
sahf
adc
add
push
call
and
mov
loop
pop
add
icebp
xor
out
add
jnp
cs
xor
popf
inc
cmpsb
dec
push
pop
or
xor
jecxz
stc
out
sbb
sbb
and
and
packuswb
inc
paddb
stc
cli
cmp
incb
cs
and
cs
pop
sbb
xor
and
inc
or
add
jae
add
or
mov
inc
lahf
cwtl
pushf
add
sub
xchg
icebp
movsb
add
iret
push
loop
inc
xor
sbb
add
jg
ds
xchg
out
pop
pop
inc
fcomps
aad
mov
sub
enter
testl
and
nop
sub
xor
sub
mov
popf
les
in
mov
nop
imul
enter
mov
aas
xor
xchg
sbbb
adc
inc
cmp
mov
and
or
mov
rolb
bound
imul
jge
incb
repz
add
xchg
rolb
imul
pop
fs
cmc
rclb
pop
add
xchg
rol
dec
push
push
add
adc
imul
dec
call
add
sti
inc
adc
movsl
mov
sub
adc
add
mov
rcl
cmp
or
inc
add
in
add
test
hlt
in
and
mov
mov
repz
sti
shl
pop
add
and
add
out
movsl
jns
sti
fmul
loope
xchg
add
xlat
les
cmp
add
aaa
ret
test
js
bound
cmp
xchg
or
sbb
add
adc
inc
cli
int3
push
sbb
add
cmp
lea
aas
inc
mov
add
mov
cmp
sti
add
cmc
in
add
add
add
rorb
or
loop
loopne
adc
add
fadds
add
cmp
ljmp
les
addr16
sbb
divb
addb
add
cmc
cmp
js
push
popa
popf
insl
mov
sbbl
in
sbb
mov
add
pop
dec
or
mov
les
imull
adc
rcrb
adc
cmova
pusha
cmpb
test
jo
mov
fprem
xor
jle
pop
fwait
icebp
adc
mov
push
hlt
ljmp
sbbb
pop
aam
stc
sbb
add
in
xchg
cmp
aam
sbb
mov
add
shlb
iret
in
fistl
out
adc
loopne
sbb
arpl
pusha
sahf
mov
pop
add
sbb
or
push
lods
les
test
inc
and
sub
inc
add
or
int3
out
outsb
mov
push
testl
call
mov
add
push
inc
pop
cmpsl
and
xchg
dec
stos
xchg
jo
inc
rolb
mov
add
inc
andl
mov
jmp
call
lcall
jo
pop
and
push
add
mov
orb
int3
ljmp
sub
jns
loope
jge
out
push
std
fcomps
dec
cmp
out
test
ljmp
test
aad
clc
jl
mov
out
sub
bound
stos
inc
mov
adc
add
cwtl
jge
mov
push
and
jns
add
div
test
and
mov
cmp
fld
inc
stc
call
rcl
sub
ja
add
leave
push
adcb
outsl
jmp
loopne
xor
push
jne
aaa
inc
lret
outsl
arpl
push
jg
in
inc
scas
adc
inc
decl
mov
jl
dec
cmp
jle
or
fimull
inc
or
add
nop
mov
clc
dec
sub
dec
dec
sub
pop
xlat
mov
xchg
imul
pop
mov
mov
sub
add
jae
call
dec
sub
clc
lret
cmp
sbb
or
ljmp
in
sbb
adc
cli
add
sub
cmpl
adc
adc
push
sub
sub
adc
mov
mov
cli
pusha
rcrl
push
jbe
xor
add
sub
subb
iret
pop
adc
and
addr16
adcb
inc
add
pop
xor
cmp
or
sub
inc
mov
inc
push
add
sahf
pop
aas
sarl
adc
and
add
push
decl
jl
sbb
js
jg
jge
add
sbb
or
ror
fmull
and
daa
clc
push
test
leave
outsl
insl
jno
pop
imul
inc
stc
and
xchg
ljmp
test
add
xor
jbe
mov
xchg
xor
sub
sti
mov
std
sub
mov
mov
and
enter
sub
int
or
pop
sti
xchg
adc
xchg
orb
pop
insb
rorl
movsb
faddl
pop
add
or
cmp
in
lret
in
xor
cld
bound
inc
leave
pushf
and
or
popf
idivb
cltd
mul
add
in
dec
adc
adc
sbb
clc
sbb
orb
jns
clc
hlt
mov
enter
and
or
lret
psrad
mov
or
inc
adc
test
enter
in
lret
or
icebp
and
push
rolb
adc
add
dec
fstpl
dec
clc
mov
repnz
cmp
in
addr16
enter
xchg
stc
pop
sbbb
adc
cmp
scas
add
imul
or
jmp
jnp
dec
outsb
pop
add
popf
push
lret
test
add
fs
sub
sub
and
push
cmp
loop
sbb
ds
xchg
fsubrl
push
loope
adc
pusha
dec
dec
sbb
add
and
bound
add
aas
pushf
push
clc
test
repz
aam
push
daa
add
xor
ret
xor
nop
sbb
add
mov
loop
and
sub
adc
add
push
jl
add
call
pop
hlt
in
and
sbb
pop
add
les
into
and
cli
roll
mov
test
mov
jnp
add
clc
and
sahf
or
inc
mov
jns
call
sub
add
pop
jp
js
pop
push
fcoml
jmp
dec
nop
pop
cmp
cmp
cmp
inc
or
and
dec
hlt
cmp
lcall
leave
push
sarb
loop
pushf
jmp
adc
add
rolb
divb
and
add
popa
je
cmp
push
cmp
nop
cmp
dec
in
add
push
sub
mov
adc
push
sbb
adc
addps
add
or
notl
movsl
add
pop
test
and
cs
mov
loopne
xchg
or
clc
psllw
pmaxub
push
cmp
and
xor
add
loopne
add
cs
pusha
cmp
call
xchg
aam
aaa
fsubs
add
jmp
outsb
repnz
xchg
fwait
cmp
pop
xor
add
mov
xor
add
sub
jle
jmp
sub
test
push
or
mov
rorl
pusha
pusha
sbb
mov
dec
std
call
add
mov
ds
mov
add
push
addb
rclb
out
or
cmp
adc
and
cmp
fcomps
test
sbb
std
cmp
sar
push
cmpb
xorb
je
mov
jge
xchg
test
or
mov
out
mov
adc
sti
mov
into
cmp
and
or
call
dec
popf
pop
and
xor
dec
xor
out
aad
rcl
addr16
jne
dec
adc
add
jmp
loop
push
das
loope
or
cs
ss
jb
fcmove
insl
das
jp
or
jmp
pop
pop
test
sub
addr16
add
sub
movsl
decl
xor
pop
seto
push
sbb
or
or
cmp
sbb
std
and
and
add
ljmp
out
dec
call
add
movsb
loop
mov
arpl
popa
lahf
addb
mov
dec
int3
mov
sbb
push
xor
nop
roll
or
incl
xor
pop
jno
dec
pop
cmp
inc
or
cmp
aaa
mov
xchg
unpcklps
or
clc
mov
sub
jns
push
pop
loope
sti
ja
les
add
lea
pop
xchg
add
jnp
jo
xor
pop
pop
fnstenv
push
push
pop
lods
cmpsl
dec
std
hlt
mov
sti
xor
sub
lret
lds
sbb
jle
mov
push
add
mov
mov
sbbl
xor
sub
sub
cmpsb
inc
xchg
xor
xchg
jp
xchg
jmp
scas
jae
and
adc
mov
add
lret
xchg
cmp
xchg
loopne
mov
jo
cmp
in
popf
add
inc
add
sub
movsl
add
shlb
cmp
popf
xor
mov
adc
es
add
call
pusha
and
mov
push
fdivrl
loopne
push
inc
clc
add
enter
ljmp
xchg
sub
pop
mov
or
jno
ret
pop
cmp
mov
push
fisttpll
cltd
cmp
mov
test
fwait
add
lret
cmp
sbb
pop
jl
hlt
xchg
fistpl
jl
or
cmpsl
or
push
popa
loope
add
dec
add
and
inc
push
ficomps
js
jl
pop
gs
incb
add
dec
lret
pop
leave
subb
add
mov
ja
dec
jbe
add
adc
jle
inc
pop
mov
jno
nop
outsl
scas
rcr
inc
add
adc
cld
stos
test
fistpll
iret
inc
in
cmp
jl
mov
add
sbb
out
jmp
testb
adc
add
lret
fs
push
punpckhwd
inc
cmp
jecxz
enter
sarb
xor
add
or
cmp
mov
dec
adc
sbb
mov
clc
ja
pop
mov
mov
fdivrs
xor
inc
js
mov
lahf
call
out
dec
pop
sub
dec
xchg
xor
insl
js
or
dec
push
push
xchg
inc
sub
jae
cmp
sub
cmpb
loop
shl
shr
lock
test
dec
push
add
lret
or
sub
add
dec
inc
out
add
or
cmp
lahf
nop
das
int3
pop
mov
add
stc
js
add
xchg
addr16
add
mov
daa
xor
mov
add
cmp
jg
add
shl
add
mov
jl
adc
stc
clc
and
mov
mov
es
pextrw
popa
test
and
pop
push
push
push
adc
xchg
xor
inc
inc
push
add
sbb
cmp
adc
stc
xchg
scas
loop
call
cmp
loope
icebp
dec
call
mov
pop
stos
cli
inc
outsl
scas
xchg
mov
or
dec
fcomi
lret
icebp
addb
pop
cwtl
add
jg
add
add
or
push
dec
xorl
jns
sbb
icebp
xor
pop
lret
rorb
adc
add
adc
popl
repnz
jge
es
stos
add
sbb
jo
pop
push
jne
mov
ret
jg
add
jle
add
cmp
add
pop
add
dec
mov
pusha
scas
mov
add
mov
jmp
cld
das
test
call
add
dec
je
push
inc
hlt
xor
insb
loopne
enter
in
and
mov
sbb
push
add
mov
mov
mov
mov
cmp
add
mov
lcall
dec
ficoml
sbb
sub
inc
xor
dec
pop
inc
sub
out
add
push
and
or
xor
xchg
mov
pop
jle
add
and
repnz
addb
arpl
push
or
jmp
add
jl
inc
sbb
clc
stos
jo
inc
rolb
lods
mov
mov
repz
cs
mov
jnp
rol
stos
push
push
fs
add
dec
lcall
xor
je
jmp
cmp
jecxz
cmp
lret
dec
pop
cli
cmpsl
add
inc
pushf
adc
pusha
outsb
push
inc
push
cmp
add
repnz
out
xor
inc
sub
xor
lahf
add
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fadds
loopne
repz
and
addl
cli
jb
mov
cld
pop
xor
inc
movsl
call
xchg
sbb
pushf
jp
mov
mov
fadds
add
test
add
imul
call
cmp
xlat
outsl
movb
data16
mov
vorps
or
inc
xchg
outsb
sbb
in
inc
out
faddl
nop
mov
cmpsl
push
add
orb
add
and
and
out
adc
test
add
inc
shrb
jp
js
jl
pop
roll
paddusb
loopne
xchg
add
cmp
mov
xor
out
lret
pop
sbb
pop
pop
subb
in
push
mov
hlt
sbb
xchg
mov
dec
sub
clc
xchg
add
shll
xchg
cld
xor
out
add
fsubr
fidivrl
xchg
cmp
pop
jl
add
add
je
add
enter
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
out
add
sub
subl
mov
lcall
enter
mov
aam
adc
mov
mov
sbb
shll
rcrl
add
scas
inc
js
adc
cld
loop
rcr
inc
add
adc
cli
add
nop
jecxz
jnp
push
std
mov
add
dec
daa
jne
aam
test
inc
xor
or
je
jcxz
das
push
and
add
sbb
ret
call
xchg
xor
push
imul
pop
movsb
xor
add
jle
scas
es
scas
add
repnz
incb
cmp
pop
aas
movl
sub
aas
mov
nop
or
xadd
add
jb
je
jo
add
add
rorb
in
mov
ficomps
pop
sbb
add
rcr
pop
fiaddl
sbb
dec
fimuls
ffree
sbb
sbb
add
aam
aad
cmp
pop
sbb
loope
in
call
adc
add
adc
in
xor
add
shl
xor
ss
testb
shlb
hlt
add
cld
cmp
add
sarb
ds
xchg
jno
cmp
sarb
psubw
sub
add
add
shrb
sub
inc
ljmp
cmp
add
in
inc
pusha
push
in
add
and
and
daa
add
mov
idivb
jecxz
and
add
shlb
and
data16
mov
cmp
andl
cmpsl
in
loopne
add
inc
movsb
loopne
insb
add
lods
subl
outsb
inc
scas
cmp
stos
cmp
imul
or
test
push
sarl
mov
jp
mov
enter
loopne
or
mov
jl
mov
je
push
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
mov
shlb
inc
mov
push
add
nop
adcl
push
inc
xchg
ret
xchg
daa
push
inc
push
addr16
rcll
rolb
pushf
rcrb
inc
jo
add
sahf
add
pop
cmp
xchg
lcall
or
pop
sbbb
fisttps
cmp
addl
dec
lock
rorl
rorb
dec
inc
mov
inc
or
or
or
xchg
mov
inc
call
xchg
in
sbb
push
mov
cld
jb
add
js
and
xor
push
popf
push
rcrb
jns
push
and
inc
add
push
add
mov
mov
pusha
pop
popf
add
pop
add
jno
aad
or
and
in
ja
pusha
test
jae
aas
call
mov
add
add
movl
adc
dec
sbb
xchg
push
sbb
mov
lock
add
and
fistps
jnp
scas
cmp
sub
arpl
add
push
push
data16
adc
fdivrp
mov
dec
jo
push
push
push
sarb
add
lods
xor
add
dec
push
mov
lcall
jne
dec
add
or
sub
jle
jl
pextrw
cmp
mov
add
adc
lods
add
mov
lahf
adc
pop
fisttps
pusha
push
cld
lcall
cwtl
push
lods
cmp
mov
pusha
add
jo
call
inc
in
or
adcl
lea
xchg
pop
cmpsl
and
push
xor
fadds
adc
cmp
add
aad
mov
add
jne
add
cwtl
mov
stc
xchg
inc
push
jp
push
inc
pop
scas
leave
sarb
add
daa
add
addr16
mov
stos
add
lret
sbb
mov
test
add
cs
xor
jno
out
add
adc
add
sti
icebp
dec
xchg
nop
pop
adc
mov
adc
repz
and
add
pop
pusha
cmp
loop
add
stos
nop
xlat
insb
push
stc
leave
add
icebp
pop
shlb
xchg
jmp
sbb
or
mov
jno
xchg
dec
xchg
add
into
rcrl
lret
mov
leave
icebp
add
cmp
popa
mov
into
push
cmp
mov
adc
push
les
push
add
add
mov
and
cli
jbe
and
and
push
loop
push
cmp
sub
push
adc
int3
enter
enter
xor
andb
and
pop
xchg
jno
jb
mov
add
repnz
sub
testb
icebp
dec
cld
stc
ret
push
or
sub
xchg
adc
mov
push
int3
ret
add
sbb
dec
ret
clc
lods
incb
adc
lods
dec
and
dec
inc
xchg
cmp
inc
inc
adc
xor
mov
lods
dec
xor
stc
cmp
sub
or
mov
movsl
adc
loope
add
or
mov
or
lods
int
push
inc
or
sub
test
enter
xor
icebp
sub
imul
add
aaa
sub
add
mov
fs
loopne
repnz
cmp
adc
fwait
loopne
mov
pop
movlps
rcll
add
leave
mov
mov
mov
enter
rolb
push
popf
lods
fcomp
fs
dec
or
fs
sbb
or
jecxz
jno
xchg
add
data16
inc
cmp
dec
pop
nop
or
push
ja
aam
inc
xchg
lret
add
pop
icebp
or
inc
pop
sbb
stos
and
scas
shlb
repz
or
cmp
insb
xlat
fildl
shll
cld
and
push
repnz
pop
sub
out
pushf
cmp
mov
or
add
icebp
add
pop
mov
pop
in
inc
pop
test
xchg
int3
loop
out
pusha
loopne
sbb
mov
and
lock
xchg
push
mov
adc
sbb
mov
test
scas
xor
and
popf
add
in
add
dec
or
push
add
or
cmp
inc
cmp
sub
dec
inc
addr16
addr16
xchg
pop
jge
mov
xor
test
adc
add
leave
je
push
js
mov
test
jnp
mov
xor
daa
shl
jmp
orb
dec
call
mov
ret
ucomiss
mov
mov
add
jmp
shrb
push
jno
add
ja
subb
les
mov
sub
jle
xchg
ret
mov
orl
out
sub
and
adc
add
movq
sub
add
sbb
or
jnp
in
adc
shr
pop
sub
add
jne
jno
les
pop
mov
das
div
psubd
inc
ljmp
mov
sub
jge
addb
fbstp
sub
add
lret
jg
hlt
js
add
cmp
fs
es
cmp
adc
aas
sbb
enter
repnz
or
mov
or
sub
call
cs
pop
pop
clc
pop
loop
js
add
insb
sub
cs
aas
add
div
and
add
insl
cmc
and
xchg
push
push
lcall
data16
or
mov
movsb
push
cmp
mov
or
nop
inc
adc
loopne
cmp
adc
jb
repnz
add
push
sub
adc
add
repz
pop
pop
std
jecxz
call
adc
nop
add
mov
hlt
add
cli
cmc
mov
add
lahf
jae
imul
sbb
xor
cmp
lldt
fmuls
rcrl
push
stc
jns
cmpl
sub
cmp
pop
mov
jno
orb
cmp
cmp
and
sbb
inc
in
pop
add
mov
or
cmpsl
sbb
pop
xchg
xor
cwtl
loop
add
ret
cmpsl
call
out
shr
je
mov
or
mov
and
mov
hlt
pop
sbb
pop
inc
jecxz
inc
pushl
push
add
sub
xor
add
pushf
inc
dec
add
test
filds
stc
lods
notb
add
fnclex
test
neg
mov
sti
mov
mov
cltd
push
std
out
addl
push
and
mov
mov
loopne
fsubrs
mov
sub
leave
js
jge
jg
pop
push
dec
inc
sbb
inc
inc
inc
pop
inc
inc
dec
cmp
dec
dec
dec
dec
dec
dec
push
cs
or
add
pop
sbbb
pop
bound
data16
imul
pop
pop
jg
test
jne
shlb
jns
xor
xor
xorb
sub
add
and
and
sub
mov
jge
loopne
sub
sub
daa
sbb
xor
add
cmp
push
jae
add
pop
aas
cmpsl
cmc
dec
pop
and
sar
ss
rolb
fstl
lret
mov
pop
xor
hlt
subb
bound
testl
add
fdivrs
aad
aam
cmpsb
outsb
pop
add
inc
loopnew
lcall
push
in
lahf
add
mov
add
inc
js
stos
cmpsb
mov
test
fstl
jge
xchg
hlt
in
dec
xor
cwtl
arpl
mov
rolb
sub
outsb
adc
scas
lea
push
out
movb
jle
shl
sbb
loopne
add
inc
dec
dec
jne
aam
pop
orw
dec
inc
mov
xchg
shrl
mov
xor
dec
call
ljmp
add
stos
adc
jg
push
fs
cld
dec
lock
lods
mov
rcrl
inc
mov
incl
add
and
cmp
xor
pop
and
jne
mov
repz
iret
rol
inc
pop
xor
ljmp
inc
mov
or
cmp
pop
rorb
mov
test
adc
std
add
sti
adc
cmc
inc
sub
test
xor
add
loopne
cmp
add
or
orl
add
test
inc
add
test
sbb
mov
das
data16
arpl
add
push
aam
inc
mov
push
pop
pop
push
push
mov
dec
mov
mov
sub
add
xorl
push
movsl
sub
push
test
inc
inc
and
andb
lahf
pushf
sbb
sub
adc
mov
and
es
addb
adc
mov
out
adc
add
add
cmp
sbb
sub
fs
mov
push
or
out
pushl
lahf
out
rorb
add
xchg
sbb
loop
repz
mov
and
push
mov
add
push
push
or
xchg
shrb
push
cmp
addl
jl
pop
inc
add
nop
test
adc
movsb
in
jmp
add
jbe
or
push
call
js
inc
xchg
ficompl
push
dec
subb
jl
add
mov
push
pop
shll
outsb
movsl
into
pop
mov
cld
adc
push
mov
add
add
push
mov
jno
mov
test
xchg
xchg
stos
enter
cmpb
mov
cld
dec
inc
add
mov
mov
mov
mov
pop
loop,pn
add
jae
outsb
jecxz
into
and
sbb
add
dec
inc
push
add
push
push
pop
mov
sub
push
mov
xor
cmp
in
inc
mov
inc
and
sbb
push
jp
mov
add
mov
and
insb
jmp
in
sti
popa
pop
sub
cld
mov
mov
lret
push
leave
lcall
jne
adc
loopne
dec
lock
add
adc
mov
mov
jne
add
clc
daa
push
imul
jge
sub
mov
mov
add
mov
stos
into
fbstp
fstpt
movsb
jo
add
popf
fs
pop
and
xchg
xor
movsb
add
enter
xor
ret
add
incw
and
out
sbb
mov
pop
push
adc
jb
add
sub
cmc
inc
out
clc
sub
xor
adc
push
add
rolb
jae
add
or
out
add
imulb
push
les
cmp
xchg
inc
sub
adc
ljmp
xor
movl
loop
rorb
dec
jns
sub
add
stos
enter
loopne
inc
or
dec
lcall
add
push
or
mov
dec
cltd
cli
loop
add
notl
add
push
or
cmp
jb
pusha
xor
cmp
cmp
sbb
loop
mov
jge
outsb
inc
sbb
inc
fisttpl
icebp
add
add
inc
adc
fimull
pop
or
cmp
push
jp
xchg
jecxz
mov
adc
sub
int3
decb
sbbb
fildl
cmpl
pushl
add
add
dec
and
add
inc
in
aas
add
or
icebp
inc
pop
int
add
xchg
verw
loopne
and
cmp
cmp
push
in
lds
lock
xor
mov
add
out
adc
add
cld
mov
add
or
jle
pop
aas
insl
add
inc
push
pop
lret
add
out
loopne
movzwl
clc
add
repz
movlps
ffreep
push
add
sub
jbe
lldt
dec
inc
add
shll
sub
mov
cltd
gs
add
aaa
add
push
mov
pop
hlt
cmp
test
cmp
push
add
adc
and
adc
jne,pn
mov
sbbb
add
xor
push
inc
lret
push
mov
pop
and
or
loope
mov
add
jne
push
jo
add
iret
daa
xlat
xor
push
cmc
bound
add
mov
lock
sub
fs
dec
in
add
outsl
gs
mov
xlat
leave
push
sub
in
or
or
fcoml
inc
das
hlt
jl
cmp
adc
movsl
mov
mov
nop
or
dec
dec
add
lods
add
xchg
in
es
add
or
cmp
push
xchg
or
jne
mov
mov
or
mov
mov
into
dec
repnz
enter
add
push
in
inc
push
dec
lret
ja
stos
sub
mov
gs
mov
push
in
push
aam
movsb
push
js
dec
add
insb
mov
fcoms
add
in
xchg
nop
mov
cmc
dec
add
movsb
dec
xchg
pop
add
adc
lods
adc
loop
xchg
dec
cmp
add
out
fwait
aam
repnz
cmp
ret
cmp
movsb
cmpl
adc
inc
adc
ss
and
and
or
jmp
sub
add
adc
mov
add
sub
shrl
and
and
cld
mov
ret
lahf
jl
leave
inc
loopne
push
dec
mov
xchg
test
push
xor
movsb
add
xor
adc
mov
push
add
xchg
sarl
jbe
fs
adc
in
mov
loop
push
pcmpeqw
add
dec
aam
xor
or
cmp
ljmp
dec
dec
adc
in
inc
fucom
mov
cld
dec
clc
dec
sbb
filds
test
or
adc
push
inc
add
lret
sbb
add
addl
js
add
call
fdivs
xor
pop
inc
and
push
sbb
cltd
add
icebp
add
push
int3
incl
es
sbb
flds
icebp
push
jp
pop
xchg
add
push
inc
mov
clc
imul
add
adc
mov
ds
push
mov
sbb
add
ja
mov
and
nop
lea
add
out
dec
fisttps
rol
bound
add
jne
andb
sbb
inc
xchg
cmp
xchg
shlb
push
and
rcrl
ret
xor
incl
dec
adc
aam
cmp
cmpsl
mov
xchg
sub
sub
add
or
sbb
push
mov
adc
cmp
imul
add
pop
xor
add
fcmovnb
ljmp
push
add
pop
xchg
and
sbb
lock
jg
xor
add
test
add
or
push
sbb
push
and
and
dec
or
nop
fldcw
ret
js
dec
je
jle
mov
add
sbb
dec
cli
insb
add
add
push
jb
decb
stc
sbbb
add
cmpsl
int3
adc
inc
sub
pop
daa
lret
mov
inc
fadd
xor
addl
mov
add
add
dec
pop
sbbl
mov
mov
cvtdq2ps
hlt
and
pop
and
mov
dec
cmp
inc
jb
out
test
inc
pop
xlat
cli
push
xor
les
inc
add
add
jne
pop
in
ljmp
pop
add
or
xor
shll
jmp
jg
sub
push
ret
add
and
rcrb
test
add
aad
lcall
ss
lock
cmp
cmp
jb
add
iret
xchg
arpl
rorb
add
lods
pop
fnstenv
sub
mov
mov
imul
pop
and
or
addr16
xor
jo
dec
sbb
xor
jbe
into
add
adc
fcmovu
inc
and
push
dec
dec
cmp
adc
adc
xor
dec
nop
fs
fisubrs
hlt
pop
add
lret
icebp
dec
jae
call
push
das
jb
add
dec
hlt
jne
mov
lds
aaa
jg
add
rolb
mov
dec
push
clc
jle
fstl
or
push
add
mov
dec
loopne
popa
loope
test
lcall
les
incb
push
xor
clc
lock
mov
push
gs
repz
inc
aas
push
pop
and
sbb
mov
fisubrs
add
fiaddl
rolb
inc
sti
push
lcall
imul
jmp
pushf
add
cwtl
pop
add
in
inc
cmpb
jne
lock
in
jge
pop
mov
push
je
mov
adc
and
movsl
and
lret
add
int3
add
push
xor
dec
cmpb
jne
add
call
mov
dec
psllw
push
cmp
iret
xor
je
and
cmp
add
pop
push
or
addr16
inc
addl
call
cmpsl
dec
cmp
push
jo
inc
xor
mov
add
adcb
pop
mov
add
mov
ja
inc
jae
or
sub
sbb
je
add
pushf
jbe
aad
xor
sahf
or
or
rolb
shl
shrb
xchg
cmp
adc
divb
add
sub
mov
jmp
and
push
sbb
mov
loopne
cmp
orb
xlat
and
or
rclb
aad
and
jb
xor
mov
scas
loope
add
loopne
pop
dec
and
call
mov
mov
adc
mov
cmpsl
imul
mov
inc
mov
incl
testl
movsl
loopne
call
sarb
xchg
push
xor
inc
lret
push
pop
inc
add
sbb
or
les
mov
cmp
cmp
mov
jecxz
test
je
sub
push
call
mov
add
adc
mov
cmpsb
je
lret
cli
hlt
pop
sbb
imul
xor
ljmp
das
add
and
adc
daa
jne
out
xor
mov
add
dec
push
jl
sub
push
push
push
push
xchg
pop
push
pop
mov
or
or
js
add
mov
leave
test
xor
mov
inc
pusha
adc
push
add
mov
call
sub
lods
pushf
mov
inc
add
xchg
or
daa
adc
inc
push
mov
mov
sbb
inc
and
adc
mov
jb
mov
icebp
pop
imul
inc
xor
mov
xlat
push
add
fisttps
inc
xchg
pusha
add
cs
call
sub
add
push
fs
add
push
dec
lret
xchg
or
je
mov
sbb
xchg
or
xor
lock
add
loopne
push
xchg
sub
aas
call
adc
cltd
inc
mov
in
mov
cli
sub
cmpsl
lods
sub
ret
aam
lcall
mov
stos
adc
add
or
mov
pop
sub
loop
ficoms
sbb
ds
cmpb
dec
inc
fisttps
mov
je,pn
fnstenv
popa
add
add
add
pop
add
pop
xor
sbbb
mov
data16
out
inc
mov
push
push
add
ret
add
dec
mov
jge
stos
pushl
test
pop
add
xchg
add
movb
sbb
lea
clc
js
add
mov
in
enter
lahf
sub
loop
add
dec
inc
push
pop
adc
add
aas
call
mov
pop
or
fwait
or
adc
scas
pop
outsl
xor
push
ret
sub
ss
add
in
scas
test
nop
xchg
subb
and
rorl
and
add
daa
adc
fdivl
or
call
push
pop
popl
add
dec
xchg
push
and
jns
data16
push
add
xchg
ret
and
add
xor
mov
jns
repz
loope
cs
add
push
popf
int
push
addl
push
adc
sub
add
lcall
mov
add
shlb
in
inc
or
repnz
lahf
add
popa
mov
push
sub
add
xchg
xor
add
dec
sbb
add
rcrb
jnp
cmp
clc
pop
fadds
shlb
xchg
sbb
push
ret
sub
jecxz
add
lds
invd
add
data16
sub
pop
xor
je
cltd
and
add
rcr
jg
or
es
mov
mov
sub
pop
dec
adc
mov
sahf
bound
add
pop
inc
mov
nop
in
add
inc
mov
cmp
mov
rcrb
dec
xor
clc
adc
cmp
or
sbb
and
xor
xchg
mov
or
mov
lds
jmp
mov
push
add
mov
dec
add
les
loopne
es
add
js
pop
add
loope
dec
add
pop
es
and
sbbl
incb
mov
push
leave
cmpsb
sbbb
adc
ret
push
daa
jns
dec
adc
pop
jmp
or
mov
movsl
sbb
lock
xchg
insb
add
nop
mov
or
xor
push
leave
adc
sbb
pop
fsubs
sti
mov
adc
loop
dec
sub
jo
inc
add
call
lcall
add
lock
mov
add
arpl
shlb
jge
mov
jg
add
inc
push
mov
add
imul
clc
push
sbb
subl
and
push
and
pusha
repnz
incl
mov
add
mov
stos
insl
bound
push
iret
xor
adcl
stos
xor
add
push
push
pop
fbld
popa
shlb
dec
sub
add
inc
repnz
add
xor
or
push
or
test
test
jae
cmc
add
inc
push
sub
jg
sbb
adc
push
mov
subl
xchg
jg
add
mov
mov
mov
cmp
fiaddl
out
mov
out
add
orb
fwait
pop
cltd
jg
ret
inc
adc
and
lret
les
sbb
adc
lock
or
in
stos
dec
adc
sti
mov
decl
jns
bound
push
inc
dec
or
push
pop
cltd
add
aam
push
mov
sbb
add
mov
testl
pop
add
push
dec
adc
push
push
pop
rclb
or
pop
cmp
add
pop
stos
add
xchg
cmp
dec
loop
shl
xchg
xchg
push
pop
push
dec
adc
repz
add
je
repnz
mov
in
ds
add
arpl
pop
nop
sub
test
movsl
jge
incb
fidivl
leave
push
stos
and
sbb
pop
fwait
test
adc
push
inc
mov
stc
fs
inc
xchg
pop
sub
push
inc
pop
cltd
movsl
jnp
mov
pop
jo
fwait
ljmp
lret
test
ret
push
sub
test
dec
inc
lahf
push
dec
add
push
gs
cmp
pop
mov
call
push
sbb
sti
out
inc
roll
aaa
rorl
call
cmp
ss
inc
add
xchg
adc
lret
inc
xor
mov
insb
add
ret
cwtl
push
je
or
shrl
xchg
cld
fmuls
jne
pop
enter
cltd
adc
pavgw
jmp
push
movsl
adc
es
push
add
or
sub
mov
cmpsb
or
adc
add
xchg
adc
sub
es
mov
lret
inc
xor
xorps
jnp
add
or
cmp
lea
add
mov
sbb
lret
dec
or
addr16
or
mov
ja
test
fisttpl
add
and
add
ret
test
add
shlb
add
xor
cli
mov
cld
cld
int
test
inc
pop
std
mov
push
hlt
cltd
mov
imul
sbb
mov
cli
sbb
pop
xchg
inc
in
xchg
mov
jnp
pop
shrl
dec
or
dec
xlat
shll
aas
cld
and
pop
mov
cmpsl
add
xor
push
not
movsl
repnz
xchg
push
ds
lahf
mov
ss
ljmp
lods
cmp
xrstors
push
test
insl
sahf
in
push
std
pop
sub
inc
add
addb
and
repnz
inc
ror
xchg
cwtl
rol
pop
sbb
pop
mov
es
or
cmp
subl
test
movsl
mov
in
dec
add
sub
add
rcl
mov
mov
inc
mov
add
pop
inc
out
add
or
mov
mov
sbb
orb
cs
test
and
cmp
lds
cmp
adc
stc
xor
inc
pop
adc
insb
and
jbe
movsb
mov
sbb
pop
pushf
and
mov
sbb
lods
hlt
inc
loop,pt
cs
push
jp
cmpsl
jne,pn
insl
out
sbb
loope
roll
les
and
xor
add
xchg
pop
mov
icebp
mov
xor
lods
lock
sbb
mov
or
inc
mov
cmp
pop
subb
pop
lahf
xor
add
and
push
mov
inc
mov
push
jbe
mov
movsl
aam
or
int3
loope
dec
mov
push
out
push
adc
aaa
mov
std
aas
outsl
mov
pusha
cmp
and
in
clc
push
lret
inc
pop
sub
dec
add
je
jns
mov
shrb
mov
pop
add
idivb
cli
ja
pop
leave
pusha
xchg
sub
adc
enter
ds
add
inc
inc
popa
push
cmp
add
mov
push
popf
aad
inc
jbe
in
push
mov
adc
movsb
or
xchg
loopne
push
pop
sbb
cmpsl
pusha
ret
fs
mov
cld
pop
loop
imul
ljmp
mov
lea
jp
mov
andb
or
inc
pop
das
leave
xchg
xor
add
test
pushf
into
rcl
add
sub
pop
sbb
je
jb
add
bound
add
jb
cmp
ljmp
sub
cmp
jns
pop
dec
in
lods
push
add
lods
sub
xor
jno
add
jge
lldt
insl
pop
daa
dec
adc
xchg
mov
xchg
mov
arpl
pop
jae
cwtl
fs
add
xchg
dec
lahf
js
lea
test
add
mov
mov
fbld
push
inc
jmp
push
les
or
xchg
xor
pop
imul
add
xchg
push
pop
add
jle
sahf
add
ss
and
add
stos
push
ret
jns
add
sub
test
mov
push
xchg
push
ror
bswap
hlt
add
negl
or
add
push
loope
mov
and
jne
adc
pop
cmpsb
call
mov
push
inc
addr16
cmpsb
jb
gs
jb
pop
and
lods
fwait
add
push
bound
pop
pop
xlat
inc
or
nop
popf
scas
push
insl
xchg
jnp
add
fsubrl
and
mov
arpl
cmp
adc
push
jmp
add
or
jbe
inc
aam
popf
adc
lret
in
lods
adc
out
outsb
and
scas
jbe
mov
mov
or
add
cli
cmpsb
adc
add
add
sbb
popl
ret
add
add
jns
add
lret
sti
push
out
jbe
add
mov
ja
jl
dec
test
ret
push
inc
lahf
xchg
pop
xorl
enter
cmp
leave
mov
adc
stc
insl
lds
int3
push
jg
jecxz
sub
adc
push
arpl
add
jge
pushw
jbe
add
mov
pop
dec
push
inc
jl
pusha
add
jbe
outsb
cmp
jp
imul
imul
add
push
jl
nop
jp
lods
outsb
pop
xor
andb
adc
pop
ds
inc
outsl
insb
pop
gs
push
jg
jae
jge
lret
inc
not
fs
aad
and
popa
mov
add
jno
popf
jp
fstpt
mov
dec
sbb
outsb
dec
arpl
add
dec
add
push
push
data16
cmpsl
addl
mov
add
je
jl,pn
aad
mov
cmp
addb
fs
inc
xchg
mov
or
subl
inc
outsl
frstor
sbb
inc
add
push
nop
ja
jo
out
and
test
ret
xchg
jb
loop
pop
popa
clc
in
add
je
adc
sbb
push
test
jecxz
add
leave
xorb
or
sub
cmp
push
pop
mov
pusha
add
jecxz
pop
mov
push
push
mov
adc
popa
jbe
arpl
fildl
cmp
add
nop
lods
jbe
adc
aas
imul
push
cli
mov
sbb
xor
add
or
pusha
push
cwtl
sbb
and
arpl
cmp
popa
add
rolb
mov
adc
inc
jne
mov
push
mov
out
insb
pop
xorb
mov
fwait
mov
add
adc
enter
add
jp
sbb
jle
add
in
add
daa
cmp
xchg
adc
adc
add
push
jnp
js
fadds
adc
inc
xor
lods
xchg
loope
repnz
out
faddl
in
enter
pop
mov
lock
jae
jp
add
xor
jno
loopne
mov
enter
push
sbb
add
or
mov
das
std
add
lahf
in
xor
dec
push
out
aaa
sbbl
movb
cmpb
inc
push
add
out
mov
leave
or
lahf
bound
mov
xchg
adc
or
cmp
jo
mov
mov
bswap
add
pop
popf
pop
adc
stc
roll
mov
xor
fwait
loopne
push
enter
ret
cmp
pop
jmp
pop
push
mov
psubq
dec
add
cmc
inc
ljmp
jle
dec
sbb
xadd
add
into
and
fisubs
cmp
sahf
dec
pop
mov
push
mov
xchg
xor
and
mov
inc
adc
test
push
rclb
mov
sti
outsb
mov
inc
pop
cmc
pusha
adc
add
into
adc
repz
xor
and
pop
incl
ret
fimuls
idivb
call
jecxz
sub
xchg
pop
lods
cmp
mov
add
outsb
xor
call
jnp
xor
xor
push
enter
cmp
inc
ret
xor
in
dec
add
dec
sub
xchg
push
push
push
jle
clc
push
loopne
ljmp
sbb
out
movsl
adc
xchg
dec
pusha
push
lea
xchg
adc
xor
mov
stos
sbb
jg
add
insb
outsl
and
je
mov
fiadds
mov
jg
pop
add
int
adcb
xor
xor
daa
daa
testb
loop
pop
aas
adc
je
int
fstl
mov
cmp
stos
addb
into
loopne
mov
cmpsb
and
add
bswap
fisubrs
dec
dec
lods
test
and
sahf
lock
sarb
shr
aam
mov
cli
push
and
subl
aad
mov
mov
sub
mov
andl
in
add
rclb
inc
pusha
aam
fcoms
faddl
les
ja
add
inc
lock
dec
stc
loope
lcall
hlt
les
cld
inc
sbb
cmp
sarl
xchg
sbbl
lcall
sbb
and
adc
inc
add
icebp
sbb
mov
cld
jecxz
or
testb
add
aas
adc
cmp
lds
inc
push
xor
add
jnp
cmp
inc
addb
fmuls
mov
cmp
sbb
or
rclb
jp
lods
nop
clc
sahf
jl
jae
add
fldl
pushf
or
aam
imul
mov
leave
das
push
push
pop
rorb
mov
pop
add
jae
scas
fsubrl
fadds
jle
mov
pop
sbb
inc
or
adc
add
cmp
add
xchg
rorl
scas
add
mov
sub
dec
test
and
orb
or
pop
push
cwtl
sub
adc
mov
xor
add
comiss
roll
jne
add
je
outsl
add
and
adc
aad
push
jne
add
das
pop
pop
add
in
pop
in
lret
enter
push
mov
mov
add
push
out
aas
rolb
test
addb
cmp
jne
pop
addb
add
jge
push
push
pop
iret
adc
sarb
insl
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
fsubrl
add
sub
inc
mov
jmp
sub
stos
add
addr16
jl
mov
pop
or
pusha
cmp
sub
cmp
add
mov
or
xor
roll
push
sbb
sbb
push
and
mov
cli
dec
add
or
or
fildll
shl
add
call
xor
loope
and
xlat
push
mov
rcll
cmp
jle
sbb
mov
clc
inc
mov
mov
inc
imul
or
shl
mov
and
dec
lods
andb
mov
inc
fists
in
xchg
push
cmp
pop
outsb
fs
outsl
jne
or
add
scas
xchg
test
enter
call
rorl
hlt
popa
fadds
mov
cmc
xchg
jge
push
call
jg
and
mov
mulb
nop
mov
sar
es
inc
add
cmp
call
cmp
je
jnp
popa
add
xchg
lret
jge
lcall
test
in
je
sub
pop
fiadds
jnp
subb
mov
fadds
call
adc
je
add
dec
push
cmp
mov
or
je
add
stos
pop
repnz
add
mov
xchg
sarb
xor
jmp
fisubl
pop
jae
add
mov
pop
jge
add
cmp
loop
dec
call
push
fiadds
and
pop
clc
mov
push
out
or
lods
pushl
mov
add
xlat
mov
jo
push
cs
cmp
inc
and
lea
pop
pushaw
cmp
mov
lret
add
add
jg
enter
je
pop
cmp
cmp
push
adc
add
push
out
ds
leave
cmpb
out
iret
add
cmp
cmpsb
xlat
pop
or
rol
loop
xchg
outsl
dec
add
testl
add
movl
xorb
dec
imul
inc
mov
or
inc
addb
sbb
je
mov
cwtl
add
mov
xor
sahf
xchg
pop
push
bound
or
or
xchg
in
adc
decl
scas
roll
cs
popa
arpl
and
aad
jo
jle
add
dec
pusha
lahf
push
cld
roll
stc
cmp
addl
mov
dec
fwait
repnz
rorb
or
fs
add
stc
sub
push
mov
inc
sub
fldl
call
les
aad
ljmp
stos
mov
jnp
adc
xchg
adc
mov
pushf
mov
push
dec
sahf
imul
clc
pusha
push
mov
lea
xchg
and
repz
adc
and
or
sbb
nop
cld
sbb
add
cmpsl
sbb
pop
cltd
sbb
adc
shrb
call
test
mov
add
sub
add
jo
push
jle
jae
pop
test
ds
mov
dec
lds
lock
or
jo
pop
inc
jle
jmp
xlat
jo
rclb
fiaddl
add
inc
jmp
lea
scas
cmp
ds
cmp
mov
adc
jae
mov
add
add
imull
fildl
xchg
add
sbb
add
or
fildl
add
jmp
in
add
push
add
fwait
mov
lods
jp
cmp
lea
out
jo
add
add
andb
add
xchg
addl
mov
or
and
lea
or
andb
mov
rorl
popa
xor
mov
cld
inc
add
ret
call
lock
orl
jo
add
push
cmp
fistps
and
sub
sub
add
sub
add
es
adc
call
ret
jne
cmp
jae
test
ljmp
jbe
loopne
nop
in
js
mov
add
ret
add
pushf
lret
inc
or
dec
test
adc
push
dec
shrl
xlat
iret
push
and
inc
pop
fiadds
push
push
add
add
sti
or
inc
sbb
lea
or
sub
jbe
dec
sbb
xorb
add
movl
ret
aad
test
inc
push
mov
xor
jmp
adc
and
inc
inc
pop
add
and
push
ljmp
add
sbb
or
or
xorb
fs
cmp
mov
subb
push
dec
and
inc
inc
dec
xchg
lahf
add
lret
jb
adc
test
xor
mov
add
ss
add
sbb
push
mov
lea
add
add
cmp
and
pop
sbb
push
loope
jnp
add
cmp
pop
xchg
push
and
sub
sbbb
movsl
ret
imul
mov
or
cmp
outsl
pop
test
add
pushl
icebp
nop
jle
stos
add
sbb
loopne
fisubl
add
or
pop
loope
pushf
jle
push
sbb
cmpsl
in
dec
shlb
fsubs
push
js
dec
add
xlat
nop
add
xor
jns
fnstsw
add
adc
push
mov
lods
and
sbb
pop
add
sub
sbb
push
cmp
dec
xor
addw
inc
lret
adc
xchg
cmp
mov
add
lock
or
cmpsl
add
mov
xchg
std
imul
adc
push
sbb
mov
inc
xchg
lret
or
das
mov
add
adc
clc
mov
mov
jg
imul
loope
icebp
paddusb
mov
mov
or
add
add
lret
add
daa
dec
push
sub
sub
add
mov
xorl
daa
ja
popa
add
add
fyl2xp1
pop
shlb
mov
movb
push
xor
fwait
cmp
dec
add
jns
sbbb
leave
iret
adc
sarb
add
call
rcl
mov
pop
add
int
into
push
dec
fstps
cli
jmp
enter
fs
sub
pop
rclb
add
cmp
inc
cmp
sub
cmp
test
dec
es
dec
add
ljmp
in
add
ret
lods
mov
and
mul
add
pop
adc
dec
mov
xchg
pop
mov
ret
pxor
fisttpll
in
mov
jne
xchg
add
pop
aam
dec
sub
adc
dec
push
xlat
add
test
or
mov
xchg
xchg
sar
dec
in
mov
and
fdiv
lret
add
inc
fstl
pop
or
daa
test
and
nop
jbe
push
testl
mov
stos
loope
pusha
push
push
pusha
push
and
add
lahf
clc
jge
stos
inc
imul
mov
hlt
ja
add
js
inc
je
dec
fcomp
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
push
test
inc
inc
mov
add
sbb
in
add
rcrb
je
jbe
test
xchg
xchg
jmp
ret
sub
lock
leave
jecxz
cmp
call
inc
out
add
push
call
add
ds
imul
push
gs
roll
dec
add
push
pop
jb
movhlps
push
jmp
xor
mov
gs
push
hlt
mov
and
repnz
enter
add
das
out
daa
jl
scas
add
cwtl
jo
test
push
or
outsb
add
cmp
test
or
xchg
mov
aam
add
inc
lods
push
popf
jb
sub
jnp
cmp
cmpsb
add
cmp
add
imul
add
je
xchg
out
sub
inc
mov
and
add
dec
push
add
cmp
jbe
ds
sarl
int3
or
mov
add
stc
cmp
sbb
sub
arpl
cmove
push
push
pusha
or
iret
push
push
sahf
add
dec
push
dec
jge
les
jmp
xchg
rclb
rclb
jle
sbb
jnp
cmp
cmp
aad
push
mov
mov
mov
xlat
mov
sub
cmpsb
imul
call
fs
ret
rcll
scas
cmp
and
mov
mov
cmpsl
and
loopne
push
mov
xchg
push
arpl
inc
iret
pop
mov
add
dec
pop
mov
sbb
add
loop
mov
or
adc
ret
add
xchg
ja
mull
cmp
sbb
adc
mov
xchg
ret
loop
clc
je
add
sub
dec
jb
adc
adc
fildll
sarl
je
push
cmc
xchg
inc
push
cmp
aas
xor
fisttpll
or
xchg
push
adc
mov
repz
jmp
xor
pop
mov
pop
or
shll
xor
scas
inc
out
inc
add
xor
int
sarl
loopne
scas
mov
adc
inc
movsb
jo
stos
dec
leave
add
pop
or
lock
negl
add
and
push
test
rorb
xchg
test
into
test
push
add
jbe
popf
pop
mov
push
cmp
xor
inc
add
or
movb
cmp
adcb
push
test
sub
ljmp
sub
jo
es
aas
dec
push
add
pop
clc
jae
incl
sbb
je
mov
sub
jbe
sub
call
mov
sub
pusha
xorb
cwtl
out
mov
test
jb
adc
and
movsb
lock
pop
add
add
pusha
xorb
mov
mov
jmp
enter
cld
pushf
pop
movsb
cmp
add
mov
add
addb
or
leave
and
adc
pusha
scas
fstl
inc
dec
inc
or
mov
dec
xorb
stos
ret
jae
inc
imull
dec
and
xchg
mov
and
in
test
ja
jmp
divl
daa
jb
aas
lcall
popf
xchg
push
add
leave
ljmp
sbb
es
sti
add
lahf
stc
inc
add
loopne
ret
add
pop
aam
or
xor
call
add
leave
cmp
lea
or
push
pmulhuw
ret
dec
jbe
pop
add
push
mov
or
repnz
jmp
add
xchg
shlb
jmp
rolb
push
xchg
loop
push
xchg
stos
shlb
int
and
popa
leave
xchg
inc
inc
mov
dec
add
sbb
jge
adcb
jb
push
dec
mov
add
pop
or
inc
cmpl
jmp
jge
pop
xor
xchg
je
add
and
mov
movsl
popf
adc
or
add
and
sub
add
lea
inc
add
repz
stos
daa
mov
lock
add
xor
out
mov
add
incl
mov
and
mov
add
ljmp
sub
adc
mov
aam
push
addr16
add
int3
call
enter
mov
push
sbb
push
dec
sbb
push
in
mov
cwtl
lock
inc
mov
sub
cmp
xchg
pop
xchg
sbb
mov
fmull
cs
jbe
add
and
rclb
xchg
add
hlt
pusha
cltd
xchg
push
add
fbld
leave
imul
add
xchg
gs
mov
dec
cltd
dec
xor
mov
mov
in
add
mov
jo
popa
dec
cmc
pop
add
aas
push
and
push
cs
sub
jno
pop
pushl
jge
arpl
add
ja
pop
add
sub
cmpsl
or
or
jbe
or
hlt
add
loopne
cmp
fidivl
out
or
scas
cld
cmp
pop
mov
cltd
rcll
pop
aad
loopne
jl
enter
sarl
enter
bound
jns
jp
addb
popa
loope
out
and
adc
push
mov
enter
test
add
and
les
std
mull
cmpsb
scas
cmp
pop
jg
inc
mov
mov
push
add
lret
call
add
jae
pop
mov
test
pop
lahf
jo
inc
or
push
dec
add
decl
mov
sub
sub
sub
fwait
jo
add
and
lret
ja
or
cmp
je
mov
mov
mov
sbb
rolb
mov
gs
add
jge
adc
sub
or
into
shlb
add
jmp
add
add
lahf
jb
jae
add
jge
cld
rolb
add
ss
jb
xor
push
inc
add
sub
add
adc
pop
jne
or
rolb
dec
mov
ds
add
daa
push
cmpsb
adc
cmp
pop
test
push
or
dec
out
mov
mov
addl
xor
add
ljmp
lods
push
movsb
nop
dec
sbb
or
add
aam
xchg
push
push
or
push
dec
aad
cld
dec
sub
inc
pusha
add
fs
jl
push
fldenv
cmpsb
adc
inc
mov
pusha
mov
jae
mov
sarl
addl
mov
call
add
mov
sbb
jne
add
adc
mov
in
push
xchg
or
sbb
mov
pop
xor
mov
in
inc
or
out
testl
cmc
test
sub
adc
aam
jg
xor
mov
sbb
adc
mov
and
cmp
xorb
insb
add
ja
sbb
rorl
cwtl
xlat
cmp
xchg
orb
fucomip
cwtl
cwtl
cli
add
jbe
mov
cmp
sbbb
inc
add
dec
xor
xchg
imull
and
roll
clc
pop
xchg
mov
add
out
cwtl
mov
mov
int3
cmp
cmp
andb
jnp
fcomps
in
pop
xor
sub
sub
bswap
jle
push
pop
imul
dec
flds
bound
and
rolb
cmpb
pop
aas
inc
and
test
pop
fisubrs
sbb
add
cmpsl
xchg
pushf
add
push
test
mov
pop
nopl
lret
into
jns
sub
mov
jl
mov
inc
mov
ret
hlt
decb
cmp
arpl
insb
add
orb
cmpsb
dec
pop
clc
shrl
stc
cmp
adc
fstpl
aam
lods
popl
dec
pop
lret
or
and
mov
push
push
popa
jae
xorb
ss
outsl
dec
add
dec
outsb
je
and
testl
push
and
cmp
arpl
int3
iret
pop
sahf
dec
popa
outsl
and
ds
mov
xor
in
jl
push
add
in
pop
push
mov
addl
inc
xor
push
xchg
or
jle
add
jmp
push
add
or
lret
icebp
xlat
push
shrl
in
mov
jne
call
jmp
inc
add
jmp
iret
les
notb
lahf
pop
sub
je
xor
shl
add
inc
mov
cmp
push
sbb
mov
dec
dec
test
fstpt
idivb
je
adc
adc
mov
sbb
xor
aad
insb
sub
cli
add
inc
xlat
cmpsb
mov
cld
push
and
jl
and
add
cmp
rol
in
add
jae
mov
pop
xchg
or
jp
inc
inc
add
gs
mov
dec
add
push
sub
mov
mov
arpl
or
jbe
cmp
cltd
mov
inc
add
cmpl
or
sub
enter
push
sbb
sarb
repz
adc
and
or
lea
call
pop
or
cmp
xorb
jp
je
fcompl
inc
fcom
clc
adc
call
mov
fiaddl
adc
dec
add
hlt
test
fcoms
push
imul
xchg
dec
adc
add
fidivrs
rolb
sbb
pushf
aad
call
lds
cmpsb
add
jecxz
imul
add
scas
sbb
pop
cltd
mov
in
mov
or
or
xor
and
push
jmp
data16
aaa
add
push
adc
adcl
movsb
sub
fmuls
sahf
sbb
inc
sub
lahf
adcl
lea
mov
mov
test
mov
outsl
outsb
clc
mov
cltd
jmp
jge
add
add
or
cmp
add
jmp
and
inc
pop
dec
stc
inc
add
mov
add
add
cltd
mov
aas
mov
jle
add
aam
lcall
cmp
mov
inc
pop
fwait
roll
leave
push
pop
or
pop
sete
add
dec
lods
loop
je
adc
add
xchg
paddq
movsl
fdivrs
call
clc
filds
sbb
pcmpeqb
push
mov
pop
lahf
icebp
pop
shrb
dec
lock
aaa
push
sbb
and
push
dec
xor
cmpsl
nopl
xchg
mov
movb
notl
nop
fisttpl
movsl
mov
incb
and
outsb
sub
push
xor
sbb
lock
or
add
mov
cli
call
add
mov
add
loopne
or
ljmp
es
adc
add
out
pop
push
or
outsl
fwait
ret
mov
std
add
and
fiaddl
add
push
pop
and
data16
sbb
xlat
addb
ficompl
ret
mov
mov
push
testl
pop
jg
aas
add
adc
and
cmp
sbb
inc
sbb
ja
cld
sub
add
stos
loope
aaa
pmaxsw
dec
add
dec
loopne
jb
cli
dec
add
ret
jl
inc
cmpb
jle
in
pop
jmp
cld
or
pop
adc
add
add
xor
push
ret
add
out
dec
add
sar
imulb
add
add
pop
loopne
pop
sbb
sbb
or
jo
dec
rolb
andb
rcr
or
aaa
incl
add
in
adc
loopne
mov
pop
pop
stos
daa
hlt
aas
incb
add
cli
xchg
lea
stc
cmc
add
adc
add
lods
dec
sub
mov
das
add
in
push
or
icebp
pushf
mov
cmp
addb
sub
fsubrs
add
imul
sub
lock
stc
gs
lods
sar
ljmp
cmp
sub
push
xchg
xorl
in
pop
nop
adc
andb
xchg
xchg
scas
sub
arpl
xchg
add
sbb
cs
sarb
or
add
add
cltd
or
mov
fwait
andb
mov
add
sbb
or
mov
add
orb
frstor
rolb
fld
test
scas
mov
sub
pop
ss
mov
xor
inc
cmp
xchg
or
and
test
add
sti
les
push
add
fstpl
add
xchg
pop
les
das
mov
je
leave
adc
scas
lods
xchg
jg
add
mov
adc
fimull
enter
enter
add
xchg
sbb
loopne
add
mov
push
mov
lahf
push
les
mov
rolb
imul
in
scas
rol
add
pop
popf
js
gs
add
call
lahf
lcall
push
mov
adc
lods
ds
pop
ss
inc
sbb
lret
mov
mov
lcall
in
add
adc
fstl
cmpsb
mov
xor
jnp
repnz
pusha
icebp
incb
ret
add
cld
or
inc
addl
pop
pop
iret
push
add
fwait
dec
imul
mov
pop
mov
inc
inc
out
icebp
es
mov
mov
daa
jo
testb
sbb
pop
xchg
jge
cmp
hlt
push
add
icebp
fldl
xor
movsl
cmp
push
sub
iret
and
jle
loopne
aad
jge
addl
sub
lea
and
movsb
push
cmp
inc
sub
sbb
inc
sbb
xor
add
mov
jle
aam
scas
ss
pop
pusha
shrb
or
aaa
add
testl
jmp
add
pop
cmp
add
test
fsubs
imul
mov
ud1
cmp
lea
dec
sub
popf
add
mov
mov
xor
sub
cmp
or
mov
mov
mov
enter
ret
lock
mov
cmp
pcmpeqw
adc
fdiv
add
jecxz
jle
mov
add
aaa
shr
loop
cmp
and
or
fcoml
jl
rcll
insb
adc
jns
add
cmovp
cmpsb
or
mov
nop
aam
bnd
pop
lahf
pop
stos
and
mov
out
lret
jb
aam
stos
add
xor
push
xlat
inc
or
shr
inc
xchg
movmskps
sbb
and
test
in
fmuls
stos
roll
flds
cltd
iret
adc
rclb
sbbl
mov
andb
cmp
and
and
nop
popf
lcall
dec
add
into
cld
push
mov
fists
mov
add
popl
stc
xor
adcl
aam
add
rorb
inc
xor
lods
add
sub
inc
pop
push
ljmp
mov
dec
pusha
add
fdivl
lcall
lret
loopne
je
adc
or
add
dec
sbb
es
add
ljmp
add
lea
rsqrtps
movsl
arpl
mov
add
popa
sbb
cmp
and
out
add
shr
add
movl
cmpsb
pop
mov
xchg
sbbb
sbb
sub
jle
movsl
add
dec
push
pop
dec
pusha
pop
sarb
add
or
hlt
add
pusha
or
adc
pop
daa
sbb
aam
add
pusha
jo
andb
add
xchg
add
and
add
mov
lret
xorb
or
or
or
xor
adc
enter
push
mov
push
mov
push
cmp
jb
push
push
add
leave
sbb
add
jo
xchg
xor
add
shl
sbbl
lock
add
add
das
pop
je
out
pop
not
add
jb
daa
inc
adc
add
pusha
ftst
pop
mov
iret
and
sbb
fwait
popa
mov
pop
pop
mov
stos
lods
jmp
xchg
add
xchg
imul
jg
dec
mov
cwtl
sbb
mov
sub
sbb
mov
stos
pop
mov
test
xchg
and
add
push
or
cmp
mov
xchg
or
cmp
lds
mov
xchg
inc
add
ret
adc
pop
or
jno
xor
mov
push
daa
adc
xchg
loopne
rorl
add
add
sbb
jno
pusha
add
mov
jle
loopne
add
add
cmp
cwtl
jge
add
and
jl
mov
cltd
push
mov
pushf
idivb
rcll
into
and
add
mov
mov
int3
sbb
add
fstl
and
cwtl
lods
cli
lret
and
add
loope
fmulp
call
add
dec
test
sbb
lds
or
sub
xchg
inc
add
pushl
add
pop
xor
cwtl
rcrb
and
dec
addb
leave
add
mov
shll
xchg
and
ss
mov
or
xchg
cmp
xorl
cmp
mov
add
add
add
in
push
jo
sub
jb
movsb
cmp
mov
inc
mov
add
bound
loope
xchg
dec
pop
pause
in
outsl
xor
jge
pop
stc
roll
daa
js
arpl
add
mov
cmp
pop
and
and
xchg
sub
enter
mov
add
mov
inc
push
sub
or
xchg
icebp
jmp
add
xor
stos
cwtl
mov
xor
or
lock
and
add
or
fadds
aaa
dec
jns
and
int
mov
ret
xor
pop
call
cs
add
les
jmp
sub
imul
aad
inc
mov
jo
nop
insl
add
mov
std
add
jp
shl
add
fiadds
clc
cmp
inc
add
push
push
aaa
inc
movsb
inc
mov
sbb
jo
mov
xor
or
adc
inc
rolb
add
add
jmp
push
add
push
inc
pop
add
lahf
jne
mov
leave
add
or
push
cwtl
push
inc
inc
mov
mov
shl
movsb
clc
pop
push
pop
or
pusha
scas
add
dec
cli
add
jl
add
daa
and
sub
cmp
sub
lea
push
add
pop
int
aad
shll
add
push
push
xchg
push
add
xor
rorb
adc
add
adc
lea
mov
xchg
push
mov
movsb
int3
xchg
or
mov
xor
mov
add
stc
testb
fcom
mov
nopl
xor
inc
jmp
jne
aas
sub
pop
pop
lods
fdiv
repnz
cmp
rorb
and
add
pusha
dec
sub
ljmp
xchg
or
sub
push
pop
in
add
ja
jno
movb
and
inc
dec
xchg
cmpsl
in
rolb
lret
and
popf
or
add
rorb
xchg
xchg
inc
sbb
xchg
lock
andl
adc
mov
lods
das
or
jb
jnp
dec
sbb
cmp
add
rclb
cld
mov
adc
dec
sub
testl
sub
aas
add
mov
in
mov
int3
jo
add
arpl
mov
push
fadd
addr16
popa
push
sbbb
xchg
push
jae
add
fisttpl
push
add
stos
xor
jae
cs
and
or
rcrl
mov
adc
pop
icebp
out
inc
mov
dec
jg
add
mov
fwait
jb
xor
add
adc
sbb
adc
mov
das
jle
push
into
cmpsl
xor
int3
int
iret
ror
ljmp
imul
sub
mov
add
pusha
ja
pop
les
aas
xchg
scas
push
xchg
cmp
cld
cli
add
incl
jb
jno
add
pop
add
push
add
cs
and
add
sub
or
mov
mov
daa
dec
xor
mov
clc
add
xchg
mov
iret
jns
sub
or
out
sbb
int
inc
cmp
and
cwtl
jb
add
std
add
sbb
jmp
pop
xorl
sub
inc
inc
mov
in
ret
movsb
mov
sbb
add
test
add
add
dec
sbb
je
loop
mov
jmp
sbb
enter
pop
pop
mov
pop
push
in
fldl
bound
nop
push
adc
mov
add
cmp
loopne
jae
xchg
sbb
inc
roll
push
verr
fisubl
jnp
xchg
and
adc
or
sub
cld
imul
outsb
sub
add
icebp
testb
subl
jae
add
int
dec
or
lret
movsb
add
fnstsw
popa
cli
fcoml
adc
or
lret
mov
push
inc
orl
pushf
das
add
loopne
or
shlb
mov
mov
jo
push
out
test
xchg
fs
outsb
xchg
addr16
add
and
add
push
lods
ljmp
push
pusha
call
add
or
je
xchg
bound
shlb
ret
add
mov
clc
rolb
aas
push
cmp
ret
pop
push
sub
add
lods
sbb
repnz
push
jnp
mov
or
rol
imul
js
pusha
inc
pop
inc
adc
aad
mov
insb
jno
dec
add
das
mov
and
xor
and
xor
jg
cmp
stc
pushf
bswap
or
jge
xchg
adc
data16
pop
flds
je
lcall
lock
push
loopne
and
add
loop
adc
add
and
das
cmp
inc
verw
or
adc
mov
push
push
into
aas
cmp
movsl
xor
mov
xchg
inc
test
sbb
fiaddl
add
push
or
mov
in
add
mov
sub
add
inc
jp
fimuls
lds
clc
jge
test
inc
sbb
mov
sbb
sbb
xchg
into
push
inc
sbb
add
or
test
scas
cmp
mov
mov
add
or
pop
nop
hlt
dec
push
js
add
ja
sbb
negl
sub
add
es
xchg
sbb
sbb
push
inc
jno
inc
adc
jg
in
adc
xchg
aas
jl
push
and
add
push
or
notb
hlt
jmp
sub
pop
sti
and
or
inc
pop
sub
loop
cmc
addb
pop
jge
or
push
add
xchg
add
leave
call
pop
inc
or
stos
push
and
movsl
add
mov
cltd
add
aas
shlb
dec
ret
jg
mov
add
flds
xchg
xor
clc
jecxz
add
shl
jmp
addb
lock
pop
jle
lds
hlt
fadd
mov
adc
cmp
xor
and
add
icebp
pop
xchg
hlt
xchg
add
mov
sbb
lods
jle
pop
or
ljmp
xor
and
dec
jnp
adc
mov
je
push
inc
inc
pusha
jle
pop
push
xlat
pop
ss
lock
sub
pop
in
add
popa
jae
jo
call
mov
sbb
xor
rorb
sub
sahf
push
sub
outsb
dec
add
cld
add
mov
mov
pop
cmpl
jmp
cmpsl
cld
sti
add
bnd
mov
and
xchg
add
sub
popf
and
adc
mov
jp
ret
inc
jmp
xchg
mov
mov
jecxz
mov
add
xchg
out
jl
add
aad
add
lods
add
mov
xor
clc
adc
dec
ljmp
xchg
add
xor
jl
add
hlt
rcll
and
movsl
clc
data16
insb
cmp
cmp
std
xchg
ret
or
mov
test
push
lods
stc
fsts
aam
ds
add
push
nop
jmp
add
fisttps
push
adc
stc
add
jae
lds
das
in
popa
movb
sub
or
cltd
cmp
ret
testl
xlat
jecxz
enter
xchg
notb
aam
icebp
mov
movsl
jae
mov
add
or
and
add
and
add
and
add
sbbl
cld
add
cs
not
inc
mov
push
test
sbb
and
jle
in
or
push
jne
inc
jg
shll
bnd
mov
pop
cmovg
pop
fildl
test
fwait
jmp
cmpsl
gs
adc
repnz
test
push
mov
mov
dec
or
movb
cmp
ds
pop
sub
or
mov
and
jnp
loopne
cwtl
pop
add
negb
mov
jbe
add
jno
das
inc
add
add
or
rcr
in
loopne
sahf
ja
dec
daa
mov
add
test
jb
jae
push
mov
incl
fcomps
fistpl
lods
add
mov
fmulp
xor
stos
jo
mov
mov
push
xchg
mov
and
lds
add
das
aam
and
add
test
adc
testb
mov
dec
rorb
mov
mov
in
clc
jnp
jns
add
sub
add
int3
pshufw
adc
nop
int
cld
mov
cwtl
pop
mov
addl
jne
inc
add
inc
clc
and
add
inc
data16
cltd
mov
xchg
push
add
daa
cmp
push
rclb
sbb
or
mov
and
add
push
mov
jo
add
pop
cs
rcl
or
cltd
add
sbb
addb
mov
test
sub
add
push
stc
push
and
xchg
inc
cld
adc
add
orb
adc
sub
pop
or
and
std
mov
mov
xchg
inc
inc
test
call
cmpb
pop
ret
fildl
xor
cmp
add
or
ja
add
inc
xchg
out
pop
sbb
pusha
and
outsb
jb
pop
imul
xor
push
or
rcrb
add
lock
sti
daa
and
sub
add
or
inc
sub
mov
dec
ds
mov
ret
ljmp
mov
push
xchg
cmpsl
jl
add
add
and
shll
call
nop
add
cs
jne
les
inc
dec
mov
adc
in
imul
add
jg
pop
add
in
and
add
fs
addl
outsl
je
xor
mov
aam
int3
pop
push
pop
inc
mov
adc
mov
dec
lahf
push
mull
addb
and
ds
sbb
jo
mov
xchg
pop
pop
enter
repz
lcall
dec
aas
dec
sbb
jmp
sbb
or
sbb
inc
xchg
shrl
jmp
pop
mov
pop
out
cmp
or
cmp
pop
mov
xchg
push
filds
sbb
dec
jl
xchg
add
add
shll
dec
int3
inc
movsl
and
repnz
xchg
add
lea
jo
rclb
in
push
cltd
rolb
or
sub
mov
pusha
rclb
mov
inc
mov
repnz
icebp
out
sbb
xor
mov
aad
push
add
dec
mov
dec
inc
js
jnp
mov
faddl
imul
out
adc
add
addl
lret
add
or
sub
leave
xchg
push
push
add
aaa
xchg
cmp
shll
dec
jle
jb
add
cmp
je
stos
push
jecxz
and
pop
xchg
add
sbb
dec
mov
mov
xchg
push
pop
pop
jae
rclb
into
or
loop
push
add
sub
sbb
test
add
mov
adc
fs
or
cld
test
cmp
lock
mov
or
test
jp
cmp
mov
test
push
push
adc
xor
fildl
inc
iret
pop
mov
sbb
mov
addb
imul
incb
xor
sbb
push
jae
adc
adc
add
xor
cmc
test
mov
imul
call
gs
cmpl
pop
ret
or
loop
add
or
mov
aad
shlb
stc
jne
add
cmp
pop
stos
nop
shrb
adc
popa
xchg
sub
hlt
in
cwtl
fiadds
loope
pop
sub
inc
inc
add
mov
sarb
mov
test
add
test
je
or
jne
inc
add
aam
lcall
or
nop
add
sub
push
ljmp
xchg
arpl
add
das
jmp
fcomp
test
clc
add
cltd
mov
inc
xor
or
xorb
sbb
jo
add
je
pushl
or
push
rolb
inc
inc
mov
add
mov
xchg
mov
out
repnz
xchg
pop
mov
pusha
dec
jmp
pop
fcmovne
adc
mov
cmpsb
ret
sbb
sub
xlat
mov
in
add
cld
add
add
or
dec
xchg
pusha
add
or
or
inc
pop
or
adc
ret
add
dec
or
or
add
add
std
xor
rcr
adc
jmp
cli
mov
mov
add
nop
daa
ja
add
xchg
xlat
xchg
add
add
add
lret
or
adc
add
fsubrs
dec
cmpsb
leave
push
add
xlat
out
dec
mov
sbb
dec
adc
xchg
push
adc
adc
pop
andb
mov
into
inc
pop
jo
lcall
xchg
fsubrl
ret
xor
mov
fstpt
push
mov
lret
or
xchg
add
adc
or
iret
out
lock
mov
and
add
insb
dec
fs
stos
lock
ret
add
push
adc
push
cmp
pop
sti
add
into
repz
sub
add
cmp
add
mov
andb
incl
jns
gs
push
fnstcw
in
jl
aaa
xor
std
add
lods
jne
fcmovnb
dec
gs
add
or
and
lea
xchg
mov
or
add
pop
mov
pop
sbb
clc
test
push
add
rorb
add
and
out
in
lahf
and
add
stc
xchg
dec
sbb
divb
mov
insb
push
push
add
fisubrl
push
mov
dec
jmp
fcmove
mov
hlt
out
imul
mov
flds
nop
shlb
ret
and
inc
pop
add
jae
jmp
pusha
or
add
mov
clc
ds
cmp
push
les
loopne
sub
sub
xchg
xor
in
sbb
incl
mov
pop
xor
jae
pop
in
data16
sarl
add
adc
dec
push
pop
cld
in
mov
fdivrs
mov
add
cmp
push
jl
add
mov
rolb
or
adc
sbb
or
jl
addb
fmull
repz
call
loope
xor
add
fs
enter
lret
add
add
xor
adc
ds
add
inc
and
sbb
add
inc
rclb
test
fidivs
repz
mov
add
daa
js
jno
cmp
xchg
loop
xlat
jmp
fcomip
add
imul
push
jo
adc
jp
mov
mov
mov
sbb
sub
dec
sub
fcoml
fcoms
mov
pop
inc
push
out
negb
cmp
inc
aam
add
in
or
inc
or
add
dec
test
dec
adc
lods
xor
and
test
xchg
or
mov
cld
cmpb
cltd
jp
xchg
add
out
sub
dec
dec
add
mov
fdivrs
mov
fisubs
out
nop
cmpsl
cwtl
jnp
sub
fdivs
adc
add
call
outsb
hlt
mov
mov
inc
je
sub
es
or
sub
add
mov
jmp
push
xor
int3
ja
fs
xor
or
fadd
add
and
rcll
in
out
mov
enter
jecxz
movsl
jge
inc
call
and
push
add
or
pmullw
add
sahf
inc
dec
fisubs
filds
into
test
or
in
sub
xor
hlt
enter
push
pop
movsl
ja
add
mov
and
push
and
inc
and
sbb
push
cmp
inc
cmp
jne
rolb
and
call
add
test
incl
and
push
out
add
mov
jbe
add
lock
or
dec
mov
xchg
popa
jae
ja
jb
in
add
cld
mov
sub
insb
rorb
adc
jae
mov
mov
jb
out
daa
and
addr16
orl
repz
add
pop
faddl
test
aam
inc
adc
aad
cli
loop
add
mov
mov
pop
fiadds
xor
cwtl
rorl
outsl
pop
sbbb
cmp
rcll
xchg
sbb
add
dec
dec
add
mov
mov
fs
xchg
pop
je
dec
mov
cmpl
push
mov
adc
pop
sub
xchg
xchg
pop
add
inc
add
cmp
jno
add
adc
lods
and
dec
add
in
push
add
jne
cmpsb
adc
dec
nop
lods
dec
je
jo
add
lods
inc
push
pop
cltd
pop
dec
loopne
pop
add
xchg
icebp
mov
add
mov
rcrb
std
or
test
and
pusha
out
xor
xor
int
movsb
sbb
jecxz
push
sbb
adc
add
add
add
jo
pop
push
xor
add
int3
mov
shrb
or
rol
popa
mov
roll
dec
bound
pop
push
popa
dec
jb
add
in
call
aaa
push
adc
adcl
jo
dec
xchg
add
mulb
pop
daa
dec
and
sbb
pop
add
mov
out
mov
cltd
ror
xchg
and
xchg
and
outsl
int3
cmp
bound
mov
add
inc
pop
cs
push
add
mov
movb
xor
xor
mov
and
ror
fadds
jecxz
adc
add
addb
xor
dec
and
int3
xchg
cli
mov
pop
jne
dec
jmp
add
iret
cli
stc
in
add
scas
xchg
call
add
lcall
add
adc
arpl
inc
adc
jns
push
imul
push
mov
std
jns
insl
sbb
arpl
jmp
mov
fstps
sbb
inc
psubw
mov
mov
mov
daa
mov
sbb
sbb
leave
xor
sbb
ret
imul
loopne
in
cmp
fcmovbe
aaa
mov
jl
call
dec
sbb
push
test
stos
addb
adc
add
mov
jo,pt
iret
shl
out
hlt
enter
inc
or
lock
and
aas
inc
jne
lea
mov
adcb
jg
fmuls
imul
das
sbb
fstsw
cmp
test
and
add
cmp
adc
mov
shrb
clc
pop
ja
add
sub
dec
pop
fldt
adc
dec
jge
add
and
xchg
cs
sbb
cmpsb
ljmp
mov
and
xchg
xchg
call
aad
sbb
clc
xlat
mov
jl
inc
dec
jecxz
jle
mov
roll
bound
sbb
adc
inc
dec
jl
lahf
push
add
and
cld
test
add
dec
mov
add
movsl
movb
pop
jge
and
add
jbe
add
stos
imul
std
xor
dec
push
testb
rcrb
push
add
cmpsb
enter
adc
add
pop
dec
add
mov
add
pop
aam
pop
lcall
scas
jle
jno
adc
popf
jns
or
sbb
data16
outsb
and
sbb
cmp
inc
push
inc
mov
adc
ds
jge
mov
inc
mov
sub
push
fidivrl
subl
push
stc
jecxz
mov
sub
call
xchg
add
loopne
xor
or
and
mov
rorl
lahf
mov
pop
ljmp
popa
call
sarb
inc
call
addr16
adc
les
clc
or
ja
sbb
outsb
mov
mov
jl
mov
gs
movzwl
add
cmp
or
cmpl
pop
add
das
loopne
inc
xor
add
in
nop
xchg
shll
pop
lea
out
lret
push
jecxz
clc
mov
sbb
jmp
hlt
popl
sub
add
pop
test
fs
test
lods
call
mov
push
hlt
push
mov
jmp
into
or
jle
add
icebp
add
sbb
ret
sbb
add
cmpb
adc
or
mov
pop
inc
add
mov
mov
and
push
addb
or
jns
loope
xor
add
mov
cwtl
push
add
add
add
fmuls
xchg
adc
mov
add
popl
sub
adc
push
sbb
pusha
mov
inc
xchg
aaa
in
lcall
mov
push
decl
push
hlt
cwtl
daa
lcall
push
es
test
jo
orb
xchg
xor
inc
adc
add
adc
iret
add
push
cmp
movsl
pusha
mov
enter
js
xor
push
fsts
ret
add
adc
add
fcoml
push
xchg
sub
sbb
add
shrl
sub
sub
cmp
add
les
add
dec
add
in
fmuls
scas
fsub
faddl
fucom
shl
jecxz
fisubrs
in
pop
jmp
lods
adc
push
or
test
aad
pop
xor
aam
mov
jae
jns
ljmp
adc
add
pop
scas
dec
ljmp
xchg
stos
testb
aaa
sbb
push
add
iret
aam
ljmp
in
lock
daa
xchg
jmp
adc
xchg
andl
insl
add
push
outsl
fmul
xchg
rolb
in
add
call
and
int
cmp
call
insb
inc
stc
add
push
loopne
jno
add
out
mov
jo
mov
addb
testb
ljmp
pop
add
loop
scas
nopl
icebp
call
mov
jnp
pop
pcmpeqd
add
cmc
es
arpl
mov
add
mov
nop
inc
pop
jl
sbbb
insl
jo
adc
imul
push
add
adc
jmp
push
insb
imul
scas
sarb
xchg
ljmp
ret
in
push
stos
fmull
dec
cmp
push
jb
adc
mov
xchg
orb
cwtl
ljmp
mov
add
cmpsl
popf
pop
push
add
add
sbb
pop
or
pop
pop
push
sbb
aaa
push
push
out
add
jmp
daa
inc
add
test
xor
mov
popf
in
add
jno
movsb
jne
adc
add
shlb
mov
mov
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
in
iret
or
add
cmc
push
icebp
int
in
testl
data16
pop
add
cs
jmp
out
fisubl
push
push
mov
lahf
dec
fcmovnu
pop
add
add
std
xor
add
pop
movsl
cmpsb
outsb
push
mov
lods
pushf
mov
and
loopne
jmp
ljmp
add
je
jmp
mulb
dec
add
aaa
cmp
lock
mov
xor
ret
jmp
dec
mov
test
xor
xchg
jns,pt
les
shlb
mov
mov
mov
mov
xchg
sub
push
sbb
add
jo
push
in
loope
push
pop
push
popa
mov
push
mov
jno
xor
ds
pop
std
pop
xor
int
pop
lea
mov
xor
lcall
subl
inc
mov
sbb
add
mov
or
add
cmpb
mov
js
add
pop
cltd
push
pusha
pop
xor
jbe
stc
cmc
pop
mov
adc
fiadds
mov
add
sbb
cltd
mov
xchg
aas
mov
jmp
test
andb
fnstenv
in
adc
add
test
jns
jge
xchg
cwtl
xchg
test
xchg
xchg
push
pop
dec
dec
lods
push
pop
shr
mul
jl
add
xor
pop
test
sbb
jmp
jae
ror
push
mov
ficoms
xor
sbb
jecxz
pop
add
sbb
or
adc
jge
stos
pop
pushf
push
cwtl
lret
out
jo
outsb
fs
add
popf
adcb
cmpsl
pop
jmp
icebp
lock
mov
sbb
dec
inc
cmpl
popa
repnz
sahf
dec
add
cld
cmp
and
cmp
xor
dec
scas
jmp
out
jmp
jne
int
push
test
movsb
in
mov
es
ds
popf
addb
add
jmp
test
mov
cmp
cmp
shrb
add
xchg
fiadds
mov
mov
gs
imul
add
rclb
pop
sbb
or
cmpb
push
push
iret
flds
pop
test
sahf
lods
incb
lcall
fadd
lret
loop
movl
sahf
add
movsl
mov
add
daa
insb
jbe
adc
mov
mov
loop
gs
pop
add
fstl
mov
jl
nop
test
fsubl
add
adc
clc
xchg
xor
fwait
pushf
dec
push
test
add
jg
loope
add
loop
cld
push
arpl
mov
xchg
aad
pushf
rcl
inc
rol
les
jae
xor
mov
mov
add
mov
adc
out
pop
add
adc
ja
repz
rcrl
loop
add
add
mov
inc
add
pusha
psllw
enter
xchg
mov
into
addb
mov
stos
or
pusha
sub
pop
mov
call
rcl
aam
pop
aad
fdivrs
add
jecxz
mov
ret
dec
add
xchg
xchg
jne
sti
mov
cli
pusha
stc
or
clc
fs
cld
adc
fnstcw
jno
add
fadds
popa
xchg
sub
or
out
out
mov
leave
add
sub
xchg
or
xchg
daa
imul
or
mov
sbb
jbe
mov
xchg
add
leave
lret
mov
and
mov
add
inc
ja
js
dec
add
in
ret
or
mov
popa
add
lea
add
mov
in
out
fldl
adc
jmp
cmp
cmpsl
push
mov
mov
incb
pop
lret
or
cmp
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jge
add
cmp
add
pop
je
pushf
addb
sbb
inc
inc
add
mov
cmp
mov
adc
pop
add
mov
lods
out
ja
and
push
mov
mov
add
mov
jnp
add
mov
xor
mov
adc
mov
test
adc
loopne
sbb
xor
jbe
jp
jae
sub
or
cwtl
xor
sbb
push
add
jle
popf
mov
xor
fsubp
lcall
pop
add
cmpsl
call
ret
rolb
lea
loop
add
andb
cmp
fwait
add
mov
rorb
daa
or
xor
mov
jns
add
addr16
add
mov
cmovs
push
jbe
mov
add
fldt
jl
mov
sbb
div
test
xchg
int
mov
add
add
dec
xchg
add
mov
arpl
pusha
imul
insb
sub
in
sbb
push
call
repnz
sbb
pushf
cltd
add
mov
xor
stos
in
cmc
jne
push
mov
adc
ficoms
lods
add
jge
add
call
push
stos
cmp
stos
pushf
into
cmp
push
push
push
mov
xchg
cmp
cmpsb
lods
jo
add
xor
inc
push
mov
push
aaa
clc
lock
call
lcall
jo
add
lods
or
xor
xchg
icebp
in
ljmp
out
sub
adcl
cwtl
out
add
mov
ret
jno
fmuls
roll
stos
xor
mov
sbb
mov
cmp
movb
add
ljmp
ret
add
dec
gs
or
add
xchg
mov
movsb
add
mov
xchg
adc
pop
loopne
out
push
push
or
cwtl
add
pop
ja
sbb
fildl
scas
lods
scas
inc
dec
dec
jne
add
movsl
movl
ror
orb
add
xchg
mov
xchg
loopne
pop
mov
lcall
hlt
out
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
add
in
push
sub
inc
inc
sbb
inc
pushf
inc
add
addl
out
subb
add
push
jo
cmp
pop
pop
sbb
daa
xor
inc
dec
xchg
cs
xchg
xor
add
inc
inc
jne
fimuls
testb
jecxz
dec
test
lods
test
sbb
loopne
lahf
adc
push
cmp
dec
add
call
jbe
in
sub
fdiv
push
pop
sbb
outsb
jno
vpmulhuw
add
cmp
repnz
add
stos
stos
or
add
or
xchg
lea
dec
insl
dec
or
mov
je
and
lret
int3
sbbb
pop
add
pop
jg
jns
push
iret
out
gs
fdivrs
pushf
test
js
mov
push
mov
push
outsb
mov
orb
add
in
roll
imul
pop
jmp
inc
rol
and
idivb
inc
loopw
and
call
jo
dec
add
or
dec
add
push
int3
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
add
call
clc
jmp
pop
das
inc
dec
push
mov
test
scas
enter
add
jge
cmpsb
add
pop
add
sub
lods
sbb
fiaddl
shll
dec
xor
pop
push
cmp
gs
into
mov
push
add
push
aas
xor
and
mov
xchg
add
and
pushf
mov
call
rcl
test
lods
adc
pop
aas
cmpsl
ljmp
mov
lea
and
leave
mov
or
add
cmpsb
sbb
enter
push
clc
push
add
sbb
sub
ss
lcall
cltd
lods
mov
data16
jmp
sub
push
aaa
movsl
ficoml
and
mov
push
test
jb
pop
add
pushf
test
mov
ljmp
flds
xchg
adc
mov
mov
mov
add
adc
or
adc
jo
pushf
push
inc
sbb
sub
add
ret
popa
cwtl
outsb
sub
or
cwtl
jb
imul
ret
pop
addb
rcr
xor
and
jne
add
push
sbb
xchg
and
ja
jb
sub
cmp
add
and
shlb
push
add
dec
rcrl
add
add
cmpb
adc
xchg
and
sub
addb
aam
jb
cmc
mov
lret
cli
mov
add
fwait
daa
push
rclb
xor
xor
std
mov
mul
mov
sub
mov
or
std
rolb
sahf
jmp
add
dec
mov
adc
hlt
add
jno
imul
aam
inc
and
inc
addl
out
add
call
and
add
out
mov
add
inc
repz
sbb
psubsb
pop
out
pop
idivl
or
xchg
cmp
out
jl
jle
add
outsl
cmpl
and
cmpsl
sarl
sbb
mov
or
pop
push
push
add
fcoml
cmp
push
add
xchg
lock
jne
add
xchg
xchg
sub
addl
push
idivl
adcl
ss
xor
xchg
add
fs
out
push
mov
fdiv
jmp
mov
sub
adc
repz
add
or
call
out
movb
mov
add
hlt
add
sbb
add
jge
pop
lret
xchg
call
daa
clc
and
add
push
mov
add
pop
arpl
pushl
aad
add
inc
sbb
cmp
sub
cld
xorl
hlt
push
clc
fcoml
int
add
lods
pop
out
int3
shl
and
adc
xlat
add
imul
fiadds
insb
add
xchg
stc
xor
fcmovnu
or
call
jge
dec
aam
sub
adc
jne
adc
in
jo
xchg
add
mov
sbb
arpl
and
inc
sbb
adc
call
cmp
add
push
push
out
mov
and
pop
sub
add
and
mov
jmp
orb
xchg
adc
cld
rorb
dec
outsl
xchg
push
mov
mov
daa
add
xor
lds
jbe
push
xchg
add
insl
sub
aad
inc
add
and
shlb
or
inc
je
add
push
sub
sbb
ja
jecxz
cmpsb
outsl
into
adc
push
jecxz
mov
ds
add
xchg
adc
add
vphadduwd
or
mov
loop
pop
data16
add
lcall
add
or
repz
out
cli
jno
add
jne
dec
jle
les
add
cli
test
andb
sti
subb
xor
repz
int
cmpxchg
add
adc
push
or
and
ds
fadds
fidivl
add
pop
cli
mov
adc
jmp
out
mov
and
mov
mov
imul
mull
adc
sbb
push
cmp
ljmp
mov
sub
mov
aaa
test
lods
imul
push
cmp
cmc
or
clc
sbb
in
or
ret
dec
stos
fiaddl
nop
pop
test
rcrb
scas
add
bound
dec
mov
xchg
mov
inc
movsl
or
push
sahf
nop
mov
xor
add
xchg
sub
add
cmc
popf
das
addb
add
mov
pop
dec
rcl
cmp
add
subl
jmp
jo
cld
sbb
test
mov
aaa
xchg
push
adc
push
sbb
iret
add
mov
dec
test
outsl
inc
adc
cmpsl
aaa
xchg
fistl
outsb
test
inc
sbb
mov
aad
jmp
cwtl
sub
in
add
cld
subb
pop
data16
jns
pop
or
and
jmp
or
cmc
inc
sub
push
add
push
js
fwait
dec
out
mov
adc
daa
in
add
and
push
cmp
insb
mov
ljmp
out
cmpb
add
fnstsw
add
mov
push
mov
pop
shrb
jbe
fisubl
sbb
mov
dec
add
xor
add
and
xor
add
xor
cmp
inc
add
dec
insb
cli
xchg
in
push
idivl
mov
push
jge
add
scas
mov
fiadds
test
lock
fwait
jp,pn
outsb
or
cmpsl
cmpb
xor
icebp
sbb
mov
frstor
sbb
loopne
clc
xor
es
cwtl
movsl
lock
out
inc
movsb
push
in
pusha
or
clc
xchg
stc
adc
pop
mov
xchg
add
test
adc
sbb
mov
push
add
adc
cmp
scas
mov
shlb
ljmp
xchg
or
std
adc
test
mov
sti
repz
shrl
cmp
inc
or
add
in
add
add
xchg
sbb
cmpsb
cld
repz
addb
mov
push
ja
xchg
add
mov
cmp
movsl
jbe
push
shl
dec
or
popa
add
scas
fldl
in
ret
incb
inc
push
mov
movsb
and
lock
dec
or
scas
pop
jno
add
mov
jmp
movsb
test
lods
cli
push
pop
or
push
xor
lea
dec
aas
add
push
sub
out
xor
pushf
fwait
push
xor
mov
add
test
add
add
xor
mov
add
jp
clc
aas
nop
mov
in
je
and
pusha
push
push
add
shlb
movsb
jle
and
or
jmp
scas
xchg
stos
test
cs
mov
push
popa
add
cmp
pop
in
cmp
or
sbb
or
push
mov
fnstsw
add
mov
jbe
adc
inc
add
jg
dec
dec
data16
pop
add
hlt
ret
add
jne
sbb
xchg
gs
iret
push
push
rorb
movhps
and
xor
jl
and
add
mov
add
pop
jge
fs
movsb
cmp
cmp
jbe
gs
push
mov
add
jne
dec
inc
dec
add
xchg
arpl
add
fadds
or
lcall
xchg
sbb
cmp
aaa
nop
movsb
add
enter
sub
test
and
loope
lret
add
nop
mov
mov
or
mov
aaa
addr16
add
jl
cltd
cmc
mov
add
jmp
add
xchg
fstl
rolb
pop
cmp
out
and
ror
jmp
ret
add
scas
cmpsb
xchg
dec
lods
leave
adc
fs
mov
das
mov
push
idiv
andb
inc
add
jns
outsb
mov
dec
cmp
andb
cmpsb
xor
movsb
push
jae
mov
adcl
mov
pop
rclb
push
fiaddl
sar
loopne
sbb
dec
adc
testl
xor
ljmp
inc
add
or
rolb
pop
aas
inc
in
and
loopne
rcrb
add
adc
sub
inc
dec
pop
add
mov
add
loope
pop
pop
and
cmp
subb
hlt
add
add
pusha
jle
repnz
nop
insb
mov
enter
fisubrs
std
arpl
push
sub
xor
adc
push
mov
popf
aaa
dec
push
lock
je
and
xor
js
nop
icebp
add
adc
push
test
inc
jg
mov
addb
lds
xchg
js
icebp
cwtl
imul
push
ja
loope
arpl
cld
or
and
mov
adc
inc
insb
add
cpuid
dec
ds
dec
ds
push
mov
fnstcw
sbb
add
fwait
outsl
xor
push
jbe
add
pop
mov
push
movsb
rcrl
adc
aas
inc
add
outsb
arpl
and
sbb
dec
inc
lock
insl
add
adcb
lret
mov
roll
push
data16
sub
sbb
fmul
mov
incb
xchg
andb
mov
inc
mov
in
lds
les
sbb
int
loopne
xlat
cmp
dec
inc
and
mov
andl
cmp
sbb
push
push
out
addb
xchg
mov
xor
sbb
dec
dec
negl
sbb
das
inc
push
cltd
sar
pop
mov
mov
push
scas
or
or
add
inc
xchg
jns
loopne
adc
cmp
inc
push
inc
dec
in
or
jmp
es
fldcw
add
pop
les
lahf
mov
cmp
sbbb
call
add
mov
add
in
adc
cmp
popf
pusha
icebp
mov
add
and
push
cmp
mov
mov
mov
nop
aas
aaa
ret
sti
sub
or
jnp
push
sti
mov
bound
addb
inc
jp
sub
xor
rcll
popf
incl
call
es
adc
push
add
mov
inc
add
test
xchg
pushf
je
push
dec
push
cmc
pop
mov
or
add
sbb
int3
mov
hlt
ret
jg
clc
in
or
pop
adc
mov
out
int
lock
mov
or
and
add
sbb
jmp
leave
mov
or
incb
cmp
jne
test
add
bound
aad
lods
jae
jo
flds
push
add
sbb
pop
testb
add
xor
pop
add
ljmp
fs
mov
and
neg
sbb
rorb
roll
cmp
pop
mov
ds
add
rolb
mov
lret
add
das
xor
sbb
add
jg
or
movsb
pop
mov
lss
hlt
xchg
add
adc
rol
sbb
cs
fstl
mov
les
fistps
mov
repnz
jb
pop
and
mov
xor
sub
andps
inc
mov
cmp
add
jb
or
out
or
inc
add
push
loop
add
mov
rcrb
xchg
in
add
rcrb
push
repnz
and
add
fildll
xor
add
cwtl
test
pushf
push
cwtl
fdivs
fmulp
add
add
mov
loop
sbb
inc
das
adc
add
mov
inc
add
faddl
repz
ffree
push
loopne
or
adc
aas
rorb
cltd
xor
jmp
add
and
inc
mov
add
imul
add
inc
andl
mov
scas
xchg
mov
ja
fsubr
add
int
add
jae
incl
and
inc
aad
dec
out
clc
lea
mov
or
or
add
cli
xor
sbb
sub
imul
inc
dec
sbb
add
or
rclb
clc
lahf
sbb
and
mov
mov
outsb
add
jl
push
cmp
js
xor
add
enterw
in
add
aad
add
cmp
outsb
cmp
mov
add
insl
push
cli
push
arpl
add
add
and
xor
or
and
or
inc
xor
cmp
push
mov
adc
jp
pop
in
dec
adc
add
fldl
mov
pop
and
mov
rcrl
jne
daa
add
sub
je
pop
add
dec
xor
cli
mov
or
add
aas
jmp
insb
add
sbb
stos
mov
add
arpl
or
mov
cmp
mov
and
inc
xor
add
or
ret
pop
adc
daa
xchg
push
push
xchg
test
les
das
and
js
adc
fcoms
test
xchg
push
add
or
popa
xchg
add
or
cmp
adc
add
adc
mov
in
cmpl
mov
jecxz
cvtps2pi
push
loopne
xchg
test
jmp
test
jge
inc
add
push
or
ds
jb
jbe
sub
inc
movsl
lock
pop
push
movsb
dec
inc
int3
cmc
add
aam
add
jl
jno
pusha
push
stos
push
and
adc
mov
fidivrl
data16
mov
mov
pop
mov
pop
fs
adc
cmp
xchg
jg
cmpl
pop
mov
and
xor
pop
adc
sbb
jno
add
push
push
cmp
mov
add
cltd
addl
lock
push
or
and
fadds
fsubrl
pop
push
or
xor
movsl
ss
pop
cmp
jnp
jo
dec
xor
pop
push
ds
mov
sub
bnd
or
push
jb
aaa
rolb
imul
pop
inc
outsb
push
add
pop
xchg
push
cwtl
out
imul
xor
shr
dec
lock
push
inc
inc
mov
mov
insl
cwtl
jo
and
push
jo
lods
dec
xor
mov
out
pushf
loopne
adc
sub
sub
xchg
dec
push
xor
std
dec
int
dec
add
fisubrs
add
shrb
cmp
in
test
dec
inc
xchg
mov
or
rorb
xlat
loop
jb
jo
stos
pop
sub
adc
mov
mov
push
lea
pause
adc
loopne
jp
je
iret
or
add
repnz
test
cmp
mov
and
ret
mov
and
in
pop
add
mov
inc
add
xor
dec
dec
or
or
dec
push
xor
popa
inc
pop
add
xor
cmp
xor
mov
aam
pop
sbb
cld
inc
add
xchg
imul
adc
mov
sub
adc
test
dec
or
add
adc
pop
add
ljmp
add
jmp
js
nop
jp
lods
push
arpl
cwtl
pop
sub
rclb
addl
mov
adc
cltd
cmp
xchg
adc
push
orl
push
add
aam
jg
pop
loop
cmp
sub
jne
inc
insb
bswap
fs
pushf
xchg
nop
int3
fisubs
xor
lret
push
xchg
and
jns
pop
es
ret
inc
dec
inc
inc
lock
add
push
sub
cmp
in
sbb
push
sub
aam
mov
add
jno
pslld
add
in
das
xchg
icebp
xchg
sarl
lcall
out
bound
fnstenv
ret
sahf
imul
outsl
jne
imul
inc
insb
cmp
roll
jo
aas
aas
lods
add
sbb
clc
out
add
test
rol
add
push
jb
popa
outsb
jae
cmp
addr16
inc
add
jne
outsl
mov
fxch
adc
stos
xchg
push
mov
mov
enter
in
push
push
add
sti
mov
jo
outsl
mov
je
mov
js
mov
adc
nop
sub
jle
cmp
call
cmp
cltd
push
push
jbe
add
add
pop
inc
popa
je
sarb
inc
sbb
clc
mov
movsb
xchg
mov
dec
addb
outsb
add
sbb
std
imul
rorb
or
nop
jo
xchg
imul
je
cmpsl
adc
test
mov
jmp
mov
push
pop
xor
dec
js
and
xor
jo
dec
and
add
jmp
adcb
adc
push
jmp
ret
mov
add
mov
mov
addr16
add
das
dec
int3
mov
xchg
and
shl
xchg
xchg
mov
enter
add
inc
jae
aas
lock
adc
je
and
add
lcall
and
sub
in
mov
pop
sub
jg
xor
adc
add
add
pop
push
mov
shll
ljmp
mov
push
push
jne
lret
add
xor
add
in
and
sub
or
add
stc
test
sbb
or
loop
xchg
push
mov
ret
adc
cmpsl
add
dec
pop
test
pop
cmpsb
test
stos
or
subb
mov
mov
mov
add
and
ret
movb
and
add
xchg
push
dec
inc
rorw
jmp
xchg
add
hlt
mov
cmp
mov
mov
lcall
pop
jl
pop
ljmp
hlt
sub
loop
or
fiadds
mov
pop
pop
pop
jp
push
pop
int
fadds
push
mov
sub
lods
dec
ret
push
decb
loop
je
fwait
push
add
cld
jmp
dec
pop
test
adc
test
addl
mov
clc
pushf
adc
sbb
add
push
push
sub
and
inc
add
insb
dec
adc
push
sbb
cwtl
adc
enter
push
mov
add
and
cmp
fsqrt
lock
ss
push
pop
es
addr16
lret
xchg
push
lods
insb
sarb
notb
jle
sbb
jne
jb
jns
pop
xchg
and
outsb
adc
xchg
dec
les
add
cmp
or
push
sarb
sub
movsb
sahf
adc
lea
leave
mov
jle
pop
faddl
push
in
mov
jb
add
or
ret
jg
into
add
push
call
enter
out
add
or
pop
sbb
movsb
mov
jne
push
add
or
push
pop
subl
jo
xchg
and
fstl
add
out
dec
clc
cltd
add
sub
xchg
inc
sbb
sub
add
xor
insl
and
pop
sbb
fs
xchg
sub
or
test
push
add
nop
cmp
cmp
in
sub
in
add
pop
add
add
mov
push
dec
pop
lcall
pop
mov
jmp
test
push
sub
mov
inc
bound
das
mov
push
dec
xor
js
pusha
hlt
fs
sub
test
inc
pusha
add
pop
pop
pop
or
testl
and
sub
fidivrl
cmp
jo
cmp
lcall
add
add
add
adc
dec
mov
lret
nop
mov
out
add
pcmpeqw
jle
jns
sbb
jb
push
mov
pop
nop
cmp
add
data16
jae
mov
mov
or
stc
call
dec
mov
push
sbb
out
xchg
ljmp
inc
mov
cs
or
adc
mov
mov
jmp
mov
inc
sbb
sub
and
inc
aas
push
add
adc
outsl
roll
add
add
xor
add
pandn
add
call
push
add
jmp
and
add
jmp
sub
verw
jb
cli
or
adc
pop
out
mov
rcrb
jb
incb
call
inc
test
or
pop
js
lea
push
inc
inc
xor
add
xor
sbb
repz
push
or
out
add
adc
push
cwtl
lods
adc
loope
pop
mov
ljmp
dec
sbb
arpl
add
push
mov
cmp
add
mov
adc
push
pop
add
xchg
xchg
mov
jns
sub
addl
xor
ljmp
add
nop
outsb
pop
cli
sbb
jnp
iret
adc
lock
add
or
cmp
jecxz
rclb
add
lea
push
popf
push
sbb
push
xchg
in
mov
loop
push
cmpsl
js
lahf
add
cmp
sbb
add
inc
daa
xor
push
add
scas
fsubl
notb
add
jne
mov
popa
jb
cmp
lret
les
shll
mov
out
std
add
aad
adc
adc
roll
je
cmc
add
xchg
dec
sbb
sub
adc
notl
ljmp
repz
xor
aam
jp
jo
rcrb
push
push
or
stc
and
dec
and
or
call
test
pusha
fisttpl
ficoms
add
scas
leave
aas
and
popa
loopne
jnp
lods
gs
lea
arpl
lgs
or
xor
jle
xor
cmp
xchg
jle
and
jo
movsb
adc
add
xor
in
pop
jno
add
in
adc
add
inc
je
mov
loopne
pop
push
lock
adc
stos
cmpsl
daa
jne
add
xor
add
dec
or
addl
mov
add
and
push
or
jo
or
in
xchg
push
cld
mov
mov
dec
xchg
inc
in
jae
arpl
add
mov
cmpl
pop
and
mov
adc
notl
jns
les
mov
jge
add
or
test
sub
jb
rorb
lods
pop
fsubrl
cmp
push
push
cwtl
in
pop
gs
loope
jo
mov
sub
ss
movaps
lock
add
fsubrs
movsl
xor
pushf
jae
add
nop
dec
les
ficoms
hlt
daa
jbe
add
test
xchg
in
movsl
jns
rorb
and
jmp
mov
sbb
popa
xlat
add
xor
test
add
rcrl
in
xchg
js
repz
add
add
mov
add
mov
enter
xchg
sbb
repnz
pop
sbb
lock
lahf
mov
pop
pushf
out
adc
push
cmp
and
add
mov
jmp
clc
hlt
js
push
inc
nop
inc
push
add
cld
pusha
shl
repz
pop
xor
push
inc
xchg
test
test
jg
add
aas
shlb
add
lahf
aad
fsubrl
or
stos
mov
or
testb
mov
ljmp
xor
fisubs
xor
mov
sub
jg
add
add
jb
test
cmp
add
add
fwait
push
ret
cmc
add
insb
ss
xor
adc
add
inc
push
jnp
fdivrl
push
addb
dec
test
cmpsl
aam
sub
jg
add
movsb
fs
sbb
lahf
xchg
jg
add
das
jne
call
mov
sbb
loop
push
popa
aas
ret
or
jne
pop
pop
pop
add
add
and
ljmp
jae
pop
add
adc
pop
mov
pop
and
nop
and
and
rolb
add
or
lfs
cmc
repnz
pusha
or
sbb
enter
adc
adc
or
inc
pop
sub
xchg
rolb
adc
add
sbb
mov
shlb
add
mov
inc
or
add
pop
ret
repnz
push
je
mov
int
mov
cmp
hlt
inc
divb
cli
jne
push
or
jae
mov
adc
push
pop
mov
add
pop
add
fs
xchg
inc
inc
iret
fcmove
popf
inc
testb
jne
mov
orb
add
mov
push
call
pushl
mov
add
int
psadbw
test
add
and
mov
cwtl
aaa
cmp
movsb
cmpb
lahf
and
pop
sbbl
and
cld
mov
stos
mov
adc
cltd
cmp
mov
cmp
add
pop
or
ffree
mov
clc
clc
add
dec
cld
lret
inc
in
add
cmp
add
ret
push
je
test
pop
dec
xor
pop
xchg
sub
es
int3
cmp
hlt
pop
test
out
iret
inc
incl
cmpsl
jge
xchg
jecxz
ret
fcomip
int3
stos
adc
jmp
pop
rolb
pop
add
sub
add
add
xlat
or
cmp
mov
lock
mov
dec
lahf
sahf
icebp
or
sub
sub
push
daa
push
push
cmc
ds
add
in
fs
mov
add
movsb
jge
cmp
xchg
icebp
jne
or
ss
mov
add
inc
xor
add
pushf
jp
cmp
adc
pop
and
cwtl
inc
cmp
jbe
call
inc
addr16
xor
je
or
or
jo
cmp
test
fsubp
and
mov
add
es
enter
or
cmp
mov
sbb
mov
lock
push
adc
add
les
sbb
in
addr16
dec
inc
sbb
stos
leave
xor
jle
sub
sub
dec
aad
fidivs
scas
cmp
and
jp
add
scas
pop
add
or
mov
sub
popf
fistpll
adc
add
add
pop
icebp
add
add
into
or
cmp
andl
cmc
jp
inc
mov
pushl
sbb
jl
pop
pop
xor
add
rolb
ja
ljmp
sub
mov
add
call
fdivrs
xchg
loope
jmp
push
inc
mov
aas
add
andb
push
cmp
add
jne
add
push
mov
jle
or
add
xchg
add
jmp
xor
call
aam
push
and
sbb
mov
add
dec
jg
jg
setne
cmp
xor
pop
out
jl
nop
jns
mov
test
add
jmp
ret
cld
add
push
pusha
mov
adc
add
cmp
sti
mov
repnz
dec
mov
add
cmp
add
mov
insb
add
add
dec
pop
mov
outsl
popf
sbb
das
sub
and
mov
cli
add
or
xor
clc
dec
and
push
out
adc
in
or
or
jne
add
das
adc
adc
int3
daa
or
clc
dec
jg
add
out
mov
add
push
and
fildll
and
movsl
pop
pop
adc
xchg
test
daa
pop
inc
adc
loopne
ljmp
jo
rcrl
add
les
cmp
push
add
mov
xor
ja
add
adc
pop
jmp
add
shll
out
sub
sbb
or
scas
add
pop
push
and
rclb
aam
add
loopne
push
push
add
fwait
jno
cmp
aas
repz
add
jecxz
bound
jp
nop
add
mov
imul
sub
add
test
lahf
add
lock
outsl
mov
pop
sub
xchg
sub
aaa
and
clc
push
andb
jge
or
movd
loopne
pop
in
sub
popf
imul
push
ss
add
inc
cmp
call
loopne
bound
ljmp
add
jp
adc
and
aam
insl
sub
inc
shl
pop
xchg
sbb
int3
xlat
mov
test
enter
outsl
mov
les
inc
shlb
adc
mov
mov
stos
sbb
push
fimuls
or
ljmp
movsb
mov
mov
mov
cli
cmc
add
and
adc
xchg
jge
add
imul
and
enter
push
add
pusha
push
insb
push
subb
and
ja
dec
mov
sub
add
and
daa
xor
test
cmpsl
sbb
and
xchg
pop
xor
insb
add
push
dec
add
jnp
cmp
pop
jg
fs
mov
sub
loop
push
hlt
push
xchg
xor
and
lock
insb
sti
push
or
cmp
adc
jne
ljmp
std
and
or
daa
ds
fadds
clc
fidivl
xor
mov
verw
push
cmpsl
jmp
cmpsb
lods
cmp
add
inc
mov
bndstx
cmp
mov
or
mov
cmp
dec
jnp
bnd
pop
lds
pop
sbb
out
xor
in
fsub
je
or
sbb
imul
inc
test
add
push
dec
sub
jp
add
xor
add
and
sahf
add
xchg
mov
jle
sbb
loop
add
mov
repz
addb
inc
mov
fdivl
sub
sbbb
adc
cmp
das
testl
ss
test
add
or
std
cmp
add
test
jbe
mov
add
lds
addb
jl
ljmp
jne
incb
inc
hlt
jge
add
je
add
aas
sbb
loopne
addb
rol
jmp
add
movzbl
sub
jne
add
xor
dec
mov
cmpsl
out
sti
jno
add
mov
inc
incb
lret
mov
add
and
outsb
pop
xlat
inc
in
pushf
dec
sbb
sbb
lds
aaa
mov
daa
es
cwtl
sahf
jne
mov
jns
popw
andb
cmp
in
add
imul
or
push
pop
mov
das
add
push
cmp
jae
lret
decl
pop
cmpsb
sbb
inc
adc
push
negb
push
shlb
or
clc
xchg
cmpb
mov
mov
jle
add
test
rolb
push
push
aad
sbb
outsb
pop
dec
mov
add
and
aad
sub
mov
add
or
sbb
idivl
daa
jle
aad
mov
les
jnp
cmp
mov
mov
cmpl
outsb
popl
lret
lea
adcb
loop
add
or
cli
push
pusha
lahf
and
pusha
add
cmp
and
js
lock
loopne
imul
std
and
adc
xlat
push
jne
mov
movsb
or
sbb
sub
call
jns
add
mov
pop
and
rol
and
and
into
push
sahf
push
push
and
cmp
enter
call
mov
faddp
das
inc
mov
jne
sbb
or
inc
cmp
add
and
dec
aaa
or
adc
imul
pop
or
pop
pushl
cmp
cmp
sbb
pushf
aad
movsb
roll
out
and
lea
mov
iret
and
push
add
jp
fists
leave
ja
xor
mov
call
add
push
xchg
fs
lds
and
lahf
or
push
in
add
addr16
movsb
scas
pusha
aas
push
les
jbe
ret
int3
adc
ja
mov
jae
add
out
pop
mov
lock
es
and
scas
sub
ja
mov
mov
push
mov
pop
call
int3
jg
daa
pop
sarl
sbb
mov
or
je
add
mov
sub
xchg
stos
add
xchg
in
sub
adc
mov
sahf
imul
mov
sub
xor
pop
andb
std
hlt
jmp
pop
aas
test
mov
cmp
popf
adc
inc
cmp
pop
movsb
aas
mov
or
dec
hlt
push
jl
movsl
push
jmp
shlb
das
cwtl
xor
mov
data16
mov
popl
pop
sub
jle
mov
mov
sub
sbb
inc
mov
add
je
sbb
xchg
jg
or
sar
popf
fistps
mov
xlat
add
outsl
je
add
sub
or
mov
inc
push
dec
dec
and
add
cs
imul
xchg
mov
adc
scas
mov
lock
fistl
sahf
rclb
adc
fadd
xchg
xchg
nop
sarb
add
sbb
mul
inc
inc
xchg
mov
outsb
add
aad
sub
repz
cmp
pop
add
frstor
iret
cmp
add
pop
ret
into
mov
jl
stos
cmp
push
add
add
aad
mov
push
sbb
mov
ficoms
adcb
add
dec
and
dec
xchg
cmp
faddl
lock
adc
scas
and
pop
and
push
and
dec
add
push
xchg
cld
jg
sub
mov
mov
std
dec
xor
int
ds
jge
cltd
xchg
dec
add
mov
push
mov
xchg
lock
cmp
add
add
or
mov
or
adc
out
ja
dec
cli
iret
sbb
dec
pusha
or
hlt
lods
add
push
mov
cmp
hlt
add
push
inc
inc
push
jb
cltd
fadd
push
dec
inc
test
add
xchg
xchg
adcb
mov
jne
sub
lods
je
add
mov
jmp
stc
add
lahf
push
js
rcl
popa
imul
push
and
cmp
sub
cmp
and
pop
xchg
pcmpgtd
outsl
sub
inc
jne
mov
cmp
cmc
rcrb
imul
jae
and
add
push
out
and
adc
add
fdivs
cmovo
es
mov
xchg
cmp
ja
pusha
add
in
hlt
add
sbb
dec
loop,pn
loop
add
enter
call
cmpb
or
xchg
rcr
sub
psadbw
das
mov
jmp
add
data16
or
add
sti
cmp
roll
mov
add
call
dec
pop
divb
mov
mov
add
outsl
xorl
pop
and
test
lods
dec
imul
mov
adc
jno
add
push
jb
and
lock
mov
add
jne
imulb
xlat
push
fidivs
lods
pop
or
cs
inc
test
pop
cmpl
or
and
cmpb
cmp
stos
movsb
pushw
push
lea
test
cmpl
add
mov
sub
mov
sbb
in
jp
push
popf
add
mov
lds
lea
nop
xorb
shrb
movsb
aaa
mov
pop
jecxz
push
mov
jo
or
mov
lea
das
mov
add
dec
call
sub
mov
int3
enter
add
cmp
jle
das
xor
jns
xchg
nop
mov
rcrb
pusha
push
sub
addb
or
adc
and
add
dec
insb
cmpsl
add
sub
in
mov
cmp
lods
pop
popa
sti
mov
mov
inc
xlat
sti
mov
imul
aas
pusha
jne
mov
and
and
incl
adc
dec
inc
cmp
add
mov
add
mov
or
int3
fildl
cmovs
addl
add
int3
add
push
add
and
adc
aam
stc
ljmp
or
shl
adc
lahf
into
cs
mov
sub
pop
push
scas
or
inc
inc
dec
sub
lock
imul
jo
cmc
dec
add
xchg
call
inc
shlb
sti
push
add
aad
ret
fnstcw
or
ja
add
adc
jo
sub
add
pop
mov
addb
and
inc
cmc
push
jo
add
movsb
stos
mov
mov
inc
cmp
pop
jl
add
insl
out
repz
adc
and
add
or
sub
push
add
pop
mov
loopne
pusha
push
inc
outsb
and
push
add
jb
inc
pusha
push
add
insb
sub
dec
inc
push
cmp
mov
enter
push
mov
inc
add
ret
jg
imul
sub
add
sbbl
fsts
sbb
sbb
sbb
add
and
add
int3
add
dec
movsb
fs
popa
jmp
cld
fcoml
push
loopne
pushf
add
add
mov
in
add
out
mov
clc
mov
push
out
call
xchg
stos
pop
pop
insb
inc
push
std
or
add
jne
imul
nop
pop
repnz
jmp
or
arpl
adc
sbb
nop
adc
rorb
add
fcmovu
adc
and
inc
cwtl
jmp
add
xor
add
stos
bound
or
add
mov
add
sbb
push
add
fwait
sahf
dec
insl
fistpl
add
sbb
filds
pcmpeqb
outsb
push
add
in
sbbb
adc
dec
mov
mov
adc
add
jne
and
js
add
cmpsb
mov
push
sub
push
or
add
insl
jno
imul
add
mov
pop
xchg
sbb
or
mov
add
sub
test
xchg
add
loopne
jo
xor
pop
mov
or
aam
das
or
and
cmp
icebp
pop
mov
pop
shlb
add
inc
xorl
add
cwtl
xchg
cld
add
loopne
test
xchg
in
adc
clc
les
mov
xchg
mov
xchg
call
add
fisttpll
and
inc
add
test
inc
push
push
aaa
adc
shlb
aas
cs
jmp
enter
adc
nop
jge
sbb
loope
fsubl
imul
and
xor
push
out
adc
push
mov
adc
jbe
dec
out
push
sbb
xchg
xor
add
dec
popa
sbb
test
inc
aaa
sbbl
sbb
sbb
xor
clc
mov
mov
and
mov
mov
test
sbb
or
rorb
insl
mov
add
rcl
pop
filds
mov
stos
js
loop
mov
ja
add
add
add
cmpsl
xor
add
fistpl
mov
inc
cmpsb
xlat
xchg
xor
clc
add
mov
xchg
xor
add
fs
push
xchg
lods
jmp
decb
stc
fisubs
dec
inc
arpl
inc
cld
ja
push
cmpsl
push
inc
leave
fldl
pop
and
aas
decb
std
or
test
add
sub
repnz
push
hlt
aad
sub
push
jmp
insl
adc
dec
movsb
stos
cld
xor
add
mull
cwtl
in
dec
rolb
mov
notl
or
loop
xor
add
lret
xor
push
test
cmp
cmp
mov
cmp
xchg
xchg
pop
adc
mov
insl
inc
sub
push
inc
pop
jmp
push
jns
add
out
add
imul
fimuls
push
cmp
add
jl
andl
inc
add
pushf
sarb
jmp
dec
sub
xchg
cmc
ret
add
hlt
mov
add
out
xor
mov
pop
ds
lock
adcb
and
add
push
dec
in
add
and
push
imul
adc
push
in
imul
sub
cmp
xchg
inc
data16
daa
das
mov
push
repz
js
add
push
in
pop
adc
movd
xor
cmp
cmpsl
sub
add
sub
adc
add
je
addr16
cmp
bound
add
sub
add
xchg
test
jo
outsb
add
push
gs
inc
pop
jne
imul
add
push
mov
call
and
cwtl
lods
dec
cmpsl
sbb
mov
jmp
jmp
push
mov
mov
ljmp
push
push
jbe
pop
fidivrs
or
fs
jno
ja
jae
jbe
jne
add
jo
fwait
js
adc
fsubrs
loopne
imul
adc
sub
sub
lahf
enter
and
das
subl
add
call
movsl
jle
mov
mov
sub
leave
pop
dec
stc
popa
rolb
addb
push
add
add
fcomps
xchg
aas
dec
sbb
daa
push
pop
push
and
add
or
xor
jnp
or
adc
mov
call
js
adc
add
fstp
das
push
rolb
or
mov
push
lahf
rclb
je
dec
add
cmpsb
cmp
inc
or
jne
loopne
inc
or
out
daa
clc
fdivrl
lret
das
adc
nop
pusha
mov
add
inc
add
enter
pop
push
sub
sub
call
jae
add
mov
pop
mov
movsl
add
jb
jbe
push
jo
roll
adc
insb
jo
sbb
add
mov
dec
add
enter
or
sub
add
nop
mov
aad
jmp
or
je
add
ja
pop
mov
jo
pop
and
xchg
or
int3
adc
faddl
sbb
sbb
pushf
push
add
neg
pop
and
and
push
jne
sbbl
test
enter
inc
push
test
and
sbb
and
outsb
insl
ret
cld
add
mov
lock
adc
adc
xor
ret
mov
xchg
test
repnz
mov
add
fsubs
leave
sub
dec
lea
shrb
shlb
ret
mov
adc
add
pop
add
js
repnz
out
jo
add
repz
mov
and
adcl
clc
add
jb
dec
stos
push
loopne
push
je
jo
fdivrl
adc
das
xlat
inc
fs
jl
gs
nop
xchg
jecxz
jne
add
hlt
test
dec
mov
dec
ret
cmp
inc
mov
nop
sub
mov
push
roll
fstps
fsubl
add
inc
arpl
mov
push
cmp
cmpb
or
ror
push
jnp
push
dec
add
in
cmc
pop
dec
in
adc
dec
addr16
mov
lcall
push
xchg
adc
add
lock
or
addb
cmp
push
xchg
lds
out
pop
xor
dec
mov
mov
out
pop
push
push
std
sbb
sub
inc
filds
js
push
mov
outsl
sbb
add
jp
movb
sbb
daa
adc
jb
sub
ja
jno
fcmovnu
jno
enter
pop
mov
xor
lahf
dec
std
pop
jecxz
in
sub
inc
into
mov
ror
add
push
xor
cmovge
add
cwtl
mov
cmc
sub
push
dec
push
stc
movb
inc
xchg
scas
test
mov
add
rcll
idiv
pop
test
cs
xchg
fisttpll
push
push
lret
jge
clc
inc
add
and
jb
adc
adcb
xchg
jne
cmpsl
mov
jg
data16
jns
hlt
push
in
push
hlt
sbb
adc
or
es
lds
das
arpl
or
scas
sbb
aas
pop
push
cmc
push
add
adc
scas
jg
adc
addps
imulb
push
test
mov
mov
dec
add
addr16
dec
add
push
or
pop
mov
testb
xor
jl
out
sub
pop
popa
cmc
mov
pop
add
cmp
bswap
push
into
mov
xchg
add
inc
add
or
cld
sub
mov
and
sub
push
add
je
mov
mov
push
cmp
inc
mov
cmp
push
mov
add
add
stc
ret
pop
adc
xchg
call
add
mov
pop
stos
add
ret
dec
cmp
pop
fcomps
and
filds
popa
sahf
xchg
ja
xchg
pop
pop
cmp
mov
cs
test
mov
insb
mov
hlt
movsl
mov
sbb
mov
jge
mov
pusha
xchg
add
sarl
cli
push
add
pop
ja
or
imul
push
movsb
repz
loopne
dec
lock
adcb
aad
jl
or
add
jg
jmp
push
mov
dec
repz
add
jnp
xor
push
std
push
movsb
jno
and
leave
cmpsl
pushf
pusha
inc
add
lret
jns
sbb
clc
pop
ljmp
mov
ds
push
add
scas
iret
rolb
and
mov
mov
lahf
jl
add
lock
addl
shrl
push
rcrl
rolb
mov
sar
rclb
enter
hlt
mov
fdivrs
jmp
jns
lret
xchg
jne
inc
add
add
push
push
sti
cwtl
mov
add
pop
pop
xor
jae
pop
jecxz
shlb
imul
mov
out
test
and
and
clc
dec
add
cmp
cs
add
dec
add
mov
cmpsb
fdivrl
sub
inc
movsl
pop
aad
insb
mov
lods
shll
add
inc
and
xor
decb
and
add
sbb
jb
jno
pop
daa
pop
fldl
arpl
lahf
push
rolb
jb
shrl
cmp
adcb
shr
push
add
aaa
pop
mov
add
pop
xor
add
movsb
xor
sbb
inc
xor
and
cli
loopne
mov
cmpsl
cmp
push
gs
add
sbb
dec
daa
ret
cmp
shlb
inc
das
add
jmp
sub
add
lods
insb
sub
lret
push
and
int
aas
jge
psubb
pop
or
jb
dec
pop
out
cmpsl
adc
add
lock
jecxz
call
jl
jns
sbb
in
jo
inc
and
pop
rorb
cmp
and
jg
xchg
add
nop
rcl
cmpsl
add
or
fisubs
push
mov
add
js
add
daa
jge
sub
test
cltd
cmp
add
nop
add
push
add
rcll
add
addr16
mov
movsb
or
add
and
popa
pop
mov
xchg
clc
test
ja
mov
jnp
sub
or
add
xor
pop
jmp
rolb
movb
add
add
or
pop
and
push
push
sub
xchg
mov
cmpsl
mov
pop
and
add
outsl
dec
orb
adc
scas
sub
cli
aam
repz
mov
mov
add
push
add
pop
jge
add
jp
xchg
mov
and
dec
add
jns
add
cld
cmc
imul
fdivl
std
dec
leave
rolb
movb
inc
in
sbb
aas
pop
test
shrl
or
mov
incb
lds
cmp
rcrb
ljmp
add
addl
shlb
out
pop
inc
inc
add
xor
add
add
cmp
and
jbe
addb
leave
rolb
and
dec
mov
mov
add
fsubr
sbb
cld
xchg
dec
mov
add
pop
and
int
inc
sbb
into
enter
out
xor
adc
xchg
paddd
or
push
add
sbb
jbe
inc
add
shr
enter
mov
into
int3
push
or
ja
jno
js
jge
mov
sub
xor
adc
add
iret
les
imul
test
add
in
in
jmp
mov
jge
cmpsb
sbb
cmp
incb
inc
fcompl
mov
cmp
xchg
adc
pop
notb
adc
jge
cmp
dec
mov
loopne
int3
aam
notb
sbb
cmp
sub
cmp
inc
or
mov
jg
sarb
jecxz
push
stos
pusha
mov
lret
test
mov
fstpl
add
adcl
add
or
outsl
push
rorb
inc
fstpl
mov
dec
mov
test
mov
and
xor
repnz
xchg
dec
shlb
adc
push
or
pop
add
cmp
or
sbb
ret
add
jmp
sub
add
xlat
cmpb
jne
add
adc
je,pn
popf
add
jb
and
or
jmp
call
push
loop
in
push
mov
aam
mov
jne
pop
add
cmpsb
fistpll
or
clc
leave
or
adc
adc
cwtl
add
xor
mov
add
cltd
jle
sbb
or
les
xor
push
daa
pop
inc
int
imul
pop
dec
cld
je
cltd
ds
mov
xchg
add
nop
xor
fsubs
test
jmp
dec
jne
and
add
lahf
out
inc
add
cld
mov
movsl
add
cmpsl
jnp
or
mov
sub
pop
aaa
add
int
xor
sbb
mov
push
mov
push
cs
add
sub
lahf
aam
bound
jne
push
xchg
cmp
sub
cmp
jno
mov
xlat
adcl
pop
xchg
adc
mov
and
and
aas
jle
and
jmp
dec
dec
stos
add
je
or
leave
sbb
add
jmp
lods
cmp
pop
hlt
cmp
cmc
push
mov
dec
call
mov
mov
inc
arpl
xor
shlb
add
or
dec
adcl
add
lods
ret
jne
mov
out
xchg
push
cmp
je
dec
or
lock
repnz
leave
mov
inc
inc
ret
push
scas
out
add
iret
mov
das
mov
mov
pusha
idivb
xchg
cmp
pusha
mov
jl
in
push
dec
adc
inc
add
adc
mov
lcall
jnp
fistpll
or
add
adc
loopnew
cmp
inc
inc
push
cltd
shlb
mov
add
cmp
sbb
push
das
es
jnp
test
insl
cmp
add
inc
inc
adc
and
jne
lock
push
mov
lahf
sbb
in
cmc
jae
pop
ret
rolb
or
push
adc
out
push
sbb
subb
andb
jae
and
sbb
popl
adc
scas
pmaddwd
loopne
test
sti
sub
lods
push
lods
adc
or
pop
add
call
lret
xchg
test
add
jp
jo
mov
push
popa
jns
sbb
xorb
jne
pusha
inc
cmp
mov
add
dec
cmp
adc
add
fcompl
or
push
mov
xor
pop
add
sbb
add
sbb
lret
add
cmpl
ss
cmp
add
cmp
mov
xchg
mov
fdivl
sub
mov
adc
mov
lret
sti
and
inc
add
add
push
push
xlat
adc
add
jecxz
cmp
add
loope
push
sahf
insl
xchg
add
lods
adc
mov
push
push
notl
or
imul
or
adc
jecxz
into
push
mov
add
cmp
cmc
add
sub
mov
sub
add
sbb
cmp
add
or
arpl
sub
ds
push
sahf
push
loop
mov
addl
mov
xchg
pushf
roll
int
movsl
lret
fldl
scas
lahf
hlt
test
pop
mov
xlat
mov
leave
mov
xchg
or
in
lea
outsb
repnz
pusha
clc
test
les
das
stos
cmp
jecxz
xor
adcb
sub
add
je
add
fdiv
inc
add
cmp
add
test
bound
push
mov
fisttpl
or
xor
mov
push
jae
pusha
mov
mov
in
dec
daa
sbb
test
add
imull
push
add
jnp
cmpsb
pushf
dec
nop
add
push
rol
enter
add
mov
cmp
jl
cmp
pop
inc
sbb
add
adc
dec
ret
pop
pop
pusha
xchg
dec
adc
mov
jnp
mov
cmp
mov
loopne
lds
mov
push
mov
cld
cmp
xchg
call
xor
loopne
or
mov
pop
xchg
incl
sub
mov
sub
lds
mov
js
loope,pt
cmp
scas
fcompl
push
daa
push
fs
sbb
xor
jp
into
insb
cld
stos
rcr
jp
sti
std
add
mov
out
add
jns
insl
clc
mov
and
ss
push
dec
xchg
jp
pop
cmpsl
sahf
aad
mov
fs
add
adc
out
imul
jge
jmp
test
adc
push
dec
adc
hlt
sti
mov
jg
test
push
add
and
add
inc
sub
push
push
jnp
push
lods
jge
mov
adc
rcrb
sub
clc
cmp
iret
push
lods
fldenv
mov
jne
jle
sbb
push
sbb
dec
adc
pushl
add
xchg
adc
pusha
in
or
lods
adc
minps
and
add
ss
sbb
cmp
call
lea
and
cmpsb
sbb
movsl
cwtl
add
add
es
jmp
addb
and
add
jge
jl
sub
jns
jmp
add
push
fdivs
and
xor
add
cmp
add
je
cli
int3
lea
add
dec
lds
pop
or
add
sahf
mov
add
test
cmp
add
cbtw
mov
adc
add
shl
add
enter
pop
mov
popl
clc
lret
pop
mov
inc
jmp
mov
add
add
fnstcw
in
stc
test
popa
add
sbb
daa
fsubrs
cmp
lods
mov
stos
sub
stos
repz
sbb
test
dec
sahf
adc
inc
push
clc
push
add
pusha
sub
xlat
loopne
add
xor
dec
xor
add
xor
mov
out
cwtl
adc
cmpl
stc
imul
lret
lcall
xor
jmp
mov
add
push
mov
xor
sub
adc
inc
dec
cld
lods
or
test
dec
adc
push
push
sbb
or
add
rorb
add
add
aaa
jne
pop
push
cmp
push
push
out
and
subl
nop
cmp
stc
and
mov
mov
push
mov
arpl
xor
dec
leave
add
mov
test
add
movsb
mov
add
fnstsw
dec
sbb
mov
pushf
add
outsl
les
jno
bound
jl
loopne
sahf
aam
popf
add
fisubs
dec
nop
lods
lea
adc
neg
rcr
or
add
jbe
lods
mov
sub
add
lods
add
push
gs
shrb
add
cmp
or
adc
imul
imul
push
int
dec
fstps
insb
je
inc
push
xchg
jnp
push
or
pop
inc
or
mov
pop
in
sub
add
jmp
pop
mov
les
mov
sub
inc
add
mov
cmp
add
rol
add
inc
dec
add
lock
cmpl
cmp
stos
xchg
in
cwtl
xor
adc
jecxz
add
push
test
je
cmpsb
and
jg
or
fbstp
frstor
icebp
mov
pop
shrb
or
call
inc
dec
and
cmc
into
jae
ds
scas
add
dec
xchg
insb
push
out
add
cmc
sbb
ds
sub
cmpsl
xlat
xor
add
cmp
lock
dec
fiaddl
jbe
mov
in
in
add
push
and
or
jmp
aas
imul
sub
add
loop
movsb
jl
sbbb
mov
xchg
clc
add
inc
push
fsubl
adc
pusha
add
sarb
orb
shlb
loop
add
dec
lods
aad
pop
mov
add
push
add
inc
out
movb
jmp
push
cmpsl
sub
jmp
mov
cmpsb
add
inc
cld
mov
push
aas
and
out
jb
add
add
inc
adc
jle
add
hlt
cli
xchg
ret
mov
decl
xchg
xor
add
jae
gs
lcall
pop
xchg
lods
xor
cld
icebp
and
je
push
ds
out
add
sub
stc
inc
jo
lods
jo
add
or
add
ret
fcomps
je
add
fists
arpl
pop
jae
mov
or
mov
insl
je
add
jo
leave
and
lcall
add
inc
and
cs
mov
lods
lea
add
pushf
scas
add
sub
into
in
stc
pop
pop
push
test
and
repz
sbb
lock
add
dec
fdivs
push
inc
faddl
inc
add
enter
in
mov
popf
fisubrs
jle
gs
pop
and
push
lea
push
test
dec
cmp
mov
sbbb
add
mov
push
cmp
add
add
pop
mov
xor
scas
in
bsf
and
pop
stos
mov
add
dec
jo
xor
mov
push
mov
sahf
iret
xor
dec
xchg
das
xchg
filds
movsl
mov
cmp
loope
cmpsl
incb
cwtl
sbb
push
push
jne
xchg
pop
push
shlb
repnz
sub
cmpsb
or
cmp
push
or
xor
and
push
aam
push
lds
cs
inc
push
cmp
xor
xor
add
fs
or
pop
add
hlt
test
add
aas
xorb
popa
add
pop
and
arpl
push
loopne
mov
jo
push
stc
cs
mov
cwtl
int3
adc
mov
add
mov
cmp
data16
lock
fidivs
es
std
add
mov
fs
push
in
mov
cmpb
mov
pop
mov
in
fcoml
mov
sbb
pop
in
sbb
add
push
lds
xchg
add
fidivl
cmp
jo
filds
bound
daa
and
clc
in
in
push
sbb
pop
incb
stc
xor
icebp
mov
call
add
push
pop
or
xor
or
jg
or
lcall
mov
lea
add
xlat
mov
cwtl
add
out
xor
mov
push
inc
cmp
add
mov
vzeroupper
fs
pusha
add
xchg
adc
mov
push
out
es
adc
jp
mov
add
add
dec
jne
xor
cmp
ljmp
xchg
ret
inc
or
in
loopne
mov
cmp
cmpb
jp
jae
addr16
hlt
jne
mov
sbb
jge
or
add
xchg
xchg
ret
adcb
movsl
add
dec
cwtl
hlt
mov
orb
pusha
clc
add
and
mov
or
loopne
or
adc
lret
addb
out
jle
xchg
add
mov
icebp
add
sub
das
add
adc
pop
sbb
inc
add
loopne
int
jp
int
fmul
or
aaa
xchg
push
add
jo
mov
mov
adc
inc
pusha
lea
or
dec
and
imul
xchg
fs
clc
mov
je
sbb
cmpsb
add
arpl
jno
inc
add
push
adc
push
xlat
outsb
mov
inc
mov
movsl
daa
push
dec
mov
xchg
or
cmp
ljmp
mov
and
pop
pop
aaa
sub
push
nop
sahf
int3
gs
clc
mov
inc
or
je
rcrb
or
xchg
ret
pop
dec
js
add
jmp
lock
leave
sbb
movsl
sub
bound
inc
into
cmp
mov
inc
push
cmp
and
dec
stc
adc
add
push
pushf
fisttpl
or
add
jnp
xchg
mov
sbb
jmp
push
xor
inc
das
xor
push
addl
call
sub
add
add
addb
aad
dec
ret
lock
mov
add
popf
sub
notb
inc
adc
jp
movl
xor
fstps
cmp
adc
call
add
inc
xchg
stos
and
pop
add
dec
lcall
rcrb
cmp
jle
mov
push
xor
jo
dec
es
xlat
add
movsl
rorb
adc
mov
xchg
add
and
jle
push
gs
insb
add
add
jg
inc
leave
xor
add
mov
dec
mov
add
pop
lea
and
je
js
ficoms
dec
mov
andb
xlat
shlb
add
ror
pop
hlt
cmpsb
add
push
in
dec
push
dec
cld
testb
adc
loopne
add
jmp
enter
push
push
cmc
outsb
sbb
add
imul
jmpw
inc
test
bound
add
push
neg
mov
ret
pop
and
out
and
xorb
lret
adc
dec
ja
sbb
push
or
out
insb
out
add
sub
pusha
push
add
jmp
sbb
mov
inc
fisttps
or
adc
rolb
subb
cmpsl
add
xor
test
ror
shrb
insb
fnsave
call
pop
lods
sub
js
sbb
in
rcr
push
mov
aam
or
push
jp
insl
pop
xchg
mov
inc
mov
movsl
adc
inc
jae
xor
jnp
sub
xor
add
inc
scas
xchg
int3
sbb
add
ja
sti
dec
and
add
movsl
push
jb
add
xor
enter
mov
scas
enter
or
adc
add
dec
jo
add
push
ds
jge
adc
pop
in
or
push
mov
or
addl
imul
pop
les
mov
add
xor
fwait
mov
mov
inc
rolb
xor
int3
pop
or
sbb
or
dec
or
imul
stc
sub
insl
inc
in
jbe
mov
in
inc
xorb
add
cltd
inc
test
jl
pop
mov
mov
push
ja
pusha
push
mov
cmp
xorb
lock
lret
add
push
push
sub
mov
mov
mov
or
out
test
adc
add
addr16
or
sub
lock
imul
pusha
rolb
outsb
repnz
icebp
adc
sbb
pop
cmp
adcb
mov
sbb
sub
test
xchg
fadds
and
pop
jo
orb
loopne
add
add
or
out
dec
add
je
push
adc
or
cmp
fidivrs
hlt
cmp
out
and
sub
adc
jns
sbb
xor
leave
add
in
adc
jge
push
inc
add
xor
cmp
dec
mov
orl
xor
cs
jae
xorb
outsb
sub
gs
cmp
out
add
push
pop
rcr
adc
push
mov
test
lea
rcrl
push
cld
lock
push
jmp
dec
add
and
xor
add
or
inc
idivb
mov
mov
add
sbb
pop
adc
add
inc
clc
movb
mov
out
repnz
dec
dec
xchg
cmp
sub
sarl
ds
sbbb
xor
cmpsb
dec
dec
inc
xchg
add
cmpl
test
inc
adc
mov
and
jo
das
add
jmp
pmullw
test
test
ljmp
jge
mov
add
inc
xor
aad
adc
fistl
sti
sahf
mov
jb
inc
shl
xor
jmp
and
out
or
jp
add
mov
pop
mov
mov
xor
cmp
cmp
xor
out
add
push
dec
nop
add
and
push
sub
in
nop
add
sub
inc
xor
inc
add
jmp
repnz
add
and
jnp
push
ret
leave
add
sub
xchg
xor
push
and
inc
test
cmpl
dec
sub
or
pop
btsl
mov
push
jnp
mov
shlb
inc
push
push
cld
jg
testb
out
inc
lahf
add
popa
fs
xor
xorl
mov
lea
inc
mov
movsl
xchg
in
add
sub
clc
icebp
jp
add
shrl
and
iret
shl
pop
arpl
mov
sub
stos
add
or
aad
mov
add
add
add
add
and
hlt
dec
les
in
add
add
adc
mov
add
ja
pop
xchg
fistps
in
lods
push
lock
or
mov
cmc
ds
out
xchg
push
fists
dec
mov
sahf
leave
push
pop
jnp
inc
ja
jmp
mov
or
inc
aam
add
pop
jl
ds
int3
jae
rolb
in
sub
xchg
mov
enter
sarl
das
jge
push
push
mov
mov
lock
rsm
faddl
sbb
jmp
dec
pop
cli
jne
add
and
daa
add
aad
shll
loope
sub
clc
aad
jae
inc
add
dec
push
add
imul
mov
fsub
push
push
add
fsubrs
cwtl
nop
pop
pinsrw
xchg
shr
jge
stos
sub
push
stc
das
cs
add
pop
or
or
push
mov
xor
xor
dec
pop
mov
std
or
imul
adc
add
insl
orb
xchg
xor
mov
push
add
adc
pop
outsl
add
pop
nop
and
int3
xchg
pusha
or
inc
push
adc
bound
lock
call
subb
jmp
inc
arpl
sti
push
add
mov
mov
and
lods
scas
leave
push
xchg
sbb
push
and
add
cld
mov
sub
loopne
dec
push
xchg
pusha
int
scas
test
fucomi
cmp
das
cmp
in
xchg
dec
dec
lods
pop
divb
adcb
push
pop
and
jbe
test
imul
inc
ret
das
inc
add
inc
xchg
mov
add
add
popf
fmul
out
push
lock
and
ss
stc
inc
add
dec
pop
and
ds
xchg
nop
in
jnp
clc
push
inc
add
aad
inc
addl
jb
add
mov
mov
imul
pop
mov
fiadds
in
stos
add
lods
stos
cmp
mov
je
dec
push
in
inc
xchg
dec
aam
daa
add
sbb
cli
mov
mov
mov
mov
dec
mov
mov
xor
and
pop
add
xchg
mov
out
inc
jns
adc
xchg
sbb
test
jle
in
inc
lds
inc
jle
xchg
mov
icebp
mov
and
ja
add
cli
imull
in
add
sub
out
lcall
in
call
xor
mov
push
enter
andb
hlt
inc
push
sub
mov
sub
fimuls
cld
cwtl
push
mov
add
add
aam
and
leave
push
popa
popf
pop
sahf
mov
add
aaa
cmpsl
jae
jmp
faddp
scas
xchg
loopne
dec
inc
adc
sub
push
call
dec
mov
ret
call
ljmp
jl
xchg
adc
leave
add
addr16
nop
lret
mov
jmp
sub
push
pop
in
mov
jle
mov
cmc
add
pop
pusha
mov
push
call
dec
add
jmp
and
sub
xor
shlb
add
and
add
jmp
and
in
leave
mov
decb
add
adc
mov
or
adc
cmp
cmc
sbb
jb
das
lods
sbb
mov
shrl
jge
add
pop
mov
cmp
and
fidivs
and
lds
add
in
mov
add
jnp
lods
xor
test
inc
fcmovbe
sbb
add
rorb
xchg
add
adcl
add
cmp
ja
and
out
jae
inc
not
cmp
rcr
add
push
dec
data16
mov
jmp
cmpsb
and
jb
push
nop
icebp
add
push
cmpsl
and
jmp
add
ja
ror
mov
add
ret
mov
dec
add
dec
adc
push
jge
inc
pushf
nop
xchg
xor
add
mov
xchg
mov
add
inc
fsubr
mov
cwtl
addl
push
dec
jl
dec
fwait
mov
inc
in
insb
push
pop
inc
cmp
add
xor
mov
orb
push
mov
jmp
mov
sub
and
mov
xchg
sahf
imul
add
push
dec
and
iret
and
cli
test
pusha
push
ds
fs
cwtl
pop
add
dec
push
jmp
add
sub
sbb
rcl
add
jo
stc
clc
adc
add
cli
stc
jb
add
adc
pushf
vmovhps
mov
xchg
sar
push
sub
pusha
mov
add
ja
push
jae
add
mov
cmpsl
mov
or
sahf
push
inc
hlt
and
stc
adc
push
ja
or
add
add
add
jp
push
add
adc
add
clc
sarb
call
mov
pop
inc
xchg
push
icebp
sub
nop
inc
xchg
jbe
add
adc
test
add
jl
pop
sub
fiaddl
jne
add
and
add
arpl
add
call
add
mov
nopl
jno
and
mov
test
mov
insb
fs
mov
sub
mov
or
add
rep
push
xchg
fistps
int3
cmp
or
call
mov
mov
add
adc
adc
loopne
in
adc
dec
pusha
out
pushl
sbb
frstor
add
pop
and
stos
pop
xchg
xchg
dec
add
and
add
iret
dec
sbb
mov
int3
push
sbb
clc
orb
adc
cwtl
sub
jmp
movsb
add
hlt
enter
sub
jae
shlb
inc
imull
add
insb
movsb
xor
ljmp
add
stos
lea
pop
inc
lret
add
dec
out
adcb
add
daa
push
adc
jl
loopne
push
add
xlat
push
lea
inc
add
movsb
stos
xor
add
or
jmp
stos
sbb
out
and
idivb
cwtl
popa
add
lock
pop
lods
sub
push
mov
add
ret
cmpsb
add
xor
add
cwtl
dec
test
add
pop
jns
pop
mov
mov
jnp
addb
cwtl
call
add
lahf
loopne
adc
pop
ret
push
sub
add
sbb
ljmp
dec
add
xchg
mov
call
mov
add
out
mov
cmp
mov
jnp
loopne
xchg
or
push
dec
inc
jmp
cltd
xchg
sbb
inc
dec
pop
cmp
jne
lcall
xchg
mov
add
adc
push
and
int3
add
mov
add
clc
xchg
ljmp
mov
mov
repnz
leave
rolb
xchg
pop
mov
cmp
push
fmul
jg
sub
pop
jbe
add
pop
rcr
fdivs
dec
inc
or
dec
jns
add
fcmove
xchg
dec
shl
or
shl
mov
pop
xchg
cmpsl
add
insl
add
mov
dec
popl
xor
int3
lock
cmp
pop
xorl
pop
out
out
lret
test
add
jns
mov
sbb
hlt
je
sub
daa
jae
push
out
mov
push
dec
cmc
mov
jg
fsubrs
lahf
add
sub
aam
add
in
or
push
mov
mov
add
xchg
mov
iret
test
shr
lea
sbb
sbb
xor
lock
push
out
pop
xchg
cmpl
enter
push
push
mov
add
call
sbb
movsl
hlt
rcll
or
imul
andb
push
movsl
js
add
sbb
cld
adc
adc
rcl
jge
push
leave
scas
clc
xchg
rolb
leave
shrl
int3
add
and
rclb
push
push
add
pop
inc
roll
inc
fidivl
or
or
repnz
cmp
xor
pop
add
sbb
xchg
addb
cmpsb
jno
add
pop
clc
les
xor
mov
add
dec
jne
xchg
out
push
sete
or
xchg
fsubl
pop
push
out
jmp
pcmpeqb
add
clc
pop
mov
add
adc
js
add
pop
dec
cld
out
test
add
cwtl
movsb
andb
push
push
push
add
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
test
pmulhw
roll
jns
pusha
fnstcw
mov
push
data16
push
jno
add
xchg
repz
mov
inc
push
push
adc
repz
add
addr16
and
jle
dec
adc
add
cwtl
jae
scas
insb
sub
pop
adc
clc
popa
out
xchg
sbb
xor
dec
cwtl
add
ret
pop
xchg
jl
jl
add
inc
push
outsl
push
dec
jne
add
popa
and
push
add
inc
loopne
out
pop
add
test
pop
cmpsb
out
imul
aad
clc
ficoml
sub
sbb
leave
jne
cwtl
xlat
clc
add
and
jb
mov
sbb
push
nop
jge
ret
aas
int3
arpl
insb
lahf
and
je
sbb
nop
aam
shlb
fsubs
data16
add
push
cli
push
mov
cmp
add
scas
add
dec
jo
cmp
adc
push
cli
lock
pop
add
loop
cmp
pushf
pop
add
fisubrl
sbb
or
pop
mov
cmp
je
or
push
add
cli
stos
and
aam
jp
sbb
jo
inc
in
jecxz
loope
add
jg
pop
test
cmp
incb
add
mov
mov
ficoml
xchg
adc
push
pop
xor
mov
sti
js
add
add
out
mov
cli
xchg
xor
cmp
subb
add
jmp
add
stos
pop
idivb
add
dec
test
mov
aas
jo
dec
sbb
imul
adc
and
psllw
mov
dec
pop
jecxz
adc
cs
add
xlat
lcall
or
xchg
cmpb
push
inc
xchg
flds
in
cmp
lea
daa
xchg
fdivr
or
lcall
add
aas
jecxz
imul
add
dec
xchg
and
cwtl
add
adc
bound
mov
inc
std
cmp
je
pop
testl
xchg
aaa
and
aas
push
inc
ds
cmp
pop
mov
mov
or
or
adc
push
mov
in
lock
loop
add
aam
cmp
adc
in
mov
cld
sub
jp
pop
hlt
pop
dec
add
xor
jmp
movsb
jge
out
dec
inc
pop
add
push
cmpsl
jmp
pop
sub
pop
cmp
andl
push
enter
dec
inc
addb
icebp
mov
add
fsubr
adc
jnp
inc
enter
pop
sub
add
xchg
loope
test
inc
fistps
cmpsl
pop
add
push
cld
sbb
aas
xor
add
les
rcrl
xchg
xchg
out
jo
mov
in
das
test
pop
stc
jmp
jo
cmp
rcrl
pop
xchg
subb
fs
add
hlt
clc
jnp
mov
rcr
jle
add
stos
adc
mov
enter
leave
cli
add
jb
mov
mov
jno
sub
arpl
dec
add
or
mov
add
pusha
xlat
stc
jl
dec
mov
out
add
cli
cmp
add
sbbl
and
movsl
xchg
fprem
ds
lahf
inc
aad
jae
push
fs
push
fsub
and
sbb
insb
cmp
add
mov
sub
xor
cld
cli
popf
je
js
les
pusha
xor
add
ja
mov
sub
push
mov
mov
jl
les
es
cmp
enter
lahf
es
add
inc
pop
imul
shl
shlb
or
pop
push
add
inc
lock
mov
pushf
add
xor
test
repz
add
add
push
add
push
lret
daa
pop
in
add
push
cmp
jbe
cmp
lcall
add
dec
loopne
inc
cmpsl
loope
dec
cmp
cmp
addr16
mov
push
iret
fcoms
cmpsb
popa
adc
pop
loopne
cld
push
in
inc
cmpsb
mov
out
jg
sbb
mov
cmp
jl
mov
jg
add
es
aam
dec
sti
cld
movsl
or
mov
inc
rorb
aas
add
les
and
add
loop
sbb
mov
imul
push
sbb
lahf
rcrl
aam
shrl
loop
imul
ror
in
and
and
out
add
repnz
mov
mov
mov
js
rorb
push
add
imul
add
in
mov
sarb
cs
dec
pop
jno
push
mov
loop
out
loope
in
lahf
pusha
repnz
add
sbb
and
cld
cmp
ficomps
je
jno
push
inc
inc
adc
filds
jb
cmp
mov
popf
add
dec
mov
add
ljmp
sbb
mov
or
push
xchg
sub
frstpm(287
sub
inc
add
jecxz
nop
add
repz
mov
adc
jge
add
push
lods
pop
pop
addb
cld
scas
xchg
and
cmpsb
sbb
fmull
enter
push
cmp
loope
adc
out
add
test
loop
xor
clc
fadds
lahf
or
sbbb
add
adc
add
lea
jnp
inc
xor
xchg
outsb
xchg
push
rcrb
call
daa
add
fcoml
mov
in
add
xchg
or
jno
xchg
adc
inc
push
pop
and
test
or
jmp
mov
pop
mov
adc
push
repnz
add
imul
fstl
mov
sbb
mov
loopne
push
test
add
mov
je
pop
nop
mov
sub
addl
mov
push
les
addb
sbb
inc
pushf
or
fiadds
outsb
dec
jle
popf
pusha
aad
das
or
jnp
flds
andl
add
adc
xor
sbb
sub
cmp
aam
cwtl
sbb
xchg
jg
add
xchg
es
in
cmp
mov
xchg
xchg
sub
mov
dec
jmp
flds
sub
push
lds
decl
hlt
lahf
imul
cmp
dec
add
fdivl
add
sub
lahf
pop
mov
aam
fildll
jmp
mov
add
inc
inc
push
sbb
xlat
js
xchg
add
pop
xor
and
add
clc
sub
add
cld
pop
aam
push
push
adc
dec
adc
add
xchg
mov
int3
push
inc
add
pop
add
dec
add
in
sub
out
jg
ds
imul
and
lods
jne
sub
xor
or
rclb
mov
push
stos
and
add
lret
ss
jp
push
sub
add
inc
xorb
add
pop
cmp
pop
mov
adc
mov
add
mov
dec
add
jne
icebp
add
ss
add
cmpsl
testl
sub
hlt
add
pop
lds
mov
lock
push
push
mov
xchg
add
cmp
inc
dec
enter
and
xchg
test
add
out
push
int
mov
sub
add
xor
pop
dec
push
call
add
sbb
jmp
xlat
jb
lods
sti
arpl
push
jae
mov
sub
sub
add
jecxz
rorl
add
sub
pop
add
cmp
cmp
rclb
dec
add
mov
push
je
or
pop
adc
cli
cld
xor
mov
adc
sub
pusha
rorb
lock
sbb
cli
lds
jmp
mov
or
decl
rorb
cld
mov
ja
add
mov
adc
js
mov
xchg
xchg
xor
inc
mov
shlb
mov
add
fildll
jecxz
sub
lock
lock
mov
test
dec
push
xchg
pop
test
pop
out
add
pop
out
jl
pop
scas
lret
sti
fistl
push
adc
stos
stc
mov
or
jmp
pop
push
mov
dec
adc
sbb
xchg
lcall
add
pop
fsub
add
inc
scas
adc
mov
jnp
cld
leave
shlb
ja
inc
dec
adc
push
lods
pusha
and
or
gs
lea
jecxz
cmp
loopne
cld
dec
add
ss
sbb
popf
push
out
add
lods
loopne
repz
add
xchg
out
clc
cmp
loop
mov
xchg
daa
push
frndint
or
inc
mov
insl
jnp
jno
mov
push
daa
cmp
mov
loope
jle
dec
jbe
xor
cltd
jmp
fidivrs
jne
lds
insb
push
pop
pop
inc
pop
stos
and
sub
fwait
out
enter
aas
jne
lahf
aad
sbbb
enter
les
addb
add
inc
dec
jne
sahf
rcll
rclb
push
add
iret
inc
cmpsl
sbb
cmp
int
cmp
push
lea
or
mov
movsb
add
jo
add
mov
mov
int3
sbb
adc
and
out
add
add
push
add
jnp
fs
adc
add
and
leave
pusha
fcmovne
jae
add
loop
mov
mov
or
push
dec
in
mov
dec
add
mov
pminub
notl
mov
subb
sub
xor
or
or
lods
testl
cmpsb
cld
mov
mov
mov
dec
addr16
adc
stos
lods
adc
pop
mov
cmp
push
inc
adc
mov
xor
mov
add
jle
popl
and
sub
sub
mov
pop
cwtl
mov
fldl
cmpsl
jp
sub
xlat
dec
in
adc
mov
popf
jno
imul
push
adc
add
mov
mov
aaa
test
lret
mov
and
dec
push
adc
inc
mov
mov
pop
inc
test
jge
jb
inc
test
mov
mov
cmp
sub
lret
popa
mov
inc
or
insl
mov
addb
ret
inc
push
mov
mov
pusha
mov
ljmp
insl
adc
mov
xchg
pushf
add
xor
push
add
and
mov
ret
add
fdivrp
xor
add
xchg
adc
movb
push
data16
jge
sub
aaa
je
mov
clc
adc
nop
add
mov
mov
sbb
push
add
or
sbb
sub
add
dec
or
cld
jo
sub
xchg
jns
add
adc
fmuls
aad
add
pop
bound
push
mov
rcrl
push
sbb
sub
aaa
lea
add
mov
or
or
jecxz
mov
in
add
out
jo
push
stos
fldenv
in
rclb
push
je
mov
push
jae
je
add
adc
sub
test
lods
cmp
and
les
or
rcl
repnz
adc
inc
cltd
cmpb
mov
add
test
and
add
ljmp
add
les
add
xor
push
sub
popf
sbb
clc
add
imul
add
cmp
jp
pop
adc
cmp
inc
add
mov
cwtl
pop
add
loop
scas
push
xchg
mov
push
call
pop
or
rolb
cmp
rcll
jp
pop
pop
test
pop
push
sub
push
jmp
push
jl
mov
cmp
mov
call
ljmp
cmp
add
or
add
fs
jecxz
fsubr
push
add
das
pop
ret
xchg
inc
roll
or
mov
xor
pop
cli
shll
xor
cli
imul
pop
les
cmp
push
adcb
dec
dec
aaa
add
inc
jne
add
add
test
pop
xor
cwtl
jnp
jno
add
lcall
push
or
inc
inc
or
dec
sbb
or
adc
inc
add
xor
jnp
pushf
add
add
je
mov
mov
add
mov
xchg
roll
ljmp
lahf
mov
andl
pop
sub
lock
daa
jnp
add
mov
ja
adc
and
ds
ljmp
js
mov
xor
push
push
jl
int
pusha
push
adc
pop
mov
inc
stos
mov
mov
scas
mov
inc
jns
inc
dec
jg
notb
add
push
pop
lcall
pop
adc
fcompl
mov
mov
mov
add
add
add
push
addb
inc
add
push
sbb
repz
or
push
daa
add
lds
adc
lret
lea
push
fsubrl
les
idivl
imul
and
incl
cltd
dec
andl
add
pop
sbb
add
push
mov
scas
add
cmp
mull
jno
push
adc
in
sub
and
popf
add
jg
mov
push
ja
popf
adc
sbb
add
ret
push
pop
pop
adc
test
aas
pop
jecxz
sahf
push
mov
lods
aam
xlat
add
add
or
enter
loop
pop
mov
ficomps
inc
mov
inc
sub
add
fmuls
adc
inc
add
jge
dec
add
test
daa
and
sarl
add
adc
cmc
clc
adc
xor
cmpsl
scas
push
mov
push
dec
subb
sbb
add
test
pop
adc
aam
and
mov
mov
rclb
pop
mov
xlat
shlb
dec
stos
jg
test
mov
in
ja
add
pusha
das
pop
sbb
dec
and
adc
add
rcll
or
sbb
ljmp
add
and
adc
sar
sbb
std
pop
xorb
testl
xor
ret
syscall
mov
fildl
xor
into
push
add
push
adc
fwait
sbb
ljmp
and
sbb
add
pop
cltd
jg
aam
jb
insb
or
cli
cs
or
push
add
sti
ret
add
jns
jmp
add
out
and
mov
add
call
lcall
or
add
push
push
xorb
rcl
xor
push
and
sub
addb
addr16
lock
stc
repz
adc
cmc
pop
hlt
add
test
push
mov
cmpb
xchg
mov
mov
push
sar
movlps
icebp
pop
incl
sbb
add
or
add
sarb
xorb
mov
cld
add
mov
pop
ror
pop
add
cmc
xchg
pop
neg
add
mov
cmpsl
add
jecxz
divb
jo
sbb
loopne
sub
mov
stos
pop
add
mov
iret
cmp
and
adc
cmp
orb
rcrb
mov
std
push
jge
or
sbb
in
jle
cmp
pushf
dec
inc
es
add
mov
mov
adc
dec
mov
jb
cmp
push
adc
frstor
addr16
shll
push
push
add
mov
and
sub
lret
add
repnz
decb
add
xchg
lds
inc
add
mov
cwtl
fldl
xor
mov
lock
cmp
xor
iret
pop
addl
pop
xor
stc
cmp
or
sub
stos
sub
sbb
lea
ret
addl
add
lret
add
shl
and
incb
push
push
or
ds
jb
add
lea
dec
sub
xchg
add
add
rol
aam
push
sbbb
lcall
pop
js
popa
movsb
cmp
add
mov
xchg
add
pop
repz
pushf
subl
and
sub
xor
dec
add
xchg
add
cmpsl
out
add
pusha
adc
cmp
add
cmc
lea
add
addr16
or
add
sbb
adc
jmp
pusha
ret
js
dec
decb
add
mov
add
les
push
xor
push
add
add
sbb
sub
dec
push
shlb
jbe
mov
pushf
adc
sub
icebp
xor
paddsb
cwtl
inc
mov
add
mov
mov
cmp
or
add
rcrb
arpl
add
xor
add
stos
pop
push
cmp
pusha
addb
or
mov
daa
add
addr16
xor
mov
add
pop
and
mov
jl
ret
dec
andb
or
mov
push
fidivrl
add
push
sub
add
dec
or
or
pop
xchg
clc
mov
add
push
add
push
add
dec
fildl
pminsw
cmpb
add
sub
inc
push
dec
adc
or
and
xor
and
pop
ret
push
frstor
xor
jle
fcom
add
inc
xor
mov
shrl
add
xor
sbb
shrb
add
xchg
ja
and
add
dec
push
adc
lret
mov
adc
lods
xchg
aam
adc
add
adcl
add
cmp
add
xlat
push
xor
pop
add
daa
sbb
pop
xor
or
cmp
jecxz
sbb
dec
repz
or
loope
cmpsb
add
push
mov
repnz
add
cmpb
mov
out
ds
mov
add
xchg
add
or
mov
pop
push
lahf
xor
adc
in
mov
cs
xchg
sbb
mov
data16
dec
pop
sbb
and
or
out
loop
sbb
add
adc
mov
add
jo
add
cltd
or
add
cmp
add
and
jb
cmp
push
xor
enter
pop
inc
repz
or
loop
sbb
or
movsb
loopne
push
dec
cwtl
pop
jb
adc
out
jmp
dec
repnz
adc
inc
add
xchg
cli
mov
out
int3
das
lds
xchg
call
inc
and
out
cmpsb
in
daa
pusha
xor
jp
pop
or
mov
pop
dec
dec
jno
iret
mov
pop
fs
movsl
jnp
add
test
fcmovne
mov
and
add
movsl
lea
xchg
pop
xor
add
test
fiaddl
or
inc
lcall
sbb
in
jle
cs
sbb
ds
cltd
mov
aam
add
push
sub
pop
and
jb
add
pop
pop
add
mov
lcall
mov
pop
cmpl
cwtl
or
ljmp
pop
mov
add
or
out
inc
mov
mov
push
fwait
pop
xor
dec
adc
iret
or
sbb
add
inc
popf
xchg
push
push
adc
add
inc
add
jo
and
jno
add
sub
inc
add
ljmp
stos
adc
mov
mov
xlat
pop
test
add
push
fbld
jge
std
mov
sub
push
testb
push
cli
push
imul
sub
gs
ds
add
rcrb
mov
aas
mov
lcall
xor
and
sbb
mov
enter
cs
fdivrl
mov
or
outsl
les
nop
add
fisubrl
adc
repz
sbb
shll
mov
add
push
add
daa
clc
pop
xor
xchg
add
ret
pop
inc
fisttpl
dec
add
mov
sub
sbb
add
pop
test
pop
mov
fwait
mov
rcrb
mov
add
loop
xchg
je
inc
in
add
pop
mov
sub
mov
sbb
movsl
test
xor
sbb
pop
push
and
add
mov
rclb
aad
mov
xchg
lods
faddl
pop
ljmp
add
sbb
and
dec
add
ja
sub
xor
adc
and
adc
add
xchg
dec
inc
test
xor
cs
jle
push
inc
pop
xor
xchg
ljmp
mov
pop
dec
packsswb
push
loopne
xchg
mov
add
mov
ret
test
mov
cmp
cmc
jmp
pusha
push
test
add
aam
add
mov
mov
mov
and
push
jge
jl
popa
or
add
dec
push
sti
add
add
sbb
dec
in
repnz
pop
rcrb
pop
rolb
adc
into
or
out
xor
add
daa
insl
dec
mov
lds
push
dec
addr16
add
in
sbb
cmp
pop
add
or
sahf
push
stos
sbb
lret
ret
adc
aad
ds
sub
add
adc
cs
int3
mov
inc
jmp
add
add
xor
stc
pop
arpl
or
or
shr
mov
ja
push
add
dec
fsubrs
mov
sbb
ror
sbb
push
fs
mov
call
push
pop
add
pop
push
sub
js
inc
cmc
adc
clc
test
or
xor
out
lahf
adcb
jmp
jo
mov
rclb
jg
add
ja
out
add
sbb
mov
xchg
add
jmp
adc
sbb
or
mov
or
add
cld
dec
push
dec
add
jbe
lcall
lea
in
subb
daa
leave
andl
es
add
outsb
and
out
mov
pop
mov
xchg
add
shl
sbb
adc
hlt
in
fstpl
pop
adc
int3
push
jle
jnp
test
cmp
inc
pop
rolb
out
jg
add
push
xor
mov
add
adc
aad
xor
divb
rorb
push
subb
mov
hlt
popl
mov
test
cld
cs
stos
cmp
add
shll
pusha
mov
or
in
rolb
sub
loopne
movsb
or
xlat
nop
sub
inc
mov
pop
lock
adc
or
pop
rcrb
xlat
add
incb
icebp
push
jecxz
and
jnp
add
std
jmp
hlt
in
add
adc
add
lea
and
lock
fsts
inc
fs
or
iret
push
add
push
rcr
gs
mov
leave
add
fistpll
pop
add
lock
add
xchg
pop
clc
cmp
dec
xchg
test
mov
add
popa
inc
repnz
iret
call
sub
inc
shlb
int3
loopne
add
out
pusha
adc
int3
pop
cmpsb
add
mov
pop
push
add
mov
push
pop
add
ud2
leave
sbb
cmp
mov
jne
int
mov
mov
mov
adc
add
cmp
or
push
repz
pop
fsubr
loopne
aam
lcall
sub
movsb
push
dec
adc
mov
les
leave
repnz
ja
add
lret
sub
xor
cli
jne
mov
or
push
popl
loopne
dec
rorb
add
ds
and
ret
testl
cltd
bswap
les
mov
add
std
add
sbb
add
cld
add
mov
leave
enter
pop
xchg
and
add
add
das
inc
mov
mov
mov
adc
add
jbe
xor
dec
loop
xchg
or
push
sbb
pop
js
loopne
mov
clc
push
cwtl
or
sbb
add
sbb
divl
imul
movsb
orb
mov
xchg
push
jg
lock
in
add
imul
adc
cmpsl
add
push
mov
rolb
lea
push
stos
sub
push
and
movhps
rclb
add
xchg
add
scas
push
mov
jmp
dec
sub
mov
or
add
xor
jnp
sbb
out
sbb
in
clc
cmpsb
and
pusha
inc
cli
bound
dec
add
xor
or
je
cmp
aaa
add
cmpb
jne
inc
add
dec
loopne
jmp
or
mov
push
jo,pt
add
cmc
jne
add
loopne
sbbl
pop
add
out
add
pop
pop
push
adc
add
dec
xor
mov
test
repnz
or
cmp
dec
xorb
pop
addb
jne
push
xor
push
pusha
sub
pop
xlat
lea
adc
int3
pushl
add
push
mov
add
pop
mov
pop
xor
push
push
das
jmp
add
mov
mov
fists
adc
jmp
mov
add
xorl
stos
sbb
not
add
add
data16
jg
push
dec
add
mov
cmp
cmp
dec
and
mov
lods
push
push
mov
adc
fcmovbe
mov
enter
pop
call
gs
jae
pop
add
repnz
add
rol
add
pop
adc
out
fnstenv
xchg
in
int
mov
lds
or
sub
gs
push
inc
adc
mov
ud1
pusha
sub
loop
push
push
xor
ret
and
leave
xlat
sub
pop
sbb
jmp
es
roll
cmp
les
lret
pop
jl
je
add
cs
in
shl
pop
mov
cmp
xor
ja
add
mov
sbb
xor
jmp
lret
dec
cmpsl
push
out
adc
pop
cld
inc
jb
movsl
add
aam
call
or
pop
jns
adc
int3
movsl
push
add
xorb
popf
push
mov
add
test
sbb
ret
dec
vmovd
add
in
sub
push
cmpb
imul
cs
addr16
not
orb
inc
movsb
sbb
add
jecxz
movsl
and
push
xor
sub
out
ja
lret
testl
int
addl
adc
ret
loop
xchg
hlt
pop
pop
sahf
cld
adc
add
push
inc
cmp
add
test
cmp
inc
enter
stos
repz
xchg
pusha
daa
shlb
pop
in
pushf
add
or
and
pop
jb
cmp
cmp
subb
xorl
subl
sbb
add
push
and
sarb
cs
sldt
sub
ds
lahf
int3
and
sbbb
adc
popl
ret
inc
icebp
push
repnz
or
push
enter
in
iret
and
and
sub
roll
fisttps
jle
repz
push
add
pop
sar
aaa
add
and
icebp
faddl
xlat
xchg
mov
push
dec
push
push
xchg
data16
sbb
sub
cmp
mov
or
add
rclb
push
xchg
lods
insl
sbb
ficoms
add
mov
and
xor
adc
clc
popa
mov
out
loop
mov
jp
mov
inc
xorl
add
or
lea
mov
add
mov
push
mov
push
inc
mov
mov
add
hlt
and
out
jb
addr16
cli
orb
inc
xchg
cmc
adc
leave
pop
enter
dec
add
push
faddl
mov
sbbb
xchg
aad
in
fistpll
cmp
test
push
call
es
outsl
xchg
add
push
mov
out
bound
xchg
adc
aas
push
jne
xchg
cwtl
out
pop
adc
add
imul
pusha
push
popl
add
repnz
sbb
pop
fiaddl
lock
add
scas
out
mov
and
movsl
push
fs
adc
repnz
jbe
add
add
pop
ret
pop
iret
dec
dec
inc
push
mov
xchg
je
js
or
sub
xlat
jle
jg
add
sbb
roll
sbbl
adc
jbe
cmpb
popa
cwtl
cmp
mov
add
mov
test
add
pop
nop
mov
push
loope
icebp
shr
add
push
cli
mov
add
fisttpl
faddl
ret
sub
testb
add
mov
ret
adc
testb
pop
lds
flds
fstpl
testl
fiadds
xchg
and
aas
add
push
add
ja
mov
add
inc
xor
pop
clc
adc
loopne
lock
repz
fadds
adc
xlat
xchg
popa
enter
cmpsl
add
cmp
sbb
loopne
adc
inc
testl
inc
rolb
jnp
inc
xor
add
adc
decl
lock
add
hlt
daa
and
flds
add
dec
test
add
popf
outsl
adc
sbb
cmp
mov
mov
subl
data16
sub
jns
push
mov
cmp
sahf
shl
dec
xchg
fcos
call
and
insl
loopne
inc
hlt
push
pop
cmp
mov
add
pop
lahf
mov
adc
pop
add
mov
shrb
ja
iret
dec
add
cmp
in
sub
fiaddl
nop
jp
popa
sbb
add
rorb
xorl
roll
mov
add
lock
rol
aas
xchg
push
add
add
pop
out
test
add
scas
sub
leave
insb
inc
mov
shl
out
pop
pop
jmp
push
lods
add
jecxz
pushf
inc
cmp
mov
jmp
aam
test
jo
or
or
pop
push
or
xor
repnz
push
pop
in
xor
inc
in
pop
or
pop
sub
add
pushl
mov
cmp
xchg
imull
daa
add
ja
inc
add
std
call
add
inc
mov
pushf
fucomip
sub
add
mov
mov
push
xchg
aam
push
pusha
shlb
roll
jne
shrl
jl
xor
stc
and
xor
add
jge
pop
add
pop
loopne
sbb
xorb
add
pop
imul
ret
inc
mov
inc
mov
stc
in
add
cmp
test
ret
bnd
jecxz
pop
mov
xchg
fstl
and
ret
sahf
mov
add
inc
popf
movsb
into
xchg
leave
dec
and
xchg
outsb
pop
inc
cmp
jle
add
dec
lods
sub
test
sub
ror
inc
repz
fists
xchg
xchg
mov
add
das
lock
add
dec
mov
add
test
add
lds
sbb
xchg
mov
rcr
push
fwait
data16
mov
stos
dec
pusha
sub
add
out
mov
jne
lcall
jno
push
jbe
nop
jne
orb
clc
outsb
loopne
ja
subl
and
fcoms
lock
mov
mov
adc
push
add
push
adc
push
lea
add
add
out
dec
add
inc
loope
pop
mov
loopne
xchg
mov
pop
add
mov
addl
sub
dec
cmp
andb
push
pop
xor
pushf
and
dec
mov
or
inc
dec
jge
dec
mov
or
push
push
cmp
lcall
popa
je
stc
add
cwtl
clc
xchg
sbb
xchg
out
mov
popa
sub
mov
dec
pop
les
jb
outsb
mov
repz
test
add
pop
sub
pusha
add
sub
mov
jecxz
push
arpl
add
adc
test
dec
mov
dec
dec
imul
xchg
pop
sarl
incl
ret
mov
and
fadds
jo
ljmp
in
dec
lcall
nop
loopne
aam
ficoms
dec
adc
mov
adc
cs
in
sbb
into
mov
xchg
inc
adc
or
cmp
fdivl
add
and
test
add
rorl
mov
push
enter
out
dec
lods
mov
nop
xchg
push
jb
loop
jnp
in
shrb
in
mov
lea
add
mov
adc
cli
lret
add
pop
mov
lock
das
push
push
add
cmpsb
int3
mov
push
push
push
pop
adc
and
cmp
jb
pop
add
mov
fwait
mov
in
pop
jbe
addb
add
push
lea
add
adc
nop
lods
add
cs
and
add
push
jmp
js
and
mov
add
pop
cmp
sub
es
inc
insl
mov
add
adc
repnz
sarb
js
cld
aaa
orb
sbb
mov
jl
or
lea
cmp
sbb
lock
call
adc
in
stos
addl
rclb
pop
xor
push
fwait
jl
sub
sbb
jg
rolb
push
insb
loop
add
lea
pop
addb
xor
add
sbb
imul
jp
push
int
inc
add
inc
xchg
mov
rcl
lcall
ljmp
jp
sarb
rorb
cmp
xchg
icebp
sarb
mov
rolb
call
xor
fdivrp
mov
aas
add
or
popa
or
fs
dec
call
icebp
add
sbb
mov
pop
fnsave
mov
add
dec
jge
scas
xchg
sub
dec
sbb
inc
faddl
lret
popa
and
mov
lods
push
stos
or
add
and
xchg
adc
jns
or
mov
add
add
add
push
pusha
popa
xchg
pop
jbe
add
pushf
push
pop
jge
sub
lea
rclb
rolb
jg
sbb
mov
aad
bound
test
jmp
mov
jecxz
addr16
adc
fsubr
xchg
icebp
lea
jp
imul
movl
add
roll
roll
ret
stos
das
rolb
pop
aam
inc
and
dec
and
add
xor
cwtl
loop
aad
daa
mov
outsl
ja
mov
aaa
mov
hlt
push
in
mov
imul
add
add
sub
push
fistpll
repnz
testb
cmp
dec
inc
add
push
mov
mov
or
cmp
je
inc
leave
cs
xchg
pop
pusha
jg
test
jbe
add
xchg
lahf
or
outsb
push
dec
cli
test
add
aaa
pusha
sbb
add
test
add
add
sub
ss
xchg
in
out
mov
fidivrl
add
push
mov
cmp
xchg
add
mov
or
push
push
mov
cmpsl
pop
xchg
xchg
sub
dec
adc
aaa
movsl
pop
push
xor
cltd
dec
adc
fwait
dec
or
adc
add
xor
sub
movsl
push
push
icebp
add
cmpsl
outsb
or
cmp
add
cwtl
popf
add
push
loope
add
dec
push
jg
push
xchg
jns
jmp
inc
test
add
sbb
add
push
sbb
xor
add
movmskps
add
icebp
das
mov
gs
mov
pop
dec
add
inc
stc
fidivrl
pop
lahf
adc
nop
add
icebp
mov
add
or
add
negl
pop
push
jl
sarb
adc
xchg
inc
sub
cmp
lret
sahf
xchg
mov
adc
mov
inc
adc
add
sub
sub
pusha
dec
or
mov
ret
enter
pop
add
or
xor
shll
cli
add
push
ja
add
cmp
add
add
fiaddl
in
stc
cld
outsl
xor
adc
pop
test
xchg
mov
rorb
push
lret
inc
push
andb
je
or
ja
xorb
or
out
dec
adc
push
in
rcll
nop
loopne
popa
or
push
add
and
aad
jbe
push
add
sub
xlat
xor
repnz
dec
add
cmp
and
add
ficoml
aad
mov
and
test
pop
mov
add
hlt
fwait
push
dec
pop
add
pop
mov
add
jl
addb
sti
mov
sbb
cmp
fldt
dec
push
jecxz
ljmp
xchg
jo
adc
add
xor
mov
negb
dec
add
iret
mov
adc
out
add
cmp
xor
cmp
lods
loope
add
cltd
aad
push
pop
lds
inc
push
adc
cmp
xor
rorb
enter
cmp
sbb
push
leave
mov
dec
jmp
shrl
sub
mov
mov
jge
cmp
dec
std
addl
or
adc
loopne
adc
pandn
daa
mov
adc
rclb
repnz
xchg
or
add
and
pslld
and
jecxz
push
inc
sbb
punpckhbw
xchg
rcrl
cmp
neg
movsl
mov
mov
jmp
pop
lea
sbb
outsb
imul
or
mov
clc
lock
ror
add
mov
enter
filds
add
add
ret
cli
mov
pop
pop
push
pop
shlb
mov
bound
push
add
jmp
ds
dec
sbbb
aas
adc
add
push
lock
cmp
jmp
pop
pop
jns,pn
jl
add
or
scas
dec
inc
iret
push
add
and
push
adc
adc
mov
cld
adc
cwtl
sub
roll
lret
xlat
mov
repz
adc
mov
pop
pusha
cmp
je
add
add
and
sub
roll
pop
xlat
mov
fwait
jne
pusha
adcb
and
addb
cli
mov
jecxz
scas
inc
jge
or
mov
add
imul
ljmp
js
and
dec
unpcklps
subb
out
or
add
cmp
add
enter
xor
movsl
data16
mov
mov
out
jmp
repnz
jae
sbb
xchg
add
ret
add
dec
inc
push
pop
ret
mov
stc
add
arpl
sahf
mov
xor
repnz
and
dec
sti
lods
jp
xchg
je
popa
adc
lcall
add
clc
nop
add
mov
mov
or
lea
add
adcl
xchg
aad
jno
add
out
xor
sub
int3
add
or
xlat
xor
pop
fadds
nop
inc
movsl
inc
out
jmp
or
pop
push
dec
adc
cmp
inc
mov
int3
fcomip
psubd
and
add
or
adc
shlb
add
aaa
push
jae
cmpb
add
or
push
jl
call
push
mov
repnz
mov
add
add
and
test
stos
xchg
push
mov
sbb
push
add
add
inc
adcb
cwtl
popf
add
pxor
dec
jmp
shll
jl
add
mov
xor
jg
add
mov
push
rolb
popf
mov
add
and
pop
sub
and
cmp
clc
xorb
jl
xor
add
test
and
mov
pop
call
lret
pop
cmc
int3
ljmp
repz
pusha
int
in
add
push
ret
orb
mov
jmp
fisubl
sub
clc
repz
add
ljmp
stc
insl
add
cmp
push
mov
push
mov
inc
lods
add
pop
or
hlt
sub
push
and
loope
nop
arpl
xor
fstps
imul
jmp
outsb
push
jb
cld
push
add
or
adc
clc
repz
adcb
jle
add
sub
add
adc
shll
pop
pushf
jns
add
lcall
push
cmp
mov
insl
pop
adc
add
inc
fistl
imul
jo
test
aam
pusha
dec
inc
lea
dec
lret
xor
jmp
add
inc
stos
aam
les
add
roll
mov
cmp
mov
popl
push
or
lds
sbb
jnp
pop
sub
loop
jge
mov
jns
pop
shl
adc
sub
aas
xlat
jo
add
cld
loopne
push
push
jl
add
mov
xchg
ljmp
das
add
loopne
repz
push
aad
cli
mov
imul
movsb
push
jnp
mov
add
xor
add
rcl
ljmp
dec
add
jo
mov
not
push
push
idivb
shr
jb
xlat
add
and
pop
jbe
loopne
add
ret
cmpsb
mov
cmp
add
cltd
pop
loope
inc
sub
addl
je
movsb
inc
add
cmp
fidivrs
aad
cmp
sub
xlat
sub
add
adc
adc
sbb
pop
add
fldcw
jo
add
cmp
jb
push
daa
xor
lret
jo
xchg
inc
loopne
xor
push
xor
lds
lcall
shlb
mov
jo
add
mov
dec
sarb
test
lea
sti
inc
add
ret
scas
call
add
imul
mov
cmp
jae
push
add
cmpsb
jl
pushf
jb
cwtl
loope
paddw
add
ss
dec
cltd
sub
pop
jge
push
xor
add
lea
add
addb
push
dec
pop
and
ss
add
sub
ret
fwait
fs
ds
push
sub
outsl
add
icebp
or
and
pop
sbb
loopne
jo
stos
dec
dec
mov
aaa
inc
jnp
roll
dec
int
cmp
lock
xchg
loope
cmp
imul
call
dec
test
pop
and
add
aad
loope
out
fmul
bound
add
push
add
mov
data16
pop
adc
add
mov
inc
cmp
jp
add
and
push
cmp
rcrl
sbb
or
loope
cmp
outsl
ljmp
pop
xchg
lock
pushf
pop
jae
add
push
cmpb
add
shrb
lea
sub
outsb
xor
or
sub
sbb
sub
dec
push
icebp
in
pop
add
mov
add
jge
xor
nop
dec
sub
adc
add
cmc
push
sbb
mov
pushf
xchg
pop
clc
out
pop
add
and
cltd
sbb
mov
adc
pop
jae
lods
cmp
or
rolb
je
cmpb
add
pop
mov
or
add
push
in
push
ljmp
mov
jb
push
dec
sub
add
int
scas
sub
xchg
cmp
addl
jl
loopne
add
inc
jp
mov
rcrb
jg
cwtl
popl
fdivr
dec
or
add
and
call
out
add
fildl
clc
cmc
add
dec
inc
mov
mov
add
sub
add
sbb
imul
loope
addr16
ret
test
add
adc
mov
aam
inc
repz
dec
fcoms
mov
add
cwtl
jne
add
adc
pop
xchg
or
int3
add
popf
cmpsb
daa
add
or
roll
jbe
es
push
add
pop
sbb
je
mov
push
enter
in
imul
jno
in
ja
add
inc
js
les
aad
add
and
leave
jnp
lods
enter
push
in
test
inc
inc
loopne
push
lds
push
dec
stos
adcb
adc
adc
nop
mov
test
add
clc
xor
jg
push
adc
cmp
xor
push
fdivs
loope
sbb
sbb
mov
hlt
aad
std
inc
nopl
loopne
add
push
xor
xor
test
test
add
ret
lahf
add
mov
jg
sub
fwait
mov
mov
fs
jo
add
mov
or
mov
push
loop
jne
mov
add
mov
das
cmp
lcall
cwtl
add
loopne
les
add
jbe
or
ja
mov
cltd
jae
inc
or
pop
push
add
jecxz
lock
or
push
call
ljmp
sub
daa
sar
add
lcall
les
add
pop
xor
mov
cmp
dec
add
sbb
xor
jl
add
pop
loop
repnz
pop
pop
jg
add
jns
jne
cwtl
xchg
sbbl
mov
jne
sbb
test
ret
out
xor
pop
push
scas
add
add
pop
roll
leave
imul
dec
loopne
push
mov
scas
pop
loop
lcall
daa
inc
sub
test
jne
or
pop
mov
cmp
add
push
stos
or
call
bound
ret
pusha
adc
cmp
add
inc
repnz
cmp
mov
mov
adc
stos
cmp
pop
aas
add
add
push
inc
test
mov
cli
sbb
and
fcoml
dec
mov
push
dec
xchg
inc
jb
and
rolb
vmaskmovdqu
lfs
push
xorb
inc
jmp
orl
add
orb
test
test
add
outsb
cmp
out
pop
add
xor
and
ret
pop
add
cltd
daa
and
stc
sbb
sbb
jno
loope
xor
mov
push
inc
jo
add
mov
push
dec
cmp
and
fs
add
fiaddl
outsl
scas
adcb
sub
or
mov
insb
fcoms
stos
dec
add
sbb
mov
and
push
or
adc
mov
leave
add
test
je
daa
mov
mov
jae
add
lods
mov
loop
stc
xor
add
repz
loope
add
add
mov
clc
add
lret
or
add
push
sub
cmp
and
jo
sub
lock
test
add
in
or
call
js
mov
pop
in
cwtl
dec
add
hlt
out
sub
aam
fildll
loopne
pop
jo
add
mov
or
and
repnz
mov
lock
add
and
outsb
and
inc
mov
push
push
push
jmp
pushf
stos
enter
daa
pop
xor
rcrl
pop
adc
push
pop
cmc
lea
shrl
add
xor
enter
add
adc
adc
push
and
and
repnz
cmp
mov
inc
jne
test
shlb
movsl
pop
fmull
mov
lea
push
mov
cltd
mov
add
orl
andb
mov
inc
add
push
xchg
mov
popa
jo
mov
aas
add
gs
mov
flds
rcll
or
or
fiaddl
dec
addb
add
inc
adc
mov
test
scas
and
cli
or
movsb
jecxz
inc
inc
mov
add
mov
nop
push
add
mov
pusha
sbb
pop
jno
imul
movsl
add
gs
jecxz
arpl
mov
mov
add
shll
mov
add
sbb
pop
lret
nop
sbb
pop
add
dec
aas
jo
lea
add
mov
sbb
mov
mov
mov
and
add
test
and
mov
js
add
cmc
or
dec
lea
rolb
js
fldenv
sbb
call
in
or
pop
jle
add
bound
testl
adc
ljmp
andb
cmp
add
movsb
jmp
inc
mov
sbb
add
mov
mov
jno
gs
pushl
push
stos
add
out
mov
incb
jecxz
push
mov
lds
add
or
and
pop
leave
pop
jle
pop
shl
mov
add
push
add
pop
inc
adc
mov
movsl
addb
fnstsw
test
in
ds
and
cmp
adc
inc
cmp
shl
inc
dec
jne
cmp
push
call
sub
pop
test
sbb
cmpsb
jne
push
adc
call
ds
push
add
ret
dec
imul
and
mov
add
aas
xchg
xchg
enter
add
fimuls
or
js
push
roll
jae
add
scas
test
pop
ror
add
sbb
add
xchg
xor
adc
and
dec
add
mov
testb
adc
aam
push
mov
cmp
mov
jge
pusha
or
pop
call
jb
mov
and
dec
orb
push
jae
push
test
into
inc
add
sarb
bound
mov
outsb
mov
sbb
jge
push
jnp
in
add
call
mov
hlt
inc
pop
lock
pop
inc
clc
sub
shll
gs
pushf
aam
cmpsb
add
add
das
aas
adc
push
jbe
int
es
clc
in
add
add
int3
mov
dec
leave
adc
xor
fbld
fs
or
movsb
add
mov
std
pusha
xchg
mov
jbe
shlb
lock
pop
sub
xor
adc
mov
push
daa
dec
ljmp
cmp
add
push
pop
lahf
and
xchg
iret
dec
add
jmp
inc
repz
out
add
mov
mov
inc
mov
xlat
push
sub
in
mov
sbb
jge
jb
pushf
push
adc
pop
mov
push
xchg
cmp
and
dec
xchg
addl
mov
push
add
inc
das
int
pusha
into
push
adc
inc
shlb
lock
imul
jne
sub
add
mov
xorl
test
mov
into
add
out
mov
mov
shl
add
push
xlat
std
test
sub
cmp
xchg
add
clc
jae
jle
add
mov
jl
mov
jmp
add
js
mov
add
and
and
or
push
jb
lret
pop
bound
dec
ss
adc
add
xor
push
xor
jmp
leave
sub
pusha
dec
and
cmc
rolb
scas
add
popf
push
ds
ret
sbb
clc
fadds
add
or
enter
movsl
divl
mov
test
jmp
dec
add
les
push
xor
mov
adc
mov
leave
add
sub
xlat
pop
fcmovnbe
add
outsl
lea
out
test
add
xor
outsb
in
pop
or
pop
sub
fbstp
mov
inc
mov
jnp
push
adcb
lret
add
enter
stc
outsl
loop
movsl
push
pusha
out
sbb
push
repz
shlb
addr16
mov
mov
mov
add
lret
repz
mov
gs
mov
stos
cmp
call
cwtl
jno
add
lea
jo
stc
sbb
sub
call
jmp
aaa
add
fbld
mov
inc
movsl
push
cs
pop
mov
mov
ja
stos
or
inc
daa
je
rorl
rcrb
das
inc
fs
addr16
xor
jl
add
sbb
push
fwait
dec
pop
mov
stos
pop
xorb
mov
add
jle,pt
adc
popf
subb
mov
fmuls
add
movsb
jle
cld
repz
mov
jb
cltd
add
push
out
addb
inc
imul
pusha
fcomps
pop
xchg
enter
lods
push
andb
add
jg
xor
add
inc
out
testl
cmp
dec
jbe
add
scas
dec
adc
lret
nop
call
mov
jg
add
fbstp
rolb
mov
inc
sbb
adc
lcall
jge
insl
clc
ljmp
call
push
adc
add
push
pop
sbb
mov
sbb
add
in
sub
mov
mov
adc
arpl
cmpl
adc
push
ja
push
stos
sbb
filds
xlat
sub
cwtl
cltd
add
call
ljmp
mov
push
xchg
pop
add
add
mov
test
pause
les
cwtl
add
negl
dec
pop
in
mov
sbb
cltd
test
loopne
mov
pop
mov
pusha
cmpb
and
cmp
loop
xor
mov
repz
rorl
pop
inc
mov
inc
pop
lret
iret
push
add
add
xchg
and
fisttpll
add
inc
hlt
rcrl
clc
or
cmc
fnstenv
mov
mov
movsb
push
pop
loopne
push
add
pop
mov
cwtl
xor
mov
jmp
aad
cmp
das
xlat
mov
inc
mov
add
adc
xchg
pop
je
inc
pop
mov
mov
cmp
add
add
xchg
addr16
imul
add
xor
int3
test
mov
add
cmp
mov
cld
cmc
in
add
cmp
pusha
mov
push
push
scas
sub
das
adc
add
add
lret
inc
pop
test
push
popl
pop
sub
mov
jne
mov
ljmp
shrb
add
xchg
add
fs
jge
add
jbe
data16
sbb
or
pop
shr
add
lcall
neg
je
add
jmp
out
je
jne
dec
add
jns
aaa
dec
iret
test
pop
in
mov
aas
pusha
and
add
sbbb
push
in
push
xor
sahf
pop
mov
pop
or
out
add
mov
std
dec
mov
add
xchg
and
and
push
loopne
push
mov
cltd
or
add
inc
sub
add
add
sbb
pop
add
ss
sbb
cmpsl
dec
and
jbe
and
test
xchg
xor
in
pop
fninit
subb
sub
cmp
lahf
add
repnz
mov
loopne
add
imul
sarl
xor
lret
movsb
addr16
add
inc
jbe
in
jp
push
add
mov
xor
rorb
lcall
scas
sbb
xor
movsl
pmuludq
or
mov
in
jo
add
mov
xor
faddl
mov
mov
add
jmp
xor
rolb
adc
negb
jno
add
and
out
orl
loopne
outsl
jle
add
stos
mov
xor
cmp
hlt
cmp
fimull
add
mov
or
push
call
or
add
addr16
pop
cli
adc
adc
mov
mov
divb
sub
rorb
sbb
sbb
jl
add
or
jmp
adcb
add
nop
xor
push
dec
rorb
lds
sub
adc
inc
iret
cmp
mov
test
sub
sarb
inc
dec
push
and
in
roll
add
loopne
aaa
test
ss
jae
lcall
add
test
jo
aas
add
pop
lds
push
rorb
and
cmc
sbb
add
inc
lods
mov
jl
add
fdivrl
xchg
and
add
ret
or
or
gs
add
pop
frstor
mov
jns
es
cmpsb
push
inc
or
inc
pop
pop
push
inc
push
push
sub
lret
int
jo
pop
mov
stc
inc
iret
push
pop
and
add
add
bound
std
cmp
aam
repz
push
jbe
adc
filds
lods
mov
inc
fsubr
mov
ret
imul
push
loop
push
mov
and
mov
add
xor
hlt
jg
or
testl
cmp
mov
pop
sub
pushf
adc
adc
push
jg
add
cltd
and
push
imul
mov
dec
pop
cmpb
sbb
dec
add
push
jne
and
sub
lea
cwtl
movsl
enter
add
leave
pop
addb
push
stc
jmp
add
pop
loop
cltd
fwait
push
cmp
int3
and
add
inc
pop
call
inc
push
push
mov
cs
sbb
xchg
js
jle
cmp
add
or
mov
add
xchg
xchg
dec
push
lock
or
mov
mov
stc
hlt
ficomps
shr
subl
add
repz
adc
mov
or
pop
sahf
xchg
psrad
add
adc
mov
imul
mov
add
mov
sub
push
imul
add
sub
dec
nop
pop
pop
mov
add
lds
and
mov
jo
in
cmp
add
sub
pop
mov
das
and
pop
mov
lock
sti
loopne
mov
add
adc
xor
add
lea
call
adc
pop
mov
xchg
xor
cwtl
push
ror
dec
rorb
cmp
xlat
or
outsb
dec
dec
pop
lock
add
and
je
push
bound
jl
sar
sbb
repz
add
sbb
jae
add
xlat
push
dec
or
aad
std
pop
ja
adc
out
xor
add
addr16
xchg
bound
in
sbb
push
and
adc
cwtl
push
jne
adc
mov
or
loopne
ljmp
das
pop
icebp
je
and
add
add
cs
in
and
mov
jb
inc
cmp
mov
dec
push
and
xor
out
sub
xchg
push
mov
push
mov
add
add
scas
ret
sbb
into
add
int
rcl
fbld
add
xor
sbb
cmp
pop
cmp
clc
or
push
ret
pop
sbb
mov
daa
fcmovbe
aam
add
add
mov
ret
shr
cmpsl
lods
inc
or
or
inc
fists
shr
add
pop
je
push
adc
add
repnz
das
pop
cs
sbb
jno
hlt
sahf
ss
in
push
daa
mov
cmp
jo
add
shlb
aas
dec
cmp
add
fldt
int3
lock
xlat
and
enter
fsubl
out
add
movsl
loopne
push
das
add
shll
mov
lcall
jp
cmpsb
cmp
scas
lock
cwtl
arpl
sub
xor
xorb
inc
cmp
lea
test
fadds
rolb
jnp
xchg
and
outsb
pushf
cmpsb
out
pusha
add
adc
addl
and
add
and
add
inc
add
pop
jmp
ljmp
hlt
in
mov
jp
pop
and
or
aad
pop
fiadds
imul
pop
add
jl
push
cwtl
add
xchg
push
xor
xchg
aaa
pop
lret
add
push
mov
add
add
fwait
cld
lret
test
in
add
rcrb
xor
mov
push
mov
lds
push
xor
test
std
cmp
jo
add
jle
repz
cld
outsl
in
mov
inc
xchg
cmc
bound
add
dec
daa
jp
inc
ret
fidivrs
cli
ds
testb
test
or
adc
incb
movl
hlt
outsb
lock
add
sbb
cmp
call
lcall
out
cmc
subl
stos
out
xor
or
lock
adc
ret
jo
adc
inc
fidivrs
enter
add
test
in
or
jae
adc
ja
xor
cmp
aas
mov
or
jecxz
repnz
ret
loop
inc
xchg
jle
mov
inc
out
movsl
bsf
push
subl
das
cmp
push
pop
mov
icebp
add
lret
mov
mov
add
xchg
mov
push
mov
dec
adc
sub
xor
lret
mov
ds
mov
gs
adc
sub
or
and
xor
ss
push
prefetch
loopne
mov
pop
or
pop
add
and
clc
bound
pop
enter
sbb
mov
lock
rclb
and
or
fmul
rclb
or
mov
pop
and
jmp
mov
adc
jo
rolb
call
xor
inc
shrl
rcrl
jbe
add
inc
push
jle
test
inc
cmp
faddl
cmp
dec
sbb
jnp
sub
push
dec
bound
subl
cld
mov
cmp
jp
sbb
push
fcomps
adc
jbe
ds
enter
jbe
fs
or
mov
cmpl
nop
add
leave
or
pop
xlat
sub
and
or
inc
fsubrl
hlt
cld
push
sub
les
mov
add
adc
ficompl
inc
mov
mov
sub
sbb
pushf
adc
nop
aam
and
pop
loope
sub
mov
pop
xor
sub
inc
mov
adc
pushl
aad
add
test
shrb
or
add
in
mov
mov
mov
inc
or
sarl
mov
fcompl
or
pop
clc
inc
mov
pop
and
and
pop
nop
mov
mov
xchg
push
hlt
cmp
or
loope
mov
loopne
mov
inc
jae
sub
fcomps
cld
mov
adc
lea
and
in
pop
mov
rclb
and
mov
xor
add
inc
pop
mov
pop
pushf
cwtl
mov
mov
orl
das
test
xchg
js
add
mov
mov
mov
mov
imul
out
pop
add
loopne
push
lea
inc
adc
mov
add
xor
or
out
add
outsb
je
insl
add
in
loop
out
pop
addl
sub
cmp
sbb
xor
cmp
inc
push
and
add
or
fadd
in
pop
or
xchg
or
ds
cwtl
jo
nop
sbb
or
push
ljmp
add
clc
test
insb
jo
adc
clc
addl
or
dec
inc
pop
es
sub
lcall
xchg
mov
rorb
and
fcomip
sar
pop
shlb
adc
sub
xor
lock
pop
mulb
push
mov
fistps
or
mov
mov
add
inc
add
gs
push
add
mov
call
jmp
imul
sbb
les
je
sbb
cwtl
xor
js
cltd
add
xchg
mov
adc
push
test
dec
dec
pop
mov
push
add
push
push
pop
pop
push
sarb
add
xor
adc
jo
or
push
outsb
idivl
add
sub
and
popa
add
outsl
mov
rol
fmull
and
sub
hlt
in
test
or
cld
mov
push
imul
lock
nop
xor
fdiv
mov
es
and
inc
pushf
pusha
sarb
adc
clc
fcompl
add
adc
and
add
mov
inc
lcall
jl
lea
das
cmp
sbb
rclb
sbb
cmp
add
sbb
push
xchg
divl
test
loopne
add
rorb
into
or
add
cmc
push
int
adc
push
cli
faddl
push
add
outsb
sbb
test
jp
jge
nop
mov
dec
std
add
mov
test
xchg
in
dec
pop
lock
or
inc
add
andl
insb
add
out
inc
add
jecxz
cld
xor
sub
pop
cld
push
dec
dec
jl
mov
add
hlt
inc
cmp
or
rolb
add
movb
pop
lock
outsl
jno
pcmpeqb
dec
testl
or
push
and
popa
nop
shlb
and
cs
imul
mov
rolb
cwtl
push
push
pop
or
or
or
pop
xchg
int
mov
lea
fdivs
xchg
test
jns
add
xor
hlt
dec
inc
add
cmp
out
pop
lahf
enter
mov
push
test
xor
pop
sub
xor
push
mov
jo
mov
or
flds
add
nop
lahf
mov
and
test
paddb
inc
add
addb
mov
pusha
sub
faddl
cmp
and
cltd
int3
shrb
stc
jbe
sbb
sub
cmp
mov
xchg
ss
sub
lahf
xor
adc
or
cwtl
mov
sbb
and
pop
cltd
jno
xchg
insb
push
test
call
add
mov
adc
mov
pop
and
or
inc
ret
pop
sbb
loopne
sub
pop
call
jo
fldenv
test
mov
xorl
pop
cwtl
adc
sbb
fstl
dec
sub
pop
movsb
add
cmp
xor
and
xor
push
jns
xchg
xor
in
fdivs
sbb
fnop
push
mov
scas
sub
mov
cmp
lahf
jns
rclb
push
sarb
add
dec
popa
js
cwtl
or
and
sbb
and
rolb
aaa
cltd
inc
lods
pop
pop
aad
and
cli
and
adc
mov
adc
bound
movsb
loopne
test
adc
or
mov
pushf
mov
add
test
rolb
pop
mov
inc
or
mov
jmp
push
popa
pusha
out
sub
movsl
add
xchg
mov
or
xchg
and
adc
mov
cli
and
jl
inc
pop
mov
inc
mov
mov
mov
xor
mov
les
xchg
sbb
jp
add
fs
xchg
insb
lock
add
mov
cld
shlb
cld
and
xor
pop
mov
push
sahf
movsb
xchg
mov
mov
in
std
jo
mov
add
dec
cmp
outsb
pop
jl
mov
lcall
mul
lock
sbb
sub
cmp
dec
xchg
pop
and
cmp
adc
push
scas
adc
xchg
inc
fsubr
cmpsb
add
and
mov
push
or
mov
and
jbe
cmpsl
cwtl
xor
cmpsb
mov
lahf
js
add
xchg
sub
and
sbb
sub
ds
push
dec
bound
cwtl
mov
mov
adc
mov
clc
add
xor
dec
repz
repz
jp
mov
and
fdivr
lock
mov
and
je
mov
dec
lods
loope
int3
cld
loopne
add
or
jae
pusha
dec
stos
jo
test
movsb
mov
sbb
pop
adc
mov
mov
adc
xor
dec
cs
mov
nop
adc
xchg
rorb
and
and
imul
mov
add
cmp
dec
dec
push
add
and
daa
and
cmp
add
jge
mov
cmp
inc
adc
add
inc
cmp
fs
adc
add
jno
in
outsb
sub
out
add
xchg
inc
inc
fbstp
add
inc
arpl
mov
out
mov
add
dec
inc
jbe
pop
rorb
sbb
fldt
add
jp
push
jg
push
jb
jne
add
jecxz
push
sub
out
packsswb
push
inc
sbb
sbb
cmp
gs
add
push
add
pop
mov
xchg
fdiv
add
inc
jns
xor
add
cs
sub
add
fisubrl
inc
cmpsb
or
jbe
add
ret
sahf
jmp
cmp
bound
add
inc
js
je
cltd
sbb
xchg
add
fisttpll
jo
loop
outsw
inc
and
mov
jae
arpl
outsl
std
pop
xchg
les
or
cmpsl
add
inc
imul
push
cmp
push
rclb
cmp
sub
push
xchg
lcall
mov
fs
mov
push
adc
xor
jae
adc
stos
jge
pop
push
push
mov
mov
push
outsb
push
push
inc
cmp
xchg
je
or
or
shll
inc
pop
dec
add
cmp
addb
ja
or
pop
stos
sbb
sbb
push
add
or
push
sub
dec
inc
push
jns
movl
je
cmpsl
loop
jo
adc
jp
cmp
dec
adc
push
add
adc
jb
mov
dec
cltd
jns
and
xchg
lcall
test
add
inc
outsl
js
dec
call
nop
jbe
jo
cld
movsl
add
lret
pop
push
and
in
sub
fsubrl
pop
aaa
adc
mov
ret
rcrb
popa
add
xchg
inc
fidivl
xchg
aam
clc
testb
xchg
push
dec
outsl
push
cmp
add
int
es
dec
add
lods
pop
gs
fcoms
fdivs
dec
daa
push
fcomp
inc
push
int
and
dec
into
cmp
lods
fs
adc
xor
movsb
mov
stos
adc
inc
outsl
bound
adc
add
xorl
faddl
out
int
or
add
mov
or
add
imul
test
lods
push
shll
fldenv
lcall
push
rclb
aam
push
add
mov
adc
cs
sbb
andb
cmp
push
sbbb
push
lret
add
pop
stos
rclb
add
xchg
sbb
mov
xor
insl
enter
xchg
mov
push
or
and
cmp
push
mov
xor
push
mov
push
stc
dec
pop
adc
add
rcrb
adc
inc
add
arpl
les
imul
xorb
add
mov
pop
inc
loop
cmc
bound
add
nop
cmpsl
sti
add
jo
setle
insl
inc
add
pop
sbb
enter
or
in
movsb
sub
popl
inc
jbe
ds
repnz
cld
mov
sbb
push
dec
dec
dec
adcb
fs
and
add
jle
les
repnz
hlt
das
or
bound
sbbb
inc
dec
inc
adc
push
dec
jo
sahf
pop
enter
push
daa
movq
or
test
sahf
cwtl
inc
mov
add
stos
and
imul
movsb
es
data16
rcrb
push
pop
sub
add
xor
popf
divb
lcall
fldt
mov
gs
rolb
lcall
add
mov
or
leave
sbb
sbb
mov
or
push
xchg
roll
add
lds
xor
adc
mov
lock
les
xchg
pop
mov
cmpb
in
inc
add
sahf
ja
and
repz
sbb
xchg
push
push
inc
pusha
notb
fs
imul
lea
pop
push
jns
dec
popa
mov
faddl
dec
mov
or
outsb
and
int3
push
dec
add
ljmp
add
outsb
mov
adc
movsl
xchg
idivb
add
add
stos
loopne
adc
add
or
xor
add
cmp
xchg
pop
inc
dec
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rolb
ds
call
lock
sbbb
mov
shlb
int3
adc
inc
or
pop
dec
add
mov
mov
xor
pop
lret
xor
in
xor
js
jp
jl
sbb
xor
push
popf
sub
jp
pop
push
jl
aam
cmp
mov
aas
xlat
leave
loopne
out
add
push
add
cltd
imul
icebp
clc
incl
loope
ss
push
shrl
cmp
jmp
pop
fbstp
add
inc
push
dec
push
loopne
dec
aas
ret
xor
xchg
inc
mov
in
xor
inc
pop
cmp
push
jp
sub
je
jbe
js
sbb
pusha
cmp
sahf
add
lea
add
aas
inc
daa
add
push
or
push
cwtl
push
add
adc
dec
rol
loopne
js
xchg
add
cmp
xor
inc
dec
add
test
mov
fxch
loope
ljmp
je
jbe
js
jle
xor
cmp
popf
add
sbb
inc
lahf
add
push
xchg
push
dec
cmp
iret
jno
jns
cmpl
lea
xchg
aas
xchg
aas
fwait
add
out
pop
loopne
add
loope
cmp
mov
inc
add
xchg
push
repnz
popf
iret
sbb
or
push
adc
fstps
jae
push
icebp
cmp
cmpsl
int3
mov
aam
out
repz
cmpl
loope
jmp
shlb
cld
sbbb
jle
push
lcall
into
ret
mov
and
pop
cli
cmp
cmp
add
sbb
or
and
dec
xor
jle
inc
out
ljmp
push
jb
jp
cmp
fistpll
dec
mov
mov
lock
loop
ljmp
add
or
xchg
out
sbb
leave
inc
daa
and
pop
add
jb
repnz
in
cmpsl
push
testl
in
jb
dec
sbb
jbe
stc
jecxz
add
xchg
dec
dec
sub
pop
iret
pusha
xchg
jo
js
andb
lret
mov
out
dec
rorb
in
xchg
or
lock
testl
mov
adc
xlat
sti
daa
unpcklps
dec
incl
repz
and
jo
push
test
stc
mov
mov
ds
mov
aas
sarb
fdivrs
loopne
call
sbb
xor
leave
adc
sbb
fldenv
loope
jmp
stc
inc
sbb
jae
pop
inc
aas
push
mov
ret
mov
nop
jecxz
repz
cs
popf
fistpl
push
xor
push
sub
sub
adc
shll
cmp
pusha
gs
clc
inc
cld
dec
call
stos
xchg
inc
lods
loopne
leave
mov
out
push
mov
les
cmp
hlt
aas
clc
add
out
pop
xor
daa
or
inc
or
and
loop
push
add
xchg
andb
js
cld
xchg
js
movsb
add
mov
mov
mov
shrb
movsb
jmp
add
or
or
adc
loope
jmp
push
in
call
fs
pop
insb
mov
jle
daa
js
mov
pop
mov
mov
mov
jle
jle
jle
jle
jno
add
pop
or
cmp
cmp
add
and
sbb
lahf
cmp
into
push
iret
je
js
pop
lret
orb
iret
ror
iret
enter
ror
aam
fadd
fcompl
adc
sbb
sbb
and
and
pop
sub
sub
xor
xor
inc
xchg
jo
je
js
jl
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
movl
sub
xor
add
dec
aad
cmp
out
in
push
cmp
call
icebp
add
les
add
xor
add
inc
in
mov
in
jae
cwtl
aas
cmc
mov
push
outsb
xor
clc
lahf
std
rolb
popf
add
sbb
inc
xchg
add
dec
leave
xchg
push
daa
cmp
jnp
pushf
lcall
pop
test
ja
mov
icebp
in
rolb
add
or
or
adc
adc
cmc
dec
mov
cwtl
jle
ret
aas
pop
mov
ret
shrl
insb
bnd
outsb
aas
and
mov
fstps
loope
jmp
stc
sub
lods
pop
fisubrs
insb
clc
jo
jmp
fs
out
loopne
add
xchg
rcpps
lcall
dec
repnz
xor
xor
andl
jp
jb
mov
pop
xchg
cmp
xchg
aas
lcall
ss
and
push
mov
daa
add
push
lock
sbb
inc
je
push
jns
add
or
cltd
xor
jl
jmp
js
dec
addl
add
xor
in
cmc
flds
cmp
add
je
jbe
js
add
jl
jle
xchg
pop
mov
gs
imul
jne
cmpsb
add
or
cld
dec
cmpsl
push
sahf
add
mov
decb
inc
adc
mov
add
lcall
idiv
add
adc
sbb
dec
sbb
bound
addr16
inc
lods
imul
inc
andnps
xchg
pusha
cltd
test
add
cmp
and
and
xor
mov
nop
lods
cmp
push
mov
xor
gs
lock
inc
fnstsw
insl
icebp
jg
xchg
mov
ficoms
xor
pop
add
inc
jg
add
out
loope
adc
mov
scas
xchg
loope
ss
cmp
cmpsb
hlt
add
shlb
in
xchg
call
out
clc
push
cmp
cmp
es
test
dec
orb
enter
daa
xchg
pop
sarb
leave
fs
mov
inc
cmp
cmp
cmp
mov
pop
je
in
loope
rorb
sbb
out
cmp
jno
pushf
ds
aas
mov
dec
add
mov
shr
mov
jb
or
pop
loopne
cmpb
jbe
scas
js
mov
pmulhuw
mov
pop
lret
lcall
loope
out
in
add
daa
stc
adc
or
jno
xor
sbb
jmp
test
pop
lcall
mov
mov
jbe
js
jp
push
in
xchg
es
pusha
jo
mov
jb
loope
pop
leave
cmp
add
jns
push
sub
mov
cmp
mov
lds
add
pop
and
dec
hlt
popa
nop
fwait
lock
out
cmp
cmp
add
leave
dec
push
cmp
mov
and
adc
add
mov
sbb
pop
sahf
rclb
pop
xor
je
jae
addb
popf
pop
nop
adc
adc
push
pop
or
sub
or
jle,pt
in
adc
adc
push
in
and
clc
mov
sarl
and
xchg
and
xorb
sti
pop
push
add
aas
inc
dec
dec
mov
pop
cmp
sub
xor
add
mov
push
pop
xor
repz
gs
sub
xchg
xlat
inc
call
hlt
dec
xchg
push
adc
or
adc
movsb
add
and
sub
cmp
mov
jb
je
pop
pusha
popa
xlat
push
and
das
nop
lcall
je
lods
push
jb
ficomps
lahf
in
call
add
or
sbb
and
shll
sub
xor
addl
push
add
pop
in
psubsb
inc
nop
hlt
ret
imul
ja
add
cmp
cmp
orl
mov
cmp
adc
push
pop
inc
xor
xchg
push
pop
cmp
data16
jnp
xchg
in
mov
iret
lcall
negl
cmp
adc
xor
push
je
dec
gs
repz
sbb
adc
cmp
mov
sar
ja
add
sub
cmp
push
mov
push
daa
rolb
xor
jmp
jecxz
or
orl
xor
xor
mov
adc
pcmpeqb
add
xor
clc
add
cmp
cmpsb
cmp
cli
and
inc
pusha
rorl
nop
setp
ret
int
push
sbb
mov
loop
mov
pop
enter
add
jmp
mov
cmp
aam
daa
add
adc
mov
stos
je
adc
pop
loope
icebp
mov
pop
wrmsr
loop
out
ljmp
mov
mov
leave
hlt
sbb
xor
fisttpll
das
sbb
popf
add
add
xor
in
inc
add
frstor
add
cmpl
xor
add
in
xor
cmp
mov
cmp
and
aam
ret
leave
pop
in
sbb
clc
and
and
lret
adc
cs
xchg
inc
adc
mov
cld
cmp
xchg
dec
pop
mov
cwtl
sbbb
iret
lods
cmp
popa
repnz
je
int3
add
aam
ss
jb
xchg
je
push
neg
and
in
add
pop
and
mov
insb
add
xchg
outsb
add
mov
xor
mov
inc
cld
push
add
pop
shrb
pop
xor
xchg
adc
push
pop
out
add
mov
xor
add
cmp
add
pop
xchg
icebp
add
xchg
jo
jp
pop
add
test
cmp
add
daa
mov
cmp
aad
out
cli
lret
pop
add
dec
add
and
add
fs
pop
insb
inc
in
in
cmp
add
nop
ja
jg
jnp
jnp
mov
xlat
cs
add
sub
pop
mov
lock
add
roll
shlb
xor
mov
inc
dec
in
dec
leave
dec
insl
incb
cld
aas
aam
hlt
jl
add
fmull
adc
add
jb
fidivrl
add
lret
lock
cld
arpl
add
adc
or
xchg
out
and
jl
in
pop
rorl
add
and
int3
lret
dec
fmuls
paddw
xor
or
add
sbb
js
pop
es
xor
imul
xor
mov
movsb
push
sti
shrb
fnstcw
inc
adc
jno
jle
xorl
xchg
add
hlt
les
add
cmp
sbb
daa
in
call
add
lret
xchg
xor
add
pop
int3
mov
inc
dec
orb
rorb
sbb
cltd
xor
addr16
and
shr
mov
add
das
je
bound
add
mov
dec
iret
or
pop
add
inc
pop
pop
dec
outsl
jo
ret
push
add
push
push
cli
lret
movsb
lods
push
cvtpi2ps
call
std
xor
movsb
es
lods
cwtl
stos
js
jp
push
jl
jle
pop
rcr
aas
icebp
cmp
adc
pop
pop
pop
pushl
hlt
push
jns
mov
add
adc
sarb
add
jb
dec
jae
cmp
add
je
mov
pop
fwait
add
mov
fbstp
add
xchg
repnz
sbb
push
add
out
mov
in
andb
adcb
push
sbb
sbb
and
dec
outsb
popl
add
cmp
cmp
das
ds
test
push
lock
es
dec
add
sbbb
pop
xchg
fiadds
push
pop
xor
mov
add
testb
decb
pop
xchg
or
cmp
xor
xor
xchg
scas
mov
faddp
inc
ret
cmp
add
push
add
in
insl
fs
cmc
loopne
push
leave
cmp
add
inc
ret
mov
jge
or
mov
pop
inc
aas
das
inc
add
jns
rclb
mov
cmp
leave
add
cmp
sbb
pusha
xor
in
jmp
ja
jnp
pop
add
dec
mov
iret
push
rcrl
mov
nop
xchg
add
push
cs
pop
add
jb
add
movzbl
out
sbb
cwtl
push
push
xchg
add
pop
jg
fcompl
sbb
sub
in
sbb
push
das
mov
pop
xor
ljmp
pop
shrb
lret
clc
insl
sbb
pop
sbb
push
test
add
cmp
mov
add
xor
mov
out
adc
add
cmp
addl
xchg
lcall
cmpb
push
call
xchg
pop
rorb
and
aas
or
add
sbb
mov
pusha
xor
cld
enter
sbb
dec
add
sbb
add
push
push
xor
inc
lods
lret
ret
xor
loop
inc
sub
add
clc
mov
jp
pop
add
mov
nop
out
ret
or
ss
xchg
inc
mov
stos
rcl
add
mov
mov
loope
push
js
sub
lret
loopne
add
aaa
add
ret
jne
mov
adc
sub
add
push
jnp
mov
loopne
cmp
xchg
pop
push
inc
sub
push
subl
ret
lcall
hlt
add
sbb
cld
adc
and
sub
test
aas
cmp
lahf
xor
out
int
xor
sti
lock
mov
lret
dec
clc
ljmp
and
dec
das
addl
pop
cwtl
or
jle
cmp
ret
incb
pop
mov
in
mov
dec
pop
or
push
jl
inc
mov
leave
mov
nop
into
add
nop
mov
push
sbbb
xchg
mov
jmp
inc
push
bound
cmp
mov
add
addb
xor
daa
imul
mov
push
xchg
aaa
call
pop
or
sbb
jg
xchg
cli
and
ds
push
hlt
arpl
pop
outsb
push
enter
sarb
add
sub
mov
or
lock
or
es
aaa
add
ficompl
cmp
cmp
xchg
xchg
movl
cwtl
sub
sub
leave
add
jb
je
adc
adc
out
xor
fiaddl
inc
fsubrp
mov
and
jl
cmpsb
pusha
xchg
hlt
add
xchg
call
sbb
test
cs
sub
je
add
adc
je
xchg
mov
adc
mov
push
xor
movsb
sahf
popf
loopne
mov
add
inc
aas
dec
leave
push
shll
pmaxub
xacquire
lret
scas
shll
sbb
clc
cmp
mov
popa
or
xlat
cli
loope
inc
rolb
cwtl
cmp
movsl
das
stos
adcl
mov
shll
add
imul
pusha
sub
lcall
or
ret
sbbb
sbb
ds
into
add
lcall
add
mov
js
cmp
lds
add
push
cwtl
sbb
mov
jno
mov
and
fs
mov
dec
les
aas
xor
in
xlat
pcmpeqb
sti
add
cmp
addb
or
mov
iret
pop
pusha
sbb
push
fsubrs
dec
dec
pop
mov
ja
jge
aas
jb
je
add
and
bound
in
add
pop
cmp
jge
push
imul
inc
jae
ja
xchg
pop
cmp
sub
push
lods
leave
mov
jp
mov
add
pop
adc
test
pop
cmp
outsl
shll
mov
cmp
nop
adc
insb
adc
out
cmp
in
test
and
aad
jmp
lods
push
cmp
add
dec
daa
popa
inc
ret
or
or
rol
dec
enter
cwtl
cmpsb
sbb
and
rcl
cmp
mov
sbb
insl
pop
adc
cmpsb
mov
jb
and
setbe
pop
xchg
pop
iret
shll
in
cmc
fcoml
adc
sbb
ret
add
mov
mov
nop
das
mov
add
xor
fadd
rolb
pop
rolb
fcomi
and
jmp
repz
sbb
dec
lock
xchg
xchg
loope
cmp
insb
addb
jecxz
pop
cmp
jle
mov
mov
xorb
lret
mov
adc
pop
loop
imul
or
dec
xor
in
mov
addr16
adcl
or
add
mov
lods
and
adc
sbb
mov
xor
inc
hlt
xor
pop
jle
add
mov
add
popf
xchg
fimull
out
in
cmpsl
cmp
or
inc
jle
push
jo
add
mov
adc
enter
pop
xor
cmp
mov
je
leave
dec
fcoms
jb
add
test
or
mov
popa
or
imul
cmovno
add
cmc
xor
add
cmp
ret
mov
jbe
xchg
inc
sbb
add
pop
aas
dec
and
repnz
lods
cld
mov
jne
push
push
push
xor
jle
scas
iret
fidivrs
clc
xor
or
incb
xor
stc
pop
sbb
mov
shll
adc
movsl
js
push
ds
je
pop
xor
cld
fldl
stc
pushf
adc
xor
sbb
popf
dec
sbb
push
xchg
fwait
dec
xor
cmp
and
mul
loope
ss
leave
jp
sbb
add
rolb
orl
add
mov
ret
call
push
mov
outsl
shll
add
lahf
sti
test
cmp
loopne
mov
popf
hlt
mov
sbb
jp
mov
pop
xchg
lahf
cltd
pop
scas
inc
ficoms
jno
xchg
mov
rolb
xor
cs
popf
add
sbbb
push
push
sbb
push
adc
aas
out
cld
mov
add
or
xor
pop
out
loop
pop
cli
movb
loopne
jb
dec
sbb
push
scas
adc
test
mov
dec
sub
icebp
lds
pusha
add
push
cmp
xor
dec
dec
ret
les
add
aaa
lea
jle
fistl
sarb
sub
push
inc
xchg
cmp
and
push
call
shrw
sahf
push
or
jo
add
pop
cmc
psubb
inc
add
xchg
push
fdivr
dec
jp
add
pusha
xor
xchg
sti
add
add
mov
add
xchg
sub
sbb
call
mov
ret
hlt
add
clc
or
test
cld
ret
shlb
push
clc
js
mov
adc
push
lock
sub
xor
punpckhdq
push
js
jb
pop
mov
rcrl
shr
repnz
testb
test
sub
cmp
add
dec
jbe
sbb
xlat
aas
or
idiv
xchg
adc
add
scas
xchg
aas
les
andb
shlb
pusha
dec
movb
or
dec
add
push
push
les
jp
dec
ret
or
jle
add
push
push
leave
mov
add
cs
and
sub
jne
xorl
loope
sbb
add
ja
mov
in
mov
ret
aas
js
push
jbe
mov
mov
pop
fisttps
fdivrp
mov
xor
fcoml
adc
sbb
and
sbb
or
les
lret
jbe
pop
rolb
pop
mov
sbb
inc
adcl
aas
dec
xchg
call
fcoms
addb
pop
es
add
lock
and
sbb
daa
xor
sbb
pushf
mov
in
ss
mov
div
xorb
or
add
xchg
hlt
mov
jne
or
or
insl
cmpb
psubsb
std
cli
or
leave
and
inc
pusha
loope
cmp
cmc
dec
cld
dec
daa
add
sub
in
hlt
fcoms
add
movsb
pop
or
aam
pop
mov
loopne
xor
sbb
je
daa
jp
dec
push
ror
add
aas
mov
adc
push
pop
jns
sub
add
adc
lock
cmpl
xchg
cmp
push
lcall
mov
les
cmp
daa
inc
shll
push
jg
mov
xor
rclb
jo
add
pop
or
adc
sub
mov
sub
in
test
xchg
popf
or
add
in
xor
cmp
pusha
loopne
out
mov
mov
or
mov
add
jb
je
dec
sub
push
rcll
aad
mov
pop
add
jmp
push
sti
push
stc
cmp
add
add
mov
mov
xor
mov
test
loop
shrb
orb
lahf
pop
mov
adc
sbb
add
mov
enter
jecxz
ret
xchg
cmp
dec
add
iret
loopne
cmp
shrb
lret
sbb
cmp
nop
mov
cmp
fs
mov
andb
xor
add
sub
push
and
in
push
ljmp
rorl
jnp
add
sarb
push
outsb
jo
cwtl
cmp
jl
dec
add
mov
pop
add
cmp
test
daa
xor
cmp
cmpb
and
add
mov
cmp
sub
xchg
clc
pop
add
add
add
sbb
dec
sbb
add
adc
and
cld
in
adcl
cmp
mov
leave
sbb
or
into
jns
sbb
xchg
sub
enter
aam
popa
shrb
outsl
sub
add
pop
arpl
and
mov
test
xchg
add
inc
xor
inc
xchg
outsl
mov
add
pop
xor
and
inc
sbbb
push
push
jl
mov
pop
test
xchg
add
movsl
aaa
leave
lods
scas
insb
mov
pop
cmp
dec
xchg
ret
add
mov
jecxz
repnz
add
inc
cli
sahf
pop
pop
lahf
imul
inc
mov
adc
pop
mov
push
mov
cmp
enter
pop
add
in
xor
loope
jge
add
mov
sahf
leave
lods
rclb
dec
mov
fldenv
jo
adc
cmp
cwtl
push
add
in
dec
xchg
je
xchg
adcb
mov
xchg
cmpsl
pop
lock
negl
and
cmc
call
pop
sub
xchg
pop
xchg
loopne
sub
cld
into
cmp
jle
dec
ljmp
xor
or
ret
sbb
jle
orb
ret
subb
jae
inc
pop
xchg
movsb
mov
add
fstps
pop
in
add
mov
mov
in
add
mov
scas
fnstcw
mov
mov
add
fs
call
add
iret
jnp
cmp
cmp
push
dec
pop
in
or
add
inc
clc
sbb
xor
cmpsb
rcrb
ret
pop
push
jle
cmc
inc
or
in
in
add
out
cmp
cmp
fnstsw
and
mov
xchg
js
lcall
or
jle
mov
cmpb
push
loopne
pusha
mov
cltd
loopne
adcb
pop
jmp
flds
add
popa
das
imul
sub
int3
inc
ljmp
sahf
pushf
out
pop
ret
dec
pop
fstpl
loope
je
push
mov
sub
das
sub
xchg
jle
aaa
dec
ror
add
ficoml
outsl
mov
addb
pop
pop
xchg
xchg
lcall
xor
sub
cwtl
hlt
cmp
leave
inc
shr
outsl
stos
or
mov
addb
add
or
test
in
add
insb
in
add
mov
cld
jle
mov
enter
sarb
pop
push
pop
jnp
ret
dec
xchg
ret
sarb
add
or
adc
add
fnstenv
outsb
push
or
loopne
add
and
push
pop
xchg
sarb
out
add
in
mov
or
mov
push
int3
push
cmpsb
add
jo
loopne
ss
sbb
cs
cmp
dec
add
push
das
popa
inc
mov
stc
jg
pop
bswap
scas
iret
out
and
ret
add
pop
es
jmp
inc
clc
push
mov
dec
bound
add
shrb
aas
jbe
negb
adc
pop
xor
jo
lock
fadd
or
add
sahf
in
and
outsb
pushf
pop
adc
push
mov
rorb
mov
inc
mov
push
cmp
cmp
adc
adc
data16
or
mov
sbb
addb
cmpsl
mov
lcall
test
cli
pusha
sarb
or
sbbb
and
cli
add
pusha
jl
mov
stos
cmp
aas
daa
call
inc
pop
cmp
call
aas
sahf
inc
cmp
arpl
insl
addr16
mov
mov
sbb
push
icebp
cmp
mov
mov
mov
or
xor
cmp
xor
sub
das
add
fstpt
aas
in
jmp
sbb
jbe
dec
inc
add
les
lret
xchg
jnp
pop
es
iret
mov
mov
flds
fst
xor
fimuls
and
sbb
xchg
adc
fs
push
nop
or
push
pop
movsb
or
lods
orb
dec
mov
or
mov
int3
hlt
pusha
leave
adcb
cmp
add
je
or
adc
adc
sbb
add
ss
js
cmc
imul
leave
mov
mov
les
pop
cmc
aam
clc
cli
aam
add
cwtl
push
add
sbb
and
cmp
lds
push
in
xchg
pop
mov
repz
insb
call
xchg
mov
push
in
mov
movsb
test
push
daa
ljmp
cmpsb
push
nop
je
or
test
adcb
push
lcall
cmpsl
add
test
sub
ss
enter
push
add
mov
adc
test
and
sub
xor
mov
add
loop
pop
out
cmp
jl
fmull
add
mov
faddp
loope
sub
fwait
xchg
loope
pop
clc
insb
inc
add
je
ret
jo
add
cs
dec
movsb
mov
mov
pop
pop
insb
sub
mov
notb
add
xchg
faddl
sub
in
xchg
pop
mov
stos
fs
aaa
sub
sbb
enter
adc
loopne
xor
pop
cmp
loopne
test
mov
xchg
inc
cmpsb
fimull
xor
jo
inc
fimuls
adc
cld
inc
mov
mov
aas
aam
cmp
sbb
cmp
sub
xor
iret
mov
push
leave
jno
add
adc
mov
mov
nop
in
repnz
dec
aas
pushf
inc
mov
lods
in
mov
or
mov
std
into
adc
add
mov
in
nop
or
call
push
inc
adc
xchg
nop
das
push
add
lock
add
sub
mov
mov
push
nopl
fchs
andl
xor
mov
faddl
sbb
xor
push
sub
jns
cli
adc
and
mov
push
add
aaa
adc
ret
push
push
sbb
push
call
enter
mov
psllq
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
and
mov
jo
push
add
adc
and
cmp
or
add
sub
jg
clc
mov
add
push
xchg
mov
adc
test
push
inc
push
pop
mov
add
push
ror
xor
or
add
push
add
cmp
mov
jne
mov
or
mov
je
sahf
push
pushl
movb
jne
cmp
mov
push
push
push
mov
push
sbb
mov
add
fisttpl
leave
je
adc
sbb
or
jmp
dec
jmp
sub
call
outsl
fwait
dec
mov
loopne
pop
pop
pop
push
bound
add
inc
sar
repz
mov
add
fwait
sub
inc
add
rcrl
add
add
and
dec
or
jbe
add
sbb
shlb
repnz
inc
test
mov
xor
push
add
addr16
mov
addl
rcrl
shr
outsb
lods
sub
mov
leave
add
pop
push
addl
sub
loopne
incl
bt
cmp
adc
push
push
xor
out
sahf
lret
mov
pop
add
add
test
pop
ret
fadd
adc
out
popa
es
add
push
lock
outsb
and
push
mov
or
xor
inc
xorl
adc
sbb
jle
cli
mov
adcl
xorb
add
add
push
mov
lods
mov
add
call
add
xor
cwtl
xchg
rorb
sub
mov
cltd
push
rorb
aas
fdivl
add
pop
roll
dec
shl
nop
arpl
cmp
jl
sbb
push
sbb
add
cmc
add
or
push
push
shll
mov
xorl
mov
dec
cwtl
adc
jmp
mov
pusha
cmp
inc
add
das
andb
or
or
cmc
add
shlb
loop
adc
mov
add
rcll
mov
add
and
and
daa
inc
xor
mov
cmp
rolb
add
pop
push
push
adc
add
testb
push
push
xchg
loop
pop
add
clc
mov
xchg
push
xlat
add
pop
mov
mov
xor
je
sbb
dec
add
mov
cmc
pop
fdivr
repz
push
sbb
add
iret
fwait
jae
movsb
roll
xorl
dec
xchg
test
lods
rcrb
add
mov
and
dec
imul
add
loope
into
mov
mov
cli
insb
inc
push
add
add
adc
dec
test
iret
add
insl
ret
add
enter
adcb
mov
adc
cld
imul
add
xlat
add
faddl
push
lcall
ret
inc
insb
lods
cs
add
pop
scas
das
cbtw
push
movsl
add
shll
mov
adc
xlat
sub
add
movsl
lcall
ficomps
jmp
lret
mov
add
loop
test
xchg
scas
nop
mov
xor
movsb
push
pminsw
clc
lcall
xchg
jnp
out
add
xchg
test
add
es
mov
or
add
mov
sbb
aam
rcl
add
inc
dec
scas
mov
into
adc
add
pusha
cmc
mov
negb
out
jo
add
inc
daa
cmp
lods
pop
add
cmpb
inc
movsl
andb
push
xchg
jecxz
daa
add
add
or
sbb
repnz
aam
dec
sbb
aam
insl
add
ror
pop
add
pop
xchg
mov
pop
push
add
roll
jne
jl
add
and
xor
mov
cmpsb
jg
pop
mov
cmp
ja
push
loopne
es
push
xor
nop
scas
test
mov
add
jmp
lds
mov
add
aad
push
andl
push
jb
jnp
push
addr16
inc
and
add
push
sub
cmpsl
push
test
add
add
mov
xlat
cmp
pop
xchg
stos
out
adcb
and
sarb
adc
pop
add
dec
lods
xlat
dec
push
fdivr
stos
mov
enter
lods
push
out
ljmp
pop
xor
bound
inc
xchg
jns
into
push
jle
add
aam
xlat
js
pop
add
push
jne
loope
iret
sbb
cmpsb
nop
add
mov
mov
jmp
subb
pushf
xchg
mov
inc
pusha
jns
jg
add
xlat
test
in
pushf
add
fwait
adc
push
ss
mov
jno
add
fsubl
mov
cmp
push
add
and
ds
je
int
sbb
add
cmp
jge
adc
daa
jge
add
in
jae
aad
push
clc
test
add
or
add
daa
aad
and
js
xchg
fcomps
mov
add
lods
pop
sub
and
in
dec
inc
dec
ret
push
imul
arpl
jne
mov
addb
push
inc
mov
inc
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
xlat
add
sub
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
mov
or
jns
pop
and
pop
or
les
jne
in
rclb
je
jne
mov
push
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
fidivl
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
push
ds
mov
jns
push
clc
and
sahf
mov
lcall
push
cmp
jge
in
jecxz
insl
jecxz
data16
aas
bound
jne
push
push
outsl
jmp
push
sub
xchg
push
jne
scas
pop
nop
rorl
push
rorb
inc
in
sbb
icebp
jle
fidivl
outsl
sarl
pop
icebp
jns
inc
mov
daa
dec
outsl
out
xlat
dec
push
dec
repz
pop
mov
add
add
arpl
add
xchg
lock
fisttps
push
popa
jge
nop
insl
dec
push
mov
cli
pop
call
sub
inc
lahf
imul
pop
xchg
mov
pop
jp
ljmp
dec
fsubp
or
mov
rolb
js
sub
jb
mov
daa
jp
add
data16
jne
mov
ret
stos
std
sub
jbe
stc
sub
lods
mov
idivb
loope
xchg
pop
sbb
cmpsb
jg
hlt
scas
lea
call
xor
stc
daa
mov
fisubrs
inc
loop
je
scas
in
hlt
cli
std
mov
or
dec
pushf
call
outsb
sbb
jp
repnz
sbb
pop
push
rcrb
test
jb
loop
push
hlt
mov
fbld
xor
scas
fidivl
jl
out
dec
dec
or
sub
popf
dec
adc
lds
or
add
xor
dec
push
fidivrl
leave
arpl
xor
cwtl
jmp
mov
cmpl
cmp
xchg
test
call
push
xchg
outsb
pop
mov
jbe
xchg
scas
in
pop
mov
push
push
sub
imul
jns
xor
scas
in
or
test
xchg
jmp
movsb
sbb
mov
sahf
test
clc
ds
cs
mov
xor
mov
cmp
xor
in
xor
stos
rcrl
gs
mov
repz
mov
fimuls
rorl
loope
stos
add
sti
incl
jae
insb
push
rcll
xchg
pop
mov
sbb
xlat
mov
or
xchg
jbe
jg
and
in
cmp
mov
fisubl
inc
pop
test
and
mov
rcrl
cmpsl
sbb
aaa
cmpsl
lock
insb
jo
add
jbe
cmp
testb
pop
inc
in
ds
cmp
adc
in
inc
subb
bound
pop
jb
jns
cmp
add
mov
ja
or
adc
jne
data16
xchg
cmpsl
push
xlat
cmp
jnp
daa
and
outsl
arpl
sbb
rorl
adc
xchg
mov
lods
jp,pt
add
fdivp
addl
dec
mov
jmp
sub
add
into
sub
in
jl
and
in
cmpsl
push
out
sbb
rorl
rcll
cmc
inc
notb
fisttpl
lcall
fistl
hlt
mov
mov
inc
xchg
dec
insl
push
inc
out
mov
sub
jno
clc
out
or
add
leave
xchg
mov
or
arpl
popa
push
cmpsb
imull
out
jno
add
aas
jne
test
sbbl
sub
mov
test
xor
lods
jb
pop
jecxz
pop
add
leave
jb
test
bound
add
into
test
adc
shrl
mov
sub
int3
jnp
mov
shrl
mov
roll
fsubr
xchg
inc
xor
loopne
and
mov
cmpsb
pushf
or
adc
test
adc
xor
xchg
add
sub
xchg
notb
or
push
jp
imul
jb
sarb
nop
jb
ss
mov
add
outsb
outsl
sub
jae
jecxz
cmp
popf
and
cmp
in
jne
inc
cmp
mov
cmp
or
mov
adcb
adc
sbb
lcall
fcmovnu
insb
dec
imul
cmp
jle
cltd
jge
and
mov
mov
mov
xor
xor
in
xchg
popf
call
mov
cmp
sbb
dec
xchg
and
lods
mov
scas
dec
inc
sub
mov
mov
inc
inc
inc
dec
lret
aas
dec
hlt
mov
pushf
dec
or
imul
fsubl
xchg
pop
sbb
pop
scas
fldenv
push
imul
sub
shll
in
popl
imul
mov
cmp
iret
les
shrb
outsl
mov
mov
das
mov
mov
cmp
loope
xchg
sub
loopne
pop
fsubs
pop
js
adc
popf
sub
xchg
fdivs
nop
call
test
rcrl
fwait
adc
mov
aam
pushf
mov
cs
and
mov
jb
lret
sub
mov
push
dec
rcrb
in
and
and
inc
xchg
ret
adcl
or
push
out
sub
test
arpl
mov
mov
ja
lods
jmp
cmp
sbb
mov
fisttps
aaa
mov
push
das
add
sbb
sbb
mov
dec
das
push
mov
leave
fmul
call
ljmp
and
mov
jne
aam
pushf
pushf
pop
and
popf
mov
insb
push
jae
nop
lret
push
cmpsl
mov
jnp
pop
out
pop
sub
jns
test
pop
mov
inc
fisttpll
in
es
cmp
mov
xorl
arpl
sbb
add
out
int3
mov
add
dec
xchg
add
sbb
cli
shll
mov
fnstenv
sahf
push
mov
push
lods
es
push
xchg
dec
mov
dec
icebp
icebp
push
jl
lret
push
fistpll
ficoms
push
push
xor
sub
jbe
stos
into
push
cmp
mov
cmpsb
push
scas
roll
sbb
fstl
adc
out
scas
fadds
shrb
es
adcb
push
sub
xchg
ljmp
pop
sahf
std
lret
adc
lea
inc
sub
dec
ret
mov
popa
ret
cli
rcl
fnstenv
inc
mov
cmp
imul
adc
ret
shr
clc
dec
jge
fsubl
push
jo
xchg
les
mov
dec
add
mov
inc
out
and
adc
mov
movsl
inc
sub
lret
pop
push
and
mov
rcl
ss
push
adc
orl
stos
adc
push
pop
sbb
cmp
xchg
cmp
dec
ffree
subb
inc
xchg
out
andl
inc
movsl
mov
sbb
mov
out
mov
fdivr
adc
div
cmp
mov
iret
andb
mov
icebp
in
ljmp
mov
push
daa
in
dec
cli
lods
xchg
inc
push
mov
aad
lret
loope
dec
lea
xor
sub
ret
ljmp
jl
sti
aam
les
and
shll
mov
decb
mov
mov
pop
mov
dec
adc
cli
call
push
aad
and
cs
xlat
rcll
jnp,pt
or
jl
push
xchg
mov
mul
xor
pusha
stc
sbb
negl
and
dec
add
das
nop
add
sti
aam
ficompl
lret
aam
jbe
sub
xor
fwait
notb
and
scas
fs
imul
aam
fistpll
bound
add
or
adc
jl
mov
mov
jmp
test
je
es
std
mov
jp
push
push
dec
imul
test
lods
dec
ja
shll
lods
rcrl
shlb
cltd
dec
loopne
adc
sub
sbb
mov
fildl
lods
mov
xchg
inc
ljmp
outsb
sbb
outsb
mov
cwtl
mov
aas
sahf
xchg
pushl
adc
cld
push
xchg
push
add
lahf
adc
fstp
leave
ror
cmpsl
push
dec
or
inc
test
ret
mov
int
push
xor
test
insb
dec
sbb
dec
adc
push
push
outsb
shl
es
lcall
repnz
sbb
popa
stos
imul
xchg
and
xor
repz
movb
fdivs
mov
jne
loopne
and
psrlq
lahf
push
arpl
movsl
jnp
arpl
xor
scas
cld
adc
pop
daa
and
xor
or
or
rorb
ficomps
add
xchg
and
mov
in
adc
ja
in
repnz
dec
mov
div
lret
frstors
movsb
push
xchg
jecxz
push
hlt
stos
mov
mov
bound
gs
jns
std
jmp
xchg
pop
push
mov
cmc
push
mov
cs
ret
movsl
xchg
sbb
imul
outsb
cld
jge
dec
sub
rolb
insb
cmp
cmovbe
mov
cmp
fiaddl
faddp
shlb
inc
xchg
rsqrtps
icebp
cli
shr
mov
fiadds
mov
mov
or
pop
ja
push
inc
fcmovnu
xorl
mov
pop
xor
pop
sub
lahf
aas
cmp
je
inc
add
jg
ret
sub
jge
cld
push
ss
scas
imul
stos
dec
dec
sbb
push
dec
mov
jge
iret
push
test
pop
xlat
inc
not
popf
xlat
out
ficomps
cs
adc
jge
lret
mov
imul
int3
mov
sbb
out
push
xacquire
ds
or
int3
or
in
scas
inc
dec
faddl
leave
mov
push
not
lret
sub
dec
pop
xchg
and
out
xor
xchg
sbb
xchg
xor
cmpsl
out
and
and
and
inc
imul
xlat
popf
repz
loopne
hlt
js
xchg
push
lock
roll
xchg
ja
cmc
add
inc
sub
xor
xor
pop
xacquire
std
es
or
pop
fcoml
add
add
jnp
jns
dec
out
xchg
outsb
and
cltd
imul
sbb
jnp
test
add
fnstcw
mov
adc
sahf
sahf
test
mov
add
jle
insb
mov
pop
adc
sbbl
insb
cmpsl
in
push
inc
jle
xchg
jne
push
pop
mov
push
out
mov
shrl
cmc
arpl
sbb
cs
adc
xor
iret
enter
mov
dec
inc
sub
inc
mov
mov
add
xchg
inc
dec
sbb
jb
inc
sub
mov
pop
adcl
fisubrl
push
sbb
cld
inc
add
pushf
fsubrs
push
jnp
pop
push
fistl
adc
xor
mov
inc
push
xchg
jmp
xchg
sbb
add
or
jecxz
dec
cmc
lock
shl
adc
fisubl
fcomps
mov
out
push
cmp
push
pop
es
mov
add
outsl
mov
xchg
popa
pop
mov
pop
mov
lods
cmp
adc
mov
imul
roll
jb
negl
fildl
and
fisttpl
in
fidivl
rcrl
adc
popa
adc
jns
and
push
popf
cmp
incb
in
outsl
mov
enter
jns
je
inc
es
scas
mov
dec
shrb
sub
fcomps
in
and
mov
sbb
jno
cwtl
mov
mov
inc
sub
dec
lret
movsl
loop
mov
arpl
sbb
outsl
lea
aam
cmpsl
and
orb
jl
cmc
pop
mov
ss
popf
popa
mov
outsb
rorb
outsb
call
out
mov
lcall
orl
in
pop
scas
sub
jbe
push
lea
orl
movsl
adc
movsb
or
mov
cs
stos
or
orb
stos
or
divl
cmpsl
in
repz
cmpsl
dec
xor
test
in
inc
rorb
repz
push
test
cltd
adc
scas
jbe
stos
dec
mov
pop
sub
fs
lds
inc
pusha
pop
mov
mov
jns
lods
sub
and
stos
cwtl
ret
sub
imul
dec
jno
popf
rolb
xchg
jmp
hlt
jae
fldt
cld
stc
incl
xlat
mulb
ss
out
cli
bound
jp
fbstp
shl
xor
sahf
leave
pop
call
addr16
mov
pop
js
fwait
jbe
enter
push
mov
lock
lret
mov
rcll
aaa
or
aam
aaa
mov
in
sbb
mov
sub
js
mov
les
dec
mov
pop
call
das
and
and
sti
xor
jbe
in
xchg
incl
jne
jl
call
lret
ja
sahf
rolb
repz
inc
mov
add
cmp
hlt
loope
in
sbb
push
mov
faddp
les
pop
in
int
and
clc
ljmp
push
or
mov
mov
mov
or
aam
inc
mov
pop
pop
daa
inc
mov
pop
loope
sbb
pop
fidivs
daa
shrl
mov
gs
push
dec
jmp
aas
ljmp
ljmp
xchg
test
pusha
jp
call
addr16
xor
sub
mov
pop
dec
je
dec
mov
dec
in
and
push
jmp
xchg
xchg
sarb
mov
test
fistpll
into
xchg
cwtl
push
out
loope
push
flds
or
shlb
notl
mov
mov
sbb
xchg
fnstenv
cmpsl
mov
xchg
repz
jmp
insb
pop
stos
dec
fldcw
inc
jmp
repz
mov
stos
bnd
imul
jmp
adc
bnd
or
dec
push
sbb
ret
fadds
rcl
aad
fbstp
pop
std
inc
cltd
xchg
arpl
jnp
and
aam
cld
shl
ret
daa
repz
sub
mov
mov
aam
cwtl
shl
jae
xor
mov
push
movsb
add
mov
and
pop
jae
in
add
cmp
das
inc
lods
aaa
lods
dec
aas
sub
dec
and
addr16
push
pop
jb
xor
negl
sub
and
adc
cmc
leave
daa
adc
rcl
ret
xchg
xchg
mov
into
jecxz
adc
in
xchg
addr16
cli
test
pop
mov
and
cmp
fs
adc
out
xor
sbb
and
mov
sub
mov
roll
mov
fs
pop
inc
cltd
inc
cli
call
shll
inc
cmp
add
push
andb
fimuls
scas
testl
xchg
int3
aam
pop
inc
fwait
pop
popa
cmp
push
mov
imul
or
cmp
xchg
leave
negl
ret
and
and
xchg
je
lock
xchg
mov
fs
and
jg,pn
nop
lods
add
or
sub
shlb
and
mov
jmp
and
pop
cli
xchg
jbe
jp
insb
sub
jmp
or
push
add
data16
mov
lahf
dec
imul
mov
in
lea
fisttps
clc
bnd
push
fistl
cli
xor
divb
mov
xlat
out
icebp
pop
mov
xchg
stos
roll
push
aaa
pushf
and
inc
jl
cmp
or
or
mov
sahf
jg
sbb
test
rol
fnsave
popf
adc
jne
ficompl
cmc
mov
sub
loopne
xchg
sbb
mov
jecxz
jb
pop
mov
cmp
xchg
mov
xchg
adc
aad
pop
fdivs
dec
mov
sub
cmp
lods
daa
xor
aad
cld
addr16
sbb
ficoms
ds
inc
add
adc
cltd
mov
cmpsb
push
jle
rcrb
das
pop
repnz
cmc
push
mov
lret
fs
in
rolb
std
jno
jns
xchg
ljmp
jnp
sar
adc
push
mov
xor
scas
mov
lods
sbb
sbb
adc
fistl
inc
jle
jle
or
and
cs
mov
xor
mov
xor
add
lcall
lret
stos
call
mov
aad
stos
lret
xchg
shrl
jns
cmp
aas
dec
loop
repnz
add
cvtpi2ps
pusha
mov
sbb
cmpsb
inc
mov
lods
add
sub
fadd
stos
dec
subb
loop
imul
xor
and
xchg
fld
pop
imulb
imul
sub
fsts
push
ret
push
divl
dec
pop
and
nop
rclb
stos
pop
jns
test
push
into
sub
in
push
inc
test
mov
xchg
repnz
adc
jo
stos
lahf
inc
or
pusha
mov
scas
clc
adc
cwtl
mov
mov
fmuls
addb
add
sub
mov
fsubl
mov
add
adc
test
pop
jne
sub
push
pop
sbb
cmp
pop
shl
adc
fisttpll
mov
lods
shll
out
mov
jnp
out
sbb
test
or
pop
push
inc
push
std
jg
add
jle
or
push
cmp
aad
jo
stc
xchg
dec
push
and
mov
fs
xor
andb
inc
cwtl
das
dec
pop
aaa
sbb
fiadds
xor
mov
jl
arpl
stos
fldcw
jmp
das
es
jmp
movb
inc
es
jmp
lea
pop
sub
inc
xchg
push
adc
stc
sub
sbb
mov
pushf
arpl
les
lock
cltd
pop
jle
loop
pop
dec
mov
stos
int3
dec
dec
jge
xchg
xchg
adc
lcall
adc
lret
inc
loop
add
in
shlb
and
xchg
leave
adc
je
shrb
inc
repnz
add
ret
cmpsb
mov
cmpsb
es
scas
dec
mov
pop
add
es
cs
mov
fsubrp
fidivrs
ret
jp
fsubl
or
xlat
pop
in
dec
test
gs
andl
mov
shrb
mov
int
sub
mov
addb
js
cmp
sub
in
push
sub
push
add
cmp
data16
pop
jle
pushf
int
jbe
out
sarb
mov
pushf
in
lcall
cwtl
xchg
inc
aas
cmp
mov
push
cmpsb
insb
loop
jb
dec
jb
push
cmp
sbb
pop
or
test
inc
test
add
cmpl
dec
shrl
jmp
sar
cld
cmpsb
sub
addr16
mov
ljmp
bound
pop
in
add
dec
ret
repz
cmpl
rorl
or
roll
push
pop
lcall
lahf
jno
in
movsb
bound
std
std
sti
inc
loop
gs
push
inc
pop
lcall
in
xor
jg
xchg
fwait
jnp
clc
mull
daa
dec
pop
test
cmp
sbb
out
insl
iret
adc
cmp
in
pop
fst
mov
insb
ret
inc
ret
insb
and
out
das
sarb
mov
test
dec
jecxz
fmuls
sbbl
mov
xchg
test
test
test
call
sbb
push
loopne
dec
jne
pop
and
cmp
sbb
and
bound
push
xchg
inc
and
add
cmp
je
imull
imul
jmp
add
adc
xchg
cmpsl
call
leave
jmp
jp
insb
cmp
xor
xlat
stc
jecxz
jle
sar
imul
bound
cmpsl
jae
sbb
push
pop
mov
roll
orb
cmp
es
sbb
movsl
or
pop
add
loop
dec
lret
cmp
xor
inc
and
mov
add
popa
enter
jb
push
incb
or
adc
in
dec
xorb
cmp
mov
pop
fists
jp
out
or
xchg
inc
push
inc
sub
cltd
pop
push
jae
cmp
mov
add
jle
push
or
pop
lret
enter
mov
les
sub
int3
or
test
fwait
testl
mov
imul
mov
and
xchg
push
int
faddp
cmpsl
xchg
jg
daa
xchg
js
imul
bound
mov
loopne
jae
orb
sbb
mov
ds
sarl
mov
xlat
jb
dec
sbb
popa
push
in
mov
lret
and
pop
test
in
iret
or
dec
push
sbb
and
enter
jg
xor
jl
xchg
in
mov
dec
ljmp
fwait
mov
xchg
dec
jle
inc
aam
jbe
xor
lods
outsl
xor
loopne
adc
divl
addr16
fwait
xchg
or
jns
add
add
xcrypt-cfb
cmpsl
movsb
xor
mov
gs
sub
call
xlat
lret
outsb
ret
mov
cmp
pop
xchg
mov
orb
cld
sbb
scas
cld
jbe
sbb
inc
sub
dec
add
cmp
jno
pop
dec
push
lock
cmp
pop
addr16
addb
mov
inc
jne
dec
adc
pushf
mov
mov
jae
pop
xor
xor
push
pop
mov
mov
leave
push
aaa
sbb
scas
movsl
dec
mov
inc
sbb
mov
outsl
sub
scas
inc
aad
push
test
icebp
popf
test
out
mov
and
mov
scas
sbb
mov
push
fcomip
cld
push
lret
dec
add
lret
sub
inc
inc
test
cmp
sbb
mov
sbb
xchg
jmp
imul
shll
jge
ljmp
insb
mov
xor
push
ljmp
jecxz
sahf
pop
lret
lcall
or
popf
adc
xchg
imul
xor
jg
sub
cs
sub
icebp
pop
je
mov
mov
ret
mov
or
sub
loope
test
call
sbb
mov
loopne
cld
jo
jecxz
lahf
adc
inc
outsb
jo
push
in
mov
decl
or
sti
mov
ds
fidivrs
jmp
fsubr
fsubrl
sub
xchg
inc
inc
lea
xor
xor
cwtl
adc
testb
cltd
and
mov
pusha
push
jne
mov
push
cmp
adc
icebp
mov
jl
test
push
xor
push
insl
rorb
adc
xchg
ret
int
pusha
or
xor
lods
aas
cmp
xor
xor
fdivl
inc
cmc
sbb
jbe
outsb
xor
cmp
pushf
jecxz
das
mov
cmp
pop
mov
sbb
les
sbb
mov
mov
mov
cld
fnstcw
or
adc
ret
sbb
mov
mov
out
out
adc
jecxz
mov
mov
and
ja
jae
loope
ss
sbb
out
mov
push
ja
xlat
push
mov
xor
stos
xchg
xlat
and
jno
jp
lret
mov
rolb
sbb
icebp
int
jg
xorl
cmc
xor
enter
and
cld
ja
xchg
outsb
repnz
jns
fsts
mov
mov
sahf
sub
push
jb
sbb
inc
xchg
roll
mov
adc
sub
ss
xchg
mov
push
ret
xchg
pop
jg
add
xchg
add
mov
push
ljmp
dec
mov
xchg
jge
jp
add
jne
add
push
xor
fucom
mov
cli
pop
lods
xchg
cli
shlb
jnp
lahf
adc
pop
jle
imul
into
mov
mov
sbb
or
pop
je
mov
adc
repz
int3
mov
out
push
push
fisubrs
cmpl
cli
je
push
ret
inc
xchg
out
rcll
fdivl
lret
test
sub
sbbb
mov
push
outsb
dec
enter
inc
in
pop
fildl
outsb
sarb
in
outsl
add
add
mov
or
roll
fstl
fcmovnu
int3
cld
xchg
pusha
inc
iret
lcall
dec
push
inc
scas
push
cs
pop
push
add
and
imul
in
fistps
lds
aas
jle
fs
xor
scas
push
jno
or
arpl
jb
mov
cld
cmpsl
outsb
xchg
or
jl
ret
gs
mov
into
leave
stos
ljmp
and
cltd
mov
or
push
aad
mulb
push
out
sbb
adc
movsl
jmp
dec
rolb
ja
dec
xlat
movsl
xor
imul
xlat
pop
jge
cmp
mov
ljmp
mov
je
pushf
scas
lods
je
leave
mov
out
adc
push
insl
cmp
pop
fists
sarb
jecxz
xor
enter
jmp
fstpt
aam
out
mov
cmp
cmpb
aas
cmpsl
mov
repz
mov
in
mov
dec
jb
jle
aaa
rcll
pop
fnstcw
jmp
inc
inc
dec
mov
jo
cs
pop
jns
loop
pop
fildl
jecxz
sbb
xor
clc
jne
pop
fdiv
mov
mov
nop
adc
ret
flds
dec
dec
jns
rcrl
sti
xchg
jp
jae
push
cltd
dec
pushf
aaa
push
mov
outsb
jg
xor
lock
mov
push
jb
imul
mul
movl
inc
xchg
cmp
ret
dec
xor
mov
xchg
jle
out
pushl
stos
sub
mov
test
adcb
adc
mov
mov
iret
out
sbb
fistpl
xchg
inc
cli
aas
jp
mov
lock
scas
inc
lds
inc
adcb
mov
in
ss
mov
in
test
lret
mov
or
jbe
inc
cmp
mov
dec
and
stos
pop
lds
mov
std
or
mov
cwtl
mov
lea
rcl
shll
outsl
clc
lcall
mov
mov
int
jge
leave
and
push
push
xchg
jne
rorb
and
cmc
rcrb
test
outsb
sbb
xor
cmp
test
decl
xor
mov
addr16
cmp
inc
mov
adc
cmpsb
test
jnp
int
mov
nop
push
adc
test
pusha
jo
shrb
add
xchg
cmp
xor
or
imul
dec
mov
xor
mul
pop
and
or
mov
jbe
or
mov
repz
jle
cli
shl
and
dec
dec
in
imul
cmp
push
push
push
data16
pop
xchg
shl
sub
sar
jno
ja
xor
fdiv
aas
cltd
mov
xchg
dec
add
sub
pop
in
ret
dec
xor
fnsave
loop
ret
pop
jne
mov
push
mov
dec
or
pop
add
cwtl
call
daa
sbb
mov
rcrl
roll
outsb
sbb
in
fs
arpl
in
mov
std
mov
dec
pushf
adc
xchg
pop
pop
sub
and
andl
mov
add
xchg
or
jmp
lret
movsb
scas
mov
inc
insl
xor
pop
jns
fildl
mov
movsb
pop
or
std
inc
ljmp
mov
sbb
push
nop
lret
mov
push
mov
mov
and
cmpsb
or
dec
or
outsl
pop
stos
mov
xchg
ds
cmp
insl
xlat
adc
repnz
shll
ds
push
mov
xchg
addl
aaa
mov
cmp
inc
outsl
sub
loopne
lds
and
ljmp
ss
mov
mov
mov
adc
fnsave
outsl
sbb
imull
in
xchg
push
sbb
adcb
xchg
arpl
scas
jp
mov
push
adc
add
dec
cmp
push
lods
xchg
ret
xchg
mov
adc
xchg
adc
mov
or
js
dec
addr16
test
adc
cmpsb
shr
loop
gs
pop
inc
push
aas
gs
rclb
push
test
cmpsb
imul
xchg
aaa
pop
hlt
sub
xchg
mov
stos
mov
test
push
iret
inc
cld
out
adc
jl
bound
jno
pushf
mov
sub
mov
mov
out
add
cmp
out
xchg
arpl
jnp
xor
lret
push
mov
rorb
inc
xchg
addb
jno
push
fstps
pushf
bound
stos
loope
jle
repz
sbb
mov
sbb
arpl
lahf
outsl
dec
xchg
push
lret
xor
xchg
int
loope
repz
cld
aaa
fstl
and
mov
inc
inc
sbb
sar
mov
into
call
xor
bound
insl
adc
mov
jno
and
shl
cmpsb
adc
std
mov
pushf
or
pop
adc
xor
jb
add
xchg
hlt
jae
sbb
mov
cmpsl
mov
mov
mov
inc
test
mov
push
data16
jecxz
loope
int3
inc
mov
fsubr
scas
push
jo
pop
iret
cpuid
stos
mov
inc
xor
jns
into
hlt
aam
add
adc
in
cmp
insl
dec
sub
sahf
xchg
iret
mov
mov
dec
cltd
fadds
test
add
mov
pop
nop
xchg
pusha
stc
pop
loopne
movsb
sbb
or
in
repnz
pop
je
ljmp
xchg
jg
xor
scas
mov
jp
imul
adc
dec
leave
push
test
mov
xchg
cmp
xchg
hlt
lods
and
pop
adc
push
loop
and
jle
mov
pop
mov
push
daa
jnp
rcrl
lahf
test
xor
sbb
add
push
cmp
mov
les
imul
repnz
sbb
rcrl
insl
hlt
movsl
inc
daa
dec
mov
mov
add
mov
loope
pushf
pop
or
jge
mov
mov
inc
sub
push
fnstsw
std
pop
adc
lods
lcall
in
adc
pushf
lret
cltd
mov
cli
pop
test
dec
xlat
in
cmp
fdivrp
fmul
xchg
shrl
bound
mov
outsb
inc
lahf
sub
jg
outsb
mov
jae
jmp
pop
dec
jne
fistpl
addr16
stos
mov
xchg
jae
adc
or
mov
std
adc
or
fcmove
cs
stc
gs
jnp
push
outsl
jmp
fstps
aaa
sbb
jae
es
add
mov
popa
cmp
out
movsl
xchg
test
sbb
sbb
shlb
gs
rcrl
ds
inc
mov
mov
or
loop
insb
mov
int3
popa
xor
xchg
dec
adc
lods
cltd
and
outsl
iret
pushf
add
and
cld
or
lea
jle
and
pop
or
push
ljmp
or
mov
adc
subb
sbb
out
stc
add
aad
mov
in
push
addb
int
add
cmp
dec
sub
stos
pop
push
inc
mov
cmp
test
pop
mov
and
enter
sub
cmpsl
loop
jp
jmp
ret
fistpl
xorb
jbe
out
xor
cli
dec
fbstp
test
xor
out
pop
test
mov
lods
in
cmp
xchg
test
lock
add
mov
push
pushf
mov
repz
imul
adc
mov
cmpsb
fcmovnbe
push
stos
in
sbb
fistl
inc
sbb
jo
int
lods
dec
add
pop
frstor
leave
sbb
mov
pop
push
scas
push
inc
inc
xor
sub
in
push
lcall
and
mov
mov
pushf
gs
jecxz
mov
fsubrs
sbb
push
mov
test
add
adc
push
inc
sub
xor
clc
pop
cmpsl
out
scas
sub
in
xorl
mov
push
mov
outsl
push
xor
mov
cli
mov
test
cli
pop
aad
inc
sbb
mov
in
arpl
pusha
jecxz
sbb
mov
fstps
insb
in
dec
mov
or
rolb
or
push
sbb
lret
test
sub
inc
out
push
adcb
sub
scas
pop
and
ret
xor
push
adc
xor
xchg
in
inc
cmp
fwait
std
ja
xor
push
cmp
cmc
ljmp
ljmp
std
scas
xchg
xchg
nop
push
jae
and
popf
mov
enter
lock
mov
outsb
mov
outsl
xchg
addb
imul
rcrb
sub
addr16
ret
ljmp
mov
icebp
arpl
pop
outsl
je
xlat
push
mov
mov
popf
cmp
xchg
sub
mov
mov
cld
pop
lock
add
mov
test
xlat
insl
inc
ret
loopne
daa
jg
xor
movsb
push
aam
pop
inc
push
xor
pushf
xor
or
jns
pop
push
loopne
loope
out
or
inc
fcmovne
pop
movsl
inc
cmpsl
pop
inc
fcoms
mov
lock
cmp
lret
cmp
fistps
inc
divl
adc
imul
sbb
pop
scas
scas
mov
inc
push
call
dec
test
sbb
xor
jg
mov
or
mov
mov
adc
push
push
or
inc
sub
inc
pop
shl
lsl
faddl
divl
dec
pop
push
pop
mov
mov
gs
test
mov
je
adc
push
push
pop
and
push
cld
mov
push
leave
into
pop
movsb
aam
xchg
ss
pop
adc
out
in
push
outsl
xchg
cmp
mov
dec
mov
dec
mov
fmull
lahf
sbb
inc
mov
loopne
movsb
cmp
pop
inc
and
sub
pop
cmpsb
push
std
xchg
xchg
add
lods
sti
add
int3
xor
mov
pop
stos
inc
pop
jne
lret
nop
std
xor
adc
xor
mov
js
scas
pop
test
addr16
clc
dec
adc
gs
out
xchg
mov
xor
movsb
mov
jne
adc
scas
mov
push
fisubl
pop
pushf
mov
dec
push
sbb
repnz
adc
test
xchg
adc
in
pop
xor
jl
popl
dec
jmp
gs
out
cmpsb
movl
lcall
xor
jp
push
jne
or
es
test
mov
int3
inc
fdivs
mov
rcrl
icebp
add
mov
sbb
fs
or
and
movsb
les
imul
pop
and
pop
cld
test
icebp
dec
jae
cmc
and
jae
sub
cmp
fisttpl
fnsave
pop
sbb
notl
xlat
inc
lahf
sbb
xchg
icebp
insl
fiaddl
call
dec
adcl
loop
pop
sub
jg
out
jo
jp
push
mov
daa
pop
adc
push
ja
sbb
pop
nop
pop
mov
test
aad
dec
pop
xchg
cli
lock
mov
jmp
fidivrl
sbb
das
lret
test
jle
out
add
pop
add
jl
sub
xor
lods
and
test
and
es
sub
popf
pop
inc
ret
dec
jo
inc
add
ret
adc
inc
add
repz
movsl
cli
jb
sbb
mov
or
mov
dec
js
int3
xchg
cmp
mov
rolb
add
dec
adc
and
mov
scas
sbb
fucom
in
outsb
adc
lock
xchg
sbb
push
sub
loopne
push
inc
and
dec
subl
jle
clc
xor
mov
jo
sub
scas
rcrl
jb
pop
pop
jg
and
adc
fdivrs
out
mov
ret
movsl
jg
add
and
mov
lea
mov
fs
lret
adc
and
mov
add
test
fwait
sub
xchg
jg
jb
cmp
pop
popf
iret
and
lahf
sbb
mov
mov
inc
stos
adc
sahf
loopne
or
sub
shll
nop
inc
mov
sub
stos
nop
or
aas
cli
mov
jmp
sub
andb
xor
jmp
repz
inc
mov
cld
xchg
sahf
sub
jmp
push
stos
jecxz
jns
sti
jl
into
test
leave
out
sub
mov
aad
cmc
icebp
das
cmpsl
or
xor
mov
into
in
adc
pop
mov
push
ret
into
out
ret
jno
xchg
mov
adc
mov
mov
or
and
cwtl
pop
xchg
xchg
sub
jnp
das
movsl
rcll
sbb
push
in
dec
test
aas
loopne
xor
add
jg
in
out
rorl
pusha
in
clc
sub
jle,pt
pop
jno
andl
push
adcb
cmp
pusha
pop
int3
mov
ret
leave
mov
push
fsubr
jns
mov
xchg
arpl
aas
push
pop
inc
cmpsb
lret
push
xchg
push
int3
mov
jl
movsb
adc
adc
pushw
mov
pop
mov
mov
insl
push
adcb
ja
cltd
inc
in
sub
xor
mov
lods
inc
and
xor
je
xor
iret
pop
leave
inc
dec
in
jae
sbb
fxch
scas
add
inc
jo
mov
ror
mov
inc
aaa
mov
xor
les
scas
xor
push
arpl
dec
stos
or
sbb
or
and
loop
imul
jecxz
movsb
data16
inc
inc
lret
ljmp
in
cli
shlb
xchg
in
in
cmpsl
push
xchg
push
cli
lods
fadd
cmc
jge
and
jl
pop
fcom
pop
xor
cmp
repnz
jbe
fstl
inc
jecxz
xor
sub
and
shlb
mov
lret
ljmp
icebp
jge
mov
xorb
adc
push
scas
addb
out
stc
js
push
jnp
shll
rclb
jp
mov
cmpl
jp
mov
outsb
push
aam
mov
adc
lret
scas
pop
xchg
cld
mov
lods
movsb
fcompl
pushl
sar
sti
jne
sub
loopne
pop
jl
in
je
xchg
es
scas
adc
leave
xor
aad
add
ja
sbb
inc
fsubl
sbb
aas
ja
ret
push
inc
enter
imul
in
mov
out
fsubs
jns
inc
and
mov
mov
bound
jb
jmp
ds
push
scas
sti
mov
dec
inc
je
jecxz
mov
xor
in
cli
dec
push
add
popf
popl
psubq
orl
wrmsr
sbb
fcomi
imul
insl
jae
or
ficoml
cs
dec
mov
int
or
adc
inc
adc
pusha
mov
jle
adc
mov
add
insb
adc
rcrb
addr16
add
js
or
jp
scas
pop
mov
addr16
arpl
add
js
pop
shrl
jp
ljmp
in
xlat
and
jb
add
sbb
dec
cltd
mov
testb
aas
into
cmpsb
imul
lret
cmp
sti
push
fisttps
cmpsb
pusha
xchg
loopne
add
xchg
or
jno
pop
adc
fwait
xlat
dec
xor
jo
imul
sub
dec
xor
call
js
stos
push
xor
popf
mov
fmulp
jnp
das
xchg
cli
or
xor
push
int
lahf
inc
aam
shll
lods
clc
cmp
ja
xchg
cmpsl
jae
sub
cli
mov
jg
pusha
mov
decl
pop
enter
or
pop
fstpl
ficomps
sub
pop
inc
mov
js
inc
adc
cmp
or
cmc
ljmp
xchg
mov
xchg
ds
mov
rcr
push
and
js
push
jle
adc
popa
dec
popf
jnp
mov
stos
mov
clc
cltd
addr16
mov
and
out
and
lock
shlb
out
cmp
inc
mov
xchg
pop
mov
jb
sbb
fisubl
mov
shrl
mov
sub
adc
les
sti
mov
dec
ljmp
fnstenv
outsb
pop
mov
jae
xchg
xchg
pusha
sti
adc
jle
jg
sahf
jmp
frstor
test
mov
es
int
mov
test
mov
in
test
jo
xchg
lret
iret
repnz
or
ret
shll
xor
aas
cwtl
stc
incl
and
ds
xchg
icebp
test
cmp
iret
pushf
mov
jg
js
xor
les
lea
pop
out
mov
fiadds
push
mov
push
pop
mov
mov
inc
insb
inc
ds
imul
fcom
fwait
mov
dec
mov
push
test
cwtl
movsl
adc
jl
imul
cmp
sbb
push
jg
test
jl
inc
nop
ret
pushl
pop
adc
rcl
dec
and
movsb
insb
mov
inc
outsb
inc
jae
mov
in
add
lods
xchg
mov
mov
and
into
adcb
mov
stc
lret
loop
jmp
inc
out
in
daa
scas
xor
mov
push
mov
pop
movsl
mov
lret
les
add
jle
pusha
xor
andl
jo
jb
shrb
xchg
out
sbb
cltd
and
mov
mov
push
or
mov
aas
push
enter
loope
mov
mov
mov
gs
jne
ret
sbb
into
mov
loopne
xor
popa
bound
scas
shll
stos
xor
out
daa
test
cmpsl
pop
inc
dec
mov
xchg
call
dec
sub
push
leave
daa
hlt
jo
lret
rorb
lods
push
sbb
ret
mov
cmp
push
mov
jns
jg
fldenv
bound
mov
subb
mov
mov
and
adc
out
dec
mov
les
xchg
or
push
mov
repz
fcmovu
pop
lret
or
xorb
xor
and
mov
xlat
lret
or
xlat
pop
in
xor
lods
ds
inc
mov
cmp
out
insl
mov
add
rcr
add
sbb
mov
mov
add
ss
and
add
test
mov
inc
jecxz
int
aad
and
hlt
jae
icebp
mov
cmp
or
fdivrp
pop
dec
xchg
or
and
or
or
or
mov
lret
dec
fisubs
xor
mov
jmp
aas
inc
daa
loopne
add
sbb
fistpll
push
jecxz
das
sbb
cmp
xchg
mov
sbb
cmp
popa
aad
loope
popa
outsl
xchg
xlat
mov
int
lret
mov
data16
xchg
mov
push
in
xor
push
cmp
add
push
enter
ljmp
mov
in
sub
call
mov
jecxz
les
imul
pusha
pop
mov
jp
cmp
mov
mov
cmovne
add
cmp
jle
pushf
dec
nop
repnz
gs
inc
notb
or
pop
sbb
push
dec
sbb
jb
push
xor
insb
cmc
cld
sub
mov
push
imul
leave
hlt
lock
pop
cmpsl
push
mov
xchg
pop
std
sub
test
pop
pop
mov
xchg
bnd
into
pop
xchg
push
movsb
je
sbb
adc
pop
or
lea
and
xor
push
inc
lret
sub
inc
loopne
inc
jl
jnp
fimuls
jnp
das
inc
test
lods
mov
aaa
fdivp
jns
daa
out
in
lock
xchg
fnsave
insl
sahf
and
iret
or
adc
inc
pop
sbb
negl
je
push
mov
es
shlb
sbb
inc
push
testb
notb
mov
pusha
mov
xchg
push
mov
mov
sbb
loop
into
lret
sub
sub
sarl
popa
xorl
xchg
lock
xchg
sbb
sbb
popf
loopne
into
dec
push
call
pop
ss
dec
inc
movsb
dec
push
jae
mov
rolb
pop
sbb
and
xchg
lahf
rcrl
push
lcall
and
mov
mov
rol
shll
test
mov
in
setl
ja
ljmp
pop
stc
into
dec
call
cmp
push
pop
test
xchg
test
outsl
inc
repnz
adc
cmp
xor
jnp
sbb
movsl
mov
test
push
pusha
in
int
jb
mov
ret
inc
pop
xchg
es
dec
subl
arpl
adc
add
testl
inc
push
mov
dec
jae
jbe
lahf
mov
mov
fstps
xchg
lahf
call
or
in
sbb
fimuls
sbb
or
lret
shrb
nop
lahf
sub
mov
push
int
pop
movsl
insb
ds
roll
cmp
fiaddl
daa
sbb
mov
mov
pop
pop
add
cs
repnz
in
icebp
jb
mov
daa
test
cmpsl
bound
mov
repnz
or
xor
xchg
mov
jb
sub
push
cmp
movsb
mov
loope
imul
ss
fs
push
mov
xor
dec
jb
sbb
mov
sbb
lods
jecxz
daa
mov
mov
movsl
les
pop
fsubs
gs
iret
or
and
ret
and
std
cmp
out
and
push
mov
push
add
out
out
int
sub
pop
or
add
jb
icebp
xchg
std
jo
jmp
add
inc
push
pushl
nop
xchg
cmpl
mov
dec
je
jne
jne
xchg
gs
and
in
inc
mov
movsb
inc
sub
clc
sbb
out
sbb
jmp
rep
cli
cmpl
or
cmpsb
loopne
jbe
add
cmp
inc
call
sub
leave
movsb
inc
clc
xor
xor
insl
in
out
fdivrs
add
shrl
cmp
ds
jno
dec
ja
add
loop
ret
jns
pushf
mov
push
notl
mov
push
test
ss
xor
inc
cltd
shrl
ja
scas
sub
pusha
sti
rol
shrb
sbb
cltd
xor
stc
jns
xor
stos
adc
push
iret
sub
lds
xchg
hlt
pop
cmp
scas
adc
shll
mov
dec
repnz
mov
sbb
divb
test
std
pop
dec
lock
cmp
inc
pop
sarb
cwtl
mov
sbb
mov
or
dec
mov
repnz
pop
or
cwtl
dec
cmp
push
xor
xchg
add
cwtl
xchg
dec
cmp
sub
scas
pop
and
repz
and
cmp
jg
mov
jecxz
or
push
subl
call
sbb
fwait
clc
scas
jmp
rcrl
int
jne
push
sub
and
daa
jle
pusha
cwtl
fists
cmp
jle
push
rolb
cltd
mov
sbbb
sub
dec
inc
pop
and
cmp
jne
jp
lret
lods
in
imul
stc
aaa
nop
xchg
mov
cmp
nop
mov
xor
mov
sbbl
mov
repz
jno
pop
cli
insl
or
sbb
push
aad
out
repnz
in
xchg
cmp
push
divl
mov
popf
mov
mov
lret
insl
out
jb
cmp
mov
jp
add
iret
sub
int3
mov
test
xor
pop
cmpsb
aas
pop
and
pushf
add
js
jb
xchg
roll
nop
push
inc
mov
shll
inc
sbb
sbb
js
fs
fdivrp
or
ds
mov
loope
dec
add
add
inc
mov
lods
sub
jns
xchg
pop
popa
les
xchg
add
and
idivb
xor
mov
xor
dec
gs
jne
jo
int3
mov
jb
cmp
inc
pop
test
or
push
js
jo
push
mov
and
cmpsb
xchg
leave
ficoms
fsubr
dec
xor
cmpsl
push
inc
lods
bound
loop
dec
dec
bnd
mov
or
mov
jg
push
push
pop
inc
push
testb
push
addl
icebp
ret
movsl
enter
and
in
notb
insl
mov
dec
bound
inc
and
add
mov
into
mov
add
adc
enter
push
push
cld
mov
leave
insl
in
mov
and
leave
pop
fs
or
lea
add
mov
fstpt
xchg
push
lret
imul
cmpsb
loop
outsb
pop
mov
aas
sarb
repnz
jb
dec
inc
sub
inc
mov
pushf
inc
test
push
lret
fistps
fdivs
xor
lcall
cli
dec
aad
push
pop
add
push
pop
xor
out
push
inc
ss
jno
lea
nop
lret
insb
jge
pop
iret
push
test
xor
arpl
fistl
lcall
add
test
adc
pop
mov
push
ret
mov
cs
dec
inc
rorl
pop
cli
dec
lock
stc
in
add
pop
mov
sub
clc
xlat
jg
push
inc
adcl
jle
out
fstl
pop
jp
mov
adc
clc
iret
jmp
mov
decb
leave
cmpsl
or
jbe
sti
lods
in
push
lret
xor
movsl
lret
mov
mov
out
xchg
stos
cmpsl
lahf
mov
sbb
cmp
mov
cld
bound
jmp
lret
scas
sub
xchg
push
jg
xor
inc
push
sub
mov
hlt
jne
gs
add
clc
mov
je
sbb
pop
subl
aaa
sbb
xor
stc
inc
xchg
icebp
decb
xchg
mov
mov
leave
mov
insl
je
xor
xor
ficoms
pop
loope
out
jno
add
sub
jmp
lret
into
adc
loop
repnz
mov
and
sub
inc
add
xor
je
push
dec
jne
push
adc
cli
sub
jno
inc
in
inc
mov
lret
jecxz
and
jns
sbb
inc
push
mov
pop
mov
loopne
or
clc
xchg
lea
mov
dec
pop
pop
xor
lahf
sbb
mulb
push
mov
dec
mov
testb
sub
sbb
add
xor
fdiv
jmp
mov
xor
push
pusha
jne
mov
mov
xchg
xchg
fstpl
push
inc
out
mov
jb
js
mov
iret
push
sbb
arpl
push
mov
lea
or
jmp
pop
iret
mov
inc
stos
jmp
fwait
sbb
imull
fimuls
jmp
inc
out
pop
inc
sub
cli
pushf
inc
cs
inc
repz
push
add
lret
sti
pop
xchg
dec
and
push
mov
xchg
inc
scas
dec
xchg
ljmp
mov
jg
pop
out
xor
lods
insb
push
stos
ljmp
jmp
scas
or
pop
lods
pop
pop
mov
push
movsb
or
push
adc
jnp
dec
xor
add
jb
cmpsb
pop
add
lret
ss
fidivrl
mov
pop
pop
and
mov
pop
pusha
or
ret
into
push
sub
idivb
adc
fmul
andl
stos
int
mov
cmpsb
imul
sti
dec
mov
jne
lcall
mov
mov
test
ljmp
int
movsb
aam
popf
push
xor
pop
inc
jb
loop
pop
or
sub
imul
mov
nop
aaa
dec
push
cmp
xchg
mov
mov
or
mov
xor
xchg
add
dec
fwait
mov
shll
sub
incb
push
xchg
xchg
mov
fwait
lods
pop
leave
jge
adc
mov
and
add
sbb
mov
xchg
stos
xchg
call
xchg
push
cmpsl
xchg
fidivrl
fwait
or
movsl
enter
test
out
adc
push
jb
xor
aas
xor
sbb
test
push
js
add
mov
jo
xor
adc
enter
sub
popf
pop
xor
push
stos
jae
adc
lock
ss
js
cltd
sub
add
and
fstp
jl
lods
gs
icebp
out
lret
add
mov
pop
mov
lahf
jl
test
ret
cwtl
out
push
xor
ljmp
dec
popa
sub
mov
mov
and
rolb
push
out
add
xchg
mov
in
jno
sbb
addb
dec
inc
mov
nop
ds
xchg
xor
inc
testb
pop
int3
loope
cs
dec
loop
or
rclb
mov
sbb
mov
xchg
pop
and
popf
jne
push
jb
mov
shlb
sub
mov
mov
fdiv
or
cs
pop
mov
int
sub
inc
and
adc
lock
cmp
push
cltd
enter
sahf
lahf
repnz
sub
ret
and
lret
lds
negl
add
and
fildl
jl
rol
add
into
mov
add
cmpsb
push
jns
leave
adc
je
movl
ss
das
arpl
pop
movsb
fldcw
xchg
and
xor
inc
jns
dec
lcall
andl
jno
fstps
stos
or
jmp
adc
add
insl
in
adc
lahf
xorb
mov
fs
insb
pop
jl
or
sbb
add
dec
cltd
mov
lahf
dec
xchg
testl
lret
pop
adc
leave
arpl
sbb
mov
xchg
and
and
ds
pxor
jp
push
test
add
bnd
add
ret
jle
js
pop
sbb
icebp
push
ja
push
push
int
sbb
mov
out
push
gs
ss
mov
sahf
movsb
cs
inc
adc
enter
gs
pusha
dec
popa
addr16
cs
pop
loop
sub
xchg
push
pop
lret
das
sub
fmuls
xchg
xchg
out
push
pop
inc
loopne
push
les
dec
inc
push
jl
or
adc
stos
xor
add
sub
ficoms
xor
adc
imull
adc
jbe
movsl
jmp
xchg
fcmovne
sahf
mov
and
outsl
sub
lea
bound
xchg
dec
arpl
push
in
xor
out
xchg
cli
dec
mov
pop
or
push
jo
xor
cmpsb
adc
in
dec
push
outsb
mov
bound
data16
in
or
xchg
in
test
cmc
incl
shll
sub
push
pushf
jle
cmp
mov
jg
ja
xchg
dec
sahf
rclb
push
ss
dec
and
add
mov
int
into
sbb
in
jb
pop
push
xchg
or
fisttps
xchg
adc
fxtract
ljmp
andb
lea
fisubrl
mov
mov
adc
cmpsl
inc
sub
into
aam
cmpsl
xor
sub
xor
mov
rcrb
js
or
out
mov
push
addb
fisubs
scas
mov
pop
xchg
gs
xchg
iret
push
jo
div
out
xrelease
bound
hlt
xor
negb
imul
sarb
sub
adc
popf
test
aas
sbb
or
inc
push
xchg
pop
ds
loope
sbb
xor
clc
fistl
xor
shr
repz
inc
aas
movq
add
lret
push
stc
lds
push
stos
xchg
sub
rorl
hlt
or
mov
or
mov
repz
out
add
jmp
mov
push
sbb
popf
and
arpl
pop
jno
out
js
out
sbb
mov
imul
popw
dec
jmp
cmc
xchg
cmpl
cmp
sub
sbb
dec
or
mov
mov
insb
mov
sarb
mov
xor
fdivrl
popa
mov
mov
and
lods
jo
jae
sub
xchg
add
into
movsb
mov
and
pusha
jge
xchg
vmread
xchg
xchg
rep
jl
xor
xchg
and
pop
cmp
dec
adc
insl
push
inc
shr
cmp
aad
lcall
lds
xchg
sarb
jle
jb
int
sub
jp
test
xchg
aam
outsb
cmp
repz
imul
cmp
cmp
das
lret
es
shlb
lods
inc
subl
test
push
inc
cmp
mov
cmp
mov
jge
push
add
lret
test
add
call
sbb
fsts
mov
fsubl
mov
mov
sbb
or
mov
dec
loopne
mov
das
fs
pop
in
jo
inc
repnz
aaa
bound
subl
dec
push
pop
mov
int
sbb
dec
mov
xor
dec
jecxz
mov
je
sub
cld
mov
or
push
imul
pop
aam
jno
sub
cmpsl
pop
sahf
add
push
testl
sub
pop
inc
arpl
cmp
jo
test
loope
das
int3
imul
sarl
cli
js
xchg
sbb
mov
mov
popf
lods
xchg
sub
fisubs
inc
jmp
test
xor
shr
std
shlb
xchg
jp
sbb
xchg
les
mov
loop
inc
adc
cmpsb
mov
mov
or
add
enter
aas
jp
cmp
cwtl
dec
daa
cmp
test
jecxz
rorl
push
lds
mov
mov
ficomps
adc
fsubrl
xchg
push
add
ds
jnp
push
roll
jecxz
fistps
add
push
fwait
xor
mov
je
pushl
aam
push
ficomps
fwait
mov
mov
jnp
jp
pop
pop
lock
pushf
and
xor
jle
mov
aad
cmp
icebp
cwtl
shlb
and
es
imul
addr16
stos
adc
jmp
shrl
fisttpll
inc
int
loopne
mov
ret
and
inc
xchg
aas
sti
add
mov
mov
popl
ss
xchg
inc
jo,pn
ds
xchg
repz
dec
inc
rcrl
inc
loop
rcrb
in
push
repnz
adc
lret
insl
or
xor
cmp
loop
inc
cli
std
sarb
xor
push
imul
aas
pushf
aam
jnp
std
jae
mov
fldcw
dec
cmpsl
into
adc
dec
rcll
sub
add
sub
enter
fsubp
clc
stos
jmp
dec
fwait
mov
iret
mov
outsb
repnz
push
iret
stc
test
repz
incb
dec
adc
jbe
push
mov
and
insl
out
pop
pop
mov
aaa
gs
push
call
cmp
mov
mov
or
mov
scas
and
xor
test
xor
je
movsb
jo
out
and
iret
int3
sbb
les
stc
or
jp
cmp
imul
or
into
inc
push
mov
sar
int
or
lret
xchg
sbb
inc
adc
push
mov
fyl2x
push
ret
cmpsl
jno
pop
fcompl
scas
hlt
jge
sti
insl
add
and
rorb
inc
pop
xor
jae
push
jg
add
out
pop
hlt
pop
dec
outsb
xor
sahf
sbb
icebp
imul
js
xlat
fcom
lahf
mov
mov
popa
dec
lahf
adc
push
push
addr16
insl
jmp
sbb
enter
ror
movb
or
cmp
pop
pushf
in
xchg
sub
mov
dec
pop
shl
out
mov
pop
jp
mov
popa
stc
lock
jg
or
fistpll
cmpsl
lahf
add
xor
shll
jg
inc
outsl
jb
int3
jp
sbb
mov
add
bound
adc
incl
inc
pandn
stos
cmc
lret
mov
inc
jle
add
push
addr16
add
pop
ljmp
scas
or
cmp
insb
out
sbb
daa
ret
lds
dec
sbb
push
ljmp
daa
rcll
ret
movb
jo
push
repnz
enter
mov
iret
jl
ret
mov
in
ret
repnz
and
cwtl
scas
stos
mov
arpl
mov
les
les
xor
popl
sahf
shll
push
sbb
addl
push
push
jecxz
cltd
roll
xor
sub
or
mov
repnz
inc
mov
mov
jge
scas
inc
mov
jne
test
xor
push
or
sub
xchg
xor
pop
inc
movsb
xchg
in
mov
repnz
subb
mov
xchg
popf
icebp
iret
enter
js
popf
add
lcall
xor
cmp
divl
mov
arpl
sbb
push
test
fdiv
jp
mov
fdivl
fimull
sbb
pop
adc
lea
pop
mov
fidivl
in
out
lret
movsl
dec
dec
or
inc
add
adc
xor
mov
lea
mov
xor
or
in
rcrl
mov
scas
sbb
jns
push
das
in
dec
add
cmp
or
xchg
push
pop
push
pushf
and
fstps
ds
stos
mov
fisubrs
jecxz
push
inc
fnstcw
jle
outsb
ja
stc
inc
in
jmp
movsl
inc
cwtl
orb
iret
lods
addl
xchg
push
cs
xor
mov
hlt
imul
test
in
mov
lcall
dec
jbe
jne
push
add
xor
xchg
add
pushl
xchg
fs
fisttpl
push
movsb
lods
pop
cltd
add
sub
xchg
push
and
add
pop
loop
faddl
scas
jb
xchg
and
pushw
pop
xchg
test
add
fistpll
std
arpl
decl
mov
popf
mov
xor
rclb
push
and
and
xor
sarb
shrl
add
ss
push
mov
popa
mov
test
mov
out
in
adc
fcmove
out
jge
inc
and
clc
addr16
pop
lret
pop
sub
cs
aam
cmpl
jge
int3
adc
ja
pop
cmp
xchg
mov
or
out
js
fistpll
and
cmp
mov
adc
in
inc
lea
or
in
popf
inc
movsl
repz
jae
cmc
outsb
insb
cmc
mov
adc
andl
movsb
lods
cwtl
push
aad
push
cmp
icebp
jl
dec
cmp
mov
xor
stos
es
mov
dec
repnz
mov
data16
js
popf
mov
mov
fldl
movb
jnp
loopne
jnp
jb
stc
adc
sahf
rcrb
mov
and
std
movsl
pop
pusha
mov
jle
lods
out
cmp
inc
je
insl
sub
sub
sbb
or
sbb
push
insl
xchg
loop
adc
mov
divl
cmp
mov
pop
scas
lahf
sti
imul
outsb
cmp
xchg
test
jns
ret
mov
sahf
cmp
xchg
jae
lret
jns
mov
or
inc
in
jne
pop
xor
push
mov
sub
cmp
mov
call
movsb
pop
sub
cmp
aad
js
lds
dec
cs
push
cmp
mov
mov
add
addw
push
jnp
adcb
jge
jne
cli
gs
orb
inc
or
arpl
xchg
sarb
add
es
mov
out
mov
pusha
pop
out
and
fcomps
pushf
leave
fwait
std
jo
jp
jg
mov
cmp
jmp
lret
out
or
mov
cwtl
jnp
hlt
into
add
out
stos
inc
or
add
test
nop
jbe
mov
std
pop
add
orl
mov
loope
orb
andl
or
arpl
lock
dec
dec
add
sar
xchg
adc
xor
mov
jbe
xor
shlb
out
mov
mov
aas
adc
xchg
sti
out
out
repz
daa
adc
call
ret
out
xchg
shl
popa
lret
es
sbb
aam
ret
mov
dec
cmp
dec
adc
rclb
cmpsl
cmc
iret
fildll
push
dec
pop
jo
push
mov
stos
mov
adc
pop
popa
ret
mov
out
cmp
in
outsb
mov
inc
mov
lock
mov
sub
jns
insb
data16
xchg
jl
std
and
jge
out
adc
out
push
jl
mov
rolb
gs
pop
nop
lods
pop
jl
fucomi
pop
mov
pop
pushf
into
xor
push
push
push
push
les
stos
inc
mov
xlat
repnz
es
or
adcl
adcb
cmp
xchg
dec
sub
mov
movsl
aaa
ror
sbb
jmp
sbb
add
jp
fnstsw
out
xorb
addb
rorb
xchg
sbb
mul
lock
sbb
sbb
repz
xchg
addr16
jecxz
in
das
add
loope
insb
pusha
popf
call
push
lock
sahf
fdivrl
mov
cmp
pusha
or
cmp
cs
mov
mov
fsubrp
imul
or
rcrl
pusha
mov
push
scas
mov
lods
push
leave
adc
xor
push
lock
test
test
xor
xchg
add
mov
pushl
xor
insb
pop
xor
jo
iret
arpl
dec
add
sbb
stos
sbb
lock
jns
in
rcr
es
cs
sub
jle,pt
and
dec
popf
es
test
or
sbb
mov
lea
test
rcl
mov
inc
loopne
pop
mov
aaa
pop
ja
cmp
dec
outsl
push
lods
pop
sub
cmp
pop
sub
mov
push
es
add
sbb
mov
rcrb
and
xchg
cmp
jmp
lods
or
cld
repnz
push
pop
lret
leave
cltd
or
insl
scas
sbb
sbb
jne
sbb
sub
jp
das
andl
fsts
bound
push
pop
arpl
clc
fcoms
push
mov
and
inc
jne
outsb
xchg
out
aaa
xor
into
push
mov
sbb
clc
cmp
insl
int3
aad
jns
out
and
movhps
cwtl
leave
cmpb
add
popf
lahf
mov
roll
add
ficomps
mov
push
dec
push
test
push
and
push
pushf
lock
xchg
out
or
cmp
pushl
inc
mov
mov
jg
mov
xlat
ljmp
jmp
push
push
sub
sbb
int
push
pop
xchg
jmp
ds
sub
cmp
mov
xor
sbbb
sbb
rcrl
aas
sbb
or
mov
mov
sbb
push
and
push
je
add
pop
lods
dec
into
inc
xor
loope
repz
mov
xchg
ret
adc
xchg
push
push
inc
addr16
cmp
stos
adc
in
mov
inc
daa
cwtl
sub
outsl
outsb
leave
cmpsl
out
add
jb
push
orl
push
outsl
notl
lods
mov
pop
mov
mov
inc
popw
lods
sub
xorb
lock
push
arpl
push
mov
ss
outsb
xor
sub
sbb
rolb
mov
mov
pop
loope
jl
sbb
xor
stos
dec
inc
ficompl
stos
lea
push
mov
pop
mov
test
mov
add
inc
fcomi
lock
mov
lods
push
imul
nop
mov
sub
jmp
inc
push
pushf
fcoml
jle
push
push
jge
or
out
jl
jne
insb
mov
in
aad
xchg
push
add
adc
mov
loop
xor
xchg
cmp
xchg
mov
aas
push
out
add
les
icebp
and
inc
push
xchg
add
pop
push
dec
jmp
xlat
mov
adc
or
filds
mov
mov
push
sub
xor
or
push
jns
push
sbb
mov
shl
xchg
loop
sub
mov
xchg
xchg
jle
imul
pop
jge
mov
jl
sub
xor
mov
xor
xor
inc
xor
mov
mov
push
ljmp
dec
addr16
xchg
pop
mov
mov
ja
or
jl
fistl
pop
nop
mov
inc
repnz
jmp
adc
and
pop
cmp
fwait
loopne
mov
dec
arpl
add
dec
andl
leave
fidivrl
push
sbb
and
mov
aaa
aad
movsl
test
xchg
push
loopne
cli
into
rcrl
cmp
mov
pop
int
pop
push
dec
mov
mov
pop
xor
sarb
mov
fadd
js
mov
pop
aas
or
loopne
and
push
les
adc
popf
pop
add
adc
xor
jne
inc
outsl
cmpsl
mov
lret
aam
mov
pop
sbb
xlat
jecxz
scas
or
or
xor
jbe
pop
shlb
daa
negb
fbld
inc
sar
or
jle
xchg
stos
je,pn
mov
and
rclb
daa
pop
lret
or
daa
js
fs
inc
es
inc
hlt
push
pop
ret
arpl
lahf
mov
sub
leave
inc
scas
mov
sbb
push
out
pop
dec
and
test
gs
ret
out
pop
aas
push
popa
dec
xchg
push
cs
ret
push
sbb
xor
packsswb
and
mov
int3
adc
out
out
sbb
xor
adc
mov
xchg
loopne
out
or
scas
jne
mov
xor
addr16
mov
cmpl
jmp
mov
addb
subl
sahf
mov
push
mov
fsubrs
sbb
mov
push
adc
xor
push
imul
bound
scas
out
mov
mov
stos
jg
mov
sahf
pop
and
push
and
jnp
test
fwait
sti
jne
andl
inc
mov
push
fldcw
pop
add
xor
or
shll
call
and
push
mov
leave
or
ret
repz
int
inc
push
fldenv
xor
leave
inc
popf
mov
sub
push
jbe
xlat
push
cmpsl
inc
mov
xor
scas
jne
cmpsb
scas
arpl
jge
and
outsl
push
fs
loopne
sub
out
cmp
pop
inc
jg
mov
jno
cmp
push
leave
cmc
je
lds
mov
sub
call
mov
je
jno
bnd
mov
cmp
xor
bound
jmp
jo
lahf
cmovb
fwait
mov
mov
cmpsb
sbb
or
aas
xlat
xchg
jp
add
mov
add
xlat
rcr
xlat
pop
xchg
cmp
popf
jmp
orl
xchg
adc
jg,pt
ja
stc
and
xor
mov
imull
mov
xor
lock
mov
mov
xor
inc
mov
xor
jae
test
cld
cmp
cmp
or
out
je
push
notl
in
rcrb
and
dec
test
ja
int3
negb
inc
mov
mov
pushf
inc
nop
cmpl
sbb
jnp
movsb
mov
bound
mov
inc
push
les
fs
cli
xchg
xchg
xor
adc
sbb
push
jp
mov
push
je
call
fadds
adc
xchg
jmp
inc
cmp
sub
hlt
loop
pushf
or
movsb
test
jle
shrl
xchg
ucomiss
mov
sub
mov
lea
aam
push
sahf
test
xchg
sbb
jp
jbe
xchg
dec
fcmove
dec
mov
repnz
push
subb
fsubr
lock
mov
jno
xchg
lods
sub
or
pop
rcll
out
lcall
inc
enter
jl
in
orps
dec
mov
popa
adc
shll
mov
aad
pop
in
test
dec
mov
mov
aam
cmp
cmp
mov
jb
xchg
cmp
mulb
fsts
and
popa
dec
jmp
test
add
adc
sbb
stos
repnz
pusha
call
jo
pusha
push
dec
push
test
mov
stos
push
jae
call
push
and
adc
pop
mov
jb
fwait
pop
or
aaa
sbb
cmp
pop
and
mov
shll
and
sub
jno
jge
mov
fimull
es
add
popf
scas
mov
inc
shlb
jnp
sbb
pop
pop
fwait
test
fndisi(8087
cmpsb
push
mov
adc
inc
sbb
push
mov
mov
cmpsb
rolb
aam
pop
dec
add
fsubs
cwtl
scas
nop
jl
imul
or
les
mov
push
add
cmp
xchg
push
xor
roll
das
fidivrs
mov
inc
push
je
hlt
cltd
adc
jo
stos
jge
insl
iret
bound
push
ds
pop
xlat
sar
cli
lahf
idivb
ds
loope
pusha
sbb
dec
dec
out
shl
pusha
cmpsb
sbbb
insl
add
push
stc
aad
arpl
push
push
xchg
mov
xchg
fdivrs
inc
in
aaa
lret
jnp
xchg
leave
fbstp
aas
cli
mov
dec
adc
rolb
mov
lcall
and
loopne
out
subl
add
fs
les
inc
insl
jmp
and
adc
aaa
movsl
jno
xor
and
nop
ljmp
adc
cwtl
lock
es
dec
arpl
cmp
ficoms
orl
icebp
sbb
add
mov
cmpsb
pushf
or
scas
arpl
jle
xchg
adc
jae
fistps
fdivrl
fisttpll
loop
xlat
mov
push
mov
sub
mov
scas
test
mov
add
xchg
xchg
ja
int3
push
jb
mov
add
adc
jle
addr16
add
rolb
fcomps
push
loope
push
dec
rorl
movsl
mov
popf
jp
rclb
nop
das
push
mov
divl
adc
pushf
lds
cwtl
xor
cs
lock
stc
imul
pusha
push
sbb
xlat
adc
push
add
cli
aas
xor
inc
mov
nop
je
loope
mov
xchg
shll
shr
mov
mov
es
outsl
or
inc
rol
cli
mov
lret
push
test
mov
fdivrl
push
sbb
nop
or
in
pop
mov
cmp
sbb
pop
cli
and
mov
movl
xchg
add
push
stos
lods
jns
jge
lahf
pop
je
inc
stc
jns
addr16
rorl
mov
or
cli
inc
lods
ja
ja
jnp
iret
inc
jmp
adc
inc
loope
xchg
cmc
dec
pushf
out
lcall
inc
add
nop
or
push
stc
lcall
add
pop
rorl
in
add
out
sub
dec
ljmp
sbb
rcrl
addb
fucomp
push
cld
xchg
shrb
test
sbb
jns
movsb
ds
pop
pop
and
or
adc
and
mov
or
unpcklps
stc
mov
imull
sbb
outsl
and
inc
frstor
mov
loop
nop
cmp
jnp
adc
outsb
mov
aas
mov
andb
cmp
mull
rcrl
arpl
cmp
out
mov
mov
jne
cmp
lods
dec
movb
iret
popf
es
and
int3
cmp
xchg
imul
cmp
adc
popa
mov
ret
in
pop
cld
mov
aaa
pusha
iret
popa
movsl
inc
or
bound
add
cmpsb
fs
mov
rol
push
ret
adc
in
mov
fucomp
fsubr
cwtl
shrl
addr16
jge
aad
mov
js
push
sbb
cmp
pop
xchg
xchg
sub
xchg
and
mov
sub
mov
push
lret
cmc
push
sbb
mov
loopne
fwait
xchg
divl
out
pop
dec
js
imul
sub
adc
xlat
mov
sbb
jnp
push
xor
andb
jo
cmp
jp
movsl
jmp
push
or
pop
out
xor
mov
test
jp
into
cmp
je
sbb
mov
add
inc
mov
jne
jno
and
add
or
dec
mov
cmp
ss
int
leave
rcl
adc
add
and
cmp
add
sbb
mov
adc
shrl
cmpb
mov
addr16
xchg
aad
stos
adcl
lods
xlat
and
std
push
xlat
jb
inc
popa
scas
inc
jmp
fsin
mov
jg
jge
ret
lea
or
adc
je
fsubs
lds
dec
lcall
ds
mov
mov
cmp
daa
outsl
cs
jmp
fs
es
lea
pop
mov
stc
scas
aaa
dec
test
xlat
jns
xchg
mov
fucomip
jne
mov
clc
pop
mov
out
pop
mov
xor
js
test
add
insl
jno
xchg
xor
jle
ds
cmp
lret
mov
cltd
sbbl
mov
mov
lcall
pop
adcb
jae
push
jae
push
push
sub
add
cmpsl
sbb
jno
data16
mov
mulb
out
enter
pop
pop
ljmp
test
roll
repz
xor
jnp
test
dec
scas
mov
sub
das
mov
mov
lahf
mov
mov
ret
loop
pop
inc
push
jb
sbb
aad
ret
stos
jle
rcrb
xor
in
repz
dec
pop
data16
stos
sub
lods
jmp
sub
roll
leave
scas
bound
lret
and
inc
aaa
psubsw
sbb
adc
movsb
int
push
push
sbb
fnstcw
pop
sub
stos
cmc
adc
out
mov
xchg
and
mov
imul
out
dec
xchg
sbb
inc
lods
outsl
ror
pop
lods
mov
mov
jp
mov
rcll
and
movsb
aad
jae
cmc
sbb
int3
shrl
aaa
cld
jo
cmp
or
push
ss
ja
adcl
rcr
push
ds
inc
push
fimull
out
jnp
jne
mov
clc
popa
xchg
andl
ja
inc
shll
jb
mov
or
adc
jp
fistpll
jl
clc
sahf
imul
es
loopne
pusha
lret
es
jle
adc
xor
lods
scas
in
out
sahf
xchg
sarb
mov
and
cmpsl
lods
jg
stos
xchg
add
inc
push
sub
in
lret
sub
repnz
hlt
gs
or
push
cmpsb
jg
xchg
xor
mov
pop
inc
test
or
adc
ja
xor
xor
insb
pop
test
ds
fdivrl
lcall
mov
adc
push
add
lock
jo
add
daa
psubw
lods
xor
iret
jp
xor
xor
dec
ret
loope
and
xor
jne
ds
nop
repz
or
loope
xor
or
xor
test
xchg
push
shufps
lret
loop
sub
dec
data16
xchg
xchg
mov
pop
lcall
insl
pusha
pusha
mov
orb
mov
xchg
add
lar
rcl
xor
or
sbb
mov
xchg
xchg
sbb
or
pop
mov
cmpsl
push
idiv
push
mov
cmc
scas
repz
jmp
fs
ljmp
xchg
mov
mov
sbb
ljmp
sub
mov
xchg
cmp
sbb
jnp
inc
inc
add
mov
imul
lds
lahf
pop
sub
inc
daa
mov
mov
js
adc
inc
mov
subb
mov
jp
pop
lcall
pop
mov
add
popa
jp
sahf
mov
push
add
in
sar
xchg
les
test
sbb
jg
mov
xor
jmp
jae
int3
xchg
imul
lock
mov
mov
out
dec
xchg
and
xchg
fistl
int
sahf
popf
pop
notl
lock
imull
inc
and
addl
rcll
call
das
inc
cli
jg
stos
subl
xchg
push
test
fs
pop
sti
jnp
hlt
sti
lret
mov
scas
insb
add
cmpsl
adc
mov
cltd
aas
aam
out
and
iret
popf
aam
lahf
ror
repz
push
subl
push
nop
imulb
or
push
mov
aas
push
and
adc
mov
mov
bnd
xor
mov
sub
jo
lcall
add
adc
addb
icebp
and
cmp
mov
je
das
es
pop
inc
out
popf
ds
lea
pop
push
fwait
adc
xchg
call
leave
lods
test
mov
cmpsl
mov
mov
jecxz
xchg
mov
pop
pop
jno
fwait
mov
aas
stc
push
lcall
mov
sbb
or
adc
mov
jg
test
inc
adc
aaa
mov
imul
cmc
inc
movsl
adc
add
lahf
push
mov
test
fnsave
adc
lret
into
dec
or
fs
cmpsl
adc
xchg
aam
push
test
mov
pop
cwtl
loope
pop
lods
xchg
call
in
shll
das
and
les
in
lcall
arpl
in
dec
mov
enter
scas
pop
sahf
sarl
nop
mov
je
push
out
ja
mov
and
rcrb
fstpt
or
xor
jmp
lret
sahf
cmpsl
sbb
add
std
pop
clc
fcmovnb
testl
je
loope
js
popf
hlt
mov
cmpsl
test
rcrl
dec
popf
stos
push
cli
and
rorl
iret
mov
xor
aas
dec
stos
xor
xchg
insl
sub
sti
xlat
sbb
aaa
in
push
cmp
repnz
mov
add
mulb
popf
mov
icebp
fnsave
or
dec
adc
inc
push
jl,pn
out
imul
fcoml
sahf
sti
inc
mov
daa
ror
cmpsb
xlat
add
adc
fisubl
or
push
sbb
cwtl
jecxz
popa
pop
pop
loope
mov
fsubl
mov
push
xlat
lds
sti
pushf
in
daa
mov
mov
bound
or
lcall
mov
inc
lds
adcb
sbb
sub
add
mov
or
outsb
lret
ds
inc
pop
int
lret
xor
cmpsl
sbb
jnp
bound
jmp
sti
call
or
popf
push
inc
push
add
enter
dec
in
dec
cmpsl
dec
cwtl
imul
les
mov
ljmp
mov
jno
xchg
dec
fldenv
lret
in
sbb
lods
test
popf
lea
and
push
test
cmp
cmp
push
pop
mov
arpl
out
jp
loopne
xchg
sbb
out
mov
insb
ljmp
les
aaa
data16
pop
adc
sub
xor
mov
test
mov
adc
into
pop
outsb
std
mov
sahf
cltd
xchg
pop
xlat
pop
inc
push
mov
movsb
mov
xchg
pusha
testl
sti
aas
cmp
pusha
jns
js
sub
movsb
popa
cltd
mov
xchg
pop
mov
int
mov
xlat
cli
jae
adc
sbb
arpl
pop
fnstenv
jns
test
mov
dec
mov
adcb
das
out
inc
jp
sbb
mov
add
popa
sub
xor
mov
xchg
inc
movsb
stos
sbb
mov
pop
and
mov
pushf
add
cmp
adc
mov
imul
or
imul
mov
mov
cltd
insl
sbb
fdivrl
lcall
cs
inc
jae
lock
add
xlat
mov
mov
mov
sti
lods
stos
mov
fisubrs
pop
add
iret
push
sarl
negb
add
ficoml
push
repz
push
lock
push
rcrb
jne
test
mov
inc
xchg
nop
fistpll
pusha
loopne
push
or
inc
data16
sub
xchg
clc
inc
pop
out
mov
out
fildl
xchg
incb
add
push
jmp
sbb
pop
inc
push
inc
xchg
cmp
mov
sti
sbb
in
jmp
adc
pusha
movsb
movb
in
insl
mov
out
dec
test
sbb
cs
daa
push
test
test
sbb
xchg
jno
out
filds
gs
cmp
mov
js
lods
in
shll
xchg
repz
loopne
popa
inc
cs
jb
rcrl
jp
push
gs
fwait
cmp
fs
mov
lds
inc
out
jl
call
cli
cmp
loop
push
pop
stos
ds
xor
xor
dec
test
sbb
cmp
scas
add
es
call
in
ret
mov
and
and
ja
icebp
ret
add
in
shrb
dec
movsl
sahf
mov
inc
hlt
inc
jns
jp
ja
in
add
call
xchg
dec
or
dec
test
mov
dec
sbb
into
and
mov
testl
shll
push
xchg
scas
in
out
xchg
cmp
lret
xlat
mull
mov
push
xor
imul
add
lahf
test
push
xchg
insb
and
subb
rol
bound
pop
les
mov
sub
loope
inc
fsubrl
mov
repz
adc
js
or
bound
call
mov
pop
cli
fwait
orl
add
cmp
lods
jge
xor
das
shlb
cmp
and
xor
inc
rorb
arpl
cmp
sbb
cli
imul
aad
lock
lret
stos
lcall
lock
adcl
loopne
fildl
sti
into
js
shlb
inc
adc
push
scas
sbb
in
in
lret
adc
dec
mov
pusha
mov
hlt
dec
pop
mov
sti
test
dec
and
pop
sbb
push
ret
dec
popw
pusha
and
iret
shl
inc
icebp
es
iret
mov
jne
in
pushf
in
mov
or
push
pop
xchg
stc
add
mov
addr16
fldcw
rcr
sub
add
dec
fs
push
or
test
aaa
popf
inc
out
mov
lods
pop
pop
xchg
adc
and
movsl
sub
jmp
cmp
or
or
hlt
jecxz
pop
and
sarb
sbb
pop
mov
sbb
or
aam
and
fs
scas
pop
arpl
lds
mov
jl
flds
mov
syscall
out
mov
mov
fucomp
mov
inc
fisttpl
je
int3
pop
sbb
cltd
push
pop
push
dec
jnp
lahf
test
mov
or
cld
adc
outsb
andl
sbb
add
mov
jns
daa
sbb
sub
fmul
fisttpl
inc
imul
js
jno
ret
or
and
icebp
cmp
sbb
repz
mov
cwtl
test
pop
sub
or
push
rolb
ret
sbb
scas
popa
movsb
sbb
jnp
loope
xchg
sahf
cmpsl
cmc
lea
enter
test
lods
xchg
outsb
or
adc
in
out
jg
xchg
or
sbb
filds
fsubr
arpl
aas
mov
sub
xchg
and
sbb
jne
cli
je
cs
arpl
mov
jno
filds
sahf
data16
xsha1
cmpsb
mov
mov
mov
fcoml
mov
lret
aaa
in
push
dec
adc
dec
mov
dec
xor
leave
stos
les
adcl
mov
in
push
cmp
dec
sahf
bound
xor
jmp
rorb
das
out
daa
es
loope
in
das
xchg
pop
sbb
fs
test
or
ret
int3
lock
icebp
jae
stos
cmp
lods
push
aam
jbe
repz
lahf
data16
leave
aad
imul
out
cli
cltd
call
dec
cmpsl
pop
jns
pop
popf
jo
enter
inc
inc
test
es
push
or
cmp
in
pop
insb
dec
mov
call
ret
out
xchg
decb
aaa
cltd
pop
lods
jne
mov
aaa
lock
cmpsb
mov
outsb
dec
cmpsl
inc
int
rclb
pop
clc
rcrl
lret
mov
jl
and
clc
aad
ljmp
mov
push
es
addr16
xchg
and
jnp
test
out
mov
orl
fs
sub
sar
push
daa
test
jle
sbb
sub
push
test
dec
inc
inc
mov
adc
shlb
or
inc
jb
or
sbb
mov
inc
sub
call
loopne
ret
xor
and
pop
push
add
outsb
je
aas
jae
inc
xchg
mov
inc
ret
push
cwtl
mov
js
roll
lods
push
add
enter
jp
pusha
fistpll
mov
jo
inc
jne
or
rolb
mov
lahf
xlat
push
mov
pop
push
xor
outsb
daa
push
or
repnz
push
fisubrl
and
or
jne
cmp
push
push
lods
movb
inc
xchg
jl
and
mov
pop
jnp
xchg
xor
or
adc
mov
in
add
ljmp
add
pop
cmp
push
sbb
inc
jl
sahf
das
bound
shlb
lods
adc
push
cmp
fcomps
push
mov
pop
frstor
int3
pop
mov
rorb
test
sar
or
add
adc
hlt
cld
movsl
nop
push
pop
out
pop
xor
test
lret
cmp
xchg
dec
mov
xor
xor
incb
jecxz
cmp
xor
xor
xor
rorl
enter
arpl
stos
mulb
push
lahf
aam
cmp
or
lcall
lock
push
sub
ss
xchg
jp
cmp
nop
jae
push
xchg
adc
loop
rcl
hlt
add
clc
adc
sbb
cmp
adc
xchg
mov
cmpsl
testl
jp
push
inc
iret
sub
or
push
repz
in
jne
ja
jle
xor
add
scas
push
shlb
jbe
stc
movsb
insb
addb
cmc
mov
jmp
add
mov
movsl
sbb
mov
jb
dec
pop
push
mov
push
jne
xor
and
rcrl
loope
pop
bound
xchg
push
std
mov
icebp
loop
in
xchg
subb
aas
movsb
mov
in
push
sti
cli
pop
mov
pusha
cmp
adc
lret
pop
clc
sti
hlt
mov
sbb
cmp
aas
dec
mov
in
popf
into
and
cmp
ds
mov
out
or
inc
mov
outsb
pop
in
mov
push
cmp
jbe
cmc
sbb
mov
in
fists
insb
cmp
or
xor
out
and
mov
xchg
pop
in
insb
push
rclb
xchg
mov
int3
imul
xchg
inc
ret
lods
and
pop
add
adc
lea
je
je
pushf
cld
dec
ret
pop
mov
das
lret
cmp
mov
dec
mov
sbb
add
stos
jbe
mov
fistpl
sub
scas
dec
cmp
loopne
add
jle
and
jge
mov
pop
adc
rcl
cmovp
xchg
or
sub
cmp
jnp
dec
loope
icebp
inc
fldenv
jecxz
push
pushf
inc
pop
nop
mov
add
xgetbv
mov
inc
xor
loope
js
fdiv
cmpsl
movsb
mov
lea
push
and
cld
ljmp
cmp
ret
sbb
clc
dec
jmp
pop
mov
pop
test
in
pop
jne
mov
pop
xor
push
pop
ret
cmp
adc
in
jne
push
movsl
mov
push
repnz
push
cmp
push
leave
movsb
xlat
seto
push
pop
das
test
cmp
js
sti
dec
or
outsl
mov
int3
aam
mov
xor
mov
fstl
adc
sub
or
xchg
inc
pop
rcl
sbb
xchg
and
push
pop
fwait
sbb
inc
aaa
enter
pop
jg
adc
mov
xor
mov
mov
sub
shll
dec
dec
pop
dec
mov
cmc
aad
test
sub
push
lsl
ret
out
test
mov
inc
loope
in
jnp
cmpsl
addr16
fidivl
sub
fstp
jno
mov
scas
outsb
ffree
add
inc
adc
xor
mov
inc
add
rorl
and
loopne
dec
pop
les
dec
cmp
dec
lcall
iret
push
ss
adc
add
lret
xorb
adc
addr16
cmc
sub
ljmp
mov
jle
test
call
in
lea
xor
sub
xchg
and
lds
imul
cmpl
sbb
mov
push
jae
add
lock
mov
mov
sbb
push
loopne
lret
pop
push
mov
and
lret
cltd
jbe
popa
loopne
dec
fistps
xchg
mov
pop
dec
or
icebp
test
jo
movb
or
movsl
clc
pop
push
inc
ret
pop
mov
ljmp
cmp
jbe
adc
xchg
test
and
fst
fcmovne
sbb
cmp
test
mov
ror
mov
add
loope
cmc
push
add
aad
js
out
pop
movsb
test
dec
jno
out
sub
jmp
outsl
lock
sahf
mov
outsb
and
inc
mov
inc
popf
sub
es
push
mov
std
filds
fisubs
ds
push
fldcw
rcrb
test
lret
xor
pop
test
shll
clc
cmp
sub
testl
loop
adc
subl
aam
sbbl
push
fsub
icebp
cmp
cmpsl
lret
push
sbb
movsl
nop
ljmp
inc
fidivrl
arpl
or
cmpsb
arpl
cld
xor
pop
les
adc
stos
mov
jns
mov
fildll
or
jge
inc
mov
lds
lods
mov
push
fnsave
or
xchg
loop
xor
jmp
push
pop
jle
jp
in
xor
aas
inc
jcxz
jo
push
addr16
xchg
pop
addb
int3
out
mov
jge
aaa
mov
mov
push
pop
test
aam
or
sbb
cwtl
inc
shll
sbb
push
cmp
loop
out
push
hlt
loope
and
lret
sahf
pop
mov
aaa
cmp
sbbb
pop
das
mov
mov
faddl
leave
mov
mov
lods
leave
loop
mov
cmp
pop
or
fsub
cmp
pop
out
push
imul
xor
test
mov
fbld
arpl
pop
fs
addr16
fildll
pop
push
in
out
mov
adc
pusha
jns
pop
xlat
lret
in
stos
lahf
cs
mov
jmp
push
pop
and
add
xor
in
sub
mov
and
jge
mov
sub
mov
xchg
stc
jecxz
subl
mov
gs
fiaddl
ss
daa
leave
sub
inc
pop
out
adc
adc
xor
ret
sti
lods
or
lret
iret
sub
imul
iret
pusha
push
mov
jnp
inc
sub
cmp
cmc
mov
imul
lods
sub
xor
mov
jl
mov
xlat
or
into
out
or
pop
test
insb
ficoms
mov
jge
aaa
repnz
pop
fcompl
fs
bound
sbb
cs
adc
mov
nopl
cs
ss
xchg
jne
or
xor
sarl
mov
fistps
rclb
push
mov
dec
js
sub
dec
loope
cmp
lcall
stos
cli
push
jb
lret
mov
mov
push
and
iret
inc
xor
cmp
iret
in
ljmp
inc
or
shrb
jns
mov
and
popf
xor
fstl
lret
ret
jne
adc
rolb
sbb
xor
std
fs
mov
push
cmp
cmp
jge
sub
cmp
pop
lods
cmp
cmc
mov
fldcw
or
pop
scas
xchg
aam
scas
ficoml
icebp
inc
pop
mov
jg
icebp
jb
or
push
test
dec
or
xor
test
xchg
sbb
mov
test
sbb
jmp
push
out
enter
push
into
btr
jecxz
cmp
int3
sbb
jo
imul
incl
fwait
das
add
sub
jnp
enter
mov
fxam
ja
ss
xor
dec
aas
mov
mov
insl
jmp
popf
in
into
subsd
loop
adc
mov
mov
das
insb
orl
cltd
mov
jb
shlb
jno
add
fisubrl
push
outsl
loopne
mov
pop
xchg
xchg
scas
insb
sub
jle
sub
pop
mul
insl
mov
in
add
mulb
mov
xchg
inc
sub
cmpsl
pop
mov
sbb
push
jns
dec
pop
and
les
rol
mov
in
xor
cli
xchg
mov
jecxz
int3
dec
sbb
jbe
xchg
push
inc
push
cld
cmp
lods
addb
jge
aaa
mov
rep
mov
lcall
je
jcxz
jg
xchg
mov
stc
sbb
and
push
xor
cmp
fstpl
aas
dec
mov
ljmp
pop
cmpl
ret
movsb
insb
cmp
xchg
jmp
ss
cltd
out
sub
popa
mov
sub
push
popf
lret
ffreep
sarb
jo
imul
xchg
pop
stos
add
dec
push
pop
xchg
jbe
xchg
xor
imull
clc
aad
jecxz
push
push
frstor
mov
rcr
push
inc
pop
xor
in
pmaxsw
stos
push
inc
sti
shrl
andl
les
jl
dec
mov
punpckhwd
iret
ret
mov
inc
cs
aam
mov
movsb
bound
ss
push
sarb
je
mov
cmovo
out
or
jbe
arpl
push
mov
fstl
fdivrl
mov
enter
out
dec
adc
into
xor
dec
arpl
pop
mov
and
stos
and
int3
mov
sub
mov
mov
add
jecxz
cli
add
insl
stos
cmp
adc
adc
cltd
je
mov
dec
repz
out
xchg
push
int3
mov
push
inc
jl
inc
cmp
mov
xor
repz
or
inc
and
std
repnz
mov
dec
loop
add
cltd
or
xchg
xchg
xchg
mov
push
jo
mov
outsb
testb
inc
pushf
jp
add
idivl
push
mov
inc
mov
cwtl
xchg
push
roll
lock
push
negb
add
and
loopne
pushf
cmp
test
fisttpll
jg
movsb
ljmp
jp
push
repnz
ljmp
arpl
push
lods
dec
inc
std
popf
lods
push
cmovno
stc
std
pop
xchg
fwait
arpl
sarl
and
adc
or
inc
adc
out
in
inc
aad
data16
les
pop
orl
std
out
lret
aad
add
dec
mov
ds
xor
nop
incl
cli
leave
lahf
cmpsl
xchg
and
pop
cltd
ja
push
lds
xchg
int
pop
pop
push
fildl
push
mov
push
jo
mov
stos
es
and
cmpsl
je
add
push
inc
xchg
xchg
icebp
lock
in
xlat
pop
fsin
sbb
lods
loop
or
loope
loopne
adc
les
rorb
test
lods
in
pop
and
js
and
pop
pop
dec
or
int
fnstcw
lods
add
xchg
stos
adc
pop
stos
pop
and
dec
dec
mov
imul
xchg
cmp
out
mov
fwait
ljmp
popf
clc
test
das
cmc
test
sahf
lahf
imul
cmp
dec
incb
loope
jl
icebp
cli
adc
inc
push
call
or
sub
enter
ljmp
bound
icebp
inc
dec
adc
aaa
in
out
dec
cmp
fstl
into
test
inc
mov
scas
jnp
pslld
adc
push
fistps
jno
push
idiv
repnz
daa
dec
cmpsb
stos
cmp
add
push
and
js
lods
push
or
cwtl
jo
xchg
outsl
sbb
pop
dec
jl
and
sbb
xchg
mov
orb
jns
test
or
scas
sbb
lods
and
push
lret
sub
loope
dec
lret
cltd
arpl
mov
and
jns
scas
fscale
cmp
pop
sbb
or
mov
pop
lret
mov
adc
sub
es
fidivrs
mov
int
aad
xor
dec
cmp
push
fcomi
mov
adc
in
mov
mov
stc
xchg
pop
push
hlt
jnp
fdiv
jecxz
insl
les
dec
cmp
repz
push
mov
fucomip
pop
popf
ljmp
daa
stos
adc
out
ds
sbb
ret
and
jl
lds
icebp
pop
mov
loop
rcll
sbb
std
nop
out
xchg
test
dec
rorb
jp
push
inc
and
test
imull
sbb
inc
cmp
es
adc
shrb
insl
cmp
gs
leave
leave
lock
sahf
popl
test
data16
add
dec
inc
mov
mov
mov
repnz
mov
push
pop
pop
mov
loope
arpl
dec
inc
pop
mov
add
ret
cmc
sbb
ror
pop
jl
adc
xlat
mov
sub
or
mov
addr16
xchg
mov
mov
aas
aaa
mov
xchg
scas
and
mov
sarl
es
jne
push
fcmovne
cmp
add
push
cli
jno
mov
inc
cli
xchg
das
lret
mov
shrl
arpl
inc
test
push
xor
cmp
std
add
into
pop
add
push
cmpsl
pop
ja
xchg
dec
fmul
or
push
mov
jns
mov
dec
fwait
arpl
cli
sub
pop
sbb
mov
jae
sbb
xor
mov
sbb
dec
xchg
pop
jle
ss
jbe
jns
dec
mov
mov
sahf
xlat
cmp
aam
push
pop
enter
cmpb
dec
jno
cmpsb
add
add
mov
push
inc
repnz
ss
mov
enter
adc
mov
daa
cmpsb
mov
sbb
int
jne
testl
jnp
lcall
xor
inc
rcrb
push
shrb
add
add
bnd
xchg
add
imul
mov
ret
mov
pusha
cmpsb
pop
pop
jnp
rorl
cmp
addb
out
dec
popa
jl
call
imul
xchg
loopne
data16
adc
xor
gs
stc
jp
into
and
frstor
xchg
mov
insb
aas
rcrl
jmp
outsl
mov
fisttps
sub
xchg
test
xchg
jge
mov
push
out
sub
mov
add
push
sahf
cmc
and
add
int3
addr16
bound
xchg
into
pushf
aas
mov
dec
jbe
shll
loopne
fistpl
mov
mov
dec
jmp
mov
cmpsl
out
mov
in
jl
lods
jmp
idivb
cs
call
aad
das
aam
fcmovb
and
mov
jecxz
mov
inc
cltd
jbe
sbb
mov
xchg
pop
sahf
repz
add
repz
pushf
cmpsl
adc
repz
inc
arpl
xchg
mov
lret
cld
inc
xchg
add
or
or
sub
mov
mov
jle
push
cmp
mov
xor
sub
enter
cmp
mov
mov
jl
jle
push
ds
inc
jp
adc
mov
rcr
and
sbb
xlat
bound
xchg
mov
fdiv
in
push
pop
adc
ds
les
icebp
bnd
dec
push
data16
divl
mov
mov
inc
sbb
mov
sub
test
sub
roll
pop
and
das
add
lds
ret
fimuls
lock
jmp
xor
xor
or
fsubrs
or
jo
fildl
pop
sti
xor
scas
adc
ret
push
ds
xchg
aaa
flds
jbe
adc
out
mov
pusha
jl
aaa
push
dec
add
inc
fbld
and
loope
xor
mov
jae
pusha
dec
push
mov
jae
stc
inc
push
nop
adc
inc
jbe
xor
inc
cmpsl
test
push
fprem1
add
sub
test
sub
mov
arpl
xchg
daa
icebp
je
lret
fstl
sub
in
call
sbb
mov
dec
nop
and
enter
icebp
jmp
sbb
es
arpl
dec
adc
jmp
sti
pop
cmp
loope
add
insb
mov
les
jb
scas
cltd
and
cmp
cwtl
sahf
vcvtsi2sd
in
inc
mov
int3
sbb
push
dec
sbb
pushf
cs
or
sub
sbb
mov
clc
sbb
stos
mov
repnz
cwtl
dec
insb
adc
add
mov
dec
sub
push
fdivl
cltd
mov
push
outsb
cmp
cmp
sub
dec
cmp
adc
inc
test
fsubrs
push
cmp
movsl
pop
xlat
inc
mov
cmp
mov
mov
push
nop
mov
jge
out
int
jmp
ret
fsub
or
push
jo,pn
adc
adc
insb
out
dec
jle
adcl
xor
pop
in
push
xchg
add
jo
into
ret
mov
idivl
daa
push
xchg
mov
loop
cmp
or
popf
cmp
ficomps
push
mov
repnz
push
enter
mov
add
add
push
iret
push
test
adc
rorb
aas
pop
adc
mov
fdivp
int
and
inc
xchg
mov
gs
mov
test
rcl
rol
xor
daa
xchg
dec
ror
test
push
xor
mov
movsb
in
cmp
mov
fstpl
pop
push
add
adc
test
cli
lea
add
xor
or
pop
adc
sub
jae
scas
fiaddl
mov
leave
hlt
int3
shll
mov
insl
shl
popf
xchg
and
pop
sub
mov
aad
push
popa
scas
push
mov
fwait
int3
dec
push
jge
dec
roll
sbb
push
call
cmp
mov
enter
cmpsl
popf
jne
mov
loop
or
loopne
in
jne
push
sti
pushf
in
jno
aam
int3
sahf
in
pop
sbb
xor
loop
xchg
insb
cmp
ret
push
sbb
xorl
add
loopne
xchg
sbb
cmp
jne
and
push
mov
add
mov
cmp
inc
push
fst
pop
xchg
lret
dec
cli
pop
adc
mov
xchg
lds
push
inc
inc
fs
cmp
rorb
arpl
add
push
aam
outsl
loop
xchg
shll
add
std
cmpb
sbb
inc
adc
mov
mov
lods
mov
stos
lods
rcl
dec
dec
sbb
cli
out
adc
not
daa
aaa
hlt
cmpsb
sub
jp
sub
lds
out
test
fmull
cld
jo
in
iret
push
lods
mov
pop
adc
pop
or
dec
insb
adc
push
inc
pop
add
sub
cmp
adc
adc
jnp
dec
mov
xchg
rcl
mov
gs
jl
pop
dec
packuswb
sbb
lahf
ret
test
sbb
sbb
mov
subb
out
mov
xor
push
xchg
push
nop
push
mov
dec
add
cmp
cltd
mov
imul
loopne
int
dec
mov
mov
mov
and
or
inc
dec
and
or
test
call
les
xor
ss
in
adc
clc
mov
pop
xchg
push
mov
pop
cmp
filds
fbstp
mov
and
std
lcall
ds
jno
in
mov
std
mov
hlt
mov
pop
lods
je
sbb
ljmp
adc
sub
dec
mov
push
mov
mov
mov
add
dec
inc
xchg
aaa
adc
cmpsl
jne
adc
int3
xchg
mov
jo
das
sub
ljmp
in
nop
sbb
in
movl
sub
mov
fstl
cltd
mov
xchg
lods
cmp
mov
lcall
test
mov
dec
mov
mov
into
jns
cmp
jp
movsl
adc
loopne
out
sbb
cmpsb
outsb
jecxz
and
jmp
shlb
cmpsl
popf
push
jb
jmp
adc
rorl
mov
in
stc
adc
fbstp
add
and
push
push
imul
ss
lret
dec
fcmovu
jle
inc
mov
mov
sub
mov
bound
in
jo
dec
imul
jb
mov
jge
adc
mov
inc
jle
xchg
aam
sbb
rcl
xchg
xor
jne
xchg
subl
dec
into
or
mov
jmp
and
or
mov
mov
sub
xchg
jl
push
push
mov
je
push
sbb
or
test
mov
mov
insl
mov
cli
mov
fbld
sub
xor
push
mov
dec
nop
sbb
in
cli
aas
scas
insl
lcall
lret
loope
sar
mov
and
js
movsl
imul
insw
adc
push
fistps
xchg
nop
faddp
fwait
sti
cmpsl
inc
arpl
fs
addb
pop
sbb
mov
dec
dec
in
shl
mov
ror
mov
push
inc
testl
rclb
pop
or
mov
stos
popf
notl
enter
inc
insl
out
mov
sti
cli
cmc
push
lds
mov
xchg
xor
xor
mov
sti
shlb
test
outsb
cmpsb
push
inc
or
inc
jnp
dec
cmpl
test
sub
hlt
mov
adc
mov
dec
loopne
inc
adc
dec
push
add
fistl
loop
and
imul
xorl
icebp
jo
add
jo
xor
sahf
cmpsl
rorl
pop
test
sbb
sub
jle
std
pop
inc
lahf
pop
jae
jno
sub
popf
test
xchg
mov
inc
xchg
in
pop
lahf
xchg
mov
mov
mov
add
inc
add
xchg
cmpsb
adc
add
faddl
dec
pop
lods
xchg
clc
bound
aas
adc
mov
jb
push
and
lahf
test
adc
or
add
out
sahf
inc
cltd
aaa
shll
pop
loope
push
loop
inc
pop
adc
xchg
and
popa
daa
in
sti
xor
adc
dec
lods
inc
cmp
pop
or
fimuls
push
adc
or
cmp
sub
xchg
inc
mov
push
and
jo
scas
sbb
ja
xlat
jl
xor
out
bound
sub
push
repnz
push
or
or
out
sub
mov
insl
jg
and
cmp
mov
lea
xchg
popa
mov
pushf
or
push
ljmp
pop
shll
js
gs
call
adc
lcall
out
lods
pop
int
shlb
jb
aad
in
inc
cld
cmp
jae
imul
push
les
nop
push
xor
lret
or
stos
xor
sub
xchg
jle
mov
mov
mov
pop
test
pop
insl
imul
and
or
imul
mov
sub
and
or
mov
pop
ret
mov
cli
push
mov
fcoms
subl
fstpt
pop
test
pop
icebp
outsb
loope
addr16
xchg
mov
jp
js
mov
mov
std
jp
sbb
inc
je
pop
cltd
les
lock
aaa
cs
testl
and
inc
mov
jecxz
xchg
sub
mov
dec
lock
loop
adc
cmp
cmp
pop
cmpl
stos
pushf
lds
push
push
pop
aaa
aaa
lea
inc
incb
jmp
push
std
cmp
daa
iret
add
imul
sarb
shrl
sbb
mov
mov
add
jecxz
rcr
sbb
insb
adc
mov
ljmp
cmp
clc
mov
imul
mov
cltd
scas
cld
cmpsb
sbb
lahf
aas
outsb
fcmovne
jmp
push
andb
clc
mov
or
sti
mov
rcll
fistl
fwait
mov
mov
loopne
andl
sub
shll
add
xchg
xor
mov
push
out
add
xor
xchg
punpckhwd
test
jl
gs
sbb
lret
clc
pop
in
fndisi(8087
dec
adc
sub
cmpsb
inc
add
push
cmp
sub
daa
jns
or
sub
in
int3
sbb
mov
push
sbb
stos
mov
andl
mov
lahf
and
dec
in
xchg
out
dec
mov
nop
fmull
shlb
lcall
test
sub
test
mov
jl
sub
pop
mov
stos
pop
push
and
movsl
cwtl
pop
inc
or
jb
sbb
fs
jb
or
sbbb
neg
loop
mov
repz
push
test
andl
in
push
or
in
lods
xchg
enter
rcrl
daa
dec
in
out
cmpsl
outsl
sub
lcall
add
fstl
ja
fnsave
test
movsl
push
xlat
xor
jp
outsb
push
mov
sbbl
add
sbb
sub
sbb
ficoml
pop
scas
cwtl
jnp
es
enter
pop
jnp
dec
int3
mov
inc
fldl
or
sub
xchg
jg
adc
ds
jo
mov
mov
pop
cmp
push
xor
in
mov
repnz
fmull
sbbl
in
addb
mov
ss
lcall
push
jne
sub
andl
inc
dec
pop
nop
mov
cmp
sub
adc
pop
dec
sub
testb
data16
addr16
fsts
sub
setae
mov
enter
mov
sub
mov
loopne
sub
enter
popf
insb
and
adc
repnz
jns
repz
push
lds
jle
enter
mov
mov
imul
loop
lds
sti
cmp
pushf
jne
sub
dec
aad
add
lret
je
lcall
dec
outsl
int
push
push
cld
or
push
nop
scas
lea
sub
daa
js
outsl
xchg
mov
jo
loop
in
or
and
into
int
jno
mov
test
cmp
sbb
lret
mov
xor
xorl
sub
movb
ljmp
scas
popf
ljmp
cmpsb
popf
pop
lret
cwtl
mov
in
push
fwait
pop
mov
lret
dec
imul
pop
mov
sbb
jp
addl
fwait
add
aad
add
xor
add
scas
mov
fbld
mov
xchg
ljmp
insl
and
pop
xchg
xor
in
cmp
inc
jp
mov
sub
sbb
movsl
xchg
jno
ja
stos
push
shrb
cld
jmp
xchg
pop
inc
stc
stos
jne
loop
pop
add
sub
addb
mov
scas
sub
or
jge
adc
or
xor
je
push
push
pop
mov
cltd
addr16
dec
sub
mov
in
dec
fsubrl
leave
fiaddl
ds
jecxz
mov
pop
fiadds
or
mov
mov
adc
leave
cmp
test
testl
addr16
mov
inc
jecxz
dec
out
pop
ljmp
sub
les
xor
ficomps
leave
imul
add
xor
movsb
xor
or
mov
ret
out
jecxz
adc
dec
mov
xchg
lods
hlt
mov
jo
movsl
pop
call
arpl
fldl
aad
mov
mov
repz
jne
jmp
sahf
dec
aam
or
lods
jg
shll
xchg
push
fidivrl
dec
stos
jo
daa
rep
inc
aam
rep
stos
jmp
adc
and
test
sbb
inc
shl
shlb
repz
clc
xor
stc
cmp
inc
subb
inc
leave
or
pop
mov
jle
dec
mov
xchg
movsl
mov
lea
sahf
stos
in
jne
fldenv
lea
sbb
rolb
xchg
jmp
into
test
mov
in
test
aam
pop
mov
xchg
icebp
fwait
adc
idivb
mov
aam
test
xchg
and
les
mov
sbb
push
push
std
mov
mov
xchg
push
mov
mov
sub
xor
mov
push
outsl
inc
in
push
inc
dec
push
ss
shl
xor
js
sbb
push
adc
es
jmp
and
push
das
roll
fsubl
cmpsl
jns
test
cwtl
mov
pop
mov
scas
jae
jno
sub
xchg
out
or
daa
add
cmp
cmp
loop
ret
or
lock
lret
or
data16
push
sub
jmp
or
or
push
repz
and
daa
adc
decl
jecxz
sbb
mov
mov
inc
fwait
shrb
arpl
mov
mov
and
int3
in
int
dec
inc
add
xor
bound
add
movsb
xor
sbb
pop
pop
mov
jns
cmc
mov
jbe
sahf
push
das
lods
cwtl
sbb
mov
push
push
daa
cmp
popf
cmp
rcl
mov
mov
mov
add
push
pop
pusha
movsl
add
xchg
lret
push
adcb
jle
aad
mov
jno
loopne
push
jb
ljmp
lds
mov
sbb
repz
mov
cmp
mov
sub
jb
adc
jno
mov
and
or
or
sub
sub
jge
dec
stos
fs
mov
push
sub
jbe
inc
call
ret
cltd
fwait
sbb
pop
pop
std
fstpt
xchg
and
in
pop
and
push
pop
daa
aad
daa
in
mov
jle
icebp
pop
call
or
jo
mov
out
lods
cmpsl
call
jae
and
cwtl
or
push
or
mov
pusha
add
jns
xchg
mov
add
test
cli
mov
xchg
hlt
sub
push
sahf
mov
mov
iret
and
mov
push
sub
sarb
mov
mov
scas
and
push
mov
and
shl
cmc
jp
fwait
popf
or
dec
adc
fadd
lds
mov
popf
push
or
aad
and
mov
sbb
loope
sti
out
mov
push
push
push
mov
jo
lret
mov
jl
or
pop
std
mov
dec
jb
ret
sub
fmul
adc
sbb
sub
das
mov
sub
xor
mov
ljmp
in
hlt
test
ss
pop
xor
arpl
add
cmp
enter
arpl
out
push
xchg
push
cld
clc
mov
rclb
or
and
sub
jne
push
push
paddq
cmp
lea
inc
and
mov
mov
mov
movsl
cmp
aam
mov
cs
pop
stos
in
push
ss
int
in
int
push
fidivs
mov
lods
ret
xlat
push
lea
je
je
xchg
or
mov
pop
shr
std
addr16
sbb
xchg
psubsw
pushf
xchg
cmp
incl
mov
inc
inc
fistl
cmp
fnsave
or
lcall
movsb
or
or
mov
bound
sbb
push
in
or
lods
pop
push
test
adc
div
fbld
or
test
sarb
ss
sub
inc
mov
outsb
movsb
and
pusha
mov
fdivrl
jo
int
pop
pop
inc
mov
std
pop
jnp
outsl
xor
mulb
adc
lea
pop
inc
push
in
jb
in
lea
push
sub
sub
out
xor
insl
pop
lods
pop
int3
stc
xlat
arpl
push
dec
jmp
pop
jecxz
push
cmp
retw
ror
outsl
push
cmp
incb
add
cli
arpl
and
dec
lret
lods
shll
dec
stos
push
jno
loop
push
jmp
cmp
mov
xor
scas
pop
pop
mov
ds
int3
sbb
nop
jne
jecxz
push
sub
pop
cs
mov
mov
inc
sub
orb
inc
mov
ja
mov
bound
xchg
insb
fistpl
int3
arpl
cld
cmp
leave
cmp
mov
sbb
pop
dec
aas
shll
sub
mov
clc
rcr
xchg
repz
jp
xchg
aad
aam
push
fisubl
aad
out
xchg
cmpsl
ret
inc
inc
inc
mov
leave
shl
xchg
jno
repnz
andl
dec
shrb
and
fildl
ljmp
hlt
and
outsb
xchg
in
sbb
jg
gs
mov
pop
push
jbe
or
iret
les
std
popa
cmp
pop
ret
add
add
dec
cmp
sbb
push
lods
daa
lahf
sbb
imul
loope
sbb
lods
push
and
sahf
into
cmc
push
mov
dec
add
xor
in
sbb
popf
insl
or
repz
and
int3
add
stc
xchg
mov
xor
jnp
mov
incl
mov
call
mov
into
dec
xor
arpl
lea
fsubr
or
shlb
xor
push
inc
mov
push
mov
fwait
arpl
ss
popf
mov
into
out
fbstp
out
iret
arpl
nop
jo
adc
mov
in
outsl
out
xor
and
xor
pop
dec
jge
cmc
xor
fildl
icebp
add
mov
sub
sbb
js
mov
loopne
mov
push
add
addr16
jge
sub
lds
enter
iret
add
mov
in
rcr
adc
and
push
inc
ret
dec
js
dec
sbbb
dec
push
xchg
mov
dec
scas
jp
xor
movb
push
cmp
inc
adc
add
or
xor
ret
inc
daa
jecxz
mov
in
mov
jbe
scas
enter
sarb
ja
add
xor
pop
ds
mov
lock
pushf
popa
cwtl
gs
inc
pushf
sbb
adc
fmuls
scas
cltd
or
xchg
fstpt
adc
nop
call
insl
negb
lret
xor
imul
xchg
inc
in
loopw
adc
mov
das
pop
aaa
stos
mov
pop
rol
fnstenv
or
pop
or
cmpl
pop
out
ja
sub
add
call
mov
add
es
inc
push
push
sahf
xor
pop
dec
and
sbb
cmpsl
xor
jno
sbb
les
pop
inc
loop
into
sub
int3
xchg
mov
cwtl
faddl
xchg
sbb
add
data16
push
popa
add
cmp
sbb
mov
stc
ja
data16
test
sbb
push
fidivl
pop
out
mov
lock
ss
push
jge
cltd
push
xor
mov
insl
imul
int
dec
xchg
mov
mov
mov
movsb
adc
shl
and
mov
mov
dec
cmpsb
mov
cmp
int
cld
jp
push
jb
mov
test
push
unpckhps
loope
cmp
stc
mov
pop
push
testb
push
int
add
add
flds
sbb
lods
mov
aaa
push
aas
pop
mov
or
push
dec
cwtl
fldenv
jmp
sub
sub
lock
adc
in
call
inc
iret
push
mov
shrl
ret
and
pop
hlt
add
lea
pop
inc
or
lret
push
inc
mov
xchg
sub
mov
sub
fisubs
xchg
jb
inc
jecxz
sub
and
cmp
xor
loope
in
or
sub
push
mov
and
leave
mov
push
jg
daa
adcb
js
stos
cmp
fsubs
jg
sub
ds
xchg
insl
sub
stc
pop
lcall
cwtl
cltd
mov
sub
das
icebp
mov
jbe
icebp
xor
jb
mov
pop
sbb
sbbb
jno
sbb
push
pop
icebp
sbb
test
test
xchg
jae
add
cmp
dec
in
adc
mov
out
mov
push
cwtl
adc
ja,pn
cmp
subl
xor
loope
adcb
stos
ljmp
push
pop
inc
dec
push
inc
xlat
add
in
daa
adc
pop
cwtl
adc
rcl
push
jae
movsb
lahf
aam
pop
or
adcl
call
mov
outsl
jge
mov
xchg
push
aas
clc
rorl
jl
xchg
scas
addl
fs
push
mov
sub
repz
fidivrs
rcrl
mov
popa
test
pop
insb
insl
fstp
es
jae
push
ljmp
push
ret
jl
f2xm1
inc
pop
pop
aam
push
aas
lock
scas
repnz
inc
arpl
mov
orb
inc
mov
mov
mov
cmp
fstpl
jmp
mov
out
dec
mov
push
inc
mov
push
xchg
mov
mov
rorl
mov
jmp
shlb
call
popf
cmpsl
dec
mov
push
sbb
mov
push
add
mov
sahf
scas
mov
pop
mov
add
outsl
push
in
in
mov
mov
rcrl
xchg
adc
aaa
cli
aam
or
cmp
and
pop
or
test
or
mov
sbb
add
sbb
loope
icebp
xor
add
fisttps
push
mov
sub
jno
js
cmpsb
xchg
imul
cmp
or
mov
addr16
or
adc
into
xchg
gs
outsb
lret
or
adc
out
leave
sahf
lret
dec
es
add
xor
divl
fdivs
xchg
push
cmp
outsb
in
daa
xor
pop
mov
pop
inc
push
cld
pop
fidivs
popf
mov
or
arpl
sbb
adc
insb
jge
fcompl
xor
lds
clc
cs
pusha
and
xor
inc
xchg
sti
jne
fcoms
inc
mov
mov
sbb
and
jae
cltd
add
lods
push
orb
adc
fldcw
ljmp
sub
xchg
notb
jp
xlat
mov
inc
repnz
out
cmp
mov
cmc
test
scas
out
and
mov
cmp
pop
dec
push
adc
mov
push
xor
jmp
mov
pop
in
cmpsb
les
testl
mov
push
hlt
inc
push
add
lret
sub
stos
js
and
pop
sub
je
mov
ja
inc
rclb
xchg
bswap
pusha
dec
push
lea
fstl
orl
xchg
ds
jge
xlat
icebp
pop
sub
fcmovnb
mov
outsl
sbb
iret
fsqrt
fdivrl
lahf
gs
std
and
pop
sub
or
pushf
lcall
mov
jae
pop
sarb
jo
xor
fcompl
mov
xchg
push
jl
out
inc
cmpsl
aad
adc
ficoml
je
inc
cmp
inc
jg
mov
mov
pop
ds
sahf
xchg
pop
xorb
add
sbb
fstpl
mov
or
push
jl
dec
lods
xor
xchg
mov
xchg
sarl
or
dec
aaa
push
push
push
push
pop
sbb
cltd
and
dec
mov
in
dec
xchg
sbb
test
xchg
fiadds
aas
mov
pop
sbb
js
or
test
repz
js
fimull
and
mul
mov
loope
cmp
pop
ja
push
pop
fbld
mov
in
fs
repnz
xor
xor
aas
rolb
push
lock
out
cltd
insl
sbb
icebp
cmp
cmp
and
int
insl
test
sub
aad
frstor
sub
rcr
fsubs
jp
cmc
pusha
sbb
leave
push
aam
nop
gs
mov
inc
out
fnsave
lahf
push
lahf
mov
loop
pop
adc
test
cltd
arpl
push
push
xor
jns
jmp
insl
lea
repz
pop
loope,pn
leave
mov
jmp
mov
push
xor
mov
inc
cmp
pop
decb
lock
inc
dec
dec
mov
fldl
outsb
cmp
lcall
pusha
cwtl
and
out
push
inc
es
xchg
cmp
out
repnz
imul
and
add
inc
mov
nop
sbb
mov
jne
out
mov
mov
xor
cmp
cmc
push
movl
jecxz
pop
mov
adc
lea
hlt
pop
mov
in
inc
jbe
rorl
xlat
scas
lods
add
and
or
jns
mov
aam
aas
push
inc
daa
jns
loopne
data16
stos
sub
xor
xchg
je
mov
xor
rorb
inc
pop
pop
int
stc
sbb
mov
inc
xor
xlat
fwait
mov
in
out
mov
adc
out
pop
testb
and
mov
inc
aam
inc
adc
push
mov
push
cmp
sub
loop
loopne
mov
cmpsb
ret
push
pop
jge
jbe
xor
fstl
sub
pop
jp
add
jle
je
roll
inc
mov
jo
fisttps
ret
cmpsl
xchg
ret
addl
in
jbe
push
sbb
mov
stc
dec
adc
ljmp
sbb
cwtl
jae
cmp
xchg
and
add
roll
test
jg
cmp
mov
ss
mov
cld
in
scas
pop
cmp
mov
sub
ljmp
mov
and
sub
pop
adc
mov
enter
in
aaa
rclb
inc
jp
ret
faddl
mov
or
or
imul
test
mov
push
ljmp
cld
popa
xor
mov
fiaddl
add
mov
imul
xlat
lock
daa
and
or
pop
stos
stc
les
xor
enter
jl
push
or
pop
lahf
fistl
mov
jb
lret
sahf
xchg
jge
mov
scas
jle
insb
sar
jecxz
xchg
popf
jno
mov
or
shrb
ljmp
int
jmp
xlat
sbb
fdivrp
jns
or
out
xchg
jnp
aam
or
lods
nop
movsb
dec
push
sub
push
popa
loop
shll
mov
dec
stos
fdivr
divl
call
std
lods
push
idivb
fsubl
gs
shll
or
xor
jp
lods
lock
pop
call
or
cmpsb
push
loopne
and
inc
xchg
int3
mov
xchg
and
sahf
or
xchg
imul
xchg
mov
shrl
outsl
insb
pop
push
pop
xchg
aam
bound
movsl
shlb
mull
pusha
sbb
cmp
push
fiaddl
mov
cmp
cmp
sti
mov
inc
xor
out
sti
xorl
fs
in
das
imul
dec
ror
mov
movsl
out
dec
push
les
and
pop
push
mov
es
mov
neg
cmp
cwtl
mov
inc
enter
push
xor
insb
insb
shrl
mov
jbe
mov
hlt
sti
aad
shll
stos
jno
popa
push
ljmp
cmpsl
ret
and
shlb
jnp
mov
ficomps
cmp
rcr
dec
lret
inc
loopne
rclb
mov
adc
lds
cmc
and
jp
jl
mov
popa
lods
cli
popw
cmp
aad
xchg
popf
das
xchg
shl
loopne
sub
movsb
mov
test
loopne
cmpsl
in
int
testb
lods
dec
cmp
dec
nop
fucomi
sbb
cmp
fiadds
adc
insb
jecxz
aaa
xor
jbe
xchg
cmp
insl
out
inc
repz
pop
gs
nop
imul
inc
jmp
and
je
inc
inc
sub
test
sub
sub
out
daa
pusha
lods
jns
and
out
dec
fcomps
mov
or
ret
and
xor
arpl
mov
push
push
dec
ja
jbe
adc
daa
mov
stos
mov
push
push
ja
push
and
cmp
fldl
test
fsubr
inc
cmp
jbe
cmpsb
push
inc
sub
xor
cli
fcoml
dec
cwtl
movsb
xchg
ss
cmp
xchg
add
xchg
sub
lret
cmp
xchg
add
mov
or
mov
cmp
test
add
lock
gs
lret
cs
pop
sbb
cmc
sbb
add
imul
mov
gs
decb
sub
inc
jle
sbb
filds
xchg
inc
leave
cmp
xor
orb
inc
mov
mov
jbe
xor
ljmp
mov
push
nop
cli
sbb
push
and
push
cmp
je
xchg
xchg
mov
xchg
sbb
jb
je
sbb
inc
test
cmpsb
ret
icebp
jno
inc
dec
pop
fimuls
ljmp
pop
mov
je
mov
mov
fidivrs
in
push
sbb
lea
fistpll
push
push
mov
addr16
lahf
inc
mov
faddl
sahf
dec
ficoml
or
push
psllq
fdivrs
pop
xchg
cmp
mov
decb
aam
adc
jmp
mov
sar
imul
nop
lds
das
add
fs
cmp
int3
ret
in
fdivl
cwtl
sbb
dec
lahf
lds
adc
int3
roll
sub
cmp
insl
mov
adc
and
inc
inc
pop
jl
cmp
pop
int3
rol
pop
dec
addb
stc
out
xor
ffreep
sub
dec
xchg
lcall
xchg
call
pop
xchg
lret
rolb
adc
call
and
inc
dec
in
mov
popf
xor
and
push
leave
adc
cmp
jns
inc
or
fs
add
xchg
sub
imul
scas
or
test
pushf
mov
in
mov
push
jae
enter
clc
sub
jge,pn
push
adc
rcrl
in
mov
cmpsb
clc
jns
out
or
lock
aas
ret
cwtl
mov
cmp
push
mov
cmp
push
push
leave
pop
insb
mov
test
or
push
and
in
push
mov
push
arpl
mov
mov
mov
or
dec
pop
imul
and
clc
sub
rcr
sbb
pop
dec
test
adc
lcall
push
or
sub
pop
xchg
inc
xchg
mov
push
push
test
stc
imul
and
push
push
xor
fisttps
jecxz
xor
hlt
out
int
xlat
mov
icebp
pop
jge
mov
cli
pop
adc
add
sub
lods
push
mov
fcompl
in
subb
push
dec
pop
push
xchg
fisubl
mov
sar
dec
pop
aad
sub
cmp
test
mov
loope
cmpsl
adc
sbb
cmp
leave
adc
shll
mov
jecxz
pop
aas
std
dec
aas
mov
mov
pop
sbb
fimull
nop
in
pop
test
cmpsl
jnp
test
mov
mov
push
push
cmp
pop
jmp
andb
into
out
fildl
mov
add
roll
cmpl
aaa
out
es
mov
das
jno
daa
mov
xchg
int
xor
movsl
les
jp
insb
dec
lret
inc
mov
add
mov
dec
nop
popa
ss
xchg
fsubs
lahf
ljmp
stos
test
in
add
pop
mov
push
ficomps
cmp
fnstsw
xor
loopne
adc
or
pushf
inc
das
adc
out
lods
leave
and
and
mov
and
fwait
push
jmp
movsb
pop
out
add
inc
adc
dec
mov
push
mov
add
lahf
xlat
xor
imul
pushl
mov
sbb
daa
das
addl
shll
inc
stos
or
test
sbb
fidivs
lock
out
cltd
jecxz
outsb
fldcw
call
pop
cmc
es
movsb
dec
dec
push
dec
mov
inc
sub
in
dec
lahf
ret
shrb
sub
adc
rolb
xchg
and
inc
mov
sub
movsb
or
dec
add
ja
mov
ret
pop
sub
mov
cld
add
or
push
sbb
imul
fists
mov
je
movsl
sarl
jge
nop
and
cmp
das
jl
pusha
subb
xor
xadd
pop
cmp
sti
mov
dec
inc
dec
adc
loopne
inc
mov
or
jne
test
ds
cmp
jae
sub
out
jecxz
dec
sahf
je
not
popw
xor
cmc
inc
sub
lcall
les
mov
faddl
push
fdivrl
mov
faddl
mov
xor
add
nop
out
stc
dec
dec
stos
negb
or
je
sub
out
fwait
mov
and
lds
add
jg
sbb
test
or
sbb
in
mov
mov
insb
cmp
dec
push
xor
mov
repnz
cmp
mov
dec
pop
aaa
mov
pop
lock
insl
int3
popa
das
jecxz
testl
adc
inc
xchg
rolb
inc
es
lock
jne
mov
xchg
sub
ds
jp
xor
test
shrb
pop
adc
mov
fwait
iret
fs
pop
xchg
or
fildll
ss
fdivrp
cltd
pop
pop
xor
and
mov
fistps
add
fbld
ret
sub
push
jno
jge
adc
ret
pop
push
xchg
or
push
fiaddl
xor
lods
add
adc
adc
gs
xor
sbb
fs
ds
aaa
pop
in
aas
pusha
sbb
pop
cmp
xchg
into
dec
push
dec
pop
lock
mov
pop
dec
inc
out
cmp
pop
jne
sbbb
cmp
xor
mov
in
sub
jge
push
rcl
fs
mov
scas
dec
xchg
jo
das
mov
insl
push
scas
or
pop
insl
shr
filds
pop
push
mov
and
pop
mov
sbb
xchg
div
call
std
or
loop
xchg
xchg
mov
xor
aaa
lods
jo
repnz
sbb
jge
mov
and
xchg
pop
lret
cmp
xchg
and
sub
inc
push
xorl
stos
arpl
aas
inc
faddl
in
lods
gs
sbb
fisubs
pop
int3
rolb
aad
mov
mov
mov
adc
cmpsb
mov
das
cli
fidivrs
je
stos
or
mov
jb
inc
jp
sbb
rcrb
lcall
pop
daa
pop
out
sbb
fwait
gs
lret
in
mov
push
test
icebp
sbb
enter
sbb
push
mov
test
cmpsl
jae
inc
cmpsb
cmp
pop
xor
cs
mov
xchg
repz
push
lret
mov
loope
pop
push
test
pop
mov
pop
pushl
sub
scas
xchg
adc
popa
ljmp
frstor
jge
xchg
xchg
sub
pop
out
xchg
sar
pop
jno
aaa
outsl
and
lods
xchg
cmp
xchg
lea
sub
pop
jne
daa
cmp
out
in
test
rcll
cltd
xchg
mov
iret
inc
fwait
cmp
ret
adc
mov
cmpsl
fisttpll
xchg
jnp
cmp
movsb
sub
adc
mov
and
andb
jns
gs
pop
lret
mov
xor
imul
sub
pop
xchg
gs
jmp
jge
fwait
hlt
pop
mov
pop
lahf
adcb
push
mov
lods
and
popa
popa
push
jae
mov
imull
mov
lahf
xchg
insl
rcll
adc
cmp
popf
in
bound
pop
push
pop
test
push
daa
stc
adc
push
cmpsb
aad
pusha
fdivs
loope
dec
stos
and
loopne
stos
dec
adc
sbb
push
call
xor
adc
xor
hlt
lret
jns
dec
mov
out
leave
ja
or
int
pop
cmp
rclb
jno
xorb
add
aam
lcall
loope
sbb
add
fsubr
sahf
mov
jge
lret
ss
ret
push
test
adc
xor
dec
lea
ljmp
mull
into
push
pop
lret
or
xchg
js
or
xchg
nop
jnp
fdivr
out
call
cmc
shl
jg
mov
mov
fdivrs
rol
sbb
js
xchg
mov
dec
imul
repz
call
inc
ss
mov
inc
add
mov
jmp
sti
or
fs
repnz
add
cmp
inc
dec
popf
and
ficomps
jno
jle
mov
enter
mov
add
mov
sbbb
xchg
fisubrl
pop
add
rcrb
dec
inc
xchg
sbb
lods
lret
dec
enter
add
sahf
xor
xor
cs
movsl
mov
loop
test
lea
in
std
hlt
sbb
fdivs
js
jbe
in
es
adc
fsubl
scas
punpckhwd
jo
jns
sbb
inc
lock
aad
popa
inc
ja
jmp
xor
pop
jne
gs
mov
mov
data16
xchg
lds
into
jecxz
mov
addb
aad
out
es
xor
cmp
dec
call
add
ret
in
ljmp
sbb
aas
and
dec
je
mov
pop
dec
push
cmp
sbb
repnz
inc
int
test
xchg
rcr
mov
cmp
mov
mov
fsubrl
pop
push
mov
and
xor
cmp
add
jmp
cmpsb
mov
shrl
xor
popf
dec
sub
shrl
cmpsb
mov
in
pop
dec
lods
or
pop
enter
xorl
jne
mulb
adc
mov
lcall
xchg
pop
pop
pop
cmp
jno
xor
and
or
stc
jge
in
jle
push
or
and
lock
lcallw
stos
xchg
stos
popa
xchg
dec
mov
push
leave
mov
jno
add
adc
scas
push
or
inc
mov
mov
adc
fsubr
je
hlt
movsb
outsl
insl
loop
daa
stc
sub
cwtl
cmp
sbb
lret
stc
mov
lahf
adc
push
xchg
sub
push
sahf
iret
fadd
imul
cli
push
xchg
fdivrp
rclb
pop
or
cs
imulb
fcoms
lret
add
in
aam
stos
jp
imul
push
inc
inc
mov
stos
nop
lods
pop
int3
sbb
cli
icebp
aaa
enter
add
hlt
stos
ret
and
sarb
int
xchg
hlt
inc
negl
or
sahf
pop
and
pop
jne
mov
mov
sbb
jbe
cmpsl
xor
aam
out
js
repnz
mov
pop
clc
lods
dec
push
lock
loopne
and
out
jl
mov
mov
in
stc
in
call
cmp
and
mov
mov
popa
lret
fwait
adc
mov
xchg
daa
das
pushf
jb
mov
xor
dec
test
ja
sbb
pop
xor
push
orl
ficompl
pushf
xor
fldl
push
stos
dec
call
cmp
push
sub
mov
push
or
or
xchg
pop
fnsave
and
imul
jb
jb
icebp
sar
loop
or
lods
cli
loopne
inc
add
mov
lock
and
mov
addr16
fists
lahf
rcrb
jne
sti
and
stos
sub
cmpsb
and
adc
dec
push
jecxz
std
rcl
push
cmc
mov
daa
mov
out
popa
cmp
insb
lods
mov
push
das
and
fs
dec
push
pusha
xchg
pushf
rorl
gs
add
rclb
scas
fadd
in
push
pop
jecxz
cmp
movsl
inc
scas
cmp
or
in
mov
adc
pop
mov
rorl
subb
xlat
fwait
push
sti
je
pusha
mov
js
push
mov
test
test
int3
lcall
das
push
and
dec
popf
mov
adc
pusha
xlat
inc
das
fs
mov
out
ret
pop
pop
jns
ljmp
mov
ds
int
pop
jne
sti
icebp
mov
push
push
xchg
iret
out
push
or
or
lds
inc
push
mov
sub
loopne
pop
pop
lds
jno
sub
cmp
xor
sub
stc
das
pop
ret
mov
data16
imul
add
add
lret
xchg
ljmp
mov
mov
sbb
sbb
xor
pop
pop
push
and
pop
scas
scas
out
pop
jae
ja
dec
xor
jecxz
mov
roll
jle
in
pop
push
mov
push
adc
inc
lock
in
pop
lock
das
cmp
ret
mov
int
xorb
xchg
cltd
inc
dec
pop
lret
pop
xor
jl
or
pop
mov
push
mov
enter
pop
pop
pop
call
push
mov
cmp
das
jbe
ljmp
mov
je
mov
into
stos
inc
outsb
sar
jno
or
sarl
repnz
jl
xchg
jmp
xor
xchg
mov
mov
bound
cmp
jae
cli
ror
addr16
aas
xor
hlt
in
or
and
and
pop
andb
xchg
sub
lods
mov
imul
pop
cmp
jmp
or
push
lret
in
inc
jge
lret
out
xchg
cltd
mov
jnp
jmp
cmc
adc
nop
jp
dec
jbe
pop
and
outsb
gs
cli
ret
aaa
les
rcr
jp
xor
icebp
das
cs
add
into
and
pop
nop
mov
gs
push
addr16
insb
test
stc
js
pop
bound
inc
push
push
lock
subps
pop
xchg
daa
orb
mov
sub
push
cwtl
push
xor
push
push
sbb
push
andb
leave
insl
movsb
cmp
mov
in
cmp
ja
push
ja
ljmp
stos
xchg
push
outsb
nop
jge
mov
stc
mov
sbbb
sub
addl
mov
scas
stos
adc
scas
test
pop
aas
inc
cmp
cmp
loopne
pop
cmpsb
fsubl
in
pop
mov
pop
add
arpl
xchg
mov
jmp
mov
jnp
push
loop
jecxz
movl
cmp
sub
sub
push
add
in
push
mov
push
lcall
insb
jne
or
scas
cmp
sub
mov
push
cli
nop
xchg
arpl
cmpb
sub
push
stos
mov
push
dec
jp
cli
cld
into
outsl
ljmp
pop
cmp
ljmp
cmc
in
jno
sub
pop
not
and
test
mov
mov
pop
gs
ret
cli
mov
or
sub
std
xor
fnstcw
arpl
jnp
je
orl
jle
leave
bound
mov
mov
clc
faddl
call
add
add
fst
in
push
adc
inc
xor
xchg
inc
imul
repnz
jns
insb
jp
js
dec
sub
js
inc
jae
add
or
test
push
into
lcall
popa
jbe
mov
stos
les
mov
inc
shll
push
pop
lahf
les
aaa
mov
clc
pop
push
mov
jge
fsubrl
testl
repz
push
fsub
adc
out
add
repnz
jns
sbb
push
sub
cmp
lds
and
repnz
dec
inc
adc
jle
sub
outsl
jbe
sbb
rolb
nop
outsl
dec
xchg
ss
mov
sahf
jecxz
dec
ds
ljmp
pop
add
or
sahf
loope
rclb
fidivs
testb
mov
ss
jae
mov
mov
jmp
sub
add
test
mov
pop
ljmp
inc
inc
sahf
push
aaa
out
jg
inc
push
gs
xchg
jp
aas
ret
cmpsl
out
mov
cmp
leave
ds
jno
pushf
cmp
sub
cli
test
popf
aaa
mull
jne
inc
mov
pop
loop
int3
jae
and
aam
push
jecxz
jae
int
cmp
xchg
dec
fidivs
lock
fdivr
jno
jmp
push
xor
pop
sbb
push
xchg
dec
jp
jmp
cmp
mov
push
mov
into
jne
pop
into
push
cs
ret
scas
out
js
pusha
insl
mov
sbb
ficompl
adc
jge
ss
xlat
icebp
stos
jg
aam
add
and
imul
pop
mov
test
pop
sub
stos
sub
mov
xchg
and
popf
xlat
stc
mov
addb
fdivrs
repz
aas
mov
andl
insb
cmp
insl
or
sbb
popf
inc
mov
dec
push
int3
cmp
cmp
mov
pop
int3
scas
nop
or
enter
mov
xor
mov
lea
and
jl
daa
mov
int
and
ja
std
ror
xchg
push
cmp
add
out
xor
inc
fwait
xor
das
dec
test
ss
or
fimuls
dec
cmp
incb
jbe
aas
cwtl
pop
repz
jb
ret
movsl
pand
loope
call
cmpsl
jle
mov
dec
mov
fs
inc
jmp
stos
mov
lds
inc
jo
push
push
jnp
pop
lahf
sub
push
das
dec
and
mov
je
jne
sub
dec
and
clc
mov
leave
loop
cmpsl
aad
into
jl
enter
sub
push
lahf
rol
fwait
scas
outsl
push
sub
push
xor
mov
xchg
sub
dec
rol
cmpsb
test
dec
daa
lret
pop
aad
push
lahf
dec
push
int
cmp
mov
push
sub
mov
cwtl
xchg
movsb
js
dec
xor
cs
inc
mov
jae
jo
lahf
dec
adc
in
or
test
je
jnp
filds
fistpll
mov
push
sub
xor
cmpsl
out
sbb
xchg
int
adc
dec
inc
push
push
mov
and
ja
cltd
mov
imul
mulb
xor
sbbl
mov
jne
push
xchg
mov
sti
dec
popf
ficompl
inc
add
inc
sahf
shll
push
lods
sbb
xchg
xchg
dec
ds
cmpsl
or
mov
shrl
scas
in
and
sub
in
jns
push
hlt
push
pop
test
mov
repnz
dec
sbb
and
nop
inc
loop
in
inc
fwait
daa
pop
js
sub
mov
jae
fisubl
inc
dec
mov
sbb
lods
lcall
mov
into
test
lcall
cmp
mov
fsts
jae
test
mov
push
dec
lcall
mov
rorl
dec
sub
sahf
ja
and
pop
inc
sbb
sahf
gs
ds
mov
mov
stos
mov
mov
mov
inc
mov
pop
fwait
cmpsb
cli
popa
pop
rcrl
sbb
loopne
iret
pop
iret
mov
xor
out
adc
adc
jp
inc
xlat
sbb
ds
movsl
fidivrl
mov
xchg
sahf
mov
daa
ds
mov
add
insb
bound
dec
sahf
jmp
xchg
orb
adcb
cwtl
push
fs
dec
enter
dec
push
into
int
ds
sarb
lret
pusha
xchg
xor
ja
outsb
cmp
shrl
pop
add
hlt
idivb
mov
ret
sbb
or
or
mov
push
mov
push
sub
jnp
inc
jp
lcall
stos
adc
call
sbb
mov
fistpl
loopne
jg
fwait
dec
sbb
cmp
test
pop
popf
mov
sti
and
and
xchg
dec
push
cmp
push
dec
cmpsl
stos
xchg
push
lret
inc
js
jno
push
sbb
and
lods
push
add
sub
or
xchg
jp
xchg
aad
jp
rclb
fldt
cmp
rorl
jl
aam
add
imulb
stos
and
lcall
mov
xor
je
addr16
shll
stos
bound
xchg
or
test
mov
xor
mov
jno
adc
lret
mov
push
mov
fstpl
xchg
inc
iret
stos
out
fnstsw
mov
jae
xor
faddp
and
clc
outsb
mov
and
das
add
in
out
pop
test
nop
dec
mov
sbb
pop
fsubrp
insb
mul
add
fadd
sub
sbb
jne
xchg
shlb
lcall
push
ss
pop
dec
jne
loop
loop
jle
lahf
dec
mov
pop
roll
mov
lods
jae
jmp
xchg
pop
and
cld
iret
pop
fwait
call
aas
add
cs
js
repz
dec
sub
inc
xchg
lods
jb
jo
subl
jp
dec
mov
aas
or
cmp
cld
cli
pop
mov
orb
xor
std
adc
or
negl
icebp
pop
in
mov
xor
mov
lcall
xchg
mov
in
jmp
inc
xchg
stc
and
cmc
jbe
pop
xor
dec
nop
fisttpl
mov
jge
jge
rorb
mov
inc
sbb
and
lret
dec
push
out
cmp
roll
popa
sbb
dec
pop
mov
add
mov
dec
push
inc
push
outsb
pop
sub
xchg
add
loopne
sbb
mov
movsb
mov
dec
ss
popf
fcompl
mov
or
push
dec
or
stos
add
adc
mov
clc
sbb
jno
sbb
add
lcall
dec
lods
or
jns
loopne
jle
mull
jg
loopne
pop
jmp
popf
aam
mov
sub
jle
jmp
outsb
rcrl
std
dec
lods
hlt
sbb
adc
jne
adc
js
mov
out
bound
lahf
in
dec
ret
cmc
mov
pusha
jb
enter
outsl
adc
insb
or
repz
pop
jmp
sbb
dec
scas
jnp
mov
inc
and
aas
cmpsb
sub
sbb
mov
imull
jmp
cmp
pop
ret
jp
push
imul
lods
xor
scas
aas
adcl
pusha
into
dec
xchg
das
add
add
adc
das
sbb
dec
pop
divb
sub
and
jnp
xchg
sarl
fucomi
lock
dec
aaa
fcmovnb
sub
ret
mov
out
ja
aaa
xor
popf
push
mov
jg
pop
test
mov
ljmp
lds
test
inc
clc
xchg
les
xor
xchg
popf
mov
scas
sbb
fdivs
mov
mov
push
cwtl
fcmovne
jp
xchg
pop
sbb
nop
mov
xadd
out
mov
push
push
jno
jnp
test
jmp
jl
in
jecxz
aam
call
xor
mov
out
and
mov
sahf
mov
lea
fs
xchg
je
xchg
push
call
cltd
lret
pop
int3
adc
lret
pop
fbld
aad
loopne
cmp
outsb
inc
pminsw
fdivs
std
push
pusha
sub
mov
iret
movsb
ret
pop
fstpl
pop
jo
add
push
dec
push
jb
xchg
sub
xor
mov
jnp
cld
pop
xor
mov
js
xchg
mov
adc
cli
push
sbb
negb
inc
imul
xor
xchg
adc
pop
iret
lahf
sti
repnz
pusha
js
inc
ljmp
fcompl
cmp
jo
push
shr
adc
sbb
cmp
adc
fisubrs
adc
or
inc
sub
fisubrs
aas
jecxz
push
test
cmp
jecxz
mov
mov
loop
sbb
pop
xchg
in
and
rcl
mov
add
jbe
test
sub
push
and
stc
add
push
inc
mov
les
movsl
ja
cmc
cmpsl
pop
fdivrl
sbb
inc
push
mov
ret
or
push
jae
xchg
adc
addr16
aam
stos
out
sbb
or
add
cmc
fs
push
pop
gs
and
inc
add
inc
cli
jno
cmp
ret
inc
pop
inc
mov
inc
jl
insb
cmp
dec
out
jbe
mov
jae
jge
jb
aad
je
pushf
std
mov
dec
pop
mov
insl
iret
inc
daa
rorl
jmp
in
mov
fwait
sbb
mov
out
icebp
jns
mov
bound
in
sarb
jmp
or
fucom
out
je
pop
push
xor
punpckhdq
adc
pop
push
inc
sub
xor
adc
jno
push
loopne
jl
sub
and
clc
add
lret
cmpsb
cmpsl
push
adc
inc
or
sbb
xlat
sbb
lahf
cmp
xor
jg
inc
sahf
mov
mov
jns
in
insb
loop
fidivrl
dec
jge
in
ja
mov
in
jo
fadds
nop
push
pop
mov
push
rorb
sub
mov
and
mov
fdivrl
cmp
in
lahf
lahf
dec
fistpll
ss
sub
sbb
repnz
orb
fs
dec
dec
jne
pop
aad
mov
pop
outsb
push
stos
add
jp
test
mov
mov
sub
dec
adc
rorb
dec
arpl
inc
movsb
inc
dec
fcmovu
jge
ja
aam
adc
das
mov
xor
test
jl
test
shrb
loop
out
cmc
lret
sub
pop
dec
inc
enter
lea
and
push
cmp
jb
insb
ss
mov
jge
or
daa
pusha
call
dec
add
enter
mov
jle
mov
jmp
scas
pusha
aad
pop
les
aaa
dec
jg
rorl
adc
incb
dec
inc
cmpsl
cmp
xchg
out
outsl
shlb
and
jp
test
xchg
mov
into
stc
aam
lods
sbb
pusha
ret
fldl
cmp
xlat
jmp
cmp
dec
or
leave
inc
dec
dec
pop
pop
into
xchg
outsl
and
xchg
daa
insb
push
test
mov
cltd
add
cmp
and
mov
in
mov
cmp
push
push
cmp
test
into
stos
dec
push
imul
movb
or
out
or
sbb
xchg
cmpsl
and
test
mov
push
xorb
sbb
add
cmp
bound
lcall
fcomi
stos
push
mov
ljmp
sub
xor
repnz
out
add
jle
nop
subl
xor
adc
cmp
jmp
mov
adc
inc
fwait
mov
push
mov
inc
jne
in
cmp
cmp
movsl
dec
push
or
shll
lea
in
sbb
ret
loopne
cmp
cmpsl
sarl
mov
sbb
jg
and
inc
lea
cltd
or
cmpsl
das
lret
adc
fdivrs
and
mov
dec
fstpl
insb
leave
fsubrs
fstps
insl
mov
sbb
dec
xchg
xor
pop
adc
jns
fdivrl
mov
jbe
xorb
pop
push
pop
mov
test
addr16
xchg
insb
sti
mov
aas
push
cmp
lret
xchg
cwtl
push
add
repz
sub
adc
bound
add
rcrb
divb
mov
fcomi
out
scas
idivb
lock
scas
jae
mov
ljmp
ret
dec
rcrl
xlat
push
and
hlt
pand
rcr
sbb
mov
cld
cmp
xor
loope
lret
mov
cmp
mov
out
mov
inc
sahf
pop
fldt
mov
jg
xchg
pop
mov
push
call
or
repnz
sbb
movsl
imul
loopne
xor
ret
xor
in
pop
push
stos
loop
push
fisubs
pop
movsl
mov
mov
lods
stos
fnstsw
sarb
fsubrs
je
sub
jmp
nop
sub
icebp
xor
push
sub
out
add
and
mov
bound
add
and
push
ds
lret
push
int
movsl
add
cmc
out
push
push
sbb
rcr
push
call
sbb
mov
dec
imul
nop
add
outsb
es
xchg
cltd
mov
outsb
arpl
js
adc
or
ss
push
cmp
ds
sub
popf
inc
out
imul
jecxz
icebp
push
jae
mov
roll
xor
pop
sbb
lahf
call
call
rcrl
push
sub
imul
cmp
jns
bound
lret
imul
fistpl
jo
cmp
dec
movsb
jle
mov
test
add
push
push
fldenv
xchg
inc
xchg
mov
mov
sbb
out
out
cli
lds
in
and
sbb
mov
sbbl
sub
rcrl
dec
mov
xchg
mov
dec
xor
lcall
jb
fnsave
pop
pop
xchg
mov
pop
pop
dec
fldenv
inc
stos
mov
push
das
stc
arpl
jns
mov
cwtl
xor
adc
sbb
mul
incb
filds
inc
lock
inc
xchg
or
sbb
in
scas
in
les
dec
testb
lahf
stc
imul
daa
cmpl
cmp
sub
cwtl
test
test
mov
push
sbb
jmp
xor
nop
sbb
fidivrs
pop
push
sbb
xchg
es
cltd
dec
mov
push
dec
fldl
jo
push
cmp
test
sub
pusha
and
rclb
ror
push
jno,pt
push
mov
cli
jns
mov
mov
rorl
sub
insl
mov
sub
int
sub
sbb
popa
jecxz
loope
leave
daa
lahf
sbbl
xlat
gs
out
loop
mov
cmpsl
lods
pop
cmp
add
jge
enter
adc
rorb
jg
mov
push
call
cmpsl
or
movb
fnstsw
sbb
roll
fisubrs
scas
push
sub
or
das
and
imul
pusha
loop
pop
les
inc
cs
inc
das
aas
and
adc
aas
imul
jno
dec
xor
dec
adcb
js
dec
icebp
dec
mov
xor
push
lret
adc
xor
imul
pop
adc
mov
je
dec
leave
rorb
add
mov
adc
mov
cmc
pop
xor
dec
jne
and
ja
or
in
mov
test
jecxz
dec
xchg
lea
xchg
int
call
adc
negb
push
int
sub
int3
mov
cmp
leave
fdivrp
lret
xchg
adc
pop
repz
mov
jl
push
dec
cmpl
and
repz
inc
sbb
in
test
js
das
cmpl
dec
ds
lcall
sbb
hlt
sbb
jno
cmp
mov
sbb
jecxz
or
in
adc
xor
mov
punpckhbw
in
push
rorb
subb
sub
add
bswap
add
xchg
mov
int
xchg
andb
sarb
and
leave
mov
in
mov
push
lods
pop
and
cmp
xor
xlat
lea
push
sbb
test
je
xor
pop
enter
ret
xchg
pop
and
sub
xchg
xlat
shr
es
inc
mov
xchg
subl
loope
jmp
rolb
xchg
fs
not
mov
push
enter
inc
mov
jo
adc
call
mov
mov
dec
jae
sahf
and
and
jns
mov
dec
pop
test
lods
ss
mov
dec
mull
lcall
stos
out
push
push
fidivrs
fimull
cmpb
xor
mov
inc
jl
icebp
cmp
cltd
outsl
je
pop
icebp
or
fiaddl
mov
leave
movsl
add
outsb
xchg
cld
jecxz
or
vpshufhw
push
push
clc
xchg
lock
je
mov
jbe
test
xor
xor
push
push
hlt
dec
mov
dec
dec
xor
sub
in
arpl
and
and
fistpll
gs
stc
sub
xchg
in
xchg
test
adc
shl
dec
and
leave
xor
inc
mov
daa
push
das
inc
cmc
mov
mov
movsl
sbb
push
mov
repz
jns
inc
js
int
jnp
add
out
mov
or
flds
fimuls
cld
xor
dec
stos
out
xor
xchg
mov
loop
cli
mov
push
stos
sarb
fs
int3
leave
lahf
inc
rcrl
xchg
xor
imull
dec
sub
cli
jbe
jne
push
pop
dec
ss
lahf
xchg
mov
stc
fmuls
mov
xchg
outsl
data16
int3
cmp
imulb
push
sub
mov
or
and
pop
fsts
stos
and
lea
test
ja
jne
cmp
mov
dec
imul
cwtd
or
aaa
movsb
repnz
insb
and
cld
add
dec
sub
dec
pop
sbb
jmp
mov
aaa
inc
lock
dec
enter
jno
ficoml
pop
xor
and
xor
mov
jle
inc
test
jg
sbbl
mov
sbb
sub
ficompl
loopne
jecxz
lods
xchg
jo
push
out
loopne
outsb
ljmp
fcomp
movsb
in
mov
pushf
dec
inc
js
add
mov
and
mull
xchg
inc
ds
test
mov
dec
xlat
push
into
xor
dec
sti
jle
loope
mov
out
sub
call
mov
inc
test
and
push
movsb
and
push
sbb
sti
pushf
jle
mov
pop
sub
and
inc
push
loope
sbb
out
sub
pop
stos
test
inc
fdivrs
in
xor
mov
or
cmp
sub
shlb
mov
rolb
xchg
mov
xor
and
xor
sub
sub
xchg
push
sarl
imul
ds
lods
sbb
scas
lea
adc
dec
pushf
test
outsb
mov
mov
dec
push
push
jmp
shlb
xchg
push
hlt
jmp
aam
rcll
xchg
jnp
fadds
sub
roll
sbb
bound
sbb
adc
push
subb
mov
ret
pop
loopne
adc
rorb
into
ljmp
rcl
dec
stos
push
stc
sbb
pusha
scas
je
insl
insl
xchg
push
add
sub
mov
inc
xchg
adc
mov
sub
fcoml
movsl
fmulp
dec
in
ror
jns
repnz
jbe
icebp
lea
adc
mov
push
repnz
leave
jle
ror
push
mov
lret
adc
cmpl
into
cmp
inc
mov
xchg
es
mov
mov
mov
mov
xor
iret
pop
add
test
pop
dec
dec
sub
adc
pop
iret
sbbl
cmpsl
aaa
push
hlt
or
mov
into
mov
outsb
fldenv
test
lds
inc
mov
js
mov
lret
push
inc
add
xlat
add
cmp
inc
imulb
jns
jns
pop
mov
test
lcall
xchg
add
ja
mov
test
sbb
sub
lds
stos
ds
in
outsb
stos
into
ljmp
outsl
push
inc
pop
das
es
dec
jo
mov
jbe
jae
inc
ja
stos
lret
mov
lea
adc
push
cmp
cld
insb
in
add
xor
fadd
or
mov
ret
nop
scas
out
dec
lds
add
shrb
and
xchg
fildll
aas
mov
dec
jmp
aam
scas
scas
push
arpl
sub
inc
push
inc
adc
and
mov
mov
int
sbb
mov
and
adc
ljmp
mov
sub
ss
data16
and
push
loope
cmp
push
sbb
gs
xor
push
push
sub
lock
scas
pop
mov
stos
push
pop
repz
mov
aad
pop
or
repz
lods
pop
imul
addr16
lock
lods
nop
fs
xchg
pop
out
bound
mov
mov
fisttpl
ljmp
dec
rcr
xor
jge
test
sub
pop
jmp
movsb
add
leave
rcr
cmp
jns
das
dec
push
test
sti
mov
test
sbb
pushf
cltd
je
jns
inc
imul
mov
daa
out
imul
sbb
daa
int
adc
fld
sbb
mov
sub
lods
xchg
into
shll
xorl
xchg
mov
in
es
test
mov
stc
jno
jnp
clc
xor
jecxz
jb
or
pushf
ret
mov
mov
jge
mov
or
fidivrl
pop
add
mov
sbb
push
and
push
stos
clc
or
lea
sub
addr16
lock
cmp
sub
xchg
add
pop
notb
js
push
ja
push
loopne
mov
adc
in
push
push
aaa
sub
test
rorl
ds
pop
dec
and
orb
mov
cmp
ds
int3
leave
cmp
jne
insb
push
xor
mov
jnp
jne
imul
cli
int3
pop
xor
fadd
ret
and
repnz
mov
sub
add
in
add
mov
adc
call
aam
lcall
adc
js
jge
addr16
cmp
dec
sub
pop
sbb
imul
cmpsb
dec
adc
ss
mov
cvtdq2ps
pop
push
repz
mov
aam
imul
fildll
push
dec
inc
pop
enter
rcll
imul
mov
js
aas
lods
push
dec
lods
mull
inc
jno
int3
rcrb
mov
pop
scas
dec
mov
movsb
clc
jge
pop
test
cmpsl
inc
int3
inc
test
cmp
call
mov
cwtl
in
divl
pushf
leave
mov
roll
je
movsb
mov
loope
and
out
xlat
bound
aad
repnz
int
or
fnstcw
scas
aad
push
dec
xlat
and
pusha
jae
push
mov
push
dec
pop
xchg
pop
cmp
jge
xchg
pop
cmp
ja
jmp
lock
scas
ret
inc
aas
mov
test
lcall
cmovl
popa
xor
adc
xchg
lock
scas
or
mov
inc
jle
push
leave
imul
jge
mov
jp
pop
adc
sar
pusha
fucomp
sbbl
or
xlat
dec
jne
adc
aas
mov
push
mov
xchg
aad
xor
pusha
fiadds
ss
ljmp
xchg
pop
pop
sub
mov
fists
fcompl
push
and
mov
push
stos
mov
xor
test
add
pop
dec
adc
xchg
jmp
mov
mov
xchg
pop
push
fistpl
adc
jne
adc
popa
es
loop
cmpsl
lods
xor
mov
mov
mov
xor
push
jns
push
popf
adc
sti
sub
sbb
repz
into
out
and
mov
xchg
sbb
popf
aam
jle
and
enter
das
cmpsl
add
jo
lock
mov
lcall
out
sar
ljmp
ljmp
or
cmpsb
lret
iret
cmp
hlt
icebp
loope
pop
xchg
mov
pushf
adc
repz
mov
jmp
jge
adc
aaa
or
cli
int3
cmpb
or
cmp
xchg
cmc
xlat
js
mov
xchg
imul
in
inc
adc
aaa
push
insb
rorb
mov
arpl
adc
ja
add
into
aas
jb
push
je,pt
es
push
add
loopne
int
adc
push
jp
gs
stc
fcomip
jnp
pop
cmp
adc
fwait
mov
inc
fnstenv
into
pop
cmp
inc
in
fbstp
mov
mov
pop
pop
mov
lock
and
xchg
aas
lods
bound
mov
sub
xchg
scas
iret
ret
ja
add
iret
movsl
cmpsb
insb
cmc
repnz
xchg
inc
xchg
mov
cmpb
lds
nop
repz
pop
jb
push
filds
pop
ret
je
dec
ret
data16
or
stos
and
scas
mov
fldl
cli
push
mov
cltd
push
jmp
les
fistpll
pop
fucompp
mov
aam
inc
sbb
cwtl
add
jae
sbb
lret
mov
mov
in
scas
jecxz
and
imul
ja
fndisi(8087
popf
mov
and
lahf
nop
nop
lahf
xchg
dec
scas
sarb
popf
cwtl
dec
ret
aaa
jg
testl
adc
mov
ss
sarl
mov
cmpsb
dec
push
or
out
cld
cwtl
mov
test
xchg
push
ljmp
cmp
sbb
jb
out
inc
adc
jbe
xchg
stos
test
mov
insl
pop
shl
xor
incl
into
jmp
jge
pop
pusha
and
out
sub
xor
push
mov
leave
cmp
pop
sbb
mov
or
gs
jnp
mov
sub
push
in
std
mov
fdivrs
shll
pushf
shrb
xchg
dec
dec
sub
and
xor
inc
jnp
dec
jae
dec
cmp
xrelease
aam
inc
pop
imul
nop
xor
stos
cli
int
mov
pop
jecxz
lahf
and
test
pop
sub
fistpl
inc
imul
pop
ljmp
mov
jne
pop
out
xchg
xchg
popa
mov
loop
loopne
mov
mov
jg
mov
xor
subl
ljmp
push
add
or
and
pop
xor
pop
fucomip
nop
mov
leave
rorl
shrb
jmp
inc
outsb
inc
ja
ja
mov
sub
mov
insb
mov
pop
and
adc
xor
test
fimuls
xor
mov
sbb
inc
mov
stos
cmp
in
les
gs
xor
lods
xor
in
or
mov
push
lahf
insb
push
push
cli
cld
cmpl
pop
out
insb
mov
dec
jl
add
fmull
popa
mov
int
jmp
lock
sbb
sbb
sbb
outsl
push
push
mov
add
jbe
sbb
mov
int3
push
jp
enter
xchg
jmp
pop
or
icebp
dec
add
push
outsl
in
arpl
mov
xor
test
in
mov
xchg
cld
addl
or
and
sub
xor
sub
push
pop
dec
lods
push
jae
iret
add
ret
xor
jns,pt
xor
ret
ret
mov
dec
dec
notl
lret
jg
jns
fcmovnbe
add
cmp
movsb
dec
cmc
cmpl
fdivrs
jle
pop
sub
addl
ror
sahf
cmp
aam
cmp
push
xor
inc
add
cld
dec
icebp
repz
or
push
jl
and
inc
jnp
dec
fwait
sub
mov
into
ja
pushf
cmpsl
xchg
cmpsb
leave
or
movl
push
in
xchg
add
pusha
mov
hlt
sbb
ficoml
jmp
outsb
mov
jb
xor
pushf
into
or
adc
test
stos
sbb
xlat
sti
add
lea
pop
in
je
bound
adc
subb
add
lret
push
lret
scas
stc
jmp
pop
cwtl
inc
adc
aad
fidivl
mov
mov
pushf
push
xchg
push
dec
cmpsl
xor
xchg
stos
popf
cmp
ret
mov
dec
cmp
pusha
cmpsl
enter
in
js
call
and
adc
in
sub
cmpsl
sub
test
outsb
test
dec
repnz
add
outsl
hlt
xchg
arpl
xor
stos
fbld
cmp
fwait
dec
in
inc
stos
dec
sarl
call
lahf
push
cmp
sbb
dec
hlt
mov
into
xchg
lcall
ja
popf
mov
inc
pop
sbb
ret
aas
or
outsl
negb
pop
daa
jbe
out
addr16
xor
jle
cmpsl
ror
lods
mov
inc
push
inc
test
mov
xlat
and
out
stos
nop
cld
add
add
jo
ret
dec
je
js
xor
and
sbb
jp
xor
jns
subb
and
stos
push
fs
sbb
hlt
dec
outsl
inc
push
fs
adc
pop
stos
adc
jb
fstpt
je
cmp
pop
mov
pop
js
jns
adc
push
xchg
xor
arpl
mov
frstor
pop
out
inc
mov
xor
pop
jne
leave
pop
ss
scas
inc
es
insl
lahf
xchg
imul
clc
mov
or
pop
add
add
movsb
test
ds
call
test
add
cmc
or
rorl
shrb
out
inc
xor
fs
sbb
cmp
aad
sbb
pushl
imul
pop
push
cmpb
out
movsl
push
mov
enter
in
das
hlt
jg
int3
xor
arpl
and
adc
popf
aam
or
test
popf
fisttps
hlt
mov
jno
sub
fldt
gs
or
cwtl
ret
paddsw
int
push
pop
popa
cmp
mov
mov
or
push
jle
add
fstpt
pop
mov
insb
imul
mov
sbb
outsb
dec
fcmovnbe
data16
jp
aam
xchg
mov
mov
push
xlat
lret
pop
mov
cmpsl
sub
fcomi
jne
inc
dec
dec
jl
pop
outsb
mov
add
mov
