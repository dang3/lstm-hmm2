incl
push
outsl
imul
idiv
outsb
dec
gs
bound
jae
imul
jo
xor
cs
insb
call
push
push
ja
push
jb
jbe
insb
gs
insb
dec
outsl
fs
jne
cmp
dec
dec
xor
dec
xor
outsb
mov
cs
and
data16
popa
jb
pop
dec
imul
mov
sbb
pop
inc
jne
pop
outsb
je
imul
out
jl
outsl
outsb
pop
inc
jo
and
je
jae
pop
ja
inc
inc
push
jg
fs
std
jae
je
jo
pop
vmread
cmp
inc
mov
arpl
dec
dec
inc
add
bound
je
jnp
fistpl
pop
sub
adc
and
jmpw
add
sub
inc
inc
dec
dec
inc
out
insl
mov
inc
sub
dec
pop
push
add
jbe
and
push
dec
push
dec
addr16
data16
das
dec
in
mov
outsl
jmp
sub
and
outsl
jb
and
inc
outsl
jne
fsubr
imulb
outsb
jae
insb
push
and
and
outsl
pushl
push
push
inc
inc
dec
pop
push
push
push
jbe
iret
jne
inc
pcmpeqb
pop
add
cmp
out
pop
sti
ffree
gs
outsb
jg
xor
xor
mov
jl
dec
xor
inc
xor
test
cmp
dec
dec
push
inc
sahf
cmp
sbb
or
out
jae
popa
insb
jo
popa
inc
arpl
inc
pop
sti
mov
inc
outsl
pop
jae
dec
aas
adc
int
jle
pop
push
push
adcl
mov
jnp
fwait
dec
and
dec
jge
sbb
mov
incl
push
inc
dec
inc
pop
inc
dec
pop
imull
push
push
push
inc
add
dec
inc
icebp
ret
jae
add
je
aas
inc
cmp
pop
sbb
ljmp
imul
jl
fnsave
insb
ljmp
and
imul
push
and
sar
pop
imul
add
add
add
add
pop
or
or
out
decl
or
or
or
movups
adc
shll
aas
add
add
shll
push
jnp,pn
shll
pop
jle
aas
or
jl
cmp
add
add
xor
movhps
das
out
xor
jg
jg
xor
repz
add
rorl
or
xor
adc
std
jg
pusha
push
push
inc
push
inc
cwtl
xlat
jae
pop
dec
xchg
fcmovb
xor
and
adc
gs
fs
jo
bound
cld
jmp
sub
xor
cmp
jne
mov
sti
idiv
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
icebp
cmpl
fidivs
jle
push
dec
mov
pop
ret
add
lds
or
cmp
mov
je
aas
cmp
je
in
mov
inc
dec
jne
adc
adc
ja
sti
sub
mov
pop
cmp
adc
enter
dec
or
sub
add
jmp
dec
or
in
sbb
xor
insl
or
adc
idivb
mov
mov
add
div
outsb
mov
mov
add
cmp
and
je
mov
dec
sub
rclb
mov
je
lea
push
push
add
lods
push
push
adc
push
movl
add
shlb
insl
xor
call
add
pop
das
mov
mov
mov
pop
pop
call
in
out
dec
fadd
add
sbb
mov
pop
add
clc
add
jb
pop
fcmovnu
jge
push
dec
push
mov
adc
mov
push
push
adc
lret
jae
push
mov
mov
out
xlat
ss
sub
jle
popf
cmpl
mov
xchg
xor
push
ss
lahf
test
mov
in
xor
push
jbe
enter
lea
in
aaa
adc
add
cmp
inc
loope
jb
fisubrl
lock
loope
es
push
dec
pop
aaa
ret
sti
mulb
pop
jmp
cmp
je
movl
ds
cmp
and
xchg
and
aas
mov
and
imul
adc
or
ja
addr16
xchg
int
mov
jmp
mov
dec
jg
sbb
test
std
adc
int3
push
pop
mov
es
mov
fadd
sbb
aas
dec
inc
adc
pop
or
out
or
mov
fcomip
adcb
and
jmp
orb
fdivs
je
inc
movsbw
popa
or
push
daa
and
mov
fcmovnu
fdivrp
adc
adc
and
inc
add
and
fucomi
add
jo
jnp
pop
push
pop
xor
dec
repnz
inc
clc
ret
mov
xchg
jno
push
mov
shlb
and
sub
idivb
fimuls
mov
je
jmp
lock
je
sbb
mov
sbb
out
mov
fcmove
in
push
clc
in
ficoml
icebp
mov
notb
or
pushf
je
mov
mov
test
pop
mov
ss
cmp
popf
push
push
int3
mov
cmpb
pop
push
test
and
or
sbb
popa
or
push
or
jae
insl
sar
lea
pop
div
stos
stos
sbb
std
mov
into
ret
in
or
pop
mov
push
add
loopne
pop
adc
or
push
push
adc
mov
or
cwtl
mov
movsb
or
fs
cmp
mov
fsubrs
in
idiv
push
incl
jl
pop
jne
and
jecxz
add
fimuls
shll
push
loop
hlt
sbbb
sub
jge
pop
ret
sbb
mov
dec
push
fldenv
incl
jbe
pop
addr16
stos
test
and
ret
bound
sub
adc
jmp
and
pusha
mov
mov
mov
fadds
lret
icebp
xchg
lea
movsl
pop
fmuls
jne
adc
adc
mov
mov
std
pop
ss
fs
cmp
rcr
mov
cmp
add
in
adc
lea
adc
sbb
or
add
lods
lret
bound
push
jae
add
sbb
pop
dec
add
mov
pusha
mov
sbb
cmp
cld
and
mov
lret
enter
add
das
and
lea
cmp
sbb
xor
aaa
xor
mov
ret
mov
mov
add
imul
es
push
xor
mov
inc
pop
inc
lcall
xchg
and
ret
or
pop
jne
mov
je
push
dec
sub
add
inc
add
jne
jle
pop
or
cmpsb
in
pop
in
jne
cmp
add
orl
and
push
sarl
test
js
push
lcall
shll
sbb
adc
push
mov
shrl
jecxz
push
xchg
adc
or
lods
pop
add
or
pop
jge
pushf
or
push
mov
add
pop
pop
in
lea
sbb
and
int3
adc
add
inc
mov
add
mov
cld
push
test
cld
negb
sub
jle
push
add
push
into
xor
fucomi
adc
or
xor
ds
mov
iret
sbb
push
inc
mov
xchg
rorl
movb
rsqrtps
jg
jl
add
xchg
jo
iret
push
in
ss
dec
in
lock
mov
mov
ret
rcrb
imul
nop
add
xor
in
rorb
xchg
out
adc
mov
or
stos
jb
mov
adc
in
push
mov
loop
add
test
jnp
rcr
xchg
data16
push
jmp
cmp
fcomps
add
enter
and
mov
ficomps
testb
loop
mov
xor
jne
xrelease
xchg
or
pusha
xor
inc
push
jne
scas
ja
in
das
mov
test
jo
test
or
cs
neg
sbb
and
or
cmp
fnstsw
jbe
or
cmp
ja
push
add
xor
fcomps
ljmp
push
pop
roll
pop
push
push
or
leave
or
pop
dec
sbb
jl,pn
leave
push
sub
push
add
jb
incl
or
push
or
cmpl
sub
mov
mov
ja
lret
jmp
jno
inc
das
or
adc
mov
jne
pcmpeqb
add
arpl
int
inc
les
or
push
insl
cmp
data16
arpl
sbb
or
les
push
fmuls
adc
loopne
movb
aas
and
test
imul
pop
pop
pop
push
dec
lods
and
mov
fsub
adc
cmp
xor
call
enter
sbb
iret
mov
jl
test
jge
sbb
lahf
lock
dec
xlat
jns
xchg
add
in
sar
lock
push
xchg
and
or
rcll
ljmp
pop
les
hlt
sbb
scas
push
xchg
addr16
push
push
sub
js
insb
imul
or
mov
scas
mov
test
xor
push
pop
jl
push
or
mov
jo
hlt
out
jge
jge
hlt
mov
mov
test
testl
cmp
sbb
ljmp
sti
insl
or
in
push
mov
push
mov
cwtl
adc
les
les
xchg
test
adc
mov
movsl
xor
add
ja
push
push
lods
rcll
push
rcrb
push
movsl
ss
outsb
sbb
dec
outsb
incb
jno
add
ret
inc
xchg
pushl
mov
add
rolb
xorl
jl
aas
fadds
jl
add
or
mov
add
or
aas
pop
or
push
jne
cmp
sbb
sub
clc
orl
cmp
jl
fisubl
ss
rcll
jnp
and
pop
das
ds
and
jecxz
push
push
dec
aam
push
addb
aad
mov
clc
or
popa
push
test
or
mov
test
fnstcw
sbb
test
jbe
outsl
mov
je
lret
mov
dec
and
in
xchg
daa
and
xor
xor
enter
jne
mulb
fadds
xor
add
sbb
mov
scas
sbb
push
adc
rorl
inc
inc
jne
js
arpl
mov
cmp
mov
fisubs
loopne
psrlq
clc
xor
cmp
clc
mov
loope
mov
test
pop
std
mov
push
xchg
loop
xchg
andl
push
and
test
xor
out
xor
mov
flds
call
adc
sbb
push
push
daa
or
aam
lods
flds
lea
sbb
inc
adc
or
push
push
mov
nop
pop
jbe
jge
out
pop
push
pop
push
dec
outsb
lods
xor
fistpl
repnz
xor
lock
gs
std
stos
xchg
ljmp
ficoms
and
test
scas
xor
shrb
mov
pop
ds
lea
cvtpi2ps
pop
and
sub
jbe
and
std
jmp
xchg
or
push
cli
mov
insl
test
mov
cmp
jne
and
setp
sub
test
pop
int3
dec
shrl
push
testl
das
sbb
add
inc
ss
adc
movsb
jbe
orl
lods
add
pop
fsubrs
int3
fstps
inc
mov
xchg
inc
lock
or
insl
andl
loope
push
jp
leave
inc
push
sub
jnp
sbb
mov
test
sahf
popf
in
jbe
int
sbb
popa
test
mov
in
adc
jne
ds
sub
sub
adc
jb
fsubs
mov
dec
je
sub
enter
push
xchg
jne
push
jne,pn
or
aaa
or
jns
popf
jle,pn
in
ret
divb
jne
adc
cli
jmp
sbb
push
cmp
pop
rcrl
or
and
push
inc
push
sbb
push
loope
daa
adc
pop
or
inc
sbbl
xchg
push
es
dec
adc
or
and
stos
jmp
sbb
push
cmp
xchg
mov
jae
dec
test
decb
xchg
mov
fcompl
and
pusha
insb
or
dec
divb
adc
je
push
fcomp
int3
xchg
rorl
adc
push
adc
js
daa
inc
test
sbb
popf
leave
int3
movsb
rorb
mov
lds
imul
ret
push
nop
cmp
push
insb
push
and
lods
jne
adc
mov
pusha
adc
push
mov
adc
adc
or
jne
sbb
out
aaa
mov
cmp
nop
add
lret
adc
insl
andb
xor
add
mov
push
dec
ss
les
push
ret
add
or
pop
lods
pop
fistl
push
mov
jge
data16
shlb
fnstsw
testl
add
jbe
or
jmp
mov
xchg
push
mov
and
stos
add
imul
mov
ljmp
or
adc
push
lods
cltd
adc
int3
repnz
rcll
nop
adc
fdivr
das
jl
stos
aam
sub
aas
fmull
aam
pop
fcoms
comiss
jo
aas
sub
adc
sub
adc
adc
fsubrs
or
inc
or
or
lea
hlt
jp
push
sub
cltd
sub
sar
add
xchg
pop
jns
leave
pop
sti
aaa
mov
xor
sarb
push
sbb
or
cs
sub
and
or
cld
dec
rclb
xor
cmp
rorl
push
jecxz
pop
mov
push
cmp
cltd
wbinvd
rcr
mov
inc
int
imul
xor
pop
adc
mov
aas
cmp
je
and
cmp
popa
push
aam
cwtl
js
xchg
insl
push
add
jnp
call
jge
rep
mov
and
push
rep
dec
int3
ret
js
and
jl
orl
faddp
enter
test
subl
dec
jl
cmp
sbb
xchg
movsl
cmpb
psadbw
pop
je
or
je
push
movb
push
movb
sub
test
inc
xchg
out
push
sbbl
lret
sarb
lret
pop
out
mov
ja
push
jns
cmpb
neg
outsl
adc
jmp
cmp
cmp
shll
add
or
jmp
xor
pop
cmp
outsb
lret
mov
decl
dec
mov
mov
xchg
rclb
ljmp
or
rcrl
pop
dec
lea
shl
mov
sbb
dec
jne
mov
jnp
int3
or
xlat
cmp
jae
add
mov
shll
fmuls
add
jge
mov
jnp
lods
rcr
add
fiaddl
add
push
push
push
inc
or
loope
aam
andb
sub
mov
jg
xchg
add
xor
lea
cmp
push
dec
das
in
into
mov
mov
xor
push
pop
orb
call
inc
out
cmpl
sbb
mov
mov
jo
aaa
and
pop
imul
test
divl
andb
dec
mov
cmp
push
or
pop
ret
add
pop
in
cmp
inc
es
inc
cmp
ja
lds
xchg
add
mov
jmp
pushl
xor
sti
pop
repz
or
cmpl
xor
mov
mov
or
add
fidivrl
rorb
mov
gs
xor
or
push
pop
jmp
mov
mov
dec
mov
test
xlat
mov
dec
call
push
jl
jmp
mov
insb
sar
call
fidivrl
fsts
hlt
add
and
add
pop
xchg
adcl
arpl
lock
inc
inc
je
dec
daa
fwait
or
pop
jo
sti
sbb
or
sti
push
mov
jae
jbe
mov
mov
sub
imul
pop
bound
ret
or
ret
cwtl
insl
out
mov
mov
pop
or
insl
push
test
mov
jecxz
mov
inc
or
mov
push
or
mov
dec
xchg
mov
cmp
movsb
mov
ret
and
sbb
sti
inc
aad
push
pop
in
dec
mov
fdivrl
les
aaa
mov
out
pop
mov
lods
mov
mov
leave
scas
fnsave
test
add
dec
or
push
std
fidivl
pop
inc
jne
adc
int
mov
pushf
xchg
and
mull
and
inc
or
test
lds
jb
addb
xchg
sub
cmp
add
adc
inc
clc
adc
jno
mov
mov
out
push
andb
inc
push
cmpsl
bound
int3
and
push
mov
mov
mov
push
sti
out
and
jno
stos
jmp
push
scas
cmp
fs
jae
mov
xor
adc
icebp
sub
add
sub
popa
bound
or
test
pop
test
pop
lahf
aam
cmp
pop
outsb
das
dec
adc
or
or
cmp
aaa
jle
or
or
inc
mov
test
loopne
sbb
cmpb
add
inc
inc
cmp
out
jmp
mov
lret
fidivs
je
or
or
je
cmp
add
xor
mov
mov
aam
test
dec
pop
insl
pushf
jno
call
adc
mov
xor
mov
inc
ljmp
fdivs
cmp
jmp
inc
aad
xor
xchg
xor
xor
mov
cli
mov
imull
sbb
cmpsb
popa
pop
pop
je
jmp
lcall
pop
and
inc
add
inc
ja
add
xlat
into
mov
aas
jmp
xchg
mov
movb
and
inc
jmp
sbb
mov
adc
fiaddl
lea
mov
test
cltd
mov
rolb
cmp
lds
dec
sbb
popf
mov
ds
mov
push
add
mov
test
stos
cmpb
insb
or
add
pop
insb
mov
sarb
aas
inc
mov
dec
mul
neg
add
pop
inc
add
pop
sub
sbb
add
push
test
rol
mov
fwait
pop
outsb
or
mov
cmpl
push
mov
enter
mov
in
cmp
lea
sti
sbb
or
and
mov
dec
xchg
mov
jp
add
je
add
mov
and
adc
or
ja
imul
cmp
test
or
decb
adc
jmp
or
jmp
push
mov
jl
sub
xchg
scas
cmp
xchg
add
cvtpi2ps
push
lods
push
nop
arpl
daa
dec
daa
dec
cmp
fwait
lods
and
add
mov
xor
stos
push
cmp
sbb
adc
mov
and
cmp
sbb
testl
push
mov
push
pop
and
adc
je
or
movhps
mov
pop
nop
push
pop
loope
into
dec
out
fs
jp
and
add
lock
movsb
push
lret
sti
es
into
xchg
ljmp
mov
inc
mull
movsl
fcoms
popa
add
mov
movsb
or
and
add
pop
add
xchg
cwtl
sbb
fisttpl
mov
sub
in
xchg
mov
shlb
push
cltd
in
roll
or
pop
or
add
mov
or
pop
in
lds
pusha
mov
lret
fwait
out
xlat
xor
icebp
fcmovnu
xor
push
adc
in
adc
dec
xorb
rolb
adc
mov
fsubrs
pop
ret
add
adc
dec
in
pop
fsubrs
adc
xchg
and
movsb
adc
sbb
subb
ds
cld
pop
or
in
loopne
rcll
out
sbb
jmp
or
lock
mov
and
imull
dec
aam
add
jle
push
lods
xor
fcompl
cmc
sub
add
jne
xchg
xor
popf
incl
sbb
ja
fdivs
jb
mov
movsl
xchg
xchg
ds
iret
xchg
jle
addr16
jmp
andl
inc
pop
push
in
pop
push
sbb
add
aaa
jp
jecxz
neg
sbb
imul
and
add
add
outsl
fildl
cmp
ficoms
and
xchg
pop
adc
or
or
cs
cwtl
mov
add
add
and
add
das
inc
mov
lea
loopne
or
lods
or
pop
roll
lret
addl
push
add
in
cmp
out
out
xchg
mov
call
inc
push
and
push
cmp
mov
or
aam
ret
xchg
xchg
push
adc
mov
or
les
adc
test
icebp
loop
push
scas
or
pop
xchg
sub
fnsave
scas
movsb
and
push
mov
push
or
pop
xlat
push
lods
loopne
jl
pop
sbbb
sbb
shll
pop
mov
int
mov
cmp
hlt
in
xchg
inc
adc
cltd
into
xor
in
sbb
push
push
sub
jmp
dec
pop
xlat
adc
push
mov
mov
jo
and
movsb
rolb
fnsave
xor
push
add
jb
pop
jge
pop
pop
pop
jbe
cmp
mov
mov
fldpi
inc
shlb
leave
pop
fs
mov
addr16
inc
je
cmp
iret
jmp
mov
sbb
lret
xchg
push
lret
inc
add
pop
add
adc
or
jge
sub
jb
pop
or
adc
pop
shlb
addr16
mov
jnp
outsl
std
dec
or
jmp
lds
adc
iret
jo
in
mov
or
or
mov
data16
enter
cmpl
std
dec
sbb
rcrl
jbe
push
outsb
add
jge
or
stc
inc
pop
fs
mov
fldenv
push
ss
into
pop
std
jmp
test
pop
dec
push
inc
mov
inc
and
gs
lret
inc
or
das
adc
imul
pop
sarl
push
or
add
add
loope
sbb
sbb
fnstsw
dec
jmp
or
cmpsb
ja
and
push
stos
insl
xchg
xlat
fwait
or
push
lret
push
and
xor
int
mov
push
adc
sub
jb
mov
ret
sbb
jo
andb
or
test
daa
mov
push
test
add
xor
test
in
push
mov
or
lds
pop
add
mov
aaa
shl
or
jmp
and
incb
insb
mov
adc
mov
mov
pop
jle
push
mov
or
sub
lret
pop
imul
pop
addr16
lea
insl
mov
mov
or
sbb
jl
sub
or
pusha
add
popf
icebp
ret
push
jg
iret
cmpsb
inc
testb
jne
add
mov
outsl
roll
mov
xchg
mov
mov
les
or
cwtl
sub
push
xor
lea
aam
jmp
lock
sub
jo
inc
bound
adc
and
push
pop
nop
mov
fdiv
stos
xchg
mov
insb
das
push
xor
add
jb
in
shll
xor
rcrb
in
sbb
les
data16
pop
filds
or
inc
push
push
ja
sbb
adc
xor
or
jp
push
and
mov
mov
je
das
arpl
clc
mov
lret
pop
mov
push
push
test
lods
lock
nop
aaa
and
sbb
sti
xor
jmp
mov
mov
mov
aam
add
cwtl
les
push
adc
or
ret
xchg
or
test
ret
or
pop
lock
mov
xchg
fs
fistps
or
inc
inc
push
das
sbb
int
popa
popf
jmp
outsb
pushf
sbb
sub
jne
orb
dec
push
or
sub
rolb
sub
aas
mov
iret
lcall
aam
movl
out
sbb
repnz
lret
lods
jmp
sub
mov
mov
dec
dec
ljmp
cmp
adc
mov
mov
xchg
lahf
mov
mov
mov
cmpb
fcomps
je
inc
sbb
push
lock
add
pop
nop
xlat
adc
cmp
add
dec
add
pushf
and
fisttpl
sbb
mov
adc
and
mov
inc
fwait
aas
call
cmc
pop
inc
sbb
pop
pop
push
mov
xor
cmp
bound
adc
cmp
imul
push
push
add
test
icebp
jae
jae
sbb
push
xchg
mov
popf
jb
pop
test
out
mov
faddl
jne
fdivs
jae
inc
dec
jbe
mull
adc
xlat
xchg
in
hlt
xor
push
daa
adc
sub
imul
sbb
pop
cwtl
shl
inc
xor
add
leave
or
dec
add
add
testb
jg
sbb
rorb
pop
jmp
xchg
push
roll
lret
lcall
or
and
and
add
pop
xchg
outsb
cmp
jbe
lea
push
push
xchg
mov
jmp
xchg
arpl
sbb
sbb
loop
lea
fidivrl
pop
inc
pushf
sub
fwait
sub
or
sub
add
imul
add
pop
push
dec
mov
mov
aam
lea
cmp
add
push
sub
and
push
hlt
sub
dec
les
pop
sbb
movsb
lcall
rcr
dec
push
nop
fs
mov
xchg
mov
pusha
mov
int3
addr16
popa
and
adc
mov
xchg
aad
clc
sbb
push
push
sarb
cmpsb
lea
dec
mov
push
mov
xor
mov
fwait
mov
inc
pop
cmp
mov
fcmove
sub
and
adc
jb
imul
mov
insb
xchg
jae
mov
sbb
jb
mov
insb
cmpsb
adc
xor
cmp
jbe
add
notl
lds
dec
pop
cmp
inc
test
add
add
jo
lea
add
add
incl
add
xor
jbe
mov
mov
lea
adc
out
enter
sub
xor
sbbb
mov
jb
insb
fildll
rcrb
xchg
sbb
rcll
or
cmp
ss
cwtl
or
sbb
into
or
cmp
bound
adc
cmpl
dec
xchg
jbe
add
push
mov
cltd
fstl
outsb
test
xchg
shll
or
cmp
push
imul
add
lea
jmp
xor
xor
test
push
test
pop
sbb
and
cwtl
add
pop
inc
mov
dec
jge
ret
ja
xchg
cmp
aad
jbe
lret
adc
dec
mov
lds
in
inc
add
adc
aam
sahf
loopne
add
xor
inc
mov
push
icebp
notb
push
fcmovnu
pop
les
repnz
mov
add
out
xor
mov
mov
aaa
mov
inc
lds
add
xlat
mov
lret
inc
push
cltd
dec
mov
test
jge
push
mov
nop
fldcw
jl
fs
and
dec
sbb
jbe
push
cmp
stos
shl
insb
cmp
xor
arpl
rorl
pop
and
push
xchg
sbb
add
inc
push
or
sbb
or
aam
popf
jns
divb
mov
clc
std
mov
repz
or
stos
add
push
and
pop
mov
sub
add
sub
sub
fwait
mov
xor
xlat
stos
sbb
xor
sbb
adc
or
cmpl
mov
push
call
add
imul
xlat
cmp
mov
add
mov
jge
jmp
add
nop
inc
sahf
add
push
push
mov
sbb
sti
or
cmc
mov
add
pop
xchg
cmp
and
inc
jne
push
jmp
adc
loope
add
push
clc
sbb
jo
cmc
cmp
pop
inc
test
into
push
dec
jbe
test
inc
dec
call
lods
mov
jle
adc
testl
mov
insb
mov
sbb
rolb
ret
adc
mov
movsl
inc
cld
sbb
sbb
jne
out
xor
popf
xchg
sub
mov
fs
pop
jo
jo
clc
push
or
add
mov
sbb
sub
adc
cltd
xor
int3
push
mov
mov
add
daa
loopne
sub
xchg
jecxz
clc
jnp
xor
push
or
jl
xchg
inc
std
sub
push
sbb
inc
lock
xchg
cli
cmp
setne
daa
push
mov
xchg
cwtl
rcll
push
xchg
ret
sbb
mov
and
inc
hlt
je
cmpl
movl
push
adc
push
or
fmuls
pop
rorl
adc
int3
or
scas
push
mov
ret
and
add
mov
jmp
jp
jae
dec
mov
or
add
xchg
add
fwait
adc
cmp
cmp
pop
and
dec
imul
mov
outsl
or
je
or
sub
push
sarb
stos
sub
adc
ficompl
stc
mov
mov
mov
push
sbb
ljmp
fcomps
sbb
xor
pop
in
and
or
dec
data16
frstor
or
movaps
add
push
jle
mov
cmp
inc
fld
push
pusha
dec
add
orb
cmpsl
clc
mov
xor
mov
filds
push
scas
popf
lods
jbe
adc
hlt
adc
push
test
loope
cmp
push
je
inc
mov
call
clc
cmpsl
rcrl
rcll
pop
adc
mov
inc
xor
add
fsubrl
sbb
fcomp
in
mov
push
add
scas
or
pop
push
dec
lock
icebp
sbb
je
push
pop
jb
jne
mov
addr16
adc
adc
sub
andl
inc
sbb
mov
ds
xchg
dec
clc
mov
nop
or
cmp
or
lret
or
js
add
or
mov
and
mov
inc
cmpb
and
pop
aam
adc
dec
lea
push
rclb
mov
and
push
jg
or
adc
or
and
or
or
jle
xor
push
mov
rolb
lahf
jl
push
mov
sub
mov
les
notl
in
or
and
inc
mov
inc
add
lods
push
cwtl
dec
add
pop
adc
int
sub
mov
add
jmp
stos
rep
push
mov
in
lds
adc
sub
mov
dec
repnz
sbbb
mov
rol
aam
mov
pop
mov
adc
adc
cmp
xchg
inc
sbb
je
adc
daa
test
cmp
xor
jne
test
add
pop
push
pop
adc
jne
loop
pop
add
push
lods
pop
pushf
jne
dec
insl
cmp
and
lcall
rorl
dec
add
sarb
dec
inc
ss
mov
test
iret
jo
add
movsb
ja
sbb
mov
mov
mov
push
xor
shlb
cwtl
cmp
addr16
cmp
pop
int
insl
adc
addb
adc
or
les
sbb
or
push
mov
ljmp
je
ret
lret
sub
xchg
xor
pop
pop
insl
add
mov
inc
das
or
fsubl
push
inc
inc
movl
jbe
pop
add
mov
xchg
dec
mov
add
fwait
mov
dec
mov
int3
insl
dec
adc
addl
xlat
mov
inc
mov
dec
stc
pop
call
mov
inc
adc
sbb
mov
ror
loopne
outsl
repz
xor
adc
test
aam
xchg
sbb
xor
mov
mov
rclb
push
aam
sub
sbb
imul
xor
xchg
pop
ds
xor
push
dec
add
cmp
repnz
pop
pusha
inc
test
lret
pop
dec
adc
cmpsb
adc
cmp
xchg
stos
hlt
sub
inc
je
mov
js
daa
mov
ret
jmp
add
test
mov
or
xor
cwtl
lds
je
cltd
negl
loopne
mov
movsl
and
sbb
mov
xor
xchg
xor
das
jb
stc
insb
or
imul
xchg
xor
push
cmp
cmp
push
inc
cmp
sbb
push
adc
adc
test
add
out
sub
cmp
test
mov
lods
andl
cmp
push
addr16
dec
adc
mov
jg
and
push
dec
js
jecxz
dec
inc
int3
imul
fnstenv
or
mov
push
xor
cmp
pop
cmp
es
push
mov
pushf
cmp
out
adc
inc
pop
fwait
jo
lods
add
cmp
cmp
call
dec
xchg
cmp
nop
pop
sbb
push
add
sbb
xor
jne
jmp
or
popf
bound
cmpsl
cmp
and
inc
out
push
cmp
fiaddl
pop
ds
mov
fcompl
push
rolb
push
rolb
mov
dec
sub
push
push
ret
faddl
adc
orl
mov
enter
loopne
cmpb
cmp
mov
shrl
and
sbb
test
pop
dec
mov
lret
and
mov
add
sarl
jecxz
les
jne
or
xor
or
xchg
xor
ja
pop
push
or
xor
fcoms
mov
rcl
ds
adcl
jne
push
adc
int3
pop
or
fsts
adc
jne
jbe
mov
pop
call
popf
or
cwtl
enter
add
lods
hlt
pop
dec
in
mov
test
in
pmaxub
mov
popa
pop
cmp
inc
fistpl
jne
xchg
cmp
loopne
dec
mov
rcll
ss
mov
inc
add
sub
xor
inc
push
push
add
test
dec
and
adc
movsl
test
add
xchg
testl
dec
fsubrl
adc
xor
add
mov
sahf
insl
adc
in
pop
icebp
and
int
adc
es
jbe
push
int
push
pop
mov
mov
cs
jne
enter
fs
stos
mov
pop
lock
nop
pop
out
push
jns
repnz
mov
cmp
ss
mov
fsubrl
rclb
fs
jb
and
jl
mov
push
cmp
pop
stos
mov
rorl
add
enter
adc
fwait
inc
sarl
leave
jns
rcll
fsubrs
call
cs
sbb
push
shl
fs
sbb
hlt
cmp
or
adc
and
add
addb
sub
jb
lock
add
or
mov
sbb
push
cmp
sbb
pop
push
ret
lods
inc
ss
push
les
push
sbb
push
jno
ficoml
jmp
inc
mov
xchg
jnp
dec
xchg
jge
push
sahf
push
out
push
inc
and
pop
sub
push
xor
sbbb
pusha
scas
mov
das
inc
dec
sbb
pop
push
cmp
lahf
or
pop
outsb
negl
roll
dec
and
sarb
jbe
inc
andb
xchg
dec
jb
cmpsb
push
shrl
pop
mov
cwtl
out
push
arpl
stos
aam
dec
dec
mov
sub
push
push
push
or
and
push
adc
pop
jp
clc
pop
shlb
cmpsl
push
sbb
imul
sti
fistl
xorl
push
push
jnp,pt
bound
mov
je
or
pop
lods
loop
xchg
rcrb
imul
in
jae
push
pop
dec
in
adc
divps
ss
shlb
add
stos
aad
pop
popa
adc
inc
int
pop
add
pmaddwd
mov
sti
shrl
fisttps
into
adc
ja
inc
int3
jge
ss
pop
sbb
addr16
mov
movsl
shl
xchg
push
out
mov
push
push
lods
push
push
and
xchg
ret
inc
sub
pop
jnp
stos
xor
sbb
or
adc
call
or
les
pop
adc
adc
les
xor
cmp
adc
fs
hlt
push
aas
dec
and
test
insl
je
je
adc
mov
pusha
ss
stos
xchg
imulb
dec
aaa
scas
jns
xchg
movsl
pop
fs
das
cld
enter
icebp
mov
push
mov
ret
push
inc
test
jle
inc
mov
ss
pop
jnp
cmp
mov
test
sub
test
add
test
ds
mov
or
add
push
and
negb
cmp
mov
push
cwtl
adc
mov
dec
leave
add
nop
pop
inc
push
pop
jmp
pop
mov
sub
repnz
cmc
cmpb
adc
adc
jle
inc
or
jg
jmp
dec
rcrl
jg
and
mov
pop
pop
rolb
cmpl
fucomip
inc
in
and
pop
push
cmp
adc
cmp
jbe
add
ret
aaa
data16
in
addr16
test
inc
dec
iret
out
outsb
iret
dec
push
push
sahf
jo
enter
cld
xor
cmp
push
fs
lock
inc
hlt
xor
push
fmull
movb
adc
mov
push
not
mov
aam
ja
or
cmp
push
lea
xor
test
fdivr
outsb
aam
xchg
sar
inc
pushf
iret
popf
int3
mov
or
xchg
lock
push
in
rolb
movsl
mov
lret
mov
xchg
sub
fildl
pop
lea
in
lea
jge
inc
cld
or
push
aam
imul
inc
sar
xor
or
shlb
adc
lea
inc
sbb
into
idivb
inc
and
jl
pop
popf
pusha
dec
js
add
push
je
test
popa
movsb
jnp
cmp
jne
adc
jle
cmp
pop
int
pop
pop
rorb
adc
or
subl
cmp
push
pop
fcomps
mov
testl
jl
xor
ret
push
push
int
aas
pop
fldl
ja,pn
push
jne
shrl
and
push
adc
pop
jbe
sbb
mov
lods
ret
outsl
idivb
dec
ss
or
pop
cmpsb
jmp
scas
outsb
insl
inc
hlt
cmp
adc
mov
cli
add
pop
push
pop
cmp
sub
add
aam
loop,pn
je
push
sub
mov
pop
sub
dec
aaa
adc
or
call
jno
mov
aaa
sbb
and
push
mulb
mov
mov
pushl
or
leave
jmp
or
jl
add
cmc
mov
sub
cmp
jl
add
jg
shl
push
add
push
sub
push
xor
xor
leave
cmp
fistpll
sbb
push
or
push
fbstp
repnz
push
mov
jo
add
adc
fs
flds
or
jle
pop
sub
sar
hlt
push
push
fimull
pop
sub
mov
xchg
fwait
nop
call
leave
jge
fsubs
les
fs
mov
mov
bound
fdivs
and
mov
mov
lret
jmp
xchg
push
adc
xor
ja
cmpsb
pop
inc
jge
sub
push
cmp
sti
and
mov
and
mov
or
mov
mov
sbb
xchg
leave
and
inc
sub
push
lock
adc
add
popf
in
jae
and
or
in
inc
or
xchg
aas
pop
arpl
aaa
sbb
pop
jne
pop
in
rclb
jmp
lods
je
inc
lods
scas
pop
push
or
or
lock
mov
or
or
sbb
push
sub
push
sbb
push
pusha
or
stos
inc
cmp
loope
sbb
adc
loop
imul
adc
sub
jne
push
and
xor
add
hlt
lock
shll
and
push
jne
sbb
dec
push
mov
insl
add
pop
leave
js
mov
add
roll
mov
sub
insb
fisubl
ja
orl
push
add
sub
mov
adc
mov
lret
sbb
sbb
sbb
sti
mov
and
sub
mov
mov
fld
subb
cli
xadd
inc
aad
movsb
pop
dec
and
loope
jle
push
cmp
push
adc
and
mov
clc
and
pop
cmpl
in
push
or
add
adc
add
ss
jbe
in
mov
rorl
add
clc
pop
repz
cmpsb
push
cld
pop
decb
cmp
sti
add
add
pop
mov
loope
aad
addr16
arpl
movsb
mov
xchg
out
fcompl
mov
outsb
inc
dec
cmp
dec
jo
popa
push
or
push
sub
mov
leave
and
out
and
pop
je
cmp
je
mov
mov
inc
add
push
pop
flds
daa
inc
fsts
jo
push
movzwl
push
adc
sub
test
cli
rorl
ljmp
test
test
jbe
push
test
dec
xor
xchg
in
mov
bound
sahf
jbe
out
or
pop
xchg
push
pop
mov
dec
cmp
add
fnstenv
cmp
inc
mov
or
mov
cs
das
lahf
std
or
js
push
inc
dec
ficoml
jl
mov
add
cmp
ja
or
mov
clc
rcl
rolb
dec
sbb
pop
add
lahf
xchg
sbb
ret
pop
mov
or
das
mov
sti
or
or
inc
mov
mov
pushf
push
sbb
pop
sbb
push
or
push
aaa
push
or
or
or
and
and
or
mov
or
mov
cmp
push
std
push
push
adc
adc
cli
movsl
adc
jo
cmp
ljmp
mov
insl
add
adc
shlb
sub
pop
aad
les
add
leave
jne
lahf
ret
pop
faddl
dec
or
js
dec
or
fdivrs
sbb
js
lods
std
xchg
or
outsb
inc
js
lea
adc
xchg
pop
dec
jne
mov
mov
mov
fnsave
mov
cs
push
je
mov
xor
fiadds
jecxz
shll
dec
cwtl
cmp
pop
mov
sbb
testb
je
dec
je
add
adc
or
pop
stos
push
and
jnp
mov
jmp
or
mov
add
adc
rcrb
add
inc
mov
pop
filds
xchg
sub
mov
ror
rcll
xchg
cltd
movl
mov
fwait
pop
xchg
imul
jmp
push
add
shr
inc
cmp
pop
shl
lea
push
or
stos
fidivs
aad
xchg
insl
push
xlat
pop
push
push
add
cld
clc
cmp
jg
pop
push
cmp
je
inc
jmp
and
ds
pop
cmp
fcmovnbe
push
push
cmp
pop
sahf
add
push
or
pop
mov
and
jnp
fsubs
jbe
sbb
lock
fisubs
inc
call
or
sub
lea
sbb
adc
fmull
jbe
ret
add
lods
dec
push
int3
jmp
sub
or
sub
in
lds
sbb
aad
test
sbb
cltd
xchg
loope
icebp
xchg
ret
lea
mov
arpl
xchg
nop
mov
xor
dec
push
cltd
sub
push
mov
insb
xchg
fld1
fdivrl
insl
add
rorb
inc
imull
bound
pop
or
or
jo
or
ja
and
ret
pop
cmp
jg
fiaddl
fwait
stos
stos
mov
sbb
scas
les
sub
and
jne
sbb
divb
dec
std
das
sub
sub
in
test
and
or
and
jg
enter
pop
les
enter
inc
pop
and
add
dec
je
adc
inc
ss
mov
push
xchg
inc
pop
mov
add
inc
test
mov
push
loop
ret
cmp
push
into
pop
push
xchg
sub
mov
adc
es
pop
outsb
or
inc
push
lret
mov
icebp
cltd
push
push
arpl
cmc
sbb
outsl
inc
lcall
and
xor
clc
and
lea
jb
mov
loopne
lret
jbe
jg
adc
mov
add
add
sub
and
ss
cmpl
sbb
test
out
sbb
inc
sbb
pop
fs
sub
gs
lock
sbb
push
inc
cmp
mov
mov
shr
mov
dec
test
or
push
lea
pop
lea
or
mov
mov
xchg
xchg
movb
add
nop
insb
test
or
mov
push
or
je
mov
das
je
dec
loop
push
sub
push
pop
sbb
xor
sahf
and
adc
orb
flds
stos
fwait
push
or
jnp
scas
or
or
dec
ja
jmp
cmp
jne
daa
or
sbb
adc
dec
add
cmp
pop
or
add
push
sub
mov
out
push
pop
jno
adc
idivb
adc
pop
sub
sbb
mov
add
sub
bswap
outsl
xor
ja
mov
mov
out
mov
xchg
push
cld
loope
nop
sbb
scas
sub
je
adc
mov
jne
add
sbb
jecxz
insb
push
incl
aam
mov
mov
cmp
subb
adc
sub
data16
add
sahf
nop
mov
jmp
inc
inc
cs
movsb
addb
jp,pn
push
imull
fimuls
inc
mov
sbb
xor
cmpl
and
mov
inc
mov
or
inc
dec
addr16
and
inc
sbb
mov
mov
enter
dec
dec
jo
aad
inc
or
ljmp
push
jp
adc
mov
or
jae
add
mov
adc
cmovge
xor
push
rolb
and
add
arpl
push
sar
push
cmpl
je
jle
outsl
jge
ret
adc
jns
cmp
xchg
mov
xor
out
sbb
fdivrp
sahf
and
bound
adc
or
pop
cmc
xor
nop
push
roll
add
xor
outsl
movsb
mov
inc
addr16
jo
adc
test
je
pop
dec
cmpl
fnstenv
sbb
aaa
cmp
in
loopne
mov
lods
cmp
pop
cltd
fcomip
pop
loopne
inc
enter
mov
bswap
pop
dec
cmp
into
and
std
lods
mov
enter
push
cmp
addr16
sub
or
shrl
pop
in
xor
lods
movsb
mov
adc
fnstsw
xorl
cmp
mov
mov
mov
cmp
xor
pop
push
loope
pop
dec
add
fdivs
je
pop
js
sbb
ret
sub
lea
int3
adc
or
inc
mov
lods
push
jnp
clc
add
sub
lods
push
lea
or
or
or
push
jle,pt
mov
js
orl
out
shlb
push
xorl
mov
mov
jle
pop
stos
push
popa
hlt
adc
cmpsb
sbb
and
push
adc
mov
mov
loope
cltd
cmp
loope
daa
dec
into
push
ljmp
adc
lods
add
ret
sub
pop
insb
lods
xchg
lea
sbb
or
add
adc
add
push
push
mov
sbb
inc
addr16
or
jo
pushf
push
sub
and
pushf
push
xor
jle
cmp
pop
inc
and
xor
test
sbb
outsb
aas
inc
mov
je
mov
or
dec
jo
in
je
imul
jne
sbbb
and
loope
and
and
mov
adc
lock
jne
stos
push
sbb
dec
mov
mov
sahf
sbb
cmp
push
push
dec
jl
js
inc
push
inc
cld
pushl
daa
add
dec
ret
dec
fsts
insb
cmpl
ss
sahf
push
cmp
dec
pop
add
or
or
and
in
insb
dec
enter
push
pop
ja
fiaddl
mov
mov
adc
hlt
sub
mov
inc
adc
test
inc
ror
xchg
xor
mov
cltd
decb
gs
jle
pop
xchg
sub
adc
inc
or
shl
or
xor
dec
les
mov
in
scas
out
dec
je
add
dec
sub
shl
neg
loopne
sbb
mov
or
sub
or
xor
sbb
inc
lea
sbbl
aad
mov
push
loope
or
jl
mulb
xlat
lret
cmp
inc
adc
loopne
mov
imul
xlat
insl
sub
enter
sub
xchg
fnstenv
sub
and
mov
sbb
add
and
mov
push
in
adc
mov
jecxz
push
dec
inc
dec
inc
pushl
aam
insl
sub
outsl
jnp
or
sub
pop
sbb
xor
adc
enter
popa
mov
cmp
pop
outsb
in
aaa
inc
imul
inc
and
add
and
mov
sub
jle
mov
xlat
daa
mov
mov
add
movsb
cmpl
add
jo
outsb
in
jge
gs
lahf
fs
pushl
pop
andl
add
add
add
ret
and
jo
inc
ror
out
ja
ja
jno
push
mov
push
jecxz
cs
mov
adc
aad
sub
push
add
mov
mov
or
push
or
xchg
dec
add
je
or
sub
dec
jge
popa
ret
jae
test
sbb
xchg
sub
sub
aaa
and
enter
in
call
sub
and
and
and
enter
or
dec
incl
push
rcrl
push
jb
ret
sub
fcomps
pop
inc
add
mov
mov
enter
adc
shl
add
inc
cmp
mov
icebp
fldl
jl
fiadds
xchg
lods
pop
push
pop
lcall
cmpsb
and
imul
js
push
sub
aam
fdivp
push
or
mov
in
add
ljmp
push
jns
adc
or
rep
andl
xor
sub
jb
icebp
sub
sub
push
pop
adc
fdivr
adc
enter
sahf
add
ret
mov
and
adc
rolb
or
add
stc
mov
test
xchg
inc
enter
dec
addb
add
scas
std
sbbb
add
test
pop
iret
add
lea
lea
movsl
movsw
push
out
push
in
lock
mov
subl
lea
mov
lods
inc
decl
cmpb
jne
mov
or
sti
jae
mov
mov
and
sub
jg
call
fdiv
fstpt
fbstp
add
mov
js
cwtl
stos
in
std
cmp
mov
out
ret
or
test
mov
push
xchg
lret
mov
je
sahf
mov
xchg
je
cmpl
jl,pt
sbbl
cmp
cmp
or
aas
jne
or
pop
cs
or
aad
or
out
dec
movsl
lcall
dec
fadds
jg
mov
rclb
adc
mov
cmp
jnp
add
push
and
jge
je
adc
aaa
arpl
or
insl
xchg
in
jnp
add
add
add
rcl
push
clc
dec
popf
adc
mov
test
insb
xchg
outsb
fdivr
add
inc
push
sbb
cmp
je
xchg
mov
enter
lock
jno
mov
lea
fwait
arpl
mov
movsb
clc
inc
mov
movl
mov
mov
cmp
add
pop
add
pushf
jle
mov
popa
adcl
lret
btc
stc
add
jl
jmp
add
and
and
lea
mov
sub
inc
sub
das
cld
cmp
fnstcw
mov
dec
test
out
and
or
or
and
es
je
jne
inc
mov
fdiv
inc
lods
mov
cmp
jbe
push
push
mov
xchg
adc
mov
je
mov
out
jo
cmp
les
xor
mov
add
mov
xorl
rorb
add
mov
inc
adc
fsubl
mov
xor
loop
jle
sbb
icebp
mov
jno
incl
mov
jg
loop
jle
mov
add
mov
add
neg
mov
mov
or
dec
mov
dec
jg
inc
daa
inc
int3
lds
xor
out
dec
ljmp
mov
pop
push
sub
push
shr
test
mov
sub
cmp
clc
pop
push
mov
mov
rol
dec
mov
cmp
lret
aas
scas
cmp
jge
mov
mov
mov
inc
inc
and
mov
bound
inc
cmpb
or
outsl
mov
pop
mov
sub
add
mov
push
adc
dec
or
cmpsb
addl
mov
mov
orb
mov
jg
mov
sbb
in
inc
adc
add
or
sbb
loope
add
jno
push
add
add
sti
jnp
roll
mov
inc
add
xor
shlb
mov
jnp
mov
or
pop
jg
ss
cmp
push
mov
jne
xchg
lret
jge
negb
ljmp
movswl
jmp
mov
ljmp
jge
mov
orb
or
jl
add
mov
lock
pop
pushf
lcall
adc
test
or
cmp
pop
jp
sahf
inc
shr
jl
cmpl
jne
jbe
cmp
mov
sub
inc
cmp
jg
lods
hlt
sub
add
sbb
mov
mov
or
divb
cmp
loopne
inc
clc
mov
add
sub
pop
push
pop
sub
jns
divl
leave
xor
or
or
add
xorl
cmp
test
add
out
outsb
mov
mov
movsl
sub
xchg
movsl
stc
incl
jne
test
je
mul
daa
das
in
mov
lea
adc
mov
or
cmp
decl
enter
jl
inc
pop
add
mov
int
push
or
pop
dec
xor
lahf
inc
sar
cmp
mov
mov
jle
mov
mov
sahf
sub
enter
subl
mov
xlat
inc
outsb
cmpb
dec
test
mov
add
xchg
push
mov
inc
inc
sub
frstor
push
pusha
xchg
add
andl
inc
adc
or
imul
dec
adcb
or
mov
les
pop
or
inc
inc
sub
jl
and
mov
cmpsl
outsl
scas
xor
or
jge
pop
pop
mov
xor
inc
dec
test
cmp
dec
push
arpl
mov
mov
movsb
and
fsubs
hlt
add
dec
inc
pusha
rcrl
push
xchg
es
ljmp
mov
mov
das
dec
sbb
push
mov
xchg
fxtract
cmp
cltd
xchg
sbb
cmp
cmp
inc
cmp
jge
jnp
movsb
lea
xor
adc
xor
sbb
xor
sbb
aas
adc
sbb
mov
dec
in
in
sbb
cmp
and
pop
mov
aaa
cld
dec
adc
jg
xchg
imul
sbb
leave
or
adc
cld
jecxz
xchg
jbe
inc
inc
and
subl
std
jns
mov
mov
mov
xchg
jl
xlat
xchg
sbb
and
ret
cld
or
mov
cmp
sub
and
dec
in
cld
and
imul
push
and
in
loop
dec
shld
in
call
stc
and
xchg
stc
js
mov
inc
pop
mov
adc
mov
sub
inc
sub
push
arpl
repz
or
add
jno
sbb
or
and
adc
test
xor
aam
inc
leave
mov
cmp
or
pusha
leave
cmc
inc
and
and
lcall
jg
mov
cmp
xchg
adc
xchg
or
mov
ret
mov
inc
lea
and
adc
push
les
push
push
sub
pop
adc
add
jbe
sub
add
push
sub
sub
jg
xor
sbb
or
mov
ret
ret
mov
lcall
sub
imul
hlt
jnp
mov
add
or
jmp
push
add
sbb
or
dec
xchg
inc
jae
jp
dec
pop
or
adc
or
jg
add
stc
or
dec
ljmp
mov
popf
cli
faddl
sbb
in
or
push
sub
add
bound
mov
cld
mov
jp
jns
jecxz
or
push
xchg
cmp
orb
push
push
mov
jge
pop
dec
jle
mov
iret
into
inc
call
sub
push
enter
fadds
test
add
test
dec
pusha
mov
pop
cld
in
add
adcl
pushw
jmp
pusha
add
nop
ror
andb
jp
mov
outsb
cld
xchg
jb
lea
test
test
pushf
and
aad
loopne
out
mov
jle
mov
sub
or
cmpsl
add
mov
imul
xchg
pop
mov
mov
sti
loop
sbb
mov
mov
repz
sbb
or
xor
decb
fwait
inc
push
lods
dec
pop
fisttpl
mov
add
pop
insb
jmp
mov
pop
test
dec
scas
shll
jae
mov
enter
roll
and
mov
dec
dec
dec
lods
xchg
gs
dec
lret
mov
xchg
or
lret
inc
sub
fcmovne
adc
in
sub
push
jg
mov
jge
imul
sub
mov
rcr
jb
es
inc
rclb
jp
jne
add
and
fs
lods
pop
and
xor
lret
les
push
sub
rcll
jns
les
and
and
and
hlt
cmp
inc
mov
imul
orb
fs
adc
ret
sbb
out
mov
lret
xor
or
fidivrl
aas
sbb
mov
fs
jns
add
outsl
fidivl
mov
inc
mov
and
pop
rorb
das
sar
sbb
xchg
cltd
das
enter
fldt
inc
pop
jb
pushf
lcall
mov
dec
mov
or
dec
in
and
pop
adc
xchg
ja
dec
aas
lea
mov
xor
rorb
xchg
dec
stos
cld
clc
jbe
je
jae
xchg
cld
mov
mov
addr16
loopne
pop
add
xor
call
mov
ficoms
mov
data16
xchg
push
test
movsl
push
ss
adc
pop
orb
lahf
adc
mov
or
mov
xor
ror
jl
xor
mov
dec
dec
lock
xor
int3
dec
cwtl
xor
adc
jmp
xchg
xchg
cld
mov
dec
jge
test
dec
hlt
sub
and
sub
sub
aam
and
mov
roll
mov
sbb
lret
orl
je
cmpl
push
pushl
and
jno
cltd
call
sbb
sbb
and
shrb
decl
xor
adc
out
cmpl
mov
xor
out
mov
stc
push
xor
mov
xchg
xchg
mov
pop
je
inc
xor
dec
data16
add
mov
std
mov
inc
mov
pop
jae
xor
push
jae
sub
sbb
cmp
lds
ljmp
out
sbb
or
mov
add
shll
inc
add
ss
popl
cmp
lock
in
into
popf
adc
xor
rclb
jne
xor
add
sarb
mov
outsb
lea
icebp
ffree
and
inc
add
dec
and
dec
adc
add
adc
mov
adc
insb
insl
inc
push
data16
mov
pop
fidivs
adc
dec
arpl
sti
xchg
adc
mov
xor
or
or
popf
sbb
insb
ret
push
cmp
cli
sub
pop
adc
sbb
shrl
fsubrs
pushf
or
and
or
add
and
jl
jne
xchg
mov
insb
aaa
pop
add
sub
push
lds
idiv
jmp
dec
cmp
lods
xlat
mov
ret
mov
inc
fdivrl
pop
xchg
dec
lret
xor
std
mov
cmp
or
push
nop
pop
popf
pop
inc
mov
repnz
jge
mov
inc
xchg
mov
inc
mov
xor
and
test
das
jne
push
sub
mov
mov
add
arpl
cmp
imul
mov
push
sahf
in
xchg
mov
mov
pop
jne
stc
std
push
push
jne
and
jae
push
cmp
add
and
enter
cli
push
push
roll
inc
subl
cmpl
sbb
in
push
mov
sbb
insb
leave
jl
pop
and
xchg
fs
in
ret
inc
scas
or
lea
mov
int3
adc
test
sbb
shr
pop
in
xchg
push
mov
mov
mov
add
out
jl
movsb
inc
add
pop
jbe
cmpl
call
cs
xchg
ljmp
sbb
mov
push
add
mov
outsl
in
pushl
push
mov
sub
cmp
sbb
jb
lea
icebp
ja
inc
lret
loopne
shrl
jl
iret
shl
inc
dec
cmp
xchg
push
jbe
jne
sbb
sbb
in
mov
inc
das
mov
shr
inc
cmp
push
clc
jle
jmp
sub
mov
and
ror
jmp
push
loop
push
pop
mov
mov
test
ret
pusha
stos
shl
xchg
or
lds
add
cmp
les
lds
in
pop
pop
cmp
ja
or
call
outsl
pop
sub
mov
mov
aam
imul
add
adc
data16
push
jo
in
sub
mov
xlat
lods
inc
jecxz
insb
dec
test
push
or
cmp
sub
aad
sbb
loopne
enter
pop
adc
incl
or
add
add
add
xchg
out
dec
std
inc
inc
shl
and
jp
scas
push
in
jb
int3
addr16
loope
mov
mov
pop
xor
lods
mov
mov
pop
sbb
sbb
push
jbe
adc
lods
cld
lret
ja
add
mov
adc
jne
fistl
push
ficompl
mov
in
push
icebp
mov
mov
add
fimull
pop
mov
mov
and
and
inc
cli
inc
mov
add
pop
push
sub
insb
and
ficompl
dec
and
mov
ljmp
or
pop
sbb
cmp
bound
sbbl
aam
mov
add
mov
pop
or
mov
adc
and
test
xor
jae
mov
ret
xor
sub
jl
add
lock
mov
add
inc
test
lods
mov
sub
mov
jb
and
jmp
or
aaa
or
sub
mov
adc
mov
add
cld
fwait
push
enter
inc
dec
push
add
pop
mov
adc
gs
and
jae
popa
adc
out
or
outsb
push
arpl
and
xor
std
sub
out
dec
inc
dec
dec
cs
add
or
je
jo
imul
gs
fbstp
push
xchg
xor
inc
jb
mov
add
das
in
add
stos
inc
sbb
inc
testb
imul
je
fistl
or
pop
addl
in
sub
mov
dec
fnsave
jns
int
pusha
fsubs
pop
push
lahf
fnstsw
or
jae
popa
mov
inc
out
outsb
popa
stos
lret
sub
or
gs
out
pusha
push
popa
arpl
jae
pop
inc
jbe
sub
pop
arpl
test
fidivl
adc
cmp
and
fwait
cs
dec
and
mov
jbe
push
and
jle
insl
inc
fs
inc
arpl
add
add
aaa
mov
inc
mov
mov
add
stc
mov
inc
add
dec
add
cmpsb
jmp
mov
push
add
inc
cmovae
inc
mov
add
push
add
add
inc
pop
dec
add
or
inc
and
pop
fistpl
adc
dec
dec
dec
add
cltd
scas
dec
pop
inc
pop
push
add
inc
dec
sub
push
add
push
outsb
jae
imul
push
sbb
xlat
mov
pop
and
dec
xchg
scas
jnp
fsubs
or
push
add
xlat
lea
inc
or
pop
cltd
das
jbe
xor
push
mov
add
inc
inc
adc
or
dec
and
jg
dec
push
push
loopne
push
jbe
push
add
subb
inc
dec
adc
aaa
sbb
xlat
add
cmp
rorb
sar
idivl
sbb
pop
jle
mov
jae
add
insb
push
fs
dec
inc
and
inc
inc
ud2
ss
pop
pop
sub
daa
and
int
cmp
sbb
jg
subl
cmp
aas
daa
adc
fwait
je
addb
add
add
movsb
jnp
adc
add
incl
std
cmpb
add
gs
dec
dec
push
dec
dec
enter
int3
sti
add
or
jbe
daa
mov
xchg
xor
arpl
jg
idiv
or
or
or
or
add
add
add
std
insb
enter
ret
and
leave
jbe
add
and
or
cmpsb
mov
inc
and
and
insb
xchg
and
and
push
or
ret
inc
sub
sub
inc
and
add
pop
pop
dec
and
ret
xor
pop
mov
mov
ret
mov
dec
dec
dec
and
sbb
xchg
pop
pop
push
data16
insl
mov
push
mov
mov
add
in
jne
dec
push
pop
sysexit
rorb
fldenv
and
pmulhuw
mov
lret
dec
fwait
dec
mov
sub
or
xor
sbb
add
aad
adc
test
sti
mov
sbb
sbb
or
insl
aaa
xlat
cs
xor
add
adc
lret
sbb
mov
or
adc
xchg
cmp
add
popa
ja
or
push
cmp
arpl
fnstcw
or
or
lds
popf
pushf
rclb
cmp
add
cmp
sub
xor
test
or
add
xor
mov
push
das
or
push
imull
sub
mov
add
testb
pop
mov
xor
mov
add
and
or
ret
sbb
cmc
fsub
fcoml
testb
xor
xchg
add
add
push
mov
int
std
in
push
pop
and
add
add
or
decb
mov
pop
mov
or
pop
mov
int3
mov
add
xor
mov
adc
pop
add
cld
int
fsubs
adc
and
and
insl
adc
adc
add
sbb
pop
add
add
push
pop
ja
adc
jnp
push
jnp
testb
add
adc
lods
cltd
int3
push
push
or
pop
add
or
out
push
mov
mov
xor
jbe
in
or
mov
adc
adc
add
and
insb
inc
pop
out
addr16
dec
sbb
das
pop
sbb
add
sbb
std
add
mov
push
lret
adc
or
and
lcall
sbb
or
nop
dec
or
out
mov
popf
add
rolb
sbb
xchg
aaa
and
jge
inc
cmp
cmp
adc
daa
mov
add
shll
cs
push
adc
in
sbb
aad
pop
push
fisttpll
sbb
dec
mov
pop
sbb
sbb
sub
sub
mov
decl
pop
lahf
adc
shlb
pop
in
or
adc
push
mov
sbb
arpl
xchg
or
push
dec
outsl
out
or
sub
call
adc
inc
cmpsl
and
push
inc
popl
int3
or
es
ja
inc
or
pop
shlb
pop
inc
test
push
xor
shrb
dec
push
dec
jnp
sbb
dec
sbb
sbb
sbb
or
adc
dec
inc
jge
adc
mov
or
sbb
adc
sbb
movb
inc
popf
push
pop
shl
fadd
daa
fimull
dec
cmp
xor
out
jbe
std
sub
xchg
mov
inc
movsl
iret
dec
sahf
sub
sub
or
jl
or
sub
inc
push
dec
sub
movb
inc
xchg
aaa
xchg
inc
es
aaa
arpl
push
add
sbb
add
xor
pop
popa
rorb
jmp
imul
or
bound
or
mov
xor
fsubl
or
data16
ret
add
or
dec
leave
sgdtl
adc
loope
pushf
sbb
cmp
test
or
inc
orb
es
mov
pop
ds
jge
dec
leave
push
repnz
add
inc
add
test
add
popf
inc
xchg
or
lods
xor
fidivs
adc
nop
cmp
int
adc
inc
pop
inc
push
cmp
or
inc
or
xchg
inc
dec
call
daa
sbb
or
sbb
enter
push
dec
daa
loope
sbb
xor
sub
add
xchg
jge
dec
popf
sbb
or
fsts
add
xchg
xor
aas
or
adc
xor
xchg
adc
add
inc
push
add
mov
pop
xchg
xor
inc
pusha
pusha
sub
addr16
xchg
and
pop
pop
push
xchg
xor
pop
daa
and
movlps
adc
jnp
imul
push
mov
jmp
lret
xchg
adc
daa
rorb
orb
or
cwtl
xor
aaa
dec
enter
pusha
arpl
or
jo
xor
addr16
cmpsb
xor
jns
imul
outsl
push
pop
adc
or
and
imul
adc
mov
xchg
or
test
mov
and
sbb
mov
push
test
ret
fs
or
sub
test
push
push
mov
sub
jbe
pop
ret
cmp
sbb
sbb
xchg
lock
adc
jbe
fnstenv
push
rorb
ja
and
fs
js
das
lock
es
jns
xor
pop
cmp
jge
es
pop
add
sarl
ret
push
adc
or
notl
jnp
mov
ss
sbb
xchg
sysret
xchg
mov
insb
adc
mov
cmp
or
incl
adc
dec
pop
mov
push
rolb
add
or
adc
inc
pop
dec
mov
sub
xchg
xor
cmp
or
inc
and
inc
cwtl
xor
push
add
je
xor
ud2
pop
inc
dec
dec
ud0
dec
movups
loope
leave
or
and
sbbb
xor
sysret
arpl
push
add
popa
ret
adc
or
xchg
sahf
sti
dec
cmp
and
arpl
arpl
xchg
hlt
sbb
pop
lea
cld
cmp
push
movsb
cmp
test
ret
cs
dec
negl
sub
jno
push
adc
mov
dec
nop
add
insb
sub
xchg
add
adc
sbb
cmc
xchg
cmpb
orb
dec
dec
or
pop
lcall
adc
movsl
and
push
out
sbb
push
movsb
lret
xchg
xor
xchg
adc
in
adc
sub
cwtl
xchg
adc
in
sbb
leave
or
cltd
popf
or
xchg
pop
sbb
orl
mov
cwtl
cmp
std
pushf
xchg
cmc
dec
mov
push
inc
cmp
repnz
push
dec
sarb
dec
stos
lods
pop
mov
js
loopne
mov
xor
scas
mov
repnz
xor
sbbb
loope
addr16
lods
adc
xor
add
ljmp
or
int3
or
push
sbb
adcl
jns
cwtl
inc
cmp
xchg
xor
inc
cmp
pop
or
adc
add
mov
and
add
cs
xchg
cmc
popa
test
repz
push
add
shl
jo
ret
jge
xchg
and
xchg
mov
lcall
push
nop
or
scas
sbb
sbb
cli
mov
or
adc
or
or
inc
dec
jno
add
cmp
mov
mov
mov
adcl
ret
mov
or
ja
sub
jns
adc
mov
lea
cwtl
sub
lock
inc
jge
punpckhwd
repz
mov
and
sbb
stc
dec
mov
and
outsl
or
or
ss
daa
xchg
nop
and
mov
adc
or
sbb
sbb
pop
lahf
mov
push
in
dec
leave
mov
jo
mov
insb
insb
inc
shr
cmpl
add
ret
mov
or
and
mov
sbb
sbb
add
adc
leave
enter
dec
and
or
push
xor
rclb
adc
inc
adc
or
xchg
adc
adc
fists
cmp
ljmp
int
test
xor
jns
add
leave
cmp
leave
enter
ficomps
or
cs
inc
jne
or
or
jno
aam
outsl
dec
cmp
inc
repz
in
or
jno
sub
vmovdqu
adc
jno
pop
mov
enter
mov
or
add
ret
mov
frstor
xchg
xchg
push
pusha
cltd
or
jmp
aam
xor
and
call
dec
add
inc
rorb
leave
push
repnz
mov
add
stc
mov
flds
test
sub
adc
xor
xchg
or
popf
xor
daa
dec
lods
xor
jo
fidivs
mov
xchg
aas
or
sbb
mov
lret
push
pop
or
sarl
imul
pop
adc
push
and
lds
or
jae
push
jnp
adc
movsl
adc
mov
add
and
andl
decl
pop
sub
adc
in
add
add
add
movsb
loope
outsl
out
mov
adc
fadds
cltd
push
call
pop
or
es
jno
sub
or
int
addr16
sub
jo
shr
cmp
out
jge
cmp
sti
sub
nop
lods
shrl
rorb
add
ret
popa
add
add
push
shlb
dec
stos
leave
stc
repz
hlt
mov
test
lock
hlt
sbb
icebp
or
xchg
fs
into
in
hlt
or
xchg
or
imul
test
xor
push
pop
push
daa
rcr
pusha
or
pop
mov
enter
pop
cmp
lret
cmpsb
or
fs
pop
add
sub
and
jnp
pop
push
adc
and
sahf
adc
adc
sub
lret
push
sbb
mov
nop
pop
outsb
sbb
sbb
add
adc
jb
pop
bound
cmp
clc
and
cmp
pusha
out
subb
and
cmp
orl
fwait
add
pop
jnp
pop
mov
add
pop
dec
add
shl
dec
adc
add
and
xchg
in
and
push
fucom
add
inc
add
pop
das
ror
out
add
incl
xorb
cmp
sub
jne
mov
add
lea
adc
pop
insb
mov
nop
jge
adc
gs
xor
mov
arpl
jmp
mov
pop
add
mov
roll
and
pop
xchg
out
jnp
cmp
jb
test
in
mov
insb
fwait
cs
jmp
add
add
xor
pop
adc
push
hlt
pop
add
lahf
sbb
lock
mov
mov
jnp
cmp
outsl
jno
pop
adc
ret
jne
insl
xchg
int3
dec
aaa
adc
adc
pop
test
cmp
dec
xor
sti
das
jb
add
std
jo
outsl
mulb
insl
add
jae
dec
jo
and
repz
dec
and
cmp
bound
imul
insb
inc
pop
jb
lahf
pop
pop
popa
and
lea
outsl
mov
mov
insb
sbb
jno
es
test
pop
repnz
jno
adc
dec
inc
aaa
ss
popf
jo
je
insl
or
xor
movq
or
cmp
push
clc
cmp
add
jae
push
out
or
bound
popa
jbe
adc
fs
adc
sub
lahf
xor
sbb
sbb
sbb
addb
jl
inc
sbb
stos
add
xor
cmp
stos
andb
or
nop
mov
add
jg
flds
jb
notl
cmp
daa
add
sub
add
mov
or
xor
bound
dec
pop
jb
in
nop
pop
push
add
xchg
inc
push
mov
jae
dec
test
out
ret
mov
or
cmp
jo
adc
fwait
dec
pop
imul
pop
cmp
sbb
xor
test
sbb
push
push
inc
mov
dec
leave
pop
subl
add
and
mov
sti
mov
inc
push
xor
jmp
inc
sti
or
jne
outsl
jns
mov
or
sub
lea
dec
inc
dec
aas
imul
sarl
push
sub
jecxz
lcall
jns
add
add
xchg
je
pop
pop
insb
pop
pop
in
inc
add
fdiv
bound
inc
lods
dec
jno
dec
test
fwait
cmp
add
add
sbb
or
xor
sub
mov
sbb
dec
jb
push
orl
int
lds
jmp
push
nop
enter
inc
aaa
jbe
dec
xorl
pusha
add
xchg
or
pop
mov
daa
sub
inc
xlat
jne
push
mov
movsl
lods
add
loope
aad
orb
mov
push
arpl
imul
fdivl
test
inc
push
mov
xor
jns
and
push
out
daa
and
lds
jb
xlat
outsb
test
dec
outsl
test
pop
aad
aaa
icebp
and
adc
pop
outsl
pop
lea
fnstsw
pop
and
adc
mov
fisttpl
js
mulb
fstl
xor
mov
jo
imul
scas
sti
dec
andl
or
mull
stos
aaa
test
ss
movl
push
sub
jg
in
sub
and
ret
pop
in
dec
movsb
and
xorl
test
loope
outsl
insb
cmp
jecxz
jmp
fnstcw
mov
sub
push
out
je
fs
mov
outsb
in
insl
dec
test
popl
sub
arpl
adc
fbld
sbb
jne
xchg
mov
or
ljmp
insb
push
aaa
popa
negb
pop
int
dec
pop
jge
xchg
loope
sbb
jns
add
fwait
jne
jmp
jnp
push
push
sub
movsb
test
mov
movsl
inc
ljmp
mov
xchg
mov
cmc
and
pop
sti
or
push
pop
daa
inc
and
mov
sbb
dec
adc
aam
add
jo
out
or
in
jge
jp
shll
outsl
popa
mov
push
sub
jns
leave
call
add
es
je
outsl
sub
sbb
and
jmp
pop
xchg
or
inc
pop
cli
lods
roll
and
pop
and
cwtl
xor
adc
jnp
loopne
aas
jg
lods
bound
gs
push
aaa
pop
lret
lahf
sbb
push
pusha
pop
jne
adc
sti
data16
packuswb
cmpsl
jno
mov
sbb
adc
pop
lret
jecxz
ret
aaa
std
imul
addr16
jae
mov
pop
fwait
xor
sbb
mulb
sub
mov
ret
icebp
inc
outsl
inc
inc
sub
testl
jae
imul
or
enter
outsl
cltd
cmp
or
dec
adcl
jmp
arpl
sbb
sbb
pop
adc
jne
stc
xor
xor
test
scas
das
popa
dec
jp
cli
add
push
push
dec
mov
or
test
pop
daa
inc
ret
or
or
sbb
cmpl
pop
test
daa
ja
cmp
and
aaa
push
xor
fisubrs
xor
inc
outsl
xor
fstpl
lcall
imul
push
scas
loope
js
loope
out
sbb
ret
mov
and
adc
popf
push
sti
in
dec
pop
push
imul
and
dec
fstp
pop
mov
pop
lds
cmp
and
xchg
xchg
mov
xchg
xor
jno
cmp
inc
sub
mov
and
pop
ret
adc
mov
add
fildll
dec
pop
mov
and
jns
jae
imul
jnp
imul
cmp
xor
pusha
adc
js
in
sub
mov
out
push
add
and
popa
shll
mov
movsl
jnp
push
outsl
mov
mov
cmp
shrb
dec
sub
sub
gs
jae
add
mov
in
hlt
jnp
sbbl
or
arpl
xchg
add
fldt
out
hlt
leave
push
pop
push
pop
dec
movb
bt
gs
and
jg
mov
test
adc
shrb
jmp
cmp
cmc
bound
insl
orl
or
xor
and
and
push
in
int
mov
lahf
xor
sbb
jb
outsl
dec
rorb
lds
stos
outsl
dec
sub
mov
filds
sbb
rolb
es
or
xlat
adc
adc
enter
dec
and
test
sbb
adc
jmp
mov
jbe
and
sbb
shr
popf
inc
stos
xor
cltd
jmp
pop
pusha
subl
fsts
or
push
inc
int
and
xchg
fnstenv
jmp
add
mov
int3
push
push
ja
loopne
loopne
push
shr
xor
and
sbb
pop
sub
test
aas
ror
mov
lock
xchg
in
sbb
xlat
jmp
cmp
inc
push
xchg
lods
sub
jne
or
iret
sti
xor
dec
insl
jne
jno
cmp
in
sub
mov
fsts
inc
push
cmp
or
mov
inc
xor
add
aad
insl
sbb
or
push
repz
add
pop
pop
and
xchg
imul
loopne
push
dec
mov
sbb
rep
sbb
mov
or
xchg
in
ja
mov
push
aas
popa
das
and
aaa
pop
addl
push
inc
out
jo
mov
fldcw
or
addb
and
xchg
lea
push
mov
push
call
scas
out
adc
inc
fcoms
push
int
inc
sbb
mov
sbb
mov
xchg
dec
sbb
insb
flds
xor
les
add
push
ud1
mov
fadd
int3
lds
pop
jne
cmp
mov
lret
fldl
fdivs
sbb
add
cmpsl
fldcw
or
sub
adc
or
ret
sbbl
mov
push
inc
enter
sbbl
leave
push
or
gs
in
xor
jo
xor
sub
mov
outsl
dec
mov
mov
dec
leave
or
sub
xchg
adc
movl
inc
add
cmp
add
jo
xchg
insb
fildl
repz
je
scas
popa
fnstsw
and
pop
push
dec
rcrl
and
push
leave
jnp
aaa
int3
push
adc
imul
pop
add
xor
jp
dec
sbb
or
sbb
add
mov
out
add
out
leave
adc
adc
mov
sub
incl
pop
push
cmpsl
sub
loop
jge
rolb
push
outsb
and
orb
out
stos
xchg
adc
ret
neg
or
ds
pushl
movsl
mov
lock
add
lods
sub
int3
jnp
outsl
fcoml
incl
js
mov
sub
mov
test
jnp
pop
cmp
mov
mov
in
insb
fildl
push
mov
and
and
insb
in
std
les
dec
mov
ljmp
test
dec
add
call
js
pop
adc
jns
or
mov
clc
fiadds
cmp
fisttpl
ret
loopne
lcall
pop
sbb
cmp
test
scas
out
clc
out
jne
dec
fdivs
mov
lcall
lods
out
add
scas
notb
or
cs
pop
bound
sbb
imul
ljmp
mov
push
xlat
or
mov
lock
fistps
outsb
dec
nop
and
pushl
fucomi
test
in
lahf
dec
cmp
add
rep
sahf
fcomp
std
das
add
mov
out
sarl
jmp
out
out
mov
push
sti
pop
jg
cmp
lock
out
ljmp
push
out
cld
mov
lcall
std
ljmp
mov
cmpb
idivl
lahf
aam
ljmp
jg
or
in
inc
sbb
or
or
fdivrl
dec
std
pop
xlat
mov
jmp
xchg
idivb
std
fbstp
mov
out
cmpsl
jle
scas
neg
ljmp
cmp
ror
test
lock
rcl
call
ffreep
push
ret
xchg
sti
dec
inc
mov
add
push
pop
sti
inc
bnd
adc
push
movsl
in
scas
test
stos
xchg
inc
adc
incl
adc
adc
push
pop
mov
decb
push
fcomps
std
inc
pushf
sti
pop
idiv
mov
pop
xor
incl
lret
push
push
jle
push
std
cmc
outsl
add
arpl
push
rcl
mov
stc
fistps
and
lahf
cmp
nop
mov
mov
shlb
std
std
sub
cmp
cmpl
mov
jmp
movsl
stc
movsb
inc
in
fdivrl
jmp
idiv
inc
loopne
add
cmc
mov
jnp
sbb
decl
setle
mov
sti
inc
pushl
and
imul
lds
push
daa
fcmovnu
push
scas
and
je
xchg
pop
ja
jg
std
idiv
cmp
dec
in
repz
std
out
pushf
inc
xor
les
cmpsb
push
jae
xchg
incl
fildll
add
in
test
dec
stc
aas
cmc
push
rorb
pushl
rcll
xchg
adc
and
es
jl
or
shr
mov
fdivr
mov
shrl
sub
sub
inc
outsl
ss
inc
out
stos
mov
aad
movsl
dec
or
xchg
repnz
in
testl
repz
inc
call
inc
sarb
jg
mov
adc
cs
push
lods
adc
sub
cld
aam
cli
out
lock
into
sub
pop
pop
sbb
repnz
pop
sbb
sub
cltd
jg
aam
jnp
ret
cmp
jne
push
mov
sbb
divb
repnz
lahf
scas
movb
pushl
out
fbstp
inc
cs
popf
das
movsb
outsb
inc
and
push
cltd
ret
call
stos
pop
cmpsl
mov
cmp
ljmp
addr16
xlat
cmp
pop
cli
pop
mov
jb
lret
jo
nop
push
pop
mov
ja
js
ret
stc
cwtl
incl
mov
lock
loop
popa
xchg
xchg
shll
jmp
adc
xchg
adc
sar
lcall
dec
push
jle
fisubs
dec
xchg
mov
sahf
mov
mov
cmp
push
bound
mov
pop
mov
pop
mov
sub
pusha
mov
shl
push
push
inc
xchg
xchg
daa
sar
ljmp
dec
mov
rcr
es
call
pop
xchg
sub
sbb
call
and
xchg
xchg
lret
mov
jecxz
and
sbb
out
dec
pop
push
shlb
pushl
enter
ljmp
mov
mov
insl
insl
fidivrs
mov
add
mov
stc
push
gs
test
fistps
ljmp
jno
mov
call
or
push
das
mov
jnp
and
les
lods
cmc
test
mov
out
push
gs
add
cmpsl
jg
pop
hlt
ret
adcb
sub
cmc
lret
or
outsb
jnp
lods
je
inc
adc
push
pop
xchg
dec
ror
sub
sbbb
bound
inc
xor
imul
mov
or
insl
sahf
stos
cmp
adc
dec
filds
push
stos
mov
jle
push
pop
jnp
jg
cli
push
mov
inc
add
pop
nop
dec
es
sbb
pushl
inc
and
xor
adc
jp
mov
fmull
les
leave
adc
push
add
mov
xchg
dec
pushl
push
jecxz
inc
cmp
outsl
mov
lcall
pop
loopne
jp
push
mov
cmp
rol
fcmovu
cmpsb
mov
stc
in
arpl
addr16
lods
nop
sti
fsubp
pop
sbb
in
lcall
aas
mov
or
mov
xor
fidivl
push
and
jg
das
xor
push
xchg
je
shrl
fsubr
sbb
adc
push
icebp
cmp
das
das
cmpsl
adc
mov
addr16
std
dec
sbb
xlat
mov
jmp
mov
adc
les
imul
add
mov
shll
cmp
dec
and
jg
push
dec
push
iret
imul
icebp
inc
pop
clc
sub
data16
lret
lahf
insl
gs
mov
push
mov
push
cs
repz
in
inc
in
jg
ljmp
or
pop
jle
sbbl
aaa
jo
xchg
dec
push
push
dec
insl
or
jmp
sub
pop
stc
xchg
add
ljmp
jmp
mov
inc
pop
jge
lods
jmp
sub
out
sub
call
scas
scas
fcom
sti
xor
adc
pop
push
loope
adcl
popl
jle
aaa
xor
decl
stos
sbb
movl
push
mov
dec
out
gs
call
negl
mov
mov
push
mov
push
rorl
sub
pop
lcall
lcall
xchg
mov
sub
ljmp
mov
out
push
mov
sti
fwait
cmp
mov
push
out
mov
es
fsubl
xor
mov
ljmp
push
call
jns
mov
mov
xchg
rorb
ret
mov
inc
cmp
cmc
das
jge
pop
push
insb
scas
and
sbb
test
dec
sbb
or
cmp
or
call
into
faddp
xchg
push
mov
push
leave
int
push
sub
inc
ds
inc
rcll
push
push
xchg
mov
add
and
in
push
mov
fnstenv
fistpl
add
mov
adc
stos
jmp
pop
ds
clc
ljmp
mov
cli
jge
pop
daa
aam
cltd
mov
inc
sub
pop
lahf
add
lcall
loope
cmpsl
lds
mov
clc
xchg
mov
push
loopne
repnz
icebp
call
mov
lret
sbb
push
fwait
sub
pop
mov
push
sbb
mov
aas
aad
and
stos
dec
imul
mov
insl
arpl
mov
dec
or
or
sarb
into
xchg
pop
inc
lahf
call
pop
inc
jecxz
push
adc
decl
xchg
leave
fwait
xchg
inc
adc
loop
mov
es
imull
jmp
inc
sahf
lea
sbb
mov
sub
dec
jle
adc
mov
icebp
decl
sbb
fs
mov
int3
in
ss
popa
loop
mov
pushl
clc
inc
push
cli
cs
or
and
mov
pop
ret
rcll
adc
cmp
cmp
data16
int
in
call
cli
adc
das
inc
sarl
xor
push
insl
pop
mov
xchg
mov
xchg
or
daa
mov
and
cli
add
adc
fsts
sti
sbb
push
ss
das
lock
add
lcall
jp
inc
test
xchg
ja
stos
hlt
addb
adc
or
or
pop
push
sub
pusha
les
adc
outsb
mov
pushl
jle
push
xchg
cli
jmp
jle
push
push
or
and
stos
mov
incl
mov
js
xchg
push
mov
mov
xlat
mov
jmp
call
movsl
push
aam
aas
push
sbb
out
pop
aad
dec
push
or
lahf
mov
incl
push
fisubrs
inc
mov
out
in
push
sub
out
pushl
leave
sbb
repnz
push
mov
xchg
lods
sub
ljmp
mov
and
xor
out
inc
movsb
jmp
mov
mov
sub
lcall
add
rorb
xchg
enter
js
cmpsl
jbe
sbb
ds
mov
shrb
push
jb
xor
dec
and
incl
shll
int
gs
and
pop
jecxz
es
pop
mov
mov
jns
add
orl
in
shll
push
clc
arpl
popf
andb
loopne
test
sub
dec
mov
push
clc
fcomip
mov
sbb
add
push
fidivrs
inc
ss
lahf
test
mov
push
sahf
dec
dec
pop
push
popa
cmp
dec
sbb
jmp
lds
mov
pusha
aas
mov
and
cmp
into
dec
call
inc
xor
jmp
addr16
daa
pushf
lock
push
cmp
dec
inc
push
arpl
into
negb
sbb
sub
icebp
mov
xchg
ss
xor
inc
inc
jmp
mov
add
dec
xorb
pop
push
imul
incl
pop
in
cmc
loope
jo
popa
or
idiv
jae
inc
xor
lcall
idivb
leave
mov
sub
inc
scas
jmp
mov
out
dec
and
and
jle
sar
call
in
push
sbb
sub
mov
int
divl
cmp
popf
ficoms
pop
mov
jo
dec
ret
mov
pushf
pushf
jg
inc
aad
cs
loope
lea
stos
add
pushl
outsl
adc
hlt
xchg
aas
sbb
sbb
sbb
icebp
pop
lods
sbb
repnz
imul
mov
push
or
sarl
scas
push
xchg
dec
fs
scas
es
jg
call
test
sbb
lds
fildl
nop
inc
xchg
adc
inc
fildll
ret
outsl
mov
mov
cmc
fildll
pop
xchg
cmp
jmp
mull
adc
add
and
xor
mov
mov
push
xlat
mov
jle
fisttpll
xchg
push
pop
ja,pn
pop
mov
mov
xchg
push
pop
cmp
cli
in
sub
js
in
or
push
incl
outsl
dec
scas
in
sbb
cwtl
ss
dec
jge
xchg
push
mov
rcr
dec
and
sub
sub
mov
inc
push
xlat
adc
push
mov
and
fcomi
fistpll
ljmp
in
jb
movsb
xchg
outsb
xchg
dec
push
push
cld
dec
sub
adc
aas
pop
in
xchg
aam
dec
lock
imull
clc
inc
bound
ljmp
pushf
pop
or
sub
cmp
pushl
push
add
mov
ds
pop
test
out
mov
xchg
mov
inc
in
or
inc
or
or
push
fst
fs
push
mov
push
es
inc
pop
pop
popf
push
cwtl
cwtl
mov
mov
mov
dec
push
adc
xchg
push
mov
dec
daa
dec
inc
sbb
xlat
fninit
cmc
movsl
cli
movsb
js
mov
push
pushf
pop
ds
sbb
jmp
mov
jbe
mov
stos
sub
lea
aam
decl
ror
push
and
or
pop
pushf
pop
xor
scas
mov
cld
mov
outsb
pop
adc
test
pop
push
xchg
adc
xchg
mov
mov
lcall
mov
xor
arpl
popf
pop
les
push
or
ficoml
xor
fisubrs
imul
iret
xchg
cltd
jecxz
pop
dec
cli
pop
push
ja
fnstenv
lock
mov
shlb
cli
fildl
ljmp
cmp
xchg
pop
stos
mov
pop
mov
dec
negl
jl
ret
push
mov
xor
jle
inc
call
aam
stos
stc
std
cltd
cmpsl
adc
decb
inc
lcall
cld
cmp
inc
lahf
rcr
pop
xor
mov
cmp
cmp
int3
cmp
jae
push
and
lea
inc
test
jb
mov
decl
xchg
aaa
inc
push
fs
int3
mov
dec
jmp
sub
or
adcl
push
jl
pop
and
push
push
ret
mov
movsb
fildll
hlt
jg
out
jnp
adc
or
jge
mov
or
push
imul
jmp
cwtl
cli
pushl
mov
movsb
sbb
aas
jp
outsb
mov
int3
fcompl
add
std
lcall
add
gs
push
xchg
and
testl
push
ljmp
loop
jnp
push
xchg
aad
pusha
pop
or
fildll
stos
lahf
cmp
loop
call
pop
mov
int
inc
mov
inc
shrb
mov
add
cld
icebp
push
mov
or
ljmp
lods
push
jp
dec
into
dec
mov
mov
cmpsl
movsb
movsb
jb
push
pusha
sub
clc
stos
call
shrl
push
nop
pop
jae
pop
addl
mov
fcmovnbe
jns
andb
lcall
call
orb
ret
or
sti
call
nop
mov
cmp
test
mov
subl
fnstsw
addr16
jle
test
aaa
sti
jmp
pop
clc
pushl
test
scas
pop
pop
or
loopne
movsb
cmpsb
mov
mov
movq
sahf
or
xchg
sub
jno
daa
lock
cmp
jle
call
push
out
add
enter
stc
lds
enter
lcall
loopne
call
pop
cmp
gs
xor
xchg
jbe
pop
in
xchg
xchg
mov
fnstsw
xlat
pop
adc
sbb
imul
jge
clc
adc
mov
mov
cld
xchg
jne
dec
clc
mov
sub
push
cmpsl
aam
jns
in
dec
mov
pusha
cmpsl
sbb
pushl
jg
rcll
lds
cmp
icebp
loopne
cmp
je
mov
lret
adcl
lock
clc
mov
mov
stc
roll
addr16
sub
adc
fcomp
or
cmp
movsb
cmp
cmp
es
lcall
lret
bt
inc
imulb
ret
sbb
fwait
jno
dec
jo
icebp
pop
pushl
and
mov
ret
repnz
mov
inc
aad
popf
das
inc
aas
ljmp
inc
arpl
adc
loope
lahf
addr16
mov
clc
push
pop
cld
sbb
repnz
out
jl
and
icebp
fists
out
std
dec
mov
xchg
movsl
mov
jne
call
cli
jmp
pop
rorb
xlat
cmp
insl
outsl
mov
lods
out
ljmp
inc
je
sub
int
decb
in
pushf
xchg
mov
pop
cltd
idiv
mov
cld
sub
jnp
jg
push
pusha
jns
repz
aaa
add
test
mov
xor
sarb
sub
xchg
fstl
in
std
ja
sarl
inc
push
xor
sbb
push
push
mov
lcall
pop
inc
scas
pop
lods
xchg
sub
pop
call
cli
test
inc
mov
add
dec
popa
inc
test
lods
mov
xchg
xor
mov
std
inc
sbbb
pop
mov
sbb
std
pop
clc
mov
sub
sub
mov
add
and
cmpl
dec
mov
adc
adc
xor
mov
rcr
jl
rcrl
pop
hlt
es
xlat
daa
sarb
sbb
dec
iret
or
hlt
push
jbe
jnp
mov
xchg
push
scas
call
incl
out
pop
cmp
jg
cmp
rcrl
inc
stos
inc
out
jecxz
insl
stos
xor
mov
sahf
out
cli
lcall
cmp
jns
ljmp
or
mov
mov
push
add
ljmp
push
jb
push
test
cs
jb
outsl
cmp
jmp
push
pop
clc
decl
movsb
pop
cmp
mov
or
jno
dec
lcall
popf
ljmp
aas
jg
pop
hlt
test
sub
and
jle
mov
jg
jp
xchg
call
shl
xchg
das
pop
arpl
or
lcall
lcall
std
mov
rcrb
push
dec
push
adc
hlt
push
mov
jge
mov
cld
jnp
mov
ljmp
pop
repz
mov
arpl
in
fwait
and
mov
lods
stos
int3
pop
inc
call
xchg
int3
add
fidivs
int3
jae
aam
jno
pop
sti
jae
xchg
sbb
push
lcall
loope
sbb
adc
cmpsl
pop
mov
cld
add
out
jmp
loop
mov
out
dec
ret
fwait
roll
add
sbb
cltd
push
mov
jecxz
inc
mov
mov
xchg
push
bound
xchg
bswap
scas
push
shr
jge
adc
lret
call
ss
testb
rcr
push
loop
das
hlt
call
or
mov
insl
xorb
jp
test
pop
cld
aad
in
sbb
xchg
or
std
mov
popa
sbb
mov
adc
mov
loope
ljmp
and
or
mov
jmp
mov
nop
push
xchg
xchg
pop
mov
push
scas
shrb
pop
out
lret
imul
pushl
jne
movsl
icebp
into
inc
loopne
and
and
mov
into
inc
adc
scas
lret
ret
dec
insb
lcall
in
shlb
jmp
jl
aas
outsl
std
jg
pop
lahf
jo
pop
push
test
out
xor
mov
clc
in
call
jno
dec
push
dec
push
call
daa
and
xchg
push
fwait
sub
or
jmp
mov
or
insl
mov
adc
lcall
ljmp
repz
ja
push
or
and
repz
xor
mov
hlt
cmp
cltd
mov
arpl
and
dec
or
and
cmp
push
shlb
call
pushf
mov
pop
daa
sub
inc
xor
das
cld
incl
mov
aaa
pushf
sbb
inc
cltd
jo
xlat
mov
clc
call
pop
pop
add
sub
or
push
pop
push
and
cs
clc
incl
and
daa
idivl
sbb
movsb
dec
sbb
clc
ljmp
jb
inc
push
xchg
fwait
sarl
push
test
pop
sbb
cli
les
push
sub
pop
cmp
movsb
shll
ljmp
pushl
adc
jl
sbb
fsub
dec
inc
or
lock
mov
fs
mov
scas
into
mov
mov
and
inc
loope
js
mov
ljmp
sub
out
repz
movsl
movsl
xchg
cli
test
imulb
call
pop
ljmp
roll
sub
xor
push
jl
add
sub
into
into
popa
in
inc
cli
mov
shr
stos
les
icebp
lahf
jmp
aad
sub
popf
shrl
add
lret
nop
iret
sbbb
lods
pushf
sbb
add
decl
xor
in
pop
adc
inc
lock
mov
repz
and
stos
mov
mov
js
mov
loop
call
and
sub
jmp
pop
daa
loope
shrl
push
inc
ljmp
std
shlb
out
daa
add
and
cwtl
inc
sub
fdivrp
call
js
adc
pop
int3
movsb
imul
or
pop
mov
insl
cmp
enter
aad
cmp
call
leave
mov
mov
jno
lahf
pop
dec
cmp
inc
dec
mov
imul
movsl
test
mov
cmc
lea
inc
pop
inc
xchg
cmp
jg
mov
scas
andl
andb
pop
mov
test
push
or
mov
out
pop
call
outsl
mov
sbb
popa
push
hlt
shll
dec
lock
or
addr16
arpl
fstl
clc
lcall
push
idivl
jg
xchg
leave
cli
jg
lds
ss
or
cltd
test
movsl
and
pop
icebp
out
cmp
je
clc
xchg
dec
fsubp
mov
mov
dec
sahf
ss
dec
loope
enter
mov
incl
pushf
outsl
daa
cwtl
in
pop
inc
mov
push
push
lds
fstpl
aas
jo
mov
jns
rcr
pop
sub
fsubrl
cwtl
pop
call
cltd
sti
incl
jns
mov
cmp
mov
jo
pop
fbstp
sub
jmp
cli
xchg
mov
lods
std
push
mov
mov
mov
push
movsl
aas
shlb
test
ret
fucomip
movsl
gs
cmp
inc
inc
xor
rcrb
cmp
stc
shlb
pop
insl
mov
out
daa
xor
xlat
addr16
mov
insl
ljmp
aas
sti
fistps
scas
jecxz
in
repnz
dec
mov
sub
jg
inc
cmp
pop
insl
pop
xor
in
loopne
push
pop
xchg
loop,pt
add
jecxz
sbb
jg
movsl
cmp
hlt
out
dec
mov
out
psubb
sub
jg
mov
pop
push
aam
xchg
js
je
shl
push
pop
inc
stc
jge
sub
jg
ljmp
pusha
jl
sbbb
xchg
push
add
xchg
push
arpl
outsl
icebp
decl
or
or
xchg
fwait
mov
adc
mov
pop
push
sbb
jmp
mov
xor
push
sbb
je
jb
shlb
repnz
ret
push
cmp
jle
mov
movl
and
cmp
lods
push
movsb
outsl
jo
lahf
call
in
fmulp
and
mov
mov
mov
out
pop
add
out
call
xchg
jae
decl
out
cmc
sahf
adc
pop
subl
jg
decl
loopne
push
int3
inc
and
loop
lock
sahf
sub
jg
push
mov
xorl
mov
push
sbb
mov
or
lcall
lahf
pop
pop
push
jbe
fisttpl
fxch
jno
out
dec
jnp
xchg
iret
jl
sub
es
push
cltd
push
jmp
mov
out
add
adc
mov
das
sub
imul
rorb
jmp
add
imulb
sub
inc
adc
sbb
incl
rep
pop
jmp
or
dec
ror
mov
cmc
xchg
repnz
ljmp
call
dec
inc
add
jae
pop
cmpsb
xchg
sub
movsl
and
push
or
inc
add
xchg
adc
pop
adc
push
test
out
jb
inc
mov
std
jmp
lock
jnp
cltd
jnp
aas
stc
xchg
call
and
and
pop
sub
jg
sbb
xor
lret
fbstp
add
xchg
xchg
pushf
cli
dec
or
xchg
inc
cmp
cltd
ljmp
add
pop
lcall
ja
cmp
pushl
cmc
dec
cmc
in
call
fcomps
inc
nop
cmp
ret
sub
pop
xchg
sub
pop
ljmp
dec
enter
mov
cmp
adc
andb
cld
inc
mov
adc
pop
mov
aas
lods
cli
les
add
stos
icebp
cmpsl
out
adcb
push
shll
pusha
aad
sti
dec
int3
jp
pop
loopne
loop
push
imul
sub
and
jb
pushl
call
push
shl
xchg
ret
dec
call
cs
or
imul
lcall
cmpsl
adc
adc
gs
test
out
aad
sub
shll
std
ljmp
inc
lret
mov
ds
push
test
pop
icebp
cmp
inc
loop
pop
outsb
add
sub
test
fimuls
sub
mov
les
cmp
ret
adc
mov
aad
into
js
jecxz
jmp
sbb
or
push
jp
sbb
xchg
xlat
mov
adc
mov
hlt
aaa
js
xchg
jge
rorb
cmp
sti
call
icebp
mov
je
test
imul
cmp
inc
sbb
mov
call
sub
nop
mov
cld
pop
andl
xor
add
push
pop
xchg
in
dec
jo
mov
in
div
inc
and
dec
ficomps
cmp
sbb
xchg
jmp
cmovae
mov
fwait
add
mov
fstps
cmp
incl
sub
scas
sti
out
fisubrl
nop
push
mov
cltd
add
ds
mov
ret
into
sub
mov
mov
pop
loop
fbstp
out
negl
imul
cs
or
push
mulb
and
jp
mov
loopne
aam
lods
inc
mov
ja
dec
sbb
notb
ja
data16
and
pushf
pop
mov
adc
js
add
inc
mov
adc
sub
shlb
ljmp
insb
push
xchg
imul
loope
inc
xchg
pop
lret
outsl
lock
fdiv
movsb
or
test
jno
sbb
aaa
cld
and
fmull
inc
push
std
mov
jmp
adc
repnz
and
push
inc
jl
ljmp
add
pop
mov
jbe
mov
mov
fcompl
mov
xor
adc
leave
repz
incb
mov
mov
xchg
adc
outsl
hlt
inc
sbbl
xor
jo
addr16
imulb
pushf
lods
test
ljmp
int3
pusha
in
jne
mov
dec
ficomps
mov
pushl
push
dec
lea
cli
lret
or
push
mov
mov
idivb
ljmp
cld
xchg
data16
adc
cmp
jno
jbe
pusha
addr16
dec
out
xor
movsl
das
jbe
fcompl
push
mov
or
gs
movsb
sbb
call
incl
dec
and
xchg
adc
xchg
sbb
outsb
imul
lcall
add
bound
jo
je
and
fdivr
push
cmp
push
inc
sub
dec
loopne
push
in
iret
add
jp
mov
movsl
movb
lods
lcall
cmpsl
out
xor
xor
sbb
mov
mov
dec
pushl
jle
sbb
add
mov
sbb
mov
repz
inc
outsl
hlt
pushl
pop
or
int3
cmpsb
jae
notl
or
imul
aaa
clc
lcall
xchg
mov
cmp
or
mov
mov
test
xor
mov
mov
inc
iret
test
dec
pop
or
pop
push
fstl
jmp
adc
dec
mov
inc
sub
and
lahf
loope
jg
jno
test
incl
pushl
mov
insl
test
out
xchg
inc
dec
ds
xor
cmpsb
dec
sbb
mov
fnstenv
push
notb
mov
adc
in
cmp
ljmp
icebp
sahf
inc
stos
fwait
inc
stos
aad
leave
add
ss
stos
fisubrs
and
sarb
shlb
jle
or
xor
xchg
mov
jg
push
dec
fwait
push
mov
fcmovnb
sbb
decl
pushl
les
dec
add
repnz
mov
sbb
mov
mov
clc
jmp
out
or
fwait
jae
jp
sarb
jg
notb
xchg
lret
xorb
int3
dec
loop
lret
mov
cmp
pop
inc
leave
mov
lods
sbb
stc
cmp
inc
or
pusha
pop
push
insl
mov
data16
mov
xlat
mov
fnstcw
ss
add
shll
push
mov
and
mov
cmp
loope
gs
inc
ficoms
and
shll
mov
add
clc
jg
push
call
mov
xchg
rol
ror
pusha
dec
mov
pop
add
xchg
gs
int
push
cmp
cmp
int
jg
fucomip
cld
mov
sbb
ljmp
out
loope
mov
decl
add
pop
movsb
mov
mov
fcomps
inc
std
int3
jne
sar
decl
cmp
movsl
push
cli
mov
adc
pop
notl
dec
xlat
out
dec
xor
decl
and
push
sarl
push
or
xlat
jmp
je
cmp
mov
ljmp
std
mov
dec
inc
jnp
jae
dec
movntq
sarb
enter
mov
mov
jl
pushf
adc
cmp
or
adc
call
inc
adc
inc
loope
pop
lock
mov
pushl
loope
mov
ss
mov
pop
mov
jmp
adc
pushl
or
pop
cltd
aaa
or
cmp
popa
nop
push
ret
cmp
push
sti
addr16
mov
jmp
stos
out
cs
push
xor
mov
lret
push
mov
mov
std
pop
clc
or
inc
hlt
repz
jecxz
mov
ret
out
repz
sbb
insl
ret
out
mov
arpl
push
mov
jbe
aaa
movsl
das
dec
adc
xchg
pop
dec
dec
into
mov
dec
decl
leave
fst
dec
stos
jo
xor
mulb
push
dec
jmp
mov
leave
jp
xchg
shll
push
cmc
cwtl
cmp
lds
fbstp
lods
ljmp
mov
pop
andl
mov
fcoml
mov
lcall
cmp
fldcw
mov
outsb
out
and
lcall
cmp
pop
jge
scas
imul
dec
pop
push
jp
ljmp
xchg
rolb
movsl
pusha
lea
dec
outsb
xchg
icebp
in
out
hlt
lcall
iret
push
lea
cmc
negb
inc
sub
mov
lret
mov
loope
and
testl
dec
jae
mov
dec
mov
lods
mov
cli
sub
pop
cwtl
loope
test
inc
cmc
lcall
mov
fldl
adc
jle
xchg
fcoml
add
jle
test
test
adc
mov
sbb
js
jg
pop
pop
fcoms
icebp
loope
sub
and
inc
push
xchg
cmc
mov
jp
inc
inc
mov
mov
dec
mov
push
push
sub
jmp
mov
rclb
fdivl
imul
in
fisubrl
sub
stos
cmpsl
inc
lcall
inc
enter
mov
jbe
cltd
adc
jg
lcall
sahf
in
int
adc
or
fistpl
add
mov
jno
jp
ds
push
dec
jl,pt
mov
test
es
lock
xchg
jecxz
push
or
pop
mov
or
pushl
cmp
ret
out
mov
mov
xor
out
pop
andl
aad
pop
daa
sarl
fsubrl
fstl
dec
push
pop
add
stos
sub
xor
push
and
ljmp
xchg
xbegin
xor
sbb
fcmovb
mov
pop
loopne
decl
call
int3
push
lret
sbb
jecxz
ret
sub
mov
and
mov
mov
xchg
adc
sbb
pushf
xlat
push
lods
dec
mov
out
decl
and
fstps
sbb
clc
ljmp
addr16
mov
or
pop
std
pop
xchg
gs
mov
cmpl
fcos
lcall
mov
push
addr16
mov
mov
jne
mov
lahf
mov
sbb
loop
push
in
xor
sbb
xchg
sub
outsb
adc
pop
rclb
sbb
cltd
lods
cmpsb
mov
lcall
pop
scas
movsb
out
movsb
ja
mov
repnz
out
in
add
adc
scas
shll
sar
call
cmp
mov
inc
adc
jnp
fimull
addl
sub
mov
pop
nop
stos
dec
icebp
or
loopne
adc
divb
mov
test
pop
xchg
movsb
jo
and
xchg
jnp
shrb
clc
mov
ljmp
shrl
popf
inc
mov
inc
aad
rcr
das
lock
ljmp
mov
aaa
fmull
xor
sbb
and
inc
icebp
adc
fldenv
cli
jg
icebp
shrb
in
leave
or
rcl
jbe
and
mov
and
test
int
push
daa
cmp
addr16
mov
stos
and
jg
outsl
cmc
dec
sub
jb
push
xor
pop
jg
sti
ss
jae
pushl
fisubrl
sub
imul
test
mov
sub
mov
bound
dec
fldt
daa
jge
incl
mov
sbb
jne
xchg
rcrl
call
fwait
mov
std
rol
mov
cli
in
sti
in
insl
sub
call
jno
or
cltd
loop
add
jno
fisttpl
xor
sti
das
repz
popf
imul
out
xlat
fiaddl
stc
sar
in
int
nop
and
dec
test
aad
fyl2xp1
shrb
inc
std
enter
inc
into
dec
stos
dec
dec
rcll
inc
loopne
jmp
cmp
mov
add
mov
sbb
je
pop
pushf
pop
ret
leave
pop
jb
test
aaa
ja
cmp
in
stc
ljmp
xchg
or
in
xor
mov
sub
push
dec
jns
sbb
pop
mov
cmp
mov
mov
lcall
daa
test
mov
sbb
inc
out
mov
dec
mov
dec
leave
nop
in
xor
clc
ljmp
and
xchg
je
adcl
test
aaa
cltd
call
lea
adc
andl
icebp
jmp
push
int
stos
mov
shll
push
sahf
test
push
dec
or
inc
lock
popl
cmp
pop
push
sub
scas
cld
push
push
or
fisttps
sub
repz
ror
dec
jae
xor
imul
mov
je
mov
rcrl
jmp
testb
ljmp
cmp
insl
cli
dec
test
add
and
add
sub
filds
jp
adc
jne
mov
aas
into
or
out
inc
ljmp
out
adcb
xchg
fcomip
mov
in
mov
mov
scas
and
ljmp
lock
jle
test
aad
fnsave
mov
adc
leave
insl
mov
or
fsubrs
arpl
dec
psubusb
pop
dec
or
movsl
jmp
je
sarl
ja
dec
inc
jmp
ud0
push
icebp
xor
das
test
cltd
hlt
ret
lcall
xchg
ja
adc
imul
arpl
sub
mov
jmp
ret
jb
cvtdq2ps
addr16
test
pop
test
pop
pop
std
mov
incl
mov
fsubrl
shl
divl
pop
mov
aaa
jae
dec
sub
mov
scas
mov
dec
inc
push
incl
das
pop
hlt
fs
out
pop
in
xchg
cmp
aaa
stc
adc
cltd
je
add
xor
outsb
sub
pop
sub
push
imul
push
or
pop
cmp
lret
sbb
int3
cmp
movsl
pop
inc
aaa
ljmp
sbb
cmp
cmp
fcomps
jecxz
fadd
add
inc
mov
iret
mov
into
mov
rorl
mov
shll
pusha
clc
pop
ljmp
cmp
ret
xor
push
rcr
cltd
mov
cmp
xchg
cli
pop
in
cmp
mov
dec
and
mov
ja
aam
test
aaa
rolb
adc
jg
sub
imull
and
fwait
mov
fs
out
js
cmpsb
in
bound
outsl
mov
cmp
icebp
stos
std
push
repz
jecxz
out
push
cmp
dec
test
decl
les
push
cmc
adc
popa
and
divb
sbb
cmp
cmpb
daa
insb
pop
cmc
cmp
loop
xchg
mov
lret
mov
pusha
aaa
rcrb
jg
or
outsb
scas
cmpsb
out
and
es
verr
inc
sbb
inc
es
lea
fildl
dec
xchg
out
mov
sbb
jecxz
xor
outsl
cmpsl
cld
clc
mov
dec
sub
aad
push
jg
fildll
add
addr16
in
xchg
cmc
shlb
subl
cmpl
dec
fs
das
adc
imul
in
jg
add
out
sahf
mov
dec
jnp
roll
add
sbb
mov
notb
hlt
les
leave
cs
stos
fsubl
cvttps2pi
xchg
std
inc
mov
lods
push
bound
lock
jg
jmp
dec
xlat
push
sti
sbb
sbb
dec
push
push
cli
sub
lcall
add
mov
pusha
lods
and
adc
data16
cmpsl
outsl
test
std
jle
or
lock
outsb
gs
pop
sub
aam
incl
or
sub
push
in
test
push
lret
push
ret
xor
add
add
inc
cmc
int
mov
aas
fmull
stos
pop
jge
sub
or
incl
imul
add
outsb
cmpsl
sbb
lods
mov
cmp
jns
cmp
push
mov
mov
fdivr
cwtl
xchg
mov
nop
js
xchg
fstps
ficoms
ss
xor
push
pop
lcall
ds
jno
decl
pushl
stos
cmp
sti
aam
add
test
insb
push
sbb
jmp
je
mov
cli
mov
mov
ljmp
mov
mov
dec
mov
sbb
push
mov
dec
sub
pop
dec
dec
jns
insb
jbe
xchg
cmp
in
pushl
mov
mov
xchg
mov
repz
sbb
testl
jbe
pop
ljmp
fwait
mov
sub
cltd
std
fiaddl
fucomp
dec
lcall
cld
bound
rcr
cli
sub
jle
sbbb
ja
idiv
mov
movsb
pop
jge
imul
test
mov
das
inc
lcall
fldcw
data16
lods
mov
cltd
inc
jg
loope
push
dec
adc
lea
mov
fucomip
sbb
push
outsl
cmc
packuswb
xor
mov
inc
mov
dec
pushl
cli
xchg
js
mov
fbld
sbb
xlat
xchg
jge
ret
data16
sbb
cmp
mov
fimull
nop
jbe
std
iret
jg
inc
imul
jge
out
mov
jns
mov
xchg
call
shll
movsl
sbb
cltd
stc
outsb
andl
outsl
bound
pop
fs
movsb
test
js
call
lcall
xchg
cmp
adc
mov
inc
in
xor
push
and
mov
sarb
ffree
xor
fcom
or
pop
scas
pop
fwait
in
stc
pop
scas
subl
jmp
scas
push
lahf
push
add
add
jmp
xchg
mov
call
in
adc
mov
sbb
cmc
outsb
out
inc
mov
adc
test
pushf
add
dec
decl
in
lret
or
jecxz
repz
loopne
cld
out
out
loop
inc
ljmp
fsubs
adc
pop
push
xor
iret
or
aam
fsubrs
mov
mov
push
add
test
push
pop
cmp
das
std
call
shrb
sbb
pushf
xor
cwtl
sub
ss
clc
push
add
push
add
xor
in
std
xorl
call
inc
and
jb
pop
pushl
cli
jg
push
rolb
imul
loopne
mov
jg
mov
pop
add
imul
xchg
adc
or
dec
movsb
jmp
fidivl
sbb
mov
cmpb
ljmp
jg
loope
insb
lods
xchg
mov
inc
push
pop
andl
ret
mov
dec
cmp
sahf
cmp
jg
push
fldt
dec
sahf
ss
addl
lret
scas
jp
mov
mov
sbb
js
ss
clc
das
daa
sub
outsb
jge
cmc
fsubl
fwait
cli
fnstsw
ljmp
dec
movsb
jns
mov
pop
cmp
lock
pop
push
lods
sbb
jle
cmpsb
cmpsl
insl
cltd
nop
call
xor
sbb
outsl
lock
dec
dec
movsl
mov
xchg
or
rep
mov
outsl
jns
pop
filds
add
xchg
inc
mov
jb
mov
repnz
and
push
int3
or
pop
pop
jg
ljmp
or
enter
pop
jb
mov
fxch
gs
xor
cmp
mov
incl
cmp
xor
aad
scas
movsl
sub
mov
push
je
cltd
xor
mov
jge
incl
push
add
xlat
adc
mov
in
pop
cmc
aaa
mov
xchg
repz
ljmp
incl
inc
xor
adc
inc
mov
sub
in
cltd
pop
loope
dec
rorb
call
lock
add
insl
imul
adc
stos
dec
push
pop
sub
cmp
adc
sahf
jmp
loopne
xchg
in
sahf
cmp
roll
lahf
daa
cli
fnstsw
aaa
jb
pop
mov
shl
jb
aam
mov
call
and
xor
rclb
cmpsb
xchg
stos
fstl
xor
jle
hlt
dec
pop
pop
pop
rep
cmp
cmp
in
dec
dec
push
jmp
fimull
pop
lock
mov
jbe
out
pushl
mov
mov
adc
xor
scas
test
and
fidivrl
outsl
mov
test
insb
pop
mov
aaa
jno
repnz
dec
lcall
out
cld
into
mov
sub
imul
or
in
rol
dec
mov
mov
and
pushf
scas
je
dec
in
cmp
pop
xor
adc
xchg
push
faddl
push
stos
lds
int
xor
xchg
in
xchg
cs
scas
inc
cwtl
adc
xlat
xchg
lcall
push
iret
add
push
push
inc
mov
mov
rolb
aas
gs
mull
fwait
iret
push
push
inc
cli
incl
sti
loopne
pop
xchg
stc
sbb
scas
and
dec
xchg
or
or
jecxz
insb
fisubrs
loopne
mov
fdiv
nop
jl
popf
ret
pop
dec
icebp
mov
cmpsl
lods
jg
pushl
aad
test
ljmp
test
push
push
adc
idiv
lcall
adc
adc
lcall
push
dec
insl
xor
adc
ss
mov
jmp
mov
hlt
mov
mov
or
mov
js
cmpsl
pusha
jb
pop
pop
and
cmc
shll
jae
sub
xchg
sbb
xchg
cs
ljmp
jl
ja
dec
ret
ficomps
add
es
lods
or
jg
jbe
or
inc
jle
or
sahf
cs
popa
pop
cli
icebp
lcall
mov
mov
fidivrl
push
test
mov
pop
lea
jnp
in
sbb
das
pop
pop
sahf
inc
int3
rcrb
mov
sbb
fadd
rcrb
adc
mov
jl
and
sbb
push
sahf
outsb
jbe
push
hlt
lcall
ds
or
cwtl
enter
das
inc
dec
ret
fwait
or
add
fistps
adc
mov
xor
push
mov
int
jg
js
xor
cmp
adc
cmp
xchg
fst
outsb
mov
mov
pushl
add
adc
mov
out
cmpsb
add
cmp
ljmp
call
push
pusha
lahf
cmpsl
mov
out
int3
jge
pop
push
inc
mov
jg
push
pop
jle
call
mov
mov
sub
ja
jnp
mov
cli
decl
push
push
and
in
pusha
jae
test
arpl
dec
sbb
or
fists
or
lock
jbe
leave
in
cmp
daa
lcall
sbb
push
adcl
mov
or
shlb
fmull
daa
roll
iret
xchg
aaa
std
jg
mov
xchg
lds
sbb
jnp
mov
sahf
jg
icebp
stc
fisttpll
lcall
cwtl
jnp
sub
bound
mov
aad
nop
mov
outsb
xchg
ljmp
push
rcl
cmpsb
mov
push
popf
mov
gs
mov
mov
cwtl
lods
call
xor
jp
pop
adc
inc
lds
adc
xlat
xlat
sbb
aas
mov
sub
push
loop
jg
add
shll
add
and
pop
ret
pop
call
jmp
or
movsl
idiv
repnz
push
int
into
mov
leave
xor
cld
decl
pop
jns
sub
iret
fstps
or
xlat
lret
js
jo
jno
das
cld
lcall
or
sbbb
into
ret
sub
rcr
cmpl
hlt
jg
add
pop
leave
outsb
rclb
cmp
xchg
push
ss
stos
leave
out
xor
jg
push
das
fs
aad
push
dec
inc
mov
adc
cli
call
test
addl
outsl
inc
insb
fsubrs
daa
mov
lea
std
decl
cmpsb
and
cmp
cmpl
cli
ljmp
sbb
adc
push
popf
jns
cmp
movsl
loopne
jle
cmpsl
and
cmp
js
test
inc
or
adc
cmp
ljmp
mov
je
sbbl
cmp
std
decl
jns
clc
and
imul
decl
pop
push
aaa
inc
inc
cmova
insb
sbb
out
aam
mov
mov
incl
addr16
push
pusha
sbb
dec
aam
fwait
or
bound
cmp
sqrtps
mov
cld
lcall
mov
xchg
lods
dec
cmc
xor
jne
mov
pop
xchg
ljmp
icebp
fbstp
dec
jg
lret
aaa
fistpl
or
call
adc
jl
test
fdivr
jge
add
adc
ljmp
incl
push
add
xlat
pop
stos
insb
push
mov
sub
mov
sub
cltd
cmp
mov
jl
pushl
test
dec
mov
fs
fs
ret
repz
lock
bound
imul
cmpsb
adc
or
jns
adcl
mov
imul
out
mov
push
ljmp
lcall
pop
jne
je
jl
popl
mov
mov
decb
xorb
jnp
aaa
inc
push
stos
cmp
lds
jg
pushl
adc
or
jae
into
repz
es
lock
das
add
cmp
mov
scas
ljmp
xchg
sub
out
inc
addb
jae
pop
pop
mov
std
mov
inc
repnz
sbb
jp
insl
loopne
leave
insl
std
pushl
dec
jae
sub
add
insl
stc
ror
add
rcrl
push
lea
xchg
mov
loopne
outsl
iret
adc
adc
dec
xor
notl
add
jns
xchg
pushl
sub
sub
xchg
xchg
scas
addb
pop
xchg
mov
repnz
sbb
cmp
sti
push
decl
pop
xchg
inc
inc
mov
jge
pop
xchg
clc
call
sub
push
jl
icebp
cmp
std
repz
dec
xchg
dec
imul
loop
sub
rolb
lds
jg
mov
aad
stos
in
lods
out
sbb
aad
ljmp
movsb
xchg
mov
push
sbb
adc
mov
aaa
js
das
movsb
xchg
add
leave
bswap
xor
jmp
jae
movsl
and
pop
jae
loope
mov
arpl
pop
mov
mov
out
dec
stos
mov
imul
fidivrs
incl
mov
mov
insb
sbb
in
incl
out
inc
xchg
adc
mov
lahf
filds
fistps
mov
icebp
incl
imul
sbb
push
mov
in
das
sub
dec
sbb
ljmp
fsubl
and
mov
outsl
cmc
ljmp
mov
jbe
dec
mov
ret
clc
decl
mov
call
daa
add
out
divb
pop
aam
pushl
jge
jle
shrl
push
fwait
xchg
fnstenv
pop
cld
outsb
lahf
lcall
cmc
decl
test
and
xor
mov
jbe
iret
les
hlt
ljmp
aam
pop
andb
jnp
lods
pop
aad
xor
imul
jnp
test
jnp
andl
push
add
data16
ds
jl
jle
mov
xchg
jbe
mov
enter
push
ds
mov
jbe
mov
jno
scas
lret
rcrl
cmpsb
mov
cmpsb
or
pushl
lock
in
lock
and
xor
sbb
cwtl
lcall
cld
lret
inc
adc
mov
sub
xor
je
cld
push
jle
pushl
jecxz
cli
mov
js
xchg
test
and
and
cwtl
and
lret
cmpsb
mov
fwait
adc
std
fdivrp
mov
add
out
mov
add
call
mov
sti
orl
loopne
add
mov
push
decl
icebp
arpl
cwtl
xor
ljmp
inc
sub
pop
clc
pushl
xor
repz
add
loop
adc
and
add
mov
popa
add
push
pop
jnp
repnz
out
out
mov
incl
push
ds
and
aaa
xchg
lds
dec
or
push
or
cld
push
call
cmp
fisttpll
dec
xor
fmull
decl
call
mov
es
mov
pop
xchg
ja
and
add
leave
cmpsb
adc
insb
cld
out
dec
stos
flds
mov
jg
mov
mov
add
fimuls
imul
xor
cmpsl
outsl
notb
lahf
mov
push
jns
dec
lret
jne
fiaddl
notl
mov
cmp
lods
or
in
bound
call
jo
mov
adcl
jae
shlb
and
ret
mov
insl
iret
cs
jmp
leave
dec
js
inc
out
push
and
mov
jmp
mov
ret
popf
xchg
fs
movsl
fsubr
stc
call
mov
adc
test
ds
and
sti
or
out
dec
mov
mov
xchg
or
sub
pusha
pop
data16
mov
test
sti
add
lcall
xor
or
sahf
xchg
or
cmp
outsb
leave
dec
or
sub
pop
and
clc
ljmp
dec
aam
cli
inc
pop
dec
or
xlat
aas
or
pop
xor
pop
adc
or
insb
adc
lcall
call
and
push
cmovb
jo
pop
inc
movb
jp
mov
je
adc
mov
test
gs
xchg
add
das
or
das
sbb
out
or
andl
into
sbb
adc
cmp
xchg
fs
add
xchg
out
popf
adc
xchg
dec
fs
mov
adc
and
dec
xchg
lcall
mov
scas
mov
pop
dec
xchg
clc
inc
cwtl
sub
adc
adc
incl
xor
fwait
dec
jo
shlb
jle
pop
jl
jmp
int
sub
xchg
mov
cmp
xchg
mov
clc
pop
mov
dec
pop
jo
lcall
or
leave
inc
mov
or
outsb
in
lods
fnstsw
pop
or
addr16
and
ljmp
int3
dec
call
lds
repnz
daa
popf
push
and
push
pop
or
xor
fistpll
sbb
hlt
hlt
pop
stos
outsb
stos
jae
mov
loop
pop
loopne
clc
jnp
jp
js
test
dec
mov
imull
incl
lcall
in
cld
jnp
cmp
push
mov
ss
and
jns
sar
xchg
jle
and
enter
lea
ret
mov
pushl
cmp
je
hlt
xchg
jge
lds
sub
mov
repz
lods
stc
xchg
incl
jmp
ss
ds
cmp
inc
jp
inc
push
cltd
outsb
mov
clc
call
push
fadds
stc
xor
movsl
sbb
push
and
subb
lahf
mov
pushl
mov
movsb
enter
adc
loop
mov
adc
jne
pop
pop
cli
jmp
lods
sbb
repnz
adc
mov
push
cmp
pop
mov
push
nop
lret
call
xchg
mov
add
scas
aad
inc
test
sub
cmp
push
call
ljmp
faddl
or
data16
jne
pusha
mov
decl
pop
jp
mov
test
mov
push
jnp
adc
decl
adc
jle
sbb
leave
adc
pop
mov
rolb
pushl
mov
lret
stc
movsl
lds
mov
or
push
aas
and
push
call
inc
dec
pop
int
jb
adc
iret
pop
loop
movsb
testb
and
gs
jp
ficoml
sbb
icebp
nop
cltd
cmp
dec
or
or
sub
inc
sub
lsl
addr16
aad
in
outsl
icebp
mov
lcall
cmp
std
rcll
sti
leave
scas
sarl
insb
push
ret
or
shr
mov
mov
movsl
jle
jns
addb
lds
push
lock
xor
pop
call
ljmp
cmp
mov
stos
mov
popf
adc
daa
xlat
popa
popf
ljmp
cmc
jnp
xchg
lods
push
mov
mov
fsubrs
mov
mov
test
scas
add
and
sbbb
sub
dec
std
inc
sbb
enter
in
call
mov
add
jno
mov
incl
adc
cmp
mov
fstp
out
mov
jne
sub
jg
mov
or
fwait
mov
mov
call
mov
push
push
push
insb
and
cmp
shll
xchg
int3
jmp
mov
jmp
call
shll
push
mov
ret
aaa
pop
ljmp
out
sbb
sbb
cmp
add
jmp
sti
xor
negb
cmpsb
nop
das
add
cmp
add
xor
mov
stos
fstpt
or
decl
pushl
loopne
jne
mov
arpl
pop
add
jnp
outsb
hlt
jecxz
cmp
jnp
lcall
push
push
gs
add
stos
mov
mov
inc
hlt
sub
fimull
cld
mov
adc
incl
add
xor
lods
dec
test
or
adc
aas
cmpsl
pop
test
xchg
cmc
outsb
or
mov
ror
push
sahf
nop
stos
ljmp
nop
jmp
pushl
lcall
mov
scas
xchg
jge
and
out
pop
pusha
fldcw
test
sub
dec
cli
jae
mov
xor
lea
dec
cmp
insb
ret
mov
mov
nop
cmp
mov
cmpsb
outsb
dec
add
jb
push
ja
add
push
outsl
jns
xchg
adc
inc
pushf
mov
sbb
jg
out
outsl
out
popa
subb
in
push
inc
mull
jmp
inc
call
and
ljmp
jne
les
adc
and
lock
ljmp
stos
nop
and
call
mov
lret
insl
test
fcoml
outsb
test
ficoml
xchg
fidivl
pop
imul
ret
test
mov
mov
mov
or
sbb
and
push
pop
jb
call
mov
imull
loop
shlb
test
pusha
mov
scas
decl
xor
dec
arpl
inc
in
pop
or
lods
pop
xchg
lcall
imul
add
xchg
cmpsb
pop
jge
aad
lcall
xor
shlb
pop
pusha
pop
fs
fstpt
jle
add
push
adc
mov
mov
stc
xchg
mov
popa
fbstp
or
clc
lcall
pop
adc
xchg
add
xor
sub
inc
aam
mov
cmp
cmp
lcall
push
sub
push
ret
flds
push
fcompl
stc
xchg
outsb
dec
or
decl
fistpl
push
jb
leave
xchg
insb
movsb
fdivrs
in
pusha
popf
push
cli
jge
cmp
jmp
push
mov
xor
mov
mov
jg
inc
inc
cmpsl
jecxz
jae
hlt
shll
test
add
stos
xchg
lock
cmp
adc
mov
jnp
add
and
ljmp
cmpsl
stc
adc
jnp
inc
mov
mov
testl
pop
jbe
and
test
ljmp
clc
push
mov
mov
test
cmp
xchg
ret
call
push
dec
pop
xlat
xor
mov
je
inc
ret
scas
lcall
cmpsb
mov
ret
loop
push
int3
mov
adc
and
sub
sub
xchg
jns
push
rorb
ljmp
or
bnd
mov
ja
imul
jg
aaa
jmp
mov
cltd
int3
cmp
lret
mov
mov
or
sub
adc
aas
pop
sahf
lods
mov
fucomip
pushl
js
push
sub
or
bound
call
and
ljmp
jg
cld
es
mov
xor
sti
js
int
outsb
sbb
inc
rolb
mov
mov
dec
outsl
ljmp
decl
inc
mov
and
icebp
lock
add
jbe
ret
das
je
jns
xchg
inc
call
ret
scas
or
pop
std
add
ljmp
cmp
mov
add
and
and
pop
cmp
ljmp
sub
adcb
push
xchg
xor
jmp
add
cmp
xchg
push
xchg
sbb
jae
xor
test
addl
pushl
lret
xchg
inc
cmp
test
sarl
clc
call
dec
mov
jp
xor
movsb
push
mov
adc
cs
mov
xchg
fsts
sbb
sbb
or
pusha
jb
push
dec
xor
hlt
daa
mov
xor
insl
dec
add
jge
mov
movsb
and
and
push
mov
add
mov
pop
ljmp
int
mov
sbb
push
cld
jmp
out
mov
je
cmp
into
jnp
aaa
int3
ret
xor
jns
lret
lods
sbb
decl
fdivrl
stos
adc
cmp
cs
push
sahf
insl
or
cmp
cmp
and
daa
xor
leave
out
lock
icebp
pop
mov
scas
sar
push
inc
pushl
outsb
shrb
cli
int3
lods
in
push
xchg
push
ljmp
lods
sbb
mov
out
mov
test
repz
bound
les
in
or
test
pop
jmp
btr
sub
int
clc
xor
out
lret
cmp
xchg
mov
insb
or
das
lock
scas
xor
jne
xchg
mov
or
in
fwait
jg
or
fmuls
cld
loop
cmp
arpl
dec
xorb
out
cld
mov
ret
ja
jecxz
jmp
mov
scas
push
push
or
decl
or
xor
or
jp
cmp
inc
lret
and
push
dec
pop
push
pop
movsb
and
mov
mov
inc
in
sub
ror
lock
mov
push
arpl
pop
mov
lcall
jecxz
mov
mov
daa
or
adc
jo
cmp
pop
ss
xor
arpl
cli
xchg
push
mov
outsl
lock
call
sbb
xorl
jne
cwtl
shlb
clc
aad
or
push
sbb
lret
lcall
push
adc
mov
jo
dec
ret
cld
in
int
in
je
sbb
ljmp
fdivl
xor
xor
or
pop
js
pop
rol
in
out
pop
pop
call
inc
push
jae
pop
xor
popf
sahf
popl
mov
inc
rorb
adc
xchg
add
mov
sbb
lods
jg
cld
jecxz
stos
add
xrelease
outsb
pop
dec
mov
push
stc
pop
or
cmp
sub
pop
adc
dec
fdivs
sub
je
incl
fnstenv
popa
dec
adc
lds
aam
xchg
dec
dec
mov
in
jmp
out
inc
xchg
adc
xor
sbb
xchg
adc
or
pop
sbb
aad
mov
jg
iret
fs
push
cmp
xor
jae
mov
xchg
sub
sahf
xor
or
push
lcall
shlb
pushf
nop
mov
xchg
lods
test
negb
sub
pusha
cmp
scas
mov
adc
inc
adc
cmp
inc
push
pop
xorb
sbb
lods
lcall
jg
idiv
incl
aaa
push
mov
fsubrs
jb
jmp
sub
xor
dec
int3
jbe
pushl
cmp
fcomip
mov
add
leave
jl
push
ds
pop
pop
pop
fcompl
pushl
arpl
in
clc
inc
mov
shrb
aas
pop
xchg
mov
lcall
dec
lea
hlt
cld
jo
add
mov
push
sar
pop
mov
pop
pop
lods
mov
lret
xchg
ljmp
cld
sarb
ss
sti
mov
jle
mov
roll
test
insl
gs
mov
pushl
dec
fwait
sbb
mov
test
js
inc
inc
sbb
pushl
pop
jmp
int
mov
ja
xor
out
and
out
aas
ljmp
lea
call
or
das
sub
sub
mov
cwtl
mov
pop
push
or
stos
int
push
xor
daa
dec
call
lahf
sub
test
test
sbb
xchg
lret
add
jg
jmp
push
push
out
mov
daa
push
and
lods
shr
mov
ljmp
inc
cli
insl
mov
fisubrs
fstl
adc
push
leave
jnp
sub
incl
outsb
or
js
scas
adc
loopne
add
repnz
ficomps
out
decl
mov
shll
xlat
xchg
and
ss
mov
fwait
insl
fdivrp
ljmp
into
pop
and
jg
cli
and
add
out
mov
orb
aas
filds
xor
sbb
mov
xchg
jle
lods
loope
iret
imul
mov
lcall
std
or
vmread
shll
lahf
les
jo
scas
ljmp
popf
cmp
or
or
fwait
sbb
outsb
sub
pop
xchg
adc
std
cli
inc
jecxz
or
or
lods
ret
sub
lock
pop
jmp
insl
sbb
cli
push
add
loopne
dec
cmpsl
shrl
call
lret
dec
sub
mov
mov
call
rep
lret
mov
and
push
adc
or
push
dec
sub
stos
adc
sub
sbb
cmp
ret
das
cld
loopne
in
pop
mov
push
add
test
stos
jns
xchg
adc
cmpsl
pop
cmp
cltd
sub
jg
ljmp
out
clc
bnd
aas
ret
sahf
or
int3
xchg
cmp
jbe
loope
push
mov
loop
pusha
ja,pn
mov
icebp
jns
push
dec
mov
dec
mov
mov
xchg
les
mov
dec
jg
mov
xchg
inc
xor
iret
cmpsl
aaa
or
add
dec
cwtl
jge
test
loop
fcmovb
push
sbb
mov
dec
pop
mov
das
icebp
lcall
stos
cmp
clc
popf
xchg
loopne
mov
lret
sub
jp
dec
loop
sti
outsb
scas
add
xchg
in
test
jnp
mov
fsubs
mov
push
sahf
imul
sbb
data16
pop
lods
mov
jmp
call
fists
sub
insl
or
inc
test
sbb
mov
incl
mov
addps
pop
and
repnz
arpl
sub
movsb
dec
jnp
mov
jmp
xchg
sub
lcall
adc
inc
mov
cmpb
arpl
arpl
mov
push
loopne
jmp
xchg
or
test
mov
jge
lcall
push
cmp
sarb
push
push
lret
test
popf
xlat
lret
incl
sub
add
shlb
cli
cmp
sbb
dec
fs
pop
ror
aaa
cli
lcall
ds
cmp
cmp
cmp
lods
mov
cli
mov
push
das
lcall
mov
mov
mov
push
test
cmp
pop
push
pushl
jecxz
out
sbb
jg
jnp
outsb
aad
movsl
xor
cmp
dec
ljmp
test
cmpb
mull
push
leave
fsubr
or
mov
or
test
inc
subl
lods
adc
sbb
nop
lret
call
stos
push
xlat
xchg
mov
xchg
sbb
fsubrs
cmpsb
into
fimuls
jbe
mov
jmp
dec
and
inc
fnsave
add
lcall
jg
cmp
sub
test
mov
jg
xchg
arpl
xchg
ret
aam
inc
xor
fstpt
das
cld
inc
dec
scas
lret
arpl
ds
inc
dec
sbb
pop
push
pop
movsl
pop
sti
inc
arpl
es
mov
sbb
xor
xchg
jl
mov
lret
xchg
pop
test
push
mov
dec
cmp
or
lock
pushl
jbe
mov
decl
adc
and
rolb
ret
aam
dec
cli
aam
mov
inc
ds
mov
out
lds
pop
ficoms
push
fwait
add
addr16
add
add
incl
gs
xor
enter
jecxz
and
repz
les
shrl
fists
mov
mov
dec
fcmovu
cmp
mov
inc
bound
int3
mov
incl
icebp
incl
inc
jns
or
ficoml
push
dec
dec
insl
pop
jno
sub
call
jge
mov
pop
imul
mov
decl
mov
add
pop
lods
xchg
leave
hlt
inc
int
push
xchg
cmpsl
into
scas
fmulp
pop
repnz
in
call
xor
mov
out
cmp
jnp
lret
notl
mov
xchg
inc
and
ljmp
mov
imul
or
xor
cmp
and
incl
das
loopne
mov
dec
pop
or
mov
insb
notl
lret
add
adc
pop
sub
cld
inc
xor
sti
push
push
mov
lock
cmc
imull
rolb
pop
mov
fildll
imul
dec
dec
daa
jae
lods
jae
xchg
je
mov
hlt
stos
jne
mov
mov
and
das
jle
jo
les
shrb
xchg
mov
lcall
jg
mov
pop
jg
and
push
aad
pop
imul
call
or
out
nop
mov
cmc
in
xor
stos
in
lea
mov
call
push
lcall
or
mov
adc
add
ljmp
mulb
movaps
sub
pop
nop
aam
xchg
jecxz
ret
ficomps
push
jmp
lahf
insl
arpl
add
aad
push
push
stos
push
jp
or
cmpsl
push
addb
cli
add
cld
add
or
dec
in
shll
dec
inc
lahf
filds
mov
sar
xchg
jl
inc
stos
ja
pop
inc
ret
lods
or
lods
ffree
mov
cmp
aam
stc
jae
push
idiv
shll
mov
mov
clc
xchg
cmp
pop
mov
stos
sbb
sub
sbb
jmp
xchg
repz
pop
xor
ljmp
mov
in
dec
sub
cmp
xor
mov
cmp
xchg
ds
out
vpcomw
lcall
loop
xchg
push
lret
bound
jno
in
xchg
push
jl
outsb
add
sar
das
hlt
jle
mov
mull
popf
shl
dec
or
insl
fwait
in
pushl
stc
or
lcall
imul
pop
cmp
stos
lods
jge
jae
shll
std
sbb
inc
scas
scas
adc
mov
push
jmp
icebp
mov
mov
pushf
jecxz
jecxz
xchg
repnz
ss
das
lock
inc
pop
test
sub
insb
mov
std
les
pushl
int3
lock
sub
or
sbb
inc
mov
sub
dec
or
pop
or
push
pop
cmp
pop
and
cmp
add
and
jb
fdivp
sub
pushl
pop
mov
nop
cld
and
jns
dec
sbb
xchg
scas
mov
outsb
ljmp
cmp
and
dec
fidivs
mov
or
call
jno
out
jmp
jb
cmp
sbb
lods
outsl
ret
scas
dec
mov
sub
lcall
xor
xchg
xor
lret
call
adc
ret
mov
int
push
lea
cwtl
and
xchg
sbb
dec
in
insb
cmp
pushf
movsb
shl
lea
jl
out
xor
pop
push
negb
push
mov
arpl
imul
mov
decl
inc
mov
out
xor
jb
dec
xor
and
daa
cmp
sbb
jg
lcall
clc
movsb
xorb
pop
push
iret
push
insl
scas
cmp
and
fwait
mov
add
call
push
xchg
inc
or
xchg
sbb
insb
mov
pushl
js
sub
sub
outsb
cmp
xor
cmpsl
testb
enter
pop
std
decl
xor
bsr
repz
nop
testb
das
incl
pop
cs
in
stos
dec
xchg
arpl
faddl
fstpt
pushl
xor
push
rcl
add
and
jp
push
adc
scas
rclb
add
hlt
mov
repnz
sbb
icebp
cmp
xor
xlat
sub
mov
popf
xchg
mov
test
jecxz
inc
jnp
bnd
xlat
sub
fabs
incl
fsubrl
mov
mov
push
dec
mov
push
jge
mov
xor
lcall
jle
add
mov
repz
arpl
in
cmp
test
jecxz
lret
cld
inc
decl
mov
lahf
inc
mov
lock
icebp
int3
dec
cs
test
cmp
lcall
mov
jae
cmp
flds
mov
push
out
mov
fnstsw
fcmovnu
jne
into
xchg
jbe
test
sub
add
lcall
xchg
pusha
sbb
cld
mov
outsl
faddp
cmp
and
push
call
push
jae
mov
mov
sbb
in
fistpl
stos
mov
mov
ljmp
xchg
inc
or
aaa
std
test
mov
gs
test
pop
xchg
dec
das
jle
xor
aam
jne
mov
cld
hlt
jp
ja
mov
inc
iret
mov
movsb
mov
in
dec
popf
cmc
aam
xchg
shr
test
sub
mov
and
lret
sub
xchg
mov
sbbb
aas
and
adc
mov
dec
scas
mov
pop
fdivl
jo
leave
push
lcall
loopne
test
or
push
jp
inc
fmulp
fildll
add
and
gs
lcall
lahf
adc
testb
lahf
xor
insb
xor
jne
sub
mov
decl
pop
bound
jle
mov
nop
std
sbb
or
xchg
xor
push
sbbb
fwait
in
jg
jnp
aas
clc
jns
mov
and
cld
or
add
mov
ljmp
stos
adc
sub
mov
jg
mov
cs
jl
cmp
test
out
cli
call
lahf
stos
xchg
sbb
hlt
inc
and
dec
sub
outsb
push
sti
dec
mov
fcmovnu
inc
push
sti
call
and
notb
mov
pop
loop
lods
inc
movsw
cli
or
pmuludq
les
cwtl
sahf
hlt
jg
int3
data16
mov
dec
mov
filds
pop
push
mov
xchg
pop
push
lods
mov
into
ret
mov
or
imul
push
and
fmull
out
gs
stc
ss
lret
call
pushl
stos
xchg
or
out
pop
popa
aas
aaa
imul
aam
sbb
xor
decl
cld
incl
mov
aam
push
movntps
mov
loop
cwtl
lahf
jne
or
std
ret
push
repz
inc
cmp
icebp
pushf
jp
stc
out
sbb
xor
decl
push
mov
scas
pop
sbbb
sar
cmp
scas
xchg
pop
mov
lcall
push
movsl
mov
shll
nopl
mov
stc
mov
mov
mov
adcb
std
lcall
daa
pusha
scas
mov
hlt
add
push
popa
ljmp
lahf
iret
call
cmp
not
jmp
in
push
out
dec
add
mov
in
and
jmp
fsubp
addl
inc
out
dec
jb
pushl
pop
out
fcompl
rorl
mov
mov
movsl
movsb
mov
dec
mov
ss
cli
xchg
mov
mov
xchg
pop
jo
loop
or
push
ljmp
incl
nop
jnp
lods
add
mov
into
add
loope
popa
outsb
xchg
push
adc
sbb
lock
cld
incl
scas
fcmovnu
rorl
std
xchg
aas
mov
or
sub
mov
mov
clc
mov
fucomip
incl
lods
in
mov
icebp
ljmp
jl
in
jae
cmp
decl
fiaddl
popa
inc
aas
or
add
sbb
fildll
inc
out
mov
cmp
xor
ljmp
add
loop
aam
ljmp
hlt
pop
and
jno
xor
fidivrs
enter
jg
and
pop
mov
push
pop
imul
jle
sbb
addr16
mov
inc
ret
in
pushf
dec
jp
fadds
push
mov
adc
sbb
sbb
mov
es
pushl
dec
jbe
cli
xchg
pop
cmp
bound
inc
mov
fildll
push
aas
leave
loope
mov
cld
shl
push
and
ljmp
fdivl
jo
or
jns
cmpsl
aad
mov
sahf
push
or
push
into
inc
sub
jmp
cmc
xchg
divl
mov
sbb
adc
sub
outsl
mov
fucomip
add
cmpsb
inc
xor
jg
hlt
dec
sub
ljmp
mov
inc
cmpsl
lods
push
mov
popa
cli
rclb
lods
push
out
ljmp
hlt
ljmp
xchg
push
aam
adc
add
xor
xchg
daa
dec
push
incl
xor
frstor
add
ret
outsb
ljmp
xchg
dec
cltd
xor
inc
ret
incl
jmp
mov
dec
xchg
cltd
dec
leave
ret
ljmp
fsubrs
and
out
in
add
aaa
clc
incl
cmp
test
sub
movsl
or
xor
test
add
cli
dec
dec
movsb
repz
jmp
xorl
dec
loope
mov
ret
sar
fdiv
xchg
inc
das
enter
je
mov
push
pop
std
mov
pop
mov
aam
pop
add
jp
pop
mov
xchg
xchg
sub
rorb
sbbb
das
hlt
mov
xor
roll
cmp
bound
call
outsl
icebp
inc
hlt
and
or
into
cmp
mov
sbb
push
adc
cmp
push
mov
cmc
repz
jge
fadds
and
pop
addr16
jmp
mov
adc
push
and
lods
lahf
add
mov
ljmpw
call
pop
pop
push
inc
xor
push
xchg
cwtl
mov
fldl
movsb
push
clc
call
sub
stos
out
sub
and
mov
pop
pop
lods
push
add
pop
scas
insb
mov
mov
mov
mov
xchg
ja
getsec
int3
jp
out
push
in
cwtl
sub
cmp
fldenv
push
sub
push
stc
jne
dec
jmp
iret
jg
mov
fidivrl
jo
push
xchg
je
sub
adc
mov
jg
or
incl
mov
sbb
addb
cmpb
lret
push
sarb
xchg
pop
gs
ljmp
cld
std
cmc
push
mov
mov
mov
jb
jmp
lock
dec
sub
insl
inc
jg
jmp
dec
jg
or
cmp
jp
test
adcb
cmp
ljmp
pushl
mov
push
jne
fldenv
mov
sub
in
push
push
xor
pop
cmc
adc
fs
or
and
push
jmp
jg
imul
add
cmc
xchg
sub
jl
adc
call
loop
mov
and
inc
sub
sub
stc
pop
cli
dec
shr
popf
mov
nop
dec
push
jmp
loope
mov
notl
sub
pop
ret
xor
xchg
mov
std
pop
jl
sbbl
daa
or
loop
sar
call
inc
movsl
sar
mov
jl
leave
scas
fucompp
mov
dec
sub
xchg
cmp
fisubrl
lret
outsl
jnp
mov
mov
cs
jbe
in
int3
jmp
es
adc
push
pushf
adc
ljmp
into
or
push
bound
mov
imul
mov
rclb
jae
clc
iret
sbb
in
clc
loop
lock
or
mov
lds
pop
sub
scas
adcl
mov
mov
cmp
test
dec
lret
popf
xchg
mov
out
lcall
and
imul
fidivl
shl
ret
sub
lea
popf
push
pop
sbb
dec
nop
pop
jg
bnd
push
fistpll
ja,pn
jb
sbb
lea
mov
icebp
cmc
mov
stos
mov
or
testb
jnp
idivl
mov
jmp
cmp
xchg
xchg
mov
xchg
jb
mov
call
rclb
add
pop
lea
das
sbb
pop
or
push
fyl2xp1
and
dec
mov
out
or
movsb
das
das
int
repz
adc
jg
jmp
sub
and
aas
lret
lahf
clc
pop
xchg
add
sti
call
mov
dec
cs
push
jp
mov
xchg
sub
arpl
jg
shrb
adc
fsubrl
test
push
je
mov
add
out
pop
js
or
pop
add
imul
lock
incl
push
or
push
xlat
loop
roll
and
popl
mov
les
cmp
mov
push
sbb
adc
inc
and
shrl
mov
decl
xor
jmp
add
mov
add
je
add
cmp
test
pop
daa
incl
mov
mov
pop
out
ljmp
fildl
dec
jle
rep
aaa
cli
push
mov
gs
or
sub
adc
push
jmp
adc
std
and
inc
sub
adc
pushl
fadds
cmp
lea
xchg
out
push
xchg
inc
mov
call
mov
push
inc
sti
adc
jmp
xchg
insb
sti
fsubrl
ljmp
addr16
inc
add
adc
sbb
adc
das
icebp
lcall
mov
jns
stc
sti
mov
aam
out
lea
xor
call
push
cmp
in
lock
adc
xchg
push
ljmp
jmp
push
mov
rdpmc
inc
scas
imul
jg
inc
dec
lods
adc
inc
jo
jae
add
sbb
inc
jmp
add
jb
dec
and
cld
decl
jp
out
pop
adc
mov
sbb
jo
pushl
fidivrl
dec
cld
sbb
decl
and
test
mov
push
aaa
and
stc
jnp
or
lock
xchg
ret
adc
pop
shlb
das
jo
pushl
imul
mov
jmp
push
sarl
popa
lea
shr
inc
mov
add
mov
mov
dec
out
xlat
push
jnp
mov
call
fs
faddl
lret
xlat
aam
add
jmp
jo
imul
pop
test
bound
es
ljmp
pushf
fildll
std
add
add
nop
sbb
jno
cmpb
decb
mov
cwtl
cmc
push
jae
ss
mov
icebp
cmc
das
mov
icebp
mov
lods
rcrl
push
data16
mov
xchg
mov
mov
gs
push
lret
dec
jne
lods
and
lcall
lret
aam
jne
xchg
pop
cwtl
pop
out
push
push
push
sbb
daa
test
lea
push
pop
mov
mov
and
mov
aam
punpcklbw
aad
inc
mov
jg
push
fsubr
inc
sbb
lods
lds
jns
test
dec
jno
nop
pop
cmp
data16
call
dec
ljmp
or
pop
fsubl
pop
mov
dec
subb
loop
push
lea
lcall
dec
std
cmp
ljmp
enter
das
or
cmp
ret
pop
sub
aad
push
aaa
xchg
pop
imul
lcall
rcrl
movsb
pop
sbb
popa
jne
jno
inc
pop
xchg
dec
and
out
cmc
frstor
int
jne
mov
push
leave
adc
jle
push
xchg
mov
jg
inc
add
dec
sbb
xchg
rcrl
sub
mov
std
call
push
or
push
std
lcall
pop
inc
mov
sub
cltd
aam
push
xchg
jmp
repnz
mov
and
fildll
les
and
jmp
jmp
in
arpl
aas
movsb
ss
or
imul
repnz
call
cs
mov
ja
nop
mov
sub
sbb
adc
decl
orb
fs
daa
mov
mov
sti
std
call
dec
std
pop
and
dec
test
or
decl
sub
call
xor
sub
sbb
je
mov
sub
imul
push
push
arpl
mov
cmp
stos
mov
outsl
hlt
pushl
or
gs
int3
mov
cmc
pop
push
js
paddd
roll
pop
push
mov
mov
xchg
sahf
inc
mov
lret
xchg
mov
filds
ret
in
adc
je
dec
lret
std
sub
push
test
cmpsl
movsb
inc
enter
lret
mov
in
mov
pop
jne
int
mov
ljmp
int3
xor
movsb
and
mov
bound
or
into
aas
shr
fst
loope
stos
lea
sbb
gs
sbb
js
mov
pop
ljmp
lock
xorl
stos
into
xchg
pop
lahf
push
mov
ljmp
sti
jmp
cmp
pop
repz
addr16
test
push
out
xchg
jne
aas
icebp
rcll
mov
mov
adc
aam
loopne
and
stc
fmulp
pop
xor
decl
in
fnstcw
xorb
lods
mov
xchg
jecxz
out
jmp
aaa
aad
xchg
jmp
call
das
lods
push
div
sbb
pop
stos
xchg
mov
btr
mov
sbb
cmp
or
in
jge
in
jno
aad
xchg
rcrb
mov
mov
jge
pop
and
lret
pop
hlt
xlat
jns
arpl
decl
loopne
or
scas
inc
push
loope
sti
pop
and
fwait
sub
incl
push
sbb
cld
in
ja
stos
adc
sub
das
cmc
out
inc
ljmp
xchg
fists
jmp
jno
test
movsl
pop
bound
ret
call
cmpsb
sbbb
push
adc
dec
jge
arpl
lock
clc
mov
ret
xor
out
ljmp
das
add
fucomp
lret
jmp
cmp
test
popf
mov
lahf
mov
adc
and
repnz
neg
xor
xor
dec
mov
incl
loopne
cli
pop
mov
mov
mov
sub
ja
mov
clc
sub
in
cmp
pushf
cmp
sub
ljmp
add
dec
in
scas
scas
aaa
cs
notb
sbb
call
inc
xor
pop
ds
jp
pop
inc
push
leave
pusha
rcr
lahf
mov
movsl
jmp
cs
imul
push
orl
xor
push
clc
add
stos
sbb
clc
adc
pop
sbb
call
add
aaa
mov
dec
add
pop
test
popf
inc
fists
loopne
sbb
add
add
aaa
cmp
pop
frstors
lea
icebp
mov
inc
jecxz
pop
fadds
enter
xor
cmp
movsl
dec
movsb
movsb
mov
lods
imul
mov
cmpsb
mov
lods
pop
inc
pop
repnz
push
cwtl
scas
test
lcall
stos
leave
fistl
jge
in
and
mov
jp
add
push
adc
cs
add
push
lods
addr16
sbbl
jg
or
movsb
aaa
shlb
mov
rorl
ljmp
fiadds
cli
bound
mov
push
jecxz
call
decl
inc
imul
sub
jno
or
inc
and
push
repnz
xor
cmp
pop
and
incl
and
aaa
and
stos
sub
and
pop
add
outsl
inc
pop
out
cmc
xchg
dec
xlat
les
sahf
rcrb
jmp
push
push
pop
enter
inc
cmc
ljmp
enter
xor
or
subb
mov
and
add
adc
xor
or
or
aam
push
sbb
cmp
test
insl
shll
sbb
fidivl
aad
aaa
fisubrl
jmp
scas
mov
ljmp
xor
test
in
jnp
push
cmpsb
inc
test
subb
out
or
loop
dec
xchg
div
mov
cwtl
xchg
jmp
ret
xchg
and
je
adc
dec
outsb
mov
stos
movsl
aaa
std
add
adc
add
inc
andb
add
sub
mov
jmp
sub
out
adc
mov
push
sub
mov
shl
xchg
mov
lods
mov
dec
inc
in
mov
mov
into
test
fcomi
mov
mov
mov
ljmp
cmp
inc
mov
push
jne
dec
xchg
sar
js
push
inc
xor
and
adc
mov
stos
cli
mov
push
dec
lods
stos
ss
test
insl
sti
sub
out
decl
aaa
xchg
cmpsl
mov
mov
fnstsw
fdivrp
mov
pop
jle
mov
pop
fbstp
cs
mull
inc
adc
leave
loope
push
or
incl
mov
lret
sahf
rorl
adc
xchg
and
das
inc
push
mov
push
cli
icebp
and
call
repz
push
jmp
jns
jle
bound
incl
sub
jp
pop
mov
into
out
sbb
pop
movsl
mov
rcll
ljmp
or
mov
jo
es
and
.byte
incl
push
outsl
imul
idiv
outsb
dec
gs
bound
jae
imul
jo
xor
cs
insb
call
push
push
ja
push
jb
jbe
insb
gs
insb
dec
outsl
fs
jne
cmp
dec
dec
xor
dec
xor
outsb
mov
cs
and
data16
popa
jb
pop
dec
imul
mov
sbb
pop
inc
jne
pop
outsb
je
imul
out
jl
outsl
outsb
pop
inc
jo
and
je
jae
pop
ja
inc
inc
push
jg
fs
std
jae
je
jo
pop
vmread
cmp
inc
mov
arpl
dec
dec
inc
add
bound
je
jnp
fistpl
pop
sub
adc
and
jmpw
add
sub
inc
inc
dec
dec
inc
out
insl
mov
inc
sub
dec
pop
push
add
jbe
and
push
dec
push
dec
addr16
data16
das
dec
in
mov
outsl
jmp
sub
and
outsl
jb
and
inc
outsl
jne
fsubr
imulb
outsb
jae
insb
push
and
and
outsl
pushl
push
push
inc
inc
dec
pop
push
push
push
jbe
iret
jne
inc
pcmpeqb
pop
add
cmp
out
pop
sti
ffree
gs
outsb
jg
xor
xor
mov
jl
dec
xor
inc
xor
test
cmp
dec
dec
push
inc
sahf
cmp
sbb
or
out
jae
popa
insb
jo
popa
inc
arpl
inc
pop
sti
mov
inc
outsl
pop
jae
dec
aas
adc
int
jle
pop
push
push
adcl
mov
jnp
fwait
dec
and
dec
jge
sbb
mov
incl
push
inc
dec
inc
pop
inc
dec
pop
imull
push
push
push
inc
add
dec
inc
icebp
ret
jae
add
je
aas
inc
cmp
pop
sbb
ljmp
imul
jl
fnsave
insb
ljmp
and
imul
push
and
sar
pop
imul
add
add
add
add
pop
or
or
out
decl
or
or
or
movups
adc
shll
aas
add
add
shll
push
jnp,pn
shll
pop
jle
aas
or
jl
cmp
add
add
xor
movhps
das
out
xor
jg
jg
xor
repz
add
rorl
or
xor
adc
std
jg
pusha
push
push
inc
push
inc
cwtl
xlat
jae
pop
dec
xchg
fcmovb
xor
and
adc
gs
fs
jo
bound
cld
jmp
sub
xor
cmp
jne
mov
sti
idiv
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
icebp
cmpl
fidivs
jle
push
dec
mov
pop
ret
add
lds
or
cmp
mov
je
aas
cmp
je
in
mov
inc
dec
jne
adc
adc
ja
sti
sub
mov
pop
cmp
adc
enter
dec
or
sub
add
jmp
dec
or
in
sbb
xor
insl
or
adc
idivb
mov
mov
add
div
outsb
mov
mov
add
cmp
and
je
mov
dec
sub
rclb
mov
je
lea
push
push
add
lods
push
push
adc
push
movl
add
shlb
insl
xor
call
add
pop
das
mov
mov
mov
pop
pop
call
in
out
dec
fadd
add
sbb
mov
pop
add
clc
add
jb
pop
fcmovnu
jge
push
dec
push
mov
adc
mov
push
push
adc
lret
jae
push
mov
mov
out
xlat
ss
sub
jle
popf
cmpl
mov
xchg
xor
push
ss
lahf
test
mov
in
xor
push
jbe
enter
lea
in
aaa
adc
add
cmp
inc
loope
jb
fisubrl
lock
loope
es
push
dec
pop
aaa
ret
sti
mulb
pop
jmp
cmp
je
movl
ds
cmp
and
xchg
and
aas
mov
and
imul
adc
or
ja
addr16
xchg
int
mov
jmp
mov
dec
jg
sbb
test
std
adc
int3
push
pop
mov
es
mov
fadd
sbb
aas
dec
inc
adc
pop
or
out
or
mov
fcomip
adcb
and
jmp
orb
fdivs
je
inc
movsbw
popa
or
push
daa
and
mov
fcmovnu
fdivrp
adc
adc
and
inc
add
and
fucomi
add
jo
jnp
pop
push
pop
xor
dec
repnz
inc
clc
ret
mov
xchg
jno
push
mov
shlb
and
sub
idivb
fimuls
mov
je
jmp
lock
je
sbb
mov
sbb
out
mov
fcmove
in
push
clc
in
ficoml
icebp
mov
notb
or
pushf
je
mov
mov
test
pop
mov
ss
cmp
popf
push
push
int3
mov
cmpb
pop
push
test
and
or
sbb
popa
or
push
or
jae
insl
sar
lea
pop
div
stos
stos
sbb
std
mov
into
ret
in
or
pop
mov
push
add
loopne
pop
adc
or
push
push
adc
mov
or
cwtl
mov
movsb
or
fs
cmp
mov
fsubrs
in
idiv
push
incl
jl
pop
jne
and
jecxz
add
fimuls
shll
push
loop
hlt
sbbb
sub
jge
pop
ret
sbb
mov
dec
push
fldenv
incl
jbe
pop
addr16
stos
test
and
ret
bound
sub
adc
jmp
and
pusha
mov
mov
mov
fadds
lret
icebp
xchg
lea
movsl
pop
fmuls
jne
adc
adc
mov
mov
std
pop
ss
fs
cmp
rcr
mov
cmp
add
in
adc
lea
adc
sbb
or
add
lods
lret
bound
push
jae
add
sbb
pop
dec
add
mov
pusha
mov
sbb
cmp
cld
and
mov
lret
enter
add
das
and
lea
cmp
sbb
xor
aaa
xor
mov
ret
mov
mov
add
imul
es
push
xor
mov
inc
pop
inc
lcall
xchg
and
ret
or
pop
jne
mov
je
push
dec
sub
add
inc
add
jne
jle
pop
or
cmpsb
in
pop
in
jne
cmp
add
orl
and
push
sarl
test
js
push
lcall
shll
sbb
adc
push
mov
shrl
jecxz
push
xchg
adc
or
lods
pop
add
or
pop
jge
pushf
or
push
mov
add
pop
pop
in
lea
sbb
and
int3
adc
add
inc
mov
add
mov
cld
push
test
cld
negb
sub
jle
push
add
push
into
xor
fucomi
adc
or
xor
ds
mov
iret
sbb
push
inc
mov
xchg
rorl
movb
rsqrtps
jg
jl
add
xchg
jo
iret
push
in
ss
dec
in
lock
mov
mov
ret
rcrb
imul
nop
add
xor
in
rorb
xchg
out
adc
mov
or
stos
jb
mov
adc
in
push
mov
loop
add
test
jnp
rcr
xchg
data16
push
jmp
cmp
fcomps
add
enter
and
mov
ficomps
testb
loop
mov
xor
jne
xrelease
xchg
or
pusha
xor
inc
push
jne
scas
ja
in
das
mov
test
jo
test
or
cs
neg
sbb
and
or
cmp
fnstsw
jbe
or
cmp
ja
push
add
xor
fcomps
ljmp
push
pop
roll
pop
push
push
or
leave
or
pop
dec
sbb
jl,pn
leave
push
sub
push
add
jb
incl
or
push
or
cmpl
sub
mov
mov
ja
lret
jmp
jno
inc
das
or
adc
mov
jne
pcmpeqb
add
arpl
int
inc
les
or
push
insl
cmp
data16
arpl
sbb
or
les
push
fmuls
adc
loopne
movb
aas
and
test
imul
pop
pop
pop
push
dec
lods
and
mov
fsub
adc
cmp
xor
call
enter
sbb
iret
mov
jl
test
jge
sbb
lahf
lock
dec
xlat
jns
xchg
add
in
sar
lock
push
xchg
and
or
rcll
ljmp
pop
les
hlt
sbb
scas
push
xchg
addr16
push
push
sub
js
insb
imul
or
mov
scas
mov
test
xor
push
pop
jl
push
or
mov
jo
hlt
out
jge
jge
hlt
mov
mov
test
testl
cmp
sbb
ljmp
sti
insl
or
in
push
mov
push
mov
cwtl
adc
les
les
xchg
test
adc
mov
movsl
xor
add
ja
push
push
lods
rcll
push
rcrb
push
movsl
ss
outsb
sbb
dec
outsb
incb
jno
add
ret
inc
xchg
pushl
mov
add
rolb
xorl
jl
aas
fadds
jl
add
or
mov
add
or
aas
pop
or
push
jne
cmp
sbb
sub
clc
orl
cmp
jl
fisubl
ss
rcll
jnp
and
pop
das
ds
and
jecxz
push
push
dec
aam
push
addb
aad
mov
clc
or
popa
push
test
or
mov
test
fnstcw
sbb
test
jbe
outsl
mov
je
lret
mov
dec
and
in
xchg
daa
and
xor
xor
enter
jne
mulb
fadds
xor
add
sbb
mov
scas
sbb
push
adc
rorl
inc
inc
jne
js
arpl
mov
cmp
mov
fisubs
loopne
psrlq
clc
xor
cmp
clc
mov
loope
mov
test
pop
std
mov
push
xchg
loop
xchg
andl
push
and
test
xor
out
xor
mov
flds
call
adc
sbb
push
push
daa
or
aam
lods
flds
lea
sbb
inc
adc
or
push
push
mov
nop
pop
jbe
jge
out
pop
push
pop
push
dec
outsb
lods
xor
fistpl
repnz
xor
lock
gs
std
stos
xchg
ljmp
ficoms
and
test
scas
xor
shrb
mov
pop
ds
lea
cvtpi2ps
pop
and
sub
jbe
and
std
jmp
xchg
or
push
cli
mov
insl
test
mov
cmp
jne
and
setp
sub
test
pop
int3
dec
shrl
push
testl
das
sbb
add
inc
ss
adc
movsb
jbe
orl
lods
add
pop
fsubrs
int3
fstps
inc
mov
xchg
inc
lock
or
insl
andl
loope
push
jp
leave
inc
push
sub
jnp
sbb
mov
test
sahf
popf
in
jbe
int
sbb
popa
test
mov
in
adc
jne
ds
sub
sub
adc
jb
fsubs
mov
dec
je
sub
enter
push
xchg
jne
push
jne,pn
or
aaa
or
jns
popf
jle,pn
in
ret
divb
jne
adc
cli
jmp
sbb
push
cmp
pop
rcrl
or
and
push
inc
push
sbb
push
loope
daa
adc
pop
or
inc
sbbl
xchg
push
es
dec
adc
or
and
stos
jmp
sbb
push
cmp
xchg
mov
jae
dec
test
decb
xchg
mov
fcompl
and
pusha
insb
or
dec
divb
adc
je
push
fcomp
int3
xchg
rorl
adc
push
adc
js
daa
inc
test
sbb
popf
leave
int3
movsb
rorb
mov
lds
imul
ret
push
nop
cmp
push
insb
push
and
lods
jne
adc
mov
pusha
adc
push
mov
adc
adc
or
jne
sbb
out
aaa
mov
cmp
nop
add
lret
adc
insl
andb
xor
add
mov
push
dec
ss
les
push
ret
add
or
pop
lods
pop
fistl
push
mov
jge
data16
shlb
fnstsw
testl
add
jbe
or
jmp
mov
xchg
push
mov
and
stos
add
imul
mov
ljmp
or
adc
push
lods
cltd
adc
int3
repnz
rcll
nop
adc
fdivr
das
jl
stos
aam
sub
aas
fmull
aam
pop
fcoms
comiss
jo
aas
sub
adc
sub
adc
adc
fsubrs
or
inc
or
or
lea
hlt
jp
push
sub
cltd
sub
sar
add
xchg
pop
jns
leave
pop
sti
aaa
mov
xor
sarb
push
sbb
or
cs
sub
and
or
cld
dec
rclb
xor
cmp
rorl
push
jecxz
pop
mov
push
cmp
cltd
wbinvd
rcr
mov
inc
int
imul
xor
pop
adc
mov
aas
cmp
je
and
cmp
popa
push
aam
cwtl
js
xchg
insl
push
add
jnp
call
jge
rep
mov
and
push
rep
dec
int3
ret
js
and
jl
orl
faddp
enter
test
subl
dec
jl
cmp
sbb
xchg
movsl
cmpb
psadbw
pop
je
or
je
push
movb
push
movb
sub
test
inc
xchg
out
push
sbbl
lret
sarb
lret
pop
out
mov
ja
push
jns
cmpb
neg
outsl
adc
jmp
cmp
cmp
shll
add
or
jmp
xor
pop
cmp
outsb
lret
mov
decl
dec
mov
mov
xchg
rclb
ljmp
or
rcrl
pop
dec
lea
shl
mov
sbb
dec
jne
mov
jnp
int3
or
xlat
cmp
jae
add
mov
shll
fmuls
add
jge
mov
jnp
lods
rcr
add
fiaddl
add
push
push
push
inc
or
loope
aam
andb
sub
mov
jg
xchg
add
xor
lea
cmp
push
dec
das
in
into
mov
mov
xor
push
pop
orb
call
inc
out
cmpl
sbb
mov
mov
jo
aaa
and
pop
imul
test
divl
andb
dec
mov
cmp
push
or
pop
ret
add
pop
in
cmp
inc
es
inc
cmp
ja
lds
xchg
add
mov
jmp
pushl
xor
sti
pop
repz
or
cmpl
xor
mov
mov
or
add
fidivrl
rorb
mov
gs
xor
or
push
pop
jmp
mov
mov
dec
mov
test
xlat
mov
dec
call
push
jl
jmp
mov
insb
sar
call
fidivrl
fsts
hlt
add
and
add
pop
xchg
adcl
arpl
lock
inc
inc
je
dec
daa
fwait
or
pop
jo
sti
sbb
or
sti
push
mov
jae
jbe
mov
mov
sub
imul
pop
bound
ret
or
ret
cwtl
insl
out
mov
mov
pop
or
insl
push
test
mov
jecxz
mov
inc
or
mov
push
or
mov
dec
xchg
mov
cmp
movsb
mov
ret
and
sbb
sti
inc
aad
push
pop
in
dec
mov
fdivrl
les
aaa
mov
out
pop
mov
lods
mov
mov
leave
scas
fnsave
test
add
dec
or
push
std
fidivl
pop
inc
jne
adc
int
mov
pushf
xchg
and
mull
and
inc
or
test
lds
jb
addb
xchg
sub
cmp
add
adc
inc
clc
adc
jno
mov
mov
out
push
andb
inc
push
cmpsl
bound
int3
and
push
mov
mov
mov
push
sti
out
and
jno
stos
jmp
push
scas
cmp
fs
jae
mov
xor
adc
icebp
sub
add
sub
popa
bound
or
test
pop
test
pop
lahf
aam
cmp
pop
outsb
das
dec
adc
or
or
cmp
aaa
jle
or
or
inc
mov
test
loopne
sbb
cmpb
add
inc
inc
cmp
out
jmp
mov
lret
fidivs
je
or
or
je
cmp
add
xor
mov
mov
aam
test
dec
pop
insl
pushf
jno
call
adc
mov
xor
mov
inc
ljmp
fdivs
cmp
jmp
inc
aad
xor
xchg
xor
xor
mov
cli
mov
imull
sbb
cmpsb
popa
pop
pop
je
jmp
lcall
pop
and
inc
add
inc
ja
add
xlat
into
mov
aas
jmp
xchg
mov
movb
and
inc
jmp
sbb
mov
adc
fiaddl
lea
mov
test
cltd
mov
rolb
cmp
lds
dec
sbb
popf
mov
ds
mov
push
add
mov
test
stos
cmpb
insb
or
add
pop
insb
mov
sarb
aas
inc
mov
dec
mul
neg
add
pop
inc
add
pop
sub
sbb
add
push
test
rol
mov
fwait
pop
outsb
or
mov
cmpl
push
mov
enter
mov
in
cmp
lea
sti
sbb
or
and
mov
dec
xchg
mov
jp
add
je
add
mov
and
adc
or
ja
imul
cmp
test
or
decb
adc
jmp
or
jmp
push
mov
jl
sub
xchg
scas
cmp
xchg
add
cvtpi2ps
push
lods
push
nop
arpl
daa
dec
daa
dec
cmp
fwait
lods
and
add
mov
xor
stos
push
cmp
sbb
adc
mov
and
cmp
sbb
testl
push
mov
push
pop
and
adc
je
or
movhps
mov
pop
nop
push
pop
loope
into
dec
out
fs
jp
and
add
lock
movsb
push
lret
sti
es
into
xchg
ljmp
mov
inc
mull
movsl
fcoms
popa
add
mov
movsb
or
and
add
pop
add
xchg
cwtl
sbb
fisttpl
mov
sub
in
xchg
mov
shlb
push
cltd
in
roll
or
pop
or
add
mov
or
pop
in
lds
pusha
mov
lret
fwait
out
xlat
xor
icebp
fcmovnu
xor
push
adc
in
adc
dec
xorb
rolb
adc
mov
fsubrs
pop
ret
add
adc
dec
in
pop
fsubrs
adc
xchg
and
movsb
adc
sbb
subb
ds
cld
pop
or
in
loopne
rcll
out
sbb
jmp
or
lock
mov
and
imull
dec
aam
add
jle
push
lods
xor
fcompl
cmc
sub
add
jne
xchg
xor
popf
incl
sbb
ja
fdivs
jb
mov
movsl
xchg
xchg
ds
iret
xchg
jle
addr16
jmp
andl
inc
pop
push
in
pop
push
sbb
add
aaa
jp
jecxz
neg
sbb
imul
and
add
add
outsl
fildl
cmp
ficoms
and
xchg
pop
adc
or
or
cs
cwtl
mov
add
add
and
add
das
inc
mov
lea
loopne
or
lods
or
pop
roll
lret
addl
push
add
in
cmp
out
out
xchg
mov
call
inc
push
and
push
cmp
mov
or
aam
ret
xchg
xchg
push
adc
mov
or
les
adc
test
icebp
loop
push
scas
or
pop
xchg
sub
fnsave
scas
movsb
and
push
mov
push
or
pop
xlat
push
lods
loopne
jl
pop
sbbb
sbb
shll
pop
mov
int
mov
cmp
hlt
in
xchg
inc
adc
cltd
into
xor
in
sbb
push
push
sub
jmp
dec
pop
xlat
adc
push
mov
mov
jo
and
movsb
rolb
fnsave
xor
push
add
jb
pop
jge
pop
pop
pop
jbe
cmp
mov
mov
fldpi
inc
shlb
leave
pop
fs
mov
addr16
inc
je
cmp
iret
jmp
mov
sbb
lret
xchg
push
lret
inc
add
pop
add
adc
or
jge
sub
jb
pop
or
adc
pop
shlb
addr16
mov
jnp
outsl
std
dec
or
jmp
lds
adc
iret
jo
in
mov
or
or
mov
data16
enter
cmpl
std
dec
sbb
rcrl
jbe
push
outsb
add
jge
or
stc
inc
pop
fs
mov
fldenv
push
ss
into
pop
std
jmp
test
pop
dec
push
inc
mov
inc
and
gs
lret
inc
or
das
adc
imul
pop
sarl
push
or
add
add
loope
sbb
sbb
fnstsw
dec
jmp
or
cmpsb
ja
and
push
stos
insl
xchg
xlat
fwait
or
push
lret
push
and
xor
int
mov
push
adc
sub
jb
mov
ret
sbb
jo
andb
or
test
daa
mov
push
test
add
xor
test
in
push
mov
or
lds
pop
add
mov
aaa
shl
or
jmp
and
incb
insb
mov
adc
mov
mov
pop
jle
push
mov
or
sub
lret
pop
imul
pop
addr16
lea
insl
mov
mov
or
sbb
jl
sub
or
pusha
add
popf
icebp
ret
push
jg
iret
cmpsb
inc
testb
jne
add
mov
outsl
roll
mov
xchg
mov
mov
les
or
cwtl
sub
push
xor
lea
aam
jmp
lock
sub
jo
inc
bound
adc
and
push
pop
nop
mov
fdiv
stos
xchg
mov
insb
das
push
xor
add
jb
in
shll
xor
rcrb
in
sbb
les
data16
pop
filds
or
inc
push
push
ja
sbb
adc
xor
or
jp
push
and
mov
mov
je
das
arpl
clc
mov
lret
pop
mov
push
push
test
lods
lock
nop
aaa
and
sbb
sti
xor
jmp
mov
mov
mov
aam
add
cwtl
les
push
adc
or
ret
xchg
or
test
ret
or
pop
lock
mov
xchg
fs
fistps
or
inc
inc
push
das
sbb
int
popa
popf
jmp
outsb
pushf
sbb
sub
jne
orb
dec
push
or
sub
rolb
sub
aas
mov
iret
lcall
aam
movl
out
sbb
repnz
lret
lods
jmp
sub
mov
mov
dec
dec
ljmp
cmp
adc
mov
mov
xchg
lahf
mov
mov
mov
cmpb
fcomps
je
inc
sbb
push
lock
add
pop
nop
xlat
adc
cmp
add
dec
add
pushf
and
fisttpl
sbb
mov
adc
and
mov
inc
fwait
aas
call
cmc
pop
inc
sbb
pop
pop
push
mov
xor
cmp
bound
adc
cmp
imul
push
push
add
test
icebp
jae
jae
sbb
push
xchg
mov
popf
jb
pop
test
out
mov
faddl
jne
fdivs
jae
inc
dec
jbe
mull
adc
xlat
xchg
in
hlt
xor
push
daa
adc
sub
imul
sbb
pop
cwtl
shl
inc
xor
add
leave
or
dec
add
add
testb
jg
sbb
rorb
pop
jmp
xchg
push
roll
lret
lcall
or
and
and
add
pop
xchg
outsb
cmp
jbe
lea
push
push
xchg
mov
jmp
xchg
arpl
sbb
sbb
loop
lea
fidivrl
pop
inc
pushf
sub
fwait
sub
or
sub
add
imul
add
pop
push
dec
mov
mov
aam
lea
cmp
add
push
sub
and
push
hlt
sub
dec
les
pop
sbb
movsb
lcall
rcr
dec
push
nop
fs
mov
xchg
mov
pusha
mov
int3
addr16
popa
and
adc
mov
xchg
aad
clc
sbb
push
push
sarb
cmpsb
lea
dec
mov
push
mov
xor
mov
fwait
mov
inc
pop
cmp
mov
fcmove
sub
and
adc
jb
imul
mov
insb
xchg
jae
mov
sbb
jb
mov
insb
cmpsb
adc
xor
cmp
jbe
add
notl
lds
dec
pop
cmp
inc
test
add
add
jo
lea
add
add
incl
add
xor
jbe
mov
mov
lea
adc
out
enter
sub
xor
sbbb
mov
jb
insb
fildll
rcrb
xchg
sbb
rcll
or
cmp
ss
cwtl
or
sbb
into
or
cmp
bound
adc
cmpl
dec
xchg
jbe
add
push
mov
cltd
fstl
outsb
test
xchg
shll
or
cmp
push
imul
add
lea
jmp
xor
xor
test
push
test
pop
sbb
and
cwtl
add
pop
inc
mov
dec
jge
ret
ja
xchg
cmp
aad
jbe
lret
adc
dec
mov
lds
in
inc
add
adc
aam
sahf
loopne
add
xor
inc
mov
push
icebp
notb
push
fcmovnu
pop
les
repnz
mov
add
out
xor
mov
mov
aaa
mov
inc
lds
add
xlat
mov
lret
inc
push
cltd
dec
mov
test
jge
push
mov
nop
fldcw
jl
fs
and
dec
sbb
jbe
push
cmp
stos
shl
insb
cmp
xor
arpl
rorl
pop
and
push
xchg
sbb
add
inc
push
or
sbb
or
aam
popf
jns
divb
mov
clc
std
mov
repz
or
stos
add
push
and
pop
mov
sub
add
sub
sub
fwait
mov
xor
xlat
stos
sbb
xor
sbb
adc
or
cmpl
mov
push
call
add
imul
xlat
cmp
mov
add
mov
jge
jmp
add
nop
inc
sahf
add
push
push
mov
sbb
sti
or
cmc
mov
add
pop
xchg
cmp
and
inc
jne
push
jmp
adc
loope
add
push
clc
sbb
jo
cmc
cmp
pop
inc
test
into
push
dec
jbe
test
inc
dec
call
lods
mov
jle
adc
testl
mov
insb
mov
sbb
rolb
ret
adc
mov
movsl
inc
cld
sbb
sbb
jne
out
xor
popf
xchg
sub
mov
fs
pop
jo
jo
clc
push
or
add
mov
sbb
sub
adc
cltd
xor
int3
push
mov
mov
add
daa
loopne
sub
xchg
jecxz
clc
jnp
xor
push
or
jl
xchg
inc
std
sub
push
sbb
inc
lock
xchg
cli
cmp
setne
daa
push
mov
xchg
cwtl
rcll
push
xchg
ret
sbb
mov
and
inc
hlt
je
cmpl
movl
push
adc
push
or
fmuls
pop
rorl
adc
int3
or
scas
push
mov
ret
and
add
mov
jmp
jp
jae
dec
mov
or
add
xchg
add
fwait
adc
cmp
cmp
pop
and
dec
imul
mov
outsl
or
je
or
sub
push
sarb
stos
sub
adc
ficompl
stc
mov
mov
mov
push
sbb
ljmp
fcomps
sbb
xor
pop
in
and
or
dec
data16
frstor
or
movaps
add
push
jle
mov
cmp
inc
fld
push
pusha
dec
add
orb
cmpsl
clc
mov
xor
mov
filds
push
scas
popf
lods
jbe
adc
hlt
adc
push
test
loope
cmp
push
je
inc
mov
call
clc
cmpsl
rcrl
rcll
pop
adc
mov
inc
xor
add
fsubrl
sbb
fcomp
in
mov
push
add
scas
or
pop
push
dec
lock
icebp
sbb
je
push
pop
jb
jne
mov
addr16
adc
adc
sub
andl
inc
sbb
mov
ds
xchg
dec
clc
mov
nop
or
cmp
or
lret
or
js
add
or
mov
and
mov
inc
cmpb
and
pop
aam
adc
dec
lea
push
rclb
mov
and
push
jg
or
adc
or
and
or
or
jle
xor
push
mov
rolb
lahf
jl
push
mov
sub
mov
les
notl
in
or
and
inc
mov
inc
add
lods
push
cwtl
dec
add
pop
adc
int
sub
mov
add
jmp
stos
rep
push
mov
in
lds
adc
sub
mov
dec
repnz
sbbb
mov
rol
aam
mov
pop
mov
adc
adc
cmp
xchg
inc
sbb
je
adc
daa
test
cmp
xor
jne
test
add
pop
push
pop
adc
jne
loop
pop
add
push
lods
pop
pushf
jne
dec
insl
cmp
and
lcall
rorl
dec
add
sarb
dec
inc
ss
mov
test
iret
jo
add
movsb
ja
sbb
mov
mov
mov
push
xor
shlb
cwtl
cmp
addr16
cmp
pop
int
insl
adc
addb
adc
or
les
sbb
or
push
mov
ljmp
je
ret
lret
sub
xchg
xor
pop
pop
insl
add
mov
inc
das
or
fsubl
push
inc
inc
movl
jbe
pop
add
mov
xchg
dec
mov
add
fwait
mov
dec
mov
int3
insl
dec
adc
addl
xlat
mov
inc
mov
dec
stc
pop
call
mov
inc
adc
sbb
mov
ror
loopne
outsl
repz
xor
adc
test
aam
xchg
sbb
xor
mov
mov
rclb
push
aam
sub
sbb
imul
xor
xchg
pop
ds
xor
push
dec
add
cmp
repnz
pop
pusha
inc
test
lret
pop
dec
adc
cmpsb
adc
cmp
xchg
stos
hlt
sub
inc
je
mov
js
daa
mov
ret
jmp
add
test
mov
or
xor
cwtl
lds
je
cltd
negl
loopne
mov
movsl
and
sbb
mov
xor
xchg
xor
das
jb
stc
insb
or
imul
xchg
xor
push
cmp
cmp
push
inc
cmp
sbb
push
adc
adc
test
add
out
sub
cmp
test
mov
lods
andl
cmp
push
addr16
dec
adc
mov
jg
and
push
dec
js
jecxz
dec
inc
int3
imul
fnstenv
or
mov
push
xor
cmp
pop
cmp
es
push
mov
pushf
cmp
out
adc
inc
pop
fwait
jo
lods
add
cmp
cmp
call
dec
xchg
cmp
nop
pop
sbb
push
add
sbb
xor
jne
jmp
or
popf
bound
cmpsl
cmp
and
inc
out
push
cmp
fiaddl
pop
ds
mov
fcompl
push
rolb
push
rolb
mov
dec
sub
push
push
ret
faddl
adc
orl
mov
enter
loopne
cmpb
cmp
mov
shrl
and
sbb
test
pop
dec
mov
lret
and
mov
add
sarl
jecxz
les
jne
or
xor
or
xchg
xor
ja
pop
push
or
xor
fcoms
mov
rcl
ds
adcl
jne
push
adc
int3
pop
or
fsts
adc
jne
jbe
mov
pop
call
popf
or
cwtl
enter
add
lods
hlt
pop
dec
in
mov
test
in
pmaxub
mov
popa
pop
cmp
inc
fistpl
jne
xchg
cmp
loopne
dec
mov
rcll
ss
mov
inc
add
sub
xor
inc
push
push
add
test
dec
and
adc
movsl
test
add
xchg
testl
dec
fsubrl
adc
xor
add
mov
sahf
insl
adc
in
pop
icebp
and
int
adc
es
jbe
push
int
push
pop
mov
mov
cs
jne
enter
fs
stos
mov
pop
lock
nop
pop
out
push
jns
repnz
mov
cmp
ss
mov
fsubrl
rclb
fs
jb
and
jl
mov
push
cmp
pop
stos
mov
rorl
add
enter
adc
fwait
inc
sarl
leave
jns
rcll
fsubrs
call
cs
sbb
push
shl
fs
sbb
hlt
cmp
or
adc
and
add
addb
sub
jb
lock
add
or
mov
sbb
push
cmp
sbb
pop
push
ret
lods
inc
ss
push
les
push
sbb
push
jno
ficoml
jmp
inc
mov
xchg
jnp
dec
xchg
jge
push
sahf
push
out
push
inc
and
pop
sub
push
xor
sbbb
pusha
scas
mov
das
inc
dec
sbb
pop
push
cmp
lahf
or
pop
outsb
negl
roll
dec
and
sarb
jbe
inc
andb
xchg
dec
jb
cmpsb
push
shrl
pop
mov
cwtl
out
push
arpl
stos
aam
dec
dec
mov
sub
push
push
push
or
and
push
adc
pop
jp
clc
pop
shlb
cmpsl
push
sbb
imul
sti
fistl
xorl
push
push
jnp,pt
bound
mov
je
or
pop
lods
loop
xchg
rcrb
imul
in
jae
push
pop
dec
in
adc
divps
ss
shlb
add
stos
aad
pop
popa
adc
inc
int
pop
add
pmaddwd
mov
sti
shrl
fisttps
into
adc
ja
inc
int3
jge
ss
pop
sbb
addr16
mov
movsl
shl
xchg
push
out
mov
push
push
lods
push
push
and
xchg
ret
inc
sub
pop
jnp
stos
xor
sbb
or
adc
call
or
les
pop
adc
adc
les
xor
cmp
adc
fs
hlt
push
aas
dec
and
test
insl
je
je
adc
mov
pusha
ss
stos
xchg
imulb
dec
aaa
scas
jns
xchg
movsl
pop
fs
das
cld
enter
icebp
mov
push
mov
ret
push
inc
test
jle
inc
mov
ss
pop
jnp
cmp
mov
test
sub
test
add
test
ds
mov
or
add
push
and
negb
cmp
mov
push
cwtl
adc
mov
dec
leave
add
nop
pop
inc
push
pop
jmp
pop
mov
sub
repnz
cmc
cmpb
adc
adc
jle
inc
or
jg
jmp
dec
rcrl
jg
and
mov
pop
pop
rolb
cmpl
fucomip
inc
in
and
pop
push
cmp
adc
cmp
jbe
add
ret
aaa
data16
in
addr16
test
inc
dec
iret
out
outsb
iret
dec
push
push
sahf
jo
enter
cld
xor
cmp
push
fs
lock
inc
hlt
xor
push
fmull
movb
adc
mov
push
not
mov
aam
ja
or
cmp
push
lea
xor
test
fdivr
outsb
aam
xchg
sar
inc
pushf
iret
popf
int3
mov
or
xchg
lock
push
in
rolb
movsl
mov
lret
mov
xchg
sub
fildl
pop
lea
in
lea
jge
inc
cld
or
push
aam
imul
inc
sar
xor
or
shlb
adc
lea
inc
sbb
into
idivb
inc
and
jl
pop
popf
pusha
dec
js
add
push
je
test
popa
movsb
jnp
cmp
jne
adc
jle
cmp
pop
int
pop
pop
rorb
adc
or
subl
cmp
push
pop
fcomps
mov
testl
jl
xor
ret
push
push
int
aas
pop
fldl
ja,pn
push
jne
shrl
and
push
adc
pop
jbe
sbb
mov
lods
ret
outsl
idivb
dec
ss
or
pop
cmpsb
jmp
scas
outsb
insl
inc
hlt
cmp
adc
mov
cli
add
pop
push
pop
cmp
sub
add
aam
loop,pn
je
push
sub
mov
pop
sub
dec
aaa
adc
or
call
jno
mov
aaa
sbb
and
push
mulb
mov
mov
pushl
or
leave
jmp
or
jl
add
cmc
mov
sub
cmp
jl
add
jg
shl
push
add
push
sub
push
xor
xor
leave
cmp
fistpll
sbb
push
or
push
fbstp
repnz
push
mov
jo
add
adc
fs
flds
or
jle
pop
sub
sar
hlt
push
push
fimull
pop
sub
mov
xchg
fwait
nop
call
leave
jge
fsubs
les
fs
mov
mov
bound
fdivs
and
mov
mov
lret
jmp
xchg
push
adc
xor
ja
cmpsb
pop
inc
jge
sub
push
cmp
sti
and
mov
and
mov
or
mov
mov
sbb
xchg
leave
and
inc
sub
push
lock
adc
add
popf
in
jae
and
or
in
inc
or
xchg
aas
pop
arpl
aaa
sbb
pop
jne
pop
in
rclb
jmp
lods
je
inc
lods
scas
pop
push
or
or
lock
mov
or
or
sbb
push
sub
push
sbb
push
pusha
or
stos
inc
cmp
loope
sbb
adc
loop
imul
adc
sub
jne
push
and
xor
add
hlt
lock
shll
and
push
jne
sbb
dec
push
mov
insl
add
pop
leave
js
mov
add
roll
mov
sub
insb
fisubl
ja
orl
push
add
sub
mov
adc
mov
lret
sbb
sbb
sbb
sti
mov
and
sub
mov
mov
fld
subb
cli
xadd
inc
aad
movsb
pop
dec
and
loope
jle
push
cmp
push
adc
and
mov
clc
and
pop
cmpl
in
push
or
add
adc
add
ss
jbe
in
mov
rorl
add
clc
pop
repz
cmpsb
push
cld
pop
decb
cmp
sti
add
add
pop
mov
loope
aad
addr16
arpl
movsb
mov
xchg
out
fcompl
mov
outsb
inc
dec
cmp
dec
jo
popa
push
or
push
sub
mov
leave
and
out
and
pop
je
cmp
je
mov
mov
inc
add
push
pop
flds
daa
inc
fsts
jo
push
movzwl
push
adc
sub
test
cli
rorl
ljmp
test
test
jbe
push
test
dec
xor
xchg
in
mov
bound
sahf
jbe
out
or
pop
xchg
push
pop
mov
dec
cmp
add
fnstenv
cmp
inc
mov
or
mov
cs
das
lahf
std
or
js
push
inc
dec
ficoml
jl
mov
add
cmp
ja
or
mov
clc
rcl
rolb
dec
sbb
pop
add
lahf
xchg
sbb
ret
pop
mov
or
das
mov
sti
or
or
inc
mov
mov
pushf
push
sbb
pop
sbb
push
or
push
aaa
push
or
or
or
and
and
or
mov
or
mov
cmp
push
std
push
push
adc
adc
cli
movsl
adc
jo
cmp
ljmp
mov
insl
add
adc
shlb
sub
pop
aad
les
add
leave
jne
lahf
ret
pop
faddl
dec
or
js
dec
or
fdivrs
sbb
js
lods
std
xchg
or
outsb
inc
js
lea
adc
xchg
pop
dec
jne
mov
mov
mov
fnsave
mov
cs
push
je
mov
xor
fiadds
jecxz
shll
dec
cwtl
cmp
pop
mov
sbb
testb
je
dec
je
add
adc
or
pop
stos
push
and
jnp
mov
jmp
or
mov
add
adc
rcrb
add
inc
mov
pop
filds
xchg
sub
mov
ror
rcll
xchg
cltd
movl
mov
fwait
pop
xchg
imul
jmp
push
add
shr
inc
cmp
pop
shl
lea
push
or
stos
fidivs
aad
xchg
insl
push
xlat
pop
push
push
add
cld
clc
cmp
jg
pop
push
cmp
je
inc
jmp
and
ds
pop
cmp
fcmovnbe
push
push
cmp
pop
sahf
add
push
or
pop
mov
and
jnp
fsubs
jbe
sbb
lock
fisubs
inc
call
or
sub
lea
sbb
adc
fmull
jbe
ret
add
lods
dec
push
int3
jmp
sub
or
sub
in
lds
sbb
aad
test
sbb
cltd
xchg
loope
icebp
xchg
ret
lea
mov
arpl
xchg
nop
mov
xor
dec
push
cltd
sub
push
mov
insb
xchg
fld1
fdivrl
insl
add
rorb
inc
imull
bound
pop
or
or
jo
or
ja
and
ret
pop
cmp
jg
fiaddl
fwait
stos
stos
mov
sbb
scas
les
sub
and
jne
sbb
divb
dec
std
das
sub
sub
in
test
and
or
and
jg
enter
pop
les
enter
inc
pop
and
add
dec
je
adc
inc
ss
mov
push
xchg
inc
pop
mov
add
inc
test
mov
push
loop
ret
cmp
push
into
pop
push
xchg
sub
mov
adc
es
pop
outsb
or
inc
push
lret
mov
icebp
cltd
push
push
arpl
cmc
sbb
outsl
inc
lcall
and
xor
clc
and
lea
jb
mov
loopne
lret
jbe
jg
adc
mov
add
add
sub
and
ss
cmpl
sbb
test
out
sbb
inc
sbb
pop
fs
sub
gs
lock
sbb
push
inc
cmp
mov
mov
shr
mov
dec
test
or
push
lea
pop
lea
or
mov
mov
xchg
xchg
movb
add
nop
insb
test
or
mov
push
or
je
mov
das
je
dec
loop
push
sub
push
pop
sbb
xor
sahf
and
adc
orb
flds
stos
fwait
push
or
jnp
scas
or
or
dec
ja
jmp
cmp
jne
daa
or
sbb
adc
dec
add
cmp
pop
or
add
push
sub
mov
out
push
pop
jno
adc
idivb
adc
pop
sub
sbb
mov
add
sub
bswap
outsl
xor
ja
mov
mov
out
mov
xchg
push
cld
loope
nop
sbb
scas
sub
je
adc
mov
jne
add
sbb
jecxz
insb
push
incl
aam
mov
mov
cmp
subb
adc
sub
data16
add
sahf
nop
mov
jmp
inc
inc
cs
movsb
addb
jp,pn
push
imull
fimuls
inc
mov
sbb
xor
cmpl
and
mov
inc
mov
or
inc
dec
addr16
and
inc
sbb
mov
mov
enter
dec
dec
jo
aad
inc
or
ljmp
push
jp
adc
mov
or
jae
add
mov
adc
cmovge
xor
push
rolb
and
add
arpl
push
sar
push
cmpl
je
jle
outsl
jge
ret
adc
jns
cmp
xchg
mov
xor
out
sbb
fdivrp
sahf
and
bound
adc
or
pop
cmc
xor
nop
push
roll
add
xor
outsl
movsb
mov
inc
addr16
jo
adc
test
je
pop
dec
cmpl
fnstenv
sbb
aaa
cmp
in
loopne
mov
lods
cmp
pop
cltd
fcomip
pop
loopne
inc
enter
mov
bswap
pop
dec
cmp
into
and
std
lods
mov
enter
push
cmp
addr16
sub
or
shrl
pop
in
xor
lods
movsb
mov
adc
fnstsw
xorl
cmp
mov
mov
mov
cmp
xor
pop
push
loope
pop
dec
add
fdivs
je
pop
js
sbb
ret
sub
lea
int3
adc
or
inc
mov
lods
push
jnp
clc
add
sub
lods
push
lea
or
or
or
push
jle,pt
mov
js
orl
out
shlb
push
xorl
mov
mov
jle
pop
stos
push
popa
hlt
adc
cmpsb
sbb
and
push
adc
mov
mov
loope
cltd
cmp
loope
daa
dec
into
push
ljmp
adc
lods
add
ret
sub
pop
insb
lods
xchg
lea
sbb
or
add
adc
add
push
push
mov
sbb
inc
addr16
or
jo
pushf
push
sub
and
pushf
push
xor
jle
cmp
pop
inc
and
xor
test
sbb
outsb
aas
inc
mov
je
mov
or
dec
jo
in
je
imul
jne
sbbb
and
loope
and
and
mov
adc
lock
jne
stos
push
sbb
dec
mov
mov
sahf
sbb
cmp
push
push
dec
jl
js
inc
push
inc
cld
pushl
daa
add
dec
ret
dec
fsts
insb
cmpl
ss
sahf
push
cmp
dec
pop
add
or
or
and
in
insb
dec
enter
push
pop
ja
fiaddl
mov
mov
adc
hlt
sub
mov
inc
adc
test
inc
ror
xchg
xor
mov
cltd
decb
gs
jle
pop
xchg
sub
adc
inc
or
shl
or
xor
dec
les
mov
in
scas
out
dec
je
add
dec
sub
shl
neg
loopne
sbb
mov
or
sub
or
xor
sbb
inc
lea
sbbl
aad
mov
push
loope
or
jl
mulb
xlat
lret
cmp
inc
adc
loopne
mov
imul
xlat
insl
sub
enter
sub
xchg
fnstenv
sub
and
mov
sbb
add
and
mov
push
in
adc
mov
jecxz
push
dec
inc
dec
inc
pushl
aam
insl
sub
outsl
jnp
or
sub
pop
sbb
xor
adc
enter
popa
mov
cmp
pop
outsb
in
aaa
inc
imul
inc
and
add
and
mov
sub
jle
mov
xlat
daa
mov
mov
add
movsb
cmpl
add
jo
outsb
in
jge
gs
lahf
fs
pushl
pop
andl
add
add
add
ret
and
jo
inc
ror
out
ja
ja
jno
push
mov
push
jecxz
cs
mov
adc
aad
sub
push
add
mov
mov
or
push
or
xchg
dec
add
je
or
sub
dec
jge
popa
ret
jae
test
sbb
xchg
sub
sub
aaa
and
enter
in
call
sub
and
and
and
enter
or
dec
incl
push
rcrl
push
jb
ret
sub
fcomps
pop
inc
add
mov
mov
enter
adc
shl
add
inc
cmp
mov
icebp
fldl
jl
fiadds
xchg
lods
pop
push
pop
lcall
cmpsb
and
imul
js
push
sub
aam
fdivp
push
or
mov
in
add
ljmp
push
jns
adc
or
rep
andl
xor
sub
jb
icebp
sub
sub
push
pop
adc
fdivr
adc
enter
sahf
add
ret
mov
and
adc
rolb
or
add
stc
mov
test
xchg
inc
enter
dec
addb
add
scas
std
sbbb
add
test
pop
iret
add
lea
lea
movsl
movsw
push
out
push
in
lock
mov
subl
lea
mov
lods
inc
decl
cmpb
jne
mov
or
sti
jae
mov
mov
and
sub
jg
call
fdiv
fstpt
fbstp
add
mov
js
cwtl
stos
in
std
cmp
mov
out
ret
or
test
mov
push
xchg
lret
mov
je
sahf
mov
xchg
je
cmpl
jl,pt
sbbl
cmp
cmp
or
aas
jne
or
pop
cs
or
aad
or
out
dec
movsl
lcall
dec
fadds
jg
mov
rclb
adc
mov
cmp
jnp
add
push
and
jge
je
adc
aaa
arpl
or
insl
xchg
in
jnp
add
add
add
rcl
push
clc
dec
popf
adc
mov
test
insb
xchg
outsb
fdivr
add
inc
push
sbb
cmp
je
xchg
mov
enter
lock
jno
mov
lea
fwait
arpl
mov
movsb
clc
inc
mov
movl
mov
mov
cmp
add
pop
add
pushf
jle
mov
popa
adcl
lret
btc
stc
add
jl
jmp
add
and
and
lea
mov
sub
inc
sub
das
cld
cmp
fnstcw
mov
dec
test
out
and
or
or
and
es
je
jne
inc
mov
fdiv
inc
lods
mov
cmp
jbe
push
push
mov
xchg
adc
mov
je
mov
out
jo
cmp
les
xor
mov
add
mov
xorl
rorb
add
mov
inc
adc
fsubl
mov
xor
loop
jle
sbb
icebp
mov
jno
incl
mov
jg
loop
jle
mov
add
mov
add
neg
mov
mov
or
dec
mov
dec
jg
inc
daa
inc
int3
lds
xor
out
dec
ljmp
mov
pop
push
sub
push
shr
test
mov
sub
cmp
clc
pop
push
mov
mov
rol
dec
mov
cmp
lret
aas
scas
cmp
jge
mov
mov
mov
inc
inc
and
mov
bound
inc
cmpb
or
outsl
mov
pop
mov
sub
add
mov
push
adc
dec
or
cmpsb
addl
mov
mov
orb
mov
jg
mov
sbb
in
inc
adc
add
or
sbb
loope
add
jno
push
add
add
sti
jnp
roll
mov
inc
add
xor
shlb
mov
jnp
mov
or
pop
jg
ss
cmp
push
mov
jne
xchg
lret
jge
negb
ljmp
movswl
jmp
mov
ljmp
jge
mov
orb
or
jl
add
mov
lock
pop
pushf
lcall
adc
test
or
cmp
pop
jp
sahf
inc
shr
jl
cmpl
jne
jbe
cmp
mov
sub
inc
cmp
jg
lods
hlt
sub
add
sbb
mov
mov
or
divb
cmp
loopne
inc
clc
mov
add
sub
pop
push
pop
sub
jns
divl
leave
xor
or
or
add
xorl
cmp
test
add
out
outsb
mov
mov
movsl
sub
xchg
movsl
stc
incl
jne
test
je
mul
daa
das
in
mov
lea
adc
mov
or
cmp
decl
enter
jl
inc
pop
add
mov
int
push
or
pop
dec
xor
lahf
inc
sar
cmp
mov
mov
jle
mov
mov
sahf
sub
enter
subl
mov
xlat
inc
outsb
cmpb
dec
test
mov
add
xchg
push
mov
inc
inc
sub
frstor
push
pusha
xchg
add
andl
inc
adc
or
imul
dec
adcb
or
mov
les
pop
or
inc
inc
sub
jl
and
mov
cmpsl
outsl
scas
xor
or
jge
pop
pop
mov
xor
inc
dec
test
cmp
dec
push
arpl
mov
mov
movsb
and
fsubs
hlt
add
dec
inc
pusha
rcrl
push
xchg
es
ljmp
mov
mov
das
dec
sbb
push
mov
xchg
fxtract
cmp
cltd
xchg
sbb
cmp
cmp
inc
cmp
jge
jnp
movsb
lea
xor
adc
xor
sbb
xor
sbb
aas
adc
sbb
mov
dec
in
in
sbb
cmp
and
pop
mov
aaa
cld
dec
adc
jg
xchg
imul
sbb
leave
or
adc
cld
jecxz
xchg
jbe
inc
inc
and
subl
std
jns
mov
mov
mov
xchg
jl
xlat
xchg
sbb
and
ret
cld
or
mov
cmp
sub
and
dec
in
cld
and
imul
push
and
in
loop
dec
shld
in
call
stc
and
xchg
stc
js
mov
inc
pop
mov
adc
mov
sub
inc
sub
push
arpl
repz
or
add
jno
sbb
or
and
adc
test
xor
aam
inc
leave
mov
cmp
or
pusha
leave
cmc
inc
and
and
lcall
jg
mov
cmp
xchg
adc
xchg
or
mov
ret
mov
inc
lea
and
adc
push
les
push
push
sub
pop
adc
add
jbe
sub
add
push
sub
sub
jg
xor
sbb
or
mov
ret
ret
mov
lcall
sub
imul
hlt
jnp
mov
add
or
jmp
push
add
sbb
or
dec
xchg
inc
jae
jp
dec
pop
or
adc
or
jg
add
stc
or
dec
ljmp
mov
popf
cli
faddl
sbb
in
or
push
sub
add
bound
mov
cld
mov
jp
jns
jecxz
or
push
xchg
cmp
orb
push
push
mov
jge
pop
dec
jle
mov
iret
into
inc
call
sub
push
enter
fadds
test
add
test
dec
pusha
mov
pop
cld
in
add
adcl
pushw
jmp
pusha
add
nop
ror
andb
jp
mov
outsb
cld
xchg
jb
lea
test
test
pushf
and
aad
loopne
out
mov
jle
mov
sub
or
cmpsl
add
mov
imul
xchg
pop
mov
mov
sti
loop
sbb
mov
mov
repz
sbb
or
xor
decb
fwait
inc
push
lods
dec
pop
fisttpl
mov
add
pop
insb
jmp
mov
pop
test
dec
scas
shll
jae
mov
enter
roll
and
mov
dec
dec
dec
lods
xchg
gs
dec
lret
mov
xchg
or
lret
inc
sub
fcmovne
adc
in
sub
push
jg
mov
jge
imul
sub
mov
rcr
jb
es
inc
rclb
jp
jne
add
and
fs
lods
pop
and
xor
lret
les
push
sub
rcll
jns
les
and
and
and
hlt
cmp
inc
mov
imul
orb
fs
adc
ret
sbb
out
mov
lret
xor
or
fidivrl
aas
sbb
mov
fs
jns
add
outsl
fidivl
mov
inc
mov
and
pop
rorb
das
sar
sbb
xchg
cltd
das
enter
fldt
inc
pop
jb
pushf
lcall
mov
dec
mov
or
dec
in
and
pop
adc
xchg
ja
dec
aas
lea
mov
xor
rorb
xchg
dec
stos
cld
clc
jbe
je
jae
xchg
cld
mov
mov
addr16
loopne
pop
add
xor
call
mov
ficoms
mov
data16
xchg
push
test
movsl
push
ss
adc
pop
orb
lahf
adc
mov
or
mov
xor
ror
jl
xor
mov
dec
dec
lock
xor
int3
dec
cwtl
xor
adc
jmp
xchg
xchg
cld
mov
dec
jge
test
dec
hlt
sub
and
sub
sub
aam
and
mov
roll
mov
sbb
lret
orl
je
cmpl
push
pushl
and
jno
cltd
call
sbb
sbb
and
shrb
decl
xor
adc
out
cmpl
mov
xor
out
mov
stc
push
xor
mov
xchg
xchg
mov
pop
je
inc
xor
dec
data16
add
mov
std
mov
inc
mov
pop
jae
xor
push
jae
sub
sbb
cmp
lds
ljmp
out
sbb
or
mov
add
shll
inc
add
ss
popl
cmp
lock
in
into
popf
adc
xor
rclb
jne
xor
add
sarb
mov
outsb
lea
icebp
ffree
and
inc
add
dec
and
dec
adc
add
adc
mov
adc
insb
insl
inc
push
data16
mov
pop
fidivs
adc
dec
arpl
sti
xchg
adc
mov
xor
or
or
popf
sbb
insb
ret
push
cmp
cli
sub
pop
adc
sbb
shrl
fsubrs
pushf
or
and
or
add
and
jl
jne
xchg
mov
insb
aaa
pop
add
sub
push
lds
idiv
jmp
dec
cmp
lods
xlat
mov
ret
mov
inc
fdivrl
pop
xchg
dec
lret
xor
std
mov
cmp
or
push
nop
pop
popf
pop
inc
mov
repnz
jge
mov
inc
xchg
mov
inc
mov
xor
and
test
das
jne
push
sub
mov
mov
add
arpl
cmp
imul
mov
push
sahf
in
xchg
mov
mov
pop
jne
stc
std
push
push
jne
and
jae
push
cmp
add
and
enter
cli
push
push
roll
inc
subl
cmpl
sbb
in
push
mov
sbb
insb
leave
jl
pop
and
xchg
fs
in
ret
inc
scas
or
lea
mov
int3
adc
test
sbb
shr
pop
in
xchg
push
mov
mov
mov
add
out
jl
movsb
inc
add
pop
jbe
cmpl
call
cs
xchg
ljmp
sbb
mov
push
add
mov
outsl
in
pushl
push
mov
sub
cmp
sbb
jb
lea
icebp
ja
inc
lret
loopne
shrl
jl
iret
shl
inc
dec
cmp
xchg
push
jbe
jne
sbb
sbb
in
mov
inc
das
mov
shr
inc
cmp
push
clc
jle
jmp
sub
mov
and
ror
jmp
push
loop
push
pop
mov
mov
test
ret
pusha
stos
shl
xchg
or
lds
add
cmp
les
lds
in
pop
pop
cmp
ja
or
call
outsl
pop
sub
mov
mov
aam
imul
add
adc
data16
push
jo
in
sub
mov
xlat
lods
inc
jecxz
insb
dec
test
push
or
cmp
sub
aad
sbb
loopne
enter
pop
adc
incl
or
add
add
add
xchg
out
dec
std
inc
inc
shl
and
jp
scas
push
in
jb
int3
addr16
loope
mov
mov
pop
xor
lods
mov
mov
pop
sbb
sbb
push
jbe
adc
lods
cld
lret
ja
add
mov
adc
jne
fistl
push
ficompl
mov
in
push
icebp
mov
mov
add
fimull
pop
mov
mov
and
and
inc
cli
inc
mov
add
pop
push
sub
insb
and
ficompl
dec
and
mov
ljmp
or
pop
sbb
cmp
bound
sbbl
aam
mov
add
mov
pop
or
mov
adc
and
test
xor
jae
mov
ret
xor
sub
jl
add
lock
mov
add
inc
test
lods
mov
sub
mov
jb
and
jmp
or
aaa
or
sub
mov
adc
mov
add
cld
fwait
push
enter
inc
dec
push
add
pop
mov
adc
gs
and
jae
popa
adc
out
or
outsb
push
arpl
and
xor
std
sub
out
dec
inc
dec
dec
cs
add
or
je
jo
imul
gs
fbstp
push
xchg
xor
inc
jb
mov
add
das
in
add
stos
inc
sbb
inc
testb
imul
je
fistl
or
pop
addl
in
sub
mov
dec
fnsave
jns
int
pusha
fsubs
pop
push
lahf
fnstsw
or
jae
popa
mov
inc
out
outsb
popa
stos
lret
sub
or
gs
out
pusha
push
popa
arpl
jae
pop
inc
jbe
sub
pop
arpl
test
fidivl
adc
cmp
and
fwait
cs
dec
and
mov
jbe
push
and
jle
insl
inc
fs
inc
arpl
add
add
aaa
mov
inc
mov
mov
add
stc
mov
inc
add
dec
add
cmpsb
jmp
mov
push
add
inc
cmovae
inc
mov
add
push
add
add
inc
pop
dec
add
or
inc
and
pop
fistpl
adc
dec
dec
dec
add
cltd
scas
dec
pop
inc
pop
push
add
inc
dec
sub
push
add
push
outsb
jae
imul
push
sbb
xlat
mov
pop
and
dec
xchg
scas
jnp
fsubs
or
push
add
xlat
lea
inc
or
pop
cltd
das
jbe
xor
push
mov
add
inc
inc
adc
or
dec
and
jg
dec
push
push
loopne
push
jbe
push
add
subb
inc
dec
adc
aaa
sbb
xlat
add
cmp
rorb
sar
idivl
sbb
pop
jle
mov
jae
add
insb
push
fs
dec
inc
and
inc
inc
ud2
ss
pop
pop
sub
daa
and
int
cmp
sbb
jg
subl
cmp
aas
daa
adc
fwait
je
addb
add
add
movsb
jnp
adc
add
incl
std
cmpb
add
gs
dec
dec
push
dec
dec
enter
int3
sti
add
or
jbe
daa
mov
xchg
xor
arpl
jg
idiv
or
or
or
or
add
add
add
std
insb
enter
ret
and
leave
jbe
add
and
or
cmpsb
mov
inc
and
and
insb
xchg
and
and
push
or
ret
inc
sub
sub
inc
and
add
pop
pop
dec
and
ret
xor
pop
mov
mov
ret
mov
dec
dec
dec
and
sbb
xchg
pop
pop
push
data16
insl
mov
push
mov
mov
add
in
jne
dec
push
pop
sysexit
rorb
fldenv
and
pmulhuw
mov
lret
dec
fwait
dec
mov
sub
or
xor
sbb
add
aad
adc
test
sti
mov
sbb
sbb
or
insl
aaa
xlat
cs
xor
add
adc
lret
sbb
mov
or
adc
xchg
cmp
add
popa
ja
or
push
cmp
arpl
fnstcw
or
or
lds
popf
pushf
rclb
cmp
add
cmp
sub
xor
test
or
add
xor
mov
push
das
or
push
imull
sub
mov
add
testb
pop
mov
xor
mov
add
and
or
ret
sbb
cmc
fsub
fcoml
testb
xor
xchg
add
add
push
mov
int
std
in
push
pop
and
add
add
or
decb
mov
pop
mov
or
pop
mov
int3
mov
add
xor
mov
adc
pop
add
cld
int
fsubs
adc
and
and
insl
adc
adc
add
sbb
pop
add
add
push
pop
ja
adc
jnp
push
jnp
testb
add
adc
lods
cltd
int3
push
push
or
pop
add
or
out
push
mov
mov
xor
jbe
in
or
mov
adc
adc
add
and
insb
inc
pop
out
addr16
dec
sbb
das
pop
sbb
add
sbb
std
add
mov
push
lret
adc
or
and
lcall
sbb
or
nop
dec
or
out
mov
popf
add
rolb
sbb
xchg
aaa
and
jge
inc
cmp
cmp
adc
daa
mov
add
shll
cs
push
adc
in
sbb
aad
pop
push
fisttpll
sbb
dec
mov
pop
sbb
sbb
sub
sub
mov
decl
pop
lahf
adc
shlb
pop
in
or
adc
push
mov
sbb
arpl
xchg
or
push
dec
outsl
out
or
sub
call
adc
inc
cmpsl
and
push
inc
popl
int3
or
es
ja
inc
or
pop
shlb
pop
inc
test
push
xor
shrb
dec
push
dec
jnp
sbb
dec
sbb
sbb
sbb
or
adc
dec
inc
jge
adc
mov
or
sbb
adc
sbb
movb
inc
popf
push
pop
shl
fadd
daa
fimull
dec
cmp
xor
out
jbe
std
sub
xchg
mov
inc
movsl
iret
dec
sahf
sub
sub
or
jl
or
sub
inc
push
dec
sub
movb
inc
xchg
aaa
xchg
inc
es
aaa
arpl
push
add
sbb
add
xor
pop
popa
rorb
jmp
imul
or
bound
or
mov
xor
fsubl
or
data16
ret
add
or
dec
leave
sgdtl
adc
loope
pushf
sbb
cmp
test
or
inc
orb
es
mov
pop
ds
jge
dec
leave
push
repnz
add
inc
add
test
add
popf
inc
xchg
or
lods
xor
fidivs
adc
nop
cmp
int
adc
inc
pop
inc
push
cmp
or
inc
or
xchg
inc
dec
call
daa
sbb
or
sbb
enter
push
dec
daa
loope
sbb
xor
sub
add
xchg
jge
dec
popf
sbb
or
fsts
add
xchg
xor
aas
or
adc
xor
xchg
adc
add
inc
push
add
mov
pop
xchg
xor
inc
pusha
pusha
sub
addr16
xchg
and
pop
pop
push
xchg
xor
pop
daa
and
movlps
adc
jnp
imul
push
mov
jmp
lret
xchg
adc
daa
rorb
orb
or
cwtl
xor
aaa
dec
enter
pusha
arpl
or
jo
xor
addr16
cmpsb
xor
jns
imul
outsl
push
pop
adc
or
and
imul
adc
mov
xchg
or
test
mov
and
sbb
mov
push
test
ret
fs
or
sub
test
push
push
mov
sub
jbe
pop
ret
cmp
sbb
sbb
xchg
lock
adc
jbe
fnstenv
push
rorb
ja
and
fs
js
das
lock
es
jns
xor
pop
cmp
jge
es
pop
add
sarl
ret
push
adc
or
notl
jnp
mov
ss
sbb
xchg
sysret
xchg
mov
insb
adc
mov
cmp
or
incl
adc
dec
pop
mov
push
rolb
add
or
adc
inc
pop
dec
mov
sub
xchg
xor
cmp
or
inc
and
inc
cwtl
xor
push
add
je
xor
ud2
pop
inc
dec
dec
ud0
dec
movups
loope
leave
or
and
sbbb
xor
sysret
arpl
push
add
popa
ret
adc
or
xchg
sahf
sti
dec
cmp
and
arpl
arpl
xchg
hlt
sbb
pop
lea
cld
cmp
push
movsb
cmp
test
ret
cs
dec
negl
sub
jno
push
adc
mov
dec
nop
add
insb
sub
xchg
add
adc
sbb
cmc
xchg
cmpb
orb
dec
dec
or
pop
lcall
adc
movsl
and
push
out
sbb
push
movsb
lret
xchg
xor
xchg
adc
in
adc
sub
cwtl
xchg
adc
in
sbb
leave
or
cltd
popf
or
xchg
pop
sbb
orl
mov
cwtl
cmp
std
pushf
xchg
cmc
dec
mov
push
inc
cmp
repnz
push
dec
sarb
dec
stos
lods
pop
mov
js
loopne
mov
xor
scas
mov
repnz
xor
sbbb
loope
addr16
lods
adc
xor
add
ljmp
or
int3
or
push
sbb
adcl
jns
cwtl
inc
cmp
xchg
xor
inc
cmp
pop
or
adc
add
mov
and
add
cs
xchg
cmc
popa
test
repz
push
add
shl
jo
ret
jge
xchg
and
xchg
mov
lcall
push
nop
or
scas
sbb
sbb
cli
mov
or
adc
or
or
inc
dec
jno
add
cmp
mov
mov
mov
adcl
ret
mov
or
ja
sub
jns
adc
mov
lea
cwtl
sub
lock
inc
jge
punpckhwd
repz
mov
and
sbb
stc
dec
mov
and
outsl
or
or
ss
daa
xchg
nop
and
mov
adc
or
sbb
sbb
pop
lahf
mov
push
in
dec
leave
mov
jo
mov
insb
insb
inc
shr
cmpl
add
ret
mov
or
and
mov
sbb
sbb
add
adc
leave
enter
dec
and
or
push
xor
rclb
adc
inc
adc
or
xchg
adc
adc
fists
cmp
ljmp
int
test
xor
jns
add
leave
cmp
leave
enter
ficomps
or
cs
inc
jne
or
or
jno
aam
outsl
dec
cmp
inc
repz
in
or
jno
sub
vmovdqu
adc
jno
pop
mov
enter
mov
or
add
ret
mov
frstor
xchg
xchg
push
pusha
cltd
or
jmp
aam
xor
and
call
dec
add
inc
rorb
leave
push
repnz
mov
add
stc
mov
flds
test
sub
adc
xor
xchg
or
popf
xor
daa
dec
lods
xor
jo
fidivs
mov
xchg
aas
or
sbb
mov
lret
push
pop
or
sarl
imul
pop
adc
push
and
lds
or
jae
push
jnp
adc
movsl
adc
mov
add
and
andl
decl
pop
sub
adc
in
add
add
add
movsb
loope
outsl
out
mov
adc
fadds
cltd
push
call
pop
or
es
jno
sub
or
int
addr16
sub
jo
shr
cmp
out
jge
cmp
sti
sub
nop
lods
shrl
rorb
add
ret
popa
add
add
push
shlb
dec
stos
leave
stc
repz
hlt
mov
test
lock
hlt
sbb
icebp
or
xchg
fs
into
in
hlt
or
xchg
or
imul
test
xor
push
pop
push
daa
rcr
pusha
or
pop
mov
enter
pop
cmp
lret
cmpsb
or
fs
pop
add
sub
and
jnp
pop
push
adc
and
sahf
adc
adc
sub
lret
push
sbb
mov
nop
pop
outsb
sbb
sbb
add
adc
jb
pop
bound
cmp
clc
and
cmp
pusha
out
subb
and
cmp
orl
fwait
add
pop
jnp
pop
mov
add
pop
dec
add
shl
dec
adc
add
and
xchg
in
and
push
fucom
add
inc
add
pop
das
ror
out
add
incl
xorb
cmp
sub
jne
mov
add
lea
adc
pop
insb
mov
nop
jge
adc
gs
xor
mov
arpl
jmp
mov
pop
add
mov
roll
and
pop
xchg
out
jnp
cmp
jb
test
in
mov
insb
fwait
cs
jmp
add
add
xor
pop
adc
push
hlt
pop
add
lahf
sbb
lock
mov
mov
jnp
cmp
outsl
jno
pop
adc
ret
jne
insl
xchg
int3
dec
aaa
adc
adc
pop
test
cmp
dec
xor
sti
das
jb
add
std
jo
outsl
mulb
insl
add
jae
dec
jo
and
repz
dec
and
cmp
bound
imul
insb
inc
pop
jb
lahf
pop
pop
popa
and
lea
outsl
mov
mov
insb
sbb
jno
es
test
pop
repnz
jno
adc
dec
inc
aaa
ss
popf
jo
je
insl
or
xor
movq
or
cmp
push
clc
cmp
add
jae
push
out
or
bound
popa
jbe
adc
fs
adc
sub
lahf
xor
sbb
sbb
sbb
addb
jl
inc
sbb
stos
add
xor
cmp
stos
andb
or
nop
mov
add
jg
flds
jb
notl
cmp
daa
add
sub
add
mov
or
xor
bound
dec
pop
jb
in
nop
pop
push
add
xchg
inc
push
mov
jae
dec
test
out
ret
mov
or
cmp
jo
adc
fwait
dec
pop
imul
pop
cmp
sbb
xor
test
sbb
push
push
inc
mov
dec
leave
pop
subl
add
and
mov
sti
mov
inc
push
xor
jmp
inc
sti
or
jne
outsl
jns
mov
or
sub
lea
dec
inc
dec
aas
imul
sarl
push
sub
jecxz
lcall
jns
add
add
xchg
je
pop
pop
insb
pop
pop
in
inc
add
fdiv
bound
inc
lods
dec
jno
dec
test
fwait
cmp
add
add
sbb
or
xor
sub
mov
sbb
dec
jb
push
orl
int
lds
jmp
push
nop
enter
inc
aaa
jbe
dec
xorl
pusha
add
xchg
or
pop
mov
daa
sub
inc
xlat
jne
push
mov
movsl
lods
add
loope
aad
orb
mov
push
arpl
imul
fdivl
test
inc
push
mov
xor
jns
and
push
out
daa
and
lds
jb
xlat
outsb
test
dec
outsl
test
pop
aad
aaa
icebp
and
adc
pop
outsl
pop
lea
fnstsw
pop
and
adc
mov
fisttpl
js
mulb
fstl
xor
mov
jo
imul
scas
sti
dec
andl
or
mull
stos
aaa
test
ss
movl
push
sub
jg
in
sub
and
ret
pop
in
dec
movsb
and
xorl
test
loope
outsl
insb
cmp
jecxz
jmp
fnstcw
mov
sub
push
out
je
fs
mov
outsb
in
insl
dec
test
popl
sub
arpl
adc
fbld
sbb
jne
xchg
mov
or
ljmp
insb
push
aaa
popa
negb
pop
int
dec
pop
jge
xchg
loope
sbb
jns
add
fwait
jne
jmp
jnp
push
push
sub
movsb
test
mov
movsl
inc
ljmp
mov
xchg
mov
cmc
and
pop
sti
or
push
pop
daa
inc
and
mov
sbb
dec
adc
aam
add
jo
out
or
in
jge
jp
shll
outsl
popa
mov
push
sub
jns
leave
call
add
es
je
outsl
sub
sbb
and
jmp
pop
xchg
or
inc
pop
cli
lods
roll
and
pop
and
cwtl
xor
adc
jnp
loopne
aas
jg
lods
bound
gs
push
aaa
pop
lret
lahf
sbb
push
pusha
pop
jne
adc
sti
data16
packuswb
cmpsl
jno
mov
sbb
adc
pop
lret
jecxz
ret
aaa
std
imul
addr16
jae
mov
pop
fwait
xor
sbb
mulb
sub
mov
ret
icebp
inc
outsl
inc
inc
sub
testl
jae
imul
or
enter
outsl
cltd
cmp
or
dec
adcl
jmp
arpl
sbb
sbb
pop
adc
jne
stc
xor
xor
test
scas
das
popa
dec
jp
cli
add
push
push
dec
mov
or
test
pop
daa
inc
ret
or
or
sbb
cmpl
pop
test
daa
ja
cmp
and
aaa
push
xor
fisubrs
xor
inc
outsl
xor
fstpl
lcall
imul
push
scas
loope
js
loope
out
sbb
ret
mov
and
adc
popf
push
sti
in
dec
pop
push
imul
and
dec
fstp
pop
mov
pop
lds
cmp
and
xchg
xchg
mov
xchg
xor
jno
cmp
inc
sub
mov
and
pop
ret
adc
mov
add
fildll
dec
pop
mov
and
jns
jae
imul
jnp
imul
cmp
xor
pusha
adc
js
in
sub
mov
out
push
add
and
popa
shll
mov
movsl
jnp
push
outsl
mov
mov
cmp
shrb
dec
sub
sub
gs
jae
add
mov
in
hlt
jnp
sbbl
or
arpl
xchg
add
fldt
out
hlt
leave
push
pop
push
pop
dec
movb
bt
gs
and
jg
mov
test
adc
shrb
jmp
cmp
cmc
bound
insl
orl
or
xor
and
and
push
in
int
mov
lahf
xor
sbb
jb
outsl
dec
rorb
lds
stos
outsl
dec
sub
mov
filds
sbb
rolb
es
or
xlat
adc
adc
enter
dec
and
test
sbb
adc
jmp
mov
jbe
and
sbb
shr
popf
inc
stos
xor
cltd
jmp
pop
pusha
subl
fsts
or
push
inc
int
and
xchg
fnstenv
jmp
add
mov
int3
push
push
ja
loopne
loopne
push
shr
xor
and
sbb
pop
sub
test
aas
ror
mov
lock
xchg
in
sbb
xlat
jmp
cmp
inc
push
xchg
lods
sub
jne
or
iret
sti
xor
dec
insl
jne
jno
cmp
in
sub
mov
fsts
inc
push
cmp
or
mov
inc
xor
add
aad
insl
sbb
or
push
repz
add
pop
pop
and
xchg
imul
loopne
push
dec
mov
sbb
rep
sbb
mov
or
xchg
in
ja
mov
push
aas
popa
das
and
aaa
pop
addl
push
inc
out
jo
mov
fldcw
or
addb
and
xchg
lea
push
mov
push
call
scas
out
adc
inc
fcoms
push
int
inc
sbb
mov
sbb
mov
xchg
dec
sbb
insb
flds
xor
les
add
push
ud1
mov
fadd
int3
lds
pop
jne
cmp
mov
lret
fldl
fdivs
sbb
add
cmpsl
fldcw
or
sub
adc
or
ret
sbbl
mov
push
inc
enter
sbbl
leave
push
or
gs
in
xor
jo
xor
sub
mov
outsl
dec
mov
mov
dec
leave
or
sub
xchg
adc
movl
inc
add
cmp
add
jo
xchg
insb
fildl
repz
je
scas
popa
fnstsw
and
pop
push
dec
rcrl
and
push
leave
jnp
aaa
int3
push
adc
imul
pop
add
xor
jp
dec
sbb
or
sbb
add
mov
out
add
out
leave
adc
adc
mov
sub
incl
pop
push
cmpsl
sub
loop
jge
rolb
push
outsb
and
orb
out
stos
xchg
adc
ret
neg
or
ds
pushl
movsl
mov
lock
add
lods
sub
int3
jnp
outsl
fcoml
incl
js
mov
sub
mov
test
jnp
pop
cmp
mov
mov
in
insb
fildl
push
mov
and
and
insb
in
std
les
dec
mov
ljmp
test
dec
add
call
js
pop
adc
jns
or
mov
clc
fiadds
cmp
fisttpl
ret
loopne
lcall
pop
sbb
cmp
test
scas
out
clc
out
jne
dec
fdivs
mov
lcall
lods
out
add
scas
notb
or
cs
pop
bound
sbb
imul
ljmp
mov
push
xlat
or
mov
lock
fistps
outsb
dec
nop
and
pushl
fucomi
test
in
lahf
dec
cmp
add
rep
sahf
fcomp
std
das
add
mov
out
sarl
jmp
out
out
mov
push
sti
pop
jg
cmp
lock
out
ljmp
push
out
cld
mov
lcall
std
ljmp
mov
cmpb
idivl
lahf
aam
ljmp
jg
or
in
inc
sbb
or
or
fdivrl
dec
std
pop
xlat
mov
jmp
xchg
idivb
std
fbstp
mov
out
cmpsl
jle
scas
neg
ljmp
cmp
ror
test
lock
rcl
call
ffreep
push
ret
xchg
sti
dec
inc
mov
add
push
pop
sti
inc
bnd
adc
push
movsl
in
scas
test
stos
xchg
inc
adc
incl
adc
adc
push
pop
mov
decb
push
fcomps
std
inc
pushf
sti
pop
idiv
mov
pop
xor
incl
lret
push
push
jle
push
std
cmc
outsl
add
arpl
push
rcl
mov
stc
fistps
and
lahf
cmp
nop
mov
mov
shlb
std
std
sub
cmp
cmpl
mov
jmp
movsl
stc
movsb
inc
in
fdivrl
jmp
idiv
inc
loopne
add
cmc
mov
jnp
sbb
decl
setle
mov
sti
inc
pushl
and
imul
lds
push
daa
fcmovnu
push
scas
and
je
xchg
pop
ja
jg
std
idiv
cmp
dec
in
repz
std
out
pushf
inc
xor
les
cmpsb
push
jae
xchg
incl
fildll
add
in
test
dec
stc
aas
cmc
push
rorb
pushl
rcll
xchg
adc
and
es
jl
or
shr
mov
fdivr
mov
shrl
sub
sub
inc
outsl
ss
inc
out
stos
mov
aad
movsl
dec
or
xchg
repnz
in
testl
repz
inc
call
inc
sarb
jg
mov
adc
cs
push
lods
adc
sub
cld
aam
cli
out
lock
into
sub
pop
pop
sbb
repnz
pop
sbb
sub
cltd
jg
aam
jnp
ret
cmp
jne
push
mov
sbb
divb
repnz
lahf
scas
movb
pushl
out
fbstp
inc
cs
popf
das
movsb
outsb
inc
and
push
cltd
ret
call
stos
pop
cmpsl
mov
cmp
ljmp
addr16
xlat
cmp
pop
cli
pop
mov
jb
lret
jo
nop
push
pop
mov
ja
js
ret
stc
cwtl
incl
mov
lock
loop
popa
xchg
xchg
shll
jmp
adc
xchg
adc
sar
lcall
dec
push
jle
fisubs
dec
xchg
mov
sahf
mov
mov
cmp
push
bound
mov
pop
mov
pop
mov
sub
pusha
mov
shl
push
push
inc
xchg
xchg
daa
sar
ljmp
dec
mov
rcr
es
call
pop
xchg
sub
sbb
call
and
xchg
xchg
lret
mov
jecxz
and
sbb
out
dec
pop
push
shlb
pushl
enter
ljmp
mov
mov
insl
insl
fidivrs
mov
add
mov
stc
push
gs
test
fistps
ljmp
jno
mov
call
or
push
das
mov
jnp
and
les
lods
cmc
test
mov
out
push
gs
add
cmpsl
jg
pop
hlt
ret
adcb
sub
cmc
lret
or
outsb
jnp
lods
je
inc
adc
push
pop
xchg
dec
ror
sub
sbbb
bound
inc
xor
imul
mov
or
insl
sahf
stos
cmp
adc
dec
filds
push
stos
mov
jle
push
pop
jnp
jg
cli
push
mov
inc
add
pop
nop
dec
es
sbb
pushl
inc
and
xor
adc
jp
mov
fmull
les
leave
adc
push
add
mov
xchg
dec
pushl
push
jecxz
inc
cmp
outsl
mov
lcall
pop
loopne
jp
push
mov
cmp
rol
fcmovu
cmpsb
mov
stc
in
arpl
addr16
lods
nop
sti
fsubp
pop
sbb
in
lcall
aas
mov
or
mov
xor
fidivl
push
and
jg
das
xor
push
xchg
je
shrl
fsubr
sbb
adc
push
icebp
cmp
das
das
cmpsl
adc
mov
addr16
std
dec
sbb
xlat
mov
jmp
mov
adc
les
imul
add
mov
shll
cmp
dec
and
jg
push
dec
push
iret
imul
icebp
inc
pop
clc
sub
data16
lret
lahf
insl
gs
mov
push
mov
push
cs
repz
in
inc
in
jg
ljmp
or
pop
jle
sbbl
aaa
jo
xchg
dec
push
push
dec
insl
or
jmp
sub
pop
stc
xchg
add
ljmp
jmp
mov
inc
pop
jge
lods
jmp
sub
out
sub
call
scas
scas
fcom
sti
xor
adc
pop
push
loope
adcl
popl
jle
aaa
xor
decl
stos
sbb
movl
push
mov
dec
out
gs
call
negl
mov
mov
push
mov
push
rorl
sub
pop
lcall
lcall
xchg
mov
sub
ljmp
mov
out
push
mov
sti
fwait
cmp
mov
push
out
mov
es
fsubl
xor
mov
ljmp
push
call
jns
mov
mov
xchg
rorb
ret
mov
inc
cmp
cmc
das
jge
pop
push
insb
scas
and
sbb
test
dec
sbb
or
cmp
or
call
into
faddp
xchg
push
mov
push
leave
int
push
sub
inc
ds
inc
rcll
push
push
xchg
mov
add
and
in
push
mov
fnstenv
fistpl
add
mov
adc
stos
jmp
pop
ds
clc
ljmp
mov
cli
jge
pop
daa
aam
cltd
mov
inc
sub
pop
lahf
add
lcall
loope
cmpsl
lds
mov
clc
xchg
mov
push
loopne
repnz
icebp
call
mov
lret
sbb
push
fwait
sub
pop
mov
push
sbb
mov
aas
aad
and
stos
dec
imul
mov
insl
arpl
mov
dec
or
or
sarb
into
xchg
pop
inc
lahf
call
pop
inc
jecxz
push
adc
decl
xchg
leave
fwait
xchg
inc
adc
loop
mov
es
imull
jmp
inc
sahf
lea
sbb
mov
sub
dec
jle
adc
mov
icebp
decl
sbb
fs
mov
int3
in
ss
popa
loop
mov
pushl
clc
inc
push
cli
cs
or
and
mov
pop
ret
rcll
adc
cmp
cmp
data16
int
in
call
cli
adc
das
inc
sarl
xor
push
insl
pop
mov
xchg
mov
xchg
or
daa
mov
and
cli
add
adc
fsts
sti
sbb
push
ss
das
lock
add
lcall
jp
inc
test
xchg
ja
stos
hlt
addb
adc
or
or
pop
push
sub
pusha
les
adc
outsb
mov
pushl
jle
push
xchg
cli
jmp
jle
push
push
or
and
stos
mov
incl
mov
js
xchg
push
mov
mov
xlat
mov
jmp
call
movsl
push
aam
aas
push
sbb
out
pop
aad
dec
push
or
lahf
mov
incl
push
fisubrs
inc
mov
out
in
push
sub
out
pushl
leave
sbb
repnz
push
mov
xchg
lods
sub
ljmp
mov
and
xor
out
inc
movsb
jmp
mov
mov
sub
lcall
add
rorb
xchg
enter
js
cmpsl
jbe
sbb
ds
mov
shrb
push
jb
xor
dec
and
incl
shll
int
gs
and
pop
jecxz
es
pop
mov
mov
jns
add
orl
in
shll
push
clc
arpl
popf
andb
loopne
test
sub
dec
mov
push
clc
fcomip
mov
sbb
add
push
fidivrs
inc
ss
lahf
test
mov
push
sahf
dec
dec
pop
push
popa
cmp
dec
sbb
jmp
lds
mov
pusha
aas
mov
and
cmp
into
dec
call
inc
xor
jmp
addr16
daa
pushf
lock
push
cmp
dec
inc
push
arpl
into
negb
sbb
sub
icebp
mov
xchg
ss
xor
inc
inc
jmp
mov
add
dec
xorb
pop
push
imul
incl
pop
in
cmc
loope
jo
popa
or
idiv
jae
inc
xor
lcall
idivb
leave
mov
sub
inc
scas
jmp
mov
out
dec
and
and
jle
sar
call
in
push
sbb
sub
mov
int
divl
cmp
popf
ficoms
pop
mov
jo
dec
ret
mov
pushf
pushf
jg
inc
aad
cs
loope
lea
stos
add
pushl
outsl
adc
hlt
xchg
aas
sbb
sbb
sbb
icebp
pop
lods
sbb
repnz
imul
mov
push
or
sarl
scas
push
xchg
dec
fs
scas
es
jg
call
test
sbb
lds
fildl
nop
inc
xchg
adc
inc
fildll
ret
outsl
mov
mov
cmc
fildll
pop
xchg
cmp
jmp
mull
adc
add
and
xor
mov
mov
push
xlat
mov
jle
fisttpll
xchg
push
pop
ja,pn
pop
mov
mov
xchg
push
pop
cmp
cli
in
sub
js
in
or
push
incl
outsl
dec
scas
in
sbb
cwtl
ss
dec
jge
xchg
push
mov
rcr
dec
and
sub
sub
mov
inc
push
xlat
adc
push
mov
and
fcomi
fistpll
ljmp
in
jb
movsb
xchg
outsb
xchg
dec
push
push
cld
dec
sub
adc
aas
pop
in
xchg
aam
dec
lock
imull
clc
inc
bound
ljmp
pushf
pop
or
sub
cmp
pushl
push
add
mov
ds
pop
test
out
mov
xchg
mov
inc
in
or
inc
or
or
push
fst
fs
push
mov
push
es
inc
pop
pop
popf
push
cwtl
cwtl
mov
mov
mov
dec
push
adc
xchg
push
mov
dec
daa
dec
inc
sbb
xlat
fninit
cmc
movsl
cli
movsb
js
mov
push
pushf
pop
ds
sbb
jmp
mov
jbe
mov
stos
sub
lea
aam
decl
ror
push
and
or
pop
pushf
pop
xor
scas
mov
cld
mov
outsb
pop
adc
test
pop
push
xchg
adc
xchg
mov
mov
lcall
mov
xor
arpl
popf
pop
les
push
or
ficoml
xor
fisubrs
imul
iret
xchg
cltd
jecxz
pop
dec
cli
pop
push
ja
fnstenv
lock
mov
shlb
cli
fildl
ljmp
cmp
xchg
pop
stos
mov
pop
mov
dec
negl
jl
ret
push
mov
xor
jle
inc
call
aam
stos
stc
std
cltd
cmpsl
adc
decb
inc
lcall
cld
cmp
inc
lahf
rcr
pop
xor
mov
cmp
cmp
int3
cmp
jae
push
and
lea
inc
test
jb
mov
decl
xchg
aaa
inc
push
fs
int3
mov
dec
jmp
sub
or
adcl
push
jl
pop
and
push
push
ret
mov
movsb
fildll
hlt
jg
out
jnp
adc
or
jge
mov
or
push
imul
jmp
cwtl
cli
pushl
mov
movsb
sbb
aas
jp
outsb
mov
int3
fcompl
add
std
lcall
add
gs
push
xchg
and
testl
push
ljmp
loop
jnp
push
xchg
aad
pusha
pop
or
fildll
stos
lahf
cmp
loop
call
pop
mov
int
inc
mov
inc
shrb
mov
add
cld
icebp
push
mov
or
ljmp
lods
push
jp
dec
into
dec
mov
mov
cmpsl
movsb
movsb
jb
push
pusha
sub
clc
stos
call
shrl
push
nop
pop
jae
pop
addl
mov
fcmovnbe
jns
andb
lcall
call
orb
ret
or
sti
call
nop
mov
cmp
test
mov
subl
fnstsw
addr16
jle
test
aaa
sti
jmp
pop
clc
pushl
test
scas
pop
pop
or
loopne
movsb
cmpsb
mov
mov
movq
sahf
or
xchg
sub
jno
daa
lock
cmp
jle
call
push
out
add
enter
stc
lds
enter
lcall
loopne
call
pop
cmp
gs
xor
xchg
jbe
pop
in
xchg
xchg
mov
fnstsw
xlat
pop
adc
sbb
imul
jge
clc
adc
mov
mov
cld
xchg
jne
dec
clc
mov
sub
push
cmpsl
aam
jns
in
dec
mov
pusha
cmpsl
sbb
pushl
jg
rcll
lds
cmp
icebp
loopne
cmp
je
mov
lret
adcl
lock
clc
mov
mov
stc
roll
addr16
sub
adc
fcomp
or
cmp
movsb
cmp
cmp
es
lcall
lret
bt
inc
imulb
ret
sbb
fwait
jno
dec
jo
icebp
pop
pushl
and
mov
ret
repnz
mov
inc
aad
popf
das
inc
aas
ljmp
inc
arpl
adc
loope
lahf
addr16
mov
clc
push
pop
cld
sbb
repnz
out
jl
and
icebp
fists
out
std
dec
mov
xchg
movsl
mov
jne
call
cli
jmp
pop
rorb
xlat
cmp
insl
outsl
mov
lods
out
ljmp
inc
je
sub
int
decb
in
pushf
xchg
mov
pop
cltd
idiv
mov
cld
sub
jnp
jg
push
pusha
jns
repz
aaa
add
test
mov
xor
sarb
sub
xchg
fstl
in
std
ja
sarl
inc
push
xor
sbb
push
push
mov
lcall
pop
inc
scas
pop
lods
xchg
sub
pop
call
cli
test
inc
mov
add
dec
popa
inc
test
lods
mov
xchg
xor
mov
std
inc
sbbb
pop
mov
sbb
std
pop
clc
mov
sub
sub
mov
add
and
cmpl
dec
mov
adc
adc
xor
mov
rcr
jl
rcrl
pop
hlt
es
xlat
daa
sarb
sbb
dec
iret
or
hlt
push
jbe
jnp
mov
xchg
push
scas
call
incl
out
pop
cmp
jg
cmp
rcrl
inc
stos
inc
out
jecxz
insl
stos
xor
mov
sahf
out
cli
lcall
cmp
jns
ljmp
or
mov
mov
push
add
ljmp
push
jb
push
test
cs
jb
outsl
cmp
jmp
push
pop
clc
decl
movsb
pop
cmp
mov
or
jno
dec
lcall
popf
ljmp
aas
jg
pop
hlt
test
sub
and
jle
mov
jg
jp
xchg
call
shl
xchg
das
pop
arpl
or
lcall
lcall
std
mov
rcrb
push
dec
push
adc
hlt
push
mov
jge
mov
cld
jnp
mov
ljmp
pop
repz
mov
arpl
in
fwait
and
mov
lods
stos
int3
pop
inc
call
xchg
int3
add
fidivs
int3
jae
aam
jno
pop
sti
jae
xchg
sbb
push
lcall
loope
sbb
adc
cmpsl
pop
mov
cld
add
out
jmp
loop
mov
out
dec
ret
fwait
roll
add
sbb
cltd
push
mov
jecxz
inc
mov
mov
xchg
push
bound
xchg
bswap
scas
push
shr
jge
adc
lret
call
ss
testb
rcr
push
loop
das
hlt
call
or
mov
insl
xorb
jp
test
pop
cld
aad
in
sbb
xchg
or
std
mov
popa
sbb
mov
adc
mov
loope
ljmp
and
or
mov
jmp
mov
nop
push
xchg
xchg
pop
mov
push
scas
shrb
pop
out
lret
imul
pushl
jne
movsl
icebp
into
inc
loopne
and
and
mov
into
inc
adc
scas
lret
ret
dec
insb
lcall
in
shlb
jmp
jl
aas
outsl
std
jg
pop
lahf
jo
pop
push
test
out
xor
mov
clc
in
call
jno
dec
push
dec
push
call
daa
and
xchg
push
fwait
sub
or
jmp
mov
or
insl
mov
adc
lcall
ljmp
repz
ja
push
or
and
repz
xor
mov
hlt
cmp
cltd
mov
arpl
and
dec
or
and
cmp
push
shlb
call
pushf
mov
pop
daa
sub
inc
xor
das
cld
incl
mov
aaa
pushf
sbb
inc
cltd
jo
xlat
mov
clc
call
pop
pop
add
sub
or
push
pop
push
and
cs
clc
incl
and
daa
idivl
sbb
movsb
dec
sbb
clc
ljmp
jb
inc
push
xchg
fwait
sarl
push
test
pop
sbb
cli
les
push
sub
pop
cmp
movsb
shll
ljmp
pushl
adc
jl
sbb
fsub
dec
inc
or
lock
mov
fs
mov
scas
into
mov
mov
and
inc
loope
js
mov
ljmp
sub
out
repz
movsl
movsl
xchg
cli
test
imulb
call
pop
ljmp
roll
sub
xor
push
jl
add
sub
into
into
popa
in
inc
cli
mov
shr
stos
les
icebp
lahf
jmp
aad
sub
popf
shrl
add
lret
nop
iret
sbbb
lods
pushf
sbb
add
decl
xor
in
pop
adc
inc
lock
mov
repz
and
stos
mov
mov
js
mov
loop
call
and
sub
jmp
pop
daa
loope
shrl
push
inc
ljmp
std
shlb
out
daa
add
and
cwtl
inc
sub
fdivrp
call
js
adc
pop
int3
movsb
imul
or
pop
mov
insl
cmp
enter
aad
cmp
call
leave
mov
mov
jno
lahf
pop
dec
cmp
inc
dec
mov
imul
movsl
test
mov
cmc
lea
inc
pop
inc
xchg
cmp
jg
mov
scas
andl
andb
pop
mov
test
push
or
mov
out
pop
call
outsl
mov
sbb
popa
push
hlt
shll
dec
lock
or
addr16
arpl
fstl
clc
lcall
push
idivl
jg
xchg
leave
cli
jg
lds
ss
or
cltd
test
movsl
and
pop
icebp
out
cmp
je
clc
xchg
dec
fsubp
mov
mov
dec
sahf
ss
dec
loope
enter
mov
incl
pushf
outsl
daa
cwtl
in
pop
inc
mov
push
push
lds
fstpl
aas
jo
mov
jns
rcr
pop
sub
fsubrl
cwtl
pop
call
cltd
sti
incl
jns
mov
cmp
mov
jo
pop
fbstp
sub
jmp
cli
xchg
mov
lods
std
push
mov
mov
mov
push
movsl
aas
shlb
test
ret
fucomip
movsl
gs
cmp
inc
inc
xor
rcrb
cmp
stc
shlb
pop
insl
mov
out
daa
xor
xlat
addr16
mov
insl
ljmp
aas
sti
fistps
scas
jecxz
in
repnz
dec
mov
sub
jg
inc
cmp
pop
insl
pop
xor
in
loopne
push
pop
xchg
loop,pt
add
jecxz
sbb
jg
movsl
cmp
hlt
out
dec
mov
out
psubb
sub
jg
mov
pop
push
aam
xchg
js
je
shl
push
pop
inc
stc
jge
sub
jg
ljmp
pusha
jl
sbbb
xchg
push
add
xchg
push
arpl
outsl
icebp
decl
or
or
xchg
fwait
mov
adc
mov
pop
push
sbb
jmp
mov
xor
push
sbb
je
jb
shlb
repnz
ret
push
cmp
jle
mov
movl
and
cmp
lods
push
movsb
outsl
jo
lahf
call
in
fmulp
and
mov
mov
mov
out
pop
add
out
call
xchg
jae
decl
out
cmc
sahf
adc
pop
subl
jg
decl
loopne
push
int3
inc
and
loop
lock
sahf
sub
jg
push
mov
xorl
mov
push
sbb
mov
or
lcall
lahf
pop
pop
push
jbe
fisttpl
fxch
jno
out
dec
jnp
xchg
iret
jl
sub
es
push
cltd
push
jmp
mov
out
add
adc
mov
das
sub
imul
rorb
jmp
add
imulb
sub
inc
adc
sbb
incl
rep
pop
jmp
or
dec
ror
mov
cmc
xchg
repnz
ljmp
call
dec
inc
add
jae
pop
cmpsb
xchg
sub
movsl
and
push
or
inc
add
xchg
adc
pop
adc
push
test
out
jb
inc
mov
std
jmp
lock
jnp
cltd
jnp
aas
stc
xchg
call
and
and
pop
sub
jg
sbb
xor
lret
fbstp
add
xchg
xchg
pushf
cli
dec
or
xchg
inc
cmp
cltd
ljmp
add
pop
lcall
ja
cmp
pushl
cmc
dec
cmc
in
call
fcomps
inc
nop
cmp
ret
sub
pop
xchg
sub
pop
ljmp
dec
enter
mov
cmp
adc
andb
cld
inc
mov
adc
pop
mov
aas
lods
cli
les
add
stos
icebp
cmpsl
out
adcb
push
shll
pusha
aad
sti
dec
int3
jp
pop
loopne
loop
push
imul
sub
and
jb
pushl
call
push
shl
xchg
ret
dec
call
cs
or
imul
lcall
cmpsl
adc
adc
gs
test
out
aad
sub
shll
std
ljmp
inc
lret
mov
ds
push
test
pop
icebp
cmp
inc
loop
pop
outsb
add
sub
test
fimuls
sub
mov
les
cmp
ret
adc
mov
aad
into
js
jecxz
jmp
sbb
or
push
jp
sbb
xchg
xlat
mov
adc
mov
hlt
aaa
js
xchg
jge
rorb
cmp
sti
call
icebp
mov
je
test
imul
cmp
inc
sbb
mov
call
sub
nop
mov
cld
pop
andl
xor
add
push
pop
xchg
in
dec
jo
mov
in
div
inc
and
dec
ficomps
cmp
sbb
xchg
jmp
cmovae
mov
fwait
add
mov
fstps
cmp
incl
sub
scas
sti
out
fisubrl
nop
push
mov
cltd
add
ds
mov
ret
into
sub
mov
mov
pop
loop
fbstp
out
negl
imul
cs
or
push
mulb
and
jp
mov
loopne
aam
lods
inc
mov
ja
dec
sbb
notb
ja
data16
and
pushf
pop
mov
adc
js
add
inc
mov
adc
sub
shlb
ljmp
insb
push
xchg
imul
loope
inc
xchg
pop
lret
outsl
lock
fdiv
movsb
or
test
jno
sbb
aaa
cld
and
fmull
inc
push
std
mov
jmp
adc
repnz
and
push
inc
jl
ljmp
add
pop
mov
jbe
mov
mov
fcompl
mov
xor
adc
leave
repz
incb
mov
mov
xchg
adc
outsl
hlt
inc
sbbl
xor
jo
addr16
imulb
pushf
lods
test
ljmp
int3
pusha
in
jne
mov
dec
ficomps
mov
pushl
push
dec
lea
cli
lret
or
push
mov
mov
idivb
ljmp
cld
xchg
data16
adc
cmp
jno
jbe
pusha
addr16
dec
out
xor
movsl
das
jbe
fcompl
push
mov
or
gs
movsb
sbb
call
incl
dec
and
xchg
adc
xchg
sbb
outsb
imul
lcall
add
bound
jo
je
and
fdivr
push
cmp
push
inc
sub
dec
loopne
push
in
iret
add
jp
mov
movsl
movb
lods
lcall
cmpsl
out
xor
xor
sbb
mov
mov
dec
pushl
jle
sbb
add
mov
sbb
mov
repz
inc
outsl
hlt
pushl
pop
or
int3
cmpsb
jae
notl
or
imul
aaa
clc
lcall
xchg
mov
cmp
or
mov
mov
test
xor
mov
mov
inc
iret
test
dec
pop
or
pop
push
fstl
jmp
adc
dec
mov
inc
sub
and
lahf
loope
jg
jno
test
incl
pushl
mov
insl
test
out
xchg
inc
dec
ds
xor
cmpsb
dec
sbb
mov
fnstenv
push
notb
mov
adc
in
cmp
ljmp
icebp
sahf
inc
stos
fwait
inc
stos
aad
leave
add
ss
stos
fisubrs
and
sarb
shlb
jle
or
xor
xchg
mov
jg
push
dec
fwait
push
mov
fcmovnb
sbb
decl
pushl
les
dec
add
repnz
mov
sbb
mov
mov
clc
jmp
out
or
fwait
jae
jp
sarb
jg
notb
xchg
lret
xorb
int3
dec
loop
lret
mov
cmp
pop
inc
leave
mov
lods
sbb
stc
cmp
inc
or
pusha
pop
push
insl
mov
data16
mov
xlat
mov
fnstcw
ss
add
shll
push
mov
and
mov
cmp
loope
gs
inc
ficoms
and
shll
mov
add
clc
jg
push
call
mov
xchg
rol
ror
pusha
dec
mov
pop
add
xchg
gs
int
push
cmp
cmp
int
jg
fucomip
cld
mov
sbb
ljmp
out
loope
mov
decl
add
pop
movsb
mov
mov
fcomps
inc
std
int3
jne
sar
decl
cmp
movsl
push
cli
mov
adc
pop
notl
dec
xlat
out
dec
xor
decl
and
push
sarl
push
or
xlat
jmp
je
cmp
mov
ljmp
std
mov
dec
inc
jnp
jae
dec
movntq
sarb
enter
mov
mov
jl
pushf
adc
cmp
or
adc
call
inc
adc
inc
loope
pop
lock
mov
pushl
loope
mov
ss
mov
pop
mov
jmp
adc
pushl
or
pop
cltd
aaa
or
cmp
popa
nop
push
ret
cmp
push
sti
addr16
mov
jmp
stos
out
cs
push
xor
mov
lret
push
mov
mov
std
pop
clc
or
inc
hlt
repz
jecxz
mov
ret
out
repz
sbb
insl
ret
out
mov
arpl
push
mov
jbe
aaa
movsl
das
dec
adc
xchg
pop
dec
dec
into
mov
dec
decl
leave
fst
dec
stos
jo
xor
mulb
push
dec
jmp
mov
leave
jp
xchg
shll
push
cmc
cwtl
cmp
lds
fbstp
lods
ljmp
mov
pop
andl
mov
fcoml
mov
lcall
cmp
fldcw
mov
outsb
out
and
lcall
cmp
pop
jge
scas
imul
dec
pop
push
jp
ljmp
xchg
rolb
movsl
pusha
lea
dec
outsb
xchg
icebp
in
out
hlt
lcall
iret
push
lea
cmc
negb
inc
sub
mov
lret
mov
loope
and
testl
dec
jae
mov
dec
mov
lods
mov
cli
sub
pop
cwtl
loope
test
inc
cmc
lcall
mov
fldl
adc
jle
xchg
fcoml
add
jle
test
test
adc
mov
sbb
js
jg
pop
pop
fcoms
icebp
loope
sub
and
inc
push
xchg
cmc
mov
jp
inc
inc
mov
mov
dec
mov
push
push
sub
jmp
mov
rclb
fdivl
imul
in
fisubrl
sub
stos
cmpsl
inc
lcall
inc
enter
mov
jbe
cltd
adc
jg
lcall
sahf
in
int
adc
or
fistpl
add
mov
jno
jp
ds
push
dec
jl,pt
mov
test
es
lock
xchg
jecxz
push
or
pop
mov
or
pushl
cmp
ret
out
mov
mov
xor
out
pop
andl
aad
pop
daa
sarl
fsubrl
fstl
dec
push
pop
add
stos
sub
xor
push
and
ljmp
xchg
xbegin
xor
sbb
fcmovb
mov
pop
loopne
decl
call
int3
push
lret
sbb
jecxz
ret
sub
mov
and
mov
mov
xchg
adc
sbb
pushf
xlat
push
lods
dec
mov
out
decl
and
fstps
sbb
clc
ljmp
addr16
mov
or
pop
std
pop
xchg
gs
mov
cmpl
fcos
lcall
mov
push
addr16
mov
mov
jne
mov
lahf
mov
sbb
loop
push
in
xor
sbb
xchg
sub
outsb
adc
pop
rclb
sbb
cltd
lods
cmpsb
mov
lcall
pop
scas
movsb
out
movsb
ja
mov
repnz
out
in
add
adc
scas
shll
sar
call
cmp
mov
inc
adc
jnp
fimull
addl
sub
mov
pop
nop
stos
dec
icebp
or
loopne
adc
divb
mov
test
pop
xchg
movsb
jo
and
xchg
jnp
shrb
clc
mov
ljmp
shrl
popf
inc
mov
inc
aad
rcr
das
lock
ljmp
mov
aaa
fmull
xor
sbb
and
inc
icebp
adc
fldenv
cli
jg
icebp
shrb
in
leave
or
rcl
jbe
and
mov
and
test
int
push
daa
cmp
addr16
mov
stos
and
jg
outsl
cmc
dec
sub
jb
push
xor
pop
jg
sti
ss
jae
pushl
fisubrl
sub
imul
test
mov
sub
mov
bound
dec
fldt
daa
jge
incl
mov
sbb
jne
xchg
rcrl
call
fwait
mov
std
rol
mov
cli
in
sti
in
insl
sub
call
jno
or
cltd
loop
add
jno
fisttpl
xor
sti
das
repz
popf
imul
out
xlat
fiaddl
stc
sar
in
int
nop
and
dec
test
aad
fyl2xp1
shrb
inc
std
enter
inc
into
dec
stos
dec
dec
rcll
inc
loopne
jmp
cmp
mov
add
mov
sbb
je
pop
pushf
pop
ret
leave
pop
jb
test
aaa
ja
cmp
in
stc
ljmp
xchg
or
in
xor
mov
sub
push
dec
jns
sbb
pop
mov
cmp
mov
mov
lcall
daa
test
mov
sbb
inc
out
mov
dec
mov
dec
leave
nop
in
xor
clc
ljmp
and
xchg
je
adcl
test
aaa
cltd
call
lea
adc
andl
icebp
jmp
push
int
stos
mov
shll
push
sahf
test
push
dec
or
inc
lock
popl
cmp
pop
push
sub
scas
cld
push
push
or
fisttps
sub
repz
ror
dec
jae
xor
imul
mov
je
mov
rcrl
jmp
testb
ljmp
cmp
insl
cli
dec
test
add
and
add
sub
filds
jp
adc
jne
mov
aas
into
or
out
inc
ljmp
out
adcb
xchg
fcomip
mov
in
mov
mov
scas
and
ljmp
lock
jle
test
aad
fnsave
mov
adc
leave
insl
mov
or
fsubrs
arpl
dec
psubusb
pop
dec
or
movsl
jmp
je
sarl
ja
dec
inc
jmp
ud0
push
icebp
xor
das
test
cltd
hlt
ret
lcall
xchg
ja
adc
imul
arpl
sub
mov
jmp
ret
jb
cvtdq2ps
addr16
test
pop
test
pop
pop
std
mov
incl
mov
fsubrl
shl
divl
pop
mov
aaa
jae
dec
sub
mov
scas
mov
dec
inc
push
incl
das
pop
hlt
fs
out
pop
in
xchg
cmp
aaa
stc
adc
cltd
je
add
xor
outsb
sub
pop
sub
push
imul
push
or
pop
cmp
lret
sbb
int3
cmp
movsl
pop
inc
aaa
ljmp
sbb
cmp
cmp
fcomps
jecxz
fadd
add
inc
mov
iret
mov
into
mov
rorl
mov
shll
pusha
clc
pop
ljmp
cmp
ret
xor
push
rcr
cltd
mov
cmp
xchg
cli
pop
in
cmp
mov
dec
and
mov
ja
aam
test
aaa
rolb
adc
jg
sub
imull
and
fwait
mov
fs
out
js
cmpsb
in
bound
outsl
mov
cmp
icebp
stos
std
push
repz
jecxz
out
push
cmp
dec
test
decl
les
push
cmc
adc
popa
and
divb
sbb
cmp
cmpb
daa
insb
pop
cmc
cmp
loop
xchg
mov
lret
mov
pusha
aaa
rcrb
jg
or
outsb
scas
cmpsb
out
and
es
verr
inc
sbb
inc
es
lea
fildl
dec
xchg
out
mov
sbb
jecxz
xor
outsl
cmpsl
cld
clc
mov
dec
sub
aad
push
jg
fildll
add
addr16
in
xchg
cmc
shlb
subl
cmpl
dec
fs
das
adc
imul
in
jg
add
out
sahf
mov
dec
jnp
roll
add
sbb
mov
notb
hlt
les
leave
cs
stos
fsubl
cvttps2pi
xchg
std
inc
mov
lods
push
bound
lock
jg
jmp
dec
xlat
push
sti
sbb
sbb
dec
push
push
cli
sub
lcall
add
mov
pusha
lods
and
adc
data16
cmpsl
outsl
test
std
jle
or
lock
outsb
gs
pop
sub
aam
incl
or
sub
push
in
test
push
lret
push
ret
xor
add
add
inc
cmc
int
mov
aas
fmull
stos
pop
jge
sub
or
incl
imul
add
outsb
cmpsl
sbb
lods
mov
cmp
jns
cmp
push
mov
mov
fdivr
cwtl
xchg
mov
nop
js
xchg
fstps
ficoms
ss
xor
push
pop
lcall
ds
jno
decl
pushl
stos
cmp
sti
aam
add
test
insb
push
sbb
jmp
je
mov
cli
mov
mov
ljmp
mov
mov
dec
mov
sbb
push
mov
dec
sub
pop
dec
dec
jns
insb
jbe
xchg
cmp
in
pushl
mov
mov
xchg
mov
repz
sbb
testl
jbe
pop
ljmp
fwait
mov
sub
cltd
std
fiaddl
fucomp
dec
lcall
cld
bound
rcr
cli
sub
jle
sbbb
ja
idiv
mov
movsb
pop
jge
imul
test
mov
das
inc
lcall
fldcw
data16
lods
mov
cltd
inc
jg
loope
push
dec
adc
lea
mov
fucomip
sbb
push
outsl
cmc
packuswb
xor
mov
inc
mov
dec
pushl
cli
xchg
js
mov
fbld
sbb
xlat
xchg
jge
ret
data16
sbb
cmp
mov
fimull
nop
jbe
std
iret
jg
inc
imul
jge
out
mov
jns
mov
xchg
call
shll
movsl
sbb
cltd
stc
outsb
andl
outsl
bound
pop
fs
movsb
test
js
call
lcall
xchg
cmp
adc
mov
inc
in
xor
push
and
mov
sarb
ffree
xor
fcom
or
pop
scas
pop
fwait
in
stc
pop
scas
subl
jmp
scas
push
lahf
push
add
add
jmp
xchg
mov
call
in
adc
mov
sbb
cmc
outsb
out
inc
mov
adc
test
pushf
add
dec
decl
in
lret
or
jecxz
repz
loopne
cld
out
out
loop
inc
ljmp
fsubs
adc
pop
push
xor
iret
or
aam
fsubrs
mov
mov
push
add
test
push
pop
cmp
das
std
call
shrb
sbb
pushf
xor
cwtl
sub
ss
clc
push
add
push
add
xor
in
std
xorl
call
inc
and
jb
pop
pushl
cli
jg
push
rolb
imul
loopne
mov
jg
mov
pop
add
imul
xchg
adc
or
dec
movsb
jmp
fidivl
sbb
mov
cmpb
ljmp
jg
loope
insb
lods
xchg
mov
inc
push
pop
andl
ret
mov
dec
cmp
sahf
cmp
jg
push
fldt
dec
sahf
ss
addl
lret
scas
jp
mov
mov
sbb
js
ss
clc
das
daa
sub
outsb
jge
cmc
fsubl
fwait
cli
fnstsw
ljmp
dec
movsb
jns
mov
pop
cmp
lock
pop
push
lods
sbb
jle
cmpsb
cmpsl
insl
cltd
nop
call
xor
sbb
outsl
lock
dec
dec
movsl
mov
xchg
or
rep
mov
outsl
jns
pop
filds
add
xchg
inc
mov
jb
mov
repnz
and
push
int3
or
pop
pop
jg
ljmp
or
enter
pop
jb
mov
fxch
gs
xor
cmp
mov
incl
cmp
xor
aad
scas
movsl
sub
mov
push
je
cltd
xor
mov
jge
incl
push
add
xlat
adc
mov
in
pop
cmc
aaa
mov
xchg
repz
ljmp
incl
inc
xor
adc
inc
mov
sub
in
cltd
pop
loope
dec
rorb
call
lock
add
insl
imul
adc
stos
dec
push
pop
sub
cmp
adc
sahf
jmp
loopne
xchg
in
sahf
cmp
roll
lahf
daa
cli
fnstsw
aaa
jb
pop
mov
shl
jb
aam
mov
call
and
xor
rclb
cmpsb
xchg
stos
fstl
xor
jle
hlt
dec
pop
pop
pop
rep
cmp
cmp
in
dec
dec
push
jmp
fimull
pop
lock
mov
jbe
out
pushl
mov
mov
adc
xor
scas
test
and
fidivrl
outsl
mov
test
insb
pop
mov
aaa
jno
repnz
dec
lcall
out
cld
into
mov
sub
imul
or
in
rol
dec
mov
mov
and
pushf
scas
je
dec
in
cmp
pop
xor
adc
xchg
push
faddl
push
stos
lds
int
xor
xchg
in
xchg
cs
scas
inc
cwtl
adc
xlat
xchg
lcall
push
iret
add
push
push
inc
mov
mov
rolb
aas
gs
mull
fwait
iret
push
push
inc
cli
incl
sti
loopne
pop
xchg
stc
sbb
scas
and
dec
xchg
or
or
jecxz
insb
fisubrs
loopne
mov
fdiv
nop
jl
popf
ret
pop
dec
icebp
mov
cmpsl
lods
jg
pushl
aad
test
ljmp
test
push
push
adc
idiv
lcall
adc
adc
lcall
push
dec
insl
xor
adc
ss
mov
jmp
mov
hlt
mov
mov
or
mov
js
cmpsl
pusha
jb
pop
pop
and
cmc
shll
jae
sub
xchg
sbb
xchg
cs
ljmp
jl
ja
dec
ret
ficomps
add
es
lods
or
jg
jbe
or
inc
jle
or
sahf
cs
popa
pop
cli
icebp
lcall
mov
mov
fidivrl
push
test
mov
pop
lea
jnp
in
sbb
das
pop
pop
sahf
inc
int3
rcrb
mov
sbb
fadd
rcrb
adc
mov
jl
and
sbb
push
sahf
outsb
jbe
push
hlt
lcall
ds
or
cwtl
enter
das
inc
dec
ret
fwait
or
add
fistps
adc
mov
xor
push
mov
int
jg
js
xor
cmp
adc
cmp
xchg
fst
outsb
mov
mov
pushl
add
adc
mov
out
cmpsb
add
cmp
ljmp
call
push
pusha
lahf
cmpsl
mov
out
int3
jge
pop
push
inc
mov
jg
push
pop
jle
call
mov
mov
sub
ja
jnp
mov
cli
decl
push
push
and
in
pusha
jae
test
arpl
dec
sbb
or
fists
or
lock
jbe
leave
in
cmp
daa
lcall
sbb
push
adcl
mov
or
shlb
fmull
daa
roll
iret
xchg
aaa
std
jg
mov
xchg
lds
sbb
jnp
mov
sahf
jg
icebp
stc
fisttpll
lcall
cwtl
jnp
sub
bound
mov
aad
nop
mov
outsb
xchg
ljmp
push
rcl
cmpsb
mov
push
popf
mov
gs
mov
mov
cwtl
lods
call
xor
jp
pop
adc
inc
lds
adc
xlat
xlat
sbb
aas
mov
sub
push
loop
jg
add
shll
add
and
pop
ret
pop
call
jmp
or
movsl
idiv
repnz
push
int
into
mov
leave
xor
cld
decl
pop
jns
sub
iret
fstps
or
xlat
lret
js
jo
jno
das
cld
lcall
or
sbbb
into
ret
sub
rcr
cmpl
hlt
jg
add
pop
leave
outsb
rclb
cmp
xchg
push
ss
stos
leave
out
xor
jg
push
das
fs
aad
push
dec
inc
mov
adc
cli
call
test
addl
outsl
inc
insb
fsubrs
daa
mov
lea
std
decl
cmpsb
and
cmp
cmpl
cli
ljmp
sbb
adc
push
popf
jns
cmp
movsl
loopne
jle
cmpsl
and
cmp
js
test
inc
or
adc
cmp
ljmp
mov
je
sbbl
cmp
std
decl
jns
clc
and
imul
decl
pop
push
aaa
inc
inc
cmova
insb
sbb
out
aam
mov
mov
incl
addr16
push
pusha
sbb
dec
aam
fwait
or
bound
cmp
sqrtps
mov
cld
lcall
mov
xchg
lods
dec
cmc
xor
jne
mov
pop
xchg
ljmp
icebp
fbstp
dec
jg
lret
aaa
fistpl
or
call
adc
jl
test
fdivr
jge
add
adc
ljmp
incl
push
add
xlat
pop
stos
insb
push
mov
sub
mov
sub
cltd
cmp
mov
jl
pushl
test
dec
mov
fs
fs
ret
repz
lock
bound
imul
cmpsb
adc
or
jns
adcl
mov
imul
out
mov
push
ljmp
lcall
pop
jne
je
jl
popl
mov
mov
decb
xorb
jnp
aaa
inc
push
stos
cmp
lds
jg
pushl
adc
or
jae
into
repz
es
lock
das
add
cmp
mov
scas
ljmp
xchg
sub
out
inc
addb
jae
pop
pop
mov
std
mov
inc
repnz
sbb
jp
insl
loopne
leave
insl
std
pushl
dec
jae
sub
add
insl
stc
ror
add
rcrl
push
lea
xchg
mov
loopne
outsl
iret
adc
adc
dec
xor
notl
add
jns
xchg
pushl
sub
sub
xchg
xchg
scas
addb
pop
xchg
mov
repnz
sbb
cmp
sti
push
decl
pop
xchg
inc
inc
mov
jge
pop
xchg
clc
call
sub
push
jl
icebp
cmp
std
repz
dec
xchg
dec
imul
loop
sub
rolb
lds
jg
mov
aad
stos
in
lods
out
sbb
aad
ljmp
movsb
xchg
mov
push
sbb
adc
mov
aaa
js
das
movsb
xchg
add
leave
bswap
xor
jmp
jae
movsl
and
pop
jae
loope
mov
arpl
pop
mov
mov
out
dec
stos
mov
imul
fidivrs
incl
mov
mov
insb
sbb
in
incl
out
inc
xchg
adc
mov
lahf
filds
fistps
mov
icebp
incl
imul
sbb
push
mov
in
das
sub
dec
sbb
ljmp
fsubl
and
mov
outsl
cmc
ljmp
mov
jbe
dec
mov
ret
clc
decl
mov
call
daa
add
out
divb
pop
aam
pushl
jge
jle
shrl
push
fwait
xchg
fnstenv
pop
cld
outsb
lahf
lcall
cmc
decl
test
and
xor
mov
jbe
iret
les
hlt
ljmp
aam
pop
andb
jnp
lods
pop
aad
xor
imul
jnp
test
jnp
andl
push
add
data16
ds
jl
jle
mov
xchg
jbe
mov
enter
push
ds
mov
jbe
mov
jno
scas
lret
rcrl
cmpsb
mov
cmpsb
or
pushl
lock
in
lock
and
xor
sbb
cwtl
lcall
cld
lret
inc
adc
mov
sub
xor
je
cld
push
jle
pushl
jecxz
cli
mov
js
xchg
test
and
and
cwtl
and
lret
cmpsb
mov
fwait
adc
std
fdivrp
mov
add
out
mov
add
call
mov
sti
orl
loopne
add
mov
push
decl
icebp
arpl
cwtl
xor
ljmp
inc
sub
pop
clc
pushl
xor
repz
add
loop
adc
and
add
mov
popa
add
push
pop
jnp
repnz
out
out
mov
incl
push
ds
and
aaa
xchg
lds
dec
or
push
or
cld
push
call
cmp
fisttpll
dec
xor
fmull
decl
call
mov
es
mov
pop
xchg
ja
and
add
leave
cmpsb
adc
insb
cld
out
dec
stos
flds
mov
jg
mov
mov
add
fimuls
imul
xor
cmpsl
outsl
notb
lahf
mov
push
jns
dec
lret
jne
fiaddl
notl
mov
cmp
lods
or
in
bound
call
jo
mov
adcl
jae
shlb
and
ret
mov
insl
iret
cs
jmp
leave
dec
js
inc
out
push
and
mov
jmp
mov
ret
popf
xchg
fs
movsl
fsubr
stc
call
mov
adc
test
ds
and
sti
or
out
dec
mov
mov
xchg
or
sub
pusha
pop
data16
mov
test
sti
add
lcall
xor
or
sahf
xchg
or
cmp
outsb
leave
dec
or
sub
pop
and
clc
ljmp
dec
aam
cli
inc
pop
dec
or
xlat
aas
or
pop
xor
pop
adc
or
insb
adc
lcall
call
and
push
cmovb
jo
pop
inc
movb
jp
mov
je
adc
mov
test
gs
xchg
add
das
or
das
sbb
out
or
andl
into
sbb
adc
cmp
xchg
fs
add
xchg
out
popf
adc
xchg
dec
fs
mov
adc
and
dec
xchg
lcall
mov
scas
mov
pop
dec
xchg
clc
inc
cwtl
sub
adc
adc
incl
xor
fwait
dec
jo
shlb
jle
pop
jl
jmp
int
sub
xchg
mov
cmp
xchg
mov
clc
pop
mov
dec
pop
jo
lcall
or
leave
inc
mov
or
outsb
in
lods
fnstsw
pop
or
addr16
and
ljmp
int3
dec
call
lds
repnz
daa
popf
push
and
push
pop
or
xor
fistpll
sbb
hlt
hlt
pop
stos
outsb
stos
jae
mov
loop
pop
loopne
clc
jnp
jp
js
test
dec
mov
imull
incl
lcall
in
cld
jnp
cmp
push
mov
ss
and
jns
sar
xchg
jle
and
enter
lea
ret
mov
pushl
cmp
je
hlt
xchg
jge
lds
sub
mov
repz
lods
stc
xchg
incl
jmp
ss
ds
cmp
inc
jp
inc
push
cltd
outsb
mov
clc
call
push
fadds
stc
xor
movsl
sbb
push
and
subb
lahf
mov
pushl
mov
movsb
enter
adc
loop
mov
adc
jne
pop
pop
cli
jmp
lods
sbb
repnz
adc
mov
push
cmp
pop
mov
push
nop
lret
call
xchg
mov
add
scas
aad
inc
test
sub
cmp
push
call
ljmp
faddl
or
data16
jne
pusha
mov
decl
pop
jp
mov
test
mov
push
jnp
adc
decl
adc
jle
sbb
leave
adc
pop
mov
rolb
pushl
mov
lret
stc
movsl
lds
mov
or
push
aas
and
push
call
inc
dec
pop
int
jb
adc
iret
pop
loop
movsb
testb
and
gs
jp
ficoml
sbb
icebp
nop
cltd
cmp
dec
or
or
sub
inc
sub
lsl
addr16
aad
in
outsl
icebp
mov
lcall
cmp
std
rcll
sti
leave
scas
sarl
insb
push
ret
or
shr
mov
mov
movsl
jle
jns
addb
lds
push
lock
xor
pop
call
ljmp
cmp
mov
stos
mov
popf
adc
daa
xlat
popa
popf
ljmp
cmc
jnp
xchg
lods
push
mov
mov
fsubrs
mov
mov
test
scas
add
and
sbbb
sub
dec
std
inc
sbb
enter
in
call
mov
add
jno
mov
incl
adc
cmp
mov
fstp
out
mov
jne
sub
jg
mov
or
fwait
mov
mov
call
mov
push
push
push
insb
and
cmp
shll
xchg
int3
jmp
mov
jmp
call
shll
push
mov
ret
aaa
pop
ljmp
out
sbb
sbb
cmp
add
jmp
sti
xor
negb
cmpsb
nop
das
add
cmp
add
xor
mov
stos
fstpt
or
decl
pushl
loopne
jne
mov
arpl
pop
add
jnp
outsb
hlt
jecxz
cmp
jnp
lcall
push
push
gs
add
stos
mov
mov
inc
hlt
sub
fimull
cld
mov
adc
incl
add
xor
lods
dec
test
or
adc
aas
cmpsl
pop
test
xchg
cmc
outsb
or
mov
ror
push
sahf
nop
stos
ljmp
nop
jmp
pushl
lcall
mov
scas
xchg
jge
and
out
pop
pusha
fldcw
test
sub
dec
cli
jae
mov
xor
lea
dec
cmp
insb
ret
mov
mov
nop
cmp
mov
cmpsb
outsb
dec
add
jb
push
ja
add
push
outsl
jns
xchg
adc
inc
pushf
mov
sbb
jg
out
outsl
out
popa
subb
in
push
inc
mull
jmp
inc
call
and
ljmp
jne
les
adc
and
lock
ljmp
stos
nop
and
call
mov
lret
insl
test
fcoml
outsb
test
ficoml
xchg
fidivl
pop
imul
ret
test
mov
mov
mov
or
sbb
and
push
pop
jb
call
mov
imull
loop
shlb
test
pusha
mov
scas
decl
xor
dec
arpl
inc
in
pop
or
lods
pop
xchg
lcall
imul
add
xchg
cmpsb
pop
jge
aad
lcall
xor
shlb
pop
pusha
pop
fs
fstpt
jle
add
push
adc
mov
mov
stc
xchg
mov
popa
fbstp
or
clc
lcall
pop
adc
xchg
add
xor
sub
inc
aam
mov
cmp
cmp
lcall
push
sub
push
ret
flds
push
fcompl
stc
xchg
outsb
dec
or
decl
fistpl
push
jb
leave
xchg
insb
movsb
fdivrs
in
pusha
popf
push
cli
jge
cmp
jmp
push
mov
xor
mov
mov
jg
inc
inc
cmpsl
jecxz
jae
hlt
shll
test
add
stos
xchg
lock
cmp
adc
mov
jnp
add
and
ljmp
cmpsl
stc
adc
jnp
inc
mov
mov
testl
pop
jbe
and
test
ljmp
clc
push
mov
mov
test
cmp
xchg
ret
call
push
dec
pop
xlat
xor
mov
je
inc
ret
scas
lcall
cmpsb
mov
ret
loop
push
int3
mov
adc
and
sub
sub
xchg
jns
push
rorb
ljmp
or
bnd
mov
ja
imul
jg
aaa
jmp
mov
cltd
int3
cmp
lret
mov
mov
or
sub
adc
aas
pop
sahf
lods
mov
fucomip
pushl
js
push
sub
or
bound
call
and
ljmp
jg
cld
es
mov
xor
sti
js
int
outsb
sbb
inc
rolb
mov
mov
dec
outsl
ljmp
decl
inc
mov
and
icebp
lock
add
jbe
ret
das
je
jns
xchg
inc
call
ret
scas
or
pop
std
add
ljmp
cmp
mov
add
and
and
pop
cmp
ljmp
sub
adcb
push
xchg
xor
jmp
add
cmp
xchg
push
xchg
sbb
jae
xor
test
addl
pushl
lret
xchg
inc
cmp
test
sarl
clc
call
dec
mov
jp
xor
movsb
push
mov
adc
cs
mov
xchg
fsts
sbb
sbb
or
pusha
jb
push
dec
xor
hlt
daa
mov
xor
insl
dec
add
jge
mov
movsb
and
and
push
mov
add
mov
pop
ljmp
int
mov
sbb
push
cld
jmp
out
mov
je
cmp
into
jnp
aaa
int3
ret
xor
jns
lret
lods
sbb
decl
fdivrl
stos
adc
cmp
cs
push
sahf
insl
or
cmp
cmp
and
daa
xor
leave
out
lock
icebp
pop
mov
scas
sar
push
inc
pushl
outsb
shrb
cli
int3
lods
in
push
xchg
push
ljmp
lods
sbb
mov
out
mov
test
repz
bound
les
in
or
test
pop
jmp
btr
sub
int
clc
xor
out
lret
cmp
xchg
mov
insb
or
das
lock
scas
xor
jne
xchg
mov
or
in
fwait
jg
or
fmuls
cld
loop
cmp
arpl
dec
xorb
out
cld
mov
ret
ja
jecxz
jmp
mov
scas
push
push
or
decl
or
xor
or
jp
cmp
inc
lret
and
push
dec
pop
push
pop
movsb
and
mov
mov
inc
in
sub
ror
lock
mov
push
arpl
pop
mov
lcall
jecxz
mov
mov
daa
or
adc
jo
cmp
pop
ss
xor
arpl
cli
xchg
push
mov
outsl
lock
call
sbb
xorl
jne
cwtl
shlb
clc
aad
or
push
sbb
lret
lcall
push
adc
mov
jo
dec
ret
cld
in
int
in
je
sbb
ljmp
fdivl
xor
xor
or
pop
js
pop
rol
in
out
pop
pop
call
inc
push
jae
pop
xor
popf
sahf
popl
mov
inc
rorb
adc
xchg
add
mov
sbb
lods
jg
cld
jecxz
stos
add
xrelease
outsb
pop
dec
mov
push
stc
pop
or
cmp
sub
pop
adc
dec
fdivs
sub
je
incl
fnstenv
popa
dec
adc
lds
aam
xchg
dec
dec
mov
in
jmp
out
inc
xchg
adc
xor
sbb
xchg
adc
or
pop
sbb
aad
mov
jg
iret
fs
push
cmp
xor
jae
mov
xchg
sub
sahf
xor
or
push
lcall
shlb
pushf
nop
mov
xchg
lods
test
negb
sub
pusha
cmp
scas
mov
adc
inc
adc
cmp
inc
push
pop
xorb
sbb
lods
lcall
jg
idiv
incl
aaa
push
mov
fsubrs
jb
jmp
sub
xor
dec
int3
jbe
pushl
cmp
fcomip
mov
add
leave
jl
push
ds
pop
pop
pop
fcompl
pushl
arpl
in
clc
inc
mov
shrb
aas
pop
xchg
mov
lcall
dec
lea
hlt
cld
jo
add
mov
push
sar
pop
mov
pop
pop
lods
mov
lret
xchg
ljmp
cld
sarb
ss
sti
mov
jle
mov
roll
test
insl
gs
mov
pushl
dec
fwait
sbb
mov
test
js
inc
inc
sbb
pushl
pop
jmp
int
mov
ja
xor
out
and
out
aas
ljmp
lea
call
or
das
sub
sub
mov
cwtl
mov
pop
push
or
stos
int
push
xor
daa
dec
call
lahf
sub
test
test
sbb
xchg
lret
add
jg
jmp
push
push
out
mov
daa
push
and
lods
shr
mov
ljmp
inc
cli
insl
mov
fisubrs
fstl
adc
push
leave
jnp
sub
incl
outsb
or
js
scas
adc
loopne
add
repnz
ficomps
out
decl
mov
shll
xlat
xchg
and
ss
mov
fwait
insl
fdivrp
ljmp
into
pop
and
jg
cli
and
add
out
mov
orb
aas
filds
xor
sbb
mov
xchg
jle
lods
loope
iret
imul
mov
lcall
std
or
vmread
shll
lahf
les
jo
scas
ljmp
popf
cmp
or
or
fwait
sbb
outsb
sub
pop
xchg
adc
std
cli
inc
jecxz
or
or
lods
ret
sub
lock
pop
jmp
insl
sbb
cli
push
add
loopne
dec
cmpsl
shrl
call
lret
dec
sub
mov
mov
call
rep
lret
mov
and
push
adc
or
push
dec
sub
stos
adc
sub
sbb
cmp
ret
das
cld
loopne
in
pop
mov
push
add
test
stos
jns
xchg
adc
cmpsl
pop
cmp
cltd
sub
jg
ljmp
out
clc
bnd
aas
ret
sahf
or
int3
xchg
cmp
jbe
loope
push
mov
loop
pusha
ja,pn
mov
icebp
jns
push
dec
mov
dec
mov
mov
xchg
les
mov
dec
jg
mov
xchg
inc
xor
iret
cmpsl
aaa
or
add
dec
cwtl
jge
test
loop
fcmovb
push
sbb
mov
dec
pop
mov
das
icebp
lcall
stos
cmp
clc
popf
xchg
loopne
mov
lret
sub
jp
dec
loop
sti
outsb
scas
add
xchg
in
test
jnp
mov
fsubs
mov
push
sahf
imul
sbb
data16
pop
lods
mov
jmp
call
fists
sub
insl
or
inc
test
sbb
mov
incl
mov
addps
pop
and
repnz
arpl
sub
movsb
dec
jnp
mov
jmp
xchg
sub
lcall
adc
inc
mov
cmpb
arpl
arpl
mov
push
loopne
jmp
xchg
or
test
mov
jge
lcall
push
cmp
sarb
push
push
lret
test
popf
xlat
lret
incl
sub
add
shlb
cli
cmp
sbb
dec
fs
pop
ror
aaa
cli
lcall
ds
cmp
cmp
cmp
lods
mov
cli
mov
push
das
lcall
mov
mov
mov
push
test
cmp
pop
push
pushl
jecxz
out
sbb
jg
jnp
outsb
aad
movsl
xor
cmp
dec
ljmp
test
cmpb
mull
push
leave
fsubr
or
mov
or
test
inc
subl
lods
adc
sbb
nop
lret
call
stos
push
xlat
xchg
mov
xchg
sbb
fsubrs
cmpsb
into
fimuls
jbe
mov
jmp
dec
and
inc
fnsave
add
lcall
jg
cmp
sub
test
mov
jg
xchg
arpl
xchg
ret
aam
inc
xor
fstpt
das
cld
inc
dec
scas
lret
arpl
ds
inc
dec
sbb
pop
push
pop
movsl
pop
sti
inc
arpl
es
mov
sbb
xor
xchg
jl
mov
lret
xchg
pop
test
push
mov
dec
cmp
or
lock
pushl
jbe
mov
decl
adc
and
rolb
ret
aam
dec
cli
aam
mov
inc
ds
mov
out
lds
pop
ficoms
push
fwait
add
addr16
add
add
incl
gs
xor
enter
jecxz
and
repz
les
shrl
fists
mov
mov
dec
fcmovu
cmp
mov
inc
bound
int3
mov
incl
icebp
incl
inc
jns
or
ficoml
push
dec
dec
insl
pop
jno
sub
call
jge
mov
pop
imul
mov
decl
mov
add
pop
lods
xchg
leave
hlt
inc
int
push
xchg
cmpsl
into
scas
fmulp
pop
repnz
in
call
xor
mov
out
cmp
jnp
lret
notl
mov
xchg
inc
and
ljmp
mov
imul
or
xor
cmp
and
incl
das
loopne
mov
dec
pop
or
mov
insb
notl
lret
add
adc
pop
sub
cld
inc
xor
sti
push
push
mov
lock
cmc
imull
rolb
pop
mov
fildll
imul
dec
dec
daa
jae
lods
jae
xchg
je
mov
hlt
stos
jne
mov
mov
and
das
jle
jo
les
shrb
xchg
mov
lcall
jg
mov
pop
jg
and
push
aad
pop
imul
call
or
out
nop
mov
cmc
in
xor
stos
in
lea
mov
call
push
lcall
or
mov
adc
add
ljmp
mulb
movaps
sub
pop
nop
aam
xchg
jecxz
ret
ficomps
push
jmp
lahf
insl
arpl
add
aad
push
push
stos
push
jp
or
cmpsl
push
addb
cli
add
cld
add
or
dec
in
shll
dec
inc
lahf
filds
mov
sar
xchg
jl
inc
stos
ja
pop
inc
ret
lods
or
lods
ffree
mov
cmp
aam
stc
jae
push
idiv
shll
mov
mov
clc
xchg
cmp
pop
mov
stos
sbb
sub
sbb
jmp
xchg
repz
pop
xor
ljmp
mov
in
dec
sub
cmp
xor
mov
cmp
xchg
ds
out
vpcomw
lcall
loop
xchg
push
lret
bound
jno
in
xchg
push
jl
outsb
add
sar
das
hlt
jle
mov
mull
popf
shl
dec
or
insl
fwait
in
pushl
stc
or
lcall
imul
pop
cmp
stos
lods
jge
jae
shll
std
sbb
inc
scas
scas
adc
mov
push
jmp
icebp
mov
mov
pushf
jecxz
jecxz
xchg
repnz
ss
das
lock
inc
pop
test
sub
insb
mov
std
les
pushl
int3
lock
sub
or
sbb
inc
mov
sub
dec
or
pop
or
push
pop
cmp
pop
and
cmp
add
and
jb
fdivp
sub
pushl
pop
mov
nop
cld
and
jns
dec
sbb
xchg
scas
mov
outsb
ljmp
cmp
and
dec
fidivs
mov
or
call
jno
out
jmp
jb
cmp
sbb
lods
outsl
ret
scas
dec
mov
sub
lcall
xor
xchg
xor
lret
call
adc
ret
mov
int
push
lea
cwtl
and
xchg
sbb
dec
in
insb
cmp
pushf
movsb
shl
lea
jl
out
xor
pop
push
negb
push
mov
arpl
imul
mov
decl
inc
mov
out
xor
jb
dec
xor
and
daa
cmp
sbb
jg
lcall
clc
movsb
xorb
pop
push
iret
push
insl
scas
cmp
and
fwait
mov
add
call
push
xchg
inc
or
xchg
sbb
insb
mov
pushl
js
sub
sub
outsb
cmp
xor
cmpsl
testb
enter
pop
std
decl
xor
bsr
repz
nop
testb
das
incl
pop
cs
in
stos
dec
xchg
arpl
faddl
fstpt
pushl
xor
push
rcl
add
and
jp
push
adc
scas
rclb
add
hlt
mov
repnz
sbb
icebp
cmp
xor
xlat
sub
mov
popf
xchg
mov
test
jecxz
inc
jnp
bnd
xlat
sub
fabs
incl
fsubrl
mov
mov
push
dec
mov
push
jge
mov
xor
lcall
jle
add
mov
repz
arpl
in
cmp
test
jecxz
lret
cld
inc
decl
mov
lahf
inc
mov
lock
icebp
int3
dec
cs
test
cmp
lcall
mov
jae
cmp
flds
mov
push
out
mov
fnstsw
fcmovnu
jne
into
xchg
jbe
test
sub
add
lcall
xchg
pusha
sbb
cld
mov
outsl
faddp
cmp
and
push
call
push
jae
mov
mov
sbb
in
fistpl
stos
mov
mov
ljmp
xchg
inc
or
aaa
std
test
mov
gs
test
pop
xchg
dec
das
jle
xor
aam
jne
mov
cld
hlt
jp
ja
mov
inc
iret
mov
movsb
mov
in
dec
popf
cmc
aam
xchg
shr
test
sub
mov
and
lret
sub
xchg
mov
sbbb
aas
and
adc
mov
dec
scas
mov
pop
fdivl
jo
leave
push
lcall
loopne
test
or
push
jp
inc
fmulp
fildll
add
and
gs
lcall
lahf
adc
testb
lahf
xor
insb
xor
jne
sub
mov
decl
pop
bound
jle
mov
nop
std
sbb
or
xchg
xor
push
sbbb
fwait
in
jg
jnp
aas
clc
jns
mov
and
cld
or
add
mov
ljmp
stos
adc
sub
mov
jg
mov
cs
jl
cmp
test
out
cli
call
lahf
stos
xchg
sbb
hlt
inc
and
dec
sub
outsb
push
sti
dec
mov
fcmovnu
inc
push
sti
call
and
notb
mov
pop
loop
lods
inc
movsw
cli
or
pmuludq
les
cwtl
sahf
hlt
jg
int3
data16
mov
dec
mov
filds
pop
push
mov
xchg
pop
push
lods
mov
into
ret
mov
or
imul
push
and
fmull
out
gs
stc
ss
lret
call
pushl
stos
xchg
or
out
pop
popa
aas
aaa
imul
aam
sbb
xor
decl
cld
incl
mov
aam
push
movntps
mov
loop
cwtl
lahf
jne
or
std
ret
push
repz
inc
cmp
icebp
pushf
jp
stc
out
sbb
xor
decl
push
mov
scas
pop
sbbb
sar
cmp
scas
xchg
pop
mov
lcall
push
movsl
mov
shll
nopl
mov
stc
mov
mov
mov
adcb
std
lcall
daa
pusha
scas
mov
hlt
add
push
popa
ljmp
lahf
iret
call
cmp
not
jmp
in
push
out
dec
add
mov
in
and
jmp
fsubp
addl
inc
out
dec
jb
pushl
pop
out
fcompl
rorl
mov
mov
movsl
movsb
mov
dec
mov
ss
cli
xchg
mov
mov
xchg
pop
jo
loop
or
push
ljmp
incl
nop
jnp
lods
add
mov
into
add
loope
popa
outsb
xchg
push
adc
sbb
lock
cld
incl
scas
fcmovnu
rorl
std
xchg
aas
mov
or
sub
mov
mov
clc
mov
fucomip
incl
lods
in
mov
icebp
ljmp
jl
in
jae
cmp
decl
fiaddl
popa
inc
aas
or
add
sbb
fildll
inc
out
mov
cmp
xor
ljmp
add
loop
aam
ljmp
hlt
pop
and
jno
xor
fidivrs
enter
jg
and
pop
mov
push
pop
imul
jle
sbb
addr16
mov
inc
ret
in
pushf
dec
jp
fadds
push
mov
adc
sbb
sbb
mov
es
pushl
dec
jbe
cli
xchg
pop
cmp
bound
inc
mov
fildll
push
aas
leave
loope
mov
cld
shl
push
and
ljmp
fdivl
jo
or
jns
cmpsl
aad
mov
sahf
push
or
push
into
inc
sub
jmp
cmc
xchg
divl
mov
sbb
adc
sub
outsl
mov
fucomip
add
cmpsb
inc
xor
jg
hlt
dec
sub
ljmp
mov
inc
cmpsl
lods
push
mov
popa
cli
rclb
lods
push
out
ljmp
hlt
ljmp
xchg
push
aam
adc
add
xor
xchg
daa
dec
push
incl
xor
frstor
add
ret
outsb
ljmp
xchg
dec
cltd
xor
inc
ret
incl
jmp
mov
dec
xchg
cltd
dec
leave
ret
ljmp
fsubrs
and
out
in
add
aaa
clc
incl
cmp
test
sub
movsl
or
xor
test
add
cli
dec
dec
movsb
repz
jmp
xorl
dec
loope
mov
ret
sar
fdiv
xchg
inc
das
enter
je
mov
push
pop
std
mov
pop
mov
aam
pop
add
jp
pop
mov
xchg
xchg
sub
rorb
sbbb
das
hlt
mov
xor
roll
cmp
bound
call
outsl
icebp
inc
hlt
and
or
into
cmp
mov
sbb
push
adc
cmp
push
mov
cmc
repz
jge
fadds
and
pop
addr16
jmp
mov
adc
push
and
lods
lahf
add
mov
ljmpw
call
pop
pop
push
inc
xor
push
xchg
cwtl
mov
fldl
movsb
push
clc
call
sub
stos
out
sub
and
mov
pop
pop
lods
push
add
pop
scas
insb
mov
mov
mov
mov
xchg
ja
getsec
int3
jp
out
push
in
cwtl
sub
cmp
fldenv
push
sub
push
stc
jne
dec
jmp
iret
jg
mov
fidivrl
jo
push
xchg
je
sub
adc
mov
jg
or
incl
mov
sbb
addb
cmpb
lret
push
sarb
xchg
pop
gs
ljmp
cld
std
cmc
push
mov
mov
mov
jb
jmp
lock
dec
sub
insl
inc
jg
jmp
dec
jg
or
cmp
jp
test
adcb
cmp
ljmp
pushl
mov
push
jne
fldenv
mov
sub
in
push
push
xor
pop
cmc
adc
fs
or
and
push
jmp
jg
imul
add
cmc
xchg
sub
jl
adc
call
loop
mov
and
inc
sub
sub
stc
pop
cli
dec
shr
popf
mov
nop
dec
push
jmp
loope
mov
notl
sub
pop
ret
xor
xchg
mov
std
pop
jl
sbbl
daa
or
loop
sar
call
inc
movsl
sar
mov
jl
leave
scas
fucompp
mov
dec
sub
xchg
cmp
fisubrl
lret
outsl
jnp
mov
mov
cs
jbe
in
int3
jmp
es
adc
push
pushf
adc
ljmp
into
or
push
bound
mov
imul
mov
rclb
jae
clc
iret
sbb
in
clc
loop
lock
or
mov
lds
pop
sub
scas
adcl
mov
mov
cmp
test
dec
lret
popf
xchg
mov
out
lcall
and
imul
fidivl
shl
ret
sub
lea
popf
push
pop
sbb
dec
nop
pop
jg
bnd
push
fistpll
ja,pn
jb
sbb
lea
mov
icebp
cmc
mov
stos
mov
or
testb
jnp
idivl
mov
jmp
cmp
xchg
xchg
mov
xchg
jb
mov
call
rclb
add
pop
lea
das
sbb
pop
or
push
fyl2xp1
and
dec
mov
out
or
movsb
das
das
int
repz
adc
jg
jmp
sub
and
aas
lret
lahf
clc
pop
xchg
add
sti
call
mov
dec
cs
push
jp
mov
xchg
sub
arpl
jg
shrb
adc
fsubrl
test
push
je
mov
add
out
pop
js
or
pop
add
imul
lock
incl
push
or
push
xlat
loop
roll
and
popl
mov
les
cmp
mov
push
sbb
adc
inc
and
shrl
mov
decl
xor
jmp
add
mov
add
je
add
cmp
test
pop
daa
incl
mov
mov
pop
out
ljmp
fildl
dec
jle
rep
aaa
cli
push
mov
gs
or
sub
adc
push
jmp
adc
std
and
inc
sub
adc
pushl
fadds
cmp
lea
xchg
out
push
xchg
inc
mov
call
mov
push
inc
sti
adc
jmp
xchg
insb
sti
fsubrl
ljmp
addr16
inc
add
adc
sbb
adc
das
icebp
lcall
mov
jns
stc
sti
mov
aam
out
lea
xor
call
push
cmp
in
lock
adc
xchg
push
ljmp
jmp
push
mov
rdpmc
inc
scas
imul
jg
inc
dec
lods
adc
inc
jo
jae
add
sbb
inc
jmp
add
jb
dec
and
cld
decl
jp
out
pop
adc
mov
sbb
jo
pushl
fidivrl
dec
cld
sbb
decl
and
test
mov
push
aaa
and
stc
jnp
or
lock
xchg
ret
adc
pop
shlb
das
jo
pushl
imul
mov
jmp
push
sarl
popa
lea
shr
inc
mov
add
mov
mov
dec
out
xlat
push
jnp
mov
call
fs
faddl
lret
xlat
aam
add
jmp
jo
imul
pop
test
bound
es
ljmp
pushf
fildll
std
add
add
nop
sbb
jno
cmpb
decb
mov
cwtl
cmc
push
jae
ss
mov
icebp
cmc
das
mov
icebp
mov
lods
rcrl
push
data16
mov
xchg
mov
mov
gs
push
lret
dec
jne
lods
and
lcall
lret
aam
jne
xchg
pop
cwtl
pop
out
push
push
push
sbb
daa
test
lea
push
pop
mov
mov
and
mov
aam
punpcklbw
aad
inc
mov
jg
push
fsubr
inc
sbb
lods
lds
jns
test
dec
jno
nop
pop
cmp
data16
call
dec
ljmp
or
pop
fsubl
pop
mov
dec
subb
loop
push
lea
lcall
dec
std
cmp
ljmp
enter
das
or
cmp
ret
pop
sub
aad
push
aaa
xchg
pop
imul
lcall
rcrl
movsb
pop
sbb
popa
jne
jno
inc
pop
xchg
dec
and
out
cmc
frstor
int
jne
mov
push
leave
adc
jle
push
xchg
mov
jg
inc
add
dec
sbb
xchg
rcrl
sub
mov
std
call
push
or
push
std
lcall
pop
inc
mov
sub
cltd
aam
push
xchg
jmp
repnz
mov
and
fildll
les
and
jmp
jmp
in
arpl
aas
movsb
ss
or
imul
repnz
call
cs
mov
ja
nop
mov
sub
sbb
adc
decl
orb
fs
daa
mov
mov
sti
std
call
dec
std
pop
and
dec
test
or
decl
sub
call
xor
sub
sbb
je
mov
sub
imul
push
push
arpl
mov
cmp
stos
mov
outsl
hlt
pushl
or
gs
int3
mov
cmc
pop
push
js
paddd
roll
pop
push
mov
mov
xchg
sahf
inc
mov
lret
xchg
mov
filds
ret
in
adc
je
dec
lret
std
sub
push
test
cmpsl
movsb
inc
enter
lret
mov
in
mov
pop
jne
int
mov
ljmp
int3
xor
movsb
and
mov
bound
or
into
aas
shr
fst
loope
stos
lea
sbb
gs
sbb
js
mov
pop
ljmp
lock
xorl
stos
into
xchg
pop
lahf
push
mov
ljmp
sti
jmp
cmp
pop
repz
addr16
test
push
out
xchg
jne
aas
icebp
rcll
mov
mov
adc
aam
loopne
and
stc
fmulp
pop
xor
decl
in
fnstcw
xorb
lods
mov
xchg
jecxz
out
jmp
aaa
aad
xchg
jmp
call
das
lods
push
div
sbb
pop
stos
xchg
mov
btr
mov
sbb
cmp
or
in
jge
in
jno
aad
xchg
rcrb
mov
mov
jge
pop
and
lret
pop
hlt
xlat
jns
arpl
decl
loopne
or
scas
inc
push
loope
sti
pop
and
fwait
sub
incl
push
sbb
cld
in
ja
stos
adc
sub
das
cmc
out
inc
ljmp
xchg
fists
jmp
jno
test
movsl
pop
bound
ret
call
cmpsb
sbbb
push
adc
dec
jge
arpl
lock
clc
mov
ret
xor
out
ljmp
das
add
fucomp
lret
jmp
cmp
test
popf
mov
lahf
mov
adc
and
repnz
neg
xor
xor
dec
mov
incl
loopne
cli
pop
mov
mov
mov
sub
ja
mov
clc
sub
in
cmp
pushf
cmp
sub
ljmp
add
dec
in
scas
scas
aaa
cs
notb
sbb
call
inc
xor
pop
ds
jp
pop
inc
push
leave
pusha
rcr
lahf
mov
movsl
jmp
cs
imul
push
orl
xor
push
clc
add
stos
sbb
clc
adc
pop
sbb
call
add
aaa
mov
dec
add
pop
test
popf
inc
fists
loopne
sbb
add
add
aaa
cmp
pop
frstors
lea
icebp
mov
inc
jecxz
pop
fadds
enter
xor
cmp
movsl
dec
movsb
movsb
mov
lods
imul
mov
cmpsb
mov
lods
pop
inc
pop
repnz
push
cwtl
scas
test
lcall
stos
leave
fistl
jge
in
and
mov
jp
add
push
adc
cs
add
push
lods
addr16
sbbl
jg
or
movsb
aaa
shlb
mov
rorl
ljmp
fiadds
cli
bound
mov
push
jecxz
call
decl
inc
imul
sub
jno
or
inc
and
push
repnz
xor
cmp
pop
and
incl
and
aaa
and
stos
sub
and
pop
add
outsl
inc
pop
out
cmc
xchg
dec
xlat
les
sahf
rcrb
jmp
push
push
pop
enter
inc
cmc
ljmp
enter
xor
or
subb
mov
and
add
adc
xor
or
or
aam
push
sbb
cmp
test
insl
shll
sbb
fidivl
aad
aaa
fisubrl
jmp
scas
mov
ljmp
xor
test
in
jnp
push
cmpsb
inc
test
subb
out
or
loop
dec
xchg
div
mov
cwtl
xchg
jmp
ret
xchg
and
je
adc
dec
outsb
mov
stos
movsl
aaa
std
add
adc
add
inc
andb
add
sub
mov
jmp
sub
out
adc
mov
push
sub
mov
shl
xchg
mov
lods
mov
dec
inc
in
mov
mov
into
test
fcomi
mov
mov
mov
ljmp
cmp
inc
mov
push
jne
dec
xchg
sar
js
push
inc
xor
and
adc
mov
stos
cli
mov
push
dec
lods
stos
ss
test
insl
sti
sub
out
decl
aaa
xchg
cmpsl
mov
mov
fnstsw
fdivrp
mov
pop
jle
mov
pop
fbstp
cs
mull
inc
adc
leave
loope
push
or
incl
mov
lret
sahf
rorl
adc
xchg
and
das
inc
push
mov
push
cli
icebp
and
call
repz
push
jmp
jns
jle
bound
incl
sub
jp
pop
mov
into
out
sbb
pop
movsl
mov
rcll
ljmp
or
mov
jo
es
and
sbb
sbb
repnz
add
lea
bound
lcall
std
fildll
and
push
popa
and
and
rep
ljmp
dec
scas
test
mov
jae
push
ds
pop
dec
jp
incl
rcrl
push
cmc
mov
pop
jmp
xchg
shll
jcxz
pushl
jmp
insb
lret
out
lret
push
popf
add
std
jae
dec
outsl
pop
push
sbb
leave
push
loop
cmpl
aaa
clc
lods
cmp
dec
repnz
dec
jb
sub
cld
xlat
mov
jle
push
add
sub
jmp
pop
add
or
clc
outsl
sub
push
push
clc
inc
xor
pop
xor
rcrl
sub
cmp
adc
jne
mov
cmp
bound
mov
add
xchg
push
adc
push
push
xchg
xchg
orl
sub
fbld
cld
push
jmp
inc
sub
shlb
pop
mov
pmaddwd
xchg
scas
repnz
out
jne
dec
sub
test
popa
add
push
jno
cmpsb
xor
loopne
je
xor
ljmp
lahf
dec
adc
outsl
adc
in
out
scas
sub
fldt
sahf
popf
fistpll
sahf
popa
lcall
pop
dec
pop
adc
lret
in
int3
jno
jmp
out
shlb
pushf
loope
out
mov
out
sbb
not
mov
icebp
ret
or
popf
or
push
outsl
dec
jge
std
jg
push
inc
fsubrs
lds
into
jp
testb
ljmp
inc
mov
lods
es
scas
inc
xor
add
pop
dec
xor
clc
mov
rcrl
data16
fidivl
ficoml
fcos
mov
sub
or
cld
mov
cltd
popa
insl
imul
rol
jnp
xchg
mov
test
loop
mov
insl
les
jle
inc
fcos
mov
cmp
mov
sub
stc
stc
sar
xorb
adc
jmp
scas
mov
inc
das
mov
mov
ljmp
jo
cmpsl
imul
dec
sub
popa
pop
and
mov
imul
ljmp
sub
push
cltd
out
mov
in
test
les
rcl
pop
push
jno
jl
cmp
cli
decl
int
push
sub
test
sub
jnp
cwtl
push
test
lock
mov
fs
andl
lock
pop
clc
jle
cli
les
inc
test
add
test
push
mov
addr16
hlt
pop
hlt
mov
nop
cmp
into
mov
fdivl
pop
loopne
jle
xchg
xor
cmp
sahf
shll
sbb
push
decl
stos
daa
xor
adc
repz
fwait
lret
fisttpll
insl
stos
shll
pop
pop
call
in
sti
sbb
jno
lcall
jg
or
test
mov
bound
sahf
mov
jge
loopne
jmp
or
push
jmp
xchg
mov
xor
pop
scas
push
outsb
lret
and
cltd
mov
fcomip
es
cmpb
movb
aaa
inc
dec
xor
cmp
rcl
ret
ret
mov
outsl
aas
mov
xor
dec
aad
aas
adc
lock
xor
jmp
ja
push
cmp
sahf
pop
sbb
and
gs
scas
mov
insb
loope
lods
and
jmp
mov
fisubl
or
insl
aas
js
jno
std
mov
adc
xchg
in
cmp
not
or
cld
call
outsl
mov
mov
mov
add
mov
xchg
mov
clc
idiv
das
hlt
cmpsl
dec
out
or
add
mov
cmp
pop
jp
mulb
add
jg
cmc
in
les
test
ja
mov
push
pop
pop
jl
pop
jmp
jl
aaa
aaa
outsl
std
inc
sbb
in
sbb
outsb
mov
int
inc
clc
and
add
decl
lcall
or
lret
cmp
push
mov
rorb
dec
push
jbe
mov
loope
inc
sub
lds
fwait
and
call
or
push
adc
dec
ret
orl
mov
mov
mov
inc
repnz
cltd
jnp
stc
xchg
sbb
movsl
out
sbb
lahf
dec
push
iret
or
mov
out
imul
pushf
mov
pop
and
ret
cbtw
pushl
in
push
pop
jo
fldcw
ja
sub
popf
xchg
les
cmc
addb
mov
push
fmull
loop
test
ljmp
movsb
sbb
gs
movsb
mov
ss
adc
pushl
das
popf
ds
sub
insb
xchg
dec
or
rorb
lahf
xor
icebp
jo
add
int
mov
lock
cmpb
dec
sub
xor
push
repz
js
ljmp
sub
ja
mov
fwait
sbb
stc
cmc
incl
pop
cli
push
rcl
inc
mov
mov
out
orl
lods
das
sbb
push
cmp
aad
dec
xchg
sbb
cld
std
inc
xor
enter
repz
pop
loope
decl
into
in
sbb
sbb
dec
dec
popa
std
jo
lds
call
push
fucom
fucomip
jg
cmp
inc
ja
adc
xor
xchg
sbb
jge
ret
pop
mov
pushl
add
scas
push
and
or
xor
push
mov
hlt
cli
aas
sub
sbb
xchg
and
sahf
int
fwait
into
dec
mov
in
je
fists
pop
or
pop
xchg
stos
and
push
fmull
inc
shrl
mov
into
dec
jge
xchg
fsubs
fcmovnb
iret
movsl
inc
lods
mov
pop
loopne
scas
xchg
mov
lea
xchg
inc
outsl
lock
scas
fisubrs
lds
pushf
fbld
lock
cli
test
shlb
into
jl
in
nop
ret
fbld
xchg
loop
xor
cmp
add
mov
icebp
pushl
nop
je
rclb
push
shl
test
fstpl
fcoml
xchg
lcall
mov
test
fcmovnb
imul
mov
pop
movsb
jnp
pop
std
push
inc
ret
mov
in
dec
out
leave
jne
mov
addr16
jp
les
push
sarb
aaa
notb
sbb
and
jae
dec
or
ds
jns
aaa
mov
jge
sbb
inc
and
das
jge
std
push
push
sub
shr
ljmp
mov
inc
push
mov
pop
add
jmp
cld
call
xor
dec
cmp
test
jecxz
mov
std
mov
clc
fcomp
jae
ljmp
icebp
or
cmpsb
lea
mov
cmp
pushl
adc
loope
fsubrl
repnz
xlat
lods
out
dec
jbe
cmp
mov
inc
pop
dec
jnp
mov
jns
adc
clc
std
aam
mov
stos
and
cmp
or
push
fcos
xchg
std
mov
mov
pop
xor
ret
popa
int3
lods
xlat
mov
ja
sbb
add
inc
lcall
sar
inc
cmp
out
mov
es
add
out
xsha1
cmpsb
dec
cmc
adc
sar
sub
pop
mov
lds
or
mov
add
pop
call
jb
xorb
add
push
jmp
outsl
rolb
xchg
sub
push
push
lretw
ja
test
push
fistps
dec
clc
or
xor
pushl
add
js
roll
xchg
push
add
add
or
in
pusha
insl
pop
mov
cmp
xchg
call
mov
sub
fcomi
mov
push
aad
cli
push
mov
cltd
roll
mov
cltd
dec
lcall
cs
mov
dec
stos
mov
mov
lock
or
cmp
repz
in
movsl
shll
pop
sarb
mov
andl
jecxz
inc
pushl
sub
fcomps
in
test
mov
lcall
es
add
outsl
dec
jp
cli
jnp
hlt
jge
adc
xchg
outsb
cli
decl
sbb
mov
out
adc
in
lret
or
mov
pushl
pop
dec
loope
enter
insb
popa
aam
cmp
mov
cwtl
xchg
in
pop
inc
jmp
pop
cli
les
pusha
loopne
ljmp
sbb
mov
lahf
and
mov
sti
fildll
arpl
or
push
sub
int3
js
pop
lret
ljmp
hlt
clc
outsb
jb
pop
pop
add
push
xchg
call
cli
push
adc
lods
push
xor
mov
inc
cmpl
dec
and
data16
loopne
adc
add
mov
incl
in
add
sbb
xor
mov
xor
and
test
mov
sbb
incl
inc
mov
add
ljmp
lret
fldt
mov
mov
inc
es
xchg
jo
jnp
inc
inc
in
mov
push
movsl
pop
or
jns
ds
dec
lods
cld
imul
mov
jecxz
push
jg
out
cmp
adc
cmp
or
xchg
es
mov
mov
clc
dec
or
fs
pop
rol
ss
jmp
xor
lahf
jae
imul
inc
or
mov
inc
or
sbb
xor
mov
aad
in
movsb
movsl
jbe
pop
leave
mov
lcall
dec
or
jp
xor
mov
xchg
jge
inc
mov
sub
incl
push
pop
jg
bound
ficomps
frstpm(287
test
mov
or
movsl
pushl
loop
mov
imul
and
insb
add
jg
aas
inc
lahf
test
out
lods
nop
cmpb
imul
in
repnz
lret
pop
pop
cmp
adc
in
add
or
les
cmc
and
fldl
pop
sbb
mov
add
popa
push
mov
aam
mov
cmp
lret
jge
divb
mov
xchg
pop
mov
fwait
aaa
xchg
sti
in
jae
ljmp
cmc
xlat
out
push
mov
jmp
clc
sbb
push
sti
ficompl
lods
or
mov
test
or
pop
cli
xchg
jns
cmp
aas
push
out
call
xlat
hlt
push
ljmp
movsb
lock
idivl
inc
lret
rcrb
daa
jns
sti
gs
cmp
jmp
dec
fdiv
sub
in
aaa
xchg
push
insb
dec
aas
shrl
and
fistpl
mov
jle
cwtl
stos
aaa
push
lcall
sub
pop
aaa
cmp
hlt
shrb
bound
cltd
decl
pop
add
and
push
in
and
sbb
pushl
jle
daa
jmpw
out
xchg
dec
sub
sbb
and
push
jns
outsl
cmc
ljmp
int3
mov
push
xor
int3
cwtl
xchg
push
lcall
repz
and
xor
xchg
outsb
mulb
aaa
push
jecxz,pt
jle
dec
pushl
call
out
idiv
mov
pushf
xor
cwtl
in
jecxz
lcall
div
inc
cmpb
xor
loop
icebp
mov
pusha
inc
push
mov
out
jb
cmp
sar
decl
push
stos
sbb
cmp
or
pop
nop
push
popa
jge
ljmp
fwait
dec
and
into
or
pop
jae
cli
xacquire
sbb
jg
aad
mov
arpl
mov
arpl
dec
scas
in
adc
mov
ret
aas
call
mov
xchg
push
insl
call
shll
sub
shlb
daa
mov
pop
clc
or
mov
clc
popf
in
adc
arpl
sub
orb
xchg
das
lock
les
adc
cld
into
push
inc
xchg
imul
xchg
jne
fldcw
jg
daa
ljmp
outsl
mov
inc
int
into
mov
push
insl
or
dec
cld
dec
mov
lret
in
daa
sbb
pushf
stc
nop
dec
xor
mov
stc
mov
xchg
cmp
sub
repnz
rolb
iret
in
adc
mov
repz
aas
mov
inc
jo
pushf
mov
ds
adc
pop
mov
jnp
cli
aaa
cli
jmp
jle
pop
imul
pextrw
outsb
sbb
xor
call
inc
add
sub
cmc
xlat
mov
adc
mov
lds
bt
pop
or
imul
sar
fwait
mov
jecxz
add
lahf
pop
mov
loope
xor
add
lcall
dec
push
push
lret
punpckhbw
add
or
enter
push
add
push
inc
dec
dec
add
inc
jb
add
rorl
insb
insb
push
or
hlt
add
je
jbe
add
or
imul
arpl
adc
fcom
inc
gs
adc
dec
outsl
fs
add
rorb
add
mov
mov
inc
imul
pop
fisubrl
out
jae
or
jo
sbb
push
jb
sub
or
jle
outsl
dec
sbb
add
mov
int
or
or
adc
mov
iret
daa
addb
bound
jae
inc
js
popa
aaa
jae
outsl
cmp
jbe
outsl
outsb
insl
mov
popf
mov
test
fldenv
iret
or
add
dec
or
push
popa
sbb
push
dec
andb
inc
cmp
out
push
js
add
sbb
xchg
insl
jo
fcoml
or
outsl
jbe
add
pop
sti
mov
js
addr16
gs
dec
xchg
add
ret
outsb
roll
cmp
xchg
add
cmp
fmul
pop
mov
inc
fs
neg
sbb
push
imul
sbb
fisubs
popa
movsl
dec
jne
in
add
lcall
cmp
jb
push
imul
push
push
outsl
sbb
push
xor
popl
xor
mov
xchg
imul
xor
fstl
and
cmp
fcomps
jle
iret
push
outsl
insb
jne
xchg
pop
insl
push
das
add
sub
es
dec
popa
loopnew
out
mov
push
or
mov
inc
pop
xchg
xor
out
dec
push
or
cmp
lret
push
dec
sbb
jnp
xchg
sub
loopne
ret
pop
repz
xchg
or
inc
ja
and
fs
jae
arpl
sub
xchg
inc
sub
inc
vmwrite
ret
xlat
mov
or
das
adcl
pop
dec
dec
and
mov
push
jne
jns
add
outsb
lds
jne
leave
imul
xor
repnz
or
sti
inc
jae
and
pop
mov
dec
mov
cmpsl
call
sub
fs
jle
pop
ret
or
roll
shll
sbb
xor
sbb
dec
outsb
push
cmc
jnp
in
dec
push
addr16
lods
sub
dec
arpl
imul
shll
fadds
test
lds
inc
xchg
dec
imul
jno
insb
or
cmpsl
and
push
orb
pusha
or
sub
sbb
xor
pop
dec
fs
jae
in
imul
imul
lds
dec
gs
cmp
pusha
sbb
push
cmp
sbb
loop
aaa
pop
and
and
adc
fisubs
add
adc
ret
imul
gs
inc
popa
mov
and
jae
cmc
mov
jo
lahf
lods
jmp
lods
push
add
leave
ret
pusha
scas
jb
or
cmpsl
jb
ss
aam
in
add
cli
rolb
andl
lods
je
jecxz
imul
arpl
dec
jae
cltd
sbb
jo
dec
push
lods
mov
push
lods
sub
or
jns
sub
push
in
in
inc
popa
popa
inc
inc
out
mov
cmp
dec
cmp
insb
addr16
fmuls
mov
orb
add
fs
add
cmp
js
fsubrl
or
pop
mov
dec
and
pop
sti
lcall
lcall
push
push
fs
inc
xor
inc
sbb
test
sub
leave
or
je
pop
test
adc
ret
cmpsb
or
lahf
sbb
jo
push
inc
and
jns
pop
js
mov
inc
mov
sarl
add
add
add
add
cmc
pop
or
lcall
lds
popf
mov
or
ret
add
mov
or
imul
in
mov
sub
push
aaa
shlb
add
pushf
mov
add
adc
push
enter
adc
add
push
fsubrs
xor
push
je,pn
mov
dec
jbe
sub
jmp
cmpsl
add
pusha
cs
je
sbb
adc
sahf
daa
inc
shrb
shlb
lcall
cmpb
lahf
or
and
and
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
