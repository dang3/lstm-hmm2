pop
rolb
jo
push
add
push
add
push
add
add
add
rolb
push
rolb
add
push
add
rolb
or
add
test
rolb
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
xor
xor
fs
insb
add
es
mov
add
mov
mov
add
loop
push
push
loopne
dec
mov
pop
insl
fisubrs
rcrb
and
bnd
jns
sarl
sub
cmp
push
and
test
addr16
repz
or
jge
cs
cmp
aaa
add
loop
mov
push
aam
pop
dec
push
loope
pop
sub
pop
xlat
mov
movsl
je
cmp
out
pop
fwait
cmp
nop
xor
test
lods
fldcw
fimull
push
and
sbb
jge
outsb
jbe
and
mov
jecxz
push
lret
push
jecxz
xor
scas
mov
les
mov
pop
dec
and
push
adc
push
mov
aam
in
dec
jp
and
and
je
sbb
cmpsl
mov
dec
mov
imul
xchg
mov
mov
mov
mov
jns
push
adc
pop
inc
addr16
add
add
push
pop
jl
pop
add
add
repz
scas
incb
cmp
and
js
aam
movl
sbb
lods
fldl
push
outsb
cmp
and
loope
imulb
outsl
sbb
and
subb
kmovw
hlt
sbb
filds
outsl
flds
and
repnz
cmp
sbb
call
insb
fidivl
test
mov
inc
daa
add
enter
sbb
xor
int
stos
cmp
into
mov
arpl
mov
pop
mov
add
nop
push
loope
pop
shlb
pusha
imul
mov
aad
cmp
aam
leave
pop
fneni(8087
cmp
lcall
mov
data16
aad
inc
mov
push
push
xchg
std
aaa
push
add
inc
dec
mov
cmp
jmp
jmp
leave
arpl
scas
addr16
xlat
fstpl
jne
clc
pusha
aaa
fcompl
dec
fwait
xchg
in
mov
and
cli
sub
dec
jne
fisttps
rclb
cmp
pusha
pusha
int3
fldenv
mov
push
xchg
or
js
push
movsb
andl
mov
jbe
or
mov
das
and
test
dec
xchg
sarl
ficoms
in
out
mov
shr
adc
clc
or
add
mov
inc
mov
mov
nop
jle
ja
xor
xor
xchg
push
dec
movsl
sarb
rcr
pop
pushf
mov
pop
pop
hlt
adc
pop
loope
das
daa
dec
sub
fildll
mov
aaa
sub
cmp
cmp
add
mov
mov
loopne
jmp
insl
sub
stc
decl
jge
fwait
movl
std
mov
dec
add
aam
ret
sbb
push
int3
in
lock
outsb
xor
push
insl
push
cmp
andb
mov
add
xor
pop
pop
stos
jecxz
and
xchg
sub
xor
addr16
pop
in
adc
int3
pop
bound
test
jmp
in
ja
js
jae
inc
inc
shl
inc
imul
inc
test
xchg
fdivs
xchg
sub
cmc
ficompl
shlb
mov
jle
mov
xchg
add
sbb
popf
jb
fs
add
add
cmp
leave
roll
xchg
mov
leave
sub
sbb
xor
xchg
xchg
jmp
pop
mov
dec
in
push
clc
mov
js
hlt
or
mov
icebp
cmp
xchg
es
pop
mov
mov
pop
pop
xchg
outsb
dec
addr16
rcrl
iret
jo
push
outsb
mov
push
test
mov
je
inc
cmp
push
cmp
push
std
int3
push
sbb
push
inc
incb
sub
cld
dec
jo
fs
xchg
mov
add
xorl
sar
cmpsb
lret
divb
hlt
xchg
xor
pop
call
inc
sbb
mov
mov
insb
inc
sahf
mov
test
dec
bnd
adc
sbb
sbb
cmpsl
xchg
loop
stos
cmc
shrl
mov
push
or
gs
repnz
andl
shr
lods
jb
insb
xor
fcoms
call
rorb
fidivl
xchg
mov
jmp
in
test
inc
xor
cmp
mov
adc
adc
jne
out
fwait
cmp
push
loope
push
mov
js
push
inc
and
jno
and
sub
shlb
dec
pushf
sub
xchg
stc
jecxz
es
daa
push
cs
shl
popa
insb
push
enter
xor
sbb
icebp
das
scas
in
mov
jmp
adc
cmp
ljmp
mov
push
lret
mov
pop
push
cmp
ljmp
pop
sub
and
mov
xor
mov
mov
pop
arpl
sub
xor
je
dec
sbb
mov
addr16
pop
rcrb
ret
sti
repnz
lret
in
mov
lcall
loop
adc
outsb
fcompl
xchg
clc
push
add
inc
cwtl
cmp
sub
mov
faddl
cmp
icebp
xchg
or
ja
push
xchg
add
out
scas
incb
add
sub
insl
cmc
cs
xchg
aam
cmp
push
stc
xchg
and
push
leave
sub
rcrl
inc
movl
into
xchg
cmp
xor
outsb
add
aas
test
rorl
dec
out
dec
lods
jecxz
mov
jno
mov
inc
fcomp
or
gs
fwait
lret
xorb
push
dec
mov
and
idivl
xor
shll
cmp
sbb
or
or
cmp
lds
dec
mov
pop
addl
jle
xor
push
iret
test
mov
cmp
cmp
cmp
sti
mov
add
daa
test
or
pushf
addb
andl
test
mov
pop
out
repnz
xchg
call
rorl
out
or
inc
jb
je
jmp
jl
cmp
mov
push
cmp
mov
cwtl
iret
shll
xchg
ss
notl
cmp
and
sub
xlat
or
adc
sbb
and
loope
jle
outsl
aas
sbb
cmp
or
aam
xlat
dec
in
shl
xchg
jae
insl
push
mov
sub
nop
xor
sub
cmp
das
pop
adc
cmp
mov
lret
in
adc
test
ror
pusha
and
jnp
sub
lods
pop
shl
sub
mov
dec
inc
loopne
das
out
fcmovnu
mov
add
ret
inc
or
pusha
inc
aam
cs
jle
int3
mov
dec
sub
jb
std
inc
bnd
shlb
adc
inc
out
je
sbb
leave
scas
loopne
divl
sti
repnz
cmp
cmc
int3
mov
cmp
jnp
jne
mov
repz
insl
push
sarb
or
js
mov
icebp
mov
mov
repz
or
pop
jl
add
and
sbb
sbb
mov
rcrl
xor
pop
dec
xor
xchg
data16
inc
dec
cwtl
in
cmc
xor
dec
pop
or
xchg
xchg
pop
jg
xor
cmpsl
push
add
fmuls
scas
mov
mov
js
out
jmp
sbb
sub
outsl
icebp
pop
scas
inc
inc
int
add
cmp
lds
cltd
lods
xchg
xor
mov
addr16
lahf
push
xor
pop
cs
sub
or
xchg
mov
mov
lret
and
roll
xlat
sbb
mov
stos
dec
ret
pop
dec
repz
xchg
xchg
xchg
lods
dec
push
inc
or
and
daa
lods
insl
adc
dec
dec
cwtl
mov
popf
ffreep
inc
jecxz
add
push
and
mov
pop
inc
xchg
sar
mov
outsb
push
shlb
inc
sbb
lret
mov
cwtl
push
adcl
sbb
sbb
cmp
jns
and
push
cld
add
mov
sbb
fdivr
push
gs
in
inc
lea
ljmp
sahf
paddusb
ds
mov
mov
clc
push
mov
cmpsl
dec
xor
stc
jmp
push
xor
or
jge
dec
gs
mov
and
cmp
cmc
insb
sub
cmc
shll
cmp
scas
pusha
data16
xor
jl
test
mov
sbb
cmpsb
push
movsl
inc
andb
inc
push
xchg
int
xor
popa
mov
adc
faddl
cmp
add
pop
dec
popa
or
jns
xchg
ss
daa
xchg
fcoms
clc
adcl
add
adc
je
filds
xchg
cltd
leave
cmp
inc
mov
adc
mov
mov
cli
scas
in
fs
dec
mov
pop
rclb
ror
add
add
je
or
sub
xchg
stos
jb
lret
or
mov
pop
imul
cmp
loop
leave
sub
xchg
xchg
dec
mov
adc
fstpl
call
jae
mov
stc
inc
mov
dec
push
pushf
cmp
out
sub
mov
push
xchg
inc
sbb
inc
popa
push
test
push
pop
imul
sbb
out
adc
loop
inc
xor
cmpl
jo
mov
lea
adc
push
in
xchg
dec
ret
adc
adc
aaa
popa
leave
sub
xor
cmpsl
into
cmp
sub
cmpsb
cmpsb
dec
shr
xor
mov
std
ljmp
popf
xchg
inc
sbb
dec
shll
daa
sbb
lret
mull
jne
mov
xor
jnp
stc
hlt
out
rorl
or
xchg
fnstcw
sbb
int3
les
movsb
and
rcl
xlat
in
mov
jl
ja
outsl
leave
loope
outsl
movsb
fidivl
faddl
pusha
test
xchg
lods
wrmsr
out
test
or
or
inc
jnp
jge
mov
dec
inc
mov
cltd
aaa
insb
mov
repz
jl
mov
push
dec
orl
lret
push
sbb
cmp
scas
sar
and
push
cs
jmp
out
fnstcw
out
dec
add
xor
popf
push
add
in
cmpsl
decb
push
stos
ret
repz
inc
imul
add
dec
pop
mov
movsl
cmp
mov
adc
xor
sti
inc
fcmovb
jne
inc
ljmp
sub
sub
test
inc
sub
push
es
sub
jg
jge
ret
cmpsl
cmp
imul
mov
sti
jne
lea
jl
sub
int3
mov
cmp
lods
jmp
push
push
mov
fwait
jb
inc
or
ret
mov
imul
sbb
jb
pop
cmpsb
movsl
in
data16
sbb
maskmovq
mull
adc
push
sub
arpl
jecxz
call
loope
cmp
push
add
jo
lea
jnp
jae
inc
cmpsb
sti
leave
adc
jge
aas
test
data16
xchg
mov
ss
jecxz
sub
rcl
pop
dec
dec
jne
rcrl
cmp
xchg
dec
push
jbe
mov
mov
pop
pop
ror
outsl
orb
fmuls
or
sbb
out
mov
and
jo
test
pop
mov
jne
mov
loope
pop
jmp
loope
or
in
mov
add
jg
push
pop
xor
mov
rolb
aaa
xorl
divb
cmc
fldcw
out
test
fildl
pop
dec
mov
xchg
dec
mov
pop
dec
xlat
or
pop
mov
lock
sbb
pop
mov
sub
pop
hlt
and
mov
xchg
mov
mov
cmp
scas
mov
outsl
push
sbb
pusha
repz
bound
out
mov
sbbb
cmc
sbb
add
cmp
fistps
and
movsb
mov
cli
add
mov
arpl
stos
shrl
sbb
xchg
aam
mov
insl
jb
int
icebp
inc
int3
mov
or
dec
push
and
mov
jge
outsb
adc
cpuid
and
pushf
leave
filds
insb
ret
pushf
and
adc
les
loope
push
fstenv
lods
xchg
popa
test
pop
and
fsubl
mov
inc
push
sbb
psadbw
or
xor
fstpl
mov
jo
lcall
mov
mov
mov
dec
push
xor
pop
int
rcrb
sub
pop
sbb
add
mov
imul
or
lods
out
jae
test
jns
repnz
clc
std
dec
movsl
test
push
xor
mov
out
add
mov
cmp
icebp
sbb
gs
dec
jnp
addl
lgs
xchg
testl
xchg
jmp
iret
push
jle
mov
or
ret
rcl
into
andl
or
movsl
push
inc
loopne
movsb
jae
call
or
outsl
test
mov
test
out
add
int3
or
shl
inc
xlat
xchg
push
into
xchg
mov
ficoml
inc
cli
cmpsb
pop
xor
cmp
pop
aam
mov
lock
arpl
and
or
pop
arpl
dec
lret
mull
cwtl
add
cmc
mov
aad
test
out
cmp
int3
cwtl
inc
cmpsl
daa
xchg
sbb
xchg
mov
push
ja
jns
mov
cmp
xchg
pop
rcr
je
mov
aas
mov
dec
jmp
int
pop
and
sbb
mov
and
sarb
rorl
in
out
inc
outsl
add
sub
adc
ds
test
inc
push
sub
test
shrb
int
outsl
into
sti
sub
test
pop
fstpt
pop
add
inc
filds
mov
aas
cltd
jae
sub
lret
mov
leave
or
nop
pop
pop
int3
fdivs
sub
imull
icebp
cmp
mov
pop
inc
lahf
test
das
insl
lods
popf
enter
mov
xchg
pushl
or
dec
mov
test
hlt
cmp
stos
cmpl
add
push
icebp
push
les
pop
inc
push
lret
jns
fnsave
notl
jno
pop
xchg
test
sub
adc
pop
loope
dec
add
ret
dec
xchg
push
xchg
adc
aam
loope
dec
xchg
rcl
xchg
ret
mov
dec
push
or
cmp
aas
daa
dec
add
cmp
nop
in
lahf
cmp
xor
test
nop
adc
mov
lahf
mov
mov
incl
popf
imul
stos
stos
arpl
mov
dec
cwtl
add
mov
cltd
ss
shrb
into
aam
in
popa
add
jno
xchg
sbb
or
jecxz
pusha
int
divl
xchg
in
into
cmp
cmp
mov
addb
or
out
and
xchg
loopne
iret
xchg
sub
gs
test
int3
cmpsb
fwait
inc
rcr
xchg
sub
jmp
fs
cli
jbe
rcrb
fsts
dec
push
shr
cmpsb
or
pop
sbb
mov
rcrb
sti
lds
cmpsl
mov
lock
jno
and
jb
push
dec
mov
mov
sub
push
sub
shll
insl
mov
mov
filds
mov
mov
dec
xor
ja
push
mov
inc
roll
nop
outsb
jnp
test
inc
push
jbe
xchg
lret
aam
push
test
enter
push
inc
fisttpll
jbe
sar
bound
inc
add
int
add
lcall
outsb
xchg
clc
xlat
jl
inc
jo
out
aaa
shlb
add
mov
rclb
inc
mulb
insl
negb
test
int
adc
jg
mov
xchg
sbb
aas
sahf
dec
subl
sbb
mov
les
shll
pop
lea
pop
pop
rcll
xor
popw
push
push
jno
pop
inc
mov
dec
pop
sub
xchg
std
mov
repnz
je
mov
push
sbb
icebp
or
mov
or
scas
loop
sub
xor
lcall
repz
cmp
adc
call
inc
ja
push
inc
lods
adc
mov
imul
adc
xchg
adc
sub
add
jbe
ud0
jecxz
add
cmp
sbb
popa
jmp
js
outsl
jb
xchg
mov
jne
in
add
push
xchg
xor
dec
and
out
das
in
test
outsb
in
inc
xor
cmpsb
adc
movsb
fs
pushf
rclb
xchg
jb
inc
xor
iret
push
pop
dec
mov
repz
mov
mov
scas
aad
sbbl
and
out
push
mov
or
std
ja
fbstp
imul
in
fidivrs
or
dec
inc
mov
cmp
movsl
jb
sub
lret
add
adc
iret
mov
pop
cltd
inc
shrl
mov
popf
xchg
int
pop
fwait
pop
test
dec
je
in
frstor
cmp
and
mov
into
addl
ficompl
ljmp
pcmpgtw
lods
xor
mov
jmp
popf
and
popa
push
lahf
push
fimuls
iret
add
mov
pop
sub
lods
jnp
fisubrl
or
jnp
cmp
ja
scas
lret
inc
in
cmp
dec
cmp
clc
ja
xchg
dec
lock
stc
pop
nop
add
and
nop
in
add
sbb
push
fcom
enter
cld
push
jmp
dec
sub
lahf
mov
pushf
add
adc
popf
inc
push
insb
xchg
nop
dec
sbb
jns
push
or
jecxz
mov
mov
out
imul
or
and
mov
outsl
sub
sbb
add
in
sbbl
iret
cltd
cmp
les
fnstenv
sbbl
mov
call
clc
faddl
sahf
movsl
daa
sbb
out
dec
in
sbb
or
push
and
lock
push
test
icebp
lahf
test
jno
inc
cmp
test
mov
sbb
pop
jb
mov
shl
das
fs
cmp
xor
and
lods
addb
push
les
xor
test
sub
addr16
je
adc
adc
fbld
insb
sbb
mov
lods
mov
pop
call
popf
and
sub
or
cli
mov
jg
imul
dec
mov
sbb
mov
jp
mov
lahf
sub
mov
pop
xor
sub
push
jg
inc
mov
jmp
in
sub
bound
mov
mov
inc
lea
inc
xor
inc
mov
and
adc
aaa
test
fs
outsb
std
repnz
sub
adc
mov
xchg
push
and
icebp
inc
gs
andb
jns
movsb
rol
popf
cmp
xchg
pop
popf
dec
push
clc
sbb
cmp
fdivs
fwait
inc
repz
imul
dec
stos
sbb
bound
pop
shlb
lret
inc
test
lock
sub
lock
pop
lret
dec
pusha
cmp
rcll
fstpt
les
fdivp
sti
fstpt
cwtl
mov
addr16
xchg
in
add
add
mov
xchg
and
aad
cmp
jne
fdivs
sahf
popa
mov
dec
dec
jno
pop
mov
cmp
xchg
push
mov
outsl
mov
mov
ret
out
sbb
mov
fs
clc
lods
into
aas
clc
pop
sbb
adc
fildl
jl
jecxz
adc
pop
insl
and
cmp
std
out
rol
je
pop
adc
enter
pop
xchg
push
pusha
pop
pop
addb
or
test
and
mov
mov
out
cmpsl
mov
inc
lock
sti
fstps
imul
dec
cmp
jae
je
lret
repz
cmp
in
jbe
push
add
pop
or
insb
adc
cwtl
aam
push
stc
xchg
cmp
ret
cmp
push
test
push
cmp
cltd
stos
push
ret
es
mov
clc
push
jae
jmp
nop
test
std
mov
jne
lret
mov
negl
jo
lahf
xchg
insb
insl
mov
shlb
jmp
push
dec
push
mov
jmp
stos
jl
push
sub
mov
inc
jmp
mov
imul
ljmp
push
and
sbbb
dec
sti
cmp
jmp
or
nop
and
xchg
callw
sbb
fidivrl
xor
inc
sti
jl
inc
jmp
int
ds
int3
adc
or
aas
push
sub
negb
xorb
cli
ljmp
pushf
rep
pop
add
xchg
fisubs
or
cmp
decl
xchg
adc
xor
push
dec
and
cli
mov
push
dec
cmpsl
enter
pusha
scas
shl
adc
and
rcll
std
adc
ja
and
icebp
jp
push
add
xchg
cmp
inc
cmpb
push
adc
movsb
or
inc
test
push
pop
cmpsl
rcrl
repnz
xchg
add
sub
inc
stos
add
testb
in
sbb
icebp
pop
mov
sets
xchg
sub
and
push
mov
mov
lcall
imul
jecxz
aam
daa
mov
lods
pop
jp
jle
dec
mov
cmp
push
push
add
add
movb
es
inc
sbb
dec
fidivl
aas
dec
lcallw
mov
out
sbb
int3
into
repz
xor
adc
mov
or
fwait
out
mov
cmp
push
push
jns
in
xor
pop
and
lahf
in
sub
movsb
lea
push
adc
out
lea
sbb
fistpll
pop
inc
in
jo
jg
into
incl
push
inc
lahf
loope
push
or
mov
out
and
shll
push
sarl
push
out
dec
pop
incb
mov
das
push
sbb
push
inc
mov
fistpll
sbb
imul
cmp
out
hlt
out
xlat
cmpsl
andb
mov
adc
pop
mov
sub
cmpxchg
in
cld
arpl
ja
xchg
arpl
bound
aam
call
sbb
hlt
cwtl
sbb
and
ret
out
ljmp
dec
out
or
mov
aad
test
dec
insb
shll
data16
xor
push
int3
jl
jp
xor
mov
popf
and
lret
xchg
push
jb
jno
add
ljmp
lcall
mov
jnp
test
and
push
mov
es
cmp
sbbb
cmpsb
mov
and
add
pusha
push
inc
mov
xchg
je
mov
jmp
jo
lods
pop
das
aam
mov
xor
outsl
out
fdivl
xor
pop
test
bswap
int3
xor
dec
lret
lret
popf
je
cwtl
mov
adc
adc
inc
loope
pop
aas
repnz
mov
aad
fistpl
jmp
dec
daa
scas
jmp
jbe
sbb
enter
adc
cwtl
pop
xchg
and
sti
and
hlt
pop
cld
mov
cmp
popa
xchg
mov
ja
push
mov
aad
add
xor
inc
lods
mov
xchg
sti
bound
into
je
or
inc
loopne
mov
cmp
and
aam
into
lret
dec
imul
popa
mov
daa
fdivrl
sbb
repz
mov
ret
push
ss
fidivrl
mov
leave
imulb
sub
adc
pop
push
or
and
add
push
lods
mov
js
or
xchg
fmull
jb
xchg
mov
sarl
insb
into
pop
adc
int3
pop
je
shlb
movsl
outsl
cltd
sub
push
adc
outsl
fdivrl
mov
popa
outsb
push
jbe
cmp
fs
sbb
cmc
add
mov
xor
cwtl
loope
dec
sub
cs
jne
pop
rcl
pop
pop
xor
ljmp
lods
ljmp
les
sti
das
cltd
add
fidivl
ret
ret
roll
inc
ss
daa
jb
push
ja
pop
inc
add
repz
adc
shll
dec
lods
ret
jp
cmp
cmp
or
lret
sub
and
mov
cmpl
lea
cmp
out
shl
mov
xorl
popf
aad
adc
push
xorl
pop
mov
mov
pop
ret
cltd
popf
pop
xor
dec
jo
inc
bound
add
stos
and
push
inc
mov
push
out
mov
cmpsb
sub
mov
and
xchg
xchg
cmc
jns
popa
dec
imul
repnz
rcrb
xchg
xchg
addr16
cmpsb
push
lods
iret
das
movsb
dec
jle
adc
jp
mov
or
fmull
cmpsl
add
sub
inc
std
xchg
push
sub
or
dec
pop
sub
out
fs
dec
inc
addl
test
nop
mov
mov
rorb
callw
inc
ret
ds
inc
aam
scas
fdivs
in
push
insl
lea
mov
enter
icebp
sbb
fistpll
push
xchg
mov
ja
cs
mov
aas
aad
pop
add
sti
je
pop
sub
cmp
pop
jecxz
jecxz
sbb
jns
iret
pop
jecxz
stos
jge
pop
adc
or
jb
push
out
into
test
push
mov
and
cwtl
loop
arpl
fmull
andb
imul
push
and
jl
push
jnp
sub
lahf
enter
aad
jno
pop
jne
xchg
lahf
sub
push
push
sahf
aaa
mov
leave
and
xchg
push
mov
in
or
xchg
ljmp
xchg
mov
ret
es
arpl
dec
jnp
xor
jle
movsl
push
outsb
ss
xor
decl
inc
popa
movsb
pop
cmp
fnstenv
mov
pushf
fdivrs
lcall
xor
scas
int3
jo
cmp
lea
mov
sahf
scas
xor
sbb
pusha
dec
in
hlt
loopne
jbe
cmp
mov
dec
in
clc
addr16
adc
pushf
push
mov
or
hlt
repnz
cmc
cmpsl
mov
fildl
pop
push
mov
or
push
fs
loope
popa
sbb
cmpsl
fsin
sub
dec
shll
scas
outsb
lcall
push
mov
fldcw
sti
jbe
fcomps
push
sub
jecxz
fldl
and
popf
push
sub
in
ss
cmp
cmp
enter
lret
int
roll
cmp
mov
mov
clc
gs
insl
cmpsb
aad
unpckhps
negb
jecxz
cmp
je
adc
and
into
and
mov
push
inc
scas
mov
mov
shlb
cmc
ret
int
setnp
dec
sub
jo
inc
gs
add
add
add
xchg
push
cld
sti
xor
mov
sbb
int
cmp
sbb
add
stc
cmc
pop
and
sbb
cs
xor
fwait
inc
adc
out
dec
cmp
popf
cmc
ffreep
push
add
push
dec
push
loop
mov
outsb
lret
rcll
cs
lahf
out
stos
or
lock
pop
or
adc
mov
sbb
push
nop
fstpl
cmpsb
xchg
fcmovb
and
push
jae
adc
shll
subb
ret
js
pushf
and
lcall
pop
or
insb
fadd
pop
popa
stc
adc
and
xchg
xor
mov
dec
std
lock
xor
adc
pop
movl
into
adc
xor
push
mov
jne
mov
or
test
push
jbe
out
dec
and
fsubrl
mov
out
dec
xlat
add
ret
lods
cmp
push
adc
mov
push
mov
pusha
leave
fcmove
pop
enter
adcb
js
sbb
je
push
xor
lds
xchg
sub
movsl
inc
and
stc
inc
jbe
test
clc
or
dec
movsb
push
pop
fwait
cltd
pop
in
mov
repz
loope
out
jmp
orb
cmpsb
popa
aas
mov
in
dec
data16
cli
inc
jge
fmuls
cmp
mov
jg
adc
xchg
ret
mov
ret
dec
aad
subb
mov
xlat
repz
pop
push
pop
xor
xor
mov
pop
mov
shrb
push
call
xor
jecxz
or
imul
movsl
cltd
aaa
pop
pop
out
mov
push
lods
mov
fptan
adc
adc
and
je
xlat
inc
mov
xor
mov
dec
cs
pop
push
or
cltd
pop
test
pop
push
mov
adc
cmc
cltd
mov
fidivl
jne
xchg
cmovle
sti
bound
or
xor
and
or
clc
fnstsw
cwtl
add
push
mov
in
add
and
pop
push
rcrb
adc
xchg
rolb
pop
xchg
xchg
and
sbb
test
pop
fnsave
mov
mov
hlt
pop
xchg
xchg
enter
int3
mov
jp
mov
or
cltd
and
inc
adc
xor
mov
cmp
cmpsb
clc
loopne
sub
dec
mov
cli
testb
out
in
add
lds
dec
imul
push
insl
pop
and
mov
popa
call
data16
dec
stc
sub
into
mov
gs
xchg
leave
inc
pop
adc
cmp
adc
mov
adc
cmc
xor
rcrb
frstor
fisubs
adc
mov
stos
jne
mov
arpl
mov
es
cmc
push
test
les
ficoml
lret
sbb
sbb
adc
adc
fs
xchg
inc
pop
ljmp
sar
mov
adc
cmp
call
jbe
mov
imulb
pushf
aad
pop
fsubr
jbe
lds
mov
xchg
or
sub
mov
lea
daa
sarb
xchg
cwtl
sbb
insl
fildll
cmp
xchg
mov
repnz
xor
aaa
mov
or
mov
mov
adc
and
and
arpl
sbb
cmp
xchg
fwait
leave
mov
popa
and
fmull
sbb
xchg
cwtl
fnsetpm(287
enter
aas
push
pop
pop
outsl
add
or
pop
push
add
mov
add
mov
push
pop
out
push
data16
enter
inc
push
adc
je
push
mov
xor
in
xor
aam
stos
lods
iret
jne
hlt
test
sti
adc
mov
sbb
roll
adc
adc
xchg
cmc
jge
movsl
jg
icebp
stc
and
and
cmp
mov
stc
lret
adc
and
add
bound
and
jae
push
xor
mov
push
add
int
xchg
insl
dec
sarl
cs
xor
and
in
repnz
ds
jge
cmc
mov
mov
jge
imul
hlt
xchg
in
fimull
push
xchg
outsb
xor
sahf
data16
jno
ret
dec
ds
jae
iret
js
fadds
out
fisttps
xchg
shlb
adc
push
cmp
je
lea
pop
outsl
xor
add
fidivs
imul
mov
into
add
or
pop
push
scas
cmpsb
out
ja
mull
sub
and
cld
pop
fistpl
jmp
imul
sub
xor
das
xchg
clc
je
cld
pusha
cmp
and
ds
inc
push
mov
mov
xchg
sbb
add
add
lret
rorb
mov
lods
jmp
inc
or
sbb
nop
pop
xchg
callw
aas
fdivr
in
cld
xchg
lods
mov
xor
pop
or
popa
fidivl
hlt
or
fwait
leave
mov
icebp
aaa
xlat
cmpsb
fldcw
inc
ret
mov
mov
daa
shr
push
push
push
mov
xorl
int3
cli
pop
sbb
pushf
sbb
xchg
inc
pop
into
or
jb
jae
lock
sub
sbb
cmp
ret
iret
rorl
aaa
inc
xchg
popf
test
es
ret
xchg
roll
push
mov
and
sbb
mov
jmp
push
sub
fld1
fisubs
xchg
int
pop
rcrb
push
rolb
push
inc
leave
inc
mov
das
jne
lret
inc
ds
jb
test
repnz
subb
mov
xor
xor
es
lods
test
movsb
int3
pop
xor
iret
in
inc
cmp
cmpsl
imulb
push
xchg
and
jle
repz
dec
jbe
fcomps
fisttps
and
out
insl
setb
inc
jle
pop
xor
arpl
xchg
sub
jne
addr16
dec
adc
testb
shrl
loop
out
lods
dec
jecxz
iret
rcr
mov
stos
scas
push
js
xor
add
xchg
aas
xchg
mov
add
cmp
lahf
jae
jno
add
cs
jno
mov
std
jecxz
sub
data16
jnp
dec
adc
xor
or
ljmp
xchg
and
pop
add
shlb
cmpb
inc
out
das
inc
mov
cmc
push
dec
jmp
rorl
adc
cld
je
popa
repnz
xor
and
icebp
push
add
mov
ds
addr16
dec
push
lock
push
jle
add
shl
ret
xchg
or
cmp
xlat
push
lret
enter
sbb
aam
dec
test
mov
sbb
je
xchg
mov
push
adc
ljmp
call
pop
push
adc
mov
lods
mov
mov
popf
in
cmpsb
xlat
fsincos
mov
es
hlt
into
and
jb
shlb
sub
mov
lahf
add
sub
pop
xchg
ret
or
outsb
mov
nop
scas
dec
stos
push
iret
mov
es
mov
adc
mov
nop
leave
std
hlt
testb
xchg
sbb
fidivrs
xchg
rcr
push
mov
test
push
pushf
in
stos
mov
pop
test
inc
lds
dec
outsl
movsb
pop
mov
call
jne
mov
xchg
push
mov
fsts
sbb
jmp
mov
pop
cmpsl
jge
je
movsl
mov
insl
in
test
aam
xor
add
inc
dec
jg
push
jnp
in
and
cmp
inc
sbb
fcom
push
lock
jae
mov
ret
dec
jge
iret
in
mov
lds
jge
ret
decb
cwtl
sbb
push
sbb
arpl
sub
add
pop
pop
int3
cmp
pop
xchg
pop
mov
jle
fwait
je
lds
jl
mov
xchg
cmc
xchg
sbb
cmp
sbb
into
mov
jmp
or
popf
sbb
test
cmp
ror
and
pop
mov
insl
mov
cmpsl
loope
int3
dec
mov
rolb
and
pop
mov
mov
inc
add
cld
rcl
iret
mov
fs
mov
cli
data16
insl
adc
push
nop
in
cmp
sub
jb
fiaddl
out
sbb
int3
test
test
jno
adc
jnp
push
jp
loope
rcrl
cmc
pop
jp
mov
add
xor
outsl
or
lods
xlat
fsubrs
xor
iret
xor
dec
push
insl
dec
lret
cmp
sahf
jp
push
push
inc
into
and
mov
mov
cwtl
leave
xchg
sub
idivl
dec
mov
std
shr
jmp
cmp
icebp
in
sbb
imul
cltd
adc
sahf
test
ret
lea
add
into
xor
sbb
jl
int3
jp
jae
fadds
xor
add
and
ret
mov
pop
and
dec
into
jo
or
jl
das
fwait
repnz
les
jmp
roll
mov
cmp
push
xchg
lcall
pop
cmp
out
adc
sub
jnp
xchg
daa
movsb
and
xchg
movsb
std
jp
mov
stc
dec
ja
jae
lret
pusha
cld
push
loop
or
push
cmp
jle
inc
jb
pop
aad
fimuls
ljmp
add
cmp
shll
ja
push
push
ss
loopne
inc
xchg
inc
js
addr16
cltd
out
scas
jnp
inc
mov
inc
push
outsb
js
mov
stos
mov
dec
xchg
mov
imull
or
sub
cltd
mov
mov
dec
mov
or
jbe
rol
xchg
rclb
into
jne
lcall
orl
in
xchg
mov
shll
jmp
je
xchg
outsb
mov
cmp
push
imul
into
adc
je
sahf
cmovae
rcrb
adc
in
iret
adc
outsb
clc
leave
xchg
mov
push
jp
lahf
mov
outsl
out
repnz
and
lret
mov
mov
sbb
sub
roll
push
mov
xlat
cmpsl
stc
jl
dec
out
push
int3
cltd
mov
shrb
dec
sti
imul
stos
push
adc
sub
lcall
ljmp
leave
lds
lahf
scas
faddl
xor
jnp
sub
stos
out
mov
or
ret
stos
movsl
mov
inc
stc
jecxz
shl
sbb
cmp
cmc
jmp
xchg
add
scas
push
out
jg
push
and
cmp
jmp
inc
ss
dec
and
cwtl
roll
aam
mov
and
and
sbb
ss
sbb
cld
testb
mov
ds
inc
push
lret
or
mov
stc
add
test
sahf
cwtl
popf
hlt
das
jge
cld
mov
repz
inc
lret
xlat
cmp
out
cmpsl
cwtl
cmp
movsb
cmp
lcall
in
or
mov
push
sub
lods
sbb
fisubl
inc
xor
pop
and
sub
repnz
xlat
ljmp
das
imul
inc
clc
je
sub
push
jb
cmpsl
clc
pop
adcb
add
xor
pop
push
mov
push
inc
sub
hlt
inc
jmp
jmp
inc
push
cli
pop
inc
push
add
std
frstor
lds
mov
in
xor
scas
push
jnp
addl
or
mov
and
cmp
roll
icebp
aas
sti
dec
shl
pusha
or
push
lahf
pop
xchg
xchg
loope
sbb
ja
and
push
add
repz
xor
sbb
mov
inc
mov
inc
sti
mov
pop
mov
scas
outsb
pusha
fsubrp
dec
ret
inc
adc
aam
scas
dec
orb
xchg
or
insb
inc
fisttpl
cmp
outsb
or
je
sbb
popf
ficoms
cld
or
jmp
fninit
pop
xor
xchg
test
pop
stos
ja
testl
xchg
cmp
and
adc
xor
out
mov
gs
dec
fwait
cmp
imul
repnz
or
jb
out
bound
lods
cld
pop
int3
or
mov
lds
pushf
ficoml
test
ret
push
pop
fistpll
rcrb
nop
and
loop
lret
jns
mov
cmp
mov
mov
imul
repnz
enter
mov
mov
xor
movsb
jp
cld
outsl
pop
dec
xchg
jae,pt
xchg
ss
stos
inc
push
inc
sbbl
xchg
test
ret
neg
add
mov
mov
ror
fwait
cmp
daa
fsubs
cwtl
test
xchg
out
adc
xchg
xchg
jge
call
stos
sti
gs
pop
xor
cmove
fadds
cmpsb
cmp
mov
jl
cmpsb
pop
mov
xor
push
fwait
ret
outsl
repz
daa
dec
xchg
int3
mov
test
adc
add
shrb
xor
pop
mov
nop
lock
add
dec
mov
mov
lahf
lods
cmp
sbb
ljmp
orl
add
cmpb
mov
fnstenv
loop
push
and
stc
mov
adc
pop
dec
sbb
loope
lret
scas
cmp
stc
add
aaa
jno
scas
cmpsl
add
out
ret
push
cmp
or
dec
lret
sub
add
xchg
arpl
xchg
push
sbb
inc
and
sub
iret
adc
shl
mov
pushf
pop
push
jp
dec
in
inc
icebp
jnp
lret
xchg
jp
push
test
in
and
repz
jle
jl
mov
sub
sub
std
sbb
and
xchg
idivl
and
je
xchg
test
and
je
lock
insl
pop
scas
mov
out
or
ss
mov
adc
outsl
repz
push
jcxz
addr16
cmp
xor
aad
scas
lcall
test
cmpsl
movsl
cmp
mov
sub
aam
ficoml
fdivr
aad
aam
jecxz
cmp
sahf
mov
in
inc
out
popf
in
sbb
sub
push
idiv
js
into
pop
sbb
rclb
mov
int3
imul
fadds
jg
in
clc
in
std
xchg
xchg
ss
arpl
ds
sbb
pusha
out
pop
vandnps
xchg
jne
fcomip
scas
mov
call
lahf
fdivrp
xlat
int
adc
mov
adc
mov
sahf
sub
imul
pop
faddl
mov
stos
jp
sti
movsb
jle
mov
std
push
cmp
dec
repnz
xchg
pop
push
and
rorb
sbb
movsl
flds
pop
cmp
divl
dec
adc
adc
mov
cmpsl
lret
icebp
cli
mov
jecxz
mov
push
or
push
pushf
xor
rorb
int
sub
sbb
xor
xchg
aam
cmc
insb
mov
out
pop
dec
lret
lret
push
jns
lods
addr16
add
lods
lret
test
daa
sub
jo
cmp
jg
cwtl
fucomip
rcrl
or
pop
dec
cli
xlat
push
pop
lds
push
fdiv
jne
dec
negb
in
mov
hlt
nop
bound
repnz
mov
sahf
xor
jmp
xchg
sarb
jo
dec
xchg
popf
mov
fstps
xor
mov
ret
push
in
sbbb
and
rclb
mov
cmp
in
jge
shl
fistl
mov
movsl
pop
loop
inc
push
stos
dec
daa
scas
push
aad
push
insb
repz
or
pusha
leave
jo
pop
xor
movsb
scas
mov
mov
loope
or
and
in
fisttpll
leave
bound
sbb
lret
fcompl
mov
pop
in
push
ds
dec
mov
jo
lods
mov
test
jle
lret
rcll
add
xor
adc
jo
jae
inc
mov
dec
inc
or
adc
xchg
outsl
cmp
imul
rcrb
jae
mov
sub
rcrb
inc
adc
lret
mov
mov
movsb
mov
and
imul
sub
pop
push
or
jmp
cld
mov
pop
scas
shll
dec
mov
jne
and
cmp
arpl
cmp
xchg
cmp
daa
cli
xchg
mov
out
mov
lahf
push
lock
cmpsb
rcrl
jno
insb
mov
or
sub
movsl
call
rorb
xor
cwtl
adc
mov
cmpsb
jnp
lret
rorl
daa
dec
scas
fwait
lcall
addl
aam
movsb
mov
push
xchg
out
jl
and
cwtl
mov
lods
aas
sbbl
adc
daa
test
cld
test
fildl
push
mov
fidivrl
mov
fcmovne
movsl
fildll
jo
xchg
xchg
cmp
leave
xchg
lock
jno
out
int3
test
rcrl
pop
adc
and
leave
shll
push
lock
jp
fs
cmp
push
or
and
lods
imul
add
ja
adc
cmp
clc
and
lea
imul
gs
test
xorb
push
push
dec
sub
pop
std
mov
icebp
adc
daa
push
out
pusha
sub
mov
gs
andb
dec
mov
shrl
jns
leave
jge
insb
mov
and
jno
pop
mov
cld
arpl
mov
imul
pop
xor
mov
leave
lods
shrl
push
xchg
xchg
push
mov
adc
gs
pop
mov
cwtl
ret
sbb
dec
or
nop
fs
loope
adc
mov
insb
movsl
mov
or
test
loopne
mov
push
cmpsl
or
and
jae
pop
das
push
fstpl
dec
adc
test
out
pop
adc
sbb
pushf
in
cmp
js
cmp
fidivl
pop
or
pop
dec
inc
mov
mov
mov
or
pop
pop
adc
dec
icebp
shrl
addr16
outsl
sti
gs
mov
add
xchg
test
test
mov
dec
add
xor
add
lret
stos
negb
div
lcall
notl
dec
jne
inc
shlb
enter
fsts
andl
xchg
and
ret
sbb
mov
repnz
pop
jne
mov
jecxz
das
dec
mov
add
push
pop
mov
fwait
jmp
push
loopne
mov
sub
push
shll
and
add
cmpsl
ret
jo
push
data16
imul
in
mov
je
pop
jmp
icebp
jmp
jp
mov
vmread
cld
lahf
sub
mov
dec
push
lods
sbb
xchg
loope
pop
les
mov
ret
xor
push
das
outsl
bound
ljmp
in
fdiv
push
pop
jb
lock
jg
nop
push
mov
js
pop
push
fld
cmpb
sbb
out
cli
dec
xchg
imul
xlat
xor
hlt
sbb
cmp
es
cmc
xchg
dec
pop
jge
sbb
mov
dec
cmpsl
in
push
pop
sub
lcall
in
test
mov
jp
cmp
pop
mov
repnz
push
mov
enter
out
repz
adcl
mov
jae
cli
sub
popa
or
and
jp
stos
add
push
sbb
xchg
cmp
mov
push
jbe
fists
leave
jmp
adc
subl
lods
inc
fnstenv
dec
das
mov
push
jg
aas
ffreep
cmpsb
cmp
clc
xchg
aas
adcl
mov
dec
dec
insl
xchg
cltd
les
xchg
adc
mov
fldl
jg
xlat
les
add
insb
jno
or
add
imull
pop
fcoml
dec
or
xchg
pop
xor
std
or
mov
pop
mov
mov
fdivr
push
cmp
xchg
or
pop
mov
pop
test
call
je
aaa
xor
iret
shrl
fsubl
addr16
inc
cmp
jg
orl
xchg
pushf
mov
clc
pop
dec
mov
jno
fucomi
jnp
aaa
icebp
inc
xor
mov
mov
mov
popa
aad
cltd
jns
jle
in
cmp
scas
jmp
adc
push
jno
sbb
pop
adc
sub
mov
jmp
int
cmp
mov
mov
in
cmp
mov
mov
sbb
sti
add
rcrl
or
add
imul
loop
dec
sub
cmp
mov
pop
pop
xchg
push
lret
and
dec
lock
pop
jg
pop
clc
ret
push
xchg
mov
or
outsb
enter
fldcw
repnz
ja
js
sti
aaa
jnp
xchg
aad
sbb
pop
dec
and
pop
cmpsb
pop
imul
insl
out
bnd
pop
xor
les
mov
dec
jae
push
lret
pop
cmpsl
adc
aas
lock
xor
xchg
push
xor
cmp
sti
pop
ret
xchg
cs
pop
mov
jp
or
mov
mov
add
push
sar
adc
mov
dec
xchg
mov
lahf
push
jnp
mov
add
ljmp
jae
int
sub
inc
adc
jo
fucom
rcll
in
lods
in
or
and
decb
psadbw
jno
lret
faddl
xchg
add
add
int3
mov
pop
lea
and
sbb
jge
leave
sbb
jne
mov
test
idivl
inc
push
push
roll
stos
icebp
pop
ficompl
es
xor
and
sub
inc
or
xlat
lahf
pop
decb
dec
movsb
push
sbb
sub
mov
insl
aaa
ljmp
mov
dec
push
sub
in
mov
cmp
mov
icebp
inc
loopne
mov
ljmp
xchg
dec
mov
sarb
ficompl
sahf
cmp
sub
mov
pop
shlb
cli
xor
dec
lret
and
mov
insl
add
mov
or
iret
dec
mov
lods
ja
js
popa
and
cld
stc
inc
aad
sub
and
dec
test
gs
push
js
xor
mov
and
add
inc
test
shl
pop
pop
aaa
ja
sub
subb
jecxz
popa
aam
xor
in
aam
mov
cmp
mov
sub
pop
push
int
push
fsubr
movsl
xor
enter
mov
lahf
rdseed
xchg
mov
mov
outsb
xor
jmp
test
push
xchg
xchg
sbb
inc
mov
mov
pop
pop
sti
scas
inc
mov
sti
or
pusha
ss
push
mov
sbbl
gs
mov
js
aas
into
in
sub
subb
pop
xor
ljmp
sahf
loope
arpl
jp
add
nop
add
xchg
mov
jecxz
imul
out
jle
pop
mov
pop
je
jecxz
insl
adc
test
add
jmp
sbb
mov
cmp
lea
sbb
nop
mov
jg
xchg
mov
mov
scas
and
in
mov
pop
mov
and
icebp
add
xchg
jecxz
pop
adc
add
pop
or
adc
jno
test
insl
or
inc
cmpsl
dec
jl
in
xor
sub
xchg
gs
jecxz
jne
mov
test
inc
inc
sbb
cmp
fs
std
inc
subb
inc
push
cld
jnp
cmp
ret
jg
mov
cli
aad
mov
aam
xchg
fcmovnb
pop
xor
mov
inc
or
push
cmp
or
rol
mov
jge
mov
leave
xchg
jne
inc
adcl
sarl
int
je
mov
out
cmp
xchg
rolb
or
sbb
dec
fs
xchg
sub
daa
pop
in
mov
xor
xchg
mov
mov
aad
lods
lods
lcall
in
cmp
dec
rcll
push
add
jbe
adc
mov
imul
xchg
mov
push
fwait
mov
cmp
push
mov
sbb
mov
faddl
mov
enter
pushf
stos
inc
ss
pop
push
mov
adc
sahf
adc
push
pop
lods
pop
mov
mov
subl
lods
adc
ficoms
cmp
ljmp
cmc
test
adc
jle
cmpsl
xor
inc
popa
hlt
sbb
adc
mov
jg
push
jecxz
int
add
ja
inc
in
out
mov
jp
xor
subl
push
scas
fidivl
fwait
inc
xchg
jbe
lret
mov
and
lods
sahf
push
std
add
std
bound
imul
inc
je
bound
dec
inc
xor
dec
cmp
scas
adc
pop
out
or
sub
stos
ja
stc
cmp
push
call
cmpsb
pop
and
and
xchg
sahf
jge
sub
sub
ficoms
dec
mov
dec
or
cmc
sbb
lret
mov
sub
out
push
imull
cmp
insl
push
mov
add
xchg
ror
xchg
jo
fcoms
add
repnz
xchg
faddp
popa
lret
clc
jg
hlt
mov
adc
dec
jns
fisubl
mov
ss
push
push
jae
pop
rcr
adc
fwait
pop
and
xor
push
sbb
mov
jns
je
or
scas
pop
jb
inc
outsl
cltd
imul
movsl
imulb
xchg
adc
xchg
ret
fs
jmp
push
sahf
out
cli
out
outsl
push
push
sub
jp
insb
pop
mov
mov
test
add
mov
fwait
iret
add
xor
icebp
sbb
mov
mov
ret
imul
inc
push
std
mov
icebp
add
xchg
inc
cmc
fst
jp
pop
notb
mov
icebp
pop
pop
push
jne
push
inc
push
enter
pop
mov
rclb
sub
or
push
dec
enter
inc
cs
jnp
pop
nop
xchg
incb
imul
or
jb
sbb
adc
pop
sub
inc
add
adc
push
sar
push
icebp
mov
js
add
loopne
repnz
xchg
jg
mov
in
lcall
sub
adc
in
or
in
adc
cmpsl
ret
sbbl
add
push
jae
jne
ret
xor
ja
inc
push
stos
pop
mov
mov
scas
adc
popf
xlat
and
bound
pop
lods
call
sub
cmc
inc
jbe
mov
movhps
pop
and
push
sti
xchg
mov
or
sbb
cmp
dec
dec
xor
fwait
xor
mov
xchg
ljmp
jnp
popf
add
and
hlt
push
and
out
or
and
loope
cmpb
test
pop
dec
jne
enter
loopne
push
jb
pusha
jmp
push
ss
vpsubsb
sbb
dec
adc
sub
jg
or
pop
out
push
or
arpl
mov
xchg
xchg
sbb
adc
push
push
into
cwtl
cwtl
aad
add
adc
fldl2t
into
icebp
stos
xor
out
jg
inc
aas
push
add
pusha
incl
sub
test
xor
push
xor
pop
mov
mov
jp
and
push
loopne
xor
push
addb
insl
xchg
addl
popf
enter
jno
mov
div
xchg
cmp
cmp
imul
xor
mov
fwait
add
mov
jns
cmpsb
lods
adc
or
mov
mov
fcmovb
enter
incl
mov
imul
xchg
in
fmul
pop
or
int
mov
mov
sti
repz
fcoml
scas
fsubl
cwtl
mov
test
dec
xchg
sub
aaa
jae
pop
in
je
pop
fidivrs
mov
push
test
leave
sub
xor
xchg
or
dec
cltd
push
leave
imul
iret
cmp
jmp
jle
xchg
shl
pop
mov
je
xorl
cmpsl
arpl
sbb
jp
dec
ljmp
inc
jle
fwait
in
movsl
out
jge
or
dec
push
lcall
add
ffree
pushf
pop
and
mov
add
outsl
repnz
cli
das
repz
sub
mov
cmc
and
pop
push
pop
pmulhw
adc
icebp
pop
jnp
pop
inc
push
enter
mov
sub
daa
xor
xor
rcrl
push
jg
push
mov
adc
jb
mov
je
add
mov
add
loopne
push
pop
xor
lahf
dec
scas
dec
scas
and
and
fs
mov
pop
push
enter
mov
ret
shl
push
and
sbb
add
aaa
pop
cwtl
jge
sti
mov
and
xchg
xor
into
mov
in
pmaxsw
aas
jmp
cmp
xchg
inc
ljmp
mov
mov
adc
daa
sbb
jb
mov
adc
xchg
cmpsl
pop
adc
jecxz
mov
pusha
call
xchg
xchg
pop
ret
xor
out
jbe
in
stc
pop
xor
sub
pop
out
mov
add
add
sbb
int3
cmp
dec
xchg
jmp
outsb
jbe
mov
sub
mov
notb
mov
jle
scas
sbb
inc
adc
inc
sbbl
sub
cmp
or
mov
test
cmc
sub
pop
ficompl
jle
cmpb
mov
add
js
lret
arpl
cltd
add
cmp
mov
jg
hlt
and
je
lods
or
push
hlt
test
dec
je
lods
test
jecxz
cwtl
mov
es
mov
lcall
ds
adcl
mov
hlt
out
xor
hlt
pop
mov
push
push
out
or
dec
inc
lahf
inc
icebp
mov
adc
lret
pop
mov
cmp
mov
shll
xchg
sti
adc
in
clc
cld
es
adc
fs
adc
imul
jo
stc
dec
pop
iret
mov
or
inc
pop
std
repnz
and
pushf
mov
ficoms
gs
outsb
push
cli
adc
pushf
and
roll
stc
call
rcrb
jo
sub
mov
mov
pop
outsl
in
or
xchg
pop
jno
into
jl
xor
sbb
stos
cltd
mov
in
or
test
leave
sahf
pushf
or
addr16
xchg
in
rorl
je
jmp
popf
and
mov
hlt
std
rcll
add
mov
cmpsl
addb
inc
data16
enter
xchg
out
scas
pop
xchg
lret
sbb
xchg
sub
mov
xchg
rcll
cmp
mov
pop
inc
xchg
sti
out
fcmovnbe
test
push
mov
xchg
xor
xchg
pop
sub
popa
stc
pushf
mov
jae
out
push
jl
in
dec
andl
cmp
fs
ljmp
mov
lods
je
and
sub
cmp
push
push
push
test
lahf
sti
andb
pop
xor
pop
daa
mov
shrl
js
mov
inc
jo
test
dec
subb
fistpl
iret
dec
inc
inc
lret
pusha
loop
cmp
jecxz
push
pop
outsl
mov
push
testb
sub
pusha
fld
data16
pop
sub
push
pop
xchg
dec
test
mov
push
mov
orb
mov
sub
movsb
mov
in
mov
in
pop
arpl
lret
cmp
xchg
aas
cmp
js
movsl
into
mov
cmc
mov
ret
mov
icebp
cmp
lods
add
into
xchg
mov
aad
insb
ljmp
xchg
sbb
mov
mov
push
dec
lods
fsubs
jb
cmp
mov
pop
or
pop
pop
daa
les
das
mov
psrad
lret
out
mov
pop
lret
sub
in
mov
rolb
push
inc
xchg
dec
dec
mov
repz
aad
push
add
sub
inc
in
es
jmp
and
pop
ja
or
mov
imul
addr16
dec
mov
mov
cmp
xchg
arpl
in
ret
jle
ficomps
add
cmp
jmp
dec
sahf
stos
jle
dec
jmp
mov
mov
scas
sarl
and
out
inc
ljmp
rcrb
add
ljmp
pop
push
jl
dec
push
add
hlt
push
mov
test
mov
xor
std
mov
and
or
imul
ja
fs
fwait
test
lods
xor
dec
mov
in
pusha
pushf
mov
sbb
sahf
std
cmpsl
je
pop
gs
mov
mov
dec
jp
inc
or
pop
ljmp
imul
xchg
or
inc
xchg
pxor
roll
stos
mov
divl
sub
push
fs
push
sub
fwait
dec
adc
and
add
mov
mov
int
xchg
and
cwtl
scas
adc
fnstenv
or
pop
pop
idivb
inc
xchg
inc
aam
and
sub
mov
sbb
lods
or
adc
rclb
jae
ljmp
mov
xchg
stos
pop
int3
push
pop
sbb
sbb
push
pusha
lret
fsubrl
jp
repnz
sub
xchg
pop
les
mov
sbb
in
addr16
xchg
inc
dec
loope
jg
inc
test
add
jae
in
int
sub
pop
pop
fsubs
das
jb
inc
dec
sti
pop
push
and
mov
cld
and
loop
adc
mov
push
pop
in
fistl
mov
mov
out
movsb
xchg
mov
cmp
fldcw
sub
pop
lods
inc
clc
add
pop
mov
pop
push
fadds
test
mov
lock
push
and
loopne
sub
add
fldenv
sbb
sub
jecxz
sub
xchg
stos
int
insb
pop
mov
in
mov
test
repnz
cmp
testb
xor
mov
stc
jg
pusha
pusha
mov
mov
mov
lcall
sti
int3
cmp
out
les
push
mov
and
mov
lods
adc
inc
and
xor
lret
ljmp
loope
inc
sub
sbb
jb
sbbb
cmp
jp
push
inc
repnz
or
int
das
mov
push
fnstenv
pushf
in
lods
mov
into
arpl
pop
sub
loopne
rcll
outsl
xor
pop
movsl
icebp
fwait
push
hlt
mov
xor
jl
mov
xlat
fwait
movb
jp
out
xchg
clc
and
pop
jecxz
int3
pop
lahf
inc
rcll
pushw
xchg
ss
xchg
lds
push
cli
sbb
cmp
adc
xchg
cmpsb
push
into
dec
xchg
data16
fs
lds
shll
adc
repnz
xor
pop
jo
or
dec
lock
xchg
push
cmpsb
and
mov
stos
int
outsb
clc
aam
in
test
or
and
subb
adc
mov
andb
cmp
jno
imul
push
push
test
shll
pop
aaa
adcl
mov
imul
push
call
xchg
fs
bswap
bound
jne
imul
addb
into
dec
in
stc
xchg
pop
mov
push
ds
lret
mov
mov
divl
mov
adc
push
sbb
aam
loope
fistpll
ficoms
js
lods
orb
aad
enter
inc
adc
ja
in
push
orl
mov
pop
sti
fwait
ljmp
in
pushf
pop
push
and
lea
lret
call
push
or
ss
fwait
and
into
push
fisubs
dec
cmp
cmc
sbb
pop
lcall
sbb
mov
mov
pop
sub
sbb
jno
pop
js
daa
vfrczsd
sahf
shlb
add
adc
bound
sub
xchg
rcrl
pop
sub
fwait
mov
mov
aam
orl
jmp
leave
push
mov
sub
inc
or
fstl
iret
es
lock
xor
stc
loope
jg
repnz
sarl
lea
mov
lcall
lods
jmp
pop
inc
stos
sbb
aaa
push
mov
xchg
mov
mov
div
sbb
cltd
cmp
mov
and
cmp
idivb
cmc
sbb
push
lret
scas
mov
dec
rclb
enter
push
lcall
mov
imul
inc
loopne
loope
inc
shll
mov
xor
and
out
idivl
fsubr
lret
fisubs
pop
call
scas
cmpb
scas
stc
push
xchg
cltd
pop
sub
pop
into
mov
je
sbb
iret
movsl
xlat
adc
jae
negl
lcall
add
jno
nop
mov
sahf
negl
dec
push
aas
xchg
mov
hlt
push
adc
or
push
dec
test
pop
lods
inc
fwait
lcall
inc
cmp
pushf
out
jp
repz
add
xor
jmp
add
sub
imul
in
mov
fidivrs
inc
cld
lds
test
shrb
pusha
jg
mov
push
pushl
pop
sbb
or
shr
xchg
in
sub
jle
and
push
call
std
dec
test
xchg
cs
fdivrl
nop
cmpsb
out
mov
jmp
xchg
testb
int3
popa
xchg
nop
sbb
jae
bound
jge
push
sti
add
push
mov
add
push
fbld
sub
popl
je
into
out
mov
xor
xchg
aas
pop
mov
mov
sub
inc
jae
ja
aas
lods
punpcklwd
jnp
popf
cld
push
or
inc
sti
je
jnp
jae
add
push
addr16
xchg
mov
scas
roll
repnz
cmp
inc
lock
and
or
fnstcw
pop
xlat
xchg
sbb
cmp
mov
dec
and
xor
jns
mov
and
add
loop
insl
pop
ja
or
push
or
adc
pop
xor
scas
clc
inc
pop
adc
dec
into
add
arpl
inc
inc
ret
lea
pop
imul
aas
fsubl
inc
add
cmp
sub
cmp
daa
jns
or
lods
inc
out
mov
xor
pushf
mov
shl
cs
out
xorl
out
mov
mov
lahf
sbb
insb
cli
sub
mov
int3
std
repnz
enter
loop
xor
fmuls
subb
push
lahf
mov
popf
divb
shl
ljmp
or
jmp
inc
sbb
mov
xchg
sbb
jp
fimuls
fucomi
inc
or
dec
push
inc
fcomi
xchg
dec
int3
xor
addr16
push
nop
mov
loope
cmp
dec
xor
jg
popf
js
or
mov
pop
out
and
jecxz
dec
mull
fistpll
xor
mov
cli
dec
enter
lods
pop
or
lret
adc
aad
jne
xchg
dec
and
push
mov
dec
jg
inc
sub
xor
aad
inc
rorb
mov
add
adc
pop
cmp
cmp
dec
mov
pop
jl
cmp
mov
cmp
inc
dec
lret
lret
repz
cmp
mov
pop
push
mov
mov
inc
sbb
xchg
fsubrs
dec
push
mul
or
mov
xchg
jo
data16
push
int
sub
ljmp
adc
pop
sub
lahf
xorl
push
aaa
and
test
sbb
or
test
pop
outsl
xchg
xorl
outsb
ds
xor
pop
xchg
or
in
jecxz
or
repnz
dec
mov
je
pushf
sub
out
testb
adc
sti
xchg
ficoml
sub
sbb
fildl
nop
aaa
std
sub
inc
push
subl
sub
movsb
cmp
ret
loope
xchg
xor
fwait
test
cmp
mov
pop
popa
ficoml
mov
loop
push
add
pop
aaa
mov
mov
xorps
scas
sbb
push
pop
dec
xor
outsb
fwait
clc
es
cmp
cwtl
int
xor
daa
popa
hlt
adc
xchg
pop
sahf
pop
repz
mov
xchg
xor
gs
addb
rorl
jmp
pop
rcl
fdivr
sub
imul
fldl
inc
mov
loopne
mov
aad
orl
ja
mov
bound
xor
scas
mov
xorb
inc
push
pop
jae
orl
add
ljmp
aad
lds
jns
cli
movsb
xchg
sbb
adc
dec
mov
jo
or
int
aam
jmp
mov
dec
xchg
icebp
popl
repz
mov
dec
mov
cli
jle
aaa
ret
xchg
and
add
out
push
lahf
outsb
mov
jle
fwait
outsb
push
std
lret
add
mov
or
jl
sub
sahf
lock
xchg
add
subb
pop
jle
jmp
dec
cmp
int
xor
enter
mov
sub
dec
dec
lret
enter
cmpsl
mov
jo
ds
movsb
in
push
mov
imul
call
lock
adc
pop
xchg
dec
rorb
jge
push
in
mov
fcompl
mov
test
jnp
js
arpl
jg
shr
and
add
or
hlt
sub
fisttpl
out
bound
scas
cld
xor
and
fdiv
mov
cmp
dec
out
sbb
cmp
add
dec
ror
add
movsl
aaa
sub
add
jle
sbb
pop
push
test
pop
jp
gs
inc
dec
in
push
jl
ret
lcall
xchg
add
data16
xchg
jge
test
xor
xor
sub
rcll
scas
jno
adc
mov
scas
fwait
iret
ljmp
mov
mov
push
cmp
ss
dec
outsb
and
aas
lea
shrl
stos
test
es
or
xchg
push
lea
testl
mov
stos
mov
mov
and
aaa
aaa
dec
je
sbb
adc
mov
pop
call
sti
icebp
xchg
xchg
xchg
mov
mov
cmpsl
cwtl
jae
gs
jo
test
push
std
mov
and
jl
cmp
cmpsl
es
adc
mov
push
push
fucomp
pusha
std
or
or
loopne
fmulp
gs
pop
pop
int
pushf
sahf
leave
cmp
add
adc
adcb
push
dec
arpl
lcall
test
dec
mov
xor
mov
enter
inc
dec
arpl
fcompl
js
subb
pop
arpl
dec
call
add
lret
cmp
test
and
inc
outsl
mov
mov
or
xor
dec
pop
insb
int3
daa
push
filds
jo
out
push
popa
mov
pop
repnz
and
push
dec
xchg
xor
and
jno
push
mov
mov
es
push
test
xor
dec
scas
pop
dec
mov
add
sbb
jmp
cld
repnz
adc
xchg
or
push
mov
aam
mov
dec
outsl
pop
shlb
push
xor
inc
jo
loope
lds
xor
and
mov
or
sbb
push
dec
movzwl
fildl
in
xor
sbbb
jmp
sub
jecxz
xor
mov
push
mov
mov
mov
ljmp
stos
push
jbe
test
push
lds
insl
nop
cmp
cmp
popf
inc
sbbb
stos
mov
xor
mov
dec
mov
sbb
push
lds
cmc
jb
cmc
xchg
sbb
push
nopl
ljmp
pop
hlt
mov
cmp
dec
ljmp
sbb
movsb
lods
cmp
sbb
pusha
mov
lods
add
lahf
lock
std
jbe
jecxz
push
push
cmp
shlb
mov
xchg
mov
mov
mov
call
loopnew
cmp
movsl
daa
xchg
mov
jo
ljmp
lods
ja
jo
push
pop
inc
popf
mov
arpl
adc
scas
push
pop
stc
inc
es
and
push
fistl
dec
jmp
imul
jne
sub
iret
mov
sahf
insb
mov
jno
ja
sbb
mov
loopne
loope
xchg
add
add
dec
ja
pop
and
xchg
out
push
shrb
imul
dec
enter
test
aam
lds
mov
jbe
or
xchg
inc
adc
mov
je
lods
mov
movsb
sub
in
sarl
cltd
sub
sbb
dec
mull
push
dec
lods
das
jns
movsl
jecxz
lods
jnp
cmpb
mov
xchg
mov
rcr
imul
jo
repz
popf
cmc
stc
push
push
nop
les
xor
inc
call
cli
outsl
xor
sub
aas
xor
adc
lcall
cmp
fnclex
mov
or
test
inc
fiaddl
aaa
mov
mov
push
sub
ljmp
inc
enter
inc
fsubs
cmp
mov
gs
jbe
das
or
arpl
jge
cmp
jg
sub
in
jl
loop
sbb
loop
jne
or
daa
sub
mov
sbb
lock
repz
jmp
pop
jae
push
ds
addr16
aam
jbe
fwait
jle
push
push
addr16
mov
cmp
pusha
xor
dec
in
ja
mov
push
scas
inc
cs
cwtl
dec
loopne
pop
mov
in
inc
adc
or
out
lcall
jecxz
xchg
pop
xchg
mov
or
decl
push
jg
insl
mov
push
sbb
pop
and
mov
fstpt
js
adc
and
xchg
dec
loope
arpl
push
in
push
mov
jnp
mov
icebp
fs
pop
push
mov
not
and
lds
repz
pusha
mov
mov
dec
shll
in
lret
adc
cmp
pop
push
cmp
roll
jns
lds
adc
fdiv
mov
jnp
jecxz
scas
cmpsl
dec
dec
sbbl
cli
and
push
jmp
add
fwait
aaa
popf
pop
jge
cld
jb
sub
aad
hlt
xlat
adc
lea
push
jecxz
inc
cld
mov
push
sbb
ljmp
das
movsb
ror
cmpb
push
or
sti
mov
icebp
ficomps
cmc
aad
jmp
adc
jae
fcomi
cli
mov
cld
mov
loop
popf
sbb
pop
mov
addl
xor
xchg
xchg
jns
cmp
mov
loope
int
jge
dec
cwtl
mov
mov
push
xor
ljmp
out
call
sbb
shrb
pop
push
push
insl
jl
cld
mov
and
cmp
cli
sahf
inc
dec
inc
leave
or
insb
sub
inc
in
lea
sti
lock
push
lods
and
push
dec
test
jp
inc
xchg
push
arpl
mov
movsb
repz
sub
jl
jecxz
outsb
jl
push
clc
sub
lcall
mov
jp
add
pop
popf
leave
pop
push
rcl
mov
sbbl
inc
stos
push
adc
mov
nop
jns
les
sub
nop
mov
mov
lods
dec
mov
movsb
loopne
icebp
jg
sti
push
jbe
pop
mov
insb
push
loope
cmc
mov
iret
stc
xor
movsb
mov
das
into
xchg
push
ror
lock
aad
pop
in
xchg
pushf
out
pop
and
adc
push
sbb
es
pop
jns
pop
les
push
test
ret
xchg
fs
jl
sbb
jo
mov
pushf
sbb
pop
fisubs
pop
adc
in
mov
cs
mov
gs
mov
sbb
scas
sub
xchg
ucomiss
bound
mov
imulb
fildll
jmp
scas
jecxz
insl
insl
push
sbb
and
cmc
imul
fwait
xor
xchg
dec
add
mov
decb
push
icebp
xchg
nop
inc
mulb
std
dec
adcl
xchg
sub
popa
xchg
jl
ja
sbb
popl
lock
sti
or
jno
xor
fadds
icebp
sub
mov
mov
pop
jl
inc
in
lret
add
jp
inc
inc
shl
mov
lods
rorl
mov
in
scas
dec
test
add
addl
and
rcpps
jns
mov
jmp
mov
out
fildl
pushf
jno
les
jle
push
insb
jmp
push
xchg
rol
inc
lock
jg
mov
jle
add
sbb
iret
subb
pop
nop
std
in
into
lods
adc
add
or
add
mov
shlb
lcall
push
cmp
dec
adc
and
in
dec
push
cltd
cwtl
lahf
stos
dec
xorb
ja
sbb
push
push
mov
mov
sbb
into
arpl
dec
iret
test
loopne
cmp
int3
xchg
jmp
fisttpl
push
pop
jae
pop
into
idiv
cmpl
subl
add
lods
mov
test
stos
fwait
in
bound
cld
push
mov
mov
cmp
push
imulb
lds
sbb
sub
sbb
pop
inc
jbe
in
cmp
rolb
insb
loop
pushf
sbb
lea
test
cmpsb
popf
aaa
jb
sahf
shlb
das
outsb
jnp
dec
mov
jmp
dec
pop
cli
xchg
dec
add
mov
loopne
dec
push
int
inc
outsb
je
jbe
dec
hlt
mov
push
test
dec
jle
mov
jne
stos
mov
popa
push
mov
inc
inc
and
sbb
jns
test
mov
movl
pop
cli
cli
pop
mov
arpl
sub
scas
adc
imul
inc
fs
jb
jb
mov
pushf
rcl
loopne
pop
lahf
xchg
jne
sbb
adc
mov
jmp
pop
sub
in
mov
xor
cmp
ret
popf
lea
ret
jnp
jecxz
lcall
mov
ljmp
or
jl
jle
adc
adc
xor
lods
ss
mov
push
sti
xor
push
in
jno
push
into
push
fnstsw
jnp
ja
movb
xchg
xor
inc
or
push
pop
cmc
negl
sti
lret
and
daa
jp
adc
push
je
or
icebp
popf
arpl
cmp
pusha
scas
es
jne
insl
mov
dec
and
test
mov
mov
push
popa
mov
xchg
arpl
insb
sub
ret
and
mov
addr16
inc
xchg
jl
jl
loope
stos
sbb
sbb
pushf
inc
xchg
movsb
adc
and
or
lea
nop
jno
scas
rcl
outsb
mov
hlt
addr16
jb
stc
or
shrb
xor
xor
mov
fdivs
std
fnstenv
pusha
das
sbb
out
loop
cmp
rcrb
and
jg
test
cmpsb
iret
lahf
lds
adc
mov
sahf
js
and
add
fs
stos
mov
mov
jno
push
mov
out
or
xor
ds
xor
jg
in
jae
loope
int
bound
sbb
xchg
mov
mov
fdivp
sub
xchg
dec
mov
inc
sub
pop
pusha
push
jp
bound
testl
or
jmp
outsl
xchg
std
stc
push
mov
adc
jp
movsl
xor
out
aaa
dec
adc
xchg
aaa
test
or
mov
sbb
mov
fcompl
push
rcr
aas
mov
or
movsl
divl
cmp
ds
aaa
stos
lcall
xor
nop
std
mov
cmc
int3
jg
or
fcmovu
aas
out
jbe
dec
mov
movsl
mov
stos
xor
iret
jge
jns
add
push
sub
mov
sub
xor
push
ja
jb
inc
je
mov
stc
stos
int3
fldt
jmp
jae
les
mov
mov
leave
andb
cmp
loope,pt
sti
sub
out
loopne
movsb
adc
adc
bound
enter
outsl
or
jmp
mov
in
sbb
stos
jne
adc
mov
aaa
jl
or
nop
pop
outsb
mov
shrb
jne
shrl
in
sti
test
push
sub
jl
or
filds
je
sarl
sub
insl
mov
loopne
test
jle
inc
mov
inc
pusha
or
jl
push
dec
cmp
and
pop
lods
shll
jmp
and
popf
addl
mov
pop
bound
negb
cmp
sbb
jnp
xchg
fidivrl
je
repnz
xor
mov
stos
or
xchg
push
mov
ret
lea
addr16
mov
mov
movsl
fwait
outsl
and
lods
and
add
int3
xor
bound
inc
inc
mov
xchg
sbb
mov
sti
scas
mov
cmpsb
xchg
cmp
sbb
scas
jg
adcb
js
loope
jno
notb
jae
mov
push
dec
in
mov
xlat
repz
les
jecxz
int3
cs
sub
mov
adc
daa
call
jae
push
outsl
ds
add
sti
push
inc
fs
sub
add
clc
xchg
rcrb
jecxz
fcmove
imul
cld
cmp
andl
pop
daa
mov
sub
mov
sbb
je
lds
mov
sub
mov
mov
loope
adc
test
jp
xor
out
ret
cmpsl
mov
js
dec
cmp
cld
aaa
jle
adc
dec
shrl
movsl
shlb
addl
cmp
sahf
cmpsb
or
jnp
repnz
loop
insl
push
ljmp
mov
mov
jmp
push
sti
dec
outsl
add
decl
sti
cld
push
jmp
loope
push
daa
cltd
sti
pop
lahf
sub
mov
out
std
movsl
sub
sub
mov
lret
pop
inc
outsl
push
lret
js
rolb
sbb
jge
and
fimull
dec
add
xchg
add
test
fistpll
inc
in
ret
out
add
inc
stos
xor
mov
mov
jb
mov
nop
pop
dec
and
mov
ret
mov
push
xor
mov
sbb
adc
das
lret
mov
dec
mov
sub
push
cmp
sbbb
pusha
jo
mov
popf
stos
and
test
scas
adc
mov
add
test
data16
cltd
or
cmp
cmp
cmp
stc
rcrb
or
push
in
xor
mov
mov
jg
inc
loop
push
add
lods
into
sbb
daa
and
add
cmp
mov
loopne
test
or
cmp
xchg
in
lahf
dec
pop
orb
sub
cmp
lahf
repnz
imull
loop
dec
iret
aam
xlat
sbb
lcall
popa
xor
aas
lea
jae,pn
xor
push
inc
sbb
loop
xchg
lcall
ja
push
lods
and
jae,pt
push
jg
insb
jnp
insl
es
dec
enter
jo
mov
mov
push
lcall
movntps
pop
out
and
sub
test
jbe
sbb
pop
fstl
push
cmp
push
jne
cmp
mov
xchg
xorl
inc
fs
mov
push
and
inc
jge
or
sub
jg
fildl
mov
fdiv
mov
cmp
fcomi
jmp
adc
arpl
stos
and
rclb
lea
sub
lret
push
outsl
fstps
lock
fldcw
sbb
push
sti
mov
ja
sub
adcl
stos
cmpsb
mov
stos
movsl
pushf
cmp
in
jno
adc
mov
fidivrs
adc
adc
push
dec
in
push
and
mov
aas
icebp
lea
aas
out
pop
inc
cld
loope
shlb
in
aas
je
sbb
cmpsl
or
mov
pushf
cltd
sub
cmpsb
fs
repz
adc
mov
ljmp
cmpsb
sahf
test
icebp
outsl
popa
vpcmpeqw
push
int
push
ss
insl
inc
fsub
adc
mov
int3
fbld
rcrb
sbb
push
adc
sarb
clc
loope
dec
outsl
mov
test
and
in
dec
fucomp
inc
in
mov
testb
add
pusha
andl
sub
mov
add
adc
push
push
rolb
aaa
xchg
add
adc
sbb
sahf
lods
addr16
mov
xchg
loope
cmp
lahf
imul
jno
xchg
lcall
xchg
adc
into
inc
and
test
add
mov
cmp
pop
cmp
lods
fistl
push
jg
sub
outsb
popl
xor
jg
imul
sahf
mov
fcomps
add
adcb
sbb
sub
sub
negb
enter
push
les
xor
inc
jo
jp
adc
and
test
cli
inc
xchg
imul
mov
mov
xchg
leave
push
aas
fcmovnu
mov
insl
mov
sub
aas
push
xchg
pushf
mov
call
xchg
ret
mov
mov
jae
test
jp
push
cmpsl
out
fwait
mov
and
test
sub
sti
loopne
pop
mov
jle
pop
push
cmp
daa
jb
pop
in
jmp
mov
cld
mov
jg
pusha
repnz
push
jno
out
inc
test
fidivl
shl
cmp
fnstsw
mov
test
ret
pusha
jg
addr16
dec
and
fnstcw
push
add
data16
cmpsb
add
stos
aad
int3
cmp
ds
push
or
test
xor
sbb
lods
hlt
daa
dec
stos
clc
or
mov
add
lcall
outsb
adc
psrad
inc
mov
imulb
push
jl
jnp
and
dec
imul
shl
pop
mov
mov
sbb
dec
jl
adc
xchg
mov
fs
mov
pop
call
push
aaa
add
sbb
jns
icebp
mov
in
sub
fxch
add
jle
xchg
cmp
jecxz
call
xchg
scas
rcrl
sbb
test
das
adc
dec
in
mov
dec
cmp
ljmp
les
sub
mov
mov
in
cmp
dec
loop
lock
cmp
mov
leave
je
or
ja
inc
fidivs
add
adc
clc
dec
inc
dec
ret
lahf
std
clc
mov
stos
sbb
in
sbbb
cmp
jge
xchg
sbb
loopne
movsb
shlb
in
pop
pop
pop
fld1
and
add
cld
fucomi
xchg
stc
xchg
and
das
push
pop
repnz
arpl
inc
popf
divl
push
sub
stos
cwtl
xchg
jne
dec
xor
jecxz
ss
cli
in
hlt
mov
pop
fwait
add
cld
cmp
xchg
out
fistl
notb
pop
psrld
mov
jnp
out
mov
fcoms
movsb
or
mov
data16
jl
rolb
xchg
fistps
cmp
jne
adc
enter
lods
mov
pop
inc
xor
pop
cmp
or
inc
mov
add
mov
jecxz
mov
mov
movsb
dec
or
inc
dec
hlt
adc
ss
add
adc
sub
xchg
xchg
and
stc
xor
xor
push
sbb
pop
adcl
add
sti
jmp
and
lahf
rcl
push
sub
dec
jae
std
mov
adc
mov
int
mov
pop
aam
mov
popa
dec
std
mov
and
or
imul
mov
test
xchg
adc
add
pop
mov
and
loopne
pop
sub
stc
mov
jp
out
ret
mov
mov
sub
xor
repnz
mov
cmp
mov
pop
aas
mov
sub
add
mov
jbe
into
aad
push
decb
jno
sub
and
sbb
popf
daa
dec
jne
inc
sub
adc
mov
mov
into
aam
mov
aas
mov
rcrl
shl
lret
fildll
mov
inc
dec
sti
repnz
mov
jle
and
sub
ds
test
pop
pusha
xor
test
rolb
push
mov
sub
mov
stos
xor
push
xchg
jne
cmp
test
outsl
inc
bound
lret
jecxz
add
ret
mov
pop
add
push
inc
sub
test
inc
out
sub
pop
jecxz
xor
or
cmp
and
sub
push
xchg
imul
fwait
mov
xor
pop
xor
es
test
cmp
or
jne
jge
xor
outsl
idivl
push
sbb
jecxz
inc
sub
mov
cmpl
or
mov
adc
push
int3
and
add
jle
lret
iret
aaa
add
xor
adcl
dec
out
and
in
pop
jl
fnstcw
add
and
push
xchg
mov
nop
loope
dec
jne
xchg
mov
push
mov
imul
jmp
jl
cmpsl
cmpsb
pop
std
cltd
int
mov
dec
lds
and
jno
pop
out
int
jo
call
sbb
test
nop
addb
cwtl
inc
insl
hlt
out
je
out
shl
sti
sub
xor
xchg
push
scas
mov
in
fnstcw
fldcw
mov
fwait
push
mov
cmp
arpl
repnz
mov
arpl
dec
push
in
popf
pop
lret
mov
adc
mov
in
fmulp
sahf
mov
sub
dec
les
call
sbb
ret
int3
sub
push
out
jb
add
mov
pop
in
push
je
testb
push
push
xor
xor
xorl
inc
push
out
je
fld
ffree
dec
neg
fmul
shll
xor
dec
xor
cmpsl
loop
fs
sub
test
addr16
sub
push
aas
sub
jmp
or
icebp
fiaddl
inc
jbe
adc
jle
xlat
imul
pop
xor
jmp
dec
inc
mov
mov
stos
mov
insl
hlt
repz
sub
ret
fbstp
ljmp
fprem1
push
stc
rol
clc
pop
mov
inc
or
sbb
std
stos
add
movsb
in
push
lock
mov
shll
mov
jo
mov
add
pushf
lea
es
jnp
jle
sub
rcll
stc
sub
push
shll
or
imul
add
iret
push
jb
lods
jmp
mov
lcall
lods
xchg
mov
jp
push
loop
pop
icebp
pusha
lods
in
stos
fstl
jbe
pop
fucomi
es
sub
xchg
jp
add
dec
mov
loop
mov
out
pushf
cmp
sti
or
push
pop
sbb
mov
sahf
pop
push
out
imul
xor
sub
add
mov
js
insb
ret
xor
shl
js
add
xor
call
xor
and
subb
mov
jp
testl
adc
sahf
pop
ds
mov
aaa
sub
lahf
pop
pop
out
cltd
mov
mov
in
out
xlat
ds
fstps
add
mov
jo
or
mov
xor
cmp
cltd
mov
jp
or
ret
int3
mov
xor
out
imul
hlt
mov
gs
into
lret
addr16
aas
sbb
cmpsb
or
aas
push
mov
or
mov
test
mov
jl
mov
shll
test
dec
cmp
lea
push
je
sbb
ret
mov
adc
jae,pt
out
daa
pop
xorl
ret
xchg
pop
imul
xorb
xchg
leave
push
les
dec
push
cmp
jl
int3
lea
sub
xor
and
push
push
jae
stos
mov
mov
or
add
mov
dec
loopne
mov
repz
sbb
pop
mov
sbb
push
test
pushl
shlb
cmp
aam
jge
insl
cmp
jg
in
mov
mov
in
cmp
pop
jo
cld
into
imulb
jmp
sbb
mov
inc
inc
sbb
dec
int
lahf
xchg
aaa
pop
lods
aad
jbe
xchg
dec
imul
lds
pop
pushf
mov
mov
out
push
adc
add
add
xchg
enter
clc
test
adc
fadds
or
and
mov
cmp
mov
mov
mov
adc
mov
sbb
xchg
in
data16
into
jmp
lcall
fsub
outsl
fucomip
iret
and
repnz
out
cmpsb
mov
add
mov
out
push
add
push
cmpsb
mov
ret
xchg
ja
ljmp
inc
lea
jb
or
dec
nop
add
push
mov
cmp
jne
jno
out
adc
lds
gs
xchg
outsb
dec
js
ja
ret
jmp
cltd
int
push
sub
push
clc
mov
pop
rcll
adc
xchg
cmp
cmp
or
fnsave
add
or
lods
push
mov
test
xchg
mov
out
mov
scas
dec
es
enter
mov
xchg
movsb
out
jmp
push
mov
push
icebp
gs
mov
sarl
mov
adc
aaa
pop
mov
cmp
push
dec
aaa
pop
and
pop
dec
pop
pusha
xchg
mov
push
push
js
bound
movsb
jb
inc
mov
gs
dec
inc
add
movl
mov
dec
inc
adc
loopne
sbb
pop
add
cs
push
jmp
fs
loop
in
in
neg
sbb
in
decl
cmc
mov
jge
xchg
mov
shl
mov
loop
cltd
ja
mov
push
shr
leave
xor
mov
data16
jae
inc
fisttpl
repnz
pop
pushf
cli
mov
andl
xlat
les
cmp
les
es
xor
popa
out
pop
outsl
lea
xor
fcoml
pop
adc
pusha
sti
out
cld
orl
or
iret
dec
xchg
mul
ret
out
sti
lret
pop
bound
stos
or
sub
cmp
lock
pop
and
sub
js
adc
stos
sbb
mov
mov
lea
inc
xor
int
test
or
mov
sub
cltd
adc
xchg
pop
mov
movsl
addb
fstpl
subl
int3
addl
popf
cltd
mov
sti
mov
in
or
cmc
pop
gs
jns
fs
pop
jne
jnp
adc
sub
mov
leave
cmp
sarb
push
out
xchg
cmp
push
sub
bound
jb
movsb
enter
ljmp
test
xchg
adc
jle
xorl
cmpsb
mov
js
ja
push
cltd
test
aam
testl
jg
cmc
cmp
repnz
inc
cs
roll
stos
push
push
xchg
cmpsl
mov
negl
orl
add
mov
jg
fcompl
inc
dec
popf
dec
sbb
repnz
clc
dec
sarl
in
mov
cmp
imulb
sub
repz
sbb
xchg
push
push
lahf
mov
outsl
xor
fstl
fidivrs
in
dec
fmuls
sahf
sub
pop
scas
xor
int
ja
inc
mov
mul
push
test
sub
dec
ss
push
and
dec
mov
fstpl
roll
ret
add
mov
add
pop
sbb
jb
and
mov
outsb
push
movsb
jne
push
jns
cmp
scas
cmp
fcmovb
adc
xor
cmpsl
mov
nop
or
jle
movsl
sbb
pop
in
test
std
ret
sub
mov
mov
xor
out
xor
add
fisttps
nop
sub
lods
cltd
mov
jmp
popa
ss
pop
and
sti
pop
shrb
popf
pop
sti
pop
loopne
jg
cli
stos
pop
xor
jp
pop
add
clc
mov
dec
and
or
lret
jl
shll
sbb
arpl
lds
insl
and
ds
pop
or
cmp
mov
xor
repnz
dec
pop
xchg
xor
cmc
xchg
sbb
push
test
test
pop
mov
adc
inc
outsb
inc
addr16
stc
jmp
jge
nop
and
jg
xchg
jns
push
insb
add
js
mov
add
xchg
inc
inc
adc
lods
and
or
cltd
adcb
ljmp
ss
es
es
dec
push
cmpsl
addb
inc
insl
test
or
pop
ss
popf
pop
and
ret
cwtl
bound
bound
test
jo
aad
sub
jns
jge
xchg
xorb
fsubs
ljmp
fadd
ljmp
adc
push
jp
cltd
mov
jl
pop
fwait
mov
mov
cmp
loopne
dec
cld
mov
add
mov
sarb
test
or
sar
repnz
jns
mov
lods
dec
dec
inc
sbb
test
jne
insl
sub
sbb
jno
xor
rcll
cmpl
repz
pop
add
sbbb
jecxz
fisubrs
sub
inc
ljmp
xor
mov
or
add
cli
xchg
mov
std
and
push
sti
out
ljmp
dec
or
nop
jmp
pop
movl
out
call
mov
sub
inc
popa
jl
mov
cld
pusha
jnp
cwtl
ljmp
mov
subb
xchg
mov
out
out
sub
xor
outsb
mov
push
dec
sub
pop
jle
enter
popf
dec
movsb
push
flds
xchg
cmp
mov
mov
test
and
out
mov
cmp
fs
dec
xchg
mov
enter
xor
xchg
pop
rorl
cs
push
xchg
pop
ds
in
scas
pop
sarb
test
std
cld
stos
sub
ret
add
stos
inc
lea
fstl
sti
cmp
movsb
fstpt
decl
or
or
sbb
int3
cs
xor
stos
push
pop
mov
cmp
loopne
repz
mov
mov
addr16
shrl
cmove
out
sbbb
mov
cmp
pop
jbe
test
and
mov
pop
addl
sahf
fistps
fistpll
jno
lods
jle
mov
ficomps
movsb
popa
daa
cltd
adc
jns
sub
gs
sub
out
cmpsb
pop
xchg
loope
aaa
ja
xchg
insb
sahf
sbb
sub
test
jmp
addb
fsubs
push
insb
dec
lods
pushf
aad
addl
out
pushf
aad
mov
mov
push
mov
cmpsb
sub
test
ja
push
sub
int3
lods
cmp
addr16
jne
test
repz
push
push
mov
div
add
stos
pusha
clc
fwait
sub
outsb
xor
psubsw
loopne
ljmp
es
iret
cmpsb
movsb
mov
jg
xor
enter
sub
or
push
aaa
jnp
fwait
adc
lret
daa
inc
sub
imul
sbb
push
xchg
lcall
pop
test
nop
repnz
aam
int3
pushf
sbb
sub
mov
and
and
mov
test
push
fwait
subb
sbb
aam
stc
int
cltd
jno
popa
lcall
ficomps
sub
cmp
imul
fiadds
pop
outsl
mov
dec
sub
jecxz
adcb
xor
bound
stos
fdivp
mov
or
jb
aam
sub
mov
popa
sbbb
hlt
or
xchg
sbb
push
je
loopne
push
pop
leave
xor
sarb
cmpsl
adc
sbb
pushf
and
sub
mov
pushf
add
or
negl
dec
das
pop
push
mov
test
sbb
data16
sti
jns
call
sub
sub
test
xchg
call
clc
adc
mov
out
sub
pop
sub
lea
stc
and
rcrl
in
mov
fcmovbe
mov
jbe
push
pop
cwtl
jmp
fcomip
ljmp
dec
lret
jl
jle
mov
adc
enter
add
sti
dec
pop
pop
push
xchg
cmp
nop
int
or
movsl
aas
or
data16
inc
fcomps
clc
pop
jmp
push
jne
jb
cmpsb
stos
cmp
inc
ror
inc
ret
outsl
inc
loope
fisubs
int
daa
jne,pt
loope
rolb
xorb
dec
dec
xor
and
xor
xchg
push
shll
sub
mov
mov
adc
mov
sub
gs
adc
out
outsb
incb
inc
inc
lret
mov
nop
stos
cmp
andl
mov
les
mov
or
jp
cmc
jne
adc
test
inc
sub
push
sub
mov
gs
mov
sbb
or
push
sbb
or
ds
and
fistps
sbb
data16
push
mov
jge
mov
mov
nop
testb
and
out
imul
xchg
pop
ret
scas
xchg
mov
test
sbb
xlat
xchg
sbb
les
das
rolb
cmp
js
in
cld
and
push
in
dec
jl
adc
inc
popa
mov
je
fst
shrb
pop
pop
icebp
or
std
push
xchg
mull
jg
mov
add
mov
push
leave
and
fdivs
push
lcall
jo
in
popf
nop
mov
jnp
mov
fmuls
sbb
xchg
sbb
int
movsb
imulb
push
mov
lock
divb
sub
jle
lret
xchg
xor
lcall
shll
mov
xor
adc
and
stos
xchg
push
jl
mov
jnp
xchg
sub
mov
ficoms
fldl
out
mov
dec
cmp
inc
popf
pop
dec
inc
and
pop
inc
sbb
test
insl
nop
arpl
mov
enter
jno
enter
movsb
jl
roll
and
add
jae
test
dec
jg
mov
iret
sub
jle
xchg
sub
adc
jnp
aad
push
xchg
jne
inc
xchg
sbb
mov
fdivrp
dec
pop
add
cwtl
push
push
sub
fisubs
mov
sbb
push
sub
dec
out
pushf
mov
sbb
xor
xor
xchg
fwait
adc
mov
test
add
cs
sbb
inc
pop
testb
cmp
in
mov
repz
ljmp
out
mov
lods
mov
mov
lods
and
mov
inc
out
xchg
loope
outsl
pop
pop
cmpsb
jbe
out
lret
jbe
add
scas
jecxz
fadd
or
stos
pushf
cwtl
inc
leave
data16
push
adc
mov
add
mov
xchg
cmp
xchg
jns
fisttpll
xor
sub
data16
imul
mov
pop
out
loope
push
shlb
gs
mul
stos
jp
pop
out
ret
xchg
dec
jne
popa
adc
cmpl
test
sub
stos
and
xchg
push
daa
pop
rep
loop
movsl
push
mov
add
push
cmc
aam
xchg
mov
sahf
cwtl
jl
mov
out
mov
adc
pop
ss
inc
sbb
in
jno
and
and
add
lcall
sarl
fiaddl
popf
jg
popf
insb
adc
jp
mov
das
or
inc
push
adc
cwtl
in
and
jb
jno
push
xchg
xor
add
or
cmpsl
sub
pushf
popf
mov
mov
jmp
das
or
sub
add
mov
mov
mov
lret
idivb
mov
scas
mov
aaa
cli
inc
pop
mov
out
divb
outsb
mov
mov
pushf
sbb
movsl
fcomps
mov
pop
icebp
int3
fsubp
or
mov
add
xor
xchg
add
jmp
dec
lret
iret
xor
popa
and
add
inc
mov
out
rcl
rcrl
lds
sbb
lds
xchg
int3
push
mov
xchg
push
and
nop
push
mov
add
push
cmp
bound
mov
mov
loop
out
pop
mov
out
test
insl
pop
mov
arpl
out
std
push
jecxz
xchg
sarb
mov
popa
ljmp
jb
and
leave
and
stos
clc
shrb
inc
mov
sahf
xchg
pop
pop
pop
movsb
cmc
cmp
cwtl
test
mov
push
jmp
sbb
lcall
popa
stos
fidivrl
sahf
repnz
cld
mov
leave
pop
cwtl
movsl
sub
xor
mov
jp
xlat
popf
or
xchg
sub
jb
lret
fisubs
inc
icebp
pop
mov
in
int
js
jb
mov
dec
inc
pop
mov
jl
cmc
cltd
fildll
mov
xchg
jno
dec
out
mov
or
sahf
push
adc
xor
cmp
jle
in
dec
xor
es
add
push
sbb
inc
adc
dec
std
mov
xchg
mov
jmp
jns
inc
ret
incl
inc
inc
add
mov
sub
mulb
pop
stos
inc
nop
cmpsl
xchg
fstps
cmp
mov
mov
aam
jbe
test
scas
or
jns
enter
and
shr
mov
sub
jns
mov
xchg
dec
sahf
je
sbb
movsb
fsubr
mov
fildll
cmpsb
repnz
push
push
add
fs
push
hlt
mov
aam
xor
mov
pop
fsts
pop
mov
cmp
loope
cld
mov
jbe
pop
add
xorl
inc
clc
inc
dec
lods
push
loope
xor
sub
sbb
cmpl
push
in
movsb
cld
adc
imul
adc
cmp
and
cmpsb
shrb
shlb
js
add
aaa
or
push
test
pushf
add
pop
adc
insb
sub
pusha
test
fnstsw
sbb
dec
push
mov
and
pop
lahf
cmp
pop
sub
int
push
xchg
lock
inc
add
adc
std
push
sub
add
iret
push
fdivrs
test
inc
xor
xor
mov
popa
inc
js
push
xchg
imul
fldenv
jp
mov
subl
rcrb
loopne
lcall
push
sti
orl
sub
stos
stc
sub
adc
and
imul
lahf
cmp
or
mov
and
ret
gs
cli
lea
adc
roll
sbb
add
mov
loop
loopne
push
pop
mov
hlt
push
scas
push
repnz
test
int3
rcl
push
dec
repz
hlt
jmp
fistpll
fdivrp
cmp
mov
push
and
xchg
mov
xor
pop
in
sub
enter
addr16
inc
and
ret
lods
push
cmc
push
add
outsl
mov
push
mov
xchg
pop
call
fsubl
adc
imul
adc
mov
mov
repz
out
jmp
cmp
sbb
or
cli
sbbl
or
adc
out
gs
imul
xchg
outsb
inc
xorb
sub
cli
xchg
ret
js
ret
sbb
repz
cmp
pop
or
jmp
mov
daa
andb
jo
sbb
dec
fsubrl
adc
and
sbbl
fld
ljmp
notb
cmp
cmpsl
aas
mov
pop
ja
mov
and
add
adc
int3
daa
ja
int3
pop
into
adc
stos
pop
sub
adc
mov
push
cltd
xlat
divb
xchg
aaa
mov
lret
jg
dec
mov
fstps
mov
cmp
dec
ficoml
aad
aad
call
jge
cmp
lea
push
stos
fidivrs
cmpsb
pop
sarl
sbb
rolb
pushf
popf
es
imul
dec
scas
add
mov
pop
or
jle
sar
repnz
jecxz
fnsave
call
pop
fwait
xor
mov
les
test
or
xor
xchg
adc
andl
add
leave
push
sub
pop
and
rcrb
add
jns
bound
sbb
xchg
outsl
cmp
cmp
insl
out
xor
int3
cmpsl
xor
xchg
push
push
dec
and
xchg
ret
psubd
xchg
pop
jne
movsb
pop
es
stc
in
mov
xchg
fsubl
dec
fwait
in
mov
mov
fidivs
jns
push
mov
ret
sbb
add
push
enter
pusha
scas
call
std
in
mov
gs
jne
das
lcall
aam
inc
movsl
shl
mov
xor
movsl
testb
mov
jnp
pop
cmp
sbb
nop
shll
inc
push
aam
sub
xchg
mov
xor
mov
daa
push
inc
nop
hlt
fdivrs
adc
mov
inc
jae
jle
pop
push
gs
and
adc
int3
ljmp
mov
cmpsl
popf
lea
sarb
adc
jns
lret
js
icebp
cs
sub
inc
dec
pop
jno
xchg
adc
pop
mov
fs
push
adc
mov
sbb
out
subl
dec
pop
lods
pop
adc
cmpb
mov
pop
das
adc
push
cmp
inc
inc
and
dec
jne
mov
pop
mov
inc
aas
in
mov
ss
sbb
dec
test
and
sbb
repz
adcl
aad
repnz
insl
mov
out
dec
lret
and
mov
or
inc
ja
adc
jnp
data16
out
pop
mov
xchg
xor
mov
lods
icebp
enter
cmpb
xchg
stos
inc
mov
xchg
std
and
loope
out
xchg
mov
insl
stc
insl
bound
cli
cmp
adc
bound
or
jge
adc
add
lea
outsl
jmp
push
xor
jbe
insb
and
mov
dec
pop
popf
jge
stc
push
sarl
mov
xchg
push
jg
sbb
pop
inc
aad
fisubs
imul
dec
add
sbb
les
in
cmp
je
push
xor
in
in
les
jne
test
out
cmp
push
pop
pop
sbb
cmp
xor
movsb
push
dec
or
xchg
sar
dec
push
fldenv
in
sahf
sbb
adc
cmp
repnz
jg
mov
mov
nop
outsb
ds
enter
das
or
lds
cmp
mov
stos
ljmp
jb
mov
sbb
pop
addr16
icebp
fcoms
jne
stc
mov
sahf
fisttpll
jo
lods
cwtl
std
test
cld
dec
sub
icebp
jecxz
out
mov
or
lods
pop
and
pminsw
xor
mov
sub
stos
mov
outsb
and
ror
xor
imul
adc
test
mov
fistl
inc
inc
mov
loop
mov
leave
adc
mov
mov
mov
out
das
dec
jecxz
repnz
outsl
in
mov
enter
add
fs
mov
ss
rcr
mov
cltd
dec
loope
or
negb
push
shlb
stc
mov
lcall
shrl
nop
jmp
adc
das
das
cltd
outsb
pop
mov
hlt
lds
pop
mov
push
push
xlat
push
or
lea
adc
push
xchg
cmp
and
inc
inc
dec
sbb
sbb
jnp
and
add
addr16
scas
es
and
cld
filds
sbb
fistl
jns
xorb
mov
pop
jb
gs
adc
data16
mov
daa
mov
mov
xor
and
sti
push
insb
jb
fs
pop
xor
clc
dec
jmp
jns
out
mov
push
int3
lods
in
mov
mull
hlt
mov
dec
xor
cmp
push
add
cmc
push
in
jae
mov
mov
jae
pop
xchg
inc
adc
push
ljmp
or
daa
mov
fstps
rol
mov
and
outsb
sbb
dec
xchg
lcall
ja
leave
imul
or
jnp
inc
rcrb
jge
mov
jb
xlat
fidivrs
icebp
mov
or
xorl
das
repnz
and
mov
mov
sbb
inc
idivl
ficoml
push
ljmp
pop
push
sub
daa
mov
and
dec
pop
popf
std
mul
icebp
aad
ss
andb
imul
pop
mov
lahf
mov
test
inc
xchg
add
imul
mov
test
cli
xor
mov
mov
fsubs
jl
int
cld
inc
adc
addl
int
jns
cltd
fcompp
mov
mov
pushf
fucom
xchg
enter
mov
adc
in
cmp
inc
outsl
sub
sub
das
cwtl
pop
cld
cli
nop
and
divb
jne
cmc
ja
xor
or
out
clc
and
jl
dec
jge
cmpsb
push
ss
lcall
adc
mov
adc
jae
cmp
push
add
push
cld
mov
popa
fdivrs
mov
addr16
insb
test
add
ficoml
mov
add
rolb
cli
or
add
jbe
lret
mov
cmpsb
pop
bound
repnz
inc
adc
pushf
enter
dec
and
jl
fdivrl
aaa
dec
mov
je
in
loope
mov
aas
add
loope
repnz
leave
jnp
cwtl
dec
pop
pop
insl
shlb
popa
xchg
adc
shrb
xchg
jmp
mov
dec
ja
adc
lea
stc
aas
std
inc
arpl
das
rcrl
pop
add
xchg
adc
dec
or
fwait
inc
mov
or
notl
pop
fsubp
idiv
orb
leave
mov
jns
mov
add
and
in
add
shll
lea
xlat
cmp
pop
incb
or
cmpsb
sbb
or
cli
in
in
and
sub
xchg
push
jb
js
push
std
jecxz
sub
push
lahf
mov
clc
mov
cmpsb
inc
orl
ror
cwtl
sub
mov
subb
fistpll
push
ds
dec
mov
push
ds
add
ja
cmp
jmp
adc
sbb
nop
mov
clc
jns
ss
sbb
fdivs
pusha
sti
aam
jecxz
sbb
sarb
dec
pushf
outsl
sub
rcll
or
or
jns
ljmp
cmp
fsubl
inc
push
dec
in
mov
int
mov
mov
fnstcw
lods
scas
push
and
sbb
shl
mov
sarb
and
sahf
divb
sub
adc
inc
jge
xchg
ja
mov
dec
js
ds
xor
shlb
jae
ss
pop
loopne
mov
ss
stos
das
into
or
add
inc
test
out
roll
xchg
add
insb
push
mov
mov
into
cmp
scas
mov
rclb
sbb
xlat
ret
mov
dec
and
inc
mov
testb
sbb
iret
clc
loopne
mov
cmp
test
xor
add
and
add
jno
ja
cmpsl
ret
add
cli
mov
push
jecxz
sarl
push
and
stos
enter
pop
aam
add
pop
test
xchg
jle
mov
jecxz
incb
pusha
sbb
loope
and
cwtl
test
jnp
cmc
je
repnz
sbb
lods
pusha
adc
cmp
enter
mov
lods
lcall
idiv
mov
push
rclb
or
cmp
jnp
test
out
mov
decl
movsl
fcoml
and
jae
adc
notb
sub
dec
ret
push
dec
jmp
or
lds
xlat
mov
jns
lahf
xor
aad
mov
jl
ljmp
sti
jg
mov
shufps
lea
cmp
icebp
jae
lock
jle
sub
aaa
pop
fcomps
ss
ficomps
andl
pop
ficoms
push
sub
pop
dec
jg
jge
cmc
or
lds
pop
cmpsl
xchg
out
hlt
les
xchg
test
mov
pop
in
out
sti
push
pop
je
mov
pop
push
jno
push
jg
dec
adc
pop
lcall
dec
mov
jo
mov
rcr
stc
outsb
sub
iret
xor
popa
cmp
mov
sub
pop
ljmp
push
aad
jmp
or
pop
subb
arpl
sbb
imul
sbb
sbbl
cli
out
in
pop
and
sub
test
jo
mov
mov
sub
lahf
fmuls
notb
scas
sti
jmp
jecxz
pop
push
andb
mov
fadds
movsb
push
pop
dec
cmp
push
pop
inc
pop
mov
sub
and
shrb
mov
stc
popa
adc
lock
mov
jns
pop
xchg
mov
popf
loope
xor
sub
aas
jo
mov
testb
pushf
js
mov
pop
adc
sbb
jne
stos
sahf
jns
inc
loope
adcb
jne
lret
out
inc
jg
in
push
adc
pop
pop
in
inc
sub
and
mov
mov
movsl
cmpsl
pushf
dec
sbb
mov
cmp
jmp
cmc
and
mov
jp
imul
nop
fstpl
jnp
mov
ljmp
lock
imul
test
mov
inc
inc
popa
cmp
lock
nop
xchg
pop
mov
repnz
dec
push
lock
jns
pop
xchg
leave
clc
mov
cmpsb
outsb
xor
cmp
sbb
mov
mov
inc
std
sbb
in
mov
add
adc
je
lock
mov
loope
cs
mov
xchg
das
cmpsb
mov
out
stc
lock
pop
sub
aad
pop
in
aas
pop
rcr
push
pop
stos
sub
sbbl
mov
enter
xchg
and
dec
xchg
cmp
push
mov
pop
dec
mov
leave
in
shl
mov
aad
cmpsl
push
dec
push
xor
mov
push
fstpl
mov
in
jae
mov
pop
ficoml
jae
xchg
pop
adc
pop
call
xchg
cmp
addb
mov
jae
xor
addb
std
call
add
fucomi
dec
lds
inc
outsb
push
cmp
jg
and
add
dec
adc
lret
fadds
xchg
ret
repz
mov
push
xchg
rorb
xor
mov
add
insl
cmp
inc
pop
jne
dec
dec
stos
adc
push
xchg
insl
out
jmp
loop
imul
sub
add
lret
cld
fwait
jo
xor
mov
xor
xchg
sbb
fwait
push
push
shr
dec
push
mov
push
cld
dec
and
xchg
push
sbb
push
xor
push
sahf
inc
pusha
fsubl
imul
inc
dec
sub
test
xlat
out
subl
xchg
adc
and
mov
shrl
mov
and
pop
daa
add
xchg
scas
sbb
push
test
in
sub
cmp
jmp
repnz
fists
or
adc
mov
push
xchg
xchg
mov
and
sbb
sbb
leave
jge
xor
int
mov
testl
sbb
cmp
and
or
mov
xchg
xor
mov
sub
pop
ret
les
loopne
add
loopne
inc
cmpb
jb
inc
and
out
gs
test
in
xor
or
lcall
or
insl
jge
movb
pop
insl
jne
adc
mov
xchg
in
lods
sbb
rorl
xor
jmp
cmpsl
sub
data16
pop
push
shlb
adc
sub
testl
push
int
xor
cli
std
loope
jge
sub
xlat
aaa
loop
fisubl
pop
jecxz
mov
xlat
cmp
shl
xchg
lahf
stos
int
sub
mov
mov
jmp
pop
popf
xor
hlt
mov
cmp
call
roll
sbb
jg
mov
mov
test
sub
inc
sbb
mov
lods
xor
jnp
lea
cmovl
insb
sbb
out
mov
xor
pop
aas
xor
pop
shll
mov
outsl
xchg
mov
mov
roll
adc
lock
into
lcall
and
jmp
push
shrb
and
jno
addr16
stos
add
outsl
push
ss
shr
popf
pop
jno
push
adc
pop
insl
shlb
ds
dec
sbb
lret
clc
aam
aam
adcb
lds
jg
ret
xlat
xchg
add
jae
xchg
in
cli
xchg
sahf
ljmp
idiv
mov
repnz
bound
push
icebp
in
imul
pop
push
out
sbb
mov
lods
xchg
cwtl
lahf
dec
push
ljmp
fisubrl
or
repz
dec
lret
shrb
test
push
loopne
mov
push
mov
xchg
push
in
mov
mov
sbb
jg
pusha
xchg
mov
insl
jmp
mov
cld
or
and
jo
std
mov
jg
ds
iret
int
add
fwait
and
loop
les
enter
jo
dec
sub
sarb
mov
add
xchg
dec
mov
ret
mov
mov
lea
cmp
std
mov
and
ja
int3
dec
js
pusha
aam
js
stos
pop
xor
xor
aam
cwtl
adc
into
and
jno
in
into
xor
pop
jmp
jmp
roll
xor
lcall
jmp
mov
pop
inc
test
das
push
loope
jnp
js
outsb
int
adc
les
sub
push
nop/reserved
roll
sti
push
sahf
pop
push
es
sub
push
inc
inc
jmp
cmp
and
popf
sbb
repnz
mov
int3
and
repz
or
stos
add
repnz
repnz
ljmp
inc
cld
data16
in
jmp
es
jnp
and
insb
sahf
or
adc
jmp
sub
scas
jmp
pop
fdivrs
in
loopne
jl
cmp
adc
dec
dec
inc
fs
sbb
add
and
aam
push
jp
fmul
jmp
mov
into
xchg
xchg
out
mov
or
call
mov
mov
jg
es
jne
or
sub
push
add
out
data16
leave
nop
pop
into
dec
pop
inc
psubb
das
jne
or
pop
ljmp
outsl
negb
mov
jmp
dec
in
mov
pop
mov
int
loope
out
rorb
out
mov
sub
ss
inc
insl
mov
or
out
xabort
mov
mov
mov
stc
test
xor
mov
push
lret
sub
daa
dec
out
fwait
or
fstl
mov
enter
jbe
aaa
lcall
xor
cmp
xchg
mov
aam
xor
popf
jmp
sub
mov
jno
ds
lods
pushf
sbb
or
test
stos
pusha
icebp
xor
jg
jecxz
push
pop
fists
test
dec
nop
inc
scas
push
adc
or
mov
or
dec
test
sub
mov
cmp
dec
push
or
jge
jnp
jno
jns
pop
lcall
xor
mov
xchg
dec
fucom
pop
shrb
cmpl
lahf
sahf
cltd
mov
dec
fstpl
outsb
popa
mov
push
unpckhps
inc
jg
iret
inc
loop
fwait
shll
dec
out
adc
dec
pushf
pushf
jb
rcl
and
js
pop
pop
ja
and
fldcw
and
and
adc
push
icebp
inc
ret
adc
xor
push
xlat
cmpsb
int3
mov
mov
add
xor
cwtl
test
sub
mov
xor
mov
aaa
xchg
pop
ljmp
ss
popf
js
mov
div
rcrb
mov
cmp
dec
xor
lcall
xchg
inc
cli
mov
ficomps
loope
outsl
sub
shll
lret
rcl
sahf
shll
mov
loop
xchg
mov
jne
iret
cmp
dec
lock
add
adc
sub
addr16
aad
imul
into
adc
add
add
inc
or
test
push
mov
pusha
movsb
add
adc
stc
xlat
adc
inc
data16
mov
andb
xchg
dec
jg
sbbl
clc
push
jecxz
dec
or
inc
lret
cmc
andb
push
or
cwtl
fcom
mov
icebp
lea
test
cs
fdivs
loope
xchg
jno
cmp
mov
pop
push
adc
sub
ret
cmp
cmp
mov
sbb
xor
pop
dec
push
nop
stos
and
adc
push
xchg
sbb
mov
les
inc
pop
mov
mov
push
rcrl
pushf
addr16
fdivs
or
and
rolb
push
jns
dec
or
sbb
mov
ret
scas
xchg
popa
inc
stos
cmp
push
std
gs
nop
jmp
mov
and
aaa
push
mov
adc
rorb
mov
mov
stc
sbb
or
ss
jnp
int3
inc
mov
dec
fdiv
cmp
pushw
int
and
fwait
push
enter
push
sbb
xorl
inc
data16
pop
loop
std
or
movb
xchg
lret
sub
inc
adc
inc
jne
sbbl
into
jne
lods
rclb
xor
les
pop
stc
hlt
stc
push
push
sbb
je
aam
loopne
jecxz
adc
adc
dec
and
rclb
xchg
sbb
sahf
out
pop
or
xchg
sub
popa
jo
mov
call
jecxz
mov
xor
and
adc
adc
fwait
push
jge
push
fildl
in
mov
push
xor
push
mov
and
popa
repz
adc
cld
mov
jns
lock
pop
loope
ds
mov
mov
bound
xchg
stc
sti
add
cmp
sbb
cmp
stc
inc
or
dec
xorl
cltd
mov
lret
pop
movsl
in
xchg
aam
lock
pop
shl
popa
fiaddl
repz
fbld
shrl
xchg
jnp
sbb
in
lock
andb
notl
inc
imul
jl
cmp
sub
adc
cmc
out
fmull
xchg
repnz
mov
sbb
pop
pop
mov
xchg
cmp
in
inc
sbb
lret
add
int3
sbb
pop
xchg
pusha
mov
xchg
rcl
rcrb
popf
cmp
pop
popf
inc
jmp
push
sarl
dec
dec
xchg
ds
lea
pop
test
xor
data16
mov
icebp
loop
push
sbb
jns
dec
roll
ljmp
inc
es
nop
into
jg
sub
sbb
dec
dec
addr16
mov
fildll
dec
cwtl
inc
mov
pop
repnz
and
call
mov
push
fistpl
fsubrs
sbb
pop
add
pop
cmp
push
stc
pop
pop
inc
push
add
test
ljmp
cmp
push
lret
xchg
mov
mov
outsl
shrl
xor
pop
shrb
test
and
add
add
fs
popa
lock
jne
sbb
xchg
add
or
sub
mov
lods
jb
shlb
mov
test
jno
add
cmp
out
push
daa
xchg
stos
xacquire
sbb
ret
andl
je
nop
pop
ja
into
xlat
ffree
ja
add
outsb
jg
jp
loopne
icebp
and
sbb
inc
loop
inc
fdivrp
out
push
xchg
dec
outsb
mov
inc
lret
push
lret
jbe
and
and
in
sbb
pushf
hlt
rorb
repnz
je
push
dec
jmp
dec
xor
dec
pushf
movsb
mov
xor
cmpsl
repz
sbb
clc
or
or
out
rol
inc
dec
dec
inc
inc
jecxz
aas
imul
xchg
mov
mov
insb
daa
loope
jecxz
xor
cmp
js
and
aaa
aam
add
outsb
shr
push
stos
pop
sbb
jns
mov
dec
xor
rorb
xor
outsb
xchg
into
push
lahf
cwtl
sbb
adc
pop
movsl
xor
cmp
clc
je
cltd
lret
out
test
mul
xsha256
cmpsb
das
pop
adc
movmskps
add
cltd
call
add
dec
ss
jae
orb
aad
dec
cs
rorl
add
push
xchg
xchg
jmp
les
push
lret
rcrl
into
in
jno
push
xchg
xchg
ss
popf
idiv
sbb
push
push
or
mov
pop
popf
incl
pop
test
inc
nop
or
mov
sbb
mov
add
nop
adc
mov
pop
xchg
adc
adc
jg
jb
rcr
out
and
mov
xchg
mov
lret
lods
jns
and
mov
bound
mov
xor
fdivrs
adc
xchg
dec
push
cmp
xor
pop
xchg
sbb
in
test
cmpsl
rcll
pop
outsb
stos
lret
jb
arpl
adc
out
pusha
lock
scas
mov
fisttpll
jmp
sub
jo
outsl
fs
jp
lea
sub
mov
or
xchg
sub
mov
bound
adc
sub
pop
pop
movsb
lcall
jo
xchg
sub
xchg
xchg
inc
sub
adc
shlb
jno
orl
pop
lcall
fistps
gs
out
stos
js
insb
movsb
push
sub
ljmp
fsubr
mov
sub
add
push
and
xor
add
mov
mov
or
sub
addl
xlat
pushf
cmp
sbb
or
into
out
push
test
mov
and
rcll
in
xor
aam
test
and
sub
xor
cld
add
pop
jns
ljmp
call
loope
cmp
int3
xor
xor
jnp
inc
mov
dec
or
test
nop
cmp
lds
inc
test
sub
aam
mov
and
int3
mov
inc
sbb
add
add
orl
fstp
out
lcall
jmp
lcall
pusha
jo
push
jle
jecxz
pusha
bound
and
dec
scas
rcl
stc
lods
and
or
pop
loopne
xor
sti
sbbb
mov
push
and
test
stc
addb
ds
pop
outsb
sbb
test
jle
xor
xor
pop
mov
or
jg
pop
mov
gs
jnp
mov
lods
jbe
inc
sub
sti
xchg
outsb
dec
lret
imul
outsb
int
stos
inc
add
push
inc
or
lea
push
ret
pop
or
gs
dec
dec
fwait
test
sbb
adc
rorl
inc
add
jnp
roll
adc
pop
cmc
jge
movsl
jne
lods
sbb
mov
mov
jne
jnp
inc
jne
xchg
xchg
and
xchg
mov
dec
rol
inc
fisttps
add
andb
cmp
xor
das
aaa
and
into
inc
mov
mov
repz
rcll
mov
mov
decb
cmp
out
int
inc
mov
dec
jmp
ds
xchg
cmp
inc
test
das
jbe
les
fsubl
inc
inc
in
popf
push
enter
pop
ret
das
add
jecxz
mov
dec
loop
shl
jg
inc
jmp
lahf
push
inc
js
data16
shlb
bound
lcall
negl
int3
cmp
push
in
sub
adc
mov
fcmovb
cmp
sbb
sub
jne
mov
sub
loope
mov
pop
push
mov
mov
jbe
push
push
popa
pushf
xchg
pop
fimull
mov
and
ljmp
cmpsl
push
mov
and
sbb
out
add
out
jnp
std
mov
cmpsb
faddp
inc
popl
leave
lods
inc
add
andl
in
lret
and
mov
outsb
and
push
lea
iret
out
push
aas
fistpll
mov
lds
imul
push
repz
push
cmp
mov
rcrl
rol
in
repz
ljmp
imul
repz
sbb
mov
aas
inc
call
jg
enter
xchg
rcr
cmp
into
or
sub
jle
push
test
mov
mov
lods
jmp
inc
das
movsl
push
std
int
and
mov
nop
push
push
cmp
mov
andw
iret
mov
dec
aad
pop
imul
ret
push
fimuls
ds
lea
into
aad
fstpt
push
rclb
dec
push
mov
xorl
fs
xchg
out
jbe
adc
pop
lret
lahf
popa
scas
sub
lahf
mov
pop
pop
lcall
stos
push
cltd
es
call
gs
push
push
movsl
imul
and
fstpt
mov
lock
sbb
and
mov
inc
and
out
pop
out
push
jno
xor
testl
lcall
xor
or
pop
adc
pop
addb
into
sub
test
in
pop
imul
stos
cmp
add
imul
out
adc
push
lods
push
lahf
in
hlt
out
popl
jnp
test
mov
or
out
arpl
xchg
stos
xor
inc
pusha
ljmp
addr16
jecxz
loope
fwait
aad
lds
cmp
lret
hlt
idivb
and
jo
imul
xor
ds
les
insb
and
int
insb
pop
lds
loope
call
insb
mov
xchg
and
fwait
inc
inc
gs
pop
adc
and
lods
mov
pop
xor
jl
sub
repnz
xchg
push
es
push
out
sbb
mov
dec
stc
fisubl
clc
fwait
out
cli
jge
lret
aad
dec
jno
cmp
pushl
fs
cmpsb
repnz
dec
stc
or
adc
add
push
or
xor
call
fisubs
and
lahf
test
jbe
mov
and
dec
mov
or
ds
adc
dec
mov
jnp
cmc
cmp
lods
dec
adc
jg
lret
lds
jecxz
cmp
rolb
xchg
jns
mov
mov
jge
dec
mov
imul
push
push
aam
cs
cmc
jle
add
ror
es
push
jmp
clc
dec
fiaddl
pop
xchg
mov
xchg
mov
mov
or
int
out
mov
xor
jecxz
cmpsb
sar
ret
dec
fwait
outsb
add
ds
mov
dec
jmp
push
sub
lret
movsl
cmpsl
mov
inc
xor
and
shlb
test
mov
in
jae
mov
rol
mov
call
pop
xor
mov
aaa
lret
idivl
mov
mov
aas
inc
xchg
and
sub
sub
insb
nop
mov
gs
pop
pop
andl
insb
neg
mov
imul
sarl
pop
dec
mov
push
xchg
jno
and
push
push
aaa
lea
pop
icebp
sbb
inc
xor
in
decb
cwtl
sbb
aas
ret
iret
pop
js
push
ja
add
adc
aas
pop
out
lds
xorl
movsl
and
sub
insl
sbb
loopne
dec
jmp
adcl
adc
pop
adc
sub
sahf
cmpl
repnz
cmp
mov
iret
lods
gs
movsb
aad
or
aaa
mov
xchg
pop
lock
cld
xor
dec
adc
inc
cmp
inc
or
dec
jo
adc
sub
ret
sub
add
mov
test
js
add
add
shrb
lret
dec
add
in
test
inc
mov
mov
mov
cwtl
fildl
nop
icebp
imul
daa
dec
dec
inc
fldenv
dec
mov
sub
dec
outsb
xchg
ljmp
adc
imul
subl
push
xor
repnz
push
leave
daa
roll
int3
int3
sub
xlat
sub
movsl
mov
dec
cmpsb
xchg
aas
adc
mov
in
in
push
fcmove
sbbb
lea
jae
cwtl
gs
jl
pop
iret
mov
push
mov
push
imul
jb
inc
mov
pop
xchg
sahf
mov
nop
pop
dec
xchg
aad
cld
cltd
inc
js
jns
std
xor
or
adc
test
jns
jle
mov
repnz
dec
ret
orl
xorb
imul
xchg
xchg
aas
mov
cltd
push
xchg
inc
fldcw
outsl
push
lea
cmp
xlat
stc
lods
les
cmc
test
adc
push
adcb
test
lea
leave
ret
xchg
mov
das
arpl
rcll
loop
add
scas
and
cmp
cld
jge
or
int3
scas
lret
mov
inc
cwtl
inc
stos
mov
sahf
jns
or
add
cli
jge
and
cmp
movsl
pop
test
outsl
mov
not
xchg
mov
sbb
add
fwait
aaa
pop
test
inc
mov
out
pop
jbe
sbbl
jae
inc
xchg
rorl
mov
add
je
pop
sub
imul
push
add
fcoml
mov
push
in
pop
cli
sub
mov
loope
sarb
dec
inc
push
js
push
sbb
das
jne
dec
sub
add
jbe
mov
stc
icebp
ficoml
shl
jbe
cmp
xchg
jb
movsl
pop
dec
inc
pop
daa
xor
xchg
cmpsl
stos
lea
imul
mov
cmp
xor
lahf
mov
cmpsl
das
sub
in
adc
ljmp
lock
aaa
sbb
mov
scas
jno
daa
aaa
shrl
test
test
jns
addl
fildl
jg
arpl
in
lcall
out
cmp
aaa
sub
insl
add
int
mov
cmp
imul
push
clc
sub
dec
cld
cmp
cmpsb
data16
inc
sahf
inc
imul
xor
xor
mov
lock
cld
scas
cli
mov
jle
pushf
jno
sub
sub
add
lret
sub
les
loopne
std
pop
dec
sbb
and
push
fmul
insl
mov
in
lds
pop
and
mov
iret
lods
add
out
mov
inc
rol
pop
push
mov
mov
shrl
sarb
mov
cld
fstps
or
ds
mov
dec
mov
fsubs
jl
pop
adc
aam
lret
inc
sbb
inc
and
mov
jbe
lock
mov
mov
aad
iret
and
sbb
xchg
lret
aam
lock
pop
insl
daa
or
data16
dec
mov
xor
jnp
shll
mov
push
rolb
inc
mov
jns
call
shrb
jne
sub
jae
js
lods
or
push
sbb
daa
mov
push
mov
in
mov
outsl
rolb
or
cld
dec
loopne
rclb
loop
add
es
cs
add
pop
aad
cmp
pop
mov
je
push
cmpsb
rol
stos
daa
out
cltd
es
pop
pop
call
or
lret
fcoms
negl
cmpsb
push
scas
lret
arpl
sahf
arpl
mov
out
leave
gs
and
xchg
shlb
pop
mov
mov
cli
xor
or
mull
jecxz
jecxz
aaa
jle
adc
push
cmp
lret
mov
std
in
mov
popa
or
or
cpuid
andb
dec
icebp
rcrb
repz
loope
jecxz
outsb
les
jns
call
add
icebp
outsb
xchg
xor
xchg
jne
add
inc
mov
icebp
mov
jecxz
iret
rclb
out
in
xchg
or
bound
andl
jge
mov
out
and
xchg
int
ret
and
hlt
push
pop
dec
fsubl
sarb
popa
jl
and
xchg
sub
cmp
dec
pushf
mov
testb
sahf
mov
xchg
jne
aaa
mov
mov
mov
sti
jecxz
push
mov
sub
mov
sub
cwtl
pop
push
pop
js
inc
and
mov
js
cld
int
and
jl
xchg
sub
cmpsl
dec
aas
xor
jmp
ret
out
or
fldenv
andb
test
aaa
jo
lods
outsb
sarl
mov
dec
not
mov
cmp
fldt
iret
pop
nop
int
int3
add
xor
pop
test
movzbl
pop
shlb
lcall
adc
loopne
or
xchg
adc
pop
imull
jbe
mov
je
or
scas
pop
cltd
sub
dec
dec
and
xor
aaa
add
insl
mov
add
cmp
dec
and
int3
inc
in
repnz
xlat
loopne
mov
xchg
loopne
mov
loop
pop
sub
jbe
add
pop
rcrb
push
hlt
jno
jl
js
cmp
mov
push
cmp
cmpb
stos
mov
lods
jo
cmp
loope
mov
or
loopne
shl
jmp
imul
mov
sbb
inc
ja
and
test
dec
imul
sbb
aad
loope
out
jp
lea
dec
push
inc
out
jns
stos
xor
add
adc
pop
cmpsl
ret
dec
mov
subl
mov
lcall
add
xlat
sub
mov
mov
fcmovbe
dec
je
mov
cs
nop
int
fnstsw
pop
std
lods
sbb
dec
pop
lds
les
mov
sub
jo
xchg
cmpsl
lock
dec
rol
mov
inc
pop
xor
aad
out
and
jmp
and
sub
lea
sarb
pop
pop
jl
popf
pop
or
bound
inc
idivb
fmull
inc
out
fcmovb
insb
outsb
movsb
js
xchg
subl
mov
xor
addr16
or
test
and
add
aas
mov
sbb
das
mov
std
sbb
push
dec
pop
in
shrb
lret
xchg
fisubs
push
pop
xchg
gs
arpl
stc
xor
cmp
mov
adc
cltd
gs
daa
mov
movb
ds
mov
setne
inc
mov
cmp
cmpb
in
bound
push
add
ret
jbe
icebp
push
cmp
push
pop
push
in
pop
inc
and
pop
pop
mov
cwtl
pushf
mov
or
push
xchg
dec
pop
mov
mov
push
imul
mov
mov
stos
pop
popa
jns
shr
dec
into
mov
cmp
mov
add
inc
mov
sbb
or
jl
lods
sub
and
xor
dec
dec
movsl
sub
das
adc
imul
mov
call
jmp
das
push
push
xlat
and
pop
dec
push
pop
cmc
fwait
sbb
sahf
enter
fcompl
sahf
cmc
inc
push
loop
es
xchg
sub
mov
lahf
aad
mov
arpl
pushf
fidivs
stos
out
shr
lds
sub
mov
cltd
pop
pop
lods
in
xchg
into
adc
mov
pushf
xor
add
xor
jns
arpl
xlat
pop
sbb
add
and
sbb
inc
stos
xlat
push
out
clc
insl
loop
mov
int
mov
loopne
jb
and
sub
loop
cwtl
cmpsl
pop
adc
sub
lcall
out
or
add
inc
lahf
data16
into
mov
jo
xor
fcompl
arpl
push
imul
mov
arpl
aaa
inc
scas
movb
jecxz
add
popf
mov
pop
mov
arpl
sahf
push
xlat
and
mov
js
jns
mov
cmp
jns
sbb
pop
nop
lea
stos
jo
in
shll
lahf
loopne
iret
cmp
xor
subl
scas
xlat
fdivl
jnp
lcall
dec
cli
cmpsb
mov
jb
cli
or
ret
enter
xor
dec
or
bswap
bound
arpl
imul
and
in
clc
mov
arpl
scas
mov
push
xchg
xor
mov
jns
leave
mov
leave
mov
cmpsb
fsubp
xchg
ja
xchg
shlb
or
sbbb
mov
xchg
insl
loopne
mov
sahf
push
dec
jmp
push
outsb
mov
cmp
test
jmp
sub
xchg
sahf
mov
rcrb
and
addr16
or
sbb
or
mov
pushf
daa
daa
push
mov
fucom
ljmp
mov
xchg
shl
out
lea
loopne
gs
dec
mov
and
rclb
sbb
xchg
add
jo
lea
mov
outsl
push
mov
cmp
sub
in
fldenv
insb
xor
fdivrp
push
lods
imul
or
xor
push
shr
or
xchg
loop
fucom
cmpsb
xchg
imul
push
jo
jl
fcompl
loopne
ja
mov
clc
and
sub
push
push
add
xor
dec
push
sbb
push
cmp
jl
pop
xor
pop
movb
mov
pop
jne
sbb
out
mov
rcrb
ror
mulb
lods
mov
mov
mov
test
xchg
sub
push
repnz
fs
fwait
lock
stc
arpl
xor
in
xor
dec
imul
loop
shr
lock
insb
fdivs
push
mov
pop
lods
nop
js
and
mov
jo
hlt
add
sbb
pop
dec
xchg
add
stc
arpl
push
push
lock
ja
inc
lods
jle
xor
sub
push
jmp
faddl
mov
jmp
imul
and
pop
div
xor
popa
add
mov
cmp
sub
in
jbe
ret
xchg
add
push
pop
sti
imul
mov
in
in
xchg
mov
pop
shlb
sbb
out
sbb
popa
aad
repz
bnd
imul
sbb
xlat
xchg
sbb
hlt
into
pop
or
fadds
mov
lret
and
fisubs
push
jbe
jge
rorb
in
push
cmp
pop
hlt
add
std
mov
enter
lea
sbb
add
push
pushl
pop
scas
pop
adc
jge
scas
pop
xor
outsb
adc
subb
dec
mov
nop
sahf
loopne
adc
mov
pop
enter
xchg
and
pop
dec
loop
arpl
aam
inc
into
add
movsb
jnp
mov
in
test
pop
and
push
lea
movsl
adc
mov
cmp
shrb
test
push
ret
inc
dec
or
iret
fcomip
jns
add
mov
push
js
rcrb
sbb
push
xchg
daa
jmp
es
and
movsb
nop
push
int
fldcw
adc
movsb
mov
mov
sbb
cmp
sub
fsubrs
fwait
inc
scas
aaa
mov
popf
inc
add
add
fimuls
inc
or
inc
inc
mov
jp
sahf
cmp
arpl
push
mov
push
rcr
inc
std
pop
lods
ret
mov
out
pop
push
loope
insl
sub
ret
jns
scas
push
dec
outsl
add
mov
subb
mov
inc
push
movsl
iret
xor
xchg
ret
ret
scas
push
sbb
pop
jle
xchg
int
sti
add
xchg
pop
sub
sarb
mov
pop
in
lea
push
nop
stos
pop
cli
xchg
mov
out
inc
push
arpl
push
aas
shrb
lods
imul
roll
or
hlt
je
adc
int3
push
mov
push
mov
rcrb
jbe
pop
mov
mov
pop
lock
imul
xor
push
popa
pop
imul
outsb
xchg
daa
adc
je
sub
push
sbb
aad
xchg
mov
outsl
pop
enter
push
and
xchg
mov
cwtl
jp
popa
shll
decb
and
add
mov
aam
mov
jecxz
pop
sbb
or
jecxz
dec
cltd
and
and
dec
pop
fidivrl
out
xor
nop
idivb
cs
push
mov
insb
popf
mov
mov
jge
pop
adc
xor
jns
cmp
fdiv
sbb
scas
scas
aad
sub
cld
jecxz
fistl
push
das
outsl
xchg
data16
aas
popa
xlat
jbe
out
push
jp
ret
test
jg
sub
jno
aas
icebp
ds
inc
mov
push
cld
push
mov
push
in
fistl
xchg
jno
or
and
xchg
shrb
sbb
pushf
leave
fdivrl
mov
imul
loopne
lock
loop
jp
outsl
sbb
mov
ja
mov
sti
negb
mov
cwtl
push
xchg
cmp
sub
xchg
sbb
mov
add
pop
pop
cmp
lahf
pop
ljmp
xchg
gs
mov
icebp
pusha
mov
dec
int
dec
add
ret
fucom
push
cmp
push
ds
jecxz
cld
xor
jns
mov
in
out
js
cmp
lods
mov
cld
pop
mov
inc
je
inc
or
les
push
insl
adc
outsl
lret
lcall
in
mov
mov
dec
out
or
fimull
jecxz
testb
xor
add
into
mov
sub
mov
add
inc
bound
rcr
jns
push
and
mov
rcrw
or
je
sahf
lret
scas
sub
push
cmp
lahf
sub
jle
sbb
jb
lods
sub
mov
mov
orl
and
inc
mov
cmp
imul
inc
fisttpll
outsb
movsl
sub
sub
jge
mov
xchg
leave
jnp
lock
scas
mov
stos
leave
add
jg
cmpsb
pop
mov
sub
loope
in
hlt
inc
sbb
sbb
das
dec
sahf
clc
mov
mov
mov
lock
fwait
rcll
sahf
mov
mov
aaa
sbb
sbb
cltd
jge
aad
add
daa
test
daa
enter
cwtl
fbstp
shll
rcrb
pop
sub
call
movsb
test
cmp
in
xchg
incb
outsl
jecxz
mov
and
fwait
mov
sarl
fwait
sub
adc
adc
mov
pushf
outsl
insl
cmp
sahf
frstor
divb
cmc
mov
dec
bound
sub
xor
mov
sub
or
lcall
mov
testb
cmc
sub
push
jb
dec
gs
aam
xor
enter
pop
cmpsb
or
aam
cli
fistps
cli
imul
jp
jmp
and
pop
mov
push
jns
jns
cmp
sub
iret
cmc
in
xchg
inc
dec
into
idivl
inc
mov
gs
adc
loopne
stos
mov
jb
js
cld
add
sub
jnp
add
fdivl
insb
mov
push
sub
inc
inc
fistpll
xchg
jmp
mov
lahf
das
add
inc
pop
imul
and
cmp
sub
and
mov
bound
jmp
add
out
sub
cltd
sbb
ret
mov
dec
or
imul
stos
push
mov
pop
das
rcrb
sti
and
adc
cld
mov
pop
and
jg
mov
xor
jg
rorl
sbb
in
or
add
sbbl
and
dec
and
push
cmp
dec
sbb
or
xor
test
test
or
inc
lahf
pop
test
mov
jmp
insb
mov
lea
arpl
loop
xchg
mov
pop
inc
xchg
mov
cmp
mov
inc
outsl
fisttpl
ja
inc
daa
bound
hlt
dec
addr16
xchg
cwtl
rcll
shl
int3
sbb
int3
shll
adc
lcall
xlat
movb
leave
sub
movl
xor
xor
push
in
fs
loope
repnz
mov
aam
sub
out
negb
jmp
mov
cmp
cmp
dec
aam
aad
mov
add
xor
popa
sub
clc
sub
fisttpll
jmp
push
es
xor
cs
jl
not
fwait
or
or
rclb
jne
fsubs
dec
insl
dec
fdivl
mov
xor
imulb
rolb
jl
jl
loopnew
or
iret
out
fidivrl
xlat
dec
enter
pop
popf
inc
mov
sbb
scas
cmc
negl
ljmp
push
xor
xchg
sbb
shll
jle
mov
ds
lds
dec
pop
cmpsl
call
loop
int
mov
clc
lods
fisttpl
sbb
fiaddl
dec
jle
lret
ljmp
shll
rcrb
sarl
iret
mov
loope
clc
xchg
mov
mov
inc
and
into
jns
jo
sub
movmskps
inc
rolb
jnp
fisubrs
pop
mulb
mov
or
sub
negb
clc
stos
inc
in
jmp
xor
xchg
mov
test
shl
inc
std
add
jbe
ss
adc
push
mov
push
faddl
mov
out
jmp
idiv
cmpsb
mov
pop
movsb
xchg
xor
pusha
sahf
sub
sbb
push
clc
mov
cld
scas
jg
inc
decl
mov
sahf
and
mov
incb
adc
lods
mov
mov
int3
jp
add
xchg
ja
mov
in
subl
push
inc
ljmp
clc
mov
xchg
pop
leave
xchg
mov
pusha
xlat
sub
push
idiv
xor
imul
push
jb
call
in
test
xor
mov
mov
sub
jp
ss
arpl
xor
xor
dec
dec
sub
mov
loopne
fwait
sahf
popf
xchg
jne
adc
dec
jmp
ljmp
ljmp
ret
push
lahf
push
inc
sbb
jl
pop
xchg
stos
and
faddl
lahf
mov
dec
xchg
cmp
dec
xchg
loop
out
or
popa
push
sub
sti
mull
jno
cld
lock
das
decb
sarb
ds
sahf
icebp
ss
dec
jno
cli
movsb
test
dec
xchg
int
or
rcrb
add
imul
test
insl
mov
push
pop
adc
mov
jbe
mov
dec
pop
xchg
addl
cltd
push
aaa
push
loop
call
and
and
push
lock
pop
pop
in
outsb
js
divb
idiv
test
frstor
cmp
cmp
xorl
in
adc
bound
lret
sbb
push
mov
aas
adc
mov
adc
lea
fs
adc
or
imul
pusha
jb
lods
push
xor
dec
mov
fimuls
jns
xor
jns
clc
movsb
xor
icebp
jmp
je
push
scas
push
inc
push
add
aam
pop
lret
push
push
data16
mov
ret
push
pop
xchg
xlat
mov
outsl
cmp
nop
cmc
or
xchg
pop
fcomi
fsts
xor
test
bound
sahf
mov
vmovhpd
xchg
cmp
jle
mov
mov
ljmp
cmc
movhps
lods
stos
xorl
push
push
ss
and
jne
loop
out
std
or
test
cmp
push
cwtl
fistpll
push
lret
jecxz
pop
add
inc
xchg
addl
sub
or
jnp
cmp
jecxz
scas
push
mov
sub
and
nop
sub
xor
jge
out
mov
mov
mov
mov
inc
push
push
movsb
xor
mov
movsb
cmpsb
in
loopne
xor
pushf
sbb
xchg
js
int3
and
push
ds
adc
push
add
dec
pop
push
jo
lock
aaa
les
cltd
xor
das
pop
data16
jo
mov
ror
mov
fistl
and
bound
movsb
loope
jge
arpl
and
and
mov
xchg
cs
sti
js
add
xchg
xchg
subb
scas
dec
cmp
mov
add
jmp
addr16
cmp
cltd
pop
xchg
mov
and
sbb
mov
out
rolb
jae
sahf
adc
dec
ret
jno
lock
mov
rorb
sti
cs
jae
xor
xchg
mov
sub
push
in
ret
addr16
test
and
pop
ja
sub
movl
add
jnp
xlat
rclb
fsin
popf
lahf
ljmp
gs
inc
movsl
or
int
lcall
inc
in
je
mov
push
jnp
xor
cmp
jp
fldcw
add
repnz
sub
mov
fmull
jns
xlat
pop
cmp
xchg
pop
mov
mov
jle
push
notb
mulb
js
in
mov
fnstsw
lcall
jle
out
lea
adc
push
divl
adc
fldcw
jo
jp
jle
xor
push
out
fcmovnb
pop
arpl
dec
es
jbe
sub
jg
adc
xchg
icebp
call
arpl
cwtl
sub
aaa
jne
mov
xor
sub
add
enter
lret
mov
addl
das
aad
jecxz
sub
cmp
pop
add
inc
out
scas
cmp
xor
in
or
movsl
dec
aam
mov
ret
cmpsb
jns
stos
jo
sbb
jge
dec
push
hlt
sarl
push
lock
les
pop
xor
mov
ds
xchg
push
push
inc
jmp
icebp
add
inc
lcall
cli
xchg
punpckhwd
test
imull
inc
xlat
je
mov
xor
xor
mov
push
gs
fdiv
imul
jge
mov
pusha
mov
fiadds
or
push
adc
adc
cmp
and
fadd
pop
mov
daa
mov
cmp
in
push
adc
pushf
adc
push
jle
xchg
clc
lcall
inc
mov
cmpsb
insb
mov
call
cmp
ss
mov
fidivs
inc
cmp
add
sbbl
pop
sbb
dec
pop
pop
jo
loopne
pop
and
data16
pusha
cld
pop
xchg
in
pop
adc
inc
lock
pop
dec
add
pushw
pop
sbb
and
add
sub
std
movsl
loop
xor
fs
aaa
pusha
int3
loope
add
mov
mov
pop
inc
mov
cltd
jbe
mov
fistpl
out
push
daa
xchg
outsl
data16
mov
mov
or
lods
fldl
movsl
inc
jae
xchg
dec
mov
adc
adc
inc
insb
adc
push
dec
pop
jo
add
mov
sbb
inc
lods
cmpsl
cmpsb
push
and
int3
or
rorb
xchg
mov
popa
lahf
and
popf
sbb
test
stos
inc
adc
push
cltd
into
xor
jmp
int3
ret
and
jnp
push
fcomps
fcomps
mov
dec
sub
mov
decl
addr16
mov
ret
jmp
sub
dec
or
dec
sti
sub
jge
pop
push
sahf
test
cli
sahf
stos
xor
imul
xor
jg
andl
pop
push
push
lock
dec
mov
add
or
imul
ret
cmpsl
repnz
js
lret
sbb
sub
in
xchg
movb
push
mov
imul
pop
mov
pop
scas
sub
and
mov
pop
cwtl
loop
repnz
pop
popf
lods
movsl
aaa
ret
iret
cmp
das
pop
inc
into
cltd
loope
in
add
roll
repnz
rcrb
or
cmp
dec
dec
dec
out
mov
jno
push
scas
and
in
lock
jle
jno
sarb
mov
call
fsub
or
or
rorl
jecxz
xchg
es
or
adc
xchg
adc
in
sub
push
jae
push
mov
fwait
jbe
cmp
pop
out
xchg
sbb
aaa
psrlq
add
cmpsb
push
sahf
clc
sub
popf
ret
adc
xor
and
mov
and
dec
ret
fidivl
bound
cmp
cmp
push
insb
pop
imul
xchg
push
pushf
adc
xchg
cmc
inc
mov
mov
push
sub
sub
out
fwait
xchg
notl
xor
pop
sahf
mov
outsl
xchg
gs
bound
cmp
out
or
aas
push
insb
push
pop
in
lahf
and
or
rcl
aad
xchg
sub
aad
bound
pop
add
inc
rcl
jbe
repz
ljmp
adc
pop
pusha
outsb
xchg
pop
test
cs
xor
mov
movb
insb
xor
or
xor
scas
sbb
mov
xchg
mov
push
clc
jb
and
mov
neg
loop
es
xor
dec
ret
fs
shr
or
cmpsb
xchg
scas
push
rcrb
sub
pop
add
push
mov
jp
pop
fidivl
xchg
xchg
sbb
mov
sti
decl
cmc
repz
jmp
out
mov
inc
xor
incl
in
jecxz
stc
cmp
cmp
xchg
adc
cmpsb
dec
xor
dec
in
or
lcall
stos
aaa
bound
test
lcall
jecxz
movsb
dec
inc
dec
lret
jge
out
scas
cltd
fimull
inc
repz
loop
xchg
jmp
push
out
or
or
jecxz
inc
mov
bound
adc
xor
cmp
mov
test
xor
pop
daa
push
lods
fbstp
icebp
add
test
inc
and
sar
fsubs
cmp
pop
xchg
cmp
push
inc
in
movsb
mov
out
repnz
push
pop
cs
push
mov
add
adc
popa
dec
aad
sbb
push
aas
jg
test
jb
inc
ljmp
icebp
fwait
cmc
es
aad
test
jp
inc
pop
cmp
ret
int
pop
fs
andl
cmpsl
sub
add
dec
pop
ret
outsl
rcl
xorb
lahf
dec
dec
dec
jne
jle
sub
addr16
jecxz
jae
fisubrs
jnp
mov
out
orl
jb
insb
ds
jmp
ds
js
push
pop
dec
push
insb
clc
mov
push
mov
and
leave
push
insl
inc
out
xchg
or
lcall
jle
adc
out
push
mov
cmp
mov
dec
xorl
imul
cmpsb
xlat
jmp
shll
xchg
sub
cltd
out
push
dec
scas
cld
data16
xchg
fidivl
jb
add
loope
and
stc
popa
xlat
sbb
add
icebp
push
xor
dec
cltd
outsl
fwait
clc
fbld
jecxz
dec
sbb
nop
jmp
mov
sbb
pushf
pop
push
sub
mov
rorl
add
cwtl
or
jns
bound
xchg
imul
pop
out
scas
pop
and
popf
and
mov
shrb
fbstp
cli
push
or
and
sbb
adcl
pop
cwtl
dec
sbb
xor
xorl
sbb
js
cmp
jne
out
mov
movsb
or
jle
sti
or
add
cwtl
call
ss
xchg
ror
fistpl
sub
sarb
or
dec
push
icebp
push
incb
push
lds
hlt
inc
cmp
pop
fdivrl
adc
jecxz
stos
dec
lea
jne
dec
pop
stc
push
push
lcall
shll
cmpsw
outsl
int3
ja
mov
sub
mov
insl
pusha
fldl
iret
fwait
mov
or
xor
fadd
int3
pop
xor
mov
inc
sub
in
jne
add
gs
jno
add
ljmp
push
hlt
or
jl
xor
repnz
adcl
rcl
xor
lret
push
adc
dec
xor
xor
test
cmp
scas
incb
dec
and
in
lret
fwait
je
xor
jb
sbb
addl
inc
jbe
add
mov
pop
inc
in
mov
rorl
pushf
push
sub
scas
xchg
pop
xchg
sbb
js
ret
mov
push
gs
adc
imul
jl
fwait
mov
mov
dec
or
cmpsl
int3
cmpsl
iret
in
xchg
scas
add
adc
jns
sbb
mov
orb
mov
pop
rol
mov
mov
and
gs
movsb
mov
scas
fs
jnp
ljmp
lock
mov
mov
out
dec
sti
or
js
sbb
enter
lock
test
in
mov
jns
mov
inc
loop
enter
xor
mov
insl
xor
mov
out
adc
push
sbb
scas
xchg
jns
jno
insb
sbb
jp
pop
cmc
adc
into
flds
adc
pop
mov
cmpsb
cmpsb
sbb
add
adc
jnp
into
ljmp
aam
cmp
scas
sbb
out
or
jns
popa
outsb
mov
iret
add
mov
cmp
pusha
imul
or
loopne
lea
push
mov
out
outsb
push
lea
xor
aam
stos
push
inc
fcoml
cltd
cwtl
in
jl
dec
sub
jae
mov
test
ljmp
cmp
arpl
mov
popa
push
dec
out
xchg
aaa
ja
pop
adc
jp
lcall
mov
jbe
xor
std
pop
adc
pop
shl
sbb
sarb
pushf
jnp
push
clc
idivb
bound
iret
dec
add
loopne
aas
lods
sub
inc
adc
imull
cmp
subl
nop
mov
fwait
inc
enter
test
mov
test
mov
add
mov
fwait
mov
orl
xchg
ljmp
ret
xchg
leave
ss
test
mov
and
dec
iret
jmp
fildll
xlat
into
lock
xor
out
pop
std
aam
std
addr16
outsl
idivb
fwait
lahf
hlt
dec
in
fsubrs
sbb
xchg
pop
sbb
mov
xchg
pop
rorl
fldl
enter
arpl
lods
out
or
jbe
mov
imul
cmc
lret
test
jg
mov
adc
fwait
xchg
sbb
popa
jns
ror
mov
push
data16
mov
cmp
push
ret
or
lods
xchg
push
sub
or
movb
lret
push
cltd
rcl
je
mov
sbb
adc
push
inc
or
push
mov
push
sub
fdiv
lods
repnz
in
iret
mov
xchg
push
mov
mov
mov
add
inc
shrb
dec
xchg
ljmp
cmp
cmpsl
jo
inc
xor
pushf
push
clc
sub
pop
int
gs
stc
call
mov
dec
sub
mov
andl
pop
iret
lods
xchg
int
sbbb
xor
int
nop
inc
add
cmp
jnp
fisubrs
mov
inc
outsb
cmp
pop
push
inc
xchg
mov
aas
xchg
ficoms
mov
mov
cs
xchg
mov
pop
dec
lcall
inc
or
mov
enter
sub
ds
cld
js
popf
jo
and
mov
nop
shrb
popf
push
jae
xchg
addr16
rcr
outsl
adc
inc
dec
cmc
xchg
xor
jg
sub
jne
jmp
or
sub
mov
scas
out
test
lret
pop
jmp
imul
enter
adc
mov
icebp
add
ja
or
in
adc
mov
sub
call
and
pop
push
hlt
sub
jb
cs
filds
fs
pop
imul
cltd
arpl
stos
out
jp
xchg
idivb
leave
sbb
add
jbe
push
es
cmpsl
test
addr16
xchg
adc
lds
jg
add
nop
cmp
pop
into
mov
aad
inc
bound
and
lahf
sbb
cmp
xchg
jp
adc
das
mov
sub
push
and
cmpsl
cmc
scas
mov
stos
aam
mov
int
and
rclb
movsl
movsb
fcmove
leave
and
xor
jno
pop
add
add
sar
lret
sahf
fwait
xor
jnp
ficoms
jo
cli
jp
cmpsl
pop
out
dec
repnz
into
dec
sti
or
pop
xchg
jmp
enter
jns
inc
aam
jp
xor
jge
gs
out
sub
inc
stc
cltd
cltd
push
pop
or
clc
xchg
mov
push
fs
shrl
push
sub
cwtl
mov
in
in
pop
push
pop
or
roll
sub
stc
jg
push
es
mov
or
movsb
mov
popf
push
xor
xchg
jae
rorb
push
xchg
mov
add
and
push
and
dec
dec
push
inc
outsl
popa
mov
mov
pop
out
xor
cwtl
stc
outsl
test
jge
jae
xchg
mov
xchg
jb
icebp
adc
pushl
add
add
push
add
add
jo
daa
mov
clc
inc
inc
xchg
insb
sbb
push
inc
in
add
adc
outsl
dec
mov
mov
ret
and
mov
mov
xor
pop
les
loop
subl
inc
xchg
jnp
xorl
ret
pop
push
xor
pop
addr16
rcr
loopne
clc
int
cmp
jo
add
test
xchg
int
xchg
stc
int
int
xorl
push
mov
shll
cmc
pop
and
ret
lods
outsb
fcmovnu
iret
int3
jb
dec
push
or
pop
mov
adc
xor
xchg
icebp
out
xchg
inc
xchg
fisttpll
adc
dec
xlat
push
mov
ljmp
inc
xor
add
push
inc
mov
pop
fcomps
mov
shlb
jge
add
push
faddl
bound
faddl
adc
mov
lock
fistps
dec
lcall
loope
lea
out
jp
mov
mov
jno
stc
inc
mov
jo
xchg
nopl
lods
sub
loop
push
inc
dec
push
into
push
fdivrl
cmpsl
or
mov
inc
dec
mov
hlt
jmp
mov
sub
mov
ljmp
jne
roll
or
push
sbb
icebp
xchg
sbb
daa
shr
add
sbb
sub
leave
outsl
jae,pt
mov
or
sbb
into
lret
cmpsl
and
out
je
iret
xchg
pop
xchg
push
xchg
or
push
or
mov
or
shlb
decl
int3
mov
xchg
bound
iret
jp
lods
dec
and
dec
push
or
out
sbb
scas
mov
lods
lea
push
or
icebp
mov
mov
push
pop
pop
mov
sbb
imul
sbb
pop
jg
inc
cwtl
or
mov
ds
pop
pop
pop
and
out
fstpt
es
in
inc
dec
in
imulb
in
pusha
lods
mov
pop
adc
pop
mov
mov
shrb
inc
mov
push
add
sahf
pop
inc
cmp
mov
cmp
mov
aam
in
or
xor
sbbb
rorb
sbb
call
test
jge
cmp
cmp
jmp
idiv
pop
and
lods
inc
fcmovnu
jmp
xlat
sub
outsl
adc
mov
loopne
mov
movsb
sub
out
dec
leave
mov
pusha
push
xchg
and
adc
lret
imul
stos
mov
sub
inc
push
sahf
cltd
lods
sbb
mov
pop
lods
mov
lds
lods
sbb
and
bound
incl
es
mov
movsl
out
sub
repnz
adc
sbb
xor
sbb
push
inc
movsb
lret
adc
das
aas
jno
mov
jg
fists
xchg
add
fmull
push
add
repnz
jmp
inc
and
out
cmp
pop
jb
inc
int3
push
cmp
dec
dec
clc
stc
outsl
cmp
in
add
jg
push
mov
xchg
push
ret
mov
add
mov
or
add
es
xchg
or
push
fcoms
cmovnp
scas
mov
out
in
dec
jb
or
pop
jl
mov
add
stos
xchg
xor
fs
lret
fsubrl
dec
sarb
in
xor
iret
xchg
xor
mov
add
mov
cmc
or
jne
fidivrs
pop
mov
xchg
inc
xchg
pop
pop
and
imul
sbb
adc
xchg
mov
xlat
pop
lret
sbb
jb
inc
lock
or
and
adc
sub
or
adc
xchg
mov
mov
inc
xor
push
out
inc
test
jnp
out
int
gs
adc
scas
sbb
test
ljmp
mov
stos
shlb
pop
repnz
sbb
stos
jge
inc
sub
adc
dec
xchg
ja
shll
mov
stos
xchg
or
jp
hlt
and
xchg
scas
mov
dec
sub
and
sbb
mov
dec
and
xchg
hlt
dec
fmulp
sarb
es
pop
movl
cmp
pushf
push
add
les
sbb
push
sbb
adc
mov
jmp
adc
imul
add
divb
xchg
or
and
sub
iret
push
push
inc
flds
movsb
imul
test
int
sub
xor
push
hlt
inc
sub
mov
insb
push
cltd
aad
xchg
mov
xchg
push
dec
xor
dec
pop
hlt
das
xchg
lret
insb
les
mov
lret
stc
je
mov
cmp
pop
aam
or
lock
adc
test
outsl
dec
inc
js
inc
and
scas
cmc
and
sbb
or
andl
push
inc
ret
in
jl
jl
fistpll
xchg
in
or
xorl
leave
xor
bound
in
adc
das
mov
scas
jp
fcompl
xchg
push
stos
out
jl
fldl
xor
fdiv
std
scas
or
mov
adc
sti
xor
inc
push
push
mov
lret
pop
adc
lods
stos
aad
ds
dec
add
gs
aam
adc
popl
dec
push
xchg
fmul
jae
push
popa
inc
push
clc
into
in
mov
inc
xchg
pop
call
nop
daa
add
mov
outsl
jmp
pop
cld
sbb
arpl
fwait
jle
shrl
outsl
fmuls
mov
mov
sub
fwait
dec
insb
cmp
push
hlt
js
sti
aas
mov
jae
cmpsl
in
adc
imul
dec
push
cli
aaa
mov
mov
jmp
pop
ss
ljmp
mov
pop
push
shll
loop
adc
call
movsb
mov
jg
xchg
inc
sub
adc
in
jno
mov
lods
outsb
sub
sub
xchg
cltd
sbb
cli
mov
mulps
fwait
add
pop
jnp
scas
in
mov
dec
stos
sahf
adc
dec
mov
sti
popa
out
scas
fldenv
add
cmp
ss
enter
imul
mov
aaa
pop
inc
and
push
add
lds
loope
and
cmp
shr
lods
xchg
xor
cmpsl
rcr
loopne
jg
and
nop
jp
lds
ljmp
sti
dec
sbb
pushf
jnp
sti
lock
icebp
insl
adc
sbb
in
std
outsl
pop
adc
inc
and
loope
imul
out
dec
dec
push
jl
sub
or
mov
loopne
rorb
jo
decl
xchg
in
shrb
divb
push
mov
xchg
sub
sub
cmp
mov
xchg
in
dec
icebp
xlat
sub
pop
adc
xchg
inc
push
xchg
nop
sbb
xor
int
stos
cmp
pushf
imul
push
adc
repz
cwtl
in
int3
in
push
push
sbb
sub
in
jmp
lods
xchg
and
sbb
adc
xor
mov
xchg
jnp
insb
pop
mov
cmp
pop
and
mov
shlb
xor
cmp
sub
jae
les
das
dec
mov
push
xor
arpl
es
jno
mov
or
scas
lahf
rcl
mov
outsl
mov
cld
sbbl
popa
mov
mov
call
mov
loopne
out
sahf
push
repz
pop
fiaddl
das
adc
movsl
mov
fistpl
and
fsubs
stos
out
mov
mov
cmc
shr
aaa
mov
arpl
or
add
push
shlb
frstor
rorl
mov
arpl
and
int3
int
imulb
outsl
shlb
adc
addb
push
sub
or
mov
cmpsb
push
push
cli
adc
lcall
mov
inc
rcl
rorl
insl
xchg
in
cmc
and
out
or
pop
push
pop
mov
adc
pop
aas
cwtl
inc
fwait
dec
jns
fdivrl
sub
mov
nop
sbb
push
pop
mov
popa
sti
dec
loop
pop
sbb
clc
faddl
je
idiv
adc
jns
push
loope
leave
inc
pop
or
add
pusha
nop
push
test
mov
adc
in
and
in
stc
inc
mov
inc
push
inc
mov
mov
int
icebp
push
mov
mov
adc
add
addr16
dec
stos
adc
mov
mov
mov
clc
lds
popa
mov
orb
rcrb
loop
movsl
push
sub
cwtl
pusha
cmc
dec
mov
cwtl
push
not
orb
call
xor
inc
ret
lret
rcrl
clc
xor
fsubrl
js
das
int
push
push
inc
xor
les
mov
inc
xchg
rclb
mov
lock
dec
rorl
arpl
xchg
mov
jp
mov
xor
xor
mov
inc
mov
add
fisttps
cmp
push
jnp
or
stos
mov
out
sbb
data16
outsb
cmp
fs
pop
inc
add
jge
sti
inc
int3
xlat
nop
jno
pop
nop
sbb
cli
fsubrs
jb
imul
out
movsb
mov
jl
insl
xchg
pop
and
sub
shr
sti
adc
mov
rclb
ds
mov
push
dec
add
test
mull
mov
sub
dec
sbb
andb
jmp
sbb
mov
dec
in
inc
jno
adc
or
dec
dec
push
push
push
push
loope
mov
mov
cwtl
enter
in
rcll
mov
cmp
push
cmp
xorl
insb
loop
jecxz
xchg
xchg
sbb
das
pop
dec
push
ficoml
sub
push
roll
lods
jns
aaa
imul
shl
cmp
lea
xor
mov
mov
insl
dec
jne
xchg
pop
mov
addr16
mov
sbb
sbb
inc
mov
sub
sbbl
lret
push
les
lahf
inc
je
sti
jle
mull
adc
out
sbb
cli
sub
adc
mov
mov
cli
xor
popf
cmc
xchg
cmp
jl
es
mov
or
out
jg
call
data16
lea
ja
cmp
into
iret
shll
pop
push
das
cltd
adc
aas
and
ljmp
pop
and
fldt
mov
sahf
insl
addr16
imul
shl
pop
in
or
lcall
rcr
jae
dec
adc
cmp
sarb
or
insb
shll
lcall
cltd
cltd
stos
andl
and
dec
add
xchg
push
cmpsl
hlt
jae
shl
adc
insb
arpl
shlb
inc
push
int
mov
dec
mov
mov
nop
js
pop
int
push
shrb
cld
sbb
xchg
cmc
and
roll
mov
mov
pop
push
divl
inc
call
fs
cld
mov
and
adc
adc
frstor
mov
out
arpl
shrb
mov
adc
pop
scas
xchg
into
pop
fcomi
insl
ret
addr16
jnp
pop
jg
push
dec
adc
fwait
add
fwait
add
shrb
inc
dec
sub
xorl
hlt
sbb
and
cltd
jb
push
adc
jo
dec
fcomps
andl
fnstenv
popaw
push
cmp
je
sbb
jae
mov
inc
inc
lock
test
jecxz
test
push
push
adc
xchg
pop
mov
pmaxsw
adc
fstl
pop
fcoms
rcrb
pop
aam
push
leave
mov
mov
fxch
pop
scas
xchg
cmp
lret
or
aad
pop
pop
xchg
push
push
sub
fisubl
repnz
jp
cli
or
bound
jle
mov
enter
mov
adc
mov
lcall
push
in
dec
pop
orl
sub
stos
outsb
cmpsl
popa
iret
scas
stos
insb
add
xchg
movsb
movsl
lods
mov
repz
lods
dec
cmp
mov
sub
aad
jb
xchg
dec
clc
rolb
sbb
mov
sub
stos
scas
out
xorb
imul
jmp
std
cwtl
aad
jl
in
pop
fistl
js
sub
push
cltd
adc
fiaddl
andl
das
cmp
push
pusha
sbb
jg
and
gs
ret
push
mov
aad
pusha
hlt
fcomps
stc
xchg
cmp
test
mov
pop
shl
jbe
xchg
push
or
aaa
clc
adc
insl
sub
add
push
inc
fsubrs
mov
or
and
ljmp
js
adc
xor
and
ja
mov
or
fwait
adc
into
adc
dec
or
icebp
shrl
idivb
mov
fs
cli
xor
sbb
xchg
aaa
mov
cmp
add
out
in
or
cs
repz
sub
xor
loope
mov
movsb
divb
xchg
insl
inc
aas
icebp
movsb
aas
leave
les
bound
jg
movsb
stos
cltd
inc
and
push
ficoms
inc
scas
inc
push
into
push
ljmp
and
push
add
loop
imul
inc
add
cli
subb
cmpsl
dec
push
mov
cmp
inc
out
push
pop
xlat
and
mov
cmc
ret
dec
pop
aaa
and
clc
xlat
fdivrp
scas
jbe
xor
je
pop
fwait
std
int3
int
ret
pop
cmpsl
inc
mov
and
dec
sti
shll
ljmp
add
jae
rcrb
sub
cmpsb
rorl
sbb
leave
mov
cmp
push
les
call
test
xor
inc
xchg
xor
inc
ret
popa
outsl
daa
fs
icebp
pop
add
xchg
ds
pop
lahf
xchg
dec
loope
push
shll
leave
jbe
hlt
cmp
sarl
dec
cli
mov
jecxz
cmp
pop
lret
jne
clc
mov
pop
mov
push
xchg
mov
cld
or
add
es
xchg
sbb
mov
sar
pop
mov
mov
cmp
jmp
test
add
in
pop
cwtl
push
sti
jge
inc
mov
lahf
mov
ficoms
iret
cld
aaa
sti
pop
inc
pop
mov
push
jge
scas
into
dec
lahf
icebp
or
imul
xchg
mov
xchg
cmp
pop
ror
inc
jno
sub
popf
mov
dec
jo
call
or
or
mov
ds
cs
pop
enter
jecxz
cmp
and
jge
add
sbb
jne
dec
mov
mov
sti
or
xchg
pop
mov
fadd
aad
movsl
dec
mov
cmpb
mov
push
jns
orl
xor
orl
jl
sub
xchg
jno
cli
or
stos
mov
jge
icebp
add
xchg
sub
out
dec
xchg
pop
ds
js
adc
popa
roll
negb
ficompl
mov
mov
lret
icebp
push
mov
fiadds
jne
inc
test
cmpl
movsb
sahf
js
adc
dec
clc
xor
jno
aas
imul
xchg
negb
mov
push
add
call
mov
adc
xchg
test
and
mov
sbb
orl
lods
or
dec
pushf
jg
leave
fnop
dec
jmp
lret
pop
dec
icebp
testl
loope
rsqrtps
hlt
mov
add
sbb
push
add
in
sub
lods
ds
outsl
dec
scas
pop
cmc
jne
and
mov
sub
rcrl
sbb
sub
faddp
clc
clc
and
mov
push
xlat
or
mov
pushf
xor
int
imul
mov
push
jo
fldl
adc
iret
adc
js
out
add
inc
mov
mov
out
int
mov
in
adc
outsl
mov
mov
pop
push
sub
push
cld
outsb
addl
mov
ficomps
fsub
dec
aad
rclb
dec
rol
dec
dec
add
jnp
mov
pop
mov
inc
jg
push
push
pop
and
add
xor
push
xchg
lods
lret
je
add
mov
add
arpl
cli
inc
push
fimuls
xchg
adc
stos
loope
xor
std
fisttpl
push
jge
arpl
mov
ljmp
cltd
std
in
cmp
add
sub
bound
push
xchg
outsl
dec
mov
add
xchg
xor
lods
sub
add
mov
ds
push
clc
out
stc
out
mov
movsl
jns
mov
cmp
lcall
inc
and
out
addl
les
xor
dec
stos
xchg
lret
std
mov
xor
sbb
stos
les
pop
mov
jmp
negb
or
sbb
rcrb
sbb
pop
cli
out
sbbb
ja
ficomps
push
out
xor
in
call
shrl
sbb
lock
or
fxch
call
cmp
sub
and
mov
and
mov
dec
fsubs
and
iret
ret
pop
cmp
cmp
mov
shll
test
add
jae
inc
push
jl
cmp
clc
mov
jl
loop
in
or
adc
rorb
xchg
push
aad
or
sbb
and
cltd
push
fdivl
push
loope
adc
pop
hlt
xor
arpl
fdivs
adc
cli
std
jne
shl
jmp
setl
dec
in
int3
hlt
loop
loope
jb
lds
in
add
mov
mov
dec
pop
lods
lock
inc
call
mov
mov
aaa
add
adc
std
fisttpl
mov
pop
pop
xor
mov
jmp
insb
lock
stc
or
cmovge
mov
andb
test
or
lock
daa
xchg
test
sahf
out
cmp
dec
or
test
aam
adc
or
iret
scas
jmp
adc
inc
shrb
mov
and
inc
push
in
push
push
in
jbe
xor
fcmovnu
in
or
push
mov
lds
or
adc
cs
sub
fstpl
or
mov
adc
dec
xor
jecxz
add
xchg
lret
out
bound
test
test
cltd
dec
push
pop
mov
repnz
jmp
in
jb
pushf
adc
popa
mov
sbb
jbe
outsl
data16
nop
out
mov
ret
dec
call
mov
clc
jp
cwtl
loop
pop
mov
sub
imul
mov
add
mov
mov
test
bound
or
dec
inc
daa
icebp
mov
jmp
nop
dec
push
inc
mov
cmp
adc
sysenter
adc
xchg
sub
pop
frstor
loopne
inc
mov
pop
mov
in
pusha
push
jne
subl
pop
leave
xor
aad
dec
mov
jle
and
mov
scas
pop
adc
mov
cmp
adc
mov
ss
std
loop
push
aas
fsubs
jo
add
arpl
push
mov
test
cmpsb
xor
ja
test
push
dec
imul
lcall
fdivr
clc
out
lock
bound
xlat
iret
insl
pop
push
push
sub
outsb
mov
outsb
cmp
mov
or
xchg
inc
imul
pop
out
andl
dec
mov
subb
add
nop
fimuls
dec
orl
clc
lock
fdivs
mov
aam
xchg
xor
mov
jecxz
push
adc
data16
sub
lcall
gs
pavgb
shll
xor
sbb
clc
adc
xorb
rolb
xor
dec
stos
sub
rorl
mov
mov
inc
jmp
subb
lods
sahf
mov
dec
repz
icebp
mov
xchg
stos
mov
inc
add
popf
sub
in
in
push
scas
xchg
movsl
cmp
ret
mov
cmp
inc
add
insl
movsl
les
cmp
ret
lret
cmpb
fdivrl
outsb
add
mov
push
fidivs
iret
cmp
fwait
and
je
xchg
jp
movsb
jmp
popf
idivl
xlat
sub
clc
mov
sarb
out
js
into
xor
mov
lock
mov
jnp
mov
ds
mov
jle
incl
rclb
int3
jl
test
pop
aas
in
push
xchg
push
mulb
inc
adc
imul
xchg
adc
adc
les
lret
cmpsb
lret
and
testb
es
pop
out
jae
jmp
adc
cwtl
push
filds
les
cmp
cmp
gs
mov
fwait
add
rclb
std
adc
jns
inc
push
xchg
mov
enter
dec
pusha
dec
lahf
sub
mov
push
popf
adc
push
rolb
rolb
aaa
and
cmpsb
imul
out
imul
sub
dec
sbbb
outsl
push
in
push
test
mov
inc
inc
mov
xor
inc
pop
pop
icebp
lods
xor
mov
inc
shrl
paddsb
pop
xor
lds
jl
cmc
dec
cmp
cld
mov
xor
pop
adc
rep
push
loope
lds
into
insl
pop
mov
xchg
push
dec
nop
ret
sbb
rorl
push
out
xchg
xchg
nop
shl
clc
lods
cld
test
mov
rcrb
jecxz
das
mov
xchg
arpl
adc
mov
mov
dec
insl
dec
lea
jmp
scas
cld
add
inc
jle
inc
ja
dec
pusha
sub
out
bound
outsl
fistl
sbb
inc
in
jb
fs
repnz
sti
mov
dec
cmc
adc
add
rorl
rclb
jns
repnz
roll
sbb
lahf
sub
stc
mov
scas
bound
mov
xchg
sbb
iret
dec
fcomps
xchg
dec
icebp
fsubs
inc
mov
add
fdivrl
inc
int
lods
jns
cmp
movsl
jbe
sbb
and
aas
sbb
inc
sub
or
pushf
mov
xchg
cmc
and
jge
fsubrs
sub
push
jo
xchg
xor
cmp
mov
lret
lret
or
xor
andb
push
jp
cmpb
jl
rclb
mov
mov
dec
sbb
inc
fsubl
dec
dec
aad
lahf
mov
add
mov
push
xor
sub
and
adc
jnp
mov
cmp
and
and
xor
and
adc
or
mov
and
fmuls
popa
cmpsb
cwtl
or
dec
mov
and
out
push
xchg
mov
cmpsb
mov
sbb
pop
mov
sub
pop
ret
in
mov
test
mov
sub
scas
inc
push
add
sahf
add
mov
push
xor
arpl
ss
sbb
inc
hlt
imul
loop
and
inc
xor
xlat
add
loopne
jmp
and
push
in
out
fisubrl
or
icebp
mov
adc
insl
insl
shl
xchg
cmp
into
sbb
or
test
pop
int3
aad
bound
ds
sar
adc
dec
sahf
shrl
stc
fidivl
sub
mov
subb
inc
mov
inc
das
out
mov
mov
pop
jle
test
shll
jl
into
lea
mov
iret
jl
in
add
shll
popa
fcomp
and
and
ret
clc
add
inc
push
fidivs
add
repz
inc
sbb
je
mov
pop
inc
xor
mov
sbb
sbb
js
stos
add
pop
ds
fidivrs
mov
ja
sub
stc
mov
jns
nop
inc
jmp
test
mov
sbb
pop
cmpsb
xor
divl
mov
mov
jb
in
jbe
outsb
lea
lcall
in
pop
stos
les
push
adc
in
cmp
and
ss
inc
mov
je
imul
jo
push
mov
xor
sbb
cmpsl
xor
jecxz
push
xchg
loop
ja
dec
jne
and
movlps
cltd
mov
mov
cmp
and
adc
mov
fisttpl
pop
jo
std
test
and
daa
les
and
js
data16
or
push
cs
fcmovne
xor
insl
inc
pop
icebp
add
psubq
les
inc
push
nop
push
cmp
pop
push
stos
scas
pushf
stc
fistpl
sub
daa
into
xorb
sub
push
mov
cmp
xor
lock
shll
jmp
and
cmpsl
clc
mov
cmp
jae
mov
mov
or
movsl
ds
movsb
lea
adc
cltd
loope
jmp
shlb
cmp
sti
pop
cmc
mov
pushf
xor
lea
fldl
test
xchg
inc
pop
dec
loopne
xor
jge
lea
adc
dec
xlat
mov
adc
fildl
mov
pop
ret
rcrb
sub
cmpsb
jb
jmp
mov
aas
hlt
repz
fwait
in
mov
ret
sub
add
fidivrs
inc
jle,pn
hlt
cmc
sub
sbb
push
mov
rorl
imul
lret
clc
cmpsl
jl
imul
rcr
std
mov
or
je
fwait
xchg
rorb
xchg
mov
mov
movsl
cmp
xor
mov
mov
sbb
das
scas
mov
mov
xor
dec
popf
or
cwtl
loope
add
jle
push
insl
hlt
pop
movlhps
push
std
out
dec
mov
mov
loopne
rorb
or
rcr
mov
rcrb
lcall
cmp
dec
rcrl
dec
and
xorl
pop
or
stos
pop
insl
sbb
movsb
xor
shrl
pop
gs
xor
sbb
xchg
adc
inc
add
cmp
bswap
push
scas
mov
push
add
cmp
jae
aam
shr
lcall
push
insb
add
pop
insl
sub
push
pop
out
pop
mov
dec
jmp
in
addl
inc
nop
clc
enter
pop
cs
lods
int
pop
mov
fdivr
shr
cwtl
adc
and
ret
dec
push
jno
fmuls
mov
sub
cmp
sbb
or
adc
mov
nop
es
xchg
sti
gs
sbb
imul
repnz
sub
mov
setae
or
rol
xchg
mov
orl
andl
icebp
mov
mov
addr16
sarl
loope
xchg
dec
fldt
repz
push
jne
and
jnp
cmp
jmp
dec
nop
xchg
lret
push
fcoml
sbb
cmpl
push
out
jne
fmuls
dec
xor
mov
sti
popf
xchg
cmpsl
cli
xchg
jae
fcoms
gs
dec
aad
push
jecxz
scas
shrb
shll
es
cmp
leave
test
mov
mov
fsts
adc
mov
mov
or
shl
adc
adc
rcr
cmp
inc
mov
insl
fbld
mov
jo
fidivs
fs
out
aaa
xchg
cmp
mov
adc
nop
ret
pushf
push
mov
stc
out
test
pop
cs
xchg
shll
jge
pop
and
mov
leave
std
push
fisubl
loop
mov
xor
inc
data16
cli
mov
mov
sbb
call
adc
xchg
ja
stos
mov
dec
mov
inc
and
jecxz
mov
mulb
dec
lea
push
inc
sub
dec
das
mov
cwtl
inc
loope
scas
fisttpl
and
out
pop
cmp
add
or
addb
js
cmpl
ss
stos
and
push
stos
stos
mov
testb
or
fs
stc
hlt
xor
mov
loope
mov
ds
nop
mov
test
sbb
jbe
fbstp
ret
xchg
mov
das
xorb
mov
mov
mulb
mov
or
rcr
xor
leave
pop
imul
and
das
sahf
rcl
jb
out
cmpsb
imul
push
fcoml
ficomps
into
pop
xor
sahf
out
popa
xor
pop
in
rcrl
pusha
cwtl
mov
jae
xchg
movsl
mov
pop
sbb
mov
test
test
loop
mov
sub
mov
cwtl
test
sub
test
insb
cltd
sbb
push
sbb
enter
ljmp
loope
push
xchg
xchg
mov
cmp
pushf
mov
jb
shrl
cmp
mov
out
pop
jb
lea
loopne
mov
das
test
into
pop
in
jns
cwtl
shll
xchg
push
into
xor
mov
sub
inc
pop
xor
mov
mov
les
popa
je
ja
paddsb
test
sub
out
pop
dec
or
dec
out
inc
mov
push
scas
aaa
jp
push
mov
xchg
adc
sbb
aaa
sub
fadd
aad
daa
or
sbb
add
mov
insb
addl
iret
hlt
jle
or
xchg
iret
push
mov
clc
into
or
imul
pop
cs
test
sbb
sbb
jns
dec
adc
xor
or
inc
lcall
movsb
sub
ja
xor
mulb
jno
fneni(8087
or
cli
mov
adc
lcall
imul
pop
repnz
mov
bound
mov
cmpsl
sbb
int
sub
fisttps
fcmovbe
sbb
dec
into
flds
lods
in
mov
jp
les
test
jno
shl
mov
std
stc
jo
pmullw
addb
push
sar
nop
in
hlt
das
cmp
mov
sbb
lods
clc
addl
inc
mov
loopne
sub
push
sbb
movsl
cmc
std
movsl
hlt
aam
sbb
aas
lock
ja
fwait
cmp
lret
pop
aas
jbe
sbb
xchg
paddd
lcall
aam
cltd
in
sbb
or
aas
and
cltd
testb
cmp
mov
adc
dec
enter
jae
mov
mov
sub
jne
cld
jge
cmp
fiadds
jmp
sahf
push
sbb
out
movsl
and
dec
sbb
nop
jo
push
push
mov
xor
pop
pop
insb
dec
movsl
mov
loop
divl
jae
add
cmp
addb
push
rcrl
xchg
repnz
mov
popa
ficomps
leave
fsubr
inc
lock
fdivrs
gs
add
ret
jp
jp
fs
data16
mov
fdivrs
in
nop
dec
sbb
sub
pop
mov
lods
add
in
mov
into
iret
lods
xchg
out
jne
mov
adc
mov
std
add
fidivl
negl
call
mov
shrb
outsb
das
dec
sbbl
mulb
push
rcrl
stos
xchg
stos
pop
dec
shll
pop
movsl
xchg
mov
repnz
aad
cltd
mov
fcoml
xor
cmpsb
and
mov
or
pop
mov
js
push
push
stos
push
and
dec
fsubl
push
aam
aaa
mov
mov
hlt
hlt
xchg
push
fisubrl
stos
inc
xchg
cmp
lods
mov
popa
xchg
inc
sub
cmp
aaa
out
pop
mov
xlat
jmp
lea
in
fnstcw
rolb
and
imul
aas
ffreep
push
cli
hlt
fsubrl
cmp
xor
mov
adcb
or
mov
xor
sbb
ds
xchg
pop
mov
or
in
and
sub
mov
fs
inc
push
jno
adcl
cld
inc
cmp
inc
cmp
call
jns
sub
inc
lret
inc
mov
or
cmp
xor
jl
std
mov
scas
dec
hlt
ss
out
sub
jecxz
pop
adc
adc
or
in
sete
xchg
add
mov
out
xor
gs
adc
cmp
inc
push
movsb
inc
cltd
or
aaa
jge
jb
insb
sub
cmpsl
out
jg
mov
rol
lock
stos
or
pop
ret
xchg
xchg
lods
lret
out
and
orb
in
sarl
and
movl
les
testb
inc
xchg
neg
pusha
dec
lcall
dec
mov
lods
jno
push
not
xor
ja
out
dec
jge
push
in
or
jle
jmp
arpl
jno
push
dec
sarb
pop
sub
ss
daa
jno
pop
test
push
cmp
nop
add
mov
push
subb
push
lods
push
push
pop
xchg
adc
push
cwtl
lret
add
arpl
or
jp
xor
les
jle
and
xor
aaa
es
xchg
icebp
lds
adc
fsubs
cwtl
cld
jno
pop
xchg
outsl
inc
cmp
imul
inc
lret
imul
cmpsl
and
rcrl
sub
mov
int
inc
aaa
fucomip
frstor
popf
xor
test
out
scas
fstps
and
int
fiaddl
jnp
test
jl
mov
pop
dec
out
loope
gs
or
mov
stos
loopne
lret
clc
mov
push
xchg
add
pop
add
lock
inc
loopne
jl
push
xor
dec
add
pop
xor
test
pop
repz
ljmp
xchg
jb
mov
mov
inc
subb
or
test
pop
int3
sub
and
jl
daa
add
mov
enter
sub
cmp
repz
dec
pusha
or
movsl
js
insl
lods
lea
in
scas
sbb
lds
lock
dec
loope
mov
xchg
sub
jle
ret
hlt
and
sub
subb
adc
jne
mov
outsl
xchg
aaa
cmp
mov
shr
shll
mov
lret
in
pushf
sbb
mov
mov
mov
lds
insl
mov
lret
fsubrl
mov
xlat
inc
rcrb
adc
mov
and
cs
and
mov
es
test
sbbb
dec
jmp
inc
push
sbb
aaa
neg
sbb
cmc
and
or
and
sub
fisttpll
sub
fsubrp
inc
lret
push
leave
shlb
cmpsb
jno
div
sbb
sbb
jl
leave
jno
mov
cmp
int3
lock
addr16
mov
dec
out
cmp
cli
shl
xchg
inc
jo
testb
test
dec
cltd
std
mov
xchg
scas
sub
movsl
dec
or
repz
dec
or
std
inc
ret
cltd
shll
fstpt
leave
xchg
xchg
fsubs
dec
xor
iret
orb
mov
sbb
mov
mov
or
cld
testl
add
leave
inc
pop
or
xchg
out
inc
pop
lock
cld
dec
enter
imul
leave
xchg
mov
mov
movsb
and
jl
sar
pop
scas
sub
outsb
mov
sbb
push
and
inc
std
in
xchg
jge
call
and
lods
add
jg
xchg
push
shll
std
dec
xor
or
inc
or
rorb
pop
in
cwtl
insb
or
shlb
ficoml
pop
xchg
std
jg
shl
shl
mov
fsubrs
adc
xor
imul
leave
lods
push
mov
cmp
xor
iret
and
push
popa
insl
in
xor
mov
pop
dec
sub
mov
xor
unpcklps
nop
ret
cld
sub
pop
stos
mov
loop
xchg
inc
pop
xchg
fcomp
es
xor
cmp
outsb
out
stos
xchg
pushf
cmc
addr16
je
es
out
xchg
aam
push
cmp
movsb
ja
arpl
jmp
add
fxch
fisubrl
xchg
mov
jnp
daa
xor
js
jle
enter
ljmp
bound
and
push
call
pop
pop
loope
hlt
sbb
xchg
dec
and
sub
mov
lcall
fld
enter
cli
cmp
out
push
dec
sub
fadds
cmp
sbb
out
int
xchg
adc
xor
adc
aad
mov
cmp
les
in
push
test
adc
xorb
xor
jae
cld
and
sub
addb
add
je
lcall
push
inc
mov
addr16
fidivrl
mov
arpl
pop
cmpsb
xor
or
fstl
mov
jb
in
subl
dec
xchg
pusha
loop
iret
jg
ljmp
mov
sub
mov
insl
in
imul
imul
and
jecxz
xchg
out
cmp
dec
aam
jge
int3
xchg
dec
jge
sub
popa
in
stos
call
sahf
sar
push
iret
pop
dec
cli
mov
les
push
cmp
aas
dec
jl
jl
cmp
and
xor
adc
push
pop
push
xor
test
repz
hlt
xor
fimull
adc
test
arpl
sub
add
or
fmull
outsl
sub
nop
das
dec
aaa
sbb
push
sbb
xchg
movsl
pop
fxch
sbb
push
adc
cmp
mov
cmpsl
mov
dec
pushf
add
leave
std
jns
adc
jmp
add
pop
insl
xchg
in
push
sahf
and
loope
jae
mov
les
mov
sahf
test
adc
mov
bt
lcall
aam
sub
ret
xchg
inc
rcrb
push
stos
ds
push
jno
adc
sub
fidivl
dec
fisttpl
pop
sbb
outsl
cmp
pop
cs
jmp
mov
push
inc
insl
test
push
imul
xor
sub
insl
xchg
mov
lret
push
sub
pop
jmp
mov
fadds
frstor
push
sub
or
iret
in
xchg
in
mov
mov
rorb
into
push
movsb
aad
xlat
xor
jmp
mov
in
cmp
jle
jg
and
xchg
ficomps
leave
mov
repz
dec
pop
setns
xor
mov
jns
bound
cmpb
mov
repnz
aad
cwtl
and
sbb
pop
cmc
mov
lods
jp
hlt
inc
out
jecxz
xorb
pop
inc
xchg
fwait
mov
loop
in
inc
test
push
ret
in
cmc
aas
mov
add
sbb
in
cs
sub
jl
xchg
or
or
daa
or
sub
pop
add
mov
in
mov
dec
nopl
fs
jns
rorb
pop
inc
dec
lcall
mov
pop
mov
in
jne
mov
jle
aad
mov
add
fwait
lods
ds
into
jne
aad
lahf
adc
imul
push
xchg
and
faddp
stc
in
mov
push
rcrl
test
or
movsb
pusha
add
mov
xchg
pop
aas
ret
cld
fimull
cmpl
push
rol
add
cmp
shl
sbb
dec
lds
inc
sbb
shll
in
or
in
cmpsb
pop
jle
jne
xor
add
lods
pop
icebp
push
inc
jo
jno
sub
std
ja
fdivrs
mov
jp
xor
loope
mov
in
in
movsl
test
cmc
pop
xor
roll
das
cmpsb
test
sub
add
jns
xorl
inc
and
sbb
pop
stos
mov
loop
stc
stos
sti
mov
adc
daa
bound
xchg
lock
push
cmp
mov
sbb
outsl
push
mov
jb
mov
popa
insl
int
and
mov
mov
test
dec
mov
mov
fiaddl
mov
jnp
out
fildl
out
es
cwtl
xor
in
pop
mov
lret
dec
or
repnz
xor
bound
testl
aas
mov
imull
lcall
pop
mov
inc
out
mov
sbb
dec
adc
or
xchg
stos
repz
outsb
hlt
mov
pop
int3
push
xlat
pop
jo
mov
jl
popf
addr16
outsb
xor
pop
in
imul
inc
leave
ja
pushl
lcall
mov
mov
add
sub
or
les
xchg
push
lret
fs
inc
cmp
sub
test
add
adc
rcrb
push
popf
cs
or
xor
outsb
push
xchg
push
sbb
and
shl
shll
xor
jmp
pusha
dec
push
jge
addr16
inc
leave
scas
xchg
push
pop
dec
in
aad
hlt
mov
jg
daa
push
rorb
bound
insb
out
xchg
mov
mov
sub
cmp
ss
stos
jg
push
pop
pop
mov
pop
ret
mov
push
cmp
or
push
or
ret
cmc
jmp
repz
sahf
adcl
mov
cltd
sub
push
inc
jle
insb
lds
jp
mov
jne
jne
xor
dec
mov
arpl
lock
icebp
dec
lahf
loopne
push
repz
jecxz
push
nop
push
popa
xchg
cmp
jmp
nop
push
pop
push
adc
fisubrs
sub
jl
add
stos
xlat
icebp
pop
rclb
sbb
sbb
sbb
nop
jge
in
push
mov
dec
jne
pop
ss
pop
scas
test
jb
jmp
repz
lock
dec
jle
dec
adc
stos
sbb
je
inc
std
ljmp
lods
bound
or
loop
jbe
ret
pop
lock
out
add
adc
jbe
mov
mov
jl
in
jg
inc
cltd
std
lock
les
shlb
fs
xchg
xlat
stc
add
daa
dec
ja
xor
or
ljmp
mov
or
jg
sti
fs
pop
mov
push
sub
inc
add
or
in
xor
fldl
add
lods
gs
loope
addr16
jnp
sbb
fdecstp
mov
inc
xchg
out
call
adc
sub
data16
repnz
pop
adc
push
insb
xor
jae
cmp
sub
daa
mov
sbb
rolb
faddp
xchg
sbb
dec
cmp
dec
jge
mov
jp
xchg
movsl
popa
inc
adc
xchg
adcl
jns
xchg
jge
fimuls
jp
test
pusha
adc
neg
adc
xor
push
sahf
cmp
scas
movsb
mov
jecxz
les
lds
cmpsl
nop
mov
inc
inc
add
pop
pop
imul
or
push
insb
pop
js
jecxz
push
or
popf
inc
std
stc
in
sbbb
das
add
movsl
js
sbb
fwait
push
loop
sub
loopne
and
in
pop
inc
pop
lret
sub
dec
mov
cmp
adc
or
add
mov
rclb
xchg
sub
lcall
insb
sub
xchg
xor
cmp
in
fs
pop
aaa
sbb
hlt
or
dec
mov
jge
inc
cmp
imul
mov
lret
cwtl
xor
mov
ror
aas
sti
out
frndint
in
shll
repz
sarl
xchg
in
and
sbb
jno
dec
jmp
std
jae
push
mov
clc
in
dec
pop
lods
and
jge
and
sbbl
xchg
divb
pop
addr16
xor
and
adc
jae
push
in
movsb
inc
addr16
cmp
mov
lret
stos
or
clc
dec
cmp
scas
aam
pop
jo
sub
inc
jl
inc
mov
pop
pop
mov
loopne
in
inc
ja
sbb
jp
jae
sbb
daa
dec
sti
es
scas
fldenv
out
loop
js
and
or
jnp
cld
test
lahf
fdivl
subl
xor
jp
inc
cltd
jp
fsubrs
or
clc
fsubl
jp
pushl
jmp
push
jmp
adc
pop
sub
pop
dec
jne
xor
fs
bound
movb
xor
hlt
rcrb
stos
ds
pop
icebp
jns
loopne
jecxz
mov
pop
cmp
or
ljmp
gs
xor
repz
sahf
cwtd
lret
ret
and
cld
push
test
cmp
neg
in
popa
mov
inc
pop
repnz
icebp
push
push
orb
xchg
or
or
dec
icebp
pusha
stos
out
outsl
xchg
outsl
mov
add
sub
push
jge
sbb
pop
xor
mov
aas
mov
inc
adc
inc
lods
leave
cmp
adc
enter
jbe
mov
mov
pusha
pop
popf
pop
jne
in
subb
sti
sahf
or
cmp
jns
ss
xchg
add
push
mov
mov
mov
faddl
rolb
xor
clc
sbb
dec
push
movb
mov
outsb
cmc
push
out
mov
ficompl
push
sbb
mov
insl
xchg
sahf
push
cmp
mov
jp
mov
dec
fmuls
ja
xor
pop
dec
mov
sbb
cltd
pusha
adc
adc
pop
sbb
sarl
sub
pop
aam
jmp
fnstcw
inc
push
data16
sbb
cmp
xor
out
addb
shlb
or
adc
mov
push
rcr
jle
pusha
lock
push
repnz
xor
and
call
mov
pop
push
pop
inc
jmp
mov
push
clc
je
loop
dec
jl
pop
and
mov
mov
cmpsb
icebp
fstpl
and
adc
stc
or
in
int3
and
nop
xchg
loopne
jbe
cmpsb
repnz
push
add
addr16
daa
loopne
xor
pushf
jns
mov
adc
out
ljmp
shrl
dec
push
and
cmp
shl
cmp
adc
mov
iret
out
clc
ret
std
in
hlt
inc
inc
cmc
cmp
mov
inc
sgdtl
sub
dec
into
lock
lea
jnp
fistl
lret
data16
jle
mov
lock
mov
cli
jae
pop
in
pusha
mov
jg
fs
mov
lea
pop
push
pusha
pop
xor
and
mov
fildll
adc
fstpt
test
cmpsl
jl
scas
fisubl
bound
dec
dec
loopne
dec
sub
jp
cmpsb
lods
sarl
ret
xor
inc
leave
mov
inc
mov
sub
out
lods
dec
cmp
inc
dec
mov
lods
xchg
mov
lahf
int3
rorl
jg
cmc
fidivs
jbe
int
jbe
sub
dec
inc
mov
fldl
mov
mov
jne
mov
inc
dec
mov
gs
or
push
xor
es
test
dec
cli
xchg
scas
cmc
pop
sub
lock
or
xchg
xchg
inc
jecxz
dec
dec
testl
lds
out
adc
lcall
mov
and
cmpsb
xchg
push
mov
push
fiaddl
mov
xlat
inc
nop
xor
popa
cs
jp
cli
or
out
repz
cmpb
inc
mov
sub
push
mov
inc
dec
mov
insl
insb
insl
or
pop
fwait
inc
aad
scas
idivb
iret
and
sti
mov
call
sahf
dec
xlat
jae
dec
push
aad
hlt
mov
push
packuswb
enter
inc
aam
int3
push
dec
mov
cmc
mov
jno
lock
inc
out
sub
push
xchg
adc
ret
popf
sbb
mov
pop
dec
fcomp
mov
push
dec
cs
adc
inc
subb
dec
cmp
mov
mov
push
xlat
cmp
and
lahf
aam
sub
mov
into
and
and
cmp
mov
jb
movsl
pusha
cmpl
sub
loope
jne
and
movsb
dec
jb
push
int3
ljmp
inc
aas
pcmpgtb
test
jnp
shlb
insl
jno
and
jns
jle
push
pushf
xor
sbb
aad
leave
in
fs
in
push
das
lahf
pop
xor
adc
in
das
inc
dec
pop
cli
mov
lods
nop
stos
aas
xchg
adc
iret
divb
cmpsl
ss
add
sub
xchg
push
or
icebp
gs
push
std
loopne
mov
rolb
sbb
in
arpl
out
in
test
jle
add
lret
jnp
jmp
shll
xchg
hlt
mov
or
lret
push
loope
xor
sub
imul
mov
ret
mov
pop
push
push
pop
pop
nop
lret
xchg
lret
popf
inc
dec
mov
pop
dec
mov
sub
scas
data16
dec
or
or
daa
lea
push
insb
push
out
das
jmp
sbb
mov
push
dec
sub
lret
call
lods
fistpl
test
xorl
fidivl
cmp
pop
out
dec
push
add
pop
pop
dec
or
lods
movsl
sahf
shll
pushf
inc
xchg
adc
pop
aad
jnp
and
adc
and
push
stos
dec
mov
js
mov
sbb
inc
jbe,pt
aam
mov
clc
push
jg
cmp
das
andb
jl
add
loopne
jle
movsb
adcb
inc
stos
rorb
add
ficomps
mov
mulb
adc
mov
ljmp
cwtl
enter
data16
mov
dec
mov
add
mov
push
mov
push
pushw
cmpsb
or
adc
jmp
sarl
sub
fldt
popf
addr16
inc
sbb
cmp
mov
outsb
xor
jp
cld
mov
lcall
cmp
cli
loope
sti
cmpsb
push
sbb
out
and
xor
sub
faddp
rcr
mov
out
shlb
clc
push
sbb
xor
into
popf
pop
jge
js
xor
push
enter
lds
pop
push
inc
jmp
jmp
xacquire
outsb
xchg
push
pop
lea
add
xchg
jb
aam
iret
aam
jmp
add
lea
push
pushl
and
les
inc
pusha
dec
je
xor
and
pop
inc
lcall
xor
outsl
mov
sub
and
into
push
scas
test
push
enter
insb
es
mov
arpl
test
xlat
lahf
cmp
cs
lret
cmp
leave
inc
jo
subb
imul
dec
dec
mov
sub
out
lret
mov
mov
fstpt
mov
out
xchg
mov
test
insb
test
sti
fistpll
pop
and
push
scas
orb
mov
arpl
mov
les
out
cltd
xchg
sub
sub
xchg
inc
mov
lret
lock
pop
mov
jae
movsb
jne
pop
pop
mov
pop
push
adc
xlat
cmp
and
std
aaa
sub
out
arpl
mov
dec
pop
hlt
pop
sub
mov
jg
in
and
enter
into
push
leave
mov
add
lcall
mov
dec
ror
dec
in
ret
pop
mov
jg
daa
pop
dec
out
call
xor
out
push
outsl
xchg
xor
xlat
adc
repz
sbb
adc
hlt
cs
jae
fdivrs
test
jae
rcrl
cmp
es
lret
xlat
cmp
mov
ja
sub
inc
mov
shl
jg
icebp
xor
in
int
movsb
mov
pop
sti
dec
shll
mov
pusha
imul
mov
dec
mov
ds
mov
dec
adc
mov
jp
shlb
imul
hlt
cmpsb
lret
scas
in
push
mov
dec
mov
inc
insb
cwtl
cld
movl
imul
lock
mov
jp
repnz
mov
cmp
mov
dec
adc
or
outsb
and
or
xchg
jle
sbb
sbb
mov
fnsave
divb
xchg
pusha
loop
sbb
add
orb
fwait
test
std
ja
scas
je
sahf
pop
xor
and
jb
cmpb
inc
adc
mov
lds
dec
or
ret
adc
loope
xchg
and
push
addr16
lock
xor
add
aam
adc
adc
lds
jns
mul
in
xchg
out
sti
lcall
stc
sbb
and
cmpsl
ljmp
daa
jo
sbb
jge
jle
and
addl
mov
jae
cli
add
mov
sub
out
in
std
jmp
inc
ret
test
sarl
mov
adc
xor
test
mov
mov
adc
jmp
jb
jb
mov
inc
enter
inc
cmpsb
rolb
cmp
or
and
sbb
xchg
add
loopne
and
es
pop
pop
adc
idiv
leave
daa
ja
push
bound
jb
adc
mov
pop
sbb
pextrw
repnz
push
and
mov
jecxz
cs
add
sbb
push
dec
pop
fmuls
xchg
sbb
hlt
xchg
mov
fwait
js
cwtl
insb
cld
or
cmpsl
ret
je
popf
mov
sub
loopne
leave
xchg
in
push
stc
pop
imul
mov
loope
ljmp
sub
xchg
inc
mov
out
scas
inc
fptan
rcrb
add
cmp
inc
or
mov
pop
idiv
ja
add
cmp
mov
shl
inc
sub
push
and
mov
mov
inc
or
repnz
arpl
in
xorb
lret
xor
sbb
hlt
xor
xor
movsl
mov
ja
rclb
movsl
outsl
cwtl
popf
enter
frstor
into
push
and
in
cmc
call
xchg
adc
je
in
mov
pop
rorb
fnstcw
xchg
je
jmp
mov
ret
incl
adc
js
push
sbb
inc
jbe
sub
bound
js
jecxz
in
dec
sbb
sub
movsb
bound
and
out
or
push
mov
cmp
mov
outsb
pop
loopne
pop
shrl
cwtl
arpl
push
das
push
outsb
and
and
xchg
dec
push
scas
xchg
stos
jmp
adc
jae
sub
dec
in
call
stos
inc
imul
xor
pop
nop
in
or
jp
jo
xchg
fwait
pop
xchg
push
rcl
inc
in
adc
mov
dec
jg
lds
xor
mov
cli
arpl
lods
push
mov
enter
loop
je
out
call
push
pop
int
out
mov
call
and
dec
jae
out
divb
mov
xor
les
pop
dec
stc
jae
jl
push
add
xor
and
and
push
cmp
imul
xor
fnstcw
fdivrs
jle
pushf
xor
popf
es
in
lods
sbb
out
sub
fs
xchg
cmp
mov
add
out
xchg
leave
xchg
pop
jnp
mov
or
in
push
mov
lds
fisubrs
stos
loope
sub
loop
pop
lds
je
cmp
lea
int3
cmpsb
inc
cmpsl
aaa
ret
arpl
pop
jb
call
xor
mov
mov
jae
or
or
dec
addr16
jnp
jecxz
and
or
ja
xor
push
pusha
jae
adc
xchg
mov
mov
mov
cmp
mov
rol
clc
xor
ja
push
mov
mov
cmpsl
push
test
aad
add
hlt
out
sub
cmp
sbb
push
fidivl
dec
mov
cmpb
jo
sbb
mov
sub
ret
addl
mov
mov
rcrb
xchg
sbb
or
push
inc
aam
aad
dec
in
fcompl
and
xchg
ss
rcl
lahf
sti
lds
sbb
push
test
add
movsb
repnz
adc
jl
mov
stos
adc
pop
fisttpl
add
loope
test
xchg
push
std
idivb
xchg
push
or
fiaddl
and
stos
repnz
dec
jae
loope
inc
in
dec
sti
inc
jbe
into
aam
jb
dec
pop
subb
or
jae
lea
adc
fldcw
movsl
leave
mov
and
cmc
cmpsb
orb
aam
repnz
and
hlt
sub
and
pop
test
out
popf
sbb
imul
hlt
inc
addr16
or
or
icebp
push
xchg
dec
fwait
mov
add
adc
push
imul
ljmp
push
xor
clc
pop
into
mov
cltd
xor
xchg
cmp
cmpsb
cltd
std
pop
cmp
hlt
xor
andb
xchg
imul
jbe
pop
mov
test
push
mov
xchg
dec
push
loopne
sub
sbb
outsb
shlb
push
xor
cmp
loopne
dec
leave
or
test
lcall
sub
repnz
and
mov
inc
scas
ljmp
cmp
loopne
sti
pop
mov
cs
and
add
test
pop
mov
stos
pop
enter
pop
inc
adc
or
lret
lods
lret
sub
or
fwait
int3
mov
push
sbb
cmp
cmp
and
mov
cld
cmc
or
pop
pop
lods
or
test
testb
enter
jns
fs
and
aam
les
call
fmuls
cmp
push
enter
fnsave
push
push
xlat
lds
lds
inc
push
pop
jmp
xchg
std
jp
push
xchg
pop
push
stc
xchg
dec
arpl
repz
insl
lock
mull
cli
les
xchg
mov
sarl
jge
es
sar
inc
scas
lods
cmc
shll
pop
rorl
mov
or
adc
out
adc
jmp
jp
push
ret
cs
sub
sbb
add
cmp
sub
or
shl
mov
inc
stc
ljmp
pop
int3
aad
jo
enter
jmp
mov
add
rorl
mov
mov
and
sbb
mov
out
in
loop
test
imull
xchg
mov
dec
push
mov
push
jmp
rcr
cltd
inc
pop
pop
out
mov
or
cltd
not
enter
fsts
pusha
out
sti
out
insl
adc
xorl
outsl
movsb
pop
push
mov
inc
pop
dec
sub
arpl
mov
or
mov
dec
xor
mov
dec
outsl
cmp
in
xor
stc
add
mov
stos
repz
pop
in
testl
jle
cmp
lret
push
add
fsincos
sub
das
mov
in
into
in
or
xor
aam
or
jle
mov
mov
aam
jmp
pop
pushf
lods
or
mov
push
sahf
or
repz
lea
mov
push
enter
clc
mov
lds
mov
or
jno
jge
add
or
mov
mov
es
sbb
andl
ret
push
sbb
js
inc
inc
jne
out
stos
adc
cs
sbb
dec
lods
leave
add
push
mov
inc
gs
out
mov
jecxz
jnp
dec
jns
jmp
xchg
idivb
mov
bound
push
inc
test
mov
add
mov
fdivl
fidivs
xlat
clc
push
jbe
loopne
mov
loopne
ljmp
mov
out
call
mov
sbb
std
fstpl
adc
jecxz
dec
loop
adc
arpl
xchg
lods
mov
or
testl
lcall
inc
ljmp
mov
dec
cmpsb
call
fisttpl
iret
jp
xorb
push
dec
addb
sti
addr16
cwtl
or
rorl
sub
add
sub
mov
mov
fdivr
inc
or
sub
sub
jecxz
bound
adc
mov
stos
iret
mov
xchg
adc
mov
arpl
cmc
inc
sbb
repnz
sub
aaa
lock
sbbl
add
cmp
leave
cli
inc
lret
movsl
icebp
notb
jo
inc
jg
push
pop
add
sub
adc
xchg
add
cs
dec
push
push
mov
mov
and
inc
js
mov
adc
ret
test
test
mov
xor
shrl
in
cmpsb
loopne
xchg
insb
daa
jl
dec
mov
lcall
fstpl
test
jbe
xor
push
imul
and
and
pusha
push
cmp
scas
das
jb
push
cld
iret
mov
mov
pop
push
test
xchg
pop
xor
or
mov
call
lcall
in
lea
js
mov
dec
dec
call
and
lea
add
inc
jecxz
rorl
xchg
jae
nop
mov
lods
jp
xor
test
outsl
mov
pop
jns
cs
adc
inc
int3
lret
fisubrl
pop
xor
imul
loop
dec
aas
jge
jl
enter
or
jae
fwait
xchg
xchg
xchg
sahf
or
cmc
filds
jle
sub
sub
jecxz
enter
jmp
mov
sahf
fimull
lret
or
add
in
jno
outsb
rcrl
in
gs
jecxz
andb
and
sar
adc
mov
xchg
push
hlt
cltd
mov
xchg
jbe
stos
ds
adc
xlat
mov
lods
push
pop
push
hlt
dec
jg
ds
rcl
jae
cmp
sub
pop
loopne
adc
push
xchg
or
xchg
cmp
inc
dec
cld
test
fstpt
sub
push
lds
repz
adc
or
or
shlb
aaa
stc
not
popa
jo
iret
xchg
mov
mov
add
stc
jnp
and
movl
pavgw
negl
xchg
or
mov
es
leave
adc
int
adc
movsb
mov
cmp
push
or
sub
cltd
xchg
jg
inc
das
add
scas
outsb
jmp
sbb
outsl
movsb
mov
inc
int3
mov
and
adc
xchg
call
sub
or
mov
xchg
dec
push
mov
jg
subl
mov
pop
mov
out
push
in
out
dec
leave
aaa
jmp
mov
sub
sbb
and
sub
ret
subl
cmp
aam
adc
mov
iret
adc
xchg
mov
inc
fisttpll
adc
xchg
test
jno
pop
adc
inc
or
and
sar
adc
jnp
call
insb
sbb
aad
sub
mov
inc
or
xchg
mov
cmp
notb
xor
outsb
push
loope
sbb
pop
fsubs
sub
test
xchg
int
push
not
lret
adc
fistl
daa
sub
arpl
mov
or
push
bound
leave
iret
ljmp
adc
lods
lcall
push
push
test
adc
out
push
aad
shrl
movsl
adc
insb
add
aad
popf
stos
out
test
rcr
in
push
fsubrs
ret
outsl
pop
hlt
mov
aaa
out
cmpsb
enter
mov
adc
inc
mov
outsb
adc
xor
ljmp
push
rcll
inc
scas
les
mov
cmp
inc
and
mov
cmp
mov
jne
jo
jecxz
subl
cmpb
in
mov
and
xchg
rcll
inc
mov
push
push
cmp
ror
mov
pop
fs
test
mov
leave
faddp
ficompl
setne
jp
imul
loope
arpl
test
mov
negl
adc
add
cmp
cmp
add
fmul
arpl
mov
leave
fisubrl
outsb
jp
ret
shrl
cmp
add
xor
add
stos
loope
hlt
push
je
fadd
fnsave
add
arpl
and
or
sub
pop
or
stos
or
xchg
dec
or
loop
adc
lea
dec
sub
shrl
outsb
and
xor
sub
out
sbb
outsb
mov
xor
insb
fcmovbe
bnd
adc
test
sbb
out
xchg
or
mov
cli
test
sub
and
sub
xchg
testb
jb
push
fldcw
bound
adc
mov
pop
mov
jp
cmc
push
push
dec
inc
add
mov
fwait
and
das
ja
adc
sub
sub
inc
ja
fcmovnu
jno
lock
or
popa
sbb
bound
jns
addr16
and
pop
push
cmp
cmp
enter
lock
dec
or
adc
xchg
adc
xor
pop
sbb
add
in
and
add
cltd
xchg
jbe
sub
sahf
mov
adc
mov
test
daa
in
mov
jae
lods
mov
movsl
cmp
ret
outsb
icebp
lret
aad
inc
inc
jne
mov
pushf
bound
xlat
jle
leave
xchg
mov
aas
sub
movsl
ljmp
ret
mov
int
xchg
push
xchg
cmpsl
cmp
inc
xchg
testb
push
rcrl
aas
lods
sub
sarb
out
mov
inc
push
lahf
adc
adc
insb
out
mov
fcom
addr16
imul
or
std
inc
mov
mov
adc
sbb
pop
add
sub
mov
test
arpl
test
pop
and
addr16
jecxz
cwtl
fistpll
aaa
inc
loope
inc
adc
lea
jmp
movsb
arpl
call
movsb
mov
into
int3
add
pop
mov
dec
inc
adc
outsl
mov
xchg
push
cs
push
xor
lret
cs
push
ss
sub
cmp
sti
sub
lods
les
and
je
xor
cli
mov
push
push
cmp
iret
repz
add
or
add
xchg
mov
scas
jle
cmpsb
fisttpll
mov
les
jnp
dec
sbb
jne
xlat
sahf
push
push
sub
rcrl
cmp
add
pop
jno
pop
mov
inc
xchg
xor
lret
or
push
sbb
mov
pop
test
cltd
clc
int
jns
in
mov
pushf
cmc
xor
pop
outsl
lods
nop
les
imul
adc
addl
mov
sub
jo
and
repnz
jnp
pop
add
outsl
jne
negb
shrl
clc
dec
dec
dec
inc
and
push
pop
nop
fidivl
lods
stc
in
pop
push
sbb
sub
add
mov
pop
mov
push
fistl
shl
mov
lahf
in
dec
push
mov
notl
cmp
jbe
rorb
or
fwait
mov
scas
dec
push
mov
out
mov
pop
movsl
ss
sbb
lods
and
sub
cmp
mov
pop
sbb
mov
repnz
push
popa
fwait
jnp
repz
loop
mov
pop
inc
mov
ret
cmpsl
push
pop
mov
mov
cmc
lods
push
cld
cltd
dec
add
cmp
mov
mov
ss
mov
jl
mov
out
lds
dec
sbb
clc
mov
test
popf
mov
into
inc
ds
scas
and
or
pushf
mov
sub
xchg
dec
in
xor
xor
xchg
cmpsl
lahf
xchg
sub
mov
imul
daa
push
cmpsb
cmp
sub
sub
sbb
das
out
sbb
mov
push
mov
popf
inc
cmp
js
nop
xchg
test
pop
sbb
stc
in
stos
inc
xor
mov
test
ljmp
nop
stos
lods
repz
dec
scas
dec
adc
mov
mov
push
fldenv
movsl
pop
jl
sahf
mov
cltd
push
add
mov
mov
clc
test
outsb
mov
mov
repnz
mov
sub
mov
dec
test
cmp
inc
sub
aam
lret
pop
ret
orb
dec
xlat
adc
jnp
pop
lock
inc
pushf
popf
adc
pop
clc
call
and
loope
xchg
sbb
adc
jbe
mov
repnz
push
je
stc
lea
add
dec
pop
or
cltd
sub
xchg
outsb
insl
push
xor
pushf
push
jo
inc
dec
and
das
sbb
push
nop
jae
dec
mov
or
mov
pushf
xchg
lock
xchg
sub
mov
xor
daa
or
cmc
lret
aad
test
inc
jb
mov
mov
mov
nop
imul
xchg
xchg
pop
sbb
loop
cmp
out
movsb
lock
ret
inc
rolb
mov
mov
out
jge
adc
sahf
mov
jmp
add
clc
lahf
out
mov
fcmovb
sub
out
mov
pop
inc
fs
push
test
sub
mov
outsl
test
add
or
dec
fcmovne
mov
inc
fisubl
or
dec
dec
movsb
in
xchg
dec
inc
mov
adc
inc
shr
ljmp
xchg
bound
cwtl
fcoml
inc
push
mov
ja
scas
sub
jmp
cmp
add
mov
js
and
and
add
jmp
jnp
ret
jl
jns
lret
fbld
mov
jl
rclb
mov
fcomps
pop
push
push
adc
jmp
cmc
sbb
outsb
mov
pop
sbb
jae
push
dec
jo
push
in
aaa
dec
iret
sbb
aas
call
out
and
sub
adc
cmp
mov
fdivrl
fsubr
std
mov
mov
push
stos
addr16
sahf
mov
inc
mov
push
xor
push
pusha
push
fdiv
mov
mov
test
ss
out
movsb
xor
xchg
push
fcmovb
popa
push
bound
pop
std
pop
push
or
aas
fnstsw
fsubl
dec
aas
insl
jge
dec
mov
push
mov
dec
cmp
insl
jp
sti
cmp
or
sbb
call
mov
add
mov
int3
and
cmp
push
pop
sbb
mov
dec
jnp
mov
decb
pop
sbb
call
out
fistps
pop
dec
movsb
sbb
inc
sbb
sub
fldenv
inc
outsl
push
repnz
incb
lahf
lret
mov
fdivrs
insl
bound
dec
xchg
or
add
out
aad
or
test
popa
subb
pop
pop
cmp
xchg
fucomp
shlb
test
sarb
jecxz
mov
lret
sub
stos
pop
push
imul
dec
int3
daa
daa
outsb
adc
imull
cwtl
clc
push
xor
xchg
aaa
das
fstps
je
cmpsb
or
or
xchg
sub
adc
in
xchg
and
xor
jbe
adc
sub
nop
jp
pop
cmp
xor
popa
pop
or
mov
mov
xor
pop
data16
fwait
push
repz
jecxz
aas
inc
int3
inc
orb
lcall
fmul
jno
mov
sub
jns
cmp
push
or
ss
sub
test
cmpsb
lods
push
fmuls
cmp
shl
xor
xchg
lea
ret
into
sbbb
insl
test
lea
mov
rcrb
aad
xor
int
idivl
lahf
or
aad
lea
mov
adcb
or
mov
mov
xchg
ljmp
cmp
sub
xchg
mov
pop
fcmovbe
dec
jl
jno
pusha
or
addr16
shrb
scas
movb
scas
jmp
mov
push
jbe
imull
jecxz
jo
mov
inc
out
fwait
add
dec
jns
mov
push
push
mov
xor
jnp
cltd
out
pop
push
js
jb
pop
pop
ljmp
pop
lods
sub
cs
or
pminub
cli
mov
jmp
ljmp
inc
test
sbb
dec
ret
dec
sub
out
push
arpl
lods
lret
cmp
jecxz
pop
push
and
in
scas
jb
les
sahf
jecxz
or
ficompl
popf
imul
push
pop
sti
or
inc
xlat
push
mov
add
pop
add
subl
test
cmp
mov
aas
mov
fcoml
sub
shlb
xor
mov
push
movsl
add
cli
ret
push
mov
mov
and
sub
into
adc
jb
jae
subl
pop
sbb
xchg
jle,pt
push
or
jnp
adc
sub
jg
adc
jae
push
testb
addr16
cld
adc
mov
adc
push
in
inc
mov
js
mov
sahf
out
inc
out
daa
pusha
pop
sbb
mov
sub
mov
lds
pop
jp
iret
xor
mov
int3
fcomi
call
ljmp
ret
or
fwait
mov
iret
fwait
jno
sbb
xchg
pushf
pusha
jno
mov
pusha
fiaddl
daa
push
sub
mov
adc
aam
das
or
and
push
jns
cltd
mov
inc
repz
int
int3
testl
or
je
das
repnz
bnd
pop
add
test
das
out
jns
add
icebp
add
xchg
inc
decl
push
loopne
mov
pop
dec
movsb
es
mov
and
xchg
inc
enter
daa
mov
jns
aam
insl
fcmovne
mov
cmp
mov
inc
hlt
movsl
scas
and
adc
jecxz
cmp
cmp
jg
data16
addr16
push
in
jge
popa
mov
inc
shlb
out
dec
adc
movsl
popf
inc
out
xchg
pop
mov
hlt
mov
movsl
aas
or
ret
cld
loopne
push
bnd
add
sbb
sub
lea
adc
mov
mov
in
std
jns
std
jp
mov
outsl
fdivrl
xchg
loop
les
and
sbbb
or
xor
sarl
jbe
sub
and
pop
dec
popa
mov
sub
es
jmp
sbb
jmp
push
cmp
pop
imul
push
fists
and
sub
stos
scas
sbb
call
mov
pop
cmp
push
hlt
fisubl
pop
fs
fldt
aad
stc
les
sub
aam
xchg
insl
jb
pop
and
jp
inc
std
inc
mov
daa
xchg
lahf
cmp
mov
jl
js
fucomp
addr16
mov
push
mov
stos
daa
in
cmp
lret
dec
orl
sbb
std
ds
enter
fisubrl
clc
and
dec
jmp
xchg
dec
mov
adc
xchg
popf
adc
mov
stos
adc
lret
fwait
sbbl
imul
ret
scas
mov
jmp
cld
sahf
loope
mov
cmp
enter
add
jae
es
ljmp
jmp
cmp
gs
fisubl
stos
mov
push
loope
inc
xchg
mov
aad
mov
and
inc
leave
dec
fsub
fldt
imul
dec
mov
or
insl
jae
ret
je
jl
les
mov
jae
push
cld
loopne
sbb
cpuid
sbbb
adc
test
cltd
jl
sti
rorb
cmp
dec
mov
jb
dec
add
pusha
mov
push
ficoms
mov
sbb
push
cmp
mov
nop
push
test
mov
pop
sahf
mov
xor
xchg
or
iret
popf
sub
sti
lods
mov
stc
enter
push
and
jg
push
jmp
xorb
cli
repnz
or
pop
sahf
push
adc
jnp
add
ret
out
mov
jl
enter
mov
bound
in
mov
mov
sub
pop
push
addr16
pop
es
cltd
pop
stos
rolb
mov
adc
pop
xchg
cs
sbb
popf
cld
and
loopne
pop
aas
pop
xchg
or
or
jl,pt
or
cmp
pop
aas
mov
pop
loope
pop
mov
xchg
mov
pop
push
sbbl
jg
mov
aam
scas
lods
shlb
sbb
mov
inc
test
scas
sbb
mov
inc
arpl
jnp
ret
mov
add
xor
cli
addr16
pandn
jg
nop
push
add
jl
mov
rcr
push
adc
add
imull
inc
aad
push
add
not
bound
out
fstpl
cmp
mov
inc
mov
cltd
fldt
fisttps
cwtl
shlb
ss
pop
xor
and
sbb
dec
sub
fldenv
add
lea
inc
jb
mov
mov
rcrl
outsl
xor
sub
and
pop
not
scas
add
and
dec
fisubrs
fsubrl
and
imul
outsb
popa
inc
xor
fsubrl
rep
sub
push
test
repz
sbb
es
jge
mov
fs
sbb
mov
icebp
jno
xor
daa
lahf
xorl
sub
lret
cmpsb
mov
loop
idivb
xchg
lds
adc
sub
in
fimuls
dec
cwtl
push
test
jle
je
mov
scas
mov
shll
adc
inc
add
data16
push
jnp
enter
movsb
cmc
dec
js
jbe
loopne
jle
sub
cmp
int
or
or
pop
sub
scas
jo
inc
and
ja
add
loope
adc
cli
insb
add
pop
mov
outsb
js
jle
out
push
push
in
pop
sub
sub
test
in
bndstx
psubusw
cmp
in
and
cwtl
cmc
mov
and
pop
nop
jno
aam
adc
inc
sub
insl
or
sub
dec
mov
hlt
outsl
inc
add
in
and
sub
cs
pop
dec
mov
shlb
cmp
cmp
aam
and
adc
outsl
xor
rcll
test
and
or
testb
das
push
push
sti
jb
mov
push
push
push
out
mov
out
add
mov
push
out
jge
and
xorl
mov
adcl
inc
pop
sbb
jns
mov
jle
test
push
jo
sbb
xchg
pop
lret
mov
fiadds
mov
js
loop
adc
jle
movsb
test
jnp
fbstp
cmp
vpacksswb
sbb
mov
repnz
test
adc
scas
ljmp
jge
ss
adc
mov
lret
lret
ds
jae
test
movsb
das
jo
or
push
mov
int
add
imul
in
adc
pop
pop
sub
cmp
test
outsb
into
insl
loopne
cmp
and
or
push
dec
aam
or
imulb
nop
scas
mov
jmp
in
mov
dec
es
fsts
xor
subl
test
notl
mov
sti
sub
stc
mov
and
lock
test
rcr
leave
xor
and
outsb
add
mov
push
mov
nop
and
or
insl
idivb
mov
pushf
daa
pop
push
ljmp
stos
aaa
aad
jnp
or
mov
push
or
outsl
adcb
dec
mov
inc
sub
jmp
repnz
dec
jl
jl
add
call
pop
cli
add
pop
test
push
out
mov
cmp
daa
in
mov
xor
add
xlat
sub
mov
int3
icebp
sbb
xchg
or
and
imul
aad
pop
inc
rcll
and
inc
in
sbb
jne
shr
pushf
and
les
leave
adc
insl
lods
mov
or
out
pop
push
jecxz
je
dec
jno
cli
in
cmc
inc
popa
adc
and
cmp
cmp
ljmp
sub
rcrl
cmp
call
pop
out
mov
les
cmp
cmpsb
lods
jnp
inc
mov
dec
shlb
sarl
push
clc
mov
lret
sbb
shlb
or
add
pop
or
xchg
mov
jle
shl
enter
ja
shr
int
repnz
mov
or
sbb
imull
mov
xor
dec
xlat
xor
fs
xchg
push
mov
push
jns
adc
fsts
xor
jne
cld
loopne
jle
enter
mov
ret
loopne
dec
adc
inc
mov
sarb
mov
inc
scas
notl
inc
inc
sbb
mov
cmc
inc
test
add
add
cld
sbb
incl
add
add
sbb
add
std
incl
add
add
roll
mov
push
add
sar
rolb
pusha
call
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
mov
jmp
mov
add
lods
mov
btr
jae
rep
jmp
pusha
push
push
push
call
mov
popa
pusha
mov
sub
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
add
lods
test
jne
push
push
push
call
lea
push
push
push
pushl
call
mov
sub
push
push
push
push
call
pusha
push
pushl
pushl
call
popa
push
push
push
call
lea
push
pushl
push
pushl
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
