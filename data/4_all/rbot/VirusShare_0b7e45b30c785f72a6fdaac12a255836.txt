mov
daa
fadds
fs
int
leave
xchg
jnp
mov
push
out
gs
cs
fcoms
ja
fstpl
fiaddl
pop
lock
add
jmp
push
lods
arpl
mov
mov
in
mov
in
jne
jo
in
ljmp
mov
xchg
mov
es
or
inc
mov
sahf
mov
cmp
cmp
or
lret
mov
jne
sahf
push
push
je
xchg
pushf
cli
mov
int3
dec
sub
dec
mov
push
out
fs
clc
cmp
fimuls
jge
mov
jns
dec
pop
iret
jo
aas
cmp
add
add
cmc
call
mov
fsts
pop
cmp
sbb
in
stc
or
cli
outsb
cmp
dec
mov
inc
pop
push
lret
rcrb
dec
and
xchg
xchg
push
scas
mov
jp
roll
xor
adc
push
scas
repnz
xor
mov
cltd
inc
outsl
cmp
dec
push
xchg
arpl
xchg
sbb
arpl
mov
and
mov
mov
xor
loop
adc
inc
mov
popf
ja
dec
push
in
test
pop
call
out
push
scas
mov
push
int
pop
adc
pop
jmp
mov
mov
and
iret
pop
inc
push
inc
iret
xchg
fidivs
rolb
jbe
sbb
std
test
xchg
daa
cmp
cs
xorb
cmp
mov
flds
xchg
popa
repz
and
sbb
mov
add
jne
repnz
jne
lods
adc
icebp
sbb
mov
jae
xchg
mov
cli
sbb
sahf
ret
pop
test
cmp
mov
lcall
cmp
or
scas
enter
mov
outsb
mov
push
jne
stc
sub
sti
mov
pop
xchg
push
ljmp
pop
fistpll
sub
pop
adc
pop
out
mov
lock
or
fucom
and
cmp
mov
push
test
sub
mov
or
fsubrs
repnz
insl
dec
pop
or
sub
aad
jns
cmpb
sbb
jo
outsb
stc
daa
lods
xlat
cmp
mov
add
adc
rolb
ds
add
ffreep
pusha
jae
add
fsubs
std
push
mov
movsb
push
add
mov
scas
and
and
mov
inc
pop
xor
lods
or
lret
dec
int3
movsb
js
mov
mov
dec
outsb
sbb
sub
ja
orl
scas
dec
push
fiaddl
mov
lcall
pop
jp
inc
lret
or
cmp
mov
cmpsl
add
push
jbe
xchg
xlat
cmp
sbb
loopne
inc
xchg
sbb
push
jae
fsubrl
sub
aad
cmp
and
add
and
or
addr16
jge
rol
jle
shll
jmp
cmpsb
sub
out
bound
stc
mov
pop
jb
shll
js
xchg
loope
pushf
inc
jge
xor
scas
aam
fwait
xchg
mov
into
jmp
mov
sub
and
cmp
loop
mov
mov
cmp
xchg
sub
out
aad
aad
push
sbb
cwtl
movb
mov
test
mov
daa
jg
push
lcall
aaa
ret
pushf
xor
sub
iret
jae
inc
and
pop
pop
out
dec
loop
push
jecxz
outsb
push
and
push
jo
xor
mov
mov
or
push
mov
dec
mov
in
inc
lret
loop
sub
adc
xchg
cmp
mov
push
mov
pop
fs
mov
mov
xchg
sub
and
add
loop
out
test
and
lds
lret
inc
enter
enter
stc
ret
adc
mov
repz
pop
jb
movsl
fildll
int3
into
pop
fwait
addr16
dec
xor
loope
xor
ret
adc
leave
jo
and
sub
sbb
test
pop
inc
mov
adc
mov
cmpb
lods
loop
push
jno
xchg
dec
adc
repz
stc
xor
inc
xchg
cs
push
fistpl
fidivrl
xchg
mov
mov
mov
cmp
lahf
mov
test
cmp
das
je
stos
aad
rorb
rcr
adc
mov
lock
imul
lret
addr16
jb
test
sbb
aaa
lahf
dec
inc
and
lahf
adc
lret
jb
push
daa
bound
gs
sub
xchg
xlat
add
outsb
push
imul
add
cs
stos
xor
nop
push
cmpsb
jo
insb
test
nop
jmp
mov
sarl
cwtl
lretw
sub
inc
inc
je
insl
mov
adc
inc
push
test
mov
push
xchg
into
fstps
xchg
jecxz
inc
and
sahf
xor
repz
sub
sarl
rorb
fwait
push
mov
aaa
pushf
ror
ret
xor
add
leave
jp
jnp
xchg
add
inc
in
imul
test
cs
adc
push
imul
lahf
push
ljmp
push
pop
or
mov
cs
cmp
adc
fs
or
add
inc
mov
data16
cmpsb
cmp
daa
sub
inc
testl
or
jne
popa
mov
pop
pop
pop
dec
ss
movsb
pop
and
or
test
call
jae
mov
push
enter
mov
movsb
pop
jns
loop
cmp
movsl
test
imul
pop
mov
inc
add
and
into
sub
ret
cld
dec
cmpsb
mov
push
pop
enter
xor
jle
add
repnz
sbb
sbb
ja
lcall
insl
adc
push
cmpsl
add
aas
xlat
stos
mov
out
lock
lcall
loop,pt
xchg
xor
loopne
int3
dec
mov
jae
pop
push
sub
aad
leave
repz
jp
ja
sub
test
lret
rcrb
stos
lea
test
sub
divb
icebp
in
testb
lcall
xor
mov
jne
cmc
mov
pop
xor
lea
adc
loope
sbb
and
outsl
stc
scas
test
or
jne
add
mov
loopne
mov
dec
add
add
jns
mov
jl
mov
int
mov
cltd
cmp
stos
cmc
add
stos
sbb
push
mov
cs
cmp
gs
std
lret
sbb
das
aad
insb
in
xor
mov
ret
iret
enter
cmpl
fdivl
inc
outsl
mov
aas
out
push
inc
loope
jp
out
push
js
and
test
enter
mov
jmp
icebp
xchg
jmp
pop
cwtl
xchg
je
push
mov
or
add
out
icebp
inc
and
mov
out
push
lock
testl
in
mov
cmpb
fsubs
cmp
xchg
sbb
and
cmp
inc
aas
popf
clc
mov
dec
xchg
add
adc
divl
jae
adc
cmp
push
xor
cwtl
xchg
aad
mov
jle
mov
es
xor
scas
movsb
push
inc
aas
daa
mov
xor
fldl
scas
int3
mov
cmp
or
fcmovnbe
hlt
xor
lret
lcall
mov
push
xor
sub
in
loope
out
nop
cmpsl
cwtl
repnz
jmp
fsubrs
jp
inc
mov
fucomip
xlat
ds
jmp
cli
imull
repz
cmp
and
imul
lret
int
dec
mov
sbb
pop
push
stc
add
in
mov
jl
xor
sbb
sbb
imul
imul
inc
sbb
add
jmp
jbe
mov
or
repz
pop
lock
decb
xchg
or
inc
jmp
in
repz
lods
fcmovnbe
cld
xchg
in
cmc
movsl
cwtl
ret
jmp
push
jg
push
sub
xchg
dec
or
push
ret
xchg
mov
pop
jg
or
cmp
aam
ljmp
dec
in
clc
jl
cwtl
jecxz
addr16
clc
pop
loop
cld
nop
incl
or
out
ret
imulb
mov
xchg
std
shll
mov
mov
adc
cmp
cs
cltd
ljmp
xchg
inc
cltd
enter
and
scas
test
pop
dec
mov
sub
fsts
scas
pop
xchg
push
cmp
loop
test
jne
mov
push
test
jo
sbb
dec
sub
jp
std
adc
out
popf
jb
and
mov
orb
jge
arpl
sbb
ja
sub
add
cs
inc
push
mulb
mov
push
jl
and
xchg
call
cltd
sbb
out
data16
pop
inc
inc
daa
add
jo
mov
pop
cmp
outsl
mov
xchg
imul
dec
shlb
xor
jp
inc
out
cmp
lea
mov
mov
mov
adc
ds
jns
mov
dec
lret
and
sbb
push
adc
rol
xchg
shrl
dec
pop
mov
and
xchg
outsb
aad
mov
scas
fstpt
int
sbb
outsb
lcall
xchg
sti
xchg
test
pop
scas
dec
nop
sti
pop
mov
mov
xchg
fsubl
enter
mov
daa
inc
mov
aad
jne
rorl
push
adc
decl
mov
dec
fnstcw
sahf
jle
xor
sub
mov
das
and
dec
cli
xchg
inc
and
and
sbb
sahf
fnstenv
bnd
xchg
cmp
mov
xchg
dec
loopne
jl
lea
xor
jb
adc
inc
leave
ss
push
repnz
jmp
test
hlt
push
sbb
xchg
fadds
enter
sahf
mov
jno
xchg
ss
adc
mov
out
push
xor
hlt
inc
mov
std
dec
and
sbb
data16
or
inc
sbb
cs
sbb
push
dec
mov
mov
out
js
sti
cmp
sub
cli
negb
inc
enter
dec
fbld
dec
pop
lods
int
mov
add
push
and
test
data16
out
test
icebp
jecxz
pop
in
popa
cltd
xchg
pop
scas
mov
rcll
mov
mov
insb
mov
loope
call
xor
lock
inc
jae
inc
xor
jne
or
jo
push
popf
pop
adc
loop
adc
mov
lret
in
inc
stos
imul
ss
mulb
cli
test
pop
push
add
xor
cmp
jns
inc
jns
fmulp
addr16
add
outsl
ficoml
loope
jno
sarl
sub
sbb
mov
or
in
ja
jbe
push
adc
test
int3
adc
adc
aas
iret
dec
jmp
sub
mov
xor
or
lcall
je
insl
push
fidivl
adc
ret
inc
shll
adc
mov
fnstcw
xchg
es
push
xchg
cmp
push
push
dec
adcl
dec
xchg
fisubl
push
movsl
xlat
loopne
enter
push
adc
leave
ja
push
daa
and
jb
rolb
in
icebp
or
xlat
mov
out
mov
xchg
lea
insl
push
stos
mov
repz
mov
test
stos
inc
push
xlat
in
adc
repz
sub
lods
stc
stos
xchg
sbb
call
pop
out
mov
outsl
jns
and
and
push
and
push
inc
cmp
xor
sti
cmp
inc
sarl
int3
ss
das
lcall
jmp
pop
xchg
and
push
arpl
fildll
xor
fwait
cmpsb
fcompl
jbe
xlat
or
lret
xchg
xchg
dec
mov
mov
xorl
or
ret
xlat
add
push
jnp
mov
or
or
sub
jge
fstps
sahf
mov
sub
mov
xchg
mov
xchg
inc
push
cmp
pop
dec
fistl
adc
jne
in
xor
xor
ret
cli
sbb
outsl
push
jne
mov
jo
jns
xor
lock
pop
cld
push
pop
push
ss
mov
inc
out
mov
push
mov
enter
inc
sub
stos
repnz
ss
push
dec
in
dec
les
jecxz
pop
mov
insl
cwtl
jns
addr16
stc
sbb
dec
sbbl
cli
inc
jae
dec
adc
imul
mov
test
sbbb
icebp
dec
mov
aam
mov
clc
testb
jae
popa
or
scas
sub
jnp
dec
push
mov
das
daa
stos
lock
mov
or
stos
push
pop
adc
inc
in
into
adc
inc
jo
popa
xchg
arpl
push
insl
movsb
call
jp
mov
mov
xchg
ret
std
push
mov
pushaw
stc
xchg
sub
leave
push
aaa
dec
jp
inc
add
loopne
add
shll
inc
xchg
sbb
popa
in
mov
pop
dec
repz
movups
popa
sarb
mov
int
xchg
or
cmp
lret
mov
push
lret
jecxz
arpl
outsl
jns
jl
or
fcoms
add
push
les
cmpsl
push
ljmp
outsl
dec
std
fldt
pop
shl
cmpb
jae
jp
sbb
or
sahf
stos
fbstp
imul
movsb
pop
out
and
dec
sbb
jne
xor
pop
sahf
add
lods
std
and
icebp
add
mov
movsl
mov
imul
loop
push
adc
insl
loopne
dec
cmp
out
outsl
shlb
addl
int
fdivrs
xchg
loopne
movsb
mov
ret
into
push
jp
jl
mov
iret
push
mov
lret
jns
lret
movsl
jb
or
outsb
jecxz
sbb
push
mov
adc
loop
daa
sub
movsb
mov
and
jno
mov
pop
push
es
xorl
push
pop
rclb
enter
rol
popf
movsl
lock
imul
mov
movsl
lea
sahf
adc
orb
or
jmp
pushf
cmp
daa
je
push
pop
dec
dec
nop
mov
jae
cmpsl
xchg
in
rcr
push
or
scas
or
adc
js
imul
sub
fxch
and
pop
stos
in
sub
pop
cmp
inc
sub
dec
call
xor
fdivrl
repz
inc
cltd
cmp
adc
cmc
sub
out
jmp
mov
pop
push
inc
cs
jmp
sub
mov
mov
or
rcrl
mov
or
jo
in
pop
ret
mov
adc
mov
xor
aas
ja
call
jne
mov
popa
adc
push
cs
scas
test
adc
push
faddl
int
orb
or
push
jmp
jo
pop
inc
and
iret
test
xor
jns
popf
fdivs
or
push
mov
mov
xchg
adc
pop
enter
ds
dec
imul
inc
cmp
call
inc
stc
mov
push
sbb
repnz
mov
out
rolb
sbb
push
lahf
shlb
lcall
pop
mov
roll
repz
add
mov
xchg
xchg
xchg
in
insl
pushf
lret
and
mov
test
jns
jno
mov
inc
jb
pop
pop
fdivl
lods
cli
xor
cltd
icebp
xor
insl
outsl
add
mov
rcl
or
dec
or
mov
in
sahf
les
fistpll
mov
mov
or
jae
ss
ljmp
fisubrs
dec
dec
testb
and
push
mov
cmp
push
push
xchg
pop
mov
mov
arpl
pop
out
jno
mov
inc
int
cmp
lret
ret
outsl
dec
pushf
pop
sbb
cmc
movsl
push
xlat
mov
andb
das
fldt
cmc
in
mov
arpl
xor
addr16
inc
or
or
loop
idiv
in
jge
xor
ss
loope
or
int
inc
movsl
sub
in
mov
xlat
dec
adc
mov
push
sti
test
jb
lods
mov
sub
sub
idiv
lea
rcrl
jns
add
push
cmp
jne
xchg
adc
imul
push
fs
and
pop
inc
movb
roll
push
mov
or
dec
pop
test
into
and
jecxz
mov
adc
jne
incb
fstl
hlt
cltd
cs
movsl
es
and
lcall
sub
jle
jle
sbb
outsb
nop
cmpsb
adc
or
jmp
inc
sub
mov
test
cltd
repnz
or
mov
xchg
ds
add
pusha
enter
mov
fdivl
push
sbb
and
bound
mov
lret
outsb
ljmp
leave
xor
or
mov
rcrb
testb
cmp
or
push
lods
cmpsl
sbb
movsb
lret
nop
cmp
push
fdivl
push
test
push
stos
lret
xchg
push
loop
push
sub
adc
xchg
push
xor
jns
mov
cmc
mov
mov
pop
push
imul
mov
mov
dec
push
or
ja
addb
adc
add
mov
mov
adc
jns
add
rcll
cwtl
dec
xor
inc
pop
lret
jl
jbe
ljmp
push
fnstsw
test
xchg
push
fs
in
and
sub
adc
lcall
loope
div
jl
lcall
daa
pop
push
push
jae
cli
sahf
jp
push
mov
jg
ds
xor
cmc
addl
iret
inc
xor
in
in
mov
cld
in
adc
fwait
les
popa
movsb
lcall
xchg
jns
xor
or
es
faddl
cmp
sub
lahf
push
int3
mov
cld
ss
mov
cmpsl
sbb
fcomps
xchg
clc
test
adc
cmc
dec
jne
lods
popa
sub
lods
pop
or
xchg
in
movsb
js
cld
clc
aas
scas
aam
pop
fisttpl
sub
jecxz
loop
lret
sbb
loope
sub
cmp
push
cmp
mov
movsb
mov
andb
mov
test
adc
cmp
xlat
test
lret
decb
lret
cli
stos
xchg
mov
mov
mov
or
addb
or
pop
sub
imul
pop
das
insl
dec
or
pop
adc
clc
or
outsb
rolb
repz
mov
fwait
jo
mov
nop
test
aad
test
cwtl
dec
xlat
add
clc
add
mov
cmp
mov
sbb
imul
sbb
push
test
stos
add
scas
aad
out
inc
lahf
jne
lret
or
stos
shl
and
rcrl
cmp
fdivs
mov
cmp
or
mov
leave
in
fbld
aaa
pop
xchg
jbe
aas
insl
ret
sub
cld
mov
jle
dec
cmpsl
jae
scas
arpl
push
popa
mov
xor
arpl
dec
sub
sub
sbb
mov
mov
sahf
and
inc
xchg
xor
push
divb
dec
aaa
cmp
sbb
dec
push
daa
rol
loopne
fst
outsl
ficoms
mov
adc
pushf
xlat
jbe
bound
ja
hlt
or
sub
sub
cmp
jne
jne
push
add
bound
dec
xchg
or
inc
data16
mov
adc
mov
cmp
pop
pop
mov
xchg
js
outsl
jle
push
jb
fists
inc
outsl
test
sbb
or
mov
dec
cmp
bound
testb
lahf
ret
sub
sub
mov
outsl
out
insl
lret
andl
shr
notb
inc
mov
lahf
enter
adc
popa
test
cs
push
loop
repnz
movsl
enter
and
cmpsl
dec
and
push
adc
repz
loope
cmp
scas
stc
das
and
sbb
rcrb
push
cld
dec
adc
int
inc
test
dec
mov
lods
adc
or
pop
lcall
cmp
test
hlt
mov
cmp
push
jmp
sbb
lods
movsb
push
ret
fdivrp
cwtl
xchg
inc
adc
mov
aad
repz
adc
dec
and
mov
emms
lret
push
inc
fwait
jne
lahf
test
or
mov
mov
bound
insb
out
pop
add
push
dec
repz
and
xchg
std
das
adc
sbb
imul
sub
mov
int
iret
data16
jae
jmp
xor
pusha
inc
btcl
jb
daa
mov
bnd
stos
mov
sbb
push
jo
sbb
xor
bound
ds
inc
fstpt
xchg
mov
mov
and
bnd
and
lods
sbb
or
ret
mov
xchg
jae
dec
xchg
pop
push
ja
pop
jno
adc
enter
rorl
test
insb
or
jo
push
jmp
sti
or
aas
lock
mov
aaa
jne
cmpsl
mov
ret
and
push
loope
xchg
out
imul
leave
xor
and
mov
adc
push
xor
inc
push
pop
xor
cmp
mov
jp
mov
rorl
stos
jge
jl
jmp
mov
fsubs
push
in
dec
cmpb
jno
xchg
mov
xlat
adc
fs
movsl
and
es
cwtl
xor
cltd
popf
sbb
stos
xor
stos
stc
fiaddl
fbld
dec
fnsave
sub
mov
jge
xchg
imul
push
shr
cmp
mov
pop
xchg
dec
ds
ljmp
mov
dec
in
sarb
xchg
push
hlt
sahf
pop
int3
and
jl
fadds
movsl
cmp
xor
mov
mov
enter
notb
dec
sub
push
push
xchg
rcll
iret
shlb
adc
inc
pushf
dec
mov
ret
mov
inc
add
mov
pusha
hlt
dec
dec
jle
filds
aam
mov
xor
mov
cs
jns
mov
jg
mov
xor
pop
jns
push
mov
xor
mov
pusha
jl
push
inc
push
add
xor
push
aam
jae
mov
add
lock
mov
addr16
jle
and
jg
fimull
push
in
xor
sbb
and
pop
push
jno
sahf
jbe
mov
mov
jl
pop
mov
xchg
pop
jp
les
sbb
repnz
mulb
aas
add
jnp
out
pop
aad
mov
pop
fsubrs
movsl
gs
or
xlat
iret
negb
add
push
or
xchg
push
add
in
mov
insl
lods
pop
es
mov
in
jbe
outsl
repz
fdivs
sbb
stos
jle
adcl
int
test
push
scas
dec
stc
roll
mov
mov
inc
mov
sub
add
or
dec
sbb
std
jns
xchg
xor
out
out
int
rorb
jnp
das
cmpsb
xor
push
xor
xorl
jno
mov
lock
or
sub
or
loopne
ss
ret
or
icebp
nop
mov
mov
pop
or
inc
mov
aam
aam
das
sbb
sbb
pop
sub
movsl
mov
add
or
xorb
or
adc
mov
jle
sbb
mov
push
jmp
ds
xor
fisubrs
xor
lret
jns
in
mov
cmpsb
loope
cmp
pop
jmp
dec
cmc
or
or
fsubs
push
jo
test
mov
mov
addr16
jecxz
rcr
push
imul
fidivs
outsl
addl
orl
mov
les
jno
xchg
andb
bound
cmpsl
pop
xchg
ret
xchg
fidivrl
movb
mov
push
lret
fstpt
ljmp
inc
or
out
int3
xor
jp
mov
jmp
add
aam
jle
jge
push
ja
repnz
and
pop
test
ss
sbb
push
xchg
inc
jmp
xchg
jbe
pop
or
loopne
mov
faddl
mov
pop
adc
add
cmpsl
mov
das
pop
jb
or
enter
adcb
outsl
mov
xchg
xchg
and
out
out
lock
and
mov
adc
xchg
sub
ss
rorl
jmp
clc
and
mov
std
cmpsb
ficomps
int
aad
cwtl
fsubl
pop
mov
sub
pop
sahf
scas
rorl
inc
ds
cmp
mov
sub
ret
insb
cmp
fildll
shrl
pop
xorl
outsl
pop
mov
popf
lea
test
jmp
mov
sbb
sbb
sub
mov
jno
push
loopne
xchg
lds
pop
xorl
loope
popa
dec
xlat
aad
ret
pop
cmpsb
or
pop
sub
sub
int
sarl
stc
and
dec
mov
mov
sub
add
insl
mov
sub
pop
popa
jns
mulb
test
lods
movsl
pop
jns
aas
sub
test
xlat
out
loope
lea
and
cmp
push
inc
test
mov
sub
loopne
sahf
shll
and
add
sub
adc
mov
dec
ret
data16
sub
es
out
mov
or
mov
jmp
and
mov
jg
mov
loope
mov
lock
inc
dec
movsl
mov
add
and
mov
shll
mov
mov
mov
shrl
add
xlat
sbb
cmp
ljmp
outsb
fiadds
std
bound
test
mov
add
aam
or
pushf
sub
mov
sar
jg
jp
icebp
fldenv
inc
mov
sub
rclb
rclb
fwait
lret
test
push
or
hlt
repz
jg
aaa
ret
push
ja
inc
int3
sub
push
int3
repz
adcl
pusha
std
rol
cmp
je
sbb
dec
ret
and
int3
repnz
js
push
shl
pusha
dec
outsl
pop
rorb
icebp
rcrb
test
lcall
repz
xor
dec
sub
xorl
es
out
pop
push
insl
or
enter
in
and
mov
movsb
mov
and
sar
sti
dec
mov
pop
cs
sub
pop
lret
movsb
cwtl
sub
jp
mov
add
xor
or
jge
sub
mov
cmpsl
in
outsl
mov
cmpsb
xchg
pmaxsw
lods
imul
and
inc
sti
lea
cmp
mov
xor
repz
mov
adc
lock
mov
int
lahf
sarl
stc
rcr
sub
movsl
adc
cmp
lahf
jno
jge
nop
cmp
and
iret
push
test
xchg
sub
push
inc
test
xchg
loope
xor
js
orl
inc
mov
sub
jbe
mov
popf
pop
and
mov
mov
mov
xchg
bound
clc
int3
adc
mov
jns
insb
insl
dec
sbb
pusha
sbb
pop
cmp
xchg
fcoms
ficomps
jo
inc
test
push
or
ret
je
es
sbb
hlt
outsl
repz
fstl
in
sub
push
xchg
jle
aaa
test
pushf
cwtl
mov
lret
lret
fimull
imul
lea
or
in
mov
and
push
jb
jns
enter
out
push
sbbb
lods
mov
ds
ret
and
jmp
jb
sbb
dec
hlt
loopne
ljmp
sarl
cli
test
jle
imul
icebp
push
adc
es
mov
out
xchg
and
push
cmp
mov
xor
aam
iret
cmc
adc
scas
xchg
mov
loope
lods
cmp
mov
dec
and
inc
and
push
sti
jp
ss
ds
cmp
daa
hlt
and
sahf
xor
ja
add
sbb
or
iret
negl
fisubl
stc
push
loop
or
ret
push
mov
or
sti
xchg
push
xchg
sbb
in
mov
mov
stos
sub
movsb
xchg
test
fsubr
add
sbb
add
pop
ss
sbb
insl
fwait
stc
inc
pushf
xlat
inc
sbb
cmpsb
aam
fstpt
pusha
pop
in
jecxz
mov
mov
imul
lds
shlb
in
test
and
clc
fdivs
out
hlt
ljmp
ror
imul
jecxz
pop
mov
mov
push
or
data16
scas
pop
adcb
xchg
cmp
lea
push
inc
roll
ret
mov
mov
lods
xchg
pop
mov
or
inc
inc
sarb
add
cld
mov
aad
data16
pop
mov
popa
sbb
fstpt
lods
aaa
xchg
mov
adc
pushf
or
sub
push
mov
dec
push
sbb
sti
testb
dec
push
ja
nop
repz
andl
fs
dec
and
mov
pop
add
mov
push
rcrb
inc
test
fnstenv
cmpsb
clc
es
outsl
adc
xlat
cmp
inc
lea
ja
jnp
push
and
lds
mov
loopne
icebp
fldl
sbb
dec
push
cli
fstpl
mov
push
sbb
jno
and
pop
xchg
and
incb
out
push
andb
mov
adc
fcomi
sahf
out
out
or
jmp
pop
jp
jae
in
pushf
jno
adc
pop
aaa
test
mov
cmc
and
and
adc
add
xchg
push
push
sbb
xchg
jo
mov
mov
pop
xchg
shlb
clc
jge
popf
xchg
mov
shll
lds
jbe
xchg
jbe
mov
xor
xchg
push
sbb
lahf
ror
push
mov
adc
pop
xchg
sbb
test
xor
pop
cwtl
lea
pop
faddl
adc
or
adc
in
addl
inc
movsl
adc
jp
dec
mov
add
icebp
test
jne
mov
mov
push
push
push
push
call
insb
push
pop
xchg
sbb
daa
ficoml
inc
fistpl
mov
or
movsl
stos
jg
dec
sbb
imul
mov
lahf
cltd
mov
sbb
dec
cwtl
int3
xchg
aaa
scas
cltd
xchg
jno
jecxz
cld
unpckhps
gs
xchg
or
nop
mov
inc
ljmp
mov
lods
movsb
lods
adc
inc
lds
dec
in
xchg
clc
sub
in
ret
aad
addr16
xrelease
dec
out
fldl
shrb
test
fdivl
sub
cld
and
dec
lods
fcompl
cmpsb
mov
lcall
and
xchg
scas
add
pop
sub
push
aam
mov
add
bound
mov
mov
adc
inc
xor
test
out
es
pop
mov
and
push
je
test
cmp
dec
cmpsb
lods
lea
jmp
mov
jp
sub
sub
insb
mov
pop
sbb
cmp
int3
int
in
sub
mov
loop
jl
in
push
sub
pushf
pop
and
sbb
jbe
cmp
or
test
pushf
xor
gs
lods
xchg
cmpsb
inc
mov
lds
mov
adc
jmp
jp
out
fadd
aad
jnp
lcall
mov
xchg
and
negl
leave
cmp
sub
push
xor
stos
bound
mov
int3
insb
daa
ret
out
cmp
out
jge
cs
jnp
cmp
pop
jo
xor
mov
ljmp
inc
rorb
data16
data16
andl
cmp
lahf
shll
arpl
inc
cmpsb
ror
jl
and
push
mov
imul
mov
loope
addr16
mov
nop
int
sub
rclb
jge
jne
jle
or
clc
clc
cmc
pop
sbb
stos
fcomps
xor
xchg
cwtl
xor
inc
imull
xchg
pop
pop
loopne
dec
insl
aad
cmpsl
fisubrs
xchg
cmp
inc
lret
xchg
xorl
sarb
add
add
xor
in
imul
cmp
mov
fwait
stos
cmpsl
cld
pushf
mov
fwait
outsb
sarl
push
xor
sub
jns
xchg
push
fs
leave
jge
addr16
mov
out
push
sbb
icebp
mov
movsl
and
int3
push
sub
mov
mov
and
in
inc
xchg
xor
add
mov
push
repnz
sti
lcall
lret
fstpl
pop
and
loopne
inc
fcom
movsl
xchg
mov
outsl
mov
jmp
adc
ja
sub
or
and
dec
int
push
pusha
into
outsl
rcll
int
fs
xchg
jmp
addr16
in
cmp
lods
xlat
std
sub
aad
adc
aas
and
sbb
fistpll
adc
sbb
mov
jg
call
subl
adc
jo
fwait
sbb
mov
popa
dec
frstor
inc
testb
repz
test
lods
mov
out
and
adc
leave
lret
adc
loope
sbb
ds
pop
lods
test
fcomip
mov
mov
ret
out
outsl
dec
and
and
xchg
pushl
mov
mov
daa
mov
data16
adc
xchg
test
stos
or
add
hlt
sbb
or
push
jbe
adc
out
adc
adc
testb
imul
imul
cmp
xor
jl
xchg
pushf
mov
sub
sarl
insb
pushf
jbe
jge
cmp
dec
fbstp
fcomps
psubsb
sub
sbb
inc
imulb
int
punpckhdq
lret
pop
pop
inc
mov
adc
inc
jmp
mov
ljmp
sahf
mov
mov
loopne
add
rolb
jb
call
xchg
test
popl
jp
xor
pop
adc
insl
sbb
jnp
iret
fnstcw
cmpsl
add
fs
fwait
add
sbb
sub
mov
clc
cmp
or
xor
loopne
gs
add
jg
lcall
lds
jmp
xchg
out
ja
js
mov
scas
jge
fxch
dec
mov
cmpsl
lcall
stos
and
sub
dec
mov
inc
sbb
lret
inc
enter
jmp
bnd
sbb
divl
inc
jg
jp
jp
jo
mov
gs
test
add
inc
push
or
pop
loope
mov
in
mov
shrl
aas
add
mov
lea
outsl
clc
daa
insb
inc
cwtl
dec
rorl
push
add
jge
push
das
jg
and
push
hlt
mov
mov
fildll
add
and
push
lahf
xchg
rolb
ficompl
stos
xchg
push
dec
movsl
jae
inc
test
pop
adc
lods
aaa
add
mov
mov
push
call
xorl
jnp
push
inc
dec
cmc
jbe
xor
lahf
std
popa
mov
fdiv
pop
shrb
add
xchg
mov
xor
movsb
shlb
sti
loope
call
jg
jbe
cmp
sti
js
fldt
dec
jge
into
jecxz
dec
inc
xchg
lcall
push
sahf
das
dec
adc
and
adc
lahf
divb
push
lcall
insl
mov
nop
push
sbb
sarl
out
lods
pushf
and
jecxz
pop
call
mov
outsl
mov
shll
push
das
inc
mov
cmc
cmp
jnp
out
fs
mov
push
mov
cwtl
push
push
or
jmp
sbb
hlt
into
xor
jbe
push
lret
lds
push
dec
ffree
adc
fucomp
jmp
sti
jns
xchg
shll
and
iret
jo
test
and
cmp
fs
out
fisttps
nop
and
rcl
push
addr16
and
mov
mov
mov
mov
into
inc
std
fcmovnb
frstor
mov
je
test
sub
jecxz
rorb
out
and
lods
pop
ja
pop
int3
pop
mov
xchg
ret
enter
icebp
in
xchg
dec
mov
cmpsb
add
xor
cmp
hlt
xchg
push
mov
sbb
xorl
lcall
ljmp
cltd
cmpsb
std
or
movl
adc
repz
roll
push
cmpsl
loop
pop
mov
and
data16
sahf
jno
pop
daa
jnp
cmp
cmp
dec
and
jecxz
mov
or
mov
dec
jmp
ror
out
adcb
popa
clc
pop
pusha
fldt
bound
clc
cmpsb
pop
adc
jbe
dec
outsl
adc
movsl
dec
outsl
enter
sub
sar
adc
sbb
pop
sti
push
loopne
lock
fcmovne
adc
ds
ror
dec
jne
hlt
push
cwtl
leave
insb
pop
sti
out
or
lock
dec
adc
mov
hlt
pop
push
xor
rcl
lret
sbb
rol
pop
mov
divb
out
mov
mov
pop
pop
dec
stos
or
sti
clc
or
cmpsb
xor
out
adc
int
add
add
pop
mov
push
dec
dec
push
lcall
mov
xchg
gs
imul
jo
std
sbb
out
adc
and
mov
and
imul
mov
xor
aad
xchg
mov
or
popa
mov
loope
cld
cmc
lahf
push
xchg
sub
lds
dec
out
inc
ja
dec
sti
jg
loop
scas
pop
cmpsl
or
inc
lods
sti
ret
ss
imulb
cltd
rorb
mov
fsubrl
jae
lea
xchg
dec
stos
mov
dec
icebp
xor
xchg
fidivrs
loope
mov
pop
jns
imul
cwtl
out
and
jo
jbe
cmp
or
add
stc
mov
shll
repz
jbe
loopne
pop
cmp
mov
jge
jmp
adc
int
mov
sbb
xchg
call
jecxz
pop
rorb
ds
pop
jae
popl
movsb
iret
pop
andl
add
in
push
scas
enter
aas
mov
loopne
inc
push
lds
data16
test
cwtl
dec
dec
ja
lret
mov
imull
lods
mov
cmpsl
clc
outsb
cmpsb
clc
lret
test
adc
fnstsw
dec
aam
addl
mov
ret
adc
gs
xor
int
shl
lret
adc
clc
mov
mov
jne
and
dec
loope
loopne
lock
jecxz
cmp
push
mov
pop
test
das
shlb
inc
sbbb
rclw
cltd
ja
std
sub
mov
adc
mov
rclb
push
mov
int
push
inc
adc
into
les
aam
push
mov
add
pop
xor
adc
or
adc
lcall
mov
jnp
je
dec
jnp
or
cmpsb
sub
or
ret
outsb
xchg
push
fistl
mov
or
rorb
call
pop
adc
mov
mov
add
test
mov
inc
pushf
int
in
adc
add
js
insl
dec
out
pop
inc
jmp
mov
jbe
inc
ljmp
mov
mov
push
popa
mov
into
mov
in
mov
sbb
push
push
jns
jb
push
and
push
mov
pop
push
cmp
adc
xor
pop
lcall
sub
jns
lock
imul
andb
out
jae
ret
repz
in
jbe
jmp
fimull
pusha
xchg
leave
sbb
rolb
arpl
push
ljmp
xchg
cmpsl
or
jge
inc
pop
push
xor
add
mov
cltd
leave
fnstenv
cmp
icebp
jmp
stos
movsb
pop
outsl
sarb
jns
pop
mov
adc
sub
mov
je
or
imul
dec
dec
pop
add
clc
mov
adc
lods
scas
push
int
xor
aad
xchg
mov
xchg
jb
or
loopne
sti
hlt
aad
pop
andl
subl
sbb
and
push
pop
rcll
mov
mov
mov
jl
cld
sub
mov
fyl2xp1
test
mov
jne
pop
or
mov
dec
push
push
insl
add
xchg
out
rorl
and
data16
fcompp
dec
dec
loop
sub
sarl
cmpsb
cmp
jecxz
push
xchg
xchg
lods
and
mov
loop
dec
xor
ljmp
cld
cmp
insb
cs
dec
inc
push
sub
cld
pop
sbb
aad
aam
adc
mov
into
hlt
jle
pop
ficoml
mov
mov
mov
cmc
jmp
jb
jg
pop
push
mov
test
insl
test
roll
inc
js
stos
mov
sub
lcall
xor
jge
mov
jmp
jmp
nop
int3
lret
xchg
loope
lret
movsl
pushf
je
xchg
push
out
or
push
push
jmp
aad
aaa
push
mov
sub
dec
dec
test
mov
pop
cmpsb
movsl
jne
mov
outsl
inc
enter
sub
cmpsl
and
add
test
dec
lods
ja
insb
loop
mov
mov
popf
jbe
lret
fs
test
movsl
xchg
xchg
js
sub
pop
mov
and
and
jle
ror
xor
xchg
cli
add
pop
int3
dec
push
inc
in
or
xchg
imul
out
pop
loope
pop
mov
inc
mov
mov
push
adc
dec
ds
xlat
add
push
cltd
mov
jge
push
test
out
stos
hlt
mov
jae
into
mov
clc
xchg
xlat
mov
mov
pop
pop
icebp
rcr
lahf
sbb
or
ret
je
xor
fscale
daa
popf
or
or
inc
jge
xchg
mov
shrl
pop
js
call
scas
test
loop
inc
stos
lcall
mov
cltd
and
paddd
mov
xchg
mov
enter
mov
hlt
bound
out
push
lock
ss
subl
ret
add
shll
jl
sbb
stos
mov
cltd
pop
pop
xor
in
push
ss
mov
andb
test
xchg
cwtl
or
cmp
mov
push
xor
int3
mov
and
cmp
and
stos
push
push
iret
int
push
scas
popa
inc
mov
in
push
pop
aaa
aas
pop
inc
adc
mov
add
dec
cld
pop
cwtl
shrb
sti
loope
or
stos
pushf
jle
rorl
sub
cld
out
repnz
inc
das
sub
adc
jno
jp
imul
cmp
xchg
mov
clc
addr16
sub
add
jl
pop
addb
dec
cwtl
jp
movsb
push
repz
test
lcall
cwtl
adc
jnp
or
push
mov
cwtl
ret
and
push
cmpsb
lods
icebp
iret
cwtl
push
les
lea
push
ja
movsb
push
lock
das
jmp
jecxz
pop
sub
adc
inc
push
inc
iret
pop
sub
xchg
adc
outsl
or
addr16
add
lds
lea
scas
sbb
fldenv
lods
inc
outsb
mov
sarb
sahf
test
scas
js
jne
outsb
jns
inc
mov
adc
les
pushw
in
fildl
mov
in
ja
inc
mov
or
dec
cld
jle
icebp
add
fsubrl
jb
cmc
hlt
and
pop
cmpsl
jl
and
mov
aaa
xor
negb
adc
mov
into
out
test
iret
inc
mov
call
popf
adc
shlb
aas
ljmp
scas
out
mov
cmpsl
push
or
or
cmp
inc
mov
out
roll
xchg
daa
jns
lock
mov
gs
adc
xor
push
mov
jb
enter
jo
mov
cli
jbe
mov
repnz
push
test
jle
out
jo
pushf
pushf
mov
mov
mov
iret
lahf
scas
jb
jo
pop
mov
daa
jge
mov
out
inc
cmp
inc
dec
mov
xor
adc
sbb
push
cmp
das
jne
gs
xchg
stos
mov
jo
jle
cmp
xor
mov
inc
ljmp
xchg
or
add
mov
stos
sbb
inc
push
outsl
ret
mov
pusha
fsubrs
sbb
mov
cmp
cmpsb
pop
lcall
sub
stc
fs
xchg
popa
xlat
mov
movsb
mov
mov
cmpsb
andb
es
mov
jl
movsb
cmp
adc
sbb
scas
cltd
push
cld
das
imul
fwait
imul
test
js
sahf
xchg
movsw
mov
les
ljmp
sbb
ja
cmp
push
andl
lret
sbb
dec
dec
cltd
jmp
js
push
or
inc
cmpsl
push
add
jns
adcl
cmp
loop
jecxz
inc
and
sbb
sbb
mov
aad
xchg
pop
dec
mov
mov
pop
fcoml
loopne
xchg
xor
xchg
in
stos
aad
das
jo
lds
cmpb
sub
fsub
rclb
repz
or
inc
je
push
and
cld
inc
push
in
cmp
shrb
cmpl
jo
sbb
hlt
jecxz
dec
inc
and
into
mov
inc
sarb
dec
xchg
adc
fsubl
aam
cs
pop
xchg
pop
cmp
adc
mov
bound
cmp
push
test
orb
mov
pop
cmpsl
xor
or
lock
mov
loop
pop
mov
add
push
push
jmp
xchg
pop
inc
xchg
add
f2xm1
popf
popf
push
add
and
cmp
cmpsb
repz
xor
insl
jae
jbe
push
dec
fidivrl
dec
enter
int
out
inc
xlat
jmp
jb
inc
lods
bound
cmc
lret
xchg
adc
jmp
jp
inc
push
jno
gs
and
jge
int
fwait
cld
mov
std
xchg
and
adc
xor
jmp
int
cmc
xchg
in
lods
mov
shr
repnz
inc
repnz
in
xchg
in
push
fucomi
gs
xchg
adc
cmp
test
out
push
stc
arpl
mov
adc
fsubs
sbb
popa
sti
pop
jne
pcmpgtd
dec
or
dec
int3
sbb
mov
sbb
add
fidivrl
orl
int
mov
out
in
test
cmpb
daa
rcl
jae
ret
pop
lret
inc
std
ret
loope
fucomi
xchg
mov
in
bound
mov
sahf
repz
rorb
mov
sub
arpl
sbb
std
enter
push
mov
lret
fistps
sbb
cwtl
adc
xor
and
jle
or
sbb
pop
and
add
xor
in
pop
push
xor
sub
and
pop
pop
and
jecxz
or
jo
lock
add
push
push
mov
jp
popf
push
mov
sbb
leave
adc
xor
out
mov
and
popa
sbb
jle
or
jno
bound
or
mov
xor
pushf
add
mov
mov
imul
mov
cmpsl
push
cmp
test
lock
dec
fwait
ja
in
add
andb
mov
fidivs
jae
test
sbb
ficomps
test
mov
push
stc
int3
lea
sbb
stc
fsubl
test
jne
mov
inc
orb
dec
sbb
dec
adc
dec
and
popa
mulb
dec
jae
insl
sub
push
rcrl
into
pop
sahf
dec
jmp
push
adc
jno
mov
mov
lret
loop
push
pop
mov
sbb
dec
push
shl
inc
mov
ljmp
arpl
push
test
xor
inc
xor
mov
test
jmp
gs
mov
into
outsb
push
pop
and
sub
fs
int3
std
mov
mov
push
mov
sahf
mov
pop
sahf
jne
out
ficoms
or
mov
or
push
aaa
in
jo
jp
jmp
sub
cmp
and
mov
lahf
pop
mov
mov
scas
sti
push
jg
jae
stos
jecxz
sbb
imul
bound
ret
adc
out
sbb
mov
add
mov
fstpt
ror
outsb
dec
adcb
pusha
jmp
mov
je
jbe
mov
mov
dec
inc
pop
xchg
loopne
scas
movsb
mov
stos
sbb
cltd
call
leave
loopne
arpl
js
ds
pop
pop
dec
mov
cld
fidivrs
loopne
movsb
ds
add
adc
aaa
in
cmp
rcrb
xor
jnp
aam
sbb
jbe
clc
in
js
mov
mov
add
dec
add
cmp
mov
cld
in
cmp
pop
sub
popf
xchg
inc
sub
inc
sub
movsb
imul
mov
sbb
mov
mov
sbb
and
xor
xchg
popa
or
enter
mov
cmpsb
loop
xor
gs
adc
or
or
jns
pop
loopw
add
pusha
pushf
enter
int3
subb
stos
andb
hlt
mov
sub
inc
mov
stc
stos
jp
mov
mov
xchg
cld
out
pop
xchg
leave
xor
fs
flds
push
jg
ja
xchg
dec
or
imul
dec
inc
fisttps
mov
xor
icebp
insl
jecxz
push
jp
iret
push
sbb
or
push
test
dec
leave
clc
pop
adc
sbb
mov
int3
sbb
adc
sub
push
mov
scas
cmp
das
les
mov
pop
ret
xor
lds
adc
and
mov
jmp
rcl
roll
pop
mov
addb
stos
ret
sub
jno
std
mov
cmp
cmp
leave
inc
cwtl
cmp
add
addl
xor
dec
cli
sub
mov
mov
jge
add
xor
inc
dec
xchg
cmc
adc
in
or
sub
jo
aaa
cld
push
idiv
lods
and
out
sti
in
sbb
pop
jb
and
add
lods
loop
decl
pop
repnz
cmpsl
sbb
ss
aad
je
cli
subb
cli
inc
jae
and
push
inc
test
adc
fisttps
ja
inc
in
jne
test
mov
outsl
xchg
push
ss
xor
rclb
cli
divb
sub
fcmovnu
shll
imulb
mov
pop
push
mov
inc
or
pop
mov
jae
out
push
mov
mov
and
call
xchg
fadds
push
mov
in
insb
mov
pop
scas
mov
pop
push
adc
add
out
xchg
and
or
sbb
orb
sbb
sahf
ret
and
icebp
mov
aam
call
inc
shll
add
orb
add
ja
inc
cltd
xorl
cs
pushl
lock
sahf
lret
inc
std
xchg
dec
mov
xchg
dec
dec
sub
or
js
shr
jmp
movsl
mov
mov
popf
shrb
xchg
pop
mov
jb
adc
jecxz
cs
push
xchg
pop
pop
pop
add
cmp
push
mov
cmp
arpl
dec
insl
xchg
fiadds
lcall
mov
lcall
lcall
inc
xchg
dec
mov
jnp
lcall
and
inc
jne
int3
lcall
dec
jle
mov
push
movsb
fdivrs
out
inc
cmp
adc
sub
xor
aas
push
fsubrs
les
outsl
sub
nop
push
mov
add
arpl
popa
adc
scas
insb
nop
xlat
push
dec
mov
test
add
fs
sarb
aam
mov
lock
cmp
lcall
push
pop
sahf
adc
dec
add
mov
or
js
fucomi
sahf
movsl
pop
pop
aam
cld
fs
cmpl
fdivrp
pop
js
cmp
push
dec
and
nop
mov
xor
fiadds
xor
cmpsl
iret
adc
aad
ds
imul
push
mov
mov
sbb
adc
repz
lea
rcl
xor
pop
add
jb
dec
test
sahf
insl
adcl
inc
push
push
sahf
cwtl
mov
jmp
out
inc
xchg
ljmp
negl
test
lds
mov
sbb
enter
mov
movsl
push
inc
subl
int
inc
push
dec
dec
call
imul
xor
pop
mov
fld
cmp
hlt
mov
jnp
in
pop
sti
inc
sub
jno
outsl
jno
add
cmp
add
mov
pop
rolb
mov
dec
dec
adc
sub
inc
ja
jae
inc
jge
data16
mov
xchg
int3
fsubrs
xchg
adc
test
pop
jno
cmp
loop
add
jmp
and
mov
fcomip
pop
lcall
or
aas
adc
mov
adc
insl
pop
xor
out
pop
xor
out
fisttps
movsl
mov
negb
fbstp
gs
in
pop
stos
fisubl
and
jne
icebp
outsl
dec
sarl
mov
lret
cli
data16
stos
jg
rcrl
ret
in
push
mov
dec
and
mov
inc
std
sbb
dec
scas
das
or
leave
mov
dec
or
insl
mov
fcomp
dec
jl
or
cmp
cwtl
cmpsl
sub
lock
out
adc
fdiv
push
xor
fadds
ss
icebp
in
rcr
or
mov
dec
lret
daa
cwtl
cmp
mov
push
rorl
or
nop
insl
repz
xchg
sti
lahf
dec
fcmovnu
push
mov
sbb
shl
cmp
cmp
ret
leave
outsb
sub
rolb
dec
pop
rcrl
push
inc
popa
testb
dec
push
mov
std
lcall
or
cmpsl
shlb
fwait
loope
fsubl
dec
xchg
stc
ds
dec
push
jne
ret
xchg
fwait
dec
xchg
sub
dec
cmp
mov
pop
or
ljmp
jg
fldcw
mov
sub
and
mov
cmp
mov
xchg
inc
inc
lods
insb
cli
dec
enter
ds
adc
and
mov
pushf
cmc
int3
mov
out
sbb
andl
cmp
insl
jmp
in
lods
mov
jmp
out
adc
mov
jge
fisttps
jo
in
out
xchg
dec
xlat
leave
out
push
push
fwait
sub
push
cwtl
inc
fwait
xchg
and
jne
int
int3
inc
leave
mov
leave
out
xchg
lea
hlt
push
sub
or
jmp
mov
in
xchg
add
lret
test
loope
jmp
stos
fdivrs
scas
xor
int3
xlat
xor
pop
mov
jns
sub
mov
push
rclb
pop
dec
xor
out
cmc
imul
insl
mov
cmp
sub
outsl
push
mov
and
dec
outsl
jmp
sarb
pop
dec
fmulp
loope
iret
les
inc
shrl
mov
xchg
sbb
cli
xchg
sub
mov
and
adc
out
mov
dec
xor
fisttps
pop
ficoms
mov
or
cmp
mov
orb
and
mov
dec
aam
pop
push
stc
xchg
gs
push
add
rcrb
aam
push
lcall
adcl
loope
ret
nop
push
cmp
xor
add
cmp
jbe
mov
imul
push
cmp
ret
rorl
dec
xchg
push
ret
maskmovq
testl
nop
mov
notb
fs
xor
aam
pop
scas
and
aaa
xchg
add
loop
ret
sub
jns
idivb
fiadds
std
je
inc
int3
rcrl
inc
cmovg
sbb
movsb
lods
sahf
cld
jle
or
add
out
adc
aam
xchg
mov
in
fsubrl
arpl
loopne
jp
mov
out
push
sub
adc
fstl
stos
inc
mov
test
out
push
pop
xchg
in
popa
mov
jno
cmp
xchg
arpl
sbb
cwtl
add
sahf
xor
xchg
cmp
mov
daa
inc
add
cmp
lret
inc
xchg
pop
andb
mov
xor
push
lods
push
pop
dec
sbb
xchg
pushf
popa
daa
mov
xchg
std
and
aam
fwait
sub
jb
es
mov
in
sbb
leave
mov
push
xchg
mov
jb
movb
cmp
aam
xchg
xchg
mov
fs
adc
adc
push
adc
in
cld
pop
cmp
push
adc
aas
add
sub
jp
xchg
jecxz
add
cmp
mov
out
mov
xor
add
mov
scas
notb
xor
jae
test
dec
jl
popf
mov
stos
lcall
xchg
std
pop
jne
lods
mov
loopne
pop
jecxz
sub
scas
mov
push
mov
imul
mov
sub
jle
sbb
adc
cmp
xchg
repnz
jle
cmp
aad
or
mov
js
decl
adc
arpl
insl
push
filds
cs
adc
mov
pop
sti
in
idivb
and
popa
sbb
cli
les
ret
fmull
xor
add
push
adc
pop
add
std
dec
cmpsb
lock
inc
scas
adc
sti
stos
mov
dec
jmp
mov
in
push
and
dec
mov
jge
cwtl
cmp
in
inc
popf
and
scas
ljmp
dec
jbe
xchg
jns
sub
int
dec
ja
sub
mov
cli
mov
hlt
lds
js
bound
add
xchg
sarl
mov
cmp
mov
inc
leave
pop
lea
fs
mov
cmp
xchg
dec
or
iret
mov
push
imul
mov
out
add
jp
fs
pop
int
mov
or
pop
add
les
shrb
rolb
xchg
mov
insl
inc
ror
sbb
mov
rcll
and
push
push
xor
aad
pop
cmpb
mov
sbb
daa
jg
mov
jnp
add
scas
repnz
mov
and
sbb
ret
mov
shlb
mov
imul
daa
dec
mov
nop
adc
sbb
mov
shlb
pop
or
cmp
mov
mov
xchg
es
inc
hlt
aaa
push
and
sbb
inc
repz
shlb
cmp
mov
adc
and
in
loope
jno
or
xor
jg
mov
jmp
ja
xor
dec
cld
popf
imul
in
jo
xchg
mov
cld
daa
pop
dec
dec
mov
jmp
aas
jle
mov
shlb
aaa
pop
nop
int3
xchg
or
stc
mov
lret
adc
clc
sub
push
enter
insb
test
dec
cmp
jge
mov
clc
cmp
sbb
les
repnz
xchg
xchg
mov
inc
sti
js
out
gs
clc
ror
pop
faddl
lret
fmulp
iret
test
mov
push
loop
inc
adc
cmpsb
cmp
shlb
cmc
mov
movsb
cmp
push
jge
cmp
push
mov
xchg
hlt
mov
arpl
and
jno
dec
pop
ljmp
icebp
sbb
push
das
pop
cs
adc
ja
lret
jmp
mov
pop
pop
test
jle
out
cmp
push
jle
adc
xchg
push
out
popf
inc
inc
les
jbe
fs
mov
cmp
cmp
jmp
movsb
lods
movsl
fldenv
cmp
data16
jo
lret
pop
mov
in
sub
cmp
pop
shll
mov
jo
push
pop
jge
filds
scas
and
push
push
icebp
push
movsb
cmp
rcr
and
mov
je
iret
inc
stos
ror
sbb
sub
lret
push
adc
jmp
sub
xlat
cwtl
inc
in
jns
jnp
jae
push
js
call
fstpl
pop
cmp
inc
jb
add
push
aad
les
adc
add
shlb
mov
mov
es
orl
adc
sub
xor
push
movsl
adc
cmpsb
sti
shrl
mov
divl
adc
enter
out
jo
rolb
push
lods
inc
sbb
dec
cmpsb
jno
xchg
fwait
mov
imul
mov
push
fs
pop
hlt
cmp
mov
mov
aam
mov
adc
sahf
mov
jbe
mov
jmp
out
sub
mov
lods
xchg
lods
rep
iret
ret
push
jle
dec
pop
mov
jge
pop
push
sbb
das
mov
popa
mov
mov
test
and
ds
mov
sahf
cld
outsb
xor
mov
sbb
jno
add
fwait
setge
pop
out
outsl
sbb
pop
push
jb
clc
push
jae
stc
rorl
js
aam
inc
sub
dec
lods
arpl
pop
mov
push
adc
push
mov
push
dec
mov
repnz
xchg
pop
sti
loope
lods
adc
xor
jmp
mov
pop
cli
insl
lret
sub
leave
cmpsl
mov
test
inc
test
aaa
inc
popa
subl
test
out
dec
repz
jno
add
dec
cmpsl
jns
aad
mov
dec
sub
xchg
xchg
cwtl
jecxz
jae
js
popf
xchg
adcb
push
xor
or
pop
mov
int
inc
aad
inc
adc
xor
mov
ja
mov
movsl
stos
xlat
mov
iret
dec
cmp
dec
mov
out
mov
sub
scas
and
pop
xchg
xchg
cmp
push
add
and
repz
jnp
fbstp
dec
cli
dec
mov
jae
jae
jmp
imul
call
xchg
sub
daa
sub
out
data16
pop
int3
ret
paddusb
roll
adc
sub
sub
sahf
je
test
adcl
leave
cwtl
dec
repnz
lds
or
movsb
add
out
or
cmpsb
icebp
pop
int
sub
popf
push
fwait
in
sub
sbb
loop
test
ljmp
addr16
cltd
or
int
xor
cmpsl
or
and
loopne
sub
lds
ret
pop
ja
xor
sub
imul
iret
addr16
mov
xchg
mov
dec
test
sub
dec
mov
fwait
and
loope
push
jo
std
and
mov
fmuls
in
in
lret
mov
enter
loopne
mov
mov
in
loop
sub
stos
and
adc
hlt
push
adc
out
in
add
sahf
jbe
out
fmull
dec
int
fs
test
test
pop
jmp
xlat
dec
dec
sub
inc
insb
loopne
push
mov
ficoml
out
mov
sbb
outsb
mul
add
dec
sbb
lcall
jns
mov
inc
mov
pop
pushl
arpl
push
mov
jp
repnz
xor
test
or
dec
push
popf
jecxz
dec
mov
fstpl
inc
fsubrl
inc
mov
sbb
movsl
call
fwait
clc
mov
aas
std
jnp
pop
bt
leave
outsb
out
jmp
push
jle
mov
pushf
pop
push
cmc
movsl
xchg
gs
inc
sbb
pop
mov
icebp
out
scas
jne
popw
add
inc
inc
in
fdivl
push
inc
dec
pop
inc
cmp
repnz
adc
xchg
push
jne
jae
fdivs
mov
xor
xor
mov
test
mov
ss
sahf
stos
jl
cmp
xchg
mov
or
dec
ret
or
fadd
ljmp
lock
neg
xchg
leave
je
in
mov
add
in
ret
out
ss
hlt
mov
pop
fs
ret
outsl
test
sbb
testl
xchg
rcrl
push
add
idiv
inc
cmc
and
fidivrs
sub
push
mul
mov
fildll
push
inc
push
lret
adc
call
and
xchg
int3
int
call
cmp
mov
or
xor
xor
ret
mov
fwait
sbb
rcr
jg
and
sub
in
popf
pop
ret
fxch
aas
lock
test
xchg
adc
pop
loope
xor
inc
xchg
lods
pop
int
or
gs
inc
jno
fprem1
adc
cmp
hlt
stos
xor
jmp
sub
and
out
fstps
and
int
rcrl
int3
mov
fmul
lea
scas
jl
mov
stos
fisttps
mov
jb
movb
pop
paddw
cmp
in
sub
shr
pop
mov
insl
rol
fwait
push
out
jnp
cltd
mov
lock
enter
loop
inc
sbb
jecxz
xor
push
push
mov
push
ret
jmp
mov
mov
cmp
sub
xchg
dec
clc
or
pop
inc
fdivrp
movsb
ljmp
sbb
sarl
lahf
testb
cmp
add
and
fbstp
jae
je
dec
mov
or
and
and
in
add
in
jge
sbb
inc
shll
push
subb
jae
and
out
cmpsl
movsb
xchg
or
pop
sarl
inc
add
es
movsb
jns
clc
jmp
bound
rorl
or
xchg
hlt
std
dec
xchg
cmp
fmuls
cld
test
pop
dec
mov
jle
lahf
mov
lahf
shlb
jno
mov
sub
pop
mov
cmp
cwtl
fstpl
aam
clc
xlat
dec
and
decl
js
lock
cli
adc
fnstcw
jle
out
stos
loope
inc
cli
or
pop
lahf
jnp
push
dec
cld
inc
imul
jnp
adcb
nop
popa
push
inc
jl
sub
push
int3
push
ret
ja
imul
aaa
aas
xchg
adc
addr16
sub
ljmp
cmp
cli
inc
mov
push
pushf
into
cmp
jle
pop
inc
mov
and
mov
cmc
sti
xchg
dec
leave
or
das
jo
xchg
bnd
popf
es
lds
and
xchg
ljmp
lods
andl
pandn
inc
inc
adc
add
aad
inc
lret
mov
xor
xor
xor
pop
lock
or
jp
add
test
jl,pn
jg
cli
mov
pop
sahf
mov
rep
sub
pop
pop
js
icebp
test
sub
mov
add
adc
jbe
sbb
outsb
mov
les
call
push
or
cmp
imul
sbb
fadds
addl
hlt
pop
xchg
nop
jo
or
stos
push
dec
and
insl
cmp
push
push
popa
or
fiadds
sbb
jb
xor
and
int
xor
repz
addr16
test
iret
ret
fisttpl
lahf
or
andl
enter
imul
adc
or
insl
mov
int3
mov
aad
or
and
fnstcw
or
push
pushl
and
mov
adc
mov
cmp
jmp
adc
add
jl
mov
shrl
aam
cmpsl
hlt
out
leave
xchg
mov
mov
negl
or
mov
das
xchg
setne
mov
sub
xor
gs
mov
stc
and
cmpsl
rcll
sbb
xchg
and
sbb
sub
pop
mov
pop
push
pop
mov
imulb
fcomps
rcll
lods
sahf
into
mov
inc
outsl
adc
push
aaa
or
int
lds
lods
or
cvtpi2ps
push
int
stc
adc
jbe
in
imul
in
and
sbbb
cmp
ja
js
or
sti
pop
mov
int3
jp
shrl
jge
inc
andb
xor
enter
mov
adc
mov
mov
mov
mov
rorl
jmp
jle
jmp
push
jne
inc
add
push
mov
mov
jge
push
in
inc
jmp
xlat
jnp
test
mov
mov
jg
mov
xor
mov
loopne
mov
cmc
add
fwait
jb
in
test
mov
data16
nop
jmp
jg
imul
lods
rclb
pop
int3
sti
test
adc
inc
incl
lds
mov
lret
leave
jns
push
fcoml
and
mov
adc
pop
or
add
xchg
rorb
xchg
and
mov
fidivrl
out
push
xchg
cltd
daa
adc
or
mov
ljmp
js
inc
subl
push
cltd
cmp
fdivs
out
call
jle
push
aaa
mov
sub
mov
adc
stc
dec
stos
xchg
add
int3
push
popa
cmp
outsb
aaa
mov
mov
movsb
bound
jnp
int3
mov
test
lcall
test
jmp
xor
push
in
xor
mov
or
movsl
xchg
add
pop
pop
punpckhwd
pop
mov
mov
and
pop
adc
out
pusha
ret
pop
pop
lods
jmp
add
xchg
dec
cld
jno
xchg
out
aaa
xor
or
pop
or
imul
pop
xor
sub
enter
jno
adc
pop
cmp
in
mov
stos
push
cli
xor
mov
push
inc
lcall
cltd
sbbl
scas
ret
mov
pop
sbb
fldcw
cmc
test
add
loope
popa
or
movsb
leave
add
xchg
cmp
inc
jle
mov
iret
xchg
pushf
fsubrs
adc
jne
jg
jne
xchg
cmpsl
mov
add
xchg
jns
pop
clc
push
mov
out
pop
push
mov
xor
cli
loopne
hlt
sbb
or
xlat
sahf
mov
pushl
ljmp
and
or
and
es
stos
out
and
fdiv
int
jecxz
jnp
test
cmp
in
fmulp
add
xchg
fisubrl
mov
sbb
aam
out
mov
dec
pop
jmp
in
sbb
test
push
in
cs
nop
adc
insb
and
lret
jmp
cltd
sbb
pusha
outsb
inc
movsl
sahf
adc
dec
inc
or
push
fsubs
sbb
dec
mov
sbb
add
pop
js
dec
dec
push
pusha
outsl
jo
push
std
mov
xchg
cs
out
push
and
pop
and
cwtl
or
scas
mov
sbb
pop
lret
je
inc
lcall
inc
lods
lock
out
loope
shl
dec
push
lods
push
jg
sub
and
iret
mov
je
mov
push
adc
pop
fistpl
stos
inc
xlat
adc
cmp
hlt
orb
out
cwtl
outsl
push
mov
das
arpl
lock
push
lcall
sbb
fcoms
ljmp
cmpsl
mov
mov
push
cmpsl
cwtl
mov
mov
dec
sbb
dec
in
pop
dec
pop
push
lea
lods
shrl
rcll
and
xchg
stc
in
out
mov
aaa
xchg
ret
imul
mov
mov
pop
or
cmp
inc
ds
dec
cmc
xor
mov
shl
bswap
cmpsb
ss
sbb
push
stos
mov
lock
decl
xor
xchg
sub
jg
int3
sbb
imul
add
rclb
das
scas
scas
pushl
mov
push
andl
push
or
mov
adc
fidivl
lretw
out
das
cmp
and
adc
and
mov
or
insb
push
mov
fidivs
xchg
pop
int3
and
jnp
xor
add
scas
xor
icebp
push
imul
lods
adc
pop
idivb
push
shl
fists
notb
push
enter
adc
pop
enter
gs
jmp
in
pop
clc
shrb
ret
xorb
sub
out
push
mov
jp
hlt
test
mov
jbe
sbb
ja
push
sub
cmp
dec
mov
pop
fwait
imul
stos
dec
add
stos
test
popf
sahf
dec
and
push
jb
or
sbb
scas
mov
pop
add
mov
cmpb
push
testl
mov
xchg
in
mov
icebp
stos
mov
roll
fists
outsb
scas
pushf
clc
out
pop
xor
leave
inc
negl
jne
inc
sti
xchg
or
sbb
dec
dec
sbb
adc
mov
fs
mov
pop
push
cmpsl
mov
in
jo
es
lahf
sbb
das
inc
pushf
es
nop
aaa
cmp
jp
jbe
clc
mov
in
and
inc
loop
sub
cli
add
fsubrs
cmp
loope
cwtl
ret
adc
mov
lret
imul
add
repnz
add
pop
xor
push
mov
push
lock
pop
and
dec
pop
shrb
std
push
adcb
daa
mov
mov
fcmovnb
mov
decl
sbb
adc
mov
mov
or
fdivs
xchg
mov
test
movsb
and
ds
push
adcl
cmp
ret
inc
and
jecxz
jg
adc
cmp
pop
fadd
inc
xchg
sub
mov
imul
loope
xor
roll
iret
fwait
cmp
pop
xchg
outsl
cld
les
scas
rcr
jnp
cmp
movsb
push
dec
cmp
dec
mov
outsb
jbe
out
rcrb
push
cmc
xchg
rcl
inc
adcb
imul
mov
test
and
mov
rorl
aam
lea
inc
int3
in
xor
inc
push
jge
mov
pop
mov
pop
into
pop
adc
xlat
mov
test
add
jp
push
jo
shl
pop
xchg
mov
cli
push
std
subb
jecxz
inc
lret
add
lods
fcompl
in
ja
mov
out
andl
push
cmp
dec
push
movsb
xchg
mov
and
cmp
dec
adc
not
data16
push
test
sub
icebp
rcl
dec
mov
xor
or
aam
sub
cmpsb
dec
fidivl
push
push
dec
repz
pop
mov
push
sbbl
xchg
adc
or
cli
push
add
pushf
int3
add
adc
cmp
or
scas
mov
sub
jl
jae
movsl
xlat
sub
push
sbb
sub
dec
lret
dec
arpl
inc
sbb
mov
lcall
adc
insl
dec
pop
mov
es
sub
cmp
and
cmp
gs
cmp
jmp
hlt
pushf
jae
inc
cs
push
lret
shlb
aad
xchg
cltd
andl
jno
in
and
clc
jo
insb
inc
negl
lret
xor
js
pop
das
jge
insl
mov
xchg
cwtl
popa
push
sub
and
jg
call
add
and
pop
xchg
sbb
add
pause
subl
mov
les
movsl
daa
nop
push
add
and
call
fucomp
pop
sarb
loop
out
lahf
push
jo
or
pop
jle
mov
js
dec
dec
icebp
push
jmp
jl,pt
out
push
mov
dec
or
mov
fmuls
push
mov
add
pop
push
cmpsl
xor
mov
or
jo
lock
xchg
inc
and
mov
mov
cmpsb
fdivrl
mov
hlt
mov
addb
daa
daa
ds
push
jmp
or
hlt
aaa
enter
test
faddp
cmp
mov
ss
pop
inc
jns
push
fildll
fstpl
xchg
jb
inc
inc
repz
data16
js
mov
mov
pop
dec
jno
push
outsl
inc
fwait
aas
notb
adc
inc
ja
in
pop
out
fwait
or
xchg
das
int
jecxz
insl
xor
js
pop
cmp
lret
mov
ljmp
adc
mul
xor
fists
pop
testl
push
jno
xor
jmp
sbb
pusha
add
dec
sbb
out
push
sub
sub
shr
insl
xchg
cmp
in
pop
xchg
mov
mov
sti
mov
cmp
data16
movsb
cmpsb
movsl
dec
neg
and
sbbl
in
push
outsl
shlb
lret
mov
call
pop
and
push
mov
jecxz
aad
mov
mov
stos
mov
ret
fadds
jle
add
inc
cmp
xor
push
lea
dec
sbb
add
idivb
outsb
add
pop
pushf
cmp
pop
enter
jecxz
std
popf
sbb
pusha
mov
fcoms
jle
shlb
dec
mov
dec
movsb
jg
es
xchg
addl
insl
add
fidivrl
push
push
pop
cld
sbbl
pop
pop
iret
cld
inc
mov
push
les
out
or
pushf
push
movsl
jo
or
shrl
xchg
inc
push
sub
fisttpl
outsb
pop
imul
in
and
inc
cmp
pop
mov
dec
add
mov
mov
dec
es
data16
shlb
cmp
fld
shlb
stos
xchg
dec
test
out
or
mov
cmpl
jno
rcrl
xchg
inc
adc
mov
iret
cmpsb
jle
outsb
cld
jnp
cmc
pop
mov
es
andb
pop
ljmp
and
lds
cmp
push
push
mov
mov
inc
pushf
sbb
scas
inc
cmp
sub
dec
out
adc
or
cli
and
into
test
mov
lds
fbld
pop
mov
and
pushf
mov
dec
enter
scas
dec
jno
and
aam
pop
push
mov
pop
sub
inc
inc
xchg
jnp
ljmp
dec
or
dec
jbe
inc
sbb
iret
popf
mov
xchg
idivb
dec
cld
push
out
dec
call
xlat
lods
push
das
add
data16
ljmp
outsb
div
lods
mov
dec
cld
and
mov
mov
out
xchg
cmp
ucomiss
fadds
rcr
or
lret
jo,pn
test
jnp
fucom
cwtl
xor
stc
or
ss
xchg
cmpsl
mov
pop
mov
lahf
out
jno
aaa
data16
movsl
hlt
xor
call
mov
lcall
jmp
push
cmpsl
mov
insl
subb
pop
pusha
aas
sti
dec
cltd
fsubs
mov
jbe
dec
or
or
call
in
push
dec
adc
sbb
mov
shll
jmp
das
mov
addr16
ja
mov
or
sbb
daa
imul
dec
dec
bound
shll
test
lret
test
sub
imul
adc
inc
mov
fiaddl
repz
jmp
test
push
adc
mov
cmpsl
dec
mov
icebp
shlb
sbb
pop
jno
adc
icebp
icebp
ficompl
push
stc
inc
shld
sub
aaa
cli
mov
add
das
lret
xor
and
cmp
divb
cmpsl
mov
xor
mov
or
or
enter
add
or
int3
or
imul
cld
mov
mov
pop
push
adc
neg
in
cmp
fucomp
lret
imul
xchg
mov
sbb
cmp
es
inc
es
enter
ss
add
out
fcomi
mov
push
fiaddl
inc
icebp
popf
and
xchg
data16
loopne
cli
test
xor
dec
out
cmpsb
mov
push
data16
mov
jg
in
rclb
aaa
imul
loope
mov
outsl
mov
gs
fisttpll
mov
cmp
mov
mov
fisubrl
pop
lock
xchg
pop
in
push
cmp
sbb
and
sub
leave
insl
and
lret
outsb
jns
sbb
xor
mov
xor
lcall
lea
cmp
jmp
je
lcall
sub
push
inc
xchg
lods
push
mov
mov
cld
popa
xchg
cmp
mov
data16
arpl
andl
lods
fldcw
shrb
cmc
sub
sub
mov
and
loopne
and
add
dec
inc
call
ds
ret
std
mov
sahf
sahf
ror
cmp
adc
mov
stos
xchg
mov
sahf
sbb
and
dec
xchg
lret
mov
mov
pop
fsubrl
inc
or
cmp
sub
bound
filds
movsb
sbb
shrb
ljmp
mov
mov
in
cmp
mov
jecxz
int3
jbe
mov
pusha
ds
subl
mov
arpl
ss
es
xor
xor
sub
push
push
mov
cmp
dec
test
pop
test
sbb
mov
ds
out
stc
cmp
dec
mov
cmp
mov
test
push
and
pop
sarl
loopne
lods
xor
push
mov
fwait
xor
imul
lods
xchg
popa
jle
dec
ss
pop
push
or
dec
movsl
jne
std
imul
dec
jge
sbb
enter
inc
scas
icebp
jmp
adc
mov
movsl
fld
cmp
xchg
sti
jg
into
jno
sarl
push
push
ljmp
or
mov
mov
add
fsubs
push
lods
test
cmc
test
outsb
ss
xchg
inc
aas
or
dec
xchg
imul
cmpsl
push
aad
es
ss
daa
inc
dec
mov
xor
adc
hlt
mov
xchg
jb
test
sub
sbb
clc
icebp
mov
int3
jmp
aad
adc
or
ret
jne
or
mov
mov
cltd
imul
dec
idivl
aad
mov
pcmpeqw
inc
ljmp
das
mov
xor
loope
sbbb
sbb
sub
jle
lock
dec
cmp
imul
pusha
mov
mov
dec
test
push
jbe
lds
dec
and
sarl
dec
in
call
jg
mov
push
loope
add
push
ficoms
int
pop
mov
shlb
stc
adc
cmp
pop
rcr
or
push
lret
ja
mov
add
cmp
cmc
test
add
ret
aas
add
push
mov
insb
daa
pop
cld
xchg
divl
push
adc
cmp
mov
jle
mov
xchg
inc
cld
sub
stos
inc
repz
xchg
inc
mov
jge
cld
mov
bound
or
out
and
int3
popa
scas
loopne
mov
mov
push
xchg
pcmpgtb
lea
mov
dec
addr16
push
push
dec
xchg
sub
add
push
mov
jge
jge
pop
stc
pop
sub
and
lret
in
fnstenv
xor
adc
movsb
cmp
aam
mov
push
xor
rorb
mov
sbb
inc
or
mov
scas
push
pop
mov
mov
mov
mov
stos
sub
fldt
or
fisubrs
idiv
shrl
jmp
and
sub
add
dec
hlt
ror
fsubrl
mov
fisubs
xchg
imul
outsb
cmpsb
or
orb
cmc
orl
jo
out
mov
dec
dec
push
push
jg
ja
mov
rclb
mov
das
mov
mov
fisubrs
pushl
sbb
subl
outsb
xchg
xchg
cmpsb
xchg
ss
js
out
fcompl
fs
in
stc
cld
ret
iret
aad
push
aaa
sub
push
int3
push
fcompl
enter
jne
mov
gs
mov
and
aas
cmpsl
mov
push
and
cmp
data16
dec
sub
xchg
mov
add
or
jns
movsb
jns
scas
icebp
gs
xchg
addb
push
pop
hlt
dec
mov
jl
xor
into
leave
sub
and
in
add
outsl
inc
fsubrl
js
push
lret
sub
dec
mul
mov
xlat
clc
aas
lods
sub
push
popf
pop
mov
cmp
sub
sbb
lret
sub
cmc
mov
xchg
cmc
int3
and
push
sbb
ljmp
data16
adc
je
popf
mov
cwtl
shrl
repnz
jmp
insl
sbb
lds
insb
add
mov
insl
pavgw
mov
in
into
dec
adc
cmp
mov
nop
hlt
insb
xor
in
stos
sbb
sbb
pop
shll
adc
jg
or
sahf
and
or
ja
dec
jmp
mov
ss
movsb
fsts
insb
add
mov
add
or
std
or
aam
cmp
cli
outsl
pop
mov
repz
insb
sbb
addr16
cmp
into
or
xchg
cmpsl
arpl
out
mov
std
lds
add
pop
and
sarl
into
pop
mov
and
call
dec
xchg
jmp
add
push
xor
outsb
enter
lods
stos
loope
lret
pop
out
xor
pushf
mov
out
inc
mov
pop
jnp
xor
mov
add
mov
nop
sbb
mov
or
shrb
icebp
jp
and
jbe
icebp
or
pop
mov
adc
lds
mov
rcrb
fbstp
test
mov
mov
pop
fs
mov
sbb
cs
cltd
cmpsb
fsubr
mov
cmp
cs
mov
inc
aam
xchg
cmp
or
mov
movsb
inc
scas
mov
xchg
loope
xor
xor
mov
clc
scas
inc
dec
push
iret
sbb
stos
out
lods
lods
add
fistps
cltd
fucom
push
fldt
add
push
xlat
sub
ret
or
mov
inc
jo
inc
mov
ss
in
xchg
mov
jmp
mull
out
repz
mov
inc
or
xchg
push
adc
and
add
ja
dec
call
and
xor
cwtl
insl
sub
loopne
jne
push
repz
pop
dec
inc
sbb
aam
and
mov
xor
aad
jo
push
fcmovnu
jns
pushf
ficoms
stos
lahf
adc
repnz
sarl
sub
sub
add
mov
inc
call
nop
cmpsb
sub
in
ret
int
int3
cmc
mov
cmp
or
cs
and
xchg
lahf
js
pushf
add
insl
or
hlt
mov
lds
push
test
and
mov
dec
adc
cmp
push
or
int3
int3
dec
adc
mov
jnp
and
sarb
push
clc
popa
imul
cmpsl
mov
and
out
lods
add
add
xor
movsl
imul
adc
sub
dec
loope
rcr
mov
dec
es
mov
sub
mov
in
pop
pop
adc
mov
scas
mov
inc
fnstcw
and
mov
mov
mov
xor
push
add
sub
in
add
fidivrl
scas
testl
mov
push
inc
sbb
sbb
and
insl
and
cmpsl
jle
test
les
daa
push
sub
lock
or
rclb
mov
pop
movsb
rorl
xor
out
sub
and
test
push
or
movsb
xor
ja
std
sbb
push
cld
les
outsl
ljmp
pop
movsl
ja
mov
xor
les
mov
pop
sub
mov
popa
je
pop
aad
jbe
fsubs
mov
fimuls
es
xchg
pop
push
and
cltd
jmp
sub
in
push
sti
pop
ret
popf
dec
mov
lea
dec
sub
adc
aad
aas
xchg
mov
icebp
or
or
int
aam
test
ret
pop
aad
xchg
ror
jg
and
mov
or
pop
dec
adc
sti
int3
cwtl
or
xor
dec
ret
pop
out
jae,pt
cmp
int
mov
mov
mov
mov
in
push
mov
popa
outsl
jge
enter
xchg
pop
scas
sarl
fcmovnb
lret
pop
dec
add
lahf
push
std
dec
pop
dec
ljmp
rcrb
das
test
push
mov
xor
inc
ja
fsubp
cmp
stc
mov
or
loopne
add
cmp
jns
pop
shll
imul
or
ja
test
scas
test
imul
xchg
add
insl
and
jg
sbb
sub
jno
xor
or
mov
scas
or
popa
fsubp
adc
sub
es
add
insl
jecxz
sub
push
mov
sbb
mov
xor
imul
mov
pop
test
sbb
dec
cmp
fsubrp
cwtl
jb
ret
jnp
inc
out
pop
add
xlat
popa
cmc
sub
js
or
arpl
lds
cmp
push
dec
jg
xlat
dec
popa
test
in
mov
cli
orl
repz
sub
dec
das
movsl
mov
mov
dec
popa
push
ljmp
dec
jbe
cli
nop
cmc
cmp
adc
pusha
sbb
xor
mov
adc
das
scas
mov
fdivr
scas
dec
aas
adc
fcmovu
call
les
or
popa
cmc
lahf
adc
mov
mov
dec
in
mov
jge
inc
lods
inc
in
push
fs
dec
adc
scas
dec
jno
adc
inc
ficoms
mov
dec
fdivrl
inc
in
sub
jb
jl
sahf
nop
enter
add
stc
mov
adc
ret
fwait
cli
outsb
mov
test
movsl
cli
sbb
in
dec
cmpsl
aad
outsl
jle
enter
in
fimull
push
mov
jp
inc
dec
sbb
mov
xchg
and
xchg
push
push
push
insl
cmp
rolb
adc
cmp
and
in
jle
add
mov
inc
fwait
ds
push
mov
cwtl
jg
ror
gs
ficoms
xchg
dec
push
mov
movsl
push
lods
das
mov
cmp
lret
scas
sbb
outsb
jle
in
mov
sub
jae
adc
lret
pop
pop
sbb
stos
idivl
movsb
into
pop
and
dec
adcl
sub
mov
in
inc
jmp
dec
or
popa
test
push
and
or
or
inc
mov
ja
cmp
xchg
es
or
lret
scas
aas
rclb
punpckldq
insl
lods
pop
nopl
pop
pop
aaa
mov
fdiv
cmpl
and
sbb
jmp
inc
push
stc
popa
lods
inc
cmc
push
loopne
jge
lret
pushf
dec
adc
ja
xchg
pop
in
ja
dec
mov
shlb
jp
jg
movsl
loope
add
rorb
cmp
cli
and
xor
adc
cmpsl
jne
icebp
inc
fdivs
cmp
add
push
mov
xchg
fucomi
je
loopne
adc
aaa
xchg
imul
clc
out
daa
fnsave
add
sti
dec
test
fnstenv
push
insb
scas
push
inc
mov
loopne
int
mov
pop
pop
leave
stos
jmp
pop
mov
add
jp
jno
nop
fs
push
dec
mov
popf
jecxz
stc
ljmp
xchg
xchg
cmpl
mov
adc
rcl
push
and
and
push
loope
sbb
ds
ja
mov
mov
xchg
sbb
inc
dec
adc
out
sbb
jno
adc
xor
je
add
bound
loopne
fidivs
xor
cmp
leave
dec
ret
es
lret
inc
xchg
xor
lret
pushf
mov
aaa
mov
mov
das
mov
pusha
xchg
es
sub
sbb
jg
mov
cwtl
outsl
adc
cltd
int3
andb
inc
xchg
insl
xchg
pop
jae
dec
mov
or
mov
fildll
adc
sub
sub
sub
repz
insl
rcrl
jp
test
xchg
cld
loop
lret
xor
push
loop
mov
sbb
cmp
ljmp
mov
insl
les
popa
out
mov
dec
xchg
int3
xchg
data16
xor
add
loop
fcmovu
clc
push
lds
in
mov
dec
imul
mov
fsubs
pop
dec
jmp
scas
xor
int
push
inc
pusha
inc
sub
divb
fistl
sub
xor
call
repnz
fidivs
and
scas
les
repz
fptan
mov
rol
in
dec
out
inc
cmp
gs
mov
fcompl
std
leave
cmpb
hlt
push
scas
lods
imul
aad
push
dec
or
insb
das
arpl
dec
ss
pop
bnd
stos
shlb
in
imull
stos
hlt
push
jne
pop
aad
cld
push
outsb
xor
test
xchg
test
stos
push
pop
adc
in
xchg
mov
add
cmpsb
xchg
in
stc
push
cmp
push
and
loopne
fistl
decl
test
jg
jle
jmp
jne
xor
fwait
sahf
dec
pop
std
lock
xchg
jle
add
mov
add
push
adc
orl
pop
mov
popf
stos
hlt
fwait
ljmp
lods
pop
fs
sub
repnz
stc
in
jge
mov
aas
push
lods
add
push
and
arpl
scas
dec
in
mov
or
inc
mov
bound
nop
sbb
pusha
pop
pop
dec
shll
hlt
and
movsb
sbb
cmp
in
ret
xchg
and
or
jecxz
lret
push
and
stc
aaa
in
test
je
cltd
pushf
les
fmull
push
test
xorl
mov
cmp
and
ja
dec
js
mov
lahf
mov
test
xchg
loope
lahf
dec
push
cld
xchg
jb
dec
jns
into
sbb
cmp
pop
cld
jg
fstl
stc
cmp
test
fldcw
inc
out
mov
inc
movsl
inc
and
outsb
movsl
jb
dec
mov
jne
or
test
dec
popf
jb
outsl
lret
fcomps
data16
inc
lods
push
and
fwait
mov
imul
dec
cmp
jb
fs
rcrl
xchg
addr16
test
iret
shrb
fxch
mov
pusha
push
add
popa
sahf
fbstp
stos
mov
repnz
xlat
jbe
dec
mov
jecxz
pushf
adc
bound
test
push
xor
in
das
loope
mov
cld
lea
xchg
and
and
mov
add
mov
adc
insb
xor
mov
add
xchg
mov
mov
mov
es
cmp
decb
inc
pop
jb
test
das
loopne
shl
jb
nop
es
adc
sub
ljmp
adc
ljmp
sbb
dec
movsb
sbb
mov
mov
gs
sbb
hlt
inc
cmp
subb
jae
or
dec
push
jp
lea
out
fs
nop
push
jg
outsb
mov
push
les
adcl
xor
clc
shrl
push
xor
test
add
fs
xor
push
dec
sbb
pop
ret
mov
cwtl
sbb
aam
sub
shlb
cwtl
cld
cmp
pop
ror
xor
mov
shll
sbb
inc
outsb
imul
es
movsb
loope
pop
int3
sub
ss
popa
or
add
jae
in
incl
add
mov
cs
add
ret
mov
push
in
push
scas
mov
jbe
mov
mov
lock
jo
aas
les
cmp
add
mov
rorb
movsl
jp
adc
stos
pop
test
into
push
js
jle
lcall
xor
loop
mov
cltd
leave
ficoms
or
add
aad
dec
out
sub
lahf
inc
leave
adc
push
lcall
flds
outsl
movsb
or
and
push
mov
sbb
sbb
das
cmp
jae
iret
ljmp
xor
mov
sti
jmp
dec
leave
cmpsb
dec
jecxz
jg
sbb
iret
fstl
cmp
xchg
rcl
ljmp
cs
push
mov
sbb
loop
xchg
dec
std
hlt
mov
dec
xor
adc
movb
xchg
js
in
in
push
cmp
jecxz
jecxz
sbb
shlb
nop
hlt
popa
cld
lods
dec
pavgw
push
cmp
testb
jae
out
int3
cltd
jns
flds
stc
int3
test
push
and
and
mov
nop
bound
nop
dec
push
ljmp
mov
ds
xchg
ljmp
pop
mov
sbb
scas
sbbl
and
mov
dec
mov
lock
lret
push
bndldx
add
test
nop
stos
clc
and
loopne
pop
inc
sbb
dec
mov
test
sub
pusha
jp
xchg
xor
or
addb
mov
into
or
fsubrs
mov
jle
int3
add
mov
add
xorb
jae
stos
mov
mov
push
imul
cmp
add
adc
jno
outsb
push
jns
cmp
test
fwait
push
sbb
popa
test
jb
mov
cmpb
jle
mov
mov
sbbb
xchg
decb
lret
daa
jno
lock
in
xchg
cmp
pop
jae
sub
orb
cmpsl
iret
jmp
clc
mov
loopne
imul
repz
in
mov
je
pusha
fmuls
adc
fsubp
repnz
mov
sub
push
mov
cmp
jne
cmpl
xor
jp
out
sbb
loopne
xor
clc
mov
data16
push
mov
xor
mov
jg
es
xchg
movl
out
adc
cld
ja
xchg
test
jp
adc
ljmp
cmp
lret
add
xor
sbb
cltd
sub
cli
in
jmp
jp
loop
call
pop
jle
push
les
cltd
aad
sbb
mov
mov
pushf
add
mov
pop
addb
movsl
mov
xor
cmp
cmpsl
inc
xchg
add
bound
mul
sar
loopne
add
lds
idiv
cli
es
fidivl
add
ss
mov
sbb
jns
jae
jns
or
daa
insb
fidivrl
addb
rcrl
pushf
scas
cmp
xor
mov
sbb
sbb
das
xor
inc
ja
scas
pop
adc
iret
je
je
adc
mov
adc
sbb
add
mov
mov
adc
mov
outsl
cmp
pop
lods
xchg
ljmp
test
lods
mov
mov
jecxz
cmp
rol
cs
movsb
mov
call
adc
enter
pop
stos
xchg
rcrl
jmp
jbe
cmp
adc
inc
scas
movsl
inc
mov
shrl
aad
pop
rcr
aad
mov
adc
inc
aas
mov
sbb
int
aaa
rol
xchg
test
dec
repz
adc
test
mov
out
xor
pop
testl
hlt
sub
push
and
cltd
mov
xchg
int
mov
pop
call
fisubrs
mov
pop
inc
mov
int
xchg
dec
jo
pop
les
mov
sbb
or
jo
adc
fwait
xor
idivb
std
out
or
jo
inc
mov
jmp
cmp
loopne
or
cli
cmpsb
mov
push
in
add
jg
std
sbb
das
inc
shrl
lods
sahf
jecxz
outsb
scas
mov
mov
jno
mov
test
xor
pop
lds
nop
enter
loope
xchg
pop
lods
cmp
push
jnp
lcall
xchg
inc
xchg
shlb
popf
out
push
push
xchg
add
xor
lea
scas
insb
mov
push
or
js
les
insl
fildl
dec
adc
xor
sub
sub
sub
fcmovne
dec
jns
mov
loope
adc
mov
xchg
lea
sbb
out
sbb
dec
push
subl
scas
fistpl
and
mov
enter
jno
shll
inc
ret
adc
push
adc
adc
cmp
mov
pop
sbb
sbb
loop
cmpsl
stos
sub
hlt
stos
add
sub
in
pushf
pop
int
fsubs
xchg
and
pop
fwait
jbe
jbe
lea
call
out
and
and
mov
add
test
sarb
mov
pop
or
mov
int
sarl
mov
arpl
sub
xchg
jae
call
cld
addr16
or
mov
enter
insb
mov
jae
setns
pushf
fsubrl
loopne
xor
das
jl
xchg
xchg
iret
cs
adc
clc
rolb
push
push
bnd
sahf
in
in
sbb
jmp
ljmp
and
xor
xlat
inc
insb
or
lds
hlt
mov
lahf
sbb
daa
xchg
cmp
sbb
jecxz
cmp
aad
pop
mov
xchg
je
loop
bound
in
and
add
inc
rol
jae
test
popa
fnstcw
clc
pusha
out
pop
adc
pop
mov
mov
lock
jb
push
or
xchg
and
dec
xchg
daa
mov
stc
stc
aad
jne
cmc
mov
push
std
sti
xlat
xchg
mov
sub
enter
xor
scas
xchg
imul
sub
imul
jnp
push
movsl
sbb
lock
mov
test
pushf
dec
cltd
sbb
push
mov
mov
mov
movsb
lods
jae
pop
cli
xchg
inc
mov
add
fistpl
push
loop
sub
mov
bound
test
mov
adc
cmp
insb
mov
inc
push
ja
pop
into
jb
xchg
push
insb
sbb
sub
cmp
imul
loopne
push
jnp
pop
pusha
ja
fmull
imul
fs
or
scas
mov
inc
lret
adc
scas
cli
iret
stos
cli
mov
fwait
arpl
mov
call
ret
test
fnstsw
dec
scas
jmp
popf
cmp
insb
jg
imul
sub
xor
lods
jmp
or
scas
xlat
inc
dec
xor
pusha
mov
mov
sbb
push
fdivrl
icebp
inc
cmp
mov
mov
jne
in
inc
sbb
loope
cmp
outsl
lods
dec
scas
mov
inc
xor
in
dec
ljmp
leave
inc
xor
cmpsl
inc
xchg
into
js
pop
ja
test
fcompl
pcmpeqd
incl
lretw
fimuls
je
in
sarb
xor
sar
int
jmp
cli
xor
and
dec
call
int3
mov
push
pop
icebp
lods
popa
mov
add
inc
popa
test
xchg
fisubrs
daa
sub
mov
or
cmpsb
mov
add
mov
in
hlt
mov
mov
sub
xor
daa
push
add
push
jl
data16
mov
loope
cmp
ljmp
pop
ja
cmpsl
or
sub
inc
test
fisubs
pop
cli
int
xchg
loop
inc
dec
out
sub
adc
pop
xchg
push
mov
arpl
rep
test
sbb
dec
jle
test
jmp
fnstsw
ret
insb
cmpsl
mov
jmp
nop
xchg
fwait
sub
xor
dec
or
mov
adc
sbb
adc
lods
out
inc
or
add
push
push
lods
push
cld
or
pop
sub
mov
int3
mov
fdivrs
mov
push
or
in
push
gs
jae
mov
jecxz
and
mov
out
jle
jns
gs
xchg
jb
cmp
scas
hlt
in
fcoml
or
ficoml
sbb
pop
mov
iret
mov
xor
pop
mov
jg
and
sahf
cltd
jno
and
xchg
cmp
pop
mov
adc
fcoms
pop
shrl
dec
dec
push
dec
xchg
dec
add
sbb
xor
pop
je
mov
push
loop
adc
cs
fisubl
out
lock
ror
cmp
mov
mov
add
filds
sub
in
icebp
icebp
insb
aaa
push
adc
std
or
andl
mov
stos
jecxz
sub
add
jp
adc
andb
push
or
adc
loope
sub
mov
adc
divb
test
fucom
sbb
in
movsl
xchg
fisubs
or
gs
icebp
imull
btc
enter
ja
adc
out
mov
adc
xchg
sub
jbe
add
xchg
jns
dec
and
sub
pop
aaa
sub
push
cmp
call
shrl
pop
mov
xchg
add
arpl
sub
xor
mov
jne
dec
push
push
dec
in
pop
imul
dec
andl
cli
movsb
push
test
stc
loopne
and
insb
xor
stc
xlat
shr
xchg
sbb
call
push
rcrb
hlt
enter
int
jg
xchg
ds
push
pop
and
aad
sub
lcall
mov
xor
cmpsl
sbb
sbb
popa
adc
xorl
dec
sbb
push
ja
adc
out
fmull
inc
push
outsb
push
sub
sub
sahf
xchg
or
js
fs
aas
mov
mov
sbb
inc
outsl
sub
jecxz
cs
and
andb
movsl
out
sbb
cmp
or
sbb
push
fs
jb
popa
sbb
in
xchg
in
add
adc
push
les
pop
add
sbb
lods
cmc
ds
mov
shrl
sbb
je
xchg
imul
and
hlt
aad
lret
and
xchg
int3
fdivrs
xchg
sti
xor
mov
nop
push
or
xchg
jg
fwait
jl
lret
fsubr
fisubs
xchg
pop
dec
xor
xor
aas
mov
or
push
mov
push
testl
ds
repz
lods
pop
fwait
xchg
sub
xlat
dec
xlat
lods
fcomps
xor
test
dec
stc
lret
mov
fs
sub
xchg
xor
pop
in
rcr
mov
push
mov
out
pushf
mov
inc
add
xor
test
mov
popl
adc
dec
leave
jg
cmp
js
mov
movsl
xor
add
stos
fwait
leave
inc
mov
hlt
or
fdivrl
pop
sub
aaa
pop
pop
lret
cld
sub
mov
mov
xchg
mov
add
loopne
sbb
xchg
sbb
es
clc
jbe
sbb
mov
in
pop
and
in
and
movsb
mov
adc
mov
mov
inc
daa
pop
mov
fnstsw
pop
sbb
mov
lds
jge
shlb
and
stos
or
out
add
add
rclb
push
or
and
in
mov
in
loope
mov
mul
pop
jg
sub
popa
pusha
outsb
cmp
repz
or
out
xchg
cmpsl
xlat
xor
cli
fisubl
cmp
add
inc
pop
dec
bound
or
cmp
mov
push
lret
bound
enter
mov
mov
pop
jno
cmpb
mov
dec
in
stc
inc
add
mov
inc
push
dec
push
mov
dec
cli
dec
popa
mov
xchg
rcr
sbb
fdiv
aad
push
mull
jbe
insl
lret
mov
loopne
aad
pusha
add
push
add
mov
add
mov
dec
and
jb
or
mov
inc
xlat
dec
mov
in
data16
cmp
shrl
sub
into
xchg
shlb
adc
cltd
pusha
push
cld
xchg
pushf
pop
sub
lret
lahf
leavew
xor
mov
mov
aaa
xchg
push
pushl
add
cli
mov
loopne
or
jmp
stos
iret
and
fsts
shrl
sub
and
addr16
pop
mov
cltd
jecxz
iret
adc
lcall
stos
cs
pop
pop
int3
and
outsl
mov
leave
inc
out
out
in
xchg
push
mov
subl
pop
mov
or
jns
push
ret
inc
push
cmpl
push
iret
mov
or
loopne
add
push
xchg
mov
shrb
dec
xchg
pop
insb
push
pop
stc
adc
cs
dec
arpl
scas
std
sbb
push
ret
add
or
dec
add
xor
inc
dec
cmp
jmp
push
rclb
arpl
fs
jne
aad
repnz
jle
cmc
in
pop
mov
scas
dec
xor
add
cltd
cli
dec
into
push
je
push
outsl
inc
inc
or
rclb
cmp
pushf
mov
add
fldl
data16
or
sub
or
in
dec
repz
stc
pop
sahf
pushf
mov
jmp
fwait
sbb
add
mov
mov
cmp
in
cmpsl
adc
data16
unpckhps
into
lahf
push
scas
roll
nop
rorl
cwtl
xchg
fcmovnu
out
mov
jnp
aad
hlt
negb
pushf
pop
stc
jbe
sahf
or
push
popa
aam
lcall
pushf
mov
mov
or
add
inc
push
adc
sbb
mov
aaa
in
mov
adc
cmp
enter
test
imul
in
nop
sahf
xchg
cmc
nop
outsb
cmpsb
push
add
adc
lods
mov
not
pop
movsb
pinsrw
dec
lea
out
add
popa
scas
sti
and
lock
addr16
fistpl
lds
daa
fucomip
jns
leave
xor
mov
xchg
mov
sub
and
and
and
mov
mov
and
sbb
mov
sbb
inc
dec
testb
jbe
in
xor
jnp
adc
inc
mov
cmp
js
inc
mov
sbb
inc
aas
iret
jg
dec
jne
cmpsl
pop
stos
dec
ficomps
stos
jp
movsb
mul
cmp
fs
js
sub
scas
sbb
or
and
xlat
shlb
shlb
sbb
pop
push
pop
fimull
jg
aad
fs
sub
xor
pop
mov
adc
inc
fdivrl
ficoml
adc
sbb
jne
xor
pop
sbb
dec
push
push
xchg
mov
aam
xchg
outsl
dec
dec
aad
jb
incl
sti
pop
add
fsts
adc
rcrl
data16
mov
aaa
fsts
push
out
out
mov
or
fs
mov
fwait
dec
dec
aas
xchg
mov
inc
sbb
in
mov
or
sbb
mov
lds
and
rolb
pusha
sbb
jmp
repz
inc
sbb
jg
hlt
cmp
pop
mov
push
fisttpl
add
cmpsb
mov
xor
andb
clc
push
nop
nop
fwait
adc
icebp
popa
adc
sar
nop
sub
insb
jns
cmp
mov
push
xchg
and
inc
jo
jecxz
icebp
push
jo
rorl
les
out
push
jns
sbb
push
fnsave
outsl
mov
cmp
jp
movsl
xrelease
jge
xchg
nop
outsb
cld
mov
lock
inc
mov
or
sub
enter
inc
mov
and
pop
andb
cmpsb
add
fabs
lahf
imul
pop
mov
cli
add
sbb
jns
xchg
inc
sub
mov
bound
sbb
sub
stc
inc
inc
push
mov
vmovsd
inc
push
cmp
lock
out
les
mov
add
jge
lret
stc
jp
outsb
lcall
add
ret
push
stos
mov
cwtl
aas
aam
push
icebp
push
in
test
push
mov
sub
int
add
cmpsl
xchg
dec
jmp
jb
cs
mov
lret
frstor
stc
icebp
movsb
repz
inc
mov
or
fidivrl
inc
enter
and
adc
mov
icebp
mov
ss
jecxz
add
fwait
inc
outsb
std
jns
out
mov
or
mov
sub
jno
addr16
int
in
pop
mov
xchg
sbb
mov
jne
pop
jnp
xor
cmp
fwait
xor
sub
pop
jbe
xlat
sti
test
or
loopne
mov
pop
sbb
repz
cltd
adc
nop
add
xchg
insl
cmpsb
pop
out
jp
test
jne
icebp
mov
ja
xchg
roll
fstpl
inc
pushf
sahf
or
js
and
adc
and
mov
xchg
push
jge
jmp
pushf
nop
mov
xorl
loop
and
shrl
in
lret
pop
dec
mov
out
jno
jp
enter
cmp
mov
mov
push
dec
mov
xchg
jge
dec
xor
notb
push
mov
fmull
in
mov
or
mov
cwtl
cmpsb
push
mov
mov
and
sbb
aad
mov
mov
inc
xor
push
pop
mov
sbb
ret
hlt
in
cmp
pop
pop
outsb
cmc
sbb
jo
sti
aad
push
int3
icebp
jecxz
js,pt
aaa
xchg
lds
leave
clc
mov
or
loop
sti
mov
cmp
dec
fwait
stos
inc
adc
test
ljmp
dec
jle
stc
mov
stc
inc
dec
and
push
loop
inc
inc
daa
jp
mov
aam
dec
xor
dec
std
pop
jge
dec
push
fimuls
ficoms
xlat
orl
mov
popa
stos
rcr
xchg
dec
mov
dec
stc
test
imul
and
pushf
scas
test
fs
aad
shl
sbb
in
sbb
jmp
cmovs
xor
mov
mov
push
pop
rorl
cli
jo
test
sysexit
mov
mov
cmpsb
movb
sub
jg,pn
jnp
pop
or
jmp
js
pusha
and
test
xchg
inc
mov
or
aaa
inc
testb
pop
adc
cltd
pop
cltd
inc
js
or
cli
ljmp
sub
and
cmp
nop
insl
xchg
loope
push
fs
stos
mov
xor
xchg
fadd
dec
jo
stos
dec
int3
in
movsl
mov
fadds
lods
nop
xor
lds
gs
cmp
and
addr16
leave
mov
fcmovne
ret
mov
push
lcall
les
inc
dec
push
push
and
movsl
mov
stos
mov
out
jmp
inc
xchg
jns
js
dec
fiadds
pop
incb
pop
adc
hlt
aas
fidivrs
jbe
outsb
dec
and
mov
add
xchg
addb
and
sbb
mov
sub
inc
cmpsl
cld
mov
fidivs
pop
mov
mov
adcl
sbb
mov
push
es
add
rolb
jb
and
cmp
or
and
cmpl
sahf
ja
test
dec
dec
outsl
cwtl
xlat
mov
icebp
pop
insb
mov
cltd
dec
mov
add
enter
mov
jo
jle
sub
fs
int3
stos
pop
cmp
nop
ds
adcb
jg
negb
and
jns
insl
cmp
lea
push
enter
mov
pop
aad
inc
push
insl
les
imul
pop
andb
push
ja
adc
pop
or
add
mov
adc
leave
mov
rorb
mov
lahf
sub
sub
xor
adc
add
inc
mov
add
out
loope
and
lock
mov
push
fdivr
sbb
scas
aas
insb
fsubrs
mov
xorb
insl
jbe
dec
shrb
pushf
mov
pop
insl
fwait
ret
push
sti
adc
sbb
pop
xchg
aam
pop
subb
fldcw
pop
xor
add
pop
mov
loope
inc
mov
bound
in
pop
sub
pop
fists
sub
cmp
fisttps
out
adc
fistpll
lcall
dec
mov
mov
mov
in
dec
mov
dec
dec
mov
clc
rcr
pop
add
das
in
push
sub
mov
xchg
xchg
pop
sahf
ljmp
add
ret
jnp
ffree
sbb
out
xchg
pop
test
out
add
xor
push
hlt
movsl
inc
fwait
sarl
mov
inc
andb
movsb
jge
test
mov
test
sub
jg
adc
repz
clc
and
movl
int3
adcl
int
sbb
lods
xchg
int
in
les
pop
data16
mov
fdivrl
push
push
mov
movsl
push
jg
xchg
cmp
xor
pusha
inc
xor
xchg
inc
les
int
jmp
in
lahf
cli
jnp
sbb
js
mov
lods
mov
dec
sbb
push
pop
je
jo
cmp
and
mov
fucomp
aas
jno
cld
sahf
into
inc
icebp
add
push
sbb
sbb
cmp
sbb
xor
sbb
push
cmp
cmp
sbb
inc
or
orb
loope
fisttps
mov
pop
pop
dec
lods
lds
fimuls
adc
xor
das
test
shlb
mov
mov
adc
mov
adc
push
insl
outsb
mov
mov
sbb
inc
jns
in
mov
les
idivb
insb
movsb
or
mov
xchg
loopne
sub
sbbl
out
xchg
dec
add
mov
adc
popf
mov
lods
push
adc
cwtl
and
repz
add
lea
jmp
dec
pop
loope
outsb
adcl
jb
shrl
cmp
cmpsl
test
js
test
inc
sbb
rorl
sub
cmp
sbb
pop
scas
mov
dec
jle
mov
xchg
imulb
mov
add
frstor
imul
and
push
xchg
popf
mov
testb
inc
out
push
sub
ds
rolb
mov
jbe
fnsave
dec
and
add
cmp
je
js
test
sbb
push
push
out
cmpsl
cli
lahf
movsl
popa
sahf
ja
mov
jno
pop
lods
cwtl
sub
int
popa
stc
pop
pop
xchg
pop
subb
mov
xor
mov
xchg
pop
pop
xchg
cs
lret
push
loopne
mov
test
dec
sarb
out
jnp
bound
movsl
mov
cltd
ljmp
testb
cmp
jo
dec
adc
out
int
cmp
das
mov
mov
std
fstl
mov
rcrb
push
repnz
mov
lea
pop
sbb
adc
sbb
cmp
dec
dec
push
or
dec
scas
dec
stos
orb
fwait
jae
aas
mov
pop
mov
jo
loop
stc
and
jecxz
mov
outsl
or
adc
es
dec
loope
mov
xor
in
push
inc
orb
insl
push
cmpsb
pop
into
fnstcw
fdivs
cs
pop
cwtl
loopne
gs
cmc
cmp
adc
push
hlt
cmpsb
lcall
xor
cli
movsb
xchg
mov
mov
loopne
jp
pop
and
inc
stos
loop
cld
fxch
addr16
loope
cmpsb
xor
imul
hlt
cmp
cmpl
sti
pop
outsb
mov
js
sbb
arpl
and
out
mov
mov
addr16
and
pushl
inc
mov
cmp
sbb
rcrb
xor
pop
dec
pushf
insl
stos
std
xlat
testb
adc
lret
and
xchg
and
xor
sbb
inc
dec
mov
add
adc
frstor
subl
hlt
lods
fidivs
lret
cmpsl
aam
int3
xchg
imul
xchg
adc
jnp
insb
dec
or
imul
xor
mov
add
arpl
leave
inc
ds
push
into
int3
cmp
mov
pop
fisttpll
and
lahf
push
out
movsl
aas
pop
stos
lea
aas
pop
xchg
push
jnp
mov
pop
jno
add
sbb
or
mov
lret
cmpsb
cmp
filds
mov
stos
adc
xor
ds
lahf
lea
sbb
add
out
add
or
push
lahf
cmp
out
adc
sbb
lods
xchg
mov
out
inc
xchg
mov
pop
push
xchg
adc
aas
xchg
cmp
rorl
nop
jg
xchg
and
mov
or
pop
je
mov
xchg
adc
xchg
movsl
xchg
dec
clc
mov
push
sub
add
fwait
adc
jb
add
fwait
jo
cs
mov
adc
mov
pop
inc
call
push
arpl
icebp
and
je
mov
enter
clc
xor
and
out
ret
mov
cli
icebp
in
xchg
mov
pop
testl
lret
cs
insl
dec
pop
loop
mov
pop
push
mov
lods
jge
dec
ret
dec
lock
mov
cmpsb
mov
insb
xchg
fsubrs
ljmp
fstpl
and
xchg
ret
pop
sub
mov
add
jbe
mov
and
cmc
adc
xor
xchg
in
insb
das
gs
adc
rcrb
mov
dec
jno
xor
notb
lret
outsb
std
xchg
lods
cmc
xchg
unpcklps
lret
movsb
and
enter
out
jp
test
insb
cmp
or
loopne
mov
rcrb
int
jmp
ja
popf
pop
pop
mov
mov
and
jo
and
push
in
leave
cmp
mov
adc
inc
xchg
idiv
clc
imul
sub
jo,pn
daa
cmp
rcrl
jae
and
adc
sub
pop
int3
sub
xor
xor
push
fnstenv
pop
push
dec
mov
xor
and
cmpsl
inc
sub
dec
test
jl
xchg
lods
vprotw
lret
sbb
imul
shrl
outsl
ret
add
popa
mov
mov
push
in
jge
test
jnp
pop
sub
xor
in
insl
je
pop
jl
xchg
cmp
sub
sbb
mov
jne
mov
cli
aaa
and
lret
inc
jl
adc
jmp
mov
std
test
xchg
and
jg
lods
rorl
sbb
push
xchg
inc
lret
pushf
inc
xchg
cs
aam
dec
pop
add
mov
out
pop
repnz
jne
xor
fldenv
rorl
mov
mov
cmpsb
pop
push
xchg
sahf
cmp
outsb
push
insl
and
xchg
ljmp
add
push
ret
in
aaa
push
adc
cli
repnz
jge
pusha
mov
cmp
cmp
bound
xchg
add
in
std
adc
lahf
sbb
cmp
mov
leave
mov
or
out
out
cs
loop
stos
xor
es
das
jecxz
xor
mov
fs
add
xlat
mov
add
loope
int3
nop
fs
jno
fwait
sti
insl
mov
or
pop
and
xor
repnz
lret
mov
mov
push
loop
lds
and
fs
xor
dec
xlat
xor
add
lods
hlt
mov
std
ja
sbb
push
sbb
fcoms
mov
xchg
dec
loopne
clc
ret
push
inc
push
je
cmp
test
sbb
scas
loope
xor
mov
jl
lahf
mov
adc
loope
fidivs
in
mov
out
in
or
push
mov
cwtl
in
jns
fsubl
mov
or
dec
mov
mov
cld
and
jae
cmp
mov
pop
xlat
emms
scas
sub
loopne
pop
push
hlt
das
pop
xor
shr
fldz
gs
lahf
dec
cmp
mov
testl
sbb
pop
ret
push
lods
cld
sub
pop
mov
push
mov
cmp
int3
pop
out
jmp
popa
sub
jg
in
mov
push
jno
or
sti
mov
dec
xchg
cltd
lock
xlat
mov
mov
addr16
cltd
dec
cmp
sub
adc
sub
scas
rcl
cmpb
popa
dec
xor
pop
xchg
jmp
or
out
sahf
pusha
xchg
in
or
cmpb
outsb
scas
sti
popa
fisttpl
xor
aad
mov
mov
xor
lock
push
andl
dec
iret
das
mov
or
jb
loope
sbb
jp
sbb
popf
scas
mov
aad
hlt
sub
imul
nop
faddp
xor
je
loope
adc
cmp
in
adc
mov
xor
mov
iret
mov
inc
lret
and
jp
mov
decb
and
into
pop
dec
mov
stos
add
xor
cmc
je
movsl
add
call
enter
fdivs
cmp
in
add
test
cld
or
mov
add
cmp
add
loope
push
nop
and
ja
leave
xchg
iret
push
repnz
rol
jne
cmp
xor
fists
pop
mov
fwait
in
cmpsb
mull
cwtl
ret
xor
jno
popa
fisttps
js
push
in
cmp
pop
pusha
testl
ljmp
sbb
aas
in
rolb
mov
pop
das
add
icebp
fsubrl
inc
sbb
inc
or
inc
repnz
xchg
push
jnp
cmpsb
sbb
inc
xor
push
lods
inc
sbb
pop
outsb
inc
mov
stos
cwtl
shrb
out
adc
jae
lods
or
sbb
mov
jg
fnstcw
pop
inc
jge
and
cs
xchg
mov
jno
and
xlat
cmp
push
xor
dec
mov
cmp
nop
imul
mov
pop
push
and
out
aam
sub
fisubl
push
push
pop
dec
ret
and
cmp
hlt
cmpb
inc
jecxz
push
cmpsb
mov
repz
test
inc
daa
mov
dec
cmp
loopne
add
xchg
mov
jbe
jg
lods
adc
subb
das
rcll
mov
adc
push
cli
fcmovnbe
leave
movsb
rorb
inc
inc
jne
sub
jno
mov
das
and
push
insl
mov
add
jp
inc
cltd
fwait
test
loope
push
push
movl
dec
das
test
popa
cmp
and
nop
lea
and
mov
int3
adc
pop
aam
pop
sar
pop
int3
jbe
fwait
pop
or
dec
shll
fsts
push
xor
call
cs
push
sbb
sbb
lock
pop
xor
ret
cmc
inc
fs
ja
mov
movsb
leave
fdivrs
and
call
sub
clc
push
imul
mov
push
or
mov
iret
insl
and
rcrb
sub
add
ss
es
xchg
lret
mov
xor
adc
popf
lea
fistl
dec
movsb
push
pop
and
pop
orl
xchg
add
inc
dec
pushf
mov
jo
jmp
xor
stos
fstl
push
xor
loopne
out
scas
adc
push
adc
xor
loopne
insl
pop
dec
jnp
stos
imul
jb
js
sbb
call
in
mov
sbb
dec
in
or
dec
jle
cmp
stos
fldcw
outsb
add
dec
pop
mov
pop
mov
pop
icebp
fdivrs
sbbb
pop
mov
ja
ds
icebp
or
cmp
mov
push
xchg
pop
pushf
gs
jecxz
dec
sarb
movsb
pop
insb
push
sahf
dec
fsubl
mov
xchg
cld
cli
stos
and
xor
pop
imul
sarl
or
loope
sub
xor
clc
cmp
int3
sub
addr16
xor
push
mov
pop
adc
icebp
arpl
adc
lea
dec
cltd
ret
orb
out
inc
mov
cltd
repz
mov
pop
je
jcxz
test
bound
dec
add
xchg
cmc
hlt
inc
dec
scas
sub
shrl
dec
into
outsl
test
add
xchg
xchg
sub
add
sahf
ret
mov
imul
mov
js
pop
sub
push
add
or
and
add
mov
dec
sub
xchg
mov
inc
outsl
lcall
bound
repnz
test
pop
iret
out
fs
adc
inc
sbb
xor
mov
outsl
lahf
push
insb
cmpb
jbe
lock
inc
es
cmp
sub
cmpsb
icebp
jecxz
sbb
mov
push
ja
fnstenv
movsb
lret
dec
cld
or
xor
add
vfnmsub231ps
enter
daa
or
ficomps
fimuls
adc
mov
push
xchg
pushf
cli
rol
mov
push
xchg
ja
mov
mov
jmp
pushf
xor
test
pop
int
mov
pop
lahf
leave
jl
adc
insb
das
mov
mov
or
push
clc
sbb
mov
push
pusha
popf
sbb
repnz
or
dec
push
xchg
add
mov
xlat
scas
mov
lods
ret
shl
cmpsl
mov
adc
inc
dec
ljmp
repnz
mov
movsl
daa
pushf
push
push
mov
popf
decl
sub
sti
jbe
incl
shlb
jno
sbb
out
repz
mov
sub
and
sbb
pushf
imul
test
push
dec
lods
pop
inc
pop
mov
lods
test
jbe
je
sub
mov
mov
ja
cmp
cmp
out
mov
mov
mov
adc
adc
pop
or
sub
movsb
fidivl
mov
xor
jb
dec
xorl
out
repz
and
push
jo
fs
mov
and
sub
adc
jl
jb
mov
mov
in
and
out
nop
shl
inc
inc
fdivr
ret
loopne
fwait
adc
jno
loope
ret
mov
outsb
inc
mov
ret
pop
dec
pop
scas
incb
sub
or
inc
mov
mov
mov
sub
dec
lods
cmp
mov
and
rorb
dec
pushf
adc
test
dec
push
out
add
mov
pushf
out
dec
lcall
je
jo
and
mov
cmp
ds
test
dec
int3
lods
dec
test
out
in
aaa
inc
mov
les
sub
adc
mov
inc
xor
das
xchg
and
sub
popf
outsl
add
mov
repnz
sbb
inc
push
push
mov
push
adcb
sbb
rolb
mov
cmp
aad
jmp
cwtl
jg
fisubs
psllq
dec
cmp
test
jmp
xor
mov
pusha
bound
dec
cmp
in
add
std
xchg
fisttpl
sbbl
orb
das
sbb
ljmp
inc
fldcw
xchg
jg
and
rcrb
jle
xchg
out
js
adc
mov
adc
mov
and
cmc
ljmp
push
stc
lahf
fs
pusha
movsl
dec
cmp
fcmovne
push
mov
push
lods
inc
ss
adc
add
iret
hlt
imul
sti
ficomps
rcr
fimuls
imul
mov
dec
lods
cltd
dec
lock
das
into
andb
aam
pusha
jns
xorl
and
repz
cmp
sbb
je
fsts
dec
ret
add
jae
mov
inc
imul
xor
sahf
ret
jne
movsb
jl
fwait
xlat
arpl
sbb
rcrb
test
lret
sbb
add
testl
stos
es
rcrl
in
and
or
mov
jl
cmp
sub
jne
ret
test
cmp
jl
xchg
cmp
dec
cmp
cmp
outsb
in
push
mov
jg
xchg
sbbb
pop
sarb
fidivs
inc
push
stos
stos
adc
inc
jne
xchg
pop
std
iret
mov
sbb
out
out
adc
rorb
or
in
roll
mov
mov
mov
sti
mov
sub
pop
fldcw
or
xchg
cmp
mov
cmp
sbb
adc
addr16
xchg
andb
aad
sbb
lahf
push
adc
dec
xchg
shl
mov
push
sti
repnz
inc
xchg
movsl
and
mov
outsl
fidivrs
jp
xchg
pop
pushf
sbb
push
mov
outsl
mov
in
rorl
sub
mov
mov
sbb
clc
sub
or
xor
add
sbb
mov
imul
dec
cltd
fildl
adc
loope
lahf
mov
xchg
mov
cwtl
mov
cmp
popl
cli
mov
mov
sub
loopne
and
test
cltd
cmc
sbb
pop
sbb
xchg
inc
cmpsl
mov
jbe
test
dec
push
pop
and
jl
lods
jno
cltd
cmpsl
and
sub
or
popa
dec
adc
fdivl
mov
faddl
add
sti
pushf
mov
sub
fucomp
sbb
jb
aaa
mov
xchg
xor
inc
jnp
fcoms
mov
sti
cltd
es
xor
pmaddwd
or
and
cld
xor
adc
jge
enter
mov
ret
jnp
lcall
jb
gs
and
mov
mov
sahf
mov
cmc
js
pop
adc
push
iret
or
jb
gs
lret
cld
test
jne
jge
inc
add
sbbl
fisubl
popf
scas
lods
test
mov
cmpsl
outsb
icebp
xchg
je
jbe
dec
xchg
pop
push
lea
movsl
sub
cld
adc
bound
jl
jg
adc
roll
inc
sarl
add
mov
adc
test
inc
push
mov
fadd
xchg
ds
jmp
mov
sub
xchg
stos
jl
dec
push
pop
sahf
jge
shll
inc
call
cmp
movsl
sub
adc
mov
cmp
movsl
stos
out
fnstcw
sub
dec
lea
stos
or
adcl
mov
lea
push
jg
and
xor
faddp
xor
cmp
cmpl
in
dec
xchg
cmp
jmp
and
cwtl
add
dec
jno
jo
lahf
cltd
push
mov
inc
cmp
jbe
sub
repnz
cwtl
mov
jns
add
pushf
lea
movsl
xor
fs
push
adc
cmpl
rcr
pusha
dec
xor
enter
rcrl
mov
pop
in
xor
mov
scas
lret
mov
add
arpl
ror
icebp
int3
mov
aas
into
sbb
call
stc
insl
filds
xchg
push
cwtl
inc
movsl
inc
add
mov
dec
aas
mov
xor
or
insl
cmpsb
pushf
push
hlt
test
fnstcw
xor
add
jp
ja
adc
lret
mov
or
xlat
and
lods
xchg
jns
lcall
mov
loop
mov
xlat
imul
lret
fdivrl
mov
aad
xchg
das
frstor
icebp
test
pop
dec
or
fnop
cltd
mov
or
jnp
cmpsb
sub
lret
dec
push
jg
jno
das
push
inc
test
mov
in
in
arpl
adc
sbb
sub
jl
mov
or
mov
test
bound
fstp
sub
test
and
xchg
in
iret
cmpsb
inc
fwait
jae
pop
xchg
xchg
cmp
dec
test
jo
pop
loop
lea
sbb
jmp
mov
mov
and
inc
dec
jge
mov
cmp
insl
scas
xor
cmpsb
insb
fmull
test
mov
out
cmpsl
icebp
cmp
notb
push
subl
dec
leave
jmp
dec
sti
pop
xchg
nop
in
mov
xchg
xchg
dec
test
sbb
pop
mov
cmp
repnz
push
nop
sub
sub
fbld
mov
sahf
xor
or
inc
pop
sti
sbb
daa
nopl
shl
out
adc
sub
stc
xchg
mov
pop
inc
rcr
pushaw
jle
add
jae
sahf
cmc
mov
jp
pop
test
jmp
sub
shlb
adc
jb
addb
dec
es
mov
or
cltd
mov
mov
pop
lret
lds
push
sbb
and
push
xchg
repz
ret
xchg
data16
cltd
adc
fistpll
stos
daa
add
in
mov
sbb
movsl
mov
pop
roll
fidivrl
stos
push
xor
mov
idiv
cs
out
into
inc
xor
aas
hlt
fs
push
push
jae
clc
adc
xchg
iret
lret
sub
pop
jecxz
std
add
xchg
insl
jo
outsb
divl
mov
icebp
int
push
mov
sahf
lret
in
lock
rcrl
pop
gs
mov
sbb
clc
or
movsl
xor
push
sub
pop
lret
aam
pusha
ds
insl
mov
xchg
mulb
cmp
push
jge
aad
jg
lahf
xor
xchg
mov
xor
icebp
sbb
out
mov
cmpsb
push
xchg
div
xor
daa
or
jmp
sub
lock
sbb
addb
insb
ljmp
jecxz
arpl
dec
jns
int
push
les
cld
add
sbb
jge
call
stc
pop
aam
jl
into
and
stos
add
xchg
inc
scas
xor
mov
repnz
loopne
sub
repnz
addb
lods
or
in
or
jb
adcl
push
cwtl
xchg
fdivs
and
and
push
flds
subb
out
int3
sbb
mov
pop
fisttps
arpl
subb
pop
xor
xlat
add
imul
mov
pop
das
mov
lcall
lret
add
adc
in
cmpsb
and
pop
lods
xor
push
lahf
fs
enter
or
adc
inc
mov
inc
cmp
push
lds
jne
jo
or
jae
adc
stc
cli
inc
stos
xchg
fs
push
in
popf
xorl
mov
cmpb
xchg
jae
push
nop
mov
sbb
mov
fcmovnb
add
adc
test
out
es
mov
rcrl
push
cli
jbe
jmp
stos
testl
ror
fcoms
mov
ljmp
xchg
pop
mov
add
popf
jbe
movsb
sar
notl
xor
push
fidivs
cmp
aaa
mov
nop
js
add
pop
pushf
xchg
add
push
and
into
repz
and
mov
sbb
int
or
mov
ror
push
or
out
call
sarb
lahf
mov
repnz
push
inc
adc
rcrl
pop
repz
test
or
dec
ljmp
repz
clc
mov
xchg
in
dec
decb
jbe
dec
or
push
or
lods
xor
push
sbb
pop
ror
shrl
std
xchg
inc
push
addr16
push
imul
push
add
cmpsb
xchg
call
shll
cmp
out
test
arpl
mov
imul
inc
add
and
mov
scas
dec
sahf
inc
xchg
mov
lret
test
cltd
pop
or
mov
adc
fsubrl
jmp
jg
dec
stos
cmp
shll
divl
add
xlat
aaa
xchg
dec
mov
inc
aas
enter
sbb
pop
jnp
dec
aaa
add
repz
adc
fisubs
stos
xchg
mov
dec
jl
aas
mov
mov
out
fldt
ljmp
jne
pop
and
push
xchg
xor
inc
test
inc
leave
and
add
adc
mov
pop
fstl
mov
shlb
adc
jg
int3
mov
in
je
or
xchg
or
mov
sbb
lret
xchg
or
popf
push
fsts
repnz
enter
shl
add
icebp
push
push
add
les
inc
movsl
rorl
dec
cmpsb
and
je
subb
or
sbb
leave
push
or
rorb
jb
arpl
mov
xchg
outsl
cmp
push
sbb
xchg
mov
sub
adc
sbb
fdivrs
push
sbb
es
outsl
pop
xor
add
cmpb
add
or
filds
sub
inc
inc
xchg
sub
decb
lret
adc
sbb
call
mov
bsr
xor
fs
push
push
iret
fdivl
mov
sbb
outsl
loop
add
cmpsb
mov
pop
enter
xchg
psrlq
cld
dec
mov
je
xlat
adc
rcrl
aad
sbb
push
cld
push
xchg
nop
rcr
mov
fisubs
lahf
or
das
cli
jp
les
mov
inc
rclb
mov
lcall
push
jns
xor
mov
js,pn
xchg
add
dec
mov
cmp
icebp
cltd
pop
sti
or
sub
outsb
push
pop
add
in
std
enter
xor
push
xor
sub
int3
push
out
xor
adc
in
sarb
add
cmp
sub
cmp
mov
cwtl
lret
iret
cmp
mov
xor
scas
cmpl
in
imul
dec
arpl
loopne
or
popa
xchg
jg
sub
or
sbbb
orl
sub
fsubrl
mov
or
mov
leave
add
pop
xchg
or
pushf
cmp
pop
cmp
pop
and
push
or
pop
adc
mov
daa
add
loop
jb
cmpsb
jns
out
in
jno
sub
sbb
sub
inc
jno
push
push
fidivrl
leave
jno
es
sti
pop
jge
das
imul
xchg
jne
lods
popf
add
movsb
fs
ljmp
in
stc
dec
xchg
sbb
js
flds
and
jb
lea
leave
push
aad
pushf
shlb
inc
or
nop
test
mov
popf
test
test
mov
andl
scas
in
std
mov
inc
ss
out
ljmp
mov
xor
cmc
pop
rol
dec
andb
push
cmc
out
loop
rorb
loopne
in
orb
aad
in
fwait
and
mov
pop
adc
adc
pop
ror
push
or
out
dec
jns
sub
js
pop
sbbl
sbbl
jp
fdivs
lds
shlb
push
outsb
jp
arpl
xor
mov
jbe
test
push
hlt
mov
cmp
jne
push
sbb
xor
dec
cmpsl
jne
notl
mov
xor
push
sub
xchg
fdivrs
out
mov
mov
shrb
sbb
xchg
aad
fidivs
xor
jbe
xchg
fs
fsubr
add
call
nop
cmp
clc
cmp
pushf
cmp
sub
in
push
push
mov
stos
xchg
adc
mov
addl
adc
push
fs
leave
gs
jne
imulb
lds
xchg
inc
imul
jl
mov
xor
xor
enter
pusha
enter
dec
test
jno
add
movsb
cmp
mov
outsl
inc
mov
std
dec
es
int
push
jecxz,pn
add
dec
push
add
adc
pop
xchg
popa
sub
repz
push
in
pushf
rolb
cmp
inc
push
lret
sub
nop
lds
gs
lret
fcomi
jae
inc
loope
xor
shll
rorb
mov
jge
movsb
mov
stc
mov
fnstcw
mov
cmp
mov
insl
cmp
orb
push
push
inc
push
enter
dec
sbb
repnz
xor
mov
push
mov
xchg
pop
in
insl
call
sbb
repz
dec
and
push
test
stc
cmp
sub
xlat
imul
out
or
inc
xchg
jnp,pn
fs
in
pop
mov
movsb
int
cs
push
sbb
cmpsb
lcall
jnp
ret
cmp
clc
cwtl
dec
or
rcll
icebp
test
pop
fwait
xor
cmpsl
jle
lret
jb
insl
or
cmp
ljmp
cmc
out
inc
shrl
inc
inc
jno
int3
cmpsb
push
jae
fs
fs
cmpsl
bnd
jnp
xchg
addr16
and
fmull
dec
mov
sbb
push
jb
or
cmp
ret
dec
sub
cmp
cmp
into
cs
pushf
or
mov
sti
cmpsl
mov
jle
pop
jns
push
lcall
xor
mov
fisubrs
subb
std
mov
in
out
mov
les
invlpg
popf
insl
sub
ficoms
jo
ljmp
ss
add
fcmovu
sahf
cwtl
std
xchg
adc
stc
faddl
mov
adc
movsb
mov
push
cmp
adc
movsl
scas
sbb
stos
dec
fnstcw
mov
mov
inc
mov
push
mov
mov
in
sbb
popl
ffree
lods
in
and
insb
sub
rcrb
adcb
fwait
inc
inc
jp
shr
stos
fnstenv
testl
es
push
clc
sbb
inc
jp
jl
cmp
xlat
cld
jo
insl
cmpsb
in
mov
fsubs
popa
dec
xchg
fadds
cwtl
iret
fimuls
cli
mov
loop
xchg
mov
fnstcw
rclb
sbb
mov
fwait
add
cltd
pushf
in
jge
nop
sar
push
pop
pop
add
sub
adc
sub
rcll
leave
cmp
data16
stos
xor
lods
sub
mov
in
cmpsl
cmc
inc
cmp
ss
mov
pop
ret
daa
xchg
and
in
jl
loop
cmpsl
mov
and
and
shrb
dec
push
mov
pop
mulb
lea
mov
bound
mov
sbb
xchg
outsl
xchg
test
insl
xor
adc
xor
pop
ss
jno
pop
aad
xchg
inc
and
adcl
push
stos
jnp
cmpsl
mov
mov
mov
inc
mov
sqrtps
inc
into
xor
xchg
add
dec
pop
push
ja
xor
add
push
es
or
in
cwtl
cmp
clc
data16
add
sub
or
ja
sbbl
nop
sarb
push
dec
rep
dec
xchg
scas
mov
push
adc
fwait
dec
fs
popa
inc
aas
mov
les
sbb
pop
out
lahf
or
cli
push
mov
repnz
fiaddl
std
inc
int
mov
xchg
ret
jae
jle
jecxz
sub
jb
mov
add
mov
xor
cmpsb
lods
in
add
dec
push
mov
xchg
or
xchg
xor
sub
xor
loop
push
adc
jg
cmp
jnp
push
imul
inc
jge
or
inc
scas
sub
sbb
or
data16
mov
xchg
jge
add
xchg
mov
sbb
psubq
dec
in
cmc
mov
xor
push
fabs
xor
push
pusha
jb
addr16
mov
lods
xchg
push
int3
sub
out
lcall
sti
dec
movsl
icebp
push
dec
loope
push
lahf
fwait
mulb
movl
sbb
sbb
movsb
fnstenv
fcomi
mov
das
mov
mov
cmp
xlat
jp
and
cmc
stos
jne
mov
rorl
xchg
and
sub
outsl
cmp
add
add
popa
test
pop
and
add
xchg
sbb
call
lods
adc
in
push
dec
jnp
mov
push
sub
lret
hlt
xorl
in
push
cmpsl
adc
sahf
hlt
int3
and
out
movsb
rcll
add
lock
or
adc
or
inc
or
stc
xchg
icebp
jge
cmp
cmp
arpl
shrl
jle
push
lds
mov
jae
lcall
mov
out
loope
inc
jg
std
jae
adc
sub
jle
pop
fisttpl
inc
aam
pushf
ljmp
fwait
push
loope
and
pop
out
xchg
xchg
add
outsb
xor
cmpsb
inc
test
int
lret
rorb
je
insb
aad
negl
jl
loop
lcall
outsl
push
push
sti
daa
adc
or
xchg
shl
popa
inc
inc
push
or
fldt
outsl
jns
fiadds
cmp
mov
mov
xchg
pop
je
sub
and
out
int3
jns
pop
push
shrl
add
movsb
mov
insb
cmp
inc
pop
pop
jo
xor
mov
mov
dec
loope
arpl
sbb
pusha
xlat
gs
sub
in
adc
pop
imul
in
or
or
inc
fstl
dec
pop
mov
fimull
js
add
mov
xor
or
les
pop
test
fidivrs
inc
call
je
test
leave
dec
pop
lods
ja
movsl
iret
and
fwait
and
pop
adc
cmpsb
xor
push
rcll
ljmp
xchg
ja
pop
cltd
sub
jge
gs
push
pusha
pop
add
fldenv
aaa
nop
dec
inc
adc
mov
jg
mov
adc
inc
pop
ss
int
cmp
mov
xchg
adcl
xchg
dec
sbb
fstpt
xchg
inc
mov
je
shrb
fdivl
sbb
inc
cs
stc
add
fadds
sub
xchg
mov
call
xor
xor
sbb
leave
loopne
out
fwait
inc
jl
add
sbb
inc
orl
pusha
xchg
mov
xchg
out
out
cmp
mov
and
mov
cmpsl
std
movsb
and
les
xchg
fsts
dec
lods
sub
dec
jl
xchg
xchg
imul
sbb
lsl
sbb
add
outsb
mov
sbb
jns
hlt
xor
jg
dec
call
jp
pop
add
mov
fs
push
push
cmc
add
mov
push
ds
divb
fistpl
ljmp
mov
js
gs
in
or
bnd
movl
pop
stos
lock
mov
cli
into
xchg
imul
adc
sub
subb
lock
shl
mov
fstps
inc
ss
roll
adc
mov
movsl
test
adc
popa
fisttpl
mov
je
or
pop
mov
push
pop
cs
loope
sub
outsb
jbe,pt
dec
rcll
push
cld
rorb
repz
aad
sub
sahf
sbb
ret
rcll
xor
sti
aaa
fcmovnbe
jg
js
filds
inc
leave
shrl
cmp
test
xor
push
and
jne
pop
mov
addr16
mov
jo
or
stos
mov
lods
mov
test
inc
cmp
je
jp
jbe
daa
adcl
fwait
xchg
cld
mov
dec
push
sub
inc
clc
fwait
sarl
xor
jb
or
fstpl
mov
movsb
sub
push
push
mov
sahf
mov
es
or
movsl
cli
jecxz
xchg
outsb
leave
daa
call
or
subl
in
mov
cmpsb
push
dec
outsl
sbb
adc
xchg
lods
cmpl
jl
outsb
cld
dec
outsb
lret
lods
lcall
insl
jecxz
fldenv
movsb
xor
and
cmpsb
and
call
mov
cs
jecxz
lahf
fiadds
pop
mov
pop
repnz
ret
jae
sbb
ja
idivb
mov
xor
outsl
or
stc
mov
push
aas
out
or
int3
lret
divb
lahf
sar
shll
imul
adc
adc
pop
dec
das
mov
xor
xchg
mov
ret
or
xchg
pop
inc
cmpsb
data16
mov
pop
adc
mov
iret
jge
mov
mov
push
mov
inc
outsb
out
pusha
pop
xor
lahf
sahf
nop
sbb
dec
dec
mov
add
orl
scas
push
mov
pop
sub
js
pop
dec
repnz
enter
xchg
jge
push
or
aas
lods
fwait
push
adc
mov
outsb
push
fidivrs
jmp
test
add
ret
int
out
xchg
jge
cmp
jle
rcr
fisttpl
push
in
jge
mov
clc
inc
mov
into
sbb
push
outsl
aaa
in
add
sbb
push
mov
inc
lcall
leave
or
pop
sub
push
or
inc
jle
xlat
push
fdivrl
lcall
aas
mov
sub
cmp
std
movsb
ljmp
cs
xor
push
rolb
stos
sahf
cs
xor
and
out
push
clc
lock
inc
xlat
jo
xchg
stc
jecxz
xor
nop
add
loope
mov
pop
and
pop
fwait
shlb
fdivrl
aad
sbb
imul
je
dec
movsb
and
mov
mov
jne
sub
divb
lds
sub
dec
aas
movsb
pop
jno
pop
xor
cmp
popf
push
push
jmp
xor
fimuls
jecxz
out
add
push
popa
mov
and
cmpsl
adc
mov
add
cmp
lock
sbb
and
push
clc
pushf
add
mov
adc
cmpsl
sub
push
pop
shrb
mov
push
aaa
ljmp
jl
ja
scas
jne
cwtl
lock
imul
cmovne
mov
or
and
leave
or
fstps
mov
jnp
ret
push
cmpsl
xor
out
cmpsb
pop
je
sbb
dec
sub
xor
add
jle
cmpsb
mov
jge
push
daa
push
aas
mov
sbb
aaa
movl
jge
mov
scas
ss
sbb
sti
scas
sub
mov
push
adcl
cmp
and
cmpsb
xor
pop
xor
dec
stos
bound
xchg
sub
push
lcall
inc
cli
add
or
adc
subl
mov
mov
cvtps2pi
idivl
ret
sahf
je
ret
and
mov
std
jl
jno
dec
stc
in
jl
js
cwtl
mov
push
loop
cld
or
sbb
jae
fsubrs
and
js
and
scas
fiaddl
into
rclb
scas
cmp
mov
xchg
jle
mov
test
xchg
add
lods
jge
add
jno
imul
add
mov
ret
dec
arpl
stos
pop
fwait
pop
jp
in
xor
inc
add
push
addr16
dec
fs
call
xchg
sbb
sub
loop
sub
cld
mov
out
test
mov
ret
push
std
mov
jge
lret
xor
mov
mov
scas
repz
xor
jge
mov
mov
sahf
mov
in
and
mov
sbb
xor
fsts
es
push
lods
popl
das
filds
mov
fisubs
test
jb
xchg
cwtl
and
push
enter
popa
insl
data16
std
xchg
jns
sub
or
add
out
dec
mov
mov
dec
mov
imul
mov
jecxz
cmp
pop
jecxz
lret
mov
gs
mov
sbb
mov
leave
mov
lret
adc
or
sub
xchg
sub
sbb
pushf
mov
sarl
push
cmp
es
xlat
sub
notb
cli
repz
and
dec
xor
push
in
cmp
sub
fisubs
daa
jp
mov
push
out
push
mov
mov
and
mov
idivb
addr16
lret
jbe
jg
fistl
addl
std
inc
dec
test
dec
mov
fwait
adc
rcrl
inc
mov
out
clc
decb
and
lret
add
fs
jecxz
cmpsl
movsl
lret
push
mull
test
adc
pushf
das
out
jmp
push
test
ret
movsb
ja
popa
das
cli
out
lods
nop
push
popa
iret
cltd
negl
xor
xchg
popa
cmp
push
mov
sub
jne
aam
push
or
insl
test
mov
jge
fnstenv
xor
push
mov
xor
js
jmp
fistpll
jne
ljmp
jne
out
xchg
cltd
cmp
daa
mov
mov
lcall
xchg
ljmp
stos
push
push
xchg
dec
insl
push
das
jl
pop
or
cltd
inc
push
int
aaa
out
or
and
pop
daa
mov
and
dec
loopne
test
arpl
std
sub
jmp
push
cli
add
lods
loope
cmp
cmp
pushf
lret
mov
xchg
loopne
int3
enter
or
mov
shlb
push
repnz
xchg
aas
sub
insl
push
mov
pop
mov
rclb
cmp
shll
adc
hlt
popa
inc
jnp
imul
cld
enter
mov
jns
cmpl
push
cwtl
sub
arpl
mov
lds
je
sub
jne
out
rclb
insl
mov
push
adc
jg
sub
mov
pop
add
mov
cmp
sub
das
in
dec
fidivrl
lahf
pusha
std
mov
scas
mov
insb
jmp
pop
and
cmpsl
lea
push
lock
and
das
daa
dec
orb
ret
pusha
adc
icebp
imul
aas
out
mov
pop
scas
outsl
cltd
not
push
push
lcall
dec
fs
scas
stos
test
imul
pop
rcr
incl
dec
mov
sub
aas
mov
cmp
in
outsb
adc
inc
arpl
fstpt
sbb
ret
jg
test
mov
setae
push
mov
mov
push
push
movsl
sbb
cmp
loop
jmp
push
das
mov
les
pop
inc
sbbb
mov
mov
aaa
cmpsb
sub
clc
popw
inc
les
mov
std
mov
fisubl
dec
out
aaa
sub
in
out
xchg
rcrb
or
or
cmp
push
jno
jge
dec
scas
add
jl
inc
jl
mov
loope
lds
dec
mov
subb
dec
out
or
in
xchg
lret
aaa
int3
ds
andb
frstpm(287
xchg
fstl
mov
jo
pop
outsb
jo
clc
movsl
fs
xor
push
cmp
stos
adc
fists
push
cld
cmp
test
out
mov
sub
sbb
mov
pop
and
add
das
insb
push
push
das
sub
mov
into
xor
xchg
pusha
xor
aas
mov
das
hlt
pop
dec
xlat
jecxz
dec
repnz
adc
sub
jno
bound
sub
ret
cmp
ja
adc
int3
push
dec
cwtl
fiaddl
and
adc
pop
call
neg
jmp
lea
sbb
inc
xor
mov
fldt
jbe
xchg
cmp
adc
push
sub
aaa
mov
sarl
mov
pop
lods
jo
mov
out
in
push
sub
jecxz
sub
jp
sub
rclb
inc
sub
lods
jle
shr
mov
adc
call
push
sub
nop
out
cmp
sbb
push
dec
jmp
lock
dec
pop
jb
xor
dec
aas
add
sbb
jno,pt
lcall
int3
mov
stc
inc
lea
cmp
scas
ret
loopne
sub
aaa
lahf
mov
lret
jmp
xchg
movsb
popf
stc
repnz
lret
movsl
pop
mov
push
cmp
push
xlat
pusha
cwtl
or
inc
cmpsb
stc
cmc
sbbb
nop
jo
rorl
mov
and
bound
pop
push
cltd
in
jae
movsl
mov
and
and
daa
adc
mov
inc
data16
popa
jne
or
popa
jnp
movaps
fidivrs
mov
adc
outsl
outsb
adc
add
shr
shl
ljmp
lret
das
sub
shll
or
pop
ret
mov
jb
gs
sbb
cmpsb
in
mov
int3
mov
xchg
jmp
iret
jl
mov
int3
jp
push
pusha
jnp
pop
aad
incl
mov
sub
fnsave
or
jb
test
sub
sbb
mov
jnp
lahf
je
mov
mov
aaa
shlb
icebp
hlt
pop
dec
nop
cmp
pop
fldl
mov
jb
out
sbb
movsl
mov
jb
ret
sbb
insl
aas
mov
pop
sbb
sbb
rcll
xchg
ss
mov
stos
xchg
xor
push
fdivs
out
sub
push
sub
data16
sub
push
repz
dec
fs
xlat
xor
jle
push
pop
and
loope
das
in
andb
mov
xchg
iret
mov
mov
pop
sub
adc
cs
dec
pop
xchg
cli
lret
movsb
pop
outsl
xor
scas
rcl
jecxz
sub
test
or
aam
cmp
jae
aaa
ret
stos
cmp
jle
js
aas
mov
jp
shlb
push
lahf
push
into
jnp
push
push
stc
js
pop
out
sbb
sbb
xchg
out
cmp
lret
test
outsl
lret
out
sub
fimuls
jnp
or
rcll
dec
loope
sub
out
jle
xchg
daa
xchg
add
jecxz
inc
out
int
in
jmp
jo
lea
push
test
add
sar
and
pop
inc
push
mov
sbb
mov
push
jmp
push
xchg
enter
scas
lock
dec
pusha
sahf
adc
mov
pop
jno
or
mov
pop
pop
sbb
insb
das
pop
je
arpl
les
xor
jecxz
jns
int3
movsb
into
jle
add
jp
pop
jo
jae
and
xor
movsb
push
dec
mov
inc
xchg
les
in
jmp
adc
push
dec
pop
jmp
and
punpcklwd
jae
rcrb
jbe
test
jg
repz
lcall
or
cmp
or
scas
mov
iret
or
mov
push
fistl
sub
adc
pop
xchg
call
out
test
sub
dec
cld
aas
xchg
and
cmpsb
fsub
pop
jmp
jbe
leave
mov
cmp
xor
inc
ja
push
test
jb
push
popa
inc
jb
shrl
dec
loop
sub
adc
daa
ljmp
aam
pop
add
inc
mov
sub
fsubl
cmp
sbb
jge
adc
loop
push
lock
out
cs
xchg
clc
notb
add
or
test
lret
inc
in
out
gs
mov
aas
insl
pop
aad
mov
stos
sti
lods
cld
leave
icebp
cwtl
jae
pop
mov
dec
es
fs
mov
rorl
add
push
fnstsw
pop
pop
lock
repz
jnp
and
in
lcall
jns
or
push
clc
xlat
lods
ja
call
push
in
repz
cmp
mov
or
stc
mov
rcll
popa
sbb
int3
sbb
add
mov
pop
cmp
mov
mov
std
shll
and
jle
sub
mov
xchg
fwait
xor
clc
addr16
cli
mov
inc
or
jnp
out
scas
pushf
pusha
pop
push
push
fisttpl
frstor
pop
in
cli
xchg
mov
fadds
sbb
cmp
and
cltd
lods
or
cmc
stc
loop
push
push
pop
cmp
sbb
test
nop
testb
popa
mov
sub
xchg
stos
inc
ficoms
push
ret
mov
jp
xchg
loope
push
jns
insb
dec
cmp
jae
test
add
adc
push
push
movsl
push
sub
loope
add
ret
inc
mov
and
mov
mov
inc
cmc
dec
neg
test
lret
nop
cltd
cmp
fwait
sti
xchg
es
mov
mov
movsb
dec
cmpsb
sbb
or
in
scas
lret
fs
jl
or
inc
cltd
mov
out
fwait
sbb
xchg
adc
xor
sarl
fwait
xchg
add
push
inc
and
push
push
dec
lds
mov
pop
loop
int3
nop
or
les
in
cmp
mov
push
jp
dec
fisubs
scas
iret
jns
pop
jl
cmp
test
dec
jne
jb
sub
testl
and
loope
cmpsb
or
xchg
sub
das
test
cs
lea
test
call
movsl
or
dec
cmp
repz
ja
jne
pusha
pop
bound
mov
push
enter
mov
nop
mov
push
sub
je
mov
mov
orb
addl
mov
or
mov
inc
pop
rorl
mov
fs
inc
inc
sahf
push
imul
and
shr
lods
pop
addb
es
xorl
clc
outsb
push
ljmp
loopne
filds
stos
jmp
dec
push
test
jb
aas
mov
or
movsb
cld
outsl
ljmp
stc
cltd
dec
mul
dec
int
arpl
aaa
pop
adcl
pop
aad
or
loop
dec
xor
clc
das
aam
push
push
cli
outsb
cmp
push
out
cmpb
push
scas
jmp
ret
xchg
ss
pop
arpl
xchg
mov
std
int
push
std
lods
push
sbb
sar
imul
sbb
xor
mov
fistpll
adc
or
stos
in
rclb
and
in
int3
cli
cmp
mov
cmpsb
cmp
xlat
scas
sti
les
shl
movsl
inc
sti
insl
jnp
loopne
push
test
jmp
sub
cmc
pop
popf
cmc
loope
arpl
jl
inc
adc
test
adc
pushf
pop
jp
push
mov
paddsb
subl
in
mov
jle
sub
mov
dec
mov
xor
je
xlat
jae
notl
out
jecxz
push
mov
cmp
push
rclb
fwait
and
mov
add
lds
xor
scas
stos
add
dec
sub
out
outsb
sbb
lahf
xchg
push
loopne
bound
sub
inc
fidivrs
push
cs
dec
inc
cwtl
imul
adc
test
jmp
pop
inc
xchg
mov
sbb
fimull
pop
rolb
das
xor
jae
fisubs
adc
jne
jge
scas
iret
mov
clc
pop
ds
sbb
andl
stos
cltd
leave
sbb
jbe
cmpsl
cli
mov
jl
outsb
mov
mov
cmp
hlt
sub
clc
sub
xchg
cli
sub
js
adc
sub
lret
pop
cmp
shlb
cmp
or
mov
pop
add
rcl
jp
sbb
ret
js
cltd
leave
repz
pop
and
lret
int
repz
sub
adc
in
lcall
jg
icebp
sbb
mov
lock
pop
fwait
pop
das
jmp
adc
mov
imul
mov
or
jecxz
sar
pop
shrl
cmp
scas
mov
cli
jnp
pop
js
mov
or
mov
jl
sub
sbb
xorb
and
pop
das
dec
and
dec
and
inc
aad
stc
sub
test
sub
push
cmp
arpl
push
adc
inc
pop
jle
shrb
dec
ficoml
das
xchg
mov
popf
aam
add
test
pop
mov
jns
mov
leave
jmp
sbb
lcall
out
or
roll
mov
add
adc
dec
lea
or
xor
mov
mov
loop
mov
inc
cmp
test
out
jmp
add
lds
dec
gs
std
arpl
lahf
add
xchg
pop
out
je
call
js
adc
loop
mov
inc
mov
jl
sbb
pusha
jns
jne
divb
jbe
arpl
or
xor
gs
sbb
sub
add
nop
in
push
cs
in
out
clc
iret
enter
movsb
daa
xchg
test
test
add
bswap
shr
jno
xor
out
mov
push
add
loope
data16
imull
imul
movsb
mov
jb
int3
fists
and
int
mov
aam
inc
int
sbb
jge
adc
leave
shrb
jnp
cmp
sbb
jo
jg
xor
mov
push
les
div
pop
sbb
int3
mov
cmp
incb
sub
add
jne
sbb
pop
inc
inc
jnp
aaa
fcmovbe
and
js
pop
or
mov
sarb
ljmp
data16
pop
mov
mov
mov
inc
repz
push
mov
test
inc
or
mov
imul
xor
mov
stc
adc
mov
icebp
hlt
addr16
pop
dec
inc
mov
in
inc
shlb
cli
and
or
dec
inc
lahf
leave
aaa
mov
in
shl
in
mov
jp
pop
jno
ficoms
push
push
gs
loope
fisubrl
jo
jae
mov
mov
jmp
mov
inc
xchg
xor
jp
shlb
in
out
cmp
xor
adc
add
sahf
dec
adc
movsl
pushf
and
jno
jbe
icebp
jbe
fs
mov
icebp
call
mov
adc
mov
xor
pop
and
push
mov
ds
sahf
push
cli
mov
hlt
mov
repz
pop
pop
mov
jmp
cmpsl
sbb
rorl
loope
jmp
aaa
mov
inc
dec
mov
roll
rclb
shrb
xchg
sub
lahf
dec
adc
xor
push
inc
mov
xchg
les
sub
addb
movsb
push
mov
mov
pop
js
aad
xchg
jg
lock
out
or
sbbl
test
das
fsubs
repz
ss
mov
std
xor
rcrb
imul
cmp
iret
or
out
fstps
pushf
clc
add
and
or
and
mov
jbe
std
in
iret
movsl
or
frstor
sbb
ret
xor
iret
push
or
std
jb
aaa
mov
out
out
cltd
in
push
or
mov
push
dec
push
push
fimuls
mov
enter
xor
push
mov
and
fstpl
stos
sbb
aas
sahf
ds
icebp
xor
cld
fs
mov
aas
das
shlb
or
dec
push
cld
test
popf
aaa
ja
dec
pushf
movb
adcb
fiaddl
mov
sbb
lods
cmp
sbb
or
cmp
adc
stos
sbb
mov
cmp
sbb
stos
sub
repnz
cmp
bound
and
out
incb
cmpsl
mov
cmp
mov
sbb
lahf
stc
lock
inc
mov
add
mov
repz
rsqrtps
jmp
or
xor
int3
mov
fs
or
enter
mov
pop
out
adc
or
imul
mov
adc
fwait
mov
jb
mov
clc
mov
xlat
outsb
lret
xchg
mov
pop
mov
mov
stos
xchg
adc
filds
stos
xor
pop
xor
fists
inc
push
mov
mov
pushf
daa
inc
sub
inc
aas
nop
arpl
cmp
bound
xchg
sub
pop
repnz
out
add
xchg
cltd
mov
dec
and
xor
test
and
test
fists
and
mov
jne
loop
sub
adc
test
outsl
outsl
xor
add
sbb
cli
and
and
pushf
xchg
pop
fsubrs
adc
nop
dec
dec
aas
ds
jecxz
adc
bound
test
mov
lock
into
cmp
imul
in
add
ljmp
dec
cmp
aam
popl
xchg
xchg
xchg
ret
jl
sub
jge
push
cmp
in
mov
fwait
push
jl
push
push
mov
jne
sbb
outsb
insb
nop
push
xor
stos
push
ret
loop
xchg
mov
outsl
int
sbb
lea
icebp
icebp
roll
cmp
movsl
cli
sbb
jecxz
jmp
pop
sbb
pop
pop
aas
pushf
stos
out
out
dec
fs
loope
jae
test
adc
adc
hlt
test
mov
insl
adc
imul
outsl
repz
sbbb
cli
mov
adc
in
adc
xor
mov
int3
clc
ds
push
adc
std
sbb
mov
jno
mov
lock
lcall
inc
imulb
mov
cmc
jmp
loop
cmp
fistpll
lds
ficomps
sub
push
movsb
mov
push
dec
movsl
xor
daa
push
mov
and
sahf
int
xchg
imul
ror
daa
push
mov
rcll
enter
sbb
das
mov
mov
xchg
mov
mov
adc
cwtl
mov
sub
push
dec
call
rolb
rclb
test
cmp
rorb
sub
mov
rorb
insl
pop
sbb
iret
inc
ds
xor
inc
in
pushf
pop
nop
and
dec
push
std
or
adc
lea
popf
lods
pop
cmp
in
das
movsl
lds
orl
movsb
aam
lds
add
cmc
repnz
adc
pop
es
out
lret
and
mov
jae
xchg
cld
jae
sub
jl
test
jne
fsub
push
cmpsl
mov
popf
insl
xchg
xchg
mov
adc
test
adc
dec
mov
push
jns
inc
in
inc
cli
in
jno
inc
out
pop
fisttpll
ss
adc
out
dec
pushf
or
movsb
ds
ljmp
rcrb
cmp
and
add
imul
xor
jnp
sub
pop
test
sbb
repnz
in
sbb
lret
push
xor
popf
adc
dec
mov
cmc
dec
mov
nop
sub
imul
pop
jae
sbb
jno
mov
mov
jbe
dec
fstpt
outsb
mov
insl
shll
push
pop
aam
pop
xchg
rorl
push
jno
cld
test
sub
fldcw
dec
dec
pop
aas
dec
xchg
pop
sarl
loope
repz
rcll
out
or
push
add
lret
mov
jmp
adc
or
sub
cmpsl
jnp
stos
clc
xlat
pop
xchg
sbb
inc
hlt
and
mov
pushf
fists
mov
aam
imul
out
mov
xchg
fwait
adc
mov
push
fdivl
jmp
push
fcmovnu
test
sbb
out
push
inc
imul
lret
cmp
jecxz
sbb
hlt
mov
fstpl
cli
cmc
cmc
jnp
sub
ficomps
hlt
mov
inc
jno
jmp
and
cmp
sub
shlb
mov
pop
adc
mov
cltd
shrb
mov
pop
cmp
jg
aas
sub
pop
sahf
push
repnz
fadds
outsl
fmulp
fucomip
mov
aam
dec
fisubs
xchg
and
test
push
mov
hlt
aaa
pop
movsl
sub
jne
loopne
je
fwait
sub
mov
push
fcmovnu
scas
push
xchg
jns
add
adc
ljmp
cwtl
push
daa
bnd
sub
mov
int3
jb
sub
jae
xchg
lcall
inc
mov
ret
jns
xchg
inc
push
cmpsb
or
out
das
xchg
sub
push
jle
inc
push
arpl
mov
popa
xchg
call
hlt
fistl
pop
movsl
mov
xchg
inc
repnz
jg
shr
shll
fs
les
push
insb
decl
aas
sarb
lcall
dec
out
xchg
int3
xor
and
scas
push
into
ds
shll
mov
jg
push
adc
leave
adc
clc
imul
scas
push
lods
xchg
lret
int3
push
call
xorl
jbe
rcr
js
jnp
xor
mov
rolb
dec
xor
sub
je
in
mov
mov
sbb
fadds
lock
dec
add
insl
int
dec
int3
aas
mov
jge
adc
adc
push
outsb
shlb
lock
ljmp
lcall
sub
cli
xor
fisttps
mov
lock
call
push
push
out
fdivrs
mov
mov
stos
call
add
les
jge
dec
dec
fwait
cmpsl
inc
jno
inc
or
xor
aad
insl
push
jne
sub
cmc
dec
frstor
sbb
add
lods
pop
les
insl
subb
mov
pop
icebp
mov
xor
pinsrw
imul
in
lret
call
add
fnstsw
lret
push
testb
out
push
fmull
data16
ret
cmp
xor
sub
pop
stos
jp
mov
cmp
mov
push
pop
in
mov
mov
xor
inc
fisubl
xor
shlb
push
jo
mov
das
push
aam
shl
leave
jns
movb
pusha
xor
mov
or
hlt
rcrl
adc
dec
cwtl
repnz
pop
xor
clc
insl
inc
test
mov
mov
jb
jns
je
outsb
je
mulb
sub
cmp
pop
push
in
pop
scas
call
dec
addr16
mov
mov
ror
lret
scas
stc
repnz
fldl
jns
cld
mov
add
in
iret
hlt
enter
pusha
test
inc
pop
cli
dec
ret
ret
xor
push
enter
lods
mov
sarl
or
test
lock
shll
in
cmp
aaa
insl
cmp
add
push
and
arpl
push
shrl
inc
fucom
inc
dec
add
cmp
mov
mov
decb
dec
and
sbb
insl
mov
into
nopl
jge
adc
shll
scas
lcall
stos
pushf
cltd
and
mov
lretw
jp
push
xchg
icebp
xlat
xchg
imul
fisubs
cmp
cmpsb
dec
stos
aas
cmp
mov
sub
dec
pop
movsb
loopne
ret
jae
mov
ja
pusha
xchg
xor
fucomip
and
in
add
inc
lret
cmp
pop
insl
cmpsb
lds
fwait
add
js
repnz
imulb
jns,pn
inc
ljmp
lds
jg
cmp
test
popf
xchg
xor
fildll
daa
test
xchg
mov
xlat
jg
mov
pop
test
cs
cmp
and
rol
mov
xchg
adcl
les
xchg
cmpb
jb
ds
lahf
mov
lret
lods
or
sbb
test
ds
xchg
xchg
jb
cmp
cmp
into
xchg
cli
add
inc
lea
mov
stos
inc
pop
mov
jb
cli
jecxz
out
and
add
mov
cmc
js
loopne
fbld
xchg
jno
in
es
popa
push
cld
sbb
clc
pop
inc
sbb
push
jle
rclb
and
lock
pop
or
inc
insb
pop
xchg
mov
out
mov
jns
mov
lock
lahf
or
in
jnp
js
fcmovb
dec
cmpsl
ret
sub
mov
xlat
insl
loope
xor
adc
outsb
adc
das
cmpsl
ds
loopne
pop
jle
imul
rcr
inc
push
jp
popa
imul
inc
ljmp
loop
fmull
loope
cmp
mov
cmpsl
xchg
fcomps
aam
cltd
inc
fdivrs
ficoms
jecxz
stos
xchg
sub
push
mov
xchg
mov
mov
pop
inc
and
das
ret
push
test
cmp
out
add
pop
mov
push
mov
adc
xor
rol
or
fisttps
nop
fcmovbe
adc
stos
jp
push
popf
sub
stc
mov
add
ss
jne
push
test
mov
sbb
sub
cmp
loop
pop
jno
xorb
push
es
fisttpll
int3
andb
enter
je
fmul
sbb
xchg
scas
loopne
stos
test
mov
mov
sub
jne
into
imul
or
or
xchg
push
test
in
pop
cmp
lret
jmp
xor
lea
xchg
test
cld
mov
cmp
adc
je
ret
push
punpcklbw
pop
push
loopne
imul
out
test
sub
push
jmp
add
ret
out
sub
or
fists
dec
add
cmp
in
repz
xlat
or
adc
add
shrl
xchg
repz
shlb
mov
sahf
cmpsb
daa
or
ljmp
push
add
mov
cmp
lds
push
sub
xor
in
in
xchg
adc
jg
xchg
or
mov
xlat
dec
mov
adc
jnp
aaa
lock
idiv
mov
out
mov
xchg
cld
in
loope
test
push
pop
movsl
xor
jne
jp
es
shll
push
push
dec
pusha
and
lcall
mov
lcall
sub
mov
inc
ret
xor
fwait
inc
dec
outsl
cli
aas
adc
xor
ret
iret
add
rolb
mov
push
stc
fs
jl
mov
notb
mov
mov
inc
push
inc
add
loopne
lret
out
shll
lea
xchg
lret
push
xchg
push
cmp
mov
jne
int
es
adc
mov
mov
stos
and
inc
sbb
mov
jns
fisttps
lret
sbb
mov
aas
stc
sbb
pop
mov
inc
ret
js
jne
mov
addl
lea
outsb
pusha
test
push
rclb
ds
stc
out
es
es
in
sbb
sub
cltd
lods
mov
inc
imul
fidivs
aaa
xchg
add
xor
aad
fstpl
pop
in
int
or
cs
daa
arpl
cmp
cmp
adc
push
cmpsl
cmp
mov
jmp
insl
outsl
add
xor
inc
or
or
adc
ljmp
clc
rolb
es
add
hlt
sbb
fldt
inc
sub
or
lock
mov
adc
js
xor
jae
lret
cmpsl
iret
mov
mov
push
je
loope
dec
daa
adc
data16
xor
inc
sub
adc
bound
adc
aam
mov
push
ret
ds
inc
scas
mov
add
sub
and
out
lahf
call
stos
push
mov
lcall
sbb
mov
test
sahf
lods
xor
or
sub
xchg
rclb
ror
outsb
idivl
jle
cmp
push
pop
mov
cmp
cmpsb
les
add
inc
pop
pop
mov
rolb
cmp
loop
scas
mov
addr16
jns
mov
adc
or
out
sahf
jbe
cli
loope
stos
roll
adc
cwtl
sbb
mov
test
mov
jle
dec
jae
in
xor
out
sub
jbe
cmp
sub
lea
std
push
pop
mov
daa
jbe
cld
clc
leave
pop
in
aad
inc
scas
pop
cmp
dec
xor
lahf
jge
je
clc
andl
or
sub
test
aad
orl
flds
mov
dec
xor
ret
je
call
or
dec
lea
xor
das
and
frstor
sbb
popa
sahf
sbb
clc
stos
add
testl
out
mov
int
movsb
and
and
inc
xchg
sbb
jle
sub
cmc
movsb
daa
adc
xor
push
jno
xor
scas
dec
mov
ret
cltd
inc
in
add
imul
cmp
jp
jb
dec
inc
outsl
pop
or
inc
pop
fsub
je
xchg
inc
cs
rcl
mov
bound
xchg
je
les
cmp
adc
imul
xlat
mov
pop
orb
mov
xchg
out
fistpl
sbbl
lret
mov
jnp
insl
cltd
sub
ds
scas
mov
rolb
sbb
fists
leave
scas
jle
xchg
pop
adc
sub
cmpps
lock
xchg
sbb
dec
mov
repnz
inc
and
push
sub
cli
icebp
jbe
pop
jecxz
sbb
mov
rcl
ljmp
popf
lea
fs
xlat
repnz
fucomip
outsb
cmp
rolb
sub
push
rcl
in
cmp
iret
jg
js
mov
js
and
xor
adc
cmpsb
sub
out
push
cmpsb
jl
sub
bound
mov
pop
pop
inc
push
js
inc
jmp
adc
inc
push
mov
dec
shll
fcmove
enter
nop
pcmpgtw
ds
icebp
fists
cmp
xchg
dec
call
dec
push
xchg
pop
sbb
cmp
loopne
pop
cli
add
mov
mov
pop
loop
or
dec
popa
pop
mov
fs
ret
push
loope
orl
jae
addr16
cld
mov
xor
bound
lcall
sbb
rcll
fidivl
adc
mov
aaa
cmp
mulb
jge
push
inc
adc
cmp
jae
in
lcall
pop
in
test
pop
cld
andb
add
jmp
cmpsl
dec
mov
cmpsl
jl
es
add
push
mov
cmp
push
mov
jl
cmp
xchg
jl
jl
ja
sti
cltd
ret
pop
ret
test
push
mov
sbb
or
fiadds
int3
outsb
gs
cmp
xor
lds
pop
ss
adc
cmpb
shlb
ljmp
or
sub
fisubs
out
inc
arpl
and
sarl
aad
and
mov
mov
jge
dec
incl
lock
call
sub
adc
imul
imul
add
and
fadd
mov
xchg
fmulp
ja
and
sub
dec
imul
jnp
cs
pop
cmpsb
lods
adc
std
sub
push
jge
leave
ds
lea
test
enter
pop
jge
push
jbe
test
insl
adc
into
mov
arpl
scas
sbb
and
xor
jne
jo
fwait
stos
dec
sbb
ret
movsb
sbb
or
sbb
js
cmpsl
popf
loopne
push
sbb
add
mov
cs
mov
movsl
adc
xchg
push
negl
lds
lods
lea
aam
das
shr
adc
ja
adc
jae
std
insl
xchg
jo
lods
xchg
mov
dec
repnz
add
pushf
inc
shl
out
repnz
mov
adc
test
adc
stos
inc
or
add
mov
cmp
cli
pushf
pop
aaa
mov
shl
or
int3
pop
add
jo
or
insl
popf
jb
imul
push
mov
sbb
sub
mov
and
and
push
pop
add
pushf
scas
repnz
test
inc
and
sub
cmp
add
js
xchg
cmpsl
aad
sbbb
inc
push
out
xchg
out
idivl
stos
mov
out
inc
jne
fwait
out
jecxz,pn
test
jns
std
sub
subb
xor
cld
sbb
inc
pop
lds
mov
out
add
push
cltd
cmp
jne
jp
scas
push
dec
fdivs
push
sbb
mov
mov
test
dec
mov
lret
pop
jbe
in
push
das
dec
push
xchg
add
jecxz
call
cli
and
bound
dec
out
fmuls
sub
sbb
push
leave
lea
popa
push
jo
loope
fcomps
ret
mov
aas
mov
push
inc
lcall
lods
inc
inc
and
adc
fs
xor
cmpsl
sahf
push
inc
adc
pop
in
fwait
xchg
dec
xchg
ret
rcr
pop
add
data16
popa
lret
shrd
out
push
mov
cmp
xchg
pushf
jle
aaa
shrb
int3
push
push
jmp
sti
pop
outsb
enter
mov
dec
imul
dec
xor
pusha
daa
fs
xchg
and
inc
xor
test
cmp
scas
mov
popa
mov
mov
insb
push
and
lea
dec
dec
insb
adc
lcall
add
pop
jmp
sub
notl
ret
jns
pop
sbb
imull
or
lret
push
push
cmpsl
inc
pop
cmpsl
xchg
add
inc
xor
adc
hlt
xchg
push
repz
js
and
mov
clc
fsin
insb
push
add
and
xchg
mov
mov
mov
mov
push
jb
push
mov
inc
ds
aaa
movsb
mov
or
jno
pop
pop
pop
sub
add
hlt
add
stos
xchg
mov
jg
mov
mov
loope
xchg
sub
pusha
aam
out
push
std
pop
dec
sbb
out
pop
mov
jl
imul
shlb
or
jmp
mov
repz
sbb
aam
xchg
gs
fildl
inc
mov
mov
mov
jmp
ds
dec
cmpsl
pop
cmp
data16
inc
fisttps
push
jbe
mov
movsb
cmp
mov
jae
outsb
fildll
inc
and
pop
ja
cmpsl
in
cmpl
sub
inc
dec
xchg
and
outsb
cmp
and
pop
xchg
jns
cld
cltd
xchg
cld
mov
mov
aam
jbe
test
mov
jmp
sub
out
mov
or
mov
lock
mov
jg
push
add
or
cmpsb
sub
jg
stos
mov
jbe
sahf
push
std
stos
cs
aas
and
jns
je
lea
push
xor
or
mov
in
inc
and
inc
sahf
sub
popa
lret
cmpb
daa
mov
sub
pop
sahf
dec
test
in
jecxz
ror
mov
es
or
pop
in
rcrl
inc
fcoms
sub
mov
dec
imul
jae
dec
mov
or
les
enter
mov
and
gs
jbe
les
leavew
test
fnsave
mov
inc
mov
xor
sti
flds
mov
dec
fisubs
mov
push
xchg
add
xor
sub
nop
jg
dec
aam
push
dec
add
test
inc
and
std
add
movsb
xchg
sti
movups
repnz
and
in
fisttpll
sbb
pop
mov
icebp
pop
ss
loopne
subb
inc
push
inc
lret
fucomip
cld
imul
dec
sub
pop
sbbb
mov
jno
ja
not
sbb
insb
push
pop
mov
fidivrs
out
fdivrl
push
sbbb
xlat
pop
push
and
xchg
push
push
in
lds
scas
inc
ret
stos
pop
je
popf
inc
loop
movb
and
bound
rcrl
or
or
mov
fcmovnbe
mov
jl
push
rclb
dec
addr16
inc
add
add
fsubrs
jge
xchg
into
jp
and
xchg
xor
and
jo
jno
movsl
inc
push
test
ret
mov
or
pop
repnz
jl
pop
sbb
lds
fwait
bnd
cmp
cmpsl
inc
dec
mov
push
and
ret
lods
mov
and
dec
dec
cmp
adc
popw
jnp
push
mov
in
test
mov
pushf
jmp
mov
daa
aas
mov
xor
int3
ss
repz
lods
std
sbb
add
movsl
dec
mull
daa
fxch
mov
iret
sbb
repz
xorl
pop
cmpsb
adc
xchg
fdivrl
in
jmp
ljmp
cmpsl
stos
in
mov
in
cmpsb
les
mov
iret
ss
push
rol
push
outsl
out
jns
fidivl
les
mov
xor
ret
stos
lea
mov
mov
stc
jno
add
in
xor
sub
push
sbb
push
int
mov
dec
cmp
cli
xlat
mov
lods
jmp
push
mov
cmp
fdiv
jb
mov
mov
pop
sub
mov
loopne
jecxz
loopne
push
mov
cmpsl
jno
xor
shrb
cltd
add
ret
lret
push
ja
sub
and
jo
inc
out
mov
into
inc
jmp
add
mov
lds
xchg
fwait
lcall
fs
pop
jmp
sbb
sbb
rclb
test
roll
sub
sti
fisttpl
sbb
stc
outsb
pop
xor
sub
xchg
adc
lods
lss
sarb
lods
pop
mulb
pop
adc
adc
jle
inc
xor
jbe
out
pop
jg
mov
jae
xchg
mov
adc
pop
leave
neg
jnp
stos
adc
mov
push
sub
imull
stos
dec
adc
push
sub
int
aas
xchg
mov
jg
sub
mov
sub
mov
add
je
xor
sbb
xor
rcl
cli
fcompl
xor
cmpsl
test
dec
push
mov
mov
mov
mov
mov
sti
in
aaa
lahf
test
subl
lods
and
add
scas
call
mov
mov
mov
add
cmc
out
adc
adc
aaa
popf
xchg
insb
clc
ret
shr
repz
jle
mov
pop
sub
add
cltd
arpl
bnd
xchg
inc
mov
xor
movsl
popf
xchg
pop
in
xor
dec
pusha
dec
xchg
mov
xor
in
mov
adc
and
shrb
pop
mov
mov
mov
inc
cwtl
xchg
xor
je
xlat
sub
mov
dec
insb
sti
mov
sbb
ss
add
sub
aaa
push
in
sub
mov
ret
sub
dec
xor
ja
in
mov
movsb
fnsave
push
jns
and
in
mov
leave
cmp
testb
insb
js
std
in
cmp
sub
jne
hlt
jnp
jne
scas
lret
movsb
subb
add
push
push
inc
lret
and
sbb
mov
lret
add
mov
cmp
dec
mov
orl
adc
xchg
and
jg,pn
bound
push
push
cmp
enter
test
sub
idivb
sti
ds
lods
lods
push
add
add
pop
sti
xlat
mov
dec
fbld
in
roll
mov
jo
lahf
das
cwtl
icebp
add
mov
mov
mulb
cmp
xor
dec
sarl
pop
cmpsl
adc
cli
stos
push
adc
shll
sar
shll
insb
add
adc
push
inc
adc
es
cmpsl
xchg
pop
sub
xchg
std
ljmp
in
mov
cmp
out
pop
jbe
dec
cmp
xor
or
adc
push
ja
pushf
mov
push
add
hlt
lods
loope
sahf
scas
ret
xchg
mov
jo
inc
sub
test
pop
hlt
sbb
imul
pop
mov
pop
mov
sti
lea
sub
sti
pop
pop
jo
invd
pop
push
lret
cmp
cwtl
mov
frstpm(287
jbe
pushl
dec
movsb
and
movl
xlat
les
cmp
and
iret
sub
out
push
daa
or
rcll
lahf
and
xchg
outsb
jp
ds
es
stos
test
rorb
stos
shlb
iret
mov
jl
xor
mov
or
push
arpl
pop
inc
leave
lock
mov
xchg
ja
xlat
in
std
adc
cltd
out
mov
pop
mov
pop
pop
xor
stos
add
adc
pop
xchg
scas
sbb
movsl
sarl
ja
and
bnd
insb
repnz
insl
pop
mov
add
jl
js
scas
inc
and
pop
cltd
xor
mov
scas
repz
jne
cs
fildll
sub
xchg
sbb
ja
aaa
insl
call
dec
mov
add
lret
push
mov
inc
xchg
mov
ja
movsb
pusha
dec
adc
lret
pop
push
push
pop
test
fstl
or
std
fimuls
jecxz
xchg
daa
push
lret
xchg
mov
insl
xor
jbe
sbb
xchg
or
inc
inc
and
push
repz
in
pop
nop
fsts
loop
pop
cmp
into
insl
lcall
pop
inc
sub
inc
bound
mov
add
mov
adc
add
cld
repz
js
jecxz
or
outsb
insl
out
jmp
mov
call
push
ljmp
cmp
sbb
ljmp
inc
cmc
pop
mov
rcr
sub
call
rcl
incl
add
push
inc
mov
jge
mov
dec
dec
push
inc
pop
rorb
push
push
lret
andb
mov
stos
das
jl
mov
dec
sub
ja
rorb
enter
jae
adc
and
xchg
pop
int3
aas
fcoml
and
dec
adc
in
movsl
add
push
imull
out
xor
test
test
adc
mov
push
test
mov
daa
je
mov
shll
les
pushl
inc
mov
add
xor
cli
jo
inc
sbb
xor
push
mov
mov
xor
jns
fadds
xchg
roll
cld
pmaxsw
sbb
ja
adc
pop
push
sbb
mov
inc
lock
int3
lcall
sbb
cwtl
inc
add
adc
mov
out
or
sub
ss
mov
neg
bt
xchg
dec
dec
test
adc
enter
xchg
daa
inc
insb
movsb
outsb
dec
pusha
cltd
push
or
mov
inc
cli
jecxz
aad
sarb
mov
out
xor
aam
xchg
int
push
in
sbb
xor
inc
or
adc
adc
addb
movsl
mov
sub
lea
ds
xor
test
xor
push
or
movsb
aas
scas
add
xchg
cmp
mov
or
xchg
mov
pop
sub
test
stc
ret
sbb
dec
mov
sbb
adc
cmp
daa
scas
jb
sub
cmp
xchg
sbb
mov
lcall
sbb
iret
jnp
xchg
mov
sbb
es
pushf
addb
and
add
flds
outsb
pop
clc
subb
xchg
iret
out
cli
out
xor
scas
xchg
push
aam
and
leave
jbe
test
adc
int
mov
sbb
xchg
add
adc
add
mov
and
cmc
pop
xchg
or
push
xor
dec
mov
imulb
mov
filds
jbe
cltd
xchg
pop
add
sbb
aad
cmp
sub
mov
pop
sahf
data16
mov
in
popa
cmc
inc
dec
pusha
push
inc
mov
cmpsb
rorl
mov
xor
adc
xchg
insb
inc
jo
outsl
out
fcoml
clc
xor
sbb
inc
outsl
dec
rcll
jae
xchg
push
adc
xchg
les
adc
repnz
sub
je
aad
lods
pop
inc
jp
sub
mov
push
add
insl
pop
xchg
das
inc
sti
or
mov
cmp
mov
pop
or
ret
popf
push
sbb
and
shrl
mov
pop
mov
sbb
repz
roll
add
push
xor
xchg
rcll
out
xor
iret
mov
daa
loop
or
pop
mov
nop
dec
xor
xor
hlt
and
cmpsb
imul
inc
rclb
sbb
stos
jbe
adc
mov
fbstp
out
cld
inc
mov
xor
decb
orl
add
jbe
xchg
xor
add
test
or
lods
mov
shrl
arpl
mov
out
push
test
mul
lret
or
ret
popa
jns
fimull
rorl
add
mov
ficoml
jb
leave
inc
mov
mov
fmull
xor
mov
aaa
pop
sbb
or
pushf
sub
jae
add
or
push
pcmpgtw
xchg
sub
jo
sub
cmp
rorb
repnz
xchg
icebp
pop
fsubrs
insl
pop
pop
mov
nop
inc
lahf
dec
cli
out
hlt
xchg
frstor
ret
dec
ret
and
inc
repnz
push
ret
insb
inc
jno
pop
fidivrl
pop
sbb
lds
shlb
add
mov
daa
out
pop
sarl
test
push
sbb
pop
xorb
lods
sbb
push
mov
out
sub
cs
jl
cwtl
mov
clc
pop
mov
mov
jb
dec
pop
jno
mov
cmp
push
or
mov
cmpsb
sub
out
nop
dec
mov
in
int3
insl
mov
scas
add
and
aad
or
addr16
pusha
aad
sbb
fnstcw
cwtl
xor
fisttpl
or
jo
add
jbe
mov
fwait
mov
in
and
fstl
sbb
in
lods
pop
cltd
arpl
push
push
push
aas
and
std
and
sub
jmp
pop
jae
nop
js
or
jo
jo
mov
imul
add
clc
insl
lahf
xchg
adc
dec
mov
mov
xor
cld
xchg
inc
out
jne
sbb
pop
mov
gs
jle
mov
int
pop
push
stc
pop
push
lcall
cli
push
dec
push
sti
psubw
cmp
add
fnsave
dec
inc
mov
dec
and
push
shlb
or
lcall
fsubl
movsb
les
scas
or
push
pop
es
xchg
xor
xor
mov
stos
lods
cmpb
jp
fst
add
inc
mov
jns
inc
sti
pop
std
aad
ss
mov
je
push
pushf
es
mov
ret
sbb
xchg
xchg
pop
stos
mov
hlt
gs
clc
push
outsb
subb
cmp
mulb
or
adc
lods
les
aas
adc
loopne
stos
mov
out
lods
arpl
int
inc
mov
xchg
in
rcrl
pop
dec
pop
jl
lds
sbb
iret
jno
in
fisttps
shl
not
lahf
lods
pop
jle
add
xor
mov
pop
mov
stos
scas
shl
push
addr16
cmp
mov
pop
push
in
dec
sbb
push
lret
out
pop
rep
and
inc
es
jp
pop
ret
push
add
repz
jmp
push
stc
xchg
outsl
sbb
mov
mov
jae
mov
into
adc
jbe
xchg
popa
or
mov
repz
sub
daa
outsb
adc
xor
loope
loopne
adc
add
out
clc
jo
shlw
push
loopne
inc
cmp
iret
int
pusha
orb
mov
in
xor
xor
out
mov
fsubs
in
inc
in
mov
lods
cmc
sub
mov
call
and
fbstp
jnp
cmpsl
and
movsl
xor
sbb
idiv
lea
fs
imul
mov
push
daa
sub
imul
push
into
mov
je
arpl
push
xchg
pop
mov
dec
movsb
add
in
hlt
sbb
add
stos
dec
xchg
aam
loop
pop
divb
faddl
xor
enter
mov
xor
sbb
adc
push
add
add
xchg
lds
pop
or
jb
lods
nop
or
aad
repz
sbb
push
jge
sti
loopne
adc
lea
movsl
scas
mov
mov
adc
adc
xchg
jbe
lock
and
inc
sbb
or
and
orb
xchg
mov
jle
shll
cltd
add
mov
sahf
movsb
xchg
xchg
icebp
sti
push
shlb
add
loopne
sbb
orb
outsb
dec
xor
stc
loop
stc
push
fndisi(8087
mov
and
pop
inc
hlt
dec
fcomps
jb
cs
xchg
rcr
push
push
xchg
mov
lods
or
cmp
movl
popa
pop
dec
nop
cld
rcll
dec
push
add
pop
jmp
add
jo
or
mov
inc
or
das
jmp
rclb
mov
pop
out
test
aad
adc
xor
cmpl
jbe
subl
and
lret
test
dec
clc
imul
push
or
inc
leave
int
incb
ret
shlb
sbb
icebp
movlps
cmp
mov
js
insl
fdivl
pop
cmp
in
movb
in
xlat
mov
mov
mov
sub
and
xor
push
jae
lahf
std
adc
ret
call
outsb
push
loop
xchg
orps
sbb
pop
sub
push
mov
out
jo
lahf
fwait
mov
jl
push
lock
adc
adc
pusha
xchg
add
les
rcll
mov
test
shrl
push
rcrl
cmpsl
shrl
push
fimull
js
insl
lahf
and
aad
cmpsl
stc
cli
sbb
sbbb
sub
pop
mov
mov
jmp
jecxz
mov
aam
add
call
xchg
stos
lea
add
adcb
pop
dec
mov
and
xor
inc
mov
push
push
adc
push
scas
and
repnz
mov
cs
data16
frstor
or
out
mov
nop
test
shll
gs
js
hlt
rcll
jns
mov
lea
jno
cmp
fcmovbe
lret
pop
sti
pop
loope
push
inc
outsl
jl
sbb
sbb
stc
loop
sub
inc
mov
jnp
rcr
mov
pusha
arpl
dec
inc
sub
pop
cli
cwtl
imul
adc
dec
xchg
insb
sbb
imulb
add
popa
es
cwtl
lcall
lret
out
aaa
and
sub
push
test
inc
mov
fists
and
in
push
adc
mov
shlb
mov
mov
ljmp
mov
mov
das
ficompl
sub
mov
aam
cmp
mov
mov
movsl
sbb
fdivrl
daa
xor
test
inc
adc
stos
or
sti
cmp
pop
adc
sbb
jle
jmp
adc
cmp
xor
and
add
mov
mov
and
mov
mov
mov
ret
add
scas
sbbb
imul
jp
adc
popa
mov
cld
fcomi
xor
push
adc
dec
add
xor
push
mov
sbb
fcomi
stc
mov
mov
maxps
loop
ret
mov
xor
stos
jno
addr16
mov
inc
shlb
ss
push
sbb
sub
fwait
cmp
loope
fsubrs
in
mov
adc
test
mov
out
push
jge
ss
in
mov
dec
adc
outsb
push
fcmove
cmpsb
mov
movsb
pop
test
push
testl
ss
cmp
rcll
pop
mov
and
out
and
or
xchg
push
or
out
sbb
push
loope
lock
lock
and
pushf
and
insl
dec
scas
sub
sbb
sub
jmp
cltd
test
out
xchg
mov
clc
mov
mov
popf
aaa
sbb
rclb
mov
popf
cwtl
rclb
adcb
xor
sub
mov
jge
and
stc
fstl
stos
sbb
sub
cmp
call
xor
popl
lock
stos
pop
adc
std
pop
adc
cmp
movsb
fstps
repnz
xchg
lds
mov
stc
call
add
xchg
mov
sub
jne
and
std
sub
cmc
sub
inc
or
push
mov
repz
mov
sub
imul
inc
jmp
outsl
and
js
or
loope
jo
xor
push
adc
jno
pop
push
sub
scas
mov
xor
sahf
add
or
inc
sti
ficompl
rclb
or
inc
outsl
mov
adc
xor
jae
xchg
shl
jp
into
sbb
dec
mov
sub
mov
loop
enter
sub
add
cmp
sbb
cli
mov
mov
rorb
es
pop
std
popf
sbb
movsb
fildll
sub
pop
call
push
sub
or
and
mov
fmull
dec
mov
dec
xchg
fdivr
iret
sub
add
mov
push
test
lea
push
enter
xchg
xor
ja
xchg
js
fildl
adc
arpl
dec
inc
push
pop
xor
loopne
sbb
scas
jle
pop
fidivl
push
sarl
mov
mov
pop
xchg
and
fldt
lcall
fists
jp
adc
fwait
fwait
dec
cmp
push
icebp
ret
mov
shll
and
pop
aas
push
std
lock
ljmp
fdivs
cwtl
cld
push
adc
clc
xchg
shl
mov
mov
hlt
jo
add
in
fnstenv
cmpl
jmp
test
scas
fisttpll
mov
xor
loopne
pusha
pop
mov
test
test
sub
leave
xor
jb
test
jmp
aas
sub
outsl
push
fdiv
inc
jns
cmp
adc
push
jns
ret
dec
or
jne
push
test
push
ficoms
push
shrl
mov
test
inc
jo
inc
ljmp
adc
call
push
icebp
stos
adc
jecxz
leave
xchg
mov
cmc
jb
aam
clc
and
test
mov
ret
jns
sbb
mov
lahf
dec
hlt
inc
stc
pop
dec
mov
lret
pop
mov
xchg
push
pop
rcrl
test
jp
pop
lods
xchg
mov
mov
jns
fbld
test
sbb
ss
fs
rorl
scas
xchg
adc
mov
daa
mov
int
or
nop
push
inc
or
fisubrl
in
cld
out
lea
lds
mov
in
movsb
test
mov
mov
xchg
aaa
pop
sub
lea
and
xor
ds
leave
dec
jmp
mov
push
dec
mov
sbb
xorl
imul
jbe
sub
sbb
mov
popa
out
pop
ljmp
enter
inc
cmp
dec
mov
and
nop
adcl
call
or
roll
cmp
add
push
and
jl
adc
mov
adc
dec
jno
mov
mov
push
push
aaa
fidivrl
jl
sub
push
mov
sub
jns
cmp
mov
add
mov
lret
ret
imul
daa
enter
pop
push
adc
ret
cmp
push
std
cmp
nop
sub
xor
adc
popf
add
scas
adc
and
xlat
in
out
mov
mov
iret
push
inc
inc
sub
push
sub
push
sub
mov
cltd
in
cmp
pop
sub
fildl
std
cmp
sub
les
cltd
sbb
arpl
popa
sub
mov
sub
pop
mov
and
fadds
sahf
cmp
imul
lock
pop
push
mov
out
mov
and
loopne
cli
xchg
pop
cli
testl
ljmp
repz
pop
jmp
mov
cmp
push
pop
dec
mov
sub
adc
xchg
dec
cmp
jecxz
and
jge
das
int
or
adc
add
mov
cmpsl
push
xchg
jne
mov
xchg
mov
add
mov
push
adc
push
add
cli
mov
inc
and
or
stc
push
enter
mov
dec
mov
and
mov
loop
sbb
out
mov
shll
mov
inc
int
daa
or
cmp
gs
mov
fcompl
mov
nop
das
and
out
cwtl
xlat
iret
add
mov
clc
int3
push
ss
aas
cmp
mov
les
enter
scas
pcmpeqw
in
test
in
pop
fnstsw
sub
push
aaa
js
mov
cmp
aam
test
cmp
jb
fsubr
icebp
clc
xchg
in
pop
inc
inc
mov
fisttpl
aas
mov
mov
xlat
and
mov
popa
mov
shlb
mov
and
popf
sahf
mov
cmc
mov
in
mov
dec
fs
addr16
cmp
das
push
mov
xchg
pop
insb
push
ret
xchg
mov
mov
jne
pop
add
inc
or
push
push
dec
pop
arpl
gs
nop
cmpsl
lret
cmpsl
mov
inc
push
push
pop
push
push
fwait
jb
push
sti
dec
jb
scas
push
cmp
cwtl
and
pop
xchg
xor
daa
xor
xor
mov
shl
mov
mov
mov
jae
jns
push
mov
aaa
fisubs
sub
fstpl
mov
dec
into
fiadds
and
add
lcall
inc
or
mov
fildl
mov
sub
rcrb
in
movswl
push
shrl
addb
cmp
lret
je
lds
call
fiaddl
push
dec
sahf
sub
pop
push
sbb
add
or
inc
insl
dec
aaa
and
jecxz
in
sub
inc
jmp
cmp
pushf
xorl
call
shrb
in
aad
jae
and
sti
mov
nop
mov
pop
pop
fwait
or
sub
add
pop
pop
push
pop
push
movsb
bound
sub
in
cld
leave
xchg
ljmp
popf
je
lret
jl
sbb
pop
mov
inc
dec
mov
push
hlt
sub
int
push
inc
int
rcrl
clc
or
xchg
push
jmp
push
repnz
dec
lret
add
xchg
pop
cltd
inc
dec
xor
repz
rorl
jae
lret
mov
or
and
scas
add
inc
rolb
loopne
arpl
push
push
xchg
cld
aam
jmp
fucomip
or
dec
rcr
mov
popf
mov
mov
jecxz
pop
inc
xchg
shll
mov
stos
and
push
into
fidivl
dec
test
mull
sub
and
push
lcall
and
mov
xor
or
adc
sbbl
int3
loope
xchg
dec
mov
ret
lock
rolb
jno
jle
rclb
mov
add
cmpb
xchg
mov
jle
fstps
lcall
xor
dec
dec
pop
jae
out
mov
loopne
push
fistl
push
pop
xchg
out
rcrb
bound
push
sub
cmp
mov
aad
repnz
and
cmp
xor
xlat
repz
in
ret
mov
mov
je
xor
pop
jp
inc
dec
aas
mov
cmp
outsb
cmp
scas
and
sbb
aas
repnz
cmpsl
mov
xchg
cwtl
xchg
push
loop
je
xchg
aad
ljmp
mov
xlat
loopne
sub
call
push
or
sub
out
sbb
push
ja
xor
sbb
imul
adc
jno
sub
jae
pop
iret
xchg
and
or
flds
in
jo
xchg
icebp
push
mov
sbb
or
cs
xchg
insl
push
push
mov
mov
dec
lret
insb
jmp
in
je
sub
pop
sub
or
pushf
cmp
pop
mov
xor
je
xchg
jle
or
add
jbe
ljmp
mov
bound
hlt
push
cmp
ds
xorb
xor
mov
push
pop
pop
inc
scas
xorl
popa
mov
out
adc
inc
push
dec
or
fmull
xchg
dec
lods
fptan
test
and
jne
and
lock
mov
mov
xchg
inc
adc
out
rorl
push
xlat
push
fdivs
addb
add
sub
add
int3
cmp
push
insl
nop
dec
xor
cwtl
lahf
mov
sub
add
addr16
iret
adc
fnstsw
in
sbb
popa
mov
or
mov
es
mov
dec
or
mov
mov
cli
frstor
jecxz
add
lahf
es
leave
rol
lret
gs
push
mov
xchg
stos
lea
sub
xchg
cwtl
or
fimuls
push
xor
in
mov
jne
pop
and
jg
xchg
cmp
pop
out
iret
lds
inc
popa
and
insl
fidivrl
stos
and
dec
cmp
xlat
mov
stos
sbb
jo
lcall
outsl
mov
leave
subl
mov
pop
jae
fcompp
mov
sbb
mov
aaa
mov
jae
cmp
dec
pushf
push
and
fisubl
mov
aaa
cmp
push
push
mov
in
sbb
clc
pop
imul
in
xor
outsb
andb
fbld
sti
scas
jle
mov
add
add
pop
pop
lret
divl
loope
inc
sbb
shrb
setle
xchg
inc
mov
jae
popf
mov
and
cmp
xlat
rorb
fistpl
push
cmp
push
sbb
test
mov
pop
lcall
mov
rcll
icebp
cltd
popa
fdivl
sub
pminub
outsb
mov
push
aaa
je
xchg
inc
mull
out
mov
pop
jno
arpl
int
popl
push
push
dec
xchg
pusha
jns
cld
aas
leave
push
lock
loope
shll
or
popa
xchg
leave
aad
sbb
loope
dec
mov
xor
fwait
rolb
or
pop
mov
imulb
cmp
mov
out
inc
xlat
inc
lods
push
in
cmp
and
and
inc
xchg
daa
aas
mov
dec
rclb
push
jle
cmpl
cmp
dec
mov
es
dec
test
inc
repz
fcmovbe
jmp
adc
jbe,pt
jmp
icebp
mov
js
aas
mov
pop
inc
or
ret
dec
sub
fisttpl
push
addr16
push
movsl
mov
test
jnp
js
fisubl
jecxz
mov
jnp
sub
nop
rcll
cmp
popf
shlb
shll
arpl
lods
jle
mov
mov
rorl
pop
and
and
lods
ja
test
sbb
pop
ja
or
pop
adc
add
loope
int
addr16
out
loop
lods
movsb
mov
lods
mov
mov
xchg
mov
jbe
test
dec
sbb
xchg
fwait
mov
pop
leave
leave
insb
arpl
add
jno
scas
pop
cmp
mov
pop
rolb
cmp
xor
sahf
add
inc
add
orl
adc
fsub
ja
adc
or
or
jecxz
and
pop
xchg
mov
imul
pop
adc
negl
cmp
test
and
mov
scas
jno
jno
bound
add
test
shll
mov
shll
ret
lock
inc
push
popf
iret
loop
adc
ret
dec
mov
cltd
xchg
pushl
or
fbstp
sub
push
cmp
xchg
out
fiadds
xorl
sub
mov
dec
jno
nop
cmp
jae
repnz
fstpl
adc
iret
and
or
pop
mov
pop
pusha
pusha
sbb
aas
es
stc
dec
in
and
pop
pop
sub
sahf
lret
mov
fsubr
frstor
adc
shll
data16
push
popf
push
pop
cmc
aad
xor
jbe
rcll
scas
frstor
pusha
ja
fsubrl
test
or
lock
cmp
push
enter
jns
cmpl
scas
rcrl
fidivs
adc
jnp
xlat
shll
fisubl
dec
jno
shrb
xchg
repnz
je
insl
imul
outsl
jge
dec
aad
pop
imul
shrb
cmpsl
push
hlt
xchg
and
imul
sahf
cli
or
lods
faddp
mov
lcall
mov
call
cli
in
push
pop
repnz
lock
lahf
adc
mov
cltd
lock
push
cmc
aas
outsl
ret
outsb
je
mov
push
popf
mov
es
ror
fmull
dec
cli
mov
inc
icebp
pop
dec
lret
xor
mov
cltd
imull
push
dec
add
mov
lea
add
mov
mov
cmc
ret
dec
push
cli
push
stc
adc
mov
push
pop
adc
popf
xor
outsb
pushl
pop
mov
dec
lcall
sti
outsl
push
pop
or
aad
es
dec
xchg
adc
hlt
decl
sahf
xor
mov
in
pop
test
dec
cmp
jo
test
scas
outsl
xor
jo
sub
stos
sub
sbb
mov
lods
hlt
mov
mov
jo
mov
xchg
mov
movsl
cld
stos
jo
and
leave
and
dec
inc
cltd
push
jle
jl
jmp
ja
icebp
rcr
adc
pushf
and
mov
cmp
inc
clc
inc
pusha
fdivr
daa
lock
cmp
push
test
addl
das
cli
dec
rclb
scas
cmpsb
sub
mov
or
push
cli
adc
movsl
pop
fs
or
cmp
ss
mov
xchg
out
fsubp
cmpsl
daa
jb
cmpsb
loope
lea
loopne
in
inc
adc
lods
and
and
pop
sub
aam
lea
push
cltd
xor
aam
mov
leave
mov
fs
test
pop
mov
fiadds
out
repz
aas
in
insb
mov
leave
test
jnp
pop
add
imul
xchg
incl
sub
dec
or
mov
clc
mov
add
pop
xchg
insl
enter
std
mov
call
pop
push
sbbb
enter
jl
sbb
xchg
sbb
or
mov
sub
bound
sbb
jl
ljmp
shlb
pop
push
jge
fdivr
repnz
cld
enter
pop
mov
xchg
stos
and
test
stos
jnp
jns
pop
ror
cli
clc
adc
mov
and
push
add
out
pop
push
xchg
cli
mov
push
sub
jmp
adc
inc
popf
mov
cmp
fwait
push
push
cmp
loope
cmpb
imul
out
mov
hlt
daa
inc
xchg
jmp
sub
sbb
scas
call
sbb
push
std
clc
mov
cmp
cld
mov
icebp
leave
popa
push
mov
xchg
outsl
sub
inc
mov
sbb
jmp
and
cmp
enter
mov
stos
shll
pop
inc
cmp
push
xlat
jns
shl
repnz
or
and
sub
shrl
ficomps
sahf
clc
mov
es
pminsw
icebp
dec
sahf
push
pop
clc
inc
mov
xor
and
arpl
movsb
push
pop
adc
lods
data16
lock
pop
sbb
adc
scas
mov
jg
or
dec
and
sbb
aam
popf
xor
cmp
adc
addr16
test
imul
mov
jbe
stc
mov
test
mov
or
nop
mov
sbb
mov
mov
pop
imul
cmc
lock
mov
subb
mov
xchg
movsl
pop
adc
jbe
divl
es
iret
xchg
mov
xlat
push
mov
sbb
sti
aam
xchg
dec
lods
scas
mov
loope
inc
dec
add
fsubrl
jmp
cmp
mov
pusha
iret
push
sahf
or
shll
mov
inc
or
fmull
clc
cs
push
mov
out
lea
push
jecxz
mov
jbe
jge
jns
mulb
dec
imul
cltd
jns
outsb
mov
xchg
dec
ror
popa
lods
cmp
outsb
pop
dec
inc
scas
stc
jecxz
lret
movsb
jb
hlt
neg
mov
stos
cmp
sahf
arpl
xlat
lods
js
pop
xor
pop
lods
cmp
push
mov
lds
scas
sbb
push
test
and
push
mov
and
push
je
dec
stos
jno
lcall
mov
or
dec
arpl
lret
daa
mov
mulb
cmp
in
dec
jg
jnp
fcmovbe
lret
push
dec
xchg
loop
enter
aad
cltd
xchg
gs
pop
mov
sbb
fdivrp
inc
mov
into
jl
sahf
xor
sbb
dec
ljmp
dec
pop
popf
sub
jmp
into
shrb
clc
pop
ret
mov
mov
jnp
pushl
mov
add
jl
jne
dec
in
cmp
ljmp
sub
sub
mov
cmc
push
jno
add
int
js
mov
scas
fcmove
dec
pop
adc
sbb
stos
sub
mov
pop
dec
jle
test
mov
jg
inc
fldl
lods
pushf
repnz
shl
int
pop
test
jecxz
push
jbe
lret
cmpsl
into
dec
mov
insb
mov
inc
iret
loopne
dec
xor
adc
push
add
cwtl
or
sbb
div
insl
mov
insb
icebp
cld
xor
sbb
xchg
jae
popa
stc
pop
cmpsl
into
lcall
mov
in
int
in
cmp
sbb
out
jmp
js
mov
inc
cld
fisubs
xor
divb
ja
dec
push
dec
out
fnstenv
je
std
mov
int3
out
dec
or
loopne
jno
pop
sub
xor
cmp
mov
daa
ljmp
push
iret
mov
scas
std
mov
into
mov
orl
addl
jo
out
lods
sbb
mov
daa
push
ss
push
inc
aad
stos
rolb
mov
and
mov
out
sti
mov
adc
js
mov
xlat
xor
cmp
xorb
sti
fsts
inc
mov
icebp
adc
jp
scas
stos
gs
inc
or
jbe
inc
or
es
ljmp
xchg
es
lods
imul
shll
mov
fdivl
aam
mov
movhps
mov
sti
pop
gs
pop
and
imul
cmp
mov
adc
lds
dec
xchg
lods
mov
pop
mov
dec
xchg
in
dec
cli
or
mov
pop
aam
test
into
out
psrlw
fs
int
mov
stos
cltd
xchg
push
or
xchg
jmp
out
mov
out
sbb
add
mov
lock
test
das
mov
mov
add
pop
or
repnz
call
add
sbb
std
jge
jb
mov
mov
jno
mov
jae
mov
xchg
sub
lahf
inc
or
push
inc
dec
hlt
inc
jnp
cltd
jmp
in
jp
in
push
aaa
sbb
scas
cld
adc
jne
cmp
std
jge
mov
xchg
push
jo
lea
jae
insb
je
or
sub
loope
dec
dec
dec
call
mov
add
mov
sbb
daa
mov
sbbl
into
xchg
decl
xor
pop
out
stos
stos
sbb
movsb
ror
cwtl
test
sbb
dec
lea
aam
ret
addr16
mov
inc
xchg
jae
jl
mov
or
mov
clc
jbe
sub
aaa
add
shlb
cmp
scas
lcall
in
rclb
jo
mov
sbb
mov
cmp
sub
dec
int
dec
inc
sbb
bnd
sbb
lcall
adc
cmp
sub
dec
xor
cs
jb
inc
in
test
pop
test
adc
sahf
push
out
pop
push
daa
fstp
sahf
cltd
push
repz
and
cltd
xchg
adc
mov
popa
xchg
dec
mov
mov
test
inc
mov
out
movsb
add
fsubrs
into
add
dec
nop
dec
xchg
push
push
shlb
cmc
sub
aas
out
hlt
test
fs
jbe
ljmp
push
sub
cltd
adc
jl
mov
and
mov
push
icebp
xlat
push
cltd
jae
xchg
and
or
cmp
pop
sub
sbb
mov
es
sub
jns
rcrb
sub
stos
and
pushl
ret
idivb
hlt
push
pusha
pop
pop
loop
jmp
mov
std
mov
repnz
xchg
popf
pop
cli
mov
sbb
stos
mov
ja
ficoml
cmp
dec
loopne
nop
cld
daa
lret
pop
mov
cmp
xchg
push
and
adc
stc
or
fnstsw
jb
add
push
pop
ds
jl
push
lods
dec
outsl
out
daa
stos
inc
jecxz
dec
jb
xchg
jecxz
jne
ljmp
mov
repz
pop
xor
lahf
inc
push
mov
adc
outsb
mov
xchg
mov
data16
nop
ja
pop
loop
dec
lret
push
mov
stc
sub
mov
inc
inc
fildl
repnz
into
int3
mov
xchg
addr16
jecxz
negb
shll
ds
stc
mov
mov
dec
fiaddl
bound
push
mov
mov
inc
jle
mov
jbe
test
and
push
in
mov
imul
mov
bound
xchg
mov
and
xor
movsl
stos
sbb
fsubrl
or
insb
pop
pop
test
jge
xchg
bound
mov
mov
lea
sub
mov
imul
pop
aas
or
test
sahf
push
popf
popa
xchg
je
popf
cmc
fists
in
jne
aaa
ljmp
mov
sub
stos
push
mov
div
mov
push
aaa
arpl
cmpsl
daa
pop
das
inc
sub
rolb
jo
inc
sbb
sub
inc
dec
mov
int
xchg
push
mov
mov
fs
cld
jp
cld
stc
pop
neg
in
inc
and
xchg
pop
mov
pop
inc
mov
xlat
adc
out
outsl
scas
jg
movsl
cmpl
adcb
pop
and
mov
adc
cmp
cmc
stos
push
insb
cld
pop
lahf
jns
sarl
pop
cmp
aas
movsl
jge
sarb
dec
dec
stos
loope
mov
sbb
sub
sti
mov
mov
fs
mov
mov
divl
push
dec
push
mov
add
gs
push
mov
adc
jno
sub
mov
cmpb
mov
imul
dec
cmp
inc
push
or
jb
jbe
inc
loopne
hlt
mov
or
test
mov
jb
stos
xchg
popa
mov
mov
aam
popf
repz
rcl
push
das
xchg
rcl
pop
arpl
test
mov
pop
dec
jns
pop
sbb
ret
shlb
les
push
mov
insl
sub
fidivrs
jle
sbb
dec
loopne
insl
daa
idivl
push
pop
out
mov
mov
add
push
mov
adc
dec
add
xchg
adc
cs
mov
add
ret
leave
les
xor
fcomip
std
adc
sub
jns
mov
cmp
in
jp
jmp
lods
loop
aam
cmpsb
movsl
mov
mov
push
adc
sub
mov
add
mov
or
rcll
lahf
lahf
mov
ljmp
shll
mov
lahf
or
xchg
dec
push
add
shl
arpl
and
mulb
push
sbb
pop
fstps
push
dec
out
push
jp
jbe
push
std
cmp
mov
leave
push
push
int
rolb
repnz
push
push
push
stos
pop
jae
add
xchg
push
int
push
mov
xor
rcll
ds
mov
cs
xchg
inc
jb
xchg
sahf
jo
jp
rcpps
cwtl
mov
adc
sub
aam
test
dec
imul
pop
cmp
sbb
lock
ret
shrb
out
push
mov
sbb
rol
aaa
lods
and
leave
mov
cli
cltd
cmp
xchg
mov
sbb
lcall
test
call
fnsave
rcll
repnz
jp
sub
aas
and
cld
repz
jns
push
dec
add
and
test
ret
and
inc
sarl
imul
lods
jbe
lcall
push
and
sbb
mov
jp
dec
sbb
mov
sbb
ljmp
cmc
add
jo
push
cld
and
imul
sarb
lds
lcall
in
or
push
mov
dec
shll
cmp
mov
dec
sub
in
sbb
inc
cmp
cmp
loope
mov
adc
jne
mov
mov
sbb
xlat
xor
cmp
out
xchg
jno
jmp
mov
push
fimull
cmc
jns
mov
mov
leave
lock
imul
lods
xor
lret
push
sarl
push
mov
adc
sub
fistps
test
std
mov
or
imul
sub
mov
mov
mov
inc
push
adcb
adc
enter
negb
push
popa
push
lret
pop
mov
insb
mov
mov
insl
lcall
aaa
push
hlt
test
mov
outsb
xchg
adc
mov
call
cmpsl
shl
add
xor
cmp
sbb
fnstsw
sti
push
or
dec
push
aam
mov
fstps
mov
jmp
mov
outsb
das
loopne
in
cwtl
xor
mov
and
jnp
shlb
push
cmpsl
xchg
jle
sbb
mov
mov
adc
pop
popf
push
in
push
mov
xchg
mov
test
or
fnsave
adc
icebp
adc
pop
inc
mov
mov
pop
push
cmpb
push
or
imul
mov
fs
pop
adc
lret
dec
adc
fstpt
add
std
push
cmp
push
fcoml
inc
int
mov
cltd
lret
mov
popa
mov
jbe
adc
das
loopne
xchg
stos
sub
bound
push
in
jmp
cwtl
inc
imul
xor
lahf
int3
dec
hlt
or
or
repz
lcall
inc
sahf
fstl
cmp
mov
add
pop
imul
pop
das
dec
out
jne
mov
jns
inc
pusha
xchg
ror
mov
xor
les
jecxz
jb
push
sbb
mov
jnp
push
xor
xor
pushf
sti
push
shr
xchg
push
lret
cld
inc
insb
loop
sub
fistpll
xor
out
shll
xchg
cmc
stos
mov
into
ds
or
ja
ficoml
jl
pop
xlat
cmpsb
sub
leave
outsl
add
inc
adc
mov
popl
rcll
sbb
mov
jo
adcl
dec
sub
out
call
jns
or
xchg
xor
bound
push
sbb
repz
jns
adc
sub
es
or
mov
dec
or
and
bound
cld
dec
loop
repz
inc
xchg
ret
xor
or
ljmp
popa
sbb
mull
sub
addl
mov
ret
mov
mov
iret
ror
push
fidivrl
pop
mov
xor
mov
nop
sub
lret
cmp
mov
sub
push
cmp
and
xor
add
nop
shl
aad
mov
mov
jp
add
xor
stos
repnz
sbb
and
js
icebp
pop
sbb
push
std
dec
jb
or
ja
mov
push
xor
mov
dec
je
repz
adc
dec
xchg
fs
js
icebp
sub
int3
and
sbbl
loope
adc
ret
push
pushw
push
loop
xchg
jg
ret
push
xor
jecxz
push
movsl
cmp
push
add
jl
pop
imul
adc
movsl
adc
and
in
mov
xchg
movsb
stos
mov
push
jnp
imul
lods
cmp
roll
pop
ljmp
je
lahf
iret
jbe
test
mov
inc
dec
mov
pop
imul
sbb
loope
push
ss
mov
aaa
push
scas
scas
inc
imul
fcoml
inc
repz
xchg
or
sub
push
xchg
in
push
adc
cmp
ss
mov
push
sbb
jmp
jb
mov
sbb
sarb
int
fistpll
push
andb
xor
dec
xchg
popa
push
xor
sysenter
into
jo
dec
jmp
push
jne
clc
mov
es
lock
subl
das
mov
mov
sub
lret
and
mov
lcall
lret
inc
stos
pop
jle
mov
and
pop
arpl
mov
sbb
insl
dec
cmp
mov
xor
hlt
or
gs
cld
cmp
mov
jge
in
mov
std
cmp
lahf
xor
cmpsl
data16
mov
push
dec
adc
lock
cmpsb
push
xor
or
mov
adc
mov
dec
add
dec
xchg
and
out
lea
or
aad
jb
cmpsb
dec
test
cmpsl
in
mov
and
dec
divl
adc
ljmp
adc
jp
sub
push
loop
pop
xor
sbbb
cmp
inc
in
dec
gs
sub
dec
call
cmp
push
sub
xchg
outsl
or
mov
mov
pusha
add
lret
arpl
mull
sbb
pop
testb
inc
popa
adc
out
xchg
not
mov
or
lea
stos
xor
imul
mov
jmp
shufps
jae
push
pop
xor
xchg
sbb
jb
test
ret
and
cwtl
push
jp
stos
cld
lret
lock
nop
daa
notb
rolb
mov
mov
cld
adc
dec
lcall
dec
jp
xchg
movsb
ficoml
pop
into
sub
push
dec
jg
push
push
mov
adc
movsl
scas
mov
aas
bound
xchg
push
cmpsl
inc
pusha
mov
fwait
jbe
push
out
and
push
cs
out
cmp
int
out
cmp
adc
add
dec
adc
inc
test
movl
push
inc
and
mov
push
mov
dec
dec
repnz
jnp
int
add
push
lea
dec
push
ss
mul
xor
cmpsb
std
mov
xchg
in
mov
jp
pushf
outsb
cmp
movsb
mov
and
cmp
or
sbb
pusha
adc
sbb
sub
and
or
es
outsl
mov
or
sub
and
std
xlat
insb
push
sub
mov
xchg
mov
xchg
dec
cmpsl
mov
mov
jb
pop
mov
push
lock
xor
cwtl
mov
inc
push
dec
loopne
pop
lods
insb
adc
inc
ja
sub
sbb
jne
sub
lcall
sarl
popa
fs
push
ss
jle
test
adc
scas
jo
jb
outsl
pop
jo
lahf
mov
jbe
xchg
push
adc
fists
outsl
inc
std
loop
mov
mov
inc
add
mov
pop
mov
sbb
push
test
lahf
sbb
dec
lds
fnstcw
imul
push
rorl
lods
dec
movsl
pop
xor
idivb
cmp
pop
inc
nop
mov
adc
jno
aas
sbb
push
stos
push
mov
fdiv
outsl
xchg
rcl
js
inc
shll
rorl
hlt
or
sbb
xor
cs
pop
mov
les
sub
in
out
das
xor
xchg
jecxz
xchg
inc
dec
setnp
jb
jnp
fsubl
idiv
lds
xor
mov
dec
ljmp
jmp
out
mov
push
inc
repz
add
in
xchg
pop
sub
sbb
or
addr16
dec
pop
fstpl
pop
sub
out
mov
fwait
mov
movsl
sbb
insl
cmpsb
fistpll
xor
imulb
fistpll
ja
cwtl
lods
jo
mov
ja
xor
dec
out
pop
push
jle
rol
cwtl
jae
stos
out
cs
mov
ljmp
push
insb
icebp
jns
push
and
or
lcall
sub
and
and
cmc
sub
mov
leave
inc
inc
rolb
mov
pushf
scas
bnd
mov
negb
or
repz
pop
lea
imul
inc
icebp
sub
bound
add
push
shrl
mov
sub
cltd
fimull
gs
pop
scas
cli
out
cmp
pop
pop
mov
jg
xchg
lret
cmp
pop
gs
or
push
testb
xor
pop
jge
ret
mov
in
jo
jae
fimuls
pop
xchg
mov
mov
pop
in
jae
in
es
aad
imul
sub
nop
in
lea
mov
outsb
aaa
sbb
fistpl
cwtl
xchg
cmp
cmp
hlt
ficoml
addb
mov
out
jns
mov
aaa
lcall
pop
std
fsubp
xchg
adc
cmpsl
aam
add
aas
mov
js
mov
sarl
pop
mov
xchg
xor
xor
dec
ljmp
loopne
neg
pop
rcr
xchg
push
mov
cmp
jmp
adc
mov
popf
daa
outsb
mov
jne
lcall
inc
push
cld
daa
dec
lds
popa
femms
mov
mov
pop
test
hlt
inc
lock
and
test
test
ja
xchg
mov
inc
xchg
in
mov
adc
mov
jae
stos
outsl
pop
sti
mov
lods
popa
or
test
daa
sub
cltd
mov
add
pop
dec
jle
leave
sarb
std
ja
jl
out
jbe
push
iret
mov
xor
inc
inc
adc
xor
ljmp
int3
test
jno
sub
and
cmpsb
enter
cltd
push
movsl
or
or
jg
inc
jle
movsl
cs
sahf
cltd
push
push
pop
bound
rolb
ror
add
cmp
call
sbb
sub
cmpsl
mov
out
lcall
mov
in
mov
mov
jne
pop
orb
mov
jae
xlat
data16
dec
lods
push
push
pop
gs
pop
push
ret
aas
xor
mov
jp
push
imul
sti
or
shl
fcos
jmp
inc
int
xor
mov
adc
call
fwait
lret
ds
add
push
aad
out
cwtl
shl
notb
cltd
sbb
cmp
jae
mov
lods
cmp
aaa
add
jmp
or
pop
in
pusha
mov
mov
mov
shlb
mov
je
insl
fs
or
pop
aam
and
bnd
imul
mov
sbb
push
jecxz
mov
adc
adc
lock
or
mov
test
pop
test
subb
dec
dec
and
push
xor
dec
pop
mov
mov
sub
rcll
lahf
mov
mov
dec
inc
adc
shll
and
pop
jnp
or
dec
cmp
int3
cmpsb
dec
or
mov
xor
jae
ret
mov
jmp
lods
in
jecxz
sbb
pop
adc
push
inc
xchg
ret
push
cmc
fcoms
cmp
aas
cs
and
dec
xor
std
in
mov
jg
rcrl
xlat
xchg
enter
mov
jle
data16
inc
sub
sahf
rolb
outsl
rolb
fucomi
imulb
lret
dec
dec
stc
shlb
jle
rorl
or
sub
out
add
insl
addr16
cs
sbb
fmuls
jo
clc
jae
dec
pop
jle
adc
adc
jb
jbe
in
sub
clc
mov
xchg
mov
and
and
insl
arpl
pop
pop
mov
jne
push
sub
add
insl
adc
rolb
test
out
sbb
push
push
jbe
and
arpl
mov
push
xor
clc
pop
aam
cmp
test
sub
daa
pusha
fisubl
or
scas
and
xchg
rcl
nop
dec
sti
jnp
sub
push
popf
aaa
xchg
lock
cmp
jo
imul
cmp
add
sbb
xchg
pusha
cmp
imull
push
or
sti
mov
pop
rorl
in
and
jecxz
mov
mov
xor
pop
std
lds
mov
inc
inc
inc
add
mov
mov
xchg
pop
dec
pusha
push
enter
xor
push
push
into
sbb
or
fildll
pop
enter
pop
outsl
out
and
bound
mov
loope
negl
test
or
sarl
out
pusha
sub
enter
loop
imul
and
jne
dec
and
fnstsw
dec
push
int
mulb
push
scas
jmp
add
shlw
icebp
adc
mov
cmp
data16
cmp
sub
inc
popa
out
mov
addr16
xor
jmp
ds
jae
push
jnp
popa
inc
inc
jb
fwait
insb
mov
js
and
or
fwait
test
mov
xor
mov
mov
mov
inc
ss
push
xor
jne
inc
fldl
lods
int3
std
pop
in
sbb
cmp
inc
lods
pop
dec
xchg
pop
xor
out
jb
shrb
pusha
test
jmp
xchg
insl
shll
cltd
movsl
into
test
push
jmp
lods
inc
push
shlb
sub
xchg
push
push
lods
adc
jns
pop
addr16
inc
dec
xchg
aaa
push
js
pusha
hlt
xlat
mov
lds
loopne
push
and
and
pop
daa
sbb
insl
xor
pop
jle
or
or
out
xchg
loop
cmp
dec
sub
les
les
imul
dec
repz
dec
aam
adc
xchg
pop
sar
scas
inc
pop
fistpll
mov
and
hlt
push
jae
fdivs
cmp
add
movsl
push
cmp
outsl
pop
fisttpl
jbe
imul
xlat
mov
aam
rorl
fstpt
and
out
pusha
stos
push
xchg
rorb
lock
cmp
mov
mov
add
out
push
mov
or
mov
add
and
add
cmp
push
cmp
sahf
iret
push
mov
mov
mov
mov
popf
xor
xchg
ss
rorl
inc
hlt
inc
mov
call
lcall
std
mov
or
dec
leave
movsb
scas
imulb
outsb
adc
or
pop
inc
ret
and
fs
out
ret
xchg
and
clc
jle
popf
and
gs
dec
and
sub
add
mov
mov
gs
fdivl
popa
sti
xchg
xchg
mov
push
cmpsl
sbb
cmpsb
cmc
lds
or
stos
push
cmp
jb
push
inc
inc
adc
jg
lods
mov
lea
lds
and
sbb
jle
xchg
push
daa
xchg
daa
insb
mov
ljmp
lret
lods
stos
clc
mov
stc
cmp
stos
or
push
mov
mov
push
xchg
fildll
aaa
int
sub
xor
cmp
mov
movsl
lods
xor
jle
xlat
and
jge
push
mov
and
repz
and
inc
lret
jle
dec
mov
shll
jbe
into
push
mov
xlat
xor
sbb
cs
jbe
arpl
dec
int3
repz
pop
and
out
shrb
sbb
sahf
xchg
xchg
pushf
mov
push
adc
into
in
push
outsl
mov
pop
jg
out
hlt
icebp
sbb
and
push
cmpsb
das
arpl
dec
test
adc
addl
pop
nop
jo
inc
sbb
xchg
loopne
mov
negl
cmp
and
push
aad
out
inc
in
iret
insb
pop
ds
mov
lahf
mov
cs
push
outsb
sub
fists
popf
sbb
sub
or
popf
dec
sub
ret
fdivrl
movsl
pusha
pop
jg
std
sbb
cmpsb
sti
dec
int3
fidivrl
cmp
daa
or
jl
pop
enter
arpl
inc
dec
outsb
rcr
imul
and
cld
test
mov
inc
lcall
push
iret
push
xor
push
inc
inc
sub
inc
jno
adcl
mov
into
pop
insl
rorb
lahf
ss
push
fsubr
enter
dec
push
add
aaa
cli
test
dec
pop
loope
sbb
fstl
push
jne
adc
aad
mov
cmp
cmp
mov
cmpsb
add
add
call
mov
aad
mov
and
pusha
cmpsl
cli
into
mov
outsl
clc
xchg
add
adc
add
int3
or
adc
ljmp
pushf
sbb
and
dec
aas
mov
mov
mov
es
push
testb
loop
inc
jae
cld
fiaddl
das
inc
stos
repnz
lahf
xlat
out
cwtl
ficomps
or
test
mov
inc
nop
xor
shl
jecxz
mov
addr16
adc
adc
push
add
clc
mov
mov
cmc
stc
mov
hlt
xchg
lock
lret
pop
push
aaa
sub
jno
inc
inc
or
in
xor
gs
test
ds
loope
mov
sbb
inc
add
ds
push
repz
xor
pop
sti
movsb
pop
mov
pop
push
loop
xchg
xchg
inc
dec
add
lret
repz
and
int3
outsb
xchg
fstl
sbb
cmp
add
addl
arpl
adc
cmp
pop
mov
movsb
xor
or
sub
inc
lods
imul
xchg
sbb
pop
mov
pop
popa
scas
push
xchg
xor
cmova
in
test
clc
mov
in
cmp
es
sbb
outsb
ljmp
cmc
mov
sub
dec
cli
add
add
enter
or
cmp
sub
mov
cmp
mov
and
test
aas
jl
sarl
test
adcb
add
clc
pop
push
popf
add
xchg
mov
testb
sub
adc
lret
mov
inc
mov
shlb
xchg
mov
jo
cmp
mov
lds
data16
outsl
dec
fwait
xchg
jae
aam
divl
adc
and
iret
mov
sub
arpl
xor
adc
xchg
cmp
es
mov
jne
mov
inc
out
sahf
int3
cs
mov
daa
insb
mov
dec
sub
enter
dec
add
push
call
shlb
sbb
inc
or
pop
dec
dec
mov
mov
shrl
xor
mov
mov
loopne
xchg
pop
stc
mov
xchg
push
rolb
pop
inc
cs
xor
mov
cli
xchg
inc
loopne
sub
pop
fsub
test
push
test
jns
or
push
pop
adc
xchg
ret
cmp
and
lret
test
fldcw
and
inc
and
inc
insb
mov
pop
xchg
xor
lea
or
dec
out
cmp
push
icebp
inc
push
adc
stc
dec
cmp
stc
stos
mulb
xor
aam
daa
enter
add
sub
xor
xor
lret
mov
push
xchg
ljmp
sub
js
test
add
mov
fndisi(8087
inc
push
xor
pop
mov
or
inc
cltd
dec
xchg
push
ror
sbb
aaa
cmp
cs
mov
xchg
cmp
imul
jnp
lret
sub
dec
scas
sbb
inc
sub
sub
sbb
or
aad
adc
leave
push
lods
adc
call
xor
xchg
adc
pusha
cmp
pop
jo
push
or
pusha
cwtl
cmp
fs
inc
outsl
and
pop
mov
inc
insb
aas
mov
mov
pop
add
xor
inc
into
es
out
lahf
push
xchg
imul
jecxz
sti
jne
xorl
sub
lcall
shll
adc
loopne
inc
adc
and
test
sti
jnp
mov
mov
push
jge
push
mov
dec
mov
mov
cli
lds
popa
and
insb
mov
jbe
loop
ret
loope
xchg
out
fdiv
or
sbb
icebp
pop
fiaddl
in
or
sub
fwait
xor
in
lret
xor
mov
xchg
out
or
and
xchg
inc
insl
push
movsb
push
add
popl
pop
insb
in
int3
out
cmp
je
mov
pop
jnp
hlt
mov
lret
lcall
adc
adc
mov
stos
mov
pop
loope
pop
clc
add
pop
sbb
mov
jl
xchg
push
jmp
insl
dec
das
xchg
add
in
sar
call
dec
mov
fs
dec
push
adc
cmp
ret
mov
mov
xor
dec
cltd
pop
push
lea
sti
inc
fs
enter
rorb
add
cmp
ss
cmp
insb
add
js
test
les
arpl
pop
ret
push
mov
add
mov
fbld
int3
pop
pop
cli
dec
in
fucomip
stc
mov
jb
pushf
or
roll
pop
mov
mov
xchg
insb
sub
loopne
jle
andb
outsb
or
test
pusha
cmpsl
repnz
jg
xlat
add
test
mov
les
sbb
out
int
add
int
out
shll
xor
in
xchg
ror
mov
cmp
int3
xor
gs
sub
dec
scas
je
lret
inc
test
xchg
rcrl
outsb
xchg
jne
scas
in
cmpsl
notb
cltd
mov
lock
dec
mov
shll
pop
mov
nop
pop
mov
mov
insb
push
in
mov
and
stos
dec
mov
mov
aad
and
sahf
jns
or
int3
mov
mov
or
test
gs
sbb
fidivrs
jmp
pop
test
popa
int
jo
scas
and
sub
adc
cmp
ret
xchg
pop
das
testl
cmp
iret
xor
lock
cmc
xchg
aam
xor
insb
xchg
sahf
dec
cmp
fsubs
stc
sub
lcall
cltd
ds
repz
push
call
je
std
sbb
jns
adc
pop
int
cmp
push
out
push
nop
xchg
sub
ret
ljmp
jmp
mov
les
inc
mov
out
xchg
dec
xchg
loop
sub
into
addr16
lret
cmp
mov
add
push
scas
repnz
push
in
loop
and
pop
scas
mov
jae
sub
dec
xchg
sti
pop
jp
mov
pop
cli
xchg
bound
out
lods
jp,pn
ret
lods
cltd
mov
movsb
jmp
inc
adc
popf
cld
ret
frstor
add
in
xlat
repz
cmp
in
inc
cmp
jmp
jecxz
mov
das
stc
dec
and
xor
mov
xchg
jmp
mov
sbb
into
mov
outsl
or
dec
loope
dec
dec
adc
or
shll
pop
jb
sbb
clc
push
ljmp
xchg
jmp
adc
les
jle
pop
fmuls
inc
fiadds
test
mov
fwait
mov
adcb
cmp
push
sti
loopne
adc
mulps
ret
push
out
test
mov
or
sbb
ror
dec
lock
cli
mov
xchg
call
cmp
push
xchg
in
mov
push
lock
cmc
mov
push
ret
push
add
xor
cs
pop
fcmovb
into
push
xchg
adc
mov
test
mov
add
mov
cmp
fsubrs
dec
das
mov
lret
and
add
outsl
loopne
jmp
int3
sbbl
lods
xor
mov
mov
aaa
adc
pop
repz
push
jl
inc
clc
mov
test
xor
cltd
adc
lea
fisttps
lea
cmpb
pop
aam
fisubrs
arpl
add
stos
mov
out
test
std
adc
loop
mov
or
aaa
xchg
adc
jno
stc
push
jb
mov
mov
mov
dec
gs
cmp
sbb
out
jno
sub
push
loopne
dec
cs
sarb
push
sbb
stos
rorb
cmp
loopne
movsb
mov
ret
push
js
fildll
lret
aad
push
pop
push
mov
aaa
js
push
mov
aam
arpl
cld
dec
xchg
mov
cmp
xorb
pop
and
adc
lea
ja
out
nop
ret
mov
and
lret
rorl
cmpsl
fldcw
push
scas
je
jge
movsl
aam
and
sbb
popf
leave
insl
xchg
dec
jge
push
shlb
mov
fldl
pop
mov
loop
mov
sub
lock
addl
into
les
inc
cmp
push
jno
stos
popl
mov
pusha
test
dec
mov
push
xor
sbb
test
pushf
or
add
loope
out
cmp
cmp
lea
pusha
dec
push
pop
mov
inc
mov
rcrl
stc
push
mov
loop
dec
ret
pop
loopne
test
jne
fists
push
int
cmp
popa
arpl
dec
push
mov
push
test
push
mov
push
lahf
xchg
ffreep
xchg
inc
lods
push
lea
push
mov
inc
popf
mov
ljmp
xor
dec
mov
dec
pop
mov
fnsave
push
push
in
lret
mov
shrl
jbe
in
xor
sub
scas
xor
rcrb
les
scas
sub
cwtl
roll
pop
dec
test
addr16
in
dec
jno
mov
mov
xchg
mov
mov
out
xor
push
into
xchg
stos
push
xlat
jle
imul
popf
and
mov
pop
or
or
int
add
inc
icebp
jg
aaa
mov
mov
ret
shll
rorl
in
repz
gs
adc
or
adc
and
ss
sub
sub
inc
or
bound
gs
nopl
cmp
push
push
sbbl
add
jmp
test
frstor
jo
adc
adc
lock
cmp
rclb
in
xchg
push
ffreep
aam
xchg
jmp
outsl
insl
sti
addb
out
mov
inc
mov
pop
dec
popf
rolb
xchg
icebp
adc
mov
into
jmp
fidivl
jle
ja
movsl
sub
xorl
aad
mov
push
popf
mov
loopne
mov
int3
xlat
inc
lods
sbb
dec
jp
outsl
or
sub
fildll
enter
shrb
out
adc
sub
iret
pop
lret
lds
jne
das
jg
push
jle
xor
xchg
loop
add
mov
push
icebp
adc
stc
mov
mov
pop
mov
jg
mov
dec
incb
or
pusha
mov
mov
sbb
sub
mov
stc
and
je
sub
gs
pop
push
pushf
jno
les
xchg
xchg
outsl
das
insl
jmp
in
adc
int
inc
mov
or
fnstenv
mov
aad
cld
das
jne
sub
out
stos
pop
mov
push
popa
mov
mov
adc
push
in
orl
out
inc
pop
mov
ret
shlb
mov
int3
fistps
adc
pop
clc
outsb
xchg
pushf
sub
insl
xorb
test
or
in
sti
adc
lock
cwtl
dec
ficomps
and
jge
outsl
push
subb
lret
jbe
sub
or
mov
bound
adc
mov
xor
sbb
push
cs
push
jnp
mov
sbb
push
push
sbb
adc
jle
cltd
cwtl
push
in
xchg
xor
or
andl
sbb
xchg
das
jae
jmp
pop
mov
mov
xchg
insb
cmp
out
fstps
clc
or
bound
sub
xor
dec
flds
jl
or
cld
jno
adc
push
int3
xchg
rcll
sbb
cmp
and
add
push
sbb
shll
jb
call
add
enter
and
push
loop
ss
mov
imul
push
mov
or
xchg
mov
dec
aas
gs
lock
shll
pushf
nop
popf
cli
lods
call
mov
push
pop
aas
aas
fs
loop
mov
aas
flds
cmpsb
lods
mov
sbb
test
repnz
sbb
sub
xchg
orl
jnp
ja
or
cmpsl
sbb
mov
mov
test
xchg
fwait
inc
cmp
mov
rclb
out
aam
fmulp
insl
sar
insb
aas
cmpsb
xchg
xchg
mov
shlb
and
imul
test
mov
xor
pop
jns
roll
sbb
xchg
jl
or
inc
pop
inc
aam
cmpsb
cmp
fdivr
dec
or
push
jns
es
std
addr16
sbb
cwtl
scas
adc
js
leave
push
dec
xor
out
loopne
mov
ja
cmp
dec
xor
ljmp
pop
cs
sbb
andb
dec
jl
mov
and
mov
bound
push
cmp
cmc
sti
and
inc
lcall
mov
icebp
jnp
cmpb
mov
add
jmp
push
faddp
pop
xchg
mov
iret
push
adc
in
mov
in
scas
cmp
shlb
jne
in
or
xchg
cs
inc
pop
shll
add
test
mov
push
pop
or
movb
dec
clc
or
ja,pt
shll
mov
sub
aad
repz
je
mov
sub
sub
xchg
data16
cmp
test
scas
mov
inc
out
fwait
jno
negb
js
fists
xchg
mov
xchg
dec
mov
cmp
pushf
pop
mov
or
aas
movsb
out
sub
cli
adc
cmpxchg
js
in
dec
sub
adc
pop
fwait
cwtl
insb
in
or
ljmp
jae
stos
ja
and
and
inc
das
std
or
fs
fdivrp
or
jne
out
and
gs
add
add
pop
test
mov
and
mov
add
lods
and
cmp
test
insb
jb
jmp
push
pop
sub
cmp
punpckldq
push
pop
in
jecxz
hlt
jle
or
daa
mov
sahf
mov
into
ja
cmp
stc
jno
repnz
shl
push
or
fisttpl
vshufps
out
pop
jl
enter
pop
xchg
movsl
out
cmpsl
inc
mov
pop
lahf
ficoms
mov
adc
or
das
add
into
aas
push
out
aaa
sbb
push
push
pop
decl
cmc
adc
adc
inc
idiv
sub
mov
mov
inc
das
in
mov
rol
test
repnz
add
jge
or
ret
and
push
mov
es
mov
pop
cld
xor
xchg
sub
cmpsl
xor
out
mov
and
lret
dec
andl
and
loope
jae
mov
fs
sbb
in
cmp
in
imul
lcall
inc
in
sbb
xlat
push
push
jo
insb
push
in
pop
jae
push
fdivrs
in
and
cli
cmp
cmp
sahf
adc
sub
pop
and
std
sub
imul
and
imul
sbb
mov
hlt
lret
dec
leave
subl
aam
cmp
into
mov
jl
arpl
xchg
xchg
fimuls
or
push
loop
and
in
push
lret
int
jne
sbb
mov
hlt
hlt
out
sub
loop
push
xchg
das
adc
decb
in
cmc
ror
repnz
shlb
adc
adc
push
cmp
std
pop
sub
sub
stos
int3
and
insb
add
sbb
inc
mov
lock
adc
dec
push
shrb
sti
mov
push
daa
or
mov
mov
clc
nop
in
mov
sbbl
cmpsb
add
dec
pop
and
popf
push
push
les
lcall
imul
test
stc
or
mov
mov
xchg
popa
enter
cltd
repnz
insl
mov
out
stc
pop
clc
movsb
or
les
xor
fsubs
mov
mov
and
sahf
cmp
stos
ljmp
imul
mov
cmc
push
mov
xchg
dec
or
pop
push
imul
adc
mov
cmc
in
shlb
dec
jecxz
lcall
xchg
mov
and
pop
push
jp
je
shr
aaa
in
cmp
or
sub
xchg
sbb
cmp
cmp
stc
push
mov
cmpsl
ret
sub
lea
mov
adc
fcomps
add
movntq
enter
imul
and
add
dec
test
js
lods
mov
imul
scas
sbb
sar
subb
sbb
fdivr
stc
in
sbb
fisttps
loope
mov
and
lcall
inc
mov
pusha
ds
cld
testl
adc
cmpsb
lahf
jnp
inc
mov
pop
inc
leave
mov
push
cmp
or
sbb
push
pop
fwait
outsl
push
adc
mov
inc
or
cli
dec
jg
pushf
in
mov
jne
imulb
push
aas
pop
jo
pusha
test
aad
inc
xor
push
add
cmpsl
sub
sub
sub
xchg
and
stos
rcrb
mov
fisubrl
adc
imul
lods
sarb
push
loop
cmpsb
das
or
in
in
mov
inc
lods
mov
add
push
xor
loopne
xor
lahf
push
outsb
xor
jp
mov
mov
lods
shlb
dec
push
mov
xchg
rcl
test
sub
mov
cmp
xor
or
or
arpl
xor
shlb
cmp
mov
es
push
or
lahf
push
sub
adc
pushf
fsub
out
push
sub
cmp
xchg
pop
jae
mov
jne
ret
mov
inc
dec
out
or
cmc
jno
addr16
repz
mov
adc
push
sbbb
and
sub
mov
cmpsl
inc
mov
das
xorb
mov
out
jecxz
dec
shrl
xlat
cmp
sbb
shlb
in
mov
in
mov
call
imul
shrb
notl
outsb
dec
mov
and
aas
pop
cmp
and
out
popf
divl
pop
push
lahf
jecxz
dec
xchg
jmp
lea
xchg
pop
jnp
inc
out
ljmp
fucomip
imul
ret
jmp
lea
scas
or
add
out
test
jae
imul
mov
mov
popf
jno
mov
icebp
es
push
dec
lret
cmpsb
jnp
insb
notl
call
add
pushf
insl
loopne
pop
sub
push
dec
popa
sub
pop
sub
xor
int
inc
les
in
test
mov
psraw
pop
leave
mov
ljmp
lcall
or
or
scas
push
xor
cmp
push
adc
les
push
dec
sub
dec
jl
fmulp
test
add
jle
pop
iret
rcrl
sub
push
in
dec
push
mov
loopne
out
outsb
scas
xor
lret
push
clc
ja
daa
in
pop
out
aad
subl
or
lock
in
test
dec
push
out
mov
xchg
or
xor
or
and
jmp
pop
imul
imul
push
cld
dec
hlt
xchg
xor
pop
xor
cmc
in
jns
jl
jb
pop
xchg
or
in
jbe
addr16
and
in
push
movsb
fildll
mov
mov
popa
jle
or
xor
xor
aad
dec
dec
push
or
pusha
jo
adc
jmp
into
mov
inc
imul
pop
mov
add
adc
mov
or
bnd
dec
mov
sub
jl
inc
call
mov
dec
or
cli
jmp
mov
cmp
fsubrl
pushf
mov
dec
dec
insl
fidivrl
or
out
xchg
out
ror
jmp
cmpsl
aaa
sar
mov
cmp
xchg
repnz
mov
test
sub
cmp
lods
xorb
enter
xlat
mov
sbb
add
push
dec
inc
js
dec
aas
ljmp
inc
or
push
pop
cmpb
push
inc
pop
and
out
mov
nop
std
int3
sbb
cwtl
mov
adc
aad
mov
xor
dec
js
icebp
cmp
xchg
movsl
cmpsb
incb
pop
and
dec
adc
mov
jb
fidivrl
arpl
dec
stos
insb
and
lahf
sbb
outsb
rcrb
call
in
and
mov
addps
mov
inc
and
sub
mov
xchg
addr16
daa
es
mov
lret
sbb
or
inc
mov
popa
fisubrl
adc
sbb
es
hlt
sti
test
lret
mov
fists
push
mov
iret
mov
testb
adc
xchg
loop
cmp
clc
lods
out
mov
ret
sbb
xchg
cmpsl
in
ss
pop
adc
xchg
add
mov
pop
mov
jg
ret
ds
dec
lret
dec
addr16
cmp
jns
push
sub
mov
sahf
jno
cmp
repz
aas
outsl
icebp
jmp
xchg
ja
arpl
bound
adc
call
loope
pusha
ja
shlb
mov
push
pop
inc
dec
sbb
mov
int3
adc
sbb
push
xor
mov
mov
add
insl
jne
addr16
in
push
fbld
inc
mov
pushf
hlt
or
inc
push
imul
cmpsb
mov
dec
outsb
insl
jne
daa
icebp
mov
cmp
and
out
sarl
pop
jg
addb
mov
xchg
das
jmp
out
and
stos
outsb
add
pushf
add
push
jo
add
and
inc
mov
test
xor
popf
mov
sbb
insl
xor
pushf
push
mov
push
pop
and
out
cmp
adc
movsl
jle
xlat
dec
int
push
inc
movsl
out
pop
push
push
jb
rcrl
add
in
enter
mov
shlb
test
lea
xchg
popf
jp
clc
jl
mov
push
out
scas
inc
sub
dec
rol
push
cltd
sub
fisttpll
cmp
push
pop
jg
mov
cmc
cmp
add
jmp
fsubp
cmp
push
cmp
sahf
imulb
into
mov
push
xchg
es
clc
mov
inc
adcl
xor
data16
in
int
jbe
and
pop
into
inc
nop
popa
jne
hlt
push
mov
sarb
shr
add
adc
mov
std
cmp
ret
mov
sub
xor
xchg
adc
pop
fwait
in
and
push
sub
push
and
add
mul
mov
push
cmp
lds
data16
and
cmpsb
inc
ss
fdiv
outsb
mov
jne
inc
test
xchg
cmp
add
sbb
loopne
mov
xchg
or
loope
aas
dec
leave
loop
mov
in
xchg
lahf
insb
ret
inc
aam
mov
pushf
mov
dec
mov
fbld
and
lea
data16
decl
aaa
enter
inc
jns
roll
loope
das
out
inc
push
mov
fcmovne
adc
mov
jb
and
xor
xchg
xchg
add
lcall
pop
xor
jnp
xchg
cwtl
fwait
mov
adc
aas
ja
dec
fsubrp
ret
nop
and
cmp
sti
pop
out
insl
flds
outsl
mov
lahf
out
pop
push
push
cmp
jmp
inc
fadd
insb
mov
pop
xchg
dec
jae
gs
or
shl
mov
push
push
stc
jae
divb
jmp
or
or
push
sub
stos
or
xor
mov
cltd
arpl
cmp
imul
ljmp
push
sti
popf
ret
lock
in
hlt
arpl
xchg
inc
ja
int
pop
lahf
mov
cld
je
in
xchg
and
addr16
inc
clc
or
xchg
mov
mov
mov
sub
or
adc
push
dec
scas
xor
or
imul
dec
push
sub
push
sub
xor
xchg
mov
fwait
mov
xor
mov
insl
xchg
aaa
xor
push
pop
pushf
add
push
xor
adc
add
adc
xor
lret
inc
ss
mov
xchg
mov
pop
mov
xor
mov
icebp
ds
je
and
mov
jl
jae
mov
subb
jmp
jns
or
push
in
inc
testb
out
cmp
inc
sbb
sub
popf
rcl
sbb
in
push
pushf
push
mov
dec
inc
arpl
sub
gs
mov
in
push
mov
bswap
outsl
ds
mov
xor
stos
movsb
sti
aas
cmp
add
xor
inc
cltd
push
sub
repnz
cltd
mov
sub
mov
jne
xorb
xchg
add
inc
sahf
push
mov
fidivrs
push
pusha
pop
mov
xor
push
sarb
push
cli
push
jge
push
adc
and
ss
jns
imul
dec
in
imul
shlb
out
dec
inc
cmpb
sbb
repnz
roll
jg
inc
pop
ret
jge
orb
div
lea
js
sub
inc
rcrl
mov
fiadds
in
pop
jae
mov
je
inc
push
sub
mov
js
add
adc
push
mov
ds
sbb
pop
loop
pop
in
mov
lock
xchg
or
ds
add
cmp
call
sbb
cltd
inc
xor
int3
mov
loope
push
and
bound
add
pop
shrb
cs
sbb
lahf
and
cmpb
sub
arpl
mov
xchg
push
lahf
cwtl
cs
pop
daa
mov
sub
mov
gs
cmp
cmp
ja
xchg
xchg
test
pop
mov
mov
and
ret
shlb
mov
lds
push
je
sub
fisttpl
gs
push
xchg
dec
sar
mov
test
inc
ss
mov
sbb
loopne
loop
add
and
inc
xor
out
jmp
jb
cmpsl
fwait
lods
xchg
mov
jmp
sbb
mov
xor
outsb
ja
addr16
iret
fwait
adc
test
insl
push
or
pushf
jne
mov
jb
adc
dec
mov
mov
clc
sbb
and
pop
xor
xchg
shll
jb
pop
xor
stos
xchg
jbe
test
aas
xor
movsl
ror
cs
pop
imul
ret
jle
mov
cmp
lds
cmp
test
test
pop
inc
pop
jg
pop
xchg
in
push
lods
in
aad
out
adc
mov
popa
mov
push
mov
jg
pop
inc
push
cmpsb
pop
inc
pop
pop
push
outsb
jne
xor
mov
stos
aam
push
aaa
rcr
mov
enter
add
test
mov
cli
adc
mov
das
adc
stos
subl
adc
sbb
mov
adc
dec
iret
dec
inc
pop
cli
sbb
mov
jmp
xor
testb
repz
lods
ret
inc
xchg
movsl
cmp
ret
cmc
filds
aas
jae
sub
push
adc
repnz
mov
jle
lret
out
add
hlt
loope
and
jno
test
sarb
movsl
mov
inc
jne
sub
push
add
out
mov
jmp
cmc
push
lock
xor
in
movsb
push
pop
mov
addl
mov
rclb
fyl2xp1
xor
stc
repz
inc
adc
inc
pop
mov
mov
lea
push
bound
test
cmp
inc
fnsave
fsubs
repz
lods
or
pop
push
pushf
pushf
mov
out
aas
sub
repnz
inc
mov
dec
adc
mov
aad
out
insl
or
mov
xchg
adc
out
loop
push
xchg
into
cmp
add
xor
lock
rcll
data16
lods
sub
psrld
repnz
fistps
jnp
das
ja
ficompl
icebp
lcall
push
mov
pusha
ret
push
mov
fisubl
and
xor
ret
stos
lods
mov
clc
jle
xchg
dec
dec
rorl
cmc
xchg
jg
jns
or
pop
aaa
push
enter
insb
jns
scas
cwtl
mov
inc
ret
push
out
mov
lds
shrb
add
insb
stc
inc
insb
xchg
loop
push
pop
daa
and
jns
std
int3
cs
stc
xor
sub
mov
cli
into
push
repnz
scas
mov
pop
and
les
aam
adc
push
mov
pop
adc
cmpsl
xchg
cmpsb
rorb
outsb
in
jne
insl
call
sbb
xchg
in
insl
aad
mov
es
cmpsl
stc
inc
cwtl
cld
jecxz
dec
movsl
cltd
pop
push
jne
arpl
sbb
lods
iret
adcb
push
aad
pop
das
pushf
sarl
mov
push
outsb
xchg
movsl
mull
stc
push
mov
mov
movsl
pop
dec
pop
jb
rcrb
mov
loop
outsl
xor
push
test
xor
jne
jbe
cltd
pop
cmpsb
mov
mov
gs
ret
in
stos
loope
push
mov
stc
je
sub
loopne
lea
pushf
rcll
mov
shrb
pop
stc
leave
adc
mov
clc
pop
jp
xchg
dec
enter
clc
ret
pop
fistpll
sbb
pop
aas
sub
pop
nop
lods
jg
arpl
mov
and
xor
lds
dec
xor
divl
std
aad
jnp
pop
push
lcall
cs
scas
fildl
push
push
mov
lahf
dec
filds
sti
push
enter
pop
ret
mov
aam
int
sbb
bound
pop
inc
mov
add
cmp
inc
ss
bswap
cmp
jns
jae
inc
pextrw
ljmp
lods
mov
test
pmulhw
jb
or
in
ds
sub
out
mov
mov
stos
jl
scas
xchg
jle
pop
js
mov
pop
adc
sbb
clc
pop
fs
aam
jp
scas
pop
rolb
fwait
mov
jb
clc
loop
or
inc
cwtl
fildl
xor
mov
xor
bsf
imul
mov
push
leave
dec
mov
cmpsb
cwtl
pop
aam
fdivl
sarl
das
push
mov
mov
jno
dec
out
jle
mov
pop
cmp
push
mov
dec
int3
sub
outsl
mov
push
or
xchg
imul
pop
mov
sbb
movsb
mov
pop
fsubs
pushf
shll
dec
mov
pop
sub
xlat
add
out
popa
sub
xor
sub
push
pop
mov
and
xchg
lock
ss
out
int3
popf
aad
push
jl
fwait
xor
jae
ret
dec
mov
outsl
jbe
rorb
mov
std
fxam
push
sub
aam
sub
out
xor
loope
std
add
icebp
and
leave
data16
and
roll
sti
pop
fisttpl
mov
dec
in
pop
dec
sbb
dec
popa
ficoml
inc
stos
jge
rorb
ds
dec
int3
ss
jo
cmpsb
loop
inc
mov
scas
adc
and
mov
mov
out
push
cld
pop
and
jnp
add
addb
xor
fidivs
inc
cld
gs
mov
jl
sbb
mov
ds
std
pushf
cmp
pop
adc
inc
jmp
mov
jns
add
repz
dec
mov
out
push
xchg
in
arpl
mov
add
inc
test
sub
cmp
jno
fstl
popf
test
inc
lods
repnz
arpl
pop
andl
mov
arpl
shl
add
mov
mov
xchg
hlt
aaa
test
jle
mov
lods
insl
sbb
pusha
fiadds
aam
outsl
add
inc
std
stc
sbb
cmp
inc
sbb
mov
lock
inc
sbb
push
adc
or
cmpl
jmp
push
xlat
sbb
loopne
mov
jp
pop
inc
jnp
pop
shr
pushf
cmpsl
mov
push
iret
inc
test
aaa
mov
or
dec
icebp
mov
cmp
push
jg
push
mov
dec
roll
clc
xor
subb
mov
pop
push
leave
push
loop
ja
push
inc
pop
mov
xor
aam
iret
pop
imul
aad
pusha
push
scas
ret
mov
xlat
pop
xchg
and
adc
push
fwait
imul
dec
lret
dec
insb
out
testb
jle
into
jnp
add
dec
mov
sbb
xor
xchg
sub
in
cltd
fadds
or
loope
jae
push
dec
dec
into
mov
out
dec
add
mov
fdivrs
cmp
and
mov
cli
movsl
in
jns
adc
es
inc
adc
pop
imul
pushl
scas
cmp
and
xor
sub
test
repz
cltd
aas
sub
jmp
push
add
mov
shrb
rcr
mov
test
push
fld
mov
sbb
and
sbb
cmp
xlat
stc
xchg
cmc
pushf
jg
xchg
cmp
data16
stc
rcl
sub
test
cmp
out
push
cs
mov
hlt
fstpt
dec
jns
lea
jns
nop
sbb
jns
jno
test
lods
inc
and
ljmp
daa
stos
insb
test
push
inc
rcll
in
fisttpll
cmp
loope
sar
rcll
push
aad
push
js
loopne
xacquire
lods
push
mov
push
push
ss
sub
insb
js
sub
outsb
add
xchg
jl
push
mov
lds
add
insb
push
jl
stos
mov
and
jno
cmp
sar
mov
jmp
dec
adc
sub
mov
push
enter
jns
fsubs
xchg
shlb
cmp
push
insb
das
icebp
daa
mov
aaa
jmp
lret
sti
in
push
fisubl
pop
mov
test
ss
movsb
push
add
sub
enter
outsl
cmpsb
cltd
gs
add
mull
adc
test
movl
add
mov
or
jae
rcll
loope
cwtl
mov
jp
xor
mov
imul
sbb
call
push
jmp
into
shll
xchg
push
jg
outsb
pushf
in
xchg
pop
rolb
les
imul
aam
cli
outsl
cmp
mov
mov
mov
fimull
push
mov
sub
bound
jb
in
mov
jae
inc
cwtl
xchg
notb
inc
stc
or
mov
cli
mov
lea
lods
jno
call
test
mov
das
bound
mov
jns
or
pop
lods
out
adc
pop
or
iret
inc
cld
add
mov
lret
mov
out
aaa
insl
pop
inc
xor
sub
lock
insb
int3
arpl
shll
inc
xchg
in
out
mov
sbb
push
loop
push
mov
add
jne
fldl
lret
and
adc
shl
dec
cmp
negl
les
xor
cmpsb
jecxz
add
ds
pop
add
cmp
jo
adcb
dec
or
mov
setns
or
sbb
and
arpl
xor
int
test
lcall
aad
loope
pop
mov
mov
push
adc
adc
in
cmp
adc
inc
cld
ljmp
pop
ret
test
aam
mov
ret
mov
add
aad
and
imul
mov
das
and
std
clc
mov
mov
jns
xor
jae
movsb
stos
or
dec
pop
xor
jbe
pop
mov
call
and
js
or
test
sub
aam
lea
push
jnp
xor
sti
push
cmp
test
pop
sti
clc
sbb
orl
pop
imul
adcb
pop
mov
and
xor
add
nop
pop
imul
and
imul
mov
pop
xlat
mull
mov
fnstsw
out
dec
mov
ljmp
dec
push
jne
fldcw
sbb
jle
stos
xchg
pop
icebp
aas
add
xorl
sarl
push
push
push
fnsave
rcr
bound
inc
fdivs
sbb
andb
les
push
jbe
test
mov
dec
cld
add
and
fnstcw
and
xchg
push
lea
or
sbb
xchg
lods
dec
jnp
cmp
sahf
push
and
mov
test
cwtl
icebp
aaa
fs
lods
stos
cwtl
ja
jl
sbb
and
mov
leave
xor
lods
cltd
push
nop
jmp
mov
iret
mulb
push
stos
push
inc
push
mov
mov
mov
dec
icebp
mov
fistpl
cmp
pop
out
cmc
popa
stos
ficompl
pop
xchg
mov
push
in
jae
fwait
cmpsl
mov
push
xchg
idiv
sub
lret
fmuls
push
jb
mov
imul
test
fsubrs
stc
mov
ret
in
pop
xor
pop
sahf
lcall
test
xlat
xor
jae
xchg
pop
inc
stos
clc
or
jle
imul
dec
mov
fidivrs
loope
mov
leave
repz
and
adc
mov
xor
inc
jp
in
pop
negb
mov
gs
cltd
andb
pop
int
repz
inc
mov
lea
nop
int3
ja
pop
ffree
dec
sbb
and
xchg
ret
rcrb
fnstcw
rcr
dec
xchg
mov
push
sub
jecxz
scas
lcall
std
xor
enter
mov
fs
bound
xor
lcall
add
cltd
cmpsl
addb
std
and
in
daa
cmpsb
fadds
scas
clc
and
mov
lods
pusha
int
jbe
pop
les
mov
xchg
pop
lods
ds
jle
pop
inc
scas
out
inc
xchg
fidivl
roll
mov
sub
fistpll
xchg
sbb
fsubrs
sbb
and
dec
rep
inc
dec
mov
call
cwtl
jbe
outsl
in
mov
xchg
jno
xor
imulb
shlb
xchg
ljmp
test
lret
inc
test
or
gs
mov
cmpsb
dec
xchg
fisubl
mov
pop
cmp
mov
outsl
or
lock
pop
cmp
fs
movsb
and
addl
cmp
pop
dec
jne
lcall
sub
mov
mov
ljmp
push
in
pop
out
outsb
stc
jo
add
push
pop
xchg
sarl
popf
pop
inc
aaa
xor
test
xchg
fcompl
xor
popf
leave
pop
mov
jne
push
adc
or
mov
test
lret
gs
shlb
outsb
scas
jmp
adc
mov
inc
inc
xchg
mov
xlat
ss
test
insb
dec
aam
fcmovu
push
ret
cmpsb
add
dec
test
push
test
mov
xchg
ljmp
sti
pop
xlat
sbb
imul
xchg
xchg
dec
dec
mov
mov
sbb
and
sarl
fistl
mov
mov
stos
inc
sub
dec
shrl
stc
fnstenv
dec
jecxz
sub
sub
cmp
pop
lcall
push
imul
out
fisubrs
adc
aaa
pop
rorb
nop
xor
mov
add
addr16
jge
sbb
dec
aam
push
imul
ss
sub
sub
pop
fdivs
and
lcall
push
mov
xchg
das
inc
mov
or
fmul
test
fs
jno
jnp
mov
cmp
stos
xor
in
fmull
mov
and
or
js
lcall
in
test
lcall
movsb
out
xchg
push
jae
and
xchg
dec
xor
dec
xchg
dec
add
data16
or
js
xchg
inc
aad
aas
add
jnp
insb
fidivl
inc
mov
sub
mov
adc
fildll
test
sbb
loop
popa
dec
jns
inc
inc
ret
repnz
or
and
test
xor
aas
sbb
mov
pop
imul
cli
push
sbb
lds
sbbl
inc
imul
push
lock
mov
cld
dec
mov
in
testl
cmc
div
cltd
jns
inc
mov
loope
rcr
out
jmp
pop
int3
push
faddp
enter
ficomps
and
popa
std
adc
test
mov
ljmp
xchg
bound
nop
fwait
jb
mov
mov
int3
push
cwtl
loopne
push
fldenv
pop
adc
out
inc
mov
mov
add
mov
sahf
xor
xchg
adc
repnz
sbb
movsb
inc
stc
into
orl
mov
ds
movsl
sarl
jno
stos
sub
jl
and
sbb
push
mov
pop
lret
push
push
mov
ja
ficoml
mov
pushf
mov
and
adc
mov
dec
mov
dec
lret
fsubl
cmp
sub
cwtl
sbb
mov
dec
fistpll
into
jmp
xchg
add
sub
xor
mov
lahf
aas
push
xor
cli
test
rolb
ret
mov
int
xchg
sbb
inc
mov
sahf
xor
loop
popf
gs
xchg
gs
int
push
hlt
pop
aam
cltd
inc
arpl
xchg
mov
adc
lods
cmc
daa
mov
mov
jne
pusha
mov
dec
jae
xor
out
lds
flds
xchg
lods
stc
scas
int3
sub
add
repz
add
xchg
cmpl
mov
mov
xor
jl
sbb
pushl
push
iret
xlat
fs
adc
mov
ja
mov
stc
push
jae
jae
add
dec
jmp
nop
push
mov
mov
xchg
mov
jne
sbb
sbb
push
mov
cs
cmp
stos
mov
inc
or
jle
pop
test
sti
ja
stos
inc
mov
js,pt
add
mov
dec
dec
mov
jmp
pusha
pop
mov
js
mov
fsubs
pop
adc
mov
inc
aaa
iret
das
repz
xor
lret
push
fwait
ss
or
inc
jne
dec
ss
jecxz
add
nop
mov
add
adc
bnd
popa
mov
jne
inc
in
cwtl
testb
mov
xchg
push
cmp
mov
ss
mov
jg
aad
xchg
ja
bsf
push
scas
mul
ror
mov
xor
push
aad
inc
sbb
add
fsts
neg
nop
ret
sub
mov
sub
lret
scas
jb
or
xchg
hlt
xchg
insl
mov
inc
add
testl
sub
xchg
fwait
insb
mov
aaa
insl
or
xor
xchg
clc
stc
faddl
add
jmp
in
mov
mov
shrl
js
imull
fs
rorl
enter
xchg
xchg
inc
fwait
les
sub
movsl
das
and
insb
roll
jecxz
mov
pop
gs
inc
adc
mov
jg
xchg
dec
inc
dec
stc
push
mov
dec
fnsave
xchg
aaa
and
into
xchg
push
mov
fcmovnb
mov
push
sub
jmp
sarl
or
dec
xor
int
sbb
push
xor
xor
sub
jl
mov
or
xchg
daa
xchg
and
and
sub
inc
mov
add
pop
inc
imul
pop
jo
push
ds
xchg
dec
inc
jmp
int3
out
pop
out
add
inc
and
jmp
sub
pusha
int3
dec
push
xchg
int
adc
or
in
shlb
shlb
out
cmp
and
shll
clc
popf
scas
dec
push
dec
test
mov
or
xchg
into
push
js
icebp
insl
test
mov
lahf
adc
xchg
xchg
outsb
imul
mov
push
repnz
sahf
cmp
push
cmp
ja
push
ret
dec
adc
and
mov
imul
pop
cmpsl
nop
out
dec
inc
lcall
ds
icebp
xor
cmc
fisubrl
add
add
sub
in
sub
push
sbb
dec
scas
movsl
ret
sub
lods
fnstcw
mulb
outsl
sbb
cmc
js
shll
clc
push
push
fbstp
in
test
sbb
jg
add
mov
push
loopne
mov
mov
adc
adc
mov
xchg
add
push
sbb
pop
adc
inc
aad
push
bound
fs
xor
inc
pop
mov
subb
or
sahf
dec
dec
lock
adc
adc
in
jle
and
imull
pop
jge
adc
push
sbb
sub
jbe
cli
addb
or
dec
test
xchg
and
sbb
mov
cli
pop
cli
mov
aam
pop
int3
outsl
cmp
rorb
stos
or
ss
jns
push
clc
xchg
sub
sub
jecxz
push
loopne
add
cmp
pop
stos
xor
mov
jno
dec
push
push
insb
aas
stos
cmp
out
jb
enter
and
inc
rcll
pop
cmp
lea
stos
mov
push
fsubrl
push
rcl
enter
jl
in
mov
xor
pusha
or
xor
push
dec
scas
fsts
inc
scas
jle
cmp
imul
leave
xchg
sbb
mov
fisubl
icebp
test
push
adc
dec
jl
cmp
and
push
pushf
lods
jmp
dec
and
mov
adc
imul
imul
mov
and
pop
pop
fistpll
adc
icebp
cmp
mov
jle
or
jbe
lcall
pusha
fld
mov
mov
lcall
dec
shlb
push
push
ds
mov
add
jecxz
pop
mov
cltd
in
lret
cwtl
cmp
testl
inc
insb
cmpsl
lds
aaa
mov
test
test
daa
push
and
jo
fistpll
divl
add
mov
mov
sub
fists
cmc
ds
das
sub
fnstenv
pop
cltd
xchg
loope
jbe
push
hlt
mov
sub
std
xor
cmp
shlb
sub
sbb
xchg
mov
in
jl
jnp
flds
inc
das
imul
cmp
mov
call
pop
inc
call
gs
or
out
add
adc
and
je
push
in
mov
dec
mov
shll
xor
cs
imul
cmc
sub
fldcw
push
cmp
das
and
inc
fistpl
xchg
mov
cmp
lret
cmpsb
and
repz
xlat
scas
cli
nop
clc
in
lds
or
cmp
dec
jge
pop
mov
pop
jecxz
push
out
es
add
ret
ret
xchg
enter
aaa
test
xor
fs
xor
rorb
jle
mov
pop
or
cwtl
jnp
sub
xchg
aam
mov
notb
aad
ja
cmp
icebp
out
cmp
loopne
inc
pop
mov
pop
xor
push
cwtl
bound
xor
push
popf
ss
adc
stc
fnstcw
mov
fnsave
push
xor
outsb
test
cmp
add
imul
sbb
push
pushf
xchg
jns
roll
adc
in
adc
arpl
add
inc
loopne
lret
pushf
aam
hlt
push
and
in
icebp
jnp
es
pop
pop
mov
xchg
push
mov
mov
mov
xchg
decl
in
mov
mov
push
mov
lahf
pop
sarb
mov
cltd
xlat
cld
nop
and
cltd
add
sahf
mov
mov
stos
lret
ret
fcom
add
cld
cmp
mov
rolb
jo
les
mov
jle
lds
imull
insb
adc
inc
orb
add
dec
cmc
in
adc
jo
pop
movsl
and
and
xchg
jle
add
push
pop
dec
fimull
push
mov
aam
mov
lcall
lret
shrl
adc
pop
fnsave
inc
adc
xchg
sbb
repnz
popf
fsubrs
xchg
mov
test
lret
dec
or
or
xor
cmp
dec
sarb
lea
xor
pusha
test
jne
xlat
mov
icebp
mov
sub
loope
out
repz
mov
aad
push
dec
push
cmp
fbstp
jg
mov
sbb
stos
fwait
movsb
push
popf
sbb
sbb
and
jecxz
mov
sbb
adc
insl
or
and
mov
push
sub
in
lea
outsb
std
xchg
adc
outsl
sbb
jp
pop
cld
add
jb
mov
ja
rol
mov
xor
push
and
or
arpl
je
in
xchg
stos
call
stc
aam
mov
jo
add
loope
push
or
loopne
jb
sub
icebp
xchg
xchg
cmpb
sub
lcall
test
decl
jl
xorb
jg
cmpsb
outsb
jns
sarb
aas
cmp
pop
iret
sti
hlt
or
out
lcall
orb
lock
dec
scas
mov
out
add
cmp
xor
lahf
push
inc
xchg
pushf
jp
mov
mov
ds
sbb
mov
outsb
dec
mov
pop
lcall
jae
or
inc
jmp
xor
fwait
loop
xchg
jae
mov
mov
jmp
sbb
sbb
adc
pop
es
cmp
shll
push
push
movsl
sub
lds
dec
pop
sub
add
push
out
xor
adc
inc
dec
or
pop
xor
mov
pop
jecxz
enter
ja
lock
sub
push
cld
in
orl
mov
ficompl
cltd
and
pop
shrl
dec
jno
inc
push
pop
fisubrl
dec
mov
mov
and
xor
mov
out
adc
mov
leave
dec
mov
nop
adc
outsl
xor
les
and
adcb
shlb
push
rolb
mov
cmpsl
fidivrl
ss
cmp
aad
mov
lahf
int3
inc
insb
aaa
push
xchg
inc
push
pop
es
stc
sbb
stos
add
mov
aad
mov
ljmp
push
mov
in
dec
testb
dec
das
xchg
scas
inc
or
mov
and
les
pop
fwait
aaa
and
sub
in
scas
test
xchg
push
cmp
cmpsb
and
add
scas
pop
push
mov
std
imul
or
shl
xchg
sarl
cltd
dec
divb
loopne
jbe
sbb
call
leave
rcrb
mov
push
clc
nop
ret
or
mov
mov
and
jmp
arpl
fisubl
popa
inc
push
jge
add
sbb
inc
arpl
add
cli
insb
popa
lods
in
push
and
mov
pop
inc
xchg
mov
dec
adc
pop
push
in
xorl
in
repz
ret
jp
xchg
rol
cmp
and
mov
shll
sbb
repz
sub
xchg
mov
ja
enter
gs
in
mov
dec
mov
push
js
sbb
or
lret
dec
push
push
aas
fld
int
out
adc
mov
in
xor
insb
loop
dec
rolb
sbb
mov
in
sub
mov
adc
lret
ffreep
sub
inc
divb
dec
loope
mov
filds
xchg
fiadds
and
dec
dec
out
fmuls
cmp
mov
fsubrp
mov
or
sbb
sub
imul
cmp
add
or
outsl
outsb
lock
in
hlt
mov
xchg
dec
pop
aad
pop
and
es
sbb
or
jp
inc
mov
mov
pop
int
and
inc
jl
mov
aaa
lahf
fldt
dec
add
and
iret
ss
mov
xor
jp
in
jle
jg
inc
mov
divb
stc
lret
push
addb
add
cmpsb
mov
push
lods
push
testb
outsb
ja
testb
jg
pop
test
addb
insb
nop
cmp
sahf
jo
rol
jbe
jo
fdivr
mov
test
int
enter
idivb
lahf
jmp
movsb
dec
iret
mov
cwtl
add
push
into
imul
mov
mov
jecxz
ret
cltd
insb
push
jne
leave
ja
xchg
mov
in
dec
mov
pop
scas
repnz
das
xor
mov
cmpl
xchg
dec
in
xchg
mov
setg
mov
cltd
mov
and
jle
push
fwait
mov
mov
mov
dec
jg
call
leave
mov
jg
add
xor
ficoms
jmp
or
out
pop
cli
int
mov
rclb
std
addl
adc
mov
or
and
push
dec
iret
xchg
inc
inc
inc
xor
hlt
hlt
and
call
jl
pusha
dec
pop
or
push
ds
testb
jge
cmpsb
stc
adc
jp
cmp
cmp
stos
jae
hlt
push
lea
inc
inc
lret
in
stos
sub
sbb
ret
sub
sbb
cltd
jmp
rorb
cmc
mov
pop
mov
lods
adc
neg
inc
repz
sti
inc
js
gs
pop
or
sub
sub
lock
insb
clc
les
push
add
call
outsl
mov
jmp
jns
mov
loop
push
inc
jne
mov
loope
push
push
push
fmulp
neg
and
daa
popf
jb
sub
xchg
add
and
aam
stc
sbb
jmp
repnz
stos
ljmp
mov
adc
adc
jo
mov
or
fnstsw
dec
std
push
leave
push
mov
in
pop
ret
push
out
push
push
out
or
popf
mov
int3
sbb
cmp
push
cmp
jmp
mov
push
fiaddl
xor
inc
js
cmpsl
negb
jge
add
faddl
sub
fwait
cmp
ss
fcmovu
fcmovb
and
xor
ret
repz
rorb
ja
cltd
jp
cwtl
cmp
add
inc
cmp
mov
lds
sub
pop
stc
push
push
add
inc
clc
inc
das
push
mov
cmp
ficomps
mov
xlat
inc
int3
imul
test
mov
pushf
outsl
mov
xor
or
mov
outsl
and
sub
or
xchg
ss
xchg
imul
in
fnsave
stos
daa
xor
inc
dec
add
lcall
test
cmpsb
stc
sub
inc
icebp
loop
test
fwait
fwait
and
jge
lret
stos
orb
pop
loop
jb
fbld
pop
or
ffreep
push
cmc
xor
out
fs
in
sub
shrl
mov
inc
icebp
mov
mov
leave
scas
sahf
pop
sub
jnp
pushf
dec
rorl
popa
mov
jmp
pop
xchg
rorb
mov
roll
adc
ret
add
in
out
dec
sbb
cmp
jge
dec
cmp
ja
outsl
push
aam
push
sub
push
sbb
hlt
lret
ret
rclw
stc
or
xor
push
cmp
jmp
add
push
pop
pop
imul
and
pusha
xchg
sbb
push
aam
jle
pop
repnz
test
adcb
inc
xor
sti
pushf
inc
jns
push
aaa
xchg
pop
repnz
aaa
pop
sbb
sub
repz
mov
mov
xor
jp
mov
xchg
and
out
lods
jecxz
pop
mov
cltd
jo
or
mulb
movsl
rcrl
sub
popf
xor
test
scas
inc
pop
mov
cmc
mov
push
sbb
mov
popf
adcl
addr16
orl
jb
sarb
ss
jno
test
xchg
insb
into
jae
arpl
out
xchg
mov
mov
faddp
je
hlt
hlt
lcall
les
pop
dec
arpl
xchg
in
ja
push
jp
push
sub
pop
mov
repnz
mov
adcl
pop
mov
lahf
loope
xor
call
enter
call
aaa
inc
andb
xor
loop
sbb
xchg
mov
sbb
xchg
in
test
mov
push
insl
mov
xchg
ds
mov
inc
pushf
pusha
xchg
jge
cmpsl
popf
inc
sbbb
cmp
cmc
aam
push
or
xchg
nop
push
lret
cmp
rorb
ds
xchg
in
aas
cmp
cmp
enter
iret
es
mov
stos
push
into
dec
inc
push
dec
jae
mov
mov
aam
fs
add
lret
cmpl
inc
test
cmp
mov
iret
shl
xor
inc
push
xchg
dec
add
xorb
push
imul
hlt
lcall
fimull
scas
shrb
mov
adc
int3
movsl
lds
roll
out
mov
mov
mov
inc
adc
adc
imul
sbb
ret
fisubrl
inc
xor
or
dec
push
inc
mov
add
or
inc
dec
mov
std
push
xchg
sub
mov
dec
inc
mov
test
inc
adc
jnp
movb
cmpsb
mov
pop
pop
addr16
xor
lcall
mov
out
pop
cmp
jmp
je
pop
xor
xchg
mov
rcll
dec
xchg
les
adc
gs
loop
or
imul
ds
roll
rcrb
popa
mov
hlt
dec
test
push
sbb
sub
mov
push
inc
sub
lods
mov
dec
jns
mov
or
dec
cmp
arpl
pop
dec
dec
fnstsw
jno
clc
es
sub
cltd
int
mov
fisubrl
jbe
nop
sbb
mov
nop
out
mov
cli
and
inc
inc
mov
add
les
jg
and
ds
leave
mov
roll
or
mov
xor
mov
mov
add
outsb
xorb
arpl
push
or
push
popa
pusha
nop
shlb
dec
movzwl
adc
push
xlat
ficomps
stos
das
xor
mov
fldcw
sbb
mov
mov
rcr
add
jne
mov
call
mov
push
mov
sbb
loop,pn
enter
or
mov
lods
jbe
fldt
sbbl
gs
sub
divl
cmp
dec
popa
cmpsl
mov
xchg
movl
cmp
test
mov
or
push
aad
or
inc
sbb
int3
mov
imul
popf
mov
cld
push
mov
push
push
or
add
movsb
dec
cmp
pusha
fmull
fs
pop
push
fdivs
add
fidivs
cmc
hlt
push
push
dec
jbe
pop
adc
push
movsb
rol
insl
push
cmpsb
mov
xor
in
jns
out
popa
sbb
sbb
stos
sub
adc
mov
cs
add
int
cmpsl
inc
sbb
adc
xor
les
dec
jle
insl
jns
mov
mov
iret
sbb
xchg
insl
pop
ljmp
push
in
mov
dec
mov
sbb
push
fcomi
or
mov
test
sbb
mov
mov
cwtl
aad
movsb
test
push
test
outsl
xchg
out
fadd
mov
stos
in
ss
dec
pop
xorl
fimull
sub
jge
negb
in
lock
mov
cmp
pushf
popa
lea
mov
aaa
and
sbb
aad
mov
mov
dec
movsl
sbb
movsl
sub
outsl
fiaddl
push
addb
loopne
lahf
sub
mov
xchg
arpl
jb
lcall
or
pushf
in
sub
aas
out
jo
fcmovu
adc
mov
dec
les
jg
jnp
outsb
adc
jp
mov
int3
add
leave
jns
mov
and
lcall
jne
and
lods
sbb
dec
mov
mov
pop
pop
inc
test
ss
or
push
int
aad
push
lods
dec
out
cmpsl
push
sbb
jnp
cmp
lcall
push
pop
inc
dec
and
sahf
dec
insb
inc
dec
fwait
je
push
sub
stos
data16
pushf
js
xchg
dec
sub
aam
xor
mov
xchg
jmp
mov
shlb
push
aas
test
jne
fwait
lock
pusha
or
cltd
jp
mov
nop
sub
pop
aam
sarb
jmp
fadd
mov
mov
dec
movsb
out
mov
mov
and
mov
insb
sarb
jbe
sahf
inc
mov
mov
inc
add
dec
xor
adc
pop
jle
pop
adc
fwait
push
loopne
pop
xchg
sbb
xchg
jo
loope
sbb
mov
lcall
push
aas
push
pop
mov
xor
in
sbb
ss
add
ljmp
xchg
lods
inc
sti
pop
outsl
sbb
push
les
imul
mov
pop
or
in
mov
repz
popa
mov
xlat
stos
bound
lods
in
push
outsb
adc
test
int3
sahf
mov
xor
ret
sbb
mov
and
popa
gs
adc
dec
dec
shl
mov
in
lcall
pusha
fnstenv
inc
push
int3
mov
jecxz
sub
pusha
mov
jecxz
movsb
add
mov
in
popa
dec
push
das
lds
test
hlt
psubd
test
mov
cmc
xchg
jmp
sbb
sbb
ret
dec
push
pop
aam
xor
inc
iret
jne
mov
bndstx
inc
sub
and
rep
subb
sti
add
inc
sub
fwait
addb
xor
js
loop
xchg
lds
iret
out
cltd
sub
xchg
and
cmpsb
adc
sahf
xchg
inc
push
sub
jae
adc
mov
mov
or
fisubl
add
js
inc
stos
mov
push
movsb
jl
and
ret
adcl
bnd
test
jae
xor
daa
add
pushf
int
mov
lds
or
int3
add
outsl
mov
loopne
and
push
clc
mov
ljmpw
call
insb
hlt
in
sbb
scas
mov
cmp
or
xor
push
test
dec
jmp
pop
outsl
xchg
in
xchg
mov
lods
sbb
or
and
mov
cvtpi2ps
mov
sbbl
mov
pop
jbe
pop
roll
inc
push
xlat
into
add
xlat
mov
mov
xor
scas
movl
xchg
rdmsr
fidivs
ret
xchg
jnp
dec
repnz
or
push
and
and
cmp
subb
test
cld
jp
jecxz
jno
mov
rcl
inc
lahf
push
int
ds
sahf
add
adc
adc
cmp
jp
leave
int3
shrb
test
sarl
push
fmuls
pushl
movsb
push
enter
and
or
fs
test
fmuls
in
dec
js
pusha
jno
mov
add
pop
icebp
sbb
imul
int3
pop
nop
mov
or
dec
loopne
xchg
jo
rcll
sbb
scas
dec
cmp
inc
dec
cmpsb
inc
inc
addr16
push
jo
pop
fwait
xchg
push
aam
hlt
cmp
shrb
mov
repz
lret
inc
mov
adc
xchg
xlat
mov
insb
popf
mov
enter
sbb
sbb
xchg
inc
xchg
rcrl
clc
adc
xor
jle
cmp
lea
sub
pusha
enter
repz
pop
stos
cmp
insb
mov
xchg
aaa
insl
or
xor
movsb
test
ror
pop
add
scas
cld
mov
jne
jp
pushl
adc
test
xchg
int3
test
xchg
or
icebp
xor
or
arpl
xlat
sub
clts
dec
jnp
jno
push
pushf
es
inc
add
int3
jb
outsb
dec
mov
icebp
add
add
fwait
sub
push
int
test
cli
stos
cmp
pop
adc
js,pn
push
fldt
dec
fdivr
insb
lahf
or
sbb
insl
scas
into
jp
jnp
jb
aas
xchg
or
inc
sub
cvttps2pi
loop
cmp
mov
ret
xchg
adc
ret
push
je
and
mov
stos
jmp
xlat
jae
add
push
push
sbb
fstl
mov
mov
or
test
testb
clc
icebp
negl
imul
inc
sbb
xchg
lock
test
adc
cmp
pop
mov
sbb
push
imul
xchg
or
sbb
xchg
jl
adc
xorb
sbb
cmc
int
popf
lcall
sarl
sahf
imul
push
add
dec
push
mov
xor
rorl
dec
pop
xor
or
sub
mov
in
pop
scas
sbb
adc
push
mov
repnz
fsts
or
mov
xchg
mov
jg
add
dec
sub
xor
mov
push
push
sbb
xchg
xchg
inc
fistps
sbb
lcall
rcr
jle
xor
pop
fcmovnu
inc
jns
sub
loop
mov
or
and
mov
mov
cmp
fcomps
jb
gs
xor
xchg
ficoms
test
mov
ficoms
mov
les
push
cmp
sbb
lahf
inc
insl
ljmp
sti
es
stc
imul
mov
rcrb
int
dec
nop
test
fistpll
ja
mov
es
sbbl
loopne
push
ret
mov
mov
mov
push
sbb
pusha
lods
fsubp
xchg
xor
bound
not
stc
adc
push
testl
vcvtdq2ps
xchg
aaa
mov
imul
out
sbb
fisubl
pop
and
jle
js
call
scas
stc
int3
sbb
adc
or
jo
mov
outsl
fidivl
pop
mov
xchg
loope
out
or
insb
out
sysret
cmp
out
test
insl
lock
cmpsb
or
test
sbb
jl
out
clc
fdiv
adc
inc
fcmovu
addr16
cmpb
add
push
jae
mov
fistpll
jo
mov
out
mov
dec
aam
mov
jb
inc
cmpsb
lods
xchg
dec
and
mov
xlat
popl
xchg
add
imul
dec
outsl
subb
pop
ja
out
mov
or
hlt
movsl
add
sbb
push
sbb
adc
mov
add
pop
mov
mov
loopne
xchg
mov
popf
push
das
pop
and
jmpw
sbb
mov
mov
or
mov
xchg
jb
pusha
scas
orb
jb
shlb
mov
rcrl
sbb
inc
int
fldenv
jns
icebp
leave
lahf
outsb
data16
and
pop
and
push
sahf
jecxz
jle
pop
pop
jmp
fldl
xchg
sbb
cmp
out
mov
stc
sbb
pop
lods
pop
in
nop
push
repz
scas
cmpsl
sti
add
and
imul
repnz
imul
adc
testb
inc
popf
and
add
jg
ret
mov
jne
sbb
xchg
xchg
loopne
add
js
shlb
dec
pop
push
pop
fdiv
iret
inc
jnp
mov
add
cmpsb
xchg
ffree
or
mov
es
in
sub
mov
xor
and
fists
mov
sti
or
faddl
cmp
sub
dec
mov
mov
sub
stos
out
or
bound
pop
outsb
mov
cmp
in
daa
stos
outsl
movsl
jmp
ret
imul
js
push
daa
cmp
xchg
fisubl
mov
sbb
jp
dec
inc
in
orl
addr16
mov
pop
add
sub
jecxz
aad
sbb
inc
pop
and
push
in
cmp
or
out
repnz
jne
adc
pusha
cld
push
push
stos
ret
dec
dec
sub
mov
xchg
sbb
inc
jle
push
aam
cld
jg
jb
jb
mov
sarb
inc
dec
or
jb
je
cmp
inc
jp
dec
ret
pop
sbbl
outsb
cmp
sbb
lock
xchg
sub
inc
jl
sub
repnz
data16
das
arpl
jae
ss
adc
into
adc
xchg
sub
jle
xchg
stc
mov
mov
ror
movsl
xchg
mov
mov
fdivp
mov
xor
daa
mov
inc
test
jb
mov
out
aaa
loope
mov
cmpsb
nop
les
aad
xor
mov
mov
cmp
shlb
xchg
gs
imul
int3
ja
ljmp
lods
or
mov
and
pop
addr16
xchg
in
pop
in
sbb
lods
mov
mov
xor
or
xchg
icebp
movsb
or
in
and
sub
mov
imul
or
out
pushf
out
mov
and
cmp
xchg
push
push
and
push
mov
cmp
push
push
call
std
xchg
int3
jno
add
mov
xchg
xor
sub
out
in
cmp
mov
icebp
cmp
lret
add
leave
call
mov
jb
dec
je
shl
xor
fistl
dec
das
insb
or
jle
mov
popa
mov
in
mov
ds
add
fcomps
cmp
adc
adc
imul
pop
adc
rorl
xor
mov
push
in
cltd
inc
stos
sub
insb
sbb
xor
ss
cmp
jb
or
outsb
mov
notb
enter
lock
push
mov
jbe
push
test
lds
inc
arpl
or
sub
int
xor
mov
add
in
add
and
in
or
xor
mov
loopne
js
call
and
stos
bnd
xor
std
out
xchg
mov
mov
loopne
out
add
test
mov
xchg
mov
dec
js
add
fadd
imul
jno
test
pusha
ficomps
out
bswap
xchg
fmul
stos
movsb
movsb
cmpsb
lret
popa
mov
loope
mov
mov
jno
cmpsb
mov
imul
push
ljmp
mov
stc
insb
ja
xchg
xor
lret
mov
popa
dec
jmp
pop
out
in
push
jp
adc
adc
aad
pop
out
fdivr
mulb
jo
mov
xor
lret
cli
movaps
cmpsb
inc
ret
or
shlb
mov
cmp
fstl
mov
je
pop
int
jle
pop
jmp
and
jmp
lcall
into
mov
test
and
dec
xor
push
and
lds
fcomp
mov
jp
punpckhdq
fcmove
pushf
fs
adc
jle
xchg
sub
add
mov
fsub
loope
sbb
push
push
add
add
fdivrs
xlat
mov
icebp
divb
inc
mov
dec
js
es
adc
mov
jb
imul
mov
cmp
sub
and
popf
ds
into
jecxz
pushf
stos
stos
pop
adc
sub
fistpll
push
mov
lods
mulb
adc
pushf
iret
aaa
adc
dec
orl
dec
add
stc
inc
aaa
xchg
adc
call
test
lea
jnp
xor
mov
loopne
xchg
aas
inc
push
dec
jo
dec
cltd
pusha
pushf
hlt
nop
mov
jns
sbb
lret
jp
in
push
push
xchg
incb
sbb
inc
xor
les
mov
outsb
outsb
lcall
daa
sahf
out
rcr
je
sub
and
rcrb
notl
popa
cmp
sub
pop
dec
push
minps
push
mov
xor
movsb
sub
dec
lret
xor
bound
mov
cmpsl
repnz
ljmp
pop
out
subb
jmp
xchg
push
mov
jmp
ds
jno
sbb
into
push
outsl
or
cmp
jns
aas
clc
addr16
or
adc
ret
jbe
mov
test
dec
sbb
jb
and
lahf
add
jg
jae
sub
sbb
fwait
enter
repnz
sarl
pushf
mov
test
sti
add
rolb
in
outsl
inc
nop
jno
lret
roll
sbb
adc
cmpsl
sub
adc
andb
push
or
aaa
aaa
mov
ret
sub
stos
test
add
fsubrs
cmc
and
popf
js
dec
mov
out
jne
lods
test
jp
ficoms
sub
mov
int3
push
or
inc
jge
scas
aam
sub
out
dec
call
sbb
dec
dec
fcoms
cld
mov
in
out
cmp
jecxz
lods
push
and
loope
repz
sub
rolb
fidivs
into
ss
adc
fsts
std
add
jnp
shl
and
loope
bound
lret
jno
movsb
mov
and
add
popf
dec
jns
das
cmp
mov
inc
leave
idivb
jl
inc
and
imul
sub
cmp
mov
xchg
repz
mov
sbb
xor
test
adc
insl
out
add
outsl
push
out
jmp
push
popa
pop
jecxz
cmc
and
cmp
mov
add
imull
mov
ret
stc
fwait
xor
hlt
and
mov
or
enter
xchg
xor
sbbb
xlat
dec
push
mov
popa
cwtl
cmp
xor
cld
sbb
clc
incb
pop
in
jb
or
lods
cmpsb
pop
rorl
push
pop
vprotw
sub
mov
pop
leave
sbb
test
cmc
fs
decl
sub
lds
pushf
mov
add
bound
mov
xor
test
fdivs
pop
cwtl
inc
add
cltd
cli
sbb
aas
fstpt
adc
add
xchg
incl
push
in
fidivrs
mov
mov
ret
int3
loop
xor
cmp
addr16
pusha
std
nop
in
or
add
sbb
cwtl
stos
out
fsts
mov
rcrl
xchg
jne
ret
shl
rolb
imul
pop
lret
sar
inc
push
mov
jns
push
pop
outsl
iret
jns
add
sbb
clc
out
and
jbe
fcompl
mov
jmp
cmpsb
xor
stc
nop
je
and
cmp
das
hlt
pop
pop
test
cmp
mov
std
dec
jmp
inc
jp
xlat
andl
mov
mul
repnz
jae
ret
and
mov
mov
add
ret
jg
xor
shl
mov
dec
sti
jmp
js
mov
mov
outsb
adc
mov
das
xchg
pop
jnp
or
es
rcrl
or
roll
repnz
or
int
push
fsubrp
fdivr
cmpsb
cmp
adc
and
xchg
pop
in
adc
test
mov
fwait
xchg
sbb
fisttpll
mov
xor
insb
cmp
jb
jnp
and
or
leave
mov
scas
sbb
rcrb
mov
xor
sbb
or
mov
xchg
jp
icebp
in
repnz
sbb
ds
enter
inc
push
pop
rorb
rclb
dec
mov
cmpsb
push
sbb
mov
mov
std
jg
cmpsb
call
lods
xor
dec
or
das
bound
dec
stos
and
ficomps
cmpb
xor
xchg
adc
or
mov
pop
mov
std
pop
push
inc
push
add
jecxz
inc
lds
mov
add
push
sbb
fs
shrb
push
lahf
aaa
mov
sub
push
push
daa
sbb
cmp
lock
sbb
into
xchg
aas
xlat
mov
sub
sbbl
pusha
test
pop
push
xchg
icebp
into
jo
call
jg
ret
mov
or
cmp
imul
add
lea
dec
pop
push
mov
fcmovb
popa
icebp
fcmovnbe
inc
sub
pushf
mov
inc
outsb
dec
sahf
sbb
shlb
test
pusha
cmpb
and
mov
xchg
xchg
cmpsl
and
jge
in
insb
dec
data16
fadds
icebp
mov
fmull
and
mov
in
fwait
dec
shlb
notb
popf
mov
push
pop
cmp
stos
mov
sub
or
jne
push
pop
sub
iret
call
call
rol
xchg
stos
mov
jbe
sub
push
jne
pop
inc
mov
mov
jp
inc
pop
sbb
addr16
decb
repnz
mov
jne
mov
mov
out
sti
mov
icebp
sbb
jne
dec
negb
xchg
pop
xchg
rcrl
cld
aam
in
cmp
dec
adc
movsl
mov
ret
xchg
out
loop
jbe
nop
adc
cld
inc
int3
xchg
add
inc
lds
sbb
test
stos
fdivrl
mov
and
cmp
pop
sbb
cld
mov
dec
jo
inc
dec
test
sarb
les
jae
int
sti
popa
xchg
in
sbb
dec
mov
mov
rorl
pop
adc
and
mov
shrl
lds
ret
mov
adc
out
push
shrl
mov
mov
fimuls
les
sarl
outsb
ret
and
or
jo
cmp
xor
lods
dec
into
fbstp
pop
lods
pop
cmp
int
and
push
and
les
add
mov
ss
scas
mov
ret
ficoms
fs
in
mov
outsl
or
inc
jle
pop
push
in
mov
push
mov
mov
shlb
pop
lahf
or
and
movsb
sti
lea
or
gs
lcall
in
dec
push
sbb
or
mov
sbb
fadds
push
out
mov
jp
xchg
and
enter
sub
ss
imul
inc
insb
lcall
shr
dec
ret
fisubl
sbb
cmp
mov
cmpsl
xchg
add
jne
push
lret
and
pop
xor
mov
sub
xchg
imul
mov
mov
add
gs
dec
mov
dec
xlat
lahf
xor
sti
add
in
add
mov
adc
pusha
pusha
mov
movb
pop
fcoms
add
rol
mov
arpl
mov
repz
sub
ja
push
pop
inc
cmp
and
cmc
fwait
test
and
pop
jne
push
imul
ds
mov
xor
pop
inc
jbe
xchg
push
jl
push
rcrb
dec
jae
pop
jg
rclb
inc
lds
mov
lods
cs
mov
int3
mov
sbb
pop
jp
cltd
lea
jnp
or
inc
adc
xorb
add
in
mov
mov
sar
dec
fcomps
imull
bound
jle
adc
nop
push
repz
mov
cmp
sbbb
xor
jo
pushf
or
xchg
insl
addr16
sbb
std
scas
pop
das
lds
cmp
sbb
sbb
push
and
loopne
pushf
or
int3
and
xor
ss
cmpsb
push
pop
daa
and
leave
rcl
sbb
dec
mov
lea
sahf
std
cld
dec
adc
mov
xchg
dec
idivl
add
xor
mov
mov
add
push
add
in
test
test
jmp
jg
jl
js
jb
cli
or
inc
jne
add
inc
mov
imul
mov
dec
push
jl
mov
push
lock
int3
out
dec
es
mov
adc
lret
or
push
insl
fdivl
dec
cmp
xchg
mov
outsb
dec
inc
jae
mul
jle
xor
test
push
clc
stos
cld
aam
test
jbe
movsl
aad
xlat
out
xlat
dec
jmp
inc
push
push
imull
dec
movsl
sub
xchg
sbb
sbb
out
and
push
sbbb
push
leave
std
test
cwtl
add
cmpsl
push
stc
sub
push
sbb
ret
mov
popa
lods
or
popa
ljmp
rorl
sub
shlb
out
imul
pop
pop
imul
in
mov
pop
fisubl
call
xchg
mov
jns
lds
inc
and
repz
sbb
in
std
js
loopne
out
xor
or
sbb
adc
jno
stc
insb
mov
sub
insb
or
push
test
jns
mov
in
inc
jmp
out
inc
cwtl
pop
lock
jbe
sbb
loop
jmp
mov
add
pop
and
js
xor
repz
dec
adc
and
push
inc
push
xchg
mov
pop
mov
repnz
es
int
dec
shrb
fisubrs
mov
inc
sub
movsb
xor
push
inc
aam
cmp
sub
push
fdivrl
lahf
push
and
ss
call
fdivrl
iret
or
clc
scas
movsb
sub
jns
dec
sbb
or
lcall
jne
jnp
lret
mov
dec
adc
cli
jb
gs
scas
xor
aad
sahf
adc
xchg
aaa
shlb
sbbl
addl
xorl
outsl
lock
push
aaa
notb
cld
out
pop
shr
jae
int
iret
ljmp
or
fsubr
into
xchg
lods
pop
data16
pusha
lods
lea
dec
and
loopne
or
fidivrl
or
fcmovb
sahf
mov
add
es
test
jne
mov
sbb
test
decl
xor
push
shl
in
fwait
mov
sub
xorb
push
mov
sub
hlt
or
push
fcomps
addb
lahf
mov
jle
loopne
call
jg
lret
jmp
sbb
loop
das
pop
fdivr
add
repz
aam
and
mov
xchg
aas
in
fwait
cld
outsl
push
add
sbb
or
mov
inc
cld
pop
push
int
fidivs
enter
push
lods
pop
sbb
aaa
and
xor
xor
mov
in
mov
stc
or
xchg
fs
push
addr16
sub
jp
out
orl
lret
mov
lcall
js
dec
test
sarl
clc
ja
adc
inc
mov
fnstsw
push
pop
cwtl
mov
test
lea
sub
and
adc
push
pop
or
mov
pop
jno
xchg
pop
nop
fnstcw
dec
xchg
inc
xor
and
mov
and
mov
push
fmuls
outsl
inc
daa
add
mov
cmp
sbb
data16
xchg
inc
dec
dec
rorl
test
inc
or
mov
lret
add
repz
sub
or
fcomip
xchg
xor
iret
cmp
inc
add
sbb
mov
mov
sti
adc
cmp
pop
sbb
or
aad
popa
xchg
jbe
rcr
xor
push
subl
or
and
sbb
test
into
push
and
jp
add
jmp
xlat
push
add
lcall
jle
xchg
add
xchg
clc
pop
insl
outsl
cwtl
mov
or
mov
xor
push
movsb
sub
pop
cs
adc
mov
test
ljmp
movsb
mov
leave
and
lret
jecxz
xlat
std
and
cmpsl
repnz
out
sarb
mov
pop
fs
jle
dec
mov
inc
inc
sar
pop
shlb
sbb
or
inc
push
scas
dec
hlt
xchg
repnz
jo
divb
test
cli
adc
mov
gs
repnz
sar
sahf
pop
mov
out
sub
adc
mov
cltd
decb
movsl
in
aaa
nop
orl
cmp
leave
jae
test
mov
mov
dec
push
outsl
lods
data16
out
add
popa
rclb
adc
dec
loopne
push
addr16
int
sbb
jbe
icebp
fmul
mov
fmull
fsub
push
movsb
sti
movsl
mov
fs
adc
sbb
in
clc
adc
lock
je
aaa
jns
inc
pop
js
mov
int
jo
mov
mov
sub
outsl
and
sbb
jp
shrb
mov
lds
xchg
lods
jmp
dec
fpatan
inc
test
xchg
flds
jge
jns
popf
or
jmp
out
pop
fdiv
xor
xor
cs
mov
add
inc
mov
insb
popf
and
mov
xchg
xchg
xchg
lret
fsts
pop
rcrb
mov
leave
sbb
mov
and
clc
and
insl
and
adc
inc
mov
repnz
add
leave
aas
lods
ret
movsl
ljmp
cwtl
arpl
in
fildl
and
fcomp
mov
nop
sub
ljmp
add
cld
dec
mov
std
std
lret
lret
ja
lahf
push
mov
into
pop
inc
aaa
mov
imul
aam
bound
fdivrs
inc
es
dec
xor
pop
icebp
insb
gs
lea
sub
test
pop
dec
hlt
rorl
pop
mov
push
cmp
movl
testb
sahf
into
fstps
sbb
out
jmp
fistpl
fimull
pusha
fnstenv
xor
inc
xor
adc
xchg
bound
add
xchg
cmpsb
push
or
rorl
push
loopne
mov
dec
aaa
jne
push
push
es
xchg
inc
adc
pop
pusha
rclb
fisttpll
es
out
adc
insl
or
xor
sub
call
jle
dec
lock
sbb
std
leave
or
imul
mov
xor
call
mov
mov
sahf
out
adc
dec
jmp
xor
adc
adc
adc
pop
cmc
push
lahf
in
test
outsb
push
lds
mov
shrd
adc
pusha
andl
pop
dec
jmp
pop
mov
mov
jbe
xor
push
pop
sub
leave
clc
stos
cmp
mov
jmp
jle
xor
sub
dec
xlat
scas
sarl
jbe
addr16
ret
sti
inc
sub
test
mov
call
mov
adc
imul
add
jmp
mov
aas
dec
push
test
repnz
xchg
fdivrs
sbb
ljmp
mov
movsb
mov
push
bound
scas
loop
or
sbb
sub
xchg
not
xlat
add
fstl
inc
aas
out
int
rcrl
add
mov
dec
fiaddl
std
repz
xchg
in
loope
adc
and
pop
inc
sub
and
ret
ja
xor
bound
lods
loopne
test
cmpsl
inc
jno
call
std
daa
loopne
outsl
jne
or
data16
pop
pusha
sub
pushf
sbb
jne
push
fbld
fcmovne
mov
cmp
clc
xchg
scas
sti
inc
pop
dec
in
fcmovnbe
mov
daa
sbb
addb
cmpsl
mov
outsl
pop
pusha
jge
sti
mov
nop
es
in
mov
rorb
sahf
jge
xor
jl
lcall
ss
fcompl
sub
hlt
stos
xchg
les
aam
ret
push
lcall
std
js
test
orl
inc
in
mov
xor
xor
mov
jb
push
xchg
fsts
out
test
mull
inc
push
push
sbb
mov
pop
sbb
shlb
jl
out
outsb
cwtl
repnz
xchg
sbb
ss
jp
lahf
subb
bound
mov
inc
pop
inc
cwtl
mov
jecxz
gs
push
je
push
outsl
xor
push
push
cmp
and
shll
add
mov
dec
lret
or
push
mov
in
mov
movsl
arpl
jg
mov
push
cmpsl
in
push
xor
je
fisubrs
and
aam
pop
inc
stc
or
arpl
fisttpll
push
push
mov
jp
cmp
lcall
jle
mov
shll
or
adc
lretw
jae
push
sahf
jo
add
mov
sub
lock
dec
and
push
cmp
arpl
and
test
outsl
dec
jp
stos
mov
mov
data16
addr16
inc
out
mov
inc
leave
xorl
arpl
push
add
sahf
cltd
test
adc
repz
xor
lock
mov
das
and
bound
add
sti
sahf
enter
vmptrld
mov
lret
push
jbe
push
stos
push
lds
xor
or
sahf
push
sahf
lods
push
fdivs
aas
in
das
cmp
xchg
lahf
pop
pushl
popa
out
movsb
data16
push
ja
in
adc
gs
test
es
cmp
or
test
test
int
mov
arpl
int
dec
xor
lods
jno
pop
rcrb
cmp
bound
mov
movsl
xchg
lods
add
or
int
sbb
outsl
pop
ja
fcmovu
cmp
xchg
inc
jmp
jg
push
pop
push
test
cmpsl
or
sbb
dec
jnp
add
jns
or
aaa
sub
les
in
mov
gs
fcomps
inc
xchg
sahf
and
mov
cmpsl
pop
lds
sub
inc
xchg
jo
sbb
decl
in
pop
arpl
mov
cs
insl
and
mov
pushf
sub
adc
enter
data16
stos
pop
jne
es
jg
leave
lods
cmp
aam
pop
cli
cmpsl
dec
mov
pop
pusha
pop
js
xchg
xchg
jne
xchg
js
sti
xchg
inc
test
mov
ljmp
cmp
jl
mov
push
mov
jns
and
jmp
rol
into
sub
inc
jecxz
xchg
mov
int
idivl
jae
and
imul
ror
ljmp
clc
cld
loope
jns
movsb
fs
inc
test
cmp
mov
dec
mov
fsub
shrl
cmp
insb
test
sbb
or
xchg
cs
jp
outsb
ds
push
xchg
adc
mov
xchg
call
and
rep
xchg
jmp
scas
iret
rorb
push
push
or
sub
mov
push
ss
mov
inc
dec
sbb
cmp
lcall
sbb
add
add
mov
fstp
loopne
inc
shrl
mov
push
xchg
sbb
out
shrl
imul
in
ret
gs
cs
fwait
mov
jnp
and
sbb
cmp
jb
mov
stc
repz
pop
dec
dec
push
or
sbb
jmp
hlt
insb
cmpsb
mov
mov
cmc
and
fidivrs
cmp
fsubrl
out
mov
test
cmp
mov
ror
jg
or
and
ret
sub
adcl
movb
adc
xchg
movsl
pop
pop
jns
shlb
iret
push
mov
lret
int3
mov
test
jns
mov
dec
lods
mov
hlt
push
mov
loop
push
sbb
dec
aaa
outsb
push
mov
sarb
mov
das
adc
sub
mov
jecxz
leave
inc
aas
in
test
push
lahf
mov
in
or
in
cmp
cmp
jns
addl
cs
jl
lods
add
xchg
dec
jo
js
add
in
jmp
lods
lahf
hlt
testl
sti
shll
dec
rol
leave
sbb
adc
jp
inc
enter
aas
inc
push
adc
stc
lret
push
mov
in
fbstp
inc
dec
cmp
cmp
test
mov
pop
pop
pusha
pop
add
or
push
fbld
or
xchg
and
insb
movsb
in
outsb
pop
ret
repz
hlt
pushf
insl
adc
popa
push
or
mov
out
sbb
pop
add
pop
call
sub
cvtps2pd
movsb
push
add
out
mov
ds
cmp
movsb
jl
cmp
jns
xor
sarl
shlb
mov
jmp
mov
pop
push
push
cs
cmpsl
inc
xchg
sti
add
repnz
outsl
pop
pop
sbb
sarb
test
xchg
sti
jge
or
aaa
xchg
repz
lods
cli
lock
scas
ret
mov
test
mov
stos
lods
sbb
cmpsl
push
clc
mov
pop
lcall
pop
cltd
or
scas
pop
test
sub
inc
or
jle
push
iret
pop
mov
adc
cltd
cmp
idivl
mov
stos
jmp
repz
enter
inc
ljmp
and
adc
movsb
push
mov
pop
push
lahf
or
jecxz
daa
jo
add
pushf
cli
call
inc
mov
dec
lods
cwtl
outsb
inc
add
mov
cmp
jae
pop
ffree
add
pop
add
pop
int
stos
mov
mov
sub
pop
mov
push
adc
push
cwtl
shlb
enter
dec
inc
addb
push
std
cmpsl
sbb
and
ss
imul
fs
ret
inc
insl
popa
cmp
aad
lahf
xor
das
sbb
iret
sbb
mov
sbb
mov
data16
imul
das
testl
cs
mov
pushf
jns
out
js
jecxz
xor
mov
test
jecxz
lods
sarb
mov
xor
adc
push
mov
in
adc
mov
adc
xchg
push
stos
mov
stc
jo
and
fisubl
stc
pop
es
xorl
leave
dec
sbb
push
es
test
mov
sbb
or
dec
mov
inc
pop
pop
or
sbb
mov
fdivrp
lods
xor
cs
test
out
pop
pop
in
sub
frstor
das
push
adc
add
cmp
inc
xchg
jmp
adc
bound
pop
scas
pop
cmp
dec
and
xorb
mov
leave
jo
sar
cmp
data16
inc
ror
test
inc
js
test
imul
das
sti
aas
jge
stos
lcall
pusha
aam
test
or
test
stos
pop
mov
dec
mov
pop
sbb
movsb
jg
adc
cmp
test
lret
jno
cmp
or
push
lret
test
pop
adc
mov
rcr
fbstp
mov
pop
pop
cli
push
xlat
cmp
sub
xlat
push
scas
mov
xchg
cmp
sub
test
shll
lret
aaa
out
js
test
addr16
jnp
out
xchg
pusha
stos
push
inc
repnz
mov
pop
jae
mov
adc
sub
notb
sbb
mov
add
lret
cld
mov
mov
cltd
cmpl
js
rcrb
ja
or
mov
cmpsb
je
or
inc
shrl
jo
in
dec
cld
adc
jb
fistpl
adc
jl
push
cmc
and
jl
test
sbb
pop
enter
jp
jae
fcoml
lcall
ja
cmpsb
add
jne
cli
sbb
jae
data16
pop
mov
popa
add
insb
adc
inc
pop
lcall
xchg
sub
test
data16
popf
xlat
or
stos
das
mov
adc
in
popa
nop
mov
fmuls
sbb
scas
and
mov
mov
pop
mov
jno
mov
xchg
pop
inc
and
call
xchg
jnp
mov
xchg
push
cmp
out
jmp
push
test
daa
mov
lock
lea
jmp
pop
push
pop
ja
aam
stc
pop
mov
scas
mov
cli
adc
ret
and
sub
xor
fiaddl
fwait
dec
adc
scas
inc
xchg
jmp
and
orl
loope
sub
insl
mov
fidivrl
push
push
rol
pop
mov
call
into
or
data16
ds
dec
mov
loope
aas
lea
push
cmp
jns
or
ds
push
push
xor
std
nop
mov
rcrb
loope
data16
push
and
jge
xchg
push
sbb
call
mov
pop
jmp
icebp
fs
add
std
mov
adc
xor
add
jl
pusha
cmp
fsubs
xchg
push
inc
sub
idiv
mov
repz
fs
mov
adc
loopne
popf
push
mov
cli
dec
stc
into
ret
out
je
add
mov
lds
data16
ljmp
or
push
inc
inc
loope
push
xor
ds
orb
sahf
vmovshdup
clc
sub
sub
ss
inc
data16
add
cli
nop
mov
mov
push
push
arpl
pop
and
mov
icebp
nop
mov
test
cmc
xchg
jo
cmpsl
in
mov
push
frstor
icebp
cmc
mov
xchg
mov
cwtl
and
enter
sahf
sub
mov
lods
inc
mov
popa
xor
scas
pop
pop
shlb
pop
lock
lods
sub
sub
enter
out
push
imul
test
xor
mov
jl
add
add
mov
add
imul
mov
or
les
pop
sbb
scas
xchg
mov
sub
movsl
sub
inc
sub
outsb
dec
or
icebp
sahf
or
shlb
data16
js
jo
pop
mov
push
nop
test
jp
mov
clc
push
xchg
push
push
es
or
dec
sbb
sar
dec
fcmovnbe
cwtl
mov
sub
cmp
imul
scas
push
mov
push
cmp
addl
mov
int3
shlb
push
test
push
cmpsl
je
jl
jl
lock
adc
inc
cmp
cmp
aad
jmp
ret
shll
iret
add
push
movsl
push
pop
push
cld
test
add
pop
je
int
andl
mov
inc
inc
into
inc
sub
orb
or
adc
push
pop
inc
leave
xchg
mov
and
ja
test
jle
dec
push
mov
pushf
adc
jo
mov
ja
adc
mov
scas
loopne
jbe
push
jecxz
lret
mov
bound
dec
dec
or
mov
inc
adc
mov
inc
rclb
shlb
jne
jmp
aas
xrelease
insl
js
and
out
fstp
ficoms
cld
les
arpl
and
and
mov
fldcw
fwait
sahf
imul
pushf
mov
fcomip
cmp
mov
or
mov
test
or
shr
mov
push
xor
inc
js
loope
sbb
in
xchg
setne
aaa
pop
jmp
xchg
outsl
xchg
push
cmpsb
scas
mov
cmpsl
ljmp
jge
ss
dec
pop
lret
push
imul
adc
fwait
adc
xor
cmpsl
dec
or
out
mov
test
add
mov
hlt
sub
outsb
xchg
add
lret
icebp
cld
loopne
inc
cmp
int
add
lods
mov
jp
mov
sbb
sub
mov
andb
inc
pop
mov
sbb
add
cwtl
push
hlt
mov
and
push
push
addl
das
hlt
in
push
mov
arpl
sbb
dec
aam
adc
lds
cwtl
xchg
add
push
xlat
cmp
pushf
aam
hlt
das
addb
push
cs
lods
xchg
inc
mov
or
loope
jmp
mov
fildl
mov
mov
dec
movsb
scas
xchg
mov
lds
and
xchg
adc
jnp
jne
dec
icebp
lret
repz
jmp
xchg
fdivs
mov
mov
dec
jbe
inc
adc
or
sub
lret
notl
test
loope
xor
dec
dec
adc
dec
jge
popf
fcoms
adc
mov
inc
mov
fsubrs
ret
inc
aaa
mov
add
test
sub
or
sbbb
nop
fstpt
and
ss
insl
enter
cltd
scas
mov
iret
lahf
push
shlb
xchg
shlb
sbbb
dec
js
rcrb
jge
cld
inc
aas
jecxz
call
or
mov
psllw
movsl
pop
add
aad
mov
fildl
sub
push
or
mov
cmpb
sbbb
cmp
mov
mov
das
jmp
sub
push
lret
stc
movsb
adc
out
mov
call
mov
mov
or
xchg
xor
lahf
jg
loop
xchg
fcompl
sahf
hlt
lods
mull
decb
test
lods
push
fimull
sub
mov
adc
ljmp
push
fdivl
adc
cmc
xor
add
mov
mov
lcall
xchg
out
adc
pop
add
aaa
in
jl
sub
stos
inc
jmp
jmp
out
aam
mov
imul
cmc
loopne
negb
xor
cltd
cmpsb
rcl
dec
inc
push
lret
js
in
and
loope
sub
mov
movsl
jg
push
ror
loop,pt
cwtl
ffreep
dec
sti
cmp
iret
loope
lods
orl
push
test
fdivl
push
mov
mov
dec
shl
rolb
shrd
mov
jnp
push
out
mov
scas
and
xchg
jmp
mov
into
jne
jp
mov
mov
fiadds
inc
or
or
cltd
cmp
clc
call
loop
imul
fistpl
pushl
stos
push
or
sub
jae
outsb
cmp
jb
or
dec
jbe
mov
pop
repnz
xor
pop
or
add
shlb
jae
pop
mov
mov
and
push
cltd
mov
sub
mov
movsb
sub
idivb
outsl
cmp
lret
je
pop
jb
cmp
in
ret
inc
addr16
int3
test
xor
mov
notl
push
mov
adc
pop
inc
sub
dec
sbb
lcall
int3
fistpll
mov
adc
pop
and
or
repz
cmp
js
push
mov
ljmp
cmp
dec
mov
mov
adc
int3
flds
mov
lret
mov
push
aas
lea
mov
jg
pop
imul
push
xchg
cmp
scas
mov
mov
jl
xor
addl
inc
scas
pop
jg
mov
repnz
jno
cli
aad
out
orl
fucomip
mov
aas
dec
js
repz
jl
leave
dec
fsubrl
push
rolb
adc
js
lret
in
stc
cmpsl
sbb
mov
xchg
mov
js
leave
mov
outsl
iret
dec
aaa
sbb
es
outsl
in
mov
leave
notl
cli
stos
es
ds
xchg
jno
sahf
dec
fwait
cmp
xor
in
ja
mov
mov
mov
dec
mov
lea
sbb
mov
mov
mov
push
inc
loop
dec
std
outsb
sbb
int3
and
aas
in
cld
or
mov
dec
out
sub
repnz
loope
out
sub
cmc
cmpsb
mov
mov
aad
push
aad
stos
mov
mov
mov
and
fsubr
enter
dec
movsl
scas
pop
and
pop
mov
push
sub
mov
fimuls
iret
fyl2x
jae
mov
scas
lods
sub
dec
jl
jb
dec
lahf
push
jmp
xor
xchg
cli
and
gs
xor
movsb
test
xchg
enter
sub
push
add
add
out
mov
push
fdiv
cwtl
inc
cmpsl
mov
mov
inc
add
or
pop
sbb
xor
sbb
popf
test
lret
or
and
pop
mov
xor
js
arpl
dec
mov
cmp
cmpsb
xor
or
push
sahf
xchg
int
cmp
mov
xchg
mov
leave
call
jmp
pop
lock
mov
imul
xchg
int
leave
mov
test
subb
in
out
ret
call
mov
mov
mov
insl
adc
sbb
arpl
imul
fs
sub
js
bound
out
mov
lods
lds
mov
imul
xor
jge
adc
pop
lods
stc
and
mov
push
loop
sub
clc
jmp
mov
ret
pop
sub
psrlw
push
out
pop
mov
sahf
cltd
aam
sbb
or
mov
push
lret
cmp
hlt
aad
mov
dec
mov
shrb
inc
cmpl
lock
add
imul
push
pusha
sbb
or
jle
imul
pushf
jnp
mov
imul
es
adc
ds
icebp
and
inc
add
aaa
adc
push
dec
es
cmp
inc
lods
stos
das
popa
arpl
call
clc
scas
orl
loop
or
xchg
les
mov
or
repz
and
daa
into
sub
rorb
mov
insb
les
fisubrl
js
mov
xchg
push
fldt
add
ljmp
xchg
xchg
inc
adc
ljmp
hlt
ret
mov
push
mov
pop
lcall
xchg
xchg
adc
shl
sbb
pop
imul
cwtl
adc
xchg
outsl
jnp
mov
fwait
scas
add
sbb
dec
mov
in
and
mov
mov
stc
dec
aas
mov
jg
js
mov
into
mull
xchg
mov
adc
je
adc
fbstp
mov
and
inc
repz
int3
out
sub
daa
mov
inc
or
stos
ja
inc
out
stc
jne
out
fdivrp
push
inc
lahf
dec
mov
incb
jmp
sub
cmpsb
inc
adc
incl
mov
test
faddl
or
push
lret
pop
push
pop
xlat
mov
jmp
mov
jp
js
push
aam
mov
add
dec
cmp
xchg
push
mov
xchg
and
sbb
std
lcall
add
adc
inc
mov
lods
sub
iret
mov
call
pop
push
test
ds
aad
jae
add
dec
negb
mov
mov
xchg
cwtl
ds
popf
movsb
mov
mov
dec
adc
jnp
jns
out
pop
sbb
jae
mov
clc
cltd
icebp
vmovq
lret
lods
std
mov
xor
dec
jno
jge
lods
data16
jnp
pop
jmp
sarl
and
lods
sub
cmp
stos
xchg
sbb
imul
cmpsl
dec
out
cmp
push
std
mov
stos
sub
stos
popf
mov
jmp
mov
pop
ret
ds
aam
inc
or
push
adc
fisubrs
push
pusha
data16
js
and
mov
inc
pop
mov
push
pop
sub
outsb
or
dec
fld
js
xchg
popa
and
mov
nop
mov
push
jge
mov
dec
aas
shr
push
adc
mov
aas
sbb
aam
mov
mov
bound
xor
xor
push
jno
add
push
inc
xchg
fldenv
mov
in
dec
outsl
dec
dec
mov
divb
jl
leave
sar
push
and
pop
cmpsl
dec
mov
cmp
mov
xchg
mov
dec
adc
ljmp
xchg
push
es
and
dec
and
dec
test
pushf
jmp
xor
movl
scas
rcrl
mov
bound
pushf
call
ja
push
cmp
daa
xor
ljmp
push
pop
inc
xchg
dec
aad
and
.byte
mov
aas
.byte
xchg
pop
dec
xchg
xorb
loop
jmp
call
jmp
xchg
pop
xchg
ret
xor
das
xchg
and
xchg
mov
push
xor
movsl
nop
xor
loope
jno
or
mov
mov
mov
mov
jnp
dec
loope
lock
jnp
mov
dec
punpcklbw
sbb
and
pop
push
cld
stos
lock
addr16
xchg
les
call
jp
mov
inc
rclb
test
mov
cmpsl
lods
or
inc
out
aam
cmp
test
add
loopne
mov
rorb
inc
nop
dec
sub
cmp
hlt
inc
fucomp
ljmp
adc
cmp
repz
lcall
int3
pusha
ss
dec
mov
les
pop
pushf
int3
cmp
arpl
lods
add
dec
lahf
jbe
xorb
movl
xor
outsb
fmuls
adc
loop
push
xlat
int3
incl
out
jl
mov
mov
aam
test
subb
dec
mov
push
jae
in
jle
or
sub
sti
jne
pushf
lods
and
out
sahf
adc
sahf
loop
or
xor
cwtl
adc
lahf
mov
and
push
jnp
cltd
repnz
jb
xor
mov
xor
dec
push
dec
jb
mov
mov
sub
pop
popa
pusha
dec
sub
cld
or
and
inc
cwtl
int3
cmp
mov
js
mov
push
cld
inc
ljmp
jne
ret
ja
and
adc
movsb
sub
cmpsl
add
push
loop
cli
xlat
xorb
popf
dec
jl
mov
insl
mov
or
out
std
fists
test
push
mov
jle
repnz
shl
loop
dec
iret
inc
xor
loop
inc
cmc
adc
jnp
sbb
out
mov
sbb
cmp
mov
xchg
cmp
pop
int
sub
scas
lds
pop
lods
out
mov
add
es
push
jge
inc
pop
out
xor
xor
mov
pop
adc
dec
push
xor
insb
pop
incl
fldl
inc
fldenv
arpl
lea
xchg
jbe
out
aas
xchg
jmp
subl
mov
adc
xchg
out
scas
push
in
mov
repnz
push
xchg
jb
cmp
mov
cmp
std
daa
and
aas
xchg
stos
out
add
adc
add
push
leave
movsb
or
imul
into
lahf
mov
sub
cmp
mov
xchg
push
adc
jmp
sbb
xchg
sarl
repnz
cmp
pop
push
xchg
jle
ret
addb
nop
pop
decl
dec
into
or
jp
shll
pop
ja
lock
loopne
scas
xchg
xchg
push
mov
mov
jecxz
xchg
push
out
mov
lahf
cmp
mov
inc
jnp
imul
rcrb
jge
jg
das
lods
mov
sbb
outsl
orb
mov
jnp
insb
mov
sbb
out
fdivr
mov
add
call
in
sbb
inc
mov
stos
mov
dec
jl
jge
inc
cmp
cmp
add
cmp
cli
pusha
xchg
stos
pop
xorb
gs
push
dec
dec
mov
das
mov
loope
adc
fistpl
push
sub
mov
in
inc
xor
jle
adc
outsl
fistl
sbb
repnz
scas
in
outsl
xor
enter
les
iret
test
sub
stos
adc
mov
je
adc
ret
sub
xor
xchg
imul
add
adc
push
movsl
push
mov
ljmp
dec
mov
sub
mov
into
das
sbb
dec
cmpsb
imul
pop
popa
mov
outsl
fs
into
incl
out
repz
repz
idivb
jno
pop
scas
fsts
pop
sub
cmpsl
stos
dec
daa
cld
mov
mov
aam
jns
cmp
xchg
ljmp
push
mov
jae
bnd
cwtl
sbb
or
jmp
inc
and
dec
cmpsl
ljmp
push
pop
xor
aaa
fadd
mov
lods
and
cwtl
push
add
push
out
js
sbb
push
push
shl
imul
in
rorb
adcl
hlt
fs
pop
pop
daa
pop
repz
push
mov
fsubrl
aas
cmpsb
hlt
mov
jg
ret
pop
pop
negb
repz
mov
mov
loopne
mov
xor
repnz
bound
test
xor
mov
xchg
dec
popf
pushf
movsl
test
outsl
mov
fwait
pop
lods
cmpsb
xchg
xchg
ss
sbb
sub
xor
pusha
xchg
ret
pop
push
scas
outsl
mov
les
sbb
mov
push
or
lahf
out
push
push
pusha
mov
xor
call
pusha
xchg
or
das
mov
pop
dec
mov
cltd
sbb
xor
int
pusha
sbb
daa
icebp
add
lock
scas
dec
fstpt
rcll
js
inc
and
das
inc
push
pop
lahf
iret
loope
cmp
nop
lds
out
test
adc
xchg
test
jg
out
mov
outsl
call
adc
negl
js
in
cld
insl
inc
mov
sbb
mov
call
jp
fwait
mov
mov
push
mov
push
pop
imul
or
ret
inc
fs
pop
pcmpeqd
in
xchg
nop
lods
push
andb
inc
cmpsl
xor
push
lock
enter
fwait
or
in
andl
mov
rol
jmp
or
add
cli
jb
mov
pop
mov
fs
mov
call
imul
or
sbb
pusha
insb
outsb
inc
jmp
mov
dec
test
sbb
or
mov
dec
pop
fcmovbe
popl
out
push
stos
in
inc
and
iret
loopne
push
sub
push
push
inc
fsubr
adc
bound
push
pop
xchg
or
shll
mov
xchg
jns
jmp
es
out
jns
mov
or
xor
inc
cmpl
ds
xchg
idivl
lret
cltd
into
push
test
mov
push
mov
stos
xchg
jmp
mov
pop
dec
inc
xchg
sbb
mov
xlat
shlb
push
push
les
and
outsb
mov
push
xchg
in
mov
fs
frstor
aad
pop
adc
jbe
xchg
in
neg
adc
pop
sbb
push
scas
flds
pop
pop
pop
notb
adc
call
or
mov
mov
sbb
or
lea
movsb
insl
stc
pop
pop
adc
fs
push
lea
sub
ja
in
jne
xchg
xchg
daa
push
test
test
mov
xlat
adc
mov
pop
pavgw
lcall
cmp
cwtl
daa
inc
xorl
sbb
cmp
and
add
clc
cmp
sbb
push
stos
insl
cmp
test
pop
iret
xchg
inc
cld
sub
adc
pop
sbb
out
icebp
nop
mov
xor
sub
xchg
or
pushf
pop
jecxz
pop
jl
add
xor
repz
inc
push
sub
test
push
sub
out
cmpb
iret
movsb
push
adc
test
cmpl
mov
inc
jbe
shll
in
jg
call
rcrl
push
lds
insb
testb
pop
fdivs
xor
movsb
adc
jnp
mov
dec
cmpsl
movsl
mov
sarl
or
jnp
cmc
and
adc
mov
rcll
cmpsl
aad
outsb
lahf
rcrb
mov
lea
imul
int
repnz
sahf
mov
add
jne
clc
xor
xchg
mov
inc
lods
push
fcomip
and
stos
push
cmp
ds
xor
sub
rolb
dec
lds
xlat
and
imul
xor
outsb
adc
test
ror
into
jno
pop
pop
arpl
mov
xor
test
push
xor
psubb
push
adc
movsb
aad
call
cli
lods
fsubr
scas
test
or
and
pushf
mov
pop
xchg
inc
push
enter
leave
test
pop
jno
in
roll
push
movsl
rep
and
loope
scas
jb
inc
push
dec
push
push
cmpsl
movaps
stos
lcall
aas
sbb
mov
int3
inc
mov
xorl
cld
xchg
enter
mov
rorl
lcall
outsb
fsts
in
cmp
mov
outsl
gs
out
mov
pop
cmp
jae
arpl
data16
sub
dec
mov
adc
pop
inc
jbe
mov
pop
push
mov
sub
pop
add
ret
jmp
cmp
movsl
data16
pop
mov
out
push
push
and
xchg
mov
mov
loop
adc
jecxz
shrl
inc
ja
and
lods
xor
dec
insl
hlt
sub
or
pop
fcmovnbe
leave
in
xlat
cs
push
idivl
das
stc
sub
push
mov
mov
or
stc
enter
pushf
sbb
mov
pop
push
fldcw
sarb
lahf
mov
pop
dec
fnstenv
or
mov
stos
push
bnd
cmc
lods
xchg
xchg
xchg
orl
stos
imul
add
out
sub
into
ficoml
xor
pushl
xor
xor
mov
mov
xchg
scas
fdivr
mov
adc
push
lods
cmp
mov
aas
in
shll
jge
movsb
push
mov
add
outsb
clc
cmp
arpl
jmp
popa
inc
and
push
jb,pt
pop
sub
lock
adc
imul
movsl
shl
jl
repz
push
sub
lret
add
adc
cmp
and
stc
mov
inc
mov
jmp
push
addb
aad
lds
int
aas
movsl
push
repnz
and
push
or
or
or
fs
lock
push
sub
push
push
pop
mov
inc
sbb
sarl
xchg
jb
add
xor
je
adc
cmpsb
aam
lods
xchg
lret
mov
inc
iret
call
mov
push
adc
shl
lahf
push
mov
outsl
mov
push
sub
push
mov
sub
jno
les
lahf
shrb
and
sti
test
outsl
and
in
inc
je
add
decl
xchg
nop
scas
jl
add
jl
add
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
insb
jns
jb
jo
and
and
arpl
and
xor
xor
xor
xor
popa
bound
data16
popa
jb
add
inc
add
inc
