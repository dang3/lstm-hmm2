push
insl
add
rcl
ret
sbb
mov
cmp
adc
cwtl
lds
sbb
repnz
or
arpl
and
adc
loope
icebp
lods
push
pusha
insb
xchg
adc
lock
hlt
xlat
fisttpl
mov
jp
push
lret
mov
xor
int
das
inc
cmpsb
adcb
test
clc
sbb
inc
push
dec
and
sbb
mov
out
out
rcl
cmp
xor
dec
dec
mov
sbbb
daa
test
add
push
fdivp
jo
lret
and
dec
test
jb
xorl
fisubrs
pop
xlat
lcall
mov
ror
sub
and
mov
bound
js
mov
test
push
adc
mov
sarl
daa
addl
fsub
sbb
arpl
fwait
cmp
inc
inc
not
imul
push
insb
mov
sbb
lds
sub
mov
jns
inc
stos
out
nop
fmuls
orb
sti
in
xchg
xor
shrl
push
push
mov
add
mov
xchg
stos
loopne
add
mov
add
lret
xor
cs
aas
or
in
jle
aad
fisubrl
add
mov
nop
lea
clc
cmp
int
jae
lods
adc
rcll
loopne
scas
push
sub
mov
pusha
rcl
cmpsb
mov
jae
popf
inc
add
movsb
mulb
adc
mov
or
lds
or
xor
or
mov
push
loop
in
mov
inc
adc
jo
adc
push
aad
cltd
fucompp
inc
imul
out
xchg
xchg
stos
pusha
pop
inc
emms
gs
loopne
jecxz
sahf
jmp
dec
mov
mov
sub
add
mov
fcoms
inc
sub
int3
int
or
rcr
loopne
cmc
add
push
jecxz
dec
or
mov
cmp
movsl
xchg
add
icebp
mov
call
xchg
sub
movsb
push
aaa
stc
and
push
roll
pushf
sbb
bound
jecxz
add
pop
mov
mov
out
sbb
outsb
xorb
in
mov
add
or
sbb
mov
adc
leave
xor
xchg
scas
aaa
fwait
rcl
fucomp
adc
mov
ret
add
adc
test
jns
scas
add
fldt
repnz
push
xchg
add
out
stc
push
inc
jne
or
xchg
add
sahf
push
fs
cwtl
imul
subl
adc
icebp
mov
sub
sbb
test
arpl
icebp
pusha
decb
lcall
into
adc
adc
push
stos
pusha
mov
sbb
sbb
in
ss
aad
add
int
jp
into
sub
fs
mull
sar
int3
testl
rclb
in
loopne
push
add
xor
sahf
stos
cmp
call
xor
imul
imul
dec
jp
push
mov
int
inc
xor
bound
fnstenv
mov
lcall
cltd
sbb
popa
push
jb
xorl
mov
adc
mov
aam
hlt
cmp
int3
adc
in
lret
add
out
sbb
cmc
or
movsl
dec
cmp
sbb
repnz
push
pusha
ljmp
std
pop
lea
fdivp
gs
pmaxub
sbb
push
sub
popl
or
jnp
cltd
jb
mov
mov
xchg
push
jne
sub
insb
adc
jne
test
cwtl
sti
jbe
push
fisttpll
dec
out
pop
cltd
add
aas
inc
inc
pushl
out
inc
sbb
xor
adc
std
shll
imul
push
test
sub
aaa
shl
inc
xlat
push
insb
mov
enter
stc
in
dec
in
inc
loop
pop
sub
enter
ret
add
gs
sub
fbstp
nop
ret
fs
jb
push
mov
or
lcall
or
ljmp
xchg
popa
ret
add
push
xor
fidivl
add
bound
jl
loop
push
leave
jmp
mov
push
sbb
enter
test
mov
fwait
popa
pushf
add
jns
insl
pop
repnz
and
or
clc
out
pop
ja
aam
add
and
pushf
in
and
adc
cltd
lcall
add
insl
out
clc
hlt
lods
rorl
mov
sbb
andl
rcl
loop
add
movsl
stos
or
and
fadds
lods
arpl
dec
cld
lret
mov
stos
nop
cmc
outsl
rorl
psrld
out
test
xchg
orl
push
mov
test
add
sbb
sbb
fildll
stc
imul
cmpb
dec
push
enter
movb
mov
add
xor
xchg
pop
pop
mov
dec
mov
adc
ljmp
inc
push
jae
ds
push
add
fcompl
shl
repnz
xor
jb
xor
inc
push
js
push
div
into
inc
mov
fbstp
xor
enter
add
lahf
or
inc
imul
outsl
pop
adc
popa
inc
out
xor
pop
jb
xchg
std
lret
rorb
lret
mov
mov
add
repnz
mov
xor
les
mov
adc
ja
jmpw
add
lahf
xchg
xchg
into
push
sar
cmp
mov
fisubs
aam
xor
testl
cmpsl
negl
cmpsb
in
lods
mov
fmull
nop
inc
sub
add
in
roll
pop
pop
sbb
nop
shll
adc
andl
cwtl
mov
jne
jp
jmp
inc
fdivl
and
xchg
fisttps
mov
ficoml
ss
pop
out
hlt
push
mov
test
adc
sbb
dec
mov
fbstp
arpl
outsl
mov
out
sbbl
xchg
adc
es
mov
adc
pop
jge
or
sahf
sub
in
xor
lea
cltd
cmp
icebp
push
sub
fstl
test
cmp
inc
fsub
pop
push
mov
xlat
repz
fcompl
cmc
lret
pop
inc
in
dec
push
mov
cld
inc
cmpl
xchg
mov
rcrl
sub
shrl
cs
add
gs
add
add
jb
fmull
bound
cltd
and
mul
mov
dec
sarb
add
mov
dec
aad
cmp
sbb
fmul
enter
jmp
xchg
dec
ss
lds
les
xor
es
adc
fs
ljmp
sub
rclb
outsl
icebp
cmpsb
lcall
rclb
sbbb
fisubl
aam
push
or
mov
or
sub
xor
cld
aam
shl
push
lods
cld
fstps
add
leave
xor
xchg
mov
aaa
imul
xor
or
cmpl
pop
mov
sbb
xchg
ljmp
lods
cmp
fiaddl
stos
push
mov
repnz
sub
mov
xor
scas
mov
shl
dec
test
xchg
mov
mov
xor
sbb
adc
or
mov
shlb
jmp
sbb
xor
jge
adc
jmp
mov
icebp
fstp
sub
movsb
in
rcll
jl
clc
loopne
and
mov
test
adc
push
xchg
push
add
dec
xlat
dec
push
inc
sahf
popa
arpl
push
stos
push
ficompl
adc
in
pop
lret
addb
push
xor
leave
lea
jbe
popa
xlat
lock
jbe
push
xchg
je
sub
inc
inc
or
shr
sub
and
and
adc
pop
push
int
add
aaa
movb
iret
xchg
sti
mov
cmp
and
or
loope,pn
mov
sub
adc
jecxz
xchg
lahf
push
stos
pop
xchg
push
xor
andl
dec
sti
sti
mov
lock
sbb
push
dec
lds
adc
repz
int3
test
mov
call
jb
push
adc
jnp
aad
in
in
inc
mov
aam
test
in
loop
out
int
cld
inc
arpl
lea
lods
dec
mov
xlat
fs
xchg
pusha
dec
sahf
cli
pop
push
gs
scas
outsl
inc
push
adcb
std
add
daa
rolb
cmp
jmp
jb
outsl
mov
shl
add
sti
push
hlt
pop
push
xor
cmp
out
daa
or
cli
mov
jmp
sahf
stos
loop
jecxz
aaa
jae
repz
xor
add
ds
les
cwtl
or
sahf
cmp
push
int3
push
cmp
data16
mov
popa
sbb
push
jge
test
int3
pusha
lea
inc
sub
sub
sbb
lsl
xchg
or
fmull
add
pop
lcall
mov
js
mov
repnz
sub
mov
or
lret
push
loopne
xchg
or
sarl
stos
adc
icebp
std
or
xchg
sbb
push
ret
pop
arpl
shrb
lds
call
pop
enter
es
xor
lahf
into
cli
rcrl
adc
inc
sti
subl
out
sbb
mov
jns
push
xchg
dec
subb
in
mov
xor
add
mov
cmpsl
aas
aas
call
lea
aas
push
mov
fsubs
arpl
xchg
testb
cmpsb
out
xchg
sbb
adc
cmp
cmp
jo
xor
push
popf
lods
mov
fs
imul
add
sub
lcall
push
fnstsw
cmp
dec
fwait
dec
push
mov
pop
rclb
or
fistpl
lcall
and
xchg
push
add
lods
addl
or
jmp
nop
or
in
and
scas
push
out
ficoml
ret
lea
lds
or
inc
pop
xlat
lcall
out
add
lahf
mov
shl
xor
in
sbb
add
popw
mov
sub
outsb
cltd
xchg
jb
and
rolb
int
inc
pop
adc
push
ror
test
out
jne
or
sbb
sbb
sub
movsl
xchg
mov
sub
push
sub
mov
pusha
mov
lret
push
dec
and
jae
ljmp
jb
imul
or
stos
out
mov
push
in
mov
mov
fadd
imul
cwtl
pop
js
lds
stos
and
mov
add
lds
and
cltd
mov
sub
mov
cs
ret
sbb
and
aad
xor
cmp
push
addr16
dec
add
mov
ret
xchg
cmp
add
cld
test
inc
movsl
fcoml
loop
push
adc
pushf
clc
bound
add
xchg
loopne
pop
push
sti
stc
aas
ret
adc
in
je
inc
xor
inc
dec
lret
in
dec
mov
push
aam
pop
push
inc
lret
push
add
lock
and
clc
out
rorb
aam
add
mov
ret
fdiv
pusha
adc
dec
in
mov
shll
add
test
mov
xor
cmp
pushf
dec
shlb
cmp
xchg
dec
aam
fwait
pop
xor
enter
in
sub
mov
popa
insb
fcoml
out
bound
cmpsl
outsl
jbe
repz
add
mov
sub
cld
in
and
gs
jns
sub
inc
sbb
jne
sub
sub
mov
or
mov
mov
test
xor
les
jae
out
mov
cltd
test
cmpb
add
dec
fisttpll
xor
jge
loopne
call
push
lret
mov
scas
sub
les
in
xor
jno
cmc
daa
xor
add
fstl
xchg
sbb
add
out
push
lods
xor
aad
mov
mov
sub
sbb
push
push
add
test
jecxz
mov
or
mov
mov
bswap
adc
adc
or
mov
fwait
jg
ret
out
cmp
xor
mov
jno
xor
pushf
into
bnd
inc
pause
ds
cltd
dec
sahf
inc
adc
mov
inc
add
xor
mov
sbb
mov
fiaddl
lods
repnz
cltd
adc
scas
nop
psrad
je
mov
stos
push
mov
jb
or
test
inc
pop
addr16
incl
cmp
lods
lcall
sbb
sub
add
inc
or
sahf
movsb
xchg
inc
xlat
xchg
add
or
das
push
lods
adc
mov
sbb
push
xlat
or
mov
push
stos
xor
mov
sbb
inc
dec
jecxz
xor
fdivrs
pop
movsb
fbld
adc
or
test
sub
test
sbb
pop
je
lods
dec
cmp
cmp
int
icebp
insl
push
rcll
and
ds
jo
or
shlb
dec
push
or
adc
sbb
movsb
movsb
add
cld
pop
lret
aas
mov
inc
lods
mov
mov
adc
js
adc
mov
les
shrb
xor
mov
add
rol
scas
xchg
mov
cmc
cs
lret
int
cs
inc
lcall
in
ret
add
xchg
add
add
push
mov
sub
and
fs
add
cmp
fiaddl
ficoms
and
cs
and
loope
dec
xor
xor
dec
in
leave
lds
hlt
ljmp
mov
sbb
popa
mov
or
and
movsb
rorl
pop
push
push
add
imul
fcmovb
enter
test
mov
adc
or
sub
in
lret
add
rorb
test
xchg
add
or
mov
fisubrl
push
push
sbb
jmp
pop
mov
sbb
mov
popf
repnz
adc
mov
sbb
add
in
add
lret
popl
sbb
arpl
shlb
xlat
cwtl
add
pop
fnstcw
dec
aad
sub
in
jge
in
and
push
xchg
fldl
adc
stos
es
lret
inc
xor
fucomi
lret
add
ss
sbb
sbb
scas
aam
mov
push
cs
inc
add
inc
push
push
xlat
pop
mov
mov
add
sub
push
in
fcmovnbe
sub
shr
and
outsl
cs
fwait
bound
int3
push
shrb
add
stc
enter
int
mov
inc
dec
dec
sbb
dec
pushf
add
sub
or
je
jmp
xor
push
push
adc
xchg
xchg
lods
das
inc
bound
sub
push
adc
and
push
add
mov
and
push
inc
addl
lahf
loopne
psrad
sbb
insb
rol
iret
movsl
add
scas
pushf
or
dec
call
push
mov
mov
cltd
add
sbb
mov
cwtl
out
dec
cmp
cli
in
mov
push
mov
in
test
and
xor
xor
adc
loopne
xlat
loop
cwtl
cmp
xchg
ss
gs
aam
popf
xchg
xor
dec
dec
sarb
popa
add
mov
std
push
sbb
lea
or
les
dec
inc
xchg
cmpsl
add
add
stos
jle
fidivrl
lods
ficoml
and
adc
xchg
and
dec
loop
in
cmc
movsl
cwtl
arpl
mov
lds
adc
xchg
movsb
lahf
lret
add
inc
push
xor
sbb
popa
sbb
and
loop
subb
aaa
add
pop
push
popf
out
inc
and
push
arpl
mov
push
daa
loope
lds
sbb
psrad
sbb
dec
push
rcr
iret
fldl
aad
mov
mov
xor
push
loop
mov
mov
xchg
xlat
dec
or
or
and
fldenv
sahf
xor
cltd
pop
xorb
and
push
add
xor
pop
lret
mov
adc
push
lret
cmp
adc
pop
xchg
xlat
mov
mov
insb
in
cmc
jne
outsb
dec
loopne
lcall
push
aam
add
xor
outsb
sbb
pop
cmp
pop
movsb
xchg
outsl
push
stc
or
les
mov
daa
cmp
ljmp
jae
enter
andl
movsl
and
inc
ss
lods
dec
cmp
sti
xor
xchg
sahf
mov
mov
mov
jb
loope
in
test
pop
mov
mov
xchg
push
and
pop
movsl
add
fsubp
add
push
nop
int
inc
hlt
push
adc
stos
jge
mov
loopne
ds
shrb
cmp
cmp
lods
adc
jg
add
stc
scas
mov
fchs
outsb
adc
in
xlat
inc
mov
ljmp
xlat
repnz
sub
in
lods
xor
pop
test
xchg
rcrl
xor
lret
and
out
data16
dec
push
repnz
pop
lret
loop,pt
cltd
xorl
lret
mov
dec
in
xchg
xor
dec
xlat
rcll
mov
aad
sbb
les
out
mov
aam
add
pushf
dec
cmpsb
add
test
xor
std
push
ja
out
sbb
xchg
inc
stos
and
add
adcb
push
adc
out
and
mov
and
adc
aam
out
loope
mov
in
cmpsb
insl
or
in
je
adc
sbb
out
push
lock
mov
js
sub
fiadds
inc
test
sub
cwtl
fwait
repnz
stos
xchg
pop
adc
fnsave
mov
cmp
mov
stos
xchg
push
out
and
sti
jl
inc
or
add
mov
inc
and
push
pop
lods
and
std
mov
scas
adcb
adcb
lock
xor
test
sbb
in
lcall
pusha
js
lahf
dec
pushf
mov
cltd
leave
mov
jno
add
addb
sub
xchg
hlt
inc
adc
add
jno
cli
or
test
xchg
popl
xchg
testb
xchg
mov
in
mov
imul
mov
pusha
add
movl
xchg
pushf
mov
insl
inc
push
cmc
jp
or
jmp
sub
ret
jne
push
cmp
pop
push
cmpsb
loopne
nop
call
ret
sub
cmp
sti
push
movsb
pushw
shl
dec
sbb
adc
sub
dec
aas
add
inc
fsubrl
ficoms
cmpsl
sbb
jb
addr16
jp
mov
inc
or
or
hlt
lods
mov
in
repz
adc
bound
or
or
cmp
fdivs
lods
and
das
les
cmp
sub
data16
pop
push
int
dec
aas
dec
adc
outsl
xor
push
jae
sbb
fwait
jno
jle
adc
ljmp
jp
push
cmp
sub
adc
nop
cld
repnz
mov
test
mov
jne
push
leave
in
sub
sbb
sub
push
lds
mov
dec
cwtl
cmpsb
mov
iret
mov
cmpsb
pop
fsubl
not
add
sbb
mov
inc
test
xchg
add
dec
aam
loopne
arpl
sub
dec
in
bound
sub
cmc
xor
enter
bound
add
cltd
mov
ret
sub
sbb
xchg
push
push
lret
add
mov
xchg
movb
outsl
xchg
cwtl
int
sbb
fldenv
rcrl
addl
and
add
cwtl
xlat
adc
and
adc
inc
jnp
hlt
xor
iret
cmp
cmc
dec
int
out
xchg
jl
lods
push
loop,pn
sub
scas
push
iret
cld
push
fcmove
cld
cld
cmp
and
cmp
incb
or
and
add
int3
cmp
inc
sbb
mov
xchg
leave
add
into
mov
push
adcl
test
jno
lret
lahf
mov
into
movsb
lret
sub
jp
mov
sarb
shlb
and
add
xor
fxtract
lret
mov
mov
out
xor
stos
cmp
mov
jp
push
inc
pop
and
push
pop
rcrb
cmp
movsl
pop
icebp
add
repnz
fmul
shl
jp
xchg
add
inc
dec
add
pop
imul
test
mov
mov
lret
push
aad
and
and
jp
aam
test
jmp
cwtl
pop
xor
test
add
inc
add
push
fsubrs
arpl
mov
add
xchg
js
repnz
pop
dec
rcl
add
push
mov
dec
mov
popf
nop
mov
mov
test
push
int
loope
loope
cmp
mov
add
mov
pop
mov
dec
fstps
lahf
fldcw
shll
fucomi
mov
lcall
daa
lahf
adc
ret
jge
mov
add
in
adc
shrb
pop
data16
jp
xchg
shll
xor
adc
adc
cs
push
bound
adc
loope
push
push
xchg
push
aas
cmc
mov
xchg
cmp
test
mov
pushf
xor
jecxz
repz
std
je
xchg
fsub
cmp
lods
push
xor
lea
repnz
out
loope
cmp
int
mov
pop
daa
aas
arpl
xlat
add
test
dec
loop
jne
and
mov
inc
mov
xchg
lods
inc
in
int
or
jp
push
pop
mov
sarl
sub
mov
dec
dec
test
jmp
pop
int
add
inc
inc
add
mov
or
pop
out
pop
adc
cld
loop
pop
jne
jbe
xor
mov
jne
cmpsb
lcall
adcl
fcmovb
mov
sbb
lock
add
push
std
jl
aam
add
sbbl
xchg
lahf
fs
ret
jb
repz
aas
out
add
aam
das
sbb
push
not
push
stos
aas
pop
jns
push
stos
inc
mov
in
push
and
je
pop
leave
jne
hlt
aaa
in
and
sbb
sbb
hlt
push
loopne
xchg
inc
jl
hlt
sbb
fnsave
negb
and
in
adcb
jno
xchg
jo
outsb
pop
xor
popa
inc
add
fsubrs
inc
mov
shll
push
inc
ret
mov
xchg
outsb
jns
insb
push
stos
xor
add
pop
fisubl
adcb
inc
xchg
sub
sub
leave
add
dec
sti
mov
out
jp,pt
sbb
enter
dec
into
push
xor
pushf
int
xchg
mov
sub
ret
push
sbb
out
aaa
push
testl
cs
dec
ljmp
outsb
add
inc
dec
jnp
inc
inc
push
icebp
je
jl
aad
pop
lods
sbb
lret
jge,pt
movsl
mov
lods
andl
lahf
mov
jns
jne
xchg
rorl
cmpsl
inc
int
rcrl
loopne
aas
sub
mov
dec
int
cltd
fidivs
test
and
mov
lods
and
repz
dec
adc
aam
push
mov
outsl
leave
cmpsl
push
or
sbb
xchg
hlt
and
in
xor
data16
enter
je
and
add
dec
rorl
xor
in
pop
sbb
xor
mov
in
add
sub
xor
add
movsl
add
pop
fdivrl
adc
pop
aad
or
or
lds
add
arpl
insb
insb
and
xchg
xchg
outsb
pop
loop
leave
faddl
sub
push
xlat
outsb
aad
add
mov
int
rcll
pop
aas
insl
push
cmp
mov
xchg
add
adc
sti
pop
add
cwtl
jae
adc
xor
jno
and
ljmp
cli
mov
gs
mov
xchg
mov
sub
shlb
nop
xchg
or
imul
repnz
dec
ljmp
sahf
adc
subl
mov
sbb
fimuls
sti
shrb
xor
cli
push
ficompl
mov
fwait
push
aam
loopne
sbb
shl
jb
inc
and
push
push
mov
shr
dec
pop
sbb
jecxz
test
xor
int
rolb
xchg
loope
ss
inc
int
jmp
pop
das
inc
ja
rcll
rclb
call
mov
shrb
sub
inc
mov
ror
pop
out
jbe
rcl
stos
sahf
fcomps
adc
inc
sub
sub
jno
cmc
add
and
pusha
rcrl
test
outsb
gs
loop
icebp
xchg
popa
mov
cmpsb
push
adc
gs
inc
or
cld
adc
cmpsb
sub
and
sub
stc
pop
pop
jne
pop
repz
cmp
mov
imul
sbbb
or
loopne
mov
mov
fwait
nop
sub
lds
sub
stos
cmp
and
mov
mov
jae
and
in
mov
das
lcall
inc
int3
ficomps
es
mov
cwtl
or
shlb
fisttpll
cli
aas
sub
les
and
orb
lods
add
loopne
add
mov
decl
and
mov
or
gs
arpl
cmp
scas
fdivl
je
inc
ss
out
aam
jl
rorl
push
ds
std
rol
notb
sahf
cmp
cli
jo
mov
push
or
loope
xor
xlat
add
lahf
repnz
or
jbe
pop
push
inc
shll
add
scas
lret
lret
push
notl
mov
cmp
sbb
cmp
or
jecxz
jp
sub
cmp
ret
gs
jp
dec
pop
and
sahf
ljmp
lods
or
lea
sti
or
cmpsb
test
sbb
pop
adc
mov
lods
xor
lahf
test
ljmp
movsl
mov
add
xchg
jl
push
or
mov
cmpsl
fwait
cmp
call
add
mov
mov
data16
not
imul
das
push
adc
jg
fsubr
xchg
inc
adcl
les
cmp
or
enter
lahf
xchg
out
stos
stos
stc
pop
add
jg
je
in
out
mov
ja
add
sbb
push
add
test
inc
daa
sub
mov
xchg
fcoms
lds
and
inc
add
test
xlat
jle
loope
mov
aad
cld
cmc
adc
leave
mov
aaa
testl
nop
pop
push
or
sti
pop
xchg
add
lret
add
jmp
mov
add
add
pop
rcr
sahf
mov
rcll
jmp
pop
fcoml
dec
les
mov
stos
and
xchg
pop
cmp
lds
cmp
sbb
mov
sahf
in
mov
jno
push
inc
shl
shll
nop
daa
push
mov
mov
dec
sbb
outsl
repz
mov
or
or
fildl
or
inc
int3
cwtl
movsb
lret
xor
scas
repnz
loop
rorl
movsb
addr16
mov
xor
add
cwtl
xchg
push
and
pushf
loop
sbb
mov
lods
aam
or
repnz
testb
movl
mov
stc
and
xor
mov
in
pop
jmp
pop
lds
pop
pop
xor
add
lcall
rcll
sbb
xchg
scas
adc
add
pusha
shr
clc
pop
mov
call
jecxz
add
dec
and
rol
ficompl
test
mov
mov
std
out
sbb
cmp
push
divl
outsl
loopne
lret
jo
jmp
daa
mov
inc
sbb
out
xchg
mov
xchg
xor
add
xchg
movsb
lret
rcrb
test
flds
xchg
sarl
loopne
push
mov
sarb
popa
pop
xabort
fcoml
adc
xor
movsl
movsb
hlt
xchg
sub
loop
movsl
or
in
aam
call
mov
es
jl
iret
or
cmc
push
jae
addl
cmc
xlat
fidivrl
lret
out
xlat
pusha
hlt
hlt
or
movsl
std
icebp
and
and
loopne
mov
test
pop
add
xlat
and
jmp
mov
push
adc
popf
aas
push
test
int3
lods
fldt
test
mov
xchg
xchg
push
in
mov
sub
mov
lods
movl
inc
add
or
pop
jg
cmp
fisttpll
jg
mov
cmp
divb
dec
in
xchg
add
iret
loope
std
popa
push
stos
and
in
out
adc
adc
or
ret
mov
mov
jg
aam
cmp
out
push
imul
hlt
dec
gs
xchg
repnz
jbe
xchg
rcll
in
adc
loopne
mov
sarl
call
enter
mov
lods
xor
loop
jno
iret
mov
test
gs
icebp
cmc
add
cmp
xchg
shr
cltd
add
lock
xchg
dec
pop
sub
daa
lret
aas
mov
clc
decb
stc
andb
bound
or
mov
inc
imul
mov
mov
popa
imul
loopne
bsr
add
push
pop
push
insl
repz
orl
call
cwtl
xchg
jae
add
and
stos
inc
jge
in
fcoms
add
sbb
in
lock
xchg
ds
mov
enter
xorl
pusha
in
clc
popa
inc
mov
mov
sub
mov
cwtl
cs
cmpsl
shll
add
jb
out
fsubp
or
ret
in
ret
add
iret
or
notb
sbb
shlb
lcall
add
test
daa
fisttpl
lock
adc
add
outsb
std
push
loop
rorl
out
fiaddl
dec
inc
popf
xlat
push
lahf
and
inc
loop
ljmp
loopne
lea
icebp
push
aam
add
mul
ss
sahf
nop
in
dec
aam
mov
add
in
test
inc
in
and
mov
push
nop
add
mov
pop
xchg
push
mov
adc
xorb
and
jl,pn
mov
dec
sbb
or
es
push
mov
lret
lret
es
cwtl
fildll
int
repnz
ljmp
or
jecxz
pusha
je
inc
sub
aam
inc
xchg
testl
adcl
push
push
xchg
shrb
add
adc
aad
in
ja
xchg
xchg
sbb
jae
push
jecxz
xchg
shll
pop
mov
int3
insb
fistl
xlat
add
jns
es
hlt
xor
mov
lods
scas
and
push
rorl
mov
rcrl
pextrw
test
cmp
in
add
dec
imul
ljmp
pushf
lds
and
shr
rcrl
mov
icebp
mov
adc
jmp
and
in
aam
mov
cli
sbb
cwtl
xor
pop
jge
jnp
mov
lret
push
loope
xor
stos
mov
ret
pop
aam
loope
ss
test
push
sahf
fcmovu
repz
andb
add
ljmp
movsb
les
in
faddl
ss
mov
out
lea
xor
lret
shlb
inc
les
mov
xor
add
jge
jns
or
push
add
fcompl
sti
push
xor
pop
pusha
xor
cwtl
pop
push
sub
cmpsl
push
insb
push
xchg
pop
dec
and
ret
loop
popf
das
mov
loopne
and
daa
jb
aam
into
lret
dec
lds
test
shlb
stos
ljmp
daa
mov
cs
xlat
push
out
jno
jb
xchg
cmp
sbb
repz
add
sbbb
aas
and
ror
imul
cmp
sbb
insb
mov
jecxz
stos
and
in
adc
mov
sbb
xor
in
stos
mov
movsb
lock
push
int
sar
cwtl
pop
inc
mov
fwait
xchg
jecxz
xchg
dec
add
popf
add
add
jg
add
add
fs
push
and
das
dec
cmp
cmp
arpl
imul
cmc
fmull
pop
loop
stos
xchg
xchg
jae
loope
xor
filds
sti
and
xor
in
fisttpll
lret
addl
lods
fsubs
or
aas
lret
pusha
arpl
stc
xchg
into
rcl
cmp
loope
jb
xchg
movsl
xor
stos
xchg
adc
jno
in
sbb
addr16
loop
ljmp
mov
pop
loop
cwtl
or
add
adc
xchg
lods
loop
lods
add
fisubrl
loopne
pop
sub
sbb
outsl
movl
mov
sub
sbb
or
lret
cmp
add
js
and
pop
fcmovb
fcom
std
add
xor
mov
out
test
fisubl
jp
popf
in
xlat
and
sbb
mov
movsb
or
out
ret
cltd
out
movsb
pop
jl
les
inc
push
sub
lret
push
test
cmp
jl
ljmp
test
add
mov
lock
dec
or
jbe
aas
mov
adc
xchg
xor
adc
lods
inc
inc
and
movsl
add
xorl
test
xchg
sub
popf
in
xor
cmp
jmp
mov
jbe
add
add
push
test
or
mov
add
xchg
cli
xor
adc
lods
mov
loope
adc
push
stos
mov
sbb
sbb
movsl
adc
psrld
or
dec
lahf
lret
shr
in
or
adc
sbb
mov
les
out
and
xor
jne
mov
in
xchg
aaa
cmp
shll
and
jmp
loope
aam
xchg
sbb
jne
cmp
and
mov
lret
out
add
and
fistpll
xchg
jbe
add
or
in
ret
sbb
fisttpl
notb
jnp
js
mov
lods
xor
loopne
push
fisubrl
xor
outsl
or
jbe
cltd
mov
or
lcall
in
gs
call
lcall
pop
enter
push
xchg
in
cltd
inc
xchg
xchg
dec
rol
das
adc
scas
xor
andl
pop
cltd
mov
insb
xchg
fwait
scas
xor
mov
lret
sarl
pop
sub
or
lret
fistl
jne
sub
xor
das
sbb
and
xchg
dec
pop
ljmp
sub
adc
adc
test
leave
fisttpl
nop
adc
pop
sti
add
xchg
scas
dec
in
add
push
outsb
jmp
repz
lcall
es
pushf
and
ret
adc
dec
je
xchg
jne
repnz
pop
test
call
gs
dec
adc
inc
nop
in
mov
pop
pop
scas
adc
pop
mov
mov
fisttpll
and
lret
cmp
aam
and
mov
cmp
adc
loopne
addr16
pusha
xor
pop
stos
jnp
sbb
mov
xor
repnz
andb
daa
xor
dec
cld
add
popf
mov
xor
repnz
hlt
inc
pushf
ficoms
dec
and
lcall
int3
xchg
dec
add
xor
add
ret
sbb
pop
sbb
mov
lret
dec
push
xchg
jns
inc
xchg
in
xchg
shll
add
jne
add
add
add
ret
cmp
cld
add
in
sbb
je
les
or
mov
fstl
mov
push
adc
cltd
add
addr16
push
shll
jnp
test
jbe
dec
movsl
das
lret
jmp
and
dec
xor
adc
dec
sbb
adc
lret
dec
xchg
popf
xchg
movsb
loopne
cmpsl
repnz
aaa
loopne
jecxz
aaa
mov
mov
out
push
cmpsb
add
scas
decb
aas
or
inc
test
js
push
repnz
inc
lahf
lds
xchg
cmp
sub
and
cltd
add
jecxz
adc
dec
dec
addb
dec
dec
mov
rcl
and
fcmovu
addl
dec
gs
in
cmp
ret
sahf
lods
enter
jecxz
pop
cmp
daa
popa
inc
clc
dec
mov
popa
lcall
into
adc
hlt
add
sub
and
test
inc
or
add
and
adc
cli
xchg
sub
inc
test
dec
sahf
xchg
ret
leave
xlat
lds
rcll
pushf
rorb
cmpsb
xor
add
mov
dec
or
sarb
test
pop
and
jbe
lea
cmpsb
scas
in
lahf
mov
adc
mov
testb
enter
inc
aaa
aaa
mov
push
es
jae
into
or
xchg
inc
add
movsb
inc
sahf
lods
xor
jmp
nopl
fidivs
jle
mov
sarl
mov
mov
mov
and
repnz
cmp
sti
adc
rolb
jge
jmp
xchg
and
and
jl
inc
lea
jg
mov
out
push
jae
jl
aam
insl
stos
sti
xor
lods
mov
loope
fstp
and
and
movsl
add
inc
cld
ja
iret
mov
xor
mov
and
and
out
data16
imul
xchg
mov
mov
mov
cltd
jmp
out
js
sbb
sub
in
xor
pop
sti
arpl
xchg
aas
adc
gs
mov
dec
jge
mov
popa
jl
dec
or
add
enter
dec
insl
addr16
arpl
cmp
add
je
cmpl
add
xor
sbb
aas
dec
mov
fisttpl
ret
jle
mov
hlt
int
mov
sbb
je
mov
les
enter
dec
leave
pop
xchg
test
test
les
and
js
inc
shl
xlat
movsl
fnstenv
push
sub
divb
testl
insl
sti
mov
mov
test
inc
lock
mov
ss
push
test
fcmovnbe
mov
mov
or
mov
ret
xchg
push
les
mov
inc
out
test
in
add
cmpsb
in
or
lods
nop
fisttpl
mov
mov
jbe
pop
pop
cmp
xor
test
out
inc
pushl
in
or
in
add
push
or
mov
ja
fdivl
mov
cltd
es
xor
pop
lock
cltd
mov
outsb
loope
sar
sub
add
loop
insl
shl
insl
mov
inc
movsl
dec
cmpsl
pop
lds
and
sub
fwait
test
bound
push
mov
mov
and
mov
fsubrs
cmpsb
xchg
popa
loopne
mov
aam
ss
insl
js
sub
dec
sbb
into
sti
sbbl
rclb
rorb
jno
fisubl
xor
cltd
out
dec
cld
leave
shrb
cmp
add
cmp
shl
pop
jmp
xchg
jno
and
add
cmp
pop
mov
nop
out
les
pusha
xchg
push
mov
arpl
dec
roll
mov
popf
push
nop
add
jmp
out
insl
ret
adc
push
notb
loopne
xchg
add
fldt
mov
jge
mov
sbb
into
imul
ret
or
sbb
dec
loopne
dec
push
into
addl
pop
or
sbb
cmp
push
add
sbb
shlb
out
scas
sub
push
lods
shr
or
fadds
popf
mov
fldenv
es
mov
cmp
aas
xor
lcall
iret
aaa
sbb
fildll
jbe
addb
push
mov
and
sub
adc
add
inc
ds
adc
fstpl
mov
jl
lock
scas
inc
xor
andb
xchg
push
iret
push
or
inc
add
aam
rorl
adc
pop
mov
lret
cmp
sbb
out
push
outsb
pop
pop
lret
out
ja
sahf
sbb
nop
mov
dec
jnp
cmp
frstor
pop
icebp
dec
stos
movsl
loope
add
mov
fstpt
inc
in
in
adc
fisttpll
in
pop
int
movsb
add
jg
pop
push
dec
test
mov
adc
leave
popf
mov
scas
inc
add
pop
imul
inc
add
push
subl
int3
pop
add
insb
and
mov
xor
inc
or
enter
sahf
or
adc
sahf
insl
dec
inc
dec
sbb
xor
pushf
mov
sbb
push
das
mov
fucomip
in
xor
int
sbb
addr16
nop
add
cmp
xchg
insb
gs
rolb
mov
cltd
ds
lret
cmp
jp
pop
fcoms
addr16
mov
ds
add
xchg
xchg
insb
dec
adcb
or
outsb
cmc
les
inc
fcmovu
and
jmp
orb
bound
adc
cmp
stos
push
or
enter
iret
lock
inc
push
sbb
mov
fdivs
orl
lcall
or
in
or
dec
lret
scas
jns
and
jb
sub
sbb
pop
or
and
rcll
nop
ss
mov
xor
jl
inc
xlat
scas
aam
mov
das
sub
fwait
cmp
or
mov
bound
mov
fiadds
and
aam
iret
outsl
cmc
sti
xchg
mov
int
dec
sbb
mov
inc
lret
jecxz
aas
mov
idivl
xchg
int
in
scas
pop
bound
sarl
xlat
xchg
inc
adc
jnp
faddp
loop
ja
test
incb
int
mov
je
loopne
loopne
sar
jo
and
cmc
add
dec
sbb
lods
leave
in
xorl
loop
int
xor
mov
adc
jns
sub
cmpsl
enter
jno
loop
jno
sub
int
fisttpl
jnp
jl
push
push
scas
jo
cltd
std
test
push
shrl
popa
scas
scas
add
mov
sub
adc
movsb
jge
leave
fsubrl
jp
movsb
sbb
jbe
pop
movsb
and
rcrb
popf
sub
jb
cmp
sbb
mov
or
pop
mov
xor
push
test
push
push
loop
dec
dec
daa
mov
sti
xchg
and
inc
cmp
cmp
sbb
or
push
cmp
lea
out
jge
insl
mov
into
add
fcompl
lock
dec
lret
orl
test
vmovups
jne
adc
jecxz
xlat
mov
nop
adc
lods
aad
decl
xlat
aad
xchg
ret
sub
shll
xchg
cmp
xor
sub
and
fstpt
push
into
testl
or
jae
lret
in
lret
pop
aaa
mov
jo
popa
or
lret
add
das
cmp
adc
xor
into
rcl
std
rorb
lock
cs
or
and
cwtl
out
inc
icebp
jbe
stc
dec
shrl
mov
inc
dec
mov
aam
pop
xchg
test
lock
stos
lock
jl
xchg
pop
pop
mov
xlat
xchg
ljmp
or
add
xlat
xchg
popf
sub
pop
out
xchg
mov
stc
adcb
pop
and
xchg
lret
inc
push
jb
xchg
fbld
and
add
cwtl
mov
add
into
fdivrl
xchg
loop
mov
inc
shll
mov
xchg
int3
xchg
xchg
fs
daa
dec
or
xor
push
xor
imul
sub
or
push
lcall
cmpsb
imul
frstpm(287
in
jb
dec
sbb
add
and
ja
loop
jmpw
ja
push
pop
mov
loopne
cltd
push
jae
dec
push
fwait
mov
shlb
dec
inc
sub
outsb
xchg
add
bswap
xor
movsb
inc
xchg
pusha
movsb
clc
out
cmp
adc
jp
adc
add
sub
stos
andl
lret
outsl
gs
push
xor
aaa
pop
out
loop
push
mov
add
push
inc
mov
mov
aas
and
or
test
mov
loop
out
cli
shlb
cmp
inc
adc
jne
mov
icebp
mov
je
repz
insl
js
jne
arpl
inc
outsb
inc
repz
mov
scas
sbb
repnz
xchg
adc
aas
scas
mov
mov
add
dec
jmp
and
push
sbb
add
jae
dec
imul
outsl
sub
data16
out
inc
add
jle
adc
sub
or
lret
ret
pop
pusha
stos
loop
in
push
test
adc
add
sti
sub
push
and
js
mov
rorl
push
je
mov
add
dec
es
dec
xchg
and
push
cli
notl
lods
ret
pop
je
dec
xor
cltd
sbb
iret
cmp
jmp
inc
push
xchg
inc
loope
fs
int3
or
jb
std
in
inc
lods
stos
add
mov
mov
xchg
and
int3
mov
sbb
lcall
icebp
sbb
jmp
ret
sbbl
sub
push
mov
lods
jbe
aam
repz
add
repnz
scas
xchg
xchg
xor
ds
inc
push
sti
pop
sub
sub
add
testl
inc
xchg
leave
ja
or
rcrb
cltd
test
cmp
or
jle
mov
lret
or
data16
and
and
in
sub
loope
inc
das
mov
mov
mov
adc
sub
imul
shr
andl
fwait
popa
pusha
jo
push
outsb
movsl
cmc
mov
jecxz
adc
push
jp
fsubr
cmp
outsl
sbb
jns
into
les
push
mov
jae
loop
add
xor
lahf
aam
jno
pop
inc
cmp
mov
cmp
std
int
popa
or
js
cli
loopne
fs
inc
and
or
hlt
nop
adc
sub
mov
ja
out
sbb
movsb
dec
xchg
mov
out
movsb
fxch
dec
push
shll
mull
shr
cmp
sub
imul
cmpb
jcxz
mov
lock
mov
pop
bound
sbb
outsb
in
sarb
js
cmp
enter
sub
out
ss
sbb
jnp
push
loope
dec
icebp
jbe
push
mov
jb
sahf
xchg
mov
adc
stc
outsl
mov
dec
popf
dec
or
adc
mov
andb
std
stos
sub
rcll
loopne
shrb
sarb
cmpb
repnz
sarb
push
and
mov
push
ror
ret
adc
fildll
cwtl
inc
sahf
adc
iret
cmc
fistps
stc
cmp
dec
xorl
and
js
push
and
ja
test
xchg
push
jmp
mov
lds
or
dec
in
sbb
aam
adc
mov
dec
sub
repnz
push
push
push
dec
leave
mov
sbb
out
dec
add
xchg
and
and
xchg
call
and
dec
ja
jno
insb
clc
push
sub
mov
rcrb
je
or
xorl
sar
jbe
sbb
std
cmp
push
xor
pop
jmp
jns
fcmovnbe
xor
insl
insb
outsb
pop
pop
add
cmp
lea
testl
and
ficoms
lret
insb
add
shld
sub
test
xchg
push
and
xor
mov
retw
push
fwait
add
fnstsw
inc
add
cmp
xchg
push
in
mov
dec
stc
adc
popa
in
cltd
insl
mov
lahf
mov
les
xchg
adc
iret
and
cmp
nop
adc
pop
repnz
es
push
ljmp
fdivrs
xor
push
cs
xchg
test
mov
ljmp
add
in
xchg
es
pusha
stos
add
cwtl
inc
into
in
notb
dec
sbb
sbb
adc
sbb
cmpsb
mov
loopne
stos
adc
out
stos
or
cmp
and
pop
dec
lds
and
test
dec
xchg
in
and
add
pushf
fbld
scas
mov
jl
and
nop
movsb
shrl
add
sbbl
out
jbe
lahf
dec
loope
or
cmpsb
and
ret
push
orb
shl
lock
xchg
cmp
sub
inc
ret
inc
rcrb
in
popa
cmc
ds
loopne
fs
add
xor
call
icebp
mov
push
push
jne
sub
push
lret
xchg
pop
into
pushf
adc
fisttpl
add
rolb
adc
int
repnz
std
and
scas
xlat
sbb
mov
or
and
mov
inc
icebp
int3
ss
scas
sahf
mov
les
sub
or
mov
adc
icebp
sbb
cmp
insl
nop
les
ss
movsb
mov
cld
or
addr16
pop
cmp
xor
pop
in
int3
xor
int3
add
inc
rol
xor
in
addr16
adc
and
ret
lock
cwtl
pop
pop
or
scas
sub
bound
jmp
jle
cmp
pop
push
or
es
mov
mov
fistpl
leave
jl
insb
xor
mov
gs
ljmp
inc
jecxz
or
jns
push
test
push
pop
repnz
insl
stc
test
xor
sbb
push
in
pop
xor
fdivl
or
pop
shll
loopne
push
ret
ret
mov
insb
cmp
push
lods
ret
pop
ds
dec
loope
arpl
imul
cmp
std
push
out
cmpsl
and
into
cmp
xchg
adc
lret
jmp
pop
sub
rcl
lcall
repnz
add
lahf
insl
daa
ja
test
fsubr
mov
jecxz
jecxz
pop
sti
int3
or
dec
mov
das
sbb
jns
adc
fidivrl
movsl
aam
mov
mov
adcl
mov
cmp
dec
mov
push
push
push
ss
cmp
fldt
push
inc
out
push
sbb
push
mov
jp
mov
subl
in
jp
out
sahf
mov
dec
push
add
dec
add
lret
and
sbb
push
scas
repz
jb
ja
popa
gs
pop
test
je
loopne
adc
adc
push
pop
mov
fisubs
mov
pop
iret
movsb
lcall
xchg
fs
and
adc
frstor
pop
xor
shrb
add
inc
push
adc
jmp
and
test
mov
outsb
or
cmpsl
loopne
out
or
push
mov
dec
cltd
mov
stos
jg
iret
dec
push
aam
sbb
insb
hlt
stos
xchg
mov
addr16
pop
mov
aas
fdivrs
xor
pop
or
fdivrs
ret
inc
addl
add
mov
xchg
xor
push
and
xchg
mov
and
xchg
roll
aaa
cmp
adc
mov
xchg
out
iret
xor
add
jo
mov
sbb
movsb
cmpsl
adc
sbb
roll
add
cmp
push
ret
test
les
adc
jns
adc
adc
filds
xor
dec
in
lods
stc
jbe
test
jge
add
test
add
fidivrl
jns
lods
or
in
lds
dec
add
mov
mov
mov
add
sbb
bound
xor
popa
mov
xchg
fdivrl
mov
ja
popa
jmp
or
shr
fcmovu
or
arpl
sbb
add
pusha
inc
jo
or
repnz
push
ss
jne
sbb
shl
or
jmp
in
adc
inc
aaa
sub
addb
insl
andl
mov
inc
fbld
mov
arpl
neg
cmc
stos
pop
daa
adc
mov
xchg
xor
cld
fwait
adc
mov
cmc
mov
add
xchg
jle
mov
enter
ljmp
out
or
pop
sbb
mov
in
xor
les
add
or
ret
out
push
lret
testl
addr16
mov
xlat
ljmp
fisubrs
hlt
ss
sbb
test
or
ret
push
mov
inc
imul
inc
adc
sbb
mov
test
xchg
fisubs
xchg
test
subl
cmp
mov
je
hlt
lods
popa
inc
dec
sub
out
dec
into
sarb
sub
inc
shrb
jp
pop
es
in
xor
jo
aam
mov
adc
je
jb
mov
fistl
rclb
inc
pop
push
gs
sub
sub
fbld
lea
add
dec
loopne
dec
shlb
in
xchg
repnz
jge
or
cmp
dec
aas
and
jne
movsb
aas
fstpl
pop
dec
mov
mov
orl
xchg
lcall
insb
in
mov
std
fldl
daa
lds
add
xlat
or
mov
lret
mov
or
ds
loopne
xor
mov
push
jge
adc
lcall
or
or
inc
nop
loopne
xor
mov
lock
push
sub
mov
nop
inc
lods
xor
pop
or
push
inc
xchg
push
inc
imul
stos
xor
push
into
test
nop
xlat
out
cwtl
sar
fimull
fldenv
movl
push
rcll
lds
cmp
jl
add
push
loop
in
jo
adc
cmpsl
int3
jno
sbb
ret
or
sbb
cltd
mov
mov
or
xchg
xchg
fiadds
push
sub
jle
jae
push
cmp
add
or
xchg
cmp
add
sbb
jg
cmpsl
inc
push
insl
lods
adc
or
out
jecxz
jg
iret
movsl
out
push
loop
fcmovnu
bound
sub
fwait
pop
adc
popf
in
popl
aaa
loope
loopne
or
pushf
outsl
inc
dec
mov
xor
and
sbb
pop
mov
mov
pop
in
and
adc
push
xlat
cltd
lret
xchg
and
loop
mov
aad
sbb
call
jo
xchg
fdiv
les
jge,pt
push
rcl
les
shl
lock
sbb
dec
xor
xlat
fdivp
adc
ficoms
fsubrs
add
mov
push
ljmp
mov
sbbb
or
adc
xchg
mov
pmaxsw
test
or
mov
dec
xlat
cmp
jne
mov
sbb
jb
jno
cmpsb
ficompl
int3
into
add
test
sbbl
and
jmp
push
js
ja
pop
jl
mov
push
test
cmp
out
mov
dec
out
cmp
push
jmp
aam
push
lcall
gs
shlb
cli
sub
or
shll
lock
inc
xor
dec
sbb
loop
imul
mov
xor
inc
inc
sahf
adcl
gs
mov
add
xchg
dec
sbb
adcb
dec
inc
dec
adc
mov
sbb
dec
enter
inc
push
movsl
or
das
xor
and
cmpl
addr16
fsubp
mov
push
clc
mov
sti
and
clc
sbb
sub
add
mov
mov
push
inc
sbb
xor
ficoms
and
add
add
negl
adc
dec
imul
into
xchg
xchg
js
lea
xor
dec
stc
in
sahf
ljmp
iret
sbb
add
pop
sub
mov
lret
sub
adc
loopne
xchg
mov
mov
xor
add
jnp
lea
lds
mov
out
sbb
and
daa
decb
movsb
mov
xchg
sbb
call
xchg
xchg
jle
mov
cltd
inc
jns
inc
divb
mov
xlat
jae
push
xchg
in
and
popf
push
les
push
aam
add
or
in
or
inc
lcall
cld
and
cmp
push
in
rcll
in
cwtl
mov
inc
shl
inc
mov
xlat
repz
data16
cwtl
icebp
fwait
add
bound
roll
and
mov
shll
adc
inc
roll
cmp
iret
push
out
or
inc
icebp
mov
pushf
pop
es
and
adc
push
pop
out
iret
cwtl
push
xlat
adc
lods
das
sbb
popf
roll
xor
sub
cld
adc
in
mov
adc
in
int3
adc
in
or
xchg
add
mull
mov
or
xor
es
jl
pop
pop
inc
lretw
in
inc
mov
sub
fisttpl
ss
add
cmpsb
push
incl
test
icebp
jle
into
jns
add
rolb
dec
and
ljmp
add
sub
mov
sar
imul
jnp
xchg
fisttps
fdivs
in
cltd
aad
adc
loopne
mov
pop
lcall
and
shl
adc
cmp
fldcw
ss
or
out
imul
or
dec
add
pop
xchg
push
js
sbb
movlhps
cmc
rcrb
or
and
jmp
lret
inc
dec
ja
push
addr16
daa
and
rorb
out
and
sbb
fucomp
jbe
adc
push
inc
adcl
ds
dec
sbb
loop
je
lret
rcll
lods
xchg
movsl
jecxz
lret
rcr
or
or
and
or
push
mov
loope
xchg
and
push
stc
or
sbb
cwtl
aam
out
or
or
out
or
inc
pop
mov
jle
cltd
push
adc
clc
mov
icebp
inc
stos
ret
sub
loop
adc
popl
in
push
add
add
lret
call
mov
lods
xor
mov
lods
cmp
inc
ficompl
aaa
jno
pop
or
shll
sarl
xchg
xorl
in
sbb
xchg
lret
inc
pop
std
aas
or
pusha
repnz
fcmove
push
mov
insb
and
add
cwtl
dec
jbe
or
xor
push
mov
dec
andl
rcrb
xchg
xor
lret
loop
icebp
lret
mov
sbb
pusha
js
sbb
sahf
or
lret
gs
jae
sbb
das
int3
divb
push
icebp
into
cs
cmpsl
popa
loopne
pop
dec
shll
sbb
ret
fwait
int3
dec
sti
cmp
into
jp
jbe
sbb
fildll
push
inc
shll
pop
int3
sbb
outsl
jbe
gs
sbb
movsl
fcoml
push
xor
aam
mov
push
or
test
lcall
rorb
popa
dec
push
jne
xchg
rorl
or
push
stos
dec
lcall
shll
xchg
cmpsl
push
aam
and
jbe
xor
cmp
sub
xor
fs
stos
push
or
test
push
sbb
jg
or
test
jp
cmp
mov
rorl
push
out
push
daa
fnsave
jb
add
fwait
jo
dec
out
popa
push
addr16
xchg
mov
and
loope
cmp
movsb
test
test
into
xchg
hlt
lcall
mov
xchg
lret
xchg
sbb
repnz
sub
call
add
lcall
pop
fmuls
insl
daa
xor
aaa
xchg
sbb
lods
fmuls
mov
sbb
ficompl
xchg
scas
shll
test
sub
pop
add
fsubrs
jbe
add
nop
push
shlb
arpl
add
sbb
mov
imul
add
in
sub
clc
dec
in
mov
adc
filds
repz
xchg
mov
stc
out
pop
in
push
pop
mov
dec
aas
adc
cs
bound
sbb
sbb
pop
mov
fs
andl
rclb
out
enter
inc
jmp
jge
mov
push
pop
sbb
outsb
scas
adc
sbb
repz
mov
movsl
mov
fadd
cmpsb
lret
addr16
pusha
and
aaa
jmp
mov
icebp
test
or
movsl
test
shr
jno
mov
jbe
mov
xlat
sbb
fistpl
movhps
test
int
mov
mov
daa
icebp
push
loop
sbb
xor
sub
adc
out
pushf
xor
into
xorb
cmpsl
push
xor
xor
dec
sbb
push
xor
sub
push
or
sbb
sbb
adcb
lret
or
adc
push
and
mov
dec
leave
movsb
in
xlat
out
popf
cld
inc
inc
jnp
insl
cmp
pusha
sub
jge,pt
push
outsl
or
xlat
push
or
outsl
or
push
and
mov
push
loop
push
fidivrl
mov
int
enter
xchg
sahf
mov
add
inc
adc
sbb
aad
in
mov
cld
lods
cmc
pop
dec
rorb
aas
jb
cmc
sbb
cwtl
cmp
add
push
sbb
insb
iret
sbb
aam
inc
jge
push
sbb
push
mov
rol
push
jno
cwtl
cli
mov
mov
push
mov
add
and
cmp
xchg
aas
push
xlat
adc
add
sbb
sahf
sbb
decl
test
aaa
leave
int3
movsb
loope
or
ret
xor
test
mull
or
mov
into
fadds
faddl
and
rcrl
and
fwait
test
movsl
push
ret
xor
lret
cmp
push
add
fcomip
jae
icebp
insb
in
xor
popa
dec
jp
loope
repz
adc
cmp
mov
adc
in
pop
sub
out
popf
repnz
lret
xlat
and
outsl
jecxz
mov
sub
call
mov
imull
jo
lds
pop
jge
jl
cmp
es
push
sbb
rclb
pop
jbe
scas
out
or
xchg
pop
push
mov
lret
jmp
jp
or
pop
test
cld
fmuls
push
ja
cltd
ss
or
or
mov
jns
mov
sub
in
jbe
rcr
imul
sbb
std
push
xchg
sbb
dec
adc
lcall
enter
cmp
jmp
sbb
pop
addl
adc
sbb
xor
andb
pop
add
enter
add
xchg
push
mov
adc
xrelease
lcall
sbb
in
cmpsb
aas
and
imul
sub
pusha
and
jb
test
shrb
das
xchg
in
clc
mov
daa
mov
fisttpll
out
inc
repz
xorb
into
jmp
loope
mov
lcall
movsl
adcb
popa
mov
shll
sbb
lods
mov
xchg
push
addl
scas
sub
cmp
mov
mov
stc
xor
pusha
xlat
mov
cwtl
dec
fs
mov
aaa
bound
push
push
in
sub
push
or
adc
jmp
mov
aad
test
addr16
xchg
shlb
mov
stc
push
cwtl
mov
mov
adc
mov
iret
sbb
decl
and
pop
aad
sbb
adc
pushf
push
jae
fcoml
popa
data16
cmp
outsb
pmuludq
das
in
rcl
dec
mov
adc
fwait
mov
mov
xchg
les
push
xchg
jp
pop
push
shrb
mov
out
cmc
adc
call
pop
popa
icebp
add
xor
mulb
add
in
out
mov
mov
call
or
les
or
aas
shl
out
lods
mov
push
scas
cmp
cmc
xchg
stos
push
pop
popf
into
jb
push
pop
and
lret
mov
sbb
add
cmpsb
cmpsl
cli
jo
or
mov
fs
mov
lea
inc
push
iret
popf
in
cmc
xchg
xchg
mov
mov
cmp
pop
dec
dec
and
add
aaa
aad
push
cmp
sbb
add
push
or
je
shl
rcr
roll
rolb
or
sbb
lret
scas
lea
fmull
into
jp
and
sbb
fdivp
or
arpl
int3
and
cmp
js
int3
adc
pop
push
minps
cmp
xchg
movsb
lcall
pop
jo
in
insb
xorb
dec
icebp
je
lock
iret
jle
or
adc
push
stc
in
out
flds
pop
sub
add
lods
in
in
rcrl
movsl
or
out
xor
fcomp
nop
sahf
stc
inc
mov
pop
std
push
or
pop
addl
mov
lock
push
dec
or
in
push
loop
aaa
das
jno
das
mov
xchg
dec
pop
cltd
sub
cwtl
movsl
jns
stos
popl
ret
lea
ror
cmp
or
jp
or
mov
sub
lods
dec
outsl
xor
js
sbb
mov
mov
xchg
pop
fnstenv
xchg
outsl
xor
sbbl
xchg
adc
inc
jmp
shll
hlt
mov
add
jg
movsl
and
dec
aad
mov
jb
jl
mov
xor
sub
xchg
jo
cmp
cld
mov
push
rolb
lret
mov
jb
arpl
shrl
pusha
pop
aaa
and
pop
lret
lds
sub
push
leave
je
dec
bound
add
pusha
insb
ret
test
jbe
arpl
mov
push
cmp
cmpsl
iret
gs
xchg
int3
adc
in
cmc
mov
cmpsb
adc
gs
adc
cld
push
test
sub
mov
sbb
shlb
fsubrs
pop
das
fdivs
sub
dec
xchg
in
add
in
sbb
inc
xchg
ss
and
shlb
adc
push
mov
jnp
aam
int3
inc
mov
or
les
ffree
test
or
out
mov
or
adcl
in
add
ds
and
mov
insb
fwait
pop
mov
pop
subl
cmp
out
mov
sahf
fimuls
add
sti
filds
pop
xor
xor
lahf
dec
dec
ss
ss
dec
stc
out
out
inc
pop
inc
adc
xor
sti
frstor
jecxz
stc
nop
xchg
cltd
cmp
mov
shrl
in
or
mov
hlt
cwtl
sti
inc
mulb
adc
push
addr16
ljmp
dec
sbb
mov
jo
or
mov
cmp
cld
pop
and
je,pn
xor
or
popf
mov
dec
xlat
test
pop
popf
lcall
add
roll
fbld
lods
mov
xchg
lahf
lret
add
jne
xchg
outsb
mov
dec
lock
lret
bound
jae,pt
push
jb
ds
xlat
ja
subb
xor
jmp
aam
inc
faddl
pop
mov
in
lcall
sub
push
or
lret
fs
add
rcll
mov
mov
jno
data16
pop
xor
sti
es
call
cmp
and
xor
clc
bound
push
popa
adc
push
stos
je
aam
cmp
lret
inc
pop
fisttpl
push
pop
arpl
xchg
mov
adc
mov
adc
dec
xor
or
cmp
or
cmp
bound
mov
shrb
cmpsl
sbb
mov
and
fisubrs
push
and
pop
cld
adc
stos
mov
adc
mov
test
sub
js
or
add
push
pusha
cwtl
pop
imul
mov
test
cmc
or
test
sbb
sahf
cld
movsl
lret
leave
inc
aam
imul
hlt
loope
jne
or
dec
shl
fwait
out
xor
adc
lods
call
mov
mov
push
sub
jno
pop
inc
push
fdivs
orl
xlat
test
jmp
xchg
jns
sbb
cmpb
jno
xchg
fs
lds
jl
mov
add
ss
stos
cld
mov
add
mov
scas
and
add
pop
fildll
cltd
push
sahf
test
loope
pushf
jns
mov
push
test
call
sbb
jle
stos
data16
movups
push
aad
leave
adc
inc
fwait
mov
loop
push
add
push
push
shlb
xchg
mov
and
push
add
fwait
sbb
cmp
pop
mov
xlat
or
xor
sbb
cld
xchg
roll
push
mov
loope
add
sub
fwait
push
add
and
aaa
sbb
push
add
shll
fwait
push
add
scas
mov
jg
loop
mov
fstps
in
or
dec
dec
adc
adc
addr16
xorb
sahf
xchg
and
cmp
iret
mov
test
int
sub
cmpsl
lret
shlb
inc
pusha
sbb
lret
je
je
arpl
rorl
sar
xor
sub
add
jne
sbb
push
rclb
in
ror
or
mov
xchg
fcoms
sub
push
mulb
xchg
sbb
clc
fwait
int
push
fisttpll
jg
fmuls
jno
repnz
dec
pop
jne
leave
jne
push
into
jge
inc
mov
jne
sbb
test
cld
jne
xor
fbld
pop
push
rep
adc
loopne
or
js
ds
add
and
mov
jne
fcmovnb
mov
cmp
inc
adcl
lret
adc
pop
inc
push
dec
mov
sbb
sub
jne
sub
or
mov
inc
in
ror
sub
testb
data16
rol
push
rol
in
and
pop
dec
xchg
in
clc
inc
lea
jne
stos
xchg
nop
jmp
xor
inc
xchg
icebp
jle
cwtl
jmp
std
rorb
popf
push
lea
add
popa
push
jae
jbe
lret
lcall
xchg
les
fldcw
das
mov
and
xchg
pop
sub
mov
mov
sbb
mov
jecxz
dec
add
popf
shrb
add
aad
xlat
mov
dec
stc
test
push
fistl
adc
lahf
test
dec
outsb
cmp
mov
or
fs
les
popa
inc
sub
cld
push
mov
sbb
call
scas
in
mov
lods
jo
dec
push
stos
lret
std
jns
sub
popl
pop
stos
inc
das
fldl
xor
sbb
inc
cmp
bound
pop
popf
inc
add
pop
adc
or
sbb
inc
jno
add
mov
cltd
std
push
or
shll
gs
addr16
add
subl
mov
push
bound
das
sbb
lcall
movsb
push
call
inc
fcomps
xchg
fdivr
mov
inc
addr16
arpl
in
aaa
push
fimull
sbb
jno
inc
daa
jl
outsb
call
sbb
inc
mov
mov
dec
xor
inc
cli
fmul
mov
sub
loopne
and
adc
aaa
push
leave
jnp
cwtl
repnz
sbb
sti
push
jo
inc
loopne
cmp
mov
daa
jnp
or
mov
shll
pop
push
test
inc
inc
ss
fdivrl
addr16
sub
xchg
jo
aaa
aaa
mov
sbb
adcb
sahf
add
stos
fisttps
pop
pushf
and
sub
inc
mov
xchg
stos
fldenv
cmpsl
andb
or
addl
cmp
push
loope
push
outsl
mov
mov
xor
xlat
cmpsl
sub
xor
es
jae
mov
or
xor
or
jnp
lret
aaa
sub
cltd
dec
movsb
fadd
pop
adc
add
adcl
lret
push
mov
cltd
out
xchg
shll
inc
pop
neg
popf
test
scas
push
aam
add
cmp
and
mov
mov
xor
cld
xchg
dec
mov
or
and
inc
sahf
std
shll
ret
cmp
lea
das
jno
dec
imul
adc
enter
enter
test
or
mov
inc
out
xchg
cmp
add
push
and
scas
in
gs
add
in
mov
or
mov
xlat
sbbb
xor
rorb
mov
iret
sub
add
xchg
imul
adc
jecxz
cmpsb
or
outsb
sti
pop
cmpsl
pusha
aam
adc
stos
add
jae
imul
add
repz
jns
int
gs
ds
test
cs
mov
mov
and
loop
daa
int
inc
mov
mov
shrb
mov
lahf
test
push
sub
cld
sti
adc
das
lods
out
fwait
mov
movsb
xchg
pusha
fs
loopne
aaa
inc
or
push
pop
jnp
stc
add
xchg
xchg
fbld
xorb
icebp
jge
fbld
shl
sbb
dec
movsb
popf
dec
and
fwait
xor
inc
mov
push
fstpt
fsubr
cs
es
jo
sbb
mov
dec
popa
push
cmp
jns
stos
xlat
jl
mov
imul
sbb
xchg
xchg
or
sbb
pop
pop
clc
xor
nop
fmuls
push
lret
dec
loope
dec
sbb
jge
int3
mov
fmulp
fistps
pusha
aaa
aas
jl
sbb
or
sub
addl
xlat
mov
pop
mov
loop
rorb
cltd
sbb
stc
test
repnz
mov
mov
addl
int3
jae
dec
testl
adc
ret
jne
or
ret
push
les
add
xchg
arpl
testl
mov
mov
test
lock
mov
pop
add
shl
mov
dec
dec
and
and
fs
jecxz
push
adc
or
jge
pop
popa
add
lret
sahf
push
jae
call
adc
jo
cltd
and
jb
mov
pop
jmp
fistpll
push
mov
adcl
adcl
add
rcrb
dec
cwtl
push
cld
add
push
xor
add
jmp
pusha
in
xor
xlat
sbbb
leave
call
arpl
inc
pop
mov
jno
aam
repz
pushf
inc
je
sub
imul
clc
sub
sbb
jmp
xchg
inc
in
repnz
cmc
cmpsl
pop
lret
adc
pushf
jecxz
int3
fwait
dec
in
push
sbb
cli
addr16
adc
and
push
gs
mov
sbb
and
pusha
popf
enter
xor
or
sbb
ficoml
push
adc
test
dec
add
jmp
sbb
adc
lds
shlb
push
mov
cmp
ss
enter
mov
mov
int3
mov
push
decl
imul
sub
sbb
mov
bound
stos
das
lea
adc
popa
arpl
jmp
xor
cld
das
daa
outsl
and
jmp
loop
mov
in
sbb
sbb
add
jb
mov
nop
pusha
enter
repnz
push
filds
mov
inc
iret
pop
or
loopne
sub
push
dec
add
stc
paddq
sbb
cmp
jecxz
or
ret
inc
mov
rclb
xor
ds
stos
cmpsb
arpl
bound
and
lret
push
dec
mov
xor
xchg
mov
rorb
clc
hlt
mov
xor
int3
add
inc
lret
sar
cmp
or
push
dec
imul
addr16
icebp
iret
cmpsl
mov
out
adc
ja
add
cmpsl
push
jae
xor
popf
fcoml
lcall
repnz
xlat
rol
pop
pop
shlb
int
rcrb
fcos
rol
and
in
or
mov
push
cmp
cmp
repz
sbb
div
inc
repz
ffree
adc
sbb
add
sbb
jb
out
cmp
into
lock
or
popa
arpl
shlb
les
push
xlat
xlat
jb
fwait
out
push
cmp
rorb
push
aam
mov
mov
sub
std
scas
pop
lock
fcmovu
cmp
sub
in
adc
mov
mov
sbb
repnz
adc
adc
and
cwtl
adc
xchg
lahf
sbb
jle
sbb
fcomi
aas
int3
rcr
cmpl
fcomps
mov
ljmp
xorl
cmpsb
xchg
out
push
ss
xchg
in
es
cmpsb
repnz
push
fwait
adc
mov
cmp
movl
mov
cld
mov
test
pop
mov
jl
cmp
xchg
loopne
rorb
inc
xor
rcrb
cs
and
mov
xor
mov
pop
popa
cld
pop
cltd
daa
rorb
xchg
out
add
out
aas
cwtl
xor
cmp
mov
mov
adc
shrb
dec
mov
push
pop
xchg
inc
inc
test
xchg
add
lods
ret
cltd
mov
xor
lcall
adc
dec
jp
bound
popa
mov
add
loopne
mov
nop
or
push
xor
sarl
popa
bound
sub
cmp
std
jns
in
cs
lds
push
pop
xchg
add
adc
nop
addr16
out
xchg
add
inc
sbb
xorb
pusha
les
aam
inc
dec
xlat
je
adc
lahf
test
sub
pop
mov
fisubrs
stos
adc
insb
sbb
sbb
mov
push
and
adc
sbb
mov
dec
jl
pop
mov
pop
mov
jge
insl
lds
imul
dec
out
and
cmp
mov
add
jge
mov
scas
push
les
mov
iret
pop
imul
adc
mov
jge
mov
xchg
jmp
mov
daa
mov
xor
cmp
outsl
add
jle
cmp
and
outsb
adc
lcall
cmp
dec
jns
sub
das
xor
out
sub
std
dec
jne
or
push
fst
lret
les
fsts
jg
cli
clc
fbstp
jae
jns
inc
xor
rcll
or
push
xchg
in
jb
popa
jbe
push
popf
jbe
dec
pop
movsb
mov
push
add
jae
fcmovnbe
testl
popf
jne
bound
xor
ljmp
pusha
push
xorl
test
insb
or
xor
and
lods
push
cmp
or
xchg
cmp
iret
mov
push
adc
inc
loope
arpl
push
jno
rcll
sub
lahf
mov
je
push
push
lea
fstps
or
cmpsl
hlt
arpl
xchg
sbb
adc
test
ja
outsl
lahf
aam
jp
pop
push
into
cwtl
popa
jl
popa
les
dec
and
dec
push
inc
sub
imul
mov
out
insl
mov
xchg
xor
xchg
xor
imul
mov
stos
jne
jecxz
in
fmul
filds
repnz
fidivs
pop
ret
push
fwait
outsb
add
dec
mov
sbb
pop
in
jbe
into
into
loope
mov
iret
inc
inc
mov
xor
mov
into
mov
lahf
xchg
nop
test
test
mov
lods
push
jl
push
jle
adc
sub
push
cwtl
mov
dec
jle
int
ss
rclb
je
es
jnp
sub
out
mov
fcoms
pushf
adc
mov
push
push
outsl
mov
inc
and
ret
and
adc
cmp
arpl
add
push
cmp
mov
pop
movsb
jbe
lds
lds
dec
mov
mov
repz
cmp
add
inc
cmp
dec
test
hlt
loope
push
pop
mov
loopne
push
or
lret
jae
sub
daa
ffreep
testb
lds
daa
dec
push
jns
out
andb
inc
lds
cmpsb
cmp
fdivl
sbb
fcoms
cmp
lcall
push
cmp
or
ss
ds
cli
aam
cmp
negl
daa
loope
sbb
jno
xchg
mov
sbb
jbe
aaa
int3
pop
popa
cmp
dec
mov
xchg
jns
ret
fmul
out
repnz
es
mov
rcrl
lock
xchg
jmp
outsl
or
movsb
sub
cs
push
hlt
lock
sti
adc
shrb
ljmp
xor
test
fcoml
je
testb
and
sub
stos
fwait
aad
rclb
ljmp
xlat
mov
adc
jecxz
inc
jo
sbb
dec
andb
xchg
mov
in
push
shl
mov
inc
outsb
mov
arpl
test
ret
lds
aad
sub
push
cld
adc
lahf
pop
adc
dec
adc
mov
jge
cltd
call
out
cwtl
inc
add
jno
inc
shlb
add
fmuls
sbb
adc
fistpl
ljmp
pushf
cmp
mov
rorb
xchg
inc
popa
je
aaa
and
in
insl
dec
aas
dec
and
fcompl
int
xchg
in
adc
fsubl
mov
pop
pop
mull
add
or
sbbb
movsb
inc
call
inc
lods
aad
xchg
cmp
outsl
or
mov
pop
scas
lret
sub
lret
push
out
andb
mov
push
cwtl
push
loop
cmc
push
fcoms
shlb
jae
jle
stos
and
push
push
and
mov
int3
out
push
leave
pop
pop
mov
xchg
jo
push
in
or
es
jl
adc
ljmp
jo
xchg
jne
cld
sbb
arpl
int3
nop
stos
or
lods
xor
cmpsb
jne
adc
aam
insb
cwtl
sub
mov
aam
fdivrs
push
sbb
stos
and
add
ss
adc
addl
negb
mov
or
sti
sbb
push
cmp
cmp
jl
pop
cmp
adc
mov
imul
or
faddp
sti
cs
and
jmp
loopne
gs
aaa
test
sbbl
sbb
mov
imul
punpckldq
xchg
fs
sbb
ds
fst
rolb
es
mov
cmp
cmc
jmp
xor
sbbb
push
aaa
mov
hlt
dec
mov
mov
fs
jb
aad
aas
push
push
cmp
cmpsl
out
ret
sub
pop
insb
scas
movsb
mov
ret
rclb
mov
jbe
es
lock
and
ret
je
adc
mov
test
mov
cmc
and
cmp
mov
and
dec
lret
mov
pop
sarl
pop
sub
pusha
das
rcrl
outsl
nopl
adc
mov
dec
aam
mov
lahf
int3
test
cmp
imul
mov
in
dec
or
pop
adc
dec
or
fldt
mov
add
subb
sub
roll
imul
and
sbb
jno
sar
or
pop
sub
loopne
add
and
adc
dec
out
outsl
loope
rorb
rorb
pop
and
mov
lret
or
sub
sub
out
repnz
adc
daa
add
inc
loopne
and
stos
mov
cld
aam
aam
in
shlb
sbb
rorb
test
cmp
or
sub
mov
lahf
cmc
mov
pop
inc
pop
loop
cmp
pop
stos
adc
sbb
dec
aad
daa
mov
pop
sub
xor
inc
lods
fldcw
sub
sbb
jne
rcrl
inc
rclb
in
out
dec
call
or
cmp
sti
pop
sarl
xor
pop
call
nop
mov
mov
xchg
push
psubq
mov
jge
popa
push
repnz
pop
mov
sti
out
loopne
mov
sub
fnsave
inc
and
aas
sub
push
ret
mov
and
rcll
mov
call
popa
jp
mov
add
xor
mov
imulb
fsub
insl
mov
mov
out
dec
aam
pop
mov
lds
in
mov
adc
push
movsl
pop
addr16
sbb
popf
aam
pop
enter
hlt
mov
sub
or
je
pop
lret
fs
popf
mov
stc
xor
scas
outsb
mov
sub
cmpsb
lret
add
add
subl
daa
mov
andb
mov
xor
cli
adc
sub
adc
xchg
jae
jno
mov
sahf
popa
or
xchg
cmpsb
inc
jns
inc
inc
aam
lret
or
loope
out
push
mov
in
jp
aaa
iret
xchg
push
aas
shrl
cmc
fwait
pop
and
add
or
out
hlt
ret
add
or
add
lcall
inc
ret
cmp
or
pop
pop
pusha
jb
mov
adc
out
adc
lds
or
in
div
jno
inc
push
cltd
and
mov
xor
or
pop
out
adc
test
xchg
pop
push
cmp
shlb
mov
out
xchg
xor
int3
and
call
outsl
xor
rorb
xlat
loopne
jecxz
icebp
pop
mov
jno
mov
cli
enter
mov
mov
cmp
adc
int
push
fcompl
int3
lods
inc
mov
dec
adc
btr
mov
jb
sub
std
add
dec
nop
test
push
inc
inc
and
pop
out
cmpsb
pop
adc
push
stos
call
nop
adc
adc
insb
mov
test
add
cmc
lcall
jbe
inc
pop
lea
rcrl
inc
shr
sbb
stc
fyl2x
or
mov
icebp
jno
cmp
in
lahf
or
fstps
nop
cmp
jmp
add
or
add
cli
shll
adc
mul
push
mov
push
enter
aad
sbb
iret
dec
cmpsb
xchg
sub
mov
insb
decl
cmp
imul
sub
in
dec
lds
cmpl
dec
lods
out
hlt
add
dec
push
sbb
stos
cli
mov
dec
xchg
push
arpl
jo
bound
pop
push
sbb
xor
fwait
sub
icebp
into
jae
sti
shlb
addl
push
inc
jne
stos
es
std
pop
test
or
push
dec
jns
xchg
jb
sbb
inc
dec
fwait
arpl
int
loopne
loop
mov
test
and
loop
sub
mov
push
inc
andl
nop
fstpl
out
xor
in
xor
stos
sbbb
bound
outsl
lcall
mov
icebp
mov
cmp
fisttpl
or
sbb
mov
out
mov
aas
rcll
daa
sahf
jno
out
les
std
sub
incl
add
or
sbb
dec
mov
ljmp
movsb
cmp
xlat
mov
mov
inc
jns
mov
ljmp
jnp
push
push
sub
iret
add
pop
push
xor
and
in
rclb
lea
aas
fiadds
push
mov
push
pop
aaa
sbb
out
fnstenv
shll
dec
sbb
mov
test
jecxz
push
call
sbbl
cltd
push
mov
xchg
aaa
nop
scas
xchg
lcall
lods
jns
pop
movsb
push
sti
pop
popa
adc
fsubrs
or
out
sarl
mov
rolb
add
or
lret
add
jo
push
inc
xor
push
fs
push
out
filds
shrl
jns
mov
lcall
cltd
sub
push
xor
in
pop
dec
rcl
pusha
xchg
mov
sub
clc
ds
cltd
lcall
enter
pushf
lcall
mov
mov
and
sti
loope
test
or
push
dec
jmp
mov
bnd
xchg
into
adc
loope
test
pop
xor
push
std
adc
push
into
pop
mov
jbe
cmp
ja
xor
imul
jns
cwtl
movsl
lahf
fnsave
in
int
xlat
or
outsl
mov
lret
fcmovnu
jge
out
pop
out
mov
sbb
mov
cwtl
fwait
mov
lret
loope
addr16
pop
or
pop
rorl
xchg
jle
mov
mov
in
in
mov
in
movsb
outsl
aad
mov
cmpsl
mov
mov
and
sbb
inc
jl
int3
jmp
mov
xchg
sbb
sub
xchg
les
sbb
sbbl
incl
sub
popl
and
xor
cmp
lret
dec
xchg
clc
mov
and
pop
movsb
adc
jb
ret
inc
inc
push
pop
fldl
xchg
pop
and
stos
daa
insb
adc
aad
and
aad
mov
xchg
nop
loopne
mov
stos
test
in
movsl
push
stos
add
dec
xchg
ljmp
sub
adc
adcl
mov
or
stos
mov
sub
repz
ss
sub
fwait
bound
ljmp
test
out
mov
mov
mov
movsl
pop
leave
jns
xor
ffree
sbb
dec
imul
std
dec
xlat
push
fcomi
lods
jle
stc
mov
scas
xchg
cld
pop
outsl
not
cli
sub
jbe
or
mov
sub
or
inc
jne
int
add
sub
addr16
pop
sbb
push
add
push
xchg
aad
call
jnp
sub
dec
pop
xlat
int
sub
or
loopne
shll
flds
push
xchg
xor
es
addr16
lock
sbb
mov
cmp
and
fdivl
jge
inc
xchg
lret
xchg
inc
lock
cmp
hlt
xor
mov
shlb
sub
or
dec
stos
out
ret
pop
add
push
pop
add
lods
fsub
imul
mov
cmp
out
int3
gs
test
nop
jb
push
addl
jle
js
pusha
outsb
push
pop
in
loop
fs
pushl
sbb
xchg
jbe
popf
or
mov
rorb
add
dec
movsl
dec
stos
stos
push
xor
jmp
inc
outsl
aas
sar
aam
mov
xchg
andl
test
adc
lret
sbb
sub
inc
ret
inc
xchg
xchg
dec
jnp
scas
cli
jp
shll
fildl
fnsave
adc
adc
addl
mov
fs
jle
fabs
pop
cmpsb
push
and
mov
sti
ja
xor
sub
popl
addb
in
test
jg
xor
or
cltd
mov
test
lahf
dec
mov
pop
xchg
int
sbb
test
fcomp
rcrl
daa
aam
jmp
mov
push
pop
sti
in
popf
lea
push
pop
inc
ds
jne
fisubrl
ret
mov
pusha
loope
imul
inc
stos
test
dec
enter
outsl
aad
sbb
lea
imul
mov
mov
les
push
sbb
icebp
pushf
aad
mov
xchg
in
and
loope
pop
or
sub
shrl
add
inc
test
jnp
addl
subb
stos
sub
test
jmp
adc
inc
cmp
sub
cs
dec
pop
bnd
jmp
or
push
add
or
aaa
lret
and
repz
dec
and
fsubrs
dec
push
std
aad
sbb
sub
xchg
lock
rclb
xchg
mov
dec
adc
imul
cvtpi2ps
pop
and
arpl
and
xchg
push
cmp
sub
add
add
mov
jge
repnz
cmp
roll
insl
xchg
inc
lahf
adc
lds
movsl
lods
loopne
fstps
shlb
out
fs
add
inc
adc
lds
xor
sbb
lahf
jae
je
bound
xor
andl
or
mull
jnp
pop
mov
pop
cmc
addr16
in
dec
xchg
pop
imul
and
add
mov
out
push
addr16
aam
add
arpl
jne
test
push
shlb
mov
das
push
inc
and
lret
and
ret
jbe
addr16
pop
mov
mov
int3
mov
int
cmp
lods
adc
sti
mov
lcall
pop
data16
faddl
mull
mov
ds
jmp
arpl
xor
cmp
and
or
insb
cmp
mov
adc
add
leave
jg
xchg
cltd
shl
insb
fisubs
sbb
ljmp
cmpsb
inc
lea
ds
add
sub
sarb
dec
cld
fistpll
push
mov
clc
ret
nop
sub
lahf
sub
and
mov
out
ret
scas
add
test
push
sbb
dec
jecxz
loopne
push
jno
xchg
xchg
and
or
lds
adc
cmpsl
inc
pop
lahf
sub
sar
push
inc
notl
lcall
sarl
sub
cmpsb
lock
sub
adc
mov
mov
xchg
iret
cld
addr16
ds
push
mov
cmc
mov
mov
mov
outsl
popf
sahf
out
ret
test
cmp
popa
enter
ja
pushf
js
xchg
pop
dec
lahf
call
loope
fcmovbe
dec
hlt
mov
lds
lods
cld
lock
sbb
jecxz
nopl
fnstenv
movsb
sar
jg
jecxz
add
xchg
hlt
add
mov
xor
pusha
jns
rcl
fidivs
add
sub
cmp
fidivrl
adc
xorl
fisubrs
dec
lcall
aas
mov
std
inc
out
xchg
outsl
push
fcmovnb
pop
or
lds
dec
roll
xchg
mov
call
jp
inc
xor
lcall
xchg
mov
iret
cmp
pop
fdivrs
in
sbb
adc
xor
js
fwait
add
int
lea
add
mov
sbb
je
push
shrb
dec
and
mov
fs
bnd
lret
lock
cmc
mov
push
sub
add
mov
nop
or
inc
lret
add
dec
push
mov
xchg
add
add
mov
shrb
mov
in
cld
mov
lret
mov
arpl
into
mov
jnp
adc
idivl
jno
push
sub
inc
jbe
cwtl
fistl
mov
ljmp
xor
xchg
adc
cmp
cmp
shlb
adc
mov
or
lcall
add
and
cli
pop
cltd
add
xor
jmp
jo
pop
inc
ljmp
lcall
mov
ds
or
cli
sbb
pop
sub
xchg
dec
imul
add
mov
xlat
pop
mov
test
sub
dec
add
push
or
hlt
inc
xchg
popa
test
shl
leave
or
pop
lds
push
xorl
adcb
inc
cmp
inc
jae
sbb
enter
fcmovnbe
fisubl
push
adc
jnp
or
icebp
adc
fldl
mov
bound
mov
inc
xlat
fmuls
fcmovbe
out
jmp
inc
cld
jae
lds
dec
cmp
and
mov
loope
jbe
repnz
mov
outsb
mov
xor
out
push
or
jbe
les
cltd
add
inc
clc
int3
retw
dec
or
mov
xchg
sbb
sub
imul
rcll
mov
nop
inc
scas
les
cmp
add
sbb
inc
das
outsl
je
adc
xor
lret
lcall
stos
pushf
hlt
shlb
dec
mov
orl
leave
ficomps
fwait
incb
in
loope
mov
rclb
outsb
mov
xor
pop
leave
movsl
xchg
stos
adcb
fwait
adc
fcomip
add
dec
jmp
ret
xchg
ja
and
adc
pop
mov
pop
xlat
fcompl
pusha
fwait
lret
outsl
fidivrs
fidivl
or
cmpsl
inc
xchg
sub
mov
gs
inc
shlb
dec
imul
shll
hlt
out
subl
ds
in
push
dec
or
lcall
div
push
push
in
sbb
and
icebp
adc
pop
notb
pushf
xor
add
cmp
ja
sub
push
inc
shrl
xchg
inc
jp
in
sbb
fdivp
cmp
xchg
pop
in
mov
xlat
scas
dec
xchg
in
rorb
add
pusha
ret
subb
std
in
repz
fnstsw
cmc
xchg
mov
add
cld
xchg
xchg
xlat
mov
insl
inc
sbb
dec
push
xor
out
in
inc
les
jns
inc
adc
inc
jb
icebp
xchg
mov
dec
insb
leave
fstl
fdivrl
or
pop
sub
pop
pop
test
cltd
aaa
sti
pop
xor
mov
leave
xlat
aad
push
loop
and
lods
jno
stos
aam
sub
jno
push
stos
mov
lods
or
jno
cmpsl
roll
out
jp
enter
xchg
add
es
xchg
or
jnp
jp
jge
mov
xor
fwait
test
lea
dec
mov
xor
ja
sbb
cld
mov
sbb
out
data16
leave
mov
insl
imulb
jae
stc
mov
xlat
jns
add
jo
jae,pn
sbb
lds
add
fdivs
pop
inc
xchg
push
in
and
loope
push
jmp
aad
out
inc
ret
loope
cmc
fwait
outsb
xchg
xchg
mov
inc
enter
jne
mov
cmpsb
sub
lea
scas
add
jne
jecxz
bound
push
cmp
mov
xlat
call
mov
shl
push
inc
sbbb
add
pop
xor
cmp
inc
xor
in
dec
vpmaxsw
mov
hlt
xor
fbstp
fcom
inc
push
add
cmpsl
test
in
sti
int3
repnz
xorb
rorl
adc
loope
jg
add
addl
pop
mov
or
pop
add
add
test
aam
mov
sti
mov
loope
jns
mov
insl
xchg
pop
in
int3
adc
cmp
je
adc
adc
xchg
mov
in
bound
pop
into
jecxz
lds
add
mov
cmpsb
adc
cmp
dec
lret
push
xor
cmp
xor
and
das
frstor
test
inc
xor
arpl
fsubl
jg
popf
and
cwtl
addr16
lods
cmp
fdivl
cmp
rorb
sbb
pop
rcrb
mov
fs
mov
out
lret
pusha
jle
lods
jecxz
mov
adc
xchg
sub
roll
shll
bound
xchg
and
movsb
cmp
clc
pop
mov
push
dec
xchg
ss
fcmovnu
lods
pop
sbb
lret
stos
hlt
mov
jl
pusha
xchg
or
cmp
sbb
divl
ljmp
lahf
fwait
or
xchg
scas
mov
es
pop
into
xchg
fisttps
ror
shl
fcoml
dec
cli
pop
fwait
imul
pop
push
subb
jbe
fwait
sbb
popa
out
push
xor
out
fxch
in
mov
dec
lock
add
jmp
imul
out
lcall
clc
push
out
addb
popa
cmp
jmp
outsl
add
pop
adc
inc
add
fxch
int3
cmp
loopne
xlat
add
dec
xor
in
adc
dec
loopne
add
mov
add
add
test
xchg
jge
rolb
stos
jg
int3
cmpsl
cmp
sub
mov
adc
int3
xor
sbb
and
pop
shll
mov
fildll
mov
or
jno
nop
aam
pop
mov
jo
mov
ret
mov
lock
bound
xchg
push
sub
movsb
je
mov
loope
stc
push
inc
or
daa
daa
mov
aad
push
push
xorl
xlat
mov
inc
cmpsb
mov
dec
add
ja
in
in
shlb
mov
and
xchg
lds
ja
xchg
sub
sbb
xchg
das
sbb
rorl
fwait
pop
mov
inc
xchg
pop
cmp
aad
loop
xchg
stos
aas
mov
arpl
stc
push
ret
in
lcall
xor
daa
jnp
lds
add
pop
out
sahf
cld
mov
push
mov
sub
nop
inc
out
pusha
push
push
ja
scas
push
shrb
icebp
test
xchg
scas
add
arpl
jecxz
cmp
sbb
andl
push
mov
sahf
ret
sbb
mov
or
gs
popa
mull
fxam
push
mov
stos
mov
cmp
push
push
jp
fnstsw
into
adc
mov
mov
repnz
sbb
xchg
jbe
int
aaa
stos
lock
in
or
push
xor
jo
and
xlat
inc
or
fmul
movsb
negb
inc
mov
adc
mov
add
jns
icebp
xor
pop
data16
inc
outsb
shll
imul
inc
and
jp
xchg
jl
sbb
xchg
push
mov
nop
js
jg
xchg
rcl
mov
dec
push
mov
lcall
push
movsb
enter
push
sahf
fwait
outsb
outsb
mov
out
or
mov
lret
push
out
ljmp
std
jno
add
js
fs
sub
add
popa
cs
push
in
loop
sbb
mov
icebp
xor
sbb
xchg
or
ret
das
jmp
test
bound
xchg
jae
sbb
lcall
inc
outsb
ret
inc
cmp
ss
or
aad
hlt
lock
push
lods
jge
xchg
sub
sub
daa
movsb
cld
test
cmp
jbe
je
inc
mov
push
adc
test
push
inc
push
xchg
insl
mov
or
jmp
add
aad
xchg
lahf
mov
push
aad
xchg
jae
loop
mov
nop
insb
pop
iret
and
stc
push
fildl
dec
imul
jl
enter
int3
adc
mov
ret
pop
inc
mov
adc
sbb
mov
imul
adc
or
test
cmp
add
lods
lcall
and
mov
push
popf
fcomps
loopne
stc
or
cwtl
jg
mov
adc
and
and
aas
js
fucom
shl
add
or
stos
adc
mov
daa
mov
xchg
push
fwait
cwtl
arpl
mov
cmp
mov
movsl
mov
xorl
mov
and
bound
cltd
pop
push
jl
loop
sbbb
mov
and
aas
pop
std
mov
xchg
pop
fimull
push
movsl
int3
pop
sahf
add
inc
push
sub
leave
idivb
dec
inc
lds
ret
push
fisubrs
leave
fsts
or
xchg
aad
imul
loopne
and
push
lcall
fildll
sahf
and
shl
cmp
add
jecxz
mov
test
push
jae
andb
cltd
cs
or
fwait
push
data16
or
push
mov
pusha
sub
jl
jg
fiaddl
cltd
leave
add
jno
or
popa
dec
cmpl
xchg
xor
dec
xchg
rorb
sub
inc
les
or
sarl
sete
nop
jo
jg
ret
lahf
mov
xchg
fs
mov
call
or
xor
pop
sbb
mov
insb
movsb
xor
sbb
rorl
lods
jb
inc
adc
sbb
std
jmp
sub
mov
mov
and
out
cmp
rcrb
shrl
call
xchg
mov
add
stc
jno
add
int
repz
mov
adc
adc
jl
mov
adc
lock
xchg
sbb
stos
jne
sbb
dec
mov
fimull
add
cld
aam
inc
lods
cmpsl
cmp
repnz
cmpsl
xchg
hlt
flds
aaa
push
mov
outsb
ljmp
icebp
adc
xor
aad
or
inc
and
and
out
mov
or
adc
pusha
fisttpll
aaa
push
and
add
jl
sub
sbb
jb
out
in
test
inc
lds
in
inc
dec
push
sub
mov
daa
test
pop
mov
mov
loop
jns
sbb
out
pop
dec
mov
sub
leave
jb
orb
hlt
ja
push
lods
nopl
sub
inc
jae
leave
lods
sub
repnz
mov
stos
inc
or
roll
addb
dec
fcmovnu
sbb
xlat
push
fs
mov
mov
inc
push
add
mov
out
mov
jne
xchg
xchg
push
fwait
mov
pop
xlat
shrb
dec
pop
jns
mov
xchg
push
fmulp
rol
aam
push
out
push
dec
mov
stos
call
jge
je
mov
xor
mov
push
push
stos
fmull
mov
pop
ret
stos
movsb
sbb
push
pop
adc
cltd
rcrl
loop
xchg
pushf
mov
je
xchg
xor
rcrl
jecxz
adc
xchg
xchg
enter
mov
fbld
rorl
pop
mov
and
push
outsb
les
loope
int
mov
and
ret
adc
out
xchg
mov
xchg
stos
dec
jns
movsl
inc
push
enter
sbb
mov
pushf
roll
jl
xor
adc
sub
fmul
pop
aad
enter
and
stos
in
dec
pop
call
pop
and
rorb
or
xor
jno
shlb
bound
filds
mov
and
iret
outsb
and
mov
push
dec
cmp
mov
mov
xchg
push
sbb
push
faddl
mov
adc
jge
inc
push
add
pop
jmp
mov
dec
out
nop
xchg
adc
sub
and
or
lock
lds
into
sbb
mov
cli
rorl
aaa
cmp
daa
int3
aaa
sub
pop
ret
stos
xchg
sub
mov
call
in
in
adc
push
subb
mov
jg
inc
psrad
or
pop
dec
out
test
and
jge
inc
pop
ret
popl
out
insl
mov
pop
fldcw
or
arpl
jbe
std
pop
fisubl
test
push
adc
in
jp
pop
jnp
stc
fsubr
push
adc
adc
and
jnp
cmp
jnp
cltd
inc
dec
jne
sub
inc
and
outsl
cmp
out
xlat
test
push
mov
fdivrs
xchg
or
jae
aas
jb
xchg
adc
push
mov
and
cmp
test
lahf
out
dec
sarb
pop
rolb
xorl
sahf
hlt
xchg
in
xchg
mov
inc
adc
xor
leave
dec
cwtl
jl
or
inc
imul
jl
imul
push
mov
push
xchg
xor
xor
jno
dec
ss
call
cmc
fsubrs
pushf
into
aam
fisubrl
push
xor
daa
jge
in
adc
rolb
cs
fistps
aad
or
ljmp
add
xor
stos
lods
enter
sbb
inc
adc
sbb
mov
loopne
adc
sahf
mov
stos
lret
mov
rclb
leave
adc
iret
cmp
pop
out
xchg
lock
popa
arpl
pop
push
xor
clc
hlt
or
popa
aaa
scas
loop
leave
and
and
mov
scas
orb
cmpsl
cmc
mov
sbb
xchg
rcrb
js
inc
jle
mov
dec
add
push
dec
push
inc
je
lock
jmp
out
insl
fwait
loope
inc
pop
sbb
dec
jp
out
inc
adc
cmp
dec
push
jecxz
sbbb
push
sub
jp
scas
fsubrs
repnz
data16
jb
lret
movsl
push
in
and
lods
mov
addr16
cmpsb
enter
cmp
jge
pop
sbb
subl
xor
dec
mov
dec
call
enter
lock
shll
es
cmpsb
mov
push
ret
aam
cmp
push
or
les
repz
lods
lock
std
pusha
shll
add
lret
jmp
movsl
jle
mov
jno
push
xchg
fcmovb
mov
jne
push
mov
lds
adcb
adc
xchg
imul
lahf
aam
call
mov
and
or
arpl
rcrb
pop
cmp
pop
xchg
pop
in
xchg
shlb
in
mov
mov
ljmp
and
xchg
ficoms
and
loop
stc
inc
fbld
mov
popf
lods
push
loope
ljmp
adc
mov
sbb
dec
cwtl
add
sbb
push
mov
xchg
into
xor
push
xchg
sbb
test
call
or
into
sbb
scas
jle
cmpl
pusha
add
lods
push
les
push
jb
sbb
or
or
pop
and
jecxz
clc
inc
add
ret
mov
xchg
inc
lcall
jge
cmc
or
and
sti
enter
addb
lods
icebp
cli
jb
mov
xchg
stos
sub
fimull
adc
xchg
pop
push
xlat
push
xchg
fsubl
mov
add
cmp
sti
push
mov
in
mov
movl
xor
ret
fnsave
adc
out
and
jns
add
lock
pop
jg
imul
mov
movsl
xchg
push
loop
cs
dec
inc
sub
mov
stc
push
dec
mov
pusha
loopne
sbb
mov
or
dec
sbb
fisttpll
add
inc
in
std
pop
push
lret
add
repnz
lret
mov
push
pop
outsb
and
ljmp
cmpsl
lods
les
aad
out
jl
xor
out
enter
je
in
xchg
out
out
pushf
mov
sbb
loope
pop
xor
sbb
add
ljmp
fcmovnbe
imull
mov
call
jmp
sub
push
in
sbb
jp
cli
xchg
or
rclb
les
mov
cmp
cmpsl
lret
or
sub
pop
pop
mov
dec
test
inc
addr16
inc
mov
aas
ds
mov
sbb
sbb
adc
sbb
loope
in
mov
outsl
popf
mov
imul
bound
mov
pop
je
fstps
sub
arpl
sbb
popa
fsubrs
push
daa
sub
outsb
dec
push
sbb
lcall
push
jecxz
add
hlt
pop
xchg
adc
out
push
jo
into
gs
cli
mov
lods
mov
ret
jbe
and
sbb
movsb
lds
push
jmp
loope
sbb
or
mov
adc
inc
in
mov
mov
incb
mov
inc
rorb
mov
cmc
and
sbb
into
mov
int3
and
into
sub
push
push
cmc
mov
or
lahf
mov
arpl
sbb
adc
cmpsb
inc
bound
je
lods
cmp
out
in
inc
aam
lock
dec
out
ret
mov
fbstp
sbb
mov
push
push
sar
dec
lea
leave
or
and
je
or
jbe
testl
xchg
stc
in
fwait
pushf
dec
ja
les
lahf
cmp
adc
negl
pop
imull
sahf
xchg
dec
mov
fst
cmpsl
adc
jns
inc
or
insl
shll
stos
mov
xor
aas
lret
push
cmc
xor
adc
lds
pop
sarl
sbb
cwtl
xor
andl
scas
lcall
in
cmpsb
lds
push
pop
mov
inc
jle
orl
shll
lock
adc
fidivs
das
in
mov
fwait
pop
mov
andb
mov
xchg
mov
frstor
jb
cli
ret
xor
cwtl
mov
push
gs
push
in
adc
out
push
inc
sub
cmc
leave
aam
pop
cmp
xchg
cmp
test
push
inc
pmullw
bound
add
nop
sbb
scas
mov
lcall
in
add
aad
lods
xor
pop
cmp
test
outsl
nop
inc
jecxz
mov
adc
mov
jge
pusha
or
repnz
xor
push
or
and
mov
pop
pop
jb
mov
clc
xor
or
lods
shll
test
xchg
xlat
jecxz
jb
call
out
in
gs
xor
loop
ss
nop
cli
clc
out
rcr
mov
push
mov
inc
mov
dec
mov
xor
in
mov
sbb
loop
adc
imul
fldt
aam
mov
sti
icebp
cmc
xor
push
loope
aas
and
sbb
push
lock
lods
xchg
pop
arpl
push
adc
sbb
mov
rcr
fistps
in
push
addr16
stos
pop
adcb
lret
mov
xor
adc
loop
imul
in
adc
loope
cmp
push
loope
inc
leave
insb
lods
cmp
sbb
cmp
inc
or
sarl
movsb
cmp
mov
pop
lcall
add
cwtl
xor
dec
mov
mov
ftst
or
adc
add
mov
fistpl
pushf
jp
addr16
stos
xor
insl
jo
cmp
mov
std
sbb
movsl
xchg
in
shl
in
dec
jp
cmpb
mov
xor
sbb
mov
int
jmp
sarb
fnstsw
sbb
test
out
sbb
inc
insb
test
fnsave
push
outsl
or
test
aad
or
in
or
sub
in
call
mov
sbb
adc
into
mov
jmp
int3
inc
movl
aam
into
mov
call
mov
in
loopne
bound
lods
xchg
push
or
fs
nop
and
xchg
ffree
adc
pop
insb
jb
mov
inc
andl
pop
sbb
pop
outsl
and
outsb
and
mov
mov
cmpb
ljmp
push
popa
aam
adc
popa
pop
pushf
in
inc
insb
xor
lret
pop
jae
movsl
fs
sarl
pop
cmp
mov
mov
nop
call
stos
push
dec
adc
bound
xchg
aad
adc
add
test
cld
add
popf
loopne
adc
and
adc
xchg
push
adc
push
das
lea
cld
int
and
lock
stc
loopne
pop
loope
std
fadd
mov
cld
out
lds
dec
jnp
loopne
mov
in
jmp
orl
ljmp
call
push
and
jne
stos
inc
repnz
or
or
xchg
add
call
sub
and
xchg
dec
lret
mov
sub
sub
hlt
popf
push
inc
and
or
bound
notl
fisubrl
xchg
out
out
add
cltd
ficompl
sbb
movsl
negl
mov
sbb
add
jnp
push
mov
push
orb
mov
sub
adc
pushf
push
add
outsl
inc
add
jl
cmc
rolb
std
mov
adc
and
mov
stc
ret
pop
or
mov
xor
pop
and
daa
add
add
push
lds
sbb
adc
xchg
push
lret
daa
pushf
cli
clc
push
and
fcomps
loop
xchg
jns
push
sbb
popa
pushf
pop
mov
mov
add
mov
or
out
imul
lret
inc
dec
push
stc
pop
outsb
dec
shll
and
in
sti
dec
pop
rcll
pop
push
dec
test
lock
fidivl
push
mov
out
adc
mov
sbb
flds
adc
jae
rcrb
pop
xchg
shl
inc
push
ds
jnp
mov
hlt
xchg
xchg
mov
pop
add
xor
and
in
dec
fwait
fwait
xor
xchg
testb
cmc
out
frstor
push
scas
sub
sbb
or
dec
fsubrp
mov
cmp
test
push
or
xchg
ret
test
cmp
mov
addl
sub
pop
stos
pop
sub
cmovp
mov
mov
jae
js
lret
push
repnz
xor
sarl
out
cmc
rcl
sbb
stos
adc
repnz
mov
stos
psubq
out
out
push
outsb
in
xchg
inc
loop
inc
mov
stos
adc
jno
leave
and
mov
xchg
push
pop
loop
in
in
mov
je
out
es
shlb
cmc
mov
fldt
adc
js
inc
test
xor
out
xchg
enter
sub
fxch
and
or
insb
push
xchg
pop
sub
jmp
lods
pop
adc
pop
jns
addb
mov
movb
fucomi
cmp
lea
pop
lcall
inc
mov
push
pop
out
aaa
fsubrl
push
pop
setne
dec
inc
rolb
xor
int
dec
adc
pusha
popf
mov
and
cmpsl
or
inc
xor
iret
and
push
cmp
jmp
lahf
xchg
xchg
int3
or
out
int3
nop
icebp
jno
aaa
imul
mov
xor
out
popa
les
out
xor
cmp
ret
rolb
test
xchg
mov
ret
mov
aad
daa
cmp
sub
movsl
ljmp
lcall
shl
xchg
lret
std
nop
insl
movsl
dec
into
xchg
adc
notl
call
push
test
test
data16
cld
sbb
popf
adc
push
sahf
jb
lahf
nop
das
jo
adc
push
adc
das
nop
stos
sub
sbb
lock
sbb
xor
adc
push
das
push
sbbl
jmp
adc
jle
push
xchg
mov
mov
sahf
mov
mov
shlb
mov
push
rcr
adc
add
cmc
cli
cmpsl
data16
je
fwait
bound
inc
jp
dec
mov
movb
cld
stc
jge
cltd
mov
add
sub
lret
xchg
js
test
out
outsb
pop
int3
jmp
idiv
insl
mov
inc
pop
xor
fs
xchg
xor
inc
cmc
push
or
cltd
pop
fnstcw
and
push
sub
test
mov
lds
sub
lock
leave
outsb
jbe
mov
sti
push
lahf
cwtl
jb
sti
and
cmp
mov
shll
adc
stos
int3
mov
es
xor
push
cltd
sbb
push
out
je
dec
pop
mov
xchg
in
push
adcb
mov
data16
out
bound
mov
les
pop
xchg
mov
repz
jg
leave
add
push
mov
bound
sub
push
ljmp
push
cmp
or
cltd
les
pop
jge
repz
bound
jge
setne
sbb
mov
jns
fsubl
out
push
xchg
cmp
add
sbb
sub
add
pop
pop
jecxz
xlat
add
jge
add
into
lds
and
es
lahf
fwait
xor
add
and
add
mov
jmp
inc
cwtl
iret
push
push
test
jno
or
out
xchg
mov
jne
rcl
pushf
rclb
pusha
fbld
pmaxub
cltd
fisttps
sbb
out
inc
dec
push
xchg
hlt
and
mov
stos
or
inc
mov
hlt
scas
xchg
out
pop
mov
xchg
push
and
test
aas
mov
add
dec
inc
xor
in
sahf
fnstenv
pusha
fcomps
daa
and
xchg
cli
cmp
sub
jnp
and
fadd
jno
popa
punpcklwd
sbb
stos
fcomps
loope
push
and
loopne
cli
and
sbb
aad
cmpsl
das
xchg
pop
call
idiv
lahf
mov
outsb
in
cltd
xchg
cwtl
cltd
lahf
cmp
jecxz,pt
filds
jbe
mulb
mov
sbb
add
test
loopne
std
xchg
inc
fcmove
sti
mov
lds
mov
dec
sbb
jp
cmp
hlt
rorb
jecxz
inc
jecxz
in
sbb
jns
das
leave
lret
sbb
shrl
inc
and
xchg
into
out
aas
sahf
xorb
push
xchg
push
lret
clc
add
cltd
push
out
stos
mov
insb
jbe
rclb
adc
mov
shlb
popa
pop
or
iret
fisttpl
sub
fsts
hlt
inc
ret
mov
fs
enter
in
pop
or
in
inc
xlat
and
aaa
cmp
add
cmpb
jmp
xchg
pop
push
push
ficoms
in
jp
imul
popf
jnp
sub
fmul
cwtl
aas
fwait
adc
je
xor
clc
insl
and
xchg
dec
add
xchg
add
mov
and
js
add
add
gs
xor
in
adc
ds
mov
outsb
rcrl
call
roll
daa
dec
bound
pushl
sbb
sbbb
mov
push
dec
and
repnz
scas
cmp
or
data16
jbe
mov
adc
sbb
ss
push
adc
adc
dec
push
stos
sub
push
fucomip
mov
in
in
lahf
clc
pop
add
or
in
lea
xchg
fcomps
xorb
cli
sti
push
push
fcompl
jle
add
cld
mov
jecxz
fstl
cvtpi2ps
in
roll
mov
pop
shl
pop
dec
imul
mov
dec
lahf
loope
pop
push
and
jge
sbb
popf
lods
push
cmc
in
sbb
add
insb
mov
icebp
sub
push
or
adc
jmp
sti
pop
jecxz
add
xchg
out
addb
shlw
sub
sarb
cli
cmp
add
add
xchg
outsb
or
rol
mov
sbb
pop
mov
movsb
loope
mov
std
push
out
std
sub
cmp
pop
addr16
jno
pop
test
lock
xbegin
mov
pop
push
adc
outsb
add
adc
loop
fiaddl
pusha
pop
and
inc
add
andb
dec
fistps
jnp
xchg
test
add
fimuls
xchg
scas
scas
pop
adc
aam
sub
push
movsb
mov
popa
in
fs
mov
lret
and
outsl
ss
outsb
xlat
out
cmp
jb
loop
adc
mov
xchg
mov
or
jo
stc
sub
mov
sub
sub
and
ret
stos
inc
out
iret
comiss
mov
cmc
lcall
das
xchg
adc
pop
repnz
movsl
lods
andl
inc
adc
daa
aaa
stos
sbb
jne
incl
pop
add
shl
dec
xor
and
push
fdivrl
data16
inc
popa
and
mov
cmpsl
xor
sub
pop
testl
dec
dec
hlt
pop
mull
push
mov
jae
adc
add
push
mov
mov
cwtl
mov
xor
scas
sbb
mov
jnp
cmpsb
iret
mov
and
push
adc
sbb
fsts
loope
xor
and
lret
daa
xor
cmp
into
mov
mov
xchg
scas
into
xchg
jnp
rcll
cli
bound
xchg
pslld
in
mov
sbb
xlat
ret
lods
nop
push
cmp
cmp
es
pop
jo
mov
adc
aam
in
xchg
hlt
ljmp
movsb
cmp
jmp
sar
jl
inc
sub
xor
pushf
xchg
add
pusha
mov
stos
and
push
ja
push
cmpsl
and
add
lods
movsb
cmc
push
mov
mov
lret
push
adc
aam
subl
lret
mov
test
mov
lea
or
lahf
inc
lret
fwait
mov
add
xchg
loope
sub
xchg
or
data16
dec
jnp
and
js
dec
sbb
cltd
jno
mov
jp
loopne
push
testl
repz
lods
and
jecxz
daa
sbb
add
je
call
sub
mov
adc
xor
inc
or
cltd
test
jp
xor
xchg
aas
cmp
fnstsw
call
push
push
into
push
adc
mov
cs
popf
outsb
fistps
fwait
cmp
stc
mov
xlat
or
dec
jmp
aas
icebp
xchg
sbb
das
outsl
lds
adcb
pop
enter
aam
mov
inc
cmpsb
inc
cmpsl
and
mov
mov
aaa
in
sub
fnstenv
xchg
fstpl
sbb
xchg
pushf
mov
std
and
mov
insb
lahf
push
daa
shll
dec
xor
xchg
xchg
push
push
mov
xchg
leave
iret
push
cmp
dec
or
sub
pop
mov
inc
adc
pop
adc
fmuls
sub
inc
lods
sarl
repz
add
nop
repz
fisttps
cmp
or
subl
mov
pop
sub
mov
pop
xchg
sub
lds
cmc
imul
sbb
cmpsl
pop
jne
out
mov
adc
dec
pop
add
cltd
outsl
and
or
into
rep
inc
jmp
insl
push
test
jb
add
add
xchg
sarb
and
sar
inc
pop
pop
dec
mov
test
ljmp
adcl
mov
add
xor
inc
fsubl
fisttpll
jbe
add
int
cli
repz
and
mov
jo
fcompl
inc
fistps
sbb
out
sub
loopne
subl
dec
int3
rolb
roll
pop
cli
ljmp
sbb
repnz
sbb
movsl
subl
es
iret
cmp
xor
rcl
nop
push
dec
add
in
rcrl
push
push
aad
insb
mov
or
loope
movsl
sbb
push
cmp
loope
lret
int3
cwtl
add
test
xchg
pop
std
das
out
push
or
out
pop
push
and
inc
ds
fsub
cmp
loope
cld
das
push
lret
add
les
dec
addl
fisubl
pusha
or
lret
in
dec
pop
jle
push
pop
add
adc
dec
mov
es
icebp
pusha
movsl
cltd
stos
push
hlt
lret
enter
aam
aam
arpl
out
inc
sti
loop
popf
fwait
push
test
bound
lret
cmpsl
mov
and
jge
jmp
mov
inc
decb
and
add
jns
add
xchg
int
jp
adc
xchg
loop
adc
cltd
inc
or
mov
sub
popa
xlat
arpl
jecxz
inc
stos
in
iret
add
jg
cmp
arpl
insl
out
icebp
sbb
popa
sub
dec
xor
movsb
dec
popf
mov
clc
jb
mov
xor
addw
cwtl
shr
mov
lret
sub
jl
insl
lock
in
scas
aam
les
nop
add
inc
add
push
imul
icebp
xor
xchg
xchg
insb
sti
out
sbb
dec
and
js
pop
fistps
call
dec
rcrl
lret
xor
testb
pop
and
stc
lock
rcl
mov
insl
mov
imul
mov
pushf
or
sbb
jns
test
pushf
lods
je
or
mov
xchg
mov
cwtl
jne
cwtl
fucomi
adc
xchg
jnp
enter
sub
stos
arpl
sub
cmovge
jg
cmp
adc
popa
add
inc
dec
jbe
je
jg
jbe
or
push
sub
pop
shr
sti
pop
mov
rorb
fstpt
les
int3
xchg
inc
mov
shll
pop
rcrb
movsl
std
sbb
mov
pusha
or
jns
dec
outsb
ss
push
cmp
push
mov
into
cmp
mov
sub
mov
push
sti
stos
clc
sub
stos
and
outsl
and
pop
test
dec
mov
cmc
std
and
jge
scas
xchg
adc
sbb
jle
sarb
adc
mov
mov
pop
enter
arpl
inc
adc
pusha
jae
fxch
lds
xor
pop
xchg
shll
pushf
mov
aas
jne
mov
popf
jae
pop
fistpll
add
movsb
add
cwtl
pop
andb
test
dec
sub
fs
push
push
rorl
xchg
daa
mov
push
dec
sub
pusha
sub
dec
mov
je
mov
or
pushf
mov
out
lock
push
addb
jo
int3
inc
rcrb
fidivl
scas
add
ret
fs
pop
in
xorb
in
jb
mov
jg
sbb
movsb
inc
ret
cltd
incb
cmpsl
mov
call
fdivp
xchg
xchg
pusha
lods
or
sbb
enter
adc
add
data16
inc
pop
jp
popf
inc
orl
loope
insb
jecxz
adc
pop
loope
push
xlat
movsl
shlb
dec
roll
popa
push
and
popa
push
inc
out
popa
xchg
shrl
mov
or
push
xlat
and
aam
push
out
in
aad
pushf
int
dec
sub
insl
xor
jne
pop
push
mul
cmp
mov
out
int3
in
daa
rcrb
test
sbb
les
mov
add
rcl
add
xor
lods
jns
ljmp
sti
add
adc
mov
orb
xchg
mov
xor
ss
nop
mov
ret
adc
or
mov
dec
sbb
or
or
or
dec
jge,pn
inc
aas
fimull
outsb
ja
test
loopne
shl
jae
jmp
mov
sbb
add
cs
sub
notb
aad
pop
das
sub
aas
sbb
lcall
xor
sbb
sbb
test
mov
insb
js
idivb
sub
je
jns
adc
aam
fisubrs
in
sahf
gs
jmp
mov
movsb
jp
je
fisubs
and
call
rcl
mov
jmp
loope
add
stos
cwtl
shrb
jb
cmp
lret
test
cwtl
push
jle
repz
call
sub
repnz
jecxz
jg
fildll
rorb
das
decb
mov
push
xchg
xor
loop
lret
fwait
cs
xor
testb
adc
daa
push
stos
aam
std
xchg
out
rcl
pop
mov
push
sbb
loopne
sub
sti
xchg
ljmp
or
and
mov
rcll
arpl
stos
mov
mov
mov
pop
js
icebp
xor
or
cs
ret
repnz
push
loope
mov
push
cmp
int
jae
sbb
insl
icebp
inc
xchg
fwait
mov
sbb
sbb
pop
js
fistps
insl
pusha
sub
sti
and
and
xchg
jle
dec
jle
std
test
sbb
test
adc
add
fadd
cltd
mov
mov
push
mov
mov
sub
imul
sbb
mov
aad
hlt
mov
ljmp
and
aad
pop
mov
jns
shlb
dec
xchg
insl
daa
cmp
and
int3
das
movsl
fwait
in
or
ljmp
push
es
loope
and
shrb
daa
adc
push
aas
adc
add
in
and
cltd
fcoms
fdivrl
xlat
xor
mull
add
cwtl
scas
dec
mov
xor
pop
test
adc
shll
xor
inc
pop
arpl
rcrl
aam
gs
xchg
aam
push
paddusw
xor
push
lcall
cmpsl
popa
call
xor
pop
aad
mulb
ret
adc
mov
sbb
mov
pop
mov
lret
jns
add
test
sub
inc
mov
enter
push
mov
ror
iret
sbb
test
cli
idiv
or
addb
cmp
inc
add
adc
pop
jl,pt
mov
dec
sbb
pop
je
sub
dec
inc
mov
xor
adc
lret
xchg
mov
mov
xchg
cs
jne
dec
ja
aam
or
add
mov
add
rorl
mull
pop
mov
xchg
xor
fcmove
mov
arpl
subb
or
in
fst
js
loope
cwtl
loope
sbb
iret
aas
es
arpl
dec
fbstp
pusha
xor
gs
or
in
frstor
inc
xlat
in
mov
stos
ret
mov
pushf
mov
loopne
mov
int3
add
mov
lret
aas
movsb
or
pusha
loop
sbb
mov
aad
fsubrs
lds
mov
aam
sub
xchg
adc
shlb
push
xor
or
cmp
std
and
lret
rcll
pop
mov
fnstsw
and
ljmp
cmp
in
ret
loope
and
or
mov
xchg
out
sbb
mov
or
push
in
add
arpl
scas
nop
mov
sub
mov
inc
add
pop
bswap
push
jl
ds
sti
xorl
and
movsl
and
and
dec
outsl
jp
ljmp
loopne
lahf
test
mov
stos
sbb
sub
mov
dec
mov
out
scas
jecxz
je
jmp
loope
or
outsl
sbb
and
cmp
add
dec
orb
filds
fiaddl
test
nop
out
push
push
mov
out
insb
dec
xchg
cmp
out
xchg
and
sub
or
add
add
or
cwtl
inc
dec
addr16
or
mov
ljmp
in
lahf
pop
or
rcl
cmp
xor
mov
rcl
xor
jae
pusha
xor
push
scas
pop
mov
test
inc
push
lcall
pusha
outsl
fbld
cld
inc
aad
add
sub
mov
jmp
fcmovbe
adc
stos
mov
sub
jno
aad
data16
aad
mov
cmc
mov
xor
sub
sub
xor
sbb
shl
push
dec
pop
xlat
sub
and
sub
outsl
das
sbb
std
or
lods
adcl
in
dec
add
aad
push
jne
cmp
and
jnp
lcall
inc
mov
addl
inc
jp
out
add
les
cmove
lea
les
icebp
or
mov
rcrl
cmp
aam
int3
mov
pop
fwait
xchg
ret
cmp
hlt
xor
mov
adc
adc
xchg
sarb
mov
es
std
aad
cmc
push
andb
or
iret
test
cmp
test
jecxz
ret
out
cli
dec
fcompl
pop
out
pop
push
repnz
push
inc
bound
ss
jns
mov
pop
push
xchg
inc
sbb
pop
xchg
xor
lock
and
inc
jne
adc
fcmovnu
mov
outsl
lds
push
xor
lea
aam
insb
adc
inc
mov
sub
ret
mov
in
sub
mov
xor
shrl
data16
push
aas
adc
mov
cmp
test
mov
daa
mov
gs
mov
push
pop
cld
push
sbb
outsl
out
push
sub
mov
fucom
xchg
xlat
add
push
jle
push
loop
pushf
add
call
lahf
stos
jl
enter
dec
rolb
add
pop
pop
mov
inc
lods
sti
inc
jp
and
mov
fidivrl
push
fcoml
mov
mov
push
dec
jecxz
pop
lret
mov
cmp
and
mov
and
inc
nop
cwtl
movsb
pushf
sti
je
jp
icebp
call
vminpd
in
rcr
and
xlat
insb
mov
pop
lods
nop
mov
out
mov
add
insb
xorb
cmp
shlb
sbb
add
packsswb
aad
sub
adc
fsubs
jo
push
cmovl
andl
mov
pop
lock
and
sbb
mov
add
shlb
or
sbb
mul
dec
filds
gs
cli
xchg
sub
mov
das
aaa
push
stos
mov
sbb
imul
ret
stos
adc
arpl
fsubrs
xchg
mov
push
xlat
imul
xor
push
popf
shlb
sbb
mov
fxch
inc
xchg
out
xor
xor
dec
inc
pusha
xor
into
inc
xchg
ja
nop
mov
adc
shlb
mov
rcrl
xchg
or
mov
ljmp
sub
pop
test
pop
mov
int
or
add
out
loopne
adc
sbb
nop
jb
aam
pop
mov
sahf
std
test
xchg
adcl
ret
sbb
mov
lods
adc
or
inc
xor
fwait
addr16
subb
cli
imul
neg
out
sub
loop
add
adc
mov
repnz
sub
gs
push
mov
xchg
out
pop
insl
sbb
push
xchg
or
push
jecxz
into
les
lret
sub
fiaddl
faddl
int
das
fimuls
lcall
fildll
add
or
addl
les
cmpsb
xor
sub
fisubs
in
mov
pop
mov
jecxz
test
adc
pusha
sub
inc
push
dec
into
icebp
xchg
aam
cmpsb
add
adc
mov
or
cld
jnp
pop
xor
add
std
jp
push
mov
add
sar
orb
clc
inc
fsub
icebp
loope
clc
jnp
out
in
daa
xor
cmpsl
sbb
lcall
pusha
out
dec
mov
leave
lods
adc
in
xor
adc
xchg
sub
and
outsb
cmp
and
ret
aad
adc
popf
imulb
imul
imul
addl
es
adc
cs
pusha
lock
pop
mov
jns
mov
add
mov
test
negl
rorl
stos
xor
imul
frstor
jno
sar
popa
mov
mov
xstore-rng
cmpsl
les
icebp
test
mov
lahf
xor
rcrb
dec
in
mov
pop
rep
movsb
jmp
jmp
dec
test
jge
dec
pop
jl
push
repnz
adc
dec
clc
mov
stos
stos
jbe
push
add
mov
jae
imul
icebp
pop
aad
fs
shll
icebp
shl
push
pop
in
jl
dec
mov
es
xchg
xchg
xor
bound
mov
imul
mov
pop
bound
dec
sbb
add
std
fcmovnbe
loop
pop
mov
and
add
push
inc
sarb
mov
or
fnstenv
aad
mov
xchg
jnp
add
xor
imul
popa
jmp
push
icebp
xchg
ret
xorb
cmc
in
add
mov
xchg
adcb
rorb
test
push
insl
jb
push
aad
cs
sbbb
lods
daa
fnsave
lea
xchg
cmp
stc
popa
mov
sbb
pop
pusha
ljmp
push
neg
inc
insb
add
out
sbb
movsb
add
mov
out
jmp
int3
jbe
ret
sub
enter
movsb
fcoms
lret
jecxz
inc
jnp
jecxz
cs
jo
dec
loope
or
sub
pop
int3
cld
out
jecxz
out
popf
push
add
movsl
in
leave
fimuls
push
in
int3
testb
jp
pop
ja
jecxz
inc
xlat
adc
push
xor
jbe
outsb
xchg
shlb
add
jne,pt
and
aam
fcom
addb
aas
adc
test
shr
lret
lea
notb
hlt
mov
push
or
dec
test
int3
cld
lcall
or
aam
jne,pn
out
sahf
ret
fcmovb
pop
frstor
dec
dec
fld
sahf
stos
and
rorl
insb
lds
lock
repnz
std
xchg
test
shrb
imul
outsb
mov
lea
xorb
fisttps
dec
std
inc
mov
or
shlb
aas
mov
ja
inc
cmp
sbb
cld
ret
popf
cmpsl
adcb
xchg
mov
xchg
xchg
lds
pushl
pop
insb
push
push
mov
pop
cltd
shll
les
in
ljmp
jmp
mov
mov
fwait
stos
pop
push
lahf
lret
adc
jae
test
lods
fsubs
mov
adc
popf
ffreep
cmp
adc
rolb
mov
pop
andl
push
call
mov
mov
int
mov
cltd
rcrb
leave
fadd
and
stc
mov
push
in
popa
pop
xor
and
cmpsl
movsl
movl
inc
stos
mov
sub
rcrl
adc
lret
adc
mov
add
ljmp
aad
xor
in
lret
and
aam
sbb
and
cmp
fdivr
jp
jbe
add
hlt
das
fidivs
insl
add
mov
stc
sti
into
add
enter
pop
clc
push
lcall
sbb
mov
addb
mov
outsl
repz
push
rcrb
dec
adc
sbb
xor
out
daa
cmc
mov
iret
fsub
das
pusha
jl
cli
cmpsl
inc
cmp
dec
jbe
pop
jbe
adcl
pusha
loop
lods
loopne
ss
test
or
jns
xchg
js
mov
cmp
sbb
mov
or
into
mov
pop
mul
add
and
cwtl
clc
call
cmp
add
test
jnp
jge
cmp
mov
or
cld
xor
dec
add
es
popf
push
or
stc
push
adc
sbbb
inc
inc
subl
imul
mov
pop
xor
xchg
aaa
add
and
xchg
sbb
stc
inc
xchg
fcoms
test
movsl
movsl
aam
add
test
mov
pop
mov
lret
in
pop
and
fstpl
lret
add
nop
popa
stc
mov
mov
jl
icebp
xchg
mov
jecxz
mov
aam
add
movsl
mov
ss
sbb
cmp
aaa
pusha
mov
shl
ret
test
fwait
cwtl
dec
in
lds
ss
jp
or
in
mov
movsl
in
les
sbb
cmpsl
outsb
sbb
hlt
int
push
lds
xchg
add
addl
cmc
sub
div
sbb
push
loop
push
aaa
and
mov
lea
push
cs
adc
jmp
fiadds
inc
and
dec
ret
and
or
movsl
mov
mov
add
imul
mov
and
jecxz
and
adc
push
fcmovbe
jl
in
cmpl
imul
add
or
loop
mov
xchg
aad
fstps
sub
in
inc
lds
cmp
lods
lea
int
in
pusha
arpl
pop
pop
sub
in
push
xchg
add
jmp
imul
add
popa
rol
mov
xor
jl
and
sbb
ljmp
stos
pop
sub
ret
xlat
aaa
xor
sub
dec
test
add
sub
outsb
adc
xlat
ret
push
out
jbe
dec
loopne
lds
xor
mov
inc
push
movb
add
mov
stos
loop
rcrb
daa
pop
add
inc
sbb
sub
in
test
insb
lret
pop
icebp
dec
pop
jnp
out
ds
iret
push
cmp
mov
mov
mov
and
cmp
add
aas
jge
insb
js
mov
lret
adc
mov
xor
mov
insl
icebp
iret
dec
fsts
xor
mov
jo
mov
lret
sbb
push
repz
inc
loop
add
mov
sub
push
dec
sbb
push
aaa
pop
lock
idivl
arpl
bound
enter
sbb
in
or
or
enter
or
lcall
or
ja
jmp
push
leave
adc
xor
inc
loop
push
jne
and
jecxz
nop
cmp
mov
nop
ljmp
mov
mov
jo
mov
push
xchg
dec
jge
test
jne
add
adcb
mov
icebp
inc
cltd
decl
cltd
add
mov
js
jbe
dec
dec
cmp
ja
sbb
cld
jne
xchg
mov
data16
dec
fidivrl
nop
testb
cwtl
sub
loop
sub
mov
sbb
mov
jge
dec
js
fcmove
sub
decl
ljmp
sti
jne
daa
pop
or
mov
stos
pop
mov
push
in
mov
lods
xor
fs
jecxz
and
xchg
std
adc
loopne
repnz
cli
lea
xor
adc
push
or
rcll
lock
mov
cmpsl
subl
int
movsb
lcall
frstor
aad
push
mov
ss
jb
pop
add
leave
insb
xor
loope
sbb
xor
or
arpl
dec
xchg
add
jno
jecxz
inc
xchg
fsts
mov
mov
push
jbe
pop
add
jno
lds
je
ret
sbb
pop
add
insb
inc
shlb
roll
jmp
xchg
bnd
jmp
or
pop
in
loopne
mov
shrl
rcl
xor
hlt
adc
lock
pop
adc
pop
inc
sub
mov
mov
scas
xor
ret
xor
xorl
add
dec
in
rorl
lea
or
loop
in
insl
dec
sarl
mov
lret
adc
sbb
inc
mov
jmp
std
in
mov
adc
cmp
addr16
push
sahf
jno
aaa
and
pop
cs
push
fs
pusha
pop
push
lods
sub
out
out
hlt
andl
xchg
sub
sbb
sahf
cltd
clc
f2xm1
std
lret
test
pop
xor
inc
jecxz
stos
sbb
aaa
cld
jbe
ficomps
dec
sbb
aas
cmc
add
adc
stc
and
imul
xchg
add
inc
sub
ja
mov
outsb
mov
mov
out
mov
lods
pushf
or
mov
push
mov
hlt
js
shrl
jo
daa
popf
jno
sub
xchg
test
xchg
mov
jp,pt
inc
ret
int
sbb
sbb
aam
sbb
push
movsl
pop
push
jge
add
arpl
out
stos
test
out
imul
pusha
movsl
cli
dec
fcomip
lahf
cmp
pop
mov
test
mov
push
jbe
inc
jle
jmp
cmp
xor
push
pop
bnd
xlat
in
iret
sbb
lahf
cltd
fsubrl
pcmpgtb
pop
push
xor
testb
rclb
inc
push
push
and
dec
push
test
iret
add
lods
mov
sbb
jp
cmp
cvtdq2ps
sub
push
mov
rcll
icebp
scas
packsswb
mov
and
or
aas
jmp
sahf
ljmp
xor
xor
sub
pushf
repnz
enter
enter
aas
cld
or
fistpll
dec
out
mov
outsb
mov
ljmp
add
and
push
lret
adc
subb
jo
imul
add
cmp
test
push
add
es
adc
js
or
cwtl
out
js
jne
fwait
pop
into
push
les
in
scas
jb
mov
mov
or
push
pop
test
aas
mov
or
in
dec
adc
sub
call
jb
pop
mov
lret
and
xlat
or
repz
inc
ljmp
outsb
adc
jne
add
aam
repnz
lcall
lret
ss
add
in
rorb
jl
lods
and
pop
sub
add
mov
idivb
call
and
push
sbb
cmp
jmp
in
std
cwtl
testb
lods
pop
cli
mov
jb
and
movsb
pop
add
lret
fcmovbe
test
in
adc
js
sub
and
out
imul
lret
dec
jge
repnz
ret
push
ret
daa
rcll
add
or
nop
mov
testb
mov
decl
in
adc
sub
push
pushf
int3
bound
insl
loope
sbb
mov
jp
mov
inc
dec
mov
outsl
iret
inc
outsl
xor
adc
and
lods
lods
and
int
je
notl
and
push
add
push
xor
cmp
pusha
push
pop
loope
je
and
mov
xor
jl
push
incb
testl
mov
xlat
cmc
outsl
jmp
pusha
cwtl
mov
push
jb
adc
dec
andb
lret
andb
cmp
dec
sub
sbb
fildl
xchg
fs
aam
popa
push
les
dec
and
clc
into
sbb
add
cmpb
push
pop
adc
fwait
sbb
cmpsb
pop
cld
into
push
jbe
loop
mov
sub
scas
mov
push
ss
dec
ja
jecxz
push
lods
into
leave
cmpsl
xchg
sti
mov
xchg
sub
loope
or
movsb
notb
stc
adc
or
loop
insl
lock
add
fidivrl
fs
cld
icebp
dec
movsb
jnp
sub
pop
xlat
fcoms
hlt
sub
adc
mov
enter
adcb
jne
push
cmp
int3
insl
imul
les
movsb
lock
or
add
jo
shr
jno
test
jb
or
int3
xlat
mov
pop
adc
fldcw
test
adc
cmp
sbb
xor
std
pop
mov
sub
sub
adc
shrb
sub
mov
xchg
les
mov
outsl
push
sbb
add
pop
xchg
push
pushf
bound
stos
pop
push
mov
adc
dec
xchg
and
enter
and
js
dec
bswap
and
adc
cld
xchg
mov
and
scas
imul
mov
or
dec
sbb
xchg
xchg
in
xchg
mov
or
xchg
push
mov
outsb
pavgb
leave
push
xchg
mov
cli
dec
cmc
xor
xchg
and
fistpll
cmp
xchg
mov
nop
mov
pop
mov
dec
daa
fs
sbb
je
and
lock
fisttpll
jae
fisubl
addl
or
scas
fwait
mov
aam
cmc
and
xor
loope
inc
cmpsl
cwtl
sbbl
pop
jle
mov
push
jp
pusha
push
inc
mov
dec
pop
jb
int
adc
jp
mov
xor
test
mov
fimull
and
iret
insb
inc
sbb
stos
mov
popa
push
dec
dec
je
push
movb
cwtl
mov
and
cs
and
loopne
xchg
pusha
cmp
sbb
incl
int3
push
jp
jmp
rorl
dec
adc
stos
or
ljmp
fdivrl
push
mov
add
and
jge
dec
xchg
iret
xchg
push
fnstenv
mov
mov
sarl
je
pop
cmp
jb
outsb
aaa
gs
aam
xlat
and
mov
int
push
ss
jae
ret
mov
addb
add
mov
dec
lret
xchg
int3
and
lahf
cmp
or
bnd
sbb
cs
pop
push
adc
pop
xor
xchg
in
pop
sub
stos
inc
xlat
xchg
mov
andl
sbb
add
sarl
sahf
push
sbb
or
loope
mov
filds
sbb
mov
lahf
cltd
stos
ret
pop
pushf
xchg
out
sbb
mov
ret
sub
xchg
xor
and
xlat
pop
pop
loope
mov
imul
add
insl
dec
add
testl
adc
lcall
or
sbb
and
jle
ret
xor
test
fxch
movsl
dec
imul
and
fildl
arpl
mov
add
mov
push
jg
fwait
push
mov
leave
xchg
push
fstpl
add
insl
pop
jle
xchg
popa
adc
pop
xor
xchg
inc
sub
dec
ds
das
mov
or
movsw
push
dec
xchg
dec
repz
fwait
clc
ret
inc
cvtps2pi
lea
outsb
mov
mov
xor
pop
xorl
sbb
cwtl
rcrl
and
xchg
notl
js
fcmovnbe
mov
lods
xor
mov
lret
ret
and
jle
dec
inc
mov
add
mov
xchg
pop
jbe
push
pop
ret
or
push
inc
mov
cmp
inc
adc
aam
dec
lret
imul
dec
mov
iret
test
add
mov
xchg
add
pcmpgtd
adc
dec
mov
mov
and
xchg
icebp
xor
repz
sar
fs
nop
add
in
lcall
cmp
fildll
lock
pop
mov
or
mov
inc
dec
lret
sbb
jae
mov
dec
sub
outsb
and
into
ret
mov
sub
sbb
jo
add
cmp
xor
jo
adc
je
jp
sub
fisttpl
sbb
lods
sbb
pop
test
aad
movsl
add
repnz
call
stos
add
xor
movsl
sbb
cltd
aaa
js
adc
xchg
out
in
sbb
push
js
cli
in
xchg
xchg
mov
adc
stos
push
push
mov
dec
ret
sub
sbb
fsubs
mov
adc
call
outsb
loope
cwtl
jg
test
fistl
pop
add
pop
mov
add
mov
add
inc
clc
mov
frstpm(287
adc
fmull
fbld
dec
in
data16
sbbl
shr
insl
and
in
lret
mov
ss
or
rorb
xor
into
cli
push
cltd
shlb
dec
adc
inc
inc
roll
xorl
xlat
bound
cmp
jge
jle
mov
scas
fnsave
sbb
es
sbb
lret
cmpsb
pop
in
dec
icebp
push
push
loope
mov
jnp
leave
das
sbb
adc
xor
cmpsl
or
xrelease
lock
shll
pop
aam
lods
call
push
adc
test
add
sub
inc
lods
xor
xchg
hlt
inc
test
adc
loopne
adc
xchg
divb
xor
sub
jmp
fisttps
mov
and
mov
cmc
sbb
pop
ret
sub
push
aas
jnp
inc
sbb
sub
pop
inc
lret
inc
sub
dec
dec
out
rorb
inc
push
cmpsb
or
orl
ret
cmp
sbb
push
dec
loopne
stos
js
leave
adc
jge
add
cmpl
mov
mov
dec
cmc
add
dec
dec
int3
or
fwait
test
jp
lcall
insl
nop
fucomip
ret
fistpll
in
mov
add
dec
rcrl
enter
inc
inc
jmp
xor
cltd
xlat
inc
dec
cld
jl
lock
fidivs
fsubr
sbb
mov
mov
sbb
pop
jge
loop
cmp
movsb
pop
popl
mov
xchg
push
data16
push
xchg
popa
icebp
jge
outsl
popa
sub
into
repz
push
jno
xchg
insl
fimuls
mov
out
lock
lods
mov
call
sbb
sub
xor
aad
mov
sbb
daa
fmuls
xor
lret
adc
xchg
popa
inc
stos
movsl
bound
cmp
xlat
loopne
mov
adcb
push
ds
aad
mov
adc
jno
inc
pusha
orb
outsl
lods
rorb
xchg
push
xchg
repnz
adc
aas
hlt
outsl
ret
jo
ds
movlps
movsb
sahf
push
andl
xor
add
xchg
out
imul
and
cmp
xor
movsl
pop
and
mov
inc
push
xchg
adc
mov
adc
mov
mov
in
sub
test
adc
and
add
xlat
fsubr
or
sahf
inc
inc
mov
adc
adc
jnp
add
inc
xchg
out
cmp
in
add
and
loopne
adc
mov
xor
loopne
popf
jns
adc
pop
mov
pop
out
enter
or
mov
bound
add
lods
mov
sub
lcall
imul
loopne
rclb
js
and
mov
xchg
cli
mov
sbb
jbe
ds
mov
lea
xchg
stos
push
fwait
xor
sti
out
adc
xor
and
adc
add
aaa
push
out
rclb
adc
mov
mov
xchg
pop
jne
cmp
cli
cs
sub
mov
sbb
testl
in
jecxz
sbb
repz
int
pop
mov
sub
jb
popf
cmp
jge
sahf
add
hlt
sbb
jmp
jae
sahf
and
subb
out
fistpll
insl
add
inc
xor
in
xchg
aas
push
dec
loopne
out
ja
add
push
pop
mov
aaa
adc
or
call
jns
pop
sub
jle
test
lds
sbb
lret
or
inc
sbb
xor
sbb
jmp
xchg
fiaddl
insb
mov
jno
shlb
pop
adc
out
lock
mov
mov
clc
shll
xorl
pop
fwait
push
xchg
xchg
lret
outsl
sti
enter
gs
call
dec
bound
sub
xlat
or
sti
pop
mov
and
xor
test
out
dec
in
cli
fstps
ret
lret
cli
icebp
or
cs
adc
sbb
js
adc
cs
inc
cmp
ss
mov
ret
dec
and
push
pusha
sub
fidivrl
mov
jnp
pop
jb
addr16
adc
mov
stos
add
inc
push
ja
fistpl
dec
xchg
add
pop
clc
xchg
int3
mov
inc
and
or
mov
jg
sbb
scas
rorb
hlt
lahf
pop
jo
scas
or
cmp
sub
push
xchg
cwtl
bound
sub
mov
xchg
sbb
push
push
aad
fnstenv
imul
push
sbb
pop
xchg
ficomps
inc
push
cmp
xchg
adc
fcmovnb
or
lods
dec
xchg
mov
sub
sbb
rcl
in
adc
mov
pop
mov
iret
xchg
movl
sbb
fwait
jns
push
pop
scas
inc
popf
pop
pop
push
cmp
int3
addr16
repnz
in
sbb
and
addr16
push
leave
popf
mov
mov
hlt
pop
shlb
loope
cmp
fisubl
arpl
push
vunpcklpd
test
fldenv
sbb
lods
lods
lea
sahf
or
mov
aaa
push
push
pop
pop
in
xchg
aaa
filds
push
jns
arpl
and
dec
sub
add
fsubr
pop
int
lahf
xchg
mov
ret
repnz
xchg
outsb
dec
xlat
push
xorl
xchg
rclb
stos
pop
rclb
enter
cmp
sub
ds
leave
negl
xor
or
pop
aad
adc
mov
xlat
mov
or
shll
sbb
neg
mov
mov
int3
push
sub
jne
cwtl
stos
mov
sbb
or
lds
xchg
jne
scas
xor
add
inc
or
xchg
add
test
xor
test
stos
xchg
in
jae
sbb
add
inc
inc
mov
mov
sbb
js
add
movsl
pop
or
insb
mov
mov
test
enter
jns
cmc
add
lea
je
cmpsl
mov
scas
je
adcb
sbb
repnz
xor
sub
lods
loopne
cmpsb
call
ja
cmc
arpl
sbb
push
adc
out
addr16
movsl
adc
popa
cltd
or
dec
xor
iret
test
mov
cmc
lea
das
push
sbb
jne
rep
cld
pusha
add
mov
int
xor
xor
xchg
jbe
adc
push
mov
es
or
cltd
out
roll
fwait
out
fnstenv
push
sub
and
adc
push
lret
cmpsb
dec
xlat
fisttpl
aad
dec
adc
jmp
lret
push
out
mov
insb
pop
int3
fmuls
cltd
shr
jns
sub
dec
mov
xchg
sub
sbb
jne
divl
aam
push
mov
and
mov
cmpsb
jbe
jmp
mov
test
sbb
pop
sub
outsl
or
lret
imul
ds
fisttps
mov
popa
sbb
adc
repz
int
repnz
lret
outsb
mov
sub
aad
adc
mov
add
aad
loopne
and
add
pop
in
rorb
xchg
shrl
iret
test
repz
add
dec
out
es
mov
cmp
mov
jo
or
add
mov
stos
fistpll
xor
or
cmpsl
inc
ret
cmp
pop
jg
aad
mov
leave
test
lds
push
mov
pop
test
adc
dec
out
repnz
in
stc
lcall
mov
pop
cs
jge
lret
add
xlat
push
adc
xchg
sbb
xlat
dec
aaa
and
and
mov
repnz
in
lock
push
and
and
or
sbb
cwtl
jb
btr
cmp
into
ds
sbb
xor
pop
bound
stos
stc
in
or
out
in
jae
adc
frstor
push
xchg
mov
xchg
std
jl
sub
ss
fucomip
xchg
out
push
sbb
xlat
repz
dec
scas
sbb
jp
sub
xchg
inc
stos
and
cwtl
push
or
sbb
lret
ja
mov
fisttps
scas
mov
ljmp
movsb
test
out
mov
jg
fistpl
dec
scas
roll
iret
sub
push
mov
hlt
xor
xchg
je
adcl
test
cmp
lea
sarl
dec
jmp
popa
cmp
pop
dec
and
imull
or
xchg
cmp
cmp
adc
inc
mov
cmp
in
pop
cmpsb
fwait
inc
adc
lret
pop
out
call
andl
test
push
pop
arpl
mov
mov
adc
sar
add
jnp
aam
jle
fsub
ret
sti
inc
and
out
stc
and
sbb
lret
ds
popa
out
and
push
movsb
shl
aaa
push
ret
enter
andl
ss
xor
mov
cs
fstps
cmp
arpl
repz
cli
push
dec
jne
xlat
testl
push
push
adcl
adc
stos
movsl
jno
sbb
iret
xchg
in
or
or
fs
inc
fistl
mov
jp
cli
movsl
pushf
lods
inc
and
sub
jns
or
lods
sysret
aam
add
adc
inc
stos
enter
imul
adc
ret
sahf
in
sbb
int
inc
ds
inc
pop
pop
or
or
and
mov
add
sbb
mov
inc
loopne
clc
cmp
xlat
stos
ss
sbb
pop
and
addb
mov
es
inc
popf
inc
or
inc
movsb
cmp
lods
inc
dec
and
mov
xsavec
loop
sbb
in
sbb
cmp
push
mov
leave
fstpl
mov
fs
xor
or
sub
into
shrl
pop
add
inc
xor
jmp
scas
adc
or
inc
push
xchg
pop
and
xor
lret
xchg
loopne
mov
shll
pop
xchg
cwtl
bound
xlat
iret
enter
loope
add
sub
mov
icebp
int3
pop
mov
xchg
mov
mov
cmp
addr16
inc
xor
cwtl
imul
loope
hlt
sub
or
xchg
shl
mov
bound
cmpsb
test
push
jne
fistps
adc
push
test
fisttpll
call
lods
lahf
aaa
add
lret
jmp
push
mov
adc
enter
roll
or
mov
mov
cwtl
mov
nop
enter
shll
aaa
ficomps
or
or
stos
and
adc
ret
sarb
les
lret
sbb
mov
pop
scas
add
mov
in
scas
mov
cmp
cmpsb
pop
data16
cmc
loopne
filds
pop
dec
mov
outsl
inc
inc
mov
enter
jecxz
xor
mov
cmpsl
sub
insb
les
pop
add
or
xor
and
loope
push
xchg
mov
mov
sub
cmp
xchg
or
repz
ljmp
stos
lock
mov
sarb
clc
adc
imull
xor
jnp
mov
sub
sub
inc
mov
mov
or
add
fisubs
mov
mov
sarb
push
int3
or
movsb
cwtl
ljmp
loop
mov
lret
testb
xchg
pop
das
mov
cli
test
stos
mov
add
ja
cmp
jno
jmp
inc
std
ljmp
fiadds
xchg
bnd
dec
in
in
inc
test
cltd
cs
push
jns
xchg
ss
mov
lcall
push
jb
push
pop
lahf
ficoml
or
sub
mov
sub
outsb
in
aad
dec
inc
mov
jb
pop
dec
push
xor
jae
add
nop
sub
insl
sbb
add
loopne
rolb
mov
cmp
cwtl
sbb
ljmp
outsb
iret
filds
js
fisubs
xchg
sub
ds
xor
int
outsb
jb
test
mov
or
in
mov
shlb
mov
cmp
loop
ret
hlt
sub
jnp
jge
inc
ss
or
adc
mov
or
cmp
std
loop
insl
imul
dec
xlat
mov
mov
mov
dec
dec
xchg
or
push
pop
sarl
mov
pop
adc
imul
aam
mov
sub
mov
sbb
add
push
mov
mov
pop
mov
cmp
push
bts
push
ret
cmp
mov
fdiv
pop
cli
xor
push
inc
out
leave
pop
cltd
fcmovnu
mov
jno
sbb
mov
push
inc
mov
or
adc
xor
lahf
jle
mov
jb
pop
push
cltd
fbld
lock
cs
ffree
jns
test
and
xchg
nop
rorb
lea
mov
das
cmpb
mov
and
call
daa
inc
ja
or
jns
fnstsw
jns
test
cld
int3
jle
loop
jg
shl
lret
inc
data16
jb
mov
jge
outsb
iret
sub
cmp
mov
mov
mov
repnz
pushf
fldt
rclb
andl
xor
cwtl
inc
mov
push
gs
test
inc
adc
mov
jbe
push
lcall
dec
pop
aaa
sarl
mov
lds
xor
xchg
pop
xchg
jbe
scas
push
xchg
rcr
lods
movsl
jmp
dec
pusha
and
sbb
add
cmp
pusha
pop
imul
out
push
mov
test
lock
dec
sbb
sub
pop
xchg
adc
jbe
arpl
push
das
test
sbb
lock
xor
jp
cmp
and
mov
inc
dec
lcall
ret
cmpsl
pop
in
or
sti
sub
loopne
xlat
cmp
addr16
sub
js
jb
fdivrs
lahf
or
int3
fisttpl
push
push
aaa
clc
xchg
dec
adc
nop
aad
and
sbb
hlt
enter
cmp
scas
mov
jne
push
or
mov
xor
stos
cmp
std
xor
sub
lea
mov
out
jb
mov
clc
mov
add
mov
iret
push
push
leave
add
imul
push
loope
dec
jo
iret
js
xor
adc
ret
or
mov
fsubs
or
sbbb
fisttpll
inc
aas
push
mov
jmp
imul
sbb
pop
outsl
dec
out
loopne
jo
cmp
pop
popf
stos
or
lods
aad
ds
inc
leave
lret
ds
xlat
cmp
adc
mov
fbld
jg
fs
lret
dec
icebp
add
imul
push
cmpsl
addl
jne
jp
cmc
push
mov
sti
sbb
mov
aad
test
pop
fcmovbe
sbbb
add
push
call
aaa
out
das
pushf
fnstsw
test
pop
sub
outsb
mov
fcompl
rcl
mov
mov
ret
and
ss
rorb
add
jnp
sub
shl
xchg
mov
ret
nop
mov
mov
mov
roll
jmp
iret
mov
andl
mov
jb
cmp
add
inc
dec
push
lds
lock
dec
fcmovne
lcall
cmp
movsb
xchg
sbb
or
sub
lock
lret
loopne
pop
cmc
mov
xchg
adc
in
mov
enter
cmc
mov
out
mov
test
jl
push
adc
push
stc
ret
mov
cmp
aad
and
cmp
loope
add
outsb
cmp
mov
xor
cmp
movsb
xchg
xchg
hlt
xor
leave
cmp
or
sbb
and
mov
jecxz
sbb
mov
fldt
xchg
cmp
add
mov
dec
cwtl
daa
aam
imul
movups
adc
xchg
inc
outsb
and
xor
scas
pop
jl
in
or
sub
dec
xchg
mov
lock
sbb
pop
addl
and
xchg
repz
xlat
adcl
addl
lret
push
sub
or
xchg
sbb
lods
xor
outsl
inc
adc
aam
sbb
inc
mov
dec
hlt
cld
sbb
push
xchg
inc
push
jbe
mov
or
ss
in
push
jnp
rclb
sub
inc
lods
xchg
lret
lahf
nop
or
lcall
cltd
cmp
sbb
pop
popa
mov
inc
xor
xchg
repnz
jg
mov
and
dec
mov
or
adc
loope
jo
out
fsub
push
pop
lock
cmp
push
add
hlt
out
fildl
ror
sub
pop
test
nop
cmp
loop
add
jp
fcoms
jp
or
loop
stos
sub
add
mov
xor
mov
dec
or
dec
mov
pop
mov
sbb
lock
int
cmp
jp
xor
xor
xchg
int3
daa
int3
xor
adc
adc
pop
shrl
loop
pop
adc
add
inc
outsl
aam
push
je
dec
mov
mov
xchg
es
jae
mov
pushl
xlat
aam
fs
js
addb
mov
mov
je
test
cltd
enter
dec
sti
jns
test
lock
sar
in
loop
cmpsb
mov
int3
roll
icebp
jno
inc
hlt
daa
jbe
and
pop
jmp
add
sub
cmp
adc
jmp
or
adc
jmp
lods
outsl
pop
xchg
xchg
ja
ret
sahf
or
xchg
mov
add
jmp
jmp
pop
nop
pop
rcr
xlat
pop
iret
jge
add
test
cmpsb
fnstcw
test
repnz
lahf
mov
fcomps
push
mov
cs
leave
xchg
xchg
arpl
inc
mov
mov
addr16
mov
or
dec
inc
out
std
mov
movnti
mov
loopne
adc
test
push
mov
and
xchg
sub
pop
pmaxsw
cld
mov
data16
in
jecxz
and
add
es
bnd
xlat
les
sub
push
lret
lock
and
jl
mov
popa
fcmovu
loopne
or
mul
fxam
jno
sahf
inc
jp
pop
cmpsl
pop
jns
mov
icebp
cs
shlb
pop
mov
xchg
mov
mov
dec
adc
sub
jle
jl
xchg
or
imulb
xlat
subb
cmc
fwait
jnp
or
pusha
cmpsb
sub
popa
leave
int
sbb
inc
pop
add
mov
or
xchg
push
popa
xor
pop
inc
mov
loop
jnp
add
add
daa
xlat
inc
mov
outsl
xor
lcall
test
pop
inc
push
push
xchg
dec
fwait
mov
xor
add
cwtl
xchg
xchg
pushf
mov
fstps
xor
mov
adcb
jne
aam
inc
xchg
pop
xchg
out
je
inc
and
mov
ljmp
inc
mov
push
mov
pop
mov
or
push
stos
mov
cwtl
lods
add
pop
jl
jnp
outsb
mov
push
pushf
in
iret
loopne
push
adc
test
cmc
cmp
loope
loop
add
jg
mov
rolb
incl
inc
lcall
test
stos
and
pop
sub
xor
mov
adc
and
inc
inc
test
lods
sahf
daa
xchg
jne
lret
dec
pop
gs
xchg
repnz
dec
shrl
jae
out
inc
push
add
xchg
add
adc
ret
xlat
imul
jae
enter
adc
dec
jb
xor
pop
lret
xchg
mov
int3
or
push
dec
arpl
jl
ret
lcall
mov
inc
lahf
pop
jecxz
iret
sbb
fcomps
test
push
sbb
dec
xor
mov
sbb
aam
das
xchg
pop
ret
xor
mov
lods
pop
aad
lea
es
outsl
and
icebp
ret
in
xchg
pop
lock
out
cmp
ret
push
and
jp
push
jp
adc
ret
mov
or
hlt
add
mov
xlat
cmp
sbb
jb
pop
testb
in
mov
xlat
les
or
or
push
cld
imull
xchg
xor
negb
mov
adc
sbb
shl
loop
std
adc
in
or
jbe
cmp
sub
or
lret
gs
cmc
adc
test
cmp
adc
bswap
sbb
rclb
test
mov
pop
or
inc
outsl
cld
stos
cmpsb
mov
push
pop
rclb
adc
fcmovu
pop
sub
jmp
icebp
sbb
cwtl
adc
loop
movsl
lcall
test
sub
out
rcl
adc
cmc
and
dec
stc
mov
testb
adc
fadd
mov
loop
adc
mov
or
sub
scas
inc
icebp
aaa
into
cmpsl
pop
mov
nop
in
test
push
sbb
push
xor
push
sub
fstpt
dec
lcall
loop
es
inc
sbb
push
cmp
mov
mov
dec
pop
xchg
int3
call
arpl
xchg
test
pop
test
dec
iret
shlb
adc
aam
sub
add
inc
rcrb
leave
xor
mov
inc
hlt
imul
xor
les
xchg
in
cwtl
aam
dec
shll
out
mov
xchg
jno
out
xchg
sub
fsubrl
outsb
enter
mov
ror
cltd
xchg
loop
mov
inc
jnp
leave
sub
fstpl
ja
cmp
dec
xchg
cmc
daa
xor
test
pop
sub
mov
cmp
aad
aas
adc
sbb
cwtl
lret
lods
mov
inc
shll
sbb
cmp
stos
or
cmp
ficoms
xchg
add
adc
mov
adc
sbb
sub
adc
bound
aam
cmpsb
cmp
imul
pop
pop
pop
repz
fldt
pusha
push
gs
aad
clc
repz
xor
and
lods
rcl
adc
into
dec
or
test
int3
or
jne
add
and
inc
push
add
push
test
pop
cli
or
sub
jecxz
lods
jae
pusha
xchg
or
or
je
in
je
es
fcomp
pop
mov
sti
sbb
sarb
push
xchg
push
test
push
sbb
inc
inc
leave
sub
dec
and
sbb
or
pop
enter
outsb
std
mov
fwait
push
movl
or
inc
xor
cmc
adc
adc
jp
push
xor
cmc
adc
adc
shll
mov
or
in
icebp
pusha
loop
adc
fstps
adc
xor
sbb
aaa
enter
mov
int3
rcrl
das
xchg
xor
and
inc
mov
fldcw
test
adc
leave
sbb
inc
mov
roll
adcl
fmull
pop
imul
mov
and
lret
addr16
mov
lcall
mov
pop
arpl
jl
gs
pop
fs
fadd
imul
push
or
hlt
push
int
mov
inc
mov
cmc
gs
sub
xor
xchg
loope
xchg
hlt
mov
jo
inc
in
hlt
jb
sub
mov
pushf
add
mov
pop
push
aad
jecxz
das
andb
add
imul
xchg
nop
gs
ror
test
dec
and
lret
sbb
sti
ljmp
lods
cmp
xorps
pusha
xchg
cmc
lods
adc
ds
or
imul
push
push
adc
loop
and
outsb
inc
loop
mov
cmp
xchg
subb
and
hlt
and
stc
inc
push
mov
lock
subl
push
repnz
hlt
add
sbb
or
mov
shlb
fbld
or
into
inc
nop
out
and
test
pop
js
or
jg
mov
push
and
cwtl
push
and
cmp
es
mov
jno
lds
sbb
cmpsl
fidivrl
or
push
ret
mov
dec
pop
push
ret
fisttps
adc
sub
into
stc
xchg
xor
gs
mov
add
loop
movl
lea
popa
fwait
mov
lcall
adc
cmp
sbb
mov
pushf
add
jne
xor
xor
sub
jns
push
into
or
mov
jno
inc
subl
ljmp
lcall
xchg
adc
inc
pop
cmp
sti
mov
enter
xchg
xchg
inc
divl
add
mov
sbb
mov
dec
lods
dec
lcall
cmc
and
and
sbb
and
push
add
rcr
xchg
scas
int3
scas
push
xlat
or
in
push
mov
arpl
jo
pop
push
pop
or
push
movsb
jo
mov
mulb
test
in
faddl
jae
xchg
mov
jnp
cmpsb
or
int3
imul
cmp
pop
push
mov
enter
fimuls
and
mov
or
mov
or
cmp
jae
cwtl
int
push
inc
inc
push
adc
out
mov
aam
daa
sbb
sub
mov
mov
sbb
test
inc
xor
stos
imul
cmc
mov
fldenv
arpl
xor
or
add
scas
xchg
enter
add
sti
mov
sub
add
sbb
lods
adc
sbb
or
push
idivb
push
out
into
in
push
arpl
mov
push
in
jecxz
push
push
xchg
shrl
sbb
and
leave
add
ss
je
jle
and
add
enter
pop
lods
scas
xlat
loopne
jg
mov
movsb
int3
popf
jae
lret
or
aas
in
xor
adc
add
data16
mov
or
sbb
xchg
push
lea
jecxz
sbbb
add
and
roll
mov
pushf
js
mov
mov
and
scas
outsl
push
sbb
insl
push
lea
lcall
xchg
lock
xlat
dec
fwait
rclb
iret
push
sub
dec
mov
xchg
in
rorl
lock
dec
movsl
jne
push
add
je
inc
mov
aaa
addr16
cmp
int
cmpsl
psubq
xor
sbb
adc
and
cmpsb
les
jbe
iret
push
cltd
testl
mov
daa
or
aaa
add
adc
add
cmp
jp
psraw
ja
loope
xor
or
jnp
ror
ljmp
adc
aam
adc
push
pop
iret
jb
repz
add
pop
ret
mov
push
xchg
nop
xor
xor
cmc
jbe
loope
dec
push
inc
sbb
adc
cmpsb
inc
scas
aaa
jo
xchg
movsl
sub
pop
xor
icebp
popa
pop
xor
xorb
enter
mov
subl
pop
jecxz
fs
ror
mov
out
sti
and
fxch
repnz
adc
popa
leave
xchg
mov
arpl
jge
mov
jg
sbb
test
in
xor
out
push
jle
add
sub
std
sahf
test
sbb
rclb
loope
xchg
dec
mov
mov
sub
icebp
mov
fcmove
adc
pop
loope
inc
add
xor
xchg
rorb
pop
or
movsl
adc
sbb
adc
out
push
or
sub
adc
lock
daa
in
jbe
mov
cmp
xchg
decb
adc
nop
imul
pop
xor
push
adc
jae
or
add
subb
mov
pop
cmp
jo
bound
adc
out
inc
xlat
lret
cmp
inc
mov
rcrb
scas
dec
repnz
ret
subb
inc
outsl
xchg
sti
sub
mov
cmp
add
cmpsb
movsb
cmpsl
cmp
fwait
mov
pop
leave
cmpsl
cltd
js
cmp
jp
sbb
xchg
stos
int3
add
xchg
mov
int
ret
mov
sub
test
pop
dec
scas
es
push
adc
in
adc
mov
add
in
xor
lret
shll
xlat
mov
add
jnp
pusha
leave
mov
ljmp
js
fistpl
jmp
aad
pop
and
sub
icebp
fisttpl
ljmp
jl
and
loop
sbb
data16
xchg
sbb
adc
sbb
cmp
js
ljmp
sub
sti
aam
cmp
ja
sbb
in
repz
std
lock
out
add
jb
and
jae
add
arpl
dec
or
int
and
icebp
dec
inc
mov
xchg
sbbb
and
or
int
sub
aad
adc
mov
lret
pop
cmp
repnz
sbb
or
mov
and
js
inc
mov
mov
sub
lds
xchg
push
sbb
movsb
sub
imul
in
gs
fistpl
or
call
mov
out
dec
sbb
rorb
mov
xor
adc
add
rorb
adc
loopne
jecxz
mov
add
jg
sub
sub
xlat
in
fsubrs
cmp
adc
and
xor
sahf
das
mov
push
xchg
inc
sub
lret
call
jns
je
movsl
xor
ja
pop
rorb
sub
inc
mov
xor
orb
xchg
add
movsl
loope
add
xor
mov
and
ds
sti
arpl
dec
xchg
aaa
pop
pushf
push
out
je
pusha
add
dec
testb
loopne
cs
cmp
ret
outsl
dec
sub
or
mov
jmp
lods
das
cs
mov
rcrb
add
push
jmp
in
cli
das
shl
movsl
into
mov
mov
and
cmp
sbb
adcb
xor
loope
lock
aad
test
ret
xor
into
sbb
inc
lret
xorl
dec
dec
pop
mov
cmp
je
out
ret
sbb
les
in
xlat
int3
mov
xchg
pop
push
jge
ffreep
cwtl
sti
and
lahf
insl
data16
mov
ss
testb
jo
lods
pop
mov
faddl
dec
adc
dec
and
jbe
lret
sub
in
mov
cltd
mov
daa
or
or
aas
inc
call
div
fwait
adc
or
sub
call
cmpsb
movsl
adc
popa
nop
xor
cld
js
lods
adc
int
or
bound
sub
mov
loopne
mov
popf
dec
lds
mov
mov
pop
push
add
in
lcall
aas
lret
push
sbb
sbb
test
enter
pop
mov
mov
and
loope
jmp
xchg
inc
movsb
addr16
leave
pop
jmp
add
sti
data16
mov
mov
cmp
push
cmp
scas
ja
mov
mov
jno
dec
mov
jecxz
inc
fdivr
es
in
rcll
orl
lret
dec
adc
jp
mov
rcrl
and
int3
sbb
or
mov
push
or
or
out
icebp
xchg
sub
hlt
sbbb
popa
add
lret
adc
add
dec
push
mull
jg
sub
arpl
and
ror
adc
ljmp
bnd
ljmp
or
jns
xchg
imul
mov
rcrl
add
push
add
in
test
enter
sti
push
cli
inc
inc
movsb
jge
or
cmc
add
sbb
out
mov
outsb
add
sbb
xor
jmp
popa
js
mov
mov
test
imul
pop
mov
ror
outsb
pop
adc
inc
push
lcall
mov
aaa
aaa
movsb
and
mov
jae
inc
cltd
push
call
addr16
inc
lods
xchg
in
daa
jne
mov
xor
mov
pusha
mov
jne
sub
icebp
sbb
xor
xor
cmp
adc
das
shlb
dec
stos
add
mov
aaa
and
inc
jge
push
or
inc
mov
in
sbbl
aam
cltd
popa
aad
push
lock
loope
in
lret
dec
in
loop
pop
jmp
mov
mov
mov
cmpl
sti
dec
pop
cmp
pop
test
xchg
les
ja
and
cmp
jmp
xchg
shl
jg
addr16
xor
movsl
cli
fldcw
pop
in
lcall
add
out
xchg
lcall
test
sbb
repz
in
sahf
push
cwtl
inc
and
in
mov
add
flds
dec
pop
mov
add
sbb
popf
enter
and
inc
fs
idiv
lahf
or
xor
inc
das
inc
push
stos
lcall
push
cli
test
jns
mov
lret
push
movb
sbb
loope
inc
jle
or
mov
test
mov
add
movl
xor
push
xor
lock
xchg
pop
push
roll
data16
or
jnp
shl
jg
mov
lcall
adc
and
sbb
pop
xchg
into
in
adc
sbb
sarl
gs
sub
pop
adcb
sub
or
mov
rcll
mov
jb
sbb
nop
shlb
xchg
push
or
ljmp
xor
adc
push
sbb
sbb
in
xor
fs
aam
pop
add
outsb
cmp
ret
add
ja
or
enter
cwtl
shrl
pop
xor
popf
sbb
sbb
out
inc
rorl
or
shrb
andl
push
or
add
push
inc
sbb
fsubs
je
or
xlat
dec
popa
adc
bound
filds
mov
clc
or
jo
push
cmp
movsl
jb
aad
and
sar
xorl
pop
mov
cli
and
push
out
popf
sbb
lea
mov
jg
push
popf
sbb
xchg
js
jmp
fs
lahf
popa
test
enter
ret
jns
sub
mov
shrb
sbb
xor
stos
or
stos
mov
decb
lahf
scas
mov
xor
jg
inc
push
add
and
cltd
add
add
push
xchg
add
inc
out
in
xor
popa
pop
lret
pop
cmp
adc
fs
shr
ficompl
dec
adc
sarb
mov
je
mov
inc
xlat
out
jnp,pn
cwtl
lods
mov
stos
or
push
mov
js
adc
adc
mov
and
pop
or
fwait
int
or
inc
test
inc
mov
mov
inc
psraw
or
mov
push
sub
in
int3
inc
jnp
pop
lret
jge
lret
or
push
insb
adc
add
cmp
mov
adc
mov
mov
into
mov
xchg
xchg
faddl
bound
jbe
jecxz
jge
fisubrl
js
stos
push
cmp
scas
js
mov
jne
movsl
and
scas
add
push
je
add
mov
loope
adc
orb
loope
add
loop
xchg
add
push
xchg
fadd
xchg
mov
sahf
sahf
add
cmp
call
mov
mov
jmp
es
inc
add
mov
sbb
or
adcb
sbb
xchg
shl
fildll
cli
shl
push
jp
pushf
daa
lret
lods
aaa
test
inc
mov
fnstenv
add
jmp
daa
sbbl
les
lret
dec
rorl
sbb
test
fistps
xchg
rcl
mov
nop
mov
cld
leave
clc
sub
push
in
or
sbb
add
lea
addr16
push
mov
adc
in
inc
hlt
dec
test
imul
adc
in
jge
pop
aam
orl
mov
cmp
push
scas
ja
je
negb
xchg
fimull
sub
bound
jl
fisttpl
sub
adc
add
jns
bound
lods
xchg
dec
mov
ss
clc
gs
test
lcall
fwait
idivb
inc
pop
lcall
fwait
pushf
lds
stos
jb
in
jge
mov
push
and
js
xor
cmpsb
icebp
jne,pn
mov
dec
and
out
in
mov
or
call
xor
mov
adc
outsb
push
add
push
xchg
dec
jp
mov
mov
sbb
mov
data16
ret
mov
fadds
push
leave
and
pop
movsl
fcmovu
aas
cmp
mov
out
dec
rol
pop
imul
push
out
jecxz
push
add
jnp
addr16
and
sbb
pop
vminsd
or
cmp
xchg
fistps
xchg
jmp
call
adc
out
sub
iret
and
mov
fbld
inc
leave
xlat
daa
add
repnz
sbb
sub
push
cmp
push
negl
iret
sbb
loope
inc
cld
shlb
mov
fisttps
and
fstl
and
push
roll
rcl
sbbb
or
fldl
dec
xor
sbb
xchg
mov
sub
or
xor
xor
cmp
mov
insb
sbb
cmpsl
dec
lea
sub
or
aad
mov
aas
pop
push
add
xchg
rcrb
lret
mov
nop
cmpb
sbb
xchg
inc
hlt
test
sub
pop
cli
fidivs
adc
leave
scas
test
andl
in
iret
mov
cli
pushf
std
sbb
sub
lea
paddusw
pop
sbb
mov
stc
mov
inc
int
movsl
jbe
ljmp
mov
pop
aaa
stos
pop
xchg
out
lret
std
pop
pxor
cmp
hlt
xor
fwait
pop
fstpt
jg
xor
outsl
add
pop
pushf
adc
dec
push
pop
add
jl
test
imul
dec
jecxz
cmp
add
lcall
add
xor
xor
nop
pop
jb
or
fs
incl
rorb
pushf
aam
sub
inc
lcall
cmp
push
in
pop
out
and
push
fadds
sub
pop
xlat
mov
jg
xchg
psubusw
imul
jns
mov
mov
test
shll
add
mov
mov
mov
ret
loope
lock
fiaddl
mov
or
ljmp
sbb
jle
jge
push
mov
sub
aam
sbbb
into
pop
inc
sahf
nop
jb
rolb
jecxz
xorl
cwtl
fnstcw
stos
push
xchg
jp
ffreep
mov
lods
jb
lods
les
or
pop
dec
or
je
stos
cltd
push
in
lret
mov
sarb
rol
xor
pop
dec
loope
aas
mov
clc
dec
mov
add
push
xor
int
loope
fmull
data16
xabort
or
sub
jae
adc
out
cmp
adcl
dec
jns
in
pop
test
pusha
xor
out
icebp
loop
pop
cmp
pop
sbb
adc
dec
shlb
cmpsl
sar
mov
int3
cmp
pop
xchg
lcall
push
jp
push
decb
push
push
inc
pop
fistpll
or
rol
test
sub
push
push
mov
lcall
add
stc
cli
sbb
push
aaa
dec
sbb
dec
and
mov
sbb
cmp
or
cmp
mov
add
int3
lea
fidivs
je
push
pop
aam
sbb
or
or
imul
adc
imul
sbb
inc
mov
pusha
je
xor
adcb
adc
popa
xlat
mov
add
pop
push
fs
pop
aad
lock
gs
into
ret
cmpsl
into
ja
pop
loop
ja
test
movl
inc
in
adc
or
clc
dec
mov
inc
cmpsl
loope
or
sub
imul
movb
hlt
sub
cld
add
xchg
daa
sbb
aaa
pusha
sbb
sti
xchg
mov
popf
or
inc
outsl
xchg
push
sbb
sbb
jg
or
dec
mov
mov
in
add
mov
or
es
mov
into
orl
jb
xlat
add
jg
xchg
push
in
in
dec
pusha
vpmulhw
movzbl
shlb
pop
fmuls
leave
dec
lea
cmpsb
mov
in
out
inc
xchg
lret
mov
cmp
push
sbb
pop
into
push
lods
dec
mov
dec
dec
pop
call
fsubl
xchg
mov
dec
fwait
pushf
push
rclb
aad
movsb
mov
push
pop
enter
pop
fwait
sbb
mov
ja
dec
jge
test
movsl
pop
and
lods
popw
xchg
repnz
idiv
fdiv
adc
mov
mov
and
jb
or
mov
fwait
incl
fstpt
les
sbb
jno
rclb
sbb
iret
test
hlt
pop
jg
mov
xlat
sbb
mov
std
loop
mov
xor
icebp
inc
sbb
cltd
mov
xor
jno
or
fisttpl
lds
or
sbb
push
and
mov
fiaddl
lods
push
fneni(8087
sbb
mov
lret
xchg
cmpsl
repnz
pusha
fmuls
jg
fwait
mov
mov
aaa
jl,pt
nop
sbb
jmp
and
dec
push
sahf
adc
sub
pop
push
adc
mov
shrb
int3
push
aad
pop
sub
xlat
xchg
xor
sub
lret
add
pusha
mov
pop
cmpsb
cmp
jmp
xchg
jb
dec
adc
mov
pop
push
sar
test
and
mov
cmc
pushf
lods
or
test
push
jns
in
sti
les
in
pushf
daa
sets
repz
xor
push
fildll
sbb
sub
rcrb
push
inc
cwtl
daa
or
ret
mov
bound
imul
xor
jb
shr
mov
cs
aaa
sbb
mov
cmp
xor
movsl
pop
and
mov
dec
push
lahf
and
adc
push
shlb
filds
leave
sub
dec
adc
ret
movsl
fnstsw
pop
cld
push
pop
add
sbb
sub
sub
orl
push
push
addr16
clc
add
int3
leave
mov
jo
in
add
fmuls
sbb
stos
push
int
scas
adc
fwait
push
xorb
movsl
call
lcall
mov
lret
fabs
dec
pop
push
push
adc
cltd
push
aas
or
xlat
xor
mov
cmp
adc
mov
cld
jnp
mov
or
mov
fisttpll
sbb
push
shrl
ja
in
lods
pop
bound
add
cmpsl
xchg
mov
fistps
cmp
lea
aad
sub
ljmp
rcll
xchg
fwait
mov
mov
jmp
cmpsl
jbe
es
iret
out
cmp
adc
sub
insb
xchg
lea
add
lds
cmpsb
mov
jmp
ficoms
xchg
pop
sbb
dec
gs
sbb
or
aas
test
and
pusha
aas
arpl
in
mov
dec
adc
sbb
mov
xchg
outsl
xlat
xchg
pop
push
shl
loop
idiv
insl
ficoms
mov
adc
je
or
out
stos
aas
das
inc
out
dec
movsb
lcall
inc
jmp
lret
daa
into
stc
lods
push
mov
push
loopne
stos
sbb
testb
pushl
aas
or
stos
sbb
add
sub
loope
lds
sub
mov
loope
es
sbb
addb
aam
lds
push
rcll
pop
ja
dec
ret
adc
mov
fs
scas
fnstcw
jecxz
mov
and
add
orb
xor
test
in
fldl
xchg
shl
sbb
ljmp
or
ret
add
lret
mov
push
ret
lahf
and
dec
cmp
stos
idiv
aam
push
mov
nop
fldenv
rorl
inc
ret
dec
cmpsb
sbb
push
xchg
or
sub
adc
pop
dec
xchg
or
popa
lret
dec
and
jne
sub
es
inc
mov
jge
adc
filds
pop
mov
int
ret
je
fiadds
xor
movsb
sbb
in
mov
fs
popf
add
cmc
lods
pop
enter
fidivs
pop
adc
testl
sub
cmp
cmp
repz
jbe
jecxz
xchg
adc
iret
mov
or
mov
cld
pop
outsb
lds
popf
fimull
daa
sbb
in
pusha
hlt
icebp
push
adc
int
out
dec
mov
pop
inc
je
jb
mov
and
in
dec
lock
pop
xlat
lret
jmp
xlat
rcrl
sub
push
mov
notl
fs
aas
jle
mov
cmpsl
jb
pop
pop
dec
sbb
aaa
fcompl
pop
ds
mov
cs
jae
lcall
gs
and
xchg
xchg
or
fsubs
push
ljmp
gs
mov
scas
es
push
jmp
push
addb
loope
in
pop
xchg
jmp
xor
mov
or
bound
in
add
push
xchg
inc
or
add
add
mov
mov
pop
sbb
fcoml
add
sbb
in
jae
fadd
sub
out
xchg
jg
repnz
and
sbb
aam
pop
sbb
fdivl
dec
pop
stos
and
mov
fisubs
jmp
lahf
push
out
or
xchg
loope
or
sub
inc
ffreep
faddl
int
shll
lret
pop
stos
mov
shrb
mov
dec
dec
push
xlat
jo
push
fsubrs
inc
cmp
xchg
mov
dec
shr
push
ffree
lock
mov
aas
rcrl
jnp
hlt
fisubrs
adcb
adc
fisttps
cmp
mov
int
notb
repz
push
inc
push
icebp
iret
xchg
sub
addr16
and
imul
aaa
pop
movsb
cmp
cmpl
notl
in
push
jg
fs
jl
mov
aad
mov
dec
pop
jmp
insb
int3
or
movsb
and
push
or
ror
popa
jp
pop
popf
ret
xchg
or
cwtl
pushf
loop
shrl
pop
mov
xor
aam
in
fnsave
xor
iret
xor
jp
inc
mov
out
mov
rdpmc
jb
lret
or
iret
das
cmp
dec
imul
pop
in
mov
inc
push
dec
cltd
mov
pop
lret
or
icebp
push
and
imul
repnz
jae
push
leave
imul
pop
push
mov
lods
int3
stc
iret
lock
push
shrl
int3
inc
in
iret
loopne
sti
pop
cld
dec
jmp
and
or
xor
jns
into
lds
test
or
mov
push
add
js
or
push
sub
das
mov
mov
cli
pop
test
lret
rorb
test
rcrb
mov
mov
stc
mov
jno
xor
or
dec
pop
pop
mov
mov
ret
clc
cld
dec
div
adc
pop
add
out
popf
jl
ret
xlat
cld
push
pop
xor
xchg
mov
pop
push
push
aaa
stos
mov
les
xor
mov
iret
mov
mov
repnz
xchg
sbb
pop
movsl
loope
and
push
test
je
mov
pop
std
xchg
pop
pop
test
es
sti
xor
iret
sub
sub
fmull
xchg
push
push
mov
xchg
out
mov
inc
pop
js
cmp
jno
xor
insl
add
rcl
fs
jmp
xor
inc
xchg
xor
leave
movsl
les
scas
fwait
lcall
aas
fdivl
lahf
add
or
pop
mov
addb
xor
mov
push
testl
rclb
hlt
out
add
fldl
pop
ljmp
or
outsl
rcl
fisubrs
mov
fs
outsl
and
push
or
out
fstpt
outsb
sub
inc
sbb
xchg
std
sarl
mov
mov
setbe
popa
faddl
xlat
push
dec
inc
mov
xlat
insl
xchg
cmp
shrl
sbb
adc
or
incb
and
andb
mov
xor
bound
or
stc
add
fsub
imul
and
dec
jecxz
rorl
scas
inc
rorl
inc
or
sub
outsl
scas
pusha
sbb
gs
stos
leave
scas
push
std
mov
repnz
sub
pop
gs
lahf
xor
shl
rcrl
loope
loope
int3
xlat
inc
xchg
div
repz
lock
popf
ja
adc
adc
sarb
pop
idivl
gs
enter
arpl
xor
lods
add
jg
or
cmp
xchg
mov
mov
sbb
jnp
mov
rolb
mov
in
mov
cmp
icebp
imul
imul
cmpsb
mov
jle
data16
and
adc
pop
mov
jnp
test
add
xchg
mov
pusha
mov
lods
mov
cwtl
sub
insl
sub
js
outsl
and
into
jb
test
nop
in
jecxz
call
adc
roll
pop
je
xchg
int
fnstsw
mov
mov
out
cmp
cwtl
test
inc
pop
mov
fcmovb
or
std
xor
in
xchg
mov
push
cmpsl
jne
xor
jge
pop
sub
mov
xor
jl
loop
arpl
fisttpll
aam
rcll
jg
das
xchg
hlt
jbe
addb
mov
loop
or
lods
xchg
jmp
stos
js
cli
andb
dec
adc
outsl
pushf
add
push
push
xchg
mov
scas
pop
inc
pop
imul
mov
aas
push
lods
cmp
faddp
mov
pushf
xchg
mov
ds
icebp
out
or
xchg
aad
int
mov
mov
idivl
xchg
mov
arpl
push
pop
cwtl
icebp
cmp
fwait
cmp
or
arpl
rclb
xbegin
mov
bound
xor
cmc
sub
std
das
push
scas
dec
fadd
notl
lcall
das
pop
prefetch
push
sub
cmp
xor
daa
cwtl
repz
cmp
cmc
fs
add
or
adc
or
pusha
shl
inc
loop
xor
and
lds
enter
inc
cmp
fidivrl
lret
movsb
push
test
outsb
mov
shlb
cltd
es
lret
sub
ret
ss
sub
fcomip
pushf
repnz
jg
inc
xchg
add
iret
sub
incl
mov
lods
addr16
in
or
sbb
js
add
sub
push
mov
pusha
dec
in
mov
arpl
in
lods
push
dec
xorl
outsl
mov
sti
adc
test
aad
mov
dec
test
xlat
test
loope
lahf
push
in
lcall
xor
pop
jnp
inc
loope
fcoms
sbb
lea
adc
push
test
cmpsl
jp
test
adc
push
or
adc
fnstsw
jae,pn
jbe
sti
cld
ja
outsl
cmpsl
out
push
aam
push
fbstp
xchg
std
mov
iret
xor
testl
jbe
cmp
scas
movsl
pop
int
mov
insb
sub
pop
popf
stos
das
repnz
mov
adc
or
inc
rclb
sarl
mov
ret
cmpsb
push
ret
lods
dec
add
in
sbb
fidivs
push
mov
or
pop
lds
test
inc
cmpsl
movb
sbb
hlt
cld
pmaddwd
sbbb
jno
jae
xor
aaa
loope
add
or
pop
and
mov
cs
mov
ror
sub
xlat
int3
icebp
mov
dec
out
movsb
popf
or
inc
in
jo
and
and
cmpl
rcrb
sbb
jnp
mov
mov
mov
and
insl
xchg
add
data16
mov
in
and
popa
ljmp
mov
lret
adc
add
adc
jmp
or
enter
jecxz
jle
pushf
cmp
aas
push
call
jo
sbb
pushf
mov
lahf
jecxz
insl
lahf
addr16
dec
jl
push
jno
test
and
into
ja
sub
pop
xchg
rcr
xchg
jo
add
xor
movsl
ficomps
fsts
xchg
inc
sub
repnz
pop
and
test
cmp
je
xchg
scas
lahf
xchg
iret
pushf
sti
or
mov
xchg
ds
lds
add
nop
xor
sub
adc
mov
les
fbstp
sbb
mull
xor
imul
in
mov
sub
lret
or
mov
loopne
push
xchg
ret
xchg
push
add
dec
outsl
inc
es
dec
inc
mov
mov
mov
jne
mov
in
pop
and
in
shlb
out
ljmp
cmp
inc
outsb
les
xchg
lcall
enter
bound
sub
xchg
dec
mov
outsl
lahf
jne
psubsb
dec
enter
xchg
shll
sbb
mov
add
andl
test
negb
adc
jbe
push
addl
je
sbb
imul
xor
leave
or
jae
fbld
sub
js
jno
test
push
sub
add
mov
mov
cmp
sbb
mov
rcr
dec
fmul
push
popa
lock
pop
lods
and
jg
call
fcom
cmp
cs
jmp
mov
lret
cmp
pushf
fimull
mov
arpl
and
and
insl
inc
sahf
fcomps
sub
inc
or
sbb
cmpsl
inc
filds
sbb
xchg
in
push
push
fcmovnb
icebp
mov
mov
lahf
loope
cmp
xor
repz
test
sub
jecxz
loop
pop
popf
mov
inc
lock
lods
scas
pop
sub
adc
jae
aad
das
pop
pop
in
and
pushf
sub
push
ss
push
xchg
mov
shlb
mov
fsubrs
test
jl
aad
pusha
pop
jbe
mov
mov
jnp
ja
jmp
adc
sti
nop
hlt
jecxz
inc
das
cwtl
and
mov
pop
dec
fisttps
mov
sub
or
pop
or
frstor
popa
testb
rolb
jecxz
or
ds
fistl
fs
sbb
and
inc
int3
xchg
loopne
aam
repnz
lret
xchg
mov
xor
cmpsb
and
lock
test
jne,pt
inc
in
mov
repz
add
test
bswap
inc
mov
ret
xor
inc
mov
cmpl
into
jnp
pop
icebp
jnp
hlt
cmp
mov
push
jecxz
arpl
popf
test
or
and
push
sub
fbstp
ljmp
jnp
outsb
push
dec
mov
dec
mov
pop
andps
psraw
add
rcr
pop
pop
xchg
lret
cmpsb
leave
int3
pop
mov
xchg
adcb
lock
incb
inc
push
stos
or
fisttps
xchg
jo
cld
jp
push
fisttps
dec
aaa
and
push
pop
lods
daa
aad
int
sub
dec
je,pn
dec
das
push
jb
or
aam
aam
iret
in
and
icebp
xchg
movsl
cmp
pop
movsl
pop
or
inc
ljmp
dec
adc
push
push
xchg
jns
jl
je
sub
adc
popf
mov
in
test
dec
add
cltd
sub
inc
int3
push
push
push
push
add
cltd
popa
dec
sbb
lods
arpl
cmpsl
cli
sub
sbb
addr16
add
int3
loope
loope
push
int3
ret
or
test
or
arpl
fisubs
and
sbb
lea
js
cmpsb
fstl
mov
xchg
pop
pop
sbb
test
mov
hlt
lock
pop
test
aas
xchg
mov
push
loopne
inc
testl
sub
sbb
movsl
xlat
jae
jecxz
sbb
cmp
bound
mov
outsl
addl
shrl
add
es
arpl
mov
daa
ljmp
pop
ss
pop
xor
dec
cli
inc
or
add
outsb
iret
jle
dec
sbb
das
mov
jae
add
dec
xchg
mov
arpl
add
in
shrb
mov
mov
ret
shll
rcrb
sub
push
xor
push
sahf
out
test
pushl
pop
lret
mov
mov
jle
pop
jecxz
out
es
call
adc
adc
pop
enter
xchg
sti
int
lret
scas
pop
ret
stc
bound
mov
push
js
push
mov
mov
pop
rolb
notb
and
cmp
in
mov
cmp
nop
adc
aad
xor
repnz
push
lea
ror
subl
stos
push
mov
rorl
loop
xor
pop
push
mov
sub
lods
int3
pop
sub
mov
pop
lock
test
and
imul
in
push
andl
fbstp
cmc
icebp
adcb
cmp
rcrb
push
insl
pop
in
push
lea
mov
insb
mov
fwait
cld
and
mov
and
inc
mov
aas
push
popa
xchg
or
call
loope
aam
dec
mov
mov
pop
mov
inc
int
daa
fisubl
pusha
sub
jecxz
and
lcall
fldenv
sbbb
jno
jbe
aas
push
js
faddl
push
std
sbb
in
aam
dec
sbb
in
cmpsb
jbe
xor
jmp
fidivrl
roll
jmp
jo
fisubs
test
inc
xchg
imul
mov
xchg
jo
fs
push
ret
ss
xor
mov
lea
push
mov
inc
sti
or
loopne
push
dec
loop
rol
aas
mov
pushf
inc
dec
hlt
add
shlb
xchg
xchg
sub
push
fsubl
rorl
cmpsl
into
shrl
repz
lret
daa
adc
imul
jae
rolb
aam
jecxz
dec
mov
xchg
pop
popa
mov
xchg
or
sbb
aas
adc
mov
frstor
cmp
popa
add
addl
faddp
jp
clc
in
icebp
je
leave
xchg
les
cmc
add
in
lahf
xor
and
std
scas
jb
fmuls
add
popf
xchg
mov
imul
daa
test
stos
fldl
pop
ds
mov
pop
int3
cmc
aaa
or
jne
add
dec
nop
popa
push
xchg
imul
arpl
cmp
sub
push
inc
add
xchg
out
fs
dec
cmpl
lods
daa
pop
or
and
lods
rcrb
pop
aad
mov
repnz
inc
movsb
test
js
xchg
mov
mov
inc
or
xchg
sbb
xchg
test
xor
mov
push
jecxz
or
in
outsl
inc
rolb
inc
movsl
lods
loope
sbb
or
push
mov
mov
jbe
fcmovbe
add
or
in
pop
adc
jo
and
pushf
sub
push
test
adc
clc
movsl
sub
icebp
adc
inc
push
rolb
loopne
or
pop
inc
jno
dec
rcrl
push
push
mov
inc
cltd
jle
lods
cmp
test
ss
std
adc
sbb
add
gs
adc
mov
mov
xor
xor
das
arpl
inc
enter
mov
pop
dec
push
js
aaa
adc
add
shl
out
sub
mov
imull
adc
cmp
ja
mov
imul
call
cld
pop
loope
or
mov
rol
into
outsb
add
scas
pop
mull
jle
or
xchg
jno
daa
fdivrl
bound
pop
xchg
mov
sbb
inc
mov
aad
shrb
push
or
imul
inc
lret
js
mov
fdivr
push
lret
out
pop
cmpb
aam
fisttpll
les
xchg
out
aaa
jns
mov
mov
sbb
adc
in
pop
ror
mov
jecxz
xchg
mov
fst
lods
mov
shll
movsb
inc
test
cmp
mov
mov
sbb
gs
dec
xchg
pusha
dec
fcoms
shl
pop
dec
cwtl
inc
jmp
xlat
xlat
stos
enter
xlat
out
test
clc
out
jge
lea
rcrl
sbb
jno
dec
xchg
mov
pop
rorb
loop
push
inc
or
push
mov
pusha
add
out
sbb
sub
pop
sub
xor
dec
std
ja
nop
lcall
andl
out
addr16
movsb
lods
sbb
stos
mov
xchg
mov
push
in
push
mov
stos
ljmp
ja
das
jns
cmp
sbb
pop
fdivrs
cmp
push
or
cmp
jl
rcrb
xchg
cmp
adc
stos
lds
pop
xchg
mov
or
xor
jmp
addr16
or
jmp
rolb
movsbl
aad
push
adc
or
and
xchg
sub
mov
loopne
mov
cli
inc
xchg
mov
test
icebp
adc
pusha
nop
mov
aad
inc
shrl
sub
add
push
test
mov
mov
cmp
inc
and
dec
scas
out
adc
sub
outsl
stos
push
add
js
xor
setno
xchg
addr16
stc
inc
inc
pop
sub
add
jb
mov
jnp
mov
test
or
lea
or
xchg
sub
xlat
fmuls
test
or
in
iret
and
adc
fwait
ret
or
outsb
lds
xor
lods
fisubrs
mov
adc
sbb
or
aaa
aaa
out
fxch
jb
jl
add
xchg
xchg
sub
mov
mov
or
push
pop
sbb
in
sbb
lcall
inc
les
sar
ljmp
push
insl
and
mov
push
add
mov
jge
dec
push
inc
test
fstps
add
mov
in
pop
inc
jmp
xlat
jmp
leave
push
fists
sub
or
mov
mov
add
or
add
add
lea
sub
stos
push
mov
xchg
or
jb
test
sti
xsaveopt
sbb
mov
popa
ss
cmc
add
arpl
sub
add
dec
inc
sbbl
in
fistpll
mov
loope
bound
mov
adc
hlt
lcall
mov
push
lahf
ljmp
xchg
data16
popa
mov
or
fnstenv
scas
mov
add
in
adc
push
adc
mov
push
add
pop
fdivs
inc
add
cmp
inc
inc
adc
jle
mov
xchg
add
pusha
xchg
xchg
test
sub
popf
xor
sbb
sbb
xchg
add
ja
movsb
inc
or
ret
out
lock
aad
cltd
adc
xchg
jb
mov
std
std
js
lret
sbb
rolb
sbb
shr
or
aaa
faddl
outsl
push
lods
out
sbb
in
inc
inc
call
lds
insl
ja
mov
mov
stc
arpl
gs
shr
lahf
dec
fbld
clc
lahf
js
das
stos
adc
pop
lcall
add
mov
repz
fstps
adc
or
test
or
pop
or
mov
pop
sub
push
add
in
mov
sub
or
sti
call
fildll
and
into
add
dec
push
stos
movsb
add
jg
dec
mov
push
jae
jne
inc
and
cli
dec
dec
mov
inc
or
aas
inc
inc
or
aas
cmc
rolb
xor
cmp
aas
popf
and
mov
push
in
popa
addr16
adc
cmc
pop
inc
inc
addb
mov
lcall
inc
loope
inc
mov
js
rcll
repnz
movups
or
add
fst
movsl
data16
cmp
flds
imul
pop
inc
sub
dec
sub
xorb
lds
pop
aam
push
and
adc
mov
leave
lds
dec
lcall
or
sub
sub
pop
aad
xchg
loopne
lcall
pop
fsubr
addb
test
sub
mov
repnz
xchg
test
pusha
insb
and
rorl
cwtl
je
je
cmc
sbb
cs
dec
xlat
in
jecxz
mov
dec
out
subb
and
mov
mov
adc
imul
mov
dec
popf
pop
add
inc
insl
fwait
inc
test
add
fwait
insb
push
jne
add
movsl
into
xchg
dec
cmpsb
fbstp
push
aam
mov
out
lds
xor
adc
sbb
imul
cwtl
insb
push
mov
adc
ss
jg
inc
xor
mov
or
test
shl
cltd
mov
pop
call
mov
push
je
das
xchg
lcall
inc
insb
sbb
adc
in
xor
sbb
or
adc
adc
or
xchg
stos
dec
and
fdivrl
shlb
xor
xchg
sbb
std
jl
adc
and
push
sbb
aad
inc
inc
push
or
jg
into
add
xchg
lds
sub
xchg
rclb
push
arpl
push
ja,pt
or
lds
pushf
mov
pushf
push
xlat
test
jnp
pop
stos
mov
repz
fmull
int
fsubr
fisubs
mov
rcll
sub
fdivs
jb
in
lds
das
xchg
loope
push
imul
xchg
cltd
mov
add
dec
loope
imul
sahf
int
aas
add
insl
cld
mov
cmpsb
xchg
sbbb
inc
and
adc
sbb
orb
push
insl
fwait
or
push
roll
cs
fmull
cwtl
arpl
fiadds
inc
mov
adc
lret
popf
cmc
add
notl
lock
loopne
sbbl
in
lods
and
movb
dec
and
les
stos
dec
stos
xchg
add
pop
inc
jp
add
idivb
inc
ret
mov
gs
cli
gs
add
lret
rcl
xchg
add
test
fbld
adc
popfw
fstp
dec
xor
aad
sahf
jb
or
movsb
int3
mov
xor
clc
out
stos
ret
mov
rcll
mov
mov
negl
push
fucom
ret
xchg
mov
shr
in
mov
shlb
mov
loop
rcrb
rcrb
add
repnz
lods
jge
adc
outsb
add
sahf
flds
and
push
sbb
jb
adc
xchg
jb
sbb
add
jmp
add
pop
imul
add
mov
xorb
jge
and
and
xlat
mov
jb
pop
sub
lods
jp
test
loope
rcrb
pop
xchg
stos
and
xchg
popa
mov
push
insl
push
imul
cmp
sti
sbb
lahf
icebp
cld
pop
xchg
ss
test
pushf
xor
add
push
mov
mov
sub
and
dec
adc
or
out
xchg
pop
sbbl
movb
outsl
mov
aaa
sbb
xor
in
sub
adc
add
insb
sbbl
push
inc
dec
ficompl
rolb
mov
mov
ret
adc
repnz
pop
fcomip
incl
mov
scas
out
mov
mov
mov
mov
or
mov
icebp
bound
andb
sbb
ret
arpl
aas
push
fwait
rolb
jb
lcall
mov
pushfw
out
es
and
dec
mov
push
pop
pop
add
rorl
sbbb
sbb
push
inc
iret
mov
dec
test
mov
and
in
sbb
cmpsb
into
inc
xchg
or
lret
inc
or
adcl
xor
cmp
pop
mov
xchg
popf
sbb
fwait
repnz
shll
or
lea
pop
aam
add
xchg
into
push
das
dec
mov
and
inc
mov
ret
inc
daa
xchg
sub
paddb
cmp
pop
lret
aad
sub
int3
jno
xor
notb
in
push
jne
adc
sub
repnz
gs
int
pop
inc
movsb
popa
fiadds
inc
mov
dec
movsb
idiv
inc
adcb
sbb
inc
sbb
popf
pop
in
cmc
les
jbe
in
std
bound
mov
cmp
sub
stos
js
enter
inc
mov
daa
xchg
pop
test
cmp
push
test
lcall
jmp
in
fidivrs
arpl
inc
adcb
sbb
push
jmp
pop
sub
mov
sub
jle
call
push
dec
sub
inc
push
push
pop
sub
movaps
mov
xchg
lods
inc
mov
test
sub
fstps
or
sbb
push
cltd
pop
cmpsb
addb
in
and
push
mov
in
add
imul
clc
in
inc
movsb
lret
or
mov
xchg
add
sbb
cmp
xchg
jge
popf
sbb
lret
insl
aad
movsl
gs
add
inc
inc
mov
mov
jb
or
jno
inc
movl
xchg
mov
enter
movsl
xlat
and
pusha
outsl
es
pop
adc
into
out
ds
sub
nop
pop
rorb
roll
or
lock
cli
movsl
arpl
jns
pushf
lds
sub
cmp
stos
sahf
xchg
insl
nop
out
lret
mov
mov
test
stc
lahf
and
and
lahf
popf
mov
mov
or
arpl
cltd
mov
ror
adc
mov
inc
inc
fisubs
push
jmp
sbb
sub
insb
push
call
xchg
add
push
outsl
cmc
cmp
js
inc
loope
adc
xor
dec
and
jmp
loop
out
ds
notl
and
mov
inc
lcall
sbbl
mov
in
int
adcb
dec
jns
arpl
or
sbb
sbb
rorl
mov
lahf
repz
xor
xchg
ja
mov
adc
xlat
dec
jne
mov
notl
stos
or
sti
in
pop
cmp
mov
bound
insl
ret
cli
aam
sbb
or
cmc
or
pmulhw
int
adc
cmpsb
das
ss
push
roll
dec
push
mov
jns
xchg
loop
jp
scas
pop
lret
mov
mov
inc
nop
cmpb
insb
lds
xchg
insb
xchg
loop
and
dec
cmp
xchg
jl
lods
sbb
lock
mov
in
daa
daa
call
shll
or
je
fs
pop
or
popf
movsl
sub
cmpsl
xchg
addr16
dec
dec
mov
test
loope
mov
sub
cmp
mov
repz
inc
add
gs
push
pop
movsb
sub
sub
test
lea
dec
adc
test
shrb
push
rclb
dec
xchg
adc
and
push
xchg
sbb
daa
or
int
int3
enter
aaa
mov
cmpsl
ja
add
outsb
jecxz
pop
mov
adc
dec
sbb
icebp
mov
cld
xchg
daa
push
mov
jp
nop
test
and
lods
fldcw
lcall
and
daa
jne
cmpsb
sbb
mov
in
arpl
pop
and
lcall
sahf
lea
pusha
xchg
and
push
out
jl
push
fstp
sbb
dec
sub
cwtl
ret
inc
addr16
jmp
inc
xchg
and
adc
sbb
sti
mov
adc
sbb
arpl
sbb
pusha
sbb
or
pop
test
cmp
mov
mov
loope
sub
mov
cmp
inc
push
and
sti
or
and
mov
fld
sub
inc
or
hlt
push
mov
mov
lock
mov
jp
dec
pop
gs
loop
adc
mov
adc
cmc
cltd
cmc
cmp
add
lcall
scas
mov
ss
fbld
loop
je
inc
fstl
pop
jb
int
imul
add
sub
adc
inc
in
ret
cld
out
addr16
jb
inc
lods
add
sbb
inc
aaa
int
dec
fimull
lods
std
xchg
sbb
pushf
add
mov
rorl
ret
cwtl
mov
aas
inc
jmp
or
adcb
daa
icebp
xor
adc
dec
std
les
enter
shll
pop
loope
leave
ja
sub
les
mov
fwait
vpcmpgtd
dec
shrl
jg
fwait
xchg
jecxz
es
aad
cltd
ret
mov
loope
inc
inc
addb
inc
frstor
imul
pop
test
inc
mov
lea
fdivs
ficoms
adcl
mov
or
xchg
sub
xlat
push
adc
lahf
int3
inc
std
fiaddl
and
in
cmp
pop
jns
add
in
or
std
cmc
add
mov
adc
fcoms
xchg
pop
cli
mov
xchg
icebp
inc
mov
int
add
pop
insb
sbb
and
jge
ss
shlb
inc
add
test
mov
scas
sbb
add
dec
dec
push
xor
jmp
std
push
fs
mov
cmp
aaa
cs
sub
out
imull
jae
jp
or
dec
inc
fisubrs
enter
jae
dec
dec
pop
das
and
shlb
mov
mov
leave
int3
incl
jbe
aam
daa
testb
clc
shlb
ss
lock
and
or
sub
xlat
push
gs
leave
mov
shrl
jnp
and
mov
pop
sbb
sbb
out
xor
and
mov
aad
imul
fistpl
aaa
jne
add
xorb
mov
gs
push
push
cmp
xor
push
or
pusha
sti
leave
mov
pop
pushaw
xchg
jae
cmp
xchg
shll
xor
imul
adc
addb
aam
dec
rcrb
fsubl
dec
jle
sbb
rorl
jne
fcomps
cmp
sbb
test
add
inc
mov
push
fwait
std
xor
jo
call
icebp
loopne
mov
hlt
cmpsb
je
cmc
lea
dec
fists
mov
mov
bound
movsl
pop
mov
mov
inc
push
inc
jne
mov
adc
xchg
jns
insb
xor
cwtl
cmpb
xchg
or
insb
and
out
loopne
jecxz
iret
mov
sub
aaa
dec
in
inc
in
adc
shrb
mov
addr16
jmp
sub
stos
push
inc
cmp
imul
movb
lcall
jns
fistps
inc
loop
pusha
cmpsl
dec
ror
cli
push
push
cmpsb
imul
ja
adc
inc
iret
arpl
mov
jb
cli
xchg
data16
xor
sahf
push
dec
jg
fnstsw
push
nop
ja
mov
aad
jmp
mov
or
dec
arpl
test
xor
ja
xchg
inc
sbb
lds
ja
in
add
mov
xorl
or
mov
dec
aas
aaa
pop
sub
jbe
insl
hlt
movsl
mov
or
add
mov
outsl
sub
stos
pop
lock
loope
out
inc
or
mov
mov
adc
push
sbbl
jae
xor
mov
xor
fnstenv
insl
cmp
xorb
cmc
lret
or
mov
ss
nop
je
mov
in
pop
dec
sub
and
aas
or
push
shll
cmp
into
xor
lods
or
sbb
xchg
mov
fcoms
dec
sbb
push
inc
outsl
jbe
xchg
or
mov
and
imul
lods
add
aad
cmp
loopne
pop
sbb
jns
das
enter
les
jp
xchg
insb
mov
idiv
ja
mov
jmp
in
mov
in
mov
jecxz
xchg
sbb
xor
mov
clc
out
mov
and
add
adcl
ret
add
in
jno
jbe
pushf
lret
inc
lret
or
sbb
xor
mov
sub
ja
ret
xchg
sub
adc
in
rcll
sarb
sahf
mov
insb
jae
test
xor
ret
std
lods
lods
jae
cmp
fidivl
hlt
push
jmp
in
scas
push
push
push
xor
mov
cld
fwait
push
fsubl
lcall
jecxz
jae
jae
pop
sbb
xor
fsubp
cwtl
bound
mov
xor
in
sbb
dec
adc
sbb
roll
cld
cmp
or
sahf
arpl
push
lret
pusha
fsubs
cmp
mov
sub
mov
lret
cmp
fcmovbe
jp
ss
repz
push
add
xor
jne
add
shrl
imul
es
push
icebp
mov
xchg
inc
subb
jnp
lea
sub
push
rclb
movsl
pop
cwtl
mov
mov
sbb
test
or
fs
lock
mov
sub
lcall
and
aam
xchg
enter
mov
in
call
add
repnz
repnz
jb,pn
bound
nop
xor
lock
adc
das
jp
cli
and
pop
dec
pushf
add
dec
push
fwait
aad
xchg
cmp
vmread
mov
push
jg
jp
clc
test
mov
mov
cmpsl
lock
mov
jg
cmc
rcll
repnz
sbb
xor
mov
movsb
push
mov
into
in
or
xlat
xrelease
icebp
stos
fmulp
inc
mov
jl
rolb
test
mov
fistps
add
scas
pusha
hlt
push
inc
mov
mov
rclb
icebp
sahf
cli
add
imul
mov
dec
mov
loop
lods
push
push
adc
mov
shrl
push
fisubl
dec
shlb
ret
outsl
inc
int
pop
orl
fistps
outsl
aaa
pop
test
out
stos
stos
push
inc
and
pushf
data16
inc
sub
cmc
fcomps
pop
int
outsl
shrb
divl
or
sbb
cwtl
sub
or
loope
mov
pusha
pop
mov
sbb
add
jno
sub
ja
jp
xchg
adc
sbb
call
sti
add
in
repnz
and
and
xchg
pop
loope
int
inc
xlat
xchg
out
aaa
pop
or
es
or
cmp
daa
push
scas
cmpsb
shlb
fdivrp
test
ljmp
repnz
mov
or
inc
and
jp
jg
xchg
or
adc
pusha
shl
jnp
jg
mov
sbb
es
xchg
sbb
push
sub
enter
js
inc
jg
int3
idivl
out
testl
test
aas
pushf
inc
mov
fsubl
pusha
push
in
loope
sbb
or
pop
or
xchg
jo
dec
cmp
lcall
enter
sbb
test
aas
cltd
clc
shrl
mov
cmp
psubusb
or
add
add
xor
int3
xchg
xchg
jp
movsb
sbb
or
lahf
testl
out
popf
shrb
shl
jecxz
cmp
cmp
cmp
movsl
aaa
adc
popf
neg
or
mov
mov
jmp
xchg
rorl
jmp
scas
jb
icebp
sbb
mov
mov
hlt
fldt
rcll
xchg
rcrb
sahf
mov
sbb
xchg
mov
jnp
fcompl
jb
imul
pushf
fmull
insb
enter
movsl
or
in
jno
lcall
imul
cmp
xchg
adc
add
inc
xchg
push
pop
jbe
sbb
mov
repz
cmpsb
xor
mov
inc
sub
add
iret
call
lds
pop
adc
xor
cmc
adc
mov
sub
ror
das
jae
out
cmp
mov
mov
cwtl
mov
inc
xor
test
subl
stos
loope
pop
fnstcw
iret
call
adc
in
xor
push
inc
in
ds
pushf
aaa
fcompl
and
and
ret
lock
setb
xchg
repnz
xchg
ljmp
popf
addl
mov
adc
arpl
inc
adc
add
push
or
test
dec
mov
idivb
iret
cltd
mov
push
adc
out
pop
clc
adc
sub
dec
and
pop
jnp
mov
shll
push
rcl
xlat
xchg
pop
mov
lods
cmp
xchg
aaa
stos
or
sub
or
pop
dec
dec
mov
push
repz
xor
push
adc
bswap
lods
mov
push
or
pop
test
sarl
lock
in
and
push
push
insl
sbb
jp
sbb
dec
aad
pusha
mov
inc
fmul
cmp
mov
or
adc
mull
negb
jno
shll
add
ja
lods
sub
xchg
or
mov
aas
data16
repz
fisttpl
out
imul
movsl
mov
push
xor
and
int
sbb
andb
fldenv
dec
in
ja
ljmp
cli
push
lahf
cmp
add
mov
and
xchg
sahf
or
pop
ds
dec
int
xchg
scas
pop
scas
sbb
xchg
nop
lcall
adcl
jbe
xor
cmpsl
test
xchg
lcall
pushf
xchg
jbe
gs
and
into
in
xor
dec
call
popf
orb
mov
mov
testb
fnstsw
and
push
lods
adc
pop
xlat
js
sub
sbb
add
popf
push
pop
mov
lret
ja
fldln2
aas
shl
iret
out
aas
cmp
mov
push
adc
incb
xlat
xchg
jb
dec
shll
inc
dec
bt
movsb
stc
add
cmc
in
pop
sti
loopne
sub
pusha
or
push
in
sbb
into
lcall
std
jp
in
jne
xlat
pusha
lcall
insb
adc
shlb
out
cli
mov
fcmovnb
lret
cmc
push
jecxz
test
pop
movsb
iret
fcoml
pusha
or
aam
jnp
sub
rcll
gs
push
jge
sahf
into
xchg
filds
popa
add
pop
ficompl
es
xor
inc
rolb
push
mov
cs
ret
loopne
fldcw
mov
or
jne
es
and
aas
jo
xchg
insb
loopne
or
jno
jp
test
fstpl
lds
lcall
push
imul
push
inc
mov
push
sti
lock
mov
fdivrl
aas
jecxz
pop
adc
int
and
fwait
sub
fsubrs
fcompl
in
and
push
sar
stos
mov
sub
addr16
fnstenv
xchg
or
and
lret
out
sar
into
or
or
sbb
mov
cmp
mov
or
aaa
test
push
or
sbb
jb
pusha
cmp
xchg
in
mov
sbb
xor
jns
rcrl
jp
iret
and
add
enter
cmpsb
add
fstpt
cmp
jmp
setge
sub
pop
xchg
ret
shlb
xchg
inc
hlt
sub
mov
xchg
xchg
cmpl
jg
lret
test
pop
jnp
jae
adc
jecxz
and
or
push
fwait
sbb
push
int3
loope
push
mov
xlat
or
call
xorl
pusha
out
mov
std
mov
int3
sbbl
icebp
or
filds
repz
loopne
jmp
mulb
jnp
sbbb
push
out
dec
in
out
jae
iret
cmpsl
scas
lret
fidivl
mov
cwtl
and
test
jmp
fisubrl
push
pushf
inc
lods
into
xlat
cmc
xlat
shll
clc
lods
push
outsl
fldl
outsb
sbb
jae
fwait
es
or
mov
ss
fidivs
jb
loop
add
mov
push
push
mov
stos
daa
ret
divl
aaa
test
inc
fisubrs
adc
mov
or
mov
das
inc
inc
add
stc
pop
decl
sbb
sbb
outsl
mov
or
sub
sti
push
loope
cwtl
int
adc
addr16
pop
xchg
push
lahf
les
aaa
imul
push
and
sub
iret
sbb
push
pop
popf
xor
stos
cmpb
flds
adc
lret
adc
sbb
and
clc
imul
push
and
xchg
stos
sub
push
shl
xor
push
xor
imul
and
sbb
movsb
inc
ljmp
adc
out
lock
out
or
push
pop
leave
xor
fsubp
push
fadds
addb
add
mov
jae
mov
dec
dec
rcl
sub
loop
adc
mov
scas
mov
addr16
pusha
dec
orb
sbb
cmc
push
dec
inc
sbb
sub
mov
xor
call
jbe
and
jmp
mov
fwait
shl
scas
inc
sbb
mov
add
push
fldt
xlat
mov
pop
push
sub
popa
jl
add
lods
loop
fucomp
into
xor
mov
inc
or
addr16
cmpsl
push
imul
inc
dec
test
inc
scas
add
dec
stos
add
lret
xlat
arpl
sbb
cmc
fsubrl
repz
push
dec
push
enter
add
xchg
sbb
lods
je
outsl
add
add
nop
shll
xchg
fisttps
test
fildll
lret
xor
shll
loop
push
lods
scas
cmp
xchg
fs
out
inc
iret
ret
int
jo
pop
push
fnstenv
adc
add
cld
fnstcw
aaa
or
popa
cltd
test
fstps
xor
sbb
or
mov
push
sbb
jmp
repz
mov
and
mov
pop
sahf
into
mov
stos
push
shrl
test
rcr
lds
shlb
rolb
sahf
std
mov
push
adc
ficomps
outsb
stc
jne
out
outsl
cwtl
xchg
stos
loope
add
adc
addr16
outsb
imul
dec
push
pop
push
adc
bound
mov
bound
scas
mov
notl
popa
or
add
shlb
cmp
test
mov
mov
jle
xor
push
not
outsl
or
or
cmp
int3
pop
push
inc
cltd
inc
stos
cmp
adc
ror
mov
jle
shll
mov
jbe
push
rcl
cltd
sub
rcrb
into
add
adcl
xchg
imull
dec
idivl
out
mov
insb
jb
cmp
iret
mov
pop
jae
push
dec
push
lea
and
inc
mov
int3
dec
ds
pushf
fisubl
mov
dec
int
mov
or
add
adc
ret
cwtl
sbb
inc
in
aad
aas
test
or
int
jnp
psubb
imul
clc
xchg
jns
fwait
adc
adc
sbb
or
pusha
dec
in
lret
data16
loopne
inc
int3
mov
movsl
push
ja
int3
xor
push
mov
push
sbb
pmaxsw
pushf
sbb
ds
cltd
push
pop
lods
lret
xchg
idivb
sub
cld
pop
mov
enter
mov
imul
lods
inc
sahf
ljmp
cld
push
out
test
shll
jp
call
mov
rorl
mov
cmp
push
icebp
inc
fwait
mov
and
mov
jo
mov
imul
movsb
or
push
pop
popf
pusha
or
jmp
pop
fists
sub
mov
and
dec
lret
insl
sbbb
mov
push
test
lret
ret
mov
mov
test
das
and
data16
cmpsb
sub
andb
jb
out
mov
lods
jb
pop
push
and
int3
add
and
fcmovu
es
cmp
mov
leave
jnp
loope
dec
sbb
sub
hlt
xchg
or
scas
xchg
add
jle
bound
add
mov
sbbb
push
ljmp
xor
push
insl
pop
jne
adc
filds
push
test
jmp
jmp
cmc
inc
cmc
rorl
adc
or
push
jae
jmp
jecxz
xchg
mov
xchg
imul
add
je
inc
insl
adc
mov
push
adc
lock
or
dec
jne
shr
lcall
mov
add
and
in
jp
mov
aas
jle
jge
push
sbb
loopne
lock
add
out
sti
test
into
hlt
jmp
mov
adc
int3
push
in
arpl
fdivs
xchg
aam
in
mov
mov
adc
pop
mov
xchg
push
push
fwait
push
das
insb
sbb
sub
mov
mov
gs
ds
in
mov
arpl
mov
add
cmpsl
xchg
test
ret
ss
jne
add
sub
pop
fdivs
subb
cmp
and
xor
out
or
lds
scas
pmovmskb
cwtl
push
adc
stc
in
cli
inc
mov
cmp
lret
lret
and
les
push
and
jecxz
mov
test
fmuls
xchg
dec
in
repnz
or
fbld
inc
push
push
fmull
sahf
jb
sahf
es
add
dec
lcall
aas
or
js
fwait
hlt
lock
loope
mov
shlb
push
int3
arpl
xor
sbb
movsl
daa
add
lods
xor
mov
fistps
and
loope
or
or
out
add
ja
jmp
mov
dec
frstor
pushf
mov
sbb
pop
gs
sub
aad
push
insb
xor
fwait
subb
pop
les
nop
mov
ljmp
in
popf
lcall
xchg
lock
imul
rcl
xchg
cs
pop
add
loop
pop
movsl
lret
loopne
lea
pop
ja
pop
jae
sbb
repnz
dec
sub
or
cmp
adc
cld
pop
push
pusha
dec
int
mov
mov
mov
fcomi
arpl
and
xchg
int
sub
fcmove
loop
xchg
lods
cld
int
or
test
test
loope
or
sbb
inc
xchg
add
int
rorb
push
shrb
sbb
mov
cltd
and
pop
and
and
aaa
mov
add
jbe
shll
lret
lret
aad
in
scas
test
add
xchg
sarb
out
add
lods
xor
ret
cmpsl
sti
push
cli
sbb
ret
gs
add
sub
out
add
fcoms
stos
aas
jge
or
cmp
int3
add
xor
lahf
push
cld
shll
sbb
dec
adc
lret
loope
filds
test
das
les
les
xchg
fnstsw
out
mov
add
and
cmpsb
test
jns
leave
pop
loop
or
std
mov
pusha
adc
lods
in
push
out
mov
jae
mov
movsb
jbe
out
jl
lods
and
in
in
sbbl
loopne
xchg
push
pusha
movsl
testl
fistl
aad
pop
xchg
js
nop
xchg
rorb
into
jge
mov
sbb
fwait
xchg
mov
pop
pop
mov
iret
push
xchg
test
sbb
xlat
aad
push
scas
cmc
shll
add
mov
push
aaa
stos
scas
clc
inc
xchg
in
dec
es
in
pop
loopne
and
and
add
lock
in
out
dec
cmpsl
pop
xor
add
dec
dec
lcall
xor
pushf
aaa
inc
ljmp
sub
ffree
nop
jg
popa
ljmp
inc
mov
fs
lahf
lcall
xor
out
pop
xchg
insb
into
cmp
mov
addr16
mov
ss
test
insl
sub
dec
fisttpll
pop
sbb
scas
shrl
imul
add
or
enter
mov
push
mov
sub
add
test
dec
dec
jnp
mull
dec
jecxz
subb
adc
loope
gs
ret
dec
xor
sti
lock
jp
test
mov
pusha
sub
ds
rcll
jle
movsl
rcl
add
cmp
adc
pop
push
loope
out
jl
xor
fldt
mov
data16
popl
gs
add
xchg
push
push
sbbl
outsl
dec
push
fcompl
add
adc
leave
movsb
adcb
add
int3
inc
std
or
addl
call
adc
fbstp
addr16
fbld
mov
jnp
stc
sbb
jb
dec
push
inc
push
push
stos
adc
push
xchg
adc
fwait
sub
imul
sbb
fsubrl
cmp
add
aas
hlt
scas
add
xchg
jae
fstpt
shlb
insl
push
dec
sub
or
out
loope
hlt
outsb
fildll
jno
enter
mov
jo
imull
das
in
pop
mov
cwtl
arpl
cli
hlt
rol
sub
xchg
in
ret
mulps
and
xor
or
push
add
xlat
in
mov
out
fmull
imul
int3
xchg
and
inc
lods
dec
outsl
push
bound
jbe
inc
dec
pop
mov
ja
cmova
popl
jl
stc
out
push
lret
ja
lds
in
test
inc
dec
xor
adc
lret
hlt
or
push
dec
inc
push
mov
out
xor
cmp
jecxz
insb
inc
rol
sbb
out
in
arpl
arpl
push
push
and
outsl
push
adc
jp
pushf
sub
insl
mov
xchg
or
rorl
pop
popf
stos
and
insb
mov
enter
inc
lods
sti
add
call
sarb
je
cmpb
int3
aas
fidivl
mov
adc
sarb
xor
sub
sbb
fsubl
inc
dec
nop
cmp
jl
out
lret
int3
int
or
roll
ffreep
call
jge
call
mov
es
mov
dec
leave
adc
aad
jbe
scas
and
dec
mov
push
add
rorl
in
andl
das
test
leave
in
ficomps
cmp
das
paddb
pushf
into
insb
lret
xchg
mov
daa
xor
and
jl
vmovsd
xlat
cmc
cmp
jb
shlb
pushf
mov
jbe
fisubrl
jecxz
std
jecxz
cwtl
std
mov
in
pop
repnz
and
pop
mov
push
jge
or
outsb
aad
push
iret
adc
int3
mov
ds
fldl
sbb
pushl
sub
test
xor
cs
xor
pushf
fwait
cmp
mov
mov
dec
lods
xorl
mov
jecxz
aam
add
adc
sbb
nop
stc
cltd
cmp
pop
stos
dec
mov
sub
adc
dec
ficompl
pop
pop
jns
and
in
lcall
loop
loopne
inc
inc
xchg
int3
mov
ss
aam
cmpsl
icebp
repnz
shll
mov
subl
mov
int
orps
jns
xorl
sahf
ds
inc
mov
or
sbb
rcll
ss
imul
xchg
sbb
pusha
sti
dec
dec
inc
fsubr
adc
sbb
test
adc
sub
mov
repz
loop
ds
sti
mov
cmc
lds
fwait
lret
sbb
loopne
xlat
or
iret
mov
repnz
test
mov
pop
nop
popa
push
out
cwtl
cmp
fcomps
xor
or
into
arpl
repnz
leave
xor
inc
push
loop
je
popf
mov
jmp
sbb
out
arpl
xor
int
cwtl
sbb
in
adc
sbb
cwtl
jmp
xchg
in
xchg
xchg
fiadds
rorb
repnz
sub
arpl
add
out
in
and
out
inc
repnz
mov
and
adc
rcrb
pop
cltd
jns
push
test
imul
inc
arpl
sub
out
out
xchg
sub
and
data16
imul
jecxz
dec
jp
mov
jo
pop
inc
ja
mov
add
repz
push
push
call
push
sti
outsl
int
push
data16
adc
and
subb
or
or
mov
flds
or
repz
pop
sbb
jge
out
jno
cmp
push
pop
js
mov
lods
dec
xlat
mov
test
mov
inc
test
add
out
lods
das
push
aas
rcrl
popf
mov
aaa
sbb
sub
xlat
das
out
xor
data16
jp
fisttps
adcl
cmp
test
cmpsb
push
sbb
mov
or
lret
cmp
stos
orl
xorl
mov
aam
pop
lds
inc
jp
add
test
jp
cmp
sub
sarl
inc
mov
fs
jecxz
lret
xor
mov
repz
daa
rcll
push
cmp
popf
jb
ljmp
or
inc
jno
sub
outsl
rcrb
xchg
and
adc
hlt
sub
mov
mov
lahf
ja
lret
lret
mov
sbb
in
jb
and
or
aas
mov
shl
shlb
fidivl
shrl
mov
or
clc
rolb
inc
das
test
loope
push
xchg
fucomip
fildl
iret
fisubs
pop
data16
fs
inc
lcall
cmpsl
fmul
or
leave
or
mov
jl
and
mov
adc
jge
stos
or
push
sahf
test
in
dec
movsl
mov
inc
fwait
idivb
aaa
mov
lods
out
ss
lcall
pop
or
sbb
pop
punpckldq
xchg
mov
gs
sub
ffree
xchg
stos
shrb
loope
adc
sbb
ds
enter
aam
popf
cli
push
negl
pushf
cwtl
mov
sub
xchg
xchg
mov
gs
push
arpl
lret
adc
call
sbb
das
sub
push
ror
pop
push
cld
dec
add
add
jp
roll
das
sahf
cld
fidivrl
or
pop
push
or
xor
fcoml
adcl
add
movsl
mov
aam
adc
ljmp
lds
iret
insb
push
out
aas
lds
cmp
cmpsb
and
mov
pop
cmc
loop
or
mov
jmp
xor
addr16
insb
outsl
and
shrb
or
cmpsl
inc
scas
dec
cmc
push
aam
xor
mov
call
sbb
rorl
call
push
int
stc
lret
test
insl
mov
out
loop
cmp
sub
je
scas
test
or
jns
jecxz
int3
mov
aas
je
add
shlb
jmp
ss
movsl
iret
or
iret
lock
lea
sbb
lods
xlat
adc
pop
add
and
pop
push
pusha
aaa
in
push
adc
push
pusha
jb
test
mov
fistl
push
xor
test
lret
inc
xchg
daa
inc
sub
jo
adc
mov
push
adc
in
orb
ret
sub
xor
push
xchg
int3
test
clc
iret
pusha
mov
cli
sub
imul
cmp
dec
push
and
sub
xor
inc
xor
aam
sub
scas
cld
lret
hlt
movsb
sti
mov
xchg
orl
fldl
mov
mov
cmc
mov
scas
inc
inc
lret
adc
adc
push
mov
into
lock
or
pusha
frstor
xor
call
xchg
xor
lret
imul
xor
jmp
and
cmp
ljmp
data16
and
mov
lahf
mov
and
mov
fadds
daa
sbb
hlt
movsb
adc
pop
cmpl
fs
adc
cmc
mov
sti
iret
mov
lret
lods
loopne
sub
movsl
fsubs
mov
pop
pop
adc
xor
sub
or
pop
jp
leave
decl
inc
push
push
push
out
fldl
mov
push
sbb
jmp
xor
jmp
mov
imul
leave
cs
rcr
mov
dec
je
scas
sbb
xchg
leave
sub
push
test
xchg
xchg
fistl
jg
jne
fsubrl
or
add
push
push
push
sbb
and
fsubr
cmp
mov
jbe
repz
cmp
sbb
sahf
mov
fcmovbe
or
lret
pop
rcrl
inc
mov
std
aam
sbb
lcall
push
push
lds
leave
adc
xor
pop
leave
js
scas
das
insl
lods
lods
loop
dec
push
ret
pop
in
scas
cltd
or
js
mov
xorb
es
outsl
enter
in
pop
adc
pusha
mov
mov
leave
xor
in
or
movsl
cwtl
lcall
xlat
sub
sbb
sbb
push
mov
loope
push
dec
pop
xor
fisubrs
out
lds
mov
into
jne
out
repnz
sbb
lret
adc
movsl
adc
ret
test
lret
add
or
sbb
andl
ret
scas
sahf
rorl
mov
or
cmp
in
pop
xchg
xlat
mov
mov
call
pop
and
sahf
cmpl
clc
pusha
shlb
mov
pop
cltd
cmp
test
and
sub
loopne
loope
addr16
mov
shll
aad
cmc
lods
mov
jmp
dec
add
push
inc
js
mov
sub
pop
test
hlt
and
arpl
stc
or
into
mov
cmp
mov
ds
sahf
push
and
lcall
lcall
loop
lret
xchg
cmp
arpl
fwait
and
ficoms
jp
data16
jne
std
loop
test
sub
pop
sub
or
popf
mov
or
lret
mov
jmp
repz
adc
call
cmp
insb
arpl
dec
sub
aad
je
scas
out
adc
pop
xchg
mov
dec
lret
and
mov
aam
repnz
sbb
rcl
shl
push
data16
popf
cltd
push
push
adc
xchg
dec
in
stos
sbb
fcomps
enter
mov
fsubp
jg
jle
xchg
je
arpl
rcll
jb
add
jbe
adc
popa
cwtl
mov
aad
dec
or
fidivrl
insl
xchg
push
add
and
sbb
mov
test
mov
mov
mov
jb
arpl
fabs
movsb
pop
ret
sbb
fidivl
adc
jo
pusha
push
ret
mov
ret
addr16
clc
mov
int3
xchg
popa
push
notb
dec
data16
insb
sub
xorb
ret
test
rorb
test
mov
and
sbb
fistps
adc
sbb
adc
stos
mov
lea
xchg
shll
jecxz
mov
cmp
cmpb
in
fwait
cmp
out
or
add
push
es
xor
bound
or
mov
popa
xor
in
push
jbe
aas
mov
jns
cwtl
sub
sbb
popf
jge
icebp
and
bound
incb
adc
xor
out
dec
vandps
notb
push
cmp
mov
sub
xor
cmp
arpl
mov
mov
fidivrl
xchg
inc
fucomi
or
jbe
sub
and
fstpt
out
mov
cmp
inc
lret
loopne
jae
hlt
pop
ds
sbb
faddl
lret
add
inc
in
inc
adc
inc
cmp
cmp
sti
mov
je
adc
cltd
repz
mov
aad
leave
mov
jbe
stos
dec
lcall
int
sarb
sbb
faddl
outsb
mov
add
data16
out
stos
test
fs
lock
adc
outsl
add
lods
jbe
icebp
mov
or
mov
js
fadd
push
enter
adc
pushf
pop
push
repz
std
nop
add
sub
push
fwait
adc
in
movsl
in
jecxz
jnp
inc
cmc
pop
jle
pusha
xor
mov
fidivs
sub
inc
xchg
push
jbe
fisttpl
cmp
test
ficoms
dec
xchg
ds
subl
and
inc
jb
jns
push
adc
mov
mov
cmpsb
mov
dec
dec
outsl
loopne
cmpl
lcall
cmp
repnz
pop
push
pop
and
mov
xchg
test
inc
adc
pop
and
inc
mov
lods
lods
sti
mov
mov
sbb
flds
std
arpl
iret
es
pop
arpl
mov
rorl
test
mov
call
or
add
adc
jne
js
cmp
fistpl
lods
std
sbb
sub
addl
pop
dec
lds
pusha
daa
scas
into
push
movntps
subb
mov
adc
cmp
test
out
lcall
ja
repnz
xchg
xor
xchg
pushf
add
pop
sub
into
cli
dec
adc
mov
cltd
pop
or
xchg
lahf
xchg
adc
stc
jbe
les
dec
sbb
or
and
mov
in
mov
loopne
sub
arpl
inc
and
lcall
sub
gs
mov
rclb
je
mov
sub
cmpsb
fsubrl
cmp
call
pavgw
lds
std
inc
int
mov
and
add
sub
pop
and
xchg
shrd
and
movsb
rcr
cmp
out
idivl
xchg
xchg
or
aaa
pop
lock
popa
xchg
sub
pop
mov
shrl
ds
imul
and
loope
xchg
adc
pop
or
dec
out
pop
mov
icebp
push
sahf
inc
cmp
lock
into
nop
xchg
inc
cmpsl
repz
xlat
xchg
mov
xor
cmpb
in
jnp
pop
cli
out
mov
or
hlt
stos
neg
ja
leave
mov
mov
bound
lock
or
mov
push
mov
sbb
je
sbb
xlat
test
mov
mov
out
outsl
xor
cmp
rcll
mov
movsl
in
adc
cld
adc
movb
pusha
inc
sti
rcrl
sub
test
xor
push
into
aaa
sbb
adc
cs
add
neg
cltd
and
and
cs
or
add
fldt
mov
loope
mov
call
mov
frstor
mov
adc
sbb
fwait
jl
or
ss
sbb
jns
inc
cmp
and
mov
outsb
cmp
mov
jmp
imul
pop
gs
pop
ljmp
leave
mov
cld
pop
push
cmp
pop
cwtl
mov
dec
sbb
mov
aam
fsubl
or
roll
pcmpgtb
out
subb
test
pusha
xchg
leave
cli
sbb
jno
or
stc
mov
push
xchg
lahf
or
cltd
sub
mov
out
mov
insb
lds
sbb
mov
and
jno
sbb
out
sub
in
mov
ljmp
push
and
sbb
mov
mov
out
pop
push
and
push
cld
shrb
test
mov
lea
or
hlt
mov
cld
sti
stos
leave
movsb
lret
lcall
sar
mov
xchg
out
test
stos
lea
pop
in
lret
mov
xor
adc
adc
pop
daa
fmul
cltd
sbbb
das
cltd
imul
insl
enter
sbb
sub
outsl
pop
shlb
inc
ret
sbb
mov
out
into
pusha
or
jmp
jp
pop
inc
mov
lds
pop
aaa
aad
adc
leave
imul
and
hlt
je
mov
mov
fldenv
or
and
inc
or
in
mov
cmp
les
and
fsub
push
stc
pop
pop
push
out
rep
add
ret
sub
xchg
cltd
push
pop
loop
mov
jmp
mov
sbb
mov
insl
pop
jnp
ss
fs
fstps
add
rorl
add
jnp
jp
pop
lods
mov
or
mov
negl
in
test
popf
jo
iret
and
dec
outsb
xchg
push
jecxz
inc
push
add
into
shll
add
icebp
pop
push
adc
popa
int
fistpl
sti
ret
adc
call
xchg
xor
mov
cmp
add
mov
xor
sti
xchg
sbb
iret
jb
dec
mov
mov
mov
inc
dec
into
inc
or
and
xchg
ret
pop
xlat
jmp
mov
dec
stos
mov
cwtl
out
or
js
dec
decb
inc
xor
aad
pop
fdiv
lods
cld
cmp
push
insb
sbb
mov
cmp
inc
insl
enter
xor
test
pop
jo
and
cltd
xchg
loope
in
fmull
dec
push
xchg
jo
adc
xchg
cmpsl
out
int3
mov
sbb
cmpsb
fmul
in
dec
xchg
fsubs
push
fistl
fstpt
outsb
mov
sbb
add
or
outsb
or
dec
sbb
rclb
mov
movnti
mov
mov
lds
lds
adcb
fldl
into
repnz
iret
cmpsl
lea
aam
jbe
push
std
lods
sbb
in
dec
fwait
out
enter
iret
add
lret
aas
or
clc
jmp
fwait
mov
fildl
js
fwait
cmp
test
dec
nop
fwait
aaa
testb
push
stc
movsl
es
lcall
dec
jg
xchg
outsb
in
sbb
mov
cs
insl
loopne
andl
call
push
jo
and
mov
stc
mov
movsl
pop
inc
outsb
leave
sub
xchg
fwait
lods
sahf
lret
addr16
sbb
xchg
dec
xchg
and
hlt
jg
bound
xlat
mov
aam
fistl
leave
fs
or
cltd
mov
and
rol
sbb
loopne
rorl
aam
lret
shrb
xchg
jne
call
in
aas
iret
lock
and
mov
int3
add
or
shl
lret
mov
inc
das
jg
push
pusha
jne
push
cmpsb
int3
ret
jb
xchg
sti
sbb
jp
inc
andl
cmc
jno
sub
clc
cwtl
pop
or
cld
jne
mov
test
sub
jno
aam
dec
sahf
add
push
jbe
jne
outsb
mov
or
aam
fildll
adc
sbb
in
iret
add
loopne
mov
push
pop
jecxz
mov
lcall
pushf
or
out
xchg
jb
in
repnz
sub
fildll
in
mov
mov
call
mov
sbb
push
dec
lret
mov
cwtl
xor
ret
sahf
fwait
and
xchg
adc
mov
adc
sbb
lds
lcall
xchg
pop
in
adc
adc
mov
xorb
add
add
aam
cmp
or
stos
sbb
adc
jbe
out
dec
divps
cmp
insb
shlb
lods
push
aam
cmp
push
ja
adc
or
push
dec
inc
jp
popf
iret
mov
gs
sti
mov
in
inc
xor
int3
mov
pop
mov
dec
nop
leave
dec
testb
jns
adc
xor
in
fists
cmp
lcall
push
andl
add
imul
jge
and
mov
inc
outsb
cld
inc
imul
adc
sub
dec
and
mov
lret
jp
sub
loop
pusha
sub
movsb
mov
sahf
popa
pop
lods
roll
inc
fs
sbb
popa
mov
and
mov
xor
jg
adc
xchg
inc
fwait
xchg
mov
inc
add
sbb
lock
sub
push
in
jmp
pop
out
jnp
in
sti
das
lcall
fmuls
add
jns
addr16
int
xorps
scas
xchg
dec
leave
fldt
and
sub
ja
adc
and
adc
mov
in
or
lahf
sarl
sub
loop
arpl
sbb
and
sub
and
or
in
ror
sub
mov
or
pop
or
push
add
dec
int
xlat
or
push
inc
out
mov
mov
leave
shlb
mov
adc
xor
pop
std
and
pop
dec
mov
imul
int
pop
or
lods
nop
or
scas
in
jp
int
cmpsl
xchg
dec
adc
mov
in
mov
pop
nop
and
xchg
test
xchg
icebp
add
repz
adc
mov
stc
adc
aam
push
pop
sub
adcl
mov
mov
mov
lret
movl
adc
decb
dec
sbb
xchg
dec
and
sbb
je
and
xorl
enter
sbb
xchg
les
fwait
addr16
add
lods
xchg
arpl
and
add
incl
mov
or
arpl
push
int3
pushf
adcb
xchg
lret
xchg
push
inc
std
stos
mov
sbb
test
stos
outsb
cld
cld
sub
lcall
clc
and
icebp
cmp
pop
int3
lds
jge
mov
icebp
xchg
incl
in
shl
stos
loopne
aas
loopne
fnsave
lahf
repz
cmp
sub
aaa
dec
mov
in
lds
xchg
lret
cmp
xchg
les
fidivrs
mov
addr16
out
aaa
xchg
pop
dec
xor
adc
sub
jg
lock
push
mov
dec
sbb
lcall
fnstsw
ja,pt
cmpsb
ret
pop
stos
lcall
sbb
mov
jnp
dec
lock
call
cli
xchg
loop
mov
lahf
mov
ret
daa
aaa
addr16
xlat
clc
fists
ret
adc
add
push
jle
jo
into
test
pop
cs
pop
lods
movsb
or
lret
nop
insb
jnp
inc
out
bound
ljmp
sbb
test
mov
popa
push
into
or
lea
xchg
mov
int
mov
or
cs
mov
filds
mov
dec
rolb
arpl
pop
jae
aam
int
dec
pop
lock
fsubr
int3
push
cmpb
in
adc
dec
mov
jno
negb
mov
call
addr16
shrb
test
sub
idivb
lds
insl
jno
xor
push
cmp
in
jge
popa
aad
in
jmp
icebp
mov
xor
jl
xchg
inc
aaa
aam
rolb
jno
aad
bound
add
ja
sub
das
add
pop
int3
adc
es
or
mov
and
dec
adc
pusha
dec
iret
cmp
ljmp
mov
or
xchg
aad
cmp
idivb
cli
or
xor
lock
cmpsb
sbb
fwait
rclb
ror
sbb
mov
fistpl
outsl
jbe
mov
shrb
cltd
aaa
movsb
or
cltd
loope
xchg
fidivrl
sbb
in
dec
push
or
adc
outsb
mov
sub
dec
imul
orb
fsubrl
sub
sbb
mov
add
add
pop
adc
fstl
popf
je
pushf
ror
push
add
aam
popa
mov
ss
rolb
fsubrl
pop
jbe
rcr
cmp
into
dec
xor
das
jg
sbb
mov
sbb
mov
cmp
cmpsb
shl
fsubrs
pushl
mov
mov
pop
add
sbb
dec
pop
les
ret
scas
jl
sbb
or
fst
cmp
flds
mov
xchg
sbb
enter
mov
xor
sahf
fldcw
ja
ljmp
xor
mov
fidivrl
xchg
jo
push
les
rorb
lahf
or
cmpsl
push
or
imul
add
mov
dec
inc
frstor
sub
int
test
mov
stos
sbb
mov
mov
push
jb
add
mov
or
rolb
fmull
arpl
pop
mov
dec
dec
sbb
push
out
xor
xchg
dec
sbb
jmp
lret
xchg
shrl
cli
and
jl
sbb
jb
popa
cwtl
inc
sti
sub
xchg
push
xchg
dec
sbb
pop
cmpl
inc
and
insb
test
ja
push
stos
cmp
pop
adc
xchg
lret
push
fldt
inc
pop
sbb
cmp
mov
leave
xchg
fbld
sar
je
les
loope
ss
push
aad
inc
add
aam
fwait
pop
in
test
rorl
out
xchg
jae
mov
push
mov
mov
shl
fwait
pcmpeqb
and
inc
in
or
dec
xchg
mov
lcall
ror
les
lods
or
or
mov
xchg
dec
gs
cli
add
adc
mov
pop
aam
push
sub
js
and
inc
movl
shll
icebp
or
je
movsl
mov
js
lcall
mov
or
or
loop
enter
jbe
scas
jge
jp
arpl
imul
adc
fs
jmp
gs
cld
xor
xor
imul
mov
arpl
push
fdiv
xchg
and
in
inc
stos
add
inc
mov
mov
data16
aaa
push
sbb
pop
xchg
mov
mov
jno
lret
jbe
dec
sub
in
cld
repz
pop
mov
dec
fwait
in
mov
ret
ja
jo
nop
pop
sbb
pop
pusha
mov
inc
pop
jb
int
cmc
inc
std
dec
rcrl
outsl
push
push
push
cmp
mov
pop
out
mov
mov
sub
xchg
add
stos
sub
adc
inc
or
cwtl
cmp
dec
sarb
aam
and
test
adcl
pop
pop
sbb
xor
inc
mov
and
cmp
add
mov
mov
in
hlt
mov
sub
pop
repz
xor
lods
or
cld
adc
roll
stos
push
and
xlat
xor
ds
mov
dec
in
inc
add
xchg
mov
ficompl
fcompl
and
dec
lret
jno
cltd
sub
je
dec
mov
cld
or
mov
xchg
loop
xor
push
das
arpl
cwtl
sbb
mov
sub
jnp
pushf
push
fmuls
icebp
xchg
mov
mov
hlt
cmpl
idivb
jo
loop
mov
scas
mov
mov
clc
add
adc
add
push
cmp
pop
jecxz
lret
pop
sbb
jecxz
lods
std
xchg
jbe
add
xchg
rcrb
dec
xchg
xchg
fisttpll
sub
shll
mov
push
xchg
decl
or
mov
mov
inc
ror
fyl2x
cmpsb
mov
and
das
lock
fmul
js
adc
outsb
movsb
in
push
push
pop
loopne
aaa
cmp
or
push
sub
fnstenv
add
movsb
adc
sub
sbb
call
xchg
jae
xorl
aas
and
push
mov
push
mov
add
mov
arpl
mov
jmp
mov
addl
lahf
xchg
mov
inc
or
test
mov
les
subb
out
cmp
sbb
mov
test
leave
jle
jmp
iret
fucomip
mov
pop
aas
test
add
or
cmc
not
ss
mov
and
mov
mov
dec
xlat
pop
dec
xor
or
inc
cs
repnz
xor
mov
inc
stos
int3
in
mov
subl
mov
adc
out
lock
xor
hlt
fisubrs
aaa
and
jo
test
loop
mov
ljmp
fisubrl
mov
test
jb
lds
aaa
daa
test
jecxz
addr16
lock
mov
jmp
cmpsl
mov
sahf
movsb
movsl
aam
dec
pop
pop
add
aas
pop
sub
aaa
fwait
sub
pop
leave
xchg
pop
inc
sti
adcl
and
jno
in
enter
jg
or
dec
popa
mov
std
setbe
mov
aad
lods
jo
mov
lds
xor
and
cmp
cwtl
nop
adc
sbb
or
mov
aam
push
ja
push
or
fidivrl
push
cmp
xor
aam
clc
lods
inc
mov
dec
add
sbb
jno
stos
mov
out
mov
sar
das
cmp
test
lahf
cmp
jo
out
xchg
cmp
xor
fsubr
sbb
ja
roll
outsb
loopne
dec
or
jg
rcrb
fs
fldl
loop
add
xchg
std
aad
push
sub
push
or
jne
mov
sub
test
inc
jmp
dec
stc
orl
mov
jns
sbbl
add
pop
stos
test
fldl
sub
std
in
repz
fidivs
mov
jns
ficomps
pushf
pushaw
jae
xor
inc
in
leave
or
incb
and
fdivrs
or
ret
stos
gs
lods
pusha
scas
mov
pop
add
xor
in
aaa
pop
lret
out
rcr
lret
jl
mov
test
adc
pop
jecxz
movsb
imul
mov
dec
pop
sbb
push
fimull
loop
dec
sbb
repz
dec
fwait
xor
ss
in
insb
mov
fdiv
out
inc
leave
mov
and
fdivl
adc
xchg
and
in
inc
cld
push
sub
in
mov
imulb
push
dec
xorl
hlt
inc
loop
orb
and
sti
cmp
mov
mov
std
pop
mov
fwait
mov
sbb
aam
nop
sti
push
push
jo
sub
sbb
inc
xor
jae
push
cmp
adc
add
add
in
or
mov
in
mov
int
mov
mov
es
shl
jbe
inc
xchg
or
dec
in
xlat
cmpsl
mov
loope
dec
call
int
cmpsl
and
mov
push
scas
mov
mov
mov
shl
lret
aad
bound
jecxz
movsb
adc
sub
add
orl
add
ss
fbstp
push
xchg
dec
lods
cmp
sbb
sbb
sbb
rclb
or
sahf
imul
ds
std
cwtl
int
call
pop
out
push
leave
pop
dec
das
or
adc
pop
cld
test
imul
in
lret
es
sarl
xchg
jle
sub
jnp
sub
sbb
cmp
mov
xchg
int
mov
je
ret
or
inc
sti
push
sub
test
dec
jmp
and
cmp
ror
push
or
xor
push
gs
fimull
icebp
nop
or
and
push
cmpl
xchg
ror
in
test
xchg
pusha
sub
fs
mov
xor
xchg
jp
dec
mov
sbb
or
fiadds
pop
out
das
notb
adcb
in
mov
push
enter
mov
cmp
mov
imul
ljmp
pop
cltd
jns
arpl
sbb
mov
mov
das
test
lret
mov
test
dec
repz
pop
loop
dec
xchg
ret
out
jg
inc
gs
insb
adcb
data16
lds
mov
xchg
stos
sbb
xchg
ljmp
add
popf
frstor
ja
and
jl,pt
push
fsubl
rclb
lret
out
lea
lahf
xchg
test
stc
xor
mov
jbe
xor
outsb
out
fldt
shr
rclb
lahf
add
test
mov
jecxz
nop
jb
and
xor
adc
pop
sub
sarb
leave
movsl
clc
ja
jns
cmp
sbb
cmpsb
les
add
mov
or
addb
cmp
lahf
xor
inc
sub
aaa
daa
cltd
loope
int
sbb
leave
inc
xchg
and
adc
popa
fisubrs
fdivr
push
lret
loope
push
lea
clc
in
jmp
mov
mov
out
int3
ret
jle
push
adc
cmp
or
aam
aas
rorl
adc
cmpsb
jo
adc
loop
fdivp
xchg
imul
mov
fisttpl
mov
lods
jmp
push
aam
mov
loope
lock
pop
rorb
pop
aaa
mov
sbb
arpl
push
ljmp
in
inc
inc
jne
jo
fistps
scas
adc
decb
fisttps
or
push
test
outsl
xor
xchg
dec
shrl
sub
inc
push
clc
stc
cmpsl
sub
mov
movsb
imulb
xbegin
mov
lret
cmp
out
mov
movhlps
lret
lds
rolb
mov
cmpsl
fs
or
dec
xchg
mov
adc
push
dec
jge
inc
imul
jnp
or
push
inc
das
cli
mov
adc
xchg
dec
mov
jge
enter
test
in
or
pop
mov
push
sub
testb
adc
fisubl
jecxz
testb
mulb
add
lahf
jmp
bound
push
adc
movzwl
cwtl
enter
push
or
mov
sub
jb
aad
loopne
cltd
xchg
dec
xchg
outsl
cmpsl
dec
ficoms
mov
data16
pop
xchg
sbb
and
daa
jmp
sbb
les
das
addr16
push
jb
mov
orb
iret
cwtl
in
cmovno
cli
xchg
gs
in
sbbl
sub
inc
ret
popa
ret
sbb
pop
out
jbe
xorb
xchg
cmp
ret
push
inc
pop
pushf
sub
pop
outsl
call
cmc
mov
push
insl
std
pop
cmp
repz
std
data16
lds
push
push
fxch
mov
mov
cmpsb
loop
inc
sbb
cmpl
xor
dec
pusha
out
sbb
popf
push
out
pushf
movsl
ret
out
jmp
sbb
repnz
cmp
lods
int
sub
notl
xor
sbb
pop
sub
push
imul
add
mov
orb
dec
enter
mov
fs
add
mov
sbb
fwait
out
sub
sbb
xchg
cld
notb
in
not
inc
jne
sub
ljmp
xor
jp
push
sub
xchg
push
ret
jno
xchg
sbb
push
stos
frstor
aad
mov
jp
push
int
dec
xchg
addr16
fsts
int3
cmp
push
pop
mov
pop
fs
mov
mov
ficoml
fwait
lods
inc
push
xchg
xorb
push
push
in
stos
sti
lret
push
lcall
test
popf
icebp
mov
sbb
xor
into
int
inc
sahf
les
insl
fidivs
pusha
fcoms
arpl
pop
dec
or
xchg
sbb
push
lock
das
jbe
pop
lahf
sbb
mov
xor
pop
cmp
fsubrs
cmp
inc
sbb
sub
pop
js
cld
pop
inc
lods
sub
cmpsl
orb
inc
jb
mov
or
stos
cmp
mov
inc
pop
insb
out
sbb
sbb
loop
ficomps
and
and
dec
dec
roll
sbb
or
xor
andb
sbb
adcb
outsl
dec
adc
enter
jbe
repz
stc
and
cs
jae
cli
loopne
push
jne
cmp
sbb
arpl
jns
outsl
pop
mov
lahf
lret
mov
push
pop
jae
pusha
mov
inc
bndldx
push
test
les
lret
mov
xor
dec
mov
insb
xchg
or
das
into
push
fnstsw
int
jbe
or
popa
leave
push
mov
push
mov
lahf
and
dec
insl
cmp
mov
or
jg
mov
mov
sub
adc
pop
or
xor
pop
mov
pop
test
sbbl
shlb
je
daa
sbb
pop
ss
popa
push
test
fidivrs
in
jmp
mov
in
sbb
adc
push
enter
arpl
sbb
dec
adc
insl
mov
mov
xchg
xchg
popf
pop
xchg
inc
xor
mov
or
inc
rcll
add
mov
repnz
jl
pop
xchg
pop
inc
lret
jp
push
jae
pop
sarl
nop
jo
insl
push
ljmp
xchg
pop
sbb
pop
push
les
hlt
mov
cmp
lock
lea
into
insl
push
movb
je
mov
and
out
mov
ffreep
in
or
call
xchg
mov
push
lock
dec
leave
push
push
enter
dec
lods
xchg
pop
movsb
or
repz
push
jge
sbb
fs
adc
pop
js
leave
push
pop
sub
add
aaa
icebp
insl
bnd
ret
bound
das
xor
mov
sbbl
dec
push
mov
jle
sub
jnp
sbb
es
repz
outsb
repnz
mov
jmp
icebp
mov
add
add
pop
repnz
repnz
and
pop
xor
cmpsb
enter
push
cmp
and
sbb
push
fbld
iret
rol
inc
add
bnd
push
cmc
adc
lret
pop
shlb
iret
dec
shll
mov
rcl
adc
fistl
lcall
pop
nop
shll
mov
rorl
das
aaa
jge
cltd
push
call
insl
xlat
pop
jno
jne
cmp
clc
sbb
aaa
or
xchg
adc
mov
bound
testb
test
les
xor
lods
rclb
lret
dec
mov
repz
xlat
gs
mov
mov
mov
pop
lock
shlb
mov
or
add
xchg
shlb
push
mov
repz
cli
dec
jmp
shrl
aas
addr16
mull
ret
sti
xor
mov
xchg
or
stc
jmp
sub
add
fdivr
mov
mov
outsb
les
and
and
sbbl
or
inc
repnz
xor
adc
mov
repz
lea
or
cwtl
ret
lcall
shl
repz
cmp
pop
mov
js
dec
ss
cmp
inc
fidivrl
fcmovb
les
push
hlt
xor
fisubs
and
xchg
aas
xchg
sbb
int3
in
cwtl
xor
sbb
adc
adc
push
mov
adc
cmp
in
movsl
cmp
lret
adc
jg
mov
sbbl
jmp
sub
rcll
test
lock
scas
xchg
fadd
shll
rcll
or
clc
push
pop
push
ljmp
and
xor
sbb
xor
cs
loopne
ss
mov
je
mov
push
out
or
mov
cmp
loope
cli
xchg
add
repz
mov
xor
adc
movsb
repnz
dec
cmp
shll
es
push
adc
mov
xchg
movsb
sahf
call
dec
adc
jae
or
fwait
in
loop
xor
xchg
mov
out
jecxz
testb
cmp
and
sub
add
sbb
out
repz
add
xor
leave
sar
adc
add
xor
jecxz
jae
mov
mov
repz
fstl
push
jmp
out
xor
divb
push
int3
leave
divb
or
xor
mov
sub
in
movsb
leave
icebp
xor
std
mov
scas
sti
and
dec
btc
mov
sub
in
add
pop
movsl
lret
mov
clc
sub
adc
sub
dec
sbb
flds
insl
cmc
push
out
and
pop
loope
or
loope
and
adc
sub
push
cmp
enter
adc
adc
not
cmp
ffree
sub
adc
icebp
fdivl
or
sbb
stc
pop
jecxz
cmc
jno
adc
notb
int3
out
add
pop
mov
mov
or
adc
xor
shl
lea
std
imul
cmc
iret
cmp
fisubl
push
add
in
clc
xchg
loop
in
cmc
pop
jb
dec
divl
leave
rcrl
xor
and
jg
sar
sub
xchg
xor
les
add
repz
fistpll
adc
pop
popl
add
cmp
push
ljmp
ret
adc
std
sub
cmc
enter
pushw
pushf
data16
popa
mov
and
mov
inc
add
and
iret
cmpsl
or
add
jle
inc
lret
dec
imul
inc
adc
fcmovu
adc
shrb
leave
cwtl
int3
flds
pop
push
fnsave
int
pop
push
add
pop
adc
sub
xchg
cmp
test
inc
in
push
add
js
inc
std
and
repz
cmp
rcr
xlat
sarl
shrb
dec
incb
repz
adc
daa
fmulp
and
push
push
insb
int3
inc
cmp
loopne
pop
loopne
cmp
sarl
jae
push
fimull
mov
lcall
pushw
lret
dec
or
xor
fisttps
add
sub
movsb
pop
bswap
push
fimull
lret
cmc
or
mov
xchg
mov
jg
lret
cli
lea
adc
xor
xchg
push
adc
jle
or
hlt
imul
xor
jnp
lock
daa
cltd
jg
and
popa
or
push
cld
or
sbb
sbb
jp
sub
and
mov
mov
lods
icebp
inc
mov
xchg
inc
movsb
adc
ret
aam
ss
lret
xsaves
fistpl
jmp
pop
nop
mov
inc
cmc
sbb
lret
add
mov
adc
aas
xchg
movl
dec
shrb
fs
or
popa
adc
xor
mov
xor
and
sahf
and
or
jb
shl
cmp
xor
in
add
jmp
fildl
in
lock
mov
in
sub
and
lea
xchg
push
ss
divb
inc
stc
jmp
insb
cmc
dec
xor
push
hlt
push
and
cmc
popf
out
ror
call
sub
dec
sub
add
mov
xor
cs
pop
jmp
pop
mov
pop
popf
clc
lea
adc
inc
push
insb
div
xor
mov
and
mov
lret
mov
lret
sub
mov
pop
popa
and
cmp
xor
lock
call
cld
ljmp
lcall
sbb
fdiv
mov
cmp
mov
jo
pop
sub
pushf
cmp
inc
pusha
pop
sti
cmp
add
sub
or
movsb
push
pop
imul
xor
and
dec
mov
shlb
adc
mov
dec
and
dec
lds
ret
stos
lret
les
lret
cmp
in
add
in
adc
stos
jb
dec
push
mov
xchg
pop
mov
aad
movsb
scas
adc
jno
xchg
nop
pop
add
aas
adc
ss
and
fcom
or
add
aad
movsb
xor
or
push
in
les
mov
jns
jb
inc
movsl
jp
dec
sbb
push
lds
fwait
dec
add
add
shrb
sub
and
mov
les
cmp
clc
shrb
pushf
call
lret
in
add
add
mov
jno
outsb
or
jle
pop
pop
or
xorl
push
xchg
out
rol
sbb
pop
and
mov
repz
add
add
lret
dec
lcall
and
lods
pop
push
push
xor
cld
mov
repz
cmc
xchg
push
nop
sar
lcall
push
cmp
adc
lahf
cltd
and
cmp
into
sub
sbb
jo
out
sub
es
loope
sub
ljmp
nop
out
les
enter
jmp
mov
jg
inc
and
add
adc
ret
in
repnz
adc
mov
adc
mov
mov
adc
pop
or
sbb
ret
adc
dec
sarl
sub
cmpsb
jle
push
jg
mov
adc
negl
cmp
loope
and
cltd
fwait
sub
jne
aaa
push
cmp
sub
inc
fists
hlt
sbb
in
push
push
std
sub
inc
sbb
cs
roll
mov
add
add
push
pushf
pop
xor
lea
push
pop
cmpsl
sub
mov
loope
gs
xor
adc
and
xor
sar
push
push
movsl
add
sub
mov
inc
js
or
cli
jp
sub
cmc
pop
lea
mov
imul
imul
mov
es
rorb
pop
clc
sbb
adc
mov
insb
fs
pop
sub
lret
iret
sub
ret
pop
mov
ds
xchg
xchg
out
adc
subb
sbb
xchg
out
daa
loope
xor
cmp
iret
ret
icebp
jg
seta
and
sub
cmp
cltd
pop
decb
repz
movsb
and
nop
mov
mov
jg
mov
jg
push
or
iret
and
push
popf
jle
pop
cltd
jbe
orb
stos
and
gs
outsl
mov
add
xchg
cmpb
pop
mov
call
jb
xor
lea
lods
pop
mov
add
or
lock
enter
shlb
fucom
orl
sti
cmc
enter
mov
les
pop
ss
lret
ljmp
push
lock
dec
sbb
cmp
cmp
adc
out
and
xlat
jecxz
mov
cmc
cmp
iret
loop
mov
js
add
xor
mov
mov
push
in
sub
mov
jbe
fildll
sahf
aas
push
test
and
xchg
and
mov
shll
adc
xor
inc
sbb
fst
out
cld
mov
ljmp
leave
shl
xlat
sbb
das
int3
es
mov
das
inc
cmc
cmp
add
daa
movsb
mov
add
sbb
les
xor
xor
icebp
pushf
es
rolb
mov
movsl
sbb
test
mov
inc
ffreep
xlat
or
xchg
or
rcr
rcll
pusha
mov
shlb
dec
cli
adc
push
fwait
mov
rclb
rcl
not
xor
out
cld
xchg
push
push
dec
add
jecxz
fdivs
xor
pop
xor
mov
jo
and
ljmp
addr16
shll
xorb
and
ss
popa
and
es
sbb
mov
icebp
push
out
rorl
arpl
pop
xlat
jb
inc
lret
or
or
nop
addr16
test
fldt
notl
pop
ss
adc
or
sub
pop
adc
inc
in
ljmp
push
xor
jl
sub
jo
and
in
jp
push
in
push
rcr
add
xor
adc
or
mov
ljmp
lods
dec
call
lahf
jmp
icebp
add
stc
cwtl
xchg
es
jg
cmp
test
cmc
mov
xor
mov
push
sub
xchg
daa
jmp
repnz
pop
sub
or
ror
xchg
mov
jmp
dec
inc
sub
jb
not
hlt
out
aas
mov
cs
stc
jmp
das
mov
jb
and
pop
lods
stos
movsb
lret
repz
lahf
sbb
xchg
lret
adc
pop
es
ljmp
or
inc
test
lock
test
aam
lret
add
fcoml
jp
mov
cmc
pop
sbb
ss
sbb
into
popf
loopne
push
popa
test
cmc
pop
mov
xchg
or
out
or
jbe
or
movb
shl
mov
add
cmpb
jne
jmp
sub
pushf
scas
jae
pop
fucom
pop
cltd
push
stc
pop
push
out
jb
daa
mov
clc
sbb
adc
popf
stos
test
test
std
cwtl
cld
xor
and
aaa
repnz
cmp
sub
mul
inc
into
push
xchg
push
das
cs
or
int3
mov
cmp
sti
sahf
sbb
clc
mov
rcrl
scas
popf
ss
xchg
xlat
shll
add
mov
cmp
mov
cmp
cmpsl
mov
pop
sbb
pop
call
loopne
mov
rcrl
les
sbb
aas
mov
bound
push
fdivrs
lret
mov
insb
cmp
mov
sub
gs
aaa
shlb
sbb
pop
xchg
cmp
orl
sti
repz
or
dec
loopne
jbe
inc
hlt
jmp
pop
fistpl
outsb
dec
fdivr
outsb
pop
pop
repz
jmp
mov
icebp
cmc
push
mov
roll
add
mov
movsb
xchg
or
popf
push
add
sub
push
push
loope
push
insb
popa
push
mov
sbb
aad
add
push
push
adcb
notl
lea
loope
fsubrl
mov
mov
jmp
stc
add
aas
or
xor
es
mov
out
ljmp
inc
lret
xor
add
aas
sbb
repz
fs
ljmp
add
pop
imul
lock
push
divb
inc
ljmp
xorl
les
movsl
cmc
and
into
push
insl
mov
cs
test
fcompl
mov
push
in
sahf
lods
mov
rcrb
icebp
mov
sub
mov
push
loop
lods
cmpsb
push
sub
insl
cmp
cmp
and
xor
pop
gs
push
sub
pop
lcall
dec
ss
out
and
pop
fstl
and
jno
add
sub
sub
sbb
je
adc
and
mov
cld
pushf
xor
ljmp
lods
jne
mov
pop
sar
inc
pop
inc
or
imull
xor
out
idivl
sub
pop
inc
std
xor
mov
imul
and
rcr
cmpsl
outsl
add
insl
cmp
les
in
cld
mov
lds
clc
add
push
mov
ds
adc
xlat
adc
push
sub
outsb
cli
xchg
outsb
fbstp
enter
jmp
inc
sahf
sub
fucomi
sub
les
pusha
out
movsl
fs
aam
xor
rcr
push
mov
lods
or
pop
lods
or
and
lret
and
dec
jge
xor
jecxz
ffree
fidivs
jmp
cmp
xor
xchg
cmp
sub
jne
mov
mov
mov
xor
repnz
ljmp
daa
cli
mov
clc
scas
sahf
in
cmc
test
adc
xchg
jnp
sub
xor
pop
or
push
xchg
xlat
pop
sub
add
sub
mov
int
repnz
movsb
fadds
pop
adc
cmp
pop
mov
lea
test
pop
push
cmpsb
lock
nop
movsb
dec
pop
loopne
push
mov
fcomps
imul
hlt
ficoml
cwtl
add
xor
push
push
mov
pop
mov
push
popf
inc
inc
stos
xchg
iret
out
out
icebp
push
test
cmp
arpl
rcrb
and
or
out
dec
jecxz,pt
jl
pop
repz
xchg
ss
fildll
mov
popf
ljmp
jno
and
movsb
pop
mov
in
fistl
pop
loope
out
mov
lock
xor
xor
das
andl
ja
and
inc
dec
fcomps
or
fst
adc
dec
pop
mull
mov
jl
inc
jbe
push
inc
mov
mov
sbbb
xor
adc
out
icebp
fcomip
sub
xchg
std
mov
enter
push
xchg
fidivs
xor
lock
or
xchg
dec
sbb
fdivp
sub
loopne
test
cmp
test
xor
push
and
nop
ss
sbb
push
push
cltd
nop
out
and
xchg
arpl
loop
inc
rol
out
stc
outsb
out
aas
ja
es
inc
test
test
ja
in
ds
gs
ljmp
sub
cmp
jp
std
clc
push
pop
or
add
out
push
ljmp
xchg
repz
inc
pushf
and
push
loop
pop
cmp
xor
add
mov
sbb
cmpl
pop
pop
addr16
mov
or
sub
jbe
add
and
jmp
lret
fcmovne
jo
repnz
popf
pop
mov
rorb
fiaddl
popa
cld
pop
bound
jmp
loopne
repnz
mov
cli
dec
jge
jmp
test
adc
js
mov
push
adc
mov
bnd
iret
xor
lcall
popf
xor
inc
cld
or
cmc
mov
mov
jae
test
pushf
add
addl
jl
xchg
aad
adc
mov
das
pop
fs
push
roll
sub
and
sti
repz
repnz
imul
ja
stc
jecxz
fs
cwtl
stos
mov
inc
mov
outsl
jb
inc
negl
mov
push
jns
cmp
jbe
or
cs
psrld
aad
bswap
xlat
jecxz
mov
cmp
test
imul
xor
stos
in
or
sub
rcpps
pop
out
jae
movsl
mov
in
hlt
fidivrl
leave
push
sbb
int3
out
mov
pop
push
daa
adc
push
lahf
je
fs
push
repz
sbb
jo
jnp
es
repnz
hlt
lahf
mov
pushf
cld
push
push
popf
pop
and
add
vhaddpd
or
loopne
sti
push
popl
inc
stos
jb
xchg
adc
out
aam
imul
mov
popf
add
jl
sub
push
leave
cmpsb
in
je
loope
mov
aas
mov
push
pusha
ja
mov
adc
pusha
ror
inc
xlat
dec
xor
sbb
jnp
fs
pop
ds
sbb
push
mov
dec
and
sbb
mov
clc
push
rcll
mov
adc
shl
in
test
mov
in
mov
inc
ljmp
in
bound
push
cmpsl
inc
call
bound
sbbb
xlat
add
testl
icebp
and
pop
or
in
xchg
rcll
mov
jecxz
imulb
lret
inc
push
sbb
inc
or
and
leave
adc
das
xchg
pushf
loop
adc
shlb
adc
adc
mov
int3
jns
sbb
xor
movsl
stos
jecxz
loopne
rcll
or
rcll
scas
lods
mov
xchg
sti
mov
jecxz
pusha
jnp
fmulp
insl
ds
pop
push
pop
in
out
loope
das
sbb
push
loopne
lret
fcomip
cli
clc
adc
xor
adc
jg
and
imul
sub
xor
stos
mov
fdivl
and
nop
mov
cs
xor
sbb
cmp
dec
cmc
sti
in
imul
mov
fmul
fimuls
add
ss
adc
or
pop
fs
xor
fimull
xor
mov
or
fldt
sbb
lds
or
stc
adc
in
xlat
xchg
jnp
push
cmp
inc
shl
or
insl
cld
xor
xlat
xor
sbb
out
test
test
sbb
rclb
pushf
enter
adc
jmp
push
test
iret
notb
push
xor
push
pop
adc
aaa
lock
add
popa
ss
loopne
cmpsb
fcomps
mov
iret
jno
add
jbe
xor
mov
jmp
add
xor
aam
mov
xor
dec
fdivrp
hlt
push
scas
sub
divl
jno
add
fldl2t
loop
call
nop
bound
int
mov
pop
mov
std
loope
xchg
fadd
fwait
leave
shl
push
xchg
sbb
pop
test
pop
iret
lcall
cmp
popl
int
mov
and
push
call
sub
insl
xlat
add
add
adc
cld
push
loop
icebp
data16
jae
daa
xchg
iret
jecxz
cmc
test
mov
xor
aaa
shll
aas
and
adc
rol
movb
popf
or
cmpsl
les
out
xchg
and
fldl
or
dec
sbb
mov
leave
push
mov
cs
mov
xchg
xchg
js
insl
cs
popa
shll
int
ret
das
int
add
cmp
push
push
adc
adc
lock
rcr
out
cld
clc
push
jmp
scas
sub
and
out
mul
xorl
idivb
movsl
mov
mov
aas
dec
out
mull
es
icebp
pop
leave
test
das
cmp
int
js
out
adc
mull
pusha
jb
mov
pop
dec
mov
js
mov
add
jge
pop
ss
out
push
sahf
mov
dec
pushf
push
sub
xchg
or
aaa
mov
jnp
or
fbstp
shlb
inc
xor
cmc
lods
int
jmp
in
pop
fwait
or
fnstsw
xchg
mov
sub
xor
or
mov
xor
cmp
xor
adc
cmp
in
nop
das
test
push
and
sub
cmp
out
jo
ljmp
jbe
rcrb
mov
shlb
mov
movsb
les
xor
popf
inc
adc
jle
aas
loop
cmp
mov
xchg
jns
jo
aas
ss
cmp
fwait
xchg
sbb
xchg
cmpsl
jmp
int3
les
in
loope
add
mov
js
int3
xor
in
shlb
inc
stos
sub
fdivrl
jge
sbb
mov
or
loop
sub
adc
adc
push
jmp
inc
mov
out
ljmp
sbb
mov
or
mov
aaa
loopne
lret
daa
xchg
jmp
stos
inc
dec
sub
and
hlt
in
xor
cmpsl
bound
ja
std
xchg
xlat
iret
pop
out
mov
fs
dec
ljmp
sbb
out
xchg
xchg
and
outsb
xor
int3
roll
hlt
popf
add
xlat
out
leave
faddl
add
sub
movsl
push
xchg
testb
dec
mov
into
outsl
add
xchg
cmpsb
shlb
fs
lret
repnz
cmc
ljmp
push
outsb
push
xchg
xor
lea
xor
sti
cmc
or
or
sbb
cltd
adc
xor
std
cmc
into
popa
orl
loope
sub
fistpl
jmp
pop
cmp
cmp
stc
test
xor
repnz
jp
xor
pop
xor
xchg
dec
test
shlb
xor
dec
popa
mov
into
in
push
sbb
hlt
fstp
sbb
dec
mov
shll
cmp
push
mov
sbb
test
fistpl
popf
test
jb
or
sub
loope
xchg
jmp
and
jle
movsl
xchg
rorb
fildll
sub
xlat
addl
cmpsb
dec
icebp
mov
nop
fildll
cmc
mulb
sbb
pop
mov
stc
loope
cmp
inc
mov
push
scas
mov
lret
das
add
or
insl
sbb
inc
ja
bound
les
sahf
jo
mov
icebp
fisubrl
mov
adc
fs
sub
js
rolb
sbb
sbb
pop
test
pop
sbb
lret
jp
sbb
test
cli
fildl
xor
mov
cmpsb
testl
movl
pop
outsl
dec
stc
sbb
jne
sbb
clc
nop
icebp
inc
cmc
push
popf
sub
dec
jnp
aam
and
icebp
xchg
aam
xor
roll
push
es
icebp
nop
daa
xor
jne
xlat
xchg
test
adc
adc
push
lahf
cmp
imul
xchg
add
mov
in
fcomps
loope
rcrl
mov
xor
mov
push
sub
mov
pop
ds
outsb
sub
int
loopne
xorb
popa
test
push
je
sar
sahf
xor
xchg
je,pt
push
mov
and
mov
sahf
in
jecxz
mov
rorb
std
fwait
stc
mov
stc
mov
adc
clc
xlat
or
leave
jmp
fcomps
cmpsb
rolb
daa
sbb
push
push
pop
fsts
xor
mov
fldl
jl
lret
incl
aam
mov
into
or
fldt
xchg
out
int
pop
jge
add
dec
cmpsb
out
mov
push
test
mov
fnsave
xor
and
xchg
out
push
inc
or
sarl
xor
mov
xor
jg
mov
lret
xchg
and
cmp
mull
or
dec
in
stos
nop
xchg
es
fimull
aaa
sbb
rol
lret
mov
xlat
stc
loope
fistpll
xchg
pop
imul
add
xchg
pop
aad
in
and
or
insl
xor
lods
mov
inc
or
fxch
pop
cld
pop
push
rorl
movsl
and
pop
cmp
and
push
fidivrs
push
cmc
aas
ror
mov
shll
test
test
es
pop
repz
or
loop
jbe
cs
icebp
xor
das
xchg
lret
icebp
pop
sub
scas
notl
sbb
ret
add
stos
in
cmp
lods
in
aaa
sarb
lods
icebp
pop
test
sbb
pop
clc
and
fwait
std
jbe
sub
and
daa
or
call
cmp
mov
jecxz
es
jne
xlat
pushf
test
cld
pushf
ja
stos
insb
xor
xchg
fldt
sbb
cmpsl
mov
mov
pushf
lds
loopne
test
pop
and
mov
aam
jge
aad
pop
adc
loope
fcomps
push
insl
fcoml
stc
add
sbb
push
jmp
aas
or
sbb
gs
cmp
popa
adc
xor
or
sub
outsb
and
test
icebp
cmp
sbb
sub
imulb
loop
pusha
push
sub
xchg
adc
mov
roll
leave
sub
cs
jno
adc
push
stos
add
enter
sarb
test
xor
xchg
push
divl
add
es
or
imul
loop
orb
rol
inc
pop
mov
push
mov
adc
popf
mov
lock
aad
push
pushf
adcb
push
call
dec
add
inc
xor
cli
push
mov
test
aaa
incb
ljmp
loopne
stos
sbb
push
into
sub
iret
fistpl
sti
iret
idivb
das
stos
push
cmp
int
movl
sbb
ljmp
fwait
rcl
adc
daa
add
shufps
repnz
xchg
or
fwait
ja
scas
imull
xor
fcoms
popa
mul
cmc
into
inc
test
push
or
and
sbb
cmp
nop
jbe
xchg
adc
movsb
sub
in
aam
mov
ja
xlat
outsl
inc
outsl
xor
shlb
cmc
sub
push
sbb
push
mov
mov
sub
adc
cmp
pop
push
xlat
insl
fmul
pop
arpl
fcomi
loope
insl
movsl
push
mov
mov
ljmp
xor
or
xor
add
add
shlb
xlat
sub
sub
cmp
stc
loop
les
out
sbb
xor
sub
adc
pop
mov
mov
cld
cs
aaa
fwait
cld
repz
rorb
xlat
mov
gs
popa
pushf
testb
in
test
sub
pop
addb
stos
es
ret
adc
dec
arpl
ljmp
xor
arpl
or
push
sbb
pop
ja
fsubl
jmp
and
shll
xor
add
test
out
icebp
test
pushf
mov
int3
mov
or
lea
adc
adc
aad
in
repz
jl
icebp
lcall
js
test
test
ret
cmpsl
lock
fsubrs
push
shl
ljmp
ds
cs
mov
add
dec
xor
push
shll
or
ljmp
jne
or
cmp
pop
loope
out
mov
cmp
mov
push
jmp
push
sarb
sub
ret
pop
sti
js
push
fstl
sbb
addr16
xchg
lea
fwait
pop
xchg
fiadds
or
daa
jecxz
mov
int
adc
xor
sti
movsl
mov
sbb
aad
sub
jno
enter
icebp
aaa
jmp
sarb
xor
ss
repnz
jb
sub
fisubs
mov
mov
loope
cmp
sbb
push
negl
mov
cmp
push
jno
data16
in
add
sub
xchg
dec
jg
out
add
imul
mov
imul
or
xor
es
ss
iret
mov
add
xchg
adc
dec
add
repz
jecxz
xchg
add
add
push
jns
jbe
dec
push
lea
and
adc
dec
loope
sahf
aad
movsb
out
or
sbb
in
jmp
mov
out
add
dec
imul
rorb
and
mov
mov
xchg
push
jmp
call
ss
and
mov
adc
imul
xor
and
test
xchg
push
jmp
in
pop
adc
ss
les
out
add
fsubs
data16
sbb
xor
and
test
rolb
cmc
cld
lea
adc
sbb
int3
repz
movsb
push
or
push
and
js
dec
dec
fwait
inc
out
rcll
stos
stos
pop
test
lea
add
inc
and
call
rcl
sub
sbb
in
popl
iret
aas
cltd
aas
mov
inc
lds
fwait
pop
add
add
pushf
cmp
addr16
push
and
lcall
sar
aad
lret
enter
mov
test
add
mov
jl
mov
xchg
inc
xor
and
dec
xchg
lcall
lds
lea
adc
ss
nop
ror
mov
inc
or
xchg
add
mov
scas
aad
movsb
orb
sbb
daa
in
add
add
sar
pushf
mov
push
dec
gs
adc
cltd
add
mov
movsl
movsb
pop
or
mov
inc
in
add
add
rcrb
pushf
aam
mov
and
lcall
adc
aad
jno
jb
dec
movsl
inc
or
push
in
les
pop
add
dec
pushf
or
and
decb
lcall
add
xchg
mov
jns
jbe
dec
rorl
stos
pop
pop
mov
lea
adc
dec
and
clc
sub
add
aad
movsb
rorb
sub
les
xchg
add
add
push
inc
stos
jp
push
pop
lea
and
adc
dec
in
add
aad
movsb
repnz
sbb
in
sar
in
add
add
xor
dec
lcall
cmp
rorb
addr16
add
cmp
add
aad
movsb
ret
sbb
in
les
out
lods
add
jns,pt
dec
jne
jns
add
lret
push
dec
test
rolb
jmp
call
test
add
repz
add
sbb
adcl
xchg
jl
cmpsl
and
dec
movsl
lcall
test
lea
or
aaa
and
aam
cvtps2pi
and
cmp
sbb
in
mov
lret
movsb
lret
dec
or
les
pop
add
dec
pushf
or
and
decb
lcall
cmp
cwtl
sbb
or
or
inc
in
lds
in
add
add
push
pushf
add
and
repnz
int
ret
rcl
sub
fistl
cwtl
sub
in
jl
cmpsl
add
xchg
pop
xor
and
mov
rolb
in
hlt
lea
adc
ss
and
mov
jmp
add
aad
mov
jne
aam
inc
aad
movsl
push
or
les
dec
add
sarb
pushf
hlt
xor
and
decb
lcall
add
pushf
sbb
adc
jno
jb
dec
sbb
movsl
les
in
add
add
push
pushf
add
aas
and
ljmp
ror
and
mov
add
in
js
mov
xchg
dec
xor
and
dec
xchg
lcall
icebp
stos
out
pop
rcl
adc
les
jmp
test
fistpl
sbb
or
fwait
pop
add
lods
movsb
mov
in
les
cmp
clc
shrb
pushf
call
dec
sub
cmp
stos
or
gs
xor
bound
in
lds
fwait
dec
add
add
arpl
sahf
dec
icebp
lcall
fldcw
jmp
test
add
in
js
cmpsl
add
xchg
pop
xor
and
dec
mov
lcall
rorb
jmp
movsb
fistpl
add
aam
pop
inc
mov
pop
add
mov
stos
or
les
das
add
shlb
pushf
aam
mov
and
lcall
popa
popf
shlb
test
inc
stos
jle
push
pop
lea
and
sbb
dec
jmp
movsb
testb
sbb
in
fdivp
in
add
add
mov
inc
lds
fwait
pop
add
add
shrb
sub
and
xchg
dec
jmp
sar
shrl
notl
mov
test
add
scas
fwait
fs
add
xchg
inc
xor
and
dec
test
mov
stos
out
stc
in
pop
adc
adc
mov
repz
add
sbb
test
mov
dec
fwait
inc
out
rcrb
stos
stos
pop
lea
lea
add
aas
and
rcl
cvtps2pi
es
movsb
cmp
adc
adc
in
pop
inc
jns
jbe
push
rorl
stos
pop
pop
mov
adc
push
and
lock
xor
add
aad
movsb
or
sbb
in
les
xchg
add
add
pop
inc
imul
jnp
cmp
imul
xchg
or
sbb
in
rolb
mov
repz
mov
push
dec
popa
cltd
push
mov
add
xchg
inc
xor
and
dec
sbbl
loop
std
loopne
and
aam
les
repz
movsb
or
popa
add
mov
inc
fwait
jle
push
rorl
stos
cmpsb
pop
mov
adc
dec
and
cld
daa
leave
add
aad
movsb
fimull
xor
xor
or
add
mov
xorl
pop
dec
lea
cmp
imul
dec
loope
sahf
aad
movsb
repnz
sbb
in
jmp
mov
out
add
xor
or
lea
and
test
xor
outsl
lea
xchg
in
lcall
cli
sbb
fadds
add
shl
pushf
mov
or
cltd
push
mov
je
scas
and
test
test
cmpsb
aad
movsb
mov
mov
mov
in
in
pop
add
rolb
pushf
int3
xor
and
adc
jne
testb
pop
xor
and
dec
sbbl
loop
stc
in
and
shlb
enter
mov
add
sbb
je
movsl
and
push
fwait
dec
out
rcrb
stos
scas
pop
mov
cmp
call
fcmovbe
xor
sbb
in
les
lret
lcall
lret
jle
pop
lds
fwait
xor
add
pop
pushf
sbb
and
loop
std
lcall
fldcw
jecxz
nop
shll
jmp
xchg
in
fwait
and
test
lea
xchg
in
lcall
or
int3
add
add
xor
and
scas
adc
and
test
mov
movsb
xchg
cltd
sbb
sub
in
add
add
rolb
pushf
mov
repz
or
les
or
add
pop
movsl
push
or
les
push
add
rolb
or
aaa
and
cli
dec
aad
lret
rcr
xor
icebp
out
loop
shrl
test
fisubrl
shl
fldenv
jne
jmp
xorb
cmc
sub
test
or
xor
or
jno
jmp
mov
cmpsb
sbb
and
lock
jb
jnp
sub
shlb
mov
cwtl
scas
or
jne
sarl
iret
mov
sub
test
sar
ljmp
test
adc
sbb
inc
dec
daa
cwtl
jmp
pop
mov
fistps
rcr
sbb
in
pop
movsl
in
out
fstpl
sbb
stos
or
test
orl
sbb
loope
adc
sub
cwtl
mov
out
adc
mov
add
jbe
cmp
popf
xor
push
xchg
fs
add
or
cs
andb
in
repz
mov
mov
aad
rclb
stos
ret
sub
cmp
popf
out
cltd
adc
mov
loop
out
test
popf
ror
inc
pushf
sti
and
xchg
das
dec
lods
inc
xchg
cltd
cli
mov
rol
cli
lret
pop
sub
sbb
fidivl
imul
inc
push
cmp
sbb
mov
and
adc
cli
pop
cwtl
lahf
pop
sub
es
test
cmc
leave
push
mov
lcall
jecxz
pop
dec
in
ret
sbb
test
movsb
adc
xor
or
movsb
cmp
subb
cwtl
jo
add
xlat
add
adc
xlat
mov
sub
aad
ss
cld
jp
shll
mov
lahf
add
popa
and
xchg
ret
nop
mov
and
jnp
sbb
es
jmp
cltd
xor
xchg
jmp
nop
sub
adc
movsb
jecxz
rorb
fcoms
rol
out
sub
in
into
repnz
push
or
push
and
cmp
pop
cli
loope
int
sarb
clc
cwtl
aaa
push
sti
cwtl
ljmp
and
lret
sub
mov
or
je
adc
mov
in
gs
out
xor
sbb
repnz
cmp
mov
test
sub
cwtl
fs
mov
lock
iret
sbb
sbb
and
addr16
mov
xchg
jecxz
shlw
mov
cs
orl
mov
je
push
roll
jmp
adc
outsb
dec
dec
in
mov
shlb
sub
stos
rorl
adc
sar
and
shll
mov
cmp
sbb
mov
push
gs
sub
adc
cmp
rcl
add
enter
jae
icebp
xor
out
add
imul
fcmovnbe
and
lret
hlt
lods
pushf
pushf
mov
pop
pop
adc
incb
or
idivl
jle
push
aas
sti
hlt
nop
sbb
inc
adc
xor
add
xor
sti
aad
lret
pop
sahf
and
and
xor
xchg
fimuls
mov
insb
out
enter
lcall
xchg
add
aam
push
fst
add
cli
mov
ss
ret
adc
sbb
sbb
ds
lcall
jl
push
pop
fisttpll
push
clc
cltd
test
fsubs
ljmp
xchg
aad
ja
int
out
scas
jnp
hlt
push
int
jmp
jg
pushf
imul
add
cmp
stos
cld
into
fcomi
cmp
fistpll
pop
gs
and
adc
stc
xchg
jge
or
xor
imul
add
iret
xchg
fs
shrl
inc
stc
push
sbb
fwait
outsl
int3
mov
nop
sarl
cs
mov
es
ror
jne
push
fs
jecxz
push
mov
fnstenv
ljmp
or
push
fstpl
dec
cmc
aad
fadds
mov
subb
lcall
popf
pop
push
xor
lret
lds
negb
outsb
jne
enter
clc
rclb
in
mov
mov
aad
lcall
sbb
adc
aam
adc
push
sahf
adc
enter
sbb
add
inc
out
sbb
jno
xchg
lret
movsb
mov
xchg
dec
sbb
or
mov
cld
jo
dec
cltd
fwait
xchg
add
les
adc
loope
pop
or
push
mov
or
jl
push
dec
add
ss
cld
fistps
xchg
push
push
gs
gs
cld
filds
xor
inc
rcrb
cmp
jecxz
cmpsb
in
rorb
jmp
xor
movl
and
nop
jmp
pushl
and
cmc
imul
les
aad
adc
enter
push
mov
adc
lcall
adc
ljmp
xchg
mov
jmp
les
dec
fmull
mov
cwtl
out
cmp
aam
xor
aad
gs
pop
and
out
inc
popf
aas
adc
mov
subl
add
negb
and
adc
adc
shr
xchg
sarl
ja
xor
sub
daa
loopne
lret
mov
sbb
xor
test
push
testb
and
out
inc
gs
inc
call
jecxz
or
push
cmp
lock
dec
sub
push
cmp
jne
in
outsl
outsb
jmp
jmp
sahf
mov
add
shl
aaa
ljmp
ds
inc
popl
lods
push
rclb
mov
mov
jno
push
mov
xchg
stc
fadds
push
incb
xor
sub
mov
or
insb
mov
xchg
cmc
xor
dec
in
icebp
cmp
cmp
dec
add
shll
loopne
adc
loope
sub
push
or
cmp
cmp
jg
lret
sub
fistpl
das
sti
enter
les
cmp
aaa
sub
mov
sub
hlt
pop
add
push
ret
repz
in
sub
pop
pop
inc
and
gs
hlt
sbb
repnz
pop
adc
cmpsb
lea
mov
rolb
pop
push
lret
pop
add
std
nop
int3
mov
sbb
or
pop
repnz
push
inc
jecxz
pop
pop
mulb
mov
hlt
adc
neg
imull
push
gs
rcll
push
dec
sbb
sbb
sbb
inc
gs
pop
cltd
aad
xlat
cmp
movb
mov
fisubrl
out
gs
ja
cwtl
sub
sub
cli
mov
imul
xor
mov
shlb
push
bound
cld
cmpsl
sti
cwtl
adc
xor
lods
xor
icebp
mov
mov
fadd
or
notl
sub
mov
lret
ficoml
sbb
mov
add
and
push
or
es
sub
popa
fdivrp
pushf
push
fstpl
mov
dec
shl
xchg
int3
fwait
push
call
pop
dec
and
out
cmp
sbb
jbe
ljmp
incl
add
add
mov
cmp
or
in
iret
test
pop
jb
repz
adc
or
mov
mov
ljmp
rol
xchg
cltd
lods
push
call
sub
das
push
xchg
notb
fldl
fsts
pushf
mov
sub
and
loope
rcll
cmp
jecxz
loope
mov
out
inc
rcl
inc
push
lcall
popf
pop
cmp
shll
xlat
xlat
and
mov
mov
adc
repnz
sbb
cli
pop
stos
fidivl
aas
nop
andb
or
lret
push
ljmp
sti
in
movsl
mov
pop
daa
data16
push
out
aad
cmpsl
out
mov
outsb
push
jbe
adc
les
adc
adc
repnz
cmp
gs
and
jecxz
gs
icebp
xchg
ret
nop
pop
cmc
in
or
push
xchg
cs
mov
lcall
push
data16
scas
xor
out
sub
lcall
lock
sti
int
cli
mov
cmpsb
jmp
adc
fsubp
sub
push
adc
rcll
in
repnz
fsub
and
out
rol
push
fucomip
push
push
jecxz
add
or
xchg
dec
jmp
pop
xchg
push
xchg
mov
pushf
test
jo
arpl
lret
outsl
ret
jle
adc
hlt
sbb
sbb
jb
xor
insb
mov
rcll
addl
iret
inc
jmp
sahf
in
sar
push
adc
out
pusha
bswap
cwtl
in
ret
stos
mov
pop
lret
les
scas
adc
xchg
adc
int3
pop
adc
sub
insb
out
gs
mov
jecxz
push
or
xor
lea
cmp
sbb
dec
inc
xlat
lea
mov
ss
std
jnp
pop
jg
fxch
lds
mov
jno
aam
add
cmc
jmp
and
adc
shll
add
popf
cmp
fdiv
push
rcr
and
inc
pushf
ds
js
xorw
inc
add
push
xchg
jns
stc
sub
sub
cmc
cltd
out
ret
or
mov
mov
inc
mov
cltd
pushf
gs
jecxz
jecxz
jecxz
ja
bound
out
lret
ljmp
rolb
pusha
xor
add
scas
push
pusha
subl
icebp
loope
xchg
mov
cltd
loopne
or
aam
xchg
add
sbb
add
imul
lret
inc
std
icebp
inc
cld
clc
cmpsb
xor
pushf
push
ffreep
cmp
ror
sbb
push
and
cltd
jmp
aaa
in
in
adc
stc
iret
cmp
pop
test
cmpb
sbb
xor
call
es
xchg
icebp
push
lds
movsl
loope
push
test
xor
lods
dec
ja
push
out
stc
xchg
popf
in
or
rolb
jb
pop
dec
jecxz
push
scas
out
cmpsl
in
jg
ficoml
daa
xor
cli
sub
fistl
rol
out
mov
loope
loop
fidivl
adcb
in
sbb
xchg
or
repnz
mov
inc
push
cltd
mov
lcall
sti
shrb
into
fisttps
rorb
jg
icebp
hlt
sub
ret
mov
dec
xchg
xlat
cld
std
mov
adcl
cmp
fldenv
sbb
cli
pop
jmp
das
xor
cmc
es
xchg
jns
sbb
cwtl
xchg
push
pop
mov
sbb
sub
imul
and
rclb
mov
xlat
mov
insb
sbb
cld
clc
inc
imul
cltd
gs
sbb
cs
xor
fstps
lcall
dec
repnz
stos
mov
mov
fs
ret
and
repnz
cmp
loop
mov
gs
xor
cltd
out
dec
or
mov
mov
repnz
aad
and
mov
xchg
xor
fs
addl
cmp
adc
out
jmp
adc
sarb
loopne
cld
xor
xor
sub
loope
mov
rcrb
or
dec
sub
lret
lds
hlt
es
add
loop
pop
pop
add
lock
xchg
jmp
loop
icebp
popf
lret
sub
mov
sbb
adc
add
adc
mov
or
lret
xchg
adcb
or
mov
or
sbb
fcoml
sahf
mov
or
in
cmp
add
int3
inc
sub
mov
mov
or
out
mov
adc
shl
cltd
push
or
loop
jecxz
mul
xchg
daa
mov
jmp
loopne
iret
mov
in
jecxz
in
or
gs
mov
add
divb
push
test
cld
sbb
and
repz
out
clc
ret
addr16
adc
cmp
lret
add
aaa
xor
jmp
dec
clc
cltd
jl
lock
add
in
add
pop
inc
pop
or
ficoms
test
mov
shrb
xchg
callw
adc
adc
add
into
shl
cmp
pop
xor
cmpsb
sbb
mov
adc
outsl
or
ror
shl
mov
mov
xlat
repnz
or
inc
jecxz
rol
hlt
mov
xchg
out
cli
insb
loop
jns
adc
cltd
jecxz
sbbl
jg
sbb
and
sub
mov
cmp
pop
gs
adc
mov
push
leave
jp
dec
ficoms
sub
or
out
lds
rolb
push
xlat
loop
add
sub
ror
in
popf
or
jp
cmc
dec
xchg
xor
stos
jbe
jg
nop
iret
cltd
adc
dec
sbb
mov
or
hlt
jge
jb
inc
dec
imul
push
jns
sbb
ss
aas
out
adc
in
push
adc
lret
js
fsubrp
incb
cmp
orl
repnz
and
out
or
lods
mov
pop
adc
fnsave
sahf
adc
xor
sbb
cltd
cwtl
movsl
jmp
push
fstpl
xchg
push
xchg
xor
dec
jge
lcall
testl
mov
sbb
lds
into
in
cs
cli
cwtl
daa
fstp
cltd
mov
mov
cmp
rcl
mov
inc
outsl
or
fisttpl
loope
sub
adc
jns
or
mov
cmpsl
sub
and
or
add
cwtl
mov
adc
fsubp
jge
adc
sbb
ror
inc
sbb
and
cwtl
cltd
jmp
repnz
xchg
xor
mov
sub
inc
jns
sbb
pop
xchg
hlt
cmpsl
in
std
sbbb
cwtl
mov
cmp
lods
cmpsb
imul
pop
push
mov
mov
mov
cs
adc
leave
stos
or
pop
std
cmpsl
lds
or
push
aad
mov
cmpsl
mov
sbb
xor
pushf
lods
scas
insl
add
xchg
jmp
jmp
add
test
inc
shll
les
pop
sbb
xor
cmp
mov
adc
mov
jl
sub
mov
lret
ja
pushf
out
into
cld
mov
icebp
cmp
idiv
jnp
add
inc
jecxz
in
xor
sbb
ja
cmp
mov
lods
xor
pop
cs
sar
pop
popf
mov
daa
lret
cwtl
cmp
fsubs
icebp
int
cmp
lcall
xchg
daa
mov
push
cmp
and
mov
stc
es
cmp
loop
lock
adc
out
cmpsb
imul
mov
leave
fwait
push
daa
mov
mov
lock
add
les
xor
loope
add
mov
sub
gs
mov
cltd
mov
rcrl
fcmovnbe
lock
xor
test
dec
pop
xchg
out
mov
inc
cmp
mov
fstpl
lock
mov
ret
js
shll
das
and
adc
dec
push
or
std
adc
push
adc
cs
cmpsl
mov
fnstcw
jg
push
pop
sub
rorl
roll
test
jb
add
mov
les
test
fdiv
mov
es
jl
jecxz
fcomip
xor
into
cwtl
xchg
push
stc
cmc
aam
in
hlt
pop
adc
in
scas
mov
ljmp
lcall
dec
imul
icebp
and
leave
adc
hlt
insl
roll
mov
add
shlb
pop
sahf
sub
add
dec
or
sbb
pop
mov
pop
lret
ret
fwait
adc
inc
jmp
popf
sub
repnz
fs
repnz
mov
hlt
adc
test
mov
lret
shrl
and
cmp
push
xor
mov
je
jecxz
or
or
or
mov
add
jae
ja
repz
in
and
cmc
jge
dec
dec
and
inc
out
iret
aad
shr
aad
movsb
popf
insl
gs
sbb
push
repz
adc
cwtl
cmc
mov
push
inc
dec
dec
mov
out
xor
sar
fcmovnbe
subl
dec
sbb
or
inc
hlt
sbb
pushf
mov
mov
add
jle
out
subb
xor
inc
or
ja
cmpsl
fimuls
mov
test
xchg
xlat
lahf
jecxz
iret
mov
adc
pop
sub
js
das
out
gs
cli
outsl
lret
cmp
mov
nop
loop
cltd
aas
out
mov
and
pop
sbb
bound
sbb
mov
imul
add
ret
in
loop
loop
sub
or
call
push
or
add
out
cmp
mov
ret
iret
xchg
scas
push
sbb
aaa
ret
sbb
xchg
pusha
mov
jecxz
pusha
push
fstps
pusha
aad
xor
adc
mov
andl
mov
pop
pop
mov
ficomps
mov
dec
xlat
xchg
cwtl
in
fmulp
push
sub
rcll
add
popf
lret
sar
xchg
xor
adc
xchg
insl
or
xchg
pushf
int3
shrl
js
mov
aas
add
dec
mov
lcall
repnz
shlb
lret
add
pop
cmpsb
and
cmp
lcall
aas
iret
ds
cmp
inc
stc
sbb
xchg
shrl
xorl
adc
cld
sub
lock
pop
dec
lods
rcrb
mov
fiaddl
cmp
mov
cmp
sbbb
dec
cld
mov
fdivp
pop
test
loopne
and
imul
push
mov
inc
movsl
xor
xchg
mov
dec
fs
push
pop
cltd
inc
add
aaa
add
push
sbb
xor
incl
jb
mov
pop
dec
and
jge
adc
in
lret
add
ljmp
js
sahf
ja
lods
lret
scas
sub
sub
adcl
nop
cwtl
jl
add
mov
gs
clc
pop
sub
rcr
repnz
jecxz
cmp
outsl
sbbb
xor
cmp
jp
pop
or
ror
shrl
push
shl
incl
aaa
or
jle
push
adc
sbb
or
pop
loopne
loop
mov
mov
ds
int3
out
pop
jns
pushf
int3
mov
mov
test
rcl
sbb
xor
pop
aad
or
inc
neg
sbb
rorl
push
mov
clc
popf
movsb
mov
push
fidivs
jb
xchg
push
cwtl
push
adc
dec
cmpsl
jp
adc
push
mov
je
lret
aam
out
jbe
es
imul
test
pop
jns
xchg
iret
ret
mov
ljmp
fwait
mov
lret
mov
push
das
xchg
pop
fisttps
cmp
lret
adc
sub
and
int3
inc
mov
fwait
pop
or
cmp
lods
call
pop
fistl
loope
std
add
sub
lahf
sub
push
movsb
sar
insb
mov
cltd
pop
mov
cmp
nop
test
dec
jb
lcall
icebp
pushf
js
cmp
or
dec
add
adc
sbb
cmp
or
inc
push
out
sbb
imul
dec
adc
mov
hlt
das
aas
adc
cltd
cmovg
add
imull
andb
aaa
lock
xor
gs
out
xor
or
pop
add
dec
das
pop
jnp
sbb
and
cmc
jb
jns
ds
sbb
outsb
adc
add
inc
imul
fildl
sbb
mov
fwait
nop
mov
push
rorl
xchg
lock
sub
pop
das
sbb
jns
gs
jl
flds
jmp
xchg
aam
xchg
and
xchg
test
xor
repnz
jecxz
push
fldl
mov
or
fidivrl
add
lret
xor
push
adc
cltd
and
negb
jbe
xchg
push
hlt
aad
xchg
popa
fsubrs
popf
test
int3
pop
sbb
inc
lock
xlat
movsl
shll
mov
push
dec
lods
mov
add
fiaddl
cmp
xchg
fistpll
orb
sbb
gs
popa
sub
loop
sub
inc
popf
push
sarb
mov
inc
in
lods
cmpsl
push
shr
icebp
or
lret
loopne
adc
fldenv
mov
cld
jbe
xor
popa
sbb
data16
stos
adc
xor
or
cmp
in
iret
push
and
sti
out
pop
add
cmc
adc
sti
fstpl
scas
xchg
sbb
in
lret
aad
pusha
lcall
cwtl
jno
stos
pop
mov
sub
jmp
mov
push
rorb
movb
inc
daa
jle
std
jbe
in
jg
into
sub
imul
cmpl
cmp
adc
jmp
xchg
and
roll
adc
jmp
ret
cmc
int3
gs
jp
cmp
out
add
cmpb
jno
mov
mov
iret
add
movsl
sub
movsb
adc
dec
jb
sub
add
add
cld
mov
testb
adc
sti
cmp
fisubrs
call
or
inc
adc
sub
int
cmc
das
push
and
cld
fisubrs
cs
ror
sbb
or
mov
jp
cld
out
fstpt
lcall
out
aam
push
xorb
scas
imulb
out
push
lcall
mov
mov
ret
dec
mov
inc
scas
imul
in
add
inc
mov
xchg
pop
dec
or
rorl
inc
add
jecxz
pop
pop
lret
dec
cwtl
arpl
and
inc
outsb
push
jnp
mov
divl
xchg
sti
cmp
into
int
pop
dec
in
dec
pop
sbb
xchg
inc
dec
sub
push
mov
mov
mov
mov
rcll
js
mov
xchg
pop
mov
cmc
fwait
es
icebp
frstor
jns
clc
and
ret
or
repz
xchg
dec
sub
sbbb
add
js
movsb
pop
jmp
and
sbb
jno
xor
lock
outsl
xor
inc
insb
movsb
iret
test
in
call
mov
jns
sbb
outsl
fs
jp
mov
scas
xor
jle
jl
mov
mov
jne
into
mov
mov
and
ss
fs
add
popa
xchg
jp
sahf
aas
xor
daa
inc
pop
insl
ljmp
sbbl
push
xor
stos
popa
mov
aad
xchg
jle,pn
je
push
jle
mov
fsubr
mov
or
loop
test
daa
inc
pusha
sbb
sbb
sub
outsl
ds
fld
jge
sub
pop
outsb
inc
xchg
or
lahf
sub
adc
dec
sbb
mov
push
movsl
out
pop
mov
icebp
push
imul
sbb
imul
ljmp
push
add
sub
shll
les
out
dec
jns
cmc
or
je
call
rorl
faddl
mov
mov
movsl
sarb
pop
and
pcmpgtb
js
mov
mov
jmp
sbb
pushf
aaa
jmp
popl
ror
je
pop
sbb
or
es
add
test
push
cmpsl
jmp
imul
jecxz
jne
add
inc
outsb
push
jl
jmp
fsubrs
jo
mov
lods
add
mov
ficompl
cld
pop
out
ss
push
xor
cld
notb
lock
jle
popf
lret
cltd
xchg
insb
adcb
or
sbb
pushf
sbb
inc
call
push
sbb
ljmp
arpl
xlat
jecxz
pop
ffreep
or
xor
cmp
int3
aad
sbb
adc
adc
xchg
hlt
repz
je
mov
das
sti
sub
clc
xchg
loope
mov
leave
or
shrb
movsb
push
xor
mov
outsb
add
shrl
add
data16
iret
outsb
pushf
push
rcl
cmpb
xchg
pop
dec
xchg
iret
or
mov
scas
popf
lods
pusha
xor
jae
mov
pop
mov
lret
sbb
rorb
fcmovnb
sbb
adc
mov
pop
rcl
ret
sbb
rcrb
and
jmp
es
out
mov
jl
out
push
jecxz
hlt
repnz
push
add
add
int
xchg
scas
arpl
lea
ss
lret
testl
adc
dec
in
pop
jae
push
pushf
jne
or
pop
add
jg
sbb
mov
test
add
mov
inc
pop
add
mov
xchg
leave
outsb
xlat
push
dec
shrl
xchg
jmp
loope
or
or
jmp
jb
dec
cltd
test
shr
mov
jns
out
or
fisttpll
test
xor
neg
mov
cmp
sub
mov
cmp
cwtl
loopne
in
adc
push
and
scas
push
dec
data16
mov
insb
and
mov
jne
outsl
mov
jb
adc
inc
lcall
ret
bound
or
add
adc
ljmp
rol
dec
adc
add
mov
sbb
adc
nop
xchg
sbb
xor
pusha
imull
push
mov
lock
pop
jo
lods
jo
fistpll
add
loope
and
adc
ret
jecxz
lods
xchg
adcb
jb
dec
or
and
jno
xchg
jp
fwait
push
enter
jg
adc
add
pop
mov
test
movsb
push
ss
pop
sbb
jmp
decb
lea
sub
icebp
sti
sar
sub
lret
inc
fimull
and
adc
jmp
out
and
into
jae
rclb
outsl
add
sbb
jb
jg
xchg
add
adc
cmp
mov
bound
add
inc
repz
xchg
and
sahf
jnp
test
jns
data16
cltd
cmp
nop
xchg
xor
lret
dec
cmp
fsubs
cmp
rcll
fistps
jmp
popa
push
sub
inc
fmull
mov
stos
lcall
xchg
ret
repnz
pop
loope
jecxz
lods
mov
es
and
shlb
ret
cwtl
sbb
fcoml
call
sub
mov
xor
pop
jbe
clc
rep
int
cmp
punpckhbw
cld
fwait
inc
imul
jb
das
das
and
mov
sbb
aad
push
cltd
negb
pop
shl
xchg
dec
enter
or
jmp
sub
lcall
mov
pushf
xor
pop
rcl
ret
cmp
mov
jns
pushw
sti
sub
cmpsl
fidivrl
pop
in
mov
xor
jb
sbb
testl
lcall
jo
adc
pop
or
aas
loop
xor
fnsave
insl
dec
fbstp
mov
sbb
adc
sbb
cmp
jle
nop
mov
sbb
lods
cmp
xor
sub
adc
push
fsubl
enter
aam
pop
int3
xchg
cltd
jp
sahf
scas
mov
lods
gs
or
nop
pop
outsb
mov
sbb
ret
fildll
gs
sbb
pop
dec
push
and
popf
xor
jecxz
enter
mov
shlb
test
xchg
xor
int
in
push
and
jmp
imul
andl
ljmp
sub
popa
cmpb
lods
ret
mov
adc
adc
mov
add
cmp
xchg
enter
or
out
mov
lds
cwtl
shlb
in
xchg
push
adc
ret
sbb
pop
pop
adc
lret
scas
jne
es
cmp
sub
imull
jmp
mov
in
je
xchg
test
sub
or
loopne
loopne
in
add
push
dec
mov
shlb
xor
nop
movsb
popf
insb
add
js
pop
sbb
add
lock
unpckhps
insb
xchg
xor
mov
mov
jmp
xlat
icebp
ret
pop
in
mov
lea
repz
or
lds
in
inc
insb
jno
sti
dec
adc
and
stc
and
outsl
leave
popfw
or
cmp
push
movsl
in
dec
cmp
inc
cmp
lock
outsb
mov
bound
stos
enter
dec
lods
pop
dec
stos
arpl
add
imul
mov
xchg
mov
push
repnz
mov
dec
ficoms
jl
mov
xchg
inc
sbb
inc
popa
mov
and
rol
bts
pop
dec
push
jne
xchg
lock
in
add
out
xchg
ss
cmp
cmpxchg
stc
iret
bound
mov
dec
add
ljmp
adc
add
loop
mov
hlt
xor
lar
xchg
mov
xchg
cltd
imul
push
dec
insb
mov
je
push
fs
icebp
fld1
pusha
dec
and
sbb
push
cwtl
mov
add
mov
push
xchg
inc
or
ljmp
cmp
lock
int3
push
in
pop
mov
and
mov
shr
ret
fdivs
in
sub
dec
mov
out
push
popf
mov
in
jge
fmul
push
push
add
or
lods
xor
loop
push
jle
sarb
sub
andl
jmp
xor
enter
mov
adc
inc
mov
imul
push
sub
mov
hlt
daa
adcl
add
xchg
pop
call
push
popa
push
push
push
insl
xchg
test
fnstcw
fcompl
std
lahf
insl
xor
cmp
push
sbb
xor
mov
xchg
jg
push
outsb
sbb
and
cld
cwtl
fiadds
sbbl
rcr
xorl
jecxz
idivl
into
sub
fdecstp
cmp
inc
cmp
push
adc
testb
push
rcll
add
lret
cmp
pop
out
mov
xorb
pop
adc
mov
cs
sbb
sbb
pop
mov
adc
fisubrl
call
mul
loopne
jb
bound
fcom
adc
xor
cwtl
pop
cmc
shll
int
icebp
and
xor
rcl
lret
or
clc
or
sub
icebp
inc
xchg
ret
pop
fs
rcrb
mov
fisttpl
shlb
push
and
or
fwait
roll
sub
loopne
push
mov
xchg
stos
mov
pop
dec
cli
loope
jns
enter
fisubl
xor
cli
test
lock
icebp
mul
inc
adc
inc
sbb
push
mov
lods
add
lahf
js
jecxz
push
aad
cmp
push
inc
add
fcmovnb
sti
in
mov
pop
loope
jns
fnstcw
jle
mov
roll
out
adc
out
les
out
or
sub
std
in
aad
movsl
movl
je
call
aad
fmull
or
mov
les
sub
push
push
sub
mov
mov
es
cltd
add
xchg
aas
xlat
mov
fwait
pusha
loope
adc
cmpsb
xlat
jo
dec
push
cli
mov
popf
push
add
in
push
mov
cld
jne
jl
cwtl
jne
mov
xor
loop
arpl
out
in
xchg
sti
ss
pop
mov
mov
rclb
je
mov
rorl
sbb
mov
xchg
movsb
sar
sub
repz
es
cwtl
xlat
shl
out
and
add
pusha
rolb
cmp
sbb
popf
adc
adc
mov
incb
cli
daa
fsubrl
int3
shr
cmpb
in
sahf
aad
fld
clc
int
sbb
sbbl
or
cmc
ds
or
ljmp
out
mov
xor
dec
mov
rorb
add
or
sbb
mov
or
jp
lahf
dec
sar
pop
hlt
jno
mov
mov
xor
je
jg
xlat
adc
sti
xor
fnstsw
pushf
jl
movsl
jle
int
mov
inc
insb
add
inc
mov
dec
das
xor
xor
fwait
cld
mov
xor
mov
xchg
mov
sub
add
and
cmp
insl
mov
cmp
inc
sub
testl
xchg
aad
pushf
prefetch
in
xchg
jp
fdiv
daa
sub
add
push
adc
jnp
cltd
shlb
movl
jecxz
inc
or
fildl
jecxz
icebp
and
and
xor
mov
shrl
jecxz
mov
sub
sub
cmpsb
sarb
or
sub
lahf
or
cmpsl
jns
or
popa
std
shr
rclb
rcr
icebp
fdivrp
mov
outsl
push
into
sub
es
aaa
bound
insb
jg
jno
jno
and
ret
pop
gs
adc
push
out
shll
mov
pop
push
cmpl
pop
inc
or
stc
xlat
adc
sbb
fs
mov
adc
adc
addr16
enter
push
add
xlat
jmp
jle
push
adc
repnz
aad
lea
sbb
outsl
repnz
add
jmp
jmp
cmp
test
jge
xchg
or
lds
inc
subl
xchg
retw
jl
fmull
sbbl
in
addl
dec
sub
add
pop
shl
fs
jb
les
ret
mov
jmp
stc
and
les
jle
aad
mov
mov
ret
leave
mov
cltd
xchg
push
xor
sub
loopne
divl
cmpsl
aaa
mov
and
jns
cmpsb
pop
cmp
and
ret
jnp
sbb
mov
std
mov
aas
xor
sarl
and
cld
mov
andl
stos
out
clc
sub
out
adc
js
fldt
jae
scas
jmp
aad
test
dec
inc
xor
cld
adc
xchg
lret
or
sub
das
je
je
inc
and
lds
ljmp
movsb
fwait
lods
div
add
addl
sahf
in
xor
mov
dec
add
movsl
insb
or
inc
dec
out
icebp
xchg
repnz
sub
xor
dec
test
sub
lock
mov
mov
es
fs
push
add
mov
imul
arpl
das
add
xchg
cmp
sub
into
das
mov
in
sbb
adc
sbb
es
adc
rcrb
add
push
cmpb
js
adc
testl
pop
arpl
into
xor
sub
outsb
sahf
mov
pushf
or
jb
xchg
repz
adcl
into
shlb
adc
sti
bound
cmpsl
les
test
les
sub
out
cli
and
pop
out
mov
clc
inc
repz
xor
mov
jo
addr16
xor
push
std
mov
repz
jo
fisubrl
int3
cmp
push
shrb
sub
push
mov
mov
fstpl
movsb
adc
int3
adc
inc
xlat
pop
fidivrl
stos
sbb
adc
negl
rcll
add
insb
popa
ljmp
fisttps
movsl
test
ljmp
insb
add
stos
adc
add
aad
jbe
adc
adc
popa
movntps
lret
sysret
insb
dec
lret
jmp
movb
sub
adc
sub
fiaddl
adc
ljmp
adc
xor
frndint
sub
shlb
ret
or
ret
mov
add
adc
rol
xchg
fisttpll
ret
or
and
ret
into
push
pop
scas
mov
test
add
add
adc
aam
data16
enter
adc
popa
loopne
adc
adc
jne
mov
or
data16
push
adc
add
fidivrl
enter
inc
lds
enter
push
imul
pop
xchg
mov
hlt
jns
push
and
enter
movsb
fimuls
dec
sub
mov
pop
mov
stos
fadd
sarb
sarl
je
into
jb
data16
imul
or
mov
mov
push
adc
rorl
xchg
adc
aad
sahf
cmp
jp
inc
add
std
cli
test
xor
push
cs
xor
adc
push
ret
lods
imul
jmp
mov
in
mov
test
lock
xor
sub
jg
loop
pop
push
jmp
mov
mov
fistps
insl
in
or
or
movsb
in
ret
mov
sar
loopne
lret
adc
shll
jb
movsl
jnp
adc
pop
dec
sbb
subb
into
negl
pushf
or
std
aas
and
std
cmp
fiaddl
or
sbb
inc
and
sub
cs
push
add
lret
xor
imul
push
stos
adc
xlat
loop
leave
cmp
mov
dec
inc
out
fnclex
pop
jno
shlb
jp
loopne
in
push
out
fildl
or
sbb
inc
and
jne
adc
pop
jbe
cs
push
and
lret
xor
imul
mov
jmp
xor
sbb
icebp
push
cmp
mov
push
iret
icebp
mov
lret
add
cld
push
sub
movsb
fs
add
cmp
lret
xor
out
int3
pop
push
and
ss
and
fildll
movl
in
xchg
in
ret
dec
ret
loopne
add
rcll
and
outsb
cmp
and
mov
in
scas
jle
add
rcr
shlb
mov
add
dec
ds
inc
sub
sarb
add
push
movsb
sub
sahf
xchg
mov
lret
adcl
nop
dec
ret
mov
xor
or
dec
cwtl
aam
xor
jg
fidivrl
gs
xchg
cs
cmc
pop
mov
dec
pop
jle
movb
xchg
fs
or
mov
in
fcmovnbe
push
fstpl
pop
pop
sahf
lcall
pop
pusha
mov
insl
shll
push
inc
insb
pop
and
fwait
xchg
or
aaa
das
sbb
xchg
hlt
aaa
xchg
mov
movsl
jmp
aaa
mov
mov
fsubr
and
daa
xchg
into
xchg
mov
pop
push
loopne
or
and
xchg
fxch
inc
ljmp
xor
jno
pop
cs
xor
loopne
xlat
sbbl
aad
cli
dec
movsl
and
sti
cmc
flds
cmp
int
into
lock
movsl
sbb
inc
enter
jo
pop
lods
mov
add
popf
call
mov
out
fildl
xor
pusha
shlb
cli
and
mov
insb
mov
outsl
adc
ret
inc
repnz
or
dec
xchg
les
aam
xor
fimuls
or
mov
mov
lahf
push
sbb
push
adc
push
stos
lret
rcll
stos
mov
jo,pn
push
jmp
leave
aam
enter
das
mov
in
into
rclb
inc
mov
adc
ret
lret
push
out
and
fiaddl
nop
mov
repz
xor
dec
fldcw
cmp
cmpsb
xor
jne
sbb
cmpsl
out
js
ljmp
sbb
and
ss
pop
outsl
jnp
push
imul
icebp
add
and
push
fadd
iret
scas
cmp
add
jae
xchg
retw
and
imul
push
push
mov
sahf
cmp
adc
sar
xchg
jno
ja
xlat
cmpsb
dec
sub
out
push
jle
rorb
xor
leave
pop
cmp
push
xor
int3
lods
sbb
lock
push
and
lret
fmull
add
clc
loop
rorb
and
push
iret
jno
adc
das
in
pusha
push
and
popf
je
test
in
push
das
pop
insl
cld
push
leave
push
cmp
or
xorl
das
adc
jecxz
pop
cmpsl
out
jmp
int
lock
sub
loopne
push
out
mov
out
sarb
cli
and
sbb
imul
cltd
mov
cmp
sbb
mov
es
push
out
cmp
js
inc
popa
sbb
xchg
icebp
arpl
sbb
jge
jns
xchg
xchg
jo
inc
pop
adc
xor
or
sub
negb
stos
lods
xchg
xchg
shlb
mov
jmp
sti
daa
sbb
das
enter
or
lret
rorl
outsl
bound
push
cmp
fs
lahf
cld
or
and
int3
shr
movsl
test
int3
lock
add
mov
push
addr16
adc
cmp
lret
test
sbb
cmp
xor
movsl
pop
add
xchg
enter
nop
test
movsl
mov
fsub
mov
icebp
cmpsb
push
sbb
push
sub
mov
mul
cmpb
jo
mov
pop
or
mov
inc
or
lods
pop
add
jmp
pop
fsub
mov
cmp
inc
cmp
bound
pop
fwait
test
add
nop
or
int3
dec
or
sub
push
jmp
inc
cmpsl
sbb
jle
std
int3
dec
or
adc
bnd
push
clc
mov
add
stos
pop
lea
adc
lcall
push
fldt
in
scas
daa
mov
movsl
nop
notb
xchg
dec
add
and
mov
pushf
xchg
mov
test
add
push
in
fildl
call
fucom
adc
adc
adc
push
mov
negl
fsubrs
mov
cwtl
js
in
adc
fcomps
stc
sar
cmp
mov
mov
cmc
test
mov
rclb
cli
sub
sub
xor
inc
loope
call
sbb
push
mov
js
std
jo
and
enter
and
std
jne
jbe
into
mov
xor
ljmp
fsin
aas
clc
addr16
in
mov
enter
cld
stos
or
sarl
push
test
add
jo
inc
das
and
pop
mull
xor
sbb
jo
adc
or
add
mov
mov
and
pop
cmpsl
or
test
pusha
xchg
jecxz
pop
xor
and
xlat
or
sub
mov
lret
pop
stc
pop
repnz
xor
ret
xlat
mov
add
loope
rcr
xchg
iret
nop
pop
das
fiadds
aad
pop
xchg
out
imul
or
aam
and
outsl
sub
decb
scas
les
fdiv
mov
push
or
in
loop
or
ljmp
int3
dec
cmp
jge
cld
clc
cmpsb
shl
in
lahf
push
adc
ret
rcll
rol
int
fadd
test
xorl
aad
mov
push
ds
inc
cmp
mov
xor
std
mov
fldcw
lods
clc
fsubr
pop
mov
lret
dec
out
sbb
into
pop
inc
sar
iret
loope
fisubrs
cmp
or
test
ficompl
mov
rclb
add
jno
jns
inc
pop
or
xor
rcrl
les
fs
jns
or
adc
mov
cmp
xlat
in
test
add
jg
sub
lret
cli
data16
pop
pop
cmp
clc
out
cmp
inc
jnp
loopne
pusha
int3
lcall
dec
repz
fiaddl
js
sub
sub
mov
stc
repnz
gs
imul
incb
out
xchg
adc
rolb
sbb
mov
popa
outsl
aaa
xor
xchg
mov
and
xor
outsb
adc
and
add
jo
loop
push
mov
xor
mov
cwtl
outsb
mov
in
fstps
addr16
or
syscall
rorb
xor
mov
dec
push
xor
je
and
insl
daa
mov
cmp
cld
pop
repnz
xchg
lret
xor
inc
cmp
es
pop
scas
jge
xchg
hlt
mov
cmpb
inc
ret
adc
repnz
fmulp
leave
addr16
adc
ja
or
mov
hlt
lret
out
lcall
cmp
fucomip
or
popf
idivb
pop
cltd
pop
xchg
aam
pop
mov
int3
and
xor
or
and
jno
outsb
mov
add
test
rcl
out
mov
add
aam
xor
xchg
push
call
pop
add
aaa
mov
es
call
daa
cmp
pop
mov
ret
clc
es
push
aad
insb
push
adc
inc
push
xor
sbb
fildll
inc
mov
mov
subl
mov
sub
callw
ficompl
pop
shlb
and
xor
clc
stos
cmp
in
daa
pop
sbb
jp
cmpsb
in
xor
or
xchg
lret
fidivs
pop
mov
dec
push
stc
add
xchg
cli
popf
xchg
jns
out
sbb
ljmp
int3
int3
jle
mov
pop
xor
cmpsl
lea
inc
repz
cmp
out
mov
repz
pop
pop
sbb
movsl
pop
mov
xorl
int3
inc
jbe
sub
mov
es
xchg
mov
aaa
in
loop
shl
sbb
jnp
sbb
pusha
dec
xor
arpl
mov
sub
fdivl
aad
orl
aas
xchg
push
and
in
pop
pop
stc
mov
and
ret
xchg
pushf
push
leave
lea
push
es
mov
jge
push
movsb
aam
lret
pop
rcl
loopne
jns
or
lods
aas
les
std
vpshuflw
gs
xchg
xchg
in
in
rcrb
jg
add
jmp
and
sub
shlb
es
out
cli
jnp
test
cs
xor
incl
outsb
cmpsl
mov
xor
xor
cmp
sbb
jecxz
das
and
movsl
mov
cmp
dec
outsb
das
idiv
push
pop
ret
sahf
sub
repz
mov
cwtl
out
pop
outsb
lret
mov
and
shlb
popa
adc
mov
in
int
push
adc
mov
fcmovbe
lret
out
xchg
rcrb
adc
int
outsl
sbb
or
and
pop
xor
and
xchg
add
mov
out
bsf
sub
ja,pt
and
mov
stos
std
scas
ret
pushf
dec
jle
pop
adc
dec
push
lods
fs
shl
std
shll
cmp
jb
jecxz
sub
pop
shrl
fistpl
pop
mov
mov
lods
lret
cmp
sub
adcl
jno
iretw
push
int
jns
lcall
jae
insl
cwtl
and
ret
jecxz
sti
arpl
and
pop
inc
shll
rcl
pop
mov
mov
mov
lahf
data16
in
fisubrs
mov
das
push
cs
mov
outsl
jecxz
cmpsb
std
sbb
adc
int3
daa
push
dec
dec
jbe
inc
out
pushf
and
adc
mov
lds
jmp
inc
dec
aam
and
mov
sti
cli
shlb
fsubl
jecxz
test
or
xchg
in
aad
and
test
nop
mov
out
sub
pop
adc
or
movsw
fwait
aad
fwait
ds
btr
ds
test
cmp
add
jp
mov
or
data16
xor
sbb
add
loopne
xor
flds
push
xor
cld
xor
hlt
push
and
ds
fildll
orb
movsl
sbb
jnp
sbb
lret
mov
outsb
in
ljmp
stc
ljmp
mov
cmp
pop
mov
xor
mov
call
inc
fisubrl
adc
lods
or
pop
or
or
iret
cwtl
shll
cli
pop
xor
lret
notb
stos
incb
aad
fiaddl
rcrl
mov
shl
and
and
stos
sub
cmp
fbld
xorb
push
adc
add
xchg
push
xor
and
mov
sarb
in
lea
adc
ss
and
pop
xor
movsb
or
sbb
in
mov
dec
jl
mov
movsl
movsb
mov
in
lds
aas
pushf
hlt
xor
and
dec
and
shrb
add
pushf
sbb
jne
xorb
roll
stos
pop
pop
mov
lea
and
pop
and
lock
das
roll
aad
movsb
rorb
sub
es
les
fnsetpm(287
pushf
add
in
mov
jge
jb
dec
pop
lea
and
adc
dec
loope
loop
std
movsb
repnz
sbb
in
in
add
add
or
jge
cmpsl
adc
and
test
test
mov
or
repnz
rolb
add
sar
pushf
mov
push
dec
loope
bound
push
xchg
daa
sbb
push
jns
jb
dec
lds
fwait
inc
add
add
shlb
and
and
dec
imul
sbb
cmp
xor
popf
xor
sgdtl
jp
loopne
dec
add
fwait
lcall
adc
daa
xchg
hlt
aad
pushf
sub
and
in
add
add
rolb
pushf
int3
das
aas
in
es
loop
cltd
and
cmp
subl
pop
pop
out
test
sbb
and
push
dec
sbbb
ljmp
xor
and
mov
shlb
xchg
sbb
inc
fidivl
or
mov
cmp
inc
ds
pop
dec
cmp
push
stos
jmp
mov
shll
sub
add
xchg
ret
lret
dec
test
inc
mov
or
lock
les
sub
imul
mov
hlt
das
push
test
dec
vunpcklps
adc
jp
push
xlat
gs
into
or
dec
popf
ljmp
dec
sti
ljmp
cwtl
in
cs
cmpsl
out
mov
outsb
add
xor
out
cmp
and
outsb
imulb
jns
xor
and
lret
loope
adc
sub
testb
sbb
push
pushf
mov
lahf
and
xchg
cwtl
cltd
inc
sbb
adc
cli
mov
sub
negb
clc
sub
aad
mov
outsl
hlt
cmp
xor
int
aad
arpl
roll
shlb
nop
divl
clc
cmp
cmc
fnsave
in
dec
lcall
call
jb
mov
in
lock
fxch
push
adc
mov
jnp
lahf
call
jbe
cld
ret
sar
push
and
jmp
mov
pop
xchg
sbb
mov
je
lcall
lret
pop
divb
cs
lods
and
ret
xchg
fwait
mov
adc
leave
std
or
out
call
and
repnz
fs
cmc
test
sti
mov
dec
jns
jae
into
icebp
test
hlt
jecxz
jmp
sub
mov
cs
mov
scas
mov
test
mov
out
loop
xchg
fcmove
inc
ror
fisttps
aaa
cmp
dec
xor
int3
xor
lret
jp
mov
fiadds
add
sbb
xor
sub
test
or
mov
sarl
push
hlt
jge
icebp
fmul
mov
jecxz
enter
jg
fwait
daa
stc
insb
add
or
and
movsb
push
xlat
loope
lret
fldenv
repnz
aas
push
data16
inc
std
out
dec
lret
and
shll
dec
test
mov
test
ds
xchg
pop
rorb
cs
jnp
in
xchg
popf
adc
faddp
cmp
sbb
mov
inc
or
xor
in
cmp
mov
sub
dec
popf
lret
xlat
or
ljmp
cmp
adc
loope
das
and
push
sti
cwtl
out
pop
cld
sbb
orl
frstor
fnstenv
imul
shrb
and
enter
cld
xor
mov
mov
loope
jmp
cmp
out
adc
icebp
pop
adc
es
out
int
aam
jecxz
and
hlt
push
addw
sub
fidivrl
out
mov
xor
loopne
jnp
pop
ljmp
loopne
addr16
stc
scas
gs
shlb
repnz
and
push
imul
negl
fildll
adc
and
or
mov
cmpb
dec
leave
scas
lock
leave
out
inc
scas
fst
pushf
push
jmp
lret
sub
add
or
sub
mov
ret
fcmovne
rcrb
sbb
mov
mov
das
aad
mov
jb
sti
add
shl
mov
int3
xor
adc
pop
mov
adc
popf
inc
and
data16
mov
arpl
cmc
idivl
push
pop
mov
xor
jge
add
movsl
mov
pop
repnz
adc
xor
sub
push
test
mov
jp
call
jmp
mov
xor
dec
cmp
mov
dec
mov
pop
test
pop
or
in
mov
sub
ret
cmp
cmp
negl
and
out
out
mov
xchg
sub
lock
jns
faddl
adc
test
lock
push
shll
ret
mov
pop
push
mov
sbb
add
testl
cmc
sbb
lock
in
pop
mov
dec
and
xchg
mov
in
add
add
rcrb
and
rorb
lcall
repnz
sub
rorl
rclb
fcompl
hlt
in
les
add
iret
cmp
push
insl
cmp
mov
xor
jbe
repnz
rcrb
pushf
mov
xor
push
cmc
push
mov
or
and
adc
fcoml
xor
cmp
in
cmpsb
out
pusha
push
mov
fldenv
es
insl
xchg
call
xor
in
inc
in
cmp
nop
push
daa
imul
nop
xor
insb
sbb
fiaddl
rolb
popf
lcall
aad
clc
lods
inc
shrb
notl
loopne
sub
pusha
fisttps
inc
insb
add
cmp
xchg
pushf
outsb
mov
mov
push
pop
xor
and
cld
push
out
fwait
sbb
add
dec
repz
icebp
pop
adc
in
cmp
and
rcll
pop
arpl
push
hlt
sbb
jnp
inc
fdivrs
jmp
inc
adc
xor
mov
ss
cmp
in
push
jle
test
shll
sub
add
insb
int
popf
out
rcl
int3
push
in
cs
ds
les
ret
add
lds
js
es
adcb
mov
outsb
stos
lcall
inc
lods
je
push
gs
xor
lret
adc
stos
mov
movsl
call
cwtl
jg
sbb
xchg
push
icebp
dec
daa
mov
pop
je
pop
mov
aas
lods
cld
outsb
outsb
adc
cwtl
push
adc
lock
cld
out
pop
sub
adc
movsb
mov
dec
xchg
addr16
ret
pop
shll
rol
fldt
movsl
xor
mov
shrl
push
or
cmpsb
jns
stos
xchg
mov
out
push
lds
stos
pop
pop
sub
jge
lret
sub
fsubrl
daa
ret
push
lea
data16
sarl
std
sub
mov
pop
cs
xchg
pop
sbb
out
out
jle
in
mov
xchg
idivb
stos
cmpsb
stc
xor
rclb
add
stos
and
add
fisubrl
push
or
pop
outsb
je
jmp
loopne
or
cmc
insl
sub
add
test
and
cmpsl
int
negb
pop
jge
sahf
push
in
jb
pushl
scas
int
test
sub
movsl
in
cmpl
outsl
cmp
mov
inc
push
or
movsl
mov
mov
sbb
sbb
ds
lret
aam
stc
push
jge
std
and
mov
incb
sub
or
jle
iret
and
mov
call
mov
popa
insl
lcall
push
push
cmpsl
and
leave
test
pop
cwtl
scas
and
mov
fidivrl
cmp
pop
jmp
jno
movsl
sti
orl
es
aas
je
ss
xchg
in
mov
mov
mov
push
add
and
fcmovnb
pushf
les
add
in
xchg
test
push
mov
push
inc
jb
and
mov
mov
leave
insl
add
pushl
lret
and
clc
fcoml
out
add
int3
cli
mov
lock
jno
divb
imul
fcoml
cmp
rclb
sbb
lock
adc
inc
insb
inc
es
imul
inc
push
in
shrb
pop
adc
fcmovnu
or
mov
push
push
xchg
rcll
jmp
add
les
mov
push
pop
fidivrl
test
out
fmuls
and
lds
dec
movsb
xchg
push
push
stos
repz
pop
loop
sub
insl
xchg
stc
repnz
sub
fwait
cmc
cmp
dec
mov
into
std
jns
mov
or
mov
jno
and
mov
mov
xchg
inc
sub
adc
jle
inc
xchg
in
sahf
test
ffreep
loop
push
sbb
sub
movsl
sbb
pop
xchg
xchg
or
push
lea
xor
adc
xor
cmp
aaa
sahf
es
cmp
aam
mov
cld
jb
mov
fsts
dec
mov
loop
int
or
pop
out
and
mov
sub
push
or
bound
js
add
cmpsb
fistpll
jae
mov
sub
cmc
dec
xchg
les
lret
sti
and
adc
dec
std
jge
push
stos
xlat
adc
mov
and
std
je
inc
insl
sub
add
and
mov
mov
fstps
sbb
loopne
or
adc
imul
ljmp
lods
jmp
xchg
add
mov
sub
stos
cmp
mov
out
test
add
cmp
mov
lods
loope
jnp
sub
add
enter
cmp
insb
lret
fiaddl
mov
pop
mov
jbe
fs
pop
lret
enter
div
xchg
push
out
push
mov
cmp
push
sub
aad
in
mov
jle
jp
ud0
jns
sbb
mov
imul
add
iret
nop
pop
inc
int
xchg
dec
and
ret
enter
sti
dec
and
inc
sti
pop
in
das
insb
dec
jne
push
add
out
sbb
jae
push
aas
adc
mov
mov
imul
mov
xor
mov
push
test
es
jg
pop
inc
fisttps
sbb
shll
push
rolb
and
xchg
lcall
shrl
jecxz
cwtl
aaa
sub
in
xor
call
mov
repz
or
mov
or
into
data16
cmp
push
fucom
aad
es
ret
into
repnz
sar
and
xchg
xor
mov
and
ror
push
ror
inc
sub
aam
idivl
ret
adc
sahf
imul
cmp
test
repz
call
jmp
sarl
std
xor
dec
in
into
std
imull
inc
repz
push
push
cmp
xchg
lock
and
fisttpl
loope
add
sbb
sbb
loope
fwait
scas
pusha
jnp
jnp
aaa
jge
shll
lahf
scas
lds
add
scas
mov
mov
jns
xor
test
movsl
and
pop
les
ret
enter
popf
or
mov
popa
sub
lock
outsb
inc
jbe
aad
mov
cmp
cmpsl
int
push
push
jle
outsl
adc
je
pop
sbb
testb
mov
lret
add
sbb
loopne
fcompl
sbb
add
int
fists
or
addl
cmp
shl
add
sub
xchg
subb
cmp
sbb
sub
add
lret
cmp
rcrb
or
pop
mov
test
rcl
dec
aad
shl
mov
ffreep
int3
dec
jno
xor
push
repz
mov
mov
ds
addl
inc
imul
das
fimuls
add
push
cs
jmp
xorl
and
or
mov
pop
or
xor
mov
pushf
test
aad
mov
and
jmp
data16
or
lret
cmp
jge
scas
aam
jnp
cwtl
in
fnstsw
mov
xor
call
aas
icebp
pop
push
es
dec
and
cmp
mov
pop
call
dec
cltd
push
enter
mov
lahf
adc
mov
loope
rolb
jae
int3
out
mov
push
jecxz
arpl
imul
or
shrb
das
jae
hlt
iret
cmp
and
sbb
loope
mov
loopne
jmp
xchg
cmp
scas
and
sbb
cld
sar
lock
arpl
xor
xlat
sub
cmc
and
stos
sti
aad
or
ss
hlt
popa
rcl
test
and
cmp
into
jb
sar
jecxz
add
lcall
int
xchg
mov
or
shr
xlat
adc
jmp
popf
inc
fs
clc
not
cmpb
das
dec
imulb
or
fcomps
pop
inc
fisttpll
repnz
fcoml
lock
jmp
lcall
pop
call
movsb
lret
lds
xchg
cmp
xlat
adc
sbb
and
es
and
sub
filds
arpl
mov
xchg
cld
je
into
pop
adc
sub
xor
pushw
xchg
sub
mov
mov
inc
or
leave
cmp
pop
push
cmp
shll
xor
int
sub
add
loope
push
aam
push
fmuls
imull
pop
data16
pop
ja
inc
adc
in
push
mov
and
out
mov
cltd
push
cmp
ljmp
rcrl
lret
stos
pop
push
ja
rol
icebp
cmp
push
inc
sar
cmp
lret
push
rcr
shl
sub
or
or
loopne
push
out
popf
cmc
dec
cmp
and
pop
arpl
xor
cmpsb
leave
or
flds
loope
sbb
aad
pop
mov
lods
add
push
ljmp
push
push
insb
aad
or
lods
mov
movsb
xchg
adc
add
data16
pop
rcll
ja
xchg
mov
stos
xchg
data16
adc
inc
arpl
adc
jno
fsubp
rclb
gs
pop
cmp
xchg
ss
push
lret
lea
xor
adc
jnp
loope
mov
in
das
jp
imul
mov
adc
in
mov
add
mov
mov
mov
jb
lret
push
mov
or
pusha
inc
or
and
push
loopne
inc
fwait
dec
imul
aaa
sbb
add
arpl
push
flds
adc
sbb
adc
stos
adc
sbb
or
popf
andl
adc
push
mov
add
adc
cwtl
aad
and
adc
mov
adc
xor
pop
adc
mov
lret
in
mov
or
inc
or
adc
push
adc
mov
popf
and
xor
mov
push
push
jecxz
subl
dec
pop
xchg
or
ljmp
testb
scas
lea
pushf
cltd
pop
in
les
or
adc
sti
inc
inc
daa
repz
cmp
add
add
or
pushf
xlat
and
add
aad
stos
push
cmp
shlb
and
jle
push
rolb
stos
dec
pop
add
adc
ret
fwait
inc
cmp
sbb
jle
or
sbb
orb
dec
dec
adc
les
fcmovbe
jb
jno
leave
in
xor
lods
adc
or
jbe
and
pop
xchg
push
popf
jp
loope
sbb
hlt
mov
stos
add
scas
fnsave
mov
dec
movsl
cltd
or
jl
mov
aad
repz
inc
andb
ror
inc
sahf
mov
popf
fldt
adc
movsl
imul
dec
adc
jle
or
dec
leave
pop
or
icebp
in
xchg
jg
or
lahf
mov
rol
push
or
cltd
xchg
nop
mov
inc
cmp
or
sbb
les
fstpt
lcall
mov
adc
aas
xchg
fadd
stos
add
inc
jae
hlt
inc
pop
dec
mov
xchg
popa
cwtl
lretw
sbb
ljmp
lcall
mov
xor
mov
notl
fs
xchg
xor
shll
fldcw
lret
out
dec
test
mov
mov
aam
fs
fs
and
roll
je
arpl
push
addb
xchg
add
popa
dec
dec
fcompl
pop
lahf
xchg
or
test
popa
mov
das
enter
pop
les
push
push
push
lret
fidivrl
push
xchg
mov
and
sahf
popa
insl
jno
arpl
jge
aad
xchg
aas
mov
faddp
push
daa
dec
rcr
loop
ljmp
inc
movsb
mov
jge
and
jg
jecxz
push
push
mov
mov
and
mov
insl
fmul
mov
imulb
ret
jae
sub
cmpsb
jmp
cwtl
add
aas
lret
inc
sbb
jns
mov
jno
mov
nop
insb
movsl
sbb
imul
nop
push
ss
nop
inc
testl
ret
xchg
xor
movsb
scas
out
or
flds
xchg
rcrb
xchg
xchg
ret
or
mov
xchg
or
xor
in
jg
and
gs
dec
mov
mov
and
pop
dec
xchg
pusha
mov
int
push
mov
pusha
into
lret
in
mov
lcall
inc
out
rclb
xchg
jae
dec
rolb
lods
xchg
or
or
add
aas
adc
push
outsl
mov
and
jno
nop
dec
fcomps
sub
cmc
inc
sbb
dec
add
shll
mov
dec
push
xchg
mov
cld
lock
adc
mov
jge
mov
outsb
or
ss
push
mov
lcall
inc
mov
xor
ret
push
jg
dec
addr16
test
loopne
pop
pop
and
mov
call
lods
or
pop
daa
jmp
into
sbb
xchg
shl
xchg
shrl
xchg
dec
jb
jmp
out
mov
les
or
int3
sbb
mov
es
ret
cmpsl
add
add
lock
icebp
sub
aaa
ret
xor
push
lret
mov
imul
es
mov
mov
rolb
shll
ret
inc
mov
test
jmp
test
ret
push
push
loope
addr16
sbb
scas
fcoms
or
ljmp
cmp
sub
push
inc
push
sahf
xchg
and
dec
cmpb
aad
sub
mov
repz
ret
xchg
xor
in
test
hlt
sti
xor
dec
sahf
fiaddl
cmc
inc
or
and
xchg
cmc
xchg
add
ds
test
cli
cli
dec
insb
push
jnp
movsb
mov
ret
sbb
push
mov
call
mov
insl
inc
adc
call
dec
lcall
fmull
