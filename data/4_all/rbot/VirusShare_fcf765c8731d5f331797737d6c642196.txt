pushf
jo
adc
lock
lret
aas
jl
lock
ja
arpl
inc
sbb
push
sbb
lret
incl
adc
dec
hlt
outsl
mov
or
outsb
cmc
inc
cld
test
das
inc
xor
aas
mov
test
int3
out
adc
and
or
cmpsb
jge
jl
cli
mov
lods
or
xor
lock
js
add
ss
out
movsb
hlt
loopne
inc
push
sbbb
in
in
or
xchg
test
push
imul
test
lods
int3
dec
mov
cmp
sub
mov
stos
mov
cmp
shrb
sbb
repnz
push
scas
nop
imul
out
jle
push
push
jle
in
stc
jge
add
adc
ret
add
cli
ss
push
daa
xchg
testl
jp
iret
insl
push
nop
xor
movsl
jmp
hlt
sahf
jbe
insl
mov
mov
fnstcw
call
inc
test
sub
jns
lods
dec
idiv
xchg
jmp
int
int
fistl
ret
orl
jmp
mov
or
in
addr16
in
jno
sti
jmp
and
adc
ret
cwtl
es
push
jp
mov
or
cltd
lods
and
jb
int
hlt
outsb
jmp
cs
sub
adc
cmp
lods
xor
test
enter
adc
jo
fcomps
clc
in
push
cli
iret
inc
jnp
aam
adc
loopne
daa
insl
mov
fsubrs
mov
shl
inc
add
xor
arpl
les
or
inc
fs
mov
cmp
and
mov
sub
push
jb
bound
mov
and
dec
mov
lock
dec
in
inc
outsl
mov
add
stos
push
push
pop
adc
loop
xor
mov
sub
out
or
dec
stos
mov
cli
sub
iret
mov
add
add
stos
outsb
push
jae
add
repz
vmread
lock
je
sub
rorl
inc
lret
xchg
aad
sub
cwtl
test
sub
sti
pop
das
jo
adc
fdiv
cli
pop
test
popa
pop
jo
adc
push
adc
ds
test
xorb
adc
rcrl
lods
das
jle
jnp
les
pop
push
cmc
cli
pushf
mov
loopne
cmp
pop
mov
mov
in
ljmp
sbb
mov
sti
outsl
pop
sbb
cmpsl
imul
and
and
dec
enter
ret
call
insb
mov
movsb
lea
xor
sbb
and
fbstp
pop
inc
xor
and
gs
dec
dec
add
imul
mov
or
scas
sbb
mov
aam
mov
push
repz
mov
mov
inc
push
jmp
jb
jl
sti
push
rolb
fs
cmpsl
test
leave
cmc
cli
pop
or
cmc
je
dec
cmp
loopne
mov
add
leave
dec
inc
mov
sbb
sbb
leave
ds
lahf
loopne
mov
jle
and
inc
jns
push
sbb
jp
cmp
pop
fisubs
xor
lea
jl
mov
sbb
jp
lahf
ljmp
psubb
out
aam
hlt
int3
xlat
jmp
ret
daa
sbb
inc
jl
and
in
ficomps
fldcw
imul
jl
pop
mov
rcll
fldcw
sub
mov
push
repnz
cli
lcall
popa
mov
repz
decl
jl,pt
mov
push
push
sbb
lods
pop
sbb
aam
cltd
stc
and
push
nop
nop
jmp
lret
aad
mov
inc
jne
jle
mov
movl
cwtl
jb
je
dec
addr16
dec
mov
xlat
push
inc
sldt
test
inc
cmp
sbb
inc
push
cmp
mov
sub
xchg
sbb
pop
mov
mov
int
jp,pn
idivl
jno
hlt
test
push
push
cmp
lds
pop
dec
std
sar
push
dec
fdivrs
fcmovu
mov
sub
icebp
mov
sub
mov
pop
pop
fildl
movsl
add
mov
dec
subps
fcomps
lahf
scas
popa
mov
xchg
mov
fs
dec
dec
push
pop
outsb
xchg
mov
les
inc
mov
jnp
inc
leave
pop
sbb
scas
sti
add
dec
fcmovb
or
push
sbb
xor
push
jle
adc
pop
pop
in
popf
push
lods
faddl
adc
fsubs
orb
es
jmp
outsb
mulb
and
mov
mov
push
fucomp
push
add
lea
dec
dec
in
inc
sub
popf
cmp
dec
pop
xchg
push
idivb
sub
sbb
mov
xchg
imul
aam
pop
xor
imul
mov
das
in
je
pop
js
fbld
nop
dec
stc
inc
or
sub
push
adc
cs
sub
cltd
inc
sbbl
mov
test
add
sub
push
test
ficompl
lock
dec
fstps
jl
jmp
test
testb
cli
xor
dec
inc
imul
mov
sbb
xor
lods
out
daa
jmp
leave
xchg
inc
mov
sub
idivb
dec
add
sbb
mov
sbb
shrl
sahf
repz
popf
xchg
xor
inc
ljmp
shll
push
filds
aas
scas
rorl
xor
inc
sbb
in
pop
and
out
fdivrl
mov
inc
pushf
loopne
out
aam
dec
xchg
lret
cld
dec
pop
mov
movsb
std
ret
loope
sbb
loopne
out
xchg
adc
pop
dec
aas
aad
push
or
mov
add
hlt
xchg
sti
jo
aam
mov
outsb
pop
lret
flds
ljmp
cmp
add
adc
test
adc
nop
lcall
shll
push
mov
and
cmp
inc
les
aas
dec
or
data16
shl
xor
add
call
mov
test
sbb
loopne
xor
cs
mov
aas
sub
icebp
sub
push
dec
lods
test
fdivs
dec
es
fcmovnu
xor
push
arpl
jne
sub
and
mov
stos
lods
cmp
call
jp
fucomp
cmpsl
vmovss
adc
lcall
mov
das
dec
ljmp
cmp
mov
push
lret
xchg
push
sbb
scas
cmp
mov
push
pop
decl
or
push
push
pop
jge
call
imul
icebp
xor
inc
xor
stc
lret
inc
mov
insb
sbb
lcall
jnp
insl
pop
repnz
imul
into
loope
pop
and
and
xor
aad
dec
xchg
sub
mov
insb
pop
out
sti
out
sub
xor
jno
cmovl
aad
in
aam
jg
outsb
out
jmp
or
xor
mov
pop
inc
push
in
insb
jecxz
add
hlt
or
dec
cmpsb
je
addb
shl
mov
mov
mov
xor
jp
mov
push
shrl
mov
sahf
sbb
jle
out
xchg
sbb
mov
pop
shlb
pusha
mov
les
cmp
loop
cmp
add
pop
call
subl
pop
inc
rorl
add
jns
mov
jge
arpl
andl
jno
js
dec
shll
leave
push
push
call
add
ja
mov
and
push
nop
lods
sahf
fdivl
mov
mov
lcall
stos
das
cmp
jl
popa
shll
mov
decl
lret
aad
sub
bound
lea
fucomip
orb
and
add
adc
fs
jo
pop
sbb
sbb
dec
lds
icebp
int
dec
rorl
data16
loope
add
pop
daa
dec
add
scas
jecxz
inc
mov
mov
add
outsl
scas
xlat
scas
out
inc
push
mov
popa
cmp
ret
sbb
test
jmp
inc
aam
dec
xchg
mov
cmp
mov
cmpsl
jbe
ficomps
hlt
inc
stos
aaa
rorl
push
mov
fcoml
shr
addb
mov
sahf
push
jle
jns
es
dec
push
rorl
dec
jmp
push
sub
xor
and
lock
cmp
fucom
sub
adc
xchg
mov
data16
lret
ret
mov
xlat
mov
fisubs
arpl
pushf
sbb
test
or
les
mov
imul
scas
pushl
insb
mov
insl
inc
imul
lahf
xchg
movsl
imul
scas
or
sbb
fiaddl
lea
xchg
in
divl
cld
add
icebp
and
mov
pushf
xlat
decl
hlt
ficomps
sbb
insb
stc
mov
or
je
mul
pop
xchg
mov
repnz
lcall
ret
sbb
rorl
pop
stc
in
lods
cs
test
push
cmp
mov
std
jp
fsubl
sahf
fucomi
nop
sbb
inc
movsb
sub
xchg
dec
jnp
roll
cmp
lds
mov
and
lods
push
or
aad
push
xchg
sub
mov
cmp
cwtl
ljmp
inc
enter
mov
adc
sbb
fsub
push
xlat
fnsave
dec
jecxz
push
icebp
in
call
push
daa
mov
arpl
jge
pushf
adcl
inc
movsb
xor
mov
jl
test
and
push
imul
inc
dec
push
cld
aam
jmp
ds
jl,pt
inc
jo
mov
dec
jle
sti
jl
stc
mov
and
aas
daa
fs
testb
mov
sbb
inc
mov
push
bound
jmp
fs
dec
adc
jp
push
push
iret
xchg
test
push
jmp
clc
lds
lods
lret
fldenv
movsb
or
pop
push
incb
jecxz
roll
leave
xchg
push
repz
ret
iret
fstpt
nop
stos
mov
arpl
test
dec
jle
outsl
in
and
inc
mov
jmp
leave
loop
inc
fsubl
dec
jne
cli
fstps
mov
fisubrl
mov
mov
je
cmp
cmp
jecxz
xchg
enter
std
mov
jg
cli
call
lahf
aas
or
sub
push
push
imul
mov
adc
jo
into
mov
fnstsw
jne
adc
cmp
xchg
sub
and
fstps
mov
cmp
xchg
sub
push
int3
sbb
outsl
mov
fcom
push
xlat
sub
xor
fs
iret
sub
ret
adc
mov
subl
insl
outsl
adc
and
inc
in
ljmp
jnp
jg
push
xchg
sbb
lods
lods
loopne
xchg
mov
add
repnz
mov
mov
lock
mov
push
fs
dec
cs
or
mov
pop
in
mov
inc
jae
jo
pop
dec
loopne
xor
js
roll
addb
repz
cwtl
outsb
mov
std
outsl
mov
fcmovu
daa
inc
outsb
ljmp
push
dec
les
aad
jns,pt
mov
fcomps
push
push
jecxz
out
adc
cli
mov
cwtl
lods
jmp
outsb
shlb
iret
push
ja
mov
imul
cmpl
xor
xor
iret
adc
prefetcht1
mov
mov
add
fisttpll
aam
js
inc
xchg
hlt
fcomps
sar
jmp
mov
mov
in
leave
out
stos
lea
nop
inc
xor
mov
or
jb
dec
xchg
xor
clc
insl
mov
mov
inc
rcrb
xchg
jno
loope
jmp
sarl
pushf
xor
scas
lock
inc
inc
enter
pop
imul
pusha
adc
pop
mov
mov
cmpsb
jnp
xor
mov
bnd
arpl
test
int3
mull
cmp
add
std
int3
pop
and
cmpsb
sub
dec
lods
jns
inc
or
cltd
sbb
inc
jmp
mov
push
sub
das
add
in
je
inc
fcompl
xchg
xchg
push
out
ds
stos
xchg
scas
cmc
or
in
fstpt
icebp
and
stos
sbb
dec
roll
fcmovbe
rcll
int3
out
mov
add
adc
sub
inc
and
pop
sbbb
mov
sbb
cmp
insb
mov
or
js
mov
inc
mov
jmp
jo
sub
inc
insb
lock
push
push
loop
imul
jae
push
repz
jp
cmp
mov
or
ja
loop
cltd
shrb
xchg
shl
mov
xchg
in
push
lods
into
or
jo
lds
cld
cli
sbb
popa
pop
fs
xor
xchg
xchg
xor
xor
testb
adc
mov
pop
dec
xlat
enter
stos
test
add
and
mov
and
out
jbe
or
push
test
mov
daa
sub
adc
pop
fimull
dec
bound
inc
mov
cli
dec
adc
push
mov
and
insb
rcr
mov
lock
xchg
xor
sub
into
and
dec
insb
lods
cmp
pop
movsl
push
clc
les
test
sbb
xor
sub
jmp
jae
sbb
push
fsubl
dec
or
fadds
cwtl
test
sbb
mov
ss
loopne
shr
roll
mov
mov
xchg
push
stos
cld
hlt
fimull
ficoms
out
jl
adc
rcrl
or
sti
cmpsb
mov
out
fdivrp
data16
jg
xor
test
and
ljmp
xor
call
pop
out
xchg
push
fisubs
jb
call
and
test
dec
pop
ss
and
mov
or
inc
add
in
iret
adc
and
lods
fnstenv
andl
mov
mov
sub
inc
jmp
jge
sbb
and
mov
ret
test
dec
addb
fsub
lahf
loopne
lahf
push
pop
repnz
mov
loope
cwtl
hlt
ljmp
int
out
lcall
outsl
cmp
cwtl
ffree
fisttpll
dec
add
sahf
lss
cs
adc
xor
cld
xor
lcall
je
cltd
rcll
pop
push
ret
mov
pusha
xchg
push
daa
scas
mov
dec
lock
lods
int
dec
pop
sub
or
movsl
dec
add
jno
cwtl
xchg
dec
lcall
add
test
cmp
mov
jecxz
fldt
push
fdivrs
lret
xchg
add
lcall
mov
gs
mov
and
nop
movsl
inc
cmp
push
clc
mov
mov
insl
mov
pop
add
aam
sub
int
and
fnstenv
jecxz
jb
jle
push
das
pop
mov
mov
std
ds
mov
mov
jnp
rcr
dec
fstpt
loop
cmp
mov
js
jp
sub
jb
pop
lods
cmpsb
mov
push
lock
cmp
jp
push
scas
in
xor
mov
sbb
je
jl
mul
mov
lcall
mov
cmp
ret
mov
into
in
cmp
pop
stos
pushf
fildll
jnp
rcrb
add
inc
add
fucomip
divl
xchg
jne
idivb
aaa
shll
lea
add
cmpsb
lcall
shll
push
jae
leave
imul
and
fimuls
or
push
enter
addb
jmp
into
cmp
outsl
cmp
ds
imul
fidivrs
jnp
jne
dec
sbb
jg
mov
or
rcrb
cmp
xchg
mov
repz
dec
jb
mov
cmp
std
das
cltd
add
out
adc
mov
and
jmp
xchg
sarl
rorl
aas
or
push
aas
jecxz
mov
pop
scas
addr16
in
cmp
mov
imul
dec
cmpb
int
xchg
cmpsl
jns
add
xor
inc
aad
pop
mov
sbb
rolb
call
pop
inc
or
fstps
push
rcll
cmpsl
mov
add
sub
fwait
dec
xchg
repz
inc
xchg
icebp
sub
mov
xchg
xchg
aam
push
jmp
out
or
into
xchg
pop
inc
mov
xchg
mov
daa
adc
xor
sbb
pcmpgtb
sub
xchg
push
adc
jo
xor
test
sub
bnd
add
pusha
mov
jne
in
aas
lcall
in
enter
sub
dec
sub
rcll
inc
sbb
aas
cmpsl
lds
in
enter
stos
int3
jbe
cmp
xchg
outsl
call
outsb
cmpsl
cmpsb
mov
ds
jmp
pop
sbb
dec
mov
sub
push
or
out
scas
aas
stc
orl
cld
xchg
pop
cmp
mov
or
and
cmp
icebp
xor
mov
in
dec
pop
stos
imul
inc
test
xor
scas
cmp
pop
dec
scas
pushf
sub
cwtl
inc
mov
mov
cli
lea
sbb
pop
add
mov
mov
mov
aam
nop
mov
push
and
push
adc
incl
fsubrs
in
mov
imul
add
ds
sbb
dec
inc
movsb
rolb
and
stos
pop
jg
movsb
lods
pop
pop
lds
ja
aad
or
adc
push
push
decl
in
cmp
out
scas
sbb
mov
lods
mov
or
or
loope
inc
sub
fisttps
sub
into
outsl
sbb
lret
imul
jmp
jne
loop
jl
loopne
imul
inc
popf
push
push
lahf
or
dec
or
outsl
pop
les
and
adc
inc
xor
out
and
aad
ja
xor
or
fsubrp
or
xchg
add
cmpsl
fxch
outsl
xor
xorb
inc
and
pop
push
pop
ficomps
add
jge
and
add
sti
loop
mov
outsb
sub
mov
or
test
cmpsb
leave
out
adc
dec
adc
xchg
bound
adc
pop
jno
stos
fdiv
mov
js
push
pop
mov
pop
pop
mov
push
cmp
pop
rolb
inc
bound
scas
cli
xor
loope
pop
lock
js
and
sub
stc
jle
inc
pushf
icebp
mov
jne
sbb
add
scas
inc
dec
jb
inc
int
int
ret
adc
negb
pop
insl
or
fs
stc
hlt
or
sub
mov
push
in
sub
mov
insb
dec
pop
xor
xchg
hlt
sub
fldenv
mov
andb
pushf
dec
outsb
xchg
ss
mov
shr
cmp
popa
pusha
cltd
push
outsb
add
in
fmull
popl
rcr
mull
push
dec
mov
add
fiadds
out
pop
fisttps
inc
std
sub
jo
cld
nop
jno
pop
call
cmp
mov
cmp
adc
ficoml
xchg
movsb
jmp
outsb
xchg
pop
sub
jns
fimull
int
pop
dec
leave
mov
int3
cmp
test
outsl
mov
pop
mov
add
jg
dec
shlb
hlt
jl
and
dec
mov
sub
inc
inc
add
or
cltd
lahf
cs
mov
jbe
shll
jge
cmp
cmp
loop
call
shrl
pushf
lods
jge
shll
or
lahf
dec
in
fstpl
dec
pop
xchg
in
cli
mov
jno
mov
add
aad
adc
push
lock
adc
fsubrl
cmp
pop
icebp
rclb
int
dec
inc
xchg
dec
nop
xchg
adc
or
sbb
loopne
jae
jl
jo
mov
ljmp
rolb
jle
xchg
insl
dec
dec
ficoms
int3
stos
outsl
fs
ja
cld
inc
fwait
lcall
outsb
push
jb
ret
jg
pop
adc
or
arpl
push
rcr
add
jge
loop
aas
pusha
or
jl
stos
insl
push
push
ljmp
xor
mov
iret
mov
stos
lods
jns
push
test
or
shrb
out
push
sbb
inc
sbb
xchg
gs
inc
insl
in
fsubrs
ja
mov
adc
xchg
mov
push
mov
fbstp
je
orl
ret
into
inc
rcrl
movsl
mov
fistpll
aad
pushf
sub
dec
sar
xchg
das
fstps
hlt
jno
mov
scas
insb
cmp
xor
add
push
mov
mov
or
std
inc
dec
jne
stos
mov
push
shlb
adc
outsl
and
and
mov
xchg
aad
sti
sarb
repnz
sahf
in
stos
sbb
fs
xor
cmp
pusha
hlt
movsb
push
dec
subb
cmp
and
std
inc
scas
ret
jnp
mov
xchg
roll
mov
cld
vcvttpd2dqx
inc
sbb
test
pop
xchg
mov
dec
scas
lret
cmp
ffree
test
add
mov
or
mov
mov
jb
mov
clc
inc
stos
shll
or
je
pop
xchg
pusha
in
push
xchg
jl
in
add
popf
ljmp
enter
movsl
adc
mov
loope
idivl
push
fdivr
rcrl
jnp
sub
cmc
fwait
in
mov
rcll
lcall
lods
ljmp
mov
push
inc
lret
loopne
xchg
and
jne
push
sub
pop
sbb
shll
in
sub
cmp
push
jae
jmp
sub
inc
push
pop
push
int3
or
xor
add
out
mov
ds
mov
mov
pop
cmc
insl
push
cmp
or
dec
mov
xchg
in
push
push
or
mov
adc
cmp
gs
nop
imul
adc
fiaddl
repz
cmp
or
pop
xchg
inc
mov
mov
jmp
mov
dec
cmp
sti
mov
lods
movsb
loope
push
ja
inc
inc
std
ja
xor
mov
int3
gs
movb
mov
sbb
pop
xchg
pop
add
out
cmp
pop
and
call
sbbb
dec
mov
rcrl
mov
cltd
roll
push
mov
push
push
jl
ljmp
pop
xor
aas
stos
sbb
js
inc
mov
cli
outsb
cli
and
cwtl
int
inc
dec
add
scas
add
add
mov
mov
stc
into
pop
jno
into
pop
inc
fbld
push
test
dec
inc
pushf
loope
out
pop
in
fwait
pusha
mov
fistpl
into
add
call
addr16
xchg
pop
jmp
jae
shlw
ret
nop
jecxz
jecxz
jb
js
inc
insl
ret
inc
or
sti
adc
and
xchg
jne
pop
out
cbtw
stos
jae
push
jne
xchg
or
mov
cmp
or
inc
mov
pop
mov
or
mov
pop
add
in
pop
loop
cmp
fsubs
scas
int3
dec
jno
int
cs
inc
out
inc
insl
mov
jmp
in
xchg
fstp
jno
mov
mov
push
frstor
push
push
sahf
cmp
iret
or
pop
fwait
movsb
mov
hlt
outsl
bound
ficomps
ljmp
mov
pop
mov
fdivrs
aas
scas
cltd
and
cmp
jl
dec
sti
fiadds
fists
add
scas
aas
add
or
push
dec
mov
and
or
in
shl
lcall
jge
sti
ficoml
push
dec
jp
rcr
add
inc
sub
sub
pop
nop
pop
daa
sub
call
mov
mov
outsb
icebp
sub
push
mov
jmp
dec
aaa
cmp
negb
mov
cmp
mov
pop
sub
xor
jae
and
out
mov
or
xor
xchg
aad
filds
sbb
jle
adc
mov
jbe
adc
je
ja
loope
adc
jne
jb
shll
addb
int
shrb
push
cmp
pop
cmpsb
pop
cmp
loop
lea
fimuls
into
lds
repz
nop
xorl
xchg
mov
fisubrl
push
lock
jno
arpl
movsl
or
xlat
clc
in
test
or
insb
lret
loope
in
stos
cltd
out
and
stos
cwtl
negb
inc
inc
dec
adc
mov
aas
cmpsb
push
pop
inc
cmp
xchg
in
xchg
test
pop
fisubs
aaa
inc
stc
cmp
popa
je
test
in
add
cmp
inc
jmp
and
sbb
mov
clc
mov
mov
incb
mov
out
ljmp
enter
pop
loopne
insb
adc
jp
cmpb
pop
add
repnz
jae,pt
cmc
sbb
icebp
mov
shr
subl
sub
add
add
jo
in
shl
inc
icebp
cmc
mov
lret
push
jbe
push
pop
inc
and
gs
ljmp
inc
into
in
mov
mov
and
xor
mov
cld
inc
call
cld
aas
pop
sbb
or
mov
push
js
mov
sbb
fs
inc
aas
sbb
mov
aaa
jne
lret
push
jmp
and
outsb
repnz
mov
arpl
lret
repnz
pop
inc
clc
mov
adc
subl
cmp
arpl
aad
dec
cmp
xchg
gs
mov
cmp
xchg
divl
sub
nop
inc
adc
and
jmp
and
mov
pop
mov
or
adc
jns
mov
mov
mov
lock
mov
loop
inc
inc
loopne
or
daa
xchg
push
out
jb
sub
out
cmpl
jmp
clc
inc
loope
leave
out
in
les
int3
xchg
aas
mov
mov
cltd
xchg
dec
dec
and
fwait
shr
xor
push
pushf
rcrb
call
push
push
je
mov
sahf
adc
int3
or
out
jmp
cld
jl
fcomi
in
push
shr
movsb
stos
mov
sub
push
andnps
insl
shlb
subb
jb
cmpsl
push
int
cs
hlt
jle
ja
xorb
or
fldcw
cs
xor
mov
xchg
bound
pop
test
jo
jge
cmp
mov
aaa
iretw
jge
sub
cmp
cld
xchg
dec
xchg
mov
sbbl
pop
movsl
xchg
xchg
rorb
clc
loope
mov
loopne
inc
clc
or
cmp
test
cwtl
jecxz
in
fldt
pop
push
repz
xchg
arpl
dec
add
cmp
cmp
arpl
adc
repnz
shll
nop
insl
clc
shrb
sub
pop
sarb
sub
movsl
pop
sbb
test
adc
lahf
inc
cld
pusha
cwtl
lods
jo
xchg
dec
pop
paddsb
aaa
enter
fsts
adc
addr16
cmc
xchg
out
xor
xchg
xchg
lods
gs
cwtl
ljmp
xor
rcrl
mov
xchg
aas
insl
hlt
fnstcw
jns
popa
out
mov
ret
lret
jmp
push
cmp
mov
test
jle
nop
or
and
dec
jae
fcomps
lret
cmp
or
xor
test
popa
sbb
test
imul
into
ret
jmp
cmp
cs
jmp
call
or
icebp
arpl
int
sbb
pop
cmp
in
sbb
pop
mov
sub
rcll
jmp
xor
pop
shl
lret
and
xlat
in
xorb
and
add
mov
dec
icebp
xchg
sbb
stos
add
and
push
int3
and
mov
and
jmp
vucomisd
or
sbb
cmp
adc
xchg
into
call
lods
gs
add
mov
or
loopne
repz
sbb
push
mov
dec
movsl
frstor
adc
push
lret
out
mov
and
sti
scas
scas
inc
xchg
ret
bound
push
shl
push
push
movsb
or
clc
sub
jnp
lods
dec
sbb
jg
int3
sbb
aas
dec
and
inc
lcall
push
sbb
jb
cld
inc
mov
xchg
adc
adc
mov
out
gs
lock
rep
jae
jmp
and
sahf
pop
imul
scas
cwtl
sub
xor
out
aaa
cwtl
inc
jmp
js
push
out
push
ret
ja
into
push
push
mov
mov
cmp
js
imul
insb
pop
call
in
mov
jge
inc
call
sbb
inc
maxps
les
in
cld
in
pop
outsb
mov
mov
popf
loopne
push
dec
idivb
add
out
js
or
add
insb
sub
jecxz
jmp
ret
int3
aam
testb
call
pop
int3
and
sbb
lock
fcompl
mov
sbb
xchg
and
mov
icebp
mov
mov
cmc
test
xor
add
jl
push
sbb
sub
lods
fidivs
add
jge
push
or
pushf
pusha
push
pop
cmp
sub
or
pop
dec
jno
or
fdivrp
test
jle
pop
jmp
xchg
ja
jge
add
ja
sbb
add
add
mov
movsb
lahf
cld
dec
push
ja
imul
stos
insl
ja
pop
jnp
ljmp
repnz
push
xor
fcmovnu
shll
lret
push
aas
outsl
std
xchg
mov
cmp
test
adc
mov
xchg
mov
inc
jmp
sbb
cwtl
shl
in
in
pop
les
mov
sbb
inc
js
std
jp
inc
out
pop
movsl
xchg
xlat
in
mov
adc
mov
fstps
xor
test
jmp
mov
lods
xor
cmc
testb
mov
sub
add
pusha
cld
jmp
jp
jge
push
mov
push
xlat
in
pop
xor
test
in
and
or
mov
jo
addr16
popa
pop
pop
or
stos
sub
mov
test
int3
jl
push
inc
inc
scas
int3
or
test
lcall
dec
gs
and
dec
pop
fwait
and
and
push
insb
out
inc
mov
sub
mov
push
clc
pop
dec
test
imul
das
ja
inc
or
xchg
inc
xor
fnsave
js
add
in
jge
jno
pop
scas
sbb
push
test
mov
xchg
add
mov
xchg
sti
dec
pusha
xchg
lret
scas
lret
fidivrl
enter
mov
push
cld
clc
xchg
and
mov
lret
mov
loope
popf
loope
rolb
leave
xchg
adc
test
pop
lods
loop
loopne
dec
sbb
faddp
lods
push
inc
scas
addb
mov
dec
bound
outsb
mov
jno
mull
add
inc
je
mov
xchg
arpl
mov
cld
enter
dec
jns
push
icebp
lcall
or
in
jmp
aad
xlat
jecxz
cwtl
push
jb
add
xor
mov
mov
xchg
shl
cmp
inc
xchg
rolb
in
and
lret
rcl
pop
or
das
pop
pop
test
mov
sbb
stc
test
aaa
or
in
insb
test
outsl
inc
fnstcw
shr
es
loop
decl
arpl
cli
mov
aad
mov
mov
xor
sahf
js
dec
clc
jge
cmp
dec
shrl
shr
je
xor
sbb
dec
in
sbb
and
mov
imul
pop
sbb
and
jae
push
xor
push
jmp
pop
repz
call
test
lret
dec
cltd
cmpb
outsb
pop
mov
dec
dec
sahf
add
sbb
mov
fldcw
ret
int3
xor
mov
outsb
adc
add
mov
int
pusha
and
pusha
dec
shl
cmp
cld
mov
inc
jno
or
and
into
es
and
daa
sti
push
pop
imul
mov
mov
enter
sbb
pop
mov
clc
mov
lods
aam
jns
add
in
xor
sub
and
cltd
and
call
in
sar
mov
push
xor
and
adc
pop
or
test
add
cld
push
insb
pop
mov
mov
nop
lret
enter
and
aaa
pop
je
xor
les
or
add
pop
pop
stos
out
push
shrb
jae
sub
ficoms
std
push
dec
add
inc
xchg
add
or
lods
mov
push
nop
and
lcall
lods
xchg
sti
repnz
and
or
pop
cld
cs
aas
test
jns
mov
mov
or
dec
dec
mulb
stos
sub
and
rol
push
in
stos
push
mov
mov
lea
call
and
xchg
sbb
lcall
xchg
mov
xchg
and
stos
cltd
popa
pop
int3
enter
in
aaa
dec
outsl
xor
mov
xor
jle
and
ja
repz
cli
js
mov
shll
xor
scas
and
scas
mov
enter
daa
int3
mov
mov
push
sahf
fistpl
jbe
clc
sbb
and
out
and
add
stos
shrb
lret
loope
stos
aam
aaa
jmp
in
cmp
scas
cmc
jae
sub
jg
jmp
sub
pop
mov
or
push
test
mov
mov
sbb
xchg
dec
jo
stos
hlt
adc
ds
sub
scas
jo
cmpsl
push
mov
inc
sub
fcomps
push
mov
cltd
xor
in
or
test
aad
jne
movsb
cwtl
sub
fsts
in
inc
out
sbb
outsb
mov
inc
dec
sub
and
push
mov
dec
pop
and
jb
and
stos
lcall
pop
dec
or
loop
cs
and
ljmp
push
cmp
ljmp
mov
addr16
pop
inc
xor
cli
inc
inc
sub
mov
jnp
addr16
aam
fidivs
dec
xor
add
leave
pop
or
pusha
jp
imul
push
mov
movl
test
cmp
mov
pop
insl
idivb
inc
aam
xchg
pop
sbb
xor
aas
pop
xchg
imul
push
andb
adc
movsl
xchg
movsb
loope
jmp
test
int3
cltd
fcompl
mov
lahf
test
mov
stos
cmp
adc
sahf
or
out
lcall
jbe
push
les
jne
fwait
sub
jo
push
mov
inc
xchg
loop
mov
push
inc
movsl
jbe
push
repz
inc
xor
xchg
inc
mov
jo
mov
loope
cmp
jmp
push
jnp
in
push
lock
mov
fcomps
aaa
adc
int3
pushf
sub
into
fcmovu
xchg
aas
jno
int3
repnz
jecxz
jge
cld
iret
mov
in
dec
sti
es
enter
in
sub
outsl
fidivrs
mov
dec
stos
testb
test
push
aaa
lods
jp
in
jns
dec
ret
sub
mov
push
xor
mov
jae,pn
sti
and
stos
mov
sbb
jge
ja
push
and
mov
stos
and
lea
scas
jle
xchg
mov
add
add
enter
pop
cmp
in
mov
std
mov
sbb
pop
divl
mov
mov
dec
mov
gs
mov
ret
fwait
push
clc
pop
dec
and
jns
adc
sub
punpckhdq
cmp
or
mov
add
cli
gs
test
fs
test
sub
and
je
jle
je
jle
lods
dec
push
xchg
pop
push
out
cmp
in
insl
aaa
imul
aad
and
loope
aaa
test
cwtl
out
jnp
sub
dec
ficoms
int3
add
lret
aam
jl
or
mov
ss
flds
hlt
frstor
popa
adc
cs
cmpxchg
out
push
iret
mov
mov
cmpsl
pop
mov
xchg
jmp
and
out
mov
jl
jl
sub
cmp
push
jecxz
daa
mov
out
jl
xor
fidivl
gs
lret
mov
fsubrl
imul
cmp
or
or
leave
fisttpl
push
rcr
sub
call
popw
in
fiadds
dec
mov
add
and
xor
mov
rcll
mov
adc
or
mov
pusha
jnp
mov
enter
mov
xor
pop
imul
stos
pop
xchg
adc
jno
dec
std
rorl
pop
inc
rorb
and
mov
cli
dec
ljmp
inc
xlat
outsl
pop
sti
adc
jle
xchg
push
sbb
cmp
cmp
pusha
daa
fprem1
in
cltd
lods
pop
sbb
jbe
hlt
jne
mov
jo
loop
xchg
leave
and
cpuid
cmp
pusha
mov
add
shrb
jnp
xor
or
test
and
bnd
popa
mov
cmc
pop
mov
cmp
jbe
shrb
cmovle
cmp
je
add
call
or
cmp
sub
fldcw
or
lcall
fcmovnbe
jl
xor
dec
xchg
dec
pop
arpl
ljmp
call
in
pop
mov
jo
sbb
cmp
andl
inc
jge
and
andl
xor
mov
stos
icebp
pop
add
xor
sbb
or
push
mov
test
or
jb
lds
jle
sbb
call
add
pusha
push
push
cmc
fsubs
test
pusha
xor
lds
lds
mov
sub
xchg
rcrb
push
call
rorl
cli
int
or
call
mov
mov
fimull
dec
lret
psubsb
inc
in
popf
xor
inc
das
push
xor
mov
lcall
cmp
je
or
dec
cmpsb
sbb
cmp
pop
and
jo
or
loopne
ljmp
dec
test
outsl
fmuls
pop
mov
dec
push
cld
sbb
xlat
sbb
rcr
pop
hlt
stc
jl
jl
inc
mov
xor
ficompl
dec
dec
rcrb
clc
and
mov
inc
mov
inc
or
xchg
jnp
insl
cmp
and
mov
xchg
sub
les
ss
xor
std
out
mov
add
inc
das
jle
lea
cmc
pop
js
push
andb
daa
enter
dec
xor
out
movd
cmp
cmp
fabs
jl
rcrb
add
in
cmp
icebp
mov
scas
aas
test
in
and
fsubl
imul
popa
movsb
mov
dec
xchg
mov
test
jmp
dec
sbb
fldenv
sahf
shr
enter
pop
notb
xlat
dec
jge
pop
in
pushf
jge
mov
mov
or
movsb
push
or
popf
pop
sbb
aad
dec
mov
shl
dec
inc
jo
cmp
shrb
jbe
push
add
subl
lret
or
and
push
jp
xchg
sub
jge
cmc
call
fstl
ror
lods
insl
popa
imul
jb
cmp
je
call
fldt
xor
icebp
or
ja
mov
mov
lods
scas
popf
cwtl
out
pop
pop
mov
sbb
mov
dec
push
pop
and
push
dec
jae
mov
mov
xchg
test
push
mov
cmp
stos
sahf
jg
hlt
jl
cmp
in
adc
stc
and
inc
in
outsl
nop
lea
xor
std
vmaskmovdqu
loope
jb
shlb
movsl
jne
jecxz
jle
mov
jg
negb
lret
adc
and
mov
jl
cli
or
adc
mov
fidivl
aas
xchg
xchg
add
clc
in
shl
mov
sbb
jo
addb
or
push
sahf
sbb
sub
aad
pop
loope
cmc
inc
inc
cmpsb
inc
lock
insl
mov
lock
hlt
mov
cmp
hlt
pop
sbb
cmpsl
icebp
jecxz
pop
shrb
add
cld
push
inc
enter
dec
movsb
push
out
aas
mov
ror
push
fcomps
adc
js
in
jns
push
fucom
mov
jno
or
inc
mov
push
pop
in
push
cltd
aam
push
repz
push
push
jmp
outsl
ljmp
dec
aam
lds
addr16
jnp
pusha
orl
jge
subl
jp
jno
sbb
inc
xchg
rorl
or
dec
lods
jb
mov
movsl
hlt
or
movsw
ror
out
pushf
jg
das
call
loopne
andl
xchg
fucom
pop
pop
test
ds
popa
pusha
test
jg
mov
push
xchg
arpl
sar
xchg
test
pop
insl
pop
scas
rcrl
gs
loope
cmp
cltd
movsb
fwait
scas
adc
iret
sub
xorl
out
imul
mov
lret
jne
jne
mov
int3
aaa
mov
adc
xlat
lret
cmp
sub
mov
or
mov
in
stos
clc
cld
push
das
adc
jbe
adc
cmpl
inc
push
ret
sbb
sbb
pop
dec
aas
sbb
mov
popa
or
aad
sbb
mov
aas
pop
or
nop
add
popf
lods
repz
das
jecxz
sub
divb
sbb
dec
ret
push
pop
jl
stc
pop
out
scas
das
mov
data16
add
or
test
pop
outsl
pop
mov
cld
adc
cmpsl
add
inc
imul
mov
inc
shr
push
ficompl
jno
aad
hlt
lret
dec
mov
psubd
pop
push
dec
dec
sti
adc
sbb
sbb
mov
ds
or
jp
push
mov
stos
cs
iret
sub
ret
in
pushf
mov
cmp
addl
or
or
xchg
jo
lock
sbb
inc
cmp
int3
xlat
std
or
mov
mov
lcall
xchg
and
fimull
pop
lds
xlat
mov
jle
sbb
mov
sbb
dec
xor
call
daa
fistpll
jno
stc
xchg
cld
mov
cmp
cli
push
sub
mov
shlb
xor
dec
in
cmp
mov
mov
jne
imul
adc
pop
add
outsb
jne
movsb
push
pop
sub
lock
cmp
and
mov
jmp
js
jl
daa
ret
outsb
cld
inc
outsb
int3
pop
xchg
mov
dec
mov
pop
cmp
sbb
call
xchg
loopne
and
mov
adc
dec
pop
xchg
mov
adc
in
dec
push
or
lods
cmp
hlt
cmp
call
fmul
jns
stos
push
lds
pop
fwait
in
mov
inc
sub
hlt
adc
push
push
mov
xchg
jl
sbb
scas
sub
or
xchg
ljmp
mov
popf
ret
push
fcomps
jbe
lcall
and
xor
loope
clc
aaa
cmp
adc
mov
hlt
mov
fistl
push
sub
mov
sbb
cmpsl
and
lods
shl
cmp
sub
and
mov
dec
xchg
or
nopl
sbb
cltd
jo
rorl
ljmp
fmul
push
mov
in
and
mov
and
inc
inc
push
jg
push
mov
xchg
mov
mov
push
inc
std
pop
mov
add
sub
cmpsb
push
add
or
popa
xor
js
inc
mov
xor
jge
sub
clc
and
lret
test
xchg
mov
insl
sub
jno
cmp
dec
jmp
in
es
call
mov
fistpll
les
xor
or
cmp
mov
cmp
or
inc
popf
mov
bound
lahf
es
lret
sbb
mov
pusha
push
mov
cmp
and
std
add
mov
mov
mov
mov
xor
mov
cmp
mov
fwait
jp
and
xchg
ss
add
cs
pop
cmp
xchg
jmp
daa
sar
insl
sub
cld
ss
inc
jne
stc
sbb
shr
in
jns
out
xchg
mov
outsb
push
loop
jne
decl
inc
add
lds
test
adc
jne
aad
cmp
mov
test
idivl
mov
fildl
xor
sahf
stc
dec
adc
jae
cwtl
imul
lds
adc
hlt
and
mov
repz
mov
jne
mov
push
andb
cmp
or
or
cli
dec
xchg
leave
or
fstpl
imulb
push
mov
jb
clc
inc
out
scas
dec
jb
adc
and
mov
xchg
rclb
xor
jb
add
daa
mov
fmul
scas
pop
jnp
mov
or
or
std
insb
repnz
inc
push
lret
inc
int3
jp
mov
in
lea
enter
jg
test
fldenv
xchg
cmc
xor
rorl
push
loop
or
push
jbe
and
mov
jnp
in
mov
ja
test
mov
scas
mov
mov
clc
add
ret
scas
das
fldenv
xchg
add
mov
ds
sub
or
pushf
adc
sbb
mov
mov
jecxz
jecxz
filds
mov
xor
mov
jecxz
mov
int
mov
fisttps
je
cmp
lea
lret
or
in
dec
dec
jecxz
jb
loope
addr16
xchg
lret
push
dec
dec
add
xchg
ja
sti
int
cmp
xchg
aaa
mov
mov
add
hlt
jns
xor
lock
push
icebp
lret
xchg
je
xchg
stc
int
js
push
add
jmp
dec
mov
xchg
scas
ljmp
jecxz
push
mov
sar
dec
rorl
sbb
fucom
jge
loopne
dec
pop
mov
xchg
push
and
in
sub
lcall
sbb
pop
dec
xor
mov
sbb
mov
xchg
push
xor
sahf
lea
adc
pop
ror
dec
xlat
push
push
jae
movsl
js
cwtl
dec
fcmovu
fidivrs
mov
adc
popa
and
nop
xlat
mov
dec
lcall
aad
imul
add
push
fstl
stc
xchg
std
mov
inc
inc
jae
loop
in
xchg
stc
and
cld
inc
push
enter
hlt
cltd
sub
dec
mov
imul
repnz
mov
mov
out
jl
xchg
int
test
sbb
repz
out
xor
sub
inc
sahf
cmc
jl
lods
pop
lahf
jno
cld
es
add
popa
test
rcr
cmpsb
popf
cmp
mov
arpl
mov
mov
cmpsl
ja
stos
popa
mov
mov
int
pop
pop
mov
dec
ss
sbb
out
lods
cltd
jp
jo
jg
out
in
add
pop
nop
xor
sub
dec
daa
cmp
and
test
aam
inc
mov
and
insb
sahf
sti
mov
cmpsl
movsl
lcall
xor
cmp
je
mov
in
xor
sub
sbb
jl
mov
push
xchg
cmp
into
cmp
push
mov
in
hlt
push
out
sub
add
fsubrl
clc
mulb
mov
push
ljmp
dec
mov
imul
xchg
cltd
xorb
or
sub
mov
mov
xor
nop
jo
js
sbb
mov
push
ficompl
pop
cmp
lret
stc
push
pushf
into
inc
sub
loopne
cmp
fs
popf
enter
test
aam
jle
mov
mov
lcall
nop
mov
ficomps
inc
sbb
repnz
cmp
fstpt
xchg
mov
push
hlt
fdivl
pop
test
jge
std
mov
or
push
xchg
fsubrl
pop
sarb
fimull
mov
sub
paddusw
mov
dec
in
std
mov
push
lock
call
fistpl
cmp
sub
fst
ret
imul
xor
cmpsl
cmc
in
aaa
cld
sub
cli
mov
ds
xchg
outsl
insl
rcrl
and
in
out
inc
sub
jecxz
aas
icebp
and
mov
dec
sub
mov
xchg
xor
sbb
sbb
mov
and
xlat
adc
jnp
push
into
out
jne
popf
jnp
mov
imul
jmp
pop
pop
cmp
push
decb
inc
dec
out
inc
loope
mov
mov
loopne
sar
sub
scas
in
ja
leave
cli
test
insl
push
cmp
out
mov
cmpb
xor
mov
fsub
cmp
faddl
jmp
inc
push
inc
sub
ss
pushf
lods
sub
push
lock
lock
xor
jge
or
fadd
repnz
mov
aaa
je
mov
pusha
enter
or
push
pop
xlat
test
lods
fdivrl
mov
je
pop
test
mov
inc
push
in
sub
outsb
int
subl
mov
lret
mov
stc
push
in
mov
rcr
arpl
xor
imul
sbb
mov
pushf
shr
sbb
icebp
push
sbb
aam
jg
push
fucomip
pusha
mov
jno
sub
lret
sub
sub
xorl
in
inc
sbb
mov
test
mov
mov
mov
mov
shll
cmpsb
add
adc
mov
jbe
sub
xchg
lods
ja
push
sbb
mov
std
repnz
aas
or
test
pop
out
int3
aad
ficoms
xchg
stc
mov
jbe
sbb
sub
in
and
jmp
add
subl
mov
inc
sahf
into
addr16
push
pop
adc
and
movsl
jo
lock
and
add
mov
in
mov
add
mov
mov
add
sub
fnstsw
push
addl
add
test
or
xchg
pop
pusha
push
icebp
shlb
in
cmp
xchg
mov
js
sbb
xchg
lahf
cld
movsl
nop
ljmp
sbb
movsb
mov
sbb
test
shr
int
mov
sub
aas
dec
pop
ds
adc
dec
pop
insl
mov
test
sbb
gs
add
lock
push
add
loop
leave
aad
mov
cmp
in
xchg
add
adc
mov
push
not
xlat
adc
dec
push
jl
or
cmp
test
cmp
xchg
ljmp
mov
pusha
adc
jno,pt
mov
or
in
sbb
loope
std
mov
cld
int
jecxz
add
out
sub
mov
fwait
ret
call
test
jmp
xchg
loope
jno
xor
fs
jge
sub
jge
les
xor
pop
fistps
mov
jne
inc
sbb
add
test
or
pop
xor
idivl
push
lods
adc
add
adc
inc
inc
aam
ljmp
sub
lret
mov
xor
inc
xor
cmp
stos
push
js
lahf
lahf
sub
iret
cmp
lods
fs
pop
inc
aaa
cmpsb
adc
es
mov
aaa
dec
mov
xchg
lret
add
xor
or
xor
dec
aad
gs
cmpl
adc
mov
stos
int
cltd
mov
aad
pop
cld
inc
sub
jmp
push
sub
in
add
and
es
lods
jns
adc
daa
test
lods
adc
lret
add
push
push
aaa
addr16
cmp
lea
pop
jl
mov
jmp
or
pushf
push
in
sbb
jle
in
xchg
or
lea
inc
mov
pop
push
add
fistpl
pop
pop
sub
mov
test
add
xchg
jns
inc
pop
sti
cmpsb
int3
sub
inc
jnp
push
stos
jo
inc
lea
data16
mov
adc
cltd
mov
hlt
pop
mov
icebp
rcr
jo
aad
incl
xchg
cmpsl
xchg
rcrl
add
pop
dec
sbb
inc
adc
add
add
outsl
arpl
fucom
sbb
ret
add
mov
jg
test
aaa
or
jo
movsl
shl
insb
adc
jge
mov
and
sub
int3
gs
push
dec
shr
and
or
stc
mov
pop
stos
mov
cmc
push
sub
pop
mov
pop
jge
test
fs
add
push
mov
mov
jo
test
popl
test
lcall
lret
arpl
pop
aam
aaa
xchg
pop
ja
and
lods
push
or
sbb
jge
xchg
stos
mov
push
fnstcw
jo
xchg
outsl
stos
je
enter
dec
hlt
add
aam
pusha
jl
sbb
add
gs
or
mov
push
pop
test
in
pop
cmp
insl
cmp
jl
mov
stos
pop
test
outsb
jl
or
insl
enter
ret
fstl
jmp
xchg
inc
jb
cmpsl
xor
inc
cmp
sbb
pop
out
adc
xchg
cmpsb
sahf
lock
clc
or
dec
inc
pusha
repz
jae
mov
jns
push
movsl
std
mov
test
or
or
mov
jl
xor
xor
in
add
movsl
call
test
add
imul
cltd
push
loope
xchg
fdivrl
fidivrs
mov
dec
ds
test
dec
mov
test
mov
aad
and
push
mov
mov
mov
hlt
sub
mov
mov
jnp
mov
movsl
enter
inc
add
sub
mov
pop
jno
xchg
add
shrl
insb
push
mov
les
test
push
dec
rclb
push
dec
add
movsl
push
scas
mov
pop
outsl
mov
jnp
mov
mov
add
mov
js
inc
out
mov
or
pop
out
mov
sub
xchg
aas
stos
jg
pop
inc
jl
inc
fwait
popa
fs
sbb
sbb
and
jnp
push
nop
cmc
xor
jno
loopne
and
in
cmc
mov
push
push
es
jns
in
inc
xchg
and
or
je
adc
jb
lock
jno
jge
out
in
mov
popf
into
mov
ret
and
loopne
mov
add
aad
testb
shl
jnp
mov
mov
and
push
outsl
mov
pop
sub
outsb
fstpt
dec
stc
mov
sub
add
ret
pusha
decb
js
test
dec
or
xchg
push
ja
mov
lods
cmp
icebp
pop
call
mov
loope
sub
jnp
cld
jnp
mov
lret
adc
vmread
jno
jae
shl
inc
fcompl
pop
mov
lds
mov
aad
enter
sbb
into
mov
imul
outsb
push
std
mov
pop
and
inc
addr16
pop
and
or
mov
or
das
xor
xlat
aad
pop
mov
adc
adc
xchg
sarl
push
or
cwtl
aas
xor
fstpt
js
ja
sbb
in
rcr
xlat
pop
ficoms
cmp
ficompl
mov
adc
xchg
xchg
xlat
or
stos
mov
cmp
test
or
mov
stc
and
and
push
jl
seto
lea
cmp
push
cmp
pushf
add
rorl
insb
mov
xor
jl
and
mov
jmp
dec
ljmp
leave
jge
aas
gs
into
sbb
mov
cwtl
loope
cmpsl
adc
sbb
mov
sbb
push
pop
dec
xor
test
shll
adc
imul
and
scas
dec
push
add
xchg
inc
pop
jb
push
xchg
adc
mov
mov
es
test
inc
adc
add
and
add
into
lret
cmp
xor
je
xor
pop
push
or
scas
ret
xchg
inc
push
decb
add
outsb
lea
jg
icebp
sbb
aad
jmp
pop
sbb
fwait
xchg
cld
fs
push
das
stos
fidivrs
push
cmpsb
xchg
dec
xchg
insb
ret
loopne
adc
cli
sbbb
dec
ficomps
cwtl
jge
inc
in
and
xor
adc
in
leave
test
jno
mov
cli
int3
enter
lahf
insb
fcomps
inc
fsubl
test
mov
mov
je
or
sbb
ficoml
repnz
fistps
sar
out
aam
mov
jo
and
xor
xor
repnz
cld
test
add
push
les
fwait
xchg
mov
imul
shlb
push
push
mov
push
or
int
or
repnz
into
pushf
or
push
jno
push
pop
add
cli
fisubrs
adc
or
inc
loopne
call
mov
lock
dec
xchg
imulb
xchg
xchg
sub
mov
push
jecxz
in
jno
push
imul
call
jmp
adc
cmp
mov
jno
aas
daa
sub
mov
fcomp
popf
fnop
dec
push
pop
sub
pop
out
sbb
mov
cli
out
in
adc
mov
mov
leave
rcrb
inc
jne
jl
iret
sbb
out
lret
es
mov
outsb
mov
stc
mov
test
jp
jl
push
addr16
nop
stos
mov
pop
xchg
mov
nop
pinsrw
mov
and
mov
rclb
popa
popa
add
mov
incb
jne
inc
xchg
xor
pop
and
cmp
xor
call
test
mov
test
imul
pop
sub
mov
mov
fldl
mov
adc
cs
mov
jg
mov
xchg
mov
inc
test
pushf
gs
mov
cmp
cmp
bound
popa
pop
stc
sbb
push
stc
xor
dec
mov
call
cmp
sarl
inc
jbe
js
jge
inc
sub
out
sbb
add
xor
xor
adc
icebp
inc
jb
dec
aas
add
sub
out
jmp
fldl
sub
pop
mov
mov
inc
pop
repz
or
push
pop
out
cmpsb
rolb
call
mov
inc
js
and
dec
sub
out
daa
mov
subb
inc
inc
mov
adc
mov
adc
ds
stc
push
popa
js
and
call
adc
dec
push
ficoms
shrb
js
xor
inc
pop
mov
pop
mov
pop
dec
icebp
and
scas
cmpsb
lea
dec
stos
outsl
movsb
or
sub
mov
mov
lods
xor
pop
lods
rclb
xor
cli
outsl
mov
mov
cmp
mov
add
jl
push
loop,pn
sbb
fidivl
test
ret
nop
mov
outsl
fisttpl
jb
mov
shrb
mov
sub
int3
cli
ljmp
decl
adc
fadds
mov
xchg
xchg
dec
mov
and
aaa
xor
jg
fnstsw
loope
xor
dec
push
dec
test
gs
popa
inc
pop
popf
div
out
fstpl
ljmp
stos
test
js
in
xor
cmp
jecxz
xchg
lods
cmp
int3
aam
xchg
pop
imul
pop
faddl
cld
dec
negl
stc
xor
inc
jg
rorl
push
mov
outsl
jnp
push
rcl
pushf
sahf
add
pop
shll
jge
mov
mov
repnz
call
jmp
loop
loop
inc
cmp
sahf
call
pop
jns
jl
mov
and
fadd
call
jb
sbb
pop
ljmp
jge
cmpl
fcomp
vsubpd
add
outsl
fcmovnu
pushf
push
xchg
add
cwtl
add
inc
cwtl
cmp
ret
popa
inc
cmp
pushf
push
sbbb
push
sub
pop
pusha
loopne
inc
pop
cmpsl
outsb
adc
stos
xchg
jbe
pop
es
mov
out
jecxz
test
outsl
push
stos
arpl
xor
inc
add
cs
outsl
and
sub
stos
mov
out
pop
jne
mov
and
lock
mov
test
jmp
outsb
mov
xor
mov
scas
ret
push
mov
jge
jnp
mov
mov
leave
daa
pop
add
adc
xlat
xlat
mov
jmp
imul
lcall
push
leave
mov
jb
and
mov
jnp
in
call
sbb
cmp
xor
add
xchg
cmc
ja
or
jp
nop
or
xor
xor
inc
mov
icebp
les
pop
dec
js
testl
insb
mov
xchg
sar
xor
ljmp
mov
xchg
in
in
pop
dec
outsb
scas
jg
fs
lods
cld
outsl
push
sbb
stos
mov
fadds
test
mov
pop
cld
jbe
cwtl
cmpl
sbb
call
flds
cmc
inc
sub
cli
imul
ja
scas
enter
or
mov
cwtl
in
jo
mov
cwtl
ret
inc
lock
js
in
add
rcl
and
scas
sub
sub
or
mov
mov
scas
inc
inc
add
stos
add
dec
or
jno
hlt
je
mov
call
xor
rorb
sub
iret
dec
jp
ljmp
cmp
es
mov
push
loope
jno
lahf
popf
or
inc
imul
push
xlat
add
inc
enter
mov
ror
stos
and
add
fidivrs
xchg
flds
or
jns
and
pop
aam
cs
and
imul
fcom
mov
test
fsub
push
sbb
lods
das
xchg
int
out
gs
fildll
flds
jnp
aad
lret
adc
jns
push
push
jmp
outsl
push
inc
sbb
imul
mov
jmp
imul
push
lods
and
cmpb
mov
jo
dec
jmp
fsubr
pop
les
xor
cli
lret
pop
rclb
jbe
sub
or
fdiv
inc
rcrl
mov
or
and
jge
popa
lods
fnstenv
xor
call
loop
ret
add
int3
jmp
in
shl
sti
cs
or
clc
cltd
pcmpgtw
mov
lock
xor
int3
ficoml
insl
fs
sti
dec
push
inc
in
xchg
cmp
lret
xchg
loope
cld
push
les
lret
sbb
scas
repz
xor
or
call
sbbl
and
dec
test
add
inc
setb
cmp
sbb
sub
add
add
add
cli
cld
inc
pop
mov
mov
je
inc
scas
mul
adc
pop
jbe
adcb
mov
lret
dec
sub
xor
das
int
cmc
test
lret
imul
dec
xor
inc
je
call
shll
mov
ss
xchg
movl
test
cltd
push
mov
fcomi
xor
sub
mov
cmp
add
adc
or
scas
mov
jmp
push
mov
cltd
movsb
bound
pop
pusha
push
ja
sub
int3
cmp
rolb
fsubr
lea
dec
aaa
jb
add
gs
lret
cmc
ret
call
lcall
mov
sbb
es
cld
cmp
popf
sbb
or
fcomp
inc
les
pop
mov
lods
mov
js
fs
clc
lods
aas
mov
and
pusha
aaa
dec
xchg
cmp
mov
mov
lret
out
xor
pop
sub
in
push
mov
rorl
rcr
dec
and
arpl
push
xor
fstl
push
pushf
rorb
cmp
outsb
mov
in
xchg
mov
outsl
pusha
adcb
mov
adc
fisttpll
pushf
mov
jl
cmp
test
shll
mov
in
cmp
es
dec
jl
rolb
gs
xlat
bound
aam
jo
pusha
das
in
in
sbb
es
inc
jl
xor
popf
xor
subb
add
lods
and
addb
and
or
dec
fcompl
dec
adc
or
adc
jle
mov
out
les
fsub
dec
cmp
pop
inc
fs
hlt
push
outsl
dec
sub
sbb
xchg
sub
hlt
popf
jecxz
test
and
nop
lds
lock
outsb
int3
mov
lods
mov
mov
or
jmp
push
insw
cwtl
jmp
or
bnd
ja
cwtl
and
lahf
sub
sub
mov
mov
cltd
sti
mov
out
cmp
outsb
cmp
jne
outsb
lock
or
xchg
xchg
test
fdiv
scas
aad
roll
int3
ljmp
mov
out
out
add
int
inc
std
stos
dec
jae
cmp
aam
mov
jns
jl
xchg
cmp
adc
lock
or
add
fisttpl
arpl
popf
cmp
pop
mov
adc
add
xlat
push
inc
fidivrs
fs
mov
mov
cwtl
scas
daa
clc
jo
jno
mov
adc
adc
mov
fcoms
pop
xor
enter
adc
lock
push
or
aas
push
cld
test
in
pop
jno
sub
cld
pop
aam
xor
scas
pop
fsubrp
dec
mov
sub
fcmovne
in
push
arpl
push
and
ror
lock
outsb
fdiv
xchg
mov
fadd
nop
lret
std
sahf
inc
sti
adc
jmp
sti
xor
sarb
jle
mov
ret
sbb
xchg
push
andb
or
in
scas
daa
jge
cmp
ret
cmp
xor
in
push
sub
aaa
inc
dec
lods
inc
jl
and
push
xchg
dec
ss
roll
pop
mov
bound
mov
lahf
popa
insb
lret
faddp
ret
or
inc
jo
adc
sbb
xlat
jge
push
movsl
push
push
sub
cmp
cmp
dec
sbb
sahf
cld
push
movsl
jno
pop
add
repnz
aas
icebp
jb
std
cld
cmp
jle
sub
adc
fistps
dec
push
mov
push
xchg
fs
nop
dec
daa
stos
call
dec
pop
in
mov
jl
dec
xor
mov
jl,pt
jle
pop
addr16
aam
xor
add
adc
jge
gs
xchg
dec
pop
aad
inc
popl
ret
add
out
and
mov
xor
dec
xchg
popf
mov
push
and
xor
outsb
loopne
or
mov
addb
sti
jnp
ror
xor
into
adc
jno
pushf
ds
loop
pop
xor
xchg
fists
dec
jae
xchg
adc
mov
sbb
or
les
cmp
test
dec
cmpsl
pop
scas
addr16
xchg
aaa
sbb
push
int
and
pop
mov
jbe
mov
push
fcomip
ds
sub
fnstcw
leave
pop
fidivs
dec
xchg
add
sub
aam
mov
pop
roll
jl
sbb
xor
scas
ret
xor
or
imul
arpl
push
add
adc
lea
mov
dec
inc
incb
test
mov
idivl
rcrb
push
pushf
fwait
out
mov
clc
imul
shrb
cmp
movsb
stc
out
aam
mov
outsl
aas
ret
flds
inc
and
jno
jo
jp
jmp
divl
jp
pushf
das
ss
sahf
inc
dec
int3
jl
std
inc
scas
or
inc
int3
les
jle
nop
std
repz
push
inc
cmpsb
test
loope
xchg
and
in
jmp
mov
popa
jmp
sub
nop
push
jne
test
cmp
cwtl
movsb
ficomps
adc
mov
fsubl
push
add
stos
icebp
lea
ret
and
ja
add
push
xor
and
in
repz
adc
leave
mov
enter
inc
stos
mov
aas
repnz
jmp
jne
or
mov
data16
sbb
push
call
shr
push
call
out
mov
or
je
adcl
inc
lcall
lock
icebp
or
jecxz
imul
rclb
cmp
xor
jg
mov
sbb
or
lods
mull
sub
jae
or
jbe
fildll
movsl
out
movsb
stc
invd
cli
pop
inc
xchg
call
fldln2
push
sbb
out
sub
ret
pop
adc
loop
xor
loope
addr16
push
in
xchg
sbb
out
aad
mov
call
cltd
mov
gs
outsl
stc
push
sbb
test
roll
adc
and
mov
cmpb
and
push
cmp
mov
mov
loope
jae
push
test
loopne
psubd
loop
test
mov
das
pop
test
mull
sbb
nop
fwait
mov
insb
pop
add
mov
movsl
xchg
jl
sub
jl
jle
or
rorl
jle
fs
pusha
and
je
dec
adc
jg
or
ret
into
movsl
arpl
dec
fisubs
add
jmp
pop
pop
iret
add
xchg
lock
inc
sbb
shlb
movsl
and
jge
xorb
jno
movsl
ss
movsl
int
shlb
into
frndint
fucomip
and
ret
aad
out
add
sub
xlat
inc
or
mov
and
or
push
out
sub
jb
in
sub
outsb
fld
sbb
and
repnz
xor
fcompl
ljmp
ficompl
or
je
sti
sub
adc
aam
mov
clc
popf
jl
cmp
icebp
lahf
xchg
pop
lods
in
add
or
ret
push
pop
and
push
fmull
add
inc
outsl
subl
inc
pop
cmp
fisubs
inc
dec
nop
inc
mov
insl
mov
test
jnp
cwtd
mov
lea
pushf
jno
test
mov
mov
test
adc
aad
sbb
cmc
movsb
xor
shlb
cmp
in
mov
scas
pushf
rcrb
out
dec
call
push
enter
cwtl
ret
jns
adc
mov
sub
fsubrp
sbb
and
xor
fnstsw
xchg
inc
dec
jne
mov
push
and
and
push
xchg
hlt
pop
jbe
sub
jno
lock
adc
scas
mov
mov
rcll
fs
pushf
scas
lock
std
cmp
jge
cmp
xchg
jecxz
inc
jb
cltd
jl
popf
cltd
push
or
sahf
js
or
xor
cmp
inc
nop
inc
xlat
xor
rcrb
xchg
mov
popf
jo
xchg
xchg
std
push
mov
xchg
cmp
mov
pop
cs
jo
clc
push
jno
ret
xchg
cs
push
dec
inc
arpl
decl
xchg
aam
push
call
int
fiadds
pop
dec
mov
mov
mov
mov
mov
clc
cli
in
jbe
xchg
inc
popl
lahf
mov
mov
dec
les
ja
xor
jo
jl
fs
add
cmp
dec
xor
push
adc
mov
jle
arpl
mul
push
xchg
push
add
sbb
test
in
and
mull
dec
cmp
lea
jo
faddl
xor
or
shrl
pop
mov
xchg
or
mov
lret
sub
nop
cmpsl
mov
shrl
aam
push
lahf
inc
ja
mov
call
cmpsb
sub
loope
push
enter
push
lret
movsb
aas
adc
mov
mov
je
loopne
stos
push
out
mov
and
dec
leave
or
xor
mov
enter
gs
mov
fmull
jmp
adc
data16
lcall
repz
pop
call
pop
test
xchg
push
fcompl
ja
sub
cmp
jl
xchg
push
ss
imul
xchg
loopne
js
int3
lods
aas
mov
inc
mov
mov
je
iret
and
push
shll
std
jle
push
dec
pop
dec
mov
js
lahf
testb
fnstenv
cmpsb
stc
xchg
mov
int3
mov
xor
je
rclb
adc
lock
xchg
jno
push
sub
push
push
call
je
movsl
mov
insl
hlt
sub
add
sar
outsl
cmp
jns
icebp
push
hlt
jl
push
mov
and
xor
cmp
arpl
push
and
add
pop
and
add
pushf
or
mov
insl
movsb
add
popa
testl
jae
cmpl
mov
xor
repnz
inc
faddl
subl
mov
pusha
loop
push
push
mov
iret
shl
xor
add
mov
push
xchg
subl
andb
in
jmp
lea
enter
test
cmp
rorb
dec
cmp
pop
enter
jle
inc
test
push
scas
sub
dec
mov
je
mov
loopne
test
je
or
push
mov
stos
sti
mov
and
shll
pop
out
sarl
pop
sti
dec
ljmp
inc
in
lea
xor
fwait
popf
cmpsl
fs
iret
dec
or
into
cmp
xchg
inc
adcl
into
mov
mov
into
inc
insl
jno
std
push
andb
enter
mov
fsubrs
popf
orb
mov
xchg
adc
jge
shll
sub
pop
jg
movsb
xlat
in
mov
es
fldln2
and
in
lret
in
inc
shll
rclb
rcrb
in
in
in
movsb
cmp
aad
add
repz
adc
outsb
mov
sti
fcoms
and
cs
das
divl
int3
sub
jnp
mov
sarl
sub
add
in
xorl
cmp
xor
mov
mov
mov
dec
add
jge
in
add
mov
shrb
test
out
jp
push
andl
hlt
loop
out
jb
movsb
xchg
add
push
fldenv
sbb
std
divb
xor
hlt
or
hlt
cmc
ljmp
sbb
mov
cmp
cli
mov
call
cmp
xlat
iret
xchg
fs
popa
ds
xchg
inc
push
fldl
add
mov
inc
mov
jp
movsl
xchg
in
in
xchg
push
cmpsl
dec
stos
insl
jo
lds
adc
shll
cltd
push
xchg
mov
int3
frstor
outsb
jecxz
or
lock
jo
push
fidivs
daa
inc
pop
inc
xchg
test
popf
icebp
xchg
jl
popa
scas
mov
inc
or
addl
push
jns
int3
rcrl
pop
and
cmpsl
inc
sti
sbb
stc
mov
inc
jo
dec
sahf
mov
fistps
inc
adc
pop
enter
sahf
adc
xchg
je
xor
add
inc
mov
and
enter
or
movsb
jnp
mov
leave
add
fadds
rclb
jl
ljmp
fisttpll
outsl
lds
outsl
call
data16
aad
icebp
sub
les
fadds
push
pop
add
es
mov
hlt
in
push
jle
push
hlt
pop
outsl
in
fisttpl
ds
pop
mov
sub
out
xchg
or
mov
outsl
pushw
test
jbe
test
popa
and
jl
mov
push
dec
dec
lock
movsl
dec
mov
ljmp
daa
sub
popa
movsb
or
mov
js
or
imul
add
cmp
xlat
jmp
xchg
lahf
loop
cmp
loopne
shll
aaa
sub
faddp
rcll
xchg
or
push
pop
and
xor
sub
je
stos
push
lret
fcmovnu
mov
cmp
cmpl
bound
cmc
in
xchg
or
inc
push
sub
or
dec
ds
xor
push
add
sahf
xchg
inc
repz
mov
leave
cld
mov
out
ret
call
or
xchg
dec
jnp
push
jnp
mov
js
lcall
sti
inc
xor
loopne
adc
sub
filds
outsb
pop
ret
fnsave
ret
aaa
push
push
adc
out
xchg
out
push
loopne
call
fistps
add
cld
insl
imul
movsl
fcmovnbe
icebp
and
test
fmuls
lea
or
shl
icebp
push
inc
sub
repnz
sub
scas
add
cwtl
aam
pushf
ds
inc
cltd
cmp
push
push
adc
jbe
dec
add
movsb
add
mov
dec
mov
sub
mov
adc
mov
mov
jbe
jp
mov
fidivs
push
movb
add
xchg
push
add
shlb
lret
out
mov
push
push
jecxz
aad
cmp
mov
xchg
inc
xchg
mov
jl
mov
les
mov
jno
push
jmp
mov
arpl
flds
push
push
dec
inc
add
enter
shrl
out
and
inc
cwtl
repz
add
jns
sti
lahf
decb
inc
cmpsb
pop
inc
xchg
inc
es
mov
and
add
mov
gs
out
sahf
dec
sbb
mov
sub
fldlg2
call
ret
out
pop
std
or
cmpsb
mov
adc
or
data16
movups
and
inc
pop
pop
leave
dec
adc
jnp
sub
mov
push
pop
shr
imul
mov
lods
pusha
xchg
movsl
dec
leave
rcrb
or
call
sub
insb
cmp
idivb
lock
fsubl
pusha
push
ret
jecxz
ds
mov
js
movsl
roll
jne
pop
cmp
push
aas
mov
and
out
ror
mov
mov
iret
xchg
pop
les
mov
ret
or
pop
cs
jg
std
push
js
call
mov
test
mov
jl
fstps
jne
nop
js
jl
fmul
subl
lret
fsubrl
jb
and
jns
insl
loop
out
ffree
jmp
adc
cmp
imul
movsb
and
adc
pop
das
addl
es
pushf
add
movsl
or
xor
sbb
mov
sub
lret
mov
xor
xchg
sarb
sub
jmp
lods
pop
sub
fcoml
sub
aad
mov
movl
ret
in
scas
ja
sbb
mov
lods
ret
es
cmc
and
pop
fisttpl
jg
scas
pop
xchg
lods
cmp
clc
lods
jp
lea
aas
aas
mov
jne
movsl
js
jmp
es
lock
jmp
push
stos
lock
or
mov
jne
and
add
jmp
ss
mov
in
in
movsl
sbb
in
cmc
mov
add
inc
sub
addr16
insl
jae
mov
enter
lock
pop
cmp
push
sbb
add
mov
in
mov
ja
pop
mov
mov
jno
lea
test
xchg
sbbl
icebp
jp
xchg
cmp
aaa
jb
mov
popa
enter
jge
push
jmp
pop
or
fucomp
mov
fucom
xchg
outsb
xchg
ds
je
hlt
mov
pop
mov
push
adc
mov
inc
jo
jno
call
test
mov
in
mov
dec
js
push
cmp
cld
pushf
adc
add
popf
fildl
scas
daa
or
push
movsb
out
adc
fmul
push
cli
icebp
outsb
xor
in
cli
jg
cmp
sar
unpckhps
cwtl
jnp
mov
or
test
cmp
pop
insl
add
shrl
in
enter
jecxz
xchg
sbb
cmp
jns
stos
inc
jle
adc
jae
fcom
or
outsl
cs
mov
loope
test
pop
xor
or
jnp
jae
addr16
pop
jb
jl
push
idivl
sub
int3
mov
inc
jmp
test
mov
dec
daa
ja
mov
lock
sbb
add
push
cmp
divl
cmpsl
push
data16
addb
mov
push
push
push
inc
ds
cmp
popf
scas
dec
cmp
repnz
int
adc
lahf
adc
mov
or
pop
adc
call
mov
jmp
cmp
call
or
mov
inc
scas
mov
mov
xchg
jg
fnstsw
pop
xor
out
xor
je
loop
lea
daa
cmp
adcl
push
lea
push
jno
in
popa
dec
dec
das
xchg
fnstenv
ljmp
enter
sbb
dec
xchg
lcall
jle
mov
cmp
repnz
mov
cmpsb
mov
test
push
cmpsl
repnz
cmp
lock
outsb
insl
sbb
add
les
adc
aam
lcall
mov
cltd
gs
imul
loope
fdiv
cmpb
xchg
cmpsl
xor
in
mov
or
lock
mov
enter
xor
rcll
test
jne
and
movb
shr
shll
xorl
test
loope
stc
mul
arpl
leave
push
xor
cmpsb
jbe
jg
jae
pusha
adc
inc
imul
mov
push
mov
mov
or
xchg
xor
mov
outsb
pop
mov
pop
not
loopne
cmpsb
mov
out
push
sbb
cwtl
aaa
aad
jno
nop
jle
xchg
icebp
pop
cmp
cli
shr
jle
js
js
cmp
ja
fidivrs
push
insl
arpl
int3
inc
lock
mov
ror
xchg
adc
mov
mov
fadd
cmp
shlb
add
xor
and
ret
lcall
iret
daa
sahf
dec
dec
and
sub
sbb
test
or
cmp
nop
imul
pop
les
data16
or
adc
test
mov
mov
jecxz
test
out
clc
dec
push
fidivrs
cmp
mov
movsb
fidivrs
dec
or
or
std
ret
lret
lock
jmp
fnstcw
hlt
pop
dec
scas
mov
in
jae
xor
outsl
fnstcw
rol
fwait
push
pop
dec
cmp
outsb
out
sub
cmpsl
mov
jle
push
cmp
xchg
fnstenv
and
out
cmp
mov
ljmp
shl
imulb
enter
in
jl
mov
push
data16
xor
insl
js
lds
push
mov
leave
jnp
push
repz
sub
out
loop
mov
add
pop
and
sbb
ret
mov
imul
add
out
xchg
enter
push
xlat
test
cs
pop
sub
stos
adc
mov
dec
test
cmpsb
in
aas
adc
sbb
sub
pop
shrl
aam
mov
out
ret
pop
cld
popa
jge
ja
loop
dec
dec
cli
sub
bound
jmp
lds
add
inc
loope
mov
inc
outsb
test
out
daa
bound
stos
sahf
aas
fwait
xor
out
loopne
arpl
test
xor
test
cli
dec
lock
ds
ret
loopne
inc
sub
push
push
arpl
fmull
push
imul
jno
lret
fadds
adc
test
or
and
add
loope
insl
xchg
fwait
and
cmp
bound
sbb
repz
xor
sahf
pop
dec
mov
lds
mov
add
in
cmpsl
mov
jno
test
dec
stos
sbb
push
xlat
mov
cltd
mov
dec
lds
pushf
bound
xchg
dec
out
dec
mov
sub
mov
fmull
lret
sbb
and
dec
mov
leave
jge
push
ret
insl
in
mov
subb
adc
je
or
je
test
mov
int
pop
add
mov
xchg
sub
imull
jo
fsubr
inc
outsb
int3
mov
arpl
shl
mov
inc
enter
sub
jae
and
inc
xor
pusha
jmp
gs
jno
js
je
aam
dec
inc
in
call
sub
mov
test
jns
mov
adc
aad
jge
stc
cwtl
je
adc
jmp
movsb
sbb
cmp
push
lods
xchg
ss
jmp
cmp
jno
ret
std
pop
into
cltd
popf
mov
ret
jo
add
gs
push
push
push
addr16
xchg
dec
pmulhw
aaa
and
mov
pop
mov
iret
pop
sbb
cmp
add
add
mov
or
data16
or
xchg
ret
xchg
shll
push
and
push
adc
je
lods
mov
out
pop
sub
sub
or
mov
insl
dec
stc
jae
aam
mov
xor
dec
pushf
and
or
jmp
pusha
out
sub
sbb
loope
xlat
mov
in
les
pop
add
cmp
jb
test
mov
or
xlat
aam
loop
mov
ss
test
sub
xchg
test
add
add
bound
test
jmp
mov
lea
xchg
push
xor
rorl
xor
mov
repz
cs
pusha
sbb
push
scas
notl
add
mov
shlb
adc
repnz
enter
jmp
push
lret
call
adc
ljmp
sub
fisubrl
mov
mov
mov
cmp
push
dec
fnstcw
int3
cmc
aaa
aam
ds
adc
out
out
out
jge
fidivrl
mov
push
scas
mov
arpl
adc
sub
mov
adc
test
aad
lods
xor
xorb
cmp
aaa
dec
xor
test
or
cmc
mov
lock
pop
insb
fadd
xchg
sbb
xor
jg
push
push
in
add
jnp
clc
ljmp
mov
sub
mov
scas
sti
mov
lahf
test
add
aad
sub
mov
cs
xor
cmp
cli
inc
shll
jmp
movsb
js
push
adc
iret
movsl
scas
fstl
bndstx
gs
dec
mov
pushf
cli
and
testb
jnp
xchg
bswap
xor
nop
and
ja
add
push
ret
sbb
iret
shl
push
fsubr
pusha
subl
or
out
dec
xor
in
ss
and
xchg
call
push
xor
xchg
cmp
in
ficoms
add
lea
ret
out
sbb
js
loope
ljmp
pop
rol
adc
loop
mov
pop
out
mov
das
pop
test
xor
jmp
gs
jmp
clc
aas
in
mov
aas
popa
dec
inc
lea
data16
and
popa
or
mov
dec
mov
repz
roll
loopne
scas
pop
pop
in
pop
or
push
je
fisubs
xor
lea
lea
add
fcoms
adc
mov
xor
cmp
mov
push
test
std
repnz
xchg
hlt
aas
sub
insl
les
das
cmpsb
fmull
addr16
in
mov
push
sub
repnz
int
fimull
cmp
scas
or
mov
popf
mov
and
mov
loopne
sqrtps
jle
ss
jmp
xchg
jle
cld
mov
inc
jno
out
xchg
jp
aaa
pop
inc
rorb
loopne
pop
sub
xchg
or
loope
lds
pop
loop
les
inc
cmpsl
int3
mov
in
hlt
sub
test
jle
stc
mov
test
pop
mov
cmp
and
mov
jno
push
push
cld
imul
stos
push
push
cltd
lock
fs
out
inc
xchg
mov
and
es
popa
decb
jbe
mov
mov
sbb
and
cmp
daa
jns
cmp
cmp
es
fiadds
dec
fstp
icebp
hlt
xchg
or
dec
xor
jne
pop
jo
cmp
xchg
add
in
es
call
mov
in
jp
sub
sahf
scas
and
inc
cmp
sahf
aam
mov
lock
add
in
ljmp
cmpsb
cmpsb
cmc
dec
or
push
outsl
ret
insl
fcmove
fcoml
or
push
jns
mov
stos
cltd
orb
sbb
popa
gs
rorl
dec
and
pop
sbb
mov
mov
into
mov
or
icebp
std
and
imul
xor
pushf
inc
gs
gs
aas
fcomps
push
int3
movsb
movsb
push
push
pushf
fsts
fldcw
aaa
in
inc
jns
mov
sarl
hlt
lahf
inc
cmp
stos
in
mov
js
call
rcll
js
out
add
or
mov
aaa
mov
jnp
int3
pusha
int3
xor
dec
in
adc
sbb
subl
jp
mov
test
push
jmp
mov
out
or
push
mov
inc
cmp
imul
out
inc
cmp
or
repz
dec
out
call
dec
jmp
xor
xor
lods
or
dec
cmp
mov
dec
insb
xor
cmove
js
fmuls
shll
sbb
ds
fldcw
lahf
mov
mov
fcmovne
adc
cltd
adcb
jmp
lret
xchg
add
mov
cld
add
test
mov
sub
dec
bnd
push
stos
mov
pop
repz
mov
dec
out
lock
jle
ds
sbb
loopne
ja
fcmovu
lret
hlt
int
sbb
popf
sub
data16
into
sub
fwait
lods
dec
inc
mov
dec
enter
in
rolb
pusha
loope
in
pop
pop
outsb
jno
jl
hlt
fmul
aaa
stc
in
ja
jmp
dec
ret
jle
push
xchg
ret
fsubrl
mov
xor
adc
push
lods
jae
and
dec
add
jecxz
sub
js
sar
add
sub
mov
dec
jb
adc
adc
jge
js
std
aad
inc
out
clc
dec
push
test
insl
adc
xor
sbb
push
mov
loopne
xor
mov
push
push
ret
jo
mov
sti
cmp
mov
mov
xchg
jg
lock
jae
mov
push
sub
mov
and
cld
out
mov
cmpsb
enter
out
pop
jnp
fwait
ljmp
scas
pop
inc
lret
lret
lds
add
push
sbb
rorl
xchg
xor
inc
repz
cmp
ds
out
lret
jge
int
stos
cld
pushf
inc
cmp
jmp
pushf
fldenv
or
into
andb
mov
pusha
add
pop
imul
arpl
fistl
add
loopne
test
sub
iret
adc
neg
mov
aas
pop
jmp
mov
mov
jecxz
xchg
rorl
sbb
icebp
imul
lret
cli
lret
test
mov
adc
push
popa
js
aas
out
xchg
jl
dec
nop
mov
xchg
shr
fldcw
jecxz
fwait
scas
sti
add
xchg
arpl
shrl
lret
add
xchg
mov
clc
bnd
sub
icebp
sti
data16
jno
mov
adc
jg
cmp
mov
mov
xor
out
sub
decb
dec
dec
dec
and
int
aas
lret
adc
mov
jne
imul
movsb
mov
test
lret
jnp
or
jg
push
loop
dec
adc
push
lock
lahf
cmc
scas
sub
mov
repnz
call
sub
test
xchg
outsb
xor
loop
das
jg
mov
out
das
scas
int
jp
jae
jl
movsb
pop
lds
sub
loopne
in
ds
pop
sub
add
lret
jl
sahf
adc
inc
jl
mov
cmp
iret
je
std
mov
repnz
repz
pusha
cmpb
push
fldenv
add
es
add
jmp
push
inc
jns
lds
das
cltd
and
cmp
xchg
sahf
aaa
scas
fbld
push
bound
inc
add
mov
repz
cmp
daa
cmc
in
test
adc
push
insl
xor
adc
aas
in
scas
fwait
notb
fwait
insl
ja
es
xor
das
lods
push
je
push
mov
add
pushf
mov
ret
add
rorl
ss
std
test
cs
push
cld
enter
lret
sub
push
pop
cmpsb
xor
fisttps
sarb
mov
xchg
cmp
ret
cmp
sbb
lret
dec
jae
loope
sub
das
subl
push
or
or
dec
and
mov
push
out
loop
xchg
inc
pop
xchg
lea
mov
jb
in
fiadds
test
je
pop
ret
pop
push
xlat
repnz
or
xchg
out
adc
call
rorl
mov
std
ret
push
gs
mov
bound
scas
inc
xchg
movb
pusha
pusha
push
add
js
std
xlat
in
aaa
push
lea
sub
push
cli
mov
dec
adc
movsb
sub
lcall
aas
push
fmul
jnp
xor
cs
mov
push
cmp
push
js
mov
inc
int3
inc
jmp
or
test
sarb
xor
xchg
mov
mov
mov
mov
cwtl
mov
in
sub
dec
lods
pop
repz
push
mov
cmp
mov
mov
dec
sti
aam
cli
repz
daa
sbb
inc
arpl
lret
out
cld
xchg
scas
insl
push
xchg
arpl
repnz
sti
subl
inc
addr16
lods
dec
bnd
sub
sbb
xchg
dec
in
mov
mov
pop
xor
clc
mov
push
add
push
dec
lods
sub
adc
adc
sarb
aaa
cs
jmp
fs
ds
adc
sbb
std
outsl
and
cld
clc
xchg
arpl
push
shr
movsb
popa
test
xor
stc
insl
es
xchg
sub
mov
cmp
xchg
clc
mov
push
push
aam
or
adc
fcoms
mov
xor
lret
ss
fadd
mov
pop
jg
dec
arpl
ds
or
dec
imul
push
cmp
sarl
ds
pop
testl
cld
or
sub
rep
scas
lock
dec
outsb
out
jp
repnz
sbb
mov
test
mov
fs
lret
mov
inc
push
lea
cmp
icebp
aad
cmp
or
js
mov
mov
shrl
les
adc
lea
test
mov
lret
fwait
mov
pop
inc
loop
mov
jp
rol
js
scas
lret
jl
mov
int3
add
ret
dec
daa
and
call
cltd
add
cwtl
aaa
repnz
jecxz
ljmp
lods
mov
push
jmp
or
shrb
sbb
sub
push
dec
je
pop
imul
int3
ja
mov
loop
adc
ljmp
and
mov
andl
and
lea
shll
mov
push
je
sbb
add
and
push
fcomps
pushf
lret
aam
bound
int
inc
lahf
sti
roll
lahf
pop
sahf
rcl
and
dec
adc
xlat
call
imul
pop
mov
and
in
es
shll
in
idivb
pushf
popf
mov
cmp
xchg
mov
enter
movsl
lea
fistpll
pop
std
aas
mov
adc
add
outsl
inc
jmp
lcall
xchg
push
sub
push
js
or
jns
repz
push
repz
insl
pop
or
into
inc
cmp
xchg
outsl
cltd
lret
and
shr
inc
sub
icebp
mov
sub
je
sahf
adc
push
xchg
js
inc
jb
scas
ret
mov
mov
mov
mov
shrb
pushf
lcall
mov
mov
enter
enter
sbb
sti
push
jae
jns
adc
sar
xor
mov
cmp
adc
xor
ds
push
sub
fsub
cmp
or
repnz
push
lea
sub
popa
mov
mov
movsl
rcrb
mov
addr16
push
jno
mov
and
popa
jge
pop
or
adc
mov
rorb
cmp
add
es
xchg
nop
in
in
inc
push
outsb
xchg
pusha
pop
sub
inc
lock
sub
cltd
lcall
stc
and
sbb
sub
outsb
mov
mov
decb
xchg
sub
sub
pop
aaa
js
sbb
data16
mov
mov
shll
mov
mov
lahf
jmp
dec
fimuls
fimull
and
and
rorl
xor
shr
scas
mov
aam
repnz
aas
daa
cmp
imul
sub
hlt
dec
lea
fidivl
jmp
ret
adc
rcrl
jno
loop
inc
cmc
adc
lea
pop
or
adc
daa
pop
cmc
inc
jmp
loop
roll
popa
cld
shrl
insl
or
bnd
mov
mov
jl
ja
jp
leave
add
jle
insb
inc
popa
pop
add
push
push
andb
lea
sub
out
loop
pop
pop
lods
mov
nop
enter
out
js
aam
je
pop
fnstenv
xor
popf
cmp
add
ss
push
or
popf
int3
cmp
and
inc
sbb
pop
or
fld
pop
addr16
sbb
sbb
repnz
pop
lock
jns
inc
lods
es
fcoms
imul
mov
dec
or
push
stos
in
in
jl
and
and
sbb
jle
sbb
sahf
fcmovu
shrl
cmpl
lds
sub
lea
sarb
shl
dec
lcall
flds
movaps
sub
clc
mov
mov
mov
das
jns
pop
xlat
sti
lds
out
push
and
lret
stos
sub
aam
cmp
ficoms
mov
fs
cmpsl
cmp
repnz
jns
sub
xchg
int3
or
pop
lods
sub
lahf
jnp
or
stc
idivb
and
sub
mov
gs
jns
aam
mov
push
jnp
xchg
inc
cmp
mov
xor
sbb
xor
xlat
les
dec
and
jns
add
add
out
or
mov
xchg
and
mov
je
repz
jne
insb
or
sarl
fwait
in
subl
cmp
cmpsl
lock
pop
cld
jmp
pop
jmp
mov
rolb
or
sbb
cmp
mov
les
dec
mov
enter
repnz
pop
jmp
push
pusha
dec
push
cld
pop
in
mov
xorl
dec
push
or
cs
aad
xchg
sbb
and
lods
push
xchg
mov
mov
mov
stos
adc
push
mov
mov
mov
cmc
or
mov
mov
adc
and
xchg
lret
in
insl
lods
repnz
stos
test
and
mov
sbb
push
cmp
lea
dec
jb
xor
sub
out
lret
in
mov
xor
xchg
add
push
ret
data16
mov
push
mov
insl
cmp
xchg
ret
xor
mov
movsb
jecxz
or
int3
jae
add
xchg
std
test
cltd
adc
cmp
or
fidivrl
lods
dec
and
call
in
movsl
xchg
adc
and
scas
mulb
loopne
or
adc
mov
mov
sub
push
dec
mov
mov
out
lret
lcall
mov
sub
cmp
aad
lret
ret
adc
mov
in
mov
in
or
xorl
push
cmpsb
adc
notb
dec
mov
mov
mov
cmp
jb
cs
adc
sti
jl
dec
jnp
bound
adc
cmp
cmc
jle
push
dec
mov
add
push
fsubp
push
mov
insl
inc
mov
in
dec
or
sbb
sub
les
cmp
mov
adc
pop
push
into
in
push
pop
in
inc
lods
int
and
gs
push
sub
cli
jmp
call
cmp
adc
dec
mov
leave
cmpl
xchg
aaa
rcl
push
mov
pop
xchg
jno
lahf
clc
stos
in
adc
dec
mov
ret
inc
mov
cs
sub
rorw
cli
in
lods
sar
cmpsb
cmp
call
in
lret
aas
xor
roll
push
in
jle
loope
lea
out
mov
lea
mov
mov
lock
mov
lea
jl
pop
sub
mov
adc
lock
sbb
xor
lret
mov
lahf
mov
bound
sbb
fistl
jbe
fisubl
push
push
cmp
adc
and
stos
nop
js
xor
fucomi
xor
dec
call
fnstcw
orl
out
fnstsw
les
mov
mov
push
pop
dec
sub
lock
out
jns
js
in
adc
adcl
jb
jbe
jo
icebp
push
subb
loopne
aam
mov
aaa
pop
cs
dec
hlt
cmp
dec
sbb
shr
xchg
popf
mov
sub
addr16
xchg
int3
pop
pop
lock
test
adc
adc
xchg
jp
scas
sar
imul
xor
cmpsl
jne
dec
adc
push
gs
roll
inc
lods
imul
imul
xchg
xchg
test
and
insl
jbe
adc
fmul
stos
daa
loope
push
imul
push
sarb
jp
xchg
mov
cmpsb
sub
inc
push
xlat
xchg
popf
sbb
pop
bound
cld
inc
jne
les
es
sbb
aaa
repnz
jns
leave
sub
ret
sti
stos
std
subb
pop
dec
sub
mov
fstpl
mov
test
pop
sbb
lcall
xchg
push
dec
pop
clc
inc
pop
fstpl
mov
orb
mov
sub
ja
adc
in
nop
push
ror
adc
dec
shrl
pop
stc
xor
jl
jecxz
xchg
clc
or
loopne
popa
in
std
mov
insl
pop
loope
insl
sub
inc
xor
rcrl
out
mov
mov
loopne
or
popf
lret
lock
mov
dec
stos
shll
arpl
aaa
mov
loope
stc
lea
mov
enter
jge
mov
sbb
pop
cmpsl
in
xchg
jg
sub
xchg
repnz
pop
xchg
sar
sub
mov
out
or
mov
or
mov
insb
mov
mov
outsb
cs
dec
jbe
lea
test
call
cmp
fsts
test
mov
int
shll
inc
sub
xchg
aas
stos
out
push
jo
pushf
cmp
insl
adc
stos
rcrl
sub
jo
or
popa
outsl
cmp
sbb
jle
lods
sar
call
das
clc
lds
je
pop
sbb
jae
fistpll
shl
cld
fstl
mov
sbb
test
hlt
add
push
ds
data16
int
js
push
insl
sbb
loope
sbb
out
xchg
pop
jae
sti
mov
cmp
js
lds
test
mov
xor
loop
xchg
mov
movsl
xor
cld
mov
lods
insb
xchg
or
stos
xchg
sbb
dec
pusha
adc
dec
jb
dec
mov
ret
enter
dec
push
pop
out
imulb
jne
mov
sbb
mov
jl
lahf
imul
call
clc
scas
inc
or
cmp
push
sub
lea
cmp
fstpl
adc
jae
fs
and
xor
pop
lret
test
jmp
sub
jmp
gs
shll
mov
sahf
xchg
dec
ds
subl
stos
andl
aam
mov
push
sbb
add
pop
hlt
jg
cmp
adc
sbb
push
lcall
dec
lods
lret
cmp
shl
sbbl
fcoms
test
or
movsl
jp
add
pop
add
int3
dec
bound
and
js
jno
leave
mov
xlat
stc
cmp
fwait
js
ds
jp
inc
jmp
fsubrp
lret
or
push
push
imulb
aad
ret
mov
adc
lret
lcall
jno
add
jg
ret
push
outsb
mov
mov
fimull
mov
push
mov
or
movsl
xor
jge
addl
aas
into
lea
xchg
das
pop
push
mov
out
pop
and
and
daa
in
pop
outsb
push
jo
xor
pop
sarl
jl
in
lcall
inc
fstps
add
les
mov
shlb
cmp
inc
xchg
cmpsb
push
pusha
sub
mov
mov
fcomip
clc
outsl
xchg
loopne
jnp
imul
enter
ljmp
repnz
andb
ss
daa
lahf
inc
push
or
xchg
insb
scas
xor
xchg
cmovb
jle
inc
in
shr
jae
cmpsb
jns
push
push
repz
pop
shlb
sub
ror
test
xor
xor
negl
jno
icebp
aas
orb
or
jp
icebp
mov
mov
orb
and
loopne
inc
jns
aam
cli
out
mov
add
push
inc
push
sub
push
add
les
arpl
cmp
pop
pop
fldenv
fistpl
cs
push
cwtl
dec
hlt
hlt
mov
lods
sub
aaa
and
call
adc
stos
xchg
pop
js
in
es
mov
ds
inc
lcall
jg
pop
jnp
inc
test
test
dec
cmp
iret
add
mov
out
ss
insl
mov
sti
nop
mov
mov
stos
jbe
in
sbb
pop
mov
lods
shl
cld
js
xchg
push
popa
repnz
fwait
mov
ret
or
sbb
in
xor
daa
jge
pop
sub
sub
jno
idiv
xor
and
ret
inc
negl
dec
dec
sub
mov
jl
mov
sbb
shl
jnp
mov
jbe
hlt
mov
add
push
xchg
ds
imul
fidivs
lods
lea
sbb
cmp
or
sbb
add
jo
ficompl
sbb
mov
or
pusha
mov
xchg
lods
repz
test
fscale
cmpsb
js
js
dec
movsb
notl
sub
hlt
repnz
pop
les
sub
icebp
inc
andb
stos
push
cmp
popa
mov
lea
cld
push
in
ret
add
std
imul
aad
xchg
repz
gs
jns
pusha
das
add
dec
xchg
cmpsl
mov
es
hlt
fstpt
mov
sub
lret
ret
pop
mov
sbb
nop
and
sub
lock
scas
in
jecxz
xlat
xor
in
std
jne
jnp
test
das
imul
add
push
dec
movsl
jmp
into
movsl
mov
inc
xor
push
or
cmp
adc
xor
mul
mov
mov
sub
inc
or
xor
data16
mov
inc
out
fsubrl
jne
mov
popf
outsb
in
icebp
iret
adc
test
insl
std
add
arpl
jae
inc
sub
or
sbb
shll
xor
scas
xor
aaa
push
mov
add
hlt
clc
pop
adc
mov
in
aad
ficompl
add
dec
and
lcall
shrl
bound
dec
and
mov
outsb
lret
jmp
enter
in
subl
or
jecxz
ret
lcall
and
stos
dec
xor
rcll
add
lods
leave
fsubrl
fwait
aad
lret
ljmp
mov
pop
xchg
pop
adc
dec
test
fadds
pop
jge
jmp
mov
mov
push
movsb
orb
jmp
out
out
inc
pop
sub
push
pusha
mov
daa
xor
test
fcoms
je
lcall
push
inc
push
or
fldenv
aad
or
cmp
outsb
data16
sbb
sub
mov
dec
mov
fnstenv
rorb
rolb
push
mov
in
pusha
pop
mov
mov
mov
inc
aaa
std
inc
add
sahf
pop
clc
sti
ret
xchg
pop
xchg
push
fcmove
mov
out
dec
pop
inc
fs
dec
adc
pop
roll
icebp
xchg
xlat
ljmp
add
add
jbe
hlt
mov
repz
das
adc
push
inc
cmp
sub
out
xlat
jns
icebp
call
mov
pop
clc
stos
add
mov
jns
imul
and
pop
xor
jecxz
mov
sbb
dec
imul
int
mov
dec
inc
lahf
sti
and
int3
inc
sbb
inc
stos
push
gs
push
scas
cwtl
xchg
pop
loope
mov
test
enter
pop
lcall
iret
aas
dec
mov
jp
mov
push
outsl
movb
add
pusha
ljmp
jae
iret
cmp
aad
movsb
sbb
dec
push
fsubs
sbb
cmp
push
std
push
insl
cltd
jmp
adc
sbb
mov
pushf
out
stos
lods
fdiv
push
in
lods
rorb
stc
jb
pop
or
icebp
test
or
mov
sbb
sub
mov
decl
push
sarb
andl
clc
push
xchg
lcall
jl
cmp
add
into
nop
push
in
in
xor
sub
and
mov
insb
pop
iret
and
sbb
dec
mov
enter
mov
mov
sub
push
pop
cmc
cmp
out
jno
imul
in
shll
cmp
scas
jp
mov
xor
hlt
out
loop
and
and
call
jmp
and
mov
out
mov
xchg
or
loope
popa
fmuls
xchg
cmp
int
fcoml
outsl
sbb
mov
repz
rorl
loop
in
jnp
lret
xchg
add
lods
adc
lds
ret
in
in
fimull
pop
push
and
mov
jbe
rcrb
lods
imul
xchg
test
add
lret
js
adc
movsb
insb
decb
aaa
push
cmp
xchg
dec
jge
and
mov
addr16
or
push
in
push
fldt
mov
mov
pop
stos
sbb
adc
lcall
or
jae
sub
xor
cmp
push
addr16
cmpsb
sub
mov
push
negb
mov
jge
push
sub
jae
out
sbb
ds
push
jnp
push
or
fsubrs
or
and
stc
mov
mov
jl
jo
jne
packsswb
lea
cmp
add
aad
cmp
adc
lods
aam
out
in
je
cmp
loop
enter
dec
mov
push
sub
xor
mov
add
test
push
add
es
dec
push
sar
rcll
or
ja
mov
push
mov
mov
ds
loopne
mov
or
ljmp
je
mov
jo
xor
cmpsl
mov
pop
aad
mov
ljmp
pop
xlat
or
movsl
rorb
xlat
call
repnz
push
cmpsl
popa
add
jne
les
xchg
sub
flds
jo
dec
mov
loopne
push
cmp
or
mov
adc
popa
add
out
adc
mov
sub
call
push
mov
adc
fnsave
pop
cmpsb
dec
das
aas
jmp
dec
dec
push
push
jg
jl
fs
test
int3
mov
lret
lea
xchg
in
adc
adc
out
pop
add
repz
or
xchg
pop
jb
in
das
fdiv
fs
test
and
gs
xor
cmc
int3
stc
clc
in
fmull
xchg
jmp
sub
xchg
mov
ret
or
mov
insb
out
jmp
jl
sbb
mov
xchg
add
or
and
jl
ret
xor
std
dec
clc
mov
dec
inc
adc
add
inc
outsb
sub
and
insb
sbb
xchg
lods
inc
imul
popf
js
mov
and
cmp
out
addr16
jae
sbb
lods
xor
aam
loopne
in
aaa
in
rclb
push
sub
xor
mov
xchg
or
sti
loop
clc
inc
xchg
lods
push
sarl
push
call
cmp
call
in
jae
outsl
out
dec
or
lods
jl
and
xchg
dec
lds
mov
jo
add
aas
or
fimull
inc
mov
ftst
or
push
in
addb
mov
sub
out
sahf
sbb
adc
add
mov
mov
pusha
lcall
aas
int
xchg
push
pop
les
pop
add
jmp
popa
dec
jp
push
out
push
push
loope
pop
adc
aas
sbb
fsubr
sbb
and
jns
adc
lahf
jb
int
mov
stc
pusha
jne
lcall
push
cmp
push
adc
dec
mov
inc
aad
ljmp
in
jno
out
cli
fdivl
sub
clc
sahf
and
or
mov
sub
xchg
pushf
test
std
mov
and
js
dec
push
cltd
fisubl
xchg
push
test
xchg
test
fcom
call
mov
js
sub
jg
andnps
push
cmp
lods
mov
cmp
nop
cmp
cmp
adc
sbb
pop
lret
fadds
jle
repz
xor
and
push
or
cmp
mov
test
cld
cmc
mov
repnz
ljmp
xor
inc
add
and
test
test
adc
popf
and
int3
jns
fcmovnbe
test
cld
sbb
in
or
nop
inc
ja
xchg
lcall
repnz
sub
shrb
add
loope
cmpsb
div
pop
pop
in
adc
push
bound
cwtl
mov
cs
sbb
shl
add
xor
and
mov
fisttpll
mov
mov
jno
jo
dec
jne
dec
cmp
and
add
enter
ret
jmp
pop
enter
mov
ljmp
testb
insb
inc
jmp
stos
cwtl
imul
add
adc
out
test
aad
loope
push
xchg
sub
xor
icebp
jae
xchg
into
jl
xchg
out
std
pop
lods
cmp
fs
mov
mov
mov
cmp
js
dec
mov
insl
aaa
and
add
sbb
pushf
sub
and
push
pop
dec
pop
ret
and
pop
push
adc
dec
stc
out
cwtl
pop
xor
xchg
sti
sbb
data16
and
inc
andb
shrl
or
inc
sarb
xor
mov
mov
sbb
mov
jnp
dec
mov
idivl
jo
add
int
sti
popl
sbb
lcall
addr16
cmp
mov
xor
jns
jns
lods
add
loope
scas
fdivl
cld
jp
rcrb
mov
jecxz
insl
scas
jbe
pop
iret
ret
js
js
push
dec
movsl
push
mov
bound
pop
cs
rclb
lcall
fildl
cmc
sahf
push
xor
push
push
xchg
xor
mov
jbe
dec
fdivrs
mov
adc
jnp
mov
or
mov
dec
cmpsl
or
jecxz
ljmp
rorl
mov
aam
inc
fstpl
mov
fldt
shr
into
leave
imul
push
call
inc
inc
in
enter
test
lret
in
adc
mov
shll
outsb
shll
dec
mov
rorb
test
and
negb
xchg
ret
push
jb
fcompl
es
jmp
mov
mov
daa
or
fldenv
rcr
pusha
push
dec
aas
sahf
test
fs
fs
lret
sbb
mov
outsb
into
xchg
adc
fs
cmp
fidivl
xor
and
test
adc
in
out
int
jp
inc
icebp
repnz
fs
fnsave
addr16
pushf
mov
fistl
xor
mov
pop
dec
dec
fisubs
cmp
nop
xchg
inc
ljmp
fwait
jp
mov
clc
enter
sub
push
test
movsl
sbb
hlt
mov
pop
loop
decb
sub
push
aad
adc
stc
sbb
mov
stc
pop
and
lcall
xor
dec
sarb
gs
in
pusha
dec
and
loop
and
lret
into
and
or
lret
mov
es
ret
adc
cmc
scas
call
and
mov
sbb
or
pop
jo
mulb
cld
sti
movsb
sbb
cmpsl
es
xchg
loope
pop
iret
mov
mov
lods
mov
pusha
mov
pop
jnp
pushf
je
jp
stos
gs
adc
xor
push
sub
shrl
out
popa
ljmp
and
xor
inc
shlb
sub
and
scas
inc
xor
pop
and
mov
xchg
arpl
mov
lret
fisubrl
jns
xchg
mov
inc
mov
dec
or
addr16
sbb
cmp
pop
xchg
sbb
scas
xchg
pushf
cli
loopne
mov
cmp
lret
nop
mov
push
sbb
in
xor
xchg
mov
push
dec
fidivs
lods
or
sahf
sub
xchg
pushf
cmp
xor
and
cmpsb
mov
mov
cs
sub
ja
mov
jnp
aam
dec
jno
mov
ljmp
mov
mov
mov
ret
mov
push
arpl
psubsb
repz
sub
inc
xlat
push
mov
pop
add
and
mov
xchg
std
pop
std
and
or
rcrl
xor
lcall
xor
stos
cli
jae
in
pop
mov
icebp
idiv
mov
cmp
pusha
jp
lea
cmp
bound
movsl
cmp
pop
sbb
lcall
mov
sbb
ljmp
dec
cmp
sbb
mov
and
lods
and
loopne
cmp
pop
insl
test
xor
dec
mov
jbe
adcb
jg
push
aam
inc
cli
mov
mov
enter
xrelease
pop
xchg
jecxz
test
into
push
pop
mov
and
or
sub
cli
add
add
or
jmp
jnp
data16
addr16
xor
movsl
cld
mov
dec
fstl
jmp
xor
or
cld
js
dec
jmp
std
daa
pop
outsl
adc
xor
dec
dec
filds
mov
and
nop
aaa
cmp
hlt
mov
loope
pop
iret
outsl
sbb
nop
and
dec
xchg
sub
push
push
or
jmp
mov
push
popa
mov
mov
js
adc
inc
push
std
icebp
mov
lods
sarb
xor
cwtl
mov
aad
xor
fxch
xor
sub
outsb
pop
fdivs
ret
push
divl
out
aas
nop
pop
sub
mov
int
test
enter
cld
inc
fwait
mov
mov
outsb
aad
shlb
mov
out
and
and
enter
shll
imulb
dec
xor
jmp
loop
mov
mov
aaa
mov
xor
stos
jp
shlb
jle
fildl
mov
and
mov
jo
dec
push
xchg
jmp
jae
dec
rcr
movsl
dec
divl
bound
adc
loopne
aad
fstl
xchg
cmp
mov
insb
push
xor
shrl
adc
inc
jl
movsl
lea
imul
movsb
loop
inc
in
add
test
flds
sbb
xor
stc
adc
mul
cmp
or
sub
xchg
dec
jl
into
sbb
and
xor
adc
sbb
mov
hlt
rorl
inc
jbe
mov
sbb
pusha
popf
mov
pop
adc
in
pop
push
sbb
insl
cmpsl
sub
outsl
jle
pop
pusha
mov
dec
fbld
push
adc
sub
add
loope
cld
push
out
add
mov
and
lcall
sub
xchg
out
inc
sub
cmp
inc
ljmp
loop
push
out
lods
scas
cwtl
jns
sahf
jle
in
pop
sub
sahf
fwait
lret
adc
leave
outsb
fprem1
aas
loopne
daa
loopne
cmp
call
fisubl
xchg
addr16
insl
fsubp
lds
jmp
push
adc
test
sbb
flds
pushf
aaa
das
rorl
jns
hlt
and
jmp
inc
rol
mov
or
in
dec
es
jae
mov
insl
mov
mov
dec
rclb
jecxz
mov
pop
sbb
nop
xchg
out
and
push
push
subb
inc
xchg
lods
cmp
fldt
and
aas
sub
push
adc
add
push
ret
mov
in
inc
std
and
pusha
push
jl
out
push
outsl
cwtl
shrb
or
jge
mov
mov
pop
cmp
fs
sub
inc
pop
js
mov
and
int3
xchg
xchg
cmp
daa
testl
mov
xor
shrb
xchg
sbb
rcrl
xor
push
ljmp
mov
inc
add
or
dec
loope
enter
jg
or
push
xchg
stos
rcll
mov
xor
jnp
cli
mov
stos
in
mov
lea
jnp
test
subl
popf
dec
cs
lret
out
shlb
cmpsb
pop
lahf
cmp
sub
push
add
pop
dec
hlt
fmul
out
inc
mov
jbe
in
xchg
and
sub
cmpsb
bound
out
in
mov
and
out
shl
mov
push
cltd
inc
pop
fidivs
and
jge
sahf
mov
enter
arpl
js
notb
icebp
sbb
test
loop
push
add
addb
sub
out
mov
repnz
cmp
xlat
adc
cmc
flds
repnz
inc
test
xchg
andb
mov
ret
mov
mov
jae
in
and
jns
jmp
cmc
ret
adc
sub
outsl
shll
repnz
sub
mov
lahf
adc
push
daa
shrl
push
dec
xchg
xchg
in
aas
arpl
sub
add
pushf
cmp
fs
pop
movsl
fsts
cmp
and
mov
enter
inc
arpl
mov
out
xchg
jge
scas
add
push
inc
push
xlat
sbb
adc
dec
clc
scas
arpl
testb
jmp
cli
and
cmp
xor
rorl
add
sub
xchg
add
popa
stos
into
xor
push
repnz
mov
and
test
in
enter
fsubrs
lods
in
push
sahf
and
cmpsl
mov
ja
cmpsb
push
mov
xchg
test
xor
jmp
cmp
sub
add
js
imul
xorb
pop
mov
test
sti
sbb
fcom
hlt
out
inc
leave
cltd
icebp
notl
dec
test
mov
insl
ficoml
dec
and
decb
sub
test
add
ret
adc
popa
cmp
iret
dec
push
dec
xchg
mov
movsl
loopne
mov
add
int
or
sub
ds
cmp
imul
pop
fsubl
popa
mov
jno
cmp
push
in
xor
xor
mov
inc
dec
push
or
imul
push
xchg
dec
test
cmp
aaa
dec
xchg
inc
fldl
and
adc
jle
ja
pusha
pushf
loope
stos
mov
sub
lds
fsubr
in
cmp
int
fnstenv
pop
and
sbb
cmpsb
dec
andl
sbb
or
in
shll
addr16
xchg
movaps
insl
xchg
inc
mov
pxor
add
dec
loope
xchg
enter
ss
imul
insl
cmp
outsl
rcr
aam
xchg
or
sub
cmp
shlb
lret
mov
adc
fs
outsl
lcall
pop
sub
inc
leave
lds
jnp
xorb
inc
popa
add
cmp
test
inc
std
inc
popf
jl
jnp
daa
push
pop
inc
jle
out
arpl
or
jle
hlt
addr16
subl
test
sub
test
mul
mov
into
rcl
stos
xchg
jns
mov
incb
xchg
cmp
add
dec
inc
in
std
pop
inc
icebp
add
in
nopl
cmp
dec
test
pop
dec
aad
in
push
call
mov
inc
jmp
sbb
emms
mov
mov
fcmovb
fisubs
ds
dec
jmp
xor
out
cmp
sti
jp,pt
stos
pop
sti
je
je
adc
sahf
push
xor
or
add
int
lret
sub
in
sbb
ss
aam
fcoms
pop
shrl
push
dec
mov
imul
add
mov
jno
lods
in
ds
nop
inc
jo
outsl
mov
mov
xor
mov
retw
xor
fsubs
mov
hlt
dec
sti
pop
stos
in
and
and
ret
cmc
sub
jns
loopne
xchg
js
scas
stos
out
jmp
push
lods
dec
sarb
int
test
or
bound
jecxz
mov
inc
adc
test
mov
fimuls
in
cmp
xor
sbb
addr16
out
mov
mov
outsl
xchg
jp
je
mov
rcrl
and
jne
push
nop
adc
icebp
inc
mov
xchg
sbb
mov
je
call
inc
imul
fdivl
adc
ljmp
mov
loop
je
dec
iret
push
in
mov
cmp
cmp
loope
cmp
daa
jg
ds
pop
push
dec
sub
ds
mov
pop
xchg
cld
xor
out
mov
dec
test
loope
jo
fstpl
mov
cmp
cmp
lods
inc
xchg
cmp
push
jecxz
mov
daa
xor
cli
int
xor
dec
ss
pop
aam
push
mov
imul
push
push
mov
je
es
xchg
lret
mov
dec
push
push
lock
jnp
lods
ficoml
cltd
add
fldl
add
mov
dec
adc
jne
mov
xchg
mov
ds
push
xchg
outsb
lret
movsl
pusha
loopne
dec
cli
popa
insl
cmpsb
test
sub
data16
fs
inc
rcrb
into
fwait
push
pushf
setbe
mov
pop
sbb
outsl
js
lods
shll
lcall
add
or
fs
hlt
mov
bound
pop
and
mov
cld
icebp
push
nop
in
sub
pop
leave
js
insl
pop
sbb
cmp
rcrl
in
jnp
or
insl
scas
pop
lret
sahf
outsb
jg
sti
dec
sbb
pop
fcomps
nop
je
inc
aaa
or
sti
pop
push
imul
test
and
pop
call
pop
sbb
cmpsb
out
shlb
mov
sub
in
cmpsb
pop
hlt
xlat
stc
cmp
insl
je
test
movsl
pop
sub
pop
mov
dec
bound
xchg
jne
ljmp
mov
mov
sub
cmp
movsb
cmp
pop
jecxz
stos
jnp
lds
shl
jns
add
aas
cmp
add
pushf
or
pop
dec
xchg
insb
sub
int
pop
xchg
addr16
dec
jl
jnp
test
bound
in
cmp
or
fldcw
jns
push
and
pushf
lahf
ret
mov
test
in
pusha
jmp
push
xchg
cmpb
pop
dec
cmp
lock
decb
out
ret
mov
mov
add
mov
and
loop
insl
fucomip
pop
mov
push
fmuls
mov
mov
pop
cmp
cmp
dec
jb
test
test
and
aas
lahf
sbb
sbb
imul
fcomps
jbe
cmp
xor
lock
inc
hlt
loopne,pt
lcall
cld
dec
dec
clc
fdivl
sbbb
ss
jbe,pt
jp
fldl
loope
or
arpl
inc
dec
sahf
push
jne
and
sarl
jl
mov
push
pop
mov
aad
test
or
scas
scas
push
mov
xchg
pop
aam
mov
ret
or
cs
aad
xor
lods
sub
sbb
shl
jbe
cltd
adcb
xchg
add
jbe
mov
test
mov
cmp
in
shl
jecxz
daa
jno,pn
dec
cmp
xchg
pop
loopne
add
adc
mov
insb
loope
or
xor
test
stos
scas
sub
mov
fcmovb
aam
sub
mov
test
ja
addr16
movsb
into
ret
ds
ss
dec
rcll
subb
int3
aad
fnstsw
or
lds
idivb
imul
adc
shr
lret
test
and
frstor
inc
fildl
cmp
mov
sar
int
push
xor
inc
dec
ja
fwait
xchg
push
pushf
add
dec
or
adc
xchg
mov
mov
xlat
aad
pop
push
xchg
lret
mov
inc
adc
xor
push
dec
clc
mov
es
dec
mov
dec
fstp
pushf
sbb
cmpsl
lock
cmp
gs
jmp
pop
stos
jo
imul
and
repnz
cmp
pop
negl
xchg
xchg
imul
adc
movsb
xchg
mov
rorl
dec
dec
jns
jno
vunpcklpd
subb
outsb
mov
loop
cmp
push
jle
dec
dec
gs
repnz
xlat
ljmp
pop
xchg
lcall
aaa
in
push
cmp
int
add
ret
inc
xchg
cwtl
cmpl
mov
cld
scas
and
push
sub
orl
mov
jnp
inc
iret
mov
fucom
aaa
pusha
jns
aam
xchg
cmp
mov
cmp
negl
fcmovu
dec
or
filds
pop
cmp
ftst
lret
sti
sbb
sbb
dec
mov
mov
jecxz
mov
jnp
pop
scas
ret
or
das
movsl
mov
xor
inc
xchg
in
and
or
in
mov
adc
out
clc
jb
sbb
lret
and
mov
icebp
adc
into
adc
into
in
or
pop
inc
pop
shl
cmp
adc
dec
or
jge
mov
movsl
and
inc
push
bound
test
dec
mov
push
leave
repnz
sahf
and
icebp
lea
add
mov
push
movaps
stc
sti
cli
jb
gs
dec
lods
sub
pop
or
aad
pop
sub
mov
add
and
mov
jmp
scas
cmp
pop
pushf
sbb
ret
and
aaa
lock
or
push
stc
pushl
push
jne
and
stc
out
mov
out
sub
push
jmp
jo
mov
pop
pop
fnstcw
bound
iret
rclb
jne
imul
adc
int
jp
add
push
xorb
popa
inc
daa
xor
sub
cmpsb
push
sbb
sbb
sti
inc
push
jns
push
aaa
imul
int
pushf
enter
add
jnp
dec
jmp
cmp
inc
cmp
mov
and
fdivrl
jae
movnti
push
and
push
test
out
mulb
jmp
je
lods
lods
add
int3
arpl
fildl
mov
clc
inc
movsb
xchg
je
xchg
inc
mov
cmp
shlb
jp
adc
addr16
cmpsb
dec
hlt
hlt
aas
inc
push
adc
gs
and
inc
cmpsl
dec
xchg
push
add
sbb
inc
icebp
and
jmp
mov
fdivp
jg
jae
lea
mul
dec
adc
mov
test
fisubs
or
js
xor
dec
sub
call
jns
jp
mov
ljmp
jge
loopne
jbe
mov
push
in
popl
subl
loop
shlb
or
xor
sub
ret
sbb
lods
pop
push
mov
js
int3
ljmp
in
fldenv
and
push
inc
hlt
cmp
movsbl
rcrb
mov
mov
push
xchg
inc
dec
and
icebp
sbb
adc
outsl
or
idivb
mov
jl
gs
adc
lret
jbe
xlat
adc
sbbl
sub
fcom
xor
add
mov
cmp
xchg
jno
cli
ud1
sbb
xchg
adc
jb
scas
cs
pushf
sbb
add
xchg
lea
fidivrl
push
outsb
lret
cltd
xchg
pop
outsb
leave
iret
xor
stc
mov
sbb
pop
scas
mov
sahf
loop
prefetch
or
call
cmp
and
mov
adc
push
retw
and
stc
aaa
ret
ret
outsl
xchg
nop
loopne
xchg
fistl
aaa
cmc
jl
jb
test
or
lock
adc
jbe
ds
pop
insl
scas
outsb
dec
sbb
inc
push
jg
imul
insl
dec
fistpl
mov
push
fcoms
pop
or
mov
sub
fs
cmp
cli
popl
push
sarl
jo
jae
in
call
stc
subl
push
pop
and
out
jae
pop
xor
arpl
jns
jge
in
add
dec
int3
daa
enter
cli
movsl
sub
faddp
das
js
jl
scas
mov
xchg
imul
movsb
inc
adc
ss
into
xor
sub
loope
cmp
outsl
stos
out
test
lret
add
cmp
mov
ds
and
imul
scas
mov
gs
inc
jge
xchg
add
pusha
sbb
icebp
push
fldt
aad
fs
scas
in
or
sub
shr
mov
and
cli
lock
jge
jns
adc
leave
clc
sti
lods
mov
int3
push
sub
pop
stos
dec
or
jnp
mov
js
fs
lea
push
ret
aas
and
popa
repz
movsl
cmp
adc
mov
sbb
mov
int3
push
fcompl
int3
lods
xchg
mov
cld
nop
test
out
imul
out
mov
inc
xor
pushf
inc
sarb
jns
add
ja
xor
mov
iret
mov
fidivl
loope
sub
inc
iret
insl
int3
pushf
pop
mov
sub
pop
fwait
in
adc
pop
scas
scas
adc
pushf
jle
push
jmp
pusha
in
dec
sub
sub
icebp
and
call
add
pop
lret
sub
push
xchg
sub
sbb
out
into
push
mov
scas
sbb
imulb
setns
shrb
in
sti
mov
rcr
mov
mov
pop
adc
push
fstps
repnz
xchg
cmc
xlat
xchg
pusha
fadds
subl
inc
test
sbb
repnz
jg
popa
leave
mov
shr
sbb
movl
outsb
mov
and
xor
jge
fwait
inc
xlat
lea
lods
xchg
enter
lcall
or
fdivrs
fst
xchg
add
ds
jmp
cmpsl
push
xchg
nop
test
inc
push
lahf
sbbb
xchg
inc
fdivrs
push
or
mov
daa
imul
enter
mov
fdiv
imul
iret
mov
jbe
pop
sub
cmc
sbb
xchg
xchg
add
or
int3
xchg
inc
mov
clc
mov
test
mov
fldenv
push
fldcw
ret
int3
scas
leave
dec
xchg
add
dec
sub
lret
inc
pushf
out
call
inc
cltd
in
mov
stc
mov
and
daa
loopne
mov
xor
inc
fnstsw
jno
dec
cmpsl
cld
mov
popa
je
sbb
lret
cld
mov
push
add
cmpsl
cmpsb
and
mov
jno
movsb
mov
xor
and
and
outsl
repnz
push
subl
daa
pusha
lahf
or
fxch
fwait
lret
cmp
out
out
mov
insb
lret
sbb
mov
adc
lret
test
test
sbb
icebp
push
inc
mov
cs
js
push
mov
outsl
out
cmp
cmc
in
add
mov
out
mov
cltd
andl
nop
xlat
stos
adc
inc
push
adc
cld
fisubrs
les
and
test
aas
addr16
in
mov
lret
roll
push
cli
shlb
pop
push
out
xor
mov
in
mov
mov
xchg
sub
mov
sub
xchg
and
and
and
aad
inc
cwtl
pop
pop
rorb
jmp
sub
dec
mov
mov
adc
cmpsl
jnp
cmc
inc
jo
sbb
lahf
cmpsl
lret
or
sahf
pusha
mov
clc
pop
mov
cmpsb
pushf
cmp
jns
mov
jge
bound
popa
sbb
push
add
into
ja
les
in
out
push
xchg
push
sahf
dec
stos
dec
ja
ja
lret
aas
movsb
mov
cmp
mov
test
xor
jg
cld
jns
dec
shlb
div
push
mov
xorb
cmpsl
arpl
or
jnp
icebp
fs
in
ja
cltd
fsubl
sbb
adc
mov
add
test
dec
pop
outsb
iret
test
jo
and
int3
shrl
xor
xchg
xchg
arpl
cmp
std
lods
cli
scas
dec
or
fcmovu
repnz
pop
shrb
cmc
rcrl
mov
fucomi
lret
jp
and
sbb
lcall
or
xor
mov
cmp
inc
bound
sbb
push
sar
sbb
fisttpl
push
gs
daa
repz
or
inc
arpl
fs
stc
pop
stos
jns
lcall
lahf
sbb
in
jb
xchg
data16
pop
lods
jg
push
xlat
xorb
mov
and
jge
push
int3
shlb
call
ret
push
in
xor
repnz
push
sub
sub
pop
mov
mov
jmp
jmp
jo
xchg
fiadds
in
and
add
pusha
dec
inc
movsb
push
sub
insl
roll
pop
cmp
call
andl
jb
rclb
add
ret
mov
sub
xor
add
ret
pop
jl
scas
loop
mov
mov
icebp
out
roll
in
daa
out
push
dec
fisubrl
repz
ret
sbb
adc
pop
xor
mov
mov
mov
imul
inc
mov
add
out
sub
scas
jns
mov
adc
fcomp
add
cmp
clc
inc
sub
std
and
push
dec
add
xor
adcl
sbb
dec
clc
cmp
mov
sub
scas
cmp
mov
sub
pop
cmp
add
int
dec
daa
mov
insb
into
ljmp
int3
jge
outsb
xor
xchg
xchg
mov
fiaddl
or
dec
shll
js
push
divb
stos
insb
jp
int
fcoml
xchg
jne
mov
cmp
fwait
push
stos
dec
dec
test
sahf
ss
aad
enter
inc
sub
test
outsb
push
loop
shrl
arpl
xchg
popf
ret
push
test
jne
lds
jmp
xchg
and
mov
notl
mov
cmp
cld
pusha
test
enter
mov
mov
jmp
pop
mov
add
or
sub
inc
in
jge
sub
fs
inc
and
jbe
out
jmp
inc
inc
or
cmp
mov
jne
pop
and
enter
popa
push
fdivl
xchg
and
and
cltd
cltd
mov
movb
scas
cli
add
call
jb
lret
and
mov
push
cmp
repnz
push
mov
add
adc
xchg
mov
jnp
pop
into
jle
ret
std
test
jecxz
addr16
adc
pop
or
xor
sub
leave
inc
cmp
inc
sbb
in
dec
shll
jns
pop
mov
pop
test
mov
icebp
jp
lea
fsubs
sub
sub
sub
and
aam
mov
pop
cmc
sar
xor
sbb
pop
mov
outsl
push
fisubrl
xchg
in
lret
mov
jb
fyl2x
mov
stos
jo
mov
push
out
push
stc
push
or
lods
mov
dec
push
and
pop
data16
bound
and
xchg
gs
call
jnp
dec
rorl
movsb
int3
jns
bound
xor
iret
mov
jne
push
dec
push
jmp
or
icebp
pop
fdivrs
in
fistpll
jp
cld
or
add
adc
clc
sbb
ror
jnp
inc
daa
call
cmp
xlat
das
ret
dec
mov
rorb
jns
xchg
sbb
ret
inc
in
data16
cmp
in
sbb
jl
test
mov
or
lret
nop
adc
add
js
push
lods
popa
in
ss
das
addb
cld
push
je
repnz
xor
pop
jns
arpl
sbb
repnz
aaa
aam
in
ja
mov
mov
lcall
mov
daa
js
adc
adc
out
int3
and
jbe
push
or
outsb
xchg
xor
cmp
enter
testl
push
xlat
lods
push
jno
outsl
cmp
cmp
cmpsl
pop
and
lahf
int
ss
xor
fcompl
add
je
in
adc
jl
sti
js
stc
ss
inc
test
add
scas
and
cmp
ret
das
ret
daa
ficoml
stos
shr
nop
jb
leave
dec
sti
rcl
pushf
jne
enter
lds
add
sti
dec
push
loopne
pusha
daa
nop
mov
gs
mov
sub
inc
loopne
icebp
dec
in
jg
outsl
mov
movhps
sub
cmp
jb
jno
addr16
push
mov
pop
sahf
push
inc
arpl
jge
sbb
adc
mov
ret
pop
xchg
js
aaa
jns
jns
dec
inc
pop
or
jecxz
jp
xchg
enter
dec
cmp
jmp
push
push
in
xchg
cld
lock
in
mov
xlat
enter
inc
pop
jg
push
push
jno
icebp
dec
xor
xchg
xor
outsl
pusha
jmp
pop
push
cs
add
ss
fs
and
cwtl
int
cmc
outsl
push
loope
xor
xor
push
sub
adcb
add
add
call
ja
aas
push
cli
or
aaa
dec
jg
push
dec
mov
xor
cmp
mov
cmp
cmp
jle
scas
bnd
sbb
idivb
sub
cld
add
sahf
cwtl
insb
repnz
mov
into
inc
sub
xor
lds
adc
sbb
push
int3
loopne
icebp
dec
jns
cmc
mov
jl
sub
lock
jb
xchg
jmp
jns
cmp
mov
leave
das
dec
pop
mov
cmp
movsl
jmp
cmp
mov
xor
jae
and
xor
mov
call
inc
out
add
arpl
arpl
push
lods
jns
imul
or
call
cmp
xchg
push
mov
in
outsl
add
mov
or
cmp
xor
mov
dec
cmp
add
sarl
pop
add
outsl
push
shr
repnz
or
daa
mov
inc
cmp
shl
ss
fisubrs
xor
xchg
or
loop
flds
bound
hlt
mov
insl
lret
stos
sbb
ret
pop
into
pop
cmp
fisttpll
ret
add
xor
xchg
lea
mov
iret
inc
push
inc
add
pop
push
xor
jne
cwtl
outsb
and
mov
jmp
subl
outsb
inc
js
lahf
jbe
dec
inc
push
inc
aad
sub
in
push
sub
push
gs
in
lds
mov
adc
xchg
xchg
cltd
les
lds
gs
or
dec
mov
repnz
ds
sarl
sar
pop
pusha
inc
xchg
lds
mov
inc
bound
stos
hlt
push
ljmp
push
sbb
mov
lahf
into
lret
cmp
xor
add
pop
es
stos
test
jmp
sub
es
mov
or
pop
imul
mov
mov
pop
inc
jmp
scas
push
pop
js
sbbb
movb
cltd
mov
subl
stc
mov
ljmp
aaa
jle
aas
adc
test
add
mov
push
sub
mov
dec
inc
pop
call
pop
add
push
push
dec
test
enter
cmp
jle
fisubrl
cli
sar
fldcw
pop
adc
adc
mov
xorl
mov
push
cli
cmp
repz
insb
pushf
faddl
xor
es
and
lret
xchg
inc
out
repz
cmovae
xchg
cwtl
jge
js
push
pop
cmp
xlat
add
fisttpll
jns
add
arpl
negl
mov
stos
sbb
fimull
inc
push
rcll
sbbb
add
jmp
cld
aam
repz
xchg
mov
gs
mov
inc
sbb
sarl
cmp
lock
std
dec
cmp
test
push
repz
popa
test
dec
mov
pop
sub
mov
mov
mov
jge
pushf
or
fidivrs
mov
inc
imul
sub
fnstenv
push
mov
xchg
inc
lea
xor
mov
xchg
jbe
pop
scas
dec
cmpb
addl
push
mov
addr16
mov
push
ds
in
movsb
movsb
push
pop
mov
aam
mov
mov
or
mov
or
call
lods
cwtl
mov
cmp
outsb
pop
call
jo
leave
js
in
jno
in
fxch
rol
mov
jp
fdivp
sub
dec
push
js
loop
or
outsl
es
jmp
push
pop
scas
and
and
or
gs
outsl
ja
rcll
mov
test
xchg
xor
aaa
addb
negb
adc
icebp
imul
and
loope
lret
dec
cmp
and
enter
fistps
sub
mov
sarl
push
fstpl
stos
sarl
adc
repnz
or
push
dec
in
call
ss
loope
stc
adc
fs
fldenv
incb
aas
loop
and
jno
or
fdivrs
imul
fdivrl
aad
imul
pushf
popf
test
orb
xor
sbb
dec
sarl
xchg
outsb
jle
outsl
test
cmc
popa
jmp
loopne
shlb
sbb
jl
add
mul
xlat
and
adc
or
punpckhdq
mov
fwait
mov
cmpsb
hlt
fldz
test
cmp
jnp
out
rorl
in
movsl
hlt
std
push
jl
jl
lds
scas
call
add
imul
jecxz
cmp
pop
dec
and
inc
jle
pusha
inc
push
and
sbb
jno
xorb
rcll
push
into
push
fwait
sbb
xchg
ja
es
jmp
stc
out
inc
iret
js
push
pop
adcb
lods
es
pop
cs
filds
roll
popa
lods
cmp
jecxz
bound
shlb
fdivrp
cld
add
das
fidivrl
cmp
sub
push
jmp
ret
aaa
pop
xor
ja
mov
les
aam
pop
jbe,pt
xor
or
mov
aas
sbb
or
das
mov
jg
and
stc
pop
aad
repz
pop
in
push
pop
out
leave
std
sahf
gs
repnz
xor
in
jle
pop
xchg
jle
or
data16
lock
sti
cs
rorb
out
jns
lods
sahf
push
adc
adc
ficompl
movsb
insb
out
jb
jl
push
or
subb
lret
mov
mov
in
xorb
xor
push
insb
mov
inc
mov
xchg
or
pop
in
inc
and
in
push
cmp
or
inc
jbe
aas
xor
pusha
adc
incl
insb
sbb
test
pop
add
enter
jle
cmp
and
lods
push
jne
and
aaa
push
popa
add
scas
fnsave
lcall
mov
lret
shl
xlat
and
and
shll
push
pop
cmp
mov
insl
scas
push
sbb
insb
lods
mov
jle
xchg
cmc
jns
lcall
xchg
pushf
imul
pushf
std
je
loope
mov
addr16
leave
jne
popa
sahf
ss
and
shll
mov
sub
push
inc
inc
jnp
loope
xlat
in
je
jb
rcll
cli
imul
mov
and
pop
ficompl
jg
push
push
mov
mull
jbe
les
or
sti
jae
mov
dec
shll
cmp
stc
mov
les
mov
das
ds
xor
ds
dec
cmp
out
mov
ret
add
xor
mov
or
xorb
xlat
sub
adc
incb
add
add
filds
xchg
addl
push
and
inc
pop
pop
push
mov
fdivrl
jle
outsl
xlat
ret
mov
shr
sub
loope
jae
mov
in
xor
lret
in
gs
sub
mov
lea
cmpb
sbb
pop
add
fcom
xchg
stos
sbb
or
push
iret
xor
inc
sub
int3
in
std
into
lret
cli
push
mov
stos
sbb
jecxz
and
in
jg
fcmovnbe
mov
push
es
ja
dec
loope
jbe
inc
clc
and
or
pop
imul
dec
in
push
cltd
cmc
dec
in
cmp
xor
cld
call
inc
mov
aaa
mov
addr16
rclb
xor
adc
push
jno
or
mov
mov
dec
dec
and
testl
mov
jo
jl
xor
pop
add
outsl
test
leave
mov
adc
scas
pushf
mov
ss
xchg
xor
mov
addr16
lds
subb
cmp
mov
add
push
cmpsb
pusha
push
push
pop
pop
xor
push
orl
loope
ja
mov
jnp
push
dec
movsl
jg
adc
lds
ret
movsb
in
scas
mov
jl
imul
or
or
inc
scas
out
stos
cmp
fldenv
dec
loope
mov
pop
rcrl
pop
mov
jne
popf
sbb
aam
stos
add
xchg
cmpsb
ret
jmp
lahf
int3
popa
push
outsb
shlb
xchg
test
push
movsl
out
cmc
inc
sti
inc
in
rorb
inc
jmp
movsb
xchg
fimuls
leave
inc
jnp
jle
popa
adc
sub
push
jge
cwtl
shll
xchg
add
push
pop
rcrl
pop
test
fdiv
shlb
addr16
cs
push
add
jge
bsf
movsb
fistl
fadds
adcb
leave
nop
dec
ds
jmp
sbb
inc
call
xchg
pop
mov
xchg
xchg
loop
jg
fs
into
cmp
les
sub
mov
dec
or
sub
mov
or
or
push
dec
jl
push
stos
jle
aad
shr
syscall
adc
cmp
push
jae
sar
aad
insl
push
mov
lahf
inc
xlat
mov
push
mov
call
push
mov
fst
je
mov
xchg
rdpmc
push
cmp
mov
sub
scas
xchg
or
mov
jno
shlb
shl
pop
xchg
int
fstp
inc
jns
pop
imul
lock
mov
adc
mov
pop
cmp
or
fwait
mov
jmp
aam
test
sub
ljmp
and
add
cmpsb
stos
xor
movsl
sub
jmp
data16
ror
mov
jne
cmp
mov
xchg
mov
cmp
add
mov
cmpsb
inc
bound
push
xchg
scas
mov
pop
add
adc
cli
fildl
arpl
inc
frstor
sbb
cmpsb
xlat
stos
jp
mov
out
add
cli
in
or
xchg
fs
ja
mov
ds
mov
mov
arpl
cmpl
cmp
jmp
test
pop
arpl
dec
add
and
ja
mov
jbe
mov
push
dec
sbb
in
pop
jge
mov
push
cld
ret
adc
iret
out
pop
lret
dec
mov
push
xor
dec
xchg
outsb
jne
aas
stos
cmp
pop
inc
jl
jle
shrl
mov
fstpt
mov
inc
mov
inc
cmpsb
imul
bound
ret
pop
incl
add
xchg
sbb
push
loope
mov
and
pop
xchg
mov
mov
call
orb
repz
or
cmpsb
pop
jnp
xchg
stc
sbb
scas
in
jns
test
jge
cld
push
ljmp
gs
push
lods
cmp
je
mov
aad
cli
js
fucom
gs
sub
out
fidivrs
sbb
or
loop
adc
shll
mov
out
cmpl
in
enter
sti
jp
add
jae
flds
cmpsb
push
cmc
sahf
xor
xor
jb
cld
inc
cmpsl
test
sarl
mov
jns
dec
imul
movsl
xor
add
aad
push
fildl
sub
xor
pop
frstor
or
mov
jne
cmp
int3
subb
sbbl
aaa
insb
or
insl
pop
lret
out
popa
imul
sub
xchg
add
push
inc
call
add
dec
mov
out
lods
xchg
sti
fdivrl
push
jmp
es
adc
add
loop
leave
or
sbb
mov
xor
inc
popa
mov
sub
cld
outsl
mov
mov
mov
push
sub
nop
lods
int3
or
jns
test
scas
pop
psllw
daa
adc
adc
pop
and
call
xchg
popa
stc
mov
pop
adc
insl
addr16
push
or
outsb
pop
enter
jns
xchg
inc
and
cwtl
movl
rcr
enter
inc
nop
pop
mov
aas
ret
cmp
iret
lahf
cmpsb
jnp
inc
shr
cmc
mov
out
pop
pusha
xchg
fldt
xchg
aam
sbb
bound
dec
mov
xor
mov
popa
cwtl
cmp
leave
xchg
ret
adc
adc
or
pop
push
dec
mov
mov
ljmp
loope
or
test
shll
pusha
jg
inc
aam
jae
fstpt
in
outsl
sbb
mov
jae
js
inc
fldl
in
fneni(8087
mov
adc
pop
and
dec
ds
enter
mov
mov
ret
mov
mov
sbb
scas
fsubr
sbb
cmpsl
fistpl
xchg
mov
into
mov
out
je
xor
inc
int
xchg
in
stc
je
insb
adc
negl
adc
es
es
lret
pop
cmp
push
adc
jns
test
es
lods
leave
adc
ds
pop
scas
test
adc
inc
cli
mov
xchg
inc
arpl
cmp
mov
mov
fwait
cltd
adc
inc
lock
push
jecxz
lods
es
mov
adc
xchg
push
ljmp
int
cmp
and
scas
or
cltd
push
jbe
sti
nop
mov
stos
mov
sub
jbe
dec
test
icebp
pop
mov
adc
dec
imul
xchg
xchg
xchg
add
pop
in
sahf
gs
scas
icebp
cltd
aam
cmpsb
push
mov
dec
mov
arpl
out
dec
in
or
push
xchg
out
dec
ljmp
mov
xchg
imul
test
cmp
inc
and
stc
fnstcw
mov
adc
in
xor
sahf
lds
mov
sub
fbstp
daa
shrb
popf
xor
jp
insb
movsl
scas
loope
xchg
loop
aas
lret
and
xchg
hlt
frstpm(287
test
sbb
or
push
jg
repz
mulb
rorl
movsl
clc
jae
adcb
jle
bound
pop
jns
xchg
pop
js
mov
add
jnp
jp
enter
icebp
mov
mov
mov
je
cmp
pop
and
or
pop
inc
popa
out
inc
adc
dec
xor
mov
pop
std
out
repnz
out
out
daa
gs
jnp
push
sti
push
mov
rolb
pop
fstp
push
pop
lock
mov
sbb
rol
test
push
aaa
xor
pop
jmp
in
adc
mov
cmp
stc
dec
mov
adc
ret
repz
jl
or
push
shl
outsl
outsl
call
out
and
repz
adc
inc
pop
or
pop
std
icebp
scas
sub
mov
jb
jp
adc
adc
rorb
or
es
jnp
outsb
push
sub
sub
in
repz
hlt
push
cmp
mov
sbb
pop
xor
xchg
out
icebp
loop
pushf
and
fs
jg
pop
insl
cli
dec
inc
test
jb
and
lret
cs
add
xlat
jb
mov
sti
lods
scas
dec
mov
or
jmp
push
pop
fsubl
inc
mov
dec
and
jns,pt
ljmp
outsl
es
xchg
push
cmp
dec
or
in
xchg
ja
push
lret
fdivrs
mov
dec
ret
nop
movsl
pushf
in
out
cmc
in
stc
das
pop
in
mov
mov
shrl
out
xor
pop
leave
ss
inc
sbb
mov
mov
mov
jnp
dec
pop
out
es
notb
rep
hlt
and
icebp
sbb
aas
jle
jp
out
sbb
cmp
int
les
add
and
inc
out
adc
imull
sub
nop
mov
add
push
aaa
cmp
dec
pop
loopne
or
sub
fmul
stos
add
jl
lods
out
lock
cld
je
sbb
jae
lds
lret
int
xchg
inc
pop
sub
add
dec
lahf
cmp
mov
jp
inc
sarb
xchg
xchg
out
sbb
test
mov
and
test
and
jg
mov
pop
jbe
xchg
lods
pushf
or
hlt
cmp
sti
pop
xchg
out
push
sub
mov
mov
scas
mov
xchg
enter
sbb
mov
or
repz
jmp
adc
shll
sti
dec
lcall
frstpm(287
ss
and
andb
pushf
nop
cmp
cmc
jp
incl
or
repz
jb
pop
mov
test
roll
out
std
mov
cwtl
stos
test
mov
pop
hlt
stc
std
sbb
jo
add
pop
add
and
jl
xor
test
cmpsb
pop
mov
imul
ficompl
push
jne
mov
sti
xor
xchg
cmp
jo
into
jle
jmp
aas
lods
stos
scas
into
mov
shrl
mov
mov
fwait
aaa
js
leave
xlat
mov
daa
xchg
stos
cmp
lcall
push
frstor
sub
int3
xchg
cmp
gs
mov
jle
fsubr
lret
jno
sub
adc
dec
stc
inc
cwtl
or
ds
cmc
sub
fsubrp
test
out
pop
fmuls
out
ss
in
or
clc
outsl
adc
mov
stos
vaddss
lret
jae
sub
dec
jbe
loope
add
pop
mov
inc
mov
inc
in
jne
cmp
jmp
ss
push
adcl
push
pop
cmp
roll
mov
add
mov
inc
and
xchg
mov
ja
inc
repz
mov
je
mov
or
enter
pop
mov
dec
dec
aad
repz
in
test
push
ret
cltd
cmc
fs
dec
xor
push
in
cmp
sub
movsb
push
sub
xchg
and
jl
mov
clc
ss
xchg
stos
arpl
mov
adc
int
jl
mov
aam
sub
subl
outsl
cmp
iret
dec
mov
scas
gs
mov
lods
scas
xchg
cwtl
lret
insl
mov
mov
mov
pop
dec
lahf
fidivs
mov
lcall
and
mov
mov
mov
mov
push
int
jp
arpl
adc
jp
cmp
and
jns
jg
enter
fidivrl
add
cmp
lea
in
imul
lods
jne
repz
stos
mov
jae
xchg
adc
icebp
dec
jne
cmp
mov
cmp
jmp
lret
and
nop
and
push
insl
push
aam
cld
mov
push
add
sahf
stos
and
jmp
sti
icebp
sbb
sahf
call
adc
nop
cmp
ret
int
fcoml
je
pop
mov
push
pop
neg
int3
clc
mov
inc
jns
fstl
lcall
stos
dec
pop
jecxz
sbb
div
test
jp
stos
xchg
test
jmp
fldenv
in
daa
cmp
push
pushf
push
adc
or
pop
jns
add
pop
cld
pushf
jge
pop
shll
sub
test
addr16
mov
adc
fucomi
addr16
xor
push
sub
idiv
xlat
push
mov
loopne
jb
dec
outsb
fisubrs
pop
dec
fistpll
push
inc
addr16
in
cmp
aas
xlat
popa
push
dec
mov
dec
pop
aad
xchg
flds
cmp
test
or
outsl
and
outsl
popa
mov
in
ret
xor
dec
ljmp
movsl
nop
icebp
dec
in
mov
loop
sub
js
adc
mov
sbb
fs
nop
out
movsb
jae
addl
fmuls
shlb
dec
add
shlb
dec
mov
test
imul
leave
push
cs
mov
sbb
dec
pop
inc
push
push
hlt
pop
add
rcll
imul
subb
das
fcoml
jl
in
sub
arpl
jle
inc
cmp
outsl
push
mov
sbb
in
lods
dec
jge
fimull
xor
js
in
sahf
lret
test
lret
mov
mov
out
mov
shll
mov
movsb
aas
call
negb
das
jo
cmp
pop
xchg
aas
jge
mov
or
mov
loope
push
sub
lcall
ljmp
ljmp
pop
mov
ret
in
mov
loopne
inc
rcl
lea
mov
and
mov
add
mov
sbb
lcall
and
jl
imul
mov
inc
cs
repz
arpl
ret
icebp
sbb
lock
jmp
stos
daa
mov
shll
lds
xor
call
inc
sarb
pop
inc
jbe
popf
mov
addr16
cltd
hlt
ljmp
test
sub
add
xchg
jge
xor
sbb
mov
call
lods
cmpsl
push
cmp
jae
sbb
cld
repnz
xchg
insl
sub
sub
and
notb
jmp
shrl
shlb
pushf
in
pop
sub
cltd
dec
adc
mov
das
jnp
add
lcall
hlt
dec
in
out
fisubrl
push
shrl
pop
cs
ljmp
ja
jno
es
xchg
xor
insl
cmp
push
rcl
and
add
int3
push
pusha
rorl
adc
or
cmpb
fcom
scas
gs
and
jle
sub
and
pop
repz
sub
and
dec
cmp
jno
xchg
pop
mov
xchg
jb
push
ljmp
lock
or
repz
add
movsl
mov
scas
xchg
rep
cmp
mov
adc
call
loop
idivl
mov
mov
mov
mov
add
lcall
lret
mov
frstor
xchg
test
and
push
sub
dec
jno
sbb
fnstcw
sbb
pusha
jnp
loop
es
aad
pop
cltd
stc
push
add
jl
pop
cwtl
ja
fisttpl
and
arpl
add
inc
lock
mov
jge
in
and
dec
mov
in
movsl
imul
insl
fstp
add
sub
mov
call
sub
cmp
popa
jp
mov
insl
insl
jns
js
out
sahf
dec
fmul
jns
test
les
jnp
aam
pop
out
xchg
cwtl
pop
test
dec
xchg
adc
inc
inc
sbb
fistps
lahf
in
pop
cmp
repz
sbb
pop
into
into
jl
sbb
cmp
mov
stc
leave
ds
rcr
sbbb
je
sbb
bound
ss
fs
icebp
push
add
sub
mov
lods
ret
out
add
pop
adc
sbb
pop
and
sbb
popl
and
mov
mov
cmp
test
int
shr
insb
cmc
push
cmp
mov
out
jl
mov
rcr
add
dec
fs
lcall
scas
lahf
ret
inc
adc
pop
push
xchg
or
xchg
out
jg
push
scas
cmpb
xchg
xor
xchg
dec
arpl
stos
ss
mov
lret
xor
xchg
push
xchg
loope
ret
adc
loope
outsb
push
jae
ficoms
push
sbb
push
ret
sub
ss
pop
push
lret
cmpsb
ja
sbb
lods
jl
sahf
add
jbe
xchg
sahf
sub
jo
push
pop
jbe
mov
mov
xor
and
add
dec
mov
sub
mov
adc
xor
mov
pop
repz
icebp
in
leave
mov
xchg
repz
jmp
adc
pop
mov
dec
xchg
sbb
imul
and
pop
pop
push
add
or
jmp
sbb
cmp
cmpsl
ljmp
std
es
sbb
mov
pop
data16
frndint
jle
addr16
test
js
xchg
mov
sbb
repnz
xchg
mov
jbe
outsb
xor
mov
cmp
stos
jo
hlt
lods
sahf
movsl
lcall
mov
ret
pop
jmp
loope
lahf
scas
xchg
dec
xchg
xor
scas
dec
aaa
icebp
scas
cmp
mov
adc
jmp
push
data16
fld
mul
iret
addr16
pushf
aam
lock
cmp
xchg
stos
lods
js
pop
or
popf
ret
mov
lahf
aaa
jno
xchg
popa
sub
mov
les
cmp
cmp
mov
aad
fistpl
jle
jmp
xorb
adc
bound
pop
and
cmpsl
mov
xchg
cmpsb
imul
dec
je
sub
push
sbb
pop
pushf
dec
mov
dec
mov
mov
popf
jnp
or
dec
or
fsubs
pop
aaa
adc
inc
push
testb
icebp
mov
data16
lea
xor
les
xchg
cmp
pop
insb
test
lock
xor
xchg
lcall
js
mov
fstpl
jle
stos
sub
dec
jge
lcall
xor
dec
xor
cmp
xorb
clc
loope
js
mov
cmp
sub
mov
rolb
insl
sub
xchg
leave
les
adc
push
mov
hlt
cmpsb
mov
aad
fidivrl
testl
and
jo
sbb
cmp
mov
inc
add
les
and
and
mov
shll
loop
lds
cs
enter
xchg
rcrb
push
lock
cmp
aad
aam
leave
pop
aas
popa
je
and
mov
hlt
fmull
sub
gs
push
loope
push
inc
adc
or
xor
xchg
rorl
ljmp
or
jnp
add
out
out
xchg
hlt
lods
mov
xor
sbb
xor
cli
sub
imul
inc
pop
imul
daa
add
jns
add
fcom
sbb
push
dec
cmpl
jecxz
push
cmpsb
fildll
fucomip
pop
outsb
loop
cmp
dec
xchg
sti
scas
jmp
or
fs
mov
popf
jne
mov
rolb
mov
je
jecxz
pushf
in
std
mov
int
repnz
jb
xchg
out
jbe
fstpt
jnp
jmp
sub
pop
pop
adc
or
outsl
xorb
js
stos
add
cs
ret
scas
rorl
and
mov
or
sarl
repz
roll
fisubl
jbe
imull
add
ljmp
sub
mov
leave
and
stc
nop
mov
aaa
fmulp
in
cs
fldt
in
in
out
fldenv
sbb
mov
pop
pop
cwtl
sbb
push
hlt
xchg
sub
adc
faddl
jge
sub
and
pop
cld
in
lods
aam
mov
stos
frstor
pushf
mov
fcoml
push
add
xchg
adc
mov
mov
push
enter
lret
js
xchg
lret
xchg
jp
aas
stos
dec
inc
in
dec
popf
aas
xchg
sti
cmpsl
mov
pop
add
pushf
mov
dec
dec
dec
ss
sub
aad
pop
or
stos
mov
push
aaa
jae
and
mov
add
ret
test
or
sub
cmpsl
in
or
test
gs
push
js
movsb
mov
xor
push
ljmp
mov
cmp
pop
cmpsl
clc
subb
repnz
pop
divl
decb
int
mov
stc
xor
mov
and
lods
xchg
pushf
scas
js
or
cld
xor
push
xchg
popa
dec
or
mov
cld
mov
imul
scas
rcrl
adc
mov
ss
stc
lret
gs
gs
repz
loope
xchg
mov
or
cld
push
jno
das
adc
movsb
xor
mov
cltd
les
xchg
mov
sarl
adc
in
das
jnp
insl
add
out
addr16
mov
push
xor
aas
sbb
push
dec
and
xor
sbb
into
sahf
push
mov
jg
cmpsb
pop
out
jnp
push
out
in
loop
int
shrl
mov
add
mov
cmpsl
in
mov
repnz
stc
adc
dec
dec
stos
decb
pusha
arpl
jmp
inc
fldt
pop
bound
xor
ret
mov
adc
cmp
cmp
aad
cmp
int3
push
jp
pop
cwtl
fimuls
adc
ds
cmp
push
imul
loopne
fmull
addr16
arpl
mov
or
mov
sahf
rcrl
outsb
inc
rcrb
out
push
push
add
mov
or
sbb
add
sahf
jge
insb
in
pop
aas
imul
and
xchg
stos
xchg
in
shll
loopne
mov
das
ret
sbb
xchg
stos
lds
arpl
addr16
or
xor
sbb
ja
jmp
fimuls
pop
xor
roll
mov
inc
ljmp
mov
jo
lret
mov
clc
mov
push
push
out
mov
lods
lret
mov
push
cld
adc
hlt
loop
and
jp
xlat
and
xchg
adc
sbb
xchg
pop
xor
or
repnz
or
push
pop
shll
inc
inc
ss
mov
enter
rclb
dec
dec
arpl
sahf
push
imul
out
sub
xor
mov
fisttpl
cld
loopne
cs
pop
cmc
scas
push
push
enter
inc
pop
xchg
out
out
xchg
jp
jg
xchg
xchg
dec
dec
into
sbb
negb
push
imul
add
cmpsl
dec
push
sbb
in
rorl
test
and
mov
jb
mov
mov
push
lret
lods
int3
cld
test
mov
fstpt
repnz
lea
cmp
outsl
ljmp
xor
cmpsl
out
fs
aaa
mulb
fstpt
jle
jnp
xchg
into
ljmp
cmpsb
cmp
nop
pop
jnp
cmp
adc
iret
dec
addr16
xchg
lret
jno
or
fildll
adc
scas
xchg
out
jle
insb
shll
repnz
stos
push
outsb
ljmp
dec
fdivl
in
out
xlat
xchg
xchg
xchg
or
adc
fcmove
push
mov
bound
shll
out
mov
repnz
xchg
push
andb
in
popa
mov
xchg
andb
jne
cmpsb
pop
out
fstl
call
and
mov
push
ret
lods
aaa
es
sub
jnp
pusha
jge
push
ret
clc
pop
mov
push
loope
imul
jle
jg
jge
hlt
xchg
inc
pop
or
ja
out
and
aas
pmulhw
pop
push
sbb
iret
jb
and
into
aad
mov
sub
dec
jnp
cld
inc
xlat
mov
fidivrs
aas
xchg
inc
sub
rcrl
adc
pop
xlat
cmp
fcmovnb
cmp
mov
cmp
dec
scas
popa
lods
sub
push
sub
sub
jne
mov
cltd
repz
daa
into
std
mov
dec
fmull
movsl
xor
mov
jmp
dec
mov
jo
cmc
cmp
lods
dec
out
das
rcll
jmp
push
dec
ljmp
adc
dec
adc
daa
movsl
jge
jmp
dec
adc
lods
out
adc
repnz
xchg
mov
ficomps
mov
nop
cltd
jno
inc
sarl
ud0
std
mov
lds
stos
cmc
shrb
sbb
cmp
dec
outsl
inc
pop
cltd
and
aaa
xchg
sbb
lock
fwait
out
adc
cltd
mov
xor
and
inc
adc
mov
pop
inc
push
add
cs
aas
stos
call
int3
pop
adc
pop
mov
arpl
mov
cmpsl
ror
lock
int3
and
push
pop
mov
stos
arpl
shr
mov
adc
mov
jl
mov
test
xchg
jo
addl
mov
addr16
cmp
sarl
shll
mov
pop
mov
push
mov
or
adc
sub
js
ret
dec
fwait
push
mov
push
add
into
sub
mov
sub
icebp
xor
mov
repz
xorb
int3
loopne
and
xchg
mov
inc
jecxz
sbb
aad
cmpsb
mov
leave
arpl
sub
lds
jl
xchg
sarb
xchg
pop
mov
mov
xchg
sbb
cli
out
and
jp
mov
fisttpl
fstl
scas
and
jmp
movsb
sahf
int3
adc
pop
ljmp
dec
xchg
rolb
adc
and
es
int
lods
inc
add
and
xor
repnz
jecxz
leave
fstpt
std
adc
mov
sbb
xchg
test
dec
adc
push
lret
dec
fwait
mov
dec
xor
mov
sub
stos
xabort
cmp
test
hlt
aaa
pop
jge
cwtl
iret
ss
lods
inc
jmp
loope
push
cwtl
push
ljmp
jno
mov
repz
push
xchg
int
js
lock
jno
enter
jg
xchg
mov
out
into
loop
jae
inc
push
fsubs
dec
and
mov
mov
adc
stc
sti
xchg
push
dec
inc
push
in
mov
inc
rol
icebp
dec
stos
popl
xlat
xchg
sub
mov
roll
shll
fisttpl
mov
push
cld
push
adc
out
push
dec
cmp
ret
mov
sbb
dec
xor
xchg
jl,pt
mov
push
sbb
add
loop
lahf
xor
ffree
adc
jmp
dec
repnz
inc
xchg
xchg
pop
scas
push
inc
add
shrb
aad
xor
das
cltd
pop
adc
xor
pop
cmc
icebp
imul
mov
push
test
push
cmp
rcrl
push
xor
int3
jne
in
jbe
push
inc
jl
fs
sub
insb
push
int
mov
pop
stos
rclb
stos
dec
fnsave
cmp
sub
in
movsl
or
and
cmp
ficompl
and
iret
xchg
les
mov
daa
lret
test
xchg
push
push
dec
xor
adc
push
daa
test
inc
enter
call
out
xchg
sbb
imul
xchg
and
out
cmpsb
rorl
sub
push
dec
pop
movl
repz
mov
mov
outsb
outsb
fstp
and
inc
push
rorl
aaa
pop
pop
inc
fidivrl
stos
or
iret
adc
push
sbb
ret
mov
pop
mov
jnp
stos
or
or
aas
add
mov
ja
fsubrl
xchg
and
jne
scas
cltd
or
adc
stos
cmp
aas
lds
add
inc
ds
pop
jmp
test
dec
pop
cld
movsl
mov
mov
stos
sub
loopne
mov
xor
cmp
fs
sahf
addr16
out
lds
dec
out
adc
notl
pop
mov
call
aad
fs
fbld
lahf
lds
aam
mov
iret
ret
or
or
inc
pop
push
imul
rol
cmp
xchg
out
jl
sbb
jno
adc
and
bound
std
or
cmpl
shr
decb
cmc
xor
popf
cwtl
push
into
mov
hlt
or
xlat
xor
mov
out
inc
or
sub
in
mov
push
pushf
mov
js
pop
in
push
aad
aad
lds
mov
test
lret
inc
sbb
fldl
or
leave
daa
shl
add
xchg
lret
xchg
xor
xchg
fbld
jmp
ds
in
sbb
sahf
cs
stc
in
mov
sbb
mov
jnp
stc
aaa
jge
cmp
and
xor
fmuls
aas
aad
xchg
imul
xor
cmp
sbb
aad
leave
negl
rcr
or
xchg
sbb
jb
or
dec
and
and
fldl
loop
jne
insb
in
aas
xchg
idiv
xlat
mov
and
jmp
fisubs
fidivl
clc
pop
pusha
jnp
fs
imul
pop
cld
imul
das
xor
es
adc
cmpsl
pop
fstpl
cmc
push
inc
mov
lret
mov
xchg
sbb
fisubs
sub
jecxz
cmpsl
insb
lds
and
jnp
insl
push
add
jp
inc
push
and
out
and
or
inc
xchg
xor
and
adcb
dec
ljmp
push
stos
xor
or
jo
inc
cmp
pusha
repnz
arpl
jnp
cmpsb
adc
stc
aas
sub
jno
dec
ss
popf
xor
push
shlb
loopne
push
dec
inc
lcall
enter
jb
and
out
sarl
out
inc
lcall
lret
add
cmpsl
inc
stc
leave
cli
aas
leave
ret
insb
push
sahf
sub
xchg
sub
sbb
jp
dec
pop
cmp
push
movsl
repz
das
jbe
comiss
test
jbe
xchg
lret
and
add
aas
daa
adc
mov
mov
or
adc
inc
aas
outsb
cmp
sub
icebp
push
cmc
insl
cs
jns
lock
jle
ret
dec
cmc
addr16
jae
cmp
jo
lea
mov
push
stc
icebp
in
mov
mov
aas
mov
jo
xor
dec
mov
inc
ja
repnz
sub
inc
push
in
inc
inc
push
mov
into
sbb
sti
jbe
cmpsl
xchg
xor
add
mov
add
es
sbb
push
or
add
xchg
out
insb
js
push
mov
je
and
jmp
movsb
push
sbb
cmpl
into
out
test
rorb
cwtl
add
or
lcall
cmp
mov
ret
sub
loope
cmp
xchg
mov
cmp
dec
subb
push
and
sub
outsl
out
and
ljmp
ss
shlb
fnstenv
pop
mov
cmp
sti
push
sub
cli
push
fmuls
lret
jle
xchg
xor
jmp
adc
inc
xchg
xor
and
lret
pop
push
jecxz
xor
ljmp
addr16
sbb
push
dec
arpl
sub
sti
xor
push
testl
mov
cmp
outsl
lret
loopne
in
sar
push
jb
std
sbb
sub
push
insb
cmp
lret
dec
and
xor
sahf
fisttps
popf
xlat
push
xchg
push
into
lods
aam
and
or
or
mov
dec
dec
push
xchg
das
scas
sbb
pop
sahf
daa
xchg
jecxz
adc
test
arpl
lret
fidivl
pop
fcmove
xlat
or
subb
test
sti
dec
jg
xchg
pop
push
push
pop
dec
adc
jnp
sti
daa
shlb
adc
dec
push
sub
ret
jle
xchg
cmp
jecxz
inc
and
rcrl
adc
xchg
xor
lds
xchg
pop
out
push
stos
add
push
push
mov
xchg
ljmp
hlt
ljmp
xor
in
xor
aaa
mov
sub
popa
ja
inc
lret
pop
inc
mov
lahf
jb
lds
leave
inc
mov
xchg
adc
adc
jno
inc
arpl
je
aad
nop
out
mov
inc
push
or
cmp
and
cmp
jo
nop
pop
mov
mov
gs
and
pop
dec
pop
pop
mov
faddl
push
mov
data16
xor
ss
dec
mov
mov
pop
push
push
leave
das
mov
push
xchg
pop
call
cs
int
push
or
repz
shlb
test
js
mov
add
sbb
push
outsl
inc
test
out
xor
cmp
xchg
scas
or
jb
and
sub
aam
sarl
andb
inc
cli
push
js
mov
pop
inc
clc
sbb
xchg
jg
cmp
outsb
pusha
lds
ljmp
jnp
shlb
dec
insl
and
xorb
push
loope
neg
mov
stc
ret
adc
adc
out
call
cmp
mov
sub
aas
sub
cmpsw
jne
sub
sbb
sub
cld
repz
add
aaa
cmp
dec
imull
loop
js
mov
dec
aaa
sbb
pop
repz
cmp
addr16
pop
mov
pop
lcall
nop
push
or
insb
mov
out
adc
mov
incb
enter
les
arpl
pop
out
cmp
fstl
pop
movsb
ja
xor
add
das
adc
mov
add
mov
rcrb
jg
call
repz
mov
push
mov
inc
mov
inc
cmpsl
xor
and
pop
xchg
pop
mov
in
mov
sbb
sub
jp
sarl
inc
pop
jbe
aas
jl
jne
sbb
pop
movsl
sbb
or
ret
mov
filds
stc
xchg
sbb
mov
fidivrs
fcomp
jnp
out
and
fs
xor
pop
cmpsb
shld
and
fbld
mov
cwtl
sahf
adc
loope
jge
nop
mov
xorl
mov
jmp
cmpsl
mov
cmp
aam
mov
mov
out
or
jmp
lret
mov
sbb
mov
mov
dec
mov
mov
lods
daa
fadds
stos
into
xor
mov
xor
mov
sub
mov
sbb
clc
push
mov
xchg
cmp
mov
scas
fimuls
mov
or
fcoms
mov
rclb
scas
arpl
test
add
mov
dec
push
mov
mov
ficomps
movsl
mov
rcrb
popf
call
cmp
test
sub
mov
sub
dec
adc
movsl
mov
cmpsl
dec
dec
mov
lret
outsl
into
xor
mov
bound
xchg
mov
xchg
ffree
cmp
sbb
adc
out
xchg
and
fmuls
push
push
in
ret
inc
adc
mov
pop
addr16
mov
push
push
xchg
pop
or
lcall
jnp
jbe
mulb
xchg
mov
stos
cltd
dec
cmp
cmpl
mov
xchg
int3
aas
lahf
dec
add
sbb
stc
idiv
ja
lea
mov
xchg
repnz
fmulp
push
mov
push
aas
xchg
cltd
repnz
stos
loope
dec
or
mov
sbb
shlb
sbb
out
mov
push
cmpl
aad
ret
dec
adc
fwait
jl
and
mov
mov
imul
movsl
jmp
ret
daa
xchg
mov
sbb
or
stos
stc
xor
loopne
loope
dec
stos
mulb
add
xchg
push
jecxz
jbe
inc
mov
das
xchg
movsb
in
lods
ljmp
hlt
stos
jo
mov
lock
scas
or
cmp
fidivl
ds
dec
std
jne
push
xor
push
xchg
ss
jb
cli
insl
add
mov
mov
and
sti
hlt
test
xchg
stc
lret
push
mov
sub
mov
xchg
mov
cmp
add
cmpsl
sub
pop
sbb
cmp
call
aas
xor
insb
divl
js
pop
incb
push
fdecstp
push
push
cmpsl
js
in
loope
xchg
imul
pop
fldt
stos
cmp
movb
dec
xor
lods
mov
add
cs
stos
aas
adc
lahf
xchg
or
cmpsl
rorb
loop
lret
stc
adc
add
stc
scas
mov
mov
or
fwait
inc
jb
imul
adc
dec
dec
mov
sbb
sbb
ljmp
mov
ret
add
xchg
xor
xchg
and
mov
mov
clc
xchg
jbe
dec
mov
imul
mov
in
out
mov
mov
mov
decl
imul
lods
cwtl
ret
aam
aad
mov
imul
sarb
fs
sti
adc
addb
xchg
jne
xchg
mov
jmp
jb
mov
dec
xchg
jmp
pushl
movsl
std
fcmovnb
sub
aad
rclb
pop
mov
push
repz
xchg
cmc
mov
lret
xchg
lret
mov
es
xchg
mov
mov
int3
push
enter
imul
lods
sbb
popf
mov
or
pop
ret
sub
mov
mov
or
rcr
xlat
or
jle
jno
push
cmp
nop
or
fsubrl
fwait
mov
in
idivb
lds
repnz
orb
ljmp
mov
dec
jmp
jno
js
mov
inc
mov
xchg
push
lahf
dec
std
add
adc
mov
jbe
mov
mov
push
cli
cld
mov
cli
adc
enter
xor
aaa
adc
mov
stos
push
lret
mov
stc
fistps
fistpl
cmc
mov
scas
push
push
mov
inc
jp
clc
push
push
mov
xor
xchg
lods
sbbl
mov
dec
scas
sbb
insl
jb
idiv
fcmovbe
fnstenv
jp
scas
lahf
dec
adc
adc
pop
mov
subb
lret
ja
add
insb
cmp
orl
add
lock
rcr
lret
push
xchg
das
mov
das
pop
mov
mov
ror
pop
sbb
push
xchg
lock
or
rcll
mov
fstl
in
cmp
xchg
push
xchg
push
fcmovnu
nop
push
lods
lods
jp
xor
sbb
xchg
adc
das
popf
add
cmpb
pop
xchg
cs
fsubl
shlb
inc
adcb
dec
mov
xor
fidivrs
mov
xchg
jo
jg
in
neg
adc
xor
push
pop
inc
or
mov
mov
fcmovnu
aas
lcall
mov
xor
jns
mov
xchg
sbb
lahf
es
mov
in
loopne
dec
lea
sarl
jge
int
fstl
push
cli
out
push
in
lret
xchg
out
insb
add
sub
and
mov
jecxz
dec
fstp
jl
les
mov
fcomps
js
lods
in
ss
adc
sti
in
and
subl
mov
ss
xorl
push
je
dec
push
mov
addr16
adc
sti
xchg
popf
push
lret
pop
adc
lods
adc
xor
inc
mov
inc
pushf
out
cmp
pop
sbb
xchg
dec
mov
out
dec
out
xchg
sarl
jg
fidivl
rol
scas
push
stos
outsb
mov
sbb
mov
out
xchg
pushf
xchg
fsubrp
fcmovne
jle
pop
jns
ss
ss
decl
mov
loopne
faddl
call
mov
cwtl
adc
pop
cld
lret
adc
mov
sub
out
hlt
sbb
fs
cmc
cwtl
in
dec
push
xchg
jl
loopne
leave
push
mov
out
fsubr
sbb
mov
cmp
jnp
addl
pop
std
imul
xchg
ret
and
xor
xor
test
mov
loop,pn
cmp
cmp
ja
dec
jno
sbb
sub
stc
push
pop
jp
sbb
sub
pop
push
insl
popf
scas
xlat
push
loopne
rcrb
pop
xor
ret
fbstp
mov
pushf
inc
xor
pusha
push
stos
stos
addr16
sub
arpl
dec
ror
cmc
mov
mov
out
mov
mov
xchg
adc
pop
mov
xchg
notb
cli
mov
repnz
movb
mov
testb
sub
lret
mov
fists
fs
xchg
jmp
add
lods
scas
pop
xchg
add
ss
outsb
xor
or
in
sub
popf
jnp
sub
addr16
ss
cwtl
pop
mov
ss
jae
mov
aaa
push
scas
jne
sbb
jmp
fisubrl
in
inc
aaa
aaa
pop
in
cmp
jl
add
popf
push
lret
sarl
push
sahf
jo
pop
aad
loopne
ljmp
mov
sub
mov
mov
xor
das
shll
dec
push
push
call
and
es
pop
cwtl
cmp
into
mov
sbb
addb
xchg
lret
push
pop
mov
jge
mov
fistl
pop
jo
gs
sahf
insb
mov
subl
mov
xor
cld
jns
mov
sub
jle
ret
or
test
bound
loop
add
jmp
push
lods
addr16
adc
jg
fdivl
jae
movsb
fwait
pop
xchg
mov
pop
cld
mov
and
push
xchg
ret
mov
mov
pop
out
sti
push
pop
lods
mov
sub
lahf
dec
xor
cmp
movzwl
sub
scas
pop
cld
cld
sti
push
push
xchg
outsl
mov
mov
xchg
jbe
and
push
mov
lret
dec
push
out
mov
notl
repnz
mov
sbb
sti
xor
imul
lods
psubd
das
lcall
xchg
stos
push
shll
mov
jl
mov
loop
mov
repnz
scas
int3
or
mov
sbb
push
cld
lods
outsl
cli
shl
dec
aam
ja
movsb
or
jb
sbb
fistpll
mov
stos
xchg
iret
mov
orb
repz
and
scas
dec
or
jae
adc
dec
sahf
fmull
xlat
hlt
sbb
add
test
fidivs
nop
nop
inc
mov
and
nop
push
cmp
jne
cltd
jnp
mov
fdivrs
mov
mov
pusha
mov
dec
mov
test
mov
jbe
dec
shll
loope
xchg
rcl
push
mov
jno
fidivs
loope
shlb
pop
xchg
ret
mov
add
xor
test
aas
ret
push
je
movsl
push
outsb
cmpsb
cmpsl
fsubrs
push
in
mov
bound
out
mov
dec
add
aas
mov
mov
mov
dec
rorl
sbb
mov
scas
jecxz
xchg
fisubrs
iret
jl
sarb
fstps
stos
iret
les
ja
rcrl
push
mov
lret
fidivrl
lods
mov
lret
or
cwtl
dec
add
pop
cmpsb
adc
xchg
mov
lods
dec
leave
fwait
dec
adc
stos
xchg
pop
xchg
shrl
jle
dec
in
and
jne
jns
mov
fdivs
stos
mov
scas
cmpb
ffree
cmpsl
cli
test
into
insl
cmp
mov
lret
ljmp
int
mov
arpl
cmp
lods
xor
push
int
andl
rorb
out
outsb
or
jbe
je
imul
scas
jmp
lds
das
popl
aam
mov
pop
cmp
out
aam
jmp
and
cmc
sbb
pop
adc
bound
test
jae
aad
push
sarb
jno
daa
adc
rcll
les
or
das
cmp
xchg
lods
xchg
push
ds
imul
outsl
and
lret
decl
pop
lcall
iret
ljmp
aad
pop
adc
cmp
je
push
out
pop
stos
cmp
mov
mov
jbe
inc
sbb
jmp
push
sarl
inc
loopne
sub
jnp
adc
je
or
icebp
getsec
mov
je
jno
cmp
rcr
and
lahf
lahf
pusha
fldl
push
jo
leave
fwait
out
jae
pop
mov
mov
icebp
test
lods
cmp
test
ret
pop
xor
nop
addr16
stos
jp
sbb
or
push
shrb
pop
lock
mov
iret
test
fisttpll
or
xchg
mov
jnp
jno
lret
pop
pop
cli
out
pop
cltd
pop
xchg
push
cmp
dec
icebp
lds
add
mov
xor
shl
lods
cmc
loop
cmp
dec
push
popf
sar
in
push
sub
pop
loop
lret
nop
out
inc
or
cmc
and
cli
mov
sub
out
lea
loope
or
divb
jb
xchg
aas
jge
cmpsl
adc
mov
mov
dec
iret
negl
mov
fcmove
enter
mov
cmpsb
rcrl
ss
adc
rcll
mov
jo
inc
and
into
popf
push
sbb
out
dec
aas
fwait
ljmp
mov
lods
arpl
add
sbbb
mov
pop
sbb
out
cmp
in
xor
jmp
mov
push
or
call
fcmovne
sub
inc
cld
mov
pop
mov
mov
cmp
adc
loope
bound
mov
mov
add
out
sub
xchg
pop
inc
fldl
stos
cld
hlt
sbb
call
imul
mov
subb
loopne
or
xchg
lock
xchg
pop
outsb
add
addl
mov
shlb
ret
mov
mov
and
test
adc
xchg
lcall
jmp
lahf
xchg
lods
aaa
push
pop
jne
mov
lods
loopne
mov
mov
out
notb
mov
inc
movsl
pushf
xor
jae
mov
jbe
cmc
mov
fucom
add
xchg
fisttpl
jg
or
jg
test
cmp
xchg
mov
push
scas
insl
push
test
cli
cmp
pop
xchg
addl
xchg
lds
das
sub
jae
mov
inc
cmp
sti
push
cli
cmp
out
icebp
iret
pop
mov
adc
mov
cmp
pushf
out
test
adc
cmp
xchg
xchg
int3
pop
stos
repz
rolb
xchg
stc
ljmp
mov
bound
or
shrl
xlat
fwait
mov
sti
sbb
pop
adc
dec
and
xchg
jne
movsl
mov
fucomp
sub
rcrl
jns
xlat
xor
xchg
loop
mov
cmp
rorb
sbb
psubd
lods
jp
repz
jns
and
cmp
fwait
sbb
loopne
pop
icebp
out
fcompl
bnd
inc
mov
imul
jge
inc
outsb
xor
adc
mov
inc
cli
mov
jo
cltd
jmp
test
adc
cltd
push
xchg
aam
lahf
adc
mov
jbe
lea
lahf
insl
or
ja
lock
adc
cltd
call
imull
aad
mov
sti
mov
out
mov
cmpsl
repnz
insl
pop
mov
inc
xorb
xchg
push
repz
cld
xchg
test
or
shl
or
filds
push
sub
loop
lods
aad
pop
sti
sarb
lods
lret
xor
jg
mov
in
leave
push
adc
mov
nop
cmc
xchg
push
pop
adc
out
shrb
shll
mov
mov
iret
hlt
popf
push
lcall
xchg
jbe
daa
and
aas
imull
push
fwait
xchg
xor
xchg
cld
or
mov
je
adc
clc
ss
rcrb
adc
mov
cmp
cmp
sti
lcall
stos
push
adc
mov
cmp
push
fdivl
or
mov
sub
insb
sti
xlat
xchg
xchg
sti
ret
ret
push
in
pop
push
adc
adc
sti
jb
and
push
jl
jmp
push
div
dec
sub
repz
ss
int3
int3
fwait
ja
lods
cs
cld
mov
ret
mov
mov
xchg
xchg
push
or
mov
cmp
shrb
sub
popf
iret
lcall
xchg
loop
and
cmp
inc
cmp
push
sti
add
or
push
test
xor
popf
fistpl
or
xchg
ljmp
xchg
and
sti
inc
cmp
jg
push
adc
push
pusha
lods
js
out
pop
popf
mov
or
pop
xchg
les
arpl
fdivr
or
daa
mov
mov
fists
push
cmp
cmpsl
cli
adc
dec
add
push
and
cmp
sbb
fwait
and
jl
jmp
xchg
andl
mov
inc
lcall
xchg
push
sbb
dec
cmp
mull
dec
fwait
sti
xchg
and
cmp
sti
stos
into
xchg
mov
pop
cli
shl
dec
movsb
popf
add
or
xchg
mov
mov
sti
mul
xor
scas
int3
or
mov
push
pop
jae
push
test
adc
mov
aaa
dec
pusha
popf
fistpl
or
and
or
cld
call
jnp
push
pop
sti
inc
mov
xchg
pop
pop
fistl
lods
cli
and
lahf
dec
cmp
repz
ss
int3
enter
lods
cs
cld
mov
cmp
cmp
sti
sahf
mov
jno
loopne
xlat
dec
adc
adc
pop
and
lods
cli
jl
jmp
push
popf
lcall
cmp
shrb
xchg
adc
push
mov
xchg
mov
push
push
lods
cli
xor
xchg
dec
or
mov
xor
ss
fcomps
and
pushf
sti
lret
mov
jecxz
mov
sti
ljmp
mov
loopne
outsb
inc
cmp
xchg
stos
mov
cli
mov
sub
popf
iret
jp
ffree
iret
dec
mov
or
adc
mov
lret
or
aad
into
jp
test
adc
repnz
and
pop
int
add
mov
rclb
movsl
lcall
cmpsl
scas
sub
sub
cli
mov
dec
repz
pushf
sub
mov
cwtl
icebp
cld
mov
repnz
adc
mov
cli
lods
push
ljmp
jo
mov
pop
xor
pop
cwtl
jl
stos
lods
jne
stos
lods
mov
je
dec
pop
inc
jbe
xchg
pop
inc
cmp
or
sbb
mov
clc
pop
mov
sub
sub
stc
mov
shll
and
fisubl
lahf
mov
ja
mov
mov
pop
gs
xchg
pusha
inc
rorl
sti
in
xchg
add
pop
mov
iret
lret
enter
fcomps
add
jnp
je
out
loopne
mov
fwait
leave
int3
mov
movsl
xchg
inc
jb
xchg
mov
out
adc
cmp
cs
mov
xchg
mov
ja
andb
adc
leave
adc
and
sbb
imul
ret
lcall
xchg
fildl
fistpl
not
loope
jmp
loopne
pop
cmp
test
int
out
loop
jno
lea
sub
shrb
shrl
jmp
xchg
dec
sbb
sbb
addr16
mov
fsts
lea
int3
fidivrl
decl
mov
jns
call
xchg
mov
push
xchg
fmul
jne
fucomi
dec
scas
es
iret
pop
mov
cmc
xchg
xchg
aaa
xchg
xlat
cmp
add
mov
jle
mov
mov
cmp
add
loope
jnp
and
loope
xchg
mov
test
sbb
test
xchg
lahf
fnstcw
sub
xchg
call
ficomps
lret
push
cmc
adc
fucom
insb
cli
outsb
cmp
lds
mov
mov
xor
loope
adc
fldl
xor
dec
cmp
add
es
push
sahf
data16
push
sahf
adc
mov
adc
out
cwtl
fsubp
scas
xchg
jmp
mov
rcr
test
scas
cmpsb
jge
xchg
xchg
dec
lret
and
cmp
cmpsl
xchg
les
push
in
xor
repz
inc
or
scas
add
mov
add
outsb
test
lcall
mov
inc
jne
shll
mov
idivb
into
dec
shll
orl
stos
xchg
dec
shll
lock
adc
add
mov
pop
or
das
jp
fstpt
mov
fcompl
fsubr
outsb
std
mov
ficompl
icebp
mov
dec
adc
fwait
imul
xchg
insl
rcr
xchg
jbe
xlat
pusha
lahf
cmpsl
cmp
xchg
mov
mov
out
jns
out
mov
jmp
popf
dec
enter
sub
xchg
ss
and
sarb
xchg
fcomps
adc
push
dec
scas
and
iret
ja
mov
mov
lods
iret
mov
xchg
cmp
call
rclb
in
inc
cmp
not
jo
pop
loopne
stos
je
stos
leave
roll
pop
decb
scas
or
xchg
mov
pop
repz
fisubrl
adc
out
inc
outsb
xchg
xor
movsl
out
cmpsb
test
daa
imul
sub
rcrl
mov
std
dec
and
stos
fs
push
dec
mov
push
dec
jne
push
push
mov
in
sbb
aad
das
push
lret
fldenv
push
fcompl
loope
rcr
daa
mov
xchg
cmp
adc
dec
test
push
repz
mov
decb
add
adc
mov
lret
inc
icebp
fidivl
add
xchg
insl
sbb
cmp
and
mov
xor
int3
dec
xchg
mov
inc
leave
jne
cli
or
cwtl
lds
imul
inc
vpunpckhdq
pop
sbb
sbb
clc
push
xchg
pop
std
ja
lock
jnp
rorb
xlat
pop
mov
jno
cmp
and
sub
mov
pop
xlat
rorb
inc
insb
xchg
mov
xchg
xchg
mov
mov
cmp
add
imul
cmc
and
pop
insb
pushw
stc
mov
lret
and
xor
daa
jmp
jg
xchg
sbb
sub
sub
icebp
cmpsl
repnz
or
mov
ret
inc
scas
insb
sub
lea
sahf
pop
mov
jbe
cmp
xchg
rcr
or
xchg
fildll
mov
frstor
fldt
aam
add
les
add
cmp
rorb
push
mov
mov
sti
gs
xchg
or
ret
push
cmpsb
js
jbe
gs
or
cmpsb
shrb
push
push
dec
xchg
xlat
in
push
pop
rorl
rcrl
pop
sub
mov
jno
mov
cmp
scas
stos
iret
out
leave
lcall
insb
stos
rep
sarl
ljmp
mov
shl
leave
xchg
aam
mov
stc
scas
insb
sub
int
mov
xchg
stc
fmulp
mov
fistpl
jne
out
mov
and
fbstp
sub
dec
push
push
mov
inc
sbb
sub
inc
enter
push
xor
stos
cmpsb
pop
and
lods
mov
jg
test
mov
movsl
jl
inc
xchg
sarb
loop
sub
add
and
cmp
or
cmp
test
xchg
inc
dec
fs
sub
and
mov
and
enter
stc
mov
sub
cwtl
sti
in
mov
icebp
shl
push
jp
mov
jne,pn
pop
xchg
into
insb
dec
fdivrp
adc
enter
xchg
xorb
pushl
scas
popa
add
jl
outsl
cmp
and
lcall
scas
add
add
mov
xchg
push
jbe
lds
fnstsw
push
sub
jnp
adc
mov
adcb
and
popf
xlat
and
lahf
push
xchg
cmpsl
pop
into
mov
adc
dec
cld
xor
and
or
mov
scas
imul
subb
mov
fsubrl
les
push
xchg
aad
mov
scas
jnp
insb
jmp
stos
lods
push
lcall
and
adc
inc
pcmpeqb
std
jno
test
dec
xchg
and
leave
or
mov
imul
jp
pop
jbe
xchg
aam
push
jno
dec
notb
rcrl
cmc
fildll
popf
ret
mov
test
iret
fimull
in
push
cmpsl
jns
push
xor
mov
jle
sub
inc
lods
imulb
and
out
cli
xchg
jp
and
pop
scas
cltd
xchg
jb
xchg
gs
pop
fists
into
sub
int3
adc
and
adc
xor
aam
xchg
inc
push
sbb
adc
imul
stc
roll
idivb
scas
lcall
in
movb
mov
dec
movsl
jbe
dec
cmc
aam
mov
pop
cwtl
or
pop
push
adc
push
stos
shlb
hlt
insl
cltd
add
hlt
dec
jle
iret
fcmovbe
and
enter
and
push
jnp
cmp
sub
cltd
mov
cmp
pushw
sti
xchg
aam
je
movsb
cld
dec
call
into
neg
push
in
out
and
lret
cmpsl
or
fcoml
xchg
xchg
sub
lea
clc
fwait
and
in
dec
inc
push
repnz
hlt
cli
pop
repz
fwait
mull
mov
shll
inc
lcall
repnz
jno
cmpsl
pop
cmc
aaa
jne
hlt
push
push
xor
dec
cli
sbb
sub
push
mov
jne
push
nop
mov
in
xchg
push
les
inc
mov
mov
sbb
xchg
xchg
push
shr
xor
mov
in
popf
jae
sbb
adc
das
int3
and
lahf
popf
cld
sub
sbb
sti
cli
mov
popf
mov
add
mov
cld
mov
out
pushf
xchg
imul
pop
pop
subl
and
pop
xchg
cli
push
mov
test
bnd
imulb
sub
lods
sub
push
mov
jge
decb
dec
push
ja
mov
jecxz
in
push
insl
jecxz
sarl
push
dec
pop
ja
ss
mov
or
stc
dec
xchg
mov
dec
mov
stos
pop
inc
dec
fstpl
sahf
ja
in
std
mov
xchg
xchg
hlt
clc
testb
ljmp
jmp
mov
fs
shll
add
fcompl
cwtl
sub
pop
xchg
mov
pop
xchg
test
mul
inc
decb
pop
data16
sub
std
cmpsb
mov
repnz
push
mov
cmp
sarb
je
push
mov
mov
sub
cmp
stc
xchg
cli
pop
jl
ljmp
stos
and
into
lods
jl
rorb
xchg
jbe
dec
pop
lcall
outsl
sub
push
lcall
xor
pop
sarl
cs
cmc
or
push
mov
xchg
out
je
sahf
lret
pop
jmp
andb
cmp
sti
das
push
iret
repz
mov
es
loopne
lea
mov
fisttps
mov
repz
repz
mov
xor
sarb
jb
out
and
sbb
push
mov
fwait
pushf
mov
push
aad
sub
sub
mov
sub
cmp
in
fmull
ret
lds
adc
sub
inc
xchg
mov
add
push
adc
rorb
xlat
fbstp
xchg
jp
inc
sbb
ja
dec
fldl
shrb
fbld
mov
lret
movsb
daa
lock
outsl
into
enter
xchg
cli
in
mov
mov
fisubrl
dec
push
or
rcl
xchg
mov
pop
shrb
enter
repnz
mov
or
jecxz
adc
leave
mov
inc
loope
dec
in
xchg
dec
mov
pop
pushf
popf
or
inc
or
orb
nop
fcmovb
out
dec
test
push
mov
mov
in
aam
adc
stos
mov
pop
iret
ja
popf
or
fidivrl
mov
jle
mov
jge
imul
scas
mov
out
sub
xchg
mov
sbb
sahf
sti
loope
test
mov
mov
dec
mov
jle
and
mov
pop
dec
popf
xchg
push
mov
call
pop
push
and
dec
mov
or
faddp
mov
pop
and
mov
das
shll
xor
xchg
xor
jb
mov
mov
test
adc
cmp
push
data16
and
cs
test
out
jmp
sbb
cmc
xor
cmc
scas
push
pop
lds
inc
pushf
jcxz
bound
lret
stos
xchg
pop
push
cmp
test
mov
notb
mov
pop
repnz
mov
loopne
or
dec
test
inc
ljmp
outsb
lods
adc
lea
lret
dec
lret
fidivs
xor
push
nop
lods
xchg
lods
mov
imul
push
xchg
loope
and
jmp
insl
cmp
sbb
push
outsl
test
in
or
cmp
adc
push
int3
mov
jge
inc
mov
push
aad
fdiv
fimuls
fdivr
pop
int3
mov
test
mov
or
mov
pop
dec
cld
jecxz
enter
insl
cmp
in
jb
int3
int3
jns
lret
sbb
fs
enter
xchg
pop
stc
in
xchg
sti
mov
adc
push
fistl
mov
sahf
push
ret
mov
ss
ret
adc
mov
jnp
icebp
cmc
xchg
aaa
cmp
fsubr
jl
cmp
repnz
out
bound
xchg
lea
ret
inc
jg
cltd
std
dec
pop
push
lock
out
lods
and
push
mov
andl
inc
mov
imul
push
lcall
jmp
mov
stos
out
insb
mov
pop
push
inc
ret
rcrb
lret
mov
fistps
or
mov
shlb
xchg
ret
cmpsl
cld
fdivrl
jecxz
cwtl
clc
xchg
lods
cmp
out
cmpsb
mov
faddl
cmp
push
xchg
scas
and
test
fnsave
mov
dec
push
mov
lods
cmc
fidivs
adc
sahf
pushf
insl
enter
or
pop
jecxz
jmp
mov
jecxz
jg
test
fisttps
es
pop
cmp
xchg
mov
sub
xchg
xlat
xor
and
jbe
leave
shrl
dec
in
les
push
xchg
mov
mov
adc
scas
pop
iret
popf
jae
adc
xchg
jbe
inc
insb
jb
inc
test
jno
pop
dec
xor
loope
les
cmp
dec
jnp
adc
inc
jecxz
popf
and
ds
std
aaa
mov
rorb
lret
sbbb
pop
std
cwtl
pusha
or
test
movsl
bnd
jl
push
shl
inc
lea
mov
push
std
or
sarl
push
jbe
sub
sub
dec
mov
mov
out
push
lock
pop
fldenv
lcall
push
cmc
notl
and
and
addr16
pop
or
push
enter
ljmp
jo
adc
xor
mov
fidivrs
in
icebp
jmp
push
aam
arpl
sbb
popa
pop
xor
push
and
aaa
push
mov
push
or
dec
clc
icebp
icebp
jno
imul
ficomps
aas
push
jbe
xor
or
notl
imul
aam
stos
es
add
sbb
and
inc
outsl
mov
jle
mov
cmp
test
sbb
jo
fidivl
jle
arpl
mov
sbb
cli
mov
hlt
xorl
mov
sub
xor
mov
fcoml
cld
sub
pusha
adc
push
aad
es
xchg
fdiv
mov
or
out
ss
mov
inc
test
inc
cmpsl
inc
arpl
jg
mov
mov
shll
out
cmp
cmp
push
jle
mov
icebp
xchg
cmp
pop
push
leave
fwait
repz
cld
std
lods
repnz
sub
fmuls
mov
inc
dec
icebp
jmp
adc
dec
pop
cltd
jecxz
mov
fs
lods
bound
imul
sub
imul
inc
mov
inc
dec
out
test
popl
int
popl
pop
loope
push
repz
les
sti
inc
and
out
pop
mov
mov
adcb
jle
push
scas
mov
xchg
and
ss
pop
mov
cmp
push
loop
pop
lea
loope
lahf
mov
jmp
jmp
fcomi
xor
test
lret
insb
inc
enter
arpl
je
jecxz
js
lret
adc
jne
lcall
inc
mov
idivb
lods
movsl
test
test
cli
inc
ret
dec
in
test
sub
mov
xchg
cmpsb
hlt
cmc
jno
push
nop
mov
push
mov
mov
push
xor
xchg
lret
inc
or
add
xchg
and
cwtl
notl
aad
inc
out
nop
sub
adc
add
lret
cmp
inc
int3
gs
lcall
cli
stos
jb
pop
repnz
push
lock
jmp
pop
and
xchg
lret
cmp
adc
and
fsubl
jb
mov
lods
adc
scas
jb
jg
jbe
xor
xor
push
les
lds
pop
pop
test
inc
rcl
mov
in
inc
int3
sub
imul
movsb
or
sub
or
pop
gs
inc
int
test
dec
lret
jge
push
cltd
jno
xchg
repnz
and
adc
inc
mov
jno
adc
push
mov
jge
pop
xor
or
ret
or
outsl
lret
mov
dec
mov
push
loope
sub
lret
dec
dec
mov
mov
push
sahf
dec
mov
mov
mov
xor
ret
cmp
lods
mov
sbb
ljmp
hlt
cli
scas
push
in
cmp
sub
shrl
js
stos
ror
jp
mov
and
sbb
pop
sbb
fidivl
cmp
mov
scas
fsubr
sub
push
rorb
jmp
or
xchg
push
sub
setp
mov
sub
lcall
cmpsl
xchg
and
inc
inc
pop
pop
add
mov
arpl
xchg
push
xchg
repz
and
pop
cwtl
and
mov
jbe
xchg
lret
xchg
mov
cwtl
ficompl
push
fdivs
mov
mov
es
sub
xor
adc
hlt
cwtl
or
sbb
dec
inc
std
push
mov
fists
jle
gs
jl
jle
mov
pop
loopne
movsl
jmp
jbe
sub
std
loop
lret
and
and
rclb
aam
test
cld
pop
rcr
xor
insb
icebp
std
xchg
xor
je
push
xchg
ret
loopne
and
loop
push
jp
mov
mov
rcr
xlat
push
dec
cwtl
or
xchg
ja
push
subb
mov
out
xor
and
dec
xlat
mov
xlat
adc
jnp
arpl
push
nop
xor
fldl2e
outsl
mov
mov
aas
jp
bound
aad
dec
xchg
mov
adc
notl
mov
add
movsb
je
mov
pop
dec
repz
push
xchg
push
dec
inc
add
stc
mov
adcb
xchg
lret
mov
in
inc
filds
mov
xor
jbe
mov
adc
repnz
jns
xchg
lods
stos
stc
inc
les
movsl
sub
outsb
mov
cmp
cmp
jae
clc
xchg
xchg
add
inc
sbb
jo
lahf
adc
mov
loope
mov
enter
xchg
add
push
xchg
ret
fistps
lock
std
arpl
shlb
loope
aaa
mov
sbb
mov
daa
inc
mov
pop
ja
and
and
ret
dec
fs
add
shll
cmpsl
jp
inc
mov
rcl
jns
fwait
call
jp
push
xchg
cmc
adc
shl
jb
hlt
decl
and
sbb
inc
popa
scas
test
fiadds
or
in
adc
cmp
mov
loopne
mov
adc
test
mov
lcall
hlt
test
enter
mov
fwait
push
xchg
cmp
mov
mov
jl
ljmp
stos
mov
sarl
aam
push
mov
cmpsl
sub
fnstcw
push
movl
bnd
cmpsl
xchg
dec
addl
fs
lods
rcrl
sbb
mov
aaa
lock
pop
adcl
dec
cmc
and
iret
ret
and
rorl
xchg
std
pop
outsl
push
or
lret
pop
lcall
enter
mov
jg
repnz
mov
ja
xchg
or
sub
testb
add
std
adc
push
pop
adc
popl
cmp
xor
lea
ds
popf
imul
inc
xchg
jg
imul
add
push
pop
insb
pop
mov
jge
push
imul
arpl
xor
rclb
cmpsb
lock
pop
daa
hlt
dec
pop
out
repz
ja
pop
ds
or
jl
rorb
and
ret
pop
movb
inc
arpl
and
leave
into
inc
pop
sbb
adc
insb
sbb
xchg
ret
stos
out
repz
and
repz
sbb
outsl
dec
jae
stos
dec
xor
xor
jns
ret
movsl
and
rcr
insb
sub
lods
adc
cmp
insb
mov
clc
sbb
sahf
sahf
imulb
into
mov
int3
ret
mov
mov
out
push
sub
jmp
negl
lea
out
fwait
cmpb
dec
pop
fsubrs
negb
push
bound
and
mov
sbb
or
fstpl
bound
or
jl
cs
add
popf
fwait
aam
int3
adc
mov
push
mov
out
clc
aam
mov
push
mov
push
pop
xchg
out
push
popf
jns
hlt
add
push
xchg
jle
shll
ret
scas
movsl
nop
fsts
cmp
mov
les
sbb
xorb
or
xchg
mov
sbb
xor
push
push
cmc
ss
imull
aam
jo
jle
xchg
ret
push
mov
push
xchg
aas
pop
fsubp
sbb
adc
mov
cli
ret
or
xor
and
mov
xchg
int
inc
mov
in
and
pusha
cmp
mov
in
sub
and
or
ret
xchg
sub
daa
daa
xchg
mov
mov
jne
ljmp
addl
xor
out
mov
insl
inc
js
xchg
in
clc
xlat
roll
mov
push
and
aad
adcb
sbb
pop
dec
cmpsb
lods
lock
xchg
mov
and
mov
mov
mov
xlat
test
nop
inc
jbe
mov
movsl
jnp
push
jae
mov
mov
mov
js
je
adc
out
sbb
loopne
sub
sahf
mov
mov
push
adc
xchg
mov
fildll
ss
mov
inc
mov
mov
mov
popf
cli
inc
sub
shrb
add
jl
lods
sahf
sub
push
mov
repz
aam
xor
adc
jg
sbb
adc
test
add
out
in
push
mov
dec
pop
xchg
rorb
ds
mov
lahf
insl
mov
popf
stos
dec
and
lods
sbb
jo
popf
dec
movl
dec
push
in
int3
stos
mov
dec
into
or
test
in
insl
mov
xlat
lcall
std
mov
sbb
dec
cmp
mov
div
or
dec
mov
test
sbb
xor
push
adc
loopne
into
cmp
sbb
sbb
jecxz
jmp
or
call
adc
xchg
test
mov
add
sub
imul
mov
mov
sbb
mov
sub
add
xchg
rcl
sbb
mov
push
sub
call
mov
pop
ret
jbe
sub
sbb
testl
ret
pop
pop
test
cli
shl
dec
enter
rcrb
xchg
push
mov
outsb
cmp
adc
sbb
cs
cld
or
and
xchg
xor
aad
ret
xchg
lret
pop
lret
scas
push
je
stos
cli
jl
mov
lcall
xchg
lcall
mul
cmp
mov
cmp
dec
and
mov
into
pop
ds
or
xor
inc
in
repnz
popa
cltd
fildll
lcall
xchg
mov
shlb
xor
daa
xor
into
push
ja
xorb
mov
repnz
pop
push
mov
popl
xor
cmpsb
mov
mov
pop
sub
mov
js
lret
sbb
mov
pop
dec
pop
or
int
aam
rcrb
and
xchg
inc
pop
xor
mov
andl
and
jo
cmp
mov
test
cltd
mov
sbb
test
and
xchg
in
push
pop
dec
lret
mov
jg
js
fldt
rcrb
pop
xor
popa
das
mov
loop
cmp
or
mov
int3
sbb
cmp
iret
les
mov
cmp
movsb
mov
cwtl
pop
pop
push
pusha
xchg
jg
cmp
imul
mov
pop
sti
add
push
xor
dec
popa
scas
inc
dec
cmp
idivl
in
push
int3
out
arpl
lods
mov
std
dec
mov
jno
iret
inc
dec
into
pop
adc
add
dec
ds
dec
mov
leave
or
repz
int3
mov
cmovb
lahf
clc
ds
addr16
jp
xchg
loopne
adc
and
cmp
push
lret
aaa
dec
adc
insl
testl
mov
jp
jmp
mov
roll
mov
int3
sub
pop
xchg
or
mov
dec
in
stos
testl
ljmp
push
push
scas
or
mov
sub
out
push
sbb
pop
mov
sti
push
mov
lcall
jne
scas
jl
shrl
jge
cmp
cli
add
pushl
sbb
loopne
xchg
mov
jle
push
lods
insl
mov
or
pop
mov
in
inc
mov
cli
testl
decb
mov
fmulp
jp
mov
add
jnp
lret
cs
in
or
pushf
cld
adc
stc
mov
mov
lcall
call
push
sbb
mov
cli
test
mov
aam
aas
and
iret
movsb
add
lds
push
jg
test
lahf
inc
fiadds
adc
fs
mov
inc
inc
xchg
cmp
xor
roll
xor
imul
mov
xchg
xchg
sbb
fadds
jle
mov
pop
or
aam
mov
sbb
imulb
clc
mov
hlt
mov
mov
movsb
cmp
mov
xchg
iret
push
mov
movb
jecxz
int
dec
cld
adc
dec
push
adc
xchg
pushf
pop
sbb
xchg
lcall
sbb
and
push
adc
jmp
pop
aas
sbb
leave
dec
xlat
cli
adc
mov
adc
sti
sbb
cwtl
adc
ds
ficoms
icebp
cmp
mov
insb
cmc
in
insb
lahf
std
loop
sbb
push
cmp
test
and
jg
jnp
xor
shlb
fiadds
dec
add
pop
dec
xchg
popa
mov
sar
and
xchg
mov
xchg
stos
jecxz
jle
sbb
mov
jecxz
ret
push
dec
cs
dec
jbe
xor
xor
stos
cmp
test
imul
pushf
aaa
cltd
add
rcr
pop
ficomps
add
mov
cmp
sub
decl
and
jno
mov
mov
inc
icebp
push
mov
or
pop
pusha
sub
notl
or
sub
popa
aam
mov
mov
xchg
std
pop
jns
flds
jle
out
fbld
loopne
or
cs
push
mov
xchg
mov
dec
mov
div
jnp
xchg
stc
repnz
mov
mov
lea
cmp
les
xor
add
sar
pop
mov
push
leave
xchg
ret
or
in
mov
nop
out
add
pop
cmp
fidivrs
add
add
add
nop
sub
mov
add
cwtl
sbb
fldt
loope
pop
out
imul
xchg
test
sub
loopne
aam
push
inc
mov
jno
jecxz
jne
push
and
call
jecxz
cmp
shll
sbb
sbb
mov
mov
adc
ja
rol
sbb
push
daa
push
mov
mov
dec
fcmove
test
adc
imul
fildll
sbb
rep
insb
fisttpl
jecxz
lahf
gs
clts
lea
cmpsb
in
insb
xlat
repnz
push
loopne
mov
loopne
lock
out
or
pop
dec
add
dec
mov
cwtl
popl
xor
add
pop
add
pop
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
add
addb
add
rdmsr
pop
add
xor
add
xor
add
xor
add
xor
add
pop
add
xor
add
xor
add
pop
add
add
pop
add
pop
add
add
pop
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
jb
imul
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
or
aas
adc
xor
sub
cmp
add
dec
push
push
push
daa
pop
or
and
hlt
mov
sbb
data16
and
pop
and
pop
add
cmc
rolb
rol
cmpb
or
cwtl
lods
push
cmp
lret
cmp
dec
adc
call
and
jmp
sbb
push
mov
adc
hlt
ja
add
xchg
and
inc
adc
jbe
bound
andb
lret
cmp
lock
shlb
test
outsl
xor
xchg
add
cmpsb
enter
jno
jb
addb
or
cmpsl
rclb
add
dec
xor
sub
xor
lahf
leave
or
dec
push
xchg
mov
call
jns
icebp
ret
push
dec
cld
fistps
cwtl
mov
flds
mov
cmp
push
or
dec
add
shlb
or
cmp
sub
or
adc
mov
mov
or
or
roll
adcb
insl
add
xor
push
test
mov
or
add
popa
pop
fdivs
cmpsl
xchg
fwait
push
adc
fcoms
incl
das
inc
cmp
addb
xchg
and
dec
jecxz
pcmpgtw
cs
sbb
dec
negb
add
fnstenv
pop
add
add
sub
add
jb
jge
pop
les
push
add
mov
push
shrb
add
hlt
mov
push
pop
push
mov
add
adc
inc
add
or
int3
mov
jmp
xchg
xchg
into
insb
orb
push
add
arpl
add
dec
push
rcrb
sbb
fdivl
shlb
out
mov
aaa
sbb
inc
or
test
inc
push
outsb
dec
xchg
pop
or
mov
pusha
js
adc
call
mov
jns
insb
xor
es
leave
and
roll
pop
nop
sub
inc
pop
dec
mov
sahf
sub
addr16
inc
popa
mov
sbb
cmp
js
xor
outsb
pop
and
fnstsw
add
js
fadd
fidivl
movsb
inc
or
cwtl
or
enter
inc
cltd
insb
fcmovnb
and
arpl
sbb
add
jecxz
mov
sbb
inc
add
lret
jmp
test
nop
add
movsb
cmc
add
and
int3
sahf
sub
mov
push
xchg
mov
mov
pop
rcrb
je
add
xor
rclb
adc
jl
adc
hlt
mov
enter
mov
lret
mov
jle
mov
test
inc
pop
add
mov
sub
test
fsubl
addr16
xchg
sbb
push
pop
jmp
mov
jno
cltd
mov
sbb
adc
inc
mov
imul
out
sbb
mov
mov
popf
jnp
lods
cmp
ret
orl
xchg
and
sbb
out
xchg
add
sbb
dec
and
lea
inc
test
push
or
mov
jbe
ss
xchg
adc
inc
pop
imul
and
xlat
pop
sbb
add
test
ss
sub
int3
inc
or
and
andb
lret
scas
lea
aam
sub
mov
add
adc
fimuls
adc
inc
pop
pop
ret
jmp
femms
cmp
inc
scas
rclb
and
xor
str
xor
ja
or
inc
shll
and
push
inc
inc
jg
test
mov
jno
adc
xor
fsubs
add
mov
xor
xchg
push
sbb
rolb
int3
shll
arpl
hlt
pop
add
add
add
dec
daa
nop
jne
xchg
or
and
xchg
sbb
dec
daa
or
xor
into
and
add
add
inc
xor
in
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
or
inc
jbe
and
xor
pop
mov
bound
cli
mov
popa
mov
adc
popl
jmp
xchg
lods
mov
enter
add
mov
pusha
mov
jo
xor
in
or
mov
fdivrl
jg
and
cmpsb
xchg
or
sbb
push
push
cmp
push
or
adc
xchg
movsl
and
bound
arpl
aaa
pop
sbb
or
stos
and
or
outsb
add
add
add
or
inc
ret
jbe
iret
leave
fwait
mov
add
mov
mov
xor
xchg
int
sbb
adc
push
dec
adc
cmp
out
add
mov
or
dec
or
sub
in
add
test
pusha
lods
pop
adc
sub
test
mov
inc
inc
repz
jge
mov
cwtl
add
repnz
jl
xor
repz
mov
cs
dec
add
push
add
add
sub
adcb
inc
xchg
mov
test
adc
xchg
mov
lods
jle
add
xor
pop
mov
sub
movsl
mov
xor
cmp
jno
add
lods
mov
inc
or
cwtl
mov
cwtl
aaa
adc
add
testb
and
loopne
orb
inc
and
push
stc
dec
inc
subl
add
push
mov
fwait
lahf
les
push
mov
sbb
push
xchg
inc
testl
dec
add
push
add
push
add
movsl
mov
mov
je
sbb
in
push
test
out
popa
fdivr
sbb
imul
inc
pop
ss
pusha
cmp
sbb
or
fs
add
add
test
dec
test
mov
add
add
add
add
xchg
int3
sub
xchg
inc
adc
inc
adc
inc
adc
bound
ret
fs
test
and
popa
leave
xchg
es
inc
movl
lret
lea
cmpsl
xorl
lahf
out
adc
and
dec
jns
js
mov
jle
insb
mov
mov
mov
push
xor
lcall
inc
js
xchg
dec
ss
xchg
inc
jae
add
out
lahf
fsubrl
ljmp
mov
sbb
sub
jne
out
add
cmp
lret
cmpsb
adc
and
bound
add
rcll
inc
add
popa
std
pop
lahf
and
insl
jbe
add
movl
aaa
dec
mov
mov
outsb
add
xchg
dec
cld
testl
inc
movsl
sub
add
sbb
mov
xor
pop
adc
clc
sub
out
add
ljmp
xchg
test
dec
adc
lds
jo
loopne
jp
inc
es
inc
popa
or
or
or
mov
out
movsb
jl
sbb
mov
cmp
cli
jp
dec
cld
push
adc
adc
jno
add
push
adc
pop
mov
lock
or
bound
hlt
or
push
jge
jo,pn
dec
repnz
and
test
or
inc
jne
incb
inc
push
mov
sub
inc
loopne
dec
lods
int3
xchg
mov
out
jo
inc
cmp
ljmp
test
orb
pushf
fcomp
cmc
pop
lahf
addb
pop
or
or
rorb
mov
add
stos
inc
xchg
cmp
cmp
mov
mov
bound
repz
data16
sbb
adc
mov
or
jo
imul
add
sbb
mov
es
das
insl
test
sbb
cmp
movsb
inc
cmp
adc
loopne
add
cmp
enter
dec
repz
dec
dec
dec
outsb
lods
stc
inc
mov
testb
or
sbb
xchg
xchg
or
dec
jecxz
in
lods
imul
add
ficompl
fisubrs
inc
outsl
jae
das
add
ror
ja
pop
jg
xchg
mov
add
inc
dec
push
adc
adcl
mov
fs
xor
and
fiaddl
jbe
std
jmp
dec
mov
adc
insl
adc
add
mov
push
xor
sub
push
cld
jno
das
sbb
cmp
iret
nop
or
push
add
je,pt
sarb
sbb
sbb
mov
dec
loop
add
mov
xchg
js
push
pop
xor
gs
xor
dec
pop
idivl
xchg
aad
cld
mov
in
xor
fst
cmpsb
and
es
test
popa
xchg
int
and
mov
or
or
ja
sbb
jo
movsb
testl
dec
icebp
ja
jge
mov
or
int3
add
bnd
ret
add
in
cmpsl
in
adc
js
push
orl
ds
add
jne
sub
test
add
cwtl
push
adc
pop
mov
sub
mov
and
nop
adc
fistl
xchg
js
jnp
in
adc
mov
add
xchg
test
adc
ds
scas
inc
xchg
mov
mov
lcall
add
cmpsl
lcall
or
pop
scas
inc
fildl
repnz
jb
fmul
and
pop
or
mov
mov
insb
sub
xchg
push
cmp
mov
xchg
xor
mov
add
test
cltd
xor
add
inc
push
shll
sub
push
sbb
adc
orb
push
out
rcrb
iret
jbe
push
add
mov
push
into
das
or
add
mov
cmp
pop
cwtl
sbb
push
aaa
stc
into
or
sbb
xchg
add
or
adc
rcr
mov
jbe
pusha
subl
add
test
cli
fmuls
xchg
pop
out
add
adc
sbb
test
push
in
sub
push
xor
adc
inc
stos
cmp
jnp
dec
push
cmpsl
adc
in
add
addb
push
add
mov
mov
and
inc
test
mov
pop
add
push
pop
out
pusha
popf
testb
or
cmp
add
enter
mov
test
jb
add
sbb
lcall
and
notb
aas
push
push
addb
insl
adc
xchg
ret
and
push
cs
pop
sarl
and
testl
adc
arpl
sbb
sbb
clc
jmp
out
mov
xorl
in
inc
or
cltd
or
sbb
or
dec
push
xchg
out
adc
lods
in
filds
aas
or
shr
mov
mov
or
or
pusha
mov
out
mov
lds
mull
jle
sub
xlat
sub
and
loope
inc
gs
in
xchg
insl
cltd
test
and
push
incl
xchg
jl
lods
or
add
cmp
cld
pop
pop
sub
into
xchg
pop
or
lds
push
xchg
push
add
test
dec
pop
je
in
pop
sub
mov
mov
bound
call
das
mov
xchg
add
icebp
je
adc
loope
cwtl
das
testb
fs
add
jb
cmp
add
add
loopne
sub
dec
clc
add
sbb
loop
clc
add
mov
xor
dec
sbb
jg
ljmp
movsl
pusha
outsl
addr16
movsb
jmp
inc
xlat
test
mov
sbb
xor
fisttpll
or
push
nop
notb
sub
or
or
lret
jno
adc
out
jmp
frstor
or
not
xor
add
mov
enter
test
aaa
mov
out
xor
and
pop
cmp
rolb
push
mov
adc
jmp
fistpll
les
addl
mov
push
aas
cli
arpl
test
cli
add
jg
neg
jmp
mov
test
imul
dec
clc
add
xlat
imul
jmp
push
sub
pop
notl
les
push
pop
dec
not
enter
mov
push
sbbl
cmp
xchg
cmp
dec
add
out
push
or
shl
fisttps
xchg
lds
jno
jb
cmp
mov
enter
repz
jmp
or
add
push
pop
pop
adc
loop
fld
out
std
daa
gs
adc
push
adc
scas
sub
inc
dec
popf
and
pop
clc
pop
cwtl
aad
cmovs
pop
or
sub
orb
dec
or
xor
orl
xchg
pusha
push
adc
ret
loopne
push
mov
mov
mov
bound
dec
pop
shrb
push
je
jl
xchg
aaa
add
xor
push
push
ss
add
inc
mov
mov
sub
seto
test
mov
xchg
mov
add
popa
push
mov
mov
das
sub
filds
ja
bswap
dec
imul
ret
dec
mov
hlt
add
fcmovnb
call
jp
sub
lahf
jb
mov
mov
cld
xchg
sbb
jmp
or
lods
add
movb
jnp
test
addb
push
sub
mov
shr
dec
sub
adc
or
sbb
push
adc
lcall
int
or
mov
xor
mov
cmp
mov
lahf
xchg
call
ss
sbb
push
hlt
pop
cwtl
push
cmpsl
or
pusha
roll
pop
cmpsb
sub
scas
dec
mov
or
call
mov
xor
add
push
xchg
sub
cmp
lds
xchg
rclb
je
pop
shl
mov
test
pop
outsl
add
pop
bound
cwtl
leave
mull
fisttpll
int3
adc
rcrb
or
lds
repnz
push
fiaddl
sbb
cmp
fisttpl
mov
les
ffreep
or
bts
sbb
mov
jmp
mov
stos
dec
outsl
movb
test
cmp
testl
adc
pop
in
enter
lret
add
loope
pop
mov
xor
pop
and
sti
andl
jne
add
popa
and
int3
xchg
clc
push
fiadds
xor
jnp
and
jp
inc
bound
not
sbb
push
adc
or
stos
int3
out
ja
ret
xor
xchg
cwtl
cmc
mov
push
fldenv
adc
fadd
nop
adc
mov
pusha
icebp
sub
pop
mov
xchg
ret
inc
pusha
sub
int3
lods
push
mov
shrb
rorb
cli
pop
push
mov
xor
push
xor
sbb
inc
mov
sbb
pop
dec
jns
movzbl
cmpsl
adc
sub
andl
push
sbb
popa
cwtl
or
jbe
jmp
mov
int3
pusha
dec
mov
adc
pop
inc
fsubr
aam
pop
iret
out
xchg
inc
sbb
push
and
inc
push
adc
fldl
rcr
imulb
mov
sub
or
pusha
mov
jecxz
xor
std
stos
movsl
jo
xorb
cwtl
cli
aaa
je
pop
inc
sbb
fnstenv
gs
dec
mov
rcl
mov
pusha
jecxz
stos
aas
incl
dec
push
lods
es
cmp
cmpsl
leave
add
iret
out
add
push
mov
dec
stos
mov
or
cwtl
cmpsb
out
adc
sub
xorl
add
adcb
or
pop
inc
mov
negl
mov
jno
testb
call
int3
into
and
pop
adc
pop
xor
cs
inc
sti
sub
movsl
mov
scas
ret
pusha
adc
cwtl
xlat
test
inc
stc
add
or
or
inc
decl
test
stos
mov
dec
pop
mov
test
in
or
ja
std
outsb
daa
and
movsb
xor
in
shlb
inc
adc
xchg
xor
push
bnd
or
nop
aaa
dec
gs
add
xorb
sbb
sbb
sti
std
leave
mov
sarb
sbb
notb
ficoms
test
push
enter
jmp
push
pand
dec
arpl
arpl
stos
push
and
imul
aad
push
adc
iret
dec
cwtl
push
flds
loope
mov
pop
pop
addl
test
jge
pop
push
bound
lea
ja
cmp
and
les
into
xor
add
pop
nop
repnz
ss
lret
and
mov
sub
xlat
inc
lds
icebp
pushf
jnp
jmp
adc
or
pop
dec
stos
pusha
sub
push
or
neg
jmp
je
cli
add
stc
inc
sub
popa
arpl
pop
dec
xchg
pusha
adc
popf
cs
flds
not
xchg
push
cmpb
fnstsw
imul
inc
sbb
mov
sbbl
push
cli
jb
cmpsb
stos
arpl
out
mov
insl
xorb
decb
js
add
inc
cltd
add
cs
lret
sbb
jno
sbb
adc
roll
shr
call
les
hlt
add
and
std
jl
mov
mov
ljmp
sti
push
dec
jno
add
cmpsb
roll
xchg
dec
fwait
push
or
push
int3
mov
lock
and
sahf
xor
mov
mov
and
pusha
jno
mov
cltd
adc
cwtl
leave
sub
jnp
and
lcall
mov
add
jg
rep
inc
adc
repz
sub
pcmpeqd
aad
mov
push
cmpsb
incl
icebp
inc
jnp
mov
neg
jbe
inc
adc
sbb
insb
shlb
rorl
jb
inc
aad
sbbb
or
push
pop
pop
test
adc
cs
xlat
sbb
jp
xor
add
rorl
iret
int3
dec
inc
push
stos
mov
lret
and
mov
jne
mov
ret
sub
cld
sbb
inc
xor
out
add
sub
xchg
pop
or
add
lahf
outsl
pusha
jnp
cld
fdivl
dec
fs
scas
cmp
add
mov
pop
shl
jmp
push
test
in
test
mov
xchg
mov
add
inc
xor
test
jmp
int3
lahf
hlt
pop
jae
add
int
pop
adc
outsl
and
dec
rep
les
enter
sbb
add
mov
sbb
and
sub
cmc
popa
add
lds
xchg
sar
test
or
imul
mov
out
cmpsl
push
out
pop
push
int
pop
loope
sbb
add
cmc
fiaddl
push
addr16
pusha
pop
add
mov
in
add
push
pop
pop
sub
mov
push
cmc
loopne
mov
sub
fldt
out
mov
rcrb
mov
pushf
fadd
inc
pop
sub
cmpsb
decl
cmpsb
push
cmp
adc
jae
call
add
dec
ret
add
adc
stos
out
pop
mov
iret
xchg
inc
xchg
add
dec
sqrtps
xor
and
add
jbe
add
orb
add
inc
jle
fs
inc
fwait
loopne
stc
lret
push
imul
in
mov
mov
adc
xchg
or
dec
icebp
test
inc
mov
adcl
rolb
divb
and
dec
out
adc
popf
repnz
ds
pop
dec
and
mov
xor
fmull
pop
sub
ret
ljmp
not
in
cltd
and
pop
mov
movb
or
imul
push
in
sbb
lds
clc
test
insb
test
insl
jg
ret
sbb
push
int
jp
ja
icebp
int3
bound
test
ret
outsb
lea
mov
or
adc
loope
push
inc
xchg
lea
push
insb
push
pop
pop
mov
mov
popf
pop
pop
cld
test
add
mov
adc
cs
jl
pop
mov
es
mov
add
adc
push
or
std
pusha
sbb
mov
hlt
push
add
add
push
push
test
stc
sub
repz
and
shlb
leave
or
sbb
and
mov
movl
fistps
cmpb
push
pop
aas
pop
andl
xchg
in
and
inc
sub
cmp
xor
ljmp
pop
jecxz
or
mov
sarb
inc
repz
sub
shlb
mov
sbb
es
and
rcrl
loope
mov
dec
push
ror
and
shll
mov
cs
aam
or
insl
pop
dec
sbb
aam
and
xlat
lds
sbb
cs
push
movsl
add
jmp
pusha
mov
lock
mov
mov
mov
or
test
xor
and
lret
sub
mov
andl
add
inc
insb
enter
inc
xchg
stc
cli
subb
fadd
inc
mov
sbb
iret
pop
shll
pusha
push
dec
pop
popf
add
push
sarb
filds
mov
sub
jmp
pop
insl
xor
xchg
sub
fcmovnb
xchg
outsl
dec
and
or
dec
pusha
lds
inc
or
retw
and
out
popf
add
mov
jg
inc
lds
and
lock
bound
sbb
das
fbstp
mov
neg
push
xor
sub
clc
out
in
or
inc
sbb
call
mov
movsb
out
mov
cmp
pop
out
mov
bound
inc
and
inc
pop
add
rorb
movsl
das
fisttpll
sbb
push
fsts
adc
mov
shr
in
mov
pop
or
sub
sbb
jae
inc
and
adc
dec
cmp
js
xor
fs
and
or
cwtl
fstl
adc
dec
in
dec
push
add
xchg
fnstsw
add
test
xchg
in
inc
enter
cmp
add
xlat
and
movsl
add
add
adc
sbb
or
mov
or
mov
sbb
cmc
shrl
daa
xor
out
sbb
pop
push
dec
xor
sbb
nop
js
dec
pusha
icebp
jecxz
insb
sub
aad
sbb
push
fstps
addr16
out
push
pop
mov
pop
xorl
das
and
sbb
movsb
sub
ret
pop
cmp
push
jmp
sbb
xor
add
inc
pop
addb
jo
mov
out
shll
pop
pusha
inc
pusha
xor
push
jp
adc
cmpsb
clc
or
inc
dec
lret
scas
sub
sub
ljmp
sahf
jge
addr16
sbbl
rolb
pusha
pop
pop
pop
push
inc
or
fstl
xchg
iret
xor
scas
lahf
xchg
bound
nop
sbb
ret
push
not
in
adc
and
xor
cs
in
jg
into
jnp,pn
out
inc
adc
call
pop
lcall
mov
add
in
xor
divl
adc
pop
fidivrl
mov
in
cli
jne
es
ja
push
xchg
shlb
mov
dec
pop
sbb
push
mov
sub
imul
xchg
ljmp
lahf
and
cli
lods
push
and
leave
or
push
lds
fildll
push
aam
xor
or
mov
mov
mov
cmpsb
call
test
sub
rcrl
mov
inc
jmp
fsubl
sub
fimull
pop
add
dec
fisubrl
ror
mov
xchg
push
test
sarl
lcall
cmpsb
mov
pop
mov
dec
stos
fldt
jnp
and
neg
test
out
pop
js
insb
pop
nop
xchg
fidivs
and
mov
sbb
mov
out
xor
in
xlat
sbb
pushl
xchg
test
dec
or
add
or
leave
or
icebp
xor
addl
fisttpll
add
movsb
pop
sub
ret
lcall
fisubrl
out
outsb
test
fstps
popa
xlat
jb
in
push
or
dec
push
and
inc
xchg
sbb
out
adc
add
fimull
insl
push
pop
xchg
loop
leave
scas
push
dec
mov
or
and
push
faddl
inc
dec
jmp
adc
call
add
push
ja
push
xor
mov
jae
imul
sub
mov
mov
xchg
xchg
push
rorl
and
lock
push
rolb
sti
sti
sub
jmp
cmpsl
test
cmp
cmp
cwtl
out
jae
sbb
out
push
xchg
sbb
push
adc
xor
mov
push
dec
cmp
push
sbb
pop
mov
or
jno
mov
cmpb
lods
push
fs
add
in
cmp
in
pusha
sbbb
clc
and
loope
add
in
test
ret
inc
jbe
mov
and
pop
aad
pusha
add
mov
pop
inc
mov
xor
std
xor
mov
das
push
cwtl
mov
testl
mov
shr
rolb
mov
call
roll
jbe
and
pop
das
jne
adc
clflush
xchg
and
push
pop
pop
and
add
cmp
bound
inc
cwtl
shr
xor
ret
imul
mov
in
xchg
popf
mov
cmp
sub
mov
sbbb
add
and
mov
push
addb
fimuls
incl
mov
push
cmp
jmp
pop
loop
dec
movl
mov
nop
add
fsts
data16
pop
gs
adc
xor
push
ds
cmp
stc
dec
xor
adc
pop
icebp
mov
and
mov
out
push
add
push
sbb
adcb
test
in
and
lea
mov
dec
sub
adc
pusha
out
dec
adc
jb
mov
sbb
cmp
ret
out
cs
mov
xchg
sti
test
inc
pusha
xchg
mov
add
notl
pop
dec
mov
das
push
stc
push
pop
cmp
test
cmp
cld
add
fcompl
and
dec
xor
not
mov
xchg
je
sub
dec
add
cmp
std
xor
add
inc
sbb
stos
popa
int
mov
out
mov
add
sbb
sub
jg
push
in
fs
push
enter
sti
add
inc
adc
pushf
pop
fs
inc
mov
insb
push
nopl
sub
push
sbbb
push
inc
dec
pop
add
mov
xlat
fdivp
rcrl
xchg
rolb
rcr
cli
fisttpl
mov
fadds
mov
pop
pop
mov
mov
sar
sub
cmc
addb
inc
cmp
cmp
test
jo
sbb
fcompl
add
int3
or
sbb
sub
cld
mov
jmp
test
push
cmc
adcb
nop
sbb
cwtl
xchg
cmp
rcll
stos
fisubs
lar
inc
imul
outsl
adc
test
idivl
test
dec
cmp
mov
arpl
out
xchg
ljmp
dec
or
movsb
divl
lods
rol
fistps
or
gs
mov
dec
sbb
xor
dec
and
add
pop
add
xor
into
inc
mov
add
pop
mov
xchg
cmpsb
sahf
adc
inc
sarb
xlat
mov
inc
mov
dec
push
and
mov
ret
jle
in
stos
out
into
movsb
sbb
and
xchg
push
xor
std
cwtl
cmpb
xchg
rcrl
xchg
mov
test
mov
movl
push
rorb
jo
aaa
cmpsl
xchg
inc
xor
jecxz
mov
mov
imul
cwtl
mov
fsubr
sahf
hlt
ret
test
jg
sub
es
mov
push
or
dec
jmp
outsb
stos
dec
in
repz
scas
aad
jmp
rolb
test
sub
adc
pop
popfw
add
mov
shlb
iret
sbb
sarb
movsl
mov
cwtl
out
cmp
sub
fisubrs
and
fwait
movsb
neg
sarb
mov
xor
dec
out
hlt
inc
sbb
mov
out
sub
cmpsb
fistpl
add
dec
flds
fnstenv
ja
mov
push
pushf
leave
xchg
sbb
mov
push
nop
push
mov
and
dec
in
stos
sarb
jno
pop
xchg
push
adc
mov
cmp
add
and
inc
outsl
add
sub
dec
pusha
es
dec
mov
jnp
fs
shr
pop
mov
in
cmc
outsl
jo
lret
lods
jns
addb
lret
lret
stc
inc
sub
pop
lea
xchg
je
mov
data16
in
inc
cli
int3
sar
std
and
ja
dec
cltd
fcmovbe
push
mov
cld
mov
test
pop
mov
mov
into
add
and
imul
mov
gs
negl
out
dec
dec
xchg
shll
inc
int3
xor
inc
add
inc
mov
xchg
mov
imul
xchg
sub
inc
insl
fdivr
jge
inc
inc
xor
pop
push
cmp
int
sbb
lds
push
popa
push
sub
lds
movsl
dec
jno
cmp
mov
fs
int3
inc
test
inc
sbb
mov
idivl
mov
add
add
test
imulb
push
add
adc
push
and
xor
pusha
into
mov
daa
add
pop
pop
xor
mov
notb
shl
lcall
pop
loopne
pop
movsb
mov
xor
xchg
jo
xor
add
push
jmp
bswap
xchg
dec
mov
pop
loope
outsb
inc
call
inc
add
lret
test
xor
test
mov
or
inc
loopne
add
insb
push
fwait
sahf
lcall
mov
or
and
stos
add
ret
and
iret
clc
jmp
inc
mov
lods
ds
lahf
xor
test
insb
and
sbb
addr16
mov
push
adc
cmc
fs
sbb
orl
mov
adc
pop
adc
or
les
jle
push
leave
out
ficoms
sbb
cmpsb
movl
push
pop
out
or
xor
movsb
pop
jp
nop
pusha
pop
mov
ljmp
pop
mov
aad
lret
ljmp
cmp
add
dec
or
dec
add
dec
jb
sbb
push
test
daa
or
mov
push
and
adc
rcll
and
or
mov
and
sar
bswap
push
cmp
lcall
neg
adc
iret
mov
jne
adc
add
popa
dec
add
mov
xlat
add
add
subb
and
dec
add
jns
push
inc
jb
sti
repz
cmp
push
daa
push
pop
call
repnz
int3
inc
or
xor
ret
jg
mov
ja
jle
lea
adc
ljmp
or
inc
cmp
movsb
scas
dec
mov
cld
es
push
xchg
push
out
add
sbb
cli
ljmp
dec
fadd
or
mov
mov
mov
test
push
cmp
fs
mov
les
stc
rcll
sub
or
lahf
insb
and
adc
and
movsl
xchg
loope
insb
es
mov
push
cmp
jns
pop
ret
pop
stos
jbe
dec
test
mov
dec
mov
mov
jnp
test
xchg
or
cmp
and
pop
lahf
sub
or
outsb
out
dec
mov
and
adc
cltd
add
xchg
sbb
stos
jp
jnp
cmp
jl
loop
sbb
xor
add
sbb
pusha
mov
lods
shld
push
shrl
push
xchg
pushf
xchg
insl
inc
push
mov
xor
js
sbb
pop
cmp
xchg
jl
in
push
fsubrp
std
push
int
leave
push
mov
sub
movsb
gs
test
roll
fmuls
inc
mov
pop
mov
jae
adc
add
xchg
fmull
mov
aad
dec
xlat
dec
shrl
sbb
add
add
int
inc
push
in
inc
lahf
add
xchg
outsl
movsb
arpl
dec
pop
fs
rolb
rol
addl
add
sub
mov
add
and
adcl
lock
xchg
sub
je
pop
cmp
pusha
and
xchg
imul
push
pushf
and
addb
cli
setns
ficompl
sub
mov
inc
arpl
adc
cmp
cld
fcomps
xor
xchg
pushf
jg
aad
xchg
iret
pop
scas
js
pop
insl
adc
out
or
adc
sub
push
sub
and
movl
lahf
fld1
out
sets
inc
enter
pop
ds
das
sahf
pop
jns
dec
ret
scas
dec
xchg
iret
dec
flds
pop
add
int
movsl
fcoms
cmpsl
rcrl
sub
adc
pop
sub
pop
or
xlat
mov
sbbl
ljmp
insb
and
ljmp
xchg
sbb
jp
sbb
push
dec
popf
add
adc
into
mov
loopne
in
test
popl
inc
lret
jge
loopne
cmp
lds
xchg
jne
sub
hlt
jno
stos
push
sbb
loopne
and
notl
cmp
sbb
add
cmp
fsubrs
cs
sbb
enter
shlb
pop
cs
into
adc
ljmp
test
rcrb
xchg
and
jp
add
movsl
fdivl
jb
inc
sub
fsubr
dec
loope
test
xchg
mov
cld
xchg
in
stc
cmp
dec
dec
cli
mov
push
faddp
adc
xchg
fs
negb
sbb
imul
pop
cmp
loop
cmp
clc
mov
sbb
cs
test
ds
pop
out
dec
or
cmpsl
pop
xor
cmp
es
inc
push
and
pop
mov
mov
mov
lods
cmp
sub
es
ljmp
adc
stc
mov
in
mov
push
sub
jno
lcall
jns
jle
inc
pop
pop
fisubrl
out
cmpb
mov
cmp
popa
popa
add
pop
pop
mov
sbb
hlt
ja
js
push
add
addr16
adc
aam
push
aad
subl
cli
iret
mov
sub
push
xlat
popf
push
stc
stos
push
mov
xchg
pop
and
cmc
mov
xchg
xchg
push
add
cmp
ror
pop
xlat
pushf
por
sub
sbb
xor
repz
mov
mov
mov
arpl
das
nop
jnp
xor
xchg
cmpb
fistpl
add
shlb
mov
mov
push
leave
adc
push
addr16
mov
inc
aam
stos
outsl
mov
adc
cmp
cmp
jnp
xchg
les
cmp
or
test
lret
nop
iret
xchg
xchg
mov
jmp
mov
scas
and
fldcw
pushf
cs
in
jmp
or
loope
sub
inc
pushf
arpl
stc
pop
imul
or
dec
inc
cld
adc
js
test
adc
jns
add
and
mov
sub
xchg
pop
xchg
mov
mov
inc
pop
stos
arpl
int3
jne
in
pop
les
xor
loopne
fldl2t
stos
inc
sub
mov
jnp
ja
fbld
ret
jmp
adc
or
cmpsl
or
sub
inc
xchg
pop
xor
jnp
sbb
mov
out
dec
mov
pop
inc
mov
sbb
stc
pop
repnz
int3
dec
idivb
jmp
rcrl
ret
adc
xor
or
xor
mov
imul
and
xchg
clc
shrl
mov
cmc
mov
add
pushl
inc
mov
xchg
clc
adc
cmp
xchg
or
aad
cltd
mov
js
cmovle
imul
dec
mov
xor
dec
sub
adc
and
xchg
pop
sbb
shlb
ret
int3
test
jge
or
inc
lret
fisubl
or
dec
aad
sahf
pusha
fisttpl
or
xor
push
ret
mov
orb
addr16
push
pop
cwtl
mov
fwait
rclb
adc
sbb
dec
loop
add
xor
lcall
xchg
fnstcw
test
test
ds
fsubrs
in
rclb
fidivs
adc
add
out
adc
and
add
or
sbb
add
ret
in
inc
add
pop
add
fistps
sbb
adc
mov
mov
orl
or
and
lock
or
sub
dec
push
mov
push
pop
mov
cmp
and
sbb
fs
xchg
filds
or
push
iret
fiadds
enter
int3
xlat
inc
movsl
sub
or
and
into
int
out
lea
pop
aad
mov
adc
inc
fsub
xor
xchg
pop
aad
call
push
movsb
xor
int3
or
test
lods
mov
xor
lock
sbb
inc
mov
movsw
cld
pop
pop
push
popf
lahf
leave
push
mov
xlat
nop
fs
fs
xchg
add
dec
mov
inc
clc
xor
lahf
lods
aas
add
and
adc
rclb
mov
mov
fcomps
inc
aaa
popa
sub
cwtl
cmpsl
adc
aaa
jl
and
loope
les
pushf
xor
sub
nop
clc
movlps
cmp
sbb
xor
push
das
pop
xchg
mov
fs
jg
xchg
sbb
mov
mov
roll
cmp
fldcw
rclb
sub
cmp
push
mov
and
or
pop
mov
cmpb
adc
nop
test
jg
leave
lods
dec
gs
test
xchg
or
jne
push
leave
cltd
or
jmp
mov
and
pop
cltd
scas
out
cmp
jbe
or
int3
xlat
jge
inc
pop
faddl
leave
daa
or
sbb
pushf
dec
aad
sub
es
adc
into
push
adc
insl
mov
xlat
sub
ror
or
or
dec
daa
cli
jnp
stos
popa
nop
jl
dec
aas
xor
push
inc
cld
adc
mov
cli
in
add
sub
mov
pop
iret
pushf
mov
jnp
jbe
lock
mov
fwait
orb
rcrb
jbe
sbb
dec
bound
xlat
sbb
sub
nop
pusha
loopne
es
inc
ret
add
test
fs
aas
sti
and
aad
xchg
movsl
cltd
or
ja
mov
outsl
push
add
lret
ficoms
mov
scas
xchg
adc
mov
or
aad
xchg
cltd
ret
add
mov
movsb
ret
pop
fs
dec
cmp
sbb
mov
mov
mov
jne
mov
adc
stc
xor
jbe
aad
rorl
int
mov
in
inc
sub
sub
iret
stc
mov
adcb
jle
xor
mov
scas
xchg
lods
cmp
jo
cmp
push
pusha
or
mov
pop
sbb
xchg
das
sbb
cmp
jno
loopne
lds
xor
mov
scas
mov
repnz
lahf
dec
mov
jb
pushf
sbb
mov
incb
pop
xor
jmp
outsb
mov
stos
mov
adc
mov
int
sar
in
icebp
lea
jp
sbb
js
addr16
int
add
or
push
loopne
mov
and
mov
in
push
ljmp
pop
mov
jne,pt
jmp
push
mov
push
lcall
jb
mov
add
dec
jbe
add
and
add
mov
mov
out
sub
lods
or
xor
cs
xchg
ret
cltd
cmp
cs
fmulp
popf
jmp
and
out
xor
cwtl
cmp
mov
jae
pushf
pop
int3
stc
std
and
sbb
ljmp
fs
lds
cli
or
or
testb
xor
push
sbb
sub
ja
test
lret
fs
sbb
add
or
sbbb
mov
push
mov
dec
pop
fistps
or
dec
insl
pop
fsubrs
aaa
out
scas
out
adc
push
fisubs
dec
cwtl
cli
mov
lods
cld
sub
xor
outsb
fsubrs
dec
call
mov
mov
xor
cmc
push
mov
xchg
leave
call
mov
ds
push
add
mov
fmul
jno
mov
ret
aad
mov
push
pop
push
aam
lcall
mov
pop
test
xor
je
pop
addr16
punpckhbw
fs
mov
lea
push
pushw
xor
lods
js
mov
js
gs
xchg
sti
inc
inc
imul
cli
sbb
sbb
cmp
push
xchg
movb
imul
push
rep
and
lea
mov
enter
pop
lock
lea
test
mov
icebp
adc
cs
push
push
aas
dec
lcall
sub
jmp
imul
sbb
mov
iret
mov
dec
mov
rorl
rorb
cwtl
fwait
jmp
add
mov
test
lcall
ror
outsl
out
add
pop
insb
or
test
xchg
call
cmp
xchg
dec
pop
adc
jbe
out
mov
nop
xchg
add
xlat
adc
mov
pop
xchg
mov
push
push
push
add
clc
jo
xchg
xor
pushf
add
pop
mov
icebp
iret
ret
add
sub
xchg
mov
mov
mov
rclb
cmpsl
out
int
sub
xorb
adc
or
mull
in
sbb
adc
fs
aad
les
in
into
das
mov
out
xchg
movsl
faddl
xor
and
icebp
mov
cs
mov
movsb
ret
xor
movsb
jmp
mov
jl
mov
pop
xchg
hlt
xchg
les
inc
ljmp
sar
cmp
mov
test
adc
loopne
mov
add
mov
xor
push
cmp
iret
add
in
xchg
mov
movsl
cwtl
in
jne
lods
imul
add
popa
lock
xchg
loope
push
sub
loopne
fisubrs
orb
into
mov
dec
insb
cmpsb
mov
push
mov
test
push
and
sti
daa
lret
icebp
jbe
push
fildll
ja
push
ljmp
lret
inc
fdivrs
xor
cwtl
push
in
sub
xchg
les
js
xor
fistps
jmp
adc
xor
mov
cmp
mov
pusha
push
push
jae
iret
inc
jmp
and
fstp
push
adc
add
mov
push
cmpsl
pop
popa
lcall
data16
sarb
es
dec
jbe
in
xchg
xchg
rorb
ja
in
into
jle
mov
pop
rcrb
and
pop
daa
mov
insb
xor
js
test
andl
adc
adc
pop
add
lret
imul
imul
lds
imull
sub
add
cmp
pop
ret
stos
insl
cmp
or
jo
sub
xor
lods
lret
cmp
jbe
leave
cmc
add
mov
repz
call
jnp
sbb
dec
pop
cmp
std
xchg
pop
sub
mov
lods
mov
pop
repz
xor
jne
dec
jp
popf
ja
push
add
gs
push
mov
cmp
lahf
xchg
daa
sub
jb
cli
test
jno
push
pop
ret
jne
repz
sub
adc
dec
outsl
lock
mov
or
pop
push
orb
mov
pop
xor
das
sti
mov
movsl
and
jmp
not
and
xor
loope
test
inc
test
push
into
xlat
nop
gs
mov
hlt
dec
adc
pop
or
fcoml
and
mov
xchg
xor
cmp
push
lock
lret
push
push
sbb
inc
jg
outsb
dec
push
xchg
aad
lds
xor
rcrb
fstpl
fcoms
mov
and
cld
loop
cmp
jae
xor
xorl
sbb
cmp
outsl
add
or
adc
cs
sbb
or
sub
in
lcall
mov
cmp
out
push
xor
mov
popa
loopne
out
hlt
mov
cmp
andb
jmp
xchg
and
ljmp
test
mov
mov
cmp
iret
mov
xor
les
inc
mov
sbb
fldenv
out
inc
lock
fs
loop
mov
and
xor
lods
inc
insl
shll
inc
je
pop
clc
cld
call
sub
into
fidivrl
int
mov
sbb
push
push
xchg
or
jmp
cmovge
cmp
shrb
daa
call
xchg
mov
bound
jle
push
pop
aad
pop
inc
hlt
aas
mov
fstpt
sbb
jo
mov
fldenv
es
or
push
in
inc
fs
incl
imul
into
out
lret
fcom
or
cmp
in
and
sub
mov
outsl
jg
xchg
sub
popf
push
and
push
fsub
imull
add
ds
aad
and
or
sbb
xor
sbb
addr16
push
scas
sbb
push
out
adc
dec
jae
sub
cli
out
test
push
push
shlb
fisubrl
xchg
sbb
lahf
jnp
mov
sahf
lea
fstpl
bound
cmp
addr16
sub
push
icebp
or
in
or
push
je
xchg
xchg
mov
cli
nop
ret
sbb
sbb
cltd
mov
mov
xor
fsubrs
xchg
or
inc
push
ss
stos
in
jmp
lds
xor
pop
imul
adc
out
jae
cmp
xchg
jno
test
adc
mov
xorb
outsl
push
js
out
adc
cmp
faddl
ss
adc
mov
adc
push
inc
adc
pop
lahf
fimuls
mov
ds
das
cltd
or
pop
stos
dec
pop
frstor
lods
ficoml
es
lret
popa
mov
sarb
jge
add
dec
jne
mov
adc
mov
out
int
imul
xor
mov
push
inc
hlt
sti
test
mov
mov
push
lret
sbb
call
sub
andb
ret
jno
aam
dec
dec
or
arpl
outsb
in
lret
es
cmp
mov
aad
jbe
mov
or
mov
or
fwait
pushf
jle
aad
pop
xor
jae
sbb
in
call
int
pop
insl
andb
lahf
scas
cmp
adc
and
xchg
popa
dec
aas
push
xchg
pop
imul
sub
mov
loopne
fwait
or
cwtl
fcmovnbe
dec
mull
xchg
jnp
inc
fisttps
insl
cmpsl
sub
pop
lods
stos
nop
jns
add
cwtl
mov
mov
int
es
subl
hlt
mov
jno
ret
mov
rcrb
gs
sub
lods
adc
jg
push
fdivrs
adc
imul
push
fimull
popa
testb
lret
adc
jl
pop
lcall
inc
jbe
in
sti
sub
repnz
jno
sub
mov
scas
in
pop
fisttps
ss
movsl
imul
scas
fmull
xchg
fadds
mov
inc
addb
add
mov
mov
sbb
inc
test
xchg
mov
dec
adc
dec
cmc
sbb
out
mov
inc
mov
and
inc
bound
mov
inc
dec
outsl
xor
in
xchg
shlb
sti
jnp
or
jl
jmp
inc
outsb
ja
int
adc
icebp
test
sub
dec
in
jp
inc
jae
xor
pop
cwtl
push
rcrl
andb
cmp
adc
jb
add
test
es
test
mov
fisubrl
mov
mov
xor
testl
mov
cs
push
cli
pushf
cmpsl
inc
outsl
dec
insl
loopne
mov
sub
adc
rcll
rol
sub
mov
ret
cs
rcr
jbe
clc
adc
jge
jmp
jae
jp
fisubrl
imul
insl
gs
dec
negb
and
mov
push
xchg
inc
int
rep
popf
int3
xchg
in
ret
call
mov
mov
or
sub
mov
sbb
lods
adc
test
add
push
xchg
pop
movsb
pop
push
sahf
inc
inc
mov
xchg
push
jbe
mov
cmp
cmp
mov
enter
push
or
mov
subb
inc
sub
inc
loopne
call
addl
mov
xor
adc
js
adc
es
idivb
xchg
and
sub
inc
ja
out
or
sbb
sahf
cmpsl
test
push
adc
iret
cli
jmp
lret
in
es
adc
pop
pop
inc
stos
add
aaa
idivl
cld
jb
xchg
add
dec
int3
cwtl
add
int3
push
in
mov
lret
aad
sub
jb
push
insl
fildl
push
sbb
add
rcr
cmpsl
xchg
or
shll
inc
cmp
or
and
xlat
and
push
jge
roll
testb
and
cmpsl
loop
nop
pop
shlb
jbe
pusha
jne
or
ds
jl
sub
mov
push
in
rcrb
movsl
mov
rolb
adc
sbb
sarb
gs
and
inc
mov
rorl
test
mov
js
cltd
and
jae
pop
mov
mov
jg
scas
ret
lcall
add
enter
scas
push
push
cmp
cmp
je
push
adcb
sbb
addr16
es
adc
sbb
gs
ljmp
gs
mov
mov
mov
outsl
lret
add
xchg
fstpl
rcll
jbe
sbb
jnp
inc
movd
cmp
xchg
dec
jl
lahf
loopne
xor
inc
xchg
lcall
add
movsl
push
xchg
fsubl
inc
jno
cmp
xchg
les
cmp
out
mov
fs
mov
cmp
cwtl
push
addr16
add
sub
sbb
add
sbb
push
xchg
lock
into
enter
fldt
and
mov
pop
sub
scas
cs
adc
mov
inc
adc
call
xchg
sub
clc
sub
xchg
adc
fs
daa
loopne
mov
into
mov
call
push
out
ret
xor
sbb
ljmp
add
flds
sbb
jno
fmull
mov
stc
xor
or
sti
addb
loop
add
hlt
sbbb
testb
cmp
sbb
xchg
sbb
pop
sub
flds
pop
sbb
outsl
cmp
jge
cmp
sbb
lods
adc
mov
adc
shll
fnsave
or
xlat
add
es
cwtl
inc
dec
cmp
repnz
mov
cmp
xchg
outsb
jge
push
mov
add
push
fdiv
test
fadds
icebp
or
mov
adc
mov
inc
aas
daa
mov
sub
sub
xchg
jne
imul
adc
fistpll
test
lret
lcall
sub
cmp
inc
sbb
fsubrs
addr16
hlt
sarl
cs
mov
in
and
push
dec
iret
mov
mov
imul
insl
push
in
lcall
ss
shlb
scas
cmp
insb
pop
bound
fbld
test
xchg
xor
add
mov
mov
add
add
pop
pop
push
enter
or
jecxz
push
pop
pushf
cmpsl
int
ds
jge
stos
cmp
inc
push
loope
cltd
fsubl
fnstsw
xchg
stc
sub
cmp
sbbb
or
mov
gs
adc
adc
sub
add
mov
clc
loope
sub
pushf
add
adc
xchg
pop
call
inc
add
dec
test
jp
in
inc
arpl
push
sub
lcall
jle
cmpsl
sub
gs
sub
clc
mov
ljmp
ror
inc
mov
aam
xchg
pop
or
and
std
mov
cli
in
mov
icebp
out
mov
popa
ds
shrl
movsb
rcll
mov
fucomp
push
mov
dec
in
orb
push
xchg
cmpsb
push
xchg
mov
xchg
maxps
jb
cmpsb
scas
loop
add
movsl
outsl
sbb
gs
imul
repnz
shll
subb
test
in
stc
iret
in
std
push
cmpsb
add
or
movsl
or
roll
movsl
or
addr16
cli
xchg
pushf
jmp
notb
mov
cld
rorb
adcb
mov
rcrb
in
sbb
inc
cltd
add
adc
xor
gs
jb
and
pop
mov
xchg
shll
js
mov
sbb
cmp
cmp
aas
mov
jle
sub
stc
cmp
inc
aam
pop
sub
stos
les
sbb
push
lock
sbb
fs
jae
stc
jle
dec
push
shlb
pop
leave
mov
mov
fists
xlat
test
fisubrl
jae
sub
outsb
jl
adc
mov
mov
cmpsb
pop
cmp
adc
pop
rcl
out
notb
insb
or
cwtl
fistps
xchg
xchg
fcoml
rorb
dec
ja
out
pop
insl
sub
mov
and
aam
push
fs
ljmp
xor
jmp
gs
jmp
popa
jl
test
pop
dec
push
lds
mov
or
inc
test
xchg
push
and
xor
rcrb
fisttpll
xchg
xor
test
cmp
xor
mov
ficompl
imul
pusha
cltd
mov
xor
or
dec
in
mov
jne
and
dec
xchg
dec
add
mov
add
data16
xor
cmp
sahf
adc
cmp
pop
cli
int3
lahf
ds
rcrb
mov
lods
test
and
inc
mov
out
or
insl
inc
mov
aad
pop
xchg
and
mov
cmpsl
aam
mov
and
cs
adc
nop
mov
cmp
pop
push
in
pop
enter
cs
lcall
pop
clc
insl
jb
out
pop
mov
loop
or
xor
in
mov
les
pop
push
push
push
xlat
aad
jp
dec
cmp
cmp
mov
dec
push
xchg
mov
cltd
or
rclb
sub
mov
pusha
pop
mov
jle
jne
insl
jle
movsl
adc
in
add
lea
movsl
loope
xor
push
pop
or
ret
and
xchg
cs
adc
push
xchg
sub
fdivrl
in
cwtl
dec
mov
test
je
adc
lcall
sbb
popa
push
fidivrs
popf
add
adc
adc
sbbl
cmpsl
mov
adc
fwait
adc
cmpsl
mov
xor
call
adc
push
fcoml
sub
cmpsl
jns
lcall
mov
sbb
push
sub
mov
add
mov
mov
push
std
das
xchg
xor
mov
xor
ja
into
inc
nop
jge
pop
shlb
cmpsl
mov
or
add
ljmp
dec
insw
cmp
aam
movl
push
pop
out
and
sub
in
std
xchg
stc
leave
popa
sbb
cmc
aad
sbb
pop
xlat
adc
or
or
lahf
loop
popf
aad
sub
in
stos
mov
sbb
add
mov
cmp
mov
xor
adc
dec
sti
lahf
dec
adc
cmc
scas
lcall
adc
inc
mov
or
pop
push
xor
enter
out
lea
adc
aad
xchg
pop
loop
mov
mov
gs
fcomi
cmp
ret
shll
nop
jge
cmp
sub
dec
pop
in
or
adc
out
and
sub
dec
std
dec
aad
xchg
in
sub
loope
xor
or
pop
inc
data16
add
cs
push
xchg
es
ljmp
push
and
movsl
cmp
movsl
gs
das
sti
xlat
jbe
push
adcl
cld
pop
add
fucomip
popf
push
lahf
call
arpl
adc
in
ret
push
or
mov
sbb
inc
mov
hlt
pop
cmc
pop
jnp
popf
jbe
lds
sub
mov
cmp
pusha
out
pushf
mov
adc
push
out
outsl
or
xchg
addr16
stos
and
lods
pop
int3
or
jmp
or
lea
dec
inc
outsl
cmpsb
or
imul
sub
sub
int3
int3
jb
dec
cs
ljmp
add
cmp
inc
arpl
mov
insb
xlat
pop
adc
xchg
sbb
les
std
adc
pop
xchg
jge
mov
mov
ljmp
mov
movsb
sahf
sub
mov
idivb
ror
cmpsb
daa
pop
paddw
rorl
insl
jbe
pop
dec
mov
ds
imull
fwait
mov
dec
push
and
popf
adc
hlt
cmp
or
adc
push
fcomps
xorl
sbb
sbbl
pop
andl
and
add
repnz
mov
andb
mov
cwtl
and
sbb
jne
mov
inc
mov
inc
sbb
dec
pop
xchg
adc
repz
movsb
ret
cmpl
xor
stos
and
gs
dec
lods
scas
aad
movsb
and
addr16
mov
test
sbb
insl
int3
shrb
cmc
sub
call
into
mov
pop
jle
loopne
mov
pop
ret
dec
jge
fdiv
mov
push
les
mov
out
fisttpll
xchg
fcoms
in
insl
shlb
mov
and
sarl
push
adc
insl
lcall
mov
push
stos
setb
xchg
out
push
pushf
sub
movsb
adcb
add
daa
jl
mov
mov
fadds
mov
mov
sbb
rcll
int
int
cmp
imul
cmp
push
test
out
mov
push
add
dec
sbb
aad
xor
adc
push
mov
jl
pop
mov
or
cltd
lret
dec
xchg
jl
add
push
mov
cmp
outsl
dec
add
pop
in
mov
xchg
sarl
xchg
loopne
fs
ficomps
popf
cmp
in
scas
cs
cwtl
dec
fdivl
lds
fs
cmp
sbb
cmp
roll
cmp
jg
sbb
push
rolb
adc
xor
and
xchg
fmull
insb
push
mov
xchg
inc
mov
mov
jmp
sub
int
rolb
icebp
sbb
or
jg
pop
dec
ja
mov
movl
popa
pop
rcrl
mov
sti
sbb
or
aad
ret
fucompp
adcb
add
adc
ja
movsb
leave
daa
cwtl
cmp
bound
jge
add
mov
xor
mov
aam
push
outsb
hlt
insb
cltd
movsb
xor
mov
mov
shl
inc
int3
fcmovnb
movsl
pop
sbb
fs
in
dec
dec
shr
jmp
push
dec
cld
js
jae
jge
aaa
push
inc
adcl
dec
jg
arpl
cwtl
pop
test
cwtl
adc
out
loope
int
jecxz
jne
pop
mov
dec
adc
jnp
jno
push
xchg
call
popf
xor
adcl
ljmp
lret
les
xchg
cwtl
add
jne
push
outsl
push
mov
inc
sub
lahf
jnp
int3
sub
cmp
jne
fnstsw
pop
adc
sbb
xchg
mov
jo
xor
adc
sti
adcl
mov
loope
jecxz
nop
gs
pushf
fcmovne
xor
loopne
addb
dec
xor
xor
mov
out
inc
push
fstl
outsb
fwait
xchg
or
sub
test
or
jne
push
inc
fs
sbb
cmpsb
pusha
mov
pop
das
les
movsl
daa
push
adc
jns
push
into
clc
mov
adc
movsl
xchg
jecxz
les
loopne
or
xchg
sub
sbb
arpl
sub
push
cmpb
out
inc
fwait
int
adc
push
sbb
sbb
sarb
out
or
repz
hlt
mov
call
sub
push
xor
ss
lea
leave
movsl
lret
jb
add
jo
xor
mov
or
add
cmc
add
push
lret
inc
int3
xchg
and
fstp
out
xorl
cltd
pop
or
jmp
sahf
mov
cmp
sub
adc
mov
lret
add
dec
aas
roll
mov
in
and
in
and
imul
mov
jecxz
xchg
pop
int
fwait
and
insl
out
sub
or
xchg
pop
mov
fwait
mov
lahf
adc
lods
aas
dec
jmp
or
or
cmp
pop
andl
xor
push
pop
or
and
ss
out
cli
ljmp
jl
mov
cmp
stc
lea
scas
adc
imul
rol
stc
jmp
adc
arpl
cltd
jp
jg
jmp
xchg
xlat
pushf
dec
sbb
pop
xor
lret
sub
mov
into
out
add
sahf
sub
inc
fs
push
adc
xchg
and
xor
loopne
lea
mov
lahf
or
jl
dec
or
out
test
bound
or
jo
test
stos
daa
test
out
push
out
inc
ficoms
pop
inc
imul
mov
cmpsb
shl
dec
mov
push
inc
testb
mov
push
ds
mov
dec
incb
mov
pop
addl
aad
shl
test
mov
repnz
inc
scas
sar
push
fcmovnb
loope
push
inc
fdivr
inc
push
push
imul
cltd
xor
pushf
enter
cmp
mov
popa
orb
mov
push
les
push
imul
arpl
jo
decl
aam
or
sbb
fimuls
leave
mov
xor
sbb
fwait
into
dec
lods
or
inc
push
and
fildll
jl
mov
test
push
sti
nop
imul
pop
iret
sbb
xor
mov
cli
lahf
addr16
sub
les
jne
mov
push
filds
mov
sar
pop
fwait
sbb
push
inc
sbb
pop
rcrb
out
mov
xchg
xlat
and
mov
pop
jle
or
inc
ja
pop
movsb
arpl
rcrb
inc
jle
into
push
fidivl
loop
add
mov
and
sbb
in
outsb
or
loop
insl
dec
dec
or
or
pop
test
push
add
cmp
jmp
mov
mov
xchg
lret
iret
jecxz
xor
movsb
mov
pop
mov
outsb
cmpsb
lret
xlat
cmp
adc
ds
push
pop
xchg
push
jne
test
cmpsl
aad
xchg
jns
fs
dec
stos
mov
mov
das
sub
fidivl
cli
xor
loop
call
ret
rorl
dec
pop
push
pop
les
jge
push
bound
mov
sub
push
cmp
add
mov
iret
fisubs
sub
push
fnstsw
in
adc
xchg
adc
xchg
push
fistpll
cltd
xlat
adc
repnz
mov
in
push
insl
push
mov
inc
aad
or
push
hlt
sub
imul
sarb
mov
and
ret
xchg
in
pushf
adc
fisttps
lea
add
popf
mov
cmpsl
mulb
mov
push
les
sub
push
or
test
fidivl
roll
es
sub
xor
imul
call
arpl
lahf
and
into
mov
adc
mov
pop
hlt
xorl
lds
aas
sub
iret
rcl
iret
imull
sub
push
aas
frstor
jbe
push
movsb
cmp
dec
rolb
sahf
xor
nop
push
test
mov
inc
jmp
lds
and
out
and
into
push
sar
enter
or
xor
shrb
adc
mov
and
mov
jg
push
sbb
xlat
mov
sbb
xchg
and
jmp
inc
jne
xchg
mov
push
jb
jno
pop
aaa
xor
lods
std
add
or
aad
repnz
test
or
add
jecxz
cld
in
popf
cmp
mov
dec
add
test
or
inc
movsb
adc
cmc
mov
inc
bound
xchg
push
mov
ja
pushf
lahf
pop
out
mov
cmc
dec
pop
icebp
and
jno
jae
or
test
stc
cltd
insl
push
push
popa
sbb
adc
addr16
test
jns
sbb
in
sub
xchg
mov
inc
testb
adc
std
dec
out
ss
pop
enter
push
cmc
or
into
enter
adc
daa
popa
adc
or
in
cmc
inc
pop
adc
push
xor
test
pushf
or
mov
mov
jmp
or
outsl
sub
mov
or
int
ds
mov
mov
aad
or
lret
mov
fnstcw
sbb
outsl
loopne
fidivrl
jne
xor
push
fmul
mov
push
dec
pop
bound
mov
adc
call
mov
fnsave
mov
add
fsubrs
push
add
push
movsb
pop
popa
mov
stc
xchg
sub
mov
xchg
fwait
dec
loope
dec
inc
sbb
aaa
sub
xor
pand
jmp
xlat
fldln2
adc
xor
add
jle
and
jl
arpl
and
xchg
les
cld
lds
je
cmp
std
mov
ret
and
in
std
cld
ret
cmp
push
dec
movups
inc
pop
sbb
inc
xor
lahf
f2xm1
out
pslld
shlb
imul
pop
mov
or
or
mov
jecxz
mov
sbbb
test
andb
jl
and
jle
and
js
fsts
mov
pop
mov
int
int
xchg
fcoms
notb
in
lret
xor
mov
int
xor
jno
and
mov
jg
xchg
call
mov
insl
inc
add
xor
jo
sbbb
xor
aad
or
mov
les
dec
test
in
push
stc
pop
mov
nop
dec
ja
test
mov
inc
sbb
xchg
popf
xor
and
jge
mov
sbb
popf
out
call
and
repnz
jno
xchg
in
aad
nop
lea
shlb
hlt
scas
xor
in
iret
push
fiaddl
fcoml
stos
fwait
inc
push
vpcmpeqb
vmovdqu
sbbl
mov
loop
insb
popf
cmpsb
dec
cmpsl
jmp
pop
call
inc
mov
ljmp
xor
or
mov
sarl
add
int3
popf
std
jle
mov
popf
in
jno
pop
xor
mov
cmpsb
je
in
adc
call
fwait
push
dec
pop
cwtl
pop
andl
or
shll
scas
push
in
fwait
popf
mov
jbe
lea
mov
js
jle
dec
dec
xchg
or
in
jno
pop
stos
loop
test
pop
pop
xchg
xchg
cmc
sbb
mov
xchg
in
pop
pop
popa
leave
aam
mov
adc
enter
stos
stos
fistpl
call
int3
pop
cltd
nop
mov
jb
movsb
mov
enter
repnz
dec
pop
and
inc
inc
dec
and
push
out
mov
dec
xor
lds
dec
cmp
lcall
nop
mov
inc
push
and
sbb
push
jns
repnz
out
in
loop
das
int3
dec
push
mov
or
mov
insb
cltd
mov
or
add
xchg
or
stos
jne
in
insl
sahf
mov
pop
pop
dec
cmc
enter
mov
ret
sbb
icebp
test
cmp
and
ret
rclb
inc
lea
je
mov
les
stos
sub
xchg
jg
stc
jns
jge
sub
mov
rol
ret
add
loope
jp
push
rcr
out
add
je
mov
sbb
ljmp
cmp
stc
push
sahf
cmp
xor
stc
test
adc
out
test
adc
hlt
cmp
inc
sbb
jb
cltd
mov
into
insb
in
push
iret
loop
pop
ret
std
mov
scas
sub
or
mov
shl
and
leave
jbe
movsl
inc
hlt
pushf
call
pop
pop
xchg
sbb
dec
fs
mov
xchg
cmp
cltd
mov
push
je
lahf
cmp
packuswb
sbb
jne
dec
adc
fs
inc
pop
scas
imul
xchg
ljmp
and
int3
xor
and
dec
xchg
les
push
ljmp
pop
inc
push
inc
je
fwait
adc
xor
sbb
mov
xlat
cwtl
jmp
imul
call
sub
inc
inc
loope
cmp
leave
pop
repnz
mov
adc
jmp
data16
dec
or
scas
cmpsb
xchg
jmp
dec
cs
into
jle
mov
imul
cld
rorb
jmp
fcmovu
jecxz
movsb
in
jmp
cmc
cmp
dec
daa
rorl
mov
xchg
les
dec
sub
incb
push
or
sbb
and
inc
lods
loop
jl
xchg
pop
int3
push
pop
pop
les
add
aad
mov
shrb
popf
jl
cmp
lods
scas
jmp
mov
addr16
mov
xchg
incb
xchg
adc
add
dec
mov
aaa
cmp
popf
jmp
out
nop
jno
cmpl
fdivrl
dec
movsb
lods
sbb
pop
jno
mov
dec
gs
pop
inc
mov
push
fmuls
popa
add
and
mov
pop
dec
adc
and
sbb
sahf
or
mov
mov
in
cltd
dec
dec
aaa
stc
pusha
test
mov
jmp
movsb
and
mov
cmp
xlat
lds
loop
inc
push
push
mov
mov
xor
push
test
mov
addl
leave
and
inc
mov
lret
mov
mov
push
push
push
mov
loope
sub
cmp
into
fisttpl
leave
adc
mov
ss
aas
inc
or
dec
leave
mov
jnp
add
sub
repz
xchg
pop
xchg
jbe
and
add
xchg
adcb
and
pushf
xchg
fdivl
jl
aam
pop
push
lret
loope
in
pop
adc
dec
xor
stc
mov
and
xchg
outsl
push
daa
fcmovnu
mov
cmpsb
movsl
lret
sbb
mov
jnp
lods
fcmovb
xchg
pop
pop
rcll
pop
pop
addl
push
test
jp
rolb
xchg
xor
movsl
loope
or
scas
adc
or
hlt
or
mov
movsl
addb
inc
mov
das
add
imull
sbb
or
loope
mov
out
pop
ljmp
incb
out
sahf
imul
stos
sub
arpl
mov
shlb
int
dec
and
inc
fsubrs
and
inc
jbe
mov
xor
scas
ja
mov
out
xlat
ret
mov
jmp
mov
dec
and
sarl
mov
mov
sub
cmp
add
xor
je
mov
inc
int
orl
scas
pusha
test
sbb
xchg
cli
inc
add
cmpsb
subb
mov
int3
into
or
leave
add
pcmpgtd
push
call
push
push
pop
and
mov
xor
add
les
xor
sub
mov
jb
outsb
pop
sub
mov
fwait
jb
out
cwtl
pop
add
jmp
cmp
out
xchg
xor
sub
xchg
mov
add
aas
mov
push
mov
int
push
lods
xchg
arpl
push
mov
out
aas
push
enter
xchg
fdivs
ret
ljmp
sub
mov
loop
out
out
adc
xchg
dec
cwtl
add
cmpsl
pusha
mov
aas
cmp
pop
sarb
xor
movb
and
push
mov
jle
cld
andl
sbb
hlt
xchg
inc
push
pushf
cmpsb
cmc
orb
scas
testl
adc
inc
adc
cmp
jne
or
inc
insb
outsb
sbb
cwtl
repnz
jnp
dec
adc
cltd
fwait
mov
sbb
sub
adc
lods
nop
mov
lret
in
shlb
test
mov
loopne
movsl
lods
arpl
rcrl
pusha
and
aaa
cmpb
sbb
sbb
es
out
push
pop
and
xchg
mov
push
enter
or
add
push
ja
in
cs
xchg
or
jb
mov
data16
orl
jge
cmp
icebp
cmp
aas
add
clc
leave
pushf
jmp
jecxz
xchg
scas
aas
xor
mov
inc
clc
push
inc
pop
addb
je
test
nop
cmp
fxch
cmp
test
popa
mov
cmp
xor
loop
lds
xorl
mov
cmpsl
sub
cmpsl
push
clc
scas
std
adc
fucomi
cli
inc
out
push
sub
fdivrs
imul
and
push
icebp
ror
test
lea
mov
jnp
mov
ja
imul
sbb
int
mov
shl
lcall
xor
les
dec
xor
arpl
mov
lcall
test
ss
mov
sbb
jb
jne
pop
and
lahf
fs
pop
cli
into
pusha
and
adc
ret
popf
lods
mov
mov
push
jbe
es
push
call
popf
cld
test
add
inc
mov
scas
out
and
xchg
sub
aam
mov
int
xchg
movsl
aaa
xor
and
mov
pop
push
es
dec
out
adc
ja
push
dec
sahf
test
push
inc
outsl
mov
loop
push
insl
xchg
jg
cmp
adc
ret
les
cld
shl
adc
push
stos
cmpsl
xor
lods
xchg
mov
dec
les
je
add
ss
call
cmpsl
cmpsl
out
dec
outsb
jae
dec
pop
mov
mov
inc
push
jecxz
xchg
add
mov
adc
es
pop
cs
xchg
or
adc
sbb
xchg
mov
and
sbb
popa
and
cmp
cmp
push
mov
lret
pushf
or
addr16
sub
add
int
lea
cmp
mov
stos
adc
sub
imul
jne
lahf
movsb
and
repnz
xor
in
movsb
push
lds
jl
lods
or
ja
and
popf
xchg
repnz
popf
dec
popa
popf
add
test
fabs
cmpsb
push
fdivrl
loope
test
jmp
imul
nop
ss
push
xchg
in
aas
out
lds
mov
jo
mov
mov
push
aad
pushf
pop
sti
or
and
jbe
lcall
fstsw
push
stc
fwait
sbb
rcrl
movsl
cld
movsl
xlat
or
movsb
xchg
bound
jne
fiaddl
dec
sub
dec
mov
into
adc
in
dec
cmpsl
loopne
jbe
shlb
mov
jno
sub
dec
mov
clc
adc
or
mov
mov
insl
xlat
mov
cs
nop
xchg
push
adc
ljmp
jae
popa
adc
in
mov
sarl
add
xchg
rolb
lcall
inc
xor
leave
jne
je
push
outsb
dec
gs
daa
inc
data16
and
call
leave
push
mov
cmp
lea
pop
cmpsb
movsb
xchg
cmpsb
mov
pop
nop
popf
mov
xchg
test
pushf
sbbb
daa
adc
push
out
or
lret
add
sub
mov
out
test
cmp
pop
iret
cwtl
push
fs
cltd
jge
nop
xchg
xlat
pop
lret
jl
lahf
fs
les
jne
je
jmp
xchg
mov
and
rcll
aad
mov
or
loop
inc
faddl
xchg
mov
jecxz
and
sbb
or
adc
lods
or
sub
adcb
inc
mov
sub
xchg
and
lods
js
fwait
pop
xchg
ja
push
jl
inc
inc
pop
xchg
fdivrs
sub
or
inc
into
sarb
pop
cmp
roll
add
shlb
push
jmp
dec
adc
add
dec
aad
mov
in
jmp
jle
mov
xlat
les
test
jbe
movsl
add
leave
mov
mov
sarl
adc
jmp
enter
ret
jne
cmp
inc
outsl
or
sub
mov
lret
jle
lds
add
mov
test
or
js
enter
addb
xor
push
aas
fwait
sti
adc
hlt
push
mov
xor
pop
int3
cmp
popa
jb
into
jmp
adc
popf
xchg
int3
shl
mov
push
mov
pop
pop
sahf
in
sub
ja
pop
cmc
mov
push
add
adc
bound
daa
adc
cmp
sbb
or
popa
xor
xlat
mov
arpl
imul
cmp
ja
popf
in
and
fcmovbe
inc
and
in
scas
pop
xor
mov
dec
sbb
add
inc
movsl
jge
mov
rcl
sub
dec
popa
sbb
sbb
pop
lcall
xchg
sub
pop
cmp
es
hlt
inc
ret
inc
mov
pop
cmc
cmp
xchg
aad
filds
add
mov
in
fimuls
sbb
mov
enter
and
test
xchg
mov
jecxz
bnd
sbb
sbb
add
xchg
out
and
cmp
inc
adc
pop
jecxz
push
jmp
ficompl
and
sub
in
aam
adc
cwtl
hlt
dec
out
test
orl
aas
cmp
xchg
push
jbe
xchg
jp,pn
outsl
lods
sbb
aam
inc
int
test
out
mov
fisttpll
stos
xchg
inc
into
pop
dec
faddl
aaa
into
push
hlt
rorb
xchg
jp
jb
sar
int3
sub
sbb
movsl
aam
cmp
ja
aam
icebp
aas
push
loop
rcrb
dec
in
inc
fiadds
scas
fisubrl
and
xchg
xlat
shl
xchg
daa
mov
shll
mov
fdivl
into
pop
push
cmpsl
rolb
mov
mov
cmpsl
leave
clc
mov
xchg
stos
jmp
mov
push
sbb
mov
push
mov
rol
arpl
and
and
pop
cltd
push
xchg
mov
mov
loopne
mov
sahf
dec
dec
rcl
test
or
pop
mov
mov
lods
loopne
call
push
es
mov
push
dec
push
sbb
jg
jecxz
pop
cmp
cmp
mov
fwait
xchg
mov
jns
cli
aam
cs
js
fsubp
mov
shlb
mov
xchg
push
mov
mov
pop
and
lahf
les
pop
popa
xor
inc
xchg
add
insb
jl
ret
and
push
aam
pushaw
int
sbb
iret
adc
out
rcrl
mov
addr16
call
sbb
jp
mov
sbb
cmc
lahf
mov
pop
jecxz
movsb
xor
lahf
pinsrw
add
popa
popa
out
nop
sub
jmp
cmc
adc
cmp
lret
jo
adc
add
int3
in
and
push
int3
and
push
jl
dec
adc
or
cld
xchg
lds
mov
pop
add
fimuls
andl
fnstcw
push
insb
jnp,pn
cmp
sbb
pop
sub
and
out
fwait
movsl
test
je
iret
pop
xlat
pop
adc
sbb
mov
cmp
jb
mov
adc
notl
xchg
lods
aaa
outsb
add
sbb
stc
iret
adc
pusha
push
int
mov
into
xor
fisubrl
cmp
inc
in
notb
shr
imulb
xlat
and
in
pushf
or
addr16
mov
sbb
test
pop
pop
mov
sti
push
dec
iret
push
hlt
mov
test
in
lea
jne
jne
jns
ret
mov
xor
cmp
pop
mov
lods
in
fdivrp
push
or
mov
xor
adc
aam
mov
inc
lahf
cwtl
inc
clc
pop
cmp
arpl
les
mov
ja
stos
mov
decl
jnp
pop
in
daa
jo
jecxz
inc
cmp
stc
xchg
dec
push
xor
pop
mov
mov
mov
lds
push
add
pusha
scas
xor
dec
js
fs
pop
imul
popf
into
dec
fwait
xchg
repz
nop
or
push
scas
add
out
push
mov
xor
mov
xor
inc
pop
es
lea
pop
cld
stc
test
shr
xchg
inc
fsubrs
test
scas
mov
rorl
adc
aaa
xchg
dec
outsb
jmp
int
push
pushf
jnp
add
mov
jnp
gs
mov
pusha
jmp
fmull
pop
pushl
xchg
adc
sub
iret
mov
cltd
shlb
popa
sbb
xor
mov
insl
cmc
movsb
inc
mov
pop
in
stos
shlb
mov
xor
ljmp
in
andl
sub
mov
mov
xchg
lods
mov
jmp
imul
pop
xor
add
outsl
xor
dec
call
mov
outsb
lea
mov
dec
pop
iret
pop
scas
sti
cmp
or
rolb
jnp
push
jb
scas
cmpsl
push
mov
xor
loop
push
pop
insb
bnd
roll
fucomi
mov
andb
in
mov
mov
xor
jl
or
fst
cmp
movsl
hlt
mov
js
lahf
imul
xchg
pop
sbb
jmp
pop
clc
jp
and
mov
mov
cltd
lret
xchg
shrb
pop
xchg
xchg
loope
mov
int3
stc
xchg
jnp
push
das
pusha
jg
xor
push
jns
call
cmp
inc
push
pop
das
cs
jno
xor
or
jo
pop
rcll
and
scas
mov
pop
popf
ror
sbb
lahf
xchg
or
inc
call
jg
das
adc
pop
jp
mov
testl
dec
shll
mov
cmp
cmpsl
fmuls
jl
cltd
mov
add
mov
mov
xchg
pop
int
cmc
push
aam
js
dec
aaa
ljmp
ret
adc
les
rolb
fs
lret
xchg
cmpl
and
add
jbe
push
fs
xchg
or
fsubrs
and
shrl
cmp
lds
mov
xor
pop
mov
mov
jp
js
lahf
adc
jp
cmp
aas
int3
out
pop
add
test
pop
fidivrs
add
in
cmp
in
pushf
or
loopne
jo
in
mov
enter
mov
adc
cs
jno
cwtl
add
xor
stos
subl
cwtl
fdivrs
sbb
cmp
repnz
hlt
mov
dec
arpl
or
movsl
sub
out
lahf
inc
jmp
lcall
pop
mov
sbb
mov
xchg
xchg
xchg
sub
dec
rcrl
scas
int
fcomps
adcb
mov
jb
jnp
shrl
jbe
fcoms
mov
aam
stc
insl
cmp
inc
cli
test
test
and
add
inc
aad
ljmp
mov
dec
mov
aam
shl
and
xlat
inc
fwait
ret
adcb
addr16
jmp
shrb
orb
push
xchg
xchg
ja
nop
jg
jne
inc
mov
rolb
shlb
daa
push
outsl
aaa
adc
xchg
sbb
and
sahf
scas
push
fcomps
iret
aam
nop
cs
push
mov
xchg
test
jle
fistpll
mov
xchg
out
pop
les
in
scas
add
test
popa
int3
inc
sti
dec
int
mov
lret
mov
adc
int3
ds
loope
incb
stos
icebp
xor
nop
cmp
aam
out
or
sbb
dec
and
lret
lcall
movsb
pop
pop
leave
dec
jbe
lods
sbbl
pop
nop
xchg
xorl
push
sbb
cmp
ljmp
aad
stmxcsr
pop
cmp
aaa
fs
imul
pminsw
ret
inc
int3
and
out
sub
adc
lahf
xchg
ja
cmp
sub
scas
test
sahf
es
inc
ss
in
sub
or
cmp
mov
jg
mov
lods
jp
add
out
xor
fs
xor
in
gs
cmc
sti
pusha
push
inc
jle
pop
cmp
jo
cld
sahf
cmp
xlat
leave
mov
jp
in
and
scas
xchg
divb
enter
push
lret
mov
push
js
push
mov
mov
rcrl
pop
jmp
add
or
and
jo
sub
inc
inc
scas
add
pushf
xchg
jg
inc
pop
adc
mov
inc
sub
es
in
and
outsl
in
sbb
das
pop
cmc
sbb
mov
lcall
xor
and
sbb
and
pop
cmc
mov
mov
xchg
jecxz
jae
ja
rcll
cmp
dec
rcll
sbb
xchg
or
lcall
rolb
mov
mov
pusha
popa
xor
xchg
je
cmp
pushf
mov
xor
inc
inc
sub
idivl
dec
cmp
call
xchg
xchg
xchg
xchg
dec
inc
push
pushf
adc
sbb
pop
cmp
mov
scas
inc
adc
push
clc
cmp
xchg
jecxz
jo
xchg
jle
inc
iret
dec
mov
mov
sub
dec
add
pop
cli
ja
push
test
dec
push
mov
mov
mov
mov
pop
mov
or
jae
push
in
or
push
adcb
jg
or
mov
stc
dec
fldl
stos
lret
jbe
mov
std
in
psrlq
divl
arpl
es
mov
pop
nop
in
loopne
dec
mov
xchg
aaa
std
pushf
jne
int3
and
outsb
lea
xor
jns
inc
outsl
adc
xor
fistl
dec
scas
sub
loope
pop
test
mov
jae
rol
dec
xchg
je
shl
js
mov
lods
mov
dec
xchg
push
push
test
call
jl
sbb
push
jbe
push
xlat
adc
shrb
popa
loopne
jge
dec
cmp
dec
adc
sbb
xlat
inc
jp
in
sub
fbstp
xchg
sub
ficompl
or
jmp
in
popaw
xchg
sbb
nop
sbb
pusha
inc
add
loopne
pop
test
push
or
lock
add
jne
xchg
sbb
and
xchg
sahf
fidivs
fs
loopne
mov
clc
out
jne
aad
xchg
mov
cmp
sarb
jno
in
shlb
clc
lods
stc
je
movsl
sti
lcall
sbb
into
push
das
cwtl
out
cmpl
adc
leave
and
int
push
xchg
or
clc
adc
les
push
push
rclb
or
ffreep
lds
sahf
cli
lea
inc
cmpsb
or
cmpsl
pop
into
das
jl
cmp
push
pop
xchg
mov
dec
outsw
or
fwait
lods
in
aam
jnp
test
adc
fmull
xchg
daa
sub
rcl
jb
int3
ja
popl
xor
js
out
pop
jp
pushf
mov
das
add
inc
mov
movups
cmp
ljmp
pop
push
arpl
pusha
stc
sti
sti
inc
push
out
ss
jecxz
xor
aam
cltd
push
mov
sub
ror
jmp
pop
pop
dec
mov
les
sub
cmp
add
jae
adc
add
push
push
fsubrs
out
and
lods
imul
cltd
cmp
pop
push
mov
out
adc
int
adc
pop
mov
addr16
ficompl
ret
rol
ret
hlt
mov
frstor
xor
cwtl
sarl
pop
out
sti
lret
daa
jl
cmp
mov
test
insl
testb
xor
sbbl
jecxz
mov
leave
add
adc
arpl
or
cmp
add
fsubr
adc
or
hlt
jp
inc
adc
mov
add
loope
addb
xchg
mov
mov
mov
lcall
in
xchg
cmp
push
jmp
dec
push
popa
pop
ffreep
scas
imul
pop
push
test
mov
in
mov
push
or
dec
or
or
jmp
pop
imul
xchg
call
es
push
fcoml
imul
dec
xchg
cmp
lock
mov
pushf
push
or
insb
fidivl
push
mov
in
in
cltd
xchg
js
lock
sbb
mov
lea
push
push
jl
cld
test
mov
cmp
push
aam
adc
ret
jae
stos
sahf
xchg
les
push
cmp
mov
inc
add
cmp
je
or
mov
hlt
outsb
dec
mov
int
in
inc
mov
jge
xchg
fstp
ss
out
imul
add
mov
lea
hlt
push
mov
jae
inc
and
mov
imul
lret
aaa
dec
fwait
cmp
adc
sbb
inc
fcompl
popf
ljmp
in
add
movsb
fcmovb
inc
inc
lock
test
jge
jl
roll
jbe
fs
arpl
mov
cmp
test
push
push
adc
sete
test
cltd
aam
cmp
mov
mov
mull
push
psubusw
loopne
push
mov
cmp
call
fcmovb
mov
mov
and
jne,pn
out
fnstsw
sar
push
xor
jbe
xchg
repnz
ret
bound
mov
out
test
fisttpll
int
mov
addr16
cmp
fwait
xor
pop
inc
pop
mov
icebp
test
sbbb
bound
je
rcrb
les
pushf
push
movsb
jl
and
mov
xchg
mov
fisubrl
in
fbld
test
mov
push
or
xor
inc
mov
and
or
les
mov
cmp
xor
cmc
fstl
push
leave
xor
les
cmp
call
iret
test
xlat
lock
call
inc
mov
fcomps
add
pop
movsb
jb
imul
sarl
push
loope
aas
or
mov
adc
jns
cmp
aam
stc
dec
jge
xchg
mov
push
aam
jno
xchg
mov
test
cltd
mov
xchg
jo
imul
in
mov
loope
shr
aam
pop
mov
mov
and
adc
cwtl
scas
ds
xor
mov
jge,pt
mov
xchg
sbb
xchg
mov
jo
cmp
mov
cmp
sub
data16
jp
push
dec
jne
sbb
fdiv
and
cwtl
pushaw
pop
cld
mov
mov
and
xor
push
loope
mov
cmp
and
or
into
push
leave
movsl
mov
mov
int
push
test
into
cmpb
mov
aad
push
pop
clc
cmpb
mov
loop
fstpl
sbb
dec
mov
mov
imul
movsl
in
pop
scas
pop
dec
shlb
test
jns
mov
pop
mov
js
cwtl
ljmp
sub
jo
cmp
adc
mov
pop
mov
cmp
sbb
or
subl
mov
pop
es
sarb
mov
xor
shll
and
push
repnz
sbb
mov
mov
push
xchg
in
fisttpl
push
push
in
dec
adc
in
cli
push
jmp
aad
pop
hlt
xor
dec
shll
pop
decl
pushf
sbb
cmp
sub
or
jle
in
sub
lods
clc
dec
jg
pop
xor
aad
repnz
int
mov
xchg
addr16
ficoml
inc
out
pop
dec
adc
push
pop
cmc
lcall
push
push
jp
add
mov
js
push
mov
lcall
clc
xor
mov
mov
or
inc
das
sbb
adc
sub
jo
les
xor
push
jl
adc
sub
ror
outsb
dec
ss
test
adc
mov
xchg
test
in
stc
and
cmp
sub
fcmove
aad
jl
jl
inc
xchg
aam
repnz
push
insl
and
xor
pop
mov
mov
adc
loope
fs
dec
pushf
xchg
and
jmp
or
mov
xor
xchg
shll
lods
jecxz
fcomi
jmp
and
dec
rorb
push
mov
pop
fisubl
inc
cltd
xchg
mov
mov
lea
push
push
add
cmpl
or
push
adc
cmc
idivb
mov
sti
mov
in
clc
jecxz
mov
aas
dec
mov
mov
xlat
aam
adc
adc
xor
notb
nop
push
in
push
movsl
add
ja
fmul
jp
xchg
jbe
inc
and
mov
ret
rcrl
push
dec
pop
imul
sub
outsb
mov
adc
clc
movsl
out
adc
mov
and
ret
ret
cli
shl
enter
pop
gs
lcall
mov
adc
cwtl
fs
add
mov
leave
pop
mov
cmpsb
pop
dec
bnd
stc
lahf
stc
fwait
jo
popf
mov
pop
push
mov
add
popf
and
add
pusha
mov
push
bound
and
dec
xchg
sti
das
sbb
call
inc
out
mov
repz
inc
pop
pop
int3
xchg
int3
pusha
xchg
sbb
push
stc
or
xchg
fdivp
lock
cwtl
rorb
fbld
sbb
xor
aam
push
xor
mov
pop
out
fdivl
out
push
cmp
xor
cltd
sub
flds
sub
xchg
mov
push
lahf
adc
outsl
xchg
sarb
in
pop
sbb
jnp
pop
dec
in
inc
rcll
hlt
jg
push
mov
dec
mov
outsb
repz
adc
je
xor
or
pop
adc
cmp
cmpsb
lds
mov
xor
sbb
cmpb
or
out
aaa
mov
dec
adc
mov
out
int3
idiv
xor
jo
xor
outsl
out
adc
ret
cmpsb
mov
or
inc
popf
int3
push
push
sbb
subb
inc
and
jnp
loopnew
xchg
gs
sbb
leave
sti
scas
mov
shlb
fwait
inc
xchg
pop
pop
testb
sar
mov
and
jg
mov
push
shlb
push
aad
xchg
xchg
xor
xor
pop
aad
adc
ds
cld
pushf
loope
stc
dec
jle
mov
jae
xor
cmpsb
push
dec
jnp
pop
mov
add
dec
inc
pop
mov
daa
addr16
jmp
je
jmp
and
cmp
test
jg
or
cmp
stos
adc
fimull
jbe
lahf
imul
xchg
xor
adc
mov
fcmove
mov
ds
adc
or
repnz
pusha
or
test
dec
aam
cltd
and
call
mov
daa
popf
aad
sub
xchg
gs
andl
and
ja
inc
in
dec
push
cmp
mov
int3
cmp
sti
js
mov
mov
xchg
orb
ret
dec
bswap
mov
or
sahf
xchg
mov
sub
xor
xchg
in
jp
cmpsb
xchg
push
loope
pop
arpl
push
test
insb
inc
ret
mov
sbb
sbb
jecxz
jb
inc
dec
or
push
mov
cmp
icebp
xchg
dec
stos
xchg
out
das
jns
sbb
xor
stc
or
call
or
xchg
fadds
pop
dec
repz
xchg
fmulp
movsb
pop
cmpsb
aad
or
pop
push
cli
and
roll
lret
jp
adc
push
je
ret
pusha
rorl
data16
mov
sub
or
jnp
mov
loopne
gs
cmp
clc
iret
in
xchg
mov
sti
dec
cmpsl
add
xchg
aas
jle
dec
xchg
rcll
out
pop
lods
sub
xor
pop
or
cmp
imul
jb
cmp
adc
xor
sbb
data16
enter
hlt
or
jmp
lds
and
fldt
aad
xor
add
jns
out
push
enter
cltd
xchg
ud1
pop
popf
sub
xor
sub
sbb
cmp
jnp
arpl
pop
les
ds
jne
mov
rdpmc
xchg
test
daa
mov
ds
mov
and
roll
jne
xor
fidivl
or
fistps
xchg
loopne
test
sub
pop
xchg
mov
pop
and
and
sbb
stc
mov
cmc
es
xchg
enter
pop
daa
jbe
xor
fnstsw
jne
mov
mov
fwait
adc
arpl
mov
cmpsb
call
aas
mov
test
mov
lcall
cmp
lret
rclb
pop
lea
sub
outsb
flds
es
push
sbb
imul
aas
cltd
cmpsl
inc
fnstcw
jmp
pop
int
xchg
xchg
xor
imulb
add
popf
mov
je
psrlw
cmp
ja
cmp
inc
xor
mov
adcl
jns
sbb
in
mov
pop
sub
mov
jns
add
pushf
xchg
lds
cmp
jmp
lret
adc
fimull
pop
sub
dec
inc
cmp
shlb
jle
cs
push
pop
pop
ljmp
das
mov
adc
adc
test
mov
and
fimull
testl
mov
jg
xlat
sub
or
sbbb
mov
mov
out
loope
lcall
mov
adc
dec
iret
sbbb
fistl
jbe
push
out
in
xchg
rcll
sbb
and
pop
xor
fisubrl
dec
xchg
or
jb
iret
clc
shl
ja
pushf
popf
adc
add
cmp
adc
fstl
js
stos
adc
call
shl
dec
mov
and
push
and
ret
or
jno
pop
leave
movsl
and
daa
bound
cwtl
push
cltd
cltd
imul
shrb
pop
add
bound
xchg
pop
scas
jnp
sbb
and
cld
inc
jge
in
push
jle
ret
inc
mov
add
cltd
jae
cli
ds
xchg
adc
sahf
notl
mov
jl
push
in
inc
pop
cmp
cmp
out
add
addl
sbb
int
sub
add
sbb
mov
test
ljmp
out
add
push
lock
test
pushf
cwtl
stc
or
sub
mov
shlb
adc
sti
in
cmp
sbb
fnsave
pop
xchg
ficoml
push
into
dec
lret
sub
adc
sub
add
out
sbb
rcr
roll
inc
fsubl
dec
adc
jecxz
out
cmp
push
add
pop
xchg
repnz
lahf
pusha
mov
popf
and
lcall
in
push
pop
pop
gs
ljmp
add
and
ss
push
jmp
dec
lret
aam
fisttps
pusha
sbb
add
add
fcompl
loop
das
mov
jns
lods
jns
sbb
rclb
adc
test
cmp
loop
dec
xor
clc
shr
or
jl
pop
xor
adc
sub
pop
shlb
lea
adc
roll
push
lods
xchg
cmp
test
lahf
imul
xor
sbb
sub
icebp
xor
cmp
popa
or
fsts
cmp
mov
stos
dec
fidivrs
mov
sbb
and
pop
scas
clc
ja
xor
es
xorl
loop
adc
mov
xchg
imul
jmp
add
rcl
addr16
lret
inc
cwtl
faddl
mov
dec
add
push
mov
pusha
push
pop
xchg
mov
jo
dec
andb
fnsave
mov
out
movsb
aam
mov
jmp
pop
mov
aam
insb
cmp
clc
xor
inc
mov
and
fstp
lock
xor
inc
stos
xor
xchg
xor
jne
sbb
cmpsl
out
leave
dec
iret
jl
sahf
adc
call
adc
jge
sub
mov
mov
fstpl
ljmp
sbb
and
cmp
pop
out
cmp
imul
lsl
fisubrl
test
dec
cmp
stc
jge
icebp
es
ljmp
pop
xchg
and
int
enter
jbe
popa
lret
outsb
scas
inc
dec
stos
lahf
out
adc
cmc
frstor
ror
pop
in
and
ja
leave
out
daa
and
dec
sar
ljmp
and
jg
jmp
inc
outsb
test
add
fcomp
xor
xchg
imul
stos
icebp
adc
test
xchg
mov
rorl
mov
inc
dec
hlt
mov
pusha
out
cmpsl
inc
loope
jae
nop
mov
je
popa
ljmp
ret
icebp
stos
sub
add
sub
sub
cmp
adc
jmp
push
fisubrs
in
sub
inc
std
jmp
jae
xor
stos
sub
push
aas
out
mov
cmp
jbe
pop
xchg
int3
xchg
dec
ds
jne
ljmp
les
cmp
inc
jnp
push
mov
push
sub
jmp
inc
dec
faddp
cwtl
add
insb
scas
inc
mov
mov
jns
inc
idivl
hlt
stos
xchg
rcrb
fldenv
and
jno
and
jg
stos
xchg
inc
lret
sbb
xchg
jg
fwait
push
rcr
rclb
pusha
mov
jae
lahf
push
icebp
test
out
push
sub
and
push
cmp
xchg
mov
shrl
and
stc
ja
ret
dec
pop
mov
mov
adc
cld
jmp
clc
xchg
adc
fsubrp
inc
out
cmp
xchg
lods
xadd
sbb
pushl
mov
cmpsb
leave
movsb
fisttps
cmpsb
sar
mov
insl
out
sarb
mov
cmp
pop
and
outsb
iret
popa
and
mov
cmp
movsl
shll
mov
push
xchg
cmp
xchg
test
mov
cmp
sub
shll
ja
pop
pop
push
mul
push
cmp
insl
arpl
je
jp
aad
pushf
add
dec
or
xlat
ljmp
sbb
sub
push
outsl
push
stos
ljmp
push
and
jae
lods
dec
cmp
orl
jg
jno
notl
aas
cld
mov
es
sbb
data16
je
test
adc
mov
inc
sub
into
jecxz
sub
lds
cwtl
xchg
sbb
ret
mov
inc
sahf
xchg
dec
sub
cmp
cmp
je
lods
and
sbb
add
inc
shrb
mov
in
dec
lock
jnp
xchg
push
mov
push
jno
pop
cmp
inc
imul
push
ret
cs
jg
loope
mov
outsl
mov
ret
fisubs
into
and
inc
outsl
aad
cmp
add
aam
dec
lcall
add
and
cwtl
mov
cmp
and
lds
mov
in
sub
and
bound
mov
cmp
sub
add
pop
jge
pop
aam
lods
das
les
adc
lods
shl
jmp
test
xor
pop
dec
pop
in
cwtl
xchg
rorl
xor
test
mov
cmp
cli
int3
ds
push
mov
mul
push
pop
xchg
movsl
dec
adc
sar
add
pusha
inc
xchg
in
jno
cltd
mov
xchg
cmp
outsl
mov
ret
mov
ret
and
in
add
mov
sahf
mov
mov
push
ljmp
popa
aas
imul
push
sahf
cli
cmpsb
push
scas
fsub
xor
adc
fldenv
and
das
pop
jo
repz
mov
daa
xchg
push
lods
fs
out
pop
jno
sbb
add
adc
iret
xchg
shrb
push
inc
cmc
rcrb
lds
jo
inc
xor
push
pop
jo
cltd
lods
hlt
fnsave
and
and
sub
aad
pop
jbe
pop
and
movsl
ret
mov
out
mov
out
das
shlb
push
lods
insb
pop
shlb
xchg
mov
scas
cmpsl
xchg
aad
sti
dec
loope
jl
mov
xchg
add
lcall
aam
outsl
call
xor
sub
cltd
lods
pop
lds
cmpsl
insl
xchg
push
fldenv
sahf
pusha
mov
jge
inc
lret
jmp
sbb
jle
rorl
jo
pushf
xorb
adc
enter
andl
sub
test
mov
inc
pop
subb
fwait
das
mov
inc
fwait
add
xchg
fs
pop
incb
cmp
adc
popf
cmp
mov
sub
test
sar
loop
push
movsl
xor
das
pop
jne
sbb
out
insb
pop
testl
jl
mov
mov
nop
xchg
adcl
or
add
or
les
fstpl
fistps
inc
add
mov
int
popf
negb
shll
pop
andb
add
mov
cmc
scas
jecxz
xchg
or
scas
in
fistl
pusha
adc
pop
xor
pop
mov
jo
mov
mov
jmp
mov
clc
add
adc
fdivrl
out
cwtl
add
shrb
sub
lea
scas
xor
fidivrs
sbb
fstpl
inc
pusha
and
aad
fisttps
shll
cmpsl
shrb
xor
pop
out
in
add
clc
aaa
push
mov
es
inc
dec
shll
or
lcall
pop
jne
out
call
lods
and
fnstenv
push
iret
addr16
push
int
xchg
lods
and
fcmovnu
outsl
sbb
jp
pop
ds
icebp
pushl
out
mov
pop
cld
lea
mov
xchg
fwait
or
outsl
ret
lcall
or
imul
or
loopne
inc
insb
sub
in
pop
xchg
pop
dec
sub
mov
mov
pop
jmp
sbb
stc
pop
xor
push
cmp
clc
cs
stc
jae
in
int3
sub
repnz
mov
inc
xchg
insl
ss
pop
pop
rol
jnp
push
adc
test
data16
dec
daa
outsb
fisttps
aad
add
dec
decl
mov
cmp
ret
sub
adc
aas
leave
inc
jno
push
rorb
fsin
pop
movl
xor
jge
xor
fnsave
xor
jne
xchg
stos
scas
mov
add
sub
mov
sub
movb
mov
adc
and
nop
jb
out
xchg
sub
loopne
mov
jge
andl
in
lds
cmpsl
xor
mov
iret
test
inc
movsl
adc
inc
shll
mov
jne
sub
mov
in
fidivrl
adc
xchg
mov
add
fbstp
push
scas
xor
sub
jns
lret
rcll
mov
ret
mov
and
insb
xchg
mov
arpl
or
cmp
and
sbb
fldt
psllw
mov
add
sarb
xchg
push
add
aaa
push
adc
pop
cmp
jmp
jmp
adc
test
xchg
addl
scas
sub
aaa
jne
jl
jg
iret
mov
xor
mov
xchg
fstpl
mov
sbb
sbb
adc
inc
imul
nop
cli
dec
pop
fadds
adc
in
aaa
pop
jecxz
fstps
loop
mov
fs
adc
cmp
jne
dec
mov
push
pop
ret
je
mov
cmp
ffree
sarl
jnp
fs
std
sub
mov
jnp
imul
mov
ss
cld
cmp
aad
xor
and
or
adc
pop
shlb
mov
sarb
push
pushl
mov
mov
mov
push
inc
and
push
mov
xchg
inc
btcl
jmp
shll
and
shll
mov
cmp
decb
push
mov
sbb
and
dec
pop
lcall
test
sbb
mov
jge
sbb
and
stc
cmp
in
sub
push
add
sbb
or
out
add
and
or
mov
mov
ds
arpl
dec
jmp
out
les
gs
push
rcll
dec
xchg
mov
sbb
xchg
fdiv
dec
ljmp
add
xchg
push
dec
push
insl
das
and
push
mov
addr16
and
jo
jge
and
mov
mov
or
sub
clc
shlb
xor
movsb
pop
mov
das
sbb
daa
sti
adc
fldcw
bound
xchg
or
in
fidivrl
movsb
or
sub
xchg
insb
popf
adc
adc
mov
xor
add
dec
push
pusha
or
sub
or
inc
add
or
in
adc
jne
mov
sbb
addr16
xchg
dec
insl
dec
fistps
inc
cmp
iret
xor
cmp
fnstcw
jb
sub
leave
xor
xchg
or
mov
xchg
xor
rcll
cmp
xchg
and
dec
rclb
imulb
mull
xchg
cmp
out
in
xorb
scas
lock
lret
mov
stos
cmpsb
lods
inc
pop
addr16
stos
xor
cmp
push
cmp
sbb
sub
mov
lods
sbb
lcall
jb
jle
lcall
pop
sub
xchg
out
sbbl
mov
and
or
mov
and
sbb
mov
repnz
xchg
fsts
popf
fiaddl
sar
jnp
xchg
pop
stos
jne
int
dec
cltd
dec
jge
adc
mov
roll
adc
xchg
daa
adc
xchg
popf
mov
push
call
push
xor
mov
lcall
cmpsb
adc
in
ja
sbb
js
cltd
lea
inc
xchg
mov
push
xchg
sbb
push
lahf
xor
dec
jl
std
adc
mov
and
in
push
std
fsts
mov
pop
aad
xchg
mov
xchg
negb
mov
or
sar
jl
popa
fdivs
adc
jae
xchg
xchg
mov
shll
add
popa
xchg
ja
xchg
mulb
mov
insl
adc
push
xchg
mov
fadds
mov
test
mov
or
pop
mov
push
cmp
add
adc
push
lds
pop
popl
flds
mov
and
iret
push
mov
or
lret
jl
clc
in
xor
outsb
stos
push
cmp
jnp
stos
outsl
mov
pushf
ret
dec
rcrb
xchg
imul
dec
jmp
and
cld
insl
jge
xlat
stos
mov
in
popf
subb
test
divb
mov
add
fimull
movsb
addr16
add
xorb
stc
xchg
call
pop
inc
inc
xchg
sub
int3
mov
iret
xor
cmp
mov
loope
subb
int
push
clc
test
mov
sbb
arpl
call
sub
call
outsb
xchg
cmp
dec
lods
loop
xor
sbbb
adc
mov
ret
xor
and
mov
dec
fadd
xchg
cmpsb
mov
daa
arpl
inc
mov
movsl
cmp
xor
addr16
adc
pop
adc
popf
cmpsb
xlat
xorl
push
call
mov
cmc
iret
lods
push
sbb
mov
xor
mov
test
jbe
mov
pop
lret
gs
mov
and
enter
icebp
fsts
in
fiaddl
add
sbb
aaa
imul
fwait
jnp
dec
push
mov
stos
mov
xchg
ja
adc
xor
pop
into
out
ds
aam
xchg
push
sbb
imul
fsubl
movsl
xor
enter
mov
adc
int
aam
mov
and
loope
mov
fimuls
xor
enter
iret
jns
movsl
fidivrs
cwtl
or
mov
stos
aad
sub
pusha
out
test
jnp
pop
mov
and
pop
sub
lea
push
inc
lods
inc
push
mov
or
popf
movsl
aas
pop
cltd
lods
in
dec
sti
dec
hlt
adc
pop
jno
stos
stc
mov
bound
faddl
lea
adc
xchg
je
mov
xchg
enter
fstps
sbb
cltd
or
jne
out
cltd
ret
pop
fisubs
fisubrs
add
out
add
dec
push
mov
aad
int
pop
or
or
jle
orb
mov
xchg
ss
xchg
sbb
mov
aad
cli
shl
inc
les
mov
int3
sub
pop
movsb
mov
push
stos
xchg
ja
jb
mov
ja
test
out
insb
cmp
jg
shrl
nop
mov
dec
in
xor
sbb
push
cmp
and
aaa
clc
cmc
xlat
fstpl
fnstcw
pop
je
push
and
push
push
or
cltd
frstor
cmpsl
imul
mov
pop
pop
xchg
lret
jp
adc
mov
mov
adc
and
dec
int3
cmp
sbb
cmpsb
out
pop
mov
cmp
dec
aam
nop
and
roll
test
ss
rcl
sbb
aas
pop
mov
jg,pn
cltd
shl
int
imul
pop
cs
mov
lea
lret
cli
lcall
std
in
xchg
cmpsl
add
push
inc
stos
and
add
xor
and
xchg
icebp
push
lret
shlb
js
ss
pop
int
leave
outsb
aam
sbb
mov
rcrl
sub
out
push
popa
push
aas
mov
fs
or
lcall
cmp
mov
pop
adc
mov
rcl
decl
ds
out
inc
xchg
jg
xor
sbb
mov
inc
mov
movsb
lcall
cmp
aas
outsl
int3
inc
sub
inc
pop
divb
aam
mov
in
push
pusha
cmp
or
inc
into
aas
inc
mov
xchg
mov
imul
jmp
dec
mov
leave
and
les
add
lea
mov
jmp
iret
sbbl
outsb
fidivrs
jb
mov
leave
cmpb
xchg
sbb
xlat
mov
data16
mov
cmp
int
mov
mov
test
into
loope
je
add
rol
push
rcrl
add
sbb
push
lea
icebp
int3
lods
enter
hlt
mov
jne
or
adc
test
testb
xchg
movsl
xchg
xor
mov
xor
sbb
daa
pop
jo
inc
mov
xchg
xchg
popa
jle
sbb
pop
sbb
and
aam
mov
imulb
movsl
stos
or
sbb
cli
idivb
daa
pop
scas
das
jnp
xchg
jecxz
gs
iret
add
inc
pop
shrl
dec
out
mov
enter
sti
in
mov
add
mov
or
mov
jl
icebp
mov
push
enter
lea
push
mov
sbb
in
dec
outsl
adc
xchg
push
cltd
fs
loopne
push
ret
ret
mov
and
xlat
or
or
mov
pop
mov
fimull
int3
cmp
cmc
adc
dec
mov
pop
adc
scas
sbb
cmp
cmpsb
jmp
or
jns
add
mov
dec
mov
sub
and
test
xchg
xchg
les
lahf
push
rcr
sub
xlat
test
loope
jmp
sub
xchg
outsb
testl
ja
xchg
stc
pop
jg
sbbl
sbb
and
mov
les
test
dec
mov
insb
pushl
pop
mov
jl
pop
addr16
or
mov
popf
cltd
dec
aad
or
out
jge
inc
imul
inc
nop
cwtl
es
adc
and
enter
nopl
mov
shl
repnz
dec
insb
xchg
or
lods
aaa
jp
shlb
icebp
adc
and
sbb
int3
sbb
xchg
inc
xchg
push
or
loop
sysexit
out
mov
mov
aad
push
int
fists
adc
xchg
push
lcall
jg
xchg
cli
enter
movsl
cltd
jle
in
and
lods
in
cli
into
fdivrs
push
aam
in
aas
push
jmp
es
jge
sub
cs
rclb
in
jbe
pop
and
push
mov
sub
mov
movd
inc
add
aas
jmp
inc
in
std
leave
push
shl
ret
mov
sbb
nop
lods
dec
push
cmpsb
sub
pop
pop
fs
fs
aaa
xchg
das
push
jbe
ss
iret
lea
stc
jge
mov
add
fs
cmp
xchg
push
push
xor
out
jg
add
or
inc
scas
and
xchg
push
outsl
jp
movsl
pop
add
sub
pop
mov
sbb
pop
sub
pop
and
jae
mov
xchg
cmp
stc
popa
out
mov
inc
sbb
xchg
push
xchg
dec
push
andl
stos
mov
xchg
bound
les
pop
lahf
jecxz
clc
adc
cmp
aas
xlat
push
mov
lods
das
int3
adc
adc
stos
hlt
lds
inc
ljmp
dec
or
push
sbb
in
cmpsl
lds
insb
jns
stos
jae
cmp
sub
out
mov
mov
into
cli
out
sub
mov
add
and
add
jp
or
loope
inc
sbb
jb
out
pop
jno
adc
andl
shlb
push
sub
dec
lahf
mov
fcomps
mov
fs
clc
add
or
mov
in
popf
xchg
xchg
add
and
and
rorb
fsubrl
push
xchg
or
sar
dec
in
pop
mov
es
mov
or
adc
in
dec
arpl
cmpsl
add
xchg
out
es
pop
sbb
xorl
bound
push
sbb
or
jg
xchg
xor
in
insb
push
xchg
popa
xor
les
fs
insl
stos
jecxz
test
xor
les
mov
data16
cmp
into
sub
std
and
xorb
jl
inc
pop
xor
sbbb
add
mov
in
loopne
push
out
ja
dec
mov
in
adc
mov
insb
cld
fistl
popf
aam
cltd
into
enter
dec
cltd
push
mov
dec
jecxz
mov
divl
or
or
fstps
out
cltd
xor
jg
mov
or
inc
push
push
test
xlat
loope
repnz
cmp
push
lock
lret
das
jmp
cld
lret
xor
js
scas
or
in
ret
cmp
sub
addb
aad
jmp
add
sbb
add
xlat
push
ljmp
sub
add
or
rcrb
push
repnz
mov
dec
dec
out
cld
sar
cmpsb
jo
push
dec
test
fisubs
xchg
or
push
hlt
add
push
adc
mov
pop
repz
adc
das
lret
add
sbb
xor
sub
hlt
mov
aam
fbstp
mov
and
jge
aam
pusha
inc
and
test
push
fsubrl
hlt
int
pop
lock
fs
and
stos
lods
dec
cwtl
and
sub
or
mov
fldt
xchg
or
movsl
scas
cltd
in
sub
fldenv
insb
dec
aad
pusha
push
dec
mov
rorb
dec
ljmp
fcmovnu
add
pop
or
std
out
mov
inc
sbb
mov
sub
imulb
lret
push
aas
jp
pop
push
sbb
sbb
or
adc
jo
lcall
mov
inc
into
xchg
pop
call
xchg
sbb
sti
xchg
cmp
sub
mov
dec
pusha
rclb
pop
sbb
mov
mov
jmp
std
xor
les
lods
stos
fsts
les
lret
cmp
pushf
mov
lret
pop
sbb
dec
pop
insl
test
aaa
add
inc
pop
pushf
sub
pmulhw
add
or
mov
popa
add
sub
mov
xor
sub
cld
lcall
dec
xchg
push
mov
psubw
cld
adc
push
testl
addr16
xchg
js
dec
adc
cs
mov
mov
and
insb
loope
cltd
les
mov
pop
inc
cs
mov
pop
push
stc
sub
into
dec
cmpsl
lahf
pushf
sub
inc
inc
or
and
cwtl
inc
shll
mov
popf
pop
xchg
sub
cld
push
movsl
flds
jl
icebp
fadds
lods
xchg
sarl
mov
push
pop
adc
aam
scas
clc
sub
xchg
arpl
fwait
std
xchg
sub
adc
in
adc
inc
cmpsl
sarb
push
jmp
mov
sub
lahf
in
xchg
mov
cmp
cld
popa
jmp
out
lcall
cmpsb
aam
arpl
inc
js
jmp
outsl
lahf
cli
sarl
lods
push
and
xor
pop
pop
out
mov
out
loopne
aas
jne
das
push
loop
enter
mov
lret
xchg
push
add
ljmp
xchg
out
jmp
hlt
xchg
mov
jno
insb
lock
nop
dec
xchg
sub
test
stos
xchg
jnp
pop
sahf
lcall
pusha
fisubrl
xchg
and
out
nop
cli
pop
or
pop
or
addl
mov
pop
int3
dec
mov
cmp
xchg
stos
xor
scas
xlat
sub
test
xchg
cmp
lds
and
stos
mov
xchg
jecxz
or
stos
push
loopne
imul
lret
fidivs
rolb
xchg
inc
dec
sbb
jge
lock
and
gs
add
sub
jnp
and
movsb
cs
fs
adc
mov
insl
xchg
insb
fwait
push
das
inc
sub
sub
loope
cmp
pop
lds
jo
out
inc
fwait
out
cli
or
cmp
hlt
xchg
lret
or
movsl
mov
pushl
popl
jns
xchg
inc
dec
push
clc
mov
in
add
fdivl
sbb
adc
inc
xor
cwtl
and
jp,pn
dec
popa
scas
and
and
out
movsl
mov
in
jle
or
out
aam
mov
rorb
xchg
xchg
adcl
sbb
movsb
add
and
add
sub
xor
mov
xchg
jle
xchg
sti
lcall
scas
mov
xlat
lcall
push
adc
or
or
sub
out
shl
std
das
sahf
test
sbb
call
enter
shl
sub
jecxz
subb
ljmp
mov
adc
mov
test
scas
sbb
call
adc
pop
or
in
xchg
mov
repnz
jae
push
mov
iret
jmp
dec
sub
bound
pop
push
jle
les
pop
push
imul
insb
mov
mov
ljmp
and
xor
int3
xor
add
bsr
mov
in
pop
int3
aaa
and
or
je
push
loop
test
mov
test
xchg
sbb
add
add
jne
jg
push
gs
mov
cmp
xchg
inc
fbld
or
daa
sub
and
cs
adc
les
sub
and
dec
mov
in
add
push
dec
mov
push
xchg
inc
lcall
shrd
jmp
inc
movsb
popf
sub
mov
test
repz
cmp
mov
jp
leave
cld
fiaddl
int
pavgb
push
loope
dec
sbb
mov
pop
jns
or
bound
cmp
gs
jl
xchg
cmpsl
adc
in
dec
jl
ret
adc
push
imul
pop
and
out
lret
push
fcmovnb
stc
cmp
xchg
jmp
jmp
movb
pushf
mov
div
rcrl
cmp
and
mov
mov
stos
dec
mov
xor
and
xor
xor
xor
xchg
repz
xchg
movsb
xchg
jecxz
add
pop
pushw
movsl
xchg
and
mov
xchg
sbb
mov
lcall
xchg
adc
stc
iret
adc
sbb
ret
pusha
ds
rcrl
imul
jg
fsubrp
nop
jae
pop
cmp
es
mov
and
inc
pop
add
jle
dec
stc
std
out
dec
test
popf
aam
jo
lock
or
xorb
out
ss
jae
into
shll
inc
clc
xchg
decb
aas
outsb
iret
les
pop
mov
mov
jnp
cmp
call
pusha
adc
mov
insl
cmpsl
adc
mov
nop
xchg
adc
iret
sbb
fs
lods
push
cltd
cli
icebp
inc
mov
or
and
in
mov
movsl
inc
sahf
cmp
mov
adc
dec
sbb
xchg
aaa
xchg
or
jmp
fs
cwtl
push
jmp
loopne
in
in
ja
mov
jne
inc
in
jns
data16
ja
out
and
xchg
lods
fldt
cld
xchg
rolb
mov
arpl
sbb
or
or
adc
sbb
out
insb
mov
pop
xlat
test
ja
into
pop
mov
xchg
insl
push
orl
ljmp
dec
ds
jns
jb
adc
jmp
out
push
adc
sub
xchg
sbb
push
push
fisttpll
pop
push
mov
sti
xchg
popf
ss
mov
cld
xchg
jbe
mov
sbb
adc
push
dec
pop
pop
adc
outsb
dec
sbb
dec
rcrb
jl
cmp
lds
insl
xor
mov
out
inc
mov
pop
mov
cmp
repz
into
push
js
clc
imul
jge
inc
push
mov
lret
pop
adc
scas
iret
and
imulb
dec
push
inc
add
push
cmpsl
aad
fcmovnbe
ds
push
pop
aam
ds
fptan
push
or
or
lods
jb
dec
dec
fs
insb
icebp
mov
imul
int3
in
mov
mov
rdtsc
jmp
mov
mov
or
xor
pop
lock
jnp
mov
push
cltd
mov
and
jp
imul
fs
jge
push
inc
gs
inc
bound
push
adc
cli
call
xor
popa
cmpsb
data16
cmp
or
repz
in
lahf
mov
mov
adc
ret
loop
ret
cs
pop
mov
xchg
gs
push
into
push
je
pop
xlat
int
aam
lds
and
loope
loop
addr16
inc
mov
xchg
xchg
jmp
into
clc
cmp
xor
xchg
dec
insb
dec
sar
stc
in
and
xlat
scas
jmp
mov
iret
sub
pop
in
je
inc
repz
cmpsl
adc
pop
dec
loop
sbb
pop
mov
data16
add
and
jno
popa
shlb
or
ret
sbb
rcll
popf
popf
mov
cs
pusha
and
pop
call
shr
push
int
mov
mov
hlt
and
jmp
out
rcrl
je
mov
mov
xlat
aad
adcb
mov
mov
jne
fidivrs
lret
xchg
mov
movsb
inc
cmp
mov
jae
nop
movsl
mov
xchg
sbb
mov
test
jl
inc
mov
mov
jle
repnz
insl
mov
scas
adc
cmp
cmp
mov
pop
movsb
mov
pop
xchg
and
aaa
test
dec
push
dec
in
xchg
sub
adc
aaa
rcrl
lcall
push
pop
cltd
jno
out
out
das
les
out
push
mov
shll
xlat
test
mov
mov
or
xor
cmp
lock
jbe
and
push
rclb
mov
mov
push
dec
mov
cmpsb
xchg
pop
jl
xchg
fdivs
jle
mov
test
mov
sub
rcrb
negl
mov
addb
lahf
cmp
dec
fildll
pop
add
imul
mov
sub
add
add
inc
add
sub
bound
xchg
sbb
les
std
int
shll
push
jns
popf
dec
out
add
pop
leave
enter
sub
or
cvttps2pi
fst
mov
cmp
movd
loope
mul
nop
gs
xchg
scas
es
mov
aad
push
jae
mov
icebp
xadd
loop
leave
dec
jae
xor
int3
push
addb
and
push
cltd
xor
push
test
sbb
dec
xor
movsl
jl
mov
hlt
dec
cmc
mov
loope
in
rcl
add
xor
cmp
sbb
or
fisttpll
dec
xlat
jg
push
nop
mov
mov
jbe
pop
ljmp
mov
xor
loope
fcmovnbe
out
mov
movsl
add
ljmp
xlat
inc
mov
dec
out
ficompl
cwtl
sbb
fs
addb
arpl
cwtl
dec
stos
xor
daa
and
or
test
mov
fcomps
sbb
and
call
xchg
je
jne
pop
push
insl
mov
movsl
imul
out
cld
pop
sbb
sub
cli
fcmove
in
fisubrl
aaa
sbb
push
xlat
and
adc
inc
fidivl
clc
ds
ljmp
push
push
mov
jge
push
or
jg
pop
or
xor
and
adc
dec
mov
xchg
push
xlat
xor
outsb
out
fidivrl
cwtl
repz
test
xchg
mov
or
mov
lea
cmp
mov
push
add
loope
mov
shl
and
aam
xor
pushf
fs
push
aas
movsb
mov
test
xor
addl
lahf
test
push
lahf
mov
mov
test
rcr
les
pushf
or
gs
sti
push
sub
xor
test
jg
in
into
mov
das
call
lock
jp
aad
or
push
pusha
lret
int
cltd
add
push
mov
lret
rcll
xchg
stos
dec
ds
shl
xchg
xchg
fdivrs
cli
and
lcall
inc
shll
push
mov
stc
xor
imul
insl
cs
mov
pop
or
push
aaa
sti
fsts
push
cmpl
mov
mov
lret
sbb
sub
cmp
adc
cld
fstp
inc
loope
cs
es
xor
fsts
xchg
into
test
loop
push
decl
push
mov
lock
loope
cmp
jns
push
in
mov
js
sbb
inc
dec
adc
testb
mov
psubsb
shl
pop
movsb
pop
cli
les
pop
xchg
lea
sub
add
mov
push
cld
pop
mov
jp
xor
mov
out
mov
jmp
sbb
dec
loope
out
pinsrw
and
sbb
jbe
dec
dec
push
loope
xor
or
das
lods
out
or
cwtl
lret
std
mov
sub
jo
movd
insb
shll
push
shl
nop
cltd
sti
iret
lret
fs
test
insb
sub
add
int
icebp
mov
cmp
adc
les
mov
mov
xchg
push
je
in
push
fsubl
gs
adc
and
outsl
aad
or
xchg
mov
pusha
pop
jns
ds
test
aad
shl
aad
iret
and
dec
mov
roll
pop
xchg
mull
sbb
dec
jbe
pop
rcrb
mov
adc
fisubl
pop
jae
dec
xlat
mov
pop
xor
or
movsl
and
mov
pop
mov
andb
pop
cmpsb
int
adc
nop
and
jb
pop
pop
pop
pop
push
lcall
add
pop
push
shrl
test
pushf
or
add
sbb
sub
sub
fsts
mov
leave
add
out
cmpsb
mov
sbb
leave
inc
repnz
outsb
xchg
js
xor
leave
inc
loop
add
xor
or
syscall
imul
addr16
sub
mov
sub
mov
fiadds
loope
in
and
adc
addb
hlt
filds
lods
and
mov
sbb
add
dec
pop
test
sbb
xchg
lea
jmp
insb
cwtl
in
or
repz
mov
adc
mov
mov
lret
xor
dec
cmp
les
pop
inc
rcr
cli
fwait
sub
pop
dec
fmull
test
pop
test
aas
int3
data16
ljmp
leave
xor
test
or
mov
lods
or
mov
mul
rcrb
or
and
in
dec
mov
jmp
in
es
cmp
pop
adc
scas
jbe
xor
xchg
ljmp
ror
aam
test
out
jno
sbb
testb
xchg
cld
jle
int3
seta
xchg
das
adc
or
push
std
int
xlat
in
xorl
cmp
sarb
ret
mov
loope
and
dec
icebp
cmp
cmp
add
mov
mov
popa
ret
aaa
les
mov
fildl
sbb
cmp
pop
cld
lret
out
bound
mov
jnp
filds
push
and
pop
sar
cld
pusha
cmp
fcomi
cmp
dec
mov
ficomps
mov
roll
and
je
orb
add
inc
sub
xchg
rol
lret
inc
aaa
lahf
aam
mov
lcall
sbb
out
and
das
jg
pop
xor
bound
and
sub
mov
test
mov
clc
xlat
sbb
sub
mov
in
add
lahf
daa
adcl
dec
cltd
sbb
jne
cmp
adc
push
dec
icebp
aad
ss
jns
gs
jbe
mov
and
inc
push
lret
imul
shll
and
xor
jns
sarl
scas
arpl
inc
jg
sub
lahf
bound
inc
xor
inc
jl
inc
push
cmp
movsl
fstpt
inc
mov
pop
pop
cmp
add
and
add
and
fwait
mov
inc
mov
cmp
movsl
add
cs
fisttpll
fidivrl
push
push
inc
test
pop
add
jo
je
push
cmpsl
stos
adc
ja
in
cmpl
call
mov
insb
fs
or
or
inc
pop
scas
scas
mov
pushf
xlat
xor
add
or
inc
jmp
dec
xchg
mov
inc
arpl
nop
pop
fdivrs
jp
dec
xchg
xchg
xchg
stc
test
shl
js
mov
aam
es
pop
cltd
imul
mov
dec
scas
das
inc
gs
scas
mov
inc
lea
dec
stos
out
adc
mov
aas
mov
loope
push
jl
adcl
sub
les
negb
and
pop
mov
or
dec
push
aas
xchg
dec
inc
iret
mov
jne
mov
xor
mov
ljmp
lcall
shrb
or
dec
fstpl
add
inc
mov
ss
inc
jecxz
cltd
sbb
lods
jb
pop
pop
xor
jb
xchg
or
jo
adc
jns
sub
nop
lods
aad
xchg
mov
lock
shrb
imul
mov
dec
mov
jmp
mov
push
cmp
push
into
xor
xchg
hlt
fcoms
or
sub
push
sub
lahf
mov
sbb
fisubl
pusha
sbb
mov
pushf
cmp
push
xchg
daa
dec
movsb
add
and
cmp
or
pop
cmpsl
iret
cwtl
xchg
shll
nop
stc
push
loope
pop
pop
in
push
insb
cld
and
pop
xchg
push
jmp
sub
push
shll
daa
sbb
imul
sbb
scas
mov
fdivs
retw
xchg
pop
push
xchg
mov
ds
scas
pop
dec
xchg
rorb
xchg
popa
mov
out
push
nop
dec
xchg
call
push
pop
add
mov
lea
sub
jg
xchg
add
mov
push
std
or
inc
adc
test
dec
adc
aad
dec
int
mov
mov
sub
adc
aas
insl
int
jle
pop
jne
jl
test
mov
or
ret
adc
xor
cmp
jge
sti
andl
dec
xor
pop
insb
dec
mov
or
jbe
xor
mov
test
sub
lret
xor
aam
sub
fsubrp
call
add
orb
push
out
aaa
adcl
clc
xor
roll
mov
insl
int3
loopne
fidivs
sub
xchg
mov
push
jb
sub
add
xchg
nop
pop
pop
adc
js
pusha
std
jns
outsb
shll
ljmp
ss
add
push
sbb
lret
insl
or
mov
push
testb
push
inc
imul
pop
mov
aam
mov
aaa
leave
add
arpl
cmc
sub
mov
cld
call
iret
jl
xor
xchg
sbb
push
mov
cmp
pop
cmpsb
inc
mov
out
xchg
gs
inc
dec
push
stc
jp
sbb
scas
push
addr16
aad
mov
push
dec
push
in
dec
call
fcompl
xchg
cmp
imul
or
jge
dec
rolb
loop
scas
out
pop
cwtl
jnp
js
jbe
in
mov
ror
rcrl
mov
pop
ss
jnp
xchg
pop
aad
cmp
pop
sbb
sub
xchg
mov
inc
lret
std
mov
in
repnz
test
jnp
inc
and
cmpl
call
xchg
loop
outsb
ljmp
test
or
and
in
xor
call
dec
sbb
inc
ljmp
xlat
jnp
mov
dec
xchg
jmp
cltd
sbb
cmp
add
ja
mov
and
aam
test
in
lcall
repnz
mov
push
adc
jle
sti
or
xor
jne
and
add
xchg
cmp
add
mov
pop
xchg
pop
mov
sbb
xchg
data16
iret
cmp
or
lret
and
push
jp
mov
test
std
mov
add
rorl
aad
dec
dec
andb
cmp
adc
ss
insb
leave
loopne
sub
out
shrl
test
leave
dec
cmp
nop
cmp
adc
mov
stos
xchg
mov
subb
mov
fisttpl
nop
inc
pushf
popf
dec
push
xchg
mov
pop
out
ljmp
or
cmp
lahf
mov
fistpl
xchg
out
inc
push
mov
xchg
jo
ds
and
ljmp
xor
pusha
loopne
or
in
cltd
mov
push
adc
cmp
sbb
rcll
into
sub
shll
xchg
insb
scas
daa
lret
or
lret
test
sub
into
mov
shlb
cwtl
sub
in
and
or
mov
in
stos
xlat
mov
leave
sbb
arpl
push
scas
test
mov
loopne
es
inc
lcall
xchg
in
jne
adc
bound
int
ds
scas
fstpt
subb
aad
inc
cmp
or
sahf
push
ljmp
sub
movsl
and
insl
or
push
jecxz
in
cli
fwait
ret
jg
inc
test
add
add
testb
rolb
mov
cwtl
imul
dec
adc
push
mov
iret
adc
int3
mov
aas
pop
xchg
mov
je
inc
mov
call
add
mov
dec
in
cwtl
leave
jp,pn
mov
nop
insl
jbe
sub
or
sub
xchg
adc
pusha
ds
loope
cmp
push
mov
sbb
dec
xchg
pop
test
sbb
pop
mov
nop
insl
sbb
insl
ja
stos
adc
push
mov
adc
xchg
in
inc
pop
sub
cmp
fbstp
mov
aam
pop
aad
mov
vrcpps
and
inc
pushf
add
jns
mov
fsts
sbb
sub
orl
out
xor
or
sbb
xor
sbb
and
filds
jg
fincstp
cld
mov
iret
lea
dec
jns
push
test
popf
push
hlt
xorl
xchg
push
fldl
dec
nop
popf
es
mov
movl
lea
mov
sbbb
mov
push
test
add
int3
in
dec
loopne
adc
inc
insb
mov
jne
and
mov
fstpl
stos
popf
lods
jmp
or
xor
sbb
jg
xor
or
in
fisttps
fstpt
push
jg
les
jns
test
bound
or
icebp
pop
mov
push
shlb
push
call
pushf
lods
je
inc
gs
xchg
cmpsb
insl
inc
xchg
jne
xchg
test
mov
fildl
adc
sub
push
xchg
and
pop
pusha
imul
rolb
ss
mov
outsb
cmp
movsb
or
fisttpll
je
gs
xchg
adc
push
sub
fs
pop
sub
sbb
adc
cwtl
dec
hlt
jb
icebp
pop
loop
je
pop
mov
mov
or
out
mov
cmp
inc
push
into
inc
jo
mov
inc
fnstenv
pop
cld
adc
push
mov
out
dec
movsb
cmp
pop
je
xchg
xchg
xchg
sub
int3
int3
push
cmc
cmp
int3
mov
jl
fs
inc
jnp
pusha
mov
mov
cmp
int
push
and
cwtd
pop
imull
inc
in
lcall
int3
shll
jae
fwait
insb
lret
mov
jge
or
call
les
mov
lcall
cmp
xchg
pop
adc
popf
ds
xchg
adc
push
repz
push
es
xchg
push
mov
fcompl
out
sarl
push
pop
pop
cmp
push
dec
ss
dec
cs
lret
hlt
pop
push
call
or
and
push
pop
dec
lods
pop
imul
leave
shl
xchg
xchg
and
sti
movsl
hlt
mov
sbb
sbb
and
add
popf
lret
sub
rcl
pop
and
add
add
in
cmpsb
add
out
mov
mov
xlat
bound
pop
ss
jge
add
sbb
mov
mov
cli
cmp
and
push
add
xor
push
jb
cmp
clc
cmp
mov
fcompl
and
fs
stc
leave
es
inc
sub
jnp
push
popa
inc
push
or
inc
cmpsb
xor
inc
pop
aas
mov
lds
insl
inc
ret
jge
xor
push
sub
adc
add
cld
push
scas
cmpsb
pusha
in
inc
mov
inc
cmc
dec
adc
push
mov
mov
pusha
mov
sub
sub
cltd
scas
and
inc
fisttpll
xchg
inc
fsubs
mov
out
inc
lret
or
popa
push
ljmp
repnz
and
push
or
mov
movl
in
stos
fs
mov
lock
inc
pop
je
fisubs
inc
push
cmp
out
out
mov
outsb
xchg
hlt
and
mov
add
xor
or
or
push
pop
sub
mov
in
cmp
cwtl
cmpl
lret
scas
and
scas
lods
push
sbb
add
daa
sub
or
dec
xchg
in
cmp
or
in
push
xchg
insl
dec
insb
data16
aad
fsubl
xchg
pop
xchg
test
call
scas
xor
out
mov
sbb
arpl
mov
pop
inc
fs
rcrl
and
adcb
iret
and
dec
dec
insb
push
mov
cwtl
cltd
mov
lret
adc
dec
mov
out
rolb
das
jmp
in
mov
int3
insb
in
pushf
lret
in
test
addb
fimuls
rclb
mov
jns
repz
ss
out
or
adcl
out
push
lods
nop
mov
push
gs
insl
inc
xorb
add
test
pop
mov
mov
arpl
push
xor
or
ja
xor
adc
or
mov
xchg
fsubrs
xchg
aam
dec
pop
or
sbb
out
pop
inc
xor
or
inc
xor
mov
mov
std
movups
rorl
pop
das
fisubl
mov
movl
cmp
cmp
jns
pop
stc
cmpsb
dec
cmp
mov
lahf
test
dec
rcll
jbe
xor
in
ret
in
cld
xor
daa
fsubrs
dec
popa
lret
mov
pop
xchg
stc
rorl
sbb
shlb
repnz
jbe
inc
push
lret
dec
dec
jo
add
andl
fnstcw
pop
xchg
aad
aas
enter
out
sbb
shlb
out
push
xor
aad
push
das
mov
enter
mov
loope
mov
ds
std
xchg
mov
xchg
les
jne
mov
pop
xor
popa
pusha
mov
lods
fildl
mov
mov
loop
mov
add
or
jp
je
shll
daa
pop
orl
stos
xchg
inc
out
mov
std
inc
mov
sub
mov
mov
in
les
incl
add
andb
out
cli
sarl
mov
in
pop
jl
jo
dec
cmc
pop
lock
lods
fdivrs
jp
stc
pop
pop
popa
pop
mov
pop
mov
sbb
sub
pop
in
rolb
cmp
ja
insb
test
mov
mov
mov
xlat
aaa
roll
stc
add
mov
mov
filds
ja
add
imul
pop
clc
fiaddl
inc
adc
adc
sub
cltd
imul
call
roll
imul
dec
pop
inc
mov
adc
aam
test
ret
inc
stc
sub
sbb
nop
repnz
es
out
pop
lods
or
or
std
in
shlb
push
lret
loopne
shll
cld
xor
mov
pop
or
xchg
jecxz
mov
or
data16
in
sub
add
lods
jne
lcall
and
and
ret
cmp
sub
ds
push
lcall
ret
sub
sub
std
add
sub
lcall
cmp
mov
aam
cmp
cmp
inc
divl
mov
sub
xchg
cs
mov
mov
pop
dec
xor
and
aaa
in
sar
xor
or
fisttpll
xor
mov
jmp
fwait
jmp
dec
ss
ljmp
push
icebp
push
xchg
rolb
xor
or
or
loop
jmp
scas
fmul
ficomps
cmp
dec
mov
xor
push
inc
push
js
std
lods
std
fsts
or
sub
and
arpl
decb
push
jne
enter
into
and
mulb
test
lds
cmp
fldz
dec
mov
inc
xor
push
imul
fsts
or
adc
adc
xchg
frstor
leave
out
cld
leave
sbbl
mov
pop
sbb
mov
mov
mov
call
add
push
imul
mov
sbb
pop
test
jecxz
repz
jne
idivb
adcb
xchg
cmp
sbb
movsb
in
add
shr
sbb
mov
push
fstps
es
subb
xor
sbb
enter
es
jl
fiadds
mov
lahf
aam
sbb
sbb
push
pop
xor
icebp
mov
inc
mov
mov
adc
cmp
add
add
mov
xchg
cmp
lret
push
xor
and
sub
cwtl
and
mov
push
dec
cmp
inc
pop
ret
mov
lea
adc
insb
lret
lock
fsubs
outsb
test
mov
in
sbb
add
push
mov
or
test
pop
or
push
stos
orl
add
clc
call
pushf
pop
iret
or
scas
push
mov
adc
testl
xchg
lods
mov
adc
mov
sti
lods
jns
pop
int3
jmp
aad
jne
ds
lret
imul
push
xchg
mov
repnz
mov
dec
mov
mov
cmpsb
stos
mov
loope
movsb
or
cmp
add
int3
test
jno
aam
inc
jb
dec
or
ret
xor
xorb
cwtl
lret
xor
lcall
inc
cmpsl
in
mov
cmpsb
js
scas
jo
pusha
adc
xor
les
loopne
lods
les
adc
pop
pop
fdivs
gs
xchg
repnz
in
add
loope
jnp
pop
repz
adc
xchg
popf
rolb
in
dec
push
xor
test
push
mov
pop
pop
sub
das
xchg
mov
cmp
lea
push
jecxz
pop
imul
push
ficomps
in
fisubl
subl
mov
jns
adc
xor
mov
int
mov
in
add
add
movsl
sbb
lods
xchg
mov
pushf
xor
push
sbb
push
xor
sub
cmp
stos
push
add
fnstsw
mov
xchg
add
mov
enter
inc
adc
push
sbb
pushf
jae
cmp
push
in
les
push
insl
sbb
and
cltd
jbe
jp
test
xor
std
enter
in
loope
leave
stc
xchg
test
push
xchg
jns
ds
lret
inc
push
scas
mov
scas
mov
sub
js
aad
cmp
loopne
stos
int3
sub
lcall
out
add
in
out
andb
mov
out
push
xchg
and
add
xor
fstl
divb
les
iret
add
scas
or
add
test
xchg
pusha
adc
mov
push
test
enter
negl
fs
dec
test
into
out
mov
xor
movsb
push
and
mov
mov
jnp
insb
xchg
jo
dec
fadds
push
in
xor
out
testl
push
mov
jle
cltd
cs
daa
cmp
ret
dec
jmp
int3
aad
bound
jns
jno
popa
movsb
jb
inc
inc
je
dec
pop
scas
fistl
mov
les
sub
rcll
xchg
add
out
push
sti
xchg
hlt
fldt
inc
inc
mov
dec
shll
push
movsb
out
dec
xor
inc
pop
pop
mov
icebp
xorl
arpl
ret
push
fbld
xchg
xchg
inc
daa
or
sub
shrl
adc
mov
cmc
inc
rorl
pop
jge
cmp
jbe
popa
mov
and
test
clc
testl
xor
fisttps
data16
push
notb
test
xor
adc
xor
mov
or
popa
out
cmp
arpl
stos
xchg
dec
int3
inc
stos
jo
inc
mov
pop
in
pop
cmp
mov
xor
fnstenv
mov
jns
cmpsb
scas
lods
xchg
fsubs
rclb
or
je
movsb
jmp
sbb
push
push
add
out
arpl
in
sbbb
dec
in
xchg
in
in
push
sti
pop
lea
sar
mov
adc
jb
inc
mov
jmp
mov
adc
sbb
push
xchg
push
cmp
jns
leave
pop
in
cmc
push
lods
xchg
cmp
scas
ret
cmp
mov
les
out
scas
into
add
mov
adc
loope
scas
out
adc
mov
xchg
mov
adc
pop
or
xchg
mov
cmpsb
fmull
sbb
inc
and
jl
xorl
aad
scas
movsb
bound
push
lea
cmpsb
pop
std
xchg
popa
jp
jp
or
gs
mov
push
adc
loop
sbb
adc
scas
sub
sbb
mov
push
xchg
pop
dec
cltd
xchg
cmp
in
cli
dec
mov
add
in
fldt
sub
es
xchg
adc
pop
fwait
add
adc
enter
jbe
add
sbb
repz
test
mov
sti
xchg
icebp
stos
andb
test
push
cmp
fiaddl
fwait
or
mov
adc
push
xchg
mov
xlat
adc
mov
lods
cmp
pop
or
leave
lods
stos
fs
xchg
out
int
into
and
pop
cmpsb
inc
movl
lret
xor
inc
sbb
push
shlb
out
lahf
jmp
stos
lcall
xchg
adc
popa
pop
subl
pop
lock
fdivr
pop
clc
jno
sub
in
sub
ljmp
xor
mov
mov
push
leave
xchg
jne
fwait
callw
sbb
filds
xor
sub
je
aas
imul
push
cmp
cmpsl
test
xor
arpl
in
pop
in
mov
pop
push
js
mov
and
bound
ljmp
jne
adc
cmp
les
sub
push
stos
add
fcoms
out
arpl
push
lea
sub
test
iret
cmpsb
sub
dec
in
pop
xchg
and
push
xchg
and
inc
lret
cmp
mov
iret
sbb
pop
dec
mov
das
flds
loopne
rcrb
push
cmp
fwait
xorb
or
pop
add
add
stos
jle
mov
pop
sahf
adc
mov
mov
inc
pop
jecxz
mov
mov
rolb
adc
push
sub
adc
add
in
lret
fildl
dec
xchg
adc
push
int
xchg
cmp
xchg
sbb
mov
push
test
shl
fdivs
lahf
sub
adc
and
loope
cmpsb
ja
mov
fs
mov
cmp
loop
jg
xchg
mov
loop
lahf
push
jnp
addb
bound
scas
push
xchg
movsl
icebp
xchg
xchg
mov
dec
into
pusha
imul
xchg
fs
loope
repnz
mov
pop
into
or
xor
mov
dec
push
add
mov
aaa
dec
jmp
push
stos
pushf
push
rorl
loope
jno
push
mov
rcll
fs
fs
cmp
loopne
push
adc
je
jge
adc
adc
cmp
xor
loop
push
fistps
jo
cmpsl
lcall
cmc
adc
xor
mov
fisubrl
cmp
mov
and
in
int
in
adc
push
push
in
inc
mov
cmp
jbe
shl
push
cmpsb
sub
pop
ficompl
shrb
sub
push
xor
rolb
inc
xchg
jno
pop
cmp
hlt
lret
mov
ja
int3
or
xor
cmp
popf
sbb
mov
or
push
mov
mov
xchg
test
mov
push
sbb
inc
ret
add
in
and
repnz
add
mov
cli
xor
or
jl
mov
adc
loope
jge
jg
xchg
ds
pusha
cmp
mov
xchg
xchg
insb
enter
insl
add
cmpsb
sbb
or
or
and
push
sbb
add
adc
cmp
add
or
int3
out
sbb
loopne
in
arpl
notb
in
rolb
data16
inc
sbbl
stos
lcall
mov
push
xor
outsb
adc
clc
xchg
scas
xchg
mov
in
repnz
lret
in
inc
lock
loope
fwait
inc
mov
cmp
aam
cmp
cltd
xchg
and
and
sbb
sub
xlat
dec
xor
mov
add
repnz
dec
lods
sub
inc
mov
fbstp
mov
xchg
push
aaa
pop
push
cmp
movsl
loope
inc
mov
dec
in
iret
repnz
stos
add
xor
push
dec
fisttpl
pusha
iret
or
sbbl
xor
cli
push
mov
sarb
cmp
mov
das
jp
sbb
movl
mov
xchg
jb
mov
or
mov
pop
push
xor
popa
push
mov
scas
out
aam
xor
mov
xor
inc
cmp
iret
outsl
mov
rcr
popa
outsb
jl
jb
xchg
imul
push
jbe
mov
xchg
mov
call
xor
rclb
test
or
ss
aam
push
jg
add
push
test
test
mov
mov
xchg
or
mov
xchg
ret
xchg
mov
inc
fistl
es
jns
xor
cmp
pop
je
mov
push
mov
andb
mov
dec
bound
and
add
inc
cmp
push
ds
movsb
jp
xor
push
movsb
sbb
mov
ss
into
xor
scas
shlb
sub
mov
lret
mov
orb
popf
aam
jo
mov
push
sub
lods
add
sub
test
aam
sub
lea
inc
xchg
mov
xchg
xchg
xor
push
out
jns
jle
imul
and
push
lahf
fildll
push
mov
lret
pusha
mov
scas
inc
push
push
test
iret
and
scas
lea
das
xchg
stc
aad
mov
aad
pop
add
data16
stc
pushf
sti
aaa
int
fiadds
sub
ja
insb
scas
adc
cwtl
fidivrl
sbb
ficompl
pop
in
push
and
push
loope
jae
pop
dec
and
adc
divb
mov
cltd
dec
mov
mov
or
pop
mov
std
fisttps
popf
xchg
add
or
mov
cmc
pop
fnsave
fs
jp
cld
mov
cmp
push
mov
bound
daa
insl
dec
sbb
inc
xor
ljmp
lcall
mov
leave
ret
psrlq
adc
jno
cmpsl
sahf
adc
sub
sub
test
sub
sub
xchg
add
jle
cmp
in
xchg
iret
dec
stos
jge
daa
popf
pop
les
mov
enter
xor
fidivl
cltd
push
stos
jne
shrb
lods
push
movsl
mov
call
mov
sbb
inc
clc
sub
dec
mov
ret
adc
int
loope
faddp
push
iret
int3
xor
int
pop
arpl
icebp
fs
outsl
sub
fsubrl
dec
dec
adc
das
pop
jo
push
mov
mov
mov
adc
int
inc
mov
pop
sbb
lds
clc
cmpsl
fstpl
sub
shlb
inc
out
popf
pop
xchg
xor
or
insb
dec
inc
repnz
icebp
lret
enter
fidivrs
sub
nopl
stos
pop
shll
jmp
testb
mov
cmp
outsb
fs
and
mov
lahf
mov
in
fs
jg
sbb
mov
lea
xchg
sub
pop
xchg
xor
fistpl
mov
or
shlb
lock
lret
das
jge
mov
scas
xor
mov
xor
pop
jge
aaa
aad
mov
aam
das
xor
fwait
cmp
int3
xchg
dec
popa
lods
pushf
jle
add
loop
add
fcoms
fwait
sub
add
sbb
cltd
adc
mov
test
xor
xor
cmp
inc
xchg
push
scas
add
sub
dec
add
andl
push
mov
mov
jle
xlat
add
mov
pop
ds
mov
or
cmp
xorl
xchg
addr16
cs
pop
jmp
es
dec
stc
inc
rcl
fdivp
bound
or
and
xlat
inc
adcb
sub
cmp
ss
push
cmp
imul
mov
and
push
out
jo
add
insl
dec
sbb
aad
add
inc
pop
mov
mov
inc
andl
lods
int3
fsts
out
or
sbb
mov
iret
les
ret
enter
mov
mov
or
inc
mov
stos
mov
push
mov
push
pop
and
inc
stc
dec
dec
jecxz
test
mov
xor
and
mov
lea
mov
pusha
std
xchg
mov
xchg
jae
and
stc
xchg
pop
jmp
inc
insl
and
xlat
inc
stos
xchg
pop
imul
in
imul
enter
notb
sbb
pop
popf
xchg
mov
mov
sti
mov
sub
pop
inc
dec
mov
xor
push
jp
sbb
xchg
or
xchg
push
inc
or
xchg
mov
les
xchg
outsl
xor
pop
adc
das
cmp
loope
mov
and
or
mov
add
lds
sbb
les
dec
fidivrl
outsb
xchg
sub
xchg
lahf
xor
or
xchg
cmp
test
mov
or
pop
ljmp
or
aam
push
adcl
push
pop
jns
cmp
imul
mov
jns
data16
sub
xchg
cwtl
orb
ffree
in
out
stc
ret
inc
mov
mov
leave
test
sarb
lock
and
mov
xor
mov
push
cmp
mov
sub
adc
test
das
stc
clc
scas
adc
adc
or
mov
sbbb
inc
xchg
and
daa
fnstcw
popa
cmp
mov
cmp
aam
pop
pop
or
or
jo
inc
jg
cli
jp
mov
lds
in
fcoms
jle
mov
js
sti
mov
and
lahf
movsl
or
cmp
adc
lods
xchg
in
mov
xor
scas
in
mov
das
nop
sub
adc
rclb
pop
mov
rclb
mov
xor
call
sar
call
ret
jg
data16
imul
mov
push
jae
rcll
xchg
rcrl
rcrb
cmp
add
dec
fcmove
dec
adc
aad
es
jne
mov
push
and
adc
shrl
lret
push
shll
andl
decl
mov
les
mov
cltd
add
out
popa
mov
push
test
out
out
cmp
dec
test
cmp
push
xlat
cmp
insb
or
ds
mov
adc
dec
cmp
iret
stc
jp
lahf
xchg
adc
mov
call
and
out
lret
inc
xchg
xchg
lods
jl
es
and
xlat
mov
cld
mov
outsb
shll
hlt
in
push
xlat
andl
outsb
mov
cmp
cmpsl
rolb
cmpsl
fldenv
fstpt
xor
int
call
pusha
and
jmp
sbb
and
repnz
fldl
sarb
adc
push
mov
add
aas
jo
imul
adc
mov
movsb
inc
iret
dec
test
lods
aad
outsl
in
test
jge
addr16
cmp
out
inc
cmpsb
lret
pop
fists
repz
clc
xor
out
jns
popa
and
in
xor
mov
lods
dec
inc
push
xchg
imul
sub
push
mov
outsb
push
shrb
vmwrite
imul
cmp
pop
add
lret
lods
jae
push
hlt
rolb
call
out
das
rorl
out
add
xchg
or
xor
out
fisubl
sahf
push
mov
xor
fnstenv
cli
das
pop
call
xchg
xchg
xchg
sub
fldenv
cli
mov
push
mov
jae
sbb
cmpb
sahf
lcall
mov
lds
or
mov
mov
cmp
out
pop
mov
lds
push
push
mov
xor
push
orb
xchg
int3
xchg
cltd
sub
sbb
push
icebp
lahf
enter
inc
xchg
xchg
lahf
mov
jne
popa
das
jmp
push
shlb
xlat
or
mov
cmp
or
mov
stos
inc
sbb
inc
mov
int3
xchg
popa
add
test
xor
mov
jae
int3
or
enter
pop
aam
jae
fldenv
push
enter
aam
in
xchg
fldcw
aas
aam
jae
fldenv
fcmove
and
scas
aam
aam
leave
cmp
pop
and
sbbl
gs
movsb
addr16
cmc
roll
cmpsl
pop
push
repnz
mov
adc
repz
mov
push
pop
mov
mov
jmp
mov
cli
push
adcl
pusha
or
clc
xchg
in
jmp
stc
adc
inc
cmp
push
int
pop
cmpl
add
ror
inc
mov
inc
enter
dec
mov
dec
jo
mov
push
out
hlt
inc
add
loopne
not
jae
je
adc
stos
fiaddl
mov
je,pn
and
pop
inc
push
xchg
xchg
fs
mov
ret
lds
in
jge
mov
adc
push
js
pop
imul
arpl
lds
jnp
inc
outsb
sub
push
adc
cmp
pop
lds
clc
mov
or
pop
sub
fcompl
je
mov
rolb
xor
sub
repz
call
mov
mov
int3
sub
sub
dec
mov
push
jae
sub
or
loopne
lcall
cmpsl
add
cmp
dec
out
dec
xlat
movsb
in
fisubl
add
aad
cmp
xchg
out
into
mov
shlb
and
aad
lock
scas
jb
adc
lea
adc
add
jmp
cmp
xchg
outsb
mov
bound
xchg
jecxz
out
shl
test
adcb
xchg
ds
insb
lods
mov
push
cld
cmp
mov
inc
ror
xor
ja,pn
lds
jno
mov
outsl
cltd
clc
jo
mov
xorb
pop
or
mov
and
jne
orb
pavgw
dec
jns
test
popa
lock
test
or
fmull
es
sahf
aad
jno
in
mov
sub
pop
mov
xchg
jae
ja
scas
out
pop
push
shrb
aaa
sbb
outsl
gs
fldenv
daa
clc
push
mov
push
dec
push
mov
inc
xor
dec
or
sub
loop
orb
xchg
jmp
int
cmpsl
stc
in
outsl
xor
fildll
je
divl
cltd
and
xchg
loope
in
xorl
cltd
push
movsb
ret
jle
push
mov
jae
testl
cld
pop
test
add
dec
cmp
mov
jg
cs
adc
push
int
xor
sub
xchg
jg
div
and
add
fstpl
ret
inc
test
xchg
fistps
add
inc
push
push
rcrb
mov
mov
mov
out
jae
xchg
popf
xchg
jbe
xchg
mov
shrb
pop
lods
or
cmpsl
daa
fsub
roll
push
xchg
fnstenv
loop
pop
cli
inc
xchg
cmpsb
xchg
or
movsb
inc
add
int
inc
cmpl
add
cmp
mov
jbe
xor
movsb
mov
dec
fxch
cmp
std
les
std
push
enter
mov
xlat
jae
or
pop
fisttpl
mov
inc
inc
cmovae
mov
int
add
cltd
fs
daa
paddw
mov
jne
sub
int3
mov
push
sbb
jbe
xchg
arpl
lahf
mov
jae
mov
cmpsl
aad
dec
andl
cld
daa
out
filds
jl
inc
sbb
adc
in
dec
mov
cmpsl
cltd
mov
dec
cmpsl
ja
sbb
repz
xchg
xor
hlt
jbe
mov
adc
cltd
cmp
dec
sub
mov
dec
dec
into
xchg
inc
dec
idiv
or
xchg
push
loope
mov
xchg
ret
dec
sti
xor
push
push
in
outsb
dec
out
testb
push
dec
mov
push
add
movsb
lods
mov
sbb
add
dec
int
btr
mov
mov
fs
les
cli
inc
pop
call
xchg
std
mov
xchg
les
xchg
test
rcrb
or
dec
cmp
dec
xor
shrb
mov
mov
repz
mov
mov
and
fidivl
lcall
cmp
sub
jmp
xchg
and
je
or
divl
mov
ret
rorl
data16
lahf
mov
jo
sbb
sbb
sbb
push
dec
or
clc
test
fwait
xchg
push
lods
nop
std
ds
xor
ret
in
cmp
jbe
aam
imulb
gs
mov
jae
js
push
adc
mov
dec
cmpb
dec
mov
dec
test
jmp
lds
push
jno
jno
fsubp
push
lods
xchg
and
fwait
jae
inc
fisubrs
rolb
fwait
and
push
jns
mov
fwait
mov
faddl
mulb
dec
mov
cmp
jecxz
xor
aad
sub
or
negb
dec
mov
mov
rolb
sbb
mov
pop
sub
stos
mov
xchg
cmp
jl
adc
lcall
jae
cmpsl
or
sbb
push
enter
push
mull
lcall
repnz
roll
mov
sar
dec
push
jge
loopne
sub
xor
add
pusha
in
call
or
lock
and
jmp
aad
repz
cmpsl
call
enter
xor
cld
and
ljmp
or
jae
out
lock
jo
mov
mov
mov
in
icebp
push
aad
xor
cli
ret
into
jae,pt
or
stos
or
adc
movsb
cli
jb
xor
je
pop
fsts
jmp
dec
repnz
ja
mov
push
and
cs
inc
shll
insl
dec
cmpsl
jle
aaa
jp
pop
test
dec
in
cli
das
push
stos
sbb
fisttpl
inc
imul
lods
push
lock
stc
dec
sbb
fcos
call
add
lock
pop
movsl
mov
push
xchg
xchg
cld
addb
cltd
flds
xchg
sbb
sub
sbb
cld
mov
ss
in
and
add
fs
scas
pop
cld
push
shlb
mov
sti
cmc
cmp
mov
mov
notb
hlt
dec
and
jge
out
xchg
pop
leave
fnstenv
ljmp
dec
adc
aam
pop
sahf
mov
sbb
xor
and
ss
lds
idiv
mov
cmp
sti
inc
rcrl
or
mov
fucomip
fdivrl
sub
dec
or
int
pusha
xchg
test
pusha
lods
inc
push
and
pop
or
inc
adc
ret
mov
pusha
pop
ljmp
dec
out
cli
leave
sbb
xor
mov
leave
pop
scas
cmpsl
icebp
dec
pop
cmp
mov
adc
xchg
mov
dec
out
jmp
ljmp
mov
sbb
mov
lock
fs
and
fnstenv
repnz
and
movsb
in
iret
jp
or
repnz
xor
jae
ret
imull
add
stos
ret
xchg
les
sub
dec
pop
ljmp
lock
enter
cmp
leave
dec
pmullw
mov
dec
mov
stos
int
ljmp
and
fistl
jne
dec
dec
pop
add
aam
adc
scas
cmpsb
add
mov
inc
fs
out
cmc
cmp
dec
jmp
mov
mov
mov
in
out
loope
pop
insb
aad
sbb
and
jp
int3
cmp
mov
inc
fnstenv
lcall
pusha
inc
movsb
sarb
cmp
iret
repnz
xor
inc
mov
test
add
stos
adcl
je
jge
movsb
andb
and
aad
mov
cmp
leave
inc
pmullw
mov
dec
test
mov
cmp
das
jmp
je
subl
flds
dec
jmp
movsb
insb
jl
jp
or
clc
in
je
cmpsl
sbb
hlt
popa
imul
xor
cs
xchg
push
cmp
mov
dec
shl
ljmp
imul
cmp
das
dec
mov
add
ja
gs
into
inc
daa
mov
push
call
jg
idivl
iret
mov
fisttpll
sbb
inc
mov
push
xchg
jb
jne
or
adc
shll
sub
roll
mov
cmpsl
jnp
xor
popa
sbb
push
push
xor
mov
stos
mov
sbb
mov
enter
out
mov
dec
or
sbb
mov
sub
addr16
jae
push
fisubrs
rcl
pop
mov
and
mov
out
dec
imulb
pop
addr16
xor
enter
sbb
mov
push
inc
mov
sbb
cltd
stos
inc
sbb
adc
les
mov
loop
jle
dec
or
loopne
jmp
push
mov
aam
in
or
add
mov
out
fisubl
cltd
jbe
popf
arpl
lahf
cmp
mov
xchg
jl
lock
lret
call
lods
loope
inc
xor
fs
dec
aam
cmc
pop
out
aad
pop
stos
cmp
dec
mov
add
jp
in
cmp
add
in
inc
cmpsb
push
loopne
sub
mov
mov
icebp
push
inc
data16
daa
sub
cmp
outsl
ret
outsl
or
mov
xor
inc
cld
mov
mov
push
mov
roll
rorl
xor
addr16
fs
pushl
pop
popf
and
push
sbb
mov
ret
xor
xchg
inc
rcrb
jmp
lods
into
add
sub
test
aaa
inc
pop
call
fnsave
xchg
mov
jnp
cmp
jo
cltd
cmp
pop
xorb
add
aam
adc
push
add
data16
addr16
cmp
push
jle
es
mov
mov
jge
xor
adcl
movsl
out
add
dec
ljmp
mov
cs
xor
in
sbb
cli
dec
bound
xchg
cmp
pop
es
cmp
cmp
mov
dec
mov
or
inc
mov
setne
fwait
daa
dec
push
mov
movsl
mov
cmp
add
pop
outsb
bound
sbb
sbb
sbb
adc
sub
and
pushf
das
adc
bound
hlt
mov
add
scas
xchg
sub
fcoml
in
mov
data16
adc
les
decb
mov
jmp
ljmp
dec
mov
push
shll
bound
ficoml
loope
mov
lea
push
and
subl
pop
aad
test
inc
rcrb
adc
ljmp
push
sub
enter
push
add
in
out
inc
movsl
das
xchg
pop
push
mov
push
out
push
cmp
xchg
inc
xlat
pop
aad
cmp
mov
ja
adcl
stos
int
sbb
mov
mov
fistl
jne
dec
and
add
scas
sbb
mov
insl
outsb
ud1
jnp
in
mov
inc
popf
js
mov
fsubrl
or
ds
roll
pop
aaa
pop
mov
pop
inc
mov
ds
mov
leave
push
test
pop
fcmovbe
xchg
cmpsl
add
cmp
mov
dec
mov
cmpsb
push
daa
push
or
loopne
add
xchg
xchg
push
mov
pop
enter
mov
fnstsw
jne
imul
sbb
mov
ret
add
or
xchg
mov
lea
test
je
push
in
sub
pop
stc
std
mov
les
pop
jecxz
pop
clc
xchg
pushf
jecxz
cmpsb
inc
and
dec
inc
mov
xchg
stc
lret
push
vmovups
test
leave
pop
jl
jne
dec
mov
sahf
rcrb
xor
aad
into
out
cmpsb
pop
or
in
fbld
inc
jp
mov
add
fstpl
jbe
push
xchg
test
idivb
pop
je
xor
popa
test
aam
dec
flds
xor
inc
mov
out
push
sub
outsb
mov
pop
cmp
mov
fisttpll
mov
pop
fsubr
les
ds
sbb
push
mov
push
xchg
or
xchg
pushf
aad
xor
pop
movsb
aas
push
int3
jge
cmp
sbb
outsl
out
or
es
push
pusha
push
add
xchg
ror
xor
in
rol
jns
das
std
pop
xchg
mov
int3
leave
lcall
icebp
fs
xchg
push
lret
nop
mov
push
xor
xchg
in
and
loop
mov
fidivs
sub
movsl
stos
cmp
xchg
xchg
fadds
push
lcall
mov
roll
push
jbe
ds
jle
sub
insb
xchg
adc
into
pop
movsl
testl
xlat
and
mov
jp
int
decb
in
ficoml
or
dec
jecxz
fcoml
sbb
int
repnz
jg
pop
das
jnp
xor
decl
fwait
pushf
mov
jne
jg
sbb
sbb
fbstp
mov
mov
mov
push
cmpsb
jb
lea
fsub
xchg
xor
pop
xchg
add
les
push
jno
push
loop
push
cltd
mov
and
and
sbb
mov
popa
pop
cltd
adc
adc
jle
jne
and
movsl
xor
push
xlat
cltd
mov
mov
mov
pop
ds
cmpb
adc
xor
adc
mov
fstl
add
and
addl
or
arpl
pop
sbb
dec
out
cmovbe
insl
enter
addb
inc
mov
call
cmpb
addr16
leave
cli
cwtl
arpl
mov
in
outsb
push
xor
leave
ret
and
or
inc
movsb
adc
jmp
fdivrp
push
or
xchg
in
xlat
fnstcw
int3
int3
stc
and
jl
mov
int3
add
push
and
xchg
pop
mov
mov
pop
lods
xlat
cltd
mov
mov
cs
pop
fs
and
femms
pop
clc
mov
dec
add
mov
stos
jmp
ljmp
pop
and
pop
aas
addps
xchg
in
rorl
sub
xchg
push
dec
repz
out
push
and
lds
pushf
das
rcll
or
and
pop
xchg
enter
ds
add
xchg
fmuls
and
addr16
cmp
mov
ror
movb
dec
lret
jmp
add
xor
sbb
sahf
lds
psubb
lret
mov
lock
fwait
inc
inc
xchg
push
je
loopne
call
scas
nop
mov
aaa
xor
inc
lea
out
xchg
ss
fists
pop
or
sbb
jo
push
inc
ret
pop
jge
aas
add
call
push
dec
dec
pop
ret
add
mov
lret
sub
sbb
in
jg
jb
add
pusha
and
stc
mov
out
dec
sarb
dec
sub
pop
arpl
iret
or
insl
push
stos
inc
pop
mov
and
andb
inc
sub
fs
ficoms
adc
xor
sub
lods
test
push
cmp
sub
xchg
mov
xchg
or
cmp
cmp
sub
sbb
movsl
movsl
lds
add
pop
divb
orl
mov
jae
sahf
insl
sbb
pop
push
adc
sub
ret
push
push
aad
jno
cli
xchg
das
sub
movsb
sub
pusha
cmc
and
and
sub
imul
mov
lock
add
jl
mov
les
lret
iret
inc
push
mov
scas
dec
inc
pop
pop
cld
aaa
cld
or
adc
mov
or
int
sahf
jnp
push
imul
mov
lret
test
push
xchg
cmp
xor
push
xlat
add
add
cld
push
popf
sti
pusha
lds
movsb
mov
movsb
pop
mov
and
test
hlt
add
pop
std
popa
ljmp
xchg
arpl
stos
and
xor
jge
inc
pop
lds
push
lcall
and
sub
mov
sbb
leave
lahf
clc
xchg
icebp
sub
pop
cmc
ljmp
pop
addr16
mov
cmp
adc
mov
clc
mov
mov
cltd
lods
sahf
fwait
push
xchg
es
pop
sbb
dec
popf
les
imul
xor
mov
scas
ror
in
lds
std
iret
inc
sub
mov
enter
mov
mov
add
das
mov
sub
push
sbb
inc
xor
rcrl
dec
xor
stc
dec
inc
pusha
xchg
sbb
jg
aaa
adc
pusha
int3
out
ret
mov
pop
inc
dec
stos
into
daa
pop
cmp
jno
dec
push
std
fwait
rol
cs
movsl
stc
sahf
ja
leave
loopne
adc
pop
pop
pop
adc
frstor
lods
sahf
mov
pop
sub
mov
sub
lret
mov
sbb
mov
push
rcll
sub
inc
jns
jbe
in
dec
jg
push
jnp
sahf
push
mov
clc
sub
mov
inc
loopne
jl
lds
pop
leave
fstpl
xchg
rcll
mov
jns
sub
in
jmp
les
cltd
mov
rcll
shrl
sub
enter
iret
lds
jecxz
rcrb
sub
sbb
and
lret
cli
sbb
arpl
scas
scas
or
mov
cmp
push
std
or
sub
mov
push
sbb
stc
vmovaps
sbb
repz
cs
clc
inc
ret
daa
jno
aam
int3
sahf
inc
stos
xchg
inc
xor
pop
and
dec
mov
pushf
mov
lcall
outsl
out
inc
lret
out
pop
clc
jo
adc
cmp
lods
mov
cmc
pusha
movsb
aam
inc
shrl
es
scas
rcrl
jbe
cmpsl
dec
jecxz
cmp
lds
cld
mov
gs
adc
inc
sti
pop
hlt
std
imul
jbe
enter
push
outsb
and
leave
test
jmp
mov
loop
and
or
pop
xchg
mov
mov
jno
fwait
adc
shll
push
add
lds
por
lahf
jge
aam
add
test
sahf
pop
stos
cmp
xor
pop
in
sbb
mov
mov
cli
and
jnp
mov
icebp
aam
xchg
arpl
cmpl
hlt
mov
xchg
mov
sbb
jmp
xor
push
and
fisttpl
mov
adc
xor
mov
movsl
xchg
push
repnz
fcomps
xchg
out
scas
xchg
fbstp
mov
mov
repnz
stos
cld
in
mov
pusha
int
pop
xchg
xorb
push
mov
insl
movsl
adc
dec
or
insl
lods
sub
inc
int
test
xchg
popa
movsl
xor
fdiv
or
sub
push
inc
or
mov
ficoml
xor
cmc
aad
pusha
fldcw
cltd
imul
jb
sbb
fistl
movsl
xchg
jbe
adc
inc
lods
notb
mov
sub
faddl
push
movsb
cltd
fst
insl
or
pop
push
fcoml
pop
int3
mov
outsb
mov
lods
jmp
es
xor
pop
push
xor
aam
or
cli
dec
fs
add
or
sahf
mov
add
xchg
cld
je
je
xchg
mov
test
cmpb
stc
loopne
or
in
aad
pusha
andnps
in
negl
std
cmp
push
push
add
pop
jecxz
pop
arpl
mov
inc
mov
hlt
int
push
loope
popa
iret
fisubrs
xor
cmpsb
icebp
push
pop
in
scas
jl
xor
inc
int3
std
cmpsl
and
mov
push
cmp
sub
add
push
cmc
lahf
mov
lock
add
js
add
test
inc
leave
orl
pop
jb
xchg
stc
xchg
pop
pop
add
imul
jns
or
add
loop
test
lret
xchg
mov
pusha
xlat
popf
mov
rorb
loope
fiadds
jp
and
sub
pop
sbb
push
mov
push
out
fidivl
sysexit
inc
sub
mov
or
xor
push
xlat
fistpll
rcl
pop
xlat
inc
flds
aam
xchg
inc
arpl
fisubrl
jge
pop
clc
push
sbb
das
inc
push
mov
std
sub
out
cmc
push
les
sbb
jmp
add
js
loopne
das
int
jecxz
push
push
ja
sub
daa
dec
jp
imul
dec
inc
lcall
pop
movsl
sbbb
movsb
enter
fincstp
adc
xor
aam
fwait
push
ljmp
lods
loopne
icebp
mov
push
xlat
push
mov
pop
out
fidivl
and
sbb
std
outsl
and
addl
in
dec
xor
push
xlat
mov
rclb
xchg
pusha
mov
sub
ficompl
aam
xchg
movsb
loope
lcall
cwtl
insb
sub
adc
les
jg
sbb
loop
int3
lahf
out
ficoml
xor
lcall
daa
mov
movsl
inc
add
or
and
or
jl
cmp
sbb
cmp
mov
loopne
or
xor
adc
pop
adc
mov
push
fwait
push
ljmp
cmpsl
call
xchg
xor
aam
lock
les
imul
xlat
mov
mov
mov
cmp
push
pop
or
icebp
popf
fcomp
std
dec
xor
cli
lcall
pop
rorb
pop
sarl
jne
push
fstl
aaa
inc
arpl
xchg
mov
and
rcrb
pusha
or
imul
mov
fs
iret
out
int
insb
stc
jg
repz
push
xchg
inc
cmp
sub
push
sbb
jo
dec
mov
jnp
js
dec
lods
shr
js
pop
jmp
test
mov
stc
cmp
outsb
jg
sbb
pop
mov
stos
xchg
inc
cmpsl
arpl
push
rcll
dec
mov
arpl
mov
flds
clc
or
fisubrs
aad
clc
pop
ja
add
aam
into
cmp
jb
enter
enter
in
test
leave
cmpsb
xor
or
cmp
ljmp
push
mov
imul
pop
add
cmc
iret
out
xor
xchg
dec
dec
test
or
test
xor
ficomps
adc
shrb
dec
cmp
rcr
jbe
mov
mov
faddl
pop
cmpsb
dec
pop
and
mov
cmpsl
fs
out
inc
lea
jp
sbb
insl
mov
mov
sub
sbb
aam
int3
inc
out
xlat
ss
push
add
jb
lds
sub
movsb
mov
nop
imul
add
ljmp
int3
outsb
iret
xor
mov
adcb
loop
xorl
adc
pop
out
sbb
insl
icebp
dec
roll
das
lock
pop
hlt
stos
mov
mov
mov
hlt
repz
aam
jbe
pop
call
mov
clc
mov
inc
or
test
sbb
mov
jmp
shlb
add
xchg
mov
cltd
dec
mov
add
or
and
inc
shlb
inc
cmp
inc
cmp
test
xchg
adc
loop
inc
mov
xchg
daa
scas
adc
cmpsb
jl
dec
lret
jecxz
or
add
dec
dec
jmp
ret
les
add
lds
mov
out
frstor
xchg
cmp
xchg
push
cmp
dec
int3
icebp
jp
push
add
xchg
sub
pop
jns
xchg
ds
mov
and
mov
enter
outsl
push
pop
push
jne
xchg
mov
push
xor
fisttpl
cmpsb
xchg
test
pop
mov
jge
insl
jle
je
mov
lret
sub
jne
inc
jns
adc
add
or
pop
xchg
movsl
das
js
push
xchg
add
jnp
loopne
xor
mov
into
test
inc
cmp
addr16
cmp
data16
fbld
mov
xchg
repz
js
imul
iret
test
or
bound
fildl
sti
out
mov
dec
xor
lods
movsl
es
orl
addr16
in
xlat
and
lret
pop
jo
add
movsb
mov
aad
movl
xchg
outsb
in
scas
mov
adc
mov
mov
xchg
pop
mov
sbb
xchg
push
hlt
mov
sti
sbbb
pop
nop
mov
ja
sbb
cwtl
popl
push
pop
dec
or
fidivrl
fidivrl
inc
cmp
mov
xchg
rorl
pop
jbe
enter
jmp
xlat
in
mov
or
add
jnp
cmc
xlat
aaa
inc
ror
mov
fsubs
mov
stc
push
push
daa
neg
cmpsb
imul
jge
loop
xchg
mov
cmp
mov
jle
xchg
dec
mov
clc
add
inc
mov
cmpsl
mov
fcmove
adc
scas
add
add
je
inc
aad
and
xchg
fldt
dec
sarl
mov
add
or
push
adc
push
dec
mov
call
leave
push
jnp
aas
xlat
dec
xchg
clc
sti
push
scas
cwtl
aam
mov
mov
ja
cmp
and
bound
push
mov
cmp
jnp
fnstenv
cltd
and
fildll
push
or
bound
or
push
jge
cmp
das
or
inc
jge
pop
mov
push
stc
pop
jp
test
jmp
cmpsl
sub
sub
push
inc
push
add
lahf
shll
and
je
cmp
jmp
jg
add
scas
mov
out
int3
daa
jecxz
daa
push
jb
jecxz
aad
stos
push
sub
add
inc
add
dec
add
jno
dec
pop
jns
inc
pop
imul
pop
fwait
add
pop
mov
add
pop
fildl
pop
lret
add
pop
sti
add
pop
jmp
cs
sbb
push
loop
mov
outsb
loop
mov
dec
loop
mov
mov
mov
mov
cli
loop
mov
mov
mov
daa
stos
pop
inc
arpl
sbb
inc
mov
lret
push
push
cmp
inc
jp
and
test
and
jp
and
jp
lret
repz
cmp
orb
test
mov
mov
cmpb
imul
mov
sub
test
cmc
int
mov
adc
push
cmc
dec
enter
lret
movsl
pop
push
mov
leave
push
out
push
sub
add
and
jp
and
nop
and
jp
cld
das
stc
adc
sbb
jp
xor
arpl
xchg
aad
movsb
pop
sbb
pop
add
jo
leave
enter
mov
sub
in
jno
jb
adc
mov
arpl
pop
add
pop
xor
mov
icebp
adc
aad
nop
cmpsb
mov
inc
in
and
sbb
arpl
jb
jne
inc
mov
in
lock
in
mov
subb
inc
add
lods
sbbb
add
pop
xchg
lea
stos
pop
loop
mov
shl
adc
arpl
push
mov
or
push
lock
push
xchg
repz
arpl
cmc
es
mov
or
mov
jp
and
xor
sbb
xor
and
push
loop
mov
fmulp
pop
mov
aad
pop
cmpsl
push
cld
mov
call
pop
pop
add
pop
sub
inc
sbb
sub
out
stc
bound
xorb
mov
enter
orb
es
pop
and
arpl
pop
scas
arpl
pop
mov
in
inc
arpl
pop
arpl
pop
popa
arpl
pop
imul
add
pusha
aas
js
sbb
lea
mov
lea
lea
ret
or
ss
or
sbb
dec
xor
add
mov
in
flds
adc
loop
mov
cli
mov
mov
xchg
scas
sub
jl
out
push
sub
or
sbbl
fstps
mov
mov
add
sub
adc
test
pop
bound
sub
pop
push
clc
mov
and
push
xor
or
push
add
push
jl
dec
push
dec
or
push
mov
or
push
insl
out
push
repnz
push
ret
push
xor
arpl
pop
cmpsb
arpl
pop
mov
test
cmpsl
cld
std
cmpsl
ror
sbb
xor
mov
js
jbe
pop
mov
rolb
mov
shl
mov
rol
mov
rcl
xchg
mov
ss
xor
push
cmpsb
pop
or
jbe
jae
inc
lods
jno
in
fcoms
inc
int
or
xor
ja
and
pop
ss
or
ss
or
xor
push
cs
sbb
and
jp
and
jp
and
jp
push
mov
in
dec
mov
in
pop
mov
in
scas
mov
xlat
mov
outsl
xor
add
pop
ret
add
pop
repz
pop
jecxz
out
into
and
cld
and
out
mov
cld
sub
push
cmp
inc
mov
es
mov
rcrb
sub
adc
popf
sub
adc
mov
sub
adc
insl
sub
add
cmp
arpl
sbb
bound
cmp
or
and
add
mov
in
insb
mov
in
jl
dec
in
dec
pushf
jns
adc
dec
sub
adc
insl
sub
adc
or
sub
sub
cmpsb
popf
pop
int
mov
in
subb
xor
negb
dec
sbb
or
push
or
ss
or
loopne
sbb
lahf
aaa
std
pop
mov
jp
aas
shlb
mov
je
jge
mov
loop
mov
mov
jno
push
mov
xor
jbe
cmp
xchg
mov
lea
mov
shlb
popf
ret
cmp
imul
or
xor
jne
sub
jge
and
add
aas
cltd
sbb
ss
or
mov
shll
xchg
fnstenv
stos
mov
ss
ss
or
ss
ss
or
pop
or
ss
or
ss
or
ss
or
mov
fnsave
orb
ss
or
repnz
ss
inc
sbb
push
sub
jns
pop
or
ss
or
ss
or
ss
or
cmpl
or
jp
and
jp
and
inc
and
pop
and
push
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
add
mov
add
and
std
andl
or
push
lods
or
push
movsb
or
push
mov
or
push
loopne
lds
or
mov
cld
cmc
popf
les
in
and
cmp
and
jnp
test
pop
jp
and
movsb
and
jp
and
jp
and
jp
lret
mov
adc
pop
bound
sub
adc
push
mov
js
dec
shlb
jno
dec
mov
mov
popa
fdivs
in
fsubrs
in
fsubs
dec
pop
roll
jmp
mov
and
add
pop
or
sbb
inc
add
add
add
add
xlat
pushf
dec
push
jle
mov
arpl
or
arpl
cmp
sub
or
orb
mov
rcll
jge
push
pop
or
inc
push
push
or
dec
ret
popa
xchg
jne
and
ret
xchg
push
insl
lock
jp
and
and
and
and
and
and
and
and
sbb
dec
enter
enter
mov
inc
fildll
push
add
cs
data16
arpl
arpl
scas
das
mov
xchg
jl
cs
movsb
lahf
pop
cmc
xchg
add
repz
add
add
mov
andb
cmp
adc
add
mov
js
in
fistpll
add
xor
pop
fldenv
pop
icebp
gs
push
mov
sbb
aas
lret
andl
pop
push
pusha
mov
daa
push
jo
orb
mov
orl
pop
pop
add
mov
rcr
xchg
movsl
jns
xchg
or
cmp
add
idiv
jp
and
adc
pop
test
in
aad
ljmp
cmc
ror
cmc
repnz
enter
enter
enter
enter
enter
xchg
dec
arpl
add
jge
sub
imul
adc
mov
xorb
loope
jle
inc
cmc
or
gs
cmp
sbb
pusha
leave
mov
fcoml
fs
sub
xchg
ja
push
and
lcall
imul
mov
jnp
pop
bound
pop
inc
outsl
and
in
rcll
or
push
cmp
arpl
pop
fwait
arpl
pop
inc
arpl
xchg
jmp
arpl
daa
xchg
mov
lea
out
mov
or
popf
jg
iret
mov
mov
repnz
sbb
pop
fisubl
pop
mov
mov
bound
pop
cmp
pop
xor
pop
sub
xor
in
dec
inc
pop
les
movsb
fdivl
in
aam
in
jle
popf
adc
mov
imul
or
pusha
or
lret
fadd
adc
ss
sub
or
mov
loopne
mov
fsubl
and
jp
jbe
xor
xor
sub
or
xor
mov
dec
xlat
adc
arpl
jne
andl
jmp
enter
es
pop
adc
mov
cmp
cmpxchg
mov
sarb
cmp
mov
enter
arpl
in
adc
cld
sub
adc
or
sub
sub
imul
loop
mov
orl
bound
shrb
mov
add
push
int
fists
dec
test
add
xor
into
add
adc
pop
lea
mov
lea
mov
lea
mov
shl
jmp
ret
push
mov
add
mov
add
pop
ret
add
pop
repz
pop
jecxz
inc
adc
ss
mov
gs
jp
dec
cmpsl
dec
cld
jnp
pop
inc
dec
sbb
dec
ss
pop
ss
outsl
ss
jg
pop
or
ss
or
xor
mov
push
adc
and
jp
jae
adcb
push
add
inc
or
mov
inc
adcb
leave
in
pop
arpl
pop
ja
and
pop
arpl
dec
inc
jb
sti
cmpsl
fdivrp
jmp
lcall
rorb
mov
xlat
data16
cmp
and
mov
in
fmuls
in
fsubrs
cmp
cwtl
pop
add
dec
addb
sarb
insl
push
jno
adcl
jmp
sbb
scas
aaa
lret
ss
pushf
movsl
adc
or
lock
and
mov
or
or
push
stos
or
loopne
dec
push
sub
sub
loop
cltd
push
dec
xor
and
mov
jle
or
in
stc
shrb
mov
mov
clc
lds
mov
sbb
pushf
pushf
xchg
in
pop
cs
and
pop
jo
and
add
in
adc
test
enter
mov
in
push
pop
rorb
scas
pop
insl
arpl
push
arpl
pop
jbe
pop
sub
stc
sbb
jmp
es
mov
icebp
jo
and
orb
or
inc
out
jge
sub
xchg
cmp
mov
pop
lea
pusha
cld
mov
lret
mov
mov
and
jle
pop
push
scas
or
cli
mov
or
aad
cld
dec
fidivs
loope
frstor
decl
or
sub
pop
in
fmuls
pop
daa
xor
xchg
pop
pop
or
mov
or
stos
sahf
lret
aaa
mov
xchg
mov
mov
sub
imul
das
push
mov
lea
cmp
pop
adc
insl
dec
dec
mov
in
not
stc
in
cltd
cmp
mov
cmpsl
inc
cld
mov
mov
outsl
dec
adc
sub
inc
in
flds
lods
mov
in
mov
mov
in
xchg
mov
nop
in
das
pop
outsb
outsb
shll
mov
push
mov
inc
in
fsubrs
jmp
or
pop
jno
lock
mov
repnz
jge
adc
jp
pop
iret
in
sbb
addr16
xlat
sbb
mov
pop
sahf
sbb
pop
and
jae
int3
sub
inc
push
cmpsb
or
mov
sub
cmpsb
in
testl
psraw
cmp
and
dec
outsl
mov
and
mov
enter
push
enter
enter
dec
inc
icebp
or
push
xor
je
repnz
mov
xchg
push
orb
add
test
ss
flds
and
xor
mov
lret
stos
jp
inc
xor
movsl
mov
inc
mov
mov
jne
sbb
ja
rolb
add
scas
ret
pushf
inc
sub
fimull
in
bound
add
fbld
push
pop
jns
inc
push
popa
pop
scas
mov
arpl
pop
dec
arpl
arpl
push
mov
sbbl
aad
aam
imul
sbb
dec
stc
adc
fdivrs
mov
mov
mov
loope
pusha
pop
rorl
and
dec
sub
or
repz
push
imul
jle
and
jbe
outsl
das
outsb
lahf
xor
mov
pop
leave
and
in
insb
mov
rorb
dec
push
jo
jno
dec
or
mov
cld
popa
mov
ret
xchg
int
xlat
movsb
test
es
pop
inc
sysenter
sub
xchg
sbb
add
adc
loopne
mov
outsl
mov
push
les
nop
sbb
and
fstpl
call
lock
jne
inc
cld
fsts
in
aaa
out
pop
fiaddl
iret
push
fcoml
lret
sub
push
or
push
lahf
out
add
and
faddp
and
sbb
pop
repz
xchg
enter
xor
or
add
adc
pop
mov
cld
ret
enter
cmpsb
mul
add
dec
jl
mov
sbb
push
xor
bound
aam
cmc
mov
rcr
mov
frstor
push
ds
xchg
popa
mov
jns
enter
popa
xlat
push
cwtl
in
shlb
or
adc
stos
ljmp
xchg
dec
lds
cmpsl
mov
icebp
mov
lea
mov
lea
mov
lea
stos
and
invd
push
add
xchg
pop
insl
inc
in
loop
ret
or
pop
or
mov
rcr
xchg
test
push
dec
or
cltd
fildl
or
xorb
mov
cwtd
stc
andl
xchg
loop
fbld
repz
mov
adc
xor
int
mov
mov
cli
mov
cmp
cwtl
add
pop
lret
pop
shrb
mov
cmp
rorl
xor
adc
push
mov
sub
shll
adc
std
shrl
jmp
add
and
cmpsw
loopne
cli
clc
mov
subb
ds
inc
add
pop
sub
and
adc
sub
or
adc
push
xchg
bound
push
push
int3
aas
inc
or
clc
cmp
scas
inc
add
sbb
cmc
lods
enter
enter
mov
aas
push
or
xor
orb
jo
imul
out
mov
mov
inc
dec
orb
pop
sbbb
shlb
xlat
mov
pushl
fnstcw
and
or
jb
or
and
cmp
and
pop
fsubs
pop
sarl
mov
cmpsl
adc
sub
jbe
or
pop
roll
mov
scas
inc
or
dec
movsl
and
pushf
pop
mov
push
inc
mov
in
or
inc
xchg
imul
sahf
pop
stos
add
mov
mov
sub
jbe
sti
xor
push
pop
icebp
mov
mov
bound
pop
insb
mov
or
xor
jae
pop
dec
adc
cmc
inc
enter
mov
or
push
inc
xlat
nop
ret
test
mov
lea
mov
lea
cmp
xchg
cs
mov
dec
mov
and
pop
lret
or
gs
push
gs
ljmp
fcoms
in
cmp
sub
pop
andl
pop
or
xor
daa
mov
in
loope
data16
jmp
sub
or
add
push
pop
das
or
addl
dec
andl
push
sub
push
das
cmp
in
xchg
mov
and
jb
pop
aas
mov
aam
jecxz
dec
fisubrs
or
xor
sub
xchg
shlb
lahf
push
aad
test
and
jp
push
sbb
dec
cmpsl
mov
mov
call
push
in
push
jg
push
mov
in
xorb
dec
insb
pop
fldt
je
adc
cmp
out
xchg
sbb
movsb
fsub
adc
ds
mov
sub
sub
xorl
lea
out
adc
xlat
lcall
into
jo
xchg
aam
int3
push
and
das
push
mov
enter
mov
cmpsl
das
or
inc
or
xor
test
pop
imul
jg
mov
mov
cli
arpl
test
dec
cmpsl
inc
call
movb
push
aas
sar
lcall
and
push
cmp
pop
jp
jno
fildl
sbb
bound
lcall
cmc
mov
daa
push
mov
adc
xor
lahf
pop
jmp
das
mov
in
fnstcw
loop
lock
cmpsl
sti
pop
fdivr
mov
adc
int3
daa
mov
repz
inc
jns
cmpsl
mov
cmpsb
mov
in
insl
pop
sbb
jecxz
push
pop
cmp
insl
sub
push
adc
mov
jo
jae
outsb
xchg
in
cmpsl
outsl
mov
das
in
adc
and
fidivl
insb
pop
loopne
ss
xchg
cltd
inc
jge
push
mov
mov
shrb
xor
gs
push
repnz
cmp
or
mov
cmp
pop
std
js
cmp
cwtl
adc
pop
test
sbb
pop
mov
push
out
or
jbe
ret
cs
pop
xor
hlt
cmc
arpl
pop
jns
inc
pop
xor
mov
inc
lods
sub
mov
mov
shlb
push
in
fmuls
push
fcom
pop
lret
adc
fs
lea
fisubs
fldcw
dec
hlt
daa
xlat
mov
push
movl
enter
in
bound
xor
xor
xchg
lret
jecxz
idivl
hlt
add
aam
mov
loop
insl
mov
dec
dec
add
sub
mov
pop
mov
daa
in
add
daa
pusha
mov
clc
mov
and
lea
pop
adc
pop
ret
dec
clc
imulb
stc
add
jle
mov
lock
xchg
gs
jbe
and
jae
pop
and
xor
lahf
and
mov
hlt
jne
popa
pop
ja
test
pop
sub
jg
int3
or
jo
and
aam
imul
ret
enter
enter
enter
push
int3
jno
sbb
cmp
inc
pop
or
pop
or
push
stos
aad
sbb
pop
loope
stos
scas
mov
sbb
cld
pop
cmc
add
inc
sbb
cmp
out
filds
fmuls
inc
fadds
add
and
cmpsl
dec
mov
jbe
gs
cs
lea
daa
roll
cmp
push
test
rol
inc
xchg
and
fadd
sahf
push
sub
or
ret
sbb
popf
in
bound
pusha
aad
int3
mov
push
scas
arpl
lret
jg
and
ja
xchg
xor
dec
enter
lods
sahf
cmp
xchg
pop
push
sbb
in
fcoms
arpl
pop
mov
push
lods
jge
xchg
loopne
jle
ljmp
outsb
sti
sub
jb
or
lock
or
sbb
cli
cmp
ror
mov
cmc
jns
add
sub
or
sbb
inc
loope
fwait
adc
xor
stos
test
dec
stc
cs
icebp
and
and
orl
or
push
sahf
out
pop
mov
mov
out
mov
mov
in
bound
test
mov
fisubrl
mov
lods
mov
xchg
sbb
leave
mov
in
repz
push
stos
test
adc
out
enter
mov
adc
daa
pop
jo
dec
fnstenv
jmp
mov
cmpsl
adc
nopl
pop
xor
push
mov
leave
pop
mov
adc
pop
or
push
mov
jne
and
pmullw
pop
sub
loopne
fstpt
cs
mov
iret
in
mov
mov
push
or
push
push
jle
insl
cmc
push
lcall
pusha
and
and
mov
inc
sbb
mov
jae
and
arpl
outsl
push
dec
or
rorb
or
pop
sbb
adc
pop
pop
pop
scas
jns
or
xchg
lret
and
insl
xchg
push
mov
adc
divl
mov
iret
fwait
sbb
jg
or
insb
or
push
add
pop
aaa
cmp
cmpsl
ret
sub
add
mov
mov
leave
or
xchg
add
or
adc
push
dec
mov
shrl
imul
cmp
mov
pushl
xor
into
or
gs
enter
xor
imul
mov
or
loop
mov
scas
rcrl
les
xchg
int3
xor
aas
dec
mov
push
pop
out
adc
push
and
jns
jl
test
shl
insl
cmp
mov
or
jl
dec
jp
movsl
adc
mov
xor
sub
imul
ret
and
lea
jno
nop
and
test
pop
mov
xchg
loopne
sbb
test
in
mov
fstpl
push
lds
out
movl
call
cwtl
sbb
pop
mov
inc
lds
sahf
int
cmp
sub
sbb
fidivl
cltd
mov
mov
mov
loop
mov
call
cmp
sbb
fmul
or
and
cmp
xchg
cmp
imul
js
pop
ret
pop
cli
fsub
jge
pop
and
test
inc
dec
hlt
cmp
mov
push
and
mov
sub
jge
and
push
aad
outsb
rcr
push
bound
pop
bound
inc
nop
aas
rcrl
leave
push
cmp
push
xor
pop
or
mov
cs
ss
insb
loopne
dec
inc
mov
mov
jno
pop
lods
xchg
mov
test
ljmp
mov
push
xchg
jp
push
les
or
mov
sahf
jo
test
dec
ds
jno
hlt
mov
in
int3
mov
cltd
sti
test
xchg
roll
mov
mov
or
lods
fwait
add
scas
fwait
lock
stos
adc
test
mov
test
out
jp
ret
ret
adc
sbb
cs
pop
xchg
popa
in
mov
adcl
jbe
jae
xlat
lret
inc
cmp
push
movsl
cmp
or
pop
push
mov
sub
data16
and
push
dec
aad
push
fs
mov
cwtl
stos
sahf
sbb
dec
fiaddl
jp
cli
xor
aad
add
adc
stos
mov
inc
divl
aad
push
mov
loop
cmpsb
pop
inc
daa
push
je
xchg
xchg
lock
or
mov
mov
leave
add
xchg
icebp
mov
int3
sbb
addr16
push
cmpsb
imul
icebp
rorl
movsb
icebp
ljmp
fmuls
sub
push
cld
sub
or
movsl
test
mov
add
ds
adc
cmp
xchg
xor
aas
xchg
cmp
or
push
push
jno
add
mov
mov
sbbb
adc
inc
in
cmp
sbb
mov
pop
dec
in
jo
pop
cmp
ljmp
pop
jmp
int
repnz
jbe
out
gs
inc
or
decb
dec
or
and
and
and
push
sub
cmp
imul
insb
shll
inc
jns
loopne
int
mov
int3
xchg
and
loopne
std
cmp
mov
or
lahf
fs
push
inc
mov
xchg
inc
add
and
cmp
loopne
mov
gs
lods
jge
je
sub
add
jo
stos
cmp
mull
out
or
aad
inc
mov
sbb
xor
rol
jbe
jge
cmpsb
js
cmp
sbb
pop
pop
add
pop
add
adc
int3
stc
pushl
push
jne
jns
popa
bound
jg
pop
out
test
insb
adc
scas
xor
pop
repnz
xchg
inc
mov
xchg
sub
mov
dec
dec
xor
push
in
cmp
data16
je
inc
test
pop
and
pop
cmp
cmpsb
jns
fstpt
cli
sub
jle
bound
fs
loopne
movsb
pop
push
push
outsb
and
in
push
sub
repz
in
adc
pop
pop
cwtl
jg
mov
test
nop
mov
inc
or
insl
xchg
push
jnp
stos
stc
mov
jecxz
cmp
xorl
cmc
and
mov
jb
stc
pop
pop
and
cmpsb
mov
rcr
push
ljmp
inc
mov
aas
jp
data16
lcall
bswap
adc
enter
test
pop
sub
inc
hlt
mov
in
jl
fs
inc
cmpl
rorb
cmp
push
mov
int3
sbb
mov
scas
jb
sbb
sub
and
pop
aam
mov
mov
enter
cmp
jae
add
ljmp
xor
in
jp
inc
sbb
or
in
ret
fnstenv
sub
adc
jnp
inc
xchg
push
adc
cmp
sbb
mov
das
inc
lahf
into
fiaddl
js
jmp
sbb
fwait
gs
and
pop
sub
push
daa
ljmp
ds
insb
testl
scas
cmpl
clc
sahf
addl
inc
xchg
push
xchg
cltd
inc
out
dec
push
cmp
cmp
call
mov
lods
je
mov
cmp
add
xchg
mov
adc
inc
inc
addr16
sub
js
add
mov
mov
jmp
mov
push
xor
pusha
add
sbb
xor
or
int
fistpll
aad
sahf
inc
lcall
in
pop
push
dec
cmpsb
aad
andl
cmp
add
clc
pop
cmpsb
out
inc
es
xor
movsb
scas
jns
mov
add
add
aad
xor
add
jge
add
ja
call
shlb
push
push
sarb
adc
xchg
or
rcll
jns
js
xor
mov
inc
jb
xchg
outsb
cmp
scas
mov
popa
pop
dec
notb
jb
jecxz
std
push
ljmp
std
sub
push
and
cmp
xchg
dec
xchg
inc
adc
scas
and
leave
cwtl
pop
xchg
pop
movb
cmc
and
fldt
loopne
jo
int3
bound
mov
in
lods
pop
ficompl
mov
dec
xchg
add
sbb
cmp
fs
inc
fists
fistl
mov
push
into
inc
pop
and
test
inc
mov
mov
inc
mov
sub
repnz
shlb
fdivr
scas
push
mov
subb
je
lock
and
mov
add
xor
sub
sahf
xchg
xchg
mov
sub
orb
xlat
push
push
xchg
ficoml
and
xor
psubd
pop
mov
xchg
pop
push
jbe
inc
cld
push
xchg
pop
xor
ss
cmp
in
sahf
adc
add
add
pop
sub
sub
test
test
bswap
add
mov
mov
xor
cmp
inc
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
movswl
and
cmp
sub
and
bts
movzbl
jmp
lcall
ret
or
bts
bt
shl
cmp
and
or
bswap
btr
jmp
lcall
xor
add
add
pop
xor
xchg
push
or
neg
adc
bts
shr
btr
and
btc
shr
call
lcall
incl
ret
neg
sub
cmp
movswl
bts
bsf
shr
mov
or
adc
jmp
lcall
test
sub
and
sub
sub
movswl
mov
mov
xchg
push
push
xchg
dec
add
add
call
adc
and
btr
shl
shr
movzbl
xor
mov
add
mov
or
adc
shl
add
cmp
or
and
xor
mov
shl
sub
xchg
mov
bsf
and
bsf
shl
or
and
inc
jmp
lcall
ret
or
shr
mov
neg
bt
shl
btr
btc
bsf
not
call
lcall
add
xorl
pop
xor
xchg
push
mov
cmp
sub
add
movsbl
or
jmp
lcall
stc
add
xchg
ret
neg
sub
xor
sub
mov
mov
btr
mov
movsbl
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
shr
bsf
adc
sub
inc
or
mov
jmp
lcall
pop
add
adc
mov
mov
icebp
push
jl
shl
mov
push
sti
dec
and
dec
add
mov
bsf
btr
not
or
test
cmp
test
mov
call
lcall
add
test
shr
and
shr
cmp
bt
dec
btr
bt
call
lcall
pop
add
mov
xor
or
adc
btc
shl
mov
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
not
sub
or
bts
sub
test
and
call
lcall
sahf
sub
bsf
and
xor
shl
bt
mov
xor
jmp
lcall
lret
out
push
and
and
shr
mov
sub
bts
mov
and
and
sub
sub
sub
inc
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
not
xor
xor
xor
cmp
test
or
bsf
push
bsf
or
and
neg
adc
shl
bt
movsbl
add
test
test
adc
shl
shr
test
test
xor
inc
add
mov
adc
bt
mov
cmp
bsf
cmp
or
add
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
movzbl
movzwl
btc
or
shr
btc
and
mov
call
lcall
add
btr
bts
inc
bt
sub
shl
test
adc
mov
add
or
cmp
or
xor
shr
shl
or
test
sub
mov
adc
bts
sub
sub
not
bsf
bsf
add
call
lcall
mov
shl
sub
dec
and
inc
test
cmp
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shr
or
not
xor
bt
mov
bsf
mov
shr
test
movzbl
sub
bt
shl
xor
adc
and
jmp
lcall
in
sub
test
xor
bsf
bt
shr
mov
add
cmp
adc
adc
shl
sub
shr
btr
bsf
mov
call
lcall
add
btc
or
btc
shl
sub
test
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
mov
xor
adc
test
bsf
bts
inc
or
inc
sub
mov
bt
neg
and
test
shl
shl
shr
shr
and
movswl
test
bsf
and
bts
and
and
xor
or
dec
mov
add
shl
test
add
adc
bsf
xor
and
lea
inc
cmp
jne
dec
mov
shr
sub
cmp
btc
mov
shr
add
not
test
movzwl
btc
not
adc
xor
cmp
or
and
call
lcall
je
mov
add
test
cmp
cmp
mov
bts
sub
mov
mov
movzbl
shl
xor
or
not
add
sub
add
call
lcall
mov
adc
test
add
and
and
sub
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
inc
bsf
bsf
not
or
btc
btc
shl
sub
call
lcall
or
movswl
btr
add
sub
and
and
add
bsf
btr
sub
or
movswl
mov
bsf
test
jmp
lcall
in
cmpsl
testl
neg
add
test
mov
mov
add
btc
add
bts
bts
or
bsf
bts
shr
call
lcall
add
test
bswap
shl
inc
add
mov
cmp
bsf
push
pop
inc
add
loop
bt
test
not
shr
cmp
bswap
add
bts
bts
push
decl
mov
add
xor
btr
xor
sub
or
mov
shr
call
lcall
pushl
imul
mov
and
icebp
btr
test
movzwl
push
shll
bsf
bt
test
neg
mov
mov
or
push
add
add
or
and
mov
or
adc
test
sub
mov
mov
adc
adc
test
and
bts
btc
bts
push
push
pop
add
add
call
bsf
mov
inc
shr
sub
mov
bt
sub
xchg
adc
mov
cmp
bts
add
and
btr
mov
test
xor
mov
xor
xor
test
call
lcall
mov
mov
jmp
shl
ss
bts
cmp
shl
and
mov
add
test
or
btr
adc
bswap
bt
btr
shr
mov
call
lcall
mov
mov
inc
jnp
or
or
std
outsl
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
add
mov
inc
btr
bts
mov
cmp
adc
mov
adc
test
mov
btc
and
movswl
sub
call
lcall
ret
btr
cmp
xor
btc
btr
add
dec
mov
adc
add
mov
not
test
xor
bt
shr
xor
cmp
je
bt
test
add
mov
inc
or
xor
not
add
bts
cmp
add
or
or
cmp
or
call
lcall
add
sub
mov
btc
test
cmp
test
sub
bsf
bsf
test
or
bsf
bswap
test
xor
dec
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
sub
adc
bt
inc
add
bsf
dec
xor
bts
push
decl
mov
add
test
test
test
or
neg
bsf
adc
dec
push
decl
mov
add
bsf
neg
bsf
shl
sub
test
cmp
cmp
add
not
btr
cmp
add
bt
shl
add
bswap
jmp
adc
bts
add
bsf
btc
shr
btr
or
mov
or
adc
shr
xor
bt
movzwl
or
shr
mov
test
xor
bsf
bswap
and
mov
shr
sub
mov
add
inc
test
sub
cmp
not
xor
or
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
and
shr
or
adc
cmp
bt
test
btr
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
xor
btr
bt
bt
and
btc
btr
shr
push
push
add
cmp
sub
bsf
xor
mov
or
dec
push
sub
mov
btc
movzbl
test
inc
btr
sub
mov
test
mov
sub
adc
dec
inc
test
shl
shr
or
add
test
call
lcall
js
mov
xor
mov
mov
bts
sub
adc
lea
mov
shl
adc
bts
or
mov
and
add
mov
shr
test
neg
bsf
or
add
mov
xor
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
jmp
dec
sbb
shl
xor
test
mov
cmp
sub
mov
mov
cmp
or
cmp
not
test
cmp
push
cmp
mov
dec
shr
mov
bts
sub
dec
push
dec
or
shr
not
cmp
sub
btr
and
or
push
test
sub
not
test
and
shl
bsf
sub
xor
call
lcall
mov
neg
test
btc
test
and
sub
adc
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
adc
inc
dec
mov
xor
adc
sub
or
shr
call
lcall
sub
mov
xlat
sub
xor
bts
mov
bt
add
bsf
test
add
add
shl
dec
and
shl
xor
call
lcall
mov
xor
btr
shl
add
test
or
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
inc
sarb
add
add
leave
insb
sub
xchg
scas
lds
add
fs
fistpl
add
testb
aas
sub
add
mov
pop
pop
add
jge
xor
popa
sub
nop
jb
add
outsl
push
cwtl
xor
pcmpeqb
incb
lds
out
or
sbb
push
xor
or
xor
push
xor
and
add
add
in
or
and
jo
add
rcll
add
sub
mov
xor
test
mov
pop
add
orb
lret
ret
and
xor
dec
es
sti
xor
xor
fcoms
sbb
mov
out
push
ret
scas
roll
insb
xor
and
push
jbe
lods
add
aas
loopne
jp
push
xor
movsl
add
stos
loopne
pop
sub
add
dec
or
sahf
or
jl
pop
dec
sbb
or
inc
mov
push
sbb
fsubl
add
push
insb
repz
fsubl
mov
lret
adc
pop
sbb
or
push
mov
sbb
xchg
jp
call
pop
mov
adc
inc
dec
inc
push
dec
ja
add
inc
pop
inc
aaa
cmp
jbe
cmp
jbe
inc
ds
xor
xor
arpl
pop
fsts
jecxz
dec
inc
xor
dec
pop
push
inc
dec
pop
mov
jbe
idivb
jno
jp
pop
inc
xor
icebp
adc
aaa
flds
xor
std
mov
dec
add
push
push
push
inc
inc
dec
xor
faddl
add
gs
dec
inc
nop
pop
sub
test
add
xor
dec
inc
enter
sbb
push
sahf
ss
aaa
push
pop
pushf
ds
repz
lds
dec
dec
mov
cmp
pop
loop
jmp
pop
cmp
pop
aam
bnd
cmp
inc
cs
pushf
cld
and
push
push
inc
push
pop
add
shll
aaa
fistl
inc
or
pop
stc
add
test
cmp
outsl
jae
and
cmp
cmc
cmp
outsb
cmp
jae
je
int
in
aam
addr16
insl
loopne
imul
call
ja
or
push
inc
mov
outsl
mov
clc
dec
sub
nop
aad
imul
xchg
push
and
rsqrtps
in
movsb
idivb
arpl
repz
xchg
lods
push
mov
adc
imul
sub
icebp
xor
out
lds
popa
aam
inc
repnz
call
mov
imul
leave
pop
fnstenv
push
add
inc
dec
jmp
xchg
and
outsb
mov
call
sbb
adc
stos
mov
add
push
cld
mov
inc
push
push
je
or
xor
inc
pushf
call
js
sbb
add
adcb
gs
xchg
fs
xlat
mov
addr16
clc
test
outsl
fmuls
and
dec
je
or
loope
fisubrs
das
or
les
leave
or
fs
je
cmpsl
aaa
data16
lahf
mov
leave
xchg
das
jne
jnp
hlt
js
jo
insb
fs
xor
stos
push
xchg
inc
push
or
dec
popa
jns
dec
mov
mov
shl
pushf
add
aam
add
sbbb
dec
add
push
inc
push
inc
pop
xor
fs
jne
es
mov
dec
inc
sahf
add
pusha
