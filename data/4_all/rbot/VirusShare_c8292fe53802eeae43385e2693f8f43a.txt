and
xor
mov
daa
lahf
cmp
aam
dec
add
loopne
jp
loopne
sub
xchg
arpl
pop
pop
test
shrl
or
movsl
inc
jns
push
lret
test
cld
or
xorb
sub
adc
jnp
ss
mov
pop
lock
ret
test
rcll
or
clc
xchg
mov
scas
sbb
orl
inc
pop
stos
inc
and
clc
gs
or
iret
mov
ljmp
dec
test
cmp
xchg
cmp
scas
aas
frstor
ja
or
dec
push
jmp
sub
cmp
cmp
pusha
mov
sbb
mov
adc
cmp
ds
inc
lods
inc
inc
jle
pushf
jl
xor
arpl
inc
inc
in
movsb
add
and
add
and
add
or
add
add
add
pop
and
add
add
add
call
mov
mov
add
jmp
nop
jmp
faddp
fiadds
popa
adcl
imull
sarl
arpl
and
sbb
xchg
jp
cmp
xchg
add
sbb
add
adc
add
mov
in
jo
in
jo
in
jo
in
jo
in
jo
push
push
or
xor
and
mov
call
pop
sub
sub
mov
call
mov
shr
mov
mov
mov
test
je
add
xor
stos
inc
loop
push
push
push
push
push
mov
call
add
mov
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
lea
push
mov
add
push
pop
rep
pop
mov
mov
mov
mov
push
push
push
push
push
call
pop
test
jne
push
push
push
push
call
test
je
mov
mov
mov
mov
add
rep
mov
add
movzbl
lea
push
push
pop
rep
pop
mov
test
je
push
mov
add
mov
mov
mov
add
rep
pop
dec
jne
mov
sub
je
mov
mov
add
mov
test
je
add
mov
test
je
lea
shr
lea
movzwl
push
mov
shr
mov
and
add
add
pop
dec
jne
mov
shr
jmp
dec
jne
movzwl
add
jmp
dec
jne
add
inc
inc
loop
add
jmp
mov
test
je
mov
add
mov
test
je
mov
add
mov
mov
test
jne
mov
add
mov
add
push
mov
call
test
je
mov
mov
mov
test
je
test
je
and
jmp
add
inc
inc
push
push
mov
call
mov
mov
addl
addl
jmp
add
jmp
mov
mov
mov
mov
mov
cmp
je
push
push
push
call
pop
test
jne
mov
add
mov
add
test
je
xor
push
push
pop
repz
pop
je
mov
add
mov
sub
jb
cmp
jbe
add
jmp
push
lea
push
push
call
lea
push
push
pushl
pushl
call
test
je
push
mov
lods
test
je
sub
add
stos
jmp
lea
push
pushl
pushl
pushl
call
pop
jmp
mov
cmp
jne
mov
mov
add
mov
add
mov
cmpl
jne
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
pop
pop
pop
leave
ret
movl
movl
movl
movl
ret
faddp
faddp
ret
mov
fistl
xorb
loope
sahf
fmull
adc
inc
adc
ss
js
mov
and
sbb
push
int
push
aam
arpl
and
push
and
dec
push
lret
push
mov
add
xchg
stc
addl
out
rcll
jmp
xor
fwait
adc
mov
les
fmull
xchg
test
pushf
or
mov
test
fcoms
subl
jmp
scas
shrb
shl
push
xor
ja
movsb
iret
push
sub
add
pop
movsl
sbb
jnp
roll
clc
xchg
in
mov
ret
imul
add
sbb
sahf
xchg
cltd
fadd
loop
stc
jnp
xor
cmp
pop
push
and
adc
push
xchg
int
lods
enter
xor
mov
mov
xchg
push
jno
push
mov
pop
pop
lea
push
call
or
mov
xor
jle
movsb
dec
mov
mov
mov
pop
pop
mov
push
jbe
push
cltd
pop
pop
push
call
jl
adc
xchg
pop
shl
jmp
pop
pop
cmp
test
pop
jmp
jmp
call
js
push
mov
pop
jns
jbe
jbe
add
clc
sar
ja
add
sub
pop
test
add
je
rol
push
jle
test
pop
push
dec
pop
stc
cld
push
add
mov
pop
push
movzbl
push
jnp
xor
pop
or
cmc
or
loop
pop
push
sub
pop
cmp
mov
push
call
xchg
in
sbb
mov
sub
jle
mov
pop
xor
push
add
cwtl
dec
sub
push
call
mov
shll
roll
or
mov
jno
xchg
inc
cli
ss
pop
add
leave
mov
leave
hlt
sbb
lret
inc
inc
rcll
add
fildl
push
push
pop
pop
pop
pop
push
push
push
cmp
pop
pop
pop
nop
cmp
clc
testl
je
jg
jnp
ja
push
or
pop
push
push
jae
xchg
xchg
pop
pop
stc
add
nop
or
or
test
cld
push
mov
push
xor
pop
pop
push
call
lock
shrl
out
ret
test
cmp
cmp
hlt
lock
dec
push
outsl
mov
adc
push
movsl
loopne
movsl
or
lock
inc
push
int
cmpsb
js
mov
das
pusha
outsl
pop
lret
fcomps
inc
ret
push
push
adc
or
pop
xchg
mov
or
leave
add
pop
mov
inc
inc
inc
inc
push
inc
pop
push
push
pop
add
pop
cmp
test
shl
dec
jne
jmp
incb
and
aas
out
push
dec
loope
pop
fsincos
push
mov
adc
or
int3
das
incb
ficoml
rolb
or
shrl
sar
mov
push
sub
scas
daa
mov
test
rorb
jnp
pop
add
push
mov
loop
mov
pop
xchg
sub
sbb
pop
ficompl
les
repz
mov
mov
inc
adc
pop
mov
dec
test
jge
mov
inc
fdivs
sbb
dec
add
xchg
mov
push
out
mov
jbe
aad
and
cltd
stos
les
mov
les
ret
mov
aad
enter
sub
xchg
cltd
notl
fnstcw
adc
cmpsb
fisubrs
push
das
pop
shrl
xlat
push
call
movsb
insl
test
add
sub
iret
sbb
rorb
in
test
rorl
cli
cmp
ficoml
xchg
and
mov
mov
ds
dec
sbb
idivl
cmpb
sahf
pop
in
test
cmc
pushf
xchg
std
lock
gs
inc
arpl
sub
lret
push
push
add
pop
jmp
push
mov
pop
nop
stc
sahf
hlt
push
or
enter
mov
jge
movb
sbb
cmp
fisubrl
ss
mov
dec
sbb
pop
sub
cwtl
jle
out
mov
jg
jbe
lods
pop
scas
mov
es
aaa
cmp
jl
sbb
icebp
sbb
lods
mov
xor
aam
pop
dec
scas
inc
jecxz
or
mov
je
jl
push
shr
jp
mov
mov
popf
movsl
mov
mov
or
mov
cmc
testl
adc
sub
ret
mov
jbe
adc
popa
imul
aam
shll
sarb
leave
and
mov
dec
icebp
inc
mov
push
arpl
mov
shlb
mov
sbb
add
sub
das
inc
cmp
or
mov
repnz
pop
pop
mov
test
add
stc
incl
lahf
jmp
sbb
push
icebp
mov
mov
mov
sbb
push
mov
cmp
sbb
mov
or
das
pop
xor
sub
xchg
test
fiaddl
xor
lahf
dec
cmp
xchg
in
cmpsl
push
jnp
inc
xchg
xchg
lcall
daa
lahf
aas
les
es
pop
and
mov
push
jno
mov
in
in
jo
push
jno
mov
sub
in
in
jo
adc
fildl
xor
jno
mov
sub
in
jecxz
dec
push
ja
lods
push
push
xor
push
xor
mov
adc
or
imul
negb
cltd
mulb
in
pop
and
lods
mov
mov
pop
mov
repz
mov
mov
in
xor
push
jbe
popf
push
jno
cmc
movsl
aam
rcll
dec
sarb
insb
and
arpl
icebp
push
testl
sar
int3
shlb
cmp
push
jbe
push
sbb
cmc
xchg
cs
xchg
or
xchg
stos
xchg
xchg
jp
jp
xor
cmp
movsl
mov
and
add
xchg
fwait
lret
xchg
mov
sub
sbb
sbb
jns
sbb
stos
addb
test
iret
sub
mov
mov
sbb
mov
cmp
mov
lods
and
ds
in
or
test
addr16
in
jo
push
jno
cmp
in
jo
out
subl
in
in
dec
in
jo
push
jno
data16
jo
push
jno
and
orl
mov
clc
push
jno
pusha
lret
jecxz
pop
push
vorps
in
into
push
aaa
add
imul
rcrb
and
pusha
mov
mov
repz
mov
scas
mov
in
push
in
call
push
jbe
push
fcomip
push
pusha
imul
aam
ror
pop
sarb
das
and
push
mov
icebp
push
stos
pop
push
arpl
arpl
lods
int3
shlb
cmp
sbb
test
or
jno
cs
xorb
pop
xchg
xchg
jp
jp
in
cmp
mov
mov
xlat
cli
add
xchg
dec
lret
xchg
mov
call
sbb
sbb
pop
addb
pop
insb
sub
sub
imul
push
mov
sbb
push
xchg
daa
pop
imul
cmp
mov
mov
mov
in
mov
in
in
jo
push
jno
pop
fiaddl
jo
push
jno
sbb
sub
in
in
jo
push
jno
sbb
sub
in
in
jo
push
jno
push
fiaddl
jo
push
jno
adc
push
push
xchg
mov
push
cmpl
into
jns
into
jmp
push
xor
test
and
adc
mov
repz
mov
scas
mov
jp
push
in
fwait
mov
jbe
add
imull
pusha
imul
aam
sarl
sarb
loop
push
dec
leave
mov
icebp
push
pop
pop
push
arpl
mov
shlb
cmp
sub
test
or
push
movaps
add
movl
popf
jp
pusha
jnp
xchg
pop
cmp
pop
jae
outsb
jle
test
add
jecxz
int3
clc
xor
jmp
and
nop
out
lods
in
xlat
xor
cld
out
roll
mov
add
xchg
adc
dec
adc
cmc
push
push
mov
loop
xchg
cli
test
sbb
mov
fcoms
add
xor
jno
lods
shl
push
aad
mov
pop
or
dec
xor
cmpsb
lds
mov
mov
xor
push
mov
je
pusha
pushf
popa
pop
in
mov
sbb
or
sub
stos
mov
pop
rolb
push
sub
xchg
loopne
jb
pop
add
sub
xchg
add
cmc
test
push
fbld
mov
dec
push
mov
test
jnp
fwait
jo
push
mov
bound
mov
push
inc
jp
inc
stos
stc
push
ret
movsl
jnp
icebp
lods
popa
popa
cmp
orb
iret
add
int
ja
mov
mov
mov
pushw
sti
and
adc
stos
out
icebp
fs
ds
mov
cmc
aad
cmp
cli
int
mov
dec
jno
adc
lods
sar
xchg
adc
pop
and
push
push
sbb
in
xchg
add
cmp
popa
ss
pop
cwtl
incl
rcr
inc
sbb
push
lods
imul
scas
or
pusha
push
push
stos
xor
xor
pop
fs
mov
push
in
mov
mov
mov
mov
add
jle
sbb
test
aaa
xchg
push
das
push
enter
pushf
mov
mov
xor
mov
mov
mov
fs
or
sub
inc
cltd
lea
sbb
loop
aaa
push
divl
mov
jle
sbb
sahf
imull
cmc
lret
lods
je
fcom
sbb
adc
pop
pop
xor
clc
lret
adc
adc
dec
pop
or
xchg
das
xchg
mov
insl
xchg
adc
xchg
inc
push
rcrl
sbb
scas
lcall
jmp
xchg
aas
imul
jmp
aam
jle
mov
sub
xor
inc
and
jge
dec
subl
or
aad
ficoml
int3
jnp
repz
adc
mov
hlt
adc
and
inc
push
xchg
lret
outsl
frstor
es
push
mov
adc
stos
popf
or
sub
push
out
stos
movsl
repz
imull
mov
mov
mov
xchg
inc
or
pop
pop
mov
mov
adc
fstp
sbb
mov
daa
imul
cli
jb
xchg
mov
sar
leave
sysenter
imull
outsb
stos
pop
int
cmp
bound
sbb
lock
lret
daa
ret
adc
popa
repnz
daa
xor
sub
pop
dec
cltd
pop
adc
cmp
daa
pop
xchg
sub
jae
and
ret
lock
mov
adc
test
push
push
cmp
insb
mov
jo
jb
stc
lret
add
test
cmp
add
dec
into
subl
cs
jge
lods
mov
in
test
and
out
fidivs
dec
and
adc
sbb
mov
outsb
je
xchg
hlt
aam
in
sub
mov
dec
scas
cwtl
lcall
push
aad
cmp
xor
add
out
pop
jae
xchg
or
adc
xchg
fwait
pop
adc
jns
push
and
fidivrl
and
xchg
pop
jle
daa
aaa
xor
cli
fwait
insl
sbb
xchg
xchg
push
or
adc
sbb
mov
push
sbb
cli
jmp
pop
out
out
or
mov
mov
pop
and
xor
cwtl
xchg
leave
scas
and
lcall
lcall
movsl
xor
adc
sub
sbb
in
xor
imul
int3
jecxz
sub
push
jmp
ljmp
addb
or
adcl
inc
test
pop
out
aaa
xchg
cmp
sub
ljmp
or
je
pop
add
fs
sti
jle
pop
dec
xor
pushf
jl
jmp
inc
pop
adc
sbb
loopne
jp
nop
mov
sti
add
mov
xchg
inc
cmp
adc
mov
les
pop
xchg
sub
cmp
jp
inc
mov
mov
add
int3
inc
out
mov
mov
or
lea
movsl
jo
push
out
cmp
add
roll
cmp
movsl
in
out
dec
outsb
aam
mov
imul
push
push
jmp
addb
lahf
fstp
inc
sbb
test
js
hlt
mov
cmpsb
rcrl
mov
stc
or
xor
push
test
pop
inc
andl
rep
fistl
in
cmp
imul
pop
stc
mov
cwtl
in
ljmp
in
fs
mov
scas
lea
movsb
xchg
mov
iret
or
dec
push
lret
adc
adc
jns
in
and
mov
test
jb
add
js
icebp
addl
lcall
popf
mov
sbb
xor
jle
push
push
ljmp
mov
imul
jmp
cld
ss
sbb
inc
fisttps
stc
fstl
pop
mov
dec
cmc
and
dec
outsl
ljmp
sub
leave
je
mov
or
popf
mov
dec
call
pop
shl
ret
adc
cmp
and
sbb
inc
adc
repnz
push
jge
pop
jo
push
lret
dec
xor
les
sbbb
mov
pop
lahf
jp
mov
ds
inc
mov
mov
filds
dec
out
inc
scas
adc
rcll
mov
push
into
dec
cmpsb
push
sbb
fcmovb
repz
mov
std
sti
aas
inc
add
xor
rol
pop
cmp
dec
cmc
xlat
sub
and
aad
test
ss
comiss
insl
into
int
push
xor
lds
mov
test
pop
popf
xlat
push
mov
and
rcl
push
rcrl
int3
and
je
incl
lods
es
out
mov
out
out
decl
enter
fcmovnu
push
mov
cli
xchg
dec
inc
push
xlat
into
aas
rolb
push
push
aaa
iret
insl
cmp
sarl
or
ret
les
lock
scas
imul
mov
cltd
pop
loopne
sbb
lret
outsl
cmc
cmp
sbbb
jae
aad
jbe
icebp
rclb
enter
call
popf
shll
adc
out
pop
pop
cmp
sub
fstl
adc
or
push
push
or
aam
aas
sar
mov
pop
push
dec
lock
inc
jmp
mov
loop
insb
lods
sbb
xchg
stos
add
add
and
subb
mov
cli
inc
loop
mov
lea
ljmp
data16
cmp
scas
cmc
popa
push
ds
ja
cli
dec
jno
mov
call
ja
mov
adc
mov
add
inc
mov
add
out
lret
jbe
mov
sub
bound
jns
push
sbb
stos
inc
pop
xchg
cmpsl
mov
or
xor
insb
movsb
in
mov
aas
sbb
mov
test
sbb
enter
stos
inc
daa
hlt
aad
pop
scas
fsubrs
mov
inc
outsb
dec
xor
or
and
mov
xchg
xchg
cli
aad
addr16
ljmp
aam
pop
repnz
mov
dec
xchg
inc
ret
cltd
jns
jae
pop
jbe
aas
mov
xchg
sahf
push
mov
mov
mov
add
fwait
or
xchg
dec
cmp
jge
sub
fsts
lret
idivb
adc
xor
cmp
data16
cmp
xchg
cmpsb
je
jmp
ljmp
adc
ljmp
jns
cmpsl
fcomps
jg
popa
pop
adc
push
arpl
test
daa
add
jns
add
or
sbb
push
fstps
push
or
loop
xlat
decl
xor
lret
movsl
movsl
xchg
ret
bound
sub
xchg
pop
or
and
mov
jecxz
loop
dec
mov
and
fists
jmp
lahf
inc
jo
jne
or
movsb
hlt
mov
mov
lret
ret
sub
sub
nop
mov
adc
leave
call
je
inc
arpl
leave
jmp
adc
push
push
mov
adc
xchg
push
or
mov
push
sub
imul
mov
xor
push
lea
inc
movsb
rorl
dec
inc
ret
dec
repnz
test
push
iret
xchg
jmp
push
daa
daa
in
fldl
xor
jp
fisubrs
dec
inc
sub
mov
sbb
cmp
insb
sub
movb
sub
cli
and
adc
push
aaa
test
and
inc
add
in
movsb
mov
xchg
push
enter
insl
xor
dec
jl
push
xchg
add
jg
mov
aas
add
test
dec
sbb
cld
psubsb
sub
jmp
movsb
mov
scas
sbb
add
insb
mov
mov
add
rclb
mov
xchg
pop
push
or
pop
push
xchg
xchg
adc
in
dec
push
cli
and
xor
mov
icebp
and
cwtl
ret
bound
fstl
adc
cs
adc
cmp
xchg
rcll
cmp
xlat
fisubrl
adc
or
push
sbb
test
fucomip
or
fisttpll
punpckldq
pushf
rolb
cmp
fisttps
cld
mov
sbb
movsl
notb
in
mov
dec
cmp
sbbb
sbb
adc
inc
lret
orb
stos
mov
and
xchg
outsl
pop
loope
scas
mulb
ss
dec
mov
psubq
dec
sub
mov
push
adc
mov
addb
andb
xchg
push
push
push
or
pop
ja
pop
fnstenv
jnp
sub
push
das
pop
mov
mov
push
pop
daa
arpl
nop
jo
cltd
jo
mov
or
cmpsl
xor
ret
test
pop
fnsave
mov
ss
or
scas
or
fimuls
repz
cwtl
dec
insl
mov
sub
cmpsb
jns
add
sub
push
xor
lock
data16
neg
add
sub
mov
xchg
lods
jmp
movsl
shl
sbb
add
add
outsl
jg
xchg
jg
ja
call
xor
rorl
add
fistps
xlat
gs
enter
inc
sbb
push
jecxz
clc
daa
or
or
xchg
xchg
cli
fwait
dec
fcompl
mov
movsl
stos
push
jl
fisubl
mov
sysenter
pop
pusha
lds
xlat
stc
inc
mov
add
clc
push
push
jae
fsubl
or
xlat
rcrb
sub
sbb
fldl
push
and
popf
cmpl
outsb
or
pop
pop
movsl
pushf
lcall
into
or
sarl
call
cmp
xchg
mov
in
dec
std
mov
sbb
or
xchg
mov
jmp
pop
out
mov
mov
push
cld
ret
mov
sub
adc
sbb
sbb
push
dec
cmpsb
aas
or
lret
sub
jae
sbb
mov
movsb
jp
push
mov
lcall
in
lahf
test
jno
mov
mov
mov
mov
sub
ret
push
push
mov
inc
jae
or
mov
mov
mov
add
sub
dec
mov
jne
cmp
inc
mov
mov
insl
insl
mov
mov
aas
lds
cmpb
cmp
mov
hlt
pusha
repnz
inc
sarl
adc
sub
push
loop
jmp
repz
mov
faddl
arpl
mov
push
push
push
sbb
cwtl
inc
push
jb
lock
push
dec
cs
sub
test
inc
out
dec
addr16
sbb
mov
push
jo
pop
adc
lahf
leave
call
into
jmp
mov
fistpll
shlb
sbb
push
sbb
sbb
push
out
dec
dec
sbbl
pmulhuw
inc
scas
pushf
add
arpl
test
pushf
adc
pop
push
add
and
jb
and
outsl
and
data16
cmc
movb
inc
push
lcall
push
aas
movsl
out
inc
loop
inc
xchg
dec
mov
roll
jge
jnp
sbb
sbb
bound
sub
mov
xor
fld
jae
leave
pop
das
and
out
mov
cwtl
stc
insl
js
fwait
adc
aam
sbbl
add
mov
push
mov
xchg
loop
fwait
loope
and
pushf
jbe
sub
push
add
xchg
xor
add
adc
xor
inc
xchg
iret
jmp
mov
add
pop
scas
push
adc
fstpt
mov
cltd
add
nop
movsl
shll
pop
mov
ja
jp
leave
mov
loop
fcoml
or
cmp
inc
cli
pop
enter
adc
push
hlt
in
mov
fnstenv
jg
inc
add
sub
js
adc
bound
add
xor
shrb
xchg
sbb
mov
jne
cmp
dec
cmp
sub
fnstenv
push
rcll
stos
jmp
xchg
jbe
movsl
mov
jmp
mov
stos
cmp
shl
xchg
and
mov
shll
jo
push
cmp
mov
sub
das
lock
mov
add
add
mov
xor
out
loop
push
fsubrs
dec
pop
mov
mov
xchg
stos
adc
push
lret
add
mov
xchg
jl
sbb
hlt
or
mov
stos
pop
lret
aam
mov
fstp
xchg
sub
mov
xchg
or
push
orl
xlat
jecxz
pop
jbe
sub
sub
mov
je
into
cmp
inc
ja
out
cmp
push
out
mov
mov
popl
cmp
or
jnp
and
ds
cmc
hlt
daa
in
les
mov
mov
add
or
sbb
gs
push
xor
add
jns
clc
adc
bnd
lods
stos
or
je
jg
cmpsl
jne
mov
movsl
mov
inc
jns
fneni(8087
sbb
push
push
dec
mov
push
iret
jg
push
pop
or
adc
pop
out
ret
add
fimuls
jb
jl
xor
shl
jge,pt
push
mov
roll
add
mov
out
jl
in
aad
clc
jecxz
pop
push
and
test
in
das
jecxz
adc
aaa
scas
jge
cmp
or
mov
sbb
xor
jmp
mov
inc
jl
test
jae
fisttpl
std
cmpsl
je
push
cmp
mov
mov
pop
aaa
jns
stos
xor
shlb
addr16
lret
ljmp
add
jp
dec
dec
mov
mov
inc
cmpsb
loopne
push
adc
clc
xor
xchg
jbe
mov
push
scas
add
and
add
fwait
shrl
call
js
lret
fbstp
sub
and
movsb
sti
add
in
xor
fsub
jne
sub
ljmp
or
mov
pop
jle
push
cmp
cmpsb
push
out
gs
test
add
mov
mov
icebp
xor
shll
mov
or
xor
sub
movsl
in
cmp
repnz
jecxz
dec
cmp
je
jge
out
jno
fwait
jp
jae
mov
and
bound
dec
enter
adc
inc
pop
test
stc
test
out
sub
dec
clc
mov
into
push
divl
mov
pushf
mov
mov
cmp
scas
lock
in
mov
fmuls
sub
lods
ss
aaa
cmp
pop
iret
cltd
inc
arpl
push
loope
mov
mov
daa
outsb
mov
mov
nop
jbe
insb
push
addr16
cmp
aas
push
mov
inc
and
arpl
stos
add
imul
int
int3
xchg
jg
roll
mov
gs
xchg
push
ja
dec
inc
xchg
add
ds
and
ror
xor
popf
movsb
sub
mov
cmp
adc
mov
mov
mov
xchg
fcmove
nop
mov
bound
jge
xor
pop
push
cmpsl
iret
notb
push
cmpsb
call
addr16
js
xor
mov
dec
dec
jne
mov
or
sub
mov
adc
mov
fstpt
adc
inc
in
shr
lcall
cmp
ret
fcomps
or
loopne
and
shl
pop
mov
arpl
push
pop
dec
jl
xor
dec
ss
add
cmpl
mov
inc
xchg
std
es
ficoml
stos
lods
imul
daa
sbb
mov
xor
rclb
mov
out
in
cmp
ficoms
cmp
xchg
sbb
les
call
fs
jecxz
aad
lds
das
push
cmpsl
dec
orb
es
aam
or
in
adc
loop
jnp
add
inc
ss
es
sbb
ss
pop
xchg
fwait
or
mov
clc
sti
mov
pop
insl
cwtl
mov
out
xor
insb
orb
pusha
icebp
mov
push
sbb
lods
fimull
jne
jmp
scas
fs
pop
icebp
mov
xchg
fimuls
add
jno
sbb
cmp
imul
sti
aas
cmpsl
add
or
pushf
lahf
add
mov
xchg
icebp
mov
or
int
lret
jae
add
sbb
push
scas
cmp
push
pop
movsb
fldenv
imul
add
jns
xchg
mov
aam
or
stos
xor
loope
pop
clc
jmp
xlat
cmc
jbe
ret
icebp
mov
imul
and
add
loopne
jle
cmp
cli
adc
xchg
mov
push
xor
int3
and
mov
out
lds
jnp
aad
mov
out
sti
inc
adc
call
es
mov
test
outsl
push
shrb
pop
in
mov
inc
sbb
inc
jnp
mov
ljmp
dec
stos
inc
les
cmp
dec
mov
int3
stc
mov
cs
jle
ja
shll
xchg
mov
test
pop
fists
and
xchg
inc
jl
pextrw
mov
in
cmp
lcall
shl
or
ss
jmp
mov
mov
jecxz
push
xchg
jecxz
adc
or
and
mov
stc
dec
nop
or
pop
ljmp
rclb
cmpl
inc
push
pop
add
imul
stos
loopne
addr16
inc
cmpsl
cmp
or
jle
xor
cld
clc
jg
clc
ss
jp
add
js
pop
add
andb
ss
cmp
push
loop
sbb
scas
lret
negl
or
jae
sbb
fwait
pop
ja
psrad
inc
popf
or
lock
pusha
pop
rcrb
lock
mov
or
pop
stc
cmp
inc
mov
sbbb
cwtl
dec
or
in
mov
nop
pop
sub
addl
mov
pop
movb
mov
dec
mov
aad
outsl
push
add
or
xchg
sub
sti
mov
jge
ret
inc
xchg
test
jb
dec
out
in
scas
lock
sti
roll
dec
test
adc
push
pop
test
push
pop
or
or
lret
sbb
xor
xchg
lds
sbb
adc
out
cmp
mov
cli
xor
adc
je
inc
xor
movl
and
sbb
imul
icebp
gs
aas
cli
scas
in
mov
sbb
mov
mov
cltd
mov
sti
in
sub
lds
loope
popa
js
lods
xchg
ficomps
jl
pop
and
or
cmp
adcb
dec
shlb
call
aad
or
stc
jno
pusha
int3
test
lods
adc
mov
xchg
pop
mov
dec
sub
mov
hlt
aaa
movsl
pusha
inc
cmpsb
lods
cmp
iret
fs
test
jns
das
out
inc
sbb
inc
fildl
jbe
psrad
subb
xor
add
mov
jnp
add
cmc
adc
add
jns
cmp
jg
in
rorl
and
cld
mov
outsl
xchg
add
jb
out
insb
jbe
fistps
repnz
jge
cli
push
sarl
push
mov
inc
in
bnd
cld
mov
add
mov
mov
or
and
insb
adc
les
xchg
loop
test
pop
imul
test
adc
out
mov
mov
or
sub
fs
insl
jne
mov
push
xor
loop
pop
ljmp
pop
loopne
mov
outsl
xchg
sub
mov
or
sbb
int3
fwait
loopne
in
ficompl
xchg
je
ds
and
into
sbb
lock
dec
shrb
xor
adcb
ss
ss
mov
xchg
std
sbb
add
pusha
ret
jecxz
jge
ret
das
or
xchg
imul
pop
xchg
xor
sti
push
cmp
aas
pop
push
adc
xor
jge
mov
and
inc
xor
push
mov
mov
push
rclb
add
fdiv
and
inc
mov
adc
sbb
jns
mov
shl
out
in
idiv
and
mov
or
sub
imul
mov
xor
cltd
popf
or
loope
popf
pop
pop
inc
sar
push
mov
pusha
mov
fsts
jle
jl
sbb
cmc
fdivrl
sbb
call
sbb
add
sub
cmpsb
lea
push
jecxz
sahf
push
dec
sahf
mov
jae
inc
push
xor
idivl
jns
jmp
mov
pop
addr16
and
xor
cmp
mov
loop
stos
inc
insl
bound
dec
xchg
xchg
aas
mov
cwtl
jmp
pop
inc
and
leave
mov
and
pop
pop
sarb
mov
xchg
mov
xor
pusha
lods
push
push
push
mov
adc
cmp
addr16
cwtl
addr16
pop
aaa
sub
dec
aam
jno
mov
push
mov
pop
adc
jno
xlat
xor
xchg
pop
lods
jae
insl
aaa
in
mov
lcall
shrb
repz
push
jbe
std
loope
push
push
xchg
dec
xorl
aam
lret
push
add
test
push
add
push
jae
lds
scas
sbb
inc
inc
adc
and
cmp
sahf
ret
inc
enter
xchg
mov
jecxz
movsl
rcr
ret
dec
mov
fstp
rcl
add
stos
xchg
push
imul
or
pushf
sbb
lret
mov
push
sbb
adc
pop
movsb
pop
mov
cmp
mov
push
sub
into
mov
stos
xor
mov
pop
nop
dec
in
dec
mov
xchg
adc
hlt
and
sbb
stos
ja
inc
pop
js
shll
mov
int3
dec
cmpb
cmpsb
push
push
aam
icebp
adc
sub
lock
dec
sbb
mov
rcrl
lahf
mov
adc
test
push
push
les
or
aad
shll
and
jle
jae
iret
insl
lret
bound
stos
pop
or
lcall
jge
outsl
cmpsl
das
sarl
shrb
add
enter
dec
fxch
pop
jo
fldcw
pop
test
sub
movsb
daa
pop
mov
xchg
cmp
sbb
adc
cwtl
adcb
mov
clc
push
sbb
int
dec
dec
mov
outsb
pop
mov
push
adc
xchg
mov
mov
cmp
jge
icebp
inc
xlat
outsl
push
mov
adc
jmp
mov
je
cwtl
push
pop
inc
enter
lea
outsb
mov
inc
fisubs
mov
fwait
cmpsb
and
xchg
adc
ret
stos
mov
outsb
mov
push
sbb
ror
ljmp
cwtl
cmpl
dec
adc
xor
clc
mov
nop
lret
push
stos
fiadds
mov
sti
mov
xchg
lods
into
aam
aad
test
mov
jns
std
idiv
add
or
loopne
mov
fwait
cmp
lods
out
jl
fnstcw
mov
lret
out
mov
pop
mov
popa
andb
in
sub
pop
loopne
insb
xlat
rclb
div
in
popf
mov
xor
stos
in
and
dec
xor
pop
fstpl
mov
mov
testb
fwait
or
lret
mov
enter
xor
mov
mov
addl
pop
mov
jecxz
in
shr
push
xlat
xchg
shrl
pop
daa
add
sub
mov
and
cmp
loopne
aas
jmp
mov
cltd
adc
jmp
sbbl
movsl
push
in
pop
xlat
mov
arpl
jmp
test
andps
cmp
push
xchg
jb
outsl
call
inc
push
push
ss
lock
jp
sub
cld
aas
push
popf
xor
mov
mov
and
adc
pop
sub
mov
cmp
pop
imul
mov
lret
and
test
int
stos
push
sbb
push
adc
dec
popf
outsb
shlb
test
mov
inc
ja
mov
or
ja
jl
test
icebp
mov
mov
les
push
xlat
push
jp
mov
movsb
ret
enter
jnp
rorb
cmp
xchg
jp
nop
in
and
mov
cmc
clc
inc
inc
sbb
cmc
cmp
xchg
inc
inc
jp
iret
mov
lds
aaa
fadds
popa
fisttpll
bound
adc
orl
repz
jno
push
push
fidivrl
mov
jno
scas
jne
dec
push
lret
ffreep
cmp
push
fisubl
cltd
outsl
ret
push
or
push
pop
cltd
jp
test
push
imul
pop
mov
daa
mov
imul
xor
ret
call
adc
shrl
inc
imull
sbb
add
jbe
pop
inc
loop
bswap
and
and
push
cmpsb
xchg
xlat
shlb
pop
mov
or
arpl
popf
push
stos
fdivs
dec
packuswb
fisubrl
es
push
and
dec
imul
sub
push
mov
mov
popa
xchg
aaa
inc
aam
sbb
and
xor
pusha
lret
jnp
or
adc
icebp
data16
std
mov
stos
inc
xchg
dec
repz
mov
es
decl
jmp
rclb
imull
cmp
imul
xchg
sub
pushf
lea
push
outsl
inc
repnz
add
sbb
mov
ret
or
xchg
sbb
pop
pushf
ja
int3
sub
cmp
ret
and
xchg
jle
xchg
sub
sub
mov
int3
jno
hlt
jmp
fidivs
and
jae
mov
out
popf
cs
cmp
cmp
jecxz
fdivl
mov
push
xchg
mov
dec
mov
and
mov
inc
mov
outsb
xchg
pop
add
and
pop
adc
shlb
pop
xor
fwait
movsb
scas
dec
les
lock
mov
ljmp
adc
xchg
adc
lock
aas
xlat
push
shrl
movsb
lret
insb
sti
addl
shrl
jg
push
mov
out
popf
decl
cmp
xor
xor
and
rcl
add
pop
dec
lcall
push
lds
mov
loop
pop
pop
jo
test
movsl
in
jne
in
mov
loopne
fimuls
jns
in
arpl
nop
xchg
movsl
add
pop
lret
enter
sbb
fcomps
add
icebp
add
into
aam
or
popa
ds
shrl
pop
add
lret
clc
cltd
add
enter
xchg
call
loop
jno
lods
mov
xor
or
mov
jnp
mov
pop
jecxz
test
xchg
xor
mov
popf
fs
outsl
sti
rcrl
shr
mov
fidivrs
fidivrs
cli
jae
jne
xor
push
sbb
add
out
jno
inc
ss
jne
leave
pop
fmuls
es
ja
clc
stc
dec
adc
jg
mov
movsb
mov
sbb
xchg
jmp
jecxz
jl
call
shlb
xchg
je
dec
jge
aad
jp
fbld
cwtl
sbb
in
push
cmp
mov
jbe
xorl
icebp
mov
mov
jns
divl
cmpsl
and
lea
ret
pop
mov
push
jle
xor
pop
jae
mov
xor
cmp
sbb
rcrb
jns
arpl
insb
sub
mov
push
ds
out
insb
push
sti
fcomps
out
cs
fsubrl
mov
nop
and
in
test
add
xchg
push
test
inc
aad
adc
rcl
lock
pop
loope
loopne
dec
push
lret
iret
shlb
int3
dec
add
rol
dec
sti
into
int3
jg
mov
lock
test
and
sub
jmp
add
push
or
aam
sbb
aas
out
hlt
pop
or
mov
xor
and
mov
mov
pop
inc
mov
data16
cmp
leave
lret
adc
cmpb
std
and
insl
mov
test
loop
xor
or
std
mov
pop
mov
in
data16
insl
es
xchg
mov
orb
enter
push
sbb
jb
out
pop
push
mov
clc
adc
lret
lret
shrl
xchg
sub
jnp
sub
jno
lcall
mov
fs
mov
xlat
cmp
pop
jecxz
mov
andl
push
sub
aad
jne
sbb
call
sti
xor
lret
sarl
cmp
inc
cmp
pushl
mov
imul
imul
pop
cmp
mov
sahf
stos
cmpsl
sub
ret
push
pop
insb
addb
mov
outsl
movsl
cmp
pop
and
add
push
push
xor
rcr
push
lahf
lcall
jbe
add
inc
xlat
add
sub
addr16
ret
push
xor
mov
lock
mov
popa
xor
cmpsl
dec
sbb
aad
jne
pop
inc
sub
xchg
mov
out
mov
dec
sub
into
push
and
adcb
xchg
or
pushf
cmp
and
int3
iret
dec
push
ja
cltd
into
pusha
mov
lea
cmpsl
fdivl
sbb
sahf
rolb
aas
test
xchg
movsl
adc
test
inc
sub
jno
icebp
pop
in
stc
sbb
jge
idivl
pop
popa
test
mov
xchg
mov
xrelease
jmp
sbb
adc
outsb
jno
fwait
lahf
sbb
scas
or
mov
arpl
push
ja
cmp
imul
mov
pop
cmp
sub
mov
jl
sub
cmp
cmpsl
xchg
add
mov
jb
dec
addr16
jle
and
adc
lods
cld
mov
xor
das
aad
pop
xlat
in
adc
mov
insl
test
pop
aam
rorb
test
sti
ss
sub
add
cwtl
xor
xor
dec
lods
pop
mov
jmp
pop
hlt
js
in
movsl
jmp
cltd
and
popf
cmc
add
sub
jecxz
jmp
js
ds
jne
cmpsb
mov
jmp
xchg
movsl
mov
mov
int
mov
bound
loop
sahf
outsb
add
push
adc
in
clc
ds
icebp
xchg
mov
and
pusha
xchg
jno
inc
cmp
jnp
and
inc
mov
xchg
pop
and
jne
push
jb
mov
mov
shlb
mov
xchg
ret
das
icebp
jp
sbb
stos
out
mov
inc
pop
sbb
and
addr16
jo
jbe
insb
pusha
and
jmp
imul
sbb
icebp
jg
in
adc
xchg
movsl
cmpl
out
mov
adc
je
cmp
aad
cwtl
mov
leave
addr16
unpckhps
ja
dec
ficoml
or
inc
push
mov
push
xchg
and
or
pop
in
mov
dec
cmp
outsb
fbstp
out
inc
out
mov
cmp
jbe
shrl
cmp
adc
adc
stos
pop
xor
je
xchg
pop
and
rcrb
lahf
mov
adc
mov
pusha
enter
inc
inc
andb
xorb
gs
mov
xor
clc
mov
mov
ss
dec
gs
mov
push
mov
enter
and
outsl
scas
push
or
jge
lea
in
xchg
test
stos
in
jg
ljmp
mov
out
push
add
cmp
shll
fucomp
push
jg
adc
pop
ret
insl
test
ja
aad
xchg
lret
shlb
mov
mov
in
inc
lods
mov
scas
scas
cmp
stc
mov
xlat
cmp
push
fsub
push
sub
js
jle
jbe
aad
push
dec
pop
test
jmp
or
cltd
push
test
add
cmp
jb
adc
ljmp
sub
clc
or
xor
in
lret
out
lahf
jp
popa
push
push
inc
adc
push
stc
jl
jle
xchg
movsl
mov
mov
fwait
fcmovnu
arpl
xor
lret
sub
orl
adc
imul
jno
loope
lock
hlt
cwtl
push
out
push
and
lret
hlt
fiadds
outsl
in
add
dec
mov
push
pop
roll
add
xchg
pop
cld
testl
sbb
xor
imul
ds
adc
je
mov
add
dec
jmp
in
jne
scas
jne
adc
es
into
sarl
pop
mov
insl
pop
popaw
or
inc
lret
mov
sub
cltd
and
inc
int3
mov
lods
dec
sub
jnp
imul
jp
lcall
dec
hlt
out
je
xchg
out
mov
mov
sub
lods
popf
dec
repz
push
mov
dec
cmp
in
outsb
sbb
dec
xchg
fs
xchg
sti
ret
and
xor
je
out
cmp
and
dec
cmp
enter
lds
cmpsb
out
dec
xor
xor
jno
adc
rcll
rclb
adc
mov
lahf
mov
mov
gs
out
or
jb
push
sub
mov
add
or
lahf
inc
jb
cmp
sub
sbb
xor
or
iret
pushf
push
daa
lret
rcr
jne
addb
fwait
and
popf
push
xor
roll
xchg
push
cmp
inc
jmp
and
add
inc
cmp
idiv
dec
lds
push
lret
sub
outsb
push
out
testl
jne
scas
jmp
inc
xchg
mov
add
stc
daa
leave
push
mov
xor
adc
fimuls
jns
ret
push
mov
add
mov
in
inc
pop
pusha
data16
push
insl
mov
pop
in
mov
fiaddl
pop
sti
jne
and
mov
fdiv
cmc
cmp
add
addb
or
sub
adc
lcall
imul
std
je
test
mov
add
mov
movsl
xchg
outsb
push
inc
cmp
lods
cmpsb
out
lock
sub
lock
lock
repnz
sbb
fstpl
insb
sbb
jp
adc
xchg
leave
enter
pop
dec
fsubrs
mov
insl
cmpsb
push
sub
inc
pop
fstpt
lock
mov
xchg
pop
inc
mov
popa
sbb
popa
xchg
cltd
sub
stos
and
sbb
ret
sub
jle
xor
popf
inc
jmp
shlb
dec
xor
xchg
cmp
push
dec
jae
xchg
xor
add
mov
int3
mov
mov
and
mov
jns
inc
mov
xchg
jg
sub
xchg
fldl
cmp
enter
out
lock
mov
enter
in
movsb
mov
imul
xor
inc
fwait
outsl
add
mov
rcr
inc
dec
xlat
mov
mov
pop
fcom
xlat
test
lahf
jg
mov
jo
unpcklps
repz
sub
cld
insl
pop
and
sbb
dec
jb
and
or
xor
test
cmp
adc
cltd
pop
jne
jmp
add
shl
cmc
push
sub
loope
int3
cwtl
call
push
push
push
xor
popf
sub
cmp
mov
fdivrs
mov
push
jle
jno
or
inc
rcr
int
jne
mov
pop
daa
push
mov
cmpsl
adc
hlt
dec
lods
and
mov
idivb
or
iret
inc
popf
cmpl
setno
inc
sbb
mov
inc
loopne
adcl
in
or
fnsave
push
mov
sub
or
ret
ret
sub
daa
and
xchg
icebp
scas
xor
sbb
cwtl
es
repz
cltd
push
push
dec
in
or
sahf
xor
in
cmp
jmp
scas
cld
cmc
ret
ret
mov
jns
hlt
dec
adc
dec
mov
sbb
pop
jg
cli
cmp
fs
clc
lret
cmc
cmc
aas
pop
mov
loopne
scas
decb
enter
stos
xchg
inc
clc
jne
or
rcrl
insb
aam
or
and
mull
hlt
insl
sub
movsb
ss
leave
push
xor
leave
subb
push
into
sbb
jbe
pop
stc
dec
ljmp
push
pop
push
mov
xor
push
mov
push
adc
push
lret
pop
aas
insb
push
pop
repz
jmp
mov
or
sub
or
or
ret
imull
loopne
mov
sub
stos
icebp
xchg
cmp
mov
lret
dec
jnp
adc
sub
cmp
sbb
incb
sbb
sbb
jno
jne
jnp
test
dec
or
pop
xchg
mov
insb
mov
test
inc
rcll
inc
fbstp
inc
subb
jmp
xor
gs
xchg
nop
adc
repz
iret
and
stos
rolb
jbe,pt
xchg
mov
roll
dec
cmp
dec
inc
jle
jns
aaa
ret
pop
push
int3
dec
pop
cmp
jecxz
mov
movsl
pop
dec
test
ss
hlt
dec
lods
popf
rcrl
sarb
sub
enter
test
jg
repz
scas
push
pop
sub
and
ret
out
sahf
enter
and
int3
jmp
rcr
add
mov
xchg
cmc
add
aad
mov
fcoms
sub
jnp
and
into
mov
cltd
mov
adc
shrb
andl
into
rcll
bound
pushf
add
icebp
aas
imul
aaa
pop
lds
dec
cmc
dec
test
sbb
adc
fwait
inc
cmp
ret
fwait
aad
xlat
shrl
int
inc
mov
cmpsl
rcr
mov
dec
xchg
xchg
enter
aaa
test
xor
and
int
push
xlat
lret
and
leave
lcall
and
mov
imul
insb
inc
pushf
out
xor
sbb
cmp
cmp
mov
xchg
or
popa
daa
jge
adc
fs
cmpb
cmp
mov
pusha
sub
push
pop
mov
gs
xor
je
aas
sbb
push
pushl
insb
and
fcoms
mov
mov
lds
out
jecxz
sbb
pop
repnz
jns
bound
pop
mov
sub
add
cltd
cmp
inc
lods
mov
lcall
loopne
pop
mov
sub
jp
push
ja
push
outsl
das
filds
lret
jmp
fs
jno
push
cmp
adc
xor
xchg
mov
pusha
sbb
add
leave
iret
lods
sub
sbb
jecxz
popl
push
je
lods
lcall
xor
dec
lret
cwtl
shl
xor
sbb
pop
ljmp
shl
cmpsl
inc
mul
push
or
mov
pop
ljmp
popa
imul
leave
test
lea
push
rorl
pop
call
fstps
pop
inc
stos
jbe
cmpsl
insb
in
jg
orl
loopne
std
jg
aad
iret
fcmovnb
push
aam
iret
fstpl
jmp
loopne
scas
cmp
dec
outsb
lcall
dec
jmp
inc
mov
mov
inc
cs
cmp
imul
inc
mov
aas
lock
test
xchg
mov
sub
cmp
scas
mov
std
mov
aad
addr16
hlt
adc
sub
repnz
push
cwtl
jns
pop
jp
std
dec
scas
enter
call
jo
mov
lahf
lods
xchg
inc
jb
int
shlb
adc
ja
loopne
xchg
or
bound
sbb
mov
and
mov
sbb
mov
testb
pop
or
dec
outsb
sbb
fisubs
jl
inc
fildl
pop
fstl
aad
dec
movsb
ret
jp
out
push
inc
jl
adc
lret
sbb
fcmovnbe
test
fstpt
insb
arpl
pop
stc
jo
cmpsb
adc
pop
xor
ss
ja
gs
push
and
xchg
pop
sub
addr16
xlat
call
loop
je
scas
mov
inc
xchg
or
dec
insl
cmpsb
jg
pop
or
jo
adcb
jl
sub
pop
movsb
scas
xchg
hlt
mov
subb
out
inc
xchg
paddb
xchg
ja
in
test
xchg
inc
mov
xchg
and
or
rolb
push
push
xor
adc
pusha
push
movd
cltd
push
adcl
add
sbb
cmpsb
test
mov
and
mov
adc
dec
mov
in
xchg
cmp
out
lea
lea
scas
pop
pop
pop
out
mov
scas
xorl
sub
dec
jbe
mov
xchg
xchg
inc
xor
iret
xchg
dec
add
out
inc
test
push
pop
cwtl
and
fisttpll
imul
jbe
icebp
jns
pop
jb
dec
sbb
hlt
mov
push
sub
jle
cmc
push
xchg
incl
and
andl
cmpsb
inc
stos
mov
test
xor
imul
filds
out
push
pop
jl
imul
fadds
xor
inc
cmp
fistpl
cmp
cmp
mov
cmp
out
fwait
mov
cmp
push
xor
mov
xor
or
idiv
js
stc
xchg
mov
insb
dec
jnp
xor
xor
and
outsb
push
mull
xchg
lock
dec
popa
and
cmpsb
pop
movl
mov
enter
dec
dec
xor
int
add
nop
movsb
lods
xchg
cmp
mov
addr16
pop
dec
sahf
addr16
and
jl
sti
adc
or
sub
inc
jns
lea
lahf
add
ljmp
movsl
cld
mov
pusha
pop
icebp
xor
orb
mov
outsb
xchg
stc
dec
mov
popa
stos
fdivs
and
popa
gs
lock
aam
push
sbb
add
loop
fsubs
push
mov
cmp
jbe
push
aam
mov
inc
repnz
into
imul
xchg
mov
aas
stos
mov
gs
arpl
subl
mov
pop
in
addr16
xor
cli
ljmp
cs
cmpsl
xchg
shr
sub
pushf
jno
inc
lcall
fisubrl
cwtl
xchg
stos
cmp
add
addr16
pop
icebp
mov
jge
cs
das
jge
shrl
mov
pop
test
in
push
add
push
mov
dec
fwait
lods
xchg
cmc
shrb
lock
inc
push
jg
iret
nop
hlt
rolb
cmp
xchg
pop
flds
sbb
cmp
and
cs
dec
inc
xchg
cmp
lods
dec
out
repz
pop
or
jns
add
mov
cmp
adc
stos
lea
call
and
dec
imul
mov
imul
in
div
cmpsl
data16
pop
xchg
cwtl
lds
lods
jp
push
shlb
mov
xchg
orl
imul
adc
push
add
fildll
dec
pop
loopne,pt
dec
xchg
mov
in
out
iret
and
outsb
addl
leave
xlat
xchg
mov
sub
mov
repz
mov
add
roll
jae
inc
mov
loopne
jg
cmc
push
and
and
jge
ficoms
addr16
fnsave
pop
lock
dec
bound
insl
fs
jg
sbb
stc
push
jge
std
push
repz
cmp
call
xor
lods
push
out
loop
jno
mov
push
aas
jns
dec
sti
roll
xor
jb
pop
xchg
sbb
mov
dec
mov
fcomps
and
xlat
sub
pop
hlt
push
ret
jecxz
xor
sbb
sbb
aaa
pop
mov
cmc
hlt
addr16
les
sbb
inc
or
mov
mov
add
mov
adc
add
in
push
test
dec
push
cmp
jle
sti
hlt
cld
ss
sbb
shrb
inc
xchg
mov
add
mov
iret
xchg
out
mov
mov
push
cmc
mov
push
shll
pop
inc
nop
or
fwait
xor
dec
lods
dec
pop
into
mov
lods
dec
inc
jns
lods
test
cltd
mov
imul
dec
cmpsl
push
sbb
ss
scas
ljmp
xor
push
popl
filds
scas
cmp
adc
aas
js
cmpl
mov
sarl
loope
mov
pushf
or
loop
and
js
cli
or
lret
jmp
pop
inc
mov
jnp
inc
sahf
clc
pop
divb
or
js
icebp
xchg
movsb
lea
sub
sub
add
les
adc
int3
sub
addr16
sahf
mov
mov
push
adc
je
add
loopne
es
and
sti
and
jl
sbb
jp
pop
fdivr
inc
pop
repz
inc
add
inc
ret
aam
mov
clc
xor
inc
insb
pop
sub
dec
insl
loope
push
and
scas
or
lahf
sub
sbbb
shrl
rol
dec
adc
inc
and
cmp
setno
inc
or
pop
jle
in
dec
retw
into
into
xor
fcmovnb
push
pop
fs
test
nop
ror
cmpsl
cs
jo
shll
sbb
push
std
ret
push
adc
sbb
jg
mov
daa
loopne
scas
mov
pop
daa
testb
xchg
faddp
sbb
jne
dec
ficompl
in
es
pop
xorb
xchg
out
xchg
sbb
xor
mov
jge
cmpsl
lods
fs
lock
push
in
jb
xor
mov
adc
lods
out
arpl
pop
sahf
jne
outsb
loopne
std
sub
xchg
jns
fsubrl
mov
fs
add
inc
xor
jns
dec
cs
xchg
pop
scas
dec
scas
stos
xchg
cs
sbb
addr16
lcall
loope
addr16
xor
jbe
call
or
repnz
fwait
and
aad
fwait
and
dec
bsr
fimuls
mov
dec
pop
push
mov
aaa
add
adc
std
subb
inc
aad
jno
pop
insl
pop
pop
jns
push
mov
sub
xchg
iret
pop
loopne
sub
sub
or
das
mov
cmp
cmp
mov
pop
cmpsb
out
arpl
mov
mov
or
inc
adc
mov
jne
jbe
js
mov
repnz
push
aaa
sbb
loop
aam
push
xchg
iret
pusha
sahf
cmp
cmp
mov
fildll
test
cmc
adc
stos
push
dec
fmul
loop
xchg
lret
sahf
popa
popf
xchg
inc
cmp
lahf
out
or
cmp
das
ret
out
rcr
outsb
pop
cltd
es
mov
lahf
xchg
xchg
sbb
lds
mov
jge,pn
pushf
adc
cmp
xor
pop
cmp
push
jecxz
xchg
mov
jmp
lret
and
aaa
stc
stos
pop
out
add
mov
test
xchg
es
add
ret
out
sub
sbb
push
ret
mov
data16
cli
int3
mov
aad
call
idivb
into
hlt
leave
sbb
jl
sub
sub
xor
jno
hlt
and
xchg
cmp
xchg
jns
add
pop
pop
adc
or
dec
inc
ljmp
jecxz
popa
scas
xchg
inc
fisubrl
shll
adc
pop
push
adc
pusha
jnp
das
sbb
and
pop
sub
stos
std
cmpsw
cltd
push
mov
mov
jl
dec
lahf
lahf
inc
sub
jne
mov
in
fcmovbe
xchg
sub
xor
pusha
lea
xchg
mov
fs
popa
fnstcw
mov
int3
into
xor
cmc
cltd
inc
insb
imul
push
pop
repz
jmp
sub
push
lcall
ret
cli
and
push
xor
imul
add
pop
jno
jno
mov
fisttps
push
cwtl
rorl
cmc
test
mov
pop
subb
jb
adc
dec
test
lods
aaa
repnz
sbb
outsl
jb
iret
push
loope
call
scas
lea
sbb
mov
jae
cmp
xor
mov
sbb
negl
shlb
outsl
or
rcrl
sbb
pop
xor
les
xchg
jecxz
insl
outsl
decl
mov
jmp
sbb
lret
ds
jl
mov
mov
cmp
jmp
pop
outsl
lea
and
or
lahf
lahf
test
xchg
cmpsb
and
sub
cwtl
adc
out
or
or
fstl
push
mov
add
push
mov
inc
aam
pop
je
cld
adc
scas
into
push
add
mov
sbb
or
dec
sbb
repnz
loope
mov
adc
mov
cmp
inc
xor
hlt
pop
negl
push
daa
jmp
or
mov
into
mov
push
ljmp
mov
stc
pop
push
xchg
cmp
xor
push
fistl
aas
sub
mov
jbe
cwtl
xor
jge
stos
lock
jmp
xchg
js
cwtd
dec
mov
bound
mov
bound
and
bound
ret
outsb
popf
mov
icebp
addl
sarl
les
push
cmp
mov
lods
es
and
pop
push
aad
inc
cs
xchg
mov
sbb
pop
jmp
sbb
cmp
lret
cmc
inc
adc
stos
pop
int3
pop
jo
fnstenv
cmp
dec
cmp
pop
mov
mov
js
out
mov
jo
add
push
jo
mov
pop
and
in
lea
jne
lods
cmp
push
negb
out
add
lods
fdivrl
jle
push
lret
pushf
cmpsl
into
stos
push
decb
dec
adc
je
addr16
icebp
jge
lret
std
movsl
sbb
push
ja
leave
cmp
iret
pushf
das
jmp
push
cmp
out
jmp
mov
addl
mov
sub
inc
add
les
mov
lahf
inc
add
mov
sarb
sub
or
xlat
fistpll
lea
imulb
mov
xchg
out
fwait
xchg
je
lea
sbb
push
mov
push
imul
test
inc
roll
enter
fsubl
pusha
dec
lock
rcrb
cmp
out
mov
or
xchg
cmp
mov
jecxz
pop
mov
cltd
pop
push
lock
cmpsl
jge
js
dec
or
lods
adc
xchg
push
mov
bound
int
or
adc
cli
stos
mov
mov
aaa
xchg
flds
jbe
fnsave
push
incl
sbb
and
stos
inc
mov
jo
jle
rcrb
push
cs
jge
jno
inc
mov
shll
sub
mov
aam
lret
sbb
sbb
ss
stos
testb
inc
outsl
pop
sub
mov
test
mov
push
shrl
movsb
cld
cmp
and
cmpb
lods
push
mov
fs
ja
pop
sub
sbb
fimull
sti
sahf
pop
push
stos
ds
dec
fldcw
mov
sbb
fcoml
dec
mov
xchg
and
and
inc
cmp
inc
mov
push
stos
pusha
pop
and
mov
fwait
jecxz
dec
shrb
or
mov
add
int
sbb
int
cmp
sbb
push
xor
into
leave
imull
dec
jl
jno
jmp
pop
mov
out
mov
jno
mov
test
insb
push
mov
and
jno
jmp
pop
ja
xchg
push
inc
mov
loope
jp
mov
orb
pop
dec
repz
daa
sahf
sbb
push
inc
ja
daa
cmp
jb
inc
test
mov
les
push
loopne
ja
mov
aaa
push
jae
push
xchg
in
mov
repnz
rorl
mov
xor
cmp
push
popl
scas
mov
mov
push
pop
inc
sbb
mov
jns
xor
mov
pop
xchg
std
or
aaa
pop
cmpsb
pop
xchg
mov
cmp
call
daa
pop
sbb
cld
test
push
les
mov
iret
adcb
adc
cmp
push
sub
sub
add
adc
cmp
jle
lds
mov
fpatan
cmp
in
mov
sbbl
push
sbb
mov
mov
in
pop
cmp
cmp
push
ret
and
cld
jl
pushf
adc
dec
rol
js
mov
adc
mov
pop
push
mov
addl
ret
mov
cmp
adc
and
mov
lea
int3
jge
jl
fbld
cli
xor
cmp
shlb
inc
inc
dec
add
xchg
and
in
add
pop
push
add
push
adc
push
and
push
flds
dec
adc
xchg
out
add
sbb
mov
enter
leave
push
push
mov
lds
and
test
cmc
adc
cmp
push
sub
push
or
xchg
xchg
sub
das
xor
dec
lcall
jne
cwtl
mov
mov
out
sbb
pop
or
sbbl
mov
call
bound
cmpsl
sub
popa
pop
int3
popa
cmp
and
negl
movsl
out
outsl
sti
mov
push
dec
frstor
inc
sbb
stos
cmpsb
test
jle
mov
movsb
ret
and
pop
loop
inc
pusha
std
fmull
dec
add
ss
in
cmp
dec
sbb
inc
inc
push
imul
inc
in
dec
mov
or
pusha
cmp
xchg
add
or
xor
int
notb
jne
dec
lahf
ds
dec
or
ret
fwait
cmp
fdivl
sub
out
popf
sbb
out
ss
push
test
add
xor
cmp
pop
mov
outsl
btc
push
sbb
xorl
push
inc
mov
dec
sub
sub
out
lcall
ja
push
out
inc
loop
mov
jge
and
cmp
dec
jb,pn
mov
sbb
aad
inc
daa
pop
mov
adc
fnstsw
xchg
mov
rolb
cmp
mov
cmp
mov
dec
inc
adc
inc
icebp
imul
je
inc
cmp
test
cmp
dec
mov
xchg
scas
test
cmpsl
mov
fs
pushf
mov
cltd
repz
push
add
push
sub
cmp
or
pusha
xor
push
iret
cmc
mov
mov
xor
adc
aam
mov
sbb
ret
pop
and
xchg
bound
pop
add
sub
cmp
mov
gs
jno
jmp
and
dec
rolb
dec
pop
xchg
insb
and
hlt
xchg
outsb
sbb
dec
inc
mov
not
mov
fsubl
dec
xchg
mov
call
in
xchg
movsb
sahf
inc
push
cmp
jo
adc
cmpsl
jle
sbb
mov
loope
je
and
add
inc
fwait
loope
or
and
test
cmpsb
dec
cmpsl
xor
xchg
lock
pushf
and
jp
add
addb
pop
stos
lret
push
pushf
or
ficoms
stos
fs
lock
mov
fcompl
dec
or
push
fistps
xlat
cmp
cmp
add
jne
lds
insl
xor
or
ds
sti
hlt
mov
cltd
xchg
inc
icebp
add
push
xor
or
dec
mov
jg,pn
and
inc
ds
mov
repnz
push
fadds
cmp
xor
clc
fsubrs
lea
aaa
cmp
jns
lds
sub
or
fwait
insb
inc
mov
cli
pushf
xchg
fsubl
arpl
push
std
xor
cmp
movsb
repz
add
dec
dec
mov
mov
roll
mov
js
nop
jmp
es
xor
push
movsb
xchg
sbb
push
cmpsb
inc
jno
cli
jo
and
inc
xor
icebp
insw
pop
add
xor
mov
and
add
inc
out
fmul
push
cmp
mov
lret
xor
add
push
sbb
cmp
div
xchg
inc
call
cmp
fwait
cmp
ljmp
dec
push
roll
xchg
mov
arpl
fwait
icebp
inc
pop
repz
stc
enter
and
enter
sbb
mov
mov
test
mov
add
test
push
mov
lods
mov
movsb
and
fdivrp
outsb
mov
push
jne
jno
movsb
jne
div
inc
out
pop
mov
mov
mov
imul
dec
rolb
and
mov
dec
pop
ret
add
jp
mov
mov
xor
jb
rcrb
loop
out
xchg
mov
cld
decl
adc
lods
rolb
out
jo
adc
adc
rcll
inc
pop
mov
clc
lods
arpl
mov
imul
loop
insb
negb
ds
jmp
std
sbb
push
fcomps
les
cmp
mov
mov
in
pop
cltd
xchg
sbb
sbbb
inc
outsb
fwait
shll
call
cld
and
mov
xchg
je
insb
dec
mov
adc
mov
and
jo
inc
lock
int3
test
addr16
or
pop
mov
mov
bound
xchg
add
test
mov
xor
pop
test
jo
mov
xchg
adcb
pop
popf
dec
dec
sub
xlat
jbe
fninit
add
push
ss
inc
dec
xor
rcrl
push
fists
mov
pop
xor
sub
adc
ja
dec
js
sbb
inc
stos
jns
push
addb
fsub
cmc
cmpb
pusha
sar
enter
sub
lods
aam
ljmp
test
fdivrs
inc
mov
out
add
xchg
sub
sti
ret
lret
and
ja
ret
fistpl
lcall
xchg
push
outsb
jo
popa
pop
popaw
inc
aaa
icebp
pop
aaa
lods
outsl
push
fcompl
rorb
or
movsb
inc
dec
add
and
or
push
and
sub
cmpsl
cs
add
xchg
mov
cmpsb
lret
out
mov
push
into
add
add
pop
adc
icebp
jb
mov
mov
jle
test
adc
shlb
jl
push
movsl
inc
pop
cmp
add
out
sub
inc
push
mov
xchg
dec
xchg
jnp
rolb
push
inc
add
pushf
sahf
sbb
lock
push
jg
clc
mov
cli
add
int
es
sbb
and
stos
pop
fwait
std
stc
out
in
test
push
dec
push
test
dec
in
xchg
movb
icebp
dec
mov
cmc
filds
out
adc
clc
mov
repnz
jle
push
push
fwait
inc
xchg
or
mov
imul
sti
lods
lret
xor
loopne
add
push
xchg
mov
fwait
xor
sarl
imul
mov
imull
or
insl
jo
adc
lahf
mov
aaa
jl
in
int
in
rcrb
nop
sub
data16
pusha
adc
xor
loop
and
dec
insb
mov
insb
ror
mov
sbb
push
dec
mov
push
push
cmp
outsl
dec
lods
pop
popf
lods
adc
sbb
icebp
push
mov
push
je,pt
ja
aam
mov
pop
ljmp
and
inc
outsl
incb
push
rcrl
es
mov
push
inc
in
jb
std
pop
mov
xchg
hlt
and
inc
jno
stc
imul
add
cmpsb
jb
in
mov
fcoml
mov
shl
insl
sbb
out
push
nop
xchg
pop
shlb
sub
hlt
lods
cmove
loopne
lock
ja
push
mov
in
xor
scas
xchg
jae
adc
and
jnp
push
inc
sbb
cmp
add
jp
jno
adc
out
lret
or
in
add
leave
pusha
xlat
aad
push
jg
shll
xor
jae
sub
dec
andb
je
call
into
mov
test
and
jg
and
push
pushf
mov
adc
dec
js
test
leave
iret
test
lock
daa
xor
mov
and
push
inc
std
icebp
mov
push
mov
mov
sub
in
mov
adc
jle
icebp
shrb
cmp
ss
idivl
test
push
adc
clc
mov
lcall
push
push
and
mov
ret
jb
dec
xor
mov
and
in
aaa
add
mov
dec
mov
fwait
jne
or
push
gs
out
inc
fidivl
sbb
ss
scas
pop
add
add
sbb
jl
xchg
mov
xor
mov
lods
scas
cli
cltd
out
or
push
push
dec
bound
xchg
stos
jecxz
or
lret
dec
fstl
das
gs
jno
cmp
ret
test
cwtl
sub
add
leave
xchg
call
sbb
sub
adc
ja
sbb
aam
rclb
jns
cs
push
outsb
adc
fisubl
out
push
dec
gs
push
sub
fsubl
lods
rcr
or
cmp
std
shll
fwait
xor
adc
pop
int3
hlt
gs
xor
sbb
mov
and
fistpll
pop
push
xor
pop
aad
stc
push
inc
xchg
rcl
xor
pop
rsqrtps
arpl
and
sbb
inc
push
add
lahf
or
call
mov
sbb
imul
cmp
in
mov
lret
pushf
mov
lock
fmuls
push
xchg
mov
jae
inc
aad
xchg
jmp
bswap
loop
mov
aas
insl
adc
popa
lea
test
fwait
movsl
and
ds
je
inc
rcrb
stos
or
out
inc
stos
pop
sub
mov
jne
jb
push
std
jo
or
mov
pop
sbb
test
mov
sbb
jbe
inc
push
jl
pop
pop
mov
movsl
mov
inc
fdivrp
mov
je
inc
mov
ficompl
sbb
rcrl
pop
mov
jo
xlat
jo
jg
int
lods
test
cmpsb
cmp
sar
sahf
jle
push
stc
dec
in
fs
scas
shrl
or
test
add
js
mov
mov
popa
lcall
sbb
lret
inc
call
insb
pop
push
push
mov
testl
cmp
dec
or
imul
mov
jb
mov
dec
xor
bound
pop
cmpsb
jp
sbb
sbb
push
imul
je
mov
jg
imul
sbb
push
imul
mov
add
pop
inc
fisttpl
pop
mov
mov
test
xor
sbb
dec
outsb
mov
aaa
popa
jmp
xlat
repz
pushf
sub
mov
loope
js
sti
or
pop
aam
iret
outsl
insb
sti
jl
fucom
dec
dec
pusha
push
sub
repz
fdiv
jns
arpl
and
mov
mov
orl
fisttps
imul
out
lods
inc
sub
pop
les
inc
jo
ja
mov
pop
pop
leave
aad
dec
cmp
xchg
das
icebp
add
adc
ljmp
dec
les
arpl
je
mov
loop
xchg
incb
mov
sbb
icebp
mov
push
lods
test
enter
push
movsl
std
dec
test
insb
fisubrs
sbb
arpl
pop
mov
out
xor
push
dec
mull
mov
or
mov
lahf
mov
xorb
std
xchg
lds
je
loope
mov
push
mov
icebp
and
add
pushf
push
jecxz
xchg
cmp
pop
insl
out
lods
js
in
repz
lret
pop
jb
daa
mov
aam
daa
addb
pop
mov
jl
je
loope
int
mov
arpl
mov
push
inc
lcall
daa
ret
and
lahf
add
push
fadds
fcoml
push
jne
in
test
notl
dec
inc
mov
push
int
pop
xlat
cmp
int
inc
lods
pop
mov
into
insb
push
lea
and
xchg
cmc
fildll
dec
mov
rcrb
mov
pop
fld
inc
jb,pn
daa
dec
pop
inc
test
pop
add
sub
iret
fnstcw
xlat
or
mov
xchg
shl
into
aam
aaa
mov
out
shll
xor
scas
popa
imul
cwtl
inc
lods
popa
sub
insl
out
iret
enter
mov
fcoms
insl
ret
dec
sub
out
lods
sub
mov
inc
pop
lret
fincstp
sub
xchg
shlb
xor
and
negl
rcll
es
in
sbb
jp
lret
or
xchg
lods
mov
fdiv
pop
pop
xchg
cmpsb
loope
fldenv
jnp
xor
scas
scas
push
add
in
bound
xchg
mov
adc
ja
mov
outsl
out
cltd
lahf
fs
pop
cli
in
or
fildll
outsb
lock
addr16
xor
into
xchg
popf
or
xor
and
faddp
mulps
push
dec
pop
cmp
fsubrl
cmp
fsubs
xor
rcr
rolb
or
cs
movsl
test
cmp
movsb
jb
sub
popf
jno
xchg
shl
je
lock
cli
ret
in
out
fs
adc
jo
lea
ret
push
cmp
adc
jne
push
jne
inc
and
lds
faddp
ja
push
ljmp
mov
mov
push
in
add
jb
mov
enter
inc
jg
clc
sub
gs
jmp
ja
pop
cmovbe
sub
mov
fsubl
outsb
pop
push
lock
je
shlb
push
or
mov
push
ja
nop
mov
dec
iret
ficomps
out
mov
adc
jle
pusha
not
cmpl
sti
and
jbe
cmp
push
push
iretw
and
xchg
fwait
jle
xchg
clc
mov
cltd
xor
or
das
cltd
mulb
and
or
sbb
aad
scas
incb
ss
mov
lret
daa
lret
xor
pop
repz
mov
push
jne
rcrb
outsl
pop
mov
daa
arpl
ret
push
loope
rorb
in
loope
negb
mov
in
aas
push
pop
aam
popf
lahf
das
out
and
negl
lahf
jne
roll
clc
sti
add
push
sbb
les
cltd
and
dec
imul
notl
cltd
test
pushf
or
lahf
xchg
dec
scas
push
repnz
lods
or
loope
xchg
daa
inc
cwtl
pop
mov
jg
lret
pop
mov
mulb
out
daa
test
and
push
and
jbe
mov
or
orb
ret
and
sub
push
int
fs
mov
sbb
shrl
ljmp
in
pop
loopne
pop
mov
mov
inc
stos
rcll
call
in
push
push
stos
repz
js
mov
leave
mov
lds
outsl
fwait
push
dec
ja
add
dec
aaa
mov
cld
add
out
test
ficoml
test
cmp
in
roll
nop
ds
fadds
fiaddl
pop
cltd
cmp
jmp
nop
mov
mov
dec
cwtl
inc
jns
movsb
jb
pushf
xor
sub
ret
xchg
mov
in
and
jne
push
cld
lods
loop
dec
and
dec
sub
mov
or
cli
adc
int
outsb
mov
repnz
inc
dec
mov
popa
xor
sub
std
jno
fnstenv
push
inc
stc
repnz
adcl
pop
mov
or
mov
xor
and
fimull
mov
pop
add
sbb
mov
lcall
aaa
aas
or
rorl
xlat
addr16
mov
or
jecxz
xlat
mov
jmp
ret
adc
in
pop
jg
pop
dec
cmpsl
mov
jno
popa
mov
sub
jge
xor
inc
loope
sbb
jnp
xchg
pushf
pop
ljmp
pop
lea
push
and
mov
mov
scas
mov
movsl
adc
add
sbb
mov
mov
orl
outsb
or
clc
push
ss
sbb
stos
jns
leave
dec
mov
imul
mov
or
jmp
sub
cmp
fisttpl
repz
or
test
cmc
xchg
and
push
out
sbb
insl
jmp
xchg
fsubr
or
ja
xor
xchg
jp
out
mov
pop
insl
pop
shl
jnp
push
popa
fdivs
arpl
push
sbb
jl
outsb
xchg
cli
mov
sub
mov
sbb
sbb
xor
es
adc
hlt
aaa
insb
icebp
pop
mov
imul
orb
fistpl
jnp
push
xchg
sub
mov
xchg
dec
inc
dec
outsb
push
inc
jge
push
pop
fidivs
enter
dec
sub
mov
pop
xchg
xor
outsl
dec
dec
insl
decb
xchg
pop
test
sbb
dec
test
mov
mov
cli
xchg
sbb
inc
sub
inc
cli
aas
aaa
mov
cmpsl
or
add
mov
mov
jecxz
faddl
out
pop
ljmp
sub
pop
loope
test
jb
pushf
mov
mov
fidivrl
mov
rorl
mov
ret
pop
mov
movsb
push
pop
adc
sbb
out
mov
repz
xor
leave
lea
stos
jbe
push
jmp
sub
mov
aad
add
scas
xor
xor
or
cmpsb
lret
sahf
push
les
or
or
and
push
jnp
aam
arpl
fdivrs
jo
cmp
dec
clc
sub
popa
ja
lds
mov
add
arpl
repz
dec
jmp
xchg
into
or
call
add
or
dec
cwtl
inc
or
mov
sub
roll
pop
adc
cwtl
outsl
lds
jecxz
movsl
mov
movsl
add
mov
das
jae
xor
in
cli
iret
or
daa
inc
lock
stc
push
jns
nop
popf
clc
cld
cmp
fs
cmp
shlb
shrl
imul
mov
lcall
mov
repz
scas
jmp
ja
sbb
jg
jb
shlb
scas
arpl
inc
je
decb
pushf
mov
insb
lret
jb
inc
mov
inc
or
cmp
jl
add
xor
xor
aad
adc
jns
daa
sbb
mov
cld
insb
mov
loopne
push
dec
cmc
gs
jle
cmp
pop
xchg
nop
dec
int
rcrb
fistpll
scas
push
pop
dec
pop
gs
int3
adc
lmsw
in
xchg
jne
inc
cmp
in
push
mov
or
mov
aad
mov
rol
push
push
mov
gs
cmp
push
int3
mov
inc
mov
dec
dec
cmp
mov
sarl
insl
cmp
lahf
stos
lods
push
unpcklps
dec
pop
repz
scas
cmc
cmpb
pop
icebp
pop
jp
push
inc
mov
push
jecxz
mov
push
test
mov
stos
lods
pop
xor
jno
mov
add
es
das
pop
dec
inc
lcall
scas
jo
pop
loop
sub
sahf
test
rcll
jbe
xlat
aaa
add
mov
roll
leave
xchg
cs
popa
xor
lods
out
testb
or
add
ret
lret
loop
sbb
and
shll
dec
dec
sub
pushf
push
mov
or
mov
shlb
test
loopne
mov
or
mov
outsl
jo
sbb
lea
imul
cmpsb
sti
fidivs
loopne
subb
add
mov
ret
pusha
and
out
add
push
sbb
xor
repz
je
xchg
push
lods
divl
int
in
sbb
adc
fs
fistps
bound
dec
movsb
hlt
xchg
ss
repnz
mov
jmp
subb
xchg
cmpsb
cmpb
mov
mov
daa
push
inc
shl
jg
xchg
mov
dec
into
repz
pop
jae
aam
fsubl
push
in
cltd
xchg
shll
jne
loope
sub
pop
sub
push
mov
dec
test
add
or
mov
push
arpl
jge
imul
add
loopne
xchg
fdivl
jnp
iret
outsl
shll
jp
data16
popa
leave
daa
mov
sub
lret
adc
sub
xchg
mov
aas
fs
or
test
adc
popf
xor
or
add
ret
mov
cltd
dec
sbb
mov
push
ret
shl
and
mov
cs
xor
dec
jmp
rolb
mov
jno
shrl
sbb
daa
cmpsb
push
fs
subps
adc
ljmp
out
scas
adc
sbb
xor
xor
xor
mov
hlt
sarb
mov
or
stos
call
mov
and
jecxz
add
cwtl
sarl
int3
test
xchg
sub
pop
aas
loop
push
sub
or
mov
pop
add
adc
xlat
js
test
cld
scas
arpl
xor
test
pop
into
cmp
add
fs
mov
ljmp
jmp
dec
cmc
shr
add
inc
jecxz
leave
ja
xorb
lcall
dec
jle
sub
movsb
jp
fsubrl
inc
push
add
in
mov
bound
jbe
push
push
xor
pop
push
popa
in
leave
xchg
adc
push
jb
dec
aas
adc
jbe
and
call
mov
js
lea
mov
outsb
jo
or
bound
or
int
push
mov
enter
fwait
clc
cmp
fcmovbe
dec
outsb
pop
sub
test
add
sub
and
push
loop
divl
fmul
cwtl
aad
or
stos
js
sub
into
push
and
leave
fst
loopne
jo
leave
aaa
cs
or
insl
mov
les
pusha
mov
ficoml
lcall
jg
icebp
mov
mov
jnp
imul
mov
out
fbstp
cmpsb
cwtl
lock
dec
int
rcrl
push
mov
fistpl
pop
testl
dec
mov
add
popa
push
xchg
lret
mov
mov
xchg
jecxz
push
stos
push
cmpsl
adc
ficomps
fwait
mov
sbb
out
icebp
add
add
rorb
push
xchg
je
iret
cmp
in
test
in
ret
add
rcrl
or
jb
loopne
pop
pop
loope
cmc
push
mov
pop
enter
jbe
loope
nop
dec
scas
cld
ret
loopne
cli
loop
jnp
jne
push
xor
jb
arpl
jnp
dec
pop
xchg
idiv
dec
push
or
aaa
or
sbb
pop
sarb
mov
and
add
adc
and
jge
mov
incb
cmp
test
push
xor
in
sbb
add
lock
stc
dec
mov
dec
or
scas
mov
mov
hlt
push
js
add
xchg
or
outsb
and
add
out
stos
xor
or
mov
clc
cmp
sub
sbb
sbb
shl
mov
in
mov
xor
test
pop
repnz
movl
outsb
adc
pop
add
push
mov
mov
daa
or
addr16
jbe
vpblendmd
and
js
xchg
nop
in
cmp
decb
xor
bnd
mov
push
pop
sbb
ja
jnp
mov
sub
sub
mov
pop
mov
push
dec
in
cmp
les
lahf
or
fdivrs
inc
pop
test
ret
negl
mov
mov
adcl
and
add
jae
add
fnstcw
shll
cmp
lods
push
xor
pushf
xchg
aad
js
movsl
sbb
lret
out
pop
ret
mov
rorb
iret
cmp
std
std
fsubs
mov
add
mov
push
cltd
dec
aaa
rorb
ljmp
push
mov
sub
cmp
xor
clc
scas
xor
xchg
cmp
push
mov
loop
pop
pop
out
xchg
into
lods
xor
cmp
dec
and
push
jg
mov
xor
jmp
lret
xchg
xchg
in
stos
xchg
jo
outsl
lods
mov
dec
mov
mov
push
test
insb
aas
sbb
repz
stc
ja
add
fadds
call
pop
mov
mov
push
add
ret
jmp
out
adc
sub
sti
jae
fcoms
cmp
aad
xchg
and
rorl
pop
cltd
sbb
scas
cmp
xchg
mov
add
pop
lock
outsb
lea
push
mov
mov
cmpb
push
popa
add
pop
adc
sbb
dec
pop
inc
push
imul
popf
popa
mov
pushl
inc
jne
loope
mov
stc
repnz
jp
xor
cltd
push
je
fldl
out
daa
mov
arpl
cmp
inc
std
push
inc
icebp
mov
adc
mov
jle
js
jnp
decb
xor
sbb
sahf
mov
sahf
scas
xchg
push
push
pop
adc
mov
sub
arpl
orl
shll
pushf
inc
lock
add
jmp
dec
int3
push
jl
pop
sub
in
lret
sbb
sub
or
loop
test
fxrstor
cmp
xor
imul
pop
adc
cmp
xchg
push
push
adc
jae
loopne
insb
jbe
aaa
inc
xchg
mov
das
lds
push
xor
jae
cmp
push
or
incb
shlb
aad
mov
cmp
push
mov
andb
pop
add
jl
cmpsl
pop
mov
int3
push
stos
out
jnp
sbb
sbb
add
inc
push
popa
test
mov
into
repz
std
xor
adc
pop
pop
push
dec
popf
xor
sub
mov
loope
xor
xchg
sbb
jle
push
lods
insb
loop
jo
ljmp
cmpsb
adc
jb
cmp
and
fdivrl
cmpsb
imul
sub
daa
or
dec
enter
sar
push
je
jbe
out
xorl
popf
je
test
ret
and
and
cmp
stos
hlt
jae
stos
call
and
mov
mov
push
adc
push
and
xor
outsl
je
mov
lods
imul
int3
aas
push
jp
jo
sbb
xchg
daa
fistl
ret
lret
mov
fwait
cmp
inc
rorl
insb
pop
pushf
arpl
cmp
bound
ja
sbb
push
push
cmp
test
fisttps
loop,pn
lcall
cmc
xchg
inc
inc
adc
ds
pop
pop
xchg
or
gs
pop
xchg
test
add
outsb
sub
int3
push
arpl
shll
mov
test
jge
loop
test
dec
cltd
mov
xorb
mov
test
mov
add
gs
cmp
jp
in
push
mov
insl
and
xchg
jnp
xor
add
sub
add
into
xorl
and
sub
xchg
xor
cli
add
xchg
in
ljmp
mov
aam
test
xchg
add
jmp
xor
mov
nop
imul
int
sbb
rcpps
or
mov
in
andb
imul
mov
loopne
push
push
mov
test
xchg
sarb
sub
aad
mov
in
mov
adc
or
mov
dec
inc
mov
lea
xor
sbb
mov
sbb
xlat
jmp
mov
cmp
movsl
cli
xor
sbb
test
das
push
push
call
xor
rcl
cmp
xor
les
sahf
push
repz
sbb
aas
lock
pop
push
xchg
sti
adc
mov
test
scas
mov
sub
int3
popa
xchg
and
stos
in
mov
cwtl
jns
nop
xchg
stc
imul
enter
inc
dec
arpl
mov
cmp
in
pop
pop
push
adc
mov
aad
insb
cmp
inc
xchg
loopne
cmc
insb
idivl
arpl
cltd
gs
je
fmul
ja
scas
push
or
fdivr
cmpsl
xchg
dec
fbld
lea
pop
sub
jo
pop
js
cld
scas
aaa
mov
push
push
cld
cmp
popa
mov
sub
imul
sub
pop
sti
xor
jg
sti
outsb
mov
jp
sub
and
pop
inc
push
addr16
loope
repnz
out
fsubrl
cmpsb
cmc
imul
fldenv
mov
lret
imul
arpl
inc
xchg
ret
or
or
pop
add
xor
jge
cmpsl
outsl
jp
lods
inc
cmc
or
jecxz
sub
sbb
movsl
int
xchg
incl
fmuls
cmp
dec
fs
dec
cmp
sbbb
pusha
cmp
xor
mov
inc
jle
push
mov
test
insl
dec
jge
ret
fsubrs
aas
hlt
mov
movsb
popf
pushf
pop
mov
je
pop
xchg
cs
sarb
push
inc
iret
outsl
pusha
jmp
dec
bnd
push
int3
subb
inc
ficoml
out
add
jo
sub
das
std
inc
mov
push
or
xlat
sub
cmp
movsb
loopne
push
mov
jmp
cmc
fnstenv
dec
cltd
addl
mov
sbb
push
sub
pop
jns
orl
adc
int3
pop
cltd
in
mov
push
xor
int3
mov
pmaxub
sar
pop
stc
dec
les
mov
test
popa
jg
notl
push
test
sbb
inc
lret
dec
jle
mov
dec
daa
adc
jecxz
xorb
rorb
fidivrs
fcmovnu
outsl
fadds
fs
test
push
rcll
add
add
xchg
mov
mov
ljmp
ljmp
out
in
xchg
arpl
mov
lock
ds
ds
repnz
pop
or
stos
aaa
cmp
int3
push
loop
add
push
xor
add
fsubrl
cli
lret
push
insb
cmp
lods
int3
aam
and
dec
mov
sti
xchg
mov
cmp
inc
ss
mov
pop
outsb
and
clc
cli
mov
inc
clc
lea
xchg
fcompl
push
icebp
fdivr
stos
das
arpl
inc
adc
test
mov
mov
pop
dec
bound
and
daa
dec
in
loopne
mov
and
out
pop
imul
aad
inc
pop
test
mov
mov
sub
pop
pop
jg
pop
and
push
adc
push
in
lods
push
push
int
insl
inc
stos
push
dec
stc
xchg
in
xorb
cld
cmp
or
jle
push
mov
dec
cmp
jo
in
jnp
rolb
shlb
pusha
push
mov
mov
mov
add
add
repnz
dec
dec
mov
sbb
outsb
adc
pop
ljmp
add
xchg
and
sbb
adc
scas
pop
movsl
push
shll
and
adc
insb
jmp
inc
shl
cmpsb
jmp
inc
mov
je
xchg
cmp
mov
jnp
bound
mov
ljmp
add
pop
iret
cmp
xchg
out
stos
mov
push
jae
or
fimull
bound
xor
data16
fldenv
xor
js
idiv
stos
daa
fs
hlt
loope
int
add
push
cmp
out
shll
stc
jg
push
in
xchg
daa
jle
je
xchg
lock
lcall
jb
xchg
je
scas
jp
int
sbb
mov
cmp
fdivrs
cld
icebp
jno
lcall
mov
in
cmp
adc
xchg
pop
jne
aas
xchg
add
fdivrl
or
lret
aaa
pushf
mov
inc
sub
pop
inc
cmp
mov
xor
mov
lods
inc
adc
xorb
insb
fisubrl
lea
jb
fsubs
inc
pusha
ret
or
out
add
cmp
sarl
repnz
fisubs
dec
push
mov
jmp
in
in
adc
fmuls
sbb
jbe
xchg
mov
cmpsb
mov
stos
inc
aad
sub
cmp
inc
shrb
lahf
inc
pop
inc
xor
and
cmpsb
and
push
push
add
int3
out
iret
mov
mov
in
push
sahf
dec
cmc
mov
inc
push
push
rcll
icebp
inc
push
pop
leave
push
in
dec
add
and
mov
mov
divl
flds
fcmove
in
xor
xor
icebp
and
sbb
stos
xor
pushf
dec
cwtl
and
cli
pop
sti
adc
sarb
mov
jno
pop
mov
stos
dec
jmp
xor
out
setb
push
xchg
mov
out
repnz
and
jp
outsl
jg
lahf
push
push
loop
mov
pop
adc
xchg
jge
imul
adc
aas
dec
xor
mov
rcl
in
mov
clc
test
outsl
mov
in
push
jle
shl
sbb
xor
inc
cli
out
cltd
sub
or
add
sub
js
shl
add
push
lahf
stc
adc
leave
mov
and
inc
jmp
shlb
in
and
push
mov
outsl
cmp
jg
xor
rolb
add
int3
sub
cld
lods
test
js
xchg
test
xor
enter
shr
sub
fs
jae
xor
xor
cmpsb
lret
je
and
sbb
outsl
push
and
data16
in
in
out
mov
sub
pop
sbb
je
dec
and
ja
add
popa
lods
sbb
cmc
stc
push
push
cmpsb
jmp
bound
icebp
stos
mov
fdivs
fnstenv
mov
mov
mov
inc
mov
jecxz
out
sbb
sub
cmp
lock
sub
inc
stos
mov
add
and
cmp
fcmovnbe
int
pop
pushf
stos
in
mov
jbe
and
lret
or
jle
push
fucomip
ret
leave
jmp
xor
mov
xchg
negb
mov
mov
dec
int3
mov
rorb
ficoml
mov
movsb
mov
mov
hlt
xsaves
dec
in
xor
negb
push
or
imul
xor
int
or
fisubrl
fsubrs
or
je
imul
push
into
shlb
push
sub
lea
xor
out
mov
in
mov
dec
dec
sub
cmp
dec
or
mov
sbb
push
sub
jp
test
add
arpl
sbb
and
xchg
roll
mov
jle
jmp
sub
arpl
add
loope,pn
into
xor
adc
sbbl
or
aaa
push
inc
xor
es
mov
add
pop
sub
or
push
dec
sbb
bound
repz
mov
pop
sbbb
pop
call
arpl
jne
std
lret
push
xchg
mov
hlt
int3
cmp
test
push
mov
mov
es
add
xor
xchg
mov
adc
stos
cmp
mov
cwtl
aam
mov
insb
sub
jl
ds
jnp
mov
push
mov
adc
push
and
test
sti
call
push
clc
movsl
push
ss
xchg
xlat
adc
bound
sbb
mov
mov
fcompl
addr16
jp
test
and
jge
imul
cmpsl
cwtl
pop
xchg
mov
daa
sahf
xchg
fisttpl
cmc
loope
decl
mov
daa
lods
roll
add
lret
repz
pushl
les
mov
stc
sbb
jecxz
mov
sub
and
pop
in
mov
shlb
cwtl
shlb
in
push
shll
adc
xor
loope
shlb
stos
push
hlt
xor
inc
ficomps
int3
sbb
inc
or
aaa
fdivl
popa
lahf
lea
cmp
fiadds
add
aad
test
cmpsl
push
bnd
xor
xchg
mov
aas
and
imul
xchg
int3
ret
leave
jle
out
das
jg
push
imulb
out
or
adcb
les
inc
push
and
divb
popf
or
mov
imul
ficoms
dec
push
outsb
loopnew
xchg
lea
jae
sbb
mov
in
dec
and
jb
push
jae
movsb
xor
sbb
sub
dec
subb
fldenv
movsl
out
or
sbb
and
repnz
sbb
stos
loop
cmp
and
in
jg
mov
pop
mov
stos
pop
cmc
jle
std
mov
sbb
inc
cmp
push
ss
idivl
outsl
inc
in
sub
wbinvd
push
inc
or
pop
sbb
xor
cmp
call
mov
push
sub
lret
mov
in
push
mov
out
mov
mov
cmp
jns
inc
xor
repz
or
adc
and
push
dec
xchg
in
sub
sbb
and
outsl
or
scas
mov
in
lods
and
call
shll
inc
gs
arpl
int
leave
and
adc
mov
push
pop
icebp
mov
bound
inc
inc
add
jp
xlat
mov
mov
push
mov
cmp
mov
cmpsb
add
pushf
xchg
cmpsl
rcll
mov
mov
int
mov
adc
pop
sahf
scas
lods
aad
add
scas
sbb
mov
ds
or
jbe
jl
adc
jno
in
cmp
xorl
bound
aas
rorl
inc
outsb
sub
roll
gs
sub
stos
cmp
cmp
adc
outsb
out
stos
jg
adc
sub
jg
mov
and
inc
push
mov
mov
mov
repz
ss
pop
test
jnp
mov
jl
fcmove
cmp
fwait
jle
add
sbb
xor
xor
popf
push
sub
cmp
cmp
scas
sahf
ficoms
push
push
jnp
mov
loope
adc
shrb
jae
gs
xchg
mov
mov
xchg
cmp
dec
fs
push
mov
cmpsl
pop
lea
loop
sub
mov
pop
sbb
and
outsl
mov
push
jo
mov
aas
aad
loope
push
mov
mov
xchg
popa
add
pushf
sub
popa
xchg
dec
push
rorl
inc
adc
int
repz
mov
sub
or
nopl
mov
xor
xor
add
jo
test
jnp
adc
sarl
add
outsl
inc
mov
in
sbbb
shl
mov
jle
stos
faddl
xchg
out
cld
arpl
jle
pushf
pcmpeqd
adc
out
out
adc
pop
fmull
inc
dec
cmp
push
subl
inc
adc
xor
daa
ret
icebp
push
popa
cmpb
lea
mov
or
pop
mov
mov
xchg
lret
sub
sarb
lods
lds
and
push
je
and
or
or
imul
sarl
push
js
pop
push
or
popf
insb
push
cmpsb
pop
xor
add
cmp
and
scas
inc
xchg
aad
or
xlat
push
pop
daa
sti
mov
mov
or
sbb
enter
and
dec
pusha
nop
inc
xchg
or
inc
rcrl
rcrl
add
dec
inc
cmpsb
mov
rclb
ds
shll
stc
mov
movsl
jno
loop
sub
mov
xlat
or
mov
cmp
mov
sti
bound
cltd
add
adc
cmp
mov
xor
push
adc
rcrb
ss
xor
in
or
cld
push
leave
inc
inc
orb
jmp
dec
sti
dec
jae
lret
cli
cwtl
cs
jnp
xchg
dec
enter
or
icebp
mov
lcall
es
ret
iret
icebp
leave
or
aam
mov
cmp
xor
pop
sbb
into
jmp
ljmp
bound
jmp
pop
sbb
inc
rcrb
hlt
cld
push
lods
out
or
mov
mov
sub
mov
subb
push
mov
mov
mov
lcall
inc
jmp
mov
ja
xor
je
jge
dec
pop
xor
enter
hlt
or
jmp
add
call
xchg
ret
std
das
shrl
ja
pop
daa
fwait
mov
add
xor
mov
arpl
jnp
les
arpl
jmp
mov
popa
mov
sbb
mov
stc
lret
xchg
les
push
adc
outsb
cmp
mov
mov
sub
lods
xor
push
into
loope
sub
jo
xchg
add
popa
iret
sbb
idivb
sahf
sbb
test
mov
sbb
mov
jnp
push
out
sti
pop
inc
pop
sub
inc
adc
pop
xchg
adc
xor
out
mov
mov
fs
push
insb
sub
or
and
inc
sbb
mov
pop
repz
push
daa
jle
int
mov
cmp
and
cmp
push
bound
popf
enter
js
lods
je
test
ficoms
jmp
rorl
enter
add
fisubrs
es
mulb
lock
mov
sub
inc
mov
cs
sub
jnp
shrl
ds
sbb
sbb
or
hlt
add
test
insl
mov
push
mov
jbe
int
jl
or
jns
ss
pop
das
add
out
lods
dec
push
ja
xlat
loop
rcr
ljmp
in
cltd
daa
add
push
cmp
jge
pop
cmp
test
and
testl
mov
aam
push
push
or
lods
outsl
mov
inc
das
or
cmp
pusha
xchg
mov
mov
shlb
lahf
movsl
or
sbb
sbb
ja
leave
or
mov
sbb
pop
in
and
add
nop
xchg
into
arpl
mov
xchg
cwtl
out
pop
jo
imul
mov
test
cmp
insb
push
sbb
ret
movsb
fsubrs
or
shrl
jo
ret
scas
jl
fistpl
or
fiadds
push
push
and
jmp
inc
sarl
ret
xchg
or
jle
add
inc
sbb
adc
adc
jle
int3
fcmovne
inc
adc
mov
call
iret
adc
fildl
data16
dec
sub
xor
dec
mov
jp
js
dec
imull
cmp
dec
pop
jge
cmpl
jle
and
cmpsl
lahf
icebp
popf
xchg
je
clc
mov
inc
inc
in
cmpsb
mov
shrb
inc
jmp
roll
add
gs
enter
jl
pushf
insl
leave
jo
cltd
push
cs
add
xchg
pop
test
adc
int
jb
cs
out
push
cmp
jecxz
cmp
push
pop
out
jnp
jle
cwtl
xor
in
adc
mov
outsb
inc
adc
adc
dec
rorb
jp
das
jge
pop
dec
lods
mov
xor
xchg
bound
pusha
sarl
or
sti
push
mov
movsl
stos
int
js
or
cmpsb
test
push
mov
call
jo
xchg
cmp
or
test
fadds
sbb
sbb
mov
arpl
and
pop
ret
dec
sar
xor
xchg
push
jp
xlat
jbe
test
int
jge
jg
imul
scas
xchg
cmp
xchg
pop
sbb
mov
fs
cmp
not
adc
out
mov
ret
icebp
jb
and
out
adc
mov
dec
shrl
cmp
lahf
dec
cmp
sbb
arpl
cld
rclb
popl
movsb
aad
xchg
clc
cmp
adc
mov
aas
xor
mov
add
xchg
or
insb
cmp
add
or
mov
jl
add
xorl
cwtl
xor
divl
stos
ss
notb
insb
and
xlat
cmp
inc
lcall
xor
push
sahf
push
sti
out
pop
out
push
rcl
mov
push
lcall
lret
popf
jb
mov
lea
lea
lret
andl
and
add
ds
popa
jecxz
jno
popf
imul
jg
mov
xor
roll
push
jp
and
mov
out
rolb
push
mov
xchg
sub
out
add
std
adc
cmpb
test
sub
test
mov
hlt
add
int
aas
fildl
arpl
or
jae
sub
jne
data16
shrb
mov
sbb
mov
mov
pop
jle
jbe
pop
cmp
lods
jae
fcomps
pop
in
cs
xchg
fsubr
add
mov
aaa
cmpsb
mov
in
popa
adc
push
pushf
nop
shlb
in
xchg
xchg
fnsave
adcb
imull
cld
shl
std
lahf
in
inc
shl
or
add
and
divb
cmc
push
pushf
loopne
jmp
pop
iret
rolb
mov
push
pop
ss
jecxz
add
pop
imul
clc
push
movsb
jb
adc
lock
aas
pop
outsl
test
aaa
movsl
aam
stc
xor
test
cmp
jle
leave
or
or
adc
shr
mov
pop
inc
mov
notb
cmp
imul
icebp
jg
inc
insb
mov
add
movsl
jb
into
mov
sti
lahf
mov
or
mov
cmp
mov
push
pop
cmp
leave
data16
jle
cld
fisubs
xor
stc
mov
pop
dec
aas
push
lea
clc
test
popa
out
jecxz
mov
idivl
inc
enter
add
adc
int3
and
add
popa
sub
lahf
shlb
inc
add
sbb
cwtl
sub
mov
nop
scas
pop
fdivrs
sti
jle
gs
push
lods
insb
iret
inc
fcmove
adc
insb
sub
fs
push
xchg
cmp
es
cld
pushl
jp
pop
inc
arpl
lret
mov
or
out
mov
add
fwait
int3
adc
insb
mov
push
clc
cmc
les
inc
enter
cmpsb
cmc
mov
or
sbb
inc
stos
lods
testb
xor
cmp
or
mov
das
jae
fsts
stos
clc
sbb
sub
jge
push
add
add
sub
cmpsl
loopne
mov
fwait
sar
dec
adc
push
mov
cmc
mov
lea
sarb
lret
jg
mov
pop
sub
lret
es
outsb
cmpsl
sub
push
inc
fildll
sub
cltd
adc
or
cs
xchg
clc
rorb
xor
jo
sbb
xor
rcrl
in
insl
test
jge
inc
insb
jecxz
test
icebp
mov
xchg
sub
orb
gs
lret
jo
arpl
mov
pop
mov
jl
ret
pop
pushf
test
sub
imul
xchg
inc
pop
fcoms
aad
push
mov
aaa
sub
mov
lahf
dec
shlb
in
xchg
mov
cmc
cmp
sbb
cmp
and
add
or
fldl
cmp
xor
or
push
pop
clc
icebp
xor
mov
cmpsb
mov
adcb
lret
lahf
xor
mov
mov
dec
mov
aam
push
push
pop
test
lea
add
mov
test
push
and
arpl
hlt
repz
in
jbe
rcr
jmp
inc
mov
jb
add
sub
xor
mov
ret
adc
andl
mulb
daa
subb
js
leave
mul
dec
in
arpl
fists
push
repz
adc
sub
or
dec
adc
pop
push
pushf
sub
repnz
push
sub
add
and
pushl
dec
jmp
cmp
pushf
add
cli
xor
cmp
inc
inc
adc
add
jnp
and
push
add
jbe
jecxz
test
mov
xchg
mov
aam
and
aad
cwtl
mov
jns
adc
mull
sbb
std
mov
mov
subl
shlb
imul
adc
inc
mov
inc
aam
or
enter
lods
mov
fists
mov
ja
arpl
inc
add
dec
test
in
lods
jmp
loope
jle
ja
pop
pop
jecxz
jnp
sahf
shlb
imul
mov
shll
push
repz
mov
testb
adc
sbb
rcrb
loope
jg
sbb
dec
cld
cltd
mov
out
insb
arpl
test
out
scas
or
mov
sbbl
in
test
dec
sub
out
jge
js
pusha
testb
mov
jle
mov
push
cmp
movsb
xchg
mov
jno
aas
push
lods
sbb
pusha
mov
sahf
pop
sub
sub
rorb
cmp
inc
int3
and
pop
int3
scas
test
inc
dec
pop
fcmovne
and
xchg
lahf
mov
mov
outsb
test
ljmp
jg
pusha
cs
in
mov
jne
movsl
cs
aam
les
sub
sbb
cs
add
jne
mov
inc
jno
data16
jbe
xchg
mov
incb
sub
xchg
hlt
mov
mov
pushl
rcl
jl
cmc
sub
lret
test
add
add
jl
decl
and
mov
scas
add
loope
jbe
cmp
lcall
jne
mov
dec
lret
cmp
push
int3
lcall
int
xchg
jo
dec
test
adc
shl
jne
dec
sahf
or
mov
sarb
popa
xchg
bound
cmp
sub
xchg
push
inc
pop
in
sub
aas
fdivp
jmp
and
push
sub
std
add
inc
sbb
pop
jne
dec
push
lret
enter
int
out
pop
add
jmp
test
adc
cld
call
xchg
xchg
test
adc
push
js
pusha
xchg
push
movsl
sbb
push
ljmp
jecxz
cmc
int3
adc
jno
push
and
pop
xchg
aam
sbb
divl
divl
insb
and
add
inc
adc
pop
ljmp
sbb
inc
cmp
and
leave
cmp
fldt
jmp
pop
arpl
sahf
sub
loopne
movsl
inc
xchg
cli
push
out
adc
add
mov
pop
inc
inc
jne
sbb
lret
stc
push
popa
in
or
sbb
mov
pop
repz
xchg
mov
jno
jl
mov
addr16
rol
shrl
adcl
cmp
mov
test
or
ds
ret
mov
mov
adc
xor
inc
sbb
pop
aas
xor
inc
jo
sub
push
into
lret
dec
repnz
add
into
mov
adcb
and
or
scas
out
sub
pop
push
sbb
test
cwtl
dec
addr16
outsb
leave
inc
sbb
aad
cmpsl
sbb
loope
xchg
test
add
cmp
add
mov
in
lds
cli
fs
fistpll
push
inc
push
aas
mov
out
aaa
stos
mov
gs
sahf
cmpl
dec
insl
or
clc
push
mov
xor
das
addr16
or
dec
mov
dec
mov
test
push
shrl
insl
jl
mov
sub
jno
ss
xchg
xchg
out
dec
jl
lcall
inc
loope
dec
inc
jnp
int3
lret
fdivs
add
mov
pop
addb
mov
cmp
rorb
adc
pop
adc
int3
push
xchg
or
data16
adc
pushf
xor
adc
pop
and
lret
sub
testb
arpl
cltd
and
push
cltd
aas
sub
lds
lcall
test
lret
mov
push
jno
dec
jo
push
lods
iret
js
lea
add
sarl
mov
pop
jl
bound
inc
and
ljmp
fwait
push
cli
fstp
int3
xor
cltd
mov
xchg
sar
push
and
loop
xchg
mov
out
sub
jo
int
fiadds
fistps
mov
movsl
or
les
sbb
notb
jns
std
aad
and
push
aam
ds
imul
jns
cs
adc
xor
das
popa
imul
add
test
xchg
jl
nop
leave
pop
incb
adc
and
pop
psubusw
adc
sbb
enter
push
or
movswl
testb
fldlg2
mov
ss
repz
jo
jecxz
adc
into
dec
mov
mov
inc
mov
push
lea
sbb
iret
bound
iret
xor
and
adc
push
mov
aas
push
xchg
addr16
shrb
out
fsubl
xorb
jbe
popf
rolb
mov
je
mov
pop
sbb
cmpsl
mov
push
mov
add
pop
dec
loopne
push
cmp
gs
push
addr16
fs
out
mov
outsb
cmpsl
aad
adc
dec
mov
add
pop
mov
fs
lods
mov
fiaddl
inc
sub
addb
jo
rcl
add
add
pop
add
inc
xor
or
jg
xchg
cmp
pop
mov
mov
arpl
and
popl
fmull
jne
xchg
out
jae
test
jmp
sub
int
testl
and
into
xor
out
xchg
ret
sbb
jge
adc
jns
rorb
xor
addr16
negl
xchg
aas
sbb
push
mov
jb
xchg
ret
repnz
xor
enter
bound
sahf
movsb
test
dec
ljmp
mov
mov
sbb
adc
xlat
loopne
into
cwtl
cmp
adc
jle
les
pop
xchg
and
push
sbb
mov
es
aas
dec
dec
add
fwait
or
mov
imul
std
dec
mov
pop
sub
add
pop
push
push
add
nop
cmp
xlat
popa
sbb
icebp
inc
adc
pushf
ja
sbb
pop
in
dec
pushf
int3
dec
ljmp
cltd
lcall
outsl
xchg
sbb
dec
xor
sbb
bound
add
ret
jns
scas
sti
sbb
stc
fmuls
pushf
push
dec
divb
cmp
bound
and
adc
inc
shlb
mov
rorl
jmp
pop
xchg
stos
sbb
fbstp
das
xor
jl
xchg
cli
mov
aaa
cli
mov
add
ljmp
xchg
push
and
cld
jg
shlb
movsl
sbb
mov
adc
ds
rclb
jmp
insl
jo
sub
clc
in
sahf
adc
xchg
fiaddl
mov
lock
pop
jbe
fs
out
inc
jmp
mov
ds
or
aam
pop
stos
push
ljmp
xchg
ss
or
jge
xchg
inc
pop
call
jnp
int3
inc
stc
ret
mov
mov
lret
mov
dec
fs
xor
lods
call
mov
into
mov
xchg
outsl
push
cmp
ljmp
add
imul
adc
jne
test
push
mov
jne
sub
or
das
pop
push
shl
test
adc
clc
aas
leave
rorb
out
shl
mov
fidivrl
ret
add
addr16
push
and
in
fisubs
pop
jns
add
jnp
test
jae
cmp
mov
lahf
ss
int3
add
hlt
lock
sti
adc
sbb
pop
insl
iret
cltd
dec
or
pushf
push
clc
les
es
mov
sub
mov
or
jo
cld
mov
stos
pop
cld
jne
lods
ja
aam
adc
adc
mov
pusha
and
push
addr16
inc
mov
push
in
js
xor
jg
ljmp
ljmp
fsubrl
jbe
jno
mov
add
mov
jp
sub
mov
xor
ds
mov
sbb
or
or
les
arpl
jmp
imul
jmp
subb
pop
mov
mov
push
lods
dec
push
inc
push
mov
push
xor
push
adc
imul
mov
stos
lret
cmpsl
pushf
dec
pop
inc
pop
out
inc
or
imull
cltd
adc
add
pop
sahf
xchg
add
sub
rcll
lea
sub
jnp
add
jle
mov
outsl
jl
pop
jl
adc
aaa
jns
xor
inc
nop
out
mov
rcr
mov
or
jmp
fldl
mov
hlt
add
mov
sub
jbe
sarl
mov
jge
xor
sub
mov
sbb
jnp
pop
repnz
mov
adc
imul
movsb
addr16
pushf
xor
mov
jne
cmc
repnz
push
into
push
pop
loopne
shrb
mov
xor
xor
push
xor
lods
xlat
cmpsb
repnz
cmc
insl
stos
cmp
jbe
aas
fstpt
mov
in
movsb
sub
inc
cmpsb
pushf
xchg
xchg
rclb
aad
sti
jmp
mov
outsb
in
ds
shrl
lds
ret
leave
mov
mov
imul
or
pmulhw
or
aas
or
test
push
add
cmpsl
xor
or
out
in
jl
inc
lock
mov
adc
cmpsb
cld
add
push
in
pushf
mov
mov
add
scas
lock
dec
or
adc
leave
sub
das
cmp
negb
mov
in
pop
mov
mov
xlat
iret
xchg
iret
pusha
pop
je
inc
sti
or
sub
movsl
sar
mov
inc
mov
cli
lahf
neg
jb
pushf
insl
lds
mov
das
jo
inc
nop
pop
dec
jl
imul
aam
fisubs
insl
pop
push
cwtl
push
cltd
dec
push
outsl
cmpb
movsb
lods
cmp
cld
bndldx
mov
test
in
xor
sbb
cs
gs
leave
test
push
imulb
cmc
inc
mov
xchg
sub
jg
imul
arpl
push
xorb
test
push
fiaddl
data16
je
imul
in
popa
in
xor
out
pop
xor
jno
mov
jg
push
dec
push
pop
lods
int3
aaa
mov
xchg
cli
cmc
mov
adc
das
ret
adc
jbe
pop
cmp
fdecstp
mov
into
mov
xor
push
push
mov
cwtl
fmull
pushf
xchg
sub
testl
pop
imul
pop
shlb
sub
push
jl
hlt
test
push
add
or
xlat
ja
ret
or
rorl
std
test
aas
mov
adc
xor
fwait
hlt
leave
push
xchg
sbb
mov
jo
les
xchg
xor
push
pop
imul
jl
fistl
xor
xor
xlat
cmpsl
stos
jge
inc
mov
sub
std
lcall
movsl
lret
subb
popa
mov
xchg
fldcw
movsl
popa
negb
test
aaa
add
hlt
outsb
icebp
and
mov
mov
push
jo
push
daa
insb
rsm
jg
lds
pop
dec
fidivl
iret
mov
pop
jmp
sti
add
jge
cmp
add
jne
mov
or
sub
or
xchg
jge
lahf
jmp
inc
and
mov
in
push
cmpsl
mov
push
push
addr16
xor
mov
xchg
mov
loope
fsts
xchg
mov
fnstenv
dec
xchg
mov
leave
lock
push
jg
dec
xor
and
or
rcr
ss
stos
das
daa
adc
testb
leave
xchg
dec
sbb
fsubrl
mov
lahf
cs
push
ds
fs
mov
xchg
pop
inc
jg
cmpsl
sbb
rclb
or
vmovupd
sbb
inc
and
cmc
fs
mov
sarl
data16
fdivl
xchg
fs
lret
out
rclb
subb
sbb
xchg
nop
adc
sbbb
ja
or
cmpl
push
fs
mov
fs
dec
fs
lea
rep
subl
insb
pushf
aam
popf
je
cmp
adc
das
xchg
popa
cltd
xor
adc
cmp
and
adc
repz
xchg
jg
jle
or
pushf
sahf
jae
push
out
rcrb
mov
push
pop
jp
stos
cltd
xor
jno
mov
dec
lcall
hlt
sub
lods
jmp
adcb
test
or
subl
outsl
jb
xlat
mov
mov
push
xchg
jnp
pop
push
xor
sbb
lahf
in
xchg
xchg
in
mov
test
icebp
and
xchg
std
jne
cmpsl
hlt
fdivp
loope
push
xor
stc
xchg
sbb
mov
and
cmp
jge
pop
aam
les
jmp
outsb
sbb
add
fwait
data16
lahf
mov
mov
dec
xor
jne
push
lret
xchg
movl
fldenv
mov
cmp
std
inc
out
xchg
jns
in
icebp
test
jmp
insb
loope
pop
sbb
dec
in
pop
mov
sti
cmpb
xor
sar
sbb
mov
mov
stos
lods
jge
add
xchg
cmpb
out
dec
cmp
lods
mov
cmc
xor
cli
cmp
pop
xchg
cmp
pop
js
sbb
sub
jae
dec
and
mov
adc
stos
xor
out
mov
dec
loopne
push
dec
push
jne
mov
xchg
cmpsb
aaa
inc
push
data16
add
mov
enter
dec
gs
inc
pop
sbb
scas
push
scas
sub
in
mov
arpl
push
shr
movsb
ja
jge
lret
rolb
sbb
addb
jbe
add
fistpl
loopne
data16
mov
adc
pusha
pop
ljmp
enter
xchg
pop
popf
fs
dec
decl
mov
es
nop
sub
adc
lar
and
cwtl
xchg
push
inc
mov
jb
jle
jecxz
lret
fsubl
lods
shr
out
arpl
dec
xchg
cmp
ret
test
rcrl
cmp
out
xor
mov
notb
mov
repnz
mov
inc
mov
movl
fistpll
cmpsl
enter
out
pop
pop
bound
adc
mov
sub
sub
imul
xchg
jle
xorl
fsubl
ss
pop
call
push
or
gs
fwait
mov
xchg
mov
subb
push
push
stos
repz
imul
push
in
jo
sbb
test
xchg
out
loopne
push
cmp
sbb
shl
sti
cwtl
or
stos
pop
inc
or
add
inc
mov
loop
jno
cmp
insb
mov
test
mov
adc
in
xor
and
cmp
aas
cmp
xor
outsb
test
add
pop
jne
lods
hlt
xchg
inc
pop
sti
das
repnz
or
mov
push
push
lret
inc
clc
cmp
and
aas
jmp
or
aaa
repnz
mov
or
sub
push
icebp
into
mov
and
inc
push
std
cmpsl
rcll
push
mov
jmp
aam
jns
cs
push
jmp
in
push
shlb
lcall
das
jbe
out
xchg
lods
imulb
mov
cmp
xor
icebp
scas
js
iret
xlat
fchs
sbb
into
dec
out
jnp
loopne
hlt
daa
out
jb
scas
mov
aas
or
pop
dec
leave
adc
idiv
add
ljmp
sbb
adc
in
cs
and
jecxz
dec
gs
inc
sub
movsb
pop
fs
pushl
inc
xchg
jl
dec
stos
iret
out
mov
pop
pusha
loopne
movb
ret
call
or
out
add
jnp
out
add
or
js
or
or
std
scas
push
push
and
add
dec
shlb
cli
dec
push
mov
lret
sbb
into
adc
pusha
xor
js
mov
and
cwtl
out
sahf
inc
scas
jmp
mov
inc
lods
push
pop
dec
or
mov
in
es
neg
mov
sbb
enter
add
or
pop
xor
rorl
inc
mov
mov
cmp
call
lahf
xchg
inc
ds
daa
test
bound
cmp
jae
adc
daa
and
arpl
fldl
bound
dec
mov
cltd
and
in
js
std
push
ret
rol
xor
xor
mov
fldt
sarl
addr16
dec
test
xchg
jae
jle
push
hlt
adc
push
in
or
sbb
bound
cmp
popa
mov
pop
jns
or
outsl
and
cmp
cli
out
es
or
mov
add
mov
cmpsb
cmc
das
test
js
stos
push
pusha
or
sbb
or
fdivr
push
cwtl
ljmp
cmp
sbb
push
pop
repz
sub
movsl
xchg
les
adc
sbb
pop
cld
fcomps
mov
xchg
call
clc
mov
push
and
and
xchg
hlt
pop
xchg
in
movsl
aaa
rolb
pop
dec
icebp
or
pop
mov
adc
mov
imul
insb
cs
imul
xor
push
or
es
or
adcl
pop
adc
xchg
mul
dec
cmpsl
int3
sub
fwait
mov
dec
lds
inc
push
aad
pop
xchg
fisubl
and
loop
movsb
push
lret
test
inc
lds
and
and
cmpsl
movsl
jg
dec
dec
iret
xchg
fnstsw
mov
xchg
dec
dec
mov
shlb
push
adc
inc
iret
sub
arpl
dec
lea
mov
aad
dec
fucomi
dec
mov
push
mov
shlb
call
popf
and
cmp
push
out
je
cmp
pop
push
add
addr16
iret
mov
sbbb
shl
dec
repnz
out
mov
dec
rcrl
not
add
add
add
inc
adc
or
push
sarl
gs
xchg
int3
cmp
push
xor
std
jnp
push
adc
test
jle
sti
inc
addr16
decb
addb
out
aad
mov
pop
fs
int
popw
test
mov
jb
mov
inc
testb
dec
mov
leave
dec
and
fsubr
xchg
loop
xchg
push
inc
gs
xchg
adc
push
in
inc
stc
mov
lds
imul
inc
repz
mov
mov
jo
roll
jecxz
and
inc
les
jmp
stos
jle
rol
rolb
call
xchg
mov
call
test
mov
call
jne
xchg
inc
mov
push
insl
xchg
ss
aaa
cmpl
pop
cmp
push
setns
push
ds
and
test
hlt
pop
add
push
mov
sbb
sbb
sti
and
pop
fisubrs
jb
inc
test
xchg
xchg
addr16
out
hlt
iret
sub
add
arpl
rorl
dec
jno
add
rorl
sub
jge
jle
push
hlt
xor
inc
jb
sub
in
xchg
xor
scas
roll
imul
je
enter
dec
scas
push
xor
xor
loopne
adc
push
mov
out
fs
imul
cmpsb
mov
mov
cmp
fwait
mov
push
int3
xchg
and
cmp
mov
lret
jecxz
mov
pop
sbb
xorb
jnp
add
add
push
xchg
mov
cmc
sbb
cwtl
jae
scas
dec
xchg
ficoms
or
sbb
push
test
jo
das
adc
out
fs
or
pushw
inc
or
push
xor
cmp
test
lcall
in
xor
repnz
icebp
add
cmc
mov
pop
ret
repz
pusha
stos
push
jecxz
pop
je
fdivp
idivb
inc
arpl
push
push
daa
cmp
cmc
imul
mov
dec
fwait
mov
rcrl
shrb
mov
loopne
lea
or
mov
mov
lret
popf
jno
xchg
lcall
test
mov
imul
das
mov
fxch
add
mov
mov
loopne
sbb
sti
pop
adc
repz
add
in
movsl
push
pop
adc
loope
add
add
push
cmp
int3
outsb
jnp
sub
xor
sub
sub
ljmp
add
pop
neg
push
cmp
insb
or
pop
lea
int
js
push
jns
xor
rcll
sahf
or
push
and
aad
enter
loop
fnsave
or
cmpsl
xor
push
or
or
xor
mov
xor
inc
ds
mov
fsubs
pusha
mov
cmc
js
iretw
outsb
sub
jno
hlt
pop
fs
cs
sub
mull
jb
cmp
jl
mov
push
stos
push
jno
xchg
mov
lcall
fwait
shlb
ja
jb
pop
ret
jo
incl
mov
mov
jl
dec
xor
mov
xor
out
inc
jno
loope
setbe
push
mov
hlt
sub
add
rcr
sbb
xor
dec
addl
push
loope
pop
jle
aas
fcmovnu
xchg
inc
jbe
mov
rorl
lea
sbb
xchg
pusha
cld
or
inc
es
aas
in
stos
in
mov
es
add
icebp
lds
mov
repz
mov
scas
das
mov
cli
xor
leave
call
xchg
push
ds
mov
lahf
lds
sub
out
sbb
push
xor
add
dec
int
mov
out
inc
pushf
jmp
xchg
inc
sub
add
sahf
movsl
and
bound
pop
nop
cmpsb
adcl
lea
je
sub
icebp
jbe
sti
mov
sti
sbb
push
dec
add
mov
out
xorl
xor
xor
pop
lret
mov
cmp
jge
roll
roll
sbb
std
cmp
pop
jge
scas
inc
fimuls
and
dec
mov
stos
popa
mov
cmc
jmp
mov
jns
adc
idivl
lock
or
mov
arpl
sti
das
push
xchg
lock
mov
pop
das
or
js
xor
in
jb
js
nop
fldl
insl
insb
fstpt
dec
dec
inc
rol
out
mov
push
bound
lods
push
iret
jno
adc
mov
mov
and
cld
push
add
aas
test
ds
push
outsl
add
les
shrl
mov
arpl
fwait
pop
lods
stos
hlt
pop
sbb
or
pop
out
sbb
mov
jnp
ret
add
mov
inc
enter
hlt
add
leave
adc
jne
jge
lea
ss
cmp
add
and
or
fwait
xchg
shrb
or
into
in
mov
sti
xchg
dec
sbb
dec
and
inc
add
push
and
imulb
pop
lods
jge
mov
xchg
int3
outsb
arpl
push
fcomps
dec
xor
jo
mov
xor
subb
incl
jg
adc
xchg
jae
insl
fidivrl
repnz
stos
daa
pop
push
popf
and
out
and
repnz
test
sbb
repz
mov
mov
ret
xchg
loope
mov
inc
test
xchg
mov
rorl
xor
cmpsl
aaa
adc
sbb
or
push
push
or
in
les
daa
pop
call
mov
inc
jo
outsb
jl
mov
test
cmp
mov
rol
and
pop
out
adc
subl
xchg
dec
cltd
jle
fwait
lea
cmp
stos
data16
xor
inc
jp
mov
pop
mov
xchg
cli
imul
mov
jp
ret
xchg
jno
movsl
dec
push
sub
pand
ja
scas
gs
push
bound
and
repnz
testl
loop
push
jns
pop
outsl
mov
in
xor
fs
pop
outsb
inc
lret
mov
cmpsl
les
movsl
fistpll
mov
ds
dec
cmp
mov
ljmp
ja
or
inc
adc
cmp
jg
sbb
mov
xor
adc
jg
int
add
roll
mov
dec
inc
adc
loopne
push
fs
and
movsb
mov
shll
gs
jnp
gs
xchg
lahf
rcrb
push
addr16
cmp
pop
xchg
mov
cmc
pushf
mov
push
xchg
adc
mov
gs
mov
sahf
in
lahf
jnp
and
add
cmpsl
imul
addr16
cli
iret
add
aad
xor
int
inc
pop
ljmp
cmpsb
mov
ss
adc
stc
popf
cmp
ja
pop
roll
push
lods
push
stos
sbb
fisubs
sbb
push
out
mov
add
mov
push
rorl
fidivs
icebp
cs
adc
sbb
xchg
fiaddl
es
add
xor
jmp
enter
in
sub
imul
bound
data16
cli
aas
enter
mov
fisubrl
pop
mov
cmpsb
icebp
cmp
mov
int
xchg
push
call
pop
xor
push
push
cli
and
addr16
je
lcall
out
mov
inc
int
mov
add
adc
icebp
mov
nop
dec
ja
adc
xor
cmp
xor
dec
aaa
xlat
std
pushf
push
nop
add
cmpsb
data16
mov
sub
add
mov
stos
and
xchg
add
mov
xchg
or
std
dec
jl
mov
jns
ss
xchg
sbb
jp
fsts
push
dec
and
icebp
lcall
loope
sub
xor
mov
es
js
lea
xchg
push
iret
add
mov
adc
push
push
sub
cmp
mov
add
sub
pop
xchg
pusha
fnstenv
test
popa
in
mov
jge
xchg
mov
inc
imul
in
adc
je
adc
mov
iret
add
rcl
add
sti
mov
push
sbb
imul
popf
and
in
xor
push
in
dec
shll
jns
aad
out
xor
out
outsl
ret
and
inc
lcall
cmp
jns
rcrl
and
cmpsl
out
les
stos
xchg
incb
sub
sahf
cmp
shl
les
aam
int3
shl
nop
xor
pusha
shrl
dec
push
cltd
xor
std
jle
movl
loopne
and
jg,pn
mov
imul
lcall
iret
sub
xchg
js
les
cwtl
fldl
out
mov
repz
dec
imul
xchg
je
push
jle
and
jnp
int3
pop
dec
dec
mov
in
jg
shrb
sub
push
push
jne
bound
mov
hlt
push
repnz
inc
lods
repz
mov
cmpsb
inc
mov
sub
cld
inc
icebp
mov
insl
dec
je
or
push
mov
pop
xor
mov
pop
dec
out
inc
cmc
cltd
push
cmp
popa
aad
inc
lret
aaa
sub
mov
push
icebp
es
mov
fldt
adc
insb
add
mov
lea
inc
jo
aaa
test
push
sbb
in
jmp
sbb
inc
mov
mov
push
ja
aad
imul
jae
xchg
cmp
arpl
mov
jecxz
leave
mov
inc
mov
adc
in
mov
push
xchg
sahf
fwait
mov
adc
cwtl
test
in
jmp
mov
into
mov
mov
xchg
push
repz
lock
int3
pop
imul
ja
lahf
xor
stc
inc
int
push
mov
mov
in
jns
mov
arpl
jae
mov
mov
mov
popf
cmp
or
fimull
cmp
out
pop
negb
stos
dec
rorl
call
jge
fists
adc
or
clc
xchg
ficoms
xchg
mov
push
es
aaa
mov
frstor
mov
jno
or
lret
inc
push
push
and
jp
outsb
cmpsb
lret
vpshlq
xchg
lds
ret
pop
cld
mov
inc
xor
pop
sbb
xchg
xor
sbbb
iret
dec
sbb
fsubs
sub
adc
sub
fdivrl
int3
nop
rcl
add
sub
mov
xchg
mov
rcrb
xor
gs
adc
call
and
jge
mov
lock
cmp
imull
imul
xchg
xor
xor
pop
mov
lcall
sbb
and
jnp
ja
inc
outsl
xchg
push
sbb
adc
jb
xchg
movsb
outsl
xchg
lods
mov
mov
aas
push
jns
xor
mov
int3
enter
pop
push
enter
aaa
ret
je
lret
int3
test
mov
adc
jne
jae
adcb
sbb
xchg
outsl
jo
xor
cmp
mov
ds
xchg
xchg
mov
push
lods
mov
cs
sbb
adc
dec
pusha
repz
push
or
jle
mov
mov
cld
shlb
push
out
push
cltd
gs
ret
ljmp
sub
inc
mov
mov
fwait
ror
adc
xchg
mov
dec
inc
popf
dec
loop
imul
fcomps
adc
fisubrs
add
sti
push
cmc
add
mov
xor
pop
jecxz
jno
jb
sub
lods
jno
lcall
jnp
inc
xchg
jo
les
popf
mov
pop
cs
add
inc
insb
iret
mov
push
aaa
add
push
shll
in
pusha
and
adc
xor
sub
sbb
pop
inc
daa
lods
or
call
dec
xchg
mov
fmuls
clc
fwait
fwait
pop
sbb
addl
mov
pop
aaa
loopne
inc
adc
test
movsl
xchg
hlt
lahf
test
dec
inc
inc
mov
mov
mov
cmpsb
sbb
aas
xchg
lea
dec
out
dec
stc
fistl
mov
cli
sub
add
jo
push
adc
jmp
push
ds
mov
cmp
popa
cmp
imul
jmp
fidivs
xchg
in
fwait
jecxz
ficoml
dec
and
mov
jp
adc
sbb
xchg
mov
mov
inc
fstpl
jle
testb
pop
cmpsb
jbe
sbb
cmpsl
sahf
in
cld
pop
outsb
and
scas
inc
cmp
xor
push
mov
sbb
add
negb
stos
push
jns
jmp
pop
rclb
sub
pop
add
mov
imul
fadds
aad
fisubl
push
aam
fwait
dec
or
sub
xchg
sbb
pushf
sbb
addb
lods
bnd
arpl
lahf
mov
loope
mov
dec
je
pushf
imul
rcrb
test
js
jo
lahf
iret
arpl
aaa
sbb
bnd
shrb
repz
sub
cmpsb
aad
leave
divb
cmc
xor
sbb
mov
fwait
imul
and
int3
ret
jp
insl
or
mov
cld
pop
mov
mov
ljmp
out
fldl
movsl
cmp
xchg
inc
xor
push
or
and
xchg
das
sbb
popa
mov
lods
mov
mov
xor
jb
lahf
lods
aad
aad
inc
jmp
or
push
mov
sahf
in
jo
lods
ds
jno
out
scas
adc
ds
mov
dec
or
scas
add
and
les
or
inc
jo
cwtl
repnz
push
notb
lods
test
xchg
out
roll
or
push
mov
dec
push
mov
daa
and
pop
mov
xlat
xor
fwait
ret
push
add
je
sbb
mov
sub
adc
int3
shrb
jl
jge
sub
ret
lcall
xchg
ss
jg
cmp
push
jp
jb
lock
jns
jecxz
cmp
js
adc
in
das
sarl
lret
inc
repz
push
mov
push
jne
imul
jae
push
add
add
call
add
rolb
imul
lods
loopne
and
mov
sub
sti
lds
cmp
cmp
add
add
lcall
push
out
xor
and
test
sahf
cmp
or
pop
cld
mov
sbb
lahf
mov
jmp
push
and
fwait
pop
mov
shl
ror
stos
insl
loope
and
xchg
fs
pop
es
adc
cld
nop
fwait
mov
cmp
movb
dec
daa
jnp
adc
or
xor
fucomip
subb
repz
xchg
ret
shl
data16
dec
lretw
les
aas
fwait
sub
add
cmpsl
adc
fldenv
cmp
ret
jnp
int3
sarl
out
testl
aaa
mov
imul
cmp
aas
add
lock
out
add
test
jbe
enter
rclb
adc
xchg
mov
aam
cli
add
cmp
or
iret
dec
imul
out
inc
xor
jge
dec
push
add
ret
stos
jg
movsl
mov
hlt
test
mov
and
add
enter
cmp
or
enter
sbb
pop
popa
lahf
jno
xchg
jmp
push
xchg
inc
sahf
das
out
xor
jae
jle
loop
fxch
in
jle
pop
sub
add
dec
sbb
pop
stos
mov
sbb
mov
aad
mov
xchg
add
sbb
fs
cmp
outsb
mov
push
mov
pop
dec
mov
sbb
or
test
pop
mov
mov
lahf
xchg
cmp
pusha
jo
mov
push
mov
shrb
mov
rolb
cmp
out
or
adc
addr16
mov
lods
leave
ret
lret
and
ret
pop
sti
push
cmpsb
lahf
and
add
test
loope
sbb
push
cmpb
movsb
stc
ds
mov
data16
int3
mov
out
fidivs
mov
add
xorb
sti
ficoms
shl
outsl
cmpsb
push
sti
in
sbb
cld
jae
fs
popa
and
sub
mov
cli
ljmp
cli
stc
mov
cmpsl
les
push
sub
pop
cmc
adc
ljmp
jne
filds
inc
rorb
pop
xor
sub
inc
adc
jo
xchg
dec
xor
jno
push
add
imul
ficomps
in
iret
dec
mov
ds
lahf
xchg
mov
pop
fimuls
mov
clc
push
fisubrs
ret
mov
adc
stos
or
jg
sub
movsb
pushw
mov
pop
pop
push
ficomps
jnp
iret
int
push
loop
pop
movsl
push
sbb
adc
aaa
mov
fists
cmp
imulb
xchg
xchg
add
es
sub
cld
adc
sub
mov
xchg
fcmovbe
xor
ja
add
dec
xlat
pop
push
mov
mov
cli
hlt
lods
mov
pop
sbb
and
mov
xchg
inc
xor
movsb
ret
gs
and
lods
lret
insl
jae
xor
xchg
pop
fsubl
ss
testb
in
scas
mov
add
mov
inc
in
pusha
xor
scas
into
mov
cmp
mov
xchg
pop
ja
mov
fsubrl
ret
adc
cltd
inc
in
cmc
and
jns
stos
js
cmp
pop
lods
cld
and
arpl
mov
or
stc
jne
dec
push
and
pushf
cmp
pushf
push
cld
or
mov
jl
cmpsb
sbb
push
lods
data16
das
add
mov
lods
xor
pop
pop
jp
popf
fs
nop
dec
stos
loop
les
push
xchg
ja
mov
push
cmp
cmpsb
push
adc
ljmp
pop
push
adc
stos
push
in
movsl
adc
repnz
or
push
pop
cmpsb
cld
or
cmpsb
popa
out
pavgb
push
outsb
mov
push
mov
push
jne
mov
mov
xor
inc
divl
or
imul
push
pusha
jg
fdivr
test
sbb
mov
cmp
and
ficoml
stc
out
add
push
mov
mov
pop
pushf
out
sbb
mov
imul
lods
cli
lret
sub
out
stos
arpl
add
lea
lret
in
ret
dec
add
hlt
stc
movsb
mov
shrb
cmp
test
mov
call
lcall
xlat
add
mov
dec
cmp
mov
popf
sub
fsincos
lret
xchg
loopne
test
repz
pusha
pop
out
je
mov
pop
out
jns
test
push
jmp
push
sub
sbb
std
sbb
pushf
jmp
mov
lahf
fwait
aas
or
daa
cwtl
sti
je
out
cmp
lods
icebp
dec
xlat
fldt
cmpsl
dec
and
mov
mov
insl
jbe
xchg
sbb
fwait
xchg
std
repz
jnp
dec
mov
aad
aas
adc
xor
inc
add
jp
dec
inc
cmp
gs
mov
dec
xor
mov
pop
sahf
leave
mov
pop
test
out
mov
out
mov
dec
cli
jg
orps
mov
repnz
or
mov
lock
lock
dec
add
lret
adc
insb
aam
lret
test
leave
xchg
and
ljmp
subl
out
mov
stos
sbb
cmpsb
lock
fistpll
sbb
daa
adc
stc
lock
hlt
popa
xchg
pop
sub
cltd
jl
lret
xchg
cvtps2pd
sub
mov
in
cmpsb
inc
cmc
jbe
mov
in
mov
push
std
hlt
mov
out
sbb
jae
adcl
repz
xchg
fwait
adc
movb
shll
pop
mov
mov
div
sti
and
rol
loopne
enter
jnp
xchg
repz
pop
jl
lret
jae
add
inc
cmovge
dec
mov
add
shlb
je
ret
and
js
mov
test
pop
jge
cmp
loopne
out
jmp
lock
pop
ret
push
cmp
arpl
sub
push
cmp
aad
mov
jmp
pop
xorl
mov
imul
sub
sbb
loopne
and
push
mov
xchg
and
xor
dec
leave
adc
imul
push
repz
js
cltd
xchg
fnstenv
sub
pop
stos
in
loop
ret
push
loop
push
dec
dec
fidivl
add
lahf
and
mov
sbb
mov
inc
mov
xchg
test
ljmp
lcall
mov
sub
pop
push
mov
or
jge
aaa
jle
mov
jbe
add
cmpsl
repz
out
push
dec
inc
dec
pop
fucomi
repnz
sbb
xchg
inc
in
out
loop
dec
in
je
clc
sub
hlt
jge
jg
aad
testl
xchg
adc
addr16
icebp
jg
sub
pop
mov
xchg
ds
push
fisubl
jo
xchg
inc
int
lods
mov
icebp
in
lret
and
push
xchg
in
mov
loop
subb
adc
mov
repnz
gs
leave
fcomps
sub
sub
mov
int3
loopne
jne
pop
or
out
xchg
out
push
std
bound
in
call
shrl
push
adc
sbb
jg
std
cltd
cmc
in
mov
aad
aaa
fiaddl
adc
pop
stc
fs
jns
scas
dec
pop
xchg
fstp
xchg
cmpsb
cmpb
push
aad
cld
out
adcl
test
jle
pop
inc
loope
test
lcall
in
imul
mov
jnp
push
gs
mov
loop
aaa
xlat
ret
pushf
dec
cmpsl
inc
lret
lods
cmp
mov
rcrl
mov
xor
je
popf
es
sbb
jge
rcrb
les
sti
mov
lahf
imul
mov
mov
adc
pop
jecxz
gs
pop
inc
or
inc
cmp
cmc
out
test
jmp
adc
je
mov
cmc
mov
imul
in
arpl
jecxz
aas
sub
xor
xchg
sbb
mov
mov
mov
ret
lock
xor
loope
add
cli
dec
mov
mov
lds
daa
push
jns
ror
in
aaa
inc
cmc
cmp
cld
sbb
mov
push
lea
addl
cmc
in
add
out
jae
mov
in
xor
je
movsb
sarl
cmp
xorb
pusha
inc
out
jae
scas
xchg
add
je
sub
aam
jecxz
pop
andl
cmp
pop
cmpsl
in
js
pushf
pop
fldenv
push
std
fisttpll
mov
xor
mov
je
mov
mov
mov
mov
es
inc
pop
stc
add
lret
mov
into
in
shlb
mov
or
push
inc
cmpsb
dec
popa
sbb
adc
push
cmovp
loopne
add
popa
bound
mov
dec
ret
xlat
mov
stc
movb
jg
lret
addr16
andl
mov
mov
xchg
in
and
pop
les
fwait
jg
mov
xor
add
jae
hlt
adc
mov
in
rorl
jno
xchg
adc
push
repnz
push
mov
mov
inc
pop
push
jle
push
out
push
call
andb
inc
and
add
andl
inc
pop
xchg
xchg
in
add
fdivrp
das
xor
daa
jl
dec
fimull
rolb
jge
xchg
out
ret
mov
push
mov
rcl
in
xchg
rol
cwtl
fstpl
add
inc
inc
cmp
add
fsubs
int
xlat
mov
inc
mov
flds
xor
fwait
xchg
daa
pop
mov
jns
xor
test
jge
inc
push
sbb
movsb
aas
pop
jecxz
inc
push
shrb
inc
data16
cmp
fmull
aaa
push
or
out
stc
add
fdivl
loop
inc
enter
push
pusha
ja
jmp
sbb
test
adc
addl
lods
lahf
loope
sbb
mov
mov
movb
sti
es
or
movsb
insb
push
pop
cmp
stos
sbb
arpl
add
call
std
stos
in
push
shrb
mov
inc
int3
mov
nop
addr16
sbb
xor
adc
push
inc
idivb
jmp
mov
and
les
les
cmp
mov
cmp
add
jmp
fs
dec
rolb
mov
ljmp
hlt
insb
pop
or
cmp
neg
dec
mov
pop
ja
call
adc
cltd
hlt
inc
test
cs
xchg
clc
inc
and
out
cwtl
xchg
sbbl
xchg
loope
cmp
pop
xchg
pop
push
mov
jb
xchg
fucom
fidivrs
mov
xchg
movb
les
repz
or
xor
push
scas
js
iret
out
loop
mov
push
inc
into
cmpsl
jns
mov
loopne
bound
nop
sub
notb
cmc
stc
and
inc
and
or
xchg
pop
scas
icebp
mov
shr
sti
das
sbb
cmpl
in
bound
fs
add
sbb
dec
cmpb
ja
roll
dec
xchg
lods
xlat
fcmovnb
mov
popf
insb
repnz
xor
and
inc
and
lcall
arpl
inc
fwait
enter
sbb
adc
sbb
nop
cmpsb
das
or
cltd
ja
push
jb
loop
or
cmp
icebp
push
inc
add
jbe
pop
jecxz
and
xchg
popf
xor
repz
jp
sahf
jle
inc
adc
mov
cmpsb
imul
adc
je
jecxz
pop
sbb
movsb
or
mov
sbb
daa
sti
das
lret
jp
xorl
jne
sub
cmpsb
out
stc
std
or
inc
loopne
cmpsb
push
sbb
aam
bound
adc
repnz
jb
dec
js
jns
cmpsb
inc
stos
test
in
add
mov
mov
test
shll
jl
gs
aaa
fildll
push
xchg
cmp
xorl
cwtl
inc
lea
jo
jmp
out
or
push
clc
mov
push
inc
push
push
mov
sub
js
push
enter
push
inc
shll
pop
lods
and
fwait
pop
popf
call
cmp
mov
lea
aad
jg
and
mov
push
dec
jns
jecxz
movsl
cwtl
sarl
ret
aam
adc
lods
test
jns
push
mov
stc
adc
and
gs
cld
cli
pusha
push
shrl
in
pop
lahf
dec
fstps
fwait
mov
push
imul
jo
sti
stos
out
les
push
lcall
sub
lock
shlb
jecxz
aas
cmpsl
lods
imul
mov
sub
stos
add
cmp
cmp
adc
push
filds
xchg
xchg
add
repnz
rcr
inc
in
xor
pop
enter
jb
xchg
inc
fisubrs
add
xor
pop
mov
arpl
xor
fwait
cmpsl
cmp
cmc
mov
mull
or
mov
aad
fcmove
dec
enter
dec
push
xchg
aaa
push
lret
stos
xor
dec
icebp
pop
add
enter
mov
clc
mov
test
push
pop
sarl
xchg
lahf
icebp
js
jmp
sub
loop
or
cmpsb
stc
mov
mov
pop
ds
rorl
add
inc
push
out
stos
mov
inc
sbb
inc
imul
mov
cli
push
jmp
into
pop
or
pop
bound
in
pop
in
inc
inc
push
test
jbe
add
or
out
lods
insl
in
dec
dec
mov
cld
shrl
lods
sahf
in
jbe
sbb
pop
aas
mov
loop
je
xchg
jecxz
sahf
xchg
out
mov
add
sbb
jecxz
cmp
and
aam
inc
popa
lret
xor
pushf
imull
test
negb
cs
cmpsl
sbb
divb
mov
or
xchg
movsb
xchg
xor
push
pop
rcll
mov
pop
fucomip
fstps
adc
push
cmp
cmpl
mov
lahf
jbe
shl
jecxz
insb
fldl
xchg
call
loop
out
stc
out
pop
add
aas
lahf
stc
jno
mov
inc
or
ss
insl
xor
push
lahf
push
lret
stos
dec
nop
daa
push
mov
cs
popf
jp
and
lret
andb
jne
stc
aas
or
es
les
jae
cmc
fsub
or
fsts
jno
sbb
test
iret
mov
jmp
out
pop
ljmp
xchg
xchg
stos
jbe
test
bound
mov
push
sbb
or
and
mov
fdivp
lods
inc
orb
and
imul
mov
inc
push
lret
sub
pushf
insl
shlb
stos
mov
jp
push
inc
adc
or
jmp
dec
pop
pop
inc
and
aas
repz
cmp
sub
andl
fisubrs
cmp
jp
call
dec
push
mov
push
es
add
mov
add
scas
inc
shlb
xor
sahf
push
cld
stc
mov
mov
jns
sbb
push
fsubr
imul
push
pop
jp
pop
movsl
dec
mov
xchg
jne
fistl
sbb
ja
notb
push
mov
xchg
andl
ja
and
push
xor
xchg
loop
std
add
jle
pop
pop
dec
adc
out
mov
mov
push
ljmp
inc
jbe
mov
cli
xchg
stos
mov
ficomps
lahf
mov
ja
popa
sahf
cmp
inc
cwtl
testb
outsb
or
testl
movsb
shr
inc
jno
xchg
stc
add
sub
ja
or
sahf
imul
test
pusha
dec
icebp
and
jnp
push
int
mov
mov
fsubrl
xchg
pop
rcrl
jmp
mov
jle
push
sbb
sbb
and
jg
adc
popf
or
inc
pop
push
adc
cmp
dec
xor
xchg
out
shll
push
xor
jns
imul
scas
pop
mov
sbb
adc
sub
inc
sbb
xor
jae
mov
out
cmovg
adc
cmpsb
sub
lea
pop
pop
lds
lcall
and
xor
negl
outsl
cs
ljmp
cmp
scas
push
sahf
cmc
insl
leave
dec
dec
sbb
xor
xchg
cmp
sahf
cmp
and
dec
ds
jb
dec
push
xor
lcall
push
lret
lcall
xor
jb
mov
xchg
es
out
inc
jmp
test
mov
or
cmp
nop
ds
cmp
jne
test
fcoms
add
jns
xlat
inc
testl
cmp
xchg
shrd
cmp
jle
cmpsl
pop
in
push
add
out
inc
jns
push
aam
lds
dec
cltd
lock
lods
mov
out
xchg
jl
inc
cltd
fs
movsl
test
test
mov
xchg
pop
fwait
cwtl
cmp
mov
push
and
jo
sbb
pop
outsl
rorb
lds
or
xchg
jmp
jb
pusha
shl
push
in
and
mov
decb
fildl
daa
add
add
cmp
fs
push
sub
mov
xor
pop
and
fisubrl
lahf
pop
push
std
cs
iret
in
mov
pop
sub
ret
xchg
sub
sbbb
xchg
or
xor
jecxz
sbb
pop
cwtl
or
pusha
or
xchg
push
imul
inc
flds
filds
mov
sub
movsb
ja
cli
fcoml
jmp
loope
pusha
je
int3
ja
adc
xchg
mov
rcrb
jno
pop
sub
movsl
or
or
lods
or
jecxz
daa
mov
stos
dec
mov
cltd
cltd
sti
xor
pop
int3
mov
or
jne
in
hlt
cltd
imul
adc
jb
or
mov
shll
mov
mov
jo
popf
aaa
mov
rorl
and
bound
jo
sti
sub
lods
loopne
into
xchg
push
xor
pop
add
sbb
adc
lods
loop
cmpsl
sbb
push
cld
in
inc
shll
inc
lret
movb
adc
js
in
cmp
cmp
xchg
push
aad
movsb
push
cli
mov
test
cwtl
sbb
fisubrs
int
in
sub
ljmp
add
pushf
or
mov
mov
in
sub
xchg
mov
or
sahf
popa
cmp
cmp
movsl
dec
mov
pusha
cmp
push
fidivs
ret
lcall
stos
hlt
sbb
inc
pop
inc
insb
inc
int3
fs
stos
hlt
mov
xor
sub
sbb
test
or
jns
mov
ficoms
ficompl
sub
cs
adc
ret
or
xchg
pop
outsb
or
adc
cli
aaa
pop
adc
dec
mov
pop
cmp
adcb
ret
mov
outsb
add
xor
in
inc
xchg
incb
jbe
jb
lahf
out
iret
push
cmpsl
mov
xchg
stos
daa
mov
shlb
and
xor
jmp
xor
jbe
adc
push
inc
lea
mov
xchg
test
sub
mov
pop
jns
mov
in
add
in
ja
out
jnp
lods
jge
les
jge
push
jo
in
loope
jnp
cmc
fwait
jle
nop
dec
adc
notb
jl
mov
xchg
lds
mov
imul
rcl
xchg
add
and
xchg
aad
fst
pushfw
test
ds
movsl
push
inc
stc
loope
outsb
pop
shll
jb
sahf
das
fnclex
lret
arpl
adc
mov
sub
push
push
sti
or
inc
loope
add
in
jecxz
mov
xchg
and
shll
mov
hlt
adc
sbb
ret
std
lods
sub
inc
fbstp
adc
shlb
or
cmpsl
push
decb
adc
jmp
push
pop
idivb
adc
outsl
mov
sub
pop
xor
icebp
hlt
xor
repz
popl
and
xchg
out
dec
popa
adc
cli
enter
test
repnz
add
jbe
cld
sbb
pop
sub
lret
xchg
outsb
js
lret
out
mov
pop
xchg
dec
mov
or
sbb
mov
or
adc
xor
add
cltd
shrl
sub
out
push
cmp
dec
clc
sub
fmuls
out
fistps
pop
pop
xor
xor
loope
test
add
xchg
cmp
push
mov
sbb
cli
fdivs
mov
xor
mov
xchg
pop
xchg
add
xchg
sbb
mov
mov
cmc
pop
lods
lret
and
fimull
and
xchg
mov
lods
and
sub
xlat
in
add
mov
xchg
or
mov
xchg
mov
rcrb
push
and
in
adc
xor
imul
fisubs
jl
jle
xchg
jne
int3
hlt
in
sub
xor
inc
dec
and
xchg
or
into
jae
out
cmp
sbb
and
in
ljmp
sub
data16
cmpsl
push
daa
jecxz
mov
stos
aam
lahf
in
das
les
jae
push
sbb
adcb
mov
pop
dec
and
mov
pop
pop
mov
mov
cmc
add
inc
sub
jo
sbb
sahf
dec
ja
aaa
scas
jbe
icebp
cmpb
dec
cmovae
push
out
pop
xchg
rcrl
mov
and
mov
adc
push
xlat
repnz
pop
push
or
test
ret
stc
jle
outsl
fisttpl
sahf
xlat
aad
mov
stc
orb
cld
mov
xor
sbb
lods
cmpsb
cmc
nop
cmc
lods
xchg
movsl
fnstcw
push
push
jge
adc
xchg
mov
mov
je
push
adc
in
sbb
cmp
and
insb
das
mov
cmp
or
pushf
ret
fcompl
cli
inc
js
cltd
pushf
jns
or
pusha
adc
je
sti
mov
jb
int3
rol
jmp
adc
mov
cmp
pop
pop
lds
fsubs
das
xchg
sarl
dec
aaa
and
lret
push
inc
fsubrl
mov
mov
adc
bound
jl
rcll
mov
negl
dec
xor
data16
adc
jg
mov
aad
mov
repz
inc
bswap
sbb
xor
inc
push
push
in
pushf
adc
ds
jne
mov
stos
test
cli
xor
mov
cmp
sub
xchg
ficompl
int
rorb
inc
sarl
iret
xchg
ljmp
pop
ds
outsl
inc
fnsave
xor
or
inc
and
push
test
pop
or
or
adc
arpl
sahf
push
adc
stc
jecxz
out
xor
mov
test
lods
int
shlb
add
jne
sbb
inc
inc
stos
mov
imul
scas
lcall
ficomps
leave
pushf
push
mov
push
insb
int3
js
or
pop
fwait
dec
mov
pop
lods
add
mov
jns
test
or
stos
das
xlat
mov
into
mov
jae
shrl
stos
sub
sbb
ljmp
jl
test
push
mov
lret
stc
or
scas
repnz
mov
sbb
pop
mov
data16
fcmovnu
jmp
mov
jmp
jge
xor
mov
push
adc
test
stos
lock
out
or
into
scas
pop
inc
inc
jmp
pop
in
push
cmovbe
leave
jg
scas
push
push
lret
loope
scas
sbb
aam
addr16
push
fmuls
clc
je
ficoml
aam
int
pop
imul
jmp
loop
inc
xlat
cltd
inc
mov
inc
mov
ret
es
cwtl
sbb
cmp
fcmovnbe
mov
add
push
ljmp
xchg
nop
lea
jge
add
adc
bound
mov
fiaddl
aaa
mov
or
imul
enter
push
xchg
push
lcall
shlb
cmc
addr16
hlt
daa
inc
ror
bsr
mov
insb
stos
cmp
lds
mov
insl
cld
or
sti
dec
pop
popf
jge
mov
repnz
mov
push
mov
jle
mov
rcl
mov
loopne
jle
and
bound
dec
shlb
sahf
lahf
imul
loop
int
int3
jo
mov
cli
ret
out
pop
add
fsubrl
pop
outsl
jns
pusha
xor
add
ret
and
call
je
inc
adc
es
mov
xor
xchg
sti
ret
sub
or
adc
mov
insl
push
sbb
xor
rolb
xor
inc
rorb
cltd
stos
stc
dec
mov
xchg
sbb
loope
pop
nop
ret
jmp
icebp
out
in
es
aad
stos
repnz
pop
sub
inc
mov
stc
inc
loop
in
aas
je
das
int3
dec
sahf
mov
fwait
inc
insb
pop
jnp
scas
xlat
dec
cld
cmp
fisttpl
pop
adc
out
mov
test
jae
jecxz
jae
adc
bound
cmp
fildl
mov
mov
mov
xor
nop
cmc
or
push
pop
push
ljmp
mov
divb
ds
mov
push
out
aaa
call
aam
rorb
or
mov
aas
insl
add
popa
mov
cmp
xlat
fs
xchg
mov
idivl
loop
mull
shll
adc
ljmp
mov
dec
push
insl
das
loope
ljmp
adc
cmpsb
faddl
dec
fidivs
pop
es
xor
aaa
ret
lahf
ja
hlt
ret
inc
mov
xorb
jl
push
add
stos
cmp
gs
mov
push
pop
scas
popf
stos
cmp
push
inc
xchg
mov
loope
inc
stos
jmp
add
mov
xchg
imul
pop
cmp
mov
rorb
push
pusha
and
dec
les
sahf
adc
idivb
and
mov
sbb
and
sahf
es
mov
adc
push
or
lock
stos
add
and
loopne
lods
sbb
push
fs
jge
mov
and
clc
fst
fistpll
mov
ss
xor
inc
data16
mov
mov
push
ret
stos
fucomip
cmc
ret
or
mov
sbb
je
repz
test
pop
ret
pop
sub
nop
movsl
dec
push
hlt
xor
add
pop
xchg
out
scas
setns
test
cmp
out
pop
imul
jnp
sarb
imul
negl
cmpsl
xchg
or
scas
ljmp
push
gs
jecxz
frstor
adc
outsl
or
mov
sub
in
xchg
dec
lcall
sbb
pop
mov
xor
sub
adc
lds
popa
fisttps
in
addr16
and
out
jp
ss
inc
icebp
adc
rorb
pop
mov
outsl
das
xchg
outsl
movsl
jbe
pop
jbe
fs
or
loop
mov
mov
gs
mov
adc
mov
xor
mov
enter
les
int3
or
repz
xchg
popa
add
mov
call
xchg
push
enter
dec
lock
andb
ljmp
dec
scas
pop
out
adc
inc
cmpsl
rcr
jo
inc
mov
pop
lret
lret
mov
mov
or
int
fdivrs
sbb
test
push
mov
dec
cld
mov
je
scas
rcrb
add
inc
mov
jns
imulb
test
outsl
push
xchg
icebp
xchg
and
clc
out
ret
add
adc
aam
scas
mov
mov
out
mov
and
pop
out
mov
push
das
cld
lret
jmp
adc
or
mov
push
xchg
fdivs
fidivrl
sti
test
cwtl
mov
int
fldcw
gs
push
cld
filds
outsb
stc
loopne
push
inc
pop
aad
out
std
stos
and
lods
or
cmc
xchg
jne
add
jmp
imul
push
lret
aam
incl
clc
negb
je
js
insl
iret
gs
jp
dec
das
leave
mov
sub
jbe
inc
std
icebp
call
cwtl
cmp
adc
hlt
notl
rcrb
setl
out
pushf
leave
pop
insl
inc
mov
or
xchg
xchg
add
out
xchg
xchg
push
adc
jo
sbb
xor
insb
pop
mov
rep
cmp
xor
outsb
sub
pop
mov
sbb
out
push
xlat
cld
pop
outsb
lret
inc
rol
outsl
jmp
mov
inc
ljmp
roll
dec
or
pop
mov
imul
pop
sub
push
ret
lcall
je
push
mov
testl
loop
add
pop
or
push
pop
dec
dec
call
ss
push
in
stos
insl
cmp
mull
leave
inc
mov
pop
lahf
pop
lret
jb
lods
pop
rolb
inc
xor
cmp
rcrb
mov
popf
sub
in
cmpsb
mov
lds
jg
pop
mov
or
add
or
xorl
mov
pop
shll
dec
or
push
inc
adc
mov
xchg
xor
mov
cmp
popf
inc
adc
cmp
cltd
add
icebp
adc
adcb
mov
and
jno
imul
xchg
rcrl
fidivrs
fs
inc
in
loopne
iret
or
notb
aas
out
xchg
divb
sbb
pop
les
nop
adc
push
mov
or
stc
test
adc
cs
ja
jl
xchg
fistpll
jns
sub
lods
sti
or
pop
ret
sahf
mov
je
bound
cmp
mov
cs
or
inc
ja
shll
or
and
pop
movsb
mov
jmp
adc
pusha
mov
or
es
lahf
xor
dec
sbb
sub
gs
mov
dec
jbe
push
fnstsw
or
scas
loop
imul
fcompl
and
mov
add
lock
cwtl
or
ret
popl
mov
jae
mov
add
data16
es
xchg
fnstcw
out
push
xchg
out
shr
rcll
sbb
and
mov
adc
jge
popa
and
ds
adc
ds
imul
pushf
and
pop
inc
out
mov
push
xchg
int3
and
arpl
cmp
repnz
mov
leave
jns
mov
pop
or
lods
push
and
mov
push
stc
das
jno
fcoms
shlb
push
aad
jae
push
push
add
les
mov
lret
mov
and
adc
push
scas
cmp
jae
mov
cmpb
or
sub
inc
add
pushf
dec
dec
push
mov
pop
jmp
mov
xchg
mov
pop
jno
xor
out
in
imul
daa
subl
mov
pop
xchg
sub
pop
popa
leave
or
inc
inc
mov
pop
cmp
lock
xor
fnstsw
mov
mov
icebp
push
test
aad
insl
push
aad
cmp
adc
jge
cli
dec
xlat
scas
shlb
cmpsl
adc
dec
mov
sub
addr16
sub
jge
dec
sub
add
add
pop
inc
pop
addr16
xchg
aas
inc
push
and
jg
sbb
jo
cmp
jno
push
or
ljmp
loope
xchg
call
scas
jns
in
jns
insl
sti
ret
jne
lods
mov
jg
stos
pop
in
sub
lret
mov
xchg
inc
xchg
orl
mov
mov
into
fstpl
mov
jecxz
movsl
sti
cmp
mov
clc
lods
test
jo
pop
ja
mov
mov
xchg
xchg
jno
insb
jg
fimuls
leave
mov
ljmp
push
jecxz
sbb
cmp
pop
cmp
mov
sbb
imul
jnp
outsl
arpl
repnz
pop
popf
call
sub
cmp
push
lcall
xor
push
sti
icebp
xor
rcll
je
and
sub
ficoms
aad
gs
arpl
push
or
adc
int
mov
add
je
mov
cmp
xchg
out
mov
lea
adc
out
xchg
jmp
mov
mov
mov
mov
cmpsb
sti
pop
test
insb
inc
fdiv
pop
popa
or
push
pop
or
and
inc
jnp
xchg
inc
mov
jo
jbe
leave
xchg
je
cmp
inc
push
fisubrl
pop
cmp
mov
dec
mov
ljmp
aaa
fldl
lahf
jl
sbb
push
cmp
dec
lods
sub
fs
movsl
inc
or
pop
push
outsl
test
cmpsb
ds
mov
int3
push
push
and
push
xchg
ret
add
push
fcomps
adc
mov
jno
add
ja
or
je
loope
mov
xchg
mov
push
jae
cmc
loope
lret
pushf
pop
mov
xchg
push
icebp
out
add
xchg
loopne
loop
dec
orl
mov
lds
inc
rcll
jb
ss
mov
por
std
cmp
aas
pop
push
in
sub
mov
aaa
out
pop
sub
lods
scas
repz
jge
pop
gs
sbb
dec
fxch
xor
subb
cwtl
mov
test
jbe
bound
ja
xchg
das
add
lods
repz
mov
icebp
add
ror
dec
repz
inc
add
bound
idivb
loopne
loop
cmp
es
adc
stos
flds
aad
out
arpl
xor
fcomp
pop
inc
rcrb
movsb
mov
out
mov
aaa
jp
push
or
add
fldcw
lcall
inc
jl
pop
jns
dec
decb
test
orl
pop
jp
push
repz
outsl
mov
mov
push
inc
jae
cmp
orb
int
hlt
clc
xchg
lock
push
rorb
sbb
dec
addr16
adc
cmp
xchg
sbb
stos
cmc
test
cmp
mov
flds
push
push
mov
mov
adc
jl
inc
push
daa
sti
data16
pminsw
mov
ret
std
pop
fwait
dec
icebp
cli
xchg
ret
jae
add
call
lret
jnp
dec
idivb
mov
dec
bnd
jge
sbb
inc
sub
mov
lods
jl
mov
sbb
add
daa
cs
cmpl
out
mov
cmc
das
daa
cltd
jae
add
mov
push
dec
pop
lret
and
imul
push
push
or
rcl
or
and
cmp
ljmp
add
mov
inc
icebp
addl
jae
aad
adc
dec
call
add
popa
shlb
jle
adc
fs
jge
lods
test
jmp
repz
popf
xchg
push
mov
fcoml
xchg
xor
xchg
nop
loope
pop
inc
cmpsl
xor
sbb
mov
addr16
adc
rol
flds
cwtl
loop
cli
inc
cmp
lahf
push
repnz
push
pop
add
jp
push
leave
adc
stc
js
fnstsw
add
inc
fidivs
fisubrs
arpl
xacquire
cs
das
cmc
jge
je
cmp
jp
mov
in
jmp
sub
push
shl
pop
gs
dec
outsl
es
cmp
mov
mov
fcoml
and
push
jae
push
jle
lret
jp
xchg
fwait
jo
rcl
fwait
xchg
inc
mov
inc
maxps
adc
inc
aaa
push
mov
je
test
xor
aaa
xchg
jb
mov
add
in
add
inc
xchg
fwait
cmp
lock
xchg
mov
outsb
mov
mov
sbb
jge
push
mov
imul
xor
xor
inc
sub
shlb
add
jg
sub
cmp
jns
sbbl
or
adc
fwait
movsl
mov
mov
dec
sub
mov
adc
xor
loope
pop
xchg
jb
aas
repz
jg
inc
out
lods
rcr
jg
pop
mov
ljmp
fsubp
fsubrl
pop
pop
vpsadbw
repnz
loope
dec
and
lret
rclb
xchg
dec
loope
stos
es
rcl
add
lods
push
adc
leave
popf
clc
sub
inc
push
insb
insl
shrb
addr16
pop
mov
movl
popa
fsubrs
std
xchg
or
push
iret
test
cmp
cs
insb
inc
xchg
lock
cli
test
push
mov
negl
add
aaa
repnz
dec
push
pop
add
mov
pop
lret
lods
sub
ss
push
or
or
dec
mov
lock
xorl
sub
andl
movsb
push
fisttpll
lret
adc
mov
xchg
sbb
cmpsl
push
cmpsl
mov
repz
orl
add
add
or
pop
pushf
scas
shlb
jne
push
xchg
adc
ljmp
xchg
push
jne
push
imul
idivl
mov
push
aad
lea
cmp
mov
inc
push
cmp
inc
cmpsl
pusha
in
out
mov
int3
pop
loop
filds
mov
push
xchg
test
ljmp
push
movsl
negl
aad
push
daa
xchg
mov
popa
ss
push
out
mov
imulb
pop
pop
imul
xor
mov
or
push
aaa
fcompl
insb
and
inc
fwait
mov
dec
push
adc
adc
xchg
pop
jge
pop
outsl
test
dec
push
xor
sahf
sub
bound
push
pop
push
push
sub
in
sub
jne
fbstp
into
fnstcw
jecxz
inc
pop
inc
lahf
xor
xchg
mov
repnz
adc
cmpsl
jge
xchg
loopne
mov
fildl
aam
in
aam
cmp
cmc
dec
insb
aaa
add
sub
daa
fiaddl
or
mov
sub
sbb
mov
sub
add
push
int
pop
xor
mov
mov
jmp
stc
push
hlt
mov
xor
stos
loop
icebp
clc
pop
stos
and
insl
lods
mov
iret
jae
das
and
sahf
cmp
enter
mov
lahf
cwtl
pop
dec
aam
lret
addr16
cmp
lods
out
into
pop
pop
adc
lock
cli
cli
mov
arpl
xchg
xchg
lock
lds
xchg
decb
movl
outsb
xorl
mov
and
into
popf
hlt
lahf
orb
sub
aas
jbe
dec
outsb
xor
and
inc
mov
cmp
fnstenv
and
cmc
and
mov
cmp
add
rcr
outsb
cmpsb
push
and
mov
mov
sbbb
outsl
push
jno
add
ficompl
cmp
aas
mov
dec
dec
adc
ficompl
add
push
ss
jge
lret
push
jge
pop
sub
in
imul
dec
pop
movsb
add
adc
stc
test
inc
and
dec
sub
xor
or
out
outsl
sbb
sub
mov
imul
out
mov
jg
ficomps
pusha
and
pop
mov
add
in
sub
in
les
mov
stc
pushl
xchg
mov
fneni(8087
fmuls
mov
jb
xchg
inc
jbe
mov
mov
lods
sub
push
adc
mov
pop
fs
add
mov
adc
jp
arpl
outsl
hlt
mov
lret
ficoml
dec
mov
into
xor
push
cmp
inc
mov
add
fiaddl
popf
in
push
jle
clc
xchg
addr16
push
in
clc
mov
inc
cld
fld
xlat
jg
popf
and
lret
xchg
pop
add
mov
jp
andl
xor
aad
sbb
inc
sub
stos
ficoml
add
jl
xor
sbb
clc
test
std
out
pop
pop
inc
rcll
adc
xor
aaa
outsl
out
enter
mov
mov
jnp
mov
pop
les
ja
push
shrl
cmp
pop
cmpsb
mov
movsb
mov
push
mov
sbb
add
lcall
popa
mov
leave
pop
dec
xchg
xchg
fxtract
inc
jno
je
int
cmc
lret
adc
fucomi
lea
out
test
xor
xor
or
dec
jmp
mov
push
int
or
pushf
pop
fisubrl
ja
push
sbb
xchg
pop
outsl
test
cld
add
jb
or
and
adc
mov
mov
sbb
stc
add
dec
jl
push
shlb
and
out
lea
xor
repnz
mov
fimull
inc
inc
enter
mov
add
lea
mov
scas
repnz
mov
cmpsb
pop
nop
into
push
mov
scas
mov
lret
sbb
push
into
mov
mov
out
xlat
sub
inc
mov
inc
mov
add
adc
rcr
or
das
test
pop
lret
sarb
mov
xchg
xchg
fdivl
jl
cmp
cmp
pop
andl
hlt
outsl
and
iret
xchg
sahf
scas
push
xorl
push
loopne
in
sbb
adc
pop
dec
hlt
jne
insb
out
pushf
xor
repz
jae
jle
out
mov
inc
add
mov
nop
mov
jl
sahf
fisubrl
pushf
idivb
jbe
and
dec
cmc
dec
loop
callw
adc
push
add
mov
clc
mov
or
add
fldenv
or
pop
fiaddl
push
or
and
iret
fldcw
scas
jmp
pop
inc
xor
pop
mov
ret
xchg
jnp
or
sbbl
sti
testb
test
xlat
movsl
mov
jno
scas
dec
stc
nop
shl
movsl
test
mov
notl
fldenv
imul
xor
pop
aad
repnz
mov
cld
mov
add
push
repz
out
pop
or
insb
push
inc
test
out
call
test
sbb
stos
cmpsl
sbb
scas
pop
lcall
mov
out
xor
daa
pop
rcrl
rol
subb
dec
aaa
repz
mov
inc
js
pop
je
mov
pusha
rclb
mov
scas
pushf
scas
and
pop
into
fists
xchg
inc
icebp
xchg
push
mov
out
cld
insb
pmaddwd
jo
mov
adc
or
fcomps
rol
mov
jle
xchg
mov
dec
mov
lahf
add
cwtl
mov
iret
aas
inc
sub
mov
aam
xor
rorl
mov
dec
ja
push
outsl
pop
pop
and
loope
and
daa
cmp
pop
adc
out
or
aas
outsb
lahf
cmp
sbbl
lahf
inc
ja
dec
test
mov
mov
int3
xchg
imul
jns
inc
data16
in
inc
jl
insb
or
repnz
push
xchg
jg
inc
das
sub
inc
cmp
mov
jns
inc
sub
test
pop
push
mov
lods
jbe
jb
rorl
pop
ja
inc
lret
addl
test
jb
cmp
sbb
cmpsl
mul
xchg
cmpsl
or
mov
lods
push
xchg
push
xor
test
lds
into
iret
pusha
push
into
inc
das
outsb
enter
push
int
aam
cli
imull
pop
inc
sbb
push
mov
sub
jmp
in
aam
nop
shlb
test
xor
adc
fisubs
push
dec
dec
sbb
pop
pop
in
mov
pop
push
stos
daa
dec
jge
icebp
iret
test
push
pop
stos
loop
rcrb
fwait
test
and
das
xor
ss
xor
inc
and
cmpsl
pusha
sub
push
mov
pop
fldt
neg
lcall
mov
mov
adc
jno
repnz
lcall
add
cmc
dec
pop
dec
xchg
xchg
sti
push
roll
loopne
push
scas
data16
mov
xor
sub
jbe
stc
mov
jbe
jg
cmp
lods
jg
ficompl
jo
adc
popf
xchg
sbb
js
jnp
xor
jne
cld
gs
arpl
and
idivl
lcall
das
or
sbb
icebp
test
or
mov
icebp
insb
mov
pop
popf
sbb
addr16
mov
or
rcrb
and
xchg
bnd
arpl
pop
mov
mov
push
adc
je
push
push
scas
mov
lret
test
push
daa
and
mov
xchg
xor
imulb
inc
push
inc
dec
jmp
mov
inc
daa
fldt
outsl
loope
flds
jecxz
aad
cli
hlt
adc
cltd
push
xchg
shr
mov
dec
push
mov
int
loope
test
mov
jl
inc
filds
mov
push
xchg
jno
daa
inc
shll
repnz
incl
in
xor
fdivrs
mov
leavew
repz
inc
lahf
cmp
shll
shll
mov
sub
xchg
sbb
sub
mov
pop
xchg
cmpsl
mull
sbb
lods
dec
push
rolw
mov
leave
mov
cld
push
mov
dec
xchg
mov
lea
sub
mov
add
mov
push
loop
xchg
repnz
pop
mov
fsub
add
adcl
push
fwait
or
pop
adc
jle
mov
and
jg
clc
mov
ljmp
leave
fstps
enter
add
mov
cmpsl
add
and
jae
lea
jo
addb
dec
cmp
mov
aam
daa
mov
inc
shll
and
push
pop
cmp
pop
fisubs
rcrb
stos
icebp
aam
lret
into
rcrl
add
push
and
add
mov
je
jle
xchg
loopne
xchg
stc
sub
or
test
mov
dec
cmp
inc
dec
int3
lock
xchg
and
xchg
out
jmp
js
cs
enter
cmc
add
ss
and
pop
mov
adc
sub
xchg
imul
fs
aaa
or
xor
mov
imul
or
dec
sbb
test
mov
sbb
lds
cmp
orb
ss
movsl
les
movd
mul
inc
or
or
xchg
pop
in
leave
or
sub
frstor
pop
cli
in
and
movsl
sub
testl
xchg
test
data16
shrb
cmp
movsl
inc
popf
aad
ret
jg
ficomps
movsb
lds
rcll
sahf
addl
sahf
psrlw
jo
lods
ror
sub
inc
andl
inc
dec
fdivp
jecxz
add
and
dec
cld
sbb
out
fstl
push
pop
pushf
cltd
dec
and
mov
loope
cmp
pop
xor
leave
adcl
and
jle
into
cld
das
iret
and
lock
adc
mov
and
scas
inc
loope
leave
push
sahf
outsb
mov
xlat
inc
aad
mov
mov
jp
pop
ret
inc
lret
dec
es
cltd
add
push
add
scas
mov
frstor
jge
and
push
add
push
mov
xlat
lcall
jmp
outsl
mov
popa
lcall
push
jb
xor
cmp
jp
sbb
mov
pop
fs
loopne
xor
inc
jp
mov
xorl
xchg
shr
outsb
push
cwtl
xor
lahf
add
mov
push
mov
push
xchg
add
jecxz
fimuls
mov
outsl
ficomps
vpmacssww
lahf
bound
sub
or
xor
push
sub
je
fildl
or
mov
popa
xchg
lahf
hlt
mov
push
call
add
and
arpl
test
mov
mov
scas
push
shlb
mov
xlat
adc
das
hlt
test
rolb
shrl
adc
inc
add
cmp
subb
xor
shlb
cmp
out
or
push
and
dec
lods
cmp
les
push
or
cs
mov
xor
push
subb
push
jge
xchg
scas
xchg
popf
out
xchg
insb
inc
ljmp
rorb
push
ficomps
out
cmp
dec
add
std
addr16
shlb
call
pop
xchg
mov
sub
dec
xchg
push
adc
jo
popa
xchg
add
adc
sahf
sub
fnstsw
xchg
xor
sbb
add
ficoml
sbb
lock
shll
das
mov
in
xor
jge
test
in
xor
push
or
jnp
divb
aad
adc
sub
push
test
adc
out
mov
cmp
xor
fbld
mov
stc
inc
xor
jl
mov
ja
sti
xchg
inc
xorl
pop
jne
and
inc
jno
pop
mov
jmp
inc
arpl
cmpsl
in
jge
popf
out
adc
cli
adcl
inc
fwait
lret
mov
sti
add
pusha
in
push
add
jo
sahf
sbb
and
sub
shlb
jne
sub
rcl
ret
push
aam
pop
es
loopne
lret
pop
dec
pop
js
cmp
xchg
lds
or
inc
cmpsb
test
jnp
fdivrl
adc
outsb
or
repz
push
fs
mov
int3
das
shl
or
push
inc
arpl
into
xchg
cmpb
jl
fistps
xchg
and
jnp
fs
fwait
int
xchg
cmp
test
rcll
push
adc
push
mov
inc
hlt
dec
inc
mov
cmp
jo
pop
mov
scas
out
insl
fwait
out
adcb
cmc
sbb
mov
mov
cli
popa
or
and
ss
int
repz
in
iret
jnp
js
or
gs
mov
int3
xchg
dec
and
in
inc
ret
pusha
movsb
add
pop
adc
xchg
and
gs
arpl
jle
mov
inc
je
or
imul
cvtdq2ps
sbb
ja
call
xor
jp
cmp
push
mov
je
dec
xor
insl
add
fisubl
lret
pop
dec
jbe
and
bnd
mov
xchg
lret
mov
sbb
push
or
or
and
js
jmp
pushf
stc
push
and
fisttpll
inc
mov
xchg
fidivl
lahf
adc
subl
add
jno
and
in
mov
in
shl
cli
wrmsr
inc
and
cltd
lods
lds
fistl
lret
mov
dec
rcll
movsl
lock
jge
xor
mov
repz
mov
lcall
shll
inc
inc
xchg
sbb
cmp
pusha
push
jg,pt
pop
clc
xor
lret
jne
lea
push
xchg
subb
jecxz
inc
cmp
sbb
enter
jns
dec
jnp
nop
sub
mov
xchg
push
pop
push
das
sbbl
imul
test
stos
subb
aaa
fsubrl
pushf
fucomp
sbb
pop
jmp
and
adcb
lahf
jb
cld
cmp
loope
jle
das
cmp
divb
ret
das
ds
jo
roll
fidivrl
and
xor
mov
imul
adc
ss
adc
cmp
pop
mov
lret
add
pop
inc
xchg
out
movsb
shrb
push
pushf
fidivl
cld
jle
out
shll
sub
stos
dec
int3
push
outsb
aaa
push
popl
fists
xchg
pusha
cwtl
inc
call
stc
adc
cmp
out
scas
lret
xchg
sbb
sbb
mov
loope
jg
or
pusha
imul
cmp
clc
push
cmp
mov
ljmp
pusha
cmpsb
pop
loop
inc
shl
pop
push
cltd
pop
jbe
push
pop
sub
bswap
gs
das
mov
sahf
mov
adc
mov
adc
xor
pop
inc
sbb
push
addr16
sbb
aam
ret
pop
sbb
jmp
rorb
push
inc
ja
dec
aaa
jmp
xchg
xchg
shlb
ss
add
push
sbb
sbb
add
je
add
repnz
in
lea
stos
nop
stos
repnz
push
xchg
call
mov
mov
push
test
in
fstp
xchg
in
push
pushf
rolb
dec
mov
mov
push
sarl
xchg
sbb
push
push
cli
lods
sbb
pop
pop
inc
loope
mov
in
or
cs
push
mov
mov
lock
shll
push
roll
push
stos
sbb
adc
pop
xor
xor
lea
sbb
inc
imul
push
repz
lds
pop
pop
xchg
cmp
mov
xchg
lahf
push
mov
xchg
cmp
and
cmp
jmp
push
pop
pop
lcall
xchg
lcall
test
add
test
push
shr
cmp
mov
xor
out
pop
pop
pop
cmp
push
cmpsb
cmpb
cmp
cld
gs
movlps
fists
or
or
popf
cmp
pop
aas
cmp
push
pop
mov
out
dec
push
scas
or
jp
orb
fwait
icebp
imul
push
push
dec
shll
mov
xor
sub
movsl
and
lods
cmp
imul
or
lods
cmp
fisubs
or
jecxz
pop
mov
lahf
pop
icebp
push
inc
ds
por
pop
xor
sub
cmp
fdivrs
inc
jns
jl
outsl
adc
pop
in
shll
cmp
test
sbb
cmp
mov
mov
into
sub
and
sub
push
sbb
mov
inc
pop
ret
popf
or
je
lods
inc
jne
nop
hlt
jnp
js
add
cwtl
iret
push
or
xchg
cmp
mov
push
or
xchg
jns
jno
dec
mov
cmpsl
js
gs
mov
push
test
or
inc
cvtpi2ps
adc
jle
insb
lods
push
inc
loope
sbb
pop
andb
xrelease
mov
cltd
xor
lret
pop
insb
stc
loopne
out
jmp
pop
mov
test
push
fadd
pop
mov
bound
loop
stos
mov
sub
add
pop
jmp
lea
xchg
cmp
pop
xor
cmp
jb
or
and
call
sub
xor
enter
and
inc
popa
inc
movsb
pop
in
mov
mov
jp
in
xor
jmp
nop
xchg
fbld
outsl
aad
pop
das
pop
cmc
jmp
fiaddl
push
adc
cmpsb
fldt
mov
pop
pushf
dec
mov
xor
fdivr
or
dec
mov
lock
push
mov
data16
add
mov
adc
hlt
push
and
daa
fdivrl
xor
popf
js
push
jg
sbb
jp
or
jg
orb
popa
mov
cmpsb
das
dec
add
dec
mov
jmp
test
lods
dec
dec
xchg
mov
into
loopne
pop
aaa
jo
xchg
fadds
mov
lahf
insl
cmc
push
jp
cmp
outsb
jmp
xchg
xor
adc
add
mov
shrl
stc
in
jecxz
movsb
jmp
sub
and
lret
xchg
pop
cmpsb
xchg
dec
mov
mov
xchg
xchg
std
xor
pop
movsb
pop
gs
add
push
mov
loop
pop
arpl
lahf
ds
push
mov
cmp
shlb
jp
cmc
shrl
pop
cwtl
inc
ja
lods
imul
mulb
mov
bound
and
lods
xchg
andb
inc
out
adc
push
sbb
repz
add
xlat
scas
iret
fwait
ret
pop
shlb
test
popa
add
dec
dec
sahf
dec
cltd
lcall
repz
xor
xchg
sbb
mov
sub
jnp
les
cwtl
int3
sahf
mov
mov
jae
movl
add
push
shll
subb
fadds
mov
xchg
jmp
fwait
mov
xlat
movsl
mov
cmc
inc
pop
stc
xor
dec
or
dec
lea
ljmp
adc
dec
in
paddd
pop
imul
jae
mov
xchg
dec
popa
sbb
cmpsl
mov
pop
and
add
out
mov
cmp
sbb
jae
dec
mov
lret
lock
sub
push
inc
and
lcall
rol
xchg
jmp
shll
mov
push
mov
mov
inc
insb
push
cmpxchg
in
pop
testb
incl
out
mov
jp
push
js
pop
push
rolb
outsl
add
adc
jge
sahf
into
jbe
stos
sahf
pop
shll
rolb
jle
jns
mov
fdivrs
sarb
das
stos
push
loop
fsubrp
nop
mov
xchg
insl
jge
push
and
jl
mov
or
loopne
jo
insl
or
pop
cwtl
cld
stc
add
out
add
into
ret
jne
jle
adc
sub
ret
loop
rorb
and
out
repz
jmp
adc
test
and
and
lods
ja
fucomi
mov
pop
sub
inc
mull
cmp
sbb
cmp
and
add
sub
addr16
fistl
lret
adc
pop
fstl
pop
cs
push
fwait
cmp
fsubl
sahf
in
call
pushf
lds
cmp
mov
je
sbbb
js
xchg
or
movsb
mov
sahf
stos
add
adcl
out
mov
shr
cwtl
add
jp
mov
je
or
sub
je
pop
stos
repz
adc
sahf
inc
xchg
leave
mov
cs
sub
push
rolb
push
jecxz
inc
mov
shlb
and
cmp
roll
sub
dec
dec
cltd
push
push
movsl
cli
addr16
xor
arpl
shl
test
or
ds
lock
mov
xor
lcall
sub
es
into
in
shlb
push
test
ficoms
dec
scas
inc
inc
das
inc
adcl
lds
mov
call
es
in
cmp
and
sbb
std
cs
sbb
outsl
mov
inc
stc
add
leave
mov
out
ss
mov
inc
mov
pop
jge
test
sbb
sub
dec
jmp
and
enter
je
fistpl
shll
mov
mov
aaa
stos
jge
pop
daa
out
mov
cmp
mov
mov
xchg
pop
adc
lods
and
mov
ret
xlat
aas
inc
repz
mov
fcompl
mov
adc
fdivr
or
rcll
sbb
addr16
shlb
frstor
pop
ret
insb
pop
cmp
mov
out
out
js
pusha
mov
fsubs
pushf
mov
mov
lods
cmp
shlb
repnz
add
inc
int
adc
cmp
aad
pop
leave
pop
mov
adc
dec
cmpsb
and
sbb
and
cmp
pop
mov
fs
and
or
xchg
test
nop
ja,pt
rclb
mov
fimull
xchg
push
adc
cmc
xchg
fwait
push
dec
inc
fiaddl
add
jnp
int3
pushf
out
popf
add
push
sub
pop
lcall
cmp
jg
mov
xchg
sbbb
nop
rcrb
bound
adc
std
dec
jnp
je
sbb
dec
ds
dec
pushf
cmpsl
ljmp
and
push
pop
pushf
sar
lret
movsl
cmp
and
add
xchg
pop
mov
cmp
lret
add
sbb
lret
mov
and
add
test
xor
push
xor
es
xchg
mov
cmp
and
mov
cltd
out
mov
mov
iret
mov
lock
adc
mov
sbb
mov
lret
add
test
sbb
loop
inc
xchg
cmpsl
sbb
cmc
mov
pushf
ret
adc
push
addr16
cmp
fiaddl
stos
push
mov
sub
inc
jns
mov
fdivr
ret
movsl
xorb
dec
jle
mov
test
sbb
inc
add
pop
push
fwait
mov
aas
in
fwait
mov
or
stc
inc
repz
push
ss
jbe
mov
movsl
and
shrb
daa
test
or
aad
or
aaa
xchg
or
rorb
push
cmp
cmpsb
sti
jmp
shlb
mov
push
xchg
mov
dec
cmpsb
inc
xlat
cmp
pop
jp
sbb
data16
pop
mov
stc
and
add
dec
push
sub
mov
push
loop
push
jp
popa
mov
cmp
push
ja
add
jle
and
mov
jp
sbb
cld
jae
mov
fnstcw
inc
cmc
xlat
shll
or
sbb
mov
fsubr
dec
cwtl
jno
sbb
mov
jns
arpl
dec
outsb
xchg
addr16
cmp
lret
or
js
mov
dec
push
outsl
lret
lret
popf
stos
cmp
or
push
cmp
or
dec
pop
push
xor
mov
dec
pusha
lock
mov
inc
xchg
jnp
xor
adc
sub
imul
out
sbb
sbb
andb
lods
dec
out
pop
fsubrs
jne
and
loopne
jbe
cmp
test
pusha
shrl
cwtl
aas
stc
in
mov
test
xchg
icebp
cmpsw
jmp
jns
fwait
jb
mov
adc
imul
jp
pop
sub
mov
sub
lcall
int
bound
imul
dec
or
rorl
fucom
and
mov
mov
hlt
shll
roll
pop
and
lods
mov
jecxz
sub
adc
pop
xor
pop
pop
dec
mov
rcrl
xor
push
pushl
push
gs
dec
ret
jmp
decl
dec
mov
adc
xor
fnsave
insl
nop
pop
cmp
cli
clc
xor
or
inc
mov
mov
xchg
sbb
inc
mov
inc
jge
push
divl
cwtl
popl
fistpl
imul
inc
popa
movsl
in
std
rorb
insl
sub
jle
mov
mov
rclb
adc
pop
jl
rclb
inc
and
in
pop
daa
xchg
aaa
push
stc
in
dec
add
mov
mov
bound
out
stc
int3
aad
push
pop
lcall
xchg
xor
fisttpll
out
dec
test
shr
addb
in
sub
sbb
or
std
xchg
arpl
outsb
pop
fdivrl
setl
jg
lods
loop
pushf
movsbl
insb
notb
sbb
sub
sbb
mov
jmp
mov
jp
aas
jl
adc
ss
cmp
shll
cmp
pop
in
out
add
clc
aam
and
pop
xchg
mov
cwtl
aas
or
add
in
add
and
pop
mov
repz
in
mov
fst
dec
je
inc
das
dec
call
mov
sahf
mov
mov
dec
in
testl
aas
addr16
lock
add
mov
int3
out
sti
hlt
decb
or
jb
lcall
xchg
or
sbb
sbb
mov
or
imul
fwait
pop
pop
sbb
mov
std
jecxz
gs
pop
push
jnp
xchg
sub
pop
test
push
gs
push
addb
fstl
ficoms
jno
jmp
xor
add
mov
jle
notl
loope
shrb
inc
pop
xchg
cmp
push
sbb
in
rolb
pusha
cmp
out
mov
loope
dec
inc
inc
inc
stc
loope
les
mov
sub
mov
xchg
cli
adc
push
sub
scas
into
push
pop
mov
and
dec
cmpsl
jmp
shll
cld
push
inc
mov
add
dec
xor
cmpsb
fs
loop
sbb
icebp
sub
dec
aad
enter
shrb
cld
shll
jl
aas
push
adc
cmc
bound
fnstenv
inc
or
rcl
aas
sbb
popf
and
push
pop
imul
jbe
lds
jnp
in
jo
aas
es
test
dec
std
mov
loop
test
aaa
icebp
sub
cmp
dec
xor
cmp
pusha
sbb
dec
mov
scas
out
lock
fnstcw
dec
int
jl
xchg
enter
and
in
lahf
cmp
cld
test
cs
pop
cwtl
inc
inc
popf
or
sub
rorl
repnz
insb
inc
jno
cmc
pop
push
repnz
or
mov
arpl
jae
filds
jno
pusha
or
data16
xlat
stos
mov
nop
shl
insb
aad
push
mov
xchg
pusha
out
rol
sub
or
push
or
adc
mov
repz
mov
in
mov
cmp
fcompl
push
aad
iret
sti
push
jg
aad
and
inc
int3
sti
cmp
and
decl
repnz
push
sbb
js
into
cwtl
dec
out
std
das
sbb
jge
xchg
cmp
adc
imul
gs
jmp
xchg
test
xlat
shl
sbb
cmpsb
rcrl
and
mov
pop
mov
fdivl
gs
pop
inc
repnz
pop
cmpsb
pop
jo
push
and
mov
aas
pop
mov
cmp
cmp
xchg
rep
lahf
xchg
fsubr
mov
imul
jge
mov
mov
ret
test
push
notl
xor
fdivl
aas
and
ret
jp
sub
in
popa
loope
pop
cli
insb
mov
and
aas
or
test
loop
insl
fnstsw
pop
push
sbb
scas
or
jle
jmp
jnp
dec
iret
lcall
fisubrl
inc
outsb
pop
and
mov
subb
sub
xor
js
mov
add
call
pop
jecxz
dec
mov
push
push
dec
iret
test
inc
push
aam
in
in
hlt
js
mov
inc
and
fisttps
mov
pop
xchg
stc
dec
cwtl
xchg
pop
into
mov
nop
or
mov
adc
mov
pop
add
push
test
aad
cmpsl
mov
pop
pop
mov
mov
mov
sbb
jecxz,pt
jae
push
decb
mov
jle
sar
lods
lock
int3
fs
inc
aaa
jbe
lret
movsl
adc
subb
out
sarb
push
nop
push
repz
fs
push
and
loopne
dec
loop
fwait
push
ror
fisubs
popa
mov
sbb
loopne
mov
adc
pop
test
std
fs
cmp
in
iret
outsb
inc
mov
pushf
lock
adc
ljmp
xchg
sti
outsl
mov
loop
jnp
sahf
cmpsl
fs
jecxz
inc
repnz
inc
cmp
icebp
xchg
movsl
aaa
mov
jo
cli
inc
xor
lahf
sub
lock
add
loopne
leave
scas
mov
fildll
cmp
ds
add
mov
xchg
jecxz
imul
mov
sti
sti
je
cmp
mov
sbb
or
cli
jp
jmp
pushf
pop
jge
adc
sbb
push
bndldx
mov
push
mov
pop
jmp
jge
fst
mov
and
pop
add
cmp
xor
dec
inc
pusha
adc
pop
push
stos
int
int
xor
mov
jo
jl
into
test
sbb
sahf
push
mov
jmp
mov
cwtl
sbb
and
mov
sbb
adc
push
pop
and
push
inc
out
int
fisubs
fisubl
les
jg
mov
or
mov
cmp
mov
mov
and
cmp
test
xchg
inc
fstps
ljmp
xor
xchg
add
add
mov
cmp
fisttpll
adc
dec
cwtl
sub
iret
bound
test
andl
sbb
pop
mov
or
pushf
xlat
das
push
xor
popa
mov
cli
mov
daa
jb
ret
test
xchg
add
mov
ljmp
push
or
insb
push
add
push
jl
inc
push
xor
repz
in
jae
or
xchg
cwtl
fsubr
divl
js
cmp
movb
clc
lret
pop
add
jg
lea
lds
stc
es
pop
sub
std
je
sbb
pop
stos
xchg
cs
or
jp
and
leave
arpl
mov
cmc
fmuls
adc
lods
std
mov
fcomps
ja
jp
cmc
sbb
cltd
adc
or
push
add
shlb
dec
in
movsl
and
pop
daa
jg
xchg
sub
adc
int
mov
test
es
fisubrl
imul
fstpl
xor
in
inc
sub
ret
push
xchg
push
cltd
loope
or
loop
popa
cld
mov
fnstcw
sti
push
or
lods
in
rcr
cmp
loop
jno
jae
int3
push
hlt
fs
add
cmpsb
mov
clc
popf
nop
cwtl
or
adc
lds
cmp
jp
lret
jl
lahf
mov
rcll
xor
in
sub
lods
aad
iret
fiaddl
roll
dec
fwait
mov
sub
adcl
xchg
das
cmp
push
loope
test
xor
flds
push
push
mov
adc
int
mov
arpl
pop
aad
pop
jo
add
mov
cmp
pop
mov
stos
pop
ficoml
idiv
pusha
add
and
push
pop
jg
out
test
nop
cs
push
and
scas
and
mov
inc
mov
adc
pusha
adc
inc
lods
mov
xor
pop
inc
out
cmp
loop
sub
xchg
insl
mov
mov
jbe
push
mov
in
mov
or
sub
pop
hlt
daa
jmp
sbb
int
sub
ret
sub
or
movsl
pushf
stos
or
addl
xchg
inc
or
cmp
push
jo
jp
mov
fs
sbb
stos
mov
fwait
repz
push
jl
mov
or
imul
pop
add
insb
sub
je
push
cmp
xorl
push
dec
test
cwtl
pop
out
inc
mov
sub
cld
adc
xchg
inc
std
xor
insl
cmc
mul
push
or
bound
leave
imul
push
sub
or
dec
dec
ja
mov
cmp
imul
mov
pop
dec
xlat
inc
mov
push
lods
and
aas
shl
add
push
xor
mov
ss
call
enter
jae
outsb
mov
jae
adc
repz
sub
adc
mov
int3
and
jb
xchg
test
add
inc
sahf
leave
xchg
xor
mov
sbb
cmp
mov
test
push
mov
dec
inc
pushf
pop
test
dec
pushl
xchg
mov
lods
clc
das
sub
jecxz
test
sbb
sub
in
sbb
push
js
cld
or
fildl
in
and
ds
adc
out
dec
sbb
daa
int3
in
cmp
in
std
pusha
dec
fcoms
xor
mov
lock
jmp
decb
in
push
adc
jg
adc
or
xor
dec
or
mov
sahf
jb
bound
lods
sbb
aaa
xchg
add
pop
int3
adc
mov
das
mov
push
pop
ds
dec
sahf
aaa
repnz
ffree
cmp
or
jmp
jbe
xchg
movsb
das
adc
popa
iret
pop
sbb
pop
lods
pusha
mov
add
lret
cmp
mul
jmp
adc
mov
pop
push
in
int
mov
loope
aad
mov
xchg
xchg
sub
bound
ret
iret
adc
incl
sub
fs
cmp
pop
push
sbb
fdivrl
mov
mov
sbb
add
xchg
icebp
add
popf
outsl
daa
or
pop
inc
jo
cmc
add
mov
test
bound
push
push
mov
cs
and
push
imul
mov
sub
fsubrs
loop
cmp
inc
push
nop
push
adc
jp
shll
cmp
sub
cmp
cld
mov
int
adc
scas
rolb
das
pop
jbe
das
jbe
mov
scas
roll
sub
fisubrl
push
jne
sbb
pop
mov
cmp
ffree
or
fcmovb
fstps
and
jge
or
jp
aaa
or
mov
adc
push
in
int3
stc
fnsave
popf
addr16
mov
nop
xor
aaa
xor
jnp
cld
pop
adc
sbb
ret
adc
xchg
inc
stc
stos
outsb
movsb
mov
cmp
icebp
add
or
cmp
cmp
sub
mov
push
cmp
dec
sub
imul
sbb
pmulhuw
ds
int
push
mov
add
inc
or
mov
jns
xchg
inc
adc
and
das
or
cs
sbb
jo
sbb
pop
imul
fndisi(8087
cmc
call
cmc
mov
enter
loopne
mov
xor
cmp
sub
lds
mov
mov
negb
int3
or
xchg
or
fidivrl
repz
out
xchg
ficompl
sub
cli
and
add
shrl
cli
pop
sbb
jo
and
in
popf
or
jge,pt
ret
fyl2xp1
push
call
push
shl
clc
xchg
mov
xchg
xor
pop
imul
inc
idiv
fists
fwait
lret
popa
fidivrl
ret
in
stos
mov
cmpsb
jns
xlat
push
cs
sub
mov
sahf
and
push
fisttps
jnp
inc
cmp
push
xchg
add
or
jl
sbb
imul
stc
mov
lods
cmp
stos
icebp
jae
imul
rcr
lods
sbb
xchg
loope
sbb
into
pop
pop
or
test
ror
pop
iret
dec
add
xor
sbb
mov
pop
leave
in
or
hlt
mov
xorl
ds
test
dec
adc
xor
pop
addr16
xor
mov
gs
cmc
adc
adc
test
loope
mov
test
dec
mov
and
bound
sbb
loope
lret
cmp
sub
ss
pushf
rolb
sub
jmp
add
in
insb
mov
jmp
das
cmp
jmp
sbbl
mov
push
xchg
inc
xchg
mov
cmpl
pusha
and
repz
sti
xchg
aam
inc
movsl
mov
inc
xor
xor
ds
xchg
jl
idiv
adc
and
push
jle
lds
inc
dec
lcall
inc
es
xchg
cmp
adc
into
and
sbb
jno
pop
lahf
xchg
add
je
adcl
mov
adc
xchg
add
mov
int
dec
adc
push
or
sahf
in
into
nop
adc
das
ljmp
jmp
xor
jle
xlat
xor
arpl
mov
repnz
pop
adc
loope
test
mov
sbb
xor
jnp
jg
lds
pop
daa
add
ss
pop
pop
das
jae
inc
pushf
push
fcom
clc
outsl
mov
lret
mov
xchg
in
fsubr
icebp
rorl
lahf
xor
pop
xor
fisttpl
mov
das
stos
in
dec
push
add
mov
lahf
sbb
cmpsb
lock
cs
dec
jbe
jmp
inc
xor
cmp
lds
es
pop
mul
outsl
lcall
or
ds
pop
jb
iret
jbe
cmc
pop
jne
stos
sub
sub
or
scas
lret
popa
xor
mov
xor
scas
jecxz
daa
hlt
loope
mov
jg
xchg
xchg
bound
ffree
xchg
mov
xchg
and
xor
mov
pop
loop
or
out
movsb
ret
in
in
mov
pop
xchg
popa
pop
push
dec
cmp
stc
pop
ret
or
enter
inc
aam
lcall
sar
or
cwtl
js
dec
inc
andb
sub
jg
cmp
mov
sahf
mov
rcl
mov
outsb
ja
ja
sahf
in
lods
addr16
mov
fwait
xchg
sbb
in
out
mov
scas
pushf
icebp
push
pop
out
push
fldlg2
in
das
sahf
outsl
jmp
push
push
sahf
push
jecxz
cmc
mov
stos
push
or
add
mov
pop
movb
cmpsb
int3
jg
mov
mov
push
mov
push
loope
sub
cli
je
out
inc
inc
imul
cs
test
xchg
iret
pop
lock
into
repz
rcrl
pushl
loopne
push
test
and
push
in
mov
xchg
addr16
fnstenv
dec
outsl
inc
and
jle
push
andb
push
mov
mov
loope
pushf
cltd
xchg
sarb
addr16
cmpsl
lds
or
push
inc
sub
pop
xchg
loopne
inc
push
mov
btr
aam
xchg
and
and
mov
cli
pop
or
into
push
mov
push
popa
and
lret
fisubrs
inc
fdivrl
inc
jo
push
lods
xchg
mov
das
xor
pop
adc
xchg
arpl
jne
jmp
sub
xor
popf
lret
pop
mov
inc
add
xchg
adc
xchg
xchg
push
add
dec
rcrb
or
inc
xor
and
icebp
rcl
or
jle
mov
inc
dec
ss
fisubs
les
sbb
mov
push
sub
cld
jns
lods
shrl
outsl
dec
stos
loopne
push
js
mov
data16
jns
pusha
xchg
icebp
pop
mov
xchg
add
lret
adc
dec
jle
xchg
pop
xchg
rorb
test
cwtl
jp
xchg
jae
arpl
pop
cwtl
fwait
pop
repz
pop
inc
sbbl
outsb
sbb
iret
imul
pop
jbe
mov
cmp
fs
push
pop
sub
loope
hlt
xlat
mov
push
mov
neg
cmp
loop
daa
xor
ffreep
mov
cmp
cwtl
sbb
cltd
mulb
divl
insl
fldl
xor
adc
shlb
push
fistps
xchg
adc
mov
in
imulb
data16
ret
loop
stos
xor
shlb
adc
dec
sub
out
nop
mov
popa
sahf
pop
mov
xchg
add
mov
out
ljmp
lods
adc
hlt
xchg
addl
sbb
std
add
sub
sahf
mov
cmp
imul
add
addr16
mull
insl
and
scas
shll
mov
add
int
daa
xchg
imul
andb
mov
jp
push
sub
stos
icebp
inc
lret
jo
pop
mov
scas
cmpsl
mov
cmpsb
scas
push
add
mov
into
push
test
inc
test
pop
push
sub
fisttpll
out
leave
shlb
aaa
xchg
pop
dec
fiadds
cli
adc
dec
rol
add
sub
stos
insl
or
mov
popf
std
rclb
gs
out
mov
jg
imul
xor
dec
outsb
push
mov
mov
xor
xchg
notl
hlt
mov
clc
mov
cmp
sbb
and
mov
jno
jle
cld
dec
fiaddl
daa
pop
negl
push
mov
jno
sbb
iret
adc
dec
pop
pop
ficompl
das
cmpl
jl
dec
inc
std
div
fs
push
xchg
and
push
inc
fcomp
xor
sti
sarb
dec
loopne
mulb
cwtl
jge
add
add
lods
jle
sbb
xchg
data16
mov
add
out
mov
ret
fiaddl
movsb
xchg
adc
add
add
sti
repnz
lock
xchg
hlt
out
push
dec
fldenv
shll
dec
jmp
push
loope
sbb
add
dec
mov
out
arpl
lret
xor
call
mov
mov
dec
out
inc
sahf
pop
arpl
cmp
roll
add
subl
xor
mov
pop
add
cmc
pop
repz
nop
mov
pop
pop
test
cmp
in
add
dec
xorb
lods
imul
xor
testl
push
xchg
sbb
cmp
call
cmp
sub
pop
gs
lea
in
fbstp
or
repz
mov
mov
sub
xchg
sahf
outsb
pop
push
jb
nop
inc
lcall
aam
shl
pop
sub
je
xchg
call
mov
sub
incb
ds
cmp
cmp
int
adc
cmp
into
outsb
inc
mov
push
pop
into
mov
sbb
rcll
dec
inc
inc
push
sub
adcl
mov
or
cmpsl
mov
dec
sti
xchg
xor
lds
loop
dec
outsb
pop
fstl
hlt
mov
inc
adc
addr16
mov
jns
rclb
out
cmc
add
mov
inc
mov
xor
or
and
jns
or
xchg
test
xchg
sbb
rcl
pusha
sub
mov
shrl
clc
shrl
or
and
mov
ljmp
mov
mov
or
mov
loopne
push
movsl
push
lret
stos
xchg
fld
lret
mov
jo
aaa
stos
clc
popf
arpl
imul
sbb
inc
jnp
mov
dec
dec
test
cmpsb
shl
inc
pushf
pop
jae
sarb
inc
pop
cmc
mov
sub
push
clc
pop
mov
xchg
out
fsubp
dec
and
jle
xchg
out
cld
jg
sub
sub
fdivs
int3
inc
fistpll
mov
adc
xchg
scas
loopne
aaa
adc
jmp
lcall
popa
movsb
insl
es
repz
inc
inc
popl
dec
cmp
sbbb
movsb
loop
pop
loopne
lret
mov
aaa
test
mov
mov
movsl
popa
inc
fsubl
push
xchg
mov
mov
dec
cmp
stos
pop
ss
xorb
xorl
mov
call
aaa
cltd
jo
jne
test
or
jge
xchg
push
mov
pop
push
sahf
cmpsb
call
fisubrl
xchg
xor
leave
jbe
xor
mov
inc
pop
loop
fildl
shl
and
mov
dec
pop
mov
mov
add
sbb
xchg
fadds
jecxz
jno
mov
xor
imul
into
mov
mov
pop
in
addr16
sbbl
or
std
inc
insb
push
imul
push
lds
movsb
mov
push
in
imul
xchg
hlt
sub
mov
scas
pop
sbb
adc
sti
sub
mov
add
jnp
loope
scas
add
push
fistps
add
cmp
pop
testl
mov
push
mov
cmpsl
popa
and
xor
call
mov
mov
int
and
sub
outsl
rclb
adc
sub
xchg
push
xchg
orb
xchg
or
sub
xchg
lret
adc
gs
and
mov
sbb
es
inc
push
sbb
jmp
aas
out
fwait
out
fsts
jbe
aam
pop
pop
adc
push
call
adc
lcall
sub
hlt
jmp
jne
lcall
out
jns
test
pusha
daa
cmc
aad
out
cmp
sti
inc
jecxz
gs
rorb
push
dec
sar
je
pop
lahf
sub
push
push
mov
call
leave
arpl
leave
cmpl
mov
popa
pusha
sub
in
movsl
fcmovbe
dec
mov
and
xor
into
fdivl
or
mov
xor
fdiv
dec
fwait
es
adc
jge
jp
js
sbb
push
sub
jg
dec
mov
in
adc
lods
xchg
xor
dec
fwait
mov
mov
in
add
hlt
adc
stos
scas
dec
nop
jns
insl
adc
cli
aam
scas
mov
push
jns
jbe
fs
mov
ja
inc
and
pop
cmp
xor
aas
jbe
mov
xchg
sarb
push
jp
sbb
in
xchg
inc
sbb
loope
push
decl
test
ret
mov
jmp
insl
adc
je
and
jmp
clc
loop
iret
mov
or
jl
jbe
dec
push
int
inc
sbb
mov
nop
cmpsb
sbb
pop
call
mov
push
cwtl
xor
test
les
inc
into
test
sbb
fsts
xchg
jl
mov
scas
mov
xchg
sbbl
lea
sbb
movaps
rol
pop
jnp
xor
and
xchg
faddp
insl
mov
dec
cmp
lock
aaa
push
jne
shrl
inc
mulb
jmp
pop
sub
cmpsb
push
fdivl
divl
sbb
dec
jp
ja
in
inc
adc
mov
and
daa
xor
push
lock
mov
xor
mov
add
ror
jne
aad
test
scas
sbb
cld
sti
es
out
push
pusha
shlb
test
call
adc
loop
movsl
or
jecxz
js
push
jnp
ljmp
sbb
test
inc
roll
mov
loope
repz
and
sbb
repz
mov
pop
lahf
jae
mov
cmp
lods
shll
sub
stc
fsubrl
xor
clc
cs
and
mov
mov
pop
cmpsl
lds
sbb
int
jg
add
mov
pop
leave
daa
push
addb
mov
pop
pushf
outsl
test
fdivl
push
addr16
mov
or
gs
stos
pop
js
sbb
xchg
pop
ret
or
sbb
sub
dec
test
sahf
sub
int
sub
cmp
movsb
dec
lea
into
movsl
dec
mov
push
sub
lods
xchg
jne
jns
xchg
lea
pop
sub
test
push
and
mov
sub
gs
adc
mov
jne
rolb
add
or
mov
aad
sbbb
and
aam
inc
cli
or
pop
and
inc
xchg
pop
push
jns
out
nop
jge
std
sbbl
sar
jge
cmp
cmp
jp
pop
lret
xor
addl
fdivr
inc
push
aas
add
sbb
in
cmpsl
mov
jbe
inc
or
inc
ljmp
pop
loopne
mov
pop
push
andl
pop
aad
int3
xchg
sar
dec
jo
hlt
add
sbb
push
ds
loop
xor
push
sbb
push
lret
push
jnp
lea
and
sbb
lds
mov
shrb
test
cltd
xor
push
js
xchg
scas
icebp
fistl
in
call
mov
test
or
dec
test
imul
cmp
clc
add
fldt
dec
mov
bound
xor
mov
divb
test
xchg
push
dec
mov
inc
sub
mov
add
decl
dec
cmpl
into
mov
pushl
mov
popa
sub
bound
bound
adc
jecxz
iret
or
sub
mov
pop
jno
sub
add
inc
loope
push
and
inc
lock
mov
aas
sarb
pop
sub
repnz
shrb
fadds
lcall
fsubrl
xor
clc
mov
insb
mov
mov
movsl
or
xchg
xor
out
xchg
pop
les
pop
pushf
out
les
sbb
push
popa
sbb
imul
das
jecxz
stos
pop
xorb
mov
jp
adc
ja
xor
loopne
imul
ss
fwait
sub
subb
lea
mov
adc
inc
pop
xchg
outsb
mov
imul
pop
fcoml
cmpsb
adc
dec
xchg
lcall
mov
mov
in
mov
push
push
fs
loopne
and
jne
xor
rcrb
jmp
orb
or
inc
pop
cli
or
imul
insl
les
lcall
cld
push
pop
pushf
movsl
rol
sbb
lods
divb
mov
jae
xchg
or
test
add
inc
jg
pop
jo
mov
adc
inc
and
lcall
mov
xor
lret
outsl
cltd
pop
dec
lret
ret
sbb
fcmovb
push
nop
pop
adc
imull
mov
fs
filds
or
pop
insb
sbb
pushf
mov
xor
int3
cltd
arpl
fcomps
lret
das
inc
xor
cmp
push
sti
sarb
mov
popf
push
jmp
dec
pop
jne
fstps
loopne
fst
cmpsb
out
pushl
lods
out
testb
test
pushfw
ja
lret
inc
test
sbb
lock
mov
test
pop
imul
inc
ljmp
push
fwait
addl
outsb
dec
xor
mov
or
push
sbb
or
lret
push
mov
mov
pop
nop
fildll
xchg
jbe
mov
add
loope
inc
lcall
arpl
insl
inc
add
or
jne
cltd
or
adc
hlt
push
icebp
fidivl
stc
inc
adc
mov
pop
xchg
out
roll
jg
jae
xchg
pop
ret
mov
cmpsb
jp
pusha
pop
mov
add
mov
shll
repz
outsl
outsb
mov
lods
jg
and
sbb
ret
ljmp
in
cmp
jne
hlt
stc
mov
pushl
cli
hlt
aam
dec
ret
leave
pop
aaa
outsb
ss
sbb
std
push
negl
adc
outsl
jno
mov
rorb
mov
push
cmp
push
xor
mov
in
mov
call
add
sbb
loopne
int
clc
rolb
cmp
les
mov
call
mov
rolb
push
out
popf
nop
cmp
push
xor
push
jb
mov
movsl
mov
pop
scas
fcomip
pushf
or
xor
adc
xor
jmp
imul
inc
and
es
repz
jnp
je
adc
pop
mov
shlb
sarl
aad
cmpsb
fs
ds
xchg
jb
mov
sub
or
adc
outsb
int
jb
inc
jle
mov
lods
imul
das
fistps
sbb
mov
pop
testl
shll
mov
and
stos
jae
sarl
mov
fcompl
enter
loope
pop
dec
xchg
and
xor
jns
les
xchg
jb
push
and
lods
sahf
in
fidivrl
inc
rol
xor
pop
cmp
lock
loope
sbb
mov
daa
jnp
cmp
sbb
inc
and
or
notb
fmull
call
adc
dec
push
push
cwtl
and
jg
adc
fistpl
fldt
add
xchg
or
xchg
xchg
and
shlb
les
mov
adc
jecxz
dec
pop
in
cmp
mov
adc
out
fdivp
mov
or
pop
xor
addb
xchg
sub
dec
pop
jle
sahf
xchg
out
lods
adc
movsb
add
lock
xchg
test
add
mov
sbb
sub
imul
and
imul
das
lds
enter
std
xor
xchg
rcl
popf
out
bound
push
andb
in
ja
ljmp
lcall
dec
cmc
xchg
data16
test
mov
pusha
pop
inc
lahf
jns
pop
fildll
inc
daa
inc
hlt
out
addr16
mov
inc
stc
test
pop
jnp
daa
aas
add
out
repnz
orl
outsl
push
daa
and
inc
loopne
stos
xor
lds
stos
fisttpll
jbe
push
jmp
cmpsb
outsb
adc
mov
mov
iret
arpl
ljmp
fwait
mov
pushf
ja
movb
in
inc
lods
mov
and
xchg
jnp
lret
pusha
in
mov
sbb
jno
sub
and
movsl
icebp
fucomp
aas
pop
les
insl
push
and
pop
pop
shlb
in
push
fdivrp
push
dec
xchg
and
mov
in
icebp
mov
inc
movsl
mov
je
fcmovnb
xchg
test
mov
adc
movsb
lods
bsr
mov
pop
lret
loop
int3
sub
call
dec
mov
ljmp
and
adc
mov
stos
sbb
push
mov
test
insl
out
or
movsb
lret
inc
xlat
lcall
insl
add
daa
push
cmp
push
andb
cmp
sub
pop
inc
jnp
outsl
lcall
call
jae
xchg
xor
jg
cmp
inc
xchg
cld
cwtl
push
jne
lcall
mov
sub
cltd
xlat
test
add
sar
adc
dec
or
loop
mov
fwait
xchg
inc
aad
dec
test
jle
push
bnd
lock
xchg
std
xchg
notb
testl
es
xor
jmp
or
xchg
inc
into
and
rolb
cmc
or
dec
inc
push
mov
xchg
cli
cmp
pop
outsl
jae
bound
push
cmp
in
inc
add
sub
subb
dec
pop
xlat
nop
xchg
dec
pextrw
sti
jne
scas
js
xor
out
sbbl
lcall
dec
lahf
and
ljmp
cmc
inc
je
xchg
adc
icebp
xor
scas
inc
aad
xor
add
xor
adc
popa
inc
scas
dec
addr16
fwait
and
and
aaa
cmp
and
dec
hlt
adc
test
mov
fldl
movsl
mov
add
imul
adc
ss
cmp
repz
dec
push
repz
push
xor
pop
push
jnp
cmp
jmp
xchg
sarl
paddw
or
jo
pop
lahf
inc
dec
xchg
push
cwtl
pusha
jns
stos
sahf
fdivrp
add
and
iret
cltd
pop
sub
or
xchg
jae
sub
leave
out
sbb
xor
or
jecxz
scas
jecxz
mov
ret
xchg
inc
mov
jmp
push
addb
ljmp
adc
sbb
and
ret
sub
les
jne
push
mov
fs
insl
idivb
mov
mov
jp
cmp
stos
clc
sti
loope
mov
inc
pop
fistl
cmp
and
adc
repz
stos
add
lahf
cmp
cmc
aam
xchg
mov
sbb
xor
pop
shlb
push
test
fs
jo
mov
push
shl
outsb
icebp
dec
jmp
dec
mov
sub
xchg
adc
loope
sbb
movl
cltd
lret
inc
les
ja
insb
jbe
mov
mov
mov
adcl
addr16
loopne
add
fisubl
xor
xchg
cmp
in
and
push
dec
add
clc
pop
jmp
dec
adcb
fistps
pop
mov
mov
adc
sbb
jne
mov
push
and
sbb
icebp
mull
pushf
push
push
das
jae
jecxz
fwait
and
sub
hlt
adc
pop
xor
fists
hlt
andb
push
push
mov
fbstp
xchg
mov
cmp
and
in
sub
orb
leave
loopne
dec
lea
push
outsb
out
or
xor
mov
fidivrl
jb
in
shll
xor
pop
and
fadds
dec
jo
fwait
stos
test
pop
push
pushaw
lds
sub
pop
lret
adc
or
imul
pop
hlt
add
jno
in
jae
lret
js
dec
sti
pop
mov
daa
imul
mov
pop
push
cmp
xchg
es
jb
sarl
data16
sahf
jl
repz
adc
or
out
addl
mov
adc
xchg
sbbb
mov
add
stos
data16
ja
dec
lock
lret
inc
pop
cmp
push
sub
jp
ds
sub
jp
stos
test
cmp
jb
push
dec
in
repnz
pop
or
cltd
out
dec
stc
in
ss
xchg
sarl
sti
adc
test
out
aad
push
mov
movsl
gs
loope
cmp
ret
push
and
sti
and
test
xchg
aaa
jmp
sbb
jle
or
aam
sub
ret
popf
not
xor
aaa
mov
jae
lods
outsb
outsb
xchg
push
cmp
mov
stc
int
ret
in
clc
addr16
jle
inc
mov
cmp
into
sbb
or
xor
cmpsl
test
movsl
leave
addr16
pop
aas
xor
hlt
add
push
movsl
sub
addr16
ret
mov
cmc
addr16
or
mov
fnstsw
dec
jl
outsb
ljmp
cltd
sbb
leave
js
sub
cmp
add
lods
aas
inc
push
pop
add
mov
fbstp
cmp
stos
xor
xor
fisubrs
mov
jb
cli
and
and
dec
test
sbb
cld
cmpsb
out
stos
mov
fdivrs
dec
lds
ss
cli
xchg
mov
jmp
sti
jae
shl
imul
mov
stc
pop
or
sub
cli
adc
or
das
add
shll
fisttps
scas
aaa
pop
jb
mov
add
xchg
or
ds
outsl
adc
cli
pop
sahf
or
out
test
inc
out
cmpb
hlt
shll
pop
sbb
iret
fdivs
jb
repnz
pusha
insb
push
fidivrl
out
repz
sub
push
and
mov
sbb
hlt
jmp
in
jb
iret
insb
push
popa
jmp
cmpsb
or
cmp
test
mov
fsubr
arpl
jns
int3
shrb
pop
iret
outsl
push
pop
int3
xorl
out
loope
mov
pop
mov
dec
je
and
inc
cli
fs
add
inc
lret
cmp
fst
cs
and
or
xor
pop
nop
loope
call
mov
jne
push
stc
pop
cs
mov
mov
fistl
fcompl
push
andb
lret
movsb
add
adc
cltd
inc
jbe
or
jno
and
imul
jl
repz
mov
add
les
ret
adc
push
sbb
pop
rclb
scas
rcrb
push
dec
scas
sub
bound
insb
dec
fidivrl
and
mov
fwait
repz
repz
push
jns
ss
push
aad
andl
insb
adc
sub
call
lret
fstpl
addr16
fs
and
xchg
pop
fdivrs
adc
bound
test
push
xchg
adc
or
adc
ret
shlb
aaa
sub
enter
fstl
mov
push
loope
in
sti
add
push
lahf
je
sub
filds
jecxz
and
aas
aad
push
dec
mov
sbb
jnp
int
jno
add
or
in
adc
xlat
ss
movsl
ror
scas
or
adc
sub
pop
repnz
lahf
mov
mov
inc
xor
add
sub
gs
add
test
sti
ljmp
test
or
lcall
cmp
xchg
ret
xor
push
pushf
adc
dec
out
sbb
cli
hlt
inc
dec
test
call
sbb
xlat
stos
mov
sbb
int3
stc
pop
xchg
repz
jge
sub
add
mov
cmp
jmp
out
lods
mov
dec
xor
ficoml
xchg
ret
jb
xchg
lcall
fsubs
push
pusha
dec
icebp
pop
arpl
in
enter
mov
xor
mov
jo
add
test
scas
mov
cmp
cs
dec
loop
xor
nop
adc
mov
or
ja
inc
add
fwait
mov
pop
sub
loopne
mov
add
push
pop
aad
or
push
xchg
cmp
push
push
mov
loopne
mov
jns,pn
adc
adc
imul
xor
xor
push
movsb
stc
and
xor
xor
fwait
xchg
stos
and
mov
es
xchg
ret
stc
adc
pop
inc
pop
in
push
sub
aam
mov
roll
mov
add
mov
fistpl
popf
mov
sub
jns
push
addr16
mov
push
pusha
movsb
std
push
push
adc
add
or
mov
sbb
and
jmp
pop
sar
add
test
sarb
pop
cmp
xchg
cmpsl
addl
nop
mov
pop
push
push
cmp
and
and
cli
jge
insl
push
cwtl
fs
ret
int3
jb
test
jg
outsl
ds
aam
dec
mov
push
fs
sbb
xchg
fwait
and
test
push
sub
jne
sti
movsl
iret
int3
sub
xchg
sbb
loopne
ret
call
and
cmpsl
jb
add
adc
inc
stos
lods
inc
mov
xchg
pop
std
out
xchg
mov
out
in
fildll
and
jnp
add
xchg
sbb
popfw
outsb
dec
enter
scas
adc
mov
jp
jb
cmp
lahf
movsl
dec
pusha
add
push
nop
mov
cmpsb
mov
test
mov
mov
and
pushf
and
cmpsb
adc
mov
mov
loop
xchg
insb
lds
mov
adc
cld
and
xlat
jb
test
loope
push
or
je
pop
je
pop
fsubrp
adc
imul
jge
aad
inc
and
loope
mov
sbb
xor
pop
popa
jns
ret
stos
cmp
int3
or
dec
popf
insb
inc
mov
sbb
sbbl
fbld
enter
sarl
es
or
cmc
add
jge
pop
add
xor
push
scas
pop
sbb
mov
and
pushf
stos
or
add
pusha
movhps
pop
insb
andl
cli
mov
push
in
ljmp
sub
cld
loopne
dec
push
and
pushf
dec
add
out
cmp
sbb
lods
add
insb
bound
mov
cltd
arpl
fisttps
popf
nop
or
mov
ret
dec
mov
pusha
pop
sti
jne
pop
ss
sub
mov
and
fsubr
or
inc
add
std
arpl
mov
cld
xchg
lret
push
dec
sub
xchg
cmp
push
aad
or
je
inc
sbb
adc
testb
pop
fisttpl
jnp
mov
je
fwait
cmp
lds
xchg
mov
add
orl
dec
pop
fwait
and
cmp
mov
cmp
cmp
imul
fs
and
out
repnz
or
jns
mov
add
rcrl
leave
jecxz
ljmp
test
fimuls
and
pop
ret
cmp
sbb
out
int3
xor
adc
xor
adc
adc
add
rcll
gs
adc
mov
xchg
outsl
adc
xlat
xor
lods
ret
in
mov
enter
sbb
test
das
repnz
lret
add
lahf
nop
aam
xchg
sahf
ja
lret
addr16
aas
negl
scas
adc
cmp
cwtl
ret
int
mull
fisttpl
jg
jg
xchg
call
cld
in
mov
bound
xor
ficoml
dec
pop
cld
sub
mov
push
xor
out
icebp
femms
outsb
mov
inc
lahf
push
lret
cltd
xchg
sti
mov
or
mov
pop
fidivrl
leave
fiadds
cmp
lds
shrb
imul
fdecstp
lret
lret
repnz
xor
adcb
pop
push
push
cmp
cld
addl
pop
movsb
mov
xor
lods
inc
shlb
push
cmc
mov
in
rorb
mov
loopne
pop
rcrb
movsb
daa
inc
push
shrb
jbe
push
mov
mov
sbb
push
dec
andb
mov
sub
into
jne
jbe
or
addr16
push
push
sti
test
dec
aam
loopne
sub
fs
mov
out
arpl
xchg
pop
popl
dec
in
sbb
mov
jbe
dec
or
loop
in
pop
adc
dec
lcall
xchg
test
mov
les
out
pusha
leave
jo
mov
add
dec
push
or
hlt
sbb
iret
xorb
jae
test
mov
icebp
adc
jnp
dec
sub
clc
imul
cmp
je
adc
sub
hlt
enter
xor
ret
out
adc
out
ds
cmp
pop
xchg
outsb
jg
jbe
leave
call
stc
cmpsl
mov
or
shr
shll
sbb
fisubrs
clc
jno
loop
std
cmpsl
jbe
fldt
popl
out
jo
mul
dec
popa
shrl
ja
shlb
iret
add
mov
lahf
sbb
mov
mov
das
sbb
aam
sbb
pop
stos
cs
icebp
pop
xchg
movl
gs
mov
push
movsb
lret
jmp
pop
cld
pushl
imul
fsts
aam
jg
inc
jo
aaa
dec
rcrb
cmpsl
fincstp
call
push
sub
mov
das
mov
jle
jne
add
aaa
imul
push
xor
loop
lret
into
xchg
sbb
outsl
loop
jg
mov
jl
dec
mov
add
mov
inc
pop
cmp
and
dec
pop
push
test
push
add
lret
add
jmp
daa
ja
mov
cmc
cmp
jbe
packuswb
push
insb
xchg
cmp
cmp
test
aaa
jae
mov
jp
sub
rcl
pop
sbb
sub
jle
stos
pushf
scas
adcb
stc
lahf
arpl
cmc
mov
inc
or
jae
dec
icebp
cmc
arpl
mov
repnz
xchg
adc
add
or
cltd
movsl
sbb
cmpsb
push
aaa
aas
sahf
js
loop
push
shlb
push
xor
sub
sub
mov
test
daa
xchg
in
call
pop
je
sub
dec
daa
xor
lods
inc
movsl
jbe
mov
sbb
mov
adc
fsubrs
mov
and
ficomps
test
fisttpl
in
pop
mov
je
jns
cmp
in
xlat
sti
ret
push
jle
aam
fucomip
pushf
jbe
enter
push
lcall
ds
cmp
jnp
jg
xor
clc
jge
xor
add
lds
clc
jns
rol
les
js
sti
in
fldenv
mov
pop
enter
loope
test
mov
or
pop
push
push
adc
pop
adc
push
loope
incl
stos
pop
lods
or
scas
mov
cmp
sbb
test
movsl
xor
mov
es
jg
add
inc
inc
stos
sbb
inc
jne
mull
in
js
cmp
in
dec
fldl
xchg
cld
jl
or
loop
rol
mov
cmpsb
ficoms
mov
in
test
outsl
gs
test
xchg
mov
mov
or
sbb
jbe
cmc
insb
pop
add
inc
fwait
and
aam
test
or
mov
testl
je
sub
lcall
push
stos
or
jge
xor
shlb
jecxz
outsb
aas
das
out
jge
pop
adc
test
xor
pop
mov
ret
fwait
add
adc
js
and
stos
add
xchg
into
push
jge
lcall
adc
imul
cmp
and
and
repnz
xchg
or
mov
xchg
jbe
add
int3
pop
out
mov
andl
push
xchg
pop
sbb
fdivrs
adc
lods
rcrl
pop
mov
xor
jle
mov
ja
loopne
pop
negl
and
push
mov
or
rol
out
cmc
jnp
xor
in
and
inc
push
inc
test
test
daa
leave
adc
xchg
dec
mov
icebp
std
in
mov
mov
dec
pop
mov
sbb
and
imul
mov
xchg
test
push
or
push
out
mov
je
mov
xchg
aad
mov
pusha
xor
cmpsl
push
push
push
and
sbb
adc
or
mov
mov
hlt
push
sub
stos
lods
xchg
scas
in
jmp
dec
mov
jmp
cmc
and
dec
movsb
stos
bound
jns
mov
movsb
int3
xor
adc
mov
xchg
lods
push
cwtl
adc
or
or
mov
push
sti
pop
in
mov
push
mov
dec
and
iret
popl
adc
mov
andb
aam
ret
in
sbb
sahf
imul
test
pop
je
jle
leave
xchg
mov
pop
pop
pop
sbb
jp
mov
fmul
sarb
pop
or
pop
cld
pop
jne
mov
lods
mov
out
adc
aas
movsb
lock
shrw
sub
lods
mov
sub
andb
cmp
cmp
xor
push
ljmp
mov
icebp
aam
mov
and
inc
pushf
ret
mov
sbb
mov
mov
adc
add
cwtl
fs
pop
or
pop
xchg
xor
dec
dec
les
call
ljmp
cltd
xor
nop
bound
push
mov
mov
jl
xchg
jp
stc
and
andl
pop
jmp
inc
lds
xchg
fnsave
cmp
shl
bound
aaa
inc
popa
sbb
fisubl
inc
push
pop
mov
jmp
jg
and
dec
sbb
pop
test
add
ficompl
andl
stos
mov
daa
rcrb
push
pusha
xchg
addb
faddp
mov
fstl
movsb
dec
call
mov
lock
pop
xchg
push
push
cmpsl
dec
xor
icebp
nop
mov
scas
out
out
js
xor
inc
pop
cmc
aas
xchg
mov
and
stos
inc
aam
in
xchg
sub
incl
mov
mov
mov
adc
pop
sub
sub
lcall
jmp
adc
aam
add
xchg
mov
mov
popa
stos
fstpt
iret
ret
scas
ds
imul
xchg
andb
fs
mov
aaa
pushf
cld
into
jle
out
mov
push
push
dec
cmc
add
dec
xchg
add
ret
mov
and
test
fadds
lea
push
and
adc
or
lret
stc
sbb
stos
mov
into
pop
jg
jg
push
repnz
inc
popa
lock
jmp
or
mov
xor
jg
adc
push
sti
subb
add
lcall
subb
pop
std
int3
insb
sbb
lea
ss
arpl
jb
daa
push
in
mov
push
aam
lods
jo
sti
inc
movl
je
pop
push
rolb
sbb
xchg
adc
add
sbb
insb
inc
es
stos
push
jmp
imul
dec
stos
mov
cmp
mov
stc
jmp
mov
or
loope
out
sub
cli
mov
jmp
jl
bnd
sahf
aas
push
mov
cmp
adc
inc
xor
loope
je
ret
mov
or
mov
jp
jg
int
dec
push
into
jnp
sub
movsb
lock
sti
lcall
pop
popa
test
lds
jl
push
int3
stos
ds
es
in
inc
fs
aas
mov
xchg
leave
test
sbb
sub
mov
bound
sbb
mov
sbb
mov
jae
fadds
leave
fwait
stos
jns
aad
xor
sub
dec
rolb
loop
ret
ret
insl
lret
xchg
fsubs
popf
pop
add
int
or
enter
movsl
xor
dec
sub
or
js
aad
mov
or
rolb
fs
aas
and
jmp
lcall
push
js
pop
jbe
das
sub
adc
sarl
fists
xor
dec
rorl
xchg
into
nop
jp
push
imul
sbb
push
mov
xchg
test
sti
xchg
mov
pop
xchg
ret
pop
or
lcall
lea
pushf
aam
inc
sahf
hlt
xlat
jo
ud1
push
cltd
repnz
testl
fldt
and
mov
scas
adc
data16
fstpt
jmp
push
psrad
imul
fsubr
dec
pop
jb
fs
adc
ret
jns
and
mov
imul
jge
xchg
xor
roll
scas
rol
ret
loopne
adc
test
push
push
je
gs
in
mov
nop
cmpsb
data16
push
xor
mov
cmp
dec
inc
roll
jmp
and
clc
pop
xlat
mov
jb
sbb
xor
cmp
jecxz
pop
sbb
out
pop
push
iret
jl
jp
push
xlat
popf
lcall
das
test
add
xchg
mov
insb
ret
in
popf
sbb
dec
and
cmp
dec
sahf
imul
repnz
iret
out
idivl
and
mov
push
cwtl
jo
mov
mov
and
je
jl
shll
repz
cmpsl
divb
ss
rcll
or
jp
lods
pop
jae
sbb
or
insl
lcall
lcall
mov
aaa
mov
inc
push
iret
arpl
movsb
mov
push
stos
stos
mov
push
mov
stc
enter
je
or
inc
push
push
rclb
adc
in
xor
cwtl
sub
inc
cmp
iret
cmp
mov
mov
test
fwait
loop
mov
stos
push
or
mov
push
out
les
add
rclb
fnstcw
pop
mov
mov
and
out
sub
jl
std
mov
push
movb
mov
xor
or
dec
rorb
push
imul
cltd
out
mov
lods
push
cmp
lods
movsl
mov
aad
xorb
les
pop
pop
shll
inc
xchg
mov
or
xor
fmull
mov
ror
dec
mov
sub
cmp
jnp
mov
fidivl
push
stos
and
push
sbb
aad
xchg
or
pop
aam
mov
lret
push
pop
daa
mov
sub
cmp
or
mov
addr16
jmp
orl
mov
jg
pop
xchg
mov
into
sbb
loopne
adc
imul
cmp
out
in
dec
aad
inc
cs
or
cmp
mov
decb
loopne
inc
inc
rol
jb
inc
jl
in
mov
dec
outsb
and
add
jns
xor
daa
iret
repz
mov
imul
mov
or
popa
dec
push
pusha
dec
test
pop
iret
fxch
cmpsl
xor
mov
jl
repnz
adc
cld
sar
inc
or
negl
dec
mov
ficoms
pop
inc
lods
fcomi
into
in
xchg
ret
stc
daa
jno
loop
addr16
add
push
inc
inc
mov
and
stos
shll
imul
lds
xor
lret
pushf
mov
mov
and
pop
dec
and
movsl
shrb
mov
pop
mov
roll
out
inc
add
sbb
inc
call
sarb
leave
xor
inc
daa
push
aad
push
xchg
pusha
lock
push
jp
aas
jle,pt
pop
xor
or
xor
roll
js,pt
mov
inc
ds
popa
lods
mov
leave
in
sub
jl
push
dec
je
or
call
in
test
jno
adc
dec
and
popa
add
xchg
mov
ret
and
xor
jo
ss
ss
enter
ret
cmp
jmp
sub
lahf
mov
adc
repnz
mov
xlat
jp
popa
adc
nop
mov
add
mov
jmp
mov
xchg
dec
xor
out
sbb
out
push
shl
stos
cltd
adc
jecxz
inc
enter
pop
pop
fbld
mov
loope,pn
xchg
clc
ljmp
stc
stc
nop
sbb
pop
loopne
scas
jle
mov
addr16
or
mov
inc
loopne
sub
pushf
data16
push
xor
mov
cltd
mov
push
ficoms
xchg
mov
cmp
fldl
addr16
jnp
cmp
movl
test
das
int3
push
lea
pop
fs
and
testb
aaa
cmp
cmp
daa
aad
push
jg
lds
aas
or
cwtl
and
rcrl
mov
or
cmpsb
cmp
sbb
idivl
jmp
or
jno
out
loop
mov
jbe
dec
or
stos
push
adcb
mov
push
ds
das
popf
or
aam
push
icebp
jbe
ds
add
ret
in
dec
push
push
add
xchg
sub
pop
std
cmpsl
jmp
inc
jle
pop
pop
add
mov
adc
pop
jno
and
sub
repz
inc
lods
fisttps
adc
mov
leave
sbb
imul
push
pop
dec
sbb
jne
pop
add
mov
and
int3
adcb
dec
xchg
or
dec
imul
xchg
cmc
incb
dec
mov
sub
insl
pop
iret
cmp
push
cld
mov
rcll
icebp
pop
sbb
and
mov
or
or
mov
sbb
pop
aam
xor
sub
jle
enter
popf
cld
inc
add
and
jno
xorl
xchg
push
inc
push
dec
mov
xchg
aad
popa
imul
sbb
or
cmc
xor
test
popf
outsl
aam
xor
sbb
lret
or
cmp
sti
push
mov
mov
xchg
push
mov
pop
arpl
dec
addr16
and
push
and
sub
jne
cmc
mov
movsb
rcll
fwait
mov
lea
insl
mov
imulb
scas
inc
pop
mov
mov
and
pushf
push
xchg
sahf
mov
sbbl
lds
pop
xchg
dec
adcl
sahf
sarb
or
ret
mov
push
movsb
jge
cli
push
insl
out
shll
mov
scas
in
ror
jae
cmpsb
add
dec
imul
gs
popf
fs
out
add
jo
nop
je
mov
inc
inc
jo
mov
mov
divl
mov
add
xchg
pop
daa
pop
mov
fadds
or
adc
fbld
test
outsb
es
jl
mov
iret
iret
cltd
test
mov
repz
ljmp
jecxz
insl
stc
pop
in
fcoms
int3
hlt
mov
scas
orl
jns
inc
int3
jmp
sahf
dec
adc
leave
mov
rcrl
enter
pop
jae
adc
mov
lret
and
test
data16
enter
lahf
in
add
lock
lea
jo
pop
fwait
inc
sbb
bswap
sbb
pop
aam
hlt
rcrb
aaa
mov
pop
dec
sbb
inc
mov
and
or
ljmp
sbb
inc
push
mov
loope
pop
or
popa
xlat
in
notl
xor
stos
mov
into
std
mov
dec
push
cmp
out
out
aam
in
and
stos
xor
sbb
cmp
les
xor
sti
int3
mov
pop
outsb
subb
xor
sahf
ds
and
xchg
push
test
xchg
mov
and
pop
mov
pop
jo
adc
fstpl
mov
dec
ljmp
stc
daa
out
push
in
and
or
out
sahf
stos
pop
arpl
lock
dec
mov
roll
fimuls
xorb
xlat
pop
stos
pushf
leave
incl
xchg
xchg
in
xchg
popa
cmp
ja
scas
je
dec
pusha
loope
push
push
or
stos
sbb
aam
daa
shll
mov
dec
jbe
push
repnz
insb
mov
and
push
push
movsl
mov
push
xor
daa
lock
int3
shl
push
push
inc
mov
rcrb
iret
shrl
rcll
push
js
xchg
popf
add
jmp
mov
mov
xlat
js
sbb
dec
mov
xorb
sub
roll
loop
in
notl
lcall
mov
push
mov
out
lock
pop
movsb
push
addl
ret
pop
pop
push
adc
das
sub
insb
in
sti
xchg
imul
ss
mov
movsb
ficompl
insl
ljmp
xchg
sub
es
add
hlt
js
lods
rorb
mov
in
or
cmp
cld
xor
lret
sbb
outsl
mov
add
and
call
inc
xor
jno
xchg
repz
sbb
jmp
pop
dec
mov
dec
mov
sbb
cmc
outsl
cltd
fwait
rcrb
inc
pop
push
mov
hlt
dec
mov
sbb
mov
lcall
or
xchg
ljmp
sbb
cmp
in
cmc
inc
je
mov
popf
xor
push
pop
dec
fnstenv
cli
int
stos
sbb
dec
adc
ds
mov
bound
aam
or
pop
cmpl
insl
aad
add
dec
add
shrb
icebp
cs
fs
lds
push
mov
ss
test
mov
mov
ds
add
js
test
sarl
jnp
push
lock
outsl
adc
mov
pop
pop
push
imul
lret
negl
aam
cmp
inc
xchg
sub
aas
push
mov
and
inc
xor
xchg
cmc
sub
add
sbb
outsb
jp
mov
fisttps
insb
imul
in
and
jp
imul
sbb
mov
push
roll
fstl
mov
adc
xor
mov
lret
das
daa
outsl
add
mov
add
in
cmp
mov
pop
js
dec
jno
mov
iret
adc
sbb
popa
das
loope
cmp
scas
mov
imul
mov
sbb
jne
hlt
pop
das
lcall
adc
ffree
pop
xor
stos
mov
orps
shlb
cs
pushf
xchg
push
dec
enter
rcll
mov
dec
cmp
fwait
xchg
pop
dec
int
subl
mov
mov
or
fcomps
xor
ja
mov
cmp
mov
dec
push
pushf
fs
pop
mulb
in
bound
outsb
cmc
sub
push
movl
push
inc
in
and
jo
pop
mov
negb
and
lock
inc
or
dec
or
es
cmpsb
movsb
mov
xorb
push
jecxz
rcrb
jle
shll
daa
inc
or
mov
or
gs
jle
in
pop
aaa
out
pop
inc
ljmp
xchg
jl
stos
stc
out
orb
xor
adc
pop
not
and
and
xor
in
jge
sbb
out
aam
aas
sub
cmp
fstp
cltd
lret
or
test
icebp
sbb
hlt
mov
push
in
fdivl
shl
xchg
push
jbe
dec
jbe
repnz
test
daa
pop
and
imulb
inc
sbb
mov
or
pushf
in
loope
inc
add
insl
jge
add
cmc
xor
push
push
stc
adc
test
idivb
xchg
add
xchg
dec
xchg
fisttps
or
lods
sbb
iret
subl
push
outsl
mov
cltd
aaa
sub
mov
fadd
addr16
push
jae
fidivrl
ret
xchg
rol
sbb
or
popf
sbb
push
jmp
les
das
pop
or
pop
mov
out
lcall
js
je
ret
popa
or
mov
test
sub
and
or
outsl
add
cs
loopne
testb
cmp
mov
or
cs
xchg
test
outsb
orb
ret
std
jecxz
and
add
mov
shrl
je
inc
xchg
pop
in
or
push
ret
push
xchg
punpckhbw
push
into
mov
jb
hlt
pop
aad
add
lahf
frstor
shrd
iret
jb
add
push
and
add
cmp
pop
dec
mov
or
in
push
cmpl
lds
cmp
in
push
and
fldcw
lahf
fs
pminsw
mov
sbb
mov
push
fbstp
clc
leave
mov
popf
test
or
mov
shll
rorb
fisttpl
mov
mov
cmp
push
loopne
sub
pop
push
dec
mov
xchg
ret
cmp
fidivrs
filds
adc
ja
adc
outsb
lret
mov
ja
dec
insl
js
notl
arpl
pop
pop
push
adc
and
ret
sahf
scas
xchg
in
xchg
mov
pusha
dec
xchg
xlat
cmpb
pop
fidivs
jbe
std
and
cmp
cmp
mov
and
fisubl
test
mov
stos
fimuls
and
push
into
dec
mov
insb
movsb
scas
push
mov
lock
mov
leave
cmp
xor
xchg
arpl
ret
cmp
jnp
push
adc
daa
jge
fildl
shl
push
popa
jmp
fwait
sti
es
and
push
popa
mov
popa
cltd
sub
add
cwtl
adc
test
mov
sbb
jle
sub
cmpsb
inc
jecxz
adc
pop
jl
push
sti
call
lcall
les
push
dec
das
jp
pusha
adc
stos
mov
jg
mulb
push
cmp
push
push
mov
inc
aaa
push
xorb
xor
loope
adcl
mov
iret
sub
inc
mov
sbb
xchg
push
mov
je
jg
jmp
repz
pop
lahf
bound
mov
daa
mov
cs
mov
scas
ret
lret
fs
ss
dec
dec
add
outsl
xchg
int3
cmp
lahf
mov
or
mov
mov
ficoml
decb
cltd
pusha
into
sti
xor
lock
out
leave
bound
mov
push
insl
data16
cmc
xorl
inc
pop
leave
push
xchg
dec
fld1
cmp
fisubrl
leave
cmp
fwait
std
popa
int
xchg
pop
dec
and
movq
add
mov
xchg
shll
xchg
jp
jp
cmp
push
dec
dec
mov
lret
sbb
in
stos
outsl
test
mov
add
jns
loop
subb
nop
aas
pop
lret
sub
add
jns
mov
inc
xor
cmp
cmp
fmuls
mov
stos
xchg
jmp
scas
jns
dec
xchg
sub
dec
insb
xchg
mull
daa
cmp
rcrl
aad
scas
pop
fsubs
adc
addl
jae
dec
inc
loop
jl
call
dec
test
ss
imul
pop
sbb
push
imul
cmp
out
outsl
ss
adc
hlt
mov
lods
and
mov
fs
iret
pusha
test
xchg
pop
jp
sub
mov
mov
fisubrl
sub
xchg
dec
sub
popa
orl
pushf
iret
xchg
lods
fs
ja
flds
fst
mov
mov
xlat
cltd
test
pop
or
test
mov
loopne
lods
into
dec
clc
sbb
test
jb
stos
inc
pop
or
xchg
xchg
pop
je
or
fcoml
fdivr
mov
mov
add
inc
sub
jp
add
rcll
shll
cmp
icebp
fnstcw
push
bound
xlat
sub
outsl
popa
sub
shr
xchg
sbb
cmp
scas
test
adc
and
dec
mov
insb
test
in
mov
inc
dec
inc
out
adc
es
lret
aaa
xor
sti
inc
fmull
or
clc
pop
mov
inc
pop
loopne
pop
cwtl
stc
enter
dec
sbb
gs
fildl
dec
bound
xor
mov
ja
mov
jecxz
jbe
lods
cmpsl
sbb
adc
pop
jbe
sub
dec
pop
pop
inc
dec
dec
into
iret
nop
inc
xor
jo
adc
icebp
sub
sbb
psubd
pop
aaa
inc
arpl
jl
xchg
ret
add
icebp
mov
pop
xor
or
ljmp
push
shlb
xchg
sbb
sub
jecxz
jmp
lret
push
jecxz
pop
inc
inc
test
out
sbb
leave
sub
aad
push
aas
jno
cmp
es
adcb
xor
mov
jle
out
loopne
mov
sub
aam
sarb
mov
adc
mov
mov
mov
loopne
mov
jmp
in
inc
dec
mov
sub
jp
adc
into
mov
push
add
imul
push
sub
cli
call
cmp
gs
lds
jmp
xchg
inc
shll
jnp
in
loopne
xorb
mov
testl
sbb
mov
jge
mov
loope
or
pusha
aaa
lock
arpl
insl
bswap
adc
fs
sbb
fsubr
jge
faddl
int
rcl
fnstenv
andl
testb
inc
inc
pop
mov
sbb
outsl
adc
add
dec
fldl
loope
jno
cmp
imul
repnz
push
push
mov
repz
jnp
out
xchg
xchg
push
add
fnstcw
rclb
das
pop
push
inc
lret
nop
xor
ljmp
mov
xor
pushw
mov
inc
das
jle
and
and
sub
dec
cltd
aad
aad
imul
cltd
push
mov
adc
imul
outsl
inc
sbb
jl
push
inc
lcall
clc
pop
or
sub
nop
stos
inc
inc
adc
pop
xlat
mov
and
daa
insl
fmull
pop
stos
push
ds
lcall
sahf
jg
nop
or
sub
sub
jp
push
in
mov
pop
mov
cmp
lahf
notl
imul
shlb
jmp
pop
pop
jp
mov
mov
fnsave
inc
push
jle
mov
mov
inc
sets
out
ds
sub
cwtl
faddl
xor
push
stc
addr16
xlat
aam
push
jmp
aad
incb
dec
and
add
cmpl
je
push
push
dec
push
imul
inc
or
add
shrb
jp
dec
cmp
xchg
js
jmp
jle
adc
das
pop
add
iret
add
sub
jne
and
mov
inc
mov
adc
shl
dec
sbb
shll
in
ret
lret
sbb
sbb
mov
inc
xchg
mov
push
and
fisubrl
add
inc
mov
add
dec
cli
aam
push
lds
mov
mov
daa
and
jg
mov
jnp
daa
imul
outsb
lea
ljmp
shlb
jae
lcall
inc
mov
int
negb
icebp
jbe
hlt
jne
add
fstpl
push
das
and
add
jmp
data16
enter
push
adc
fldl
sub
dec
arpl
mov
out
push
xor
inc
pop
stc
les
push
test
sub
cmp
or
ret
test
inc
jbe
dec
push
ljmp
pusha
mov
pop
and
lds
ret
data16
pop
in
fcompl
insl
fidivrl
cli
ja
data16
sbb
cmp
mov
xor
test
sbb
sub
out
jle
into
out
xlat
aas
out
add
insb
clc
in
movb
mov
rcrb
or
pop
stos
rcll
test
xchg
mov
xor
faddl
mov
mov
sbb
pop
push
in
int3
bound
leave
loop
adc
jb
mov
push
popl
adc
shll
cmp
pop
xchg
jns
xor
loope
push
in
jl
push
test
into
jae
test
cmc
or
leave
mov
mov
imul
wbinvd
push
or
push
mov
and
insb
xchg
pusha
inc
das
pop
jb
cmp
je
xchg
pop
orl
sbb
aam
std
ret
sub
jmp
add
or
cltd
test
dec
mov
les
mov
xchg
add
repz
jmp
ja
pop
shll
hlt
sub
mov
xchg
test
test
mov
rcr
add
imull
mov
orb
sbb
fistps
xchg
jg
mov
jmp
jge
imul
adc
outsl
ljmp
ljmp
repz
dec
xchg
nop
xchg
fdivs
cmp
arpl
out
inc
imul
jnp
popfw
stos
jnp
mov
movsl
jmp
imulb
jp
sub
fstps
lcall
pop
je
adc
scas
and
mov
cs
and
cmp
cmc
fcoms
data16
jl
pop
mov
cwtl
popa
sbb
xor
fwait
add
xchg
pop
mov
jmp
xchg
add
sbb
dec
cmp
dec
xor
add
adc
sub
jmp
or
ret
pop
in
int
sahf
ja
mov
push
mov
in
push
cltd
or
mov
pop
jmp
js
pop
lods
or
je
mov
inc
shl
jno
test
pop
leave
lahf
xor
stc
ds
push
mov
ret
xor
lcall
push
cli
or
cli
mov
jb
xor
mov
jb
and
imul
fstl
test
cmpsl
sahf
lods
sub
outsl
xchg
inc
adc
clc
or
icebp
int3
loop
and
int3
popf
sub
je
lds
stos
lret
lds
mov
divb
jl
in
fldt
pop
shrl
mov
xchg
mov
popa
ds
shll
mov
push
mov
add
mov
pushf
call
js
add
push
jae
aas
mov
sub
push
lret
std
dec
jmp
ja
jge
cs
imul
stos
or
loop
mov
jne
jg
mov
sbb
mov
sub
sub
mov
mov
std
pop
pop
mov
pop
stos
out
stos
sub
mov
test
xchg
repz
or
cli
out
rolb
mov
loope
iret
pop
add
cli
in
ficomps
add
mov
jecxz
or
dec
push
push
cmp
mov
sbb
fisubrs
movsl
xor
sti
inc
leave
xor
test
test
outsb
pop
mov
adc
pop
push
cmc
int3
jg
sahf
aas
dec
cltd
rcrl
aam
insl
popa
jg
cmpsl
push
je
sbb
adc
adc
inc
fs
jno
inc
aas
jno
sti
imul
lods
add
pop
mov
sbb
jb
dec
pop
jl
outsb
lea
pop
xchg
cld
mov
lods
ds
xchg
mov
pop
stos
out
sbb
pop
push
es
pop
shl
add
xchg
pusha
mov
pop
lahf
fdivrp
xor
sbb
xor
jo
inc
jae
jns
in
rorb
lahf
mov
out
orl
aaa
rorb
subb
fucomp
pop
test
sbb
in
adc
fistl
movsbl
mov
pop
and
sbb
lahf
push
jae
xor
es
inc
adc
push
sub
sbb
mov
int3
push
imul
nop
js
dec
daa
inc
push
mov
call
or
and
out
dec
into
fsubrl
adc
adc
loopne
mov
sahf
inc
cmpsl
jl
xorb
adc
das
cli
xchg
test
mov
adc
adc
add
lcall
pop
push
pop
bound
in
jno
mov
adc
fs
dec
in
out
ret
dec
sbb
add
scas
dec
adc
jnp
clc
sti
out
cmp
or
ret
xor
lods
loop
dec
dec
repz
lds
stos
inc
push
ds
fldl
bound
in
push
inc
pop
fwait
jecxz
jg
push
fildl
adc
flds
out
je
dec
lds
sub
pop
outsb
mov
xchg
add
mov
es
hlt
cmpsl
pop
fdivl
popa
pop
fldl
pop
jp
mov
fimull
push
pop
nop
push
movsb
outsl
jle
xor
aaa
xchg
mov
and
iret
xor
std
jg
or
or
bound
and
or
or
sbb
sbb
lods
push
pop
imul
sub
lea
cmp
push
je
scas
sub
lock
in
movsl
pop
jbe
mov
repz
jg
sub
out
fdivp
and
jg
adc
or
adc
or
arpl
sbb
push
pop
mov
je
int
int
daa
xor
js
out
cs
roll
lcall
xchg
sbbl
add
pop
lret
add
inc
mov
xchg
sub
mov
push
jnp
push
jge
out
mov
xor
fstl
test
cltd
mov
xchg
mov
lret
movsl
movsb
aam
sbb
jge
pop
inc
sbb
inc
sub
or
xchg
fs
in
mov
mov
in
fisubl
call
gs
pusha
sub
xlat
or
out
out
cli
mov
add
cwtl
clc
add
push
out
ucomiss
jmp
std
fistpll
sub
push
jno
cmpsb
dec
insb
jns
add
xor
shll
xchg
pop
add
push
inc
repnz
mov
cmp
cmc
mov
mov
into
xchg
das
xor
int3
imul
repz
ret
call
dec
sbb
daa
in
jl
shll
push
dec
dec
adc
xor
std
jle
inc
sub
push
xchg
pop
add
subl
int3
jnp
pusha
aaa
mov
push
lods
jl
sub
sub
lret
mov
stos
out
sbb
dec
scas
andl
mov
cmp
ja
sbb
rol
xor
push
ja
and
mov
xchg
push
inc
les
mov
add
push
mov
and
mov
pop
sub
sarb
sbb
jno
xchg
push
scas
dec
sub
lea
pop
loop
ds
fistps
jno
fnstsw
mov
ficomps
cltd
push
pop
lret
sub
daa
rorl
dec
cwtl
fmull
fnstcw
push
adc
loopw
and
xchg
xor
and
jmp
dec
or
push
stos
sbb
or
pop
xchg
mov
ljmp
test
mov
icebp
dec
sbb
mov
aam
loop
add
scas
sub
cli
mov
test
xor
sti
call
loope
icebp
aas
xchg
and
and
aam
and
mov
xchg
push
int
daa
nop
int
or
retw
jmp
out
daa
push
sub
mov
or
xor
cli
jg
push
mov
sub
mov
inc
mov
mov
mov
mov
jmp
mov
sbb
ja
xchg
and
mov
clc
inc
pop
mov
lahf
xchg
push
orl
and
inc
dec
cmp
dec
sbb
push
repnz
jns
es
and
lcall
inc
and
popa
scas
lds
int3
jne
out
jge
adc
sbb
cmp
stos
data16
adc
mov
repz
jle
jecxz
mov
call
mov
call
loop,pn
sub
pop
fildl
fldenv
xor
sti
cmp
pop
icebp
rcll
jae
adc
and
jne
sbb
xchg
lcall
mov
lds
add
mov
push
or
cmp
orb
adc
dec
pop
dec
cld
inc
or
mov
xchg
stc
ss
and
stc
imul
cld
insb
mov
push
and
xor
mov
imul
xor
mov
inc
push
rol
stos
mov
enter
notl
xchg
push
aaa
mov
fnstsw
pushf
jl
cmp
lret
cld
fcoms
sahf
push
or
or
out
adc
leave
popa
push
pop
xor
pop
shrl
jg
cli
sub
sub
je
inc
repz
push
jmp
aam
add
adc
dec
mov
xor
add
bound
cmpsb
outsb
pop
fstl
push
cmp
pop
mov
jg
mov
movsl
cmp
add
cwtl
ja
xchg
out
inc
push
ds
add
leave
pop
mov
shl
sub
add
push
cli
cld
sub
cmp
xlat
sub
mov
or
pop
jbe
adc
test
mov
shlb
or
aam
xchg
xlat
adc
ljmp
push
fstl
or
add
push
xor
pushl
mov
je
out
stos
test
push
jle
pop
jp
pop
cmc
jge
xor
loop
ss
test
fcompl
add
ljmp
mov
ljmp
add
push
imul
inc
sbb
orl
arpl
sub
dec
test
xor
ja
jecxz
movsb
bound
pop
push
daa
mov
dec
mov
ss
test
mov
mov
inc
xor
mov
mov
add
push
inc
or
ja
or
and
mov
push
lods
adc
push
fisttpl
sbb
adc
jne
mov
in
xchg
push
addl
xchg
jnp
and
mov
out
imul
cmp
js
sti
add
lar
mov
adc
stos
stc
mov
ds
in
shll
jle
and
insb
icebp
push
dec
xor
mov
lahf
lods
jbe
loop
xor
pop
rorl
dec
lcall
loopne
cmp
testl
cld
fs
add
mov
sub
hlt
out
cmp
sub
mov
cmp
jmp
mov
lock
mov
jg
mov
or
movsl
and
jo
push
and
aas
sbb
leave
dec
in
dec
pushl
push
aam
cmp
xor
mov
jae
lcall
inc
pmulhuw
pop
push
dec
and
mov
xor
cmpsb
cmp
sbb
xor
fcoms
ljmp
ret
in
daa
fs
mov
dec
cs
shlb
popf
or
sbb
inc
xor
andl
daa
test
flds
popf
dec
push
inc
rcr
push
push
fldcw
adc
js
fsubs
inc
mov
mov
xor
sbb
mov
pop
outsb
xor
mov
lds
push
test
inc
pop
push
pop
mov
sarl
inc
inc
inc
mov
jne
sahf
sub
sbb
shlb
xlat
mov
xlat
popa
and
cmpsb
mov
mov
mov
fiaddl
mov
movsb
push
gs
mov
cmp
stos
ljmp
xchg
iret
fsubrl
pop
popf
xchg
out
popf
xchg
jno
fwait
js
push
mov
add
jae
sbb
adc
fdiv
jmp
les
ja
mov
fcmovnu
adcl
lahf
push
es
lahf
sti
and
mov
xor
inc
out
push
das
mov
out
icebp
pop
test
call
nop
cwtl
fucomi
test
cld
outsb
mov
shrl
push
jne
mov
inc
lcall
int3
push
jmp
mov
ret
sbb
iret
cmovns
cmc
sub
xor
mov
xchg
mov
pushf
sub
xchg
repnz
fcoms
rcrl
in
rorl
cmp
ret
je
aad
je
push
jo
xchg
lret
movsl
pusha
test
mov
int3
pop
add
jle
lret
jno
popa
dec
inc
fs
in
shl
sti
repz
jge
loopne
stos
sub
mov
inc
cltd
test
out
add
xchg
mov
outsl
bound
mov
sbb
xchg
repz
movsl
push
pop
popa
push
in
or
enter
pop
insl
jo
or
cs
lea
mov
mov
fimull
testl
mov
and
subl
adc
jnp
jbe
movsl
mov
call
ja
jno
jge
pop
and
aaa
imul
ret
data16
and
pop
jbe
mov
sarl
adc
mov
sub
inc
sub
xlat
and
test
mov
pop
sahf
mov
aad
fucomi
cmp
add
inc
leave
xor
lods
sbb
sub
int3
js
shl
jp
outsb
or
cmpb
sahf
sub
xor
push
pushf
mov
fmuls
push
insb
shl
pop
imul
push
inc
mov
cli
inc
test
jno
mov
insl
xchg
sbb
ret
rol
xor
dec
daa
push
stc
std
scas
subl
inc
mov
xchg
out
in
aaa
leave
sbb
xsaves
mov
outsb
xor
ljmp
adc
adc
xor
rcll
ret
cmp
dec
xor
push
pop
lods
mov
jmp
repz
fwait
mov
ja
adc
mov
cli
out
or
cmpb
sbb
xchg
pop
in
or
hlt
sahf
idivl
scas
cmpsl
aad
mov
lcall
jae
push
sbb
jo
and
lret
idiv
pop
ss
sbb
ljmp
fchs
das
mov
fs
jge
cmp
cli
vandpd
push
mov
push
into
rorb
mov
out
mov
push
pop
pop
rcl
out
jg
fwait
ja
xor
inc
loop
shrl
and
fcomps
mov
sbb
sbb
jno
or
push
xor
into
mov
test
sub
sub
add
repz
or
mov
mov
mov
ja
and
push
outsl
mov
in
cwtl
pop
push
sbbb
push
pushf
push
xchg
dec
and
frstor
imul
out
adc
mov
lret
jge
pop
rcll
or
xchg
pop
push
sbb
out
out
cli
mov
repz
mov
scas
jo
xor
pop
loop
jmp
jo
adc
fcomps
push
lcall
dec
cwtl
ffreep
fstl
jl
add
mov
dec
adc
lsl
pop
mov
insl
add
jle
test
push
cmp
cmp
mov
xor
pop
jno
and
movsb
out
insb
mov
inc
pop
int3
cmp
mov
pushf
stos
sbb
popf
imul
mov
test
icebp
nop
lea
mov
cmpsb
das
xchg
cmpsl
pop
push
jle
mov
leave
aaa
lahf
jb
loop
outsb
or
cmc
fwait
push
mov
mov
scas
imul
sbb
stos
ds
das
xor
aad
xchg
sbb
into
fsubrs
sub
das
mov
mov
jae
xchg
test
xor
std
jmp
data16
out
popl
outsb
push
cmp
dec
dec
cmc
push
add
xchg
inc
pop
inc
pop
cmp
sub
lea
pop
sub
cmp
leave
or
jbe
pop
lret
mov
je
xchg
in
ss
sbb
push
xor
mov
inc
add
aas
test
or
cltd
test
push
add
mov
mov
adc
xor
sbb
lret
add
inc
xchg
sbb
lcall
iret
and
and
adc
push
sub
sub
inc
gs
dec
or
in
xchg
add
add
or
mulb
out
inc
pop
mov
sub
daa
stos
lea
xchg
mov
dec
mov
stc
sub
xor
jo
dec
js
stos
mov
lods
cwtl
sbb
out
dec
popf
jo,pt
addb
jg
out
movl
fcmovnbe
test
test
andb
mov
dec
lret
cmc
xchg
adc
jo
mov
in
mov
cmpsl
pop
inc
sbb
cwtl
mov
jbe
sbb
sbb
fs
out
cmp
test
cli
mov
dec
lahf
or
add
xor
and
push
test
popf
cmp
arpl
shl
mov
pop
xchg
outsl
mov
xor
lock
jle
ja
stc
fwait
mov
sbb
stos
in
sbb
add
cmc
jns
jle
cmpsb
mov
cmc
push
testl
aas
and
and
dec
cmc
dec
add
xchg
sub
ja
rorl
imulb
sbb
mov
imul
mov
jne
pushf
xchg
cmpl
sarl
xor
xor
sbb
inc
xchg
mov
mov
fisubs
cli
push
nop
jecxz
cmp
cmp
pop
push
das
bound
subb
xchg
dec
jae
sub
mov
push
test
adc
into
jp
icebp
scas
cld
das
imul
inc
out
scas
mov
cmp
outsl
imul
add
nop
dec
arpl
les
mov
mov
push
xor
jl
jmp
shl
cmp
or
jae
jl
arpl
in
mov
ljmp
cmp
push
push
in
mov
int3
jbe
push
cmp
movsb
xchg
iret
jmp
scas
push
stc
and
cs
mov
inc
data16
lahf
gs
add
aam
in
popf
lods
jo
and
mov
pop
pop
push
pop
mov
jno
out
inc
mov
dec
mov
add
data16
jo
cmc
daa
sarl
cmpsb
mov
or
add
or
jp
imull
test
pop
addr16
out
jbe
int3
adc
std
mov
adc
mov
pop
std
fdivp
jb
cs
int3
dec
add
in
repz
stos
ficomps
mov
jle
dec
or
out
mov
mov
mov
aad
fwait
insl
xchg
mov
mov
out
cmp
or
in
repnz
xchg
pop
mov
and
or
sub
push
push
mov
sti
cmp
adc
cwtl
nop
ficompl
into
aas
add
popf
push
sbb
and
cmp
xchg
imul
dec
push
add
sbb
mov
loop
pop
mov
inc
pop
arpl
pushf
jbe
imul
ret
push
xor
push
jae
nop
in
cmc
mov
mulb
mov
aas
mov
add
jne
call
fs
xchg
push
test
lods
sub
das
sub
sbbb
out
mov
pop
push
inc
cmp
inc
xchg
call
enter
mov
pop
sahf
mov
add
imul
sbb
dec
xor
dec
cmp
or
mov
xchg
pop
sbb
loop
ret
xor
test
add
mov
mov
cltd
dec
xchg
cli
arpl
les
push
or
push
les
sub
push
xchg
fwait
outsb
fwait
cmp
adc
sbb
pop
jmp
jg
icebp
dec
mov
dec
repnz
call
cld
adc
mov
push
dec
test
dec
hlt
in
mov
sbb
and
dec
xchg
ret
scas
dec
or
or
adc
lods
ja
adc
movsb
dec
jmp
mov
jmp
mov
sub
stos
loopne
jge
sbb
pusha
mov
mov
add
test
or
pop
call
loop
pop
int
repz
lret
or
mov
in
mov
and
jae
incb
fldenv
lea
insl
mov
or
mov
xchg
aas
call
sub
push
aaa
test
or
je
aam
mov
fiaddl
jnp
out
movsb
imull
push
jns
push
xchg
loop
mov
jnp
repz
and
push
adc
dec
mov
hlt
mov
push
idiv
dec
lods
sbb
pop
cmp
lret
jbe
sarb
or
add
cli
lods
mulb
push
jp
or
aas
pop
out
xor
scas
in
dec
dec
pop
jb
mov
test
adc
and
insl
enter
int3
sbb
mov
js
stos
dec
cmc
xor
stc
inc
data16
lds
call
mov
xchg
xchg
mov
jmp
xlat
enter
or
sahf
and
lret
fldenv
mov
adc
loope
ja
mov
mov
clc
inc
xor
fisttpll
xchg
in
xor
sti
sti
mov
repz
mov
mov
mov
lods
pop
popf
nop
jg
cmp
aad
push
add
add
sbb
out
jl
cwtl
cwtl
stos
mov
mov
push
push
push
pop
enter
insb
popa
xor
ret
psrld
cmp
xor
mov
dec
inc
scas
mov
pop
and
in
mov
aam
and
or
pop
fwait
js
mov
fxch
iret
scas
data16
mov
mov
mov
xchg
shll
out
jbe
mov
pop
cld
push
fstpt
mov
jle
sub
mov
loop
xor
pusha
mov
add
and
hlt
dec
mov
jl
cld
scas
hlt
push
fwait
les
jecxz
sbb
or
arpl
popf
hlt
cmp
xlat
aam
clc
push
mov
mov
cmc
pop
adc
imul
in
jmp
mov
cmpsb
mov
inc
fs
mov
les
fcoms
popa
jbe
sub
jo
imul
in
push
add
test
lret
shrl
fldcw
push
lahf
pushf
pushf
rcrb
push
fadd
fdivrs
or
mov
mov
fs
mov
push
adc
sarl
push
xor
pop
scas
or
push
inc
or
pop
xor
pop
pop
das
inc
into
xor
push
jmp
add
mov
pop
jmp
adc
mov
mov
adc
int
sbb
dec
cmc
lods
lods
shrb
sbb
mov
into
jno
jp
push
imul
cmp
pop
es
cmp
or
les
push
je
flds
scas
jne
sahf
cld
mov
imul
in
cmc
dec
push
cmp
fwait
loopne
addb
xchg
jle
adc
fimull
cltd
mov
push
bound
lret
cltd
lahf
shll
setnp
mov
push
test
sbb
xchg
data16
pushf
idivl
cmp
jnp
pop
xchg
pop
xlat
mov
push
fwait
mov
ljmp
mov
sbb
add
inc
inc
cmpsb
mov
push
adc
mov
in
mov
mov
cltd
jg
pop
add
mov
mov
in
js
fs
xlat
pusha
pop
sbb
and
sti
mov
jge
jmp
lea
nop
stc
lcall
ds
leave
push
cld
push
int
dec
icebp
mov
add
pop
daa
mov
adc
jp
fimull
dec
mov
outsl
scas
dec
add
mov
js
pop
sub
sbb
fidivrl
or
jne
sahf
push
jne
xor
dec
add
icebp
movsl
cmpsl
gs
dec
js
cmpsb
insl
push
scas
jl
inc
mov
stos
pushf
popa
push
xor
cmp
jne
clc
dec
shll
dec
rorl
pop
mov
ret
jb
scas
insb
nop
addr16
imul
ret
insl
ds
fimull
addr16
jmp
xchg
inc
sbb
sub
popf
in
lahf
pop
cwtl
cs
pop
mov
stc
imull
mov
call
lea
jne
mov
push
adc
ror
mov
and
sbbl
daa
xorl
mov
dec
pop
pcmpgtb
jmp
mul
insb
push
jecxz
divl
pushw
mov
rclb
cld
xor
cmp
cmp
mov
vpacksswb
jle
adc
xchg
outsl
push
adcb
xchg
pop
out
mov
push
leave
pusha
xorl
push
lods
and
push
enter
ds
sbb
push
outsb
jb
push
mov
mov
stos
testl
sub
adc
pop
pop
loope
mov
add
add
arpl
clc
pop
pop
int3
jno
fs
lcall
notb
xchg
mov
popf
fsubp
mov
cmc
mov
std
insl
cmc
ljmp
int3
cmpsb
add
mov
or
shll
sbb
sbb
mov
mov
push
or
mov
adc
out
das
cmp
repz
ss
jle
push
lock
stos
in
jg
mov
inc
lret
scas
pusha
sbb
fmul
out
mov
push
test
add
in
push
sbb
xor
jne
mull
mov
scas
cltd
sti
cmpsl
bound
push
stos
sbb
pop
mov
sub
pop
shr
das
or
adc
dec
adc
add
scas
popf
xor
dec
leave
testb
enter
jg
repnz
ja
mov
test
addl
mov
call
and
xchg
jne
repnz
and
cmc
lret
or
in
pusha
in
mov
inc
push
mov
or
test
mov
sub
loop
imul
push
lcall
cmpsl
push
xchg
int3
mov
fisttps
sbb
test
xor
xchg
push
lea
inc
jecxz
add
aam
jge
fdivrp
popf
or
mov
xchg
pop
jl
mov
xor
xor
or
push
aas
pop
add
js
cmp
out
data16
cmpsl
ja
mov
cmpsb
das
mov
rdseed
mov
add
sub
jecxz
pop
or
xor
lcall
mov
pop
push
sub
push
sbb
popa
or
or
packssdw
and
xchg
imul
aas
or
pop
add
shrb
mov
push
sbbl
int3
push
fdivs
shl
leave
insb
push
xor
cli
dec
cmp
fldcw
sbb
jge
repz
ljmp
sub
add
pusha
cmpsl
jg
out
jg
sbb
call
rol
jmp
lahf
outsb
ss
inc
dec
pop
fisubrl
roll
in
sarb
movsb
ss
jl
mov
lds
inc
out
and
int
daa
shl
jbe
xchg
jne
mov
test
jp
shrb
dec
shll
fildl
das
addr16
adcb
ror
mov
adc
les
je
loope
fldl
dec
jnp
mov
sub
xchg
in
mov
pop
aam
out
inc
mov
adc
int
insl
cmp
xor
es
out
repnz
mov
xchg
mov
nop
test
dec
shrb
test
adc
loopne
insl
fsubs
iret
ja
cli
lret
test
inc
pop
cli
aaa
std
jo
arpl
jnp
cmp
cmp
enter
lahf
fwait
iret
jge
pop
notl
and
ja
lock
pop
jb
sub
jmp
cmp
pop
test
xchg
push
cwtl
pop
sub
push
xor
jnp
jns
lahf
sub
pusha
or
pop
mov
mov
dec
jnp
orb
pop
cltd
or
xchg
bnd
jae
jno
add
cmp
hlt
mov
jae
adc
in
xchg
insl
xchg
daa
add
push
ret
pop
dec
fidivrs
sbb
fstp
dec
sahf
mov
pop
shlb
sbb
or
adc
enter
add
insb
sub
call
cmp
je
jno
adc
test
jmp
inc
mov
or
icebp
std
pop
negl
sub
cmp
or
mov
cmp
pop
fs
loopne
and
loop
js
mov
and
lret
rclb
addr16
or
sub
pop
or
mov
mov
scas
jl
scas
fdivp
aam
mov
dec
xchg
mov
sub
lock
sti
adcl
je
mov
add
pushf
mov
lahf
inc
push
sbb
lods
xor
cltd
aaa
and
loop
mov
aaa
test
xor
push
xorl
stc
ss
mov
or
jb
mov
push
mov
nop
mov
aaa
aam
dec
aam
loop
jecxz
mov
cmc
imul
cmp
pop
mov
pusha
push
jmp
inc
lds
pop
adc
cmpsb
mov
xchg
aas
sub
shrl
das
sub
sbb
sbb
push
inc
pop
imul
loop
jnp
lock
adc
add
nop
push
or
sub
dec
inc
lods
cmpb
shrb
mov
iret
xor
adc
adc
xor
inc
mov
adc
in
xchg
pop
shrb
stos
xor
cltd
sub
xor
cmp
jle
xchg
add
fs
cmp
std
roll
leave
call
xchg
ss
int3
mov
hlt
pop
lock
pop
out
out
lcall
xor
es
cmp
inc
pop
adc
test
push
push
bound
jmp
imul
in
fs
xchg
lock
inc
jnp
aam
xor
push
inc
mov
stos
adc
add
paddsb
test
mov
jnp
rorl
mov
das
xchg
mov
sbb
add
push
push
das
js
hlt
xor
out
cld
sub
pop
mov
test
outsb
out
inc
iret
inc
sbb
add
pop
arpl
outsl
push
mov
test
in
enter
jle
fcomi
mov
out
sub
popf
jns
jnp
sub
hlt
xor
mov
movsl
jmp
jnp
out
add
add
les
addl
jo
fs
imul
roll
pop
jl,pn
insl
daa
lret
xchg
mov
gs
push
cmpsb
and
mov
sbbl
sbb
mov
ljmp
nop
sub
xorb
addb
or
adc
jb
shr
mov
jns
inc
adc
arpl
ret
pop
cmp
notb
and
mov
in
push
movsb
pop
xor
aad
jae
jge
mov
and
mov
imul
fdivl
mov
jg
and
aad
movsb
inc
or
out
xor
or
jnp
mov
loop
sarb
pop
ss
addl
pop
nop
jle
dec
mov
pop
sarb
and
or
dec
dec
hlt
push
jnp
mov
xchg
fcoms
xchg
inc
sbb
mov
fsubr
cs
repnz
dec
leave
je
shl
scas
loope
fsubrp
cmp
xchg
cmp
sub
pop
mov
addr16
xchg
pop
daa
fimuls
push
pop
orl
or
mov
aam
test
not
adc
ljmp
mov
mov
inc
loop
enter
rolb
mov
push
mov
add
push
lds
test
sarl
out
into
sub
or
jmp
jns
fistpll
inc
loopne
sub
mov
sbb
clc
add
push
mov
jmp
mov
pop
or
lock
push
sub
js
xbegin
mov
test
pop
jmp
test
push
xchg
ljmp
fisttpl
push
fisttps
sub
insl
mov
js
jo
aaa
jp
xchg
jbe
es
jg
cmpsw
sbb
popa
mov
shrb
pop
inc
out
or
dec
bound
push
test
clc
pop
mov
cmpsl
mov
pushf
dec
bound
add
dec
or
es
mov
inc
xchg
mov
ret
cmpb
jns
mov
and
jl
int3
or
aam
and
daa
addr16
jns
jle
xchg
add
mov
dec
xor
lret
cli
mov
xor
sbb
push
dec
hlt
xor
in
push
pop
nop
cmpsb
iret
sub
mov
fmuls
jmp
sbb
dec
or
cmpsb
lods
andl
mov
and
outsl
scas
fs
push
inc
shr
ret
and
or
push
dec
xorl
adc
mov
leave
clc
mov
mov
rorl
jl
jae
push
mov
pop
and
or
out
leave
add
cmpl
pop
movsl
outsl
mov
jmp
dec
fisttpll
fbstp
test
xor
pop
rclb
idivb
insl
das
rcrl
inc
jge
movsl
or
jae
push
addl
or
pusha
mov
inc
out
or
dec
jae
out
negb
mov
adc
scas
cwtl
andl
mov
lcall
pop
test
lock
mov
or
idivb
das
movsb
aam
and
iret
pop
pop
in
mov
fstpl
jl
mov
push
mov
mov
movsl
popa
iret
cmpsb
pop
test
cld
jge
jno
adc
inc
sbb
cmpsl
xchg
sti
scas
call
sub
xchg
shlb
sub
sub
outsl
repnz
xchg
xchg
adc
and
ret
jp
mov
test
mov
adc
cmc
icebp
mov
ret
adc
mov
adc
loopne
pop
and
mov
movsb
add
gs
adc
adc
leave
push
das
cmp
sub
jmp
fdiv
std
jmp
jbe
shlb
fildll
lds
std
push
lcall
and
cs
and
fldt
pop
icebp
filds
fldcw
mov
lahf
pop
cmpsl
in
int3
arpl
in
mov
pop
sti
pushf
sbb
jne
pop
sub
lods
pop
hlt
jbe
dec
push
outsl
faddl
imul
ret
nop
loope
adc
mov
xlat
dec
sub
mov
xchg
mov
push
and
jmp
cmpsb
or
mov
je
ljmp
ljmp
xchg
adc
in
lret
fldt
imul
jmp
test
and
test
shrb
xchg
lds
imul
sbb
add
lods
lods
xlat
shll
iret
mov
repz
jns
clc
mov
imul
repz
repnz
lahf
outsb
push
pop
xchg
in
and
or
dec
inc
aam
push
int3
dec
fs
mov
inc
dec
inc
jae
sbb
push
jo
xchg
flds
mov
push
notb
jl
mov
cmp
imul
mov
cwtl
xlat
sarb
jae
lds
sbb
or
add
in
mov
insb
test
add
repnz
shl
xor
push
dec
lods
jo
push
sarb
sbb
pop
fwait
dec
jle
jnp
inc
jno
mov
out
ss
cld
shlb
notb
pop
iret
and
int
das
jo
jo
scas
sub
mov
idivb
hlt
bound
out
movsl
test
into
lods
pop
push
pop
jbe
mov
inc
dec
clc
and
or
cmp
and
test
xchg
xor
pop
es
jb
push
scas
les
out
cmpsb
fsubp
push
hlt
add
xor
sub
repnz
imul
rcrb
in
pop
daa
arpl
sub
mov
cmpsl
xchg
es
xor
adc
popa
push
and
sbb
jmp
mov
mov
cmpsb
ret
data16
mov
loopne
cltd
inc
fstpl
adc
push
rcrl
fiaddl
loopne
pop
rol
pushf
push
ret
xchg
lods
and
xchg
int
adc
cld
jno
push
pusha
fs
test
add
test
push
jne
xchg
aad
subl
mov
dec
pop
xor
and
add
push
jns
scas
sbb
loopne
mov
jg
mov
mov
mov
or
rol
add
jnp
cmp
push
sub
pop
fcos
jmp
lds
test
cwtl
mov
and
jmp
repnz
inc
pop
addl
dec
pop
jae
loope
add
xlat
mov
push
clc
mov
outsl
aad
sahf
adc
in
pop
ja,pn
jnp
in
sahf
sbb
cmp
in
incb
jmp
dec
xchg
das
fs
scas
push
out
mov
ljmp
stos
mov
je
mov
aaa
sbb
mov
xor
add
loop
call
cmp
fnstsw
add
xchg
dec
dec
daa
push
dec
lods
sbb
adc
das
mov
movsl
push
cltd
dec
shrb
out
stos
mov
and
gs
dec
mov
sbb
push
inc
xchg
psllq
push
push
adc
mov
movsl
pusha
and
jmp
and
inc
jo
jmp
or
dec
leave
or
mov
outsb
xor
mov
push
inc
out
fs
adc
cmp
popf
shrl
into
std
add
gs
mov
jg
loop
insb
or
aad
push
cmp
mov
fcomp
out
fmull
and
inc
push
les
jnp
jns
sbbl
aas
add
sub
mov
jmp
loop
inc
or
adc
push
popf
lds
loop
lret
xor
je
sbb
addb
ret
sub
out
addb
mov
and
inc
fbld
inc
xchg
mov
adc
leave
xchg
mov
mov
aam
mov
xchg
les
dec
inc
xor
pop
syscall
push
cltd
outsl
inc
pop
popf
test
pop
mov
mov
push
aas
sahf
dec
test
and
mov
int
outsl
cmp
jae
sbb
repz
and
mov
pop
out
adc
mov
mov
insl
mov
out
std
inc
fcmove
inc
fbld
add
and
xchg
add
loope
sub
mov
mov
out
cwtl
and
imul
adc
cmc
sbb
mov
adc
mov
adc
add
dec
loop
cmp
xchg
xor
arpl
aad
fwait
adc
in
hlt
aam
add
cmc
mov
pop
fsubrl
sub
mov
cmp
repz
iret
fcoml
dec
inc
and
xlat
add
push
aad
imul
clc
outsb
dec
xor
das
push
in
fstl
js
rol
add
sbb
mov
clc
data16
dec
pop
stc
add
and
xor
and
add
push
pop
and
call
sarl
pop
mov
dec
shlb
daa
and
andb
test
ljmp
dec
mov
leave
cltd
test
and
jno
and
icebp
je
or
jle
les
or
rorb
stos
adc
fnstenv
aas
in
in
aad
arpl
call
jl
fstpt
cs
subb
daa
push
mov
jecxz
and
out
cli
xor
rcll
mov
test
cltd
in
push
std
aam
add
adc
dec
call
xor
sub
ret
jp
adc
and
xorb
pop
jo
cltd
mov
fiaddl
pop
lret
test
mov
outsb
scas
sub
jle
dec
or
mov
mov
xor
movsl
xor
jae
repnz
insl
sub
xchg
inc
push
aad
cmp
adc
shl
int
or
cld
lods
call
mov
movsl
sub
pop
jp
and
fidivrs
add
gs
cmp
jb
adc
mov
push
cltd
cli
fcompl
fsubrs
mov
xchg
imul
mov
lock
call
or
lahf
jmp
icebp
sbb
pop
dec
xor
dec
loope
xchg
je
sub
int3
nop
out
dec
gs
insb
ja
inc
clc
xchg
mov
mov
and
jle
faddl
jg
mov
outsl
das
sub
xor
clc
bound
dec
xor
sahf
cmp
inc
out
lock
or
rcrb
movb
outsl
sub
and
jo
scas
xorb
add
test
movsl
sbb
testl
int
sbb
xor
jg
movb
les
cmp
mov
fwait
mov
mov
ljmp
mov
xor
push
pusha
push
pop
push
lahf
imul
sti
dec
push
movsl
outsb
add
out
cwtl
int3
cs
fbld
sbb
pop
dec
loopne
loopne
movsb
insl
xchg
fsubl
mov
in
pop
mov
fstl
lcall
movsl
jecxz
lret
xor
or
cld
or
add
mov
mov
push
or
mov
jmp
sahf
iret
cmpsl
stc
fists
sub
jmp
popa
mov
movsb
mov
mov
inc
jo
add
adc
faddl
inc
or
iret
cmp
sbb
or
mov
rclb
stos
adc
adc
cmp
adc
dec
test
adc
daa
dec
arpl
pop
imul
int
adc
outsb
data16
xor
jns
das
movsl
test
pop
shlb
xor
fistl
jmp
and
andb
imul
inc
dec
mov
jb
pop
pop
jb
add
cmp
aad
or
fwait
outsb
loope
aas
push
cmp
pop
addr16
xchg
jl
adc
sti
aam
sub
in
push
or
pop
xchg
xchg
testl
jno
dec
mov
push
add
out
jne
cs
xchg
int3
fldt
sub
into
xor
test
neg
xchg
out
jbe
test
idivb
xlat
adc
aaa
insl
insl
mov
scas
xor
aaa
mov
add
idiv
mov
loop
push
jbe
inc
push
out
push
push
repz
cli
psraw
aad
out
aas
sub
dec
andb
dec
jg
cmpsb
xor
scas
or
cwtl
xlat
test
lret
pop
in
js
jle
ret
cmp
popf
shll
addr16
dec
out
add
rclb
inc
ret
das
std
test
shrl
jbe
loopne
pop
lcall
jbe
dec
in
adc
mov
pop
sbb
dec
ja
pop
jp
lahf
mov
xor
sbb
cltd
lea
scas
cli
nop
movsl
aad
pop
test
shrb
jl
push
jecxz
xor
out
scas
jbe
rcrl
cmp
lds
in
rcr
sti
lock
sbb
inc
jns
xchg
clc
outsb
ficoms
arpl
fnstenv
sub
mov
cmpsb
arpl
adc
dec
fwait
push
push
sbb
arpl
fldenv
mov
inc
minps
sbb
xchg
cld
lock
sub
cmp
icebp
pop
into
into
cmpsb
dec
xor
shll
fwait
add
sub
cmpsl
sbb
aaa
bound
ss
pop
lods
cmp
jnp
stos
xchg
push
lods
fsubl
xchg
lods
mov
out
cmp
mov
jnp
and
xchg
cli
jle
adc
pop
add
jmp
nop
jno
ss
inc
pop
xor
loope
pop
aas
subb
test
jmp
xor
cli
adc
jg
xor
call
and
loopne
xor
sub
repz
pushf
mov
mov
pop
pop
aam
jmp
xchg
push
es
sub
test
jae
mov
add
gs
arpl
fstl
pop
jge
clc
cmp
enter
shr
gs
push
out
jecxz
outsl
popa
adc
mov
data16
inc
faddp
sti
pop
or
mov
inc
movsl
sub
lret
mulb
xor
pop
arpl
xor
jmp
insb
mov
ss
sub
or
mov
ds
jge
and
adc
mov
sub
lret
push
or
aad
add
pop
data16
icebp
jecxz
adc
enter
dec
addr16
or
and
xchg
out
enter
inc
outsb
ss
dec
pop
stc
mov
js
sbb
std
scas
sbb
stos
aaa
lret
jmp
test
push
in
inc
xchg
fistpl
in
leave
mov
sub
xor
loop,pn
and
clc
cmp
jne
hlt
jns
hlt
mov
cmp
aad
push
ljmp
mov
sbb
sub
inc
push
sbb
in
mov
add
int3
scas
imul
push
jno
loope
fldt
out
mov
movsb
ja
enter
dec
sbbl
fucom
inc
xor
ds
rorl
inc
aaa
lods
jge
adc
out
mov
push
dec
mov
roll
pop
jge
fistpll
or
pop
clc
js
pop
fsts
push
fnsave
orb
stc
sub
pop
out
fwait
imul
pop
dec
push
leave
xchg
imul
push
int
ds
or
push
std
mov
and
inc
xor
sub
inc
into
stc
xchg
out
and
in
push
add
mov
sbbb
leave
and
dec
inc
push
xchg
push
or
std
rorb
pusha
dec
inc
sub
inc
imul
pusha
js
call
lock
lcall
aaa
push
cld
sub
add
in
lock
inc
xor
fnsave
dec
outsb
add
add
loopne
push
shr
cmp
push
xor
mov
push
mov
insb
sarb
ja
repz
pop
pop
cmpsb
out
xchg
adc
dec
jl
daa
es
push
mov
loope
out
mov
lds
inc
mov
loopne
mov
sbb
scas
cmpb
mov
jmp
pop
ja
sub
dec
push
and
in
pop
sarb
add
jge
stc
icebp
cmp
mov
adc
lret
and
movsb
mov
and
pop
mov
jmp
dec
add
sahf
ret
aas
mov
mov
mov
jnp
sbb
inc
pmaddwd
jne
lds
lret
pop
rolb
scas
ret
mov
xchg
out
fcoms
dec
xor
pop
jb
push
inc
scas
dec
addr16
and
into
sub
mov
add
cmc
pusha
push
jmp
lods
push
sbb
sbb
and
popf
imul
push
pushf
mov
add
fldpi
test
movsl
inc
push
rcll
stc
test
mov
orl
sub
pop
mov
push
pop
rcll
pop
jge
pop
xchg
in
shr
sub
cld
leave
das
inc
dec
xor
inc
imul
lock
pop
stos
pop
push
cmp
mov
icebp
bound
pop
inc
shrb
sar
fisttps
sbb
cmp
pop
add
int
xchg
push
in
scas
negl
push
dec
std
mov
loope
xchg
and
imul
sti
pop
sbb
pop
lret
iret
nop
and
mov
stc
and
test
adc
jno
mov
ret
xorb
mov
dec
out
ret
imul
lret
imul
sbb
imul
push
loope
insl
jo
jo
push
clc
fisubrs
cmp
rcl
mov
dec
mov
inc
notl
jge
int
arpl
sub
inc
call
jo
push
lahf
mov
sbb
stc
mov
loop
mov
mov
cmpsb
sub
sbb
sbb
lea
fsubrs
or
aaa
out
mov
cmc
adc
jmp
adc
enter
daa
push
insl
ret
pop
lock
or
pop
lret
insl
insb
call
gs
add
addr16
scas
adc
mov
cmpl
add
mov
or
push
mov
je
test
andl
push
das
aam
push
push
shlb
sbb
in
xor
iret
sub
cmp
pusha
inc
cs
and
iret
cmp
leave
aam
mov
cli
in
cli
cli
adc
sti
and
out
inc
shrb
das
sbb
and
inc
aas
outsl
mov
xlat
out
cmp
daa
mov
jecxz
sbb
mov
les
xchg
dec
xor
jae
mov
pushf
mov
cs
mov
outsl
js
dec
mov
jl
push
pop
les
into
dec
mov
sub
and
xchg
out
push
mov
sub
and
pop
movsl
cmpl
mov
movsb
pop
rclb
mov
pop
xor
scas
push
lret
and
cmp
pop
and
mov
enter
mov
insl
jns
js
or
repnz
sbb
imul
mov
cs
xchg
les
mov
cmp
or
xchg
fisttpll
mov
into
sahf
xchg
hlt
mov
xchg
dec
enter
ret
es
jb
pop
call
es
xor
dec
fwait
inc
inc
rcll
sbb
iret
or
xchg
mov
mov
sti
inc
sti
mov
inc
adc
cmpsb
repnz
sub
xchg
mov
mov
ret
add
push
adc
insb
cmp
push
ret
icebp
mov
mov
inc
enter
cmp
push
mov
scas
imul
add
lcall
jle
add
mov
test
shlb
push
out
ss
pop
and
add
aas
and
cltd
and
loope
loop
insb
pop
imul
test
imul
fstpl
sti
sti
sbb
sub
les
sti
outsb
lahf
xchg
pushl
adc
fdivrs
sbb
adc
arpl
xchg
fisttpl
xchg
lahf
repz
cmp
arpl
xor
xchg
jbe
test
ds
daa
incl
fsubs
insl
mov
mov
shll
lds
dec
repnz
iret
shl
xor
mov
jo
out
subl
adc
dec
jl
lret
and
and
cmc
test
shll
jp
and
hlt
xor
repz
stc
inc
or
test
dec
push
in
mov
popa
sbbb
cmpsl
cmpsl
jnp
dec
push
or
mov
faddl
lock
loopne
mov
cmc
xchg
fnstsw
hlt
jp
xor
xlat
rcr
rcll
in
in
jg
fisttps
rcr
lcall
inc
adc
sub
sub
mov
adc
movsl
pop
sbb
fildl
pop
movsb
std
pop
subb
repnz
mov
flds
dec
mov
les
sbb
adcl
adc
imulb
aas
decb
aad
xlat
insb
outsl
add
mov
xchg
rorl
inc
nop
mov
scas
cmp
scas
dec
push
xor
xchg
cltd
mov
dec
or
jg
lret
or
cli
rorb
and
in
mov
stc
xor
push
push
sub
push
subb
pop
movsl
adc
scas
sysexit
dec
mov
imul
ljmp
mov
sub
adc
popa
shll
daa
push
popf
inc
sbb
inc
jecxz
arpl
scas
xlat
sar
test
mov
adc
and
fdivrl
mov
out
push
mov
cmpsb
enter
mov
dec
mov
xor
xor
and
fmull
add
sahf
xchg
aam
add
data16
cltd
or
fwait
sub
dec
cmpsb
jge
jle
mov
testl
out
imul
ret
jbe
stc
mov
push
mov
xchg
jnp
jmp
lar
xchg
mov
dec
pop
mov
test
dec
adc
dec
les
dec
cmpsb
mov
pop
and
fs
call
orb
dec
jl
mov
xchg
cld
notb
out
sub
lds
sub
incb
jae
imul
lock
inc
add
aam
xor
or
pop
movsb
add
or
and
movsl
cmpsl
leave
mov
call
inc
jb
push
mov
aad
popf
imul
idivb
xchg
mov
xor
shr
inc
pop
push
aaa
in
les
mov
mov
not
xchg
push
ret
xchg
cmp
imul
or
pop
xchg
movsb
inc
inc
or
les
adc
cmp
mov
mov
pop
pop
and
and
sbb
mov
pop
in
mov
cld
cmp
push
in
sarl
dec
into
cld
adc
jne
mov
xor
stos
inc
push
mov
jns
dec
mov
mov
cmpsl
int3
inc
in
shl
ficoml
popf
adc
pcmpgtb
out
sbb
and
xor
aaa
jl
imul
call
xor
xor
lock
cmp
sub
ret
arpl
cmc
adc
outsb
aas
es
or
push
pushf
adc
cld
push
add
sub
imul
les
dec
add
icebp
mov
data16
test
push
hlt
mov
testb
arpl
call
stos
sbb
jge
sbb
mov
mov
loope
ffree
jp
test
enter
add
or
mov
test
pop
movsb
shrl
int3
jb
mov
movsb
dec
push
xor
xchg
int
test
nop
jae
pushf
and
ret
xchg
leave
in
bound
and
cmp
in
mov
jnp
ficoml
dec
rcl
aam
out
mov
adc
sbb
bswap
fisubrl
dec
mov
pop
scas
sbb
adc
aaa
add
add
mov
mov
pop
jl
gs
fwait
or
pop
and
jmp
inc
xor
push
push
adc
or
and
loope
out
push
or
jge
repz
fwait
ret
xor
xchg
in
imul
fimuls
add
push
lds
sbb
sbb
aad
inc
cwtl
inc
mov
mov
insb
fbstp
jb
arpl
scas
mov
adc
xchg
cld
fcmovb
pop
filds
mov
imul
idivb
push
sub
ror
sub
mov
mov
add
nop
jmp
lds
scas
mov
fs
inc
scas
jge
cmpsl
adc
outsl
fiaddl
mov
mov
shrb
iret
fldcw
das
ss
jb
inc
push
repnz
sbb
push
cmp
mov
divb
cltd
add
mov
or
xor
mov
xchg
popf
cwtl
xchg
sbb
cmp
imul
cmp
adc
leave
mov
shrl
cmp
add
aad
pushf
adcl
xor
sti
gs
dec
lahf
push
ret
shrl
sti
mov
lcall
sahf
cmpsb
stos
push
lcall
adc
fdivrl
std
inc
mov
enter
std
sbb
sbb
sbb
push
icebp
orb
pop
popf
adc
test
pop
sub
dec
jl
out
xlat
mov
adc
jne
add
test
scas
xchg
xchg
add
cltd
mov
test
jne
rclb
sahf
cld
ror
pop
rcl
addr16
repnz
mov
push
in
test
mov
lds
xchg
and
into
enter
icebp
jbe
cli
emms
data16
inc
fwait
addr16
jge
icebp
dec
or
aaa
arpl
sub
push
mov
das
loope
or
out
std
lods
aas
aaa
fisubrl
xchg
push
and
or
jb
mov
push
ret
mov
jo
rcrb
xchg
fidivrl
pop
push
cwtl
jge
in
mov
ficomps
clc
mov
fnstenv
fisttpl
push
sbb
cwtl
imul
addr16
nop
sbb
sarl
imul
mov
add
shr
jl
cltd
jbe
adc
movsl
fisttpl
xor
sub
adc
lret
fbstp
out
int3
lcall
test
pop
dec
cmpsb
or
push
mov
mov
dec
das
sbb
dec
adc
shl
lret
xchg
ds
outsb
dec
mov
push
or
inc
leave
jbe
outsl
out
ljmp
dec
cld
xor
outsb
mov
sbb
push
jne
xchg
scas
jbe
push
pop
repnz
mov
and
xor
scas
scas
cmpsb
jns
cmp
mov
and
ficoms
shl
mov
push
add
pop
xchg
les
sub
mov
test
test
sbb
addl
pop
mov
pop
ret
div
mov
mov
shll
inc
mov
sub
push
push
mov
int
aaa
ret
mov
mov
jb
jns
in
insl
jno
sbb
mov
lcall
xor
cmp
xor
or
xor
mov
mov
jmp
les
xor
mov
or
add
bound
out
mov
cld
jns
adc
push
cmp
in
stos
jnp
test
jno
sbb
mov
outsl
aas
ss
js
test
mov
xchg
in
aam
push
aam
les
mull
in
push
mov
or
xchg
test
dec
lcall
bound
std
mov
add
lods
stc
sub
adc
aam
and
sub
loop
cld
jmp
test
push
out
ficompl
jmp
pop
sub
push
jns
les
lods
xchg
mov
popf
or
jecxz
int3
mov
insl
or
push
call
clc
retw
pop
shlb
mov
icebp
into
mov
inc
addr16
and
dec
sbb
mov
xchg
fcoml
bound
xor
xor
mov
add
mov
push
jbe
dec
out
or
inc
sbb
ja
mov
sub
sub
in
mov
test
dec
dec
jns
xchg
dec
js
scas
repz
mov
in
mov
and
xor
mov
insl
es
in
testb
jnp
sbb
xchg
sbb
into
popa
mov
pusha
inc
inc
jl
add
push
ret
insl
fs
sbb
movsb
stos
clc
scas
nop
and
mov
js
mov
lret
scas
xor
lahf
cs
and
ret
add
mov
xchg
sub
jae
flds
hlt
in
std
xchg
jl
push
pop
gs
int3
and
bound
xor
add
jo
cmc
add
push
and
xchg
or
push
jb,pt
mov
aaa
in
outsl
pop
and
add
negl
mov
jns
push
add
loop
push
adc
add
sbb
jge
loope
fmuls
inc
pop
scas
fadd
mov
loop
mov
mov
sub
scas
dec
sub
aad
loop
mov
add
mov
pop
sbb
imul
je
xor
add
pop
incb
xchg
addr16
mov
jmp
jne
jmp
jno
in
ret
mov
pushaw
lods
rcrl
enter
aaa
add
sub
pop
or
and
jmp
sub
push
sbb
lock
dec
add
inc
jno
add
andl
pushf
popa
cld
sahf
nop
pushf
popa
pop
outsb
js
jae
insb
push
lods
sub
jle
xor
push
xor
xor
or
mov
or
mov
cmp
cmpsl
and
lock
sub
pop
or
imul
mov
push
xchg
and
scas
in
xchg
pop
insl
std
mov
lahf
fwait
xchg
mov
jecxz
dec
xor
les
lahf
lods
outsl
divb
push
fimull
adc
int3
sbb
jns
add
inc
pop
and
aam
popa
mov
out
fidivrs
and
mov
push
mov
mov
and
jae
xchg
adc
mov
adc
ss
aaa
jne
nop
push
jp
or
jmp
xchg
mov
adc
sbb
sub
sbb
dec
movsb
or
pop
or
dec
xchg
fidivrs
push
push
popa
inc
push
popa
and
movsl
xlat
add
mov
add
xchg
fisubs
cwtl
notb
mov
mov
js
mov
or
xchg
mov
add
fs
rcrb
push
adc
aas
arpl
dec
not
stc
pushf
scas
pop
cld
repz
and
in
ret
jno
mov
mov
or
pop
or
mov
lds
pop
push
push
xchg
jge
sub
xchg
mov
mov
pop
and
js
jg
lret
addr16
in
mov
xchg
mov
pminub
adc
ds
scas
mov
sub
adc
adc
dec
xchg
cli
inc
dec
add
xor
and
loopne
imul
sub
mov
push
stos
iret
sbb
std
addr16
mov
repnz
cmp
test
inc
shl
idivl
pushf
shll
mov
jbe
mov
das
mov
and
aam
fxch
jecxz
mov
jle
sbb
jne
ret
cwtl
add
jl
jge
insb
test
mov
cltd
shll
cld
and
push
xchg
int3
sub
cmc
fisubrs
dec
mov
jecxz
pop
inc
xchg
xchg
scas
mov
push
out
lret
and
cmp
lock
adc
out
sti
addr16
adc
mov
jne
ret
add
and
pop
nop
out
ret
lds
inc
in
rcrb
dec
push
hlt
in
cwtl
push
push
dec
clc
push
mov
add
roll
js
or
push
pop
mov
lock
xchg
addl
push
loope
shll
pusha
and
lds
inc
fwait
call
cld
fdivrs
cmc
adc
adc
icebp
pop
add
icebp
rolb
add
in
and
or
cmp
push
cli
push
jmp
xchg
in
shll
in
sub
inc
lock
xor
mov
jnp
sub
or
cmpsb
test
jecxz
adc
movsb
addr16
push
shr
insl
pop
add
mov
xor
cmp
js
lock
xchg
add
rcrl
jnp
adc
lret
fstpt
fs
xchg
sbb
and
mov
imul
push
add
stc
rolb
dec
mov
jno
or
push
and
bound
pop
shrl
cmp
hlt
push
in
ljmp
sahf
sbb
jnp
adc
subl
push
aas
or
push
scas
movsl
mov
and
ret
repz
mov
push
rcr
clc
stc
or
popf
inc
scas
mov
mov
adc
lea
outsb
push
je
and
aaa
aas
add
adc
xchg
xor
adc
loop
std
adc
inc
xor
push
flds
in
lock
fsubp
jp
sahf
xchg
mov
inc
dec
and
jnp
lds
xchg
add
jne
int
rol
xor
mov
add
xchg
rolb
dec
pushl
mov
inc
xchg
xor
pop
loopne
dec
lret
mov
inc
push
in
mov
adc
ds
xor
add
and
sarl
aad
mov
dec
and
add
jg
mov
cmpsl
ret
and
insl
or
add
cmp
sub
in
scas
shl
pop
mov
cltd
and
sub
cmp
add
pushf
jl
and
inc
mov
sti
mov
insl
fs
jg
lock
rorl
pushf
cli
inc
or
cmp
fcomps
loope
iret
mov
lock
push
or
jne
loopne
mov
inc
pop
inc
push
xchg
dec
cwtl
mov
cmp
jne
xor
pop
and
dec
cmp
lea
xchg
bound
mov
cmp
movlps
jmp
cmp
cmp
ljmp
lds
jne
fstpl
ret
sub
xor
sbb
adc
push
test
jecxz
ljmp
pop
notl
inc
jb
push
adc
sub
lret
out
pop
and
add
loop
lcall
fstpt
mov
pop
jge
dec
pop
cmp
sub
or
and
movsb
loop
incl
and
orb
pop
test
jne
or
mov
notl
pop
addr16
add
sbb
ret
mov
mov
xchg
pop
pop
jg
out
in
call
sti
xor
cmc
arpl
in
into
or
negl
inc
mov
pop
js
mov
add
jecxz
add
cmpsl
test
rorb
jge
test
icebp
xchg
scas
fdivrs
aam
scas
xchg
and
jb
jo
inc
into
int3
setle
pop
aad
es
out
addr16
mov
xor
mov
fmull
jge
pop
std
aas
or
xchg
dec
jmp
jle
ljmp
lret
mov
imul
rclb
dec
jl
push
insl
pop
js
pop
outsb
cmp
and
aad
adc
dec
stos
daa
push
inc
into
jg
xchg
aaa
das
sub
lds
fs
mov
ds
mov
lods
mov
cmp
mov
cmc
lahf
xchg
insb
add
inc
and
push
dec
sub
ja
mov
popa
ja
push
enter
in
adc
fstpt
rorl
sub
sub
push
cmp
pop
insl
loope
shr
cmpsl
xlat
clc
sbbl
jbe
movsb
sub
lcall
pop
stc
ljmp
lds
pop
xchg
popf
stc
call
sbb
in
mov
jle
test
into
imul
jge
pop
push
mov
scas
pushl
movsb
test
sub
leave
jmp
xor
mov
ret
rcrl
loopne
sbb
arpl
mov
rolb
in
mov
arpl
popa
outsl
out
and
fwait
in
lods
push
stos
add
and
mov
sub
mov
pop
pop
inc
decb
xor
mov
and
pop
push
imul
inc
jecxz
test
sub
adc
and
push
xor
cmp
push
sahf
lds
or
std
xlat
popa
lds
adc
mov
add
push
lods
push
xor
jae
dec
jecxz
pop
jns
test
and
jnp
jns
shrl
daa
pop
adc
outsl
mov
push
out
arpl
loop
repz
mov
sti
xor
shr
xor
mov
dec
sti
shrb
push
into
stos
ds
fbstp
mov
mov
dec
adc
xlat
loop
rcr
aad
aam
rolb
adc
cwtl
cmpsb
sub
movsb
mov
out
cmp
popa
pop
pop
and
ss
sbb
aam
rorl
lock
inc
inc
jbe
mov
xchg
inc
jns
inc
mov
aam
in
push
jne
ja
mov
push
push
add
push
xlat
lcall
jl
movsl
ds
nop
sbb
mov
xlat
cltd
jg
push
dec
and
shll
or
mov
in
or
jno
fidivrs
sub
xor
and
lods
es
jne
jne
or
push
std
je
jecxz
mov
pop
sub
xor
pop
pushf
in
pop
shll
mov
faddl
movsl
cwtl
or
and
cmc
ds
roll
xchg
cmp
aad
cwtl
mov
pop
mov
jnp
xor
aaa
sub
insl
ja,pt
les
mov
or
stc
mov
popf
out
mov
int3
js
andl
sub
xor
push
fstl
or
out
pop
cmp
fcmovnb
in
mov
adc
and
das
cmp
leave
stos
addb
jne
gs
add
pop
movsl
aaa
dec
inc
sbb
xchg
mov
pushf
pop
pop
fbstp
mov
filds
orb
daa
into
jmp
xchg
sbb
into
xor
push
inc
xchg
lock
addb
mov
test
outsl
dec
in
movsl
mov
inc
mov
sub
sub
fdivl
popf
push
add
repz
es
inc
sahf
fsts
jb
push
imul
inc
sbb
outsl
lock
icebp
jo
cltd
xor
lods
push
shr
stc
mov
mov
in
cmpsb
ds
mov
and
mov
mov
cmpsl
xchg
xor
mov
add
lods
push
jae
dec
pop
mov
jb
ss
dec
inc
mov
mov
test
popf
stos
xor
cmp
xchg
pop
fists
cmpsl
sub
sub
mov
insl
js
mov
and
cltd
xor
sbb
sub
andb
mov
push
fisttpll
call
jb
sbb
lea
xor
xchg
pop
and
pop
push
adc
or
sbb
mov
daa
sbb
push
xchg
arpl
pusha
mov
rcll
call
sub
jecxz
or
xchg
popf
addl
leave
or
pop
cmp
cmp
push
pusha
sahf
ljmp
rorb
out
jns
push
jecxz
lock
ja
in
repnz
xor
mov
test
xor
adc
arpl
sbb
cmpsl
test
sbb
dec
pop
outsb
aam
add
sbb
push
jmp
cld
and
ficomps
dec
arpl
nop
out
jp
cmp
cmp
dec
mov
into
mov
data16
movsb
sub
pop
sub
or
sub
sarb
loopne
ja
and
push
hlt
and
and
xor
imul
jnp
lret
stos
inc
loope
adc
fistpll
pusha
in
sbb
cmp
mov
sbbl
jge
add
add
outsb
sahf
sahf
pop
js
lds
sub
xlat
adc
shll
cmp
in
sub
flds
out
adcb
xchg
dec
and
lahf
cmp
loop
out
lea
add
pop
cltd
mov
cltd
lds
adc
pop
dec
fmul
addr16
mov
xchg
mov
add
aad
call
jg
adc
shll
xchg
ja
pop
bound
notl
movsb
repz
push
mov
xor
imul
lods
dec
inc
fwait
daa
sbb
mov
inc
cmpsl
cmp
lea
je
lock
cld
xor
pop
mov
sbb
fwait
push
jb
pop
mov
xor
dec
out
aam
rcrl
repz
into
aaa
inc
test
loopne
add
jl
dec
mov
loop
pop
xchg
enter
dec
cmp
inc
mov
jae
or
mov
sbb
inc
rorb
push
hlt
xchg
lock
add
or
dec
xchg
add
dec
xchg
enter
push
pusha
xchg
sub
in
adc
fwait
mov
mov
push
mov
mov
dec
loop
and
dec
stc
insb
and
pop
lea
adc
dec
stc
pushf
jl
popf
les
xor
pop
xor
dec
jl
mov
xchg
out
jecxz
inc
pushf
mov
jmp
push
fistps
add
imul
js
xchg
and
pop
pop
int
jo
xor
pop
int
negl
mov
dec
ja
xchg
dec
mov
fucomp
insb
jne
or
mov
loopne
mov
dec
push
mov
hlt
xchg
sbb
aad
fbld
pop
test
pop
fidivrs
dec
dec
or
pop
sub
xor
push
pop
pop
rclb
or
xchg
nop
cmpsl
mov
sbb
pop
gs
ss
mov
mov
xchg
mov
aaa
jbe
pop
lahf
or
pusha
push
das
xor
std
push
cmp
sub
mov
pop
shlb
add
in
sub
ret
add
cld
cltd
adc
mov
xchg
fldl
xchg
xor
into
fdivl
mov
pop
mov
rorl
cmp
das
xchg
jle
xorl
jne
xchg
sbb
pop
dec
lret
daa
out
inc
test
call
mov
push
lahf
lds
pop
je
mov
mov
push
cmpl
xchg
push
jbe
aaa
dec
add
insl
adc
jno
pop
mov
mov
sub
inc
lcall
icebp
and
fidivrs
jae
cmp
xlat
jnp
sbb
adc
ss
push
es
cmpsb
pop
pop
jge
mov
cs
call
imul
das
add
popa
cmp
push
pushf
daa
les
pop
push
fists
dec
cld
push
or
adc
rcll
mov
hlt
loope
cld
ljmp
stc
stos
mov
sbb
test
jp
insl
lods
sarl
rcll
sub
adc
xchg
cmpsl
stos
mov
mov
or
ds
or
mov
push
xchg
fisubs
cwtl
jb
ret
sahf
les
cmp
lcall
es
push
iret
aaa
dec
aaa
add
es
jbe
jecxz
fcompl
cmpsb
shll
lods
push
das
push
icebp
pop
fildl
fs
lret
in
sub
adc
or
add
dec
insl
pop
stos
push
sub
mov
andl
fldcw
push
sbb
outsb
call
aas
fadds
hlt
xchg
movsl
imul
mov
push
testl
sar
sub
xor
inc
nop
aam
push
or
mov
repz
push
cwtl
mov
xchg
add
ret
sub
aad
bound
out
xor
adc
or
mov
repz
enter
aas
test
pop
pop
out
cmpsl
decb
divl
push
sub
daa
dec
push
push
xor
cmc
mov
repz
pop
pushf
dec
xorb
dec
dec
xor
add
in
test
mov
jle
cmp
adc
scas
mov
pop
or
pop
push
movsb
lahf
pop
xchg
jbe
stc
mov
xchg
and
and
or
sub
lock
lds
cmp
xor
rcll
mov
subb
adc
lret
adc
iret
lods
popf
decl
cmp
mov
mov
push
mov
mov
gs
in
dec
jmp
out
das
push
fwait
mov
jae
shl
or
xchg
push
mov
jl
push
mov
mov
in
dec
js
add
call
int
shr
arpl
sbb
gs
ss
cltd
xor
jno
out
jno
cmp
and
jmp
pushf
pop
mov
ss
pop
mov
cwtl
jnp
mov
xchg
and
aaa
mov
daa
stc
mov
or
enter
push
into
push
test
adc
add
pop
adc
test
mov
xchg
sbb
mov
loopne
xchg
xchg
xchg
aam
jmp
test
inc
adc
dec
nop
or
lahf
push
lds
sahf
inc
lds
mov
xor
int
cs
adc
push
pop
arpl
and
stos
mov
shll
in
cmpsl
out
sub
loope
jg
sbbb
pop
xor
scas
sbb
loope
fists
add
es
fdivl
int
pop
sub
jmp
sahf
fwait
xchg
add
xor
mov
dec
inc
pop
dec
fisubl
lods
fbld
scas
xor
xchg
js
std
mov
sbb
xchg
push
ds
les
jge
mov
push
stos
xlat
insl
pop
cli
dec
xchg
fidivrl
fs
cld
adc
inc
inc
xchg
fisubrl
mov
add
aam
cmpsb
out
imul
ss
pushf
jecxz
xor
and
aad
pop
stos
mov
ret
mov
fwait
lds
ljmp
adc
test
add
push
dec
mov
push
push
repnz
leave
push
in
pop
sub
push
leave
mov
andb
or
or
mov
inc
mov
outsb
jb,pn
pop
ret
aas
pop
cmp
test
pop
push
data16
xor
push
push
jo
das
fiadds
adc
and
xor
jne
mov
xchg
pop
jnp
mov
icebp
shll
push
daa
sbb
enter
and
xor
mov
testb
dec
pop
and
inc
inc
addl
test
xor
xor
xor
addr16
shll
push
or
cmp
fbstp
sub
stos
and
or
ljmp
push
lret
push
xorb
leave
int3
out
add
iret
jp
cld
es
dec
incb
sbb
stos
lret
inc
lods
add
daa
sub
and
rcrb
inc
adc
push
jbe
std
sbb
cli
add
push
rcl
pop
or
sub
jae
ret
in
sbb
mov
loope
cmp
push
imul
or
pushf
ljmp
push
mov
loopne
push
cltd
mov
fnstenv
jge
mov
fwait
or
orl
push
rclb
mov
mov
je
and
xchg
sarb
in
cli
jbe
mov
gs
push
inc
push
xor
mov
ret
sbb
cli
outsb
xchg
xor
dec
mov
and
test
cwtl
push
in
data16
mov
sbbl
adc
jnp
push
mov
loope
nop
addr16
int
fmul
out
pop
lret
push
adcb
sahf
add
testb
imul
pop
sub
ret
push
insb
or
jo
mov
lahf
ds
mov
in
jle
dec
pop
lock
testl
xor
or
outsb
mov
inc
pop
sbb
xor
push
loop
fidivs
shl
and
out
test
push
sub
mov
or
sarb
psubsw
insl
add
into
lcall
jb
jbe
loope
xchg
jne
ds
inc
jne
cmc
adc
sub
pop
and
fldt
xor
sub
nop
loopne
outsb
xchg
cmpsl
test
loope
rcr
fwait
mov
adc
insl
loop
xor
xor
xor
pop
sbb
add
orb
les
pop
lret
sbb
or
and
pop
cmp
pop
enter
push
std
das
jmp
push
jge
repz
rcrl
daa
arpl
lods
mov
jle
ss
push
add
aad
roll
mov
das
rorl
fdivs
mov
loopne
or
ja
pop
pop
mov
ja
popa
loop
fimuls
sub
ljmp
add
je
loope
add
xchg
rcrb
sbbl
es
xchg
add
jle
or
lcall
mov
xor
push
int3
cmpsb
roll
mov
sbb
mov
add
jle
or
push
sub
mov
fstpt
ret
jno
add
adc
jmp
sbb
hlt
rorb
xchg
add
aaa
jle
xor
cmp
jmp
test
inc
pop
xchg
dec
ret
cmpsl
pop
into
cmc
jo
jg
lods
fcoms
inc
jnp
xor
mov
cmp
test
sbb
scas
je
lahf
jo
scas
clc
lcall
jns
push
imul
int
mov
cmp
loopne
cwtl
push
mov
mov
cli
lea
loope
push
lcall
mov
mov
push
filds
push
std
js
mov
repz
pop
mov
sti
jp
mov
cmpsb
sub
fistl
fs
ds
jnp
aas
xor
out
cs
jns
mov
xchg
adc
fildll
insb
ljmp
arpl
add
sub
dec
loopne
or
nop
ja
insl
cmp
jbe
fldenv
jecxz
dec
dec
cwtl
test
pop
sti
rcl
pop
out
sbb
jmp
sub
xor
into
frstor
inc
fsubrp
pop
pushf
aas
adc
rdmsr
sub
pop
inc
lcall
dec
dec
cmp
cmp
sbb
adc
dec
mov
sbb
in
xchg
inc
add
and
in
andl
or
lds
cli
iret
cmp
xchg
fsubs
or
inc
movsb
xchg
insb
lahf
in
inc
mov
inc
push
adc
add
jns
dec
bound
cmp
cld
push
sub
adc
jg
sbb
jae
popl
mov
sub
cmove
jbe
rcl
pop
and
pop
push
inc
stos
bound
xchg
aaa
mov
pusha
lret
fsubrs
sub
or
mov
xor
xlat
and
adc
push
dec
mov
int3
mov
js
bound
jg
cmp
scas
pop
stc
mov
hlt
and
stc
and
mov
int3
shlb
xchg
pop
adc
push
ds
out
push
xchg
jbe
cmp
pop
mov
in
ljmp
stos
sbb
rorl
xchg
hlt
je
xchg
scas
or
xchg
pusha
cmp
pop
rorb
push
jge
pop
mov
pop
mov
push
jmp
ja
stos
or
add
xchg
dec
addr16
fs
mov
shll
cwtl
lret
ret
negb
sbb
mov
inc
lahf
pop
idiv
mov
fnstcw
push
mov
insb
fdivp
pop
sub
sbb
iret
loope
dec
pop
movsb
adc
or
xchg
stos
mov
jmp
dec
jp
push
jp
push
xor
dec
pop
dec
dec
loop
add
push
dec
mov
jmp
dec
xorl
xor
dec
into
dec
pop
dec
sbb
adc
mov
lock
mov
daa
into
cmp
jmp
cmpb
xchg
cltd
stos
sbb
mov
aam
jno
and
push
or
xchg
sti
das
loop
hlt
daa
or
leave
pop
mov
push
hlt
add
push
push
dec
jo
insl
repnz
jg
idivl
repnz
data16
fstpt
cs
add
push
pop
aaa
mov
jmp
jmp
testl
mov
addb
dec
in
pop
add
aam
inc
fisttpll
xor
pop
inc
inc
adc
ds
or
adc
inc
ret
inc
addl
mov
popa
jne
adc
mov
xchg
leave
aad
cltd
pop
inc
lods
stos
nop
orb
out
push
leave
fmull
jno
add
mov
mov
rcr
bswap
insb
in
frstor
mov
stos
adc
clc
out
and
push
loope
push
jns
repz
fs
mov
sub
bound
addr16
inc
jle
mov
sub
test
jno
sti
or
sub
mov
jnp
adc
ljmp
stos
leave
dec
sbb
cmp
in
jp
cmpsb
push
outsl
mov
mul
mov
roll
pusha
in
pop
mov
pushf
sarb
xchg
jb
ret
and
jmp
or
stos
or
push
pop
sbb
mov
mulb
cwtl
adcl
sti
sbb
mov
aas
sbb
fdivrl
enter
mov
add
pop
cmpsl
das
cltd
and
sub
fwait
mov
outsl
into
sbb
sub
cs
repz
popf
imul
jae
mov
fs
xlat
out
lret
clc
std
cli
mov
inc
ret
imul
mov
xchg
pop
adc
cltd
out
arpl
lcall
adc
sahf
int
push
in
sbb
jmp
fcom
ds
xor
xor
lock
mov
inc
gs
ss
scas
int3
scas
popa
scas
jp
mov
mov
mov
pusha
and
leave
xor
lds
notb
xor
jne
jo
stos
jns
xchg
push
xor
hlt
negb
push
xchg
ret
push
mov
bound
into
and
into
scas
add
push
mov
ret
jge
mov
js
sarl
rcr
pop
imul
dec
ja
mov
push
xor
mov
pop
dec
test
shlb
adc
dec
jbe
push
cltd
adc
and
lods
inc
xor
filds
jmp
outsl
mov
and
rolb
imul
popa
cmp
cmp
push
test
sbb
fisubrs
mov
add
or
push
add
rol
aaa
and
or
lea
mov
sbb
and
data16
pop
movsb
aad
hlt
fwait
jp
scas
add
loop
pop
in
add
cmp
roll
out
fsubl
cld
je
jno
je
xchg
and
lock
hlt
popa
int3
dec
in
sbb
dec
js
mov
lret
adc
xchg
cs
sub
xchg
rcl
popa
cmp
lods
adc
jle
xchg
pop
xor
rcl
push
movsb
push
ja
dec
addr16
shll
aad
xchg
mov
test
lret
sarl
pop
iret
clc
pop
sub
or
or
loope
adc
add
sbb
into
cmp
mov
dec
inc
stos
pop
add
dec
or
mov
adc
fsubl
pop
cs
push
mov
inc
cmp
rorl
test
push
push
lods
xor
rcr
cmpl
pop
or
js
sub
clc
mov
aad
lock
inc
push
outsb
xchg
pop
mov
fisttpll
subl
ret
in
insb
xchg
add
adcb
or
pop
push
shrl
xchg
xor
push
sbb
cmp
fs
sub
pop
loope
pop
imul
out
mov
sbb
mov
jg
push
and
xchg
lret
mov
mov
in
mov
add
rcr
out
ret
inc
popa
mov
clc
jo
cmpsb
pop
adcl
in
xchg
movsl
dec
jb
scas
xor
push
xchg
fs
jmp
stos
mov
nop
movsb
ror
loopne
xor
jae
mov
sbb
xlat
arpl
iret
stos
test
imul
push
rdtsc
cs
add
sbb
pop
shlb
pandn
in
icebp
cmc
scas
cli
pushf
mov
push
gs
std
loopne
lock
aaa
clc
inc
sbb
je
xchg
aaa
insl
or
adc
cwtl
lret
fnstsw
pop
daa
dec
cmp
ljmp
xor
xor
mov
mov
ret
loopne
jge
rcll
ss
out
dec
movaps
pop
jl
mov
add
sub
jno
lods
mov
popf
lock
sub
and
lret
push
dec
clc
addr16
iret
mov
sbb
bound
outsb
jl
or
fwait
adc
adc
lahf
mov
je
pmaddwd
mov
add
aaa
cwtl
mov
pop
inc
sub
mov
pop
pop
loope
lret
cmp
add
daa
in
xchg
and
fdivrs
cli
sbb
xchg
negl
int3
daa
mov
insb
cmp
pop
lret
in
fldl
sahf
scas
in
in
dec
leave
ret
cmp
push
sub
add
arpl
out
sub
inc
mov
add
daa
imul
mov
xchg
push
aas
loope
and
stc
enter
stc
ss
mov
pushf
adc
loope
jecxz
arpl
xor
push
repz
xchg
sbb
sarb
mov
mov
xlat
enter
or
mov
movsl
sub
cwtl
sub
adcb
nop
jae
decb
xlat
or
sbb
loope
shlb
pop
std
clc
pop
jmp
sbb
jl
inc
mov
inc
jbe
in
dec
aam
pusha
pop
in
or
fsubrs
add
xchg
cmc
mov
mov
jnp
pusha
ret
stc
pop
add
int3
mov
sbb
and
stc
outsb
mov
xor
mov
repz
hlt
loopne
jo
inc
sbb
jecxz
lds
es
dec
pusha
outsb
aaa
add
or
ret
inc
pop
inc
sub
stos
es
fdivrl
cmpsb
sbb
push
addr16
and
xlat
mov
mov
clc
xlat
xchg
add
sbb
ljmp
sbb
scas
cmp
inc
repz
iret
cmp
jp
repz
and
jge
pop
dec
loop
movsl
cmp
push
lahf
sbb
jmp
cmp
or
push
inc
inc
adc
ror
push
ss
addr16
stc
sub
dec
pushf
adc
fiaddl
cmp
mov
jl
je
pop
inc
das
pop
push
jae
jno
xchg
mov
clc
aas
fiaddl
push
aas
aaa
shll
lret
mov
ja
inc
sub
dec
add
inc
or
ret
mov
push
add
mov
jno
aad
pop
adc
mov
cs
mov
aas
insb
jmp
mov
test
lahf
scas
sub
add
jb
in
test
pusha
jnp
jo
shl
notb
mov
adc
jge
je
jmp
cmp
int
and
mov
pusha
pop
xchg
cmpsb
ret
lcall
xchg
jle
pushf
int3
shll
clc
jns
jne
inc
leave
cld
test
sub
inc
and
xchg
jb
icebp
popf
scas
loop
mov
inc
ss
cmpb
adc
jge
push
aaa
stos
popf
jle
aam
inc
push
xchg
and
mov
sarl
dec
add
dec
icebp
fwait
push
icebp
push
cwtl
repnz
arpl
arpl
test
movsl
sahf
loop
inc
lea
aad
push
lock
mov
imul
cmp
loopne
mov
and
jg
pushf
dec
adc
xchg
ficoms
ret
pop
and
jp
mov
clc
cmpl
or
pop
mov
fists
sub
jns
sti
imul
ja
push
mov
std
ret
inc
shr
push
xor
fbstp
out
ret
mov
xchg
iret
push
add
aad
sbb
xchg
dec
in
out
cltd
femms
repnz
adc
jg
xorb
andl
add
push
testl
add
mov
mov
insb
lea
push
xchg
mov
lea
fcoml
das
sub
jl
in
xchg
xchg
inc
clc
in
add
fmuls
pop
shl
fcmovnu
faddp
or
negb
add
cmpsb
lods
mov
xchg
daa
pop
add
push
mov
cmp
or
fwait
jg
cmp
xlat
xor
mov
inc
icebp
lds
xchg
aas
mov
cmp
loop
sub
adc
fcoml
shll
sub
mov
sub
push
fs
jp
jp
pusha
cmp
xchg
stos
dec
xchg
out
mov
punpckldq
push
inc
cwtl
inc
mov
mov
sbb
sbb
add
sbb
data16
add
out
sub
or
sti
lahf
cmc
sti
lahf
sbb
mov
sbb
daa
stc
add
mov
add
mov
sub
out
in
mov
in
jo
shlb
inc
test
jo
in
jo
mov
test
jo
in
jo
mov
test
jo
in
jo
mov
sub
test
jo
in
jo
mov
push
push
aaa
push
push
push
sbb
sbbl
into
sbb
xchg
add
shlb
es
and
mulb
lock
lock
lock
mov
inc
inc
mov
sbb
jne
out
jne
movsb
jbe
push
clc
push
lods
imul
push
not
mov
cmpl
icebp
add
push
icebp
push
arpl
shlb
shll
jge
push
sbb
cld
sbb
cs
aam
sub
iret
xchg
jp
cmp
cmp
cmp
fstpt
xchg
fmull
bound
push
bound
xchg
mov
sbb
sbb
sbb
data16
sub
sub
lahf
test
lahf
sbb
sbb
daa
lods
add
mov
mov
push
mov
mov
loopne
in
adc
sub
test
jo
in
jo
jae
sub
sub
or
jo
jo
sub
sub
add
jno
in
lock
add
jo
push
sub
xchg
in
ret
cld
jns
addr16
push
ljmp
subl
stc
into
jmp
add
jae
xor
fnstenv
mulb
mov
xor
mov
loopne
inc
aad
dec
mov
inc
mov
pop
adcl
push
in
jne
test
mov
lock
mov
mov
jecxz
aas
mov
sbb
cwtl
cmp
push
arpl
or
cmpsb
mov
ss
push
push
sbb
ljmp
dec
sbb
cs
xchg
sub
cmp
jp
cmp
cmp
mov
xchg
mov
push
bound
loop
out
pop
call
sbb
sbb
data16
sub
adc
jb
sti
lahf
pop
sti
lahf
sbb
sbb
pop
sbb
daa
mov
addr16
mov
xchg
mov
add
sub
test
jo
in
jo
es
in
test
in
jo
and
in
cmpsb
sub
mov
jno
in
mov
in
jo
sbb
sub
mov
jo
sbb
push
popf
push
push
push
jg
push
addl
into
ljmp
xor
addr16
mov
mulb
push
mulb
lock
lock
inc
adc
mov
addl
jne
or
push
imull
adc
roll
mov
dec
rclb
icebp
addr16
icebp
push
fs
push
arpl
arpl
and
shlb
jecxz
push
sbb
bound
cs
cmp
xchg
jp
xchg
jp
sahf
jp
cmp
cmp
inc
cmp
xchg
inc
mov
bound
bound
xchg
mov
sbb
sub
lea
cltd
fwait
dec
push
xlat
lret
sahf
leave
mov
lret
fnstenv
popa
push
ret
pop
scas
jne
push
addr16
in
sbb
pusha
jne
sub
or
inc
xor
add
or
dec
xor
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
