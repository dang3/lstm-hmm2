loope
pushf
jp
addr16
call
dec
nop
and
repz
push
mov
sub
pop
cmp
stos
jle
lea
movq
stos
mov
dec
adc
int
sbb
cmp
inc
mov
bound
pop
jo
jecxz
bound
mov
mov
and
aad
mov
ret
xchg
sbb
pop
in
cwtl
in
pop
jmp
inc
test
sub
inc
cmp
insl
nop
lds
push
and
mov
and
pop
and
stos
fwait
sahf
cmp
pop
or
xchg
sti
push
icebp
pop
push
add
ss
in
aad
lcall
daa
fwait
je
jecxz
mov
test
out
int3
rol
fimuls
jg
xchg
mov
int3
outsb
into
pop
orl
ljmp
cmp
pop
nop
xor
mov
add
lods
ja
jmp
sub
inc
lcall
int3
out
mov
mov
xor
push
decl
add
sub
or
testl
dec
inc
mov
cmpsb
rorl
dec
mov
rcr
aad
push
xchg
in
lahf
fcmovne
sahf
xor
leave
enter
addr16
cli
jle
ja
inc
push
sar
dec
sbb
movsb
lds
push
mov
push
mov
xchg
lds
add
xlat
es
pop
xchg
jns
mov
xorb
sub
aaa
and
xchg
pop
rol
jg
and
mov
loop
xor
push
psllw
jge
xchg
jne
push
fcmovne
shrl
and
adc
je
test
iret
lds
jge
out
pop
ret
test
fmull
out
ss
std
imul
orb
outsl
pop
call
test
mov
cmpsb
mov
xor
sti
xchg
push
movsl
cmpsb
mov
test
jo
loopne
inc
shr
aas
add
cs
ror
es
arpl
bound
fidivrl
cmpsb
mov
cltd
insb
inc
sbb
shr
jbe
cmc
pop
insb
out
and
cmp
xor
pop
sbb
sub
test
inc
pop
dec
cltd
inc
out
jne
notb
inc
dec
test
xor
imul
adc
sbbb
aaa
mov
xor
movsb
xchg
addb
xlat
mov
cmc
std
jl
iret
push
xorb
loop
repnz
loopne
mov
outsb
daa
add
xchg
ret
jo
leave
sbb
daa
int3
ret
pop
lcall
std
je
ljmp
pop
dec
or
cmp
popa
jg
idivb
push
cmc
fstps
sub
stos
mov
push
mov
dec
adc
xor
dec
xor
lret
sahf
loopw
fistpl
push
jbe
inc
ljmp
inc
clc
xchg
shlb
and
cmpsb
xchg
adc
push
sub
out
or
pop
push
ret
shlb
lcall
aam
out
imul
mov
ja
imul
insb
push
mov
adc
sub
outsl
dec
mov
js
jmp
test
dec
xor
popf
rcr
inc
mov
clc
jmp
sbb
jno
insl
cmp
or
jno
movb
sete
xchg
clc
jnp
or
popa
insb
and
or
mov
or
adc
mov
fcmovnbe
sub
push
dec
fbstp
les
cld
jmp
jle
negb
push
dec
inc
nop
inc
xchg
sub
ds
push
repz
lret
adc
pop
lods
mov
and
pop
pop
jp
jae
jp
stos
xor
mov
pop
pop
vpshab
stc
mov
mov
outsb
mov
fsubl
lcall
lods
pusha
roll
mov
lret
mov
add
mov
sub
fnstenv
dec
movsb
pop
mov
and
or
xor
dec
shlb
out
out
mov
or
mov
push
cmp
xchg
vmwrite
adc
rorb
in
and
add
sub
aad
adc
movsb
call
in
cmpl
dec
sahf
xor
and
jmp
mov
mov
mov
cmp
flds
call
sub
ss
cwtl
das
sub
pop
add
pop
jne
push
sub
pop
addb
lret
mov
lds
mov
rclb
out
shlb
insb
daa
movsl
dec
das
inc
mov
jne
xchg
outsb
mov
lret
or
adc
insb
out
fildll
test
sahf
cltd
pusha
push
outsb
pop
jns
jno
dec
push
xchg
outsl
imull
hlt
pop
test
mov
inc
jns
lods
jbe
bound
cmp
xor
sbb
sub
jo
xchg
movsl
mov
js
inc
pop
adc
pop
mov
aas
movsb
or
push
xchg
shlb
mull
jp
pop
outsb
pop
inc
xor
cltd
pop
and
test
inc
push
fwait
out
mov
mov
mov
scas
sub
and
mov
test
popa
or
das
pushf
and
inc
decb
add
push
and
int3
fiadds
sbb
cmp
out
pop
ret
mov
xchg
inc
jo
insl
adc
outsb
bound
and
daa
mov
insb
insb
mov
popa
cmp
imul
jo
inc
movsl
pop
psrad
aam
push
sub
imul
ja
imul
fsts
inc
push
mov
insl
or
outsl
jns
into
adc
xchg
lods
or
lahf
adc
mov
popa
arpl
stos
sahf
push
out
movsl
fwait
jno
aad
push
ljmp
xor
shr
fidivs
enter
push
inc
filds
lret
roll
loopne
push
fnstenv
imulb
stos
pop
mov
jno
outsl
inc
cmp
push
push
mov
pop
sbb
add
adc
nop
std
pop
or
sub
jnp
xchg
rcr
inc
push
inc
mov
xlat
push
mov
jne
sbbb
lret
mov
pop
in
sub
jp
xchg
cmp
imul
push
cmc
mov
and
pop
mov
inc
aas
jno
add
push
xchg
mov
out
outsb
jne
dec
xchg
pop
jno
loopne
aaa
xlat
push
mov
popf
or
xor
sub
cmp
pop
xchg
in
or
dec
xchg
push
jno
xchg
mov
jg
inc
lcall
insl
jge
adc
or
shlb
adc
outsl
daa
sahf
call
push
inc
sub
fsubrs
mov
pmaxsw
mov
push
fisubrl
rcl
psubsw
or
insl
or
stos
insb
scas
mov
pop
or
rorl
loop
push
push
mov
inc
mov
addr16
sub
scas
test
std
mov
cmpsb
iret
add
imull
das
sbb
insl
fdiv
hlt
push
inc
sbb
adc
adc
lea
loope
pop
sbb
inc
sbb
mov
cli
push
pushf
xor
xchg
mov
mov
pop
cmp
decb
fwait
jne
dec
in
adc
inc
pusha
cmc
idiv
cmp
jb
testb
xchg
push
js
icebp
rclb
inc
mov
insl
or
inc
pop
inc
cld
cld
sub
mov
sbbb
imul
fimull
es
test
icebp
std
mov
or
lods
or
shrl
ret
push
cld
jns
inc
adc
inc
xorb
daa
clc
insl
mov
jb
negl
sbb
int3
cmpsl
adc
push
pop
inc
stos
lods
mov
and
mov
push
imul
loopne
dec
push
inc
mov
jne
out
mov
mov
fisttpl
orl
mov
repz
mov
inc
add
pop
dec
xlat
in
xchg
add
loop
adcb
add
dec
cmpsl
lahf
shrl
clc
ljmp
out
rorl
or
mov
loop
fsubrs
mov
sub
jb
lds
fwait
movsl
out
aaa
ficoml
pop
stos
add
push
adcl
bound
mov
loopne
jl
dec
push
inc
lods
cld
adc
cmp
mov
imull
mov
pop
ljmp
mov
cmpsb
push
cwtl
mov
icebp
adc
leave
push
xor
in
aaa
dec
add
adc
and
inc
test
xchg
lahf
cmc
mov
inc
mov
shrb
push
loope
cmpsl
leave
mov
and
jmp
push
cltd
inc
arpl
xchg
and
test
cli
loop
mov
mov
popa
lods
lcall
test
or
scas
and
rcrl
pop
movsl
cmpb
sbb
imul
das
mov
push
inc
sbb
and
int
scas
daa
push
adc
std
mov
jl
add
arpl
sbb
mov
mov
je
push
sbb
push
ljmp
pop
jno
popa
test
mov
xchg
mov
pop
iret
cmp
cmpsl
mov
sub
stos
add
push
js
aad
out
inc
mov
in
out
stos
sub
inc
fwait
movsl
hlt
stos
sub
or
dec
jnp
jmp
fcomps
fimuls
xchg
shll
out
movsb
dec
out
hlt
inc
int
pushf
pop
fbld
and
dec
xchg
repnz
cld
stc
inc
add
into
sub
cmpsl
xchg
sub
and
insl
xchg
inc
add
ja
xor
cltd
cwtl
push
and
enter
ret
jb
xor
in
stos
cld
or
sbb
icebp
rcrl
bnd
sbb
movsl
stos
int
lods
fcmovbe
shlb
ljmp
inc
dec
xchg
into
out
adc
mov
inc
sub
hlt
push
xchg
inc
mov
daa
fildl
lret
mov
adcl
xor
fidivl
and
ja
push
movsb
dec
jne
dec
call
pop
outsb
xchg
cmp
data16
mov
pop
ds
repnz
fsubp
arpl
lods
in
pop
cld
cmp
sbb
cmp
cmpsl
aad
or
pop
dec
movsb
jnp
mov
cltd
cmp
push
xchg
icebp
mov
sub
xor
not
cmp
cmpsl
xor
repz
push
scas
jbe
jle
outsl
sub
or
mov
and
xchg
jbe
fwait
dec
cmpsb
stc
xchg
std
sti
call
sbb
lds
xchg
mov
jle
or
pop
cwtl
and
cmpsl
lods
mov
push
mov
mov
pop
orb
sbb
ret
mov
in
in
cltd
add
movsl
lock
stos
scas
stos
ljmp
clc
lret
cmp
jecxz
clc
cmp
jno
push
inc
shrb
mov
pop
or
inc
adc
xor
push
push
mov
sahf
sahf
cmp
or
lcall
push
sub
das
jle
push
idivl
pop
pop
out
sahf
mov
scas
stos
hlt
ret
lret
div
adc
sub
xor
cmp
add
daa
test
lret
das
fcomps
adc
mov
and
aas
les
xor
lret
cli
cmp
scas
cmp
cmc
push
pop
push
popa
cmpsl
movsb
test
sbb
push
fwait
pop
ss
mov
push
icebp
pop
test
xor
inc
dec
sarb
lret
mov
push
xchg
int3
sub
and
sbb
in
addr16
sbb
out
fucom
dec
jbe
arpl
inc
cmp
pause
enter
inc
sub
int
in
mov
sub
and
add
repnz
dec
sahf
pop
push
xchg
inc
cmp
xchg
imull
cli
jne
test
add
add
dec
jmp
into
xor
bound
dec
or
ss
rorb
sub
xchg
inc
mov
pop
outsb
cld
mov
add
dec
lret
lods
fildl
or
inc
jne
pop
in
cmp
jl
jbe
xor
inc
and
call
mov
ficoms
pop
mov
inc
cmpsb
fldcw
add
mov
mov
adc
pop
xchg
rcrb
add
push
inc
jge
and
ficompl
push
mov
xchg
ljmp
cli
cmpsl
inc
aad
fsubr
sahf
mov
jb
cmpsb
sub
test
sbb
or
pop
ds
daa
popf
or
cld
jl
xchg
and
push
int
out
sub
jns
jmp
xchg
dec
sbb
in
test
pop
shrb
adc
pop
clc
addr16
rcrl
mov
aam
pop
push
xchg
xchg
rclb
and
inc
xor
cltd
lret
sub
pusha
pop
xor
add
jmp
scas
rcrl
loopne
xchg
pop
pop
sbb
mov
int
xchg
dec
sub
inc
imul
mov
stos
into
bound
add
pusha
imul
or
dec
sar
inc
ret
push
jb
mov
jp
in
inc
inc
popf
sti
loope
push
xchg
lret
inc
ja
push
adc
mov
ret
and
push
into
es
loop
pop
inc
cmp
cmc
imul
es
dec
and
mov
sub
lock
jmp
xchg
iret
jo
cmc
cmp
xchg
daa
scas
cmp
push
cmpsl
pop
mov
pop
enter
sbb
sub
adc
push
pop
jne
test
push
mov
xchg
xor
insb
pop
mov
imul
cwtl
xchg
cmpb
xor
adcb
adc
into
xor
jae
scas
jmp
insl
mov
stos
dec
fwait
popl
push
jae
insl
mov
mov
leave
sub
lods
pop
cld
cmp
sbb
movsl
jo
adc
insl
pop
sub
fldt
adc
inc
pop
adc
push
repz
mov
xor
ficoml
stos
lret
rcrl
add
add
push
fstpt
sbb
jbe
sahf
sti
cmp
insb
push
int3
push
and
sub
je
push
and
in
and
jge
lahf
dec
bound
xchg
push
xor
daa
lret
mov
je
mov
js
mov
fwait
lret
shl
push
shrb
cmpsb
jp
mov
mov
and
adc
xor
repnz
cs
ja
data16
xchg
lock
push
sub
nop
movsl
rolb
out
sub
inc
test
rclb
rorb
lock
cmp
push
popf
ja
aam
cmp
jnp
mov
fldcw
daa
cmp
and
jle
xor
test
mov
push
nop
movsl
out
lret
cmpsb
mov
pop
pop
sub
push
sahf
lahf
fnsave
xor
aas
dec
add
xor
jle
xchg
inc
lds
pop
dec
xor
mov
jno
fcomi
rol
cwtl
addr16
shlb
inc
rcrl
push
jne
sub
or
mov
lock
xchg
adc
push
fildl
lods
lcall
cmp
movsl
xlat
sahf
not
sbb
inc
mov
pop
mov
ljmp
enter
test
fmul
mov
lock
push
or
lahf
int
insb
mov
add
adc
inc
les
les
sub
imul
pop
pop
inc
pop
sar
outsl
call
lods
inc
out
xchg
xor
in
adc
shll
dec
mov
imul
clc
lret
loope
imul
shl
mov
repnz
ljmp
jo
scas
and
lret
and
ret
jns
and
and
mov
scas
imul
ds
pop
les
push
stc
into
push
add
daa
sbb
push
xchg
xchg
cltd
mov
mov
cltd
aad
sub
cmpsl
cld
sbb
ss
je
js
and
out
push
ffree
mov
push
idivl
mov
inc
sub
jmp
mov
adc
cmp
xor
addr16
popa
push
nop
xor
test
mov
mov
test
dec
mov
fcompl
push
fcomi
pop
sub
xchg
inc
dec
pop
nop
icebp
xchg
iret
and
shrb
xchg
pop
xlat
pop
xchg
inc
sbb
mov
rcrl
xchg
jle
sahf
enter
loopew
bsf
sti
fidivrs
fdiv
sbb
fsts
xchg
enter
jp
stos
mov
xlat
push
add
dec
mov
sub
adc
pushf
sub
jp
mov
dec
sbb
loop
pop
lret
xchg
jmp
push
cmpb
in
mov
fbstp
inc
stos
mov
jp
in
pop
sub
push
pop
fwait
cltd
repnz
cmpsb
aam
ret
fsubs
jl
popa
shlb
add
or
iret
iret
mov
shr
xlat
cmp
dec
rcrb
push
jns
aad
inc
repnz
scas
or
xorl
lcall
iret
xor
mov
mov
mov
add
xchg
imul
mov
xor
inc
mov
mov
fistl
cld
pop
pushf
stos
or
sub
daa
out
adc
mulb
or
imul
aas
fmul
mov
inc
cmp
pusha
mov
call
mov
out
xlat
sahf
or
push
and
pshufw
sub
sti
shlb
jmp
cmpsb
imul
icebp
repz
inc
jns
fdivl
int3
data16
pusha
mov
or
les
push
into
popf
cmpsl
imul
mov
imul
sbb
mov
push
dec
dec
sbb
pop
xchg
pusha
push
pop
dec
jne
popa
sbb
xchg
cmpsb
mov
mov
fs
movsb
pop
repz
dec
je
in
sahf
adc
lcall
cmp
out
cwtl
jl
hlt
dec
aad
pop
pop
ret
and
cmp
pushf
push
out
inc
mov
imul
lea
dec
out
js
mov
ffree
cmp
dec
in
insb
addl
stc
add
push
jns
stos
adc
push
sti
ret
inc
xchg
push
ret
jge
dec
jmp
repz
and
jg
hlt
in
subb
dec
fwait
pop
xchg
loopne
push
cld
sbb
adc
jg
and
pop
cmp
pop
leave
aam
mov
int3
in
iret
push
mov
cmp
or
pop
mov
iret
add
and
add
mov
xchg
jp
xor
vmovdqa
adcl
xchg
call
mov
fbstp
loopne
xchg
xor
out
pop
aam
jge
mov
sbb
fidivrl
in
mov
xchg
xchg
addr16
mov
sub
clc
and
sbb
lock
add
das
daa
adc
sub
sub
sbb
mov
mov
repz
sbb
xlat
xchg
sahf
jns
mov
out
mov
pop
fisubrs
xor
arpl
xlat
clc
jmp
mov
inc
xor
loop
ljmp
mov
ret
in
mov
xchg
sbb
add
sbb
add
test
outsb
jns
sub
icebp
fdivs
cltd
out
cmp
add
xchg
sbbb
lods
xor
in
std
sti
mov
cli
aas
jbe
imul
aam
and
shll
aam
out
aas
daa
mov
xchg
mov
adc
test
in
pop
jno
outsl
sub
pusha
in
icebp
fwait
inc
dec
stos
mov
sub
dec
mov
and
fcmovnbe
shlb
ret
in
das
mov
sahf
out
or
mov
lret
outsb
add
jne
and
adc
jl
mov
xor
in
lods
es
fcoml
sbb
adc
gs
lds
add
sbbb
mov
xchg
pop
push
inc
pmovmskb
xor
push
test
adc
bound
jo
arpl
repnz
scas
out
adc
int
adc
ljmp
jmp
dec
cmp
dec
inc
mov
pushf
out
jmp
adc
xchg
push
push
xorl
mov
data16
notrack
into
arpl
sbb
jb
dec
in
and
xchg
push
adc
and
pop
xchg
xchg
pusha
inc
cmpsb
or
sub
push
mov
ljmp
cmp
subb
inc
pop
xor
mov
jge
jo
popa
add
and
out
inc
into
or
std
gs
mov
sarl
xlat
inc
ficompl
xor
sub
lea
add
pop
inc
jne
or
iret
jp
lea
add
dec
cmp
sbb
aam
push
lcall
inc
jmp
sbb
out
adcb
js
dec
pop
arpl
sub
cltd
mov
push
std
fdivl
in
inc
add
jae
hlt
push
mov
lcall
push
ds
stos
popa
into
cmc
movsl
cmpb
pop
out
push
mov
or
sub
int
push
or
addr16
test
lods
adc
add
out
xor
xor
add
mov
inc
xor
and
xacquire
inc
or
sbb
scas
in
imul
adc
push
mov
ficoms
mov
dec
imul
and
and
jbe
es
jno
cmpsl
jae
outsb
test
nop
fidivs
lea
mov
aaa
lea
inc
mov
test
and
jmp
push
xchg
add
stos
and
ret
jge
outsl
jl
push
xchg
filds
aam
mov
sahf
mov
and
xor
js
sbb
sbb
in
scas
clc
leave
inc
sub
push
ja
push
lods
inc
pop
test
xor
scas
imul
mov
jge
dec
or
fmuls
inc
sub
mov
inc
pop
push
scas
inc
push
insb
jmp
cmp
pop
dec
das
stos
xchg
or
adc
stos
test
repnz
clc
xchg
gs
das
scas
cmpsb
sbb
inc
pushf
push
repnz
lret
jle
sub
sbb
push
push
inc
add
jge
mov
push
aam
cli
test
mov
test
pop
test
arpl
lahf
mov
cmp
arpl
lcall
dec
push
rorl
je
shl
cmpsb
negb
xchg
inc
out
lock
jge
dec
arpl
fadds
movsl
sahf
mov
cmp
or
clc
cmpsb
rolb
push
aas
mov
push
pop
cmp
xorb
aam
imul
ret
mov
mov
dec
dec
pop
int
pop
sbb
shl
scas
jne
dec
pop
fildl
add
push
cmp
subb
ljmp
mov
push
xlat
fs
fisubl
negl
mov
movsb
inc
dec
sub
jne
mov
dec
fcmovu
nop
jo
iret
sub
push
inc
cwtl
out
lods
sub
xor
pop
push
imul
push
mov
sbb
xchg
xchg
adc
dec
dec
jp
cmp
cmc
loope
bound
xchg
adc
mov
push
call
ds
orl
ljmp
je
inc
xor
fisubrs
xor
test
out
or
mov
int
gs
fidivrl
cld
loope
ja
pop
stos
cwtl
jno
icebp
roll
sar
iret
jo
mov
out
aaa
shrl
sub
jno
mov
xchg
fimuls
std
ss
add
cwtl
into
pop
and
stos
pop
mov
in
jg
xor
movsl
iret
mov
out
shl
gs
out
xchg
mov
stos
inc
jne
xor
or
cltd
lds
and
sbb
jl
daa
cmpsl
into
int3
enter
nop
jo
sbb
gs
xor
mull
test
ret
mov
xor
imul
mov
dec
ljmp
jmp
and
xor
repz
push
lret
jp
fists
in
push
decl
xchg
push
xor
cmp
popf
mov
jl
jl
adc
inc
lods
dec
stos
jge
outsb
jbe
xchg
cwtl
gs
mov
aas
inc
cwtl
inc
pop
xchg
lds
cmp
xor
jl
add
adc
adc
adcb
ss
enter
clc
xor
js
loopnew
mov
pop
les
mov
mov
test
lret
out
mov
sarb
cs
jne
lret
mov
xor
push
xchg
and
arpl
mov
xchg
shll
inc
xor
pop
mov
dec
adc
aad
mov
mov
jb
lahf
sahf
xchg
push
cmp
and
push
mov
mov
das
mov
mov
aad
cmpsl
aad
jle
xor
mov
data16
in
pushf
or
std
or
mov
push
inc
repnz
dec
sub
pop
dec
repz
test
mov
jecxz
add
pop
hlt
and
cli
sbb
lds
ss
sub
xchg
scas
jp
movb
aad
cmc
iret
mov
sub
loope
scas
ret
inc
int3
adc
shlb
imul
adc
and
jo
pop
addr16
aaa
mov
adc
movsl
push
inc
sub
les
cmp
xchg
push
mov
mov
insl
xchg
loopne
cmp
lcall
adc
jns
mov
test
insl
into
jp
lds
lds
mov
rcll
movl
and
or
push
pop
jmp
dec
sbb
inc
clc
mov
mov
xor
cmp
lea
push
add
xchg
pop
or
jne
or
in
dec
ljmp
pushf
pop
lcall
stc
fildl
xchg
clc
data16
data16
addl
aam
call
daa
sbb
sub
push
push
imul
fadds
movsl
cmp
and
push
pop
lods
ljmp
adcb
mov
arpl
sub
insl
jae
rclb
notl
add
aaa
sbb
enter
cmp
sti
inc
dec
int
sahf
jge
lret
insl
cmpsl
sub
popa
pop
push
fisttpll
adc
addr16
xchg
out
rorb
pop
sub
mov
rorl
or
inc
dec
pusha
aad
pop
repz
xor
pusha
sub
cltd
pop
xchg
aam
dec
nop
push
icebp
jbe
jmp
cmp
pop
es
cmp
std
loope
jne
mov
and
and
repz
jns
lods
jecxz
sub
repnz
dec
jecxz
flds
cmp
out
test
inc
bound
mov
scas
push
jbe
xor
jno
sbb
and
dec
arpl
out
in
jnp
push
jmp
add
jmp
dec
jecxz
ss
push
push
jecxz
add
in
mov
in
call
xchg
cmp
addr16
dec
pop
dec
and
aaa
or
xchg
nop
add
add
pop
shrb
xor
or
push
test
std
shrl
mov
negb
cmp
xor
push
mov
jecxz
repnz
icebp
xchg
incb
scas
cmp
fisubl
out
or
mov
fisubrl
in
movb
push
je
mov
test
xor
mov
xchg
mov
mov
bnd
scas
fs
lea
add
test
movsb
rcrl
push
inc
dec
enter
jnp
inc
out
jb
fisubrs
js
or
mov
out
jmp
fwait
pusha
jns
jp
cmp
inc
sub
cld
addb
mov
shrb
shrd
adc
xchg
jns
nop
clc
mov
xchg
insb
push
xor
cmc
and
adc
rcr
int
push
data16
and
and
xchg
sbb
lahf
insb
cmp
rorl
repz
ds
inc
xchg
mov
xchg
push
loopne
ja
xor
xor
das
push
ljmp
movsl
mov
and
mov
pop
sbb
mov
xor
imul
sub
fistpll
fstl
out
sub
mov
out
lods
mov
mov
inc
mov
xor
jo
es
in
lahf
and
stos
jne
pop
outsb
call
add
push
sar
sbb
mov
fidivrs
cwtl
popa
pop
jecxz
mov
shll
cs
or
stc
push
outsl
mov
loopne
jmp
push
push
imul
fidivrs
cmp
jle,pt
aam
clc
mov
xchg
jp
shl
leave
rsm
push
movsb
push
cmp
sub
xor
imulb
mov
or
push
sti
push
lods
or
jae
and
sub
mov
lds
mov
mov
andb
xchg
idivl
sbbb
jno
cld
test
loopne
bound
sahf
mov
mov
sub
or
xchg
xlat
or
push
mov
jns
jg
adc
pop
adc
mov
mov
movsb
outsl
ret
hlt
jmp
ret
mov
pop
and
gs
dec
fdivrl
push
cli
jmp
ss
imul
and
cmpsb
rorb
lods
rcrb
mov
inc
popl
aad
xchg
add
aas
sub
push
fisttps
adc
mov
cmp
jmp
and
leave
lahf
les
jmp
aam
or
cmp
mov
or
push
js
imul
mov
rorb
push
ljmp
xchg
insb
inc
xchg
cli
adc
repz
mov
jl
int3
or
cmp
pop
jecxz
fiaddl
lcall
push
fs
outsl
aas
pop
jns
cmc
and
pop
scas
dec
out
dec
mov
mov
jle
add
xor
scas
xchg
mov
repnz
stos
push
pop
aam
xor
insb
test
sub
push
adc
sbb
mov
push
je
stos
push
fiadds
jb
lret
or
or
aaa
orb
push
mov
bound
aad
rcrl
lahf
pushl
in
mov
pop
in
xchg
ja
xchg
pop
jmp
lret
xchg
mov
mov
add
nop
pusha
xor
in
adc
inc
adc
jecxz
jno
daa
mov
mov
or
xchg
adc
test
lret
aaa
call
adc
lock
icebp
push
push
hlt
adc
add
cmp
sub
es
mov
je
shll
dec
mov
sub
xor
xor
enter
loope
je
sbb
aas
in
orb
add
rclb
leave
and
cld
movsb
loopne
loope
scas
dec
cmpsl
cmp
inc
push
arpl
adc
mov
cmp
mov
dec
cmp
jnp
sarb
pop
pusha
jmp
in
ja
bound
out
mov
xchg
pushf
mov
xchg
jp
lock
mov
xchg
fcom
inc
mov
test
fidivrs
mov
mov
sbb
lret
dec
imul
mov
push
fdivp
fdivl
xor
mov
push
and
and
aaa
mov
inc
sub
jno
cli
sub
inc
cmc
jne
or
iret
outsb
mov
aad
inc
dec
mulb
sbb
mov
mov
mov
and
jns
mov
sbb
test
xchg
sub
js
mov
push
mov
jae
jmp
add
and
fcoms
or
mov
cwtl
and
xor
or
call
imul
cs
cwtl
push
dec
lds
mov
bound
xor
inc
test
mov
in
loop
push
add
mov
inc
pop
pop
scas
lock
xchg
popa
popa
push
rcrl
sbb
movsl
enter
stc
es
pop
std
cmpsl
insl
stos
mov
xchg
cmovns
cmpsl
popa
pop
cmp
jp
push
pop
sbb
aas
jo
xlat
jbe
cmp
pop
sub
mov
ret
adc
lcall
shrl
pop
push
jle
adc
int3
xor
jns
add
cmp
arpl
nop
inc
xor
scas
add
pop
das
pusha
add
das
fadd
inc
dec
sub
mov
out
push
iret
xchg
jnp
mov
push
add
cld
mov
test
loopne
pop
add
pop
jmp
xchg
push
pop
imul
xchg
rcrl
sbb
jno
mov
mov
into
dec
into
test
add
pop
dec
imul
fidivl
mov
mov
scas
frstor
mov
outsl
inc
inc
jl
mov
fists
xchg
mov
dec
cmp
bound
mov
mov
repz
jnp
lds
xchg
jns
or
loopne
hlt
sbb
pop
testb
leave
addr16
add
ds
daa
ret
mov
inc
xchg
das
out
icebp
popl
insb
ja
jl
adc
insb
dec
xchg
cmp
outsl
jle
adc
jo
das
inc
nop
lods
lds
incl
pop
mov
inc
clc
cld
inc
int
repz
hlt
mov
outsb
adc
cmc
and
shl
xchg
pop
push
mov
stc
dec
call
icebp
push
mov
out
xchg
fwait
sub
pop
ret
push
add
and
adc
push
cmc
lcall
out
lods
pop
insl
mov
outsl
and
mov
das
inc
mov
cmp
and
lret
rcll
out
mov
dec
pusha
inc
dec
addb
cmp
into
fwait
faddl
rolb
sub
movsl
roll
cld
lods
mov
jno
rol
aam
shrb
cmpl
fisubs
xor
in
lahf
add
dec
and
shl
outsl
xchg
jle
xchg
mov
divb
out
mov
lcall
xchg
mov
cs
adc
mov
arpl
jae
popf
jo
or
les
pop
mov
sub
rolb
pop
or
and
or
cmpsb
cmpsl
test
int
sub
xchg
xchg
pop
push
mov
sbb
sbb
mov
adc
movsl
std
ds
or
orl
or
cmp
push
sub
out
push
or
stos
adc
fwait
out
and
cld
sub
cmpsb
test
lods
int3
adc
mov
jno
xor
fisubrs
jecxz
ret
ljmp
test
pop
pushf
inc
dec
rcll
out
xchg
inc
add
loopne
orb
pushf
mov
leave
or
flds
testb
push
jns
xchg
adc
mov
lret
icebp
push
sbb
iret
ds
jmp
and
daa
xor
dec
jmp
sbb
cmp
pop
dec
cld
cmp
popa
ret
scas
cmpsl
in
mov
xchg
lea
push
hlt
adc
and
movsl
push
ret
leave
les
xchg
movsb
sti
mov
pop
and
ret
adc
outsl
in
dec
mov
insb
mov
loop
push
xchg
push
arpl
mov
cmpsb
and
es
mov
sub
in
shlb
jmp
push
xor
aaa
push
mov
js
xchg
and
mov
inc
pop
or
pop
data16
es
gs
es
and
clc
jae
lret
outsl
ljmp
nop
push
clc
lock
xchg
or
jp
sbb
call
mov
xor
mov
adc
insl
cmp
ja
andb
mov
iret
shll
movsl
ja
xchg
out
das
and
mov
or
jl,pt
mov
pop
add
jp
aam
and
add
cmp
or
inc
push
in
popa
sarl
sub
xor
call
cmpb
jmp
mov
popf
jb
sub
outsl
nop
jmp
sub
fsubrs
cld
sub
dec
sahf
in
adc
adc
cmp
mov
iret
jae
out
xchg
scas
fsubrp
adc
das
push
add
out
loope
mov
jnp
pusha
fnstcw
movsb
xchg
icebp
mov
cltd
loope
lahf
and
cmc
mov
sub
dec
popf
adcb
or
xchg
adc
ret
xor
rorl
mov
sbbb
adc
popf
out
out
imul
jp
mov
pop
xchg
dec
call
push
aad
std
movsl
xor
stc
dec
push
and
add
testl
leave
outsl
add
sti
jae
pop
inc
inc
add
dec
and
pusha
inc
js
les
dec
xchg
xchg
ret
test
out
scas
pop
jo
cmp
add
mov
add
and
fbstp
and
daa
mov
lret
jge
clc
mov
pop
pop
lds
idivl
mov
mov
shrb
insb
push
xchg
loope
sbb
xor
cmpsb
in
sub
mov
push
std
rcr
daa
imul
int3
je
outsl
pop
es
test
mov
ficomps
pop
jge
sub
cmp
jl
cmp
mov
ret
imul
lahf
dec
and
ret
imul
add
in
jmp
fwait
subb
test
push
cwtd
xchg
pop
mov
dec
cmp
les
xor
inc
cli
out
sbb
sti
xorb
mov
inc
jo
call
mov
in
push
and
push
jae
orl
mov
fwait
leave
jecxz
adc
rcrl
test
sub
dec
pop
mov
dec
iret
seto
inc
leave
add
jg
stc
mov
addr16
jmp
mov
cmc
jns
or
inc
addb
xchg
in
clc
dec
push
movsl
imulb
sub
push
sub
sahf
enter
pop
cmp
sub
mov
and
scas
sahf
mulb
insl
std
roll
xchg
mov
lret
mov
test
aas
imul
mov
test
xor
out
mov
cwtl
cli
in
inc
mov
or
roll
jo
clc
mov
sub
or
imul
dec
or
int
movb
out
cmp
lahf
loop
cmc
loopne
stos
ficoms
out
fcmovbe
mov
in
in
xchg
repnz
popa
push
mov
popa
mov
in
sbb
cs
mov
scas
lret
mov
dec
call
cmpsl
xor
and
or
ja
neg
test
mov
aad
fwait
pop
dec
movsl
inc
nop
in
sub
jne
imul
loope
sub
push
data16
js
sub
lods
pop
sbbb
or
adc
sbb
dec
inc
mov
out
inc
rorl
dec
mov
sub
or
lcall
lcall
jb
dec
in
xchg
pop
mov
and
sbb
push
lds
and
xor
mov
lcall
inc
lock
cmp
lret
xchg
jmp
lret
push
pop
aam
popf
dec
push
push
sbb
cmp
rep
jmp
inc
cmp
leave
push
sahf
dec
das
unpcklps
sbb
push
xchg
cmp
fildll
jnp
fisttps
dec
push
and
repz
push
cs
mov
jecxz
jo
ror
jp
cltd
aam
adc
and
sub
daa
and
loop
mov
test
jmp
outsb
mov
not
imul
jb
jne
and
inc
scas
dec
pop
mov
cld
cli
mov
rcll
dec
insb
cmpsl
push
aad
lahf
icebp
inc
cmp
mov
sub
jmp
push
jnp
pop
ret
adc
cmp
jae
std
and
outsl
and
hlt
inc
inc
mov
jmp
pusha
je
mov
js
and
out
jno
dec
sub
idivb
sub
sahf
mov
add
cmp
sub
jp
jl
sbb
and
cwtl
jp
adc
aaa
sub
mov
mov
dec
push
data16
xor
cltd
mov
test
mov
hlt
push
aam
push
xor
jb
pop
dec
clc
jp
lods
dec
jns
outsb
popf
xor
push
notl
cmp
repnz
and
fcmove
sbb
or
aas
adc
sub
dec
jo
and
das
or
data16
add
xchg
scas
jno
je
and
lods
adc
jecxz
adc
fmuls
sbb
xchg
adc
cwtl
ja
popa
in
or
lds
sarl
adc
daa
lods
push
mov
jo
fsubrl
in
into
nop
inc
inc
adc
push
xchg
pop
subl
pop
push
add
mov
decb
xlat
add
sub
xchg
and
dec
pop
iret
shr
cmp
xchg
dec
sub
movsb
andps
cmp
inc
outsb
hlt
in
movsl
in
dec
push
test
jo
xor
or
loopne
inc
inc
and
test
cltd
dec
inc
test
ret
repnz
inc
sub
rcr
lods
js
pop
mov
fistps
mov
add
scas
out
leave
push
in
adc
orl
xor
xor
lret
rorl
xchg
aad
mov
mov
or
push
fs
leave
and
and
or
ja
pop
pop
cmp
lea
rcll
rol
cld
push
sub
jle
sbb
push
ror
jnp
cmc
rdtsc
inc
sub
cwtl
lcall
push
adc
pop
cmpsb
inc
repnz
xchg
cmpb
mov
in
or
fdiv
out
jb
jg
fiaddl
test
pop
xchg
ss
in
sub
cltd
or
pusha
jle
mov
mov
sbb
addr16
repz
mov
xchg
push
in
mov
gs
je
not
vmovaps
mov
push
inc
sub
pop
stos
xor
pop
test
pop
cli
ds
adc
push
insb
or
neg
xor
loopne
mov
cltd
jno
cmp
jp
dec
dec
sahf
dec
mov
sahf
xlat
mov
cli
inc
dec
add
xor
popf
jnp
mov
lahf
movsb
mov
sub
sbb
sbb
inc
stos
loopne
fwait
mov
or
das
scas
or
movsl
lea
xor
js
cmp
cmp
addb
xchg
into
outsb
jle
push
outsl
xchg
sub
in
in
pop
sub
ljmp
cmpsl
mov
out
adc
roll
dec
mov
mov
fcomps
mov
cmpsb
cmp
dec
push
jne
movsb
lods
mov
dec
out
cmp
mov
out
lea
std
xor
ja
dec
call
add
in
aad
sbb
xlat
dec
lahf
lods
xor
add
icebp
xor
cmc
pushf
insb
add
rcrb
lret
cmp
nopl
cmc
mov
mov
cmp
sub
into
mov
xchg
inc
ret
mov
ljmp
fistl
cmp
add
xor
adc
mov
cmp
inc
shr
aam
test
sbb
das
xchg
arpl
and
out
insb
adc
cmp
jae
adc
insl
sbb
popf
jne
xor
adc
xchg
cmpsb
jmp
lret
loope
ljmp
push
or
into
je
movsl
xor
or
add
out
call
inc
cs
sahf
test
pushf
fnstcw
dec
and
outsb
push
mov
jns
sbb
cli
ja
cmpsb
cmpsb
adc
pop
pop
push
push
fs
js
sbb
std
aam
test
and
sbb
add
insb
test
mov
push
xchg
lods
leave
enter
inc
out
cmp
std
imul
mov
and
fcoms
fwait
dec
daa
test
sbb
dec
dec
std
cmp
sahf
mov
pop
mov
outsl
add
cli
int3
xor
lds
js
test
push
mov
dec
arpl
cmp
inc
push
mov
fsubl
ljmp
mov
rcrb
dec
mov
repz
fs
pop
push
call
jge
mov
pushf
ror
fldt
into
lea
inc
rorl
nop
pop
mov
fmuls
lahf
jo
xor
ja
fscale
adc
jne
rcll
leave
paddd
loope
sub
orl
pop
insb
and
roll
mov
test
and
cmpsb
hlt
mov
or
xor
test
pop
jp
scas
xor
pop
sub
lods
mov
mov
pop
sbb
ficoms
xor
pop
cmp
jo,pt
push
cmp
or
or
push
orb
and
mov
pop
cmpsl
fimuls
shl
dec
data16
inc
pop
into
inc
adc
lds
pop
dec
xchg
and
mov
fisttpl
pop
outsl
pop
adc
test
xchg
adc
or
xor
dec
sbb
pop
inc
add
imul
gs
aaa
int
pop
ljmp
mov
test
push
frstor
mov
add
ss
jp
lock
enter
ror
scas
cmp
in
divl
mov
not
jg
mov
popf
add
test
jecxz
in
aam
test
cmp
stc
jle
dec
test
cmp
ficoms
test
xor
rorb
xor
xchg
jp
inc
std
or
sub
fdivs
cli
popa
jg
and
mov
ret
int
mov
test
push
movsl
lahf
mov
pop
addb
sbb
gs
daa
gs
xor
jl
lahf
adc
pushf
dec
adc
je
inc
jno
add
inc
ljmp
out
movsl
sti
lahf
je
call
inc
mov
cmpsl
mul
jg
pop
sarl
mov
push
cli
cmpsb
lods
pop
out
cmpsl
lea
jns
rolb
pop
sbb
xchg
movsb
xor
pusha
les
gs
pop
push
push
add
enter
push
insb
mov
std
in
lods
or
mov
in
sub
dec
or
add
or
cli
int
lds
jl
jae
or
adc
lods
cwtl
idivl
or
shlb
dec
and
mov
ss
sbb
repz
cmpsb
out
push
lahf
les
lcall
mov
iret
jge
or
xor
push
test
cmpsl
push
push
mov
push
adc
inc
add
push
jb
jge
loope
jmp
jmp
ss
lds
out
les
push
es
fucomip
adc
and
sbb
cmc
jne
imulb
cmpsb
inc
mov
pop
pop
lahf
icebp
outsl
jp
int3
in
iret
fidivrs
leave
outsb
fs
loop,pn
dec
popa
cmpb
loopne
lahf
pop
inc
lahf
ljmp
inc
iret
test
shrb
outsb
pop
cld
sarb
cmpl
addr16
jbe
loopne
pop
add
xchg
xchg
test
mov
cmpsb
clc
add
imul
push
mov
jp
movsb
and
push
repnz
cmp
cmp
cltd
sbb
adc
adc
faddl
and
pushf
ss
sub
gs
mov
aam
iret
xchg
jecxz
dec
imul
fst
imul
mov
js
enter
popl
xor
cmpsl
call
or
mov
fisttpl
sbb
jl
cmc
mov
adc
int
mov
mov
out
push
repz
sub
icebp
sarb
jp
mov
or
movsl
sbb
fwait
mov
dec
int
sub
pop
out
daa
fs
pop
insl
hlt
sarl
cli
fdivr
stos
sbb
jge
push
sbb
mov
sbbl
stc
xchg
dec
dec
rcll
jp
sub
jecxz
aad
aas
sarl
inc
and
xor
cmpb
sbb
xchg
fcompl
pop
cmp
cmpl
fimuls
repz
inc
cld
fcoms
add
mov
leave
lret
xor
cmpsb
adc
or
dec
and
scas
test
loopne
insl
shrb
jge
icebp
push
inc
sbbb
dec
xor
dec
pop
sub
jbe
data16
inc
pop
xchg
inc
push
popa
fwait
std
sarb
leave
mov
xchg
adc
ret
xor
jo
push
mov
adc
cld
mov
and
outsb
lods
sub
xchg
lods
cmc
jae
pop
sbb
and
dec
mov
repnz
cmp
das
aad
outsl
fsubr
out
cmp
push
test
xor
mov
xlat
ljmp
lea
jo
or
leave
cld
xchg
mov
push
xlat
adc
jno
and
repnz
push
sarl
push
shlb
fnstsw
jge
mov
dec
std
sbb
out
fcmovu
sbb
pop
scas
js
or
test
sub
xor
cltd
stos
cmp
sti
cmc
jns
pop
mov
fdivp
sbb
jl
call
out
pop
xor
mov
cmc
sbb
jp
aas
xchg
xor
out
repnz
mov
mov
out
inc
push
les
incl
rcr
mov
pushf
popa
pop
pop
pop
push
or
adc
sbb
xchg
mov
dec
xor
sarl
cmp
push
mov
sub
loope
shll
or
push
ss
out
mov
in
push
cs
cwtl
cs
pushl
nop
mov
adc
sub
xchg
das
test
shlb
inc
lcall
pop
mov
es
in
mov
adc
popa
mov
adc
sahf
cli
push
pop
push
jne
mov
cld
shll
std
popf
imul
addr16
adc
aas
aad
stc
mov
imul
cli
ljmp
rcr
mov
aam
pop
test
inc
test
inc
xchg
test
sub
mov
cli
stos
jo
push
ret
call
sub
and
add
xlat
scas
jo
fidivrs
nop
scas
movsl
repnz
imul
push
cmpsb
imul
ror
repz
dec
insb
sub
inc
cmpsb
imul
es
inc
pop
ja
pop
xchg
xor
ror
or
mov
cld
out
pop
lods
fidivrl
and
cmp
fstp
jae
aam
push
pop
mov
sub
stos
push
cmp
xchg
dec
mov
addr16
mov
push
pop
ficoml
mov
push
inc
adc
pop
pusha
dec
or
cld
or
sub
jecxz
xor
inc
dec
and
aad
lret
push
mov
popf
pusha
adc
pop
xlat
adc
push
mov
lods
jg
xor
das
push
loope
or
out
mov
dec
in
or
cwtl
add
dec
mov
insl
push
push
or
rolb
inc
sub
aaa
mov
adc
mov
jns
mov
xchg
sub
adc
add
test
test
xor
mov
jmp
add
pop
out
xor
cwtl
mov
add
shl
lahf
stos
std
adc
sub
push
xor
dec
stos
mov
les
int3
mov
enter
mov
sbb
hlt
stos
mov
scas
xchg
pushf
push
sub
jo
jecxz
fisubrs
cmp
and
leave
push
imul
dec
mov
and
ljmp
or
bound
inc
iret
fbstp
and
mov
fisubs
pop
inc
xor
enter
das
mov
fwait
or
data16
add
cmp
lret
xchg
outsb
pop
jmp
fistl
ret
ret
xchg
dec
icebp
cld
popa
dec
mov
jnp
sbb
rorl
push
pop
daa
mov
push
mov
into
loop
sub
xor
jbe
mov
xor
imul
sbb
scas
hlt
fsubs
rdtsc
and
out
or
fdivrs
mov
fmulp
pushf
in
fcmovbe
repz
loopne
fsubrs
cli
jle
packuswb
push
mov
xchg
add
mov
mov
in
in
sbb
xor
arpl
push
testl
aas
add
jl
fldenv
inc
arpl
inc
push
lret
das
movsb
mov
test
ljmp
cltd
or
ss
mov
pop
jnp
cmc
jl
cmpsb
int
mov
stos
rclb
es
mov
leave
or
sbb
adc
leave
push
movsb
sti
inc
xlat
in
out
or
pop
jns
jae
test
ds
or
xor
push
xchg
scas
movsb
sbb
cmpsl
push
push
mov
es
aaa
dec
es
popl
mov
xor
out
js
sbb
and
stos
cmpsl
leave
mov
jno
jecxz
fmull
push
cmp
scas
sub
mov
pop
andl
add
out
jno
push
aam
je
sub
sbb
adc
bound
and
stos
xchg
lcall
mov
popf
lcall
adc
lcall
mov
enter
repnz
pop
leave
and
inc
sbb
aaa
or
rcll
dec
xor
sbb
mov
dec
cmpsl
fld
out
lcall
in
int
or
pop
xor
outsl
fmuls
nop
sbb
fisubs
and
iret
cwtl
scas
adc
mov
ficoml
push
mov
push
dec
inc
sub
lods
mov
mov
sbb
sbb
dec
adc
xor
push
stc
cmpsl
sbb
je
sarb
inc
popf
cmpsl
mov
mov
in
mov
sti
cld
call
daa
sbb
mov
xor
sbb
push
repz
or
insb
sbb
icebp
mov
push
jns
dec
or
pop
ret
or
jno
jnp
cmc
xchg
adc
mov
call
pop
in
cmp
ret
add
push
dec
in
ss
mov
add
sub
add
push
jecxz
pop
call
inc
lret
add
mov
cmp
in
push
fadds
or
fistps
popa
in
push
sub
dec
xor
les
jp
inc
js
sub
sub
push
icebp
mov
and
xchg
adc
push
mov
mov
add
addb
test
mov
sub
cmpsl
fs
stc
cmp
stos
sub
mov
arpl
repz
cmp
sahf
in
lock
and
lods
fldenv
add
aas
mov
lea
cmpsb
subl
dec
pusha
mov
sub
sub
pop
mov
push
arpl
cs
jmp
lahf
cmp
cmp
dec
aas
loop
in
ret
mov
sbb
fcoms
mov
scas
fstps
sub
icebp
repz
mov
sbb
adc
inc
out
fmuls
mov
stos
aam
sub
out
sub
xor
and
mov
mov
lret
jb
mov
lret
icebp
and
repnz
fstpl
and
mov
xchg
jge
sub
and
xchg
lahf
popa
sbb
repz
jecxz
xchg
xor
xchg
fstl
jb
pop
sbb
ljmp
pusha
les
xor
fsubl
out
outsb
pop
cmpsl
roll
shr
inc
add
test
fnstenv
and
jecxz
jmp
bound
pop
xchg
test
test
xchg
js
jle
cmpsb
lods
test
mov
repnz
xlat
ret
dec
push
enter
insl
xor
inc
test
push
xchg
imul
lock
fstpt
mov
cmp
movsb
add
incl
adcb
push
jmp
enter
jmp
dec
imulb
rolb
cmpsl
stc
adc
mov
fcmovnb
fcomi
pop
xchg
fsts
jge
pop
xor
in
inc
adc
cmpsb
icebp
data16
adc
das
mov
adc
in
pop
or
fs
mov
add
sbb
iret
fists
mov
and
push
dec
aaa
or
jg
bound
jae
cmpsb
and
icebp
movsl
jbe
sbb
mov
lock
fnstcw
push
xlat
push
or
addr16
sub
nop
ret
popa
test
mov
jb
popf
pop
or
call
xchg
out
rorl
outsl
iret
inc
cmp
hlt
sbb
mov
lods
inc
xor
sbb
jge
jae
dec
jne
fldenv
out
nop
xchg
and
or
xor
mov
inc
mov
pop
mov
jecxz
sub
cmpb
mov
sbb
fcomp
and
lock
loopne
les
es
or
sbb
fisubrs
mov
and
jmp
xor
push
jecxz
mov
lahf
cmc
dec
mov
movb
sbb
dec
jge
sbb
popf
xchg
in
xor
mov
add
ja
push
or
scas
inc
inc
negl
xor
xchg
mov
sub
pusha
ss
lods
lds
dec
add
int3
out
mov
inc
flds
push
push
das
mov
test
pop
push
jne
push
or
jnp
cmp
sbb
dec
es
test
or
js
mov
push
jns
or
and
lods
pop
pop
jnp
mov
aaa
mov
adc
and
sbbl
xchg
mov
push
scas
mov
scas
ljmp
sarl
sub
in
lret
cmp
cmp
outsb
cmp
jle
lcall
jae
mov
aas
xor
lahf
mov
mov
inc
popa
inc
frstor
call
inc
xlat
cltd
mov
xchg
inc
xor
outsl
cmp
mov
arpl
push
push
std
clc
iret
dec
push
test
push
js
sub
mov
mov
push
hlt
inc
imul
in
or
sub
mov
inc
mov
and
bound
mov
mov
mov
dec
cmpsl
cwtl
test
add
outsb
inc
std
push
push
aaa
rorb
sbb
or
repz
mov
sbb
mov
dec
push
fadds
mov
xor
mov
mov
mov
xchg
ret
jmp
push
dec
test
xor
stos
inc
jae
fdivrl
aad
dec
jne
fstpt
push
add
xchg
pushf
jns
add
outsb
jle
mov
fisubrs
test
call
or
sbb
scas
pop
mov
xor
ds
mov
mov
cmp
inc
xor
pushf
inc
or
lret
jecxz
rorl
stc
leave
dec
push
ret
mov
imul
xor
sbb
xchg
mov
or
mov
stos
mov
stc
mov
cmc
mov
add
gs
push
ret
loope
add
jle
stos
cmpsl
dec
mov
mov
inc
scas
jmp
cmp
cmp
loop
and
inc
clc
enter
scas
int
movsl
scas
inc
adc
xchg
push
push
popa
fs
mov
pop
sbb
jne
shlb
repz
popa
lcall
jno
data16
mov
mov
sbb
cmpsb
pop
mov
movsl
jecxz
add
lcall
enter
fisubs
push
cmpsb
fsubrs
push
xchg
movsb
push
dec
ljmp
inc
insl
sbb
xchg
and
fs
paddd
call
sub
mov
cmp
push
fisubs
cmp
mov
fldcw
mov
jb
push
mov
aam
scas
lret
popa
push
rol
and
loope
adc
dec
stc
jge
inc
arpl
pop
decb
insl
jecxz
xchg
imul
test
adc
call
mov
jmp
test
add
mov
lods
mov
decl
pop
and
mov
lcall
dec
cmc
mov
xor
xlat
movsl
xchg
sbb
add
xor
call
xor
out
sub
insb
inc
jnp
movsl
aam
xchg
mov
nop
dec
jo
adc
push
and
orl
mov
bound
or
movsb
cmpsl
dec
sub
lret
lahf
pop
and
shrl
xchg
lods
sub
push
xor
mov
xchg
or
mov
xor
cld
ficoml
andb
into
cmp
ljmp
mov
fs
orb
stc
push
hlt
stc
lcall
mov
xor
add
push
inc
fldt
mov
ljmp
mov
nop
fidivl
pop
das
inc
aas
pop
inc
sub
scas
cmc
mov
or
add
sub
js
push
or
xlat
ret
mov
fnstsw
lcall
insb
imul
bound
push
arpl
xor
fs
fimull
and
xchg
xor
or
movsb
adc
loope
or
repnz
jmp
lds
sub
cld
mov
lcall
pop
test
pop
pop
ss
add
pop
sub
mov
in
clc
repnz
aas
rcrl
cmp
test
cld
sub
mov
push
inc
sub
inc
add
mov
mov
stc
push
pushf
test
not
repz
test
fldt
pop
inc
fists
in
pop
add
hlt
add
add
adcb
mov
out
push
jb
imul
xor
cmc
sbb
mov
or
fsub
sbb
jne
mov
push
cld
pop
push
aam
hlt
sbb
xor
test
in
pop
jne
push
and
jge
dec
out
cwtl
sbb
lods
adc
or
stos
push
cmp
ss
or
mov
rclb
insb
mov
aaa
pop
mov
int3
sar
sbb
sub
arpl
lock
cmp
add
ljmp
inc
jge
xchg
cmp
and
sarb
pop
movsb
in
xor
cld
arpl
inc
lcall
xchg
cmp
mov
inc
add
mov
jmp
jns
fdivs
loop
xchg
jne
rcrl
rcr
test
adc
jecxz
adc
pop
push
pusha
xor
lcall
inc
fisubrs
pop
mov
fistps
mov
xchg
add
xchg
inc
out
cmp
mov
push
mov
push
jo
inc
inc
push
enter
xchg
fwait
stos
jae
sub
dec
pop
mov
aam
loope
std
push
mov
fwait
xor
inc
aaa
dec
or
insl
enter
lcall
jle
icebp
xchg
sbb
aaa
adc
idiv
aas
cmpsl
cmp
popl
inc
arpl
lahf
outsl
mov
loop
icebp
es
stos
dec
sub
daa
in
pushw
adc
fwait
push
add
cs
pop
in
imul
dec
mov
jo
pop
push
out
dec
cwtl
in
repz
jnp
fildll
jl
pop
xchg
fstpl
mov
lods
mov
pop
jl
xorb
pop
sub
xchg
enter
jae
syscall
dec
push
mov
stos
jae
cmp
pop
enter
arpl
push
lock
xor
jge
adcb
sub
fldl
lods
or
movsl
fsubrs
and
loopne
jmp
xor
push
in
jl
mov
in
test
adc
iret
addr16
fisubrl
inc
imul
xor
test
insb
hlt
pop
movsb
mov
and
loope
in
int3
cld
xor
popa
cmp
std
push
xchg
hlt
mov
jge
dec
cmc
fdivr
shrb
rorb
cli
inc
hlt
mov
mov
adc
popf
aam
loopne
xor
jne
add
fsubl
movaps
dec
jg
add
inc
push
inc
popf
outsl
fstps
dec
xor
std
loope
and
push
mov
ror
mov
inc
cmpsb
xor
cmp
xchg
int3
jmp
ljmp
call
inc
sbb
loop
cmpsb
push
sti
sub
movsb
pop
mov
into
call
repnz
lahf
mov
sti
out
xorl
push
int
inc
dec
sub
std
jae
adc
xor
sbb
jecxz
xchg
add
xor
and
roll
mov
mov
mov
mov
inc
sbb
es
inc
dec
inc
cli
add
xor
ljmp
fisttps
cmpb
cmp
xchg
scas
xchg
mov
fnstenv
dec
dec
ds
fdivrl
xor
les
sbb
push
mov
test
cld
lcall
dec
mov
mov
xchg
loopne
in
outsl
pop
dec
fsubrl
stos
data16
adc
loopne
bound
popf
push
das
and
jnp
movsl
es
sub
jns
cmp
es
sub
pop
cmp
adc
lahf
inc
fdivrs
xchg
scas
sbb
movsb
xor
lods
ljmp
push
sti
xchg
inc
pop
arpl
lds
sbb
loope
lret
push
mov
xlat
fs
push
adc
mov
add
enter
repz
test
xchg
mov
mov
loope
hlt
mov
xorb
dec
dec
add
or
sub
es
pop
stos
or
cli
add
sbb
sti
push
movsl
stc
sub
mull
jp
popf
mov
mov
inc
movsl
sbb
jl
push
int3
push
pop
jmp
inc
add
mov
popf
inc
dec
jmp
arpl
stc
push
inc
xchg
daa
sub
aad
and
jno
push
loopne
jge
and
je
xchg
in
insl
inc
add
dec
jg
adc
loop
push
js
mov
ror
aas
arpl
xchg
push
sub
and
push
fsubp
mov
pop
out
cmp
inc
pop
mov
incb
pop
repz
ja
pop
addr16
arpl
jo
cmp
sbb
jl
pusha
inc
test
sub
out
cmp
jmp
or
out
les
mov
xchg
and
inc
or
add
xor
xchg
jnp
ret
dec
cmp
cltd
jp
pop
xor
and
add
shl
mov
lea
dec
js
cli
test
fstps
in
int
iret
add
out
shrl
pusha
inc
mov
jmp
into
scas
jp
mov
sti
push
or
popf
neg
mov
mov
cmp
cmpsb
loopne
hlt
rorb
pop
cmp
sbb
loop
or
gs
sbb
sbb
mov
xchg
je
lea
bound
aaa
cli
and
sbb
mov
mov
insb
js
movsl
xchg
jle
test
sub
add
cmp
daa
xor
movsl
mov
pop
punpckhwd
fisubrs
shll
incl
jae
jae
mov
in
push
outsl
sbb
js
pop
xchg
popf
xchg
aad
push
in
cld
dec
jae
lret
in
iret
adc
push
add
add
shlb
mov
mov
jns
inc
std
pop
mov
mov
stc
xchg
adcb
and
bswap
sarl
xor
imull
inc
adc
inc
inc
sbb
mov
cmc
sbb
add
cmpsl
test
lods
nop
subl
ds
push
xchg
xor
outsl
call
aam
sub
inc
xor
sub
ja
and
cmp
addr16
and
mov
test
idivb
imull
xchg
xlat
mov
mov
les
fbld
jle
aas
push
cmc
and
rclb
das
imul
cmp
add
mov
les
into
push
fs
mov
dec
je
push
push
pop
mov
lret
inc
cmp
add
push
std
inc
dec
mov
push
dec
into
sbb
inc
inc
dec
sbb
cmp
shl
cmp
mov
notb
jp
cmpsb
xchg
sbb
scas
stc
out
add
insb
loope
jbe
adc
shll
loope
stc
nop
mov
ljmp
mov
bound
outsb
mov
andb
dec
fcompl
push
and
adc
pop
out
dec
push
pop
push
mov
fcoml
xor
jne
pop
push
or
int
lret
mov
ja
xchg
ficomps
mov
hlt
push
xor
repz
test
jmp
sbb
sbb
shl
flds
js
aas
push
sub
xlat
cltd
xchg
jge
or
outsl
test
mov
bnd
popa
int
mov
imul
mov
pop
mov
sub
pop
out
lds
add
jbe
nop
insl
inc
xor
shrb
scas
dec
mov
enter
push
mov
addl
push
and
jl
pop
jl
xchg
cmp
lret
dec
ret
mov
jmp
stos
xchg
dec
ss
lock
dec
cmovae
pop
and
cld
sbb
pop
mov
pop
sahf
inc
fisubl
inc
pusha
add
push
aam
add
pop
inc
test
pop
mov
daa
stos
cmpsb
shrl
add
fisubl
mov
aam
adc
xchg
mov
es
jmp
lret
ficomps
mov
push
jg
adc
insl
fdivrs
enter
mov
rcrl
ja
out
cmp
gs
cld
mov
fwait
lock
ja
pop
jne
fisttps
sti
push
jae
out
pop
sbb
pop
sbb
mov
mov
sahf
xchg
hlt
stos
inc
out
jnp
in
dec
dec
adc
mov
inc
mov
mov
cltd
lahf
add
rorb
cmp
mov
or
xchg
xchg
adc
jmp
xchg
ror
lods
out
push
cmpsl
jmp
inc
adcl
cmc
fisubrl
jecxz
inc
rorl
js
mov
lcall
ja
xchg
pop
mov
popa
fimuls
add
in
mul
rcr
xlat
ja
pop
fistps
gs
jb
pop
jns
or
or
loop
stos
loopne
mov
adc
repnz
pop
out
mov
dec
push
jmp
iret
je
and
inc
lcall
mov
pushf
push
push
xor
jns
arpl
shr
or
sub
sbb
fbld
push
daa
add
push
sub
inc
addb
cmp
ror
cmpsl
push
xchg
out
inc
xor
inc
out
inc
cmp
pop
push
adc
push
pop
int3
mov
frstor
pop
shlb
sar
sbb
mov
sahf
push
repnz
popa
pop
mov
addb
mov
ljmp
inc
sbb
movsb
cwtl
jb
insb
pushf
push
sub
jg
add
sub
cs
adc
ficoms
fwait
popa
add
fisttpll
jmp
xor
lods
sarl
out
or
sub
xchg
push
loope
insl
jno
mov
push
cmp
js
mov
mov
adc
ss
imul
inc
dec
mov
pop
int
arpl
and
cmpsb
add
repnz
adc
int
push
inc
xchg
and
inc
orl
daa
and
mov
adc
icebp
std
loop
and
inc
loopne
lret
call
inc
jno
lds
mov
cwtl
mov
xor
neg
lcall
xor
movsl
mov
xor
les
das
sbb
pop
fxch
jns
rclb
mov
dec
ret
adc
sub
cwtl
pusha
sub
cmc
mov
mov
in
pop
aad
cmp
cmpsl
fwait
mov
cmp
pop
add
cmpsb
pop
lock
dec
orl
adc
add
outsb
mov
ja
push
jne
and
add
or
sbb
test
xor
mov
mov
jbe
xor
xchg
arpl
mov
mov
push
lret
sub
loope
fidivrl
mov
push
adc
sub
or
cmp
push
and
mov
inc
push
scas
inc
incb
stos
add
lock
clc
jno
and
mov
repnz
arpl
popf
aam
inc
xor
jle
xor
fadds
push
rcrl
into
cli
inc
lret
bound
xor
mov
scas
mulb
push
or
scas
or
into
jmp
jnp
mov
icebp
and
shll
pop
cli
push
out
cmp
jne
and
popa
sub
popf
jmp
xor
sub
divb
pop
aas
sub
push
gs
lahf
cmp
push
icebp
mov
xor
mov
fists
mov
inc
popa
cwtl
and
les
sub
mov
mov
push
push
push
fsubs
out
push
clc
inc
and
ret
dec
xor
les
mov
fsubr
inc
stc
js
pop
mov
push
out
fcomip
xchg
jbe
cmp
jo
sbb
addr16
mov
stos
push
outsl
inc
movsb
imul
cmpsl
iret
or
mov
xor
ljmp
out
xlat
sbb
adc
in
sbb
dec
lcall
ret
sahf
sub
das
push
mov
insb
push
dec
and
inc
mov
insb
scas
or
cwtl
xchg
fs
jp
arpl
push
xchg
mov
andb
call
leave
cmp
test
or
mov
sub
loopne
mulb
ds
jg
sti
mov
cmc
and
sti
adc
shlb
or
lock
add
xlat
out
pop
jno
mov
dec
pop
push
dec
test
pusha
adcb
and
sub
adc
push
in
movsb
and
adc
jo
push
jae
cli
mov
es
xchg
cli
ret
xor
je
push
cmpsb
bound
mov
xchg
xor
dec
adc
sub
mov
into
and
inc
ret
adc
push
mov
mov
les
in
jae
pop
sub
mov
jecxz
lahf
sub
fsts
push
test
xlat
jg
pop
dec
in
push
jle
out
mov
jno
stos
jnp
or
or
sub
lds
clc
sub
and
stos
in
cli
scas
mov
cmc
xor
jbe
aad
popf
loope
fadds
cltd
pop
movsl
cmovns
stos
dec
push
mov
mov
adc
push
mov
test
ficompl
lretw
xchg
dec
sar
cltd
imul
sub
jl
test
sub
xchg
or
push
aad
inc
mov
jb
jmp
jo
cmp
les
lock
mov
mov
dec
repnz
push
or
push
ret
sub
lods
xchg
pop
pop
jmp
fcoms
xchg
int
adc
ftst
int3
ss
inc
lock
sub
dec
loop
aas
xchg
int
dec
scas
aaa
rorb
push
push
add
inc
shrb
or
adc
test
das
aad
negl
pop
xchg
pop
and
stos
scas
mov
mov
push
mov
imul
add
and
jmp
bound
scas
aaa
and
test
and
cmp
sub
or
cmp
pop
push
ljmp
pop
xchg
int3
leave
add
fidivrs
jge
cmp
loop
adc
xlat
fldenv
pop
xchg
fldt
mov
dec
jbe
sbb
push
rorb
push
arpl
iret
lods
jl
icebp
cmc
stc
lods
lret
cld
or
in
in
or
and
cwtl
lea
out
lock
scas
iret
xor
into
pop
sti
jp
dec
cmp
inc
xlat
cli
sahf
lods
insl
xchg
cltd
popa
xorb
or
mov
sbb
rcrb
pop
cli
jbe
push
fildll
cmp
jno
pop
mov
test
test
test
pusha
xor
jns
adc
sub
les
sub
lea
xlat
aad
ljmp
cmpl
insb
cmp
stc
les
mov
dec
mov
cmp
mov
jae
pop
push
popf
fwait
xor
fucom
sahf
inc
out
push
push
jnp
shll
push
add
mov
and
jne
mov
xchg
sbb
cs
sub
sub
or
sbb
xchg
cmpb
roll
push
push
fldl
adc
add
dec
adc
mov
push
test
mov
lret
jbe
cwtl
mov
mov
popa
jp
push
cmp
aas
jns
add
outsb
outsb
arpl
dec
xor
lcall
cmpsb
push
insl
pop
sub
outsb
es
lcall
sti
scas
stos
lret
cmp
orl
jle
mov
movsb
adc
out
arpl
pushf
sbb
sti
jae
xchg
adcl
fcompl
jge
dec
adc
push
mov
xchg
aad
dec
cli
andb
or
ret
outsl
pop
mov
mov
sbb
pop
stc
fdivrl
mov
inc
ljmp
fists
mov
loope
and
xchg
xor
dec
add
loope
mov
push
mov
inc
imul
xchg
mov
mov
lock
mov
sbb
movb
lahf
sub
and
sub
mov
xchg
rorl
stc
and
xchg
add
cmpl
cmp
and
das
inc
mov
xchg
in
adc
sbb
pop
add
cli
mov
aad
cmc
rolb
rcrb
inc
insb
in
insb
mov
iret
popf
add
lods
mov
jnp
aaa
xor
push
sbb
shll
jle
inc
nop
orl
push
cmp
jge
leave
mov
ret
ljmp
outsl
cmpsl
sbb
cwtl
rorb
push
jge
and
pop
mov
mov
mov
movsl
out
sbb
jnp
lods
mov
jecxz
pop
xchg
pop
add
mov
add
ret
sbb
adc
jmp
jne
pop
add
xor
loop
or
js
dec
push
mov
xchg
sub
jne
mov
lahf
int
mov
push
js
movsl
lods
dec
mov
jo
cmp
jecxz
pop
out
aam
sub
popa
or
sti
jo,pn
notl
xchg
sti
popf
fiadds
mov
pop
inc
add
decl
jnp
std
shl
sahf
lret
leave
loopne
sub
fisubl
jne
inc
dec
loop
imul
cld
int3
and
rcrl
mov
lret
inc
mov
xchg
arpl
lahf
icebp
mov
scas
fmull
imull
adc
data16
das
push
xchg
gs
dec
cld
ja
xchg
repz
idivb
cmp
push
int3
jle
mov
cli
pop
nop
push
or
leave
xorl
jo
or
outsl
insb
aam
pop
or
pop
pusha
rolb
mov
xchg
divl
mov
pop
lcall
adc
pop
clc
jne
sub
sbbb
mov
pop
nop
mov
cmp
jns
sti
roll
mov
push
stos
addr16
or
xchg
sar
xor
fcoml
mov
jns
sub
jno
sub
in
push
insb
mov
xlat
lea
sbb
dec
push
inc
je
imul
push
jle
in
daa
scas
jecxz
push
fucomi
adcl
enter
or
fcmovb
xchg
push
fisttpll
jae
xchg
mov
je
jl
imul
outsl
fdivl
test
push
lret
push
dec
xrelease
scas
lret
mov
out
repnz
sub
out
leave
dec
push
xchg
out
and
aam
cmp
imulb
mov
pop
popf
int
adcl
and
mov
loop
add
inc
xchg
add
jno
out
mov
aam
xor
xor
fstpt
dec
push
jne
jmp
iret
sahf
mov
sub
incl
and
pop
negb
sbb
lds
aaa
out
std
sub
jbe
enter
xchg
push
aas
fwait
xor
repnz
into
pop
movsb
inc
fdivrs
ljmp
and
mov
cld
sbb
push
lds
adc
test
sti
int
xlat
pop
pop
xchg
jge
mov
push
jle
inc
cmp
push
insb
xchg
mov
pushf
sbb
xor
pop
cwtl
shlb
sbb
jle
push
out
xchg
adc
subl
fsubrl
add
mov
scas
fdiv
adc
xchg
inc
fs
sbb
lret
fildll
or
xorl
xchg
jnp
mov
insb
sub
aas
mov
pop
cli
in
pop
je
ja
std
nop
ja
dec
push
mov
lock
xchg
push
xor
arpl
mov
pop
dec
xor
adc
or
jno
pop
adc
or
ljmp
mov
shr
mov
aam
push
es
adcb
into
out
inc
push
movsl
sarb
or
test
roll
frstor
repz
neg
push
sbb
cli
hlt
mov
mov
dec
xor
inc
inc
into
cs
outsl
test
mov
es
enter
pop
jb
dec
xorl
xchg
insb
cli
in
push
pop
adc
mov
test
sbb
ret
jbe
out
mov
mov
aas
dec
mov
or
xlat
ljmp
or
mov
jb
cmp
sbb
cs
lds
mov
rcll
in
add
mov
jmp
and
and
adc
jge
lds
push
mov
lods
jns
inc
push
dec
aad
mov
ds
cmp
stos
hlt
in
test
cmp
inc
in
lock
out
pop
jns
int3
incb
jo
jae
scas
out
sbb
push
sti
mov
jno
dec
mov
pushf
loopne
cmp
cmpsb
lcall
loope
push
jnp
sub
xchg
xchg
cmp
call
dec
sub
sbb
xor
int3
jns
add
test
cli
scas
pop
mov
mov
mov
add
mov
repz
out
cmp
push
or
cmpsl
loopne
xlat
mov
jmp
sub
aaa
adc
je
inc
pop
sbb
flds
push
outsl
or
inc
in
lock
sub
cmp
jge
xchg
rep
lods
dec
call
test
call
xchg
bound
pop
sub
jmp
fcomp
jno
adc
inc
push
pop
aad
leave
add
mov
mov
adc
inc
dec
les
imulb
cmc
pop
sbb
pop
and
push
fwait
pop
stc
test
xchg
movsl
clc
orb
dec
addr16
xor
inc
shll
dec
and
lret
inc
insb
mov
scas
jle
jne
xchg
mov
cmp
mov
lret
std
fsubl
ret
jbe
dec
out
mov
rclb
jb
push
ret
xchg
in
sar
sti
mov
sub
test
cmp
dec
dec
sti
cmpsl
lret
mov
and
cmp
and
cmp
xchg
add
fmul
inc
fcmovbe
mov
adc
daa
repnz
lods
pop
dec
sbb
cmp
and
and
or
sbb
icebp
add
xor
push
pop
mov
xchg
cs
mov
lock
push
jge
lea
pop
dec
adc
les
lret
adc
lock
push
mov
fwait
outsb
leave
jbe
flds
test
sarl
out
adc
xchg
add
sahf
in
add
jecxz
rolb
mov
push
cmpsl
or
outsb
lret
data16
loop
push
push
mov
sub
sbb
inc
mov
popf
mov
mov
and
push
xchg
les
repz
iret
test
cmpsl
pop
lock
jl
xchg
je
cmp
mov
stos
sub
jp
imul
xchg
lods
sarb
call
xor
jb
cwtl
cmp
addl
xchg
lock
sti
push
inc
xchg
jmp
jmp
sbb
cli
sbb
inc
mov
shlb
push
call
shll
int
arpl
rcll
movsl
jge
in
pushf
mov
loop
mov
adc
jno
shlb
push
out
scas
mov
fsubrl
adc
or
mov
idivl
sahf
aas
imul
test
push
push
aad
jbe
sti
cmp
inc
xchg
pop
aaa
mov
out
dec
inc
push
das
inc
popf
fldt
lahf
push
adcb
mov
loope
jp
enter
adc
cmp
xlat
sub
ret
dec
jnp
or
int3
jae
sti
mov
sbb
ljmp
aas
jge
mov
lahf
imul
gs
sub
xchg
xor
sar
in
adc
lds
cli
push
jo
ljmp
lods
rcl
cmp
in
in
test
stos
je
dec
sahf
fxam
fistps
jno
ret
aaa
stos
das
scas
add
jge
insb
xchg
movsb
push
jl
mov
rcr
aam
frstor
dec
movsl
xchg
adc
inc
cmp
fstpt
xchg
mov
mov
js
xor
repz
jg
push
ds
bound
add
jmp
or
adc
xchg
ss
jle
pop
notl
xchg
dec
xchg
dec
loop
call
or
test
cmp
loopne
add
xlat
clc
enter
test
mov
pop
ss
outsl
fnstenv
push
sahf
ds
push
xchg
ffreep
test
cmc
mov
mov
cli
adc
mov
test
aad
loop
les
out
scas
push
jnp
xlat
cmp
repnz
cmp
out
push
pushf
cltd
pop
pushf
lret
insb
dec
test
arpl
loopew
icebp
and
sbb
fwait
mov
das
sub
sub
jo
adc
rcrl
dec
mov
hlt
push
sbb
add
outsb
xlat
pop
mov
xchg
or
cwtl
mov
enter
push
add
mov
nop
je
int3
inc
dec
dec
mov
sbb
mov
shrl
jo
xchg
jo
cs
mov
movb
mov
movd
mov
pop
inc
sbb
dec
pop
adc
add
mov
adc
cmpsb
jp
xor
sarl
mov
push
aam
mov
pop
ss
stos
sbb
lock
adc
loop
sbb
mov
mov
daa
add
aas
in
mov
adc
cli
inc
test
fwait
push
or
xor
or
pop
imul
dec
mov
ss
xchg
xchg
sbb
mov
xor
jp
in
add
push
pop
sbb
xchg
mov
jmp
add
je
in
in
adc
mov
cwtl
xchg
out
lret
push
mov
loope
lea
jne
dec
pop
rcll
cmp
bnd
clc
les
sahf
push
in
popa
loopne
sbb
inc
fyl2x
push
xor
cs
repnz
jo
or
lret
pop
pop
ret
jns
subl
ret
mov
fcoms
sbb
cmp
testl
lods
mov
or
pop
inc
sti
nop
sbb
aas
sarl
push
shrl
pushf
adc
mull
test
cmpsl
push
cmp
mov
into
lds
rorb
leave
into
inc
repnz
fnsave
lods
push
cwtl
xchg
bound
jl
cmp
insb
scas
hlt
test
ss
lahf
pop
cmpsb
jne
jo
xor
clc
rorl
pop
sti
mov
test
shlb
fsubrl
or
rcrl
add
dec
in
mov
je
pop
xchg
sub
aam
add
jnp
lds
push
mov
mov
jmp
push
nop
lock
dec
fimull
pop
mov
lods
cmp
jae
adc
mov
or
lds
in
dec
js
sbb
adc
cmp
imul
xor
xor
rclb
jbe
imul
mov
dec
gs
or
push
cmp
icebp
mulb
add
mov
push
jmp
pop
js
hlt
inc
pop
cmpsb
cmpsl
pusha
pop
add
or
cmpsb
inc
aas
shlb
xchg
sbb
or
sub
cmpw
inc
sbb
cmp
cmp
addps
cmpsl
or
push
and
dec
sub
xchg
and
and
das
test
in
mov
sbb
pop
stc
mov
ja
mov
lds
popf
into
sbb
add
outsb
mov
in
adc
inc
in
sub
pop
or
clc
sbb
push
mov
pop
popf
push
or
ljmp
cmpsb
adc
jecxz
outsb
xchg
sbb
or
mov
xor
pop
enter
daa
and
mov
leave
sbb
fwait
insl
fwait
adc
mov
cmc
cmc
sbb
lret
out
and
adc
jb
scas
popa
mov
clc
cmp
negb
or
pop
mov
xchg
jne
mov
dec
pop
arpl
mov
add
lcall
gs
and
jne
sbb
pslld
out
xor
cmp
int3
lret
mov
dec
xchg
insb
insl
pop
outsl
bound
pop
mov
dec
sbb
aam
cmp
push
mov
jl
mov
adc
pop
dec
cltd
into
loope
out
push
and
xor
scas
cli
dec
or
jb
in
and
jg
push
xchg
lods
inc
and
or
cwtl
test
lahf
mov
pop
sub
std
or
int
fs
lock
aaa
or
or
adc
fnstsw
addr16
jl
or
or
cmp
sub
imul
ss
push
das
add
mov
lock
mov
jae
dec
jle
jnp
das
push
xchg
push
call
pusha
dec
fisttpll
inc
test
pusha
int3
hlt
pop
mov
test
adc
jmp
sti
dec
xchg
mov
mov
mov
in
mov
pusha
push
data16
insl
stos
xchg
or
and
xchg
or
pop
sahf
daa
cmp
mov
jle
inc
mov
mov
jg
adc
ret
je
pop
dec
adc
jb
dec
imul
mov
sahf
arpl
cmpsl
or
in
cs
cli
inc
nop
push
mov
mov
jle
scas
fiadds
popf
sbb
inc
inc
pop
sti
sbb
lret
inc
cmp
leave
jle
shlb
mov
jle
insb
clc
xor
mov
cmc
mov
dec
notl
mov
mov
fidivl
xchg
pusha
mov
push
cli
push
xor
dec
sahf
in
push
inc
out
push
sbb
xor
popf
or
pop
pop
int
push
in
leave
xor
loope
sbb
add
and
outsl
xchg
adc
cmpsb
scas
scas
sbb
push
cmp
cmc
aad
mov
addb
arpl
dec
cld
sub
mov
repz
pop
dec
or
pushf
es
sbb
jl
mov
ss
dec
js
pop
popa
jge
and
or
sbb
outsb
insl
incl
adc
inc
mov
pusha
lods
fs
pop
mov
jecxz
jp
in
xchg
outsb
xor
pop
fldenv
jl
xor
or
arpl
xor
push
cmp
popl
cmp
cmpsl
inc
push
sbb
lahf
je
xchg
movsb
inc
repz
scas
mov
lret
popa
pop
pop
ret
fcomi
lret
jne
fcmovu
xchg
js
mov
add
push
int
add
mov
xor
stc
outsl
xor
xchg
jbe
push
fdivl
push
ret
adc
loopne
xor
inc
pop
cltd
rcrl
mov
and
fucomp
ds
data16
dec
push
inc
mov
sub
add
dec
lock
daa
pop
je
stc
rcrl
inc
inc
shrb
into
mov
adc
std
dec
in
insl
mov
xchg
jnp
int3
pop
imul
xorl
xor
out
sbb
mov
lds
and
fstpl
std
sbb
xchg
add
repz
jb
mov
das
cmp
lret
xchg
scas
push
inc
xchg
sbb
mov
mov
fmull
daa
stos
mov
mov
lods
xor
mov
ret
inc
sarb
xchg
and
popf
hlt
xor
cmp
dec
leave
push
jo
lahf
fdivs
push
sub
pop
das
ret
push
or
jecxz
mov
jmp
out
push
out
dec
int3
enter
stos
mov
push
inc
mov
lret
mov
xchg
sub
addl
push
stos
mov
out
xor
sub
out
rol
cmp
inc
push
lods
mov
xchg
arpl
dec
and
outsb
xor
jb
or
push
xchg
sbb
inc
inc
jae
mov
xor
and
sub
and
cmp
xchg
mov
add
xchg
inc
sub
sbb
xchg
and
sub
xchg
pushaw
mov
rol
sbb
rcrl
sbb
out
fistpl
das
jmp
test
shr
bound
jb
xor
cmp
adc
push
push
lods
mov
push
inc
jmp
aam
dec
fistpl
testl
test
fbstp
test
movsb
xor
mov
pushf
adc
xchg
movsb
inc
arpl
in
fnstcw
cmp
pop
mov
aad
pop
sub
jnp
out
or
cmp
imul
scas
lcall
pop
fstps
xor
ret
and
and
jg
push
addr16
push
jnp
pop
jnp
faddp
stc
out
scas
mov
and
icebp
out
out
fnstenv
or
pop
fwait
shrl
sti
ret
dec
sub
ds
dec
cs
pop
cmp
mov
aaa
xchg
lea
cmp
mov
inc
out
movsl
fidivrl
lret
addr16
pop
cmp
or
xor
je
adc
mov
iret
xlat
dec
shl
in
inc
xchg
xchg
sub
push
or
xchg
fiaddl
and
mov
lret
test
jnp
dec
call
imulb
or
lea
shll
push
iret
adc
push
add
pop
mov
xchg
sbb
jno
loopne
push
fsubl
mov
mov
shll
push
mov
push
adc
xor
repz
or
add
test
sbb
popf
xor
arpl
sub
adc
jo
pop
int
ss
js
rclb
push
dec
out
fwait
loope
repz
lret
and
adc
jmp
mov
aad
fcmovne
and
decl
sub
pop
mov
nop
out
mov
inc
in
leave
dec
iret
outsl
pop
mov
inc
daa
cs
pop
lcall
outsb
mov
xlat
int
and
mov
stos
xor
iret
sbb
cmc
pop
js
out
jo
loop
mov
sub
lret
ljmp
int
scas
sub
lods
data16
jbe
xorl
lahf
xor
rorl
and
insb
les
pop
icebp
shrb
xchg
loope
das
pop
imulb
mov
sbb
cmpsb
test
push
pop
push
and
jg
xor
inc
inc
shr
and
adc
bound
test
xchg
xor
and
xchg
push
mov
mov
or
andb
outsl
dec
cld
les
rcrb
pop
lods
cmpsl
push
scas
lcall
bnd
xchg
add
push
inc
push
imul
adc
out
sbb
andb
aad
sbb
jle
jg
push
inc
popf
fisttpl
sti
or
fnstsw
pop
popf
inc
mov
mov
mov
shl
gs
push
mov
xchg
mov
xchg
mov
pop
idivl
cs
pop
nop
sub
nop
xor
add
dec
lret
add
imul
cld
mov
hlt
fdivrs
sbb
jecxz
lds
pop
mov
insb
popf
and
lods
idivb
xor
addl
outsl
push
dec
test
sbb
sub
insb
mov
push
pop
jmp
ret
pop
mov
mov
push
cmp
andb
pop
cmpsb
repz
or
jnp
or
out
pop
jge
xchg
push
cltd
daa
and
add
outsb
fbstp
pop
in
lods
sahf
cmp
call
stos
lds
loopne
lahf
adc
ret
out
outsb
jne
adc
or
cmp
adc
jl
xchg
pushf
jb
or
fistps
pop
inc
es
pushl
push
jge
imul
mov
sub
and
ror
push
inc
xor
or
and
imul
inc
jecxz
add
sbb
je
dec
and
rcl
dec
push
jmp
xchg
mov
adc
arpl
xchg
mov
pop
mov
leave
cwtl
mov
hlt
mov
xchg
cmp
lcall
in
mov
push
popa
push
fiadds
push
sbb
inc
lret
aaa
xor
les
mov
jne
cmpsb
mov
loop
mov
jg
sbbl
push
or
data16
xor
mov
stos
out
pop
sahf
out
scas
cmp
add
mov
push
xor
negb
das
ja
xor
fidivs
xchg
cmp
cmp
xchg
xor
lds
clc
cvtps2pd
insb
adc
aas
and
int
or
mov
fwait
ds
mov
daa
rcrl
and
es
pushf
mov
add
jecxz
push
mov
cmc
pop
xchg
outsb
fs
push
cmpsb
adc
push
push
push
mov
das
xchg
dec
push
push
xchg
cmpl
dec
sahf
cltd
sarb
into
inc
testl
lcall
adc
pop
jns
jae
xchg
jbe
xchg
ljmp
mov
cwtl
xchg
bound
scas
sub
lea
sbb
lret
add
or
xchg
xchg
inc
dec
pop
pop
mov
mov
inc
pavgw
arpl
cs
pusha
in
push
in
lahf
ja
fistpl
inc
popa
mov
jge
mov
outsb
repnz
out
fisttpl
aad
mov
pop
xor
fnstcw
pop
push
cli
in
push
cltd
push
arpl
rorb
add
fiadds
das
in
mov
adc
cmp
push
pop
or
or
or
inc
shll
es
cmp
adc
lods
fildll
mov
movsl
insb
lock
lods
test
sahf
push
lret
sub
jno
adc
mov
mov
sbb
mov
xor
sti
popf
xchg
jecxz
into
fisubs
sahf
push
cmovle
cmp
out
repz
dec
mov
lods
repz
lret
mov
inc
out
add
mov
repnz
je
adc
lret
inc
cmp
lds
rolb
xchg
test
rol
cmc
in
pop
frstor
or
std
xchg
mov
cs
rclb
lcall
insb
adc
sbb
in
es
int3
aas
lahf
mov
loopne
loop
jae
push
xlat
dec
mov
lea
out
adc
arpl
icebp
les
movsb
jmp
cmpl
loop
sub
popa
ror
les
sti
push
daa
jmp
scas
pop
add
popf
mov
push
call
addl
pop
xor
testl
adc
adc
mov
pop
cli
cmpsb
fdivp
aaa
cmpsb
in
out
cld
out
inc
add
mov
mov
mov
mov
scas
lds
push
push
mov
leave
push
rolb
je
sarl
pop
or
pop
std
mov
xchg
in
sbb
mov
dec
loopne
push
ror
movsl
push
push
cmp
pop
inc
rclb
aam
sbb
aas
or
push
inc
mov
xchg
mov
xchg
and
movsl
lret
inc
jae
loope
adc
push
aaa
jno
les
insb
add
rcrb
out
push
rclb
sub
add
cld
and
dec
fwait
pop
cwtl
cmp
and
push
mov
jns
push
pop
inc
mov
push
sub
imul
out
inc
pushf
jg
push
dec
push
xchg
scas
shll
clc
mov
push
call
add
addb
sub
addb
and
pusha
mov
mov
xchg
repz
sbbb
pop
lcall
fstl
pushf
or
scas
ret
mov
cmp
cmp
cmpb
jl
and
adc
mov
imul
movl
jbe
jmp
insl
in
jns
insb
rcll
dec
test
or
adc
mov
adc
inc
xchg
aas
sahf
pop
adc
sbb
jo
adc
mov
ficoml
inc
lock
sbb
fwait
adc
test
sbb
adc
fs
push
lcall
cli
call
jbe
sbb
mov
lock
lods
sub
push
cmpsl
xchg
cld
xchg
and
lds
lcall
ss
fwait
bswap
rcrl
adc
mov
test
hlt
xor
jns
repz
js
fwait
adc
jl
add
js
xor
pop
cmp
inc
lods
mov
mov
loopne
ja
mov
xchg
vpcmpgtd
aad
mov
cmp
adc
sbb
or
scas
jmp
in
out
xchg
sar
sbb
das
jb
xlat
std
leave
data16
pop
mov
mov
add
shlb
pop
pop
mov
lods
push
pop
push
les
mov
stos
push
repnz
adc
outsl
ds
dec
fdivrl
imul
andb
pushf
out
jecxz
popa
and
mov
pop
or
cs
popa
cwtl
dec
sub
push
loope
push
xchg
and
pop
ret
push
fsubp
mov
ficompl
shr
lret
andb
fwait
test
mov
dec
xor
out
sbb
adc
imul
cld
cmpsb
fsubl
adc
pop
jg
dec
xchg
inc
loop
test
cld
xor
or
or
in
adc
xor
mov
push
into
sti
or
jae
jns
dec
arpl
dec
cld
push
int
out
jle
sbb
xchg
mov
mov
xor
push
enter
or
aas
dec
add
adc
sub
sub
rolb
push
shr
jno
pop
fs
insb
pop
jl
xchg
jp
pop
sahf
pop
sbb
sbb
adc
negb
mov
cli
jns
push
mov
and
ss
daa
jg
cmpsb
mov
push
mov
jno
frstor
test
loopne
dec
jge
jecxz
std
out
sbb
jg
fs
sbb
and
ds
adc
push
push
scas
adc
pop
sub
jb
cmpsb
mov
out
nop
insl
pop
push
cmc
cmc
mov
ljmp
mov
popf
in
mov
nop
movsb
jnp
xchg
repz
in
xchg
push
push
jne
xchg
jg
mov
ljmp
fists
loope
xchg
rolb
test
mov
test
mov
pop
adc
outsb
cmpsb
loop
pop
sbb
push
cmp
pop
or
and
mov
add
sub
or
lret
add
xchg
push
je
jo
iret
sub
inc
ds
jmp
inc
dec
xor
ss
and
dec
dec
aas
mov
pop
add
jb
in
jno
das
hlt
imul
movsl
out
pop
outsb
and
xlat
mov
xor
into
lret
in
pop
mov
adc
add
lret
or
repz
mov
sub
dec
jg
outsl
adc
push
das
inc
aas
mov
arpl
jbe
movsb
std
movsl
test
mov
cmp
aaa
mov
inc
push
test
dec
push
aad
fildll
cmp
inc
ljmp
nop
push
call
dec
pop
mov
inc
mov
or
lods
stos
sbb
ret
jle
fdivl
lret
ljmp
mov
ret
lds
inc
xchg
int
shll
addr16
xor
sbb
push
mov
or
add
or
insb
pop
rorl
cld
cmp
push
xor
jg
mov
inc
test
push
ds
lock
jg
push
scas
jnp,pt
xchg
out
repz
or
je
cmpsb
fstl
add
repz
cld
stc
out
jg
les
lahf
arpl
test
lcall
dec
insl
leave
mov
data16
mov
or
in
xor
divl
adc
xor
lret
movsb
les
or
adc
jmp
stos
insb
push
or
sbb
je
and
aad
mov
adc
idiv
dec
push
adc
sbb
clc
pop
and
jmp
push
cmp
pop
dec
dec
decb
xor
jmp
shlb
inc
mov
lds
bound
cmp
dec
inc
cmpsb
rclb
pop
js
adc
in
js
xor
inc
pushf
mov
pop
and
inc
xlat
repnz
addps
ja,pn
jnp
clc
inc
orb
bound
fcmovu
negb
mov
jo
push
push
jle
scas
or
fs
call
cmpsb
sub
jge
xchg
xchg
or
mov
cli
test
push
cmpsb
dec
fbld
stos
movsl
jne
push
adc
and
dec
clc
jae
xor
mov
cmpsl
inc
mov
and
int3
pop
mov
mull
xchg
xchg
dec
and
inc
sbb
mov
mov
xlat
sbb
push
sarl
xchg
pop
xor
push
push
xor
pop
in
mov
jge
adc
xor
mov
jmp
fsubrl
push
in
inc
les
jne
and
mov
sub
stos
mov
xchg
out
pop
or
rcrl
cmpsb
xchg
daa
xor
xchg
and
outsb
xchg
push
loopne
das
sub
dec
les
lock
std
in
leave
or
dec
loop
push
pusha
out
addr16
mov
xchg
jns
ficoml
into
or
jns
or
dec
movsb
fstps
cld
rolb
push
push
push
push
leave
stos
or
outsb
mov
push
imul
or
hlt
ja
xor
pop
sbb
pop
sub
mov
xchg
jg
pop
rol
jnp
or
rclb
push
pop
in
mov
jp
testl
sub
xchg
and
fs
sbb
mov
cmp
sbb
cmovns
jnp
push
sub
loope
ss
call
fs
xchg
add
cs
dec
fdivs
sbb
inc
lret
sub
scas
repz
andl
xchg
in
int3
imul
sub
xor
sub
out
in
or
adc
pop
cmp
mov
mov
jo
ss
in
cltd
sbb
movsb
test
jns
push
cmpsb
jae
out
les
mov
call
lea
sahf
mov
cmp
pop
mov
stc
fidivrl
stos
mov
call
popa
xchg
mov
xchg
and
xchg
xchg
xchg
cmp
cmp
leave
outsl
test
inc
inc
jno
jnp
cld
insb
mov
in
ljmp
fsubrl
ds
iret
in
scas
jecxz
lock
xlat
imul
sbb
adc
flds
xor
sbb
out
roll
xor
mov
scas
sub
dec
fistps
lret
add
cmpsb
sbb
xchg
insl
and
mov
movsl
es
mov
jnp
imul
bnd
outsb
jbe
addr16
jno
aas
push
push
lods
clc
push
push
leave
cli
pop
mov
xchg
test
xchg
dec
aad
out
add
ficoms
xchg
sahf
or
mov
call
dec
in
shll
cmp
jmp
mov
int
leave
aas
pop
jns
rcl
lods
lods
pop
mov
sub
inc
or
fisttps
and
cvtps2pi
out
jb
inc
addr16
jns
push
lahf
xor
outsl
ret
idivl
mov
mov
jns
xor
xchg
mov
push
xor
push
inc
adcl
in
aas
jno
clc
out
cmpb
pushf
xchg
jo
pop
in
sbbl
loop
cmpb
subb
xchg
fwait
lcall
cmpb
push
push
mov
xlat
inc
test
pop
fildll
mov
push
popf
sbb
push
stc
aam
add
adc
adc
ljmp
out
cmp
shlb
sbb
jmp
pop
pop
lods
mov
adc
nop
mov
fucom
add
pop
sub
mov
mov
jb
pop
rcll
lds
mov
add
pop
repz
jb
pop
pause
int3
mov
and
iret
ret
mov
xor
sub
out
mov
loope
cmp
out
push
mov
add
stos
add
push
jge
int3
xlat
scas
pop
cmp
xchg
out
inc
testb
jb
push
mov
or
and
mov
loop
sbb
add
leave
sbb
fwait
xor
xchg
or
stc
mov
in
adc
mov
jmp
scas
jno
xlat
mov
or
push
mov
jb
cwtl
stos
pop
ljmp
cwtl
mov
lahf
fidivrs
daa
je
pushf
sbb
out
lcall
mov
xchg
mov
push
jp
xchg
subl
scas
fcoml
sbb
leave
test
filds
mov
inc
movsl
inc
pop
push
in
hlt
mov
pop
popf
cwtl
lea
pop
out
fyl2xp1
insb
cmp
xlat
popa
mov
sub
jmp
cmp
bound
cld
test
fldlg2
fsts
mov
bound
mov
sar
lret
cwtl
fucomp
cmp
xchg
ss
cld
jg
xchg
ds
das
dec
lods
lods
push
dec
int3
jecxz
arpl
inc
jp
pusha
or
jns
cmc
xchg
out
dec
add
dec
add
fucomp
mov
pop
aas
js
push
scas
pusha
into
inc
test
or
sti
pop
pop
fidivs
push
adc
call
and
into
cmp
fistps
dec
invd
stc
addr16
mov
mov
lds
adc
inc
lods
push
or
push
sub
jbe
dec
mov
aad
adc
inc
dec
mov
mov
jmp
clc
shl
cmpsl
stos
xchg
sub
xchg
cmp
loop
sub
jae
pusha
mov
xor
out
lret
pop
pop
mov
fsubp
sbb
addr16
xor
add
daa
xchg
sbb
jbe
fucom
bound
pop
sbb
int
cmp
icebp
mov
xor
cltd
jbe
out
hlt
into
neg
xlat
popa
jle
sarl
scas
dec
imul
adc
fldcw
mov
pusha
jb
shll
xchg
cmp
out
cmpsb
cmp
imul
test
hlt
mov
ret
jge
in
sub
jno
push
repz
jb
lret
jno
cmpsb
mov
popf
and
inc
repnz
mov
std
stos
xchg
mov
fs
pushf
xchg
fcmovu
dec
mov
cmp
adc
jmp
pop
subb
xchg
sub
insb
sbb
adc
sbb
inc
rcrb
fildll
jae
pop
out
mov
mov
add
fistpll
iret
enter
js
insb
jecxz
add
test
test
sub
jno
ffreep
test
test
pop
xor
sub
fisttpll
cmpsb
or
rcrb
mov
inc
repz
xchg
pushf
std
faddp
jbe
and
icebp
adc
sbb
pop
not
cmp
mov
cld
repnz
mov
mov
cli
cmp
leave
arpl
push
shll
jb
mov
fimuls
in
mov
pop
pop
shll
jl,pt
pusha
test
and
daa
jns
and
dec
xor
subl
mov
xchg
ss
and
addr16
stos
rcl
shll
jnp
pop
mov
popf
mov
xor
subb
pop
mov
imul
sbb
adc
push
fs
jb
mov
adc
insb
xchg
icebp
daa
sbb
xchg
inc
cwtl
ds
ret
addr16
pop
and
mov
cmp
ret
jne
dec
out
jmp
xchg
lods
popf
ljmp
out
pop
in
adc
sbb
int3
out
js
jnp
cmp
jno
stc
cmp
dec
mov
pop
aas
pop
fildl
scas
stos
repz
mov
sbb
add
sbb
dec
push
jbe
xor
xor
dec
adc
jbe
cmp
repz
mov
cltd
call
and
das
rol
into
sar
call
lods
cltd
lea
in
pop
out
add
pandn
add
ret
inc
adc
mov
mov
xchg
lret
test
enter
nopl
push
xchg
fsubp
adc
mov
lods
cld
lock
lock
stos
outsb
sbb
or
mov
stos
repz
mov
mov
or
dec
lret
or
std
lcall
push
dec
jg
js
hlt
dec
dec
add
mov
lods
jmp
jmp
mov
adc
out
cmp
xchg
mov
shl
outsl
mov
popf
test
movsb
aad
fsubrl
imul
loopne
pushf
push
jl
or
movsb
dec
sbb
inc
pop
push
ljmp
mov
adc
nop
js
add
and
mov
mov
les
rolb
and
jno
jno
sub
cli
jle
cld
lock
jg
xor
test
and
sbbb
fwait
in
xchg
mov
out
xor
test
xchg
push
xchg
ss
jns
fisubrs
ss
rcll
pop
scas
xchg
xor
push
ds
inc
jl
cmc
test
fwait
cmp
sbb
test
out
addr16
pop
add
fldenv
pop
mov
mov
push
arpl
leave
sbb
inc
pxor
mov
rcrl
and
das
imul
fcoml
fs
mov
and
inc
mov
out
mov
sbb
mov
jl
mov
mov
pop
push
cmpsl
xlat
mov
mov
insb
pushf
add
jns
lods
js
or
insb
cmp
arpl
inc
jge
icebp
ss
cmp
inc
arpl
xorb
filds
jne
pusha
pop
or
xchg
mov
lock
dec
mov
insb
lahf
daa
inc
add
fs
cmp
dec
push
inc
add
dec
inc
mov
pop
sbbb
cmc
add
repz
mov
aaa
fsubp
push
mov
push
push
jbe
les
out
fwait
jecxz
dec
push
in
push
mov
les
fs
cmp
push
scas
or
cld
iret
jp
dec
push
adc
mov
and
add
mov
adc
neg
jmp
inc
pop
insb
pushf
std
andb
outsb
roll
mov
cmp
jmp
mov
repz
test
xor
addr16
shld
push
pop
sti
bound
or
test
or
and
lret
or
mov
lods
push
mov
dec
xchg
xchg
lods
adc
sbbl
push
in
cmp
push
jnp
push
popf
lds
sbb
out
or
hlt
jbe
ljmp
arpl
sub
outsl
cmp
aam
adc
push
dec
jb
iret
adc
pop
add
imul
push
scas
or
lods
adc
mov
dec
jmp
dec
je
push
sub
mov
sbb
fdivs
pop
push
das
mov
push
cmc
xchg
add
cmp
jbe
push
add
ret
sbb
or
outsb
in
in
lea
fstl
mov
ss
repz
inc
ja
jae
push
shrb
insl
daa
xchg
mov
cmpsb
mov
imul
test
inc
xchg
testb
adc
cmpsb
int
dec
cmpsb
sbb
roll
cmpsb
decl
fcmovb
lret
cmp
aaa
imul
pop
fwait
rcll
pop
jg
mov
cmp
rclb
or
adc
fisttps
pop
fmuls
jecxz
in
rorb
add
mov
outsl
lret
inc
test
mov
pop
pop
popa
xchg
mov
and
mov
inc
and
mov
aad
pushf
mov
or
mov
mov
jmp
cmp
and
fsubrs
pop
subl
loope
inc
jmp
sarl
or
cltd
outsl
mov
jne
ds
xchg
fnstsw
sbb
jl
pop
pop
lahf
mov
imul
adc
or
mov
repnz
adc
jne
das
push
nop
xor
mov
addb
aad
sti
mov
sbb
or
lods
jmp
leave
js
mov
lds
cmp
cmp
xlat
push
cltd
fbld
push
sbbl
inc
fwait
aad
cmp
mov
ja
aas
sub
inc
xchg
in
mov
cmc
mov
test
aam
mov
test
in
mov
enter
ffreep
xchg
out
arpl
mov
ret
fs
inc
sahf
fcoml
inc
sub
bound
stc
push
outsb
mov
lret
push
out
test
mov
andb
jmp
push
mov
jmp
fistpl
xchg
lcall
mov
pop
idivb
fisttpl
push
cmp
jo
push
or
jl
cs
add
lcall
mov
dec
jbe
daa
mov
xor
or
cmp
adc
test
dec
jle
pop
adc
mov
into
push
lret
xchg
cld
mov
mov
adc
popa
xchg
mov
xlat
data16
mov
fnstenv
cmpsb
fwait
hlt
mov
mov
test
xchg
xchg
shll
lahf
lods
rolb
add
xorl
jmp
push
push
hlt
aad
dec
test
and
pushf
repnz
inc
add
out
pop
enter
andb
shll
push
push
jg
stos
fidivs
popf
sbb
cmp
dec
sti
mov
ret
cmpsb
dec
push
cmp
inc
popa
in
cltd
movsl
sbb
fcomi
pop
xlat
sbb
dec
aaa
repnz
jge
adc
pop
xchg
and
sbb
jnp
sub
mov
mov
mov
mov
pop
cli
leave
cmp
adc
test
mov
jl
std
fsubs
aam
pop
rolb
push
insl
dec
mov
xchg
sahf
ffreep
cld
fcmovu
cmp
jne
or
mov
and
test
incl
mov
mov
dec
cmp
popl
sub
inc
jg
xorl
je
inc
fistl
dec
mov
dec
fildll
cmp
fdivs
enter
cmp
sahf
out
outsl
cmp
push
mov
jg
sbbb
xor
mov
out
xlat
pop
ljmp
cmp
popf
and
popa
xlat
adc
sbb
rolb
or
std
sub
jb
inc
mov
rclb
in
push
or
in
clc
call
pop
pop
test
dec
cmp
fisubrs
pop
ret
cmp
repz
outsb
imul
mov
mov
test
pop
stos
cld
lcall
leave
js
es
mov
mov
mov
enter
sahf
pop
cltd
stos
xchg
in
push
cmp
sahf
jl
subl
or
add
mov
lahf
adc
xchg
jo
sbb
jae
push
and
mov
imul
mov
jp
lahf
fimull
xor
push
aad
int
push
daa
inc
lock
push
lds
in
cmpsl
xchg
loope
cmpsl
pop
push
sub
ss
roll
cmp
out
dec
push
fidivs
fwait
dec
xor
lret
xchg
and
into
roll
movsb
jl
add
lea
pop
mov
pop
pop
and
jnp
imul
das
xchg
movsb
inc
push
es
mov
mov
sbb
jle
mov
test
pop
aam
push
aad
xor
jae
imul
arpl
jae
fnstcw
sti
cmp
xchg
rcll
leave
mov
sbbb
test
insl
add
and
sbb
lock
xlat
mov
jnp
sub
xchg
cmp
arpl
xchg
jle
clc
sub
ljmp
shlb
push
jp
pusha
out
cmp
xorl
jae
add
cli
sbbb
mov
jl
cli
cwtl
cmp
cmp
inc
and
nop
dec
adcw
adc
pop
sbb
imulb
ljmp
imul
mov
cmc
push
xchg
insl
imul
cmp
sbb
push
test
ret
pop
dec
mov
test
pop
push
stos
sbbl
aam
xchg
jnp
out
mov
mov
mov
push
pop
es
bound
addb
dec
test
in
sbb
clc
test
adc
aaa
add
mov
pop
enter
mov
pushf
mov
inc
xchg
scas
sbb
pop
daa
mov
scas
imul
adc
out
out
ds
dec
lahf
nop
fs
sbb
cmpsb
xor
repz
push
cmp
lret
push
pushf
or
jmp
inc
lret
fnstcw
xchg
aam
inc
test
or
push
movsl
jge
push
pop
lcall
fcoms
out
xchg
xor
jp
jl
sub
in
loope
mov
int3
lods
ljmp
or
int
hlt
and
sbb
mov
outsb
xchg
jns
pop
movsb
xor
jge
lcall
pop
adc
in
push
mov
adc
dec
icebp
cmp
and
mov
xchg
sahf
ds
fldcw
sarb
push
sbb
shrb
aas
mov
int
lds
inc
inc
jg
mov
or
dec
iret
mov
jle
sub
add
cld
dec
dec
stos
pop
mov
fsubr
div
int3
cmpsb
jns
adc
mov
adc
jmp
adc
ss
je
xor
fucomip
sub
xchg
dec
push
icebp
fcmove
andb
xchg
in
push
fnsave
pop
jbe
js
scas
push
xchg
add
cs
loope
jle
pushf
sub
mov
lds
loopne
aad
cmp
jae
xchg
out
sbb
into
or
push
fwait
dec
movsl
dec
push
out
jp
pop
cmpsb
fnsave
mov
movsl
jo
decl
loop
pop
ss
jmp
popf
mov
in
out
cli
pop
or
dec
mov
andb
pop
add
out
inc
add
cmp
aad
scas
sbb
sbb
xlat
or
fdivrs
cvttps2pi
jle
xchg
icebp
pop
mov
dec
lea
pop
pop
inc
xchg
mov
add
push
fnstenv
lret
ljmp
adc
dec
sub
rolb
or
or
pop
mov
out
popf
into
sbb
xor
mull
lcall
jo
stos
insl
adc
jl
in
movsb
xchg
mov
pusha
sub
cli
sahf
or
or
mov
inc
pop
or
aaa
or
std
imul
inc
dec
mov
mov
je
out
stos
mov
es
mov
dec
jo
inc
jl
dec
sub
dec
jbe
dec
iret
cmp
jp
push
dec
mov
mov
enter
mov
cmp
outsl
jb
insb
jo
add
mov
test
sub
gs
cli
jns
push
lods
std
jb
mov
out
out
sub
mov
lock
stos
rolb
dec
vlddqu
pop
jmp
daa
stos
mov
mov
sti
ret
or
xchg
mov
aas
xor
mov
inc
cli
xor
xchg
test
and
into
cmp
mov
mov
fsubrl
outsb
rolb
push
fnstenv
rcr
jmp
mov
dec
ljmp
daa
sbb
cmp
xor
daa
js
push
test
and
sub
roll
sbb
pop
mov
xchg
scas
add
mov
sbb
ret
mov
loop
adc
dec
mov
xor
xorps
adc
jne
jae
xchg
pop
loope
pop
and
sub
rclb
jge
dec
loop
mov
xor
mov
cmp
repnz
pop
leave
sbb
pop
pop
pushf
mov
pop
and
stos
push
loop
jo
daa
js
mov
push
or
dec
dec
and
mov
ret
xor
es
adc
or
nop
aaa
into
dec
lea
lret
xlat
mov
or
mov
mov
inc
das
sahf
fsubr
mov
les
leave
test
adc
roll
sub
mov
sahf
xchg
inc
inc
ja
jecxz
icebp
decb
push
sbb
mov
inc
mov
sti
mov
fimuls
add
subl
out
in
push
sub
shll
lods
shrl
aam
lock
push
push
sarl
pop
stos
jl
shlb
sub
popf
jecxz
pop
int3
and
pushf
je
pop
and
push
stc
and
or
inc
adcb
inc
cmp
jne
dec
dec
decl
mov
in
push
jg
add
cmp
fucomi
inc
push
cld
ficomps
jo
add
pop
push
insb
lock
ret
push
sub
xlat
sbb
mov
mov
das
test
pop
mov
jns
stos
test
pop
nopl
mov
lock
outsl
jae
insb
pushf
filds
mov
test
cmc
sti
movsl
stos
arpl
outsb
in
cwtl
push
shlb
sub
aad
and
add
outsl
jle
lods
xchg
scas
les
insb
scas
cmpsb
icebp
and
lds
into
mov
enter
int3
lret
clc
sbb
fistpl
mov
mov
loop
jns
add
cmp
scas
xchg
pop
xor
inc
sub
js
sbb
pop
and
or
cmp
cld
xchg
jae
pop
jbe
push
cli
push
cmpsl
and
popf
adc
sbb
sub
jnp
repnz
lods
jo
loope
inc
popa
pushf
dec
push
jmp
jne
pushf
fimuls
aas
adc
xor
push
or
lahf
jbe
dec
out
imul
jne
jg
jecxz
popa
in
aad
ret
pop
push
mov
test
andb
lahf
or
xchg
bound
test
or
sbb
hlt
fmull
dec
xchg
cmc
pop
dec
pop
repz
mov
les
fndisi(8087
stos
shlb
daa
xchg
movsb
fisubrl
clc
stc
dec
push
inc
inc
sbb
xor
rcl
leave
lretw
adc
push
sbb
clc
pop
add
cmp
stos
std
jp
fisttpl
inc
inc
inc
aam
ja
setbe
mov
push
std
mov
inc
cmp
mov
cmpl
adc
hlt
xor
sub
leave
xorl
dec
add
mov
loopne
test
mov
push
or
cwtl
mov
aaa
test
jne
sub
das
xor
popa
aaa
jae
dec
dec
mov
test
in
inc
xlat
sbb
jo
mov
lahf
addl
mov
ljmp
add
pusha
fwait
add
dec
dec
mov
pop
int
in
fisubl
shrb
mov
mov
ffreep
or
cmp
lods
jg
cmp
pusha
std
sub
imul
inc
lret
scas
je
add
jl
or
data16
fs
sub
lret
mov
lcall
inc
xchg
clc
pop
dec
popa
hlt
mov
jo
js
jg
test
mov
xchg
negb
dec
cltd
and
mov
cmp
cmp
jge
mov
in
sbb
repz
and
pop
and
in
repz
or
cwtl
pushf
mov
test
xchg
or
out
mov
push
mov
push
add
pop
dec
add
cmp
inc
lock
insl
lcall
fs
mov
pop
jns
or
imul
jno
jp
and
rcll
push
xlat
js
inc
es
repz
mov
movsl
test
pop
or
lret
adc
adc
nop
jl
xchg
addb
inc
push
pop
insl
push
bound
lods
subl
mov
repnz
and
shl
inc
cmpsl
adc
jne
cmc
mov
inc
cmp
mov
mov
fiaddl
lods
vfrczsd
mov
lods
push
fsubrl
lock
mov
jb
mov
jbe
insb
inc
test
push
xor
repnz
in
fwait
push
and
sub
ja
cli
jg
pop
mov
push
or
cmpb
pop
in
loop
mov
xor
dec
test
clc
xlat
jbe
jnp
out
mov
out
sub
insl
add
in
xchg
icebp
mov
jmp
cld
jle
mov
cs
std
nop
test
add
push
test
cmovns
aad
mov
sbb
sub
call
or
loope
add
cmpsb
mov
inc
dec
inc
test
cmp
cmp
stc
mov
lret
test
into
scas
and
push
test
aas
cs
or
shrb
outsb
mov
xor
aad
and
pushf
test
and
fisubrs
push
lock
es
pop
jb
das
or
jmp
fcmovb
add
and
adc
loopne
push
adc
mov
imul
fists
pop
mov
js
mov
dec
jo
sbb
pop
push
icebp
call
xchg
pop
mov
js
inc
xchg
push
add
cmp
xor
lcall
repnz
popf
and
ret
sub
fs
out
xchg
mov
jmp
inc
mov
cmp
mov
push
es
inc
dec
push
inc
push
mov
daa
mov
inc
inc
push
outsb
sub
stos
push
ret
ret
mov
adc
adc
xor
dec
inc
inc
xor
add
mov
xor
mov
aad
push
jns
or
out
mov
cltd
cmp
bound
pop
mov
jecxz
cmp
imul
daa
mov
or
data16
pop
pop
stos
add
int3
sbb
pop
lahf
movsl
sbb
inc
xlat
jns
jnp
xor
jecxz
sbb
arpl
dec
or
pop
stc
fstpt
pop
outsb
in
lods
push
arpl
jae
jp
mov
mov
cmp
xchg
xchg
inc
jbe
mov
pop
repz
jp
cmp
pop
push
mov
fcoml
pop
popa
pusha
imul
sarl
aaa
outsl
jbe
test
and
pop
jecxz
inc
mov
fisttps
fwait
ljmp
jl
outsb
mov
into
imul
pop
pop
dec
cmpsb
aas
in
mov
inc
fimuls
jbe
addr16
xlat
mov
lds
idivb
test
cmp
and
and
push
inc
das
mov
stos
xor
lahf
mov
adc
push
dec
inc
sub
adc
cmpsb
pop
insl
jnp
pop
sbb
inc
jb
push
shlb
dec
add
pop
add
decb
divb
dec
adc
cli
das
sar
xlat
js
xor
inc
lcall
sub
lock
cmpsl
ficoms
dec
out
dec
mov
int3
fs
mov
add
aas
lods
cmpsl
add
push
ljmp
xor
pop
xor
pusha
pusha
mov
je
sti
cwtl
test
pushf
mov
jb
mov
jmp
sahf
fmuls
movsl
and
sbb
imul
loope
add
push
xor
dec
fidivrl
or
sbb
jecxz,pn
mov
in
cmp
js
pop
mov
mov
inc
sbb
lods
int3
push
mov
dec
nop
sbb
push
mov
sbb
stc
lods
fistps
lea
orb
movsl
push
cld
jg
inc
xlat
dec
mov
icebp
cmp
scas
int3
mov
repz
mov
movsl
data16
xchg
mov
cwtl
fisubl
out
fdiv
cmpsl
scas
xchg
lods
sbb
xor
mov
mov
mov
jecxz
mov
scas
es
pushf
mov
mov
push
pop
addr16
dec
mov
mov
cltd
inc
and
test
into
pusha
in
das
pop
loop
scas
cmp
jnp
rolb
xor
mov
sub
in
mov
mov
ja
insb
mov
xor
sub
repz
das
xchg
mov
cmc
repz
dec
inc
add
icebp
sti
adc
push
les
fisubrs
scas
fisubl
mov
or
test
adc
mov
and
and
adc
inc
mov
inc
xor
jecxz
dec
mov
and
mov
and
scas
cld
test
in
pop
aas
sub
push
jp
stos
and
inc
out
push
mov
push
shll
adc
pcmpgtd
lock
int3
mov
jbe
hlt
lea
scas
das
sbb
push
out
push
inc
and
pop
test
dec
popf
aas
pop
push
loopne
aad
mov
sbbb
mov
jmp
xlat
loop
add
xor
cwtl
lods
popa
imul
shrl
aaa
lods
cmpsb
ljmp
cwtl
sub
cmp
bound
cmpsb
dec
add
push
mov
popa
mov
or
mov
xchg
iret
pop
leave
pop
adc
repz
inc
ret
jp
mov
orl
out
push
sbb
sub
mov
lods
leave
add
jne
xlat
dec
jo
add
pop
xor
mov
fcomps
mov
adc
es
add
arpl
or
hlt
cmc
stos
and
or
mov
dec
cmp
repz
repz
leave
outsb
lea
hlt
rcrl
jp
adc
or
pop
clc
mov
mov
pop
mov
mov
test
repnz
imul
dec
jns
xchg
jp
adc
mov
insb
or
inc
jp
add
ljmp
adc
push
jmp
dec
shrb
or
testb
xor
pop
mov
add
xchg
lret
push
stc
cmp
mov
repnz
mov
inc
fdivrs
mov
inc
and
subl
xlat
mov
cmp
inc
shlb
jp
and
icebp
mov
dec
push
inc
cwtl
mov
inc
push
dec
push
lahf
xchg
jnp
stc
mov
jmp
shll
mov
xor
out
cmpsb
mov
inc
loope
ljmp
jae
mov
mov
mov
jp
jg
dec
stos
pop
in
pushf
mov
mov
call
mov
jae
sbb
sub
cltd
adc
loop
xor
lock
int3
rcr
push
int3
cmp
pushf
hlt
jo
ljmp
sub
add
jmp
jo
mov
ret
jns
popa
shlb
or
mov
pop
adc
in
or
adcb
subb
push
aad
cmp
mov
fisubs
mov
outsb
pop
inc
or
arpl
inc
xor
les
loop
dec
xchg
xchg
movsl
out
jnp
push
xchg
mov
jno
mov
sti
mov
mov
into
jmp
lret
push
cmp
cwtl
in
cmp
or
subl
mov
shrb
popf
cmpsb
and
lcall
dec
in
inc
jge
aaa
xor
iret
cs
dec
push
ficoms
mov
movsl
mov
xchg
in
mov
loop
ds
xchg
adc
and
dec
test
test
and
cld
push
bound
xchg
loop
pop
out
mov
xchg
mov
push
dec
aam
lock
sbb
out
mov
xchg
sub
xor
int3
jnp
push
jne
mov
dec
fcmovbe
xchg
loopne
adc
out
lea
sub
pop
push
dec
lea
mov
or
sub
insb
sub
movsl
sub
jp
adc
loopne
jge
fsubs
imul
xchg
dec
lahf
mov
scas
out
dec
push
sub
mov
repz
mov
imul
cmc
sti
pcmpgtd
add
loop
dec
aas
or
inc
shll
cmp
out
je
inc
mov
xchg
ljmp
jmp
cmp
mov
arpl
daa
xchg
push
jns
je
adc
mov
stos
sbbb
jne
xlat
push
cmp
jbe
xlat
cltd
jo
in
lcall
and
jae
icebp
rclb
popa
xor
inc
pop
adcl
or
lret
popf
push
mov
iret
jae
mov
movsb
pushf
in
and
xor
sbb
movsb
jns
pop
push
xchg
fdivl
fnsave
mov
pop
sub
push
fs
jae
fbstp
movsl
lret
xor
dec
stos
sbb
clc
inc
xor
das
test
adc
pop
add
fwait
cmpsb
dec
clc
cmpsl
cmc
push
rep
mov
sub
data16
mov
mov
ds
movb
xor
jmp
out
out
pop
mov
mov
dec
lods
pop
sbb
cmpsb
popf
add
fwait
data16
pop
mov
in
sub
xchg
xlat
sub
add
stos
adc
lret
aam
repz
icebp
pop
repz
loopne
xchg
out
cmp
jp
fisubrs
cs
xlat
repz
fstl
leave
sbb
fucom
js
fstpl
je
jecxz
out
sbb
in
lock
add
dec
shll
dec
pop
fs
in
pop
adc
pop
das
or
push
adcl
add
insb
cmp
xchg
repz
mov
mov
mov
stos
mov
test
adc
stc
cltd
mov
or
push
or
outsl
fstpt
insl
enter
adc
sub
or
sbbl
add
jo
nop
jecxz
imul
sahf
dec
cmc
iret
pop
jbe
lcall
jecxz
mov
adc
xchg
mov
adc
int
push
push
stos
fistps
icebp
ds
sbb
mov
pause
incb
or
mov
stos
sub
or
icebp
jo
iret
dec
gs
es
or
loopne
adc
repz
pushf
cmp
add
cmp
gs
pusha
ljmp
ja
ret
lods
push
push
adc
outsl
push
out
je
dec
mov
mov
xchg
add
jae
into
jb
daa
test
daa
sbb
gs
and
clc
push
dec
add
outsl
imul
stos
mov
jo
jnp
les
inc
pusha
push
pop
mov
jge
test
pop
mov
pop
int3
hlt
dec
sub
repz
cmp
jo
sub
ss
or
inc
int3
loopne
xchg
pop
dec
and
lods
addr16
mov
jnp
rolb
adc
loopne
fnstcw
sbb
cmc
add
cmc
sbb
rcrl
add
jbe
lret
fdivr
mov
inc
out
stc
xchg
jl
rdpmc
jne
in
mov
je
inc
out
test
jne
int3
jno
or
adc
push
stc
pop
or
fstl
adc
ret
sub
in
xchg
xchg
inc
dec
jnp
fwait
decl
test
xchg
mov
notb
mov
adc
stos
ja
scas
jp
clc
rcll
jp
lds
jg
ss
aad
xchg
dec
mov
or
aad
xorb
jnp
mov
je
cwtl
orl
xchg
mov
ja
mov
aas
and
jle
mov
and
or
cwtl
push
or
jnp
dec
xchg
xchg
cmp
or
jle
and
mov
dec
lret
loope
mov
shr
cld
rol
das
pop
inc
mov
fiadds
js
test
ret
pop
push
jle
fbld
xchg
sti
shlb
cmp
call
stc
call
test
dec
mov
cwtl
movsb
mov
hlt
jae
inc
in
mov
aas
leave
dec
mov
jmp
into
push
jne
sar
popf
jns
ds
xorb
push
sub
roll
sub
mov
std
push
xor
dec
push
mov
mov
dec
sbb
inc
repz
lods
jecxz
mov
push
ret
js
pop
and
pop
movl
pop
sbb
sub
aad
clc
enter
in
inc
loopne
pop
insl
call
stos
mov
mov
in
scas
and
push
and
cmp
mov
pcmpgtw
mov
xor
add
mov
sbbl
mov
or
ret
push
lock
fs
pop
pop
mov
pusha
pop
bound
mov
xchg
jae
inc
subb
jnp
ds
sub
fimull
decb
cli
sbb
es
mov
mov
sti
push
mov
orl
inc
dec
pmaxsw
int
movsl
fwait
mov
dec
ss
ret
cmpsb
fisubs
xor
inc
xor
mulb
xchg
cmp
ja
fisubs
insb
xor
mov
js
pop
cltd
dec
lret
stc
repnz
push
jge
mov
adc
pusha
out
mov
xchg
xchg
adc
gs
es
fisttps
adc
aaa
xor
pop
insb
out
inc
jb
jne
shlb
push
xor
jp
push
dec
das
jmp
cwtl
mov
sub
into
in
fwait
loope
andb
leave
outsl
sbb
cmp
inc
cmp
lcall
lods
sub
enter
lods
out
jmp
in
xchg
js
push
hlt
mov
dec
hlt
and
or
loope
push
dec
mov
and
mov
jne
mov
jo
push
sub
mov
push
adc
adc
popa
insb
xlat
mov
cli
mov
push
rorl
xor
or
int3
mov
dec
leave
sub
pop
xor
adc
xchg
shlb
repnz
negl
push
inc
loopne
add
insb
insl
or
or
or
daa
inc
out
loopne
mov
xor
cld
xlat
and
aam
dec
jb
sub
les
fstps
xchg
xor
dec
test
sbb
add
in
mov
and
push
xchg
mov
inc
cwtl
mov
outsb
invd
dec
fstpl
ss
loopne
add
fldenv
mov
cmp
mov
test
xchg
adc
add
and
in
and
test
testb
jnp
pushf
xchg
xor
push
shlb
push
mov
jl
xchg
jno
jne
inc
jae
jl
mov
mov
cld
push
jecxz
xchg
ret
faddl
pusha
or
xchg
cmpsl
out
jle
and
add
stc
dec
inc
sub
add
mov
loopne
ljmp
and
cld
int3
push
cmp
test
mov
push
add
mov
sti
div
jne
ljmp
shrb
aad
aam
in
ds
dec
jge
xor
clc
mov
sub
push
adc
add
xchg
sub
add
push
xor
imull
or
mov
push
dec
out
adc
sub
daa
fwait
xor
out
ja
mov
pop
popa
xor
mov
shll
xor
nop
cmpsb
out
push
test
sbb
iret
mov
xchg
and
out
jge
dec
in
jno
repnz
movsb
sbb
xlat
shrb
test
stos
rclb
push
iret
in
and
jbe
push
or
in
icebp
sbb
out
xorb
mov
pop
inc
sahf
fimuls
enterw
mov
push
xchg
mov
enter
mov
push
or
mov
leave
xor
shlb
sbb
pop
popf
jnp
test
stos
rcrb
fidivrs
xor
mov
stos
mov
vminsd
lret
adc
inc
mov
sahf
dec
push
cmp
rclb
ljmp
call
mov
outsl
movsb
jmp
adc
push
out
mov
xor
mov
fistl
jg
cmp
or
pushl
push
fisubs
cld
sub
xor
jmp
sbb
sbb
rcr
xchg
mov
stc
repnz
mov
cmpl
xchg
cmp
add
aad
ret
xor
clc
dec
imul
cs
icebp
lods
jnp
push
rorb
sahf
mov
xchg
pushf
jp
aaa
push
cmp
aaa
mov
fistpll
test
insb
mov
insb
mov
sarb
lret
lds
mov
cli
pop
xchg
sub
xchg
dec
mov
xor
push
cmpsb
cmpb
addl
rcll
fwait
ret
jno
push
leave
popa
fisubrl
add
adc
push
cmp
push
mov
fstps
jnp
in
fiadds
es
push
jl
out
add
xor
fbld
lea
ret
mov
dec
call
mov
lods
pop
lock
xchg
jl
aaa
mov
jb
pop
mov
lcall
ljmp
ljmp
pop
sbb
lcall
mov
push
sub
ds
int
jle
repnz
inc
stos
mov
repnz
popf
mov
test
or
cmp
sahf
push
sbb
imulb
xor
js
cld
jnp
popa
jl
arpl
xor
mov
cmp
test
rcll
sub
lea
add
in
mov
cmpb
ds
stos
dec
fldt
popa
cmp
jle
pusha
adc
data16
jmp
shl
jnp
imul
jnp
dec
jge
fwait
imul
loope
mov
hlt
mov
cmp
stc
push
hlt
adc
fs
pop
in
add
jmp
cmp
push
lret
sbb
or
rclb
enter
jp
inc
cld
insl
iret
pop
inc
adc
and
adc
rclb
inc
mov
mov
xor
scas
enter
or
test
mov
mov
cwtl
push
mov
loope
cmc
mov
pop
in
popf
ret
add
fadds
xchg
mov
fisubrs
lods
fstps
push
push
rcrb
fstp
or
pusha
add
shrb
add
and
cmp
insb
nop
add
rdpmc
aas
loope
dec
orl
or
mov
fcmovnu
pop
xor
cmp
lea
sti
push
push
ss
das
inc
mov
push
adc
jmp
jl
mov
pop
mov
inc
or
iret
inc
and
repz
xor
xor
pop
jns
lds
loope
inc
dec
daa
and
imul
adc
jne
stos
std
jne
xor
repnz
ja
and
mov
inc
inc
pop
inc
cmc
jmp
std
lea
dec
js
xchg
scas
push
cwtl
imul
ficoms
mov
xor
jne
mov
add
cli
fists
adc
pop
stos
mov
push
insb
sti
sbb
daa
cmpb
sbb
popf
xchg
adc
ds
cli
mov
jne
cltd
mov
mov
aad
andl
pop
cmp
cltd
ljmp
jg
mov
cltd
and
into
cli
mov
test
add
movsb
test
xor
lahf
test
dec
mov
lea
xor
jns
outsl
fists
push
mov
lods
jp
cli
pop
mov
mov
sub
adc
pop
mov
aas
xor
mov
mov
inc
xlat
arpl
sbb
clc
lcall
inc
jne
stos
mov
jmp
iret
dec
fwait
mov
inc
inc
adc
xor
pop
push
sbbl
lods
lods
xchg
fbld
mov
adc
jno
sbb
xchg
lock
cli
subl
mov
inc
cmc
outsb
aam
add
adc
push
pop
or
jmp
pushf
dec
mov
dec
mov
pusha
cmp
xor
cli
pop
cwtl
add
fdivrs
ljmp
sbb
pusha
mov
in
inc
inc
pop
sub
gs
out
push
add
loope
adc
pop
push
add
add
pop
sar
pop
repz
inc
jp
stos
sub
fisubrs
aaa
fdivr
roll
push
or
ljmp
sub
dec
pop
orb
pop
adc
and
dec
xor
xchg
sbb
mov
ja
lods
repz
pop
add
adc
movsl
dec
adc
call
and
cmp
xorb
pop
push
ja
push
jmp
xchg
pop
lea
jle
iret
test
mov
int3
cltd
out
push
dec
fidivrs
sbb
mov
or
gs
sbb
in
and
sbb
lcall
mov
mov
mov
shl
push
xor
push
and
in
adc
push
mov
popa
xor
xchg
fisubrl
ds
mov
mov
shrb
push
mov
jecxz
and
popf
mov
mov
movsb
sub
xor
xor
sub
mov
ss
dec
addr16
xor
add
add
fsubrs
repz
mov
fbld
shr
stc
mov
xor
lcall
pop
sub
sbb
add
pop
in
cwtl
rcr
pop
fidivrl
inc
mov
adc
cmp
mov
xchg
outsb
rorb
xchg
pop
xor
int
inc
loopne
push
inc
sub
mov
pop
jge
nop
xor
dec
iret
push
add
or
dec
or
lret
mov
ja
push
jnp
clc
lds
cmp
mov
jl
leave
repnz
cli
fcom
adc
jo
xchg
jne
sbb
test
adcl
add
dec
inc
cmp
add
pop
cmp
jmp
ss
inc
dec
adc
call
pushf
inc
push
xorl
push
call
pop
mov
pop
std
pop
jge
fwait
pop
and
pop
adc
ja
mov
outsb
je
add
mov
xor
adc
ds
loopne
pushf
cli
inc
cmpsl
icebp
out
mov
ljmp
iret
cld
push
push
mov
xchg
push
aas
sbb
ret
or
data16
ds
pop
test
cltd
gs
js
cmp
jg
pop
pop
xchg
es
xor
cmc
clc
xlat
mov
fcomi
cmp
mov
icebp
mov
add
inc
pushf
leave
out
sub
scas
aas
imul
into
push
mov
pop
mov
decb
mov
ja
movsb
dec
sub
and
push
ja
push
fsubl
lock
mov
hlt
xor
mov
mov
pusha
mov
jg
pusha
push
xchg
cltd
adc
hlt
mov
dec
sbb
and
fcom
sbb
and
test
push
rorb
std
inc
pusha
ficompl
pop
fldl
les
clc
movsl
lret
dec
add
std
fsubl
sbb
xor
xlat
and
push
cmp
xchg
add
shll
test
cmp
ret
push
cmpl
je
cmpsl
enter
aaa
sahf
es
mov
dec
add
test
imul
lret
mov
jb
ret
rcrb
xchg
push
lret
scas
fnstcw
cltd
popf
imul
pushf
push
sub
xchg
sub
int3
in
jb
or
gs
fldenv
pop
scas
cld
mov
xchg
stos
clc
call
repz
cmp
xor
pop
xchg
imul
out
push
add
cwtl
pop
jne
sbb
fldln2
dec
mov
cli
push
in
xor
jne
mov
add
lds
sub
imul
sub
ja
xchg
add
movsb
stos
movsl
imul
or
cmp
lds
ja
sub
das
add
fcmovu
sahf
mulb
adc
pop
xchg
dec
daa
stos
mul
notl
jns
xchg
shll
in
fwait
add
fs
xor
inc
jmp
inc
ss
jecxz
rolb
lea
shlb
lret
add
mov
sbbb
or
stc
inc
imul
repz
mov
fsubrl
fwait
imul
loopne
push
dec
inc
aam
stos
inc
ja
add
iret
jbe
scas
or
pusha
xchg
xchg
cwtl
shlb
sbb
stos
pop
pusha
daa
jecxz
lret
movsl
cli
fs
push
pop
pop
mov
jo
and
mov
mov
or
mov
jne
rcrb
outsb
mov
int3
push
movsl
shll
cmp
and
lock
mov
rclb
push
xchg
testb
in
dec
or
and
sti
cmp
cwtl
pop
cmp
outsb
or
adc
adc
mov
mov
testl
popf
lahf
leave
aad
xor
popa
and
xlat
lods
cmp
decb
fstps
or
out
pop
clc
push
jle
xorb
push
add
xchg
cmpsl
xchg
xchg
mov
stos
sti
fstpl
mov
push
push
sub
push
push
push
lcall
xor
call
mov
sbb
fwait
cmp
sbb
in
and
incb
fisttpl
lea
or
push
pop
aaa
jb
pop
into
and
adc
inc
shl
inc
push
shlb
xor
fldenv
das
xchg
sbb
push
mov
xchg
roll
ret
pop
pop
mov
fs
ret
leave
imul
popl
pop
fsubrs
dec
and
xchg
fiaddl
mov
fidivrs
dec
lret
out
cmpsb
lods
shufps
and
negl
cs
add
jle
xchg
inc
cwtl
xor
call
sbb
shl
decl
insb
imul
jmp
jae
and
inc
pop
rcrb
mov
stos
popa
cmp
stc
outsl
adc
jge
sub
sub
loopne
ds
xchg
mov
imul
push
nop
movsl
lcall
xor
push
xchg
lods
jne
jnp
xchg
mov
imul
popa
clc
stc
aas
daa
xchg
mov
shrb
xor
inc
mov
xchg
icebp
pop
jmp
test
ja
repz
aaa
inc
and
adc
sub
fimuls
xor
or
fsubrl
shlb
aas
xchg
test
fsubl
xchg
mov
mov
mov
push
das
negl
ljmp
lods
lret
push
les
fs
xor
or
imul
aaa
mov
add
cmpsl
cmp
cmp
jl
int3
mov
pop
std
insl
xchg
stos
scas
mov
mov
mov
mov
imul
sbb
adc
int3
adc
dec
jecxz
cmpb
mov
push
cs
nop
mov
or
lcall
xor
adc
sahf
or
jp
jo
aas
inc
cmp
cmc
mov
dec
fsub
xchg
call
arpl
hlt
mov
jno
fistps
push
mov
dec
mov
xchg
jle
pushf
mov
test
clc
adc
divb
inc
gs
bound
ljmp
outsl
je
xchg
in
cmpsb
or
hlt
shrb
das
pop
cld
jmp
mov
xchg
xor
or
pusha
mov
dec
and
adc
push
cwtl
dec
lea
jbe
pop
cld
pop
and
push
xchg
rcrl
pop
bound
in
lods
sub
cmpl
mov
lret
sbb
mov
add
sahf
iret
xor
xchg
push
mov
enter
mov
movsb
stos
add
call
mov
ljmp
adc
ljmp
call
stos
jecxz
sub
arpl
ljmp
inc
popa
pop
ret
sbb
aad
xchg
lds
mov
les
sbb
pop
add
sbb
scas
insb
and
imul
daa
mov
add
mov
inc
pop
mov
jp
loop
das
ficomps
loope
mov
xchg
cwtl
mov
mov
push
xchg
leave
fsubl
push
ljmp
mov
out
fldl
mov
sub
mov
and
mov
add
dec
movsb
in
cmc
fxtract
and
and
into
lret
sbb
fnsave
nop
dec
rcll
push
je
sub
add
movsb
pop
icebp
and
cmp
ret
and
std
popf
and
sbb
push
rcr
bound
and
jno
and
push
cwtl
sub
js
dec
adc
out
dec
subl
daa
mov
pop
fwait
data16
xor
adc
test
adc
sbb
aaa
cli
mov
lret
xchg
jae
or
shlb
mov
push
sbb
sbb
and
and
xchg
stos
inc
dec
daa
sub
aad
or
ljmp
cld
mov
dec
in
icebp
dec
sti
pop
dec
push
insl
orb
jae
stc
lds
lods
sub
mov
shll
mov
aas
aas
push
shrb
mov
cld
adc
stc
mov
cmc
lcall
dec
sub
mov
mov
fists
sahf
divb
pop
mov
sub
or
adc
and
popa
jecxz
shrb
movsb
daa
jns
lea
out
and
mov
in
mov
pop
push
shl
inc
xchg
xchg
adc
push
cmovp
jbe
xor
in
adc
cltd
sub
es
sub
xchg
aaa
mov
shll
mov
lds
insb
xchg
xor
in
mov
cmp
rcll
outsb
xlat
enter
inc
sbbb
cltd
push
fsubr
insb
fistpl
int
and
adc
movsl
data16
adc
push
push
add
popf
jb
inc
mov
loopne
data16
popa
mov
or
jecxz
popf
mov
inc
mov
shlb
testl
inc
xchg
adc
xchg
fsub
loop
lret
rclb
push
mov
pushf
ja
cmp
and
adc
lret
pop
jp
and
aaa
mov
out
mov
hlt
inc
jge
mov
and
sahf
push
ret
mov
mov
jg
scas
dec
pop
sahf
cmp
aad
in
mov
inc
mov
xchg
out
aas
mov
cwtl
movsl
mov
xor
adc
mov
iret
movsb
jb
es
xchg
jo
sub
push
mov
xchg
fdivrl
fldt
leave
shr
sub
cmpsb
mov
sti
inc
or
test
sbb
mov
jae
out
out
cmpsl
bound
or
and
ja
jbe
fsubl
cmc
pop
lods
adc
jb
lods
adc
out
out
xchg
fs
xchg
pop
lods
jl
sbbb
in
sbb
add
fs
lret
dec
jno
or
aaa
mov
inc
add
loop
mov
pop
dec
hlt
repnz
je
int
jmp
or
pusha
push
jb
xchg
pop
sbb
stc
repnz
push
cld
and
cmp
sbb
insl
mov
mov
push
xor
rolb
xchg
movsb
clc
stos
fcmovu
scas
cmp
js
sbb
and
mov
add
iret
lahf
stos
movsl
or
xchg
repnz
mov
push
js
outsb
ja
daa
mov
movsl
call
cmp
ret
jae
and
into
adc
pop
xchg
xchg
add
and
insl
inc
cmpsl
sub
jp
jae
repnz
adc
push
dec
mov
cmp
push
push
xchg
dec
sub
arpl
lcall
sub
jo
cmp
dec
cmpsb
mov
adc
mov
mov
push
mov
xchg
andb
in
mov
sbb
sub
lea
xchg
xchg
jae
mov
mov
ret
jle
mov
cwtl
lock
sub
sub
adc
mov
jge
xor
mov
sti
out
test
push
jno
mov
sti
and
ret
add
repz
xor
fldt
sub
dec
push
dec
mov
and
mov
pop
je
mov
inc
inc
mov
lret
leave
es
inc
test
popa
neg
pushf
movl
rcrl
dec
fisttpll
cmc
fisubl
je
hlt
aam
out
mov
cmp
mov
lfs
add
mov
lods
and
push
pop
inc
icebp
les
push
xchg
sub
hlt
mov
sbb
inc
dec
lods
jno
jae
pusha
jns
fwait
sub
in
decl
cmpsl
push
lock
popf
cmp
pop
test
mov
jnp
mov
dec
push
bound
stos
adc
mov
rclb
xor
jg
mov
cmp
mov
stc
adc
mov
jecxz
es
xlat
sbb
jp
push
scas
rcll
leave
ss
mov
rolb
cmpsb
mov
inc
push
in
in
cmp
mov
clc
sarb
idiv
mov
sub
sbb
pop
xlat
dec
mov
mov
mov
movsb
mov
or
pusha
jle
ss
jo
inc
lret
cltd
cmc
mov
jne
jnp
adc
ljmp
lods
ret
mov
jg
mov
adc
dec
mov
mov
movsl
and
push
js
enter
sub
mov
xchg
xor
rorb
pop
lcall
sbb
movsb
aad
out
jo
pop
dec
iret
xor
mov
push
imul
fsubs
hlt
sbb
xchg
aaa
jecxz
jne,pt
mov
lods
or
test
pop
mov
cmp
sbb
dec
xchg
aas
xor
mov
movsl
test
push
mov
lods
cmpsl
xor
clc
dec
xchg
sub
push
stos
lods
js
adc
dec
les
stos
mov
aas
pop
push
sub
sbbl
int
mov
nop
pop
repnz
dec
mov
sti
mov
jnp
xchg
mov
and
es
push
std
jns
pop
cltd
xor
pop
jmp
inc
icebp
xchg
xchg
dec
andl
cmp
push
out
dec
xchg
repz
jne
dec
xchg
out
adcl
xchg
or
jp
popa
sub
outsl
sub
mov
or
xchg
into
pushf
clc
jmp
sbb
add
cmp
rorb
movsl
sub
push
jno
and
jae
dec
mov
or
insl
pushf
fadds
push
fisubl
sub
inc
add
fyl2x
mov
mov
xchg
xchg
xchg
dec
sub
push
xchg
jle
bound
xor
mov
mov
bound
or
fsub
stos
pop
sub
cli
popa
xor
jge
adc
mov
xchg
aas
clc
pop
sub
adc
mov
and
or
js
arpl
sahf
mov
xchg
in
in
dec
lcall
test
aaa
inc
mov
lcall
mov
xlat
popa
mov
pop
js
or
mov
mov
xchg
shrb
lds
sbb
mov
arpl
or
shlb
sbb
ret
leave
sub
rorl
std
cltd
jmp
and
sbbl
call
addr16
int3
test
pusha
xlat
lcall
push
push
add
or
fcmovbe
rep
adc
sub
jle
loopne
stos
cmp
addr16
or
insl
movsl
xor
and
push
movsl
mov
pop
dec
iret
cmp
add
sbb
popf
movsl
out
int3
je
cmp
push
jg
sbb
pushf
popf
sub
stc
jbe
push
inc
test
aaa
icebp
movsb
xlat
rol
gs
xchg
fistl
mov
push
pop
jne
pusha
xchg
int3
jmp
inc
mov
add
in
adc
fmuls
xchg
pop
mov
and
push
outsb
or
dec
lret
sbb
fiadds
inc
fidivs
loop
mov
adc
in
lds
jg
jmp
sub
cmp
mov
test
mov
cmp
jmp
adc
sbb
xchg
push
das
mov
and
adc
pop
test
dec
stos
shll
mov
insb
mov
pop
pop
pop
sub
insl
cmp
mov
stos
bound
and
imul
lds
incb
xchg
xchg
shll
xor
mov
outsb
add
push
jo
xor
adc
cmp
sahf
mov
in
adc
xchg
movsl
aad
lcall
pop
stos
mov
xor
imul
call
hlt
jae
icebp
mov
call
sbb
push
aaa
sbb
lahf
cld
ss
jg
xor
adcl
sbb
rcrl
mov
mov
cmpsl
je
cmp
dec
mov
addr16
aam
dec
dec
aam
leave
mov
pop
adc
sub
jae
jnp
call
pop
or
mov
sub
add
cltd
push
push
lahf
adcb
dec
dec
xchg
lods
sarb
ds
inc
pusha
movb
movsb
push
xchg
and
pop
loope
aaa
mov
arpl
push
dec
sbb
mov
xchg
fwait
jle
cld
sbb
push
push
mov
and
ret
jg
cmc
dec
fucomip
fcomps
aam
cmp
out
xchg
add
negb
push
dec
cmp
dec
push
shrb
shrb
inc
cli
imul
push
dec
int3
into
jl
jnp
pop
in
insb
popa
pop
mov
mov
daa
push
push
imul
mov
pop
cmc
outsb
sbb
mov
lds
pop
in
cmp
stc
imul
iret
lods
add
sbb
out
cmp
subb
inc
mov
gs
fs
rorl
cmp
test
std
lea
cwtl
pop
test
adc
jmp
lret
xchg
xor
pop
fcoms
lock
cmpsl
or
add
dec
iret
gs
fsubl
mov
fidivrs
shll
lret
pop
ret
pop
addr16
inc
test
xlat
nop
add
mov
and
out
hlt
mov
push
xor
push
sub
fs
mov
faddl
adc
push
sbb
in
repz
sbbl
fisttpl
add
mov
xlat
sarl
mov
xor
pushf
mov
cmp
icebp
jge
imul
xchg
sub
mov
push
sahf
testl
mov
sub
divb
mov
pop
data16
or
xor
ss
xor
test
insl
das
adc
jg
scas
call
or
scas
xlat
or
imul
xchg
cmp
cmp
lahf
mov
shrl
push
sub
std
mov
lods
lds
jge
aam
in
arpl
sahf
pop
add
stos
push
insb
cmp
mov
pop
pop
or
cbtw
jmp
mov
lret
addl
in
push
cmpsl
leave
mov
hlt
mov
stc
sbb
add
fcompl
in
repz
sub
jnp
cwtl
roll
shlb
cwtl
dec
pop
push
mov
and
sub
mov
movsb
mov
jae
rclb
arpl
sub
leave
mov
scas
jl
in
jmp
mov
gs
or
popa
jae
cmp
dec
cmp
mov
ja
in
sbb
jmp
xchg
pop
in
repz
pop
xchg
data16
scas
in
sub
add
xor
ljmp
push
inc
pop
clc
dec
popa
adc
adc
clc
shl
cmp
jno
scas
es
and
cli
ret
dec
daa
dec
stos
dec
xchg
jno
fstl
dec
repz
popf
mov
push
adc
add
and
xor
je
push
mov
popf
addb
push
rcrb
mov
loope
daa
push
lods
mov
add
push
sbb
jecxz
or
sub
out
fxch
or
call
stos
mov
cli
loop
iret
fnstsw
inc
adc
sbb
cltd
add
xor
repz
hlt
mov
loop
imull
cmp
pop
mov
mov
sbb
icebp
inc
push
jo
cmpsb
lahf
jge
pop
repnz
cmp
mov
or
fs
lahf
xchg
aas
jl
inc
fsubs
sbb
pop
xor
cmp
js
icebp
jns
push
push
cmp
mov
ja
inc
or
mov
lea
leave
mov
aas
xor
inc
cmovg
or
push
mov
pop
mov
insb
push
lods
push
outsl
mov
inc
push
int3
imul
xor
xor
cmp
or
jle
inc
or
xor
dec
iret
test
loope
xlat
push
pop
mov
sub
sub
sbb
xor
pop
jle
into
aaa
or
push
dec
jmp
push
rcrl
sahf
xlat
out
int
lahf
sbb
mov
mov
fwait
add
jbe
js
sub
dec
divl
push
cmp
cmp
sub
mov
mov
and
sub
lahf
dec
scas
cli
roll
repz
aaa
push
lea
les
aaa
inc
int3
pop
lret
jno
dec
push
add
jecxz
cld
pop
adc
adcb
or
mov
push
cmp
cmp
inc
scas
ljmp
dec
ss
fcmovnb
and
pop
arpl
mov
inc
andb
add
xor
jb
mov
add
je
into
lret
ljmp
mov
movsl
mov
pop
frstor
inc
les
sti
pop
sub
lds
sbb
or
and
outsl
ljmp
andb
es
addr16
inc
out
dec
mov
loope
test
enter
push
stos
mov
test
imul
jb
or
lahf
push
pop
xor
pop
rclb
dec
add
sti
jo
cmpl
xchg
cld
sub
sbb
dec
scas
push
jge
pop
out
inc
mov
and
decb
ja
and
inc
js
ficomps
inc
jo
xor
dec
lock
scas
pop
xor
pop
pop
sbb
xor
scas
lcall
je
cs
sub
cmp
shl
clc
dec
pop
jnp
inc
sub
jp
mov
pushf
mov
fdivrl
ja
mov
jns
popf
fwait
dec
cwtl
adc
push
jnp
mov
popf
int3
call
add
repnz
movsb
push
mov
push
clc
and
or
popf
mov
jno
mov
mov
pushf
pop
jg
pop
or
je
neg
mov
ret
xor
adc
pusha
pushl
xchg
jnp
sbb
adc
inc
stos
push
cli
movsl
rcrl
cmp
loopne
lock
insl
pop
imul
daa
xchg
mov
fcoms
adc
fs
repnz
test
fistl
testl
lea
sbb
sti
adc
xchg
sub
dec
mov
stos
fistpll
dec
into
mov
sti
pop
icebp
mov
adc
popa
and
inc
xor
test
enter
push
sahf
mov
mov
add
sbb
lcall
in
mov
scas
jo
push
xchg
sbb
sub
dec
xor
inc
mov
mov
int
add
mov
and
pop
cmp
push
jge
in
repz
icebp
lea
and
xchg
inc
pop
es
mov
daa
lret
adc
pushf
bound
js
in
imul
hlt
cmpsb
add
ljmp
mov
rcrb
out
xchg
sub
mov
mov
jmp
aas
mov
std
out
xor
fisubrl
test
sbb
popa
add
cmp
sbb
outsb
jmp
sahf
filds
cli
addr16
pop
in
lret
jae
sti
or
adc
cmp
cld
insl
push
mov
rorb
sub
orl
insb
add
sub
or
jne
int
mov
pop
sub
je
xchg
xchg
ficomps
loop
cmpsl
dec
mov
inc
sbbb
and
dec
mov
xchg
std
jmp
cmp
sarl
movsl
insb
movaps
xor
loop
ret
stos
js
insb
cmpsb
cmp
sar
pop
nop
test
shlb
jmp
movsb
mov
cltd
stc
flds
movsl
pop
cwtl
pop
pop
pop
fwait
mov
mov
shrb
add
repnz
es
test
rcll
sti
sub
fsub
ret
pop
mov
ret
pop
cmpsb
adc
jle
jecxz
mov
jnp
in
jno
ret
mov
icebp
jl
xchg
les
jbe
bound
push
xchg
jae
dec
fnstenv
jmp
int3
shll
int
pop
sbb
push
shrb
mov
test
dec
mov
rclb
sbbl
jle
fwait
imul
xchg
ljmp
mov
push
pop
pop
mov
lcall
outsl
out
xorl
stos
adc
mov
mov
or
sbb
dec
or
and
sub
xor
dec
jne
movsl
popa
push
ljmp
adc
bound
and
or
or
fsubl
sub
popa
stc
mov
pop
into
xchg
js
or
sbbl
and
aas
test
and
xor
ja
xlat
adc
das
jno
icebp
test
pop
in
jbe
in
outsb
popa
push
enter
dec
xor
mov
cmpsb
cmpsl
movsb
pop
cmp
pop
mov
add
js
imul
stc
adc
mov
jl,pn
xorl
cld
lcall
mov
push
test
push
and
jb
mov
push
popl
jg
or
pop
sbb
andl
sbb
mov
std
stos
hlt
inc
scas
into
pushf
fcoms
cld
dec
addb
fwait
mov
adc
gs
clc
insl
pop
testb
out
pushf
mov
pop
cld
inc
jbe
inc
inc
fidivs
push
add
mov
xor
sbb
imul
stos
dec
mov
scas
adc
popf
sbb
cltd
inc
push
jmp
gs
xor
loop
xchg
push
mov
rcrb
aad
lods
sbb
mov
push
shr
mov
and
mov
cmp
mov
mov
cmp
push
pop
loop
cmp
xor
inc
adc
rol
insl
iret
enter
ss
adc
push
push
clc
cs
xchg
lea
inc
mov
sti
popa
pop
push
mulb
mov
xchg
jl
xor
xchg
lahf
lret
pop
xor
fs
cld
fdiv
mov
lret
shlb
push
add
push
fbstp
or
or
mov
or
vcvtpd2psy
les
inc
sbb
cli
in
outsl
or
add
cmp
dec
rorb
or
clc
cmpsl
int
test
mov
mov
popa
mov
out
cld
enter
sbbb
repnz
sbb
scas
dec
int3
fists
cwtl
mov
inc
pusha
mov
xorb
scas
and
or
iret
ljmp
jae
or
cmp
popa
dec
scas
pusha
lret
pop
sub
cwtl
pop
in
or
popf
shl
jns
stos
push
and
push
stos
jg
inc
or
xchg
mov
popf
dec
imul
repz
rclb
cwtl
sub
js
adc
mov
imul
call
scas
test
fistps
lock
mov
dec
in
mov
fs
icebp
jmp
fs
sbb
jecxz
mov
mov
inc
push
loopne
mov
cmp
adc
and
pop
mulps
scas
jne
xor
mov
je
xor
test
aas
inc
inc
mov
pop
vcvtsd2ss
movsl
mov
mov
lret
push
fists
aam
xchg
dec
arpl
xorb
std
in
cmp
scas
scas
mov
cmpsb
adc
stos
pop
mov
jl
inc
dec
sbb
clc
xchg
pushf
adc
cmpl
add
repnz
sbb
test
test
and
mov
std
sahf
in
sub
cmp
jnp
pushf
sbb
pop
movsl
out
mov
adc
inc
loop
mov
xor
loop
mov
out
out
outsl
rep
movsl
mov
mov
dec
cmp
jnp
insb
jnp
fnstsw
imul
stc
ds
test
out
lea
out
scas
in
cld
leave
je
shll
test
mov
loop
fistl
lods
and
push
mov
dec
push
xor
cltd
jge
jmp
mov
bound
addb
int
jle
js
pop
fadds
jnp
cmpsl
leave
jle
and
dec
mov
xchg
cltd
sub
and
insb
push
cmp
roll
fwait
jae
imul
rcr
add
insl
cld
dec
dec
pop
jge
and
xor
or
add
cmovne
or
fsubl
jl
lret
not
in
jle
sub
ret
ja
xchg
sub
fidivl
cmp
outsl
div
icebp
push
pop
jo
insb
inc
decl
lock
rorb
inc
test
xlat
ss
pop
mov
movsl
xchg
sysexit
push
pop
clc
iret
ja
les
mov
repz
mov
and
xor
icebp
sbb
scas
cmpsb
xor
popl
sub
cmp
inc
push
xor
sbb
mov
int3
stos
loope
cmp
pusha
xchg
icebp
insl
popl
jge
mov
jp
xor
std
imul
test
xchg
cmp
inc
sbb
fnstenv
add
jecxz
sbb
push
inc
fsubp
pop
cmpsb
insb
aas
xor
aas
mov
pause
mov
sub
xor
inc
push
sub
loopne
nop
xor
push
or
scas
cmpb
rcll
sbb
sbbb
test
adc
scas
mov
sub
jns
cmpsb
test
popa
dec
rclb
nop
pop
in
idivb
mov
popa
jl
stc
int
nop
sbb
and
je
int
iret
pushw
shr
lods
mov
js
aas
mov
push
lods
add
loopne
dec
pop
xor
fistps
mov
scas
push
in
iret
add
loop
hlt
pop
dec
adc
fisttpll
fwait
cmpsb
stc
jnp
pushf
popa
mov
sahf
lret
test
pop
addr16
pop
icebp
add
cmp
cs
in
pop
inc
mov
xchg
mov
mov
ja
pop
lret
addl
adc
cmc
leave
jb
fsubr
push
lds
jno
std
les
and
inc
insl
and
push
lret
xchg
aaa
out
xchg
push
out
sbbl
out
sub
dec
gs
mov
test
das
and
mov
or
and
shlb
cmp
sub
jbe,pn
xchg
jno
ds
movsb
pushf
sti
sub
repz
xor
mov
push
jno
testl
hlt
jo
test
inc
sbb
fwait
imul
leave
mul
movsb
in
mov
stos
imul
aas
ljmp
jl
insb
inc
sbb
es
mov
mov
popf
mov
pushf
pop
shl
jg
xchg
push
push
cmp
ret
das
mov
out
je
mov
insl
xchg
shlb
and
loopne
shrb
enter
mov
addr16
loope
inc
xchg
jl
in
test
pop
pop
adc
dec
mov
lcall
movsb
nop
inc
adc
mov
repnz
jg
adc
push
lcall
ja
jge
int
jno
or
push
jmp
rorl
movsb
sbb
bound
scas
dec
mov
jmp
sub
sub
jg
movsb
sbbl
call
lahf
inc
mov
scas
pop
in
in
jge
iret
and
dec
cltd
ret
mov
jnp
lcall
shll
repz
jge
bsf
xchg
mov
lods
xchg
xchg
xchg
test
xchg
push
sub
clc
push
in
nop
dec
test
jecxz
xchg
xchg
cmp
fcmovu
jp
sbb
lods
hlt
pop
mov
sbb
push
sbb
out
data16
int3
lret
jecxz
cmc
push
sahf
jp
gs
cmp
outsl
lods
in
inc
bound
sub
lds
mov
jo
dec
mov
pop
push
xchg
sarl
lock
flds
addr16
mov
push
pop
xchg
fwait
ljmp
mov
lea
out
stos
add
stos
cmp
pushf
bound
call
insl
dec
pop
pop
push
xor
or
inc
stc
ds
mov
sbb
ds
inc
pusha
jns
cmp
mov
add
cmp
ret
cmp
jmp
out
xor
ret
and
outsb
mov
jno
aaa
add
jbe
repz
sbb
mov
sbb
pushf
jp
cmp
fdivrl
cltd
stos
add
cmpsl
xchg
mov
xlat
pop
mov
sti
add
add
loope
mov
mov
push
pop
sbb
mov
pop
inc
jno
movsl
out
je
stc
mov
push
push
inc
rcrl
inc
and
pop
sbb
mov
idivl
outsb
ljmp
xrelease
jecxz
mov
and
mov
add
push
bound
adc
mov
mov
daa
pop
and
sub
cmp
dec
sub
mov
dec
mov
lret
ds
subl
adc
lret
xchg
retw
cmpb
xchg
xlat
imul
and
pop
fistps
jno
jo
sahf
js
fucom
xor
mov
popa
jle
cmp
das
enter
or
pop
pop
in
iret
lods
or
popa
bnd
ffreep
mov
dec
mov
inc
cltd
fisubrs
pop
mov
adc
fbld
dec
fwait
lods
xor
test
imul
outsb
jle
imul
adcl
sub
or
test
sub
data16
je
jnp
in
mov
lret
or
stos
mov
loop
repz
lods
popf
adc
call
push
and
clc
fistpll
or
inc
shrl
bound
or
into
push
test
in
pop
nop
cmp
into
test
fwait
pushf
fldl
fwait
adc
jnp
int3
cmp
or
fstpt
adc
adc
mov
xor
xchg
lret
mov
nop
jp
mov
repz
pop
loopne
stos
sub
in
pushl
cmp
pop
fistl
ljmp
or
pop
mov
mov
test
in
ret
sbb
rorl
lret
dec
les
in
jnp
test
movsb
xchg
pop
les
mov
notb
mov
js
jmp
mov
in
iret
arpl
xchg
das
mov
subw
loop
nop
pop
popa
mov
es
add
add
pop
pop
iret
or
cli
sbb
cmpsb
or
js
jge
jne
mov
xchg
imul
and
cmpsb
in
add
incb
rolb
iret
jae
pop
add
jg
jp
fisubl
sub
mov
mov
mov
daa
mov
pop
cld
movl
jmp
call
rcl
dec
scas
jmp
into
fimull
adc
xor
in
popf
fnstsw
jne
lret
call
mov
mov
mov
sub
roll
scas
jmp
xchg
adc
mov
in
mov
inc
cltd
pusha
cld
jmp
or
jne
pusha
sbb
cmpsb
dec
mov
cmpb
mov
jp
mov
adc
movsl
in
jge
loope
insb
mov
es
pop
jns
js
int
ret
add
add
aas
imul
pop
or
jne
lcall
lods
pop
cltd
ficoms
mov
int
cwtl
loope
jns
xchg
mov
dec
jle
popf
mov
mov
dec
cmp
out
cmp
jecxz
mov
pop
mov
cli
jne
insl
ds
mov
movb
xor
xchg
imul
ljmp
call
int
ffreep
cmp
sbb
into
mov
lcall
es
shr
and
lcall
cmp
push
sbb
addb
test
negl
aaa
cmp
mov
ret
sbb
fstps
mov
fwait
ljmp
xchg
test
push
stos
test
mov
or
data16
and
xchg
test
jle
xchg
cmpsb
out
xchg
cmpsb
push
dec
sbb
mov
sub
repz
fisubrs
pop
push
icebp
dec
ja
xlat
xor
sahf
ds
add
iret
jmp
fs
jnp
and
xchg
test
in
fcmovu
out
sub
or
mov
lret
test
push
adc
pop
pop
jae
iret
scas
sub
repnz
mov
stc
enter
roll
mov
mov
insl
xchg
imul
sbb
sub
shlb
xchg
jb
lret
lret
jp
popa
dec
mov
mov
dec
std
iret
out
jo
leave
jp
cmp
push
out
loopne
addr16
cli
out
pop
mov
jge
inc
arpl
mov
movsl
dec
inc
add
pop
jae
adc
sub
mov
sub
popf
ret
xchg
jl
fsubrl
cwtl
jle
push
pop
pop
pop
mov
std
lds
jp
xchg
lret
test
dec
xchg
clc
les
and
add
pop
pop
add
adc
add
xchg
ret
es
js
pop
xchg
jg
lret
test
ljmp
mov
leave
cmpsb
mov
dec
push
mov
push
dec
cmp
mov
stos
xor
add
cmp
inc
testb
mov
aas
enter
jl
dec
add
xchg
inc
dec
idivl
add
cltd
xchg
or
xchg
call
call
iret
sbb
cld
pop
xchg
add
out
cmp
mov
sub
mov
lods
push
orl
push
popf
xchg
ret
mov
add
je
stc
mov
testl
fadd
lods
xchg
pop
sbb
cmp
push
add
xchg
push
and
mov
sub
pop
std
add
mov
sub
ss
dec
out
in
test
cmp
lods
dec
fs
jmp
xor
cld
test
bound
cmpsb
pop
mov
movsb
inc
incb
call
and
mov
out
xor
inc
pop
pop
inc
outsb
jp
jp
das
adc
rorl
imul
add
test
mov
fadds
mov
mov
ljmp
insb
mov
bound
xor
pop
jmp
aaa
call
xor
jae
pop
adc
cmp
dec
pop
mov
jge
popf
iret
ja
scas
dec
aam
push
imul
flds
scas
call
mov
jne
xor
inc
imul
sub
xchg
inc
cli
bound
out
lods
mov
dec
in
pusha
pop
mov
cmp
enter
mov
xchg
mov
cmpsl
shlb
fwait
mov
jg
insl
popf
xor
into
pop
orl
mov
icebp
test
wrmsr
cmpsl
jae
jle
mov
dec
mov
scas
jecxz
out
in
dec
aaa
mov
push
sub
jbe
cld
stc
pop
dec
inc
arpl
sub
pop
push
pusha
fucomp
push
repz
loope
jno
inc
into
in
mov
add
out
ret
rcrl
fisubs
fs
and
jne
or
lret
pushf
cli
cmp
lret
jo
dec
sub
bound
add
pop
mov
outsb
loopne
rclb
fadds
ds
pop
inc
shr
cmp
lcall
cmpsb
movsl
xchg
rcrb
pop
scas
sub
js
adc
in
xchg
inc
add
fwait
inc
sub
fsubrl
cmp
sbb
stc
ret
fldenv
das
popa
ds
lahf
pop
jp
stos
lret
jg
adcl
adc
dec
in
mov
or
or
or
mov
pop
fdivrs
fisubs
mov
push
jb
push
je
lds
cmp
fwait
pmaddwd
pop
dec
mov
jbe
movsl
ljmp
lahf
adc
pusha
xchg
push
stc
ret
or
sub
xchg
in
inc
arpl
mov
inc
mov
popa
cmp
nop
int
lock
pop
ds
rclb
adc
push
in
and
or
fimuls
jmp
stc
iret
clc
sub
movsb
adc
lods
push
mov
inc
cwtl
add
ja
dec
or
and
movsb
fists
mov
pop
mov
lret
mov
xor
and
sub
dec
mov
cwtl
pop
nop
mov
aas
mov
insb
sub
push
das
je
mov
or
pop
iret
sbb
rcrb
xchg
jb
aam
outsl
mov
inc
iret
mov
jns
mov
xor
out
dec
jp
xchg
mov
inc
lahf
stc
sbb
gs
mov
xchg
fs
stos
lcall
adc
sarb
out
jle
out
in
out
and
xor
cli
aaa
cmp
hlt
pop
in
dec
sub
imulb
or
cld
js
pop
sbb
fisttps
pop
add
fdivl
and
outsl
in
push
bound
mov
fstpl
push
inc
xchg
dec
fwait
sbb
cwtl
mov
jle
cmp
lcall
fistpll
push
add
mov
shrl
pop
xor
shrb
loope
cmp
sub
cld
mov
and
add
mov
sbbb
daa
xchg
mov
test
out
sbb
je
inc
stos
addl
mov
dec
pusha
lods
andb
dec
lahf
in
jle
andb
dec
sbb
sub
in
mov
xor
add
add
and
pop
inc
mov
cmp
jecxz
xchg
xchg
adc
jb
gs
mov
je
push
pop
sub
mov
sarb
ds
call
sub
aas
inc
pop
test
mov
cmpsb
jb
mov
cmpsb
loopne
arpl
test
and
scas
popa
xchg
test
mov
mov
push
cmp
lods
pop
lea
mov
hlt
lret
dec
out
or
adcl
repz
cmpsl
add
movsb
clc
int
sbb
test
lods
push
lahf
fcomip
mov
sbb
call
in
sub
repnz
cmc
shl
mov
jns
push
test
dec
jnp
gs
in
adcl
sub
insl
rolb
fildll
xchg
test
loope
insb
shll
push
test
lcall
ss
add
jbe
lds
nop
imul
mov
je
pusha
cmp
add
pop
and
and
aas
mov
and
mov
out
outsl
test
in
pop
or
iret
decl
pop
jo
shlb
pop
inc
jecxz
mov
and
jmp
clc
repz
mov
stos
push
jecxz
jmp
imul
jl
push
xchg
or
push
daa
xchg
lahf
inc
insl
out
out
shlb
add
push
cltd
outsl
test
jecxz
andl
mov
test
xchg
leave
fisttpl
scas
outsb
shr
xchg
mov
cwtl
sbbb
sbb
test
cmpb
lods
xor
cld
outsl
ljmp
nop
lahf
mov
cmp
push
sbb
leave
sbb
mov
imul
mov
dec
sub
aam
lcall
pop
xchg
add
ret
mov
and
les
fs
add
sub
xorb
and
or
popa
xchg
icebp
pop
add
xchg
cmpsl
pop
jecxz
jae
outsl
sbb
fcoml
xorl
xchg
out
or
or
lds
jecxz
mov
mov
sbb
mov
test
pop
sbb
cmpsl
aad
into
mov
ret
sub
fimuls
mov
inc
xchg
sbb
mov
adc
push
ja
add
jmp
jae
pop
stc
cmp
out
mov
lds
push
jp
xchg
mov
enter
push
xlat
aad
lret
sti
inc
sub
loop
mov
push
loopne
rcr
push
mov
repnz
sbb
mov
jmp
mov
stos
pop
shlb
movsb
rol
out
leave
inc
in
movb
inc
mov
in
fdivrl
pop
lea
dec
xchg
dec
pop
test
dec
mov
jle
push
pop
jb
aas
call
push
incl
outsl
sub
fcoml
push
add
insb
mov
mov
call
leave
cmpsb
movsl
jae
ja
icebp
stos
lahf
lods
mov
stc
fistpll
cmp
and
movsl
je
xor
push
add
hlt
ret
cmp
testb
rorb
xor
stos
shll
inc
addr16
push
mov
lods
dec
adc
and
sbbl
and
and
test
loop
and
and
sahf
xor
mov
jl
jbe
mov
add
sub
xchg
arpl
mov
inc
or
mov
fs
int3
scas
xchg
arpl
and
sub
les
daa
in
inc
sub
jo
into
rcrl
stos
adc
fst
and
cmp
int
in
or
pop
repz
ret
sbb
jp
ficomps
into
mov
sbb
mov
insb
jns
pop
pop
lret
adc
or
mov
jbe
add
clc
ret
cmp
lock
jecxz
mov
add
flds
loope
movsb
pop
leave
sbb
inc
inc
cltd
test
jns
push
mov
fnstenv
sbb
loop
cmp
jge
cwtl
cmp
je
mov
push
fldcw
dec
std
lcall
push
or
popa
dec
adc
into
jns
mov
jbe
inc
scas
shrb
ret
xchg
leave
js
outsl
push
add
popf
aam
dec
inc
cmp
cmpsb
or
shlb
push
imul
lds
push
int
pop
pop
mov
jbe
int
mov
jecxz
sbb
imul
aad
cmp
mov
popf
in
xorl
add
sbb
push
ja
add
dec
push
xor
int3
std
mov
inc
pop
in
mov
jno
ds
das
outsb
sbb
popa
mov
pop
lret
jno
mov
sub
scas
xrelease
mov
aam
mov
mov
mov
dec
or
in
ds
inc
dec
negl
data16
sti
add
or
imul
lea
xchg
xor
ljmp
shll
imulb
pop
mov
sub
mov
mov
mov
dec
lahf
add
mov
insl
mov
sub
pop
and
xchg
es
fs
jle
and
int
jbe
fists
xchg
adc
sbb
scas
lcall
loopne
jmp
or
jae
mov
mov
bound
mov
jmp
xchg
aam
mov
xlat
sub
aad
cltd
xor
mov
adc
in
mov
xchg
jo
xchg
bnd
neg
mov
lret
fnstcw
xor
cmp
imul
and
push
push
stos
in
dec
push
xchg
imul
movsl
jmp
call
add
mov
fcmovu
andl
xchg
push
pop
pop
inc
int
cld
enter
lock
inc
jno
dec
add
jmp
ficoms
movsb
lret
inc
aaa
cld
jns
mov
push
fstp
bound
in
mov
fisubs
scas
das
mov
sub
je
decl
out
xor
nop
xchg
dec
mov
sub
add
imul
into
iret
dec
sbb
push
mov
dec
shlb
bound
jbe
sbb
mov
dec
dec
xchg
cli
imulb
jg
in
jns
hlt
mov
xchg
stos
xorb
lcall
jo
out
pop
add
dec
mov
movsl
mov
cwtl
mov
jae
pop
lcall
jmp
xorl
test
xor
cmp
mov
aad
js
mov
insb
jl
adc
xor
mov
mov
mov
fcmovu
in
popa
les
cwtl
mov
dec
cmp
dec
lahf
cmpsl
hlt
shll
out
movsb
sbb
pushf
inc
xchg
adc
or
faddl
lcall
cmpsl
push
xchg
test
xor
fbld
sub
or
jns
xlat
ljmp
sbb
push
mov
sbb
xor
inc
stc
fbstp
and
mov
push
sti
dec
out
inc
push
out
xchg
inc
clc
adc
or
inc
push
sub
cld
dec
loopne
pop
inc
out
mov
test
and
jl
xor
in
sbb
push
cmp
xor
ja
pusha
cmpsb
lds
lret
dec
in
cwtl
mov
test
adc
jecxz
dec
jns
fcmovnbe
imul
xor
andl
xor
sahf
mov
add
adc
into
lret
das
cmp
mov
xchg
sbb
push
repz
inc
loope
insl
in
popf
pop
fcoms
push
add
in
into
addr16
mov
jb
xor
loopne
push
jmp
nopl
inc
ljmp
cli
sub
ss
popa
insl
jb
stos
out
xchg
xchg
mov
sbb
nop
and
mov
cmp
add
outsb
pop
fcmovu
mov
xchg
jne
testb
dec
in
push
loopne
mov
sbbb
fistl
icebp
inc
and
flds
cmp
jnp
push
insb
mov
or
xor
mov
clc
sub
and
pop
pop
rcl
and
movsb
daa
into
stos
rcrl
or
lahf
jb
mov
fimuls
mov
test
sub
ds
inc
jl
mov
int
xor
xor
in
cltd
add
fsubs
sbb
xchg
sti
mov
dec
mov
gs
shlb
push
in
std
sbb
xor
gs
loop
popa
inc
mov
daa
push
inc
and
data16
fsubr
out
iret
cmp
pop
sbb
xchg
sahf
jmp
cld
sbb
lods
fld
mov
jnp
sub
cli
rol
xor
das
test
jns
lea
shrb
gs
cmp
cmp
ror
mov
rorb
fst
sub
add
or
hlt
xor
imulb
mov
mov
addr16
repz
cmc
addl
fs
rorb
mov
add
enterw
aam
adc
imul
sub
sbb
mov
rorb
jbe
int
sahf
push
or
rol
jne
sub
clc
push
jb
out
ljmp
push
test
int3
loopne
stos
xchg
inc
ja
stc
sbb
adc
mov
pop
and
sbb
int
ror
and
jbe
cmp
pop
pop
sbb
pop
push
aaa
call
shrb
fcmovne
xor
push
cmp
lret
xor
adcl
or
out
mov
insl
mov
xchg
xor
add
inc
add
mov
sti
rorl
mov
mov
xor
popf
outsb
jecxz
mov
addr16
sbb
repz
push
pop
xchg
dec
sar
ja
gs
lods
sbbl
cmp
enter
xor
outsl
cltd
xchg
repnz
cmpsb
push
repnz
mov
outsb
push
dec
addr16
test
in
jp
pop
andb
pop
jo
and
rorl
fcomip
icebp
pop
aam
mov
jmp
je
cmpsb
pop
cwtl
cltd
test
fdivrs
xor
iret
jge
inc
outsb
sbb
test
adc
mov
sti
cwtl
jl
mov
cmp
add
lahf
ret
or
lds
out
mov
ss
xor
and
scas
outsl
popa
popf
les
mov
lcall
pushf
dec
and
lret
insb
into
mov
popf
in
lods
add
arpl
inc
sbb
jle
or
inc
mov
sub
jae
mov
andb
mov
sub
dec
mov
adc
test
mov
xchg
fcomip
mov
push
pop
dec
in
sbbl
xchg
loop
lea
jg
pandn
add
fnsave
mov
popf
and
push
mov
and
shrl
and
ds
js
mov
lock
cmpsb
xchg
fdivl
les
addr16
jns
data16
xchg
repnz
xor
out
lcall
sbb
cmp
jbe
cmp
push
icebp
iret
idivb
jns
stos
out
pop
cli
xor
sub
pop
mov
push
push
push
pop
add
mov
frstor
fimull
test
and
clc
out
mov
and
cmpsl
mov
movsb
inc
fdivrl
bound
cwtl
cwtl
mov
cmp
mov
mov
mov
or
jno
lock
mov
sub
pusha
cmp
mov
int3
hlt
inc
int
fwait
dec
push
mov
dec
std
xchg
add
cwtl
lret
aam
pop
push
cmpsb
rorb
adc
arpl
das
push
lock
ds
xchg
xor
push
inc
mov
inc
sbb
jge
pop
adc
xchg
jnp
cmpsl
ret
xchg
pop
dec
adc
or
xchg
cld
fadds
adc
push
lcall
or
mov
fsubl
push
gs
scas
mov
in
aaa
cmc
rolb
xor
stos
sbb
mov
lds
icebp
mov
jmp
adc
jmp
xchg
pop
sub
adc
insb
pop
das
out
cmp
lcall
jb
push
sbb
jl
mov
icebp
jge
shlb
inc
mov
mov
popf
lcall
adc
daa
mov
mov
stos
notb
stos
mov
mov
sub
adc
mov
dec
cmpsl
les
or
push
mov
hlt
das
dec
addb
repz
dec
sub
lds
xchg
add
xor
jno
roll
cli
jg
fldenv
lods
jge
push
rorb
mov
adc
shll
daa
xlat
sub
push
xchg
data16
xchg
iret
in
mov
cli
repz
push
ss
push
sti
dec
xor
rclb
cltd
mov
in
add
dec
push
jno
out
lock
notl
ret
push
sub
or
jge
mov
test
popa
inc
inc
inc
push
loope
outsl
push
les
outsb
fscale
fldenv
leave
testb
ror
jmp
jae
out
bound
lods
ret
add
xchg
scas
xlat
enter
call
nop
mov
test
add
cmpsb
jg
inc
inc
jnp
push
lahf
adc
lret
rclb
cmpsb
lahf
out
fwait
xchg
scas
pop
aad
jno
roll
mov
in
cmp
adc
sub
outsb
out
dec
dec
enter
aad
dec
dec
mov
pop
or
dec
jl
imul
aad
rorb
ljmp
and
cli
xchg
jmp
xchg
adc
xchg
lahf
lret
lahf
dec
loopne
xchg
jecxz
repnz
inc
adc
stos
push
dec
mov
lcall
fmuls
lret
icebp
cmp
ficoml
sbb
adc
ds
cmpsl
push
outsb
mov
sbb
jge
mov
jge
aas
movsb
adc
mov
push
add
mov
or
dec
in
movsl
add
movb
fiadds
pop
sbbl
ja
inc
dec
scas
popf
add
push
addr16
lret
or
lcall
cmpsl
or
fnsave
cmc
mov
inc
cmp
inc
jnp
outsl
jmp
dec
into
jge
std
aad
test
inc
xlat
sub
or
pop
and
or
mov
int3
ljmp
and
sbb
adc
movsb
lcall
mov
inc
xchg
aaa
xchg
jbe
sbb
lods
pop
xor
dec
inc
adc
xchg
es
push
push
out
cli
xchg
sbb
cmpsl
outsl
mov
and
mov
cmp
push
dec
shl
jp
sti
out
or
pop
fisttpll
jl
jae
sub
insb
inc
mov
fcomip
add
sarl
and
pusha
mov
mov
adc
retw
push
ljmp
xchg
jnp
jle
jmp
dec
inc
in
test
scas
ret
notb
les
mov
stc
les
mov
sbb
mulb
mov
fsubs
cwtl
jmp
nop
jnp
add
mov
shrl
mov
outsl
fwait
sub
or
or
sahf
jae
cmc
aam
xchg
sub
fisttpll
fwait
lea
ficoms
cmp
sub
aaa
test
add
mov
inc
jns
mov
cmp
adc
fstpl
addb
push
add
lret
les
imul
mov
mov
push
sbb
decb
out
lea
aad
sub
rcll
and
add
push
lret
pushf
jnp
dec
dec
loop
lods
scas
jl
jbe
fnstsw
repz
push
in
fadds
ljmp
mov
arpl
ret
xchg
das
cmpl
lahf
fidivs
daa
scas
ljmp
xor
xchg
cmpsl
pop
imul
ljmp
out
hlt
inc
sub
test
into
out
out
mov
push
mov
pusha
stos
xor
cld
shlb
pop
inc
test
enter
es
sbb
scas
xchg
lret
push
push
sub
lret
ret
movsl
fldt
push
lahf
inc
xor
and
push
cmpsl
push
dec
out
sbb
cmp
mov
push
cmp
icebp
cmp
mov
pop
mov
pusha
mov
out
movsl
nop
xchg
inc
xchg
add
testl
outsb
cmp
dec
pop
clc
dec
popf
aaa
fisubl
std
sti
push
mov
das
incb
xor
inc
sub
mov
pop
cmp
mov
sbb
inc
repnz
mov
les
cli
push
push
xchg
fisubs
jbe
xor
mov
and
testb
call
imul
sbb
mov
lret
sub
iret
fisubs
setnp
sbb
mov
push
or
lea
inc
mov
add
inc
stc
pop
push
cwtl
mov
push
mov
sbb
xor
cltd
andl
sub
jle
pop
add
les
adc
cwtl
xchg
int3
stos
jp
test
ret
mov
mov
mov
and
add
sahf
push
movsb
repz
in
pop
cmp
adc
jno
pop
mov
inc
nop
insb
lods
mov
mulb
push
mov
pop
les
sbb
adc
inc
aad
mov
lock
dec
mov
adcb
adc
inc
cs
jne
push
arpl
lods
push
in
ja
mov
and
cmp
ret
cmpsb
mov
pop
in
add
add
inc
lea
std
adc
cld
push
sahf
lret
mov
cli
add
fwait
adc
adc
adc
or
jns
mov
mov
test
in
cmp
sub
fldcw
ss
mov
pop
lods
push
popf
fidivrl
and
aas
iret
lahf
mov
jns
popf
rcll
jmp
inc
xor
push
mov
fildll
icebp
push
mov
sbb
mov
pop
adc
jle
clc
cmp
cmp
lret
lods
pop
sub
cmc
jl
mov
adc
hlt
rol
testb
ljmp
pop
dec
inc
hlt
xor
je
stc
add
fwait
inc
cli
sahf
cmc
js
mov
inc
divl
ds
and
stc
fpatan
jp
mov
es
xchg
pop
mov
lret
ret
xchg
cltd
or
cltd
inc
arpl
out
cs
sub
std
mov
data16
adc
std
cmp
cmp
scas
iret
mov
add
pop
sarb
fldenv
cmp
stc
dec
mov
mov
mov
xchg
add
cmovge
inc
bound
mov
jecxz
fs
andl
movsb
sub
jg
shr
hlt
cltd
out
xor
and
lcall
fistpl
dec
nop
das
clc
ja
cmp
mov
inc
fsts
and
or
mull
bound
mov
jne
cs
inc
aas
pop
fisubs
in
repz
push
push
ljmp
test
fnstenv
pop
test
dec
shlb
loope
mov
pop
sbb
cmp
call
lods
add
or
arpl
out
jnp
mov
dec
cmp
inc
insl
out
push
out
aam
in
scas
mov
pop
je
shrb
lcall
out
out
nop
pop
shrl
mov
pusha
xorb
cli
mov
push
sub
mov
cmp
pop
xchg
mov
and
aam
out
sbb
mov
sbb
scas
mov
xorb
cmpsl
mulb
xchg
cmp
adc
mov
add
sub
xor
mov
cmp
in
xchg
jg
pop
sub
hlt
lcall
nop
and
and
cmp
imul
sbb
sub
mov
test
pop
xchg
inc
cltd
jecxz
adc
mov
xorb
sub
sub
or
jmp
push
or
aam
lcall
out
dec
in
or
sub
cmp
inc
repnz
inc
xor
test
pushw
sub
daa
sub
mov
testl
lea
sub
mov
pop
rcl
ljmp
add
arpl
push
in
add
pop
pop
mov
mov
mov
xor
test
jge
mov
adc
out
add
push
mov
fisubl
and
sbb
inc
sbb
arpl
add
jmp
addb
lret
mov
adc
push
sbb
hlt
push
add
shll
adc
push
jle
cld
enter
lcall
add
jne
inc
xchg
push
mov
jp
stos
jmp
or
lret
jbe,pn
xchg
cld
in
cmp
sahf
sub
and
aam
popa
push
cmp
dec
sbb
sub
les
aas
inc
sub
jmp
push
loop
popf
jne,pn
lock
cli
dec
jg
hlt
mov
mov
cmp
push
mov
sub
add
cwtl
pop
jb
dec
mov
xchg
add
adc
mov
je
cmp
lds
les
aad
pushl
out
aaa
outsl
in
cmp
adc
cmpsl
mov
ret
test
imul
je
push
adc
pushf
clc
dec
clc
lret
push
in
les
cmp
adc
mov
or
cmp
push
aad
and
ja
xor
std
and
sahf
scas
push
outsl
pop
or
xor
mov
cmp
mov
imul
add
fnsave
or
out
aam
push
out
push
pushl
xchg
or
mov
bound
inc
fisttpll
push
js
xchg
xchg
iret
test
pop
and
lcall
ret
rep
cltd
enter
pop
push
mov
adc
xor
lcall
shrl
scas
cmp
cmc
faddl
aam
add
dec
inc
insl
mov
or
cli
aaa
sbb
xor
ret
addr16
add
dec
loopne
int3
dec
or
jns
mov
push
xor
or
adc
inc
lock
call
mov
and
sub
test
push
mov
push
gs
outsb
das
pusha
fs
jl
das
test
add
repnz
xorl
cli
dec
pusha
pop
jns
mov
andb
movsl
fidivs
xchg
adc
dec
lock
or
out
or
pop
push
decb
cmp
cmp
lahf
jne
lcall
pop
mov
std
add
xchg
cmp
mov
stc
pusha
test
xchg
iret
out
sbb
out
insl
dec
lret
sti
imul
xlat
stos
dec
sub
aam
mov
jmp
arpl
ds
int3
jle
in
aas
andb
stos
xchg
add
cmp
jle
inc
mov
pop
and
mov
jnp
xor
lods
popf
xchg
sub
adc
sbb
mov
bound
mov
cmc
test
dec
and
lods
lods
mov
popa
add
pop
jno
cltd
xor
inc
arpl
ja
add
popl
jns
movsb
outsb
push
jae
pop
push
fldt
ss
les
adc
xlat
sahf
test
mov
pop
imul
jmp
aas
xor
xchg
mov
sbb
or
push
lods
push
xchg
mov
mov
imulb
mov
pop
pop
mov
outsl
inc
jnp
jle
popa
pop
mov
addl
sar
mov
jge
add
ljmp
shl
les
ljmp
popa
repnz
jg
sub
shrl
mov
add
out
insl
jg
jle
gs
lock
cmpsl
jne
jl
decl
xchg
icebp
pop
inc
and
pop
pop
sahf
or
in
mov
push
test
fwait
pushf
ret
jne
xchg
jp
lret
jns
mov
push
and
sub
and
cmp
mov
aam
mov
push
push
jbe
ss
nop
ljmp
pop
jno
jecxz
pop
jg
mov
sti
mov
iret
cmpsl
jg
out
out
push
arpl
les
adc
lods
sub
or
xor
jbe
in
sbb
jg
or
inc
roll
test
stc
cmpsb
mov
leave
adc
loope
nop
xor
jnp
push
dec
adc
cld
loope
add
add
sub
sub
lcall
mov
push
fidivs
out
js
dec
and
add
jmp
inc
inc
and
cmpsb
and
xchg
or
mov
sahf
dec
xchg
jg,pt
sub
pop
lds
rclb
loope
jg
jg
xorl
cmc
lea
and
in
adc
mov
inc
lcall
dec
jecxz
daa
andb
mov
popf
mov
inc
mov
and
fsubs
repnz
in
add
adc
jo
in
fcmovbe
pop
mov
push
aaa
and
pop
and
push
inc
mov
dec
and
outsl
jnp
int3
xchg
in
pop
ljmp
cmp
cmp
jo
add
out
push
faddl
mov
xchg
test
shll
cmp
fxam
pop
push
cltd
test
outsl
hlt
adc
and
push
lahf
xchg
imul
leave
pop
adc
leave
je
test
cmpsb
cmp
sbb
pusha
in
inc
fiaddl
jmp
aad
inc
call
fbstp
mov
iret
adc
lods
mov
add
dec
inc
scas
cmc
xchg
out
sti
out
mov
cwtl
shrb
inc
nop
lcall
testl
sbb
or
xchg
loopne
jbe
push
mov
out
hlt
inc
sub
mov
imul
fidivrl
test
aam
cmpsl
fldenv
lahf
orb
pop
adc
cli
sbb
ret
jae
xor
fwait
push
test
mov
ret
and
jb
test
adc
mov
dec
and
fidivrs
dec
enter
subl
cmp
mov
lret
push
loop
or
inc
jb
pop
out
insl
ret
pop
xchg
mov
sbb
mov
rcr
push
and
std
call
and
pop
push
or
incl
out
or
xchg
xor
cmpsb
mov
insl
or
dec
fs
cmp
fwait
mov
lcall
fists
add
in
fucom
testb
sbb
ds
xchg
and
jnp
mov
mov
push
dec
mov
mul
or
cwtl
repz
dec
cs
cmpsb
sub
sbb
leave
jns
add
jno
dec
fiadds
inc
daa
movsb
sub
in
or
push
psubusb
xchg
outsl
sahf
mov
cmp
sbb
mov
or
icebp
jle
shl
mov
dec
cld
call
stc
and
push
fstl
into
hlt
dec
inc
sub
fs
loop
xchg
enter
fldt
mov
lret
mov
xchg
and
mov
xchg
fcompl
movsb
mov
add
lret
orb
mov
xlat
jb
in
les
leave
or
mov
popf
repz
loope
repnz
mov
xchg
cmpsl
add
sub
or
popf
inc
push
or
push
xchg
inc
mov
xchg
xor
out
adc
cmp
mov
xor
pop
or
pushf
jae
jnp
mov
pop
jnp
jmp
push
fstl
sahf
iret
pop
mov
aam
fwait
dec
bound
add
cmp
and
sub
dec
sti
stc
leave
or
mov
ljmp
xor
aas
ficompl
flds
sbb
subl
nop
push
sbb
sti
adc
jg
mov
dec
mov
mov
ficoml
cltd
imul
cmpsl
xor
cli
bound
rcrl
mov
mov
jo
jl
mov
xchg
inc
cmp
lcall
inc
fmuls
jg
pop
add
cmp
es
sub
cmpsl
xchg
mov
pop
js
xor
fcmovnu
pop
mov
pushf
andl
je
lret
rcll
iret
and
add
mov
das
pusha
pop
xchg
cld
inc
mov
sarl
add
imul
shll
sbb
add
xchg
rcrb
jl
les
in
ret
mov
out
rcrb
leave
xchg
jb
mov
mov
adc
sbb
dec
addr16
test
xchg
mov
fs
sub
push
lods
int
mov
js
jecxz
inc
dec
rcrb
lods
shll
cmpsl
sbb
fs
out
inc
adc
mov
loop
lret
lcall
pop
sbb
mov
push
jns
inc
repz
rol
xchg
into
sbb
jmp
cmp
imull
scas
sub
inc
push
push
or
sahf
xor
push
jg
in
in
mov
or
sbb
dec
xchg
out
clc
mov
insb
sub
inc
inc
sbb
and
and
sbb
in
lahf
imul
aam
loopne
mov
dec
mov
addr16
arpl
push
jmp
std
cld
jg
push
jmp
xchg
fildl
xor
lret
cmpsb
or
pop
jne
inc
inc
fcmovu
xchg
add
cmp
mov
adc
rcr
mov
fldlg2
cmc
divl
jae
out
clc
addl
in
adc
psllq
das
push
dec
xchg
stos
jnp
push
push
call
cld
pop
insl
in
out
lods
add
jnp
les
scas
pusha
insl
add
testb
mov
xchg
pushf
dec
gs
cs
je
jg
or
lea
mov
push
xchg
bound
fcmovnbe
add
dec
mov
sbb
push
xor
push
inc
int
inc
or
js
or
add
adc
add
push
mov
mov
cld
fwait
dec
fcompl
out
arpl
mov
xorl
xchg
decl
mov
push
add
ds
out
aaa
cmp
xchg
mov
test
and
mov
shl
test
dec
add
pop
mov
cmp
shlb
popf
jns
push
ja
std
je
sub
rol
add
mov
call
or
jge
fldenv
add
in
dec
ss
push
dec
and
add
sbb
idivl
pop
int
inc
cmp
lcall
lret
fwait
scas
ret
out
je
xchg
mov
int3
scas
or
shll
push
add
inc
enter
push
push
enter
xorl
mov
adc
adc
mov
mov
cld
std
jnp
push
and
insb
xchg
pop
rcr
int3
xchg
sub
pop
push
cmc
lods
push
jle
jb
and
mov
pusha
push
stos
loope
ljmp
mov
pop
mov
jns
or
sub
scas
mov
call
lock
lods
and
push
outsl
cwtl
inc
inc
xor
imul
jno
xchg
mov
xor
repz
movsl
jno
dec
test
mov
mov
fidivs
cmp
pop
push
or
xchg
mov
mov
sbb
fisubrs
popf
xchg
push
jns
mov
bound
mul
scas
mov
jnp
push
icebp
sub
call
adc
push
lods
pop
hlt
dec
push
sbb
mov
addr16
xchg
mov
xor
or
orl
cmp
mov
sub
les
aad
jmp
inc
addr16
in
dec
pop
stc
fcoms
sbb
movsb
inc
xor
gs
lods
ret
pop
test
xor
jno
sbb
cmp
fstpl
mov
mov
movsb
or
xlat
out
insl
sarl
inc
das
in
cld
shll
int3
mov
adc
out
dec
repnz
jo
jg
negl
jae
ror
inc
push
lret
scas
xor
fldl
jecxz
push
popf
mov
jns
test
sub
push
push
add
sbb
add
or
es
popa
int
daa
push
push
xor
push
mov
lret
or
out
sub
lret
lea
fdiv
adc
pop
push
pop
mov
and
cwtl
jecxz
xor
inc
pusha
dec
inc
pop
mov
fwait
xor
push
leave
and
pop
jae
in
aad
rcrl
inc
mov
pop
jmp
imul
and
inc
fsubrs
stos
mov
les
push
jg
push
jne
dec
xor
sbb
jp
xchg
fnstcw
xor
insb
and
ss
jp
push
out
mov
std
in
andl
adc
jno
or
orb
addl
jb
mov
das
cmpl
sahf
push
inc
mov
dec
push
push
inc
jl
dec
clc
gs
shr
test
push
xchg
jg
fs
pop
inc
popa
mov
push
sbb
xor
insl
mov
aad
jecxz
pop
pop
or
scas
fistps
cmp
add
jne
imul
push
inc
xor
out
push
jb
sbb
ret
cwtl
jmp
imul
adcl
les
sbb
jp
scas
fisttpll
mov
loop
mov
mov
ljmp
fwait
mov
clc
jg
sbb
mov
jge
cmp
movsl
and
in
mov
dec
cld
mov
mov
lods
aam
fsub
je
xorb
shlb
mov
ffree
es
fisttpl
mov
xchg
call
mov
push
arpl
stos
sub
xor
scas
sub
xor
xor
xchg
mov
or
iret
jmp
outsl
or
lds
sbb
ja
mov
add
daa
inc
in
and
aad
shll
xor
inc
push
cltd
inc
jbe
aad
call
mov
aam
das
aad
jle
mov
and
dec
lcall
push
xor
out
sarb
iret
test
pop
mov
and
sbb
mov
iret
cmp
push
push
les
lock
mov
or
add
sub
mov
sbb
push
inc
sbb
push
shll
sbb
shlb
enter
std
push
and
cltd
ret
jb
or
and
sarl
mov
adc
sub
xor
inc
cmp
scas
imul
out
inc
jno
cmp
xor
out
int
jmp
mov
dec
push
sub
ljmp
mov
fxtract
popa
push
and
pop
inc
std
or
adc
lret
ds
enter
pop
mov
sbb
outsb
mov
mov
and
xchg
push
ja
push
lcall
test
or
jl
push
cmpsl
cmp
out
ljmp
mov
push
andl
mov
jl
mov
fsubrs
xchg
xor
gs
dec
xor
cmc
lea
popa
scas
cmp
sbb
lcall
dec
xor
cmpb
jne
cmp
cmpsl
xchg
out
xchg
dec
dec
push
std
jne
test
or
daa
cltd
push
test
mov
inc
dec
bound
out
xchg
jb
push
push
aam
push
push
popa
pop
cmpsl
mov
pop
sbb
pusha
lea
movsb
popa
mov
add
mov
in
or
je
xchg
mov
and
mov
addr16
mov
ss
pop
mov
inc
dec
lea
aas
cmp
jecxz
movsb
xor
xor
nop
ror
add
mull
ljmp
xchg
das
cmpb
pushf
pop
mov
cli
xor
mov
ljmp
jne
sbbl
adc
inc
out
push
mov
aam
mov
test
jl
push
xchg
sub
test
sub
fxch
cmp
fnsave
mov
adc
adc
loopne
in
sti
fcmovnu
xlat
xor
jmp
aas
enter
mov
leave
sahf
popa
in
sti
add
pop
dec
inc
sbb
loop
push
fdiv
inc
sbb
movb
rorb
les
fbld
sub
pop
sbb
mov
sub
enter
cld
rcrl
scas
mov
or
mov
mov
adc
rcrl
sti
or
bound
out
xchg
mov
xor
xchg
es
hlt
stos
jb
fdivrs
scas
jg
int3
mov
push
aaa
jo
ljmp
xchg
sub
xchg
mov
push
mov
mov
or
cmp
shll
cli
push
fxch
mov
pop
lea
jecxz
test
icebp
and
cmp
nop
cs
sub
inc
adc
lret
cmc
inc
dec
gs
in
in
inc
insl
xchg
f2xm1
or
dec
frstor
enter
out
push
call
push
lea
add
mov
mov
mov
dec
and
jae
lods
jle
int
mov
imul
test
out
dec
sbb
mov
jne
dec
sub
outsb
scas
cltd
lret
imul
jbe
je
inc
xlat
shrb
lahf
jl
xchg
sbb
dec
and
mov
popa
ja
loopne
add
pop
jns
adc
inc
jae
jno
fnsave
pusha
das
cwtl
inc
push
addb
rcrl
cmp
xchg
or
and
sahf
test
mov
out
push
push
sub
mov
and
adc
jecxz
outsb
insb
fs
dec
xor
in
in
imul
out
pop
movsl
lea
cmp
stos
inc
addb
roll
sti
outsb
dec
mov
fildll
add
sti
push
and
cld
xor
and
loope
pushf
push
and
or
loop
es
sub
aas
pop
nop
adc
xchg
hlt
insb
lcall
ljmp
rcrl
clc
das
and
insl
mov
popf
cmpsl
mov
int3
cmpsb
testb
mov
push
cltd
sbb
loopne
es
sub
sbb
sub
mov
outsb
adc
cmp
push
inc
push
and
adc
js
add
ret
mov
cmp
pop
push
sbb
stos
enter
inc
mov
or
push
mov
out
pop
shrb
dec
fadds
jo
sbb
pop
mov
outsb
dec
xchg
or
xchg
ds
dec
insl
aam
scas
in
pop
ds
ljmp
std
decl
clc
inc
sub
adc
mov
ret
jg
sti
mov
test
popf
push
fwait
out
dec
mov
push
mov
inc
iret
sahf
imul
xchg
arpl
sbb
hlt
mov
in
xchg
jne
sub
push
push
inc
out
mov
cld
sbb
sti
jl
hlt
pop
mov
xchg
fucom
jmp
inc
xchg
rolb
push
xor
test
js
and
lea
lock
cmpsb
xchg
loop
das
mov
jno
in
xor
movsl
adc
cmpsl
adc
loop
sbb
xchg
iret
mov
add
cld
sbb
pop
xchg
mov
pop
fsts
pop
jp
sub
mov
stc
out
pop
iret
scas
xchg
pushf
fistl
mov
mov
jne
out
hlt
div
mov
sub
xor
or
xlat
outsl
cmp
pop
movsb
mov
bound
adc
scas
fs
fstp
sub
xchg
xchg
mov
mov
sahf
xchg
jb
gs
sbb
mov
dec
les
or
data16
cmc
or
add
clc
dec
sbb
js
mov
jnp
xchg
lcall
scas
ret
sbb
loop
imul
or
pushf
inc
sbb
dec
dec
movsl
stos
aam
inc
ja
aad
int3
stc
imul
shrl
aaa
ljmp
inc
fdivrl
ret
cs
xchg
push
loop,pn
and
out
js
enter
fsubl
js
dec
fucomi
inc
aam
loope
ja
addr16
dec
xchg
dec
ficompl
rcrb
lahf
cmc
in
xor
sub
sub
mov
out
cltd
int3
lret
cmc
cmpsb
jg
ss
ret
nop
sub
and
mov
inc
xor
fcomi
cmpsl
mov
sbb
adc
mov
xchg
call
inc
mov
jge
jnp
arpl
std
mov
jne
clc
adc
mov
out
mov
push
test
notb
adc
mov
out
xchg
mov
add
mov
pop
xor
pop
int3
mov
or
lods
sub
pop
pop
cmp
jnp
jae
std
pop
sbb
mov
sub
jp
roll
pop
push
mov
rcrb
mov
ret
fimuls
outsb
or
mov
sub
jecxz
out
mov
pop
cmpl
or
cld
cmp
or
incb
xor
mov
out
add
call
sahf
mov
inc
jecxz
mov
or
pop
mov
enter
adc
push
dec
push
cmpsb
jmp
dec
cmp
or
push
scas
cmp
shrb
add
mov
ss
daa
xor
incl
cmc
mov
cltd
mov
inc
sbb
leave
loope
sub
loope
jp
stc
xor
xor
jbe
push
popf
jno
jb
cmpsb
rorl
sub
cmc
pop
push
test
mov
mov
ss
lock
mov
cmp
iret
add
shll
sub
out
xor
je
rcl
push
mov
pusha
mov
xor
sbb
into
int3
lret
push
mov
ja
out
dec
fcoms
mov
dec
mov
add
shr
push
clc
xchg
pop
dec
mov
mov
sbb
out
inc
jb
xlat
int
cli
sub
cmp
adc
push
daa
hlt
sbb
mov
cmc
jecxz
pushf
mov
rolb
jle
lret
fistps
dec
add
test
dec
aad
in
test
clc
data16
popf
shr
test
add
cmp
xorb
mov
lret
idivb
stos
sbb
mov
cmp
stos
hlt
sub
inc
push
test
dec
push
adc
or
enter
mov
xor
mov
adc
adcl
inc
inc
jg
fcoml
scas
xor
sub
mov
cld
push
or
lahf
push
inc
add
xchg
test
loope
stos
lahf
lock
push
xchg
pop
dec
or
xchg
or
sbbl
cld
pop
test
and
es
loop
pop
subl
fistl
mov
mov
mov
cwtl
add
inc
mov
fsubrs
aad
and
jns
xor
adc
inc
shrb
mov
jns
pop
push
or
rolb
or
jmp
mov
add
pop
pop
ret
sti
mov
insb
std
fwait
jne
dec
in
and
or
in
mov
sub
dec
movsb
mov
ret
lret
sbbb
aam
sub
sahf
sub
pushf
jne
dec
pusha
mov
bound
stos
repz
loopnew
outsb
jp,pt
push
jbe
push
xchg
aam
push
push
push
or
mov
cs
sub
dec
pushf
fildl
jmp
jg
push
loope
inc
xchg
lods
push
leave
popa
fwait
out
and
stos
repz
push
std
jmp
mov
imul
jo
cmp
xlat
mov
inc
mov
inc
mov
call
push
and
sbb
call
mov
mov
lcall
add
mov
push
lret
into
adc
jecxz
xchg
mov
push
jp
roll
sub
jle
sub
sbb
cmp
push
mov
js
dec
sar
and
ja
sarb
ret
push
jmp
mov
sbb
out
cmc
subl
fldcw
xor
mov
pop
mov
insl
jo
add
je
scas
xor
cwtl
mov
js
loop
dec
inc
add
xchg
pop
test
aam
lea
fdivs
pop
sub
loopne
xchg
icebp
mov
js
mov
in
inc
add
sti
stc
jg
adc
es
adc
jmp
adc
jne
push
mov
lods
push
mov
test
mov
jl
jmp
mov
pop
push
cmc
inc
adc
pop
xchg
adc
xor
ret
xor
mov
pop
mov
jns
loope
lea
xor
add
aam
or
xor
pop
push
sti
in
jg
mov
std
and
inc
sarb
jbe
into
sbb
push
nop
inc
adc
push
je
add
cltd
xchg
adc
aam
mov
adc
stos
in
or
xchg
cld
fildll
xor
mov
ret
mov
jbe
jne
rolb
xor
push
mulb
mov
scas
push
jle
pop
in
or
mov
mov
outsb
and
leave
in
xchg
sub
arpl
push
jle
xchg
jbe
test
ss
cmp
adc
fs
mov
xchg
xor
das
lret
fisttpl
mov
movsb
and
cltd
xchg
add
dec
cmc
inc
xchg
jae
aad
push
inc
mov
mov
pop
cmc
push
ret
dec
movsl
rol
mov
into
adc
pop
shl
and
push
sbb
inc
lds
daa
sti
mov
push
jnp
dec
ret
sar
aad
jne
mov
fcomps
jo
jno
lret
mov
or
sub
scas
cmp
rol
inc
lcall
push
adc
xor
icebp
ret
sbb
das
add
sbb
push
push
adc
test
lods
aas
addl
lods
or
lea
xor
les
jnp
jmp
ja
out
fs
call
insb
pop
pop
mull
mov
cmp
lock
cs
in
les
inc
xchg
call
hlt
movsb
push
sub
or
xchg
lahf
lahf
repnz
mov
mov
lea
data16
or
mov
inc
cmp
hlt
das
inc
adcl
dec
jns
pop
and
hlt
scas
mov
adc
int3
mov
pop
es
jmp
pushf
xchg
xchg
push
mov
stc
mov
imul
and
outsb
jp
pop
xchg
imul
dec
lods
jns
mov
aam
jno
loop
pushf
pop
dec
cs
mov
in
test
nop
mov
cld
popa
pop
mov
cmp
mov
adc
mov
lods
mov
push
aas
sub
fwait
mov
and
adc
test
xor
mov
mov
pushf
mov
fistpl
movsb
insb
sbb
rep
mov
add
push
addl
test
and
repnz
nop
or
fadds
test
push
popf
and
pop
mov
xor
mov
pop
pop
cmp
lods
mov
outsb
test
push
and
jg
mov
and
pop
jmp
mov
sbb
outsb
fstpt
dec
notl
lods
pop
out
xor
imul
ja
xchg
inc
mov
in
xchg
shl
lahf
push
mov
cwtl
push
rorl
xlat
fistl
daa
jno
jnp
bound
or
addr16
xchg
cmp
xchg
xlat
push
out
mov
stc
ja
dec
push
jl
in
add
sub
clc
inc
insb
mov
aam
xor
idivb
and
scas
repnz
add
xor
xor
fwait
in
push
jp
or
call
pop
and
fbld
loopne
inc
add
push
or
outsl
insb
aaa
dec
xor
decb
roll
test
std
adc
imul
insl
xchg
jnp
sbb
pushf
pop
and
adc
lcall
adc
test
mov
ret
pop
test
mov
cmp
les
xor
mov
repz
sbb
mov
adc
out
inc
insl
jl
test
xor
jmp
ss
daa
xor
or
fadds
jae
mov
xor
mov
sbb
sub
cmp
cld
jne
movsl
cmp
js
aas
push
in
dec
sub
xchg
inc
adc
and
inc
cltd
sbb
andb
and
mov
ret
jb
adc
adc
mov
push
mov
push
outsl
testl
pop
jg
add
and
lea
cmp
mov
push
lcall
fcoms
out
xor
and
jg
push
sbb
insb
push
das
into
xchg
push
bound
fdivrp
sarb
add
cli
pop
xchg
push
aaa
bound
insl
mov
imul
test
ret
sbb
dec
sub
push
wrmsr
mov
inc
pop
mov
sarb
mov
sub
in
adc
ljmp
mov
fmull
pop
out
icebp
mov
test
fists
pop
dec
mov
push
sub
cmp
pop
icebp
mov
push
jb
mov
ds
dec
xchg
jle
push
push
adc
in
pop
jl
rcll
push
xchg
nop
mov
leave
repz
or
xchg
pop
in
fcmove
rol
jbe
xor
adc
hlt
sbb
test
lret
dec
stos
sbb
xchg
inc
adc
loop
pop
adc
ret
dec
addr16
jecxz
inc
in
inc
cli
fistps
lds
mov
pop
in
mov
aas
fwait
in
fbstp
push
sub
sub
cmp
cs
xor
aaa
sbb
adc
mov
cmpsb
mov
add
add
inc
call
clc
jns
or
pop
cltd
and
add
loop
gs
mov
pusha
jp
bound
xchg
aad
xchg
cmpsb
xchg
mov
adc
fcmovbe
pushf
jle
pop
cwtl
fwait
pushf
jg
in
clc
arpl
repz
add
ja
and
popa
cld
cmp
fwait
cmp
dec
pop
lret
sbb
mov
mov
fisttpl
push
pop
and
mov
sub
repz
lock
imull
mov
dec
lret
push
push
fs
loopne
cwtl
aaa
sub
cmp
clc
les
jle
mov
inc
hlt
loopne
iret
mov
sub
inc
addr16
mov
popa
mov
push
sbb
cli
insl
out
shlb
sub
cwtl
cmp
push
out
aas
xorb
seto
inc
jg
pop
push
mov
stc
jp
cltd
push
and
int
pop
nop
push
dec
xor
mov
mov
mov
cs
inc
adc
pop
inc
adc
or
or
repnz
div
enter
cmpsb
mov
mov
stos
or
das
xchg
es
orb
repnz
dec
test
push
mov
push
xor
xchg
lret
adc
cmp
call
push
bound
jp,pt
sarl
dec
mov
cmp
mov
sbb
fisttpl
scas
mov
dec
out
in
pushf
subb
adc
cmp
and
aam
roll
fldcw
xor
lahf
in
or
mov
cmc
fistpl
add
xchg
aad
dec
xchg
je
sti
and
push
out
aas
frstor
push
sbb
adc
icebp
out
sbb
iret
mov
mov
cmp
cli
xor
jmp
xchg
add
jb
or
adc
stos
xor
mov
iret
cmp
or
or
dec
xchg
test
xchg
pusha
mov
adc
test
cmp
int
cmp
sbbb
sub
sbb
enter
jnp
mov
jge
loope
adc
dec
inc
xchg
ret
or
jne
xor
or
jecxz
adc
mov
psrlq
lcall
sbb
mov
adc
mov
xor
sub
dec
aam
in
test
jb
outsb
gs
notl
sbb
dec
add
mov
xor
push
mov
mov
popa
out
sbb
adc
push
xchg
mov
push
imul
mov
das
cmpsb
push
jmp
call
stos
adc
pop
ljmp
pop
hlt
cmp
or
jg
jl
pavgb
popa
es
sub
push
sbb
js
stos
pop
or
pushf
movsl
insl
jge
in
aad
mov
sub
adc
scas
sbb
mov
adc
mov
xchg
mov
shll
scas
mov
or
fstpt
cltd
adc
jge
daa
sbb
mulb
xor
xchg
mov
insl
jae
cmpsw
sbb
pop
es
scas
mov
outsb
ja
bound
shll
pusha
mov
shll
cld
cltd
xchg
mov
out
sub
push
add
popf
mov
pop
pop
cmp
loope
add
incb
sub
cmpxchg
sbb
cli
nop
cld
jl
mov
pop
sub
gs
sbb
pop
mov
xchg
test
pop
cmp
dec
pop
ret
xchg
loope
pop
fistpl
mov
mov
push
subb
sub
inc
jge
ss
pop
sub
andb
xor
pusha
lods
jmp
sub
add
lock
and
fsts
shr
test
mov
jp
or
ja
push
pusha
dec
fidivs
adc
sbb
stos
fs
mov
mov
pusha
scas
pop
jg
sub
out
and
xor
pop
and
mov
into
sbb
pop
call
test
or
stos
idivb
jns
fs
popa
jo,pn
push
iret
and
iret
in
cmp
ja
cld
ret
sub
push
xchg
push
push
jg
mov
sbb
adc
and
dec
xchg
sbb
fbstp
ss
lret
jae
pusha
dec
in
in
bound
addr16
cmp
inc
xlat
rol
mov
fwait
xor
stc
pop
xchg
sbb
add
dec
testl
mov
outsl
pop
adc
arpl
cld
xor
pop
pop
jnp
mov
jmp
push
mov
fnsave
cmp
lret
mov
in
std
push
dec
fimull
pusha
xor
jg
loop
mov
jno
in
fistpll
mov
imul
ss
push
cs
int
fimuls
ret
mov
sahf
xor
push
not
cmc
jae
dec
adcb
sub
in
push
jmp
inc
sarl
shrl
sti
inc
pop
mov
dec
and
lds
repnz
pop
jb
xor
aaa
test
adc
add
insb
in
mov
sub
sub
add
xlat
ss
test
repnz
addr16
fistpl
add
outsl
test
mov
lods
jo
aas
xor
testl
popf
jle
xchg
xor
push
push
fmuls
mov
push
ret
push
pop
jns
int
add
scas
dec
jnp
sti
pop
jg
ret
sub
sbb
stos
push
jg
xor
test
daa
mov
pop
jecxz
test
negb
cmpsb
cmp
pop
xrelease
pushf
lods
insb
aad
stc
cmp
add
rol
ret
ds
cmpsl
imul
inc
das
imul
pusha
ljmp
push
inc
jns
mov
lret
or
bound
adc
out
xchg
sar
jmp
push
inc
out
push
or
mov
xor
mov
adc
insl
jle
hlt
arpl
xchg
aas
mov
neg
out
jns
mov
insb
in
lds
aam
loop
loop
adc
jge
add
cmp
insl
popa
stos
or
aas
jge
or
mov
sti
or
cld
fcoml
pop
dec
lret
enter
adc
mov
cmp
test
and
jno
addr16
lret
lcall
mov
dec
stc
mov
arpl
mov
add
mov
push
cmpsb
iret
scas
mov
mov
movswl
pop
adc
xchg
out
push
nop
nop
jg
int
sbb
out
xchg
sub
push
xchg
nop
xchg
inc
je
sbb
sarb
call
popf
lods
imul
fstpl
xchg
enter
mov
sbb
cmpsl
ret
jb
inc
mov
xlat
cmpb
mov
sbb
jns
fisubs
loop
push
jg
aaa
leave
filds
loopne
mov
inc
je
popf
ss
mov
lods
sub
and
or
jae
add
xchg
mov
mov
jbe
sbbb
loop
xor
hlt
addr16
jne
or
and
xchg
or
lret
cmp
subb
mov
cmp
add
dec
jne
mov
jmp
negb
mov
push
mov
ljmp
std
lods
lods
leave
fadds
std
mov
js
push
iret
fdivl
pop
popl
jle
test
or
jae
andl
pusha
and
into
cmc
jmp
or
xchg
sar
je
imul
jmp
stc
mov
inc
pop
inc
out
out
cmp
in
mov
pop
aaa
cmp
pushf
mov
push
push
loopne
test
cwtl
in
test
xchg
mov
xchg
cld
sbb
outsl
dec
lahf
pusha
sub
imul
cmp
outsb
push
paddsb
pop
inc
sbb
out
sbb
sahf
mov
out
xor
push
or
jne
add
add
push
scas
test
test
scas
addr16
sarb
sbb
inc
loop
push
ror
neg
out
or
inc
lods
push
inc
and
mov
enter
imulb
cmpsb
fstpl
pop
xchg
xchg
inc
pushw
movsl
add
jl
pop
fiadds
es
aaa
jbe
movsb
pusha
lcall
in
or
idivb
pusha
xor
loopne
pop
and
lcall
cmpsb
in
xchg
je
push
out
fs
adc
not
pop
fs
add
repz
pusha
js
test
cltd
sbb
push
inc
popf
jmp
pop
stos
int3
mov
ja
mov
or
xchg
gs
lea
cmp
inc
in
sub
lcall
inc
mov
aas
cli
out
mov
jp
add
inc
sbb
adc
sahf
insb
mov
adcb
sti
pop
fdivs
or
add
push
push
cld
mov
sub
test
add
rcr
and
cltd
mov
int3
rcrl
sub
sahf
xor
movsb
add
cmc
xor
dec
int
cmp
and
mov
mov
dec
inc
xor
mov
jnp
roll
push
sti
aad
rorb
fistpl
mov
cmp
outsb
jmp
stos
or
xor
or
push
cmp
xchg
jmp
xchg
ret
dec
dec
test
push
adc
xchg
xchg
and
fs
push
mull
xor
rcrb
xchg
enter
leave
adc
sar
arpl
test
jmp
mov
jp
and
fbld
cwtl
insl
stos
and
inc
inc
lcall
out
outsl
jae
aas
xchg
inc
xchg
lcall
or
into
xor
and
call
mov
lds
iret
xchg
xor
les
jns
mov
fs
loopne
jbe
mov
loop
cs
insl
iret
sbb
mov
inc
pop
cmc
sub
ds
mov
jp
call
insb
xchg
push
push
push
idivb
fimull
fimuls
out
test
sbb
xchg
push
push
shlb
pop
jbe
les
push
and
iret
pop
mov
idiv
popa
xor
mov
mov
mov
jecxz
adc
xor
pop
mov
jo
hlt
lcall
mov
cmc
xchg
mov
mov
test
or
std
icebp
imul
push
push
and
mov
mov
insl
sarl
inc
mov
xor
out
mov
or
jo
cmc
and
fists
addb
repz
mov
movsl
adc
fisubl
mov
sbb
in
and
sub
jge
push
in
insb
lods
mov
test
das
sbb
mov
fwait
cmp
mov
daa
mov
lea
imul
loop
sbb
mov
mov
push
sbb
inc
cmc
movb
add
testl
xchg
in
pop
dec
popf
xchg
jne
mov
dec
sbb
push
sub
fisttpll
dec
insb
sub
int
jbe
pop
inc
stos
pop
xchg
cwtl
es
sbb
mov
and
push
in
in
jno
gs
shl
ja
push
add
and
pop
push
mov
pop
ljmp
push
sub
jle
xor
scas
pushw
mov
jecxz
add
and
xor
out
ds
mov
rcl
ficompl
jmp
fdivrl
dec
lods
in
sbb
hlt
dec
xchg
mov
mov
xor
jle
inc
test
lock
and
out
orl
mov
dec
rcrl
cmp
cmc
out
aam
aad
and
sub
xlat
adc
out
and
and
add
andb
xchg
adc
or
pop
xor
je
out
int
and
test
fistpll
ljmp
sbb
cmp
test
hlt
inc
mov
jl
nop
and
je
and
je
leave
cmp
addl
mov
pusha
mov
pop
and
enter
cmc
mov
adc
cmpsb
aam
and
xchg
mov
insb
adc
mov
pop
adc
jecxz
sub
adc
lods
mov
pop
jge
pop
dec
enter
repz
in
pop
daa
jnp
mov
pop
jmp
mov
adc
pop
bound
dec
push
push
jp
xchg
dec
pop
or
icebp
and
xchg
cmp
sbb
cmp
push
dec
xor
xchg
dec
sbb
mov
push
leave
out
mov
dec
in
loop
cld
aas
push
pop
aad
jg
addl
lea
mov
pushl
fstpl
into
inc
push
testl
scas
jae
jmp
dec
aad
cwtl
movsb
icebp
jne
dec
push
push
loope
das
push
dec
nop
mov
xor
in
and
subl
into
repnz
add
inc
jns
aad
aaa
mov
js
fidivl
or
push
xlat
jbe
enter
pop
decb
adc
test
addr16
stos
xchg
sti
fcomp
lods
push
jl
ss
jb
pop
lock
mov
shll
jg
fs
call
dec
sub
jg
cltd
int
notb
push
push
fisttps
push
push
cmp
mov
add
inc
sub
xchg
push
mov
xlat
and
xchg
out
rolb
inc
mov
push
jnp
cmpsl
sahf
lods
push
sbb
mov
das
push
repz
fdiv
xchg
and
push
and
xlat
or
push
mov
mov
or
ds
loope
xchg
jb
jne
int
lret
mov
dec
cmp
mulb
inc
std
fsubrl
and
inc
mov
incb
dec
dec
loope
jl
cmp
loop
jp
out
lods
sbb
jb
insb
push
pop
mov
rcrl
fdivs
repz
pop
or
add
pop
stc
mov
rcrl
mov
loope
mov
adc
cmpsl
fsubrl
outsl
inc
flds
or
jg
fcom
or
or
pop
inc
adc
or
pop
imul
cmp
scas
loop
testl
adc
sbb
cmp
jl
cmp
mov
jb
int3
jle
cltd
xchg
mov
adc
mov
mov
sub
jp
jmp
fistl
insb
adc
dec
mov
and
das
iret
xchg
test
repnz
jb
test
or
add
adc
adc
negb
int
mov
mov
sub
inc
mov
stc
pop
sub
subl
jle
or
and
out
xchg
int3
and
stos
jmp
test
fsubp
test
pop
pop
ret
lods
sahf
mov
pop
cmp
mov
mov
stc
mov
xchg
gs
xchg
clc
cmp
outsb
mov
idiv
or
xlat
mov
xor
inc
fwait
outsl
adc
dec
pop
rolb
xor
test
cwtl
add
cmpb
std
push
lahf
mov
out
arpl
fistps
sahf
test
orl
ret
mov
mov
hlt
push
push
and
cmc
adc
lea
push
test
rcrb
fsts
and
or
in
inc
neg
stc
sub
inc
push
aaa
dec
test
gs
dec
lret
xor
fs
push
jbe
pop
das
in
addr16
fcmovu
cmp
mov
repz
push
mov
sub
popa
je
rcrb
cmp
cs
sbb
test
cmpsl
cs
xchg
sahf
lods
outsb
fidivs
sbb
jae
icebp
imul
push
shr
pop
jo
xchg
pushf
mov
lods
xchg
or
notb
pop
pop
mov
sbb
cwtl
jg
jbe
shlb
xchg
cld
mov
lods
dec
cmc
xor
enter
pop
dec
inc
pop
dec
ss
jo
xchg
pop
leave
or
and
ljmp
out
pushf
stc
lcall
mov
inc
xor
fisubl
movsl
aad
jmp
xchg
jle
or
mov
jo
ret
js
mov
sub
sub
lret
mov
cwtl
add
inc
jmp
aaa
fbld
imul
cmp
cwtl
push
lret
pop
cmpsb
mov
fwait
mov
and
pop
jnp
adc
jecxz
lret
out
jns
dec
insb
xor
lcall
pushf
in
mov
das
jnp
xchg
adc
cli
bswap
and
adc
leave
sbb
push
popa
inc
out
flds
jno
ja
adc
sbb
pop
in
je
ficompl
addr16
fidivs
lds
in
and
loop
xchg
mov
in
int
xor
sbb
mov
lcall
sub
sti
xor
out
notl
cli
call
test
push
insb
and
pop
bound
iret
push
mov
jnp
pusha
inc
add
jl
xchg
outsl
fcom
scas
mov
subl
dec
js
mov
in
aas
test
and
addr16
outsl
outsl
and
inc
repnz
sbb
push
pop
es
fdiv
scas
subb
jb
cmp
fwait
mov
ja
mov
push
adc
stos
movsb
adc
daa
pop
pop
pusha
pop
cmp
jp
sbb
pop
sbb
lret
sahf
add
das
insb
mov
ret
jo
mov
ret
xchg
mov
or
xchg
add
nop
in
adc
adc
dec
push
mov
cmp
lock
pop
mov
push
fistps
or
ret
jl
push
mov
xchg
mov
ret
xchg
sbbb
outsb
lret
ret
mov
lds
mov
mov
or
stos
mov
es
adc
repz
sub
mov
mov
sbb
mov
test
jg
jmp
ret
dec
lods
test
fisttps
lods
pusha
fsubl
imul
jnp
add
icebp
int
lods
xor
sbb
aad
shufps
andl
sarb
inc
outsl
xchg
mov
icebp
rorl
and
add
sub
cmpb
push
push
push
jb
cmpsl
mov
xchg
jecxz
add
sbb
xor
adc
add
or
imul
ret
test
sbb
adc
pop
pop
aad
xchg
mov
inc
push
mov
dec
popf
adc
lret
and
xor
sti
or
loopne
outsl
or
packssdw
dec
aam
sbb
cmpsl
mov
push
and
sti
xchg
and
test
cmp
fnstenv
mov
cmpsb
xchg
and
and
gs
fidivl
adc
mov
cmpsl
fstl
insb
push
push
jns
insl
push
pop
cmp
enter
pop
mov
mov
test
push
xchg
push
sarl
mov
sbb
mov
scas
push
mov
pop
xchg
imul
pop
or
in
test
push
fdivr
push
shlb
push
test
sbb
cmp
repnz
jl
dec
lret
mov
fisttps
adc
and
xlat
xchg
insl
push
sub
sub
and
sbb
jp
add
jae
in
inc
loop
jbe
adc
adc
push
cmc
and
cwtl
or
push
xor
scas
inc
pop
jmp
movsl
add
iret
pop
es
mov
je
xor
adc
adc
push
and
stc
sbb
mov
mov
pusha
jl
fs
imul
ja
arpl
in
stos
sahf
ja
movsl
lock
sub
rorb
or
xor
scas
dec
das
dec
outsl
add
xor
inc
pop
shll
mov
mov
gs
arpl
orb
sub
xchg
sub
cmp
sahf
out
call
mov
dec
orl
xor
add
fdiv
mov
popf
aas
push
sbb
mov
jo
dec
xchg
lock
in
add
lods
xchg
fneni(8087
imul
lret
sbb
mov
imul
mov
mov
jbe
lods
pop
cld
mov
dec
clc
mov
dec
aad
in
nop
insl
std
mov
sub
adc
mov
xchg
arpl
mov
jle
ljmp
mov
lods
je
mulb
xchg
push
mov
sbb
cmp
test
xchg
les
jge
dec
jp
lock
xlat
xor
sbb
hlt
fs
jl
adc
aas
icebp
xlat
sbb
or
and
push
adc
sbbb
sbb
pop
xor
int
fs
je
in
mov
add
xchg
push
mov
pop
and
pusha
mov
cli
sbb
aaa
aad
rolb
cs
and
mov
das
outsb
ficomps
or
mov
lock
subb
loope
mov
jecxz
ret
repz
cs
movsl
mov
xor
daa
into
jmp
fsubr
mov
sub
fldt
movb
dec
orb
mov
push
mov
loope
repnz
lods
popa
mov
in
dec
xor
aas
mov
movsb
pop
push
bound
mov
jecxz
jge
icebp
js
mov
ss
and
jbe
imul
lea
dec
pop
dec
incl
cmp
mov
in
or
dec
mov
hlt
xchg
stos
xor
gs
sub
cmp
mov
xchg
bound
jg
sbb
add
arpl
and
and
leave
shll
out
add
lock
notb
mov
inc
cmp
push
push
mov
dec
das
pop
andl
rclb
js
nop
hlt
iret
sub
gs
fnstsw
or
sarb
sub
jl
mov
xchg
cmp
insb
in
je
adc
push
add
sbb
and
push
int
sub
lods
fistpll
mov
fmuls
data16
call
adc
int
subl
int
inc
test
add
jae
push
xchg
sub
lods
cmp
dec
bound
les
mov
mov
pop
mov
xor
push
lods
jns
mov
add
pop
xchg
in
pop
jns
dec
in
sbb
out
dec
mov
xchg
mov
mov
pusha
pop
not
arpl
xchg
mov
sub
xor
push
aad
mov
shlb
lcall
repz
hlt
hlt
aam
pop
aas
mov
inc
ret
cmpsl
aam
adc
repnz
mov
and
sub
and
add
mov
add
mov
leave
sub
sub
adc
in
cmp
sbb
mov
xor
sub
jns
mov
js
mov
pop
cmp
insb
add
sub
repz
imulb
sub
es
or
cli
dec
inc
add
jle
in
icebp
js
jmp
loope
aam
sarb
lahf
scas
test
cli
sbb
ret
add
dec
lret
inc
push
mov
jnp
test
das
mov
and
sbb
test
xor
cld
sbb
xor
add
push
iret
into
xchg
add
fwait
rcl
ds
mov
div
dec
aas
or
xorl
and
jne
mov
xor
pushl
addl
xchg
sti
jae
and
sub
pop
xchg
mov
jo
sbbb
add
stos
cmp
and
aam
insb
int3
dec
mov
shlb
decl
cmpl
xlat
jle
and
pop
inc
jae
sbb
inc
fisubl
and
out
dec
xor
xor
test
xor
dec
test
dec
loop
mov
iret
in
mov
cmp
jae
pop
sub
pop
sub
jmp
fcoml
es
inc
fwait
sahf
clc
test
movsl
aad
enter
fildl
pmulhuw
adc
add
mov
inc
mov
jae
inc
adc
xchg
sbb
pop
push
and
mov
sbb
stc
ficompl
mov
xor
push
add
movsb
mov
inc
movsb
call
negl
jo
loope
jno
pusha
jecxz
scas
mov
xchg
imul
cld
xchg
add
mov
and
out
ljmp
mov
adc
test
ret
xchg
pop
add
mov
xorl
mov
daa
mov
sbb
sub
les
mov
cmc
stc
adc
xor
imul
test
orl
adc
dec
bound
mov
cwtl
adc
sub
add
bsf
cmp
mov
dec
std
pop
cmp
lods
cwtl
pusha
jp
xor
pusha
jge
jnp
xchg
push
xchg
dec
call
dec
cli
jmp
mov
pushf
inc
sbb
or
jnp
jae
popa
outsl
xchg
inc
cmp
mov
inc
les
inc
cltd
and
xlat
addl
popf
stc
xchg
in
dec
sub
mov
lods
mov
hlt
jno
sbb
aam
aas
mov
jg
int
xchg
divl
add
rorb
pushf
pop
pop
dec
aas
sbb
stos
xor
mov
sbb
test
mov
pop
mov
add
mov
mov
into
inc
pop
dec
or
mov
inc
adc
push
push
dec
xor
sub
std
in
push
xchg
test
cld
std
loope
mov
cli
push
xchg
lock
mov
inc
jbe
out
adc
push
cmp
loope
mov
arpl
in
and
sahf
mov
add
jp
mov
enter
dec
cld
add
std
sarb
dec
push
inc
out
pop
sbb
adc
mov
and
mov
out
push
and
int
imul
push
and
aad
adc
int3
add
xchg
fldl
imul
mov
dec
lods
clc
dec
mov
rclb
popf
jle
imulb
in
mov
xchg
repz
and
mov
inc
jmp
sahf
pop
std
add
mov
lds
mov
test
ret
pusha
sbb
dec
sbb
mov
xor
or
lea
decl
movsb
cwtl
push
insl
jg
dec
test
mov
test
ret
pushf
hlt
sub
and
push
xchg
addr16
push
ja
cmp
fildll
add
mov
es
das
leave
repnz
in
pop
cmp
and
sub
lret
loope
lods
cmc
and
pushf
lea
dec
cmpsb
xchg
shl
lods
fucom
sbbb
pop
jp
dec
ss
xor
stos
inc
addr16
popf
mov
inc
into
xor
jmp
aas
int
mov
in
adc
xchg
sbb
xchg
repz
pop
loope
mov
adc
push
mov
pop
jl
pop
mov
mov
and
fdecstp
or
xchg
push
and
push
lods
out
add
jns
rcrb
mov
dec
in
sbb
cmp
push
test
push
adcb
pop
or
mov
jno
push
mov
jns
arpl
mov
push
or
shll
lock
aaa
mov
repnz
in
loopne
loop
mov
sbb
sbbl
xlat
mov
push
iret
xchg
inc
and
addr16
sahf
dec
inc
not
fcoms
test
popa
push
mov
shlb
push
add
push
popf
dec
jae
popa
jl
cmpsb
fs
and
arpl
ret
stos
lret
cmc
pop
jbe
mov
dec
out
and
int
push
xor
in
xchg
aas
sti
pop
jno
mov
xchg
add
adc
das
inc
clc
popf
xchg
dec
xlat
and
cwtl
in
mov
fadds
mov
mov
shll
dec
in
popa
add
dec
cmp
pop
push
je
jmp
fstpl
jns
in
data16
xchg
mov
je
sahf
test
adc
out
in
je
imul
sub
stos
orb
mov
push
aad
repnz
push
js
fldl
inc
nop
or
sbb
movl
fiaddl
mov
jne
mov
int
pushf
inc
bnd
cmc
pop
loop
xchg
leave
mov
test
xchg
stos
shlb
out
daa
add
loopne,pt
icebp
test
lret
or
jl
in
cmp
int3
cmpsb
adc
test
rorl
mov
jnp
dec
push
mov
and
fs
nop
aam
mov
sub
xchg
jle
into
xor
imul
addr16
xor
or
xchg
lds
in
dec
in
and
push
xor
xchg
inc
sahf
mov
fldt
add
in
shrl
outsb
or
aas
hlt
or
test
sub
lds
xchg
xlat
or
std
push
jbe
pop
aaa
dec
jmp
mov
enter
out
jmp
enter
xlat
les
outsl
and
sbb
loop
ljmp
cmp
adc
imul
push
loopne
dec
jp
shll
mov
mov
jmp
es
dec
add
inc
lret
or
push
ss
jbe
adc
mov
divl
inc
lea
jp
daa
xchg
push
dec
or
ss
repnz
ss
push
out
fwait
rorb
xchg
jge
out
lcall
sti
and
or
inc
push
xor
scas
xchg
inc
out
ret
lods
xor
jmp
push
subl
adc
std
arpl
repz
push
test
aad
scas
inc
jmp
and
insb
gs
mov
movsb
scas
clc
lcall
and
arpl
fildll
leave
xor
and
and
das
pushf
out
jge
pop
jo
insb
dec
sarb
shlb
shrb
inc
jecxz
popf
adc
lcall
rcrl
mov
lock
jg
jmp
jmp
adc
mov
les
push
fxch
movl
and
int3
decl
and
push
push
neg
sbb
and
pop
outsb
pusha
dec
adc
push
xor
xchg
cmp
adc
inc
xchg
lret
leave
pop
push
jb
mov
push
iret
cwtl
xchg
push
mov
push
pop
adc
push
xchg
jge
adc
add
jbe
mov
je
jo
faddl
clc
sbb
enter
pop
test
inc
mov
fimuls
dec
aam
adc
inc
adc
lds
xchg
xchg
lock
outsb
xor
loop
lea
shll
jle
pop
add
and
push
ja
lods
push
mov
fwait
addl
sub
icebp
mov
or
mov
xor
sbb
inc
aad
daa
out
test
ficoml
xchg
xor
lret
push
sub
mov
and
insl
das
cmpsl
rcrb
sti
fmul
fisubrl
divl
add
push
aas
xor
jecxz
pop
jge
outsl
sub
shrl
ja
pushf
push
xchg
or
leave
shrl
ljmp
cmp
fldl
jg
insl
or
ss
sti
stos
mov
inc
loop
fwait
out
aad
sub
cmp
incb
stos
inc
ja
jbe
and
sbb
mov
repz
in
vpmacssdd
stos
int3
test
and
xchg
pop
enter
push
mov
lods
iret
pop
cmpl
in
mov
and
fldt
jg
jne
cmp
jecxz
in
lea
pop
inc
sub
cmp
dec
outsl
sub
or
outsl
ds
andb
jbe
xlat
fwait
in
sahf
jnp
or
mov
insb
std
mov
arpl
push
sti
ja
call
out
pop
xor
rclb
jno
jbe,pn
adc
mov
std
jge
in
mov
int3
iret
rclb
inc
xchg
mov
dec
and
pop
mov
lret
and
add
dec
pop
adc
cmp
or
jb
out
cmp
in
unpcklps
test
lcall
cltd
ds
pop
sbbb
stos
pusha
dec
adc
mov
sbb
add
lret
in
enter
mov
xchg
in
popa
sub
mov
pop
mov
sub
stc
push
pop
lea
sbb
sbb
sub
fnstsw
push
mov
xchg
addl
mov
in
outsl
xor
adc
dec
lret
mov
xor
je
xchg
pop
in
popf
adc
mov
stos
inc
xlat
ret
sub
dec
fs
sqrtps
sahf
add
cmpsl
bswap
xorb
cld
pop
mov
iret
in
sbb
xlat
cltd
jbe
inc
cltd
mull
fstpt
cld
xor
loop
xchg
test
sub
stos
mov
and
push
test
jo
cld
xchg
mov
adc
jmp
jg
fs
xchg
mov
dec
in
aas
xchg
lock
add
inc
std
pop
xchg
pop
jo
sub
data16
sbb
dec
mov
sbb
xchg
xchg
cmpsb
mov
inc
add
sub
jno
jne
arpl
je
fwait
arpl
add
int
in
ds
xor
jecxz
ret
inc
xor
std
adc
cs
push
jo
scas
mov
fsub
push
lds
or
les
out
in
icebp
pop
mov
cmp
int3
mov
xor
rclb
dec
jno
inc
mov
aaa
push
iret
dec
mov
xor
adc
or
cli
pushf
or
aas
fmuls
fwait
mov
fmulp
jne
fimull
adc
ret
and
lahf
loope
mov
lds
mov
scas
test
pop
xchg
cmp
dec
js
neg
xchg
gs
arpl
clc
jmp
mov
sbb
pop
adc
dec
cltd
dec
push
in
fldenv
sub
mov
mov
outsl
sbb
and
hlt
cmp
sub
mov
dec
imul
mov
cmc
imul
xchg
sbbb
push
mov
adc
fimull
jg
jg
fiadds
repz
push
xchg
nop
jne
outsb
repnz
dec
add
mov
lods
dec
xchg
sbb
sti
pop
lock
mov
jmp
sahf
cmp
fwait
inc
daa
enter
fwait
inc
adc
cmc
decb
add
loop
aad
jge
insl
jb
add
xchg
frstor
jge
insb
sbb
push
adc
push
leave
dec
pushf
ja
xchg
lcall
xchg
or
mov
mov
ja
inc
or
clc
std
ffreep
lahf
ret
inc
push
daa
pop
mov
cmp
jne
insl
sbb
pop
pop
in
mov
shll
mov
popa
out
rol
pusha
ficompl
cmpl
ljmp
test
sbb
mov
pop
adc
adc
mov
lds
mov
mov
jb
push
ret
jno
sub
mov
push
sahf
xchg
aad
mov
pop
call
mov
filds
in
cwtl
sti
add
fmulp
stos
and
xor
dec
xor
stos
out
mov
add
mov
enter
out
jle
sub
ret
jne
push
leave
mov
icebp
jmp
addr16
test
push
inc
sbb
nop
negb
or
pop
cs
push
sub
cmp
pop
mov
mov
dec
jle
add
cmp
aam
dec
clc
test
jecxz
mov
test
add
lahf
testb
or
mov
jne
inc
repz
lods
mov
sbb
push
or
or
outsb
push
cmp
dec
add
test
fs
xchg
fisubl
mov
adc
jbe
xor
stos
stos
mov
iret
xchg
mov
arpl
pop
jnp
jmp
andb
fstps
push
insb
loop
pop
cmpsb
in
js
leave
xchg
inc
mov
xor
adc
lea
es
cmc
ds
std
dec
out
push
sbb
test
and
cmpsb
cmpsb
pusha
lods
push
xchg
sub
mov
pop
push
rcll
inc
inc
sbb
nop
imul
push
mov
xor
popf
push
xchg
addr16
aaa
out
aad
loopne
cli
test
out
jae
add
adc
add
and
mov
adc
cltd
pop
clc
movsl
icebp
gs
push
gs
dec
in
mov
push
mov
stos
mov
cs
xchg
pop
inc
lock
mov
call
xchg
lahf
repnz
out
mov
xchg
not
imul
pop
stos
ljmp
sub
push
js
sub
sbb
mov
push
mov
mov
adc
jb
aas
jns
into
mov
push
in
orl
aam
jns
xor
jecxz
imul
jbe
jns
mov
je
mov
dec
std
adc
or
in
sbb
xor
add
push
jmp
push
xchg
pop
idivl
xchg
lret
jns
xchg
ds
dec
inc
popa
xor
pop
pushf
jg
adc
cmpsl
aas
xchg
jle
jb
mov
dec
pop
xor
imul
std
pop
hlt
loop
pop
movsb
sub
mov
sub
sbb
aaa
push
dec
cld
jne
push
pop
dec
frstor
xor
push
pop
pop
xchg
popf
ret
lcall
test
in
adc
scas
cmpsb
push
pop
ja
jbe
pop
mov
sub
add
and
pop
push
cld
pop
mov
out
pop
mov
out
daa
aad
shl
inc
xor
aad
xchg
sahf
das
sub
rcll
inc
lds
aas
fwait
jp
adc
cmp
loope
lods
cltd
xchg
sub
pusha
and
js
insl
mov
lcallw
out
pop
mov
and
lfs
xor
push
mov
nop
inc
lret
js
jbe
sbb
in
and
mov
int
scas
inc
push
jg
cmp
lds
cmp
xor
dec
mov
cld
leave
out
cmp
pop
aam
xchg
lahf
xor
lahf
xchg
rol
pop
xorb
mov
pop
sbb
outsb
adc
dec
jbe
clc
dec
subl
jb
push
mov
xchg
ret
insb
or
in
test
sbb
test
cmp
lods
stos
repnz
movsb
lahf
adc
jnp
jl
add
push
jne
sub
sbb
mov
fnstsw
sub
inc
cmp
fiaddl
aad
fistps
pushf
hlt
and
sub
in
jg
or
lret
push
repnz
xchg
mov
adc
push
lahf
addr16
ljmp
pop
lods
subb
stc
adc
decl
mov
inc
fs
sahf
adc
leave
aad
je
cmp
adc
push
mov
sub
rorb
push
into
sbb
clc
xor
iret
aas
pminub
ljmp
sub
jmp
std
fcompl
insl
pop
cmp
mov
sarb
movsl
int3
iret
repz
sbbl
and
sbb
push
outsb
xor
or
or
dec
int3
cwtl
jb
dec
or
push
enter
out
repnz
add
sub
xor
xor
mov
and
or
fidivrl
jne
test
jo
dec
cmpsb
sub
lahf
xchg
pop
adc
ja
cmp
cmp
mov
adc
add
fistpl
sub
or
mov
or
test
xchg
shl
leavew
sub
lea
pushf
push
ret
add
into
orb
repnz
or
jg
lods
out
sbb
out
mov
adc
push
call
push
mov
hlt
sti
sub
sbb
sbb
mov
jge
int3
outsl
ret
loop
pop
xor
inc
mov
xchg
xor
pusha
in
loope
add
lcall
cmp
imul
sub
dec
pop
addr16
inc
add
dec
pop
fs
mov
jmp
xor
xor
xor
pop
ret
xor
jecxz
orb
jb
jae
dec
icebp
or
adc
fs
or
outsl
inc
and
popa
lods
aam
mov
push
bound
add
cmp
xchg
ret
lcall
roll
or
push
xlat
cld
adc
fdivrs
xlat
sub
addr16
into
and
mov
mov
arpl
scas
stos
rcr
fiaddl
mov
sar
and
pop
jo
add
jno
insl
movl
push
loope
push
cwtl
push
push
and
and
ret
add
sbb
inc
or
cmp
add
fcoml
jle
cmp
mov
mov
mov
ret
je
in
add
ds
pop
arpl
cmp
lods
xchg
xchg
hlt
sbb
push
dec
and
loopne
mov
or
cltd
mov
loope
sbb
movsl
call
pop
rclb
loop
xchg
hlt
ds
adc
fsubs
cmp
jne
push
mov
add
aas
add
std
insl
jecxz
ljmp
and
dec
xchg
mov
jbe
mov
mov
testb
pop
push
cli
pop
sub
mov
jp
addr16
dec
dec
dec
dec
and
xchg
adc
adc
adc
scas
pop
and
test
mov
lods
fs
sub
fmul
mov
sub
cmpsl
push
dec
mov
pop
mov
xchg
mov
mov
xchg
aas
cwtl
jge
icebp
inc
lods
or
icebp
dec
in
xor
call
and
mov
inc
cwtl
add
test
fnstcw
jne
mov
xor
push
xor
xchg
dec
lret
je
mov
jmp
imul
lds
out
push
lods
loope
mov
test
jmp
outsl
add
sub
pop
faddp
arpl
fisubrs
mov
jle
popa
adc
or
out
xchg
sub
loop
mov
adc
les
push
xor
mov
fldl
rol
pop
push
cwtl
and
int
mov
movswl
add
bnd
xor
leave
mov
ret
xchg
imull
lods
insl
pop
mov
aas
aaa
xor
rcpps
cli
iret
xor
pop
vfmaddsubps
add
jo
nop
or
rcr
xor
mull
sbb
aas
out
inc
mov
sub
xor
add
push
pop
das
iret
inc
sub
xchg
or
outsb
push
sub
jne
or
mov
mov
push
sub
sti
push
xchg
jno
lock
add
mov
cli
cltd
cmp
mov
pop
mov
mov
sub
add
mov
inc
sbbb
std
imul
adc
add
int
pop
and
mov
or
xchg
push
popa
pop
jmp
mov
push
inc
fldcw
cmp
sbb
sbb
add
mov
adc
std
cmpsl
xchg
scas
mov
daa
xchg
pop
pop
inc
adc
icebp
xor
push
mov
lods
call
popf
cltd
jecxz
fsubp
loop
cs
daa
mov
imul
aas
cmc
loopne
xchg
js
insl
js
cmp
push
pop
jge
out
pop
call
adc
mov
push
aad
xchg
xlat
loopne
repnz
les
push
add
push
mov
push
leave
xchg
out
dec
ds
mov
imul
mov
call
add
lods
in
loopne
fbld
clc
sub
in
adc
ss
adc
mov
xchg
mov
adc
cmpl
mov
or
sub
out
or
nop
sub
pop
iret
sar
rclb
jp
icebp
pop
cmc
adc
or
and
mov
or
inc
loopne
inc
jle
adc
xor
push
xchg
mov
xchg
adc
test
popf
movsl
loopne
fsts
sbb
mov
xor
insb
scas
roll
pop
xchg
pop
loopne
inc
or
fs
jnp
lea
stos
fisttps
fldt
jae
insl
int
jmp
sub
aas
and
sbb
xchg
push
xchg
push
xor
sub
push
jo
pop
stos
ror
stos
jns
out
movsl
cmp
fdivr
push
mov
add
and
inc
int
sti
cli
or
push
jnp
or
xor
push
sub
xorb
inc
and
jne
adc
mov
mov
inc
ds
les
jo
out
outsl
imul
push
push
xor
mov
imul
xor
add
aaa
add
mov
pop
out
add
enter
mov
popa
int3
xlat
jl
das
cmp
sbb
xchg
jle
repnz
jne
gs
lea
add
push
dec
xchg
rcrb
notb
jmp
int
not
jnp
xor
mov
repnz
jne
xor
inc
lods
mov
adc
popa
lods
and
mov
lcall
cmp
xchg
lods
push
inc
jae
popl
push
in
daa
je
rolb
scas
pop
xchg
test
aad
xor
or
lahf
pusha
arpl
cld
adc
mov
lret
or
outsl
pop
inc
jnp
sub
mov
push
add
sbb
outsl
inc
jge
loope
cmc
push
in
dec
cwtl
xor
fsubs
pop
leave
loope
cwtl
push
xchg
jne
mov
xchg
mov
movsl
int
mov
push
cs
stos
shrl
das
jecxz
jbe
xor
xchg
mov
and
rclb
dec
mov
pop
push
push
adc
jnp
dec
xor
pop
ficompl
mov
jae
and
fstpl
dec
lods
mov
mov
pop
jne
popa
stc
dec
jne
lea
popa
scas
add
pusha
or
push
in
jg,pn
cmc
dec
repz
repz
mov
arpl
mov
xor
cmp
cwtl
iret
jle
pushf
out
push
aaa
out
and
dec
imul
xor
xor
adc
nop
sub
mov
test
out
test
push
and
push
pop
mov
fdivrs
mov
out
lods
pop
push
sub
lret
xchg
jmp
inc
xchg
mov
lcall
mov
scas
jmp
mov
cmp
xchg
sbb
ljmp
jge
mov
out
cmp
out
sbb
pop
cmp
push
imul
push
add
jmp
out
out
movsb
js
iret
in
stos
pop
pop
pop
pop
sti
lcall
adc
cmpsb
dec
jmp
nop
xlat
push
outsl
mov
xor
or
sbb
jp
cwtl
scas
push
ja
inc
mov
addr16
popf
mov
fs
jb
mov
add
inc
sbb
jl
sbb
or
in
xlat
push
xchg
mov
inc
enter
jno
cltd
push
stc
inc
inc
mov
mov
es
insl
ss
mov
ja
mov
or
adc
adc
add
into
fs
ds
and
lods
insl
adc
sub
test
or
lahf
xchg
push
cmp
fisubs
mov
push
jo
mov
jecxz
je
mov
lock
jo
xchg
jp
xorb
mov
mov
adc
hlt
orb
inc
adc
jo
push
xlat
std
stc
xlat
push
fst
stos
imul
es
add
lahf
test
push
jg
dec
lahf
fstpt
int
or
pop
fisubl
mov
stc
jge
iret
mov
adc
pusha
fwait
mov
sbb
sbb
testb
ljmp
inc
fs
lret
xor
inc
call
mov
bts
lahf
push
aas
jbe
pop
pop
fwait
iret
int3
popf
stos
repz
decl
dec
je
outsl
lds
int3
shl
add
mov
or
popa
or
sbb
js
pushf
push
mov
iret
lods
mov
xchg
mov
add
or
imul
fwait
sarl
xchg
sbb
pop
into
das
es
arpl
sub
push
add
push
stos
andl
out
mov
push
push
adc
or
xchg
bound
cmp
loopne
sbb
jae
inc
daa
adc
pop
dec
sbb
push
or
mov
lret
pop
adc
or
data16
jle
test
lods
push
jmp
aad
leave
and
aad
mov
repz
push
fcmove
jge
sahf
dec
incb
push
mov
inc
xor
add
addr16
jg
inc
cmp
int
decl
and
out
sarl
or
xor
repnz
mov
in
fcoml
fmuls
cltd
outsb
pusha
cmp
in
jl
push
into
mov
dec
mov
loope
mov
mov
or
ds
lds
mov
arpl
ja
cmpsl
dec
mov
fldl
xor
fucomp
xor
push
ss
mov
cmpsl
insl
sbb
jg
out
add
sarb
jg
mov
lods
lods
inc
mov
inc
xor
adc
test
mov
mov
pop
enter
ret
sbb
mov
pop
dec
inc
popa
or
pop
adc
shll
pop
sub
out
in
aas
ja
test
push
decb
repnz
inc
adc
gs
stos
or
cmp
mov
mov
pop
push
ljmp
lds
dec
in
inc
mov
enter
test
test
enter
movsb
push
xchg
xchg
sti
shlb
cmc
pop
push
jmp
pop
repnz
dec
fbld
adc
adc
mov
dec
outsl
mov
into
xchg
jmp
nop
mov
sti
stc
adc
pop
jge
dec
mov
bnd
leave
aam
mov
pop
lods
inc
or
adc
sbb
adc
pop
stos
fs
fcomp
xchg
jns
movsl
loope
xor
lea
fstpt
xchg
repnz
cmp
sar
and
mov
jge
mov
pop
and
jl
divl
aam
test
ret
xchg
pop
or
inc
jmp
ds
das
xchg
repnz
jnp
push
mov
movsb
ljmp
push
push
bound
push
jmp
xor
and
lcall
xchg
jmp
fbstp
jns
daa
dec
and
add
aad
xchg
or
lock
adc
jno
ss
popf
mov
inc
pop
pop
add
popa
pop
and
adc
xor
jo
pusha
rorl
pop
test
push
test
lock
sbb
jb
das
mov
ja
call
cwtl
outsl
add
or
dec
jg
mov
in
mov
and
or
sub
push
test
rcll
adc
adc
fidivrl
push
push
jge
movsl
inc
pushf
mov
testl
mov
jmp
mov
dec
dec
jp
adc
incl
fbld
out
lods
shl
hlt
loop
jecxz
iret
arpl
xor
imul
lods
cmp
fisttpll
mov
cli
inc
mov
mov
stos
pop
jno
xchg
or
add
jb
ret
or
cltd
inc
xor
loope
cmp
mov
dec
subb
lahf
sbbb
inc
mov
mov
fstpl
popf
xchg
push
insl
es
pop
adc
push
icebp
js
jge
inc
mov
outsl
and
xor
fisubs
xchg
addr16
mov
clc
mov
mov
orl
fidivl
or
sahf
test
dec
mov
add
fistpl
cmp
cmpsl
jb
and
mov
add
add
add
add
add
add
int
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
