pop
add
addb
sub
wrmsr
pop
push
stc
pop
mov
pusha
xchg
push
and
sbb
mov
clc
pop
fimuls
sbb
movsl
pop
xor
lahf
xorl
mov
incb
or
cmpsb
jge
insl
aaa
fdiv
inc
mov
out
push
lods
mov
lods
mov
jmp
pop
jecxz
mov
cmp
imul
aaa
andl
pop
int3
in
cwtl
sub
leave
inc
std
jle
adc
pop
push
push
mov
xchg
mov
fldz
xlat
xchg
imul
dec
mov
push
loope
arpl
dec
movsb
stc
mov
inc
mov
pop
xchg
xchg
sti
cmpl
inc
sub
jb
test
xor
dec
lds
mov
inc
mov
test
test
push
call
mov
cltd
jnp
ret
mov
out
enter
flds
push
js
push
mov
pop
cmp
out
aas
in
lret
lcall
pushf
dec
aas
addr16
inc
sahf
jae
lea
adc
add
popa
out
adc
shlb
mov
fldcw
xchg
adc
dec
adc
cld
xchg
dec
out
cltd
jmp
jno
hlt
int3
mov
popa
dec
jb
mov
mov
mov
fidivrl
pop
sti
mov
ret
lods
dec
push
add
xor
aas
je
mov
cmp
xchg
loope
pop
int
shlb
mov
fs
aaa
in
and
cmp
and
jo
cmc
call
push
flds
pop
jnp
pop
aam
std
add
out
jl
je
imul
cmpsl
ljmp
rorb
or
add
std
mov
mov
ds
adc
adc
mov
cmp
sbb
add
xor
outsb
lret
mov
loop
push
inc
xchg
scas
loope
push
aam
fcom
jmp
outsl
push
addl
popf
and
pop
mov
and
shr
adc
out
cmpsb
adc
fldcw
sbb
sbb
ret
xor
push
xor
jns
psrld
xchg
adc
add
mov
pmaxsw
addr16
shrb
add
sbb
jp
sbb
test
in
mov
xor
rorl
sti
out
jb
repz
leave
xchg
insb
jnp
xchg
bound
add
stc
scas
inc
push
or
adc
mov
cmpl
ss
mov
adc
dec
inc
and
stos
mov
ret
shl
aaa
pop
add
orps
pop
mov
loop
lcall
mov
movsb
hlt
sub
sbb
adc
stos
ret
lea
add
push
push
lret
inc
inc
adc
addr16
and
mov
fwait
test
mov
pop
cltd
and
lcall
out
jo
dec
pop
mov
lldt
mov
nop
adc
imul
and
add
adc
test
clc
jg
cli
sub
adc
js
mov
pop
fldl
jp
mov
inc
xor
jno
jae
or
xchg
xor
out
jge
dec
dec
rorb
cmp
lods
cmp
aam
pop
pushf
xchg
xor
add
cmpsl
pop
xor
fstl
cmp
xor
mov
jne
fisubl
sub
pop
sub
cmp
or
inc
es
repnz
test
xchg
call
test
test
clc
outsl
cmpsl
pop
mov
sub
nop
xor
into
xor
dec
mov
icebp
jecxz
movb
jbe
xorl
frstor
jbe
arpl
in
movsl
xor
and
aam
adc
jge
dec
test
inc
or
push
scas
or
add
xchg
leave
mov
sahf
mov
cmpsb
lret
outsl
icebp
inc
orb
dec
jge
nop
adc
jo
cmc
fbld
pop
cmp
and
inc
adc
add
cld
mov
lds
lds
sub
aas
add
iret
call
scas
sti
bound
jmp
cmc
jl
mov
add
pop
arpl
pop
test
add
jnp
loop
lds
outsl
mov
aam
mov
enter
jo
push
push
xchg
pushf
cs
xlat
insl
sub
or
adc
mov
je
mov
bound
mov
mov
inc
fldenv
ljmp
clc
pop
or
out
shr
fsubr
mov
push
jne
sbb
mov
fildll
xchg
pop
cmc
cltd
cmp
or
in
adc
jp
movsl
insl
lea
inc
insb
cmpsb
inc
mov
movsb
pop
sar
mov
pop
scas
sahf
hlt
mov
sbb
cmp
dec
push
sbbl
in
inc
sub
push
aaa
mov
xor
lods
and
movsb
xchg
mulb
pop
sub
add
lods
movsl
dec
add
dec
push
inc
test
and
or
jb
push
mov
dec
lahf
lods
mov
icebp
sbb
imulb
enter
cmc
rcrl
leave
adcl
mov
pop
cmpsb
mov
xor
sub
sub
xor
lods
jge
out
movsl
push
push
clc
or
jno
mov
cwtl
in
sarb
pop
sub
jbe
fdiv
cmpsb
lret
lret
ja
mov
mov
inc
inc
jecxz
cmp
push
and
jl
inc
cmp
jmp
rolb
mov
cltd
dec
pop
sbb
xor
fs
fcomps
aam
loopne
cld
or
test
or
das
aam
rolb
daa
sbb
adc
xor
dec
iret
sbb
jp
jns
mov
outsb
jmp
enter
daa
pop
sbb
jns
fs
lret
add
pop
pop
int
add
dec
scas
lea
or
in
and
call
or
push
sti
cmp
imul
emms
mov
jecxz
pop
sti
test
ds
in
mov
fdivs
cmc
je
sub
mov
shl
outsl
lcall
push
xlat
movsl
cmc
out
mov
test
mull
subl
inc
push
daa
outsb
xchg
or
push
adc
leave
aam
addr16
mov
jle
shr
out
add
pusha
jmp
inc
or
jne
mov
mov
sbb
cmp
dec
inc
inc
xor
out
adc
fcomip
mov
int3
inc
in
and
fsts
rclb
loope
cltd
popf
arpl
sbb
ucomiss
xor
outsl
daa
rcrb
ss
pop
fbstp
mov
les
mov
pop
out
bound
movsl
jl
or
pop
sbb
popa
sbb
inc
adc
sub
ja
push
addr16
out
lret
es
sub
loope
xchg
xchg
mov
into
adc
int3
lret
mov
loope
xchg
jle
ret
xor
or
test
sbb
subb
mov
std
push
jl
movsl
imul
jg
lret
add
lds
jmp
jg
les
cmpsb
jae
jnp
jle
imul
xor
or
aaa
inc
inc
adc
fdivp
das
aad
jl
xchg
mov
mov
cld
nop
sbb
push
dec
aas
enterw
and
fwait
rclb
pop
sbb
cmp
mov
jo
cmp
mov
and
or
mov
dec
sahf
xchg
stos
in
mov
lret
mov
or
nop
into
pop
loop
or
out
sub
sbb
lds
clc
pop
int
xchg
mov
and
xlat
popa
inc
push
out
hlt
dec
repz
int
jle
pop
push
stos
sub
das
pop
or
call
adc
cli
pop
aaa
push
inc
fwait
cmp
loope
test
ja
inc
push
inc
jnp
jo
xchg
add
orb
out
lret
jge
jl
lret
xor
cmp
xchg
xchg
ja
jnp
push
dec
repz
jnp
xchg
push
data16
cltd
dec
lret
dec
rolb
in
sti
sbb
pop
or
xor
push
sbb
addr16
pop
lds
jo
push
jmp
call
call
pop
dec
scas
dec
dec
mov
push
repnz
icebp
cmc
push
test
fisubs
inc
mov
xchg
aad
out
shlb
mov
xchg
imul
adc
test
push
mov
das
jns
rorb
clc
xchg
push
ret
dec
push
je
jne
clc
mov
push
cmp
adc
dec
dec
out
pop
push
adc
sarb
pop
sub
movsb
sbb
stos
test
dec
push
lahf
mov
push
test
adc
cmpsl
data16
bound
jo
stc
dec
and
ret
and
xchg
push
mov
mov
jns
dec
adc
sbb
adc
mov
fldl
in
mov
jp
inc
rdmsr
aas
cli
jbe
dec
add
add
lods
sti
jns
hlt
lods
fmull
je
xor
push
cltd
shl
sbb
sub
jno
add
pop
inc
mov
fisubl
mov
outsl
add
mov
cs
mov
adc
out
adc
jno
ret
inc
xchg
mov
push
xchg
xchg
loop
out
adc
sahf
iret
aas
push
movsb
loop
mov
daa
inc
dec
lods
sub
movsl
xchg
movsb
data16
sbb
ja
or
out
inc
stos
xchg
mov
push
sahf
dec
jns
jb
shll
daa
movsb
das
das
and
aas
inc
nop
sub
mov
fwait
data16
jecxz
add
pop
add
adc
mov
in
cld
fldenv
stos
sbb
fwait
incl
push
shlb
movsb
pop
stc
mov
je
ja
sub
xor
adc
shll
or
jecxz
pop
add
adc
dec
mulb
mov
add
adc
aas
out
mov
cmpl
insb
ds
scas
push
and
popf
stos
mov
mov
dec
int
pop
mov
lds
mov
push
xchg
adc
jl
je
push
enter
mov
sub
pop
leave
stos
mov
sbb
outsl
fisttpl
jb
loope
ss
fildll
pop
mov
jbe
jns
cltd
jmp
je
sub
aad
xchg
aas
lods
pop
outsl
dec
push
and
push
mov
call
out
call
mov
cmp
cmp
dec
clc
xor
sbb
xor
push
ljmp
adc
aam
cmp
jnp
xor
fcoms
jo
pop
mov
push
xor
push
mov
inc
jge
movsl
mov
pop
cmpsb
jnp
add
icebp
inc
arpl
or
jmp
mov
inc
out
sbb
jnp
loop
leave
mov
sub
mov
mov
jae
cmc
xor
cltd
out
fs
in
xchg
arpl
sbb
xor
dec
cli
mov
subb
fucomip
jp
xor
mov
mov
push
es
mov
xchg
out
pop
std
daa
xorb
lock
repnz
lcall
or
inc
sti
dec
dec
das
das
mov
nop
jne
or
and
sub
cmp
jo
repz
jne
jge,pt
or
mov
xchg
out
sarl
push
jle
sbb
stc
out
out
lds
xchg
aas
pop
aad
popa
scas
stc
aaa
lahf
iret
and
loope
cmc
xchg
les
xlat
jecxz
push
add
ret
xchg
add
jbe
sbb
imul
inc
iret
dec
insl
or
push
xchg
jmp
mov
stos
mov
loopne
xchg
cmp
test
push
xchg
mov
sub
enter
or
std
xchg
loop
dec
mov
inc
dec
sub
dec
js
and
ja
fcmove
sti
or
stos
in
cmc
js
fisubrs
dec
lea
mov
aaa
xor
hlt
into
decl
or
push
cmp
roll
in
adcl
sub
test
fld
fwait
jmp
mov
cmp
jns
jbe
jne
shl
xchg
mov
notl
jb
xchg
and
aad
int3
xor
inc
xor
jmp
es
mov
lea
and
nop
dec
jno
leave
test
cli
lahf
in
jmp
push
push
int
jle
pop
bound
or
push
lret
icebp
mov
adc
out
dec
je
stos
pop
clc
xchg
lcall
inc
dec
aaa
xchg
xorl
mov
fwait
leave
and
fwait
mov
es
leave
ja
add
and
cmpsb
push
and
loope
add
fmull
mov
add
clc
add
pop
out
loopne
arpl
jmp
std
test
pop
insb
and
ret
call
callw
xor
mov
lcall
mov
xor
lods
push
out
mov
les
bnd
xor
lret
das
lock
mov
jns
test
adc
imul
std
xor
inc
std
sbb
fcmovnu
cmpsl
shlb
push
popf
push
leave
adc
sbb
stos
jno
in
inc
and
fnstsw
iret
mov
mov
sub
sbb
xlat
inc
repnz
or
fidivrl
xchg
jo
ret
adc
fwait
lods
push
jns
push
insb
jns
xor
lahf
dec
mov
sbb
rcr
in
sbbl
pop
or
insl
push
xchg
push
jg
sahf
int3
cs
push
rorl
scas
fs
cmpb
mov
fwait
xchg
add
inc
lcall
mov
cld
dec
ret
loopne
or
jb
mov
adcb
cld
xchg
sbb
in
stc
int3
push
inc
leave
imul
push
lret
imul
cmpsb
popfw
xor
cmpsl
xor
xchg
add
bnd
inc
enter
stc
loope,pn
dec
lcall
adc
cmp
pop
xlat
sbb
jg
mov
filds
int
sub
addr16
inc
mov
fimuls
int3
js
movsl
pop
lahf
iret
dec
push
push
popf
lods
mov
hlt
xorb
sub
mov
outsb
jle
dec
ljmp
rcll
inc
cwtl
decl
imul
adc
sub
loop
push
inc
add
jle
imul
sub
push
xchg
inc
aad
fmull
and
imulb
jns
or
cmp
daa
inc
rolb
pop
dec
push
sub
xor
inc
inc
or
jnp
jne
lock
inc
xor
es
jns
xchg
xchg
sbb
push
xorb
pop
fs
inc
mov
frndint
push
jno
leave
jmp
ret
sub
mov
leave
in
xor
fchs
popf
icebp
test
xchg
jns
shl
cmpsl
out
jle
pop
and
push
rorl
xchg
push
std
cmp
pop
cmc
xchg
lcall
out
sbb
push
imul
xor
pop
sub
push
mov
sbb
lcall
lds
cltd
or
loop
sub
mov
mov
jb
dec
xor
xchg
and
xchg
cld
lcall
sbb
stos
movl
pop
movsb
sbb
and
call
jno
jae
pop
sbb
mov
jne
xor
outsb
cli
test
in
inc
aaa
into
xor
dec
das
fstps
cld
cwtl
into
cmp
mov
and
test
cmp
roll
inc
and
loope
aam
jo
sub
loopne
bound
notb
adc
cmp
inc
mov
outsl
mov
pushf
add
lahf
xor
pop
pushf
arpl
and
pop
pop
sub
test
lret
repnz
loope,pn
mov
xor
xchg
inc
out
fcmovb
sbb
loop
push
jmp
xchg
mov
adc
call
mov
call
push
cli
insb
insb
les
loopne
in
in
addr16
in
mov
mov
sbb
and
aas
rclb
inc
in
fbstp
loop
xchg
pop
arpl
ret
xchg
scas
or
test
mov
push
rcr
push
push
scas
scas
call
out
test
or
sub
xor
mov
cmp
cwtl
sbb
xor
inc
xchg
in
loope
daa
inc
je
sub
cwtl
mov
push
movsl
es
push
jge
das
xchg
push
sub
xchg
and
dec
scas
mov
in
bound
lock
in
ficompl
push
push
icebp
js
xchg
dec
repz
xor
jge
in
push
jmp
sbb
pop
frstor
dec
movsl
cwtl
cwtl
push
jne
adc
push
aad
jno
pop
ss
out
push
sti
lods
scas
fcompl
stos
movsb
push
jle
ret
jnp
mov
movsb
and
insl
jge
or
nop
cmp
jg
dec
ljmp
xchg
pop
cmc
ljmp
imul
imul
fadd
xchg
mov
pop
daa
ficoms
loopne
popa
sub
jae
outsl
inc
aas
ret
push
xor
out
and
mov
xchg
jl
xor
jnp
xchg
push
imul
xchg
ja
cltd
pusha
test
or
popa
adc
pop
mov
pop
dec
dec
fwait
dec
pop
mov
mov
fldt
fs
shll
imul
outsl
jno
enter
cmpsb
aad
movsl
std
icebp
scas
mov
adc
mov
mov
mov
lahf
ss
aam
aaa
adc
ret
sbb
sar
cli
push
pop
fwait
sub
and
imul
outsl
push
call
xchg
in
cmp
shrb
imul
ljmp
xor
loope
das
test
rcrl
pop
cmp
jb
fcomp
mov
pop
cmpsl
cmp
stos
rorl
xor
lods
mov
mov
inc
xchg
dec
push
out
push
xchg
in
mov
and
jno
push
or
sbbb
dec
xchg
and
sbb
xchg
mov
inc
mov
cmc
lahf
cld
mov
movsl
fisubl
sub
mov
fneni(8087
xchg
jnp
push
pop
imul
into
add
lret
adc
cli
int3
inc
xor
aam
jg
mov
aad
mov
adc
popa
xor
lds
inc
mov
push
cli
inc
sub
xor
stos
dec
cmp
ds
les
mov
sbb
outsl
xlat
push
dec
jp
pop
scas
inc
test
enter
or
push
in
mov
sti
dec
stc
call
pop
das
mov
dec
xor
mov
add
or
add
jl
pusha
sbb
mov
sbb
jo
bound
aam
or
pusha
insl
aaa
sub
int3
and
pop
push
xchg
int
fcoml
clc
push
cmp
call
xchg
push
xchg
fld
inc
ds
push
xchg
fisttpll
cltd
cmp
mov
in
ror
mov
cmpsl
sbb
stc
shlb
xchg
jnp
daa
pop
push
out
or
loopne
stc
in
cmp
lcall
test
mov
ret
inc
pop
xor
xor
cmp
iret
mov
push
loopne
or
mov
push
aad
lret
ret
adc
lahf
add
imul
ret
push
mov
xchg
and
cwtl
adc
mov
out
inc
push
pop
pop
test
leave
scas
sub
push
jo
rcrl
dec
in
sub
cmp
icebp
popa
lahf
push
gs
test
xchg
adc
jo
push
or
or
cwtl
cwtl
jg,pn
scas
push
push
mov
xchg
rcll
jmp
movsl
movsl
cmp
adc
pushl
mov
adcb
inc
mov
bound
mov
pushf
sbb
leave
cmp
xor
and
faddp
addl
and
pop
pop
push
or
xor
inc
xor
and
addb
loope
cmp
cmp
xchg
xchg
sub
adc
dec
dec
and
adc
aad
lods
lret
add
push
and
out
or
xor
pop
mov
inc
inc
fisubs
xor
arpl
fs
mov
adc
and
sub
sub
pushf
mov
xor
jl
sub
andb
pushf
pusha
sbb
ljmp
je
add
hlt
les
imul
and
daa
and
xchg
scas
adc
nop
aam
jb
cmp
pop
mov
sti
sub
jmp
push
pop
in
pusha
lds
inc
add
push
pop
mov
arpl
stos
movb
es
sub
pop
adc
pushf
xchg
inc
enter
pop
xlat
jb
call
mov
xchg
add
popf
add
cwtl
scas
out
sub
xchg
aam
inc
or
push
mov
xchg
push
outsl
mov
mov
test
int3
lods
jb
push
sub
icebp
sub
or
mov
sub
insl
add
adc
push
mov
or
aaa
enter
xor
fwait
movsl
cmp
push
mov
ret
test
jo
les
rcll
js
addr16
xlat
add
xor
add
popa
scas
push
movsb
arpl
insl
out
jmp
pop
es
ret
pop
and
out
cmc
sti
lret
loop
daa
jae
cs
cmp
and
adc
nop
or
pop
movsl
pop
scas
sub
ret
sbbb
movsl
and
fwait
xor
icebp
jmp
push
popf
push
xchg
scas
push
xchg
loope
lock
push
cvtdq2ps
int
subb
lcall
xlat
cmpsl
mov
pop
fcoms
popl
adc
fdivrl
lret
push
mov
pop
fimull
pop
mov
loopne
xchg
mov
mov
xor
mov
mov
add
or
fwait
sbbl
cmp
xchg
push
lret
sub
cmp
sbb
movsb
out
mov
xor
out
inc
insl
fwait
adc
std
daa
cmp
or
add
loope
test
adc
dec
mov
ja
sbb
repnz
stc
push
incl
popa
ja
inc
loopne
xchg
jp
sbb
out
jecxz
dec
aas
push
inc
ret
push
cwtl
faddp
fsubp
sti
icebp
cli
add
mov
bound
fidivrl
dec
jp
xchg
and
xor
repz
mov
jmp
cmpsl
sbb
push
dec
push
out
icebp
je
daa
xor
fs
outsl
jle
out
dec
sbb
cmp
sub
sub
bound
sbbb
es
cmpl
std
incb
dec
dec
addl
aas
fisttpll
aas
mov
mov
lods
push
pop
xor
xchg
inc
sbb
sbb
repnz
cmp
sub
push
pop
idivb
clc
movb
xor
test
xlat
xor
jo
fcoms
mov
mov
paddsw
insb
cmc
cmp
dec
sub
inc
dec
ds
jp
idiv
push
xor
and
std
orb
adc
data16
jecxz
sub
cwtl
pop
inc
outsb
loopne
dec
insl
repz
push
cmp
xchg
aas
xchg
sub
jns
in
ss
xor
xor
xor
xchg
pop
mov
lret
std
inc
jne
add
mov
push
sub
lea
imul
push
js
jne
xchg
dec
loopne
test
xchg
or
push
test
xor
push
test
pop
ret
leave
or
hlt
gs
imul
std
jmp
jnp
cmpsb
mov
ja
jbe
inc
mov
ds
lret
add
loope
sbb
dec
out
mov
lcall
inc
fcompl
jns
mov
cmp
js
lret
cmp
jge
xor
out
insl
xchg
push
lret
ret
mov
lods
dec
test
push
or
push
lods
mov
lods
rcrl
in
hlt
aaa
repnz
sub
gs
jmp
mov
adc
sbbb
sahf
jp
aas
in
rcl
inc
or
mov
sbb
jae
iret
and
cltd
xchg
insb
das
fisubl
add
and
sub
adc
sbb
sti
jp
int3
cmp
adc
bound
jns
mov
xlat
pushf
rorb
xor
fimuls
ficoms
adc
cmpsb
mov
ret
loope
add
sbb
xor
inc
xor
mov
mov
mov
sahf
sub
fsubrl
jp
cmp
xor
jno
cmpsl
rorl
xchg
popa
es
cwtl
aam
push
mov
out
cmp
xor
es
rcrb
cmc
lods
and
cmp
jns
cmc
push
mov
adc
test
jl
add
mov
pop
sub
orb
pop
aas
aam
adc
scas
and
xor
or
push
mov
fidivl
mov
ja
mov
mov
clc
fcompl
dec
add
lds
jno
jle
leave
adc
cli
aad
xchg
cld
xor
ret
cltd
fistpll
loopne
adcb
push
ja
sbb
popf
adc
pop
xor
push
pop
loop
push
xchg
and
insl
icebp
cmp
dec
mov
bound
ret
int3
std
inc
test
lds
xor
cmp
int3
mov
sub
and
inc
jecxz
scas
cmp
cs
xchg
rorb
std
and
jae
fsts
and
push
inc
jecxz
loop
xor
fisttps
xchg
push
insb
pop
leave
insb
jle
cmpsb
pop
rcrl
daa
cltd
movsb
xchg
or
or
pop
cmpsb
jns
sbb
cmp
orl
dec
xchg
scas
cmp
xchg
imul
mov
cltd
shrl
fists
cmc
mov
fsubp
imul
xor
inc
or
jbe
out
sub
pop
and
dec
sub
test
test
fs
push
mov
lea
shll
cltd
adc
scas
and
out
mov
movsb
adc
inc
or
ljmp
orl
ja
and
cmp
ja
mov
lock
cld
stos
leave
sar
xchg
dec
mov
push
divl
out
int3
in
outsl
push
push
data16
jp
fistps
int3
scas
cmp
xchg
adc
mov
mov
mov
fcmove
insl
cmp
sub
add
jo
jmp
adcl
outsb
jne
cmpsb
test
cmp
loope
out
out
rorb
dec
jae,pn
sbb
divb
insb
fldl
push
addr16
mov
movl
jnp
xor
xor
cmpb
and
test
pop
lcall
notl
test
cld
cs
cmp
ss
dec
and
sbb
add
lea
push
ljmp
mov
fwait
es
push
cmp
rcl
jl
shr
shll
inc
fst
callw
fsubrl
mov
ret
ret
std
cmp
sbb
cmovb
cmp
or
add
dec
ds
push
xchg
mov
adc
shll
ret
popa
jne
shr
or
push
lods
mov
cmp
in
add
inc
iret
dec
mov
pop
sub
call
lds
pop
icebp
lea
push
fxch
jge
inc
mulb
fnstsw
adc
cmp
ret
psubd
movsb
mov
andl
int
nop
imul
dec
lods
popf
lods
sbb
dec
fmul
sbb
lret
mov
inc
fdivrp
jmp
in
mov
mov
inc
pop
pop
dec
or
stos
mov
xchg
int
pushf
pop
pushf
add
jae
xchg
mov
clc
sbb
inc
shlb
xor
xor
jmp
daa
jnp
enter
clc
scas
rclb
dec
push
sub
lds
imul
inc
pop
sub
gs
stc
call
test
arpl
icebp
jecxz
outsl
mov
xor
pop
lret
loop
mov
mov
mov
sti
sbb
jae
pop
xor
leave
adc
dec
cmc
push
dec
popa
xchg
nop
xor
cmp
cs
pop
mov
or
les
dec
mov
push
stos
lock
insl
ds
jmp
in
je
xor
ljmp
arpl
adc
mov
arpl
aaa
cmp
nop
das
inc
orl
test
push
dec
push
or
push
dec
mov
stos
push
cmpsl
flds
mov
jbe
push
inc
pop
xor
andb
aam
sbb
icebp
stos
push
inc
jmp
insl
rcrl
test
aas
call
xchg
enter
imul
jbe
arpl
xchg
js
cmp
gs
into
loopne
cmp
mov
sbb
les
inc
pop
mov
pop
pop
or
adc
cld
scas
xchg
lock
notl
adc
and
fcoml
leave
mov
fs
movsl
aas
dec
mov
or
sti
rclb
jg
mov
jecxz
ss
xor
movsl
jnp
int
inc
fbstp
push
jae
sub
dec
push
ret
sbb
loopne
lock
cmp
sti
gs
std
aaa
cmp
cwtl
imul
mov
ljmp
nop
add
xor
inc
divb
inc
jb
push
stc
add
out
inc
pusha
cmpsl
adc
jb
mov
add
mov
xchg
fwait
add
fwait
sub
or
mov
movsb
testb
mov
sub
pop
lret
adc
ret
test
int
push
or
add
loop
jmp
mov
add
mov
adc
fistl
add
es
sbb
adc
jg
daa
popf
das
imul
adc
std
push
pop
xchg
roll
jbe
mov
ljmp
add
lret
xchg
inc
sub
mov
adc
push
sbb
jg
sbb
dec
lds
es
jmp
pop
add
add
inc
psubb
xchg
jge
ja
and
out
or
xchg
iret
daa
sub
das
ret
sbb
xor
push
mov
cmp
mov
mov
mov
jle
xor
loopne
addr16
sub
inc
inc
int
xlat
lcall
mov
stc
fistl
pop
inc
mov
adc
jl
sbb
repnz
push
inc
sbb
out
jae
xor
cmpsb
pop
mov
orb
dec
push
arpl
push
jnp
pop
das
inc
or
push
xchg
cmp
lcall
lds
sbb
imul
sub
jecxz
ja
add
mov
ljmp
cltd
insb
xor
aad
in
adc
mov
xor
jnp
jae
out
pop
arpl
insb
lock
je
sbb
push
push
mov
inc
repnz
bound
lods
cs
fwait
popa
leave
sub
imul
pop
sbbl
clc
imul
mov
jg
mov
cmpsl
aaa
call
mov
jne
jge
pmulhw
jne
mov
push
sbb
scas
mov
mov
out
mov
pop
les
sbb
inc
insb
cmp
xchg
and
mov
call
pusha
popa
call
mov
mov
mov
adcl
jecxz
ret
inc
into
shlb
and
cmp
roll
push
pop
pop
jnp
add
cld
ljmp
pop
dec
aaa
mov
lcall
mov
sarl
scas
in
dec
xchg
cmp
mov
mov
pop
inc
mov
cmp
or
in
test
in
rol
mov
push
jns
hlt
sbb
fdivrl
filds
xchg
xchg
add
ja
movsl
pushf
int
loope
mov
xor
xor
add
lret
mov
stos
outsb
xchg
stos
push
dec
stos
lcall
inc
bound
xor
mov
xchg
scas
stos
ret
jno
xor
dec
mov
movsb
jae
fcoml
sti
gs
inc
adc
test
imul
pop
in
push
xlat
and
es
fisubrs
je
xlat
mov
scas
aad
int3
push
in
or
sahf
bound
mov
push
sbb
push
aaa
loop
daa
shlb
or
mov
adc
mov
inc
mov
fwait
xor
mov
mov
jnp
rcll
adc
mov
sbb
adc
xchg
inc
mov
sbb
mov
adc
pop
inc
stc
or
xor
xchg
pusha
sbb
sbb
imul
sub
daa
dec
fwait
inc
addr16
jmp
adcl
cli
mov
sahf
mov
repnz
xchg
les
outsl
mov
sti
inc
push
cmp
dec
lods
or
sbb
push
push
sub
dec
or
dec
popf
mov
lds
cld
mov
sbb
out
sub
mov
leave
out
rcrl
sbb
dec
adc
push
and
mov
pusha
adc
xchg
mov
faddl
cmp
loope
data16
nop
mov
jns
in
push
sbb
aam
popa
fmuls
cmp
lods
xchg
sub
data16
pop
pop
fcom
and
xor
and
flds
lods
adc
mov
add
push
test
cmp
adc
pop
mov
sti
inc
dec
xorb
and
and
cmp
shrl
or
sub
fstl
aas
out
cld
ret
pop
add
sbb
mov
or
mov
inc
js
cmp
and
ret
xchg
jg
inc
in
inc
imul
scas
lods
push
or
or
jecxz
cmp
xlat
or
inc
mov
ss
dec
stos
sbb
mov
add
jmp
push
or
push
and
and
pop
dec
fsubrl
jo
insl
xor
push
adcl
push
fidivl
stc
adc
test
mov
and
out
fdivs
in
bound
shrl
push
mov
dec
xchg
pop
iret
loopne
mov
mov
sub
sbb
or
dec
push
popa
or
jmp
out
in
cmp
xchg
outsl
movsl
jmp
ss
inc
mov
lock
push
cmp
mov
loopne
jns
fnstcw
mov
cmpsl
lods
xchg
mov
scas
and
repz
int
fs
out
xor
dec
out
cmp
test
call
cs
lahf
push
fld
data16
fs
shll
fidivl
int3
ret
inc
sub
fdivr
add
mov
add
xchg
jg
filds
in
push
adc
jge
nop
test
add
ja
out
pusha
mov
sub
mov
add
sbb
rorb
jbe
ret
mov
dec
lcall
jb
dec
test
sahf
lods
sbb
stos
push
sub
cmp
sub
cmp
lea
test
mov
push
jnp
jp
in
push
adc
aaa
fildll
or
dec
out
cli
xchg
and
xchg
xchg
push
or
ja
iret
jmp
mov
aas
mov
nop
pop
pushf
es
lahf
inc
aad
cmpsl
xor
push
int3
imul
shll
sbb
jl
jp
icebp
imul
pop
push
les
mov
in
in
jmp
fcoms
in
sahf
in
and
fsubl
inc
lock
stc
ds
arpl
xor
icebp
imul
cmp
leave
cmp
adc
into
not
es
sti
test
cmc
loopne
je
dec
sarb
jo
test
dec
movsb
sbb
ss
xlat
xor
pop
adc
mov
mov
aaa
pop
push
aad
arpl
andb
bound
and
sub
fstps
testb
cmpsl
jns
push
add
dec
push
or
add
dec
lock
in
insb
push
mov
fistpl
stos
dec
dec
pop
aam
loope
pop
mov
dec
loop
pusha
sub
mov
out
into
mov
xor
jge
jmp
cli
sub
cwtl
inc
lea
and
sarb
bound
gs
aam
cld
push
arpl
sub
ljmp
cltd
hlt
xchg
lods
leave
pop
in
mov
adcb
add
loop
test
dec
push
aas
in
push
adc
fisubrl
jmp
xor
add
sbb
aas
push
mov
ss
mov
jnp
sub
lods
ja
pop
and
xchg
sub
add
mov
xchg
test
sbb
lods
and
popf
pop
and
int3
sbb
fs
fabs
arpl
pop
adc
sar
mov
loop
jo
mov
add
scas
xchg
insl
js
pusha
and
sahf
jecxz
pop
outsb
out
sbb
add
sbb
outsl
sbbl
dec
push
push
or
xlat
les
jne
inc
push
ja
in
add
fadds
int
out
sub
ss
sub
cwtl
stos
rep
in
jno
mov
cmp
jle
jne
or
adc
aam
ss
jmp
push
dec
inc
mov
scas
arpl
mov
lods
cli
dec
xchg
inc
xchg
adc
cmpsb
out
cmpsb
test
repnz
cs
js
jno
sbb
dec
out
out
push
leave
mov
mov
dec
mov
sbb
dec
frstor
loopne
sub
xchg
jl
outsl
fistps
outsb
in
xor
pop
xchg
arpl
mov
hlt
in
inc
gs
scas
divb
pushf
push
outsl
or
loopne
shlb
pop
dec
lret
inc
cmp
add
inc
cmp
loope
into
shrb
lret
jae
out
das
leave
pushf
pop
adc
fs
pop
je
decb
aaa
inc
pusha
notb
cwtl
aaa
arpl
push
jmp
movsl
adc
popa
jmp
jmp
fsubrl
sbb
or
repnz
cmpsl
sub
in
pop
pop
lods
sarb
jbe
fwait
popf
push
xchg
mov
jae
xor
nop
dec
add
addr16
lods
jb
pop
and
outsl
hlt
jns
and
aam
andl
lods
xor
push
mov
push
div
sti
adc
cmp
jl
iret
adc
mov
mov
xchg
pop
dec
scas
cmpsb
pusha
or
cmp
push
pop
ret
or
pop
cmp
push
or
jbe
insb
push
xor
mov
sub
pop
push
gs
out
in
shrl
scas
or
dec
sub
jl
insb
jo
mov
mov
sub
push
sbb
and
cmp
hlt
jmp
fwait
sub
dec
les
test
mov
leave
xor
mov
inc
lret
pop
mov
ror
gs
jp
push
jne
and
jb
jl
adc
test
sbb
cmc
stos
pop
and
ds
sbbl
ret
in
rcl
jge
add
lods
jmp
add
cltd
mov
cmp
add
or
cmp
iret
lret
push
xor
mov
stos
xchg
iret
lret
shl
rolb
xorl
push
icebp
xchg
sar
cmp
xor
cmp
mov
cltd
inc
mov
xchg
popa
aas
outsl
std
fists
pop
orl
xor
je
ret
mov
cmp
jo
in
cli
push
jmp
dec
cmp
xchg
pop
rcl
outsb
mov
and
mov
pop
xor
mov
in
lock
mov
shlb
add
mov
pop
xchg
shlb
sbb
int
scas
testb
aad
push
mov
subb
xchg
and
sahf
sahf
sahf
push
inc
dec
xor
popa
xlat
inc
jnp
aam
or
outsb
dec
cwtl
pop
or
fcoml
jge
shr
arpl
push
loope
sub
das
ret
adc
push
xor
cmp
or
push
jo
pusha
mov
scas
sarl
je
fidivs
mov
pushf
nop
mov
add
sar
loop
dec
adc
iret
mov
jae
int
inc
and
pop
sub
pushf
mov
mov
mov
dec
mov
loop
mov
mov
dec
push
mov
int
movsl
jecxz
add
into
xchg
rol
sbb
pop
mov
pop
adc
push
and
sub
out
push
sub
sub
and
pop
fidivrl
enter
xchg
pop
push
decb
jbe
push
pop
clc
out
mov
xor
lods
sub
fcomps
sub
test
shl
enter
aam
test
movsl
mov
ss
jns
movsl
inc
shl
mov
or
jg
repz
xor
js
mov
add
lret
aam
in
sub
roll
jae
stos
in
lret
add
dec
roll
adc
int
jp
frstor
mov
jbe
test
jge
stos
xchg
je
mov
into
cmp
pop
add
in
push
gs
xchg
adc
jno
pop
in
and
pop
scas
inc
sahf
xor
outsl
dec
jnp
loopne
fwait
dec
aad
sbb
or
ds
data16
repz
inc
out
fidivrl
mov
ret
xorl
cltd
pop
push
movsl
xor
sub
hlt
sub
popf
mov
jns
bound
xor
aad
mov
rorl
cmp
cs
lods
adc
fs
sub
test
xchg
push
test
sub
lea
lret
sti
clc
push
push
and
dec
and
mov
lea
lret
add
push
add
xor
mov
mov
jg
stos
and
into
lods
mov
stos
push
mov
mov
push
cmc
jl
add
lea
sbbb
test
sbb
mov
add
xchg
pop
push
cwtl
lret
xor
cmp
cmp
stos
sub
or
sub
repz
filds
jmp
adc
push
rorl
ja
cmpb
xchg
hlt
xchg
pusha
push
inc
add
outsl
push
lahf
daa
loopw
push
cmp
inc
aaa
pop
lock
pop
rcr
jp
fiadds
sti
inc
add
fs
jg
out
pop
negl
test
mov
mov
sbbb
insb
loop
lret
in
sub
repz
jno
fnstsw
jbe
mov
sbb
cwtl
ds
mov
dec
push
mov
dec
aad
in
mov
mov
cmc
mov
test
rcr
out
stos
loop
jo
push
pushf
xchg
loope
bound
adc
cmp
loope
or
dec
imulb
pushf
out
mov
cmpsl
js
push
call
fbld
jne
jne
lods
xchg
mov
ret
push
pop
jns
rorb
sub
stc
mov
rcll
aas
push
shrb
jl
inc
inc
fmulp
adc
pop
scas
add
mov
js
outsl
lahf
outsb
in
or
adc
xchg
push
bound
xchg
cli
sbb
in
pop
cli
rcl
stos
icebp
in
and
aam
inc
sub
add
jnp
lods
adc
stos
fstl
movsb
dec
xor
icebp
lods
imulb
enter
add
inc
push
jne
xor
jns
adc
jbe
ret
mov
add
inc
pop
adc
push
push
push
pop
loop
mov
dec
in
mov
frstor
cmp
or
adc
scas
jb
jb
lock
shll
mov
and
aaa
adc
imul
fcmovnbe
mov
lret
push
sub
lahf
adc
int
ljmp
push
inc
sbb
sub
ja
dec
add
pop
jge
and
jl
add
ljmp
mov
dec
and
lret
jae
andb
insl
dec
test
js
sub
xor
xorl
cwtl
cltd
pop
sub
add
xchg
add
addl
outsl
jecxz
jmp
push
add
inc
xchg
xchg
loopne
xor
add
popf
adc
jecxz
sbb
and
cli
aad
or
or
cltd
jno
cmpsb
pop
pop
roll
mov
mov
popa
test
and
fmull
repz
push
push
loopne
mov
cmp
sub
mov
sarb
insb
xchg
add
int3
and
sbb
fbstp
mov
add
addb
xchg
dec
out
jmp
adcl
cmp
pop
mov
ljmp
mov
add
jge
cmp
cltd
adc
adc
out
dec
inc
cmp
lcall
and
pop
jp
cmp
mov
sti
sub
xchg
shll
pop
mov
out
dec
cmpb
arpl
mov
out
push
insl
pop
movsl
rcrb
aad
sahf
mov
pop
inc
insl
sti
mov
icebp
pop
mov
and
cmp
jecxz
in
stos
jmp
xchg
sub
aas
xorb
sbb
xchg
roll
sub
sbb
push
push
mov
ja
inc
rol
adc
cltd
cmp
and
jmp
test
sub
lods
sub
sub
cmp
add
push
cmc
aad
adc
pop
outsb
and
xor
mov
jmp
shlb
popa
add
int3
inc
sub
mov
pop
js
into
loopne
sbb
mov
in
movsb
lds
jg
sbb
mov
dec
xchg
mov
les
repnz
sbb
lret
pop
lcall
and
nop
shr
scas
fbld
fsts
cmc
inc
pop
mov
cltd
iret
mov
adc
lret
lret
xlat
dec
bound
pushf
outsb
push
pop
push
in
outsb
mov
mov
xlat
cmp
divb
mov
mov
and
dec
imull
jl
xor
hlt
sahf
sub
cmp
int3
aad
sbb
hlt
pop
movsb
imul
cmpsb
jecxz
mov
cmpsb
addb
pop
jl
pushf
mov
cmc
sbb
mov
incb
bound
cltd
mov
mov
in
popa
js
mov
cld
adc
mov
push
mov
push
or
imul
cmp
movsl
adc
sbb
sbb
out
mov
addr16
scas
ds
pusha
dec
pop
loope
mov
or
fimull
cmp
loop
lret
mov
mov
push
jg
mov
iret
clc
or
xor
iret
in
mov
js
roll
repz
pop
push
test
jo
daa
lods
outsb
mov
jbe
les
xor
mov
dec
pop
fwait
mov
dec
std
or
insl
incb
roll
out
movsb
mov
pop
jbe
popa
orb
std
cs
pop
xor
sub
fdivl
ja
inc
push
and
test
cmp
and
out
out
add
movsb
or
fs
inc
cli
push
lret
mov
xor
in
push
push
and
ds
leave
arpl
clc
fs
andb
fldenv
adc
std
loop
outsl
loope
fidivrl
ss
loopne
and
ret
pop
xor
mov
outsl
push
test
shrb
pop
xchg
xor
subps
add
aam
add
adc
jecxz
scas
jle
ficoms
pop
push
push
jne
or
and
aad
insb
orb
nop
out
fs
loop
pop
jp
cmp
lods
jbe
mov
mov
test
mov
pop
cmp
pop
aas
out
xchg
rcrl
outsb
imul
insl
icebp
subb
pop
test
lods
scas
xorl
adc
sbb
test
mov
or
and
jecxz
xor
mov
push
ja
nop
mov
jne
icebp
js
jns
pop
xorb
push
mov
sub
adc
xchg
xchg
mov
cmc
fwait
ljmp
shlb
xor
andb
addr16
inc
stc
jno
roll
push
jnp
call
addr16
repnz
sbb
adcl
cmpsb
pop
insl
mov
mov
adc
ljmp
clc
fnstcw
fdivl
ret
push
dec
test
xor
sbb
addr16
sub
push
out
out
sbb
loope
daa
push
sbb
cmp
dec
aas
mov
outsb
lods
and
sbb
or
sbb
xchg
or
dec
loope
lods
mov
pop
inc
adc
cmpsb
fldcw
mov
iret
iret
jne
mov
aaa
cmove
jl
in
insb
enter
pop
divb
mov
imul
xor
add
jo
xchg
dec
jns
xor
sbbb
adc
add
jo
sbb
jmp
into
cmp
push
sub
imul
ljmp
push
xor
jle
adc
mov
jmp
mov
mov
mov
ficoms
jg
jmp
mov
and
add
add
movsb
shl
cwtl
sub
stos
dec
imul
mov
aas
inc
add
pop
cmpsl
ljmp
clc
cmpsb
push
xorl
in
mov
add
pop
popf
jl
shl
int3
pop
inc
shl
in
pop
out
dec
sub
sbb
mov
ds
roll
pushf
neg
sub
mov
sub
int
sbb
rcl
xlat
loope
ret
insb
neg
add
outsb
sbb
ljmp
pushf
cltd
xchg
dec
dec
rcrl
mov
into
push
mov
xor
jg
xor
adc
pushf
pop
stos
daa
int3
mov
mov
test
sub
jnp
jmp
dec
cwtl
pop
call
ja
insl
cli
push
orl
outsl
xchg
mov
xor
mov
sub
vcvttps2dq
fdivl
mov
fdivl
or
sub
dec
int3
sbb
aad
mov
mov
hlt
mov
push
dec
cwtl
cmp
mov
pop
test
and
mov
mov
mov
push
sbb
std
cs
enter
addl
pusha
shrb
frstor
xchg
mov
out
addl
inc
std
arpl
sub
stos
lret
lret
adc
dec
sub
lock
lret
push
sahf
addb
scas
inc
mov
pusha
xchg
adc
int3
leave
sub
aam
mov
adc
stc
mov
cwtl
adc
andl
sub
jne
xchg
xchg
add
stc
sbb
push
sbb
sub
out
dec
xlat
and
jecxz
jbe
mov
cmpsl
loopne
push
add
xor
ss
and
mov
xchg
jp
movsb
mov
inc
stos
mov
push
push
repz
mov
xchg
lock
aaa
lock
pop
ds
sbbb
and
add
xorb
mov
sbb
lahf
bound
mov
sbb
mov
dec
inc
jmp
movsb
das
insl
and
loop
xchg
mov
lock
icebp
shlb
ret
and
jp
pushf
and
mov
jns
scas
dec
repnz
dec
mov
ffree
sahf
mov
sbb
jle
jno
mov
push
and
hlt
inc
push
lock
push
inc
fimull
add
rcrl
fcomps
sub
sahf
inc
push
pop
mov
je
ja
sets
xchg
cld
add
fcoml
mov
fisubs
sub
or
mov
out
repnz
sub
pop
dec
js
cmp
hlt
mov
fs
frstor
fwait
pop
nop
xchg
push
imul
adc
push
cmc
cmp
sbb
dec
pushf
je
mov
xchg
sbb
lods
stos
idivb
mov
jae
pop
cld
xchg
cmp
icebp
in
inc
xlat
out
hlt
add
xor
ret
xor
lds
lea
xlat
in
ret
aam
ljmp
pop
mov
mov
je
xchg
dec
int
dec
sub
daa
fadd
or
pop
cmpsb
ss
cmpsb
pushf
sbb
gs
in
lock
dec
cltd
adcb
ficompl
sbb
push
cs
aam
xchg
fbstp
inc
xlat
dec
jle
aam
pop
scas
stos
fnstsw
push
dec
les
jae
negb
adcl
jge
cmpsl
cmp
int
or
ja
and
mov
or
jo,pn
in
sbbb
mov
xchg
sbb
into
push
pop
push
cmp
insl
add
ss
push
add
push
sbb
scas
xor
fwait
rol
pop
fnstsw
fwait
jo
mov
call
xor
rcll
pop
mov
dec
sar
iret
and
pop
add
hlt
fwait
push
dec
xchg
or
jg
dec
xor
ficomps
loop
pop
iret
and
insl
xorl
test
leave
lret
pop
or
lock
fnstenv
push
rorl
dec
pop
sub
sub
daa
sbbl
aad
call
or
rorb
pop
std
cmp
and
pop
jmp
xchg
mov
test
repnz
mov
int3
adc
fs
adc
mov
cmp
movsb
lahf
push
imul
sbb
adc
and
xchg
lds
inc
cmp
stc
mov
jbe
test
xchg
scas
iret
ss
mov
movl
js
cmp
xlat
pop
mov
sub
mov
outsb
cmpsl
add
xor
sbb
gs
es
daa
cmpsl
sub
nop
mov
aam
xchg
lea
push
jp
push
jl
out
test
push
mov
je
pop
xor
jbe
push
mov
mov
mov
int
sub
mov
adc
inc
dec
shl
push
out
pusha
insb
ror
push
xchg
mov
cld
mov
xchg
add
ss
mov
lods
leave
xchg
jl
pop
ret
fwait
pop
iret
enter
jne
sahf
or
aam
pop
js
lods
les
loop
test
decb
in
clc
and
in
sarl
push
sbb
fisubrs
pop
lcall
jno
fwait
xchg
push
xchg
push
sbb
rcrb
sbb
mov
push
push
imul
loopne
inc
fwait
adc
sub
hlt
stos
adc
sub
cltd
and
sbb
sar
sub
or
push
ret
fwait
pop
popf
adc
mov
sub
xchg
int3
movb
jb
xor
dec
sti
cmc
dec
stc
nop
push
adc
rol
lret
pop
push
mov
test
aaa
pop
adc
jecxz
and
stos
lret
mov
cltd
xor
jmp
mulb
fisubrl
mov
and
repnz
lcall
inc
je,pt
or
push
rolb
ret
and
pushf
std
int
cmp
arpl
int3
jle
fisubrs
mov
leave
int
lahf
or
dec
lret
mov
pop
jnp
pop
lods
and
lds
dec
xchg
and
shll
ljmp
push
lret
dec
xchg
test
pop
push
cmpsb
in
jne
rcpps
jns
roll
pusha
push
orb
cmp
push
repnz
arpl
rorb
je
out
fmuls
lds
imul
scas
dec
stos
mov
push
sbb
pop
aas
scas
aas
lods
out
mov
push
out
jmp
pop
inc
aaa
cs
dec
ds
aas
js
lock
cli
enter
cmp
xlat
mov
cmpsl
loope
pop
jnp
orb
xor
mov
popa
jb
fstpl
mov
outsb
dec
mov
push
and
inc
xchg
nop
mov
jmp
out
hlt
lret
fs
mov
xor
cmp
and
scas
xchg
adc
and
or
jge
movsb
pusha
stos
mov
inc
xor
fidivrl
cs
fs
loop
sub
test
mov
lods
adc
jnp
jmp
xor
cwtl
mov
cs
popa
xchg
out
icebp
add
es
inc
jno
xor
iret
xchg
mull
ror
mov
sbb
mov
jns
loope
stc
mov
and
jmp
mov
outsb
cmp
cmp
rcrl
sti
mov
cmp
arpl
dec
push
outsl
js
call
test
push
out
push
inc
pushf
and
add
sbb
cmp
cld
fldcw
jmp
frstor
loopne
adc
mov
jno
je
stos
leave
mul
divl
shlb
and
ljmp
mov
mov
mov
in
fists
dec
fmuls
jo
data16
pop
imul
xor
roll
ds
jb
and
xlat
xchg
mov
fcoms
inc
data16
mov
add
sbb
jb
js
push
jl
cmpsl
adc
outsl
and
aas
loopne
and
sbb
insb
int3
in
lea
lahf
test
call
mov
movsb
lock
or
imul
imul
mov
lods
cld
inc
jb
mov
cltd
cmp
popf
enter
fstl
call
xchg
and
mov
sbbl
mov
ss
pop
mov
enter
aam
adc
jmp
sub
jnp
inc
aad
jp
dec
and
arpl
adc
fsubl
aaa
cltd
dec
push
inc
xchg
dec
hlt
pmullw
cmp
fbstp
nop
loope
push
pop
pop
inc
pop
lods
sbb
xor
ds
ja
shlb
mov
lret
cmp
repz
das
les
test
push
pop
in
pop
mov
call
inc
enter
rclb
loope
shll
faddl
mov
fs
jmp
and
cmp
inc
cld
clc
fsqrt
sub
or
sti
ret
cmp
mov
jge
fsubl
or
js
jo
cmp
ds
bound
pop
jge
roll
orl
js
call
shll
fs
sub
jl
adc
sub
jbe
jae
jo
xchg
pop
popa
addb
jb
test
mov
das
xlat
push
aad
bound
les
xor
ljmp
es
cmpsl
outsl
push
popa
push
inc
dec
cmp
lods
test
stc
mov
and
pushf
dec
or
pop
jnp
push
mov
inc
std
inc
int3
bound
cmp
xor
dec
ret
movups
pusha
mov
pop
addb
stos
jmp
in
mov
or
mov
add
insb
mov
pop
sbb
adc
in
xchg
mov
mov
mov
dec
aaa
ret
test
mov
push
fs
add
jg
shlb
stos
jp
mov
out
test
pop
xor
push
jg
scas
mov
in
push
push
dec
mov
push
push
ds
dec
div
mov
inc
lods
mov
adcl
es
into
mov
push
push
enter
lret
pop
decb
rolb
out
ss
pop
add
mov
enter
stos
push
scas
out
lcall
adc
fildl
in
aaa
jo
cmp
jbe
sub
push
ret
lcall
cli
in
push
push
mov
test
fisubl
lods
mov
shl
mov
sub
dec
ret
leave
fisubs
and
jge
mov
test
pop
cmp
mov
add
ljmp
xlat
add
inc
add
insl
jmp
mov
xorl
std
pop
push
xchg
shlb
lock
push
xchg
in
es
cltd
add
ds
inc
pop
mov
in
pop
jo
and
lret
dec
inc
into
lods
lock
and
aas
pop
xchg
mov
cmp
sbb
int3
rcl
and
jg
das
push
mov
ljmp
mov
sti
int
sbb
gs
aas
sarb
adc
or
out
fisttpll
sub
orb
ds
pop
xchg
cs
scas
xor
xchg
cmp
mov
pop
and
push
mov
imulb
adc
mov
aaa
or
adc
sub
outsl
cltd
jns
push
dec
decb
movsb
xor
inc
sar
pop
clc
xor
add
sub
divb
xor
push
mov
dec
jecxz
jns
roll
mov
loopne
lds
cmpsb
inc
mov
sub
add
add
sbb
and
push
cmpsb
adc
loopne
jg
aad
out
idiv
and
jecxz
sbb
mov
pop
cmp
mov
cld
out
and
jo
pop
pop
xchg
pop
dec
fsubrp
jl
stos
jecxz
scas
xchg
inc
cwtl
sbb
or
sbb
test
cmc
xor
imul
lcall
out
je
jno
or
stc
pushf
insb
push
ja
xor
add
add
outsl
xorb
jns
addr16
and
int3
xor
shll
jg
mov
adc
xchg
xor
mov
xor
xchg
ja
or
jae
cmp
sub
lcall
inc
lahf
movsl
mov
pop
sbb
enter
cmpb
mov
or
imul
pop
dec
pusha
mov
mov
retw
push
leave
add
mov
lds
rcrl
mov
das
lahf
movsb
dec
inc
and
or
or
pushl
xor
pop
gs
jbe
adc
inc
outsb
xor
je
std
xchg
clc
ret
mov
push
xorl
aad
xor
out
mov
jnp
mov
ljmp
cwtl
fcompl
fildl
clc
mov
bound
loop
jg
ficoms
ret
inc
mov
jmp
shlb
push
stos
in
shll
mov
out
or
or
push
pop
shr
inc
rcrb
pop
push
xor
fisubl
sub
fdivrl
sbb
stos
add
sbb
fisttps
fldl
mov
mov
mov
pop
mov
xorb
es
out
in
loope
xor
mov
es
cld
insb
push
lret
cwtl
xor
mov
pusha
nop
cmp
mov
adc
adc
shr
pushl
in
je
mov
gs
popa
jle
cmp
pop
xchg
mov
jle
les
inc
out
shlb
je
out
and
fmuls
inc
lret
pop
aaa
cld
ss
add
push
add
je
bound
out
mov
out
out
lea
jmp
test
js
or
push
mov
cltd
dec
stos
xor
pop
push
push
fadds
push
xor
out
or
subb
iret
scas
sti
jo
addr16
push
jbe
cld
out
xchg
arpl
out
mov
jecxz
push
sbb
movsb
sbb
adc
dec
ret
mov
cld
cltd
cmp
nop
jl
push
lret
mov
rcrb
in
push
out
add
lods
insl
dec
aam
int
cmpsb
adc
push
hlt
cmp
js
in
in
xor
inc
data16
cmp
push
pop
stc
dec
jb
and
push
rolb
in
add
hlt
das
add
dec
lahf
rcrl
sbb
das
test
insl
lods
mov
lcall
jecxz
mov
sub
jg
push
mov
mov
mov
outsl
cmc
mov
push
addb
cmc
in
es
jle
xor
mov
out
mov
mov
dec
sbb
pop
std
inc
insb
mov
and
push
xorl
cld
cs
movhlps
mov
mov
add
xchg
cltd
lods
cmpsl
dec
adc
push
sub
ja
test
popf
add
movsl
repz
pop
mov
lds
fcoml
or
dec
mov
xchg
and
mov
int3
sti
pop
adc
xchg
dec
mov
ja
xor
inc
addr16
mov
and
jnp
xor
sarl
pop
decl
daa
loopne
sub
mov
sub
clc
icebp
pusha
testb
xor
inc
push
imul
movl
es
out
cmp
mov
popa
adcb
xchg
cmc
ljmp
idivb
xchg
out
sub
xchg
shrb
loop
push
cmpsl
ss
mov
xchg
add
ja
adc
bnd
mov
cs
into
movsb
roll
fldt
or
clc
iret
xor
ror
out
cmp
iret
jecxz
sub
adc
mov
xor
fadd
push
outsb
pop
test
icebp
lock
jns
jp
mov
mov
mov
ds
xchg
pusha
inc
ror
insb
push
sub
sarl
jle
cmpl
cltd
mov
ret
add
divb
mov
cmpsb
stos
lods
push
in
fidivrs
push
mov
xchg
xor
test
movsl
inc
out
add
aas
into
push
sti
repz
sub
adc
pop
sub
mov
mov
cmp
inc
arpl
test
mov
fwait
call
and
cmpb
test
bound
mov
xor
cmp
mov
push
cltd
sub
fisttpl
sub
mov
and
and
jo
sub
lcall
jmp
fistps
jle
in
mov
pushf
jb
out
mov
daa
and
push
xchg
inc
jmp
clc
loope
cmc
insl
pusha
inc
insl
dec
cmc
pusha
aam
movsl
jno
dec
mov
pop
dec
imulb
push
lods
cmpsl
xchg
sub
dec
mov
fsubrl
pop
push
test
aad
xor
adc
sub
mov
cmpsl
sub
das
repz
cwtl
addl
and
aaa
je
stos
inc
shll
sub
mov
xchg
leave
lds
mov
inc
inc
inc
mov
fsts
dec
notb
sub
push
xor
out
dec
jb
fmul
outsb
ljmp
cmp
lods
mov
divb
dec
jl
jae
hlt
add
out
sbb
cmp
fucomip
sbb
inc
lahf
outsb
cltd
sub
fcomip
mov
push
cmp
push
daa
ss
or
mov
xchg
lahf
je
mov
or
inc
sbb
or
jmp
lea
pop
sub
jg
push
mov
stc
mov
movsb
lcall
or
nop
dec
mov
stc
mov
pop
aam
jl
hlt
push
xlat
stc
mov
call
in
ss
jns
mov
xchg
xor
xchg
xchg
add
shrb
mov
lret
mov
sbb
inc
fwait
insb
aad
xor
arpl
lods
pop
ret
mov
add
cmp
cli
pop
clc
jecxz
adcl
mov
cmpsl
jl
xchg
call
je
push
cmp
test
loope
int3
jae
xor
enter
jecxz
aam
mov
pop
loope
inc
inc
in
out
mov
ss
pop
lcall
lods
loope
xchg
and
sbb
test
pop
xchg
fistpl
push
or
arpl
lods
push
scas
push
int
xor
fidivl
rolb
dec
sti
or
das
fists
mov
pop
cwtl
lods
test
shll
inc
out
subb
jp
or
push
cmpsl
xor
nop
sbb
iret
sbb
ss
add
sbb
push
nop
shlb
pusha
aaa
jb
loop
orl
fimuls
fstpt
data16
mov
jg
sbb
inc
and
inc
ret
and
out
dec
push
js
jno
push
xchg
aad
fnstsw
shll
in
std
das
in
popf
mov
pop
daa
push
jmp
pop
cmpsb
stos
mov
int
xlat
fidivl
shlb
cwtl
xchg
ficompl
in
adc
test
sbb
hlt
rclb
rcr
adc
mov
mov
xchg
pop
lods
xchg
fisubrl
addr16
mov
push
xor
fwait
add
or
pop
xchg
rolb
lret
jge
or
or
pop
sub
adc
mov
sub
aaa
cmp
cmpb
test
xchg
fadd
mov
add
cltd
idivl
inc
push
mov
rorl
inc
and
cwtl
aad
xchg
repnz
dec
jmp
fisttpll
cmpb
dec
pop
add
mov
or
mov
xchg
pop
push
jge
mov
ss
push
push
adc
jmp
or
fldenv
outsb
mov
jb
gs
stc
shr
dec
sarb
outsl
jb
sbb
jl
cmp
mov
das
add
fcomps
mov
lahf
mov
in
or
into
sbb
xchg
mov
sub
dec
adc
xor
push
data16
xchg
lea
or
stos
fistpl
cmp
or
jg
push
xor
xchg
pop
rorb
xlat
cltd
add
loopne
pop
and
or
pop
mov
fbld
dec
ja
sub
mov
and
pop
mov
jbe
xlat
xchg
movl
test
add
cmp
add
mov
cmp
mov
xchg
scas
ret
addr16
push
in
das
jnp
sbbb
mov
cmp
outsb
rorb
push
xchg
pusha
jg
sahf
cmpb
jnp
sbb
push
add
xchg
sbb
inc
cld
dec
cmp
pop
mov
xor
cmc
push
sub
add
in
cld
test
push
mov
lods
push
loopne
jb
pop
nop
in
add
xchg
bound
arpl
jae
call
pop
push
mov
test
lods
dec
xchg
ds
lea
push
cmpl
cmc
in
push
pop
or
push
repnz
sbb
lds
imul
ret
add
out
out
shrl
fnsave
and
popf
mov
lds
std
scas
mov
shll
lock
leave
add
push
incl
lahf
mov
xor
in
loope
pop
xchg
mov
lahf
jecxz
out
jne
lret
cmp
push
insb
add
mov
in
dec
subb
jge
mov
dec
cmc
xor
jne
leave
rol
xchg
loopnew
or
sbb
aaa
aaa
mov
xchg
cs
add
mov
ljmp
test
dec
xchg
iret
lret
and
sub
aaa
add
inc
outsl
sarl
pop
lret
mov
scas
ljmp
inc
sbb
or
mov
call
andl
and
sti
dec
mov
shlb
wbinvd
jle
imul
cmc
aam
sbb
pop
add
cmpsl
inc
cmpsb
sub
clc
mov
ljmp
dec
xchg
adc
inc
sub
and
in
scas
jmp
jg
pop
stc
xchg
push
aas
negb
int
or
stos
ljmp
ss
in
int3
or
ret
iret
adc
insb
fnstenv
adc
in
sub
imul
nop
gs
int3
ds
sahf
ret
inc
scas
lcall
xor
fs
pop
repnz
out
insl
out
mov
mov
sbb
and
rcll
sub
lock
pop
mov
lahf
sbb
pop
stos
and
push
or
or
and
insb
xchg
jle
sub
jbe
inc
ds
sub
jmp
add
ret
and
xchg
xchg
aas
dec
mov
aaa
jbe
in
or
mov
or
imul
in
push
shl
das
mov
adc
mov
push
mov
inc
orl
andb
inc
bound
fadd
sti
dec
add
xor
ds
mov
jg
xchg
in
mov
push
dec
fists
mov
ret
jns
dec
cli
push
sub
mov
movsb
notl
int3
nop
mov
jnp
insl
testb
or
xchg
push
add
sub
push
in
pusha
into
sahf
add
std
push
faddp
inc
cmp
into
enter
std
push
xor
push
mov
pop
sbb
cmp
ss
in
jle
add
insb
sarl
dec
arpl
loope
sbb
movsb
loop
stc
inc
sbb
pop
adc
fisubl
loope
inc
bound
mov
rorb
pop
in
outsl
stos
fisubs
add
das
sarb
lret
stos
and
dec
jb
inc
mov
sbb
push
xor
div
stos
rcll
arpl
jae
push
sbbb
xor
pop
or
mov
sbb
xor
sbb
sti
rolb
cmp
repnz
or
mov
sub
rcll
jmp
das
rclb
sub
mov
xor
fcom
mov
cli
fldenv
xor
movsb
stos
ds
repz
addr16
rcrb
arpl
out
in
les
sbb
daa
fnstcw
imul
mov
pop
gs
cmp
mov
pop
sahf
std
xchg
cld
or
xchg
cmpl
mov
and
outsb
rol
adc
cmp
mov
fadd
insb
mov
push
aam
lods
popl
jg
fsubrs
or
dec
inc
jmp
jnp
lock
cs
ja
out
push
add
fnstsw
test
sub
inc
inc
fwait
sahf
push
insb
mov
xchg
or
mov
push
mov
mov
push
xchg
hlt
jg
mov
pop
insb
cli
xchg
sahf
xor
push
lock
jno
cli
xchg
cltd
mov
xchg
les
add
call
sahf
mov
cs
or
mov
and
fisubrl
cmpsl
inc
clc
aaa
sbb
or
adcl
mov
dec
pop
mov
enter
jb
jle
test
lahf
pop
popf
je
inc
adc
movsb
inc
mov
fwait
inc
and
fsub
and
icebp
cmp
mov
inc
roll
mov
mov
xlat
mov
je
sub
pusha
sub
cmc
jmp
insb
or
lret
inc
xor
adc
pop
jo
outsl
sahf
in
adc
inc
cmp
sub
and
push
pop
in
or
push
xchg
int
push
cmp
test
mov
addb
sbb
jle
jp
adc
mov
push
sbb
cli
repz
fs
sbbl
pop
xor
sub
jnp
movsl
adc
sub
mov
dec
inc
jl
xchg
xor
out
xchg
lods
decb
repnz
push
sub
int
daa
hlt
jae
and
jl
xor
add
daa
fstpt
jmp
push
push
push
rcrb
into
xor
xchg
lods
add
push
aam
and
outsl
ljmp
fmulp
jmp
ror
add
xchg
adcb
xchg
pop
hlt
xchg
jmp
into
sti
push
mov
inc
ljmp
sahf
jne
pop
data16
add
cli
mov
mov
out
hlt
loop
xchg
out
xor
push
pop
add
stos
pop
aaa
push
pop
add
clc
jge
arpl
push
cmp
xor
arpl
mov
adc
popf
fnclex
mov
push
mov
mov
popf
fdivs
data16
mov
lods
adc
fwait
mov
negb
add
gs
loopne
inc
pop
mov
fcomps
rcl
outsb
rorb
push
dec
pusha
or
pop
cltd
jnp
and
push
adc
jmp
and
jg
add
dec
cmc
mov
xchg
loope
push
movsb
pusha
push
outsl
inc
fadds
push
mov
xchg
enter
mov
push
out
loop
cmp
jl
cli
cmp
out
xor
fstl
lods
lods
jno
xchg
popa
das
pop
out
inc
push
enter
mov
mov
iret
ds
adc
xor
adc
push
dec
pop
lahf
push
enterw
arpl
and
cltd
adc
push
add
out
cltd
adc
jmp
sbb
push
out
arpl
mov
jmp
jno
cmp
cmp
add
cmp
lock
jmp
mov
mov
push
cmp
cmp
scas
pop
dec
testb
xchg
fwait
shl
fst
xchg
jnp
mov
scas
in
mov
fstpt
cmp
pop
test
loopne
adc
sbb
dec
fs
push
push
mov
gs
jbe
push
aad
pop
ds
xchg
mov
or
bound
ss
xor
sbb
inc
mov
xchg
sbb
incb
scas
sbb
popf
cli
pop
inc
dec
cmc
adc
xor
mov
pop
or
cmpsl
sahf
mov
aas
sbb
inc
pop
xor
jp
bound
lods
inc
movsb
push
mov
addr16
outsl
inc
pop
jne
xchg
imul
pop
test
mov
jmp
pusha
mov
and
pop
shrb
inc
mov
mov
and
idivb
pop
popa
mov
jp
subl
mov
ljmp
lds
fstpt
es
jmp
pop
les
jns
mov
cld
dec
jmp
lds
das
mov
pusha
out
sub
fisttps
ficoml
push
jle
inc
mov
dec
inc
pop
inc
xchg
sub
sub
sar
xor
adc
jg
pop
pushf
cli
mov
aam
jge
add
testl
and
cmpsl
or
cmp
stos
xchg
fs
xchg
pop
mov
pushf
fiaddl
negl
cli
aaa
push
and
jmp
in
xlat
std
pop
popa
rcrl
imul
out
repz
push
scas
lret
or
cli
inc
pop
inc
out
add
mov
mov
cmp
push
movsl
lret
dec
lea
ljmp
jle
adc
xor
roll
popa
lret
ficoms
out
xlat
mov
xchg
adc
popa
pop
push
push
mov
mov
inc
test
int3
js
and
daa
pop
and
into
mov
leave
mov
call
cmpsl
pop
stos
test
stc
mov
jno
fildll
cltd
lea
leave
mov
popf
ljmp
fwait
sub
jle
cwtl
movsl
mov
xchg
in
dec
cmp
ds
mov
xor
ret
pop
and
test
add
test
lea
add
into
pop
sahf
mov
push
in
sbb
movsl
call
fisubrl
or
fstpl
enter
imul
add
lea
fisttpl
je
mov
setne
loop
jl
pop
cmp
add
cmp
pop
jo
mov
mov
mov
imulb
inc
std
push
dec
push
mov
movsl
mov
cmp
shll
xor
ror
loopne
mov
testb
sub
imul
cld
nop
je
in
xchg
into
dec
cwtl
repnz
pushf
jmp
jns
mov
xchg
dec
cwtl
cli
push
sbbl
and
mov
pushf
arpl
repz
jmp
lods
inc
mov
add
push
jb
jno
fstpt
cmp
inc
mov
outsb
mov
std
pop
or
pushf
dec
sub
les
jle
jno
insb
movsl
adc
lahf
lock
add
cld
pop
push
lods
pop
jecxz
dec
cmc
and
andl
stos
xchg
mov
mov
idivb
pop
xor
shrl
pop
out
cmp
lds
es
cmc
push
loope
mov
fsts
jg
mov
nop
add
arpl
or
xchg
dec
adc
mov
xor
pusha
pop
push
decl
mov
outsl
roll
xchg
cmc
add
les
fdivp
jle
icebp
or
fdivl
arpl
sub
stos
pop
cmp
or
inc
jnp
ret
pop
mov
sbb
xchg
call
mov
data16
pop
sahf
lods
and
fstpt
mov
cmc
leave
test
xor
jbe
jno
les
xor
es
mov
dec
push
lret
or
rcr
out
or
and
ljmp
std
or
push
aaa
pop
xchg
and
mov
mov
mov
mov
out
xor
or
or
popa
lods
and
and
jmp
push
stos
jbe
int3
popa
xor
out
aaa
das
push
pop
and
or
insl
outsl
fisttpl
sub
lods
push
adc
stc
xchg
int
mov
xor
lea
cltd
pop
push
enter
stos
or
stc
inc
inc
aam
or
int3
mov
movl
dec
mov
pusha
popf
aam
pop
es
out
lret
push
pop
push
outsb
adc
leave
gs
test
adc
inc
sub
mov
popa
movsb
jg
or
inc
aad
pop
dec
das
xor
xor
es
mov
cmc
aaa
and
jle
scas
bound
mov
mov
dec
mov
cld
or
mov
add
addr16
clts
mov
shl
mov
and
mov
imul
xchg
cwtl
pop
pop
sub
and
icebp
cmc
scas
add
mov
es
bound
cmp
test
or
jge
in
push
push
lock
push
inc
jl
jno
lods
adc
lods
dec
sbb
pop
sbb
pop
gs
mov
cmp
and
push
int
lds
jne
push
gs
addl
mov
pop
test
pop
mov
ds
jo
adc
sub
out
push
dec
sbb
mov
mov
and
lds
aaa
jae
push
arpl
lods
mov
mov
stc
cmp
addr16
fadd
popf
dec
je
test
jns
mov
add
pop
into
push
mov
cmp
andb
jp
fwait
mov
dec
cli
xchg
ret
jge
xchg
fidivl
adc
int3
inc
push
and
mov
stc
stos
data16
mov
push
sbbb
ret
mov
leave
jae
into
pop
loope
scas
push
ss
jae
lock
rorb
scas
outsb
adc
movsl
or
pop
call
and
xchg
js
sbb
fs
insl
sbb
call
int3
dec
push
mov
and
adc
add
filds
mov
adc
jb
sub
cmp
jno
dec
mov
test
das
mov
or
xchg
xor
mov
popf
add
push
insl
insb
cmp
lahf
sub
mov
fidivs
test
or
daa
out
sub
xlat
pop
scas
mov
and
cmp
ret
lock
mov
lahf
test
aad
das
aas
roll
adc
loope
scas
cmc
outsl
roll
jns
fadd
xchg
sub
repz
sti
sbb
inc
daa
and
scas
imul
mov
xorb
or
scas
imul
scas
scas
sbb
push
and
xchg
jecxz
mov
inc
inc
loop
sbb
xor
push
test
stc
cld
je
das
cmp
dec
or
aam
insl
fisubrs
movsl
lods
sub
cmp
pushf
mov
pop
pop
fadds
xchg
lods
or
inc
cld
jge
mov
xor
pop
std
lret
subl
mov
clc
subb
pop
je
hlt
add
push
scas
dec
push
adc
aas
ret
xchg
out
aad
inc
sbb
insl
imul
cmp
and
xor
stos
daa
movsb
jle
aam
mov
xor
ja
push
or
mov
adc
in
xor
inc
or
in
clc
push
jns
mov
ds
icebp
outsb
hlt
andb
cmp
jnp
jge
popf
jmp
lahf
add
push
add
cli
and
or
mov
dec
fimull
fildll
sub
out
iret
cmp
adc
aad
adc
xchg
dec
sbb
inc
cmp
call
xchg
pop
sub
sbb
mov
and
mov
movsb
mov
xchg
jbe
popa
cmc
jecxz
aad
fsubrs
lods
xchg
jp
lret
pop
inc
sub
dec
popf
jg
add
sbb
inc
inc
inc
nop
jae
inc
push
stos
test
testl
lds
jp
fstps
shrl
mov
push
inc
push
leave
pusha
cltd
add
lahf
lock
pop
mov
lret
rcrb
sahf
xchg
cmp
stc
xor
aaa
pop
data16
and
lcall
add
pushf
mov
std
adc
jno
add
std
cmc
mov
mov
cmp
addb
dec
sub
aaa
xor
mov
mov
rol
repnz
scas
out
fs
or
xor
pop
push
mov
sub
arpl
push
sub
cwtl
sbb
pop
jl
inc
dec
dec
outsb
lret
xor
mov
loope
add
xchg
xchg
and
dec
loop
test
add
rorb
popw
jl
xor
insb
icebp
sbb
cmp
fistl
inc
ficomps
dec
cmp
pop
inc
pop
andb
dec
xchg
inc
push
push
add
stos
clc
xlat
jl
xchg
mov
or
sbb
addr16
add
addb
fs
pop
inc
cmp
sub
rclb
mov
xchg
mov
inc
xchg
call
jmp
lahf
jns
jns
ret
cs
pop
jge
fcoms
jmp
fcomps
mov
cmp
lret
and
xchg
lods
loop
fildll
inc
icebp
mov
stos
mov
aad
push
enter
test
xor
or
sub
and
popf
fimull
push
sub
aas
adcl
push
adc
movsl
pusha
jnp
xchg
repnz
mov
scas
or
cmp
push
loop
jle
lock
add
lcall
lea
mov
shl
xchg
mov
sub
xor
outsb
icebp
or
or
mov
sbb
xor
sbbb
lock
push
xchg
dec
add
in
aas
push
data16
jl
adc
jmp
jae
imul
pop
arpl
mov
push
inc
rorb
adc
mov
push
filds
loopne
xor
add
shrl
sbb
add
cmp
cmpsb
js
mov
fs
es
add
mov
add
jo
sub
or
jae
aaa
xchg
pop
leave
lcall
fcmovbe
push
lock
adcb
aam
adc
inc
xchg
xchg
loop
jge
fmuls
xchg
pop
mov
pop
ret
dec
shr
cmpsb
in
aaa
lock
mov
sbb
stc
fwait
pop
pavgw
or
cmpl
clc
push
push
daa
add
xor
aad
sbb
lret
jmp
cmp
int
enter
sahf
gs
stos
adc
inc
mov
outsb
sbb
adc
adc
and
and
inc
pop
mov
xchg
sbb
push
repnz
loop
and
test
lret
xchg
test
jle
xchg
mov
cmp
push
ficompl
push
fbld
or
push
popw
shrl
mov
rolb
stc
mov
xchg
fistpll
mov
test
mov
xchg
ret
mov
leave
xlat
and
cmpsb
or
jmp
xchg
imul
les
fldlg2
jb
add
or
or
sub
cli
lods
imul
stc
sti
xor
sbb
and
hlt
out
sub
xor
jo
repz
dec
xor
jne
jb
icebp
xchg
outsl
jecxz
rcrb
cld
xor
loope
inc
pop
inc
mov
add
push
fcoms
ss
add
pusha
pop
and
dec
mov
movsl
dec
push
imul
or
int
iret
stc
xchg
stos
xchg
push
hlt
orb
push
adc
test
mov
sub
dec
push
std
xchg
fsubs
lods
sub
xchg
xchg
fildl
xchg
or
pusha
add
adc
mov
add
pop
lods
movsl
out
mov
int3
or
mov
xor
test
aas
push
mov
iret
sub
mov
or
rcl
sub
pop
addr16
stos
mov
repnz
jmp
push
mov
scas
jmp
test
aam
sub
xchg
xchg
and
insl
incb
jne
je
shrl
push
testl
ja
cmpsl
dec
xchg
mov
fisubl
push
nop
xor
xlat
pop
mov
icebp
push
dec
ja
sub
sqrtps
jle
lds
aaa
dec
lods
cmpsb
test
sarl
mov
aas
ss
and
lea
jnp
popf
lods
scas
ja
mov
push
mov
repz
pop
movsb
mov
and
cmp
lods
sub
stc
cld
pop
aad
nop
je
notl
jno
dec
push
cld
loope
or
leave
xor
and
lods
aaa
ss
aaa
dec
sarb
xor
rcrl
add
mov
js
loopne
test
int3
dec
jno
dec
flds
xchg
ret
rcrl
push
xchg
scas
fdivp
xchg
push
mov
movsb
pop
imul
outsl
iret
xlat
sub
mov
jne
and
mov
mov
enter
ds
push
jns
sbb
adc
lock
add
or
xchg
mov
daa
sbb
sahf
ret
inc
xchg
out
inc
mov
push
adc
outsl
int3
mov
fidivrl
pop
test
push
jmp
bound
xor
dec
push
les
mov
inc
aaa
xchg
fists
jg
lds
scas
pop
xor
add
rcl
pop
out
xchg
in
rorb
mov
aaa
push
add
lods
jb
cmp
rorl
ret
out
dec
jae
rorb
fsubs
mov
repz
or
fimuls
stos
sub
std
imul
mov
sbb
xor
mov
lcall
adc
and
mov
aaa
rorb
mov
mov
sbbl
or
jge
pop
loope
fnstcw
jg
mov
sbb
cmc
std
xchg
pop
or
das
jge
movsb
xlat
adc
pusha
scas
cli
and
inc
mov
mov
sbb
fdivl
xor
sbb
dec
lret
aas
shlb
and
clc
sub
mov
scas
cmp
cwtl
es
cmp
arpl
incb
sub
mov
push
leave
mov
es
xor
mov
shlb
push
out
and
mov
imulb
sub
pop
and
ljmp
dec
jno
jecxz
cmpsl
jmp
bound
pop
loopne
add
mov
cmp
xor
push
andl
out
xor
ss
and
scas
xor
int
sbb
xchg
jp
pop
call
adc
push
andl
cmp
pop
cmp
mov
jecxz
adc
int
cmpsb
mov
pop
arpl
mov
mov
inc
cltd
jno
nop
and
pop
data16
or
cmp
sbb
mov
xor
out
cs
lods
ds
addb
dec
ror
inc
push
in
inc
xchg
xchg
aaa
jl
mov
in
cmpsb
xor
mov
inc
mov
es
imul
pop
add
mov
xchg
xchg
lea
add
push
hlt
imul
mov
ja
or
adc
jmp
xchg
cmp
sub
cmp
fwait
sub
lcall
mov
jae
int3
scas
and
aad
mov
sti
sbb
fmul
inc
pop
jge
sub
fsubrp
xlat
sbb
mov
push
xchg
stos
or
adc
xor
aam
sub
cmpsl
adc
addr16
dec
cmp
mov
out
jmp
aas
iret
test
lret
loopne
in
sub
xchg
popf
or
pop
mov
mov
data16
jg
lds
out
jns
inc
mov
cli
mov
jecxz
add
mov
das
add
adc
mov
push
xchg
popf
test
and
cmp
cs
pop
jg
sub
roll
xor
icebp
imul
sub
filds
dec
aam
add
jle
and
aas
xor
cmp
pop
dec
or
stc
cmp
test
mov
bound
add
push
lock
nop
push
push
mov
pushf
arpl
dec
pop
mov
jae
cmpsl
ret
fildll
sub
mov
pop
mov
xchg
repnz
jo
push
ljmp
adc
dec
xor
in
push
icebp
out
inc
mov
popf
xchg
outsb
clc
xor
test
rolb
xchg
adc
xchg
ljmp
pushf
and
pusha
dec
into
int3
sti
fldl
repnz
call
xor
mov
mov
ja
sub
mov
clc
jns
jns
jbe
rcr
xor
inc
stos
jecxz
fldpi
movsl
mov
mov
xchg
cld
cmp
mov
xlat
sub
fnstsw
fisubs
rorl
mov
xchg
jle
lret
sahf
push
and
pusha
fninit
mov
pop
mov
das
lock
addb
mov
fnstsw
push
sbb
fldt
out
dec
fidivrl
mov
les
sub
lret
fcompl
test
jecxz
inc
fists
mov
jmp
xor
sbb
ljmp
popf
sbb
sub
jno
push
jge
mov
and
stos
in
adc
shrl
xor
dec
sbb
jno
out
push
xlat
out
mov
jnp
pop
sub
xor
int3
mov
xchg
or
mov
cs
fs
mov
pop
outsl
jo
les
gs
stc
cmp
andl
leave
mov
xchg
adc
sbb
push
neg
nop
arpl
xchg
mov
aaa
xchg
les
das
icebp
repnz
fistpl
jmp
and
pusha
les
into
test
ret
fs
inc
sti
xchg
cmpsb
push
pop
loop
cmpb
es
mov
movsl
imul
ret
and
sbb
call
loop
out
dec
xchg
test
push
aas
add
cmp
ja
mov
nop
cmp
add
jge
aaa
adc
stos
pop
xor
inc
jl
pop
sbbl
inc
dec
push
cltd
enter
and
dec
mov
cs
mov
int3
add
lock
sub
mov
ss
add
stos
and
std
test
inc
cmc
loope
cmc
mov
cs
jne
add
push
lods
out
or
push
les
nop
ds
into
fwait
into
jnp
pop
sbbb
add
adc
cmpsb
and
cmp
fcmovb
nop
dec
inc
add
clc
inc
int
cwtl
mov
imul
ljmp
push
sub
xor
push
sbb
jbe
cmp
inc
add
bound
mov
push
rorl
lcall
repnz
pop
add
fsts
shrb
in
bound
adc
inc
adc
xor
adc
addb
js
inc
add
cmp
jge
mov
shr
adc
test
sbb
jae,pn
int3
mov
cmp
in
mov
cwtl
bnd
cwtl
mov
in
add
test
xchg
mov
sub
lods
xor
enter
push
mov
push
roll
xor
das
pop
in
mov
sarb
xor
clc
bound
ret
test
jbe
jo
nop
dec
movsb
sub
fisttpll
inc
fimuls
hlt
pop
pop
add
out
adc
xor
or
sub
jns
nop
dec
iret
jns
lds
xor
xchg
jmp
sarb
fcomp
pop
mov
jmp
lea
popa
rorl
outsb
in
andl
jmp
scas
aad
add
in
les
mov
into
mov
lcall
es
imul
cmp
ja
cwtd
nop
int
scas
and
push
pop
cmpsb
mov
sti
out
xchg
sbb
push
popa
pop
pop
mov
xchg
mov
fdivl
jg
add
popf
push
xor
lods
int
inc
nop
pop
fidivs
subl
push
and
andl
fsubs
stos
xor
out
jg
adc
jns
lcall
pop
sbb
shrl
dec
fidivs
shll
cmp
fimull
jbe
mov
inc
jae
sbb
jns
inc
pushf
test
xor
in
xor
arpl
in
test
pushf
test
call
mov
mov
mov
clc
insl
push
pusha
leave
addb
test
or
push
jbe
xchg
outsl
rolb
inc
inc
fwait
outsb
dec
sub
popa
roll
xchg
push
icebp
cmc
shrb
repz
mov
ficoml
xchg
in
mov
mov
xchg
cld
cmp
pop
sub
fucomip
mov
aad
into
les
les
fnstsw
adc
pop
adc
inc
imul
test
aam
sbb
mov
and
jmp
outsb
iret
lock
ficomps
stc
sub
jge
and
mov
jmp
push
push
call
sub
adc
je
and
mov
test
mov
add
arpl
and
loopne
dec
repz
mov
jns
pop
and
testl
scas
push
jp
arpl
adc
popf
add
jle
into
sub
or
popa
cmp
nop
sbb
divb
inc
lahf
js
js
pop
push
insb
pushf
ret
pop
xor
sarl
pop
sub
or
or
fisubrs
enter
ret
mov
clc
dec
and
dec
pop
mov
ficoml
ss
insb
mov
lods
hlt
pop
insl
jmp
jbe
adc
mov
jnp
adcb
pop
lods
jno
idivl
cld
roll
and
adc
add
ret
rolb
push
sub
subl
pusha
push
imul
pop
daa
lahf
insb
or
sbb
sti
jl
scas
fiaddl
popf
or
push
data16
pop
hlt
rorb
mov
andl
loope
xchg
jo
cmp
stos
ret
ss
cli
mov
mov
sub
andps
sub
xchg
clc
or
jle
out
inc
ds
cmpsb
lds
dec
jo
in
jno
mov
popl
fmul
bound
dec
enter
push
jbe
add
bound
jbe
sub
int
es
mov
jb
xchg
loope
test
sahf
mov
push
daa
testb
xchg
std
mov
inc
mov
fisubrs
xchg
std
lcall
dec
cmp
add
pop
imul
and
dec
xchg
sbb
push
mov
push
cmp
or
inc
cs
add
push
mov
pop
fstpl
jno
scas
or
and
popw
movsb
out
push
and
loope
jnp
test
nop
mov
mov
or
jge
xlat
rcrl
add
and
adc
imul
mov
insb
bsf
jl
je
mov
mov
xchg
mov
sbb
push
mov
sbb
in
rorl
gs
dec
push
xor
inc
mov
or
push
stc
test
lret
bnd
dec
and
cmp
jle
push
jl
xor
mov
ljmp
and
dec
push
jecxz
call
cmc
out
pop
mov
mov
dec
out
cmpsb
mov
mov
add
add
cmp
mov
pminub
mov
sar
leave
add
jge
sahf
mov
xchg
les
pop
or
scas
push
xchg
lahf
cli
jmp
scas
outsl
shl
arpl
mov
js
xchg
ficoms
sbb
xchg
inc
adc
sbb
or
xchg
or
or
aad
jl
pop
sub
push
outsl
aas
inc
stos
add
lock
popl
push
je
repz
aam
inc
cli
mov
fldenv
mov
push
mov
mov
push
pusha
push
cmp
nop
cmp
aas
shll
dec
push
push
lahf
pop
mov
push
jnp
gs
pop
pop
shl
sub
and
xor
ret
inc
mov
aas
sub
mov
or
push
aam
xchg
test
js
lods
xchg
mov
loopne
std
xchg
push
push
fs
lods
and
fs
rcll
jns
sbb
push
js
loopne
sar
xor
pop
mov
inc
mov
ja
xchg
fcomi
jecxz
clc
movsb
inc
mov
xchg
addb
arpl
insl
cmpsl
out
lods
mov
push
inc
adc
dec
jbe
xor
inc
lret
mov
movsl
push
dec
fs
stc
sti
inc
add
xrelease
lds
mov
popa
push
xor
fidivrl
ret
add
rclb
mov
and
aad
pop
xlat
lret
loop
scas
out
sbb
lods
sbb
inc
les
push
jle
mov
jle
inc
je
fld
cmpsb
into
jno
mov
fiadds
jle
xchg
adc
sub
enter
sahf
sub
sbb
xchg
test
ret
dec
mov
insl
lcall
sbb
pop
cwtl
pop
push
mov
jmp
cmp
jg
das
pop
push
mov
jg
cmpsl
out
mov
sub
or
xchg
sbb
sbb
mov
es
mov
xchg
loopne
rorl
or
adc
dec
divl
jp
popa
add
shlb
pop
out
cltd
es
insl
cmp
leave
inc
dec
loop
mov
cmpsb
dec
icebp
jmp
xchg
test
fs
and
nop
dec
enter
sub
lods
insl
nop
and
ss
add
mov
icebp
inc
ret
jb
xchg
xor
or
lock
pop
push
fimull
lock
lea
scas
push
sub
jmp
sub
jb
filds
stos
jp
inc
sbb
inc
pop
addr16
and
pusha
sti
test
push
imul
xor
ljmp
dec
ffree
xlat
mov
xor
xchg
cli
ja
lock
xor
mov
dec
int
add
les
sbb
pop
mov
cmc
jns
shl
repnz
jle
loop
pop
fstpt
dec
push
jo
adc
xor
outsb
mov
daa
ret
push
insb
xchg
cmpsl
stos
shll
lret
mov
ljmp
clc
mov
dec
int3
ljmp
pop
dec
cmpsb
and
xchg
sbb
sub
xor
and
das
push
cs
shrb
add
jnp
push
mov
push
pop
dec
insb
jmp
mov
int
jb
inc
and
or
and
out
notb
mov
xor
jp
sti
roll
jmp
loopne
sub
cmc
pushf
xchg
test
mov
fdivrs
test
xchg
out
out
mov
mov
mov
jb
jb
or
addr16
adc
js
push
inc
sbb
pushf
add
call
int
ret
sbb
or
sbb
out
icebp
shlb
mov
dec
fisubrs
mov
mov
push
or
gs
mov
fbld
std
or
jge
divl
inc
outsl
ljmp
add
insb
fsub
xchg
cmp
mov
mov
aas
add
stc
leave
cmp
mov
inc
xor
inc
xchg
sbb
in
jb
shlb
adc
mov
fbstp
sti
fisubl
mov
dec
pop
je
or
inc
sub
addr16
nop
fwait
mov
fwait
push
imul
sbb
push
bound
xor
sbb
mov
xorl
jbe
int
mov
test
cs
mov
sub
push
gs
aas
jg
imull
mov
xor
fnsave
or
mov
lcall
sahf
add
cmp
orb
jnp
push
add
outsl
push
mov
hlt
and
xchg
dec
fldt
in
push
stos
mov
imul
inc
sub
jp
push
mov
mov
xchg
nop
fildl
xchg
or
jae
xlat
jp
iret
jp
pop
shl
int
sbb
or
icebp
pop
pop
movsb
in
lea
push
dec
and
sbb
push
into
rorb
push
mov
mov
rclb
adc
xor
mov
push
mov
cmp
fcmovnb
dec
xchg
xchg
jle
loope
jbe
cmpsb
pop
jecxz
jae
pushl
mov
in
sbb
xor
nop
testl
mov
sbb
fdivrs
lods
xchg
cmp
mov
sbb
xor
pusha
push
or
cmp
mov
fwait
add
sub
popa
cmp
push
es
mov
add
push
xchg
mov
jnp
outsl
int3
add
mov
mov
jecxz
adc
mov
ljmp
cli
xor
test
inc
cmp
adc
pop
cmpsl
cmp
sti
lret
stc
mul
pushl
add
clc
push
cmp
lret
je
mov
cmpb
dec
mov
fcompl
dec
sbb
lods
les
decl
mov
push
bound
sub
add
lahf
inc
mov
sbb
mov
cmpsl
push
jae
and
rolb
aam
pop
sbb
aaa
scas
jge
add
add
cmp
sbb
shll
fsts
out
sub
xchg
xchg
lods
xchg
pusha
loop
sahf
lcall
jl
cmp
cmpsb
or
loop
cmp
fidivrl
arpl
mov
fdivrs
in
lret
cltd
xchg
inc
adc
test
mov
sub
lea
sbb
push
xor
dec
adc
adc
xchg
ljmp
out
jle
mov
imul
and
out
cltd
fisubrl
stc
fstps
push
mov
out
das
lret
enter
mov
dec
outsl
fstpt
pop
leave
xchg
fldcw
xor
and
out
pusha
inc
jl
into
cmpsl
mov
pop
xor
popf
pop
faddl
sti
lret
add
out
adc
mov
push
fimull
notb
mov
sub
push
nop
fcoml
mov
or
pusha
int
cmp
cmp
xchg
int3
jae
sbb
dec
lock
popa
out
popa
cld
iret
mov
imul
xor
push
ds
fwait
sbb
xchg
sbb
mov
xor
pop
or
mov
pop
ja
dec
clc
clc
outsb
pop
lcall
je
pop
or
jp
mov
int3
shrb
icebp
adc
inc
ds
cld
les
push
cmc
scas
fsubrl
adc
testb
bt
pop
js
hlt
xchg
xchg
cmp
xor
push
cld
addr16
daa
xor
jmp
fidivrs
stos
and
stos
cmp
fdiv
push
ds
mov
outsl
clc
shlb
outsb
out
cmp
ror
nop
shlb
pop
mov
xchg
mov
push
in
inc
outsb
cmpsl
popfw
into
lahf
cltd
push
cmpsb
test
in
repnz
xchg
push
clc
xchg
or
fs
outsl
sub
adc
mov
fwait
stos
data16
mov
cmp
xor
daa
pop
std
pop
in
dec
sub
movsb
movsl
lods
fstpt
loop
mov
imul
ret
es
lods
lea
mov
into
and
pop
add
dec
rorb
dec
add
jne
icebp
daa
xor
fwait
adc
iret
sbb
pop
mull
mov
arpl
dec
cmp
sub
or
popa
es
ljmp
out
cltd
dec
adc
xchg
xlat
hlt
inc
xchg
cltd
dec
scas
nop
adc
shlb
lock
mov
xchg
pop
dec
adc
arpl
in
dec
inc
pop
sbb
test
dec
leave
lock
inc
notb
lcall
jecxz
mov
xor
push
leave
lods
fstpl
push
lea
shll
jmp
mov
mov
mov
sbb
xlat
loopne
dec
mov
push
sbb
clc
jnp
jmp
mov
inc
ljmp
gs
adc
push
int
cmp
push
into
rcrb
es
jno
push
dec
jecxz
dec
out
ja
jnp
into
sub
scas
fcomps
jae
jns
insl
xchg
inc
push
dec
xor
lds
icebp
inc
mull
lods
adc
bound
iret
sbb
sub
daa
push
sahf
pushf
inc
mov
xchg
xchg
outsb
ror
xchg
repz
mov
jne
jns
mov
je
and
push
insb
xchg
push
push
push
jb
fsubrs
fnstenv
pop
daa
repz
shrb
mov
jo
push
out
mov
sarl
dec
test
enter
shrb
stos
push
sbb
testl
jne
test
insb
mov
mov
add
loop
sbb
pop
scas
rcl
loope
dec
pop
mov
or
sub
ja
xchg
into
inc
lods
mov
lahf
sarb
push
mov
or
mov
push
and
or
or
inc
or
arpl
loop
data16
fnstsw
lds
inc
push
popa
and
cmpsb
leave
add
pop
mov
lahf
sbb
stos
call
sbb
call
fisttps
push
dec
sub
fdiv
inc
imul
in
jl
imul
xchg
jnp
test
mov
sbb
push
dec
in
and
repnz
aas
and
or
xor
xchg
dec
xchg
mov
sahf
aas
dec
arpl
jg
push
fs
dec
test
sub
lock
xlat
arpl
cmp
sub
push
adc
inc
jmp
or
mov
cmp
mov
mov
insb
jne
test
test
mov
rcll
dec
bound
sti
int
out
sub
fiadds
enter
xlat
cld
stos
pop
and
fsubs
lock
sub
jno
mov
das
rcr
repz
xchg
dec
cmc
mov
inc
mov
aas
addr16
push
pop
or
cld
insb
dec
cli
or
pop
xchg
mov
sub
cmpsl
fucom
pop
lcall
ret
sbb
xchg
lds
addl
jp
push
add
sahf
push
xor
ljmp
in
lods
outsb
in
pusha
pop
sbb
mov
cwtl
adc
dec
sar
ja
test
pop
xor
dec
into
cmp
push
int
daa
push
cmpsl
and
adc
xchg
cmp
jae
stos
mov
dec
push
mov
push
js
cli
jle
push
pop
sbbb
dec
sub
push
jnp
mov
sbb
add
sub
mov
push
cmp
lret
ljmp
xor
ret
cmpsl
xor
aam
push
sbb
pop
xorl
insb
je
loop
adc
imul
lds
bound
lahf
sbb
in
push
jns
adc
sub
mov
mov
and
leave
xchg
sbb
cmp
aas
xor
jle
mov
sbb
sub
leave
mov
out
mov
loope
and
and
cmpsb
cmpsb
cmp
pop
dec
jo
pop
xchg
or
jg
js
jne
cltd
inc
or
sarb
jno
int3
mov
push
iret
jne
ljmp
jle
pop
inc
add
adc
iret
ret
mov
mov
mov
test
inc
sub
or
fwait
and
fucomip
fs
int3
lods
pop
imulb
mov
dec
pushf
pop
negb
mov
mov
jnp
or
out
dec
iret
push
adc
push
int
mov
popf
jge
sbb
xchg
mov
jne
inc
fstps
rcll
lcall
sub
dec
pop
leave
inc
out
cmp
inc
rcrl
addr16
iret
fmull
xchg
icebp
mov
or
add
mov
rcrb
xor
pop
xor
lods
or
cs
lea
pushf
or
scas
cli
mov
rclb
xchg
inc
mov
or
mov
loop
leave
mov
test
ss
scas
in
mov
stc
cmpsl
cmp
adc
bound
push
adc
mov
add
shl
xchg
ljmp
cld
int
mov
pop
push
std
xor
mov
pop
xchg
inc
sahf
inc
ljmp
popa
mov
mov
cmp
loope
xchg
xchg
dec
sarb
mov
repz
inc
sbb
sti
les
fnstcw
mov
mov
push
jge
push
vpaddusb
or
in
sbb
sub
push
insb
mov
mov
std
cmp
push
mov
lods
shll
bound
lea
ljmp
sbb
mov
sub
fcmovnbe
leave
xchg
pop
dec
or
sbbb
sub
jmp
dec
mov
fists
fucomp
mov
bound
shlb
push
push
lahf
inc
aam
jnp
fwait
add
cmp
mov
dec
or
cltd
stc
movsb
loop
ss
sub
sub
lahf
inc
adc
sti
aas
mov
jne
mov
lret
cs
jnp
in
cltd
ljmp
cltd
iret
rorb
mov
jne
clc
mov
push
fwait
adc
push
push
jne
xchg
or
lock
adc
xchg
imul
inc
and
xor
pop
push
mov
ja
out
pop
dec
test
fistpl
pusha
pop
leave
add
insb
cmp
push
jp
dec
xlat
iret
sbb
mov
fistl
mov
jae
lret
pop
inc
push
in
int
into
sbb
daa
xchg
ret
mov
xchg
arpl
clc
scas
jo
das
and
mov
adc
mov
adc
lds
pop
cmp
pop
mov
add
lods
cltd
xor
push
lcall
stc
sbb
dec
push
sarl
jmp
leave
movsl
adcb
and
js
mov
call
and
or
stos
jg
repz
mov
adc
xlat
mov
mov
push
js
sbb
mov
pop
xor
icebp
xor
fcoms
rol
xchg
pop
sub
or
mov
loop
xlat
cmp
movsl
nop
adc
xchg
push
lret
std
add
testb
and
adc
xor
push
clc
cmp
mov
insl
lret
push
inc
imul
pop
push
mov
cli
ret
xchg
repz
mov
and
push
sti
xchg
aaa
mov
popa
cmpb
ldmxcsr
outsl
das
jg
sbb
div
mov
dec
adc
arpl
imul
ja
and
mov
popf
fldenv
es
and
cltd
ja
adc
in
mov
xchg
sub
fisubrs
fdivrs
xchg
ss
imul
and
push
cmpsl
mov
and
inc
popa
or
fcompl
lahf
add
mov
or
jb
sbbl
or
inc
xor
push
in
and
scas
iret
jmp
mov
push
jge
cmp
mov
fdivrl
stos
pop
adc
popa
push
mov
movb
call
add
mov
inc
lcall
outsl
imul
aam
sbb
lock
jl
lods
cmc
aad
inc
jae
sahf
xchg
mov
arpl
outsb
sub
mov
mov
dec
push
popf
add
leave
sub
fdivrs
add
test
adc
add
jbe
push
push
out
xchg
mov
adc
add
or
pop
cmp
fs
ds
sti
psubsb
lds
or
mov
rolb
push
pop
add
mov
call
imul
inc
cmpsb
mov
xor
les
cmp
mov
sbb
addb
sti
cmp
add
cmp
imul
pusha
stos
dec
and
int3
daa
sub
icebp
outsl
arpl
pushf
mov
dec
xlat
jno
jne
mov
mov
decb
jp
xor
mov
sbb
hlt
ret
popa
mov
xor
add
ljmp
ss
lret
mov
addl
cli
aam
lret
addb
lret
xchg
xchg
add
inc
push
es
fs
ret
pop
in
and
lret
rclb
decb
pop
fldt
or
push
cmp
inc
jae
or
iret
outsl
fs
mov
iret
arpl
in
adcl
decl
mov
push
or
int3
pop
std
push
bound
test
jns
std
pusha
inc
sbb
loope
add
out
inc
in
dec
sbb
adc
lds
int3
rcr
arpl
push
add
popa
mov
lock
negl
sub
jb
push
push
mov
cmp
outsl
fcomip
push
push
aas
add
in
push
cmp
in
push
loop
movsb
jno
adc
cmp
xchg
sub
jnp
fs
daa
add
jp
pop
loope
sbb
xchg
or
xorb
aam
ljmp
movsb
stc
or
fimuls
mov
cmpsl
xor
ja
dec
cmc
cmp
mov
pop
and
cmpsl
int3
xor
negb
cmpsl
fs
dec
sbb
fildl
leave
dec
fnsave
rorb
int
dec
push
jp
add
mov
out
adc
std
repnz
lret
mov
pop
enter
cmp
inc
dec
lock
cmp
mov
mov
hlt
sbb
stos
xor
cld
enter
inc
push
jno
jmp
xchg
out
inc
in
loop
and
test
loope
fwait
dec
test
mov
pop
and
adc
pop
jnp
cmp
aam
dec
cmp
int
insl
sbb
or
push
cmp
nop
aas
filds
into
xchg
sub
sar
aad
lods
cmpsb
lahf
jg
inc
insl
fs
andl
movsl
ljmp
data16
fdivs
int
dec
mov
inc
fsts
mov
cli
xchg
pushw
sahf
addb
xor
aam
jp
int3
fmuls
sti
fisubrs
dec
stc
cmp
inc
popa
les
adc
dec
and
dec
stc
sub
pushf
sbb
out
add
arpl
mov
test
adc
ds
testl
rcll
inc
outsl
xchg
test
in
jg
fisttpll
cld
in
or
notb
idivb
scas
and
or
pop
and
fcom
xchg
int
dec
xchg
leave
lahf
rcrb
sub
fs
adc
daa
int3
pushf
push
fmuls
dec
add
jl
sub
lds
shrb
inc
pop
ftst
rclb
shr
ds
fildl
fcmovu
xor
das
outsl
test
and
fstps
bnd
xor
xor
enter
push
loopne
clc
mov
imul
push
jne
dec
ret
inc
mov
testl
or
repz
pop
repz
dec
cmp
and
pop
push
pop
push
add
adcb
mov
adc
xor
sub
sahf
sahf
test
testl
xchg
dec
movsb
dec
imul
pop
sbb
xor
popa
pop
and
in
subb
test
add
jg
mov
inc
jmp
shlb
inc
clc
or
add
ds
fmul
xor
add
stc
and
mov
mov
or
fldt
jne
or
sbb
test
fdiv
cmpl
dec
je
sub
inc
std
aas
in
mov
ret
fmull
cmp
jge
or
inc
mov
mov
cmp
xchg
inc
mov
bound
and
xor
inc
dec
cld
loope
adc
movsl
mov
cli
cld
pop
arpl
or
dec
inc
daa
sub
pushf
les
mov
add
negb
jge
dec
mov
and
rclb
inc
hlt
ret
cwtl
out
es
shr
ja
clc
mov
xchg
adc
mov
cmpsl
cmp
and
or
out
xchg
pop
in
sub
pop
or
push
data16
sbb
pop
jnp
aaa
and
push
xchg
xor
and
lret
add
jno
push
mov
mov
fs
sti
mov
or
adc
sub
jl
cld
add
movsb
clc
mov
stos
and
hlt
or
lds
jae
push
or
int3
ja
loopne
inc
daa
jne
cli
push
and
dec
xorb
jecxz
mov
lock
pop
add
sbb
mov
int
and
mov
call
pop
cwtl
inc
aad
out
lret
bound
data16
lcall
aas
mov
scas
loope
roll
lods
mov
iret
stos
es
jns
add
and
or
inc
insl
fadd
test
or
loopne
pop
adc
inc
sub
rclb
repz
xchg
test
nop
enter
xchg
sar
push
test
negb
out
or
jmp
mov
fisttpll
jmp
push
mov
cmp
popf
and
lea
sub
pop
or
dec
in
inc
cmpl
pop
sbb
cmpl
push
fwait
sbb
test
repz
push
sub
push
sbb
movsl
fistpll
jo
aad
inc
js
pop
lcall
mul
xchg
push
push
lds
stos
push
repnz
jno
cmp
adc
mov
icebp
jne
xor
dec
xor
scas
loopne
test
push
jb
mov
insb
mov
lcall
inc
jno
adc
dec
pushf
cltd
xchg
jg
aas
ss
cld
add
pop
jg
pop
jbe
adcl
loopne
push
or
xlat
into
mov
sahf
push
nop
mov
push
les
mov
inc
pop
inc
mov
sub
call
lret
lods
adc
or
mov
cmpb
add
lods
in
pop
sub
icebp
xchg
push
scas
das
in
mov
test
xchg
sarl
mov
mov
test
dec
out
adc
cli
stos
movsl
and
sub
or
mov
or
mov
enter
cmpsl
imul
add
movsl
insb
pop
mov
outsl
cwtl
mov
sbb
cmp
jl
ret
push
cwtl
inc
pusha
nop
es
sub
cmp
test
outsb
out
push
insl
add
cmp
xchg
dec
inc
xchg
adc
inc
cmpl
in
dec
int
out
int
mov
or
out
insb
and
inc
pop
out
xchg
push
push
dec
jnp
xor
call
mov
pop
in
xor
lret
mov
dec
pop
add
pop
and
mov
pop
filds
mov
adc
xchg
lods
pushf
pop
pop
dec
sub
add
ja
sub
adcl
pusha
dec
jae
jns
stc
push
push
ret
inc
jbe
cmp
jne
or
mov
std
push
jecxz
insl
mov
test
xchg
stc
and
mov
popa
jp
mov
pop
cmpsb
sbb
mov
xchg
adc
jns
popf
jmp
mov
clc
push
repz
push
out
add
repnz
call
inc
inc
fwait
rcrb
xor
shlb
repnz
test
sub
rorl
or
mov
and
mov
mov
jno
mov
inc
lea
lcall
out
lar
and
aaa
sbb
loop
jl
or
mov
movb
sahf
neg
mov
shrl
jae
sbb
pop
xlat
push
icebp
mov
in
add
or
cmp
js
inc
sub
std
pop
sbb
dec
negl
lret
sahf
aas
stos
es
les
in
out
imul
cmp
dec
fwait
mov
push
and
mov
lcall
dec
arpl
push
imul
subl
pusha
int3
mov
aad
repnz
dec
sub
or
xchg
cmpsl
dec
cmp
aad
or
add
sub
dec
or
fcompl
ret
xlat
add
inc
jmp
lcall
lods
adc
stc
xchg
dec
mov
jne
or
cli
dec
mov
or
xor
xchg
out
test
fwait
inc
adc
or
outsl
jg
iret
fnstsw
jae
clc
sub
inc
fs
sarb
mov
jnp
inc
jl
or
sbb
in
dec
in
ffreep
fisubl
dec
sbb
adc
out
ret
sarl
and
pop
xchg
push
adc
mov
fwait
pop
push
mov
je
es
orl
movsl
bound
fsub
enter
lods
dec
stos
scas
adc
mov
pop
jnp
cmp
jno
scas
adc
fnstsw
pop
or
and
ficoms
pop
jnp
mov
inc
lds
aaa
or
repz
push
push
cs
ja
xor
push
adc
inc
dec
sub
adc
enter
xchg
or
sub
cmp
xor
mov
dec
push
mov
aaa
jnp
data16
rcrl
rcrb
jmp
inc
sbb
sub
notl
sub
cwtl
cli
test
in
mov
cmc
and
pop
lea
cmp
pusha
and
dec
mov
fstps
in
mov
scas
inc
cmp
imul
and
mov
mov
aaa
scas
lahf
jne
cltd
repz
add
fs
lock
inc
cmp
out
inc
pop
imul
bound
in
xorl
or
mov
lods
mov
mov
cld
sti
or
mov
test
icebp
inc
adc
das
xlat
lahf
mov
andb
loope
push
mov
enter
lret
sbb
iret
adc
jns
or
fidivrl
push
mov
push
bound
sbb
sbb
je
mov
xchg
icebp
inc
in
gs
xchg
negb
sub
andl
fisttpll
mov
xchg
xchg
loopne
into
imul
mov
cmpsb
mov
stc
mov
cmp
repz
mov
pop
mov
inc
outsb
sar
repz
repnz
movsb
test
jae
loop
ret
loopne
mov
cmp
js
pushf
leave
movsb
inc
mov
push
xchg
iret
push
or
outsb
lahf
cmpb
sbb
or
js
mov
pop
stc
cmpb
stos
sbb
shl
mov
adcb
adc
mov
xor
mov
shll
push
xchg
mov
ret
daa
idivb
push
adc
xchg
cmpsl
mov
into
sbb
push
add
push
push
shrb
stos
bound
jl
scas
lret
jecxz
and
push
sbbb
fs
hlt
pop
add
nop
ret
inc
hlt
sub
nop
push
mov
subl
mov
mov
adc
dec
cmp
or
ljmp
adc
dec
loopne
mov
data16
mov
mov
pop
jp
pop
push
xchg
push
bound
shrb
mov
inc
repnz
push
ja
stc
xor
cmp
jnp
xchg
jns
jnp
call
cmp
mov
in
pop
adc
dec
aad
mov
popa
jnp
dec
mov
inc
sbbl
pushl
aas
jmp
mov
pop
mov
adc
jbe
sbb
add
or
push
fneni(8087
enter
sub
insb
dec
xchg
sbb
cwtl
inc
adc
mov
es
mov
and
mov
mov
push
mov
mov
jo
add
or
pop
lahf
jb
lret
push
push
push
lret
pop
xor
pop
rorl
out
out
adc
xchg
or
notb
and
mov
fs
xor
sbb
adc
push
xlat
lea
push
ja
push
int3
or
fstpt
sbb
iret
fmul
hlt
cmpsb
dec
mov
jnp
sahf
rorb
lret
jmp
and
in
ja
dec
sub
adc
das
in
arpl
push
clc
xchg
mov
xor
stos
lods
inc
pop
mov
add
push
mov
pop
mov
bound
mov
and
sbb
or
sub
jo
push
adc
sbb
clc
dec
jae
fsts
mov
inc
fnstsw
mov
xor
popf
mov
ja
cmc
push
lods
mov
and
cltd
mov
dec
out
cmp
push
mov
push
dec
dec
int3
cmpsl
sbb
stos
roll
jle
sub
mov
ja
inc
leave
pop
inc
inc
sbb
and
adc
stos
pop
inc
cli
dec
dec
xchg
jbe
and
dec
fidivrl
mov
xchg
or
pop
je
sbb
pushf
fld
push
pop
jbe
or
jl
push
cmpsb
sti
cmp
xor
cmp
xor
cmp
sub
repnz
mov
adc
mov
ds
out
or
cmp
xchg
hlt
incl
inc
cs
cmpl
push
xchg
jecxz
es
pop
xchg
jnp
daa
xchg
jo
std
push
lods
pop
sarl
jle
scas
jmp
xor
mov
pop
mov
mov
cs
out
iret
gs
test
mov
xor
cli
add
scas
pop
inc
mov
fsubrp
mov
inc
xchg
push
cs
pushf
sbb
int
rcl
lcall
testl
in
and
xor
add
cmc
cld
fwait
lcall
aaa
sbb
adc
cmpsl
test
loop
outsl
pusha
mov
imul
dec
pop
ret
push
xor
mov
push
mov
push
loop
insl
jg
cmp
mov
jp
popa
jno
pushf
xchg
arpl
shrl
sub
jl
lea
adc
mov
shl
mov
mov
arpl
sbb
jecxz
mov
xor
lahf
cmpsl
jo
scas
iret
push
push
add
int3
push
and
xor
out
lock
inc
xor
jl
mov
icebp
test
xchg
mov
mov
xchg
cli
or
cmp
fcmovne
jge
lret
sbb
adcl
xor
or
jmp
rcrb
sbb
push
js
iret
pop
shlb
dec
inc
push
lock
inc
int
lret
test
inc
mov
rorl
or
lea
outsl
mov
inc
xor
xchg
mov
inc
jecxz
push
das
adc
outsb
int3
push
push
cltd
jge
lret
fsubrp
test
jno
xchg
outsb
or
addr16
les
sub
jle
xchg
add
sbb
mov
je
std
outsb
and
lcall
inc
into
fsubrs
movsl
xchg
and
sbb
out
lods
dec
movsb
pop
adc
pop
mov
dec
ja
adc
jnp
cmc
stc
and
fldt
jg
ficompl
cli
int
push
mov
inc
xchg
shrb
fld1
ret
data16
push
add
bound
test
xchg
mov
loop
iret
idivb
adc
xor
fmull
jbe
mov
cld
int
lods
sti
ret
xchg
aam
xor
cmp
dec
ret
push
loop
sbb
shl
cmp
lea
hlt
and
jecxz
test
inc
mov
fwait
test
lea
jg
add
pop
imul
or
push
scas
mov
mov
jb
sub
xchg
xor
xchg
out
xchg
iret
enter
dec
push
and
jg
mov
pop
and
mov
sub
inc
sarb
hlt
sbb
jae
cmp
add
xchg
es
imul
cmp
jle
jae
fiadds
enter
stos
mov
inc
stos
in
ror
stc
mov
or
or
or
test
aam
and
cmpsl
lret
addb
out
inc
jmp
pop
test
xchg
mov
inc
inc
out
add
adc
sbb
or
xchg
nop
std
mov
sub
add
xlat
int3
ss
movb
stos
push
arpl
pop
xchg
roll
call
stos
pop
mov
xorl
jb
pop
jge
xor
jg
fdivl
pop
or
pop
lcall
lods
xor
out
rcrl
pop
inc
xor
push
icebp
cmc
les
arpl
push
add
and
aas
pop
shll
leave
sbb
or
adc
pop
lcall
jg
sti
jmp
pop
fisttps
dec
cltd
aaa
and
dec
sbb
xchg
inc
inc
sub
and
ja
in
cmpsb
imul
push
incb
int3
mov
iret
fiaddl
fldcw
xor
jge
pop
sbbl
inc
repz
aad
aaa
jge
jo
push
shrb
les
and
dec
sahf
mov
fstpt
mov
cmpsb
mov
push
inc
int
jle
iret
dec
ljmp
cmc
pop
sbb
xor
xchg
stos
rorl
pop
pop
in
mov
mov
push
icebp
mov
addb
and
add
sub
jg
xor
scas
mov
inc
orl
jge
pop
sub
cwtl
icebp
loopne
add
push
mov
xor
lods
pop
mov
ljmp
xor
xchg
cmp
popa
mov
mov
ret
cltd
adc
repnz
iret
pop
add
das
imul
push
pop
add
test
sub
adc
data16
xchg
push
sbb
and
sahf
add
ficomps
sub
sbb
sbb
add
dec
push
idivb
mul
out
inc
popa
jmp
jl
insb
int3
mov
add
rolb
outsl
mov
mov
ss
jl
scas
popa
pop
pop
sbb
imul
adc
pop
or
jp
cmp
inc
cmp
mov
push
jp
aaa
lock
mov
cmovg
test
inc
scas
pop
inc
mov
mov
xorb
add
and
push
push
rcrl
push
jnp
sbb
xchg
movsl
lret
adc
loopne
shl
stc
out
mov
aam
out
mov
testb
movsb
icebp
mov
aas
pusha
loopne
lods
and
leave
es
out
clc
fstpt
inc
push
clc
outsl
push
cmpsl
add
loopne
push
lods
sub
sub
mov
and
jle
mov
adc
je
loope
sub
pop
pop
sbb
xor
mov
ss
and
fmul
add
enter
mov
mov
test
pop
xchg
imul
loop
sbb
sbb
dec
scas
sarl
in
inc
sbb
dec
jg
ds
mov
orl
out
fmul
push
loope
test
jg
mov
mov
mov
or
mov
stos
push
xor
xchg
sub
mov
fiaddl
mov
pop
into
xchg
in
mov
xchg
lahf
popf
fs
cmp
sbb
sbbb
mov
dec
pushl
ret
mov
push
jno
dec
xchg
cmp
cmpsb
cmpsb
cwtl
into
xchg
inc
in
pop
inc
cli
mov
in
nop
sub
inc
data16
std
jne
push
add
lods
lret
mov
shrl
repnz
mov
and
dec
ds
or
mov
hlt
inc
cmp
and
out
adc
out
xorb
adc
rcrb
pop
test
xor
stos
mov
mov
lcall
shll
mov
mov
jbe
push
loop
lods
cmp
push
cmp
push
mov
add
push
insb
in
stos
in
call
mov
sub
push
mov
push
fistl
pop
pop
mov
lcall
mov
xlat
pusha
sub
mov
stos
add
mov
mov
or
add
jne
mov
sub
mov
cmc
dec
insb
inc
sbb
sbb
std
ja
fbld
xor
or
jg
test
jmp
push
or
movsl
mov
jae
mov
sahf
xchg
data16
dec
and
enter
orb
jnp
bound
xchg
fs
or
das
out
jae
jno
subb
int3
sti
movsl
sbb
xor
test
xor
sub
je
pop
std
movsl
mov
xchg
call
adc
popa
or
dec
cli
insb
inc
rol
xchg
out
cmpsl
cltd
loope
out
fnstenv
mov
mov
movsb
mov
rol
imul
sub
adc
dec
lcall
or
jp
imul
clc
push
mov
sbb
push
sub
cli
and
aad
sbb
lods
or
mov
in
out
xor
sarl
je
roll
in
inc
pop
adc
jbe
pop
xchg
daa
testb
inc
test
imul
jne
js
and
sbb
pusha
sub
in
fsubrs
gs
lcall
jge
sub
jo
cli
pusha
sbbb
mov
aas
mov
pusha
mov
icebp
loopne
jg
xor
or
movsb
xor
ljmp
sub
data16
push
mov
xchg
insb
and
sub
sbbl
fcoms
loopne
divl
sbb
je
bnd
jnp
push
imul
jge
push
push
test
outsl
rol
jmp
fsubrl
insl
insb
and
out
cmp
cltd
addr16
xor
int
mov
jg
mov
push
cs
pop
sbb
fiaddl
pop
insb
push
insl
mov
rclb
adc
jo
ljmp
inc
mov
cmpsb
pop
mov
adc
and
or
ljmp
push
inc
xchg
pushf
sub
cltd
dec
daa
xchg
jge
stc
lahf
pop
jns
outsl
xor
mov
test
test
pop
out
gs
outsl
inc
dec
cmc
je
cmpsl
lds
dec
call
push
popf
push
les
push
jbe
repz
scas
ljmp
fldenv
fsubr
hlt
xor
ds
outsb
mov
adc
pop
fwait
les
jge
xor
push
or
xchg
xor
mov
or
jmp
leave
outsb
fnsave
sahf
or
mov
xor
jl
mov
inc
dec
push
inc
mov
mov
insb
lea
mov
movsl
xchg
rclb
lods
inc
mov
pop
stos
and
dec
sbb
add
and
xchg
jge
lret
adc
int3
test
inc
shlb
cs
add
xchg
sbb
out
das
xchg
xorl
movsb
and
mov
loope
and
jmp
jbe
lret
mov
imul
jae
repz
pop
sbb
mov
imul
cmp
data16
cmp
scas
sub
inc
and
mov
imul
dec
test
jecxz,pt
negb
lahf
mov
xchg
cmp
pop
lods
xor
out
push
mov
pop
fcmovne
add
mov
jno
sbb
sbbb
mov
sub
xor
lock
xchg
lret
call
fiaddl
jle
jns
xor
jecxz
inc
xor
movsl
std
scas
popf
jl
dec
imul
lret
or
adc
scas
mov
loope
mov
and
clc
neg
mov
nop
shlb
xor
push
adc
jns
lret
shlb
ljmp
icebp
ret
loop
roll
movsl
fstps
shll
lahf
es
popf
nop
cmpsl
dec
popa
test
and
lock
fstpt
adc
inc
jmp
xor
inc
inc
sahf
mov
rclb
js
mul
fdivrs
icebp
sub
cltd
jbe
gs
inc
js
push
xlat
xchg
and
jg
popf
mov
and
add
arpl
inc
pop
out
pop
adc
sub
aas
scas
daa
xchg
mov
pop
es
test
sarl
push
adc
addr16
add
inc
icebp
subl
sbb
jnp
mov
cmpsl
loopne
sub
pop
adc
sbb
mov
bound
mov
or
inc
in
fwait
out
ret
xor
and
insl
jb
add
imul
xchg
in
fistpl
cmp
mov
sub
cmp
xor
pop
pop
iret
xchg
push
addb
sub
clc
push
lret
inc
loopew
jno
movsb
inc
cs
dec
clc
push
les
shlb
loop
mov
popf
gs
sbb
mov
xchg
mov
inc
push
adc
push
int
lds
xchg
stos
jle
in
dec
mov
movsb
imul
das
jge
dec
stos
mov
cmpsb
scas
mov
fildll
cwtl
addr16
inc
jae
pop
imul
repz
enter
jmp
mov
pushl
cmpsl
mov
insb
xor
jb
imul
bound
mov
mov
incb
pop
xchg
push
mov
cmp
mov
in
loop
in
test
xchg
test
loope
adc
pop
xchg
fldt
inc
scas
aad
out
mov
pop
xor
dec
jns
aad
cmc
lahf
sub
gs
sbb
xchg
scas
stc
mov
adc
arpl
xor
fs
rcrb
fiaddl
mov
repz
lock
fldenv
cld
lea
jmp
ficomps
scas
enter
shll
bound
cmp
inc
loopne
inc
ficoml
xchg
pop
iret
jp
push
mov
js
pop
dec
ss
add
pop
jbe
pop
test
cltd
xor
ljmp
push
sub
in
lcall
dec
out
addl
lods
or
cmpsl
and
sbb
mov
xor
cltd
cltd
es
pop
ss
mov
dec
ja
or
and
mov
daa
sbb
mov
ret
inc
add
add
mov
sbb
add
and
sbb
adc
in
loope
add
stos
cmp
mov
std
enter
and
and
fmull
pop
fwait
jno
mov
jbe
inc
jecxz
and
push
pop
scas
stos
fists
leave
pop
call
and
mov
add
gs
xrelease
sub
mov
call
jb
xchg
jae
js
sbb
addl
add
ss
loopne
aad
mov
test
loope
jmp
mov
fldcw
test
lcall
jle
xor
test
push
adc
pop
xlat
sub
mov
push
and
adc
sub
xor
in
dec
pop
sub
in
xor
mov
loop
out
sub
jmp
or
or
inc
movsl
cmp
lcall
mov
add
int
xor
xor
dec
push
test
and
ljmp
rorl
sbb
pushf
out
arpl
movsb
lret
adc
xlat
push
jns
dec
mov
pop
sub
out
add
lahf
out
xchg
lods
add
cltd
test
cmp
and
ds
inc
cmp
jg
aam
outsl
in
stc
out
dec
sbbb
lds
stos
push
push
aaa
cld
test
into
rolb
pop
daa
push
rorl
adc
jle
xor
jne
test
jmp
add
in
sbb
lods
mov
lahf
shl
xor
cmpsb
xor
decb
inc
je
pop
jge
and
jno
das
inc
shlb
sti
dec
inc
add
jno
in
mov
lods
and
movsl
ja
test
addr16
js
ljmp
aaa
sahf
sub
cmp
push
sub
pop
mov
xchg
dec
loopne
dec
sbbl
rcl
cmp
imul
mov
lahf
push
test
rorl
loop
outsb
sub
arpl
mov
sbb
fwait
inc
xor
lret
add
pop
mov
cmpsl
movsl
fmuls
aad
in
mov
xchg
ja
imul
loope
outsb
pop
into
add
inc
dec
adc
cltd
cmp
nop
add
loop
lret
aas
jg
in
dec
jno
callw
pop
push
test
addr16
pop
leave
mov
lcall
and
inc
aam
adc
sub
mov
shll
aaa
leave
in
decb
dec
lcall
inc
mov
fisubrl
ret
xchg
xor
jecxz
pop
push
stos
cli
sbb
es
test
lret
xor
inc
loopne
insl
shll
push
lock
adc
jne
pop
popa
add
aad
dec
lods
aad
mov
adc
or
outsl
pop
inc
jne
jecxz
clc
testb
data16
jmp
inc
jbe
jecxz
lahf
mov
pusha
cli
addb
mov
add
inc
inc
fwait
mov
aad
dec
ret
mov
push
movl
out
mov
cmp
xchg
sbb
stc
test
cmp
fstl
dec
scas
scas
shr
mov
cmp
ljmp
aam
add
fsubrl
out
push
mov
ds
mov
mov
iret
cmp
testb
xchg
mov
mull
jne
mov
inc
inc
mov
shlb
fdivl
rcrl
insb
es
mov
adc
faddl
test
push
es
push
stos
adc
iret
lret
or
push
dec
lock
rolb
xor
push
out
inc
sub
pusha
loop
sub
dec
lcall
xlat
data16
cmp
cli
jle
bound
in
testl
std
inc
in
and
cli
mov
cmp
sti
int3
xor
mov
xchg
inc
js
imul
and
in
lahf
push
adc
loopne
repnz
xor
xor
xchg
and
or
clc
jmp
cmpsb
fnsave
add
stos
ljmp
cmp
push
and
sbb
pop
mov
imul
xchg
lcall
es
movsl
fwait
push
mov
dec
mov
scas
dec
add
push
stc
cwtl
iretw
scas
test
cmc
fnstenv
aas
dec
inc
push
xchg
jno,pn
mov
bound
or
lret
addr16
xchg
cmc
and
xor
lret
and
xchg
sbb
mov
pop
pop
les
sbb
sti
xchg
dec
fcmovu
sbbl
xchg
test
ror
fsubr
push
cmp
fbld
pop
push
in
or
sbb
ret
and
mov
cld
or
call
xchg
adc
iret
sbb
fistpll
inc
dec
push
movd
mov
fs
std
enter
cmp
push
and
insb
int3
jbe
repz
push
test
cli
call
fs
sbb
jno
ja
dec
test
or
cmp
adc
mov
ret
lods
dec
mov
cmc
in
fstp
adc
sbb
xchg
fmulp
xchg
leave
scas
cmp
dec
inc
imulb
cltd
pop
scas
outsb
sub
push
ljmp
ret
test
dec
xor
pop
cltd
repnz
xchg
xorb
dec
dec
lock
or
jecxz
adc
xchg
mov
cmp
insb
test
sbb
sub
inc
aad
ljmp
jbe
jecxz
fdivrl
and
jnp
stos
outsl
imul
loope
outsl
sub
cmpsb
fistpll
xor
mov
xlat
int
push
xchg
or
out
cmpsl
inc
stos
sar
dec
addr16
push
out
push
aaa
popa
dec
mov
ja
mov
xor
and
or
sbb
sbbb
das
clc
subl
int3
test
outsl
jge
pop
aaa
mov
mov
mov
dec
xchg
xor
bound
imul
inc
push
out
gs
and
xor
jle
adc
xchg
xlat
cmp
xchg
inc
mov
pop
das
scas
sub
mov
fmulp
push
push
or
push
stos
js
test
or
stos
or
insl
andb
adc
iret
xchg
or
addr16
xlat
fsubs
aam
pop
jnp
sub
cmp
mov
inc
stos
ret
sub
fs
dec
in
fwait
scas
mov
sbb
fcoml
test
jns
and
cwtl
aam
stos
clc
jns
cmp
cmc
adc
and
rcrb
into
movsb
and
xchg
xor
xchg
xor
xlat
push
ss
and
iret
mov
lods
dec
pop
mov
push
xchg
add
hlt
push
lret
jg
mov
scas
rorl
pop
mov
push
mov
jl
inc
mov
rorl
mov
pop
insb
dec
mov
rorl
gs
in
jo
rorb
mov
addps
ret
push
or
testl
hlt
mov
jbe
xor
stc
adc
inc
fs
leave
cs
faddl
aam
jmp
fnstcw
out
jmp
ja
lret
or
test
test
sub
test
sub
mov
and
inc
xor
add
aam
mov
xor
jge
divb
add
pushf
scas
cmp
mov
dec
push
inc
sbb
mov
pop
cltd
jo
test
inc
mov
push
jp
notb
stos
cmp
int3
out
and
inc
add
lds
add
jae
push
xor
inc
add
iret
lret
mov
mov
mov
pop
or
jp
clc
rcl
xchg
xor
clc
xchg
mov
bound
je
jo
movb
inc
or
fildl
rcll
fsts
js
mov
adc
repnz
cmp
aad
test
cmpsl
out
outsb
and
je
fs
fwait
xchg
dec
lret
leave
mov
add
mov
jp
shlb
jmp
je
add
and
inc
fistpl
iret
rorl
fldenv
mov
mov
aad
pushf
int
stos
aad
loopne
loop
jae
dec
inc
mov
orb
dec
mov
push
sub
jmp
push
loope
sbb
imul
add
imul
mov
pop
pop
sbb
fwait
mov
xchg
insl
xchg
pop
scas
sbb
cmp
leave
pop
push
jae
xorb
dec
pushf
dec
das
mov
dec
jo
xchg
mov
ds
lea
sub
cs
repz
push
sbb
dec
lods
test
xchg
jae
push
jb
call
cmpl
mov
add
insb
add
aad
sahf
jge
mov
mov
jnp
movsl
filds
sub
inc
xchg
into
and
inc
mov
les
xchg
xor
popf
std
dec
jecxz
leave
push
mov
mov
dec
lods
out
jecxz
cmp
jp
mov
roll
xchg
xchg
outsl
ss
mov
cmp
cwtl
xchg
repz
or
cmp
jl
stos
cltd
hlt
pop
pop
fs
xor
cmp
cmpsb
mov
xchg
and
imul
dec
push
sub
stc
negb
dec
mov
shlb
sbb
ss
inc
out
sub
iret
repz
int3
inc
ja
cmp
jbe
push
xchg
push
add
and
int
sti
sbb
shl
test
sti
and
cmpsl
push
push
lahf
adc
push
or
or
xchg
test
xchg
gs
lods
xchg
lahf
and
mov
jb
or
daa
adc
inc
test
mov
mov
mov
stos
xchg
mov
adc
push
mov
loop
das
lods
lods
outsb
cmp
notl
adc
push
cld
testb
xchg
xor
adc
lret
jo
inc
pop
inc
cmp
and
add
fisubrl
loop
sub
xor
daa
or
sub
xorb
aas
adc
jmp
sarl
int
xchg
adc
idivw
jl
jmp
les
mov
shl
xor
jmp
mov
inc
lcall
out
pusha
cwtl
or
dec
adc
add
pop
mov
pop
sub
ds
popf
xchg
aaa
test
mov
jnp
je
adc
data16
xchg
sub
ss
in
rol
fs
and
push
jo
into
movl
out
and
jmp
lods
nop
and
and
jmp
or
and
es
pop
xor
pop
mov
movsb
mov
mov
push
stos
sahf
fs
jo
popa
or
mov
getsec
push
fwait
add
or
cmc
rcr
test
setge
add
mov
mov
out
push
scas
mov
fdivrs
xor
shll
adc
xor
jae
mov
rcll
xchg
outsb
mov
sbb
fists
stos
cmpsb
cmp
negl
pop
sbb
mov
xchg
sbb
mov
xor
push
sbb
lock
xchg
push
test
pop
hlt
fisubl
xor
jo
mov
dec
or
inc
ljmp
jg
sbb
pop
sbb
lea
mov
shll
cltd
fbstp
push
add
int3
nop
movsb
add
lods
pop
rorb
cmp
mov
dec
push
and
lret
push
outsb
sbb
out
adc
push
sahf
push
lods
add
fdivr
out
fistps
or
in
test
dec
bnd
push
lods
mov
mov
gs
and
jns
cld
or
xchg
nop
pop
xchg
mov
dec
mov
popf
fs
or
imul
std
dec
jge
xchg
push
sub
fnstcw
mov
scas
cltd
mov
cwtl
lcall
fs
inc
sti
insb
push
fisttpl
sub
jb
outsl
push
dec
es
jb
jns
mov
and
or
or
xchg
push
mov
push
or
xchg
sbb
ja
shlb
mov
fistl
sti
in
sbb
mov
aad
cmp
ret
pop
or
push
jmp
stc
push
mov
nopl
mov
popa
mov
jnp
or
mov
adc
jg
jnp
jbe
pop
xchg
hlt
daa
repnz
daa
adc
mov
int3
push
adc
or
inc
fbld
nop
add
jns
andl
adc
adc
mov
xchg
push
iret
test
das
xlat
mov
call
xor
or
mov
aad
cltd
in
or
adc
adc
aam
inc
mov
pop
mov
cmp
and
cmp
mov
cmp
loopne
xorb
mov
stos
cmpsb
dec
or
fisttpl
ja
loop
mov
aas
sbb
out
inc
pushf
adc
cld
mov
or
xchg
mov
dec
repnz
aas
mov
mov
mov
dec
lcall
ficomps
jl
adc
jp
jecxz
cmp
idivb
inc
xor
in
mov
push
addl
rorl
int3
fisttpl
stos
mov
push
mov
rorb
test
jbe
xor
sbb
sub
jge
adc
adc
jp
xchg
fistl
pusha
sbb
mov
cs
data16
jno
inc
or
cmp
sarl
out
or
add
push
insl
xchg
loopne
popa
dec
add
adc
push
lods
add
bound
out
cltd
in
clc
mov
jmp
jle
pop
call
stos
add
xchg
sahf
icebp
jnp
push
in
xchg
mov
and
sbb
mov
mov
inc
movsb
ja
fwait
push
xor
jo
test
jp
dec
cmc
xlat
or
popa
inc
sbb
pop
test
push
stos
test
inc
xor
pop
jbe
pop
mov
jle
mov
imul
inc
adc
xchg
int3
ret
push
cmpsl
pop
or
and
lods
or
in
jmp
icebp
incb
xor
in
jecxz
lods
dec
popf
addr16
in
dec
sub
or
aad
inc
hlt
ficoms
jae
sub
sti
test
dec
inc
push
mov
fdivrl
outsb
ss
dec
adc
into
cmp
sbb
daa
imul
pop
and
mulb
jo
xor
iret
xchg
int3
rolb
addr16
stos
iret
mov
pop
andl
adc
int3
int3
inc
into
loopne
sub
sbb
into
jmp
mov
icebp
fidivrs
push
jl
dec
jo
or
dec
xor
fwait
lahf
lahf
or
outsb
ret
xorl
in
xor
adc
pusha
sbbb
pop
adc
scas
std
lock
mov
xchg
jl
push
cmp
xor
in
push
dec
inc
xor
pop
shrb
sbbb
pop
fldt
mov
dec
ret
adc
cli
shrb
ss
mov
out
mov
out
jb
lods
adc
aaa
scas
sbb
movsl
stos
cmp
cmp
xchg
inc
sub
out
cmc
mov
adc
inc
out
sub
sbb
adcl
or
sub
mov
mov
icebp
lcall
mov
push
dec
popf
xor
xor
add
data16
nop
or
lcall
or
inc
xchg
leave
or
popa
jmp
or
rcrb
sarl
pop
imul
mov
out
cmpsl
dec
out
jo
test
mulb
sbb
stc
xchg
jnp
mov
and
dec
cmp
mov
fistpl
fmull
movsb
out
pop
push
xchg
xor
ret
imul
sbb
cmpsb
enter
nop
lahf
mov
dec
jmp
loopne
sub
shl
mov
xchg
and
data16
xchg
hlt
pusha
and
dec
icebp
cli
mov
cmp
add
mov
fistpll
cmp
into
mov
out
or
jb
test
sub
in
shrb
dec
lods
mov
xor
or
lret
outsl
or
or
sbb
push
xor
dec
mov
inc
ret
inc
mov
loopne
dec
in
xchg
sbbl
push
mov
mov
fwait
out
out
in
test
jge
stc
cmp
add
in
sti
jp
cmp
xor
popl
jb
lock
cmc
jp
test
lods
mov
push
cmp
sub
out
stos
rol
jb
xchg
adc
and
ljmp
pop
fsubrs
rcrl
push
mov
push
dec
lock
or
push
imul
inc
stos
and
mov
fcompl
out
lds
cli
imul
dec
ret
jge
and
repz
adc
filds
outsl
outsb
pcmpeqw
adc
xorb
cmp
sbb
inc
in
adc
lahf
jbe
pusha
push
mov
add
out
fdivrl
xor
jl
movb
fadds
push
push
push
jo
dec
xor
in
and
inc
outsl
adc
test
pop
xchg
cmpsb
test
sub
aad
ret
sti
pop
xchg
sbb
jp
mov
xchg
fistpll
pop
jecxz
mov
into
clc
sub
into
mov
cltd
sub
in
add
mov
sahf
cmp
movsb
fadds
je
inc
pusha
pop
pop
gs
or
sarb
les
sbb
andb
leave
cwtl
les
sbb
cmp
jecxz
sti
addb
jnp
jnp
test
cmp
pop
iret
lahf
lret
push
addr16
into
rcr
movsl
mov
push
rcl
mov
popa
scas
inc
cmp
mov
leave
inc
clc
push
daa
mov
loope
cmc
push
bnd
jmp
or
lret
mov
in
in
mov
dec
lock
cmp
in
daa
jecxz
ret
pop
ljmp
add
test
mov
xor
pop
pop
xchg
test
ficoml
sbb
xchg
xor
scas
mov
js
popf
xchg
inc
sbb
mov
inc
xchg
imul
daa
cwtl
xchg
stos
xor
or
mov
jbe
stos
lds
loope
aad
mov
jne
imul
push
andb
pop
lahf
sbb
push
sub
mov
dec
adc
enter
mov
xlat
mov
cmp
add
dec
pop
push
ret
xchg
leave
mov
and
mov
in
in
in
push
ss
mov
pop
push
dec
mov
inc
loope
popf
cmp
loopne
add
fldl
mov
jae
or
or
jns
cmp
nop
pop
test
loop
mov
add
adcb
cmp
add
ret
cld
aas
in
lods
inc
jnp
or
and
inc
push
int
jmp
dec
cmp
cld
inc
cld
sbbl
jns
add
ja
jb
mov
sub
call
sub
mov
mov
mov
out
cmp
scas
xorl
loopne
ret
jp
xlat
in
add
mov
xor
jecxz
push
jge
xor
push
sarl
das
je
pop
movsb
sbb
push
nop
push
fidivrl
mov
stos
push
lret
sub
xchg
push
mov
cmpl
rorl
jnp
sti
outsl
inc
xor
data16
enter
sbb
out
mov
adcb
ret
mov
jae
daa
stc
mov
and
cmp
mov
aaa
pop
gs
in
sbb
lods
lock
scas
sbb
add
mov
iret
les
pusha
cmpsl
jl
push
inc
sub
adcl
loope
push
push
aaa
jne
mov
sahf
jb
xor
out
xor
and
ret
imul
lahf
and
jae
xchg
xchg
sbb
xchg
outsl
ret
inc
gs
pop
dec
mov
jecxz
bound
shrb
std
test
repnz
xchg
push
add
pop
fucomi
mov
gs
xlat
leave
pop
stc
sbb
sbb
and
repnz
testb
cmc
arpl
cwtl
and
dec
cli
shlb
and
mov
cmp
out
pop
das
in
pop
outsb
sbb
movsl
inc
cmpsb
pop
pushf
and
dec
push
aad
js
aam
pop
insl
stos
sbbb
mov
sub
int3
xlat
sub
outsb
jle
mov
lcall
into
mov
sub
loop
ja
push
adc
les
push
test
add
sbb
aad
lods
mov
jg
clc
mov
hlt
sar
push
sub
lahf
xor
push
pusha
aam
inc
sbb
jne
ljmp
ret
jmp
xor
daa
sti
push
adc
idivb
loope
mov
add
jle,pn
dec
xor
mov
int3
cmc
cmp
adc
std
add
jnp
push
xchg
lahf
leave
out
insb
mov
push
fmuls
mov
in
mov
movsb
cmc
insb
sbb
sbb
addr16
xchg
sbb
aam
subb
pushf
out
add
stc
and
test
jmp
cmpsl
jecxz
mov
ja
enter
xchg
lds
mov
inc
sbb
pushf
ret
cmpb
scas
and
stc
fisubs
or
or
cmp
lods
or
dec
pusha
scas
push
test
cmp
mov
gs
inc
ljmp
enter
nop
shlb
fadd
rolb
mov
mov
test
inc
mov
or
sub
cwtl
pop
out
inc
in
movsl
lret
repz
aaa
mov
icebp
sbb
pop
fidivrs
cmc
nop
into
xchg
and
inc
lds
mov
insl
lock
xor
mov
push
out
les
movsl
lock
into
push
adc
pop
adc
mov
sbb
xchg
dec
mov
xchg
sub
pop
cmp
or
cli
adc
cmp
push
inc
sub
mov
jbe
mov
xchg
loope
push
insb
shlb
add
mov
cmp
out
dec
mov
pushf
shlb
pop
mov
push
add
andl
hlt
std
push
cld
and
sbb
lahf
xchg
cmpb
inc
add
push
lods
push
push
sub
test
jnp
adc
and
mov
sub
pop
xor
imul
hlt
and
and
cli
popf
push
jo
adc
in
decb
iret
and
mov
cmp
mov
dec
int3
jmp
or
daa
add
jns
mov
loopne
and
pop
mov
jne
scas
loop
fdiv
out
fimuls
rcl
push
mov
icebp
jmp
inc
sub
pop
pop
idivb
loope
xor
aaa
push
rcl
cmp
loope
mov
out
sbb
jmp
mov
sub
test
loope
test
mov
andb
into
dec
insl
adc
xor
jp
repnz
and
lret
popa
inc
enter
cmpl
jnp
and
sbb
das
xlat
xor
jmp
add
iret
movsb
jecxz
or
mov
mov
mov
in
cltd
pop
cs
and
mov
pop
out
ret
mov
daa
dec
pop
es
notb
icebp
pusha
dec
je
xchg
ss
add
outsb
jnp
fnsave
adc
clc
into
jecxz
xchg
jbe
mov
scas
or
push
or
or
pop
or
xchg
mov
or
es
push
cltd
adc
scas
xchg
xor
lock
ret
cmp
dec
clc
pop
sahf
ja
mov
mov
cwtl
inc
popf
push
pop
mov
and
cmp
cmp
enter
xchg
xchg
pusha
clc
scas
loopne
push
nop
xor
in
push
pop
or
sub
jo
sub
sbb
mov
xchg
xchg
inc
stos
add
dec
sbb
mov
stc
pop
mov
aad
sti
out
pop
inc
addr16
cmp
daa
pop
mov
jmp
clc
mov
into
lahf
xor
push
movsb
out
jnp
lds
fwait
std
pop
leave
cltd
mov
ficomps
mov
and
xor
xor
jecxz
jo
shrb
or
or
jae
mov
lahf
daa
inc
sbb
inc
dec
jmp
sahf
flds
pop
jb
lea
xchg
inc
cltd
ficoms
popf
sub
inc
jl
pushf
fwait
iret
push
adc
out
rorl
cmp
mov
mov
cmpb
aas
pop
add
addb
jle
cmp
pop
xor
sarl
mov
mov
jle
inc
mov
cli
test
outsb
insl
inc
in
add
adc
jp
sub
pop
mov
sub
loope
xchg
inc
jae
pop
out
arpl
out
lret
dec
insb
mov
outsl
dec
arpl
push
inc
cmpsl
sbb
shlb
pop
clc
int
lds
hlt
sahf
cmc
lock
xor
mov
push
dec
shl
ja
outsl
and
cld
and
mov
clc
mov
and
sbb
sbb
aad
lahf
test
or
cmp
mov
push
mov
lea
jmp
cmpsb
xchg
insb
daa
negl
sub
test
ljmp
outsl
jecxz
cmpsl
mov
popa
outsb
xor
int3
rol
sub
andl
iret
es
push
andl
xchg
das
enter
loopne
mov
andb
mov
icebp
sbb
test
cltd
aaa
xchg
and
dec
fs
repnz
dec
lret
lods
mov
insl
mov
push
dec
aam
sbb
repz
jns
int3
movsl
jge
mov
pop
adcb
test
pop
mov
mov
mov
cs
jb
sbb
ss
push
xchg
movsb
inc
lods
jne
pop
shrl
lahf
mov
inc
push
push
xchg
iret
faddl
jb
mov
aam
inc
pop
sub
adc
mov
push
divb
mov
and
int3
mov
push
arpl
outsb
gs
sti
push
push
mov
sbb
jno
iret
jb
lds
popf
or
in
cltd
inc
pop
xor
xchg
fisttpl
out
idivb
rcl
gs
pop
ret
imul
loop
xor
lods
cli
and
lods
adc
cltd
cwtl
int
rolb
rclb
push
dec
outsl
dec
pop
dec
adc
mov
dec
mov
addb
and
jge
aaa
or
jmp
fs
stc
in
jmp
test
xchg
int
jl
mov
in
lret
adc
jbe
sub
pop
std
push
inc
mov
enter
adc
in
addr16
cld
pop
aam
mov
mov
aaa
or
aas
jbe
lret
lods
aas
popf
js
in
add
dec
stos
cmpsb
bnd
pop
in
pop
ret
das
hlt
gs
jb
imul
or
pop
jp
mov
cwtl
add
mov
push
push
inc
out
daa
mov
test
cmc
adc
ja
adc
mov
or
aas
std
dec
cltd
fnstsw
cmpsl
ror
xchg
aaa
adc
loop
lret
aaa
sub
or
or
sbb
lds
inc
push
mov
mov
mov
sti
dec
test
lea
pop
adc
add
insb
mov
jle
orb
mov
xor
hlt
in
inc
call
cwtl
orl
mov
fnstcw
sbb
stos
repnz
jmp
fistl
pop
jg
test
mov
or
repz
and
dec
adc
jmp
lods
adc
add
lahf
jb
aas
jge
push
dec
xor
sub
sub
mov
pop
pop
aad
outsl
lcall
scas
jbe
mov
xor
mov
fwait
push
cmp
and
and
imul
sbb
cmp
mov
mov
sbb
scas
shll
test
int
nop
pop
fs
pop
mov
xchg
pop
les
jmp
fcmovu
mov
jne
inc
enter
in
shr
pop
dec
rcrb
jae
xor
inc
jo
jg
jge
or
cs
push
repz
jno
lds
test
scas
shlb
out
mov
xlat
jnp
push
jb
or
rol
sbb
bound
or
inc
sbb
mov
adc
sub
and
lea
stos
xchg
push
in
sub
por
mov
sub
push
adc
or
mov
scas
ss
push
les
mov
jae
mov
jge
imul
lahf
or
cmp
ljmp
add
jecxz
call
das
sar
imul
std
scas
pusha
fstpl
fs
std
shll
sbb
scas
lret
test
xchg
mov
or
aas
stos
inc
pop
mov
sbb
cmp
jl
jnp
fidivrs
push
test
push
xchg
pushf
es
dec
mov
lcall
and
rorb
add
sar
inc
int3
fldenv
cmc
mov
leave
lret
out
fbld
inc
sub
out
sub
popf
out
jecxz
loop
jns
and
leave
pop
sbb
jb
mov
adc
lods
inc
lret
arpl
push
mov
cmp
ss
jp
ficomps
in
insl
mov
dec
dec
and
and
in
out
lret
mov
jmp
pop
or
ret
cmpsl
cmp
pop
stc
add
mov
sub
push
jbe
shrl
or
cwtl
mov
cmp
push
scas
lret
cmp
sub
fisubrs
lock
push
insb
out
mov
out
negl
mov
pop
mov
add
and
sbb
mov
pop
adc
sub
dec
call
jmp
repnz
cs
push
stos
inc
lcall
mul
fisttpl
push
mov
ljmp
jne
xchg
mov
xchg
lods
iret
subl
or
stos
add
mov
sahf
mov
gs
sub
cmp
jecxz
adc
jno
xchg
jl
stos
push
push
cmpsb
xchg
jns
cs
inc
xor
jmp
nop
mov
imul
fmull
xlat
mov
rol
lea
ljmp
popa
cltd
icebp
imul
dec
enter
adc
sub
cld
adc
lods
dec
add
roll
mov
sti
rol
jns
pop
push
mov
jp
xchg
cmc
loop
pop
out
jl
into
xor
rorl
fwait
in
stc
add
imul
fistl
push
enter
cmp
mov
pop
add
imul
push
dec
push
lds
cs
cltd
shll
int3
fstp
lods
fldt
inc
jge
testl
sahf
mov
jo
mov
cmpsb
jns
dec
and
push
mov
leave
or
sub
in
out
sub
add
xorb
jg
mov
lds
ljmp
fists
dec
sti
push
cmc
jl
std
mov
js
out
int3
shlb
push
mov
ret
sbb
mov
test
stos
add
movsb
pop
lds
int
xor
shrl
xorb
popf
ja
insl
dec
jns
push
dec
sub
and
int3
clc
lret
pop
cmp
addr16
fldenv
xlat
mov
xrelease
pop
mov
dec
loopne
and
sarb
aas
mov
push
xchg
js
inc
xorb
in
adc
fidivl
repnz
xchg
das
xchg
or
insl
cmc
repnz
push
dec
mov
mov
clc
shlb
ficompl
inc
or
filds
in
imul
mov
jo
dec
ret
stc
pop
sbb
rcrb
push
adc
in
push
fucomp
aaa
xchg
cmp
inc
xlat
insl
sbbl
imulb
iret
xchg
adc
dec
das
mov
push
xchg
cmp
iret
jne
or
gs
dec
jp
cmpsl
andb
xchg
push
lcall
test
imul
lods
std
std
out
push
push
and
add
pop
push
rcrl
push
orl
ss
pusha
ds
lahf
lcall
sub
sub
test
mov
and
fucom
cmpsl
insb
mov
lcall
lahf
int3
test
loopne
stos
rolb
dec
push
jnp
stos
jae
mov
scas
xchg
shll
popa
notb
xchg
lret
orb
dec
sub
dec
mov
outsl
ljmp
out
fnstenv
add
negl
mov
mov
pop
adc
out
int
push
lahf
mov
adc
fbstp
mov
lock
hlt
pop
sub
sti
fs
scas
dec
or
add
xlat
loope
mov
inc
aas
idivl
xchg
in
cmc
cmp
cmovns
push
adc
icebp
push
lret
jecxz
push
xor
addl
sbbb
mov
push
movsl
jo
test
jp
xchg
mov
sbb
in
add
pop
fs
xchg
dec
mov
xchg
push
xchg
clc
inc
movsl
fwait
add
stos
js
pop
mov
cmp
flds
mov
iret
add
jmp
mov
rorb
ja
inc
out
fcmovnu
cs
adc
mov
jl
and
fdivp
xor
xorb
movsl
cmp
daa
aad
test
ficomps
and
mov
sti
pop
lret
dec
insl
cld
lods
pop
add
addb
add
mov
pop
inc
sbb
dec
jne
jecxz
js
adc
fldcw
cmpsb
sti
sbb
or
xchg
movl
addr16
xor
clc
sub
mov
stos
sub
sbb
div
jg
jne
pop
lahf
adc
rclb
fucomp
or
pop
pushf
bound
adc
mov
xchg
scas
lret
into
jp
adc
mov
popf
sub
cmp
aaa
dec
jle
mov
add
add
mov
mov
jb
insb
fwait
mov
fstps
or
cli
out
mov
andb
dec
aad
dec
out
cmp
cmp
xor
mov
xchg
cmpsl
mov
jge
jp
and
mov
stc
lea
jmp
rol
hlt
dec
lret
and
insb
jmp
cs
adc
jp
in
call
jmp
dec
or
repz
das
sub
shrl
ret
mov
fisubrs
enter
subl
stc
clc
pop
cmp
es
fiaddl
mov
ss
das
jg
fcmovnbe
je
ret
leave
in
dec
add
xlat
icebp
out
jg
dec
cmp
aas
enter
sub
jle
movsl
xchg
mov
ret
scas
stos
jp
lret
dec
push
mov
xlat
fsubl
cmc
stc
movsb
mov
pop
sbb
ret
out
imul
adc
loope
mov
push
cmpsb
div
mov
mov
pop
xor
mov
sub
mov
dec
lret
inc
bswap
adc
lea
push
arpl
stos
push
out
xor
outsl
add
subb
fimuls
pop
hlt
cmp
movd
inc
shrb
sbb
cmc
mov
cli
xor
add
mov
xor
pop
and
add
mov
and
leave
adc
iret
or
andb
push
mov
cs
jae
outsb
xor
cmp
es
dec
mov
push
movsl
shll
xchg
mov
idivb
int3
add
stos
scas
ja
iret
outsl
mov
sbb
lods
les
ret
mov
loopne
data16
dec
push
adc
hlt
ja
sbb
lret
sbb
gs
mov
and
jg
sub
movsl
loope
ljmp
outsb
call
xor
inc
fcomps
dec
sbb
mov
fcomps
ss
adc
call
sahf
xchg
add
outsb
sub
add
lds
and
mov
and
incl
ret
mov
loopne
lods
leave
in
lock
sub
sbb
and
xor
dec
loopne
ja
dec
push
pop
adc
enter
jmp
push
xlat
loop
add
addb
lahf
repz
ljmp
xchg
adcl
and
fmulp
negl
hlt
push
dec
adc
sti
sar
cmp
hlt
in
pop
test
fidivrl
push
dec
pop
gs
imulb
jb,pn
pop
mov
sti
mov
outsb
xchg
js
inc
sti
push
mov
inc
sub
pop
cwtl
xchg
push
xchg
ja
sub
push
or
pop
js
xor
inc
push
cmp
shlb
mov
push
sub
std
insb
push
bound
dec
sbb
jg
loop
mov
pop
mov
ss
push
insl
dec
add
lods
icebp
in
bound
inc
mov
mov
mov
leave
or
pop
mov
out
mov
js
imul
sbb
dec
or
jb
inc
cmc
jmp
or
pusha
dec
int3
and
gs
repz
adc
sub
push
or
leave
and
hlt
pop
mov
pushf
inc
adc
aad
sbb
xor
daa
loopw
shll
jp,pt
sbb
stos
and
fcoml
sbb
sbb
in
xor
mov
fnstsw
and
cmpl
pop
inc
inc
mov
pusha
cmpsb
icebp
inc
xchg
addr16
je
pop
movsl
pop
push
rcrl
lret
xor
loope
push
bound
sbb
inc
and
inc
jecxz
lods
lods
aad
sbb
sub
mov
rorb
inc
test
or
stos
mov
xlat
jecxz
addr16
jecxz
jl
dec
movsb
pop
or
pop
inc
popa
cmp
pushf
xlat
lock
push
clc
jbe
les
testl
mov
jbe
daa
mov
out
jg
and
mov
sbb
popa
sbb
push
inc
jp
mov
daa
inc
sbbl
lds
xchg
mov
imulb
xor
jb
mov
out
mov
push
sarl
fidivl
cmp
pushf
aaa
pop
int
sub
add
cwtl
push
add
sub
push
sbb
test
incb
pusha
push
cmp
xor
rclb
push
sub
in
faddl
imul
jl,pt
push
cmp
jns
out
rcrl
mov
les
cmc
xchg
outsb
jnp
cs
jno
subl
aas
in
pop
scas
and
pop
cmp
add
fwait
shl
push
and
movsb
mov
cwtl
pop
mov
sbb
and
jae
sub
and
mulb
jo
push
xchg
js
fbstp
mov
mov
add
jno
mov
outsl
add
sbb
push
sub
call
repnz
pushf
and
fs
sarl
xor
lods
push
mov
sub
idivb
inc
sbb
pop
outsb
daa
xchg
push
mov
je
lret
pop
cmpsb
pop
sbb
movsb
shlb
loope
push
mov
js
dec
mov
je
xchg
ds
lahf
rcr
pusha
sbb
xchg
rorb
adc
xor
rolb
sbb
data16
mov
movsl
mov
fdivrs
inc
sbb
dec
jae
mov
pop
fwait
clc
jb
fistpll
shll
adc
std
and
or
cmpsl
aaa
adc
mov
insl
repz
mov
and
das
inc
dec
roll
repz
aaa
xor
sar
mov
cmp
xchg
sbb
and
mov
or
rorl
cmp
add
xor
jg
inc
rolb
xchg
xchg
xor
add
push
lods
pop
mov
mov
mov
inc
or
or
aam
pop
cs
fwait
les
test
inc
xor
push
sub
mov
add
testb
and
mov
inc
jl
cltd
inc
mov
dec
cwtl
outsl
es
in
inc
clc
mov
jnp
jo
into
dec
inc
push
sub
fnclex
push
imulb
test
daa
test
fwait
hlt
sti
push
lret
imul
jne
arpl
daa
data16
mov
mov
ret
dec
scas
fsts
sbb
or
cmp
fildll
adc
rcll
sbb
leave
cwtl
cwtl
jmp
xchg
in
or
dec
stos
lcall
js
inc
in
ret
fistps
mov
cmpsb
nop
dec
icebp
dec
inc
icebp
jae
pop
inc
js
inc
in
or
sbb
lea
mov
sbbl
pop
mov
mov
sbb
ret
mov
jg
aaa
jp
test
cmc
and
mov
fisttpll
mov
cmp
add
inc
int
loop
daa
fdivrs
sbb
orl
dec
push
adc
clc
popf
sub
sub
cmpsb
lcall
icebp
cmp
add
ds
icebp
mov
cwtl
and
push
mov
aaa
ret
adc
pusha
pop
and
outsb
movsb
push
dec
adc
call
aaa
mov
sub
testl
sub
pop
inc
jns
test
xchg
lds
insl
add
mov
adc
mov
sar
pop
inc
xchg
ja
mov
rcrl
adc
js
mov
xor
pop
pop
aad
lret
insb
loop
lret
xchg
or
mov
inc
push
fdivs
nop
sbb
test
and
divb
std
jle
loopne
add
repnz
vmovhpd
fiaddl
cmpsb
int3
adc
shll
insb
in
push
lret
jmp
outsb
jmp
cmp
ret
xlat
mov
movsl
mov
repz
sub
or
in
mov
jnp
aad
cwtl
xchg
movsl
loop
insb
jle
or
sbb
mov
andnps
pop
or
adc
pop
adc
lods
mov
popf
mov
mov
testl
test
fisttpll
pusha
outsl
icebp
aam
data16
jl
cmp
into
dec
imul
push
sub
adc
push
mov
pop
lret
jmp
icebp
out
push
loopne
push
sbb
mov
test
repz
and
hlt
push
je
push
ficoml
mov
pop
out
push
lea
loop
sarb
movb
mov
sbb
mov
inc
cltd
sub
pusha
mov
sbb
xor
or
or
adc
cli
mov
fisttpll
cmpsl
push
imul
popf
js
adc
and
mov
sub
pop
push
dec
xchg
mov
cmp
dec
stos
test
nop
push
stos
scas
loop
mov
popf
lret
sub
ja
push
fisubs
mov
xor
mov
xchg
push
inc
xor
jle
mov
stos
and
dec
mov
hlt
testl
xlat
jp
cmp
arpl
sbb
pop
enter
popa
cmpsl
sbb
inc
cmp
mov
push
cmpsb
stos
clc
popa
cld
add
fs
movsl
orb
sbb
xorl
push
mov
lret
jp
jp
and
in
dec
or
ret
or
sub
mov
loope
inc
jmp
lcall
orl
sbb
mov
add
push
mov
mov
and
push
insb
insb
jl
mov
jo
ss
sbb
xchg
and
sub
xor
mov
mov
icebp
fiaddl
inc
mov
jns
sub
xchg
pop
push
test
scas
stos
mov
ja
mov
and
imul
stc
enter
fsubl
es
inc
push
add
sarl
sti
add
not
repnz
sub
out
or
sbb
sub
dec
out
movsl
add
test
rcrl
test
js
jmp
arpl
fisubrs
cmp
test
sbb
rdmsr
call
movsb
cs
fmull
shlb
mov
pop
in
add
iret
pop
nop
or
test
and
icebp
arpl
xor
push
jge
movsb
push
in
cmpsb
aam
add
xor
jo
mov
push
out
rcll
add
lea
push
ja
push
push
pop
jmp
test
xchg
fsubs
pop
movb
add
outsl
fcoml
psadbw
testl
lods
push
test
scas
in
or
mov
jmp
push
rclb
inc
xchg
cltd
andb
data16
mov
dec
pop
stos
loop
mov
pslld
movsb
jb
inc
jmp
adc
jae
out
pop
je
add
pop
test
adc
xlat
xor
jne
jl
rol
pop
pusha
and
ret
and
cmp
xchg
sbb
sbb
cmp
fiaddl
in
fists
or
push
lret
pop
pop
mov
jb
pop
dec
sbb
dec
inc
xlat
or
or
out
roll
push
mov
cmp
loop
into
roll
or
and
or
pop
inc
pop
mov
enter
add
gs
xchg
pop
adc
xchg
mov
push
outsl
xor
in
add
arpl
fadd
test
cmp
mov
xchg
fmuls
pop
push
icebp
push
mov
push
out
fistpll
and
lea
loope
jp
pop
setae
imul
daa
mov
push
inc
inc
bound
mov
loopne
dec
cld
push
cmp
sbbl
sbb
stos
pop
push
out
cmp
iret
mov
dec
dec
dec
lret
repz
xchg
xor
js
sub
in
call
mov
xchg
dec
jge
lods
scas
mov
in
adc
inc
add
dec
ret
xchg
jl
enter
dec
fidivs
add
or
mov
push
mov
push
call
movsb
dec
test
xchg
push
lods
mov
push
ljmp
add
fidivrs
push
test
add
pop
or
ja
mov
mov
cmp
xchg
xor
testb
or
mov
lds
loop
cmp
fimull
adc
mov
shlb
push
inc
arpl
ds
mov
lret
mov
push
cmpsl
and
cmp
or
fildl
adc
pusha
negb
nop
pop
pop
inc
test
xchg
cmp
cwtl
int
adc
rcrl
xor
xchg
clc
orl
imul
mov
push
rcl
xor
or
andl
xor
xchg
xchg
add
loope
mov
fdivrl
push
mov
das
cmpsb
sbb
dec
jne
pushf
inc
lock
sub
call
popf
jb
mov
jb
shll
mov
mov
push
imul
mov
xor
cmpsl
cwtl
cmp
loopne
cmp
xchg
xchg
pusha
loopne
mov
sbb
pop
or
rorb
pop
aad
scas
mov
jg
add
push
jle
or
idivl
stos
pop
inc
cmp
into
sbb
sbb
sarb
leave
jg
fstps
sub
adc
insl
push
lods
sub
loop
push
out
and
jb
push
xor
imul
shrb
xchg
sbb
push
arpl
in
jno
daa
cld
fnstenv
stos
in
and
and
push
enter
lods
jle
jb
sarb
cmc
fwait
test
mov
mov
sbb
stos
add
mov
sbb
cmpb
mov
ds
call
insb
push
push
insl
loop
mov
mov
adc
push
je
dec
test
and
sub
lahf
adc
mov
cld
cmp
xor
or
adc
adc
pop
hlt
fsub
ja
ret
lahf
stos
insb
add
inc
gs
add
mov
push
add
les
popa
mov
seto
fisubrs
outsl
xor
mov
mov
lods
in
aam
dec
pop
hlt
cmc
adc
mov
out
xorl
cmp
mov
or
fldl
sub
fiaddl
or
mov
in
xchg
fstpt
xchg
or
iret
mov
xchg
out
pushf
ljmp
rorl
mov
pushf
int
pop
pusha
stc
lea
mov
xchg
mov
je
and
pop
scas
gs
lock
fisubs
cmp
sub
subb
push
in
addr16
scas
dec
je
scas
movsb
xchg
dec
daa
add
repz
sub
into
xchg
jp
ficoml
int3
lret
pop
scas
adc
bound
out
cltd
and
in
pop
dec
rorb
fstps
xchg
into
or
jae
jne
int3
push
pop
push
add
fwait
push
cmpsb
dec
loopne
pop
mov
inc
test
jae
pop
pop
sub
push
adc
outsl
jno
mov
jg
xchg
pop
dec
pop
movsb
jge
mov
loope
es
pop
jge
test
ss
cmp
mov
mov
xchg
inc
outsb
xor
and
xor
rep
sbb
arpl
imul
jmp
adc
jmp
shl
jmp
fadd
cmp
fs
xchg
dec
ret
in
mov
fs
jo
mov
sbb
and
or
and
or
inc
out
fiadds
call
push
nop
mov
pop
imul
pop
xor
sub
jle
in
adc
dec
and
push
fdivrl
push
inc
sahf
cmp
push
push
loope
jecxz
or
aas
loope
insl
fidivl
repz
and
push
and
cli
sbb
pop
pop
xchg
aaa
jle
pop
repnz
rorb
cmp
ljmp
cld
xor
ljmp
and
lock
pusha
fistps
sbb
dec
pop
adc
ficompl
leave
lea
es
test
pop
and
popf
inc
leave
sbb
or
es
out
push
xchg
shlb
inc
lcall
jae
inc
mov
and
cmp
sbb
in
pop
pop
pop
subl
dec
adc
jb
lods
std
scas
sbbb
push
test
fdivp
cmpb
in
or
mov
stos
sbb
xchg
movsl
int
fdiv
addr16
sub
bound
out
sahf
sahf
xor
mov
imul
aas
and
pop
gs
cmp
outsb
gs
sub
cmp
jno
mov
inc
gs
out
fdivrl
jmp
shrl
pop
jbe
pop
xchg
scas
repz
sahf
adc
add
outsb
loop
push
iret
dec
jl
pop
iret
jmp
xchg
popa
cmp
jle
imul
sub
dec
test
pop
outsl
je
xchg
fwait
ret
xchg
mov
pushf
dec
push
pop
mov
sub
add
push
dec
aad
fs
ret
xor
push
mov
pop
nop
add
adc
int
push
fs
jno
xor
cmc
ja
jecxz
test
dec
cwtl
jecxz
add
clc
sbb
add
ficoml
push
imul
jbe
rolb
nop
jmp
jno
sahf
mov
insl
and
ja
jo
push
in
push
adc
jae
int
adc
xorl
leave
pusha
xchg
inc
inc
mov
pop
and
fmul
xor
jge
insb
test
dec
ja
and
mov
add
scas
popa
mov
inc
add
lods
cltd
test
dec
js
jl
mov
inc
cmp
push
push
mov
bsr
push
add
inc
bound
pop
cmp
and
scas
xor
and
call
mov
aad
push
jp
out
push
mov
or
movsl
mov
sub
add
call
dec
sub
push
into
std
in
fidivl
xor
xchg
pop
cld
gs
clts
pop
testb
sub
out
inc
das
sbb
cmp
xchg
fnstsw
es
hlt
adc
sbb
out
mov
push
das
movsl
repnz
mov
stc
fisubrl
cmpsl
cli
adc
jo
cmp
sbb
pop
pusha
fsub
dec
inc
xchg
imul
nop
mov
mov
sahf
mov
fadd
out
icebp
clc
pop
sar
inc
pop
in
fsubrs
mov
ja
lock
fcomps
int3
out
pop
js
push
push
push
xchg
inc
dec
aam
sbb
test
fiaddl
xchg
adc
lcall
neg
dec
and
cmp
fistl
jns
pop
ret
pop
sti
out
jnp
movsb
push
cltd
sti
dec
or
mov
inc
enter
shrl
clc
out
jp
and
fldcw
cmp
fs
sarb
ljmp
push
jns
leave
int3
cltd
sub
dec
or
cmpsl
test
mov
lods
out
repz
dec
das
pop
mov
sub
cli
repnz
push
xchg
out
andl
jmp
sbb
sbbb
pushf
out
test
xchg
lret
idivb
adc
popa
lds
ror
xchg
stos
mov
data16
stos
hlt
movlps
mov
push
out
add
pop
adc
inc
loop
jo
jle
lret
mov
cwtl
fmulp
pop
mov
ja
sarl
stc
sub
and
xchg
adc
jne
xor
mul
loop
scas
enter
pop
adc
std
xor
pop
mov
std
jno
and
imul
mov
insb
push
inc
cmp
jo
push
xorps
js
xchg
xchg
add
push
popa
pcmpeqd
hlt
nopl
push
pop
pop
mov
lret
movsl
hlt
dec
scas
lock
imulb
pop
mov
out
mov
mov
addr16
ja
mov
cmpb
fnstsw
push
ljmp
fnstsw
test
xor
mov
es
sub
xchg
xorb
fdiv
mov
out
xchg
sub
mov
jnp
jmp
mov
negb
xchg
popf
sbb
shrl
sub
cld
mov
sbb
shl
frstor
and
in
mov
push
repz
xchg
mov
insl
ja
jmp
incl
push
ds
outsl
cmc
loope
repz
push
lods
shl
aaa
out
push
push
icebp
mov
mov
mov
cmpsb
pop
adc
stos
fdivrl
test
rolb
mov
cmp
ljmp
xor
jl
fidivrl
data16
imul
dec
pop
mov
sbb
xchg
cmpb
daa
negl
sahf
inc
mov
xor
pop
and
or
cld
sti
mov
dec
fwait
adc
push
sti
mov
pop
pop
in
adc
aad
daa
and
fidivl
jl
or
ret
into
mov
loop
loope
data16
add
mov
sahf
lahf
add
or
adc
add
daa
xor
mov
std
jbe
daa
xchg
jno
xchg
mov
mov
pop
test
dec
fcmovne
inc
mov
mov
test
inc
inc
outsl
push
cmpsb
addl
movsb
cltd
rcrl
push
push
mov
insb
and
and
add
and
shrb
out
jecxz
sub
cmp
into
das
mov
push
push
pop
mov
cmpsb
or
fs
cld
xor
cli
adcl
rcll
imul
roll
cmp
sti
dec
xor
pusha
jmp
aaa
push
stc
jne
jg
daa
sub
ja
mov
mov
call
cmp
pop
pusha
dec
fs
push
movl
outsb
cmp
push
outsb
hlt
ret
pop
mov
pop
mov
mov
in
inc
and
test
and
cmp
mov
out
lret
adc
outsl
inc
pusha
mov
xchg
inc
mov
sbb
dec
xor
mov
mov
iret
popf
aaa
pop
fimuls
ljmp
aad
and
lahf
je
or
mov
add
loop
dec
loopne
in
imul
adc
cmp
fstpt
push
in
loop
enter
xor
imul
int
mov
into
out
inc
add
sbb
sbb
imul
rcl
icebp
mov
adc
push
test
subl
cmpsb
cmp
cltd
fbstp
inc
out
lea
mov
test
dec
call
mov
aad
sbb
mov
std
inc
pop
iret
call
out
dec
lret
lret
mov
ds
call
mov
push
aam
cltd
and
dec
or
popa
sti
cmp
push
ret
lret
fisubl
mov
mov
inc
pop
dec
int
mov
in
shlb
aaa
ret
adc
jae
dec
add
cmc
repz
xlat
fstl
jae
mov
sbb
xchg
stc
in
and
push
xchg
cmc
test
test
add
sub
fnsave
jecxz
adc
clc
mov
lahf
sub
and
bound
imul
jp
add
gs
inc
mov
jge
movsb
mov
out
sub
hlt
insl
popf
inc
jbe
les
cmp
mov
inc
fistps
mov
sub
ds
mov
fimuls
jno
test
lret
jp
pusha
xchg
cmp
loop
ja
popa
scas
icebp
and
add
sbb
inc
stos
or
int
stos
add
repnz
push
jge
push
dec
cmp
dec
scas
rcrl
stc
sub
adc
bound
es
or
or
icebp
dec
imul
xor
aad
mov
scas
je
mov
aad
push
sbb
outsb
mov
test
lock
sub
call
out
inc
vandnps
lahf
mov
pop
adc
xchg
inc
fwait
sub
xchg
sbb
push
mov
xor
clc
and
cmpsb
or
mov
mov
push
into
lods
mov
sub
rorb
xchg
icebp
out
mov
in
pop
test
fsubs
test
sub
mov
xchg
shl
call
scas
aaa
push
adcb
test
aas
mov
mov
jmp
jo
dec
add
sub
or
push
packuswb
adc
xor
out
dec
and
mov
outsl
dec
js
xor
mov
mov
inc
jl
xchg
cmp
sub
cmp
mov
and
out
jne
cltd
inc
gs
mulps
push
nop
and
cmp
std
add
cmpsl
adc
xor
push
loopne
xlat
cmp
movl
jae
insb
mov
cwtl
movsl
mov
xchg
add
in
sarl
cmpsl
mov
jae,pn
push
sub
lods
mov
add
adc
out
push
add
loope
mov
adc
pop
cmpb
xor
ffree
arpl
jno
jle
repz
cmpsb
cmp
aad
out
adc
lea
lcall
shll
mov
enter
or
test
cmp
or
jecxz
call
cmp
push
xchg
addr16
pop
xor
cmpsl
fnsetpm(287
xor
lods
out
icebp
jl
and
jnp
inc
mov
call
cltd
rcrb
sbb
xlat
xchg
or
ss
imul
pop
push
xor
push
std
fidivl
inc
pop
push
fistpll
cmpsl
popa
gs
cmp
cmp
fucomip
mov
xchg
leave
in
xor
flds
sbb
adc
ret
jecxz
in
push
hlt
cld
ret
test
or
mov
and
sbb
adc
aas
lret
jno
leave
xor
and
cmpsb
insl
pop
lods
adc
filds
mov
int
sahf
push
cs
scas
cld
xor
mov
js
xor
jecxz
dec
popa
call
fldcw
lds
mov
adc
pop
insl
lret
imul
jmp
sub
pop
cs
jmp
push
push
mov
sahf
lods
pusha
pushf
pop
movsb
cmp
js
movsl
mov
pop
sahf
adc
test
push
sub
jmp
lods
data16
pusha
out
stc
adc
xchg
sub
shrl
push
shrd
mov
jne
fs
mov
add
pusha
xlat
push
es
inc
les
mov
push
aam
jle
jg
les
mov
arpl
dec
ss
or
dec
jmp
shrl
jns
push
cmpsl
mov
xchg
test
sub
rcll
lods
das
adc
int
push
fstpl
mov
add
out
repnz
sub
leave
dec
je
aad
in
decb
xor
dec
xchg
cmpsl
inc
and
push
cmpsb
imul
mov
scas
mov
add
or
add
dec
in
das
rolb
mov
and
jb
popf
sub
testb
add
or
in
enter
fadd
bound
xchg
xchg
aam
faddl
test
outsb
movb
jne
cli
je
and
or
lcall
or
jo
sbb
push
pop
imul
outsb
lahf
cltd
or
ret
shll
mov
jmp
ffree
dec
mov
iret
mov
out
pop
repnz
mov
jmp
mov
or
and
xchg
shlb
jae
sbb
adc
dec
into
sbb
lods
into
hlt
les
loopne
dec
test
sahf
insb
lret
mov
push
es
leave
scas
mov
lea
sahf
icebp
filds
stos
mov
push
movsl
jmp
jne
or
push
out
das
or
ss
clc
je
in
inc
and
add
cmpl
mov
xor
fs
xor
ss
ja
lds
jae
xor
flds
xchg
into
jae
jle
gs
inc
inc
xor
test
outsl
addr16
mul
in
xor
jnp
std
adc
js
dec
mov
mov
jno
insl
mov
jne
jns
pop
and
push
out
mov
push
ds
hlt
push
mov
fiaddl
cltd
scas
icebp
in
add
imulb
mov
pop
inc
jns
inc
shlb
mov
jns
leave
les
out
pop
lret
xchg
test
adcb
hlt
push
repz
fidivrs
add
sub
cmc
ljmp
xchg
cwtl
cli
sbb
push
adc
adc
sbb
sbb
repz
jae
cmp
xchg
pop
subl
inc
adc
stc
ja
sbb
or
xchg
xor
aas
mov
jge
jne
pop
xor
dec
nop
loopne
stc
cmp
xor
loop
cltd
rolb
shll
or
pop
cltd
mov
cmp
xor
mov
aas
or
ror
pop
andb
pushf
inc
push
mov
or
sub
ret
shrb
xorb
cmp
xor
aam
mov
scas
sbb
mov
icebp
test
repnz
cmp
ja
add
ss
inc
mov
lea
in
mov
cld
push
mov
iret
or
adc
fcom
ret
push
and
jae
or
hlt
scas
dec
rcrb
mov
mov
jge
shrl
adc
mov
fnsave
ret
ja
inc
inc
cmpsl
sbb
cmp
fadd
xchg
rcl
dec
jae
gs
mov
or
int3
push
data16
stos
out
mov
fsts
cwtl
insb
clc
ja
xchg
add
mov
jns
push
ret
push
outsb
movsl
fists
out
addl
loope
daa
or
sbb
stos
sarl
out
jmp
add
xor
scas
cmp
testb
push
lcall
leave
dec
jecxz
dec
push
aam
imul
jns
adcb
jp
dec
mov
into
adc
cmp
and
xor
inc
sbb
and
push
sub
fwait
in
test
lock
jl
xorl
das
lea
mov
cmp
or
pop
js
push
and
jl
jecxz
repz
inc
sbb
add
or
pop
dec
dec
lcall
and
cmp
mov
call
call
out
mov
shl
inc
xor
fs
fucomp
test
insb
imul
dec
outsl
inc
fwait
sbb
lods
jmp
shrb
xchg
cmc
shl
les
push
fisttps
add
dec
call
and
push
fdivrp
fs
xchg
insl
jp
stc
lcall
pusha
cmp
mov
gs
out
xchg
or
scas
xchg
xchg
lahf
dec
test
xor
mov
jecxz
xchg
scas
mov
call
adc
lahf
sub
pop
int
jle
scas
insl
push
dec
clc
in
ja
mov
and
and
push
xlat
fadd
inc
xor
pop
arpl
push
xor
sahf
xchg
xchg
bound
mov
enter
fadds
mov
mov
push
jno
jnp
or
test
or
out
ljmp
push
and
inc
add
lret
mov
and
rcr
sbb
or
bound
repz
fmull
jmp
addl
add
inc
js
test
sub
mov
lsl
out
es
fisubrl
or
insl
nop
repz
pop
movhps
pop
ja
mov
ljmp
xor
cmp
xchg
outsl
push
dec
fistpl
scas
mov
sahf
cmp
stos
stos
pushf
repnz
xor
incl
nop
or
and
push
int
mov
sub
inc
dec
push
out
add
cmp
rorb
enter
push
adcb
out
mov
push
push
ljmp
shlb
push
xchg
cmp
add
sbb
sub
pop
pop
jo
add
inc
jp
sub
iret
push
int3
push
xor
jecxz
test
icebp
into
cmp
cmc
stos
iret
jmp
loope
aas
insb
cmp
adc
cmpsb
add
jge
sbb
xchg
mov
scas
aas
fwait
lea
xor
xchg
andl
fidivrl
call
popf
ficoml
adc
repnz
loope
cmp
lcall
push
xchg
mov
lock
popf
inc
sub
test
push
pop
xor
pop
loope
sbb
sbb
sub
adc
xchg
xchg
in
and
dec
push
pop
adc
imul
ja
pop
add
xchg
inc
ret
shll
push
push
pop
test
gs
jl
in
mov
dec
call
or
xchg
rcrb
pop
stos
sub
mov
jne
fnstenv
mov
rorl
mov
jle
add
or
push
sbb
sub
dec
sbb
jle
or
fimuls
mov
sbb
jo
push
call
inc
sbb
and
xchg
bound
popa
pop
dec
inc
lock
adc
inc
outsl
mov
push
repz
pop
pop
mov
fists
jg
mov
push
mov
cli
inc
jmp
push
sbb
loope
cli
cmpsl
sbb
cmp
xchg
rorb
setae
mov
mov
leave
enter
mov
std
mov
jnp
sub
mov
sub
push
xchg
dec
add
es
leave
pop
sbb
lahf
rcr
sbb
insl
jl
or
test
fs
fildll
loopne
imul
adc
mov
adc
sbb
mov
fists
hlt
mov
movsb
cmp
in
jecxz
jl
nop
je
mov
rcl
sub
test
jae
jno
fsubrs
xchg
xor
inc
or
and
lahf
lret
mov
mov
test
cmp
xchg
fcompl
mov
scas
shll
stc
cwtl
out
into
outsb
push
push
mov
in
pop
arpl
sti
pop
pop
cmp
lea
cmp
jp
xor
sahf
xchg
jg
repz
and
xlat
jmp
addr16
imul
or
imul
rol
js
pop
pop
add
adc
jb
xor
jne
cmp
cltd
xlat
jbe
jg
int3
pop
inc
mov
push
es
int
mov
js
dec
adc
jno
fs
dec
cmp
mov
stos
jp
sti
unpckhps
cmpsl
out
push
and
cmp
fiadds
mov
leave
popa
sub
or
movsl
cmp
mov
mul
dec
or
test
and
js
add
ror
pop
imul
ljmp
pop
add
adc
or
dec
movsb
inc
jae
push
call
dec
xchg
lods
adc
fists
mov
lcall
sub
jle
loopne
inc
adc
cli
cmp
lods
loopne
cmp
aaa
outsl
mov
or
push
ret
jle
xchg
arpl
pop
jns
hlt
leave
add
sub
imul
out
mov
adc
inc
and
cmp
xchg
mov
ds
int
add
notl
pop
inc
mov
fnstsw
mov
jbe
sub
dec
ds
xor
add
sarb
sub
inc
push
jmp
pop
push
jo
dec
mov
mov
cmp
jno
lret
ret
mov
pop
inc
or
ror
or
mov
add
popa
jge
adc
sub
out
xchg
xchg
sbb
std
dec
decl
cmpsb
jns
pop
loope
push
or
sub
adc
or
insl
cmp
xlat
inc
fiadds
in
cmpsl
pop
dec
mov
inc
and
mov
test
mov
addr16
mov
out
dec
add
jp
inc
or
clc
frstor
lret
mov
ja
iret
and
loope
cmp
test
jae
xor
sar
dec
jno
in
mov
adc
mov
jne
popf
jp
test
test
jno
pusha
xor
dec
or
ret
loopne
ficoms
mov
xchg
and
dec
jbe
xor
xchg
mov
sbb
mov
movsl
push
xchg
and
xor
bound
jno
and
mov
pop
popa
test
xor
rcr
and
adc
push
hlt
sub
lcall
xchg
mov
mov
inc
popw
mov
xchg
mov
icebp
das
je
inc
daa
mov
outsl
pop
jecxz
mov
into
adc
das
test
jb
dec
fwait
adc
push
mov
or
jle
and
int
mov
test
pop
repz
aas
decl
rcl
lock
fwait
mov
pop
jmp
jecxz
out
add
out
sti
xor
mulb
adc
mov
out
jge
cmpsb
or
xchg
xchg
push
js
push
inc
adc
dec
in
hlt
jae
xor
movsb
pusha
mov
arpl
mov
jbe
aaa
push
xchg
cmp
test
and
ljmp
into
mov
out
movsb
xor
cmc
inc
in
not
adc
daa
mov
in
pop
adcl
adc
dec
mov
mov
push
add
adc
jg
adc
inc
jge
inc
mov
ja
add
inc
and
test
roll
push
xchg
xlat
movsl
xchg
jno
std
out
add
jae
inc
adc
and
and
call
loop
dec
jecxz
iret
in
mov
bound
pop
int
xor
mov
sub
cmp
sub
pop
test
sbb
pushf
and
lods
mov
hlt
pusha
mov
es
mov
gs
enter
scas
int
cld
popf
mov
mov
dec
test
scas
fadds
jle
repz
sbb
cmpl
inc
dec
fldt
or
add
cmpl
inc
aam
and
sbb
mov
add
iret
outsl
nop
movsb
inc
mov
cld
sub
xor
add
or
fmuls
mov
jg
mov
movsl
sbb
lahf
mov
rolb
sub
and
scas
xchg
mov
in
aas
imul
inc
push
pop
sbb
cmpsl
mov
mov
test
push
mov
out
mov
inc
cmpsl
inc
add
mov
mov
and
mov
dec
add
test
fs
ret
pop
dec
shlb
call
enter
sbb
pop
sub
lods
adc
cmc
cld
loop
cmp
xlat
pushf
test
movsb
dec
sub
clc
jo
rolb
or
mov
push
mov
sbbl
nop
jne
mov
cmpb
fcmovbe
and
sub
icebp
fdiv
jbe
xchg
pop
cmp
fucom
rcrb
stos
inc
dec
xchg
lret
adc
aad
mov
test
sub
sub
pop
in
and
ret
pop
dec
fs
dec
mov
mov
mov
test
cmpl
fstps
insl
mov
loopne
sahf
shl
repnz
fnstcw
rclb
movsl
jecxz
sub
pushf
les
add
xor
add
repz
cmpsb
push
adc
popf
lcall
ret
fstps
out
push
shlb
push
shll
outsb
xchg
dec
and
pop
jmp
iret
adc
xchg
push
sar
sbb
sbb
call
xchg
and
jne
or
pop
scas
addr16
mov
mov
cmp
pop
cmp
dec
mov
xchg
xor
mov
stc
jae
insl
loope
lret
inc
inc
mov
and
and
out
inc
aaa
ss
push
sbb
jge
fwait
test
or
ds
ljmp
and
xor
movsb
push
daa
daa
js
mov
mov
roll
adc
clc
xchg
jb
iret
imulb
clc
daa
xchg
cmp
mov
fwait
dec
push
jne
sub
xchg
jnp
mov
mov
insl
int
daa
stos
xchg
adc
jns
imul
icebp
sbb
and
pop
sub
or
cmp
adc
aad
inc
mov
pop
out
mov
loope
cmp
cmp
add
lcall
jl
fwait
popa
xlat
xchg
stc
pop
subl
xchg
or
jge
add
pop
inc
xor
adc
and
call
jge
mov
push
into
mov
jge
jno
arpl
jge
add
push
movsb
mov
test
sub
insl
cs
adc
outsl
sti
push
jl
aam
jae
ret
icebp
shlb
mov
push
jl
push
adc
dec
ljmp
cmp
ljmp
jno
lods
xchg
add
mov
mov
lods
sub
insb
out
xchg
lret
loop
icebp
loopne
mov
xchg
pusha
dec
out
inc
push
imul
fbld
cmpsl
jge
jle
jmp
adc
jno
pop
stos
inc
ret
push
stos
insb
repz
inc
cmp
pushf
or
adc
sbb
loop
sub
fsubrs
jge
jne
lea
in
dec
cs
adc
outsb
subl
int3
in
inc
mov
push
add
shlb
sbb
cmp
pop
cmpsl
dec
testl
fdivr
lcall
xor
adc
jecxz
int
push
xchg
adc
pop
mov
push
fs
mov
xor
shrl
outsb
mov
in
int3
aad
aaa
jnp
loop
adc
cmp
push
xchg
inc
jmp
pop
pop
cmp
addr16
lds
aad
mov
xor
movsb
call
mov
push
lcall
pop
inc
cmpsl
sti
push
repz
add
andb
adc
testl
push
xchg
cmp
iret
aaa
sbb
in
popa
jne
arpl
lea
push
aaa
xor
push
jns
xchg
cmp
mov
jnp
lret
jnp
xchg
xor
push
add
movsl
lret
mov
arpl
lahf
inc
push
loope
xchg
das
xor
lock
daa
mov
testb
aad
mov
sub
les
imul
ss
orb
sti
in
mov
fisttpl
out
in
adc
fwait
and
xor
or
popa
inc
sbb
js
lods
lahf
mov
dec
loopne
insb
xchg
subl
lcall
shl
inc
and
mul
and
jno
ja
dec
sub
shrl
stos
xchg
cwtl
dec
adc
in
adc
insb
test
pop
icebp
rcrl
negb
cmpsb
in
rolb
rclb
add
add
push
outsb
gs
arpl
and
insb
outsl
arpl
imul
cmp
sub
and
xor
and
sub
ja
cmp
xor
js
inc
jb
outsl
jb
bound
and
insb
outsl
arpl
imul
outsb
je
jb
and
jo
ja
cmp
xor
js
push
push
jae
imul
and
insb
imul
outsl
and
jae
imul
outsl
jb
and
push
push
push
jae
imul
and
insb
imul
outsl
and
jae
imul
outsl
jb
and
js
xor
add
add
jb
jno
imul
dec
dec
and
insb
gs
and
ja
jae
outsb
outsl
je
outsw
jne
fs
add
jb
jb
popa
insb
insb
outsl
arpl
imul
outsl
jb
and
add
add
xchg
testb
mov
cmp
imul
add
add
gs
jne
xor
cs
insb
add
add
inc
outsl
jb
imul
outsb
je
insl
gs
js
add
arpl
gs
insb
add
push
outsb
imul
imul
dec
outsb
imul
add
add
outsl
insb
xor
cs
insb
add
add
repnz
add
or
xor
or
sub
or
sub
or
pop
repnz
push
repnz
xchg
or
cwtl
repnz
stos
repnz
mov
repnz
fdivp
or
hlt
repnz
add
add
adc
or
push
repz
add
add
push
repnz
xchg
or
cwtl
repnz
stos
repnz
mov
repnz
fdivp
or
hlt
repnz
add
add
adc
or
push
repz
add
add
js
push
imul
jb
add
push
imul
insb
insb
outsl
arpl
add
push
jb
arpl
fs
jae
add
dec
add
fs
imul
js
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jnp
push
imul
jb
je
arpl
scas
add
imul
jae
jne
inc
gs
outsl
fs
gs
imul
add
dec
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
aad
ja
jo
imul
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
and
lret
cmp
add
dec
mov
das
lret
cmp
add
dec
mov
in
mov
mov
push
xor
mov
push
mov
test
jle
push
mov
shr
shl
cmp
jb
sub
or
cmp
jae
mov
shl
cmp
jne
movl
or
jmp
mov
inc
mov
movzbl
shl
or
decl
jne
pop
mov
mov
pop
pop
pop
ret
mov
mov
push
push
mov
movzwl
mov
shr
imul
mov
cmp
jae
mov
mov
movzwl
mov
sub
sar
add
mov
mov
cmp
jae
mov
cmp
jne
movl
or
jmp
mov
inc
mov
mov
movzbl
shl
or
shl
mov
mov
xor
jmp
sub
sub
mov
mov
mov
push
mov
shr
sub
mov
mov
cmp
pop
jae
mov
push
cmp
jne
mov
or
jmp
mov
inc
mov
mov
movzbl
shl
or
pop
shl
mov
mov
pop
pop
ret
push
mov
cmpl
push
pop
jle
push
push
mov
pushl
lea
mov
add
push
call
pop
add
dec
pop
jne
pop
pop
mov
push
pop
shl
sub
pop
ret
push
push
xor
push
xor
cmp
pop
jle
push
mov
pushl
lea
add
push
call
pop
lea
pop
mov
shl
or
inc
cmp
jl
pop
mov
pop
pop
ret
push
mov
push
push
movzbl
shr
shlb
mov
push
mov
pushl
shl
lea
push
call
pop
mov
pop
or
cmp
jne
cmp
jge
movzbl
shr
pushl
lea
shlb
shl
add
lea
push
call
pop
add
pop
or
jmp
mov
cmp
jge
pushl
add
lea
push
call
pop
or
pop
jmp
pop
mov
pop
pop
pop
ret
push
mov
push
mov
push
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
jmp
lea
push
call
pop
pop
test
push
jne
mov
push
shl
lea
push
call
add
add
jmp
add
push
push
call
add
add
pop
pop
ret
push
mov
sub
mov
push
push
push
mov
push
pop
xor
lea
mov
shl
xor
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
dec
mov
mov
shl
dec
mov
mov
test
jbe
mov
mov
mov
shr
rep
adc
rep
mov
mov
andl
andl
orl
lea
mov
mov
movl
cmp
jne
mov
or
jmp
mov
mov
incl
mov
movzbl
shl
or
decl
mov
jne
mov
andl
cmpl
jbe
mov
lea
and
push
mov
shl
add
lea
push
call
pop
test
pop
jne
mov
mov
sub
and
movzbl
shr
mov
shl
add
lea
shl
cmpl
lea
jge
andl
jmp
cmpl
jge
subl
jmp
subl
cmpl
je
mov
mov
sub
mov
mov
lea
pushl
push
push
call
add
andl
mov
jmp
push
pop
add
lea
push
lea
push
call
or
pop
cmp
pop
jl
mov
jmp
mov
lea
push
movl
lea
push
call
pop
cmp
pop
jne
lea
push
lea
push
call
pop
test
pop
lea
push
jne
lea
shl
add
lea
push
call
pop
test
pop
jne
cmp
mov
setge
dec
and
add
sub
mov
mov
mov
mov
incl
mov
jmp
lea
push
call
pop
test
pop
jne
mov
jmp
lea
push
lea
push
call
pop
test
pop
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
call
mov
add
xor
cmp
setge
dec
and
add
mov
jmp
mov
push
mov
mov
mov
mov
mov
xor
cmp
setge
dec
and
add
mov
lea
push
lea
push
call
mov
add
cmp
jge
jmp
push
pop
shl
lea
push
lea
push
push
call
add
cmp
jl
mov
mov
sar
and
dec
or
shl
cmp
jge
lea
push
push
mov
sub
lea
push
call
add
add
jmp
add
lea
push
push
call
shl
add
lea
push
lea
push
push
call
add
jmp
mov
mov
inc
mov
cmpl
je
inc
inc
mov
mov
mov
sub
mov
mov
inc
dec
mov
test
jle
cmp
jb
mov
cmp
jb
mov
mov
pop
pop
mov
xor
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
cmp
jae
xor
cmp
mov
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
cmp
jb
movzbl
push
xor
pop
div
mov
add
dec
jne
movzbl
mov
push
lea
push
shl
lea
push
push
call
test
mov
jne
push
pop
jmp
lea
push
mov
push
add
pushl
push
mov
add
push
pushl
push
push
push
push
call
add
mov
xor
mov
push
push
pushl
call
lea
mov
push
lea
push
push
push
movl
pushl
call
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
andl
repz
gs
push
jb
jbe
xor
xor
add
add
mov
mov
mov
sub
mov
cmpl
je
mov
mov
add
mov
jmp
movl
push
push
push
push
call
mov
cmpl
je
andl
push
push
push
push
call
mov
push
pushl
pushl
call
mov
lea
mov
mov
movsbl
cmp
je
mov
dec
mov
jmp
mov
inc
mov
mov
sub
mov
push
push
push
push
call
mov
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
add
andb
mov
shl
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
cmpl
je
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
pushl
mov
pushl
pushl
call
add
mov
pushl
pushl
call
pop
pop
jmp
mov
cmpl
je
push
push
mov
pushl
push
call
mov
mov
mov
cmpl
jne
push
pushl
push
push
call
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
xor
divl
add
mov
pushl
mov
pushl
pushl
call
add
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
shr
rep
mov
and
rep
mov
imul
mov
mov
add
mov
jmp
push
push
pushl
call
jmp
mov
mov
add
mov
sub
mov
mov
mov
xor
divl
add
mov
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
imul
mov
cmpl
je
mov
imul
mov
cmpl
jbe
mov
imul
mov
mov
add
mov
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
pushl
mov
imul
mov
pushl
pushl
call
add
jmp
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
lea
push
push
push
pushl
call
mov
mov
add
mov
pushl
call
mov
cmpl
jne
push
push
pushl
call
mov
cmpl
jne
mov
mov
add
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
push
push
pushl
call
mov
cmpl
jne
pushl
push
pushl
call
add
push
pushl
pushl
push
call
push
call
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
cmpl
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmpl
je
andl
mov
mov
and
test
je
mov
mov
and
movzwl
push
pushl
call
mov
jmp
mov
mov
add
mov
mov
inc
inc
push
pushl
call
mov
cmpl
jne
mov
mov
and
test
je
mov
mov
and
movzwl
push
pushl
pushl
push
pushl
call
add
jmp
mov
inc
inc
push
pushl
pushl
push
pushl
call
add
push
pushl
pushl
push
call
push
call
lea
push
push
push
pushl
call
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
mov
cmp
je
mov
cmpl
je
mov
mov
add
mov
mov
cmpl
je
mov
add
mov
andl
jmp
mov
inc
mov
mov
mov
sub
cltd
sub
sar
cmp
jge
mov
mov
add
mov
movzwl
and
add
mov
mov
movzwl
sar
mov
cmpl
je
cmpl
je
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
add
cmp
jbe
mov
pushl
push
pushl
call
add
push
pushl
pushl
push
call
push
call
lea
push
push
push
pushl
call
mov
mov
mov
jmp
mov
pushl
mov
movzwl
push
push
pushl
call
add
push
pushl
pushl
push
call
mov
inc
inc
mov
jmp
mov
mov
add
mov
jmp
mov
cmpl
je
call
mov
mov
add
mov
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
mov
cmpl
je
push
call
mov
pop
pop
pop
add
pop
push
mov
cmpl
jne
pop
xor
inc
ret
pop
jmp
jmp
jmp
pop
pop
pop
leave
ret
push
mov
cmpl
push
je
mov
mov
test
je
mov
test
je
pushl
pushl
pushl
call
add
jmp
mov
movl
mov
mov
mov
mov
mov
pop
pop
ret
cmpl
movl
je
pushl
pushl
pushl
call
ret
push
mov
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
call
mov
push
push
mov
call
push
mov
pushl
call
push
mov
call
push
push
call
push
mov
call
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
test
jl
lea
push
push
push
push
push
push
call
test
jl
mov
push
mov
call
test
jl
mov
lea
push
push
mov
call
test
mov
jl
mov
lea
push
push
push
call
test
jl
pushl
push
push
call
cmp
mov
je
lea
mov
push
push
call
test
jge
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
jmp
mov
mov
mov
mov
shr
rep
pushl
mov
and
rep
call
mov
lea
push
pushl
mov
push
call
test
jl
mov
lea
push
push
mov
call
test
jl
lea
push
call
push
push
sub
lea
mov
mov
movsl
mov
push
movsl
movsl
movsl
call
mov
push
mov
call
pushl
call
call
mov
cmp
je
mov
push
call
lea
call
lea
call
lea
call
lea
call
jmp
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
pop
pop
pop
leave
ret
mov
test
je
mov
push
call
ret
push
mov
sub
push
push
push
push
mov
pop
mov
mov
mov
xor
and
mov
mov
mov
add
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
mov
mov
mov
cmp
je
cmp
je
inc
jmp
mov
mov
mov
sub
add
add
cmp
mov
jbe
andl
jmp
test
jbe
mov
and
shl
dec
mov
jne
mov
test
je
cmp
jne
mov
mov
shrl
mov
and
cmpl
je
and
cmp
jae
xor
mov
mov
movzbl
shl
or
movzbl
shl
or
sub
sub
sub
cmpl
mov
je
mov
push
movzbl
mov
shl
mov
pop
sub
mov
shr
test
je
cmp
jne
push
pop
sub
push
shl
pop
mov
shl
dec
xor
jmp
mov
mov
add
shr
and
dec
not
mov
mov
shr
mov
mov
shr
mov
mov
andl
jmp
orl
mov
inc
test
je
cmp
jne
or
mov
cmp
jbe
pop
pop
pop
leave
ret
add
or
add
add
add
add
lock
movsb
add
add
cli
or
add
inc
add
add
add
sub
add
add
add
add
add
add
add
mov
add
xchg
add
add
pusha
add
add
in
roll
test
add
add
add
inc
add
inc
add
add
jno
add
nop
xor
add
mov
add
add
.byte
