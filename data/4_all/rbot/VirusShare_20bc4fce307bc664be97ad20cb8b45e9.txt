mov
outsb
xchg
movsl
cltd
dec
stc
in
xor
imul
xlat
dec
les
imul
cltd
stos
and
sbb
rcll
outsl
lea
pop
lea
mov
sahf
cmp
mov
jge
cmp
xor
cmp
cld
push
xor
cmpsb
nop
lods
rcrl
or
sub
andl
orl
ss
out
xor
xor
mov
sub
mov
fimull
inc
jge
mov
sub
mov
mov
scas
stos
mov
clc
and
fidivl
repz
mov
jmp
sahf
fistps
xchg
test
ss
and
es
lods
jo
nop
sub
and
and
mov
sub
stc
jno
out
sbb
mov
scas
xchg
pop
cmc
mulb
add
scas
sub
sbb
ss
imul
rolb
add
push
adc
or
and
dec
sti
rcrb
leave
inc
ss
push
xchg
sub
cmp
add
mov
adc
cmc
nop
adcb
xchg
mov
aaa
jne
ss
add
sub
and
call
push
fs
sbb
jns
xchg
lods
jl
das
nop
sub
jp
mov
movsl
xchg
or
cmpsl
mov
dec
test
in
in
inc
pop
add
loopne
adc
repnz
mov
cmpsl
push
mov
mov
popf
mov
popf
pop
test
mov
xor
daa
xchg
shll
xor
push
inc
xchg
push
xor
sbb
inc
stos
fldcw
sbb
jne
inc
push
shl
je
call
pusha
ljmp
lock
clc
lahf
gs
push
movsb
mov
and
ja
inc
pop
mov
xor
jb
dec
in
xchg
xchg
fimull
ljmp
add
into
popf
dec
jecxz
in
or
inc
mov
bound
inc
int
mov
pop
push
sbb
stos
lods
inc
loop
dec
xchg
popa
scas
add
aad
mov
shlb
lods
shr
xchg
mov
pusha
scas
in
mov
aam
roll
hlt
add
push
subl
popf
mov
jae
and
mov
mov
sub
cmc
pop
xor
pop
cmpsb
call
or
and
test
xchg
mov
mov
js
repz
mov
inc
lods
jb
popa
aam
pusha
inc
in
cmp
shll
lock
std
pop
dec
cli
jl
cmp
arpl
pushf
out
mov
mov
jl
sub
scas
clc
mov
lds
mov
out
lret
cmovg
sub
and
push
xchg
ret
mov
mov
inc
ds
aas
add
dec
push
xor
push
out
pop
adc
test
push
bound
and
sbb
xor
jne
mov
dec
test
es
pop
popa
pop
inc
arpl
arpl
in
insl
sub
mov
sarb
mov
in
inc
jmp
lds
cmc
popf
mov
add
test
mov
push
jbe
idivb
push
sub
bnd
sub
insl
mov
sub
pop
js
pop
jo
out
pop
adc
cmpsl
xchg
add
into
mov
fcoml
shll
es
lahf
adc
push
jb
and
mov
nop
std
fcmovu
imul
cmp
negb
pop
lahf
push
pop
xchg
pop
leave
inc
fwait
jecxz
push
jl
subl
gs
jle
out
aaa
fs
add
sub
addb
lcall
dec
dec
repnz
shlb
cmpsb
addl
xchg
sbb
pop
sub
mov
jae
mov
cmp
inc
jns
inc
push
xchg
roll
pop
into
push
scas
test
lds
xchg
adc
fwait
sti
sub
jo
xchg
mov
out
out
outsb
addb
enter
dec
mov
xor
es
fbld
daa
push
xor
test
mov
fnsave
xchg
movsl
lret
push
stos
test
and
pop
imul
lods
add
fstps
pop
xor
xchg
hlt
shlb
push
or
xor
jne
sti
repnz
lds
ficoml
and
jp
jle
cmpsb
jp
daa
sub
xchg
and
jo
ret
ret
adc
pop
pop
and
jp
and
out
or
add
loope
je
lods
jp
lahf
xor
and
mov
repz
mov
fidivrl
jns
adc
fwait
jae
jecxz
jg
movsl
jg
mov
sub
lcall
xchg
int3
lea
and
push
popf
mov
jp
cmp
inc
dec
cli
in
pop
push
adc
push
lds
cmp
or
fstl
cmpsb
std
cmc
aas
sub
and
loop
popa
push
cmpsl
inc
out
cmp
push
sub
cmpsl
out
aad
fs
lret
iret
inc
xor
pop
mov
out
lret
push
ss
out
mov
subl
jb
cs
or
test
ljmp
add
and
ds
ret
jbe
mov
test
jno
rcll
pop
pop
or
xchg
in
push
add
mov
mov
out
mov
mov
cltd
dec
repnz
jo
pop
out
pop
gs
xor
xchg
jb
sub
xor
jmp
test
lods
test
mov
and
lea
inc
lcall
out
and
repnz
fstpt
ret
adc
hlt
adc
lahf
mov
fmulp
xor
jmp
fistpl
cld
mov
push
sarl
jno
roll
xor
mov
lret
sbb
loop
out
pushf
and
mov
xor
lods
jl
mov
sbb
cmp
into
decb
aam
pop
stos
push
xchg
inc
sub
push
cli
out
inc
ja
pop
dec
sub
sbb
cmpsb
mov
pop
push
jle
and
movsl
mov
push
jb
ret
cmpb
sarl
call
push
push
lret
aas
sub
cwtl
mov
dec
lods
fsts
mov
jns
std
insb
inc
or
dec
es
gs
push
mov
fcomps
cltd
sahf
sbb
clc
jae
push
add
push
add
pop
nop
stc
clc
push
push
push
push
lea
push
push
push
push
jl
add
or
push
pop
mov
test
jge
add
push
push
and
pop
pop
push
inc
pop
clc
push
pop
jmp
jecxz
or
jl
rcl
lahf
sub
cmp
sahf
xchg
adc
mov
scas
dec
xor
jl
jmp
test
lock
cmc
xchg
nop
cld
jmp
jmp
call
clc
cmc
mov
inc
inc
inc
inc
cld
push
add
mov
pop
xchg
add
add
push
push
rol
pop
pop
xchg
stc
dec
inc
cld
clc
push
pop
test
jae
push
push
pop
pop
cmc
push
clc
pop
push
jg
and
pop
push
add
pop
stc
stc
cld
clc
stc
push
add
push
pop
pop
jmp
push
cmp
test
and
adc
fsubl
inc
mov
jno
cmp
push
sub
or
nop
xchg
push
pop
and
cmp
jne
jmp
loop
jecxz
mov
xor
mov
jmp
or
pop
jge
push
mov
pop
mov
cld
push
mov
add
pop
jb
push
xor
pop
rol
stc
and
cmp
push
pushl
xor
pop
pop
push
shr
pop
push
push
push
jg
cmp
pop
pop
pop
add
loop
jecxz
mov
and
in
fistpll
cmp
jae
add
jb
push
push
sub
pop
pop
push
push
pop
pop
add
stc
ror
nop
test
cmc
mov
inc
inc
inc
inc
loop
jecxz
popf
lds
sub
icebp
xchg
cmp
out
div
jbe
or
adc
hlt
bound
cli
xchg
pop
dec
push
inc
loop
jecxz
scas
call
xchg
sti
inc
jmp
mov
icebp
cmp
cmp
js
in
das
aam
ja
mov
push
pop
mov
and
add
adc
adcb
rcrb
fcompl
lods
mov
leave
dec
pop
xlat
inc
je
adc
shrl
xor
push
mov
adc
add
test
push
call
lock
mov
mov
inc
test
adc
push
fwait
mov
insl
push
push
mov
pop
dec
jne
push
call
in
adc
ljmp
jnp
cmp
mov
cli
movsl
testb
push
test
iret
sbb
add
pop
loop
jecxz
push
or
dec
jecxz
mov
dec
mov
and
adc
or
pusha
mov
into
push
pop
filds
cwtl
adc
iret
adcl
xchg
pop
add
add
pop
xorl
in
lahf
and
clc
sti
mov
dec
insl
push
xchg
adc
gs
leave
cmp
mov
in
jp
jno
pop
mov
shrb
popf
xchg
jnp
or
xor
inc
pop
mov
rorl
xchg
clc
jns
movsb
mov
pushf
mov
int3
push
or
push
mov
push
mov
pop
pop
dec
sub
mov
pop
cld
mov
cmc
mov
adc
bswap
sti
pusha
mov
inc
mov
rol
mov
inc
cmp
loop
jecxz
movsb
int3
hlt
pop
jae
mov
and
js
fiadds
mov
dec
push
pop
push
loop
sbb
inc
test
loop
jecxz
mov
cmc
in
fdivl
pop
lret
cwtl
push
sbb
adc
mov
and
cmc
mov
xor
je
push
call
insb
inc
fwait
rcll
pop
popl
mov
sbb
lea
in
mov
fisubs
jp
mov
fnstsw
push
cmpb
lods
xchg
clc
loopne
push
cmp
dec
jmp
ds
notb
les
test
lcall
mov
lock
xchg
cli
nop
fidivl
and
bound
ds
not
push
jle
jbe
add
mov
movsb
push
sub
out
pop
cmpsb
addb
push
sub
xchg
sbb
pop
and
jle
int
movsl
pusha
lret
xlat
aad
rorl
xor
and
out
sbb
sti
stos
out
lahf
call
scas
sbb
cmc
fidivl
shlb
or
mov
stos
or
je
mov
in
arpl
int3
jle
mulb
jno
mov
mov
add
test
daa
jl
jne
mov
xchg
sbb
sbb
or
mov
push
mov
ss
inc
push
mov
aas
jmp
scas
lret
sub
jbe
stc
mov
sbb
gs
ss
lret
insl
push
shl
cs
vmovhps
mov
mov
movsb
in
sbb
sbb
xor
ds
jmp
aad
inc
xorb
loop
out
ds
sub
icebp
jbe
and
xchg
sbb
push
std
or
mov
movsl
sbb
sbbb
push
dec
add
repnz
mov
cltd
aam
sbb
imul
add
mov
test
mov
test
test
js
cmp
or
pop
roll
xchg
cli
jno
mov
in
mov
mov
pop
ficoml
adc
imul
xor
or
rclb
not
lcall
pushf
lods
or
jge
lods
inc
mov
and
dec
jmp
loop
jb
pusha
fisttps
add
push
aaa
jo
mov
je
cmc
sub
and
jl
leave
adc
jp
movl
ficomps
orb
pop
das
push
push
adc
xor
test
cs
int3
pop
inc
add
inc
iret
jne
jmp
and
sahf
or
jbe
insb
add
ss
mov
loopne
rolb
mov
ret
lret
jg
or
push
push
dec
mov
sbb
dec
xchg
fwait
dec
push
dec
stos
out
jnp
mov
add
adc
in
scas
gs
cli
inc
fisubs
inc
sbb
roll
mov
mov
ret
cmp
mov
into
hlt
sub
ficompl
popf
pop
loop
xor
cwtl
ljmp
jno
rcrl
shl
ljmp
je
add
sahf
push
jne
dec
ss
push
imul
push
lcall
addr16
or
xor
add
push
mov
pop
xchg
jp
sarb
cmpsb
add
aas
jg
ficoms
outsb
adc
fwait
es
xor
adc
pop
je
fildl
rcll
into
fmuls
jbe
lods
loop
out
cmpsb
out
ja
push
mov
sub
or
push
in
cmpsl
movsl
lret
pop
fnsave
call
sbbb
sti
and
jae
std
out
mov
adc
sub
sarl
cli
push
mov
bound
je
inc
lahf
sub
adc
mov
add
sub
ret
cmc
cmpsb
fcmovbe
outsb
dec
loope
and
fdivr
stc
ljmp
dec
adc
xchg
jg
sbb
movsl
clc
retw
sub
add
inc
push
dec
fs
ja
pop
loope
mov
rcrb
lods
je
mov
xlat
test
add
push
xchg
out
add
loopne
repz
loop
out
rcrl
lcall
xor
mov
mov
pop
popf
loopne
or
and
adc
dec
orb
outsb
xchg
jns
adc
aam
shl
xchg
mov
aad
ja
or
int
pop
cmpsl
adc
xchg
jnp
test
mov
xchg
sub
adc
popf
pop
push
inc
test
mov
jne
sbb
lcall
adc
das
mov
push
sbb
out
jmp
subb
pop
jb
jg
or
jne
push
jge
mov
cmp
icebp
xor
push
movsb
sahf
xlat
gs
push
pushf
pushf
pop
stc
sub
jb
sarb
in
insl
ja
call
in
jle,pn
push
imulb
inc
push
sbb
cwtl
push
test
xchg
and
add
mov
fsubrl
lret
mov
orb
adc
fs
add
ljmp
inc
pop
cmp
push
ljmp
inc
mov
ja
test
jle
or
inc
pop
xchg
pop
push
in
in
mov
xor
int3
mov
sbb
and
fcomps
xor
sub
out
fmull
cmc
adc
test
test
testb
dec
scas
mov
pop
xchg
mov
and
xor
outsb
pop
lret
jmp
aad
xchg
sub
xchg
pop
adc
add
fcomps
jno
sbb
mov
popf
rcrl
mov
xorb
loopne
xchg
outsb
pop
arpl
mov
into
cmp
mov
mov
xor
scas
jecxz
push
arpl
dec
icebp
movsb
ljmp
cld
clc
mov
out
adc
mov
jbe
cmp
xor
sahf
cli
je
xor
xchg
bound
sbb
into
in
or
add
insl
mov
cmp
xchg
sbb
jbe
add
aas
fcom
add
or
aaa
and
sbb
test
pop
dec
or
jmp
push
cmp
mov
loop
movq
or
or
andl
fisubrs
sub
fadd
fildl
jbe
imul
push
sub
dec
mov
dec
dec
lods
dec
xlat
outsl
push
lahf
mov
divb
lretw
movsb
sarb
mov
jecxz
sbbb
and
in
or
lock
notl
adc
cli
lcall
out
jmp
rcl
jle
or
out
cmp
leave
das
mov
imul
popf
cmpsl
mov
mov
icebp
pop
sahf
sub
scas
cmc
int
pop
pushf
push
es
adc
popa
push
mov
mov
cmpsb
mov
mov
mov
adc
push
das
mov
pop
sti
sub
mov
xlat
xlat
daa
lahf
add
sub
sbb
sbb
pop
and
mov
pop
pop
fwait
pusha
or
mov
jo
sub
ret
or
fdivrs
in
mov
pop
xchg
or
andps
test
outsb
jb
add
push
or
pop
inc
pop
cmp
xchg
adc
pop
mov
xchg
lahf
ds
int3
pop
xchg
inc
push
dec
icebp
dec
loope
push
insl
jmp
cmpsb
andl
cmp
pop
es
xor
rclb
inc
testl
add
cli
push
add
shl
ss
ja
stos
lods
shrl
and
xchg
insl
std
and
lret
es
scas
xchg
xor
mov
jae
push
mov
mov
push
mov
adc
adc
hlt
mov
subl
sub
jae
inc
sbb
push
sbb
iret
mull
adc
lods
and
xor
push
mov
jl
and
das
xchg
xor
push
inc
pop
pop
bound
push
pop
leave
lea
or
sub
push
push
cmpsl
imul
adc
stc
shl
xchg
add
jns
mov
mov
in
mov
xor
sub
and
xor
mov
xchg
xor
shlb
negb
adc
cmpsb
xchg
test
subl
xchg
inc
sbb
mov
mov
pop
scas
outsb
pop
push
xchg
xchg
jns
mov
cmp
mov
and
mov
inc
dec
inc
leave
push
dec
stos
pop
mov
stc
sub
movsl
gs
inc
ss
aaa
push
imulb
scas
dec
xchg
add
loopne
insl
xchg
movsb
rclb
jns
jne
and
pop
inc
mov
or
out
cmp
divl
dec
dec
xor
mov
or
inc
inc
enter
add
ss
fnstcw
das
sbb
or
sbb
push
frstor
xor
cmp
mov
mov
fldl2t
sbb
aam
inc
cmp
add
outsb
outsb
mov
jmp
orb
or
addr16
sub
test
stos
sarl
adc
movsl
jg
cmp
pushf
je
imull
mov
adc
repnz
movsb
insl
in
xchg
ficoms
fists
iret
adc
mov
cmp
ss
xchg
push
xchg
enter
ljmp
jns
push
mov
test
and
pushl
or
xchg
mov
mov
and
jmp
xchg
pop
inc
jae
inc
ss
xchg
loopne
mov
sbb
js
inc
xor
movsl
jne
dec
jg
sub
xchg
jbe
push
cmpsb
fcoml
in
sub
lock
in
sahf
xor
jb
into
sbb
leave
pop
in
mov
mov
jbe
call
mov
adc
jae
ja
dec
in
ret
or
fcmovbe
xor
jo
rcll
outsb
jb
movsl
ds
cs
outsl
add
pop
pop
ds
jmp
add
inc
imul
sbb
jnp
cmp
xor
lock
aad
addr16
jp
gs
dec
aaa
pop
mov
into
insl
push
ret
cmp
call
mov
pop
xor
sbbl
and
cmpsb
fldt
icebp
push
fcoml
loopne
xor
push
xchg
scas
pop
scas
test
lcall
sbb
xchg
fidivs
shrb
cwtl
mov
sub
mov
rcl
ljmp
jmp
dec
sub
cmpsb
aaa
insb
mov
dec
mov
in
fdivr
lcall
pop
adc
fisttpll
sbb
cmp
mov
mov
sbb
mov
jns
fistl
sbb
aas
pushf
test
in
add
add
jno
push
jp
pop
lret
fists
cld
mov
jmp
ret
jl
xchg
push
cwtl
insl
je
icebp
inc
pop
pusha
jmp
push
movsl
lock
es
sbb
fldl
ficomps
mov
add
les
inc
push
mov
dec
cmpsb
push
pop
cmp
xlat
lret
repnz
int3
lock
dec
or
movsb
adc
xor
mov
xchg
jae
mov
das
test
pop
vcvttss2si
xchg
cmpsb
xor
or
xchg
lret
jbe
sbb
add
ret
aas
je
sub
ljmp
lods
push
sub
test
testl
sub
jp
popf
mov
dec
adc
jg
cwtl
arpl
in
test
inc
push
ljmp
pop
divb
xchg
and
mov
pop
mov
dec
sub
call
mov
aad
test
lahf
fs
or
xchg
add
popf
or
and
aas
and
mov
sti
dec
cmpsl
xchg
inc
addl
mov
gs
add
fwait
cmp
hlt
shrl
jmp
adc
loop
in
cmp
dec
sbb
or
leave
js
cmpb
test
mov
movsb
fisubs
call
add
mov
nop
add
leave
mov
ds
icebp
mov
cmp
xor
push
or
add
nop
mov
cmp
lret
rolb
insb
fcoml
dec
jnp
xchg
or
inc
sub
mov
cmp
sub
cmpsl
clc
xchg
xchg
fldt
jge
or
add
jo
or
ret
fmulp
cli
dec
and
mov
aaa
stos
or
in
das
and
enter
add
rclb
sub
out
mov
sti
aas
adc
xchg
sub
ret
add
pushf
mov
cltd
outsl
stos
cs
cmp
mov
ret
pusha
mov
mov
adc
pop
inc
dec
jecxz
popf
outsl
cmpsl
aam
pusha
sub
scas
repz
std
mov
mov
xor
pop
inc
lds
jb
dec
sub
push
sbb
mov
mov
xor
aaa
or
mov
jnp
mov
iret
cld
fistl
ljmp
sti
movsb
xor
sbb
leave
out
cmp
shll
lcall
ror
lock
add
ss
mov
fcomip
jns
dec
mov
and
repnz
sahf
int3
fstpt
idiv
push
sti
mov
in
mov
xchg
mov
mov
adc
xchg
and
mov
shll
mov
bound
ret
insb
icebp
sub
fidivrs
adc
cmp
lcall
pop
dec
cmp
sahf
repnz
xorb
mov
push
and
add
mov
cmp
inc
lock
loope
rclb
adc
cs
add
in
ss
sbb
sbb
addr16
jb
out
mov
mov
and
cli
es
pusha
mov
mov
fcoml
mul
add
cwtl
lods
into
lea
repnz
inc
test
lahf
loop
mov
pop
test
lahf
fsubr
add
add
loope
jae
mov
js
mov
add
fwait
xchg
jns
dec
pusha
mov
and
pop
pop
cmpsl
and
mov
pop
inc
mov
cmp
aaa
divl
xchg
out
pusha
test
mov
adc
popa
cmc
scas
popf
push
fbld
cltd
inc
pop
testl
daa
into
mov
dec
xor
inc
leave
jno
test
pop
and
sti
inc
stos
mov
mov
fiaddl
fisttps
movsb
jle
sbb
imul
std
fldcw
mov
addb
aad
imulb
pop
mov
and
adc
dec
adc
xchg
xchg
dec
jns
mov
jmp
je
arpl
add
stc
lods
clc
icebp
sub
mov
sub
mov
pop
sti
jl
loopne
jns
sbb
nop
pop
add
rorb
mov
test
xor
movsl
in
add
inc
and
sbb
in
pop
sub
mov
imulb
push
fnstcw
rcr
pop
fiaddl
cwtl
ror
jp
cwtl
sbb
ret
mov
inc
add
cmp
fwait
cmp
sub
push
jmp
jnp
push
or
adc
mov
or
pop
jmp
jnp
js
xchg
inc
lock
push
xorl
loopne
or
cmp
insb
jae
fs
sbb
sub
mov
lahf
icebp
lahf
push
addr16
pop
cltd
dec
jnp
lea
pop
xchg
pop
daa
stc
mov
jae
and
push
jmp
xor
in
jp
and
jl
loop
push
dec
adc
push
jg
cmp
daa
inc
cmp
or
insl
fcmovne
pusha
test
mov
lock
sub
push
dec
notb
push
mov
lds
shl
pop
push
loopne
xchg
les
ds
mov
iret
imul
scas
jae
jg
outsb
ret
xchg
xor
or
loope
xor
mov
push
mov
arpl
adc
lods
dec
fnstcw
sarl
shl
int3
pop
das
cmp
arpl
xchg
sti
das
fdivrs
mov
lods
out
jns
and
jl
sub
std
jo
je
mov
scas
lods
lods
shll
mov
xchg
or
mov
scas
sbb
lods
xor
adc
cmp
faddl
mov
rorl
push
pop
adc
lahf
xchg
leave
in
push
das
add
jo
inc
out
cmc
and
xorb
icebp
movb
push
mov
rcll
ss
cmpsl
xchg
outsb
sbbl
mov
int3
in
add
int
push
dec
shlb
int3
push
add
jbe
out
jno
push
into
test
mov
push
shlb
sbb
lods
xchg
pop
fnstsw
loopne
adc
lock
int3
dec
testl
pop
ja
push
sbb
movsl
mov
xchg
outsl
jge
or
out
scas
icebp
adc
add
or
inc
movsb
adc
fldl
adc
inc
pop
daa
cld
mov
sub
xor
add
dec
gs
cwtl
lcall
pop
ja
mov
xchg
dec
into
dec
out
mov
push
stos
shrb
in
sti
xchg
or
xchg
jns
arpl
xor
or
pop
cwtl
lcall
add
aaa
xchg
adc
lds
push
lret
decl
push
fimuls
cmp
ds
test
adc
dec
out
jecxz
dec
or
mov
sbb
xor
xor
add
rcrb
cltd
fidivrs
orl
and
andl
out
cmp
adc
mov
mov
in
mov
incb
test
aas
clc
lods
adc
sub
test
or
inc
leave
or
nop
adc
xorl
les
scas
mov
mov
insb
arpl
or
out
scas
jns
or
stc
pop
das
cs
or
add
mov
sub
xor
xor
js
ljmp
or
jbe
push
sbb
pop
xchg
repnz
sub
pop
or
xlat
and
out
sub
imul
xor
push
aam
repnz
add
lods
out
sub
xor
xor
inc
mov
adc
jo
lcall
leave
mov
add
test
scas
push
push
aam
iret
in
pop
stos
mov
mov
js
fldl
pop
push
icebp
nop
pop
jbe
xchg
mov
push
fwait
mov
dec
imul
sub
pop
insb
mov
out
sbb
lret
fcompl
in
sbb
jnp
xorb
add
pop
repz
or
cmpsl
xor
or
mov
xor
bound
push
rol
syscall
je
xchg
dec
jle
aas
std
adc
adc
inc
jno
test
push
outsb
xor
imul
in
cmp
pop
xchg
mov
xchg
nop
sarb
lock
dec
out
xchg
aaa
test
jno
push
insb
xlat
idivb
add
dec
addr16
fcom
mov
in
mov
fdivs
mov
xchg
push
and
jne
dec
lods
test
pop
and
push
pop
mov
les
sarb
cwtl
mov
mov
shll
in
or
scas
sub
scas
js
sub
test
dec
or
imul
and
inc
lret
shr
jo
push
add
inc
lahf
ds
ds
aas
mov
movsb
pusha
cwtl
movsl
or
fidivs
or
int3
call
testl
loop
sub
dec
fcompl
hlt
leave
xorl
mov
jns
xor
das
out
jle
rorb
sti
in
lret
xor
out
jl
pop
mov
jb
mov
lods
into
mov
fmull
int3
out
xchg
aas
xor
mov
adc
dec
stos
sbb
inc
shll
jmp
cmp
ret
xchg
ret
lcall
xor
mov
mov
inc
sbbb
mov
out
enter
call
add
lods
test
mov
pop
sbb
jno
push
int
ret
jecxz
ljmp
loop
xchg
jmp
jo
icebp
lret
int3
gs
clc
jmp
out
xchg
push
mov
sub
fs
inc
scas
sub
xchg
hlt
xchg
fs
push
sub
rolb
in
mov
cmp
inc
mov
sub
adc
aam
jg
les
cld
lret
mov
mov
es
push
add
inc
imul
lret
jl
out
test
xor
pop
test
pop
fwait
ds
jns
mov
mov
sub
psubsb
cltd
xchg
fistpl
insb
jo
into
test
push
or
out
jns
stos
add
cmp
push
stos
cmp
loop
std
repnz
loopne
or
mov
xchg
jnp
scas
sbb
inc
and
or
std
ja
xchg
and
push
scas
in
jmp
mov
pop
lods
data16
popa
pop
fnsave
imul
inc
or
std
pop
lods
out
xor
sahf
jmp
sub
xor
mov
push
pushf
ror
lret
clc
and
fimull
xor
mov
inc
and
and
dec
inc
aad
out
fstpt
stos
sub
jg
push
lods
stos
divl
out
shll
lret
cmp
ljmp
push
and
sahf
mov
and
fsts
outsb
pop
popa
mov
repz
push
out
adc
out
nop
jbe
stos
add
sbb
nop
jg
jmp
fcoml
shll
fnstcw
pop
test
pop
cmpl
xchg
jne
clc
pop
enter
pop
and
lcall
loope
int3
dec
ret
mov
fwait
push
in
clc
insb
repnz
lahf
push
cmc
insb
mov
aad
cltd
repnz
sbb
imul
fcomip
lods
out
icebp
cwtl
fists
ret
notb
in
and
xchg
mov
fisubrs
dec
les
xchg
jo
mov
mov
loope
scas
incl
negb
xchg
sub
bound
xor
cmp
out
cs
sub
into
mov
out
out
in
and
jb
fisubrs
cmpsb
fxch
push
fsubs
mov
pusha
test
inc
je
lcall
pop
fimull
popf
inc
or
jl
pop
adc
fiadds
cwtl
adc
sar
lock
sahf
test
loopne
incb
aad
nop
in
loope
or
addr16
fstps
jo
sbb
and
fstps
xchg
lds
aam
mov
inc
test
sub
push
sub
popf
xorl
dec
mov
inc
inc
jge
cmp
fiaddl
jl
out
cmp
dec
dec
pushf
call
lods
addl
push
cwtl
mov
push
pop
insb
cmp
add
daa
out
pop
and
fdivrs
xlat
out
xchg
pop
incb
push
pop
je
sbb
cwtl
stc
mov
sbb
jne
add
das
or
test
dec
fstp
ret
or
xor
dec
fldcw
adc
clc
xor
mov
sbb
outsb
fstpt
jg
sahf
jnp
jecxz
jbe
test
in
cmpsl
dec
stc
jo
pop
push
addr16
cmpsl
xor
data16
mov
sub
mov
out
mov
fdivp
inc
push
rolb
repz
lahf
int
cli
out
test
mov
dec
push
jge
rolb
jmp
push
rcll
push
idivb
adc
xor
adc
inc
imul
movsl
repnz
dec
in
orl
dec
lahf
loope
mov
push
sbb
jecxz
or
ficomps
mov
jmp
and
mov
inc
aas
aam
pop
push
mov
xor
ja
push
jp
lret
or
roll
mov
dec
loope
push
dec
scas
iret
in
out
scas
or
inc
loope
or
in
inc
adc
outsl
addr16
and
mov
pusha
cmp
mov
push
and
xchg
stc
jp
inc
sbb
repnz
insl
aas
add
dec
es
mov
rolb
cli
imul
push
sub
clc
or
mov
mov
inc
dec
push
es
js
scas
sahf
scas
addr16
repz
clc
mov
mov
fnstenv
out
sbb
cmp
shlb
imul
sbb
or
cmp
pop
cs
push
inc
shr
std
cmp
add
sub
mov
mov
pop
push
jno
pushw
decl
dec
push
arpl
push
jle
popa
out
clc
nop
pop
je
sub
in
sbb
sub
mov
scas
xchg
rorl
xchg
leave
std
add
lahf
and
adc
je
adc
xchg
loope
aaa
or
mov
cltd
sbb
iret
push
fcoml
and
dec
icebp
dec
jne
cltd
daa
dec
pop
and
dec
jno
fs
adc
pop
je
lcall
pop
mov
roll
add
adc
cmp
or
test
cmp
pop
mov
mov
and
add
push
sti
mov
repz
dec
mov
decb
xchg
mov
nop
sub
call
je
flds
mov
cmp
in
repz
mov
mov
negb
insb
rorl
adc
sub
push
add
xchg
jb
ret
adcl
or
cmp
cmp
loop
lods
lahf
cmp
xchg
xchg
xor
lea
scas
fsubs
pop
insl
sub
ret
dec
mov
out
push
insb
inc
inc
call
push
xor
pop
test
mov
mov
mov
jp
push
clgi
jle
mov
xor
inc
scas
data16
push
inc
loop
inc
test
les
add
xor
xchg
inc
dec
sbb
jnp
dec
ret
push
xorb
mov
pop
sbb
gs
in
add
lahf
out
push
fisttpll
shrb
or
popf
push
xchg
cld
clc
pop
dec
jae
inc
cwtl
jae
pop
sub
dec
jns
es
dec
fisubrs
pop
adc
aaa
xlat
jge
xchg
dec
sbb
sbb
sahf
daa
in
dec
inc
ljmp
leave
mov
roll
test
ret
rorl
sub
inc
cmp
leave
cmp
ficoms
imul
aam
sub
testl
cmp
push
xchg
sbb
inc
sub
loop
clc
jb
mov
insb
sbbl
pop
cmp
dec
cmc
mov
cmpsb
xchg
lea
imulb
sub
jle
and
lahf
daa
repz
aaa
cmp
mov
fnstsw
dec
ja
call
mov
push
popa
and
pusha
ret
loopne
out
stos
cmc
adc
andl
sbb
neg
mov
leave
cmp
daa
jle
outsl
dec
inc
mov
into
iret
pop
push
pusha
xlat
push
jge
rcr
cmp
dec
sub
xor
dec
imul
or
mov
mov
mov
ffree
mov
xor
test
out
jp
add
or
and
aam
sub
inc
addb
pop
adc
repz
xchg
ljmp
cmp
add
mov
imul
inc
lahf
aad
sub
testb
or
call
xchg
aas
in
dec
in
loop
jmp
aam
hlt
adc
and
addr16
cli
mov
pop
enter
jecxz
add
sbb
sbbl
lds
mov
pop
loop
aas
inc
lcall
adc
in
push
ret
inc
or
xchg
push
and
xchg
std
mov
ret
xor
mov
adc
push
fstl
inc
lahf
sarl
pop
cli
dec
fucom
xor
inc
mov
ret
lahf
xchg
nop
jbe
adc
loopne
mov
pop
lds
movsb
push
fisubrl
or
pop
arpl
sub
inc
xchg
addl
inc
push
ds
lcall
xchg
and
call
clc
push
lret
dec
arpl
out
rorl
data16
sub
ret
in
nop
jbe
fidivrl
sbb
cld
aas
insb
push
out
std
sbb
dec
xor
and
xchg
and
orl
repnz
test
into
and
arpl
lret
jp
jmp
aad
in
cwtl
pop
mov
adc
fsubrl
pop
stc
xchg
mov
cwtl
mov
and
cmp
lods
aaa
pop
mov
aaa
push
jae
mov
xor
push
in
stos
std
divl
loope
mov
mov
xchg
cmpsl
pusha
push
pop
mov
sub
jnp
shrb
mov
ja
mov
clc
fimull
aaa
mov
ds
fisttpl
iret
inc
pushf
gs
or
fbstp
les
ficomps
sub
sbb
mov
test
mov
in
into
lds
mov
mov
stc
and
aaa
mov
dec
hlt
popa
repz
pop
jl
lock
ds
ud1
stos
or
pop
jae
mov
fwait
push
jg
cmp
sbb
lahf
cmp
and
lret
adc
imul
xor
inc
push
int
dec
loop
aam
jge
push
adc
pop
lret
inc
jns,pn
sub
push
push
inc
int
or
mov
sub
add
cmp
mov
or
sub
mov
jno
cmp
fcmove
and
incb
adc
mov
clc
mov
adc
xor
push
daa
xor
jle
dec
mov
jg
jnp
arpl
stc
pop
test
scas
mov
push
lock
push
or
pop
and
daa
mov
shlb
cmp
and
inc
nop
out
mov
ficompl
mov
pop
pop
xor
fsubrl
dec
push
in
xorl
ss
in
pushf
in
stos
cmp
std
mov
pop
mov
add
jge
pop
inc
in
addl
dec
dec
push
stos
push
jl
cmpsl
fmull
mov
and
xchg
lock
rorl
or
fwait
xor
and
sti
sub
jne
push
les
popa
mov
stc
insb
mov
sti
push
daa
adc
xchg
sub
push
out
pop
cmc
push
sub
cmp
add
sbb
and
dec
aas
ret
mov
or
out
dec
or
popa
mov
pop
cmp
push
test
mov
loopne
jne
rcr
push
pop
test
ret
dec
and
cmpsl
sub
xchg
jmp
mov
jge
jb
add
xchg
mov
aaa
adc
and
push
xchg
stc
inc
xchg
aam
out
and
and
inc
inc
stos
cmpsl
or
add
lods
sahf
ret
xor
fstps
sub
test
movsl
jno
sub
mov
lret
mov
mov
test
mov
mov
push
cwtl
cmp
push
sbb
pop
add
in
pushf
les
adc
idivl
jno
dec
ja
sbbl
xchg
mov
mov
push
ret
rorb
xor
test
push
pop
add
mov
mov
lret
outsb
fadd
mov
mov
mov
xchg
mov
or
pop
and
ljmp
or
and
mov
cmp
adc
inc
push
cmc
mov
add
imulb
shrb
sub
pop
pop
pop
xor
jb
push
imull
add
testb
and
fwait
mov
mov
mov
push
ret
and
and
repz
loop
testl
lret
xchg
sub
addl
sbb
xchg
xlat
dec
ret
popa
jb,pn
es
push
xchg
push
aad
push
fnstcw
outsl
adc
adc
xor
lods
dec
sub
aam
js,pt
nopl
iret
out
sub
outsb
xor
dec
mov
aaa
adc
inc
lcall
insb
mov
ds
ljmp
dec
je
pop
fsubl
pop
mov
aaa
cmp
jl
add
mov
in
ja
push
pop
fimull
or
out
push
inc
and
daa
nop
adc
fdivr
out
subl
xlat
xchg
mov
or
adc
fbld
fcmovnbe
cmp
mov
jp
or
xlat
mov
in
cmp
nop
mov
negl
pop
adc
ljmp
aas
fwait
push
or
mov
aam
pop
jecxz
ds
shrb
xchg
or
pop
push
xchg
sub
jp
xor
gs
cmc
in
aad
shrb
xor
jecxz
aad
sub
repnz
xchg
sti
jecxz
outsl
and
cmp
clc
cld
std
pop
test
ja
stos
and
add
das
add
add
fsts
out
xor
loope
xor
dec
das
push
mov
call
add
or
and
cltd
fldt
rcrb
repz
inc
mov
sub
mov
mov
sbb
pop
fiadds
popl
jp
cmp
fwait
mov
lret
repz
xchg
pop
les
jp
and
jno
aas
sbb
cmp
and
das
shlb
inc
and
lahf
mov
mov
mov
or
imul
cs
or
je
dec
ss
jmp
mov
adc
stos
sbb
aam
hlt
push
lods
pop
push
and
cmp
rorb
or
iret
out
push
pop
cmp
bound
pop
mov
xchg
scas
test
das
inc
test
mov
nop
inc
sti
loope
push
cwtl
and
loope
lret
sbb
scas
out
popf
fimull
pop
push
imul
push
or
xchg
shl
lret
xchg
pop
subb
test
outsl
sbb
loop
notl
mov
test
and
ja
or
inc
cmp
pop
cmp
add
sub
mov
ficoms
xchg
scas
mov
mov
int
sbb
int3
cwtl
sti
mov
jo
cwtl
push
lret
ret
daa
xadd
repnz
lods
push
dec
adc
je
cmpb
mov
push
mov
push
into
loopne
push
scas
rorb
icebp
xlat
icebp
test
into
push
test
push
or
stc
aaa
inc
jge
cmp
push
pop
mov
data16
sub
das
mov
mov
add
test
scas
repnz
mov
fldt
xor
dec
xor
stos
and
mov
lret
pop
push
push
jge
xor
add
out
add
mov
movsb
lea
movsb
inc
adc
and
push
rcrl
jl
sub
rcrb
sbb
sbb
mov
push
xchg
pop
adc
mov
inc
inc
outsl
insl
and
pop
filds
std
cmpsl
jns
call
leave
cmp
aad
xor
adc
pop
bound
adc
pushf
jnp
cmp
repnz
rep
add
push
inc
cwtl
pop
mov
xchg
ret
mulb
sub
daa
call
je
movsb
cmpsb
xchg
ds
test
mov
adc
ret
push
rolb
mov
andl
mov
aaa
aam
cmp
jecxz
adc
dec
mov
dec
mov
dec
sbbb
ja
push
jnp
stos
fisttpll
or
sahf
gs
fistpl
out
std
add
dec
inc
das
out
push
xchg
mov
sti
push
lods
into
pop
int3
lret
push
pusha
xor
mov
xchg
cmc
lea
popa
add
pop
jb
movsl
mov
arpl
xor
jecxz
xor
or
lcall
cs
xor
add
in
repz
mov
outsl
ret
fyl2x
lea
jg
neg
fstpl
orb
outsb
dec
out
adc
dec
mov
jp
inc
stos
adc
outsl
loop
js
in
ret
out
xor
scas
adc
aad
mov
or
adc
mov
out
and
rcrb
mov
and
sbb
push
pop
sbb
adc
mov
xor
push
aas
push
lahf
adc
push
jmp
nop
mov
sub
sbb
mov
xchg
push
inc
int
inc
cmp
scas
or
lock
test
fs
es
rorb
iret
push
enter
jg
pop
repz
outsb
push
jmp
loope
jge
cmp
popa
out
fs
jbe
fisubrs
jle
cmpsb
ficomps
shrl
scas
loop
inc
adc
aas
add
scas
xchg
mov
add
pusha
and
mov
lcall
cmp
adcl
mov
pop
arpl
cmp
aad
roll
cmp
gs
inc
cli
imul
popf
pop
pop
jge
mov
stos
mov
and
leave
mov
mul
jns
sahf
jle
mov
sub
dec
sbb
sbb
inc
or
lods
mov
fistps
mov
xchg
stc
adc
fs
lds
xchg
shll
imul
lea
and
cltd
loope
jne
mov
outsb
mov
xor
sti
test
push
lea
xlat
jnp
sub
or
in
and
das
xor
in
stc
into
sbb
fnstsw
mov
mov
cmpsb
inc
fs
cmpsl
and
xchg
dec
sub
jb
pop
push
test
xchg
mov
cmc
or
lret
sbb
fsubrs
frstor
xor
sbb
shrb
lret
inc
and
movsl
sub
lds
adc
cmpsl
cltd
push
push
add
mov
dec
sub
cwtl
jae
popf
push
test
cmc
xor
mov
fwait
inc
jno
outsl
rcll
fs
cli
out
mov
loopne
pop
dec
push
addr16
loope
not
sti
jmp
or
addr16
or
insb
push
sbb
test
cmp
add
xchg
cmp
mov
pop
mov
mov
pop
dec
lods
xchg
sbb
cmp
inc
xor
jne
push
xchg
jo
push
ret
dec
jb
ret
cld
stos
loop
cmpsl
sub
icebp
cs
pusha
jns
les
aas
mov
mov
mov
cmp
jnp,pn
mov
cmova
sbb
ljmp
mov
out
add
in
adc
daa
lea
cmp
xchg
cmp
dec
ja
out
push
and
dec
sbb
or
or
dec
fiadds
cmp
or
mov
lods
call
in
push
movsb
cmp
xchg
mov
lods
in
mov
lahf
lahf
jmp
hlt
mov
mov
push
popa
les
or
xor
in
cmp
add
inc
xlat
sbb
lret
imul
and
cwtl
aam
mov
rorl
sahf
fdivs
jno
push
fdivrs
cmp
mov
inc
and
sub
call
adc
mov
jnp
cmp
lods
arpl
dec
adc
stc
outsb
mov
push
xor
jl
loop
loopne
fadds
xchg
scas
popf
dec
lods
push
xor
mov
movsb
clc
or
es
cmpsl
pop
std
lea
subl
fs
jl
pop
mov
sub
lock
xchg
mov
dec
pop
das
push
negb
adc
xor
xchg
or
inc
imul
cmp
dec
sub
push
push
test
filds
mov
sub
jp
add
enter
push
stos
in
xchg
push
jecxz
fdivl
insl
bound
dec
imul
ret
aam
ja
fwait
push
lret
stos
pop
mov
outsl
cmp
xor
ficoms
sbbb
push
dec
dec
jne
mov
or
aam
mov
dec
cli
movsb
mov
mov
rcll
lea
inc
mov
cs
dec
jmp
cmp
out
fldl
sub
in
lahf
ja
pop
xchg
pop
fcmovnu
adcl
xor
clc
fmul
dec
pop
fisubrl
xlat
xchg
in
jae
xor
insl
xlat
lret
call
mov
lds
addb
lret
inc
cli
add
cwtl
dec
add
inc
xchg
std
sbb
jge
mov
inc
daa
ret
cmp
mov
lcall
loope
or
call
mov
pop
clc
xchg
ret
loope
or
cwtl
popa
mov
pop
lods
clc
outsl
into
rcrl
sbb
js
nop
xor
pop
cmpsb
push
xor
rcll
test
xor
mov
mov
pop
or
xor
cs
sbb
fbstp
fstps
sub
inc
leave
mov
std
je
mov
push
fbld
insl
aaa
repnz
mov
inc
and
outsl
roll
insl
adc
fistpl
lods
xor
hlt
fistpll
sti
pop
push
jle
imul
cmp
ror
lea
pop
mov
add
lds
test
data16
lea
ds
pushf
mov
test
stos
in
pop
lahf
cmpsb
hlt
jno
repz
adcl
sub
mov
sub
mov
cmp
test
push
outsl
ljmp
cmp
lahf
daa
daa
or
and
pop
mov
xchg
xchg
and
adc
mov
add
mov
jge
cli
pop
dec
in
sbb
lcall
mov
imul
lea
push
xor
dec
sub
adc
push
sahf
jmp
jmp
cmc
aas
fldt
out
jmp
xor
pop
test
pop
inc
xlat
addl
and
xchg
sub
push
fldenv
push
outsl
adc
sbb
jg
rclb
xchg
int
out
and
movsl
lock
in
scas
mov
frstor
mov
jno
xchg
sub
dec
mov
mov
enter
out
popa
adc
mov
add
mov
adc
mov
sub
dec
and
outsl
imul
and
xchg
sbb
data16
inc
xlat
mov
fldcw
push
fildl
fs
scas
inc
cwtl
push
mov
mov
pop
mov
dec
sbb
dec
ret
jbe
aaa
jnp
cwtl
push
cli
iret
xchg
dec
sbb
mov
inc
mov
jbe
fisubrl
adc
adc
pop
xor
cmp
ja
out
mov
in
movsb
test
mov
cwtl
inc
sub
jne
stos
mov
out
in
dec
jle
jecxz
mov
mov
inc
shlb
jle
cmc
sbb
imul
in
mov
dec
test
pusha
push
mov
stos
dec
repz
cmpsl
stos
and
dec
sbb
daa
inc
jg
mov
sub
out
outsb
xor
cwtl
pop
jbe
cmp
lods
pop
add
loopne
dec
mov
xchg
clc
imul
mov
cmp
ret
add
and
nop
inc
arpl
mov
and
xor
jae
adc
push
jle
and
fnsave
lock
pop
inc
ret
dec
in
enter
cmp
and
inc
addr16
xor
popa
jmp
stos
test
and
mov
mov
shlb
outsl
out
cmp
jbe
js
inc
and
outsl
inc
mov
out
lea
adcb
dec
cltd
imul
jle
jle
mov
ret
bswap
cli
dec
inc
lret
jl
xchg
mov
pop
adc
and
insb
cmp
ss
and
rclb
or
xor
jge
ret
enter
cs
cwtl
jle
rcrb
jle
cli
sub
insl
out
cmc
push
insl
or
inc
addb
dec
mov
pop
sbb
add
xchg
mov
pop
mov
das
jo
adc
addr16
lea
and
or
sub
sbb
adc
outsb
cwtl
je
sbb
test
jns
or
jg
icebp
testb
sub
xchg
fdivrs
ficompl
jge
mov
xchg
stos
aam
aaa
pop
insl
push
bound
xchg
inc
fwait
cmpsb
sub
std
mov
mov
in
test
dec
loopne
add
xchg
in
imul
cld
das
nop
movsl
bsr
jo
std
outsb
jl
push
or
gs
cs
movsl
mov
pop
sub
jnp
std
inc
add
std
jno
dec
or
mov
fisttpl
cs
loope
jbe
adcb
test
jmp
jbe
fstp
scas
fildll
sahf
dec
std
pop
and
in
or
notb
movsl
mov
insl
ljmp
pop
ficompl
inc
std
and
popf
movsl
bound
jae
rcr
pop
test
push
xorl
test
aam
jmp
and
push
test
mov
popa
jle
bound
pop
mov
dec
mov
mov
movsl
notb
add
addl
lahf
push
into
adc
in
inc
into
sahf
dec
xlat
lahf
or
inc
xchg
mov
arpl
imul
fsubs
or
mov
jnp
out
mov
js
mov
pop
cmp
pop
pop
lock
daa
fdivp
cwtl
lods
imul
jb
xchg
push
sbb
sbb
cmp
cli
dec
testb
push
notl
andb
cmp
dec
add
jo
inc
push
mov
out
lret
loopne
adc
popa
or
xor
or
les
jae
test
jns
jle
push
xlat
xor
xchg
sbb
dec
lcall
mov
jne
movb
adc
mov
inc
lds
inc
fistps
into
jmp
xor
lock
cwtl
sahf
js
sub
dec
xchg
xchg
stc
clc
or
sub
ret
pop
ror
jb
dec
outsl
mov
nop
test
sbb
and
inc
adc
adc
aam
loop
adcb
ja
rcll
orl
jae
mov
pop
jb
inc
sub
sbb
inc
mov
mov
jnp
test
jecxz
or
pushf
add
pushf
adc
mov
hlt
dec
sti
enter
pop
imull
or
fld
fdivl
ljmp
shrl
test
dec
orl
sahf
sbb
sbb
ds
pop
jmp
mov
loopne
shrb
mov
mov
add
pop
stc
test
jne
xchg
mov
push
cltd
outsb
dec
cmp
aad
sub
inc
rclb
fnstenv
pop
lock
inc
add
sub
rcrl
mov
rolb
or
jno
fldcw
repnz
sbb
inc
add
mov
cmp
notl
jle
ljmp
xchg
push
push
aaa
xor
mov
xchg
xchg
mov
pushw
mov
cmp
or
or
push
pop
jmp
and
rep
xor
dec
ret
dec
xor
int3
sub
ljmp
icebp
mulb
push
dec
push
loopne
inc
pop
jno
xchg
and
jecxz
and
das
jmp
in
xor
test
cmp
push
pop
outsb
dec
jb
stos
popl
int3
push
xor
push
divl
push
scas
add
mov
pop
xchg
out
in
xor
subl
and
sub
inc
inc
add
jb
sub
xchg
add
and
fimuls
mov
mov
push
enter
aad
push
dec
pop
push
repnz
inc
leave
mov
pop
pop
cmpl
lret
dec
cmp
add
je
push
sub
shll
mov
ret
lea
mov
sbb
and
scas
xcrypt-ecb
cmpsl
push
pop
inc
push
adc
mov
fisttpl
dec
cld
dec
adc
mov
les
xchg
stos
jg
cmp
mov
test
push
cmpsb
iret
pusha
testl
lret
repnz
sarb
mov
dec
lahf
insl
repnz
pusha
xchg
add
test
pop
lahf
rorb
xchg
add
lods
subl
movsb
psllq
lahf
sbb
fbld
jno
pop
movsl
push
sbb
mov
iret
cltd
and
gs
idivb
js
and
hlt
and
mov
outsl
cmp
std
mov
aas
stos
add
aas
and
aas
cmp
cmc
and
stos
int3
and
outsl
enter
push
outsb
sbb
cmc
push
mov
push
lds
xchg
out
lret
mov
imul
xor
xchg
sbb
pop
sahf
lods
xchg
pop
inc
mov
push
sub
les
es
in
jae
add
mov
mov
pop
dec
sub
cmpsw
dec
and
adc
hlt
out
iret
nop
loope
xor
and
xor
cmc
ret
jmp
xlat
lds
rorl
mov
rolb
mov
xchg
inc
stc
arpl
mov
dec
int
xchg
push
jg
std
movsb
mov
pop
cld
cli
shll
sub
adc
in
xchg
cs
movsb
ljmp
icebp
nop
or
add
pusha
outsb
jae
popa
icebp
inc
sub
addl
popa
adc
inc
jno
jnp
cli
cwtl
xchg
stos
jb
jp
mov
add
push
sbb
icebp
mov
jb
sub
or
xor
lahf
dec
mov
popf
sbb
repnz
inc
push
mov
push
std
inc
lret
push
sbb
insb
xor
out
ss
arpl
jno
xchg
dec
and
xor
movsl
sti
xor
adc
cmp
insl
jnp
stos
mov
xchg
jb
lea
xchg
jo
inc
sti
mov
push
cwtl
shl
repnz
out
fwait
inc
fwait
outsl
sar
push
ret
lods
add
je
dec
mov
and
cmpsl
test
dec
orb
sub
cmp
sbb
fnsave
pushf
imul
cmc
mov
cld
rorl
jb
str
mov
rcrb
cmp
inc
mov
xchg
and
nop
test
cmp
xchg
arpl
push
sub
push
das
inc
sub
les
pushf
adc
out
cmp
jmp
mov
pop
and
fsubrl
rolb
icebp
fcmovnu
jo
lcall
jne
ret
sub
test
not
mov
pop
pop
or
aam
adc
add
xchg
mov
orl
mov
jl
jg
popa
scas
mov
and
mov
lods
push
test
ret
loop
pop
testl
push
xor
call
lds
repz
mov
jp
or
and
mov
popa
push
jae
mov
push
cmpsb
pusha
push
xor
shrb
or
jb
sbb
orl
pushf
and
repz
mov
mov
in
in
sti
or
sahf
aam
cwtl
xchg
cmpsl
movsl
test
fstpt
loope
cmp
sahf
jp
loope
mov
les
xor
insl
call
adc
cwtl
or
test
mov
mov
adc
pop
mov
in
mov
xorb
ror
ljmp
jge
aaa
push
mov
mov
mov
jp
in
mov
fdiv
mov
out
pop
xor
popf
loopne
and
movsl
cmp
cmc
or
add
enter
mov
xchg
xlat
jns
lock
xor
push
iret
subb
loopne
fidivrl
loope
in
pop
mov
xor
jl
inc
fwait
leave
inc
cmpb
inc
mov
je
sub
fiadds
mov
or
pop
xchg
mov
jg
aas
jne
ss
outsb
pusha
sub
xchg
out
outsb
mov
xchg
loop
xchg
rcl
inc
fs
inc
cmp
xchg
ret
movl
jne
push
addr16
ja
cli
and
repz
jae
sub
insb
mov
xchg
lods
and
call
pop
sahf
push
dec
repz
aad
push
lock
add
mov
xlat
inc
jno
mov
std
popf
mov
pop
mov
push
lods
sar
data16
loope
imul
or
repnz
jno
popf
imul
pushf
test
inc
mov
dec
jns
in
leave
cmc
and
mov
lods
cltd
outsl
sbb
insb
fbld
jmp
xor
popf
lea
inc
inc
jl
sub
push
iret
popf
stc
pop
pcmpeqw
movsb
lods
aad
movsl
sbb
jnp
bnd
std
out
dec
mov
aaa
sub
imull
fiadds
in
pop
sbb
and
jb
stc
les
add
or
cmp
in
adc
push
xchg
adc
add
pop
or
xchg
push
mov
test
arpl
pop
daa
in
dec
xlat
rcrl
int3
push
leave
test
xchg
cmc
lea
inc
mov
xor
icebp
sub
loopne
sbbb
adc
cmp
add
stc
pop
jb
adc
stos
in
mov
mov
dec
inc
ja
popf
and
in
mov
ret
ss
ljmp
adc
bound
inc
adc
das
pop
jo
adc
cld
mov
fs
sbb
imul
add
jg
test
sbb
or
dec
test
mov
mov
btc
outsl
std
jbe
fsub
mov
push
es
testb
mov
fstl
xor
cmp
imul
push
xchg
sub
gs
mov
xchg
mov
xorl
pop
or
fs
movsb
mov
mov
in
adc
ficoml
xchg
imulb
dec
jl
imul
sub
subl
cmp
or
mov
cmp
mov
push
sub
pop
adc
idivl
adc
fs
jne
push
test
test
or
inc
mov
pop
pop
mov
outsb
mov
pushf
imul
outsl
test
pop
daa
and
sbb
xchg
gs
mov
mov
lcall
out
and
and
pop
push
xchg
ljmp
sub
int
stc
or
dec
push
xor
cs
sbb
leave
mov
je
cmp
aas
pop
sub
clc
pop
cmp
fcoms
xor
xchg
or
dec
pop
pop
icebp
fs
les
add
xor
jg
fnsave
jnp
adc
les
xchg
mov
mov
pop
ficoml
imul
mov
mov
fidivrl
inc
push
mov
jne
xor
add
dec
cmp
xchg
xor
bound
cwtl
in
inc
aad
jl
pop
int
push
test
dec
dec
cmpsl
int
call
pop
push
test
iret
or
or
jnp
lods
mov
sub
js
jb
push
sbb
inc
mov
add
loopne
fistl
stc
addl
sbb
jecxz
loop
enter
pop
add
inc
fsubs
fcompl
mov
jnp
loop
add
adc
jo
aam
dec
and
mov
adc
xor
incb
dec
cmc
xchg
fs
sbb
cmp
and
sub
jp
pusha
sarl
pop
push
adc
adc
lea
push
push
test
mov
ret
stos
int3
out
push
or
test
inc
stc
cmpsl
aaa
mov
jg
xor
bound
jnp
ss
mov
add
cmp
inc
add
or
add
ljmp
cmp
jecxz
rcr
inc
jg
fs
add
lret
xchg
incl
aaa
adc
inc
inc
add
cmp
jno
lock
std
addr16
sahf
addb
cmpsb
cmp
sub
cli
mov
push
dec
loop
or
mov
je
jbe
lods
jne
add
outsb
ds
rorl
mov
ljmp
xor
xchg
cwtl
fadds
cmp
pushf
scas
out
pop
inc
in
mov
bound
lods
push
ret
lcall
inc
cmp
stos
dec
cld
pop
leave
les
mov
out
call
ret
and
dec
mov
rclb
imul
js
cmp
sub
imul
out
mov
mov
and
shll
push
int
pop
sbbl
xchg
lods
adc
xchg
mov
jle
hlt
add
int
push
lods
loope
dec
popf
sub
lods
mov
cmp
and
push
in
xchg
mov
mov
es
jae
repz
sti
gs
cmp
xor
aas
iret
mov
xchg
fcoml
mov
jno
dec
icebp
or
jbe
out
addb
dec
int3
fsubl
test
mov
mov
mov
clc
pushf
adc
gs
scas
enter
pop
lahf
ja
add
adc
fistps
lea
fwait
pusha
mov
jmp
movsl
es
jg
xor
aaa
rorl
out
push
inc
test
or
cmp
add
fs
insl
shlb
pop
mov
mov
push
clc
mov
pop
out
jne
je
adc
push
arpl
rcl
pusha
ja
das
sahf
in
cmp
add
push
mov
sbbl
roll
repnz
inc
call
inc
xlat
andl
nop
jae
pop
pop
mov
out
pop
lods
hlt
dec
push
out
in
insl
and
push
loop
lock
push
out
pop
xor
dec
sbb
and
mov
fcmovnu
pop
neg
fdivs
roll
shr
lcall
add
enter
xor
push
or
lret
inc
bound
cmp
sbb
bound
adc
popa
scas
scas
ljmp
out
arpl
fst
sub
sbb
xchg
cmp
or
push
push
fs
lret
adc
sbb
test
stos
loope
dec
xchg
sub
outsb
movsb
lcall
pop
jp
fiadds
mov
mov
cltd
jge
fistpl
scas
insb
add
mul
cmp
adcb
enter
js
push
pop
scas
std
iret
adc
movl
popa
test
fnstsw
in
mov
lods
pushf
in
cmpsl
out
insl
movsl
jne
icebp
mov
sti
ja
ss
or
xor
movzbl
cmc
out
lods
ficoml
xor
mov
decb
bound
inc
out
test
mov
cmp
mov
fldl
mov
sub
mov
mov
loopne
fs
xor
push
cmp
shrl
rolb
xor
mov
test
inc
inc
fsubl
inc
jge
lret
cli
lahf
cltd
stos
jp
mov
and
jne
js
cmc
and
mov
pop
adc
dec
jecxz
adc
es
scas
adc
jl
add
xchg
jmp
mov
pushf
shll
incb
jp
and
pop
pop
hlt
or
movsl
cmp
mov
and
push
jge
xchg
repnz
or
pop
jnp
popa
insb
sub
pop
push
popa
mov
iret
push
cmp
sub
in
pushf
in
push
fwait
movsb
jle
pop
fimuls
and
pop
push
xor
xor
fists
mov
inc
mov
adc
out
jmp
shlb
lds
jae
rorb
out
mov
scas
imul
aad
in
lods
in
cmp
std
jp,pn
lds
ds
mov
mov
push
lods
fcmovne
rorl
push
stos
xchg
sti
int3
fistpl
cld
sub
jg
cmpsl
shl
push
inc
push
sbb
fwait
or
aaa
aad
arpl
daa
mov
mov
mov
int
in
stc
xchg
pop
cmpsl
cmc
cwtl
mov
fsubr
push
popa
jbe
leave
movsl
pop
loopne
mov
out
aam
arpl
sbb
add
es
mov
loope
xorl
mov
outsb
jg
stos
and
fsubr
xchg
outsb
data16
dec
shl
cmpsl
cmp
xchg
cmc
jecxz
nop
cli
cmp
shll
shl
sti
ljmp
neg
hlt
loop
and
dec
sti
add
movsb
mov
ret
das
sbb
xchg
adc
addr16
push
decl
cmp
and
push
ljmp
pop
popf
fs
movsl
push
fmull
jbe
into
andb
lcall
movsl
mov
jo
lods
jle
inc
out
mov
jne
cmpsb
push
mov
aaa
dec
aad
xchg
cmp
xor
stos
sbb
pop
jns
jns
sbb
stc
xchg
cmp
lds
bound
add
pop
dec
imul
adc
fisttpl
add
fdivr
adc
pop
subl
jecxz
or
adc
pop
lahf
cmp
repnz
jle
movsb
shll
std
adc
sub
lds
fs
js
insl
jbe
pushf
xchg
cli
iret
fs
sbb
lea
jge
sub
sub
cmpsb
leave
jl
outsb
lcall
pop
movsl
mov
cld
push
pusha
inc
dec
xlat
adc
add
sbb
jnp
jo
cli
loope
mov
rorl
jmp
icebp
cmpb
adc
in
fstl
or
jnp
leave
xchg
test
shl
pop
pop
aad
xor
data16
cmp
into
loopne
dec
cmc
inc
movsl
mov
inc
repz
cmp
in
ret
divb
and
mov
dec
nop
xchg
in
fwait
pusha
adcl
xor
gs
lcall
mov
xor
popf
lret
inc
int
test
roll
push
and
outsl
add
int3
cmpl
mov
mov
movsb
cs
sbb
leave
out
sub
out
subb
aaa
xor
test
and
jg
add
adc
xor
mov
sbb
int3
xchg
loope
lods
call
lds
outsl
loope
sbb
lea
xchg
xchg
sbb
ret
repnz
jmp
inc
adc
adc
imul
pushf
loope
and
and
fsubrl
jnp
mov
pop
pmuludq
cmp
movsl
je
push
mov
and
mov
sub
ss
sbb
or
sbb
sarl
popa
adc
pop
xor
xor
xchg
cmpsl
das
daa
add
dec
ja
sub
sub
jecxz
push
jge
pop
sbb
cmpsb
fcoms
xchg
test
fwait
mov
sbb
int3
pop
ficoms
lods
xor
mov
and
inc
pushl
loopne
inc
and
daa
ljmp
jmp
inc
jae
sub
iret
add
push
xor
push
jns
repnz
add
or
jmp
cmpl
loope
aam
mov
outsl
dec
clc
ss
mov
mov
loope
sahf
mov
cmp
add
lods
push
lds
and
xchg
outsb
leave
xchg
pop
pop
push
filds
pop
inc
lock
pop
or
lcall
push
ljmp
sub
lret
sub
fists
xchg
cmp
out
fs
xor
rcrl
pusha
sub
pop
test
addr16
repnz
pop
ffreep
mov
mov
repz
fwait
mov
push
fldcw
fdivp
sub
repz
lds
rcl
mov
adc
mov
rcll
stos
in
fsts
push
out
hlt
mov
int3
xor
loope
aaa
movsl
mov
cmpsb
mov
pop
in
xor
xchg
sbb
in
dec
es
jbe
stc
jecxz
mov
test
call
mov
mov
in
or
push
xchg
repz
addr16
outsl
lcall
xchg
xchg
ss
add
ds
fucomp
xchg
gs
je
adc
inc
outsl
repz
outsl
mov
sbbl
add
or
mov
jns
cmp
cwtl
enter
adc
or
sbb
sbb
inc
hlt
fst
fbstp
xchg
or
inc
stos
add
mov
insb
das
je
jno
jp
in
push
in
sbb
push
mov
popf
mov
mov
pop
pop
cmp
cmp
sub
push
add
je
out
notb
cmc
fdivr
mov
or
cltd
insb
push
pop
fstl
xor
add
loopne
mov
and
in
mov
mov
shll
shlb
movsl
test
sbb
cmp
sub
inc
loopne
add
cli
repz
push
lahf
or
in
rcrl
test
scas
push
cmp
fisubs
pop
mov
and
pop
rcrl
insb
mov
xchg
stc
hlt
and
ret
rcll
xlat
stos
add
xchg
sbb
and
mov
push
adc
in
aad
add
daa
pop
push
xor
sarl
insb
out
xlat
jb
inc
bswap
push
add
insl
inc
sti
or
notl
mov
pusha
add
xor
in
adc
je
jne
fnstsw
fisttpll
repz
rorb
jns
ss
mov
lods
lcall
mov
cmp
dec
inc
aad
cltd
cmp
jmp
jmp
pop
mov
iret
das
adc
sub
ficompl
cli
xor
or
pop
add
xor
push
push
inc
sub
mov
test
out
xor
xchg
pop
lahf
popa
scas
rcrb
sub
fstps
je
insl
cmp
xlat
divb
xchg
inc
cmp
xchg
leave
jno
xor
or
je
cmpsb
mov
jle
inc
out
jbe
or
ret
or
mov
popf
cmc
dec
pushf
jae
add
pusha
push
push
sub
inc
mov
dec
add
pop
imul
mov
incl
and
stos
jno
movsl
dec
mov
inc
xchg
mov
pop
out
movsl
dec
push
pop
xor
mov
push
jl
loopne
stc
jb
stos
and
push
and
cmc
push
cmp
inc
rcll
cmp
and
arpl
data16
or
mov
outsl
sahf
leave
out
divl
adc
cld
fstpt
add
or
aam
jg
xor
je
lret
cmp
scas
pop
out
cmp
loopne
hlt
lea
arpl
pop
pop
jg
rcl
add
adc
sub
pusha
sbbb
pop
xchg
loop
push
ss
je
dec
push
and
cld
adc
stos
adc
adc
cmp
adc
push
add
cmp
lahf
shrb
push
jnp
out
movsb
icebp
movsb
mov
sarb
cmp
sub
mov
mov
xchg
sub
ljmp
iret
and
fcomi
cmpsb
sub
xchg
adc
jnp
xchg
fdivrl
add
xor
dec
scas
mov
nop
fstpl
inc
push
adc
push
xor
in
mov
pop
mov
lods
gs
mov
sbb
inc
and
pusha
sbb
divb
movsb
testl
bound
dec
out
movsb
mov
ds
cmp
jg
lret
daa
add
scas
sahf
jl
pop
fucomip
dec
mov
pop
frstor
adcb
pop
cmp
subb
sub
add
adc
notl
xchg
adc
xor
jp
push
xchg
pop
sbb
dec
dec
jb
fidivrl
sbb
bound
into
loop
mov
xor
addr16
mov
notb
mov
pop
jle
xchg
movsb
xor
scas
out
and
cmp
ffreep
mov
sbb
jge
loopne
loop
stos
and
sahf
stos
test
cltd
or
inc
sbb
sti
mov
dec
movsb
rcrl
sahf
outsl
jle
pop
insb
and
insb
int3
xor
dec
fmull
out
jno
cmp
ljmp
sub
sbb
mov
into
jle
mov
daa
inc
sahf
xchg
mov
sbb
std
mov
push
push
xchg
ja
test
pop
test
jbe
xchg
ljmp
mov
daa
and
mov
cmpsl
lods
xchg
fnstsw
mov
fdivs
mov
aad
lcall
add
mov
jae
stos
dec
mov
jb
and
mov
inc
push
xor
ja
bound
out
adc
mov
sbb
je
fnsave
cmpsl
ret
and
xchg
xchg
cwtl
faddl
xchg
push
sbb
pop
sbb
lret
je
mov
cmc
push
fnstsw
lock
mov
fistpll
leave
add
test
lea
xchg
test
sub
adc
xchg
cld
jecxz
pop
subl
mov
std
push
aam
xchg
push
dec
add
xlat
or
addr16
pushf
push
test
push
lods
nop
pop
pop
outsl
cli
pop
mov
cmp
sub
jecxz
js
push
arpl
xchg
push
jnp
or
mov
xor
inc
or
inc
adc
test
cmc
ljmp
pop
stos
insb
pop
xlat
pop
pop
inc
repnz
test
push
dec
mov
test
inc
loop
fs
adc
cmp
call
nop
adc
pop
dec
push
or
cmp
leave
cmp
out
std
xor
stc
flds
fildl
aaa
sbb
scas
xlat
rolb
and
or
pop
movsl
iret
cmp
outsb
push
subb
das
or
adc
ss
loopne
inc
or
out
cltd
cwtl
sub
and
mov
push
ret
xor
imul
cmp
xchg
jecxz
cmp
mov
dec
ret
adc
cmp
sub
jecxz
sarb
data16
sub
sub
jbe
add
inc
ss
sub
aad
je
inc
xor
mov
mov
bound
into
into
mov
pop
negl
fiaddl
or
outsl
sub
aas
inc
mov
or
int
test
roll
lock
jae
pop
imul
loop
stos
ret
xor
cmpsl
add
or
push
add
aam
and
icebp
arpl
mov
hlt
jne
rcrl
call
mov
ds
stc
movsb
cmpsb
pop
mov
push
loop
sub
dec
adc
in
fmuls
mov
cltd
mov
out
mov
jno
xor
dec
mov
mov
dec
bound
movsb
dec
add
sbb
inc
xchg
pop
je
js
push
inc
sbb
add
jle
push
lcall
sub
push
out
int3
cmpsl
push
pop
loopne
lock
cmovs
lods
xchg
cmpsb
repnz
pop
xchg
push
xchg
addr16
cmc
xor
rolb
mov
jne
xchg
adc
inc
lret
mov
fcmovnbe
outsl
mov
xor
sbb
adc
arpl
sub
mov
sbb
xchg
sub
hlt
fcmovb
xor
push
loopne
adc
int
jg
loope
sbb
mov
fdivrs
push
and
ret
hlt
imul
fs
iret
popa
xor
dec
jns
mov
fwait
lret
mov
rcl
adcb
xor
stos
push
pop
popf
bound
shrb
jno
pusha
fwait
icebp
lret
pop
xchg
jo
jle
lock
mov
adc
sahf
out
dec
jle
fidivrs
or
leave
int3
js
fwait
sub
aaa
sarl
and
adc
pop
test
xlat
testl
or
ret
sub
aaa
jne
clc
addr16
pusha
mov
mov
or
xchg
xor
popf
xor
add
sub
data16
sbb
repnz
jge
mov
pop
repz
je
mov
and
inc
jg
mov
gs
popa
push
push
or
into
int
cmpb
clc
push
push
or
mov
inc
xor
mov
xchg
mov
into
es
sbb
aas
loop
fidivs
popa
jo
lret
fwait
dec
mov
je
dec
clc
sub
inc
and
mov
negb
adc
in
sub
enter
fabs
jo
rol
mov
cmp
aaa
pop
sub
lret
testb
in
pop
mov
inc
add
fimuls
mov
test
push
inc
pop
icebp
fcmovne
sbb
inc
in
iret
push
out
cmpsl
das
fsubrl
lret
or
movsb
and
shlb
jmp
pop
sar
repz
lods
fwait
out
imull
pushf
jecxz
call
cmpsl
orb
mov
stos
pop
mov
xor
jno
push
ret
mov
cld
popf
into
inc
and
cmpb
por
mov
push
push
inc
movsb
iret
sub
inc
negb
jbe
and
or
inc
push
cmpsb
xchg
pop
sub
bound
push
test
dec
push
pop
xor
test
jne
sahf
dec
loopne
enter
daa
and
mov
popa
pop
enter
mov
lahf
daa
test
pop
inc
add
testl
ret
fstpt
jge
xchg
sbb
push
in
ja
mov
call
push
imul
push
sbb
and
and
jbe
xchg
nop
test
jmp
cmp
fwait
test
pop
mov
scas
imul
fwait
in
and
jne
jnp
adc
mov
test
mov
es
or
sub
out
rorl
mov
cmp
mov
sbb
add
fstpt
test
scas
loop
push
aas
insb
outsb
inc
mov
xchg
mov
orl
pop
rcrb
sbbb
or
cmp
mov
inc
and
idivb
jge
add
dec
add
nop
out
pop
daa
data16
ficompl
adc
inc
imul
mov
rolb
popa
gs
pop
scas
rolb
inc
decl
nop
mov
inc
ret
mov
push
cmpsl
mov
adc
test
rcrl
lahf
pop
cwtl
mov
mov
imul
xlat
sbb
stos
mov
ljmp
imul
cld
loopne
push
std
cmp
xchg
in
leave
add
mov
ficompl
jb
cmp
jb
aaa
mov
adc
cmp
lcall
cs
xchg
xchg
arpl
data16
dec
fidivl
fs
xor
cmp
jae
outsl
xchg
orl
sbb
xchg
xor
add
int
mov
mov
mov
shll
outsl
sub
xor
fsubrl
pop
out
add
inc
fwait
xchg
inc
lea
xor
repz
shrb
nop
ret
push
lcall
xor
in
push
fwait
je
sti
push
sub
push
cmp
fs
jle
out
mov
sbb
inc
mov
inc
leave
repz
jae
sbb
add
mov
lods
rclb
add
xchg
adc
or
sub
mov
sub
dec
aad
mov
pushf
jl
sub
lcall
cwtl
test
popa
dec
sub
nop
or
subl
movsb
inc
loopne
repnz
jg
jbe
lea
iret
sbb
inc
dec
xchg
movsb
xchg
mov
test
jl
mov
testl
in
lods
int
out
xchg
lock
adc
repnz
jle
data16
push
sbb
inc
jne
fisttps
out
jno
cmp
mov
test
adc
lret
and
or
std
add
aas
rolb
jo
jbe
pop
test
mov
sahf
sbb
test
mov
insb
outsl
ds
jecxz
add
sub
clc
ds
test
fldenv
xchg
pop
adc
push
in
xor
mov
ss
mov
mov
mov
jo
dec
psubusw
pop
aaa
movsb
dec
ficoms
icebp
push
xor
popa
and
bound
ret
lea
sub
sub
and
lcall
jns
repz
les
js
inc
pop
inc
setns
cmpsb
lds
ja
aaa
pop
jge
aas
ja
leave
jae
dec
or
xor
jo
ljmp
popl
add
or
lea
imul
out
mov
sub
xchg
mov
xorb
add
popf
push
int3
mov
inc
loop
std
pop
aaa
mov
notl
pop
mov
add
rcrl
push
adcb
dec
or
pusha
or
test
mov
xor
mov
ds
test
xorb
fimull
pop
mov
jmp
mov
jbe
js
das
xlat
pop
cmp
andb
xor
cwtl
mov
fadds
fisubl
daa
add
daa
lcall
jne
aas
jg
ret
mov
cmpsb
cmpsb
out
fcoms
xor
mov
cltd
jne
lret
add
push
daa
ficompl
xchg
add
inc
sbb
mov
fmull
fidivrs
adc
mov
hlt
or
adc
sbb
lahf
add
mov
pop
pop
add
dec
incb
jno
repnz
loop
lock
lods
pop
test
push
adc
add
out
fcmovne
pop
sbb
mov
or
es
dec
cltd
push
pop
xor
pop
je
push
cmp
sbb
out
incb
xor
shlb
mov
push
push
xchg
jmp
ja
push
xchg
add
jb
dec
dec
lods
jp
andb
arpl
into
jle
or
push
xchg
cmc
xor
mov
mov
push
ret
xchg
sub
push
imul
call
add
cmp
push
stos
cs
mov
mov
add
ja
subl
pop
outsl
out
or
mov
lods
loopne
mov
push
pusha
mov
and
shll
mov
xor
cmp
or
push
xor
sub
int
into
and
clc
inc
push
mov
adc
jmp
fstps
adc
je
sub
xor
movsl
mov
test
xchg
out
xchg
out
das
sbb
xchg
dec
sbb
lods
sbb
call
sub
mov
and
and
mov
lcallw
inc
aaa
mov
or
add
jns
and
jb
sub
pop
test
pushf
mov
fidivl
pushf
cmp
stos
shl
pop
daa
mov
dec
push
loop
das
ljmp
adc
add
sub
sbb
jg
in
xchg
sarl
data16
sub
push
pop
mov
insl
pushf
rolb
xor
mov
cmp
sub
cmp
push
cwtl
xor
jmp
cs
ljmp
int3
push
movsb
inc
jne
aam
mov
lds
or
jg
cmp
adc
push
fucom
mov
mov
into
loope
lods
cld
and
push
arpl
xchg
xchg
popa
push
loop
and
push
popf
imull
xchg
and
or
pusha
test
imul
mov
jecxz
mov
cli
adc
fistl
leave
loopne
mov
mov
push
cld
jns
ret
fldt
gs
adc
rolb
fisttps
xchg
rorb
scas
mov
or
sub
push
jl
inc
adc
gs
jge
leave
sbb
jo
add
out
and
cmp
daa
loop
jmp
inc
ret
subb
xchg
lea
push
sbb
jecxz
or
ja
jecxz
shll
sahf
pop
cwtl
icebp
pop
xchg
fnsave
mov
jle
sub
stos
jo
jne
jmp
imul
mov
aas
idiv
enter
pop
cmp
int3
call
daa
jge
mov
orl
in
inc
xchg
jmp
and
or
inc
push
aaa
js
cmpsb
sahf
pop
xlat
sbb
pop
xor
mov
mov
mov
int3
push
mov
mov
je
pop
aaa
test
dec
sub
jle
cmp
out
icebp
jmp
pop
add
das
xchg
sbb
or
pop
rolb
or
pusha
mov
movsb
inc
sub
ss
rcll
xor
pop
mov
push
mov
fcomip
mov
sbb
mov
push
add
lock
sub
leave
cmp
fucomp
inc
pop
push
aad
push
mov
scas
jl
push
test
jecxz
inc
xorl
sbb
cmc
push
mov
test
mov
ds
push
jb
ds
rorb
leave
inc
icebp
xchg
cld
or
loope
je
pop
cmp
cli
jns
movsb
out
jo
rcrl
mov
pop
sbb
je
fists
in
sbb
xor
mov
sub
movsb
es
mov
mov
xchg
pop
in
fcmovnu
call
mov
jp
in
adc
rol
jg
cld
call
loope
push
xchg
cmp
and
div
dec
nop
adc
icebp
std
xor
mov
xlat
lods
mov
cmpsb
mov
insb
fimuls
insl
pop
imul
popf
push
scas
pop
cli
scas
cs
scas
fistpll
adc
cli
jge
jbe
test
mov
stos
nop
imul
adc
mov
cli
lods
ds
imul
jg
addr16
les
push
inc
call
push
imul
sti
inc
icebp
call
mov
jg
xchg
xor
pop
sar
mov
push
insb
aas
mov
mov
inc
pop
fldt
fildl
push
cmp
jne
pusha
bound
scas
cmp
fnclex
jmp
xlat
aaa
inc
pusha
adc
leave
out
bswap
aaa
pop
push
pop
jne
mov
out
mov
mov
adcl
out
inc
add
addr16
mov
sbb
lahf
fwait
cltd
test
bound
pop
adc
or
mov
test
inc
add
fsts
sbb
mov
xorb
mov
mov
xor
pop
dec
ss
shll
pop
test
hlt
cmpsb
cli
mov
stc
inc
test
mov
pop
aam
sti
sahf
add
mov
mov
pop
fidivs
pop
pop
mov
xchg
aam
test
div
push
movsb
ljmp
cmp
divl
repz
mov
iret
jmp
sub
lds
insl
pop
adcl
cltd
mov
push
dec
lods
sahf
dec
ret
aaa
ja
jno
cmp
fadd
mov
cmp
mov
adc
xor
aam
ret
mov
movsl
cwtl
cmp
pop
or
stc
loope
stos
sbbl
add
mov
mov
jae
hlt
mov
pop
cmp
decb
repz
mov
xchg
out
jae
dec
push
dec
lcall
and
int
jg
ja
xchg
adc
fstps
stos
dec
or
inc
jae
cli
jp
adc
test
arpl
pop
inc
aaa
xchg
addb
pmulhuw
cld
jns
fs
popa
mov
jl
in
cld
mov
fldl
cltd
dec
test
pop
sbb
inc
in
out
push
or
pop
mov
es
jp
xlat
adc
mov
jno
pop
mov
jg
pop
loopne
jmp
repz
pop
sbb
sbb
jge
aad
add
push
in
cmp
sub
scas
daa
test
jle
add
xchg
mov
adc
and
mov
pop
fisubrs
or
movsl
mov
or
cmp
push
sub
sahf
xchg
mov
sti
and
repz
aas
jnp
lock
cld
in
sub
add
push
leave
add
mov
jl
inc
movsl
push
lcall
xchg
insl
imul
mov
shll
cmp
lret
mov
mov
cmp
setp
mov
mov
or
and
and
xor
insb
sti
or
add
aad
lret
xor
fstpt
out
add
dec
mov
nop
rorl
pop
repnz
fs
jge
rorb
cmp
xchg
add
xchg
xor
aad
dec
call
sbb
int
adc
insl
je
xor
iret
inc
loop
in
xchg
nop
adc
add
andl
sbb
mov
sub
hlt
call
sub
jno
mov
in
jb
add
xlat
or
adc
push
and
rolb
sub
mov
subl
pop
mov
fmul
jge
ss
cltd
xchg
cmp
mov
sub
ret
push
iret
xchg
adc
dec
into
xchg
jl
cltd
pop
sbb
outsl
pop
push
push
jg
inc
cmp
mov
in
sbb
lds
adc
sahf
ret
out
or
int
and
pop
cs
sbb
les
xor
ret
mov
cmc
outsb
pmaxub
aaa
adc
lds
xchg
and
sub
adc
in
mov
mov
push
push
mov
arpl
data16
mov
sub
stos
sbb
xchg
ljmp
push
or
data16
pop
or
xor
lds
jmp
push
fdiv
fdiv
sbb
ds
xchg
lahf
cmp
fwait
xchg
xor
imul
jmp
jns
sbb
dec
jb
inc
stc
sub
rclb
in
jmp
arpl
pop
test
adc
adc
popf
cli
repnz
add
cmpsb
pop
inc
out
push
out
stos
insb
orb
jns
rorl
dec
mov
lret
cli
mov
push
add
add
fwait
jge
iret
mov
mov
or
out
push
mov
mov
icebp
je
mov
adc
pop
pushf
fistpll
xchg
adc
adcb
scas
sub
je
imul
and
fstpt
add
icebp
sti
into
scas
stos
pop
inc
xor
mov
ljmp
pop
xchg
fwait
pop
cltd
ret
adc
test
mov
mov
sub
adc
stos
arpl
out
or
pop
es
pop
jo
inc
shrb
fldl
sar
xor
xor
mov
jbe
arpl
divb
std
sbb
rorb
pop
dec
jb
mul
jb
dec
sbb
or
sub
test
jge
mov
dec
or
jnp
daa
xchg
cs
es
and
inc
dec
xchg
aas
jne
stos
push
cltd
jns
pop
push
jo
into
mov
dec
xchg
addr16
xor
xchg
aad
mov
cmpsb
shl
inc
movd
mov
dec
stc
movsl
fcomip
fldenv
push
outsl
add
push
leave
adc
cmp
mov
setb
cltd
adc
pop
mov
ss
cmpsl
stos
sbb
push
js
cmp
dec
andl
pop
into
leave
stc
ret
cmp
divl
adc
stos
inc
pusha
mov
mov
cwtl
subb
push
leave
in
cmp
rcrl
in
int
andl
lret
test
sub
fimull
xor
inc
fcoms
sub
or
mov
mov
pop
mov
adc
mov
and
lcall
arpl
div
out
jmp
iret
or
les
mov
cmpsb
addr16
sbb
jecxz
sub
push
jp
jge
push
push
add
xchg
jle
pop
sub
push
dec
xor
and
fidivl
fs
xor
mov
pop
cwtl
ror
lahf
sub
in
xchg
faddl
inc
pop
cmp
cmc
cmp
push
push
jb
xchg
and
inc
mov
adc
ds
sub
cld
mov
push
mov
and
popf
jecxz
inc
sbb
push
cmp
fdivrl
xor
pop
sbb
and
into
outsl
mov
lock
fsubrp
loope
pop
cmc
js
xlat
out
lds
pop
push
xchg
jb
test
popf
xchg
clc
adc
inc
in
test
mov
outsl
daa
xor
mov
push
imul
stos
mov
mov
jecxz
mov
push
lret
pop
adc
sbb
xor
push
pop
jnp
test
cmpb
add
outsl
icebp
push
inc
sbb
lret
into
stc
dec
sbb
push
inc
cmp
xchg
jns
dec
cmp
dec
mov
mov
cmp
cmc
jne
sub
dec
cld
jle
loopne
loopne
or
mov
inc
ret
fildl
jae
xor
push
mov
dec
dec
popf
mulb
inc
test
leave
je
cmpsb
outsl
fidivs
dec
sub
sub
or
cmp
pop
in
movsl
inc
out
hlt
jb
psrlw
incb
mov
and
dec
fwait
cmp
add
push
add
mov
add
mov
jbe
arpl
inc
lcall
sub
es
lcall
outsl
aad
in
adc
inc
insb
ret
cwtl
pushf
addr16
arpl
gs
mov
xchg
mov
sub
out
lret
bound
xchg
cmp
pop
xor
jae
aaa
push
adc
cmp
mov
mov
fwait
out
cs
fndisi(8087
add
loop
mov
std
xchg
mov
rol
repnz
dec
pop
fistl
les
pop
mov
pop
into
fiaddl
mov
mov
and
and
ja
sbb
sub
pop
pop
scas
movsl
xor
jbe
stos
daa
or
fs
gs
out
test
sub
inc
mov
dec
sbb
pop
adc
lret
adc
hlt
lds
pushf
push
cmp
jge
jg
xchg
sbb
cmp
daa
pop
cmp
mov
lcall
aam
sbb
lds
js
mov
sub
cmp
repnz
lea
add
mov
cli
aas
cmpsb
cwtl
push
js
mov
mov
das
and
out
adc
loop
push
lock
movsb
xchg
in
scas
xchg
scas
clc
sti
loop
add
std
test
bound
ret
jb
in
mov
shrb
js
push
and
jp
repz
dec
in
inc
mov
inc
sbb
mov
jb
int
loopne
lods
ret
in
popa
scas
xchg
xchg
faddl
lcall
sbb
sub
je
xchg
xchg
sbb
lea
mov
xchg
sub
dec
ja
sub
outsb
xchg
mov
adc
and
adc
arpl
pop
jb
subb
dec
sbb
cli
pop
or
adc
adc
jg
leave
mov
push
inc
hlt
push
fcoml
aam
sbbl
ss
dec
cmp
xor
lock
lahf
cmpsl
xor
popa
inc
dec
mov
sub
jmp
dec
add
dec
hlt
push
add
xor
mov
add
pop
xor
or
in
jb
sbb
jge
sahf
cmp
push
icebp
dec
aam
lods
mov
fldcw
xchg
das
jecxz
aaa
push
fwait
stos
inc
and
jmp
pop
cs
dec
shrb
imul
mov
aaa
sbb
inc
scas
idivl
xchg
dec
lods
jnp
lds
mov
jp
imul
mov
clc
pop
add
xchg
and
xchg
ja
push
pop
and
pop
sub
cmpsb
mov
andps
jl
xor
leave
test
outsl
rcrb
mov
xchg
ror
cmp
inc
bound
lret
xchg
repnz
add
fs
imul
out
ret
xor
ljmp
adc
loop
call
repz
xchg
bound
adc
aaa
mov
fdivrs
insl
sahf
adc
test
adc
jb
push
sub
mov
repz
enter
insb
repnz
nop
dec
push
pop
fdivrs
dec
in
je
or
addb
pop
adc
cli
lret
notb
pop
inc
ja
mov
aas
lds
lods
ss
out
sbb
mov
jg
xor
mov
add
mov
inc
fwait
sbb
dec
xor
sbbl
push
jg
aad
push
aaa
aad
or
dec
imul
mov
les
repz
or
bound
dec
dec
mov
jge
movsb
nop
or
mov
loop
push
mov
fsubrl
lods
hlt
ffree
aaa
in
ss
push
mov
inc
mov
jle
sbb
mov
xchg
adc
jno
sub
loope
aam
movaps
andl
pop
dec
aas
insl
jo
jo
jle
clc
lcall
jnp
int
aad
rcrb
loope
loop
arpl
mov
outsl
clc
mov
loop
xor
pop
stos
scas
sbb
sbb
xchg
enter
call
aaa
int
xchg
gs
xchg
pop
pop
mov
pusha
mov
fidivs
repz
jnp
out
shll
stos
sub
pop
mov
xor
aad
xchg
data16
test
sbb
pop
ror
mov
in
call
les
adc
fists
ret
les
xchg
test
lcall
in
notl
xchg
mov
jb
shll
mov
shll
jo
scas
gs
push
fadd
shlb
pop
sbb
loopne
xchg
cmp
outsl
pop
mov
adc
imul
movsb
cmp
mov
jle
cmpsl
jbe
addr16
or
gs
rcl
or
cmpl
lea
fnsave
pop
ret
push
stc
mov
sbb
jmp
ss
or
aad
aas
stc
xchg
xchg
loopne
xor
and
push
add
and
sbb
dec
nop
jl
dec
adc
mov
add
and
xlat
or
pop
adc
outsl
and
or
pushf
ds
dec
cltd
pop
xchg
jecxz
btr
mov
sub
pop
cmp
faddl
adc
sub
out
dec
sub
mov
imul
sti
inc
push
sbb
add
cmp
mov
test
aad
jno
adc
movsb
cs
push
pop
cmp
push
dec
push
mov
cmp
fdiv
xor
push
fdivrs
mov
out
movsb
or
mov
repz
arpl
adc
rcrl
sub
sbb
iret
inc
sbb
jle
dec
mov
add
sbb
jo
push
in
push
retw
dec
outsb
hlt
or
push
sbb
push
pop
shl
dec
arpl
dec
enter
xor
xchg
xor
icebp
mov
add
and
sti
daa
add
push
cvtps2pd
nop
scas
add
je
adc
ds
cltd
cs
cs
adc
fiadds
mov
popf
or
js
xor
jae
add
sbb
lock
cwtl
push
or
mov
xchg
xlat
xabort
adc
pusha
ss
cmp
mov
push
jg,pt
enter
pavgb
jb
movsb
adc
or
mov
xchg
js
and
fst
iret
fdivr
andb
clc
cwtl
inc
pop
nop
fnstcw
dec
xor
incl
cld
sar
sbb
cld
add
jl
repnz
cmp
push
movsb
imul
push
sbb
jge
push
mov
mov
enter
mov
pop
mov
imul
dec
and
orb
mov
insb
imul
outsb
lods
or
and
adc
pop
out
ret
cmp
in
pop
ds
mov
hlt
outsb
pop
sbb
cmpsb
fdivrs
or
cld
sti
imul
inc
lahf
adc
xlat
ds
pushf
or
pop
dec
xchg
adc
lock
jle
and
and
jne
aam
orl
addr16
stos
ds
clc
xchg
mov
cli
cld
xorb
loop
loop
and
popa
incb
stos
std
cmpsl
cs
xchg
cld
lods
push
rol
jbe
jo
dec
jns
mov
xor
xchg
jno
das
int
insl
xchg
and
les
iret
mov
jmp
std
mov
mov
mov
shl
mov
decl
shll
inc
adc
add
cwtl
fisttps
imul
aaa
sub
nop
dec
push
mov
inc
mov
jecxz
push
cld
call
fsubs
mov
mov
cmpsb
add
popf
mov
mull
push
dec
orb
aaa
push
int3
data16
scas
jmp
outsl
pop
sbb
xchg
pop
mov
test
xchg
cli
dec
cmp
mov
movsb
push
outsb
movsb
popa
xchg
inc
lcall
addr16
jge
clc
pop
orb
outsb
mov
push
cmp
jp
or
inc
notb
cmp
fsubrs
leave
adc
pop
loop
fdivrs
loope
xchg
lcall
imul
in
sbb
mov
out
pusha
and
jmp
icebp
mov
aaa
movl
cld
mov
inc
rcrb
mov
cwtl
inc
jp
lahf
mov
fs
insb
dec
adc
test
sub
cmp
inc
mov
lods
ja
stos
mov
into
loopne
int3
ficoml
inc
mov
sub
lods
lret
mov
xchg
xchg
in
mov
inc
fisubrs
enter
inc
cmpsl
push
fidivl
test
loopne
pop
pop
push
xchg
add
jl
or
sahf
aas
test
jns
cmp
repnz
pop
mov
or
sarl
fidivs
fistl
shlb
je
push
pop
mov
popf
outsb
lea
out
jle
sub
lock
jnp
clc
icebp
pop
sbb
cmpsb
xchg
push
mov
sub
xor
mov
push
out
adc
push
out
xchg
or
sub
cld
incb
stc
cmpsl
xchg
test
sub
xor
pop
and
adc
and
adc
mov
mov
mov
sarl
sub
in
loope
or
lock
dec
push
mov
jecxz
int3
ficompl
icebp
jmp
in
mov
fs
cmp
nop
imul
and
fdiv
jo
popa
push
sbb
je
addr16
mov
push
xlat
mov
stos
dec
rclb
lret
xor
push
inc
into
pop
aam
push
addr16
add
scas
scas
sbb
shlb
insl
push
fs
shlb
test
push
bt
or
pop
push
jo
push
fildll
push
outsl
cli
stc
jmp
cmpsl
out
arpl
cmpsb
or
sub
cmp
jmp
daa
out
and
mov
inc
in
jbe
les
mov
scas
dec
mov
sti
jmp
or
dec
dec
aad
mov
in
pop
mov
loop
cmpb
js
xor
out
daa
jae
test
xchg
push
adc
push
incl
mov
push
popf
xchg
mov
lcall
idivl
cmp
stos
jbe
std
jo
into
movb
sarl
out
mov
f2xm1
and
or
or
insb
imul
in
fwait
fs
pop
aaa
inc
rcrb
imul
mov
aas
mov
leave
in
adc
or
lcall
stos
addr16
leave
cmp
paddq
negb
adcl
in
sub
cmp
jnp
iret
add
negb
mov
cmpsl
stos
bnd
jg
push
lea
sub
adc
out
cmovge
clc
mov
pop
jmp
cmp
ljmp
mov
pop
dec
call
lret
push
lret
fsubl
adc
aas
fiadds
mov
ret
push
lds
mov
movsl
dec
loopne
jge
cmpsl
in
fs
repz
add
jp
jb
xchg
neg
sti
adcl
adc
and
sub
mov
cmp
mov
inc
fsubs
cmpsl
mov
inc
setnp
mov
jecxz
andb
int
testb
pop
push
scas
mov
test
shrb
xor
mov
outsb
lock
adc
stos
into
mov
dec
mov
enter
sbb
rcr
iret
bound
push
fsubrs
lea
xchg
test
and
rcrl
subl
jge
cltd
ss
mov
adc
pop
mov
pushfw
mov
mov
fcmovb
mov
xchg
xor
mov
xchg
fnsave
aad
cmpl
sahf
aas
stos
cmpb
in
cmp
adc
rolb
push
movsl
and
fisttpll
cmp
sub
dec
jae
orb
cmp
xchg
gs
les
test
in
mov
in
pop
stos
pop
outsl
jno
jecxz
pop
sub
xchg
mov
sub
push
or
xchg
cmpsb
cmp
add
add
mov
xchg
punpckhbw
mov
mov
movsb
adcl
push
rorl
mov
jge
add
jbe
and
mov
lods
dec
or
xchg
mov
xor
xor
icebp
out
js
jo
int
test
out
push
push
insb
sahf
ret
lcall
sub
adc
fs
test
orl
push
aas
mulb
sbb
lods
lahf
sbb
mov
out
test
lahf
pop
addr16
out
sub
sbb
stos
cld
lds
mov
cwtl
repnz
xorb
dec
inc
ror
pusha
fsubl
ret
insb
or
orb
lock
in
sbb
jg
ret
fcoml
dec
xchg
mov
pusha
icebp
int
cmpsb
or
jle
fbstp
pop
rorl
xchg
inc
xor
aam
ret
lcall
mov
jle
push
jbe
dec
dec
cmp
aaa
push
pusha
ljmp
push
xchg
fs
repz
mov
and
mov
mov
xor
rcr
in
xlat
add
into
mov
adc
or
mov
dec
jbe
xchg
in
in
sbb
cmp
mov
test
sub
mov
out
xor
xor
or
pop
mov
movsl
inc
mov
mov
sub
mov
sbb
or
icebp
pop
sar
sub
icebp
shrb
mov
xchg
add
test
mov
adc
add
lret
outsl
mov
push
xchg
inc
rcrl
nop
ret
inc
push
jb
cmpsb
fsts
aad
mov
ror
adc
add
and
leave
outsb
sbb
inc
adc
inc
xor
pop
xor
dec
mov
cmpsb
stc
push
int3
int3
xor
xchg
sub
sbb
jne
or
pusha
jg
xor
movsl
or
out
or
jbe
jae
ret
push
mov
into
ljmp
dec
test
stc
lret
cs
mov
push
push
cmp
xchg
les
dec
inc
mov
push
cmpsb
popa
push
dec
lret
push
jno
sbb
sahf
xchg
orl
jo
adc
jl
je
das
sub
inc
repnz
enter
fwait
mov
pusha
fs
push
mov
imul
ljmp
or
test
adc
scas
jmp
adc
imul
pop
addr16
cwtl
mov
test
adc
push
arpl
adc
push
dec
leave
mov
pop
movsb
mov
cmpps
popf
movsl
in
in
mov
dec
jno
hlt
cs
or
mov
movsl
pop
movsl
cmp
mov
dec
adc
dec
sahf
aas
repnz
stos
lods
jns
or
imul
dec
rep
add
jae
leave
mov
sub
sbb
inc
mov
jno
or
rol
inc
dec
lret
js
dec
mov
out
dec
fimull
lret
shll
popf
out
repz
mov
mov
out
xchg
fdiv
rorl
lds
scas
loop
cmp
insl
stc
aaa
pop
cli
orl
cmc
popf
cmpb
ds
gs
mov
cmp
push
test
test
jmp
dec
ss
iret
pop
outsb
enter
aam
iret
mov
push
mov
pop
adc
xchg
mov
jnp
xchg
push
sarl
cmp
stos
mov
fstps
dec
test
xchg
icebp
in
int
das
in
sbb
int3
out
aad
outsl
mov
xchg
fdivrs
jbe
jecxz
add
sahf
mov
push
cltd
or
addr16
fadds
shr
rcl
mov
inc
pushf
adc
outsb
shl
xchg
out
and
ds
inc
jge
xor
pop
test
push
cmpb
lock
pusha
ret
xor
inc
pop
mov
test
sbb
pop
or
lret
add
insl
int
cld
xchg
pop
in
add
ret
xchg
in
clc
add
jns
push
push
mov
mov
icebp
shlb
cmc
lds
daa
scas
call
daa
mov
mov
scas
outsl
or
xor
stos
sbb
ja
sbb
gs
mov
add
mov
je
push
loop
lcall
repz
movsb
jecxz
mov
dec
and
nop
clc
pushw
or
push
dec
push
popf
ficoms
mov
and
stos
mov
nop
mov
mov
mov
push
xorb
jle
cmp
fs
enter
out
loop
jb
inc
loopne
mov
outsb
cli
cmpsl
inc
adc
sub
in
popf
ror
movsb
jo
test
icebp
dec
cmp
int3
in
adc
sahf
mov
inc
xchg
mov
cltd
shrl
xor
dec
movl
jmp
jmp
outsb
sbb
lock
out
mov
mov
inc
dec
mov
mull
cmp
pop
cmpsb
cmovne
movsl
rclb
mov
mov
mov
xor
sub
out
xchg
popf
cld
mov
rcl
xor
int3
push
aad
lcall
push
sub
gs
js
aas
addr16
pop
xor
xchg
imul
mov
je
and
daa
fwait
pop
and
out
mov
cltd
ja
mov
mov
mov
and
int3
fdivl
test
arpl
sub
filds
sarb
test
cltd
fs
dec
nop
cs
imul
pop
dec
xor
jp
mov
mov
pop
mov
mov
pushf
fwait
js
and
sub
inc
mov
gs
cmp
lea
sub
dec
clc
hlt
mov
push
dec
call
pop
add
iret
lahf
loope
sub
loop
cmp
fisttpll
cltd
pop
xor
aas
addl
mov
sbb
popf
jo
xchg
aam
inc
inc
jg
out
sahf
jmp
fstpt
out
es
test
and
jecxz
xorb
jge
mov
add
js
mov
outsb
movsl
adc
fwait
andl
push
jmp
jg
sbb
and
mov
sti
lds
movsl
cmp
inc
imul
aaa
arpl
lea
push
inc
mov
int3
lret
lods
pop
pop
loopne
push
push
mov
push
jo
mov
sbb
cmpl
cmp
or
inc
mov
xchg
fnsave
fwait
mov
sbb
loopne
jecxz
pop
pcmpeqd
rcll
outsl
inc
cltd
push
js
push
int3
xlat
imul
sbb
xchg
adc
sbb
dec
xor
adc
mov
lahf
push
push
add
xlat
xchg
sbb
or
dec
insl
popf
pop
imul
int
inc
cmp
les
push
jnp
add
loop
push
xchg
dec
repnz
pop
xor
test
sub
adc
aaa
fld1
andb
cmp
dec
fdivrs
cmpsb
loope
pop
or
inc
adc
adc
cmc
cli
cmp
dec
xchg
pop
jp
and
lret
imul
aas
inc
lds
push
pop
cmp
out
rcrl
jo
pop
and
lods
stos
and
adc
fmull
insl
into
mov
popl
sub
stc
mov
inc
push
cmp
test
jmp
xchg
or
gs
fld
into
cmp
dec
popf
cli
sbb
xor
mov
pop
cmc
push
sbb
xchg
xchg
inc
xchg
add
xchg
aam
adc
iret
sub
cmp
cwtl
push
imul
sub
int3
jmp
cmpsl
outsl
movsl
int3
test
outsb
imul
xchg
jo
mov
aam
insb
rcrb
ret
clc
out
cmp
stc
daa
or
je
in
adc
iret
add
push
xchg
sbb
aas
mov
out
inc
out
insb
in
fmull
int3
loopne
adc
push
mov
pushf
js
sub
or
jno
ljmp
adc
lret
hlt
jne
mov
movsl
and
cli
inc
sbbl
test
cmp
pop
jne
add
rcl
iret
cs
imul
jecxz
pop
dec
pop
hlt
pop
xor
lea
fsubl
std
fnstcw
mov
outsl
push
cmp
push
mov
add
cli
test
and
xor
adc
loop
and
leave
adc
cmp
in
xchg
lea
sbb
adc
inc
arpl
inc
scas
mov
jecxz
iret
fwait
pusha
addr16
pop
push
push
fldl
pop
xchg
data16
stos
dec
xor
mov
shrl
add
movsb
sub
mov
insl
xor
popa
mov
xchg
inc
cmc
push
or
gs
stc
cmpsb
ja
loop
inc
jge
jns
mov
std
fs
mov
lods
ja
aam
mov
or
push
push
or
xor
ja
cmp
hlt
ret
mov
push
enter
mov
in
mov
cli
imul
cmp
mov
ret
imul
out
or
mov
inc
pop
imul
mov
scas
lock
into
and
mov
addr16
imul
add
push
outsb
push
stos
jecxz
pusha
and
add
sub
push
and
fidivrs
popf
jecxz
int3
cmpsb
pop
pop
cmp
sub
loope
or
test
into
fnstsw
out
pop
in
stos
or
cmp
jbe
dec
adc
aam
push
cwtl
in
rcrl
dec
ljmp
lds
xchg
xchg
push
push
jecxz
loopne
adc
cmpsb
fcompl
pop
sbb
sub
jl
dec
cmp
outsb
adc
inc
mov
scas
dec
fcoms
mov
xor
jne
jae
add
xor
mov
jge
jo
push
dec
scas
pop
ds
and
out
add
dec
pop
or
jae
ds
dec
jnp
add
xchg
loop
pop
inc
dec
dec
pop
ret
or
adc
jge
sub
mov
insb
pop
cmp
jl
test
orl
fidivs
push
add
xor
add
mov
scas
push
mov
imul
loop
or
ja
bound
push
iret
loope
push
clc
je
nop
push
into
addb
add
dec
ds
sti
xor
gs
mov
sbb
dec
and
cmpsl
jg
rorb
cmpl
sti
cmp
stc
outsb
pop
xchg
lret
xchg
daa
and
xor
adc
insl
in
or
sti
and
adc
add
inc
push
lods
xor
cld
jae
ja
dec
and
gs
enter
ret
lds
jmp
inc
cli
adc
dec
jnp
pop
sub
dec
repz
sub
insb
jne
pop
daa
in
loopne
mov
sti
in
bound
push
mov
mov
or
push
repz
enter
ja
sub
push
mov
xlat
or
xor
divl
loop
pop
aad
xchg
test
adc
psllw
jbe
addr16
lock
into
pop
daa
push
repz
pusha
int
mov
or
lahf
dec
loop
mov
cmp
aad
or
dec
and
gs
je
stos
lfs
inc
aad
xor
mov
popf
fiadds
jns
mov
lret
int3
pop
dec
ficoms
testb
inc
jno
mov
jg
fnstsw
inc
push
subb
push
leave
push
cmc
xchg
inc
int3
push
xchg
cli
push
or
push
ds
fsubrs
out
cli
jl
push
test
sbb
pop
in
push
add
movsb
scas
arpl
cmp
ljmp
sbb
mov
adc
sub
mov
jecxz
pop
shlb
jo
stc
ja
loopne
and
push
fwait
jns
adc
mov
xchg
mov
dec
cwtl
mov
mov
cld
push
dec
mov
dec
jle
adc
jbe
insl
pop
jo
loop
cmpsl
jbe
cmp
aaa
sub
mov
dec
and
jl
dec
push
jno
and
add
sbb
fldt
and
cmp
inc
arpl
fistps
pop
popf
scas
cmpsb
lods
lock
adcb
fsubrs
in
sbb
imul
xor
addr16
sbb
lahf
xchg
scas
clc
sti
xchg
lcall
clc
mov
fmuls
cmp
aaa
lahf
cli
movsl
sarl
push
clc
insl
imull
icebp
addr16
mov
or
test
rolb
hlt
out
inc
neg
jne
ret
ljmp
movsb
cmp
pop
mov
icebp
add
add
or
mov
adc
lcall
jecxz
ret
push
sarb
sub
xorb
jns
orb
push
sbb
nop
inc
xchg
into
pusha
out
fcmovne
scas
xchg
mov
mov
outsb
ljmp
js
sbb
fdivp
lret
adcl
int
loop
xchg
shll
repnz
mov
lea
lret
out
lock
mov
cli
xor
adc
fcompl
jle
int
test
add
cmpsl
inc
push
mov
push
xchg
clc
mov
clc
dec
aam
xor
pop
int
push
ror
inc
int
aam
jo
mov
xlat
inc
or
idivb
aaa
loop
test
inc
and
rcrb
lcall
jecxz
lods
sahf
add
lret
inc
xchg
daa
leave
xor
leave
arpl
and
lods
loopne
dec
or
add
mov
outsb
and
xchg
cmp
lods
dec
lds
push
xlat
mov
cmp
dec
mov
push
loopne
xchg
jo
stos
mov
sub
adc
push
mov
xlat
jb
jecxz
enter
repnz
push
inc
dec
mov
in
lahf
dec
push
inc
xchg
inc
mov
mov
xor
call
arpl
mov
pop
test
fs
sbb
imul
icebp
adc
pop
mov
repnz
pop
add
pop
and
cmp
and
push
in
adc
lea
insl
mov
out
stos
inc
repz
sbb
insl
cli
push
insl
in
adc
jo
repnz
lods
cwtl
inc
daa
push
test
faddl
push
inc
out
out
into
dec
dec
mov
and
inc
push
imul
sub
jns
mov
xor
test
ljmp
mov
cmp
lods
pop
push
gs
cld
inc
inc
pusha
add
or
ret
loope
je
and
decl
mov
ret
adc
outsb
stos
lahf
add
stc
push
movsb
sub
pop
mov
add
add
jns
jle
fdiv
dec
out
inc
jge
xchg
je
aad
jge
or
leave
sbb
push
sub
fwait
cmpsb
pop
adc
push
insb
add
loopne
enter
push
icebp
mov
scas
pop
out
inc
daa
sahf
sti
ret
repz
cmp
pop
je
outsb
dec
in
popa
call
jge
shlb
jmp
fcoml
adc
imul
lahf
cmp
jo
in
sbbl
mov
pop
cmpsb
mov
in
inc
int3
dec
xchg
push
pop
ja
daa
out
dec
mull
scas
dec
push
arpl
and
test
jbe
xor
sub
insb
insl
ret
les
mov
mov
inc
push
in
pop
push
mov
cmpsb
aas
pop
jb
mov
xor
stos
gs
rcr
mov
scas
cmp
pop
ljmp
xor
imul
bound
cmp
daa
push
mov
ss
mov
adc
popa
jno
in
xor
mov
inc
fidivrl
rolb
pop
aam
mov
sub
aaa
into
xor
xchg
inc
leave
fidivrl
sbb
inc
sarl
test
mov
adc
vpsrad
in
cmp
adc
test
dec
add
xor
push
mov
dec
aad
ljmp
jmp
add
add
mov
lret
divl
cltd
out
sar
jns
lcall
clc
cmp
inc
icebp
dec
dec
pop
sub
inc
movl
das
inc
imul
leave
test
inc
stos
lods
scas
icebp
add
inc
xchg
xchg
mov
addb
out
lea
xchg
out
addr16
cmc
filds
inc
test
roll
fcompl
or
xchg
sahf
mov
jae
adc
mov
mov
ret
movsl
push
pop
or
lcall
out
lds
inc
arpl
pop
mov
test
mov
mov
push
and
cmpsl
xor
mov
iret
mov
jnp
add
pop
insb
andl
xchg
test
jns
jno
jmp
das
decb
jle
pop
dec
xchg
and
sbb
lds
xchg
cmp
add
lock
push
mov
mov
mov
lods
movsl
std
xchg
add
out
lock
push
sub
sub
gs
xchg
cmp
xor
push
cmp
les
ror
repnz
iret
sbb
add
sub
mov
sbb
mov
or
push
test
and
sub
inc
cmp
mov
es
aaa
and
push
je
xor
js
adc
outsl
mov
sbb
sbb
dec
into
lret
mov
aad
popa
ss
mov
mov
ja
imul
pushf
mov
cmpsl
sbb
adc
outsb
jmp
adcl
rcr
cmp
lret
sarl
dec
pop
sbb
sub
cmp
test
push
int
scas
lahf
idiv
rcr
adc
aad
js
adc
inc
repnz
sub
pop
ja
cs
fwait
fwait
xchg
mov
cmp
clc
addr16
out
xchg
xchg
dec
mov
dec
xchg
cld
and
xchg
and
call
call
lea
mov
pushl
mov
lock
loopne
test
jmp
mov
inc
and
adc
mov
or
jmp
insb
fiaddl
xchg
bnd
inc
icebp
cwtl
mov
adc
ret
push
mov
jge
js
push
adc
xchg
sbb
lret
xchg
adc
sub
popf
call
loopne
das
mov
push
iret
jge
dec
mov
mov
inc
mov
sub
dec
jmp
fcompl
mov
lcall
inc
stc
loop
test
std
call
add
je
sahf
stos
nop
sti
cs
push
jno
pop
das
mov
inc
jno
test
pop
lcall
pop
pop
call
rcrl
ret
jo
cmc
push
inc
ds
mov
sarb
repnz
dec
pop
jb
test
pop
and
jle
sarl
fld
lods
ljmp
jecxz
ss
lods
je
push
add
pop
bnd
sub
cmpsl
lods
push
jmp
lret
into
sbb
dec
les
dec
push
lret
mov
insb
xor
movsb
addr16
das
test
add
and
dec
sub
nop
push
pop
int
mov
push
pop
stos
in
test
or
mov
xor
mov
shll
jmp
xchg
adc
out
xchg
dec
add
test
dec
lret
lcall
pop
lret
lret
popa
mov
xor
cltd
push
and
or
arpl
pop
shlb
lods
jbe
sbb
bound
stos
inc
lcall
cmpsb
adc
orb
loop
addr16
xchg
lcall
lret
mov
es
int
dec
lock
out
outsb
or
xchg
dec
repz
rorl
xchg
push
lea
sti
mov
leave
addr16
ret
fidivrl
mov
aam
push
add
adc
lcall
imull
cltd
pop
dec
adc
scas
sub
pusha
mov
mov
ret
jns
jle
cmp
and
cmp
adc
dec
xor
mov
out
sti
in
adc
les
push
andl
leave
lahf
enter
mov
mov
ljmp
sti
outsl
cld
xor
fs
out
mov
in
rclb
sbb
pop
push
fwait
xor
and
push
mov
clc
dec
adc
pop
loopne
mov
outsl
cs
clc
call
fistpll
add
divb
dec
mov
add
setnp
in
popa
enter
mov
out
mov
fildl
ja
movsb
jle
leave
stc
jl
das
data16
fwait
jmp
fidivrs
add
mov
xor
inc
cmp
inc
fucomip
xor
arpl
xchg
xlat
movsb
and
jl
pop
sub
sub
jmp
sub
pop
push
or
lods
movsb
xor
or
push
xor
adc
jmp
sub
icebp
pop
jle
or
dec
mov
jno
outsl
mov
dec
pop
int
shrb
pop
idivl
cmp
test
jmp
dec
scas
jo
mov
or
adc
lahf
mov
decl
insb
xchg
jb
xorb
sub
scas
out
test
mov
mov
jns
xchg
insl
lcall
or
popf
cmc
icebp
or
inc
sub
inc
sbb
mov
xchg
inc
or
das
pop
nop
jne
jnp
mov
push
cld
or
leave
dec
outsl
int
cmp
les
add
pop
jge
push
dec
sti
and
stc
jno
outsl
mov
add
bnd
scas
push
and
ljmp
cmp
push
push
adc
pop
in
lcall
sarb
lret
mov
jecxz
xlat
test
stos
ds
add
sub
test
and
mov
and
push
fistl
inc
call
roll
dec
aad
dec
ja
nop
lret
cwtl
faddl
scas
sub
push
push
gs
ljmp
inc
sti
adc
jno
mov
nop
lods
pop
mov
ret
or
jns
jae
adc
xor
das
inc
xor
int
insl
out
int3
jb
mov
int3
mov
jmp
adc
neg
jno
adc
xchg
ret
inc
sbb
pop
mov
mov
fisubl
adc
jge
das
push
aam
fdiv
mov
notb
out
int3
movsl
mov
fcoms
stos
push
subl
clc
mov
rorl
mov
in
push
jo
xchg
pop
jb
gs
cs
xchg
fiadds
fldenv
and
pop
mov
sub
dec
sub
cmp
lock
add
cmp
mov
mov
sbb
jno
add
add
test
mov
pop
in
jbe
aas
mov
fcmovbe
cwtl
push
push
xchg
mov
cli
cmp
jl
inc
dec
xchg
fdivs
mov
xchg
cmpsb
push
shrl
mov
ffree
sti
inc
inc
xlat
or
je
mov
loopne
mov
cmp
cmc
push
pop
outsl
sub
cmpb
mov
rcl
xor
cli
mov
ja
inc
icebp
hlt
pusha
int
mov
and
inc
int
push
clc
push
cmp
jne
or
pop
dec
push
and
cmpsl
cmp
add
and
mov
sti
cld
mov
mov
pop
shlb
inc
push
cld
add
stos
mov
notl
pop
bsr
inc
push
lret
xchg
aaa
cmp
repnz
enter
mov
add
rcll
adc
imul
loope
arpl
xor
loopne
scas
test
pop
push
scas
adc
adc
dec
mov
xchg
rcrb
jb
ss
xor
daa
xchg
nop
shll
nop
cmp
inc
adc
scas
leave
inc
mov
hlt
movsl
sub
cmp
inc
dec
loopne
cmp
mov
into
stos
xchg
xchg
les
fdivl
mov
push
lret
mov
enter
mov
pushl
shll
loopne
pop
lods
scas
sub
aad
test
test
jmp
pusha
lahf
arpl
xlat
xor
ds
add
fsubrs
jne
and
mov
sahf
jnp
xchg
xchg
popa
mov
and
inc
decb
sbbb
adc
sub
add
xor
push
mov
fsubl
cmpsb
mov
lahf
inc
popa
pop
and
aam
adc
xchg
mov
insb
mov
mov
xorb
xor
mov
in
and
inc
xorl
cmp
in
das
cmp
xchg
or
es
fwait
test
adc
jmp
dec
shll
add
sbb
push
daa
gs
cs
cmp
mov
loope
dec
sbb
rclb
sbb
sbb
push
jmp
dec
lods
and
mov
frstor
clc
es
pop
shlb
inc
jne
imul
jne
xchg
stos
jl
clc
lea
scas
ret
xchg
xor
lahf
stos
out
push
fcmovb
push
ds
jmp
jbe
gs
ljmp
xchg
fpatan
pop
mov
int3
push
dec
bound
sub
lahf
xchg
cmp
inc
xor
xor
adc
pop
push
dec
cmp
and
gs
jg
mov
dec
add
sub
sub
fsubl
loopne
test
or
ljmp
rorl
jno
fidivrl
xor
movsb
mov
xor
gs
mov
popf
xchg
lret
xlat
mov
mov
icebp
ds
xor
add
sbb
mov
mulb
and
les
out
in
hlt
inc
push
aam
mov
sahf
ja
push
jae
out
jo
jecxz
sbb
test
pop
pop
sub
sbb
xor
mov
repnz
or
xorl
xchg
push
fdivrs
pop
repnz
mov
adc
and
and
cli
mov
icebp
jnp
lret
cltd
jmp
andb
cmp
jecxz
flds
push
inc
test
mov
xchg
das
cmp
mov
pop
jp
mov
insl
pop
xchg
pop
sahf
mov
fs
pop
jecxz
sub
xchg
dec
test
mov
push
inc
gs
mov
ds
lods
cmp
out
or
ss
xchg
scas
test
sbb
cld
push
ss
mov
xor
lret
dec
divl
mov
out
sub
push
out
sar
fidivs
push
pop
sub
xor
dec
mov
mov
inc
popf
push
sbb
test
pop
ret
ret
inc
pop
xchg
xchg
jnp
lods
adc
stc
ret
cmp
sub
in
lret
xor
mov
dec
pop
dec
addr16
and
stc
cltd
mov
xor
scas
test
cmp
loopne
aas
cmp
mov
and
sub
cmc
dec
insb
sbb
xor
mov
stc
dec
fs
push
dec
sub
stc
jbe
clts
pandn
enter
push
inc
push
and
pop
add
pop
or
inc
sub
mov
push
xchg
sbb
test
fdivrp
rorb
xor
int3
inc
or
mov
push
push
test
adc
add
pop
mov
xor
dec
js
xchg
mov
push
jecxz
inc
xor
stos
dec
fcoml
add
jecxz
mov
cmp
arpl
jp
rcrb
testl
negl
dec
mov
or
mov
ficomps
cmp
jae
xchg
insl
dec
es
test
cmp
mov
out
subl
mov
jl
pop
mov
sbb
push
pop
or
cs
jecxz
mov
dec
add
movsb
xlat
into
xchg
insb
pop
std
repnz
imul
or
fs
testl
cmp
inc
hlt
sub
mov
ja
mov
shlb
ret
pop
fisttpll
rsqrtps
loop
in
fstl
inc
pop
lods
mov
xchg
in
xchg
shlb
push
sahf
xlat
adc
movl
dec
push
out
mov
sti
movsb
cli
insl
icebp
fldl
ja
cmp
jne
pop
mov
stos
scas
xlat
add
push
xchg
xor
dec
fdivs
xor
dec
mov
mov
xchg
sbb
push
cli
mov
test
lret
arpl
push
xorb
xor
and
test
mov
sti
clc
test
fwait
jne
jecxz
jge
jo
cmpsl
cmp
imull
cmp
movsl
pushf
insl
sub
into
test
addb
popl
sub
inc
dec
aaa
inc
movsb
bound
stc
cmp
mov
jae
xchg
cli
rcrl
negl
ds
adc
mov
pushf
jae
fdivrl
pusha
inc
jne
and
xchg
fcmovnbe
test
xor
mov
aas
mov
mov
sbb
push
aad
ljmp
fistpl
mov
mov
arpl
mov
push
pusha
inc
adc
cmpsb
pop
stos
das
loope
inc
pop
or
aaa
ljmp
pop
mov
mov
jmp
pusha
sub
test
rcl
mov
xchg
out
bound
loope
cmpsl
rolb
xor
jge
daa
inc
aas
sbbb
inc
jne
addl
inc
loop
mov
push
sahf
in
xchg
insl
mov
dec
and
sub
imul
sysexit
aam
jmp
cwtl
stos
arpl
rcr
pushf
ffreep
and
push
sbb
nop
loopne
push
sub
mov
dec
mov
adc
adc
lahf
ret
fs
in
sbb
frstpm(287
cmp
in
nop
and
jnp
dec
pop
push
lods
pop
sbb
dec
inc
ret
mov
ljmp
rcl
out
and
add
pop
ficoms
mov
mov
bound
icebp
loopne
dec
xor
mov
mov
and
jne
int
lock
enter
ret
out
add
push
jnp
orb
pop
test
mov
inc
das
lret
xchg
or
movsb
subb
xchg
cmp
inc
xor
lds
outsl
arpl
test
pop
xchg
fcomp
adc
xchg
hlt
push
pop
xlat
mov
mov
popa
jno
inc
cmpsl
fwait
adc
mov
or
and
lds
test
sbb
pop
push
rdmsr
xchg
mov
dec
add
cmp
dec
xor
dec
jmp
and
das
movsb
dec
mov
scas
push
data16
mov
into
cs
jp
pop
pop
int
cli
xchg
arpl
mov
imul
inc
jnp
and
cmpsl
and
push
aaa
lods
xor
mov
ja
fstps
sub
dec
daa
adc
xchg
xor
xor
cwtl
mov
aas
pop
xor
dec
inc
add
xchg
inc
xchg
mul
lret
dec
popf
hlt
lahf
sarl
sbb
adc
mov
xchg
or
and
xchg
rclb
xchg
push
mulb
inc
pop
dec
bound
lock
cmp
je
sbb
inc
negl
push
mov
sbb
pop
adc
pop
jb
rolb
pop
lcall
insl
jns
int3
das
pop
sti
adc
cltd
subb
pop
bound
inc
mov
nop
jb
js
sti
ret
add
adc
fs
adc
ss
stos
mov
call
fildl
mov
or
lock
ljmp
dec
mov
imul
in
mov
jl
push
repz
stos
nop
push
dec
xchg
es
mov
push
xchg
imul
mov
dec
sti
inc
mov
or
dec
cld
rclb
test
dec
jne
mov
int
pop
arpl
mov
outsb
sarl
jle
int3
inc
in
mov
mov
mov
es
loope
daa
push
fwait
pop
int3
xchg
and
filds
or
repnz
add
xchg
scas
mov
dec
icebp
gs
addr16
pop
pop
mov
or
cmc
lods
inc
lds
sbb
lahf
es
jo
inc
aad
mov
mov
cmc
scas
jae
add
inc
or
jb
mov
sbb
pop
iret
push
fdivs
pop
lods
idivb
aaa
xchg
xchg
pop
mov
in
cs
sub
inc
adc
xchg
push
insb
adc
dec
sub
sub
sub
jecxz
dec
mov
inc
ds
outsl
aaa
imul
fwait
adc
sub
fstp
sti
scas
dec
jno
sub
pop
pop
and
or
lods
addr16
call
test
cltd
mov
mov
push
fwait
xchg
mov
mov
xor
dec
divb
test
mov
enter
jne
adc
pop
ja
std
cltd
mov
lock
mulb
movb
inc
mov
add
pop
call
push
and
aam
jb
cld
out
nop
sbb
pop
jbe
cmp
out
movsl
cmp
add
nop
and
mov
das
dec
loopne
in
dec
push
jge
pusha
mov
aas
fs
lods
jmp
dec
push
pushf
cmp
shl
or
xor
jnp
jae
pop
jp
inc
nop
ss
push
aam
mov
mov
movsl
jns
inc
je
mov
ret
mov
je
sub
mul
ret
xchg
lcall
fisttpll
and
dec
es
dec
jb
imul
jl
cmp
sub
push
pop
aad
dec
leave
jg
push
in
in
push
bound
lea
cmpsl
es
lea
lods
dec
sarl
ror
inc
jns
out
push
lret
hlt
pusha
dec
or
inc
aaa
mov
pop
dec
sbb
mov
cmp
xor
sahf
add
cmovne
out
adc
push
inc
push
js
add
mov
jo
pop
je
cmove
scas
cmpsl
ds
dec
xchg
pop
icebp
add
orb
test
mov
cltd
add
cmpsl
das
jl
mov
into
ret
push
add
out
movsb
push
fsubrl
addl
mov
or
mov
mov
and
cs
xlat
aaa
xchg
push
adc
pop
inc
fsub
shrb
adc
push
xor
jne
mov
xor
cwtl
fildl
sbb
insl
push
int3
add
int3
xor
mov
nop
fs
mov
movsb
pusha
aas
cmp
aas
sub
mov
sub
addr16
ja
imul
and
clc
shll
iret
xchg
call
and
pop
dec
adc
pop
lret
mov
clc
xor
pop
adc
test
sub
dec
xchg
loope
xor
sbb
fimuls
imul
add
leave
rclb
popa
adc
popl
xchg
movsl
fstp
xrelease
jns
stos
adc
addr16
dec
sub
sub
lods
xchg
andl
out
jo
aaa
adc
pop
mov
mov
pop
jne
mov
ret
mov
dec
aad
loope
push
jg
jmp
shlb
pop
icebp
inc
ret
mov
inc
xchg
xor
out
mov
sub
push
lea
push
iret
mov
out
leave
rolb
cli
xchg
cltd
cmpsb
xor
scas
aaa
mov
mov
pop
iret
xchg
xlat
push
cli
out
hlt
jle
cmp
add
inc
rcrb
add
push
jo
bound
push
dec
xchg
pushf
in
push
scas
fs
dec
outsl
aad
fildll
gs
mov
sub
jecxz
dec
mov
add
jo
addr16
pop
outsb
gs
cltd
push
jecxz
leave
pop
jns
push
pop
loope
and
xor
sbb
mov
push
stos
adc
rorb
loopne
mov
lret
adc
iret
pop
mov
xor
push
ret
add
cmp
mov
sahf
insb
jae
in
cmc
push
push
test
add
mov
jmp
fxch
cwtl
arpl
sarb
mov
mov
inc
mov
pop
je
mov
sub
pop
add
fs
push
cmpsb
sbb
nop
mov
movsb
push
test
mov
jne
lret
mov
clc
and
push
ja
test
cmpsb
xchg
add
xchg
jmp
dec
mov
mov
mov
repz
scas
mov
cmp
out
shlb
test
dec
sub
inc
mov
mov
add
mov
in
pop
mov
dec
cmpsl
xchg
mov
push
int3
out
cmp
push
push
jns
scas
ret
movsb
cmp
fcoml
inc
mov
stos
les
loopne
fisubl
dec
or
xor
test
das
hlt
popa
je
add
pop
sub
pop
rcll
sbb
push
adc
mov
push
roll
lock
cmpl
xchg
sti
repz
push
mov
jge
dec
in
loope
push
push
xchg
imul
mov
jno
or
clc
mov
flds
test
mov
inc
fdivrl
clc
cmp
insl
mov
orl
int3
into
adc
xor
pop
data16
pop
sti
push
lcall
dec
add
loope
scas
jp
mov
pop
cmp
divb
lahf
popa
lret
shrl
sahf
pop
sub
ret
and
mov
lret
mov
xchg
imul
mov
inc
inc
mov
fistpl
lret
lds
jg
adc
and
shrb
scas
jmp
mov
movsl
movnti
sarb
in
jl
inc
pop
fbstp
pop
xchg
inc
cmp
sti
xchg
outsb
out
pusha
int3
pop
popa
or
xchg
test
ss
jne
insb
popf
inc
mov
out
inc
push
out
scas
add
fisubrs
xor
sbb
adc
out
fwait
pop
jo
aaa
clc
rorl
inc
mov
icebp
shr
and
pop
xor
loop
and
adc
cmpsb
roll
push
cmpsl
jge
add
popf
cmp
lods
in
sti
shlb
pushf
cli
xchg
stos
scas
roll
adc
rcrb
push
mov
xchg
mov
lods
sub
mov
sub
mov
outsl
lret
sub
dec
mov
xor
sub
xchg
les
test
adc
inc
mov
repnz
out
jp
mov
in
stos
in
cwtl
and
mov
xchg
fisubs
mov
pop
and
movsb
pop
xchg
pop
inc
or
sbb
push
cmpb
cld
addr16
pushf
mov
or
fsubr
dec
fs
int3
fsubrp
call
loope
and
sub
pusha
adc
data16
stos
sbb
add
out
push
aaa
sbb
mov
cmc
and
xor
mov
clc
sbb
xchg
cmp
pushf
push
pop
popa
repnz
dec
data16
leave
movsb
sub
popa
or
daa
mov
add
and
out
test
aam
fimull
stc
jnp
push
mov
fbstp
call
in
outsb
add
add
mul
mov
push
sbb
popf
cmp
sub
push
mov
xchg
inc
push
push
out
xchg
mov
je
xchg
xchg
rcrb
out
adc
aas
sub
pop
outsb
mov
mov
iret
int
mov
lcall
dec
jae
push
push
ja
mov
data16
sbb
stos
insl
in
movups
mov
fimull
pushf
sti
mov
call
mov
inc
test
popa
lcall
and
adc
mov
es
add
pop
int
jno
arpl
mov
sub
iret
out
addb
push
pop
icebp
jecxz
or
xor
dec
inc
aad
andl
inc
dec
jle
xor
data16
jnp
cwtl
std
lds
in
sub
aam
jecxz
push
movsl
adc
mov
sti
xlat
jnp
repnz
sbb
pop
mov
sbb
dec
scas
cltd
scas
fs
mov
add
fbstp
ficoml
je
test
add
adc
shll
add
mov
and
jno
adc
bound
std
fstpl
fs
jge
xchg
popa
or
repnz
dec
push
pop
xchg
les
jp
iret
push
cmc
xchg
sbb
int
sahf
inc
pusha
repnz
ljmp
sbb
pop
lcall
mov
in
xchg
sar
add
mov
lret
mull
adc
lods
in
cmp
mov
pop
dec
adc
inc
mov
adc
iret
cmp
sbb
aaa
xor
std
sti
aaa
daa
pop
repnz
lock
pushf
cmpsl
mov
sbb
dec
call
inc
push
and
mov
ljmp
cmpsl
call
and
mov
orl
int3
rcrb
add
imul
fistpl
into
push
dec
xchg
mov
dec
cmpsl
jmp
orb
jle
and
dec
inc
stos
imul
pop
sub
ljmp
jnp
es
push
sub
rcrb
ljmp
pop
jno
nop
mov
adc
shrb
inc
and
out
cmpsl
mov
in
ret
imull
mov
shl
test
mov
push
xchg
lret
out
mov
outsb
mov
movsb
in
notb
lods
push
mov
js
xchg
mov
xor
sbbb
std
push
js
mov
fs
ljmp
shr
sub
xor
pop
stc
xchg
sub
repnz
test
inc
and
cmp
sbb
loope
mov
mov
inc
lcall
jg
stc
and
adc
int
adc
vmread
adc
pop
pop
mov
lods
inc
sub
stc
mov
add
push
sub
pop
xchg
dec
loopne
popa
add
adc
movsb
lock
or
out
insl
data16
pop
adc
push
leave
or
loopne
cmp
and
jns
adc
mov
add
pop
ret
lret
sahf
mov
jp
jg
add
sub
xor
push
xor
loope
push
sbb
int3
push
push
cmp
mov
je
adc
hlt
sahf
push
and
std
sbb
dec
imul
xorb
push
add
pop
pop
aas
add
out
outsl
pop
jle
pop
mov
cmpsl
push
out
movsb
xchg
sub
loope
or
jg
push
out
test
inc
addr16
xchg
call
cmp
xchg
push
xor
mov
mov
jg
subl
add
xchg
mov
mov
jmp
inc
push
xor
pushf
mov
rorl
adc
scas
fwait
and
push
popa
and
mov
inc
jno
fnstenv
lods
mov
xlat
aam
scas
clc
sub
xchg
cld
repz
int3
inc
in
push
sub
daa
imul
cmp
imul
inc
or
sub
test
sahf
fidivrs
stc
and
pop
mov
rcrb
fs
push
mov
popf
mov
xchg
pop
ret
clc
test
icebp
and
mov
and
inc
out
mov
lods
pop
or
repz
cld
sub
pop
sahf
add
std
xchg
subb
fcoml
je
das
out
scas
dec
shrl
test
arpl
dec
es
pop
xchg
xor
push
push
inc
shlb
push
cmp
sbb
push
aas
mov
ficompl
fldenv
add
in
cmp
cmp
add
outsb
loope
add
cmp
mov
cltd
lret
add
dec
nop
mov
movsl
lds
aaa
es
loop
jmp
rclb
rcr
daa
cmp
sbb
je
sub
push
xor
scas
fs
insl
sbb
insb
push
out
call
ja
mov
inc
movsb
adc
pop
sub
mov
ret
xchg
mov
repnz
xchg
inc
lea
add
sahf
push
popf
pop
gs
mov
add
imul
xchg
sbb
test
ja
push
sbb
add
dec
imul
in
cld
jp
cltd
dec
aaa
scas
aam
negl
xchg
clc
push
add
mov
jg
adc
push
push
out
jge
jns
rclb
leave
mov
inc
and
lret
or
pop
icebp
and
cmpsb
push
xchg
mov
or
mov
cmpsl
xor
push
stos
idivl
out
xor
mov
inc
orb
adc
inc
clc
dec
sbb
sub
and
dec
jl
push
enter
insb
push
iret
rdpmc
sahf
into
push
outsb
adc
in
cmp
stos
cmp
or
xchg
imull
mov
dec
pop
mov
jmp
push
mov
jg
xchg
incb
pop
jecxz
cltd
xor
jmp
js
cld
jb
mov
test
push
fs
stos
mov
lods
jne
inc
je
xchg
pop
add
into
lret
lea
jl
sti
sbb
aaa
les
cmc
insl
loope
mov
xlat
dec
out
push
sub
ret
xlat
inc
push
jecxz
leave
std
inc
pop
sbb
imul
mov
mul
out
mov
mov
pop
mov
xchg
push
stc
fwait
fs
outsb
scas
push
fadds
inc
dec
popf
inc
loope
sbbb
xchg
sbb
sti
mov
dec
or
in
js
sti
mov
mov
push
sub
and
loop
jecxz
daa
bound
and
stos
fistpl
xor
ret
cmp
fnstenv
inc
jmp
push
inc
movsl
lods
inc
ljmp
add
add
pop
bound
nop
push
rol
sub
and
add
cs
cli
xchg
mov
rcrl
xor
imul
ficompl
sub
out
in
lret
mov
push
jle
jmp
cmp
iret
lret
jbe
mov
cltd
add
insl
insb
call
in
mov
adc
stos
adc
cmp
cmc
sub
add
adc
repnz
fcomi
ljmp
dec
pop
sbb
mov
idivl
mov
adc
lret
stc
out
mov
mov
sub
stos
ret
xchg
je
test
sub
xchg
pushf
loope
push
sub
xchg
pop
add
imul
mov
xchg
xchg
mov
mov
lea
mov
add
mov
dec
mov
xlat
inc
xor
jo
dec
popf
xor
into
pop
lret
lret
fsubs
shll
push
inc
mov
inc
jns
push
shrl
daa
sbb
jecxz
aas
jmp
mov
mov
ja
mov
cmp
mov
sub
mov
in
int
mov
mov
cmc
movsb
fcomps
jle
pop
int3
xor
fdivrl
lods
scas
lret
sbbb
xlat
fcmovnu
mov
push
loopne
lods
sbb
das
ds
adc
jnp
sarb
xorl
push
inc
dec
xchg
out
mov
jbe
jp
clc
sub
mov
jl
mov
or
sub
pcmpeqd
pushf
sub
xor
or
int3
in
sbb
push
dec
ljmp
add
dec
pop
iret
dec
jo
mov
jl
lods
out
ror
inc
test
repnz
bound
dec
jp
mov
pop
cwtl
jle
call
jmp
repz
adc
cmp
jmp
ljmp
push
pop
jns
je
xchg
sub
mov
mov
adc
jl
cs
cmp
enter
mov
cmp
jo
test
rorb
push
and
xor
fistl
jg
and
pop
xchg
fistl
aas
vzeroall
jno
lret
jo
mov
sbb
movsb
mov
nop
nop
dec
xorb
cmpsl
cmp
adc
mov
imul
rclb
sarl
sbb
shlb
sbb
or
mov
out
lock
jle
fcoms
pusha
insb
adc
iret
sub
cmp
jno
scas
lds
jo
mov
ret
es
lock
mov
pop
xchg
or
into
jle
sbb
inc
pushf
fs
cmovl
lret
mov
insl
sub
adc
mov
inc
out
int
cmc
stc
shr
lock
mov
movsb
call
lods
jns
clc
mov
int
loop
int3
shll
and
lods
xor
mov
ds
or
pop
pop
aam
sub
ficompl
lods
push
xor
cli
shl
sbb
mov
sarl
add
cmpsb
ljmp
cmpsl
cmp
adc
dec
std
pop
cmp
mov
cmp
pop
sti
xchg
dec
jbe
repz
dec
je
scas
sbb
cmc
aaa
xor
jmp
int
stos
stc
mov
cmp
push
dec
fidivrs
stos
jne
loop
dec
dec
sahf
pusha
and
push
inc
dec
xor
jno
lods
xchg
jle
lods
add
test
imul
inc
out
es
in
jae
fucomip
mov
push
clc
cmp
out
dec
sub
mov
pop
push
xchg
inc
hlt
and
adc
inc
call
sub
pushf
repnz
jno
repnz
sbb
stos
xchg
xlat
in
push
push
icebp
mov
and
or
sbb
xor
test
ret
jns
ljmp
gs
inc
out
ja
sub
cmp
movsb
jp
xchg
dec
mov
inc
aaa
cwtl
xor
push
imul
lret
div
inc
add
jo
mov
bound
jl
sub
int
or
adc
add
and
clc
es
jecxz
imull
push
rcll
fistl
mov
lods
cmp
sbb
fnstenv
sti
out
pushf
dec
ja
ja
push
push
fistl
xchg
shr
stos
and
xor
and
cld
inc
push
in
cmpsb
mov
jge
mov
fnstsw
mov
jnp
cmp
jg
pop
xor
mov
fimuls
cmc
xor
dec
sbb
jae
cmpsb
jb
imul
sbb
pop
daa
test
mov
inc
je
lahf
loope
push
lea
fmull
rol
ret
repnz
lea
lahf
lock
mov
pop
dec
jle
dec
decb
insl
loope
cld
jnp
rorl
sbb
call
and
adc
mov
mov
pop
adc
inc
repz
sbb
insb
mov
push
iret
das
jne
pop
int3
mov
loope
into
push
outsb
and
loopne
lret
stos
push
mov
xchg
mov
sbb
dec
nop
fstp
xor
aam
and
or
pop
or
sbb
mov
dec
sub
xchg
push
lods
add
xor
push
daa
sbb
daa
jp
add
mov
xchg
xchg
clc
xor
cltd
push
aam
sbb
mov
push
stos
movsb
mov
aad
cli
out
lahf
dec
mov
fdivp
dec
jl
adc
pusha
lock
sbb
repnz
idivb
inc
mov
lret
push
ds
pop
dec
cmp
push
adc
push
in
cmpsl
into
dec
movsl
jb
pop
subl
or
mov
inc
push
test
or
sub
push
scas
js
xor
pop
das
dec
xor
cld
dec
add
out
out
pop
xchg
jnp
mov
inc
add
push
pusha
divl
fs
lcall
sbb
xchg
cmpsb
shlb
in
scas
mov
add
push
inc
push
ljmp
clc
gs
mov
lock
aad
inc
sub
fstps
pop
add
mov
push
enter
xor
or
imul
jge
out
sub
xor
lods
or
push
ret
push
ja
jno
sbb
pop
push
clc
call
fidivs
lret
jmp
jbe
lret
ss
mov
call
adcb
lods
xchg
jns
sahf
inc
inc
sbb
imul
push
aas
push
lahf
mov
shlb
add
lea
loope
dec
lret
add
out
mov
jae
dec
jnp
dec
mov
cmp
adc
dec
out
std
dec
divb
shlb
and
popa
mov
mov
xchg
inc
mov
push
add
xchg
mov
cmp
cmp
enter
lods
fnstenv
lret
movsb
mov
arpl
add
pushf
jno
lret
jnp
and
jno
subb
arpl
adc
pusha
mov
lret
mov
dec
jns
push
popf
jbe
or
add
pop
add
sub
lock
adc
scas
shrb
push
pop
fcomps
pop
fcmovu
aam
jmp
dec
and
orb
xchg
cmp
mov
jnp
cmpsl
pop
xchg
mov
mov
adc
cvttps2pi
cs
out
dec
sub
std
or
mov
mov
push
stc
mov
mov
lods
pusha
mov
mov
std
pop
lods
mov
int3
rorl
mov
mov
cmpsb
arpl
and
sub
xchg
adc
shrl
sub
jg
mov
pop
push
add
or
xor
cmp
jg
jg
push
push
push
out
nop
lods
je
sbb
or
dec
adc
in
and
jg
inc
pop
xchg
aas
xchg
push
and
rcll
std
lret
push
add
cli
and
mov
cmp
rcrb
pushf
repz
das
loopne
ret
sbb
cmpsb
popf
inc
stos
xchg
xor
jnp
loopne
mov
call
out
jae
mov
test
xchg
push
js
mov
fadds
testb
mov
shrb
cmp
push
imul
jmp
cs
roll
out
stc
sbb
fdivs
roll
sub
test
mov
fcmovne
pop
lock
loop
sbb
xor
mov
mov
pop
push
fldl
ljmp
hlt
mov
ss
mov
fwait
pop
push
lahf
not
ss
jg
sahf
adcb
das
outsb
aas
rcrl
dec
ss
sbb
pusha
and
xchg
add
fimuls
jb
into
dec
jo
xchg
inc
adcl
adc
cwtl
into
fwait
cli
ret
push
or
popl
pop
insb
lods
std
mov
popa
hlt
imul
in
stc
adc
inc
lods
es
cmp
rclb
ds
loope
mov
dec
or
sbb
cld
cmp
mov
or
mov
sar
ss
and
add
popf
cmp
lahf
jbe
dec
push
aas
stos
inc
cmpsl
jl
cs
repz
or
mov
mov
inc
adc
jl
mov
outsb
sbbl
jle
rcrb
in
push
inc
sti
or
sub
add
xchg
mov
mov
loopne
pop
mov
jecxz
and
pop
mov
pop
xchg
push
mov
adc
sbb
in
iret
jnp
fsubs
sub
mov
cltd
or
push
pop
mov
mov
mov
jl
bound
xor
mov
test
mov
movsb
int
dec
add
popa
imul
dec
cmc
shlb
pop
mov
mov
int3
outsb
push
jg
divl
push
loopne
pop
shlb
and
scas
sbb
sub
mov
mov
sarl
inc
sub
add
add
xor
xor
repnz
pop
fdivr
int
pop
in
test
or
mov
pop
push
mov
or
pop
insb
sahf
les
and
xor
fwait
lret
add
jo
sbb
mov
lret
mov
push
mov
dec
push
xchg
jbe
sbb
xchg
lahf
filds
jecxz
sbb
jb
jp
or
mov
or
sbb
pop
pop
sbb
xchg
rcrl
xlat
inc
push
jo
jnp
mov
cmp
mov
mov
xor
jg
push
stos
fldcw
xchg
in
enter
cmp
test
xchg
int
jns
xchg
outsb
fiaddl
sub
xor
adc
scas
or
cltd
ffreep
cmp
dec
js
jnp
ljmp
adc
popf
add
xorl
int
mov
inc
mov
xchg
mov
cli
in
nop
rcrl
push
pop
xchg
mov
xchg
outsw
push
jno
sub
in
mov
push
in
jnp
scas
lret
push
xor
xchg
xchg
cld
arpl
pop
pop
rorb
jae
add
sti
adc
ja
push
add
jo
xchg
xchg
rclb
jle
pushf
jo
push
dec
cmp
xrelease
mov
mov
cmp
loop
outsl
jb
add
lods
dec
add
mov
out
mov
sub
push
cmp
mov
xchg
imul
bound
mov
mov
sub
shl
xlat
fcmovnbe
sbb
inc
sbb
popf
mov
call
sbb
and
xchg
lds
and
nop
mov
push
pop
or
stos
dec
neg
adc
pop
xchg
fcompl
jbe
insb
pusha
inc
push
out
divl
mov
add
xor
inc
in
sahf
mov
and
push
test
sbb
cmp
pop
and
jb
icebp
xlat
add
add
ds
mov
xchg
test
push
stos
jle
pop
aas
sbb
push
jb
jne
dec
ficompl
scas
pop
das
movsb
add
int
mov
test
leave
jg
mov
mov
cmpsb
shl
daa
xor
in
imul
int
movb
xor
cmp
hlt
or
cmpsl
and
mov
cmp
xchg
loop
xor
insl
mov
stos
sub
cmp
pusha
ret
sub
mov
ljmp
push
push
ret
iret
cli
pop
inc
popa
int
add
or
xchg
mov
sbb
or
mov
jp
xchg
pop
aas
sti
hlt
aas
imul
jl
or
add
popf
adc
sub
inc
pop
pop
negl
xchg
xor
mov
sarl
dec
pop
sbb
iret
jl
int
add
mov
fisubrs
out
mov
mov
push
rcrl
and
bound
jnp
test
scas
dec
cmp
xor
fstps
mov
popa
or
dec
xchg
repz
dec
sub
clc
mov
push
mov
lret
insl
call
imul
xchg
lret
dec
cli
lret
sub
outsl
push
xchg
xlat
jae
clc
pop
cwtl
mov
sbb
dec
lcall
dec
push
adc
mov
loop
outsb
cli
rolb
cmpsl
loope
push
sub
inc
lock
sbb
pop
inc
push
and
roll
cli
inc
fdivr
lods
lods
mov
lret
inc
push
sbb
sbb
mov
aaa
dec
add
xchg
in
xchg
push
mov
shlb
adc
xor
mov
or
mov
pop
into
ret
lods
imul
je
sti
out
popa
pop
pop
xor
scas
test
enter
insl
push
leave
jge
sbb
add
in
dec
inc
add
cltd
xchg
in
shll
mov
xor
outsb
daa
and
mov
arpl
dec
pop
pushf
xchg
test
cmpsl
inc
jl
jbe
mov
in
dec
rolb
mov
outsl
push
iret
inc
sbbl
ss
or
push
and
push
gs
ja
add
cwtl
adc
xchg
push
inc
mov
add
into
xor
dec
adc
pushf
test
je
pop
cmp
mov
cltd
dec
or
push
int
sbb
mov
push
fiaddl
test
adc
sbbl
dec
lods
cltd
mov
add
outsb
adc
mov
mov
loop
pop
mov
lods
bound
movsb
sti
mov
cli
dec
cmp
jo
xchg
push
adc
push
and
nop
and
pop
insb
jo
fstl
mov
or
and
cmp
loopne
xor
mov
mov
add
xchg
sub
sub
and
roll
in
xchg
cs
call
mov
test
mov
pop
mov
mov
lcall
shrl
push
adc
loopne
sub
jne
popf
jno
jg
sti
pop
mov
inc
lock
scas
pop
sbb
mov
jmp
repz
int3
mov
mov
int3
gs
xchg
xor
dec
cld
shrb
and
fidivrl
pop
sti
sbb
rcl
cmp
xchg
pop
ret
insb
cmp
je
add
mov
inc
and
pop
inc
test
shrb
testb
loopne
inc
out
sub
int
mov
in
negl
movsb
cs
aaa
insb
cmp
lds
and
andl
lea
loopne
xor
sub
jmp
lods
xchg
add
jmp
sub
push
mov
pop
hlt
xchg
push
push
mov
mov
push
sbb
add
shll
scas
ja
and
mov
cmp
mov
aas
push
fmuls
sbb
xchg
cmp
mov
xchg
add
aas
subb
scas
movsl
dec
arpl
inc
movq
sbb
or
in
push
in
lcall
jle
push
xor
orb
pop
out
fnstcw
fmull
pop
cmp
xor
pop
lods
imul
pop
adc
ljmp
adc
xchg
loope
cld
je
lret
test
jle
sbb
cli
mov
lds
paddb
jno
cmp
aas
sbb
stc
aad
mov
popl
push
pop
loope
test
iret
xchg
daa
mov
adc
pop
push
pop
sbb
add
or
cmpsl
leave
cmp
inc
mov
mov
outsl
ror
es
fnstcw
movsl
sarb
mov
rol
inc
mov
mov
loopne
into
add
popf
mov
sbb
xchg
sub
cs
lret
loope
outsl
pop
outsb
jo
sub
loopne
xchg
adc
jbe
and
mov
xor
xchg
mov
cmp
cmp
inc
repnz
nop
sub
outsl
add
add
xchg
mov
mov
and
sahf
call
jl
daa
ret
lock
imull
in
jno
stc
cld
movsl
push
xchg
push
mov
ret
fisubrl
cmp
pop
leave
out
cld
je
jl
jmp
adc
shrb
js
lret
les
xor
int
or
push
mov
xchg
imul
int3
fidivs
push
cmp
pop
cltd
push
cmp
sub
daa
sbbb
nop
inc
subb
lret
dec
or
push
clc
and
pushf
test
ss
imul
jbe
jmp
adc
loop
imul
push
shrb
pop
adc
mov
bound
mov
outsl
mov
je
jecxz
inc
stos
push
inc
test
cltd
jne
lods
fwait
mov
std
icebp
cmpsl
xchg
outsl
sbb
or
das
orb
filds
aaa
loop
sbb
sbb
addl
lea
push
aad
xchg
mov
inc
jle
push
test
in
adc
popa
cmp
cmp
and
stos
adc
lods
sub
lret
sbb
repz
xor
gs
mov
mov
mov
bound
push
or
xchg
test
cmpsb
mov
push
lds
fiadds
adcb
stos
outsl
insl
jno
mov
mov
cli
imul
es
xchg
ja
xchg
aad
jl
sub
lahf
xchg
sub
gs
aaa
jns
add
subl
pop
xlat
lret
or
xchg
pop
fdivrs
adc
mov
stos
les
adcb
inc
dec
mov
xchg
cmpsb
inc
sarl
xchg
outsb
push
cwtl
faddl
int
sbb
mov
jns
inc
and
dec
dec
outsl
shll
inc
int
xor
mov
push
dec
cmp
jp
lret
inc
mov
cmp
popf
fstpl
or
adc
xorl
into
sbb
popf
fsub
xlat
inc
ds
pusha
movsl
push
cmp
popf
pop
xor
rdpmc
fisttpll
cmp
xchg
ret
je
call
pushf
shll
push
cs
pop
mov
sub
mov
jae
lcall
imul
jecxz
mov
pop
xlat
push
test
xor
mov
iret
jle
push
mov
xor
push
and
js
mov
and
negl
sub
mov
cmp
mov
sarl
leave
pop
dec
aam
fimull
pop
pop
adc
popf
mov
imul
or
mov
cld
repz
bound
outsl
inc
insl
dec
fwait
je
adc
add
movsl
adc
pusha
xchg
data16
sbb
xlat
mov
pop
mov
lahf
ret
faddl
xchg
dec
aad
leave
jb
lods
int3
in
cs
orb
jg
dec
adcb
inc
rolb
shlb
in
movsb
lahf
mov
or
arpl
imul
sub
mov
pusha
ljmp
add
popa
jp
frstor
xor
adc
dec
pop
mov
cld
jbe
sahf
cli
adc
xchg
sbb
insb
mov
push
outsl
fisubrs
gs
adc
mov
sbb
push
gs
push
and
adc
clc
sbb
cwtl
mov
sbb
xorl
je
repz
push
dec
push
jle
hlt
iret
daa
add
xor
movsb
jns
cmp
or
pop
dec
imul
into
pushf
js
and
mov
adc
mov
cmp
jae
jne
cli
mov
lret
fldenv
and
out
xchg
add
call
mov
sbb
push
jb
mov
add
imul
test
xor
pop
outsb
mov
and
out
dec
mov
stos
fisubrs
dec
pop
cmp
inc
and
jl
daa
and
xor
mov
and
rcrl
orl
xchg
out
cmpsl
ja
xchg
pop
xor
adc
dec
mov
mov
scas
decb
mull
test
add
insb
mov
jne
cmc
xor
aam
mov
xchg
popa
test
cs
sbb
push
rorl
pop
lea
ret
xor
ret
lahf
sahf
jbe
sbb
ja
test
sbbb
scas
add
pushf
cmp
leave
sti
daa
push
fwait
das
js
ret
out
enter
stos
dec
xlat
dec
fsts
movups
xchg
mov
xor
mov
outsl
mov
adc
dec
mov
inc
xchg
ss
adc
push
add
or
sarb
push
pop
jns
fsub
and
xchg
add
inc
push
xor
push
insl
push
test
inc
inc
mov
push
xchg
and
xchg
xor
loop
lock
call
sar
pop
push
sub
jne
lahf
adc
imul
int
xchg
outsb
dec
xorl
ficoml
mov
sub
nop
xor
je
mov
cmp
lods
jne
inc
adcl
xchg
pop
stos
fmul
stc
movsb
pop
js
push
fisubrl
inc
repz
jp
pop
gs
push
icebp
push
mov
cld
push
les
negl
jbe
je
mov
adc
cwtl
fsubs
xor
dec
shlb
push
add
sub
pop
fidivs
sbb
or
dec
jne
or
sub
idivb
loop
mov
jp
push
jp
cmc
dec
movsl
fwait
xchg
cmp
ret
inc
cmp
push
cmp
and
aas
pop
fs
fldt
sub
orl
xchg
lret
lahf
mov
repnz
mov
sub
mov
push
xor
jbe
outsl
fisubrl
cwtl
jp
in
dec
xor
pop
xchg
mov
inc
and
push
mov
xlat
mov
hlt
lahf
and
push
loopne
add
or
sbbb
jg
lods
in
sarl
popf
test
frstor
popf
movsb
adc
incb
cmpsb
scas
adc
xchg
mov
fbld
hlt
shlb
insb
xchg
sub
add
sbb
push
dec
mov
xchg
jbe
scas
cwtl
jg
dec
fnstsw
shlb
lret
repz
dec
out
push
mov
int3
xor
iret
cmc
mov
inc
adc
repz
cmp
mov
loopne
mov
cmp
pop
fldl
scas
mov
jl
aas
and
pop
add
out
je
mov
push
mov
es
and
dec
jg
aam
divb
push
dec
xchg
out
sbb
push
inc
fsubl
or
xor
mov
cmp
lods
in
mov
push
pop
dec
gs
inc
pop
lods
xor
popf
add
adc
mov
lds
sbbb
mov
cwtl
aam
mov
mov
int
xor
dec
arpl
call
in
int3
jb
in
stos
aam
dec
ja
or
sarb
mov
test
fwait
xor
jne
dec
adc
aaa
aaa
out
jb
add
repnz
jno
push
mov
or
les
cmp
jp
out
xor
leave
xchg
mov
and
out
clc
lea
cld
add
shrl
test
lods
fbld
cli
js
cli
insl
adcl
shlb
aaa
xor
lds
enter
aaa
nop
cli
mov
xor
enter
fldt
cmp
jg
pop
nop
mov
int
add
arpl
movsl
push
adc
pop
push
stos
mov
mov
xchg
or
cmp
es
popf
stos
sbb
dec
enterw
inc
mov
sbb
jl
mov
mov
sub
pusha
xchg
xor
adc
mov
adc
rcll
pop
xchg
ds
call
dec
repz
addl
push
pop
out
es
sahf
xchg
cmp
or
xchg
popf
and
idiv
shr
add
mov
std
pop
push
push
cltd
lds
jmp
add
pusha
inc
popa
and
pop
push
stos
add
dec
int
or
and
aam
out
test
out
mov
mov
cmp
jg
sub
jb
inc
hlt
movsl
ds
add
pop
call
jne
shll
xchg
cmp
xchg
nop
pop
sbb
push
lods
jbe
int
pusha
rclb
jmp
adc
aas
add
and
cmp
add
xor
xrelease
and
das
fadds
xorl
inc
rcrl
mov
js
orl
cmp
fimuls
mov
loopne
mov
or
pop
mov
test
fwait
jl
xchg
xchg
orl
icebp
inc
imul
dec
push
dec
sahf
shll
or
hlt
xor
xchg
in
add
cmp
mov
idivl
jb
mov
push
or
adc
into
pop
pop
cmp
imul
jecxz,pt
jne
or
push
push
in
stos
mov
mov
add
inc
aad
push
sbbb
repnz
test
and
in
scas
jns
cmpsb
in
xlat
cltd
enter
pop
pop
push
stos
inc
xchg
rorb
cmpsl
xchg
mov
gs
add
out
mov
jg,pt
les
mov
outsl
pop
fsub
stos
xchg
int
rcl
pop
jae
sti
or
fcmovb
in
inc
fdivrl
or
sbb
loop
jmp
jbe
xchg
pop
adc
or
add
sbb
out
xor
adc
xor
nop
jb
into
inc
insl
push
xchg
shrb
jge
hlt
dec
imul
pop
inc
dec
sbb
xorb
jno
das
or
rcr
nop
imul
outsl
cli
dec
icebp
fnstenv
imul
iret
xlat
mov
data16
add
jg
dec
xchg
push
jae
mov
lock
push
into
mov
bound
push
daa
call
inc
cmp
jecxz
pop
outsb
mov
inc
pop
stos
sbb
ds
pop
xchg
sbb
add
test
scas
mov
push
loope
mov
gs
not
add
sub
inc
in
aas
cwtl
dec
hlt
jge
xchg
test
scas
mov
xor
shl
pop
int3
push
sub
pushf
cmp
push
ret
and
sub
ljmp
gs
lods
xor
shrl
mov
push
bound
push
xchg
push
mov
jle
mov
fnstcw
pushf
fwait
cmp
mov
call
mov
inc
push
pop
jnp
xchg
scas
cwtl
fisttpll
subb
stos
add
inc
movsl
test
aas
mov
adc
test
popl
enter
inc
jge,pt
divl
or
cmpsb
lea
mov
loop
cmp
clc
push
add
push
inc
inc
outsl
sti
inc
stc
adc
sbb
mov
mov
cli
xchg
repnz
testl
pop
outsl
or
jmp
push
jg
mov
push
jecxz
push
pop
inc
fistpll
frstor
insb
dec
or
sub
sbb
xchg
call
sub
xor
jbe
adc
pop
push
outsl
imul
push
rol
sub
mov
fdivl
push
stos
sbbl
fimull
fpatan
mov
pop
mov
mov
lea
xchg
mov
inc
mov
fwait
adc
fstpt
dec
push
or
out
icebp
cmp
jb
dec
cmp
push
mov
mov
stos
and
icebp
add
pop
outsl
filds
pop
mov
leave
jns
mov
xchg
cmp
push
or
jne
daa
pop
nop
fwait
stos
imul
mov
imul
pop
stc
lret
dec
mov
fs
xor
lcall
adc
jecxz
add
repnz
movsb
scas
xor
insl
shrb
inc
addr16
ret
mov
popa
mov
imul
ljmp
jne
dec
loope
cmp
test
ds
or
push
xchg
call
jno
in
jecxz
test
xchg
cmpsl
movsl
mov
ss
sbb
enter
push
jo
adc
cmpb
mov
jb
xchg
decl
sbb
ss
inc
inc
in
mov
inc
ljmp
mov
push
xchg
sbb
adc
and
cmp
insb
inc
ss
inc
and
cs
jo
loop
rolb
data16
out
push
aad
inc
inc
sbb
sub
or
jle
fcompp
addr16
mov
dec
stos
mov
fcompl
rcll
pop
xlat
xchg
sbb
xchg
rorb
adc
stos
shll
inc
jne
cmp
adc
test
cmp
xor
add
bound
outsl
insl
mov
dec
jo
dec
into
pop
add
loope
outsb
mov
lret
out
inc
enter
mov
int3
jmp
pop
add
sub
xchg
cs
out
clc
dec
push
lahf
fisttps
xchg
and
add
mov
and
mov
sbb
push
pop
and
ja
rorb
xor
xlat
inc
test
xchg
repnz
adc
jns
call
dec
and
mov
mov
rcr
jns
movsl
cld
xor
std
push
xchg
hlt
shr
cmc
push
cmp
sbb
fs
dec
cmpsl
mov
cltd
inc
inc
jne
jnp
dec
adc
into
dec
rcr
ja
inc
jg
mov
scas
daa
shr
inc
cli
add
and
inc
into
ljmp
sub
pop
nop
hlt
leave
push
stos
shrb
xlat
cmpsl
jmp
lds
cmpsb
push
mov
test
ja
int3
pop
adc
add
mov
push
xlat
cld
xchg
daa
daa
xchg
sbb
xchg
jge
in
adcb
mov
repz
loope
and
out
dec
mov
dec
cmp
out
and
imul
cltd
rclb
lcall
mov
xor
sub
lods
call
mov
leave
or
push
lea
stos
jnp
cmp
or
inc
jo
insl
lock
mov
int3
mov
jbe
lret
jmp
lea
push
lahf
push
or
fisubl
lods
jp
cli
dec
add
enter
add
lods
ds
adc
xchg
ljmp
daa
mov
inc
fists
je
mov
stos
adc
ljmp
mov
cmp
jbe
mov
cmp
mov
jge
pop
adc
nop
xor
mov
inc
push
jle
mov
repz
daa
out
mov
push
push
ret
movsb
fimull
cmp
sar
mov
xor
shll
adc
into
subb
mov
xorl
or
add
and
int3
lcall
addl
mov
decl
nop
xchg
pop
inc
mov
bound
push
mov
xor
inc
and
ret
sbb
mov
in
or
and
mov
sub
ss
inc
jg
or
fcomps
cmpsl
stos
stos
mov
jecxz
bound
or
cmpsl
int
xchg
dec
fidivs
push
stc
icebp
mov
pop
repz
push
in
or
lock
outsb
aad
leave
xor
and
imul
imul
cmp
lahf
mov
ja
push
push
mov
jge
or
sbb
xchg
mov
stos
js
clc
stos
sti
decb
mov
mov
hlt
sti
insb
loope
das
add
xchg
sub
cmp
push
cmp
adc
push
sub
ret
inc
mov
mov
mov
lret
jae
pop
and
das
sarl
cmpsb
mov
jae
push
fidivrl
aas
int3
adc
fstpt
imul
sbb
les
mov
adc
call
xchg
pop
rcrb
mov
aaa
test
push
pop
hlt
xchg
loop
cmpsb
out
lret
es
out
mov
dec
in
jmp
push
lret
jbe
cmpsb
insb
lahf
addr16
decl
push
shlb
orl
int3
in
mov
jbe
push
daa
add
xchg
cli
sub
xorb
movsb
push
into
dec
fistl
jne
adc
pop
fcomi
outsb
lods
cmp
pop
repnz
mov
decb
addr16
out
ja
popf
test
mov
add
int3
xor
mov
js
sahf
cmp
pusha
mov
sbb
xor
js
xchg
rorl
sahf
movsl
or
scas
imul
mov
in
push
int3
jle
or
cmc
xor
je
sub
sub
ret
cs
sub
sar
test
inc
adcl
mov
mov
dec
imul
xor
addr16
nop
or
les
mov
pop
mov
enter
push
inc
pushf
lahf
xor
stos
js
dec
sbb
mov
mov
sbb
ficomps
das
ds
pop
lock
rolb
lods
sub
sar
pop
jae
xor
xchg
cs
sbb
testb
sbb
call
idiv
lock
gs
ja
mov
out
cmp
xor
cmp
shll
and
push
lret
xorl
mov
and
push
ljmp
loope
mov
cmp
pop
sub
aaa
ljmp
loopne
and
push
xchg
fdivrs
scas
js
sbb
add
ljmp
out
dec
mov
pop
rorl
xchg
cmpsb
dec
loope
pop
punpckhwd
push
mov
in
dec
outsl
outsb
jb
push
inc
adc
dec
cmp
movsl
sbb
jae
lods
ljmp
lock
inc
dec
in
xchg
iret
adc
pop
outsl
roll
push
in
insl
lds
ss
cmp
enter
clc
aas
mov
test
push
push
dec
fdivrs
rclb
das
wrmsr
int3
push
out
pop
xchg
and
cmp
push
std
mov
mov
lods
pop
out
out
xchg
das
jmp
pushf
cld
stos
jmp
call
in
data16
mov
movsb
testb
ret
imul
or
js
scas
push
rcr
push
mov
push
iret
idivb
cmp
out
cmc
push
push
fmull
cmp
pop
push
orb
das
decl
jb
or
add
test
test
mov
je
loopne
loopne
jnp
jb
or
inc
mov
js
xor
jecxz
aas
jb
pop
out
pop
mov
and
enter
lds
aaa
push
mov
mov
push
sti
cmpsl
xor
or
add
sahf
xor
xor
pushf
jb
mov
push
nop
mov
sbb
scas
jge
test
xor
orb
sar
and
adc
popf
test
es
stos
jle
jae
pop
ret
shl
loopne
pop
or
jg
daa
adcl
adc
lock
cs
adc
pop
test
push
pop
lods
out
sub
rorb
add
push
mov
inc
xor
sbb
test
mov
push
ds
mov
sti
andb
push
enter
push
enter
xor
add
sti
imul
dec
xchg
imul
loopne
sbb
out
adc
push
pop
push
xorl
mov
mov
xor
lods
js
push
and
cli
jbe,pt
rcrb
mov
add
dec
dec
inc
fwait
push
ret
ret
xchg
bound
imul
pop
mov
cld
jo
gs
in
mov
cmp
call
jae
push
das
push
out
mov
movsb
test
inc
test
push
cmpsb
cmp
xchg
fisubl
cli
and
out
fadds
in
addr16
push
sub
adc
adcl
sbb
cmp
xlat
dec
fsubs
lcall
dec
push
rcrb
mov
std
jno
xor
dec
jbe
push
sti
lea
sti
pop
call
adc
clc
xchg
roll
xor
shll
shll
push
dec
outsl
ret
outsl
mov
out
fisubrs
sti
js
cmpsb
jbe
push
dec
jnp
fs
in
mov
jg
mov
add
scas
xor
fwait
mov
stos
pop
pop
cmp
sbb
push
xor
movsl
ljmp
xlat
lea
pop
cmp
stos
inc
movsl
inc
sub
sbb
cmp
sub
aad
repnz
fbld
repz
cmp
inc
ret
sbb
pushf
sub
sbb
adc
loop
jae
test
xchg
push
adc
in
lock
imul
nop
lret
push
std
lods
mov
sub
xor
mov
push
lahf
fs
pop
pop
sub
js
in
mov
xor
mov
xor
jnp
fbld
cmp
xor
sub
or
test
or
mov
mov
jp
mov
jbe
cmp
aaa
add
and
into
pop
cmp
push
fisubs
repz
mov
cli
or
mov
dec
push
push
arpl
cmp
sarl
xchg
std
adc
sub
mov
inc
push
sbb
outsb
inc
mov
out
jmp
cmp
fiadds
jnp
fldt
adc
nop
xorb
orb
sbb
xchg
ja
sub
cmc
mov
pop
pushf
or
ss
inc
mov
add
pop
push
rcll
outsb
das
iret
lds
icebp
or
psrlw
jns
mov
pop
sbb
paddd
cmpsb
push
pop
cmp
cs
adc
adc
sahf
ss
and
fisttpll
sbbl
push
shlb
fisttpll
jbe
xor
sbb
pop
test
jle
ds
jae
add
mov
divl
insl
aad
imulb
sbb
xchg
mov
mov
insl
dec
addr16
lahf
ret
test
mov
jb
test
xchg
fs
cltd
rorb
mov
mov
cwtl
fidivs
xchg
adc
shll
lock
adc
xor
cmp
fcmovu
aas
sub
push
jns
lret
push
mov
movsl
jno
imul
or
cmp
xchg
call
loope
jno
enter
cwtl
fstl
pushf
or
adc
loop
arpl
rorl
insl
pop
push
dec
fwait
dec
or
cmp
cmpb
scas
stc
sahf
add
leave
rolb
and
push
cli
jns
jmp
shll
enter
lea
mov
aam
cmp
push
loope
shrl
cs
ss
bound
sbb
cmp
ja
clc
stc
xchg
leave
stc
je
cltd
clc
insl
xlat
dec
loop
pop
mov
sbb
mov
xchg
fs
js
fldl
sbbl
dec
mov
lods
or
cmp
in
cli
outsl
ljmp
loopne
daa
xor
xor
les
inc
cmp
cmp
inc
xor
jle
ja
ja
and
add
popf
xor
add
std
add
aas
sbb
call
in
mov
pop
into
insl
std
into
adc
andl
pushf
repz
add
push
xor
xor
jg
arpl
mov
jge
lods
xchg
mov
cli
inc
insl
jbe
mov
test
sbb
jge
cmc
cs
sarb
jmp
imul
inc
or
jp
mov
or
movsb
mov
int
pop
ds
jnp
pop
mov
mov
cmpsl
mov
fwait
mov
push
imul
je
pusha
ret
dec
lea
and
add
repz
clc
adc
and
aad
ret
jge
sub
gs
cmp
gs
jg
aad
bound
or
hlt
pop
decl
imulb
adc
inc
add
and
cmp
das
push
jo
les
cmpsl
add
push
pop
jno
fst
in
xorb
mov
aam
pop
sti
push
es
cmp
jb
xchg
pop
mov
lret
addl
jp
and
jb
cld
xor
lret
jmp
movsb
jg
mov
mul
xor
lods
dec
and
addr16
fisttpll
xor
imul
fwait
test
jnp
or
loopne
sub
push
xchg
sub
stos
fmulp
das
jg
pop
enter
movsl
mov
cmp
stos
sub
jge
push
or
adc
cmc
mov
mov
push
add
mov
cmp
pushf
clc
jmp
enter
mov
xchg
push
movsb
repnz
cmp
sti
jnp
nop
push
xchg
cmpsl
sbb
arpl
mov
sbb
push
mov
mov
loop
and
cmp
inc
mov
jb
mov
scas
pop
jecxz
aaa
test
enter
rol
or
lret
mov
std
sbbb
orl
and
lods
jbe
adc
sbb
mov
shrb
or
cltd
loopne
inc
pop
int
cmpsl
lcall
xchg
push
jecxz
mov
push
push
add
cld
xchg
pop
rcll
lret
stos
in
out
push
dec
scas
pusha
dec
mov
pop
clc
jmp
mov
jno
sbb
jecxz
popa
adc
jnp
out
fcompl
stc
cld
arpl
xor
or
jl
insb
bound
scas
inc
mov
stc
dec
xchg
ss
in
scas
inc
and
add
fwait
adc
push
mov
mov
outsb
aas
ljmp
mov
jb
dec
mov
dec
bound
sub
cmpsl
sti
push
out
test
cli
iret
pusha
pop
test
cwtl
sbb
fsubs
push
mov
cmpsb
lods
sub
push
cli
insb
and
cmp
dec
adc
push
mov
ds
xor
addl
xor
xor
gs
pop
je
imul
push
lea
sbb
ljmp
gs
add
into
loope
adc
xchg
lock
mov
inc
pushf
inc
loopne
enter
cli
and
hlt
test
int
stos
fldt
cmp
in
add
fwait
push
push
xor
and
xchg
cmpsl
add
inc
xchg
jge
inc
xor
jmp
jae
push
stos
xor
cwtl
lds
movsl
mov
leave
sbbl
in
lock
hlt
jnp
sti
cmp
rcrl
sub
xchg
pop
adc
cmp
and
xor
add
push
popa
or
inc
xchg
jns
dec
xchg
cli
jp
or
pop
iret
mov
lret
and
jb
loope
xor
xlat
lcall
fisubrs
add
jle
pop
enter
fwait
loop
scas
adc
mov
sbb
rol
iret
rolb
mov
pushf
int
loope
jb
lods
popf
aas
or
cmpsl
fldenv
jle
lret
xor
out
daa
mov
inc
adc
sub
test
add
mov
push
fmuls
jb
inc
movsb
fucomp
sub
fbstp
push
mov
adc
ja
pop
xchg
cmpsb
push
inc
xor
in
fs
popf
testb
stos
pop
iret
cld
pop
aas
or
pushf
sti
cmp
iret
add
data16
les
adc
rorb
add
mov
pop
mov
lock
cmpsl
inc
es
mov
jmp
or
mov
daa
mov
or
pusha
mov
adc
push
and
mov
adc
cmpsl
lods
adc
cmp
xor
sbb
inc
int3
bound
xchg
mov
movntps
enter
xchg
into
jbe
adc
push
add
push
insl
rclb
arpl
mov
cmp
inc
mov
lods
jl
fwait
test
jl
mov
pushf
imul
adc
aad
test
inc
mov
mov
fidivrl
std
jecxz
sti
mov
and
and
lods
lds
fs
test
lock
add
mov
jae
mov
cwtl
dec
pop
or
or
shr
xchg
mov
and
cmp
inc
pop
mov
lret
sub
rcll
dec
ret
xor
ja
outsl
call
push
popf
sub
mov
stc
fs
xor
and
xchg
mov
idiv
inc
mov
fwait
mov
test
xor
js
dec
add
sbb
or
mov
lcall
push
aas
jae
mov
adc
enter
jne
xchg
jns
push
mov
pop
adc
or
xor
das
mov
int3
mov
pop
fadds
repz
sbb
into
in
push
push
and
sub
mov
jbe
jae
popf
icebp
scas
fnsave
cli
cltd
push
test
mov
sbb
stos
lret
jmp
fwait
push
mov
mov
inc
mov
push
out
lcall
inc
jmp
or
popf
lea
faddl
or
dec
xchg
inc
jl
jg
add
repz
dec
scas
cmc
push
inc
std
imul
es
adc
aad
sbb
loop
adc
mov
das
mov
bound
movsl
int
adc
jbe
bound
fwait
mov
ljmp
mov
jg
mov
addr16
push
dec
dec
mov
fisubl
add
mov
call
outsb
lock
jp
mov
mov
in
iret
jmp
sbb
push
mov
cmp
xchg
int
cmpsb
pusha
ret
testb
jo
hlt
mov
lret
lret
shl
adc
push
sbb
jmp
mov
scas
mov
lock
aad
mov
stos
mov
push
jae
xor
out
inc
je
jge
in
mov
mov
aaa
data16
pop
pop
xchg
outsb
sub
add
and
sub
lcall
push
pop
mov
xchg
jp
cltd
pushf
aad
mov
pop
cmpsl
xor
xchg
mov
ds
fmul
test
adc
mov
xor
push
jp
pop
adc
xor
xchg
stos
sbb
inc
fidivl
cmp
cltd
das
xchg
cmp
ret
pushl
pusha
push
jbe
mov
test
mov
sbbl
pusha
frstor
jne
pop
data16
clc
inc
sahf
jg
inc
and
ret
ds
push
adc
into
xchg
pop
mov
test
jb
and
jl
stos
repnz
xchg
clc
inc
mov
jmp
cmpsl
lret
data16
shlb
stc
cmpsb
test
jne
dec
inc
movsb
jg
and
cmc
fisttpl
pop
sbb
popa
in
mov
orb
or
cmpsl
outsb
add
fcomip
mov
aam
mov
into
xchg
in
ljmp
add
xchg
call
mov
test
fisttps
into
inc
jl
mov
cltd
cmp
pop
sahf
sub
dec
pop
mov
imul
mov
pop
aaa
fs
mov
jbe
mov
aam
pushf
lock
pop
or
sbb
cli
push
cld
jle
shll
enter
jle
lds
lret
fisttpl
sub
xchg
pop
jns
push
lods
mov
cmp
scas
loopne
push
dec
fdivrp
adc
pop
mov
fists
pop
aaa
hlt
xlat
cmpsb
sbb
outsb
push
mov
das
shlb
ss
mov
test
stos
mov
cmp
dec
mov
imul
loop
or
mov
pop
mov
mov
insl
xchg
stos
imul
pushf
inc
ficoms
jo
pop
xchg
repz
jae
pop
adc
imul
mov
stos
or
insb
loope
lcall
add
cltd
push
sarb
dec
adc
ficomps
mov
and
mov
sahf
out
adc
fildl
pop
add
addr16
xor
push
mov
jns
shrb
clc
push
inc
mov
jbe
test
add
pop
xchg
pushf
movsb
ja
mov
in
jmp
cmc
in
test
je
call
imul
fbstp
jp
xchg
mov
mov
test
inc
cmp
pop
test
jg
test
inc
push
andb
xchg
jge
jbe
nop
xchg
fmul
xorb
xchg
lock
hlt
in
sbbl
add
clc
mov
push
stos
xchg
jp
jge
std
rcrl
push
jno
xchg
pop
add
xchg
lds
sub
push
mov
stos
sbb
jnp
mov
test
ss
in
jge
pop
mov
mov
push
adc
imul
cmpsl
daa
nop
ljmp
sub
testl
outsb
cmp
shll
lock
or
cltd
add
push
jmp
lcall
push
or
subb
pop
pop
mov
into
jle
andb
jle
and
and
push
lret
psubsw
mov
es
test
mov
lret
sub
or
cwtl
pop
ja
dec
dec
out
add
mov
scas
push
ljmp
inc
inc
dec
cmp
test
push
cmp
and
jecxz
lret
cltd
jnp
adc
loope
imulb
lds
scas
xor
sub
jo
dec
sahf
add
pop
outsb
jbe
in
scas
nop
or
aaa
out
out
push
cmc
mov
stos
jg
inc
push
xlat
and
cmp
ret
cmp
test
lcall
sub
adc
shr
xor
mov
xor
xor
popf
scas
push
cli
push
mov
sahf
jo
dec
fldenv
push
stos
mov
jo
jmp
sahf
dec
fsubrp
adc
sub
fisttpll
sahf
js
enter
ret
jno
cmpsl
imul
mov
jg
jmp
or
mov
cmp
and
mov
stos
sti
rep
adc
adc
push
sub
loopne
and
jge
es
int
adcb
jmp
xchg
xchg
shrl
xchg
or
sbb
mov
out
inc
repnz
lret
and
jno
mov
push
mov
dec
push
or
ljmp
sbb
or
cmp
add
fsubrs
jno
hlt
sub
popf
push
loopne
xchg
insb
inc
mov
fstps
mov
mov
inc
mov
jle
sub
push
xchg
test
push
mov
and
and
adc
scas
xor
shlb
enter
pop
arpl
jo
lret
jecxz
mov
jnp
and
imul
lcall
lods
add
adc
mov
cli
ss
dec
mov
mov
incl
pop
jb
cmpsl
leave
xorl
pop
cli
repnz
push
insb
stos
iret
mov
mov
out
cmp
sbbb
adc
daa
fildll
popa
or
and
enter
fs
mov
enter
test
movsl
sub
sbb
xlat
xchg
fcompl
movsl
outsl
call
call
divb
xlat
sub
sub
mov
icebp
inc
inc
mov
dec
scas
aam
addr16
push
ja
in
ljmp
rcrl
jae
je
adc
adc
loope
sub
jmp
repz
jge
jbe
push
shrl
cli
arpl
dec
sbb
mov
dec
cmp
out
pop
inc
mov
pop
sti
xchg
push
fisubs
arpl
sbb
push
inc
xor
push
inc
inc
call
cmp
push
jbe
shl
std
sub
mov
leave
ds
push
mov
cmp
mov
xor
inc
jle
in
jecxz
xchg
sbbl
scas
dec
lahf
jg
loop
dec
cmp
xchg
and
push
aam
in
subb
sahf
inc
data16
packsswb
mov
insb
nop
mov
rcll
inc
testl
dec
fldt
sub
dec
repnz
icebp
xchg
pop
xchg
cmp
in
jp
mov
inc
pusha
stc
jle
loop
int
daa
hlt
jb
push
das
push
mov
or
mov
sbb
notb
add
hlt
adc
pop
jnp
test
xlat
mov
dec
pop
mov
and
jno
push
int3
pop
cwtl
or
adc
shll
pop
jno
sbb
cmpsl
inc
ss
popa
test
test
cmpsb
pushf
mov
inc
xlat
inc
mov
rcll
dec
xchg
jns
lock
pushf
bound
sub
add
test
outsb
mov
int
xchg
stos
cwtl
test
inc
cmp
stos
cwtl
inc
jo
inc
fisubrl
daa
shr
cmpsb
sbb
cmp
mov
push
in
adc
fisttps
outsl
and
stos
xchg
xchg
mov
xchg
lahf
mov
jmp
je
in
jmp
frstor
lock
xchg
pop
inc
or
add
jecxz
mov
ljmp
jne
pop
mov
leave
ja
push
or
dec
bound
popa
mov
pusha
cmp
push
jbe
push
or
insb
movntq
out
cmpsl
ss
lods
daa
inc
ret
lock
push
out
mov
lret
dec
dec
push
cmp
or
sub
lret
in
mov
mov
mov
pop
lret
push
movsl
fdivr
mov
xchg
cmp
lcall
push
popf
jne
rol
inc
inc
ds
inc
cmpl
mov
pop
pop
sbb
mov
xor
sbb
pushf
mov
push
pop
sbb
mov
xchg
mov
lods
push
mov
jp
aas
cmp
mov
mov
xor
out
mov
repz
mov
icebp
in
cmc
fistpll
cwtl
push
and
jo
rcrl
add
out
js
decb
sub
aad
mov
add
jl
jne
int3
push
les
loope
mov
cld
xor
jb
gs
lea
in
clc
shl
pusha
aam
lods
cmc
and
out
xchg
outsb
in
dec
push
sbb
std
sub
enter
flds
je
xor
or
dec
push
xor
adc
add
stos
jg
icebp
out
ljmp
rcr
call
andl
cmp
pop
div
and
push
mov
in
les
mov
mov
hlt
push
dec
add
cmpsb
dec
sbb
inc
int3
push
push
and
and
out
xchg
mov
repnz
xchg
push
sbb
inc
xor
sbb
int3
pushf
fsubs
pop
pusha
andb
xchg
nop
cmp
pop
dec
inc
xchg
fadd
lcall
or
mov
int3
mov
popa
or
je
mov
jp
popf
ret
loope
cld
out
push
pop
test
cli
jecxz
or
rorl
insl
scas
fsubrs
stc
xor
xchg
gs
pop
mov
jnp
push
lea
push
and
and
lods
cmp
stos
dec
push
into
add
aas
pop
pusha
inc
cld
jge
rcr
sub
xlat
jecxz
popa
mov
mov
fisttpll
sahf
mov
outsl
lds
jmp
dec
jno
mov
insb
out
es
xor
leave
pushf
inc
sbb
loope
mov
divl
push
in
xchg
pop
pop
sbb
cmc
idivl
pop
mov
pop
adc
mov
adc
ret
sbb
inc
shl
mov
xchg
xor
cmp
cmc
popf
mov
sub
insb
xchg
sbb
sahf
inc
push
mov
pop
mov
out
shll
aaa
pop
andb
inc
aam
pop
dec
lret
mov
in
mov
adc
out
xor
xchg
pop
out
sahf
inc
scas
lret
xchg
outsl
out
fisubrs
das
out
dec
cmp
fsubrl
test
imul
push
xchg
insl
mov
int
bndldx
cmpsb
nop
push
mov
xchg
stc
sbb
push
cmp
jg
and
sbb
adc
mov
push
aas
jge
or
mov
repnz
pop
mov
jns
and
insb
pop
addb
mov
jb
fsubs
sub
jns
adc
rclb
cmpsb
mov
push
adc
sbb
shrb
and
cwtl
dec
inc
in
push
icebp
lret
daa
dec
inc
mov
inc
sbb
jp
sbb
sub
adc
adc
dec
rorl
out
adc
mov
push
jmp
incb
jecxz
xchg
dec
cwtl
sbb
loope,pt
cmp
fistpll
adc
jns
out
rsqrtps
mov
fisubs
inc
in
aam
ljmp
dec
loop
sub
daa
ret
outsl
pop
add
sub
jp
inc
xor
lahf
out
ljmp
dec
push
insl
or
or
loope
adc
cli
push
popa
je
in
jns
insb
enter
enter
inc
shl
mov
rorb
ret
jbe
inc
aam
xchg
inc
hlt
sub
lods
in
imul
lock
and
mov
jmp
adc
mov
bound
inc
jb
push
adc
sbb
std
jo
jge
mov
mov
dec
cli
into
push
testb
shlb
popl
ss
nop
xor
divl
xor
xchg
pop
add
loop
push
push
ds
rclb
arpl
adc
fsubr
mov
and
popf
xor
pushf
mov
push
xchg
test
mov
sub
lea
lods
mov
out
or
jo
shlb
xor
mov
pop
icebp
xlat
negl
lods
sahf
add
xor
cmpsb
lahf
add
ds
loop
inc
ret
sub
mov
insl
cmp
pop
adc
jnp
aam
sub
cmp
popa
add
sub
dec
fstps
pop
cmp
pop
xchg
add
es
pop
mov
minps
mov
jmp
mov
repz
mov
xchg
pop
fistps
out
inc
ret
aas
xor
loopne
popa
dec
daa
jnp
xor
add
movsl
adcb
les
or
sbb
or
sbb
xor
jmp
sub
cli
pop
jns
fisubrl
inc
dec
and
dec
sbb
sub
sub
adc
mov
pusha
mov
shlb
jle
dec
push
inc
xchg
cmpsl
test
mov
inc
arpl
call
fldlg2
ror
insl
xchg
push
mov
outsl
cli
dec
mov
mov
pop
pushf
jo
cmp
inc
repnz
sahf
lahf
jae
bound
inc
xchg
jno
hlt
and
aad
cmc
xor
adc
xchg
dec
imulb
daa
mov
scas
xor
or
xchg
outsb
addr16
push
push
xchg
push
dec
pop
adc
mov
xor
mov
xor
mov
popa
mov
cmc
js
lret
jnp
inc
leave
cli
je
xor
shlb
sbb
mov
jl
daa
cltd
cmpl
mov
mov
je
insl
sbb
jnp
in
add
or
jns
xchg
dec
int
and
or
sub
inc
stos
test
ds
loope
dec
sbb
and
ljmp
fistpll
fwait
cmp
mov
add
xor
out
adc
and
cltd
and
and
js
xchg
fisttps
and
add
lods
pop
push
bound
xchg
dec
pushf
adc
loop
pop
inc
sbb
cld
xor
push
rcrb
fldl
pop
shlb
inc
add
push
push
jns
arpl
iret
or
imul
and
cwtl
dec
inc
in
jno
lds
jmp
push
mov
inc
jb
out
orb
cmpl
adc
loopne
inc
add
cmp
pop
sbb
test
mov
mov
sti
call
xlat
lret
dec
jns
jo
xchg
inc
mov
adc
lret
lods
mov
cmp
aas
shll
dec
int
js
pop
mov
adc
sar
xor
popf
sub
add
into
push
jns
xor
add
pop
mov
aad
loope
cmp
inc
repz
xchg
or
popa
xor
xchg
cmpsb
lods
lods
lcall
xchg
popa
bound
gs
sbb
dec
incl
out
pop
jae
pop
mov
pop
jnp
xor
or
rclb
jge
mov
push
subl
jl
xor
jp
lock
fistps
jae
pusha
mov
pop
hlt
rol
lret
pop
mov
mov
xor
in
iretw
sub
ret
mov
mov
lea
cmp
pop
outsb
cmp
mov
xor
lret
outsb
gs
mov
push
jp
pop
push
es
lahf
ss
and
xor
je
adc
xor
sbbl
mov
xchg
mov
jns
bnd
add
pop
and
add
jno
mov
icebp
adc
xchg
int3
jne
sbb
mov
mov
aad
daa
jno
mov
mov
fmull
or
mov
repnz
or
and
lret
shrl
sti
in
aam
adc
mov
es
mov
unpcklps
cmc
cmp
adc
pop
ja
jge
test
lahf
fstpl
push
xchg
das
cltd
mov
pop
push
mov
dec
add
call
push
xor
jae
add
inc
xchg
pop
insl
cmc
sub
jb
subb
lock
pop
sti
cs
lahf
lock
mov
test
cmp
cwtl
hlt
arpl
shlb
das
arpl
push
ja
test
sbb
mov
mov
in
push
add
xchg
inc
nop
adc
test
add
loopne
paddq
and
jb
jmp
push
lea
or
push
jae
out
leave
lret
imul
push
mov
or
jne
std
movsl
je
int3
adc
loopne
xchg
adc
ljmp
cmpl
repnz
xchg
and
decl
movsl
cmc
and
inc
push
jl
inc
mov
scas
popa
shlb
test
stc
mov
xchg
push
test
inc
sbb
pop
xor
pusha
mov
das
incb
test
sbb
mov
dec
jcxz
nop
mov
or
mov
loopne
movsl
push
loope
and
orl
sahf
or
lds
push
mov
jge
bound
out
aam
movsl
out
out
push
in
cmpsl
and
mov
xchg
sbb
aas
lods
ret
mov
aam
popa
insl
dec
sub
pushf
xchg
fists
addr16
sbb
sarb
push
xchg
inc
sbbb
imul
stos
out
mov
and
jp
out
sbbl
cmp
sti
ds
jo
mov
lret
lret
fnstsw
popl
jg
iret
inc
ss
xchg
pop
xchg
out
dec
mov
adc
mov
ret
xchg
cmpsl
inc
pop
popf
xlat
sahf
or
xor
ret
jmp
inc
ljmp
push
or
fistl
cmp
sti
ljmp
mov
mov
push
mov
minps
xorb
lods
test
outsl
insb
sub
bound
xor
dec
push
lods
dec
cmpsb
jne
xor
push
mov
rclb
jno
test
int3
and
or
cmc
cmp
fs
lcall
xor
push
inc
loope
loope
imul
push
mov
or
in
xlat
push
dec
push
aad
cli
cli
fisttps
inc
fsubs
or
adc
jg
xchg
pop
jne
out
test
sub
fistps
pusha
jno
mov
mov
and
mov
pop
in
lcall
repnz
pop
int3
lret
mov
mov
adc
sbb
adc
cmpsb
dec
dec
xor
pop
dec
shl
inc
xlat
inc
nop
ss
xor
add
mov
arpl
mov
jbe
fldt
push
dec
pop
lret
scas
popa
ret
outsl
lods
cmpb
xlat
mov
or
xor
cwtl
mov
mov
rcrl
outsb
mov
outsb
std
xor
mov
shll
adc
or
iret
lret
inc
push
cs
cwtl
pop
je
push
stos
stc
jge
jg
or
sub
inc
jne
jg
mov
xorb
add
xor
stc
push
jo
idivl
data16
push
adc
mov
lahf
push
pushf
mov
imul
aad
jge
fst
negl
cmpsl
ret
mov
jl
sub
sbb
ds
mov
sahf
shll
xor
mov
clc
cmpl
pop
jbe
dec
or
add
enter
shlb
and
sbb
or
adc
pusha
ljmp
je
mov
push
int
out
xchg
jle
cmp
out
out
cli
stos
xchg
not
ljmp
sahf
fstpt
int
inc
mov
jp
rclb
add
popa
rol
mov
mov
mov
fidivl
out
mov
shlb
sbb
subb
call
fwait
mov
xor
rorb
push
push
sub
push
test
enter
mov
or
arpl
jg
push
in
push
dec
mov
jp
inc
fisubrs
jg
inc
jmp
push
add
jge
and
xor
arpl
pop
jns
inc
into
sbb
loope
dec
fsubs
data16
out
inc
mov
leave
or
in
lret
mov
inc
xor
sbb
lea
notb
push
push
sbb
fdivp
lret
xchg
push
dec
jno
imul
inc
mov
jge
cmpsb
aad
inc
mov
pop
add
mov
adc
inc
dec
lods
mov
mov
pushf
mov
jb
out
mov
push
in
adc
insl
inc
jnp
lgs
aad
imul
pop
jge
std
sahf
jb
mov
cli
dec
fists
or
sarb
mov
add
daa
mov
rcrl
push
or
inc
cmpsb
sbb
cs
push
dec
cld
mov
push
push
inc
xlat
mov
arpl
shll
pop
and
ss
push
mov
in
sbb
or
andb
aam
xchg
cmp
xorb
jge
imul
int3
jmp
mov
xchg
fidivrs
test
pusha
mov
xchg
repz
std
cmp
mov
pushf
mov
mov
jb
inc
mov
push
fimuls
lods
outsl
mov
xchg
cmp
cmp
in
push
cmp
hlt
leave
lcall
subl
dec
call
jno
mov
nop
sbb
push
mov
or
shrl
sub
mov
jne
lds
dec
fldcw
mov
xchg
fimull
ret
push
push
das
bound
xchg
imul
sub
fcmovne
push
and
and
fidivl
gs
aad
or
lea
roll
push
fdivr
pushf
decl
sbb
xchg
cld
pusha
inc
data16
out
mov
push
mov
xor
out
daa
dec
fidivrl
jp
dec
sti
loop
insl
dec
cmp
hlt
and
push
add
mov
xchg
inc
pusha
aaa
jns,pt
jns
out
and
test
pop
cmp
jbe
and
adc
imulb
jno
popa
out
jae
cmpsl
xchg
pop
jbe
mov
push
bound
mov
jo
out
or
jg
ret
push
icebp
aam
or
xor
lea
lret
pop
jnp
and
dec
mov
int
sbb
cmp
fsubrl
adc
mull
dec
neg
ja
dec
insb
les
jmp
loopne
and
sub
lods
push
pop
jg
pusha
lea
arpl
lret
mov
sub
dec
adc
cmp
test
inc
daa
int3
addr16
adc
ret
mov
aad
cs
xchg
mov
mov
fs
dec
stos
cmc
into
pop
mov
add
mov
mov
adc
xor
mov
cwtl
and
movsl
arpl
jno
test
ds
inc
sub
sub
imul
mov
scas
lcall
cwtl
iret
out
or
fdivrs
js
jnp
fsubrs
or
xor
pop
sub
or
lcall
dec
cmp
test
das
loop
xlat
or
sub
rol
jge
mov
imul
ljmp
repz
call
test
addr16
test
adc
mov
aam
xchg
pop
test
xor
sub
outsl
mov
imul
mov
jp
lcall
int
adc
sbb
jae
xchg
test
push
add
bound
mov
jno
xor
fbld
push
jmp
cwtl
sub
and
mov
ret
lcall
mov
iret
jg
call
mov
rcl
cmp
gs
sbb
jl
shll
jb
mov
and
cmp
xor
cmp
shl
pusha
ljmp
in
les
xchg
cmp
pushf
and
mov
or
adc
notb
add
clc
xor
fiaddl
popf
in
cmp
mov
hlt
adc
xchg
mov
movsb
into
repnz
xchg
js
fxch
and
pop
adc
jns
andb
xchg
mov
stc
shlb
jg
xor
push
fisttpll
push
xchg
loop
mov
in
cmp
andl
jle
jmp
xchg
fcomp
clc
inc
xchg
sub
in
push
mov
clc
in
stos
in
mov
sub
push
dec
div
out
es
mov
add
in
insb
dec
jnp
xchg
mov
inc
sti
loop
out
push
mov
mov
or
xor
pushl
aaa
mov
mov
jb
or
popa
fdivl
popa
inc
pop
xchg
cld
cmc
mov
inc
ret
inc
enter
dec
mov
xor
sbb
cmp
mov
or
aas
xor
fidivl
rorb
adc
pop
call
or
pop
mov
push
test
dec
pop
push
movsl
ljmp
push
fnstsw
es
mov
lret
je
ja
or
sbb
adc
testl
and
push
xlat
jo
je
push
or
mov
ss
aaa
or
inc
fists
xor
insl
aad
cld
movsl
dec
insl
jne
sub
add
arpl
jle
fisttpl
insb
mov
push
jge
jno
sub
xchg
xor
sub
dec
xchg
and
or
out
leave
out
push
fwait
push
pop
add
push
cmp
or
push
and
gs
push
cmpsl
dec
lea
cltd
jmp
xchg
lahf
setge
jno
pushf
push
lea
scas
add
mov
add
lret
in
add
test
xchg
cld
cmpl
inc
test
cmpsb
mov
mov
jo
pop
mov
xchg
pop
pushf
movsb
lods
aad
jns
jbe
scas
inc
xchg
xchg
push
insb
cmp
adc
popf
sbb
in
jae
outsb
mov
jo
jmp
in
fbld
push
nop
adc
jp
mov
fdivs
jp
scas
cltd
mov
ljmp
aaa
lods
je
sub
test
xor
cmp
mov
fsubp
mov
and
push
test
int
sbbl
or
leave
inc
xchg
dec
sub
cmp
xchg
je
cwtl
or
and
test
push
pop
sahf
pop
test
add
popa
xor
les
test
stos
inc
mov
das
or
add
add
and
push
je
dec
cmp
int3
mov
inc
repz
sahf
lret
sbb
jo
in
hlt
sti
lret
test
and
fdivrs
mov
dec
add
das
pop
push
pusha
test
aam
sbb
incl
xor
mov
and
pop
xchg
or
clc
mov
shrb
arpl
xchg
call
aam
pop
fwait
xchg
fldcw
sbb
xor
fbstp
pop
gs
rcll
cwtl
jbe
xchg
je
out
xchg
push
cmp
int3
fdivs
fwait
clc
das
sub
pop
paddusw
pop
clc
addb
sub
mov
xorb
push
pop
sub
dec
sub
rclb
mov
pop
scas
hlt
cmp
in
jno
cmpsb
rorl
and
in
jg
cmp
jno
jmp
test
adc
js
inc
popa
scas
pop
ds
aam
js
testb
add
daa
push
insl
lret
ret
pop
push
pslld
push
dec
jb
add
fxtract
jbe
aad
sub
call
cmp
jmp
fidivrs
pop
xchg
xchg
cmpsl
sub
data16
test
mov
rorl
dec
xor
fcmovu
jle
mov
hlt
and
cmp
fwait
inc
cmp
and
or
lods
lods
cmp
pushf
cmp
mov
mov
mov
insb
xchg
mov
addr16
imul
add
test
inc
xor
movsb
and
xorb
into
loop
add
push
pop
notb
jb
jb
rclb
add
mov
cmpsl
or
in
lea
sub
xorl
dec
jl
clc
mov
fimull
repz
jg
jp
cltd
xsha256
cmpsb
push
sbb
or
xlat
xor
cmc
ljmp
shr
fld
out
std
push
cmp
ds
jge
es
xor
sub
xchg
and
notb
pusha
adc
pop
sub
mov
bnd
insl
pop
mov
in
das
hlt
icebp
xchg
xor
cwtl
xchg
dec
jbe
add
sub
xor
push
push
dec
jmp
mov
jecxz
stos
jbe
ret
fwait
out
mov
mov
jge
push
inc
jp
mov
pop
les
push
scas
pop
ficompl
lods
cld
cmp
aad
lods
jl
dec
dec
repz
negb
ret
and
in
fsubl
xor
push
mov
outsl
jb
int
rorl
xchg
int3
dec
mov
add
xchg
loop
out
mov
sbb
les
xor
orb
fdivs
dec
push
sbb
sbb
decl
je
jbe
in
gs
aam
or
inc
lcall
imul
push
mov
lds
lahf
push
lcall
adc
shll
es
cmp
or
adc
mov
lret
sub
dec
jle
mov
mov
leave
out
inc
insb
add
pop
mov
push
push
stc
cmpsb
push
loope
call
addr16
movsl
enter
lcall
insb
fs
jg
push
pop
cmpsl
xor
add
loope
add
call
in
cltd
daa
popl
pop
lret
cmp
addr16
add
push
decb
add
jne
or
orl
mov
shlb
cmp
lret
pop
js
stos
mov
pop
je
movsl
popa
xchg
in
mov
cld
std
and
push
cmp
dec
pop
adc
dec
lahf
adc
leave
notb
outsl
dec
outsl
adc
outsl
xchg
and
mov
sti
add
and
lods
bound
lret
push
sbb
jnp
cmpb
jge
nop
xchg
insb
scas
adc
ss
fisttpl
outsl
dec
sub
ja
jnp
outsb
adc
and
pop
xor
mov
cli
std
jl
jae
pop
dec
outsl
orb
dec
out
sbb
lret
xchg
mov
inc
sarl
pop
mov
sar
push
icebp
adc
stc
test
das
mov
cltd
and
and
ja
lock
cs
sub
push
push
cltd
inc
movsl
xchg
sbb
mov
fwait
xor
repz
mov
mov
mov
mov
in
ret
nop
dec
jne
jo
pop
mov
sub
mov
es
xlat
or
fstl
jp
into
icebp
push
pushl
sbb
adc
and
or
sarl
xor
test
and
bound
sbb
cmp
jecxz
popa
sbb
icebp
pop
dec
mov
sub
rcrl
mov
push
dec
inc
push
ljmp
ja
ds
jg
das
push
cmpsl
add
movsb
jmp
fcmovnb
arpl
and
push
inc
push
mov
in
sbb
mov
cli
lret
stc
fisubrl
sub
jno
push
out
mov
push
mov
aaa
sbb
insl
mov
lea
aad
mov
ljmp
xchg
cmp
insl
mov
push
jns
mov
add
xchg
mov
jno
dec
rcrl
mov
fmul
add
pop
cmpsl
cmp
out
dec
dec
xchg
dec
mov
mov
hlt
jo
xchg
add
xlat
fcoml
mov
ficomps
out
aas
leave
and
mov
inc
sub
push
in
iret
jl
subb
inc
dec
call
sarb
bound
sti
mov
jle
fildll
aad
adc
cmp
into
decb
ss
push
jne
popf
lahf
jecxz
xor
jo
inc
ds
jb
das
arpl
popf
xchg
sahf
lock
aam
adc
fucom
push
and
fldl
xchg
push
lahf
mov
jl
mov
and
es
mov
insl
mov
imul
rcr
adc
pusha
ljmp
sub
xor
or
je
mov
cmp
adc
lock
scas
pop
lods
pushf
subl
mov
into
mov
repz
shll
sbb
jne
ds
jg
enter
js
mov
jne
ja
popa
orl
lods
mov
xchg
mov
jb
and
stos
cmpsb
or
das
in
fs
rolb
inc
push
xchg
inc
test
int
or
mov
adc
push
cltd
mov
mov
sbb
dec
sub
bound
adc
sbb
je
mov
out
imul
mov
aas
jnp
mov
inc
mov
or
nop
pop
mov
out
aam
mov
mov
cmp
lcall
push
cld
daa
mov
xchg
imul
push
jae
xor
in
adc
lret
test
fabs
xchg
mov
fidivl
mov
stc
xchg
sub
mov
dec
sbb
push
jmp
clc
shrl
dec
in
cwtl
xchg
andb
out
cld
scas
lock
mov
cld
leave
dec
ja
sti
sti
push
xchg
ds
lods
lahf
jg
js
ficoms
dec
std
push
inc
iret
out
mov
pop
std
xchg
inc
pushf
ds
lods
test
sbb
xchg
push
movsl
sub
testl
mov
call
aam
fisttpl
cmc
fstpl
xchg
jae
add
ds
mov
sbb
out
bound
mov
jbe
push
iret
dec
lods
or
jp
aam
ret
dec
pushf
xchg
outsl
mov
mov
roll
inc
push
mov
bound
sti
clc
fidivrs
sti
mov
lods
inc
xor
lods
popf
mov
cld
sub
out
lcall
mov
cmp
loope
jno
mov
pop
jne
sbb
test
mov
dec
pushf
inc
bsf
dec
sub
stos
cs
nop
movsl
in
enter
push
lock
mov
out
aad
rolb
cmpsb
leave
and
je
adc
mov
push
paddusw
adc
pop
pop
je
andb
lcall
shrl
and
jb
ret
mov
pop
mov
dec
sub
rcrb
sbb
xchg
lds
daa
pop
scas
and
aad
pop
mov
push
add
test
out
lret
xor
je
mov
xchg
testl
jb
push
jne
inc
scas
mov
divb
jb
mov
ss
popf
pop
pop
daa
outsb
stos
sub
hlt
cmp
lcall
ret
and
or
adc
mov
jns
jnp
outsl
out
cmp
cwtl
add
add
push
jecxz
cwtl
outsb
adc
xchg
add
test
movsb
sub
sbb
dec
push
mov
jo
cs
inc
repnz
pushf
inc
fidivs
xor
dec
adcb
out
xchg
stc
mov
mov
cmp
sub
dec
sbb
mov
cli
aam
sbb
sbb
add
xchg
push
arpl
add
pop
inc
mov
or
movsb
scas
xchg
jne
and
inc
mov
add
mov
xchg
adc
cs
fcoml
jmp
int3
lahf
xor
in
sbb
push
pop
into
int
jns
jg
sub
nop
movsl
cmpsb
mov
mov
dec
and
xlat
stc
imul
int
add
scas
mov
sub
aad
sbb
loopne
or
icebp
push
dec
xor
repnz
xor
sub
pop
jno
and
loopne
ds
in
sbb
in
adc
shll
pop
insb
add
rolb
xchg
pop
icebp
xchg
push
jg
mov
dec
jp
adc
fldt
or
jp
lea
push
mov
xor
inc
sbb
mov
push
lock
stos
push
enter
orb
sub
push
ret
scas
push
and
faddl
push
xchg
outsl
xor
stos
xor
push
lock
scas
out
xor
loopne
pop
es
push
sub
dec
mov
test
fdivrl
push
pushf
and
mov
js
cmc
pop
aam
in
jbe
dec
or
pop
jnp
push
nop
out
andl
or
mov
je
add
fbstp
and
xor
in
inc
fmuls
sub
push
or
cmpsl
lahf
push
ja
pop
sti
mov
out
mov
and
scas
cmp
push
add
repz
stos
mov
ja
inc
mov
pop
outsb
lock
jno
loop
add
lcall
hlt
pop
pop
mov
sti
inc
add
shlb
push
dec
sub
mov
iret
aam
inc
or
cmpsl
mov
xchg
lcall
loopne
mov
push
je
mov
out
xchg
cmp
or
in
mov
xchg
out
bound
add
mov
dec
mov
popl
mov
insb
push
ret
jnp
fists
cmc
inc
fisubrs
and
push
dec
mov
subb
sti
mov
inc
pop
jne
inc
dec
xchg
dec
and
pop
pop
xor
mov
xor
loop
jno
adc
sub
jmp
jns,pt
xor
cmp
push
cmpl
pop
push
cmp
orb
es
fcmovbe
fcoms
dec
mov
mov
sahf
movsb
in
pop
ret
pop
clc
lcall
add
jns
call
xor
js
orl
or
xor
mov
sbb
fcoml
jmp
sbb
in
popa
push
rcr
mov
pop
test
and
je
sbbb
test
xor
and
push
sub
testl
mov
mov
es
mov
or
inc
or
lods
push
cmp
push
flds
adc
lcall
or
or
push
rcrl
dec
pop
das
sbb
outsb
fisubs
fwait
rcl
cmpsb
ror
stos
mov
cmp
mov
dec
jge
jns
int
jg
cmc
outsl
wrmsr
sbb
push
xchg
mov
jno
cltd
gs
scas
pushf
pop
out
cld
insb
loopne
int
fldcw
jecxz
jmp
mov
fistpll
push
jnp
hlt
arpl
xlat
or
mov
pushf
arpl
int3
push
adc
ss
popa
jno
cmp
sbbl
cmp
iret
push
inc
bound
fisttpll
jp
mov
sahf
or
jmp
and
jl
popl
stc
mov
std
pusha
adc
add
outsl
mov
xor
aas
or
aad
call
lods
jecxz
inc
bound
adc
out
int
xchg
test
sub
cmpsb
in
movsl
inc
cmp
mov
jmp
mov
adc
sti
sti
xchg
jp
fsubs
in
stc
push
cmpsl
add
xchg
insb
mov
push
imul
test
push
pop
push
mov
mov
dec
mov
lds
test
gs
test
cmc
pop
in
jne
sub
inc
fistpl
or
popf
les
jns
mov
sarl
cmc
test
jbe
movsl
nop
cmp
sahf
mov
xchg
mov
sub
popa
mov
adc
dec
cmc
jne
test
aad
push
xchg
aam
hlt
jmp
push
shrl
call
jno
fistl
or
xchg
mov
sbb
push
popf
stc
adc
std
adc
imul
pop
ret
xchg
mov
mov
and
sbb
push
cmp
sbb
cmp
or
fsubr
test
cs
fbld
mov
or
in
pop
inc
mov
add
pop
out
sbb
cli
jmp
aaa
bound
popa
sub
mov
lcall
or
cmp
jo
leave
outsb
cmc
jnp
sbb
cmpsl
push
sub
sub
aaa
in
sub
les
and
iret
push
pop
jb
rdpmc
je
jne
divb
aam
out
lret
jg
enter
pushf
xchg
stc
aad
push
rorb
sbb
jo
fs
jo
pop
cmpb
mov
mov
push
ret
cli
adc
jo
mov
mov
aad
loopne
adc
ss
cli
xor
or
outsl
cmpsl
cmp
fwait
roll
fbld
ja
push
and
or
ds
lds
xchg
pop
or
mov
inc
cld
roll
xchg
icebp
inc
or
inc
adc
and
aaa
or
inc
cmp
cmp
cltd
and
ret
xchg
cwtl
pop
int
in
add
pop
cmp
or
pmulhw
push
jb
push
add
xchg
mov
out
lods
mov
jns
pop
inc
stos
jno
pop
es
xchg
cmp
data16
outsl
inc
jecxz
inc
pop
adc
das
dec
xchg
mov
push
and
cltd
stos
aad
mov
mov
das
pop
test
mov
mov
divl
out
xchg
ljmp
fs
shll
sbb
lock
vmulsd
test
jmp
mov
bound
stc
and
mov
lds
lret
hlt
pusha
mov
mov
mov
mov
lock
and
rolb
insb
push
dec
cmp
xchg
in
and
leave
stos
aam
add
mov
das
dec
or
or
xchg
icebp
sbb
stc
pop
pusha
scas
popf
push
imull
jb
xchg
leave
dec
or
pop
sub
hlt
add
add
push
scas
add
test
out
sbb
lret
cmc
jecxz
lret
imul
cmp
rclb
je,pt
inc
lret
fistpll
imul
ds
jo
mov
pusha
pop
hlt
pusha
lret
jns
xchg
mov
add
movsb
mov
lret
das
sahf
andl
mov
xor
ja
cmp
outsb
sbb
or
xor
cmpsb
test
xchg
cmp
pushf
mov
xchg
enter
sbb
dec
sub
inc
test
mov
bound
and
arpl
arpl
sbb
mov
or
inc
jno
aaa
adc
in
mov
mov
leave
in
jl
mov
fs
xor
in
sti
nop
lods
arpl
leave
push
pop
insb
lods
movsl
xchg
xchg
andb
lock
pop
xchg
cmpsb
cmp
nop
cwtl
mov
and
xor
mov
pop
lods
insl
sti
jg
adc
sub
cmp
call
jbe
es
aaa
mov
mov
js
enter
xchg
xlat
icebp
adc
xchg
mov
outsb
fistl
fsubs
pop
pop
pop
push
arpl
sub
fwait
mov
in
jmp
repz
sti
mov
cmp
mov
movb
scas
in
fldl
cmpsb
daa
pushf
xor
mov
insl
sub
lea
mov
shrl
fisubrs
dec
loope
adc
lods
inc
xchg
in
and
popa
lds
sub
mov
sbb
dec
adc
mov
addr16
in
mov
inc
out
mov
cltd
imul
mov
dec
shll
and
jns
mov
mov
mov
iret
xor
sbb
sahf
cmp
cltd
ljmp
inc
std
shr
and
or
loop
jo
push
add
lret
dec
and
push
push
loope
jmp
inc
sub
push
mov
pop
mov
lahf
mov
inc
mov
sbb
rcl
ljmp
nop
sarb
push
scas
in
dec
sub
xchg
insl
jmp
mov
lea
clc
pop
mov
lcall
adc
testl
inc
mov
dec
call
outsb
inc
test
scas
mov
push
adc
ds
std
jo
adc
xchg
std
sbb
xor
fiadds
into
in
or
mov
push
pop
xor
cmp
push
mov
sbb
out
mov
push
aas
loope
xor
xchg
add
fucom
push
jbe
mov
sbb
mov
mov
dec
data16
aam
push
dec
and
lds
repz
jns
mov
lods
jle
mov
cld
pop
sti
jecxz
push
sahf
cmp
insb
mov
pop
insl
push
in
stc
faddp
scas
jns
outsl
add
xor
outsl
jns
inc
pushf
pop
cltd
fwait
xchg
inc
shrb
adc
stc
push
sub
ja
cmpsl
mov
pushf
outsb
mov
mov
je
neg
inc
sub
push
dec
add
mov
sub
sbb
xchg
stos
pop
sub
inc
dec
popf
stc
into
mov
or
mov
mov
popf
ret
cld
js
mov
fstpt
frstor
add
js
dec
adc
andl
lock
out
repnz
sar
cmp
mov
ss
hlt
xor
xor
dec
fcompl
hlt
rcll
fwait
and
lahf
cmpsl
fidivl
inc
mov
xchg
sbb
cmp
cmpsb
ficomps
add
pop
add
rol
mov
mov
xor
jnp
pop
lcall
sti
cmp
je
and
sbb
mov
mov
ja
pop
xor
xor
jne
mov
cli
push
decl
jne
in
push
daa
xchg
iret
jnp
stc
mov
popf
mov
push
xchg
ror
mov
cmp
cmp
mov
pop
dec
fldcw
pop
mov
xor
mov
in
push
sbb
inc
js
inc
push
inc
mov
sbbl
fistpll
popa
xchg
roll
mov
ret
dec
enter
xor
xchg
addr16
push
add
add
shll
stc
mov
sbb
and
add
idivb
out
push
xor
pop
call
jnp
iret
push
push
aam
add
out
mov
inc
mov
inc
push
lahf
fildll
aam
movl
aas
xchg
push
sbb
inc
mov
popf
jae
sub
pandn
pop
xor
adc
mov
xor
ss
test
je
cmpsb
movsl
and
scas
push
mov
frstor
fstpl
jbe
dec
insl
jne
mov
and
aas
mov
or
inc
ret
ret
xlat
mov
push
dec
das
cli
jmp
fwait
jo
shl
in
enter
or
cmp
inc
popa
jbe
xchg
mov
adc
data16
jo
dec
int
leave
insb
xchg
pop
add
pop
mov
imul
fiadds
mov
add
ds
dec
cli
jae
push
mov
inc
adc
add
xchg
enter
ja
lret
je
cmp
xor
imul
add
das
int3
fs
jae
and
xchg
adc
adc
or
aas
js
shll
and
in
push
stc
push
js
insl
outsl
push
jg
fwait
mov
mov
out
push
cmpsl
or
mov
adc
insl
imul
pusha
mov
jb
inc
or
lea
inc
das
scas
nop
ror
sbb
daa
jb
jbe
nop
and
shrl
sbb
pop
daa
out
push
das
arpl
sti
inc
loop
dec
add
movsb
jne
loopne
bound
fidivrs
push
mov
fs
jno
fistpl
pusha
test
rcll
fmuls
lods
daa
popa
xor
xchg
mov
mov
sti
mov
pop
mov
mov
js
mov
and
sub
jae
add
xchg
movsb
xchg
sub
xchg
jecxz
dec
mov
in
loopne
movsb
shl
roll
iret
jne
cwtl
imul
cmp
dec
mov
jne,pt
call
xchg
movsl
aas
xor
test
das
push
stos
and
ret
xor
sbb
mov
jne
test
xlat
mov
icebp
inc
outsb
sbb
or
fiadds
pop
mov
push
pop
and
insl
xor
xchg
in
cmpsl
negb
mov
scas
ljmp
jmp
inc
pop
or
sahf
cld
cltd
int3
sarb
pop
or
adc
push
cmp
insl
cmp
sbb
jp
out
mov
mov
mov
mov
xor
loop
inc
lret
mov
sub
push
sub
cs
push
aaa
push
or
in
test
jg
jne
and
outsb
sbbw
add
adc
punpcklbw
mov
mov
and
addr16
repnz
call
and
repnz
pop
or
mov
inc
inc
sbb
loopne
inc
mov
pop
std
or
and
mov
mov
hlt
jns
cmp
mov
mov
and
std
iret
hlt
fmull
push
lret
popf
sbb
scas
jbe
mov
xchg
mov
int3
push
loopw
add
pop
sbb
and
fsub
sub
jbe
jecxz
push
ljmp
sub
test
in
arpl
mov
pop
adc
sbb
ljmp
mov
sti
adc
mov
adc
mov
jae
inc
aaa
push
dec
jl
adc
cmp
mov
jp
hlt
dec
jns
lret
and
ja
ret
xchg
jnp
mov
es
pop
push
nop
mov
ret
push
xchg
xchg
scas
fcompl
or
jbe
jle
jo
std
pop
inc
clc
push
pushf
scas
push
add
aad
adc
adc
xchg
icebp
sar
jmp
stos
push
ret
gs
sbb
insb
jecxz
pop
hlt
mov
sidtl
fnstenv
mull
call
int
stc
data16
popa
xchg
mov
mov
sub
jmp
add
or
sub
mov
cltd
cmp
mov
mov
js
and
add
mov
push
js
std
test
mov
jns,pt
sar
in
xchg
loopne
repnz
in
xor
sub
jae
fcomps
in
mov
movsl
dec
in
cmc
cwtl
jne
outsl
inc
das
and
lret
pushf
aam
dec
dec
pop
fldcw
ja
ss
push
jns
gs
xchg
leave
std
sub
out
jo
adc
mov
notl
cli
insb
and
add
lock
test
push
dec
cmpsl
xchg
xor
add
pop
xchg
ss
addr16
in
sub
loopne
sub
inc
cmc
jl
mov
push
xor
push
pop
iret
icebp
out
cmp
lret
lock
adc
mov
and
ljmp
daa
and
sub
cmp
push
add
test
jbe
pop
cli
lods
bound
inc
cld
nop
call
arpl
movsl
cmp
stc
mov
movlps
jmp
popf
roll
inc
les
test
push
cli
cld
imul
xchg
daa
int
jmp
add
add
xlat
pop
jbe
test
mov
push
pop
push
icebp
call
add
lahf
aas
inc
inc
push
shlb
scas
and
fnstcw
out
mov
jo
mov
testb
icebp
mov
push
ds
add
lock
or
imul
mov
or
mov
das
rorl
mov
cli
inc
pop
sbb
ds
int3
stc
loope
cmp
dec
mov
sti
inc
shlb
lods
mov
xchg
jp
stos
cmpsb
dec
scas
xor
movsl
sub
dec
ret
lock
ja
jbe
stc
lcall
dec
mov
jns
pusha
fiaddl
in
fnstcw
or
loope
mov
adc
ret
or
bound
mulb
cmpsb
repnz
xchg
rcll
inc
mov
scas
push
xor
sbb
test
mov
stc
add
or
or
aad
ljmp
fists
clc
hlt
mov
ret
add
pop
mov
cmp
cltd
mov
out
dec
mov
mov
adc
push
and
shlb
sti
fcom
aam
cmpsl
test
mov
fwait
ljmp
mov
adc
pop
fmuls
pop
add
int3
xchg
xor
fiaddl
mov
xor
pop
mov
mov
mov
in
popf
push
popa
inc
divb
jae
and
push
sti
or
mov
xor
jecxz
pushf
ret
xchg
jl
mov
mov
mov
fwait
out
xor
in
push
dec
hlt
rclb
sub
movsl
add
xor
fadds
jb
daa
stc
mov
cmp
sbb
xchg
add
cmc
mov
sbb
xchg
loope
loopne
out
adc
lret
mov
jmp
jmp
jnp
inc
sbb
es
mov
sub
push
sub
jne
ja
jmp
inc
mov
into
or
push
lahf
int3
fistpl
scas
cmp
mov
fisttpll
imul
ret
stos
out
loopne
or
loope
inc
sbb
add
mov
pop
push
add
js
aad
adcb
je
in
and
mov
mov
popf
stos
mov
scas
into
fs
inc
rcrl
fdiv
repz
jmp
xor
adc
adc
fimull
add
insl
clc
into
jl
adc
dec
dec
sbb
jae
notb
fnstsw
lods
push
aaa
lret
int3
dec
and
cld
jp
jo
xor
pop
push
mov
lds
int
fbstp
add
push
cltd
and
push
pop
movsl
mov
mov
push
push
in
stos
nop
lahf
mov
iret
pop
pop
cld
les
jmp
lds
aas
xchg
adc
loope
sub
lods
pop
and
sub
cld
stos
stc
and
mov
mov
adc
test
push
pop
loope
sub
cwtl
sbb
insb
sbb
movsb
adc
and
jle
pop
mov
out
dec
pusha
mov
mov
inc
cmpb
push
jne
bound
pop
dec
sub
pshufw
out
je
in
lahf
cmp
aam
cld
repz
sub
sbb
rcl
mov
sbb
mov
test
rcrl
int3
fadds
mov
daa
mov
cmovp
jbe
xchg
in
in
stos
dec
lret
jmp
xlat
gs
mov
push
mov
sti
gs
repnz
popa
jbe
inc
xchg
mov
aas
js
mov
stos
or
flds
stc
pop
outsb
and
shlb
add
jns
out
xchg
lods
mov
jne
pop
sbbl
ret
inc
add
popa
ss
mov
add
xchg
jecxz
les
test
jg
or
add
cltd
fnsave
mov
shl
pusha
int
enter
inc
leave
add
dec
repz
repnz
ret
dec
or
jns
xorb
add
cmpsl
push
int
gs
jb
push
call
mov
cmp
adc
jb
adc
or
and
push
imul
pop
jle
push
icebp
jle
xchg
jmp
push
ds
pop
subb
and
mov
stc
push
out
or
outsb
mull
lret
shlb
and
les
in
jns
sbb
test
sbb
mov
jg
adcb
sti
jecxz
popa
inc
pusha
inc
mov
addb
jns
inc
pop
add
inc
xchg
xchg
ljmp
mov
xchg
mov
add
insb
mov
fcomi
cmp
jle
push
cmp
mov
stos
pop
jne
loope
jmp
mov
lea
mov
ja
in
repnz
dec
dec
pop
jp
outsb
xlat
addr16
mov
cmp
mov
cmp
imul
pop
cmpsl
fsubp
cmp
push
cwtl
inc
mov
sbb
sbb
insb
fstpt
fwait
and
call
std
jo
test
test
xchg
sub
jl
divb
sub
mov
adc
xlat
add
cmpsb
pushf
inc
cmp
inc
addb
or
clc
and
rclb
jno
loope
xor
rcll
ror
inc
pop
jl
xlat
lcall
adcl
jnp
and
mov
jns
div
cwtl
xor
xchg
leave
cmp
jl
ret
inc
add
out
aas
scas
sbb
out
loopne
shr
out
adc
push
insb
xor
sbb
in
mov
push
loope
xchg
mov
push
cmc
out
dec
leave
dec
loop
repnz
inc
cmpsb
mov
push
pushf
or
xchg
iret
aam
mov
sbb
xor
lods
mov
sar
cmp
lret
outsl
js
loope
inc
cmp
or
fcmovnbe
clc
shl
mov
dec
fsubr
sbb
sti
add
repnz
sub
lahf
jne
popf
dec
jmp
imul
insl
adc
seta
mov
inc
jl
ds
pushf
sub
xchg
jl
inc
xchg
push
ja,pn
and
mov
loop
xor
popf
xchg
xchg
dec
mov
push
int
scas
imul
loope
cmp
inc
cmpsl
mov
xor
std
leave
cmp
xlat
mov
sub
push
sarl
sbb
jne
add
out
and
in
les
shlb
loopne
ret
js
cmpsl
mov
xor
mov
push
pop
inc
jp
cs
sub
push
xchg
jb
jecxz
add
sbb
in
notb
loope
xchg
aam
dec
std
insl
dec
xchg
ret
cwtl
leave
push
hlt
cmp
outsl
xchg
aam
test
cmp
xor
sbbb
nop
jle
pop
clc
test
call
subl
sub
stc
movsl
pand
inc
cmpsl
icebp
pop
aas
into
dec
cli
iret
push
loope
testb
mov
repnz
loopne
jmp
clc
pop
inc
lods
insl
je
pusha
insl
pop
nop
or
mov
jae
dec
insb
xlat
xchg
shl
add
or
push
add
out
popa
les
or
sub
xor
fs
daa
mov
and
repnz
and
xchg
mov
sahf
inc
movsl
adc
cwtl
ss
push
mov
jne
dec
mov
or
fisttpl
jbe
mov
shll
fwait
sahf
push
jnp
cld
int3
jge
mov
add
inc
xor
push
mov
pop
sub
add
ljmp
pop
cs
xor
lds
sub
mov
jmp
dec
push
dec
in
pushf
jae
jns
jmp
cmp
and
mov
ljmp
in
push
inc
mov
or
mov
popa
xor
data16
xchg
cld
xchg
lret
mov
ljmp
movsl
lret
fwait
cmp
add
mov
add
mov
into
jae
cli
test
and
cwtl
std
lods
cltd
mov
js
mov
pop
xchg
push
test
mov
fisubrl
test
push
in
lret
rol
xor
or
rcll
push
ja
mov
jl
cmp
xchg
dec
inc
pop
dec
dec
or
mov
jp
cld
loop
dec
cld
inc
cmpsl
cmc
ljmp
pop
in
lret
cmc
loopne
mov
jmp
ja
mov
movsb
fs
and
test
ljmp
and
jnp
ror
imul
add
pop
in
pop
sub
mov
cmp
push
or
ds
fstpl
adc
or
or
add
mov
jle
arpl
xlat
push
push
mov
push
aam
sub
mov
int3
mov
hlt
cwtl
inc
mov
cli
jmp
mov
jg
int3
dec
pop
rcl
out
pop
enter
sub
adc
adc
push
out
xor
push
fidivrs
jbe
sub
adc
pop
mov
add
push
sub
mov
cmp
pop
add
nop
sub
sub
fnstcw
cmp
outsb
add
dec
push
bound
subb
push
mov
cmp
dec
pop
cmp
jp
ljmp
jp
aaa
pop
test
lods
div
and
enter
pushf
mov
test
lahf
add
gs
or
mov
test
add
mov
cmp
push
jns
mov
sbb
ljmp
fsubrs
outsl
pop
scas
popf
pop
push
pop
jnp
test
daa
dec
mov
ja
cli
xor
jp
mull
iret
mov
lret
insl
inc
push
out
xorl
cmpsb
jg
mov
mov
fst
push
sub
aad
xchg
sub
inc
sbb
push
xchg
pop
push
scas
pop
jno
call
jp
adc
leave
cmpsl
in
ret
data16
inc
add
add
xchg
aad
into
shlb
fistpll
enter
lea
jge
dec
fisubl
jae
sbb
jg
jno
xchg
dec
adc
dec
xchg
cmp
adc
js
loop
lods
push
push
pop
mov
adc
xor
push
test
xor
lock
jb
stos
andb
sbb
mov
shlb
das
mov
push
fsub
daa
mov
add
inc
or
xlat
sbb
dec
out
call
xor
push
lahf
dec
test
xchg
test
push
cmpsb
cli
sbb
pop
jge
xor
mov
icebp
leave
push
in
popa
sbb
bound
fcoms
xor
jle
je
push
out
int3
and
repz
imul
inc
sti
inc
push
js
movsl
ljmp
xor
sbb
out
dec
je
push
ja
sbb
outsl
sbb
mov
pop
inc
jp
cmpsb
movsb
movsb
jge
or
pop
jg
mov
inc
movsb
cmp
push
nop
and
repnz
lcall
shrl
int
add
jb
mov
cmpsl
ds
aad
sbb
cld
dec
lea
mov
sub
xor
icebp
loopne
push
jno
orl
push
dec
lods
leave
push
imul
unpcklps
aaa
mov
mov
and
movsb
xor
test
sahf
mov
xchg
das
fs
inc
xor
pushf
enter
xor
loope
adc
mov
or
out
pop
push
xor
mov
hlt
push
jg
outsl
adcb
mov
xrelease
sbb
mov
hlt
cmp
xchg
push
jp
inc
dec
jg
xchg
shr
shlb
repz
sub
pop
and
in
add
jno
daa
mov
xor
rcr
add
call
adc
dec
and
adc
daa
inc
push
mov
add
mov
lret
je
xor
xchg
lahf
and
out
cs
dec
in
mov
adc
mov
icebp
stc
push
icebp
xor
icebp
mov
cmp
out
fidivs
dec
clc
fstps
dec
dec
mov
adc
fwait
loopne
es
push
adc
int
mov
aam
fsubrp
cmp
xor
out
arpl
xor
cmpsl
rcrl
jmp
imul
xchg
inc
lret
jo
xchg
sub
cmp
cmp
pop
arpl
arpl
mov
push
mov
imulb
dec
adc
mov
in
dec
push
and
fildl
loopne
dec
add
insl
bound
dec
in
pop
leave
pop
adc
lret
xchg
ja
addr16
or
mov
jge
pop
call
mov
out
push
mov
sbb
aaa
cmp
lret
les
hlt
jb
outsl
jge
push
cli
testl
mov
and
or
mov
push
roll
pop
mov
pop
push
pop
addr16
ret
push
clc
out
test
jg
sub
mov
adc
cwtl
dec
cmp
cli
aad
lods
fnsave
push
fsubrl
add
xor
je
mov
xchg
call
sub
test
ds
cmp
mov
mov
adc
flds
and
sbb
add
jge
inc
xchg
lcall
cmp
js
jecxz
sbb
xorl
mov
mov
mov
ret
push
enter
inc
mov
je
xor
lahf
outsl
sub
mov
test
mov
and
add
mov
sub
les
add
call
scas
mov
stos
imul
inc
xchg
cmpsb
decl
mov
xchg
ret
mov
mov
xchg
sti
xchg
pop
enter
jecxz
mov
push
shl
into
loopne
mov
push
sub
mov
lret
cmpsb
fdivrs
call
mov
cmp
jg
xchg
jns
sti
cli
mov
cmc
sbb
movsb
arpl
insl
xor
or
jmp
scas
cmp
push
adc
push
cmc
je
ret
mov
ss
call
pusha
inc
mov
push
imul
inc
sub
fnsave
arpl
push
pop
fisttpll
mov
pop
and
stos
cmpsb
dec
dec
stc
pop
cmpsl
mov
out
adc
sbb
dec
jmp
xor
in
movsb
ror
mov
fmulp
or
sub
mull
push
push
cli
movsb
dec
adc
xor
push
stos
mov
mov
add
rorl
sub
out
sbb
je
fwait
rcrb
sahf
flds
pop
popf
pop
jno
dec
into
add
mov
cs
pushf
das
jmp
lods
pop
jmp
popa
stos
ja
push
loope
hlt
xchg
xchg
and
pop
cmpl
lcall
mov
pop
sbb
or
hlt
mov
sbbl
add
dec
ds
into
push
scas
lods
lds
push
push
sbb
clc
stos
jecxz
xor
mov
pop
fistl
adc
cmp
mov
mov
les
push
xor
ds
lcall
cmc
pop
es
or
scas
mov
or
mov
xchg
into
add
dec
xor
cmp
mov
push
aad
loopne
aas
cmp
and
xor
push
pop
out
dec
incb
aas
out
std
mov
jbe
pop
or
imull
mov
pop
and
pop
lods
popf
test
div
push
jo
aam
dec
nop
inc
fsave
mov
jp
popa
das
sbb
jl
int3
cmp
sbb
and
in
mov
icebp
shll
test
imul
add
fld
subl
sbb
push
sub
and
inc
pop
test
cli
jg
mov
into
loop
push
sbb
push
test
push
aaa
mov
push
push
shrl
fs
addr16
lcall
std
xor
mov
add
ss
jg
adc
push
in
sbb
clc
ljmp
iret
push
aad
pop
aad
adc
push
add
mov
jns
push
or
or
ja
pop
push
jb
cmp
push
loopne
idivl
mov
cmp
pop
ja
shlb
mov
ja
cmp
mov
aas
dec
jle
lcall
std
sub
jne
outsl
dec
div
out
sbbb
mov
sbb
xchg
in
push
leave
orl
test
aam
lods
jno
addl
shlb
popf
fstl
rcll
test
adc
div
xor
inc
pushf
mov
mov
mov
gs
enter
sbb
mov
ss
dec
push
hlt
add
pop
add
subl
xchg
loopne
xchg
jg
mov
stc
sarl
mov
mov
ds
xchg
mov
lock
and
mov
push
inc
mov
lock
xchg
or
fbstp
in
test
test
les
cld
es
out
sub
dec
sub
sbb
lahf
mov
mov
mov
rorl
ss
jnp
mov
or
stos
or
dec
xchg
cld
adc
dec
or
cmpsb
lahf
lods
add
jmp
inc
sahf
jno
bound
aad
loopne
imul
cli
sti
mov
jne
frndint
pushf
cwtl
stc
pop
xchg
mov
sbbb
mov
dec
ljmp
jb
insb
jne
push
mulb
fwait
xlat
pop
or
scas
mov
jmp
pop
cmp
es
div
movsb
push
inc
or
adc
sbb
fistl
mov
stos
ror
rclb
imul
cmp
xchg
repnz
and
loop
dec
ds
add
push
pushf
popf
out
addb
aam
daa
in
into
jl
cmp
mov
mov
and
arpl
push
call
jge
test
idivl
divb
movl
cmpsl
loopne
int
xchg
dec
sub
mov
and
xchg
cmp
sub
inc
lods
cwtl
mov
push
xchg
ret
mov
jecxz
and
in
push
and
cltd
xchg
add
sbb
clc
cmp
sub
loop
loop
inc
mov
and
inc
pusha
fwait
sbb
pop
loop
push
or
adc
add
xchg
gs
cld
cmp
gs
in
inc
mov
sub
jmp
ss
xchg
sub
jg
xorl
jp
cs
push
jns
inc
imul
jb
pop
xchg
outsl
insl
adcb
add
cmpsb
inc
mov
push
call
test
fwait
fwait
adc
in
and
inc
cltd
je
sub
add
ljmp
movsl
and
adc
fidivs
sub
sbb
jne
leave
outsl
loope
bound
addr16
sahf
stc
mov
mov
js
frstor
sbb
cwtl
push
mov
sub
pop
jns
hlt
and
or
test
sahf
pop
mov
or
mov
fcom
xor
mov
in
fldl
mov
clc
aas
dec
mov
imul
js
gs
jns
out
and
popf
mov
push
pop
insl
sub
aas
push
lods
pop
add
arpl
std
push
pop
daa
xchg
pop
cmp
ljmp
adcl
scas
ret
mov
jno
and
lods
adc
cld
jl
popa
jae
mov
xchg
mov
push
ljmp
das
inc
mov
inc
adc
pop
sarl
out
or
mov
pop
insb
jns
adc
inc
cmp
jno
aad
jmp
loope
cld
mov
jne
cmp
testl
jbe
pop
adc
cmp
push
testb
pop
test
push
jae
pop
call
in
or
into
push
and
hlt
push
ror
and
loope
cs
mov
and
or
mov
xchg
pushf
out
dec
add
push
sbb
lahf
jp
je
icebp
jo
mov
dec
push
push
shrb
icebp
roll
imul
or
sub
jo
int3
mov
fnstenv
adc
mov
or
andb
js
sub
popa
in
lds
cmp
mov
lods
repnz
inc
xchg
mov
mov
xor
jl
mov
mov
cmpl
in
rol
leave
mov
fcmovnbe
jbe
cmp
ds
cwtl
jnp
mov
and
cwtl
mov
cmpsb
lods
cli
bound
sub
clc
aad
dec
push
dec
mov
sub
inc
scas
lcall
call
dec
repnz
cmp
icebp
clc
lods
ficomps
sbb
dec
cmc
jno
push
or
cltd
ss
lret
adc
dec
or
cli
divb
mov
cmc
cmpl
adc
in
mov
das
aam
jl
mov
sbb
sub
aas
lods
insl
cmpsl
into
inc
mov
cli
mov
dec
movzbl
mov
or
std
sbb
mov
inc
int
mov
out
arpl
cld
dec
aad
sarl
or
lock
test
enter
xchg
xchg
subb
mov
dec
out
pop
pop
xchg
xchg
push
push
enter
push
pop
jne
mov
int
jecxz
aas
sarl
jns
je
mov
std
outsb
les
push
mul
outsb
cmpsl
and
and
testb
adc
sub
or
ret
js
sub
adc
int
mov
jns
and
mov
add
orl
xchg
cltd
xchg
dec
xchg
inc
les
xchg
insb
in
jb
dec
pop
pop
in
pushf
orl
imul
shlb
mov
pop
inc
mov
rcrl
stc
pop
shrl
xor
cltd
xlat
int
jno
mov
rcll
in
hlt
mov
test
mov
lea
jp
push
pop
pop
in
xchg
or
in
adc
das
stc
insl
nop
pop
fisttpl
mov
out
sub
outsb
addl
pop
shll
or
lahf
xchg
lret
iret
xor
loope
push
mov
insb
and
add
test
jl
sbb
call
sub
add
xor
lahf
cmp
adc
gs
xchg
mov
cltd
inc
mov
pop
inc
add
dec
dec
popf
sub
hlt
les
jl
xchg
jno
cs
test
test
mov
iret
jmp
pushf
pop
sti
jns
cmp
add
inc
testl
int3
in
pusha
into
sub
dec
testb
adc
xchg
imul
insb
xchg
int
push
or
and
mov
xchg
pop
fists
sbb
jae
add
es
mov
sub
xchg
sbb
enter
sub
gs
sbb
int
or
xor
dec
mov
push
out
mov
mul
aad
jp
enter
pop
mov
inc
mov
out
sahf
adc
repz
pop
jmp
shlb
les
or
arpl
xchg
fistps
push
scas
and
ret
jb
stc
adc
sub
push
fbld
sbb
sbb
rcrb
aam
pop
mov
je
sbb
xchg
clc
fisubrs
cmp
sbb
ja
xchg
push
dec
fwait
mov
adc
cmp
and
fildl
add
cmpl
andl
adc
push
xor
fisttpl
xchg
je
cmp
fsts
push
add
cmc
jbe
dec
out
xchg
mov
xor
dec
or
rol
or
jecxz
cmp
je
or
test
and
int3
sub
sub
mov
cmp
test
mul
mov
stos
pop
lea
push
out
cmpsb
or
mov
mov
add
dec
add
fsubs
imul
mov
shll
xor
sub
dec
and
sub
mov
mov
push
sub
cmp
cmp
fs
pop
iret
fcomp
or
fistl
std
adc
movsl
lret
lahf
ret
lods
into
add
and
xor
stc
fwait
cmpsl
vmwrite
inc
dec
movsb
loopne
scas
dec
jp
sbb
cmp
mov
nop
jns
cmp
xlat
inc
mov
jmp
xor
xchg
in
ret
sub
dec
xchg
sbb
rcrl
lods
push
enter
pop
iret
xchg
imul
in
sub
and
fdivl
and
orl
or
mov
ret
cmp
outsl
jl
stc
dec
push
sub
add
xchg
inc
add
sbb
into
mov
jl
enter
les
sub
xchg
push
jge
sahf
add
sti
cmp
pop
xor
jae
xchg
lret
dec
pop
les
cmp
pop
and
daa
mov
sbb
stos
xor
fdiv
mov
adc
subb
xor
and
adc
sbb
jns
loope
leave
daa
addr16
jmp
mov
iret
sahf
mov
out
xor
clc
sbb
mov
shrb
stos
mov
push
mov
mov
loopne
imul
adc
in
movsb
cmp
push
and
xor
movsl
pushf
inc
test
hlt
jp
mov
ja
outsl
cmp
pop
mov
mov
aas
mov
div
mov
xor
loopne
mov
and
jmp
xor
xor
push
pop
or
roll
mov
popa
jae
add
aas
jg
movsb
cmp
xchg
jns
aaa
imul
ficoms
jne
mov
mov
lds
xchg
mov
mov
mov
add
xor
loop
mov
sub
nop
or
xchg
cmp
and
add
addr16
stc
daa
test
mov
ret
mov
pusha
push
in
movsl
mov
inc
arpl
in
sarb
push
test
les
cli
les
sub
mov
adc
jo
popa
inc
adc
pop
stos
dec
push
lods
dec
xchg
add
adc
push
mov
lds
or
xor
int3
adc
pushl
pminsw
faddl
pop
subb
icebp
fldl
mov
dec
mov
popfw
or
pop
les
adc
test
es
int
and
inc
nop
pop
sbb
ja
cld
movsb
add
ja
cltd
mov
dec
sbb
jp
lock
aas
in
xchg
inc
movsb
mov
fimuls
outsl
or
cs
mov
pop
cmp
int
adc
mov
dec
or
mov
fwait
dec
pop
ss
mov
or
test
ds
add
mov
and
mov
inc
add
sub
sbb
adc
adc
jbe
xchg
scas
pushf
sub
rolb
lret
mov
push
les
cmp
movsb
icebp
ja
pop
jnp
push
cmp
stos
add
xchg
fists
aam
inc
jb
fiaddl
lahf
mov
mov
es
idiv
js
mov
js
fstl
xchg
dec
aam
jmp
lods
pop
hlt
and
adc
ret
push
rol
cmp
jae
movsb
je
lret
jmp
stc
sub
fstpl
sbb
and
nop
ss
loopne
or
subl
insl
adc
ret
lret
adc
aad
ret
or
sar
push
shrb
insl
adc
add
roll
dec
incb
int3
addb
push
push
and
inc
into
in
repnz
iret
dec
repnz
stos
and
push
mov
mov
mov
lods
nop
push
mov
shrl
cmp
jp
jmp
test
nop
sarb
mov
aam
dec
xchg
lock
popa
fdivp
xchg
push
push
incb
jno
sbb
fcomp
and
push
add
dec
pop
push
daa
in
push
cmpsl
sbb
inc
insb
push
lods
cmp
mov
bound
loope
sbb
jbe
or
xchg
xor
sub
ret
sarb
mov
rorl
hlt
adc
push
xchg
data16
push
aam
scas
fsubrl
add
repz
adc
xchg
leave
addr16
cmp
cld
test
addr16
popf
xlat
push
cmpsl
cmp
sbb
insl
jg
ja
insl
pop
ret
fnstenv
cwtl
mov
je
leave
insl
or
mov
add
dec
ret
aad
cmp
mov
or
ret
mov
je
aas
shrb
add
popa
ret
xor
stos
in
les
subl
insb
and
push
mov
mov
cmp
cltd
fs
dec
jo
sub
lahf
and
mov
jno
dec
mov
shrb
sbb
xor
out
sub
jge
sbb
test
mov
jmp
jl
mov
scas
outsb
dec
mov
pop
in
lret
and
xlat
aam
cmp
cli
cmp
lret
in
out
negb
xchg
inc
xchg
sti
xor
stc
mov
cmpsl
xlat
ljmp
cmc
mov
pop
out
add
loop
cwtl
out
mov
outsl
scas
cs
jmp
repz
dec
sbb
adc
pop
pop
pop
ss
pop
xchg
add
jae
sub
inc
loop
enter
loope
out
sahf
jecxz
sub
repnz
jno
das
xchg
mov
aas
sbb
and
adc
sbb
scas
stos
mov
out
gs
ret
popf
bound
sub
scas
lcall
add
mov
fwait
push
mov
loope
sub
sahf
lock
and
xor
lods
in
pop
adc
add
std
push
mov
push
addr16
mov
jp
cmp
repnz
das
sub
xor
std
cmp
aam
popf
sub
fildll
mov
xchg
push
in
hlt
jmp
inc
leave
push
cmp
jge
push
call
or
adc
movsl
mov
insl
in
imul
rcr
mov
lcall
inc
insl
adc
adc
jnp
xchg
lret
in
in
jns
mov
cmp
push
jecxz
jge
fists
sbb
xchg
mov
adc
jge
add
jge
loop
call
loope
jb
push
add
popf
clc
cld
in
fsubs
jae
cmp
dec
sub
test
add
sbb
arpl
div
add
cmpsl
ror
pusha
inc
adc
jb
push
sbb
lock
les
dec
add
hlt
repz
and
mov
jge
fdivrl
push
jae
mov
mov
rorb
sbb
repnz
inc
das
add
aaa
outsl
cmpsl
call
pop
xchg
aas
iret
in
mov
pushf
push
stos
loop
lret
pushf
mov
push
lods
sbb
lock
mov
mov
cld
in
jb
cmp
test
mov
bound
and
lea
sahf
cmpsb
push
and
add
cmp
adc
mov
outsl
jmp
aam
sbb
inc
imul
lods
sub
test
xchg
cmp
mov
jno
cmpsb
pushf
leave
or
lret
dec
arpl
cmpsl
pop
out
shrb
xor
fwait
adcl
ret
imul
fadds
sbb
aam
jbe
pop
sub
mov
movsl
jmp
shl
imul
aad
icebp
lahf
fwait
cltd
sub
idivl
inc
push
or
ucomiss
mov
xor
sbb
call
test
pop
je
lods
jmp
out
pushl
mov
repz
dec
rorb
dec
or
and
mov
fistpl
inc
inc
or
push
adc
jb
sub
mov
rcll
popf
xchg
negl
bound
dec
mov
test
xchg
loope
or
pop
fdivrs
out
stos
push
mov
inc
push
cmp
push
imul
xor
push
in
mov
rclb
inc
adc
sbb
jnp
push
lea
push
cltd
push
cmp
dec
in
xor
cwtl
inc
sub
fsubl
mov
cltd
pop
or
xlat
jmp
jae
sub
mov
mov
out
stos
add
inc
sbbl
loopne
inc
adc
in
cmp
psubsb
out
mov
push
mov
in
push
lcall
push
int3
dec
aas
mov
in
jecxz
mov
ss
cli
aas
in
lcall
mov
pop
push
jbe
mov
addr16
out
cmp
scas
mov
shll
fmuls
in
sub
jp
fistpl
jmp
lods
xchg
lock
mov
jg
xor
mov
daa
xor
xchg
lock
out
and
mov
daa
test
jb
cmpsb
addr16
push
cmp
adcl
xlat
inc
mov
lahf
cmpsl
xor
rclb
int
loope
add
adc
loop
ss
ret
loopne
fadd
addl
push
mov
sahf
popa
xchg
aad
test
adc
loop
jb
and
pop
sub
in
add
das
xchg
lock
mov
roll
outsl
cmp
cmp
inc
jl
inc
test
xchg
or
inc
jno
pop
bound
push
sarb
std
sub
movsb
out
and
cltd
mov
je
cmp
cs
inc
fdivrs
push
testl
and
sbb
cmpsb
and
jg
fnstsw
or
icebp
ret
jae
pop
movsb
pop
scas
adc
mov
or
popa
ja
int
outsl
js
xor
mov
loopne
jbe
sbb
jne
xor
xor
sti
push
call
in
lret
push
sub
adc
mov
test
mov
sarb
jne
cld
test
emms
pop
and
push
inc
mov
jnp
imul
and
cmp
inc
inc
lcall
aam
shrl
adc
mov
decl
push
dec
mov
cmc
test
adc
loope
addb
rclb
lahf
xor
dec
cmpsb
je
hlt
in
xchg
adc
cmp
sbbl
cmpsl
inc
pop
or
or
mov
mov
xorb
insb
mov
arpl
add
insb
repz
andb
rcrl
popa
stos
jg
lret
pop
jne
cmp
iret
lods
xchg
sub
mov
cmp
inc
xchg
aas
and
stc
in
pop
sub
add
add
xchg
cmc
adc
fadd
jl
movsb
mov
scas
filds
imul
ljmp
dec
fistl
aam
cmc
mov
xchg
add
inc
mov
lods
cmp
fwait
aad
xor
aaa
jle
push
cmp
repnz
aaa
sbb
in
test
iret
dec
lret
clc
lret
xchg
xor
mov
pop
inc
sub
and
sarl
popa
lcall
in
push
pop
lcall
pop
sti
aad
lahf
mov
mov
cld
stos
mov
lcall
sbb
leave
inc
pop
inc
dec
int3
lods
and
or
into
icebp
push
dec
pushf
adc
push
mov
in
out
add
push
imull
jns
popf
jle
mov
or
add
jecxz
paddusb
and
lret
mov
push
or
dec
lcall
dec
sbb
cmp
aaa
add
sbb
dec
aas
insb
jmp
pop
xlat
or
pop
movsl
or
sub
push
lock
mov
mov
jbe
addr16
cmp
loopne
sbb
xchg
adc
sub
aaa
dec
aas
push
xorb
pop
mov
xchg
sub
rcl
cmp
cltd
je
mov
out
and
shl
fsub
ret
popf
scas
lret
in
pop
sahf
push
stos
fisubs
mov
cltd
lret
mov
push
clc
sub
dec
clc
sti
pop
ss
cmp
stos
popf
fisttps
xor
leave
ds
push
cs
adc
mov
in
xchg
adc
cmp
repnz
test
xor
jle
push
sbb
cwtl
stos
int
sbb
mov
cmp
test
xor
mov
das
pop
adc
out
nop
jge
pop
fcomps
lods
xchg
add
rclb
dec
repnz
push
adc
fnstsw
rcll
xchg
hlt
add
insl
pop
rol
je
into
dec
je
sbb
loope
jle
fnstcw
es
and
jno
and
in
es
movsl
adc
adcl
std
out
push
push
xor
rorb
adc
loop
fdiv
or
movsb
daa
jmp
lret
popf
mov
pop
setg
ss
test
ja
jecxz
mov
sahf
out
mov
cld
out
mov
xchg
mov
cmp
movsb
mov
mov
movsl
push
std
adc
std
push
test
call
and
and
popa
and
lret
lds
cmp
enter
jp
or
loopne
jmp
lcall
add
dec
and
fstp
cmp
cmpsb
push
and
jb
mov
jp
popa
dec
ja
in
pop
mov
inc
fiadds
hlt
ret
and
scas
mov
outsl
inc
inc
enter
dec
sarb
add
pop
je
push
xchg
mov
push
std
scas
add
cwtl
inc
bound
inc
jns
or
sbb
fisttps
jge
nop
xchg
inc
cwtl
cmp
cmp
jg
retw
xor
xchg
pop
jle
je
or
and
adc
data16
fisttpl
dec
repnz
push
andl
jo
or
sbb
mov
jns
and
adc
push
cmp
cmp
stos
sbb
iret
inc
je
bnd
mov
dec
insb
sub
fwait
cmp
rorl
xchg
pop
cmc
pusha
scas
xchg
mov
nop
aad
loope
das
sub
call
push
xor
jg
xchg
mov
stos
or
lahf
push
mov
les
hlt
push
lcall
cltd
and
lods
adc
dec
daa
push
fimuls
rcll
sahf
imul
arpl
loop
cmpsb
fchs
mov
test
daa
jb
test
test
flds
arpl
mov
lods
nop
repz
mov
xchg
rolb
in
call
movsb
xchg
leave
nop
xabort
mov
dec
les
mov
mov
lock
mov
rorb
mov
outsb
insb
and
dec
or
lock
nop
daa
in
jb
push
dec
loope
das
xchg
insb
lret
jns
sarb
and
sbb
mov
ja
das
test
sub
fdivs
sub
cmp
or
jg
push
or
arpl
hlt
lahf
xchg
or
pusha
hlt
and
and
mov
and
lret
mov
pop
movaps
pop
push
aad
jle
pop
repnz
xor
addr16
jb
cmp
popa
call
pushf
into
jns
mov
out
les
in
ret
sbb
push
adc
mov
hlt
scas
mov
ret
xchg
jg
add
out
mov
jecxz
inc
sbb
jp
mov
jo
mov
add
jmp
inc
mov
rcr
inc
movsl
aas
sarl
push
stc
pop
rcrl
dec
inc
sub
into
aaa
cltd
pop
scas
xchg
shrb
data16
ffreep
jecxz
sub
and
lds
movsb
ljmp
rolb
sub
mov
xor
mov
pop
pop
jns
adc
mov
xor
adc
xlat
mov
std
cmp
inc
pop
jp
add
je
aad
scas
jl
shl
scas
xlat
daa
in
pop
shlb
fs
xor
pop
dec
pop
jl
jmp
loope
aad
stos
sahf
pop
bound
push
mov
xor
inc
les
test
pushf
cmp
dec
fistl
imul
xor
jl
lahf
scas
aas
rcrl
sbb
cwtl
pop
dec
push
inc
lds
arpl
loopne
jo
fmuls
pop
inc
out
cli
dec
insb
scas
or
mov
inc
pop
sbb
add
data16
sub
sbb
mov
xchg
pushf
repz
repz
add
gs
shll
mov
in
insb
cld
aam
fs
int3
jle
je
sub
loopne
jae
mov
outsb
js
jnp
inc
les
push
sub
insb
pop
mov
jae
cli
inc
sbb
fildl
in
push
js
pop
stos
push
insb
notb
out
data16
imul
dec
pushf
inc
in
sbb
push
mov
mov
test
inc
lea
fsts
dec
cmp
std
xchg
cmp
xlat
lods
sbb
popf
fisttps
or
cli
sub
pop
cmpsb
push
mov
add
enter
add
idivb
mov
iret
and
sbb
les
mov
rep
out
dec
cmp
mov
addb
shr
xchg
ret
in
call
xor
das
pop
lods
out
push
decb
mov
fadds
jno
mov
xchg
and
andb
push
jbe
outsb
sub
inc
out
jecxz
sbb
inc
add
xchg
inc
cli
js
ss
push
sbb
fs
ds
mov
adc
adc
into
xor
xor
pop
loope
mov
lods
sbb
out
jg
jnp
push
and
mov
cld
in
add
jbe
sub
jl
or
inc
scas
add
and
jns
fstps
inc
jbe
mov
idivb
xchg
int3
out
icebp
xor
push
movsb
outsb
test
les
push
xchg
push
orb
dec
inc
sub
sub
pop
push
jge
jo
repnz
mov
fildl
dec
pop
dec
jp
push
shll
bound
pop
jne
inc
dec
mov
inc
inc
xor
iret
stc
sub
xor
cwtl
dec
pop
pop
roll
and
es
inc
das
xor
fistl
aad
dec
xor
push
pop
cmpsb
cmpsb
adc
mov
push
sbb
push
into
push
or
push
pop
cld
lcall
cmp
mov
push
in
or
jns
inc
mov
xchg
mov
adc
mov
or
push
int3
mov
jbe
push
or
scas
in
sbb
repnz
int
or
imul
popf
xchg
cmp
or
ds
inc
and
insb
in
jns
fstpl
sbb
push
jnp
cmp
in
mov
mov
lock
cwtl
xchg
dec
faddp
xor
and
inc
lcall
or
sub
mov
into
out
or
sbb
hlt
pop
int
stos
cmp
cmp
mov
clc
dec
and
loop
sbb
cmp
push
xor
mov
bound
mov
and
insb
mov
cs
or
stos
pop
push
xchg
jge
mov
push
or
push
push
push
xlat
cmp
mov
repz
pop
out
mov
test
rclb
fstpt
xor
inc
orl
sbb
or
add
sbb
loop
movsl
and
inc
push
jne
or
stos
cwtl
inc
jbe
cmp
out
cmp
and
mov
mov
push
int3
shlb
xchg
scas
xchg
pop
lcall
mov
sbb
pop
mov
xchg
jle
in
into
pop
arpl
fldl
aas
imul
inc
mov
mov
sbb
andb
pop
es
repnz
mov
cmp
inc
rolb
lret
or
arpl
jge
xchg
mov
test
movsl
add
mov
xlat
push
adc
mov
add
mov
pop
mov
stos
push
sbb
xor
aas
xchg
orl
pop
pop
je
xchg
in
adc
imul
mov
fisubrs
xchg
sbb
icebp
xlat
jno
xchg
sbbb
mov
dec
pop
fistpll
mov
mov
dec
out
mov
lods
mov
sbb
cld
fisubrl
aaa
dec
mov
cmp
aaa
or
mov
xlat
ret
sbb
sbb
lods
sub
test
mov
js
jg
into
insl
or
cmp
scas
fsubrl
mov
testl
pop
into
mov
dec
cmpsl
dec
out
pop
mov
enter
clc
xchg
and
xchg
shr
in
mov
outsb
mov
cmpsb
stc
test
sub
mov
jae
bnd
scas
xchg
lods
pop
les
addr16
jge
lea
ljmp
dec
loop
push
and
mov
cmp
mov
push
loop
mov
test
cs
outsl
das
outsb
cmpsb
xor
ret
pop
aad
sub
nop
push
sub
inc
sub
in
mov
and
xor
sahf
push
mov
mov
sub
imul
imul
sahf
je
push
addl
scas
add
bound
mov
mov
or
sbb
cmpsb
insb
mov
int
or
add
movsl
mov
gs
shlb
jb
cmp
stos
adc
stc
xchg
das
and
ds
aaa
xchg
adc
mov
ret
in
fdiv
stos
pop
in
and
hlt
frstor
imul
scas
cwtl
test
sbbb
mov
stc
mov
fisubl
and
subl
or
subl
pop
or
inc
out
rcrb
pop
add
std
add
inc
aam
insl
and
mov
pop
dec
leave
daa
push
mov
mov
in
sbb
cmp
enter
imul
sub
inc
add
xlat
lcall
dec
xchg
xchg
scas
mov
repnz
scas
test
fdivl
pop
mov
mov
dec
push
push
inc
adc
insl
jno
jecxz
jmp
roll
mov
mov
out
imul
int3
pop
mov
push
fs
inc
lret
jne
jmp
cli
les
rolb
add
pop
add
mov
pop
clc
shlb
leave
rcrb
mov
sarl
bound
push
fcomi
stos
xchg
bound
and
mov
pop
add
shlb
leave
dec
icebp
adc
add
xchg
mov
mov
jg
pusha
sub
in
xor
leave
dec
addr16
inc
add
add
js
pop
mov
in
test
adcl
cmp
ror
jb
mov
mov
ja
pop
loopne
xchg
aaa
rorb
test
sbb
pushl
or
rclb
test
mov
mov
addb
pop
fmuls
fcompl
enter
aas
test
je
dec
jae
jp
lock
mov
lcall
add
push
or
arpl
clc
mov
push
sub
push
push
int
fs
fs
xor
mov
sub
bound
sub
pusha
fnstsw
pop
movsl
sahf
jbe
jmp
icebp
in
dec
rol
sub
mull
fdivr
inc
popa
inc
loope
add
aaa
mov
std
fwait
xchg
out
inc
mov
shrl
push
adc
mov
pop
addb
mov
hlt
gs
xchg
fstpl
xchg
cmp
cs
repnz
cltd
jb
shlb
mov
pop
sbb
call
int
into
push
xchg
daa
jb
pop
insb
adc
in
push
jecxz
aam
out
mov
jle
push
mov
add
or
and
and
mov
je
je
pop
int3
push
test
xchg
inc
fsubrl
std
movsb
add
lods
mov
sbb
mov
sub
and
lods
loop
sub
test
add
cmpsl
mov
jg
sub
enter
adc
sub
data16
lret
ret
mov
mov
in
or
stos
push
or
es
les
int
add
adc
xor
lcall
sbbl
out
and
ret
mov
xor
dec
mov
mov
out
mov
pop
cltd
mov
mov
popa
test
rcll
inc
fdivrs
xchg
jg
lea
pop
and
push
repnz
push
dec
test
push
sub
xchg
xchg
insl
mov
add
push
jo
xor
shrb
pop
add
sub
pop
pusha
andb
call
lods
sti
fldcw
outsb
push
push
gs
push
lods
pop
xchg
fisubrl
inc
fcompl
fnstsw
mov
jb
outsl
loop
pushf
inc
mov
mov
fildl
jl
fists
push
ds
xchg
outsb
sbb
mov
test
cmp
add
or
out
xchg
jo
jne
push
pop
jo
rcl
scas
aad
outsl
fwait
call
push
pop
or
aad
fiadds
pop
jmp
mov
clc
fwait
loopne
mov
xchg
movsl
ljmpw
mov
jb
cmp
xchg
mov
lahf
and
dec
cwtl
shll
sbb
movsb
scas
and
lea
imulb
cmpsb
fists
jne
and
push
xchg
cmp
bound
or
fbstp
inc
mov
cltd
jae
popf
push
dec
sti
pusha
inc
lods
or
xor
insl
icebp
adc
jmp
dec
adcb
lret
and
adc
jmp
scas
nop
cltd
cli
lods
std
adc
adc
bound
pop
push
aaa
push
popa
pop
mov
mov
mov
and
scas
sub
add
lds
rcll
xchg
imul
clc
mov
loopne
aam
jno
aas
adc
test
fildl
popa
into
dec
dec
inc
xchg
sbb
add
dec
cld
lock
sbb
mov
sub
in
out
mov
mov
push
into
dec
jle
mov
xchg
shrb
ror
add
mov
or
in
clc
scas
xor
sti
scas
cmp
arpl
lods
fdiv
icebp
addr16
xchg
mov
ljmp
xchg
dec
cltd
xor
lea
stos
outsb
push
sbb
dec
sub
mov
jge
mov
jo
fucomp
push
jo
adc
js
cmp
cltd
cmpsl
jnp
lods
mov
lret
mov
movsl
and
in
inc
lret
or
add
adc
jbe
inc
movsb
cmp
mov
scas
sbb
xchg
outsl
push
mov
ljmp
push
adc
fistl
and
and
andl
sub
xchg
or
pop
dec
loop
sbb
into
xchg
das
jb
adc
repnz
into
movl
insb
inc
or
inc
adc
mov
mov
mov
cltd
cmpsl
push
xor
pop
cmpsb
pop
negb
dec
subl
xor
mov
push
js
inc
and
data16
cmp
inc
movsb
fcmovnu
fstp
ret
in
into
cltd
icebp
sbb
xchg
scas
push
cmpl
or
lock
lock
out
cmpsl
pop
jmp
and
sahf
jg
cmp
scas
sub
outsl
jbe
xlat
sahf
adc
jecxz
sbb
xchg
push
or
or
jne
mov
jns
xchg
sub
cli
leave
or
sub
int
movsl
add
push
sub
mov
xor
push
insb
enter
inc
imul
ljmp
jb
lods
std
ja
aad
arpl
push
inc
enter
lret
and
and
gs
pop
ja
mov
mov
shr
mov
inc
enter
pop
scas
call
mov
cmc
xorl
xchg
inc
pop
jle
sub
pop
mov
daa
imul
and
je
xor
mov
xchg
mov
lcall
lret
in
mov
jecxz
inc
divb
pop
popf
cmp
mov
test
xor
jle
imul
inc
fs
cmp
xchg
sub
xor
fsubrs
dec
divb
das
movsb
jb
repz
push
int
cmp
jae
sbb
arpl
xchg
outsl
and
xchg
movsb
mov
adcl
mov
jge
pop
push
mov
ja
loopne
outsb
xor
cmpl
mov
std
sub
es
pop
xchg
sarb
push
lahf
xor
jg
faddl
repz
arpl
ds
test
fiadds
pop
or
gs
jo
jne
or
mov
ja
push
push
jns
pusha
cmc
pop
xchg
add
scas
mov
mov
stos
jg
mov
sbb
scas
fnstcw
add
push
mov
push
stc
stos
daa
jne
add
cmp
je
pop
sub
aam
mov
push
mov
lock
dec
pop
les
les
outsb
inc
xor
cmp
mov
test
dec
pop
mov
or
xlat
out
dec
add
or
add
in
pushf
jmp
mov
lret
aad
test
test
xchg
jb
add
cmp
int
adc
out
mov
mov
fisttps
or
cmp
js
test
push
cmp
mov
outsl
push
out
xchg
pop
inc
bound
aaa
stos
cmp
and
addr16
daa
cmp
jno
mov
sbb
sarl
sub
mov
pusha
jge
mov
test
daa
icebp
lcall
xchg
rcrl
js
cs
lds
lods
xlat
loop
jnp
cmp
or
cmp
lret
out
in
or
dec
dec
pop
xor
dec
fldl
movsb
and
or
stos
mov
jge
aaa
push
call
into
out
insb
outsb
call
mov
in
pop
and
xor
push
fcomps
push
adcb
movsb
and
add
jg
leave
ss
adc
fcmovb
pop
out
jp
scas
push
dec
jecxz
push
mov
inc
mov
rcl
stos
jmp
int
clc
pop
pop
add
xchg
and
shlb
jmp
mov
lret
out
cmp
jp
lods
cmpb
dec
cwtl
jg
push
cmp
cli
fwait
push
jmp
mov
jg
jns
dec
aad
fsts
repnz
add
xor
aaa
loopne
add
mov
adc
movsl
scas
sbb
cmp
popa
rorb
dec
mov
andb
insl
imul
and
ret
pop
iret
dec
pusha
mov
push
jg
arpl
lea
aaa
xchg
or
xor
and
add
repnz
xchg
mulb
fistl
adc
or
jbe
mov
jmp
ucomiss
roll
xchg
test
mov
sbb
adc
pop
sub
pop
iret
cld
xlat
addr16
mov
test
lret
xchg
fcom
mov
insb
sub
and
dec
jno
and
push
lods
jmpw
lods
in
cwtl
add
loopne
mov
push
out
andl
inc
jmp
inc
xor
repz
out
mov
mov
clc
inc
stos
pop
mov
mov
fld
iret
or
mov
mov
add
pusha
pop
push
or
fidivl
mov
jnp
js
dec
dec
jbe
lds
dec
shrb
sub
sarl
sub
xchg
inc
lcall
sbb
inc
enter
test
mov
mov
test
mov
outsb
mov
sarl
jne
inc
mov
jno
or
lahf
out
je
mov
loop
xor
push
mov
sub
inc
bnd
mov
mov
cmp
mov
jl
les
sub
leave
or
xchg
outsl
mov
mov
mov
les
jnp
pop
in
adc
cmpsb
sti
push
in
fadd
sub
and
in
insl
in
imul
test
jmp
push
mov
test
mov
push
mov
fcoms
roll
cmp
xchg
push
push
mov
insl
xchg
mov
in
and
test
mov
push
ficoml
icebp
add
or
and
loope
das
movsb
jmp
lea
adc
in
pushf
test
push
cltd
xor
shlb
out
push
mov
push
mov
add
pop
cmpb
pushf
mov
push
cmpsb
daa
sub
rcll
insl
in
push
cmc
pop
mov
or
movsb
xor
cmp
lock
test
sbb
insb
push
xchg
lock
jge
cmp
xor
cwtl
inc
mov
ljmp
jp
push
dec
iret
mov
jle
ss
sar
sub
rcl
inc
adc
pop
or
add
shr
iret
pop
test
test
cmp
adc
dec
pmulhw
scas
xchg
cmp
outsl
out
jl
jp
dec
js
xchg
jecxz
push
xor
mov
rcll
mov
pop
push
outsb
movsb
nop
and
xor
pop
cmp
pop
or
movsb
ret
sahf
pushf
sahf
lods
sbb
test
and
insb
aam
out
jnp
in
repz
lret
pop
sbb
flds
inc
xor
enter
pop
nop
js
adc
testl
pop
mov
fimuls
push
in
rcll
cmc
jns
jle
inc
push
insb
mov
or
push
fiadds
bound
push
popf
xchg
and
mov
lcall
cs
mov
aad
xchg
mov
mov
bound
lret
test
push
push
and
shl
sar
mov
xor
inc
ret
xchg
mulb
lret
cli
sub
inc
and
sbb
cmp
test
iret
jle
jg
mov
arpl
fnstenv
orb
inc
imul
les
sub
xor
xchg
jns
jp
xor
iret
pushf
mov
pop
inc
or
loope
lcall
test
mov
pminub
outsl
xchg
outsl
int
mov
xchg
in
adc
mov
push
loopne
dec
jg
pop
jmp
jle
mov
jno
xor
fimuls
outsb
jae
ret
std
mov
xchg
inc
sub
pop
push
dec
dec
stc
dec
gs
popa
test
mov
test
test
jb
or
jle
dec
dec
stc
and
mov
or
pop
add
ljmp
and
adc
and
add
mov
fstl
out
ret
sbb
dec
push
cmp
adc
or
mov
adc
xchg
push
enter
adc
jns
cmp
fsub
pop
cld
dec
das
lock
push
ss
xor
xchg
popf
xlat
mov
lock
rol
stos
fcmovb
aas
or
ret
pusha
push
mov
leave
outsb
test
popl
mov
jmp
mov
cs
pop
sbb
xorl
test
mov
lret
insb
cmc
xchg
mov
push
orb
test
or
scas
sub
sbb
je
push
mov
mov
sub
cmp
int3
cli
testb
lods
rcr
pop
sbb
jle
xor
inc
mov
stos
popf
jge
aaa
mov
outsl
push
mov
or
and
adc
mov
push
inc
inc
jbe
in
push
xor
stc
cmpsb
bound
push
ds
xor
std
std
adc
jae
lea
jle
or
es
test
repz
mov
jmp
inc
popa
pop
mov
pop
mov
add
mov
xor
aaa
fdivs
pop
mov
push
sahf
push
fwait
inc
in
pop
in
pop
cmc
repz
pop
int3
inc
popf
inc
mov
xchg
sbb
sub
inc
mov
loopne
dec
pop
fcomps
jns
inc
pop
xchg
pop
cmp
push
jmp
sbbb
push
imul
daa
jno
fwait
sub
xlat
fidivrs
mov
push
cmp
cld
mov
rclb
cmp
sbb
pop
jg
mov
mov
aam
pop
adc
lods
cmp
repnz
push
jne
lods
jno
mov
push
pop
jmp
mov
je
mov
dec
inc
sbb
pop
cmp
push
icebp
outsl
jno
bound
ss
out
pop
in
bound
cld
leave
jnp
aad
pop
mov
or
ret
lods
push
dec
adc
test
outsb
cmp
fdivs
cld
jae
les
dec
mov
sahf
call
into
cmp
mov
stc
dec
test
dec
fwait
xor
push
das
mov
add
xchg
and
jp
int
sbb
jl
mov
js
push
mov
jle
mov
repnz
sbb
lret
mov
or
cmp
adc
addr16
cmp
divl
mov
pop
scas
and
mov
mov
mov
or
pop
fucomi
sub
xchg
enter
repnz
cmp
rep
pop
cwtl
cmpsl
rcll
cmp
punpckhdq
pop
ficoms
mov
adc
cmp
xor
stc
fimull
pop
nop
loope
stos
mov
add
arpl
add
dec
mov
nop
push
int3
ficompl
fldl
clc
mov
cmpsb
sbb
stc
outsl
pop
cmp
pop
push
add
or
lcall
adc
ret
lock
test
adc
xor
pop
movsb
dec
jmp
cmpsl
jge
sbb
cmp
mov
movsb
sbb
jmp
test
inc
dec
jp
dec
mov
jl
mov
add
jo
popa
xchg
mov
sub
push
dec
popa
aam
push
or
mov
fidivrl
inc
jp
out
and
and
pop
loopne
pop
sti
ror
std
pushf
jo
cmc
dec
jp
push
cmp
and
std
mov
ret
sbb
or
enter
push
and
mov
add
out
es
pop
aaa
nop
cmp
rcll
xchg
int
mov
call
ret
lock
out
imul
xchg
nop
add
mov
sbb
adc
popf
sub
or
jmp
data16
xchg
int3
and
repz
in
dec
jno
mov
xchg
mov
sahf
jmp
inc
dec
xchg
cmpb
jnp
mov
int3
mov
loopne
inc
and
mov
fwait
push
and
mov
inc
sub
jmp
adc
and
add
push
jmp
repz
jg
das
cmpsl
jecxz
dec
test
int
jns
sub
call
sbb
mov
adc
mov
jns
dec
dec
adc
test
stos
test
or
mov
pop
inc
push
shlb
mov
fsubl
push
and
loope
jne
pop
cmp
popa
imul
push
sti
pop
xorl
jg
pop
jno
loopne
mov
and
add
popa
or
fwait
int3
xchg
inc
xchg
jge
xchg
mov
inc
scas
shl
sub
cltd
pop
lahf
call
and
or
fisttpl
outsl
ficompl
mov
add
pushf
lds
jecxz
xchg
lcall
cmp
cmpsb
orb
mul
xor
and
pusha
pop
stos
lcall
cmc
dec
cmpsl
or
decb
cld
in
pop
pxor
xlat
sub
adc
adc
iret
pop
into
xchg
sub
jge
dec
nop
xchg
sub
xchg
fisubrl
cmpsb
test
gs
pop
sbb
test
jg
sti
pop
bound
pop
lret
cmc
insl
xor
fwait
sti
fwait
jge
xor
shlb
int3
in
cmp
lds
adc
pop
popl
nop
cmp
and
nop
addb
divb
cmp
clc
cmp
gs
dec
xchg
rcrb
jno
xchg
cmpsl
xor
xor
dec
dec
or
push
aad
std
xlat
popa
sbb
icebp
popf
fidivrl
rcl
je,pn
inc
neg
lock
xor
push
xchg
in
inc
ds
and
setae
push
push
lahf
test
out
add
mov
stos
in
shlb
idivl
decl
jl
sbb
cmpsl
add
jbe
xchg
jnp
jmp
sbb
test
mov
push
inc
mov
xchg
lock
push
rcrb
nop
dec
mov
in
mov
sbb
jno
cmp
lret
add
out
mov
sahf
out
add
popa
cmpsl
out
imul
or
in
int
pop
lea
stos
test
mov
or
outsl
enter
sbb
sub
ret
gs
insl
jmp
insl
push
push
and
arpl
cli
nop
add
mov
out
test
xor
push
xor
push
cmc
fisubs
lret
mov
mov
add
scas
fwait
xor
lcall
hlt
mov
or
out
lcall
out
pop
jl
or
repz
int
push
dec
dec
jnp
ss
lret
dec
movb
cs
int3
jge
je
sub
neg
inc
xlat
into
leave
jne
or
push
clc
loop
and
int
xor
ret
jb
mov
xchg
adc
lahf
negb
jno
lea
xchg
jns
sbb
and
pop
bound
pushf
popa
jns
xchg
pop
and
jno
lods
inc
leave
jnp
fistps
fs
and
std
enter
adc
lahf
jecxz
lahf
cmp
xor
pop
cmp
aas
sbb
jge
das
int
jge
sub
cmpsl
stos
cmpsl
inc
cmp
decb
add
out
outsl
lcall
or
inc
cld
paddusw
and
dec
lcall
and
cmpsb
xchg
std
jp
mov
xor
xchg
iret
xchg
mov
xor
cwtl
sti
sub
clc
ja
xor
pop
mov
repz
mov
sti
xchg
sbb
pop
lds
iret
enter
femms
mov
in
std
ds
add
test
mov
sbb
mov
outsb
lret
cmp
aas
dec
and
sahf
bound
pop
sbb
in
jb
insb
jo
and
xor
movb
push
testl
outsb
sub
xor
push
adc
ret
jp
testl
ficoms
or
push
dec
faddl
je
mov
pop
aas
stos
and
loop
pop
add
popa
mov
jbe
mov
push
lahf
mov
mov
ljmp
push
mov
push
out
push
mov
inc
rorb
sti
cmpsl
sbb
xchg
push
rolb
xchg
mov
loop
shll
sub
mov
cs
in
pushf
jp
push
ficoms
adc
sub
std
or
pop
gs
clc
popf
mov
mov
dec
repnz
add
mov
loope
ja
sub
or
iret
notb
mov
adc
pop
scas
outsb
ficompl
sub
je
add
add
sub
jnp
jl
lahf
jb
lds
push
pop
jle
je
inc
push
mov
mov
into
sub
jmp
sbb
adc
popf
jp
mov
push
adc
jae
dec
mov
or
pop
into
xor
xchg
xchg
dec
scas
adc
pop
enter
sbb
and
push
in
adc
mov
xchg
xchg
out
and
addr16
mov
cmp
or
xor
int
loop
shrl
cmp
sbb
lods
mov
inc
push
push
and
stos
inc
shr
mov
divb
scas
push
fs
es
sbb
inc
sub
pop
sti
data16
or
data16
into
ja
cmp
and
fadd
push
loope
loop
pop
push
mov
xchg
jl
testb
nop
outsb
inc
pop
push
cmp
mov
das
add
aas
mov
adcl
cmp
jb
push
lods
mov
popa
lcall
fsubs
out
gs
sub
jae
push
fcoms
xor
mov
imul
and
cwtl
jp
or
push
aam
shl
out
out
movsl
arpl
ljmp
or
dec
mov
or
icebp
dec
cmp
sub
add
or
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
