mov
movsb
int
mov
and
sahf
ja
jne
ja
popa
in
jbe
lcall
cmc
add
cwtl
popf
stos
adc
inc
push
sbb
fstps
inc
pop
inc
push
pop
fists
cmp
ss
mov
mov
xor
sbb
pop
sub
cmp
mov
pop
xor
mov
sarb
inc
push
sub
jmp
cmpsl
sbb
xor
xor
inc
in
sbb
jbe
fildl
jp
xchg
cmp
sbb
cmpsl
mov
clc
push
adc
mov
add
popl
ss
add
cld
jge
sarb
ret
fs
jl
out
fadd
sub
mov
hlt
in
icebp
ret
push
lods
xor
xchg
add
mov
aas
jle
mov
lds
mov
mov
in
mov
sahf
mov
jnp
cmp
xchg
stos
push
xchg
outsl
popf
and
sub
mov
pop
mov
pop
mov
jmp
mov
lods
pop
inc
inc
push
jno
xor
mov
mov
call
push
pushf
xorl
cmp
dec
cmp
push
xor
hlt
out
inc
or
jg
je
sub
xchg
cmp
dec
lret
mov
mov
jecxz
idivb
mov
sub
in
xor
add
cmpsb
sbb
hlt
mov
enter
sbb
jle
jae
int
adc
arpl
sti
mov
inc
mov
fwait
sbb
in
pop
jno
and
pop
in
inc
dec
aam
stos
fxch
mov
ficomps
rclb
mov
testb
mov
out
cmp
xor
adc
dec
push
jns
cmp
jbe
pop
sbb
push
mov
mov
leave
jae
inc
mov
rclb
add
fists
mov
push
pmullw
mull
jl
enter
xchg
lock
mov
out
pop
addl
add
in
push
cmc
in
sub
mov
push
nop
push
std
sbb
xor
int
mov
xorl
sub
dec
ret
add
xchg
push
pop
add
clc
stos
clc
sti
repnz
cltd
cltd
mov
scas
add
push
sbb
sbb
xchg
dec
mov
or
aaa
aas
push
xor
xor
les
cmpsl
dec
push
in
inc
addl
fcmovb
leave
jne
xchg
insl
mov
sbb
popf
or
ret
or
adc
push
pop
mov
push
inc
fiadds
cmp
cmpb
test
out
shlb
out
popf
frstor
movsb
jl
lahf
jnp
xor
fdivr
or
sub
fldl
and
arpl
push
int3
inc
inc
inc
into
in
inc
mov
jg
sbb
pop
jns
mov
or
test
aad
stos
rcr
xor
cli
jae
ror
xor
pop
rcr
fsubrs
int3
jecxz
mov
enter
inc
gs
jns
cmp
mov
adc
test
outsl
mov
test
xchg
es
fstpl
mov
pop
adc
push
adc
in
aam
push
push
fistps
and
jno
cmp
dec
js
mov
lods
mov
push
mov
aam
xchg
cmpb
cmp
xor
xor
out
and
js
jno
push
mov
orl
mov
or
mov
outsl
sub
fcoml
mov
xor
mov
lock
inc
stc
out
xor
mov
mov
sbb
test
sub
mov
insb
lock
lods
jmp
cwtl
xor
add
jg
mov
lods
add
insb
pusha
mov
out
dec
push
stos
and
leave
or
sub
rclb
jl
mov
aam
cmp
adc
int3
jns
jo
test
mov
inc
mov
xchg
inc
mov
add
jecxz
pop
and
sbb
mov
xchg
leave
cmp
test
sub
jmp
jbe
in
or
lods
xor
sub
jbe
movsb
adc
xchg
or
pop
jbe
xchg
mov
stos
fbld
push
mov
adc
inc
pop
popa
test
inc
enter
cs
movsb
data16
dec
mov
out
sub
mov
je
movsl
mov
push
jne
subl
test
and
movl
cltd
push
fisubl
ret
inc
sbb
outsb
rcll
outsl
lahf
cld
or
sbb
cmc
cmc
pusha
jnp
jge
cmp
push
movzbl
jp
rol
je
js
push
push
pop
pop
stc
jl
rol
and
push
push
xchg
pop
pop
cld
clc
loop
pop
cmc
test
lea
clc
ja
push
push
push
lea
pop
pop
pop
push
inc
pop
and
or
rol
stc
clc
push
pop
push
je
push
test
pop
pop
inc
dec
test
push
xor
pop
xor
sar
stc
xor
push
or
pop
xor
cld
call
add
test
jmp
sub
cmpsl
punpcklbw
push
stc
xchg
and
and
cmp
mov
lds
mov
add
cmc
cld
jge
or
cld
push
add
mov
pop
or
push
pop
jge
and
push
call
in
jbe
nop
lock
arpl
gs
xor
mov
stos
pop
mov
bound
cmp
pop
push
dec
pop
jnp
push
or
pop
clc
add
js
add
jnp
push
mov
pop
cmc
lea
mov
push
call
and
fwait
inc
daa
test
mov
push
cwtl
mov
adc
pop
add
add
jne
jmp
test
push
push
or
pop
pop
push
ja
push
rol
pop
pop
push
push
or
pop
pop
clc
nop
push
pop
nop
push
add
pop
jmp
dec
ret
add
jae
inc
lcall
outsl
out
inc
xchg
les
pushf
pop
mov
fiaddl
fistpl
iret
mov
data16
insl
adc
popf
movlps
loope
sti
out
jno
mov
mov
bnd
cld
and
jmp
pop
add
lock
cmp
sbb
jg
and
jae
push
inc
pop
push
call
pop
mov
aam
into
jg
fimull
enter
dec
jmp
sarl
leave
andl
jle
add
mov
mov
cmpl
mov
pop
push
mov
push
xchg
movsl
xchg
mov
pop
sub
loop
jecxz
nop
idiv
pop
and
clc
addr16
les
cmp
fnstcw
xchg
mov
icebp
js
dec
ljmp
outsb
push
push
jge
cmpsl
push
mov
xorb
xchg
ds
lret
inc
mov
sbbb
loope
pop
bound
sbb
insl
das
adc
pop
repz
pop
dec
les
inc
adc
sarl
stc
push
push
add
pop
pop
cmp
stc
push
and
pop
clc
add
push
push
rol
pop
pop
cmc
push
push
shl
pop
pop
test
xor
inc
dec
clc
dec
jne
push
push
shr
pop
pop
or
loop
jecxz
push
add
add
adcb
pop
cmp
cmp
mov
mov
ljmp
inc
lea
push
cmpsl
push
mov
xor
jne
xchg
push
and
pop
jmp
add
xor
outsl
mov
pop
inc
insl
cmp
xor
add
jae
mov
sbb
or
pop
dec
arpl
js
rcl
sbb
sti
enter
adc
pop
xchg
ret
das
test
mov
sbbl
lahf
pop
sub
mov
mov
push
nop
fsts
mov
sti
cmp
and
es
mov
push
inc
lea
pop
dec
fxch
mov
mov
cmp
imul
dec
cmp
push
les
mov
xlat
ds
jmp
pusha
loopne
and
sti
imul
mov
adc
stc
dec
mov
push
testb
imul
into
mov
dec
inc
pop
mov
daa
ret
mov
jle
sub
or
jp
aad
jb
loop
std
xor
int3
cmp
xchg
lods
cmpsl
bndldx
jbe
push
xor
aaa
inc
aaa
test
push
jmp
pop
repz
push
sub
fidivrs
lcall
icebp
mov
mov
out
mov
push
repnz
cwtl
cmp
and
aaa
jb
mov
jbe
or
cmc
push
arpl
into
out
jl
pusha
xchg
mov
xchg
ds
cmp
mov
out
mov
xlat
addr16
cmp
ficompl
mov
jo
les
nop
and
in
aam
out
inc
xchg
lock
push
inc
or
loope
pop
addl
daa
flds
add
stos
or
pop
fistl
clc
fdivrl
pop
loope
aaa
nop
cmp
push
sbb
jmp
mov
add
outsb
add
add
imul
xor
lock
or
push
mov
add
stc
cli
push
pop
sti
inc
pop
pusha
ds
insb
ja
clc
add
and
lock
sbb
movsb
mov
jns
nop
sub
imul
pop
xchg
add
sbb
call
xor
dec
cmp
add
and
cmp
shrl
loope
pusha
and
mov
add
jg
mov
out
xchg
mov
xor
jmp
dec
inc
and
inc
stos
mov
pop
js
out
mov
lret
dec
xorl
stos
addb
out
hlt
dec
mov
sub
or
nop
jle
int
iret
xchg
cld
jbe
cmp
ss
sub
rcrb
jns
or
inc
dec
mov
dec
inc
sub
cld
sti
mov
stos
jle
sbbl
out
punpckhwd
push
mov
cs
adc
jo
arpl
dec
in
mov
sub
or
sbbl
pop
mov
and
lods
nop
xchg
pop
imul
cmpb
test
jno
push
out
cmp
inc
addr16
dec
cmp
lcall
mov
int3
mov
push
sbb
xor
dec
push
add
outsb
sub
sub
cmp
out
icebp
or
or
jb
or
inc
pop
dec
or
fsubrs
outsl
movsl
mov
and
es
mov
inc
cmp
dec
or
mov
inc
push
mov
mov
mov
sahf
movsl
xchg
jno
movsl
xor
enter
outsb
push
cs
cmc
imul
dec
jecxz
jl
in
loopne
je
or
cmp
out
es
loop
adc
push
adc
test
jmp
rcl
loopne
xor
and
inc
popfw
dec
lret
xchg
or
mov
rcrl
xor
push
repz
jb
out
in
inc
jp
add
adc
sbb
mov
in
stos
loop
je
push
ror
dec
scas
scas
aam
stc
orb
lds
and
test
inc
fdivs
neg
repz
or
call
xchg
arpl
push
fwait
test
jae
mov
pop
sti
xchg
jno
loope
cwtl
xchg
test
movsl
push
and
inc
cld
pop
push
aas
repnz
sub
pusha
jae
adc
dec
fidivl
fdiv
lods
shl
inc
sbb
xchg
cmp
inc
cmp
cmpsl
inc
inc
inc
mov
popa
sbb
sub
sbb
pop
aad
pop
aas
push
xchg
or
and
or
adc
and
xchg
cld
sbb
mov
stc
or
daa
jnp
dec
dec
adc
addr16
cs
lahf
mov
and
ss
sti
fldl
xchg
insb
lahf
fwait
sub
push
ds
dec
into
or
sbb
shlb
mov
daa
sbb
std
jne
call
cltd
adc
and
mov
sar
or
dec
loopne
cmp
ficoms
inc
pusha
es
push
xor
imul
cmpb
or
jecxz
lret
xchg
or
cmp
repnz
jp
call
in
cltd
idiv
xchg
repnz
xchg
mov
push
sub
stos
mov
test
mov
mov
mov
movsb
and
mov
mov
dec
push
xor
addr16
in
sub
push
ss
cli
dec
imul
pop
rol
cmp
xchg
cs
ret
dec
shr
mov
mov
jl
insl
jo
outsl
aad
dec
ss
jge
sub
subb
jno
mov
push
jb
lcall
push
out
pop
shll
inc
adc
cmpsb
sub
xchg
jp
shll
mov
xor
fs
xor
cld
and
imul
cmpl
push
add
movsl
iret
lret
add
add
sub
stos
jmp
pop
test
lea
lret
imul
leave
push
add
xchg
lret
xchg
lock
ljmp
add
or
test
popa
and
push
je
lods
sub
shr
dec
int
adc
adcl
lea
call
mov
xchg
bound
daa
in
dec
pop
mov
nop
cmp
mov
addr16
insl
es
test
jmp
imul
and
mov
lcall
or
adc
call
inc
push
ja
test
mov
jge
dec
xchg
subb
push
dec
call
xchg
sahf
repnz
outsb
cmpsb
and
mov
out
and
xor
fcoms
adc
sahf
lahf
popa
xchg
flds
jo
cltd
jns
loopne
dec
shlb
or
jl
sti
shll
mov
xor
mov
push
dec
mov
add
push
mov
lds
inc
das
cmc
loope
movl
or
fildl
loop
in
push
repz
aaa
sbb
lcall
scas
xchg
pop
mov
hlt
xor
daa
iret
iret
push
mov
jl
inc
push
mov
hlt
into
shll
insb
fiadds
imul
xchg
repz
jo
popf
xchg
aam
mov
push
jae
pop
repz
lret
loope
xchg
inc
pusha
insb
sub
mov
cld
dec
inc
push
pop
xchg
dec
lea
push
add
sbb
in
fidivl
mov
dec
mov
mov
and
inc
popa
stc
pop
push
imul
sbb
or
cmp
ljmp
sub
jo
sbb
out
notl
inc
loope
lcall
fsub
adc
cmp
sbb
mov
les
sub
sub
mov
sbb
jge
neg
jno
out
pop
lcall
repz
push
adcl
jmp
out
xchg
loopne
xchg
sub
xor
cmc
sub
fbld
xlat
add
jo
or
inc
inc
pop
repnz
stos
push
jo
rol
das
dec
jp
ret
pop
jno
popa
push
dec
pop
mov
push
or
faddp
sub
dec
mov
jns
mov
shll
jle
fs
and
sbb
xor
ret
or
cmp
mov
adc
mov
daa
pop
pop
push
fistpl
jb
mov
sub
mov
xchg
push
loope
scas
jnp
cmpsl
dec
lods
jle
jbe
cmpb
lret
loopne
mov
mov
ret
sub
jne
pop
mov
cs
sbb
fsubrp
int
imul
push
dec
in
rolb
pop
xorl
pop
loop
sub
lock
fmuls
sbb
sub
jo
orb
adc
push
push
into
add
gs
addr16
or
add
mov
stos
imulb
in
inc
fwait
or
in
jb
je
mov
das
xchg
push
xchg
mov
ret
aas
outsb
lods
sti
jge
iret
cmpsb
cwtl
orb
pusha
push
lds
out
call
mov
and
lea
cmc
xchg
aaa
outsl
je
dec
gs
xchg
testb
xchg
push
lcall
cmp
push
pop
mov
iret
sti
dec
push
stc
or
sahf
cmp
fsubrs
ss
and
clc
pop
push
subb
xor
xor
mov
sub
mov
jecxz
out
stos
cmpsb
sub
jns
add
push
mov
add
dec
xor
jmp
cmp
call
cs
push
addb
inc
scas
js
mov
sbb
sahf
mov
pusha
shl
repnz
pusha
add
adc
xor
in
insl
push
push
jno
inc
adc
lahf
shlb
movsl
out
stc
and
sbb
xchg
shll
repnz
int
add
cwtl
into
js
xchg
sub
dec
outsl
push
int3
sbb
mov
xlat
leave
fs
sarl
and
rcrl
mov
fs
sbb
push
mov
pop
mov
lods
andl
inc
xchg
sbb
cltd
add
jmp
gs
fcmovnb
in
fdivr
mov
inc
shll
mov
xchg
fistpll
pop
cli
ret
std
sub
push
or
repnz
movsb
lods
add
jns
ss
arpl
mov
mov
imul
xchg
into
xor
cmp
add
fwait
lds
adc
mov
adc
clc
pop
dec
popf
mov
imul
cmpsl
aam
cmp
jecxz
jnp
lock
clc
mov
xchg
aam
dec
xchg
jb,pn
loopne
jle
adc
push
inc
mov
aas
inc
and
xchg
dec
and
add
and
ja
push
sub
cs
scas
adc
inc
movsb
pop
loop
sub
jg
dec
sub
cmpl
ss
and
pop
ss
inc
jle
in
inc
aam
outsl
add
xchg
mov
mov
sbb
cwtl
or
lss
mov
data16
pusha
sahf
in
push
adc
cmp
sub
and
add
ja
pop
or
arpl
jo
arpl
lahf
cs
inc
outsb
sub
xor
fildll
cli
mov
cmp
loopne
dec
adc
loope
int
data16
sub
sahf
ret
adc
mov
aad
ret
ret
ja
gs
jge
mov
push
stc
push
mov
cld
das
es
jmp
adc
test
outsb
enter
jno
leave
cmp
cs
mov
add
xchg
daa
and
int3
adc
test
and
loop
push
or
shlb
in
mov
push
dec
and
push
inc
lea
lret
clc
imul
jnp
jp
int
popa
push
add
xchg
dec
inc
inc
mov
dec
jle
adc
test
repnz
or
xchg
and
sub
fs
xchg
push
adc
mov
idivl
leave
mov
xchg
add
nop
js
or
pop
movsb
cltd
mov
cmp
xor
adc
mov
cmp
in
cmp
push
lret
pop
mov
out
pop
push
mov
ja
jo
daa
leave
or
into
cli
clc
lods
sti
or
in
ret
dec
add
ljmp
jo
outsl
testl
xchg
jle
loope
jb
arpl
lcall
insl
fstl
test
das
mov
mov
lea
addr16
cs
pop
jae
pop
push
push
mov
mov
dec
add
push
add
imul
mov
sbb
sub
retw
mov
leave
or
ret
xor
pop
ret
xor
push
push
mov
pop
fistl
mov
repnz
in
push
or
cs
sbb
push
filds
push
push
in
cmp
les
pop
out
push
out
xchg
add
inc
jnp
mov
and
push
lret
dec
ja
pop
lods
xchg
pushf
pop
dec
data16
cwtl
or
xor
je
xchg
in
mov
fwait
and
nop
out
mov
lahf
push
cmp
mov
jg
aas
xchg
pop
push
push
push
aad
inc
inc
mov
and
repz
mov
cltd
popa
pop
lret
cwtl
and
jno
cmp
shr
subb
icebp
insl
inc
push
fmul
jo
xchg
sbb
imul
out
leave
sub
loope
cmc
or
loope
push
push
stos
inc
addl
mov
xchg
arpl
sub
sbb
xchg
das
cs
jle
jmp
aad
sarl
mov
test
clc
push
ret
fisttps
xor
ficompl
lcall
cmp
jg
jp
test
scas
orl
xchg
int
popf
js
cmp
inc
fidivrs
cli
mov
imul
sbb
test
or
dec
jno
pop
ret
arpl
push
fnstenv
push
ret
sbb
movsb
jae
mov
bound
cmp
sbb
ret
mov
sub
mov
push
mov
add
mov
loop
repnz
mov
iret
lcall
loope
rolb
jp
and
push
or
sbb
dec
cmp
ret
xchg
int
icebp
insb
cmp
sbb
xchg
jne
aad
mov
and
jmp
inc
or
xlat
fxch
mov
and
jne
adc
into
inc
jne
pusha
mov
mov
divb
adc
jno
add
push
jl
test
mov
or
and
rcrl
movsb
and
push
mov
cld
jg
and
adc
xchg
or
iret
sarl
loope
push
xchg
jne
out
mov
xchg
idiv
push
leave
fsubs
sar
push
adc
ret
xchg
mov
fisttpl
stos
dec
leave
mov
inc
fwait
gs
popf
push
ficoml
dec
mov
cmp
dec
xchg
cwtl
cltd
dec
push
mov
sbb
cmp
lahf
inc
xchg
cmp
jnp
pusha
push
sbb
push
into
and
subb
nop
cmp
outsl
cmp
outsb
xchg
enter
dec
mov
cmp
mov
cs
mov
rorb
or
mov
sbb
jecxz
mov
rclb
fdivrl
clc
das
jp
push
dec
lods
sbb
jl
mov
ljmp
aam
fs
add
iret
movsb
push
pop
gs
out
or
dec
stos
leave
adc
adc
mov
and
add
fs
int3
xor
jns
add
cmp
or
push
push
mov
push
cli
arpl
jo
nop
push
insl
or
das
es
jg
adc
adc
jae
push
push
ficompl
xor
outsl
negl
mov
push
stc
mov
push
sbb
test
or
fdivp
inc
rolb
mov
pop
sbb
inc
push
push
push
addr16
rcl
xchg
data16
pop
leave
jno
or
pop
mov
mov
mov
mov
daa
cmp
pushl
mov
dec
and
repz
gs
xchg
lds
cmc
imul
xchg
pop
stc
repz
xor
scas
sahf
sub
das
mov
xor
int
int3
fcmovbe
in
jmp
pusha
or
jno
dec
jp
stc
adc
push
pusha
xchg
push
jg
mov
xor
cwtl
xchg
lahf
adc
sub
int
cmpsl
in
lods
jnp
mov
add
pusha
lret
inc
sub
repz
or
mov
jl
into
out
cwtl
out
out
pop
fcomi
lea
icebp
shlb
jl
or
xor
mov
sub
rcll
pop
sub
pop
xor
outsl
fldenv
push
push
mov
or
fcmovnbe
lods
fwait
push
pop
dec
divb
mov
mov
daa
xchg
push
push
ret
mov
and
sub
jnp
push
adc
mov
and
icebp
mov
inc
sbb
mov
push
inc
xchg
sub
xchg
jb
lock
fmull
cmp
aas
jae
pop
mov
leave
js
adc
sub
popa
sub
lods
insl
fcoml
pop
bound
adc
dec
add
push
leave
lods
hlt
mov
sahf
ja
push
cltd
cld
ret
imul
xor
cli
push
inc
in
test
loop
xor
insl
push
dec
test
cmp
mov
mov
out
sbb
test
mov
sti
sbb
mov
xchg
lahf
out
jmp
add
pushf
cwtl
push
inc
out
push
adc
scas
repz
and
mov
and
jae
and
mov
mov
pop
jmp
xchg
sarb
call
aaa
cmp
popl
outsb
cmpsl
xorb
in
mov
lahf
and
jno
out
xor
mov
sbbb
scas
jns
pushf
outsb
dec
push
mov
cmp
inc
mov
or
movsb
cs
int3
inc
push
inc
imul
mov
imulb
sbb
adc
nop
frstor
xor
or
loope
fists
outsb
in
jmp
jecxz
jge
push
repz
jmp
inc
pushf
jecxz
and
sar
test
adc
aaa
mov
add
mov
ss
and
mov
cltd
sub
or
roll
cmp
lret
icebp
popl
fmull
popa
sbb
mov
jne
jmp
iret
dec
pop
out
push
out
lahf
push
lods
adc
cmc
cwtl
ds
popf
mov
mov
dec
sub
sbb
popf
push
sahf
sub
push
pop
roll
pusha
ss
jl
fdivrl
and
arpl
pop
pop
gs
jns
ja
jl
mov
cli
mov
sub
fs
in
scas
or
jnp
mov
mov
push
ja
push
pushf
mov
xor
arpl
push
jae
and
sbb
mov
shrl
sbb
repnz
dec
and
jl
mov
inc
aad
dec
cli
fstpt
sti
mov
adc
pop
or
add
aam
jmp
mov
outsb
loop
pop
out
and
sarb
dec
adc
push
int3
scas
mov
das
mov
and
adc
dec
aaa
lds
xor
mov
fcoml
pop
es
dec
mov
imul
mov
out
or
es
or
adc
aaa
mov
sahf
arpl
pop
inc
adc
xor
sbb
push
test
popl
iret
movzwl
sub
xchg
aas
lds
sti
xor
or
in
and
cmp
call
loopne
ds
popf
mov
jmp
leave
add
sti
scas
add
cwtl
sub
pop
sub
nop
add
and
jbe
xchg
in
or
cli
mov
fcmovnb
dec
imull
pop
out
test
mov
pushl
jmp
mov
ret
adcb
mov
daa
mov
stc
scas
jmp
daa
add
lock
xchg
adc
mov
in
mov
repnz
iret
or
movsl
loop
adc
xchg
andb
mov
push
adc
sbbl
add
jp
jle
cmp
je
lcall
sbb
ret
scas
cmpsl
movsl
mov
lock
xchg
imulb
or
xlat
adc
sti
pop
aad
push
les
pop
dec
imul
jno
inc
out
push
add
or
cmp
sbb
and
cmpsb
sbb
stc
mov
push
adc
adc
mov
pop
imul
shlb
icebp
insb
and
sub
jge
scas
sbb
into
jge
mov
inc
jg
loop
adc
pushl
shrl
cmp
push
arpl
dec
les
inc
scas
lret
sub
lock
test
enter
sub
repz
aas
test
mov
push
call
outsb
mov
sbb
lcall
dec
rorb
jmp
pop
fdivs
and
idivl
cmp
mov
jb
test
mov
and
int
jg
mov
push
lcall
sub
in
pop
or
dec
sbb
hlt
into
pop
scas
push
and
fsubr
out
mov
jns
sub
lods
idivb
jp
jbe
xchg
rep
insb
xor
xor
sub
dec
aas
sahf
xor
pop
stos
ret
adc
loope
sub
and
lahf
arpl
cmp
shl
repnz
sbb
mov
into
push
mov
rcr
insb
ljmp
movsl
pop
inc
pop
jmp
mov
dec
cmpl
roll
push
out
es
mov
xchg
dec
insb
and
cmp
sahf
cmp
stc
lea
iret
jbe
or
push
cmp
push
pop
dec
pop
outsb
ljmp
dec
divl
test
jecxz
add
mov
lahf
outsb
mov
lret
negb
cmpsl
cld
cwtl
rol
fldt
jne
or
push
inc
cmp
xor
push
inc
or
add
jg
fisubl
xor
loopne
jb
movsl
fimuls
call
xor
jns
ffreep
das
sub
scas
call
inc
fstps
fdivs
pop
insl
and
dec
cli
and
lock
lods
test
enter
mov
lret
rclb
arpl
jb
and
pop
in
popf
in
xor
fidivs
lret
cli
std
in
sbb
pop
add
cmpsl
adc
jns
mov
jecxz
shll
pop
push
pop
arpl
stos
daa
mov
pop
repz
rorb
add
mov
test
call
mov
mov
jge
inc
pop
jb
popa
mov
ja
mov
mov
call
outsb
int3
mov
mov
std
sbbb
and
jle
mov
add
inc
ss
aaa
and
gs
icebp
add
jns
ret
mov
loope
xchg
sub
movb
idiv
test
jge
jne
jg
pusha
movsb
popa
aaa
pop
inc
dec
xchg
xchg
mov
add
scas
and
roll
ror
out
cs
add
jg
add
mov
jbe
and
sbb
jge
or
loop
ds
mov
push
sub
mov
test
pop
mov
mov
cmc
jae
mov
jecxz
sbb
mov
es
out
or
jne
divb
in
and
dec
lret
mov
mov
mov
arpl
rcll
test
clc
jnp
shll
inc
xchg
jb
icebp
fdivrl
dec
sarb
inc
add
jno
cmp
jae
sar
dec
and
pop
cmp
in
adc
std
inc
orl
stos
inc
jbe
sbb
int3
sub
jo
xor
outsb
iret
in
lods
fmuls
sub
and
gs
adc
jne
push
imul
push
test
in
adc
lods
jmp
adc
fildll
push
roll
mov
sbb
jp
pop
mov
outsb
push
jbe
or
mov
inc
pop
andb
mov
inc
push
jbe
mov
les
loope
into
loopne
push
aaa
jge
push
push
clc
and
test
shlb
or
loopne
inc
push
push
mov
popf
stos
dec
lock
mov
call
xchg
mov
loopne
adc
loope
and
jmp
push
dec
lods
es
jno
add
jecxz
outsl
mov
pop
dec
mov
add
loop
fidivrl
lret
test
test
fldcw
add
aas
xchg
sbb
es
cmc
or
push
lds
push
movsl
or
mov
das
es
scas
xor
sub
sbb
pop
push
ss
xchg
inc
ret
push
xor
lods
fldcw
mov
dec
adc
ja
jl
mov
sbb
xor
insl
xchg
jp
and
pop
jmp
loopne
adc
fs
es
lods
xchg
jb
dec
xor
orb
xchg
imul
push
push
jge
cmpsb
sar
cli
inc
inc
test
lcall
xchg
xchg
scas
mov
pop
cmp
jmp
mov
callw
fchs
in
xchg
and
cld
lcall
inc
push
clc
mov
and
push
mov
sbb
mov
fwait
mov
iret
mov
sub
sub
outsl
push
cmpsb
dec
js
dec
std
cmp
inc
push
aaa
daa
sahf
cmp
insl
in
dec
cmp
aaa
sbb
mov
ret
imul
jle
popf
cmpsl
mov
dec
jp
adcb
mov
xlat
arpl
push
out
pop
pop
sbb
fnsave
cmp
cmpsl
or
xchg
fiaddl
hlt
pop
sbb
jg
pop
pop
mov
and
das
sub
jmp
and
or
fcoms
jmp
xor
add
movsl
sub
test
orb
leave
add
dec
ds
ret
push
sub
fldenv
fidivl
cmpsl
test
lock
addr16
inc
test
sub
mov
leave
adc
jo
aad
rcl
in
mov
or
or
lea
and
xor
sub
mov
mov
pusha
mov
mov
addb
fstps
sbb
rclb
add
aad
mov
xchg
xlat
js
loop
pop
enter
pop
cmp
dec
sti
xchg
data16
repz
cmpb
mov
arpl
lods
decl
push
add
or
rclb
out
adc
inc
out
out
adc
mov
xor
imul
test
ss
arpl
adc
loopne
push
sub
addr16
rclb
test
movntq
jge
xchg
inc
sub
cmp
lret
cwtl
push
jne
push
fdivrs
inc
popa
out
dec
and
out
push
movsl
mov
lods
inc
fld
xchg
rcll
jb
ret
sub
sub
cmpl
loopne
lods
mov
push
into
mov
scas
mov
adc
repz
xchg
pop
push
pop
or
lods
fdiv
inc
aad
shlb
addl
mov
cmc
sub
out
pop
adc
adc
fcoms
and
mov
inc
dec
mov
pop
mov
lock
dec
out
repz
mov
cmp
pop
push
xor
jns
lcall
push
adc
jnp
ja
jnp
cmp
cmp
lcall
add
pop
cmp
push
add
and
je
fs
stos
pop
or
sub
add
pop
icebp
xchg
push
cs
push
push
ret
lcall
iret
test
cmpsb
adcb
push
roll
push
test
mov
rolb
repnz
rorb
xor
mov
dec
mov
mov
stos
mov
repnz
mov
xchg
ss
xchg
cmpsl
int3
lods
push
fmuls
hlt
stc
and
cwtl
adcb
daa
aam
rorl
mov
ret
into
jo
jge
or
jge
inc
cli
out
outsl
push
clc
xchg
movsb
push
cmp
stos
xor
test
cmp
iret
sahf
push
jg
dec
shll
cmp
je
inc
mov
out
std
movsb
mov
in
cmp
xor
mov
mov
jecxz
dec
adc
xchg
adc
and
lea
mov
data16
or
popa
mov
pop
push
pop
cwtl
popa
adc
fnop
push
pusha
inc
mov
sub
rorb
push
and
push
pop
fadds
inc
popf
lcall
pop
pushf
pop
jno
adc
sub
push
dec
push
leave
popa
jns
push
sub
dec
sbb
xchg
in
inc
pop
pop
pop
jle
lea
cmp
fnstsw
fcompl
out
fldln2
inc
pop
out
xchg
cs
add
lcall
ljmp
out
xor
int3
and
lods
push
push
dec
int3
jno
mov
sub
out
test
decb
outsl
push
mov
leave
ds
fcoms
xchg
push
imull
cmpsb
push
pop
sub
push
dec
jmp
xchg
mov
jae
scas
mov
pop
lea
out
push
inc
mov
adc
mov
loopne
hlt
fchs
ret
int
cs
mov
js
xchg
pop
cmpl
mov
repz
insl
adc
adc
xchg
xchg
imul
rclb
insb
xchg
lret
cli
rcr
xchg
mov
in
sbb
int3
jg
jmp
pop
jnp
mov
lret
scas
xchg
insl
inc
fldenv
ret
xchg
cs
xchg
in
xchg
and
pop
jg
mov
aas
jle
cld
xchg
sbb
fnstenv
lahf
cltd
les
xor
dec
notb
add
inc
pop
ror
push
mov
daa
mov
inc
adc
iret
int
roll
mov
mov
xorb
hlt
das
xchg
pop
sbb
push
or
out
insb
ficompl
rcll
pop
je
je
std
les
add
push
pop
or
aaa
pusha
xor
sub
mov
cmpsl
in
cld
loop
pop
es
sbb
call
in
and
push
in
mov
ss
and
sub
cmp
je
sbb
outsl
xlat
xlat
push
add
mov
xor
insl
ret
aad
inc
inc
into
bound
repz
in
arpl
int
iret
in
ja
les
nop
sub
daa
push
out
adc
loope
ss
adc
pop
lods
jmp
cmpsb
xchg
fdivl
popa
iret
xchg
sbb
in
setno
mov
inc
clc
sbb
inc
nop
insl
ror
and
dec
das
mov
daa
sbb
sbb
call
adc
popa
int
sahf
iret
je
sti
push
jg
adc
mov
cmp
push
adc
lret
imul
lret
sbb
icebp
into
jl
sbb
ljmp
jb
in
mov
in
jne
sub
pop
pop
repz
and
loope
inc
dec
dec
cmpsb
push
nop
xor
outsb
cmpsb
ss
and
inc
js
cmp
repz
popf
hlt
daa
inc
sub
adc
dec
cmpsl
pop
test
fdivrs
mov
pop
mov
fidivs
and
cmp
fstpt
jae
dec
mov
pop
test
sbb
nop
xchg
jg
cmp
pushf
or
mov
and
adc
fimull
stos
jno
inc
sti
fidivl
movsl
push
cmp
cmpsb
inc
stos
cmpl
mov
push
test
pop
cmp
into
test
cmpsb
mov
lods
dec
adc
outsb
push
pop
sarb
int3
cmp
popa
pushf
and
add
mov
cmp
mov
xchg
ja
std
lcall
jmp
pop
js
mov
lds
push
adc
inc
add
fldcw
mov
ret
fadds
sbb
inc
dec
inc
sti
lret
mov
adc
sbb
xchg
scas
add
jecxz
or
lods
int3
jge
mov
ja
icebp
sub
loope
sbb
mov
and
lods
jns
inc
sbb
cmpsl
rorl
scas
icebp
add
pushf
xchg
or
push
dec
inc
lahf
jns
xchg
xchg
adc
bound
xchg
sub
pusha
pop
xchg
lret
xchg
pop
push
ljmp
clc
add
xor
or
jns
add
int3
int3
movsb
sbb
stos
ljmp
in
imul
mov
cmp
in
test
leave
popa
adc
fisubrl
jb
insb
pop
jno
and
jns
inc
mov
mov
push
push
jle
add
mov
inc
adc
sub
lahf
mov
inc
mov
mov
dec
pop
aaa
fisubs
sub
aas
mov
inc
push
fs
or
pop
cmp
mov
fnstenv
xchg
and
or
pop
sub
add
and
jg
dec
and
arpl
jl
test
mov
jmp
push
push
mov
mov
jp
jge
addr16
sub
xchg
inc
jge
jle
and
cld
aam
add
jmp
roll
or
cmp
loopne
or
repnz
xchg
les
out
xchg
fcmovu
test
ret
lock
mov
mov
mov
hlt
imul
inc
or
push
xchg
cs
dec
jnp
cmp
mov
lods
jg
sub
xchg
in
or
jae
or
out
jecxz
movsl
loop
mov
and
inc
lods
push
mov
fisubrs
mov
sbb
fsubrs
sub
repnz
scas
push
ss
outsl
imul
jbe
icebp
test
enter
and
cmpsb
faddl
cmp
ret
cmp
fsubl
mov
push
lock
cmp
stos
mulb
dec
cmpsl
push
aas
mov
icebp
dec
mov
sub
pop
cmc
pusha
dec
aam
pop
fwait
aaa
or
jge
push
mov
jb
ja
or
and
add
scas
add
ror
imul
negl
cli
xchg
in
loope
inc
adc
aas
fucomp
cmp
aas
mov
mov
xchg
mov
mov
clc
test
shrl
pop
or
xchg
inc
insb
cmp
pop
ss
insb
jne
insl
mov
and
sbb
scas
jge
lahf
mov
sub
cmp
out
and
pusha
imul
mov
cli
sbb
mov
les
lods
shlb
inc
pop
jno
test
lret
cmc
rclb
fldl
pop
jo
sub
xor
iret
les
aam
pop
ja
pop
inc
xor
pop
dec
out
pushf
mov
sbb
mov
inc
outsl
call
inc
jp
popf
mov
mov
icebp
jmp
add
inc
mov
push
push
mov
xchg
movb
aas
pop
xor
lret
xchg
xchg
sbb
rcl
pusha
les
insb
cli
or
shl
jecxz
inc
mov
fisttpll
jne
fsubrl
fcmovbe
data16
push
push
int3
fists
cmp
or
fsubrl
pushf
inc
loop
and
adc
enter
out
add
int3
cli
sub
negl
iret
loope
mov
jbe
xor
aam
push
xchg
inc
call
and
inc
inc
inc
fcmovu
and
repnz
cmpsb
inc
sbbb
ds
pop
pop
je
lret
and
dec
jo
jo
test
cs
loop
in
sarl
das
scas
push
dec
fidivs
sbb
stos
loope
jnp
push
jmp
mov
repnz
lcall
sub
clc
stos
inc
fucomp
cmp
sti
xor
mov
dec
xchg
popf
out
pop
add
jbe
cmp
mov
push
sub
icebp
test
add
jp
imul
mov
lods
test
stos
fs
push
jne
in
or
lcall
test
daa
xchg
mov
inc
xor
jb
fcomi
js
inc
xor
bnd
cmp
das
pop
xchg
stos
shl
xchg
lods
imul
stos
pop
add
pop
pop
popa
out
xor
mov
adc
stc
mov
dec
pushf
addl
fcmovnbe
shrl
sti
mov
mov
xchg
sub
repz
dec
jl
cld
movzbl
push
fwait
pop
ss
cs
cli
jns
sbb
leave
aaa
sbb
sub
push
orl
in
dec
mov
and
dec
js
pop
xlat
adc
adc
mov
and
lods
adc
addr16
inc
ljmp
nop
mov
push
mov
push
movlps
inc
mov
add
gs
mov
sbb
xrelease
mov
mov
push
loopne
mov
bound
dec
inc
aas
dec
mov
adc
push
and
leave
arpl
mov
lds
adc
jl
inc
xor
mov
sub
arpl
adc
scas
out
sbb
nop
ret
cmpsb
adc
addps
pop
in
pop
clc
movsl
mov
andb
stos
cmp
rorb
es
sub
add
fimuls
into
cmp
sbb
aaa
data16
jle
jge
mov
into
iret
ficoms
rcll
mov
ret
imul
mov
add
lcall
fiadds
mov
push
inc
mov
js
pop
clc
insb
mov
dec
push
lret
pop
add
add
stc
add
cltd
mov
in
lds
je
repz
sahf
adc
cmpsl
stos
inc
and
icebp
push
shrb
mov
mov
aad
int
and
fwait
imul
xchg
jae
mov
leave
lods
xchg
cmp
insl
mov
inc
pop
xchg
movsb
mov
movsl
out
jg
sub
xor
dec
push
sbb
je
sti
rcll
cmp
dec
xchg
mov
movsl
mov
in
popf
in
lret
movsb
push
je
dec
pop
sbb
leave
mov
fnstenv
add
loopne
jae
add
int3
jb
push
dec
inc
lods
fs
lods
enter
sbb
add
leave
test
cmpsl
fxch
fdivl
push
pop
jecxz
fisubl
jecxz
out
sbb
inc
rorl
loopne
xlat
dec
xor
int
lret
ret
shrb
jl
mov
xor
add
push
lock
je
pop
push
add
data16
sub
xlat
xor
xlat
pop
in
lock
ret
push
mov
push
mov
add
sbb
push
sbb
icebp
int
ds
jae
jno
fwait
push
xor
xchg
in
pop
pop
inc
ret
scas
add
fcmove
fmulp
or
lods
mov
mov
lahf
leave
push
mov
jp
pusha
jmp
and
inc
jnp
mov
in
rcll
fs
xchg
xor
daa
rclb
sbb
xlat
adc
roll
adc
add
cs
in
pushf
mov
mov
repnz
mov
mov
inc
add
dec
jmp
inc
adc
jb
pop
pop
push
sbb
lahf
rcll
xchg
out
fbld
mov
add
test
add
mov
mov
es
and
and
xchg
cmp
pop
push
sarl
mov
xor
jmp
aam
inc
inc
cmpl
data16
cmpl
sbb
movsl
out
xchg
fsubl
es
in
fldt
push
inc
fisttpl
loope
mov
arpl
pop
xchg
lret
sbbl
mov
sub
jge
mov
pop
push
in
push
push
jg
leave
pop
push
fs
cmp
mov
pop
sub
or
lret
fcoml
daa
sub
mov
mov
roll
push
xchg
sub
and
cmp
std
push
push
dec
push
sarl
je
pop
cmpsl
and
hlt
cmpsl
sbb
sub
add
or
mov
outsl
and
add
aad
push
and
vhsubps
fs
push
dec
or
data16
and
mov
add
aam
mov
push
pop
pop
inc
nop
dec
jmp
mull
testl
lds
fsubl
mov
addr16
xor
dec
in
pop
inc
popa
movsl
lahf
bound
mov
xor
sbb
sahf
push
push
scas
pop
xor
jmp
subl
lahf
jecxz
sbb
adc
lods
jae
repnz
xor
les
cmp
sub
xchg
sub
fisttpll
enter
dec
jo
pop
or
mov
cvtdq2ps
jmp
xchg
mov
mov
addl
into
shr
lods
mov
sub
adc
fdivs
xchg
enter
fidivl
test
sub
std
sub
in
sahf
aad
mov
or
outsb
inc
leave
in
mov
lret
in
lret
add
out
stos
pop
nop
mov
lods
push
jae
stc
fcmovnu
lea
mov
sub
mov
push
sbbb
dec
jne
in
dec
imul
cli
sub
jg
in
pop
shll
add
xor
mov
test
mov
hlt
push
inc
and
scas
dec
outsb
cmp
push
xchg
stc
sti
cmc
sarl
insb
nop
mov
lea
out
cltd
dec
cld
loop
jo
fldt
xor
cmpsb
cmpsl
fsubl
gs
xor
rorl
xor
push
ret
fisubs
adc
outsb
sub
iret
adc
add
ficoms
lret
lds
ret
inc
mov
mov
pop
ja
aaa
fisubl
addb
jo
imul
sbb
sbb
jmp
mov
ds
out
lds
sub
js
sahf
notb
inc
and
popf
addr16
fistpll
add
mov
hlt
push
adc
scas
or
sarb
or
xchg
mov
loope
lea
fsubs
iret
into
cmpsl
push
push
je
push
repz
mov
insb
push
push
inc
or
ss
dec
mov
jp
jle
mov
int
jmp
and
jmp
daa
mov
inc
inc
mov
xor
cltd
lahf
push
dec
mov
or
insb
jg
adc
sub
out
insl
sub
mov
repz
test
lahf
push
jb
mov
mov
mov
cmp
pop
xor
hlt
mov
js
adc
cltd
mov
shll
leave
pop
cmp
jae
arpl
out
mov
push
jbe
cmp
out
insl
hlt
xchg
push
imul
sub
mov
sub
pop
out
lea
jns
xchg
ss
cmp
push
mov
add
aas
fdivrl
xchg
xor
fidivs
xorl
jl
add
bound
pop
jp
jns
sarl
adc
dec
jo
xlat
repz
mov
mov
pop
into
mov
cmpsl
xchg
fsubrs
enter
out
mov
iret
dec
fistl
push
sub
sub
jecxz
movsb
outsb
shl
pop
mov
mov
push
and
sbb
mov
mov
cmp
cld
xchg
cmc
and
mov
ss
jne
in
outsb
push
and
addr16
mov
sahf
mov
jns
test
subl
pushf
push
mov
fwait
push
out
pop
sarb
out
sub
inc
dec
out
jmp
cmp
xchg
adc
fsubrl
leave
and
adc
xlat
or
sbb
mov
shl
xor
or
cmp
je
scas
lret
mov
mov
enter
xor
pop
enter
mov
jbe
sbb
test
jecxz
inc
cs
test
nop
inc
fnop
xchg
imul
or
test
ja
ljmp
inc
scas
dec
cltd
xchg
outsl
jmp
mov
fwait
insl
xchg
ret
ret
fldt
pusha
adc
bsf
movsb
loop
bound
je
adc
xchg
cld
push
popf
shr
adc
mov
push
fbld
push
leave
sahf
loopne
dec
incb
inc
xchg
add
popa
xchg
xchg
enter
daa
in
mov
jp
fmul
sbb
nop
lret
sub
jmp
lds
mov
or
or
cmpsb
xor
mov
jecxz
xchg
repz
push
or
subb
rorb
pushf
fsub
cld
push
addb
mov
mov
fwait
xchg
fbstp
mov
jne
inc
dec
inc
push
inc
outsl
push
mov
adc
fisttpl
mov
or
sub
js
push
shlb
jecxz
aas
insl
sbb
je
std
xor
cli
dec
loop
sbb
sbb
jo
jg
sbb
std
aas
aaa
in
dec
lds
icebp
daa
mov
fbstp
lods
add
nop
mov
imul
into
out
inc
cwtl
xchg
loope
clc
test
jb
pop
cmp
xor
xchg
pop
xor
lock
cld
pop
cmp
push
insl
adc
push
sbb
cmp
pop
or
xor
mov
adc
jne
xor
test
push
lods
jns
sbb
pop
jp
push
jo
pusha
mov
and
cmp
xor
push
pop
cld
out
out
popf
nop
gs
jle
push
adc
aad
ret
add
rorb
xor
add
push
mov
mov
mov
mov
mov
xor
fcoms
jmp
lret
stos
and
fstpl
sub
sbb
sub
les
add
imul
outsb
and
pop
or
sbb
sbb
sub
mov
pop
mov
add
dec
cli
out
pop
push
jmp
push
xchg
in
fs
gs
andl
lods
mov
mov
push
adc
mov
jno
fsubrs
inc
adc
fucomip
les
or
stc
rorl
lea
aaa
inc
int
mov
mov
mov
inc
xlat
dec
ds
testb
fisubrl
xchg
pushf
fnsave
xchg
nop
shl
cmp
xor
loop
popa
dec
es
popa
outsl
mov
pop
dec
inc
ss
pop
add
jns
sti
cli
cmc
fdivr
inc
add
mov
dec
xchg
psadbw
fs
inc
adc
push
push
push
imul
adc
mov
jbe
jp
pushf
sbb
imul
cli
js
lock
mov
push
jbe
imul
sbb
stos
out
test
fucomp
mov
nop
in
inc
sub
push
pusha
mov
test
xchg
inc
call
mov
leave
stc
outsl
cltd
outsb
in
mov
loopne
push
cmp
push
push
pop
inc
sub
xor
add
xor
shlb
and
ss
adc
mov
pop
cmp
mov
rcrl
or
mov
orb
mov
cs
or
cmp
outsl
mov
sahf
mov
dec
out
lds
mov
ds
dec
scas
dec
add
iret
aam
xchg
add
jle
es
icebp
insl
xchg
divl
sub
sbb
add
out
syscall
push
int
test
addr16
shlb
xchg
dec
fstps
push
or
lret
je
add
cli
pop
aaa
in
fs
mov
or
insl
fwait
hlt
pop
lods
out
mov
mov
cld
xor
push
out
in
and
lahf
inc
inc
sbb
or
fistpl
call
xlat
mov
bound
cmpsb
aas
jmp
inc
out
cmp
in
adc
mov
dec
addr16
iret
jns
test
inc
das
add
push
and
mov
dec
mov
mov
data16
scas
arpl
mov
mov
sti
adc
sub
cmp
dec
pop
mov
inc
dec
pushf
pop
pop
xor
cmp
div
inc
div
fwait
ss
add
call
push
and
std
cmpl
adc
push
cmpsl
addb
xchg
pop
in
dec
fidivl
or
fidivrl
mov
dec
mov
mov
and
add
or
ja,pt
inc
cmp
push
sub
dec
jo
push
loope
cmc
xchg
mov
out
mov
test
pop
or
jae
test
dec
in
push
push
in
push
jle
fisubl
xor
inc
mov
mov
je
ja
das
push
cltd
jge
ds
aad
pusha
and
dec
pop
and
fiadds
inc
adc
push
jge
fdivl
inc
mov
jns
iret
stc
hlt
push
repz
fadd
jno
jno
inc
sub
les
push
insl
insl
adc
arpl
sub
shrb
and
popf
push
sub
jmp
pop
pop
ljmp
jae
hlt
cs
dec
sbb
movb
jb
out
jle
and
cld
mov
add
pop
into
ret
sarl
inc
mov
out
test
scas
dec
pusha
xor
add
stc
or
mov
mov
fcmovnbe
mov
jle
pushf
iret
mov
pusha
test
mov
pop
push
inc
xchg
pushf
adc
and
mov
xor
mov
xor
test
shlb
sti
adc
jbe
dec
cmpsl
jno
lahf
jg
lods
jns
cmp
xor
mov
addr16
xchg
stos
rcr
ret
cs
or
cld
negl
ret
push
cmp
pop
inc
mov
mull
outsl
add
stc
cwtl
imul
outsl
stc
or
add
sbb
bnd
inc
mov
cltd
pop
jmp
push
or
ret
leave
pushf
imul
sub
fistl
mov
test
cs
aaa
movsl
je
mov
jle
cmpsl
cmp
inc
adc
push
xor
sub
and
pop
add
jmp
or
mov
pop
cmp
sub
sbb
pop
jnp
mov
pop
jp
jbe
mov
loope
cmc
decl
outsl
pop
dec
pop
test
mov
jne
test
loop
stc
sub
mov
movsl
adc
jno
mov
dec
jb
sub
mov
cmp
lret
xorb
xchg
icebp
fnsave
test
mov
mov
inc
or
je
gs
aas
mov
xor
sub
iret
loopne
mov
and
movb
jmp
and
inc
jecxz
inc
out
jns
pop
rorl
mov
pushf
cmp
adc
jae
mov
xlat
pop
pop
int3
mov
movsb
jno
xor
lahf
pop
loop
push
int
cmp
lret
out
dec
push
and
ja
repz
push
pushf
cmp
sub
mov
cmc
adc
pop
mull
lcall
lret
cli
std
out
ja
arpl
lock
dec
jb
icebp
in
fwait
jecxz
inc
fs
xchg
mov
insb
sbb
or
nop
outsb
mov
rcrl
dec
loope
push
mov
cltd
cmp
shlb
mov
cltd
sbb
and
clc
add
mov
sbb
movsl
inc
popf
add
mov
ret
pop
pop
in
cmpsb
ss
lahf
iret
dec
jmp
xchg
shr
out
cmp
pop
pop
xor
fidivrl
cld
jae
sbb
xor
pop
arpl
loope
and
xor
add
bound
movsl
shl
dec
cmp
add
inc
sahf
lea
popf
adc
orb
out
daa
mov
test
push
cmp
add
xor
fdiv
push
out
insb
scas
in
xchg
mov
scas
sbb
jae
in
jbe
and
push
mov
pusha
incl
jbe
add
cmc
out
jne
dec
add
jnp
xlat
push
lock
push
cli
fisubs
data16
inc
rcll
xchg
mov
sub
cmp
push
cmpsl
les
cld
imulb
ss
or
xor
faddl
out
add
in
xor
jge
mov
ret
adc
arpl
sbb
inc
into
push
clc
sub
je
add
andb
cld
or
jge
xchg
xchg
sbb
or
jp
das
or
cmpsl
push
xchg
daa
jecxz
push
cmp
stos
test
pop
loopne
das
and
cmpl
xchg
add
mov
push
push
test
add
pop
mov
push
push
pop
adc
xor
outsb
and
in
mov
iret
dec
fwait
jno
inc
mov
icebp
mov
gs
in
adc
pushf
mov
cmp
jo
pop
xchg
xor
out
ds
push
jnp
repz
fcomi
jbe
mov
nop
in
mov
popa
inc
lcall
xor
xchg
test
push
insb
jno
xchg
pusha
inc
aad
lock
push
add
lret
add
jl
leave
add
sbb
jl
adc
inc
cli
xlat
sbb
loopne
pop
xchg
mov
and
pop
add
mov
mov
test
adc
mov
lret
dec
out
push
femms
jno
push
mov
pop
push
lods
adc
cmp
bound
fdivrs
hlt
adc
adc
repnz
mov
jo
scas
scas
jl
stos
mov
in
fstl
jbe
test
std
popf
out
cmpsl
addb
lods
xor
sarb
mov
mov
enter
lock
push
int3
adcl
jg
sub
jg
fs
sub
sub
inc
fdivs
pop
mov
mov
sbb
arpl
pusha
leave
sarl
subl
sbb
push
pop
cmc
arpl
test
rcll
in
dec
in
cs
sub
and
jo
pop
push
int3
inc
xor
jns
sbb
loopne
dec
pop
mov
cld
mov
movsb
leave
jo
sub
jecxz
push
not
mov
pop
xchg
sti
push
lock
sbb
inc
mov
cmpsl
pop
xor
mov
negl
jle
sub
es
lds
xor
ss
jnp
ret
rcl
mov
jl
sub
dec
push
in
vmread
add
add
lret
stos
jb
mov
or
dec
and
jle
mov
adc
cmp
pop
lods
mov
or
clc
or
shll
sub
loop
sub
jne
addr16
mov
sbb
mov
mov
pop
pushl
push
fwait
or
and
je
adc
sbb
das
mov
jns
and
aam
popf
nop
fisttpll
push
sub
jne
movsb
in
lcall
jmp
cwtl
rol
dec
repnz
lods
pushf
aaa
or
add
mov
or
imul
movsl
adc
fimuls
aad
jge
pop
movsb
push
pop
nop
ljmp
jecxz
das
movsl
cli
lahf
jmp
lods
std
adc
or
sbb
pop
fisttpll
mov
xchg
mov
sbb
cwtl
xchg
add
pop
bound
aaa
lock
fmuls
jns
add
leave
add
cmp
xor
fcoms
xchg
into
jecxz
push
lahf
loop
daa
inc
cs
jge
daa
xchg
and
pusha
pusha
mov
push
jne
mov
add
inc
sub
or
dec
jg
inc
mov
jmp
fdiv
scas
and
test
mov
mov
jl
sbb
shlb
sbb
ffree
mov
pop
es
jle
mov
mov
addr16
xchg
push
mov
pushf
icebp
fwait
lret
into
inc
int3
add
pop
fs
inc
mov
mov
add
in
mov
movb
movsl
jge
sahf
and
xchg
addr16
int3
sti
inc
adc
outsb
push
int
pop
pop
sarl
inc
dec
sbb
fcompl
push
dec
test
push
mov
jae
into
push
loopne
add
or
lret
add
add
push
add
icebp
bnd
stos
cmp
loope
xor
test
cmp
cmp
lods
test
std
xor
or
icebp
mov
gs
loope
jnp
mov
and
mov
xchg
and
lock
int
popa
loopne
insl
ja
fst
dec
ficoml
ds
adc
inc
push
aaa
leave
mov
repnz
cld
push
pop
adc
cwtl
cmp
subb
adc
pop
shll
iret
pop
xchg
or
jmp
mulb
add
pop
dec
imul
jnp
xor
jl
mov
or
inc
or
jmp
pop
and
imul
roll
and
mov
pop
xor
inc
cmpsb
xchg
push
negb
push
test
sub
ret
das
rclb
ljmp
jp
push
jg
dec
inc
push
int3
inc
xorb
shlb
dec
int
orl
loope
jecxz
std
scas
pop
xchg
lahf
pop
mov
pushaw
pop
lcall
jo
iret
je
jle
outsb
jl
mov
mov
mov
push
sarl
mov
scas
mov
xor
loope
fwait
or
leave
in
negb
jl
mov
insb
cmp
mov
scas
test
or
mov
mov
sahf
push
xor
jmp
fs
pop
stos
jecxz
jns
lahf
or
icebp
iret
fs
ret
cltd
pop
mov
in
dec
mov
hlt
and
jecxz
mov
incl
push
aad
push
out
outsl
stc
out
cmp
mov
aas
cmp
ficoml
scas
mov
fcmovb
mov
mov
cmp
imull
jo
data16
add
xor
aas
pop
pop
out
push
sbb
lahf
sahf
stos
xor
lcall
xor
ret
int
ds
add
mov
xorl
js
call
addr16
call
add
push
add
pop
push
ja
jmp
jbe
push
sahf
jle
xchg
imul
fistl
stos
dec
int3
je
inc
pushf
roll
int3
xor
sbb
jne
in
fcompl
mov
cmp
pop
insb
nop
in
xchg
xchg
mov
repnz
cmp
and
lahf
jo
push
inc
mov
xchg
or
pop
in
xor
in
out
pop
dec
pop
adc
mov
aaa
jo
push
pop
mov
dec
dec
aaa
inc
xor
rcr
dec
sub
leave
cs
and
push
rcrl
in
enter
ja
inc
adc
or
mov
cli
xor
out
sub
lods
inc
ljmp
mov
dec
mov
pusha
aam
call
sbb
gs
lock
xor
mov
arpl
imul
repz
mov
ret
push
and
into
add
xchg
out
cmp
xchg
cmp
jno
pop
stos
bound
push
pop
aad
aam
mov
add
mov
push
shlb
mov
pop
ror
cmp
sub
xchg
icebp
xor
negb
sti
pop
pop
shld
add
cmp
add
ds
fsubrs
jns
int3
jb
mov
int
push
dec
test
xor
cmp
inc
or
or
int3
ret
dec
shll
jbe
fdivl
outsb
jg
ret
aas
lods
fstpl
xchg
lds
xchg
jle
dec
int
mov
fisttpll
setge
cli
push
imul
pop
inc
jle
or
inc
es
in
dec
aad
xchg
sahf
adc
or
xchg
adc
out
sbb
imulb
aad
fsubrl
inc
sbb
push
subb
pop
add
std
pop
add
aas
loope
push
sub
pop
sbb
mov
jge
jmp
push
sbb
push
push
aaa
inc
dec
xchg
fisubrs
dec
shll
mov
mov
and
mov
add
cwtl
push
push
lcall
pop
ds
lds
fcoml
push
fcompl
rcrl
mov
cli
jb
ret
sar
dec
jl
xchg
sub
test
ljmp
loopne
in
ret
sbb
stos
fcoms
mov
icebp
popa
aam
mov
gs
iret
sbb
adc
xchg
shlb
or
mov
xor
mov
lahf
mov
sub
stos
sub
and
push
fsubrp
mov
rcrb
push
sub
inc
add
leave
pop
mov
and
ss
dec
xor
stos
adc
inc
jne
nop
xor
xchg
out
pop
xchg
push
mov
dec
aam
movsb
adcb
pop
test
jo
jmp
daa
daa
repz
popf
fs
add
fstpl
xlat
or
aaa
les
hlt
ret
cmc
xchg
or
outsb
inc
orl
cmp
dec
dec
jns
mov
mov
orb
or
movsb
repz
sarl
rcr
jns
xor
rcl
repnz
movsl
ret
cwtl
or
fwait
scas
pushw
loopne
dec
pcmpeqb
push
jmp
cmpsl
inc
jle
enter
stos
mov
or
jge
cmp
ret
in
sbb
xchg
lret
mov
bound
adcb
lea
fistps
jp
out
mov
iret
sbb
mov
cmp
and
test
xchg
sahf
push
stc
and
jbe
lods
data16
mov
xchg
sar
fs
les
jmp
faddl
jno
fs
push
loope
xor
bound
int
pop
inc
clc
dec
add
ret
jns
addr16
lahf
enter
jbe
xor
sub
ffreep
cld
jbe
adcb
out
add
pop
inc
push
lea
add
cli
mulb
xchg
add
fisubrs
cli
mov
jne
jp
push
imul
cmpsb
cmpsl
inc
sub
data16
das
popa
push
add
data16
cwtl
xchg
mov
test
in
sahf
jmp
xchg
notl
pop
or
cmp
shrb
cwtl
sbbb
rorl
xchg
xor
daa
shlb
jmp
fwait
xor
mov
movd
rcrl
popf
xor
cmp
out
enter
adc
adc
cmp
cwtl
aad
pushf
push
mov
and
inc
je
sub
ss
mov
repnz
inc
shl
nop
xchg
pop
xlat
cld
mov
inc
shlb
mov
inc
lea
inc
jb
insl
sbb
and
mov
jnp
mov
lds
adc
inc
lea
dec
xor
enter
pushf
jle
sbb
cmp
xchg
scas
into
out
dec
sub
das
jmp
bound
mov
sbb
xor
call
js
movsb
mov
mov
inc
loop
cmp
hlt
enter
mov
jae
outsb
loopne
dec
mov
negb
test
mov
jmp
push
mov
mov
movsb
adc
pop
mov
in
mov
xor
fisubrs
movsl
je
into
xchg
cltd
push
push
loop
gs
xor
lcall
addl
mov
mov
mov
xor
pop
icebp
and
xchg
lock
out
sub
mov
jno
push
enter
ja
movsl
js
cmpsl
jbe
out
dec
bound
jecxz
xchg
push
jbe
mov
shlb
cmc
adc
jle
mov
ja
add
lret
das
adc
xchg
mov
or
lret
cmpsb
into
mov
negl
arpl
out
mov
iret
inc
jmp
stos
dec
xchg
sbb
pop
lahf
adc
leave
arpl
sbb
mov
adc
push
dec
cld
mov
sbb
adc
sbb
lock
pop
ljmp
stos
fwait
test
inc
add
dec
or
pop
add
adc
insl
sub
arpl
out
imul
push
and
ret
movlps
imull
pop
xor
std
daa
dec
jl
xchg
es
jns
repnz
in
sub
arpl
aas
jg
jnp
or
mov
rorl
mov
repz
movsl
add
test
fs
inc
push
lods
cwtl
shlb
loopne
sub
jne
ret
cltd
adc
or
xor
fnstcw
jnp
sbb
sbb
mov
inc
jmp
pop
in
adc
repz
nop
sbb
sbb
dec
or
jno
lcall
sbb
xchg
push
jle
cmpsb
pop
imul
lret
lret
or
mov
inc
xchg
xchg
jae
lods
stos
sbbb
aam
in
fnsave
xchg
push
in
movsl
push
or
fnstenv
sub
mov
or
xchg
and
adc
iret
inc
sub
pop
and
lret
ret
enter
and
jbe
adc
movsl
cmp
or
sub
jns
mov
jns
cmp
leave
and
aas
clc
xor
icebp
lods
sub
in
js
out
mov
cmpsb
fiadds
aam
into
push
adcb
adc
insl
mov
push
inc
movb
sbb
mov
movsl
inc
jecxz
dec
add
test
lahf
stos
pop
outsb
and
mov
dec
icebp
mov
add
mov
push
test
pop
clc
in
or
icebp
push
aaa
mov
dec
repz
out
add
xchg
sub
jnp
jae
out
call
sbb
or
mov
dec
push
mov
push
test
stc
std
push
xor
mov
scas
sbb
cmpsl
mov
xchg
in
out
out
jae
test
aad
xor
cmpsl
flds
add
pop
test
cmp
ret
push
rcl
test
cmp
out
in
jg
add
mov
jmp
or
mov
in
pop
adc
fwait
jno
pop
mov
in
fcmovnu
mov
and
sbb
fidivl
stc
jns
mov
xor
imull
daa
clc
jmp
or
cmc
loopne
fnstenv
imul
sbb
rcrl
lea
notb
xor
mov
mov
popf
nop
popa
ja
xor
stos
pop
sbb
test
and
aaa
mov
mov
pusha
popf
bound
pop
mov
or
aam
mov
xchg
mov
es
mov
dec
fimull
push
clc
lods
cmpsl
ror
jae
mov
fidivs
jnp
lahf
out
out
lahf
cmp
pop
in
cmpsb
sti
fimull
ljmp
int
jg
push
std
mov
idivb
push
mov
xchg
fidivl
popa
cld
or
shrb
popa
mov
neg
adc
mov
pop
ret
wrmsr
inc
movsb
xchg
xchg
in
fildl
test
add
lods
push
les
inc
push
xor
and
cmc
lock
xchg
adc
mov
call
push
mov
leave
shlb
mov
push
sub
xchg
test
int
enter
or
fildll
sub
imul
js
insl
jbe
add
xor
cmp
push
adc
ret
adc
cmovnp
xor
lods
jbe
mov
mov
dec
sbb
lods
sub
mov
imul
xchg
xchg
ds
mov
shl
outsl
pop
imul
cltd
fincstp
adc
adc
bound
adc
inc
xlat
sbb
dec
xor
cli
aam
dec
movsl
add
fisubl
mov
fsts
push
fisttpl
jb
daa
mov
dec
adc
int3
pushf
push
ficompl
iret
and
call
mov
xor
add
xorl
mov
add
mov
out
mov
subps
sbb
push
sbb
rorb
jl
mov
add
push
in
and
imull
or
jns
js
add
sbb
cmp
pop
xchg
push
sti
mov
mov
add
aaa
movsl
das
push
xlat
mov
pop
add
movb
stc
push
movsl
out
or
fstpt
mov
cwtl
lods
stc
aam
mov
div
and
mov
je
pop
icebp
fildll
pop
clc
sbb
clc
inc
call
call
pop
arpl
cmp
sub
ja
stos
dec
mov
xchg
or
sbb
ret
shlb
jbe
cmp
or
push
and
mov
lahf
mov
movsb
jp
jmp
leave
imull
pop
out
popa
mov
mov
mov
aaa
fsubl
mov
aas
ljmp
sahf
data16
inc
insl
sbb
in
sbb
push
js
mov
inc
push
xchg
fs
dec
insl
stc
outsl
add
xchg
pop
imul
movsl
push
sahf
adc
push
js
jecxz
out
push
das
movsl
stc
mov
adc
add
loope
pop
add
sub
add
push
jo
xchg
aas
sbb
inc
cmc
pop
insb
xchg
mov
lods
outsl
js
jbe
and
cmpb
test
subb
pop
pop
adc
pop
pop
jg
sub
xor
js
add
aad
pop
lds
repz
fidivs
lds
mov
jmp
push
cmp
std
fisubrs
iret
adc
mov
out
arpl
adc
xor
xchg
xor
in
xchg
dec
stc
inc
fnstenv
ficoml
daa
mov
lahf
fcomi
addb
sub
ret
or
and
repnz
adc
mov
cmp
push
cmp
stc
adc
push
sub
lret
xor
add
xorl
mov
cmp
mov
add
test
ja
imull
test
or
xor
aaa
sbb
pop
test
in
mov
js
inc
add
das
xchg
cld
shll
sub
mov
out
xchg
enter
pop
mov
cmpsl
xchg
dec
push
movsb
pop
mov
outsb
add
js
push
or
jo
shl
sub
mov
cmc
out
inc
push
xor
xor
ret
jle
mov
pusha
sbb
inc
cmp
adc
test
aam
pop
push
out
in
sbbl
inc
cmp
js
test
push
mov
sub
push
or
dec
xchg
cmp
pop
lahf
mov
dec
lcall
dec
jne
aam
add
mov
je
div
push
push
inc
mov
in
mov
sahf
or
shl
loop
mov
xchg
int
add
push
gs
xchg
cmpsb
jmp
xchg
mov
out
cmc
int3
mov
gs
push
cmp
cmp
notl
fildll
jg
mov
xor
pop
push
push
jae
or
cmp
ret
mov
lea
add
shlb
push
sub
cld
sbbl
mov
icebp
stos
sub
sarl
push
jp
add
or
dec
scas
add
jno
jmp
outsb
and
mov
outsb
data16
dec
fimuls
in
xchg
cs
push
or
xchg
jp
dec
jbe,pt
loopne
lods
mov
sbb
cmpsl
or
shll
out
in
inc
or
lcall
dec
in
push
pushf
cmp
orl
ret
negl
rcll
ljmp
mov
mov
xor
js
jg
pushl
adc
lahf
push
sub
iret
cwtl
mov
aaa
aad
movsb
xchg
call
jmp
sahf
xor
inc
xchg
xchg
lods
loopne
mov
xor
mov
or
lock
clc
jmp
enter
test
and
pop
popf
lahf
jecxz
outsl
xlat
aam
mov
in
pusha
pop
cli
cmp
dec
pop
cwtl
fwait
js
pusha
pop
jge
fdivr
nop
sarl
aad
sbb
or
stos
std
xchg
and
js
aam
clc
out
mov
cs
in
movsb
push
jno
cwtl
and
push
inc
push
addr16
cmp
dec
xor
push
das
outsb
rolb
movsb
pop
jmp
nop
shrb
ja
or
ret
out
mov
jae
jo
pop
mov
jmp
out
add
hlt
or
test
fs
or
jne
lock
mov
cli
mov
fstpt
xchg
test
ss
das
xchg
loop
mov
dec
push
sbb
lock
loope
mov
lods
mov
scas
mov
push
sbb
scas
and
push
cmp
std
into
mov
jle
cmp
mov
dec
inc
xchg
out
xchg
lea
jns
push
add
and
pop
lahf
and
cmc
inc
sbb
sbb
or
rolb
mov
add
dec
cmp
popa
scas
mov
fbld
push
shrb
ja
sbb
inc
pop
enter
cmpsb
shlb
popf
test
mov
jle
pushf
adc
push
mov
push
lods
jo
bound
aad
lret
sbb
repnz
aam
cmp
push
or
pop
aaa
fcomps
mov
push
jge
ret
push
daa
fwait
mov
rcll
pop
mov
scas
dec
mov
insl
dec
xchg
push
nop
add
iret
out
push
cmpsl
jecxz
jae
js
rcrl
andb
xor
loopne
lahf
push
mov
inc
pop
pushf
cltd
movsl
sti
fistl
stc
and
and
loop
in
pop
jo
sti
inc
mov
mov
mov
inc
jmp
pop
and
fisubrl
pop
pop
es
fmull
int
hlt
inc
loop
int
loop
jl
cmpsb
mov
movsl
and
aaa
push
lret
aam
xor
pop
fldenv
out
into
sub
or
inc
cltd
jnp
hlt
jmp
cmp
adc
mov
pop
bound
cli
cmp
insl
cwtl
fidivrs
lods
add
mov
adc
and
push
inc
push
dec
xchg
dec
xchg
and
jl
aas
cld
shl
jbe
or
xor
outsb
sbb
inc
shll
fcmovnb
pop
sbb
orb
dec
popf
fisttpll
dec
lea
push
mov
fldl
push
jns
je
jg
adc
fwait
add
clc
dec
jnp
aas
pop
dec
xchg
lds
shlb
stc
lock
dec
adc
or
mov
in
sbb
push
push
jge
adc
or
rcrb
sbbl
jnp
adc
mov
xorb
xor
bound
jg
push
nop
mov
xchg
sar
int
mov
add
out
mov
popa
repnz
xchg
xchg
pop
jge
pop
mov
adc
pop
pushf
gs
inc
xor
int3
mov
jo
xor
dec
pop
sbb
stos
ficoms
add
iret
mov
out
addr16
fistl
xor
sarl
cmpsl
push
adc
mov
xchg
shll
and
scas
fisttps
call
cwtl
dec
cmc
sub
mov
aas
pause
jp
push
fwait
or
adc
push
push
sbb
dec
dec
push
popf
cwtl
outsb
or
mov
push
ljmp
out
stc
dec
ss
xchg
or
jge
into
call
iret
pop
lods
lret
cmpsb
scas
lret
dec
and
mov
mov
arpl
pop
pusha
mov
sub
inc
out
in
insl
int3
adc
and
mov
incl
xlat
and
xor
cmp
add
adc
push
and
pop
dec
daa
cld
adc
dec
jo
ficomps
std
fistl
push
inc
sub
xor
leave
call
lcall
add
add
xor
mov
rorl
gs
cmpsb
jmp
shll
jl
push
mov
mov
orl
ret
sbb
sub
cs
idivl
pop
loope
pushf
roll
mov
mov
repz
or
sub
lret
jbe
mov
sub
rcll
mov
lods
cld
and
mov
jns
dec
add
repnz
and
test
pop
je
ss
cmpl
mov
adc
sbb
scas
icebp
lods
mov
gs
xor
mov
add
sub
out
xchg
cld
xchg
loopne
or
mov
or
lret
mov
movsl
arpl
es
dec
frstor
push
repz
mov
sub
and
iret
add
scas
mov
insb
mov
mov
ja
mov
gs
stos
imul
pop
loope
xor
xchg
pushf
fstl
aaa
imul
punpckhwd
pop
lret
mov
jmp
dec
cli
loopne
dec
or
jbe
and
cwtl
es
lea
xchg
add
test
sub
imul
or
or
xchg
jo
pop
mov
imul
cmp
cmp
xchg
out
lds
mov
in
addr16
push
popa
push
ja
dec
dec
outsb
icebp
lods
lods
cmpb
sbb
dec
insb
movsl
inc
sbb
and
aaa
in
pop
jo
call
popf
negl
mov
xor
push
mov
outsl
xchg
sbb
mov
sarb
fwait
clc
jp
xchg
mov
mov
sti
and
inc
add
cwtl
sbb
inc
jmp
loope
lret
daa
in
in
xor
pusha
sahf
jb
scas
popf
ror
ja
jmp
out
insl
pop
push
add
test
or
loope
cli
int3
pop
fyl2xp1
inc
mov
orb
arpl
enter
xchg
dec
cwtl
inc
jo
sbb
push
repnz
jns
and
jns
mov
and
pop
push
xor
in
lods
mov
mov
inc
xchg
leave
xor
xchg
icebp
ja
nop
sbb
inc
or
jmp
lods
shlb
mov
adc
push
shl
mov
fwait
and
or
mov
mov
insl
iret
and
and
hlt
lcall
mov
cmc
cltd
lods
adcb
lret
sub
dec
sbb
xchg
popf
and
dec
in
fistpll
mov
jns
mov
fwait
gs
xchg
add
xor
sti
in
push
pop
js
sbb
mov
sbb
ret
lods
fnstenv
int3
cmp
pop
jbe,pt
movsb
pop
sti
xchg
xchg
in
les
jno
inc
leave
push
repz
mov
insl
popf
ficoml
mov
adcb
test
inc
dec
sub
xchg
push
outsb
fidivl
xchg
mov
bound
hlt
mov
push
lods
repnz
repz
adc
pop
sub
or
movsl
fwait
jmp
enter
shlb
cs
xor
jp
daa
jno
sbb
clc
mov
out
mov
xor
call
mov
xor
mov
adcb
lret
icebp
push
dec
insb
sub
add
inc
or
test
xor
push
mov
mov
test
ret
mov
and
ss
scas
push
jmp
out
push
outsb
decb
pop
jl,pt
stc
mov
or
cmp
mov
iret
aam
xchg
fnstsw
lea
cmp
in
adc
icebp
les
add
jp
dec
push
mov
add
cmpsb
std
stc
fcmove
sub
into
mov
jmp
fimuls
leave
jl
sbb
jmp
jae
adc
lret
sbb
call
rorl
adcb
push
data16
dec
inc
sub
jns
inc
cmpl
pop
sbbl
pop
and
arpl
mov
out
pop
pop
xchg
dec
cmp
push
test
add
sbb
lahf
jno
xorl
cmpl
push
jno
pushf
repz
push
sbb
mov
stc
dec
inc
mov
ss
loop
insb
pop
popa
jno
cmp
popf
push
cmpsl
lods
fdivrp
cmp
or
pop
aas
test
sub
inc
js
shrl
mov
fidivs
xor
int3
jnp
arpl
lods
pop
xor
sarl
pushf
cmpsb
jo
push
fnstcw
sbb
cmp
ljmp
mov
xchg
cld
inc
pop
shrl
xchg
ret
shrl
and
push
xor
mov
ret
addr16
in
fidivs
jns
iret
decl
add
mov
xchg
xchg
sti
rcll
stc
addr16
inc
lret
lahf
addl
pop
rclb
cld
inc
jl
add
jp
fisubrs
sub
and
std
cs
inc
cmpsl
ds
je
jno
fsubr
adc
or
mov
sub
repnz
jae
inc
jp
int
push
dec
inc
cwtl
jbe
sbbl
jmp
popf
test
dec
push
fcoms
or
ss
repz
leave
and
pop
mov
in
xchg
mov
pop
add
dec
sbb
xchg
test
mov
sub
jmp
les
cmpsl
sub
fisttpll
cmp
jmp
adc
or
fldt
xchg
ret
mov
es
lahf
int
pmullw
ljmp
rcrl
mov
and
push
iret
jns
mov
mov
cmp
fs
sbb
test
sbb
test
lds
sbb
xchg
dec
iret
pop
inc
lcall
or
ja
out
xor
clc
clc
repnz
mov
pop
ljmp
add
inc
inc
cmp
pop
add
mov
outsb
out
pop
mov
xchg
rcrl
popa
lds
test
sarl
mov
lock
jns
mov
sub
popf
ret
mov
movsl
scas
push
inc
imul
rorl
sbb
mov
inc
lret
and
rorb
xor
ja
xchg
in
sub
mov
aam
xchg
lcall
ja
stc
stos
in
cmp
hlt
xchg
popf
xchg
inc
push
cli
push
push
iret
mov
mov
lea
push
pop
sub
jmp
mov
dec
scas
and
mov
test
push
cli
xchg
or
adc
jl
repnz
mov
cli
fdiv
sbb
icebp
sub
or
xchg
mov
hlt
ficoml
mov
ljmpw
add
std
sub
fiaddl
inc
popf
jp
nop
push
sbb
pushf
jecxz
or
fsubs
rcrl
mov
ds
and
mov
and
push
negb
inc
xor
addl
jl
dec
and
aaa
jmp
pushf
and
jno
push
repz
push
xor
leave
lahf
aaa
clc
in
jl
pop
js
xor
arpl
stc
ret
popw
rolb
clc
ss
cs
imul
decb
jne
mov
shlb
xchg
jmp
add
jno
mov
insb
out
lds
pop
jnp
mov
jmp
popf
mov
js
push
notb
cmc
fsub
scas
daa
jmp
aad
mov
cmp
jmp
daa
cmp
mov
jp
in
xchg
dec
out
imul
and
int3
sbb
imul
movsb
cld
fdivrp
or
or
out
and
and
imul
movl
jp
xchg
xor
into
sbb
and
test
sub
in
sub
imul
rclb
mov
hlt
negl
outsb
pop
mov
insb
inc
shrl
add
cmc
dec
icebp
ds
fucomip
cmpsb
cmpsb
xor
adc
insl
inc
lahf
mov
push
outsb
imul
daa
add
add
ds
outsl
push
xchg
mov
jmp
add
cmpsl
sbb
push
inc
sbb
inc
bound
xorl
sub
dec
faddl
call
mov
movsb
iret
sub
sbb
inc
outsb
daa
or
cmpb
xchg
and
or
pushf
push
movsl
xlat
pop
loop
mov
pop
cmp
or
rclb
flds
pushf
xor
loopne
mov
mov
xchg
enter
inc
cmpb
cmp
mov
jb
stos
xchg
ficompl
push
cmp
scas
sbb
test
jbe
inc
or
xor
sbb
stos
jno
pushf
and
enter
fwait
lsl
lret
cmp
nop
dec
lods
xor
inc
jge
xor
ret
xchg
cmpsl
lds
cli
sub
fimuls
push
jb
pusha
enter
sbb
jl
mov
mov
daa
scas
stc
mov
lret
and
and
push
pop
inc
hlt
xchg
mov
shll
dec
mov
xor
jmp
add
cmp
imul
pop
addr16
mov
sti
dec
enter
cmp
int3
fstps
fs
test
stc
je
pop
movsb
cmc
addl
sub
cmp
jle
jge
or
pop
loopne
dec
push
jbe
add
jp
mov
ret
fwait
pop
jmp
inc
mov
rol
cmp
aad
inc
je
xchg
adc
out
aaa
sbb
bnd
mov
xchg
out
inc
mov
sub
ret
in
cwtl
ss
sbb
mov
add
int3
jg
jge
cmp
push
mov
xchg
xchg
xchg
pop
mov
jbe
inc
pop
inc
ret
mov
xchg
lret
call
out
push
dec
sub
inc
movsl
xor
fisttps
pop
sbb
ret
data16
sahf
mov
pop
pop
mov
stc
adc
cli
cltd
xor
rcr
jle
inc
out
idivb
inc
aad
js
push
mov
mov
jg
incl
cmp
mov
mov
or
std
scas
xor
js
sub
mov
ficoml
js
inc
push
sbb
cli
inc
loop
cs
loope
xor
push
imul
mov
repnz
or
push
in
rorl
xor
repz
cmp
int
stos
subb
sbb
jl
stos
inc
xchg
xor
add
mov
imul
enter
jno
or
inc
mov
and
mov
jae
aaa
add
aad
fisttps
in
xor
rorb
add
xor
mov
pop
ds
cmp
add
and
inc
pop
cld
pop
xchg
insl
bound
jns
andl
jno
shll
pop
test
mov
mov
in
cs
xor
xor
enter
ror
aas
push
aas
ret
loope
and
fwait
and
cld
and
xor
mov
or
lea
mov
jecxz
adc
pop
jo
jo
aad
dec
add
and
std
rcr
jmp
out
xchg
scas
sbb
jae
dec
mov
mov
imull
mov
dec
sub
push
mov
cmc
lcall
sub
sbb
jae
test
stos
or
shl
lret
dec
fldenv
jo
push
out
hlt
sbb
subl
add
push
push
sbb
add
das
or
mov
pop
popf
aad
push
jae
imul
xchg
sub
or
push
dec
sbb
xchg
flds
les
fs
stos
sub
inc
jnp
push
mov
jb
sub
lods
push
pop
movsl
test
je
jecxz
inc
popa
repz
aam
imul
arpl
aad
cs
or
mov
imulb
mov
cld
dec
test
mov
in
rclb
jge
push
sbb
xchg
insb
imul
pop
daa
and
dec
jecxz
cmpb
or
or
std
cmp
into
shlb
cmpsl
divl
lods
addr16
mov
mov
leave
add
loope
int
popa
leave
call
mov
cmp
in
ficompl
insb
xlat
mov
jae
adc
imul
js
and
ffree
in
cmp
add
mov
mov
add
or
into
ret
sub
jo
push
lock
mov
cltd
lods
mov
push
daa
out
and
push
ljmp
push
cld
inc
movb
pop
inc
xorb
sub
add
xor
pop
sub
xchg
pop
fstl
or
lret
daa
insb
fsubr
jl
gs
or
ds
fdivr
mov
aaa
sahf
cmpsl
dec
fwait
adc
lds
and
sbb
mov
lds
vpinsrw
push
shl
push
push
push
mov
jmp
adc
adc
fistps
jno
adcl
push
cs
lds
pop
push
movsl
int3
pop
adc
adc
mov
dec
les
lods
negl
dec
mov
jmp
movsl
scas
xchg
cs
jmp
ja
mov
add
cmpsb
or
mov
adc
or
push
add
adc
loope
rorl
loope
punpckhbw
sub
mov
or
and
push
xor
cmp
movsl
inc
test
mov
jns
jmp
push
outsb
popa
sar
jbe
add
fdivp
jecxz
dec
in
fdiv
mov
inc
je
mov
ss
xor
pop
xrelease
sbb
xor
adc
lahf
andl
pop
in
jge
push
test
js
xchg
add
inc
pop
pop
mov
lcall
stc
add
pusha
add
rclb
and
inc
pop
xor
add
xor
lcall
leave
test
cmp
mov
jno
add
popf
pushf
and
mov
sbb
pushf
imul
aas
jg
mov
ja
cmp
inc
movsl
push
pop
mov
rcrl
jns
mov
cmp
jae
stos
ds
stos
imul
pop
sbbb
add
pop
cmpl
sbb
div
das
orl
push
movsl
sbb
inc
sbbb
lods
pop
dec
jne
adc
jl
inc
cmp
mov
mov
mov
enter
adc
stos
popa
add
leave
xor
fidivrl
jno
stos
fwait
adc
pop
pusha
pop
addr16
jbe
cs
ja
and
mov
pop
jle
test
adcb
sub
jl
inc
mov
add
pop
mov
pop
jne
mov
push
andb
loop
out
xchg
pop
iret
sub
jno
lds
push
in
mov
adc
clc
adc
xchg
add
ret
cmpb
push
and
adc
xor
mov
xchg
push
repz
loop
scas
dec
gs
adc
jmp
daa
inc
jge
daa
aad
sbb
jg
out
test
add
push
jno
rclb
scas
cmp
adc
mov
xchg
call
pop
jmp
adc
inc
sbb
hlt
or
or
scas
pushf
mov
aam
sub
add
fisubl
test
jnp
popf
sti
xchg
inc
push
stc
xlat
push
test
add
push
mov
pop
into
mov
xor
add
dec
adc
movsl
loope
pushf
cmp
inc
out
lods
cltd
dec
ret
fs
jbe
popa
push
lea
aam
adc
jo
ljmp
mov
sarl
cmp
jns
rolb
xlat
or
lret
aaa
mov
mov
sbb
mov
arpl
into
mov
fidivrs
insl
out
fld1
mov
arpl
mov
ja
clc
out
adc
sbb
mov
lock
or
or
gs
push
fidivrl
das
bound
adc
ljmp
cld
push
xcrypt-cbc
cmpsl
xchg
fs
inc
jbe
xor
dec
or
aad
arpl
push
cmpsl
popa
sub
pusha
adc
pop
test
inc
cld
pop
loop
sbb
xchg
mov
fimull
aas
pop
jge
into
ljmp
and
ds
loope
xchg
push
lea
leave
add
push
je
push
cwtl
sbb
cmp
lret
add
into
fldcw
shll
not
dec
xchg
dec
or
mov
mov
sbb
sub
mov
xor
fdivp
inc
and
xor
int3
xchg
mov
xor
test
xor
loop
stos
out
outsl
sti
mov
lahf
loopne
clts
push
into
fcomip
jmp
je
jmp
dec
test
xacquire
inc
sbb
xchg
std
lds
les
in
push
push
or
push
lock
lods
mov
loopne
repz
mov
enter
popf
sti
test
add
scas
out
movsl
mov
ljmp
add
out
xchg
inc
and
insl
mov
cmpsl
lock
call
xlat
scas
sbb
mov
mov
jmp
lcall
mov
cmp
clc
adc
inc
adc
daa
ljmp
icebp
loope
jne
mov
mov
testb
or
cltd
subb
push
cli
xchg
out
mov
leave
jae
ficomps
xchg
ret
push
mov
sub
pop
mov
sbb
lea
es
or
cwtl
mov
je
mov
or
jl
std
test
lcall
xchg
sub
cmp
cltd
lods
cltd
out
scas
add
xor
push
adc
pop
call
cmp
rorb
js
loope
push
xchg
push
iret
ljmp
pop
inc
sbb
push
mov
addl
imul
lock
sbb
jb
xchg
mov
cmp
push
sub
or
cmp
ljmp
icebp
xchg
pop
sub
push
jl
clc
mov
fs
pop
mov
js
and
out
push
pop
mov
push
outsl
mov
cmp
inc
test
fdivp
dec
fisttpl
test
jnp
jnp
sbb
xchg
stos
rorl
outsl
mov
lock
test
cmpsl
mov
je
pop
fcmovnu
xchg
xchg
sbb
cmpsl
out
clc
bound
or
sarl
add
movsl
int3
or
shrl
inc
inc
xor
aam
xor
dec
movl
pusha
fidivrl
fcmovu
sub
ljmp
test
pop
cmc
addr16
sbb
sub
bound
adc
push
xor
lea
adc
xchg
cmc
sub
mov
lcall
lea
aaa
addl
das
std
cwtl
jl
cmp
push
xchg
sub
inc
and
inc
lods
repnz
push
in
adc
mov
pop
mov
fildl
out
push
out
mov
or
mov
push
gs
enter
fstp
add
lret
scas
jmp
into
push
addr16
cmp
add
inc
or
cmpsb
sahf
js
out
xor
mov
mulb
leave
in
mov
fbld
aas
mov
shll
call
mov
in
loopne
or
cld
jg
sbb
mov
jge
insb
sbbl
add
outsl
cltd
push
fimuls
sti
adc
pop
daa
in
push
or
ficompl
mov
mov
push
add
cli
inc
cbtw
mov
lods
int3
xlat
mov
cmpsb
lods
ljmp
mov
xchg
test
dec
insl
ss
leave
ljmp
std
xchg
adc
mov
lods
sahf
hlt
push
popa
sbb
xor
sti
rcrb
mov
shl
push
jae
cmp
cmc
into
xlat
inc
das
fld
repnz
sti
imul
jns
repz
mov
mov
lods
jne
inc
dec
imul
sti
push
mov
loope
idiv
sbb
cmc
icebp
lahf
ds
push
mov
out
out
xchg
jbe
shrl
push
add
add
mov
xchg
sub
scas
ret
adc
sbb
cli
fsubl
xorb
call
hlt
popf
scas
jb
sub
xchg
pop
in
stos
sbb
in
sbb
fwait
subl
cmp
xchg
jns
ja
sbb
xchg
dec
lock
cmp
inc
das
in
push
push
shll
scas
hlt
cmp
xorb
and
sub
stos
mov
ret
ljmp
add
mov
popa
sar
mov
mov
xchg
sbb
lret
call
shrb
stc
fldcw
test
pop
enter
cld
mov
repz
xchg
jp
mov
sahf
lock
stos
fnstcw
enter
xor
push
movsl
cld
mov
or
pop
int3
jge
and
arpl
or
cmp
lcall
cmp
stos
sbb
dec
clc
inc
sub
lahf
lret
sub
fs
push
ss
inc
fsts
rolb
cmpsl
andb
push
sbbb
cmp
ds
lods
xor
aas
xchg
pop
ja
mov
rorl
js
sub
ljmp
mov
ret
mov
xlat
cwtl
push
ljmp
mov
pop
adc
hlt
movsl
sbb
mov
jb
add
imul
adc
das
cltd
mov
cli
out
dec
call
mov
adc
rcr
dec
ja
lret
mov
cmc
fdiv
mov
popf
dec
xchg
out
dec
fidivl
lcall
pop
cli
xchg
ss
adc
stos
smsw
pop
pop
clc
stc
push
call
xor
es
jl
nop
jo
pop
sbb
call
mov
mov
scas
sahf
jge
mov
mov
mov
inc
push
insl
jbe
push
stc
mov
aas
mov
adcb
xchg
mov
jp
xchg
pop
add
sahf
adc
add
jno
ret
out
mov
inc
out
dec
js
popf
decb
out
flds
call
and
insl
leave
ljmp
xor
add
xor
sub
nop
cmp
shrl
inc
cltd
bound
imul
lret
cmp
das
popf
jecxz
push
sub
aad
jmp
enter
mov
pop
scas
sahf
mov
sub
xchg
fsubs
sub
ds
je
inc
cmpsb
sub
aad
jle
pop
lret
xchg
adc
xorb
pop
xor
add
push
lds
repz
add
imul
xlat
aam
push
cmc
mov
xchg
push
add
cmp
fldl
lea
mov
and
dec
not
cmp
div
xchg
push
add
dec
push
int
das
rcrl
lods
out
dec
mov
loop
push
je
enter
insb
clc
cmp
aad
cmp
and
xchg
sbb
and
pop
xchg
push
orl
sub
cmpsl
push
fisubrl
jmp
das
andnps
dec
stos
pop
mov
push
repz
push
int
mov
mov
lods
int
mov
push
sbb
call
dec
mov
mov
insl
or
push
mov
lea
js
cmpl
cld
hlt
mov
mov
xchg
mov
push
pop
ja
aam
xor
mov
popa
popa
mov
pop
fwait
or
loopne
les
pushf
ja
hlt
pop
add
xor
data16
or
adc
adc
jae
lock
mov
inc
xchg
in
leave
negb
gs
mov
sub
push
nop
adc
fstl
and
int3
inc
dec
mov
mov
adc
sbb
pop
jbe
fldl
cld
scas
jg
dec
add
xor
loop
push
inc
scas
sub
jmp
sbb
loope
testl
xlat
sbb
lock
out
sub
sbb
out
fstpl
push
jns
in
push
pop
sbb
mov
mov
jae
cmpb
xchg
cmp
icebp
mov
or
sti
lahf
js
cmp
cmp
inc
xchg
js
cmp
sub
adcb
bound
sub
das
out
push
inc
jp
sbbb
jmp
test
scas
or
push
xchg
pause
fiaddl
xchg
js
je
int3
or
mov
xor
fs
sub
add
cmpsb
jl
addr16
mov
rcrl
in
gs
dec
sbb
loopne
pop
in
ds
jg
cmp
mov
test
hlt
sub
push
xchg
xchg
push
das
mov
callw
sub
incb
lods
pop
and
add
jno
out
pop
lods
scas
bound
imul
fwait
adc
lods
loopne
data16
or
add
ficoms
cmpsl
popa
ds
pop
xor
adc
push
xor
xchg
mov
decl
push
andl
and
es
std
push
and
outsl
mov
xchg
lock
adc
dec
lea
imul
jl
or
sbb
popa
adc
gs
pop
sahf
sub
xchg
jl
cmc
mov
xchg
pop
ja
fidivrl
cmp
leave
mov
push
hlt
in
lods
push
xor
pop
sbb
ret
scas
xlat
faddp
mov
insb
pop
lock
lock
cwtl
jbe
add
add
dec
jns
xchg
lahf
xchg
lods
mov
popf
inc
adc
loop
fldcw
je
jecxz
shl
cli
cmp
cli
and
insl
lea
negl
sbb
xor
aas
sbb
mov
shrl
push
ret
lds
mov
sbb
xor
jb
mov
or
xchg
sub
ret
pop
test
or
mov
mov
inc
lock
insl
cmp
jbe
xor
dec
push
cmp
mov
jmp
pop
scas
jle
js
jge
lcall
lahf
xlat
inc
xor
testb
jp
pop
dec
cmp
loope
sahf
dec
popl
mov
pushf
int3
push
outsl
ljmp
outsl
mov
mov
push
jne
cs
pop
std
scas
sub
xchg
das
lock
ljmp
pushf
sbb
cmp
mov
movzwl
add
dec
cli
aam
add
rcr
xlat
es
adc
ret
sub
shll
push
pop
out
push
mov
jbe
loopne
mov
pop
or
dec
push
out
xchg
rolb
xchg
pop
dec
shlb
mov
mov
js
mov
sub
sub
scas
push
xor
mov
push
jge
inc
inc
test
add
out
pop
push
es
into
push
mov
incl
lahf
ds
shll
aaa
or
mull
stc
dec
add
out
data16
dec
mov
pop
movsl
pushl
push
jbe
ljmp
cmp
or
add
scas
lods
pusha
or
lahf
mov
in
fwait
cmp
push
das
into
data16
cltd
gs
pop
fiadds
movb
xor
inc
mov
inc
or
add
mov
jg
in
int
inc
mov
push
fldenv
sub
and
mov
lea
ja
push
aas
inc
adc
jne
fisttps
push
inc
xor
fmull
cltd
cltd
dec
movsl
movsb
jae
lret
xor
xor
outsl
xor
or
mov
iret
inc
ficoms
jecxz
aad
push
or
jne
add
ja
lods
inc
mov
test
mov
test
adc
test
cwtl
sbb
sbb
je
ficompl
sbb
mov
push
stos
loopne
cmp
mov
movsl
rclb
iret
mov
inc
shlb
jae
in
out
fwait
push
fisttps
xchg
adc
sub
inc
out
dec
inc
dec
inc
rcl
je
test
sar
cmp
dec
pop
inc
jae
stos
mov
mov
insb
fwait
xchg
clc
or
adc
push
test
mov
loope
sahf
aaa
xor
cmpsl
in
fisttpll
and
js
nop
mov
je
lret
sbb
test
add
jmp
std
lcall
and
push
frstor
inc
orb
imul
xchg
mov
das
hlt
xchg
out
shrb
in
xchg
sbb
and
cmp
sbb
scas
lds
adc
iret
popa
mov
inc
out
or
inc
add
jbe
push
cwtl
out
mov
pushf
jmp
sbb
bound
int3
std
add
jmp
das
sbb
fmulp
out
dec
inc
and
push
ja
rcll
or
iret
pusha
inc
add
pop
call
fdivrl
test
scas
mov
loope
mov
outsl
jmp
jae
mov
xor
scas
adc
add
js
push
lcall
pmulhuw
cmp
cmp
mov
adc
or
fmull
gs
push
cmp
or
mov
incl
push
bound
aad
sbb
mov
lock
push
cwtl
or
lea
pop
movsb
inc
mov
rcrl
subb
insl
out
xor
fstl
xchg
leave
loope
sbb
ret
arpl
push
mov
adc
pop
pop
inc
inc
out
mov
xchg
in
jle
sbb
outsl
dec
ficoml
jb
jns
or
cli
mov
add
mov
sub
xchg
push
movsl
xor
xlat
add
fisttpl
insb
into
lret
ret
lods
adc
cld
mov
jle
ficoml
or
es
idivb
sti
mov
cmpsb
mov
cld
mov
fidivrs
xchg
push
repz
fnstcw
cmc
int
fwait
testl
or
push
bound
test
or
ret
add
and
pop
inc
popf
cmp
popf
cmp
enter
lret
pop
fcoml
xchg
cmpb
push
mov
dec
test
sub
test
mov
inc
cmp
jle
push
inc
inc
xor
inc
cmpsl
inc
pop
pop
adc
mov
ja
or
mov
pop
das
in
mov
testb
lock
mov
mov
xorb
jae
and
ss
dec
testb
cmp
add
mov
ret
push
push
mov
add
jl
xchg
montmul
cmpsb
add
lret
mov
ret
jmp
dec
cmpsl
lret
cltd
ret
inc
daa
loope
dec
test
ja
adc
add
jmp
xlat
loop
std
addl
daa
test
fsubrs
or
sbb
cmp
notb
inc
mov
lahf
ret
loopne
mov
mov
ds
inc
dec
fmul
dec
popa
xchg
mov
mov
or
arpl
cwtl
jl
jb
xor
pop
pop
xor
leave
push
pop
mov
xor
xor
out
sbb
call
jp
xchg
jecxz
scas
push
pop
pop
int3
rorb
pop
jb,pn
loop
gs
mov
add
lahf
shl
fbstp
hlt
filds
or
push
jmp
mov
lods
xchg
inc
pop
js
jecxz
sbb
cmp
ret
dec
js
sub
das
test
out
jp
or
orb
xor
in
fs
in
fwait
addr16
inc
in
cmc
xor
xorl
adc
or
imul
mov
inc
jmp
and
xor
fstpt
jle
lahf
push
mov
std
cs
ficomps
dec
lea
iret
inc
pusha
push
add
fcom
add
insb
dec
clc
or
fcomi
fldcw
and
sarl
mov
jbe
into
cwtl
dec
in
out
imul
xchg
aaa
shll
test
sub
sub
jp
rclb
jg
dec
or
xor
lret
sarl
push
out
hlt
negb
fmull
jnp
cmp
sub
aaa
or
jbe
ss
roll
mov
decb
lahf
ss
daa
imul
js
movsl
xor
adc
das
cmp
inc
and
sub
push
push
pop
push
add
jb
inc
sub
enter
roll
and
icebp
out
lcall
mov
adc
and
push
ret
scas
sub
aaa
fistpl
das
call
adcb
mov
imul
inc
add
lcall
cmpsb
pop
xor
sarl
rcrb
xlat
stos
dec
xor
rcll
mov
imul
dec
xchg
sub
loop
cld
lods
jl
adc
jp
mov
scas
pause
push
jge
mov
cmc
mov
pop
out
dec
out
jae
movsb
std
xchg
xor
cmp
in
scas
push
loop
test
or
mov
fisubl
xchg
jne
sbbl
ret
xchg
test
cmpb
insb
lret
mov
stos
adc
mov
sub
inc
add
push
mov
mov
psubusw
mov
lock
sub
push
sbb
pop
ss
fucompp
mov
push
cmovns
mov
push
or
aaa
mov
inc
notb
mov
cld
sarb
jo
sub
lods
or
cmp
push
aas
push
sub
fwait
and
rcrl
aad
mov
inc
xchg
push
xchg
loope
mov
jle
xlat
dec
aam
xchg
push
or
push
dec
xchg
aas
jne
sbb
xchg
sub
mov
insl
std
shrb
fcmovbe
pop
jmp
andl
shlb
mov
add
lods
xlat
loopne
sub
push
mov
insb
mov
or
cmp
in
aas
test
mov
stos
or
cmp
push
movsl
jecxz
sbb
fldenv
mov
jnp
push
fwait
cmp
addr16
lret
jecxz
pop
pop
cmp
or
clc
inc
stos
push
bound
jnp
fisubs
mov
cs
stc
ja
repnz
inc
testl
popa
imul
or
xchg
cld
mov
xchg
xchg
pop
dec
nop
sub
cli
xchg
xchg
hlt
adc
xchg
enter
mov
lods
icebp
push
sbbl
add
leave
cli
es
lret
cmp
and
es
dec
insl
iret
cmp
jno
es
jle
leave
sbb
lods
cld
into
aaa
add
sbb
mov
sub
adc
jl
pop
cmpsb
adc
sbb
sbb
rcrb
repnz
cmp
fwait
mov
or
cmpsb
pop
pop
or
repz
mov
popf
push
jg
subb
out
pop
lock
xchg
fcoml
or
mov
mov
add
fwait
test
sub
pop
test
push
ret
xchg
shl
shrb
lods
decl
cmp
cmp
add
push
mov
cmpsb
rolb
out
push
mov
mov
int
ror
lock
sbb
int3
xor
push
push
cmc
pop
xchg
jbe
cltd
rcrl
and
fcomps
push
insb
arpl
push
mov
les
push
cmp
mov
inc
mov
adc
mov
wbinvd
out
sti
add
fnsave
xor
test
stc
or
leave
fwait
cmc
rol
cmp
in
loopne
add
stos
int3
mov
xchg
repnz
rcrl
xor
fcomps
push
sarl
xchg
xchg
lahf
add
mov
inc
pop
fucomp
xchg
mov
mov
lods
xchg
adc
mov
lea
or
pop
test
dec
mov
jge
jp
into
ret
fimuls
pop
ficompl
shll
std
mov
mov
stc
dec
sub
xchg
xchg
stos
pop
jns
pop
and
shrl
push
lahf
ds
mov
sub
adc
mov
mov
push
xchg
jb
mov
lcall
adc
pop
mov
sti
or
lds
cs
fmuls
inc
ret
lock
add
cwtl
mov
mov
dec
dec
movb
nop
mov
out
orl
repnz
pushf
imul
sbbb
adc
inc
adc
faddl
dec
dec
fs
movsb
rcl
xchg
mov
mov
lods
mov
push
loopne
adc
in
push
or
daa
aam
push
rorb
mov
xlat
test
push
insl
mov
movsb
mov
push
out
outsb
sti
pusha
loop
lods
loope
push
push
dec
jb
mov
mov
mov
dec
push
mov
sbb
jg
jmp
and
pushf
lods
sub
cmp
inc
cwtl
xor
jno
fistps
sbb
jmp
mov
aas
mov
dec
push
pop
sbb
or
bound
shll
jbe
mov
int
das
and
xchg
ja
arpl
jl
sbb
adc
into
inc
sbb
cltd
repnz
sbb
pusha
and
and
cs
out
xchg
decl
shlb
pushf
shl
cwtl
mov
sbb
sar
dec
insl
jg
in
push
sbb
gs
ljmp
cli
sahf
shrb
subl
sbb
xchg
daa
ljmp
cmpsl
stc
lret
add
mov
int
mov
cmc
inc
das
enter
and
mov
or
out
aad
ds
das
jae
push
rclb
daa
pop
lret
cmpsl
repnz
add
and
xchg
push
sbb
les
sub
mov
fistpl
inc
cli
enter
in
mov
mov
pop
pushf
addl
loopne
psllq
je
jno
xchg
sub
push
pop
ficompl
cmp
inc
adcl
push
out
dec
repnz
jmp
jnp
or
xor
in
cld
xor
add
in
enter
jecxz
dec
sti
inc
lea
inc
fidivrs
dec
mov
test
and
cltd
dec
pop
sbb
daa
dec
mov
and
movsl
insl
inc
sub
in
xchg
rolb
adc
cwtl
es
sahf
xlat
jno
out
xchg
adc
sbb
sti
loop
xor
jecxz
sbb
ss
lods
fisubs
clc
and
fbld
mull
fs
call
in
pushf
das
mov
jae
pusha
rcll
hlt
sti
adc
push
leave
cmp
xchg
shll
mov
test
cmp
out
jno
jl
push
cmp
lret
pcmpgtw
aas
push
subl
cmp
mov
adc
cltd
scas
mov
sub
adc
xchg
lods
sbb
fstpt
dec
add
dec
enter
sbb
test
mov
movsb
add
or
gs
data16
add
adc
les
cmp
shlb
push
mov
pop
sbbl
scas
dec
push
aad
mov
push
add
dec
dec
pop
jo
lods
ret
leave
mov
pop
add
je
add
lret
sub
push
or
fsubrl
xor
mov
aas
jbe
mov
jne
adc
popf
mov
cmp
inc
out
outsl
test
loopne
push
mov
cli
pop
addr16
imul
mov
cld
daa
das
xor
xchg
loop
inc
jns
and
test
shll
in
jns
xchg
or
icebp
loop
dec
pushl
push
pop
dec
inc
push
inc
icebp
fcomp
outsl
sub
cmp
dec
pop
aaa
fdivs
jbe
sub
test
inc
push
call
sbb
xor
sub
bound
out
arpl
shrb
pop
scas
push
adc
fbstp
and
xchg
sub
push
call
call
dec
addr16
xor
mov
mov
dec
xchg
pop
inc
lret
mul
push
mov
loopne
jmp
imul
sub
adc
fistl
divb
test
outsl
nop
aaa
hlt
stos
add
push
lock
roll
inc
jl
push
push
jbe
inc
in
cmpsb
xchg
and
lock
xor
jae
jg
mov
jmp
fldt
dec
xchg
hlt
into
insb
clc
xor
adc
mov
sub
mov
push
fs
and
sarl
and
popf
dec
push
shll
mov
fidivrs
leave
dec
addr16
aad
adc
in
ds
and
pushf
adc
push
cwtl
mov
mov
enter
or
xor
out
cmc
fsts
unpckhps
stos
jne
call
fcmovne
push
fisttpll
jl
repnz
inc
cmp
shrb
ss
cmpsl
adc
mov
xlat
test
push
mov
data16
test
fs
and
cwtl
inc
jge
insl
lret
mov
nop
les
ss
mov
mov
and
mov
lret
fwait
sub
clc
popa
cmpsl
mov
popf
shrl
data16
and
cmc
stos
mov
test
loop
jp
inc
sub
div
jae
mov
cmp
aaa
outsb
mov
call
mov
inc
and
add
sbb
aas
fwait
mov
stos
fsts
xchg
enter
sbb
mov
adc
inc
clc
dec
push
test
jno
insl
andl
dec
xchg
adc
idivl
push
std
jmp
rcrb
data16
mov
test
cld
sbb
sub
xlat
jp
test
mov
lret
jg
int3
insl
jmp
or
xor
adcl
popa
mov
jl
lret
or
sub
mov
mov
mov
dec
mov
lahf
add
sub
cmpsl
loopne
loopne
lods
fsts
sub
ffree
dec
mov
imul
data16
cmp
or
cmc
cmc
push
vucomiss
out
das
clc
sbbl
xchg
mov
mov
jo
or
pop
push
stos
add
push
push
ss
lret
cmp
xchg
jb
jno
sarl
mov
lahf
push
xchg
xchg
inc
fsubs
data16
xchg
pusha
jnp,pn
push
cwtl
addb
inc
xchg
adc
jbe
addr16
xchg
jl
fildl
repnz
movl
sbb
jnp
inc
mov
sub
test
sbb
dec
pushf
or
push
std
clc
sub
clc
cmp
jb
pusha
lret
pushf
lock
in
sbb
mov
popf
mov
out
mov
das
or
add
sti
outsb
xchg
mov
gs
mov
mov
mov
call
pop
popa
mov
pusha
sub
jns
jbe
inc
push
xchg
push
clc
xchg
ljmp
das
xor
mov
mov
jmp
sub
shl
test
sub
push
or
or
cmpsb
roll
mov
mov
fst
pop
sub
cld
enter
loopne
push
sbb
das
adc
mov
insb
and
mov
in
add
or
push
pop
rcrb
outsl
fld
mov
hlt
loop
ds
fucomi
lret
cmpsl
dec
inc
jb
notl
fnstenv
dec
adc
pop
lds
scas
push
xor
fbstp
cmpsl
jne
ret
fwait
add
aam
and
mov
aad
adc
cli
xor
leave
or
cmc
pop
fisubs
notl
and
lret
icebp
movsb
jno
inc
xchg
or
xor
ja
jge
out
int
insl
cmp
outsl
mov
sbb
addr16
fiaddl
mov
fs
lahf
loop
es
cltd
stc
xchg
rol
icebp
jno
sub
pop
or
jle
test
fwait
xlat
cmp
jns
fs
mov
out
xchg
addr16
lahf
ret
fidivs
leave
stos
pusha
jnp
rcrb
jb
lcall
add
fldl
push
aam
or
scas
xchg
sbb
cmp
cmpsl
mov
xchg
pushl
mov
gs
jb
sbb
and
jne
adc
mov
adc
ret
or
mov
fldenv
icebp
sub
ror
mov
xchg
or
add
lea
lock
xchg
push
gs
imul
lret
dec
stc
dec
jecxz
nop
shll
xor
fists
aam
adc
xor
xor
sbb
xchg
addr16
loop
cmc
xchg
out
mov
adcb
inc
daa
fiadds
aad
xchg
mov
stos
movsb
inc
xchg
and
and
jge
dec
test
out
cmpsl
or
add
xchg
xchg
bound
inc
push
aaa
jb
outsb
push
dec
jl
iret
inc
xor
fidivs
daa
mov
aaa
dec
sub
rcrb
je
out
inc
cmp
enter
enter
cli
push
pop
ret
ja
and
lcall
testb
rorl
dec
pop
xchg
add
push
into
imul
aad
dec
pusha
fsub
xchg
in
inc
push
mulb
lods
bts
bound
enter
data16
stos
mov
pop
mov
xor
or
imul
push
cmpsl
dec
fidivs
enter
clc
rcl
mov
aas
mov
inc
insl
sub
inc
xchg
push
hlt
jmp
xchg
dec
xor
xor
inc
outsb
ror
jl
xchg
cmp
cmp
into
and
jae
outsl
movsl
pop
mov
mov
pop
cmpsb
lods
iret
jg
in
xchg
mov
add
call
mov
jbe
mov
or
out
jno
jmp
push
ret
mov
fcmovnu
cmpsb
ja
mov
fcom
mov
add
pop
jg
dec
dec
adc
mov
dec
orb
mull
cmpl
imul
mov
mov
ljmp
nop
and
sbb
sbb
mov
xor
inc
sub
out
aad
sbb
iret
xchg
and
sub
jnp
rcll
push
or
or
cli
test
mov
ret
lret
ss
cmc
or
lods
dec
add
sub
jl
aas
enter
mov
and
cli
fstpl
mov
popf
jo
push
mov
mov
jbe
imul
int3
xchg
sbb
cmp
leave
jb
dec
lods
imul
cmp
lea
and
pop
jno
add
test
aaa
inc
push
inc
push
pop
mov
outsb
sbb
jns
lret
mov
ret
repz
lds
mov
pop
call
pusha
shl
jnp
iret
aad
push
mov
xchg
sbb
fmul
push
in
scas
ret
adcl
int
dec
mov
sub
jo
or
ja
mov
lods
dec
imul
cmp
out
xor
les
or
or
ja
jne
lret
xchg
pop
xchg
mov
xor
stc
add
aaa
mov
in
pushf
xchg
repnz
dec
aas
out
push
lea
int3
movsl
addr16
push
mov
les
aam
xchg
jnp
push
out
add
out
mov
xlat
leave
xor
mov
mov
pop
push
lods
faddl
and
jecxz
lods
jnp
mov
mov
stos
jnp
jle
in
and
roll
test
and
nop
pop
sbb
lea
pop
rcr
adc
jl
cmp
cmpl
jno
test
es
fisubrs
popf
test
pop
push
in
jne
sub
dec
jbe
push
pop
fcoms
pop
fnstcw
mov
lea
jmp
sbb
sub
stos
jae
add
mov
das
push
sub
jl
test
pop
test
pop
mov
roll
repnz
xchg
das
sub
incb
inc
pop
test
xchg
icebp
insl
into
xchg
fnstenv
enter
subl
lcall
insb
sahf
and
add
into
js
int3
mov
outsl
loop
push
in
popl
test
and
test
fisttpll
or
mov
sbb
mov
lock
xchg
daa
out
jmp
sub
cmp
loopne
mov
shlb
pop
fidivrs
pop
loopne
and
ret
test
call
lcall
adc
xchg
inc
sbb
pop
scas
es
adcl
aas
orb
out
cwtl
mov
mov
imul
xor
sub
aam
dec
pushf
test
or
push
xchg
call
loopne
ficompl
and
cmpsl
xchg
sbb
cmc
jns
mov
jb
rcrl
sar
xchg
incl
sub
mov
sub
mov
or
insb
imul
pxor
addr16
je
and
into
and
lods
mov
shl
int
push
push
es
lock
shll
inc
leave
mov
inc
clc
out
aaa
inc
push
cli
lahf
dec
jne
sbb
mov
mov
gs
jbe
es
dec
fldenv
inc
pop
sahf
mov
js
jle
push
or
cmp
je
lcall
xchg
inc
adc
xor
roll
cltd
mov
arpl
fsubl
sbb
lods
sub
jo
or
xchg
push
pop
push
call
cltd
mov
mull
dec
fldt
xchg
sbb
fs
sub
clc
mov
mov
and
ret
cmc
push
fwait
sti
call
dec
and
stos
test
fisubrs
jbe
add
push
fidivrs
mov
lea
push
sub
nop
jp
or
dec
wbinvd
cld
jecxz
lock
inc
push
and
ret
jo
lcall
gs
andb
jl
aad
fs
cmp
xlat
mov
nop
test
jp
scas
popf
rorl
ss
in
mov
inc
in
bound
xchg
dec
sbbb
arpl
jmp
aad
push
and
add
mov
repnz
xor
popf
outsl
or
lock
ret
jg
aas
call
cmp
pop
outsb
inc
out
stc
rcll
jle
add
lea
fisttps
pushf
subb
data16
mov
pushf
sbb
call
xchg
add
pop
mov
loopne
xchg
neg
jecxz
xchg
inc
add
cmp
cmpsb
cmp
add
xchg
mov
or
mov
int
icebp
or
jp
daa
and
fst
sahf
or
fiaddl
dec
iret
xchg
sub
and
shl
daa
jo
test
scas
aad
insb
aam
negl
mov
hlt
int3
mov
xor
stos
cmpsl
dec
xchg
cltd
notb
arpl
lahf
ret
add
sbb
pop
mov
cwtl
fistl
hlt
ret
mov
add
dec
pushf
mov
imul
mov
in
xor
xchg
fwait
pop
ds
inc
mov
out
pop
jb
test
xchg
and
jmp
or
jnp
and
pop
push
mov
mov
cmp
jmp
push
pop
sbb
sub
add
iret
daa
xchg
pop
testb
stos
or
int3
xor
xor
shrl
jl
cmp
pop
lcall
loop
pop
inc
adc
add
decl
popa
ds
dec
pusha
aad
sub
sub
and
dec
jmp
sbb
jnp
or
loopne
and
mov
dec
xchg
outsl
divl
pop
mov
dec
cmp
stos
sahf
dec
push
loop
idivb
mov
int
mov
aas
incb
out
mov
push
jle
mov
lods
or
push
dec
mov
ficoml
mov
xchg
mov
and
mov
push
jno
les
aam
mov
jecxz
lcall
push
sti
stos
and
and
mov
mov
inc
sub
ljmp
and
sub
stos
mov
add
mov
stos
loope
push
mov
push
and
xchg
out
es
js
mov
add
movsl
je
mov
jo
test
outsl
inc
push
mov
pusha
sbb
adc
pop
mov
roll
add
cmp
add
mov
ss
jp
ds
or
cmp
les
mov
xchg
test
inc
pop
scas
sbbl
std
mov
mov
cmpsb
std
adc
shll
cwtl
lret
lods
outsl
xchg
insb
cmp
sahf
sub
inc
mov
imul
dec
cmp
popa
inc
lea
int3
mov
inc
push
out
mov
push
dec
popl
add
mov
mov
push
scas
aaa
mov
ljmp
jmp
pop
stc
sbb
jecxz
cmp
dec
test
pop
mov
pop
or
or
in
das
dec
mov
out
sub
into
rcl
cmp
gs
ss
pop
sub
xor
shll
cmc
scas
dec
js
xor
scas
pop
lahf
mov
xchg
aad
push
adc
fildll
ror
mov
inc
mov
add
xchg
or
mov
mov
mov
or
popf
lods
sub
jge
fnsave
in
pop
mov
xor
dec
ret
xor
or
lret
sbb
sarl
ret
lret
push
or
add
insl
sbb
test
repnz
aas
cmp
mov
mov
and
fisttpll
push
int3
loop
add
cli
pop
cmp
or
test
aad
lcall
icebp
push
and
fdivl
gs
and
hlt
repnz
push
sub
jmp
sahf
inc
sahf
push
pop
sbb
pushf
mov
mov
scas
je
jmp
std
ret
sbb
cltd
jbe
mov
ljmp
popa
cmp
stc
mov
fistpl
rcl
data16
mov
pop
into
push
cwtl
movsb
aas
fsubrs
inc
cltd
adc
nop
dec
mov
mov
pop
pop
insb
jl
fsubrl
or
fnstsw
cmp
jae
cmpl
or
adc
fsubrs
and
test
or
mov
fisubrl
dec
jge
and
mov
xchg
mov
add
mov
testb
lods
jnp
orl
addr16
sbb
jecxz
lods
mov
cmp
inc
sub
cmpsl
test
jp
es
call
dec
orl
cmp
mov
inc
inc
mov
sub
pop
fidivrs
popf
scas
cmp
loope
push
inc
scas
and
cmp
in
ds
mov
outsl
insb
test
cs
inc
lds
lret
sub
sarl
pushf
inc
add
push
scas
scas
sub
cmp
sbb
imul
sub
ret
jle
repnz
cmpsl
jo
pushf
adc
popa
mov
inc
cmp
test
testl
out
xchg
je
jne
ret
xchg
mov
in
xchg
adc
lret
and
sub
fs
add
cli
dec
mov
jg
nop
add
push
or
enter
and
popf
xchg
jbe
xchg
je
pop
iret
stc
mov
and
mov
xor
lret
iret
shrl
inc
mov
xor
shll
jmp
adc
mov
ds
pop
dec
mov
inc
arpl
imul
int3
rclb
adc
mov
jp
inc
sbb
xchg
inc
in
xor
xchg
xor
pop
jb
ss
pop
and
sti
jo
pop
lods
push
mov
or
and
dec
loopne
outsb
int3
cmp
in
mov
fidivl
jno
xor
fnstenv
cwtl
mov
hlt
xor
fmull
test
mov
movsb
lods
pop
inc
leave
pop
nop
iret
mov
mov
test
pop
je
outsl
hlt
loope
cmp
ret
repnz
sub
jne
fisubl
push
roll
xchg
es
jmp
cmp
je
jle
outsl
xlat
mov
sbb
and
push
shlb
fsub
mov
xchg
gs
pop
mov
sbb
shld
inc
pop
iret
rorl
pop
popf
stc
dec
hlt
xchg
out
add
xor
jmp
push
addl
jl
insb
inc
test
pop
test
scas
lret
rcl
lods
push
xchg
jo
jbe
xchg
test
jp
and
stc
mov
scas
jno
and
jnp
in
mov
mov
mov
repz
popf
loop
pop
lock
out
int3
cli
xchg
dec
add
pop
jle
ds
movsl
nop
xor
in
ret
jb
push
lret
cmp
in
iret
mov
enter
rcrl
jbe
out
sti
xor
xorb
push
sub
adc
stc
dec
stos
or
lret
lods
jmp
mov
stc
sbb
cmp
dec
add
jge
cmp
adcl
mov
repz
adc
mov
enter
rcll
or
psubw
mov
inc
enter
inc
fcoml
pop
das
sbb
inc
and
adc
jge
add
inc
daa
pop
into
outsb
jae
and
daa
cmpsl
cmpsl
dec
imul
mov
lcall
cmp
ja
lods
and
ljmp
mov
leave
jns
in
mov
pop
test
andb
fnsave
test
dec
sbbb
mov
arpl
adc
dec
jnp
mov
and
adc
ljmp
jge
push
dec
push
or
mov
sub
cs
int
inc
jae
mov
adc
shl
popf
mov
orb
je
shlb
sbb
into
insl
hlt
enter
sbb
pop
xor
test
jecxz
mov
jp
jae
lods
frstor
out
aas
loopne
enter
lods
inc
je
pop
cmp
cmp
push
leave
orb
pop
out
mov
cmp
dec
filds
jl
popf
mov
scas
gs
xor
mov
icebp
push
ja
cmp
sbb
pop
mov
test
inc
and
aam
lahf
insb
bound
fnstenv
or
xchg
xor
and
stc
sub
fidivl
cmp
or
dec
pop
ljmp
lock
jmp
cmp
cmpsl
sub
out
dec
or
push
xor
sub
sub
clc
addr16
loope
cmp
adc
icebp
mov
inc
cmp
mov
in
jle
ja
pop
je
add
aam
push
mov
push
xor
popf
clc
movsl
cmc
cld
pop
fists
adc
fninit
les
stos
sub
mov
sbb
bound
ret
ret
xchg
cli
ds
dec
mov
call
loope
adc
inc
pushf
jmp
jmp
jbe
call
shll
jp
iret
jb
test
out
or
insb
into
in
mov
push
mov
sub
test
pusha
push
insb
sub
imul
or
xchg
mov
pop
and
add
pop
lret
nop
sbb
mov
outsb
adc
or
aaa
push
lods
push
ret
xchg
in
jle
push
mov
jg
inc
std
inc
mov
push
xlat
cltd
dec
push
xor
movsl
and
and
mov
or
push
lock
std
mov
sti
repnz
nop
mov
add
mov
flds
mov
xchg
xor
adc
test
in
outsl
push
iret
and
lcall
shlb
cmp
rcll
mov
lods
push
push
push
jp
les
push
push
sti
add
data16
ss
fidivl
xchg
mov
hlt
inc
mulb
fwait
xor
addr16
fisubs
bound
lods
xor
xor
xor
lret
mov
mov
hlt
jb
addr16
sub
jecxz
add
jg
adc
inc
or
sbbb
mov
sub
xor
and
push
inc
and
hlt
outsl
and
in
cmc
or
idiv
fidivrs
ret
xchg
hlt
fdivrp
shr
or
sar
inc
push
xchg
aas
movb
mov
out
testl
and
xchg
leave
xor
jno
xchg
scas
arpl
jp
shll
sarl
pop
repnz
push
and
fstpt
rclb
aam
movsl
fs
or
pop
or
xor
mov
leave
or
sub
js
or
jno
addb
push
xchg
mov
sub
fdiv
push
adc
shl
jne
shlb
loope
cmp
es
fdivr
cli
sbb
aam
shr
les
nop
push
jno
lahf
and
fmul
sbb
mov
gs
pop
push
ret
into
aaa
cmpsb
orb
jmp
loop
xchg
dec
mov
insb
repz
std
rcll
adc
pop
les
mov
dec
cmp
jecxz
push
mov
mov
adc
in
int3
pop
lods
cwtl
lock
push
mov
mov
push
lds
fwait
nop
jno
bound
cmp
mov
jp
pop
fstpt
repnz
inc
mov
cmc
shll
cltd
add
das
jl
clts
mov
inc
jns
lea
arpl
dec
je
repnz
xchg
or
inc
in
out
fptan
in
rcr
lea
inc
loopne
cld
push
xchg
pop
cmp
jecxz
adc
sub
pop
pop
loopne
shll
adc
iret
xlat
popa
xchg
dec
or
shll
cltd
in
jecxz
xchg
pop
insb
in
sbb
iret
out
mov
into
or
ja
mov
dec
pop
ror
xchg
adc
out
cmp
dec
dec
jne
xor
ss
adc
sti
daa
fsubrl
jb
aaa
mov
into
arpl
push
iret
aam
lcall
rcrl
jge
xchg
adc
jp
lret
push
dec
xor
mov
xor
xor
stos
out
dec
ret
std
jae
push
jle
rcrl
dec
or
jge
pop
imul
push
and
test
mov
popa
push
mov
pop
push
sbb
push
dec
ficoml
sbb
sbb
push
adc
sbbb
scas
xor
mov
or
sbb
daa
mov
outsb
inc
js
lods
jge
js
inc
fdivrs
cmpsl
sub
xor
outsl
lds
cwtl
add
leave
push
and
inc
aam
popa
push
mov
in
pop
pop
pop
mov
ljmp
push
loop
nop
pusha
xchg
sti
fdivrl
mov
jmp
repz
std
xchg
aas
scas
rcr
push
test
outsb
fadds
pop
repz
inc
xchg
call
jbe
mov
insb
pop
ss
repnz
inc
js,pn
popa
mov
test
xorl
imul
inc
xchg
xor
jbe
fucomi
stos
sti
jp
cmc
jno
lods
shll
hlt
xchg
aaa
pushf
mov
imul
leave
adc
push
mov
mov
enter
jb
or
push
popa
add
push
popa
stos
add
jmp
add
sahf
push
mov
and
cld
inc
incl
or
sti
dec
rorl
jae
mov
jl
push
out
and
xor
pop
jnp,pn
bound
sub
ret
stc
push
xor
jno
stos
jmp
iret
in
pop
stc
or
jnp
pop
or
notl
nop
movsl
ja
stos
testb
test
mov
jl
jmp
js
pop
xchg
lods
xor
int3
mov
lcall
sbb
cs
cmp
ss
xor
sbbb
subl
push
inc
jl
dec
jns
test
cld
or
mov
adc
xchg
sti
outsb
and
bound
mov
scas
sub
or
sbb
pop
pushf
pop
scas
movsl
xchg
pop
adc
cmp
pop
xor
cmpsb
and
adcl
xchg
push
dec
aaa
mov
pop
xchg
inc
jg
jle
pushf
add
call
pop
leave
pop
daa
loope
stc
cmpb
pop
cmp
sub
sub
mov
jl
jne
movsl
dec
pop
push
dec
or
cmc
mov
ret
push
lcall
std
adc
pop
popf
aas
or
mov
sbb
and
out
mov
rcl
fsub
mov
mov
dec
mov
xchg
insb
pushl
fists
std
sub
scas
faddl
ds
pop
imul
dec
xor
add
rolb
enter
popf
pop
cmp
shr
testb
inc
pusha
add
or
dec
rcr
outsl
sbb
dec
jnp
adc
stc
lods
outsl
mov
in
mov
xor
xchg
mov
test
push
daa
add
iret
ficoml
sbb
jae
mov
into
mov
mov
addr16
je
fcmovu
mov
ljmp
or
inc
adc
mov
fistps
fldenv
push
loope
dec
jmp
rolb
push
add
xlat
adc
out
or
out
sti
out
lock
or
pop
mov
cmpsb
pop
fwait
mov
mov
or
loopne
dec
add
sbb
dec
fistps
fiadds
sub
test
push
mov
cmp
out
lea
push
sub
aaa
mov
mov
mov
add
les
mov
pop
dec
xor
call
cmc
pop
inc
mov
int3
stos
es
cltd
scas
andl
in
test
in
cmpsl
push
cmp
jnp
sahf
popa
xchg
add
push
test
sub
sub
mov
scas
test
inc
jle
sbb
pusha
push
and
subl
and
sub
bound
into
sub
or
mov
mov
inc
and
das
insb
cmc
std
pop
addl
push
lret
in
outsl
pushf
scas
or
push
jge
sbb
aad
inc
lahf
sbb
test
push
cmp
dec
lods
lahf
adc
loope
push
stos
jge
int
stc
dec
js
adc
xchg
jnp
mov
mov
mov
pop
pusha
call
js
insl
dec
push
jae
dec
and
popa
cltd
lods
push
rcrl
stos
dec
xchg
mov
out
mov
dec
mov
adc
or
shlb
arpl
xchg
fisttpl
repz
inc
fwait
imul
xchg
sub
adc
imul
cmpsl
mov
dec
stos
inc
sti
pop
popl
push
cmpb
pop
mov
cltd
xchg
jecxz
sub
pop
adc
dec
into
addr16
maskmovq
testl
jne
cli
dec
inc
jbe
pop
movsl
out
jnp
lods
arpl
imul
fwait
ds
cmpsl
cwtl
mov
mov
pop
scas
pop
and
sbb
popa
cmp
cmpsb
cwtl
es
push
clc
into
mov
xor
sub
push
fnstenv
cltd
xor
shr
mov
into
nop
cmp
cmp
ja
sbb
arpl
pop
sbb
sub
xor
addr16
dec
imul
adc
adc
dec
jl
add
inc
andb
jp
mov
cmp
shrb
or
imul
push
xchg
or
sub
mov
mov
pop
and
daa
scas
jns
popa
repz
leave
out
test
mov
xorb
dec
mov
xor
aas
and
data16
loop
mov
adc
fisttpll
ljmp
push
cmp
xchg
mov
cs
sbb
add
aaa
popf
call
xchg
inc
dec
jo
sub
out
add
stc
xorb
push
enter
gs
and
fistps
adc
add
push
adc
jp
pop
xor
fidivrs
rorl
std
inc
sub
sbb
and
aas
adc
mov
mov
add
fcmovu
sti
cltd
fadd
fisttps
dec
ja
inc
popf
push
jmp
fnstenv
or
add
lods
cmp
lahf
jae
jl
pop
js
cmp
fsts
addr16
in
int
int
mov
movsb
xchg
cmpsl
inc
mov
add
cltd
mov
sub
xor
mov
xor
sub
enter
ljmp
aad
push
and
jno
push
cmp
popa
ljmp
mov
dec
dec
inc
xor
movsl
mov
fisubs
push
dec
jne
dec
jno
mov
mov
cmc
cmp
xor
xor
dec
mov
cmp
loop
movsl
xchg
jbe
fidivl
and
aas
js
xor
scas
sbb
loop
add
add
ret
scas
aaa
inc
jg
add
call
and
cmpsl
in
mov
std
lahf
pop
jne
fbld
cmpsb
xor
in
lock
lcall
jmp
jo
aas
fistl
xor
push
jne
sub
jl
rep
jne
or
jno,pt
stc
jo
mov
push
pop
mov
pop
xor
xchg
inc
inc
fbstp
addr16
adc
test
repz
push
mov
or
mov
cmp
push
xchg
rorl
daa
dec
pop
mov
or
jb
adc
arpl
lods
pop
ljmp
mov
cmc
das
pop
mov
jno
iret
scas
mov
fnsave
mov
int3
pusha
fwait
lods
scas
mov
cld
pop
jbe
mov
lods
rclb
add
push
testl
scas
and
cmp
imul
leave
and
lret
mov
outsl
dec
outsb
popf
scas
inc
cmp
inc
lods
lahf
dec
pop
inc
xor
pop
sbb
push
xchg
push
dec
dec
sarb
pop
fimuls
movsl
bndstx
lret
stos
jb
adc
and
popa
in
cld
lock
mov
jb
cld
cli
xor
lea
sbb
je
xor
xchg
aaa
std
fildll
movsl
mov
sbb
bound
sbb
outsb
popf
aaa
sti
ds
or
cmp
hlt
adc
pop
pop
ja
jmp
out
mov
adc
mov
mov
outsl
push
dec
jnp
jl
cmp
dec
dec
xchg
cmc
loop
mov
aam
pop
jno
loopne
sbb
mov
xor
ficomps
cld
cltd
push
fdivs
test
lods
jnp
inc
neg
daa
sbb
std
mov
stc
and
push
pop
mov
imul
push
jle
mov
es
adc
pop
and
loope
cs
sahf
xchg
xchg
mov
push
fnstsw
pop
js
jmp
rorl
or
jne
inc
sub
test
in
ret
frstor
mov
lahf
testl
adc
mov
sub
sti
pop
shll
push
fucomi
jp
inc
movsb
sub
popl
xchg
mov
popa
cmp
add
int
in
lock
in
jge
loop
pop
add
cmp
andb
mov
dec
jl
arpl
mov
dec
jne
xlat
test
shrl
inc
push
push
cli
mov
rorb
sahf
mov
inc
jne
adc
in
mov
ss
mov
jne
mov
hlt
ret
popf
test
and
jp
aas
pop
dec
orl
mov
in
pushf
push
test
or
sub
pop
push
push
xor
sbb
in
lock
sbb
pop
popf
clc
icebp
aaa
int3
bound
dec
in
popa
and
insb
sub
sub
push
loope
inc
je
push
jle
lret
mov
xchg
sarl
aaa
mov
in
leave
adc
ret
imulb
es
addr16
subl
sub
xor
push
pop
inc
xor
dec
rol
iret
xchg
ljmp
add
or
or
cltd
pop
mov
jmp
xchg
mov
adc
jmp
add
mov
push
fisubrs
shrb
jne
mov
add
iret
mov
ds
xchg
fildl
mov
imul
movsb
in
loope
sti
adc
outsl
mov
xchg
sti
xor
and
lcall
into
clc
stos
out
flds
into
shll
push
push
shrb
fisubrs
mov
iret
mov
or
daa
or
dec
push
cmpsl
and
jge
cmpsl
cmp
andl
int3
adc
popa
add
jne
mov
or
mov
inc
out
into
sbb
movsl
or
mov
pop
xchg
add
mov
lods
fcomps
sti
mov
pusha
and
mov
stc
pusha
sbb
or
sub
test
rclb
sti
fwait
cmpsl
scas
push
and
repnz
rclb
inc
sub
pop
fisttpl
mov
mov
std
push
es
js
jg
add
mov
or
push
mov
sbb
gs
and
sbb
push
sarb
push
std
enter
xchg
mov
dec
aad
xorl
sub
lea
push
adc
int3
sub
imul
mov
or
in
dec
xlat
call
imul
inc
in
jge
jne
ret
xor
inc
cmpsb
shrb
cmp
arpl
in
arpl
or
inc
sahf
adc
in
mov
pop
pop
jns
mov
mov
rcrl
inc
add
shrb
int3
dec
pop
clc
nop
mov
sub
adc
push
push
mov
inc
mov
addl
cwtl
repz
jbe
add
push
and
loopne
add
stc
insb
aad
movsl
sub
cmp
inc
mov
test
stos
jmp
mov
sbb
sbb
push
popa
cmp
jnp
push
mov
into
xor
mov
xchg
mov
xor
cmc
popa
cmp
xlat
dec
pop
out
add
fistpl
pop
mov
and
mov
testl
mov
push
aam
int
xor
cli
bound
das
jns
mov
xchg
pop
shlb
ss
jns
popa
pop
push
pop
lods
lcall
pop
popa
push
xor
js
aas
add
or
and
adc
inc
mov
sbb
jnp
das
or
push
push
paddusw
sub
repnz
sahf
pop
inc
int
pop
push
lret
cmp
les
sub
inc
xchg
xor
push
addr16
push
out
call
jg
scas
rclb
jbe
hlt
xchg
push
jne
pop
adc
ret
in
or
inc
mov
xchg
mov
xor
mov
xchg
pop
fs
mov
je
daa
push
push
insb
adc
xlat
jbe
dec
dec
xchg
rorb
push
mov
pusha
sbb
ljmp
sahf
and
jecxz
mov
cmp
orl
je
push
test
cli
fistpll
pop
xor
xor
loope
stos
sub
ret
xor
dec
cmp
out
out
ja
dec
cli
in
fiaddl
jnp
sub
jmp
xchg
mov
lret
lods
pop
lret
mov
adc
adc
fiadds
mov
sbb
lahf
mov
mov
fcomi
pusha
addr16
aam
scas
mov
jnp
out
stos
loop
jo
mov
pop
sti
pop
xlat
hlt
push
jmp
loopne
aad
jp
xor
and
fsts
dec
int3
hlt
jp
arpl
inc
insb
out
jp
dec
call
cmp
out
cwtl
inc
call
js
test
les
stos
loopne
cmp
sub
cmp
sahf
sub
push
jl
mov
mov
xorb
add
int
pop
minps
pop
lds
push
jecxz
fldenv
sbb
or
jns
pop
lret
mov
xchg
in
mov
mov
inc
loope
push
movsb
mov
scas
jae
xor
cmpsl
xor
xchg
mov
outsb
pop
ds
add
inc
add
ljmp
inc
imul
mov
ss
or
mov
sub
mov
sbb
andb
popf
imul
insl
das
jns
inc
xor
or
mov
sub
icebp
rcr
loop
fisttpll
pop
push
ds
push
adc
in
fnstenv
imul
and
dec
bound
pop
jl
outsb
and
scas
movsb
test
adc
push
xchg
dec
push
mov
xor
push
push
subl
stos
mov
xor
mov
pushf
or
xchg
xlat
ljmp
push
xchg
mov
orl
fucom
and
mov
xchg
lods
pushf
mov
lret
mov
enter
scas
xchg
lock
or
loop
push
lret
clc
outsb
cmp
in
in
out
sbb
dec
js
cli
inc
stos
mov
cmp
sub
cmpsl
add
iret
pop
xlat
jle
lds
mov
lret
push
ror
jbe
mov
imul
adc
pop
cmpl
into
push
pop
mov
sub
xchg
sbb
jns
sbb
imul
sbb
sub
add
mov
jp
out
xor
ret
scas
inc
inc
into
mov
mov
mov
push
in
or
cmovb
lods
push
adc
sahf
pop
jns
mov
push
outsb
jbe
push
sbb
cmp
aad
push
mov
mov
push
xor
incb
sbb
dec
nop
rcl
gs
jo
xchg
sbb
or
mov
mov
push
mov
jno
lock
pushf
adc
mov
adc
cmp
add
fistpl
pop
imulb
mov
jo
fdiv
cwtl
pop
repnz
arpl
adc
adc
pop
std
loop
cmpsb
jae
inc
mov
mov
inc
inc
fbstp
mov
and
pop
arpl
mov
push
leave
pop
add
mov
sbb
and
out
hlt
pop
cwtl
jbe
inc
mov
dec
pop
adc
into
arpl
or
arpl
sbb
in
negb
popf
ds
sub
jge
mov
or
mov
testl
sbb
sub
inc
pop
inc
fwait
popa
xchg
and
cwtl
shll
sbb
mov
jle
or
or
mov
stos
aas
imul
jnp
aad
pop
out
orl
xchg
pop
ficoms
adc
sbb
mov
xorb
popf
and
test
jg
lock
mov
sub
jnp
lock
cli
dec
adc
negb
iret
pop
addr16
lcall
xchg
mov
push
add
loope
call
push
mov
jecxz
push
ja
sbb
lret
lods
sbb
sarb
xchg
mov
int3
dec
jmp
xchg
cwtl
or
sub
dec
jge
fwait
movsb
sarl
mov
fistpll
or
mov
icebp
andl
cmp
mov
insb
pusha
mov
sbb
fs
movsl
cmpsl
icebp
jl
filds
push
repz
xchg
je
cmp
sarl
mov
sbb
dec
imul
ljmp
xchg
mov
dec
adc
mov
popa
push
mov
and
sub
mov
ss
popf
adc
mov
pop
push
pcmpgtb
sub
pop
xchg
adc
orl
push
add
xchg
jns
int
adc
pop
jge
push
hlt
rorb
cmc
mov
ljmp
gs
inc
pop
fdivrs
xchg
jae
rolb
sub
cs
fsts
mov
sub
fnstsw
sub
scas
loopne
popa
mov
add
jg
shrb
dec
ss
popf
xchg
pop
or
ss
scas
aam
add
or
add
outsl
ret
or
insl
and
jae
lcall
test
popa
jbe
cs
and
xlat
fnstsw
and
ljmp
inc
cmp
flds
bound
cmpsb
scas
fldt
pop
jns
les
out
mov
jl
sub
insl
sbb
push
jo
mov
push
mov
adc
cmp
sub
ds
daa
pop
xchg
mov
sti
pusha
mov
lcall
and
adcl
sbb
inc
les
and
rcrl
test
inc
scas
jnp
int
xchg
test
mov
loope
int3
les
outsl
outsl
dec
outsb
or
jmp
dec
aas
out
fstpt
mov
in
mov
gs
jbe
loop
jmp
xor
mov
adc
or
lea
dec
dec
cmp
or
xor
in
mov
push
sbb
inc
jmp
or
inc
mov
xchg
lcall
push
mov
mov
insl
mov
dec
sbb
es
adc
sbb
orb
movsb
cld
iret
sub
adc
andb
addps
inc
in
stos
xor
les
jmp
mov
inc
popa
test
pop
jb
test
mov
xor
movsb
jns
cmpsb
xchg
sti
xor
pusha
sub
push
sarb
add
scas
sarb
in
out
test
pop
lods
jbe
sub
gs
outsl
fists
or
cmpsl
mov
xchg
mov
pop
ljmp
dec
sub
add
cmpb
aaa
fnstcw
sbb
dec
aas
aad
into
stc
adc
cwtl
push
cmp
loop
in
lret
cltd
sbb
or
inc
std
or
rorb
jbe
mov
xor
aam
add
add
lods
cmp
mov
test
cli
mov
ja
push
pop
ret
or
lret
jnp
outsl
shl
pop
scas
ljmp
xor
pop
stos
sbb
ret
and
jno
bts
or
jae
pop
fs
mov
xor
aaa
mov
mov
xlat
xchg
outsb
idivb
repz
je
xor
xor
xchg
adc
les
and
leave
dec
xor
sbb
ljmp
leave
mov
nop
cmpsb
add
mov
arpl
mov
or
push
adc
scas
aas
ror
and
scas
out
mov
mov
inc
push
push
aaa
jo
add
mov
addb
inc
pop
popa
fstp
mov
mov
mov
sub
mov
popa
mov
pusha
or
rcr
xchg
mov
push
jb
addr16
xor
mov
dec
daa
lock
or
mov
ds
sbb
fimull
pop
jnp
mov
lods
inc
rolb
push
xchg
bound
xchg
jmp
jecxz
sub
sbb
jbe
and
add
lea
aam
push
dec
adc
das
aas
daa
and
cmc
push
fildl
pusha
test
mov
addr16
test
push
in
sbb
test
xchg
into
mov
add
bound
js
daa
aaa
loopne
cmp
call
inc
inc
push
mov
and
les
mov
mov
or
das
dec
in
mov
call
add
gs
test
test
jne
out
test
jnp
xchg
out
test
dec
ljmp
sbb
inc
cmp
sbb
inc
repnz
xchg
in
mov
lods
inc
std
andb
mov
ja
and
cs
jmp
fldt
cmpsl
sbb
pop
add
mov
push
aad
pop
ss
mov
cmp
lret
nop
xor
pop
cmpsb
mov
jp
sarl
loopne
or
cmc
sahf
dec
dec
dec
cwtl
mov
and
int3
inc
xor
jg
dec
jno
cmp
mov
pusha
mov
ljmp
clc
jle
add
pop
out
jno
sub
bound
fidivl
incl
adc
jnp
movsl
cmp
and
pop
movsb
cmpsb
sub
xchg
dec
insl
insb
bound
aad
cld
pushf
fidivrl
repz
ret
push
pop
ret
test
pop
push
sarl
and
out
out
mov
mulb
sbb
and
cmp
js
add
popa
pop
clc
mov
dec
ja
fucomi
cltd
inc
mov
xor
xor
xchg
push
enter
inc
jno
or
dec
xchg
lock
push
ret
push
in
sub
call
bound
cmp
mov
lock
inc
add
cltd
aaa
dec
cmp
daa
inc
call
ret
clc
movsb
dec
cmp
fcoms
mov
outsl
hlt
push
sub
and
fisubs
loop
jo
shl
sahf
outsb
js
mov
hlt
sahf
pop
mov
xchg
cs
jl
sbb
call
dec
adc
xchg
cmp
pop
out
pop
pop
pop
das
jo
and
sub
inc
pop
in
mov
sti
fildll
cmpsb
sub
pop
outsl
mov
out
add
sbb
popa
sbb
push
push
sar
xor
xor
inc
jns
arpl
lret
inc
or
movsb
sbbb
pop
mov
hlt
xchg
loopne
xor
jbe
cld
outsb
fsubs
sbb
push
shlb
push
fidivrl
cmc
sub
mov
dec
pop
mov
testl
and
icebp
mov
decl
ljmp
subl
inc
jle
mov
mulb
xchg
rorb
mov
inc
jbe
add
sub
int
inc
pop
adc
mov
int
cmpsl
dec
sub
or
mov
xor
push
inc
add
xchg
mov
test
dec
mov
scas
lods
fistps
aaa
pop
cmp
or
loope
cwtl
jbe
iret
int3
jb
jp
jle
lock
xchg
rcll
push
mov
loope
mov
bound
sbb
aas
in
in
addl
cld
jno
shrb
sub
mov
sbb
es
or
fincstp
mov
and
and
jae,pn
pop
imull
jge
adc
ja
rorb
add
mov
rcrb
repnz
flds
jg
mov
inc
pusha
ret
fistpll
mov
dec
mov
inc
mov
lea
jge
les
pop
fs
sahf
iret
adc
popf
sbb
sbb
fsubl
push
sbb
les
dec
call
mov
add
lahf
dec
mov
fildl
scas
pop
mov
pop
dec
shrl
inc
cmpsl
leave
ja
mov
sahf
ljmp
dec
fnstcw
in
mov
fmull
mov
push
cs
out
lock
mov
pop
fdivrl
loop
sarb
jne
dec
aas
ret
ror
inc
sub
les
mov
push
push
cmpsl
mov
or
mov
add
or
mov
jno
in
push
add
mov
fisubrs
dec
loope
sahf
jbe
pop
cmp
lret
adc
add
xchg
cmp
or
pop
jmp
sahf
inc
fbstp
sub
dec
mov
rcr
jl
xor
andb
mov
sti
jae
pop
outsl
mov
cld
outsl
xchg
xor
hlt
mov
into
fists
test
or
xor
cmp
je
fidivrl
mov
loopne
jns
sbb
addr16
testb
cmpsl
or
inc
dec
leave
jle
iret
clc
cld
scas
pop
test
add
out
cmp
test
frstor
add
out
js
sbb
dec
jp
rorb
lods
daa
imul
and
pop
std
xor
xchg
add
sub
je
add
jmp
je
sahf
jnp
sub
xor
add
rcr
rcrb
pop
pop
add
mov
xchg
fiadds
cmc
and
jo
jmp
xor
mov
scas
repz
pop
ljmp
in
adc
in
icebp
mov
push
fimull
aam
imul
loopne
sbb
bnd
push
insb
out
lcall
jb
leave
lret
pusha
es
mov
adcl
pushw
sbbb
push
popf
out
xor
lods
lret
movsl
mov
test
jge
jno
mov
outsb
add
inc
adc
push
in
mov
mov
enter
lret
xchg
pop
insl
mov
add
mov
test
pop
das
jecxz
data16
inc
pop
and
arpl
or
cli
loope
cmp
out
roll
mov
xchg
xor
movsl
xchg
xchg
mov
mov
inc
fdivrs
mov
in
xorl
js
test
mov
addb
push
or
inc
mov
lods
adc
sub
pop
dec
pop
test
ret
pop
je
fsubs
les
xchg
mov
pop
jle
jb
jp
cmp
mov
outsb
sti
aaa
out
in
sub
xor
scas
add
call
cmpsb
mov
lret
xchg
xor
pop
stos
in
xor
roll
add
mov
insl
lcall
push
push
dec
outsl
loope
inc
ja
sub
mov
cmp
cwtl
mov
repnz
int3
xchg
in
dec
fidivl
nop
cmpsb
ret
sbb
std
out
scas
lods
std
jne
xchg
fildll
xchg
mov
lods
out
in
out
pop
push
outsl
jge
clc
mov
xchg
push
out
test
jne
mov
ds
cmp
rcr
push
and
imull
adc
imul
push
cld
and
push
mov
add
sub
mov
aaa
mov
outsb
movsb
sub
mov
shrb
xchg
out
push
popa
sub
or
add
jp
fwait
enter
lods
fdiv
aas
mov
test
dec
push
shrl
lret
xchg
push
lods
shrd
subb
cld
add
cmc
push
cli
adc
lock
sahf
push
add
sahf
popl
xchg
inc
cli
popf
lcall
jne
in
mov
xchg
mov
adc
pop
and
mov
cs
mov
int
jns
ret
mov
cmp
lcall
aaa
jno
mov
bound
push
insl
sahf
cld
dec
mov
dec
mov
in
popf
mov
out
je
aas
gs
push
ss
sti
push
jno
mov
hlt
mov
inc
pop
into
dec
pop
subb
cmpsl
mov
stos
and
je
add
jg
lea
test
xor
sub
push
mov
test
and
js
lret
jb
push
push
xchg
xor
leave
loope
and
in
sub
roll
fcoms
sub
xchg
bound
rorl
lret
test
dec
xor
lcall
jge
outsl
mov
and
fs
rorl
push
jl
xor
jne
cmp
push
push
loop
jp
adc
shll
ss
fstpl
test
sub
cwtl
dec
pop
filds
mov
popa
sub
rclb
mov
pop
mov
test
push
rcl
cmp
jge
js
jg
adc
mov
and
iret
sub
fdivr
scas
xchg
sbb
movb
jns
push
stc
ret
xchg
outsl
xor
xor
inc
stos
pop
mov
cmpb
jb
call
lahf
fnstsw
jns
xor
jno
mov
fistpl
negb
popa
dec
sub
push
inc
movsl
popa
scas
pop
sub
mov
or
add
test
mov
std
lds
mov
cmp
lea
movsl
call
test
aad
ret
adc
xor
jne
leave
aam
into
jno
jbe
push
mov
pop
push
addr16
xor
arpl
mov
rorl
lret
sub
cmp
pop
mov
dec
inc
orl
dec
pusha
ss
cmp
sub
mov
int
push
je
pop
loop
jae
cmp
mull
push
insl
js
adcb
jg
push
popf
in
fistps
mov
cld
inc
jnp
sub
insl
and
push
ret
inc
addr16
testb
mov
ss
loope
mov
int3
dec
test
pusha
scas
das
push
shlb
cmp
xchg
in
mov
fmul
cld
out
pop
pop
push
dec
hlt
out
xchg
mov
sub
or
or
repz
nop
or
sbb
iret
sti
pop
lea
xchg
stos
in
mov
sbb
adc
shlb
cmpsl
jo
fwait
xchg
mov
xor
mov
mov
sahf
adc
shrl
imul
dec
inc
into
int3
push
xchg
pop
sub
sarl
jb
imul
pop
leave
xchg
idivl
cmp
lahf
loope
xlat
lahf
sub
repnz
mov
sbb
pushf
sbb
out
jo
pop
xchg
xlat
in
mov
mov
sub
cmpsl
test
sti
sahf
hlt
fs
push
xchg
sub
inc
pop
cwtl
fwait
push
mov
mov
lods
loopne
aas
push
mov
sub
cmp
decb
arpl
mov
jp
cmpsl
icebp
pop
arpl
xor
call
mov
cwtl
sbb
and
aad
pop
sub
fcmovbe
loopne
outsb
push
lahf
or
pop
cmpsl
ss
aam
jo
repnz
nop
lcall
stos
lds
movsb
and
stos
and
dec
and
es
adc
dec
mov
lods
adc
cmpsl
not
shll
lret
push
sbbb
sbb
std
idivb
sub
or
jae
loope
dec
cs
sub
jne
push
inc
jns
fs
sub
cmp
xchg
arpl
dec
push
mov
jno
mov
pusha
pushl
test
ret
subl
addr16
popa
jg
bnd
add
adc
inc
pop
dec
repnz
push
jmp
imul
sbb
ss
xor
pop
out
or
stos
rcll
mov
pop
mov
cld
mov
pusha
xor
test
cmp
mov
dec
divb
add
stos
and
pop
iret
push
mov
int
out
cmpsb
je
xchg
mov
loope
mov
pop
insl
pop
pop
lods
cmpsl
enter
mov
jnp
stc
test
push
and
sbbl
cmpsl
in
jl
pop
ss
mov
pop
aaa
std
jge
lcall
movl
stc
lahf
cld
pop
notl
scas
ja
nop
outsl
or
ret
or
cmp
movb
jl
aam
xlat
into
jmp
dec
das
push
ret
clc
dec
icebp
inc
popa
mov
int3
mov
aad
xrelease
sub
sub
and
cmp
out
ret
mov
adc
inc
in
int3
inc
mov
fdivrs
pop
addr16
dec
jno
nop
jne
hlt
jmp
adc
inc
int3
xor
aam
fs
fisubl
out
lods
ss
jnp
addr16
into
pusha
popl
subl
and
fldt
jp
push
stos
push
pop
lahf
jns
jae
or
out
stos
daa
mov
jp
outsb
add
bound
fwait
pmullw
adc
push
stos
ret
data16
pop
add
ret
sub
add
or
xor
push
lcall
fwait
jb
jnp
mov
lock
push
sub
dec
lret
sub
mov
mov
hlt
aam
dec
ret
add
or
shll
cli
pop
popf
cli
daa
pop
push
lret
and
mov
and
lret
call
inc
lock
push
pop
mov
push
xchg
or
in
jp
pandn
leave
idivl
and
xchg
mov
add
push
mov
ljmp
in
inc
mov
out
ror
sbb
mov
inc
push
sahf
add
dec
push
aaa
push
xchg
mov
push
cmpl
cs
mov
sahf
das
pop
sbb
and
inc
and
test
nop
push
jg
bound
mov
xor
lods
iret
sub
imul
sti
out
xor
xor
mov
xchg
stos
adc
loopne
inc
pop
out
rcr
mov
stos
movsl
cmp
popf
sbb
mov
jo
cmc
pop
mov
insl
jo
fs
shrl
or
mov
push
push
aas
pusha
jae
arpl
mov
out
add
out
enter
movsl
mov
dec
loope
push
lods
cmpl
cmp
cmp
xchg
cmp
inc
add
jmp
or
add
push
imul
jmp
es
cmc
fidivs
mov
test
sti
test
cld
les
add
jb
test
int3
ret
sbb
pop
sub
inc
adc
mov
je
and
xchg
scas
dec
mov
outsb
xchg
adc
sub
inc
jo
stos
cmp
ds
mov
sbb
loopne
cmp
je
pop
ja
adc
push
sub
loop
sbb
xchg
enter
mov
mov
mov
sbb
test
fadd
adc
cmc
cli
sbb
iret
and
int3
and
aam
xchg
jo
mov
sub
stos
outsb
insl
aaa
sbbl
xor
clc
int
jne
pop
xchg
loopne
xchg
je
push
je
mov
setge
fdivs
mov
mov
adc
ljmp
pop
sbb
loope
int3
adc
inc
arpl
jmp
cmp
popa
cs
adc
ret
mov
jns
inc
jnp
icebp
les
in
cmp
inc
ds
xchg
ss
sub
in
dec
movsl
pushf
sarb
test
fdivrl
sub
pop
nop
add
mov
addr16
das
xchg
adc
das
xchg
xor
inc
lds
fstpt
fwait
add
aam
and
xchg
imul
pop
scas
xchg
cwtl
out
lods
dec
inc
cld
mov
aad
mov
and
sbb
scas
in
jl
xor
lds
sbb
add
stos
call
test
jmp
lods
xor
mov
ror
fs
test
imul
xchg
sti
ret
cmp
inc
xlat
cli
lret
dec
ds
or
int3
cltd
xchg
push
xchg
pop
cmpsb
cmp
into
jp
mov
mov
mov
and
cwtd
or
jecxz
into
dec
dec
cwtl
mov
in
sbb
mov
fwait
in
test
inc
dec
scas
iret
lea
mov
xchg
cwtl
fildll
inc
jmp
pop
push
dec
jl
pop
dec
pop
or
push
pop
jne
std
cmp
sbb
or
sbb
cli
xor
sbb
pop
mov
adc
push
cs
fwait
pop
adc
gs
push
cmp
xchg
sub
dec
sbb
xor
popf
in
xor
or
mov
es
push
fsubr
fwait
test
mov
in
mov
jmp
jo
jge
ja
sbb
mov
mov
cmpsb
jp
or
xchg
popf
test
inc
cmp
test
mov
int3
lods
loope
jb
or
je
lret
loope
fsubr
jo
stos
mov
sti
adc
add
loopne
add
pop
sub
mov
adc
pop
dec
pop
lret
loopne
xchg
sbb
iret
cmp
xor
imul
xlat
mov
mov
je
adc
fdivr
mov
iret
outsl
push
xor
mov
or
iret
or
dec
add
test
jb
loop
repnz
push
cmpsb
dec
fldenv
das
mov
mov
stos
mov
int
out
repz
call
fstps
inc
pop
push
adc
rcrb
cmpsb
out
lcall
xor
cmp
or
cmp
cmpsb
scas
jno
out
insl
push
xchg
inc
fsts
jnp
rcr
mov
call
fisubl
sbb
andb
mov
stos
pop
in
out
xchg
lret
adcl
addb
xchg
test
push
je
fstpt
lret
lahf
cmp
out
add
mov
lods
imul
out
testl
xlat
imul
fistps
negb
pop
rclb
outsl
ret
aas
add
scas
jne
add
xor
scas
daa
push
test
dec
mov
in
or
mov
fsubrl
or
icebp
adc
push
mov
push
out
mov
lret
add
subl
mov
push
loopne
rcrb
mov
cmp
imul
sub
enter
jle
lods
rcrb
jmp
cmp
arpl
outsl
jo
mov
rorl
fsubrl
outsl
scas
addb
lcall
daa
xor
out
movsb
in
in
dec
cmp
mov
shll
cltd
aaa
negb
ljmp
dec
lret
jbe
int3
fcmovne
pop
sub
inc
aad
cmp
nop
int
iret
in
shl
cmpsb
mov
add
dec
and
sbb
int3
add
dec
mov
jg
mov
ja
pop
mov
rol
fucomp
pop
and
push
sbb
jmp
lods
popf
push
and
xor
ljmp
mov
in
and
rcll
imul
pushf
addr16
mov
mov
and
movl
lods
xchg
pop
icebp
xor
hlt
xor
sbb
cmovp
inc
enter
xchg
dec
in
lret
lcall
add
pop
jge
xchg
test
mov
stos
leave
xor
sub
in
add
mov
adcb
je
scas
mov
or
dec
or
jmp
mov
sub
push
dec
xor
insl
cwtl
imul
push
lahf
mov
xor
cwtl
lcall
pop
push
pusha
mull
arpl
inc
dec
stc
xlat
mov
loope
and
mov
mov
stc
inc
jns
lods
rcrb
mov
dec
and
mov
inc
std
xor
adc
mov
pop
mov
clc
add
jp
insl
jne
and
adc
sbb
xchg
mov
xchg
mov
jge
sbb
add
dec
andl
add
shlb
adc
mov
xchg
inc
pop
in
cmc
lret
hlt
xchg
orb
dec
push
jl
adc
push
mov
xlat
movb
sbb
ja
mov
into
jp
push
mov
pop
pop
gs
inc
push
fmull
mov
mov
test
xor
xchg
mov
popf
sti
gs
push
test
lds
sub
xor
in
mov
js
or
arpl
sbb
das
in
xor
or
aaa
sbb
imul
jo
inc
cs
xor
and
push
xor
out
push
sbb
inc
jmp
add
cmp
mov
adc
cltd
dec
or
cmc
daa
mov
imul
aad
pop
clc
divb
adc
add
sbb
bsf
out
insb
int3
lods
and
lret
and
insl
adcb
mov
or
mov
xor
push
dec
lds
xchg
fsts
jge
lahf
xchg
xchg
stos
loope
push
cmpsb
jge
cs
dec
addr16
insb
and
in
mov
jl
sub
xor
adc
test
and
scas
in
sbb
jno
aas
inc
cld
pop
push
pop
mov
das
dec
dec
shl
lods
cmpsb
mov
xchg
cmp
xchg
sbbl
jnp
xchg
loopne
pop
cmpb
sbbb
jbe
jo
test
enter
nop
sbb
fs
xchg
add
int3
jno
jbe
mov
ss
lea
sub
repz
lcall
jl
iret
mov
adc
inc
loope
insl
inc
push
arpl
cmc
std
fsubrp
sar
cltd
sub
jecxz
in
fsubl
mov
mov
or
xchg
daa
dec
or
pop
jmp
cmpsl
push
cs
cld
pop
cmc
popf
mov
jecxz
sbb
mov
int3
insb
adc
xchg
push
aas
jo
pop
cmp
or
insl
or
inc
repnz
test
sti
call
ljmp
inc
es
adc
adc
rorl
xchg
lret
imul
jae
and
and
ficompl
cmp
cli
mov
lock
sub
jno
sbb
mov
fs
pop
sbb
insl
les
pop
xchg
xor
cwtl
gs
sbb
mul
mov
pop
xor
adc
or
jge
lock
cmp
xlat
test
stc
mov
cmpsl
mov
jb
mov
mov
roll
insl
popf
bound
fisttps
lret
sarl
outsb
fidivl
iret
imul
pop
add
inc
push
mov
mov
dec
xor
add
in
xor
jnp
stos
jae
pop
hlt
lea
jno
cmpsb
das
fbstp
sub
iret
jle
test
jb
xacquire
mulb
repz
nop
push
cmpsl
push
pop
lret
mov
call
jmp
add
outsl
mov
fstl
dec
xlat
xchg
mov
xor
hlt
push
mov
loope
fnstsw
xchg
push
xchg
lds
aaa
lret
cmp
js,pt
call
roll
loopne
repnz
jae
movsb
jp
out
mov
cli
nop
rcrb
add
shr
aam
jge
roll
in
out
jp
inc
xchg
cltd
int
sarl
adc
mov
fadds
repz
test
push
mov
pop
fbld
add
incb
push
stos
js
ja
add
pop
and
fcomi
cli
lea
and
js
xchg
mov
mov
cmp
pand
dec
sbb
sub
cmp
jno
stc
cs
loopne
jne
sub
dec
or
rcrb
movb
insl
out
dec
shlb
stos
mov
xchg
adc
inc
sub
inc
jle
jp
xchg
pop
imul
pop
test
fnstcw
pop
mov
or
in
push
je
mov
adc
jmp
sub
mov
pop
insl
in
mov
dec
jmp
xchg
daa
loope
inc
aas
jb
xchg
dec
stos
fstps
loope
sub
pop
sbb
add
inc
jno
or
scas
cmp
insb
pusha
cld
dec
fisubs
lock
aaa
pop
xchg
scas
mov
bnd
out
inc
lock
fisubl
or
pop
xchg
inc
fsubrs
subl
dec
out
imul
inc
cmpsb
ret
andb
pop
mov
mov
rorl
adc
sti
mov
fstps
inc
arpl
jo
and
aaa
aas
push
dec
mov
imul
add
xchg
iret
push
jmp
and
add
adc
mov
pop
xchg
sbb
xor
dec
rep
xor
mov
test
cmp
popa
add
push
and
xlat
pop
mov
fsubs
inc
dec
divl
bound
sbb
ret
in
push
pushf
mov
mov
or
mov
sbb
fsubrs
arpl
test
add
jae
daa
sub
mov
sbb
cmp
pop
mov
mov
enter
int
cli
aad
lods
stos
cwtl
arpl
popa
pop
es
jb
or
aam
adc
ret
ljmp
lahf
push
and
aaa
sub
adc
jp
jg
sahf
inc
ja
setp
stos
in
outsl
add
ds
xor
shld
push
push
jmp
jb
push
mov
pop
or
loope
mov
sbb
add
jno
mov
dec
xchg
andl
outsb
lea
andb
dec
jb
loopne
popa
xor
je
dec
repnz
loope
shl
stos
rol
push
fnsave
loope
movsl
repz
jns
adcb
and
xor
pop
scas
ljmp
xor
lret
adc
pop
fistl
sbb
sbb
inc
xchg
mov
fdiv
push
in
fnstcw
sub
jae
out
cltd
test
dec
mov
push
ror
xor
sti
jge
xor
out
mov
push
sub
sbb
adc
dec
loop
in
iret
pop
insl
or
push
fnstcw
data16
xchg
sub
in
push
adc
lcall
pop
imull
pop
sbb
sub
and
mull
adc
or
adc
repnz
js
xor
nop
movl
or
scas
jmp
mov
sbb
mov
mov
imul
push
xor
add
or
sub
add
outsb
xor
loop
pop
jge
mov
fs
mov
call
adc
fnstsw
mov
pop
js
cld
inc
adc
fnstsw
mov
push
push
fldlg2
mov
xor
popf
or
call
dec
cld
mov
mov
xor
lods
dec
fsubl
mov
push
daa
scas
das
sub
dec
repz
mov
cmp
leave
popf
adc
or
cli
stos
xor
rolb
int
dec
push
movsb
mov
test
cmp
insb
test
shll
xor
add
mov
sbb
mov
adc
fucomip
in
xor
mov
movsl
push
sbb
fwait
adc
int3
inc
cmpb
pusha
pop
in
stos
loope
mov
inc
mov
and
test
xchg
mov
cmc
xor
call
jp
test
sub
mov
fwait
leave
lods
mov
scas
jne
gs
pop
rcrb
scas
or
data16
gs
push
ss
sub
test
inc
xchg
mov
cld
cld
adc
lahf
shlb
std
dec
lret
or
adc
and
mov
out
insl
cmp
push
dec
xor
lcall
lret
cwtl
sbb
cmc
out
icebp
cmpb
pop
xlat
sub
dec
std
addr16
insb
add
into
sub
push
sbb
and
jmp
mov
das
icebp
xchg
pop
or
inc
fdivs
lds
and
xchg
popa
cmpsb
lock
aaa
inc
dec
add
mov
dec
mov
inc
loopne
add
rclb
add
pop
mov
add
sbb
inc
mov
rol
push
inc
das
outsb
or
fs
cmp
int
cld
leave
or
ret
xlat
sarl
gs
adc
in
fstp
xor
mov
ds
addr16
jle
or
ds
mov
mov
leave
leave
dec
insl
xor
std
in
enter
push
es
outsb
arpl
sub
push
out
repz
das
test
repz
mov
add
mov
jbe
cmp
jl
fstpl
add
movsl
je
popa
pop
cmp
sarl
aad
jmp
pop
add
mov
sarl
mov
xor
ljmp
add
adc
out
adc
cltd
push
test
clc
addr16
xorb
jecxz
jmp
outsl
notl
jg
mov
ljmp
aaa
rol
mov
sbb
inc
mov
movsb
add
aad
pushf
mov
scas
adc
xchg
sbb
jl
adc
push
fnstenv
jo
add
test
jl
push
add
sahf
clc
repnz
push
lea
out
pop
push
sub
sbb
sub
sbb
divb
push
dec
loope
ljmp
inc
sahf
cli
leave
lcall
cmpsb
dec
jge
mov
jecxz
scas
insb
aaa
lea
mov
enter
and
push
mov
test
xchg
add
sahf
dec
lret
sub
repnz
cmc
adc
neg
mov
jl
bound
push
shlb
mov
ss
sub
add
adc
push
sub
addb
sub
push
mov
iret
xchg
push
movsb
or
fldcw
pushf
adc
cmc
data16
cmp
ret
jb
das
fs
dec
jae
popf
or
xor
pop
mov
and
xchg
jb
or
cltd
test
mov
test
pusha
imul
xchg
mov
xchg
push
lcall
xor
sub
xlat
jp
sti
ss
shlb
out
add
in
add
sahf
lods
dec
repz
mov
pop
mov
or
lock
cmpb
lods
sub
sbb
xchg
pop
lahf
imul
shll
test
iret
inc
adc
inc
mov
mov
addr16
push
xor
add
mov
sub
imul
inc
mov
xchg
adc
adc
stos
mov
xchg
inc
popa
cltd
mov
jns
add
pop
scas
sub
add
je
daa
inc
sarb
sbb
fldt
lret
lock
cld
push
movsb
fnstsw
ret
enter
fwait
jns
aaa
repnz
js
sbb
or
lcall
imul
xor
xchg
add
fistpl
mull
adc
sbb
jb
push
dec
nop
sub
sub
inc
cmpsb
ljmp
inc
arpl
lods
mull
xchg
jb
ficompl
push
jbe
ljmp
jnp
nop
into
pop
loopne
and
xchg
mov
push
and
enter
and
sbb
and
lea
lods
cmc
push
and
or
xchg
ljmp
dec
adc
mov
dec
movsb
jl
pop
and
mov
popf
mov
bound
inc
push
imul
das
lret
loopne
stos
call
out
jge
mov
jno
ja
or
mov
add
mov
and
and
cli
push
lret
push
cmp
sbb
movsl
mov
and
das
adc
cli
cwtl
xor
fmuls
mov
sub
sbb
iret
pusha
repz
ljmp
outsb
mov
out
add
inc
dec
push
lock
aad
aaa
push
mov
repz
inc
jo
mov
lock
pmaddwd
dec
add
xor
xchg
mov
je
imul
add
fisubrl
aam
xchg
push
xchg
stos
xchg
ret
in
lea
mov
or
lret
jecxz
cwtl
mov
jno
lea
xchg
jle
or
or
push
test
lods
movsb
addr16
loopne
xchg
sbb
mov
cmp
popf
loop
cltd
push
xacquire
arpl
dec
repz
push
lret
cmp
cmc
jo
dec
add
nop
mov
pop
fcmovne
mov
shlb
dec
pop
stos
jae
imul
orl
and
mov
int3
aas
adc
or
dec
jmp
loopne
cmpsb
addr16
dec
and
and
ficoms
inc
sahf
push
mov
push
and
adc
dec
dec
push
pop
xchg
ds
push
fildl
cmp
xchg
mov
jae
lods
pmullw
mov
addr16
int
sbb
movsb
pop
int3
enter
addr16
cmpl
aaa
cmpsl
push
jle
xchg
popa
push
out
fidivrl
xchg
mov
and
cld
inc
or
outsb
and
test
in
jl
ret
dec
mov
pop
js
insb
mov
xchg
jo
push
pop
xor
inc
add
aam
sahf
sub
xchg
loope
add
mov
push
aas
sub
push
outsb
jnp
frstor
mov
adc
push
mov
testb
into
inc
ret
push
mov
stos
push
xor
fldcw
inc
xchg
psrlw
jmp
std
loop
cltd
inc
inc
loope
mov
aam
rcrb
das
push
sbb
movsbl
jae
cmpb
scas
das
addl
cmp
rol
sbb
cmpsl
addb
adc
xor
jp
jo
sub
test
mov
mov
movsl
cwtl
inc
outsb
es
xchg
insb
int3
cltd
out
insl
sub
pop
stos
mov
enter
pop
xchg
ljmp
addl
mov
popa
jmp
pop
je
dec
jae
mulb
dec
cmp
es
loope
aam
add
fldenv
xor
imul
jne
adc
out
lds
aad
fwait
mov
nop
and
sub
xchg
dec
mov
mov
imul
addb
lods
ss
ds
cltd
mov
test
cs
pop
lods
mov
bnd
xor
add
pop
repnz
cmc
movsl
jp
push
js
mov
fs
inc
fwait
mov
bound
pop
test
mov
in
cmc
leave
xor
cmp
std
or
push
xchg
and
pushf
stos
add
idiv
mov
mov
mov
push
cwtl
jl
ret
mov
add
push
pop
push
sbb
cmpsb
sbb
xor
cltd
xchg
push
js
jg
cld
pop
mov
inc
xchg
sub
pop
lcall
pusha
neg
add
push
pop
lret
or
clc
push
lods
je
push
imul
nopl
lahf
popf
push
mov
xor
and
cmp
popa
icebp
cltd
mov
imul
shlb
add
or
sbb
and
shll
pop
push
inc
ss
push
push
lods
pop
out
jno
mov
sbb
dec
inc
adc
popf
jno
test
mov
and
int
cbtw
inc
dec
mov
adc
sbb
push
insl
je
lds
adc
mov
call
inc
and
cmp
mov
xchg
xor
or
in
pop
push
push
jp
cmc
iret
sub
cwtl
jbe
stos
mov
pop
out
jg
lods
sub
repnz
mov
xlat
nop
sbb
idivl
push
push
sarl
in
xchg
adc
cld
jle
pop
ljmp
or
stos
push
push
pushf
push
sbb
cmc
in
arpl
mov
push
das
pop
aad
and
shll
xor
gs
faddl
pop
pop
xor
sub
cmp
cwtl
jb
imul
fsts
leave
or
jnp
or
pop
or
roll
lods
jle
stc
sub
out
jmp
fsubrs
sub
mov
cmp
jne
mov
sbb
xchg
pop
fnstsw
sarb
in
in
pushf
fmul
or
xor
aad
cmc
add
mov
or
in
adc
mov
mov
test
orb
jns
fldenv
mov
pop
out
add
fdivr
repz
adc
mov
imul
sbb
adc
dec
fcoml
pop
aaa
clc
insb
sub
xchg
int
mov
call
pop
xor
adc
push
mov
inc
rolb
xchg
and
sub
xchg
cmpsl
inc
xorl
push
icebp
jge
cmc
pop
hlt
sbb
int3
out
insl
adc
cmp
adc
xor
adc
mov
popa
in
sub
pop
fbld
out
lcall
xchg
fimull
loope
add
lret
push
push
bound
jnp
push
rcrl
sub
mov
or
icebp
or
stos
lcall
ds
xchg
cmp
shrl
jmp
loopne
test
imul
das
aad
inc
test
popf
pop
out
shlb
stos
inc
sub
pop
xchg
xchg
arpl
mov
mov
daa
cmp
cmp
cmc
mov
scas
xchg
jecxz
xor
inc
popa
or
xor
insl
das
iret
fbstp
lret
jecxz
loope
int
in
mov
mov
inc
addb
clc
push
jbe
and
dec
imul
adc
popa
mov
sub
daa
hlt
push
in
fisubs
adc
out
mov
insl
lds
adc
sbb
xor
data16
jg
jo
call
imul
pushf
popa
and
jg
sbb
sub
rcl
movl
enter
adc
mov
rol
pusha
ret
mov
or
push
mov
dec
imulb
add
lods
lcall
or
cmp
mov
inc
and
dec
incb
mov
push
inc
lods
inc
movsb
push
arpl
or
xor
adc
adcb
in
mov
pop
adc
addb
sahf
inc
in
xor
xchg
jge
test
and
xchg
clc
mov
fs
mov
add
stos
dec
xchg
push
jmp
ljmp
enter
aas
xor
inc
xchg
insb
mov
das
das
lea
and
repnz
mov
js
in
rcl
inc
inc
lea
xor
scas
push
movsl
out
xchg
out
popf
push
mov
jp
lea
jns
push
jp
lret
xchg
mov
testb
adc
int
nop
jecxz
pushf
mov
lds
sub
imul
cmp
fildll
in
or
movsb
je
lcall
push
ffree
test
pop
adc
sub
mov
fidivs
inc
xor
cmpsl
adc
mov
call
mov
push
and
xchg
dec
stos
daa
push
test
negb
mov
shrb
hlt
rcrl
rclb
add
movsb
mov
insl
in
push
aam
jbe
or
xorl
pop
ror
jb
xchg
stos
jb
mov
inc
jmp
sub
aaa
mov
enter
lds
mov
sub
pushf
pushl
adc
adc
inc
dec
push
adc
and
or
dec
movsl
push
adc
sbb
addr16
test
xchg
mov
cmpsb
xchg
cmc
es
sahf
mov
mov
lahf
imul
cmpsb
jmp
xor
shlb
and
sub
sbb
subl
dec
out
sbb
adc
or
popa
fisubl
mov
lahf
or
out
data16
js
mov
push
fdivrs
fdivrs
dec
jnp
add
push
out
inc
push
mov
cli
rcrb
push
xorb
add
sbb
movsl
push
adc
push
pop
out
arpl
jl
sub
adc
xor
sub
scas
lret
cmc
clc
push
push
add
loopne
xor
mov
mov
sarl
add
mov
add
dec
add
jb
fwait
enter
adc
xchg
imull
adc
popl
sarb
inc
sbb
outsl
mov
xchg
pusha
pop
ret
les
add
mov
xchg
loop
push
imul
add
pop
rcrl
aam
daa
or
rorl
cltd
enter
jle
sub
cmp
or
xlat
jns
ret
adc
or
movsl
loope
xchg
out
not
mov
xchg
insl
mov
dec
nop
xchg
repnz
mov
repz
and
mov
xchg
adc
je
icebp
lock
mov
fnstsw
fcoms
inc
mov
lds
movsb
enter
ljmp
fstps
xchg
stos
or
sbb
fwait
push
clc
cmp
add
rolw
mov
jno
pop
jnp
adc
mov
pop
sub
scas
js
popa
in
push
mov
mov
add
test
jnp
test
test
xchg
js
jge,pn
jne
inc
scas
dec
cli
xchg
shrl
jle
push
cmc
xchg
mov
je
in
or
fstpt
push
inc
repz
xor
imul
es
mov
out
jns
adc
mov
lea
test
jle
out
mov
sahf
sbb
aam
sarb
test
cwtl
add
enter
dec
dec
mov
inc
inc
or
and
je
mov
and
cmp
outsb
or
out
cltd
mov
idivb
decb
into
insl
jp
bound
jecxz
bnd
into
imul
pop
pop
push
fildl
das
lcall
rcrb
and
inc
mov
xor
lock
lods
sub
add
setl
cwtl
adc
and
push
mulb
idivl
nop
ret
or
ret
cwtl
adc
movsb
mov
ljmp
pushaw
leave
push
ja
inc
pop
sbbl
int3
daa
lock
xor
call
jae
movsb
sahf
cmp
pop
scas
add
fs
repz
repnz
neg
sub
or
aas
aam
les
js
aam
push
into
or
push
jnp
outsl
xchg
cs
xchg
mov
js
dec
jnp
sar
mov
dec
mov
sub
mov
xchg
mov
jmp
and
jnp
add
push
insl
ret
test
cmp
nop
into
data16
fcoml
lds
stos
adc
out
sub
inc
mov
in
in
xchg
fcompl
inc
mov
data16
in
mov
nop
rolb
fnsaves
and
adc
loop
jge
popf
addr16
lods
orps
pop
jge
cmp
mov
test
or
test
dec
xor
imul
push
addr16
cmpsl
pop
mov
shr
pop
popa
jmp
les
sub
xor
xor
scas
jge
push
les
or
frstor
mov
push
xor
out
leave
xchg
imul
fcomi
mov
fld
mov
push
mov
cmp
lods
push
imul
fsubs
insl
sub
ret
cli
out
inc
dec
xor
inc
push
dec
fwait
decb
mov
hlt
pop
mov
push
mov
mov
shl
jle
pop
xchg
std
jo
mov
bound
aas
sbb
shr
jmp
ja
test
sbb
pop
adc
jnp
push
add
mov
push
push
je
les
aaa
mov
adc
sub
fidivrs
in
int
add
xor
hlt
push
sbb
mov
lret
int
xchg
in
ret
into
sahf
pop
mov
jbe
mov
mov
jb
stos
mov
cmp
jp
xchg
inc
daa
call
aam
pop
jmp
pop
leave
cltd
int
enter
inc
mov
loopne
mov
inc
clc
sbb
adc
cwtl
cmp
mov
cmp
out
shll
cmp
jecxz
push
and
add
jge
scas
flds
and
mov
sbb
aam
add
or
dec
in
inc
and
mov
pop
ds
stos
loop
jae
pop
cmp
negb
cmc
pop
roll
lahf
shrb
in
add
iret
ror
shl
mov
jmp
push
xchg
add
mov
jnp
insl
es
ret
loop
in
iret
lea
or
fsubrp
add
add
sbb
insl
mov
daa
push
call
aad
sbb
call
or
lods
add
popa
rcrl
je
inc
stc
ss
out
subl
pop
jbe
fidivrl
mov
call
push
dec
push
cmp
cli
test
cwtl
jmp
xchg
repz
rcrb
ds
pusha
addr16
repz
mov
or
decl
dec
and
push
adc
mov
sub
mov
insl
roll
pop
sahf
jne
xor
shll
call
aad
or
loop
stc
test
and
mov
push
jle
test
leave
sbb
fst
push
movsb
sbb
xchg
icebp
cli
and
int
and
dec
mov
jmp
enter
in
and
into
scas
in
cwtl
in
stos
nop
xorb
mov
mov
mov
push
mov
jle
xor
push
sub
repz
nop
dec
popl
mov
or
into
loopne
js
out
in
adc
sbb
mov
ljmp
adc
adc
inc
or
mov
and
jg
mov
dec
jp
cmp
sbb
mulb
test
lret
in
pusha
mov
cmpsb
push
outsb
adc
lret
in
jne
in
mov
cld
xchg
lods
movsl
add
outsb
in
lcall
or
cs
arpl
mov
jns
sbb
out
cli
in
lahf
and
test
push
cmp
push
leave
mov
mov
jnp
testl
cwtl
aaa
mov
lock
push
and
lock
pop
pop
dec
fisttpl
sbb
test
push
out
and
out
mov
cmp
and
jg
push
nop
fistpll
dec
mov
sbb
cmp
fs
ret
xchg
sbb
sbb
or
aam
fmul
adc
movsb
mov
dec
stos
xor
shlb
movq
sbb
mov
ljmp
clc
shlb
pushf
lock
xchg
xor
and
sub
adc
mov
repnz
scas
enter
sub
jecxz
adc
je
dec
iret
add
imul
cmp
mov
cmp
imul
decl
mov
jo
mov
xchg
fisubl
add
mov
push
fidivrl
imul
sub
push
cld
addr16
scas
aad
mov
ds
sbb
addb
out
sbb
mov
loopne
fdivrl
mov
sbb
pushf
iret
repnz
cmpsl
sub
xor
sbb
jmp
push
pop
stos
cmp
adc
mov
popa
or
mov
and
into
lcall
les
or
adc
pop
jae
xchg
outsb
call
cmpsl
or
mov
and
cli
lock
jp
inc
jecxz
push
loop
cld
cmp
pop
arpl
pop
std
cmp
jbe
hlt
sahf
cltd
repz
push
dec
sbb
add
movsb
push
adc
divl
pushf
xchg
movsb
insl
fs
notl
mov
xchg
push
mov
mov
mov
mov
mov
mov
cmc
in
lahf
xchg
cmp
cmp
sub
jle
add
rcll
movsl
das
outsl
filds
int
mov
arpl
es
ljmp
insb
dec
scas
dec
mov
cmc
inc
inc
mov
lods
or
outsl
adc
inc
push
jle
ljmp
div
test
mov
adc
insb
mov
int3
pop
jns
icebp
dec
gs
mov
mov
addl
jle
daa
pop
push
pop
mov
jg
clc
dec
lods
out
sub
outsl
aas
sbb
adc
push
iret
imul
push
pop
rorl
jno
jmp
sahf
push
jle
mov
push
es
mov
xchg
test
jb
and
adc
add
or
push
dec
sub
xchg
cltd
pop
shll
fnstenv
je
ficoml
lods
mov
mov
in
jno
push
pop
rcll
cmp
shlb
mov
ret
dec
int3
adc
add
rolb
outsl
lcall
lret
inc
daa
dec
sbb
popa
mov
fwait
xor
stos
dec
mov
fsubrl
jbe
orl
and
inc
in
jge
fs
sbb
pop
stos
movsb
popf
cmp
lret
scas
pop
cmp
fmul
cs
out
insl
fsubrp
jns
pop
mov
cmp
jp
rcl
aaa
jmp
fstl
and
pop
out
add
mov
lock
into
dec
outsb
les
ss
mov
fimull
movsl
pop
jo
xchg
int
inc
jmp
les
sub
and
jnp
dec
out
cmc
adc
lea
cmpsb
xchg
lcall
inc
inc
les
or
sub
sarl
mov
ja
cld
adc
cmc
sub
lret
ret
push
xchg
imul
dec
fistpl
nop
andl
call
mov
scas
cwtl
jbe
jecxz
repnz
pop
flds
cmp
lods
cli
stos
inc
mulb
dec
xlat
cmp
push
push
pusha
add
add
sub
es
sbbl
jnp
dec
sbb
lds
xor
dec
fisubs
mov
cmpsb
sarb
adc
inc
mov
mov
sbb
xor
xchg
sbb
sub
in
fiaddl
daa
mov
inc
or
movsb
sbb
xor
in
test
xchg
mov
sbbl
mov
cmp
in
js
repnz
test
dec
fcomps
cmp
fs
cwtl
xor
je
iret
cmp
mov
fidivs
mov
mov
bnd
movsb
lea
loop
xchg
and
addr16
inc
daa
add
xchg
into
jp
mov
pop
adc
adc
xchg
xchg
adc
jne
dec
pushl
jmp
lock
in
xchg
inc
add
lods
int3
aam
mov
push
and
hlt
movsb
mov
inc
aam
adc
test
mov
test
fs
mov
or
pop
mov
dec
or
push
fistps
push
cmp
decb
insl
fsubs
ret
jae
out
push
push
jo
jg
adc
add
jg
shrl
mov
jecxz
subl
push
mov
dec
push
or
inc
adc
xor
mov
or
jb
pop
add
lea
mov
mov
stos
sub
loope
add
push
fists
xchg
call
push
lods
sbb
pop
push
adc
sbb
mov
inc
dec
movsb
pop
mov
fcmovnbe
xchg
pop
pop
mov
xor
pop
shll
mov
lock
adc
mov
pop
sbb
je
xor
inc
addr16
dec
mov
rorb
test
push
arpl
lret
shll
rcll
mov
push
push
stos
loopne
mov
testb
rcrb
and
or
addr16
xchg
xchg
mov
xor
ljmp
push
mov
jnp
adc
jbe
das
inc
das
inc
pop
jmp
lahf
rorb
xor
push
push
cmp
dec
test
rcr
loopne
add
mov
xlat
addb
test
sbb
cmp
nop
ret
lahf
dec
sub
orb
fistpl
hlt
in
subl
lds
lds
das
insb
int3
aad
aas
loopne
and
dec
ret
loopne
ror
ds
addr16
in
or
mov
sub
mov
dec
pop
push
mov
fidivl
pop
mov
fistl
aad
add
pop
mov
cmp
or
aaa
aaa
hlt
lea
jbe
lods
xchg
movsb
sub
inc
adc
dec
lds
jmp
cmp
wbinvd
imull
pop
negb
ret
cmp
faddl
fcoml
in
daa
gs
xchg
push
arpl
dec
pop
mov
enter
cs
iret
scas
popf
inc
mov
das
pop
xor
jnp
imul
xlat
push
jns
inc
pop
and
mov
fs
fbstp
loop
jmp
iret
sarb
add
adc
mov
mov
ss
mov
cltd
sub
inc
nop
jbe
incl
stos
or
mov
int
and
xchg
fbld
nop
shlb
adc
sub
aad
cwtl
test
push
mov
rorb
pop
xor
add
sarb
xchg
xchg
decl
ds
sub
cld
fdivs
cli
fadds
repnz
inc
icebp
out
das
lcall
test
mov
cs
sarb
jne
mov
dec
ficoml
test
movsl
lret
frstor
mov
scas
sarl
mov
mov
ficoms
cmp
and
or
sbb
adc
cs
jae
jp
xor
mov
fcmovbe
popf
adc
mov
push
inc
sub
repz
outsb
or
scas
icebp
dec
mov
push
jbe
clc
or
push
movsb
xchg
dec
jl
push
adc
pop
adc
xorl
aaa
shll
adc
sub
scas
daa
pop
pop
sub
jns
dec
or
sbb
jbe
mov
mov
ss
mov
pusha
xor
imul
add
lret
insb
lret
jle
cmp
push
fisubrs
mov
add
push
cs
mov
mov
shrl
fmull
adc
stos
fwait
push
sub
es
les
sub
fwait
lahf
popa
cmp
mov
jle
adcl
mov
push
jmp
or
test
pop
mov
movsl
sbb
sti
jne
xchg
and
in
fbstp
add
bound
movsl
lret
mov
imul
js
ja
lret
xchg
push
aad
in
sahf
mov
lods
int
and
stos
jno
pop
push
push
sub
dec
mov
daa
jle
sub
lock
sbb
int
sbb
xchg
movsl
hlt
stos
jge
fld
das
arpl
aad
pop
cmc
pop
testl
les
aaa
ret
in
cmp
popf
push
pop
jmp
fsub
xor
sub
pop
in
setne
inc
ss
shr
xchg
lds
and
clc
cli
test
ret
stc
fs
bnd
cmp
adc
pop
test
xchg
cmp
in
loopne
adc
insb
push
adc
sub
push
and
loope
outsl
popf
lds
inc
shrb
fcmovne
lea
cmpsl
sbbb
lret
movsb
fucomi
pop
sbb
repnz
idivl
movsb
fwait
outsl
bound
lods
xchg
lret
sbb
add
jle
arpl
imul
cmp
mov
mov
insb
or
push
cmp
pop
xchg
inc
into
popf
add
push
mov
mov
xor
fadds
icebp
fldcw
repnz
addr16
xchg
js
in
cmp
rcll
sub
or
mov
and
jmp
imull
inc
cmp
mov
flds
xor
out
mov
mov
add
fnsave
dec
add
jmp
mov
hlt
xchg
inc
jno
jp
xchg
mov
and
pushf
dec
std
xchg
mov
push
das
mov
enter
xor
stos
pop
and
aaa
call
xor
add
rcrb
push
pop
popa
cwtl
mov
xor
in
pop
mov
movsb
xchg
dec
xchg
out
adc
test
sbb
xorl
or
sub
sub
outsl
jne
push
clc
mov
jp
fs
or
mov
push
in
xlat
rcr
add
mov
lods
jmp
mov
adcb
push
test
rorl
test
mov
inc
loopne
push
shl
pop
addl
dec
sbb
push
push
mov
mov
cmc
mov
cmpsl
jae
popa
mov
in
iret
fmull
lahf
lds
add
dec
shrb
inc
mov
mov
ret
les
xchg
sub
daa
mov
jb
add
movsb
ds
lcall
inc
dec
leave
cwtl
dec
idiv
outsl
imul
popa
pop
ds
icebp
cmp
lods
dec
dec
scas
xor
sub
xchg
xchg
inc
hlt
cbtw
into
xor
sub
lret
pop
scas
dec
add
sbb
mov
outsl
in
sub
out
xchg
es
inc
lret
jg
mov
adc
in
inc
xchg
stos
aas
icebp
add
test
call
call
push
cmc
xchg
cmpsb
push
in
jle
and
shlb
test
outsb
aas
jns
hlt
test
repz
mov
insl
mov
movsb
fsubl
fwait
jnp
loop
inc
mov
xchg
mov
shl
inc
icebp
dec
sub
jecxz
pop
aaa
jmp
ds
inc
lds
pop
pushf
xor
fistpl
movsl
cmp
mov
aas
pushf
xor
push
xor
inc
mov
mov
mov
mov
adc
or
inc
jns
and
jbe
xchg
mov
mov
out
push
or
out
push
js
out
sub
scas
dec
pop
cli
push
xor
dec
inc
gs
rcr
enter
js
push
mov
push
mov
lods
xchg
and
lcall
mov
mov
les
push
inc
push
mov
outsl
add
ja
pusha
lods
lret
js
dec
ss
test
orb
xchg
repnz
cmp
mov
sbb
in
mov
mov
jne
lcall
jl
jge
mov
rol
arpl
lock
jle
xor
and
call
inc
add
in
fnsave
cltd
out
jb
mov
xor
xchg
in
add
movsb
cwtl
mov
imul
sbbl
scas
push
cmp
inc
push
aam
repz
cmp
pop
or
mov
mov
push
inc
push
addr16
bound
outsl
push
frstor
lods
and
shl
ja
in
dec
cs
and
jl
test
push
pop
ret
pop
sahf
lds
mov
stc
or
mov
add
arpl
rorb
add
popf
mov
repnz
mov
mov
sub
int3
jne
jo
filds
xchg
mov
test
or
adc
icebp
or
xorl
lcall
enter
jne
fsubrl
in
sbb
std
rcrl
and
cmpsl
or
mov
mov
fs
mov
out
fmul
adc
pop
jno
scas
sub
out
add
faddl
mov
push
xor
add
movsl
fs
sti
icebp
pushf
jl
cmp
movb
mov
mov
xlat
cwtl
sarl
ficoms
jae
incb
mov
inc
push
push
add
pop
and
addr16
dec
or
cld
inc
push
xchg
test
sbb
sub
lret
and
mov
sub
pop
movsb
mov
xchg
mov
lahf
dec
inc
cmc
mov
adc
jecxz
out
in
popf
lret
dec
decb
repnz
fbld
fnstenv
imul
les
xor
fadds
inc
sub
jbe
jge
fcmovne
xor
clc
in
xchg
add
scas
add
nop
jmp
or
test
js
push
bound
and
in
gs
mov
idivb
cwtl
out
dec
pusha
gs
sub
popf
push
fabs
stc
push
gs
mov
jecxz
popa
mov
outsl
sbb
imul
sub
mov
pop
xchg
test
into
cmp
call
or
cld
and
jne
call
push
jge
out
je
or
enter
aas
mov
iret
mov
xchg
sub
mov
flds
or
jne
jne
addr16
testb
pop
inc
insb
jmp
push
xor
fnstcw
ja
add
xor
fldl2e
lods
push
jns
lcall
xchg
dec
lock
adc
pop
into
jns
bound
add
push
adc
outsb
sub
cmc
mov
xor
xlat
jae
xor
xchg
pushl
cmp
jne
cmp
push
and
test
adc
and
jo
cwtl
lret
xchg
ljmp
push
pushf
icebp
lea
cmp
push
imul
insl
push
cli
adc
ret
push
or
fxch
pop
or
dec
sbb
mov
cs
aam
dec
sbb
xor
out
sbb
loopne
mov
jnp
mov
push
rcr
push
xchg
imul
push
insb
adc
pop
sbb
out
cmc
inc
jge
shll
lea
js
add
arpl
arpl
dec
mov
xchg
adc
and
xchg
xor
sbb
fdiv
adc
inc
adc
sbb
add
mov
bound
xchg
xlat
sbb
xorl
inc
fcmovnb
push
mov
sahf
cmp
fcom
int
cmp
shll
rclb
das
aas
lret
pop
xlat
lret
fimuls
in
adc
insl
orb
sub
sub
pop
jle
push
lcall
test
ja
pop
cmp
int3
stos
jecxz
adc
mov
pop
lods
push
or
js
in
mov
and
lret
lcall
pop
popf
xor
jecxz
push
mov
mov
add
test
and
ss
xor
mov
out
fstl
push
cltd
xor
les
rcrl
arpl
cmp
sarb
xchg
or
fnsave
lret
cwtl
adc
dec
addr16
sbb
out
mov
out
xor
jo
pop
popf
scas
scas
daa
decl
cmpsl
stos
sub
lcall
xchg
xchg
insl
ljmp
pop
mov
scas
cmp
outsl
sub
sbb
call
clc
stos
insl
sarb
lods
jecxz
lds
cwtl
loopne
loopne
ror
mov
pushl
inc
sahf
or
mulb
xchg
dec
inc
adc
or
sahf
or
push
add
leave
mov
cmpsl
add
push
mov
movsb
sub
xchg
mov
xchg
mov
and
imul
insl
or
je
test
es
cli
out
jmp
fisttpl
in
es
outsb
loopne
gs
in
pop
and
out
pop
add
test
insb
out
arpl
imul
in
pop
mov
insb
icebp
mov
mov
mov
clc
lahf
repnz
pop
test
or
ficompl
clc
lods
inc
sub
je
ljmp
ret
aaa
cmp
pop
sub
jb
and
je
cmp
push
adc
cmp
push
pop
cmp
mov
bound
cmpsb
adc
test
add
or
fdivrl
mov
ret
jne
outsl
and
push
rorl
ss
sub
pop
jp
mov
aam
or
inc
xchg
fwait
sub
mov
in
inc
xchg
sub
nop
add
mov
push
jno
mov
cs
leave
lock
cld
test
jg
in
rcr
faddl
dec
add
popa
xchg
roll
push
lods
shl
cmpsl
cmp
int3
or
cmpsb
dec
push
mov
xor
mov
mov
cltd
sti
mov
repz
nop
mov
push
sub
insb
enter
jg
ret
adc
out
mov
and
movsl
add
adc
add
jl
xor
pop
cmp
pushf
incb
mov
add
inc
fisttpl
mov
das
adc
add
push
insb
pop
xacquire
sub
mov
inc
sbb
dec
dec
or
outsl
clc
pushf
sbb
and
cld
cmc
inc
pusha
inc
push
inc
lret
inc
and
mov
aad
scas
out
ljmp
and
aad
push
sar
dec
das
xor
mov
mov
pop
push
sub
aaa
add
movsl
add
fs
cwtl
hlt
push
jecxz
inc
pop
cmpsb
ret
cmc
add
cmpsb
sbb
cmp
add
push
sbb
jmp
out
leave
add
ficoml
inc
mov
jns
mov
test
leave
jmp
mov
jnp
insl
outsb
bound
mov
dec
inc
xchg
pusha
cmp
ds
push
loopne
test
iret
inc
add
push
dec
add
call
inc
jg
mov
push
push
fldenv
cmp
ret
sahf
ret
mov
ja
sbb
leave
stos
orl
jecxz
dec
jecxz
pop
les
jb
pop
xor
insl
std
dec
out
pop
sbb
aam
je
aas
push
mov
adc
add
sub
sbb
lret
jns
mov
cs
fisubrl
cmp
movsl
cmp
add
hlt
fcoml
or
nop
mov
mov
insb
cmp
icebp
sahf
push
icebp
cli
dec
mov
inc
in
push
aas
aam
xor
imul
movsb
iret
inc
sub
dec
int3
jne
lods
es
fstl
enter
iret
ljmp
lcall
dec
adcb
sub
add
jmp
in
xor
inc
push
and
pop
and
push
fistps
or
xor
jae
rcl
xchg
or
lods
adc
aam
pop
pop
mov
inc
add
sbb
aam
lds
fnstsw
mov
rorl
aas
idivb
and
fiadds
icebp
cmp
test
icebp
push
into
and
in
lods
push
adc
lods
outsl
inc
loope
inc
test
out
aas
dec
out
xlat
out
dec
xor
out
push
ja
jecxz
idivb
test
jns
jg
sbb
shrd
xchg
pop
cmp
lock
pop
lret
jnp
gs
sti
jnp
jnp
sub
mov
fs
sub
mov
fidivs
sub
incl
jae
xor
xor
gs
push
jbe
xchg
ret
fistps
inc
outsb
mov
iret
clc
shll
imul
subb
sub
cmp
push
out
cmpsb
js
dec
sbbl
cltd
jmp
mov
leave
jbe
clc
daa
push
xor
imul
and
jle
fildll
sub
push
push
mov
sbb
sbb
in
mov
xchg
aam
mov
mov
pop
int
rolb
and
arpl
vmovaps
mov
pop
xchg
movsb
aam
add
pop
adc
testb
push
and
or
sbb
shll
out
dec
adc
dec
out
int
mov
pushf
icebp
add
ja
lods
dec
insl
int
loop
cmp
aad
pop
std
scas
out
fcoml
sbbl
add
pop
mov
out
cmc
test
or
sbb
xchg
push
js
mov
inc
xor
sbb
fildll
lea
lock
aad
inc
pop
dec
add
jae
ljmp
mov
mov
mov
out
mov
jg
fistpl
sub
push
mov
jbe
sub
mov
pop
add
and
testl
fs
sub
push
loope
xlat
pop
dec
add
in
lock
cli
inc
lcall
stos
jno
int3
andb
icebp
insl
pop
add
adc
xor
in
xchg
push
lea
xchg
cmpb
push
jmp
pop
arpl
and
mov
mov
jle
adc
test
mov
dec
xor
or
add
ds
mov
xchg
mov
sbb
xchg
aaa
push
xor
push
mov
mov
and
out
jno,pn
hlt
mov
sub
outsl
pop
fwait
hlt
iret
mov
mov
test
shrl
in
fidivs
inc
adcb
sbbb
inc
hlt
bound
movsb
jge
out
in
fs
sahf
push
cmp
or
and
push
adc
ret
lret
std
subl
add
jnp
jmp
pop
sahf
lds
gs
pop
mov
lods
out
sub
lea
aam
pushf
mov
out
scas
mov
inc
cmpsl
in
add
fisubs
xor
ja
aam
je
dec
push
and
jmp
repz
insb
push
mov
jnp
push
xor
dec
lds
out
jl
dec
aam
stos
add
cmc
lock
cmpsl
push
in
or
sbb
pop
enter
inc
ret
xor
fadds
aam
seta
mov
pop
add
lea
lret
push
pop
scas
je
pop
mov
mov
inc
mov
leave
int3
pushf
ret
pop
cmp
int
or
or
pop
sbb
or
cli
into
jge
jecxz
xor
test
inc
fistpll
divl
sbb
and
push
cmc
pop
lds
iret
pshufw
push
dec
test
clc
adc
rcrb
sbb
mov
and
xchg
enter
sub
mov
test
or
adc
setbe
cmp
adcb
int3
loopne
xchg
fidivrs
inc
xchg
mov
jmp
hlt
pusha
xor
xchg
iretw
pop
cltd
cmp
xchg
enter
imul
pop
or
sbb
in
jns
fcomps
cmpsb
dec
xchg
push
sbb
addl
xchg
fwait
cmp
jmp
lret
xchg
scas
xchg
mov
fistpll
test
js
sbb
iret
sub
inc
dec
insl
ret
mov
in
repnz
or
sub
mov
incl
sbbl
xchg
cmp
js
into
stos
pop
enter
je
lcall
movsl
pop
mov
es
lds
jae
mov
cltd
pop
lret
std
leave
popa
pop
push
pusha
xchg
push
dec
mov
mov
ja
fwait
add
pusha
out
lock
jmp
dec
and
jns
rcll
in
ss
hlt
push
push
xchg
mov
or
daa
subl
adc
or
in
aaa
jno
xchg
and
mov
mov
fidivrs
aad
cli
cmpsl
jnp
jnp
jp
scas
repnz
xchg
mov
lds
and
mov
popa
lds
ret
sbb
xlat
scas
cli
xchg
adc
inc
inc
in
pop
lcall
imulb
cmpsb
incl
and
jecxz
mov
sbb
mulb
cwtl
test
jge
dec
out
and
test
sub
mov
dec
test
push
dec
jnp
test
sub
cmp
jmp
js
mov
adc
mov
pop
idivb
loope
pop
outsb
mov
iret
jno
add
push
lock
lret
mov
ja
push
jo
sub
sbb
mov
fcoml
pop
xor
lock
pop
test
mulb
lret
push
daa
pop
dec
mov
rep
adc
dec
cmp
jnp
ss
sub
cltd
sbb
mov
mov
mov
xchg
add
adc
push
jbe
adc
pop
sub
int3
inc
jae
adc
das
mov
das
jnp
push
add
or
mov
mov
mov
jns
mov
es
ss
cltd
jp
xchg
out
dec
popa
rolb
or
popa
nop
mov
sub
gs
ret
sub
pushf
fwait
cli
cmp
pop
popa
das
xor
push
sbb
es
pop
shll
ret
mov
mov
inc
mov
push
sbb
out
idivl
push
push
dec
cs
mov
pop
mov
cli
add
imul
shl
in
imul
pop
test
jecxz
or
or
or
pusha
mov
call
or
and
sarb
jbe
hlt
cli
jno
cmp
loopne
fwait
dec
cmp
mov
jecxz
xchg
test
sub
push
out
mov
arpl
jmp
add
add
cld
ljmp
and
sub
push
orl
clc
or
pop
mov
push
mov
push
sub
test
sbb
jb
push
jbe
rclb
flds
sub
dec
mov
rorb
mov
pushf
pop
xor
adc
mov
xchg
outsb
mov
xor
sbb
pop
adc
jno
out
pop
sbb
js
dec
push
pop
sahf
xor
sbb
dec
add
loopne
inc
jmp
mov
outsb
cmpsl
lock
pop
and
arpl
dec
push
sub
add
add
jecxz
mov
sbb
and
adc
adc
push
cwtl
dec
orl
cmc
mov
gs
jo
dec
mov
sarb
repz
push
repz
into
ret
lret
ds
pop
test
dec
push
fwait
sbb
inc
stos
fmulp
sbb
pop
sub
cmp
scas
adc
jl
insb
xchg
insb
mov
imul
push
clc
aad
pop
mov
sbb
mov
inc
repz
imul
out
xchg
lea
push
mov
dec
iret
mov
push
add
adcb
sbbl
cmp
dec
ljmp
xor
push
fcom
in
negb
xchg
adc
adc
data16
stc
stos
ja
xchg
divw
pop
bound
inc
sub
dec
sub
sbb
clc
mov
fmull
aaa
loopne
popf
pushf
mov
or
arpl
std
out
sbb
std
mov
lahf
fidivl
rorb
adc
popf
mov
outsl
sbb
fcompl
mov
inc
push
inc
fmull
xchg
pushf
push
cmp
cmp
rorb
or
pusha
mov
lahf
xchg
jb
xor
mov
lret
int3
loopne
or
in
adc
dec
int3
cmpsb
xor
sub
mov
inc
add
adc
adc
sahf
scas
insl
inc
inc
and
push
adc
push
sti
idivb
xor
xchg
add
ficomps
push
loope
popf
pop
aaa
xchg
and
mov
daa
and
mov
push
enter
adc
insl
stos
lock
sbb
and
or
pop
aam
xchg
and
in
cmpsb
xor
or
fbld
push
ljmp
ss
cmp
test
mov
stos
addr16
cmc
add
mov
lea
add
mov
testb
ja
mov
lock
sti
das
sbb
insb
xchg
sbb
in
jae
ret
jmp
adcb
fcomip
pop
lahf
inc
ljmp
pop
xor
and
ljmp
insl
lcall
ret
adc
mov
dec
mov
push
adc
into
shlb
xor
jns
mov
mov
fdivrl
aas
out
rorb
lcall
xor
lods
pop
push
xchg
adc
xor
dec
xchg
pop
adc
pop
fsts
jo
xor
outsb
and
and
shl
in
or
testb
pop
adc
loopne
mov
fwait
out
in
cmp
lods
in
ret
fwait
pop
jb
hlt
mov
add
xor
in
fsubrl
fadd
inc
xor
sub
sbb
or
jmp
jecxz
sub
adc
pop
lods
aas
mov
ret
das
xor
cwtl
jo
ret
cmp
sbb
loope
outsl
fcmovu
and
push
imul
out
in
push
iret
test
mov
jecxz
repnz
lods
jle
movsl
les
cmp
test
sarb
add
jge
pushf
or
inc
mov
xlat
test
mov
sbb
mov
rcll
scas
and
testb
clc
or
js
or
add
sbb
xor
and
iret
lret
fmull
hlt
push
jge
inc
lahf
xor
mov
mov
jmp
movsb
dec
scas
cmc
jbe
jp
sbb
inc
adc
into
push
lret
aam
cmp
lds
stos
clc
fwait
pop
xchg
jmp
loop
sub
out
daa
pop
adc
fbld
rcll
arpl
adc
clc
inc
dec
inc
add
repz
cmc
push
sbb
aam
sub
sub
or
or
sbb
xor
lods
or
cmp
je
cmp
dec
rorb
and
push
int3
xchg
and
aaa
sbb
shl
and
mov
xlat
pusha
shl
mov
repnz
push
mov
sub
std
add
ds
fisttpl
xchg
dec
dec
jmp
mov
jle
push
pop
cli
push
adc
fstpl
dec
push
add
hlt
shll
fndisi(8087
and
pop
lods
dec
popa
mov
das
inc
std
sub
push
negb
pop
mov
xor
add
pop
iret
dec
in
and
push
cld
mov
jl
in
sub
add
outsb
shrl
mov
mov
mov
or
fisubs
fbstp
into
das
out
pop
out
mov
int3
shll
and
jne
addr16
xchg
pop
jbe
adc
mov
fs
data16
cmc
in
ret
je
sbb
mov
imulb
push
ljmp
mov
and
pop
mov
out
xchg
pop
fmulp
dec
mov
inc
xchg
fxch
xchg
das
repnz
xor
xchg
fdivrl
xchg
cmpsl
ficoms
jmp
sub
add
dec
fiaddl
jb
push
inc
jno
jne
mov
es
cmpsb
sub
movsl
push
or
fstpl
sarb
inc
test
pop
push
lock
das
jecxz
adc
sbb
inc
inc
test
cmc
shrl
dec
xchg
and
nop
loopne
out
sub
inc
repnz
xchg
int3
jae
mov
mov
loope
outsb
adc
cli
loopne
jb
movsb
leave
mov
inc
ljmp
insb
pop
sbb
fnstenv
fiaddl
add
outsb
push
mov
fwait
icebp
lret
mov
and
xchg
dec
pop
add
je
into
repnz
sbb
inc
pop
pop
inc
scas
lock
xchg
and
sbb
iret
sub
sbbb
inc
pusha
loopne
lock
gs
xchg
adc
rorb
movsl
fwait
push
xchg
jmp
jle
jp
jnp
les
or
test
rol
test
push
ljmp
push
hlt
lcall
jl
jne
xchg
fldenv
and
add
adc
mov
movlps
enter
mov
stc
sub
jns
xchg
addl
inc
add
dec
mov
jl
mov
jle
add
xor
jnp
pop
mov
out
pxor
jo
out
aas
pushf
ret
out
test
xchg
mov
xchg
and
cmp
dec
insb
mov
outsb
lea
inc
ficompl
dec
inc
loop
imul
ljmp
adc
popa
stc
test
inc
aad
andl
es
pop
std
sub
in
and
jge
popf
xor
ss
dec
je
push
jge
sar
pop
jo
das
mov
adc
xchg
aas
jbe
repz
dec
mov
inc
mov
dec
mov
sub
jb
outsb
in
cwtl
sub
les
das
push
pop
mov
je
adc
xchg
stos
lock
xorb
pop
jb
jno
sbb
scas
jl
jmp
sub
xor
mov
and
add
mov
mov
dec
inc
les
out
pop
adc
xor
xor
cmp
and
lods
dec
push
or
adc
or
test
lret
sub
lods
sbb
movsb
adc
push
cmpsb
test
or
jb
pop
jl
shl
in
adc
int3
nop
cmc
sbb
lahf
push
xchg
push
cmp
adc
inc
aas
ficoms
push
insl
iret
scas
xor
and
mov
fildll
data16
mov
dec
and
es
gs
imull
arpl
xchg
inc
popf
adc
push
in
add
nop
add
inc
pop
mov
or
inc
add
enter
mov
ja
mov
ret
dec
js
xchg
shll
or
xchg
inc
jl
scas
add
jns
idivl
fimull
inc
imul
mov
cmp
mov
mov
cmp
jg
imul
mov
stos
mov
out
jl
lods
ss
les
or
and
add
bound
pop
je
roll
dec
leave
gs
loope
xor
out
mov
sti
or
jp
jnp
movq
mov
jnp
push
cli
hlt
inc
push
mov
adc
mov
ja
sub
dec
dec
in
add
adc
mov
dec
pop
lret
mov
imul
and
push
xor
scas
ja
mov
lahf
jae
pop
mov
sarl
aad
mov
out
and
mov
outsl
in
xchg
or
mov
gs
pusha
add
stos
fildl
loop
loopne
push
push
shrb
jmp
push
pop
cmp
stc
movsw
pop
into
inc
push
sub
or
cwtl
jb
hlt
ss
dec
mov
adc
cli
out
into
clc
dec
popa
stos
mov
push
out
mov
jbe
jge
dec
pop
fs
xor
addr16
jmp
aas
icebp
fcoml
cmp
sub
lods
xchg
dec
jno
inc
cmp
in
iret
cmp
das
leave
dec
xor
out
cltd
jb
mov
pop
popf
pop
fs
flds
pop
sbb
mov
iret
pop
ficoms
fwait
dec
movsb
cmp
xchg
fcoml
or
es
scas
cmpsl
push
xchg
push
enter
dec
jno
shll
jg
push
mov
repz
mov
mov
ret
rorl
jns
or
pop
inc
cmp
mov
mov
pop
xchg
jb
mov
push
jp
mov
shlb
sar
mov
dec
ljmp
fcmovb
cmc
cmpsb
stos
inc
shr
fstps
mov
popf
test
fwait
ja
mov
mov
cmp
mov
cmp
dec
mov
fstps
inc
mov
mov
leave
or
dec
sbb
fbld
data16
data16
out
popa
sbb
xchg
lret
shl
or
sub
jle
subl
out
dec
fsubrl
xchg
pop
in
out
xor
lock
je
in
xor
or
xor
repz
in
dec
js
jnp
sub
sbbl
jecxz
loope
icebp
in
outsl
mov
add
mov
jae
dec
adc
cmp
push
lock
adc
enter
jl
pop
jle
stc
jle
adc
sub
es
mov
ret
inc
add
and
pop
xchg
sbb
adc
bound
cmpsb
mov
inc
pop
orl
ret
addr16
mov
mov
cmpsb
loope
or
inc
jns
mov
jg
jo
xlat
dec
pop
mov
test
aad
insl
push
test
inc
pcmpeqb
mov
jmp
jns
cmpsl
push
or
sbb
mov
push
jbe
loope
mov
sbb
negl
cmc
and
movsl
jl
lahf
adc
out
fcoml
bound
rcll
lds
loope
fimull
decl
fcmovb
push
dec
lcall
cmc
or
imul
movsb
inc
adc
pop
jl
clc
or
cltd
repnz
mov
dec
jmp
sahf
pop
loopne
push
mov
mov
dec
sub
arpl
bnd
jns
cmc
and
add
adcb
out
and
lcall
fcompl
into
ret
pop
loop
pop
push
cltd
pop
adc
loope
mov
sti
mov
inc
fbstp
mov
and
inc
and
mov
pusha
xchg
les
in
fmull
into
pop
lds
xchg
enter
cld
xor
scas
incl
ja
push
das
adc
sub
mov
cmp
aam
or
cmp
dec
sub
repz
jnp
xchg
jno
pop
movsb
ret
aas
orb
cmp
test
pop
xchg
inc
loope
mov
and
add
test
and
pop
or
dec
shll
inc
add
mov
shrb
js
mov
xchg
sbb
cs
add
outsb
rcl
pop
cmp
sub
cmp
jmp
cmp
icebp
test
push
dec
lock
sub
jns
lods
xorb
dec
in
jmp
mov
sarb
loop
and
mov
and
jl
add
pop
repnz
mov
xor
mov
insl
mov
cs
insb
pop
outsb
lods
mov
and
jnp
sbb
ss
push
jb
inc
xchg
mov
insl
pop
xor
icebp
or
call
pop
mov
adc
push
or
fsubr
in
test
add
dec
pop
stc
push
aad
sbb
cmpsb
icebp
mov
mov
dec
shrl
in
cltd
stos
pop
or
xor
scas
xchg
cmp
popf
icebp
jae
cli
je
pop
xchg
outsb
or
adc
push
pop
gs
cmpsb
mov
fwait
add
inc
fs
testl
jle
imul
inc
push
enter
aad
cmpsb
mov
add
xlat
test
scas
mov
lahf
cli
dec
arpl
inc
js
clc
lods
jmp
jl
mov
mov
fwait
xchg
inc
iret
out
daa
insb
enter
and
xor
mov
pop
movsl
add
jno
sbb
or
gs
je
xor
mov
pop
sti
sbb
mov
xchg
nop
xchg
cmpsl
pop
push
cmp
test
aad
sub
cwtl
aas
xor
outsl
mov
or
dec
mov
addl
jmp
sbb
sbb
or
sub
or
cli
stc
jne
xchg
jmp
add
aas
add
es
jecxz
jg
pusha
fs
mov
push
adc
pop
stos
sub
scas
dec
gs
xchg
adc
shr
sub
popf
adc
cmc
jns
xchg
push
sub
addr16
sbb
je
lods
push
jnp
jbe
rcl
lods
inc
mov
lea
imul
dec
test
mov
jns
mov
int3
rcr
imul
adc
jbe
adcb
lret
push
stos
stc
popa
mov
inc
inc
leave
adc
data16
mov
or
in
jno
cmp
sahf
roll
mov
and
jns
scas
lret
scas
ljmp
fldt
sarl
scas
adc
popf
sbb
xor
insl
fidivs
lods
stos
out
or
jg
dec
push
shll
sbb
jo
call
int
add
jne
pop
sbb
fldt
shlb
mov
outsl
mov
jnp
pop
jmp
mov
sbb
test
or
adc
push
push
in
int3
clc
in
jmp
mov
mov
into
xor
adc
ja
decl
daa
out
xlat
ret
mov
add
rcll
adc
aad
lods
das
insb
adc
stos
push
inc
stos
sar
or
iret
mov
push
mov
cmpsl
lods
leave
mov
cmova
adcb
jnp
aad
mov
mov
fucomi
decl
adc
test
je
adc
push
or
adc
nop
jl
in
jnp
and
fiadds
addl
ret
stos
stc
nop
rcrl
outsl
popf
mov
rorb
dec
mov
or
aad
pop
into
cmp
mov
jp
add
fsubrl
push
inc
lret
das
add
mov
mov
fsubp
inc
xorb
sbbb
int3
pop
pop
data16
pop
cmpsl
and
lea
in
jo
mov
in
sbb
ret
shll
fldcw
jge
or
add
or
lods
and
push
es
cs
test
je
ret
rclb
addb
xlat
push
aad
mov
mov
je
inc
adc
fmull
xlat
pop
mov
cmpsb
and
pop
in
xchg
adc
push
xchg
cwtl
test
aas
inc
jno
ficompl
mov
mov
pop
mov
push
dec
icebp
pop
add
or
in
in
pop
out
std
and
sbbb
call
adc
loopne
mov
andb
ja
rorl
mov
test
hlt
gs
movsl
dec
fwait
cmp
testl
mov
and
inc
iret
call
adc
je
sbbb
pop
or
notb
xchg
lret
loopne
add
adc
jo
sub
ret
stc
inc
push
cmp
xchg
mov
stc
int3
test
push
lcall
mov
lret
or
rcrb
jbe
je
mov
push
sub
dec
sub
mov
mov
neg
js
xchg
shlb
push
cwtl
push
gs
add
stc
lock
jge
in
xor
aad
lret
sbb
mov
xchg
inc
push
fs
sahf
mov
and
cmp
in
mov
cs
sbb
push
dec
cwtl
xchg
cmpsl
mov
scas
adc
pop
push
inc
icebp
aam
pop
mov
xor
fcoms
pop
bound
addps
clc
jo
out
cmp
jp
add
rorb
out
cmpsl
popf
adc
inc
loopne
int3
shlb
dec
jae
jmp
mov
or
push
and
aaa
ljmp
xor
jno
push
mov
adc
or
jge
adc
mov
ret
outsb
iret
gs
popa
stos
pop
jp
sub
mov
xor
mov
add
inc
subw
test
jge
jmp
jge
xchg
ja
inc
out
mov
jle
mov
out
cmp
pop
and
add
jo
mov
cli
hlt
push
popf
ss
xor
insb
sbb
or
jecxz
adc
imul
inc
mov
repnz
shlb
pop
imul
and
popa
pushf
push
out
jnp
idivb
scas
sub
or
adc
mov
mov
add
movsl
cmpsl
insb
mov
adcb
imul
stos
aad
scas
lea
ljmp
sti
out
cmp
jle
lret
push
xor
aas
lret
mov
lea
jmp
and
rcll
enter
adcl
leave
mov
lahf
fstpt
stos
out
in
gs
enter
pop
push
cmp
mov
rcl
outsb
cmp
push
loopne
xor
xor
push
xor
scas
ljmp
fstpt
push
in
int
mov
mov
cmpsb
inc
imul
fs
bound
insl
gs
push
pop
cmc
shrl
in
popa
out
stos
adc
push
cmp
push
enter
dec
mov
dec
in
add
cltd
push
push
icebp
ja
cmp
aaa
ds
sub
lock
daa
jl
mov
shrl
and
fs
arpl
xor
test
pop
fwait
or
and
cld
leave
imul
mov
mov
or
lods
mov
mov
ret
mov
flds
fcomp
jmp
or
scas
gs
sub
lcall
xchg
mov
popf
and
lahf
inc
ret
imul
mov
push
mov
inc
lods
inc
std
pop
roll
push
je
jnp
ds
xchg
adc
push
pop
daa
in
sub
loopne
dec
rcl
rol
mov
movsl
mov
cmp
push
add
rcll
xchg
jmp
push
pop
push
mov
jno
arpl
mov
mov
es
push
in
xor
adc
mov
add
cs
addl
pop
inc
js
sbb
push
out
inc
movsl
pop
sahf
mov
imul
cld
adc
pushf
inc
sub
repnz
leave
adc
cwtl
sub
push
loope
dec
jno
hlt
aaa
mov
mov
or
mov
test
lock
xor
push
or
add
xchg
in
insb
lea
mov
cmp
movsl
pop
dec
adc
aaa
or
orl
lock
xchg
cwtl
scas
jmp
stos
adc
jecxz
jns
jno
mov
stos
enter
add
cmpsb
fstpl
ret
mov
rcl
push
fnsave
jg
and
jg
dec
cli
push
and
and
lcall
adc
xor
pop
add
mov
outsb
and
cmp
out
inc
pop
cmp
loop
mov
push
mov
inc
or
sbb
mov
ret
hlt
add
push
pop
pusha
stos
sbb
sub
aam
jns
sbb
sbb
mov
leave
cmp
inc
imul
aad
xchg
and
test
push
cltd
cmp
inc
aam
adc
test
mov
sub
repnz
xor
push
fcmovu
and
cli
mov
adc
cmp
adc
pop
mov
and
jbe
push
add
rcrl
pop
shll
adc
cld
jbe
adc
movb
test
arpl
add
jp
sbb
ret
or
xlat
mov
jge
dec
jg
xchg
arpl
ds
or
iret
and
push
outsl
addr16
push
mov
outsl
cmpsb
lods
sbb
jb
and
repz
gs
and
add
mov
in
xchg
sbb
pop
dec
sbb
adc
and
push
imul
pop
movsl
fstl
mov
outsb
mov
lods
popa
or
aam
mov
and
cs
xchg
ja
push
pop
lahf
push
mov
cmp
fwait
js
lret
xchg
xchg
dec
push
adc
fsubrl
and
jnp
arpl
dec
fldl
sbb
pop
inc
mov
stos
mov
mov
pop
js
xchg
ret
dec
add
mov
cmp
push
shlb
stc
adc
mov
inc
loope
sbb
pop
movsl
repz
cmp
jo
fnsave
jmp
sbb
js
sbb
imul
push
xchg
addr16
jbe
and
xor
mov
dec
mov
fisubrs
push
loop
mov
mov
clc
icebp
jge
scas
adc
repnz
xchg
rcr
int
lret
jg
push
inc
clc
mov
xchg
daa
movsb
cmpsl
inc
mov
int
add
xor
int
ljmp
push
clc
scas
ficoms
jns
and
sbb
out
jnp
stos
xchg
fsts
aad
push
add
ret
pop
inc
pusha
mov
inc
xchg
testb
cmc
gs
dec
cs
push
and
mov
jecxz
in
out
cmp
jecxz
pop
leave
xchg
repz
sub
add
xor
jp
arpl
sbb
addr16
bound
xor
add
mov
pop
fwait
cld
das
add
lods
xchg
xor
xor
icebp
inc
jns
add
aam
pop
pop
jp
sub
xchg
dec
cltd
or
lahf
or
mov
pop
les
test
inc
push
cli
push
in
inc
lods
insl
mov
stos
or
mov
rcll
or
sub
xor
inc
sbb
and
xor
pop
sub
dec
ret
arpl
and
out
es
xor
jecxz
or
mov
stos
mov
inc
pop
and
mov
and
fiaddl
cwtl
and
push
inc
ret
into
mov
cmc
pushf
shll
cmpl
jb
rorb
sub
icebp
jb
aam
pop
fimuls
movsb
out
jno
mov
imull
aam
xchg
sbbb
xchg
ss
xchg
sbb
sbb
and
inc
les
nop
in
mov
xchg
lock
fbstp
rcrb
dec
xor
or
xchg
cs
push
daa
test
cmp
mov
rclb
jne
push
div
dec
icebp
dec
outsl
mov
stos
rclb
mov
mov
xchg
outsb
cmp
push
or
ret
es
xchg
dec
adc
and
cmp
mov
jmp
fcomp
es
sahf
pop
push
dec
add
mov
aad
iret
push
mov
mov
jp
pop
cwtl
push
cmp
pop
addr16
xorb
jp
leave
ret
or
xor
loope
imul
out
rolb
dec
sub
pop
subl
adc
lods
dec
fldenv
cwtl
mov
out
xor
mov
subb
mov
ffree
sbb
jge
xchg
dec
cmp
add
je
mov
loopne
xchg
movsl
mov
xor
out
sub
inc
dec
call
inc
in
out
shll
mov
iret
loopne
fistl
cli
in
lahf
xchg
jb
sbb
js
and
test
pop
aam
mov
fs
sub
mov
imul
ficomps
xor
out
and
adcl
cmp
dec
mov
shlb
jg
pushf
sub
sub
daa
jne
loope
inc
jge
jle
addr16
jno
push
repnz
loopne
xchg
scas
sub
dec
je
inc
shl
jp
and
mov
pop
stos
add
loopne
arpl
lcall
sub
xchg
outsl
sub
pusha
mov
outsb
adc
cmp
and
mov
push
test
add
mov
cmp
into
lret
in
sub
iret
not
rcrb
int
lock
std
test
mov
test
addr16
pop
fwait
cmpsl
rorb
xor
cmc
imul
dec
cmp
out
push
hlt
sbb
xchg
nop
and
jns
int
icebp
pop
mov
hlt
cld
xlat
movsl
inc
or
add
gs
or
fimull
cmp
cmp
cmpsb
jae
push
add
inc
push
int3
lds
dec
lea
cmp
xor
stos
add
loopne
jg
and
jnp
lcall
enter
or
out
add
aas
mov
mov
sub
ficompl
or
jnp
icebp
hlt
and
out
dec
cmc
inc
mov
aaa
notl
cwtl
cli
lods
jns
jbe
lret
xchg
push
fs
push
insl
lods
mov
add
adc
mov
fwait
add
int3
dec
repnz
inc
inc
fmull
arpl
push
cld
sub
shl
xor
fisubrs
and
adc
jle
pop
mov
or
nop
into
movsb
fwait
sub
daa
test
adc
movsl
frstor
test
adc
pop
push
jbe
pusha
push
pop
in
mov
orl
cmpsb
push
sub
add
sub
aaa
push
sub
pop
mov
jmp
xchg
cmp
hlt
mov
out
cmp
or
jae
fcomip
js
sti
xor
lcall
loope
and
mov
scas
xlat
loope
mov
pop
xor
cltd
and
xchg
push
mov
pop
lds
fldcw
in
cmp
jno
ljmp
sbb
call
shlb
cmpsb
lret
lds
rcr
clc
sbb
xchg
mov
movsl
dec
sbb
cmp
movsb
ret
std
mov
or
lea
ss
rol
add
fcoms
fidivs
call
sub
enter
in
out
cmpsb
lret
cltd
bound
ljmp
xor
push
pop
aas
aaa
call
push
nop
mov
aad
jmp
adc
in
xchg
jb
push
inc
push
test
into
sbb
ja
jb
push
cmp
cmp
imul
push
pop
pop
lret
je
mov
inc
xchg
lret
inc
and
xor
adc
jg
or
int
and
mov
cmpsb
xor
add
clc
sbb
mov
test
clc
loopne
pop
xchg
sbb
push
pop
sub
dec
pop
sahf
pop
sbb
push
int3
out
push
rcrl
fs
adc
rcl
or
sbb
sti
dec
ljmp
test
inc
les
jo
adc
mov
xor
das
add
dec
scas
dec
mov
out
into
sub
lcall
test
ds
mov
inc
and
popa
cli
mov
push
cmp
cmc
xchg
and
das
jo
mov
sub
subb
mov
or
mov
add
dec
and
nop
cmp
mov
jae
xor
insb
ret
push
pusha
std
add
shll
test
push
hlt
in
or
jecxz
cltd
add
les
fdivr
stc
test
xlat
dec
rcrl
out
push
int3
into
in
ss
loop
pusha
imul
pop
push
add
adc
cmc
lods
xor
out
or
movsb
jnp
xor
std
test
in
nop
xor
shr
fdivrl
bound
inc
pop
push
sahf
adc
loope
imul
out
cwtl
aad
popf
mov
pushf
mov
ljmp
push
popf
push
in
fucomp
and
adc
and
shl
scas
sub
lock
dec
lahf
add
ffreep
lock
inc
out
insl
inc
dec
adc
arpl
aaa
or
add
aas
pop
add
mov
pop
jne
mov
cmpb
test
rol
cltd
inc
jp
iret
mov
jb
incl
test
ds
or
lock
dec
push
imul
fdivr
outsl
lods
mov
shl
mov
mov
push
inc
mov
or
add
mov
adc
mov
add
fnstsw
pop
xor
fstps
and
inc
stos
xchg
ficoms
mov
add
mov
sbb
sub
mov
lea
inc
inc
jo
or
pop
xchg
pop
arpl
sbb
lods
sbb
clc
jmp
daa
push
js
ret
and
jo
mov
xlat
or
xchg
int3
ja
popf
pop
xchg
scas
mov
mov
ds
or
mov
jns
cmpsb
je
mov
jb
ret
mov
les
adc
pop
aad
and
ljmp
nop
adc
loope
mov
jb
sti
dec
dec
cmpsb
jno
pusha
imul
out
pop
jmp
in
idiv
add
imul
rcr
lods
not
cmp
stc
nop
inc
sahf
dec
pop
lods
pusha
lea
push
mov
pop
push
mov
outsl
les
shrl
incl
jmp
cmc
sbb
or
mov
add
push
inc
sahf
mov
sub
or
js
cmpsl
or
mov
aas
mov
movsl
cmp
rclb
shlb
shll
jae
xchg
xchg
out
mov
sbb
jmp
dec
cltd
mov
inc
mulps
push
pop
jne
faddl
ljmp
out
dec
insl
mov
dec
push
xor
loopne
lret
icebp
enter
mov
sub
icebp
pop
adcb
or
mov
push
icebp
xor
in
jbe
mov
dec
fcmovbe
imul
xchg
incb
lea
sbb
divb
dec
in
mov
testl
dec
pop
pop
enter
fisttpl
cmp
pop
xlat
xor
out
add
and
xchg
xchg
out
aam
and
les
and
fstpt
mov
fsubrl
xchg
and
xchg
xor
rcrl
sahf
pop
ret
mov
xlat
mov
cltd
loopne
scas
icebp
int
inc
and
mov
sbb
sbb
or
test
test
inc
test
ljmp
or
mov
mov
hlt
mov
push
xor
xchg
adc
adc
into
out
cli
movsb
ss
push
jns
js
sub
cmp
and
clc
mov
cmp
add
cmp
iret
daa
xor
cmpsl
enter
scas
push
adc
mov
xchg
lods
in
cmp
sbb
movsl
push
mov
xchg
add
test
sbbb
lods
gs
mov
adc
jle
orl
lcall
push
mov
outsb
mov
mov
cmpsl
fstpl
xchg
fwait
cmpsl
test
out
lcall
push
mov
cmp
pop
out
popf
push
rolb
dec
and
adc
pop
fnstenv
into
sbb
adc
push
addl
push
andl
xor
loop
clc
lods
add
xor
xchg
dec
push
push
andb
int
mov
mov
fisubs
lods
cmp
fstl
add
ja
xchg
stos
lods
stos
mov
fidivs
xchg
in
cmpsb
movl
sti
aad
sub
pop
dec
ds
fistpl
push
mov
pop
ss
xor
pop
fcos
stos
mov
es
imul
mov
std
mov
lcall
aaa
popa
pushl
aas
mov
js
jp
aad
aad
sub
fcmovb
sahf
cmp
xor
inc
dec
inc
call
mov
in
jnp
add
sub
icebp
jg
jne
rcll
jle
sub
jbe
xchg
loopne
insl
daa
addr16
and
out
push
int3
or
adcb
fnstcw
push
sub
xchg
jns
nop
daa
repz
imul
idivb
or
xor
adc
pushf
jl
insb
push
into
les
scas
cmc
cmpsl
mov
stos
dec
push
ljmp
jbe
jp
pop
lock
hlt
cmp
pop
stos
mov
jl
mov
xor
fisttpll
icebp
sbb
sub
jne
xchg
int3
xor
clc
push
aaa
pop
out
push
adc
push
and
push
js
or
inc
jmp
addr16
loop
cmpl
pop
push
and
jg
lds
daa
das
pop
xchg
into
push
inc
pop
or
scas
and
mov
ss
and
test
cli
ja
icebp
insb
ret
sbb
sarl
push
inc
ret
lret
add
and
add
inc
gs
pop
jg
mov
mov
frstor
xor
aad
cmpsl
rorl
fcmovnu
stc
mov
push
jg
add
jb
lds
mov
jo
sub
xor
and
adc
in
mov
mov
ret
daa
jg
mov
hlt
mov
mov
and
ret
mov
dec
mov
jbe
in
out
jle
imul
and
into
fcompl
repz
into
dec
adc
in
ffreep
mov
sahf
mov
cltd
xor
lds
fildl
hlt
inc
add
fs
pop
hlt
sbb
in
mov
push
sarb
and
clc
int3
cmc
pop
enter
mov
fiaddl
push
fnstenv
inc
iret
sti
les
out
mov
into
test
clc
js
call
or
pop
mov
pop
lods
pop
jnp
lahf
shrl
jecxz
mov
cmp
loope
and
adc
add
adc
insl
cs
mov
lret
mov
shlb
fwait
mov
lods
push
stos
jmp
cvtps2pd
push
daa
enter
shrb
pop
ss
mov
hlt
xchg
out
rorl
lea
sub
mov
sbb
jle
mov
cmp
in
es
cmc
aaa
mov
arpl
add
cmp
xchg
mov
pop
ja
xor
adc
dec
adc
out
mov
fs
dec
ds
sub
sbb
ljmp
addr16
jecxz
mov
arpl
negb
jg
out
xor
enter
or
stos
xchg
in
mov
ss
ss
pop
mov
les
es
cltd
adc
imul
pop
icebp
and
inc
mov
push
rcrl
or
fstpl
pop
xor
pop
xchg
repz
imul
mov
lods
xor
ds
mov
sub
popf
pop
pop
fsubrp
dec
pop
xchg
push
pushf
cmp
or
negb
sbb
test
or
cmp
mov
mov
fistps
jmp
xchg
clc
xchg
mov
mov
push
and
outsb
add
fimull
pop
bswap
cltd
dec
scas
cld
scas
jne
push
mov
pop
aad
dec
call
xor
push
sahf
dec
jg
fs
adc
sub
shll
sahf
in
stos
daa
fiadds
sub
inc
fnstcw
cli
std
aas
lret
movsl
aad
insl
sbb
stos
xchg
pop
push
sub
sahf
arpl
adc
cmp
xchg
nop
scas
insl
inc
push
movsl
pop
inc
and
lods
mov
stos
fnstsw
stos
or
dec
insl
and
xor
dec
lock
pop
xor
loopne
lods
lods
jecxz
out
xor
sbbb
repnz
ljmp
xor
fisttpll
sti
insl
push
sbb
fs
jp
mov
addb
enter
sub
mov
push
icebp
out
jmp
pop
xlat
call
adc
mov
xor
addr16
pop
popa
pop
mov
in
enter
outsb
inc
cmp
xchg
fnstcw
les
cmpsb
cltd
imul
in
xchg
lahf
stc
xchg
and
movsb
dec
fsts
push
repnz
push
inc
mov
add
add
cmpsl
dec
inc
out
lret
clc
jecxz
or
inc
data16
xor
pop
mov
cmpsl
jecxz
mov
ud2
dec
pop
out
movsl
ja
or
popa
jge
sub
sub
aaa
das
out
mov
dec
addr16
fistpll
mov
leave
dec
mov
mov
or
call
mov
jae
mov
sub
adc
dec
xchg
cld
xor
mov
xchg
inc
cmpb
sahf
test
daa
pop
xor
test
sbb
roll
js
or
adc
push
sbb
aam
adc
add
pusha
dec
in
add
fdivrs
push
outsb
cmp
lretw
lahf
inc
add
jecxz
xor
pop
in
adc
addr16
xorl
mov
inc
adc
stc
lret
call
jae
add
loope
test
xor
cli
xor
ror
mov
insl
sbb
adc
mov
call
push
aaa
stos
les
js
movsl
cmp
cmp
scas
push
cmpsb
cmpsl
insb
cli
cmpsl
filds
adc
mov
push
jo
mov
cmp
sub
pop
mov
or
repz
jno
push
adc
push
andb
repnz
fidivrl
inc
fwait
negb
cmp
mov
mov
stc
ret
xor
xlat
add
pop
enter
aaa
xchg
das
pop
sub
lods
push
pop
repnz
xor
mov
sbb
insb
mov
mov
sbb
or
sub
jecxz
mov
insb
out
ret
pop
movb
fnstenv
inc
fisubl
daa
jae
jle
sbb
pusha
jp
addr16
inc
xor
jp
mov
jne
jmp
mov
insl
jg
adc
psubq
jmp
xor
stos
test
jmp
or
dec
cli
push
gs
sub
bound
pop
sbb
dec
push
call
ja
sahf
hlt
nop
outsl
sahf
insl
and
jnp
pop
into
cs
scas
gs
mov
lret
sbb
push
test
loopne
inc
or
in
and
out
sbb
dec
cmp
add
add
jge
rorl
jb
pop
push
mov
aad
clc
adc
test
je
add
cmp
mov
sub
xorb
loop
mov
iret
mov
add
outsl
and
xor
cmc
jl
dec
mov
dec
pop
add
push
enter
pop
sbb
and
lcall
pusha
or
cmp
aad
lcall
sarb
cmp
xchg
pop
and
and
and
scas
and
pusha
ja
push
loopew
loop
fsubrs
xor
rcr
and
lcall
mov
mov
push
sub
or
mov
ljmp
incb
mov
cmpsb
lahf
jge
shrl
rcr
cli
outsb
pop
mov
popa
popf
xchg
in
cld
adc
jge
xchg
fsubl
dec
repz
or
test
mov
dec
or
jb
jnp
xchg
add
sub
adc
movsl
loope
mov
ss
movsb
int3
mov
sbb
insl
jnp
sub
inc
scas
leave
cli
mov
scas
iret
outsl
pop
movsl
add
push
inc
sub
test
mov
pop
testb
xor
outsb
mov
jecxz
and
pop
cmpsb
xor
sub
jge
clc
sbb
xchg
cwtl
xchg
mov
push
loopne
stos
sbb
into
sub
jp
shll
jp
xor
cmp
add
xor
and
sbb
xor
lods
mov
loopne
lock
shrl
and
pusha
data16
loope
aam
insb
sub
aaa
mov
std
out
clc
mov
xor
jmp
pop
loope
hlt
imul
test
pushf
ss
scas
or
mov
pop
jb
inc
es
add
adc
clc
imul
into
loope
cmp
idivb
scas
and
jo
mov
addr16
test
icebp
dec
sbb
or
push
mov
xchg
leave
add
test
mov
dec
jecxz
jl
rorl
xadd
push
xchg
adc
nop
push
repnz
add
lret
pop
gs
ret
sub
mov
roll
in
adc
loopne
push
ss
sbb
lods
push
leave
push
push
test
pop
sahf
xor
sub
push
xchg
dec
adc
in
and
jo
adc
jbe
inc
dec
xor
sbb
pop
xchg
repz
jp
sbb
cwtl
in
or
es
sub
mov
inc
and
mov
pop
test
push
mov
cld
sub
ja
imul
jp
and
sbb
jg
or
inc
jge
stc
xchg
aas
and
inc
std
mov
push
pop
sbb
sbb
dec
stos
loop
ja
js
jg
sti
stc
cmp
push
iret
or
and
adc
xchg
jecxz
or
dec
es
and
popa
xlat
xor
daa
mov
inc
jp
mov
cmp
ss
fcmovnb
aas
fwait
mov
vpmaxsb
xlat
sbb
sbb
popa
ret
and
add
sbb
jmp
mov
jb
fst
xor
scas
pop
mov
adc
add
fmuls
or
xchg
push
mov
frstor
pushl
shlb
adc
dec
lea
pop
or
ja
mov
test
mov
loop
mov
sbb
rcr
mov
repz
das
stos
pop
mov
add
lock
int
sbb
jnp
or
orb
lahf
cmp
or
mov
test
stos
mov
xchg
mov
repz
lock
aad
sahf
sbb
cmc
ja
jge
scas
mov
lcall
into
out
cmp
adc
lods
push
mov
pcmpgtw
jge
jle
pcmpgtd
mov
cs
jmp
jne
cwtl
fucomip
gs
movsl
mov
pop
or
dec
mov
lahf
push
xor
je
sti
popa
push
mov
sarb
and
cmc
and
fcmovu
stos
add
testl
pop
mov
cmp
enter
xchg
mov
ret
add
out
loope
xor
adc
inc
rorl
sbb
push
inc
lock
jne
cmp
sub
push
cmc
push
cmpsb
jp
insl
cmp
jnp
clc
dec
mov
xchg
mov
add
rcll
es
addl
loope
jae
lods
inc
pop
lds
inc
xchg
call
adc
sbb
iret
ret
andb
sbb
fs
hlt
cmp
xchg
pop
stc
dec
push
out
popa
xor
lahf
lods
js
xor
pushf
mov
add
scas
jle
inc
push
pop
sbb
in
cmpl
ja
test
or
notb
test
mov
scas
push
daa
aam
rol
sub
sbb
movsb
adc
rclb
and
andb
and
enter
js
inc
outsb
loop
dec
pusha
jnp
xor
push
xchg
test
or
pop
nop
mov
mov
imul
pop
xchg
xchg
test
cs
add
test
loope
es
sub
sbb
xor
sbb
push
push
adc
ja
adc
mov
mov
inc
cs
xor
shll
js
leave
pop
aad
mov
xor
inc
test
mov
add
adc
sti
or
xor
fildll
mov
loopne
adc
mov
call
jge
adc
nop/reserved
pop
in
in
imull
popf
in
aam
test
cmpl
pop
jb
cmpsl
nop
dec
cs
iret
lcall
sub
bound
cli
adc
jns
rcrb
jmp
stos
jns
dec
into
push
cwtl
icebp
sti
mov
outsb
ja
push
sbb
or
or
push
jo
arpl
ret
add
or
ja
cs
xchg
inc
xchg
lret
dec
dec
or
cli
cmp
push
mov
sbb
cltd
ss
dec
xchg
push
out
clc
mov
xchg
loope
dec
lahf
in
sub
std
mov
in
pop
xor
mov
iret
sub
mov
push
leave
cmpl
jae
and
push
pop
jle
mov
mov
pop
test
mov
jns
inc
test
daa
xor
inc
dec
jp
or
insb
imul
loope
add
das
out
aad
in
repz
mov
mov
in
xchg
cmpsl
in
sbb
out
jl
and
fwait
push
mov
pop
mov
push
mov
mov
insl
fldcw
cmp
lea
xchg
fisubl
and
movsb
jle
and
daa
es
push
cwtl
lock
pushf
inc
iret
movsb
mov
inc
ret
adc
in
lahf
jo
sbb
push
sub
xchg
mov
sbbb
mov
mov
inc
out
pmullw
addl
mov
fcomps
jae
xchg
or
xor
loop
pusha
pop
div
sbb
jl
adc
das
gs
mov
pop
lahf
or
sbbb
sbb
fadd
add
xchg
mov
inc
jnp
adc
or
repnz
xor
dec
enter
scas
xlat
cwtl
shrb
sub
push
inc
sbb
pop
jns
ret
jl
cmpsl
popf
fcomp
and
pop
outsl
into
stos
or
in
xchg
dec
lahf
mov
popa
xorl
fcoms
loopne
aam
insl
pop
lock
clc
pushf
insb
shrb
mov
inc
mov
inc
sub
sub
daa
pop
loope
mov
iret
lret
outsl
xchg
adc
stos
lret
mov
xor
loopne
mov
int
nop
sbb
lods
inc
jge
mov
mov
icebp
mov
inc
clc
repnz
loope
mov
clc
nop
ror
movsb
pop
mov
mov
jb
inc
mov
dec
pop
and
stos
push
jns
or
xor
mov
sti
std
in
and
push
popa
or
movsl
xchg
stos
mov
ficoml
enter
pop
add
mov
xchg
test
scas
mov
cli
aaa
fsubl
xor
and
cmp
or
sbb
mov
icebp
sbb
fmuls
jb
push
imul
cmpsb
in
test
test
push
push
cmpsb
push
sub
int
pop
cwtl
xor
and
jno
movsl
or
mov
fdivr
inc
xchg
jl,pt
lds
aad
cmp
test
mov
sbb
mov
sbb
xchg
nop
insb
repnz
mov
jecxz
or
notb
mov
mov
sbb
mov
fcmovne
push
loopne
push
inc
movsb
jg
fidivrl
cwtl
jne
push
repz
push
sbb
daa
in
hlt
fstps
pushf
fidivrl
cld
and
fnstenv
push
mov
in
mov
mov
in
fists
pop
and
push
out
aaa
sahf
pop
fisubrl
inc
imul
in
mov
dec
inc
ret
xor
push
out
add
addr16
ljmp
rorl
adc
std
dec
cmpsl
movsb
and
sub
in
aam
jge
stos
sub
mov
mov
fstl
push
or
or
inc
pushl
out
ja
shll
sub
dec
inc
leave
adc
pushf
fstps
std
movsl
jo
cmp
jp
je
add
and
add
cmpsl
dec
and
in
out
or
push
iret
out
jo
fwait
mov
stc
fwait
out
pop
dec
dec
shrl
repnz
or
jno
inc
add
pop
lods
aad
cmpsl
nop
les
inc
pop
push
dec
cmp
add
xchg
adc
push
add
aad
rcr
arpl
pop
arpl
dec
notb
stos
jle
sbb
fisubrl
sti
sub
and
cmc
or
sub
in
pop
xchg
add
sub
fs
sub
xor
adcl
hlt
sub
cmc
in
ljmp
mov
sbb
mov
in
push
jmp
pop
jge
inc
cmp
xchg
iret
lret
test
jae
faddl
mov
mov
pushf
push
mov
lock
mov
xchg
mov
dec
cmp
xor
rol
fldcw
insb
mov
addr16
imul
mov
fisubrs
sub
adc
insl
aam
jecxz
sub
mov
cmpsl
test
inc
shl
lea
cwtl
notb
andb
andb
cltd
mov
cmpsb
loope
sub
insl
insl
inc
push
out
jge
or
inc
dec
xor
leave
lods
xchg
aad
xchg
xor
je
outsb
iret
roll
sub
pop
pop
into
test
mov
mov
mov
add
dec
dec
popa
bound
pop
adc
in
and
or
pop
mov
sbb
mov
cmc
sbb
gs
aaa
xchg
adc
push
jbe
cmc
es
sbb
iret
aaa
xor
adc
scas
inc
mov
xchg
js
fisubrs
cmpsl
fistps
jns
dec
lds
out
cld
jnp
int
mov
push
rcrl
lcall
andb
mov
cmpsl
sub
jbe
sbb
xlat
je
lea
jno
notl
clc
std
mov
or
fnstenv
sbb
jns
mov
outsb
pop
add
or
ds
lods
inc
mov
into
negl
xorb
inc
push
push
jb
movsb
scas
test
cmp
fstps
les
cmp
scas
add
icebp
mov
fists
or
test
lahf
ret
jecxz
mov
daa
jl
addb
pop
push
lds
mov
push
out
add
stos
hlt
mov
and
test
in
sbb
mov
pop
and
addl
mov
in
jnp
push
fsub
mov
or
jae
out
stc
inc
imul
std
mov
std
gs
jne
daa
jne
add
pop
dec
xchg
cli
pop
add
mov
std
or
dec
xchg
fsubs
push
stos
rolb
xchg
lods
sbb
mov
jg
sub
stos
cmpsb
jg
fisttpl
lret
xchg
push
andb
jo
cmp
mov
mov
add
sub
das
mov
jmp
repz
imul
out
daa
pop
inc
add
int
inc
adc
jnp
adc
mov
cmp
les
and
jo
call
loopne
lds
mov
and
adc
sub
jmp
leave
sarl
test
or
lods
add
shr
xor
mov
xor
popf
push
xchg
dec
insl
inc
inc
pusha
jns
sbb
lods
sub
cmpsb
aad
sbb
pop
nop
push
pop
in
push
xchg
aas
clc
loope
gs
idivl
dec
dec
pushf
xor
in
mov
iret
inc
cmpsl
mov
mov
cmp
push
sahf
out
cmpsl
insb
movsb
repz
sti
hlt
dec
push
pop
out
sbb
push
push
repz
mov
or
jmp
repz
or
fisubrl
dec
push
push
mov
inc
push
and
test
pop
rcll
loope
adc
mov
push
xchg
mov
fistl
ret
jle
pushf
sbb
push
leave
add
mov
sbb
outsb
out
mov
add
scas
clc
push
or
and
in
push
pop
jle
ss
in
push
aaa
mov
mov
adc
xchg
cld
insl
out
push
xor
mov
xchg
ss
cli
push
adc
dec
pop
cmp
test
lods
ffree
jno
push
and
in
gs
cmp
lea
in
mov
inc
rcrb
cmp
fcmovnb
aam
adc
les
popa
push
lods
mov
cmp
pop
push
and
xorl
adc
push
xchg
or
adc
jecxz
cli
sub
jae
lret
xor
enter
inc
movsb
fs
movsb
sub
lods
cltd
and
mov
ds
popa
xor
inc
test
popa
cmc
jbe
sbb
cmp
pop
push
scas
and
sub
fnstsw
mov
adc
movb
jbe
jno
push
dec
inc
add
cli
into
xchg
dec
aas
mov
in
mov
jl
lahf
xchg
imul
push
sub
adc
inc
sbb
decl
pop
test
add
xlat
pushf
fistpll
ror
fstl
or
cs
cmc
jle
push
jae
jbe
arpl
pusha
rcll
outsb
fsts
stos
repz
cmp
cmp
stc
test
jbe
push
cwtl
cmpl
adc
stos
pop
jbe
lcall
ret
and
sarl
jae
sbb
outsl
mov
popf
sbb
rorl
sub
add
add
add
inc
nop
or
xor
or
dec
nop
or
pop
nop
or
add
add
dec
nop
or
pop
nop
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
