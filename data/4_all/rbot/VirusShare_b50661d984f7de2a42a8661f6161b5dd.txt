add
add
push
mov
push
andl
push
push
mov
mov
add
add
jne
push
call
pop
test
pop
je
incl
add
cmp
add
jl
jmp
mov
push
imul
sahf
dec
xchg
inc
mov
pusha
push
sub
push
lahf
lea
popa
or
call
incl
pop
mov
pop
leave
ret
sub
inc
or
inc
push
sub
call
aam
adcb
xchg
xchg
je
lea
push
push
add
ljmp
add
fs
add
inc
inc
dec
sbb
pop
push
jp
sub
rcrb
inc
lock
adc
push
and
aad
mov
test
cmp
push
lea
add
ret
orb
sub
cmp
jge
movzwl
push
or
or
adc
dec
push
test
test
nop
sub
out
xchg
pop
out
ljmp
subb
aam
pop
stos
push
test
gs
mov
or
xor
mov
add
add
dec
and
push
mov
pushl
push
popa
pop
xor
inc
lods
sbb
pop
ret
push
jmp
dec
pop
adc
or
or
jne
cmc
jb
ljmp
rclb
push
inc
sbb
pop
in
cltd
or
add
pop
mov
lea
cmp
clc
movsl
pusha
sbb
push
inc
cmp
mov
mov
dec
sbb
push
call
in
push
inc
adc
int
cmpb
pop
lret
mov
rorb
add
adc
push
jno
jge
cmp
loopne
stos
sbb
cwtl
iret
sub
mov
and
lea
inc
mov
dec
shl
cld
test
ljmp
pop
cmpsb
inc
dec
cmp
push
ret
fcoml
cltd
push
subl
push
iret
sar
call
call
mov
pushf
scas
jo
inc
mov
arpl
int3
push
xor
push
cmp
int
xor
iret
dec
rolb
add
pop
cmp
aad
xor
xlat
or
sarl
and
ficompl
rcrl
fistpl
pop
fstl
push
fbstp
addr16
inc
loope
loop
mov
push
jcxz
in
rcrl
and
cmp
jmp
aam
sbb
in
push
xorl
xchg
aam
jne
icebp
cmp
mov
xor
xorl
sbb
sub
inc
and
stc
fs
sub
or
out
xor
ljmp
test
std
ja
mov
add
mov
dec
mov
hlt
scas
push
cmpb
adc
sbb
jge
jne
add
add
inc
xor
inc
cmp
jb
jmp
enter
sbb
mov
push
adc
mov
jno
mov
add
jp
push
add
add
and
inc
mov
cmp
lea
adc
adcb
cmp
mov
add
jbe
inc
and
adc
mov
ljmp
jne
test
inc
insb
xor
sbb
mov
mov
mov
add
cmp
or
xor
inc
cmp
inc
cmp
jb
adc
cmp
push
mov
pop
adc
push
push
lds
outsl
mov
or
mov
push
push
call
inc
xchg
mov
je
push
loop
cmpsb
or
sahf
add
and
xchg
movsbl
push
push
fildll
lock
adc
or
adc
sub
jb
push
inc
pop
add
push
adc
ja
out
push
add
test
mov
or
xchg
push
fimull
push
in
and
and
je
xor
lret
test
sti
jo
and
test
push
sbb
sub
xor
cld
adc
add
xorl
mov
aam
dec
mov
push
push
call
and
loopne
ret
popa
sbb
jge
or
adc
insb
imul
sub
dec
and
mov
inc
mov
adc
and
gs
sbb
dec
inc
popa
lods
xchg
nop
and
sbb
and
test
dec
test
stc
std
mov
push
out
mov
mov
mov
std
movsl
adc
bound
pop
add
pop
test
inc
pop
test
jl
pop
test
inc
mov
mov
test
mov
sub
arpl
mov
data16
jae
cmp
jge
rorl
jle
sbb
inc
adc
or
push
or
and
movl
pushl
sub
push
bound
adc
mov
sti
js
mov
cmp
fs
jl
lds
cltd
sbbb
adc
and
cmp
push
push
loop
daa
int3
mov
fsts
pop
add
and
and
out
xor
mov
call
test
push
and
mov
cwtl
sub
insb
xchg
mov
clc
mov
and
jns
movsl
loopne
inc
push
cmpsb
push
or
or
push
sub
or
enter
or
mov
sub
cmp
or
idivb
je
mov
je
cmp
je
jo
add
cmp
je
push
push
call
pop
test
je
stos
push
shll
cmp
repnz
negb
inc
sub
dec
es
mov
xchg
ret
andb
fs
push
or
inc
mov
ret
mov
std
add
push
mov
mov
out
pushf
pop
test
movb
pop
jmp
xor
pop
add
mov
push
xor
pop
mov
ficompl
or
jo
inc
cmp
jge
or
jmp
xor
cmp
mov
jle
mov
cmp
je
or
je
mov
inc
cmp
jl
xor
jle
cmp
jne
lea
or
ret
sbb
push
jge
mov
inc
inc
cmp
jl
cmp
je
shlb
bound
mov
mov
mov
inc
and
jl
adc
add
push
mov
stos
lea
test
into
bound
or
mov
mov
xor
xlat
add
pop
inc
mov
mov
dec
cmp
jle
pop
ret
movsbl
mov
cmp
pop
jl
cmp
jg
rolb
pop
sbb
call
push
jmp
leave
inc
data16
cmpsb
sbb
mov
push
pop
sbb
adc
call
jmp
inc
cmp
inc
mov
iret
mov
pop
mov
cld
dec
dec
enter
pop
or
push
hlt
mov
sub
inc
lcall
add
cmp
jge
lea
decl
sub
repz
cwtl
sub
or
push
call
inc
dec
xchg
push
pop
sbb
jne
dec
dec
jg
jl
inc
push
add
testl
pop
inc
inc
adc
push
popa
punpckhbw
cld
push
add
rorb
cmp
hlt
mov
pop
jg
xor
jmp
andb
dec
lea
or
adc
jl
rcrl
mov
je
jmp
add
push
test
shl
sbb
dec
das
aam
shlb
sub
push
faddp
je
push
jno
push
cmp
push
mov
mov
adc
pop
nop
scas
movsb
cltd
out
mov
jae
pop
movsb
shl
mov
std
inc
ret
dec
call
cmp
sub
xor
pushl
rcrl
push
push
sbb
jp
xchg
or
js
inc
pop
shl
enter
sub
cwtl
cmp
leave
push
push
fs
push
leave
lock
inc
mov
out
add
test
js
fsubrs
mov
inc
hlt
dec
cmp
stos
jae
sub
sbb
xor
lahf
fsubrs
mov
push
sub
aam
push
dec
lea
clc
xchg
ret
js
xor
sbb
not
cmp
inc
test
test
lock
cltd
mov
push
je
adc
data16
push
imul
outsb
rorb
sbb
push
pop
pop
sbb
sbb
int
push
push
orl
cmp
repnz
mov
aad
pop
inc
add
dec
xor
xlat
jns
xchg
scas
or
mov
mov
mov
in
adc
outsl
repnz
repnz
cld
cs
fwait
mov
sub
decb
xchg
push
shll
dec
or
push
dec
sbb
arpl
xor
popa
ss
cmp
mov
inc
test
push
lock
inc
ret
daa
or
mov
popf
xor
push
movl
aam
mov
xchg
push
lret
push
xchg
nop
inc
repz
mov
mov
and
and
mov
mov
mov
aad
push
adcl
push
jge
or
push
lods
jp
push
push
mov
xchg
or
push
add
sahf
mov
dec
mov
or
fs
push
xor
mov
lock
scas
mov
hlt
xchg
pop
inc
sbb
add
add
nop
jno
out
enter
adc
sbb
mov
mov
insb
mov
mov
add
dec
jle
cmpsl
jne
lds
mov
iret
repnz
cmp
inc
xchg
mov
sbb
add
jbe
jne
lds
push
add
push
je
mov
push
mov
or
xor
push
sbb
adc
or
adc
sub
push
lret
sbb
or
push
jo
push
sub
nop
addb
jle
and
test
adcb
fcmove
xchg
sarb
popl
call
pop
je
call
in
sbb
add
mov
inc
call
fnstsw
xchg
je
adc
loopne
inc
mov
xorl
mov
xorb
dec
jmp
cmp
jne
mov
je
add
mov
fdivl
test
push
rorb
test
rolb
jae
and
add
insb
push
fcoml
jle
rorl
test
pop
push
ret
adc
mov
push
inc
mov
push
cs
add
jg
dec
call
lods
sbb
lock
adc
and
mov
jl
orb
lahf
push
xor
test
push
dec
or
cmp
push
ficomps
and
sub
das
shr
and
jmp
into
scas
loopne
out
adc
sbb
cmpl
mov
cmp
jo
call
mov
cld
lock
pusha
sti
push
push
push
and
cmp
je
push
pop
sub
movsb
xchg
or
je
in
xchg
or
cltd
jp,pn
icebp
pop
fs
arpl
gs
mov
xor
in
or
test
test
iret
inc
push
call
inc
push
push
lcall
jb
jnp
addb
mov
outsb
lcall
imul
cwtl
xchg
in
sbb
fdivs
inc
dec
loopne
jg
adc
xchg
dec
in
adcb
and
xchg
lock
adc
or
popf
adcb
push
adc
push
mov
push
mov
mov
push
enter
push
mov
jnp
and
push
mov
bound
in
jno
stos
cmp
and
imul
inc
imul
mov
sarl
dec
adc
xor
sbb
mov
int
and
ficompl
xchg
inc
xor
push
jmp
push
je
jb
sbb
add
cmp
mov
jecxz
dec
cld
push
in
xor
jl
mov
popf
ret
mov
sahf
push
add
je
call
mov
jp
inc
jmp
xor
jbe
cmp
add
enter
notl
cmp
pop
pop
ds
pushf
add
xor
push
popa
int
lock
push
adc
inc
lock
sub
add
fcomps
dec
ret
ret
and
imul
mov
sub
push
jne
je
data16
cmp
dec
movsb
inc
lahf
xchg
xor
xchg
adcb
mov
fiaddl
add
aam
push
push
push
dec
adc
loope
imul
mov
xchg
in
mov
jne
mov
call
bnd
hlt
push
pushl
add
shlb
popf
sub
push
movsl
clc
sbb
aad
or
xchg
inc
shrl
or
cmpsb
jo
ljmp
je
xor
push
push
pushl
hlt
lcall
mov
loop
call
or
pusha
pusha
cmp
mov
mov
call
mov
push
pop
dec
inc
das
push
ret
mul
loope
sti
adc
add
cltd
push
ret
mov
pop
and
dec
clc
fwait
dec
jge
divb
outsl
pusha
adc
popa
and
call
pop
popa
adc
push
popa
loop
xchg
pushf
xchg
dec
stos
cmp
jg
iret
pusha
adc
mov
aaa
mov
test
push
mov
jl
pop
sub
and
adc
or
xchg
push
aas
cmp
lahf
mov
test
nop
jo
js
xor
push
stos
sub
imul
stos
and
cmp
jge
cli
adc
jle
dec
lods
xchg
jp
push
pop
and
xor
push
rclb
sub
mov
sub
mov
repz
push
ret
mov
sub
je
jns
inc
mov
js
arpl
movl
cmp
cltd
jmp
jmp
in
pop
jmp
cmpsl
xor
lock
jae
and
and
add
adc
cld
mov
push
jb
xor
sti
inc
xchg
inc
fsubrp
mov
pop
or
add
inc
mov
fsubl
push
pop
sub
clc
call
mov
jl
test
cmc
fs
push
fisubrl
adcl
pop
push
xchg
clc
dec
sub
xor
test
inc
pop
inc
mov
test
pop
inc
pop
jl
mov
pop
icebp
xchg
movsl
cmp
push
push
loope
repz
mov
pop
pop
lea
mov
cmp
add
jne
movsbl
mov
movb
mov
mov
loope
dec
jns
xor
popf
decl
clc
pusha
cmpsb
pusha
cli
push
jge
adcb
je
push
repz
lods
nop
lahf
jne
add
sbb
shr
inc
mov
xchg
add
or
sub
cmp
sub
inc
pushl
repnz
cwtl
or
addb
sub
inc
push
cmp
imul
push
and
adc
cmp
mov
lea
push
cmp
rsqrtps
test
bound
shlb
in
stc
push
sub
push
pop
inc
sub
cltd
out
es
and
jg
int3
xor
jmp
test
addl
push
xchg
push
mov
movl
add
mov
pop
call
and
idiv
lea
jo
mov
movsl
lea
push
mov
sub
sbbl
cmp
je
push
lret
lods
jle
xor
pop
dec
pop
and
inc
and
mov
mov
push
push
mov
cld
test
xor
push
movsb
notl
push
call
pop
cmp
dec
sub
pop
xor
sub
je
outsl
stos
mov
imul
xchg
fs
lcall
adc
and
popf
push
adc
out
inc
or
sbb
mov
mov
fmull
test
jno
xchg
and
and
jae
cli
jle
movb
rclb
push
call
or
adc
or
cmp
je
dec
jne
push
inc
mov
push
push
xor
gs
leave
push
divl
jge
xor
cmp
je
xor
sub
push
inc
add
cmp
jl
jmp
adc
lret
adc
je
icebp
jne
push
add
out
clc
or
mov
sub
mov
xchg
and
xor
xchg
xchg
jb
xor
test
call
popa
cltd
jno
mov
jae
or
push
test
jne
adc
and
pop
sub
push
fisubs
pop
dec
xchg
push
ss
push
mov
adc
sub
or
add
iret
mov
xchg
push
inc
jl
ret
sbb
jmp
mov
addr16
leave
loop
mov
adc
xor
rcrl
imul
mov
fucompp
leave
std
mov
pushf
pop
mov
or
add
cmpl
insl
pop
sbb
popa
rclb
sub
push
mov
dec
test
or
push
aaa
mov
cmp
inc
xor
and
les
arpl
lock
lea
xor
push
mov
or
fiadds
movsl
fprem1
add
mov
and
add
inc
mov
adc
cmc
jae
loopne
imul
subb
push
pop
sub
mov
nop
or
sbbb
jg
testb
fsubs
cld
or
cltd
xor
test
imul
push
mov
shr
xchg
adc
popa
aad
push
ret
dec
push
jno
movsl
xchg
mov
inc
jl
push
pop
mov
popf
mov
lea
mov
orl
add
into
fsubs
and
jo
jno
adc
loopne
or
mov
lds
inc
in
in
cld
je
and
jp
bound
xor
icebp
dec
adc
je
movsl
cmpsb
xor
add
pop
pop
test
and
insl
in
add
sti
adc
cld
fsubrl
mov
and
ror
pushf
lea
sbb
je
mov
bndstx
dec
pop
and
push
push
cmp
clc
out
add
pushf
movsb
jno
inc
ret
fists
push
inc
and
push
push
xchg
int3
cs
push
adc
in
dec
mov
jmp
loop
inc
cmpb
jbe
xchg
and
lea
push
push
aas
cwtl
mov
or
and
adc
and
cli
xor
divl
jmp
daa
push
and
ja
push
test
jmp
xor
lock
push
or
hlt
add
call
cmp
cmp
sbb
push
jo
repnz
mov
or
cld
cwtl
aam
mov
push
xor
cmp
jbe
xor
sbb
cmp
jne
and
jge
jmp
cmp
or
or
sbb
cmpsl
pop
and
adc
push
inc
call
shlb
mov
jmp
push
pop
inc
add
inc
mov
cmp
mov
pop
sbb
shrl
mov
xor
xchg
jl
insl
js
inc
pop
mov
inc
je
jnp
pusha
adc
mov
movsb
pop
dec
sbb
inc
pop
adc
or
jnp
clc
insb
or
or
sbb
leave
xchg
mov
inc
mov
push
mov
pop
addr16
mov
clc
test
sub
push
mov
nop
lock
inc
pop
shl
pop
jne
add
enter
mov
sbb
cmc
and
dec
test
xor
sbb
or
mov
inc
adc
ret
repnz
inc
xor
adc
pop
cmp
jl
jmp
shrb
cmpsb
and
jno
negl
pop
xor
imul
mov
cwtl
add
je
mov
dec
pusha
or
push
pop
push
mov
and
mov
unpcklps
dec
or
insl
xchg
lods
cmpsb
xchg
adc
cmp
test
cmp
leave
ret
mov
inc
hlt
rclb
ja
push
sub
push
outsl
data16
cmc
jecxz
aad
jle
jne
stos
movsl
push
sub
in
test
mov
loop
inc
stos
lret
jnp
dec
adc
mov
test
add
adc
sub
andl
outsl
xchg
pop
sub
mov
dec
mov
dec
adc
mov
fdivrs
movl
pop
ret
or
out
fidivrs
push
sbb
xchg
or
enter
xor
sbb
push
adc
jmp
jmp
xor
loop
nop
dec
push
add
mov
cmc
cmp
ret
or
xor
shl
pushl
push
push
inc
xor
call
popa
push
push
popa
push
push
add
jge
xor
jle
push
bound
push
in
jp
cwtl
pusha
imul
jo
or
adc
pusha
pop
add
and
test
jno
mov
dec
pop
xor
imul
push
iret
mov
fs
xchg
adc
cli
push
xorb
add
lcall
fmull
and
mov
cmpl
jns
xchg
out
es
sub
pop
xchg
imulb
jns
xchg
dec
cmp
jge
aas
add
in
lret
and
hlt
xchg
and
rol
add
lahf
xor
aas
inc
push
xchg
xor
inc
pop
mov
imul
jle
or
fiaddl
lods
or
inc
add
sub
inc
adc
test
inc
push
popa
push
rclb
sub
cmp
and
or
test
test
add
mov
push
mov
out
and
stos
and
ret
mov
push
sub
test
lcall
push
subb
or
jge
stos
xorb
mov
test
inc
push
push
add
cmp
adc
pop
inc
and
cmc
cwtl
setb
adc
data16
stos
and
adc
add
cmp
push
ret
lods
adc
adc
cli
push
insl
add
iret
inc
adc
mov
add
push
fimull
stos
mov
dec
jne
popa
lods
or
xor
hlt
push
rclb
sbb
gs
add
adc
arpl
in
push
sbb
fimull
or
mov
sbb
adc
enter
insl
add
inc
adc
test
adcl
aaa
lods
insl
pop
adc
enter
push
repz
or
sub
xorb
lods
mov
imul
adc
xchg
push
inc
pop
inc
jmp
push
test
adc
mov
std
push
subb
test
mov
lret
lods
jnp
lods
or
xor
stos
xorb
lods
mov
adc
cmp
mov
pop
inc
and
push
push
test
push
loopne
arpl
push
in
inc
pop
inc
loope
mov
mov
mov
cmc
dec
xchg
lods
mov
mov
ret
lods
fisubl
test
or
subb
or
inc
shrb
sub
dec
push
test
add
aad
xorb
mov
jp
stos
mov
mov
ret
aaa
dec
push
and
xchg
jo
inc
mov
dec
or
or
sub
mov
fsubrs
push
sub
dec
add
sub
insb
push
inc
pop
inc
adc
test
popa
nop
or
sub
or
stos
mov
sub
dec
test
pop
andb
add
test
add
jb
sub
sub
xorb
lods
mov
inc
adc
push
inc
pop
lcall
test
inc
adcb
cmc
pusha
or
push
nop
lods
mov
adc
roll
mov
push
add
inc
pop
inc
popf
imul
test
push
push
sbb
add
and
pop
jge
push
inc
or
adc
adc
inc
sbb
and
sbb
inc
pop
inc
shl
dec
test
subl
sub
insl
test
or
mov
or
mov
mov
dec
dec
lret
cmp
cltd
adc
ss
and
cmp
insl
add
inc
adc
test
pop
lods
jl
rclb
inc
jb
adc
pop
add
adc
sub
stos
and
sub
xor
loope
nop
rcll
mov
mov
repnz
add
subb
sub
xchg
and
xor
rorl
lods
mov
test
stos
dec
dec
stos
mov
push
or
or
pop
insl
add
jl
add
iret
xor
pop
inc
movsb
sub
in
insl
add
fs
jno
add
in
xor
pop
adc
xorb
sbb
popa
push
fcomps
pop
adc
aaa
xchg
insb
add
mov
xor
and
pop
adc
mov
ret
cs
sub
fucomip
pop
and
pop
orb
lods
and
dec
sub
stos
mov
push
sbb
or
sub
xchg
sbb
cmp
sub
and
and
in
mov
insl
add
inc
adc
inc
out
or
popa
push
rclb
cmp
mov
push
adc
icebp
and
pop
mov
fidivl
xorb
pop
mov
daa
inc
mov
daa
adc
or
push
sbb
leave
andb
add
insb
push
rclb
stos
jl
inc
jbe
enter
pop
inc
ds
and
inc
mov
inc
and
out
mov
ret
leave
icebp
and
push
mov
ds
setb
stos
subb
pop
push
ror
je
nop
dec
push
out
enter
lods
and
mov
test
stos
mov
cmp
or
xchg
dec
mov
sub
outsb
es
push
inc
pop
mov
std
pop
cmp
adc
test
and
xor
pop
push
jae
stos
mov
and
loope
push
fldlg2
push
loopne
aas
push
icebp
pop
sub
stos
mov
push
or
or
xor
xor
pop
test
sub
fadds
sub
repz
fimull
stos
push
ds
sub
subb
sub
xchg
lods
xchg
sbb
inc
adc
test
lcall
mulb
adc
add
nop
push
loope
lea
mov
jp
add
or
inc
adc
and
pop
and
inc
jnp
push
pop
inc
adc
and
push
in
adc
mov
cmp
mov
or
mov
mov
loope
inc
mov
adc
rorb
push
sti
push
push
mov
sub
addb
ret
lods
sub
mov
mov
mov
stos
and
add
sub
or
ja
xchg
lods
xchg
adc
jnp
and
stos
inc
xor
push
dec
push
rclb
pop
push
stos
sub
or
test
push
adc
push
push
sbb
push
add
and
inc
adc
movsb
in
daa
je
pop
inc
jmp
in
fisttpll
fisttpll
loop
enter
insl
or
int3
stos
mov
mov
inc
inc
sbb
test
rcrb
ds
adc
push
push
inc
pop
inc
add
dec
test
push
testl
push
in
movsb
dec
jo
dec
mov
add
fimull
stos
lods
sbb
fcompl
xchg
insb
int
mov
mov
adc
in
mov
xchg
push
cmp
pop
and
pop
dec
add
push
and
push
mov
add
xchg
adc
inc
nop
xor
test
dec
xor
adc
mov
leave
pop
call
xor
or
rol
mov
arpl
lods
aaa
stc
mov
imul
cli
xchg
jo
lret
push
inc
push
inc
in
add
test
fisubrl
mov
sub
sbb
fldl
or
cli
arpl
sahf
arpl
cltd
push
jl
mov
xor
nop
mov
sub
cmp
push
cmp
push
push
shrb
push
pop
in
cwtl
out
pop
mov
lds
clc
jne
push
jne
push
sub
popf
pop
lret
mov
push
xor
test
fwait
bound
into
or
xor
cmp
test
mov
or
sbb
fmuls
mov
xor
inc
inc
dec
arpl
xchg
sbb
and
adc
ja
xchg
xchg
inc
and
push
and
sub
or
and
ret
rol
jmp
shrl
push
sub
xchg
xor
mov
nop
fmulp
cmpsb
lds
xchg
mov
add
cmpsl
mov
jmp
xor
pop
mov
test
and
and
rclb
imul
mov
stos
cmp
loope
mov
push
mov
hlt
movsb
scas
inc
mov
jno
out
adc
mov
js
rcl
xchg
cltd
stos
popa
add
movl
sbb
lods
enter
test
cmpb
and
lret
rcl
js
test
adc
push
xchg
cwtl
addb
pop
mov
mov
divb
popa
std
ret
push
push
push
jo
and
pop
ret
in
les
xor
mov
jmp
and
sub
add
dec
mov
jne
enter
faddp
jmp
rcr
mov
cmp
clc
and
pop
push
add
mov
mov
add
mov
xor
mov
or
fcompl
call
xor
inc
in
jle
mov
out
mov
loopne
js
or
cli
push
add
lret
cmp
sarb
repz
mov
rcrb
roll
ljmp
cwtl
push
outsb
mov
popf
repz
orl
inc
test
dec
mov
pusha
jne
mov
pop
in
notb
xor
jecxz
mov
cmp
mov
das
xor
in
or
sub
mov
mov
inc
jp
arpl
sub
movsl
xchg
lcall
and
jo
adc
xchg
or
mov
or
sbb
mov
push
cs
stc
cld
lock
in
stc
stc
mov
jl
mov
repz
roll
mov
loopne
testb
xor
stc
lea
lds
mov
inc
fdivr
stc
cmp
xor
movsb
icebp
or
cmp
dec
push
filds
insb
popf
fldlg2
stc
adc
lods
in
clc
cmp
stos
cltd
xor
mov
mov
popf
insl
and
mov
iret
sbbl
jge
enter
pusha
dec
pop
xchg
mov
popf
dec
mov
mov
inc
ss
ja
adc
jnp
cmp
lcall
call
in
call
lret
pushf
loopne
shrb
adc
jmp
add
dec
jne
inc
dec
das
aaa
mov
inc
mov
mov
and
cmovs
jp
mov
mov
lock
call
and
push
or
xchg
cmpsl
jg
test
clc
sbbb
cmp
adc
xor
push
movsb
inc
orl
mull
xchg
push
jecxz
and
dec
dec
mov
ds
cmp
jb
and
push
pop
push
pop
cmp
xchg
jnp
jbe
sbb
dec
test
sbb
mov
cmp
aas
bound
lea
sbb
je
mov
inc
fsubs
dec
or
cmp
xchg
mov
cld
jne
enter
mov
lea
add
or
mov
and
add
aas
and
testl
dec
push
push
call
push
inc
enter
int3
cmpsb
cmp
jmp
jmp
out
adc
dec
inc
push
fcoms
sub
mov
xchg
pop
or
xlat
fdivr
inc
or
ret
add
pusha
dec
fsts
and
add
and
lret
mov
jb
mov
push
fs
call
push
inc
je
xor
pushf
cmovl
xor
jno
push
popa
shlb
mov
jle
mov
movb
rclb
sub
sub
pop
pop
movsbl
cmp
jl
pop
fistpll
stc
loope
fldt
or
fidivs
mov
jns
clc
push
adc
and
pushf
idivl
dec
lock
push
push
test
dec
sub
loop
jmp
adcb
or
push
mov
and
jmp
mov
fwait
bound
mov
dec
enter
adc
nop
pop
mov
gs
xlat
cli
mov
push
addr16
xor
mov
dec
sbb
aas
imul
cltd
lods
clc
cmpb
call
pop
imull
mov
cmp
clc
enter
dec
push
mov
dec
popa
inc
call
push
sbb
loopne
cmp
andl
arpl
call
mov
lock
orps
lea
fnstcw
fwait
and
mov
push
mov
dec
dec
cwtl
mov
leave
mov
sbb
push
push
xor
inc
cmp
cmp
and
jge
mov
mov
ljmp
or
popa
testl
jne
jge
jle
outsb
sbb
ret
push
test
mov
cmp
dec
insl
mov
fcmovbe
cmp
jae
arpl
dec
popa
data16
dec
push
dec
xor
repnz
xchg
sbb
xchg
cmp
dec
mov
cmp
and
lock
repz
xor
or
cmp
ret
or
inc
xor
jno
sar
cld
lcall
cld
aam
nop
jmp
push
in
or
push
pop
push
push
mov
mov
repz
adc
sub
cld
mov
inc
mov
add
or
les
jmp
popa
test
inc
push
or
dec
lock
dec
and
shll
add
cld
test
add
dec
sub
in
pop
push
call
cmp
dec
popa
or
cmp
int3
in
hlt
sub
cmpsb
push
call
sub
xchg
sbb
insb
in
stc
or
rcll
mov
mov
inc
loopne
lods
popa
fisubrl
adc
loopne
ret
dec
fs
and
js
in
jp
push
leave
aaa
imul
and
ret
mov
je
adc
mov
mov
shr
lock
pop
push
inc
arpl
shl
adc
popf
in
bnd
add
inc
inc
mov
pop
cmp
dec
sahf
adc
or
sbb
push
inc
xchg
clc
repnz
add
sub
mov
add
loope
stc
inc
hlt
movzbl
bound
push
loop
lock
adc
xchg
and
rolb
repz
xchg
jge
add
mov
and
add
or
mov
pusha
inc
std
enter
loope
cmp
les
loop
inc
shl
or
xchg
ret
ficompl
dec
insb
jecxz
adcb
sbb
in
jecxz
ja
xor
pop
popa
repnz
in
push
js
insl
das
mov
in
pusha
inc
std
jo
adc
aad
push
rclb
and
test
or
cmp
or
xor
in
sbb
and
lods
cwtl
xor
adc
js
xor
mov
push
mov
inc
daa
pop
loope
movsb
pop
dec
pop
fsub
inc
stc
inc
test
ret
inc
and
sbb
loop
xchg
inc
in
pusha
jecxz
sbb
or
jecxz
and
push
aam
pop
popa
xchg
popa
xchg
inc
push
popa
and
lcall
cltd
fsub
adc
mov
fwait
mov
or
inc
test
inc
and
popf
jne
mov
push
adc
xor
jmp
pop
xor
push
shrb
cmpsl
sub
in
cmc
or
stos
bsr
mov
xor
mov
not
push
imul
in
adc
push
mov
or
inc
xorb
xchg
std
push
loope
push
mov
xlat
cs
xor
cld
lea
or
xor
xor
sbb
mov
sahf
cmp
sub
shr
lock
bound
call
int3
js
out
repnz
ror
add
inc
mov
rclb
dec
out
mov
shr
loop
rclb
push
clc
arpl
adc
push
mov
ljmp
inc
test
icebp
or
jge
cmp
ret
popf
mov
cmpsb
lods
jno
call
ret
sub
pop
loope
in
push
mov
push
dec
and
adc
dec
sbb
bound
and
mov
mov
lds
or
jmp
ss
pushf
call
inc
inc
mov
leave
mov
shl
and
ret
push
insl
psubsw
push
inc
pop
pop
xor
call
test
dec
test
cld
inc
test
loope
inc
loopne
mov
inc
movsb
mov
inc
and
lea
out
cmp
jnp
and
mov
inc
test
movsb
jp
test
inc
and
push
sub
pusha
sti
mov
and
mov
inc
or
sbb
inc
fs
jne
popf
es
ret
inc
adc
add
push
call
mov
sbb
leave
mov
pop
push
push
push
sub
inc
mov
inc
sub
push
aad
jmp
roll
jns
cmpw
clc
push
push
outsb
stos
xor
and
push
inc
fs
add
call
leave
pop
dec
and
xchg
push
or
aas
add
adc
dec
in
repnz
xchg
or
lock
xchg
lods
jecxz
call
inc
dec
cmp
jl
aam
repz
cmpsl
sbb
repz
aas
les
cmp
mov
xchg
mov
mov
stc
add
push
pop
push
aad
fstps
cmp
cmp
cmp
enter
pusha
mov
xor
pop
cltd
jle
insb
cltd
mov
pop
mov
sbb
cmp
cmp
sbb
inc
call
push
es
inc
imul
arpl
push
aaa
sub
xor
inc
jmp
adc
mov
das
test
push
push
ljmp
rcrb
repnz
call
inc
je
ret
cmp
xchg
cmp
mov
mov
mov
cmp
xchg
les
das
ret
stos
xchg
test
add
test
inc
or
inc
bound
cli
add
push
sbb
xor
xlat
cs
cltd
and
and
ret
jae
mov
dec
sbb
xchg
mov
jmp
or
and
push
or
sbb
cmp
fcoml
add
into
add
mov
movsb
cmp
inc
mov
dec
mov
ss
cmp
fs
push
mov
test
mov
or
push
cmp
and
imulb
pushf
aas
je
dec
pop
lea
add
cmp
and
cmp
js
dec
mov
dec
stos
sub
jmp
or
push
push
icebp
jno
inc
ret
jno
aas
mov
test
pop
sub
mov
mov
xchg
cmp
inc
push
jnp
adc
mov
push
xchg
enter
add
fcoml
imul
sub
pusha
ficoml
fistpll
sbb
cmovbe
cmp
lds
push
icebp
mov
push
repnz
js
aad
lcall
in
mov
test
stc
test
imul
mov
sub
mull
cmp
dec
fldenv
repz
adc
and
cmc
xor
jg
sbb
sbb
nop
push
sbb
test
mov
sub
stc
sub
sub
movsb
xchg
cmp
ret
sub
push
out
insl
enter
je
push
mov
and
jmp
daa
xchg
movsl
cmp
inc
push
jb
bnd
inc
dec
xor
or
and
mov
and
jecxz
xor
add
pop
loopne
jb
aam
push
in
and
inc
and
test
packsswb
aas
mov
xor
mov
leave
xor
sub
inc
inc
push
mov
pop
or
xchg
push
and
fisubrs
and
or
shlb
mov
and
das
push
push
mov
popa
mov
mov
movsl
aaa
and
xchg
shrb
call
xchg
aaa
dec
mov
je
mul
stc
and
rolb
dec
in
daa
jne
rorb
cmp
push
cmp
or
mov
fcomps
jnp
push
xor
ljmp
adcl
and
hlt
mov
cmpsb
dec
mov
push
mov
or
insb
addl
mov
mov
add
or
test
push
popf
adc
push
cli
xchg
dec
jle
lret
or
daa
and
inc
loope
add
int
xor
nop
pusha
sbb
inc
sub
imul
and
inc
xchg
dec
ret
je
sub
stc
push
cmp
xchg
jns
and
call
rcrb
push
dec
dec
push
aaa
int3
or
lods
mov
inc
xor
inc
lea
sbb
loop
xchg
inc
or
mov
dec
add
je
mov
push
or
lods
xchg
jne
fs
insl
xlat
pop
push
call
add
out
add
mov
mov
call
xchg
sbb
add
test
jne
ss
add
jmp
mov
rolb
cmpsb
out
adc
jbe
or
jmp
add
cmp
and
push
mov
push
xor
sub
dec
pop
inc
inc
call
inc
adc
call
dec
xchg
ljmp
jp
cmpsl
sbb
cmpsb
enter
mov
stos
je
subb
add
iret
push
and
push
xchg
pop
ret
xor
add
xchg
dec
sbb
or
jmp
les
leave
push
jmp
xchg
pushf
insb
lods
pop
sub
mov
jmp
lret
insl
ss
mov
cmp
sti
sbb
jmp
cmovbe
insl
adc
inc
sbb
push
jmp
push
push
out
je
ss
adc
add
daa
adc
clc
xchg
test
loop
jle
mov
pop
aaa
dec
pop
pop
mov
adc
add
ret
add
dec
test
inc
add
jnp
xchg
loope
mov
aam
xchg
or
shll
pop
push
dec
inc
inc
call
xor
sbb
stc
jne
sbb
or
and
testl
push
data16
pop
jmp
mov
jl
mov
je
aam
pop
push
dec
push
addr16
in
je
inc
pop
test
push
into
lods
and
aam
add
call
or
xor
lock
inc
mov
int3
or
xchg
push
aam
test
insb
xor
addr16
push
cwtl
sahf
iret
ds
xchg
xchg
ja
add
test
cwtl
mov
insl
adc
sbb
lods
mov
push
mov
mov
and
sti
lds
cmp
test
mov
cmp
xor
inc
adc
imul
mov
jae
in
imul
cmp
fldenv
inc
push
xchg
outsb
pop
jnp
pop
outsl
clc
cmp
imul
cmp
in
icebp
jno
rclb
repnz
pop
and
jb
add
or
lret
mull
inc
fisttps
dec
pusha
add
movsl
dec
xchg
movsb
mov
xor
ja
lahf
movsb
xchg
pop
and
std
mov
jne
or
cmp
jmp
jl
ficomps
mov
mov
mov
sub
test
mov
sub
sbb
into
clc
pusha
adc
test
or
cwtl
cmpsb
cld
jecxz
rcrb
ds
jmp
xchg
mov
mov
add
add
and
and
in
lea
sbb
cmp
add
mov
test
mov
aam
sbb
and
jb
std
adc
dec
jbe
sahf
sti
test
xor
cli
pop
xor
daa
imul
inc
adc
xchg
inc
push
out
push
mov
mov
push
ds
pop
inc
sti
das
pop
shlb
fdiv
sbbl
clc
mulb
roll
pop
mov
das
sti
xlat
in
and
adc
add
mov
sbb
and
sub
push
lahf
adc
push
or
call
sub
shrb
and
out
dec
sub
call
sbb
pop
cmp
jne
gs
gs
cld
or
mov
jno
push
mov
lock
jmp
les
push
cld
push
rcll
fistps
inc
dec
rcrl
arpl
loopne
xchg
fildl
mov
jmp
push
test
sub
cmpsb
lret
push
hlt
test
xor
xor
sub
dec
inc
mov
jb
jmp
or
adc
test
lods
xlat
jmp
push
dec
and
les
mov
lock
push
fstpl
imull
inc
pop
add
je
fcomps
cmp
fidivrl
sbb
inc
inc
adc
xchg
pusha
adc
hlt
andb
xchg
sub
cmp
test
daa
mov
dec
adc
sub
xor
jmp
inc
call
mov
in
dec
ds
es
dec
push
dec
mov
sub
cs
or
loop
sub
or
adc
daa
jne
loop
adc
leave
or
cwtl
call
dec
pop
mov
jmp
dec
xchg
inc
call
adcb
addr16
jle
dec
add
push
xchg
adc
mov
or
add
mov
cmp
int
sub
pop
cmp
add
lea
jmp
mov
dec
mov
sub
cmp
and
mov
dec
js
dec
lock
mov
sub
add
aaa
inc
dec
or
fildl
add
jb
jmp
xchg
sbb
push
adc
inc
arpl
sbb
cmp
stos
stc
mov
jo
sbb
push
mov
lods
mov
notl
mov
adc
xchg
sbb
call
push
js
jl
cwtl
sbb
xor
outsb
cmpsb
push
cmp
cwtl
cwtl
sub
pop
push
xorl
sub
sub
xchg
es
in
mov
push
xor
mov
add
sbb
add
and
les
inc
cltd
je
pop
aad
bound
call
fmuls
pop
adc
dec
sub
or
dec
inc
daa
and
test
xchg
mov
mov
mov
and
sub
es
push
nop
jno
or
add
add
inc
aam
adc
push
nop
jne
movsb
daa
repnz
xor
subb
pop
and
orb
scas
jl
out
out
and
mov
jo
lret
enter
push
shrl
xor
dec
sbb
sti
and
andb
push
ja
mov
insb
mov
and
xor
push
xchg
adc
insb
std
fcoms
adc
adc
cltd
inc
sbb
push
adc
push
push
xor
and
mov
jno
rcrb
clc
xor
jle
and
sub
loopne
pop
cmp
and
rorb
sbb
xchg
mov
xor
add
push
out
rolb
test
inc
sbb
xor
imul
mov
sbb
xlat
cs
pusha
test
sub
push
mov
js
popa
xchg
repnz
into
xor
inc
jp
and
das
or
xchg
enter
mov
xchg
xchg
and
sbb
aam
and
mov
sbb
je
pop
das
pusha
jno
cmp
pusha
das
push
call
push
inc
or
sub
cmp
jbe
daa
orb
mull
mulb
fcomps
push
cmpsl
pop
out
mov
aaa
sar
sbb
push
scas
sbb
scas
iret
scas
jle
pop
jmp
aaa
and
test
and
or
jnp
adc
xchg
mov
cmp
inc
or
sbb
cmp
add
push
or
or
clc
and
int3
sbb
fcompl
dec
mov
dec
rorl
cs
xor
data16
xchg
int3
mov
fisubl
mov
icebp
shlb
imul
mov
push
cmp
cmp
cmp
add
mov
cmpsb
inc
std
sub
or
add
and
or
les
in
fs
in
and
shrb
jns
and
inc
inc
add
and
xor
dec
sub
mov
dec
push
push
adc
adc
sub
inc
fsubs
xlat
pop
sbb
cwtl
xor
add
adc
std
lock
sbb
jp
pop
in
adc
push
pop
inc
and
sub
xchg
and
lods
adc
xor
mov
jno
sub
mov
test
lods
adc
push
test
arpl
push
and
add
sbb
xor
imul
push
outsb
dec
mov
or
pop
test
jo
push
push
adc
adc
mov
or
and
sbb
xlat
sub
dec
outsl
mov
inc
mov
push
or
jecxz
mov
xchg
fwait
mov
movb
hlt
sbbb
push
lcall
jle
adc
cld
add
mov
jbe
push
decl
adc
dec
ret
jl
stos
popf
adc
cmpsb
xchg
add
dec
push
pop
cmp
insl
mov
repnz
dec
push
ret
dec
sbb
idivb
mov
leave
sub
popf
sub
sbb
adc
dec
into
ss
lret
sbb
sub
inc
rcll
inc
pop
adc
stos
inc
sub
test
test
add
dec
jb
xchg
pop
pop
shll
rorl
stos
add
jg
lea
insl
call
loop
adc
push
sbb
adc
daa
movsl
mov
mov
push
push
sub
xchg
add
and
addr16
rcpps
xor
push
pop
daa
add
jmp
mov
push
lea
and
sub
push
mov
mov
xor
lret
sbb
aaa
cwtl
jb
inc
mov
pusha
movb
sbb
jg
inc
jl
sbb
add
aaa
fmuls
sbb
sub
sbb
xor
push
push
lret
insl
lret
mov
push
mov
into
or
pop
and
test
mov
cmpsb
pusha
xor
out
inc
orb
rorb
cltd
or
lds
push
or
ss
mov
push
pusha
out
int
lods
data16
call
fildl
push
jmp
sub
mov
insb
sub
mov
sbb
push
pusha
out
push
lret
repnz
cmpsb
test
mov
mov
xchg
mov
pop
insb
sub
mov
add
aaa
pop
xor
hlt
adc
add
sub
sbb
xor
int3
push
dec
mov
inc
mov
sbb
sbb
jbe
fisubrl
lods
fwait
jne
out
mov
js
inc
sbb
stos
in
fsubrl
loopne
out
inc
mov
sub
je
mov
pop
xchg
xchg
insl
pop
sbb
push
inc
jne
icebp
ficompl
jl
jmp
out
lods
mov
push
pop
and
nop
movsb
cld
jle
and
push
les
dec
sub
leave
ret
pop
in
inc
aad
sub
ret
les
mov
jmp
push
jge
ss
std
imul
pop
fisubrl
add
dec
or
sub
popf
pop
mov
push
mov
ljmp
aad
jmp
push
or
push
mov
dec
jne
pop
adc
jle
loope
lret
and
jno
push
mov
jbe
xchg
sbb
jge
les
aas
ret
sbb
sub
test
push
xor
push
xchg
or
in
fisubrl
dec
out
pusha
enter
dec
push
push
stc
push
popa
mov
lret
lcall
and
or
call
push
shlb
push
pop
adc
ret
sbb
lcall
stos
or
jne
movsb
loope
add
dec
xchg
aas
sbb
faddp
jo
xor
in
add
lods
mov
xchg
jne
or
inc
lock
lret
xor
pushf
dec
andb
insl
adc
fildll
scas
mov
lds
mov
or
jae
adcl
add
mov
cld
enter
push
fnstcw
xchg
xchg
les
xchg
add
or
add
jl
push
lods
jmp
popf
sbb
xor
mov
mov
aam
sbb
cld
fildll
sub
mov
jle
hlt
or
dec
ss
rclb
cmc
and
adc
mov
jl
mov
push
push
or
into
pop
movl
push
xchg
pop
dec
movsb
cmp
sbb
or
and
add
mov
out
inc
jmp
sub
cmp
pop
sarl
and
inc
repnz
fs
xor
xchg
insb
dec
or
out
pop
call
add
and
or
sbb
cmp
dec
or
sbb
dec
mov
ljmp
and
int
test
jmp
ret
test
sub
pop
and
popf
cmp
mov
sub
sbb
in
sbb
jp
lret
cli
lret
insl
in
adc
addr16
push
cmp
xor
daa
or
adc
jl
jo
inc
cld
stc
dec
dec
sahf
movsb
add
jb
xchg
cmp
sbb
mov
stos
or
cmp
add
jecxz
or
dec
repnz
mov
ret
in
jnp
pop
or
mull
or
inc
cli
xchg
adc
mov
addl
pop
ds
dec
mov
adc
mov
dec
mov
daa
rcrl
dec
adc
adc
push
push
push
aas
pop
inc
pop
sahf
mov
or
mov
dec
push
mov
cmp
adc
mov
mov
pop
or
cld
les
xchg
rcll
cmp
out
pop
in
les
shll
int3
mov
xchg
jnp
in
add
adc
xor
cld
xchg
add
mov
movsb
xlat
adc
sbb
and
cmp
adc
sysexit
dec
or
add
mov
mov
inc
add
jmp
mov
daa
xor
jne
pop
notb
sti
dec
sub
int3
xchg
enter
stos
or
addr16
jl
jmp
push
pop
jmp
loopne
adc
dec
jp
enter
adc
addl
mov
add
sbb
inc
sub
shr
popf
pop
and
lds
mov
mov
and
add
or
push
jmp
addb
or
cs
ret
push
jl
icebp
add
pop
fadds
popa
hlt
add
cmp
pop
sbb
rorl
sub
jge
rolb
push
adc
mov
or
clc
jns
inc
jge
jl
mov
in
xchg
subb
adc
push
mov
push
or
push
subb
add
mov
fisubrl
push
mov
or
xchg
or
push
xchg
movsb
sub
pop
aad
dec
dec
add
movsb
adc
dec
dec
ss
adc
mov
cltd
pushf
sub
adc
dec
xchg
adcb
inc
pop
push
sub
inc
jmp
mov
mov
fsts
fdivr
sti
ret
push
clc
call
dec
sbb
cwtl
xchg
nop
push
call
xchg
jns
cmp
mov
mov
clc
enter
or
or
cmp
mov
insl
testb
mov
nop
insl
shll
cmp
xorl
and
fimull
mov
sbb
xchg
push
testb
mov
fs
jns
jns
xchg
fcoml
xor
adc
mov
js
int3
xchg
popa
adc
dec
sarb
test
inc
int3
xchg
into
int3
shll
out
push
add
clc
fmull
sldt
lock
add
xor
shl
lea
repnz
mov
adc
mov
mov
jmp
fwait
jb
aam
inc
push
rolb
dec
xor
loope
loop
or
loop
and
into
jmp
fs
push
sbb
cwtl
fs
adc
push
enter
fldl
cwtl
mov
or
pop
daa
xchg
pushf
xlat
lea
mov
int3
lret
jge
inc
rcll
add
xchg
mov
pminub
jge
mov
mov
cmpsl
fimull
into
mov
adc
scas
xchg
mov
dec
sbb
push
push
add
shr
adc
adc
sti
shll
and
or
jae
mov
pop
sub
xor
pushf
sbb
popf
add
orl
cwtl
add
jge
fildll
mov
sbb
mov
cmp
and
or
jne
dec
mov
adc
and
adcb
cmp
jns
insb
movsb
and
cmp
ret
xor
js
in
dec
xchg
sub
outsl
add
cld
ja
lods
loop
les
pop
aaa
mov
in
arpl
add
hlt
jno
and
sub
push
mov
mov
push
call
nop
aas
iret
pop
mov
inc
mov
lock
test
adc
push
push
and
jmp
mov
mov
sub
addb
std
cmc
inc
mov
jmp
addr16
icebp
sbb
syscall
push
rorb
out
jmp
push
mov
stos
in
xor
shl
xor
lea
or
andl
cwtl
mov
fdiv
and
inc
pop
andb
xchg
pop
inc
dec
cli
mov
fwait
lcall
movsl
stos
lds
or
pushl
gs
ret
push
call
data16
add
cmpsl
out
mov
or
dec
daa
sub
push
gs
pushf
dec
addl
cmp
cmpl
call
jno
daa
or
inc
jo
lods
and
jae
or
out
push
push
xlat
jecxz
sbb
in
inc
out
fdivl
and
inc
imul
mov
aaa
nop
and
arpl
inc
mov
mov
or
call
push
loop
xor
loop
xor
enter
push
pop
pushl
mov
pop
mov
pop
pop
pop
ret
xor
cmp
adc
add
inc
inc
loopne
xchg
push
ret
pop
pop
push
adc
adc
add
add
icebp
test
jle
cmp
je
cmp
jne
jns
sbb
fadds
inc
mov
iret
in
jno
test
push
jmp
adc
push
and
jne
inc
add
icebp
test
jmp
mov
xor
mov
adc
addl
js
jge
cmp
push
enter
sbb
jmp
xchg
jle
push
rcrl
fwait
and
xor
jae
xor
mov
and
pop
sbb
test
pop
cmp
ja
iret
mov
loop
addb
mov
lcall
add
les
mov
xor
sahf
int3
stos
loopew
out
inc
jmp
inc
cmp
shlb
push
or
adc
sub
test
pop
enter
movsl
call
movsl
out
or
test
inc
push
or
rcrb
xor
mov
adc
sub
call
inc
mov
pop
add
test
jne
jmp
and
lock
jmp
stos
adc
pop
push
jne
jne
inc
mov
inc
out
push
dec
insb
mov
or
or
jge
inc
cmpb
cmc
mov
inc
mov
stos
push
sub
sbb
cmpsl
mov
cmp
add
jne
lea
mov
mov
cmp
jge
cmp
je
cmp
inc
adc
mov
mov
cmp
jl
cmp
adc
mov
mov
into
cwtl
or
cmp
jne
incl
rcll
jno
jge
add
cmpsl
fs
clc
push
dec
in
mov
leave
ljmp
imul
stc
jmp
mov
cmp
test
pop
nop
mov
jnp
push
cmp
jne
jmp
inc
mov
lds
inc
cs
mov
cmp
jne
cmp
das
pop
add
outsb
mov
mov
lea
incl
mov
jmp
adcl
idivl
push
mov
aas
pop
or
pop
and
fcomps
add
sub
push
or
sbb
inc
ret
add
mov
es
adc
add
ret
dec
lahf
scas
pusha
or
add
stos
push
hlt
std
dec
and
movsl
popa
fildll
xchg
roll
mov
insl
add
stos
jb
test
mov
or
cmp
popa
clc
cwtl
imul
sbb
rcl
push
pop
dec
cmp
dec
push
dec
inc
orl
stos
mov
pop
std
movsl
cmp
mov
cmp
movsl
mov
add
es
loopne
mov
xchg
loopne
add
cmovge
push
push
lahf
ret
cmp
shlb
inc
sbb
push
outsl
jns
jne
test
mov
adc
enter
data16
scas
test
adc
inc
addr16
aaa
into
jge
pop
rorb
gs
aam
aad
cld
je
faddl
pop
push
inc
out
call
cltd
or
add
out
mov
xor
in
cmp
cltd
xchg
add
scas
enter
add
scas
orl
push
push
ss
adc
cmp
xorl
xchg
jmp
push
or
push
hlt
call
pusha
add
ficompl
rolb
mov
push
stos
clc
push
adcl
mov
cmp
adc
xor
test
je
add
mov
mov
pop
adc
adcl
call
sbb
call
call
mov
call
out
and
sub
out
pop
mov
jl
cmp
icebp
pop
fcomp
inc
enter
mov
jo
fnstenv
xchg
mov
push
add
mov
xor
dec
sub
iret
mov
adc
xchg
fwait
cmp
push
sbb
cmpsl
lds
and
push
testb
adc
jmp
inc
adc
add
sub
sub
pushf
jae
gs
nop
jae
jb
push
lods
pushf
jnp
inc
nop
pushf
and
inc
adc
cmp
jg
jl
lock
or
jb
sub
mov
cmpsl
mov
pop
int3
lds
imul
cmpb
jb
loope
jmp
xchg
push
inc
shr
cmpsb
dec
dec
xchg
adc
je
das
fwait
loope
push
and
fsubr
and
call
arpl
and
sub
test
sub
rorb
sub
and
add
ljmp
cmp
push
dec
or
andl
jne
call
pop
sbb
push
es
xor
push
push
pusha
pop
xchg
mov
pop
and
gs
push
repnz
mov
inc
xchg
push
repnz
pusha
jmp
inc
add
pop
outsb
mov
in
cmp
mov
int
imul
or
sbb
movsl
xchg
mov
int3
cli
in
repnz
ss
add
push
xchg
push
stos
jmp
add
cmp
mov
add
add
in
fsubs
and
jne
adc
insl
sti
jmp
add
add
lret
mov
loop
xlat
xchg
sub
add
mov
cmp
rorb
inc
mov
call
mov
adc
xchg
sub
pushl
xor
add
push
mov
add
aad
cmp
xchg
pop
lahf
cmp
clc
and
movl
mov
arpl
ror
push
dec
pusha
xor
and
and
push
sub
sub
pop
add
test
push
outsb
xor
mov
fs
incb
inc
or
mov
adc
cmp
clc
jle
andl
jmp
mov
cmp
je
cmp
je
cmpl
jmp
cld
mov
in
sub
inc
mov
dec
outsb
cmp
aam
pop
popa
add
rorl
std
ja
push
inc
and
mov
lods
adc
pop
roll
inc
jne
mov
divl
scas
inc
out
dec
and
mov
push
push
mov
mov
sbb
adc
add
paddusb
xor
idivl
pop
adc
scas
lea
mov
int
pop
sbb
jmp
cmp
adc
test
cmp
in
xor
aad
xor
pop
pop
mov
push
adc
call
jb
add
stc
imul
pop
adc
dec
sbb
ja
enter
jb
push
pushl
int3
fstps
jmp
test
lahf
rcrl
wbinvd
sbb
rcrb
call
pop
in
jnp
and
arpl
adc
mov
call
and
nop
sub
mov
scas
inc
inc
adcl
dec
fiaddl
je
xlat
test
jmp
jmp
adc
jecxz
ljmp
sub
lea
movsbl
pop
cltd
mov
push
cmp
inc
cmp
dec
inc
decl
dec
rcll
xor
lahf
dec
out
add
xor
mov
in
jmp
clc
pop
jbe
cmp
mov
cltd
loope
cmpsl
jg
pop
sub
push
push
dec
push
jecxz
mov
xor
sub
mov
mov
sub
sbb
rorb
repnz
movsb
js
imul
int3
or
aad
cmp
or
mov
call
andl
cmp
dec
adc
mov
outsb
nop
pushf
call
add
inc
sbb
jne
ret
test
pop
ja
fmuls
push
jns
aas
add
mov
call
loopne
jge
add
jmp
push
pop
sub
sti
test
lock
xor
adc
push
mov
jge
call
and
call
mov
loope
clc
mov
adc
jge
xor
enter
add
in
insb
test
int
stc
and
in
inc
cltd
and
add
and
sahf
push
dec
mov
inc
push
rep
mov
pushf
adc
out
jne
dec
les
mov
cld
add
jge
movsb
jl,pn
fdivs
mov
push
dec
incl
sbb
pop
movsl
orl
push
lea
ret
mov
dec
and
push
mov
fldenv
jne
mov
add
cld
pop
pop
inc
fisubs
mov
inc
sub
mov
xchg
jne
lods
test
adc
dec
daa
sub
and
push
insl
adc
ret
icebp
jo
pop
imul
dec
clc
add
cmp
out
inc
out
lods
repnz
call
jmp
xchg
test
inc
movb
xchg
mov
add
sbb
or
cmp
pusha
push
dec
cmp
mov
fadd
jecxz
add
adcl
add
test
pop
lahf
dec
inc
jmp
xchg
pop
dec
mov
jns
mov
mov
sub
add
adc
adc
test
mov
lock
subb
pushf
inc
inc
adc
call
cwtl
lret
testl
xchg
push
inc
push
push
sub
aad
test
fsubs
lret
xchg
xor
dec
mov
jbe
mov
add
imul
call
shl
movsl
adc
adc
push
xor
mov
mov
stc
sbb
and
loopne
adc
pop
addr16
out
and
mov
xchg
inc
popf
shrl
mov
shlb
sbb
mov
inc
in
xchg
jbe
sub
call
outsl
movsl
push
and
rorb
mov
mov
movsl
lods
xchg
cmpsb
test
mov
ljmp
das
mov
xorl
push
xorl
leave
lock
mov
in
pop
fcoms
xchg
hlt
xor
lods
lret
imul
gs
inc
push
inc
push
daa
shr
xchg
sbb
out
mov
or
xor
dec
mov
cld
jmp
mov
sbb
inc
loopne
cmc
jae
adc
dec
call
inc
les
mov
cld
enter
test
dec
popa
lods
push
dec
push
std
repz
jne
push
stos
ljmp
ret
jne
jl
lock
mov
mov
dec
insl
xchg
pop
gs
jecxz
mov
lea
incb
lds
inc
mov
in
cs
lock
push
sbb
fstp
xor
or
lock
hlt
je
push
mov
push
push
mov
mov
pop
bnd
aam
sbb
inc
pop
xor
cwtl
call
popa
stc
in
xchg
mov
adc
inc
or
loopne
out
lahf
arpl
lea
and
hlt
xor
imul
cmp
popa
idiv
inc
push
ljmp
sub
cmp
pop
sbbl
fcompl
mov
mov
shrb
jno
cs
mov
push
inc
push
fadds
repnz
jge
jle
call
fcmovnbe
mov
fidivrs
pop
mov
dec
or
push
mov
mov
aam
ret
add
and
xor
add
xchg
sub
into
or
decb
mov
movsl
push
and
add
les
adc
sub
inc
arpl
adc
in
adc
sub
sub
push
push
adc
in
andb
jo
inc
push
fimull
jecxz
or
jns
xchg
xor
dec
sbb
sbbl
daa
push
pop
out
stos
jnp
jae
adc
call
add
inc
in
cmpb
xchg
shl
sbb
lods
xchg
enter
imul
int3
adc
in
add
xor
adc
mov
imul
lods
in
push
push
pop
icebp
jmp
mov
lock
sbb
sub
out
lahf
aam
push
adc
orl
in
dec
js
rclb
test
or
jo
mov
rorb
inc
or
mov
adc
test
inc
or
lea
es
cltd
mov
or
shl
repz
mov
push
adcb
in
testb
mov
mov
mov
xor
cmpsl
xor
rorb
xchg
push
pop
cmp
mov
inc
or
add
inc
mov
testb
xor
dec
push
aaa
hlt
aam
push
jmp
insl
shrl
leave
lea
outsb
cmpb
mov
call
enter
jae
pop
ss
dec
add
xor
mov
push
add
sahf
cli
add
inc
fnstcw
push
std
sbb
mov
pop
push
add
inc
ret
std
lock
jbe
inc
mov
jp
push
mov
call
pusha
lret
jnp
push
mov
lcall
insb
pop
mov
data16
ret
hlt
mov
xor
pop
and
jb
mov
mov
clc
cmp
dec
cs
or
xlat
pop
inc
jmp
adc
and
clc
mov
mov
out
jecxz
mov
inc
pop
rclb
pop
ret
adc
mov
aas
pop
movsb
mov
mov
out
pop
aam
lock
add
adc
inc
and
pop
push
stos
xor
mov
sub
mov
fidivrl
rcl
jmp
jmp
jae
and
fistl
mov
mov
ficoml
push
shlb
clc
test
por
out
adc
xchg
jne
push
push
nop
jmp
sub
das
xchg
xchg
cmp
mov
mov
or
push
mov
push
ss
pushf
lcall
call
mov
sub
incb
es
lock
xor
inc
jmp
push
xchg
int3
fdivrl
psrad
lods
in
rorb
and
sub
push
mov
fsts
hlt
test
mov
testb
mov
clc
pop
leave
call
movsb
movsl
nop
or
cmpsb
lea
lds
ret
push
fstpl
or
mov
cmp
add
adc
movsl
rorb
test
or
jo
movlps
push
inc
mov
sbb
inc
xchg
mov
fiadds
dec
js
pop
mov
cmp
jge
xchg
dec
scas
xlat
sub
dec
es
jbe
xor
inc
in
fs
sub
enter
test
roll
jns
inc
adc
pop
xchg
jns
gs
jecxz
inc
push
bound
push
mov
and
sbb
sbb
pop
out
mov
shl
insl
pop
iret
sub
push
sub
into
lcall
fmuls
jg
insl
rclb
mov
jne
dec
fs
dec
jnp
movsb
and
jl
mov
aam
inc
dec
or
fisttpl
xor
jmp
mov
mov
mov
movsb
lea
insl
stos
adc
and
arpl
add
incb
lret
push
cmp
sub
out
fcomps
ss
aas
out
mov
mov
push
adc
pop
fmull
mov
data16
es
test
mov
sbb
movsl
mov
inc
cmp
and
add
push
cmpsb
cmp
push
daa
cld
lret
test
or
cmp
mov
movsl
rorl
mov
call
dec
test
mov
and
inc
jp
push
push
out
push
adc
xor
fists
and
sub
push
push
lds
mov
push
sbb
mov
adc
xchg
jl
or
enter
ror
ret
push
push
stc
ss
mov
jo
popa
hlt
loopne
mov
call
or
movsb
cmp
jb
rcl
xchg
fidivrl
rolb
pushf
cmp
rcrb
push
test
and
jnp
in
xchg
xor
adc
jl
shl
nop
jnp
js
pushl
cmpsl
mov
inc
xchg
push
push
test
or
or
push
pop
jmp
mov
lds
pop
dec
cmp
in
adc
lods
jbe
push
xor
fs
loopne
push
into
sub
leave
push
ja
pop
repnz
and
clc
push
dec
dec
rorb
dec
sbb
repnz
jns
and
ss
sub
dec
push
repz
push
cmp
mov
in
mov
push
push
inc
insb
jno
aam
or
lcall
add
xlat
adc
push
or
jno
mov
and
outsl
or
jg
push
scas
and
lods
push
xchg
push
jmp
push
in
xor
mov
shl
sbb
dec
sub
mov
mov
out
or
lea
and
add
rclb
scas
lods
push
add
cmc
imul
ds
neg
pop
sub
in
xor
in
mov
mov
daa
call
cmp
aaa
test
add
add
push
mov
push
hlt
jl
xor
in
push
mov
or
cli
xor
mov
sbb
fs
lahf
add
mov
mov
lret
out
jns
add
jne
jne
out
xlat
lods
cmovb
cmp
push
incl
mov
cwtl
inc
inc
and
or
call
leave
rclb
mov
push
push
scas
lods
and
shr
jp
sbb
xlat
fsub
popf
and
adc
imul
inc
xchg
add
inc
inc
mov
inc
cmp
std
jne
popf
or
clc
push
bound
lcall
push
repz
pop
jbe
std
mov
movsl
mov
call
push
sub
mov
xor
mov
add
mov
or
jno
jne
dec
pop
leave
iret
call
and
sbb
mov
rcll
or
adc
rcl
and
cmp
sbb
jecxz
cwtl
pop
cmp
imul
call
pushf
mov
mov
jge
or
enter
push
lea
dec
mov
call
mov
int
push
stos
rorl
call
ss
insb
fs
enter
repnz
imul
and
inc
xor
adc
pop
into
bound
cltd
mov
and
inc
xor
movsb
dec
in
cld
clc
sub
bnd
addr16
dec
pop
push
cld
mov
xchg
scas
mov
jbe
xchg
fcmovb
xor
or
stos
dec
adc
and
or
push
loop
jecxz
test
rorl
and
mov
mov
xchg
xor
add
fimull
push
call
push
mov
leave
dec
lcallw
fsub
gs
mov
fs
push
sub
inc
clc
and
jecxz
mov
pop
sbb
or
scas
leave
sub
push
in
sbb
inc
pop
andb
jl
adc
mov
and
das
cwtl
push
jb
jle
loope
cmp
dec
inc
jle
call
mov
inc
add
inc
loop
cmpsb
xchg
xchg
je
inc
cmp
dec
add
jl
pop
test
cmp
and
push
add
cmp
adc
inc
movsb
or
sub
add
push
xor
pop
mov
xor
mov
adc
cmp
imul
and
test
jle
call
jg
pop
inc
cmp
jl
andb
cmp
into
and
dec
loope
ljmp
add
imul
inc
push
push
sbb
loopne
ljmp
pop
leave
or
inc
cld
imul
clc
or
in
adc
loope
push
lret
mov
add
jne
je
js
repz
lea
xor
arpl
or
pop
mov
cmovl
ds
cmp
xor
cli
pusha
mov
ljmp
pop
jp
add
mov
jp
and
and
jmp
enter
mov
aas
hlt
add
inc
and
add
rolb
clc
or
call
in
sub
imul
push
iret
mov
mov
cld
jns
lds
push
pop
cmpl
stos
pop
and
push
andl
adc
mov
fmulp
inc
push
and
call
push
mov
insb
cmp
mov
xchg
jl
call
or
pop
sbb
stc
pop
sbb
popa
pop
cmp
shlb
xchg
mov
fisubs
mov
loop
and
push
jmp
or
dec
daa
pop
loop
sub
fbld
fistps
pop
loope
cltd
pusha
xchg
leave
bound
call
repnz
mov
notb
pop
rorb
je
lea
data16
push
jne
sub
mov
mov
mov
sub
dec
adc
push
add
js
dec
add
lea
call
imul
xor
test
test
fldl
pop
inc
out
leave
mov
rcll
in
je
and
fcompl
xchg
sbb
movsb
into
xchg
call
sahf
mov
std
jb
xchg
push
inc
push
mov
dec
add
cmp
or
out
dec
mov
rclb
push
and
and
dec
cmp
push
andl
out
ljmp
or
fnsave
sub
sub
shlb
rorl
sub
xor
call
insb
mov
dec
mov
jle
ror
rclb
pop
push
mov
cmp
test
ret
mov
nop
mov
ror
ror
je
push
xchg
mov
mov
lret
mov
dec
or
sti
jae
cmp
add
mov
shr
and
jge
les
pop
pop
or
jge
ja
and
cmp
mov
addr16
dec
leave
in
inc
dec
call
fwait
inc
in
xor
test
xchg
jp
pop
nop
jecxz
pop
je
je
decl
jne
dec
movsl
mov
mov
inc
leave
push
dec
sub
int3
push
sub
cld
aad
div
push
enter
sub
mov
enter
add
insb
aaa
xchg
xchg
jnp
enter
leave
enter
popf
mov
fcmovnb
idivl
push
and
out
inc
lods
sbb
lea
dec
or
aam
cld
fildll
je
pusha
jge
or
inc
fstpl
push
push
push
push
xchg
movsl
pusha
push
adc
sbb
adc
cli
inc
testl
jge
add
rcll
ljmp
mov
push
xchg
rcll
xchg
push
push
mov
fisubl
mov
shl
dec
insl
daa
pop
xchg
dec
int
jg
cmp
adcb
pop
les
mulb
std
jae
loope
loope
jno
into
xlat
push
sahf
xchg
adc
cld
inc
addl
sub
xor
push
jne
sub
test
cld
cld
push
aad
mov
lds
mov
es
push
ret
dec
and
push
xor
xchg
adc
xchg
or
movsb
dec
je
ss
fldenv
mov
and
push
inc
test
aas
jo
add
je
iret
out
xchg
pop
sbb
pusha
fisttps
jle
mov
xor
inc
cmp
lock
sbb
fstpt
xchg
and
rep
mov
add
push
jp
cmp
fmul
push
cmp
es
and
adc
lods
add
fs
mov
hlt
xchg
push
adc
popf
cmp
push
xchg
int3
inc
fmull
push
pushw
pop
lds
rcrb
sub
jle
add
test
xchg
mov
data16
lock
int3
xchg
sbb
sbb
inc
lret
xchg
shl
fdiv
mov
add
ret
jmp
inc
dec
loopne
popf
dec
gs
or
sbb
sbb
filds
mov
adc
jo
push
hlt
push
xchg
or
cld
pop
and
fwait
aam
mov
cld
xor
jle
jl
adc
mov
ret
push
cld
repz
adc
jl
or
movsl
mov
test
jge
xlat
pop
cmp
jne
test
lods
and
mov
cmp
insb
xchg
cmpsl
or
push
cmp
pop
inc
xchg
lret
xor
mov
mov
test
in
cmp
cwtl
mov
cmp
push
pop
or
lock
inc
hlt
add
psraw
sarb
jbe
cmp
sbb
js
xor
and
sbb
lret
and
clc
pop
repnz
xchg
sub
cwtl
mov
pushf
sub
push
out
call
push
add
sahf
inc
jne
push
push
push
jmp
mov
test
push
push
les
test
inc
or
les
fisubl
adc
xor
call
into
push
in
enter
push
push
and
inc
aam
pop
mov
mov
inc
pop
mov
adc
outsl
push
or
aam
rcrl
pop
dec
jo
shll
jmp
mov
aaa
mov
pop
fsubl
js
mov
addl
test
or
add
jmp
mov
push
sub
imul
mov
arpl
sbb
call
je
scas
sbb
or
push
adc
in
xor
test
fisttps
adc
loop
xor
in
mov
inc
cmp
ljmp
and
push
lret
leave
cs
push
cmc
fiaddl
dec
shr
sbbl
and
clc
push
or
inc
xor
dec
xlat
sub
test
xchg
inc
mov
push
fdivl
and
hlt
in
cmp
addr16
sbbb
mov
out
mov
popf
pop
clc
jo
sub
xchg
mov
int
jb
inc
dec
mov
dec
or
test
ljmp
and
orl
pop
and
mov
sti
loopne
inc
in
movsl
xchg
cmc
sti
sbb
inc
mov
test
loopne
add
je
push
inc
dec
jmp
test
jb
xchg
sarl
add
xor
or
inc
add
jmp
or
in
or
movsl
je
ss
and
xchg
int3
inc
dec
ret
mov
mov
and
enter
mov
adc
xchg
or
and
clc
adc
je
ret
les
mov
insb
xchg
adc
or
add
or
adc
push
mov
xchg
cli
pop
imul
sahf
in
dec
push
notb
and
aam
add
loopne
je
pop
push
call
aam
outsl
xchg
hlt
int
sub
or
in
jge
cmp
add
and
push
mov
lds
cli
jge
cld
call
inc
push
fdivl
sub
push
in
xchg
enter
sub
je
popf
test
mov
push
dec
inc
and
mov
jg
dec
sub
sbb
in
jmp
bound
fadds
and
jmp
xor
sub
xor
push
push
stc
xor
jbe
dec
inc
movsl
shlb
mov
mov
xor
imul
fptan
xor
mov
jne
sub
insb
les
shlb
cwtl
mov
test
movsb
mov
pop
mov
sub
addb
jne
cmp
jae
mov
inc
loop
pop
jbe
add
push
add
jp
and
pop
xor
dec
adc
es
in
and
push
jbe
mov
push
jg
js
lahf
lods
lahf
stos
mov
pop
pop
inc
cmp
mov
in
jmp
jg
lods
aaa
pop
and
leave
inc
ds
jmp
mov
or
dec
inc
fs
scas
int
push
jle
xor
rolb
mov
jge
xor
adc
pop
adc
rorb
cwtl
xchg
and
dec
subl
pop
jbe
mov
sub
pop
xchg
cmp
ret
test
loop
daa
movsb
lea
inc
mov
mov
dec
cli
xor
xchg
cmc
int3
or
adc
push
sbb
cmp
pop
jb
jmp
cltd
mov
or
jmp
mov
adc
mov
cmp
in
xor
addl
pop
jae
sbb
sbb
adc
cli
iret
fcomi
cmpsb
jo
jmp
xchg
mov
popf
add
or
xor
xchg
push
iret
dec
push
dec
clc
xor
mov
mov
roll
into
adc
das
leave
mov
and
lock
xorl
sbb
mov
or
or
inc
ljmp
adc
adc
aam
push
mov
cmpsl
or
push
inc
push
add
mov
movsb
test
ret
movsb
lods
add
cld
xchg
xchg
add
mov
jo
mov
xchg
xchg
xor
stc
imul
fcomps
pop
lods
leave
mov
cmpb
call
dec
fiaddl
cwtl
pop
js
insl
outsb
mov
cmp
push
push
jmp
xchg
lock
rolb
mov
push
lods
cwtl
cmp
push
pop
popf
jmp
dec
inc
and
and
dec
jmp
inc
enter
rorl
nop
cmp
xor
aam
sub
jne
and
jo
call
push
bound
push
ja
jae
filds
aad
rcrl
call
bound
sahf
or
ret
addr16
lret
jae
adc
das
push
movsb
add
push
jmp
movb
dec
xchg
pop
shl
mov
test
pop
sarb
cmp
jbe
sub
cmc
jle
pop
aam
cmp
sbb
cmpb
or
negb
adc
test
push
inc
sub
mov
das
pop
xchg
pop
sahf
and
cld
dec
test
bound
and
xchg
mov
jb
in
adc
lods
out
push
jecxz
clc
adc
rcl
or
jg
je
inc
sbb
mov
leave
aaa
shll
popf
cmp
or
call
je
adc
push
xchg
and
arpl
ret
insb
inc
mov
loop
push
jne
enter
xorb
push
dec
orl
mulb
imul
jmp
lods
sbb
dec
in
xor
mov
pop
jne
or
cli
adc
ds
push
notl
push
mov
insb
daa
cmpsl
mov
test
jge
or
mov
and
mull
pmullw
dec
adc
aam
sub
pop
sarl
pop
pop
jmp
or
sbb
ds
fidivl
xor
imul
sbb
cmp
jmp
add
fsts
xor
add
sbb
scas
imul
je
push
push
repz
mov
insb
push
pop
mov
dec
pop
cmp
mov
pushf
xchg
xor
push
lock
push
cmp
xor
setne
daa
dec
mov
xchg
dec
jmp
xorl
call
inc
add
jge
ds
add
das
push
inc
call
test
sbbb
xlat
push
cmpsl
push
push
cwtl
pop
stos
mov
and
out
xchg
ds
mov
adc
repnz
aam
push
push
push
mov
mov
je
and
xor
lea
sub
mov
les
push
jmp
aam
ret
mov
testl
sarl
cmp
pop
push
sub
sbb
paddq
sbb
test
pop
adc
push
repnz
cmp
jecxz
adc
inc
pop
pop
aaa
ret
add
insb
cli
pop
movsl
mov
data16
lds
xchg
xchg
movsb
in
jb
sub
xor
push
je
fs
mov
es
add
ds
cwtl
lret
flds
insl
mov
das
js
mov
loopne
push
adc
insb
dec
test
push
push
add
adc
dec
and
push
popa
push
push
cmpb
push
imul
ret
mov
adc
sub
orl
jb
outsl
mov
je
rcrl
inc
sti
inc
mov
add
adc
add
testl
jne
inc
push
mov
push
ljmp
loop
jge
mov
pop
stc
lds
sarl
ret
mov
xor
inc
rclb
iret
and
and
xor
cmp
cmpsl
movsb
fs
cwtl
in
nop
pushf
jbe
ret
test
jae
lods
popa
stos
jno
aaa
and
test
loopne
stos
mov
and
mov
add
xchg
mov
jecxz
dec
repnz
sbb
mov
mov
and
jecxz
loope
adc
clc
jne
mov
je
int
lods
adc
jo
inc
gs
lcall
jp
ror
sbb
loopne
cmp
mov
xchg
jge
sub
test
inc
bnd
shr
sti
stos
xchg
pop
ret
mov
cmp
jecxz
sub
adc
mov
adc
push
loopne
fistl
adc
daa
clc
push
pop
enter
jbe
jmp
out
xor
into
and
xlat
aam
sbb
loope
sbb
pop
inc
sbb
sbb
add
xor
push
imul
call
xor
stos
push
mov
inc
adc
jmp
ret
nop
ja
and
nop
shr
jmp
je
call
jne
or
ljmp
pop
cwtl
inc
pushf
inc
fwait
mov
mov
incl
enter
shr
sub
inc
push
push
sbb
test
rclb
mov
inc
xor
mov
aaa
dec
sub
les
repnz
outsb
fmuls
popfw
jmp
inc
xorl
fsubs
jmp
inc
rorl
nop
rol
and
scas
outsl
adc
sbb
push
push
pop
pop
xor
sub
mov
das
or
add
pop
mov
sub
dec
dec
call
popa
pop
sbbb
inc
in
pusha
movsl
mov
mov
iret
inc
cwtl
cltd
iret
movsl
call
in
or
mov
cmp
jne
jle
inc
mov
andb
sbb
lods
dec
cmp
lret
jl
or
cs
mov
clc
cli
xor
rcrl
flds
add
jno
subb
rcll
je
jmp
leave
clc
movsb
mov
lret
push
xor
mov
mov
push
ja
pop
mov
je
sub
popf
and
sub
and
push
and
mov
cmovne
dec
push
dec
sub
dec
call
xchg
orl
lcall
mov
shrb
cmp
jbe
lea
push
add
lds
add
cmp
jb
mov
icebp
jmp
push
pusha
mov
cld
adc
sub
cmc
rcrb
adc
in
mov
inc
int3
adc
xlat
int3
imul
in
sbb
push
mov
or
add
repz
mov
loop
xchg
shl
adc
fisubs
mov
out
clc
add
cmp
push
jle
lea
push
shr
jne
sub
fimuls
add
add
inc
inc
dec
jne
pop
jmp
or
push
push
mov
and
shr
add
pop
mov
shr
inc
lea
shl
dec
add
cmc
or
stc
repnz
pop
dec
lods
xlat
sub
push
mov
shrb
sub
or
jge
imulb
add
mov
add
cwtl
sub
popa
push
pop
clc
ss
sub
push
push
or
fs
inc
fcoml
sub
pop
adc
fidivs
mov
mov
lock
mov
sub
push
inc
jle
mov
and
rorl
rcrb
les
xor
in
movsb
and
cmp
in
xchg
enter
lret
scas
adc
call
adc
jmp
mov
sub
repz
in
in
push
leave
sub
mov
in
js
inc
adc
in
fwait
sub
test
leave
inc
push
mov
fwait
jno
and
mov
and
repnz
je
call
lods
mov
sub
int
negl
jne
jmp
push
clc
ja
pop
cmp
mov
inc
or
cmp
in
mov
clc
sub
shl
ds
adc
loop
in
cmp
cmpsb
xor
dec
out
test
dec
jns
movsb
lods
scas
inc
mov
pushf
mov
adc
mov
int3
and
ds
je
xchg
pusha
xchg
out
xchg
mov
mov
xlat
mov
pop
sub
add
addl
xchg
cld
call
fbstp
adc
add
xor
mov
mov
in
jmp
test
ret
jle
adc
jnp
xchg
adc
sub
popa
xchg
cmp
mov
mov
shlb
mov
sub
lcall
fsubr
aam
mov
nop
mov
xor
cwtl
xchg
pop
sbb
jecxz
adc
inc
add
inc
sbb
inc
mov
adc
movsb
aas
aam
cltd
and
dec
cmp
faddl
mov
push
clc
std
fmuls
fldcw
push
ja
xchg
pop
or
ret
cs
or
adc
xor
stc
rorb
outsb
inc
and
rclb
xchg
adc
data16
test
jmp
xor
pushw
sub
inc
dec
add
pop
pop
xor
std
and
xchg
cwtl
sbb
mov
lock
sub
xor
sbb
cmp
inc
fs
and
inc
call
jne
push
dec
pop
and
jae
nop
popf
xlat
pushl
rorl
push
cmp
jp
sub
cmp
dec
jne
cmc
inc
sub
push
sub
jne
push
and
jecxz
stos
scas
jnp
lret
sbb
out
dec
push
je
or
and
cmpsb
bswap
insl
or
and
gs
push
xor
data16
adc
adc
ret
pop
punpckhdq
insb
repnz
es
pop
mov
push
loope
dec
test
popf
sbb
pop
ret
push
dec
clc
es
int3
insb
ss
insl
mov
sub
stos
pop
push
mov
es
adc
mov
js
inc
ljmp
push
pop
cli
xor
negb
cmp
jge
sbb
or
call
dec
or
and
or
mov
push
movsb
dec
pop
lea
cmp
scas
rorl
xchg
imul
inc
test
mov
and
add
repz
sub
push
add
xor
int
pop
jecxz
outsb
insb
or
mov
jmp
mov
push
and
loopne
add
data16
or
sub
popf
je
aad
mov
ja
outsb
shrb
icebp
int3
sbb
out
aad
mov
ret
out
sbb
and
shrb
stos
mov
mov
push
mov
mov
xor
add
leave
add
stos
xchg
loopne
and
addl
push
xor
rcrl
sbb
push
aas
aaa
cwtl
add
lock
iret
xchg
cmpsl
lcall
aaa
rolb
inc
inc
leave
xchg
cwtl
and
add
lods
pop
xchg
aad
pop
add
sbb
jmp
repz
pusha
sbb
imul
mov
lahf
in
stc
inc
or
int
push
pop
push
lock
xorl
cmp
push
clc
ret
sub
subb
fisubl
dec
or
lret
xchg
mov
test
inc
lret
mov
push
sub
push
cmpsb
in
mov
push
push
into
xlat
call
inc
or
rorl
cmp
cmp
aad
sub
je
dec
je
cmp
cmp
pusha
push
and
in
nop
lea
xlat
adc
sbb
lods
adc
jmp
push
insl
mov
stos
adc
inc
cmp
in
xchg
arpl
add
xchg
or
call
cmpsb
jecxz
pop
test
adc
adc
jg
xor
xor
mov
pushf
gs
sbb
ficoml
and
idivl
push
mov
push
jge
shr
jge
lock
add
je
pop
inc
push
add
test
nop
ficoms
push
and
add
pusha
and
and
call
add
or
adc
or
sbb
inc
aas
push
jl
int3
cld
add
sub
adc
add
sbb
or
lahf
or
mov
out
cmp
push
lods
sbb
or
aaa
xor
pop
mov
icebp
cmp
test
pop
mov
and
push
aas
or
imul
lea
fdivrp
test
xor
push
push
mov
mov
sarb
outsl
push
and
dec
out
jbe
mov
movsb
add
mov
repz
ja
je
dec
hlt
mov
jg
xchg
inc
and
ljmp
pop
call
mov
mov
movsl
test
hlt
pop
insb
jne
icebp
hlt
lock
xor
fcoms
je
dec
jmp
sub
or
pop
and
pop
or
test
mov
inc
mov
cmp
mov
ja
fwait
adc
push
jne
jge
je
gs
jnp
iret
sub
cmp
daa
sbbl
clc
insl
je
test
and
test
sbb
movsl
adc
sbb
mov
dec
jmp
scas
std
dec
lock
or
mov
cs
cmp
fiaddl
mov
jg
push
cmp
jne
push
inc
insb
cmp
fldcw
push
xorl
and
pop
cli
xor
add
or
cltd
jns
push
jmp
xor
and
insl
pop
rolb
or
mov
inc
jno
pop
into
jmp
es
cmpsb
and
or
lock
add
push
lahf
popa
in
push
in
xchg
mov
jne
out
es
ss
icebp
shlb
mov
add
hlt
jne
cmp
and
add
or
dec
ret
and
mov
and
aam
out
xchg
and
pop
mov
sub
sub
push
arpl
mov
mov
scas
adcb
xchg
and
fnsave
int
les
repnz
or
adc
mov
add
and
call
mov
orb
imul
aam
fsts
push
inc
int3
out
sub
xchg
test
sub
lods
fmuls
sub
push
push
mov
or
in
lahf
scas
mov
add
les
sbb
push
call
in
mov
cmp
and
lahf
scas
sub
ja
enter
cmp
dec
sub
mov
sub
and
cmp
sti
sbb
call
add
inc
pop
add
sub
mov
aam
xchg
fs
int3
test
lea
pop
push
mov
mov
mov
adc
dec
mov
push
cmc
xchg
pop
mov
mov
movsb
pop
lea
shl
cli
mov
mov
push
mov
mov
add
or
push
push
jno
loopne
pop
mov
fwait
lahf
and
lods
call
push
fdivp
xorb
mov
movb
push
ret
pop
xchg
insl
mov
sbb
in
dec
mov
mov
mov
push
sbb
mov
repnz
mov
mov
sbb
in
stos
rcrb
inc
andl
nop
out
push
inc
pop
or
adc
rcll
adc
cli
sbb
out
adc
movsb
mov
leave
pop
jo
lahf
mov
add
in
nop
push
pop
or
outsl
sub
mov
inc
pop
loope
mov
rcll
xchg
test
mov
sbb
push
or
sbb
add
test
pop
pop
ret
test
adc
push
inc
jo
popf
pop
popa
push
cs
inc
sub
or
clc
jmp
pcmpeqb
das
push
or
loope
xchg
fnsave
mov
push
dec
mov
mov
sub
cmp
pop
dec
mov
jno
jge
ret
xor
and
outsb
test
lea
cmc
clc
ja
sbb
fcomps
loopne
lock
xchg
push
out
push
inc
cmp
and
jecxz
popf
and
add
cmp
pushl
pushf
inc
loop
call
inc
sub
sbbl
fwait
aas
xor
in
std
adc
std
add
inc
or
hlt
mov
mov
iret
dec
dec
rorl
iret
movsb
mov
pop
shlb
lea
aas
decl
pop
jmp
bound
mov
ret
mov
sbb
testb
add
xor
cwtl
rorb
aam
mov
inc
xor
pop
add
sub
xchg
mov
loopne
cwtl
adc
mov
mov
push
ret
or
jle
sub
int3
add
rcrb
and
cmpsb
mov
nop
andb
cmpsb
sarb
daa
push
mov
inc
insl
rolb
iret
out
or
mov
ds
adc
jp
add
mov
aad
xchg
int
aaa
mov
popf
test
mov
mov
xor
ret
dec
sub
or
and
adc
adc
sub
sub
pop
mov
push
pop
into
adc
jecxz
jecxz
shlb
mov
mov
mov
jb
dec
push
clc
call
in
test
or
ss
cmpsb
movb
je
addb
add
aam
lret
out
pop
mov
push
je
out
adc
mov
xor
je
inc
mov
cwtl
out
or
lahf
out
enter
adc
or
cld
js
cld
sbb
adc
push
pusha
inc
cld
hlt
sbb
cmc
or
mov
sbb
sub
in
pop
mov
cltd
mov
stc
jne
inc
xor
add
leave
jmp
inc
mov
cmp
cmp
push
movzbl
leave
shl
add
inc
fmul
inc
or
push
push
mov
call
nop
xor
push
insl
jge
lea
dec
popa
jbe
jne
sbb
jb
mov
mov
jmp
or
rcl
push
pop
outsl
jb
add
popl
std
push
ror
lahf
mov
mov
adc
sahf
and
and
jne
int
imul
outsl
xchg
push
insl
push
inc
adc
pop
push
lcall
mov
push
mov
nop
add
fs
jmp
mov
mov
cmp
pushf
daa
xor
decl
out
stc
and
cmp
data16
pop
push
outsb
mov
dec
out
jecxz
jne
mov
es
mov
sub
call
fldcw
fs
or
pusha
int3
jbe
call
roll
mov
movzwl
fadds
push
jbe
jmp
loopne
mov
in
lret
call
into
call
xchg
pop
cltd
pop
xchg
add
or
lock
add
test
mov
xor
and
fs
je
mov
mov
cli
inc
addr16
mov
enter
push
and
mov
sub
jns
push
lds
cmp
mov
std
std
clc
data16
sub
out
call
test
xor
inc
and
test
mov
in
psadbw
gs
add
daa
pop
stc
ja
fisubl
push
jae
push
lret
push
lahf
push
out
xor
dec
in
ja
mov
lret
xor
ljmp
lock
dec
inc
dec
and
push
push
xor
xchg
hlt
cwtl
andb
shl
aam
sub
clc
arpl
fsubrs
push
lahf
sub
xorl
daa
or
fidivl
rcr
insb
and
enter
call
push
scas
pushf
pop
cli
stos
add
mov
cmp
shl
jne
imul
sub
test
mov
jns
cmpsl
inc
and
rcrb
and
pushf
push
add
sti
push
add
loope
mov
out
test
lea
inc
push
pushl
push
push
rcll
jmp
test
popl
mov
cwtl
sbb
mov
mov
out
push
hlt
test
pop
clc
pusha
loope
adc
ret
ficompl
and
jg
out
addr16
adc
jb
mov
fldenv
dec
cs
add
push
sti
jmp
add
mov
insl
xor
nop
dec
lret
call
add
inc
mov
sub
ret
sub
mov
jmp
lcall
mov
sub
mov
jmp
or
movsb
aaa
insb
int
push
inc
or
or
mov
popa
mov
push
repz
adc
and
lahf
mov
je
call
push
mov
or
imul
xor
jecxz
jg
call
in
ds
cmpsb
shrb
loopne
arpl
add
mov
jl
cld
loopne
popa
pop
aad
ljmp
mov
loopne
mov
or
fdivr
sbb
mov
dec
push
sub
cs
mov
sahf
add
popf
mov
xchg
jp
push
jle
scas
data16
mov
push
sub
push
mov
sbbl
jbe
adc
mov
pop
mov
testl
test
mov
adc
push
cmp
inc
test
adc
mov
fisttpll
push
aaa
add
pop
inc
aaa
xchg
mov
mov
push
fists
test
inc
dec
fstl
fisttpll
sub
aas
sbb
dec
repz
mov
push
inc
xlat
scas
adc
js
xchg
jl
fsts
cmpl
sub
dec
add
sbb
pushf
mov
fmuls
loopne
or
nop
push
rcrl
call
add
add
shll
adc
xor
pop
icebp
dec
xor
fwait
or
decb
iret
test
loope
mov
ss
sbb
lcall
cld
lea
mov
notl
sbb
push
xor
jo
pop
test
inc
mov
and
push
xor
pop
push
lcall
mov
add
mov
jne
cmp
push
in
add
add
jmp
add
push
pop
jmp
push
pop
cmp
sub
push
fistpl
jb
xor
add
hlt
mov
cmpsb
movsl
mov
mov
xor
mov
xor
push
insl
cli
and
mov
aaa
leave
xor
incb
shlb
xor
pop
pop
lods
pop
sub
cmpsl
xor
stc
decb
jge
gs
and
xor
fnstcw
or
ljmp
adc
mov
repnz
loopne
xor
push
push
xor
pop
je
je
sbb
inc
push
xor
xchg
xor
repnz
mov
push
sbb
and
cwtl
pushl
xor
push
push
adcb
add
xchg
scas
cs
or
shl
loopne
push
cmpb
ljmp
loopne
pop
mov
mov
xchg
fistpl
dec
into
push
cld
iret
mov
ss
mov
mov
aas
ficoms
push
lock
addr16
sub
invd
lods
and
sbb
mov
nop
adc
push
shl
stos
cltd
sub
mov
cmpsl
pop
inc
inc
push
or
into
popf
iret
xchg
push
add
push
mov
inc
sbb
adc
jae
cltd
push
add
dec
or
mov
mov
or
enter
add
pop
inc
pop
cmpsb
lahf
jne
test
mov
inc
lock
xlat
mov
jae
mov
pop
outsb
cld
pusha
mov
std
sub
add
pop
repz
add
fs
adc
repz
mov
jo
mov
roll
cmp
fisubs
testb
pop
xor
pushf
aas
push
fs
mov
add
shl
and
inc
xor
mov
cmp
ds
cmp
les
in
add
cmpxchg
int3
xor
icebp
push
mov
add
xchg
cmpsb
test
les
fdivs
call
lahf
mov
test
sub
and
cmp
jl
xchg
cmp
mov
cmpl
xchg
test
sub
ljmp
fcompl
add
xor
push
leave
xchg
outsb
sarb
jp
jne
sbb
cmp
jmp
loopne
scas
inc
ljmp
das
adc
mov
das
pop
mov
rep
call
and
dec
clc
je
mov
push
sbb
lock
cmpsb
xlat
xchg
pop
daa
mov
xor
inc
std
dec
push
rcll
sub
jle
repnz
and
outsl
iret
mov
fnstenv
shl
and
sbb
enter
les
jmp
movsl
ror
ret
add
mov
cltd
loopne
pop
ja
or
dec
stos
add
or
cmp
xor
or
movsl
cld
dec
cmp
xor
out
filds
andl
push
inc
sbb
pushf
mov
push
push
and
sub
stc
sub
mov
pop
pop
sti
jmp
sbb
dec
adc
pop
add
pop
push
mov
or
jmp
popa
enter
sbb
mov
js
shlb
sbb
xchg
cmp
mov
ds
mov
mov
mov
int3
hlt
sbb
and
ret
pushf
xchg
xor
insl
bound
adc
adc
mov
push
jl
jmp
push
sbb
test
xchg
jb
dec
mov
cmpb
cmp
push
xor
lahf
dec
aam
inc
add
and
mov
es
ds
mov
xor
push
cmpsb
sub
xchg
jl
fdivr
movsb
movsb
sahf
and
popa
and
dec
insb
arpl
sub
sub
adcb
mov
lods
xchg
inc
in
out
int
movsl
insl
inc
inc
arpl
add
push
adc
in
mov
or
js
pop
fstpl
arpl
stc
les
push
adc
nop
ficoms
or
push
xchg
jo
mov
xchg
negl
mov
mov
add
test
push
push
pop
push
mov
hlt
in
rclb
cld
insb
out
sub
or
mov
in
mov
shr
out
pop
jg
jmp
sahf
in
mov
inc
lods
mov
sbb
out
or
into
fldl
insb
inc
mov
jne
xchg
mov
in
in
xchg
and
addr16
jmp
mov
cltd
xchg
popf
sbb
addr16
or
scas
sbb
cmp
popf
fs
pop
mov
sub
mov
xor
mov
mov
push
add
mov
xlat
xchg
cltd
popa
pusha
sbb
movsb
aam
sahf
add
call
sti
jo
pushf
das
subl
mov
push
lret
mov
cltd
cmpsl
pop
adc
ret
adc
lods
mov
sub
repz
add
push
ror
icebp
cld
dec
push
cmp
js
xor
call
aas
inc
dec
lock
pop
rcrl
mov
ss
and
fwait
sahf
xchg
and
pop
lret
test
daa
addr16
jl
sub
push
mov
in
mov
adc
ds
mov
jp
dec
push
and
mov
popa
mov
add
xchg
shr
jg
call
movsl
nop
xor
int
pop
fs
and
dec
dec
sub
cwtl
pop
xchg
jle
pop
in
lcall
les
fdivrl
shll
hlt
movsb
leave
inc
rol
push
sub
xchg
rclb
jge
mov
mov
cld
jne
js
jp
in
mov
stos
push
push
cli
addb
or
mov
push
mov
or
fs
pop
push
iret
ljmp
in
pop
push
lcall
push
pop
ss
xor
call
sahf
sbb
inc
call
mov
push
push
arpl
pop
and
jmp
jne
int3
stos
push
test
flds
jo
add
fsubs
popa
test
push
xchg
outsl
ljmp
push
sub
xchg
call
mov
leave
or
xchg
outsb
xchg
fwait
mov
loope
and
outsb
adc
sti
xor
push
add
add
inc
inc
inc
add
mov
inc
mov
and
fs
sub
mov
sahf
scas
mov
sarb
jb
clc
jmp
call
and
jae
imul
mov
or
jge
fsubl
lahf
and
fs
insl
clc
jne
inc
inc
mov
mov
adc
add
movl
jg
adc
insb
lea
pop
mov
fs
dec
xor
jmp
lea
loope
js
or
push
inc
jmp
dec
push
push
mov
cwtl
cmp
ljmp
pop
sbb
and
xchg
pushf
cli
decb
ret
mov
fwait
rolb
cld
inc
cmp
dec
jno
cld
cmp
mov
es
inc
and
loope
subl
shlb
lret
add
mull
add
sbb
sbb
subl
shl
xor
jne
loop
mov
test
mov
nop
mov
movhps
or
inc
lock
out
push
adc
and
adc
mov
add
shr
sbb
mov
and
mov
mov
mov
xchg
xlat
repz
mov
push
mov
lock
dec
bound
pop
dec
mov
loopne
and
push
sbbb
dec
add
std
mov
ret
mov
inc
sub
jmp
mov
cmpsl
mov
add
push
mov
dec
cs
mov
dec
mov
inc
in
cmc
mov
mov
addr16
mov
das
fiadds
xchg
xorl
rorb
and
inc
mov
add
or
lea
sub
and
insb
sbb
mov
in
lcall
and
sti
cli
push
or
or
lret
shll
decb
lods
or
jecxz
out
fxam
xchg
dec
incl
and
in
in
test
jmp
mov
or
roll
stos
sub
xchg
xchg
sub
lea
cmp
inc
rcrb
mov
mov
inc
out
mov
pusha
mov
add
mov
xor
inc
cmp
jl
mov
lea
jbe
adcb
push
shl
sbb
call
pop
sbb
xchg
call
rcr
push
xchg
add
lock
xchg
in
mov
xchg
dec
mov
mov
les
lcall
mov
push
or
jno
les
inc
xor
push
push
jns
sar
fsubrl
ljmp
cmp
push
jecxz
inc
cli
push
pop
fs
mov
inc
push
clc
pop
adc
gs
push
mov
loope
cltd
mov
fisubrs
dec
sbb
mov
push
sbbl
sbb
xor
jbe
adc
push
xchg
nop
int
enter
mov
mov
mov
pop
push
es
jo
adc
sti
enter
sbb
inc
cmpsl
rcr
nop
stc
mov
out
lds
int3
fildll
mov
shl
mov
ss
faddl
movsb
fistpl
inc
and
and
out
clc
or
xor
lcall
fcoml
aam
jo
test
loop
test
xor
outsl
push
push
test
dec
inc
push
hlt
ret
out
lahf
jo
or
mov
cmp
cmp
jb
mov
movsl
aaa
dec
popa
jo
sub
test
inc
fiadds
pop
mov
aas
push
add
sub
je
dec
inc
push
push
pop
push
jmp
inc
test
dec
movsb
sub
mov
push
cmp
adcl
subb
out
andl
imul
or
xor
stos
mov
jo
in
stos
mov
dec
lahf
xchg
hlt
or
push
push
arpl
xchg
dec
mov
jle
xor
nop
jne
cmpsb
loope
fsubs
in
pop
rcrl
or
pop
push
sub
test
repnz
aam
push
in
inc
mov
test
lock
rclb
daa
sbb
cmp
inc
sub
pop
adc
inc
fisttpll
mov
xor
mov
cmp
int
inc
test
ret
fs
loop
icebp
xchg
or
sbb
shll
addr16
mov
test
xor
mov
add
xlat
incl
add
mov
cmp
jne
jmp
inc
inc
into
mov
lahf
or
cltd
ljmp
mov
sbb
nop
jmp
and
std
add
xchg
lods
sbb
cmc
cmp
xlat
push
cmp
add
pop
mov
mov
inc
xchg
inc
aas
add
jl
cmc
adc
dec
dec
mov
pop
repz
xor
xor
inc
adc
hlt
ret
orb
daa
imul
sarb
lahf
sbb
xchg
push
out
daa
mov
icebp
std
testb
or
pop
lock
or
jne
je
push
aad
jae
pop
pop
clc
sub
xor
pop
mov
dec
cmp
xorb
mov
push
aaa
aaa
cltd
xlat
scas
das
in
cmp
push
call
push
pushf
lock
cmp
jmp
movsb
sub
addr16
je
dec
shrb
movsb
adc
push
jne
insb
dec
je
sub
xor
fimull
xor
add
ljmp
jae
fmul
repz
insb
jb
mov
out
aad
mov
add
shl
mov
outsl
das
jns
leave
adc
or
jg
cmpsl
xor
popf
dec
mov
sbb
test
push
xor
sbb
jge
and
cwtl
jecxz
push
mov
ja
and
xchg
xchg
jle
in
push
adc
xchg
maxps
add
sarb
imul
je
push
jmp
push
sbb
sarb
jb
in
push
call
add
lock
hlt
movsb
lahf
rcrb
jge
sbb
fwait
and
adc
lea
sti
pop
pop
cmp
mov
mov
pushl
arpl
xchg
out
dec
add
idivl
cs
das
mov
cwtl
xor
pop
popf
cmp
push
add
dec
call
test
test
call
mov
add
call
and
lea
or
xor
push
inc
pop
add
aad
fimull
mov
out
mov
or
cmp
rcrb
add
repz
sbb
inc
inc
div
stc
and
mov
and
js
insl
pop
adc
shl
mov
and
add
faddl
cmc
loopne
xor
xchg
adc
or
sub
sub
loopne
add
in
ja
icebp
or
andl
int
adc
adc
push
sbb
popa
mov
fcompl
ljmp
pushf
in
xchg
adc
incl
xor
sbb
jne
cmp
je
mov
fcmovu
lea
aam
xor
push
call
xor
call
aad
movsb
mov
in
push
cmp
ss
push
push
or
imul
sub
cmpsl
cs
addr16
add
inc
push
call
or
stc
aaa
adc
popf
add
push
sbb
lds
mov
xor
test
add
mov
jp
gs
xchg
inc
push
inc
les
jmp
mov
bound
fistl
dec
cld
push
jnp
and
sarl
or
push
ret
cmpl
mov
pop
sti
xchg
daa
outsb
pop
clc
jbe
imul
push
adc
sub
push
jle
xchg
test
inc
stos
push
xchg
jb
xchg
clc
scas
sub
add
and
scas
xor
jne
lock
add
movsl
mov
or
lods
adc
adc
test
mov
jg
mov
add
mov
sbb
shrb
in
std
or
rolb
int
jp
and
jle
stc
scas
sub
push
jno
leave
adc
xor
dec
lods
push
push
xchg
push
lcall
popf
mov
adc
inc
or
and
xchg
fnstcw
adc
notl
imul
js
push
dec
dec
ds
inc
js
ror
loop
pop
jnp
imul
cwtl
jns
popf
cmpsb
push
pop
ret
out
in
sbb
and
xor
scas
sub
xchg
inc
xchg
add
sub
movsl
cltd
jmp
mov
or
hlt
xchg
xor
dec
or
adc
je
orb
push
push
push
sbb
pop
test
push
out
jp
lahf
inc
cmpsb
sti
jmp
imul
pop
js
xchg
cld
jbe
mov
push
rcr
sub
push
jnp
adc
dec
flds
jne
xchg
cli
adc
push
lahf
sub
inc
pop
mov
sub
sbb
sub
xchg
mov
jl
and
push
orl
xor
and
xlat
xchg
dec
sbb
xchg
xor
dec
sbb
sti
jns
inc
popa
xchg
call
sbb
jl
inc
test
movsb
or
ja
or
or
pcmpeqd
inc
or
icebp
out
dec
jbe
adc
mov
cmp
inc
neg
sbb
push
push
idivb
mov
js
ja
add
in
xchg
mov
fdivs
or
lcall
adc
rolb
adc
jbe
rolb
dec
or
xchg
cmp
jp
xchg
mov
popf
sub
adc
cmp
sbb
mov
pop
adc
cltd
movsb
inc
cmpl
push
mov
sub
arpl
lea
lock
inc
call
sbb
and
or
xchg
icebp
cmpsb
mov
xor
call
jno
mov
sbb
js
loop
mov
adc
or
cmpl
xchg
sub
jge
and
mov
insl
mov
setl
test
test
test
adc
mov
jb
lret
adc
lods
pushf
mov
cwtl
ds
je
lea
xchg
push
cmp
push
push
cld
push
iret
scas
adc
jmp
pop
movb
jge
add
mov
repz
pop
inc
fs
mov
scas
and
jbe
into
sub
mov
mov
inc
dec
or
or
je
inc
leave
sbb
inc
lea
jo
or
or
sub
fwait
lret
add
push
adc
dec
test
inc
je
add
mov
add
into
nop
call
jno
pop
xchg
addr16
adc
inc
sti
jne
jae
inc
fs
pop
add
je
xchg
and
fisttpll
and
test
push
or
jbe
in
lret
jb
lahf
dec
test
test
dec
fcom
xorb
cmp
add
movsl
inc
adc
inc
je
push
add
jmp
xchg
pusha
lea
mov
hlt
into
rcll
movsb
gs
insl
and
and
in
push
and
push
test
jno
sub
push
jb
hlt
and
mov
xor
mov
push
sub
xor
and
fwait
inc
inc
sbb
push
mov
inc
or
test
je
push
jecxz
sbb
aam
or
jbe
mov
lods
fistps
mov
adc
loope
mov
cmp
jno
xchg
out
push
jmp
inc
daa
cmpsb
sbb
dec
out
dec
shrb
xchg
lock
xchg
test
jne
loopne
test
mov
pop
adc
nop
loopne
sbb
ret
xchg
or
jne
xchg
push
fnstsw
fidivs
jno
das
dec
mov
sbb
jle
bnd
in
es
dec
add
dec
call
in
sub
xor
adc
scas
pop
add
inc
and
mov
add
call
fidivrs
neg
sbb
push
gs
mov
jl
jg
subb
cwtl
sbb
jp
repnz
pushf
mov
push
push
jmp
xor
sbb
sbb
je
cmp
mov
hlt
aam
mov
or
pop
rclb
mov
inc
xor
in
inc
fwait
into
daa
mov
daa
ret
data16
mov
xchg
outsb
movsl
add
mov
adc
fwait
outsl
jno
mov
scas
sbb
jl
cwtl
lock
out
xchg
sbb
into
loopne
je
push
bound
je
jo
adc
je
fsubl
cld
inc
mov
xchg
push
mov
lahf
and
repnz
jae
das
ret
jo
lret
fs
into
call
dec
outsl
aad
fwait
adc
cmp
sbb
jns
mov
outsl
inc
iret
push
jb
sub
xor
xchg
arpl
xchg
mov
xor
xchg
sbb
outsb
aam
adcb
push
jo
dec
je
and
push
dec
mov
push
add
add
or
pop
test
inc
or
insl
fsubrl
clc
jne
dec
push
imul
push
loop
sbb
es
dec
add
jmp
fwait
out
push
sub
push
xor
rcl
ss
push
mov
orl
mov
adc
push
clc
push
test
xchg
xor
cmpsl
test
xchg
fs
ljmp
jg
int3
cmpsl
jo
cmp
sub
insl
inc
adc
inc
aam
shrb
call
pop
addr16
cltd
sbb
sbb
pop
jl
and
test
imul
sbb
je
aaa
data16
jne
pop
push
or
aas
iret
dec
loop
je
lret
fwait
inc
mov
push
cmc
fsub
insl
and
push
mov
stc
push
shrl
movsb
sbb
sub
xchg
dec
loope
les
test
pusha
xchg
roll
push
dec
adcl
lods
and
pop
out
in
lret
dec
adc
dec
xor
out
es
cmpsl
cld
mov
and
cwtl
xchg
jmp
dec
adc
xchg
dec
push
sbb
xchg
ljmpw
xchg
iret
enter
pop
js
ds
clc
js
and
clc
push
mov
sbb
neg
mov
ljmp
push
fdivr
pop
sub
adc
jnp
and
cld
inc
pop
push
mov
aas
ja
push
popa
mov
sti
adc
in
imul
pop
xchg
stos
and
sbb
divb
add
fs
pop
mov
or
orb
sbb
lods
mov
leave
fimull
jb
push
addr16
loope
loop
push
push
jcxz
in
in
push
push
out
add
addr16
arpl
fs
mov
mov
dec
call
push
sbb
sub
dec
call
in
push
jne
call
cmp
lret
out
imul
dec
push
punpckhdq
inc
pushf
ret
lret
add
fsubs
movsl
pop
movsl
inc
and
call
jmp
and
push
inc
xchg
mov
adc
mov
push
bound
cwtl
ss
imul
cmpsb
and
push
daa
es
imul
fdivr
mov
jbe
xor
push
aam
inc
or
sub
xor
sbb
push
mov
cwtl
push
cltd
fsubr
outsl
jo
and
out
dec
xchg
inc
mov
inc
mov
arpl
loopne
insb
sub
fistpll
sbb
pop
mov
int
mov
pushf
xchg
pop
call
and
or
clc
ret
push
push
call
in
push
jle
arpl
fsubr
xchg
push
clc
dec
ret
gs
out
inc
push
xor
stc
dec
mov
rcrb
lea
push
outsb
pop
sti
inc
fbld
xor
movb
mov
lea
not
mov
cmpsl
dec
fs
xorb
sti
jb
mov
pusha
into
nop
inc
enter
sbb
lock
subl
mov
mov
add
mov
and
and
cmp
push
push
into
movsl
lock
repnz
or
fs
push
push
jl
jns
inc
xchg
push
cld
addr16
push
push
push
push
cld
pop
out
ret
ret
push
andl
les
push
xorl
popa
push
sub
push
sub
orb
lods
cmp
test
xchg
imul
stc
sahf
sbb
fcoms
test
pop
inc
pop
xor
mov
gs
js
rcr
jae
outsl
andl
mov
push
xor
and
jb
xchg
mov
mov
push
jno
rep
xor
das
adc
pop
lock
inc
cmpsl
sbb
cmp
jns
in
sahf
fs
ficoms
xchg
xor
cmpsb
inc
pusha
push
xorl
pop
es
hlt
add
inc
sub
sbb
enter
push
sbb
push
and
data16
jno
cmp
enter
popa
ljmp
cld
in
ret
dec
pusha
loop
jns
mov
sub
shrb
mov
sbb
shll
adc
add
add
sbb
stos
mov
movsb
push
push
into
shll
xor
mov
dec
jp
insb
cmp
jbe
push
movsl
xor
jne
popf
leave
rcrb
or
in
sbb
pop
jg
sbb
lea
push
push
imul
sarb
lods
outsl
mov
movsb
or
adc
push
pop
inc
mov
ror
call
and
inc
jge
loop
test
or
inc
mov
or
mov
insl
cmp
in
xchg
sub
pop
xchg
movsl
aad
icebp
mov
imul
je
sub
and
xchg
xchg
and
sbb
imul
cld
and
nop
inc
enter
lahf
jbe
les
nopl
push
or
lock
inc
arpl
push
and
icebp
mov
shl
out
cmp
popa
and
add
and
mov
enter
shll
data16
outsl
dec
jnp,pn
mov
cld
mov
dec
xchg
push
xchg
gs
add
lea
push
testl
xor
adc
xor
loop
push
lods
xor
push
sub
repz
mov
xchg
sahf
movsb
jne
cmp
pop
mov
mov
inc
adc
aam
pop
lret
xor
call
adc
and
add
pop
call
add
sbb
imul
mov
push
dec
loop
push
insb
arpl
cmp
jle
ret
lcall
das
adc
and
test
jns
js
test
pop
pop
jle
out
adc
iret
ds
sub
pop
sub
lds
pop
sub
jns
sub
jb
pusha
sti
movsb
or
rcll
lret
xchg
mov
movsb
flds
ss
out
leave
pop
repz
popa
add
sbb
mulps
add
insb
jno
call
movsl
and
pushf
out
push
jmp
inc
sbb
arpl
cwtl
xor
clc
lahf
and
xchg
add
xlat
pusha
cld
jne
call
inc
pusha
and
xor
mov
int
mov
loopne
es
pop
mov
push
or
in
jle
adc
mov
mov
jge
rcrb
pusha
add
adc
inc
popa
add
dec
jl
sub
adc
stos
mov
add
pop
int
ret
push
loopne
jns
add
jne
xchg
cwtl
mov
mov
daa
add
jbe
jne
adc
jl
dec
loop
into
sub
mov
or
mov
xchg
push
andb
dec
pop
sbb
add
cmp
orl
mov
pop
mov
cwtl
sub
call
movsl
sbb
add
mov
push
lcall
push
inc
sbb
xchg
xchg
in
jae
push
nop
clc
pop
test
jle
mov
mov
pop
push
repnz
sbb
fsubl
shl
sbb
cwtl
cmpsb
insl
jns
xor
fs
mov
dec
shlb
and
bound
test
pop
mov
mov
je
stos
das
int3
push
sub
call
inc
pop
test
fcompl
xchg
jae
enter
cltd
and
fcompl
inc
test
mov
push
cld
push
inc
aad
add
push
push
hlt
test
push
mov
pop
jbe
icebp
dec
dec
fcoml
subl
jp
mov
nop
jno
add
add
call
mov
icebp
les
push
mov
pop
cmp
jl
mov
aad
fsubl
sub
je
movsb
pop
inc
adc
pop
mov
inc
arpl
sbb
or
or
cmp
call
gs
scas
sbb
out
leave
pop
bound
push
mov
icebp
popf
sbb
pop
or
jne
sbb
mov
mov
mov
cltd
loope
in
jmp
xor
fldl
mov
dec
popa
xor
inc
push
popf
fildll
outsl
mov
adc
jne
cltd
cmpl
fdivl
sbb
enter
mov
xchg
inc
inc
inc
push
push
mov
repz
mov
add
inc
aad
lret
insb
inc
mov
dec
in
orb
in
repz
inc
cltd
inc
or
ficomps
adc
jge
fcmovnbe
jne
mov
cmc
cli
jg
dec
loop
call
or
xorb
insb
addr16
pop
andl
sbb
aad
test
push
lcall
push
jae
sub
xchg
mov
sbb
lock
icebp
cli
inc
inc
inc
jmp
ret
pop
mov
iret
in
out
jl
cmpb
call
test
icebp
sub
jbe
and
and
pusha
inc
call
adc
adc
jmp
xor
negb
push
adc
push
jmp
dec
es
mov
cltd
adc
mov
pop
insb
mov
push
jle
sub
mov
mov
call
mov
test
call
loopne
jle
xchg
xchg
mov
push
fmuls
int3
call
adc
mov
rorb
fmull
push
cmp
xchg
stos
dec
inc
sbb
pushf
mov
inc
cli
dec
ss
add
in
or
pushf
fs
mov
push
stc
popf
dec
aam
pop
test
mov
lret
push
push
and
mov
cltd
dec
int
or
ja
xor
jne
mov
dec
inc
enter
inc
inc
data16
mov
xchg
pop
lea
mov
movsb
outsl
lahf
in
rcr
or
adc
mov
dec
jg
dec
test
dec
mov
mov
mov
fldt
fwait
sub
out
les
out
inc
lret
push
outsb
rorb
sarb
mov
cli
push
fbld
fs
scas
daa
pushf
push
andl
orb
and
push
inc
repnz
xchg
xor
loopne
xchg
outsb
adc
mov
or
jmp
dec
adc
mov
mov
in
loop
pop
jp
add
adc
inc
inc
pusha
sub
pushf
jo
push
xchg
lds
mov
loope
popf
cmpsl
mov
daa
fwait
push
jle
mov
inc
push
pusha
or
jmp
jl
aam
call
dec
pop
enter
sub
inc
sub
sbb
cmp
xor
call
ficompl
jl
xor
js
mov
jmp
xor
iret
bound
iret
pop
jl
subl
les
dec
push
shlb
cltd
dec
stos
popa
cmp
in
or
inc
fwait
adc
and
jmp
push
loope
std
popf
iret
decl
rcr
inc
fildl
push
pop
call
pop
ret
adc
call
daa
xor
add
push
and
pop
sbb
push
push
outsb
lret
xchg
inc
loope
mov
vptestnmq
push
das
stos
inc
jo
je
add
dec
movsl
test
ljmp
fdivrl
outsb
or
movsb
rorb
ret
inc
jmp
lods
xchg
adc
ja
cmp
subl
cmp
sub
sub
divb
mov
daa
adc
lahf
dec
loop
outsl
dec
push
out
sub
pop
fcoms
xor
pop
pop
xor
divl
inc
mov
insl
mov
gs
dec
je
jne
lock
in
mov
dec
or
fdivrl
or
mov
rcrb
mov
ret
int3
push
insb
adc
push
pop
fldcw
pop
and
ss
cli
lds
repz
push
mov
mov
andl
aam
movsb
hlt
int3
shl
or
mov
incl
ljmp
push
or
sbb
or
xor
mov
lcall
jge
je
push
sbb
pushl
es
add
lcall
sub
mov
jmp
jo
call
push
shrb
xchg
jg
sbb
roll
test
add
in
pop
in
andb
repz
sbb
mov
sub
xchg
test
push
fimuls
xchg
push
lea
mov
add
inc
add
or
cld
rcrl
sub
jo
adc
push
mov
lea
je
mov
inc
andb
push
or
adc
push
sbb
test
out
jl
inc
daa
adc
inc
mov
movsb
and
add
push
fs
bound
call
cwtl
xchg
xor
xor
pop
adc
arpl
lea
cmp
jmp
push
vucomiss
inc
imul
icebp
inc
add
int
sub
call
outsb
shlb
pop
pop
pop
pop
add
and
add
call
or
roll
rclb
movsl
mov
cmp
je
inc
js
pop
je
and
inc
mov
mov
jbe
mov
shr
cmp
cmp
test
lock
ret
cli
jmp
call
popa
add
lock
fwait
push
mov
shrl
test
jbe
mov
xor
ss
imul
add
ret
iret
mov
jnp
das
xor
add
push
in
jb
ret
adc
test
fs
mov
jmp
add
inc
mov
xchg
adc
lahf
push
or
faddl
adc
add
js
or
xor
mov
inc
cmp
insl
lods
leave
jb
push
out
cmp
idivb
lret
add
jmp
punpckhbw
add
adc
orb
mov
adc
lock
shlb
call
lahf
enter
or
and
cmpsl
sub
test
sbb
cmp
jb
fstpt
push
add
xchg
into
idivl
call
popa
popf
test
aam
decb
data16
loop
xor
push
adcl
or
fdivl
inc
inc
push
mov
fisttpl
sub
addr16
add
push
xor
cmpsl
fmull
test
int
nop
inc
je
push
sub
ss
daa
cmp
jne
nop
addb
pop
pushf
dec
cmp
and
mov
mov
or
inc
add
inc
jp
and
int3
outsl
scas
add
inc
les
adc
mov
inc
stos
subl
jns
mov
xor
jge
mov
jmp
stc
mov
push
shr
aad
daa
mov
inc
xchg
sti
ss
scas
repz
insl
cmc
cmp
lret
pop
movsb
mov
dec
aas
roll
rolb
out
nop
lret
push
test
dec
pop
sub
lret
popa
mov
mov
les
sub
fbld
dec
in
push
push
add
xor
push
push
mov
dec
cmc
inc
dec
or
lods
sbb
daa
fsubrl
adc
adc
adc
movsl
pop
add
add
adc
or
in
xor
out
jge
outsb
push
mov
jl
push
push
jae
rorl
xorl
mov
fdivrl
push
mov
inc
aam
add
push
not
out
add
and
orb
push
iret
in
repnz
mov
mov
pop
outsb
fiadds
pop
or
in
sbb
sbb
es
cmpsb
or
mov
jp
and
adc
pushf
lcall
mov
jl
ds
call
dec
adc
jg
mov
nop
loopne
xor
add
inc
cmp
inc
push
adc
sub
or
and
mov
sub
push
and
shrl
and
push
fisubrl
push
cmp
adc
pslld
push
call
inc
rcrl
inc
or
jp
cltd
and
sbb
pop
jo
mov
or
jmp
adc
xor
xorb
aam
mov
and
xor
mov
ret
pop
mov
pusha
push
xor
cmp
sub
imulb
fwait
push
xchg
pop
push
clc
xor
nop
sub
cmp
pushf
ss
add
pusha
push
ret
ret
int3
and
fwait
add
add
pushf
push
call
adc
adc
inc
lods
mov
sub
fs
dec
pop
dec
or
xchg
and
or
push
dec
hlt
add
sbb
cmpsb
sbb
andb
xor
pop
and
adc
inc
dec
out
inc
cs
push
add
shl
xor
jbe
call
inc
or
xchg
adc
scas
xor
in
sub
mov
out
int
cmp
je
mov
or
mov
insl
xchg
in
es
mov
mov
in
hlt
test
cli
mov
push
sub
nop
shlb
js
cmp
inc
into
push
je
pop
pop
rcr
inc
adcl
inc
imul
xchg
push
cmp
jge
shr
and
lret
adc
mov
ds
je
mov
add
mov
and
out
data16
pop
in
sahf
inc
xchg
sbb
adc
hlt
xchg
clc
xchg
test
insb
and
xchg
and
xchg
add
fnstenv
ret
shr
mov
imul
dec
jne
pop
out
or
not
pop
ret
pop
sbb
inc
call
mov
xchg
insb
jmp
in
int3
pop
pop
jne
mov
inc
das
mov
push
popf
pop
in
cltd
cltd
dec
adc
push
mov
jl
testb
push
xor
dec
outsb
fnsetpm(287
dec
lods
push
inc
test
sbb
dec
dec
push
xchg
loopne
loop
into
lock
in
xchg
rolb
mov
add
loopne
cwtl
xor
xor
movsb
or
fs
or
repnz
ds
sbb
lock
add
push
or
push
lcall
cltd
add
cwtl
mov
movb
inc
jmp
mov
jmp
mov
mov
inc
pop
call
icebp
jae
andb
and
cs
pop
fsub
add
add
je
dec
and
adcb
clts
mov
and
adc
and
mov
adc
push
pusha
cld
cmp
jno
mov
leave
sub
idivb
js
ds
mov
loopne
lock
clc
call
push
rcr
inc
in
lret
scas
mov
rep
pop
and
xchg
cwtl
movsl
inc
mov
call
sbb
call
loopne
shlb
push
in
cmp
enter
mov
cld
out
mov
sbb
xchg
xor
mov
mov
pop
push
push
dec
call
fidivrl
adcb
push
popa
add
cltd
sahf
aas
aad
mov
mov
mov
xor
nop
mov
sub
icebp
mov
adc
adc
or
and
cltd
loope
rorb
push
test
pusha
ds
ljmp
int3
cmpsl
adc
sub
xchg
dec
pop
cmp
and
mov
add
ja
xchg
andb
movsb
push
mov
lret
notl
push
loopne
test
push
push
loop
call
push
movsl
lret
or
stos
adc
stos
sub
push
popa
in
pop
and
add
popa
or
xor
mov
jne
dec
sahf
mov
ret
push
push
cmp
push
cs
ret
clc
mov
pusha
jo
push
call
xor
push
push
cmp
mov
je
push
adc
inc
push
push
leave
imul
out
add
push
add
push
jne
push
call
xor
pop
pop
pop
adc
push
mov
xor
call
mov
adc
in
sbb
test
ret
inc
lods
and
push
pop
push
into
inc
in
outsl
push
jne
movsb
int
in
std
movl
add
dec
jl
repz
cltd
ds
push
popf
adc
mov
mov
push
and
xchg
push
jecxz
insl
mov
xchg
lods
rclb
adc
mov
xchg
shlb
xorb
test
shr
lods
or
and
xchg
aam
push
fs
daa
sub
mov
mov
data16
push
pop
fcoml
dec
pop
push
test
mov
loopne
fs
clc
call
das
call
enter
loope
inc
fsubs
pop
les
inc
in
inc
adc
mov
fs
jns
add
xchg
in
push
pop
dec
outsb
and
add
cmp
jb
clc
lret
mov
dec
xor
gs
xlat
jle
mov
push
mov
je
cmpb
jne
jmp
inc
je,pn
out
shlb
and
test
es
popa
xchg
jl
pushl
xor
mov
lcall
adc
dec
fdivrp
and
xchg
inc
lret
or
stos
orb
cltd
in
cli
cld
leave
call
mov
lods
ljmp
and
and
and
cli
mov
mov
xchg
and
sbb
xchg
mov
cmp
or
das
clc
add
inc
scas
adc
sahf
aas
dec
sub
sub
sbb
mov
adc
pop
xor
sarl
push
push
inc
mov
addb
adc
lock
addl
call
stc
adc
and
add
push
rcrb
hlt
mov
add
push
loopne
rcr
or
outsb
std
sbb
push
adc
and
xchg
add
cmpl
push
or
xorl
mov
and
stos
xor
xor
add
add
jmp
sbb
stos
ficoms
mov
add
fildl
xchg
aad
push
sub
push
sub
adc
aam
enter
sbbl
lret
or
aas
mov
jmp
xchg
pop
jp
test
aas
dec
and
call
xor
filds
inc
sbb
xchg
xor
add
in
add
sbb
xlat
sbb
movsb
push
push
adc
cmpl
loopne
xchg
loop
lea
mov
dec
enter
or
call
lcall
xor
mov
inc
cmp
mov
sbb
cmpw
jne
mov
into
cmp
fistl
mov
test
push
mov
add
sub
inc
xor
out
xor
xor
ret
cmp
ret
adc
fisubl
xor
sub
pop
ret
adc
jno
sbb
jp
loope
add
mov
sbb
xor
xor
call
sbb
subl
pop
mov
popf
in
ljmp
and
jl
jnp
pushf
jmp
jmp
imul
jno
cmpsl
xchg
mov
test
in
mov
pop
andb
push
xor
sub
scas
orl
lea
pop
sub
outsb
xchg
xchg
daa
push
pop
in
std
jg
insl
cld
sub
fwait
lcall
mov
adcl
inc
test
push
mov
add
sarb
jne
adc
inc
aad
rorl
ret
xor
clc
and
lret
shll
call
adc
add
out
cmp
roll
int3
in
add
inc
cmp
jb
jmp
imul
jb
xchg
outsb
mov
dec
cld
shrb
and
mov
call
cmp
jg
mov
sub
addr16
rcrl
gs
add
sub
cmp
adc
adc
clc
mov
add
xchg
and
aas
mov
lods
pop
mov
pop
pop
and
dec
cmp
insb
jne
mov
push
andl
xlat
cwtl
in
mov
sub
pop
dec
xchg
andl
sbb
mov
in
cmpl
call
push
sarb
shlb
pushf
push
ds
in
add
push
jmp
jo
cld
pop
and
jmp
inc
test
push
scas
rolb
inc
push
xchg
inc
add
push
xlat
das
clc
xchg
add
iret
push
add
cmp
add
sbb
cmpsl
push
mov
add
adc
jl
ss
sbb
daa
cmp
test
mov
dec
adc
clc
sub
dec
cmpsb
push
test
jbe
or
add
stos
sbb
repnz
and
push
pushl
cli
or
push
mov
in
sub
lock
sbb
push
push
imul
adc
leave
fwait
cwtl
or
inc
es
lret
push
ljmp
dec
mov
orb
mov
jno
mov
fs
dec
xchg
jge
cmp
int3
cmpsl
fstpl
mov
push
mov
dec
cmp
adc
or
adc
cmp
or
data16
cmpb
jbe
into
ljmp
push
sbb
push
cmp
outsl
pop
sbb
jno
lds
push
push
pushl
lea
pop
and
jae
xchg
push
and
decl
xchg
adc
add
out
mov
sarl
pushf
xor
dec
mov
jl
inc
ret
ja
xchg
mov
inc
add
pop
shr
jne
inc
jmp
mov
mov
or
cli
clc
lock
cs
cmpsl
jecxz
add
inc
push
add
les
cmpl
jns
int3
dec
dec
push
nop
and
aaa
popa
xor
ds
mov
gs
jns
rcll
cmc
or
sub
sbb
in
cmpsl
jns
shll
xor
push
sbb
imull
les
push
mov
push
or
mov
pop
dec
mov
cmp
or
stos
and
ret
shlb
and
cmp
inc
cwtl
xchg
inc
and
and
orl
mov
mov
sub
add
sub
dec
inc
xor
stos
in
mov
pop
aaa
push
lods
mov
add
hlt
aam
in
jnp
adc
xor
outsb
pop
and
movsl
jle
cmp
jle
pop
jge
cmp
adc
test
je
repnz
push
jge
movsb
xchg
sbb
jbe
add
pushf
test
xor
add
shll
xor
test
sub
loop
movsb
mov
fbstp
decl
inc
shl
andb
repnz
inc
jbe
mov
clc
pushw
test
dec
jmp
or
inc
lret
test
mov
sub
jl
enter
xor
aad
push
enter
sub
xor
xorl
adc
je
frstor
sbb
add
jne
inc
arpl
lods
pop
shrb
push
insb
ss
sbb
adcl
sahf
adc
jl
outsl
cmp
sbb
sub
testb
popf
xchg
mov
dec
xchg
add
push
inc
outsl
adc
xor
or
sbb
mov
push
cmp
aam
xor
or
sbb
adc
roll
xor
push
shl
push
or
sbb
push
fdivrl
push
addb
sbb
rcrb
mov
mov
or
cmp
mov
loope
fs
inc
mov
sub
ja
xchg
and
sbb
pushf
mov
hlt
or
pushf
insb
jp
les
lret
and
push
sbb
aam
or
and
shr
imul
push
es
pop
adc
cwtl
add
in
inc
dec
inc
xor
xor
inc
xor
and
or
add
lds
inc
pusha
mov
inc
aam
pop
mov
jnp
jnp
sbb
fcompl
cmc
pusha
pop
or
adcl
ret
scas
add
xor
push
lock
inc
int3
or
sub
xor
or
fcomps
mov
add
sbb
mov
push
pop
adc
jmp
inc
subb
add
out
sbb
enter
mov
xchg
pop
js
and
test
push
cs
pusha
xor
push
sub
mov
cmp
mov
andb
outsb
test
sbb
test
jb
push
lcall
and
xchg
rdtsc
pop
dec
clc
xchg
cmp
aam
nop
or
clc
in
adc
xor
xor
and
addb
sbb
movsb
mov
push
addb
and
inc
pusha
mov
cmp
mov
and
sub
push
mov
inc
sub
movsl
decb
stos
lahf
lea
or
jge
inc
inc
dec
and
jecxz
mov
add
addb
sbb
push
add
dec
inc
pop
roll
insb
or
add
xor
test
sbb
or
mov
enter
pusha
xchg
mov
cmp
push
ja
insb
sub
inc
sarl
add
mov
adc
or
mov
push
dec
fisubl
mov
xchg
mov
addl
je
adc
roll
pop
inc
xor
or
dec
or
add
rolb
fistl
pushf
sbb
addb
adc
adc
enter
mov
or
pusha
push
sbb
orl
sbbl
inc
jo
mov
lock
popa
and
cwtl
push
repnz
inc
or
icebp
mov
push
and
or
add
lds
shlb
cwtl
roll
loopne
push
adc
push
js
push
roll
hlt
inc
xor
xor
mov
xchg
adc
les
jne
loopne
shll
or
add
in
adc
les
shl
add
push
mov
sbbl
or
adc
pop
movsl
jl
adc
les
inc
lea
sbbl
je
rorb
pusha
mov
sbb
loope
mov
sar
and
or
sub
sbb
dec
js
loopne
adc
jecxz
and
ficoms
sbb
inc
ret
dec
xor
xorb
cmp
cmp
add
fisttpl
dec
or
subl
sbb
push
data16
andl
sbb
push
inc
cmpb
lea
repnz
xor
mov
inc
ficoms
stc
cmp
push
mull
mov
sub
and
lret
in
xchg
orl
xchg
inc
push
or
push
and
sub
xor
fs
rcll
call
mov
movsb
in
jne
in
test
and
mov
xor
cmpsb
cmp
dec
dec
jne
popa
sub
rol
and
xor
aam
sbb
mov
and
dec
and
and
sbb
push
and
inc
sbb
adcl
or
push
adcb
add
lds
fdivrs
xor
xchg
inc
je
and
push
or
adc
cwtl
stos
movsb
add
jae
xchg
movsb
xchg
movsl
pop
cmp
jb
dec
jne
dec
movsl
cmp
jl
cmp
int3
mov
jp
gs
adc
bound
sub
jo
xchg
test
sub
data16
cmp
push
cmp
imul
add
das
and
andl
ret
cld
dec
push
push
pop
push
aam
in
adc
fdivrl
adc
inc
movsb
movsb
cmp
adc
mov
mov
push
cmp
push
jb
ljmp
mov
or
imul
rclb
popa
dec
pusha
mov
or
mov
pusha
mov
xor
or
outsl
jno
jmp
loopne
inc
ljmp
xor
sub
mov
inc
mov
mov
daa
rolb
loopne
les
inc
incb
or
insb
adc
xor
sbb
shll
mov
pop
xlat
pop
cwtl
inc
dec
insb
sub
mov
xchg
mov
sub
xor
mov
inc
mov
aam
add
sub
enter
les
sub
mov
les
cs
inc
test
cmpsl
push
dec
and
adc
or
xchg
cli
daa
and
mov
or
inc
cmp
dec
mov
dec
and
inc
cmp
sub
cmpsb
adc
pop
je
adc
sahf
inc
cmp
dec
and
or
adc
je
inc
cmp
jb
adc
pushf
inc
cwtl
mulb
inc
jb
jmp
cmp
inc
clc
push
ret
jo
or
lret
dec
dec
adc
or
loopne
xchg
push
or
fadds
icebp
adc
sub
adc
or
dec
cmpsl
adc
pop
inc
cmp
adc
sub
xor
sub
test
mov
pop
outsl
mov
cmp
nop
or
adc
fcmove
rcll
pop
inc
loopne
int
mov
mov
inc
push
mov
or
inc
daa
cld
bound
inc
push
xchg
and
push
add
cmp
fwait
cmp
arpl
push
es
je
cmp
cwtl
cmp
add
jno
adc
sbb
decl
pop
lds
stos
movsb
mov
xchg
push
sbb
fnsetpm(287
xchg
je
or
aam
sub
fsubr
jecxz
add
jmp
add
and
cmpsb
inc
lods
aas
dec
and
in
sub
je
cmp
pop
jle
push
jg
mov
adc
jo,pn
push
cmp
aas
in
adc
xor
xchg
addl
ljmp
sub
subl
andl
mov
ret
xchg
sar
pop
je
mov
sub
jo
loope
dec
dec
je
and
je
and
test
pusha
and
xlat
insb
dec
or
adc
ret
sub
adc
or
daa
rcll
mov
cmp
mov
aas
daa
add
sbb
dec
prefetch
mov
pushf
test
or
rol
push
popa
loopne
push
push
add
je
lea
add
adc
movzbl
lea
push
loopnew
push
shlb
or
push
push
add
and
push
sbb
adc
or
jo
mov
mov
mov
push
pop
dec
adc
cmp
mov
inc
dec
push
push
push
pusha
addr16
mov
mov
sbbl
add
add
or
sbb
or
idivl
xchg
fs
loop
cmp
inc
hlt
inc
pop
leave
xor
sub
and
stos
cmp
xchg
out
push
int3
push
and
xchg
cld
or
or
mov
cmp
jle
das
xchg
loopne
daa
cmp
inc
cmp
adcb
sub
adc
aaa
jle
inc
je
push
mov
jmp
mov
pop
inc
gs
adc
or
cld
pop
mov
pop
in
shlb
rcrl
and
add
pushl
push
pmulhw
sti
xor
and
xor
hlt
inc
mov
or
inc
add
jl
xchg
clc
add
xchg
jge
pushf
jno
jbe
ror
pop
pop
pop
sbb
neg
cmpsl
xchg
fprem1
gs
loope
test
push
cmpsb
or
cmovs
add
mov
call
jge
add
push
push
call
in
push
pop
out
push
inc
or
or
aas
add
push
mov
mov
push
and
movb
mov
or
adc
cmp
xchg
push
pop
addl
push
test
nop
adc
and
jno
jecxz
mov
ss
add
js
mov
add
test
test
idivb
jne
orb
cmp
rcll
mov
pushl
dec
inc
ret
pop
pop
pop
mov
push
pop
inc
dec
cs
or
sahf
pop
jge
mov
shrb
adc
stc
jmp
gs
lock
imul
cld
mov
ja
movsb
loopne
jbe
je
lods
sub
out
insb
jno
repnz
pop
mov
mov
jbe
stc
pop
push
push
mov
inc
jg
jbe
aas
add
or
push
pop
outsb
mov
xor
stos
mov
inc
gs
std
mov
or
xchg
push
aaa
mov
lds
lcall
mov
lock
into
insb
call
repz
push
jmp
xchg
mov
mov
je
cmp
je
gs
outsb
ret
std
in
int3
xchg
mov
or
ret
std
add
outsl
cmp
and
insl
nop
ficoms
mov
xor
test
mov
stc
in
outsb
stc
test
xor
and
in
push
ljmp
cvttps2pi
in
out
cmp
fsub
fimuls
pop
push
and
in
clc
inc
loope
mov
jmp
cmp
xchg
out
xchg
out
mov
sbb
je
jne
cmp
faddl
nop
adc
pushf
push
pop
test
out
movsb
xchg
push
push
pop
cmp
sub
dec
xchg
jp
xlat
jmp
mov
and
cmp
mov
into
js
pop
sub
adc
push
inc
push
testl
adc
add
and
inc
push
cmpsb
add
pop
rcll
mov
out
jp
popf
sub
sbb
enter
ds
push
mov
out
inc
cmp
les
dec
mov
faddl
push
push
call
mov
mov
mov
std
inc
std
sbb
gs
xchg
loope
movsl
addr16
adc
iret
fsubrs
adc
push
xchg
sub
shll
pop
cmpb
pushl
xor
into
pop
add
sbb
jno
adcl
dec
adc
or
or
rcrb
and
sbb
dec
cli
mov
sub
push
xchg
adc
xchg
add
or
and
sub
or
fdiv
sbb
pop
xor
pop
xor
adc
cmpsb
inc
mov
lea
ret
es
pop
sub
adc
mov
push
sbb
cmp
mov
push
or
and
sbb
inc
jns
push
and
mov
aaa
push
or
mov
dec
cmp
sub
loop
in
pop
mov
shl
test
or
je
in
mov
inc
dec
and
inc
addl
push
push
sub
xchg
adc
xchg
xor
mov
aam
mov
cmp
adc
lea
and
addl
scas
sub
push
xchg
adc
cmp
sub
pusha
xchg
lock
mov
sbb
inc
xchg
push
jns
addr16
adc
sbb
cmp
add
and
jmp
and
mov
add
xor
dec
add
cmp
mov
jp
sbb
sub
xchg
leave
test
subb
call
mov
sbb
loope
scas
scas
enter
sar
lods
xor
call
push
adc
test
dec
and
hlt
je
cmp
enter
or
nop
rclb
test
jno
pop
xlat
jns
xor
cltd
jge
and
mov
pop
ret
pushf
enter
sbb
jo
ret
sahf
pop
add
pop
adc
ret
jmp
sbb
inc
nop
xchg
sbb
adc
xor
or
mov
ret
push
loop
xchg
pop
ret
mov
inc
sub
cmp
andl
xchg
rcr
jne
inc
pop
xchg
lcall
mov
xchg
jnp
pop
je
adc
sbb
xorl
xor
je
xchg
sbb
and
popa
pusha
and
push
fstpl
and
fs
andb
xor
mov
add
call
enter
push
js
or
jo
mov
pop
dec
test
dec
test
jmp
sbb
icebp
ja
jo
xor
sbb
lds
je
sub
test
adc
or
std
or
inc
dec
push
or
pop
ds
xor
sub
pop
pop
shrb
ret
sub
cmp
sbb
add
shlb
push
int3
mov
in
push
sub
push
mov
pop
cld
or
pop
push
cmp
insb
imul
xor
xchg
adc
lea
inc
out
mov
mov
mov
sub
rol
shlb
sbb
mov
and
shll
mov
aad
pusha
or
xor
push
pop
jmp
lea
push
addr16
sub
inc
addb
dec
sub
shll
lret
push
pop
jle
xchg
and
sbb
in
repz
dec
imul
repz
js
sbb
push
orl
jmp
push
push
push
rcrl
leave
xor
inc
imulb
or
iret
sub
push
mov
push
popa
and
inc
mov
mov
xchg
xor
popa
mov
mov
test
push
push
cmpsb
test
ret
je
int
add
fisubs
fs
jae
enter
es
decb
pop
sbb
leave
pushf
andb
mov
push
fdivl
jl
in
xchg
jbe
and
adc
pop
mov
and
fnsave
in
fs
pushf
mov
adc
nop
cmp
mov
mov
and
and
cld
fdivs
sub
aam
jmp
and
adc
mov
arpl
pop
mov
cmp
xor
mov
nop
dec
adc
mov
lods
push
push
pop
xchg
out
sahf
xchg
fistl
jmp
jmp
pop
cwtl
sub
shll
push
push
xchg
or
xor
xlat
adc
test
jb
sbb
or
add
push
imul
or
stc
or
scas
inc
xchg
or
cmp
shrd
lods
mov
dec
pop
or
iret
daa
pusha
mov
add
aaa
out
push
jp
insl
mov
push
xor
ret
mov
in
data16
bound
add
dec
dec
push
mov
bound
in
push
mov
adc
lret
dec
jge
push
into
dec
push
pop
xor
pop
add
and
and
add
xchg
or
jb
xchg
ficoms
or
push
fs
adc
or
sbb
test
cmp
push
dec
adc
jge
div
and
push
and
add
lcall
mov
mov
xchg
hlt
std
enter
sbb
cld
push
aam
xchg
sub
stos
vdivps
ds
fwait
add
call
add
or
jo
or
mov
aam
cltd
cmp
lock
popf
enter
jbe
pop
cwtl
arpl
or
dec
nop
movsl
or
lock
int3
adc
cwtl
icebp
mov
push
or
faddl
cs
pushf
pop
incb
fstl
arpl
push
nop
mov
inc
jmp
push
pop
adcb
stc
leave
mov
or
mov
pop
addb
les
movsl
adc
pop
dec
rcrb
pop
js
orl
jns
lcall
push
cmc
cltd
hlt
xchg
inc
in
cmp
push
xor
lahf
push
in
lock
push
or
sahf
or
bound
cwtl
push
push
and
sahf
cld
push
pop
js
push
adcl
add
jbe
rcl
mov
sarb
aam
adc
shll
inc
adc
or
insl
daa
shll
mov
push
cmpsl
xor
inc
call
insb
push
add
inc
cmc
lret
cmpsl
mov
jmp
in
stos
dec
xor
mov
clc
mov
roll
fisubrs
mov
or
add
dec
icebp
dec
sbb
leave
ljmp
xchg
hlt
mov
xchg
sub
lcall
and
nop
inc
lcall
rcll
mov
popf
fnsave
ja
xchg
push
jge
sub
leave
dec
and
cmp
sub
in
and
sbb
inc
inc
es
sub
mov
dec
dec
add
adc
scas
popf
xor
fisttpll
cld
mov
sbbb
jae
adc
pop
jb
insb
push
mov
pushf
and
hlt
ret
test
push
aam
shll
pop
bound
adc
stos
or
sub
pop
inc
enter
adc
and
dec
push
mov
dec
leave
mov
push
loop
inc
sub
lcall
mov
frstor
mov
mov
lock
jg
and
adc
push
adc
mov
fisubrs
repnz
imul
xchg
pusha
mov
imul
pop
mov
and
fisubrl
sub
jp
pop
mov
xchg
mov
bound
out
mov
xchg
xor
sub
insb
inc
arpl
inc
push
ja
or
mov
repnz
jne
mov
or
jb
jmp
mov
xchg
or
dec
daa
jno
mov
and
jne
pop
jmp
nop
push
call
inc
inc
pushl
mov
cld
bound
or
cwtl
or
es
mov
stos
inc
and
int
mov
movsl
xchg
movsb
xor
xchg
leave
into
aas
stos
cltd
cmp
mov
adc
bound
insl
popf
and
jne
inc
add
adc
sbb
daa
shlb
sub
insl
inc
cmp
cmp
fimuls
mov
popa
sarl
mov
push
sbb
adcl
gs
and
sti
or
pop
cmp
fdivrp
je
loope
mov
enter
sbb
fnstsw
inc
pop
hlt
push
imul
ret
push
mov
or
dec
in
mov
popf
test
push
sbb
dec
gs
adc
addb
stos
pop
cmp
hlt
clc
pop
callw
or
and
xchg
dec
mov
and
js
loopne
inc
adc
xor
loop
push
mov
mov
jns
enter
ja
repz
sub
jb
inc
insl
xchg
leave
inc
cld
mov
stos
enter
jb
adc
add
mov
daa
sbb
loope
movsbl
push
push
mov
adc
sbb
les
inc
add
and
push
push
clc
add
sahf
jne
cmp
lock
mov
pcmpgtd
push
push
mov
imul
or
ret
shrl
sbb
push
xchg
inc
xor
sub
add
imul
xchg
or
push
orb
inc
shlb
jbe
jns
jbe
inc
rcrl
sub
inc
mov
call
push
lret
bound
test
ret
fcomi
icebp
fmuls
mov
add
or
testb
notl
push
push
mov
in
subb
jmp
xor
mov
jl
aas
sub
mov
push
xor
imul
and
cmp
jg
inc
es
push
out
dec
out
jle
inc
lahf
shrb
xor
aas
test
sub
pop
int3
lahf
and
repz
xorl
jmp
or
pop
pop
or
add
mov
rdtsc
push
mov
subb
rcll
nop
push
xchg
ficomps
repnz
aas
pop
push
add
add
fbstp
fs
mov
sub
and
add
cmpsl
mov
ja
jb
sbbl
jae
push
pop
cmp
dec
inc
inc
push
add
aaa
cmp
sub
pusha
cmp
cmc
inc
pmaddwd
sbb
jg
lret
orl
fwait
adc
sub
pop
sbb
add
adc
pop
pop
mov
or
sbb
aas
cmpl
iret
sbb
xor
or
mov
loop
cmp
lahf
and
pop
dec
inc
icebp
jmp
add
cld
sbb
jns
cmp
push
push
cld
or
loopne
inc
push
inc
cmp
inc
ljmp
sub
mov
test
sub
add
je
jb
add
jne
cmp
loope
cwtl
xchg
sbb
mov
cmp
sbb
cmp
aam
mov
push
mov
dec
cmp
jno
addr16
push
jl
or
lea
jle
jo
sub
cmovbe
mov
add
jmp
add
xor
sub
sti
popa
sti
bound
mov
inc
mov
push
jae
call
inc
jg
out
push
sub
xchg
xchg
movsl
enter
cli
int
daa
lahf
push
in
xchg
pop
and
cwtl
mul
mov
sbb
mov
cld
adc
cwtl
stc
inc
inc
lock
cld
push
lahf
pop
dec
xchg
push
es
lods
push
adc
popa
in
test
and
mov
cmp
jb
sahf
cld
push
and
in
shr
sub
stos
adc
mov
sarb
call
in
push
inc
mov
dec
call
mov
stos
imul
mov
lcall
and
insl
jo
cmp
or
xchg
inc
xor
adc
fmuls
push
xchg
aas
imulb
cmpb
orl
jmp
mov
xchg
jae
push
out
xchg
or
imul
mov
addr16
testl
sbb
jge
jnp
or
imul
mov
test
shr
add
and
inc
dec
je
test
jmp
cld
shl
push
and
push
cmp
adc
dec
jne
dec
or
stos
adc
pop
ret
test
je
dec
adc
out
cmpsl
arpl
cmp
push
cmp
or
push
imul
push
testl
jmp
lock
ret
test
add
je
test
je
test
pop
cmpsl
push
shufps
mov
inc
or
lcall
xchg
or
xchg
jne
jne
lahf
fiadds
push
fildl
inc
mov
repz
add
sub
xchg
pop
lret
fmuls
sub
push
enter
xor
lret
add
push
rep
push
jne
jno
dec
sti
addr16
ret
repnz
xchg
jno
or
mov
fs
add
add
or
cmp
or
je
push
iret
dec
idivl
inc
icebp
xchg
mov
push
roll
add
rorb
ret
nop
sbb
shl
inc
ret
inc
daa
xchg
arpl
add
inc
cmpsb
inc
jmp
or
test
mov
leave
rcll
mov
in
popf
ljmp
sub
inc
in
leave
cmpsb
xchg
loopne
cmpb
in
lock
mov
mov
jmp
je
add
xor
push
jno
dec
ret
fldt
aaa
adc
popf
cmp
jecxz
ljmp
push
push
call
lods
push
icebp
shrb
movzbl
fbld
loopne
dec
push
mov
out
mov
adcl
jmp
mov
jecxz
sub
ret
lods
sub
xor
clc
xchg
push
mov
call
push
jecxz
jo
fadds
mov
lea
lea
jmp
cmp
cmp
mov
jne
fdivs
xor
aas
cmp
rcll
lret
cmp
inc
data16
mov
inc
mov
and
sbb
mov
roll
inc
nop
add
inc
jne
add
add
repnz
adc
mov
mov
test
test
adc
repz
inc
ljmp
rcl
push
loop
std
pop
shlb
cld
int3
adc
xor
or
push
movsb
and
and
ret
rclb
inc
and
push
js
push
jns
jo
push
sbb
jmp
std
jmp
cld
inc
sbb
or
and
sbb
pop
inc
sbb
or
jmp
add
and
aam
inc
dec
adc
and
mov
xor
loop
xchg
add
pop
mov
adc
sbb
mov
out
and
sub
out
push
fldenv
push
push
jecxz
nop
cmp
push
fildl
inc
pop
push
push
push
inc
bndldx
lock
popl
mov
inc
add
adc
out
jne
dec
or
mov
jmp
mov
inc
xor
mov
push
xorl
inc
ljmp
add
cvtdq2ps
daa
xor
popf
nop
rorb
sub
jo
cmp
shlb
push
add
jle
lcall
sub
push
adc
stos
test
and
mov
jmp
test
cmp
and
xor
int
rclb
fldenv
insb
jmp
jno
fwait
loop
and
push
scas
stc
pop
test
push
fistps
lods
push
mov
adc
addr16
mov
pop
inc
cmp
je
or
mov
mov
popa
xchg
lock
lods
rorb
sub
inc
cmp
les
mulb
sbb
lahf
push
je
jmp
mov
jmp
mov
inc
lcall
or
outsl
xor
outsl
pop
in
sub
rorl
dec
add
cmp
jb
les
pop
ss
mov
jb
and
mov
aas
pushf
mov
sub
jb
add
ret
in
test
cmpsl
in
mov
jl
mov
les
pusha
and
mov
or
mov
mov
add
mov
pop
ds
int3
lea
or
add
and
popa
inc
stos
inc
inc
mov
xor
sbb
mov
sbb
add
in
inc
in
cmpl
call
cmpl
lock
xor
test
cmp
add
cmp
lea
clc
add
sub
add
or
add
in
leave
sahf
nop
adc
call
xchg
push
shr
inc
lea
cmp
loope
mov
int3
inc
xor
dec
mov
xor
stc
scas
mov
cwtl
cwtl
push
and
push
nop
cwtl
mov
aas
add
sahf
repnz
dec
dec
in
insl
xchg
mov
jecxz
jo
sti
pop
loope
add
test
insb
and
jb,pt
pop
mov
popf
pop
sub
addr16
push
or
inc
mov
push
pop
mov
push
push
ja
sbb
sbb
inc
sbb
aam
sbb
sbb
or
inc
sbb
arpl
lods
roll
or
inc
push
push
mov
fcomip
icebp
ds
jg
insb
adcb
rolb
or
inc
pop
add
mov
ret
imul
shlb
cltd
add
cmpsb
cltd
mov
pop
jge
cmp
shll
and
adc
or
sbb
cmp
jno
add
mov
jmp
mov
sar
enter
add
or
scas
js
adc
jno
mov
pop
jmp
or
pop
push
enter
imul
jno
daa
call
mov
push
stos
and
or
std
jnp
mov
or
sub
loope
cmp
add
sub
test
jae
roll
loope
pushf
ficoms
add
ret
mov
rolb
shrb
pusha
or
in
xlat
adc
into
add
mov
shll
cmpsl
call
in
add
and
or
addb
cmp
cmp
jmp
movsb
arpl
cmpl
mov
clc
add
inc
dec
mov
cmc
test
mov
cmp
adc
cmp
jb
mov
or
sbb
add
xor
and
xor
xorl
push
andb
test
pop
jne
bound
and
ret
push
mov
cmp
push
push
jae
movb
ficoml
push
jge
lret
ss
imul
or
and
adc
dec
inc
gs
rorb
lahf
adc
sbb
mov
jnp
cmp
cmc
add
adc
mov
add
data16
inc
inc
es
jg
cmp
and
adc
cmpb
jmp
adc
mov
testb
hlt
add
push
push
scas
xor
je
jne,pn
xchg
fistpll
mov
dec
ror
mov
jo
je
xor
loopne
sub
cmp
jb
sti
dec
push
rcll
aaa
sarb
push
or
leave
mov
enter
cld
shll
lea
adc
fimull
dec
jge
fcompl
jns
sub
or
or
push
call
iret
out
mov
inc
dec
pop
sub
push
jbe
mov
popa
xor
lahf
ficoms
xor
sti
jg
andps
ljmp
mov
add
push
add
jmp
call
in
pop
push
ret
push
add
jne
andb
andb
icebp
xor
jmp
jmp
sub
repnz
rclb
cmp
pop
lea
jne
ret
push
sbb
ljmp
add
cmp
jne
xor
jmp
sub
and
jmp
movsb
inc
rolb
jg
pop
jne
xor
jne
adc
mov
dec
sbb
add
js
or
adc
cmc
clc
mov
jne
iret
icebp
inc
nop
jne
add
sbb
inc
inc
pop
jg
sub
in
mov
test
ret
cltd
sbb
cmpl
rorl
push
jno
in
mov
shlb
dec
xor
call
in
inc
aaa
cmp
ss
sbb
jle
adc
aas
mov
cmp
jbe
jo
sbb
imul
icebp
rcrl
or
aam
and
mov
sbb
test
lds
pop
or
dec
add
inc
loop
xor
add
and
arpl
add
add
adc
jne
cmp
jbe
imull
jl
testb
add
push
and
je
add
fstps
leave
neg
add
mov
test
add
popf
std
or
aam
neg
mov
jg
mov
jno
adc
movsl
mul
inc
scas
rorb
mov
sahf
rolb
les
mov
out
xchg
pop
je
sub
cld
pop
movsb
in
pop
dec
inc
inc
push
inc
gs
or
into
call
insl
mov
push
or
and
stc
or
inc
mov
insb
cmc
test
je
adc
and
adc
inc
popf
daa
gs
jmp
sbb
push
jmp
sbb
xchg
push
mov
xor
cmp
pop
mov
adc
in
xchg
adc
push
push
mov
ljmp
dec
sbb
cmp
add
leave
outsl
sbb
inc
jb
fs
or
mov
mov
pop
mov
cmp
jecxz
mov
insl
cmc
jae
mov
add
imul
stos
psllq
inc
add
fmuls
not
mov
pop
adc
jbe
or
lea
push
sbb
lds
add
or
or
fnstenv
leave
je
add
and
in
or
push
adc
adc
or
ror
or
icebp
dec
xor
xchg
mov
jb
and
roll
xchg
xor
out
rcl
add
jo
sub
je
out
cmp
je
lahf
inc
jmp
out
out
xchg
and
push
aam
xchg
dec
pushf
mov
gs
push
std
cld
imul
jb
insl
push
push
add
rep
push
pop
mov
mov
ds
out
and
pop
jge
mov
inc
add
movsl
jne
movsl
repnz
faddl
push
lock
add
jecxz
out
add
rolb
inc
jmp
mov
into
adc
push
and
xchg
pop
shl
call
jne
test
xchg
inc
sub
pop
mov
and
imul
cwtl
pop
adc
enter
loop
or
loope
loope
mov
push
lock
mov
inc
push
loope
rcrl
xchg
inc
inc
push
push
call
xor
inc
dec
fwait
inc
add
inc
mov
les
xor
adcb
lods
xor
push
mov
fistpll
dec
in
adc
testl
inc
sbb
pop
movl
mov
xchg
dec
pop
in
je
and
dec
push
lods
es
clc
push
cmc
or
or
jle
add
xor
in
sub
add
or
das
pop
or
xor
or
cmpsl
jne
andl
or
adc
cli
icebp
adc
push
in
xor
je
or
js
add
fdivrs
jb
fwait
sub
mov
or
adc
pop
je
incl
lret
pop
or
aas
ljmp
rcl
or
add
push
and
adc
or
out
xor
mov
dec
mov
add
ja
pop
dec
sub
add
xorb
pushf
jbe
fmulp
pop
dec
js
sub
adc
aas
and
jg
xor
add
ret
sub
lea
and
inc
add
cs
push
in
inc
pop
mov
test
negl
pop
aad
jbe
jmp
cs
jge
add
aam
pop
lods
lret
ss
call
push
push
mov
push
rcr
loop
ret
mov
mov
mov
inc
in
les
push
test
xor
mov
dec
mov
pop
cmpsb
es
aad
in
in
call
xor
dec
cmp
lods
and
adc
aad
int3
add
push
arpl
fisttps
test
or
ljmp
mov
and
mov
sbb
mov
sbb
int
addl
ret
test
addb
sub
sbb
data16
fadd
fcmove
add
jnp
sub
add
scas
jmp
jmp
xchg
sub
push
jne
mov
aad
mov
or
pop
dec
aad
clc
aad
imul
dec
push
mov
add
std
std
das
cmp
je
rcl
mov
pop
test
or
rcll
ljmp
repz
cmp
mov
ss
call
jg
out
push
lahf
add
xchg
addr16
cs
jns
mov
je
shrl
push
push
sub
repnz
inc
icebp
push
bound
je
aaa
sub
add
cmp
mov
xor
adc
jmp
jg,pn
je
mov
js
lret
cli
in
call
mov
lret
xchg
das
sbb
loopne
dec
out
jmp
and
mov
insb
xchg
mov
xor
inc
pop
xor
add
pop
test
je
and
aas
push
inc
nop
jmp
test
test
insb
or
push
pop
xor
push
out
xchg
insl
jns
scas
mov
jg
dec
ja
and
add
jl
or
xlat
movsl
sti
lods
aam
cmp
clc
jo
fistl
xor
test
inc
inc
data16
pop
les
xor
jp
push
mov
negl
clc
add
and
mov
inc
jmp
int3
out
cli
add
bound
mov
or
enter
je
test
mov
pcmpeqw
inc
dec
mov
cmp
add
jne
mov
mov
cmp
push
ret
call
jecxz
and
add
je
mov
mov
mov
ret
cmp
adc
push
sbb
push
ljmp
cmp
sbb
pop
sbb
push
sub
inc
les
lret
or
out
adc
dec
and
test
dec
dec
stc
leave
mov
cmp
jmp
cwtl
sbb
movsl
in
xor
fldt
lret
xor
add
adc
push
bound
mov
inc
push
xchg
das
lea
lret
dec
push
cmp
jp
es
adc
je
inc
cld
dec
cmp
lret
bound
sbb
push
adc
jne
xchg
jecxz
inc
test
cwtl
push
jmp
pop
aaa
movsb
mov
sbb
mov
roll
les
xor
imul
enter
cmp
movsl
addr16
push
or
pusha
jecxz
aas
loope
jmp
pusha
xchg
adc
fcoml
or
sbb
ss
xchg
outsb
pop
or
xor
push
add
xorl
shrl
jl
je
movsb
call
add
cld
pop
test
add
imul
pushf
push
dec
sub
stos
lret
push
mov
mov
push
popl
jno
push
jmp
jns
rol
adc
sbb
add
inc
js
pushf
out
jle
iret
inc
xchg
inc
add
mov
pop
inc
inc
inc
push
adc
test
cmp
andl
iret
push
or
mov
push
jg
lods
ja
rolb
shr
inc
cltd
lret
test
pop
push
push
add
shr
rcr
shr
rcr
or
jne
div
mov
shll
inc
or
shll
cmp
jb
cmp
and
imul
adc
shl
adc
ret
adc
mov
xchg
cs
add
xchg
adc
mov
xchg
sub
push
sub
and
neg
add
fidivrl
push
and
notb
mov
inc
mov
test
nop
outsb
push
add
sbb
outsl
sbb
cld
bound
xchg
inc
inc
imul
adc
jmp
mov
fcomi
mov
and
sbb
and
push
adc
pop
sub
rcl
movsl
push
ret
into
call
addr16
mov
jg
push
inc
push
mov
jl
jg
sub
mov
jne
jmp
push
out
adc
mov
xor
cmc
and
mov
xchg
in
stos
daa
es
sub
cltd
xor
sub
or
nop
or
jae
out
and
or
pop
popa
cmp
or
mov
and
cs
lea
or
or
imulb
rcl
dec
out
cs
push
or
scas
or
mov
mov
int3
jge
cmp
cmp
xor
cmp
xchg
dec
or
enter
jo
sbb
xchg
pushf
mov
inc
inc
inc
in
cltd
hlt
ds
or
lds
sub
or
xor
je
cli
jle
call
mov
or
dec
cmp
je
and
stos
sub
outsl
lea
movsb
adc
cmpsl
pop
mov
sub
or
and
decl
dec
iret
push
ficoms
ret
repnz
jne
jmp
outsb
faddl
or
bound
pop
sbb
cmp
sahf
inc
or
xor
mov
xchg
aas
push
pushf
dec
jl
mov
push
mov
mov
ljmp
jo
aam
adc
push
loope
jno
push
or
add
fstpl
adc
call
shrb
call
pusha
add
mov
and
sub
inc
icebp
fsubrl
nop
mov
leave
inc
add
xor
sbb
mov
lea
adc
mov
mov
sbb
call
pop
cmpsb
pcmpeqb
pusha
and
aam
pop
cmpsl
cli
jns
pushf
pop
pusha
cmp
pushf
and
mov
inc
mov
or
inc
sub
inc
repz
test
cmpl
mov
dec
pusha
pop
test
cmpsl
daa
cwtl
or
test
pop
cmc
test
and
mov
inc
inc
pop
adc
jae
add
xor
push
andl
in
jb
adc
ret
dec
or
dec
or
mov
mov
mov
add
or
add
and
cmp
aam
fsub
leave
out
out
int
movsb
dec
sub
pop
pop
pop
test
pop
mov
fs
ds
push
outsl
rclb
dec
dec
add
adc
pop
push
pop
inc
ja
mov
or
mov
mov
js
pushf
lret
sar
and
xchg
add
mov
mov
xor
test
add
adc
out
cmp
mov
mov
jmp
mov
fidivrl
or
jb
sub
jge
pop
test
dec
loop
sub
and
jmp
mov
repz
into
stc
les
push
mov
inc
push
loop
out
mov
push
pop
test
push
sbb
pop
lock
and
fcmovnbe
cmp
jl
cs
jl
js
push
xchg
pop
loope
mov
xor
je
mov
mov
fsubs
lcall
inc
mov
pushf
loopne
daa
fsub
in
adc
adc
fsubr
js
mov
cmp
add
sub
outsl
test
adc
cmp
jmp
add
jmp
addb
sub
cmpsb
and
sub
jmp
and
cmc
push
jbe
cld
cltd
jge
dec
neg
jmp
mov
inc
shr
repnz
push
icebp
jmp
aam
loope
push
mov
data16
jmp
rcrl
lret
pop
jno
adc
test
jmp
push
je
insb
or
xchg
mov
dec
std
xchg
push
adc
mov
jmp
sub
ss
cmpb
jne
inc
inc
subb
mov
lods
sti
dec
shl
and
fiaddl
imul
sub
jmp
stc
inc
mov
xchg
stc
je
mov
push
add
addr16
and
sbb
push
lea
xor
ret
js
inc
rcrl
icebp
push
in
stos
jo
or
pop
jmp
out
hlt
shll
add
push
test
adcb
add
outsl
sbb
adc
cmp
or
lods
nop
adc
dec
sarl
dec
test
aam
adc
shlb
inc
inc
jmp
int3
rorl
inc
lea
cmp
add
iret
lock
subl
mov
mov
outsb
or
add
adc
lods
add
xor
es
loope
test
fld1
pop
je
or
pop
cltd
sub
call
outsb
add
fadds
call
xor
mov
push
jmp
adc
add
icebp
mov
testb
or
or
mov
and
mov
mov
bound
pop
jmp
sbb
cwtl
dec
ljmp
or
outsl
adc
jne
negb
sub
adc
sbb
and
clc
mov
mov
mov
in
int3
jg
call
adc
out
incb
jae
dec
test
popl
imul
dec
pop
sbbl
add
push
test
mov
loop
lret
mov
inc
sahf
cmpb
pusha
test
inc
adc
popf
jp
sbb
cltd
inc
fstpt
daa
and
mov
cmp
or
je
mov
jmp
icebp
and
lock
sbb
dec
je
shlb
push
cld
adcb
push
pop
out
in
jo
ds
xor
bound
test
mov
jmp
or
add
xor
sbb
and
mov
add
dec
mov
add
popl
mov
or
pop
jmp
adc
inc
je
inc
incb
enter
pop
rcrb
shr
pusha
and
or
call
sbb
call
sbb
in
ret
mov
jae
pushf
sub
leave
rolb
loop
push
jmp
orl
out
jp
xchg
ss
add
or
jne
mov
scas
mov
loopne
inc
push
ds
cltd
push
mov
mov
clc
les
rcrb
cwtl
mov
rolb
sti
cmp
add
add
jns
clc
mov
jmp
or
cmpsl
mov
ds
add
cmpb
jne
dec
push
std
inc
ret
push
movb
jge
es
pop
shl
mov
repz
test
stos
lock
or
or
js
sub
je
and
stc
shl
sub
clc
popa
dec
hlt
or
inc
xchg
adcb
call
jl
add
in
rcll
jo
push
cmpsb
cwtl
rclb
add
call
or
add
testl
enter
das
adc
and
dec
pop
adc
int3
jnp
jne
call
js
cwtl
mov
call
sbb
in
jno
xor
jge
and
popa
adc
add
inc
add
shll
cmp
jo
loopne
or
in
add
or
dec
add
push
mov
mov
imul
adcl
jp
clc
jne
jae
pusha
icebp
sbbl
add
icebp
sbb
jmp
push
jecxz
addb
cmpb
mov
or
ret
dec
dec
jno
sub
sbb
stos
push
mov
push
inc
sbb
pop
loope
aas
pop
jmp
inc
jmp
das
addl
xchg
xorl
repz
cld
jae
adc
data16
xchg
nopl
xor
and
or
int3
pop
mov
mov
pusha
shlb
psllw
pop
incb
mov
push
sub
add
adc
movsb
bound
push
cmc
clc
mov
inc
addr16
cmp
sahf
cmp
or
cmpb
imul
dec
pop
inc
sbb
xchg
dec
cmp
add
aaa
inc
sbb
mov
mov
mov
mov
pop
mov
pop
rcr
loope
out
or
dec
sbb
mov
adc
insb
add
daa
xor
add
pop
sbb
in
adc
mov
inc
xchg
inc
cltd
sub
adc
testl
adc
addb
popa
jl
cmp
jg
sub
mov
inc
cmp
jne
ret
popf
push
xor
jbe
call
pushf
xor
jmp
fs
cltd
ja
ja
mov
call
scas
xchg
mov
fldt
push
bound
into
orl
cmp
cmp
jne
mov
jmp
push
push
fidivrs
sbb
movsl
loop
mov
and
sbb
pop
in
fwait
call
push
pop
insb
mov
add
sbb
jl
sti
outsl
dec
rcl
and
push
imul
nop
mov
clc
inc
adc
sub
add
adc
call
xchg
mov
pushf
mov
ret
lret
dec
ret
push
cli
fwait
xchg
sbb
cwtl
loope
or
sbb
test
loope
jmp
in
in
push
push
or
mov
shll
add
push
sub
cmp
pop
adc
call
stc
das
sbb
add
pop
inc
incb
or
out
push
xchg
popl
jnp
mov
inc
xchg
jno
in
push
dec
jb
cmpsl
out
xor
inc
out
adc
lea
mov
imull
sbb
mov
add
pop
or
jle
cli
add
cmp
jbe
push
loope
add
pop
mov
cmp
jne
and
mov
mov
shr
lea
not
and
decb
jne
adc
and
and
inc
sbbb
rclb
pop
add
add
mov
add
mov
add
mov
and
lret
push
or
jg
pop
add
push
lahf
sbb
pop
adc
fs
sub
jp
inc
inc
sar
dec
pop
lock
dec
pop
cmp
jbe
arpl
add
inc
adc
push
cmp
lret
jecxz
push
cmp
je
mov
cs
jno
cmp
add
sbb
lret
shr
not
and
sbb
add
es
pop
lea
inc
jo
lfs
mov
jnp
push
or
dec
add
dec
add
gs
mov
jmp
or
push
call
lcall
pop
roll
movsb
mov
ret
cmp
adc
stc
clc
or
mov
jne
mov
jae
paddd
loope
lea
ljmp
inc
or
jmp
les
adc
sarb
mov
ljmp
xchg
pop
push
mov
aam
ljmp
mov
mov
inc
mov
mov
dec
or
and
test
call
cmp
rol
enter
js
push
push
movsb
mov
test
decb
dec
adc
insb
or
js
mov
jo
dec
push
out
or
ja
push
adc
adc
push
mov
add
mov
mov
add
sub
adc
push
cwtl
les
loop
int3
in
or
or
cmp
insl
or
xor
push
sarl
sub
jnp
sub
lea
add
lock
and
mov
stc
add
cmp
ljmp
fidivrl
jae
pop
xor
loopne
xchg
pusha
not
call
inc
clc
mov
mov
pop
cmp
call
iret
jne
add
rolb
out
jns
fidivrl
fcoms
add
jmp
jne
jae
rcrl
icebp
xor
push
or
in
ret
hlt
or
or
out
push
cmp
fadds
or
call
mov
bound
dec
cmp
cmova
inc
adc
pop
sub
decl
shll
mov
xchg
add
xchg
aaa
mov
jl
and
add
ja
mov
test
cmc
sbb
fs
xchg
daa
and
or
je
mov
mov
mov
add
xor
or
adc
pop
test
jl
shl
inc
jmp
mov
clc
mov
mov
add
sar
dec
cmp
jle
cmp
scas
lods
xchg
or
dec
dec
popa
addl
clc
ljmp
and
ret
mov
xor
jmp
mov
pcmpeqw
shr
cmp
and
jmp
lea
adc
int
pop
sbb
xor
mov
xor
fmull
aaa
cmpb
sub
mov
or
cld
imull
dec
jl
popa
mov
mov
cmp
or
sbb
push
pop
push
add
roll
mov
shr
or
iret
dec
pop
add
adc
jmp
or
and
or
in
inc
push
mov
or
lock
push
mov
sub
cmp
icebp
sbb
push
and
add
cld
add
cmp
jne
cmp
jne
cmp
addb
and
add
xchg
enter
test
shll
imull
lea
pushf
out
sarb
adc
cmpsl
sub
mov
push
jne
es
and
lea
push
out
inc
adc
cmpsb
fwait
fwait
add
lret
push
lods
leave
or
jne
cmp
int3
add
orl
add
xchg
jmp
add
addl
test
add
jno
repnz
cli
test
loopne
mov
imul
pop
lea
inc
or
push
sub
jl
shl
add
enter
addb
inc
mov
flds
add
test
add
ja
lea
clc
incl
fsubrp
lea
rol
cld
lock
inc
out
dec
add
adc
sub
sub
test
jg
xchg
dec
or
mov
dec
add
test
or
in
js
mov
sbb
mov
mov
inc
adc
test
mov
jne
int3
adc
add
ljmp
cmp
cmp
popf
arpl
adc
lea
sub
mov
inc
inc
sub
or
ljmp
pop
idivb
pop
cmp
in
sub
mov
inc
sub
jne
repz
shll
cmpsl
cmc
push
aas
jbe
or
mov
dec
ret
dec
dec
fdivrs
lea
dec
and
nop
ret
dec
sub
xor
outsl
pushf
nop
push
add
nop
dec
or
xchg
mov
pop
dec
clc
adc
into
add
ja
aaa
mov
cld
xchg
and
aam
incl
xor
inc
add
pop
mov
lea
or
ret
pop
das
or
mov
test
or
aad
test
jne
mov
sub
insl
lods
adc
mov
jge
fcmovu
out
ret
mov
jmp
adc
insb
movsb
test
xchg
lods
out
dec
and
ds
xor
or
lea
mov
mov
inc
ret
mov
lea
cmp
mov
pop
or
push
lods
outsb
clc
dec
pop
xor
push
test
cmp
int
cs
cwtl
xchg
push
lods
test
xchg
repz
cmp
in
bound
push
fs
loop
and
push
dec
imul
or
cltd
ja
dec
inc
cmpsb
ja
fimull
mov
fcoml
jnp
lock
push
pop
adc
xor
syscall
inc
push
pop
addl
rol
int3
add
inc
inc
jns
jg
sbb
dec
add
push
dec
jp
xchg
std
lds
scas
jne
mov
and
imul
xchg
je
test
xlat
xchg
sbb
repz
add
xor
push
push
test
push
imul
mov
cmp
jne
cld
rolb
pop
xchg
push
sbb
bound
mov
mov
or
xor
in
pop
push
lea
adc
dec
adc
sbb
inc
or
in
mov
push
xor
cmp
setge
dec
and
dec
inc
mov
ss
cmp
jl
push
add
leave
call
push
and
cmp
jae
orb
add
pop
movl
and
xor
call
cmp
outsl
shrb
rcll
cmp
add
jecxz
xchg
pop
pop
test
push
and
xor
es
mov
and
jae
push
xlat
jecxz
leave
pusha
faddl
or
pop
mov
cmpl
push
mov
loopne
add
adc
cmp
push
add
xchg
imul
adc
or
push
incb
cmpl
jge
pop
push
cmp
fsubr
sub
test
jge
lock
or
xchg
pushf
or
jns
or
push
add
pop
jno
jno
or
cli
inc
sti
sbb
pushf
dec
bnd
je
js
mov
ret
mov
lret
adc
adc
out
add
lcall
test
jne
sub
mov
jmp
bnd
pop
add
pusha
shlb
loope
mov
sub
in
jg
push
leave
cmp
or
pop
pop
mov
inc
mov
sti
stc
or
sbb
pop
cmp
movzbl
add
andb
sbb
data16
add
pop
incl
xor
scas
and
call
push
loope
dec
sbb
push
mov
jb
pushf
mov
int
dec
ret
sub
mov
out
or
ret
ficoml
mov
lret
add
lret
jl
cmp
jbe
push
mov
jne
in
lds
cltd
popa
xchg
and
or
sub
xor
sbb
dec
scas
insb
or
jae
mov
cmp
jl
jae
mov
push
push
jle
pop
mov
sub
ja
jge
jb
rorl
pop
inc
cmp
inc
sub
sbb
sub
mov
lcall
jg
or
je
or
movsl
scas
fnstcw
cmp
xor
aas
xor
int3
mov
repz
sub
sub
mov
ja
xor
adc
adc
pusha
out
mov
push
out
push
mov
in
sbb
and
and
jne
les
mov
rorb
inc
ret
scas
orb
push
push
cld
mov
adc
inc
mov
rorl
lret
loopne
jne
mov
pop
cltd
cmp
jae
cmp
mov
shlb
or
push
loopne
fdivrs
sub
imul
push
jmp
call
lcall
add
lret
fs
or
sti
jae
sub
lea
mov
push
adc
movsb
cli
mov
add
lea
xchg
aad
jo
xor
lea
mov
add
pop
add
sub
or
scas
mov
sub
add
cmpb
add
cmp
jae
mov
test
jne
loopne
pop
insb
pop
add
add
mov
jmp
jae
mov
vphsubw
or
packssdw
push
sbbb
jmp
lock
add
inc
cli
cwtl
mov
jle
rcl
push
or
mov
sbb
movb
pop
rorb
inc
lea
in
fcompl
sub
jne
mov
lods
orb
or
sbb
jae
sub
xor
inc
sub
lock
push
call
ja
push
not
inc
subb
push
sbb
pop
xchg
and
popa
mov
mov
or
pop
fdivs
lea
jbe
add
enter
inc
jmp
jae
jb
mov
pop
out
pushf
jb
adc
or
loop
scas
hlt
jne
mov
ljmp
sub
lock
into
mov
adc
mov
push
jne
inc
cmpb
sub
inc
arpl
xchg
cmpsl
inc
add
and
cmp
fcomp
push
mov
lret
dec
in
cmp
xor
pop
lods
cmc
inc
sub
pusha
mov
mov
or
pop
sbb
jmp
sub
sbb
movl
cmp
popa
inc
xchg
mov
sbb
xor
sbb
jmp
dec
or
andb
and
dec
ja
and
cmp
cmp
and
cmp
pushf
push
mov
add
repnz
pop
jo
cld
call
scas
mov
enter
jmp
je
xor
mov
cmp
push
sbb
fdivrl
js
dec
xchg
push
inc
or
inc
inc
sub
adc
add
xor
jmp
sbb
mov
stc
pop
jg
jnp
or
mov
jg
pop
adc
mov
lahf
rol
jb
cmpsb
mov
sbb
outsl
push
popf
mov
sub
xor
push
inc
add
fbstp
in
jg
adc
mov
jne
jmp
mov
sbb
push
xor
sub
dec
jno
inc
pop
add
test
lea
je
lock
mov
rorl
sub
xchg
push
xchg
push
aas
ljmp
pop
shll
test
insl
push
add
sbb
repz
sarb
add
xor
inc
je
sbb
cmp
cmp
fstl
cmpsl
adc
push
and
jp
mov
hlt
pop
jo
cli
call
stos
xor
pop
loop
cmc
jbe
pushf
jge
add
pop
outsb
test
fimull
shl
sarb
ret
xchg
mov
lahf
and
inc
cmp
and
lea
das
sub
ret
sahf
mov
je
mov
mov
lds
lock
cmp
ja
int3
sbb
or
inc
cmc
inc
inc
xorb
or
ss
les
roll
pusha
add
cwtl
xor
call
mov
hlt
mov
mov
movsl
jmp
jns
mov
lcall
add
jg
jb
adc
adc
push
call
je
cld
xorb
jmp
test
jle
je
popf
add
push
call
je
and
lret
jle
incb
clc
jmp
push
push
add
jne
imul
mov
and
jg
or
add
nop
mov
mov
or
adc
cmp
fists
movsb
mov
aaa
mov
out
ret
repnz
xlat
mov
cmp
and
add
xorb
mov
movb
aaa
ret
inc
sbb
mov
cmpsl
lds
or
test
jne
or
inc
inc
mov
mov
xor
rcrb
push
and
data16
push
mov
subl
adc
push
or
xchg
adc
scas
shrl
inc
cld
sub
or
and
mov
nop
xchg
divl
mov
mov
sbb
je
jnp
popa
imul
jmp
andb
jmp
cltd
mov
test
jb
pop
es
je
enter
mov
jmp
popa
jb
jp
push
adc
push
aaa
jmp
aam
fnstcw
lahf
xor
jne
push
call
mov
or
data16
cmp
mov
dec
inc
ret
push
call
sbb
jmp
push
loop
pop
jbe
mov
dec
stc
mov
testb
pop
je
inc
inc
sbb
push
shlb
lret
jne
jmp
andb
or
incb
mov
dec
test
pop
push
mov
test
mov
mov
test
pminsw
push
pop
xor
add
fwait
or
and
inc
or
add
dec
push
pushl
add
ljmp
clc
loopne
fsubrs
push
or
push
pop
push
xorb
cmp
ret
adc
stc
sar
or
push
cmp
lea
pusha
inc
fmul
mov
push
dec
pop
pop
and
cmp
or
movb
jle
inc
ficoml
ja
mov
mov
out
lds
push
dec
pop
and
pop
pop
ret
dec
cs
or
cmp
cld
mov
les
enter
jl
xchg
jg
pop
pop
xchg
push
sti
jge
fsubrs
jo
add
int3
lcall
mov
mov
leave
push
pop
dec
insb
xor
mov
mov
xor
les
ss
notl
dec
dec
adc
pop
leave
mov
rolb
cmp
cmp
or
clc
std
subb
xor
adc
and
sbb
aad
call
ret
cmp
jb
lret
test
dec
xchg
mov
cmp
xchg
or
cmp
mov
hlt
sbb
out
lea
add
dec
aas
xorb
add
sub
push
and
cmp
dec
outsl
call
call
pop
push
aam
jge
test
lds
into
cs
jno
xchg
fwait
xorl
ljmp
sbbl
ret
add
xor
call
or
and
or
adc
jmp
je
sbb
pop
mov
call
andl
iret
or
inc
dec
pop
test
sahf
jo
jo
mov
add
and
or
in
add
je
ds
vcvtss2sd
notb
jecxz
dec
push
fsubs
lods
xlat
or
jp
ja
jg
push
jmp
or
xor
lock
push
inc
es
push
push
add
jne
xor
std
push
adc
mov
or
mov
jbe
sub
or
ret
es
insb
es
sbb
push
xchg
push
jle
mov
mov
dec
jmp
xorl
fs
popf
repnz
popa
jmp
adc
loopne
add
insb
or
inc
cmp
cmp
or
pushf
mov
je
mov
and
les
mov
in
arpl
add
and
test
lea
into
mov
daa
shrb
pop
jbe
mov
lcall
push
loope
push
pop
sbb
aas
mov
jg
sub
std
mov
adc
les
pop
xor
sub
and
xor
adc
repnz
lret
mov
out
jl
imul
jge
fdivs
or
sahf
inc
xchg
ficompl
add
ret
pop
cld
mov
cmp
je
pop
jno
sbb
cmp
mov
push
mov
mov
xchg
and
jmp
mov
add
inc
cmp
rcll
mov
shr
pusha
sub
je
sbb
sarb
push
dec
adc
mov
leave
test
sub
adc
mov
jmp
inc
jne
pop
pusha
sub
inc
jmp
jne
jno
aas
outsl
cld
cltd
push
movsb
loope
or
xor
cwtl
test
jne
or
jmp
mov
bound
aaa
mov
or
jne
test
dec
sar
or
jmp
test
and
or
imul
ss
jmp
movsl
outsl
fcompl
shr
sbb
push
or
sub
push
or
pusha
fidivs
sub
adc
lret
stos
pop
sbb
jge
pop
mov
icebp
mov
mov
mov
dec
and
or
dec
adc
into
pop
and
xor
xorb
pop
mov
xchg
hlt
add
int
adc
inc
add
rcrb
jl
jmp
mov
jmp
mov
push
shl
call
jmp
or
mov
cmp
cmp
je
mov
cmp
push
lods
cmc
dec
adc
mov
loope
mov
cmp
cmpsb
pushf
inc
add
or
int3
push
cmp
jae
addl
jo
ret
pusha
test
pop
mov
and
mov
push
mov
and
sub
push
push
call
pop
sbb
or
or
lret
or
jbe
or
dec
or
push
jno
sub
je
sbb
cmp
push
cld
mov
lock
inc
mov
lea
sub
cmp
int3
sub
or
push
mov
push
pushl
sub
inc
mov
cmp
sbb
jl
or
sub
adc
jp
ret
mov
jecxz
popa
sub
pop
cmp
xor
mov
add
orb
lea
mov
push
hlt
cwtl
or
jmp
xor
into
pushf
xchg
stc
cmc
loop
leave
cmp
fldl
std
ret
sbb
enter
jmp
sub
leave
and
mov
push
or
hlt
rolb
gs
lcall
fisubrl
clc
call
push
mov
fstl
or
mov
add
add
lock
jne
fmull
cmp
jno
lock
dec
mov
rcr
loopne
jbe
leave
pusha
xor
fsubrl
dec
call
push
and
xor
ja
repz
adc
cli
out
sbb
cmp
rclb
gs
dec
data16
xchg
leave
sbb
and
not
dec
ret
mov
mov
push
inc
les
testb
rorl
ss
inc
add
or
mov
int3
and
inc
mov
mov
dec
xor
mov
jne
dec
mov
inc
mov
rolb
mov
push
shlb
push
mov
iret
pop
aad
push
mov
mov
fs
or
or
imul
mov
lea
push
xchg
mov
nop
cmp
fisttpl
lahf
rcll
sub
dec
bound
out
push
mov
std
cmp
sbb
mov
and
loopne
sub
fwait
pop
add
add
bound
jl
add
lret
addr16
jne
push
cmp
imulb
dec
pop
sub
insl
int3
enter
mov
push
sbb
lret
leave
adc
clc
mov
imulb
sbb
cli
inc
xchg
add
xor
pop
add
jns
neg
loope
bound
fs
addr16
push
test
cltd
pop
idiv
add
mov
or
pop
adc
add
fwait
movsl
sbb
mov
inc
ret
in
js
pop
push
cmp
dec
in
xchg
leave
in
out
int
shll
in
or
dec
push
mov
pop
xor
in
mov
inc
add
add
insb
mov
adc
inc
lea
and
sub
or
push
pop
inc
jmp
add
mov
jbe
inc
lods
mov
inc
das
and
mov
je
sub
mov
jmp
cmp
jl
push
dec
pop
push
dec
push
push
sub
adc
adc
and
mov
cltd
mov
cs
xchg
test
imul
jnp
rol
insb
outsb
or
push
push
mov
shrb
aad
push
inc
add
mov
setl
mov
jl
add
and
mov
jge
dec
jne
mov
push
stc
and
push
ret
cmp
inc
pusha
stos
aam
lcall
or
push
or
mov
mov
or
and
push
mov
rorb
dec
decb
dec
jp
adc
sub
inc
inc
inc
data16
jg
addb
jne
adc
and
adc
cmp
mov
mov
push
add
adc
adc
pop
sbb
jnp
mov
andb
inc
std
mov
mov
test
or
mov
cmpsb
out
lds
pop
mov
xlat
rolb
loop
pop
or
cmp
dec
mov
sbb
and
hlt
addl
and
movlps
shll
xchg
adc
shr
cmpb
xor
test
or
call
jmp
push
icebp
ljmp
in
cmp
hlt
repz
mov
or
pop
popa
fists
adc
mov
pop
adc
xorb
inc
rorb
test
push
dec
jg
je
sub
adc
push
pusha
rolb
dec
jne
jmp
cmpb
sub
ss
add
jg
sbb
rolb
je
jmp
bnd
popa
lds
pop
push
je
loopne
mov
icebp
jmp
or
ret
decb
sti
popa
and
sub
incl
mov
leave
lds
adc
or
and
add
inc
je
sbb
std
lods
add
icebp
scas
xor
push
test
xor
outsb
mov
jbe
les
dec
jecxz
fwait
jnp
fsubrl
inc
mov
pop
cmp
xor
jbe
pusha
repnz
or
cmp
cmpsb
add
outsl
jg
jno
push
or
or
fs
loope
sub
jle
lret
daa
inc
add
outsl
in
xor
xlat
cld
add
and
lea
inc
push
pop
in
and
push
push
outsb
pop
add
jp
xor
mov
mov
popf
leave
push
cmp
out
sub
aam
inc
aad
into
aam
scas
cltd
pop
mov
pop
jmp
jge
add
mov
jle,pn
insl
arpl
push
call
jb
out
sti
data16
and
frstor
push
inc
loopne
inc
pop
jo
cmp
jne
test
inc
push
fnstenv
mov
adc
xchg
or
xor
sub
mov
addr16
gs
inc
inc
sbbb
push
jbe
push
gs
lods
pop
and
push
fmull
inc
stc
push
mov
adc
push
xchg
aaa
mov
repnz
inc
xchg
outsl
jl
rorl
xchg
sarl
jb
push
xchg
lret
xor
testb
int
lret
andb
fnstsw
lret
lock
dec
es
call
dec
sub
sahf
lea
sti
sub
jle
dec
mov
push
fcoml
push
mov
mov
call
xchg
test
test
pop
je
sub
pop
aas
dec
mov
jecxz
mov
add
mov
mov
ret
lahf
inc
je
pop
cmpsl
rorb
adcl
and
std
aas
lret
and
adc
mov
sti
xor
push
pop
inc
sub
push
inc
arpl
movl
dec
movsb
push
pop
jmp
or
ret
add
pop
jmp
cwtl
xchg
popf
push
jmp
pop
stos
jle
pusha
jle
jnp
dec
lret
bound
adc
lret
les
lret
pop
jne
mov
inc
push
popf
aas
dec
cmpsl
and
or
je
inc
cmp
mov
pop
lock
ss
cmp
jae
mov
jmp
add
ret
cmp
ja
add
mov
repnz
mov
mov
and
mov
add
push
imul
mov
mov
mov
out
or
mov
orb
add
test
cmp
jb
mov
push
add
addr16
add
mov
popa
aam
sbb
pop
mov
je
mov
or
enter
pop
add
sarl
call
add
xor
test
sbb
xor
je
jne
ljmp
mov
mov
pop
pop
test
pop
add
incl
fnstenv
mov
ret
outsl
int3
scas
xchg
ret
inc
sub
fmuls
cmp
test
jmp
adc
mov
rcrb
add
mov
push
fidivrl
add
xchg
xchg
stos
push
test
mov
cmp
rclb
push
mov
xchg
jb
add
sbb
sbb
sub
rorb
add
jecxz
dec
sub
pop
js
dec
idivb
sub
mov
rorb
and
mov
fsub
cmp
add
jnp
mov
call
add
jle
xchg
pop
outsl
mov
dec
jne
cmp
jns
outsl
xchg
add
jmp
shl
cmp
testb
mov
rcrb
add
mov
inc
add
sub
ss
pop
call
push
fs
vpaddusb
xor
roll
and
xchg
les
jb
push
pop
mov
sub
jo
aas
jo
cmp
iret
jbe
add
or
add
aas
lea
shl
jmp
mov
sbb
add
aad
push
cmc
add
inc
add
lret
add
jl
add
pop
pop
sub
push
pop
in
mov
je
neg
add
rorl
enter
out
mov
call
adc
sbb
fcomp
in
enter
repz
aas
or
cmp
inc
jmp
and
rclb
sub
loope
mov
inc
sti
cmp
negl
dec
xor
push
sbb
push
ds
jns
xchg
lock
xchg
xchg
sub
dec
jbe
add
js
outsb
jne
mov
ficomps
cld
push
idiv
imul
add
lret
sub
jge
sahf
dec
pop
jae
mov
push
adc
mov
mov
js
cmp
xor
xor
adc
inc
push
das
dec
int
ret
mov
pop
sahf
cmp
pop
insb
lock
xorb
js
mov
jl
pop
pop
or
push
call
daa
in
or
jge
push
call
sub
push
lret
mov
mov
fnsave
out
dec
je
push
int3
xchg
push
fucomip
insb
fisubs
sbb
inc
jl
or
jg
adc
cmc
dec
mov
push
sar
jle
inc
call
dec
ljmp
insl
clc
mov
das
jle
mov
rcrl
ret
xchg
push
sbb
or
push
pusha
add
cmp
dec
sbb
sahf
fimull
add
xchg
lea
inc
fwait
lods
and
cmp
adcl
scas
ret
mov
push
push
sub
mov
adc
lds
mov
lds
push
shl
pop
and
cltd
leave
pop
or
add
mov
test
cwtl
xor
push
mov
sub
insl
mov
jne
pop
adc
inc
add
push
adc
test
dec
add
push
push
movb
sub
test
xchg
test
cmp
pop
inc
jmp
jnp
cmp
movsb
test
sub
xor
jmp
dec
add
push
movsl
sub
add
std
daa
bound
or
push
or
and
mov
insb
ret
dec
mov
int
xor
add
int3
in
adc
adc
aas
scas
cmp
sarb
mov
mov
or
mov
xchg
add
push
test
xor
inc
add
pop
movb
inc
jmp
adc
rcl
xchg
outsb
aaa
scas
or
push
mov
hlt
inc
scas
sub
cmpsb
addr16
add
push
aas
pop
mov
inc
mov
jmp
cmp
mov
cmpb
xchg
lret
add
xor
call
daa
je
push
mov
jns
jb
adc
push
dec
push
test
add
dec
mov
sbb
mov
xchg
mov
icebp
jae
aas
and
xchg
cmpb
testb
cmpsl
and
jne
jmp
int3
hlt
xchg
xor
daa
adc
or
mov
cmpsl
int
repz
cld
cmp
and
in
stos
push
out
push
loope
mov
jo
inc
jge
mov
inc
decl
outsl
xchg
cld
mov
pop
mov
test
inc
add
ss
jmp
jle
fsubrs
flds
cmp
cs
pop
push
jl
mov
sar
pop
mov
fiaddl
je
mov
cmp
jae
cmpb
push
mov
pusha
inc
jmp
xorb
sar
jmp
pop
add
adc
pushf
imul
out
and
sub
mov
roll
and
movsb
adc
hlt
call
stc
ret
sub
or
push
sub
or
inc
xor
cld
dec
pop
lods
loopne
mov
push
ja
mov
xor
sbb
mov
mov
add
mov
mov
shrl
lahf
jmp
lcallw
leave
lcall
jl
sti
add
add
or
or
inc
xchg
sbb
out
test
pop
jecxz
je
adc
inc
add
push
cmp
jge
lea
sub
enter
mov
aam
in
or
jne
mov
mov
inc
cmp
lcall
cmp
add
pop
cmp
adc
pop
dec
adc
cmp
popa
sub
adc
test
mov
and
rcrl
pop
pop
sbb
data16
push
jp
dec
lret
mov
or
imul
sbb
inc
loope
adc
pop
sbb
je
test
sub
add
adc
lea
pop
lea
into
repz
inc
cmp
loope
sub
pusha
imull
jns
and
adc
mov
out
mov
xchg
or
push
inc
xchg
aaa
sbb
ja
je
mov
mov
std
jmp
fs
sub
pop
in
loopne
into
pop
inc
xor
or
adc
lea
mov
jmp
mov
cmp
mov
ljmp
fisttpl
push
call
xor
cmp
call
mov
cmpb
push
call
lcall
cmpsb
push
mov
cmpsb
jne
pop
sbb
jne
pop
jmp
or
jno
mov
mov
mov
dec
fldt
daa
mov
test
int3
add
mov
xchg
in
cmc
insl
or
cmp
clc
sub
adc
push
push
insl
lret
lock
mov
dec
xchg
mov
stos
pop
repz
ret
inc
jp
jge
pushf
push
sbb
add
popf
je
dec
aam
sub
mov
cld
sbb
movl
clc
push
test
mov
add
or
inc
mov
inc
cmp
pusha
repnz
fcmovnbe
sarb
mov
les
add
mov
mov
inc
inc
aad
sub
or
into
add
jae
es
jmp
loope
adc
add
inc
andl
sub
repz
or
or
jne
dec
lods
arpl
data16
fstps
sbb
and
and
and
addr16
adc
mov
add
xchg
clc
inc
jb
dec
inc
xchg
sub
out
daa
stos
sarl
pushl
and
or
jmp
mov
mov
ret
mov
jo
mov
jmp
rorl
movaps
pop
inc
les
fdivrp
cmp
dec
subl
lods
fimuls
aas
add
cmp
add
and
push
in
sbb
xor
add
inc
loopne
jmp
xor
pop
fsubl
daa
idivb
pop
insb
mov
cmpsb
je
or
mov
dec
cmp
adc
mov
mov
scas
mov
mov
inc
push
ds
ljmp
data16
sub
shl
rcrb
jne
cmp
mov
fs
and
inc
inc
sbb
repnz
jne
dec
sub
sar
jle
jo
inc
jle
ja
jg
adc
xor
jmp
xor
inc
movsb
xlat
lods
imul
mov
leave
pop
movsb
jle
and
push
in
mov
mov
dec
push
inc
ret
jmp
pop
inc
test
loopne
sbb
or
cmp
xor
or
imulb
movl
pop
icebp
lahf
or
or
mov
push
inc
xor
inc
movb
imul
push
shrb
mov
call
pop
sbb
sarl
xor
xor
jmp
lea
cmp
sbb
movb
mov
add
jge
add
outsl
pop
data16
inc
in
sub
popf
roll
pop
or
mov
sub
xor
cmp
das
jmp
call
cmp
js
lea
pusha
js
push
sahf
or
inc
inc
in
fmuls
shll
add
movsl
jl
or
jle
mov
fwait
or
mov
outsb
jnp
iret
dec
inc
adc
jo
aaa
je
orl
iret
str
mov
mov
mov
inc
inc
add
cmp
jl
and
and
add
dec
test
add
jne
push
pop
push
dec
icebp
push
dec
add
cmc
xor
aas
je
push
test
rcrl
or
add
push
orb
mov
add
add
inc
cmp
jl
mov
stc
lock
lods
dec
sub
inc
ret
int3
push
scas
or
lahf
push
fmull
sahf
lcall
mov
cmpsl
ror
xchg
inc
add
add
xor
test
mov
shll
push
pop
add
subb
mov
jp
and
sub
or
mov
in
dec
jl
add
dec
or
push
inc
dec
mov
cmp
loop
jmp
popl
or
js
cld
mov
add
add
or
push
sub
ret
rorb
add
and
mov
pop
mov
or
pop
ret
pop
and
xor
xor
or
cmp
pusha
add
mov
inc
push
test
clc
cld
pop
je
divl
ret
jnp
popa
lea
loop
aaa
push
popl
loop
push
push
lea
pop
pop
sub
popa
or
js
loop
dec
adc
call
mov
jo
adc
xor
xor
popa
test
or
xor
insl
or
aas
jmp
clc
sbb
mov
das
hlt
jne
lcall
sub
and
push
and
pusha
dec
mov
push
mov
into
add
cmpl
cld
pusha
and
pop
call
decb
pop
out
subb
jae
lret
dec
push
mov
lret
cmp
je
add
mov
icebp
arpl
and
sbb
mov
xchg
inc
inc
adc
cmp
icebp
test
dec
shrb
dec
jae
adc
aad
das
movsb
dec
adc
lcall
loop
notb
cmp
sub
pop
mov
aam
sub
push
add
push
and
pop
xchg
jne
dec
shll
test
add
adc
push
inc
xchg
sbbl
mov
adc
enter
cwtl
and
inc
jo
and
push
sbb
test
or
sub
jmp
or
push
xchg
add
stc
dec
std
push
or
and
xor
cs
lds
test
xlat
in
rorb
sub
fdivp
jmp
xor
fldenv
adc
push
mov
mov
popf
mov
jo
adc
ss
adc
jb
int
jl
outsl
dec
jle
sbb
nop
add
ret
mov
cs
push
jne
sbb
cld
jmp
cmp
jge
lods
xor
push
insb
mov
mov
mov
int3
aas
mov
add
sub
fdivs
adc
xchg
adc
add
cmp
sbb
and
and
scas
lock
push
aam
orl
mov
inc
cmp
mov
cmp
dec
je
jmp
iret
pop
testl
pop
or
outsw
shl
ja
push
mov
dec
mov
adc
push
arpl
aas
test
sub
movsb
xor
jns
movsb
and
pop
mov
push
cli
jg
sbb
iret
jne
gs
cmc
jne
add
stos
and
sbb
push
and
cmp
out
out
and
dec
rcll
add
pop
push
pop
nop
movsb
sub
lahf
adc
sub
fsubs
push
and
mov
or
mov
arpl
pusha
pop
lret
arpl
pushf
and
lods
fcoml
dec
xchg
dec
repz
sub
cmp
xor
jbe
enter
ficomps
xchg
loopne
test
outsb
sbb
adc
loop
dec
and
gs
int3
psrad
adc
loopne
adc
sub
aas
and
inc
pushf
sahf
jecxz
lea
add
push
clc
pushf
wrmsr
cmp
aaa
push
pop
subb
xor
jno
loop
push
adc
loop
xor
in
in
xor
jo
xor
cmpb
jae
push
mov
sbbl
pop
les
mov
shlb
pop
push
sbb
inc
test
test
les
test
add
and
inc
pushf
dec
stos
notl
cld
push
or
push
pop
fs
push
push
insb
je
push
push
jl
xchg
add
out
std
sbb
push
mov
cmp
mov
popf
add
mov
sbb
mov
add
nop
ret
testb
mov
add
icebp
sub
in
or
stos
nop
push
xchg
les
and
push
movsb
in
inc
call
sub
xchg
mov
lret
fs
push
pop
add
jmp
shl
mov
dec
rcl
and
dec
mov
js
pop
cmpl
loope
add
jne
out
push
push
ret
adc
or
adc
hlt
jmp
cmc
jmp
adc
inc
dec
mov
sbb
pop
imul
or
push
sub
pop
inc
fsubr
aaa
inc
xchg
sbb
xor
scas
cmp
gs
ds
dec
pop
inc
xchg
loope
push
add
sbb
or
pushl
inc
mov
xchg
loopne
dec
test
aaa
aaa
add
call
ret
fs
js
pop
mov
mov
loop
ret
in
lods
shll
decl
adc
cmpsl
sbb
sbb
xorb
sbb
sbb
roll
call
call
jmp
andb
adc
cmpb
adc
add
add
incl
rcrl
sub
je
dec
and
jno
in
mov
push
add
hlt
add
add
adc
pop
add
adc
dec
insl
test
xor
cmp
or
jmp
cmpsb
jmp
add
cwtl
mov
inc
fstl
and
mov
jle
add
je
cmp
je
inc
inc
inc
aas
cmp
adc
outsb
inc
sbb
xorb
test
add
xchg
adc
jmp
add
sbb
jp
inc
jo
jmp
les
ss
inc
popf
test
je
mov
add
adc
or
inc
lock
std
sub
or
dec
shlb
inc
push
or
test
adc
imul
fisttps
jbe,pt
and
push
aad
div
cltd
push
lahf
inc
lock
es
adc
push
clc
cmp
sub
jp
xor
jmp
cld
or
btr
cmp
adc
sub
or
out
cltd
or
dec
mov
imul
movsb
xchg
add
add
mov
or
lock
cmpl
adc
repnz
or
insl
mov
shlb
xlat
xor
sbb
adc
xchg
pop
cmp
fcmovnu
fisubrs
xor
scas
inc
inc
or
mov
insb
and
pop
mov
fsts
cld
cmp
mov
shlb
adc
orl
or
push
call
addb
pop
fldcw
adcl
jnp
and
idiv
push
lcall
push
out
adc
stos
push
push
je
adc
fadd
or
addl
or
jo
and
or
add
push
orb
lret
push
mov
mov
test
in
cltd
pop
je
out
add
ljmp
or
lock
inc
or
or
cmp
mov
mov
cmp
pop
pop
test
pop
aad
xor
push
xor
push
jnp
add
leave
xor
imul
dec
and
inc
mov
into
sbb
into
sbb
and
int3
or
or
sahf
lret
je
add
jecxz
iret
je
jne
lahf
or
ret
sub
in
add
adc
clc
orb
pop
idiv
push
dec
jno
dec
cltd
pop
stc
add
sub
lret
call
loop
rolb
inc
mov
inc
imul
add
cmpl
sub
repnz
iret
mov
pop
inc
sti
aam
mov
addr16
mov
sahf
movsb
pop
mov
mov
mov
push
dec
js
iret
jg
jnp
or
outsb
cli
in
sub
and
daa
jge
jbe
rcll
icebp
pop
pop
add
adc
cltd
enter
xor
mov
jno
stos
ss
sub
loop
popf
push
mov
xor
push
push
cli
outsl
pop
jae
add
sahf
movb
jo
and
clc
inc
cmp
push
pop
sahf
jle
push
dec
sahf
push
stos
movsb
cmpsb
pop
push
or
in
mov
or
xor
leave
stos
dec
jmp
jle
les
loop
leave
or
and
dec
pop
pop
ret
shl
sbb
pop
cltd
jmp
outsb
fisubrs
loop
ljmp
xlat
std
addl
push
mov
cmp
add
or
lret
pushf
jbe
idiv
jb
mov
or
fsubrl
or
imull
pop
push
dec
pop
test
fistpll
shll
rcr
or
dec
jns
shlb
hlt
jns
sahf
pop
and
mov
addb
mov
sub
nop
mov
addr16
add
lahf
jecxz
and
loopnew
push
inc
add
xchg
sti
add
test
pop
jne
dec
cs
notb
daa
dec
dec
inc
shll
ss
data16
jmp
aam
pushl
jo
adc
pop
or
mov
jb
aam
sub
add
push
test
jg
sub
ss
lock
jno
hlt
lods
aad
loop
scas
aam
mov
stc
inc
or
outsb
cmp
push
xchg
and
adc
jl
pop
jl
push
js
add
or
dec
testl
push
inc
nop
scas
aaa
jmp
mov
andb
add
imul
dec
call
mov
jg
jnp
jmp
cs
or
cli
push
lods
incl
lret
lea
clc
in
jl
mov
lea
and
xor
lock
push
subb
repnz
enter
insb
add
push
cs
sti
jnp
push
test
enter
lods
jmp
inc
mov
xor
pop
cs
jg
or
add
push
xor
pop
mov
fistl
fnstsw
or
adc
pop
sub
add
cmp
ret
lds
cmc
rolb
jmp
xor
inc
add
mov
mov
inc
aaa
repnz
ret
mov
add
stos
inc
lea
iret
mov
dec
adc
out
xor
movsl
call
js
insb
sub
add
push
or
pop
movswl
int3
xchg
pop
gs
rcrl
ss
mov
mov
popf
jns
shl
scas
inc
and
fidivrs
mov
data16
test
lock
mov
dec
xor
and
jge
add
cmp
jne
sbb
or
dec
jp
dec
sbb
rcrl
adc
or
enter
mov
loop
inc
aam
mov
adc
leave
lock
add
or
lea
mov
jge
jmp
rorb
xchg
or
dec
or
call
fstps
loopne
je
cmp
je
jnp
dec
popa
jne
cmpl
push
int3
cmp
jne
mov
test
fildl
loope
data16
dec
mov
jle
cmp
jl
xor
fisubrl
loop
pop
adcb
dec
mov
add
add
add
xchg
popa
xchg
push
je
or
jl
std
pop
orl
jns
int3
out
inc
cmp
cmp
jae
and
jo
pusha
movsl
ret
ret
mov
and
shl
ret
enter
pusha
xor
je
in
mov
xchg
jge
xchg
out
add
add
cmpl
pop
add
pop
in
push
cmp
xor
sbb
sbb
testb
decl
mov
xor
jnp
ret
cltd
add
mov
incl
and
loope
add
sbb
cmpl
or
add
jb
xor
fwait
jns
or
sub
sub
mov
inc
adc
stos
ret
or
out
xlat
insl
xchg
adc
clc
adc
mov
aaa
cmp
adc
xor
icebp
imul
add
push
push
adc
jb
sbb
pusha
cmp
je
sub
inc
stc
bound
adc
jmp
pop
jmp
pop
jge
movsl
xchg
mov
pusha
push
fcoml
fcoml
fldcw
jo
cli
movsl
inc
cmp
filds
andb
or
shlb
les
lcall
pop
mov
mov
mov
cmpb
ret
test
stos
test
push
ss
lods
addb
loope
call
add
cwtl
xchg
sbb
mov
mov
sbbl
mov
shr
add
aam
rol
push
add
stos
inc
pop
insb
cmpl
leave
adc
cmpsl
mov
pushw
shl
sub
pop
cmp
jg
inc
jmp
lahf
xor
mov
addl
xchg
adc
repz
movsb
xchg
adc
imul
push
inc
lods
or
call
push
mov
push
pop
mov
call
pop
jno
and
int
pop
fldl
cmp
and
clc
test
xchg
cltd
cmp
int3
mov
jle
mov
push
data16
jne
pop
jl
pusha
jns
jp
jne
loope
mov
je
xchg
sbb
jb
dec
daa
or
jmp
push
sub
cmp
push
add
sbb
mov
lret
add
es
mov
andl
call
mov
sub
dec
push
push
loopne
push
push
jmp
push
push
push
shr
inc
mov
add
adc
push
inc
lea
add
sbb
mov
movsl
mov
cmp
jge
cmp
jl
jo
enter
lret
hlt
leave
loop
jge
pushf
enter
idivb
loope
mov
jle
xchg
jg
xor
xor
imul
mov
ds
leave
lock
adc
sbb
add
or
push
movb
inc
adc
xchg
test
add
lock
mov
or
lret
insl
sub
insl
inc
ljmp
sar
push
add
lea
sahf
pop
cltd
idiv
sbb
push
sbb
push
repz
ret
sbb
imul
stc
jmp
dec
sbb
mov
xor
or
jne
push
cmp
into
jle
sub
out
mov
add
or
out
add
pop
mov
xchg
ror
in
sbb
xlat
sub
xor
and
xor
jmp
cld
test
movsl
rolb
jns
roll
dec
jmp
mov
inc
and
bound
dec
and
xchg
cmp
push
push
gs
movzbl
pop
lds
fldl
dec
jne
pop
fbstp
mov
icebp
adc
and
sbb
add
shrl
daa
fiadds
xchg
mov
inc
dec
add
lods
je
cmp
jae
lods
push
mov
je
lret
push
sbb
mov
es
push
call
inc
xor
push
mov
add
push
xlat
ljmp
xchg
int3
lahf
xchg
pop
ficomps
push
loopne
mov
pop
jb
ja
dec
mov
ja
inc
fcmovnu
iret
sbb
jnp
sub
pushf
mov
stos
jge
jne
jmp
sbb
inc
adcl
or
mov
jno
cltd
push
adcb
sbb
mov
jp
je
cmp
in
cmp
inc
cmc
add
cltd
pop
mov
testb
mov
loop
mov
xor
lcall
enter
mov
mov
andl
mov
mov
push
test
idivb
sbb
xor
jo
inc
enter
xchg
sahf
add
fdivrs
mov
or
call
xor
adc
jo
scas
and
div
xlat
xor
jmp
jmp
nop
and
sahf
or
sahf
or
jge
out
inc
push
push
inc
inc
sbb
jmp
decl
xchg
adcl
mov
pop
adc
or
or
xlat
push
adc
movb
mov
cmp
sbb
ficomps
testb
add
adc
mov
dec
mov
dec
xlat
pop
jmp
xlat
jg,pt
lock
or
into
jae
mov
das
es
mov
mov
pop
xorl
lret
call
jns
xor
push
sbb
xorb
mov
incl
xchg
fdivp
pop
xchg
loopne
pop
lahf
or
inc
pop
or
sbb
hlt
xor
add
sbb
add
aas
shr
or
mov
mov
mov
shr
shl
or
pop
mov
fldenv
jl
or
shl
hlt
repnz
jmp
shl
dec
xchg
and
or
ljmp
jbe
inc
push
or
adc
push
push
test
shl
jge
movsl
movsl
push
movsl
call
fnsave
push
lds
andps
pop
call
xchg
xchg
jmp
mov
and
cld
loope
loop
mov
lcall
mov
cmp
sub
and
ja
mov
inc
outsl
fadd
out
adc
loope
loop
popf
mov
lods
setl
lock
jmp
mov
jae
hlt
mov
test
jmp
mov
ljmp
dec
dec
pop
outsb
inc
mov
aas
es
fistps
call
fcompl
shll
dec
mov
and
or
dec
das
or
pop
mov
add
xchg
enter
xchg
loope
jl
push
cmpsb
mov
cmp
push
jmp
jecxz
add
cs
add
je
loopne
cmp
push
aam
imul
sub
jmp
jg
aam
ret
jmp
adc
jl
jle
aaa
or
push
adc
ret
outsb
je
push
adc
mov
arpl
mov
jb
sti
sub
push
jmp
jmp
ret
or
mov
inc
fwait
icebp
insl
mov
cmc
repnz
lds
lods
jle
call
sbb
jg
dec
xor
push
jno
add
data16
jae
mov
sub
rorl
mov
mov
or
or
std
fdivl
and
mov
dec
orb
xchg
int3
mov
and
cwtl
sub
mov
aad
add
shr
mov
lcall
lea
aad
hlt
scas
in
cmp
push
cmp
sub
ficomps
lret
add
mov
loopne
divb
inc
dec
jl
clc
cmp
nop
mov
mov
push
add
inc
or
pop
dec
jmp
jmp
sahf
add
jno
je
lret
jl
mov
adc
or
dec
shr
xor
pop
jmp
sbb
or
inc
mov
sti
or
jmp
pop
es
orl
dec
xor
sub
pushf
sbb
shlb
inc
rolb
bound
xlat
jg
mov
or
cwtl
xchg
rorb
in
sbb
call
sbb
jbe
cmpb
jl
incb
mov
jb
test
dec
outsb
and
xchg
add
mov
jmp
jle
push
test
sahf
call
andb
dec
loop
movl
push
inc
loopne
add
fdiv
test
sub
cmp
loop
push
jnp
enter
inc
or
xor
mov
xor
push
xchg
mov
jmp
or
pop
xchg
stos
jmp
das
fsub
enter
xchg
push
rol
push
out
push
insl
mov
shr
and
xor
or
inc
fcomps
jno
mov
push
mov
inc
or
adc
pushf
addl
loopne
sub
sbb
test
sbb
test
sbb
sub
int
inc
lret
test
sbb
mov
mov
jo
push
pop
test
push
int3
push
push
push
out
push
push
push
call
mov
jo
push
out
sti
out
aas
in
jbe
rclb
inc
jbe
add
enter
and
cmp
andl
push
or
xor
data16
data16
jmp
xchg
xchg
data16
sbb
test
jne
ficoml
jnp
adc
inc
or
or
adc
jne
push
test
dec
repnz
inc
lea
je
mov
sub
lret
inc
movsl
xor
inc
jle
loope
mov
inc
nop
pop
iret
jmp
dec
test
mov
or
cmp
scas
or
add
add
push
cli
imul
mov
lea
sub
sqrtsd
mov
mov
sub
cmpl
and
in
cmp
rorl
sbb
int
mov
mov
lods
sub
jg
jmp
icebp
adc
call
adc
out
inc
push
test
add
or
pop
clc
dec
sbb
int3
add
pop
jne
pop
neg
and
jle
outsb
test
repz
in
rep
mov
gs
pop
jle
mov
or
cwtl
movsl
movsl
movsl
call
xor
gs
cmp
rolb
inc
sti
mov
gs
and
jne
mov
sub
mov
and
xor
xor
shll
cmp
in
dec
jmp
into
jnp
nop
inc
incw
incb
sub
sub
mov
jmp
xlat
xchg
out
mov
inc
adc
lret
xchg
xchg
sbb
add
andb
shll
sahf
sbb
jnp
xchg
inc
xorps
sbb
xor
add
stos
add
mov
push
mov
call
push
jb
dec
hlt
or
sarb
pop
jbe
cmpb
in
mov
push
sub
mov
adc
cmpsl
rorl
rorl
add
mov
pop
int3
sub
push
rcll
sar
dec
mov
cmp
and
jmp
adc
push
add
or
mov
and
cmp
add
shll
cwtl
mov
pop
sbb
push
pop
inc
rorb
fisubs
cmp
inc
or
add
clc
and
and
and
out
lea
or
cmpl
stc
lods
movsb
inc
add
xchg
insl
aas
ja
inc
mov
fs
xchg
test
sbb
mov
push
mov
es
jne
pushf
ret
jae
push
push
cmp
aad
adc
add
mov
jmp
shll
dec
in
daa
or
add
fsubrs
pop
movsl
jle
xor
or
icebp
push
insb
call
or
or
test
sub
sar
sar
pop
das
in
xor
push
and
sbb
mov
mov
dec
subl
call
or
or
push
bound
pushf
addl
aas
jle
out
lret
and
adcb
pop
imul
add
jecxz
push
xor
sub
mov
add
push
int3
in
aas
xor
mov
jae
mov
fdivl
mov
ja
jns
cmp
xor
fdivrp
jne
andl
loop
movsb
pusha
lret
gs
out
mov
push
movsb
ret
out
push
adc
loope
jmp
loop
lods
push
mov
jae
data16
loope
fimuls
mov
adc
in
and
jl
neg
sbb
jbe
cli
push
sbb
rolb
push
gs
push
stos
xchg
mov
mov
sbb
je
jge
mul
js
rclb
or
jne
sub
mov
xchg
mov
ret
push
jnp
neg
add
cmp
inc
cld
sbb
cmp
fdivr
add
lea
jb
lods
add
jo
movsl
notb
mov
mov
test
leave
clc
fisttpll
sti
push
pop
ret
xchg
movsb
pop
adc
add
mov
add
loope
sar
mulb
lods
stos
mov
add
pop
pop
mov
pop
stos
push
push
push
sar
daa
out
shr
xor
xchg
jg
sahf
dec
int3
das
push
or
pop
ss
pushf
push
fsts
lret
mov
lods
xchg
ret
cmc
ja
mov
pusha
dec
mov
push
ljmp
xchg
pop
jne
push
mov
arpl
or
bswap
stos
fstpt
jmp
cmp
adc
add
mov
jle
push
out
xor
scas
inc
fistl
dec
lret
bound
call
bound
sbb
xchg
jb
pushf
fidivrl
xor
pop
adc
outsb
xchg
mov
into
cmp
mov
push
addb
dec
out
xchg
idivl
les
inc
adc
sub
push
xlat
into
add
lret
xchg
or
pop
lret
cmp
je
add
cmp
jb
cmp
jbe
inc
pop
idivl
jl
inc
mov
inc
mov
sub
mov
inc
add
add
shrl
adc
dec
clc
enter
rorb
je
push
bound
push
mov
shll
jo
into
xchg
add
jecxz
outsb
push
inc
xor
dec
jns
sbb
lods
loopne
jno
dec
popa
sbb
fstpt
jae
fildl
fadds
ffree
lods
movsb
push
inc
loopne
sbb
cli
sub
push
add
mov
jl
shrl
outsl
jne
push
xchg
or
shrb
pushf
loopne
lcall
fisttpl
lahf
inc
sbb
inc
sete
insb
mov
ja
add
arpl
add
and
mov
xchg
ret
ds
sub
test
sbb
jl
test
cmp
adc
inc
xchg
sub
bound
mov
push
add
inc
cmpl
add
xor
xor
lea
call
pushf
insl
or
in
pop
cmp
lock
pop
mov
fists
je
jmp
mov
mov
xor
jmp
mov
xchg
mov
cmp
insl
push
inc
mov
andl
es
mov
addr16
push
cltd
xchg
cli
nop
jnp
sub
dec
adc
jge
mov
fwait
pop
pop
sub
jne
lock
neg
adc
fcomi
shll
fmuls
cmp
mov
mov
mov
test
mov
inc
push
dec
push
push
xor
cs
pop
jne
mov
dec
call
sbb
fldenv
aam
sar
jno
cmp
push
shl
inc
and
lcall
ret
lods
xchg
arpl
rcrb
or
pop
arpl
lret
lret
and
mov
sub
xchg
mov
popa
mov
push
call
sahf
push
bound
cltd
lcall
jne
mov
ja
push
lea
ret
loope
adc
data16
sub
rcrb
sub
cmc
pop
pop
sarb
shlb
rol
cmp
les
cmp
jmp
sarb
push
idivb
xchg
jmp
adc
cmpsb
jae
sub
flds
jo
pop
jge
push
ja
sub
adc
push
repnz
or
xor
leave
lds
sub
and
dec
imul
or
or
cmp
ja
inc
in
cmp
add
pop
add
adc
cmp
sbb
pushf
inc
xchg
mov
add
cmp
je
jmp
mov
cmpsb
push
dec
jg
inc
call
add
inc
push
inc
pop
fwait
pop
daa
inc
mov
cmp
mov
ret
sub
pop
cmp
out
mov
or
leave
and
mov
daa
sub
dec
stc
rolb
add
xor
jl
xchg
dec
ror
jne
data16
push
mov
sahf
fdiv
inc
pop
mov
pop
je
dec
fwait
fs
js
scas
or
push
int3
ret
mov
mov
mov
push
push
xor
xchg
jmp
push
fcompl
fimuls
mov
cmp
sbb
out
mov
and
push
jmp
call
adc
jns
sub
mov
and
or
xchg
rolb
cld
ja
push
adc
lcall
addr16
cmp
sbb
out
xchg
adc
mov
icebp
lcall
aam
push
int3
cmpsb
xchg
add
xor
insl
or
imul
outsl
mov
push
add
je
push
push
sub
adc
ss
ljmp
lds
bound
xlat
xor
cmp
js
add
mov
push
mov
sub
fwait
xchg
out
test
bts
pop
arpl
insl
inc
icebp
nop
inc
mov
scas
mov
fsubp
test
xchg
xor
sub
out
adc
movsb
inc
jmp
jo
into
and
adc
jae
call
aam
jne
je
xchg
jp
dec
or
stos
and
and
nop
adc
push
sbb
fs
add
jo
mov
add
movsb
loopne
mov
xorb
dec
push
movsb
sbb
push
xchg
lds
scas
sbb
xchg
insb
mov
mov
mov
mov
notl
es
push
rcl
pop
out
cmp
imul
and
out
je
xacquire
mov
lea
movsl
imul
popa
cmp
or
add
mov
dec
push
into
push
movl
lea
lea
sbb
in
adc
fsubrs
push
scas
jle
loope
je
ds
test
adc
pop
iret
call
xchg
push
jno
addb
inc
add
or
add
jo
adc
add
and
sub
shl
jecxz
dec
imul
xor
mov
cmp
jbe
xor
push
pop
cmp
inc
insb
gs
jb
add
xor
jl
cmp
inc
jae
and
insl
jo
gs
sbb
loopne
imul
cmp
arpl
add
sbbl
imul
pop
xchg
pop
xchg
xor
cmpsl
nop
pop
xchg
xor
add
push
mov
nop
push
xchg
arpl
add
push
je
inc
pop
add
or
add
lds
jo
add
nop
imul
arpl
push
and
imul
jo
mov
sbb
outsb
gs
mov
jae
jbe
rcrl
xor
cmp
push
aas
adc
ja
jb
lock
imul
popa
insl
gs
insb
jne
bound
bound
imul
arpl
inc
mov
jb
call
cmp
add
ds
dec
push
inc
call
and
add
mov
push
gs
push
ja
push
push
sbb
jb
jbe
gs
jae
arpl
das
arpl
sti
enter
inc
out
pop
cmp
outsl
data16
jae
and
popa
je
and
out
push
pushf
mov
and
movsb
xchg
inc
cmpsb
pop
jns
addr16
or
and
xor
bound
or
inc
xor
or
loopne
or
add
fadds
dec
nop
add
pop
jbe
add
fs
pop
inc
dec
pop
je
mov
addr16
xorl
js
fs
mov
push
push
inc
push
inc
insb
cmp
and
jp
xor
jae
sahf
xor
loop
les
sub
dec
roll
pop
push
inc
jns
jns
xor
jno
jns
xor
push
jno
ja
jno
sti
addr16
mov
mov
push
je
mov
enter
jne
and
jmp
sub
in
dec
pushf
sbbl
jne
sbb
ja
inc
cli
mov
dec
jb
xchg
mov
push
pop
inc
jne
outsb
je
adc
mov
push
push
xor
push
loop
bound
sarb
inc
pop
push
cmp
fdivr
aad
insb
lock
adc
add
push
loopne
push
add
push
inc
pop
dec
popa
jp
popa
pop
jb
push
pop
adc
xor
push
add
xor
jl
add
push
add
xor
xor
or
bound
mov
popa
sbb
push
add
or
xor
sub
xor
xor
add
push
add
xor
nop
mov
je
sbb
pusha
pop
dec
xchg
adcl
popa
inc
push
push
push
xor
push
push
push
sub
push
push
sbb
or
in
or
aam
or
or
lods
movsb
inc
or
aam
or
or
test
js
aam
or
or
dec
dec
push
dec
rolb
cmp
sub
inc
or
jb
or
push
addr16
jb
push
push
push
fcom
push
push
push
les
lods
test
mov
xchg
push
push
push
mov
jo
push
inc
push
xchg
sbbl
jb
pop
aad
sbb
xor
xor
jne
sbb
xor
push
add
xor
mov
add
push
cwtl
xchg
jno
loop
inc
mov
inc
or
inc
lods
mov
stos
pop
push
push
push
fs
mov
push
push
mov
inc
add
push
add
xor
xor
sbbl
add
test
loopne
sbbl
cmp
test
mov
push
push
push
mov
mov
mov
nop
mov
test
push
push
js
push
push
push
push
mov
mov
xor
push
push
sub
mov
sbb
mov
clc
outsl
push
add
call
enter
add
mov
mov
add
xor
push
add
add
push
add
xor
xor
add
push
add
xor
xor
inc
or
inc
or
inc
cmc
test
outsb
fdivrs
outsb
and
push
sub
sarb
mov
push
add
test
add
lcall
mov
js
push
push
push
fs
xor
pop
push
outsb
cmp
push
stos
push
dec
push
push
push
cmp
rorb
xor
adc
push
frstor
insl
add
push
mov
pop
aad
in
add
push
add
xor
lods
test
xor
push
add
xor
insb
fs
and
pusha
insl
pop
add
push
add
xor
and
add
sub
xor
insb
or
in
or
xchg
mov
ror
insb
test
push
pop
mov
sbb
adcl
rclb
sbb
push
sbbl
mov
cmp
sbb
sbbl
sbb
add
lret
imul
or
inc
jne
imul
or
mov
inc
movsb
cwtl
aam
or
or
je
inc
or
aam
or
or
xor
inc
or
ret
mov
adc
imul
add
lahf
add
push
xchg
pop
xorb
jns
mov
addl
data16
ret
test
push
or
outsl
jae
inc
rorl
insb
outsl
outsl
orb
imul
push
jo
push
cmc
adcl
pop
jl
push
mov
mov
or
cmp
jb
mov
movsl
jb
insl
push
mov
popa
jns
mov
es
pushf
push
aam
popa
mov
push
push
cwtl
gs
fldt
icebp
loop
imul
inc
cwtl
add
jae
je
cld
test
mov
or
jne
insb
arpl
std
sub
je
jo
gs
sbb
popa
imul
sub
jmp
outsl
jo
test
and
jne
fcmove
push
gs
inc
dec
jg
lcall
fimull
add
dec
adc
cmc
push
hlt
rorb
les
rcrl
adc
imul
xor
insb
je
lret
mov
xor
rcr
add
jo
test
mov
iret
jge
jae
mov
dec
add
jns
je
push
mov
enter
jne
xchg
xorb
xchg
add
adc
mov
cli
push
int3
sbb
bound
add
fsubs
adc
mov
stos
mov
gs
or
icebp
cwtl
mov
aad
cltd
mov
fiadds
arpl
adc
sarl
jb
or
dec
cwtl
outsb
imul
jno
or
mov
sti
adc
add
popa
jb
mov
push
sbb
insl
in
jno
mov
ret
inc
ja
popa
cmpsl
insb
xchg
pop
cmp
lcall
jae
imul
rcrl
fbld
inc
in
insl
data16
lods
lock
fadds
imul
out
lea
rcrb
rcrl
add
jb
loop
mov
cmp
inc
hlt
out
imul
aam
add
and
out
sahf
mov
jae
push
je
gs
sbb
mov
mov
jae
inc
xor
ljmp
sbb
addr16
outsl
push
outsl
or
cmpsb
pop
repz
jae
jo
add
push
loop
test
loope
or
jo
test
add
arpl
movq
cli
out
and
insb
scas
dec
xchg
int
jo
jo
addr16
pop
call
add
sbb
inc
push
popf
jns
gs
daa
jmp
imul
or
mov
ror
sbbb
je
mov
fisubs
mov
push
adc
xchg
add
push
inc
jb
jo
inc
je
addr16
push
or
jne
fs
or
popw
xchg
mov
repz
pop
jae
sti
pop
sub
xchg
pop
enter
push
xchg
jae
sbb
and
pop
xchg
jbe
and
shlb
outsl
jne
xor
cmp
clc
xchg
push
stc
xlat
ja,pt
mov
inc
out
mov
push
xchg
sbb
mov
inc
adc
in
insl
insl
sbb
cmpsb
xlat
mov
imul
gs
inc
mov
jns
mov
arpl
insl
jb
or
gs
insb
sbbb
outsl
mov
push
addr16
bound
xor
xor
test
or
pop
incb
bound
cs
inc
push
stc
in
mov
outsl
add
ljmp
outsl
addr16
fbstp
mov
jne
int
mov
hlt
stos
mov
repnz
out
in
divb
add
mov
fistpll
jmp
in
xchg
jns
pusha
mov
icebp
gs
pop
pushl
negl
and
mov
mov
add
push
sarb
xchg
push
gs
xchg
hlt
fbld
stos
stc
jo
push
dec
cmp
outsl
jae
jne
bound
arpl
pop
gs
sbb
mov
jp
int
int
cmp
into
sub
jp
xor
or
hlt
pop
jno
push
dec
pop
xor
cmp
call
add
mov
inc
mov
fbld
jae
sub
cli
jl
outsb
addr16
xor
jl
cld
stos
jecxz
push
mov
out
cli
fdivl
test
pop
cmp
jne
xor
icebp
out
packssdw
inc
ljmp
imul
outsb
cmc
rcr
push
push
adc
push
push
xor
cmp
pop
push
xor
ss
cmp
xor
popa
pop
cmp
cmp
out
repz
clc
lock
cmp
ja
pusha
fnsave
jne
inc
mov
dec
sahf
int
loop
fs
xor
push
and
mov
out
cmp
or
and
push
mov
push
jne
stos
fs
pop
fstpl
cmc
jb
or
add
cmc
push
and
aas
cmovs
jae
adc
cwtl
je
ja
das
jb
mov
mov
test
jbe
xor
dec
push
dec
stc
shl
insl
sub
setbe
or
inc
shlb
mov
sub
cmpb
add
and
add
xor
aam
add
call
pop
pop
add
push
inc
inc
push
push
inc
jno
scas
lds
xor
mov
jb
leave
push
push
jns
fldenv
gs
xor
scas
inc
test
adc
cmp
mov
nop
adc
mov
in
mov
or
bound
and
ret
or
pop
inc
xor
add
and
and
and
lods
into
add
sub
sub
sub
dec
inc
dec
dec
insl
and
push
push
jns
inc
shrl
adc
pop
dec
ljmp
clc
or
inc
dec
adcb
or
xor
xchg
adc
push
inc
push
push
and
dec
dec
inc
inc
jo
ljmp
add
push
outsb
lods
sbb
push
or
xchg
ljmp
dec
inc
in
xchg
hlt
xor
insl
jecxz
push
frstor
arpl
sbbb
jns
dec
dec
inc
inc
pop
and
call
pop
add
xor
enter
or
in
sub
sub
cld
dec
js
in
xchg
jo,pt
pop
push
push
mov
std
adc
ret
fwait
and
pushw
cld
rorl
cmc
nop
jae
jbe
icebp
sahf
insb
stc
push
mov
outsb
jne
bound
insb
pop
sbb
jns
jno
addb
std
ret
rolb
and
pop
xchg
icebp
adc
push
sbb
icebp
cmp
movsb
adc
ret
mov
mov
xor
adc
push
sbb
fs
in
add
cmpsb
enter
arpl
push
dec
push
push
push
jmp
and
mov
adc
lret
inc
push
push
inc
push
and
inc
inc
outsl
push
push
xchg
fs
xor
ds
dec
scas
adc
and
mov
push
inc
push
nop
cmp
push
pop
js
lds
hlt
les
sub
addl
inc
inc
insl
xchg
push
lds
sarl
jle
xchg
and
sbb
out
shll
into
gs
inc
dec
sbb
xchg
sahf
sbb
xor
push
push
mov
push
jb
daa
push
sti
inc
lock
xlat
sahf
jae
adc
adc
lret
xchg
mov
xchg
jns
push
dec
inc
jno
adc
or
dec
inc
arpl
or
dec
jp
sub
data16
imul
and
inc
inc
push
inc
daa
mov
mov
adc
and
mov
bound
adc
or
push
inc
test
push
dec
ret
lcall
je
sub
outsw
out
nop
pop
add
mov
add
jbe
xor
adc
loop
dec
xchg
xchg
stc
data16
sbb
jns
int
lret
xchg
outsb
js
pop
addl
sub
xchg
sub
or
mov
mov
jp
pop
jge
rcl
aam
pop
movsl
and
frstor
push
push
pop
outsb
daa
dec
enter
or
or
call
nop
jl
dec
push
or
insb
sbb
scas
pop
cmp
mov
jns
mov
popa
sbb
inc
inc
jle
data16
pop
jmp
cs
sub
dec
push
push
dec
inc
dec
cmpsl
cmpsl
leave
inc
imul
inc
enter
or
orb
jmp
and
sbb
imul
or
clc
adc
imul
inc
jge
xor
std
cltd
cmp
pop
ret
into
sub
cli
push
sub
inc
or
outsb
popa
and
and
and
das
das
das
and
cld
mov
out
ret
inc
sbb
xchg
push
jmp
adc
ljmp
inc
push
ja
das
outsl
cmp
inc
push
jno
jbe
lock
fsts
mov
sub
push
aad
imul
and
cs
into
mov
js
sub
and
lcall
cmp
outsw
xchg
ds
sub
adc
xor
push
hlt
dec
or
jb
dec
push
dec
inc
inc
jns
push
addl
mov
dec
scas
and
pusha
jb
xchg
xchg
je
imul
rorb
cld
xchg
cli
mov
movsl
outsb
arpl
dec
dec
ds
test
xchg
or
xor
and
inc
lea
sbb
inc
dec
jno
cmpsb
addl
dec
dec
enter
and
cs
push
mov
xor
rcll
cmp
pop
push
sbb
call
scas
stos
pop
fbld
and
adc
nopl
dec
outsl
stos
out
sub
ret
ret
sub
xchg
mov
addr16
dec
insb
popa
hlt
sbb
xor
dec
inc
dec
stos
or
andb
dec
inc
dec
dec
cwtd
aas
cwtl
jg
insb
xor
in
test
push
xchg
es
push
into
lea
mov
xchg
or
lret
inc
stos
shrb
arpl
pop
and
sbb
fnstcw
aad
jo
sbb
cmp
xchg
or
push
cmp
jns
dec
jle
push
test
adc
cmp
inc
and
jle
push
es
jmp
xchg
leave
cs
imul
pop
push
dec
push
xchg
xchg
ffreep
inc
push
sarl
out
push
push
dec
add
mov
ds
jae
inc
stc
or
outsb
outsl
in
or
jo
adc
mov
add
xor
fs
sbb
sbb
inc
inc
addl
and
push
inc
or
dec
and
fmuls
fs
rcll
jns
out
jns
les
xchg
sti
in
push
mov
test
test
push
ljmp
pop
rclb
jmp
aam
xlat
mov
inc
push
and
mov
xchg
imul
adc
fdiv
into
popa
and
xchg
pop
inc
imul
test
xor
movsl
lahf
cmpl
jb
gs
add
mov
add
imul
js
cmc
and
push
add
mov
cltd
arpl
mov
push
mov
xor
pop
xchg
and
pop
shll
pop
mov
hlt
sub
mov
cmp
xchg
and
pusha
sub
jge
out
jb
xchg
negb
sub
jb
or
std
inc
mov
inc
mov
movsl
js
or
or
inc
add
loop
and
push
mov
jne
shlb
jge
lret
loop
and
loope
jmp
add
out
repz
sbb
xor
jae
andb
xor
adcl
push
sbb
xchg
jg
push
cmpsb
push
into
or
or
ja
and
push
ret
cltd
loope
sub
popf
and
and
mov
cmp
adc
ret
xchg
lret
push
ds
inc
inc
out
insl
and
adc
push
dec
xchg
xchg
push
cmp
cmp
cmp
push
mov
arpl
outsb
popa
jg
imul
dec
dec
dec
lock
mov
ja
aaa
popa
stos
push
lret
je
aaa
and
int3
sub
outsb
sbb
inc
rcll
and
pop
fstl
and
sub
insl
jne
xchg
lahf
ret
mov
mov
push
and
inc
push
adc
arpl
repz
sub
and
push
inc
mov
int3
cmp
inc
push
pop
bound
sub
inc
jl
pop
inc
inc
jl
pop
or
pusha
es
xchg
pop
mov
cmp
jl
sub
test
sahf
in
sub
push
lods
stos
mov
aam
daa
mov
iret
shl
fisttpll
xchg
mov
bound
jl
aam
cltd
and
fisttpl
imul
mov
and
push
jl
les
mov
cmp
cmpsb
sbb
mulb
xchg
sbb
cmp
fs
xor
sub
shll
loopne
in
sub
test
dec
cmp
mov
xor
adc
pop
dec
push
dec
inc
inc
fs
dec
jae
and
xchg
pushaw
ret
cmpsb
test
push
mov
adc
xchg
mov
loopne
sti
js
dec
xlat
cwtl
loop
cli
popf
jnp
int
dec
int3
pop
aad
pop
xchg
addr16
push
outsl
movsl
mov
lods
adc
pop
inc
ja
inc
imul
scas
inc
sub
movsl
mov
outsl
dec
sti
inc
sub
push
sahf
add
add
addl
inc
pusha
and
sub
mov
mov
inc
inc
xlat
add
xchg
popa
faddl
lcall
pop
data16
mov
js
jae
xchg
or
xchg
shrl
mov
ret
or
and
daa
in
xchg
rcl
jo
mov
adc
cs
dec
sbb
outsb
jmp
mov
inc
out
mov
push
add
add
cld
push
and
pop
or
je
sti
in
je
lods
popf
pop
imul
or
sub
fimull
push
movsl
jbe
mov
es
or
cltd
inc
call
xchg
mov
call
jl
xor
dec
outsb
sbb
add
adc
sub
dec
push
cmp
push
jo
mov
shlb
and
jo
ds
fdivl
arpl
jl
dec
cmc
xchg
push
jl
pusha
push
icebp
and
imul
and
push
call
in
xchg
sbb
or
jo
add
pop
popa
or
and
out
or
dec
mov
add
pop
inc
push
sub
dec
xchg
mov
jb
flds
and
jge
nop
jo
shll
mov
iret
inc
mov
xor
ja
adc
mov
adc
or
jns
cmp
dec
sub
push
insb
lock
mov
hlt
cmpxchg
imul
loop
punpckhdq
test
cwtl
mov
cld
lcall
jg
pop
idivl
mov
iret
push
sti
dec
inc
pop
push
sub
inc
pop
and
inc
push
out
sub
scas
cmp
mov
inc
out
or
add
dec
xchg
inc
jne
mov
aaa
jmp
sub
fs
sbb
push
pop
mov
gs
ret
bound
jns
inc
testb
ljmp
mov
xchg
jle
sub
std
add
adc
mov
js
inc
push
push
sub
xchg
cmp
sbb
lcall
add
and
stc
out
push
clc
sbb
mov
cltd
mov
jp
xor
leave
lret
xor
mov
ja
mov
pop
stos
xchg
pop
sub
sub
int3
ja
sbb
cmp
xor
adc
dec
hlt
enter
cmpsb
mov
cmovo
xor
xor
cltd
xor
dec
dec
mov
or
xchg
jle
push
cmp
loope
sbb
pusha
xchg
int3
xchg
popa
loope
mov
hlt
push
and
jno
pop
jg
fs
sub
scas
dec
arpl
inc
out
jecxz
inc
ss
arpl
lods
lahf
lret
aam
test
sbb
adc
lahf
push
xor
sbb
xor
test
xchg
add
xchg
test
ss
inc
outsl
pop
test
and
test
js
sbb
push
fs
test
sbb
test
sbb
dec
or
sbbl
sbb
sub
xchg
and
inc
ja
and
or
adc
aas
flds
out
push
push
push
cld
sahf
push
xchg
xor
test
in
call
in
faddl
aam
sbbl
sbb
mov
mov
test
mov
sbb
mov
pushf
cwtl
test
sbb
mov
sbb
in
adcb
push
jl
je
push
add
pop
aad
fs
push
fs
pop
sbb
dec
sbbl
mov
sbb
test
dec
xor
sbb
and
test
sbb
inc
sbb
inc
or
sbbl
popf
hlt
sbbl
test
sbb
test
sbb
fcom
popf
subl
shrb
popf
enter
cmp
sarb
test
sbb
test
sbb
sbbl
lret
dec
fcom
inc
dec
je
test
jl
rorl
shrb
test
popf
xor
test
fs
test
push
pusha
pop
sbb
dec
xor
cmp
push
add
bound
sbb
add
pop
mov
sbbl
test
sbb
fisubrs
cmpsb
subl
jb
insl
jns
or
subl
jne
aad
pop
data16
aas
or
jb
jno
xor
popa
jo
jnp
push
mov
push
dec
cmp
js
call
je
je
outsl
daa
loope
popa
push
mov
js
popa
xor
cmc
add
in
push
jp
jp
push
mov
xchg
js
jns
jne
flds
jns
ss
add
pop
aaa
rorb
cld
mov
sub
ja
or
jp
inc
or
aam
or
or
jno
inc
or
aam
or
or
arpl
jp
sbb
sbbl
sbb
jb
or
insl
aam
or
or
addr16
or
push
mov
push
push
push
js
mov
je
push
push
push
jno
push
push
push
insl
insb
dec
pop
push
imul
add
imul
push
add
xor
je
add
push
add
xor
push
add
cmpsb
add
test
repnz
jp
js
sbb
sbb
push
push
jo
call
sbb
push
addr16
sbb
pmuludq
inc
adc
lds
dec
add
push
add
ss
add
sub
aaa
fiaddl
push
imul
pushf
push
add
push
push
bound
or
xor
int3
sub
popf
add
clc
xchg
jb
int3
mov
cmc
inc
and
pop
pop
outsl
cs
add
aaa
xor
outsl
jg
mov
add
pop
jnp
pop
enter
sub
cmp
cmp
jns
in
xor
jmp
andb
cmp
cld
pop
fs
fsts
dec
xor
push
inc
ret
lds
sub
mov
xchg
push
stos
shrb
inc
fs
push
xchg
imul
inc
sbb
sub
jb
aaa
movsl
and
xchg
repnz
mov
mov
aam
lds
xchg
out
jo
push
iret
push
and
pop
cmp
inc
out
pop
loopne
add
add
dec
xor
dec
inc
add
add
ret
es
or
sub
or
mov
xor
cmp
shl
das
jno
sub
jo
or
add
lret
ret
xor
ret
xchg
lock
or
adc
lret
ss
dec
jl
lret
push
bound
addr16
xor
mov
imul
imul
and
int3
pusha
jb
test
and
imul
outsl
adc
divb
decb
push
inc
fmuls
and
inc
sub
inc
mov
enter
gs
pop
pop
xor
cwtl
hlt
lret
add
bound
sarb
xchg
movsl
loop
in
es
mov
add
mov
js
add
cmp
xor
arpl
jae
cwtl
addl
fwait
xorl
cmp
adc
cmp
mov
cmp
push
sub
mov
add
add
loop
or
aam
or
or
sbb
inc
or
aam
or
or
cld
loope
inc
or
aam
or
or
inc
or
aam
or
or
pushf
nop
inc
or
aam
or
or
push
dec
inc
or
aam
or
pop
flds
or
test
pop
push
loopne
sbb
int3
sbbl
test
sbb
test
sbb
test
js
test
sbb
test
sbb
sbbl
test
sbb
push
pop
sbb
fildll
sbb
mov
lods
mov
cwtl
mov
insb
sbbl
test
sbb
test
sbb
sub
sbb
push
sbb
push
push
call
mov
mov
mov
xchg
mov
je
push
push
push
push
dec
push
push
push
inc
cmp
and
clc
fldl
xor
push
add
xor
lods
movsb
add
push
add
xor
pop
push
add
push
add
xor
sbb
xor
add
fdivl
faddl
xor
push
add
xor
mov
je
add
xor
dec
inc
add
push
add
add
xor
fistl
xor
xor
sarb
test
add
xor
cmpb
push
add
push
add
xor
cmp
add
push
add
or
inc
or
aam
or
or
mov
inc
mov
js
push
pusha
pop
push
inc
or
aam
or
or
or
rolb
xor
add
push
add
xor
pushf
xchg
add
push
add
xor
push
dec
add
push
add
xor
xor
inc
or
inc
or
or
mov
inc
or
aam
or
or
jo
inc
or
aam
or
or
sub
inc
or
inc
scas
or
add
xlat
mov
aam
mov
mov
push
push
lods
movsb
mov
mov
jo
pop
push
push
push
push
dec
mov
cmp
push
push
push
and
push
push
push
adc
cmp
clc
add
push
add
xor
mov
add
js
push
pusha
pop
push
add
push
add
xor
adc
mov
clc
aad
inc
or
aam
or
or
aam
or
or
cmpb
aam
jo
aam
or
or
inc
cmp
aam
xor
aam
or
in
inc
or
mov
push
push
push
mov
mov
push
movsb
pushf
push
push
push
xchg
mov
jl
push
push
push
pusha
push
push
push
push
dec
inc
mov
sub
push
push
push
adc
ds
push
cld
shrl
loopne
sbb
mov
sbb
sbbl
sbb
push
pop
push
test
sbb
test
sbb
sub
sbbl
xchg
sbbl
rolb
test
sbb
test
sbb
andl
sbb
pop
sbbl
test
sbb
test
sbb
and
sbbl
cli
push
sbb
push
push
call
mov
mov
mov
cwtl
nop
mov
cmpb
push
push
push
push
push
inc
mov
xor
mov
add
push
push
push
clc
shrb
loopne
sbb
mov
mov
test
sbb
test
sbb
subl
pop
dec
inc
sbb
and
sbb
push
sbb
push
push
call
mov
mov
test
push
push
mov
mov
mov
push
push
push
push
dec
inc
mov
xor
push
push
push
adc
jno
mov
xor
in
xor
push
add
xor
mov
add
push
jo
pusha
xor
dec
inc
add
push
add
xor
or
inc
imull
add
int
inc
or
or
les
lods
aam
or
or
jl
inc
or
aam
or
or
cmp
inc
or
aam
or
inc
pop
lods
or
int3
aam
or
or
les
mov
aam
or
or
jo
inc
or
aam
or
or
xor
inc
or
lret
aam
add
lret
inc
or
inc
or
or
mov
inc
or
aam
or
or
insb
fs
or
aam
or
or
and
or
xor
lret
xor
push
add
xor
test
add
push
add
xor
pop
push
add
push
add
xor
sbb
add
aam
ljmp
clc
leave
call
loopne
rolb
aam
enter
or
or
mov
aam
je
aam
or
or
inc
xor
or
lret
aam
add
enter
aam
or
or
mov
inc
or
aam
or
or
insb
fs
or
aam
or
or
sub
inc
or
lret
aam
add
movl
push
add
xor
mov
add
push
add
xor
fs
add
push
add
xor
and
add
aam
pop
sub
call
loopne
int3
inc
or
aam
or
or
xchg
mov
aam
xorb
aam
pusha
pop
or
dec
cmp
or
aam
or
inc
mov
or
sbb
loopne
sbb
rolb
test
sbb
test
sbb
xorl
pop
push
sbb
xor
and
adc
push
cmp
cld
les
push
push
push
les
lods
mov
xchg
mov
push
push
js
push
push
push
push
mov
mov
sub
push
push
and
mov
or
sbb
inc
gs
ret
loopne
sbb
sbbl
sbb
nop
sbbl
test
sbb
test
sbb
cmp
sbb
sbbl
jae
sbbl
push
push
push
push
push
mov
push
lods
movsb
mov
mov
jo
push
push
push
push
push
dec
inc
push
push
push
cmp
push
push
and
adc
push
push
push
cld
roll
test
sbb
test
sbb
test
mov
test
mov
js
sbbl
test
sbb
test
sbb
and
sbbl
or
shl
or
aam
or
or
cwtl
mov
aam
test
or
or
dec
inc
inc
or
aam
or
or
inc
or
inc
lods
mov
or
or
aam
or
or
test
or
aam
or
or
xor
inc
or
aam
or
add
or
mov
call
add
xor
push
add
xor
test
push
add
add
xor
inc
xor
xor
push
add
or
mov
inc
fmul
aam
or
or
movsb
cwtl
inc
or
aam
or
or
pop
push
inc
or
aam
or
or
adc
test
aam
add
mov
loopne
add
push
add
xor
xchg
mov
xor
push
add
xor
cmp
add
push
add
subl
call
sbbl
sbb
sbbl
sbb
push
pop
push
test
sbb
test
sbb
sbb
sbb
push
sbb
push
push
in
mov
int3
shrb
push
lods
mov
cwtl
nop
mov
jl
push
push
push
fs
push
push
push
push
dec
mov
cmp
mov
or
mov
test
sbb
in
sbb
mov
mov
test
sbb
mov
test
sbb
test
sbb
sbbl
test
sbb
test
sbb
or
mov
mov
call
mov
push
push
mov
push
push
cwtl
nop
push
push
push
cmpb
push
insb
fs
push
push
push
dec
inc
push
push
push
cmp
les
pusha
mov
jp
bound
xchg
cmc
loop
dec
popa
jne
outsl
mov
popa
outsb
pop
ja
gs
outsl
mov
roll
je
insl
jb
push
lock
rclb
ja
mov
popf
xor
je
popa
gs
sbbl
jb
inc
popa
jbe
outsl
add
repnz
jae
gs
mov
push
out
dec
imul
jno
loope
shl
mov
cmp
jb
push
cmp
arpl
movsb
dec
dec
jne
rolb
dec
inc
or
js
inc
jb
push
or
push
add
xor
arpl
fs
add
push
jb
inc
lea
cmp
sahf
pop
loop
push
movsl
bound
lods
lahf
es
xor
inc
ja
mov
ret
dec
gs
arpl
jae
ret
lods
ret
inc
ja
and
fs
popa
cmp
cli
call
int
pop
fnsave
push
mov
sar
jae
je
sub
adc
inc
inc
orb
mov
and
pause
fidivl
insb
jne
cmp
shll
pop
jle
addr16
inc
jb
data16
arpl
inc
int3
mov
push
popa
adc
dec
xchg
jp
lret
sbb
stc
addr16
mov
fnsetpm(287
jle
jne
into
lods
push
dec
jp
divl
cmpl
inc
mov
dec
inc
xchg
cs
jo
popf
dec
mov
xchg
lret
popa
bound
out
jo
gs
std
jge
dec
xor
out
ret
and
bound
inc
cmc
jp
outsl
jo
mov
push
jo
or
popa
inc
jns
jno
jne
das
push
jmp
out
push
jmp
addr16
jg
jl
jmp
bound
bound
mov
mov
cmovb
jo
jne
imul
jae
pop
xor
push
mov
mov
pop
jns
xor
adc
dec
aas
fadd
mov
repz
je
mov
out
xor
repz
pop
and
adc
lods
popa
push
mov
inc
lea
cmp
sub
mov
or
insb
and
pop
push
xchg
aam
popa
jne
ss
rorl
push
cmp
insl
xor
das
rcrb
iret
insb
andb
pop
or
loopne
filds
out
pop
cwtl
cmp
push
jg
jge
xchg
sbb
loope
loop
jne
xor
ljmp
pop
insb
dec
cltd
insb
sub
clc
ret
addb
lea
cmc
xchg
jle
cmp
bound
xor
lcall
mov
loopne
ja
add
inc
jns
gs
jne
cmp
jo
mov
ljmp
dec
je
dec
jecxz
jp
outsl
dec
popa
jae
out
push
add
lret
scas
jmp
ja
inc
pop
add
punpcklwd
scas
cmp
gs
js
jno
push
aas
inc
cli
in
or
enter
fcomp
jne
push
pushl
insb
int
pop
lahf
dec
insb
jle
jnp
iret
jnp
leave
jg
pusha
mov
inc
pop
dec
pop
dec
addr16
cld
jmp
inc
rorl
data16
loop
xor
call
adc
mov
lds
imul
jg
push
push
push
imul
gs
icebp
mov
scas
dec
cmp
push
icebp
jae
cmc
jecxz
gs
and
mov
rclb
add
xchg
ja
bnd
adcl
mulb
test
and
adc
dec
push
or
je
push
imul
jge
push
pop
jae
jmp
ljmp
jb
jmp
loopne
push
outsl
gs
xchg
emms
popa
insb
jb
rcll
ds
mov
push
push
pusha
sbb
mov
jg
aaa
pop
jb
icebp
jg
sbbb
sahf
stc
inc
jmp
addr16
into
fnstsw
cli
xchg
xchg
sbb
cmp
pop
testl
xor
xchg
inc
cld
repnz
in
jbe
insl
ljmp
xchg
aaa
je
cmp
pop
sti
push
lahf
jno
insl
sub
clc
jo
jg
mov
or
popa
bound
push
xor
lock
movsl
rorb
shll
inc
jbe
jns
loop
push
loopne
mov
cli
shlb
in
jge
push
adc
into
push
imul
mov
popa
arpl
pop
std
push
jne
inc
inc
jns
fs
mov
addr16
push
dec
mov
lahf
aas
inc
scas
mov
fistl
or
pushf
and
fwait
loop
arpl
lods
dec
std
bound
outsb
sbb
sub
inc
int
roll
or
int
shr
data16
jle
jns
jns
aas
fcoml
faddl
stos
bound
lea
sub
ljmp
outsb
jmp
scas
repnz
imul
icebp
cmp
imul
dec
scas
js
outsb
popa
insl
outsl
and
inc
cs
and
sbb
outsb
outsl
imul
add
cmp
xchg
pop
lods
fiaddl
bound
enter
dec
outsl
bound
push
jae
out
pop
mov
in
pop
fs
inc
mov
add
add
cmpsl
mov
inc
mov
aam
adc
inc
push
cs
testb
add
xchg
xchg
mov
cs
sbb
push
in
popa
and
scas
push
bound
inc
jae
push
xor
and
rcrl
sub
into
push
jne
push
mov
icebp
add
arpl
loope
in
push
dec
jns
mov
rol
mov
adc
mov
pop
std
fistl
fld
jo
arpl
push
inc
outsl
jbe
pop
cmp
cmp
push
mov
movsb
jo
lcall
add
in
mov
in
popa
jns
pop
cmp
imul
loop
popa
stos
scas
mov
sub
pushf
jb
jb
int
mov
movsl
jmp
jb
xor
push
jbe
aam
sbb
test
sbb
notl
pusha
test
mov
arpl
sub
mov
les
jmp
pop
push
inc
and
add
lods
negb
pop
pop
aaa
rorl
mov
mov
jno
stos
jae
jnp
mov
in
and
add
int
in
cmp
ret
clc
and
insb
in
dec
push
hlt
lret
adc
inc
js
sbb
scas
jns
xchg
push
mov
insb
arpl
scas
jnp
mov
jo
bound
push
pop
dec
outsl
cli
sti
dec
xor
xchg
pop
popa
mov
outsb
or
sbb
push
js
push
or
push
mov
icebp
cltd
mov
jbe
imul
add
je
dec
inc
popa
xor
fs
dec
aam
xchg
aas
push
aas
outsl
inc
je
addr16
mov
imul
outsl
inc
test
pushf
fs
dec
nop
xor
icebp
in
push
stos
push
enter
inc
test
ljmp
pop
dec
jne
ret
cltd
cmp
in
add
jno
push
xchg
xor
cmpl
repz
leave
push
push
or
inc
je
andl
mov
xchg
dec
insb
sub
cmp
and
fldenv
mov
or
or
push
jo
pop
jmp
imul
inc
pop
call
push
jl
push
mov
mov
push
dec
push
std
jecxz
and
loop
outsb
lea
popa
in
sub
popf
imul
inc
imul
pop
fwait
or
mov
in
jb
fidivs
cltd
into
add
data16
movsl
mov
and
loope
outsb
dec
dec
dec
test
add
mov
scas
inc
xor
xchg
and
jb
pop
xchg
push
xchg
pop
es
addr16
popf
add
xorb
je
push
loop
xchg
fcoml
loopne
pop
ret
and
xchg
je
jp
push
adc
or
push
jne
inc
jb
push
jns
push
decl
sub
addr16
es
jns
imul
jecxz
ja
push
inc
stc
inc
lods
jns
mov
pop
into
cmp
decb
stos
inc
arpl
mov
inc
sub
ficompl
push
cli
cmp
inc
adc
pop
jge
into
sbb
xor
pop
mov
sbb
xchg
jp
loop
pop
jae
shr
lret
jns
inc
cmp
test
and
scas
imul
out
xor
les
cli
sub
gs
dec
pop
push
push
fisttpll
dec
bsf
sbb
sbb
jne
pop
lock
push
popa
ja
fcmovbe
inc
dec
enter
dec
hlt
jno
push
cmp
scas
cs
mov
loope
gs
pop
cmp
inc
and
divl
insb
push
imul
bnd
loope
fmull
or
fidivs
test
insb
lds
insb
insl
mov
inc
es
ss
push
inc
stos
movaps
icebp
add
das
xlat
push
ret
pop
lock
cli
or
pop
rcrl
jle
sahf
inc
popa
cmp
je
test
add
pusha
fildll
mov
push
in
andb
into
jb
jb
aad
in
imul
bound
inc
sub
imul
popa
xor
xchg
push
sbb
popa
push
insb
pop
mov
adc
je
xor
jne
sbb
dec
jne
sbb
inc
jp
aaa
movsb
sbb
insl
insl
push
mov
add
leave
pop
ljmp
and
jb
dec
inc
test
sbb
jne
cmpsl
inc
push
mov
xor
add
jo
pop
sub
xchg
cmp
and
popa
push
mov
cmp
fs
and
dec
insb
and
daa
jae
adc
push
push
imul
fdivs
imul
mov
inc
mov
icebp
mov
ja
mov
push
sahf
jns
loop
or
adc
mov
push
mov
enter
pop
pop
cmp
aam
insb
dec
sub
scas
imul
mov
je
pcmpgtw
daa
sub
lock
out
loop
pop
jle
enter
nop
iret
add
jo
push
push
aam
imul
nop
in
popa
pop
xor
ss
loope
cmp
repz
out
dec
mov
mov
ja
jle
imul
xchg
xchg
loopne
adcb
cmp
lock
add
imul
pop
and
jne
inc
push
mov
jno
cmpsl
pop
push
ja
bound
arpl
push
div
jb
lea
aam
mov
and
push
mul
movd
nop
fs
sub
sub
fwait
das
fucomi
ja
xchg
inc
mov
jb
jne
test
aam
popa
and
ljmp
aas
inc
inc
bound
or
cmpb
sahf
mov
daa
popa
xchg
xor
dec
jo
inc
mov
push
paddq
gs
lea
pop
jae
jo
mov
xchg
imul
pop
lcall
shlb
jb
lock
cld
sahf
inc
and
dec
cwtl
sbb
arpl
sub
jno
lods
push
mov
mov
dec
xlat
lods
out
scas
sbb
sbb
mov
mov
lock
push
push
fldcw
clc
rorl
ja
cltd
inc
js
outsl
jo
and
call
jl
inc
mov
cmp
sub
jno
jb
push
push
into
dec
test
fisttpl
outsl
imul
mov
cmp
std
std
imul
int
lds
nop
lcall
inc
insb
inc
inc
xchg
sub
and
fldenv
stos
imul
mov
mov
insb
jne
popa
sub
fists
cwtl
mov
aam
xchg
sub
outsl
popf
and
pop
push
mov
jp
inc
outsb
push
movsb
pop
inc
jmp
jp
push
pop
out
ja
and
test
pop
adc
mov
push
xchg
dec
jg
outsb
xor
add
in
add
jp
sbb
add
inc
inc
fs
inc
bound
lahf
ja
addr16
das
insb
loopne
mov
push
popa
dec
add
sti
leave
sub
jo
ljmp
inc
lcall
bound
mov
scas
xor
and
outsb
stos
mov
xor
inc
jae
shl
adc
popa
enter
inc
daa
mov
loop
jmp
jle
lods
push
push
sbb
lret
fcomi
out
pop
notl
push
fstps
outsb
push
mov
xlat
dec
test
sbb
mov
adc
jne
stc
push
xor
fs
and
dec
push
loope
and
in
pop
jb
mov
and
lea
xchg
dec
lods
dec
imul
jns
jge
daa
mov
imul
sti
popa
add
mov
bound
lcall
fs
xchg
push
movd
fisubs
popf
arpl
gs
pop
xchg
aaa
imul
test
pushw
fwait
jns
xchg
cmpl
les
cltd
push
xchg
dec
imul
addl
cmp
xchg
xchg
dec
pop
jle
mov
ret
mov
into
mov
xchg
aas
and
jle
pop
cmp
xchg
dec
sbb
pop
inc
jb
mov
xchg
out
jae
cmp
sbb
outsl
dec
shlb
and
inc
imul
je
dec
push
popf
movsb
add
add
dec
jno
fs
inc
inc
dec
scas
jecxz
adcl
imul
jns
insb
popa
ss
loope
cmp
xchg
push
dec
mov
mov
cli
dec
push
rcl
xor
pop
pushf
orl
arpl
add
arpl
xor
pop
popa
sahf
adc
lret
jle
cltd
call
xchg
mov
xchg
lahf
jecxz
stc
dec
loop
loopne
push
jne
dec
fcmovbe
mov
jo
stc
and
push
scas
pop
addr16
cmpsl
sti
daa
gs
adc
xor
out
mov
push
movsb
dec
out
sub
mov
test
cs
cld
inc
pop
sahf
mov
test
popa
insb
ja
add
cmpsb
jp
rolb
cmpsb
test
adc
inc
insb
sbbb
loop
je
clc
jae
pop
xchg
lods
gs
ficompl
aas
cmc
sbb
out
daa
xchg
paddusb
jne
movsl
outsb
inc
nop
test
scas
shrb
test
adc
xchg
push
sbb
mov
clc
in
mov
filds
int
je
inc
rorb
fs
insb
mov
jne
jnp
xchg
fs
ret
inc
loop
ss
jae
ficoms
mulb
cmp
push
sbb
push
data16
pop
in
cwtl
ret
add
inc
imul
dec
es
aam
xchg
inc
data16
cmp
xchg
outsl
xchg
xchg
adc
fs
push
in
rclb
push
mov
gs
in
and
push
pop
cmp
mov
cmpsl
pop
gs
mov
std
loop
dec
pop
fildl
cmp
sub
hlt
outsl
lcall
xchg
xor
lock
jae
mov
push
imul
ror
repz
jmp
jo
jae
dec
mov
push
jns
dec
mov
pop
cmovg
call
push
gs
insb
add
push
outsl
ja
jo
xchg
cld
push
js
push
pop
les
mov
add
ljmp
addr16
or
les
sub
add
pop
inc
movsl
fldenv
inc
arpl
inc
jnp
jae
add
jle
inc
dec
dec
int
pop
std
pusha
sub
sahf
int3
addr16
sahf
loope
pop
sbb
dec
mov
pop
xchg
punpckhwd
test
mov
and
xchg
ja
pop
popa
push
sarb
add
jo
xchg
add
push
sbb
jo
inc
xchg
outsl
mov
int
outsl
dec
sub
sahf
outsb
sub
or
cmpsl
dec
lds
mov
jnp
shl
inc
sbb
arpl
sub
lds
dec
outsb
mov
inc
insb
je
sahf
cld
stc
incb
jns
sahf
das
inc
clc
nop
sbb
push
ljmp
pop
push
mov
imul
add
je
daa
insb
jae
push
out
jg
neg
movsl
mov
pop
xchg
mov
insb
addl
pop
and
jg
popa
idivl
dec
cld
aad
inc
and
push
pop
cmpsl
jmp
inc
jne
repnz
arpl
xchg
mov
xchg
hlt
inc
out
in
imul
sbb
xchg
jo
gs
out
lret
cmp
pusha
hlt
std
mov
imul
lahf
inc
subl
pop
aad
jecxz
push
pop
and
iret
inc
loope
movsl
push
inc
jb
gs
nop
fs
fdivrp
rol
je
inc
ret
sti
pop
in
cs
fcoms
clc
sub
rorb
push
push
outsl
clc
dec
xchg
push
lahf
popa
dec
daa
insl
mov
lahf
dec
or
push
outsb
mov
jno
push
push
into
lcall
repnz
dec
jns
push
outsl
fdivs
xor
sbb
outsl
popf
sbb
orl
sbb
testl
outsl
xor
lods
mov
in
jno
sti
lcall
dec
call
jns
cmp
leave
adcl
insb
adc
call
lds
add
mov
cltd
add
int3
fucom
loope
imul
divl
and
mov
popf
sub
movl
rorb
push
add
imul
lret
add
pop
pop
outsb
sub
lahf
push
cld
enter
jbe
pop
and
or
jae
bnd
push
jo
test
cmp
pop
cwtl
scas
mov
mov
and
sub
repz
jne
push
dec
or
ret
mov
dec
gs
and
pop
outsl
lret
or
out
clc
push
xlat
lret
push
ficomps
les
and
imul
sbb
sbb
jb
clc
mov
push
jae
and
lods
aas
sbbb
scas
popf
outsb
dec
jmp
insl
jle
jmp
pop
jp
ret
sbb
push
sbb
nop
mov
enter
add
jo
cld
jnp
jb
out
mov
js
sbb
inc
fldt
arpl
icebp
push
add
js
pop
testb
xchg
mov
push
jns
lcall
sub
jae
mov
push
and
fcom
inc
popa
je
test
inc
inc
mov
pop
arpl
adc
push
sbb
jmp
pop
in
mov
pop
rol
xor
popa
jbe
ds
xchg
dec
mov
stos
xor
pop
test
popa
sarl
push
insl
iret
bound
jb
pop
shlb
aas
inc
xor
xorl
pop
pop
bound
es
shlb
rclb
fcompl
cltd
movsb
sub
inc
mov
jb
xor
jb
xchg
jb
add
lock
cli
lds
push
xchg
nop
add
inc
fs
push
fiadds
or
stos
hlt
dec
cmc
ds
cmc
dec
pop
imul
scas
insb
outsl
mov
jb
pop
jns
mov
adc
xor
pop
mov
jne
fstps
jo
push
sub
push
jne
pushf
or
in
xor
adc
loop
mov
mov
add
jae
imul
cli
mov
mov
dec
test
stos
pop
scas
pop
in
jecxz
dec
pushf
sub
je
hlt
xchg
jae
sbb
shrl
in
push
and
mov
lahf
pop
push
mov
mov
dec
jne
out
into
mov
mov
mov
test
lretw
xchg
in
xor
xor
add
sub
inc
fs
or
pop
cmp
dec
cmpxchg
clc
jbe
lahf
dec
and
mov
movsl
sub
les
cmp
dec
popa
push
jge
jmp
jp
popa
imul
xchg
push
outsl
jns
pusha
cmp
pop
das
int
mov
mov
rcrl
cmp
mov
cmp
cmp
js
and
outsl
mov
and
addl
xchg
shrl
xchg
lods
std
insl
js
das
push
aam
arpl
ss
push
push
inc
push
addr16
and
push
jae
std
cmp
pop
lret
jb
gs
mov
cmc
lock
out
dec
or
cmc
test
je
leave
icebp
mov
es
push
imul
sbb
dec
cmp
cmp
mov
hlt
push
sbb
push
pop
mov
popa
push
push
addr16
jmp
les
rcrl
mov
nop
popa
jbe
outsl
xor
adc
mov
push
insb
dec
call
and
mov
ja
cwtl
jl
sbb
push
fisubl
out
jno
bound
dec
mov
bound
inc
rep
fdivl
ret
dec
push
jmp
mov
push
repz
sbb
aas
ljmp
fsubrl
hlt
fdivs
sbb
inc
xor
cltd
sub
cmc
pop
cmpsl
cmp
mov
leave
pop
jns
jne
hlt
cmpl
pop
jnp
incb
imul
push
hlt
cmp
inc
imul
mov
add
mov
aas
add
dec
xor
pop
push
add
es
cmp
push
xor
dec
jae
test
mov
add
add
cmp
inc
inc
inc
jl
pop
ror
lret
fnstcw
in
mov
inc
cmpsl
cs
addl
out
adc
pop
xor
ljmp
fbld
dec
inc
out
out
rorb
xor
jo
sub
xchg
cmp
and
adc
test
inc
push
inc
mov
loope
mov
cmp
std
inc
or
icebp
cmp
jb
lea
mov
xor
pop
mov
je
pop
jge
jp
es
ss
loope
sub
mov
jge
xor
and
je
or
adc
and
test
add
jo
leave
test
add
inc
rcrl
or
xor
jns
dec
dec
xchg
pop
and
jae
dec
push
inc
push
push
or
jb
push
dec
push
push
loop
stos
mov
sbb
scas
add
jae
shrl
mov
sbbb
pop
sub
cmpsb
fbstp
lcall
pop
dec
dec
push
fcom
cs
push
jbe
and
sub
pop
scas
lods
sub
lods
xor
mov
inc
xor
and
test
xor
dec
pop
push
das
and
pusha
xchg
jns
push
inc
call
xor
in
shll
lea
push
or
loopne
outsb
jns
xor
push
pop
jecxz
jne
xor
adc
or
loope
repz
pop
mov
or
lret
dec
xbegin
and
pusha
mov
cld
sbb
jl
int3
dec
pop
stos
icebp
jbe
or
inc
inc
jecxz
pop
cmp
xor
and
xorl
gs
xor
in
and
cmp
ret
sub
fcoms
jae
fs
add
xor
cmp
mov
sbb
sbb
pop
sbb
dec
aaa
push
daa
jg
jb
scas
es
jo
mov
cmp
cmp
xchg
inc
dec
push
mov
add
push
jl
iret
inc
js
inc
aas
inc
dec
jae
cmpsl
sub
push
repz
pop
mov
pop
mov
xlat
inc
dec
insl
cmp
or
std
add
dec
and
cmpsb
imul
scas
jae
dec
das
outsl
cs
insl
jge
pop
das
cmc
sti
out
push
je
insb
insl
fsubs
int
fisubrl
je
push
sub
dec
lods
jecxz
mov
jnp
xorb
add
dec
sbb
or
cmp
fwait
xor
dec
hlt
or
insl
bound
or
and
sbb
inc
int
lahf
test
push
rolb
cmp
push
outsb
jo
add
dec
dec
push
push
inc
dec
cmp
cmp
push
das
enter
push
add
test
inc
dec
inc
inc
dec
inc
pop
sub
push
add
dec
lock
jno
add
push
scas
adc
adc
and
xorl
dec
mov
inc
ss
push
mov
dec
inc
push
dec
aaa
xchg
test
mov
cltd
push
orb
dec
dec
inc
jb
ret
pop
add
jo
add
add
xor
addr16
mov
inc
je
and
push
pop
jae
lods
out
sbb
add
bound
jle,pn
movsb
jae
sbb
clc
xor
hlt
shll
mov
inc
and
mov
sbb
adc
sbb
sbb
das
xor
mov
cmp
dec
js
aaa
cltd
shl
aad
push
stos
scas
sbb
push
xor
push
popa
mov
sub
push
iret
sti
loopne
and
sbb
xor
int3
rorb
and
and
or
repnz
ds
add
xchg
pushf
js
shr
sub
push
pop
call
push
mov
jbe
xor
hlt
and
inc
inc
dec
push
pusha
mov
nop
xchg
mov
test
into
cmp
leave
and
ret
pushf
xchg
pop
xchg
xchg
imul
ret
jae
and
push
jle
lods
test
push
pop
jbe
inc
jle
add
mull
xchg
cmp
adc
aas
add
nop
jmp
push
outsb
insb
sbb
fldcw
sbb
cmp
imul
test
pop
pop
jge
inc
push
pop
mov
adc
sub
and
pop
mov
or
cld
inc
and
insl
cmp
iret
es
out
jecxz
fstpt
sbbb
outsl
push
ds
les
cltd
shrl
jae
jmp
sub
sbb
addb
cmp
adc
push
sbb
mov
js
jg
push
jbe
fcom
xchg
jo
fs
cmpsb
insl
clc
adc
cmp
iret
cli
into
test
sub
loope
push
push
push
inc
adc
int3
push
jne
dec
in
bnd
sbb
xor
xchg
dec
imul
bound
adc
out
loope
imul
daa
add
jecxz
sub
loopne
mov
leave
in
xchg
loopne
fsubrl
jbe
mov
and
je
xchg
int3
jp
add
inc
inc
cmpsl
jo
push
and
jno
sbb
out
pop
mov
mov
xor
daa
ficompl
and
dec
test
cmp
adc
push
sub
stos
pop
or
test
cmp
roll
lcall
icebp
or
cli
shrb
inc
inc
in
adc
and
or
out
imul
or
inc
add
add
add
je
sbb
bound
sub
jmp
and
add
popa
pop
lds
je
lds
adc
jnp
sbb
mov
gs
and
in
bound
mov
mov
push
jnp,pn
cmp
mov
jp
jge
and
imul
jb
test
lret
mov
lods
and
stc
loope
push
adcb
add
inc
sub
sub
inc
pushl
add
inc
scas
fadds
pop
sub
sub
cmp
xchg
mov
xor
sbb
pop
out
or
mov
mov
push
jae
add
fdiv
xor
xor
add
adc
pop
pop
or
add
adc
xor
mov
xorb
loop
jmp
call
jo
cwtl
cltd
cltd
ret
and
add
cltd
adc
test
fsts
movsl
lcall
add
add
stos
je
into
enter
repz
shrb
xchg
rolb
xchg
sbb
fdivrl
adc
mov
lcall
scas
jno
xchg
test
fwait
add
adc
pop
xchg
xorb
adc
lcall
iret
dec
jb
cmp
gs
repz
lock
and
repz
repz
sbb
inc
mov
cltd
sahf
and
pop
adc
popf
repz
lret
lcall
test
jne
adc
inc
loopne
pop
nop
rclb
pop
jnp
adc
mov
sbb
adc
mov
iret
lret
push
or
pop
fisubs
jo
cwtl
movsl
jge
jno
mov
ljmp
add
cmp
dec
ret
shlb
ja
jno
addr16
in
leave
jmp
push
cmp
idiv
fdivr
std
jmp
ljmp
xor
push
loope
in
add
idiv
std
aad
sti
jmp
jmp
out
ljmp
popf
arpl
fmul
repnz
js
ds
lock
and
shlb
ljmp
cltd
movsl
push
jnp
dec
dec
dec
adc
dec
rol
jmp
daa
cmpb
ja
xor
dec
mov
into
jae
mov
fs
arpl
add
inc
jle
test
and
mov
cmp
add
rclb
rcrl
cmp
daa
dec
push
xor
test
rorb
jbe
loop
sub
es
les
dec
jo
or
js
jb
aam
lods
xchg
lock
mov
and
divl
fistps
addr16
loope
or
xor
aaa
xor
fnstsw
xor
scas
pop
popa
or
jp
jo
xor
das
add
cmp
xor
cmp
lret
jp
into
rcll
outsb
ret
dec
mov
daa
pop
jnp
xchg
or
adc
jo
sub
push
add
fbld
inc
mov
nop
into
mov
mov
sbb
adc
add
add
adc
add
add
call
arpl
add
and
nop
push
add
xor
std
int3
inc
fs
mov
fldl
push
add
pusha
pop
or
icebp
jl
rcrb
xchg
icebp
icebp
sub
adc
dec
and
jb
or
inc
push
inc
roll
mov
pusha
adc
dec
push
add
or
mov
sub
push
jae
mov
fcompl
add
add
inc
dec
fadds
pop
add
pop
adc
les
int
fs
cmp
in
mov
stos
movsl
orb
clc
cmpsb
mov
inc
movsb
lods
sub
inc
subb
mov
lret
lahf
ffreep
and
fnstenv
addb
mov
je
add
add
xor
aas
dec
pop
mov
or
sub
andb
sbb
add
jo
cwtl
xchg
cwtl
dec
rclb
test
sbb
nop
adcb
adc
and
cmp
sarb
and
add
pop
add
cltd
icebp
mov
inc
add
jp
addr16
xor
pop
shl
add
fidivrl
popl
jo
das
jge
or
add
xor
jp
xor
mov
sub
push
sti
sbb
pop
pop
shl
and
or
add
xchg
push
inc
xor
add
xor
add
push
adc
or
es
test
sub
or
jae
add
inc
inc
ret
or
into
cmp
loopne
jg
push
push
add
push
cld
addr16
popf
adc
in
sbb
push
pop
mov
in
jo
pop
pop
mov
jo
cs
lret
call
mov
cmpl
shrb
add
xor
out
add
cld
lldt
clc
sub
enter
add
cmpsl
xchg
js
fmull
std
rolb
adc
dec
adc
cmp
push
jl
mov
ja
mov
inc
and
add
cld
ja
dec
dec
push
dec
push
inc
inc
pop
and
add
jmp
add
inc
pop
cmpb
sub
out
cmp
cmc
xor
hlt
iret
xchg
jle
bound
rolb
cltd
std
cmp
dec
or
adc
roll
pusha
icebp
stos
stos
orl
pusha
adc
cwtl
mov
icebp
cwtl
iretw
mov
add
add
push
push
add
popf
dec
adc
mov
lret
sbb
shl
scas
mov
jo
ljmp
movsl
mov
jo
fs
fnstsw
adc
mov
push
leave
adc
leave
enter
shl
out
test
iret
popf
data16
add
pop
fwait
test
movsl
adc
mov
add
add
lcall
insb
stos
push
rcr
xor
pop
stos
inc
xchg
daa
mov
push
xchg
lcall
pop
add
adc
mov
xchg
rolb
adc
mov
pop
lret
pop
xlat
xchg
jne
sub
push
add
add
push
je
mov
jne
xor
jle
pop
loopne
ljmp
cmp
add
adc
xchg
xchg
adc
adc
jne
dec
xchg
dec
imul
adc
cmp
fs
dec
add
lcall
lret
inc
test
jp
jns
inc
push
xchg
lret
jno
lret
add
push
push
lcall
mov
cmc
imul
add
pop
sub
add
and
inc
jb
enter
repnz
bound
add
xchg
xchg
pop
inc
and
push
dec
and
add
inc
dec
and
loope
ljmp
mov
push
cmp
mov
jb
jne
xor
rcrb
dec
xor
inc
xchg
fdivl
outsb
cmp
dec
push
and
adc
mov
pusha
clc
adc
pop
adc
or
and
incl
add
or
cmp
aam
add
js
push
push
push
add
or
add
mov
fs
jae
add
inc
or
dec
cmp
xor
xor
fimull
adc
or
dec
push
aas
inc
ficoml
in
push
mov
add
adc
inc
inc
cmc
add
add
shlb
adc
push
lock
dec
and
sub
sbb
repnz
sbb
scas
xor
xor
rolb
addr16
mov
jne
jns
dec
add
or
xchg
and
mov
add
cmpb
xor
pop
pop
add
add
push
inc
mov
rcrb
add
ljmp
pop
and
add
pop
pop
xchg
mov
push
das
cltd
add
insb
popa
xchg
cmc
adc
jo
cmp
jecxz
hlt
and
adc
jbe
push
stc
jge
xchg
es
inc
ja
pop
add
mov
lock
leave
sub
cmp
mov
dec
push
sbb
or
rclb
fwait
test
add
fldcw
cmc
cmp
add
or
xchg
mov
or
in
inc
loope
inc
mov
pop
js
mov
pop
dec
pop
add
push
sub
mov
notb
or
xchg
pop
cmp
cmp
add
test
add
or
add
clc
jle
sbb
outsl
push
test
push
lahf
ljmp
mov
or
xor
or
or
stc
adc
inc
cmp
lods
or
imul
shll
cmp
test
xchg
mov
and
cmp
mov
rolb
addb
pop
pushf
loopne
repnz
add
insb
call
push
push
adc
popaw
insb
and
jne
test
and
dec
fs
lcall
add
outsb
gs
in
xchg
movsb
jo
shll
adc
xchg
jg
cmpsl
fs
stos
sbbl
xor
add
push
sbb
add
cli
subb
out
add
mov
ds
leave
xor
dec
mov
lods
or
bound
xor
js
xor
xor
jae
loope
xchg
sub
or
shrb
negb
jo
and
sub
in
sbb
jmp
inc
sbb
mov
dec
push
and
dec
out
push
aam
jecxz
cs
mov
push
cld
mov
dec
je
cmp
mov
inc
add
ficomps
xchg
inc
xor
dec
jge
inc
lahf
jo
dec
sub
dec
inc
cmp
cmpsl
les
add
cmp
xchg
in
pop
cmc
shrb
sub
dec
inc
cmpsl
jecxz
sub
dec
add
movsb
daa
mov
ja
sbb
xor
xor
je
in
dec
insl
and
cmp
inc
pop
ds
sbb
mov
push
les
pop
loopne
stos
fistpl
and
and
add
xor
pusha
xchg
jecxz
sub
xor
dec
add
pop
loopne
sub
mov
mov
shl
cwtl
lods
jp
sub
sbb
lods
sub
add
and
push
inc
mov
pop
pop
loope
iret
push
mov
inc
xor
cmp
lods
lods
jbe
jno
inc
xor
inc
fwait
stos
pop
mov
sub
popf
in
stc
ret
shl
repz
fs
lahf
into
imul
cmp
pushw
add
cmp
data16
xor
data16
lcall
or
xor
jnp
add
xorb
inc
loop
and
push
cli
ret
call
fcomp
fisubs
sahf
ficoms
add
in
fisubrs
and
fiaddl
add
inc
mov
add
mov
mov
stos
lahf
and
and
movsb
add
je
mov
fmulp
push
sbb
enter
mov
fisttps
mov
stos
mov
dec
fimuls
scas
stos
pop
loopne
adc
in
push
xchg
mov
daa
mov
sbb
mov
dec
lret
fidivrl
jg
popf
lods
mov
fimull
add
add
fstps
fistps
out
jne
inc
repz
push
sahf
rolb
negb
adc
push
fisubs
scas
add
inc
add
jmp
push
add
shlb
rol
add
adc
add
insb
push
pop
add
cmpsl
xchg
sub
push
out
aas
out
xor
dec
xlat
and
or
es
mov
dec
test
movsl
jmp
xor
xor
adc
js
lods
jno
jo
inc
push
xor
iret
in
push
push
pop
push
pop
cs
inc
add
xor
cmp
xor
aaa
xor
xor
xor
leave
out
wbinvd
inc
mov
xor
inc
repnz
jmp
push
lods
je
aas
js
insb
cmp
and
dec
adc
cmp
xchg
lods
andl
add
xchg
cmp
inc
push
cmp
add
inc
leave
jno
mov
mov
cmp
ja
dec
flds
call
sub
pop
es
push
fs
dec
jl
out
ror
test
out
ret
cmp
add
rcr
push
inc
dec
and
add
jb
sub
pop
xor
sub
mov
mov
out
jmp
bnd
test
loop
push
push
pop
je
jne
adc
inc
mov
sbb
mov
jl
mov
mov
adc
xlat
lahf
dec
test
movb
in
cmpsb
adc
sar
lea
call
jmp
ret
je
push
mov
add
jle
and
lods
and
rclb
pop
pusha
mov
stc
jns
test
lcall
popf
jne
fisubrl
or
andl
jp
push
or
lahf
int
cmp
jg
push
fwait
js
push
or
neg
pop
xchg
aad
stos
add
inc
fisubrl
xchg
add
push
mov
data16
cmpl
aam
jmp
xchg
pop
add
mov
pop
xchg
subb
fs
in
add
arpl
sbb
push
xlat
push
in
in
pop
imul
fistpl
out
mov
aam
push
mov
jg
pop
add
aas
bound
shlb
nop
fwait
jp
sbb
andl
and
shr
arpl
ljmp
in
sub
and
imul
fwait
lock
xchg
ljmp
mov
cmpb
in
mov
iret
cs
loop
push
cmp
xlat
cmp
add
xchg
mov
lock
sub
ret
pop
mov
xor
test
jmp
in
movb
sbb
push
fisubrs
andl
leave
xor
rcrb
repnz
jo
xchg
js
fst
add
cld
fwait
es
mov
popf
add
add
mov
mov
pop
test
push
imul
lret
repnz
out
les
mov
pop
outsb
insl
dec
imul
mov
testl
adc
into
inc
add
jmp
hlt
add
fidivrs
mov
cmp
and
jnp
insb
jae
dec
pop
add
or
sbb
sub
sub
imul
xor
or
sbb
mov
ret
xor
xchg
adc
xor
adc
aam
inc
push
in
fs
jbe
or
push
dec
adc
cmp
or
jecxz
call
inc
jo
or
mov
and
in
add
adc
out
dec
push
ds
enter
xor
aaa
sub
cmp
and
xor
jecxz
dec
fidivl
dec
loopne
loop
orb
add
js
insb
pushf
mov
int
jo
jno
or
mov
dec
push
movsl
adc
or
mov
adcb
jae
loopne
out
push
or
lret
insb
shlb
les
xchg
inc
dec
mov
sub
in
incb
inc
mov
in
ret
insl
jns
sbb
sbb
add
aaa
or
ja
sbb
add
pop
mov
adc
mov
or
and
push
dec
xchg
adcb
push
cmc
aaa
inc
imul
lods
cmp
cmp
xor
ret
scas
cmp
cli
fwait
sub
in
or
push
rcrl
andl
xchg
inc
push
pop
adc
dec
inc
push
testb
ficoms
es
into
loopne
hlt
add
add
nop
loopne
arpl
mov
and
fnstsw
and
hlt
shll
repz
mov
pop
or
sbb
add
push
xor
add
rorb
fs
pusha
add
mov
icebp
jmp
movsb
out
into
dec
cmpsl
aaa
mov
and
rorb
cmp
lret
cmp
or
inc
xor
and
add
pop
pop
mov
popa
sahf
dec
sbb
leave
cmp
jns
mov
stc
xor
mov
adc
push
dec
ds
daa
mov
dec
es
and
xor
xchg
sbb
int
push
stc
addl
push
jl
lods
hlt
adc
je
jle
pop
in
test
adc
fldl
cld
mov
sbb
shrl
insl
xor
mov
aas
fs
jae
test
push
mov
mov
call
hlt
mov
push
bound
mov
or
lcall
mov
push
xchg
lret
add
add
test
add
es
sbb
stos
jns
arpl
lods
adc
push
outsb
cwtl
xor
ficomps
movsl
out
leave
add
pusha
gs
mov
xorb
das
or
incl
stc
mov
add
add
js
sbb
inc
jo
inc
jo
lods
or
or
jo
xor
inc
jl
mov
add
add
lret
js
inc
and
xor
xor
push
push
sbb
push
or
cmpl
xor
jb
add
add
cmp
add
divb
pushl
repnz
push
call
cs
mov
rcl
in
dec
loop
cmpb
call
add
push
int
pop
cmp
push
lds
push
sub
sbb
add
lea
mov
rep
mov
stos
push
push
push
push
push
push
inc
dec
add
push
push
call
add
test
ret
pusha
ljmp
arpl
add
faddl
adc
inc
add
sbb
inc
add
pop
ss
cmp
xor
dec
adc
add
jp
xchg
cmp
adc
add
loopne
aam
add
inc
add
push
in
or
xor
dec
and
insb
loopne
xor
inc
imul
and
jae
lcall
pop
jb
add
dec
or
inc
push
push
hlt
or
dec
sbb
sub
mov
bound
or
arpl
mov
ja
push
gs
cmc
inc
jnp
mov
and
lock
push
inc
outsb
addr16
mov
int
subl
popa
lock
ja
lock
lret
stc
pop
dec
push
mov
rolb
dec
xchg
adc
pop
add
dec
cmp
adcb
loopne
mov
pop
dec
cmp
xchg
mov
add
pop
rolb
les
js
addr16
add
pop
push
xor
mov
add
das
enter
les
push
ljmp
lock
sub
movsb
or
inc
jns
subl
adcb
pop
adc
orb
cmp
cmp
push
loopne
pusha
in
or
loopne
and
cmpb
cmp
pop
mov
add
add
aaa
mov
add
push
pop
nop
cmp
inc
jns
or
ss
jle
mov
inc
adcb
fdivs
jl
or
push
unpcklps
xor
sahf
nop
shlb
mov
rorl
xor
or
rorl
movsb
jo
mov
rorl
or
and
call
lret
cwtl
test
enter
xor
jp
rorl
adc
nop
sub
ljmp
and
adc
jp
shll
adc
nop
sub
inc
add
aam
dec
cmp
inc
jno
adc
push
jp
or
das
pop
adc
inc
fsubrl
mov
adcb
test
add
push
jns
loop
mov
pop
push
inc
and
pop
pop
dec
mov
dec
inc
mov
xor
sub
mov
insl
fs
sub
inc
jns
out
cmp
test
push
mov
xor
outsb
sbb
or
cmc
shrb
cld
cmpb
and
in
push
dec
push
dec
pop
cmp
push
insl
je
ja
lods
mov
cmp
ja
ret
pop
insl
jo
jne
inc
ret
xor
push
fidivs
frstor
mov
pop
dec
and
xor
adc
psubq
inc
dec
aaa
and
fldt
or
lea
add
imul
xor
jb
xchg
lods
out
xor
ja
fisttpl
int3
adc
add
sarb
into
fildl
dec
arpl
fwait
cwtl
pop
call
sahf
jo
cvtps2pd
fstpl
aam
in
loope
or
pusha
jns
das
roll
sbb
and
inc
insb
je
inc
ret
sub
sub
mov
popf
mov
xchg
or
mov
pop
les
push
testb
out
cmp
ss
pop
and
ljmp
je
dec
fcoml
cld
arpl
dec
push
push
inc
sarb
cwtl
stos
pusha
push
popa
jb
les
arpl
pop
xchg
call
mov
or
addr16
and
inc
jo
in
sub
push
arpl
clc
xchg
xor
dec
push
shlb
rcrb
roll
adc
or
xor
inc
inc
add
adc
xorb
inc
bound
dec
pop
cmp
cmp
shlb
insb
add
imul
dec
inc
push
pop
mov
lahf
ljmp
inc
cmpsb
xchg
nop
adc
addr16
inc
scas
iret
sbbl
test
fcoms
jb
sbb
test
imul
mov
dec
dec
cmp
mov
jo
sbb
test
inc
push
jne
fadds
insb
outsb
inc
or
loopne
lret
fsubrl
aas
mov
lea
jo
adcb
repz
popl
cmp
frstor
jo
cmp
or
and
mov
pop
cmp
push
inc
push
insb
sbb
test
not
lock
scas
fwait
mov
xchg
and
cmp
into
xchg
nop
shll
add
inc
lods
mulb
and
pop
and
stc
shrl
inc
push
lock
cmp
or
leave
adc
sar
mov
shrl
add
scas
inc
inc
inc
sub
aaa
gs
and
push
out
ret
loopne
xchg
pop
mov
and
xor
xlat
lock
jb
stos
and
out
jo
ficomps
add
dec
dec
cmp
nop
pop
repz
loope
ficoms
inc
outsl
sub
xchg
jne
lret
or
xorb
xor
pop
fdivl
inc
jle
jl
adc
iret
adc
inc
imul
mov
or
cmp
movsb
lret
imul
jg
int3
daa
sbb
jge
pushf
lock
outsb
pop
fwait
outsl
stos
push
popa
mov
xchg
adc
jb
loop
outsb
cmp
xchg
fs
adc
addl
pop
pop
inc
mov
sbb
pop
dec
int
int
hlt
dec
data16
ja
ret
ret
and
jne
jns
adc
cmp
inc
inc
test
mov
dec
out
jbe
and
cmp
insl
cli
sub
test
xor
dec
dec
pop
dec
jne
aaa
pop
xchg
inc
pop
push
cmp
jo
jbe
jmp
arpl
gs
fldl
adc
insl
cmp
dec
imul
popa
pop
sbb
scas
push
clc
lret
inc
jne
icebp
iret
mov
xor
sub
test
mov
aaa
xlat
mov
out
inc
out
cmp
pop
shlb
aad
test
ds
incl
inc
cmp
jmp
xor
inc
lcall
rolb
repz
xor
dec
add
aaa
adc
sub
pop
mov
dec
mov
loop
jne
and
outsb
add
add
addb
aam
and
dec
movsb
dec
inc
pop
xchg
je
pop
push
cmp
imul
adc
or
fcmovb
mov
or
cmp
cmp
shrl
test
push
dec
sub
xchg
roll
iret
push
xchg
pop
cmp
mov
and
dec
add
out
pop
jb
repz
fs
adcb
repz
jecxz
inc
stos
out
jle
dec
dec
ss
daa
or
int
pushf
clc
jns
pop
mov
push
fstp
je
dec
dec
sbb
sbb
outsb
dec
dec
xchg
cmp
xchg
push
jae
jge
adc
push
dec
iret
insl
push
in
fldl
pop
sub
in
sub
fstpl
shrl
out
fcoms
pop
hlt
sbbl
add
jecxz
mov
mov
stos
ret
sub
inc
int3
iret
sub
movsl
xor
repz
test
cmp
cmpsb
faddp
push
sub
lock
clc
jge
fistl
and
cmc
mov
add
je
inc
push
sahf
stos
pop
call
arpl
fcomps
add
jae
outsl
jns
insl
test
and
jne
sbb
cli
pusha
into
sbb
dec
xor
stc
hlt
loope
mov
in
add
jbe
push
inc
dec
dec
cs
fsubl
push
idivb
clc
outsl
sbb
jns
fisttpl
das
loop,pn
xor
in
push
shll
jl
ret
add
jo
add
int
dec
das
inc
out
lock
sahf
add
or
pop
loop
loopne
inc
push
cltd
lahf
imul
cmp
adc
inc
xor
or
jno
pop
add
add
lret
push
lret
push
add
xor
add
sahf
pop
xor
push
into
push
add
ss
add
add
jbe
pop
addl
add
flds
nop
cwtl
and
pop
add
xchg
imul
psllq
loopne
pushf
mov
push
ret
pusha
jle
inc
jp
xor
mov
sahf
push
out
and
push
add
add
add
sbb
add
and
xor
add
push
add
add
push
pop
add
add
and
cmp
int
add
cmp
sub
inc
add
adc
add
add
cwtl
repnz
or
pop
loope
lock
jbe
xchg
test
loop
gs
addr16
jb
mov
loopne
pushf
adc
dec
icebp
jns
dec
inc
mov
sub
lret
or
add
test
inc
ds
cwtl
jo
add
sub
add
jge
cwtl
psadbw
out
xchg
or
jae
lret
fs
or
pop
lret
fs
addr16
in
push
jo
mov
adc
add
or
repnz
add
adc
add
add
lock
pop
fbld
or
arpl
rcrb
push
pop
jbe
xchg
jecxz
bound
addr16
outsb
push
push
add
cmpl
loopne
mov
add
das
cs
add
orl
or
add
push
or
dec
pop
fadd
ljmp
pop
sub
cltd
mov
mov
icebp
leave
sub
or
pusha
add
cmp
xor
push
pop
add
inc
sbbb
dec
inc
pop
in
addl
pop
add
inc
jae
jp
or
and
js
add
addl
adcl
add
xor
push
inc
dec
fsubl
test
push
pop
scas
mov
dec
dec
jecxz
xor
inc
andb
add
inc
ljmp
or
clc
lret
rcrb
nop
jae
ljmp
rcll
int3
pusha
push
xchg
fsts
gs
pusha
push
xchg
add
pusha
enter
sub
xor
int3
insl
jecxz
mov
lret
movsb
xchg
icebp
jl
inc
sub
fs
cmpb
jge
and
icebp
adc
insl
jl
push
xlat
sub
into
mov
js
inc
inc
dec
xchg
inc
add
inc
mov
xchg
aam
jo
jae
mov
lock
mov
push
mov
out
sbb
jecxz
pop
inc
movsl
aas
std
loopne
pmulhuw
aaa
add
js
inc
fwait
in
xchg
inc
sti
fisubs
inc
outsb
jbe
outsl
cwtl
sarl
cwtl
cwtl
inc
push
mov
mov
arpl
dec
lcall
ss
lods
fsub
insl
dec
es
jae
mov
ror
notb
or
and
push
add
loope
mov
loope
popf
jl
xchg
jo
dec
dec
imul
push
shl
daa
and
push
dec
call
test
xchg
outsb
jae
iret
daa
push
notb
pop
cmpsl
scas
jb
inc
call
in
int3
cmpsl
lahf
outsb
sbb
xor
xchg
and
dec
out
daa
xchg
adc
add
add
shrb
fwait
push
dec
inc
push
bsf
daa
mov
ds
xchg
sub
or
cli
dec
outsl
mov
icebp
adc
dec
outsb
mulb
arpl
out
int3
cmp
jl
push
sbb
cltd
inc
inc
imul
outsl
js
jae
jp
xor
in
sub
sub
mov
dec
add
or
out
call
mov
add
outsl
push
jb
inc
dec
lock
push
jo
or
ret
shll
roll
cmp
cmp
call
into
insl
mov
mov
ret
test
imul
inc
cmc
cmpsb
add
jns
inc
mov
repz
mov
push
loopne
mulb
stos
push
jns
or
imul
cs
jbe
inc
scas
into
cmpsl
je
cs
leave
outsl
fcmovnbe
add
inc
gs
xchg
insb
pusha
stc
sarl
out
fs
sbbl
push
or
pop
mov
iret
mov
push
enter
push
dec
cmp
loope
pop
pop
inc
inc
dec
jae
xchg
cmpsl
aas
inc
sbb
sbb
push
aam
ficompl
cltd
jle
dec
jae
aaa
pop
xor
rolb
mov
lods
sub
inc
adc
xchg
dec
push
in
sbb
adc
ret
les
jecxz
cmpsl
add
jbe
inc
inc
and
xchg
dec
fs
mov
xor
and
sti
mov
cli
xchg
out
repz
in
push
ljmp
insb
das
lods
aas
pushf
push
orb
inc
sub
ljmp
xchg
inc
fs
in
mov
int3
cmp
or
push
pop
jne
dec
out
into
xor
mov
sarl
mov
dec
adc
jno
or
mov
in
and
shrl
xchg
imul
mov
jge
ret
adc
ret
sub
adc
inc
sub
and
pushf
xchg
push
enter
jae
xor
jg
test
aas
test
adc
sub
pop
mov
out
sub
iret
stos
adc
inc
incb
stc
inc
mov
daa
insl
push
xor
mov
mov
repnz
lret
xor
mov
inc
xchg
ljmp
push
test
stc
lock
sbbl
inc
adc
movsl
test
push
inc
stc
jae
notl
cwtl
stc
jl
mov
test
inc
push
in
adc
incl
add
jae
mov
jo
outsb
push
ret
push
sti
lds
cmp
mov
and
adc
inc
jp
jnp
mov
or
and
fs
sbb
inc
jo
jl
or
dec
cmp
or
dec
inc
mov
insb
inc
movsb
ret
push
push
push
loop
push
and
cld
jae
or
or
jns
fwait
dec
mov
inc
pop
les
mov
rolb
movsb
inc
in
sbb
rorb
shrl
mov
lds
push
ja
xorb
subl
xor
int
sub
mov
fldl
pop
iret
scas
in
jl
orb
je
add
orb
out
inc
hlt
in
inc
lock
fisubs
fistpll
and
data16
stc
cwtl
mov
add
jbe
std
sbb
gs
out
jecxz
jb
shrl
cmp
mov
dec
leave
and
jne
inc
dec
sub
mov
inc
cs
xor
mov
jae
cmp
xor
inc
clc
xor
jcxz
cli
cmp
icebp
dec
adc
sbb
jle
xchg
arpl
data16
push
test
in
push
mov
xchg
mov
imul
xchg
mov
lock
sbb
pop
or
dec
arpl
pushf
push
xchg
and
and
movsb
aaa
mov
aaa
dec
into
dec
and
pop
jno
xorl
scas
sbb
push
in
rorl
jb
cmpsl
clc
adc
mov
pop
sbb
mov
fcmovnbe
jo
cld
jbe
fidivrl
push
or
sbb
data16
sarb
inc
shlb
cmp
add
mov
dec
fs
sbb
clc
or
outsb
arpl
jl
sbb
lret
inc
and
imul
dec
push
mov
xchg
and
push
fnsave
fcmovnbe
fdivs
in
loopne
mov
pop
pop
bound
cmp
dec
test
mov
inc
jb
int
push
and
test
xchg
mov
pop
jne
mov
inc
imul
fnstenv
ret
jno
push
test
test
sbb
push
stc
lock
int
bound
icebp
or
repnz
movsb
and
cmp
push
jne
call
fmul
imul
push
adc
pushf
jp
adc
jne
jne
loope
jo
jae
adc
arpl
mov
and
rorb
push
mov
shll
xor
addr16
rcr
xlat
insl
push
jnp
sub
push
pusha
mov
xchg
add
cmp
or
or
mov
bnd
inc
cwtl
push
and
adc
push
cld
test
xor
stc
cwtl
mov
test
mov
mov
icebp
data16
mov
jae
cmc
jle
mov
fmull
mov
mov
dec
sbbl
aaa
or
movsb
inc
dec
divps
cmp
leave
aad
push
xor
and
lret
insb
js
mov
loop
or
fiaddl
dec
stos
add
aas
jg
cmp
das
xor
cmp
xchg
push
fidivl
subb
ja
aam
xor
add
jge
xor
and
xor
push
mov
test
xchg
dec
outsl
nop
or
imul
enter
repz
int3
inc
lret
daa
pop
gs
mov
cltd
add
loope
in
addr16
add
inc
jns
cwtl
sbbb
mov
popf
sbb
inc
nop
out
das
cmp
out
adc
pusha
mov
xlat
and
imul
js
movsl
aas
jbe
test
and
and
cmp
jecxz
pop
enter
outsl
ret
push
ja
outsl
pusha
lret
cmp
jo
add
push
jle
inc
push
xor
and
push
test
pop
popa
fisubrs
adc
push
dec
lahf
in
lea
loop
mov
sbb
out
insb
ja
xlat
xchg
jne
pushf
je
jns
and
xorb
push
cmp
jae
jecxz
sbb
and
pop
jno
mov
shl
xchg
outsl
inc
mov
insl
jns
lods
cmp
mov
arpl
pop
xchg
fs
sub
add
mov
sub
push
dec
adc
daa
int
jle
xchg
jge
insb
fcoml
cli
cltd
mov
adc
and
pop
fwait
push
ljmp
jb
mov
dec
xlat
nop
gs
mov
sub
jg
outsl
nop
xchg
insb
enter
dec
xchg
outsb
test
lahf
add
xor
xor
cmp
jbe
cmpl
dec
or
out
cmp
jl
jno
dec
cmp
pushf
xchg
sub
fwait
daa
xchg
cmc
sub
dec
cld
jl
repz
jg
jle
jmp
ljmp
cs
mov
mov
cltd
jmp
int
pop
int3
push
xor
or
add
push
adc
loop
add
data16
outsb
fwait
mov
test
stos
mov
mov
cltd
not
nop
xchg
add
aam
add
pop
cwtl
xchg
xor
mov
test
jl
cmp
push
jp
inc
pop
dec
push
ljmp
sbb
dec
lea
dec
push
test
or
inc
inc
test
movsl
out
arpl
cmp
gs
ficoms
aam
insl
mov
xor
sbb
out
jle
mov
daa
cs
rolb
loopne
jae
sbb
jae
cwtl
add
xchg
leave
sub
adc
icebp
popf
jb
dec
int
adc
fildl
xchg
insb
lods
movsb
bound
or
push
inc
xorb
xor
insl
push
xchg
or
fldl
outsb
jns
sub
dec
dec
dec
jb
icebp
hlt
fmuls
inc
or
push
popa
or
int
outsb
out
js
cmp
push
mov
cmp
xchg
sbb
and
into
sbb
or
imul
add
jne
fs
add
sbb
add
adc
xlat
push
dec
pop
push
pop
inc
push
push
pop
enter
dec
ss
dec
dec
jp
adc
inc
pop
mov
test
es
or
sbb
pop
int3
bound
push
addr16
fsts
repnz
jne
ds
sub
arpl
mov
pop
xchg
push
push
mov
jle
sahf
and
insl
cmp
ljmp
pop
add
cmp
and
cmp
rolb
jb
xor
dec
xlat
inc
out
fbld
ficoms
cwtl
js
rol
frstor
xor
add
inc
cmp
xchg
push
sub
mov
ljmp
lds
inc
dec
ja
int
add
mov
aaa
fnstenv
insb
sub
bound
insb
arpl
pop
out
pop
add
sbb
shll
mov
test
xor
jbe
loope
ss
inc
pusha
add
xor
aaa
ss
mov
adc
or
cmp
cmp
adcl
sub
popa
sbb
popa
sbb
ss
stos
jae
xor
xchg
inc
pusha
xor
jnp
insb
sahf
sbbl
shlb
lock
and
sub
cmp
mov
adc
sbb
sub
dec
adc
sbb
adc
andl
sbb
or
inc
sbb
mov
punpckhbw
pop
add
daa
sub
shrb
sub
mov
decl
inc
ss
icebp
add
adc
add
addb
add
add
sbb
outsb
shld
andb
cmpsb
fistps
add
mov
loopne
inc
loope
jno
jle
test
mov
xor
cmp
inc
mov
push
add
lret
mov
in
call
aas
jle
loopne
sbb
push
add
fisubrl
jo
clc
test
rcr
fsubp
stc
adc
jle
xor
cmp
add
xchg
pop
xchg
add
mov
inc
add
inc
jns
jns
or
inc
mov
pop
fmull
or
xchg
pop
sbb
adc
xchg
sete
xor
cmovae
or
sub
in
lret
pop
jns
mov
xor
insl
and
jb
xchg
dec
sub
addb
add
addl
lcall
sahf
mov
movsb
cmpsl
pop
in
xchg
mov
mov
pop
in
sbb
adc
mov
sbb
or
or
adc
in
sub
inc
cmc
lea
das
push
das
push
mov
nop
xchg
das
push
das
push
xchg
xchg
adc
adc
lret
add
andl
xchg
sbb
or
bound
xor
rcll
lea
js
decb
pop
fistpll
cmp
xor
push
jae
xchg
dec
sbb
sbb
ret
icebp
cmp
cmp
lret
adc
cmp
inc
sub
orb
inc
inc
xchg
iret
pop
xor
mov
pop
icebp
shl
ja
ret
je
and
and
rolb
jp
add
add
repnz
mov
xor
cmpb
fstpl
and
add
lock
je
mov
addb
inc
out
add
pop
xchg
add
call
popf
lcall
stc
lds
sbb
mov
test
mov
js
sbb
cmp
inc
lret
flds
mov
mov
shl
mov
mov
insb
add
cmp
js
sub
add
adc
ret
psubsb
mov
and
adc
xchg
cwtl
push
and
inc
add
leave
sbb
into
sbb
rorl
and
sahf
add
add
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
pop
pop
add
inc
stc
mov
adc
mov
decl
js
add
add
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
add
add
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
add
add
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
add
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
cmp
data16
push
pusha
les
addb
sti
aas
jno
or
mov
inc
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rolb
add
add
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
add
add
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
inc
pop
add
push
pop
sarl
jl
mov
das
lea
mov
inc
add
add
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
add
add
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
add
add
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
add
add
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
add
add
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
bound
roll
std
orl
ficomps
frstor
xor
add
