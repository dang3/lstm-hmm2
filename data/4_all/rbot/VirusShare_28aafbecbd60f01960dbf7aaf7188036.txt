int3
pusha
or
add
add
cmp
or
mov
or
or
add
add
add
call
popa
or
imul
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
or
jo
or
test
add
or
dec
pusha
or
pusha
pusha
or
jo
or
test
add
or
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
pusha
or
hlt
pusha
or
add
add
and
sbb
fisttpl
or
cmp
or
cmpsb
sbb
inc
addl
push
cmp
add
add
dec
pop
adc
lods
es
movlps
cmp
sbb
pop
imul
pusha
dec
nop
adc
dec
push
das
movsb
test
inc
es
punpcklbw
and
or
mov
and
adc
lcall
add
cs
or
jb
xor
daa
push
push
lock
dec
dec
test
adc
and
sbb
adc
orl
mov
arpl
sub
das
add
adc
push
push
add
ljmp
sbb
or
push
dec
or
sbb
dec
jp
add
sbb
add
xor
add
pop
enter
adc
pop
sbb
sub
push
and
into
add
push
cmp
imul
or
push
and
repz
or
adc
push
sub
sahf
inc
inc
push
adc
inc
add
push
imul
add
sbb
decb
and
adc
incb
and
pop
pop
push
sbb
add
push
sbb
add
dec
push
push
add
adc
sub
or
push
adc
adc
inc
cltd
and
pushf
mov
js
cmp
and
cmp
adc
adc
cmp
adc
or
mov
incb
adc
dec
pop
mov
adc
and
jge
push
or
sbb
adc
xor
sub
add
and
sbb
add
or
or
out
cmp
jge
push
cs
mov
stos
and
mov
and
ja
xchg
adc
adc
pop
or
pop
sbb
mov
decb
add
or
inc
push
rorl
pop
imul
sbb
add
push
jp
add
or
or
dec
push
adc
or
cmpsb
or
inc
jle
sub
loope
adc
pusha
sub
incl
add
pusha
arpl
arpl
in
stos
dec
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
add
add
add
add
add
jle
aad
cmp
int3
sbb
inc
clc
xchg
test
dec
push
nop
sbb
fidivrl
sbb
stc
fistps
push
mov
or
xor
fdivs
nop
clc
loopne
test
xchg
sub
or
adc
fwait
sti
add
fisubl
call
sbb
adc
xchg
lock
pop
adc
cli
hlt
jo
cmpsb
rolb
add
add
ret
cmpsb
dec
add
xlat
lea
jge
mov
xor
sub
std
arpl
jmp
stos
xlat
scas
adc
xor
ja
nop
push
xor
xor
add
out
pop
outsb
ret
xchg
jmp
inc
shlb
xor
pop
sti
aad
das
fidivl
pop
inc
adc
xorb
jecxz
mov
data16
xor
or
inc
mov
jl
lods
rorb
pusha
in
rorb
push
add
test
inc
push
and
add
push
add
xchg
pop
fiaddl
sbb
jg
test
negl
aam
xchg
mov
adc
sbb
push
addl
push
pusha
sub
and
cmp
or
lea
inc
pop
in
packsswb
sub
dec
inc
xchg
mov
mov
lea
mov
sti
imul
dec
js
rcll
movsl
xor
dec
xchg
jp
xor
mov
into
jp
mov
les
pop
or
dec
dec
add
sub
movsb
adc
dec
mov
push
pop
jp
scas
rcrl
and
add
vmovddup
or
adcl
punpcklbw
int3
adc
adc
pop
movsl
rolb
inc
clc
into
lods
cmp
xor
sarb
push
loopne
vpsubw
xor
mov
xor
jecxz
scas
add
adc
imul
adc
lret
aad
jo
jle
xchg
mov
push
or
icebp
cmp
ret
sub
xchg
and
jle
sub
jge
addb
loopne
mov
cmpsl
sbb
add
test
nop
cmp
or
adc
xchg
adc
enter
add
pop
lods
add
call
dec
xor
adc
lret
cmp
push
cli
int
cmpsl
leave
jno
or
loope
pusha
jge
mov
mov
shlb
jo
scas
adc
and
movsb
pop
cwtl
adc
aad
mov
cmpsb
inc
lock
jge
clc
out
push
lods
je
jns
jbe
into
and
pop
movsl
cmpsb
arpl
fldl
int3
in
push
in
into
in
pushf
and
or
mov
adc
js,pn
pop
inc
lret
fs
fwait
add
sub
sub
arpl
les
inc
shl
and
addl
pusha
pop
outsl
cmpl
icebp
mov
mov
jne
adc
and
jne
stos
les
inc
pop
add
rcrb
push
or
rclb
mov
xchg
aas
push
xchg
adc
imul
or
rclb
push
mov
dec
xchg
jbe
out
jnp
xchg
leave
push
stos
mov
cmc
ret
and
xchg
xchg
aad
inc
enter
add
aad
xchg
mov
shrl
adc
cmp
mov
xchg
cli
dec
mov
and
dec
add
push
adcl
ljmp
ret
jmp
add
jge
loop
loope
mov
xor
sub
pop
add
add
mov
xchg
jle
cwtl
jb
mov
cmp
adc
dec
clc
push
xor
xchg
sub
and
push
hlt
fwait
test
pop
add
out
adc
aad
jb
add
pop
sub
lcall
cwtl
sub
xchg
mov
xchg
sub
or
pop
popf
faddl
mov
jmp
unpckhps
in
or
pop
cld
mov
fmul
xor
mov
pusha
adcb
loopne
inc
xchg
mov
mov
ja
push
mov
or
test
lcall
dec
inc
cmp
pop
lret
aas
fdivrl
inc
adc
fs
fsubl
lods
inc
sbb
xorb
loope
test
repz
data16
sub
fdivs
fstpl
sub
mov
push
mov
sub
pop
sbb
ja
mov
fisttps
and
movsb
lret
sbb
jnp
pop
shlb
cmp
sarb
arpl
mov
roll
mov
das
sbb
cmp
les
std
inc
adcl
xchg
and
add
sub
push
inc
cmc
sahf
push
cmp
popa
repz
les
inc
ljmp
sbb
out
and
mov
and
add
push
inc
loopne
xor
push
xor
add
inc
pusha
mov
inc
mov
jmp
jg
mov
mov
mov
mulb
int3
sub
cwtl
arpl
cmc
pusha
or
sbb
dec
cmpsb
ret
jp
shlb
add
call
lods
inc
cltd
daa
mov
rclb
fiadds
xchg
dec
push
cmp
aaa
sub
inc
mov
push
ret
push
sbb
mov
imul
or
sbb
xor
jns
dec
ds
pop
jb
fadds
dec
cwtl
div
call
adc
mov
cmp
pop
pop
ret
sbb
mov
test
push
or
inc
shl
loopne
mov
pop
inc
xor
int
out
daa
loope
add
mov
fdivr
sahf
je
push
or
and
roll
sub
jmp
inc
aad
mov
rorb
sbb
xchg
aas
pop
bound
or
pop
loopne
adc
sub
es
scas
out
dec
lds
test
nop
inc
push
dec
xchg
add
mov
lea
mov
dec
testb
mov
sub
mov
in
pop
xchg
insb
and
mov
sub
nop
sub
or
addr16
pop
sub
add
pop
fmul
enter
xor
addl
adc
xor
dec
xor
push
lds
test
ret
xchg
out
inc
pop
push
push
and
pop
inc
jne
sbb
mov
sub
nop
jae
dec
stos
or
inc
xor
cmpsb
pop
movsl
mov
scas
jge
xchg
push
call
xchg
add
out
movb
push
cmpsb
orb
aaa
xor
xlat
cltd
push
mov
lret
lock
pop
addr16
dec
stos
push
test
push
imul
sti
jb
loope
negb
arpl
mov
movsl
dec
sarl
jns
and
insb
push
sbb
inc
adc
adc
lods
aas
mov
inc
sbb
jmp
pop
cmp
mov
clc
adcl
add
add
push
into
xor
bound
sub
xor
xchg
add
dec
xchg
adc
fwait
ss
mov
push
inc
sbb
inc
jg
xchg
arpl
inc
xchg
aas
in
sahf
push
xchg
push
sub
add
mov
clc
sbb
into
lock
xor
rclb
pop
fdivrl
pop
xchg
sbb
pop
add
jo
pop
pop
sub
cltd
repnz
and
push
mov
hlt
imul
sbb
movsb
or
push
sbb
int3
inc
sti
lods
pop
and
and
xchg
mov
cwtl
cmp
scas
xlat
add
orl
xchg
shrb
lahf
filds
pop
aas
arpl
mov
xchg
ja
int
xchg
rorb
and
repnz
daa
add
imul
inc
dec
push
lods
jno
loope
sub
inc
cmp
or
in
mov
sbb
mov
test
push
mov
mov
outsl
push
lods
and
adcb
xchg
inc
or
push
xchg
inc
loopne
xor
sub
aad
mov
xchg
or
push
sub
bound
testb
hlt
andb
rcrb
in
fadd
lea
mov
rolb
sar
repz
mov
jl
xchg
out
pop
add
and
push
cli
scas
add
rcll
fbld
repz
or
shlb
lds
loopne
or
aaa
ret
imulb
mov
leave
test
sti
add
mov
ja
add
push
jg
mov
add
hlt
sbb
mov
push
dec
lods
add
lret
xor
push
inc
mov
gs
mov
jge
sbb
mov
rcrb
mov
add
ret
mov
dec
sbb
inc
pop
push
fnsave
mov
stos
mov
jl
jecxz
popf
cmp
lock
or
adc
lods
loopne
retw
loopne
sbb
jb
xchg
pop
inc
inc
enter
scas
add
pop
js
cwtl
ret
cmc
mov
inc
je
ficoml
push
mov
xor
push
mov
pop
or
jmp
pushf
xorb
or
test
jne
popa
arpl
push
inc
aam
or
addb
movsl
push
pop
lahf
adc
mov
es
adc
movsb
ret
add
orb
push
xchg
arpl
inc
push
lcall
add
hlt
sub
adc
xchg
pop
icebp
pop
inc
sbb
rolb
and
xlat
lods
cmpsb
mov
sbb
fistpll
inc
dec
xchg
and
cwtl
pop
test
jo
jmp
sahf
sub
jb
cmpsl
adc
push
rcl
lds
stos
lock
popa
inc
xor
sbb
cmp
sub
rcrl
inc
jle
pop
mov
rcrb
popw
adc
les
popf
cmp
and
cmp
or
daa
test
in
sub
mov
push
push
loopne
push
test
push
pop
sar
ss
cmp
sbb
or
in
mov
mov
js
add
dec
iret
jb
push
sbb
mov
adc
insl
sbb
sbb
mov
rorl
push
sub
not
lds
push
pop
push
testb
add
test
call
mov
dec
out
cmp
or
cmpsl
dec
mov
bound
outsb
mov
sub
std
sub
xor
repz
ret
push
insl
iret
dec
pop
ret
mov
inc
sti
cmc
mov
mov
pop
sbb
std
sub
cmp
test
pop
aaa
add
lret
test
shlb
mov
dec
xchg
add
or
outsb
sti
shrl
in
xor
sbb
mov
lcall
sub
xchg
aaa
jne
out
pusha
sub
call
push
les
dec
addr16
repnz
test
test
and
popa
mov
xchg
mov
adc
dec
imull
jb
filds
fidivrl
add
rclb
cmp
mov
mov
or
cs
lods
xchg
pop
je
subl
test
dec
stc
adc
out
push
test
cmpsb
adc
xchg
mov
push
roll
dec
sub
and
in
in
fadds
or
or
cmpsb
push
mov
jne
adc
or
or
and
ja
push
mov
hlt
push
or
sub
or
shlb
fsubrl
ss
fsubrl
jns
ljmp
sub
cmp
popf
fwait
pop
sbb
fimuls
jns
sub
xlat
jae
jl
pop
pop
loopne
jno
scas
xchg
pop
adc
sbb
sbb
xlat
lods
rorl
lds
lcall
test
push
push
or
mov
inc
out
sub
sahf
js
jb
lcall
gs
xchg
pop
lods
pop
roll
lret
xchg
shlb
mov
push
mov
push
jno
lods
jmp
or
lods
sar
addr16
xchg
mov
or
mov
out
popa
dec
sbb
in
in
cmc
xor
jp
cmp
dec
movsb
inc
roll
and
sub
mov
pop
add
sbb
inc
xchg
mov
das
fdivp
pop
inc
cmpsb
shlb
pushf
pop
xchg
mov
arpl
or
xor
xchg
push
ja
enter
jo
mov
movsb
or
pop
mov
cli
ret
xchg
or
aaa
test
cld
rorl
sub
or
xchg
lret
bound
and
nop
cwtl
ds
or
lock
mov
rol
subb
nop
sbb
ret
mov
or
dec
insb
xor
sbb
xchg
pop
stos
fsubs
jg
out
stc
inc
pop
bound
mov
cmp
adc
adc
addr16
jp
fadd
push
push
cltd
adc
push
leave
xchg
push
push
out
std
adc
or
xor
mov
xor
fdivrl
test
insb
sti
dec
mov
in
push
sub
mov
add
and
sbb
inc
mov
pop
sbb
divb
movsb
jb
fs
xchg
stos
pop
xor
sub
cmp
mov
cmp
jb
push
pop
cwtl
pusha
stos
cmpsb
pop
adc
fbld
subl
dec
shll
lds
and
xlat
push
or
sub
aam
lock
out
and
loop
orl
jmp
adc
gs
pop
push
outsl
mov
xor
mov
dec
js
rorl
pusha
sbb
movsb
gs
lds
push
scas
out
inc
sub
add
push
in
cmp
aad
rcrb
test
pop
mov
or
xchg
jg
mov
xchg
mov
ja
outsl
cs
in
pop
push
rcr
dec
cli
and
lock
or
adc
clc
xor
jmp
into
imul
jne
pop
out
cmpsb
ljmp
cmp
inc
out
xlat
mov
fs
add
addb
jo
das
stos
or
dec
mov
mov
cmp
orl
adc
sub
or
xorl
movsl
add
pusha
cmp
mov
sub
add
std
mov
loope
push
mov
mov
mov
jg
nop
mov
jae
or
xor
idiv
dec
mov
div
scas
adc
pop
pop
adc
sub
stos
lods
push
dec
xor
and
adc
jg
test
outsl
jmp
out
rolb
mov
arpl
jnp
push
pop
lahf
rcl
lods
jne
mov
sbb
clc
dec
scas
sub
mov
sub
mov
mov
or
test
cmpsl
or
imul
add
in
jge
lock
push
push
sub
cli
or
sbb
imul
cmp
imul
and
pop
or
pushf
cmp
mov
adc
push
loope
sbb
fisttpll
inc
pop
or
push
dec
std
dec
lods
push
stc
mov
mov
loop
push
pop
or
es
xchg
xor
adc
xor
adc
aas
push
dec
nop
rolb
lahf
loopne
insb
fcoms
movsl
add
sbb
rcrb
ja
dec
nop
sbb
lcall
xchg
mov
fcmovb
xchg
sbb
subl
adc
movsb
mov
sub
and
roll
jle
cmp
shll
stos
imull
roll
mov
addb
mov
xchg
mov
adc
dec
cmc
mov
or
adc
sahf
mov
test
imul
pop
mov
imul
int3
pusha
inc
xor
mov
outsl
loopne
popf
add
adc
movsb
mov
cmp
adc
cli
jg
and
pop
das
fincstp
or
sbb
push
jmp
xorl
test
cli
jl
sub
flds
push
insl
or
das
push
xchg
fidivrs
ds
loop
xor
adc
or
call
out
adc
aam
ljmp
stos
or
negl
cmp
xchg
test
movsl
mov
inc
adc
mov
mov
sub
mov
mov
push
ret
cmp
ja
dec
je
jae
fwait
clc
mov
shl
mov
ret
inc
pop
lret
loope
or
or
fsubr
inc
push
les
int
stos
mov
sbb
popf
cmpsb
push
push
jne
or
popl
mov
fs
or
push
popa
ljmp
push
ja
les
lret
add
push
bound
mov
lock
pop
jl
cmpsl
test
in
add
dec
movsl
add
or
push
fwait
mov
dec
sbb
sub
sub
outsl
xchg
inc
push
xchg
test
mov
lcall
push
arpl
pop
jmp
push
pop
sbb
lret
or
mov
fdivrl
hlt
fwait
mov
lret
mov
sarb
xor
shll
jbe
xchg
pop
lods
jb
rclb
inc
lret
jne
xchg
pop
pop
add
add
iret
xchg
loope
or
xor
shrb
mov
xchg
test
jne
sub
mov
adc
push
sbb
dec
hlt
pop
xchg
pop
arpl
test
add
sub
push
push
push
js
and
imul
xorb
xchg
sbb
stos
push
lret
loopne
and
scas
mov
mov
and
or
xchg
pop
call
pop
inc
xchg
fimull
mov
mov
test
dec
shll
adc
inc
sub
inc
sti
shrl
jp
and
outsb
in
fisttpll
fcomps
push
aam
mov
xor
roll
es
mov
fs
jne
loop
dec
pop
repz
pop
imull
sbb
mov
sbb
push
mov
add
mov
lret
sbb
aad
mov
or
jns
dec
scas
inc
or
rcrb
mov
repnz
pop
push
cmp
adc
cs
mov
sbb
subb
cli
or
push
and
xor
push
dec
loop
xor
push
or
leave
xorb
adc
cmp
scas
mov
pop
fmull
cmp
xor
xor
xlat
fidivrl
cmpsb
sub
sbb
xchg
sub
and
pop
dec
add
mov
inc
cmp
insb
push
test
scas
inc
adc
sbb
xchg
stc
inc
add
mov
test
push
sbbb
pop
push
adc
or
iret
xchg
xor
js
roll
pop
pop
iret
pop
sub
insl
lods
dec
popf
mov
and
sbb
cld
mov
xchg
sub
loopne
test
loopne
xor
mov
jne
xor
pop
fwait
out
jnp
aam
mov
mov
mov
or
lret
mov
xchg
inc
mov
iret
push
es
gs
xchg
mov
sub
xchg
add
push
fnstsw
and
notl
jl
shll
xchg
or
das
pop
int
pop
enter
aam
sub
dec
popf
mov
cs
decb
adc
add
das
adc
mov
sbb
jge
sbb
push
mov
lods
orb
mov
adc
in
pop
mov
insl
push
repnz
xlat
negb
movsb
bound
popa
sbb
push
xchg
add
subb
and
stos
pop
push
ret
jo
add
add
jne
and
xor
xchg
and
in
push
popa
dec
push
movsb
pop
sbb
xor
ret
ja
push
jne
xchg
and
in
call
test
pop
hlt
lret
outsb
sub
lods
test
add
or
cmpsb
xchg
adc
jecxz
idiv
int
shll
push
neg
xchg
scas
outsb
insb
test
test
clc
out
fstl
mov
ret
lret
idivl
cwtl
mov
sbb
and
or
cs
xor
jbe
stc
ss
push
es
loop
sbb
adc
out
and
push
mov
xchg
test
aam
mov
loop
sub
add
test
add
in
or
gs
into
mov
or
jl
pop
in
xchg
inc
mov
xchg
cmpsl
xchg
lret
fcompl
push
mov
mov
dec
mov
dec
cmpsl
and
cmpb
hlt
jno
sub
lret
xor
adc
mov
xchg
lahf
dec
les
dec
fs
sub
inc
imul
out
ret
sub
icebp
inc
fiaddl
xchg
bound
movsl
dec
adc
test
imul
lods
sbb
and
fimull
sbb
stos
sbb
jae
shl
cmp
lods
fwait
ss
test
or
jnp
jp
scas
ret
test
fistl
adc
adc
add
push
cmp
dec
lds
mov
sub
jecxz
mov
pop
push
dec
imul
aam
cs
stos
mov
js
xchg
mov
push
jmp
daa
mov
rcrb
sub
or
hlt
mov
aam
les
and
fimull
pushf
test
jp
or
mov
jg
pop
in
test
imul
cmp
dec
jbe
dec
push
fwait
mov
and
pop
ljmp
stos
out
lods
mov
mov
das
int
jo
mov
mov
push
fildl
mov
out
hlt
in
addb
add
jb
mov
lret
ds
movsb
sub
je
add
add
dec
jl
add
je
out
mov
leave
pop
mov
stos
movsb
push
jecxz
pop
inc
or
and
adc
mov
loop
dec
xchg
pop
xor
gs
push
out
hlt
in
add
and
movl
andb
mov
stos
cmp
int3
and
push
xchg
cwtl
dec
and
pop
lds
cmc
pop
xor
xor
in
pop
rolb
mov
mov
xchg
cld
jecxz
lea
lret
aas
push
push
incl
sub
loopne
lcall
add
stc
jp
div
mov
mov
in
cli
dec
sahf
push
mov
or
jb
push
mov
lret
aaa
les
daa
pop
jle
not
adc
les
stos
shlb
sbb
dec
inc
adc
adc
ret
data16
or
xchg
mov
inc
sbb
push
mov
cmc
insb
out
push
jmp
adc
xchg
in
daa
rolb
add
pop
cmp
add
pop
mov
and
fiaddl
jge
pop
xor
jmp
pop
pop
mov
mov
cmpb
sbb
fadd
fistps
fnstenv
rolb
mov
lret
outsb
sub
cmp
jecxz
fwait
jp
push
dec
mov
scas
mov
cmpb
in
loop
test
jne
push
push
fcomip
mov
mov
popa
rcrb
or
popa
adc
mov
ret
pop
xchg
inc
and
push
cmp
and
psubsw
pop
or
add
call
sub
or
shlb
sub
sub
jbe
push
dec
jp
or
je
das
clc
mov
pop
ss
mov
jo
and
or
pop
cwtl
das
xchg
aad
lret
xchg
mov
cmc
pushf
mov
xor
or
ljmp
push
lea
push
shll
ja
pop
rcrl
adc
add
sub
mov
mov
test
out
or
loopne
pop
in
jae
xchg
mov
or
mov
les
add
xor
cmpsl
addr16
stc
fcomps
cmpsl
sub
xor
es
push
push
pushf
jmp
add
jbe
and
or
sub
add
add
pop
mov
movsl
out
sub
in
pushf
test
hlt
lds
xchg
and
inc
adc
lea
fsubr
divb
fnstenv
lods
das
bound
mov
dec
out
jns
jbe
adc
jb
lock
sahf
lock
in
inc
iret
cmp
clc
lret
roll
sbbb
dec
mov
pop
ret
push
daa
enter
orb
sub
rorb
jo
and
dec
pop
cmp
xlat
sbb
xor
inc
sahf
adc
jo
lret
and
nop
mov
mov
daa
movsb
dec
pop
ljmp
int3
dec
lods
mov
test
adc
js
fiaddl
lds
push
lods
dec
lret
jae
dec
add
rorb
inc
or
lea
ljmp
inc
mov
out
aas
ds
cs
ss
push
xor
adc
nop
punpcklbw
push
pop
xchg
push
xchg
jbe
repnz
mov
aaa
test
add
fwait
ss
dec
mov
or
pop
xor
mov
addr16
sbb
add
gs
mov
fmul
clc
mov
ret
add
jl
mov
stc
scas
sbb
repz
test
inc
mov
movsb
jns
jns
add
outsb
sub
sub
xchg
inc
adc
je
lods
lret
popf
cmp
ret
xchg
or
fisubl
dec
dec
lret
mov
sub
sub
and
mov
adc
adcl
jl
add
xchg
icebp
test
fcmovnbe
mov
push
push
addl
inc
push
inc
cmp
add
out
stc
push
xchg
and
test
dec
cwtl
xor
mov
std
mov
xchg
imul
add
fldenv
add
iret
jbe
insb
stos
xor
fiadds
mov
bound
inc
fwait
test
test
loop
cltd
or
test
pop
add
mov
sub
les
push
icebp
and
inc
adc
dec
and
mov
cmpsb
rclb
loope
insb
adc
push
andl
rclb
sub
movsl
or
sub
test
imul
or
and
dec
push
test
xor
mov
inc
sbb
jmp
jns
jo
insl
fnstcw
sbb
dec
mov
je
inc
or
xchg
imul
mov
push
push
lcall
scas
pop
adc
add
inc
and
pop
lret
es
ret
lods
mov
lret
roll
jb
xchg
sbb
dec
mov
mov
sub
adc
movsb
ss
xchg
mov
and
sub
push
push
fldenv
loop
adc
pop
pop
and
mov
or
test
mov
lds
sbb
push
mov
xchg
or
inc
pusha
jle
mov
lods
push
cmpsb
xchg
shl
outsl
adc
ja
cltd
loopne
les
subl
mov
mov
leave
mov
jmp
pop
leave
test
fs
sarb
or
fwait
ljmp
cld
inc
and
fcoml
movsl
loop
data16
loopne
cmc
mov
inc
mov
mov
xchg
cmp
pop
les
mov
lahf
sub
xchg
enter
dec
push
inc
fadds
mov
cmp
cli
je
dec
ret
js
inc
or
fnstsw
mov
or
xlat
outsl
pop
les
jge
inc
xor
bswap
enter
inc
sti
push
jno
and
fidivrs
fsubl
mov
push
fisubrs
sbb
and
inc
les
pop
xchg
leave
lods
inc
shlb
int3
shrl
test
cmp
adc
sbb
adc
aas
or
dec
add
sub
mov
sub
rcr
and
cwtl
mov
adc
and
cmp
xchg
dec
lret
adc
in
cmp
inc
dec
mov
inc
sbb
aaa
shr
push
add
mov
hlt
mov
mov
xchg
pop
clc
add
out
movb
shld
cmp
jnp
stos
mov
fisubl
sub
adc
mov
loopne
lock
orl
mov
adc
in
mov
das
shrb
movsb
push
adc
jnp
adc
leave
ret
movd
cmpsb
icebp
jmp
xchg
fisttps
jle
lret
inc
mov
adc
ret
or
pop
stos
adc
aam
and
out
sbb
push
test
in
leave
popf
sub
pop
xor
xor
mov
pushf
adc
mov
andl
test
xor
movsl
or
into
xlat
xchg
or
cmp
mov
push
dec
and
mov
and
adc
add
lret
ret
dec
fwait
sub
push
dec
adc
sub
or
jp
mov
or
mov
mov
xchg
mov
add
cmp
inc
loopne
loope
iret
daa
push
andb
scas
sub
mov
adc
mov
sub
stos
adc
mov
inc
inc
mov
cmpsb
shlb
test
inc
cmc
or
adc
inc
outsb
xchg
mov
cmp
loopne
and
cmp
mov
lods
subb
pop
add
fs
mov
inc
cmc
mov
xor
mov
jne
sbb
mov
mov
loope
loope
loopne
sub
jns
push
outsl
loope
mov
scas
mov
lea
test
inc
and
mov
outsb
xor
aas
or
fs
dec
add
mov
adc
sbb
call
ficompl
lds
lods
push
stos
dec
cmp
in
push
sub
popa
fistpll
mov
stos
and
ja
rolb
mov
cld
test
cmc
out
in
cmp
pop
cmp
add
inc
fucomp
cmpb
and
mov
push
mov
dec
mov
or
mov
test
das
xchg
test
adc
in
sbb
push
stc
cmp
imulb
je
hlt
and
sbb
hlt
outsl
sub
in
test
inc
mov
pop
inc
fisttpl
dec
pop
dec
jecxz
fldenv
lods
pop
xlat
mov
jle
mov
mov
cmp
xor
cmp
movsl
xor
sbb
into
sbb
ret
pop
and
arpl
inc
cmp
xchg
call
dec
mov
shlb
ljmp
cmpsb
adcb
outsb
add
cli
stos
push
xchg
popf
lods
push
cltd
mov
xchg
test
adc
mov
or
inc
jns
push
mov
sbb
out
ss
lods
add
aad
jno
fs
arpl
nop
xchg
or
dec
movsl
xchg
push
add
stos
and
xor
cmpb
ret
xchg
lahf
test
mov
frstor
jmp
shlb
xorl
enter
push
inc
jp
cmc
or
mov
dec
inc
mov
movsb
fwait
pop
mov
dec
adc
cmc
push
mov
fwait
imul
add
lods
stos
cwtl
inc
mov
mov
test
or
push
pop
xchg
lret
rcll
mov
cltd
movsb
or
pop
mov
shrb
mov
insl
pop
push
push
inc
and
data16
jl
push
push
mov
push
push
nop
cmp
pop
mov
shrb
mov
sub
xor
je
xor
mov
adc
adc
push
mov
lret
lret
inc
aas
out
jae
gs
test
nop
mov
xor
adc
enter
pushl
mov
cmp
notl
xor
sarb
jno
dec
pusha
mov
in
mov
out
shrl
in
pop
jne
xchg
and
shrl
jo
xchg
pushf
sub
xchg
jb
sub
in
push
push
movsb
mov
xchg
inc
mov
push
push
jmp
and
sbb
icebp
or
push
jne
outsl
sbb
es
add
loop
pop
adc
mov
add
dec
xor
add
xchg
adc
adc
test
negb
cli
loopne
push
or
push
add
adc
fsubl
pop
add
movsb
sbb
and
sbb
shrb
or
and
mov
mov
sub
pushf
jb
add
aam
fistl
jge
out
jae
mov
push
out
popa
xchg
dec
xor
sub
inc
lahf
fwait
cli
lea
enter
shrb
mov
adc
into
int
icebp
and
mov
sub
jb
loopne
orl
lret
and
add
pop
dec
lahf
vpmadcsswd
push
adc
aad
xchg
ss
or
jmp
jae
add
adc
and
inc
cmp
jb
andl
push
add
mov
xchg
jge
or
sbb
aam
xchg
xor
jecxz
xchg
scas
push
inc
inc
jp
mov
in
mov
pop
nop
dec
inc
push
adc
and
add
data16
jae
aad
scas
cmp
inc
pop
lock
cmpsb
jle
leave
mov
cmpsl
sub
mov
js
fnstsw
cmp
inc
mov
cmpsb
dec
push
push
fimull
int3
push
jge,pt
pop
cmp
dec
shlb
mov
popa
sbb
sbb
xor
mov
push
push
insb
xchg
adcb
repnz
outsb
cld
inc
shlb
test
daa
popa
and
xchg
push
call
sbb
int3
mov
cmp
out
int
sbb
push
dec
mov
push
push
in
xchg
and
or
sbb
mov
sub
mov
sub
repz
push
mov
andb
test
adc
ljmp
dec
and
and
jmp
sub
push
ja
fcompl
cmp
xor
sbb
sbb
mov
cmp
mov
mov
mov
inc
push
mov
xorl
or
sbb
xor
mov
inc
jnp
clc
pop
inc
mov
jge,pt
push
pop
push
hlt
and
inc
lock
push
push
push
sarb
dec
lds
mov
sbb
sub
idivl
cs
jns
xlat
out
subb
loopne
loopne
add
stc
loope
or
push
fists
xlat
mov
pop
loop
mov
xor
fs
scas
ret
jmp
rcrl
js
pop
mov
sub
mov
inc
push
insl
cmp
mov
popa
xchg
mov
sub
movl
push
rorb
or
push
xchg
clc
pop
push
pop
xor
fimull
std
data16
pop
pop
rol
in
xor
add
sub
stos
xchg
inc
sti
push
sub
push
inc
push
adc
out
sub
xor
stos
lods
mov
lret
ljmp
mov
bound
fistl
addb
aad
pop
pop
add
mov
jae
mov
mov
adc
inc
jl
orl
or
push
or
mov
ss
add
add
mov
or
imul
inc
lret
repz
call
jecxz
js
push
out
jmp
mov
and
push
outsl
ljmp
pop
test
and
dec
cmpl
inc
or
pop
mov
mov
arpl
rcrb
fisubrl
inc
or
enter
or
dec
xchg
movsb
sbb
inc
jle
push
fwait
jb
mov
movb
sbb
and
test
mov
mov
pushf
mov
and
in
jne
cmpsb
and
mov
jmp
cmp
pop
mov
adc
and
lahf
and
mov
insb
mov
stc
xor
movsl
sar
ret
rcrb
sbb
xchg
inc
sbbb
xchg
mov
in
sub
lock
sbb
mov
sahf
icebp
fsubrl
nop
inc
jno
push
sub
dec
rclb
push
lock
xchg
ja
test
sub
mov
cmp
cmc
in
xlat
adc
in
adc
xchg
add
cmp
aad
iret
in
or
push
std
out
inc
dec
lahf
pop
shl
dec
scas
inc
rcll
xor
mov
jne
cvtpi2ps
gs
testb
cld
les
jne
xchg
adc
dec
mov
clc
sub
and
insb
pusha
sub
mov
xchg
cmp
jae
cmp
xor
add
lea
jp
xchg
cltd
pop
push
dec
out
jo
xchg
xchg
add
std
lcall
movsl
jle
xor
test
pop
mov
add
cmp
or
xor
mov
or
cmp
sahf
into
mov
xchg
mov
pop
ret
pushf
leave
inc
mov
push
adc
ss
or
cs
shll
scas
add
and
jl
in
add
arpl
or
add
sub
loop
andb
fstps
mov
cmp
outsb
hlt
iret
fiaddl
mov
inc
dec
or
rcll
sub
xchg
negb
repnz
lcall
ja
dec
shl
insb
inc
push
push
inc
in
push
aam
sbb
int3
imul
pop
cmovnp
push
and
xor
enter
cwtl
push
ss
test
mov
jne
mov
out
push
data16
adc
add
push
lea
sbb
inc
int3
dec
scas
orl
dec
xchg
repz
mov
test
aas
pop
loop
adc
aaa
lea
mov
cmp
arpl
popf
mov
jmp
dec
inc
push
ja
iret
sub
mov
mov
lret
sub
stos
aas
aas
push
push
mov
aam
xor
inc
and
adc
adc
sbb
test
inc
adc
push
fnstcw
pop
cltd
call
xchg
lret
in
mov
mov
mov
outsb
iret
repnz
out
push
mov
xchg
data16
xchg
mov
mov
cwtl
jg
push
adc
push
fwait
test
adc
inc
push
imul
pop
movsl
scas
mov
mov
push
call
mov
lcall
scas
adc
mov
ljmp
test
aad
fistpl
dec
and
xchg
sarb
push
xlat
outsl
jl
push
adc
mov
mov
mov
fs
das
jbe
xchg
ljmp
push
popa
push
inc
xchg
popf
jl
xor
movsl
jl
xchg
je
add
push
fidivs
repz
and
pop
jb
sub
jle
cmp
sbb
mov
arpl
shrl
mov
add
xor
mov
ljmp
shll
hlt
mov
orb
subl
add
repnz
dec
lret
push
sub
mov
push
push
inc
subl
insl
mov
pop
enter
inc
enter
sbb
xchg
cli
adc
push
sbb
lock
nop
dec
sbb
mov
add
test
inc
mov
ljmp
push
sbb
or
inc
sub
lret
out
sub
xor
int
ds
outsl
testl
shrb
jg
inc
sub
jo
add
push
pop
add
movsl
lret
push
mov
aas
fwait
xor
push
test
sbb
fistpl
pop
pushf
pop
jno
roll
xchg
sub
mov
inc
push
mov
and
sub
mov
outsl
mov
neg
push
mov
clts
mov
aad
decl
mov
xor
insb
call
cmp
cmp
sub
and
or
fildl
and
pusha
out
shll
imul
sub
cmp
adc
lahf
ret
push
lea
stc
test
xchg
xor
xchg
imul
fidivl
inc
or
lret
push
or
mov
divl
mov
push
cmpsl
xorl
and
call
das
pop
mov
in
mov
imul
les
xchg
int
push
jg
test
mov
clc
mov
xor
call
loop
lock
cmp
pusha
jnp
outsl
inc
lods
add
mov
test
adc
pop
add
lds
imul
ljmp
sti
dec
divl
add
push
stos
mov
xchg
sbb
out
adc
cmp
push
inc
xchg
add
jb
jb
aaa
dec
pop
mov
sbb
pop
jns
pop
in
adc
dec
fwait
and
inc
fbld
xor
test
pop
sti
mov
or
or
movsb
dec
test
add
pop
mov
outsl
ja
repnz
aad
daa
ret
jg
xlat
xor
adc
repz
push
or
mov
movsb
pop
into
or
mov
cmpsb
into
add
sub
rclb
adc
ja
xchg
call
fisubl
mov
add
sbb
push
stos
jge
ficoml
repnz
xor
xchg
je
int3
jl
mov
test
lods
sahf
aas
sbb
pop
sub
cmpb
test
add
adc
push
cwtl
pushf
jg
aaa
or
mov
jge
push
mov
subl
inc
mov
sbbl
lret
add
mov
push
adc
and
es
ljmp
lret
ret
cmp
data16
cmc
lcall
adc
xor
or
and
lods
adc
into
pop
sub
pop
fistl
sub
aas
jnp
decl
cmp
bound
lret
scas
insl
or
jecxz
and
pusha
adc
cmp
mov
call
insl
orb
add
push
adc
adc
cs
adc
subl
cmp
arpl
ret
in
dec
cmc
adc
mov
sub
jbe
sbb
add
ret
mov
inc
inc
or
mov
xchg
push
cli
xchg
push
mov
outsl
adc
xchg
push
inc
jne
inc
pop
iret
push
xchg
rcr
adc
add
mov
popa
pop
outsl
pop
subl
xchg
loope
xchg
inc
or
lea
lcall
pop
test
inc
jl
movb
mov
push
pop
cmp
outsl
mov
loope
bound
inc
shlb
sbb
dec
adc
cs
in
dec
inc
inc
loopne
sub
scas
mov
dec
test
mov
sub
sbb
xlat
and
lods
rorb
adc
sbb
dec
sbbl
cmpsb
mov
fs
mov
and
stos
mov
loopne
and
push
sub
and
jns
sub
sbb
int3
adc
popa
jb
and
mov
mov
test
stos
jmp
fists
insl
imul
es
test
sub
clc
or
in
mov
std
dec
popa
iret
mov
push
js
add
nop
cltd
cmp
xor
xor
cmpsl
popf
xchg
adc
push
cmp
test
sub
loopne
sub
and
dec
test
fmuls
push
in
mov
leave
dec
fiadds
rolb
fidivl
pushf
stos
or
jecxz
lock
lret
add
jne
jge
add
rcl
mov
call
jle
sbb
or
mov
xor
aam
or
insl
fwait
pop
jae
or
fiaddl
add
in
mov
insb
out
fstp
imul
fidivrs
mov
xor
scas
mov
xorb
pushf
sarl
test
sbb
sbb
loopne
mov
adc
sub
aam
mov
imul
xor
cli
mov
test
mov
stos
out
in
inc
clc
addr16
cmp
jo
in
pop
in
ret
icebp
push
xor
mull
push
inc
inc
rolb
popa
lcall
xor
mov
jmp
repnz
jne
push
xor
mov
lods
sbb
rorb
xlat
imul
stos
push
rcr
stc
jge
push
or
filds
ja
push
clc
xchg
fsqrt
inc
adc
movsl
dec
jmp
add
add
cwtl
sub
lods
push
std
adc
inc
adcl
and
nop
xchg
inc
dec
sub
xchg
inc
cltd
inc
and
inc
sub
lahf
push
mov
movsl
inc
test
stos
inc
sbb
lods
inc
mov
inc
scas
add
inc
push
inc
push
mov
enter
lcall
sbb
xchg
sbb
push
sub
push
dec
push
loop
inc
push
push
xor
push
repz
rcl
xor
cmp
cmp
push
notl
push
aad
push
clc
adc
or
popl
sub
call
fwait
ss
in
adc
xchg
mov
push
stc
sub
cmp
in
lahf
stos
fadd
add
add
or
cmpl
lods
mov
loopne
icebp
xor
or
hlt
jb
out
imul
push
xchg
mov
mov
xchg
xchg
sbb
ret
js
and
lcall
daa
xor
xorb
adc
sbb
mov
jge
nop
and
das
ds
push
xchg
sbb
dec
add
xor
sbbl
mov
enter
or
or
push
jne
je
adc
xlat
push
insb
jl
pop
mov
sbb
mov
movsb
or
das
je
scas
sub
pop
cmpl
sub
bound
sbb
add
pop
bound
jg
enter
jle
fbld
shrl
inc
aad
or
cmc
mov
inc
les
cmp
cmp
inc
test
jne
repnz
xor
jle
int3
mov
jns
inc
ds
inc
push
and
cmp
scas
push
and
xchg
imul
clc
push
cmp
xchg
push
cmp
xlat
mov
rcrb
mov
popa
jg
mov
mov
sbb
push
sub
push
xchg
add
or
sar
cld
mov
mov
aad
rcr
xchg
sbb
mov
jmp
adc
loope
pushf
mov
jmp
stos
dec
push
int3
test
and
mov
cld
adcb
ret
xlat
movsl
and
mov
or
push
sub
jne
dec
or
pop
ss
popf
lret
mov
xor
shlb
adc
test
dec
arpl
inc
mov
dec
xor
mov
xor
add
cmc
jecxz
dec
insb
push
xchg
scas
fwait
dec
and
add
loop
cld
mov
lahf
xor
sbb
mov
cltd
ret
pusha
cmp
je
aad
sbb
add
fistl
add
jnp
incb
adc
idivl
subb
fs
orb
imul
mov
ja
in
sub
add
sti
or
adc
lds
add
repz
and
test
aas
pop
dec
mov
arpl
addl
cmpsl
mov
mov
dec
inc
dec
lea
sahf
mov
sbb
cmpsb
inc
and
in
gs
adc
mov
imul
push
mov
lods
mov
cs
lahf
xchg
push
std
push
push
out
xchg
push
mov
and
adc
mov
call
sub
pop
cmp
aad
mulb
scas
lret
fisubrl
dec
add
adc
jl
cmp
lret
add
arpl
adc
into
adc
or
shrb
mov
mov
push
xchg
and
popf
xor
inc
fiaddl
loop
scas
xor
add
xchg
jne
movsb
xor
cmp
add
iret
out
or
les
adc
and
sub
lock
es
aad
mov
mov
mov
dec
repnz
sub
xchg
pop
lods
jp
adc
xchg
cmp
inc
fisttps
fucomp
outsb
dec
pop
jbe
js
xchg
pop
lods
mov
xor
jg
dec
pusha
lea
sub
mov
inc
jmp
jne
mov
jno
xor
sub
sub
shll
add
ficoml
inc
jns
sbb
push
je
out
adc
inc
add
mov
gs
lahf
and
dec
pop
mov
mov
cmpsb
bnd
or
push
or
xchg
mov
int3
sub
pop
and
aad
jo
push
mov
mov
dec
mov
imul
out
push
out
mov
test
jg
pop
scas
pop
lds
xor
clc
pop
mov
mov
cmp
clc
push
lods
push
test
mov
gs
dec
add
je
sub
jl
push
xorl
out
cld
rcr
add
add
jp
xchg
loop
gs
sub
sbb
and
iret
xchg
lock
orb
icebp
xchg
push
mov
sbb
ljmp
scas
daa
pop
leave
or
ljmp
iret
pushf
repz
mov
jp
pop
out
daa
cmp
sbb
orl
scas
orl
push
jne
inc
and
adcb
das
push
push
dec
dec
lock
or
call
xchg
cs
cmp
and
je
sbb
cld
inc
mov
lcall
add
inc
push
nop
dec
jno
pop
push
shl
mov
jne
in
push
mov
insl
int3
pop
pop
cmp
sub
fs
mov
cwtl
aad
cmc
push
mov
cmp
call
leave
dec
mov
movl
sbb
mov
push
out
sub
andb
push
cmp
add
fcmove
and
xchg
sub
xchg
dec
adc
cltd
xor
pop
test
add
loopne
jecxz
sbbl
scas
dec
out
pusha
lret
jmp
sub
stc
adc
test
mov
sbb
out
lods
dec
xor
popf
jae
orl
adc
scas
adc
int3
cmp
push
lcall
or
push
test
dec
cmp
aad
in
loopne
mov
mov
cmpsl
and
aam
inc
scas
sub
add
ja
add
orb
in
jbe
sub
pop
les
xchg
je
in
cmpsb
add
rclb
pop
add
pop
pop
mov
gs
xlat
test
sub
mov
sbb
and
mul
xorl
in
or
push
lea
stos
xor
out
mov
lret
test
in
sub
jecxz
pop
addr16
cmp
cmp
hlt
data16
mov
ljmp
mov
ja
adc
lock
and
cmpsb
adc
xor
in
mov
add
sub
sbb
fistl
subl
mov
out
loop
dec
icebp
cs
add
xchg
insl
xchg
cmc
push
movsb
xchg
or
mov
aas
jl
cmp
lret
ffreep
cmp
lahf
xor
sub
or
inc
faddl
in
adc
and
wrmsr
rcrb
jl
iret
call
sar
jmp
test
mov
loope
mov
inc
cmp
repnz
les
mov
inc
mov
or
test
mov
xor
add
sub
sub
cmpsl
cmp
pop
insl
or
xchg
out
clc
inc
dec
pop
dec
push
jl
pop
call
adcl
fdivrp
xor
mov
mov
pop
popa
fisttpl
sbb
add
les
ret
mov
xchg
dec
adc
mov
mov
or
dec
scas
mov
push
cli
jo
ds
outsl
jnp
aas
ss
push
into
dec
out
mov
push
jp
inc
aas
icebp
push
xchg
dec
out
iret
test
insl
enter
jmp
cmp
dec
adc
jge
frstor
mov
sub
sbb
pop
mulb
push
add
pop
mov
popa
pop
mov
mov
push
dec
scas
and
adc
inc
xor
dec
mov
aas
sbb
cli
mov
cmp
aam
add
fidivl
and
dec
or
push
aas
lds
arpl
movsl
lods
push
add
add
pushf
jmp
repnz
sub
mov
roll
test
xor
es
pop
pop
gs
fwait
loope
cs
jge
pop
movsl
sub
cmpsb
sub
add
push
ret
xor
mov
add
pop
iret
mov
mov
std
cmp
sub
loop
mov
int
cmp
adc
rorl
movsb
sbb
or
or
iret
mov
pop
fabs
jb
sti
imul
xor
pop
cli
xor
add
push
roll
call
inc
jbe
inc
lea
adc
mov
stc
lret
adc
pop
adc
adc
cmp
arpl
imul
sub
inc
data16
stos
sti
cmc
push
dec
out
push
cmp
xor
lea
sbb
pop
push
inc
sbb
dec
sbbl
data16
insb
mov
lods
add
in
mov
mov
xor
xor
mov
cld
fwait
push
adc
or
or
dec
adc
mov
fistpl
jmp
mov
movnti
loope
cmp
cs
push
mov
iret
and
ret
roll
cli
sub
sub
cmp
cmp
loope
add
xchg
xor
push
xor
in
enter
sbb
push
push
sub
xor
scas
cs
mov
ljmp
jno
lods
adc
adc
mov
test
in
in
push
movsb
xor
jle
xchg
ret
sbb
sbb
inc
dec
jg
jae
mov
pop
ljmp
sbb
sti
or
ljmp
cmp
fidivrl
daa
jns
aam
add
mov
or
lret
xchg
lcall
das
mov
cmc
cmc
ret
addr16
xchg
lret
testl
and
or
nop
mov
xchg
xchg
xchg
pop
jmp
ja
iret
pop
cltd
movsb
sub
sbb
push
dec
in
push
xchg
int
mov
fbstp
cmc
in
sbb
fsub
out
or
je
or
cmp
lea
mov
inc
xor
test
inc
or
xchg
testl
or
or
push
ja
sbb
sbb
pop
mov
mov
fst
gs
jae
scas
mov
sub
xor
movsl
push
les
or
test
scas
into
cmpsb
pushw
jecxz
add
lea
in
inc
inc
inc
and
fcomps
mov
hlt
movsb
nop
xor
aaa
fsubrp
inc
mov
cmp
cs
sbb
push
xchg
push
shlb
push
es
dec
push
push
and
sbb
cmp
cltd
add
test
scas
push
add
popf
fists
mov
xor
push
mov
xor
daa
dec
rcrb
jne
jp
xchg
imul
push
add
mov
addr16
adc
ret
mov
or
iret
add
lret
cmp
addr16
dec
mov
popa
cmpsl
rclb
pusha
test
mov
lods
ljmp
cwtl
jns
add
push
inc
xor
dec
out
fiadds
das
pop
mov
scas
lahf
mov
mov
stos
push
mov
inc
pop
lret
in
cs
jmp
mov
je
jge
call
mov
inc
sbb
and
pop
jmp
or
pop
xchg
je
adc
xor
add
push
dec
pop
pop
jg
fidivrl
test
push
inc
dec
repz
jmp
mov
xchg
mov
adc
mov
add
out
test
fxch
push
vpmadd52huq
aaa
leave
shrb
sub
push
sti
xchg
sarb
lret
inc
sub
in
ficomps
jb
xchg
dec
jns
mov
xchg
inc
inc
shr
sbb
push
xor
pop
push
cmp
shrl
mov
push
cmp
cmp
ficomps
in
sbb
sbbl
push
rclb
add
bound
rcll
jg
je
mov
sub
xchg
dec
imul
test
pop
lods
andl
sbb
xor
pop
dec
ss
push
outsl
push
add
xchg
mov
xor
mov
xor
cmpsl
mov
cwtl
mov
lret
les
push
or
rcl
sbb
lret
sub
lcall
jae
lods
mov
push
sbb
push
pop
xor
mov
sub
sbb
sub
or
cld
loope
scas
add
dec
pop
push
push
cmpsl
or
xchg
lret
cmc
leave
xor
movsb
nop
pusha
xchg
or
pop
fs
mov
add
push
push
jb
imull
push
and
xor
add
jg
jg
test
adc
repnz
dec
mov
sbb
lcall
cmp
bnd
inc
shlb
out
std
dec
stos
add
mov
out
and
inc
xchg
sub
hlt
pop
inc
std
push
loop
lods
and
cs
pop
push
fdivr
stos
jmp
push
xor
push
push
fstps
fiaddl
jb
shrl
pop
in
mov
sti
ss
out
data16
out
jg
movsb
or
cmp
and
mov
push
pop
pusha
adc
bound
test
outsb
sbb
xor
mov
imul
subl
stc
mov
pop
cmp
jge
addr16
xchg
loopne
xor
push
mov
out
sarl
outsb
in
pushf
dec
das
adc
or
sbbb
inc
sbb
outsb
mov
push
jmp
xor
lods
aaa
scas
xchg
inc
movsl
inc
sbbb
scas
push
cmpsb
adc
fstl
inc
lret
dec
sub
or
xor
les
nop
decl
mov
inc
adc
stos
pushf
xor
insb
add
mov
mov
popf
push
cld
lds
xchg
add
dec
or
fildll
addr16
into
repz
out
test
sub
sbb
lock
cmp
add
push
jns
add
mov
adc
popa
or
mov
cld
xchg
push
ljmp
inc
jb
adc
xchg
sahf
insb
jecxz
xlat
jne
add
subb
jle
add
clc
jae
imul
test
mov
cmp
mov
sub
dec
inc
dec
shrl
mov
das
add
pop
inc
xor
popa
flds
mov
shll
add
or
jne
pop
mov
clc
dec
mov
imul
mov
xor
lea
adc
inc
inc
and
add
test
cmp
in
xor
sbb
push
adc
inc
dec
rorl
adc
push
fld
loop
scas
push
or
pop
test
sar
jo
es
dec
and
xor
scas
xorb
fists
pop
add
pop
add
enter
test
js
add
pop
sbb
cltd
or
inc
flds
leave
rorb
loopne
push
xor
sbb
shrl
cmp
dec
add
push
adc
dec
and
and
or
mov
add
dec
add
sbb
adc
jle
cmp
push
inc
cld
ds
inc
sub
pushf
scas
cs
sbb
arpl
xor
mov
xor
inc
decl
jne
xlat
or
sbb
out
sub
popa
push
lret
mov
xor
insl
and
add
aam
bound
pushf
sbb
mov
sbb
dec
adc
fldl
pusha
and
add
mov
or
mov
orb
lahf
or
mov
mov
inc
dec
adc
jno
into
adc
sarl
dec
sub
inc
popa
mov
loope
mov
pop
xchg
pop
sbbl
add
fs
loope
pop
les
jno
xor
js
xor
js
jmp
sbb
cmc
jb
ljmp
les
or
outsb
daa
repz
fadd
or
js
mov
aam
sub
aaa
loop
add
mov
data16
push
ret
ret
mov
xor
mov
xchg
sbb
dec
mov
int3
xchg
and
push
ljmp
sub
jmp
jge
mov
gs
insl
outsb
imul
jne
adc
push
dec
sbb
into
mov
ret
inc
fiadds
mov
les
subb
rorl
add
mov
je
and
xchg
sub
dec
nop
sub
inc
and
repnz
fs
fimull
and
inc
nop
ja
lahf
push
add
and
xchg
inc
loopne
mov
jae
adc
add
mov
mov
mov
lea
shll
cld
mov
mov
sub
outsl
sbbb
jmp
sahf
inc
cmp
push
xchg
out
test
adc
xor
loop
add
stos
shl
xor
insl
cmpsb
or
lcall
shll
test
decb
xchg
rorl
push
push
daa
adc
pop
xorl
ret
cli
or
adc
adcb
mov
mov
pop
movsb
int3
or
jbe
sub
arpl
mov
and
sbb
adc
ljmp
xor
inc
sbb
orl
aad
jp
inc
add
add
mov
xchg
xchg
lods
movsl
daa
adc
jo
or
xchg
inc
xor
scas
in
daa
out
dec
fcmovnu
mov
inc
push
xchg
inc
popf
or
push
and
aaa
cmp
fisttpll
and
aaa
sarb
test
in
dec
loopne
add
and
sbb
mov
inc
and
adc
mov
or
aam
mov
imul
pop
fwait
adc
inc
fistl
mov
xchg
push
xchg
fs
adc
or
mov
or
orb
xor
and
lods
lea
lea
bound
in
fists
dec
dec
insl
xchg
std
stos
sub
fbld
jp
pop
adc
movsb
aas
sbb
adcl
mov
mov
add
stc
dec
lock
loopne
dec
add
enter
pop
mov
mov
mov
mov
cli
shlb
jecxz
xor
or
aam
cmpl
pop
add
sub
push
or
push
xchg
mov
inc
add
pushl
xor
inc
sub
mov
pop
mov
adc
test
je
jno
dec
cmpsb
sub
add
sbb
jl
enter
lea
lea
shlb
ret
push
in
sbb
aam
mov
inc
data16
dec
push
sbb
add
push
loope
dec
xor
mov
loope
or
scas
mov
adc
cmp
add
movsb
outsb
or
push
and
xchg
out
add
xor
imul
rcrb
pop
add
jg
and
je
std
jmp
add
push
adc
xor
jmp
sbb
inc
push
sbb
mov
push
push
mov
push
xchg
fiadds
push
cmpsb
sbb
and
inc
fisubs
sub
idivl
movsb
mov
cmp
add
insl
inc
shlb
sub
jne
cmpsb
je
lea
mov
shlb
in
jmp
call
bound
sbb
aas
mov
xor
xchg
fs
mov
lods
lods
and
dec
adc
sbb
test
push
cmp
xor
xor
les
add
pop
enter
or
and
xchg
pop
xor
mov
and
cmp
sub
ret
xor
sahf
ret
shrb
loope
popa
mov
outsb
adc
push
and
push
enter
or
sarl
inc
pop
das
rorl
stos
adc
mov
pcmpeqd
incb
pop
ret
mov
inc
jno
enter
inc
push
cmp
into
fsubl
adc
popf
sbb
sub
shlb
dec
xchg
inc
jo
call
jo
and
sbb
lea
jno
xchg
outsl
and
jecxz
and
inc
mov
out
das
push
jns
int
inc
popf
enter
lret
inc
mov
inc
loope
outsl
mov
js
iret
inc
ja
jnp
inc
fisttps
mov
xchg
push
rorl
add
ja
mov
xor
push
pop
dec
add
les
les
inc
sub
xor
pop
into
inc
daa
je
iret
adc
mov
insl
mov
xor
push
jle
pushf
jns
js
and
or
sbb
add
jb
xor
jg
mov
mov
xor
addr16
pop
adc
shll
loop
adc
test
dec
cli
pop
sbb
adc
cltd
or
add
adc
mov
adc
cli
les
mov
push
lahf
cmp
xchg
or
aad
mov
jmp
pop
sahf
xor
sbb
mov
popf
shl
movsb
data16
or
imul
or
adc
int3
dec
lcall
cmp
inc
dec
adc
enter
es
pushf
popf
xor
int3
fistpll
mov
test
repz
scas
mov
dec
fadds
fdivrs
inc
sti
dec
xchg
mov
adc
jl
scas
lods
push
mov
into
mov
adc
mov
gs
arpl
aad
cwtl
movsb
stos
out
sub
aam
xor
scas
fisubrl
in
push
rcrl
xchg
add
pop
movsl
jp
cli
lret
out
mov
cmp
addb
shll
cmp
incl
and
fnstsw
fcomip
and
jg
and
mov
add
jp
xor
dec
jge
jno
xorb
ss
pushf
popa
loop
aas
fstl
dec
in
cs
lods
pop
push
pop
enter
add
add
scas
clc
mov
xchg
xchg
mov
test
cvtps2pd
jmp
push
mov
dec
rolb
rcll
rcrb
inc
test
mov
mov
adc
xchg
lea
adc
xchg
push
inc
out
cld
sbb
and
dec
fucomi
or
inc
sbb
mov
fcmove
ret
add
lods
pop
les
push
hlt
push
mov
jno
into
mov
push
sub
adc
adc
rcll
xchg
push
test
mov
cli
push
out
sub
inc
stos
sub
pop
stos
mov
mov
ret
adc
repnz
xlat
test
les
mov
ljmp
mov
and
xchg
pop
int
cmpsb
push
std
fwait
push
dec
lods
mov
mov
adc
mov
jns
fwait
popf
pop
or
cltd
addr16
or
adc
test
cmp
mov
leavew
jmp
mov
mov
ljmp
lea
mov
jnp
mov
loopne
and
cltd
mov
push
jbe
movsb
stc
and
lahf
add
fcomps
imul
dec
clc
movsl
outsb
mov
fcoms
jg
add
iret
out
fsubl
jp
and
dec
test
sub
sub
sbb
enter
pop
leave
sbb
xor
sub
xlat
adc
push
mov
mov
aaa
jp
mov
dec
mov
sbb
xchg
loop
adc
adc
xchg
cmc
push
shlb
ljmp
les
and
pop
int
sbb
mov
cmp
call
inc
test
int
mov
nop
push
test
sbb
aad
mov
xchg
jmp
xchg
push
and
les
jp
pop
pop
and
addl
jne
scas
test
popf
jno
popf
jo
push
iret
pop
mov
test
jne
push
dec
push
lock
xchg
dec
mov
cmp
adc
push
jne
and
push
fnstenv
dec
test
mov
add
cwtl
out
pop
pop
inc
pushf
stos
adc
sub
inc
add
int3
nop
scas
mov
mov
gs
cltd
mov
stos
rcll
das
dec
mov
enter
cmp
mov
pop
mov
enter
inc
pushaw
lret
mov
aas
xlat
mov
mov
outsb
mov
scas
mov
fcoms
inc
push
xor
cwtl
pop
push
test
test
pop
mov
cmpsl
lds
call
repnz
sub
cmc
mov
xchg
pop
dec
pop
pop
sub
pop
stc
push
in
pushf
sub
sbb
xor
cld
scas
mov
mov
es
mov
jg
pop
xor
add
stos
sub
or
pop
pop
dec
jecxz
jne
mov
inc
lods
push
fs
aad
clc
daa
orb
xorps
imul
adc
fiadds
jp
inc
cmpsb
xchg
scas
pop
cld
stc
or
push
or
ds
aam
ljmp
les
das
pop
mov
mov
ret
or
mov
ljmp
cmp
js
imul
dec
test
out
mov
nop
dec
test
jg
jne
lcall
daa
in
shr
pop
sbb
loope
stos
aam
testb
lods
jg
mov
xor
pop
shll
mov
xchg
xchg
popa
inc
stc
pusha
or
lret
sub
rorl
push
pushf
jmp
jne
fld
inc
dec
push
dec
ja
sub
xchg
sbb
or
xchg
outsb
stos
or
sub
aam
mov
push
mov
sub
lods
pop
aad
stos
sub
sub
adc
mov
cmp
mov
or
pop
in
mov
add
adc
inc
sub
add
clc
or
rcrl
xor
cld
into
pop
push
jmp
addl
push
dec
xchg
dec
andl
jecxz
sub
not
mov
sti
push
sbb
add
sbb
xchg
mov
aam
jae
stos
sub
jbe
lods
pop
out
ss
repnz
cld
data16
xchg
call
roll
outsb
push
pop
jbe
sbb
ret
lret
push
adcb
pushf
mov
adc
fisubrl
sub
sub
push
dec
loopne
sub
out
imul
mov
or
sbb
sarb
dec
mov
xor
leave
push
adc
dec
sub
inc
mov
mov
daa
xlat
mov
popa
xchg
xchg
jmp
push
xor
cmp
lcall
mov
and
mov
cmpb
inc
and
mov
mov
adc
ja
mov
stos
mov
push
test
mov
ds
cli
aas
cld
in
sub
push
adc
xchg
cmpsl
add
mov
dec
sub
out
xor
add
scas
cmp
jp
lods
inc
ret
push
leave
push
fwait
and
dec
mov
sub
push
cmp
push
mov
sub
push
pop
sub
fwait
jl
clc
rorl
push
adc
mov
insb
push
scas
mov
pushf
pusha
mov
movsb
les
test
je
adc
lock
sbb
mov
pop
fildl
outsb
mulb
pop
movsl
pushf
in
push
pop
in
push
push
jns
es
cmp
leave
js
test
jb
pop
add
sti
loopne
out
mov
pop
jbe
imulb
mov
cmpl
div
inc
rcr
pop
idivl
xlat
lret
sub
shl
push
icebp
cmpsl
dec
insl
pop
aam
mov
cmc
mov
mov
loope
pop
and
inc
mov
fldt
jne
insl
int3
add
xchg
outsl
mov
fldl
jg
lret
mov
mov
inc
mov
mov
paddusw
adc
nop
adcl
sahf
ret
inc
mov
testb
add
std
dec
xorb
push
pop
xorl
les
shl
ret
sbbb
mov
and
fwait
inc
lds
repz
xorb
lahf
xor
xor
sti
fwait
and
mov
or
enter
les
adc
sub
sbb
jg
pushf
xlat
jl
dec
pop
in
xorb
mov
cs
cli
add
xor
xchg
mov
les
dec
fdivrs
cmc
sbb
jb
add
popf
add
pop
les
mov
sub
sbb
adcl
add
dec
aas
fsubs
ret
ss
push
mov
xchg
sbb
dec
sub
mov
clc
scas
mov
je
sub
xchg
push
mov
repnz
adc
jns
std
adc
divb
call
ja
push
dec
add
das
test
mov
aaa
inc
call
cmpb
sub
xchg
add
mov
mov
ret
add
mov
mov
and
inc
test
hlt
sbb
cmp
stc
imul
ds
mov
and
fnsave
xchg
sbb
or
gs
jg
cld
adc
jmp
and
jo
fs
rcrb
ja
flds
lock
cld
ja
lock
ds
and
mov
jo
lds
es
ljmp
mov
xchg
push
pusha
xchg
mov
mov
sbb
push
aam
xchg
inc
push
and
jge
xchg
xor
addb
sub
dec
out
fimull
push
jbe
pop
jl
push
test
jb
cmc
fcompl
mov
ss
mov
sub
inc
cmc
addb
cmp
and
sub
xchg
sub
or
fcoml
inc
push
aam
mov
hlt
js
cmpsl
mov
add
jns
adc
out
or
jle
mov
sbb
cwtl
adc
add
lret
push
mov
pop
mov
aam
push
notl
xchg
movl
mov
out
xchg
popa
pop
repz
mov
repnz
sbb
cmp
add
mov
adc
arpl
cmp
mov
push
inc
cmp
jmp
xor
push
rclb
jp
inc
mov
jne
insl
jne
adc
push
inc
add
add
jg
into
in
cltd
fbstp
cmp
or
mov
cmp
in
sub
mov
xor
push
or
dec
xor
pop
gs
mov
jno
pop
xchg
jae
lods
imul
dec
add
ljmp
push
lods
add
lea
out
sar
pop
cli
mov
sbb
jne
pop
sti
xchg
sbb
lods
mov
nop
cmp
addb
shll
inc
mov
sub
xor
mov
mov
sbb
test
scas
addb
and
stos
cmp
inc
dec
inc
in
testl
mov
mov
sub
scas
and
inc
jg
xor
jmp
cmp
push
pop
xchg
jmp
mov
mov
sub
and
jp
pop
das
fisttpll
insb
movsb
cs
push
clc
jp
inc
scas
xlat
xor
nop
dec
or
mov
jg
cmp
gs
dec
repnz
or
push
in
popf
cmp
add
inc
sub
icebp
jns
mov
and
pushf
mov
outsl
inc
iret
add
int3
add
mov
cli
dec
call
iret
sub
mov
jl
and
mov
mov
movl
mov
sub
and
mov
call
mov
mov
adc
jno
in
popf
jns
inc
jno
cli
pop
cmp
pop
mov
mov
pop
orl
sub
xchg
sbb
jecxz
roll
or
roll
dec
jg
cmc
sti
cltd
push
push
xchg
idiv
dec
test
mov
xchg
fidivrl
lcall
sub
es
xor
cli
fisubs
std
mov
sbb
cmc
mov
sbb
fildl
cmp
cmp
mov
or
imul
adc
inc
dec
sbb
mov
out
mov
fdivl
push
sar
imul
mov
lods
lret
nop
inc
das
lds
push
add
mulb
xchg
inc
xchg
push
scas
mov
sub
je
dec
dec
ja
out
ja
test
call
mov
add
mov
insb
fs
and
sbb
aad
or
adc
ljmp
out
sub
or
adc
xor
lds
push
xor
xlat
push
jmp
scas
ret
jg
sub
lcall
outsl
jo
loope
mov
fidivs
mov
or
daa
jae
cmp
cmpl
add
jne
pop
das
movsl
daa
outsb
push
cmpsb
pop
shll
pop
ss
movsl
push
inc
mov
sub
fstl
call
in
dec
or
out
sahf
mov
insl
imul
repnz
mov
mov
repz
lcall
push
fprem1
lcall
ljmp
sbb
dec
xor
sub
out
jbe
xchg
mov
sub
loopne
idiv
cmp
and
aaa
xchg
mov
fldl
ja
jp,pt
test
aam
int3
leave
aas
jmp
aas
cmc
add
jne
dec
or
call
mov
imul
pop
mov
or
and
add
sub
sbb
pop
aam
sub
inc
mov
mov
ljmp
mov
jge
cwtl
xchg
push
cwtl
movl
mov
mov
mov
mov
mov
mov
imul
mov
and
pushf
or
sbbl
inc
dec
mov
or
pop
pop
adc
fldenv
mov
push
inc
insl
pop
sub
in
dec
out
sub
sub
gs
xor
dec
inc
gs
mov
ret
jg
or
or
and
push
mov
or
pop
arpl
clc
sub
rclb
mov
jns
sbb
mov
pop
repz
inc
push
sbb
mov
mov
lods
shr
xor
lea
inc
std
mov
lods
stos
and
mov
lret
stos
jb
sahf
push
js
pop
or
clc
mov
mov
jmp
in
jb
out
clc
stos
sub
dec
addb
stc
scas
mov
in
push
lahf
adc
adc
jne
test
repnz
rolb
loopne
mov
fs
add
sub
in
jb
std
cld
hlt
out
pushf
adc
add
mov
lahf
add
and
jno
rolb
sub
pop
out
loopne
out
and
mov
and
orb
iret
lock
lea
mov
aad
sub
push
sub
sbb
push
loop
dec
inc
stc
rorb
es
xchg
cmp
rcl
mov
shl
dec
movups
nop
mov
or
mov
xor
sub
arpl
dec
fsubrl
syscall
sbb
push
xor
sbb
mov
mov
outsb
repz
cmp
xchg
es
push
rolb
inc
dec
mov
cmp
jne,pt
add
mov
mov
fcoms
adc
shrb
cli
loopne
icebp
mov
xor
repnz
or
aas
push
adc
pop
mov
or
jae
and
stc
dec
lcall
inc
fidivl
cmovs
scas
sbb
cmp
inc
jl
sub
sbb
in
punpckhwd
xchg
pop
in
in
xor
fldenv
jle
pop
das
mov
ds
sub
sti
inc
mov
imul
jle
shl
test
lcall
repz
adc
dec
cmp
ret
push
mov
int3
es
mov
stc
dec
xor
sbb
inc
or
mov
adc
mov
sbb
lods
push
or
mov
mov
movsb
sbb
dec
adc
mov
cwtl
xor
ja
add
rorl
dec
sub
sbb
cmp
mov
push
pop
movsl
pop
mov
imul
cs
pop
xchg
jecxz
lods
xor
cmc
sbb
add
pop
repz
repnz
lods
mov
dec
in
fcoml
incl
lock
in
subb
xchg
fcoms
cmc
xor
lahf
push
push
jnp
xchg
inc
mov
push
sub
test
inc
pop
or
hlt
call
mull
sarb
and
lret
push
insl
add
jbe
out
imul
xchg
pop
pop
inc
xchg
dec
roll
test
sarb
mov
jl
stos
xor
dec
pusha
rorl
inc
add
jbe
pusha
adc
add
aam
hlt
jbe
arpl
cmp
cwtl
daa
xor
xchg
xor
mov
decb
mov
inc
sub
mov
xchg
cli
inc
add
fisubrl
xor
sbb
push
push
insl
adc
mov
xchg
cmpsb
movsl
adc
add
insb
imul
xchg
mov
cmp
mov
sub
icebp
test
dec
sti
imul
dec
xor
fs
fstpt
adc
jle
aad
orb
jp,pt
faddl
stos
repnz
inc
adc
hlt
inc
rorb
xor
add
cmc
and
pop
pop
jbe
dec
push
mov
or
mov
filds
dec
in
jmp
cwtl
sub
mov
mov
xor
pop
js
push
lea
jecxz
rolb
cmp
cmpsb
xor
and
xlat
mov
jnp
or
insl
add
shlb
mov
jne
mov
mov
mov
add
inc
push
push
inc
add
aaa
into
clc
push
pop
push
stos
mov
arpl
xor
inc
faddp
imul
xchg
or
scas
daa
test
push
push
push
lcall
mov
jmp
call
call
xor
mov
and
pusha
push
nop
xor
sbb
xchg
sub
jnp
enter
movsb
sbb
outsb
push
mov
add
and
test
jns
test
sbb
stos
push
nop
ret
je
mov
inc
push
stc
lods
lret
sti
xor
lea
jle
xchg
mov
cmp
jne
mov
xchg
mov
mov
dec
lds
jb
mov
mov
and
mov
or
test
shr
mov
sbb
icebp
push
xchg
not
outsl
ficompl
mov
adc
xor
jl
inc
push
lret
ds
or
xor
push
icebp
lret
push
jns
cmp
adc
jg
mov
rcll
or
fildl
lock
jle
push
xor
and
push
mov
cmp
aas
cli
adc
jecxz
inc
in
daa
xor
pusha
lock
dec
add
add
jne
idiv
mov
dec
adc
push
lock
sbb
or
dec
rcll
jp
push
or
push
das
mov
adc
mov
xchg
mov
lret
inc
add
adc
fdivs
cli
push
push
cmc
loopne
dec
sub
aaa
mov
push
xchg
xchg
or
xchg
scas
dec
cld
pop
and
jbe
push
add
aad
and
imul
ja
mov
rol
xchg
adc
mov
push
or
gs
adc
lea
xchg
cmp
mov
rorl
clc
imul
jne
push
sub
pop
fldenv
roll
mov
mov
addr16
push
or
mov
cmp
stos
fsubrs
pop
ret
mov
stos
and
adc
jbe
gs
sti
mov
inc
mov
pop
aas
sar
andb
push
mov
sub
dec
xchg
lcall
clc
fwait
push
hlt
or
dec
lret
or
push
nop
adc
mov
inc
repz
push
or
in
fbstp
out
sbb
push
inc
or
xor
cli
mov
rcrb
mov
or
push
dec
test
mov
jae
pusha
and
pop
push
mov
rorl
call
jecxz
push
push
adc
inc
cmp
lds
inc
push
mov
adc
sub
fstps
or
add
mov
xchg
inc
mov
mov
pop
aam
xor
jo
mov
cmp
mov
jmp
bswap
add
jno
into
mov
push
ljmp
push
test
or
xor
push
pop
scas
repz
inc
dec
aaa
sbbl
pop
and
lret
cmp
sbb
inc
pop
mov
xor
popa
aam
mov
add
scas
sbbb
imul
movsb
sub
aad
cmp
xor
fwait
jnp
ret
add
cmp
aam
or
cmp
ljmp
dec
jb
mov
push
xor
push
push
enter
mov
shl
mov
pop
push
add
add
lods
scas
test
pop
jmp
adc
stos
push
dec
mov
and
mov
pop
notb
test
int
adcb
jne
cmp
inc
jge
pop
cmp
das
int3
mov
adc
mov
fidivl
xor
sbb
jl
in
push
in
pop
ljmp
mov
mov
mov
popf
push
mov
mov
xchg
fisubs
mov
test
mov
movsb
inc
jmp
imul
mov
mov
shll
movsb
jecxz
push
data16
aam
sbb
jp
bound
mov
sar
pusha
add
out
add
sbb
fcmovbe
in
scas
sbb
stos
outsb
and
mov
jmp
scas
pop
mov
cs
xchg
out
ds
push
jg
negb
push
xor
mov
sbb
cli
or
push
xor
pop
ljmp
pop
in
rcrl
test
mov
repz
fimuls
popf
movb
out
mov
mov
repz
cld
mov
pop
ret
xchg
add
aad
in
push
mov
lods
shlb
dec
jmp
pop
in
or
mov
xor
enter
call
xor
fbstp
test
outsl
add
lods
sub
popf
in
shrb
rcrl
sub
subb
stc
outsb
sub
jl
stos
les
mov
mov
or
je
cmp
sub
icebp
cmpsb
push
loope
or
or
iret
fldl
cmp
xor
lds
jne
inc
out
xchg
loop
in
jne
adc
outsl
cmpl
inc
mov
push
ja
or
repnz
test
outsb
inc
cltd
xchg
push
inc
lcall
test
shrl
les
shlb
xor
movsb
cli
je
mov
test
roll
pop
fisttpll
notl
test
fld
mov
cmp
bound
add
movsl
int3
js
andl
lahf
dec
and
dec
out
hlt
int
mov
mov
into
pop
cmpsl
or
inc
pop
pop
iret
lahf
or
sbb
mov
repz
xor
inc
aam
or
sub
insb
loope
mov
fistps
sub
xor
xor
inc
push
insl
add
cmp
xchg
outsb
xor
nop
out
sbb
in
xchg
xchg
movsb
dec
mov
std
cld
das
aam
test
xchg
xchg
push
mov
add
dec
xlat
push
call
negb
fldl
in
add
inc
rclb
jne
xor
mov
xor
and
inc
loope
hlt
jge
iret
test
xchg
inc
mov
ljmp
aam
daa
xchg
lcall
mov
xchg
shlb
mov
and
push
mov
mov
movsb
lcall
adc
pop
cmp
nop
push
pop
push
jne
pop
inc
enter
js
push
test
ljmp
repz
cmp
adc
push
int
hlt
sub
mov
jecxz
add
das
aad
cwtl
es
mov
rolb
aaa
ss
jae
enter
aas
dec
insl
dec
int
ret
in
loopne
or
cmpb
push
dec
xchg
jge
xchg
jmp
adc
rclb
cli
and
out
jp
cmc
jge
fwait
mov
lock
xor
pop
cwtl
pop
mov
addl
lds
std
xacquire
or
mov
pop
out
dec
adc
enter
jecxz
or
jb
cld
stos
cmp
jns
xlat
push
lahf
sbb
jb
loopne
pmulhw
fsubrs
std
pop
mov
out
loopne
inc
push
xchg
orl
test
sub
and
sub
stos
stc
sub
jge
rorl
scas
imul
xchg
in
psubw
or
inc
jae
fdivs
jne
ja
sbb
insl
hlt
dec
out
loopne
lods
pop
mov
jg
dec
push
ds
sub
mov
pop
cmpsb
scas
aaa
or
stos
dec
shll
aaa
sub
lds
or
fiaddl
cmp
pop
adc
inc
stos
jae
int
outsl
dec
push
add
cmp
add
push
add
aas
jne
jecxz
dec
and
sbb
out
out
mov
mov
dec
xor
or
pop
repnz
insl
cmp
sub
pushl
out
pop
mov
adc
rcrb
cmpsl
call
test
jge
pop
cltd
fisubs
movsb
inc
cwtl
test
je
inc
cs
push
pop
inc
sub
movsb
out
push
negl
ss
jle
stc
stos
xorb
mov
rcrb
add
mov
push
cwtl
insl
sub
scas
xchg
fcmovne
orl
xchg
movsb
mov
dec
ret
push
mov
fcompl
clc
xor
jle
ret
test
ljmp
gs
scas
cwtl
pusha
clc
and
loop
fnsave
mov
in
push
xlat
mov
adc
out
fs
dec
mov
inc
jmp
and
adc
pusha
add
fnsave
or
jne
enter
jl
push
add
ss
push
les
and
lret
lahf
jg
test
xchg
lods
insb
inc
xor
stos
setno
pop
pop
mov
pop
add
fcoms
and
repz
out
test
pop
lret
call
xchg
scas
pop
arpl
mov
mov
jnp
sub
add
int
sbb
xor
out
out
adc
inc
subl
push
lcall
cmp
outsb
out
inc
mov
int3
mov
loop
jns
and
cmc
and
into
xchg
jns
xor
adc
and
jne
loopne
into
lds
loop
mov
add
fdivrl
sbb
test
popa
arpl
jge
mov
cmp
out
push
stos
adc
or
push
jecxz
dec
sbb
cmp
and
enter
pusha
test
pusha
rorb
push
imul
cltd
jl
mov
lds
pop
orb
add
mov
ss
jne
push
sbb
mov
psrad
jmp
sub
out
cltd
lret
icebp
in
sahf
cs
lret
and
jle
aaa
mov
roll
adc
dec
sbb
outsl
sbb
jmp
cmp
push
hlt
call
ljmp
js
xorb
scas
in
xchg
push
aaa
jno
cmc
adc
pushf
rol
test
aam
inc
adc
or
pop
mov
sub
movsl
popf
mov
fs
xchg
out
xchg
pop
lds
jecxz
aaa
dec
inc
pop
inc
aas
xor
in
jnp
add
cs
lds
testb
outsl
aad
adcb
cmp
xor
jge
sarl
mov
lret
out
into
mov
jl
dec
mov
mov
sbb
movsb
mov
sub
jp
jne
insl
and
stos
ljmp
add
jge
stos
sbb
addb
xor
add
insb
push
mov
insl
add
lea
and
ja
enter
or
sbb
add
mov
icebp
add
sbb
jne
ja
xchg
das
or
mov
loopne
js
dec
add
mov
add
mov
xchg
adc
xchg
sbb
adc
adc
call
lods
roll
xor
inc
les
mov
add
inc
xchg
test
add
sbb
sbb
sbb
fisttps
mov
fisttps
cli
ror
addb
add
or
mov
test
mov
add
inc
dec
inc
rol
sub
xor
sub
xor
adc
aas
movsb
inc
aam
mov
aam
sub
subb
xor
and
fnstcw
mov
add
lret
add
push
sbb
in
out
sub
and
repz
por
or
push
andb
repz
pop
xchg
xchg
cwtl
jnp
xor
sti
mov
mov
adc
mov
sub
inc
cld
inc
in
fistpl
or
xor
sbb
into
daa
in
jl
inc
jecxz
rorl
test
iret
pop
cmp
rcl
lods
stc
imul
scas
loope
ds
incl
adc
repz
jns
dec
pushf
xchg
cmp
and
dec
lock
fists
pushf
or
aad
add
int3
jne
scas
je,pn
pop
addb
jne
add
pop
mov
jns
sbb
or
inc
das
add
add
imul
and
fwait
dec
pop
scas
mov
push
xchg
mov
in
iret
push
cwtl
mov
xor
mov
negb
and
jle
adc
xor
adcl
mov
negl
xchg
sbb
sbb
fisttps
call
mov
fistpl
test
aam
push
push
xor
sub
push
fdivrp
jae
push
xor
lret
js
dec
sahf
dec
or
push
iret
aaa
cmp
dec
call
cmp
adc
test
jno
fdivr
das
ljmp
mov
mov
mov
mov
dec
out
aam
lods
stos
mov
sub
es
aam
xchg
push
push
pop
lea
inc
movsl
xchg
adc
bound
cmp
xchg
je
pop
cli
push
add
mov
fsubrl
roll
dec
int
add
daa
jl
mov
int
data16
out
sub
hlt
push
orb
fbstp
mov
xchg
fs
sbb
out
repz
xchg
shl
jl
xchg
mov
push
out
xchg
hlt
rcrl
dec
aad
test
stc
pop
cmpl
adc
mov
mov
mov
subb
je
fld
and
pusha
lea
arpl
push
jno
push
scas
cmpsl
dec
fists
xchg
gs
test
sbb
daa
push
push
jnp
decl
mov
mov
iret
aaa
sbb
lcall
roll
or
push
mov
jne
xchg
insb
jge
call
pop
insb
jbe
mov
adc
and
add
lret
sub
outsb
pop
inc
and
lea
ja
lret
xchg
jle
adc
scas
jp
cli
dec
out
in
inc
insl
add
push
push
push
mov
mov
pop
rcl
push
push
loope
add
and
xor
push
mov
testl
or
mov
ret
lret
push
nop
or
das
dec
add
fs
and
cmp
lods
cmp
mov
sbb
adc
push
sub
jbe
popf
sbb
cld
or
xor
hlt
loopne
stos
je
or
in
and
imul
jp
mov
call
testb
jmp
jae
lcall
lods
sub
call
mov
sbb
push
in
push
dec
ret
stos
orl
jg
into
dec
fnstcw
lods
stos
hlt
cmc
neg
out
mov
vpcmpeqd
and
dec
movsb
sbb
lret
aaa
push
negl
cmp
mov
ficompl
cli
int3
mov
in
loopne
cld
or
popf
add
hlt
adc
sub
xchg
in
fsubs
sbb
xchg
xchg
inc
push
pop
out
jmp
scas
sbb
dec
jne
mov
ret
ret
jmp
or
add
iret
mov
sbb
out
sahf
outsl
shlb
rol
ret
pushf
leave
add
jbe
or
jo
pop
sbb
dec
sbb
adc
jmp
call
loop
add
inc
sbb
jg
mov
in
jmp
into
out
jge
in
movsl
repnz
cld
das
popf
pop
pop
jae
or
and
adc
mov
es
mov
pop
jae
scas
jl
push
mov
dec
repz
xchg
loopne
add
jmp
add
mov
imul
mov
aaa
and
sub
ret
xor
adc
mov
xchg
les
dec
int3
jae
xor
or
cwtl
cltd
push
repz
fdivr
ja
cmp
lds
add
sub
lret
mov
push
rorb
shlb
pop
aaa
cmp
jp
push
lret
stos
inc
push
sub
sub
xchg
xor
pop
xchg
ret
test
test
or
jge
sub
in
rorb
rcrb
dec
push
in
jle
pop
sti
cmp
test
or
add
test
pop
xchg
int
sarl
add
insb
pop
mov
loopne
jno
ficompl
push
xchg
outsl
loope
pop
mov
xchg
out
cs
mov
sarb
sbb
cld
add
outsb
dec
addr16
inc
cwtl
sub
popa
adc
pop
pop
jnp
inc
pop
test
mov
ret
shrb
divb
addr16
sbbb
jns
pusha
les
jb
in
and
xchg
pop
sahf
das
and
stos
ficompl
mov
mov
mov
lods
mov
pop
sbb
add
or
ja
sbb
xor
lret
pop
cmpsb
push
test
mov
push
fbstp
test
sub
lods
fistps
push
loopne
cltd
jle
leave
hlt
stos
movsl
sub
into
cmp
jmp
incb
dec
mov
incb
divl
xlat
and
xchg
cld
lret
mov
push
scas
mov
inc
xchg
lods
es
arpl
push
bound
sub
out
jo
aas
loopne
xchg
and
test
fldenv
ret
loop
lahf
clc
jnp
xchg
xor
xor
and
or
rcr
cwtl
cs
aas
test
insb
mov
ja
sub
hlt
insl
and
jbe
pop
jb
scas
ja
push
push
imul
mov
mov
inc
jno
sbb
pop
rolb
pop
mov
stos
out
add
in
addr16
pop
cld
pop
cld
xchg
repnz
sub
dec
icebp
bound
add
push
ja
pop
lahf
mov
fcmovb
nop
loope
out
in
lock
mov
js
scas
lods
xor
sub
lock
push
rcrl
lcall
idivb
adc
orb
shl
aas
cwtl
and
clc
cmp
fidivrs
dec
xchg
daa
mov
add
push
mov
test
ljmp
sub
jne
pop
lea
push
push
mov
cli
bound
or
mov
nop
psubw
loop
lds
cmp
xor
xor
dec
or
cmp
ud1
pop
xchg
lahf
ret
add
push
xor
sub
sbb
int3
cmp
cmp
xchg
icebp
ret
or
pop
jmp
add
sbb
pop
adc
mov
pop
fs
cmpsb
xchg
cmpb
pusha
sti
ffreep
mov
cmp
mov
cmp
cmp
push
xor
jne
add
pusha
mov
cmp
dec
mov
je
adc
mov
sahf
mov
bound
div
and
int3
rolb
push
push
in
adc
jmp
pop
in
lahf
shrl
cmp
mov
add
test
or
add
and
jns
and
push
cwtl
shll
lods
xchg
push
xchg
adc
sarl
je
and
push
mov
repz
imull
sub
movsb
adc
inc
adc
sti
test
std
add
imul
ljmp
mov
xorl
aas
xchg
ret
pop
out
mov
jbe
jmp
cltd
popa
or
lea
pusha
push
inc
adc
push
aaa
xor
xchg
sub
fistpll
std
call
xchg
shr
lahf
push
push
push
ja
adc
cmp
xor
cmp
incl
int3
cmp
pop
pop
call
fnstcw
xchg
idivb
dec
xor
mov
sti
mov
cmc
mov
cwtl
lods
sub
fistpl
and
filds
mov
inc
or
idivb
and
je
inc
dec
sub
jns
pop
cmp
popa
mov
aaa
lret
lds
jg
shrl
inc
sub
cmpsl
sbb
lds
and
lock
call
jl
mov
ret
sub
jge
mov
mov
iret
scas
adc
mov
xor
arpl
xor
test
mov
push
xor
filds
adc
rclb
cmpsb
test
scas
xor
jp
mov
rorl
repz
mov
stos
xsave
cmpsb
xchg
dec
push
adc
scas
mov
xlat
or
jnp
fstpl
pop
sub
loope
jge
ljmp
push
jge
in
mov
mov
xchg
mov
jo
in
movsl
int3
xchg
clc
sbb
pop
loop
sbbb
pop
std
lret
mov
rcll
mov
jae
dec
xor
into
repz
mov
mov
jno
fldenv
add
ret
cmp
les
jl
cltd
lds
dec
loopne
cmpsl
pop
lock
sbb
mov
sub
repnz
sbb
cmp
xor
push
adc
jne
xchg
das
popf
subl
inc
or
add
divb
decl
xor
inc
outsl
inc
jle
mov
dec
push
sbb
cli
sub
fnstenv
xchg
push
mov
push
or
push
cld
rclb
pop
icebp
orb
sub
inc
push
sbb
pop
pop
inc
sub
icebp
subb
jnp
jg
nop
fcoms
dec
aaa
and
cs
cmp
popf
sbb
cmp
or
cmp
sub
add
sub
adc
movsl
mov
fidivrs
mov
out
or
bound
js
xor
sahf
mov
add
dec
and
sub
fcmovbe
and
xchg
mov
fisttpl
xor
test
lahf
pushf
inc
rolb
cmpsb
sub
mov
add
in
out
inc
jl
repnz
loope
xor
xor
mov
sbb
xorb
aaa
mov
xor
lea
xor
lcall
gs
orl
dec
sbb
ret
or
mov
hlt
mov
xor
hlt
adc
movsl
add
shr
adc
xchg
pop
ja
inc
or
inc
mov
xor
and
call
shll
shrb
jb
clc
aam
or
push
fidivrl
sbb
xchg
dec
gs
add
cmp
iret
int
mov
lods
cmpb
jge
sub
and
pop
dec
push
cmpsb
sbb
jo
bound
jne
fdivrs
lods
ljmp
push
sbb
gs
int3
mov
pop
pushf
sbb
adc
inc
fisubrs
filds
lahf
popa
xchg
loopne
inc
adc
ljmp
lock
andl
push
sub
pop
repnz
adc
sub
loope
sbb
daa
and
je
addr16
mov
mov
adc
movsb
adc
xchg
daa
xchg
insb
xor
or
xchg
std
pusha
cmpsl
test
mov
mov
out
loopne
mov
push
or
cmc
dec
inc
pop
add
cmp
sbb
faddl
addr16
inc
sub
mov
test
bound
sub
push
loopne
nop
push
bound
roll
dec
mov
aad
cwtl
mov
adc
pop
or
sti
call
xchg
orl
loop
or
or
mov
sbb
dec
or
dec
lahf
orb
dec
loope
orl
add
cmp
jp
addl
cmp
mulb
mov
cmp
test
jo
sahf
sub
movl
arpl
lea
mov
push
enter
sub
adc
and
and
mov
mov
jmp
mov
inc
lea
inc
lods
xor
jb
pop
rolb
jbe
add
lcall
xor
icebp
scas
jg
mov
sub
inc
and
je
rcll
mov
fistpl
mov
and
mov
add
add
repnz
add
add
add
add
add
add
adc
and
add
and
sub
mov
xor
mov
dec
nop
xchg
shlb
dec
cwtl
shlb
jne
pushf
rcl
cmpsl
in
sub
test
sub
test
mov
lods
rcl
stos
in
sub
dec
mov
shrb
dec
mov
sub
shrb
dec
rol
mov
fs
dec
dec
enter
movsb
sub
xor
mov
sub
inc
dec
rcl
shlb
dec
fcom
mov
movsb
sub
rcl
mov
sub
in
mov
dec
dec
call
movsl
mov
in
rcl
mov
dec
lock
sarb
dec
clc
sarb
dec
scas
les
xchg
addl
or
cmpsl
xlat
dec
cltd
mov
pop
es
inc
mov
imul
cli
and
sub
or
movsl
pop
pushf
xchg
rorl
dec
sbb
shll
repnz
inc
sbb
cmp
cwtl
sbb
pusha
add
loopne
out
and
add
mov
add
mov
mov
push
sbb
dec
out
sarb
push
js
dec
sub
rcrb
inc
mov
xor
add
sbb
ds
inc
xchg
xor
enter
push
loope
cmp
xchg
jno
and
add
and
lret
ret
or
in
adc
outsl
and
cmp
ja
insb
push
inc
sbb
mov
iret
lcall
popf
dec
jo
add
andl
add
out
je
cmpsl
and
out
ja
and
jbe
or
repnz
inc
sbb
xor
inc
movsl
push
add
xchg
fcompl
loopne
xor
std
or
cld
xchg
and
push
jnp
mov
testl
fiaddl
and
mov
adc
xor
sbb
cmp
repnz
shlb
test
loopne
bound
movsl
xor
and
in
cltd
dec
fsubs
inc
jo
addb
inc
ret
lock
add
dec
pop
xchg
repz
sub
inc
fdivrs
or
xor
repz
add
mov
xchg
mov
sbb
jge
add
mov
adc
add
push
inc
add
add
add
dec
xchg
and
xchg
mov
lds
daa
lahf
dec
aas
jp
jmp
lahf
cmp
mov
out
jle
call
repnz
mov
aas
pop
stc
mov
daa
aam
movsl
data16
fistps
or
aaa
cltd
movl
cmp
cmc
and
mov
stos
outsb
lds
jmp
ror
inc
mov
int3
xchg
sarb
movsl
decl
cmpsl
std
aam
imul
push
lds
fisttpl
fnstenv
pop
data16
dec
stc
cmpsl
cmpsl
mov
fs
or
das
test
sub
xchg
ljmp
mov
jmp
call
mov
cmp
jge
fsubrs
scas
test
iret
push
xor
sub
int
lret
bound
mov
pop
cld
rcrl
int3
repnz
lret
sar
stc
add
negl
iret
mov
in
popl
loopne
inc
sbb
and
lret
pop
mov
sbb
outsl
push
sub
mov
jo
cmp
fwait
mov
xor
xlat
leave
sahf
xor
shr
imul
inc
fnclex
ret
mov
fucomip
sbb
ljmp
xchg
or
fistpll
jno
pop
push
push
push
adcb
sub
pop
mov
mov
jp
out
add
push
and
add
jmp
fs
out
mov
enter
jbe
and
inc
popf
int3
pop
lods
jmp
inc
xchg
data16
pop
sub
pushf
shl
repz
int3
mov
shlb
xchg
icebp
add
cmc
sbb
nop
test
jo
test
mov
sarb
sarb
add
js
sub
std
push
xchg
xchg
pop
adc
orb
or
sub
call
in
fcmovb
mov
arpl
mov
and
sub
and
push
add
insb
loope
sub
test
push
xor
mov
outsl
ss
sbb
xor
mov
outsb
cwtl
add
or
sbb
bound
ret
sarl
sbb
mov
or
xor
sub
call
and
test
test
add
sub
dec
pop
and
sub
add
push
inc
loope
lods
add
push
pusha
pop
mov
xor
sbb
or
cmp
jbe
add
outsl
pop
mov
shlb
fdivrl
fdivrs
sub
lods
xchg
xchg
mov
mov
add
lods
sbb
or
lret
shrb
roll
add
ss
dec
orl
pop
mov
nop
shrb
push
mov
jecxz
pop
fidivs
sbb
or
cmp
sub
or
add
mov
sub
mov
ds
inc
sbb
bound
daa
aaa
lock
ss
adc
push
push
enter
add
add
ret
cmp
std
das
add
inc
fwait
dec
xlat
pusha
xor
cmpsb
insl
ret
pop
xor
sub
push
jne
jb
cmpsl
push
test
push
movsl
sbb
sbb
cwtl
push
fdivrs
aad
pop
jge
out
mov
add
cmpsl
dec
add
jb
pshufw
jmp
adc
xor
arpl
inc
push
and
ds
mov
or
call
cmp
sbb
sbb
cmp
test
xor
push
inc
je
xor
add
adcb
cwtl
mov
call
push
cmp
test
push
push
cmpsl
dec
cmc
stos
aad
ret
push
mov
mov
mov
mov
rcll
leave
lea
mov
aaa
das
fidivrs
xchg
popa
xorl
movsb
jb
dec
pushf
pusha
cwtl
dec
hlt
ds
outsl
xor
les
mov
inc
je
mov
pop
or
adc
addr16
test
out
andl
inc
adc
cmp
hlt
je
cs
jb
mov
add
dec
and
mov
jle
jp
loopne
mov
popa
and
and
pop
repz
bound
or
jg
sbb
xchg
loopne
push
sub
pop
dec
sbb
xchg
xor
rolb
daa
jmp
fistpll
hlt
stos
mov
inc
cmp
push
xor
std
push
aaa
mov
imul
fsubp
xor
movsb
fwait
xor
or
adc
sbb
cmp
test
mulb
and
aad
xchg
sub
mov
rorb
dec
xchg
insb
sub
push
nop
or
pop
jge
movsb
push
and
cmp
cltd
ror
sar
je
pop
repz
lock
lock
hlt
xlat
pop
scas
test
sub
adc
les
push
or
and
xchg
lahf
repnz
jp
pusha
fwait
sub
sub
dec
jl
jge
sahf
pop
rcrb
int3
xchg
or
sub
inc
xchg
xchg
push
notl
sub
js
lcall
rcl
das
push
cmpsb
clc
push
movsb
or
mov
mov
arpl
jo
push
mov
pop
sti
insb
inc
ljmp
cld
inc
inc
push
hlt
pushf
lods
xchg
sbb
sbb
rorb
adc
addb
subb
cmp
push
pop
mov
xchg
stos
sbb
and
sbb
cmpsb
lea
mov
imul
loop
push
push
xchg
or
inc
sbbb
sbb
data16
adc
mov
mov
dec
add
mov
inc
xor
mov
test
push
cmp
sub
fsub
add
sub
xchg
in
xlat
popf
test
jae
inc
pop
mov
lods
pop
pusha
out
rorb
or
sub
mov
xchg
mov
mov
jp
inc
rol
lret
and
int3
mov
dec
int
int
lds
mov
jmp
test
orl
mov
inc
adc
mov
lock
or
pop
dec
lret
sub
loope
dec
dec
and
xchg
outsb
cltd
popa
or
mov
xor
xor
and
outsl
mov
cli
jb
inc
fwait
inc
add
cwtl
push
test
pop
mov
call
ss
and
stos
dec
mov
mov
daa
add
xchg
push
push
inc
into
and
or
subl
sbb
push
test
aad
cmp
mov
cmpsb
aad
mov
cmp
daa
in
mov
and
mov
cmp
test
inc
insb
stos
add
repz
adc
insl
push
mov
lea
jo
push
lret
xor
mov
std
jmp
fs
sub
out
push
addb
add
ds
loopne
mov
pop
cmp
hlt
push
add
mov
test
jmp
loopne
shrb
rorb
sbb
shll
cmpsb
push
cs
and
mov
push
jg,pn
and
not
fistps
andl
cltd
xchg
jbe
or
lds
push
add
inc
adc
push
fmuls
sbbb
loope
jbe
or
mov
jo
dec
or
push
adc
call
add
mov
mov
jp
adc
or
or
test
es
sbb
in
pop
mov
mov
ss
push
shrl
mov
pop
pop
xchg
sub
or
mov
inc
mov
adc
push
fdivs
inc
sub
sbb
mov
in
fdivrl
movsb
nop
inc
cmpsl
fiaddl
shll
cmpsb
cmpsb
inc
xor
fwait
push
xor
orl
test
cmpsb
inc
mov
or
stos
xor
jns
shl
in
sarb
popa
inc
adc
in
lret
mov
dec
ljmp
pop
mov
test
mov
and
js
stos
push
add
pusha
lea
aam
dec
xchg
dec
push
add
imul
je
dec
ret
and
lock
enter
push
pop
std
in
sbbb
cltd
add
fdivl
bound
xchg
addb
mov
lods
mov
or
adc
leave
test
xor
shrb
outsl
jmp
test
xchg
push
push
sub
mov
test
inc
aad
fidivl
inc
movsl
imul
leave
lock
cmp
loope
and
sub
add
gs
fwait
je
xchg
mov
test
xor
mov
aaa
sbb
mov
insl
cli
shll
add
push
js
movsb
sbb
inc
or
aad
mov
shr
int
adc
dec
or
fldcw
sbb
ss
jmp
xor
xchg
inc
mov
cmp
xchg
xchg
and
mov
inc
xchg
push
pop
call
mov
xchg
xchg
sub
xchg
inc
rclb
and
lcall
test
mov
xor
sbb
lds
leave
fnstenv
ss
les
adc
ja
fisttpll
or
mov
test
je
lret
mov
mov
sbb
int3
out
lds
enter
jl
mov
sbb
mov
push
test
push
inc
pop
outsl
gs
cltd
or
and
sub
cwtl
test
push
scas
adc
ret
push
jns
je
loopne
xor
or
out
xchg
sub
popl
aad
pusha
lret
jl
mov
mov
cs
fisttps
pushf
pop
cmp
fmuls
cmp
rorl
push
ret
mov
mov
inc
mov
adc
andl
add
repz
nop
add
in
push
dec
cmp
lret
mov
je
or
int
cwtl
inc
push
mov
xor
and
cwtl
xchg
add
push
loopne
or
cmp
andb
out
fisubl
mov
mov
add
sbbb
dec
enter
mov
xlat
pop
neg
xor
cmc
xchg
fistpll
lret
xor
cmc
and
and
mov
rcrb
cmp
les
sahf
inc
jp
mov
push
ret
sub
inc
mov
cs
dec
and
add
jns
fs
test
and
cmpb
dec
inc
mov
inc
ret
inc
call
sbb
sub
ds
sub
mov
dec
ss
adc
jmp
dec
push
lock
xor
sbb
je
mov
pop
sub
sub
push
mov
sti
call
cmpsb
pop
or
sub
cli
or
jmp
adc
adc
add
scas
xor
ljmp
pusha
daa
orl
mov
sub
pushf
xor
sub
std
daa
inc
push
dec
addl
ds
mov
xchg
ljmp
ja
pop
push
jmp
data16
fidivs
int3
xor
or
fidivl
daa
std
push
cli
stc
fidivs
mov
jecxz
or
xchg
mov
pop
mov
sbb
jnp
in
push
iret
dec
push
cmp
or
and
out
in
mov
std
mov
mov
das
repnz
ss
cld
enter
fnstsw
add
cmpsl
xor
leave
lcall
daa
cmpsb
mov
or
dec
pop
lds
fisttps
out
enter
lea
and
mov
pop
jns
fists
pop
mov
or
and
addr16
and
mov
sbb
leave
dec
mov
aas
pcmpeqb
call
cmp
lahf
push
dec
mov
iret
shlb
arpl
repz
repz
xchg
es
jo
aas
push
mov
jae
das
and
adc
imul
test
insb
mov
xor
or
testb
shl
clc
dec
sahf
cmp
call
sub
mov
ljmp
stos
dec
jl
wbinvd
xchg
icebp
out
loopne
mov
stos
addb
stos
adc
out
dec
mov
inc
addl
popf
lret
mov
mov
test
outsb
lahf
test
adc
sbb
and
mov
lcall
fucomp
xchg
fmul
push
cmpsl
push
mov
mov
leave
lret
dec
into
outsb
push
stos
push
cmp
or
push
and
cmc
enter
push
popa
inc
lods
mov
mov
adc
jg
adc
and
lret
mov
sahf
ficomps
mov
iret
repnz
pop
lret
push
popf
bound
out
mov
out
push
adc
ja
fdivrl
fcompl
shll
push
sub
nop
lcall
aad
xchg
imul
push
mov
pop
lods
imul
sahf
scas
or
aaa
in
mov
inc
leave
pushaw
xor
or
or
push
int
mov
outsl
ret
jmp
push
jb
fisubrs
dec
arpl
mov
mov
insl
lret
lods
rcrl
sbb
or
in
push
into
test
push
mov
ljmp
dec
shrl
xor
inc
mov
outsl
out
pop
in
or
lcall
and
into
cmp
pop
rcll
add
push
test
xor
mov
lea
inc
rclb
jecxz
stos
sbb
jl
cli
xchg
loop
clc
mov
testl
inc
movsl
loop
mov
sbb
arpl
pushf
inc
cmpsl
jmp
jne
insb
adc
jns
jo
int3
dec
jns
popa
aad
jle
xchg
andb
loope
add
jle
cltd
xor
jecxz
test
jle
sub
bnd
ror
fisttpll
push
stc
mov
pop
stc
psrld
imul
sub
cmp
shrd
xorl
aam
dec
shrl
xchg
ds
mov
push
mov
stc
xor
sub
and
or
pushf
add
filds
or
xchg
mov
cmpsl
or
data16
into
cmp
add
dec
mov
arpl
jecxz
jnp
daa
mov
inc
popf
dec
addl
inc
sub
sbb
jmp
xchg
test
push
mov
jo
dec
dec
iret
cmp
call
int3
sbb
int
ljmp
lods
inc
push
lret
nop
sbb
and
les
orl
mov
imulb
inc
shr
dec
ds
bswap
mov
mov
outsb
cltd
lahf
jns
in
out
ficoml
push
or
sar
xor
es
sub
jg
add
ljmp
out
movsb
adc
mov
jp
or
mov
mov
or
inc
mov
fwait
xor
in
push
inc
out
xchg
hlt
xchg
mov
out
sbb
push
and
inc
decl
fildll
cmc
dec
xchg
sub
inc
sub
push
xchg
into
xchg
int3
mov
fwait
push
add
leave
dec
and
mov
mov
dec
andb
mov
aaa
sub
pop
test
cli
dec
cmp
mov
mov
and
inc
xor
mov
and
loop
add
repz
popa
xchg
jns
movb
xchg
xchg
fwait
push
or
mov
mov
jmp
pop
xchg
pop
xor
cmp
and
inc
insb
add
jb
sbbl
jne
sub
ljmp
mov
loopne
sbb
dec
sar
inc
and
fidivl
repz
ret
mov
add
dec
ds
xchg
shlb
cltd
adc
push
adc
aam
xchg
jne
aas
sub
repz
mov
icebp
lahf
mov
arpl
pop
ds
or
repz
push
sbb
inc
jmp
lahf
adc
jbe
add
int3
mov
inc
mov
sub
and
and
cltd
bound
mov
out
or
lds
jg
adc
ds
adc
inc
popf
add
cmp
fdivl
movsl
sbb
mov
push
xor
fldenv
dec
push
jbe
push
push
out
arpl
jecxz
mov
popl
movsb
hlt
jno
cld
roll
js
out
ja
loopne
dec
fsubr
cs
sbb
cli
stc
mov
outsl
pop
daa
int3
cmp
pop
hlt
jno
sbb
int3
ljmp
bswap
lahf
cmc
cmp
sahf
pop
push
sbb
lock
mov
movsl
sub
pop
data16
jg
push
lret
pop
ljmp
fsubp
cmpsb
mov
cltd
sahf
out
inc
fstl
xor
sub
sub
test
add
xor
test
mov
cmp
mov
pop
lods
dec
xlat
jmp
pop
imul
add
dec
cli
jnp
sti
scas
rcll
pusha
stos
add
and
xlat
mov
push
adc
xor
repz
sar
iret
out
test
mov
test
mov
out
cmpb
lahf
cs
dec
pop
stos
shlb
pop
out
ds
pop
cwtl
jno
add
cmpsl
daa
sub
notl
and
jecxz
and
testb
addl
sub
inc
pop
add
sub
and
pop
mov
dec
ja
test
or
mov
insl
cmp
xchg
add
pop
fisubrl
add
cs
adc
mov
frstor
cmpl
hlt
mov
sti
mov
sbb
jmp
add
sub
out
mov
sub
flds
sub
mov
adc
je
cmp
in
fsubrs
inc
lds
xor
or
sub
cmpl
mov
add
mov
mov
pop
inc
add
imul
dec
bound
popa
xchg
ja
int3
cltd
insl
sarl
push
cwtl
sub
mov
cmc
push
insb
and
test
mov
xchg
and
syscall
test
sbb
pop
cmp
in
xchg
iret
or
add
aas
or
scas
pop
pop
std
lock
xorb
mov
sub
or
dec
add
mov
mov
xorb
cmp
and
and
xchg
mov
shll
ss
loopne
pusha
or
cwtl
fcomps
or
stc
mov
sbb
lock
aas
js
sub
sub
mov
pushl
out
mov
iret
in
xor
and
pop
jmp
lret
xchg
mov
sub
lds
rcrb
lret
dec
cmpb
in
push
and
and
inc
gs
adc
sbb
fisubrs
xor
or
and
lea
pop
mov
in
mov
sub
or
pop
clc
arpl
rolb
lock
enter
addr16
or
int3
lahf
jns
fsts
insl
call
dec
ret
das
mov
popa
bound
adcl
mov
push
cld
xor
test
ret
xor
pop
pop
and
mov
loopne
sti
in
lret
out
and
pop
xchg
adc
imul
sarl
xor
sub
aas
call
mov
stos
mov
call
and
jge
sub
icebp
lods
stos
mov
sub
mov
adc
insb
shrb
sbb
mov
xor
imul
or
mov
add
cmp
sbb
outsb
movsb
push
sub
outsl
fisttpl
outsb
push
dec
aam
subl
or
cltd
lea
aam
sub
mov
aam
push
lahf
bound
test
adc
push
xor
lods
pop
cmp
push
arpl
in
dec
shlb
lea
or
add
cmp
jne
stos
mov
test
fsub
add
dec
or
push
roll
mov
or
add
cmp
mov
push
movsl
iret
andl
fiaddl
cmpl
and
arpl
cwtl
aam
aad
ret
ljmp
popf
jp
stc
or
ret
pop
cmp
sbb
xor
nop
subb
out
add
lods
ret
arpl
adc
in
push
mov
outsl
adc
add
sub
adc
push
js
xchg
popw
arpl
add
pushf
inc
sub
loope
test
sbb
add
inc
push
sbb
xlat
jno
cmp
dec
cmp
dec
cmp
ret
cltd
scas
js
mov
sbb
mov
mov
cld
or
movsb
and
movsl
dec
mov
ds
mov
pop
sub
icebp
adc
outsb
sbb
mov
mov
cwtl
movsl
stos
or
stos
xchg
in
les
inc
mov
pop
add
mov
mov
sub
add
adc
lods
fcom
xor
or
push
xchg
lock
cmp
xor
adc
addr16
mov
in
sub
out
inc
in
stos
mov
xchg
pop
and
pop
adc
lret
mov
cmp
cmp
jmp
int
dec
cmpsb
pop
fstpt
lock
cld
xor
or
or
popa
clc
add
ret
es
test
ja
clc
push
xchg
hlt
cmp
pop
dec
sbb
push
xor
adc
lahf
outsb
cs
inc
cmpsl
mov
and
mov
ds
out
mov
mov
mov
or
dec
int
sbb
mov
jne
aam
ja
or
xor
dec
stc
cmc
jno
or
inc
add
cwtl
movsl
and
out
imul
orl
int
pop
adc
mov
stos
dec
inc
sub
cltd
repnz
jle
inc
mov
cs
mov
leave
jmp
inc
mov
insb
sbb
in
mov
push
cmp
dec
cmp
fwait
notb
add
arpl
sub
inc
xor
test
xor
repnz
repnz
mov
sbb
dec
lods
imul
nop
das
mov
shlb
loopne
add
inc
enter
mov
inc
add
repnz
gs
add
testl
or
flds
push
les
push
pop
loopne
mov
push
iret
mov
sbb
pop
push
jns
jnp
ror
les
jae
pop
cmpb
mov
inc
lcall
push
scas
jle
lds
aam
gs
dec
and
lods
inc
and
addb
enter
mov
mov
mull
mov
loop
sbb
divb
jbe
cmp
adc
scas
les
sbb
mov
into
lcall
ret
mov
pop
sbb
pusha
out
push
jmp
shr
push
mov
scas
sub
enter
js
mov
insl
xchg
pop
cmc
xchg
fwait
hlt
std
mov
out
aaa
add
push
subl
iret
jns
out
pop
push
pop
out
imul
jge
ljmp
inc
pusha
cmc
hlt
rorb
push
popa
and
out
sbb
test
subl
cmp
jl
sbb
or
xchg
in
in
xor
jecxz
cmp
dec
mov
inc
clc
and
dec
fidivl
daa
push
out
add
mov
mov
cmp
xor
xchg
in
inc
sub
and
push
je
movsb
sti
rcr
pop
imul
movsl
mov
stos
clc
adc
insb
and
repnz
shl
jo
inc
push
sub
dec
jbe
ds
pop
push
pusha
mov
int3
les
add
icebp
add
popa
and
cld
or
nop
insb
cmp
leave
and
sbb
adc
int
inc
std
in
int3
and
insb
sub
mov
mov
push
cwtl
xor
xchg
sbb
leave
pusha
add
addl
fdivrs
adc
adc
jae
cmp
push
adc
fmuls
ret
fwait
or
push
add
aad
jmp
rolb
add
jb
jns
hlt
lock
mov
push
popf
add
orb
je
pop
sub
xchg
sarl
hlt
stc
dec
xor
aad
ret
sbb
notb
lea
and
les
aam
sub
int3
lds
repnz
sbb
dec
xor
popa
sub
xchg
scas
sbb
mov
jae
or
bound
mov
cld
push
sub
push
inc
push
filds
ret
hlt
adc
addl
xor
or
mov
mov
xchg
repnz
test
ret
adc
jno
cmp
aad
push
sub
jo
inc
xchg
lret
sub
pop
xlat
mov
or
loope
pop
lret
push
fsubs
or
ret
aad
cmpsb
sahf
ret
xchg
add
stc
test
cltd
scas
xchg
add
add
leave
test
in
adc
addr16
adc
adc
dec
jp
dec
push
adc
adcb
push
ljmp
adc
jbe
push
gs
out
ret
jge
xor
jns
imul
add
inc
andl
adc
out
imul
mov
mov
inc
mov
xchg
adc
call
cmpl
popa
push
stos
inc
or
adc
push
js
add
sbb
mov
or
int
movsb
rorb
dec
cmp
add
mov
ret
and
in
ret
pop
mov
int3
out
xor
movsb
movsl
inc
xor
mov
jbe
fs
cmpsl
sub
jae
pop
sub
les
xchg
and
or
push
inc
outsb
xchg
or
outsb
jne
adc
or
xchg
sbb
inc
jno
mov
ss
rorb
push
cs
ffreep
test
movsb
jnp
and
cmp
out
add
hlt
dec
push
shlb
enter
push
sbb
int
sub
sbb
mov
push
mov
jl
sbb
pop
and
hlt
mov
mov
addb
cmpsl
inc
push
imul
outsl
stos
ss
cwtl
add
stc
and
roll
push
cwtl
cwtl
cmpsl
andb
mov
sbb
cwtl
cmp
into
add
mov
dec
es
fidivl
add
inc
ss
xor
or
mov
cli
xchg
icebp
addr16
jns
jne
push
pop
and
cs
sub
orb
lea
cwtl
adc
bound
jl
lods
xchg
inc
clc
push
pop
fidivrl
or
hlt
cmpsb
fildl
xchg
fldt
movsb
test
push
adc
rcrl
test
lock
xor
or
fidivs
gs
pop
hlt
inc
cmpl
dec
popf
mov
sbb
int
xchg
inc
in
mov
cltd
xor
rcrb
lahf
popa
enter
push
mov
sbb
rcr
cmp
or
inc
xor
xor
xchg
push
test
jns
popa
jmp
daa
movsb
xchg
push
lds
mov
je
repz
stc
nopl
popa
cmp
push
xor
subb
jb
sub
mov
cwtl
fwait
xchg
mov
stc
or
cwtl
addb
cmpsl
mov
cmp
js
mov
aam
sbb
inc
sbb
mov
push
mov
or
jb
outsb
mov
cmp
repnz
xor
pop
sbb
arpl
rclb
and
loopne
es
push
lock
ja
stos
bound
int3
sahf
subl
insb
icebp
xor
stos
add
test
cmp
scas
jae
mov
fcmovnb
cs
rcll
jbe
adc
push
call
gs
push
xor
inc
pushf
out
adcl
jp
add
inc
sbb
push
xor
popa
testb
cwtl
jmp
dec
sbb
push
bound
add
mov
xchg
fs
rclb
movsb
or
and
ja
imul
jp
mov
cmc
movb
cmp
jb
push
cmp
xchg
mov
les
jecxz
jmp
xor
rcrl
sub
lods
jns
lea
jl
pop
mov
sbb
dec
add
push
sbb
out
int
movsl
outsl
stos
rcrb
sbb
mov
pop
xor
call
push
inc
push
js
add
in
or
int3
nop
sub
aad
cmpsb
andps
hlt
sbb
movsb
and
sbb
push
inc
sub
rcrl
fcompl
aaa
stos
loopne
dec
xchg
mov
jb
in
and
push
mov
xor
sub
insb
mov
mov
xchg
fbld
in
mov
sub
adc
call
cwtl
outsl
lcall
xor
jno
jno
fisubs
rcl
sbb
push
xchg
pushf
xchg
add
aam
push
push
insl
lods
pop
aad
out
lcall
push
inc
bound
lock
mov
sbb
and
cmpsl
jae
and
sbb
shll
mov
int
push
jl
cmp
mov
faddl
outsb
pop
xor
pop
out
push
sub
push
int
xchg
pop
gs
pop
popf
xor
subl
dec
arpl
push
iret
or
loopne
movsl
dec
fsubrs
or
scas
int
jne
push
jns
add
push
xchg
xchg
out
outsb
cli
sbb
add
add
mov
orl
push
xchg
movsl
mov
lret
sbb
nop
cld
jae
test
cs
lds
push
out
mov
ret
je
mov
xor
cmc
hlt
out
pop
push
fldenv
push
aaa
mov
xchg
jo
ss
ret
push
push
lock
movsl
push
dec
pop
push
xchg
xor
movsl
xchg
inc
mov
adc
pusha
scas
in
sbb
int3
fisttpl
mov
jne
and
and
push
push
jns
pop
add
popf
dec
scas
add
inc
mov
gs
adc
or
movsl
push
mov
shrb
popa
adc
insb
and
push
pop
push
les
fdivs
push
jb
cmpsb
xor
fidivrs
jns
sahf
xchg
shlb
or
aam
and
cwtl
xor
ficoml
imul
and
cltd
pusha
inc
cwtl
dec
out
or
mov
cmpsl
data16
and
dec
test
arpl
push
push
or
int3
popa
dec
sarb
in
pop
mov
cwtl
mov
sbb
hlt
inc
mov
and
sub
andb
aad
xor
cmp
sti
fwait
mov
aaa
dec
loopne
and
and
cmp
sub
les
xor
push
add
push
jae
mov
jae
in
mov
cwtl
push
cmp
test
xor
data16
xor
mov
stos
nop
aad
pop
lds
ja
inc
rol
ljmp
loopne
fsubrs
inc
int3
lret
add
sbb
cmp
adc
shl
stc
popa
dec
lods
es
cmp
dec
or
and
and
lock
outsl
add
addr16
mov
add
mov
xor
mov
cs
repnz
scas
pop
in
aad
cli
dec
cwtl
or
add
jle,pn
int
adc
mov
or
inc
aad
inc
mov
loopne
push
mov
inc
push
cltd
fs
xchg
cmp
lcall
mov
popa
dec
dec
shlb
xchg
mov
stos
inc
mov
xor
loopne
aam
scas
inc
add
stos
dec
push
stos
dec
lds
aam
xor
mov
xchg
add
mov
fs
push
movsb
dec
rorb
cwtl
shll
mov
subb
popa
xor
cwtl
add
add
in
cmp
add
pop
xor
dec
adc
in
and
add
repnz
insb
es
pop
lret
mov
adc
cmp
pop
movsb
adc
test
push
inc
jmp
popf
or
xor
xor
arpl
outsl
mov
repz
mov
or
stos
sbb
push
jne
mov
xlat
sub
outsb
in
ja
xchg
jmp
leave
repnz
inc
lods
repz
jg
xchg
js
in
int3
ljmp
js
shrl
mov
loope
pop
cmpsb
or
lahf
xor
fdivrp
jp
addr16
dec
sbb
les
in
fmull
popa
push
fs
pushf
mov
cld
mov
arpl
pop
inc
cmp
fwait
aad
inc
addr16
or
es
aas
mov
int3
imul
test
in
inc
test
fdivl
push
loopne
push
mov
jae
cmpsb
test
rorl
xor
dec
pop
gs
imul
mov
jl
xor
xor
sbb
add
int3
xor
mov
js
loope
mov
std
jb
inc
gs
dec
cld
mov
cltd
cmp
cmpsb
movsb
add
out
gs
hlt
inc
mov
std
sbb
idivw
sub
jmp
iret
aam
push
in
popf
in
push
stos
jp
dec
lret
cmp
and
cmp
in
push
add
movsl
pop
lret
scas
inc
mov
xor
pop
daa
sub
add
ds
rorb
push
mov
ficoml
xorl
lock
xor
jnp
push
jae
sub
jmp
jo
sbb
xor
loopne
das
lods
pop
ret
dec
mov
inc
mov
xor
or
xchg
js
push
scas
rorb
data16
and
ljmp
xor
mov
mov
xchg
pop
in
push
xor
xor
lods
add
bound
jns
xchg
add
jmp
imulb
imul
cmc
inc
sub
dec
xchg
out
aas
scas
jb
mov
jmp
aaa
cmp
cwtl
sbb
loop
add
mov
les
push
or
push
test
push
cmp
cmp
imul
push
fistps
out
jmp
cli
add
push
pop
cwtl
pop
icebp
add
or
push
cmp
aad
aad
push
cmc
mov
ja
lret
std
xchg
pop
or
sahf
cli
or
lea
scas
push
icebp
iret
out
jg
lret
cli
sub
mov
xor
xchg
out
push
mov
mov
cmp
add
sub
shlb
lahf
sbb
jl
push
cmc
jg
push
popf
jg
cld
inc
add
xlat
adc
pop
pop
or
or
std
mov
pop
adc
popl
pop
bound
xor
pop
clc
sbb
repz
add
push
push
pop
notl
pop
cs
jnp
add
dec
in
jge
idiv
dec
pusha
or
pop
inc
js
sub
js
and
cmp
push
lret
sub
xchg
mov
xchg
adc
mov
shrl
xlat
sti
push
ret
sbb
pop
rep
outsb
jne,pt
insl
stos
imul
jmp
in
lods
das
push
push
jne
out
in
jge
mov
mov
mov
stos
loop
clc
stos
mov
sub
iret
lret
xlat
sbb
shrl
or
cld
outsl
cmc
das
ljmp
pop
sub
fists
in
jne
daa
sub
mov
adc
push
jo
pop
stos
sub
cmpsl
jmp
sti
add
mov
sub
push
pop
repz
lret
pop
lcall
ret
xchg
aas
adc
test
mov
mov
adc
movsb
dec
or
mov
mov
adc
mov
jo
shlb
mov
pop
and
lock
adcb
rcll
inc
and
jo
add
inc
sub
inc
or
orb
lock
or
sub
lds
je
enter
pop
mov
mov
mov
stos
mov
movsl
scas
push
ds
stos
push
inc
sbb
sbb
and
lds
add
mov
hlt
mov
sbb
mov
jmp
push
or
nop
or
push
leave
stos
push
test
stos
push
imul
push
or
push
leave
test
push
mov
push
dec
test
push
or
push
leave
test
test
test
imul
dec
popa
push
sub
movb
lds
jge
sti
fs
ds
push
movsl
shl
out
fsubrl
mov
stos
subl
xlat
scas
std
lret
xlat
testb
cmc
cmc
sbb
iret
add
lds
add
les
xchg
out
and
pusha
fistpll
cmp
cmpb
push
lods
aas
and
cltd
push
es
outsb
dec
fs
dec
in
inc
gs
cld
push
out
mov
pop
stos
sub
mov
arpl
out
pushf
xchg
fbld
add
or
or
xor
pop
or
and
je
jo
inc
jg
xorps
push
jg
xchg
pop
loopne
jp
orl
jmp
rorb
sbb
stos
les
lcall
arpl
data16
xchg
iret
loope
call
divl
lret
mov
lret
cwtl
in
mov
jae
pushf
pop
or
shlb
push
scas
fdivrs
ja
mov
push
int
cmp
mov
push
and
pop
add
jnp
inc
sbb
jg
out
in
inc
popa
ror
enter
sub
mov
pusha
jmp
push
ror
rolb
xor
dec
mov
pop
xorl
pop
adc
push
int3
mov
jbe
cs
push
insb
or
shl
inc
mov
ljmp
movb
push
cwtl
push
lods
rclb
lcall
jmp
shll
into
enter
or
cmp
mov
into
sbb
test
mov
push
dec
adc
pop
or
lahf
rcrl
push
lock
cmp
jns
push
das
sbb
add
sbb
data16
push
jmp
mov
or
push
mov
cmp
push
jae
fisttpl
mov
mov
adc
out
add
lea
sub
add
mov
filds
xchg
inc
shlb
je
jmp
mov
xlat
jne
loope
movsb
pusha
dec
xor
mov
es
std
out
test
mov
lcall
mov
dec
pusha
push
lods
push
pop
bound
push
leave
int
mov
mov
arpl
ret
mov
stos
sub
inc
out
aam
push
or
sbb
xchg
fcmovnu
test
ljmp
adc
int3
xchg
mov
popf
or
dec
or
enter
add
inc
xor
lods
dec
mov
jno
sahf
shl
xchg
adc
pop
push
ret
and
scas
add
and
add
es
insl
ret
inc
rcl
or
les
jmp
faddl
pop
testb
aad
inc
clc
jno
mov
pop
sbb
inc
popa
repz
xor
dec
add
inc
lret
dec
xchg
mov
sub
add
add
add
add
add
add
adc
and
lahf
sub
arpl
add
test
mov
pop
mov
jne
jae
adc
mov
movsl
pop
idivb
fisubrs
and
adc
inc
add
adc
cmp
add
ja
xchg
nop
push
jo
xor
push
outsl
pop
stos
adc
mov
pop
dec
pop
add
sbb
test
test
mov
sub
or
xchg
and
aad
xor
pushf
or
or
enter
sti
ds
and
out
add
and
add
add
add
lock
and
sti
xchg
es
dec
paddw
or
xchg
xchg
cmc
repnz
lret
and
lock
shl
mov
and
cmp
mov
adc
test
xor
repz
inc
pop
incb
lock
daa
inc
cmp
lea
call
mov
inc
scas
add
jp
mov
push
jb
adc
adc
jecxz
pop
mov
cmp
test
movhps
cwtl
je
inc
popa
fidivrs
inc
lods
inc
pop
jb
sbb
bound
test
jmp
pushf
outsl
cmpsl
adc
sar
call
andb
cmpsl
push
lcall
dec
mov
inc
mov
cli
mov
out
cmp
in
add
xchg
mov
jnp
aas
push
add
aad
inc
pop
pusha
shl
lea
adc
loop
in
and
xchg
in
sbb
sbb
mov
cmpsl
add
mov
lea
mov
test
rcll
imul
xlat
jnp
pop
push
add
cld
or
inc
mov
cmp
adc
insl
shl
xor
jle
hlt
sbb
push
test
test
mov
mov
or
jns
or
movsb
je
clc
ret
orb
stc
xorl
fdivrl
inc
sbb
ja
adc
jmp
cld
sbb
push
mov
aam
or
adc
mov
and
push
mov
jb
jnp
push
jnp
dec
pop
into
mov
pop
ret
out
mov
dec
cld
xor
xchg
es
and
fadds
clc
xor
sbb
sub
jecxz
cmp
pop
imul
add
pop
subb
mov
push
stos
inc
mov
pop
test
or
inc
pushf
dec
push
aam
cmp
fstpl
push
push
sub
mull
fwait
xor
icebp
loop
subb
dec
cmp
mov
push
scas
jmp
movsb
and
outsb
xchg
cld
sub
mov
or
add
mov
aas
sub
sti
repz
fsubrs
movl
cmp
mov
int3
xchg
faddl
outsb
and
iret
lcall
or
imul
call
push
sti
pop
rol
subb
adc
lods
into
add
dec
out
fs
enter
jnp
mov
pop
int3
ret
xchg
mov
in
orl
cltd
rcl
xor
cmc
pop
xchg
fisubrl
xor
nop
jae
loope
fisubl
mov
cmpsb
mov
fs
and
mov
mov
aas
aaa
push
and
loop
cmp
out
lock
negb
pop
pop
dec
jg
adc
packuswb
xchg
aas
or
lahf
aaa
or
mov
aam
add
mov
or
cmpsl
rol
dec
or
inc
mov
push
dec
jg
out
cwtl
xor
or
sub
aaa
dec
adc
jecxz
clc
in
dec
add
movsb
lcall
xor
mov
subl
loop
cmp
fsubrl
push
andl
clc
into
inc
inc
and
shll
bound
cmp
or
mov
lods
test
addl
je
cmp
mov
fdivrs
fisubrl
ja
loopne
lret
push
push
dec
lcall
dec
mov
push
test
mov
outsl
shll
out
sbb
pop
pushf
sub
jne
cmp
mov
sub
and
and
jle
jp
arpl
push
nop
mov
add
mov
inc
sub
add
test
xchg
inc
jnp
pop
imul
sarl
divl
fists
xchg
pop
mov
pop
cmp
je
xlat
lods
adc
mov
push
fdivrl
push
and
mov
adc
sub
movsb
ret
mov
std
lea
inc
rorl
and
pushf
cmp
das
scas
and
dec
cmc
outsb
or
push
out
or
adc
das
inc
setbe
out
daa
mov
lods
xor
xor
bound
mov
setbe
lds
sbb
gs
pop
dec
test
cs
mov
mov
sbb
addl
mov
loop
dec
popa
jmp
pop
fstpt
ds
mov
jle
push
hlt
lods
cmp
in
daa
cmp
imul
adc
packssdw
and
push
outsl
fcoml
mov
pop
clc
xchg
mov
pop
cld
movsl
cs
inc
scas
fdivl
lret
lret
inc
gs
enter
clc
and
jmp
sbb
xchg
mov
sbb
andl
lahf
xchg
and
out
jmp
mov
push
lcall
jbe
mov
xchg
stc
jnp
pop
xor
scas
aaa
cmc
out
adc
das
sahf
push
sub
xor
hlt
insb
lock
lcall
addl
push
pop
lods
mov
jg
out
add
push
mov
adc
and
cmp
fbstp
les
addb
nop
aam
in
scas
int
sbb
push
push
int3
cmpsl
add
enter
or
inc
stc
orl
insl
cmp
push
in
sub
movsb
jle
test
mov
mov
add
push
in
daa
xchg
lds
pusha
and
mov
push
push
notb
popa
jne
adc
mov
sub
and
pop
repz
cmp
mov
sbb
xchg
mov
pusha
int3
sbb
cltd
scas
adc
jne
std
jns
fistpll
sub
je
mov
nop
addl
das
fistpll
inc
test
iret
cs
mov
and
jle
or
cmp
adcb
lock
mov
mov
out
out
mov
mov
pop
fnsave
jns
dec
pop
outsb
cmp
xlat
xlat
mov
sbb
pop
adc
mov
mov
movsb
jae
call
sub
mov
cmp
push
movsb
lds
or
hlt
mov
push
jne
das
insl
jns
mov
add
decl
push
jns
out
lcall
push
dec
int3
adc
imul
adc
dec
loop
sub
sub
pop
dec
mov
icebp
add
in
loopne
jns
or
loop
pop
sub
inc
sub
ljmp
bound
xchg
scas
mov
bound
xchg
push
jmp
and
loop
xchg
push
mov
pop
xor
imul
mov
add
mov
push
or
and
add
pop
xor
mov
cmpb
inc
lea
lds
xchg
dec
bound
cmp
pop
lods
sbb
mov
imul
xchg
test
mov
mov
negl
jp
sub
inc
je
adc
pop
mov
fs
sub
mov
scas
jl
sbb
adc
cmpsb
addb
pop
shl
ja
xchg
rcll
cmp
pop
inc
jmp
sbb
gs
pop
pop
sub
and
push
and
out
call
mov
jbe
add
jle
inc
push
or
xor
jnp
aam
jmp
fsubrp
jae,pt
mov
cltd
cmp
inc
adc
mov
repnz
sbb
lret
push
sub
outsb
movsb
insb
xor
hlt
inc
inc
xor
pop
ss
aas
iret
repz
and
push
pop
sub
pusha
repnz
lods
adc
scas
pop
or
mov
lds
and
jbe
jns
mov
mov
int
je
pop
fs
pop
aam
test
daa
jo
pop
cmp
jne
jns
sub
sar
scas
orl
cmpsl
out
xchg
dec
leave
insb
xchg
ds
mov
out
add
sub
test
lds
outsl
pop
idivb
inc
mov
ret
fldcw
mov
in
test
xchg
mov
inc
jge
cwtl
popl
xchg
mov
lods
mov
jge
insb
mov
imul
iret
xchg
cwtl
mov
mov
pop
mov
add
or
mov
es
out
sbb
fucom
call
shll
jecxz
int
movsl
adc
pop
push
cmp
mov
lea
pop
push
loope
inc
xchg
jmp
stos
movsb
adc
pop
push
or
pop
stos
out
das
pusha
xchg
clc
js,pt
jb
lods
and
insl
hlt
aad
sbb
incl
mov
mov
dec
test
jns
mov
clc
cmp
mov
mov
adc
mov
or
daa
mov
fsubrs
push
push
orl
bound
inc
ss
push
cmp
sqrtps
mov
or
mov
dec
rorl
xchg
jmp
sahf
jb
cwtl
lea
pusha
mov
xchg
mov
inc
loope
outsb
lret
adc
inc
mov
loopne
lods
das
ror
pop
shlb
cs
repnz
ffreep
lock
jge
jmp
fsubrs
add
push
cwtl
add
xchg
adcb
push
sub
jmp
pop
fisttpll
cs
sbb
adc
out
or
sub
add
xchg
cmpsl
pop
mov
call
in
inc
mov
inc
insl
or
push
mov
or
mov
add
sarl
mov
sbb
sbb
cmpsl
pop
inc
fmull
adc
movsb
js
pop
nop
or
lea
pop
xchg
inc
and
adc
nop
pop
dec
mov
cmc
fimull
jecxz
jmp
push
push
aaa
sub
out
addl
call
cwtl
xor
cld
jle
rcrb
incl
push
lods
pop
hlt
hlt
jbe
add
xor
ret
jne
lahf
ds
ret
cli
cli
sub
xchg
out
and
rorl
xor
sahf
push
orl
pop
into
lods
aaa
sbb
jae
adc
mov
je
adcl
push
sbb
jbe
sub
jns
addr16
data16
push
orb
cli
in
add
lret
sub
pop
inc
mov
mov
jnp
jns
jp
mov
clc
xor
inc
add
add
mov
lods
lret
cmpsb
test
insl
jno
arpl
lret
in
mov
push
mov
test
aas
jno
movsl
xor
push
jge
sub
jae
cld
iret
mov
pop
add
pop
mov
xor
cmp
xor
imul
mov
cmp
push
dec
jne
lock
lock
dec
adc
pop
pushf
push
insb
andb
mov
mov
imul
mov
aas
mov
sti
pop
lret
fs
add
mov
jne
loop
ret
clc
mov
jae
pop
or
pop
inc
mov
popa
add
jae
dec
cmp
mov
adc
cmpsl
aas
in
into
movsl
fwait
repnz
adcl
loopne
push
or
ljmp
test
aam
lahf
sub
lcall
jno
std
into
and
int
cwtl
add
aas
xchg
jno
out
mov
push
xchg
add
sub
add
pop
inc
mov
addr16
lock
jne
loopne
pop
rcr
lock
into
dec
mov
loopne
dec
xor
cmp
lds
in
out
add
push
imul
push
add
mov
dec
je
enter
mov
mov
jae
gs
negb
pop
shrl
lahf
dec
adc
mov
repnz
inc
sar
out
lds
jo
push
cmpsb
jl
jno
dec
jo
push
mov
inc
mov
and
xchg
xchg
int3
add
pcmpeqd
pop
data16
and
fsubrl
lcall
testl
not
jb
mov
inc
das
cltd
or
std
push
lods
xchg
fsubs
adc
push
fldt
ret
inc
pop
inc
add
inc
cli
jge
xor
pop
scas
jae
mov
mov
movl
inc
scas
and
mov
andb
adc
shrb
jmp
adc
xchg
jg
andb
sub
add
xor
push
and
jnp
in
stos
or
sbb
in
fldl
mov
ljmp
cmp
xchg
pop
out
js
mull
push
arpl
mov
cmp
fistpll
xchg
ja
jbe
int
mov
xchg
mov
fs
loope
in
icebp
nop
add
sbb
inc
mov
push
cwtl
ds
push
inc
jmp
push
sbb
ret
icebp
xchg
lds
hlt
push
cmp
dec
inc
push
repz
iretw
sbb
jno
jge
xchg
mov
pop
jne,pn
or
and
mov
and
cmp
inc
clc
cmp
mov
jl
sysexit
mov
push
jne
dec
outsb
pushl
je
fadd
lods
mov
cmpsb
jae
stos
insb
adc
jbe
insl
pushf
mov
xor
orb
xchg
pop
iret
ja
dec
lret
ret
imul
cwtl
jb
inc
sbb
jmp
les
aas
jnp
mov
js
popa
arpl
inc
xor
call
mov
sarb
push
in
lea
scas
test
outsl
pop
xor
add
pushl
dec
addr16
int3
scas
orb
jp
jnp
jbe
push
nop
jb
adc
jl
ds
xor
dec
into
ja
repnz
xlat
pop
cld
inc
aam
xchg
lds
jmp
mov
add
aam
filds
mov
stc
loop
pop
mov
lods
arpl
cld
jo
pop
add
jmp
lea
jp
icebp
sarl
xchg
push
and
mov
jno
jo
xchg
das
pop
mov
mov
test
fidivs
inc
xchg
scas
mov
pop
add
add
sti
cwtl
mov
sti
addr16
xchg
rorb
add
xor
jb
or
pop
jbe
stos
mov
and
outsb
fdivrs
pop
dec
sub
jbe
test
jns
fcmovbe
repz
jl
hlt
mov
jle
cmp
fwait
lcall
jnp
inc
cmp
mov
or
push
pop
adcl
sbb
dec
and
out
mov
push
clc
int3
fwait
push
xorl
push
xor
mov
mov
and
pop
pop
xor
inc
ficoms
mov
packsswb
xor
push
sbb
xchg
out
popf
jnp
mov
pop
addr16
sti
in
inc
out
adc
idivb
mov
dec
mov
sub
jge
cmp
xchg
inc
push
xor
adc
dec
daa
add
inc
call
cmp
imul
repz
fildll
imul
insl
pop
sbb
ret
inc
jle
push
push
xor
fidivl
clc
jmp
xchg
push
cwtl
addr16
pop
mov
mov
cmp
lret
cmpsb
dec
mov
mov
icebp
push
mov
inc
ss
cmp
cwtl
sarb
lahf
pop
cld
inc
cmp
lahf
sbb
lret
ja
sete
jge
push
in
nop
pop
inc
push
mov
jne
mov
rolb
pusha
int3
iret
fwait
push
inc
cmc
mov
inc
cmp
mov
inc
loope
sub
pop
icebp
push
insb
out
jg
imul
push
sub
icebp
push
inc
xchg
jns
jmp
and
mov
dec
add
mov
ljmp
std
xor
or
xchg
loopw
jecxz
xchg
xchg
inc
adcl
xchg
out
sahf
mov
pop
cwtl
and
and
cmp
push
shrl
adc
or
mov
dec
jae
fs
xchg
jnp
xchg
aam
pushf
mov
pop
inc
cmp
push
ret
pop
mov
xchg
in
sub
mov
movsl
push
adcb
lock
test
lret
add
aad
and
test
dec
lods
jnp
ret
sbb
push
pusha
rcll
xchg
lret
jecxz
xorl
sub
dec
enter
lea
sti
stos
dec
mov
inc
mov
mov
or
sub
das
ss
lods
loope
daa
xchg
or
xor
jno,pt
fidivrl
xchg
add
mov
hlt
cltd
and
cmp
jae
xlat
sahf
sbb
adc
shr
std
cmp
js
mov
add
rcr
push
dec
pop
sbb
outsl
push
sub
cmp
psubusw
loop
lcall
pop
cli
dec
lock
jg
mov
pusha
mov
lcall
in
mov
cmp
movsl
push
ret
cmpsl
mov
popa
push
movsb
ljmp
aam
out
rcrb
xchg
imul
ja
dec
mov
test
push
pop
jmp
push
lods
dec
fisttps
xchg
jp
cltd
mov
sbb
test
in
scas
inc
mov
sbb
xchg
aad
sbb
outsl
imul
dec
cld
nop
mov
pop
fsubr
lds
clc
fstpl
test
pop
mov
scas
push
iret
pop
xchg
xor
lret
fstp
mov
pushfw
fldenv
mov
mov
fcoms
mov
xor
and
pop
dec
loopne
xchg
jb
push
mov
adc
xor
jg
mov
jg
inc
mov
inc
fcomp
in
adc
gs
cmc
insb
add
cltd
jbe
jp
or
fisubl
fidivrs
mov
hlt
mov
stos
insb
push
mov
push
mov
hlt
repnz
mov
push
push
pop
sar
inc
sbb
add
inc
add
lds
lods
push
in
lea
jbe
and
stos
xchg
movsl
pop
into
outsl
push
iret
xor
aas
in
and
call
pop
pop
lahf
in
xlat
sbb
ficompl
push
push
push
pop
sub
adc
lret
mov
dec
cld
lock
loop
sub
mov
cmp
in
insb
push
in
inc
pop
popf
mov
sahf
pop
ja
stos
js
loope
inc
xlat
lock
mov
outsb
imul
sub
jg
mov
or
or
sub
ja
loopne
rorb
mov
xchg
test
lea
imul
xor
jae
mov
stos
pop
push
loope
pop
pusha
mov
ljmp
lcall
aam
aas
sbb
adc
jae
in
lods
cmc
mov
jne
adc
push
ret
inc
fistpll
inc
les
mov
jno
stos
dec
arpl
jmp
pop
hlt
lock
and
cmp
ljmp
sub
add
cs
dec
stos
mov
divb
pushf
cmpb
inc
push
push
pop
sbb
popa
inc
out
out
sbb
adc
gs
out
pop
sbb
stc
adc
outsb
cmc
es
push
js
cld
nop
clc
pop
push
hlt
outsb
pop
in
repz
pop
pusha
sbb
mov
test
cli
cmpsl
push
leave
ss
mov
dec
mov
or
xchg
mov
test
cvtpi2ps
xor
loope
xlat
sti
mov
sub
and
xor
pop
jb
sbbb
popa
stc
mov
or
hlt
imul
sahf
push
push
sbb
cmp
test
stos
mov
sub
pop
iret
subl
or
and
les
rcrb
test
arpl
inc
lods
stos
dec
stc
rcrl
ss
fldl
jg
push
dec
popf
jmp
loopne
aam
es
andl
mov
fmul
ret
data16
cmp
mov
mov
xorb
loopne
std
imul
jge
cmp
adc
into
push
xor
out
push
in
pop
call
mov
std
sbb
dec
xchg
pop
loop
pop
daa
std
outsb
cld
pusha
clc
inc
cmp
sbbl
cmp
fwait
mov
popf
pop
or
repz
data16
mov
jecxz
adc
das
ljmp
in
add
jp
fdivs
icebp
mov
mov
lea
insb
pop
or
add
xchg
cmp
xchg
ss
pop
mov
push
jl
stos
xchg
jbe
jno
pop
stc
sti
mov
xor
cmp
mov
sbb
mov
dec
sub
mov
jo
imul
in
pop
mov
cmp
push
mulb
lahf
lea
stc
sti
inc
xor
aas
sbb
mov
lret
cmp
insl
aaa
push
push
push
cmp
sbb
ret
cld
inc
push
imul
imul
pop
xchg
push
fwait
ljmp
xchg
mov
xchg
neg
sub
sub
pop
aaa
andb
enter
dec
cmp
cs
push
rcr
stc
dec
clc
xchg
pop
imul
ja
xlat
stc
jno
icebp
rcr
pushf
outsb
mov
lret
lret
xchg
jge
movsl
jne
cltd
push
ret
movl
jno
xor
jl
ret
xor
add
mov
inc
pop
push
cmp
popa
push
cli
dec
out
and
test
bound
sbbb
jl,pt
pop
pop
or
pushf
dec
adc
pusha
mov
hlt
rcrb
mov
icebp
lret
adc
shlb
or
inc
dec
imulb
lods
and
xor
imul
inc
je
xchg
or
mov
add
fiaddl
pop
jbe
xor
sbb
or
in
shlb
pop
inc
cmp
sub
jle
mov
aas
aaa
jo
test
jle
mov
dec
cmpsb
push
stos
xor
mov
js
mov
or
imul
add
dec
sub
pop
clc
nop
getsec
adc
pop
ret
or
xchg
sub
or
sbb
mov
xor
push
jns
test
mov
cmp
xchg
test
cmpsb
pop
push
push
or
pop
shr
inc
fildll
push
dec
lock
dec
fisttpl
loopne
jmp
push
sub
xlat
fbstp
push
sub
fcmovne
inc
aad
decb
clc
mov
dec
xlat
pop
mov
lods
mov
or
jno
lock
and
dec
inc
jge
mov
sbb
jl
negl
lods
mov
pop
arpl
fldenv
xchg
insl
pop
divl
jg
addr16
outsl
repz
fistps
aas
fisttpl
jl
pop
push
pop
aam
ret
fildl
cli
mov
lcall
xor
sahf
and
pop
add
add
ds
lcall
pusha
call
cmp
movsl
imul
mov
push
mulb
stc
std
cmp
jns
iret
arpl
push
mov
out
rcrb
rcrb
idivb
cmc
mov
xchg
adc
add
jp
mov
mov
push
mov
loop
push
fwait
rolb
adc
pushf
push
or
mov
jbe
mov
stos
lock
fisubrs
out
subb
bound
jno
mov
and
add
mov
sbb
jge
inc
test
fwait
sbbb
push
inc
fmull
stos
roll
xchg
pop
ret
dec
cmp
dec
sub
dec
mov
lea
inc
mov
enter
dec
fdivrl
push
dec
imulb
decb
or
sub
bound
sub
out
into
or
gs
push
jle
inc
add
in
xor
mov
xchg
sbb
insl
sub
inc
nop
daa
xor
aam
lods
dec
or
push
imul
clc
push
loope
movsb
ret
pop
dec
jo
sub
push
or
clc
adc
pop
test
out
sub
mov
cmp
out
nop
hlt
inc
jp
add
js
hlt
jge
cmp
cli
jno
mov
sahf
fistpl
push
pop
lods
mov
mov
xchg
imul
xor
sub
ret
out
sub
xor
adc
out
pop
add
sbbb
fcompl
hlt
ds
fistps
lea
aad
cmp
imull
or
addr16
loope
pop
sahf
arpl
adc
scas
mov
loop
and
lret
push
mov
sub
mov
add
pop
mov
add
push
outsl
test
dec
push
lds
test
jnp
pop
adc
rcrb
mov
mov
pushf
sub
jbe
mov
jb
or
sub
cmp
push
cwtl
clc
das
ss
dec
sti
incb
adc
sub
sbb
popf
iret
sub
adc
fsts
fwait
xor
test
xchg
cmp
sub
adc
or
lods
mov
or
jle
divl
jg
imulb
cmp
dec
sarb
sbb
jg
aam
lods
ucomiss
pop
xchg
xor
inc
popf
push
ss
push
xor
es
jb
jnp
hlt
push
mov
lods
enter
mov
mov
pop
hlt
scas
aaa
and
pop
lahf
scas
ds
and
out
cmp
ficoml
mov
into
adc
xor
pop
mov
ret
inc
enter
push
push
sub
xchg
sub
insl
jge
out
sbb
push
popa
dec
dec
aas
jo
mov
fstpl
into
fadd
dec
call
fistl
enter
cmpsb
push
pop
icebp
lods
add
mov
push
pop
hlt
xchg
in
xchg
mov
in
inc
add
out
into
xlat
push
jp
cmp
dec
movsl
adc
leave
mov
fidivrl
dec
data16
imul
pop
sub
popa
dec
mov
shlb
pop
add
fsubrl
mov
sub
leave
in
mov
adc
jbe
out
inc
call
jns
shrb
js
pop
fwait
mov
dec
lahf
xlat
loope
les
push
stos
call
xchg
jnp
lock
inc
call
out
test
jo
xor
cld
xchg
adc
fstl
fldcw
sbb
aam
add
int3
xor
in
sub
test
mov
loop
mov
jmp
xor
dec
rorb
mov
hlt
cmpsb
and
mov
inc
test
shlb
es
mov
xchg
sub
sub
insb
cmp
mov
inc
mov
sub
stos
push
jno
fidivrs
jmp
outsb
inc
pop
mov
sbb
and
loopne
ds
mov
xchg
pop
movsl
inc
cli
pop
or
cmpsb
subl
inc
mov
stc
repnz
mov
xor
outsl
pusha
push
setno
subl
aam
cmpsb
sub
jmp
sbbl
pop
out
pop
push
mov
pusha
std
adc
xor
pop
fcom
int
shr
sbb
and
inc
adc
adc
or
sbb
das
pop
push
dec
fisttps
movsl
jle
xor
cmpsb
fldt
xchg
mov
cs
dec
dec
inc
inc
repnz
cld
ds
lock
cmp
sub
jge
xorb
loopne
inc
out
jnp
mov
add
cmp
movsb
outsl
pop
add
icebp
fsubrs
loope
shlb
or
pop
adc
mov
scas
lea
add
dec
ret
nop
inc
scas
add
and
idivl
test
mov
nop
loopne
cmc
xor
and
lds
fwait
pop
pop
bound
sub
aad
pop
ljmp
inc
ljmp
xchg
cmp
ret
pop
leave
mov
cmp
std
or
xlat
pop
add
push
das
dec
push
pushf
add
repnz
popf
mov
arpl
in
lret
mov
aaa
push
lcall
inc
jns
ret
ja
sub
cli
loope
lock
icebp
iret
fisttps
test
in
int3
jo
push
fwait
push
daa
ret
pop
lea
sti
push
inc
stc
mov
xchg
jge
inc
xor
lds
fidivs
push
cmp
push
out
add
mov
cmpsl
mov
inc
movsb
call
ret
sub
pop
mov
ds
mov
xchg
xlat
mov
test
les
insb
sub
cld
sti
out
add
push
movsl
and
push
mov
icebp
mov
fdivrl
mov
sti
dec
sbb
xor
mov
clc
push
test
mov
dec
insl
es
movsb
mov
mov
jae
pop
cltd
xor
mov
lods
jo
daa
orb
pop
fldl
sbb
int3
inc
test
je
adc
cmpsl
imul
jo
mov
jl
mov
in
loope
push
loop
mov
and
es
sub
movsb
or
jns
movsl
pusha
ljmp
outsb
aas
pop
mov
stos
pushf
mov
xor
and
roll
push
out
sub
pushf
inc
fs
fsubrs
jmp
jl
cmp
cmc
xor
xchg
add
jne
mov
mov
mov
and
jg
icebp
jge
mov
pop
sar
cs
popf
cmc
xor
inc
popa
push
cmp
sub
lret
ljmp
sub
out
mov
push
fstps
mov
mov
push
fbstp
inc
jo
fwait
lahf
lods
push
repz
clc
loopne
rcl
jo
stc
push
xor
push
pop
dec
mov
cmp
ss
sbb
scas
cmp
out
sub
in
mov
int
jnp
inc
xlat
movsb
rcrl
out
pushf
jne
arpl
cmp
pop
rcll
pop
enter
adc
or
and
xchg
jle
push
adc
aaa
and
inc
mov
inc
fnstcw
dec
sub
aad
lahf
das
lcall
lock
cmp
mov
pop
push
or
inc
mov
cmp
mov
push
adc
mov
jle
in
lahf
loopne
int3
je
test
and
stc
mov
mov
jbe
shlw
push
lret
mov
out
lock
sbb
or
push
out
sbb
frstor
xor
jge
lea
das
mov
andb
sbb
sbb
je
test
mov
imul
in
sahf
test
iret
push
test
sbb
into
cmp
arpl
push
add
das
out
jge
sbb
dec
loope
add
gs
or
jmp
xor
lock
popa
out
fwait
xor
sub
mov
pop
repnz
dec
sbb
mov
daa
lock
ja
outsb
inc
dec
jmp
bswap
pop
mov
jg
lcall
inc
push
xorb
fninit
pop
out
repz
xor
jno
inc
not
sub
repnz
ljmp
push
xor
xchg
mov
mov
ljmp
push
inc
mov
rclb
sub
fisubrl
aas
pop
inc
leave
lret
in
rcrl
xchg
or
int3
pop
ret
clc
mov
push
int
xlat
jl
or
jne
push
sahf
add
ret
icebp
ret
fucomp
lret
call
int3
fdivrs
cli
push
pop
daa
outsb
pop
clc
sahf
sarl
in
icebp
cltd
sti
test
cmpsb
jp
iret
fs
fstpt
loope
fstpt
lock
mov
jmp
mov
mov
push
mov
iret
das
bound
aaa
out
loopne
jl
inc
pop
inc
sbb
loop
push
mov
clc
nop
pop
pop
dec
mov
fwait
mov
and
mov
test
repz
xor
mov
sbb
jo
cmp
mov
ljmp
stos
xchg
push
jecxz
adc
insb
clc
mov
jno
xchg
arpl
push
jle
sarl
in
jp
mov
bound
mov
lahf
jo
mov
pop
dec
push
mov
sub
cmp
jns
pop
mov
dec
dec
in
push
sbb
adc
sub
adc
fs
out
pop
fisttpll
push
and
mov
mov
cld
mov
imul
loopne
leave
mov
inc
pop
add
iret
js
xchg
xchg
cmp
sbb
push
cmp
bound
dec
sub
pop
mov
sub
sub
hlt
jb
shll
movsl
inc
scas
cmc
xchg
mov
push
mov
mov
pop
xchg
fldenv
mov
jecxz
xlat
hlt
pop
pop
adc
stos
jb
popf
fld
mov
jl
imul
mov
mov
bound
jle
pop
dec
inc
mov
sub
cmpsb
adc
push
mov
in
lcall
xchg
fwait
andl
inc
xchg
test
mov
mov
xor
jns
ds
and
or
mov
inc
aaa
sahf
pop
xchg
xchg
xor
test
call
pusha
pop
dec
or
fdivs
cwtl
sbb
loop
das
jo
in
and
test
inc
mov
adc
mov
xchg
adc
movsb
sub
ljmp
cmpsb
pop
push
loope
xchg
adc
push
scas
data16
push
in
xchg
das
stc
adc
push
xchg
lahf
idiv
fs
adc
sbb
dec
lock
push
mov
jge
addr16
fucomp
repnz
jge
dec
sub
arpl
cmp
scas
pop
add
add
lods
jl
cltd
imul
mov
sub
test
xor
pushf
adc
testl
mov
sub
xchg
dec
pop
inc
mov
mov
out
jecxz
sub
fstps
pop
je
shrl
ror
inc
stc
inc
mov
in
movsl
fdiv
sub
subb
js
fisubrl
out
and
pop
outsl
inc
imul
jmp
inc
rcrl
xchg
mov
xchg
in
add
push
and
js
jmpw
cmc
ror
mov
sbb
ret
stos
pop
sarl
xchg
mov
mov
andl
add
das
addr16
mov
aaa
movl
mov
pop
push
insl
sub
mov
push
mov
lods
test
scas
pusha
cmp
out
mov
mov
pop
lds
cltd
mov
push
test
and
jo
and
sarb
jl
fiaddl
lods
dec
jnp
dec
and
mov
pop
ret
xor
loopne
add
fisttps
mov
insl
loopne
inc
cmp
sbb
xchg
push
xchg
clc
loop
stos
or
inc
xor
mov
nop
shll
xor
test
adc
pop
pop
xchg
insb
mov
mov
into
xchg
dec
mov
rolb
out
cld
dec
insl
sbb
xorl
push
scas
dec
pop
push
sbb
insl
adc
push
lods
movsb
add
mov
ret
mov
inc
pop
jmp
loop
jb
pop
add
imul
out
sti
cmpsb
je
pushf
jno
sub
es
dec
aaa
loopne
das
fmul
xlat
pop
inc
mov
leave
ficompl
mov
push
aam
jle
pop
sub
mov
mov
pushf
ret
call
and
in
testb
and
or
lret
je
ficomps
subl
and
subl
jo
sub
push
jp
ret
es
xchg
insl
sbb
pop
cld
je
mov
fs
rolb
jg
dec
mov
lret
js
cmp
fs
xor
aam
cmc
mov
pop
xlat
test
scas
jnp
sbb
mov
je
inc
sub
stos
clc
loope
call
cltd
sbb
sbbl
push
lock
pop
loop
or
pop
and
push
add
loop
pop
sbbb
leave
cmpsb
pop
jb
adc
or
je
cltd
mov
les
stos
mov
ret
mov
sub
test
sub
mull
cmp
xchg
aam
add
or
push
loop
push
sub
cmc
pop
orl
dec
mov
push
cmp
int3
incb
pop
and
or
jg
mov
imul
xchg
fnsave
xchg
add
fsubrs
push
pop
int3
lds
shll
bound
jne,pt
inc
jle
adc
pop
inc
pop
or
pop
test
shll
jne
xchg
cmp
nop
xchg
push
mov
jns
and
adc
jle
jne
cli
ror
lea
xchg
mov
movsl
lds
sub
dec
sarb
jmp
jge
mov
mov
cld
iret
loope
out
ds
push
ret
and
mov
inc
repz
rclb
xchg
pop
dec
testb
das
aad
jge
mov
int
fisttpl
adc
push
push
aaa
dec
mov
jnp
pop
push
push
scas
out
jmp
mov
test
lds
stos
push
popa
mov
dec
xor
fmull
push
xor
inc
dec
xchg
mov
and
or
jle
xchg
or
sub
push
cwtl
icebp
xor
push
sbb
out
lock
sub
dec
dec
lahf
xchg
push
lods
imul
scas
xchg
je
js
mov
iret
movsl
pop
aad
lods
sahf
sarl
push
sub
adc
inc
push
or
pusha
mov
call
outsl
pop
sbb
bound
test
pusha
popa
jae
jmp
xlat
jne
sub
addl
sarl
fisubs
out
fcomip
add
add
xchg
daa
roll
popf
adc
mov
movsl
push
sbb
fnsave
sbb
push
mov
and
pushf
mov
inc
aam
mov
lods
gs
xor
in
aam
mov
stos
in
loop
test
sub
adc
or
dec
add
movsl
insb
lock
xchg
stos
repz
push
adc
test
loop
icebp
jle
mull
sub
sub
fnstsw
in
ss
stos
jmp
mov
or
dec
aad
leave
loopne
lcall
jbe
lea
push
mov
mov
outsl
test
lock
jns
inc
inc
aad
int
fisubs
rorb
rolb
pop
fisubs
cltd
add
and
insl
pop
xchg
call
push
mov
insb
int3
sub
int
je
fmull
pusha
lret
adc
test
rcrl
imul
es
jb
push
mov
ds
sahf
jp
xor
hlt
cmp
out
mov
hlt
movb
sub
les
ljmp
xlat
outsb
xlat
mov
lahf
mov
jnp
fldt
mov
stc
add
pushf
lahf
xchg
pop
aad
ret
stos
dec
cltd
or
lret
mov
bound
jge
mov
lods
xlat
lock
mov
jl
loope
adc
test
cmp
adc
sbb
or
repz
xchg
or
mov
xadd
pop
mov
mov
shr
mov
ficoms
rorb
adc
shl
mov
in
insl
inc
movsl
popa
jns
out
outsl
add
ret
fistps
lea
cli
mov
push
loope
or
xchg
in
sub
sbb
sub
arpl
ljmp
xchg
xlat
les
ficomps
mov
imul
loopne
push
add
aaa
out
xchg
pop
push
fisubrs
cmp
imul
xchg
stos
or
and
adc
out
mov
repnz
in
xchg
nop
lock
push
test
fchs
cmp
ret
outsb
cmpsl
fistps
arpl
xor
mulb
add
popa
jo
cmp
and
xor
ja
xor
sub
jo
testb
out
aam
pop
mov
fucompp
stos
mov
sub
xor
cmp
and
mov
push
das
inc
cmpsb
inc
mov
out
xchg
lret
pop
jne
sbb
subb
rcl
gs
mov
mov
xchg
test
mov
ja
mov
mov
int3
cltd
pop
sahf
add
imul
fcoms
addr16
insl
leave
push
fldl
loopne
or
add
cmpsb
gs
gs
xchg
pop
lret
cmpsl
fwait
cmp
sub
rcr
pop
sbb
cmp
dec
jle
mov
fcoml
sub
add
les
xor
adc
nop
mov
push
xor
stc
mov
jne
push
aam
xor
scas
pop
inc
cld
dec
insl
xchg
rcr
sub
pop
repnz
clc
adc
inc
mov
test
imul
cld
repz
pushf
inc
leave
inc
jg
xrelease
test
xchg
sbb
xor
inc
adc
scas
test
and
or
push
call
movsl
cmp
jle
jecxz
out
fistl
out
adc
mov
nop
lods
js
imul
pop
and
leave
cmp
int
outsl
lcall
aas
mov
mov
adc
push
mov
xchg
mov
sti
or
jge
in
in
jbe
inc
push
xchg
int3
shr
aam
sti
jp
ljmp
sub
stos
xlat
jnp
mov
idiv
pop
cld
outsb
mov
scas
js
jo
loope
js
fisubrl
adc
or
xor
mov
push
cmp
mov
hlt
sbb
inc
jne
jp
orl
mov
loop
xor
adc
imul
mov
push
ss
and
xchg
xchg
es
sti
int3
mov
xchg
test
xor
fwait
adc
pop
mov
ret
lahf
inc
xor
add
in
sub
out
mov
lds
pop
shr
mov
sar
dec
lods
push
movb
lahf
or
mov
sbb
pop
lods
push
dec
rcrl
jg
pop
std
and
in
adc
or
pop
xor
mov
js
jecxz
ljmp
sub
insb
adc
adc
cltd
add
add
aas
aas
inc
mov
lahf
pop
sbb
stc
xchg
cmp
xor
jb
mov
cs
rorl
insb
xchg
pop
js
xchg
mov
fld
cmp
lahf
mov
lods
adc
pop
int3
cltd
mov
dec
arpl
sbb
loopne
ret
sub
mov
loope
mov
or
mov
dec
movsl
pop
inc
cld
fdivrs
test
arpl
lds
adc
add
mov
pop
dec
stos
or
inc
jne,pt
bound
mov
pusha
dec
rolb
aad
js
call
mov
jbe
pop
mov
or
aas
scas
in
add
dec
push
sbb
lcall
cs
jb
inc
lods
push
stc
les
leave
mov
pop
das
cltd
mov
xor
jle
movl
outsl
lahf
mov
scas
jne
add
loop
or
aas
push
adc
loop
adc
dec
jne
movl
mov
fisubrl
sbb
sahf
stos
adc
lret
jne
test
add
mov
shll
into
jae
shlb
insl
test
jns
mov
or
xlat
push
adc
mov
cld
xor
pop
test
add
dec
and
je
repnz
pop
test
xacquire
push
mov
test
sarb
xor
adc
and
icebp
lahf
sti
subb
xor
dec
pusha
push
jmp
enter
pop
mov
adc
mov
pop
xchg
loop
push
add
mov
pop
add
das
mov
decl
add
mov
xor
jbe
or
pop
ljmp
out
pop
test
mov
push
jmp
or
insl
fs
stc
mov
jb
hlt
jne
aad
sbb
ds
and
inc
inc
adc
icebp
jbe
cltd
lahf
ss
scas
lcall
push
test
fwait
add
pusha
sti
sahf
test
rcl
fnsave
xor
jecxz
and
es
gs
nop
cs
xor
mov
pop
add
or
adcl
data16
push
add
pop
xchg
imul
dec
add
loop
cmp
cmp
pushf
xchg
fwait
pop
popf
repnz
xor
xchg
xor
dec
outsb
inc
mov
xchg
clc
lahf
mov
loope
push
inc
jmp
xchg
inc
lock
sub
and
or
jmp
movsl
lahf
add
or
lock
push
push
andl
orb
or
ss
mov
mov
or
push
jl
shll
mov
and
inc
and
sbb
aas
fs
fcmove
dec
jle
stos
pop
jno
rcrb
adc
arpl
sbb
inc
sub
fs
push
int
push
mov
dec
cmp
or
in
lret
popf
fdivl
shll
add
bound
pop
adc
jecxz
ret
repz
sbb
push
xchg
lea
cmp
fcompl
and
jns
cmp
inc
jno
mov
mov
int3
sbb
std
unpckhps
frstor
mov
pusha
push
inc
push
aaa
push
lock
dec
xchg
mov
stc
xchg
int
movsb
and
insl
xchg
inc
aam
push
inc
lret
cmp
xchg
sbb
push
mov
pushf
xchg
xor
mov
xor
inc
aad
pop
nop
sub
pop
sahf
jg
push
mov
xor
xor
ljmp
jno
inc
test
add
xor
pop
push
bound
or
mov
adc
sbb
push
sbb
push
xorl
inc
stos
insl
jmp
push
ss
mov
push
or
aaa
mov
mov
into
lds
push
mov
push
adc
sbb
cli
das
out
aaa
mov
pop
push
pop
enter
pop
aaa
xor
xor
add
add
push
mov
or
mov
sub
cmpsl
pop
xor
pop
inc
xor
mov
sub
notb
cmpsl
sub
loopne
pop
xor
mov
nop
lds
fisttpll
andb
pop
and
pop
xor
fcomps
pop
je
cmp
mov
loop
fisubl
ret
aam
sbbl
test
jecxz
out
les
jno
js
jns
jmp
push
loop
notl
pop
push
call
and
fsubs
mov
scas
js
mov
mov
aaa
sbb
sahf
in
aaa
push
sub
je
mov
push
mov
xchg
pop
movsl
pop
cmp
dec
ss
cwtl
mov
mov
mulb
ficoml
xchg
jno
sbb
aaa
push
sub
out
test
out
mov
imul
popa
hlt
cmpl
jns
pop
jle
pop
xchg
dec
pop
ds
in
arpl
cmp
loop
mov
cvtps2pd
xchg
jbe
lret
pop
mov
out
add
jg
jns
arpl
hlt
cmp
xchg
add
je
pop
dec
iret
mov
cld
fwait
clc
subl
adc
repnz
fldl
fldt
fistpl
push
or
lods
add
mov
das
jle
les
or
aam
loope
cmp
sbb
jne
popa
nop
iret
lret
ds
icebp
iret
push
mov
pop
in
sar
mov
sarl
movsl
inc
icebp
clc
xchg
cmp
pop
stos
sub
or
loopne
add
out
sar
push
sub
pop
lret
lods
sti
lahf
dec
or
pop
sbb
pop
fimull
stc
ret
add
ja
mov
iret
mov
jns
pop
pop
xlat
ljmp
add
lea
mov
stos
pop
incb
xchg
lds
daa
stos
sub
or
icebp
ret
pop
loop
rcrb
cmc
jne
popf
cmpsl
decb
add
add
push
sbb
fcoms
test
adc
pusha
loopne
jnp
ds
jg
push
call
xor
test
cmpsl
bound
stos
repz
pop
cli
les
call
stc
cmpsl
into
mov
dec
aam
or
mov
and
jle
jp
xor
clc
jmp
push
pop
xlat
pop
mov
movsl
dec
inc
inc
test
enter
imul
das
aam
stc
jle
add
mov
scas
sarl
adc
jne
fwait
pop
mov
loope
mov
dec
push
aad
je
stos
and
es
mov
sbb
mov
mov
nop
mov
aad
xor
outsl
aad
rorl
add
pop
jg
out
dec
sarb
add
imul
jb
cwtl
push
adc
inc
loop
push
ret
pop
inc
add
imul
movsl
out
dec
add
hlt
mov
push
insb
pop
mov
mov
mov
mov
jg
mov
cmp
and
pop
mov
mov
adc
into
ret
and
dec
in
cmp
or
imul
adc
shrl
dec
fstpl
push
outsl
gs
aas
lods
add
fldenv
aas
mov
dec
add
out
shl
adc
mov
sbb
xchg
xchg
ja
loope
jbe
mov
xchg
push
stc
cmc
fdivrs
popf
clc
inc
gs
in
imul
iret
xchg
pop
push
jmp
std
jmp
into
pusha
inc
pusha
divb
sti
push
ljmp
or
dec
cmpb
and
mov
mov
jae
dec
cmc
pop
mov
pop
sahf
pop
xor
mov
fs
cmp
stc
arpl
out
push
dec
pop
dec
lahf
sbb
push
sub
and
in
insl
push
dec
lret
cmp
add
mov
fdivr
push
shrl
ljmp
loope
sahf
push
inc
pushf
jge
mov
mov
clc
mov
aad
push
push
mov
sbb
push
movsl
lea
inc
xor
in
jle
call
lock
xchg
sub
test
ss
sahf
mov
pop
cli
in
mov
adc
lcall
fucomip
pop
add
fwait
sub
xchg
or
or
ret
nop
adc
ljmp
mov
repz
stos
scas
cmpb
push
addr16
cmp
out
fs
stos
jbe
cmp
pusha
mov
loop
movl
cmp
rorl
push
scas
lahf
cmp
pop
cmp
loop
adc
mov
fistpll
daa
fs
xchg
dec
iret
dec
pop
or
idivb
jmp
jp
push
mov
dec
imul
movsl
enter
icebp
lcall
addb
loope
aas
mov
inc
clc
mov
and
dec
jae
mov
arpl
iret
add
push
data16
inc
scas
pop
mov
cmpsl
sub
add
sbb
mov
ljmp
movsb
sub
mov
and
clts
ss
call
jbe
jle
push
or
cmp
jecxz
inc
out
jbe
xchg
mov
js
insb
xchg
sub
nop
jge
out
mov
xchg
jae
xor
jbe
clc
js
mov
jno
lea
push
orl
lds
add
ja
fsubl
sarl
push
mov
pop
les
in
jle
rcll
cmc
push
insl
mov
in
leave
adc
lahf
pop
nop
cltd
test
inc
iret
loop
sbb
pop
mov
push
mov
or
adc
push
sub
push
div
addr16
lock
add
push
std
outsb
xor
mov
mov
cmpsl
sbb
jl
mov
icebp
push
add
test
cli
mov
sbb
jp
dec
inc
xchg
aad
mov
out
sbb
xorl
aas
test
push
jnp
dec
sub
cmc
push
sub
and
xlat
js
cmp
dec
mov
pop
push
ljmp
cmp
into
mov
in
repz
add
sahf
mov
jg
insb
pop
rol
pop
out
out
sub
aam
adc
xchg
pop
cli
mov
jp
dec
jmp
push
je
sbbb
mov
add
add
dec
frstor
fidivrl
arpl
mov
jb
adcl
mov
pop
mov
lret
sub
aad
cmpsb
sbb
inc
ret
dec
dec
mov
inc
arpl
aas
lods
in
test
loop
mov
mov
sbb
ror
jmp
add
pop
insb
dec
arpl
push
fs
jmp
add
add
xorl
sub
add
sub
cmpsb
add
fstpl
rorl
fwait
shll
ficoms
xchg
cmpsl
repnz
addr16
scas
push
mov
je
outsb
lcall
dec
pop
xor
add
mov
mov
cmp
inc
aaa
push
jb,pn
int
ror
mov
mov
mov
push
sar
cld
jp
loopne
stos
pop
sbb
mov
movsl
into
mov
mov
ja
cmp
dec
scas
mov
les
mov
test
xor
ret
cltd
fbstp
insl
cmp
inc
xor
test
rcrb
mov
iret
repnz
push
xchg
mov
int3
mov
js
cld
mov
in
out
sbb
mov
into
es
fistpll
inc
cmpsl
aad
iret
out
imul
lods
outsl
sarl
fucomi
and
fadds
in
mov
int
pop
push
rcll
dec
js
xor
jge
pop
test
dec
mov
sub
arpl
xchg
movsl
in
shlb
aam
int
jns
mov
aas
in
xchg
test
jp
nop
aas
daa
sbb
cmp
lods
je
dec
inc
sti
xor
imull
cmp
dec
dec
pop
mov
add
jg
pop
out
mov
inc
movsl
fidivrl
adc
or
fprem1
icebp
call
arpl
sub
lret
dec
inc
ljmp
jns
jle
cld
pop
stc
adcl
mov
fmull
negl
sti
lock
adc
fldl
jmp
int3
pop
mov
test
lods
add
test
inc
leave
insb
cmp
jg
mov
mov
push
jno
lret
scas
add
stos
ret
lret
je
jge
mov
lcall
scas
jecxz
out
push
je
iret
sahf
mov
cmpsl
mov
clc
push
dec
repnz
add
cmp
cld
aad
cli
push
ja
out
pop
mov
push
cmp
lahf
mov
jo
inc
dec
shll
and
loopne
lods
xchg
fildl
xchg
lret
lahf
je
repnz
pop
mov
cmc
out
shrl
stos
xchg
xor
xchg
pop
fisubs
mov
icebp
fistl
add
fldl
jle
jns
shll
push
fisubs
mov
or
xchg
xorl
cmp
sbb
sbb
xlat
cli
cmp
xchg
mov
mov
repz
mov
mov
cmp
fists
stos
cld
adc
divl
cmp
je
pop
mov
out
adc
test
ret
pop
add
xchg
ret
add
lcall
dec
imul
dec
mov
fcmovnbe
roll
adc
mov
lahf
xchg
mov
inc
ja
xchg
mov
pop
and
int
outsl
mov
mov
cmp
das
lret
push
pop
and
pushl
push
dec
ja
add
push
dec
mov
shl
fisubl
jge
sbb
je
incb
dec
pop
push
orb
push
jle
jns
fcoms
or
or
or
clc
inc
adc
mov
pop
add
jne
sub
mov
push
ljmp
push
xchg
inc
mov
mov
mov
fbld
jne
addr16
inc
push
inc
sti
rcll
movsb
cmc
jge
xchg
ljmp
jle
sbb
imul
dec
push
push
or
mov
push
loope
stos
and
mov
xchg
scas
popa
dec
lock
xor
shl
incl
pop
xor
ja
jge
or
mov
mov
arpl
stc
pop
mov
lret
imul
push
cmpsb
mov
stc
je
fisubrl
shlb
out
fucomip
loop
in
mov
inc
mov
xchg
push
loopne
pop
adc
daa
add
sub
mov
outsb
adc
sti
cmpsl
loopne
xor
cld
jb
sti
jnp
jle
loope
adc
jbe
insb
sar
pop
je
lahf
out
lret
xor
cli
push
movsl
xor
aas
jge
push
pop
jae
xchg
sbb
std
fldcw
cmp
sbb
aam
pop
mov
inc
sbb
nop
xor
pop
push
xor
add
pop
nopl
clc
cmpb
clc
loop
pop
mov
inc
mov
js
mov
ja
shrl
mov
cmp
mov
popf
ss
fisttps
das
mov
mov
add
lods
mov
ja
push
inc
push
mov
scas
xchg
jae
stc
push
fwait
mov
pop
xchg
or
push
sub
test
mov
in
adc
insl
daa
or
cwtl
xor
cmp
shll
push
ret
test
enter
arpl
ficompl
outsl
nop
push
jge
mov
outsl
jge
icebp
stos
jecxz
dec
push
mov
pop
cmp
mov
cmp
pop
sub
fcmovu
inc
push
imul
out
mov
jae
andb
mov
xchg
sbb
cld
jne
test
fnstcw
movsb
sbb
cmp
loopne
pop
daa
xchg
dec
add
in
mov
xor
scas
pop
jle
lret
mov
sar
mov
mov
sbbl
sub
arpl
out
test
mov
push
out
xlat
notl
push
not
in
cmp
fimull
sbb
out
fstl
ds
mov
push
jmp
push
and
in
pop
divl
aam
push
mov
les
pop
mov
sub
mov
mov
js
and
jle
scas
mov
xor
movsl
fwait
mov
sub
jae
fsubs
sub
std
call
stos
push
fidivrl
dec
mov
jge
mov
cmp
cld
jp
cmpsb
jp
mov
stos
int3
push
std
push
mov
inc
push
es
dec
imul
dec
cmp
xchg
xchg
shl
cmp
fstps
loopne
scas
xchg
cmp
or
clc
into
scas
push
vunpcklps
push
movsb
cmp
das
stos
mov
lahf
mov
in
popf
sub
je
lock
in
stos
in
pushf
push
shr
pop
ljmp
pop
push
mov
sarl
pop
push
iret
mov
add
test
insb
loopne
lret
cmp
jg
push
jp
push
cld
add
pop
sbb
dec
mov
inc
icebp
dec
loopne
loop
mov
popa
inc
gs
pop
cld
mov
insb
pusha
xchg
fstpt
lcall
lea
popa
mov
popf
enter
imul
xchg
and
push
lods
leave
das
adc
pop
push
addr16
sub
gs
jbe
adc
mov
test
push
sbb
jg
int
inc
cmp
inc
xor
sub
xor
fwait
or
cmp
loopne
pop
pop
jl
jl
les
inc
out
push
dec
lods
mov
adc
out
pop
mov
jo
add
and
dec
pop
test
shll
or
lods
lret
jne
mov
std
jae
xor
mov
jb
jg
mov
mov
add
icebp
test
sub
shll
add
fcomps
jmp
jo
fdiv
or
aaa
jecxz
int
scas
mov
stos
imul
mov
mov
jle
scas
xlat
add
adcl
inc
pop
out
out
cld
lock
or
or
int
adc
sub
aaa
mov
mov
jl
push
push
push
mov
mov
xchg
jae
or
or
popf
test
ja
mov
fidivrl
loopne
cmp
lock
ja
xchg
cmp
mov
out
fisubl
xchg
add
push
dec
filds
dec
shrl
push
xlat
ret
dec
lea
rcll
or
ljmp
cmc
lods
ja
xlat
cmpsb
pusha
push
xlat
push
inc
lods
and
int
sbb
scas
imul
iret
mov
sub
fstp
call
and
in
mov
inc
sbb
mov
rcrb
call
rcr
out
sbb
mov
sub
cld
cmp
adc
push
in
xchg
mov
jae
mov
jno
cmp
cmpsb
scas
sbb
mov
rorl
dec
add
repnz
rclb
cli
scas
lea
jb
das
pop
orl
cwtl
xchg
jno
scas
sub
lods
push
das
jb
loopne,pn
cld
mov
mov
into
adc
popf
and
mull
pushf
jne
or
push
xchg
data16
inc
xorl
sbb
cmp
push
scas
push
sub
inc
int3
xchg
xor
inc
fnsave
or
faddl
loop
arpl
pop
or
jle
aaa
ja
nop
shll
sbb
test
pop
lahf
sub
nop
xor
xchg
jae,pt
cmpsl
lahf
sbb
push
push
js
cmp
rclb
das
loopne
sub
hlt
or
out
mov
sub
dec
push
popa
sbb
jb
fcmovu
int
shl
and
movl
adc
inc
mov
mov
and
clc
mov
cwtl
pop
lahf
and
sbb
adc
jnp
call
outsb
dec
insb
push
pop
rcr
bound
insb
mov
fisubs
jmp
outsl
das
pop
insb
fidivs
dec
data16
imul
jo
dec
stos
cmp
mov
popa
jle
outsl
stc
mov
idivl
das
mov
aad
out
les
and
test
or
xchg
test
jns
es
push
out
or
xchg
mov
adcl
inc
mov
out
pop
jb
mov
std
pop
jo
cmp
push
sbb
jb
mov
lahf
sbb
bound
daa
pop
xlat
lea
ret
out
shll
bound
inc
push
je
pop
fdivr
repnz
inc
shrb
and
out
pusha
mov
push
mov
and
ret
lds
push
stos
gs
ret
sub
jg
dec
lret
push
mov
pop
call
lods
cmp
xlat
push
ja
aaa
add
fstps
lea
add
imul
popa
sbb
xlat
scas
jp
pusha
lahf
repnz
push
lods
adc
int
icebp
adc
mov
xor
dec
ret
sti
loop
jne
push
stos
repz
imul
push
xchg
jne
mov
shrl
cmpsb
jp
inc
pop
pop
mov
jbe
sbb
rcrl
add
les
pop
frstor
out
popa
in
std
iret
jnp
mov
inc
fnstsw
mov
pop
cmp
mov
pop
into
cli
es
or
outsl
cmp
mov
mov
or
test
and
sub
sub
gs
pop
int
xor
data16
mov
out
pop
in
js
inc
dec
iret
out
mov
xor
xor
cli
sarb
in
ret
lods
out
push
xchg
enter
ficompl
fisubl
mov
shr
and
fisttpl
incl
aad
in
xlat
add
in
xor
mov
js
addr16
lods
lds
or
sbbb
inc
adc
loopne
aad
int
rcrb
fstps
dec
mov
jnp
ds
popf
add
push
cli
rcl
fidivrs
cmp
mov
ljmp
out
fwait
mov
rcr
stos
pop
mov
push
sub
and
sub
ret
jecxz
ss
out
out
mov
frstor
fistpll
aad
aad
scas
fcoms
daa
push
and
js
sbb
or
repz
leave
add
add
call
jno
mov
into
scas
rorb
stos
or
pop
lret
mov
jg
dec
pop
sub
or
adc
mov
or
mov
in
daa
xor
xchg
iret
mov
jbe
cwtl
call
outsb
cld
mov
in
mov
lods
andb
jnp
lds
subl
ret
adc
push
shr
stos
shlb
pop
lds
sbb
insl
jno
je
lret
lahf
mov
mov
and
lods
je
mov
les
xor
into
and
pop
push
lcall
mov
in
xor
mov
std
inc
mov
push
or
inc
cmpsl
outsl
lods
clc
sbb
fmuls
mov
int3
adc
lods
mov
sbb
dec
fs
or
or
jb
push
outsl
je
sbbl
hlt
std
incl
je
test
test
lock
shll
jp
jg
das
or
ja
pop
cld
sti
imul
mov
cmp
ds
adc
mov
fyl2x
pop
inc
cmp
mov
or
mov
jle
fists
sub
jne
xor
jno
movsl
inc
inc
insl
mov
add
jo
jne
movsb
int
mov
ret
in
mov
sub
rcll
and
mov
xlat
jle
int
sti
les
mov
addr16
mov
nop
push
mov
sbb
pop
arpl
mov
inc
sti
push
arpl
int
ja
lods
iret
sub
push
stos
inc
popl
xorl
out
je
mov
mov
and
ret
jmp
mov
pop
cmpb
pop
mov
mov
dec
sub
imul
test
scas
stos
pop
stos
test
cmpsl
jnp
fnstsw
int3
push
push
jns
mov
push
push
mov
and
xor
or
pop
call
mov
out
sub
fwait
sbb
std
cmp
mov
test
in
in
lock
mov
lds
jnp
cmpsb
faddl
rorl
arpl
pop
aad
hlt
insl
ss
mov
adc
std
xor
adcl
push
sar
add
ja
mov
sbb
xor
jns
pop
movsb
push
fsubs
dec
movl
mov
rep
xchg
and
movsw
pop
pop
mov
push
sti
mov
cltd
ss
je
sub
add
push
mov
xor
push
mov
add
lock
jne
push
jbe
sahf
xchg
mov
adcl
add
cli
mov
jecxz
lret
lahf
add
pop
cwtl
dec
imul
lret
mov
mov
xchg
fdivl
push
jno
push
lahf
push
sti
fstps
fs
std
rorb
stos
outsb
cmp
enter
pop
xor
test
xor
inc
jle
cmp
icebp
lock
int3
int
pusha
mov
dec
loop
negl
movswl
ds
imul
cli
imul
mov
jg
cmc
stos
stc
repz
xchg
daa
ds
addr16
cmpsl
stos
iret
mov
pop
pop
js
sub
pop
lock
lock
xor
fcompp
lods
std
mov
lock
stc
sbb
push
pushf
xchg
fwait
mov
push
or
clc
and
popf
ds
adc
stos
push
pop
mov
cmc
cmp
dec
mov
or
add
cld
jl
fprem1
stos
mov
sti
mov
sub
out
fs
dec
or
lret
dec
out
ret
xchg
dec
mov
pusha
sbb
add
jle
arpl
mov
lods
sub
loope
fnstsw
mov
aad
das
notb
dec
mov
bound
push
shrb
cmc
push
cld
bsf
push
or
sbbl
test
iret
inc
stc
jne
or
dec
push
add
aam
dec
out
lods
ret
shrl
mov
sbb
pop
inc
imul
and
inc
ja
rorb
jecxz
dec
fsubl
mov
jae
cltd
jns
std
cmp
pop
or
lock
push
jno
outsl
or
sarl
adc
icebp
aam
push
or
adc
in
ds
push
ss
add
cli
push
jns
pop
popf
and
dec
add
mov
jecxz
or
sub
xlat
sub
mov
fcomip
jmp
stos
leave
pop
and
stc
cltd
xchg
mov
mov
push
icebp
sbb
mov
negl
loop
mov
sbb
jnp
pop
mov
lea
dec
xchg
loope
sbbb
loop
int
scas
mov
adc
std
cmp
movsl
in
imul
xchg
std
pushl
mov
movsb
popa
mov
mov
mov
push
push
xor
imul
stos
subb
test
mov
aas
xrelease
std
les
dec
or
dec
cs
stc
mov
int3
popf
out
xlat
fsubs
sub
dec
mov
jecxz
fldt
int
ja
mov
pop
or
in
dec
or
out
pop
mov
xchg
pop
out
inc
xchg
addr16
push
inc
stos
and
mov
mov
orb
pop
out
jns
ret
cwtl
lahf
stc
sbb
fiaddl
adc
push
aad
rorb
hlt
mov
sbbl
push
and
mov
cmp
jle
test
lret
dec
dec
xchg
daa
jmp
xor
test
shl
popa
fdivl
fwait
rorl
mov
mov
stc
push
test
popf
les
add
pop
scas
cli
mov
cmp
mov
cltd
sbb
js
insl
xchg
shrl
inc
pop
pop
sbb
mov
rorb
lea
movsl
rcr
lods
or
movd
icebp
cmp
mov
mov
adc
fmuls
idivl
xchg
pop
outsl
push
cld
gs
insl
xchg
sub
stos
xchg
sub
jl
gs
add
mov
mov
pop
inc
lret
inc
movl
sbb
push
or
mov
mov
fst
mov
and
mov
sarb
popa
movsl
jbe
std
mov
bswap
mov
std
sbb
pop
test
sub
mov
push
mov
sar
push
dec
inc
xchg
mov
cmpsl
xlat
clts
lds
xor
push
into
insl
fwait
push
aas
cmpsb
dec
rol
pop
and
jl
jnp
or
and
jl
mov
cli
insl
jo
bound
icebp
lret
cmc
inc
mov
pop
clc
pop
sbb
sub
add
mov
out
std
mov
mov
push
jnp
imul
or
jb
test
movl
xchg
rclb
scas
cmp
jmp
mov
add
mov
mov
xor
or
aaa
and
dec
jb,pt
lea
nop
jle
lock
cs
mov
sub
insb
mov
lods
pop
pop
aam
cltd
stos
out
stos
adc
xor
pop
jg
mov
xor
mov
and
mov
mov
in
or
js
out
mov
push
imul
xor
push
mov
mov
dec
pop
sbb
xor
xchg
jne
cmc
adc
mov
mov
sarb
int
pop
fstpt
fidivrl
cmp
test
fprem
and
jle
in
ljmp
or
push
in
ds
int
pushw
xchg
mov
dec
push
xchg
out
in
jno
xor
out
cmovae
int3
xorb
or
xlat
pop
or
in
negl
mov
ja
daa
icebp
daa
push
in
xchg
scas
push
push
inc
jno
pop
jno
clc
push
out
lods
inc
push
fnstsw
sbb
enter
jo
jne
pop
adc
jle
lahf
sub
ffreep
cltd
pop
jmp
adc
xchg
fwait
mov
fucom
dec
and
cmp
pushf
stos
jns
daa
sub
mov
je
xor
fs
dec
or
inc
cmp
pop
or
xchg
cmpsb
xor
dec
test
and
adc
push
sub
dec
mov
jns
in
mov
clc
popa
in
test
cltd
pop
mov
inc
pop
xchg
jmp
mov
pop
mov
jne
jno
jb
jno
scas
pop
imul
into
les
call
aas
lahf
add
fistl
mov
shll
adc
nop
cmp
fwait
lcall
ds
nop
out
jecxz
fnstenv
xorl
movsl
jg
outsb
pop
pop
test
in
push
sarl
int
insl
and
inc
lds
subl
push
fs
pop
lods
out
sahf
adc
jmp
xchg
or
sti
sub
jecxz
inc
sub
cmpsb
or
out
mov
imulb
mov
out
into
mov
sar
xlat
adc
cmc
mov
scas
pop
lcall
repnz
fmul
pop
push
pop
clc
repz
cmpsb
call
cltd
cmpsl
and
fistl
jne
mov
and
cmpsb
cld
aaa
inc
xchg
jp
outsl
movsb
dec
add
movsb
sub
jg
stos
out
jg
cmp
dec
push
stos
ret
fimull
sub
dec
scas
imul
mov
cmp
insl
hlt
rcll
fistpll
decl
orb
dec
inc
mov
add
cmpsl
insb
pop
stos
dec
mov
jno
stos
stos
fdivr
movsl
lret
push
test
sub
lret
xchg
adc
jns
ss
out
imul
mov
adcl
push
push
mov
mov
lock
push
lret
mov
and
mov
jb
jo
xchg
inc
push
mov
roll
jle
int3
and
scas
inc
dec
out
mov
sbb
shrl
arpl
xchg
leave
hlt
and
inc
shll
lock
popa
out
sbb
aad
enter
jle
lcall
push
mov
cmp
sub
push
xor
scas
ja
pop
cmp
jne
mov
aas
xor
adc
mov
sbb
push
movsl
ficomps
jecxz
mul
hlt
xchg
lea
mov
inc
pop
jl
jo
dec
inc
mov
ljmp
js
out
outsb
sub
repnz
pop
fwait
push
pop
call
inc
inc
call
jo
mov
pop
stos
push
fdiv
cld
xchg
scas
cltd
mov
test
or
test
sbbl
mov
jg
inc
pop
fsubp
or
outsb
push
ljmp
movsl
hlt
test
cld
popa
jae
ss
js
pop
outsl
xchg
lea
mov
mov
push
aad
scas
inc
loope
pop
fsubl
neg
scas
sti
sar
aas
icebp
push
shl
add
fnstenv
cld
movsb
xor
out
je
ret
aad
les
dec
imul
xchg
jge
popf
es
imul
dec
lea
into
mov
enter
rclb
test
cmp
ds
inc
dec
es
push
ss
in
mov
sub
fildll
loopne
jg
mov
out
mov
out
adc
or
out
and
nop
sbb
cmp
aad
jmp
ss
in
pop
mov
outsl
pop
ja
jmp
jo
ljmp
sub
mov
mov
mov
cltd
and
pop
mov
mov
sbb
mov
mov
mov
dec
lods
test
jge
sbb
mov
jmp
xor
leave
fisttps
and
xchg
jl
add
fcompl
adc
sti
and
sub
nop
xchg
pop
call
sbb
mov
and
int3
xchg
stos
push
outsb
jg
jge
xchg
inc
pop
sub
xchg
mov
fsubl
pmaxsw
and
xor
mov
sub
mov
push
test
mov
out
jne
iret
lods
mov
aas
lea
mov
jnp
inc
pop
ljmp
cmp
out
dec
mov
mov
cmpsb
insl
adcb
aad
loope
test
mov
dec
loopne
out
mov
nop
orb
rcrl
gs
mov
stc
std
movb
jl
test
or
shll
fldcw
js
sub
daa
pop
mov
daa
push
cli
dec
es
inc
ss
and
mov
les
loop
jne
fstp
psubusb
outsl
pop
mov
es
sbb
lea
out
mov
sbb
adc
lock
pop
cmp
fdivrs
cmp
clc
test
divb
aam
addr16
scas
clc
adc
mov
call
bnd
push
mov
in
cmp
jecxz
ds
stc
sbb
xchg
xor
fnsave
int
jne
test
lcall
scas
orb
dec
lods
xchg
mov
aaa
imul
sbb
xchg
out
xlat
or
fistpll
movsl
xchg
jbe
sti
enter
mov
xlat
add
xor
mov
pop
sbb
fiadds
or
push
aaa
fstpt
xchg
leave
movsl
mov
mov
xchg
mov
test
push
dec
lcall
leave
repz
adc
movsl
and
iret
mov
scas
aad
pop
xchg
jge
int
scas
add
call
scas
aad
or
cwtd
pop
stos
clc
push
shr
pushw
push
jecxz
fdivl
push
push
test
les
faddl
inc
xor
jns
mov
popa
imul
clc
int
aad
divb
pusha
popa
dec
dec
add
jge
inc
lret
push
mov
xor
pop
mov
jae
shlb
dec
dec
aam
insb
pop
cmp
push
or
sbb
inc
push
outsb
imul
jns
or
das
adc
dec
out
dec
fists
push
add
and
cmp
movsl
repnz
or
dec
pop
cwtl
push
jmp
and
jae
sub
cs
push
sub
push
mov
add
mov
cli
loopne
push
mov
add
xchg
inc
or
int3
jg
call
movsb
push
leave
les
mov
cmp
ficomps
fbld
sbb
xor
mov
and
hlt
mov
out
lods
clc
cs
orl
popa
mov
imul
mov
or
pop
jg
mov
fidivl
push
das
adc
in
lods
mov
js
inc
scas
mov
or
cmp
adc
sbb
repz
je
xor
cmc
xlat
dec
repz
sti
lock
xlat
jno
xchg
pop
add
jno
mov
push
mov
cld
fimuls
mov
jecxz
faddp
inc
repnz
jne
sti
add
sbbb
cmpsl
ljmp
or
sahf
cld
mov
sti
addr16
inc
out
xchg
loope,pn
mov
stos
push
pop
pop
mov
and
testl
pop
mov
lret
jp
pop
fbld
mov
mov
pusha
cmp
fcmovnb
jae
adc
sub
vmovlps
mov
pop
shll
notl
jne
leave
sti
clc
leave
push
flds
pop
sbb
shll
js
push
mov
sub
in
imul
cmpsl
hlt
ja
pop
movsl
test
mov
insl
cmpsl
or
adc
out
insb
mov
cli
xlat
in
mov
ds
ret
xchg
push
inc
add
bnd
lods
mov
js
fdivrl
imul
pmovmskb
ja
inc
ja
in
jp
mov
cmpsl
push
add
popa
ret
rclb
add
jo
pop
push
repz
and
dec
push
scas
and
jle
loop
nop
adc
add
mov
ja
pusha
push
and
int3
test
adc
xchg
adc
cmp
xor
pop
inc
pusha
or
mov
push
push
dec
add
nop
and
sbbl
xor
mov
roll
sbb
xor
push
add
subl
add
insb
push
sti
mov
sub
iret
ljmp
sub
xor
mov
mov
jo
pop
xor
int3
and
subb
xor
nop
sbbl
mov
xchg
push
hlt
cmp
dec
push
lea
mov
push
mov
sbb
push
mov
mov
mov
ja
mov
std
dec
popa
fidivrl
je
pop
loopne
sbb
dec
clc
jl
ljmp
jecxz
pop
scas
pop
inc
fistpl
and
xor
lds
ja
popl
pop
idivl
jl
or
mov
sub
mov
fdiv
dec
jmp
rcll
mov
loope
xor
imul
lcall
inc
lock
out
aad
xchg
cltd
lds
fsubp
sub
xchg
dec
mov
fdivs
jecxz
stc
mov
clc
mov
mov
cmpsb
fistpll
ds
xor
lret
out
arpl
xchg
ret
icebp
pop
pusha
mov
dec
in
push
iret
repz
insl
je
cmpl
xchg
add
dec
push
aad
mov
rcrl
jb
shl
xor
pop
xor
adc
outsl
sbbl
divl
mov
movsl
xor
jne
xchg
pop
data16
add
mov
inc
in
pop
movsl
cmp
xor
mov
push
sub
bound
int
sub
filds
std
outsl
or
mov
jg
xchg
mov
or
sbb
mov
lods
mov
insl
fwait
mov
popa
inc
push
movsb
dec
pop
lret
clc
and
fcmovb
and
xor
jmp
ficompl
jmp
in
and
cmp
push
loop
outsl
and
push
push
cmp
fst
fisttps
lds
mov
push
ret
mov
pusha
stos
data16
aaa
mov
leave
xchg
orb
xchg
push
cwtl
cs
jbe
inc
push
xor
cli
push
pop
aam
testb
xchg
lock
ds
sub
pop
aam
mov
mov
iret
jmp
pop
mov
mov
in
insb
sarl
lea
add
pusha
imul
out
dec
inc
cld
mov
pop
inc
ds
jecxz
ret
stos
ja
int3
repnz
and
inc
xor
out
push
cmpsl
xchg
pushf
call
or
in
scas
xchg
clc
scas
icebp
fdivs
adc
adc
jmp
push
hlt
sub
pop
pop
cwtl
push
imul
loop
out
sbb
adc
loop
xchg
sub
xor
shlb
push
cmpb
jae
cmpl
xor
cmc
pop
mov
jne
lods
negb
sbb
xchg
insb
loope
add
jne
leave
push
adc
or
jl
rcrl
cmp
les
push
sub
xor
jo
xchg
pop
or
xchg
scas
lock
sub
xchg
pop
mov
cmp
movsl
in
xor
out
dec
dec
test
inc
aad
jne
mov
mov
jl
les
adc
pop
stos
or
sbb
ret
mov
mov
outsb
xor
jb
dec
pop
pop
ss
insl
cld
adc
mov
aas
mov
xor
mov
pop
cld
nop
jbe
adc
in
push
jno
int3
ljmp
adc
cmc
or
lret
mov
aas
or
sub
roll
je
push
pushf
pop
ljmp
xchg
ljmpw
insl
fwait
movsl
jne
mov
cwtl
sub
jb
out
inc
jp
jp
hlt
dec
insl
mov
out
cld
cmp
add
ss
xor
push
push
dec
roll
add
xchg
fidivs
and
inc
dec
inc
hlt
sbb
ret
fistpl
mov
fs
sahf
cmp
dec
mov
mov
icebp
push
int
mov
stos
pop
sbb
cld
pop
out
mov
in
cmpsb
cmpsb
or
mov
cwtl
in
pop
dec
sub
fsubr
pushf
jae
mov
xchg
das
outsl
scas
push
xchg
scas
push
fildll
or
cmp
xchg
outsb
lds
sbb
pop
xor
push
frstor
in
imul
add
push
mov
ret
dec
dec
icebp
mov
sahf
cmp
xor
aas
shll
jecxz
stc
cmp
in
call
cld
lods
cmpsb
dec
mov
inc
push
xor
adc
das
cmp
mov
in
loope
aam
or
jbe
adc
xchg
hlt
xor
out
cltd
jg
cmp
scas
iret
jmp
or
mov
movb
pop
clc
add
imul
sbb
repz
out
inc
push
cltd
cltd
mov
daa
loopne
into
js
fstpl
mov
popf
shll
and
push
mov
mov
push
jns
inc
lods
adc
mov
jle
xchg
cltd
gs
sbb
adc
sbbb
cmpsl
xlat
inc
in
lret
mov
cmp
pop
jo
in
jp
and
fmulp
xchg
fstl
scas
jo
dec
jb
jg
lret
fst
lcall
cmp
push
mov
icebp
adc
pop
adcb
ret
fstl
push
lret
out
lcall
lahf
cld
fsubrp
xchg
mov
jle
orl
imul
loop
std
jo
mov
or
jne
insb
push
pushf
cmp
aam
iret
jb
add
mov
sub
fisttpll
jne,pt
cmp
dec
adc
test
add
ss
or
sbbb
jmp
xlat
jecxz
insl
in
hlt
jmp
fildll
xor
xor
loop
sub
sub
sbb
xchg
xchg
cmp
push
out
hlt
cmp
sbb
ljmp
popf
andl
scas
mov
dec
pop
lahf
imul
xchg
xchg
pusha
push
xchg
push
leave
inc
cs
js
aam
je
jno
inc
cmp
inc
dec
pop
push
int
jb
mov
sahf
xor
push
imul
jl
xor
jo
inc
loope
push
or
ffreep
jb
cmpsl
stos
arpl
pop
xchg
adc
adc
jne
xor
inc
pop
push
mov
adc
pop
fst
dec
not
dec
insl
imul
gs
cmpb
mov
push
push
into
pop
fiadds
loope
std
sub
push
or
xchg
mov
xchg
int
test
mov
push
clc
jne
sbb
les
mov
mov
mov
jno
cmpsl
stos
std
call
int
xlat
loop
xchg
jmp
call
pop
les
notl
jg
mov
sti
les
or
loope
fsubl
sbb
jmp
mov
push
fisttpl
mov
sti
or
push
sub
dec
mov
in
cmp
test
subb
sbb
dec
int
push
ds
ja
mov
fldl
push
repz
cmc
add
and
stos
xchg
lods
jne
popa
sub
mov
neg
cmp
xor
je
out
cmp
je
xchg
aaa
dec
nop
addr16
test
inc
mov
mov
inc
out
insb
add
push
iret
pop
fists
and
ret
jmp
dec
cld
clc
in
lcall
hlt
int
mov
test
mov
jmp
aaa
pop
mov
xor
xlat
add
xchg
sub
jb
lret
sub
leave
add
jmp
loopne
sbb
iret
pop
inc
insb
repnz
fidivrl
sbb
xor
mov
imul
mov
mov
cs
add
xchg
fcomps
add
imul
repnz
push
push
pop
aad
adc
pop
popa
shl
movsl
fsubl
push
sbb
repnz
xor
stc
pop
pop
xchg
mov
stos
bound
cmp
mov
inc
loopne
mov
pop
dec
dec
dec
imul
icebp
mov
jo
test
jae
iret
push
add
jecxz
stos
push
fwait
aad
mov
or
into
lret
jno
out
mov
mov
cld
nop
mov
sbb
or
lea
dec
sbb
xchg
and
xchg
jge
and
cmc
inc
roll
sub
inc
xchg
sub
pop
mov
lock
cmp
lds
fisttpll
push
nop
xor
xor
add
pop
inc
mov
and
push
mov
call
jmp
insl
push
push
das
jl
lock
movsl
inc
or
stos
lods
lods
xor
mov
mov
mov
shlb
jbe
jmp
outsl
fstps
aaa
xor
or
jge
mov
addb
fs
cmp
cmp
mov
mov
sub
jno
fstpt
ret
mov
xor
into
fucomip
popf
sub
imul
out
inc
xor
sbb
dec
sub
pop
clc
test
imulb
pop
in
pop
scas
push
fisubrs
movsl
lcall
pop
add
mov
pop
movsl
imull
mov
je
sub
stc
or
into
scas
push
cmpl
dec
and
pop
sub
pushf
in
sbb
pop
jmp
fimuls
outsl
sti
xchg
shrl
movsb
std
cld
push
xchg
in
das
adc
mov
or
in
stos
in
cmpl
jl
aad
push
fbld
inc
mov
ss
mov
stc
mov
sub
insl
xor
imul
aas
mov
pop
mov
js,pt
lds
sub
lods
xchg
push
aaa
xlat
cmpsl
ljmp
push
pop
mov
mov
or
push
mov
cmp
dec
dec
mov
or
dec
jecxz
out
sbb
fucomp
out
scas
out
pop
outsl
adc
test
outsb
in
iret
add
js
xchg
mov
mov
sbb
mov
scas
dec
fsts
popa
dec
xor
pop
sbb
push
fwait
pushl
xor
cmp
push
ret
popa
xchg
arpl
xchg
mov
out
sub
jns
mov
mov
into
pop
fcoml
leave
call
out
pop
sub
xor
scas
repz
xchg
das
out
stos
fisubrs
push
shlb
sub
and
iret
loop
jmp
mov
jmp
mov
xchg
xchg
test
dec
icebp
jne
sti
mov
fisubs
xchg
fidivl
cli
mov
stos
mov
xor
dec
rcrb
daa
push
xchg
gs
in
sarb
stos
das
mov
shlb
pop
xchg
repnz
addr16
cmp
fdiv
pushf
lods
cmp
cmp
dec
mov
mov
jmp
mov
mov
xorl
addr16
cmp
bound
nop
stc
in
arpl
dec
insl
pop
push
mov
lcall
je
out
cwtl
ljmp
outsl
in
lret
test
add
jmp
and
xor
push
iret
push
enter
gs
inc
aas
sti
xchg
icebp
rcll
mov
add
push
sub
mov
mov
xchg
xor
out
ljmp
outsl
push
or
xchg
xchg
movsl
data16
and
inc
mov
fld
mov
outsb
mov
push
js
jo
scas
push
mov
cltd
call
mov
add
xchg
scas
push
repnz
nop
add
int3
xchg
cmp
jb
jno
mov
subb
sbb
push
cmp
fldt
cld
icebp
push
jle
icebp
jns
push
add
jle
shrb
out
pop
inc
cmpb
in
push
adc
outsb
push
push
cmc
pop
sbbb
cmp
jmp
sbbb
adc
push
dec
dec
adc
test
pop
stos
out
repnz
shll
dec
or
dec
and
adc
cmp
mov
push
push
jnp
int
jmp
push
cmp
orl
jp
push
jge
or
dec
insl
xorl
adc
ss
out
out
hlt
push
repz
and
or
xchg
fwait
lahf
adc
pop
call
andl
repnz
cs
mov
in
xchg
out
mov
jecxz
jae
cmpb
dec
adc
out
add
mov
cs
shlb
ds
rorl
aaa
fidivl
sub
lcall
fs
and
adc
sub
sarl
sub
stc
jne
jae
lcall
jbe
rorl
jbe
in
das
mov
push
xchg
lods
imul
cmp
out
ljmp
movsl
out
subl
stc
jg
jne
hlt
xchg
cmc
jge
test
pop
dec
cli
mov
dec
jmp
ret
mov
inc
pushf
fldenv
push
add
aas
scas
sbb
negl
pop
shl
push
shl
mov
incl
dec
in
stc
sub
ljmp
scas
xchg
jno
push
mov
dec
sbb
aam
loopne
mov
das
inc
lcall
pop
ds
and
sbb
mov
loopne
loop
insb
cmpsb
cmp
push
xchg
enter
in
outsl
aad
lds
push
or
imul
cld
xor
pop
push
push
fisttpl
fstpl
adc
ds
mov
add
insl
sub
push
pop
inc
lea
sub
movsl
jl
add
push
int
lods
mov
pop
sub
out
cld
sub
xchg
lods
stos
pop
sarl
dec
mov
push
ss
cld
out
ficoml
mov
sbb
scas
pop
leave
std
jecxz
imul
ljmp
test
imul
cmpb
popf
aas
jge
adc
cld
rorb
scas
shll
loop
lds
mov
jo,pn
sti
cmp
cmp
insl
dec
pop
push
and
push
or
rclb
loop
cmp
mov
jle
cs
pop
loopne
mov
cli
dec
mov
scas
pop
rcrb
cs
push
push
and
je
xchg
data16
lea
push
push
ret
adc
jg
aad
jg
jmp
inc
icebp
push
and
fldcw
fwait
in
sbb
cmp
inc
mov
jle
cmp
imul
lahf
add
stos
cmp
xor
xchg
push
mov
loop
daa
dec
aam
xchg
or
imul
jmp
adc
ret
sub
loop
mov
lock
mov
test
cmp
je
jbe
std
popf
loopne
orps
cwtl
xor
sbb
cmpsb
and
jb
push
jnp,pt
jecxz
mov
lods
adc
lds
sahf
std
enter
std
mov
dec
push
push
add
movsl
outsl
jl
bound
call
push
in
fidivrl
bnd
in
js
mov
es
jns
mov
and
mov
mov
pop
or
dec
call
xor
fs
enter
xchg
stc
mov
cs
int3
sbb
mov
vsubps
mov
xchg
aad
pop
push
dec
mov
dec
rcrl
cmp
nop
enter
popa
loopne
sub
popa
mov
ffreep
inc
in
mov
das
add
xchg
xor
xchg
stc
es
dec
push
or
stc
fdivl
ss
mov
jl
jle
and
arpl
xchg
stc
cld
xor
push
sbb
xchg
sub
inc
in
push
into
xlat
jmp
std
scas
pop
pop
sub
mov
nop
push
mov
push
popf
pop
jl
jp
pop
aam
sub
jbe
xor
icebp
push
or
insl
xchg
push
mov
xchg
enter
cmp
lods
clc
sbb
lret
dec
stos
sub
mov
add
sarb
imul
insl
push
popf
jo
pop
push
dec
xor
push
pop
xchg
dec
push
loope
mov
push
jae
cmp
mov
jb
jne
cli
into
jbe
out
pop
inc
xor
mov
std
aas
call
push
mov
pop
pop
jge
ljmp
mov
cld
sub
notl
loope
stc
cmpsb
mov
div
aad
jns
sub
imul
pop
cmp
clc
rcll
add
inc
stc
ret
movsb
insl
movb
in
inc
bound
jns
mov
ljmp
psubsb
mov
jae
dec
push
mov
mov
mov
lods
dec
pop
dec
shrb
mov
cwtl
cmp
sub
pop
std
pushf
scas
xor
mov
ljmp
add
jnp
inc
add
mov
pop
mov
in
mov
or
or
mov
jge
popf
push
les
fbstp
test
gs
dec
stc
stc
fcomi
push
adc
fimull
xchg
movsl
cld
cli
inc
fsubl
lock
adc
pop
punpckhdq
mov
lock
addr16
mov
mov
test
ja
xlat
int3
test
cs
insb
mov
in
mov
xchg
adc
lea
mov
jle
lods
pop
or
fisubs
aaa
dec
mov
fmuls
and
aad
mov
adc
jle
adcl
dec
orl
adc
mov
adc
mov
pop
cmp
push
mov
icebp
loopne
xchg
push
nop
dec
das
test
pusha
fwait
or
add
sbb
cmpl
cmp
ja
or
scas
jle
jmp
xlat
iret
sub
andb
mov
stc
subl
jno
mov
aad
pop
xor
push
repnz
push
sub
or
mov
adcl
cmc
aas
dec
jns
int3
mulb
sbb
fcomi
stos
repz
loop
das
dec
stos
xor
rcll
xor
mov
fisttpll
std
mov
cld
lret
pop
loop
mov
cld
xor
hlt
outsb
aas
jmp
inc
jo
insl
inc
clc
test
scas
sub
lods
notb
daa
jns
push
bound
mov
adc
mov
push
or
push
sbb
adc
popf
cmc
xchg
and
jl
adc
push
in
test
pop
das
dec
mov
xchg
push
dec
aad
ja
sbb
stc
incl
pop
xchg
pop
cmp
jbe
fnstsw
out
stc
push
xchg
jecxz
shll
sbb
mov
push
out
js
jne
cmp
mov
repz
call
lods
call
popa
push
mov
scas
xchg
dec
jb
movsl
fyl2x
inc
sub
jo
push
push
bound
pop
cmpsb
ja
movsb
scas
xchg
push
adc
push
xchg
out
jg
cs
pop
jne
xor
lods
loopne
xchg
rorb
jne
mov
fldenv
je,pn
mov
out
jl
push
sub
fld
das
mov
sub
mov
jo
inc
cwtl
mov
ret
insl
jnp
ja
mov
add
adcl
test
inc
ljmp
lds
adc
xchg
inc
or
xchg
hlt
sub
mov
out
je
mulb
mov
test
xor
adc
arpl
add
adc
jg
pusha
out
int3
sbb
jo
in
cld
mov
imul
inc
add
iret
cwtl
xor
iret
pop
in
sbb
xorb
jge
add
cmpsl
xchg
ljmp
mov
loope
lods
jnp
inc
je
into
jge
leave
adc
dec
push
in
push
sub
inc
mov
cli
jge
les
jg
dec
or
mov
or
mov
xchg
pop
mov
popf
mov
fucomi
cmp
stos
cmc
cmp
mov
in
add
popf
mov
dec
push
xchg
adc
push
ljmp
and
mov
xchg
lret
or
fs
pop
cmp
lock
mov
cli
add
scas
les
fwait
or
mov
pop
push
lret
jne
mov
aas
out
stos
add
cmp
push
pop
in
repz
leave
repnz
push
inc
cmpsl
xchg
int
mov
loope
fdivrl
jl
inc
jo
push
jo
xchg
loop
add
pop
jl
xchg
push
call
push
push
into
repz
xchg
scas
in
addr16
mov
ljmp
dec
dec
popf
xor
ret
push
mov
or
jmp
xlat
cmp
stos
in
and
push
daa
in
sub
aam
push
das
adc
cmc
xor
or
aam
mov
dec
imul
fdivl
cmpl
mov
xchg
repz
pop
incb
xchg
cmc
adc
idivl
sbbl
and
sarl
mov
leave
fdivl
push
out
call
dec
ljmp
test
call
or
push
mov
adc
scas
jb
fs
out
xor
into
dec
jb
mov
fadds
out
jg
addr16
inc
lods
insl
fwait
pop
lahf
pusha
mov
jg
pop
cmp
std
push
fwait
and
or
mov
mov
jne
jae
subb
int
leave
pop
jns
out
sub
sahf
add
add
int
push
rcll
iret
adc
sti
cmp
cmp
shlb
rol
bound
sub
mov
jl
inc
adc
add
pop
iret
and
testl
mov
jle
mov
or
js
pop
in
outsl
mov
mov
mov
pop
jo
inc
clc
ljmp
jecxz
aaa
lea
push
sbb
or
pop
xor
repz
push
jne
scas
dec
je
shrl
xor
in
jle
fistps
loop
in
jnp
movl
ds
mov
adc
ljmp
jne
ss
pop
std
jmp
push
fisubs
cmp
push
out
fisttpl
loop
add
mov
lds
mov
fbstp
es
cmp
cmp
or
pushf
mov
rorl
scas
pop
xchg
inc
iret
inc
leave
push
sub
jmp
dec
jae
sbb
xorl
push
imul
nop
mov
push
mov
push
loopne
fimull
in
enter
addr16
push
push
stc
pop
movsl
pop
push
push
xor
cmp
sbb
sbb
mov
mov
cmpsb
sub
pop
jmp
xchg
pop
pop
inc
lret
xchg
push
scas
sar
mov
mov
sub
adc
add
xor
push
dec
mov
clc
and
inc
fsubrs
or
into
cmp
scas
stos
sub
pop
mov
pop
mov
mov
push
test
sbb
adc
stc
iret
mov
jecxz
sbb
xchg
pop
in
fisttps
scas
mov
imul
pop
xchg
imul
stc
out
jmp
cld
pop
inc
enter
mov
and
fsubs
jne
movsl
lret
inc
push
lret
andl
sub
hlt
mov
xchg
shrb
pusha
hlt
sub
insb
arpl
std
add
add
and
add
add
add
push
mov
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
cmp
add
xchg
enter
and
hlt
into
xor
aas
hlt
add
sub
cmp
sbb
test
je
lahf
mov
inc
ret
mov
setle
pop
adcl
dec
outsl
cmpl
push
xchg
mov
sub
adcb
stos
mov
js
push
les
pop
dec
push
and
cmp
icebp
outsb
cli
jecxz
cmp
cmp
add
jnp
xlat
lods
fists
mov
leave
pop
addl
cld
or
shlb
jmp
xchg
ret
loopne
xor
das
mov
sub
and
xchg
push
rol
sbb
ja
mov
lods
mov
jecxz
mov
inc
add
or
dec
outsb
or
clc
adcl
pop
push
sahf
cmpsl
xchg
cltd
cmp
rcrl
mov
addr16
mov
xchg
lods
mov
movb
std
add
leave
fisubrl
xor
xchg
add
dec
shl
pusha
sub
push
jae
push
notb
mov
pop
cmp
cmp
in
adc
xor
push
roll
scas
loopne
stos
es
jb
push
xchg
or
loope
pop
sbb
sub
dec
dec
jo
add
pop
mov
pop
daa
in
mov
lods
lock
jnp
jg
xchg
out
push
int
inc
test
xor
gs
jnp
add
loope
jmp
out
xchg
rcll
decb
mov
lret
movaps
lret
icebp
xchg
imul
insl
pop
dec
or
dec
ds
shrb
jecxz
fists
shrl
mov
jecxz
into
pop
test
mov
push
or
in
dec
push
adc
pop
xchg
leave
popa
sti
sbb
mov
xor
in
dec
leave
bound
rcl
jns
insl
push
call
sbb
mov
fsubrs
mov
subl
lock
jno
and
mov
pop
pop
and
dec
fistps
xor
int
fadds
sahf
pop
or
sbb
nop
push
mov
in
push
xor
push
vshufps
inc
push
ret
shlb
mov
pop
mov
sub
pop
mov
cmp
mov
dec
lcall
nop
sbbb
dec
test
imul
cmpsb
xchg
into
xchg
outsl
pop
or
inc
sbb
pushf
std
shrb
sub
mov
push
cmp
rcl
or
jl
mov
or
dec
js
adc
xchg
adc
and
hlt
out
push
fwait
jecxz
cmp
lods
pop
mov
dec
and
cmpsb
lret
dec
cmc
hlt
inc
mov
out
xchg
les
pop
into
movsb
outsl
pushf
aas
pop
and
add
dec
aas
and
push
add
enter
cltd
xchg
xor
test
pushf
lret
adc
jg
pop
push
ljmp
jmp
xchg
repz
inc
mov
test
sbbb
test
in
jno
lcall
clc
into
adc
and
xor
inc
jbe
cs
cld
jle
mov
into
leave
push
xor
shll
jno
roll
ficoml
dec
sbb
cli
insb
add
xchg
lds
mov
mov
les
and
and
iret
pop
ret
inc
hlt
dec
xor
clc
pushl
jecxz
rorb
scas
xor
xor
dec
mov
inc
hlt
xor
loop
add
adc
dec
lret
test
push
xor
and
fistpll
push
inc
notb
or
jbe
das
push
cli
cld
ret
and
jbe
lcall
movsb
shrb
xchg
or
mov
dec
mov
add
inc
xchg
out
adc
sbb
sbb
adc
cltd
clc
and
or
pop
or
xchg
mov
mov
inc
pop
lret
mov
mov
hlt
scas
pop
push
pop
in
mov
xchg
into
push
decb
fisubrl
mov
mov
mov
ljmp
addr16
pop
loope
mull
mov
andb
push
cmc
nop
enter
lcall
lcall
jns
lods
lahf
mov
jae
mov
lods
into
pop
jge
jbe
xchg
dec
and
aaa
sbb
sub
dec
jns
repz
movsl
lahf
das
lret
stos
stos
sub
xchg
daa
dec
add
lret
movsb
mov
mov
loopne
cmp
js
pop
pop
ds
jne
inc
cmpsl
lahf
out
pop
mov
pop
and
inc
or
subb
push
xchg
les
loop
dec
xchg
lds
addr16
pop
loope
fcomps
push
in
in
in
cmp
xchg
aam
sbb
or
jle
sub
sub
in
call
jo
or
xor
call
or
leave
adc
cmpsl
outsl
insl
dec
mov
xlat
add
or
inc
mov
imul
in
das
xchg
ja
fs
sub
stc
cmp
sub
push
enter
xchg
aaa
inc
lret
popa
ja
out
lods
mov
stos
push
test
insl
les
das
fs
pop
mov
mov
lret
stos
fiaddl
add
sti
mov
repnz
call
lahf
clc
inc
cltd
insb
inc
rolb
xchg
mov
add
push
xchg
or
stc
cmp
jae
test
or
idivl
out
inc
dec
bound
mov
sbb
mov
stos
imul
leave
out
jp
sbb
push
sbb
mov
stos
imul
in
repz
pop
pusha
add
arpl
test
push
rcl
mov
pop
lods
add
jmp
addl
hlt
adc
shrl
test
mov
mov
xor
f2xm1
or
xor
and
in
out
bsf
sbbl
sbb
mov
dec
mov
add
sub
pusha
divb
paddb
xor
aas
hlt
or
fldt
adc
cmpl
mov
push
cmp
into
dec
in
cmp
dec
push
mul
jmp
and
ret
inc
lea
das
push
sbb
inc
fmull
cmovg
push
cmp
jnp
xchg
and
insl
pop
sub
or
cwtl
lcall
je
insl
jbe
fs
cmp
lea
jle
fsts
hlt
inc
xchg
and
dec
cmp
popa
xchg
mov
dec
in
adc
push
lret
lret
das
inc
loopne
addr16
into
out
fnsave
jge
jge
jecxz
andb
inc
sub
fs
mov
pop
hlt
outsl
orl
mov
stos
pop
cmp
imul
xchg
dec
mov
movsl
jae
push
dec
mov
push
jb
shll
push
dec
scas
mov
test
in
rclb
in
push
cmp
pop
dec
sysexit
lock
test
dec
xchg
xor
inc
push
xchg
out
add
jg
adc
push
test
dec
aas
pushf
mov
shr
xchg
popa
push
and
mov
cld
dec
and
xchg
popf
jp
daa
push
int
imul
jecxz
or
sahf
les
orb
cmp
cmp
or
imul
popa
lds
mov
jnp
rcll
mov
add
push
test
ret
sar
call
shlb
sbb
jp
sub
clc
mov
cmpsl
or
dec
push
int3
pushf
sarb
push
shrl
test
mov
mov
adc
cmpsb
daa
popf
icebp
call
hlt
jecxz
xchg
rorb
notl
out
pop
mov
leave
js
mov
sub
and
mov
and
sub
mov
xchg
and
in
or
push
cmc
inc
out
jp
out
rcll
sbb
ror
inc
xor
mov
insb
lds
jno
mov
adc
hlt
mov
inc
sbb
cmp
add
pop
cwtl
test
adc
xchg
lods
imul
jg
sub
xor
or
fcomps
orl
or
adc
inc
lret
imul
aas
ss
xlat
adc
inc
or
xor
cmp
mov
inc
mov
jnp
fldenv
cmp
mov
sbb
ret
fwait
push
push
roll
mov
mov
out
pop
movsl
scas
daa
jge
int3
cmovl
pop
push
inc
fdiv
cmp
mov
js
loopne
mov
mov
cli
test
push
mov
jg
mov
ficompl
push
push
xor
or
push
cs
adc
mov
sub
std
jmp
push
scas
jno
jae
jno
idiv
inc
dec
xor
dec
sub
gs
xor
mov
jg
push
aas
dec
hlt
sub
jmp
adc
or
adc
xchg
jmp
sub
lahf
pop
inc
call
mov
mov
cmp
sub
sub
xchg
or
or
test
and
shlb
arpl
mov
mov
sub
lret
jnp
ds
mov
pop
mov
push
dec
adc
xchg
mov
inc
dec
fs
std
and
xchg
mov
sbb
xchg
flds
cmp
orb
sbb
jg
cmc
test
dec
aas
shrl
push
rcrb
dec
dec
gs
jp
repz
push
or
and
mov
jnp
jns
adc
ret
enter
popl
push
cmp
cs
jne
mov
mov
mov
push
adc
int3
pop
sbb
lahf
pop
scas
cmpsb
addr16
pop
mov
mov
or
cld
pop
daa
xor
xchg
xchg
pushf
push
sub
daa
cmpsl
inc
repz
xchg
sbb
sbb
pop
dec
push
addb
cmpsl
dec
adc
jmp
or
add
cmp
fwait
add
xchg
sahf
jmp
fnstsw
adc
imul
inc
out
xor
leave
push
icebp
incb
in
into
or
lds
ds
into
xchg
std
xor
push
cltd
cli
xlat
stc
andl
xchg
mov
in
xchg
pop
lret
mov
pop
adc
mov
outsl
stos
insb
sub
jl
push
in
push
sub
bound
xlat
ret
popa
add
xchg
dec
incl
repnz
sar
lods
fsubr
push
iret
cmp
ljmp
mov
test
pop
lea
jmp
pop
pop
xchg
aam
push
cmp
test
and
sbbb
test
inc
sub
pop
enter
sub
pop
out
adc
mov
fisubl
scas
mov
lcall
lods
mov
xor
popf
jle
add
push
ret
fcom
pop
push
pop
movl
jg
dec
enter
sub
pop
xlat
cmp
pop
add
cmpsb
add
pushf
cs
insb
ret
subl
xor
sbb
out
leave
or
scas
jmp
cmpsl
xor
sti
loopne
dec
insl
test
xchg
mov
aaa
ret
ret
ljmp
add
in
mov
push
xlat
lret
jmp
push
mov
sub
or
add
xchg
or
fisttps
mov
mov
dec
shrl
add
fcomps
mov
test
loop
das
out
in
ss
pop
jbe
scas
cwtl
aad
pop
dec
sbb
cld
mov
add
adc
pushl
shlb
fwait
mov
jns
adc
xor
adc
hlt
push
push
mov
cmp
std
test
cmpsl
pop
xor
xor
mov
xchg
lret
add
push
mov
jb
icebp
std
scas
inc
jae
dec
ss
dec
xchg
out
sbb
or
repz
stc
inc
insl
insb
mov
mov
loopne
test
imul
sbb
sbb
ficompl
jmp
idiv
rcl
push
repz
dec
xchg
cwtl
ret
xor
stc
mov
or
sub
addl
cmp
and
ds
pop
rcll
xlat
mov
in
mov
addr16
mov
or
lock
jg
mov
icebp
out
adc
dec
jae
repz
mov
xlat
add
vmulps
clc
inc
rol
scas
aas
mov
push
ret
push
mov
mov
mov
or
pusha
pop
mov
rolb
mov
stos
mov
andl
fsubrp
push
inc
dec
pop
xor
sbb
inc
adc
loopne,pt
inc
xlat
mov
cmp
xchg
daa
pop
mov
mov
mov
icebp
cmp
flds
jg
gs
mov
scas
jno
dec
out
mov
or
nop
xchg
mov
xchg
fidivs
iret
sbb
pop
mov
pushf
push
loop
inc
imul
mov
rclb
rcrb
sbb
stos
loope
pop
lock
push
sbb
aaa
stos
mov
jmp
adc
mov
mov
in
jno
jns
leave
loope
scas
les
cmpsl
sub
cmp
push
adc
clc
mov
into
sbb
in
xor
cmp
imul
mov
or
loopne
jmp
or
outsl
dec
scas
sub
mov
movsl
pop
dec
nop
push
ret
mov
out
inc
xchg
add
or
mov
les
jge
lcall
aad
mov
sti
or
pusha
cmovge
pop
clc
in
scas
lods
push
jns
add
divl
loope
dec
js
mov
arpl
int3
mov
mov
ss
inc
scas
clc
loope
cmp
mov
mov
movsb
outsb
cmpsb
dec
fsubl
lods
daa
cmp
cmp
iret
bound
cmc
dec
xchg
pop
imul
loopne
mov
pop
fwait
jg
xorb
scas
xchg
cwtl
adc
popf
pop
lods
aad
inc
icebp
outsb
adc
jae
add
cpuid
std
js
pop
pop
sbb
outsb
cli
xchg
call
insb
imul
mov
xchg
xorl
add
cld
push
out
or
cmpb
and
mov
pop
and
mov
pop
add
jge
cmp
pop
jmp
jo
pop
movsb
fwait
pushf
lahf
leave
add
in
orl
jmp
dec
push
je
sbb
popf
pop
cli
popf
jge
cmpsb
pop
mov
repnz
sbb
push
or
into
xchg
push
lret
add
xchg
imul
or
loopne
dec
adc
xor
xor
sbbl
lods
add
test
sub
fidivrs
cli
jecxz
lods
lods
fldcw
jne
into
aas
pop
das
hlt
push
lds
lret
sbb
fcompl
lock
cli
out
inc
stc
cmp
bound
pop
mov
mov
push
imul
fs
in
inc
add
es
les
mov
pop
cwtl
ds
js
fs
fistpll
inc
aad
xor
dec
cmpsl
jle
popf
mov
pushf
inc
cltd
popa
call
sti
sbb
xchg
sub
sub
fwait
inc
aaa
mov
ds
push
adc
jbe
xor
mov
and
ss
cmp
ret
shll
mov
dec
jg
stc
std
shlb
call
pop
push
xchg
and
daa
lret
inc
lret
add
je
add
scas
mov
pop
pop
fadds
dec
jb
cld
mov
inc
xchg
xor
jg
cmc
and
push
rcll
cld
mov
sbb
mov
jmp
lahf
repnz
pop
jl
push
cmp
jl
cmp
mov
push
mov
inc
out
gs
xor
pop
pop
pusha
cmp
cltd
mov
lock
mov
test
scas
aad
jmp
dec
dec
inc
mov
inc
cmp
lea
pop
and
pop
push
cmp
pop
sti
ds
call
xor
rolb
int3
loop
repz
lds
in
push
lahf
aad
pminsw
insb
cmp
cmpsb
arpl
push
jmp
xchg
jp
lds
outsb
xchg
test
enter
rcrb
loope
shl
dec
sbbl
mov
mov
daa
ss
ljmp
jl
sbb
call
mov
fs
pop
dec
hlt
jmp
mov
mov
dec
arpl
std
or
or
shr
dec
cmp
aad
fstpt
test
les
popa
dec
sbb
out
jp
cli
dec
fucomi
push
push
push
cmp
fwait
cmc
cli
shrb
js
sbb
fcom
pop
movsb
ss
cmp
in
push
mov
pop
xorl
jo
lret
cmp
mov
hlt
insl
adc
es
push
insl
aam
jp
je
rol
xchg
mov
cmp
xchg
mov
push
mov
test
inc
xor
int
jge
mov
fnsave
cmp
mov
test
inc
test
lds
clc
inc
cld
ds
xadd
xor
xchg
in
fimull
insb
arpl
shll
push
cmp
xchg
push
aad
jbe
rorb
cmp
xchg
outsb
hlt
push
popf
xchg
insb
and
jae
dec
dec
fnstcw
test
adc
decb
je
outsl
sbb
cwtl
push
cmp
adc
leave
cmp
cmc
les
in
loopne
dec
push
in
movb
sbb
cs
cltd
push
jecxz
aaa
sbb
repnz
jae
push
dec
outsl
pop
pop
xchg
aaa
rcrb
xchg
addr16
testl
lret
mov
adc
loopne
inc
push
mov
or
mov
or
jo
lock
adc
call
xchg
popf
call
rcl
iret
cmp
fwait
mov
dec
or
cmpsl
aas
das
repnz
std
pop
data16
cmp
xchg
and
jnp
arpl
xchg
push
jg
xor
xchg
in
inc
adcb
jbe
cli
push
adc
mov
insb
xchg
mov
mov
inc
js
int3
imul
mov
outsl
pop
hlt
xor
subl
fcmove
mov
lods
hlt
jne
iret
andb
xchg
dec
scas
and
ja
dec
mov
add
imul
lods
sbb
rcl
out
mov
push
bound
loop
sti
mov
xchg
jge
fistl
add
outsb
dec
popa
push
insl
repz
je
and
mull
mov
aaa
je
enter
pop
add
outsl
imul
add
lods
aaa
out
repnz
add
xor
out
cmp
rol
sub
clc
sbb
mov
mov
mov
rcrb
adc
test
and
lcall
push
jp
xchg
loopne
aaa
stos
insb
cli
bound
mov
inc
add
movsl
in
inc
xchg
lock
sbb
pop
push
jle
popf
xor
aas
mov
add
js
pop
xorb
mov
test
fstl
sub
lea
mov
lcall
pop
stc
arpl
push
std
ds
add
mov
and
sub
add
push
bound
rorb
xchg
or
fdivrs
nop
movsl
sarb
outsb
xchg
inc
jecxz
mov
repnz
dec
mov
popf
les
adc
xchg
xchg
inc
rorb
and
not
or
dec
adcb
push
xchg
mov
sbb
pusha
mov
into
add
sub
cltd
imul
mov
pop
rorb
add
mov
push
xchg
mov
rorb
loope
test
xor
push
inc
xchg
jle
xchg
pop
mov
xchg
xchg
arpl
jecxz
inc
jno
daa
pop
and
movsb
aam
scas
rclb
mov
hlt
dec
jecxz
sbb
xchg
cmp
lret
sti
fmul
cmpsb
rcll
out
lret
mov
popa
cmpsl
xor
push
and
imul
scas
ret
pop
jecxz
aad
mov
enter
push
test
jg
sti
push
rcll
loopne
movsl
push
stc
add
lret
push
pop
jne
in
jl
js
pop
sbb
pop
scas
repz
daa
mov
mov
out
mov
pusha
lahf
lods
cmp
jmp
mov
or
cmc
adc
mov
pushf
push
in
add
pop
in
ss
push
pop
push
mov
mov
invd
or
pop
fmulp
ret
pushf
imul
adc
imul
dec
xchg
push
xchg
jmp
imul
ljmp
leave
pop
xchg
or
sub
pushf
pop
icebp
mov
pop
cmp
or
in
jns
aaa
sub
jne
push
mov
movsb
jp
popf
loopne
lahf
or
cmp
and
add
shrb
sub
inc
shrl
popf
push
mov
push
lret
stos
xchg
pop
dec
hlt
dec
loop
cltd
adc
shll
popf
lods
inc
jp
je
sub
mov
sarl
test
mov
lods
xacquire
jecxz
pusha
sbb
pushf
data16
fsubl
adc
fildll
mov
loopne
push
add
sub
xor
xor
fpatan
mov
fisubrs
sbb
or
add
adc
pushf
stos
in
call
iret
jmp
sbb
stos
aaa
repz
testb
dec
mov
push
push
dec
jl
sti
push
mov
lcall
fs
negb
lods
and
pop
rorb
movsl
hlt
pop
aad
and
loop
lock
pop
rcrl
int
mov
adc
outsl
mov
jle
fcompl
or
lcall
out
sbb
lea
negl
pusha
xor
adc
shrb
and
loope
mov
inc
rcl
imul
xlat
into
sub
subl
or
out
jns
jnp
fwait
in
popf
inc
xor
cli
mov
pop
dec
pop
and
jp
neg
cmp
add
pop
fdivr
movsl
mov
or
int3
out
arpl
testl
rcrl
out
shl
fmull
cmp
mov
lds
jge
jne
sbb
into
push
jg
and
mov
sub
sub
mov
cmp
cmp
lods
push
in
inc
dec
xchg
ret
insl
cld
mov
cmp
dec
lods
jno
das
mov
xor
cli
bound
out
cs
std
rorb
cmovs
mov
movsb
pop
adc
in
inc
xor
mov
mov
subl
jbe
push
cmpsb
jmp
xchg
int
in
or
sbb
lahf
clc
and
dec
mov
imul
sub
fists
or
cmc
test
mov
cmpsb
add
inc
xchg
daa
stos
fisubl
out
sbb
in
lods
test
shrb
dec
add
jnp
int3
fdivrs
mov
hlt
idivb
aaa
stos
cmp
mov
mov
aam
mov
pop
xchg
pop
aas
lock
sahf
aad
aam
das
dec
dec
mov
mov
jne
mov
lahf
aaa
jo
pop
lods
scas
out
xor
pop
arpl
mov
push
and
cs
mov
stos
pand
jge
cs
hlt
jns
pop
test
popf
dec
js
push
cli
aam
lods
movsl
mov
pop
push
sub
in
mov
loope
outsl
rorl
adcb
adc
lds
adc
shlb
adc
jmp
enter
cmpsb
loopne
sbb
sbb
call
sub
loop
pop
pop
pop
mov
sbb
mov
sbb
jecxz
repz
adc
push
xchg
or
lret
push
das
mov
inc
ret
mov
orb
push
notl
mov
mov
mov
fwait
push
stc
inc
lret
mov
dec
adc
inc
mov
ss
ljmp
jnp
ret
push
fsub
fs
mov
sbbl
jmp
in
mov
pop
cmpsb
dec
mov
enter
jecxz
dec
pusha
jo
add
push
sub
and
mov
pop
inc
add
and
pop
and
jg
sbb
scas
or
or
dec
mov
je
aas
out
dec
int
adc
cmc
jmp
cmp
shl
aad
push
aas
iret
add
test
insl
fsubs
sub
adc
inc
adc
fsts
cmp
pop
add
xchg
mov
jecxz
lock
or
into
inc
arpl
lods
sub
xor
mov
and
pop
andb
test
andl
inc
dec
bound
mov
pop
fistpl
adc
fisubl
popf
push
mov
movsl
push
push
leave
sub
add
jo
loopne
cld
jecxz
xchg
push
jmp
xchg
loope
xor
hlt
iret
xchg
xchg
and
ret
adc
cmp
cmp
push
xor
mov
mov
shl
cmp
jo
inc
dec
fstp
add
inc
xchg
add
add
pop
lds
out
and
jmp
cmp
negl
arpl
xchg
dec
mov
mov
jmp
dec
iret
and
cmp
pusha
fwait
arpl
jbe
add
shrl
dec
and
movsb
add
es
jmp
sub
mov
ja
mov
sarl
shlb
into
dec
repz
daa
popa
out
out
mov
mov
jnp
mov
cmovb
lea
into
push
mov
push
adc
mov
addl
and
fsts
pusha
bnd
pop
es
or
div
cmp
mov
cmp
fwait
cmc
fdivrp
cs
push
addr16
mov
rorb
pop
aad
lret
cmp
arpl
cmp
pop
cltd
push
pop
fistpl
cmc
enter
fdiv
in
cmpxchg
stc
mov
pop
pop
push
jecxz
int
xchg
sbbl
stos
mov
mov
fildll
xor
mov
mov
push
mov
jo
inc
outsl
lret
mov
inc
cwtl
lods
out
push
or
movsl
roll
clc
xchg
push
js
test
pop
hlt
shlb
dec
xchg
mov
loopne
cmp
mov
cwtl
lds
push
out
pop
add
push
lahf
fwait
mov
sbb
imul
inc
lea
imul
sbb
popf
pop
and
lret
jmp
add
lods
test
push
fimull
gs
xchg
sar
xchg
call
push
mov
cmp
outsl
cmpsl
jo
dec
mov
mov
cmp
fstpl
inc
inc
adc
movlps
cld
add
sub
fildl
cli
call
cmp
mov
dec
xchg
dec
sbb
movsb
mov
jne
loop
mov
call
cli
aas
push
jno
std
adc
push
ss
jno
loope
add
test
xor
mov
scas
hlt
inc
outsl
cmpsb
pop
and
fs
inc
pop
fdivrs
dec
adc
dec
je
mov
mov
stos
dec
add
jno
add
in
fcomi
out
jb
push
enter
lock
mov
jae
lcall
aas
mov
mov
and
repnz
pop
cltd
rorb
std
jmp
inc
jp
loopne
xlat
loopne
aam
ret
add
sub
ja
xlat
jno
xchg
dec
ljmp
and
cmpl
rolb
jle
repz
shr
pop
or
ret
addr16
stos
xchg
or
sbb
sub
add
mov
lret
sar
xchg
ret
out
gs
lahf
ffree
jmp
lods
sbb
aam
ret
push
mov
xchg
xchg
sbb
fiaddl
fdivr
xor
jb
aam
add
shr
pop
jle
pop
lods
pop
test
cs
or
cmp
enter
nop
ds
test
in
rol
jl
pop
ficompl
pop
rcrb
testl
mov
das
dec
xchg
push
push
lods
aam
jb
mov
pop
jns
mov
pop
mov
imul
pop
repz
add
int
into
dec
jecxz
mov
test
cld
scas
nop
xor
sbbb
xchg
std
rep
inc
pop
sti
mov
lret
mov
ljmp
dec
push
nop
add
cltd
js
in
rclb
sub
fnstenv
jns
inc
push
lret
sub
jge
rol
leave
loop
and
fwait
mov
in
fdivrs
sub
addr16
call
adc
xlat
test
cmpsb
xchg
movsb
cmc
aaa
imul
pop
adc
adc
or
mov
out
and
mov
cld
sub
shl
dec
adc
or
xor
cmp
scas
mov
addl
push
mov
cmp
mov
jb
jno
mov
sbb
insb
imul
int
movsl
adc
cs
add
xor
and
lock
data16
xchg
movsb
jp
mov
cmp
mov
movsb
sbb
fisttpll
inc
push
xor
jno
or
and
inc
push
and
lods
pop
out
cmpsb
mov
lcall
xchg
jae
mov
pop
data16
insl
fcomps
ds
sbbb
js
shll
sbb
push
jno
hlt
dec
shrl
lcall
xchg
adc
xchg
fistpl
sbb
sbb
sub
enter
popf
lea
xor
mov
and
xchg
ret
andl
sahf
xchg
dec
jl
out
pushf
cwtl
sbb
push
cld
add
mul
inc
stos
out
jae
divb
add
and
js
out
sub
loop
lcall
pop
lds
mov
mov
cld
adc
fcomp
fsubrl
mov
or
jns
pop
xor
mov
xchg
sub
sbbb
xor
push
jae
xchg
test
sub
into
mov
add
push
mov
lret
push
adc
es
gs
push
mov
mov
out
mov
ss
sub
sub
add
loope
and
inc
outsl
push
in
mov
add
ljmp
and
lock
ss
and
dec
test
cmp
add
popa
mov
lahf
jecxz
pushf
sbb
ret
mov
ds
push
ret
dec
push
mov
out
pop
push
arpl
lret
inc
pushf
es
pop
fcomps
mov
xor
and
xor
push
enter
jle
loop
pop
aad
insl
fisttpl
test
xchg
cs
push
inc
adc
fnstsw
adcb
mov
iret
cltd
gs
mov
lods
fmul
lods
in
jg
into
or
push
push
pop
push
in
xor
cmpsl
pop
shlb
sub
cmpsl
push
dec
es
enter
mov
rcl
pop
imulb
aam
cmpsb
jns
fcmove
clc
lds
mov
lock
into
aaa
out
out
stos
and
jp
inc
arpl
pusha
fisttpll
pop
mov
sarb
clc
out
fcmovb
pop
dec
xor
nop
outsb
clc
mov
jb
xor
sarl
sbb
mov
ret
push
adc
nop
bnd
jbe
shl
cs
mov
jle
add
mov
mov
jo
cmp
xchg
scas
and
out
or
xor
lcall
jne
cmp
or
cmp
sbb
and
inc
fistl
cli
push
bound
pop
cli
dec
mov
mov
ficoml
lock
loope
nop
adc
jb
test
inc
xor
mov
movsl
jp
out
xchg
xchg
cld
sub
js
sbb
push
push
jbe
mov
xchg
ret
outsl
mov
test
add
into
cwtl
cmc
push
insl
adc
pop
loop
push
rclb
imul
pushf
cli
dec
fs
sub
mov
movsl
stos
stos
mov
lock
jg
pop
scas
scas
hlt
jnp
cwtl
and
xor
rclb
les
scas
ret
push
stos
or
xchg
pop
mov
clc
pop
ret
pusha
xchg
sub
sarl
sub
and
jg
das
push
cmp
or
jmp
mov
mov
mov
test
out
fisttpl
and
rcll
mov
mov
pop
or
sbb
mov
popa
xor
cltd
add
inc
das
cmp
xchg
stc
cmpsb
iret
lock
jne
fcompl
pop
adc
mov
inc
xchg
inc
cmp
dec
pop
push
pop
outsb
test
add
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
or
push
jb
addr16
insl
insl
and
outsl
je
arpl
and
je
and
push
inc
inc
dec
push
push
inc
push
inc
inc
and
jo
and
and
inc
inc
jb
jo
outsl
jb
or
incl
jmp
call
add
jmp
call
into
test
cmp
les
pop
adc
push
imul
daa
pusha
push
or
push
add
push
mov
pop
ss
xor
mov
or
add
add
jge
xchg
inc
sub
pop
pop
or
inc
outsb
sub
dec
adc
adc
dec
scas
sub
pop
add
mov
cltd
or
cltd
or
cmp
or
inc
adc
push
test
xor
adc
or
add
or
lcall
