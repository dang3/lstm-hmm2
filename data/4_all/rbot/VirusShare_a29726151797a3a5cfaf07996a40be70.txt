repnz
insl
cld
mov
les
mov
cmpsb
mov
lret
xor
in
xchg
mov
stos
or
hlt
shlb
pop
ds
vpcmpeqb
push
pop
idivb
fwait
std
pushf
lcall
cmp
sbb
sahf
mov
add
cmp
ret
test
cwtl
mov
fs
lods
xlat
leave
or
jge
push
inc
sbb
xlat
sahf
xchg
cmp
out
lock
mov
and
mov
icebp
mov
test
loope
dec
subb
sub
fidivrs
cmp
fcmovbe
push
add
and
and
sbb
movsl
fwait
pop
adc
and
mov
icebp
xchg
push
mov
fsubs
push
sub
cld
adc
dec
dec
xchg
xchg
cmc
pop
cld
or
jmp
pop
fsubrp
adc
mov
adc
daa
fdivrs
adc
dec
inc
data16
or
push
jbe
cld
std
dec
or
lret
push
cmp
sbb
mov
cmp
loopne
mov
lea
les
addr16
push
sub
ror
dec
cmpsl
nop
test
dec
xor
adc
mov
loopne
jb
mov
aad
sub
addr16
lcall
add
pop
mov
fsubrl
jo
add
in
inc
shlb
push
add
push
jmp
xor
arpl
adc
inc
push
dec
mov
out
out
fs
int3
aaa
orb
cmpl
sub
push
fst
or
xchg
or
insl
es
mov
andb
mov
rep
clc
addr16
jb
ficomps
pop
cmp
fsts
stos
push
and
jnp
enter
cwtl
pop
fldenv
pop
das
jne
dec
mov
inc
js
out
jg
mov
inc
push
incl
negb
clc
sbb
imul
push
cwtl
mov
push
pop
scas
cmp
mov
insl
adc
shlb
lret
test
les
divl
push
push
cmp
push
inc
jnp
mov
popa
cmp
lods
rcrl
in
lock
ss
jmp
aad
jo
pop
pop
xchg
jb
sbb
sub
out
cmp
mov
push
mov
cmc
push
fsubl
test
lahf
test
shrb
aad
and
insl
push
inc
xor
cli
mov
loopne
or
les
xchg
dec
dec
sti
aaa
and
nop
adc
sub
mov
test
repnz
add
sub
or
adc
dec
adc
sub
es
in
test
imul
xor
fadds
xlat
mov
repnz
loope
cmp
mul
fdivs
in
aad
or
add
xchg
mov
lahf
jge
scas
inc
in
and
fdiv
cmp
enter
mov
mov
clc
add
sbb
jge
and
mov
sbb
and
mov
push
dec
lods
and
notl
jmp
popf
cwtl
add
incl
xchg
ret
fimuls
pop
cltd
xor
movl
fldl
add
ret
call
fcoml
cmp
dec
std
xchg
or
lret
cli
sbb
adc
sbb
test
pushf
cld
adc
mov
shll
jbe
mov
lea
and
inc
adc
cltd
add
pop
movsl
mov
mov
push
out
xchg
fisttpl
pop
test
push
in
sub
popa
loope
std
push
hlt
out
pop
pop
dec
int3
jmp
and
pop
addl
inc
adc
cs
sbb
and
into
xchg
cld
push
sbb
cltd
outsl
jmp
hlt
cmc
lods
push
sbb
pop
scas
mov
test
mov
gs
and
ja
stos
loope
inc
add
popa
dec
in
mov
dec
mov
es
sti
push
arpl
loopne
xchg
imul
fnstsw
dec
xor
mov
outsl
repnz
mov
lret
pop
xchg
xorb
jg
out
pcmpgtw
push
adc
mov
xor
jmp
jno
in
cmp
fildl
mov
lea
es
cwtl
cmp
cmpsl
dec
iret
sbb
mov
jbe
stos
dec
push
mov
mov
cltd
roll
out
fcmovbe
out
xor
insb
xor
push
mov
push
cmpsb
xchg
test
push
sarl
lods
inc
sahf
inc
mov
int
mov
int
sub
loop
mov
sub
aam
sub
and
lea
mov
jecxz
sbb
cmp
mov
cmp
ljmp
pop
push
addb
fs
aaa
and
enter
imulb
xor
jl
test
sbb
pusha
shlb
mov
je
or
jnp
jmp
push
dec
pop
cmpsb
mov
cmpsb
inc
pop
aam
outsb
jb
jmp
sbb
stos
sbb
lcall
pop
sbb
push
js
mov
jns
loopne
popf
xchg
lea
jge
xor
mov
push
jns
cmpb
js
jp
out
loope
xchg
out
xor
cmp
jecxz
dec
xlat
and
jl
ds
inc
icebp
adc
insb
clc
jno
push
lahf
incb
push
out
arpl
sub
clc
xchg
arpl
adc
sbb
push
scas
lods
popf
ljmp
popa
cmp
ror
cld
sahf
and
mov
sbb
scas
and
xchg
push
testl
mov
rcll
in
push
addr16
and
cs
pop
mov
mov
push
push
inc
jnp
mov
ja
repz
fwait
adcb
pusha
test
fcmove
mov
shll
push
add
sbb
dec
adc
dec
fsubp
subl
cmp
pop
xchg
fidivrs
rorb
aam
cmp
cs
push
int
sbb
cmp
shl
fidivrl
aam
adc
out
jae
pop
lcall
sbb
rcrl
inc
cltd
repz
mov
jg
cltd
mov
add
cmp
push
jp
push
add
pop
cld
stc
push
push
push
push
lea
push
push
push
push
push
add
cld
sar
and
mov
xchg
push
or
pop
push
push
or
pop
pop
rol
or
cld
mov
add
push
jno
push
add
pop
pop
js
lea
jmp
xor
sub
adc
mov
aad
movsl
pop
push
addr16
inc
dec
push
call
push
test
pop
push
test
pop
test
mov
add
jns
push
push
push
mov
pop
pop
pop
nop
push
js
or
pop
nop
push
add
pop
jne
or
push
ror
pop
jge
push
mov
pop
cmp
test
jl
je
or
lea
jno
push
mov
pop
clc
clc
push
add
pop
jno
or
push
or
pop
pushl
pop
test
push
cmp
pop
ja
push
jbe
mov
pop
std
cld
xor
jae
jo
or
push
jle
xor
pop
cld
test
jne
jmp
push
mov
pop
cmc
push
cmp
pop
jge
push
add
cld
cld
push
add
pop
push
call
jecxz
jno
jb
pop
pop
mov
jb
and
out
mov
popa
adc
cmp
lea
xor
jnp
jb
pop
xor
and
ja
push
push
add
pop
push
stc
pop
push
push
inc
pop
pop
test
cld
mov
inc
inc
inc
inc
add
sub
nop
ror
sub
jmp
add
jno
int
dec
mov
outsl
loope
push
mov
mov
lret
imul
jecxz
out
sub
pop
jno
lods
inc
push
subb
ss
outsl
lret
inc
stc
jno
scas
xchg
popa
jb
sub
out
mov
pop
mov
scas
pop
out
sbb
mov
jne
loop
jecxz
lock
sti
lret
xchg
push
push
cmp
pop
pop
nop
sub
clc
push
push
cmp
pop
pop
cmc
cmp
clc
and
jmp
jecxz
pop
mov
pop
divl
inc
test
sub
jno
hlt
xchg
dec
inc
mov
mov
add
jmp
in
push
call
lahf
adc
repnz
xchg
ret
inc
int
aas
stos
push
push
inc
cmp
jbe
push
subb
repz
push
jae
bound
jns
inc
push
or
in
jl
mov
call
stos
push
push
push
lret
pop
mov
lock
insb
mov
dec
aad
ds
xchg
lret
mov
adc
inc
pop
pop
mov
fdivrs
cmpsb
fildll
inc
mov
mov
cmpsl
mov
sbb
repnz
mov
lcall
pop
xchg
frstor
subl
dec
out
jle
cmp
adc
and
ss
push
add
mov
adc
jmp
bound
cmc
mov
jo
adc
add
dec
lock
sti
jbe
xchg
pushf
add
mov
cs
add
cld
pop
sbb
push
jl
lret
shrl
fnstcw
clc
xchg
mov
xchg
cs
pop
shrl
iret
insl
mov
stc
adc
and
push
pop
sti
xor
adc
rep
mov
and
dec
in
in
imul
in
int3
shr
pop
cmp
sbb
mov
mov
mov
pop
out
cmp
mov
movsb
push
pop
xchg
dec
pop
dec
daa
inc
shrl
cmp
mov
mov
mov
loope
xor
pop
ret
mov
in
adc
jp
fwait
inc
pop
xor
xor
mov
call
gs
dec
adc
xor
das
and
push
mov
or
ljmp
test
fld
ror
shll
xchg
mov
fwait
ret
outsl
repz
lods
das
cmpsl
sbbb
sub
cmp
sbb
or
dec
lods
adc
jge
adc
sbb
imul
pop
in
rorl
mov
or
mov
icebp
or
inc
dec
mov
pop
rolb
subb
flds
cmp
stos
sbb
adcl
cli
pop
ret
jnp
xchg
sub
lea
cmc
jno
push
xor
in
sub
loop
sub
or
inc
fildl
pop
push
in
mov
and
cmc
push
dec
and
fdivr
cmp
mov
psrlq
lods
mov
out
pusha
mov
jns
mov
jp
xchg
mov
int3
pusha
sub
xchg
sub
xor
insb
insb
je
push
push
negl
lds
push
rcl
cmc
pop
adc
pushf
cmpsb
stc
aam
sub
push
test
mov
xor
mov
pusha
das
sbb
std
sbb
stos
and
in
jns
inc
inc
sub
push
mov
insl
jae
pop
dec
fisttpll
aad
mov
mov
mov
repnz
mov
insb
scas
mov
sub
push
xchg
adc
repz
out
xchg
dec
or
jns
dec
adc
jmp
mov
sbb
sub
pusha
ja
scas
xchg
movsb
mov
and
in
pop
fwait
stos
insb
mov
xor
sub
push
fimuls
dec
decl
insb
movsl
add
push
add
dec
jg
sub
xlat
lods
dec
jnp
cltd
leave
jns
xor
cmc
loopne
out
pop
icebp
push
movsl
jbe
jbe
jne
jmp
ds
sti
rcrb
hlt
ja
movsl
shl
xchg
rcll
sbb
pushf
stos
aam
push
and
xchg
aas
or
outsl
pop
sbbb
or
mov
mov
cmp
or
sbb
testl
cmp
xchg
jle
xchg
push
cli
in
xor
mov
add
mov
iret
mov
sbb
daa
cmp
shll
jge
xchg
push
mov
push
mov
xor
inc
into
dec
jbe
test
fsts
xchg
and
js
sub
cmp
xor
add
mov
enter
xchg
into
movl
jmp
icebp
adc
int3
lds
dec
sbb
nop
inc
xchg
aas
aam
push
lock
cmp
imul
adc
pop
adc
push
fnsave
sbb
jp
subl
cmp
push
and
cmp
lods
cwtl
jo
fucomip
pop
daa
fcomi
mov
mov
lcall
add
lea
iret
jne
mov
lret
mov
jl
xor
lds
outsl
xor
mov
jmp
mov
xchg
gs
and
xchg
stos
xlat
mov
xchg
push
mov
xor
dec
ja
jbe
daa
ret
cmc
in
adc
pushf
addb
adc
xor
popf
mov
push
sbb
sbb
jg
loope
push
mov
jmp
fimull
sbb
and
jo
aaa
insb
xchg
cld
lahf
xchg
or
divl
je
repz
std
in
pop
jno
push
fs
lds
fnstcw
and
cmp
cmc
push
out
sarb
dec
std
add
mov
cmp
int
movsb
inc
mov
and
dec
mov
push
pop
jb
fisttpll
popa
daa
inc
sub
mov
adc
pop
cwtl
nop
out
fistl
sti
popf
and
xchg
push
or
mov
test
pop
pop
inc
aad
sub
sbb
xchg
xchg
and
jmp
or
inc
jecxz
jg
sbb
sub
pusha
movsl
sarl
into
sbb
jp
push
arpl
movsb
dec
ss
lds
mov
cmovp
cmp
prefetchw
sbbl
add
push
sarb
cmc
dec
dec
mov
xchg
sub
ret
jmp
or
sub
stos
ja
push
fdivl
loope
sbb
iret
lahf
xor
and
jns
push
cmpsb
jp
cmp
or
adcb
xorb
mov
pusha
aam
imul
lods
mov
adc
ljmp
cmp
int3
jnp
into
xchg
test
mov
jae
jecxz
in
js
inc
jnp
mov
jbe
mov
adc
mov
shrb
push
push
lea
adc
dec
addr16
shl
sbb
add
sbbb
and
jno
sbb
gs
dec
jb
xor
mov
ja
es
cmpsl
mov
mov
xchg
mov
dec
les
aaa
imul
xor
inc
test
fwait
mov
call
lret
jecxz
fcomps
or
xchg
adc
cld
shrb
push
arpl
inc
ret
xchg
repz
ror
xchg
aad
xchg
pop
mov
int3
pusha
bnd
out
lret
pop
push
sub
mov
dec
loope
jbe
inc
inc
mov
jo
fsubrl
xor
aaa
movsb
icebp
aad
pop
movsb
cmp
insl
rorb
lea
dec
inc
fadd
out
cmp
aam
outsb
cmp
cmpsb
pop
cs
lret
mov
add
jmp
in
repz
jg
jo
ja
inc
rorl
insl
mov
je
xchg
dec
xchg
out
scas
popl
jnp
enter
push
sbb
and
push
push
mov
in
jmp
jbe
scas
js
mov
add
bound
sbb
mov
iret
lcall
jl
loopne
loopne
cwtl
pop
inc
loopne
sti
jne
or
dec
test
in
clc
sub
jo
rolb
cmpsl
lcall
pop
push
into
leave
xchg
repnz
bound
pop
dec
cwtl
popf
hlt
movsl
inc
pop
cltd
ret
push
and
mov
cmc
filds
ljmp
inc
out
out
dec
lahf
mov
movsb
gs
mov
jae
xchg
xchg
or
inc
sbb
js
inc
pop
jp
dec
lahf
jl
jg
adc
insl
call
jl
scas
std
or
cld
inc
xor
or
neg
xor
pusha
or
ja
orb
fimuls
idiv
and
xor
ss
ljmp
std
adc
in
inc
sti
push
test
push
stos
jae
xor
mov
xchg
sbb
jnp
ret
getsec
cli
divps
into
std
dec
and
or
push
imul
push
jmp
pop
adc
sub
xor
cli
lods
gs
cmp
std
jl
dec
sbb
or
or
cmp
and
sbb
dec
mov
jne
lods
daa
sbb
adc
es
ss
aas
frstor
mov
or
sbb
ss
int3
sub
push
mov
cwtl
mov
dec
jo
out
sbb
cmp
mov
imul
xchg
pop
jmp
adc
mov
shrb
sbb
cltd
lcall
or
pop
xchg
out
out
cmp
lret
test
add
jb
bound
pop
test
sub
pop
cli
xor
sahf
into
or
xlat
cmpsb
rcll
push
and
xchg
jle
mov
fld
fisubrs
mov
stos
xchg
ss
ss
and
shll
and
push
jecxz
pop
sarb
andb
xor
das
pop
mulb
jb
orl
jne
dec
lahf
adc
sub
cmp
adc
mov
xchg
pop
mov
adc
mov
push
and
pop
lret
inc
out
lret
jne
insl
ds
insb
push
hlt
test
imul
clts
xchg
dec
insl
pop
push
mov
jnp
mov
push
xchg
negb
dec
mov
xchg
mov
ret
xor
xor
out
sbb
sbb
mov
dec
push
push
pop
mov
mulb
pop
aaa
ret
dec
inc
ret
inc
add
lahf
rcrb
ja
rolb
sub
jge
stc
add
push
out
aaa
out
nop
adcb
rcrb
aaa
pushf
cwtl
mov
test
adc
and
leave
add
cltd
xchg
push
xchg
popa
das
push
mov
push
addr16
in
dec
enter
fistl
js
jge
cmp
lea
adc
jmp
mov
loope
scas
cmp
insl
push
sbb
lret
daa
adc
insb
pop
repnz
and
add
pop
mov
jmp
lods
and
les
pushf
add
ss
push
xchg
mov
mov
inc
inc
outsb
mov
inc
dec
popf
lods
jecxz
int3
add
sub
pusha
dec
adcb
mov
lea
test
xchg
movsl
test
and
push
and
add
mov
jl
cld
rorb
inc
clc
adc
ljmp
jle
mov
jns
pop
cmp
ja
and
sbb
mov
inc
mov
sti
cwtl
xlat
xchg
fsubl
js
sbb
jae
ret
jo
imull
enter
mov
push
cld
enter
je
push
jb
aas
push
fs
jl
xor
shlb
leave
pop
mov
dec
push
and
jle
sub
adc
nop
sbb
test
test
xchg
out
into
cmpsb
push
xor
repnz
sub
mov
jp
and
test
xchg
pop
jp
cmp
aaa
out
inc
xchg
out
fsubp
fiadds
fistpl
lret
aas
test
lods
ret
mov
in
jle
outsl
repz
mov
test
jecxz
ds
ja
push
xor
jo
push
addb
imul
sbb
push
mov
add
das
adc
push
loop
xor
sbb
or
dec
cmpsl
call
jo
insb
jge
dec
push
int3
add
add
xor
push
fnstcw
fstpl
mov
mov
and
cmp
xchg
adc
arpl
sub
mov
js
les
iret
mov
jno
lcall
fmuls
insb
andl
push
lods
lcall
and
pop
xor
push
int3
push
loope
imull
lret
cs
xchg
movsl
inc
mov
addb
sti
imul
jbe
out
dec
test
shll
or
insb
mov
push
jmp
xchg
ss
pop
cmp
and
push
and
xor
mov
xor
fcoms
ss
out
jae
ret
insl
mov
xor
and
jge
jno
aaa
mov
push
xchg
mov
mov
xchg
ljmp
push
popl
pushf
outsb
out
or
sub
push
cmp
add
mov
add
cli
fidivrl
dec
mov
je
sub
es
int3
cmp
mov
ret
out
mov
jg
sbb
mov
mov
jns
fstl
sub
ret
jecxz
mov
clc
ret
call
int3
jnp
shll
fidivrs
adc
cmc
push
out
popf
rcr
outsb
sub
dec
pop
cmpsl
push
jnp
mov
adc
mov
mov
test
push
out
out
ret
jg
pop
idivb
scas
inc
aas
mov
jmp
sti
pop
xor
pusha
js
xchg
pop
movsb
jmp
push
mov
mov
pop
cmc
sub
outsl
or
sub
popf
ja
or
and
push
mov
cli
cmp
dec
xchg
adc
pop
lret
in
cli
loope
mov
sbb
xchg
inc
lock
sbb
inc
sbb
add
fnsetpm(287
push
mov
push
leave
pusha
sub
sbb
out
inc
int3
jmp
dec
jns
in
xchg
jb
mov
in
mov
add
gs
stos
jmp
rclb
addb
outsl
out
xchg
ljmp
cwtl
daa
pop
rorl
push
outsl
add
pop
fisttps
dec
les
sbbb
cwtl
mov
cmc
loope
shrl
sbb
or
hlt
loope
adc
pop
popa
icebp
repz
inc
sbb
out
dec
push
mov
idivl
push
jns
hlt
mov
sbb
adc
dec
mov
mov
xchg
sbb
mov
xchg
movsl
fwait
aad
es
incb
leave
jl
scas
mov
mov
mov
mov
adc
lock
cld
push
push
divb
inc
mov
test
jp
sbb
xor
imul
xchg
insl
mov
mov
lds
aas
add
jg
movsb
jno
cmpsl
popa
out
xchg
and
adc
lret
ret
mov
adc
pop
popf
aam
sbb
mov
ret
rolb
std
loop
mov
push
cli
ror
add
and
shr
jo
fs
dec
xchg
aad
es
gs
je
dec
mov
and
push
jecxz
inc
movsb
push
neg
push
dec
scas
pop
mov
cltd
lods
call
fadd
fisttpl
mov
adc
or
mov
int3
sbb
adc
adc
ljmp
lock
dec
pop
test
mov
pop
jl
jg
dec
cltd
lods
xchg
insb
out
dec
fdivl
sbb
inc
into
and
out
test
mov
enter
xchg
dec
je
cmp
popf
loopne
mov
ficoml
xchg
call
bound
stos
adc
mov
loope
mov
inc
outsl
mov
adc
fisubrl
nop
dec
movsl
or
repnz
enter
sub
lds
jnp
jo
push
mov
or
mov
and
sbb
mov
adc
mov
je
jmp
iret
or
or
aam
lahf
push
push
out
cmpsb
sarl
filds
in
scas
test
sarb
or
mov
push
psubsb
jae
fadds
stc
mov
inc
pop
jb
mov
cmp
imul
leave
and
jno
sub
outsb
push
pop
mov
cltd
sub
hlt
in
push
bound
repz
jle
cld
dec
test
imul
cmp
or
clc
test
push
mov
fstp
inc
xchg
lds
call
dec
jbe
sbb
xchg
addr16
rcr
or
push
push
sbb
iret
mov
inc
mov
in
mov
xor
mov
pop
pushw
or
test
aaa
push
subl
lods
jl
push
daa
insb
cmp
mov
jno
cltd
js
or
inc
lret
add
pop
jbe
and
loope
mov
adc
iret
fcmove
out
or
lods
jl
jp
rcll
test
mov
cli
out
pop
add
add
sti
jnp
mov
jbe
mov
adc
clc
fsubrl
pop
xchg
idivb
stc
push
sti
mov
or
je
mov
add
jp
negl
sub
xchg
jo
cld
mov
jae
jmp
popl
push
mov
outsl
leave
cmp
xchg
pop
push
xchg
mov
sbb
mov
jl
mov
sbb
sahf
sub
sub
insb
ja
mov
inc
scas
inc
cltd
push
xchg
add
lret
inc
cs
xor
or
sub
in
popa
jge
js
xlat
xorb
and
add
jmp
and
or
cli
sub
in
scas
loop
lea
cmpsl
scas
fiaddl
sbb
jo
out
push
dec
aam
fcmovnu
xchg
push
mov
pop
rolb
pop
data16
out
or
outsb
xchg
addr16
jns
add
out
push
std
cli
call
gs
push
fcomps
mov
mov
inc
dec
mov
mov
lock
jae
xchg
arpl
nop
sbb
test
fs
jbe
jns
shrd
js
jge
push
dec
pop
adc
mov
leave
xchg
pop
loopne
push
inc
pop
jg
sti
lock
cmpb
xchg
mov
xor
leave
sbb
icebp
cmp
cmp
push
push
lods
je
or
jp
mov
lahf
inc
test
push
aaa
sbb
cld
sub
pop
rcrb
cmc
lcall
mov
xchg
insl
mov
push
ljmp
lcall
into
in
addr16
sbb
movsb
inc
cmp
xor
push
adc
cs
mov
sub
arpl
mov
sub
pusha
insl
inc
ja
fstpl
pop
data16
dec
insb
xor
jp
cmp
lret
pop
mov
call
cmp
lahf
fwait
push
or
cmc
dec
xor
aas
xor
xor
mov
outsl
pushf
test
arpl
cmc
dec
inc
dec
lods
sub
mov
xchg
lahf
mov
mov
push
adc
mov
insb
fcompl
cmpsb
adcl
mov
xchg
orb
gs
inc
pop
test
xor
fcomps
and
lds
fs
push
jne
stos
sub
loop
dec
loop
leave
add
frstor
lcall
mov
dec
test
cs
rclb
fs
mov
add
mov
jbe
aas
pop
xor
push
cwtl
cwtl
mov
sarb
pushl
pusha
lock
jge
or
fimull
adc
cld
inc
dec
xchg
dec
pop
and
jo
std
mov
add
andl
lret
sar
or
jmp
pop
cmp
add
movsb
jno
pop
mov
xor
add
sahf
pop
sub
rol
pop
std
adcl
fxam
and
loop
hlt
adc
jmp
ret
cmpsb
mov
jecxz
aad
xchg
pop
test
mov
mov
jge
arpl
hlt
clc
mov
stos
stos
xor
pop
mov
jle
addr16
icebp
push
fsub
sub
pushf
shll
flds
mov
lret
fxch
sub
pop
iret
bts
repz
scas
hlt
xchg
cltd
sahf
pop
shll
xchg
stos
xor
cmp
and
test
mov
fiaddl
sahf
subl
sub
push
push
mov
hlt
and
and
dec
fcomp
cmpsb
sbb
add
xchg
push
inc
shlb
testl
aad
inc
push
ret
push
ret
cmp
pop
call
xor
addr16
mov
popa
push
mov
stos
nop
jno
push
mov
scas
loop
idiv
mov
inc
pop
xor
inc
mov
andl
imul
mov
push
sbb
cwtl
fisttps
pop
pushf
xchg
sbb
inc
inc
test
decb
shlb
movsb
xor
subl
mov
sbb
mov
jno
cmp
push
es
mov
aam
push
sub
or
pop
cmp
pop
bswap
cmpb
popf
and
cmc
mov
push
xchg
scas
pusha
push
push
bound
xchg
mov
ret
xor
lcall
mov
mov
scas
data16
aas
mov
and
fstl
and
pop
pop
push
repnz
loopne
sbb
call
imul
mov
cmc
xchg
rclb
int3
pop
outsb
icebp
xchg
insb
jle
je
cs
mov
push
xor
idivl
sub
xchg
cwtl
dec
ds
outsb
inc
mov
test
mov
lret
loopne
out
shufps
jae
stc
lods
stos
jle
fidivl
das
rorb
in
aad
jbe
sub
mov
les
mov
xchg
sbbb
add
add
ljmp
loope
lods
jmp
jo
shrl
iret
orb
out
adc
addr16
inc
aad
rolb
pop
loopne
test
mov
jp
push
adc
add
in
mov
sub
bound
mov
lods
fisubl
sub
shlb
loopne
jno
xor
push
xchg
push
and
loop
mov
add
imul
cmp
xchg
pusha
lock
mov
adc
dec
jecxz
das
dec
sbb
xlat
int
jg
sub
or
mov
jnp
dec
insl
adc
push
bndldx
iret
ds
inc
aaa
ret
fs
int
out
pop
push
outsl
movsl
mov
stc
pop
scas
iret
das
imul
cmpsb
xchg
cmc
cmp
xor
xor
push
or
in
mov
sub
imul
pop
addr16
outsl
cmp
jl
outsb
mov
ficompl
and
push
jmp
cmp
adc
fwait
and
fists
pusha
int3
xor
sti
data16
daa
insb
mov
in
jno
rolb
dec
arpl
adc
dec
ss
mov
popl
repz
sbb
outsl
movsb
pop
in
jge
lock
sti
lret
mov
je
jae
das
in
in
mov
mov
jb
scas
fistpll
jbe
and
xchg
cmp
mov
jmp
sbb
rcrb
rcrl
mov
push
inc
into
lods
xchg
aad
jae
mov
pusha
lds
lret
into
add
outsl
jl
cmpsl
mov
pop
lds
fdivp
shl
sub
dec
jp,pn
inc
je
imull
test
mov
faddl
cmp
das
out
mov
lods
sub
cmpsl
xchg
jecxz
lcall
pop
int3
push
fcmovbe
cwtl
add
jp
pop
jmp
adc
push
and
or
bnd
mov
in
call
out
lods
push
fildl
mov
test
ret
xchg
mov
cmp
mov
push
mov
pushf
jb
sub
decb
lahf
in
clc
negb
push
inc
dec
push
mov
jecxz
not
or
cli
sbb
and
leave
mov
loopne
es
jne
xor
lods
ret
jnp
xor
mov
and
sti
ljmp
cwtl
std
mov
cmpsb
lret
cltd
xlat
mov
cmp
xchg
out
test
stos
cli
xor
orb
push
ljmp
jmp
out
pushf
out
scas
push
cwtl
push
and
cmpsl
int
mov
stos
shlb
fwait
shlb
fidivrl
mov
jmp
aas
loope
pusha
testl
adc
ds
xor
loopne
dec
adc
or
je
in
mov
sub
idiv
mov
mov
inc
out
lret
sub
mov
jo
or
adc
aam
jge
adc
movl
cmp
push
pusha
lods
mov
scas
rcl
adc
mov
loope
std
mov
dec
xchg
in
arpl
dec
push
leave
push
roll
inc
xlat
stc
pop
imul
mov
arpl
rorb
and
movsb
mov
fadds
mov
arpl
xor
pushf
arpl
sub
mov
fs
jbe
lcall
pop
jno
push
adc
les
into
leave
mov
sbb
push
insl
mov
mov
pop
es
faddl
imulb
or
in
or
xchg
fstpt
mov
mov
cmp
mov
hlt
xlat
pop
adcb
lea
mov
push
repz
mov
cmp
sbb
loope
dec
outsl
xchg
lsl
sbb
rcll
pop
jg
push
insb
lods
mov
ljmp
fwait
adc
mov
fnsave
pop
stos
lods
rcrl
adc
pop
aad
pop
movsb
cmpsb
jg
push
push
gs
lret
mov
xchg
popf
xchg
or
sub
adc
jo
xor
in
lcall
mov
cmp
jae
lcall
scas
dec
jge
sub
push
inc
gs
int
sub
adc
outsl
das
in
fimull
das
push
stos
sub
sahf
or
rcll
inc
lahf
icebp
cmovg
lods
inc
cltd
push
and
dec
and
adc
das
and
sbb
xor
push
jmp
ret
test
fwait
out
pop
out
push
shll
xchg
rorl
pop
scas
cli
scas
divb
mov
sahf
push
arpl
shlb
syscall
and
mov
inc
pop
lea
push
xchg
sbb
lcall
cmpsb
cs
leave
and
imul
mov
ja
inc
rclb
cwtl
aas
cltd
and
pop
adc
out
out
inc
jl
cli
adcb
xor
lret
jecxz
jae
cmp
xor
inc
js
adc
jle
pop
cwtl
sbb
cmp
jb
pop
inc
int
aam
inc
mov
sbb
nop
jg
dec
push
in
dec
sbbb
push
cmc
sub
add
outsl
out
xor
ret
adc
and
into
push
or
xor
movntps
jmp
lret
pop
jno
sbb
adc
outsb
push
dec
pop
enter
lahf
in
xor
out
shll
mov
sbb
rclb
popa
mov
pop
nop
jmp
pop
fidivrs
sub
test
stos
mov
jno
cs
lret
mov
test
cld
into
pop
out
jnp
sbb
repz
sti
movl
adc
xchg
call
enter
mov
sub
sbb
test
adc
jl
or
imul
ljmp
sub
mov
or
sti
mov
stc
xor
mov
add
sarb
jle
ret
jns
mov
ds
mov
data16
jns
mov
imull
bnd
rclb
cmp
jns
lds
and
movsb
rcll
lds
sub
adc
addr16
enter
xchg
bound
cmp
xor
pop
call
addr16
mov
fcoms
xor
clc
mov
and
and
ljmp
pop
xchg
add
mov
xor
fsubrl
mov
repz
loope
jle
add
dec
prefetch
sbb
arpl
xchg
repz
pop
sub
or
les
push
or
das
inc
popa
nop
out
xor
xchg
cmp
mov
movsl
adc
jbe
jo
dec
cwtl
inc
orb
mov
sbb
bound
fidivs
popf
test
pop
xor
fdivl
pop
cmpsb
pop
dec
mov
in
lret
scas
cmp
outsb
mov
mov
movsb
mov
pop
add
addr16
pusha
push
xor
fcomps
cmpsl
adc
sub
sbb
sarb
lret
rcl
cld
dec
xor
ljmp
cs
fcoml
jo
ret
mov
jle
pushf
push
lods
dec
addb
jno
jmp
add
xlat
loopne
pusha
jae
and
adc
repz
adc
add
add
or
sbb
je
enter
jns
mov
mov
jo
cli
add
inc
arpl
inc
pop
fidivrs
leave
rcrb
cmp
xor
cmp
pcmpeqw
cmpsb
dec
jno
xor
push
mov
xchg
repnz
mov
movsl
add
insb
dec
lret
fisubl
cli
rol
insl
jne
shll
ret
push
adc
cmp
adc
add
test
jae
sub
inc
inc
sbb
divb
insb
mov
inc
scas
test
inc
mov
cmp
hlt
push
mov
xchg
or
fsts
ss
nop
shll
dec
sub
inc
cmc
mov
xchg
sub
add
aas
inc
mov
jns
stos
std
push
lock
push
cmp
mov
add
sub
sahf
inc
cmp
inc
push
adc
in
pop
clc
sub
lods
insb
jle
xchg
in
outsl
xchg
inc
add
fmulp
adc
add
repnz
xor
aaa
js
rcrb
mov
xor
clc
cmc
dec
aaa
pop
nop
mov
xchg
cmpsb
jbe
pop
jecxz
pop
push
dec
push
lahf
jb
xchg
sub
mov
out
arpl
sarl
add
int
push
adc
aaa
mov
cmc
in
fmull
pushf
cmp
in
lods
fidivs
lret
cmpl
cmp
xor
rcr
xor
sbb
cmp
mov
ret
dec
jb
fildll
jge
mov
sub
pushl
psllq
std
andb
inc
pop
xor
push
xor
je
fsubrl
out
xchg
add
aaa
rcll
jae
mov
push
mov
test
mov
inc
mov
pop
je
sub
les
pop
jnp
aam
xchg
and
mov
test
xchg
loop
sbb
stos
fiaddl
cmp
stos
push
xor
fsubrl
xor
inc
or
cmp
fistps
fadd
sub
inc
arpl
int3
loopne
jns
push
jg
popa
lret
dec
sub
or
insl
xchg
mov
and
push
call
mov
jo
fildll
xchg
fs
popa
aam
aad
jle
add
xor
inc
dec
cmpsl
pop
sub
outsl
sbb
xor
mov
shrl
pop
jecxz
push
inc
out
cli
pop
mov
sbb
aas
mov
adc
mov
mov
loopne
jns
inc
xor
mov
xor
js
ljmp
mov
mov
cmp
sbb
xor
add
add
cmc
fwait
pop
mov
or
daa
cmpsb
mov
jns
rclb
test
fwait
add
mov
stos
push
jno
xchg
movsb
cmp
cmp
push
xor
pop
mov
and
test
mov
mov
scas
sub
ffree
enter
ss
dec
cltd
adc
or
fucomi
xor
xchg
fldcw
lds
popa
cld
aas
xchg
and
push
arpl
xor
mov
fisttpl
xchg
in
rcrl
mov
ja
cmp
sub
pop
scas
mov
arpl
push
fxch
insb
lock
insb
pop
cmpl
push
mov
mov
test
dec
push
mov
xor
dec
jg
repnz
pop
insb
mov
dec
dec
dec
orl
loop
sbb
nop
xor
and
mov
inc
cld
pop
mov
push
loope
sbb
out
push
lret
push
add
sahf
lret
mov
jle
addr16
movsb
idivb
repnz
adc
pop
mov
pop
sub
scas
dec
mov
ds
sbbb
mov
pop
pop
xor
jle
int3
into
mov
xchg
cltd
mov
das
or
mov
inc
insl
sub
and
jne
mov
add
stos
jae
mov
sbb
out
out
jnp
insb
add
pop
aam
daa
scas
mov
cmc
mov
sub
inc
mov
pop
rcll
addl
mov
pop
or
dec
dec
dec
sbb
mov
scas
add
ja
stos
xorb
clc
fcoml
add
push
jl
loop
insb
cs
cmp
dec
inc
dec
test
jns
ret
in
incl
adc
lret
jne
lret
adc
bound
lods
sbb
mov
imul
filds
dec
push
lret
std
adc
dec
and
loop
dec
and
xchg
sub
lods
mov
push
test
mov
jge
or
cmp
xchg
xor
bound
loopne
sahf
fadd
sub
sbb
mov
adc
pop
call
fwait
mov
ja
shlb
stos
jmp
xor
mov
xchg
adc
dec
dec
inc
loope
daa
or
pop
cmpsl
push
test
jge
mov
je
lcall
dec
xor
and
sbb
dec
cmp
xor
sub
jmp
jp
std
ja
out
int3
insl
sarl
xchg
inc
jmp
sbb
adc
in
pop
cvtps2pi
pop
fists
lcall
ds
xor
fs
jp
add
sub
xchg
jge
jo
adc
xorb
les
lcall
testl
mov
lahf
out
jmp
imul
mov
insl
and
movzbl
sub
xchg
xor
mov
jge
aad
dec
int3
loop
sub
call
nop
icebp
scas
lcall
lock
xor
jbe
push
adc
aad
mov
out
aaa
and
mov
data16
dec
cwtl
sbb
into
push
pop
mov
sub
enter
cmc
stc
int3
dec
repz
hlt
cmp
sub
rol
fnsave
sub
jb
cs
mull
or
xchg
cmpsb
outsl
and
sub
mov
jb
fidivs
scas
xchg
cs
push
fistpll
adc
dec
dec
test
sbb
outsb
cmp
add
data16
push
lea
push
sbb
sbb
push
mov
ds
clc
mov
sti
addr16
adc
rcrl
test
and
pushf
adc
pop
repnz
call
dec
pop
scas
sbb
xor
shl
sub
repnz
push
jne
mov
js
and
sbb
jo
nop
adc
sub
outsb
xchg
add
fistpll
sbb
dec
fs
and
push
aas
xchg
jbe
jns
loop
fcmovb
and
mov
hlt
stc
inc
mov
jmp
jb
cwtl
imul
push
adc
xchg
inc
movsb
mov
fs
jl
sub
dec
push
cmp
test
aaa
ret
cmp
js
nop
aas
in
pop
stos
inc
cmp
dec
adc
rclb
std
jno
test
mov
test
adc
hlt
xchg
data16
out
cmp
push
inc
nop
mov
and
insb
inc
lcall
jnp
mov
fbstp
xchg
and
jge
arpl
int
xor
mov
mov
pop
jbe
xchg
icebp
jno
fsub
inc
mov
pop
sub
or
in
fcmovbe
adc
fildll
jae
mov
push
test
mov
push
lock
pop
push
fiaddl
mov
cmc
jmp
ret
push
jbe
das
rcrl
dec
jb
shrb
daa
iret
test
inc
sbb
unpckhps
lods
xchg
adc
in
in
addr16
stos
sbb
stos
shr
sbbl
cmp
push
add
inc
cmpsl
mov
out
mov
test
xchg
mov
test
pop
inc
mov
jae
jle
inc
xorl
mov
sbb
daa
in
or
xorb
mov
mov
and
aaa
xchg
fadd
jo
ljmp
adc
pop
mov
mov
jns
or
dec
out
jb
mov
fisubrl
jne
or
fxch
mov
sbb
add
push
pop
popa
mov
jecxz
cmp
stc
sbb
dec
jbe
and
xchg
push
mov
pop
lds
das
or
stos
jp
cmpb
pop
cmp
sbb
mov
cmp
leave
pop
scas
cmpsl
cwtl
lea
xchg
mov
mov
cld
push
aas
xor
ret
mov
push
lds
push
insl
pop
cltd
rorl
into
in
cmp
pop
ficomps
or
or
lds
cmpsb
xor
push
stos
xrelease
adc
mov
cmpsl
pop
and
sbb
push
pop
arpl
xor
daa
sbb
xchg
adc
adc
frstor
cmp
add
lret
out
pop
xchg
out
mov
jne
fistpl
loopne
sbb
fadds
cmpsl
ss
out
mov
popa
jb
loopne
cmp
outsb
icebp
popa
rcrb
adc
das
jne
test
ret
cmp
mov
ss
pop
sub
mov
xchg
je
and
in
mov
int
popf
outsl
stos
daa
es
sbb
add
mov
dec
mov
std
lds
push
add
dec
inc
mov
cmp
cwtl
aaa
rolb
enter
in
jo
jmp
inc
mov
add
inc
rcl
sbbl
mov
vpaddq
fldcw
sub
sub
push
jecxz
dec
xchg
cmpsl
push
mov
inc
sbb
mov
ja
lret
cmp
xor
ljmp
jbe
dec
outsl
clc
and
daa
adc
es
jns
mov
mov
lds
inc
jnp
add
stos
pushf
xchg
xrelease
push
arpl
xor
mov
add
cmpb
clc
inc
push
jbe
inc
mov
iret
jb
mov
push
in
ret
sub
aaa
sub
mov
pop
ficoml
mov
pop
call
xor
pmuludq
aad
arpl
jae
pop
rolb
xchg
xlat
popa
mov
loopne
xor
mov
cmp
cmp
jno
fnstcw
jg
lret
xor
ljmp
mov
mov
imul
inc
sbb
fcoml
dec
mov
cmp
out
inc
cmp
in
xor
insl
sarb
fisttpl
je
daa
mov
jmp
stos
sti
or
loopne
imull
mov
mov
mov
test
xor
and
cmp
icebp
cmpsb
push
cmpsl
fisubs
imul
fsubs
cwtl
cmp
repnz
adc
xor
pop
std
inc
ds
jg
dec
out
imull
fmull
mov
inc
movsb
into
ret
mov
push
in
mov
pop
and
shlb
leave
xchg
or
ret
cltd
lods
cli
push
cltd
push
dec
in
pop
loopne
ds
cmp
std
es
out
or
clc
cmp
xchg
cmc
lock
xchg
mov
outsl
dec
out
dec
dec
add
mov
cwtl
sbb
and
xchg
fcompl
outsb
leave
cld
repnz
mov
pop
daa
ja
inc
push
popa
adc
mov
xor
jl
dec
xor
rorl
xlat
dec
dec
shlb
mov
push
mov
mov
cmpsb
mov
and
jnp
pushf
fwait
dec
movsl
fwait
insb
das
mov
icebp
dec
jne
jp
out
pop
xchg
daa
xchg
dec
fisubrl
inc
push
xor
call
inc
inc
loope
lods
add
push
add
add
rolb
ret
adc
and
inc
sub
loopne
dec
mov
or
push
cmp
push
pop
add
les
rolb
mov
les
cmp
mov
jle
add
inc
add
and
jnp
mov
xor
pop
pop
std
imul
cli
add
adc
mov
cmpsb
fidivl
popa
je
inc
xchg
add
pop
test
sbb
mov
loope
shlb
cltd
xor
lret
push
lds
test
mov
push
inc
int3
xor
adc
and
pop
imul
sub
mov
aam
xchg
jle
mov
js
and
insl
je
leave
aad
call
pop
jb
les
pop
add
adc
imul
push
loop
sar
inc
adcl
testb
cwtl
and
leave
dec
sub
stos
mov
add
insb
xlat
jg
lahf
xor
jg
adc
xor
adc
dec
ljmp
rorb
cwtl
sbb
xchg
push
jecxz
jl
and
enter
mov
das
outsl
push
rcr
outsl
insl
stos
fildl
inc
leave
mov
xor
xor
int3
iret
pushl
mov
xchg
mull
call
filds
das
push
test
add
mov
iret
fdivrs
mov
rolb
and
mov
jo
sub
mov
fimuls
push
ror
and
std
push
jmp
push
daa
push
xchg
lods
inc
push
inc
mov
pop
xchg
xchg
or
push
sub
shll
scas
jecxz
jne
xor
or
cli
leave
test
mov
xor
dec
mov
pop
pop
xchg
popa
cmc
pop
mov
mov
ljmp
push
or
jbe
jns
adcl
adc
loopne
dec
inc
or
dec
test
xor
idivb
push
cmp
push
mov
fcmovnbe
xchg
jno
enter
mov
daa
cs
mov
in
setno
jo
inc
mov
lcall
jl
pop
addr16
xchg
dec
iret
push
es
shll
sub
xchg
outsl
scas
scas
ds
in
mov
test
lods
sarl
fsubl
sub
aad
or
jge
fsubrl
jns
mov
pop
sub
xchg
xchg
mov
cmp
sub
jno
mov
movsl
cmp
inc
mov
sbb
cmp
sbb
js
adc
add
int3
fsubs
arpl
mov
sbb
ds
pop
mov
int
jg
mov
add
pop
in
shlb
adc
pop
call
cmpl
repnz
cmpsb
add
sbb
jp
pushf
add
hlt
mov
xor
xchg
js
bndstx
mov
hlt
and
lcall
mov
ss
jno
and
adc
lds
test
lods
xor
adc
pop
fsubl
iret
sbb
mov
push
ror
jl
fdiv
adc
sub
jl
jb
inc
inc
xchg
outsb
pushf
pop
das
inc
cmpl
push
cwtl
int3
movl
sbb
pop
mov
test
push
fldl
pop
push
mov
in
dec
sub
scas
in
int3
or
xor
pop
push
lcall
cmpsl
add
rolb
mov
mov
mov
or
pushf
and
pop
adcl
sub
gs
cmc
movlps
lock
xchg
and
cs
sub
mov
lcall
xor
aaa
rcrl
pop
jle
xor
jne
ficoml
push
int
add
es
js
dec
adc
dec
clc
aaa
pop
xchg
mov
cwtl
push
mov
pop
cmpsl
es
scas
sub
push
pop
cld
lock
scas
xor
rclb
xor
popa
int
or
or
lods
std
mov
inc
fimull
enter
xor
in
popf
dec
negb
pop
sbb
xchg
loop
es
das
add
and
sbb
sbbb
mov
enter
jbe
je
not
ljmp
dec
decl
mov
dec
loopne
mov
insb
mov
int3
dec
jecxz
loop
lret
pop
int3
inc
jns
pop
mov
push
mov
sbb
je
icebp
lcall
cltd
mov
xor
stos
and
dec
inc
addr16
fcmovnu
sbb
mov
and
and
arpl
adcl
mov
mov
popf
mov
xor
mov
data16
inc
adc
leave
inc
or
cltd
inc
out
data16
imul
mov
sub
or
ror
dec
pop
sub
stc
pop
mov
iret
cmp
dec
loop
push
lods
xor
incb
mov
sub
lods
lea
sub
rcrb
sub
out
or
and
sub
inc
sahf
add
lea
data16
adc
add
cs
add
inc
out
jbe
rolb
push
push
xchg
fidivl
movsl
cmp
xor
push
or
aad
lahf
les
pushf
rcll
adcl
scas
dec
outsb
xchg
aam
out
dec
push
popf
cmp
ss
mov
pop
imul
or
xchg
lds
cwtl
jns
or
sti
cmp
sub
xor
gs
push
pushf
add
fwait
adc
div
rcll
jne
mov
xchg
and
mov
mov
push
push
xor
push
inc
outsb
inc
jae
sbb
push
ljmp
jns
push
cmp
fsubrp
insl
rorl
dec
sub
sub
imul
fcmovne
jnp
xor
ja
mov
fldcw
add
add
outsb
lret
jp
xchg
inc
inc
popf
lahf
xchg
sbb
lods
xor
dec
xchg
int
pop
or
mov
sub
inc
add
mov
cmp
xchg
add
adcb
ljmp
jge
xor
movsl
push
cwtl
sarb
pop
inc
and
mov
stos
mov
mov
and
sti
imull
imull
sbb
sbb
out
xchg
xchg
fucom
loopne
pop
rcll
pop
mov
jns
mov
fsubrl
push
cli
pusha
mov
cmpb
out
outsb
sbb
or
add
lods
je
aam
mov
int
fadds
lock
scas
pop
test
pop
leave
cmp
mov
neg
dec
mov
mov
push
cmp
cmc
or
jns
pop
aam
xchg
inc
mov
es
mov
pusha
addb
add
scas
lahf
jb
and
cmpsb
fwait
ss
dec
sbb
and
iret
xchg
mov
inc
pop
insb
ss
mov
sbbl
popa
sbb
fnstenv
aaa
xor
xchg
in
pop
xchg
imul
scas
and
sbb
add
dec
xlat
pop
outsl
out
mov
sarl
dec
mov
mov
cld
and
cmp
and
fucom
jge
mov
sti
and
fwait
adc
dec
xorb
inc
or
mov
fidivs
sub
mov
add
lcall
sbb
sub
mov
iret
cmp
outsl
jns
pop
mov
pushf
jbe
xchg
jnp
mov
movsb
lock
mov
pop
movsb
iret
mov
ljmp
xlat
leave
push
or
pop
or
nop
lock
cmpsb
pop
shrl
jl
and
inc
or
push
jecxz
data16
pop
sub
push
rolb
push
cmp
hlt
push
gs
pushf
gs
push
sub
push
push
xor
jbe
fcompl
fcmovb
ljmp
sahf
adc
sti
mov
cmp
lock
fiaddl
xlat
sbb
sbbl
inc
imul
movsl
pop
xor
jge
addr16
loopne
cmpsb
sub
aad
lcall
out
sbb
jne
imul
or
aas
inc
loop
mov
rorl
mov
roll
idivb
and
sub
xchg
out
add
push
outsb
cmp
dec
xchg
out
mov
mov
add
jmp
negl
pop
push
cmp
dec
notl
sbb
cld
cwtl
push
sbb
andl
aad
mov
adcb
mov
mov
mov
sbb
dec
lcall
je
jnp
pusha
aas
and
lea
xor
je
lcall
push
rolb
mov
addr16
iret
pop
jo
mov
sbb
out
push
into
mov
jl
cwtl
out
mov
sub
jge
xor
mov
lcall
incl
sbb
loop
push
sbb
dec
pop
mov
out
imul
out
stc
dec
jno
xchg
mov
and
fisttpl
insl
xor
in
sbb
sbb
mov
xchg
inc
gs
sub
outsb
lret
in
pop
pop
and
dec
orl
pop
dec
mov
sahf
push
daa
pop
jp
cli
lret
push
insl
xor
cmpsb
xor
aad
out
addr16
outsb
cmp
mov
cltd
scas
pop
fnstcw
jle
jns
xor
cmp
xchg
pushf
stos
push
addr16
push
and
ret
mov
cmp
mov
stos
sbb
imul
ficoml
mov
lret
or
cmp
cmp
in
or
outsl
ja
push
mov
in
dec
and
add
xchg
lret
mov
xchg
ja
mov
jno
push
shr
lods
jp
fs
fsubl
mov
int3
mov
xor
sti
cmp
jne
xor
aaa
cmp
call
xchg
dec
mov
pop
pop
pop
mov
or
cmp
test
ja
insl
inc
dec
lret
cmp
or
lret
push
subb
daa
hlt
orb
stc
fiadds
push
inc
js
add
add
and
std
jmp
xchg
out
fstl
lds
xchg
shlb
shrb
jmp
in
jbe
inc
ficoms
pop
fwait
mov
ret
dec
into
pop
clc
out
js
jno
loop
fcompl
jg
add
int
xor
or
jecxz
stos
sub
in
popf
pop
or
mov
test
cltd
cltd
out
incl
pop
cmp
xor
mov
cmc
push
fldl
ja
iret
xor
xor
pop
mov
jne
xor
into
cs
std
push
lods
cmc
sub
xchg
cmp
jno
test
xor
outsl
sbb
jbe
fwait
movsb
push
add
sahf
aaa
inc
shl
sub
dec
sub
inc
or
and
jg
push
pop
dec
xor
loopne
clc
or
push
jg
test
bound
pop
incb
add
sbb
pop
addr16
push
sbb
push
lods
xchg
outsl
in
nop
dec
push
test
mov
inc
or
lret
shll
jge
and
out
das
rclb
pop
adc
outsb
stos
sbb
mov
jae
jg
data16
insl
imul
sub
mov
mov
outsb
jae
mov
mov
mov
mov
jbe
mov
fadds
xor
sbb
les
and
rcr
mov
xor
mov
push
lret
movsl
xor
mov
and
ret
pop
das
sub
idivl
sbb
push
pop
aam
stc
mov
into
in
mov
stc
mov
aaa
pushf
xchg
add
repz
cmp
inc
arpl
xchg
cs
loopne
outsb
ja
sbb
xchg
mov
mov
repz
jne
add
rcr
push
pop
inc
or
inc
out
xor
fdivrs
sbb
std
xchg
xor
sbb
rcrl
fiaddl
rcrl
inc
incl
push
push
insb
std
aaa
movb
movsb
cmp
inc
lcall
ljmp
push
mov
add
shlb
push
out
std
and
jne
push
pop
loop
adc
in
jns
test
or
pop
pop
xchg
clc
sbb
sbb
int3
cltd
sub
add
sub
xor
in
adc
mov
mov
pop
xchg
stos
sahf
pop
sub
xchg
dec
cmpsl
ret
out
sarl
fisttpll
hlt
rorl
xchg
mov
stc
adc
ljmp
test
fiadds
cmp
xor
mov
dec
inc
mov
mov
dec
xchg
xlat
xor
outsl
jne
mov
icebp
add
or
pop
fidivrs
ret
jne
adc
movsl
adcl
jle
mov
dec
movsl
repz
test
push
sbb
push
mov
xchg
insl
mov
mov
push
inc
std
in
dec
jmp
test
mov
sbb
out
xor
lods
int
cmp
stos
fnstcw
sti
ss
rcrl
clc
scas
pop
stc
jecxz
jnp
movsb
cld
test
mov
mov
push
mov
sahf
adc
dec
and
cmc
dec
mov
push
cmp
xchg
jg
mov
and
imull
fistpll
mov
mov
in
mov
xor
xor
mov
cwtl
cs
aad
in
xor
lods
shlb
fcoml
or
or
pop
gs
fldenv
lds
mov
push
and
stc
je
jae
fldt
xorb
xor
leave
mov
cmc
arpl
test
int
and
js
pop
and
icebp
jg
lret
lret
cmpl
mov
pop
mov
add
mov
add
movsb
int
mov
mov
sub
rcr
or
dec
pusha
ja
xchg
add
cli
xchg
pop
insl
into
jo
fcoms
scas
sti
sub
in
int
dec
test
dec
sarb
cmp
lods
jecxz
ljmp
int
fdivrs
gs
loope
lea
push
push
xlat
insb
mov
cltd
cwtl
arpl
cmp
xor
or
fildll
frstor
inc
inc
mov
cmp
sub
adcl
mov
scas
cli
jl
jge
outsb
jecxz
xchg
gs
mulb
dec
xchg
sbb
pop
or
or
movsb
scas
lea
xchg
jge
fistpll
push
imul
sub
test
xor
sub
adcl
mov
inc
xchg
push
add
lods
mov
inc
inc
sbb
pop
push
add
mov
xor
push
inc
xchg
jne
fistl
sub
call
ljmp
fldenv
rcr
sub
out
js
bound
pop
mov
sub
push
add
inc
sbb
hlt
out
ficomps
out
xor
push
loop
cwtl
popa
insl
rclb
ljmp
pop
cld
imul
mov
mov
pop
jl
push
inc
out
push
jmp
mov
mov
xor
pop
je
jno
mov
push
testb
xor
cwtl
xchg
leave
xor
loop
mov
loopne
dec
push
mov
enter
and
arpl
ret
sub
fwait
adc
call
inc
cmp
scas
jg
mov
xorb
pop
mov
stos
xor
rolb
jge
jno
adc
push
idivl
scas
inc
cmc
xor
adc
or
ss
xor
rcll
push
fwait
push
cmp
out
mov
std
rcll
adc
lahf
in
cmp
dec
push
je
sbbb
cmpsb
out
int3
pop
sbb
inc
fisttpll
push
xlat
mov
out
xor
dec
cli
adc
adc
outsl
call
xor
cmc
jecxz
dec
outsl
in
cmc
and
or
dec
lcall
icebp
dec
lock
jbe
add
les
add
jg
repz
mov
imulb
test
out
loopne
lea
lds
fbld
sub
cmpsl
fstpl
incl
dec
lcall
xlat
hlt
fwait
out
xchg
movsb
mov
loopne
mov
sbb
push
inc
jb
imul
movsb
add
jp
xchg
pop
mov
int3
mov
xchg
mov
pop
jno
push
push
js
shl
or
rcrb
xchg
in
xchg
jo
sub
scas
cmove
mov
pop
xor
jno
and
push
push
push
jle
sahf
ror
xor
xor
inc
push
lahf
repz
mov
imul
dec
sub
js
pop
leave
adcl
push
movsb
jecxz
push
enter
xchg
or
aam
test
jge
inc
pop
jmp
call
adc
and
xor
enter
add
call
jp
out
outsl
xchg
lods
imul
mov
and
mov
cli
repz
insl
adc
ljmp
aad
repnz
pop
add
imul
sub
jp
sub
mov
je
repnz
inc
aas
pop
fidivrs
cmp
es
imul
mov
jnp
lret
js
sub
arpl
sub
rcrb
adc
rorl
dec
outsb
in
int
out
push
push
mov
push
sti
addr16
dec
or
jns
bound
ss
aam
dec
sbb
int
dec
out
ljmp
xor
iret
jbe
adc
lahf
cmp
jne
push
push
mov
fcoms
sbbb
dec
inc
sub
test
out
sbb
cmc
lahf
sarb
sti
aaa
loopne
xchg
mov
dec
test
adc
add
jnp
fldcw
push
push
pop
outsl
out
cmp
push
xlat
fildl
adc
or
and
and
push
push
ffree
sbb
mov
dec
xlat
push
mov
inc
repz
jle
pop
mov
loopne
jecxz
aas
dec
fildl
test
cld
mov
lcall
jo
and
es
adc
or
mov
adc
fimull
pop
dec
jmp
out
aaa
mov
pop
insb
lcall
mov
lds
push
xor
sarb
mov
sbb
and
push
mov
aaa
filds
shrb
cltd
cmp
inc
jge
pop
or
add
or
loope
jmp
xor
mov
adc
xor
and
das
inc
jns
shll
inc
addb
movl
pop
aad
and
xchg
and
mov
pop
inc
add
out
sub
addr16
xlat
jns
cmp
into
pop
push
cmp
push
cltd
stos
sbb
adc
std
push
mov
ja
push
adc
dec
in
popf
gs
sub
cmp
mov
cmp
cmp
mov
inc
jb
test
or
and
lea
dec
imulb
stos
xor
cwtl
das
out
inc
xchg
push
enter
mov
mov
pop
adc
iret
imul
imul
push
mov
mov
and
adc
int
pusha
xchg
sahf
jns
jno
mov
add
sub
mov
popf
sbb
push
push
sti
jmp
aad
es
or
bound
fs
or
pop
sub
adc
dec
mov
xchg
outsb
lcall
cmp
push
fnstsw
fldt
or
stc
pop
push
push
dec
jns
fdivp
lcall
mov
mov
subl
or
xor
cld
push
jae
xchg
fwait
nop
and
adc
test
lret
out
popa
cmp
jno
or
or
pop
repnz
je
call
mov
push
je
push
lock
fsubrl
inc
arpl
sbb
pusha
mov
stos
fnsave
jmp
stos
pop
xchg
or
stc
pop
push
pop
mull
or
mov
jb
es
movsb
jnp
aaa
test
dec
aaa
scas
nop
jo
pusha
std
dec
test
call
push
hlt
adc
sbb
test
fildll
dec
imul
inc
scas
xchg
cld
add
fwait
mov
icebp
push
pop
mov
sarb
scas
sbb
jle
xchg
cwtl
cmp
cld
xorl
add
call
inc
pop
imul
daa
add
jno
cwtl
xchg
out
in
lds
in
cmp
je
fildl
xchg
add
mov
lods
dec
fstpl
pop
cmc
pop
pop
inc
lret
arpl
in
cmc
lock
sub
add
fsubr
lcall
push
sar
lods
push
and
and
xorl
sub
sbb
addr16
das
pop
loope
out
in
int
jg
dec
lahf
jae
inc
jns
adc
out
pushf
mov
inc
test
mov
ja
inc
lahf
pop
and
mov
dec
ret
pushf
xor
sbb
mov
mov
or
bound
xor
push
cmp
mov
dec
mov
cwtl
xchg
push
das
cmp
enter
stc
lock
jo
rcrl
out
icebp
xor
push
sub
xor
xchg
xchg
pop
ret
and
jbe
test
mov
scas
dec
and
pushf
jg
mov
adc
inc
les
call
mov
lcall
and
aaa
push
mov
imulb
pop
cmp
cli
lods
mov
pop
mov
xchg
scas
fcomps
xor
adc
test
adc
inc
mov
cwtl
xlat
pop
lret
jle
adc
inc
scas
jge
add
out
xchg
into
fwait
cmp
sbb
and
jecxz
xchg
xchg
push
jle
arpl
and
fs
fldt
fiaddl
outsl
sbb
pop
repz
mov
cmp
push
and
jb
andb
mov
push
jo
jae
dec
and
or
cmpsl
sbb
lds
outsl
add
mov
fwait
push
push
or
mov
aad
mov
leave
inc
or
xchg
fld
jb
jp
lahf
aad
in
sbb
mov
shll
jge
inc
fidivl
jmp
cs
mov
push
lret
xlat
dec
sub
and
aas
add
jno
or
push
out
pop
add
popa
add
cltd
lds
enter
dec
les
fldpi
ret
gs
std
dec
mov
mov
stos
fmull
cli
shlb
mov
insl
mov
int3
addb
insl
sub
fisttps
dec
loop
adc
ret
lahf
icebp
add
imul
jno
or
int
xorl
daa
incb
hlt
test
push
adc
incb
pusha
xchg
push
in
or
dec
cs
push
and
mov
lods
inc
sbbl
stc
inc
or
xor
test
cld
inc
mov
mov
test
jecxz
jle
int3
lods
inc
addr16
test
test
aas
js
or
std
xor
out
inc
sub
add
and
cmp
std
pop
out
test
push
lods
or
into
lods
lods
sub
shlb
push
insb
jbe
jae
test
imul
dec
insl
push
aas
cmp
into
xor
mov
or
and
scas
cmpsl
popa
push
adc
fucom
adc
daa
lds
mov
data16
test
mov
mov
jbe
mov
bound
mov
leave
ret
fldcw
fs
aaa
lods
daa
jmp
mov
les
xor
ror
mov
push
movsl
ret
mov
inc
outsl
push
call
aas
inc
and
mov
pop
pop
xchg
gs
out
test
pop
or
icebp
in
ud1
mov
ss
insb
icebp
out
mov
jbe
mov
jp
loopne
loopne
ret
sarb
out
sub
push
pusha
out
jo
subb
add
adc
inc
jbe
push
xchg
xor
fwait
outsl
add
scas
popf
ljmp
aas
divl
jne
je
cmp
test
jle
jp
inc
sbb
mov
test
dec
mov
push
fildll
xor
lods
mov
es
add
adc
mov
jb
ja
sub
inc
test
or
add
mulb
pop
xchg
mov
sub
and
mov
out
nop
xchg
jmp
jae
pop
outsb
in
jle
sub
scas
stos
ret
pushf
push
add
cltd
rolb
iret
rcll
jmp
dec
or
mov
xor
les
lret
insb
mov
aam
sbb
incl
mov
rorl
jno
int
into
popf
pusha
mov
sbb
sbb
sbb
std
adc
adc
cmp
in
push
repz
xor
and
push
das
xacquire
addr16
call
mov
not
popf
cld
or
jbe
lcall
fsts
and
dec
pop
loope
in
mov
pcmpeqd
mov
mov
xlat
out
inc
dec
mov
pop
sbb
mov
jl
stos
and
add
adc
daa
pop
stos
rcll
aaa
mov
adc
subb
add
jae
sub
mov
push
and
push
xor
or
pop
mov
push
lret
xchg
cmp
push
pop
shll
push
push
push
in
inc
dec
sahf
stos
pop
cmp
shr
loop
enter
or
cmpb
jo
std
mov
pop
xchg
call
int3
push
push
mov
and
les
mov
outsb
data16
jmp
cli
jecxz
dec
add
cmc
repz
mov
test
ss
jge
mov
mov
add
pop
sub
push
lret
lret
inc
fcoml
leave
pop
pop
or
jb
pop
pop
xor
mov
pop
xor
mov
cmpl
imul
scas
mov
dec
fwait
push
call
icebp
xchg
jecxz
xchg
push
cltd
in
sbb
mov
or
rolb
inc
into
and
dec
dec
mov
stos
jno
xchg
mov
shlb
xlat
stos
loop
mov
mov
aam
sub
mov
lahf
pop
popf
sub
xlat
sarb
cmpsb
shufps
add
or
mov
movsl
inc
int
gs
mov
ud1
xor
jmp
loope
jo
in
aam
dec
sbb
rolb
jns
fbstp
js
sbb
inc
push
inc
and
sbb
in
stc
mov
jmp
dec
daa
cmpsl
test
call
push
lea
sub
stc
int
sbb
push
ss
dec
push
jo
adc
xchg
bound
mov
sbbb
adc
cld
xor
adc
mov
push
pop
into
jae
test
repnz
push
push
ds
xchg
out
push
cmpsb
or
pusha
lods
inc
jmp
jge
or
pop
sbb
stos
add
sahf
push
jp
push
popf
scas
xor
dec
pop
data16
dec
xchg
dec
clc
cmpsb
movsl
mov
lret
sub
jle
dec
and
rol
jnp
push
mov
repnz
add
cmc
cmp
xchg
push
sub
outsl
mov
mov
mov
cwtd
clc
mov
and
shll
je
jae
mov
pop
mov
jae
pop
negl
imul
push
pop
and
insl
push
add
fcmovnb
addr16
dec
stos
ds
add
cli
push
xchg
clc
loopne
sar
mov
push
into
lds
mov
add
fildl
lret
push
ror
std
mov
inc
lcall
pop
pop
adcb
mov
inc
mov
pop
push
pop
adc
mov
mov
pop
mov
or
sti
mov
lods
mov
and
cmp
mov
dec
in
adcb
ret
sbb
cmp
cmp
jae
pop
iret
orb
mov
outsb
subb
jmp
inc
daa
sbbl
and
insl
outsb
nop
jp
in
and
xchg
mov
jnp
mov
jmp
mov
pop
int
mov
or
in
gs
rcrb
and
mov
dec
insl
inc
mov
es
cs
push
hlt
mov
je
or
push
hlt
mov
jge
cmp
or
add
ret
add
add
sub
push
jge
sbb
ja
xchg
pop
add
xchg
mov
clc
pop
loop
clc
cmp
test
shlb
pusha
jecxz
scas
lcall
pop
adc
sub
jle
sub
mov
add
jno
mov
pushf
pop
inc
lahf
lahf
popa
cltd
sti
xchg
iret
xlat
push
push
mov
adc
test
std
inc
mov
pop
cmpsb
pop
fwait
stos
test
adc
out
pop
inc
and
jbe
jb
mov
dec
mov
inc
cmp
jnp
pop
dec
addl
mov
jbe
push
pop
movsl
js
jmp
xor
mov
dec
ds
es
pop
dec
mov
push
mov
and
arpl
push
or
xchg
and
data16
xor
push
js
aam
fwait
es
sbb
and
ret
das
das
lahf
pop
mov
xor
inc
mov
in
les
jl
outsb
test
mov
xchg
mov
cmpsb
push
xchg
mov
mov
dec
add
mov
cmp
add
xchg
dec
xor
mov
cld
mov
push
push
pop
scas
and
lods
push
fistps
xchg
mov
xor
stos
add
mov
pop
je
mov
aaa
ljmp
es
xor
out
push
ficoml
xchg
scas
fiadds
dec
xchg
pop
jge
cmp
push
xor
add
add
mov
mov
mov
mov
lock
je
jae
sbb
inc
shrl
push
jbe
xor
pop
bound
stos
iret
aas
xchg
repnz
fwait
xor
mov
pop
icebp
mov
ljmp
jno
sbbb
imul
dec
scas
loopne
pop
adc
aam
push
into
xchg
bound
imul
mov
int
fldenv
push
in
jl
sbb
out
or
lea
aad
dec
inc
mul
pop
dec
cmp
je
jg
mov
lcall
or
dec
ret
dec
jg
push
sub
mov
aam
les
mov
cmp
das
inc
lcall
repz
aas
fisttpl
mov
call
add
pusha
fwait
jno
rclb
push
xor
mov
or
imul
push
jnp
add
push
adc
dec
gs
jge
enter
bound
xor
sbb
jb
in
sbb
aaa
dec
repnz
jns
ss
xchg
idiv
adc
add
pop
mov
js
sbb
imul
mov
or
jb
inc
iret
adc
jne
sti
jnp
leave
imul
outsb
push
jle
xor
insl
fadd
aad
fstpt
inc
lock
sahf
dec
lret
inc
inc
js
leave
test
pop
shll
inc
mov
das
mov
mov
sahf
cwtl
cltd
pop
jno
xlat
mov
pushf
xor
inc
jbe
pop
mov
dec
sbb
dec
jge
mov
push
sub
fistps
mov
loop
out
mov
push
or
cmp
fdivl
inc
enter
xchg
mov
ljmp
mov
movsl
sub
sub
add
stc
mov
sti
clc
loop
pop
aaa
lahf
subb
dec
sub
idiv
hlt
cmp
mov
ss
pop
imul
imul
insl
fisubl
pushl
inc
cmpb
mov
xor
xor
fwait
pop
arpl
xchg
xchg
aad
sub
mov
movsl
enter
lret
sbb
push
add
push
and
shlb
cmc
aaa
scas
dec
xor
roll
or
es
inc
add
repnz
pop
dec
arpl
out
lock
ljmp
ret
cmp
enter
add
push
icebp
lds
dec
std
dec
iret
dec
int
cltd
aad
fwait
loope
imul
fwait
loope
jp
inc
push
aas
mov
pop
mov
pop
jno
int3
inc
and
rcr
mov
test
mov
cmp
pop
cmp
or
popf
mov
ret
push
push
fstps
rcrl
test
iret
xor
out
add
cmpsl
push
sbb
or
test
movsb
lret
sub
stos
adcl
adc
cmp
sbb
sub
xchg
mov
int
fstpt
and
popa
cmp
mov
sub
lret
inc
iret
outsb
pop
sub
outsb
mov
pop
mov
in
mov
lods
jnp
jne
or
cmp
dec
and
sbb
jecxz
mov
cltd
imul
lods
mov
mov
jle
or
les
jecxz
in
cmp
fadds
icebp
push
mov
repnz
inc
cmp
jle
faddl
out
mov
mov
add
pop
cmpsb
movsl
insl
xlat
xlat
out
push
aas
ljmp
aad
adc
hlt
repnz
outsb
cmp
pop
xor
jecxz
sub
xor
pop
call
cmp
std
test
scas
into
repz
addl
lret
std
or
cmp
mov
dec
test
loop
cmp
jmp
iret
loopne
ret
lock
push
jb
mov
shll
stc
ja
sub
outsl
les
outsb
xor
outsb
sahf
insb
push
push
inc
push
dec
or
adc
add
imul
test
aam
mov
lea
insl
cmp
sub
sub
dec
xor
addb
push
movsb
mov
cld
inc
je
add
fs
and
pop
pop
call
ret
scas
insb
inc
xlat
add
insl
in
push
bnd
js
inc
sub
in
dec
inc
push
test
push
fwait
pop
lahf
in
dec
in
inc
push
lret
jecxz
pop
data16
data16
push
dec
mov
xchg
repz
rcl
faddl
test
mov
stos
dec
repnz
jbe
xor
mov
xchg
popa
sarl
cwtl
xchg
mov
pop
push
push
or
pop
mov
ja
sar
mov
jmp
mov
push
rcll
inc
ret
adc
mov
fsubrl
pop
xchg
test
lret
mov
in
xchg
xor
addr16
aaa
fsave
out
sub
cmp
jno
scas
pop
mov
push
mov
les
sbb
xchg
into
ds
mov
lods
add
test
add
cld
pushf
xchg
sub
adc
addb
push
leave
test
ljmp
mov
jmp
sahf
sahf
sarb
repnz
push
mov
dec
and
jnp
cli
aam
adc
arpl
std
fldl
xor
faddp
imul
pop
mov
inc
dec
jb
and
jae
and
xor
adc
lcall
mov
and
pop
mov
xor
outsb
xor
jp
dec
fs
and
add
pop
shlb
pop
sub
dec
std
and
fs
xor
push
filds
aad
mov
fisubs
out
insl
xchg
cmp
ret
dec
js
jg
push
and
cwtl
jbe
adc
xchg
negl
lcall
mov
or
push
movsl
call
shlb
jecxz
ret
mov
sbb
arpl
or
xchg
jle
and
cmc
jp
adc
out
cmp
mov
roll
mov
adc
mov
cmp
shrl
cmpsl
jae
pop
push
in
sub
lods
add
mov
int
mov
test
lock
fnstsw
sti
in
push
lret
xor
mov
xor
or
jbe
cltd
xchg
pop
cli
xchg
lods
scas
dec
mov
int3
inc
mov
sarb
jnp
or
xor
mov
jae
ss
push
test
test
push
aad
adc
ljmp
jbe
sbb
int3
mov
xor
adc
ds
out
adc
shrb
dec
inc
mov
scas
xorb
daa
xor
mov
leave
hlt
sub
gs
fistpl
mov
addl
jmp
repz
or
xor
lcall
mov
sub
ja
push
sahf
pop
jge
adc
popa
adc
add
fcoms
cmp
bound
jns
aam
pop
jmp
push
nop
push
push
add
insb
mov
mov
ret
iret
xor
push
fisttpll
jne
cmp
mov
cmp
jno
adc
lods
push
push
cmp
add
shlb
push
cmp
add
ret
mov
xor
sbb
push
cmp
movsl
sbb
ret
or
in
xchg
sbb
mov
adcl
xchg
or
jnp
shl
lahf
mov
pop
xchg
outsl
int3
cwtl
push
mov
fidivrl
repnz
pop
mov
ljmp
adc
xor
pshufw
mov
fsubrl
xor
jmp
lods
fs
test
mov
adc
cmp
dec
aam
adc
xor
cmp
push
mov
stos
adcb
inc
iret
push
lret
inc
outsl
jnp
inc
push
popf
enter
dec
cmp
jmp
js
es
sub
rclb
cld
pop
rorl
cmp
nop
cmpsb
call
mov
lock
int3
mov
pop
imul
gs
lods
pop
xchg
mov
fbld
dec
pushf
stc
fmuls
mov
push
dec
scas
je
mov
orb
or
mov
jle
cltd
dec
cmpsl
mov
pop
insb
in
mov
jns
fnstcw
dec
cmpsl
push
mov
mov
into
xchg
ret
inc
add
lds
inc
sub
jp
addl
outsl
mov
pop
gs
adcb
imull
jl
pushf
adc
pop
in
jo
call
adc
adc
fisttps
ja
scas
into
ds
fdivl
mov
aad
jge
sub
mov
out
sub
mov
pop
mov
sbb
fs
xchg
shrb
cltd
sbb
pushf
cmp
xor
iret
push
add
lgs
pop
enter
aad
icebp
sub
popf
jns
sbb
movl
sbbl
shrb
mov
sbb
mov
popf
int
mov
push
leave
aaa
in
dec
mov
mov
loop
imul
pop
push
aam
mov
or
mov
add
adc
inc
push
out
push
dec
ss
inc
bound
or
in
scas
jb
sbb
popf
dec
iret
cmpsl
cs
lret
rcl
cltd
cmpsl
leave
push
push
ss
je
push
or
xor
adcl
cmp
adcb
lods
ja
ret
sbb
ret
jmp
sbb
addr16
mov
int3
or
xchg
mov
fs
loop
mov
popa
mov
cmp
sub
mov
loopne
cwtl
cmc
dec
clc
loope
sahf
fisttpl
dec
push
add
mov
jo
xchg
dec
sahf
xchg
into
cld
add
mov
cmp
push
pop
xor
fs
out
cld
add
out
push
fsub
outsb
cld
outsl
dec
addr16
inc
fmuls
enter
cmp
js
pusha
mov
inc
imulb
jne
push
push
je
add
inc
loop
inc
or
push
sub
push
jecxz
imull
xor
or
fcompl
sub
pop
xor
or
mov
int
vprotw
cmp
dec
in
fidivrs
mov
mov
dec
insb
push
sub
jb
mov
std
test
rorb
cli
jb
add
xor
fstpt
inc
adc
pop
fiaddl
adc
out
addr16
sbb
adc
repz
mov
push
mov
movsb
cmpsl
cwtl
jg
in
xchg
inc
or
fimull
mov
test
scas
push
jp
stos
push
cmpsl
dec
cmp
sbb
aas
fdivrl
jnp
rol
adc
ret
xchg
mov
test
lock
sbb
push
mov
stos
push
sub
jp
add
imul
push
push
popa
jae,pn
adc
fwait
push
scas
mov
jae
cltd
movsb
fcmovne
aad
test
cmc
sbb
dec
shlb
fwait
or
outsl
mov
inc
les
and
ret
das
and
insb
mov
cmp
ffree
and
stc
jnp
test
sti
xor
fisubrs
out
ljmp
adc
imul
mov
pop
roll
inc
adc
push
or
sarb
jb
mov
inc
mov
or
arpl
mov
cmp
enter
sub
dec
sbb
xlat
out
popf
mov
test
pushf
jg
enter
or
sub
fisubrs
icebp
fildll
xchg
andb
cmpsl
pcmpeqd
psubusb
scas
pop
nop
mov
lcall
xor
jge
mov
cmc
sub
rcr
push
push
imul
sbb
cmp
outsl
dec
mov
and
push
fsubrl
movsl
fcmovnb
insb
mov
push
aas
pop
dec
xlat
sub
das
mov
xchg
inc
push
mov
adc
aaa
mov
jle
pusha
rcrl
into
dec
ss
and
shlb
lret
mov
stc
mul
sar
mov
scas
xchg
in
dec
xchg
fwait
xor
inc
ds
cli
je
sub
and
sbb
cmp
fucomi
mov
outsb
and
xchg
xchg
inc
sub
test
and
xorl
cs
add
mov
sbb
mov
mov
dec
repnz
outsl
icebp
mov
in
fstps
ljmp
das
stos
aaa
lret
cli
mov
push
xchg
mov
stc
inc
adc
dec
xchg
rorb
mov
cwtl
aas
cmp
mov
dec
cli
fs
outsl
mov
fimull
lea
shll
out
stos
xlat
aad
mov
decl
in
jge
pop
xlat
mov
jo
imul
imul
jmp
mov
cld
mov
add
add
aad
mov
aas
sub
sbb
movsb
mov
iret
sbb
mov
pop
cmp
les
cmp
xchg
out
mov
and
mov
adc
jmp
sbb
in
xor
mov
dec
mov
cmpsl
test
xor
movsb
rolb
imul
and
in
adc
mov
adc
out
xchg
insl
repnz
jnp
mov
scas
push
add
cld
inc
lods
arpl
data16
aad
add
fadds
push
sbb
cmp
insb
inc
test
movsl
add
mov
stos
lods
xor
insb
addr16
mov
adc
jno
lock
shlb
add
xchg
xor
das
daa
frstor
enter
cmp
xchg
dec
dec
mov
mov
xor
dec
add
out
adc
fmull
int3
hlt
ret
imul
ja
mov
dec
pop
imul
push
inc
jge
cmp
and
stc
fs
mov
nop
sub
cmc
inc
push
rcll
loope
mov
ret
shrb
dec
adc
aaa
push
xchg
sbb
mov
cli
insb
repnz
dec
mov
das
pop
ret
icebp
cli
push
lods
jnp
loop
inc
jp
push
aas
dec
mov
sub
rcr
xchg
dec
aam
in
cmp
lea
loopne
shl
test
loop
or
icebp
push
mov
and
jl
jne
xor
jo
jns
cmpb
push
mov
addr16
fcmovu
out
adc
enter
in
imul
xchg
push
in
adc
cmpb
mov
ljmp
stc
push
sub
shrb
jmp
mov
mov
xor
adc
pop
mov
fsubrl
cmc
jle
xchg
vphaddubd
jl
jno
nop
cwtl
sub
mov
bound
les
xor
lods
push
out
mov
cmp
std
je
sar
add
cltd
jg
ss
inc
jge
int3
sbb
aas
jg
or
pop
mov
fnstcw
aas
out
and
pusha
pop
addr16
dec
pop
jo
sbbl
std
push
mov
roll
sbb
adc
mov
pusha
inc
xchg
sti
inc
scas
pop
insb
inc
cmc
pop
cld
mov
fisubrs
nop
mov
jle
insl
imul
mov
iret
lods
jmp
dec
pop
dec
or
enter
jb
repz
stos
int
cmc
jmp
sbb
je
mov
sti
adc
std
jns
js
icebp
roll
jno
shll
xchg
xchg
jp
cmpsl
repz
je
xchg
mov
mov
xchg
rorb
fiadds
andb
mov
xchg
movsl
dec
add
repz
push
push
call
test
shll
ret
dec
call
scas
jbe
movsl
push
lahf
aaa
ljmp
jne
test
or
lods
fdivr
scas
inc
daa
push
mov
mov
lods
mov
bound
mov
es
adc
lret
mov
sub
pop
scas
aas
push
fidivs
in
aaa
jo
aas
pop
xorl
mov
fcoms
push
sub
lahf
data16
mov
leave
xor
xor
or
aas
cmp
push
cmp
stos
out
push
outsb
pusha
adc
mov
xchg
sub
div
lods
movb
mov
lds
ss
enter
js
mov
mov
mov
je
xchg
sub
scas
clc
jbe
inc
jbe
or
mov
test
nop
insl
inc
aaa
mov
mov
lret
cwtl
add
fbstp
divl
movsb
rclb
fstp
mov
rcll
xor
sbb
fsubp
scas
adc
adc
mov
push
fcoms
sub
fistps
lock
pop
hlt
jb
pop
les
aaa
out
insb
mov
xor
int
ret
mov
sbb
call
cmpl
jl
pop
mov
dec
imul
pop
adc
jbe
adc
inc
rcrb
gs
push
hlt
cwtl
inc
mov
aas
and
aaa
popa
into
fldenv
pop
push
fsubr
mov
jb
lds
pop
lret
adc
inc
out
pop
push
or
cmp
loop
or
mov
imul
mov
outsl
sub
push
decb
mov
xchg
sahf
mov
mov
leave
sub
or
push
fsubrs
pop
hlt
push
imul
add
inc
fisttpll
loope
rorl
mov
lcall
movsb
mov
push
ret
inc
xor
out
inc
mov
jne
out
mov
pop
imul
mov
lea
dec
and
inc
call
ds
ds
insb
mov
sbb
sub
push
insl
movsl
gs
es
leave
push
pop
fistl
adc
das
das
popa
ret
jle
xchg
xor
lock
es
inc
mov
mov
popf
push
or
ficomps
aas
xor
push
inc
in
fwait
xchg
iret
ret
je
addb
cs
mov
mov
lods
or
dec
imul
adc
data16
ljmp
pop
mov
in
ret
cltd
int3
imul
adc
into
cmpsl
out
dec
ss
jle
inc
and
xchg
xor
lret
mov
and
icebp
or
inc
xorb
ljmp
dec
mov
mov
repz
sbb
mov
in
pop
sarb
mov
out
call
hlt
push
sub
pop
fsubs
or
lret
arpl
sbb
pop
mov
sbb
fbld
iret
sub
iret
scas
int
rorl
cmp
push
dec
mov
cli
lret
outsb
ret
mov
push
cmp
jno
inc
lds
push
in
mov
fstpt
lahf
xchg
int3
out
xor
push
mov
call
aas
repnz
push
inc
lahf
mov
je
mov
fidivrs
mov
or
dec
sub
in
jnp
out
imul
ljmp
ret
aaa
pop
pop
fistpll
push
dec
out
stos
inc
ret
std
test
or
push
cmpsb
cltd
nop
fisttpl
insb
fcmovb
xchg
movntq
push
stos
ja
call
push
ja
das
popf
fadd
xchg
sar
js
sub
dec
xchg
mov
push
fwait
pushf
nop
xor
dec
icebp
mov
cmc
call
sti
add
mov
mov
nop
xchg
int3
ljmp
mov
push
test
incb
mov
lahf
cmovs
je
addr16
and
out
fisttps
adc
add
aad
and
jne
sub
lods
lods
dec
mov
idivb
mov
or
shll
aad
int
mov
add
std
stc
jmp
inc
xor
jecxz
jmp
daa
out
or
pause
lcall
imul
neg
push
lret
je
lock
leave
pop
ss
lods
divb
cmp
mov
jbe
int
js
xchg
stos
mov
pushf
mov
mov
out
pop
push
and
jecxz
cmc
add
dec
sahf
pop
jae
push
and
aas
xchg
rorl
rep
out
movsl
jmp
js
ja
nop
xchg
mov
fcoml
popf
mov
adc
loop
inc
setg
add
in
pop
mov
outsb
or
sti
stc
aas
push
jb
push
popa
inc
mov
sbb
lret
insl
aam
cmp
outsb
pop
cltd
pop
imul
int
repnz
iret
mov
mov
push
add
mov
sbb
jns
inc
or
pop
xchg
data16
push
jle
insb
pop
leave
push
leave
insb
rcl
clc
jp
sub
test
sbb
jno
pop
sub
or
int
out
std
pop
sub
xchg
or
mov
movsl
mov
movsb
inc
mov
mov
mov
ja
shll
adc
push
mov
sbb
xchg
insl
push
mov
mov
adc
push
inc
enter
xchg
scas
jae
aaa
int
outsl
sti
lahf
int3
push
push
inc
mov
jge
sarb
enter
je
test
lret
out
test
and
cmc
dec
jmp
ficoml
addr16
scas
mov
sbb
pop
fisttpl
xchg
sbb
and
pop
rorl
or
clc
ja
cmp
xchg
neg
mov
fisubrl
mov
inc
fildll
or
iret
jmp
push
fs
cld
cmpsb
mov
in
pop
jnp
push
addr16
add
mov
idivl
or
push
mov
ljmp
ja
out
push
mov
fs
nop
leave
orl
pop
stos
cmpsb
imul
fnclex
jle
mov
sbb
dec
sub
xchg
push
cltd
outsb
mov
decl
mov
xchg
sbb
aad
dec
fs
push
cld
xchg
mov
ss
jno
lea
inc
sub
xchg
inc
inc
hlt
sbbb
mov
sub
gs
mov
mov
outsb
aad
stos
add
xchg
ja
mov
imul
clc
xchg
sarl
push
fs
orl
mov
dec
cmpb
in
mov
mov
mov
dec
repz
ret
pop
test
popf
or
enter
jp
mov
inc
dec
loopne
cmp
pop
add
lret
sub
stc
ss
clc
fisubl
cmp
jnp
push
mov
test
pop
xchg
scas
leave
cmp
rcll
stos
jno
test
adc
outsl
into
pop
or
inc
fcmovne
mov
xchg
sub
mov
mov
fnstenv
push
iret
rorb
fisubrl
fwait
and
lahf
push
outsb
nop
scas
push
in
es
or
cmpsb
mov
sbb
adc
das
in
or
arpl
dec
ljmp
inc
divb
movsl
mov
push
sarb
mov
sbb
xchg
iret
or
xor
mov
jb
lcall
fsubl
cwtl
pop
out
out
inc
mov
push
in
inc
mov
mov
std
adc
push
cmc
mov
aam
aad
xchg
or
lock
inc
pop
add
repz
hlt
cld
sbb
lea
inc
or
dec
ret
jg
mov
or
mov
out
frstor
popf
das
cmpb
adc
daa
mov
dec
mov
nop
push
and
mov
test
jp
es
jne
cmp
fbstp
lock
adc
sahf
ret
add
cmpb
jb
sbb
loope
mov
push
pop
lcall
jnp
mov
outsb
lcall
and
cmovns
sbb
add
pop
fildl
fdivl
sub
out
mov
pop
loopne
xor
mov
shll
cmp
rcl
stos
jbe
fildll
jmp
sbbb
lock
aas
or
ds
cmpsl
fcompl
mov
out
sub
jno
cs
call
mov
sub
pusha
sbb
repz
add
dec
or
mov
nop
sub
aad
lret
mov
adc
jae
dec
jae
icebp
and
sub
xor
push
ret
scas
iret
pop
mov
jns
jl
cltd
add
pop
test
lds
jmp
push
inc
mov
inc
and
insl
cmp
fisttpl
fcmovb
aad
and
add
push
xor
inc
xchg
popa
xchg
sahf
pop
xor
adc
sti
daa
dec
lock
out
test
xchg
test
call
xor
in
test
and
mov
or
dec
sarl
pop
xchg
stos
inc
in
push
pop
lea
pop
adc
out
scas
or
scas
pop
xor
loope
imul
mov
xchg
mov
mov
push
es
addl
push
dec
adc
sub
dec
push
dec
loop
stos
pop
fstpl
ljmp
fcomps
mov
jmp
cmp
adc
test
mov
mov
jge
adc
test
pop
push
inc
cmpsl
loope
push
lret
test
ss
cmp
pop
adc
lret
mov
cwtl
xchg
xchg
and
xchg
and
insb
stos
xor
xchg
push
test
inc
dec
ficomps
gs
mov
sbb
add
mov
pop
inc
mov
jmp
jae
jmp
push
dec
je
jmp
mov
adc
cmpb
xchg
sbb
sbb
ret
pop
inc
dec
pop
jnp
outsl
lret
pop
test
and
out
sub
lods
push
aas
stc
lret
xor
cmpl
inc
jns
xor
enter
xchg
mov
fsubs
fldl
and
push
sub
clc
es
out
xor
cmp
mov
addr16
mov
inc
add
ja
rclb
adc
in
sub
mov
jno
and
xchg
les
mov
xor
hlt
xchg
shll
dec
into
sti
ss
loope
test
adc
sti
or
jnp
cmpsl
jg
cmpsb
xchg
cs
jmp
mov
std
jns
lcall
inc
stos
btr
mov
std
or
and
xor
mov
pop
es
aam
daa
jb
adcb
sub
jne
jae
bound
aaa
jl
jnp
ficomps
xlat
sti
sbb
stos
loop
repz
pushf
cmp
test
xor
cmp
cs
push
adc
insb
arpl
dec
mov
sub
fisubl
xlat
cltd
push
jno
adc
gs
pop
lret
or
push
mov
adcb
js
mov
xchg
xchg
addr16
xchg
fldl
xchg
jae
add
cmp
push
pop
cs
or
outsl
push
in
sbb
lock
inc
cmp
jp
jae,pt
mov
jno
popa
outsb
sarl
repnz
jl
movsb
cmp
add
insb
mov
sub
iret
pop
adc
jo
dec
pop
sub
sub
movsb
shl
or
stc
lods
lock
sub
filds
ds
shrb
jp
nop
cwtl
popl
sbb
adc
mov
pop
dec
jecxz
xor
xor
inc
adc
cs
fnstcw
faddl
xchg
mov
sbb
xchg
xchg
stc
std
add
mov
imul
js
out
pop
clc
and
dec
mov
pop
mov
icebp
inc
adc
cmpsb
cmp
mov
into
sub
pop
test
cmp
fnsave
sarl
jecxz
ret
movsl
fidivrs
mov
sub
aaa
in
fldenv
jnp
jo
lock
mov
mov
push
fidivs
jns
data16
xchg
push
mov
cmp
inc
inc
roll
pop
andl
push
cmp
movsl
lret
arpl
mov
cmp
and
ljmp
out
inc
out
sub
incl
inc
je
jmp
into
lcall
adc
enter
movsb
and
enter
jl
fsqrt
cwtl
sbb
mov
or
dec
ret
sub
sbb
sub
test
jg
mov
daa
dec
inc
or
cltd
and
pop
add
pop
ljmp
sub
movl
cmp
adc
push
subl
sbb
jecxz
sub
mov
aad
out
out
nop
xchg
clc
movsb
nop
push
icebp
fwait
inc
jle
and
pusha
xor
xchg
push
cmp
insl
mov
cli
cmpsb
xlat
pop
xchg
xchg
mov
mov
xchg
mov
rclb
add
push
add
jo
jg
test
shrb
xor
fdivs
add
xor
dec
mov
xchg
rorl
pop
push
mov
addb
mov
arpl
nop
dec
add
rcl
adc
mov
xor
test
movsb
stc
mov
test
cmp
scas
cltd
inc
test
or
sbb
ja
inc
cmp
jae
es
inc
push
movsl
jne
test
push
aam
arpl
mov
jmp
mov
adc
in
mov
lret
mov
jp
stc
mov
jp
ret
sbb
lcall
inc
mov
stc
dec
leave
fxch
ret
lcall
or
sbb
add
je
sarb
jle
or
stos
subb
jae
ds
mov
adc
sub
fmulp
jp
popa
addr16
xchg
shlb
xchg
inc
mov
mov
bound
sbb
pop
mov
cld
insl
add
dec
nop
inc
mov
adc
lahf
dec
dec
je
gs
imul
ret
cmpsb
es
negl
mov
pop
aam
jbe
andb
nop
mov
xor
cmpsl
mov
mov
sbb
out
sbb
lods
test
pop
add
movsl
icebp
jg
pop
adc
ret
mul
or
dec
add
test
cmpsl
push
dec
repnz
cmpl
les
rcr
mov
nop
and
push
dec
mov
int3
jge
into
xchg
pop
mov
mov
xchg
adc
out
or
dec
jns
lea
mov
pop
mov
sub
push
mov
jae
dec
les
or
daa
loope
scas
adc
cmpsl
cli
dec
leave
mov
loop
mov
cli
jbe
pop
or
rorl
mov
dec
ficoms
outsb
mov
shl
dec
cmpsb
sbb
and
ss
pop
inc
in
adc
nop
and
adc
inc
pop
mov
mov
mov
mov
or
imul
xchg
dec
push
dec
into
test
pop
call
adc
cwtl
das
sbb
rcll
frstor
idivl
and
and
leave
mov
sub
sbb
fcoms
xchg
loope
mov
das
mov
pop
mov
mov
pop
sahf
xor
cmp
in
pushf
mov
call
mov
adc
hlt
add
cmpsl
mov
cmp
xlat
xor
mov
popa
dec
jp
inc
imul
aad
mov
sbb
ret
xor
aad
outsl
aas
arpl
ficomps
repnz
mov
iret
xor
test
mov
int3
pushf
jecxz
cmp
cmp
repz
stos
aas
aas
fdiv
cmpb
loope
ficomps
movsb
scas
pop
repz
imul
insl
push
orb
adc
pushf
mov
push
adc
aas
dec
sub
addr16
push
mov
mov
pop
movl
das
inc
imul
jp
stos
or
adcl
bound
xchg
jmp
sbb
xchg
test
lods
daa
scas
test
mov
cmpsl
loope
inc
pop
mov
sub
adc
dec
stos
pop
in
sahf
test
add
ss
hlt
in
cmp
scas
mov
cli
pop
push
lret
in
gs
test
insl
out
pushl
arpl
mov
cltd
lods
sub
push
or
xchg
ja
cmp
sarb
mov
push
sbb
stos
popf
cwtl
je
xchg
sub
sahf
cmp
fmull
jmp
enter
inc
outsl
das
aam
push
xchg
mov
push
push
ds
int
or
mov
adc
push
mov
popf
into
loope
data16
scas
hlt
mov
pusha
sbb
pop
scas
or
pop
or
loop
stc
add
pusha
sub
or
outsb
mov
xchg
out
daa
inc
mov
cmc
shr
call
rorb
shll
fisttps
lock
adc
ficompl
jg
jno
test
jbe
xor
clc
jbe
pop
out
jge
jg
js
jecxz
stos
mov
fstpt
jns
jb
xlat
ret
xchg
mov
gs
push
lock
push
aad
xchg
jns
repz
dec
lret
xor
inc
cmp
mov
sarl
fistl
jno
mov
es
push
shlb
or
sub
fsubs
dec
insl
stos
enter
cmp
loopne
adc
int
mov
out
pop
test
jb
sub
pop
jle
scas
add
jle
mov
sub
cmp
push
pushl
cmp
movsb
add
sbb
sub
pop
push
mov
cmpsl
adc
pop
mov
aas
mov
add
or
cmp
push
lock
jns
mov
loop
int3
jb
sub
pusha
les
push
sub
outsl
push
lea
add
adc
fwait
sub
sub
xchg
xchg
sar
add
xchg
sub
adc
mov
ja
cs
fists
sub
das
mov
ss
xchg
pusha
and
or
sub
les
fs
stos
sahf
enter
jecxz
popf
cld
shr
mov
push
push
stc
arpl
sahf
or
clc
out
adc
enter
or
mov
xchg
sbb
push
out
inc
sbbl
xchg
ja
scas
ja
mov
je
ret
push
incb
jb
mov
inc
aad
fildl
jae
and
lcall
push
je
cmp
push
into
add
sti
repz
outsb
lcall
fistps
push
push
pop
pshufw
ret
add
jo
pop
jge
pop
cmpb
shll
xchg
pusha
setb
out
into
repnz
adc
cmp
xor
mov
adc
movsb
loop
and
adc
movb
enter
daa
mov
es
andl
mov
lret
mov
ret
xlat
push
sbb
lods
addl
test
jl
ja
das
js
sbb
stos
bound
or
stos
jns
push
aaa
sbb
pop
xor
push
xor
in
insl
push
push
adc
xor
mov
xchg
inc
dec
and
movsl
cmc
bound
and
test
jae
mov
xor
push
pushf
or
icebp
in
fnstsw
push
inc
daa
dec
push
xor
loopne
cmpsb
mov
aad
inc
or
cmp
test
xchg
inc
aad
inc
out
fcoml
mov
inc
cmc
inc
leave
in
lods
aad
loop
outsl
dec
jle
dec
mov
xchg
jmp
or
and
and
sbb
popa
mov
mov
fs
dec
xchg
hlt
inc
mov
repz
pop
mov
jne
cmp
in
sbb
mov
adc
rorb
fxtract
or
sbb
iret
or
aad
mov
jo
daa
mov
xor
cltd
loope
adcl
adc
bound
mov
imul
jmp
jns
push
mov
arpl
stos
mov
stos
daa
pop
scas
in
gs
sbb
pop
sbb
mov
or
push
insl
lret
and
pmuludq
aam
int
pop
fdivs
scas
ret
xor
sbb
jno
int
in
push
pop
adc
repnz
fadds
mov
es
enter
jbe
inc
jno
mov
sbb
add
fsubl
in
mov
inc
das
mov
jl
shlb
outsl
mov
and
mov
aam
push
push
clc
cltd
inc
enter
pop
cmp
stc
pop
mov
jnp
out
fincstp
and
add
xchg
adc
sbb
nop
jmp
maskmovq
testl
inc
dec
enter
stos
cmp
scas
xor
sbb
adc
rcr
daa
xor
pop
or
mov
aas
xchg
mov
pusha
mov
inc
cmp
in
stos
adc
sbb
pusha
add
imul
fs
cltd
mov
aaa
mov
outsb
push
dec
mov
mov
orl
arpl
sbb
das
xchg
dec
and
ret
ret
imul
xlat
out
jo
lret
aaa
mov
das
movsl
fnstenv
jb
inc
jae
and
pop
push
jae
std
daa
pop
mov
outsl
pop
lock
das
clc
test
sbb
int3
pusha
icebp
data16
xor
out
in
lods
das
lds
mov
ret
insb
sub
xchg
daa
cli
xor
xor
test
lret
mov
xchg
loop
or
out
xchg
cmp
not
inc
or
les
push
icebp
inc
push
xchg
movsl
pop
mov
cmpsl
outsl
cmp
bound
push
mov
shr
nop
scas
mov
and
lret
push
test
xchg
jb
lcall
push
xchg
dec
icebp
das
pop
xchg
gs
rep
cmc
lret
repz
pop
and
inc
jle
scas
jmp
fildl
xor
out
xchg
fdivl
aaa
sbb
test
xchg
xchg
jb
int3
pushl
jp
fwait
xchg
insb
mov
xor
dec
jl
jb
data16
push
repz
lods
xor
fs
push
or
pop
aas
es
into
jae
mov
pavgb
and
leave
loopne
jne
xlat
out
inc
fiadds
xchg
dec
idivb
pop
mov
jo
sbb
nop
adc
pop
lret
mov
mov
or
lret
mov
adc
out
fwait
test
or
pop
mov
cmp
stos
mov
popf
push
push
call
lea
sub
addl
and
popf
push
mov
sbb
lods
rcl
xchg
sub
adc
or
pop
push
ret
imul
mov
or
xor
sub
cmp
mov
cmpsb
js
shlb
iret
shll
repz
cli
mov
addr16
sub
mov
jmp
cld
xor
cld
shl
iret
and
pop
or
movsl
mov
into
je
mov
mov
adc
sbb
push
call
pop
dec
pop
jnp
push
into
stos
pop
addr16
push
hlt
and
inc
and
sub
push
into
in
sbb
sbb
aam
pop
ljmp
add
fmuls
out
adc
mov
ljmp
pushf
push
imul
cmp
sub
push
leave
push
arpl
xor
icebp
lock
fmull
add
cmp
je
loopne
pop
adc
adc
pop
js
aas
das
jle
mov
pusha
or
push
insb
jp
adc
loope
lea
add
push
fwait
dec
jl
xorb
outsb
in
enter
xchg
push
sahf
dec
mov
jnp
mov
shlb
sti
aas
adc
ficoml
or
sti
mov
fcoml
loopne
pop
push
fsubrl
testl
jecxz
push
stos
enter
je
sub
mov
dec
push
out
mov
pushf
sub
imul
xchg
dec
jle
mov
das
dec
sahf
mov
sbb
ret
sbbl
push
mov
scas
push
dec
xchg
pop
dec
aad
enter
jmp
ret
sbb
int
xor
sahf
subb
movsb
dec
in
rcrb
cld
xchg
repz
sub
push
mov
shrb
and
mov
xchg
push
cmp
fsts
adcb
aam
or
push
cmp
lahf
or
sti
mov
dec
subl
cltd
jb
fs
out
daa
cmp
xchg
lds
lret
sub
or
ficoms
xchg
push
pop
aaa
push
or
mov
or
pushl
movl
in
sub
scas
jne
std
ffree
ja
add
pushf
bound
xchg
movsl
lea
pusha
loopne
jecxz
dec
inc
push
repnz
js
inc
jp
fs
push
fisubl
repz
pop
fdivrs
in
sbb
and
sub
bound
lods
or
mov
cmp
cmpsl
dec
call
sub
lcall
shll
or
wrmsr
repnz
movsb
repnz
jno
dec
sbb
mov
es
mov
pop
aad
sbb
pop
sbb
pop
cmp
mov
mov
test
dec
fadds
dec
dec
pop
jle
xor
hlt
dec
push
loopne
divb
push
mov
cmp
test
repnz
adc
add
xchg
into
int
dec
push
or
insb
or
pop
cmpsb
add
push
repz
mov
sbb
imul
rcr
test
xlat
or
fcom
jp
bound
rclb
jmp
movsb
mov
in
xor
test
cs
push
insl
sub
cmp
insl
test
lock
mov
rorl
and
push
add
orb
xor
cmc
pop
push
sub
imul
dec
in
jbe
dec
sbb
jne
popa
mov
push
add
cltd
push
xchg
jg
mov
pop
testl
mov
mov
gs
adc
pop
sub
popf
pusha
add
push
into
inc
xlat
or
cs
mov
insl
sbb
fwait
mov
rclb
mov
jae
mov
push
jge
loopne
out
lcall
lods
jnp
lods
jg
aaa
stos
pop
call
cmpsl
ja
inc
jp
pop
adc
push
pop
cmp
cmp
fdivrl
pop
gs
icebp
int
pop
dec
shll
mov
aam
jae
lock
mov
xchg
ljmp
test
aaa
outsl
mov
inc
loope
xchg
jno
sub
call
movsb
insl
movl
les
mov
in
mov
pop
push
std
pop
cmp
push
test
push
adc
or
push
add
fimuls
xchg
cli
xor
test
mov
stos
sub
fistps
sub
mov
and
dec
xor
addr16
dec
fidivs
out
xchg
andb
xchg
push
add
cmp
dec
push
insl
ja
popf
outsl
int3
ds
jmp
subl
xor
roll
test
sub
imul
mov
inc
lea
cmp
mov
xor
std
or
repz
push
fisubrs
call
fdivrs
jae
pop
push
sub
mov
inc
and
xchg
pop
mov
push
test
out
inc
dec
les
fsts
push
out
ret
iret
push
mov
in
xor
shll
fnsave
sahf
adc
test
scas
jl
jle
inc
sub
mov
test
test
xor
jmp
adc
jl
pop
mov
movsl
aas
mov
in
mov
dec
orb
push
mov
xchg
int
inc
cmp
shll
iret
cmp
cmp
dec
mov
mov
insb
inc
dec
rcrl
ret
adc
xlat
into
mov
lock
jle
nop
mov
xchg
add
push
mov
pop
dec
inc
add
mov
into
scas
mov
cli
sbb
xor
rcrl
out
mov
mov
pusha
mov
mov
push
rorl
iret
and
les
xchg
popf
or
insb
sbb
outsb
popa
adc
xor
test
jbe
sbbl
loopne
pop
add
stos
push
fwait
mov
out
sbb
and
jne
inc
setle
sarb
xor
sub
sbb
jmp
lret
xor
icebp
and
aas
leave
addr16
sub
cmp
cmc
je
mov
movb
js
mov
addr16
fstpt
sbbl
daa
adc
xchg
mov
out
mov
push
fdivl
lods
xlat
mov
mov
call
mov
nop
cmp
xchg
mov
das
xor
rcll
xor
pop
je
std
sbb
orb
sar
ja
inc
pop
mov
sbb
fcoml
jb
lods
out
dec
imul
mov
mov
lret
adc
sbb
or
xchg
aaa
xchg
xchg
fwait
aad
bound
addr16
push
push
sbb
testl
pop
dec
xchg
jbe
lds
mov
repz
in
mov
inc
ret
icebp
xor
cmpsb
in
and
arpl
add
aam
call
inc
loopne
cmp
das
rol
sbb
push
in
testl
loopne
xchg
mov
nop
stc
rorb
inc
cmp
in
mov
cmp
mov
dec
xor
pop
idivb
lds
mov
gs
sbb
sub
sub
jae
andl
xor
lds
sbb
int3
call
sar
xchg
jmp
ja,pt
dec
sahf
pusha
rorl
lret
movsl
xchg
cwtl
decb
sbb
sub
cmpsl
addr16
mov
in
lret
cmpsl
idiv
in
cs
aam
cld
sti
fxam
fidivl
and
jg
ret
pusha
dec
fbld
adc
addr16
jne
in
add
test
sbb
jb
fsubs
mov
movsb
lds
pop
xorb
and
dec
in
jg
xor
xchg
push
inc
nop
in
iret
or
movsl
das
jecxz
movsl
cmp
xor
and
negl
cmpl
inc
pop
or
out
fwait
ret
xor
or
roll
push
add
sbb
pop
sub
loope
cs
sbb
mov
adc
jae
jae
add
sbb
or
flds
pushf
adc
dec
pop
xchg
adc
fildl
xchg
int
jnp
hlt
add
or
leave
lods
rolw
dec
into
out
out
adc
filds
ss
out
loop
mov
pop
and
in
mov
enter
lahf
jg
imul
pop
mov
dec
jb
sbb
push
adc
mov
fucom
jae
add
arpl
arpl
mov
inc
loop
nop
jmp
jnp
lds
add
lea
movsb
loop
sti
data16
push
push
push
mov
pop
xchg
mov
movsl
js
or
repnz
bound
stos
rcl
pop
add
cmp
jp
mov
mov
pusha
popa
dec
je
loope
xor
xor
addr16
cmp
repnz
mov
sub
insl
int
fdivrl
loop
rcrl
cmp
es
push
pop
rcl
icebp
mov
fimull
mov
xor
outsl
sub
aam
mov
or
ret
cmp
fiaddl
mov
sbb
jb
dec
shrb
dec
repnz
in
dec
sti
add
xchg
setg
stos
imul
or
and
cmp
nop
fbld
xor
add
push
and
jb
cmp
enter
pop
aas
loope
test
mov
jae
jmp
cmp
loop
stos
pop
mov
ret
fcomi
jle
jle
imull
xor
scas
ja
loope
jl
mov
pop
xor
movsl
pop
dec
inc
in
pop
dec
lods
arpl
lock
jp
xchg
and
fs
enter
push
rcrl
bound
add
int3
test
and
mov
lahf
push
pop
pop
xor
mov
mov
ss
push
fmuls
pop
push
pushl
adcb
fdivrs
mov
stos
sbb
stc
xchg
repz
xchg
pop
popa
xchg
mov
outsb
pop
testb
leave
stc
movsb
add
sbb
mov
stos
ret
add
movsb
shl
lods
lds
pop
sahf
mov
fisttpl
loopne
negl
outsl
aad
jmp
cmp
lock
pop
xchg
jg
jne
fistpll
mov
sbb
cmp
leave
test
sahf
sbb
sub
arpl
lods
decl
push
les
xor
and
pushf
xchg
adc
hlt
lahf
lret
pop
cmp
shrl
bound
ja
or
jl
aaa
jne
rorl
push
ret
push
lret
shll
addr16
dec
xor
adc
lahf
push
lock
jl
mov
push
jne
incb
fildll
xlat
aad
inc
in
cmpsl
into
push
pop
pop
or
daa
iret
dec
mov
mov
daa
addr16
mov
dec
xchg
and
in
fistpl
sbb
push
jb
call
push
fistpl
mov
sbbb
and
xorl
cmc
pop
pushf
pop
mov
lock
mov
pop
cmp
xchg
cmpsl
icebp
and
mov
jnp
clc
cld
outsl
repnz
push
inc
mov
sub
das
push
xor
test
fisubrl
inc
push
cld
shll
pop
ret
xor
or
xchg
les
mov
sarl
leave
sub
cwtl
adc
sbb
cmp
mov
cmpsb
dec
sub
xchg
repnz
push
mov
mov
shr
adc
dec
sub
dec
push
mov
mov
in
mov
or
sbb
sbb
ret
outsb
xor
add
push
aaa
mov
ljmp
scas
xchg
ds
dec
xor
mov
lahf
sahf
jge
lods
popa
inc
inc
jmp
push
xchg
ret
jg
mov
jbe
mov
fsubr
pushf
shrl
mov
inc
popa
adc
dec
jo
jbe
sbb
add
fsubs
pop
pop
mov
xor
sub
fisttps
pushf
insl
sub
add
mov
push
or
or
push
dec
cwtl
mov
sub
test
aad
xchg
mov
sahf
inc
cwtl
mov
mov
stos
movsb
cmp
xlat
cmp
repnz
pop
call
xchg
loopne
mov
js
push
inc
dec
scas
ds
jmp
cmp
or
mov
jmp
jge
int
mov
jg
in
dec
lahf
test
inc
cwtl
test
pop
shrb
test
mov
sub
dec
in
xor
lock
addr16
lds
jns
fldl
sti
and
sub
or
and
out
aas
add
cmc
imul
sub
dec
mov
daa
mov
std
push
inc
pushf
mov
sub
sarl
aad
mov
fistpl
add
out
pusha
into
je
enter
and
jb
mov
jmp
mov
fisubrs
mov
insl
inc
ret
cwtl
aaa
pop
outsl
iret
loopne
sub
push
add
jmp
sti
sbb
cmp
inc
ficoms
scas
gs
add
xor
lods
in
jl
mov
cmp
lcall
push
pop
fdivrl
inc
mov
pop
mov
cmp
mov
cmp
fst
mov
fs
sub
rcrl
jp
jb
dec
repnz
lret
fstpt
mov
push
into
cmp
fnstsw
pcmpeqw
mov
test
add
stc
or
cmp
ds
int3
imul
pop
cmp
clc
push
mov
test
inc
mov
pusha
dec
aas
mov
adc
imull
fincstp
sbb
jne
jae
dec
icebp
adc
mov
jecxz
mov
cltd
fmulp
sub
lcall
mov
xchg
sahf
lcall
es
dec
pop
cwtl
das
cli
test
xor
cmp
clc
xor
adc
add
jecxz
pusha
inc
inc
data16
inc
aaa
adc
mov
mov
cmpsl
push
mov
mov
jmp
sub
ret
aad
jns
pop
leave
ret
lea
pop
dec
ret
mov
arpl
daa
xchg
push
or
clc
subb
pop
mov
mov
loop
adc
pop
ret
mov
daa
test
subb
clc
pop
dec
mov
pop
dec
daa
loopne
and
jo
push
xchg
fst
ret
fildll
xor
sbbb
mov
xchg
dec
stos
sbb
outsl
or
mov
test
xchg
cmp
add
mov
push
add
pop
cmp
test
pushf
movsl
cwtl
xchg
add
adc
fsubs
gs
adc
push
add
subb
push
adc
pop
mov
outsb
xchg
cmp
xchg
and
xor
insl
pop
xlat
pop
mov
xor
loop
cwtl
jbe
dec
push
aaa
ret
jb
mov
add
orl
push
xchg
ljmp
cwtl
push
test
pushf
and
hlt
sub
out
lcall
std
fs
test
adc
ss
jge
xchg
mov
sahf
mov
push
jnp
jge
scas
push
mov
aad
xchg
xchg
mov
imul
arpl
pop
xor
loope
mov
jecxz
jmp
faddl
mov
cld
cmp
lea
cmpsb
inc
fdivs
pop
mov
xchg
ds
sub
daa
shlb
ss
pop
mov
pushf
pop
aaa
scas
adc
inc
adc
out
ret
xor
sbb
movsb
cld
dec
fwait
jge
inc
dec
mov
lock
xor
push
test
xlat
sbb
add
lds
mov
pop
lea
sbb
jae
adc
icebp
push
sahf
xchg
bound
adc
das
movsb
jo
push
es
adc
mov
inc
add
pop
lahf
out
arpl
mov
jp
dec
ja
or
and
loopne
mov
addl
subb
mov
and
in
adc
lret
mov
add
mov
inc
jl
stc
mov
loopne
out
pop
inc
test
es
sub
ja
movsb
dec
iret
leave
icebp
push
insl
into
popf
fstpt
movsb
or
jb
pop
lods
add
or
sbb
add
arpl
ja
dec
movsl
pushl
and
push
aaa
mov
add
mov
xchg
jo
cld
xchg
fidivrs
popf
lods
pop
and
pop
and
rcrb
sub
jns
inc
es
rcrl
sbb
push
sub
sbb
loopne
push
adc
pushf
pop
or
jae
mul
sub
pop
adc
sbb
jecxz
outsb
out
sbbb
aam
push
sbb
clc
aad
mov
mov
mov
adc
enter
sbb
jae
mov
sahf
call
add
scas
jo
test
leave
add
repz
mov
add
das
jnp
out
jg
mov
mov
shl
jne
push
daa
dec
jmp
sub
cltd
int
int
out
icebp
pop
aaa
mov
or
rcl
jmp
adc
arpl
cmp
out
ja
fdivr
and
aam
mov
pusha
sub
sub
fstl
into
shlb
add
push
std
jo
push
stc
js
shl
sub
fcomip
lahf
sbbl
loope
xchg
cs
jne
dec
test
jp
stos
sub
xchg
popa
and
mov
aas
jle
push
mov
into
out
dec
repz
fsubl
and
inc
jns
fwait
aad
mov
jbe
jb
add
popf
popf
hlt
add
insb
dec
inc
sub
aaa
cmp
mov
jno
out
pop
push
mov
sub
ljmp
daa
pushf
stc
enter
sbb
lds
jnp
pop
shlb
rcll
rcrb
add
inc
pop
loopne
sub
arpl
mov
cmp
subl
push
sub
push
in
add
mov
mov
dec
inc
out
test
sahf
mov
inc
fstpt
pop
sbb
stos
mov
cs
jo
sbb
pop
mov
jnp
std
hlt
notb
push
pop
add
fwait
cltd
les
fldt
add
popf
clc
dec
pusha
in
movsl
hlt
mov
add
loope
xor
out
test
pop
ret
pusha
mov
dec
xor
in
jp
mov
push
mov
and
pop
fsubs
xor
adc
scas
inc
sarb
sub
leave
addr16
les
mov
pop
insb
les
mov
mov
data16
mov
daa
inc
lret
ret
and
ret
hlt
out
test
fstl
out
dec
xchg
stos
pop
and
dec
mov
jl
inc
adc
mov
inc
adc
cmp
pop
xchg
jg
fwait
sbb
xor
popf
mov
mov
je
andb
jns
mov
ss
loope
fbstp
sbb
test
btr
nop
xor
mov
icebp
adc
dec
jp
xchg
les
push
dec
mov
add
fcmovnb
add
xchg
xchg
and
add
xor
loope
mov
mov
scas
std
fnstenv
movsl
pop
mov
push
dec
out
dec
iret
popf
mov
in
cmpsl
push
loopne
mov
scas
pop
pop
test
filds
xor
lods
pop
pop
dec
out
ret
push
sarb
jno
dec
xchg
mov
enter
or
push
mov
add
scas
sub
mov
aaa
mov
xchg
dec
jns
push
and
rclb
cmp
lock
inc
insb
inc
lock
adc
cld
insl
mov
loopne
outsb
out
push
gs
push
lods
fs
sub
dec
imul
lret
out
mov
pop
ds
push
fsubrp
scas
push
push
fistps
or
jbe
ja
dec
sbb
xchg
xchg
adc
ret
insl
xlat
dec
out
mov
fdivrs
scas
cmp
dec
int3
xor
mov
enter
fbld
bound
fisubs
notl
sub
push
lea
push
out
mov
popf
cli
mov
dec
xchg
mov
out
jg
add
push
les
xchg
cmc
inc
popf
sub
and
and
sub
dec
out
push
xchg
fwait
and
clc
add
cmp
mov
dec
dec
mov
xor
dec
mov
pop
mov
into
jno
cli
or
jns
mov
mov
iret
in
push
rol
nop
or
pop
ljmp
or
push
adcl
test
xor
std
jmp
xchg
mov
je
xchg
ficomps
shll
loopne
or
stos
imul
jbe
mov
rorb
mov
out
pop
xlat
mov
and
rcrb
das
inc
outsl
sub
push
enter
sti
jecxz
stos
clc
out
test
sahf
inc
pushf
loope
mov
mov
rolb
fldcw
loope
sti
push
arpl
repz
or
in
imulb
in
aad
icebp
jbe
pop
mov
mov
cld
out
clc
sbb
test
sarl
pop
jp
shrb
mov
or
mov
pop
pushf
lahf
jo
sub
ret
int3
jp
out
testb
lock
sub
push
sub
call
shrb
stc
int
jnp
pop
std
insl
jmp
lock
mov
xor
adc
mov
movsl
sbb
aad
addr16
ret
or
sub
fadds
enter
arpl
push
xor
idiv
cmp
adc
repnz
in
ljmp
leave
xor
xchg
scas
dec
mov
pushf
add
shrb
sar
pop
popl
pop
movsb
stos
jno
pop
jne
xchg
pop
jne
rorl
cmpsl
mov
into
mov
jge
nop
mov
sbb
jbe
aas
adc
stos
idivl
xchg
mov
sub
adc
push
and
ljmp
jae
mov
daa
and
inc
sub
pop
or
cmp
test
and
in
in
pop
movsb
insb
cmp
dec
imul
stos
insl
mov
shlb
imul
sti
fisubrl
js
xchg
gs
inc
mov
repnz
nop
and
cs
add
adc
inc
mov
sti
cmpsl
aad
pop
test
pop
mov
xlat
jle
movsl
cmp
and
popf
jno
fisubrl
adc
push
mov
push
sti
lret
jo
adcl
popa
andl
sahf
pop
sti
fdivs
add
mull
pop
jecxz
adc
cmpsl
inc
push
popa
inc
arpl
mov
ret
arpl
xor
cmpsl
fdivl
rcll
dec
inc
mov
jnp
and
sbb
fdivrs
or
and
lret
sbb
push
scas
ja
push
icebp
mov
icebp
insl
arpl
xchg
dec
pop
mov
mov
xchg
fwait
int3
into
gs
repnz
test
xchg
icebp
add
lret
ret
xor
inc
loopne
pop
push
mov
lahf
nop
push
aad
jbe
decl
cmp
cld
xor
or
inc
and
push
scas
jmp
out
cmp
push
and
mov
in
cmpsb
rcll
mov
into
testl
mov
nop
sbb
add
cmp
lret
sbb
popa
adc
sahf
sub
sub
scas
ljmp
fsts
and
popf
out
sub
push
test
sbb
jb
mov
or
out
imul
je
inc
xchg
jl
clc
xchg
jl
push
jp
in
call
mov
fadds
loope
push
add
dec
std
jae
test
lret
fwait
dec
rolb
and
into
cmp
ljmp
das
out
jmp
mov
cwtl
mov
cmp
mov
xor
pop
rcrb
lods
and
insl
cmp
xor
sti
cld
je
or
cmc
test
cs
icebp
scas
movsl
and
iret
add
sti
lock
enter
add
cmp
add
mov
xor
lahf
ljmp
add
cmc
icebp
jae
xor
xchg
and
ss
inc
dec
bound
cmpl
mov
push
rcrl
or
inc
test
jg
cmc
cmp
push
cmpsl
bound
push
lret
js
gs
cld
pop
mov
dec
rolb
cwtl
xor
add
out
arpl
das
mov
rolb
add
cs
jmp
cmp
mov
js
pop
mov
nop
push
bound
negl
lods
mov
scas
inc
xchg
xor
pop
test
cmpsl
call
test
lods
popa
rcr
popw
push
and
das
fmulp
sbb
push
int3
in
mov
stos
add
out
inc
mov
insl
sub
mov
push
fld
fs
pop
mov
out
out
sub
jne
mov
loop
ret
or
jb
xchg
mov
xchg
mov
stc
std
out
pop
push
or
or
in
andl
sbb
inc
push
dec
daa
cmp
adc
loop
mov
mov
cmp
int3
lcall
mov
xchg
sahf
jb
dec
das
mov
mov
and
jge
lcall
cmp
jmp
cmpsl
xchg
mov
push
push
cmc
loop
xchg
fsubrs
jmp
psrld
movsb
dec
scas
cli
dec
ds
addb
loope
sbb
mov
mov
cmp
ja
cmpsl
xor
mov
push
xchg
int3
xchg
xor
test
push
bound
ficomps
leave
mov
ficomps
ss
gs
cs
mov
sub
inc
fisttpl
leave
mov
xor
or
xor
jg
or
adc
movsl
das
xchg
inc
imul
dec
out
add
sub
addr16
rclb
mov
xorb
scas
xor
int
sbb
add
mov
xor
les
inc
adc
fldz
adc
push
rcl
fidivrl
cmp
and
sub
cld
sub
sub
lahf
jno
rcl
and
outsl
cmpsl
in
push
lods
adc
cltd
int
jns
in
sub
mov
jl
repnz
psadbw
test
xor
movsl
add
fcompl
int
mov
push
xor
lahf
xchg
rcll
sub
icebp
cmp
call
es
jae
xor
dec
mov
adc
gs
sbb
xchg
sbb
das
mov
mov
cmp
push
cmp
sahf
mov
push
lret
pop
xor
lods
xor
push
sbb
ret
push
mov
repz
aad
imul
pop
lock
push
cli
stos
aad
ds
pop
popa
shll
pop
push
movsb
pop
or
call
arpl
mov
lea
mov
lret
test
fisubrs
push
aaa
lea
cwtl
outsl
cli
xchg
dec
push
daa
xchg
add
loope
inc
mov
test
mov
sar
xlat
ret
inc
lcall
dec
pop
mov
cmp
popa
dec
iret
out
pop
xor
shrb
in
adcb
mov
sbb
popf
cmpsl
xor
mov
imul
sbb
test
ljmp
jb
pop
lds
mov
xor
jne
fwait
bound
mov
pop
mov
hlt
jbe
outsl
aad
fs
stos
les
cmp
and
push
jmp
imulb
mov
mov
out
dec
fisubl
aam
js,pn
jbe
stc
jnp
popa
rclb
daa
add
adc
gs
add
cmpsl
adc
pop
mov
test
mov
push
cld
sbb
pop
arpl
rclb
insb
push
push
mov
sbb
cltd
shrl
adc
pop
out
clc
cwtl
and
ja
in
shlb
push
add
mov
inc
xchg
sbb
push
icebp
daa
xchg
test
inc
lea
clc
sbb
sub
in
add
dec
into
shl
dec
out
test
cli
xchg
or
sbb
ljmp
rcrl
fistpl
pusha
add
aas
outsb
fimull
cwtl
lret
push
adcb
sbb
cwtl
int3
aam
pop
push
scas
jmp
popa
sti
into
mov
movsb
mov
stos
jl
stc
or
jecxz
fisttps
clc
cmp
push
fs
and
push
sahf
call
lds
lea
outsb
pop
or
mov
jnp
repnz
shr
xchg
xor
add
inc
repnz
xchg
mov
pop
pusha
jbe
and
xchg
pop
jmp
dec
jb
sub
push
or
and
or
sbb
rclb
mov
push
mov
lahf
lock
jns
inc
mov
jnp
roll
push
xor
dec
cmp
cmp
mov
aas
lock
add
scas
mov
dec
mull
adc
or
push
mov
jmp
and
sub
mov
mov
and
add
pop
js
movsl
inc
out
mov
mov
call
lcall
iret
mov
ja
test
flds
out
or
or
xlat
movsb
jge
push
sbb
sahf
aaa
push
fcoml
add
leave
mov
into
lret
inc
mov
jge
xor
inc
call
xor
stos
stc
movsl
cli
dec
mov
push
adc
addl
and
push
jmp
into
cmp
leave
pop
inc
mov
sub
loop
cwtl
inc
test
add
add
dec
lock
jmp
jno
loopne
sahf
pusha
pop
sub
fcmovnb
xchg
es
jp
sti
push
and
mov
or
movb
movsl
push
jbe
mov
mov
sti
data16
dec
or
shrl
adc
and
sarl
aam
stos
test
xor
iret
jo
repz
aas
sub
cli
inc
pop
movsb
pop
outsl
addr16
stos
adc
cmp
repz
xor
or
xchg
sub
push
jbe
and
test
jl
jecxz
lret
ja
mov
into
inc
cli
inc
cwtl
faddp
daa
cmp
push
in
mov
xor
das
inc
mov
xchg
insb
out
cld
jge
loop
push
int3
mov
arpl
push
test
adc
frstor
inc
ficompl
dec
neg
mov
push
pusha
add
subl
or
mov
lret
outsl
js
sbb
mov
insb
jle
cmp
sbb
mov
mov
aas
jg
jnp
mov
fstpl
add
lahf
pop
pop
lods
out
shrb
or
cltd
popf
xchg
jle
cmpsl
ss
lcall
xchg
dec
pop
jecxz
adc
orb
sbb
xchg
clc
adc
ret
jmp
fstl
imul
sahf
jns
data16
ss
jle
push
jmp
ljmp
lods
out
frstor
inc
test
jno
xchg
mov
pop
push
sbb
roll
movsl
inc
lahf
call
loopne
iret
loopne
int3
sub
in
xor
movsl
adc
sub
iret
xchg
ss
jbe
xchg
pop
outsl
ror
lods
push
cmp
sub
lea
add
aam
adc
int
pop
sti
call
pop
xchg
cmpsb
cmpsl
packsswb
push
pop
pop
sub
es
mov
inc
cwtl
lea
sbb
sub
cmp
outsb
popf
cmp
movl
mov
stos
dec
add
lds
ret
jo
mov
sub
xlat
cmc
and
xor
or
out
add
mov
xor
sub
xchg
xlat
and
adc
xlat
or
imul
xchg
mov
scas
push
int3
add
rcrb
lret
adc
pop
mov
loopne
ret
push
push
sub
dec
fcompl
xchg
fadd
jecxz
add
jnp
leave
jmp
xchg
psubw
movb
dec
xor
jp
sub
xor
inc
jl
dec
fstps
add
pusha
push
jge
mov
lods
scas
insl
std
imul
int
sbb
or
pop
lods
pop
pop
rorb
lds
shr
mov
lret
mov
sbb
xchg
push
adc
stos
xchg
mov
and
xchg
sub
das
addr16
cmp
push
int
fs
notl
enter
mov
cmp
push
out
cmp
outsl
jnp
les
test
xchg
je
push
add
test
xchg
call
pop
mov
mov
test
add
inc
jp
lods
mov
sub
rolb
and
mov
mov
push
stos
nop
cmp
sbb
scas
outsl
jp
dec
inc
outsl
inc
out
into
adc
push
and
mov
or
sti
aam
sbb
sub
aad
aaa
push
sti
or
jg
cmp
pause
lret
cld
nop
add
movl
push
xlat
and
pop
xor
out
outsb
jb
mov
and
sub
shrb
mov
xchg
xchg
cmp
das
sub
xor
fs
cs
push
and
cmp
cwtl
call
inc
xchg
test
or
inc
pop
icebp
adc
sbb
push
sti
roll
fisubrl
lret
mov
cltd
jno
insb
imul
loop
xor
and
aam
push
mov
push
mov
ficoms
insl
fs
into
pop
push
pop
mov
jecxz
push
jns
into
std
mov
mov
and
aaa
jle
insb
stos
mov
scas
popf
adc
xchg
js
mov
sub
mov
fstpt
mov
ret
pop
out
shll
jge
ret
jne
push
insb
and
add
rcll
jne
lods
add
add
mov
repz
loop
sbb
scas
xor
test
push
cmp
and
dec
cltd
mov
push
les
and
adc
das
pop
hlt
out
out
rclb
out
dec
jge
xor
mov
adc
xchg
stc
fildl
mov
cmp
lret
and
out
cmp
lds
sbb
pop
or
lret
and
dec
rcr
mov
mov
test
es
arpl
and
subb
jae
cmp
fmul
in
scas
sti
sbb
lock
inc
cmp
fisubrs
and
aad
cmpsb
adc
dec
xchg
mov
sbb
mov
mov
push
test
repnz
sarb
dec
test
dec
ds
fwait
xor
jo
push
inc
les
gs
es
mov
test
xacquire
or
dec
lods
gs
std
cmp
roll
xchg
out
dec
inc
in
push
scas
dec
adc
in
add
push
add
dec
nop
insl
mov
outsl
fdiv
aad
dec
pcmpgtb
and
dec
repnz
jp
dec
jl
jge
testb
inc
mov
mov
ret
out
loop
sbb
popa
cwtl
and
xchg
adc
jo
dec
loope
add
pop
testl
xor
lahf
addr16
push
sbbl
cs
add
fsub
mov
xor
pop
jmp
ds
mov
loop
fidivl
pop
das
inc
cmp
lcall
mov
xchg
les
inc
movsl
xor
jbe
das
cmp
movsl
mov
sub
xchg
sbb
xchg
aas
xchg
pop
sbb
in
xchg
mov
es
outsl
sti
test
cmp
push
mov
pop
xor
xchg
sarb
ret
mov
mov
adc
into
cmp
mov
js
sbb
jg
cwtl
inc
and
or
dec
testb
out
lods
pop
jle
das
sbb
ja
je
adc
outsb
addr16
sti
xchg
jbe
jg
mov
mov
cmpsl
mov
pop
loop
xchg
xorl
popa
xor
pop
ja
fcmove
and
inc
ljmp
hlt
daa
lret
mov
clc
fwait
lea
dec
xchg
rorl
jecxz
in
xlat
adc
push
ss
and
push
int3
or
push
xchg
push
leave
mov
xchg
imul
jg
mov
int
sti
push
js
fiadds
pop
cmp
repz
xor
jno
or
xchg
dec
mov
jo
fstp
mov
mov
xchg
add
push
dec
or
fldt
mov
aaa
ljmp
nop
dec
sub
inc
cld
jb
fcoms
and
jae
lcall
hlt
cmp
enter
inc
inc
sbb
and
in
pushf
imul
mov
mov
stc
mov
addb
pop
push
and
es
loop
enter
sub
xchg
lcall
bound
movsl
test
loopne
dec
stc
js
ss
mov
cltd
fsubr
div
je
call
jp
jmp
dec
sarb
sub
cmp
xor
push
test
and
cmp
mov
mov
xchg
push
sbb
into
adc
jge
adc
subb
inc
jmp
sbbb
hlt
push
mov
or
jecxz
xorl
inc
or
or
sub
jne
jnp
fbstp
in
pop
pop
sbb
sub
xor
jmp
inc
call
push
mov
mov
mov
jne
psrld
imul
jne
imul
inc
jl
shll
cmp
pop
mov
xchg
sbbb
xchg
insl
pop
cmpsb
jno
push
mov
sbb
push
sub
test
mov
dec
sbb
pop
adcl
imul
xor
jns
repnz
icebp
sbbl
inc
int3
and
fistpll
mov
fwait
cmpsb
adc
inc
xor
cmp
out
dec
sar
lret
sbbb
jge
add
fisttpl
xor
lods
mov
aad
cwtl
mov
fbstp
es
sti
dec
addb
dec
loopne
gs
inc
imul
pop
pop
and
into
add
jns
js
jo
int3
pusha
sbbb
pushf
fdiv
or
lods
dec
std
cmc
cmp
and
shl
mov
pushf
jo
std
iret
dec
mov
mov
call
mov
push
loopne
loopne
jae
mov
sbb
lret
jb
pop
cmp
hlt
sbb
dec
sbb
loop
sarb
out
loop
mov
fdiv
push
xchg
hlt
andl
pop
ret
jmp
jmp
jecxz
lds
push
mov
push
jnp
or
jp
xchg
in
add
and
lret
loopne
test
dec
lahf
or
ljmp
and
sub
mov
fidivrs
iret
cmc
cld
or
adc
adcb
push
loop
arpl
aam
shl
into
cli
in
cltd
stos
ja
shlb
ret
lret
push
aam
mov
ljmp
sub
cmp
pop
dec
dec
iret
mov
out
dec
sub
or
out
ret
lds
repz
std
out
dec
adc
data16
add
lea
fildl
shrl
mov
inc
repnz
mov
in
dec
xlat
add
jb
test
loop
lods
outsl
cmp
maxps
popf
in
lods
out
shlb
add
or
add
inc
stos
shrd
out
cli
push
add
ss
push
sahf
es
cmp
push
mov
push
lds
lea
out
lea
dec
aas
cmp
pop
add
xor
gs
repnz
xchg
push
xor
repnz
enter
stc
daa
outsb
pop
pop
outsl
pop
pop
outsl
repnz
pop
stos
js
inc
fstp
rorb
popf
dec
jne
jp
jecxz
jl
push
xchg
pop
clc
shll
cltd
cmp
fnsave
push
and
fmuls
mov
jecxz
movsl
add
lds
fnstsw
pop
outsl
mov
xchg
add
and
push
mov
mov
jb
jp
adc
mov
cmp
xchg
jnp
cmp
aaa
data16
testb
xchg
push
dec
aaa
scas
outsb
pushf
mov
add
xor
cmp
cwtl
lcall
or
pop
push
add
les
pop
in
mov
orb
int3
fdivs
testl
push
popa
js
xor
aam
mov
neg
ss
and
cs
imul
add
mov
cmp
sbb
inc
push
outsb
pop
jo
inc
jmp
arpl
sub
adcl
int3
pushf
sub
push
adc
shrl
cmp
sub
pop
daa
in
xlat
mov
popf
dec
movsb
fcoml
rcrl
add
xor
pop
pop
hlt
in
in
inc
mov
in
sub
stos
fiaddl
or
jg
gs
insl
aam
xor
sub
jo
cmpsb
lds
mov
popf
dec
gs
ljmp
mov
int
push
mov
mov
adc
lret
js
lret
xchg
and
push
cli
cmc
icebp
mov
ret
clc
jle
bound
loop
subl
jne
lcall
push
gs
inc
daa
sub
lods
mov
jmp
in
cmp
repz
repz
loopne
xchg
push
aaa
daa
jo
data16
sbb
clc
mov
and
mov
in
inc
cli
push
outsl
loop
mov
out
add
popf
jl
jno
inc
jl
js
mov
sub
mov
repnz
das
adc
lret
push
cmp
fbstp
adc
sbb
movd
cmp
popf
pop
fnstenv
jo
fnstsw
xchg
cltd
jmp
push
push
lods
fidivrs
jae
dec
aaa
and
incl
mov
push
out
push
cli
loope
inc
push
mov
mov
dec
out
jae
adc
out
mov
jb
jbe
cmpsl
mov
sbb
lods
push
dec
bound
and
ret
rorl
mov
or
int3
out
bound
sub
sbb
jecxz
mov
in
push
lods
mov
pop
out
stc
jbe
push
push
push
jmp
adc
lret
cmpl
int
inc
icebp
fdivrl
mov
xchg
scas
ror
sbb
fldl
lret
push
mov
or
pop
leave
mov
jp
rolb
mov
cmpsb
inc
sar
cld
mov
push
jle
xchg
xlat
sub
repz
cltd
cs
push
cmp
aas
stos
cmp
addr16
xchg
mov
and
pop
inc
les
pop
mov
inc
sbb
mov
mov
jo
add
lcall
cmc
ret
sbb
add
mov
push
loope
test
aas
adc
adc
daa
mov
in
push
mov
lret
push
and
and
lret
bound
fwait
inc
mull
sbb
rcrb
or
ret
or
mov
push
fnsave
push
enter
loopne
jae
fidivs
jae
cld
stos
sbb
xorb
jbe
popf
mov
out
inc
add
cmp
dec
jb
daa
pop
pushf
add
adc
add
aas
movsb
mov
jle
std
push
jne
sub
test
inc
mov
mov
mov
xor
ja
mov
outsl
xlat
push
inc
loop
cmpb
lahf
lock
int
mov
outsb
lds
mov
jmp
inc
into
push
adcb
push
pushf
outsl
cmpsb
lret
xchg
jae
jns
dec
push
push
or
testl
mov
iret
insl
push
mov
lds
pop
xchg
push
xchg
cmp
movsb
mov
daa
scas
jl
pop
in
dec
repz
hlt
and
int3
rcr
fidivrs
in
nop
pop
stos
addl
jb
or
adc
sub
into
and
adc
lcall
sbb
mov
push
cli
xor
lds
pop
pushf
decb
in
in
jb
mov
xor
and
mov
pop
mov
movsb
out
xchg
test
jne
mov
shrb
fldl
and
jecxz
push
test
lods
add
ret
sub
pusha
pop
and
push
nop
les
daa
fwait
adc
push
mov
pusha
mov
imul
jecxz
cmp
or
jmp
push
sysret
loope
mov
xor
mov
push
pushf
xor
fcmovnb
lret
dec
mov
mov
testl
jge
into
jl
addr16
push
adc
fwait
shufps
ficompl
daa
mov
mov
dec
lret
fs
adc
icebp
push
jmp
mov
xchg
mov
add
push
out
mov
mov
cmpsb
stos
add
or
lahf
push
xchg
outsl
jo
popa
mov
sub
xchg
pop
jge
jl
cmpsb
add
mov
lcall
and
mov
test
inc
pop
xchg
movsl
lds
js
in
cld
divl
and
popf
mov
add
gs
xor
jnp
push
aam
sub
in
mov
adc
arpl
sub
les
sub
mov
mov
push
inc
scas
pop
hlt
push
jl
cmp
dec
sahf
inc
pop
and
popf
pop
rclb
loope
cmp
jmp
add
pop
and
test
xor
and
aaa
inc
xor
sub
das
mov
fwait
jecxz
push
jmp
push
scas
call
inc
adc
add
sub
fbstp
xor
sub
push
cld
jle
inc
cmc
aaa
sbb
repz
push
popf
test
loop,pn
inc
mov
xchg
mov
pop
mov
jne
mov
inc
xor
vshufps
icebp
mov
lret
jne
pop
js
lahf
test
jne
mov
mov
arpl
mov
push
test
jmp
jns
push
les
xor
fbld
in
imul
xor
subl
js
xor
fstl
daa
nop
sbb
push
adc
notb
outsl
testb
nop
pop
out
fcmovu
in
arpl
lret
pop
scas
jae
add
add
jb
stos
pop
outsl
sub
int
mov
mov
jbe
call
dec
push
pop
movsb
adc
xchg
jmp
movsb
fldenv
js
movsl
push
lcall
enter
add
mov
mov
and
jecxz
addr16
adc
dec
cmp
lahf
inc
daa
lods
jmp
xchg
or
xor
es
or
out
cltd
jmp
repnz
dec
outsb
pushl
pop
jp
daa
or
jg
dec
xchg
push
mov
inc
dec
pop
bndldx
or
lock
cli
mov
leave
or
push
push
dec
out
or
add
scas
dec
test
test
cmpsl
insb
mov
lcall
fcoms
fdivs
loopne
in
lahf
mov
inc
cmp
cmp
test
sub
movsl
mov
add
add
call
mov
sahf
clc
lahf
sub
test
stos
loope
inc
outsb
cmp
or
clc
push
shl
push
mov
push
or
fmuls
test
test
out
adc
mov
lret
xchg
dec
inc
jns
pushf
xor
xor
inc
enter
aad
jl
imul
sarb
scas
sub
sbb
mov
pop
xchg
xchg
and
mov
cli
mov
dec
adc
push
in
cs
jecxz
repz
insl
dec
fidivl
sub
fnstenv
mull
lods
or
cmp
jb
test
sbb
xchg
and
dec
jp
mov
xlat
mov
mul
push
sbb
pop
or
rcrb
mov
mov
ljmp
das
jl
pushf
jo
cmc
sub
lods
pop
dec
rcrb
addr16
jg
and
ss
movsl
cmpsl
mov
fstpt
add
inc
maxps
shl
xchg
push
jne
sbb
xor
and
stos
fildll
stc
fwait
xchg
add
aas
lods
push
imul
mov
mov
adc
add
fmuls
or
xor
jns
popa
add
sbb
jle
and
mov
pop
out
mov
enter
jl
fistps
aam
fadds
out
jae
fisubl
inc
and
decl
jecxz
or
shl
andl
or
jecxz
out
outsb
sbb
jle
jl
lahf
mov
loope
data16
into
test
aas
es
mov
cli
mov
shrb
aam
mov
xor
hlt
pop
jecxz
clc
adc
icebp
or
lods
test
mov
popa
fisubrl
add
cltd
in
inc
fs
cs
loope
pop
mov
fs
jmp
xlat
push
sahf
inc
push
xor
in
rorb
out
je
add
mov
bound
adc
sub
cltd
lods
out
add
pop
xlat
sbb
outsb
sub
sub
incb
mov
and
inc
pop
leave
lahf
jl
xor
push
mov
jecxz
fdivrs
lret
int3
adc
adc
or
das
out
sub
ret
and
sub
cmp
inc
mov
inc
aaa
inc
or
in
push
lahf
shll
mov
mov
lods
push
outsb
dec
popf
cltd
jnp
dec
add
je
cmp
es
lcall
cwtl
jae
mov
jne
xor
sub
emms
or
rorb
jo
imul
iret
imul
repnz
pushf
pop
out
and
rcl
cwtl
jno
add
xchg
ss
popa
loopne
cmp
imul
pop
jae
sbb
test
mov
adc
inc
sub
fmull
adc
cmpsl
ficomps
daa
mov
pushl
dec
cltd
xor
sub
add
adcl
std
mov
test
jmp
inc
addr16
loopne
push
dec
or
inc
mov
mov
icebp
sbb
imull
lock
or
cmp
cli
jg
push
pop
loop
push
shlb
add
or
test
adc
enter
inc
push
into
mov
xor
bound
imul
xor
inc
xor
push
mov
jle
xchg
fcmovnbe
mov
mov
push
inc
stos
mov
into
mov
sbb
push
in
enter
data16
pop
push
cmp
lahf
push
cmc
mov
in
dec
in
adc
xor
push
mov
in
mov
inc
stos
cmpl
inc
adc
fistps
fimuls
adc
push
lcall
xchg
scas
mov
push
ljmp
pop
insb
jno
mov
ret
jp
nop
out
xchg
xchg
data16
bnd
loop
pop
mov
lcall
add
outsl
fdivrl
pushf
dec
mov
add
out
ret
inc
mov
ret
pop
inc
movsb
push
mov
sbb
mov
and
ss
sub
stos
mov
dec
popa
cltd
xchg
scas
xchg
adcb
addr16
add
shll
pop
adc
mov
pop
adc
fucom
in
rcrb
scas
fwait
jae
and
rol
mov
or
stos
or
lods
mov
movsb
pusha
xor
mov
mov
scas
addr16
mov
in
ficoms
add
lret
add
xor
icebp
sub
sbb
adc
fisubs
dec
ret
lods
xor
scas
jge
add
dec
aad
popa
xchg
jne
sbb
lods
jmp
add
inc
push
sub
push
jno
xchg
pop
mov
pusha
fwait
and
xchg
jbe
xor
sbb
mov
or
sub
sbb
in
sub
and
add
decl
cmc
jns
movsl
adc
sub
rorl
push
imull
push
mov
adc
push
xchg
int
push
ja
mov
inc
lea
xchg
push
push
inc
cmp
out
insl
mov
push
sub
movsl
mov
ss
mov
or
shll
dec
test
cli
push
mov
repz
nop
mov
int3
jb
cltd
mov
or
mov
ror
fidivs
adc
divb
enter
inc
xchg
cmp
es
inc
mov
test
xchg
or
nop
int
jmp
and
cmc
cmp
push
push
das
dec
test
stos
push
pop
jne
push
mov
inc
sub
testb
cmpsb
ljmp
out
ljmp
push
icebp
pusha
into
mov
add
xchg
imul
paddq
adcl
cld
fistps
jg
push
xor
lock
add
bound
rdpmc
sti
shrb
jmp
xor
lea
inc
cmp
loopne
jecxz
inc
arpl
cmp
das
subl
inc
jmp
or
inc
xchg
jns
cmc
int
cmc
stos
movsb
mov
shll
repnz
test
cmp
xchg
cmp
data16
cmp
adcb
dec
sub
jae
cmp
sahf
inc
mov
loopne
adc
dec
adcl
loope
jnp
xchg
daa
xchg
lcall
ds
nop
insl
xchg
mov
sbb
lds
loope
mov
or
movsl
mov
sar
repz
cmpl
push
fisubs
adc
ret
mov
dec
imul
and
insl
and
mov
cmpsb
adcb
andl
pop
mov
arpl
dec
negb
mull
and
orb
addl
loope
mov
out
sub
mov
stos
ss
jmp
jo
mov
cld
pop
rcrb
mov
cmp
mov
xor
addb
mov
mov
dec
and
mov
rolb
in
fcoms
scas
push
cmpsl
mov
pop
lcall
xchg
rclb
inc
mov
out
ret
in
sub
int
dec
jp
int3
mov
push
adc
scas
mov
pop
xchg
into
rolb
adc
dec
sbb
sub
hlt
pop
cmp
jmp
jl
lret
lret
mov
dec
movhps
push
mov
fs
movsb
jae
pusha
mov
dec
nop
xchg
fisttpl
mov
in
jne
leave
movsl
mov
test
add
in
mov
dec
cs
iret
xor
cmp
add
cmp
lea
xchg
dec
push
cmp
notw
adc
lret
xor
ret
call
push
loopne
sbbb
jns
cmp
into
das
sbb
sub
mov
cs
mov
dec
lahf
lcall
mov
xchg
dec
insl
adc
mov
xor
aas
jle,pn
lds
xor
adc
mov
int
and
loope
pop
ficoms
jb
jo
adc
aaa
mov
dec
popl
cld
ds
lods
cmp
je
stc
add
mov
xor
imul
mov
aaa
cmpsb
movl
xchg
in
in
imul
xchg
jo
push
fstps
inc
fdivrl
stos
in
sub
inc
jns
jno
pop
pop
ljmp
andl
pop
clc
adc
xchg
jge
imulb
daa
cmpsb
repz
repnz
add
rcr
imull
adc
sahf
or
std
xchg
je
imul
hlt
mov
jl
adc
je
push
sub
pop
jl
sbb
aaa
inc
out
xchg
xchg
sbb
rol
aad
mov
fimull
mov
add
repz
clc
mov
lret
stos
sub
repz
add
and
push
daa
jae
and
and
adc
adc
adc
jmp
sub
sti
push
jns
ret
jle
daa
sbb
mov
fimuls
mov
adc
jne
cmpsl
mov
cli
push
shrl
loopne
popa
int
sti
repz
rclb
aam
imul
jge
mov
cld
enter
out
ret
imul
sub
in
arpl
and
mov
out
and
mov
ljmp
adc
sub
insb
aaa
mov
arpl
xor
cmp
hlt
adc
xorl
xchg
test
xchg
pop
icebp
push
mov
rcrb
out
xor
sub
mov
das
xchg
orl
out
cwtl
ret
xchg
xor
push
adc
ret
jge
daa
rorl
out
xchg
sub
rcr
push
cmovb
outsb
call
pop
dec
leave
in
add
int3
call
shlb
push
cmp
mov
popa
mov
movzbl
cmp
mov
mov
cmp
repz
xchg
mov
push
or
enter
inc
jno
cmc
aam
add
xchg
inc
xor
sarb
bound
dec
push
mov
mov
into
in
fistl
jno
pop
pop
pop
jnp
mov
mov
imul
xchg
xor
dec
fsubl
sub
dec
jnp
orb
test
cmp
fistpl
push
or
or
idivl
outsl
test
jns
dec
imul
icebp
cltd
mov
scas
xchg
and
jge
inc
xor
outsl
jg
add
pop
shlb
clc
sbb
mov
push
shl
sub
fsubrs
das
mov
iret
inc
mov
mov
push
sar
xchg
rcrb
sti
loope
sub
subl
dec
dec
testb
push
mov
lret
fisttpl
xor
xor
jmp
push
sbb
dec
cmp
push
orb
mov
in
or
jae
iret
lahf
inc
xchg
icebp
iret
cmc
lods
jg
pusha
cmpsb
loop
mov
jae
lock
cmp
add
push
or
jae
mov
cmp
ret
cmp
les
mov
out
out
popa
fbstp
xor
ljmp
lds
repnz
jo
pop
lea
cmp
fs
cli
popf
lods
aad
inc
int
xor
out
insb
and
push
pop
push
mov
ja
in
xchg
imul
fcmovbe
bound
test
inc
ret
pop
push
pop
and
jmp
sub
stos
in
pop
repnz
rolb
in
add
inc
bound
loop
xor
cmpb
scas
or
jnp
mov
aas
sub
int
adc
lcall
jge
jns
roll
dec
push
shlb
aas
mov
popf
push
ss
jg
hlt
lcall
xchg
jno
mov
outsl
ja
popf
les
inc
in
scas
adc
ret
insb
jp
xor
adc
into
jl
aam
stos
mov
into
push
inc
pop
ja
loope
xchg
mov
fiadds
lock
push
and
shrl
sub
mov
sbb
loop
loope
xchg
dec
imul
adc
dec
sahf
hlt
push
out
call
cmp
sbb
push
jle
inc
xor
or
dec
int3
pusha
dec
cmp
adc
add
insl
inc
xor
sub
push
cld
adc
loope
scas
ficoms
out
push
mov
je
rcrb
dec
xchg
call
sub
mov
movsl
xchg
push
xchg
jp
int
pop
push
and
daa
dec
cmpsb
add
sub
movsl
mov
lock
inc
xor
or
sub
mov
out
hlt
clc
xor
dec
lods
push
cmc
clc
bound
jge
jl
xor
js
iret
or
fld
push
adc
loope
cwtl
out
dec
adc
fnstcw
add
pop
and
test
jp
xchg
repnz
jns
inc
es
push
xchg
loope
sbb
pop
dec
mov
sbb
test
call
push
repz
out
sub
inc
mov
loop
mov
pop
xchg
gs
nop
daa
pop
aas
roll
loope
cltd
jmp
and
inc
and
mov
or
out
inc
orb
xlat
push
lea
lcallw
mov
jb
loope
or
cmc
push
or
mov
mov
incb
lock
xchg
jge
mov
add
test
mov
push
push
js
adc
lcall
sbb
mov
rorl
test
stos
enter
adc
test
adc
inc
mov
dec
gs
push
pop
xchg
lahf
jno
test
mov
lock
mov
push
out
cmp
push
push
jge
pop
sarb
int3
mov
and
lea
sub
adc
cmp
in
imul
test
int3
xor
xor
cli
cmp
lods
fwait
in
out
into
inc
mov
cmc
cmpsl
mov
das
mov
and
jno
jnp
add
pop
xchg
push
jns
push
push
cltd
cs
fidivs
or
jecxz
jbe
bound
mov
sub
into
sbb
jb
fwait
scas
shll
sub
out
and
add
or
ds
mov
mov
loopne
dec
ss
icebp
mov
jecxz
out
xor
cwtl
pop
insb
add
cmc
dec
fsubrl
lahf
push
mov
xchg
pop
sub
mov
xchg
mov
pop
sub
xchg
lods
xchg
pop
adc
test
insb
cld
addr16
sbb
adc
int
orb
dec
icebp
es
subl
loop
add
stos
pop
mov
adc
push
rorl
sub
lea
or
inc
in
adc
jg
hlt
scas
mov
fdivl
test
stos
xchg
xor
pushf
and
push
dec
out
stos
push
add
dec
lret
stc
sahf
xchg
cs
rclb
clc
cli
fs
adc
push
test
lret
jnp
fistps
loope
sbb
mov
dec
sahf
mov
push
inc
dec
or
adc
or
adc
mov
pop
jne
lock
mov
fcmovnbe
fsubr
ss
mov
push
mov
sbb
adc
dec
jae
loopne
cld
sarl
mov
fucomp
andb
stc
push
gs
imul
bound
or
add
pop
sub
sbb
inc
or
movsl
jmp
lret
jmp
adc
das
sub
push
pushf
push
loopne
test
outsb
mov
push
imul
les
ljmp
sub
inc
dec
dec
sarl
xor
and
cmp
jge
scas
sub
repz
or
fisubl
lcall
test
push
and
jb
hlt
lea
mov
add
repz
pop
push
and
rcl
lods
dec
jle
rcl
push
push
lock
mov
jo
ja
jle
mov
or
dec
rcrb
sub
xchg
sqrtps
out
cmpsl
adc
insb
sbb
imul
and
xchg
jo
inc
jmp
lcall
fsubl
sti
push
pop
popf
mov
push
test
lea
fwait
mov
jmp
sbb
xchg
sbb
sub
and
cwtl
adcl
pop
fisttpl
adc
and
and
ffree
sahf
repnz
leave
mov
jge
mov
mov
xor
dec
and
out
test
cltd
dec
or
mov
and
sbb
mov
scas
in
mov
inc
mov
cwtl
iret
cli
stc
push
scas
ds
shlb
fimuls
pop
mov
xchg
in
shll
jae
dec
sub
movsl
int3
sub
cwtl
push
ror
sub
jb
jne
fcmovnbe
pop
mov
add
mov
inc
bound
push
mov
sbb
adc
sbb
xchg
sbb
or
cwtl
or
dec
pop
stos
jle
into
pop
or
fisttpll
xchg
jecxz
ja
pusha
repz
adc
repz
pop
mov
cmpsl
push
push
jae
rcrl
daa
sti
sbb
jg
mov
inc
cmc
iret
push
xchg
xor
das
les
cmp
mov
shlb
arpl
ljmp
adc
test
sti
push
idivl
stos
mov
outsb
dec
bound
cmp
dec
cltd
adc
and
sbb
insb
mov
fwait
es
imul
cmc
mul
shll
in
add
inc
pusha
adc
add
inc
shl
jo
addl
iret
repz
outsl
or
sub
arpl
sahf
inc
pop
push
pop
lret
mov
push
xchg
xchg
testb
push
sahf
xchg
outsb
dec
in
inc
adc
add
push
push
add
fcoms
and
xor
lock
push
adc
mov
dec
and
in
test
into
inc
aaa
loop
je
aad
aas
pop
fldt
bound
push
fs
out
fldenv
or
pop
inc
sbb
adc
int
dec
jo
mov
scas
popf
xor
mov
and
je
fs
dec
sti
xchg
imul
sub
cmp
rcrl
inc
jae
mov
dec
out
rcpps
xor
decl
jecxz
mov
notb
loopne
mov
movsb
pop
outsl
rclb
mov
jp
imul
cmpl
rolb
test
lock
loopne
xor
stos
inc
test
xchg
sahf
jae
mov
inc
mov
mov
xorl
cli
push
data16
adc
into
imul
roll
adc
jge
outsl
mov
clc
mov
cmp
ja
adc
pop
cmp
xor
add
test
pusha
lea
call
std
push
jo
pop
push
aam
nop
lret
xor
loopne
jb
cmpsb
adc
daa
test
and
stos
loopne
sub
int
pop
cli
cmp
xor
lock
jbe
mov
stos
sub
push
lret
push
imul
stos
cs
add
movsl
add
push
in
imul
cmp
and
inc
shlb
fldl
out
xchg
jl
rolb
test
fsubl
cmp
mov
adc
xchg
jns
mov
mov
stos
and
loop
jnp
scas
loopne
mov
inc
popf
sahf
and
movl
addr16
lock
xchg
aad
sub
push
shll
and
rcrl
or
insl
js
outsl
xchg
in
and
je
push
ja
addr16
push
inc
stc
adc
fistpll
int
lcall
push
jl
dec
sbb
or
test
sbb
mov
mov
test
cmp
jp
int
lock
clc
jbe
push
test
inc
lret
ret
imul
dec
das
icebp
mov
mov
fldcw
addr16
cmpsl
push
jo
bound
fists
mov
ds
pop
fidivrl
popf
sub
xor
dec
subb
int
dec
pushf
xchg
pop
xchg
mov
mov
sti
and
adc
cmpsl
inc
faddl
adc
pop
mov
jo
sar
int3
ljmp
fsubs
pop
lahf
imul
call
sbb
and
js
dec
adc
repnz
imul
pop
int3
xor
cmpsb
gs
jge
in
xor
cmpb
pop
inc
mov
cwtl
cmp
dec
xor
adc
subl
mov
shll
or
xchg
mov
or
xor
mov
call
xchg
jbe
pop
enter
loopne
or
mov
sub
mov
fidivrl
pop
imul
push
mov
hlt
pop
lods
leave
popf
add
mov
call
jmp
arpl
jo
cwtl
notl
subl
inc
mov
jg
add
and
les
cli
pop
mov
mov
xchg
fstpt
dec
pop
xchg
test
dec
xor
xor
movsb
jne
jge
movsb
repz
cmp
cmpsl
test
push
inc
cmp
jne
std
xchg
sarl
in
dec
push
mov
imul
adc
push
inc
lea
int
push
int3
or
movsb
xchg
sbb
cld
jno
jns
ret
and
ret
les
and
outsb
xchg
sub
push
adc
mov
cs
cmpsl
ret
bound
out
jmp
rclb
loop
sub
jae
mov
cmpsb
jle
enter
adc
shll
push
stos
hlt
mov
outsl
test
fcmovnb
test
movsl
push
ret
shlb
in
push
call
cmp
xorb
lds
xorb
mov
lea
jecxz
inc
xchg
dec
and
cmp
xchg
jns
lahf
and
jae
add
pop
cmp
jl
mov
insb
push
and
popf
push
pop
mov
shl
int3
cmp
xor
hlt
idivb
cltd
test
hlt
inc
out
aad
pop
xchg
jbe
sub
fmull
ds
cli
sub
inc
sbb
xlat
wrmsr
or
xchg
dec
push
cmp
pop
xchg
add
cmp
cwtl
push
xchg
divl
aad
dec
or
push
inc
and
cmp
test
xor
repz
mov
jae
fwait
and
aaa
adc
cwtl
xor
mov
int
jp
out
add
fldl
add
xor
lahf
xchg
aad
ljmp
xchg
pop
fadds
jp
dec
repnz
add
andl
push
add
jae
ret
mov
sbb
sahf
mov
shl
sub
add
dec
pop
fwait
test
fldenv
loopne
insb
loopne
movsb
sbb
pop
add
loopne
xlat
cwtl
fsubs
and
dec
lret
sub
bound
and
bound
push
mov
and
es
sub
cmpsb
packsswb
popf
mov
xor
aad
jnp
cmp
add
xor
xchg
cmpsl
xchg
sub
ljmp
xchg
mov
sti
ja
jo
js
fld
xor
inc
rolb
jne
jp
or
pop
xchg
lods
pop
cmp
jo
pop
or
movsb
les
pop
mov
daa
fwait
mov
and
addr16
jno,pt
push
push
add
pop
cli
aas
popf
inc
cltd
out
mov
adc
push
dec
hlt
subl
mov
and
pop
stos
jno
aad
out
outsb
movsl
imul
mov
ret
dec
mov
mov
sahf
insb
aad
fsubs
xor
jb
sbb
int3
push
jl
inc
mov
push
imul
sbb
jns
cwtl
fidivrl
cwtl
push
jnp
and
push
cwtl
nop
test
push
xchg
gs
daa
xchg
in
sbb
mov
lock
out
pop
daa
jmp
dec
xor
sti
push
xchg
test
mov
sbb
ljmp
ret
sub
pushf
into
push
pusha
add
mov
mov
es
push
sub
xor
mov
sti
scas
stos
cwtl
out
scas
in
push
pop
mov
test
rcl
sbb
push
rcrl
das
pop
frstor
xrelease
ret
in
clc
mov
inc
insb
mov
mov
iret
ja
loopne
and
push
mov
sub
cmpsb
cmp
xor
xorb
jb
mov
xorl
sbb
xor
mov
stos
push
out
pop
repz
mov
mov
fs
lock
stc
mov
ret
mov
ret
or
lahf
add
jno
fsubr
push
push
aas
jns
adc
mov
lahf
inc
scas
imul
or
add
jo
iret
mov
xchg
xor
mov
pop
push
sti
inc
mov
out
lcall
push
and
cmpsl
test
scas
leave
sbb
pop
test
inc
sbb
xor
and
dec
shrb
jl
jle
adc
dec
movsl
jns
and
cmpl
xchg
pop
jb
adc
ja
es
fisttps
popa
mov
out
lret
jae
sbb
loopne
pop
mov
add
push
or
hlt
or
in
mov
pop
shlb
aaa
sub
push
or
sub
jp
pop
icebp
scas
cli
loope
sar
jecxz
out
xor
and
rcr
and
mov
cmp
jne
cltd
and
pop
out
jno
xor
push
inc
insb
jae
adc
stos
mov
in
outsl
addps
cmp
push
test
inc
in
and
push
call
in
icebp
push
jl
adc
pop
movsb
dec
xchg
adc
inc
cmpsl
cs
mov
int3
ljmp
shl
xor
mov
dec
dec
jecxz
pop
pushf
sbb
sub
sbb
sti
lock
out
mov
push
fwait
in
xor
insb
mov
ret
pushf
pop
xor
mov
dec
push
int
por
daa
shl
xor
xor
fdivrl
movsb
cld
daa
cmp
mov
in
xchg
cmp
jo
sbb
sbb
lock
adc
mov
mov
ret
push
not
push
aas
and
or
inc
fwait
out
cld
insl
dec
loop
push
aaa
dec
stc
cli
push
pushf
outsb
js
loop
cmpb
sbb
sub
test
ret
lret
xchg
xchg
test
adc
jp
cs
mov
lods
cmpsb
mov
or
mov
sub
pop
sbb
call
loop
sbb
pop
lock
and
mov
in
dec
hlt
daa
inc
repz
and
jmp
mov
fcmovnbe
xchg
sahf
adc
pusha
push
scas
sub
cs
stos
adc
add
push
xchg
mov
rclb
xor
in
cli
pop
jl
and
mov
ss
aad
je
cmp
xchg
sbb
push
mov
mov
fidivl
mov
out
fs
pop
repz
mov
ja
aas
repnz
inc
das
cltd
hlt
ss
jmp
adc
mov
mov
push
xchg
sbb
in
push
cmc
push
std
imul
mov
cs
imul
test
pop
lahf
or
lret
adc
mov
cs
idivb
fdivl
fcoms
cmpsl
dec
sub
mov
js
add
shll
push
nop
jge
insl
sub
pop
pop
cmp
gs
mov
ror
test
shrb
out
pop
mov
or
pop
fs
mov
imul
fwait
sbb
sbb
dec
imul
ss
mov
xchg
daa
pop
in
ljmp
xchg
adc
xor
sbb
movsl
sti
inc
lods
pop
dec
cmp
bound
dec
push
cmp
fistpl
out
arpl
sub
mov
insb
push
xor
mov
xchg
arpl
ffree
xchg
add
dec
cltd
sub
cmp
ja
adc
or
push
add
inc
jo
jp
xchg
push
ds
sbb
in
test
mov
mov
ljmp
fldt
xor
adcl
jb
lret
test
cmc
push
daa
testl
rcll
or
xchg
enter
push
aaa
cmp
inc
imul
fadd
push
mov
dec
shrl
loope
pusha
insl
or
jnp
call
inc
popa
aam
and
xor
sbb
or
sub
or
fdivp
jnp
mov
clc
mull
dec
outsl
scas
sbb
cltd
icebp
mov
pop
xor
sahf
ljmp
xchg
mov
xlat
sbb
test
jp
cmpsb
pop
and
adc
mov
inc
mov
imull
xor
push
mov
adc
repz
jge
fcmovnbe
ret
mov
push
push
popa
xchg
sub
add
adc
pop
push
inc
negb
xchg
sahf
jecxz
lock
std
lahf
sub
cli
icebp
mov
jecxz
stc
mov
loop
jno
lock
push
push
inc
inc
add
sub
lcall
xor
xor
or
popf
dec
fimull
push
icebp
and
insb
sti
sbbb
fcoml
mov
sub
jbe
jnp
cwtl
outsl
es
dec
add
adc
scas
xor
or
movsl
sub
ljmp
push
inc
rolb
jge
hlt
stos
jg
inc
sbb
pop
shll
dec
je
push
sub
out
scas
iret
fwait
xchg
loop
ds
jecxz
je
cmpsb
xchg
mov
jbe
jge
xchg
xor
lahf
sbb
add
lock
and
xchg
and
jl
cwtl
adc
insl
iret
int3
out
lods
test
cs
rorl
aad
mov
gs
mov
idivl
add
jae
jne
or
jo
mov
xchg
dec
idiv
lods
sbb
lods
mov
mov
jmp
inc
inc
cmp
mov
jmp
mov
and
xchg
lods
sub
xor
inc
notl
pop
mov
addb
mov
sub
add
and
fsubr
pop
jb
hlt
aam
insl
out
cwtl
lock
jmp
and
cmp
xor
or
xor
mov
mov
sbb
outsb
into
add
mov
dec
out
fsubr
mov
inc
call
in
jmp
je
ds
or
bound
pop
jl
aaa
inc
push
adcl
xchg
or
test
or
fstpt
scas
rep
loopne
and
cmpsl
int
mov
or
mov
push
mov
xchg
cmpsl
jecxz
orl
lret
pop
fimull
enter
cltd
fs
jmp
sbb
mov
ret
les
loope
lret
lret
xchg
js
scas
and
adc
pusha
test
ja
ret
inc
sarb
xchg
stc
shlb
adc
std
outsb
sti
add
iret
dec
mov
push
aam
dec
and
xchg
jmp
xorl
inc
and
mov
xchg
cmp
enter
int3
ja
out
sub
rorb
pop
mov
pop
iret
inc
mov
push
or
adc
sbb
sbb
sub
xchg
std
fs
es
mov
cmc
xchg
xor
pop
stos
dec
push
stos
mov
inc
repz
sub
sub
jmp
sarb
mov
mov
loopne
insl
test
dec
sub
dec
pushf
loopne
testl
xchg
dec
ljmp
jne
push
fstl
arpl
aaa
mov
and
xlat
push
mov
sbb
ret
xchg
lahf
ds
loopne
add
xor
ja
or
cmc
push
aaa
push
push
sbb
pop
int
push
jae
jg
std
pushl
sub
rol
fcomps
or
cmp
or
and
and
mov
pop
into
lret
mov
pushw
out
mov
gs
lds
push
jbe
xchg
mov
jnp
mov
add
das
test
rorl
jmp
loope
out
test
lcall
xor
cltd
fists
ja
in
inc
sub
cmp
jbe
std
cmp
sub
test
cld
imul
out
xor
ja
mov
addb
lea
nop
xchg
and
xlat
mov
mov
xchg
fisubs
stos
push
push
sbb
xorb
insb
fstpl
jae
add
gs
adc
add
pop
xchg
shlb
test
fdivrl
adc
cmpsl
jne
iret
mov
xor
push
mov
sub
xchg
jp
xchg
ds
nop
dec
sub
push
and
fcompl
sbb
or
mull
adc
jno
or
dec
lods
imul
jl
pop
mov
fistl
ds
jae
insl
out
adcl
dec
fidivrl
mov
inc
jl
js
sub
jb
movsb
loope
mov
repz
repnz
jl
pop
or
lret
loop
jno
xchg
gs
out
push
mov
int3
pop
in
adc
push
and
push
in
pop
lahf
iret
mov
loope
mov
pop
adc
or
aas
mov
xchg
addr16
sarl
pop
or
jmp
lret
daa
jl
hlt
push
fists
jle
xor
loopne
inc
xchg
jmp
xor
mov
sub
push
rol
sub
mov
std
outsl
adc
int
xchg
and
jnp
push
sub
inc
aas
sti
jecxz
jns
mov
push
or
dec
mov
push
iret
enter
and
and
cmp
inc
gs
in
mov
lds
imulb
movb
int3
sub
cmp
fstps
and
jle
push
bound
push
rol
pop
mov
out
dec
push
test
mov
fstpl
cmpsl
les
les
mov
idivb
and
movsb
xor
out
daa
dec
test
jecxz
or
adc
and
lret
cmp
sbb
jle
fdivrl
pop
call
roll
outsb
push
pop
iret
pop
adc
sbb
cmp
inc
arpl
jno
xorl
dec
bound
pop
sub
int
popf
cli
jo
int
data16
lcall
jl
mov
adc
xor
roll
les
cmpl
decl
sbb
mov
mov
xchg
scas
fwait
aaa
jne
subb
cwtl
mov
add
and
inc
scas
cmc
mov
and
mov
shll
outsl
pop
mov
stos
pop
xchg
and
pop
dec
add
adc
std
test
daa
xchg
std
sbb
mov
xorl
call
add
jbe
adc
jle
shrl
dec
cmp
inc
cltd
hlt
es
ror
and
data16
mov
or
cli
inc
cmp
add
popa
outsb
xchg
invlpg
lret
mov
inc
scas
xchg
pop
stos
and
pop
adc
std
and
fnstsw
loopne
or
pop
mov
clc
jmp
fldcw
adc
scas
fnstsw
jo
leave
lea
lret
mov
cli
loop
mov
inc
loopne
incl
jnp
repz
frstor
mov
das
insl
pop
test
icebp
shlb
cmc
push
mov
xor
inc
sbb
inc
cmp
into
and
add
pop
xlat
in
sub
fucom
xchg
mov
add
in
ret
movb
fs
adc
jne
jmp
sub
xor
mov
fdivl
cmp
lock
fildl
out
pop
movsb
rcrl
inc
pop
mov
xor
flds
popf
cli
push
pop
fstpl
sbb
xchg
add
popf
ds
and
and
mov
js
lcall
xchg
lods
push
mov
jno
adc
ret
pusha
test
out
pop
adc
dec
mov
out
jno
loopne
sbb
inc
ja
int
aas
jp
jb
mov
ja
popf
shrl
xor
cld
shll
dec
ss
mov
daa
mov
dec
fwait
cmp
stos
xchg
inc
cmp
sbb
imul
idivb
and
lret
stc
mov
xor
sarl
sti
bound
addr16
test
add
les
les
inc
fdiv
cmp
inc
ret
cld
mov
lea
movlps
scas
decl
inc
mov
jmp
in
jno
in
add
xor
xchg
in
iret
sub
pcmpeqd
push
xorb
and
cmp
scas
jnp
test
pop
pop
sub
fcomps
xchg
sarb
aas
push
lds
cmc
loop
lret
sti
jne
in
js
insb
rcr
sub
icebp
jbe
inc
push
fwait
jl
cmp
adc
cwtl
inc
pop
pop
xchg
mov
xor
mov
movsb
pop
pop
push
mov
xorl
insb
rcrb
pop
or
sbb
fldcw
push
mov
enter
cmp
fbld
insl
nop
out
push
xchg
insl
jbe
je
xlat
push
fsubrs
fsubp
cmp
push
mov
jmp
cmp
insb
or
and
icebp
out
lcall
enter
push
sbb
stos
aam
out
call
inc
and
lea
shrd
push
cs
pop
xchg
cmpsb
and
inc
sub
test
mov
rcll
cmp
out
sbb
iret
popf
xor
adc
incl
mov
insb
dec
xlat
idivb
fists
insl
mov
mov
ss
cmpsb
add
jo
pop
loopne
xchg
mov
in
shrl
sbb
or
rolb
mov
inc
dec
outsb
push
cwtl
adc
sbb
loop
aad
out
iret
outsl
not
mulb
inc
inc
daa
outsb
dec
inc
gs
and
in
jne
roll
insl
inc
jp
mov
xchg
pop
sbb
sbb
sub
test
and
cmp
mov
enter
cmp
jo
xchg
loope
pop
mov
loop
test
stc
stos
push
adc
xor
and
call
aaa
mov
push
jmp
es
test
xor
lods
sub
add
nop
outsb
cmp
push
sbb
cmpsb
xchg
cmpb
clc
dec
rcl
mov
mov
js
jmp
mov
sbb
nop
std
lret
cld
cltd
push
outsb
ja
std
cmp
cld
sub
lods
inc
xchg
pop
sub
mov
nop
inc
out
pushf
or
pop
pop
add
jno
mov
push
push
jmp
int
lods
aas
mov
mov
mov
cmpsb
lret
pop
data16
push
cli
push
mov
fnstcw
lret
cmpsl
xchg
push
mov
movb
add
test
jg
xchg
fcoms
lea
mov
jl
out
fs
gs
push
push
adc
lea
mov
std
or
shll
mov
inc
mov
dec
movsl
jb
frndint
fs
ficomps
xchg
fbld
rclb
pop
scas
and
dec
jge
jno
xor
ficomps
jb
inc
push
mov
xchg
and
pop
inc
pop
sarl
pop
in
addb
and
sbb
push
mov
out
fisubrl
mov
in
inc
add
popf
fs
add
sub
cmpsb
sbb
sub
adc
adc
jmp
sbb
and
push
xchg
push
sub
mov
adc
mov
sub
fmul
mov
jg
pop
sbb
fbstp
dec
add
xchg
and
and
lret
bound
out
pop
or
dec
dec
adc
mov
sub
inc
test
out
mov
push
js
pop
adc
mov
arpl
and
mov
lahf
icebp
jecxz
addr16
fcmovne
pop
fidivrl
fcompl
xor
test
mov
mov
sti
pop
sub
cmp
imul
mov
addr16
nop
sub
fnstsw
popl
dec
adc
mov
mov
mov
push
xor
sar
loopne
push
or
sub
xchg
cmp
setb
stos
dec
dec
xor
cmp
cmc
push
dec
jp
inc
and
jbe,pn
cmp
and
lods
push
enter
js
fldcw
xchg
mulb
mov
in
pop
fildll
popa
test
inc
xor
lock
imul
inc
sti
testb
dec
inc
fcoml
les
cmpl
out
in
jge
cmp
sti
xchg
fimuls
xchg
fsubrl
aas
sbb
xchg
pop
out
add
in
xchg
xchg
cmp
lcall
xor
mov
test
xchg
js
pop
sbb
sub
loopne
xchg
andb
mov
adcb
cs
xchg
mov
jnp
mov
mov
adc
jmp
es
inc
fwait
sbb
sub
arpl
inc
aad
in
jle
ds
fnstcw
and
push
sbb
ret
cmpsb
add
dec
pop
cmp
push
push
fsubs
imul
arpl
pop
jecxz
fs
andl
xchg
das
inc
xlat
jg
mov
lods
lret
push
adc
rol
add
dec
ss
fildll
inc
pop
xchg
testb
shlb
inc
lret
repnz
sbb
sub
sub
scas
mov
pop
mov
mov
mov
jl
mov
sbb
xorb
leave
mov
xchg
in
cmp
stc
dec
repnz
imul
pop
fldt
stc
scas
dec
jnp
mov
xchg
aaa
insb
bswap
inc
push
sub
xor
lret
test
lods
insb
ret
roll
and
jne
fstpl
cli
aaa
pop
jb
cmp
negb
fsubrl
out
outsl
and
imul
inc
cmp
xchg
out
xchg
pop
sub
jns
lret
es
cmpsl
mov
arpl
mov
adc
insb
fsubs
out
jae
mov
inc
pop
mov
stos
jae
pop
daa
into
aaa
sub
jmp
xor
and
enter
insb
xchg
mov
sti
mov
imul
jge
lock
stc
sub
push
dec
sub
incl
mov
add
repz
ret
pop
xor
out
cltd
lea
inc
imul
inc
es
pushw
sbb
or
xchg
negl
hlt
jo
jb
sub
cmp
icebp
inc
rclb
mov
repz
jecxz
sub
jl
mov
test
in
mov
stos
popf
push
jmp
jae
imul
movsl
dec
xor
cs
and
addl
mov
fistpl
not
pop
fiadds
dec
mov
dec
xchg
in
cmpsb
cltd
lds
frstor
loope
into
xchg
mov
jno
scas
dec
jbe
adc
cmp
jbe
ret
dec
iret
lret
sbb
mov
imul
mov
xor
outsl
push
in
mov
lcall
fisttpl
xor
lahf
mov
add
mov
insb
lret
stos
aad
lret
mov
jnp
add
xchg
cwtl
cli
mov
pop
jnp
jo
inc
add
and
std
sub
dec
mov
mov
mov
rcrl
stc
sbb
jge
cmp
mov
inc
inc
cmpsb
test
adc
out
xchg
add
cwtl
sbb
fstpt
inc
ret
ret
xor
push
adc
mov
pop
pop
addr16
inc
roll
jp
pop
xchg
addb
fldcw
fcomps
adc
fsubs
jle
or
push
mov
ljmp
add
sub
cmp
out
jg
mov
subb
enter
dec
cmp
daa
mov
xor
rolb
ret
sbb
pop
aas
bound
push
aam
sti
and
mov
pop
insb
pop
jl
mov
cltd
sbb
xchg
inc
push
cmp
cmp
inc
xchg
fiadds
sbb
xor
or
ljmp
in
push
sub
paddb
fmull
add
jg
cs
cmp
mov
inc
cmp
push
sbb
sub
sar
xor
mov
xchg
push
cmp
invd
je
out
movsl
push
es
pop
sbb
movsl
sarb
fwait
add
cmc
push
sbb
leave
out
out
std
jle
jns
test
push
xlat
jmp
sub
fwait
cltd
push
loop
ficoms
ljmp
inc
rcll
in
xor
lods
inc
xchg
adcl
inc
mov
insl
ret
les
shlb
push
fistpll
addr16
inc
jmp
inc
push
nop
out
call
lods
dec
aas
enter
push
mov
rcrb
movsb
lcall
ja
and
aam
xchg
call
add
fs
and
pop
sbb
add
pop
add
movzwl
scas
mov
cmp
out
add
push
and
cs
out
mov
rorl
sbb
aas
mov
rorb
notl
adc
mov
mov
fisubrl
nop
incl
outsl
rcrb
ret
add
sub
pushf
jge
aaa
daa
scas
mov
xchg
pop
popf
iret
hlt
cld
jne
movsl
inc
cmpsb
mov
stc
sarb
dec
push
cmp
mov
mov
xchg
aad
fucomi
sti
mov
jbe
mov
and
sub
clc
lcall
and
or
push
push
rol
xchg
dec
pop
sbb
xchg
jns
push
add
ss
roll
test
sahf
into
and
lock
jbe
add
hlt
pop
int
mov
jns
imul
push
out
out
push
xor
addr16
sbb
push
pop
push
in
xchg
push
ficomps
pop
push
lds
int
fdivp
dec
pop
dec
adc
inc
insl
pop
mov
lahf
test
mov
in
pop
xor
jle
mov
sbb
insl
lahf
mov
jnp
nop
jg
xorl
cmp
pop
mov
add
inc
testl
stos
mov
imul
sbb
and
xor
rolb
std
lods
enter
cld
push
add
pop
mov
xchg
cmc
js
ss
inc
xlat
pop
xchg
imul
add
inc
in
sbb
sub
test
sahf
pop
cmpsb
xor
dec
jbe
bound
xlat
shlb
adc
jb
es
stc
mov
mov
das
and
fcmovbe
add
xor
mov
out
mov
in
sbb
push
dec
mov
push
in
mov
jne
leave
lock
mov
lock
add
ret
and
hlt
dec
inc
movsb
jp
mov
mov
adc
fisubl
cli
jge
and
pop
pop
loop
xchg
jl
fcompl
xor
jl
call
es
push
and
push
xorb
add
dec
mov
jp
xchg
mov
add
jb
cld
fnstcw
and
mov
jno
xchg
test
orb
push
ss
sbb
out
scas
xchg
iret
lds
mov
sbb
push
sbb
jle
inc
xchg
out
cmpl
sahf
cmp
loopne
loope
pop
lahf
or
jle
dec
lods
imul
cmp
out
cmp
imul
xor
and
das
mov
repz
jnp,pn
inc
fcmove
xchg
sub
xchg
or
xor
cwtl
add
in
loopne
lock
test
repz
mov
pusha
and
dec
repz
and
jae
orb
sbb
add
stos
test
stc
leave
or
cmp
xor
adc
xor
gs
pop
in
test
mov
adc
inc
adc
imul
rcl
dec
jp
jle
imul
or
xchg
adc
into
inc
ljmp
cltd
hlt
push
add
mov
scas
add
push
icebp
jb
adc
stos
call
insl
mov
add
xor
shll
dec
sub
xchg
pop
in
mov
test
call
and
cld
dec
iret
inc
test
std
dec
lods
pop
add
and
lret
xchg
out
or
sub
aaa
dec
aad
ljmp
insb
lahf
ret
or
faddl
arpl
push
notb
dec
inc
push
push
jmp
std
inc
scas
enter
fs
sahf
or
or
add
sbb
or
jmp
test
mov
in
jge
cmp
jae
xchg
inc
enter
imul
xchg
jge
or
xor
xor
jecxz
sub
stc
sbb
fistl
popf
dec
stos
dec
sub
mov
mov
dec
pop
dec
lcall
fs
shrb
aaa
mov
push
in
xor
gs
sbb
cmp
jle
xor
xor
enter
cmp
xor
adc
imul
cmpsl
pop
dec
lods
incb
ds
mov
cld
out
xlat
mov
imul
negl
inc
pusha
push
leave
mov
mov
loope
sahf
jb
mov
or
pop
idivl
mov
imul
jge
or
repz
adc
hlt
sbb
push
add
in
cltd
or
inc
lods
lods
push
and
or
rcrb
addr16
lahf
inc
push
lods
cmc
pop
jecxz
xor
xchg
xchg
insb
xchg
arpl
cmp
jo
cmpsb
mov
pushf
sahf
das
aaa
mov
mov
sbb
xchg
out
hlt
push
scas
data16
add
xchg
xor
das
cmp
ss
stos
xchg
inc
sbb
jecxz
mov
xchg
dec
ss
aas
loope
dec
fistpl
mov
xor
outsb
pop
icebp
cli
fmulp
test
in
mov
pop
xchg
mov
jmp
xchg
sbb
jmp
fucomp
arpl
dec
rcr
push
add
push
lahf
xor
jno
test
mov
push
jge
pop
insl
dec
xchg
xor
inc
and
xchg
adc
mov
push
lock
push
incb
icebp
push
pushf
and
into
stos
in
sbb
aas
mov
sub
mov
mov
dec
xchg
pop
pop
push
mov
lock
adc
inc
sbb
pop
push
icebp
add
cmp
outsl
ret
xchg
test
lock
lock
int
pop
stc
mov
dec
jmp
mov
fistl
out
cmp
mov
inc
push
movsl
insb
lret
mov
rol
js
iret
dec
mov
enter
jmp
adc
mov
addr16
cld
cmpsl
ds
addl
and
imul
mov
rolb
loope
jne
sub
jbe
sbb
pusha
sub
jmp
xchg
cmp
xchg
pop
xchg
sbb
std
iret
xor
scas
cmp
pop
icebp
sbb
testl
sub
mov
mov
loop
stos
popa
push
xor
lret
out
std
loope
inc
jns
mov
mov
popa
insl
test
xchg
or
gs
dec
repz
arpl
cmp
dec
enter
aaa
xchg
sub
push
mov
xchg
mov
sbb
fidivl
or
add
xchg
mov
mov
sbb
cmpb
and
lock
lods
xlat
sarb
jbe
mov
stos
stos
or
xchg
ss
mov
pop
pop
push
dec
pop
add
fs
and
rcrb
push
mov
lahf
hlt
push
mov
sahf
int3
mov
sub
jns
push
xchg
lcall
push
cmp
xor
adcb
dec
ret
or
sarl
inc
insl
cmpsb
repnz
fdivrs
je
in
lock
insl
xorl
jp
icebp
mov
dec
adc
mov
mov
in
pop
leave
pusha
push
sbb
arpl
jae
testb
insl
jmp
jno
cli
sti
mov
xor
int
sbb
pop
pop
rolb
mov
push
xchg
sub
mov
pop
leave
or
push
push
je
rorl
push
xchg
cmp
shll
jl
sbb
pop
out
stos
xor
out
outsl
lds
jbe
inc
outsb
xchg
rolb
cwtl
mov
int
jp
jmp
mov
fneni(8087
pop
mov
pusha
in
jp
pushf
call
jno
test
mov
mov
add
aaa
pop
les
adc
pop
rolb
xor
cmpsb
sbb
dec
nop
jg
inc
mov
xor
jecxz
rorl
imul
add
mov
xor
mov
push
inc
adc
mov
cld
push
cmp
pop
jge
leave
imul
les
fdivr
sbb
aas
in
shlb
push
fisubl
jbe
mov
lods
out
addb
or
test
jb
insb
test
incb
pushf
out
jns
cmc
psraw
xor
and
dec
push
dec
pop
pop
fisubs
in
push
flds
cmp
hlt
push
fwait
ss
add
push
or
daa
stos
jp
stos
add
xchg
lea
jo
icebp
sub
test
push
stos
in
out
mov
and
scas
cmc
icebp
jmp
ret
mov
xorl
jae
xlat
mov
adc
cmp
mov
inc
fsubs
arpl
int
and
mov
mov
dec
or
sub
mov
sub
lahf
mov
jecxz
add
push
pop
mov
push
pop
bound
repz
fiadds
fdivr
inc
ds
inc
and
cld
mov
cmpsb
movsb
out
popf
dec
lea
sub
roll
pop
arpl
jo
int3
pop
in
call
repnz
jbe
imul
cwtl
les
sbb
outsl
inc
jnp
and
xorl
scas
sub
mov
jge
out
jge
mov
pusha
adc
pop
pusha
or
add
out
into
enter
stos
add
jecxz
dec
and
movsl
and
pop
sbbb
mov
pop
jno
and
arpl
ljmp
pop
sbb
or
jbe
int3
xor
push
dec
add
jle
out
dec
or
adc
push
imul
loope
arpl
xor
es
aaa
dec
les
dec
inc
fwait
sbb
inc
loop
cmp
daa
push
sub
popf
or
ljmp
hlt
aam
jnp
pop
sub
inc
test
jo
out
shl
xor
out
aad
mov
or
cmp
test
hlt
sbb
add
xchg
inc
js
pop
jns
xor
subb
mov
jne
dec
or
push
out
pop
push
andb
inc
hlt
flds
inc
jo
into
pop
imull
aad
repz
int
mov
cmpsl
loop
mov
inc
pop
inc
xchg
mov
inc
sbbb
clc
mov
push
xchg
imul
idivb
in
mov
inc
xor
jo
inc
clc
pop
pop
mov
jmp
fistps
adc
inc
push
sbb
insb
dec
lahf
lods
cmp
aad
pop
dec
adc
inc
pusha
orl
mov
pop
push
sub
or
xor
movsl
push
xor
and
daa
dec
pop
sbb
ljmp
nop
cmp
push
scas
xlat
jl
movsl
jmp
push
pop
sbb
jp
jmp
xchg
enter
xchg
mov
pusha
shll
lods
lcall
stc
je
out
daa
stos
sub
and
and
cmpsl
in
inc
test
or
cmp
shll
es
mov
into
in
daa
push
cs
xlat
dec
mov
xchg
nop
push
fstpl
jnp
inc
lret
cli
adc
in
pop
outsb
hlt
ljmp
xor
push
push
jns
lcall
ljmp
outsb
push
sbb
out
push
or
clc
push
ret
jnp
xor
shll
or
jl
jb
add
pop
sbb
pop
fisubl
add
mov
pop
ss
addr16
imul
jp
xchg
jl
add
jne
xor
scas
xlat
lret
lret
mov
hlt
and
aas
or
sbb
stos
fstps
dec
cmp
push
pop
adc
mov
xor
mov
cmp
insl
lock
fld
cmp
xchg
je
mov
fdivl
and
popf
movsb
in
jae
sbb
dec
dec
add
xchg
mov
mov
or
xor
mov
mov
mov
lea
mov
cmpsb
mov
cwtl
mul
inc
int3
dec
sti
and
rcll
xchg
out
or
adc
or
divb
xlat
mov
jmp
push
adc
pop
pop
testb
int3
mov
xchg
cwtl
cmp
inc
fbld
and
pop
mov
adc
xchg
das
pop
add
fnstsw
lret
lret
inc
mov
sbbl
leave
in
inc
test
cwtl
mov
and
cld
rclb
das
lock
in
mov
push
dec
aaa
das
loop
push
push
cltd
push
ja
repnz
outsb
andb
cmp
sbb
cmp
mov
inc
sbb
shrb
pop
cmp
dec
dec
xchg
mov
pop
hlt
sub
pop
fwait
push
popw
mov
bound
fcmovnb
sub
and
mov
lret
jl
outsl
jg
mov
jns
fildl
movsl
mov
mov
mov
test
cmp
dec
xor
das
popf
lds
cld
cmc
jbe
mov
mov
inc
out
roll
cmp
push
pop
push
stos
and
repnz
pop
xchg
pop
lret
push
stos
sbb
sti
out
int
lock
cmp
xor
push
loopne
int
std
sahf
add
inc
js
pop
push
aaa
xchg
xchg
lahf
mov
int
testb
push
jae
int
add
mov
xchg
fstpt
xor
mov
lds
rcr
mov
jmp
xor
dec
mov
js
out
and
clc
jo
pop
push
adc
idivb
cmp
insl
iret
in
scas
mov
sbb
adc
data16
out
fsubl
xor
shrl
pushf
jg
in
int
sbb
loope
cmp
mov
mov
arpl
push
jns
mov
test
cwtl
outsb
rorl
xor
aam
mov
repnz
adc
pop
add
fs
xchg
dec
incb
jecxz
jno
pop
adc
icebp
dec
xor
push
stos
push
cmpl
movsb
dec
lret
in
dec
jecxz
add
jno
push
fucomip
in
push
mov
fwait
cmpsb
es
stos
fldt
ret
dec
xchg
hlt
jle
arpl
cli
jae
lea
pop
ljmp
fisubrs
hlt
scas
mov
aas
pop
xchg
and
or
repnz
cmpsl
std
push
add
pop
scas
dec
testl
sub
rcll
mov
jne
gs
mov
add
cmpb
jle
fs
pop
mov
or
clc
ror
xchg
and
out
les
and
xchg
jmp
sub
mov
mov
mov
jb
and
jg
inc
xchg
pop
lea
jne
xchg
jno
inc
and
dec
fcmovb
push
adc
inc
jg
idivb
ret
dec
and
fdivr
pop
lods
sub
loope
ret
pushf
xchg
mov
add
push
cmp
adc
and
inc
std
push
cmp
fisubrl
lret
inc
or
inc
mov
and
push
push
mov
add
sub
mull
jl
pop
test
or
or
mov
pop
dec
orl
loopne
sbb
mov
cs
inc
pop
xor
mov
test
in
ret
rcll
ret
or
push
sti
stos
or
stos
out
jg
lcall
out
jbe
inc
repnz
sarb
hlt
dec
xchg
ret
push
and
addr16
test
adc
mov
add
push
jp
stos
in
mov
and
sub
gs
add
popa
dec
add
cmp
and
out
into
mov
mov
sub
test
pushf
cwtl
mov
or
test
cmp
mov
jae
repnz
add
lods
xorb
out
fildll
pop
or
fwait
push
sbb
lds
sbb
test
push
dec
lret
std
push
or
sub
ret
add
ret
mov
sbb
lahf
cmpl
pushf
dec
xchg
pop
call
cmp
movsb
xor
sub
in
cmc
sarl
stos
inc
lock
jmp
add
addr16
hlt
pop
cmp
jl
add
mov
jg
adc
xchg
lea
test
loop
aad
jne,pn
add
ror
outsb
jle
cmpsb
or
xchg
sbb
mov
ljmp
call
js
mov
sbb
jle
mov
add
ja
fxch
xor
test
dec
sbb
xor
lea
mov
int3
sbb
xchg
insl
insl
pop
js
add
stos
xchg
shll
rorb
daa
out
dec
push
sub
push
loop
xchg
outsb
push
shrl
cmpsl
lret
out
in
sub
inc
cltd
sub
dec
cmpxchg
add
lods
mov
sub
fists
jg,pt
xor
mov
jle
cs
lret
jns
sub
in
inc
fldenv
push
cltd
ss
jecxz
adc
int
mov
sbb
xchg
repz
jns
not
add
sti
jbe
push
cli
movsl
xchg
mov
xchg
push
inc
stc
and
in
xchg
sahf
loopne
lcall
cmpsb
xlat
imul
lret
repnz
cmp
adc
pop
dec
repz
in
xchg
je
inc
sbb
mov
xlat
xlat
jge
push
adc
jle
mov
test
mov
mov
outsb
std
data16
ja
scas
icebp
mov
push
inc
daa
inc
jbe
aad
xor
jno
enter
in
ret
pop
aad
sbb
filds
adcl
xchg
jb
xor
push
push
add
rcr
es
push
dec
loop
call
fadds
pop
cmp
sub
cmp
pop
int3
dec
enter
call
lds
ret
mov
push
sbb
dec
aaa
inc
pop
jecxz
rorl
jmp
cmp
mov
cmp
jo
adc
jge
stc
lret
pop
xor
sub
xor
lcall
cwtl
call
fcomps
mov
mov
repnz
popf
rclb
cli
push
sub
lods
mov
xor
mov
testb
testb
cmp
std
adc
dec
mov
ljmp
jmp
push
pop
mov
sbb
loop
mov
xor
movsb
icebp
xlat
scas
sbb
aam
mov
out
es
sbb
and
loop
inc
cmp
repnz
mov
mov
pop
cli
pop
xchg
fistl
cmp
xor
dec
jle
jb
scas
sub
fs
in
mov
or
sub
pusha
xchg
jbe
push
test
into
mov
sbb
dec
add
mov
cmp
xchg
and
lods
frstor
mov
out
popl
aam
push
test
out
aam
insl
push
dec
cmp
lret
mov
dec
insl
ja
insb
jne
sbb
push
stos
lret
enter
cmpsb
mov
das
addb
repz
mov
loop
push
out
popf
outsb
xorb
sarb
mov
cltd
adc
jb
jne
sub
std
bound
jecxz
fstpl
mov
adc
jg
test
pop
push
pop
lret
imull
aas
fsts
mov
and
dec
sti
jmp
lcall
lods
out
xchg
mov
xchg
addr16
test
jnp
jecxz
push
xor
jne
inc
mov
push
or
aaa
pop
mull
clc
nop
shrb
clc
push
jl
loope
addr16
sbb
into
dec
test
adc
arpl
daa
mov
stos
xchg
arpl
or
rorl
scas
out
loope
jnp
int3
out
add
inc
jbe
ret
mov
stos
adc
xchg
or
fdivs
push
pusha
int3
clc
fnstcw
clc
nop
dec
int
loope
push
adc
in
cli
push
jge
sbb
sarl
jbe
faddl
xchg
imul
fwait
lods
hlt
cli
aad
jp
sub
mov
push
popa
aam
sbb
mov
mov
xor
push
pop
faddp
inc
int
sbb
je
cmpsb
leave
inc
ficoml
sub
mov
clc
jb
sbb
jnp
adc
pop
sbb
aad
cli
andb
movsl
pop
sahf
dec
and
and
lret
pop
push
cmp
lds
sub
ds
data16
sbb
inc
xor
pushf
cli
test
int
and
xchg
add
daa
xor
mov
xchg
fs
ljmp
scas
jne
mov
sbb
cmpsl
mov
inc
arpl
push
adc
icebp
xorl
rcr
adcl
mov
jb
push
inc
or
rolb
xchg
dec
and
mov
ret
jmp
incl
cltd
mov
clc
sub
test
lahf
inc
xchg
sti
or
fs
mov
xchg
xchg
xchg
hlt
push
movsb
ror
shrb
cmp
out
enter
gs
xor
push
mov
leave
subl
and
push
adc
mov
xchg
lea
jge
aas
dec
mov
pop
add
inc
jmp
jo
dec
fnstcw
cli
push
out
sub
shrl
cmp
shll
test
add
sbb
add
mov
frstor
insl
in
into
filds
std
outsb
sahf
mov
or
xchg
jecxz
inc
and
adc
mov
jb
clc
sahf
lds
push
cmpsl
sub
ror
rorl
out
sarl
add
lcall
inc
roll
ds
inc
stc
jle
mov
shlb
es
jl
push
outsl
mov
into
xchg
idivl
es
xor
jle
scas
cmp
in
xchg
fs
adc
xchg
icebp
arpl
lods
mov
mov
clc
add
inc
addr16
nop
lret
sub
mov
mov
scas
int
lods
mov
jae
rol
jb
stc
icebp
repnz
pop
adc
roll
mov
and
dec
mov
repnz
repnz
stos
adcb
or
and
push
ss
fmuls
int3
nop
xchg
mov
xchg
pop
in
adc
xchg
nop
add
mov
repz
clc
incb
psubusb
cmpsl
mov
pop
dec
or
mov
adc
fs
xchg
gs
sbb
cmp
ficomps
stos
and
xor
stos
xchg
jae
loope
or
orl
xor
xor
sbb
pop
inc
xor
out
mov
xor
cld
stos
aas
rclb
jne
lods
fisubrl
enter
jne
je
inc
lds
lcall
popf
cli
or
iret
rolb
repz
mov
adc
adc
sarb
adc
mov
outsl
in
daa
dec
xchg
shl
mull
das
and
fildl
pop
lods
inc
mov
stos
fs
mov
pop
stos
bound
aas
inc
out
orb
pop
outsl
mov
mov
push
pushf
fiaddl
push
sub
call
les
and
cmp
or
pushf
or
js
add
notl
icebp
mov
sbb
mov
sti
std
adc
cld
inc
leave
shll
ret
inc
xchg
fistpl
fidivs
movsl
nop
push
pop
pop
stc
inc
sbb
dec
jno
ljmp
leave
push
je
jb
insl
lock
push
lret
mov
repnz
cwtl
rorb
loop
inc
fstl
iret
fld
pushf
out
xchg
idiv
pop
test
jmp
adc
fiaddl
test
movsb
dec
out
xchg
icebp
iret
cld
clc
pop
mov
out
movsl
sub
les
out
pavgw
aas
sub
fadd
out
mov
loop
xor
and
mov
std
jb
pop
cmp
mov
ss
adcl
sub
cltd
aam
or
std
mov
popf
pop
lods
jmp
cmp
xor
mov
xor
mov
insb
dec
jne
add
push
jecxz,pn
movsl
adc
repnz
data16
mull
xor
das
sub
mov
add
mov
fadds
xor
cmp
test
mov
push
daa
mov
mov
les
push
mov
test
frstor
inc
rcr
inc
push
xchg
mov
cwtl
es
cmp
arpl
mov
jae
mov
lret
cmpl
jecxz
xchg
xor
xor
mov
dec
frstor
js
test
imul
cmp
xchg
xor
dec
movsb
sub
imul
pop
loopne
stos
mov
data16
pop
out
cli
adc
loope
jle
sbb
jbe
mov
leave
xlat
fwait
pop
leave
or
push
mov
je
jnp
fstpt
mov
sbb
xlat
test
jmp
inc
dec
push
ds
mov
mov
imul
insl
fnstcw
ret
push
and
addr16
xchg
call
rcr
aam
sbb
pop
cmpsl
pop
jnp
and
insb
stc
add
ret
add
ds
fisttpl
xor
push
aaa
ret
inc
cmp
push
mov
cwtl
push
xlat
pop
xchg
jp
rcl
arpl
sbb
std
addr16
push
scas
push
adc
pop
xor
mov
inc
dec
cmp
pop
inc
pop
sub
mov
xlat
add
and
adc
iret
jmp
dec
xchg
adc
stc
pop
sub
imul
in
ret
ret
xlat
fstps
sbb
add
mov
push
push
loop
mov
push
xchg
mov
cwtl
dec
xchg
push
lahf
mov
imul
scas
and
dec
fwait
push
cwtl
jb
add
and
fimull
cld
add
mov
push
test
mov
les
js
sbb
mov
pop
pop
mov
movsb
nop
pushl
xchg
lcallw
push
fadd
cmpsl
mov
and
lret
fiadds
mov
or
xchg
inc
test
pusha
mov
jl
outsb
out
das
and
in
push
add
sub
mov
push
scas
pop
mov
mov
ret
fsubl
adc
inc
jae
fldl
shll
mov
rorb
loopne
cwtl
xchg
cwtl
dec
inc
push
out
dec
and
test
dec
adc
rcrb
push
negl
xchg
out
jmp
cmpsl
lret
adc
sbb
push
push
jns
push
xchg
movl
loop
xor
inc
paddsb
or
ds
js
pop
jne
mov
enter
sub
push
jo
call
push
push
shlb
cmpsl
movsb
jle
and
ds
cwtl
xchg
mov
xchg
sbb
sbb
aaa
stos
and
stos
jp
sbb
push
dec
xchg
into
mov
mov
or
into
mov
icebp
or
ret
out
push
push
lret
push
mov
add
pop
cmp
sbb
mov
int3
sub
lret
shll
pop
in
aad
sbb
std
mov
mov
jns
mov
int3
in
and
jle
aaa
xor
jl
movsl
and
dec
cmp
mov
and
push
jno
mov
fxch
rcr
fdivr
mov
mov
pop
dec
lods
cmp
scas
mov
inc
rol
fwait
pop
push
popa
cmp
aam
or
stos
cmp
mov
popa
sbb
add
ss
cmp
sub
in
mov
dec
fcoms
dec
pop
bound
and
ret
mov
movsl
or
pusha
stos
and
push
xor
int3
lods
gs
enter
ret
cmpsl
xchg
pop
dec
jno
push
push
xchg
outsl
call
xchg
roll
mov
fiaddl
cwtl
ds
pop
push
xchg
dec
xlat
pop
inc
loopne
imul
stos
rcll
pop
add
xchg
xchg
sub
inc
pop
lcall
lret
cmpsb
pop
cmp
inc
loop
dec
je
pop
cld
mov
dec
imul
dec
pop
test
jne
loop
push
fnstcw
sub
popf
daa
adc
outsb
aaa
cwtl
mov
mov
sub
pop
fwait
mov
push
sbb
sbbl
out
scas
mov
fdivl
pop
das
stos
and
sti
enter
mov
popf
leave
stos
xchg
leave
bound
incl
js
sbb
sbb
jg
loop
in
fimull
icebp
rorb
xor
stc
cli
jo
sarb
sbb
dec
lods
pop
adc
inc
sub
sahf
xchg
popf
cmp
cmp
aas
out
cmpsb
js
dec
daa
sub
sbb
les
sub
add
enter
and
and
lods
stc
es
fisttps
sub
xor
adc
aad
insl
pusha
daa
pusha
test
push
lret
fwait
pop
push
repz
xchg
jnp
and
cmpsl
int
sub
inc
xchg
ss
pop
loope
sub
inc
push
enter
mov
movb
clc
mov
push
test
imull
pop
data16
dec
repnz
xor
dec
aad
mov
inc
and
mull
cwtl
out
das
sub
test
inc
mov
xchg
xchg
cmc
mov
aad
icebp
jne
mov
dec
and
int
int
inc
mov
adc
lea
cmc
jno
cld
pop
cs
jns
jnp
sar
ret
push
push
lcall
or
mov
inc
mov
adc
and
fcompl
or
test
sbb
clc
sbb
lcall
leave
mov
ret
lret
mov
cwtl
pop
mov
and
subl
ljmp
enter
outsl
adc
sub
xor
nop
jo
or
jns
inc
pop
jp
mov
push
sbb
icebp
dec
adc
fisttpl
mov
lahf
in
cltd
imul
and
cmpsl
in
insl
stc
in
bsf
test
cmp
nop
movsb
push
mov
xchg
mov
les
sub
pop
popf
outsb
jno
decb
lret
data16
mov
fstps
fstl
int
je
fstpt
adc
or
pop
add
xor
push
shlb
sbb
into
sbb
ljmp
jns
fisubl
push
push
lret
mov
jno
call
or
pop
xor
loopne
cmpsl
xor
xchg
ja
clc
dec
cmp
mov
jb
pop
sbb
int3
jno
popf
call
jmp
push
stc
test
mov
mov
out
call
sahf
add
mov
sbb
bound
lea
dec
stc
inc
fwait
lret
bound
sub
mov
scas
dec
repnz
cmp
xor
push
or
ss
push
in
push
xor
mov
cmpsb
cs
divl
aaa
lahf
sahf
addr16
les
int
lcall
adc
shlb
lret
out
adc
jmp
lret
rorb
fimull
jp
int3
jmp
dec
cld
dec
stc
daa
ljmp
sbb
lods
add
and
and
pop
lock
inc
addb
cwtl
mov
out
insb
test
mov
lret
xchg
mov
mov
adc
jbe
push
addl
daa
pop
rorl
pop
clc
xlat
xchg
push
dec
fnstsw
std
adc
fwait
jb
pop
into
pop
out
loope
jge
dec
dec
cs
ljmp
inc
xchg
sub
in
sub
dec
filds
icebp
ret
stos
repnz
test
aad
out
loope
shrb
cli
insb
repz
adc
test
and
jae
or
iret
add
incb
lds
xchg
mov
xlat
fwait
int3
fidivrl
in
fistl
mov
dec
sbb
push
mov
daa
jle
sub
aaa
mov
xchg
scas
push
jo
fidivrl
js
sbb
ret
sub
inc
bound
mov
xor
inc
cwtl
in
loop
dec
sarl
mov
cmpl
out
sub
jo
pop
pop
push
add
and
mov
cmp
in
push
test
and
nop
adc
imul
in
dec
mov
push
sbb
fsts
iret
ror
loopne
add
cmp
cmp
ljmp
popf
les
cs
lock
repz
jne
clc
xchg
in
adc
imul
jle
adcb
add
jnp
mov
insb
xorl
adc
cmp
adc
xor
jno
jge
xor
adc
shll
in
cwtl
xor
stos
cltd
mov
dec
rcrb
mov
push
or
pop
leave
push
shll
and
in
mov
and
lock
xchg
repz
addr16
jmp
xchg
inc
out
pop
testb
sbb
int
pop
and
xchg
sbb
xchg
mov
sbb
lcall
sbb
test
push
data16
imul
ljmp
stos
loop
xor
pop
repnz
push
add
loop
rorl
jns
ffree
sbb
cmp
lahf
jl
cmp
xor
and
mov
mov
jecxz
ret
roll
push
add
jne
xor
inc
out
or
ror
jp
iret
jb
jmp
dec
test
mov
cltd
movb
sbb
into
cmp
dec
dec
xchg
push
push
pushf
mov
mov
or
dec
test
jo
insb
orl
jmp
dec
in
inc
mov
and
cmpsl
mov
sub
push
pavgb
push
movsb
es
or
call
movsl
lock
dec
or
mov
cmc
push
movsl
int3
lods
pop
xchg
stos
jle
mov
stos
mov
int3
arpl
lcall
xor
jle
xor
push
out
cltd
sub
cs
ljmp
lret
xor
fs
add
ror
and
call
divl
loopne
ja
ret
decl
xchg
outsb
dec
mov
push
and
sti
scas
inc
lret
out
cld
add
xor
out
xchg
stos
fwait
jb
dec
and
mov
inc
inc
xchg
xchg
lcall
mov
jge
mov
sbb
ret
mov
mov
sub
test
sub
pop
mov
jg
shll
stos
jo
jle
cmp
jp
fimuls
daa
cmp
lds
push
and
or
mov
cld
jo
mov
xor
or
mov
cli
jmp
enter
test
stos
mov
ds
pusha
xchg
add
or
out
add
stos
jns
mov
inc
push
cmp
push
imul
inc
lods
jne
jb
and
push
shrb
idivb
or
fadd
mov
pop
mov
fisttpl
test
bound
and
out
jns
xchg
cli
sub
dec
sub
adc
sub
mov
push
lret
loop
mov
pop
stos
pop
add
in
sbb
out
inc
pop
or
mov
cmp
stc
xor
adc
push
pop
dec
imull
je
mov
or
lock
jo
cltd
adc
push
daa
nop
jno
imul
dec
push
in
dec
sti
cli
mov
jg
xorl
leave
push
lea
sub
sbb
sar
pop
pop
cs
mov
les
add
add
test
pop
out
adc
add
cltd
rclb
gs
fists
fs
sbbl
push
jg
mov
cmp
push
mov
dec
mull
arpl
sbb
jbe
pop
cli
mov
sub
ret
ss
push
ja
and
jnp
xchg
aam
xor
icebp
out
cmpsb
mov
into
sbb
test
testb
lret
add
mov
inc
inc
aam
inc
jnp
ljmp
int
cmp
mov
lea
rorb
inc
pop
daa
sub
xchg
fcoms
aad
jb
push
mov
and
cld
cmc
lea
aam
int
lahf
fnstsw
pop
cli
pop
xchg
mov
sti
in
repz
ljmp
mov
mov
loope
sub
jg
int
adc
sub
call
push
inc
pop
xchg
push
inc
out
rorl
mov
aaa
inc
inc
add
pop
dec
jno
and
stc
negl
js
push
push
addr16
add
xchg
aad
lock
sub
imul
mov
xchg
in
sub
sub
mov
loope
shr
or
and
adc
cmp
jnp
rsqrtps
test
int3
add
sbb
pop
pop
inc
jns
adc
dec
xor
push
ljmp
lret
testl
mov
pop
inc
fbstp
mov
jb
scas
pop
clc
in
stos
outsb
jecxz
sti
addr16
add
jl
or
mov
cmp
rorb
jae
subb
inc
xchg
push
cltd
cmp
sbb
xor
xor
out
pop
lods
jo
inc
rolb
out
je
lods
pop
pop
jno
push
fildl
dec
fistps
ss
mov
inc
add
andb
fstpt
loopne
aaa
dec
int3
jg
aad
cmp
stos
xlat
out
pop
mov
out
pop
insb
out
push
ljmp
sbb
dec
lea
iret
or
adc
rcll
in
dec
imul
test
pop
add
cmp
jb
out
pop
jbe
paddsb
ljmp
push
cwtl
adc
stos
in
and
movsb
movsb
fnsave
mov
popf
imul
stos
jmp
fldl
adc
push
addr16
mov
sbb
dec
cmp
and
in
sarb
push
ss
in
arpl
jle
inc
dec
popf
scas
xchg
in
push
mov
xchg
int3
sbb
sub
out
in
pop
xchg
cld
orb
xchg
lahf
mov
mov
jl
mull
inc
int
stc
shll
xchg
out
sbb
xor
stos
pop
mov
sbbb
dec
xchg
js
pop
data16
and
push
call
lret
mov
bound
or
movsl
jl
insb
cmp
fsubrs
jo
mov
out
clc
xchg
incb
sahf
push
ficoml
lea
sbb
in
shll
pop
pop
push
ljmp
pushf
test
pop
nop
stc
mov
mov
dec
jle
fstpl
and
and
popf
scas
jmp
iret
cmp
fimuls
xchg
add
pop
dec
out
fildl
adc
stc
dec
rcll
pop
lcall
dec
ja
std
pop
or
sub
xchg
jb
xchg
sub
in
push
test
enter
add
mov
and
mov
loop
jae
jge
adc
sti
call
out
and
push
jecxz
dec
ret
mov
push
outsb
loopne
xchg
pop
nop
leave
push
fiadds
insl
xchg
xor
lcall
or
or
cs
cs
fsubrs
xlat
dec
cmp
imul
int
cmpxchg
in
fnstcw
fptan
sub
hlt
shrl
mov
adc
aad
leave
adc
cmp
es
mov
mov
sub
mov
push
in
iret
inc
mov
pop
adc
pop
lcall
jl
clc
sbb
outsl
pop
orl
imul
divl
sub
pop
and
mov
outsb
mov
pop
add
cmp
rcrl
js
adc
lds
pop
xlat
pop
inc
popa
cli
outsl
ret
pop
fwait
cs
jns
xor
pop
pop
movsl
and
xor
mov
xchg
aad
icebp
jbe
lret
and
jb
lea
in
adcb
bound
in
scas
mov
xor
lret
mov
mov
in
call
mov
cli
ljmp
xor
pop
sarl
sbb
fidivs
adcl
fwait
inc
divb
rcll
mov
mov
inc
outsb
sub
xor
aaa
dec
xlat
outsb
fsubr
daa
lcall
xlat
mov
add
out
pop
add
push
insl
ds
sbb
daa
test
mov
add
dec
mov
into
and
test
push
or
push
aam
rcll
cmp
jl
movsl
and
loope
call
mov
ret
loope
inc
pop
ret
flds
xchg
jmp
adc
and
push
int3
pop
xchg
push
loope
mov
loope
movsb
lds
jae
dec
inc
or
movsb
hlt
sti
cwtl
dec
out
mov
sarl
hlt
push
out
or
or
sete
add
ja
je
sbb
mov
mov
jno
mov
or
imul
adc
cs
jo
lcall
test
add
add
pop
xlat
push
icebp
lods
enter
pop
add
aas
repnz
sti
std
cmp
xor
mov
ret
mov
in
fwait
add
ds
or
sbb
andl
mov
mov
sub
sub
push
push
cltd
xlat
xor
clc
int3
inc
xlat
xlat
mov
ret
push
jg
dec
rcll
inc
fwait
or
xor
in
test
lods
mov
pop
lcall
sub
into
xchg
adc
add
frstor
mull
xorb
sbbl
es
fsts
xor
mov
mov
jb
mov
adc
lods
xchg
loope
movl
sub
inc
jns
test
mov
push
pop
shlb
or
xor
fld1
push
cmp
jecxz
mov
hlt
jmp
movsl
lahf
inc
hlt
arpl
jge
and
out
xor
jns
shlb
les
cld
cwtl
out
push
xchg
and
inc
xlat
mov
pop
jmp
mov
mov
scas
outsb
dec
cmc
jnp
mov
lods
pusha
mov
push
adc
movsb
jns
mov
std
inc
pop
sbb
clc
jb
dec
cmp
out
jne
pop
stos
das
data16
add
dec
les
repz
push
inc
in
fs
rorl
cmpl
adc
out
sbbb
adc
jb
push
jo
out
xor
and
loopne
sub
imul
inc
jle
popf
pushw
sub
inc
add
push
in
cmp
leave
sbb
and
rorl
icebp
mov
adc
ja
xor
pusha
sbb
push
xor
inc
scas
dec
jae
and
and
cmpsl
cmp
push
sub
jns
xchg
enter
popf
clc
mov
aaa
add
dec
mov
mov
icebp
pop
dec
cmc
insb
mov
js
xchg
mov
scas
loop
push
cld
xchg
add
imul
and
stos
xchg
xor
cmp
scas
xchg
shlb
fnstenv
cmp
gs
mov
push
std
fs
je
push
fwait
push
push
mov
scas
add
js
stos
cld
hlt
cmp
push
cmp
push
and
cmp
or
jnp
cmp
clc
and
outsl
out
dec
hlt
mov
dec
or
cmp
and
jno
popa
dec
lock
jno
imul
aad
push
in
mov
out
lahf
lcall
add
sub
add
addr16
push
movsb
ret
inc
pop
out
jge
jo
pop
mov
pop
lds
pop
push
lret
stos
lods
les
ja
add
push
push
rcrl
cmp
into
mov
mov
or
repz
sbbl
ja
jbe
dec
aam
xchg
push
insl
cmp
cwtl
pop
and
daa
and
scas
scas
cwtl
mov
lcall
sbb
xor
mov
mov
movsl
pop
push
ljmp
cmp
xor
adc
xchg
sub
mov
mov
xor
shrl
fidivs
or
js
shlb
outsl
pop
fcompl
xor
icebp
imul
fs
mov
iret
jg
jns
cwtl
cmp
add
and
adc
icebp
cmpsl
xchg
push
in
aad
push
cmp
xlat
lods
and
sbbb
jne
mov
pop
gs
cli
jb
cltd
in
xchg
pop
shll
jecxz
in
loopne
jb
xor
arpl
mov
out
xlat
pop
lcall
aam
nop
push
xlat
xchg
movsl
outsb
repz
aas
shrb
cmp
xchg
loop
mov
test
lods
dec
int3
imul
sbb
dec
mov
jbe
xor
out
push
std
jno
mov
xchg
out
sub
sub
jg
imul
and
pop
shrl
push
rclb
mov
dec
rcl
jbe
inc
insb
mov
push
inc
sbb
shll
mov
add
sarl
dec
pop
cwtl
jle
xchg
dec
xchg
lock
cmp
add
subl
mov
roll
jae
lea
loop
lret
mov
test
inc
insl
jle
leave
scas
mov
popl
popa
adcl
pop
leave
fnsave
ljmp
or
fildll
mov
stos
xor
lock
xchg
leave
push
lock
sbb
adc
movb
fwait
out
out
outsb
mov
insl
dec
cmp
lods
inc
xchg
es
dec
test
fdivrl
insb
outsb
xchg
test
jle
xchg
xchg
in
xlat
mov
sub
xchg
cmc
jge
push
xor
lock
stc
loopne
or
xor
pushf
jno
xchg
sub
stos
push
daa
scas
jle
cmp
into
xchg
pusha
cld
and
das
jg
mov
add
push
lret
or
cmp
in
mov
sti
xchg
mov
lret
sub
jp
daa
das
dec
add
adc
lea
or
ljmp
jnp
mov
inc
aaa
adc
pop
das
sti
jns
cltd
jg
cmpsl
mov
xor
push
jne
popf
pop
push
jae
das
lea
mov
adc
xchg
rol
jge
loop
sti
sarl
fldenv
daa
mov
adc
fdiv
adc
xor
sbb
leave
cltd
sub
jns
pushf
xchg
and
lcall
push
stc
inc
stos
daa
pop
gs
aas
xchg
loope
fwait
mov
aaa
push
out
and
push
xchg
imul
or
or
insl
inc
inc
xor
jge
add
clc
mov
xchg
mov
std
jg
push
jbe
add
imul
fwait
inc
in
cwtl
ret
pusha
mov
pop
sub
xor
pop
std
add
in
hlt
mov
shl
adc
or
lea
icebp
sub
push
jne
mov
or
xor
movsl
mov
cld
out
jle
mov
pop
xorl
pop
lmsw
xchg
mov
jo
push
scas
out
jle
loope
sbb
loope
inc
adcl
leave
pop
mov
inc
fcoms
mov
addr16
loop
jl
aaa
rcl
pop
mov
xor
test
add
mov
jno
out
shlb
and
lret
sub
mov
add
imul
xchg
ja
jns
test
inc
mov
cli
jle
inc
aad
std
add
sahf
movsl
mov
push
sbb
cmp
insb
out
out
dec
mov
aas
adc
movb
mov
inc
and
push
adc
push
inc
test
xchg
pop
inc
loope
push
pop
add
adc
cmp
pop
mov
lea
mov
stos
xlat
pop
in
pop
jmp
jg
addb
push
and
in
lcall
insb
jge
gs
push
rorl
cmp
or
call
mov
jmp
or
movsb
lds
pop
and
test
loopne
push
and
fld
mov
push
inc
dec
mov
faddl
not
test
push
imul
xor
int3
add
or
jo
lea
dec
imulb
jl
cmp
pop
mov
insb
inc
clc
stos
inc
test
sbb
insb
jb
shlb
loope
lret
iret
push
call
or
out
insb
jg
pushf
mov
lcall
adc
mov
push
adc
add
jmp
cld
dec
inc
aas
loope
and
push
ds
cmp
jl
mov
icebp
imul
add
enter
xor
cmp
loope
xchg
jns
addl
pop
cmp
icebp
hlt
cmpsl
lret
add
adc
imul
call
stos
or
dec
push
cmc
xor
mov
cmc
pop
pop
mov
popf
or
xor
mov
repnz
xor
sbb
inc
idivb
loopne
sbbb
inc
pop
inc
xlat
xchg
gs
push
in
jb
dec
add
mov
test
ljmp
icebp
and
std
jnp
in
mov
imul
adc
or
lret
mov
mov
sbb
xchg
aaa
jecxz
and
and
fcoms
mov
pop
dec
adc
mov
inc
jbe
bound
test
push
pop
mov
and
jne
mov
movsl
push
xchg
xchg
xchg
add
popf
xor
cmpsl
out
xchg
ret
dec
mov
push
pushf
das
cmp
lcall
aas
jl
les
paddusw
fs
pushf
sarb
mov
notb
mov
dec
lret
adc
test
sub
scas
inc
mov
push
mov
push
rcll
sub
pop
xchg
jne
lock
gs
adc
and
shll
fisttpll
loop
es
fcompl
sbb
cld
fstpt
xor
lret
stc
push
jo
into
jo
mov
lock
std
flds
and
loopne
sub
int
sub
cmp
out
mov
stc
or
out
jmp
cmpsl
dec
jg
add
aad
mov
push
dec
insl
or
push
mov
push
gs
insb
hlt
out
mov
sbb
cmp
lock
adc
sub
lds
insb
sbb
je
sarb
inc
ror
aaa
cmp
int
add
xor
inc
jmp
loop
mov
or
jp
nop
mov
test
rcrb
scas
inc
into
stos
cmpsb
dec
ljmp
shl
stos
pop
xchg
inc
push
loopne
inc
push
stc
cmp
mov
in
push
imul
xor
inc
inc
xchg
enter
out
or
mov
add
jo
mov
lret
inc
push
dec
mov
adc
shl
cmpsl
scas
pop
lock
push
sbb
insb
out
rorb
lods
fwait
cvttps2pi
mov
mov
js
jp
das
fwait
sahf
loope
xchg
andl
mov
push
cmpsb
jmp
xor
xchg
push
mov
ljmp
mov
sbb
pop
fsubrs
jb
jp
mov
sti
cmpl
je
push
add
bnd
xor
or
xchg
sbb
add
push
repz
jge
sbb
js
stos
pop
js
lock
adc
stc
int3
in
pusha
aas
pushf
xor
faddl
jno
pop
mov
pop
aad
push
mov
and
mov
inc
inc
pop
out
in
dec
mov
les
xor
sbb
rcrb
fwait
inc
inc
or
dec
dec
in
xor
cwtl
loop
jmp
filds
dec
mov
movsl
xor
jge
aad
pushf
rcll
sub
das
out
shl
daa
push
xor
lea
cmp
inc
xchg
rcr
and
push
adc
shl
xchg
xor
sbb
mov
mov
mov
mov
push
les
je
push
stos
sub
adcl
nop
out
out
lahf
sub
out
xor
les
push
out
and
jecxz
mov
in
gs
icebp
mov
bound
ret
pop
sub
fisttpll
int
repz
call
lods
gs
dec
or
dec
mov
mov
test
adc
push
inc
pop
push
mov
nop
test
xchg
imul
xchg
or
mov
inc
sti
int3
dec
adc
or
stos
xor
stos
cmc
in
push
lock
ds
jge
push
pop
clc
test
mov
stos
mov
test
popf
test
mov
arpl
push
jb
add
add
xchg
int
test
dec
push
and
add
push
movsl
jge
lods
inc
idivl
or
xor
inc
sbb
xor
nop
leave
mov
into
push
sub
sub
mov
lods
mov
mov
inc
push
imull
das
loop
imul
lea
stc
in
icebp
cs
push
lods
test
in
sbb
mov
outsl
shrl
add
cwtl
aam
clc
outsb
int3
call
dec
lcall
bound
jp
rorl
clc
movsb
mov
addr16
mov
sbb
addr16
dec
dec
repz
aad
mov
dec
aaa
mov
sbb
inc
cs
push
test
mov
outsb
sbb
xchg
jg
mov
inc
mov
dec
xchg
xor
pop
hlt
cmp
fldenv
aad
insb
jecxz
inc
add
test
frstor
xor
or
sub
pop
scas
mov
es
mov
lret
es
sub
movsl
push
xchg
addr16
dec
int3
pop
rol
mov
into
cmpsb
xlat
movsb
xor
inc
sub
int3
sub
iret
mov
inc
adc
cmpsb
add
les
pop
lcall
stos
inc
ja
push
or
push
popa
pop
fwait
addl
jmp
and
mov
mov
test
popf
rcr
xor
mov
or
sbb
sub
pop
or
xor
mov
insl
mov
inc
pop
mov
in
lods
jns
jle
scas
out
pop
fistpll
fidivrl
cmpsl
sahf
iret
cmp
pop
jo
and
xor
adc
cli
and
fistpll
xor
sub
jecxz
sub
adc
iret
call
cmp
xor
or
adc
fiaddl
pusha
mov
in
add
fistpll
es
cmpsl
outsl
adc
add
pop
ds
mov
sbb
adc
mov
es
pushf
lods
mov
ds
mov
jp
jae
movsl
fwait
add
notb
pusha
xchg
xor
pushf
cmp
repnz
stos
xlat
jae
inc
xor
fistps
mov
and
fcomip
cmc
daa
sbb
jbe
test
cmp
adc
sbb
movsb
mov
iret
icebp
sbb
hlt
movsb
add
push
pop
mov
push
imul
in
mov
sub
mov
mov
int3
pop
sub
mov
into
popa
mov
mov
in
adc
inc
nop
sbb
jle
sti
dec
shlb
jge
xor
ficoms
repz
addr16
test
shll
lret
and
mov
adc
mov
js
movsl
adc
stc
mov
clc
fidivrl
cld
loopne
adc
aam
enter
das
or
leave
mov
stos
sbb
loop
outsb
int
ljmp
sub
in
and
push
sahf
into
xlat
clc
mov
cltd
fiadds
fnstsw
je
inc
ljmp
stos
aaa
pop
repz
movsb
jge
mulb
addr16
xor
xchg
in
push
gs
xor
setnp
incb
mov
sub
arpl
fucomip
lret
lret
aaa
int
sub
ss
dec
mov
mov
stos
rcr
int
push
shl
ret
sbb
fcoml
das
dec
ja
cs
xor
out
sbb
cli
or
fwait
dec
incb
xchg
push
test
stos
lahf
lcall
stc
sub
mov
cld
pop
aad
nop
add
and
sbb
add
sub
xchg
pop
outsl
ljmp
cmc
popa
or
add
dec
ds
mov
test
ja
mov
sub
mov
jecxz
mov
xor
lcall
push
lcall
shll
aad
xor
gs
or
ss
xchg
sbb
mov
pop
fistpl
mov
arpl
jmp
mov
scas
bound
dec
cmpsl
sub
jle
dec
adc
jl
push
pop
fcomi
lds
dec
add
imul
test
shll
pop
or
lcall
xor
int
or
stc
mov
jno
xor
loop
or
loop
insl
xchg
icebp
popa
popa
hlt
push
inc
hlt
stos
push
nop
jbe
mov
imul
sbbb
push
adc
xchg
inc
int
push
sub
clts
pop
push
outsb
leave
mov
mov
xchg
popf
cmpsb
cs
xor
adc
mov
enter
push
cmp
xor
dec
jle
fistps
add
in
mov
dec
lods
mov
push
repnz
into
shlb
rorl
inc
dec
dec
xor
enter
je
mov
clc
jp
push
fidivl
or
ljmp
sar
pop
jl
xchg
in
cmp
ret
lret
test
sub
or
std
fsubs
and
sti
inc
or
out
push
add
push
test
mov
cli
adc
adc
pop
and
push
clc
add
sub
mov
adc
mov
mov
xor
ret
fmuls
cmp
fidivrs
xchg
rcll
pop
test
or
sub
mov
rorb
adc
adc
and
in
out
icebp
push
mov
mov
fiadds
pop
loope
mov
ljmp
and
in
xchg
leave
add
in
jne
sbb
inc
mov
mov
scas
leave
fadds
adc
arpl
push
les
dec
repz
mov
outsl
or
jbe
push
int3
movsl
dec
cmpsb
movsl
xor
pop
push
mov
imul
lret
inc
xor
pop
mov
cli
imul
lock
out
cltd
push
enter
inc
push
cli
dec
sbb
pop
jno
sbb
test
flds
pop
jle
out
xchg
repz
add
mov
xor
imul
mov
mov
mov
roll
mov
loope
pop
ss
sub
mov
cmp
xchg
sub
mov
mov
jg
in
jne
lods
jle
mov
push
je
and
sub
push
xor
test
in
call
cmp
and
stos
jnp
adc
arpl
cmp
push
shrb
mov
jl
in
cmc
dec
test
xchg
sbb
jns
inc
outsl
jae
icebp
stos
dec
dec
push
les
in
inc
inc
aas
xor
bound
mov
lret
ret
dec
shrb
xchg
xchg
sub
fsubr
outsl
test
ds
sub
xor
sub
cmp
push
int3
je
enter
popa
push
push
cmp
adc
push
and
leave
imul
pop
dec
enter
lret
mov
rcr
enter
stc
and
lock
xor
pusha
inc
popf
js
cmpsb
arpl
dec
mov
cltd
xchg
dec
insl
add
lods
dec
test
pop
fsubrs
or
ds
shrl
cmc
pusha
jg
adc
jg
in
clc
adc
clc
add
aaa
enter
jns
or
dec
pop
push
fstps
xchg
idivb
adc
imul
in
andl
add
dec
fmul
lret
int
test
cmp
pop
pop
dec
fmuls
js
adc
js
icebp
and
ja
test
pop
or
ja
cltd
aam
inc
sbb
xchg
aas
mov
pop
push
push
mov
or
fmuls
stc
jge
mov
push
roll
ljmp
pop
mov
push
fsts
sbb
dec
je
pop
std
sarl
jmp
dec
dec
repnz
es
call
sub
jge
je
jbe
rclb
int
cld
aas
jnp
pushf
jmp
aaa
cli
in
xchg
dec
fwait
push
cmpb
lods
xchg
cmp
fadds
stos
xchg
cmp
ljmp
pop
movsl
jbe
xchg
cmp
jg
sub
inc
sbb
les
mov
lea
cmc
push
sub
xchg
aaa
repnz
data16
sbb
add
in
imul
adc
xchg
insb
orb
sub
adcb
xchg
sarb
xchg
loope
les
mov
lcall
lret
leave
add
xor
xchg
cmpl
cmpsl
outsl
push
cmpsb
sbb
adc
pop
enter
in
in
stos
mov
rclb
jge
pop
xchg
test
xchg
mov
addr16
loopne
ret
push
sub
je
jae
inc
in
or
jns
add
sti
int
jmp
mov
jp
push
loopne
js
mov
les
in
loop
roll
pop
push
das
pop
lods
adc
frstpm(287
call
inc
insl
lods
repz
int3
cmpb
mov
dec
mov
int3
dec
stc
sahf
les
pusha
negl
push
fdivrl
in
inc
popa
push
mov
cs
fwait
inc
or
add
aas
add
xchg
sti
xor
adc
ljmp
push
xor
and
push
xor
out
jb
jg
es
xchg
mov
ret
aam
or
mov
in
jnp
xor
lods
push
lods
stos
enter
or
xlat
cmp
jbe
cmp
xchg
cld
sbb
flds
sub
es
sub
sub
dec
pop
mov
jbe
loop
lret
addr16
push
adcl
push
jnp
mov
repz
pop
pop
rol
scas
cwtl
and
jns
test
in
or
fwait
cmc
push
xor
cmpsb
sbb
add
add
push
lret
test
sbb
mov
or
lea
sahf
xor
aad
push
mov
jge
gs
std
mov
stc
cmp
push
pushf
dec
pop
aam
add
addr16
iret
aad
dec
xchg
inc
mov
and
stc
dec
fucomi
jne
add
and
jp
dec
mov
testl
leave
xlat
xchg
fidivs
ljmp
ret
inc
lods
pop
lods
sahf
mov
pop
add
fisttpll
icebp
xchg
sahf
mov
inc
sbb
mov
adc
sub
in
jbe
lods
dec
sbb
addr16
add
lahf
lds
es
sub
sub
mov
mov
or
fs
push
bound
popf
mov
or
stos
pop
fs
nop
icebp
movsl
imul
and
daa
push
xor
aad
adc
sub
push
push
mov
jno
sub
clc
add
outsb
mov
mov
imul
mov
or
jne
mov
inc
cmc
or
in
mov
data16
addr16
cmpsl
sbb
inc
dec
repz
jae
movsb
js
inc
pop
jle
ss
pop
insl
cmpsl
movsl
push
dec
test
pop
xchg
aam
mov
pop
mov
add
add
fnstcw
sbb
jle
out
mov
sbb
lret
shrb
in
out
inc
push
push
pop
movsb
and
cmc
mov
mov
push
int3
test
mov
in
adc
icebp
sub
push
test
lahf
fisttpll
inc
dec
mov
sbb
push
xchg
out
xlat
iret
ds
fiadds
xchg
mov
xchg
outsb
or
into
push
divl
dec
push
add
popa
repnz
and
xchg
adcl
into
test
shl
mov
dec
fwait
sbb
stos
mov
nop
outsl
ss
das
mov
mov
cmp
mov
pop
push
inc
mov
xchg
pop
es
mov
pop
or
push
and
cli
aaa
out
and
leave
xor
std
mov
jg
inc
or
mov
pop
stos
mov
bound
or
adc
mov
out
ret
mov
rol
sbb
lcall
xchg
mov
dec
xor
pusha
or
mov
jae
movsb
imul
xchg
out
inc
push
cmc
mov
shlb
int3
lods
push
mov
mov
nop
xor
dec
push
fcomp
mov
xchg
sbb
fildll
rol
lret
dec
inc
add
or
daa
mov
into
les
call
dec
ja
pop
pop
sbb
mov
xchg
jae
mov
push
data16
mov
xlat
bound
outsl
incb
push
mov
std
sbb
out
and
push
cltd
push
push
inc
out
gs
neg
fcom
pop
push
popa
lret
dec
push
push
cmc
outsl
push
jne
enter
stos
jno
mov
pop
cmp
pop
das
fisttps
mov
nop
ds
loope
mov
pop
adc
sub
sbb
std
inc
je
adc
pop
mov
imul
lret
mov
cli
cmc
push
and
mov
fsts
ljmp
inc
or
insb
jg
inc
sbb
mov
lods
out
mov
loope
scas
pop
movl
jl
sub
out
jnp
jnp
daa
dec
aaa
je
movsb
add
stc
inc
inc
in
jns
mov
repz
add
bound
dec
sub
rcrb
rcrb
loope
mov
and
pop
imul
fnstenv
mov
jp
popl
dec
rcl
mov
jno
inc
inc
cmp
ljmp
fwait
mov
dec
popa
test
stc
cmp
add
mov
inc
addr16
mov
dec
divb
jnp
out
jg
pop
ljmp
mov
push
mov
pop
dec
imul
cld
push
mov
inc
fbld
cmpsb
dec
mov
stc
loop
fistpll
insl
int
jae
das
sbb
ss
inc
mov
ljmp
xor
jg
cpuid
sub
movsb
cmpsl
pop
dec
stos
cwtl
dec
insl
cmpsb
mov
jecxz
icebp
sbb
dec
push
fcomip
pusha
stos
into
pop
jae
call
pop
sbb
shll
push
out
loop
jbe
or
lcall
mov
popf
in
inc
fildll
or
pop
lea
mov
sbb
dec
mov
pop
or
pop
mov
addr16
inc
push
shlb
mov
imul
les
cmpsb
pop
pop
or
jecxz
xchg
inc
daa
call
adc
inc
add
sub
add
repz
jns
mov
in
adc
aam
cmp
jae
and
xor
lds
bound
push
pop
mov
xchg
sbb
rol
call
push
and
cltd
mov
sarl
das
push
daa
jg
in
sbb
and
xor
in
inc
or
pusha
movsl
repz
bnd
nop
pop
lcall
adc
mov
push
push
pushf
dec
les
jp
mov
pushf
mov
lahf
jl
xchg
push
and
push
scas
inc
ret
jmp
or
sbb
fisttps
cmpsl
inc
mov
mov
jmp
push
cmpsb
sahf
add
dec
add
test
mov
xchg
lods
out
push
repnz
or
es
sub
enter
loope
push
pop
iret
or
lcall
and
test
mov
mov
jmp
mov
imul
cmp
push
repz
dec
inc
ss
out
xor
add
jecxz
sub
jns
xor
push
fsubl
adc
dec
dec
sbb
clc
cli
shll
cmp
cwtl
pop
sbb
add
dec
cmp
mov
adc
sbb
dec
addb
jns
mov
popa
rcrb
xchg
mov
push
push
aaa
in
dec
lret
shrb
nop
and
ret
or
cwtl
outsl
cmp
xlat
mov
rcll
insl
lahf
sub
movsl
jne
lea
shll
push
cmp
cwtl
add
push
inc
into
inc
aad
rcr
icebp
loope
insb
pushf
sahf
or
jecxz
dec
in
jb
mov
outsb
push
mov
out
adcl
addb
inc
ja
pop
add
sti
adc
cld
ja
jecxz
cmp
jge
mov
jbe
cmpsb
rorl
je
fsubrs
push
push
decb
xchg
rolb
into
sbb
out
jmp
sbb
sbb
out
push
inc
out
pop
movsb
es
mov
in
dec
test
gs
sti
or
stos
pop
pop
pop
lret
jl
daa
push
test
jns
or
cmc
mov
xchg
cmc
inc
lea
loopne
ret
fwait
cmp
and
xchg
xchg
out
cli
xor
aas
call
pop
xchg
mov
data16
gs
pop
in
loopne
xchg
mov
f2xm1
test
jo
and
loop
addr16
jp
out
add
enter
mov
arpl
xchg
jecxz
nop
push
push
fmul
test
mov
dec
popa
lods
sub
das
or
jne
aaa
shll
inc
das
dec
cli
insl
mov
sti
add
mov
jle
shrb
jno
test
lock
sub
xor
cmp
mov
xchg
outsb
leave
sub
adc
jns
pusha
imul
divb
mov
pop
mov
iret
sub
inc
inc
out
push
addr16
push
sbb
jmp
xchg
daa
fucomi
sub
in
cmpsl
pop
add
cmp
cli
jbe
mov
xor
xchg
mov
or
popf
adc
or
sbb
gs
jo
pop
nop
lods
loopne
sub
daa
pop
nop
jno
lock
rorl
fidivl
xor
xor
xchg
xor
push
cld
sahf
adc
dec
inc
mov
fucomip
jg
pop
mov
or
mov
jne
sti
add
inc
jl
mov
out
fwait
popa
rcrb
dec
mov
imul
mov
xor
andb
pop
leave
ja
fisttps
jle
ds
bound
outsl
js
int3
push
lods
cmpsb
call
outsb
dec
roll
add
inc
jns
mov
sub
inc
aaa
push
or
mov
jae
inc
jnp
mov
pop
sub
sub
popa
scas
stos
addl
enter
hlt
movsb
mov
inc
or
repz
negb
add
xchg
inc
mov
cli
ret
mov
leave
mov
sub
xor
mov
out
dec
sbb
lea
cltd
push
mov
jne
inc
cmp
push
xor
aaa
mov
bound
cltd
mov
sub
stos
int
inc
dec
sub
add
lods
insl
sbb
addr16
xchg
rcrb
scas
testl
int3
pop
pop
mov
repz
push
push
leave
imul
out
or
lods
enter
pop
and
pop
cli
outsb
xchg
ljmp
lret
mov
push
add
lret
fadds
xchg
xor
lret
outsl
mov
fxam
mov
xor
mov
dec
mov
js
iret
out
clc
scas
sbb
or
cmp
push
xchg
xchg
pop
arpl
scas
popf
andb
xorl
pop
into
fstl
into
cmpsb
mov
push
pop
push
test
jle
xchg
je
sarl
in
xchg
and
jns
or
subb
in
push
pop
mov
idiv
test
pushf
pusha
add
fistl
mov
and
and
push
mov
push
aam
cs
in
mov
arpl
xchg
outsl
jb
push
mov
insb
xor
pop
mov
hlt
or
dec
push
arpl
jbe
loopne
push
sbb
xor
in
gs
cmp
sahf
stc
sub
jo
sbb
fnstcw
bnd
mov
and
in
mov
mov
gs
aam
jle
std
push
cmp
sbb
sbb
pop
jge
push
xchg
bound
adc
adc
sbb
out
daa
flds
push
xchg
out
lock
inc
stc
lahf
push
jae
sahf
cwtl
push
cmp
adc
popa
imulb
inc
cmp
xorb
nop
test
pop
stos
cmp
fists
xchg
inc
inc
mov
push
sub
cmpsb
adc
and
jg
dec
pushf
or
shlb
jmp
pushf
ljmp
add
movsb
sub
dec
add
sbb
shl
inc
xchg
add
in
cmpsb
fdivl
insl
pop
inc
sub
lds
or
dec
enter
jns
shl
push
jl
xchg
pop
mov
lods
jl
inc
test
loopne
aam
leave
push
pop
addr16
das
mov
mov
jge
enter
push
in
pop
inc
adc
movsl
mov
adc
push
lods
inc
in
lock
rorb
xlat
mov
sti
push
nop
add
mov
xchg
and
mov
scas
mov
bound
push
aas
cmp
loopne
mov
xor
add
xor
jbe
mov
sub
movsl
sbb
mov
out
pop
sbb
aam
cltd
mov
sub
ret
cmp
aaa
movsl
cmpsl
mov
iret
xor
pop
lret
xchg
imul
jg
and
mov
sbb
sbb
sub
lods
test
pushl
leave
loop
push
sub
inc
jnp
pop
xor
ja
mov
dec
adc
in
sahf
pop
pusha
lods
mov
dec
es
andb
add
in
addr16
sar
imul
cwtl
std
mov
int3
jbe
stc
pop
mov
or
es
xor
mov
mov
mov
loope
xchg
into
dec
lahf
jecxz
fstp
fwait
data16
roll
jecxz
pushf
xchg
inc
in
mov
pop
out
loopne
imul
xor
popf
sbb
pusha
std
or
inc
jmp
mov
mov
sub
addr16
mov
sbb
sub
lahf
wrmsr
xchg
lahf
popa
and
test
inc
mov
push
repz
jbe
in
lods
sbb
insb
sbbl
call
or
mov
jmp
or
pop
xchg
mov
push
mov
dec
ss
fidivs
mov
jae
sub
orb
outsl
movsl
mov
adc
fwait
ret
push
dec
bound
test
jnp
js
dec
sbb
push
pop
daa
das
out
cmp
imull
mov
mov
pop
mov
js
hlt
mov
out
xor
adc
add
stos
repnz
adc
push
lcall
gs
add
pop
xchg
pop
gs
andb
mov
mov
add
mov
xchg
test
jb
movsl
rolb
ret
add
mov
adc
aam
mov
xor
shlb
sub
add
cltd
lret
cmpsl
pop
jnp
pop
xor
mov
push
jmp
pop
stos
cmp
jo
mov
cmp
xorb
lcall
pop
pop
mov
insl
mov
test
imull
mov
pushf
jne
aaa
pop
cmp
xor
pop
mov
and
add
push
imul
xlat
xor
dec
out
rorb
outsb
aam
mov
mov
scas
ljmp
cmpsb
cmp
add
and
jns
scas
mov
ljmp
lcall
lret
mov
mov
adc
jmp
push
jg
cmc
mov
stos
int
cwtl
push
or
lret
lock
mov
sbb
fbstp
or
mov
gs
cmp
and
sbb
inc
dec
push
xchg
jns
sbb
testl
mov
fcomps
ds
xchg
dec
xor
mov
jg
inc
jecxz
jmp
mov
adc
pop
addl
jns
pop
sbb
xor
inc
js
ret
xor
movsb
mov
mov
push
hlt
xlat
mov
call
outsb
xchg
sti
andw
pusha
movl
sbb
jg
adc
mov
das
fsubrs
mov
pushf
xor
jg
or
mov
sub
dec
mov
hlt
sub
and
mov
rol
inc
pop
movb
outsb
jg
pop
ds
testl
sti
aas
push
in
or
cmp
cwtl
repz
adc
inc
js
mov
cmp
xchg
push
sub
int3
sti
insl
or
jmp
in
mov
xchg
scas
push
imul
movsb
ds
shl
std
mov
adc
leave
xchg
xor
aam
add
inc
mov
fs
std
out
push
dec
pop
jg
sahf
fisttpll
shrl
xchg
push
lods
mov
mov
cmpsb
xor
dec
mov
cmpsb
inc
cwtl
pop
das
js
cmpsb
pop
xor
repnz
cmp
mov
push
and
ss
test
stos
and
aaa
out
push
cmpb
and
rorb
cmpxchg
sub
and
pushf
dec
mov
ja
movsl
or
nop
lock
jb
clc
dec
pusha
xchg
insb
rol
daa
shll
xchg
movsb
add
into
jmp
lahf
mov
jg
mov
mov
in
pop
xor
shlb
hlt
dec
jno
les
push
or
mov
idivb
not
pop
bound
lds
sub
pop
fs
pop
push
jge
mov
gs
push
xchg
mov
dec
lock
push
hlt
in
sti
mov
je
stos
arpl
dec
pop
test
sahf
sub
push
sbb
js
pop
imul
stos
shrl
into
in
sbb
lea
push
sti
jmp
xor
scas
pop
jmp
adc
int
repnz
sbb
ss
hlt
mov
lahf
out
inc
or
pop
mov
cmp
fbld
lods
shrl
and
popf
mov
mov
loope
jns
xor
in
int3
push
and
in
mov
or
xor
cmp
push
inc
jne
mov
stos
mov
push
jbe
jae
lods
dec
jmp
push
out
jae
push
xchg
cld
mov
mov
jbe
jno
das
out
imul
xor
mov
js
arpl
fisubrl
pop
in
arpl
dec
jmp
xchg
enter
push
xchg
sbb
pop
insb
fucom
ljmp
cmp
pop
mov
mov
rdmsr
lahf
inc
and
jns
aaa
pop
pop
repz
loope
loopne
call
cltd
add
das
adc
movl
add
stos
sub
call
adc
fnsave
push
lods
lds
push
mov
or
sbb
cmp
cmp
stos
sbb
sbb
jg
pop
xchg
jp
aad
or
popa
pop
cmp
icebp
sbb
xchg
adc
jae
jo
xor
xchg
cmp
in
add
lods
dec
addl
clc
pusha
cmp
dec
imul
xor
jno
push
push
out
or
sub
add
xchg
movl
xor
and
mov
scas
mov
bound
push
or
ret
cli
insb
or
ret
test
das
mov
outsl
js
mov
clc
jns
mov
dec
mov
xor
fsubr
lds
push
inc
pop
add
mov
xor
ss
cmpl
lcall
xchg
out
lcall
adc
dec
inc
xorb
jecxz
iret
mov
sbb
jle
cmc
ja
lret
testb
pusha
sub
pop
inc
and
test
icebp
xchg
sahf
bound
sbb
xor
mov
jo
lcallw
lret
dec
iret
sub
sbb
mov
jmp
in
inc
xor
xor
aaa
sti
adc
or
lret
aaa
mov
cmp
mov
and
mov
jno
xchg
mov
imul
push
rol
sub
in
lods
insl
dec
lea
insl
pinsrw
push
popa
or
test
jb
ss
das
and
dec
sub
and
mov
dec
inc
inc
call
lret
test
xchg
mov
and
push
stc
xchg
ljmp
sbb
fcompl
inc
test
test
addr16
dec
hlt
fnsave
add
loop
or
xchg
dec
fsubrl
inc
testb
or
sbb
fisubrs
and
dec
nop
xchg
add
push
inc
xor
push
test
lds
jb
ret
xchg
gs
mov
inc
test
cmpsl
dec
pop
dec
xor
test
mov
sahf
bound
test
inc
or
mov
adc
and
cs
insl
push
or
imul
or
addr16
dec
xchg
fchs
clc
out
int3
jne
inc
je
hlt
pop
sub
xor
popa
int3
imul
fbstp
nop
inc
jo
outsl
xchg
inc
in
xlat
cmp
mov
jae
inc
aam
dec
into
mov
or
pop
fistpll
test
hlt
out
adc
int3
cld
fwait
movsb
aad
sub
cld
icebp
aaa
or
jns
pop
mov
rorb
inc
inc
insl
push
lods
pop
sbb
out
loope
cmpsl
dec
sub
mov
lods
xlat
push
sbb
push
lahf
cmp
xchg
cmp
push
push
repnz
fwait
adc
and
inc
fsubl
aaa
inc
rclb
jbe
and
imul
xchg
mov
call
or
inc
sub
pop
ljmp
add
push
push
jmp
mov
sub
cltd
ffree
adc
sub
addr16
push
xchg
jb
jg
mov
scas
mov
sub
mov
inc
xor
lods
pop
and
lods
call
xor
lods
stc
mov
mov
ret
loop
inc
movsl
pop
cmpl
cmp
ss
addb
or
out
loopne
xchg
jge
adc
or
or
mov
cwtl
stos
mov
dec
imul
xor
push
aas
mov
or
insl
pop
es
outsl
rorb
leave
pop
adc
inc
mov
push
jbe,pt
inc
adc
push
data16
jo
jge
shrl
pop
or
jns
xchg
pop
mov
adc
ljmp
cmp
and
sub
push
rcl
ret
mov
adc
cmc
mov
outsb
dec
push
dec
movb
xor
es
add
loopne
stos
xor
cmpsb
xor
aad
mov
or
jo
ss
inc
dec
mov
inc
sbb
sub
cmp
rorb
pop
lcall
mov
cmp
pop
bound
les
movsb
cmp
roll
ds
sub
adc
inc
into
sbb
clc
add
jb
mov
mov
loop
dec
in
mov
out
sub
loop
js
stc
movsl
iret
sub
loope
add
dec
add
mov
repnz
mov
sbb
sarl
pop
or
lret
jl
mov
sbb
push
xchg
sub
rep
dec
adc
dec
dec
stos
pusha
jmp
cmp
out
shl
dec
inc
or
cmp
push
test
jnp
dec
rolb
enter
xor
mov
cmc
pop
test
jecxz
pushl
loope
fwait
stc
mov
mov
cmpsb
dec
adc
dec
push
jecxz
push
movsl
jno
adc
divb
jnp
push
int
in
das
jle
rorl
cltd
xchg
test
xor
fistpll
xor
or
push
mov
sbb
push
div
add
jo
pop
rorl
rcr
mov
or
aad
cmp
into
dec
dec
push
sbb
or
in
or
push
pop
lods
dec
mov
dec
push
fsts
jl
fldcw
fcomps
inc
in
out
jb
rclb
pop
xlat
aas
mov
aas
movsl
outsb
clc
xchg
mov
mov
and
or
mov
enter
pop
or
clc
dec
sbb
in
or
jg
pop
mov
add
adc
stc
testb
jmp
into
lods
enter
jecxz
sbb
jns
aad
lock
in
add
mov
or
cmp
shrb
mov
push
mov
dec
mov
cmp
bound
jbe
repz
filds
adc
out
cmp
xor
push
lahf
lods
mov
test
icebp
or
mov
xchg
inc
je
pop
push
imul
mov
scas
testb
xchg
sub
pop
mov
je
outsl
fldt
cmp
cld
imull
push
mov
outsl
xor
test
cmpb
adc
sti
jmp
and
bound
sbb
aam
sub
stos
fcomp
and
imul
xchg
lods
les
push
cmp
add
scas
movsb
out
mov
fisubs
mov
xchg
arpl
outsb
pop
bound
aaa
icebp
lret
ss
insl
adc
ja
xchg
sbb
mov
adc
and
movsb
ljmp
push
xchg
jno
scas
adc
pop
fisttpll
mov
test
fisubs
in
cmovbe
sub
das
imul
xor
ficomps
daa
dec
mov
test
push
daa
push
test
mov
jp
xor
insb
out
inc
jmp
xor
xchg
lods
jo
dec
xlat
sbb
cmc
mov
das
fs
push
jg
jns
roll
mov
jne
fimull
xor
cmpsl
aas
pop
cmp
pop
dec
xor
pop
mov
inc
cmp
stc
or
in
jne
sub
aad
jb
and
mov
dec
jae
xchg
mov
pop
jbe
mov
cltd
ror
mov
xor
cmpb
popf
sub
jle
lods
dec
fimuls
loop
xlat
jo
iret
fnsave
insl
insl
in
mov
rol
and
popf
mov
imul
test
ror
std
mov
dec
cmp
rorl
mov
out
lds
jl
sti
lret
jecxz
push
adc
arpl
mov
dec
sbb
and
out
cwtl
xor
fsubl
mov
push
sub
dec
out
add
dec
das
pop
js
iret
pop
mov
mov
out
jnp
add
mov
shrl
ret
inc
enter
leave
xchg
jmp
icebp
xor
mov
bound
idivb
mov
fiadds
sub
inc
outsb
and
mov
and
inc
xchg
in
fsts
jbe
into
inc
inc
xlat
cmc
add
int3
push
hlt
cmp
in
aaa
and
mov
mov
imul
adc
or
or
subl
popa
enter
call
xchg
lcall
sarl
mov
insb
and
xor
mov
ds
clc
lahf
lock
mov
xchg
xor
dec
cld
inc
and
push
loopne
js
mov
les
inc
or
aaa
mov
pop
push
daa
mov
xchg
mov
sti
dec
mov
mov
mov
hlt
mov
movsb
xlat
xor
fstl
fistpl
divb
test
jnp
aad
mov
mov
mov
loop
ror
cmpsb
clc
xchg
dec
data16
mov
out
mov
xchg
addl
addr16
sahf
mov
mov
int
repz
loopne
mov
mov
andl
jo
orl
ja
xor
imul
incl
lret
stc
cmp
fnsave
fdivs
or
jge
mov
addb
loopne
sub
sub
push
jmp
add
jb
in
or
rcll
out
in
lds
clc
push
mov
fimuls
cltd
cmp
sbb
scas
mov
rcrb
lret
insb
push
mov
inc
adc
cmp
mov
ficompl
mov
aam
mov
pop
and
ds
sahf
mov
lahf
cli
repz
enter
jae
xlat
sbb
out
mov
rolb
jne
gs
test
xchg
imul
push
sub
ljmp
inc
popf
adc
fs
jbe
push
mov
and
movb
sahf
xor
mov
insl
icebp
lods
fidivrl
add
push
arpl
mov
popa
and
hlt
lock
jo
sbb
add
mov
xor
mov
call
cwtl
ret
pop
adc
push
jb
or
loop
repnz
xchg
mov
xchg
cmp
push
imulb
not
mov
data16
adc
mov
xchg
xchg
shlb
push
cwtl
arpl
xor
test
dec
daa
cwtl
inc
cmp
mov
push
aam
movsl
jbe
jl
inc
inc
adc
and
xchg
jg
iret
rcll
iret
shll
cmp
cwtl
repz
popa
pop
xchg
jns
imul
andl
sarb
lea
inc
sbb
les
fisttpll
mov
cmpsb
xchg
jb
mov
call
insl
cmp
sbb
enter
std
rorb
mov
andb
lods
cltd
addb
xchg
push
mov
daa
mov
jmp
nop
mov
hlt
loope
cld
js
cwtl
adc
fdivrs
ljmp
sub
push
xchg
sti
adc
les
test
cld
int3
or
ret
mov
fstpt
jecxz
push
popa
insl
rcrb
xchg
adc
imul
xor
dec
xchg
jmpw
lods
or
shl
pusha
add
cmp
jg
outsl
pop
add
mov
arpl
bound
cmpsl
push
adc
cmpsl
test
jg
divb
ss
ret
orl
mov
call
roll
mov
mov
cmc
mov
or
in
in
out
pushf
inc
pop
scas
cli
dec
mov
popf
inc
or
enter
xchg
leave
inc
jns
xor
xor
xchg
xlat
xlat
xchg
adc
xchg
call
push
inc
push
push
xor
cmc
jl
cmpsb
in
out
out
pop
aad
out
addr16
ror
cltd
jg
cmp
test
jecxz
das
mov
inc
fs
mov
es
out
aaa
or
mov
push
jg
ret
sbb
mov
sbb
outsb
arpl
mov
ret
adc
sub
lahf
sar
pop
out
lods
pushl
mov
xor
or
push
scas
popf
push
rolb
lods
pop
mov
ret
mov
addr16
mov
stos
outsb
aas
pop
mov
lahf
fwait
push
in
jl
mov
mov
jge
cmp
sbb
sbb
std
mov
cs
arpl
xchg
sub
jmp
and
xlat
push
fldlg2
pop
pop
cmpsl
shll
cmp
fisubs
cmp
movsb
and
dec
adc
lds
or
sub
jge
jmp
sub
cmp
frstor
leave
ja
repnz
mov
ret
inc
dec
pop
mov
das
test
jne
mov
pop
mov
and
std
les
sub
frstor
ljmp
sbb
jne
call
dec
popa
sbb
jns
aas
mov
jns
test
or
adc
push
rorl
shrl
mov
inc
or
movsb
and
mov
cmpsl
jbe
jle
nop
jp
push
push
jle
jae
repz
or
jne
xor
stc
xchg
xor
ljmp
and
int
and
jb
gs
leave
ss
push
sar
mov
push
inc
out
inc
fmul
in
mov
mov
sahf
and
jmp
pop
push
ja
xchg
cmp
popf
push
dec
dec
sbb
pop
pushl
push
push
popf
sbb
das
pop
imul
mov
push
popa
rol
pop
inc
adc
sbbl
cmp
packssdw
addr16
mov
cmpl
mov
sub
pop
lret
lret
or
inc
fcoms
xchg
lds
bound
aad
js
ret
push
add
inc
push
arpl
sbb
sarb
data16
sub
and
imul
pushf
movsl
mov
fnstsw
out
in
inc
enter
push
cli
add
imul
popf
stos
pop
pop
mov
out
or
xor
jmp
mov
cwtl
icebp
lahf
cld
sub
iret
xchg
add
roll
add
push
adc
dec
rep
jne
jecxz
lcall
mov
lock
rcrl
int3
insb
mov
xor
aam
cltd
movl
push
mov
add
jecxz
or
out
enter
push
sub
lock
and
push
jb
ss
cmp
cltd
stos
sar
xchg
jle
insl
daa
scas
jno
jecxz
dec
out
push
pop
test
repz
iret
dec
mov
test
jecxz
lret
rorb
shlb
aas
jg
dec
movsb
cwtl
hlt
aam
cmp
mov
xor
ftst
xchg
scas
aam
loopw
fstl
clc
lret
mov
dec
es
imul
sbb
mov
jl
std
add
aam
dec
mov
hlt
test
adc
ffree
pop
push
cmp
lds
incb
mov
add
popa
int
sub
rcrl
and
mov
out
test
lret
mov
int3
sbb
dec
sub
movsl
sbb
push
insl
push
or
mov
loopne
sbb
cmp
mov
in
xchg
dec
sub
push
notb
outsb
sbb
pop
pop
cmpsl
and
loop
lahf
ja
mov
lds
inc
mov
and
pop
lret
xor
clc
cs
xchg
sub
jno
sbb
sbb
mov
adcb
xchg
xor
aaa
cmp
pop
enter
mov
scas
movsl
jp
inc
dec
cld
inc
rorl
mov
mov
shlb
xor
lret
or
sub
or
cmpl
inc
stos
pop
nop
jb
push
js
jl
arpl
icebp
out
movsl
outsb
and
cltd
adc
nop
and
popl
xchg
inc
ret
pushf
decb
scas
fwait
adc
inc
or
jb
jbe
mov
pop
and
repz
sbbl
fcmovnb
cld
nop
popa
imul
and
ja
add
ja
sub
sbb
fnstenv
pop
inc
or
inc
fdivr
cli
inc
mov
push
jne
aaa
out
pop
scas
fyl2xp1
rcrl
outsb
jp
nop
dec
ret
pop
sub
jle
add
clc
and
xchg
dec
pop
nop
push
add
jle
mov
aas
xchg
mov
pusha
or
pop
fisttpll
testb
mov
jns
or
lock
jp
lods
xor
jo
lret
loop
push
cmp
adc
cmp
push
or
lret
fisubrs
mov
xchg
jnp
adc
nop
push
out
loop
adcl
jno
loopne
jno
icebp
xor
jecxz
imul
adcb
mov
out
mov
xchg
arpl
inc
incb
nop
mov
dec
mov
jo
ljmp
lock
push
out
sub
cmp
std
push
push
mov
ja
adc
dec
into
std
aad
shlb
addr16
or
sbb
ret
adc
arpl
xchg
cld
jae
sub
das
pop
in
cmp
xchg
lret
ja
lret
pop
cmp
mov
test
push
jle
test
rorb
inc
sbb
rolb
mov
fnstcw
mov
mov
loop
outsb
popa
adc
outsb
push
cmp
aad
nop
test
jl
jne
cmc
jmp
in
sahf
ror
shrl
sub
andb
adc
jmp
addr16
push
pop
mov
cmp
stc
aas
push
insl
mov
arpl
lea
das
add
push
mov
scas
cmp
xchg
repnz
dec
scas
mov
stos
pushf
js
sbb
sub
adc
fcompl
ret
fildll
sbb
inc
sub
adc
pushf
sti
ror
dec
repnz
fwait
add
popf
in
pop
lahf
sub
loopne
xchg
sbb
out
push
or
push
loopne
pop
inc
push
ljmp
cmp
es
mov
pop
sbb
sub
arpl
jne
adc
es
fidivs
addr16
mov
clc
test
in
mov
xchg
sub
movsl
jo
daa
mov
and
pop
add
push
scas
jb
mov
mov
xor
stos
push
push
jle
js
or
or
lods
sti
adc
and
xor
and
cmp
je
and
daa
push
push
pop
cmc
and
xorb
mov
mov
mov
ljmp
adc
andl
push
gs
mov
jge
xchg
mov
es
xchg
mov
or
mov
xor
lea
xchg
jbe
and
pop
jle
aas
aas
mov
mov
pushf
sub
jmp
or
int3
mov
cmp
in
mov
movsl
cmp
sub
mov
addr16
sbb
jl
xchg
fiadds
test
cmpsl
mov
fisubl
dec
int3
lock
inc
outsb
or
jnp
sub
mov
pop
iret
cmp
nop
inc
ljmp
jnp
into
add
add
cltd
jg
push
jg
cltd
mov
loope
adc
xchg
pop
sbb
int
push
or
cmp
push
mov
cltd
push
or
sbb
jnp
cli
sarl
inc
mov
or
mov
xor
jns
sbb
pushf
push
mov
shlb
in
or
mov
mov
mov
and
gs
mov
fisubrs
rcll
mov
loop
adc
push
test
fs
mov
repz
dec
js,pt
inc
enter
ret
sti
sub
add
rorb
icebp
and
sub
jnp
dec
iret
jg
push
dec
aaa
ds
adc
jg
fwait
mov
loopne
pop
enter
das
xchg
cli
push
call
shlb
dec
xchg
call
pop
in
jno
std
lcall
out
xor
subl
movsb
and
mov
into
rcr
dec
and
es
out
les
in
or
xorb
hlt
hlt
sub
adc
adc
loope
std
sti
adc
sbb
sub
lahf
roll
incl
bound
movsb
mov
pop
adc
pop
mov
jge
loop
or
mov
cld
mov
push
xchg
mov
xor
stos
mov
bound
fistpll
fistps
inc
std
test
daa
leave
mov
fdivs
repnz
daa
cmp
adc
or
fcoml
pop
push
enter
add
ljmp
mov
push
gs
push
mov
aaa
repz
repnz
xchg
xchg
int3
adc
or
mov
cwtl
fmuls
push
fidivrl
sbb
mov
or
testb
lods
adc
cmc
inc
pop
xchg
out
les
cwtl
mov
sti
xchg
out
xlat
out
cs
mov
mov
dec
addl
insb
js
sbb
jg
test
mov
add
push
shrb
mov
mov
sub
mov
push
sahf
rcr
sub
jg
lock
test
sbb
push
aam
mov
xor
dec
test
cmp
sbb
div
and
out
xor
cmp
xlat
jmp
xor
gs
and
mov
jle
sbb
xchg
mov
adc
push
xor
push
je
add
push
cmp
repnz
cmp
cmpsb
out
mov
inc
popf
out
rcl
shll
or
lds
mov
rol
adc
fcmove
clc
xor
cmp
cs
dec
cmc
call
or
push
aad
add
outsl
mov
and
clc
ljmp
pop
pop
int
and
xor
std
and
push
nop
out
jo
cli
and
pop
push
jne
dec
mov
sbb
adc
add
and
jne
mov
pop
imul
cmp
cmpsb
adcl
add
rcrl
jecxz
in
lahf
cmp
and
popf
mov
mov
push
pop
decb
xlat
mov
movsb
push
movsb
xchg
inc
mov
pop
frstor
aaa
imul
cltd
pop
sbb
negl
pop
sbb
or
out
in
repnz
push
shr
mov
loop
out
fildl
xor
mov
pop
jecxz
mov
adc
sbbb
lret
imul
mov
lock
in
mov
xchg
push
sbb
sub
in
sub
dec
mov
cmp
dec
mov
lods
shl
ja
test
shlb
jge
gs
je
jle
int
sarb
add
out
hlt
fsts
lahf
faddl
mov
sub
arpl
push
cli
inc
jg
out
test
lea
jmp
mov
mov
or
xor
out
ficoms
jns
sbb
inc
scas
adc
je
rcr
into
push
idiv
add
adc
sbb
xchg
aam
lock
fbstp
cld
and
and
push
call
mov
pop
es
pop
dec
or
mov
sub
inc
leave
add
fimuls
shr
dec
and
mov
mov
sub
mov
js
mov
dec
enter
inc
cld
mov
call
sbb
push
cmc
xchg
lods
xlat
xor
xor
int
ljmp
imul
mov
or
inc
sub
cmp
insl
push
test
mov
mov
cmove
pop
out
rcrl
daa
sbbl
andl
xchg
xchg
mov
and
shlb
addr16
pop
mov
sbbl
imull
pop
xchg
jne
loope
bound
jl
mov
dec
rorb
dec
cmpsl
lcall
int
shr
xchg
xor
out
rcrb
xchg
xor
cmp
mov
fstpt
in
insl
xchg
jns
rol
mov
and
aad
popa
mov
adc
popa
outsl
jno
mov
add
les
ljmp
daa
int
sub
sbb
push
enter
sub
icebp
fstl
aas
fldt
pop
jno
mov
mov
inc
and
jns
add
dec
scas
pop
fsubrp
aad
sub
cltd
jge
cmc
repz
xchg
in
out
lret
clc
dec
aas
mov
add
xor
push
add
and
outsl
push
inc
inc
lea
xchg
jp
or
mov
in
dec
jnp
or
xchg
push
cmp
idiv
shr
daa
add
mov
loopne
stos
cli
jnp
and
fldt
mull
std
mov
jbe
loopne
add
lea
outsl
cs
or
enter
jp
icebp
das
in
dec
push
mulb
mov
jecxz
mov
xor
jno
and
xchg
iret
dec
hlt
adc
and
jns
lods
jecxz
jno
mov
fwait
push
jge
pmaxsw
jo
loopne
out
mov
lds
mov
jmp
enter
cli
mov
sbb
in
push
mov
dec
mov
pop
clc
clc
repnz
das
mov
pop
jo
out
jnp
enter
sbb
stos
inc
testl
negb
jb
nop
shl
ja
xchg
mov
add
cs
push
adc
inc
stos
out
xlat
mov
mov
out
fldenv
shl
fists
rcrl
scas
stos
mov
mov
sbb
push
dec
pop
incl
jg
xlat
mov
iret
std
push
ret
jle
mov
test
xor
xlat
outsb
lods
scas
inc
js
sbbb
mov
fs
lret
cmp
push
and
adc
enter
push
aam
adc
jbe
inc
add
sbb
or
and
or
mov
gs
xor
dec
cmpsl
test
fwait
push
shlb
shl
mov
add
cmpb
ret
sub
adc
jecxz
lea
fsubs
aaa
pop
mov
dec
xchg
cmpsl
lds
inc
popf
sub
jns
xor
sub
sahf
inc
cli
aam
sub
jg
sbb
and
push
mov
movsl
or
mov
sub
mov
push
jl
jbe
and
sub
lea
mov
fildll
adc
xchg
shrb
lahf
cmpsl
or
dec
in
mov
jmp
add
inc
cmp
adc
outsl
mov
push
mov
xor
inc
jg
lcall
jg
pop
fistpll
rcll
mov
inc
fnstcw
push
push
mov
cmp
hlt
and
fdivr
dec
cmp
mov
mov
or
add
popf
les
push
and
cli
test
fwait
sbb
adc
pop
xor
and
cmpsb
xor
pusha
adc
inc
add
nop
cmp
les
xor
mov
adc
lds
rcl
mov
fstpl
pop
test
fsubp
pop
cmc
inc
aas
pop
xor
repz
mov
mov
shlb
cmp
repz
push
rorl
fnstsw
lcall
or
push
adc
mov
scas
imull
iret
out
mov
and
fistps
jmp
pop
je
push
test
ja
jge
int
or
movsb
sarb
lcall
xor
addr16
lcall
xor
jge
push
shlb
pop
bound
pop
imul
mov
mov
pop
pop
push
rcrb
mov
jno
mov
fstp
xchg
adc
and
mov
xlat
xor
xchg
rcrb
push
mov
xchg
out
test
and
adc
je
fadd
xchg
inc
add
lcall
add
in
enter
and
xchg
pop
icebp
or
sbbb
jbe
xchg
jg
push
lds
call
jmp
pop
test
int3
jmp
mov
dec
bound
lahf
out
loop
or
lods
js
sbb
mov
loope
mov
movsb
adc
cmp
xor
sarl
repz
mov
loope
fidivrs
aaa
sbb
or
cwtl
jg
xchg
addr16
mov
mov
push
in
sub
aaa
sub
int3
jmp
fdivl
dec
add
mov
lock
mov
dec
inc
mov
fadds
push
test
xchg
shll
leave
in
pop
jb
and
push
mov
cld
add
out
mov
mov
fdivrs
mov
xchg
out
div
and
pop
jne
aad
xor
loop
rorl
sbb
in
inc
enter
cmpsl
int
mov
sbb
mov
nop
or
xchg
incl
sti
jnp
sbb
add
xchg
das
cmpsb
dec
movsb
inc
xchg
bound
cmpb
cld
in
push
add
sub
add
fdivrs
push
popf
fldt
lods
jmp
addr16
or
pop
movl
push
jb
inc
mov
daa
mov
lcall
push
fcoms
les
and
gs
pop
ja
xor
adc
adcb
mov
adc
sbb
stc
or
mov
cmp
mov
pop
pop
inc
mov
jl
or
addr16
dec
nop
jo
fisttpll
fistpll
add
aam
popa
sbb
loopw
les
aaa
out
mov
out
adc
cs
ret
push
xor
je
sarl
xor
fnstcw
push
sbb
xor
xor
in
pand
mov
dec
sub
mov
xor
std
add
mov
ja
xchg
sub
lds
mov
jp
out
rol
sbb
lds
dec
sub
lds
outsl
test
push
in
push
sub
test
adc
arpl
mov
popa
lret
dec
jbe
jno
adc
pusha
cmp
inc
mov
cld
jbe
xor
jbe
into
aaa
test
shr
add
add
imul
mov
push
aaa
pop
inc
jae
leave
jo
rcl
jle
sub
jge
push
xchg
sub
adc
jmp
repz
add
ss
in
push
push
pop
mov
and
je
inc
push
ja
xchg
call
out
adc
mov
arpl
mov
mov
clc
or
popf
or
aad
out
xchg
cld
sti
jge
pop
mov
pop
and
jmp
lret
je
out
inc
jg
and
mov
mov
sub
or
pop
rcrb
stos
pop
repz
cs
fcoms
mov
jle
dec
lods
jp
xor
aam
stos
clc
or
xchg
sub
jae
insb
jnp
xchg
or
push
xor
lock
add
jb
arpl
je
inc
test
cmpsb
xchg
bound
bound
call
pop
sarl
push
dec
mov
adc
icebp
daa
scas
jbe
popf
pushf
xor
sub
xchg
or
mov
lock
das
dec
jge
dec
outsb
enter
pushf
fsubl
and
add
clc
std
and
xchg
mov
mov
inc
es
fildll
repz
insl
cltd
mov
add
jbe
xchg
mov
inc
pop
js
xor
or
pop
pop
cmpsl
outsb
xor
cld
clc
jns
push
fsqrt
xchg
in
sar
ljmp
cli
xorl
sarb
outsb
mov
hlt
repnz
xor
pop
adc
sbb
mov
or
sub
call
call
inc
ror
lods
jnp
pop
xchg
jg
clc
pop
push
xor
pop
mov
leave
sti
or
mov
sahf
int
inc
test
add
cmpsl
xchg
jp
inc
mov
repnz
dec
dec
xchg
mov
ljmp
mov
dec
mov
pop
out
pop
dec
dec
push
inc
cli
imul
xchg
mov
fstps
xchg
adc
loope
mov
sub
int
pop
inc
sbb
adc
popa
mov
in
pop
push
pusha
mov
dec
jb
js
ud1
add
jmp
adc
jne
adc
mov
test
adc
inc
jg
lret
lods
sub
cs
mov
ret
pop
jmp
add
sub
cmp
pop
in
push
sbb
xor
ss
sub
gs
mov
pop
add
shll
and
js
lahf
jae
sub
fists
dec
jb
push
mov
jge
cmp
pop
psubsb
add
pop
xlat
jg
roll
ret
xor
hlt
pop
push
dec
ljmp
lret
push
pop
mov
stos
idiv
mov
test
jns
std
xor
aaa
std
mov
lret
xorl
push
jno
adc
hlt
cmpsl
inc
cmpsb
pop
jecxz
stc
adc
test
pop
test
sahf
aaa
jns
lods
or
es
sbb
and
jle
insl
aaa
and
ljmp
cmp
mov
cwtl
loope
lds
lds
mov
scas
popl
lret
xchg
mov
clc
or
mov
sti
scas
das
sub
inc
jo
sbb
pop
jp
inc
sub
add
leave
in
mov
pushf
loopne
jl
or
mov
mov
lret
and
jo
jbe
lret
fdivrl
cmp
data16
mov
mov
cmpsb
cmp
and
js
fimull
xlat
jo
inc
js
sub
and
jl
mov
pop
nop
push
lods
or
in
mov
and
inc
xor
mov
cltd
cmp
sub
and
jne
repz
sbb
pusha
pop
mov
pop
fisttps
cltd
sahf
notl
xor
ficoml
je
sbb
sub
push
lea
inc
xlat
jnp
cmpsl
xchg
out
sub
popa
jbe
daa
repnz
push
push
add
cmp
lods
cmp
xchg
js
jne
inc
int3
inc
ss
rclb
loopne
sub
stos
incl
rol
and
push
push
jmp
imul
sub
jb
out
cli
dec
pop
mov
mov
sub
or
cmpps
sub
mov
push
cmpsl
out
mov
lods
arpl
jge
sbb
clc
popf
push
int3
inc
lea
loope
int3
out
call
out
into
sub
push
mov
dec
stc
iret
mov
in
data16
mov
jmp
hlt
loopne
pop
shr
outsb
mov
test
faddp
call
mov
imul
movsl
xchg
das
movd
dec
mov
call
push
push
inc
repnz
js
mov
xchg
jb
xchg
pusha
mov
and
rolb
movsl
pop
xor
add
or
jae
push
dec
imul
cld
inc
ret
xchg
sbb
push
std
jb
je
or
insb
rcrl
fstp
sbb
sarl
test
popa
cmp
bound
xchg
cli
shrb
leave
incb
cmp
stc
jns
stc
xchg
jg
fcomip
mov
js
scas
xor
xor
push
and
xchg
jecxz
push
dec
xchg
push
push
or
call
cmp
call
inc
lcall
pop
test
scas
loopne
and
inc
push
jg
jbe
mov
inc
push
lods
shrw
ljmp
jmp
fistpll
enter
pop
jg
cmp
push
xchg
dec
jmp
imul
add
mov
outsb
sahf
lahf
sub
scas
push
sub
mov
sub
sbb
push
int3
pop
cs
add
xchg
push
int
mov
jb
push
xor
cs
add
xchg
dec
and
scas
aam
or
scas
orb
mov
ja
mov
fisubs
pop
pusha
scas
push
cltd
cmpb
out
pop
outsb
mov
imul
mov
mov
pop
mov
cmpsb
ss
inc
adcb
jecxz
mov
ds
or
mov
jmp
out
pusha
pushf
jne
inc
push
adc
mov
mov
ss
push
insl
iret
mov
push
es
jmp
and
stc
mov
cmpsb
repz
push
lds
cmpsl
cmc
in
mov
xor
mov
cmp
inc
lods
imulb
jo
adc
jb
xor
and
mov
fistl
jae
js
lods
push
inc
insl
pcmpgtb
inc
sbb
fstpl
xor
mov
enter
mov
push
out
inc
pushf
mov
jle
xor
mov
jp
sbb
adc
scas
inc
jb
mov
pusha
push
push
jb
mov
decb
ss
and
adc
adc
test
and
fldl
sub
dec
stc
int
dec
in
xor
sub
movsl
mov
xor
std
mov
pop
std
mov
js
jg
sub
sbb
push
inc
xchg
out
arpl
xchg
xchg
js
add
mov
or
ja
mov
dec
push
scas
insb
cmc
pop
and
out
inc
pusha
cmp
xchg
mov
cs
hlt
shll
xchg
fmuls
and
dec
add
add
pop
stos
cli
mov
mov
icebp
aam
fidivs
sbb
stos
int
cmp
insl
ret
push
addb
inc
nop
jp
cmp
pushf
insb
fs
sub
sub
ret
xchg
lods
push
push
or
inc
jp
stos
jl
repz
dec
jmp
movb
mov
xchg
js
mov
inc
test
push
outsb
inc
inc
dec
pop
add
inc
out
pop
fwait
pop
adc
cmp
xor
or
fistl
mov
adc
mov
sarl
adc
pop
out
mov
fisubrs
xchg
push
jmp
ds
jne
mov
jo
lds
sete
jp
jb
mov
enter
std
aad
jl
pusha
jns
ret
push
jg
test
or
mov
cmpsb
cltd
mov
jns
pop
dec
xlat
or
loop
ss
pop
ljmp
sahf
sub
adc
out
mov
ss
lret
sub
sbb
ds
pushf
push
xchg
mov
inc
adc
jo
in
notb
ja
adc
push
sbb
xchg
fcompl
test
sbb
aas
mov
xor
mov
add
push
scas
iret
dec
ret
lahf
jmp
les
insb
out
push
aas
add
jb
fcomps
push
dec
pop
test
jg
push
add
and
push
inc
inc
sub
cs
andl
xor
js
add
lods
stos
pusha
js
arpl
roll
test
pop
cmc
inc
pop
int
cmp
mov
cmp
insb
aam
cld
popa
fisubl
mov
xlat
aam
sbb
pushf
jg
adc
sub
ds
mov
or
inc
sbb
xchg
sub
ret
and
lock
sbb
clc
fldcw
fwait
jg
ljmp
in
mov
jae
sbb
outsb
stos
and
insl
mov
xchg
stos
sbb
shlb
mov
xchg
sub
xchg
sarb
int3
call
push
mov
cld
pop
mov
pop
setae
adc
insb
data16
dec
sbb
ja
es
cmp
pusha
mov
jne
subb
and
pop
pusha
aas
push
push
das
scas
dec
in
loop
sbb
outsb
push
jge
lock
out
aad
nop
lods
cmc
scas
xchg
outsl
jbe
inc
mov
rcrb
mov
dec
lea
sahf
jp
mov
sbb
aas
mov
scas
lcall
lcall
scas
cmp
sub
or
sub
call
dec
mov
nop
mov
mov
enter
mov
stc
cmp
jmp
ds
add
scas
xchg
ucomiss
lcall
in
mov
pushf
fstl
lods
push
ret
in
loopne
orb
push
xlat
daa
mov
mov
insb
leave
arpl
mov
mov
jle
xor
lods
jmp
shrl
ret
lret
stos
xchg
in
scas
or
lock
hlt
pop
xor
pop
pusha
pop
jns
repz
mov
test
add
mov
mov
mov
jmp
test
sub
in
aad
out
inc
add
mov
sub
leave
ds
lds
loop
mov
push
iret
xchg
je
mov
cmp
xorb
add
mov
sub
cli
lret
mov
sub
pop
xchg
jl
jbe
addr16
or
mov
xor
imul
mov
out
rorl
sbb
push
mov
mov
push
mov
ja
push
ljmp
inc
cmc
daa
fsubrs
mov
xchg
add
lds
dec
xor
repnz
in
sub
xor
adc
xor
scas
xor
int3
out
into
cli
cmp
lret
loop
lds
movsb
outsb
mov
xor
sub
popa
lds
jle
sbb
cmp
jp
add
pop
and
aad
movsl
sarb
mov
fildll
push
sbb
mov
nop
std
push
xchg
sub
inc
out
loop
scas
mov
adc
and
adc
lret
or
lret
dec
fs
pop
lret
lds
cs
test
bound
push
sbb
sbb
aas
fsubrp
push
dec
jae
cmc
mov
mov
call
mov
inc
jmp
pushf
jge
ffree
lahf
shl
and
fwait
add
addb
dec
inc
push
mov
scas
dec
add
js
mov
jl
stos
jmp
push
ret
push
push
dec
jb
fcomps
jns
fnstsw
ss
and
cmp
je,pt
xor
adc
sub
mov
push
cmp
add
mov
xchg
loope
xchg
mov
and
loopne
int3
inc
das
js
sub
aas
ss
mov
fists
push
in
cmp
and
fldt
test
mov
ds
jb
ds
and
lock
adc
insl
sbb
sti
rcrb
inc
mov
mov
pop
mov
push
dec
adc
sbb
cmp
inc
ret
sbb
imul
int3
enter
or
scas
jae
sahf
lcall
jle
xor
ret
stos
cmp
xlat
jbe
mov
mov
out
jl
jb
push
mov
nop
mov
push
adc
pushf
lds
pushf
push
test
testb
jl
test
add
xchg
imul
popf
fadd
mov
jp
out
push
pop
fdivl
push
movsb
fidivl
jmp
lock
mov
cli
cmpsl
test
ljmp
loop
and
mov
in
test
outsl
fsubrs
sbb
mov
mov
icebp
sbb
int
mov
sub
rcrb
xchg
or
das
fsubl
or
jle
add
fstpt
addr16
xchg
push
adc
cmp
sbb
jo
mov
loope
fnstcw
or
leave
clc
mov
out
dec
push
mov
test
sub
jns
aas
in
jmp
cmpsb
je
mov
ret
inc
push
je
add
mov
enter
xor
add
and
xchg
dec
hlt
cmp
inc
rcll
sarb
inc
out
scas
cmpsl
inc
and
lret
enter
sahf
mov
mov
test
iret
in
aam
repz
and
xchg
dec
mov
pushf
push
pop
in
pop
in
jns
cs
in
out
enter
xchg
adc
popf
push
data16
inc
push
xor
xor
mov
hlt
sub
mov
shrl
test
and
ss
jae
dec
pop
cmpsb
repz
fsts
mov
call
jmp
outsb
add
ss
sbb
jecxz
xchg
mov
inc
mov
repz
mov
jb
jae
add
jecxz
dec
sti
cwtl
pop
in
nop
in
lret
sub
add
outsl
add
pop
lret
mov
adc
rolb
pop
jge
sbb
mov
cli
bsr
pushf
sbb
adc
xacquire
jg
xchg
sarb
out
lds
subl
rcrl
mov
sub
pop
add
cmc
pushf
pop
sbbl
fcmovnbe
dec
jns
lods
dec
shll
out
adc
pop
enter
mov
out
sar
push
outsl
gs
fs
stos
fnstenv
dec
ja
sub
mulb
or
pop
push
sub
in
cmp
push
and
push
arpl
pop
mov
xor
loopne
mov
outsl
addr16
mov
jle
dec
test
xor
fstp
enter
ja
ja
jg
pop
xchg
jno
push
and
xchg
jecxz
mov
lea
mov
clc
adc
test
mov
or
lahf
mov
sub
or
and
leave
xor
push
mov
mov
pcmpgtb
fsubl
mov
mov
pop
sbb
jmp
arpl
pusha
dec
sub
hlt
lods
dec
jp
dec
cltd
cmp
push
dec
les
je
or
cmpsb
push
jns
out
mov
mov
test
lods
cmp
shlb
sub
das
pop
fs
and
mov
sbb
fistpll
xchg
push
clc
daa
jae
lock
push
adc
sahf
std
mov
mov
cld
jecxz
das
lods
pop
jnp
lock
sub
add
out
xor
stc
push
ja
sahf
lahf
push
mov
ds
mov
lock
mov
insl
mov
aaa
or
push
sub
cld
std
push
loop
dec
sti
xchg
push
xchg
inc
stc
into
scas
mov
shlb
push
fsubs
xor
aaa
add
inc
imul
adc
ljmp
jno
adc
adc
pop
out
mov
mov
push
test
inc
repnz
cs
scas
add
mov
rcr
lds
cmp
sti
ror
mov
push
xlat
push
or
das
mov
sbb
mov
fisttps
mov
or
imul
pusha
mov
pusha
mov
lea
xor
cmp
ja
adc
xchg
jb
dec
in
shl
mov
xchg
sbb
aad
lods
js
fstpl
fisttpll
jge
call
and
mov
jmp
jne
shl
jae
pop
mov
shrl
pop
sbb
icebp
fucomp
mov
pop
dec
sahf
jne
or
cmp
cmpsb
js
popf
iret
jp
addr16
mov
sets
or
sub
or
pop
test
inc
hlt
xchg
sbb
jp
pop
mov
xlat
fsubrl
push
inc
icebp
inc
cs
mov
lret
sub
pusha
repz
cmc
xlat
or
cmpsb
and
add
lock
mov
adc
in
cwtl
pushf
notl
or
and
shll
jae
loop
cmpsl
les
iret
mov
lods
xor
cmpsb
or
pop
daa
push
add
and
ss
sub
cwtl
scas
mov
jno
xchg
out
cmp
aam
mov
sub
dec
mov
pop
and
mov
jge
and
aas
out
mov
icebp
pop
cld
mov
add
push
call
jnp
push
out
pop
cmc
ficomps
jmp
lds
pop
sbb
movsl
dec
push
repnz
mov
sbb
mov
jl
fstpl
dec
sbb
dec
cmp
lret
lahf
push
mov
dec
mov
out
push
cmp
sarl
push
xor
and
jbe
push
push
cmovs
and
fwait
aam
dec
jle
nop
ret
fucomi
mov
xchg
push
sub
pop
aad
inc
dec
dec
jl
mov
jns
decb
adc
mov
pop
fwait
sbb
xchg
insb
cmpsb
syscall
mov
mov
mov
mov
mov
cwtl
xchg
xor
rolb
insb
mov
adc
pop
inc
repnz
outsb
add
mov
xchg
pop
dec
ljmp
or
cs
fs
pop
maskmovq
arpl
lahf
stos
push
dec
mov
loop
pusha
divl
repz
jle
mov
pop
bound
mov
bound
sub
nop
test
outsb
pop
mov
mov
jge
sub
or
lods
sti
cmpsb
pop
push
fists
js
jmp
mov
sbbl
xor
xlat
mov
stc
push
mov
data16
ret
jb
cmp
xchg
mov
les
ds
cs
je
repnz
cltd
insl
ljmp
cmc
test
cmp
cmc
dec
or
pop
pushf
fdivrl
lcall
mul
pop
outsl
dec
lea
mov
fcoms
pop
add
int
fldl
scas
mov
out
cmpb
jecxz
call
out
adc
loopne
mov
loop
repnz
and
pushf
inc
jae
lcall
push
sbb
mov
outsl
jmp
xchg
xor
movb
inc
add
into
xor
setns
cmpl
jo
imul
inc
cmp
xchg
movl
inc
sub
mov
mov
cmp
shlb
in
sub
cltd
push
in
clc
enter
jne
jge
jbe
test
pusha
fs
or
aam
das
or
inc
mov
inc
mov
dec
subb
jmp
pop
push
push
lods
sahf
add
cmp
or
outsl
xor
and
int
sub
stos
jbe
lret
adc
xchg
call
popf
fwait
mov
xlat
add
xor
in
dec
pop
push
mov
cmp
test
dec
add
int
insl
in
les
and
nop
inc
test
jl
xchg
scas
inc
insl
mov
repnz
or
cli
dec
add
subl
mov
sub
push
imul
or
arpl
scas
jge
pop
pop
mov
xchg
loopne
cwtl
ds
xchg
movsl
sbb
icebp
mov
data16
or
push
lods
or
popl
sub
cmp
cmp
hlt
dec
imulb
lahf
sarb
fsubrl
test
lahf
inc
add
cmpsl
in
ret
and
out
sbb
aaa
mov
aas
aam
lret
int3
pop
into
cmp
add
gs
push
inc
fsubl
lods
mov
es
mov
sti
adc
xchg
repz
push
xor
in
mov
mov
int3
and
movsl
in
sbb
xchg
fnstenv
push
push
xchg
gs
js
lret
adc
mov
in
test
mov
movsb
mov
jle
lods
pushf
cmpsl
jae
ss
aas
subl
fisubrs
push
sub
std
mov
sbb
inc
dec
cmp
adc
push
ss
cmp
out
fcomip
cwtl
cltd
sub
or
cli
cmc
xchg
sub
loope
lock
mov
scas
shl
arpl
xchg
sbb
mov
xchg
notl
pop
cmp
or
mov
mov
jge
arpl
add
gs
std
push
jl
fldt
push
hlt
out
sbb
ds
pop
adc
call
sbb
jecxz
insb
fadd
push
sub
sti
stos
and
aam
mov
dec
out
pop
lods
dec
sbb
sbbl
repz
mov
jno
pop
mov
sbb
out
ljmp
pop
incl
test
cld
cmp
push
int
outsb
insl
test
addl
nop
jns
addr16
out
xchg
jbe
fnstcw
sbb
mov
push
xlat
mov
add
inc
dec
inc
dec
sbb
push
jecxz
jnp
xchg
jecxz
push
mov
lahf
cld
xor
jae
adc
scas
adc
insl
in
add
shrl
and
pop
cwtl
shlb
dec
jnp
pusha
bound
popa
clc
cmc
mov
adc
push
inc
insl
sub
inc
fcoml
pop
cwtl
jnp
je
add
mov
pop
pushf
add
add
or
push
fldcw
jbe
mov
mov
ret
data16
dec
and
jb
ds
data16
incb
cmp
push
cltd
push
mov
loope
mov
stos
les
sti
je
int
push
inc
push
adc
dec
cltd
sbb
out
inc
gs
xor
fdivrl
cmp
pop
and
ljmp
jo
dec
jmp
flds
leave
or
cmp
clc
mov
fidivs
mov
es
mulb
loopne
scas
popa
subb
dec
and
int3
insl
loopne
mov
cltd
add
cmpsl
push
int3
inc
movsb
pop
aas
or
push
pop
add
test
in
inc
outsb
das
xchg
mov
fcmovnb
mov
xlat
std
xchg
mov
push
adc
out
pop
in
loop
push
or
jl
xchg
sbb
add
call
popa
sub
std
mov
fstps
ss
loopne
pop
cmpsb
or
lods
aam
aam
cmp
add
movl
cli
in
and
sahf
loop
xor
push
sarb
or
pop
imul
das
dec
sbb
xchg
push
imull
jp
or
inc
out
ljmp
add
or
pop
or
mov
shr
dec
fisubrs
pusha
out
imul
jle
mov
outsl
fstpt
repz
xchg
push
mov
enter
scas
and
xchg
push
xchg
pop
push
je
neg
xlat
lret
test
or
lcall
cmpsb
testb
mov
repz
imul
adc
mov
enter
lret
mov
and
xor
cmpsl
mov
cmp
pop
mov
call
sbb
jno
mov
bound
sbb
das
or
pop
jbe
or
mov
ret
push
sbbl
fsubs
pop
sbb
cli
pop
cwtl
push
and
add
xchg
lock
cmp
fwait
loopne
add
pop
fcmovnu
push
jg
sbb
jg
and
xor
push
xor
mov
sub
arpl
into
cmpsl
or
fisubs
loopne
push
leave
push
mov
xchg
ss
popa
or
mov
mov
jbe
pop
fwait
push
loop
lods
test
xlat
lcall
mov
push
addr16
sti
jb
and
jge
dec
movsb
cli
xchg
push
sbb
pop
fs
sbb
stos
cs
xlat
jo
ja
pop
inc
cmp
arpl
dec
xchg
sarl
push
mov
push
mov
xor
add
mov
stos
pop
sbb
fsubl
insl
int
xchg
jb
in
stos
inc
add
aaa
pusha
xor
inc
cli
sbb
fidivl
cmpsl
rclb
xor
mov
cwtl
and
inc
lret
push
daa
insl
cld
lret
bound
mov
pusha
cld
inc
out
mov
mov
std
xlat
xor
cltd
add
in
mov
mov
mov
mov
jb
cmc
ds
test
sbb
fcomps
mov
ljmp
test
inc
and
outsl
mov
push
leave
cmp
or
inc
rorl
jp
xchg
out
pop
iret
out
imul
xlat
or
cmpsl
xchg
fcomi
movsb
push
sub
lcall
sarb
sbb
out
leave
hlt
lock
mov
dec
push
sbb
jg
inc
es
sahf
adc
inc
mov
loopne
faddp
inc
mov
int
cmp
pop
std
iret
sub
pushf
mov
jp
and
lds
xor
cli
mov
sub
add
leave
mov
lods
hlt
popa
mov
inc
mov
out
cmp
mov
ficompl
xchg
lret
sbb
xor
stos
xlat
push
dec
or
pop
jns
aas
sub
scas
icebp
movsl
pop
fsts
filds
dec
enter
push
inc
daa
cmp
stc
cwtl
pop
or
in
xchg
mov
inc
dec
pop
adcb
and
enter
jmp
insb
jo
jae
jb
lock
pop
jb
icebp
sarb
mov
pop
imul
loopne
fcomps
lret
push
fwait
jns
sub
sbb
adc
out
cli
leave
dec
cwtl
cmp
lret
xchg
sti
jbe
pop
and
sbb
daa
cwtl
shll
cltd
xor
aad
test
in
shrl
fsubrs
jge
and
insb
sbb
int
loopne
sahf
mov
loope
sub
xor
xchg
push
ret
jns
xor
mov
mov
xchg
jo
push
in
stos
adc
add
sbb
ret
cwtl
dec
test
mov
data16
push
inc
dec
out
call
inc
jle
rcl
leave
mov
movsb
jne
adc
jne
pop
int3
bound
sbb
mov
call
mov
or
inc
mov
jno
push
je
jns
shr
mov
int3
adc
gs
nop
jae
rcr
mov
mov
xchg
jnp
fsubp
cld
lock
mov
jae
in
addb
shr
jnp
cmpsl
xchg
jp
jge
pop
add
dec
jnp
xchg
pop
pusha
out
and
sub
inc
add
cmpsl
ja
sbb
and
jae
push
dec
mov
test
mov
jb
and
jne
sbb
or
shr
je
mov
fdivp
jg
or
mov
mov
or
iret
iret
mov
jecxz
inc
jl
data16
lods
xchg
sbb
iret
jb
mov
push
mov
mov
or
adc
inc
hlt
jo
jns
or
popa
sub
or
xchg
mov
mov
repnz
stos
adc
inc
dec
nop
je
fdiv
mov
adc
fcoml
xchg
loope
orl
xor
mov
fcomp
fmuls
std
mov
in
daa
mov
repz
mov
arpl
cli
stos
icebp
add
jne
sbb
into
call
mov
push
aaa
jae
jg
add
inc
int3
jns
fistps
push
flds
add
mov
mov
dec
mov
cmpsb
or
pop
cmp
scas
mov
mov
hlt
sbb
std
pop
mov
pushf
or
cmp
cmp
iret
and
push
out
arpl
jmp
out
aas
addr16
dec
in
mov
adcl
pop
pop
outsl
jmp
ss
push
mov
dec
xor
fidivrl
push
jecxz
pop
and
hlt
lahf
xor
dec
inc
shlb
inc
cs
cmp
jl
adc
lock
rcl
fs
into
jle
mov
addr16
adc
mov
mov
xchg
addl
aaa
xor
jg
or
cmp
jle
dec
aam
sub
stos
xchg
ret
push
xchg
repz
push
in
mov
jae
push
xchg
movsb
repnz
and
push
sbb
push
iret
jno
popf
jmp
shll
push
lret
neg
jle
lds
xor
jae
bound
gs
lret
aaa
scas
mov
xchg
push
pop
mov
xchg
pop
lock
mov
cmp
js
test
cmc
inc
or
jnp
mov
cli
add
movsb
inc
cmc
add
add
pop
mov
mov
pop
jmp
aad
sbb
movsb
int3
jp
dec
nop
pop
mov
push
pop
sbb
mov
leave
xchg
popa
and
push
hlt
inc
mov
test
push
or
gs
jae
cmc
icebp
pop
andl
mov
pop
call
jb
jno
xchg
sub
in
hlt
nop
pop
xchg
sbb
iret
test
lods
xor
imul
mov
leave
mov
cmp
test
loop
inc
clc
pop
in
fisttpl
loop
test
push
jle
mov
cltd
sub
or
xlat
sub
mov
into
orl
xchg
add
pop
inc
and
mov
push
inc
shrl
mov
mov
xlat
xchg
mov
rolb
fwait
xchg
sbb
jge
cmp
sbb
cmp
loop
xchg
andb
add
xchg
or
push
jmp
sahf
idivb
mov
cmp
push
mov
add
jo
fadds
cmp
movsb
mov
sub
out
test
jle
push
outsb
imul
stos
cltd
mov
mov
and
or
mov
pop
dec
inc
push
rorl
cmpsb
adc
js
addr16
test
jge
xchg
in
cmpsb
stos
inc
rclb
incl
ljmp
xchg
test
xor
pop
dec
movsl
jnp
add
lret
js
fisttpl
pop
cwtl
add
adc
negb
mov
inc
sbb
adc
popa
out
rcr
imul
test
xchg
shll
shrb
popa
aam
jns
sub
aam
jb
sti
inc
or
stos
mov
aas
es
enter
in
inc
lahf
inc
in
das
cwtl
jecxz
inc
push
mov
and
gs
sub
cmp
int3
je
xchg
xor
cmp
inc
mov
add
sub
std
xlat
popa
mov
mov
ljmp
int3
rcl
ret
sub
repz
cmc
xor
lea
lcall
out
ret
push
pop
rcrl
xchg
jmp
shlb
jne
inc
cld
mov
call
movsl
jns
addb
push
cmp
outsb
aas
lods
dec
lahf
ja
xor
push
cmpsl
cmp
mov
or
dec
add
repnz
ret
sub
mov
lock
mov
xorl
mov
xor
mov
rorb
loopne
mov
or
inc
sub
pop
adc
sbb
icebp
gs
xchg
stc
push
fsubl
and
std
sub
aas
xor
test
adc
pop
test
or
or
mov
adc
push
in
enter
enter
jecxz
xchg
jno
adc
push
jb
sbb
int3
shrb
mov
jg
int
adc
call
jg
xor
lea
inc
pop
and
or
and
stc
mov
push
stos
fistps
jb
fsubs
out
mov
stc
lds
fidivl
adc
leave
or
pop
pop
lahf
dec
leave
insb
xlat
aam
xor
adc
adc
pop
iret
ret
in
call
fdivs
pop
adc
movsl
or
out
stc
cmp
adc
lret
insl
out
out
inc
pop
mov
stc
incb
cs
mov
xchg
lods
jecxz
addr16
fwait
cmp
cli
hlt
sub
stc
xchg
push
ficomps
or
pop
rorb
or
push
mov
insl
nop
repnz
xchg
ja
call
gs
arpl
repnz
scas
iret
test
and
jns
outsb
fidivrl
xchg
loopne
jmp
and
add
fsqrt
shrl
dec
push
dec
scas
shrb
mov
mov
shrl
cmp
pushf
mov
incb
addb
inc
inc
js
ret
cmp
add
jo
out
push
mov
arpl
leave
adc
xchg
ja
movq
or
or
pop
stos
pushf
dec
sub
call
adc
jae
push
cmp
mov
fisubl
lock
mov
daa
or
adc
jmp
and
and
xorl
sti
push
std
rclb
stc
pop
xchg
lahf
dec
push
fldl
fcoml
loop
push
sbb
rcrb
aaa
lahf
int3
cwtl
lods
jbe
pop
lea
and
scas
ljmp
aas
add
roll
dec
push
iret
ljmp
push
loop
sarb
add
inc
fisubs
mov
push
mov
lods
out
push
mov
jo
cmpsl
dec
arpl
pop
dec
sbb
adc
jbe
jb
dec
pop
movsl
movsl
jecxz
aad
push
add
inc
in
nop
psubusw
test
and
add
or
dec
and
jbe
pop
pushf
fs
xchg
jbe
mov
sbb
lcall
sub
int3
subb
fidivs
data16
enter
and
movsb
add
sahf
lret
jmp
push
idiv
jmp
inc
mov
repnz
cmp
pop
fcomps
push
add
aaa
pop
insb
pop
inc
les
out
cmp
xor
or
ss
xchg
sbb
mov
or
pop
xchg
lcall
les
cltd
pushf
dec
or
cmp
pop
cmc
gs
gs
inc
fstpl
or
xchg
fisubrs
sbb
cmpsl
pop
adcb
int3
movsb
sbb
repnz
es
and
in
out
sub
pop
push
xchg
das
scas
arpl
jbe
mov
dec
test
jnp
jg
in
mov
mov
ret
lods
mov
adc
into
pop
insb
movsb
dec
daa
call
pop
imul
roll
test
xchg
rcrb
jmp
add
ds
lret
and
stc
mov
mov
dec
inc
push
and
or
jbe
or
fsubp
test
es
cltd
test
sub
je
sub
sti
movsb
es
cmp
mov
adc
mov
stc
jle
pop
mov
and
dec
push
lahf
les
fidivs
mov
xor
loope
jno
cmp
sub
fisttpl
or
fisttpll
jl
in
int
rcl
dec
jae
jmp
sbb
sbb
cld
shlb
xchg
scas
jecxz
inc
cmp
lret
pop
ds
notb
lret
mov
repz
testb
jg
scas
rcl
loopne
adc
jne
hlt
mov
icebp
cmp
sub
dec
and
mov
dec
iret
div
out
pop
jp
inc
xchg
iret
fistps
rcl
test
push
push
fmuls
mov
mov
std
push
sub
xchg
bound
out
cld
scas
scas
add
mov
enter
jecxz
fwait
push
mov
jno
push
jp
or
pop
sbb
roll
pop
mov
xor
data16
jno
insl
ss
insl
mov
into
ljmp
imul
fisubs
xor
leave
jmp
ds
inc
daa
push
sub
and
test
dec
pop
inc
pop
les
sub
mov
hlt
inc
mov
fiadds
inc
dec
inc
sbb
sbb
and
decl
stc
cmp
jge
dec
lcall
push
scas
int3
ljmp
movsb
or
fiaddl
dec
std
aas
test
add
inc
xor
leave
cs
pop
cmpsl
jge
dec
push
fs
push
stos
xchg
mov
insb
into
lods
test
cmp
aad
sub
dec
xchg
sahf
pop
mov
mov
outsl
insb
jmp
jmp
inc
ljmp
fbstp
popa
add
repnz
repz
and
inc
mov
mov
sub
iret
pushf
ljmp
mov
nop
dec
mov
cwtl
mov
jae
outsb
jo
pandn
push
sbb
mov
push
sbb
movswl
enter
fisttps
std
test
gs
and
push
mov
pop
dec
stc
in
stos
lea
mov
aas
fistps
mov
es
loop
push
fldcw
mov
push
jl
shr
cmpsb
stos
ret
push
lds
enter
inc
fwait
pusha
xchg
shl
popf
cmpsl
loopne
mov
repz
mov
sbb
loopne
aam
hlt
and
dec
ret
mov
repnz
mov
xchg
cwtl
cmp
fnstcw
inc
sbb
imul
adc
nop
mov
stos
inc
lret
jns
mov
jo
and
lcall
jne
jl
popf
repnz
loope
sub
popa
lahf
mov
ds
rol
push
nop
subb
mov
pop
push
aad
xor
test
icebp
or
jg
bound
je
test
stos
cltd
mov
mov
ds
arpl
pop
out
push
hlt
and
or
mov
cmp
or
scas
fistl
xor
daa
mov
inc
ss
dec
jg
or
add
jnp
sub
scas
push
jmp
loope
in
xor
adcl
pop
daa
out
jmp
jecxz
loope
mov
dec
xchg
cmp
ror
jno
imul
mov
jb
push
add
pop
xor
popf
fwait
scas
sub
call
mov
mov
aaa
sub
hlt
inc
jg
or
aad
add
fs
in
dec
cmp
mov
mov
out
ljmp
jne
push
inc
jmp
add
ret
test
cli
xor
xchg
lea
jo
aam
jmp
add
xchg
clc
int
sub
mov
loopne
in
out
xchg
lcall
imul
js
roll
mov
callw
lea
adc
cmpsl
outsb
cltd
wbinvd
mov
call
scas
xor
sub
ss
push
sub
pop
cmpsl
and
xchg
sub
adc
sti
loope
xchg
test
sbb
add
xchg
inc
or
test
push
xchg
mov
cmpsl
cmova
cmpsb
pop
add
adc
movlps
lret
popf
dec
lret
mov
cwtl
mov
dec
and
sbb
cmp
inc
scas
xchg
in
pop
stc
cltd
mov
call
pop
mov
pushf
fbld
pop
addl
mov
pop
add
add
lods
cmp
fimuls
testl
test
mov
int3
xor
pushf
or
aam
cmova
out
lods
add
scas
cld
test
lock
je
fs
jno
movb
cs
aas
test
push
xchg
mov
call
sub
ja
lods
push
cmc
sub
mov
sahf
jne
jo
sub
add
xchg
xchg
mov
shrl
jno
cmpsb
mov
pop
dec
fs
stos
stos
xchg
mov
jmp
mov
test
aas
sub
and
inc
xor
int
ljmp
loope
add
outsb
fwait
push
inc
xchg
loopne
hlt
iret
mov
cmp
ret
int3
push
scas
pop
cmpsb
lahf
das
mov
cmp
inc
imul
mov
scas
xchg
idivb
imul
aam
cmpsb
stos
pop
mov
clc
jecxz
add
cld
iret
add
fisubrl
push
dec
outsb
adc
mov
in
jo
pop
movsb
xchg
adc
out
lods
std
in
jp
scas
cmc
std
lcall
call
clc
cmp
cmp
cli
or
and
stos
ja
gs
into
add
mov
push
je
das
popa
idiv
sub
enter
lret
insb
jge
test
inc
mov
sub
lcall
fsubp
push
aaa
ret
xlat
fstl
dec
xor
xchg
movsl
insb
mov
mov
jp
daa
push
dec
xlat
shll
hlt
std
or
pushf
lret
movsb
xor
repz
xor
sbb
notl
cwtl
movsb
sbb
loop
pop
movd
out
sbb
jl
or
test
sub
lods
pop
inc
dec
sub
xchg
jle
jo
mov
or
roll
mov
xchg
pop
mov
out
into
cmpsb
pusha
xor
push
test
fstl
jge
andl
mov
out
pushf
in
lods
mov
div
adc
mov
cwtl
test
push
jge
mov
lret
lcall
xchg
dec
mov
test
daa
in
inc
sti
inc
add
add
test
cltd
mov
jnp
mov
fdivrl
and
imulb
pop
cwtl
test
mov
jg
dec
orps
push
fdivr
js
push
lock
and
lret
xor
jle
ficompl
xor
adc
data16
ja
add
aad
dec
mov
or
mov
push
sbb
mov
lret
cmp
mov
les
lahf
int
mov
cmp
xchg
out
shll
gs
andl
in
jne
inc
dec
jecxz
icebp
pop
push
scas
int3
xchg
xor
aam
lret
nop
adc
pop
jecxz
sbb
xchg
sahf
mov
ret
roll
loopne
sbb
sbb
push
pop
hlt
inc
mov
testb
nop
repz
insl
xor
inc
jmp
mov
add
lea
sahf
call
pop
nop
lret
lock
xlat
mov
sub
cmp
pop
cmc
dec
xor
bound
aad
sub
fsts
pop
jp
pop
pop
xchg
lods
int
cli
insb
xchg
movq
les
xor
pop
inc
adc
sbb
xlat
pusha
lea
arpl
cs
int3
je
es
push
in
ss
xchg
dec
mov
aas
hlt
mov
arpl
sub
lds
dec
mov
sub
sub
cld
test
jg
xor
outsl
icebp
sub
adc
adc
neg
loope
les
push
bound
inc
jp
adc
cltd
inc
lret
inc
test
rcrl
out
sub
and
fisttpll
out
inc
lods
loope
dec
xchg
inc
xchg
out
add
xchg
adc
mov
push
nop
push
push
aaa
test
lods
jae
shlb
loopne
xchg
mov
and
lock
mov
xchg
lock
js
fcomp
adc
pop
arpl
aam
cli
loopne
or
je
cmc
lds
xlat
call
jno
lahf
add
dec
pop
xor
popf
sbb
lods
xchg
call
adc
or
out
fsubr
push
test
adc
and
insl
jae
jmp
sti
addr16
movsl
iret
std
aas
add
jmp
push
in
xor
in
es
or
inc
mov
pop
int3
and
es
ljmp
or
dec
or
jb
fucomp
push
jmp
out
aaa
sbb
add
test
jl
jle
jbe
mov
add
mov
inc
dec
dec
push
jb
cwtl
dec
nop
xor
or
mov
mov
add
loopne
jnp
cmpsb
scas
seta
pop
scas
add
int3
sub
sub
adc
loop
or
mov
xor
dec
dec
mov
jp
lahf
xchg
xchg
in
adc
xor
jb
xchg
push
shrl
pop
cmp
scas
call
push
push
or
or
fnstcw
cs
daa
int
loopne
fstps
sub
push
cmp
insl
sbb
pop
mov
dec
es
mov
aaa
jno
shr
shl
out
ret
or
sbb
arpl
xor
sarb
mov
iret
mov
add
in
imul
and
inc
jnp
int
notb
movsb
sbbl
mov
adc
lcall
enter
sbb
pop
test
push
shrb
xchg
iret
jecxz
adc
pop
je
cltd
sub
sub
cwtl
sbb
inc
fldl
es
fstl
xor
imul
sbb
jo
clc
pop
call
int
cltd
add
add
in
ret
push
or
fildll
push
cmp
mov
subl
and
and
lods
scas
cmpsb
fdivl
mov
inc
call
aam
mov
pop
and
inc
je
dec
jnp
inc
imul
adc
xacquire
clc
inc
mov
pop
xor
ja
push
inc
and
je
mov
push
inc
or
inc
mov
out
cmpsb
xchg
in
or
pop
mov
mov
jle
movsb
cmp
int
popl
pop
data16
mov
mov
pop
inc
xor
decb
jl
push
pushf
test
iret
lock
jle
jle
repz
nop
xchg
popf
stos
mov
pusha
sahf
cmc
pop
movb
movsl
jns
add
jae
out
mov
adc
inc
testb
sti
sub
push
in
loope
hlt
sbb
mov
iret
iret
int
mov
enter
vpshad
dec
mov
mov
mov
jno
and
gs
adcb
lea
ja
push
dec
push
das
enter
push
adc
test
or
push
inc
loopne
pop
xchg
and
xor
cmp
jge
dec
fmull
test
cmp
fiadds
sahf
scas
out
in
int
cmp
pop
mov
xchg
xchg
out
xor
lcall
sub
xchg
xchg
movsl
aad
movsb
jmp
dec
push
pop
mov
push
sti
xchg
or
pop
dec
xchg
scas
in
add
in
shlb
mov
rorb
mov
jmp
call
popa
repnz
cmpsl
popa
and
ret
dec
shlb
push
popf
push
out
xor
clc
xor
mov
push
sub
mov
lcall
or
stos
out
xchg
ficompl
inc
push
imul
push
mov
bound
hlt
loope
test
insb
sbb
mov
cmp
in
in
es
mov
sbb
or
or
inc
or
js
and
outsb
clc
sub
data16
ja
sub
and
les
cmp
loop
outsl
xchg
mov
cmc
mov
mov
or
jp
pop
mov
pop
push
les
in
das
push
sbb
push
outsl
cltd
jbe
inc
ret
xor
push
dec
dec
inc
scas
lock
stc
sbb
mov
int3
fidivrl
mov
int
das
lods
das
cmp
pand
push
sbb
out
sub
or
inc
in
insl
stos
pop
fnstsw
imul
xchg
pop
xchg
mov
sub
cli
sbb
in
jl,pt
sbb
mov
fnstcw
test
cmp
mov
aas
sbb
roll
aaa
pop
fidivs
mov
aad
pop
fidivrs
xor
ret
inc
push
and
fstpt
rcrb
in
repz
stc
xchg
into
insl
insl
push
icebp
pop
mov
sbb
and
mov
sbb
in
int
stos
jl
jp
cmp
fwait
je
lahf
add
inc
mulb
adc
and
mov
fadds
mov
inc
daa
pop
xchg
cmp
add
icebp
sub
shrl
mov
or
adc
jle
xchg
push
lock
filds
or
push
addr16
lods
fsubs
dec
int
mov
iret
jbe
stos
inc
stos
xor
flds
loop
mov
mov
daa
cmp
inc
cmp
add
pushf
or
dec
not
mov
pop
fimull
lcall
adc
movsl
jae
arpl
ret
sahf
xor
aas
mov
rol
mov
and
push
xchg
adc
xchg
dec
pusha
push
dec
cmp
cmp
add
out
ja
rcrb
sbb
add
pop
jl
cmp
jae
pop
mov
sbb
stos
xchg
aas
jne
cmpsb
test
mov
insb
xor
or
lods
mov
jl
fisttpl
vcvtss2usi
xlat
out
dec
jl
add
adc
pop
insl
pop
cmp
add
div
les
imul
push
ror
pop
sub
hlt
daa
roll
mov
lock
mov
inc
xchg
sbb
cld
dec
fisubs
mov
std
push
sbb
shrl
ss
push
jae
mov
push
inc
push
inc
loopne
repnz
fldcw
dec
call
xchg
mov
cmp
mov
in
inc
dec
jns
jmp
jl
lret
or
jge
out
push
push
out
xor
add
insb
in
aam
clc
add
jmp
adc
cmpb
test
xchg
lret
push
rolb
add
jecxz
cwtl
inc
dec
jl
fmulp
cli
stos
jg
scas
inc
adc
push
dec
imul
data16
jo
fsubs
cmpsb
data16
mov
cmc
xchg
lss
sbb
sbb
sbb
push
cmp
xchg
cmpsl
imul
inc
xor
mov
fcoms
shl
inc
sbbb
cmc
push
add
xchg
repnz
shl
lock
sbb
add
xor
inc
cmc
lock
xor
cltd
insb
in
jno
rorl
pop
imul
inc
mov
sub
dec
ret
mov
sbb
cld
push
je
sub
hlt
add
popf
push
shlb
dec
inc
mov
jnp
call
ja
xchg
mov
in
adc
pop
cmp
xchg
push
inc
add
xor
sbb
mov
mov
cmp
cmp
cmovs
pop
dec
xor
mov
mov
jle
mov
mov
repz
test
dec
push
mov
jl
push
pushf
push
mov
adc
popf
sub
jle
or
and
call
mov
or
cmp
sti
call
cmpsb
sar
mov
pop
jno
daa
loope
sub
mov
or
insb
lock
and
in
clc
scas
pop
imul
loop
sub
push
xchg
xor
in
loop
jb
scas
fs
or
mov
jo
or
mov
add
jge
test
pusha
mov
outsl
xchg
bound
sbb
call
xchg
mov
mov
xchg
icebp
push
js
cmp
xlat
in
cmp
hlt
add
mov
xor
fsubr
inc
fisttpll
jbe
cmp
or
daa
in
push
push
mov
icebp
mov
test
lcall
pushf
js
xchg
dec
mov
sar
orb
jle
in
mov
pushf
stc
pop
adc
adc
add
into
hlt
xchg
call
mov
pop
pop
push
jl
cmpsl
push
push
sub
fs
test
mov
cwtl
lret
in
out
mov
fcoml
sbb
rol
je
adc
popf
cmp
icebp
mov
or
aam
cmp
jl
in
jns
bnd
clc
add
mov
pop
ljmp
pop
and
sub
lds
loopne
rclb
ficomps
lods
add
les
mov
lret
xchg
int
dec
pop
outsb
xchg
sub
xchg
jb
dec
and
mov
pop
inc
add
ljmp
scas
push
mov
ret
push
jmp
cmp
in
ljmp
fldcw
sub
cmp
lea
faddp
or
fsubrl
fistps
jo
push
pop
inc
xchg
lods
jbe
lcall
xor
cmp
xchg
and
leave
and
add
arpl
test
loopne
jg
jl
mov
jbe
xchg
dec
sbb
push
fwait
sti
jmp
je
sbb
jne
adc
jmp
testl
cs
testl
xor
pop
fimuls
jge
lods
pop
test
sub
inc
cmpsl
in
or
pop
out
mov
inc
fidivrs
jns
and
aad
shlb
inc
sbb
xchg
push
jbe
repnz
jp
cmp
or
dec
add
adc
xlat
mov
fs
stc
or
dec
mov
jl
xor
push
mov
mov
out
arpl
imul
ret
pop
repnz
mov
add
add
addl
mov
jae
dec
ret
loopne
push
lods
xchg
xchg
mov
iret
jno
je
cmp
add
mov
add
cltd
imul
sbb
cmc
add
mov
xor
in
jle
imul
mov
inc
movsl
jno
adc
jle
and
inc
cwtl
mov
addr16
das
movsb
cmp
mov
jno
mov
in
lods
push
ds
rcrb
push
adc
inc
pop
sti
jg
nop
mov
inc
mov
cli
mov
popf
adc
call
adcl
cli
sub
mov
ss
cltd
mov
fcmovnb
mov
mov
iret
loope
push
ss
adc
and
cmp
pusha
mov
sub
adc
or
int
bound
scas
jecxz
cltd
scas
lret
xor
add
sbb
sub
adc
inc
add
fdiv
cltd
xchg
mov
loopne
adc
pop
lods
inc
dec
stos
xchg
mov
testb
mov
jns
push
daa
das
in
arpl
pushf
cmc
and
clc
adc
jbe
dec
mov
out
sbb
inc
enter
shrb
xchg
lcall
adc
int3
popa
addr16
dec
sbb
adc
cmc
clc
inc
rcl
es
sti
pop
pop
mov
cmp
mov
fimull
imul
cmp
arpl
repz
repz
inc
xor
shrb
and
cli
xor
sub
mov
jp
into
stos
bound
sub
shrb
aas
mov
stc
int3
or
mul
mov
jmp
aaa
pop
mov
movsb
sub
imul
int
and
movsb
mov
ret
cltd
xlat
std
stos
mov
cmp
inc
mov
xchg
popa
push
stos
cmp
loope
mov
nop
mov
aaa
adcb
push
mov
adc
adc
stc
and
icebp
shll
mov
add
cmp
lods
out
stos
jecxz
adc
cld
adcl
fcmovnu
and
aam
lds
movsb
xchg
icebp
into
mov
mov
xchg
lds
pop
xchg
sahf
cs
mov
add
lock
cmp
mov
mov
rorb
mov
rdpmc
xor
loope
sbb
xor
lea
pop
ror
ret
insb
jns
mov
fcoml
sti
je
gs
loopne
popa
andl
or
lea
jl
pop
push
jge
imul
mov
rorl
or
sub
and
subl
sub
imul
push
stos
add
add
mov
inc
dec
jb
jmp
leave
mov
jne
stc
add
negb
ficoms
mov
dec
mov
xlat
fstpl
fstl
and
xchg
fadd
mov
mov
pop
jbe
arpl
mov
and
xor
fmull
mov
jge
mov
insl
xchg
sub
xchg
jge
jne
add
dec
or
jnp
push
cli
pop
bound
ljmp
enter
push
inc
ss
ljmp
and
xchg
fdivrs
js
pushf
stos
rcll
fiaddl
sub
inc
pop
xlat
xchg
call
sbb
jmp
dec
cmp
es
xchg
xorb
mov
out
fcoms
and
inc
out
xchg
xchg
in
nop
stc
sub
jl
mov
xchg
push
adc
cld
inc
push
or
in
mov
cli
arpl
movsl
rcl
fwait
dec
shrb
jne
inc
dec
jbe
fisttps
shl
mov
jecxz
addr16
int
or
mov
es
andb
aaa
lods
xchg
filds
xor
mov
cs
out
fldenv
push
lods
sbb
pop
cs
jnp
aad
das
test
xchg
push
cmp
dec
mov
mov
pop
mov
shll
negb
adc
insl
jne
and
in
push
dec
lea
mov
test
fsubrs
jg
adc
shlb
push
inc
pop
fidivrl
rolb
rcrb
xchg
sahf
leave
shlb
xor
dec
and
inc
pusha
push
or
lods
fs
dec
and
mov
jbe
jmp
insl
xlat
and
sbb
lock
test
fadds
or
aas
in
mov
add
dec
adcl
add
fidivl
sbb
addr16
inc
ret
cmp
xchg
mov
xorb
sbb
in
addr16
pop
cmpsb
xor
adc
shlb
or
xor
add
and
or
push
sub
fisubl
add
pop
lds
in
jle
lea
jl
idivl
xchg
fildl
ret
add
hlt
movsl
movsl
outsl
aas
and
sub
xchg
jmp
cmc
jecxz
sub
jae
inc
aas
imul
and
insb
mov
pop
jae
imul
sbb
loop
xchg
rorb
sti
or
movsb
movb
sbb
pop
xabort
xchg
inc
xchg
imul
sahf
push
dec
or
leave
outsl
and
mov
mov
cwtl
aam
pop
pop
push
mov
push
mov
dec
imul
or
rorl
mov
lret
mov
cmp
jmp
jmp
push
xchg
jge
pop
jecxz
shll
scas
push
and
imul
mov
jge
test
pop
popf
cli
inc
mov
sbb
add
ftst
call
and
out
mov
imul
into
cmp
popf
mov
aam
adc
and
pusha
stos
mov
dec
cmp
sbb
lods
cmpsb
ljmp
dec
fwait
lret
and
push
push
fcoms
push
jle
lret
ss
ret
push
xchg
jb
cmp
inc
imull
pop
pop
rcr
lahf
pop
out
mov
add
in
jb
push
add
fisttps
and
sub
mov
cmp
fimull
mov
outsb
jne
aam
dec
sbb
inc
dec
push
xchg
stc
adc
adc
pop
xchg
fstps
sub
pusha
jl
fcoms
adc
cmp
dec
pop
mov
xor
mov
mov
push
dec
xor
aam
addr16
fdivs
cmp
inc
cmp
sub
sbb
adc
inc
and
or
or
scas
lds
cltd
mov
xor
test
pop
push
jnp
push
int
and
lcall
repnz
lds
outsb
mov
cmp
cwtl
sub
aam
pop
fnstsw
dec
je
into
arpl
jno
rorl
or
xchg
mov
aas
imul
add
mov
push
dec
jno
push
lods
mov
outsb
jnp
aas
leave
and
or
push
jb
dec
das
loope
daa
cli
pop
push
add
ficoml
cmp
sbb
fnstsw
insl
push
ljmp
cmp
sbbl
or
add
mov
in
pop
cmp
mov
jnp
andl
jecxz
mov
or
xchg
in
mov
sub
or
inc
imull
pusha
lds
ret
cmp
fcoms
add
push
inc
rclb
bound
mov
or
ficomps
mov
dec
sbb
push
cmp
mov
ret
mov
dec
fdiv
ljmp
ljmp
sbbl
cmpsb
imul
or
mov
popa
add
aas
fxch
cmp
xor
cmc
ds
sub
xor
dec
aam
xchg
pop
pusha
xchg
pop
shl
repz
ds
in
sub
xor
cmp
wbinvd
mov
inc
in
rcrl
mov
sahf
mulb
inc
or
ja
jb
ss
jne
mov
ljmp
cmp
cmp
push
scas
out
cmp
lods
add
sbb
sbb
aaa
dec
test
jmp
pop
addl
push
test
mov
add
orl
mov
xor
push
jne
fsts
in
sub
ret
and
fwait
sbb
ljmp
mov
pop
repz
push
dec
nop
pop
clc
lcall
loop
test
sbb
jecxz
test
mov
in
fchs
push
mul
cli
sbb
xchg
loope
stc
dec
mov
jo
js
repz
ss
iret
or
shl
sbb
fldt
out
rcl
adc
fdivrp
aam
adc
pop
sub
adc
arpl
cmpsb
add
mov
sub
push
push
ss
mov
cmp
sahf
xchg
xor
out
pop
fxch
push
inc
adc
test
pop
jae
scas
movsb
mov
lea
jmp
push
xchg
add
sbb
push
xor
arpl
fisubs
fs
xlat
loopne
int
sub
mov
adc
xchg
add
xchg
out
push
out
js
scas
aad
test
loope
adc
mov
push
dec
test
sti
dec
addr16
daa
popl
pop
mov
jl
pop
xchg
inc
jp
jb
cmp
push
ret
adc
fnstcw
shll
out
dec
push
dec
call
sub
gs
insb
mov
push
mov
loope
in
and
arpl
mov
int3
add
dec
xlat
call
jecxz
out
iret
data16
inc
xlat
out
xchg
hlt
add
mov
lcall
mov
movsl
mov
fs
dec
cmpsl
dec
xor
repnz
arpl
cli
stos
adc
pop
popf
inc
push
mov
add
xchg
out
jl
mov
sub
hlt
push
xlat
jmp
mov
xchg
aas
sahf
inc
shlb
jb
mov
mov
mov
sbb
xchg
xchg
xlat
iret
cli
call
xor
lock
cmp
mov
lods
movsb
cmpb
into
mov
adc
pop
pop
add
test
mov
pop
mov
xor
movsl
stos
out
ret
sbb
mov
mov
jl
push
scas
inc
add
xor
imul
push
push
jno
xchg
ljmp
int3
pop
daa
jle
fucomip
xchg
push
and
repz
mov
lret
aam
dec
mov
xor
out
ds
icebp
aam
cmp
jle
sti
adc
jle
aas
es
dec
pop
movsb
insb
int
sbb
ljmp
fxch
and
addr16
in
push
pushf
push
cltd
cmp
scas
and
in
xchg
mov
jnp
push
mov
adcl
xchg
sub
aas
mov
sbbl
int3
lret
push
mov
sub
ret
cs
jb
and
or
mov
add
mov
pop
push
inc
adc
aas
inc
sbb
xor
jmp
in
push
hlt
xor
test
sub
inc
fdivrs
insb
xchg
dec
jmp
cmp
xchg
hlt
jb
ret
lahf
test
mov
jmp
pop
cmpb
xor
mov
orl
into
push
xor
jno
int
es
jecxz
std
adc
sub
pop
or
adc
stos
rcrl
sub
orb
mov
test
mov
push
sbb
adcl
adc
and
mov
fwait
in
enter
loop
cli
xor
sub
xor
testl
andl
xor
xor
lea
pop
add
bound
popf
lret
or
jbe
pop
sbb
sti
std
mov
lret
push
mov
jp
imul
xchg
add
test
xorb
jmp
out
and
push
push
popa
xor
mov
mov
popa
pop
fsubrs
les
cmpsl
inc
dec
jae
aam
repz
fs
jbe
pop
mov
movsl
imul
xchg
inc
shrb
cmp
scas
sub
xchg
sti
fisubs
lea
dec
call
xchg
inc
pop
repnz
dec
and
push
pop
mov
cmp
lods
nop
jecxz
fs
mov
test
iret
pop
ss
push
nop
mov
insb
dec
mov
jb
clc
les
push
cmp
dec
popf
dec
pop
cs
pop
add
data16
enter
mov
mov
sahf
inc
xor
adc
lcall
arpl
xchg
leave
dec
aam
add
cltd
lods
xchg
mov
cmc
and
push
inc
imull
mov
cmp
mov
xchg
test
xchg
mov
fs
add
mov
shrl
ljmp
add
les
adc
lea
add
jae
xchg
jno
jo
in
pop
xchg
nop
pop
push
sub
in
pop
jg
cld
mov
fwait
xor
movsl
out
xchg
jg
pop
xchg
sbb
adc
sub
jb
sub
adc
aad
push
lahf
inc
mov
push
sbb
xor
xchg
push
ret
push
lea
loop
imul
enter
xchg
pusha
jns
movsl
xchg
aas
mov
pop
outsl
push
testb
jbe
sbb
clc
adcb
je
lds
mov
das
inc
fcmovb
cmp
push
outsb
ja
sub
mov
xchg
fwait
add
pop
mov
add
rcrl
jg
stos
push
ret
or
movsb
cli
loope
fisubs
push
setg
push
loop
out
push
jo
rcrl
fsubrp
and
shlb
test
es
mov
dec
push
cld
ret
mov
mov
mov
fimuls
jno
bound
cmp
and
pop
pop
rcl
jge
add
pop
mov
js
cmp
in
dec
repz
or
es
loopne
stos
mov
inc
mov
inc
aad
aas
sub
flds
and
gs
inc
test
lret
cmp
icebp
pop
mov
lret
fcoml
test
lods
pop
insl
mov
jbe
lret
xchg
lods
dec
cmp
mov
ficomps
daa
sub
add
out
lret
jg
pop
mov
cmp
jg
mov
xchg
mov
mov
or
std
jb
xchg
andl
lock
sbb
dec
lret
loop
mov
and
scas
mov
mul
insb
out
movsl
mov
repz
outsl
bound
fldl
mov
icebp
mov
sub
rcl
data16
es
inc
sub
in
popf
aas
aas
sbb
pop
orb
loopne,pt
xchg
xchg
jle
and
pusha
push
addr16
fisubs
pop
js
inc
lahf
dec
lcall
cmp
pusha
mov
loopne
mov
bound
adc
icebp
loop
add
scas
sbb
jnp
in
es
mov
cmp
mov
mov
dec
sub
or
cmp
adc
lret
cmc
jp
mov
jge
mov
xchg
xor
maskmovq
mull
rcl
in
add
aas
mov
ret
and
mov
adc
sub
dec
das
pop
js
out
mov
rorb
inc
scas
int3
jnp
push
repnz
in
pop
xchg
movsl
sti
pop
je
sbb
call
arpl
fimuls
in
test
insb
xorl
mov
dec
sub
adc
orb
test
inc
cltd
push
dec
push
adc
lds
std
test
test
jge
jecxz
out
out
sub
xor
stos
sbb
ljmp
sub
mov
movsl
clc
mov
adc
xchg
and
sarl
out
adc
sbb
dec
mov
leave
roll
sbb
mov
pop
in
xor
and
movsb
or
ljmp
sub
das
jnp
sub
test
popf
adc
flds
into
repz
mov
movsb
add
mov
test
pop
es
xor
ds
int3
inc
add
notl
call
adc
push
sub
cmp
push
fwait
push
insl
jl
xlat
iret
in
adc
push
push
jae
lock
dec
xrelease
call
add
push
cld
fwait
js
push
xlat
xchg
shll
rcll
jbe
dec
push
das
ds
insl
push
fwait
sti
daa
movsl
scas
mov
lret
loop
das
test
lods
cmpsb
outsl
into
sbbl
jbe
cmpsl
dec
ja,pt
imul
addb
mov
sub
cmp
cmp
loopne
shlb
pop
xor
lret
ror
inc
sbb
mov
add
xchg
pushf
jns
xor
inc
jnp
adc
mov
mov
push
enter
lcall
or
mov
sbb
sbb
int3
subl
mov
out
sub
pushf
shlb
adc
arpl
cmp
stc
rol
sbb
out
jns,pt
call
cmp
int3
popa
shrb
add
add
jecxz
mov
push
int3
jecxz
fcomps
mov
add
movsl
aad
imul
fimuls
add
inc
imul
fcoml
dec
test
gs
scas
mov
nop
pusha
lds
outsb
mov
xchg
push
cmp
loop
pop
imul
xchg
xchg
in
sbb
popf
cmp
rcr
inc
test
cltd
enter
xor
or
sub
pop
out
fstpt
inc
out
dec
add
imul
ss
clc
adc
mov
dec
mov
inc
fs
test
jb,pn
xchg
lock
ja
ljmp
cld
and
pop
jo
pop
fidivl
cltd
loop
push
dec
mov
mov
xor
xchg
rol
cltd
fisttps
enter
sbb
jp
sbb
ja
push
push
and
jne
dec
notl
lock
lods
mov
xchg
in
int
or
and
xchg
xor
mov
sarl
adc
or
mov
test
shrb
xlat
sti
cmpsw
test
inc
lods
or
loope
adc
inc
mov
les
sbb
in
push
movsb
dec
mov
push
add
pusha
or
xor
bnd
vcomisd
mov
out
adc
cmp
repz
roll
cmp
scas
xchg
aad
or
and
xorl
push
popf
adc
mov
stos
sti
cmpsl
pop
imul
inc
mov
stos
add
xor
dec
push
dec
push
inc
pushf
lods
sub
out
adc
in
sub
jbe
outsl
cmp
jne
inc
icebp
icebp
jbe
mov
pop
mov
jl
push
cmp
pop
mov
xchg
mov
mov
mov
fs
scas
ds
jg
lock
add
lcall
shrb
les
push
mov
ss
shll
lods
push
add
movsb
sub
dec
dec
pop
test
cmp
jle
mov
jg
iret
and
dec
mov
cmpsb
push
adc
pop
pop
xchg
lods
sti
jns
lret
mov
jae
adc
rorl
or
int
jecxz
mov
mov
mov
push
fadd
pushf
dec
bound
mov
mov
xor
lea
mov
test
mov
rcrb
in
sub
into
icebp
inc
cmp
mov
xchg
aaa
mov
inc
pop
int
jecxz
cmp
subl
call
andb
inc
xchg
rolb
sahf
push
enter
cmp
pop
mov
les
shll
add
dec
jp
xchg
es
std
movsl
mov
mov
lahf
test
xchg
icebp
scas
in
aad
sbb
inc
mov
fstpt
aam
xchg
lock
test
movsb
ret
dec
jle
jo
adc
std
lahf
cmp
sbb
push
sub
movsl
out
mov
sub
and
cli
aaa
mov
xchg
sbb
fsubp
icebp
mov
cmp
lret
mov
add
and
stos
fnsave
mov
mov
popf
stc
sub
push
loope
shll
insl
inc
dec
sahf
push
mov
pop
or
mov
cltd
and
cli
in
stos
je
or
clc
sub
jecxz
sbb
xor
sub
and
arpl
nop
lods
mov
scas
cmp
cmpsb
sbb
shll
jno
gs
push
inc
dec
sbb
sub
add
add
add
inc
mov
or
dec
mov
or
add
add
dec
mov
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
