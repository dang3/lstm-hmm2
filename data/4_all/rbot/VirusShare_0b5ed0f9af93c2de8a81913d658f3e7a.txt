add
mov
cs
stos
mov
sub
cld
cwtl
popf
mov
xor
rolb
dec
push
xchg
cmp
cltd
outsl
xchg
movsb
sbb
or
push
sti
dec
mov
sbb
or
jns
int
dec
sahf
out
mov
mov
push
xchg
stos
sahf
stos
data16
push
and
jb
mov
pop
pop
ds
xor
stos
lods
shrl
pop
cmp
adc
sub
and
repnz
adc
add
movaps
jae
adc
sbb
adc
inc
imul
add
adc
adc
mov
clc
sbb
xor
xor
lret
shll
sbb
add
sbb
sbb
sbb
push
xor
ja
fstp
jp
leave
push
lods
jge
dec
fisubs
jns
mov
icebp
mov
gs
lret
mov
cs
cltd
add
lret
ljmp
or
push
add
pop
fcmovne
repz
add
inc
xchg
out
push
scas
or
fwait
stos
scas
pusha
xlat
pop
sub
out
jmp
add
jmp
xchg
sub
frstor
push
int3
mov
stc
repz
cld
dec
push
adc
loopne
adc
sbb
into
xor
test
rcrb
pop
inc
xchg
fidivrl
cmp
lods
stc
push
pusha
sbb
popf
mov
xchg
push
add
push
jns
jnp
mov
cmp
xchg
pop
xchg
scas
adc
roll
dec
push
stos
movsl
je
scas
mov
mov
inc
dec
iret
rcrl
xor
sti
mov
leave
cmp
lret
cmp
enter
push
out
pusha
cmpsb
push
cmp
sub
int3
stos
inc
dec
dec
inc
sar
fst
fdiv
int3
shrl
xchg
mov
inc
jno
pop
pop
push
dec
stos
lods
sub
inc
xchg
frstor
in
adc
push
stos
addl
push
sub
aad
adcl
and
adc
jp
and
sbb
jmp
stos
pop
ss
es
jno
xchg
sbb
scas
jo
call
sub
mov
adc
outsl
mov
and
lds
in
mov
cwtl
jns
ja
int
sub
cmpb
xchg
inc
add
insl
rolb
arpl
lahf
leave
cmp
adcl
jge
jne
xchg
test
stos
int3
into
insl
inc
stos
pop
cltd
daa
add
hlt
nop
lahf
cwtl
mov
cld
xchg
inc
iret
std
sub
fwait
jmp
test
clc
lret
sbb
or
jns
test
inc
lahf
xchg
xorb
push
push
loopne
fsubrs
imul
test
push
add
add
jae
push
xlat
std
pop
mov
dec
insb
vmwrite
cmpsb
jns
ret
fistpll
out
fistpll
in
add
mov
stos
dec
inc
out
call
pushf
or
das
repz
mov
out
cmc
lahf
cli
mov
or
jg
jnp
cmpsl
sub
jno
jp
xor
push
fdivrl
jge,pt
flds
scas
mov
ds
aas
fcompl
subl
pop
fdivr
mov
push
cld
cmp
cmp
or
cltd
xor
outsb
je
test
add
mov
pop
jmp
mov
adc
mov
shll
sub
mov
data16
insb
lcallw
push
push
adc
xchg
lock
ds
movups
leave
jmp
bnd
mov
adc
push
pop
xor
xchg
fldl
and
in
push
fstpt
sbb
cs
inc
imulb
pop
das
inc
adc
imul
mov
cmp
jl
insb
les
call
out
pop
jecxz
sub
mov
jmp
xchg
mov
popa
mov
lcall
pop
movsb
lods
add
push
sbb
dec
mov
mov
ljmp
lret
mov
ds
mov
sbb
dec
into
jmp
fildll
pop
int
lret
mov
or
or
xor
cmpsb
or
jp
and
out
lea
mov
rolb
mov
jge
subl
adc
push
fidivrl
add
cmpsb
or
addr16
out
std
pop
cmp
xor
pop
lds
icebp
fistps
inc
daa
add
cmc
sub
lods
dec
inc
mov
pushl
fwait
ss
lret
mov
and
or
jecxz
dec
idivb
mov
je
dec
sbb
cmpsb
dec
add
testb
rcrb
mov
mov
in
in
cmp
imul
stc
adc
cmp
call
mov
lret
in
rcrl
fwait
sarb
push
imull
xor
mov
sub
sbb
pop
dec
in
lcall
xor
js
xchg
cmp
dec
pusha
imul
into
aaa
xchg
lds
clc
push
jp
rcrb
je
xchg
push
lret
roll
push
jne
push
push
push
mov
sub
scas
adc
mov
cmp
cmpsb
cmp
mov
popf
jnp
jg
adc
push
lock
cmpsl
ret
pop
mov
xchg
fsubrl
jmp
int
jbe
or
pop
adc
inc
test
je
rol
xchg
add
rcrb
jnp
push
mov
push
adc
push
ds
add
rorl
mov
loope
pop
mov
dec
pop
sbb
or
scas
jl
in
scas
das
into
pop
imul
inc
sarb
cmpsb
mov
push
es
xor
pop
pushf
sbb
popf
inc
ret
pop
sub
xchg
aam
push
ret
inc
push
inc
sti
cmpsl
mov
arpl
add
push
dec
pop
int
dec
aaa
fs
inc
push
mov
and
pop
clc
pop
lods
mov
inc
mov
lret
adc
add
adc
cwtl
and
adc
sbb
dec
outsl
shlb
popf
in
push
or
into
mov
xor
iret
xchg
mov
jae
mov
lods
icebp
cmp
or
lods
aad
pop
push
fidivs
jp
adc
xlat
xor
je
mov
lret
aad
jno
mov
fldt
in
jo
sbb
cmpsl
cmc
sub
inc
ja
push
xor
push
repnz
ret
addr16
js
bound
int
jnp
lcall
lahf
sub
filds
shrb
fwait
dec
iret
mov
push
and
imul
fwait
cs
pop
add
test
xlat
push
cmp
inc
inc
pop
inc
push
mov
cmp
pop
mov
cmp
sbb
mov
jb
xchg
pop
xchg
sti
div
mov
mov
xlat
pop
mov
test
push
addr16
push
jnp
in
iret
loope
aaa
sbb
inc
sbb
and
ss
xchg
lret
jmp
lret
adc
xchg
sbb
repz
daa
mov
xchg
jg
lahf
inc
mov
rcll
fdivs
shrl
lret
fcompl
repz
or
mov
add
out
xchg
int
ja
pop
mov
call
std
repz
inc
fstpl
lea
adc
sub
and
aad
mov
aad
push
add
sub
in
shll
xchg
fstl
adc
ja
pusha
ds
jb
lret
mov
inc
add
or
jae
push
sarb
push
adc
lods
inc
in
mov
pusha
cmpsb
shrl
push
dec
jg
mov
xchg
push
fists
mov
add
arpl
jecxz
aam
cmp
shlb
xchg
dec
push
in
insl
or
pop
cmp
add
adc
lahf
adc
outsb
or
push
outsb
idivb
loop
int3
mov
or
les
leave
out
pop
mov
xor
jg,pt
jnp
mov
mov
test
or
jmp
cmp
lahf
mov
adc
inc
sbb
jnp
aam
setp
cmp
pop
aad
in
movsl
pop
push
or
mov
pushl
mov
sbb
mov
les
std
mov
fcoml
push
or
or
push
add
xchg
outsl
icebp
inc
lods
cmpsl
stos
lods
push
std
mov
jb
stos
mov
rep
rol
test
mov
inc
shll
cs
sbb
out
out
ljmp
jno
cmpsl
xor
dec
fildl
daa
mov
cmpsb
or
cmpl
cmc
jl
gs
push
mov
dec
mov
pop
xchg
daa
mov
cmpl
fucom
inc
and
gs
mov
stos
push
out
sbb
je
hlt
jne
mov
cltd
jg
jnp
mov
lea
std
mov
fidivrl
xor
push
adc
pop
mov
scas
xchg
test
addr16
inc
mov
repnz
pusha
leave
adc
adc
jp
mov
lods
loope
adcb
or
pop
push
sub
stc
outsb
pusha
mov
dec
loope
inc
or
lahf
testl
orb
lds
sti
sbb
sbb
in
jne
ret
xchg
stos
fst
pop
or
jbe
out
xchg
mov
aaa
pop
adc
sbb
xchg
sbb
andl
scas
add
add
mov
iret
leave
xchg
dec
movsb
cmp
xor
adc
mov
cmp
and
pop
punpcklbw
mov
xor
pop
pushf
sub
test
sub
scas
mov
loope
fldenv
dec
cmp
ret
or
fs
fadd
sbb
push
add
mov
sub
mov
jae
outsb
lea
mov
mov
xchg
repnz
push
test
sub
sub
out
mov
xor
pop
lods
jl
bound
pop
mov
insb
mov
loop
insl
stos
push
imul
clc
pop
outsb
lret
outsb
nop
leave
js
push
pop
fwait
mov
xor
test
sub
jle
ret
test
cmp
add
cmc
push
out
dec
mov
rorb
shl
and
mov
js
ret
pop
xor
xchg
or
repz
rcll
cmpsl
jne
das
inc
xor
subl
mov
leave
pop
push
cmp
frstor
mov
aam
call
and
gs
xchg
addl
popa
rorl
das
dec
aad
jne
or
xor
mov
mov
jo
popa
shlb
rolb
mov
mov
mov
sbb
sarb
jge
push
repz
test
fbld
pop
ja
push
push
dec
mov
or
add
popf
divb
daa
push
mov
lds
lds
pop
popf
fisttpl
jl
push
cmpsb
wbinvd
mov
add
outsl
das
dec
adc
xchg
pop
aaa
mov
adc
jle
adc
or
pop
xchg
daa
adc
adc
inc
pop
mov
aam
ljmp
clc
outsb
jo
and
cmc
call
cmp
imul
push
mov
push
arpl
js
push
add
xor
inc
addr16
pop
loop
ret
aas
insb
push
arpl
mov
loopne
mov
xchg
cmp
jge
outsb
and
inc
xchg
hlt
scas
leave
bound
frstor
outsl
push
into
addb
out
aaa
xchg
les
rorb
adc
pop
das
decl
push
jae
dec
popl
pop
rcrl
insl
mov
and
push
negl
xchg
das
pop
inc
sub
out
lahf
adc
add
xor
inc
jns
shrb
je
cmpsl
cwtl
or
popa
call
cmp
test
je
mov
out
push
jmp
clc
jns
and
inc
bound
jne
out
and
loop
or
pop
sbb
nop
xor
scas
inc
shrl
xchg
in
ljmp
sub
lods
xchg
xchg
hlt
push
xchg
fs
pop
arpl
jmp
mov
cmp
mov
negl
xor
in
sti
ja
adc
ret
je
aam
push
lods
sub
cmpsl
jmp
in
mov
ss
xor
dec
movsb
loope
pop
icebp
out
adc
shll
call
stos
and
jecxz
jmp
and
les
or
leave
adc
mov
dec
cld
and
adc
adc
sub
shrl
sahf
adc
jnp
rol
lahf
fstpt
jnp
push
add
loop
repnz
inc
push
cmp
insl
adc
mov
fstps
js
mov
or
mov
xor
sar
data16
mov
pusha
xchg
test
bnd
test
outsb
aam
sbb
imul
mov
xor
push
gs
pop
add
dec
fwait
or
roll
mov
mov
out
popl
stos
sub
stc
outsb
aam
aad
loop
mov
xchg
or
fmul
loope
movsl
jle
cmpsb
aam
notl
push
push
movsl
outsl
scas
mov
and
out
shrl
sub
bound
into
xchg
mov
mov
jge
and
mov
and
flds
mov
lock
in
pop
sub
jle
into
push
sbb
jmp
aas
div
cli
fcoms
faddp
ss
rclb
cmpsb
lret
orb
loop
cs
dec
cli
cmp
dec
dec
mov
push
mov
daa
push
shll
frstor
test
xlat
mov
int3
add
jns
pop
insb
das
cmc
sbb
push
hlt
jmp
rcll
out
arpl
leave
pop
enter
jne
stos
in
shlb
mov
and
mov
fcmovne
mov
hlt
movsb
jne
sub
popf
mov
test
bound
or
xchg
add
mov
enter
fistl
dec
fs
pop
repz
push
mov
inc
jle
xchg
iret
jg
inc
sbb
in
inc
inc
lret
mov
sub
insb
sub
xchg
sub
or
lcall
pop
jns
movsb
push
adc
call
popf
pop
imul
loop
push
jae
ficoms
stos
xchg
jae
dec
gs
inc
adc
iret
rorb
mov
push
xor
push
and
jl
lods
add
sub
sarb
mov
rcl
test
stos
mov
xor
iret
aad
notb
out
lret
mov
repnz
ds
mov
sub
jl
adc
inc
cld
rcr
xor
sti
push
and
testb
xchg
jp
das
fistpll
push
mov
dec
addr16
mov
add
sbb
ja
cld
add
xchg
aad
pop
sub
fpatan
call
push
mov
in
pop
cmp
leave
popf
sbb
jge
inc
pop
in
outsb
dec
mov
xchg
stos
add
out
sbb
xor
dec
fcompl
dec
movsb
insb
stos
daa
test
mov
std
aas
adc
xlat
lea
jmp
repz
xor
adc
daa
adc
jg
bound
test
sbb
or
or
jmp
mov
inc
dec
scas
lahf
inc
mov
push
dec
mov
adc
jecxz
dec
jle
jae
lret
push
out
jbe
sub
aaa
test
jecxz
xchg
add
or
jl
jle
inc
test
jnp
cmp
repnz
jmp
out
sbb
pop
mov
push
aas
call
lock
sub
nop
jbe
fidivs
mov
mov
fbld
push
fcomps
loope
xchg
outsb
xor
scas
dec
shll
push
sub
xchg
das
arpl
pop
cld
mov
mov
cs
xor
or
in
popf
cmp
aam
shl
sahf
pmulhuw
mov
movl
scas
and
push
ds
movsb
mov
fwait
repz
jle
rcrb
mov
push
add
enter
push
mov
xor
repnz
lock
mov
incb
xchg
in
shrb
sbb
rep
mov
jp
arpl
jl
stc
je
dec
pop
jb
mov
add
test
lret
push
cli
mov
mov
shll
bound
les
lds
xchg
adc
shll
push
incb
fildll
addb
cmp
xchg
mov
sahf
mov
ficomps
lret
aas
or
aad
push
int3
mov
cli
lret
out
push
mov
insl
mov
movsb
jge
incl
and
movsl
std
test
mov
push
bound
and
rorl
jb
das
lods
inc
push
stc
jnp
push
imul
arpl
mov
dec
movsb
test
insl
into
test
push
dec
and
mov
rcl
in
imul
pop
dec
call
pop
insb
or
dec
cmp
adc
stos
pop
in
add
insb
movsb
sub
xchg
adc
fisubrl
inc
jg
or
cmpsb
fadds
sub
outsl
popa
mov
sbb
lock
lret
push
mov
loop
in
sbb
push
adc
lods
xor
fs
sbb
data16
sub
push
mov
test
hlt
mov
inc
inc
xchg
test
in
push
jnp
jle
cs
sbb
push
xchg
lds
mov
inc
mov
popa
scas
ljmp
push
xchg
mov
mov
push
aad
mov
sar
sti
cs
xchg
pop
jae
push
jbe
test
lea
aas
popa
mov
mov
sbb
add
shll
std
sti
fmul
lods
push
popf
mov
lret
out
mov
loopne
add
mov
adc
mov
pop
sub
cld
jle
adc
pop
xor
pop
dec
inc
fucom
adc
pop
scas
repnz
cmp
mov
adc
aad
aaa
cld
mov
inc
out
or
lcall
std
pop
mov
andl
mov
in
xor
into
mov
and
push
addr16
arpl
pop
jo
inc
jmp
mov
loop
mov
and
dec
adc
fidivrl
and
cld
jg
sbb
and
adc
mov
cmc
push
mov
sub
or
nop
scas
cmpsl
test
mov
xchg
cli
mov
lret
or
pop
iret
inc
outsl
dec
push
leave
lods
adc
out
call
add
fucom
xor
jns
mov
stc
ds
test
in
push
pop
cwtl
mov
mov
mov
imul
call
sbb
inc
xor
push
sbb
push
cld
ljmp
mov
dec
sub
dec
jae
fs
lods
or
push
add
inc
sub
test
and
call
mov
stos
pop
out
sarb
mov
dec
lock
clc
pop
mov
sbb
sub
ljmp
dec
or
push
xor
mov
push
cli
dec
jge
mov
cld
jge
push
inc
xor
add
mov
jbe
sub
dec
sti
mov
mov
scas
mov
out
add
push
pop
xchg
xchg
test
cltd
mov
push
xchg
cld
sbb
stos
ret
pop
ss
mov
aad
jne
cmp
push
mov
enter
xor
or
test
imul
adc
or
mov
jmp
nop
sub
cmp
push
mov
enter
pop
push
xchg
xchg
inc
sti
xchg
in
pop
in
pop
mov
mov
or
xor
push
je
push
dec
pusha
lret
adc
mov
add
mov
es
repnz
xchg
icebp
mov
into
xchg
mov
shrl
insl
out
push
into
cwtl
sbbb
xchg
mov
mov
push
aad
bound
test
ret
dec
push
push
repnz
and
xor
jbe
lret
sbb
rorb
xchg
pushf
cmp
imul
jbe
stc
ds
cmpsl
test
sub
cltd
shll
hlt
add
jl
dec
dec
hlt
mov
arpl
mov
pop
out
imulb
ss
lods
cmp
popf
xor
int
pusha
fdivrl
xchg
ffree
into
sub
mov
ja
mov
and
mov
shl
and
inc
sarb
out
das
sub
xor
push
cwtl
mov
mov
jl
push
ficompl
jno
mov
jno
inc
mov
out
mov
cmp
jb
push
inc
push
xor
bnd
add
stos
pop
push
sahf
repnz
mov
rorb
mov
adc
pop
fsubrl
push
fistl
xchg
push
enter
test
pop
ljmp
inc
and
movsb
in
sahf
and
sub
jge
bound
loop
fsubl
push
imul
xor
mov
fs
dec
rorb
mov
lea
icebp
out
add
fistps
dec
sarb
cmp
jne
cli
ljmp
stos
clc
xchg
xor
dec
xchg
in
leave
or
sbb
sti
int
mov
jae
mov
call
inc
cmp
jne
mov
dec
and
add
ja
int3
adc
xchg
pop
xor
push
pop
inc
cmpsl
dec
mov
xor
scas
sbb
int
pop
or
push
mov
hlt
in
sub
mov
es
jl
cmp
int3
pop
lret
out
adc
inc
xchg
clc
pop
push
cmp
inc
xor
in
pop
mov
ljmp
in
push
iret
jmp
fwait
push
sti
add
mov
aam
push
sub
lahf
aaa
and
inc
test
stos
lock
jecxz
or
popf
push
ja
fnstsw
sbb
mov
xor
leave
mov
aaa
loop
int3
aam
sub
xchg
in
jns
mov
frstor
fs
in
inc
sahf
mov
inc
dec
jo
dec
ljmp
jbe
and
ja
and
dec
and
mov
outsl
hlt
sbb
inc
ret
shrl
mov
lods
neg
inc
mov
push
push
sbb
push
adc
and
cmp
cmp
in
xchg
push
mov
jb
daa
dec
inc
xchg
neg
cmp
lea
add
xlat
aam
lcall
xchg
push
lds
divl
mov
or
movsl
das
inc
pop
cmp
sarl
lret
fs
leave
jne
add
jne
jbe
nop
xor
xlat
in
sahf
jne
outsl
jecxz
xchg
int3
out
stc
call
and
lods
addr16
jb
cmp
imul
leave
loopne
mov
arpl
xor
cwtl
cmp
fwait
aad
bound
jecxz
stc
lahf
xchg
orl
push
inc
mov
cwtl
call
cmc
sub
jmp
xchg
sub
test
inc
hlt
lcall
in
lods
in
stos
mov
pop
push
sbb
lods
lds
shll
cmp
shll
add
xchg
cld
mov
adc
fnsave
incl
aaa
mov
cmp
popf
fstl
xchg
or
push
loop,pn
mov
bound
pushw
xchg
jmp
sbb
mov
cwtl
movb
out
sub
mulb
int3
pusha
jb
ja
add
pop
test
xchg
stos
ljmp
mov
jne
ds
fadds
popa
inc
cmp
aas
lock
mov
dec
sbb
dec
pusha
mov
xor
mov
aad
aas
mov
rcrb
mov
or
outsl
ret
sti
ss
mov
xor
push
or
xchg
jnp
jbe
fdiv
cmp
inc
xor
arpl
inc
sub
hlt
paddb
sub
addl
sbb
stc
imul
mov
sti
mov
dec
mov
mov
adc
inc
test
mov
sub
sbb
pop
push
lahf
inc
jo
popa
iret
cmp
add
or
jb
sbb
mov
js
leave
mov
add
btr
loop
stc
call
mov
test
jne
jecxz
mov
mov
or
jo
fwait
aas
sub
inc
fnstenv
fnstsw
xchg
mov
negb
aaa
mov
add
rol
push
lret
fldt
cmpsl
addb
dec
and
daa
xchg
sbb
cli
test
push
xchg
hlt
test
inc
mov
loope
push
mov
push
loopne
clc
inc
mov
aad
xor
push
push
cmpl
rolb
jae
sbb
lret
leave
aam
test
aas
out
inc
and
in
mov
add
jl
jns
daa
mov
jns
mov
xor
push
dec
hlt
pop
ja
xchg
sub
movsb
lret
dec
pushf
test
adc
ffreep
mov
jg
cmp
and
mov
sti
mov
add
std
lods
cmc
xchg
scas
fstl
leave
sti
ss
out
mov
xchg
out
push
aam
pop
sarl
xchg
inc
mov
adcl
mov
fiadds
lea
mov
in
fdivrl
xchg
inc
pop
xor
sub
mov
lahf
mov
mov
dec
add
loopne
pushf
or
les
sub
dec
into
cmc
push
in
dec
es
xor
sub
and
sbb
dec
lods
lods
inc
push
or
xor
lahf
shrl
jge
mov
imul
stos
mov
iret
test
lods
fcomp
stos
cmpsl
aad
cmp
repz
dec
mov
xor
in
sbb
inc
rcr
pop
lods
or
sbb
sarl
jne
cltd
jmp
rol
sbb
imul
sti
stc
les
pop
push
sub
and
push
mov
gs
xchg
out
sub
jmp
sub
xchg
pusha
popf
jne
ss
mov
xor
stos
cmpsb
inc
push
push
fndisi(8087
adc
test
xor
cwtl
outsl
sub
test
incb
data16
jp
xor
mov
push
leave
aas
pop
lods
push
jg
arpl
xchg
jge
pop
lods
cmp
pop
sbb
lret
mov
fldl
dec
aam
dec
jnp
flds
sar
imul
and
pop
bound
add
fiadds
xor
imul
sti
jae
mov
xchg
mov
lret
lds
test
cmp
inc
jb
mov
push
add
push
or
andb
pop
and
arpl
subl
insl
or
iret
push
or
pop
inc
xchg
sub
and
mov
or
fdivl
push
inc
pop
inc
pop
sub
jmp
cltd
ss
mov
dec
xor
mov
rclb
xchg
or
cmp
loope
sahf
xor
push
std
mov
jbe
mov
aam
mov
mov
mov
mov
fwait
xlat
adc
mov
inc
fidivrs
xor
ret
int
mov
shll
cmp
cld
dec
sbbl
shrl
fs
cmp
mov
jge
ret
xor
jge
cmp
outsl
sti
mov
jl
mov
daa
pop
sub
test
xlat
jne
leave
test
sbb
sbb
pop
jno
cmp
stos
arpl
dec
xor
filds
lahf
xor
insl
add
jne
jb
adc
hlt
sub
inc
xlat
or
enter
adc
xor
adc
cs
ret
mov
inc
inc
cli
and
pop
sahf
aad
pop
xor
das
sub
xchg
cld
xchg
mov
or
pop
cmp
xor
cmp
bound
xchg
mov
sub
add
jl
neg
ret
out
lret
enter
shrb
aaa
xchg
mov
imul
jle
das
inc
mov
jb
xor
rorb
dec
xlat
push
mov
cmp
test
fsincos
and
in
xor
adc
dec
fnsetpm(287
mov
pushf
in
test
fsubrl
adc
not
push
jae
addr16
repz
clc
test
fildll
cli
and
push
fisubs
scas
insb
jb
rol
jnp
push
pop
stos
or
adc
and
jmp
mov
dec
mov
push
dec
aam
mov
dec
in
stos
icebp
or
xor
lahf
push
xor
icebp
pop
or
fs
cmc
aaa
mov
mov
and
stc
mov
sbb
mov
enter
scas
add
insb
into
jo
dec
cmp
jg
lcall
jmp
dec
inc
sbb
xor
sar
ret
stos
sbb
jne
mov
dec
xor
mov
inc
std
push
movsl
pop
jl
inc
std
fcmovb
inc
popa
call
shrb
int3
jno
xchg
int3
shll
scas
out
dec
repz
jne
mov
dec
das
cld
pop
mov
pop
mov
ja
fimuls
rolb
dec
lret
mov
das
aas
lock
movsl
cmp
mov
or
out
dec
mov
cmp
popa
and
mov
push
pop
aad
sarb
cmp
aam
aas
fcoms
pop
jbe
inc
push
jbe
pop
stos
loope
dec
mov
cmp
jecxz
out
xchg
inc
jecxz
outsl
call
add
mov
bound
mov
mov
adc
cli
jge
psubd
xchg
mov
xor
sub
ficoml
leave
and
mov
pop
jecxz
jl
adc
cmp
xchg
stos
sbb
movsl
in
adc
push
pop
psrlq
xchg
sub
jg
mov
jbe
push
cmp
inc
addl
inc
test
mov
xor
jbe
lds
pop
ret
in
jb
insb
push
pop
mov
inc
cmpsl
push
jge
and
jl
mov
cli
dec
aam
leave
and
jecxz
dec
adc
jle
enter
or
cmp
sbb
aad
orl
movsb
push
inc
out
pushf
cmpsl
inc
in
aam
loope
test
mov
daa
test
push
jae
mov
cs
add
add
xor
adc
mov
or
scas
stos
pop
sub
add
and
imul
leave
sub
cwtl
cmpsb
ret
push
cmpb
or
icebp
jl
mov
fstl
leave
popf
mov
fsubr
mov
xchg
inc
push
cmp
shrb
es
dec
mov
dec
ja
addr16
adcb
cld
movsl
xor
ljmp
cs
bnd
mov
sub
mov
fstps
dec
cmpsb
sbb
lcall
pusha
int
sub
das
loop
shlb
es
adc
pop
mov
cmp
imulb
and
paddsb
jp
mov
xchg
jle
fnstenv
and
cmp
roll
pop
fidivrl
mov
push
sbb
push
std
es
pop
sub
shr
sbb
mov
sti
dec
adc
mov
scas
clc
lods
fwait
cwtl
mov
and
sub
jg
test
cmp
mov
push
pop
mov
call
call
cld
int3
daa
sub
pop
adc
test
fistpll
pop
neg
dec
lret
outsb
xchg
fcoms
or
dec
or
push
andb
out
and
sahf
pop
les
test
popf
or
repnz
popa
repz
dec
push
mov
mov
xchg
cmp
rolb
push
aam
inc
push
jb
or
mov
jmp
lret
das
cmpsb
cmp
lret
mov
mov
ret
sti
xor
lds
test
sbb
xchg
scas
lea
and
mov
sub
inc
addr16
es
cwtl
icebp
inc
lret
sbb
jmp
jge
enter
push
fsts
xor
ss
jbe
push
xchg
adc
sub
inc
mov
out
lcall
fcomps
pushl
dec
insl
sub
fsubl
pop
dec
rol
mov
or
cs
xchg
cli
aaa
add
xor
push
lds
aam
xor
xor
test
adc
sbb
loopne
and
js
dec
and
mov
test
ror
ss
sub
test
dec
xor
es
in
xor
pop
test
inc
adc
js
nop
lahf
cmc
push
bound
inc
adc
fwait
mov
sub
mov
dec
and
jmp
sbb
dec
repnz
aad
add
xchg
mov
in
cmpsl
scas
ss
mov
jl
xchg
jmp
inc
cs
aas
ljmp
imul
mov
inc
test
iret
ljmp
shlb
ljmp
cmp
cmpsb
fldt
aam
enter
xor
inc
cwtl
or
jne
dec
pop
and
pop
ret
daa
xchg
dec
cltd
outsl
pop
dec
lret
push
stc
mov
outsb
mov
jns
mov
orl
repz
mov
mov
clc
aaa
dec
fcmovb
xchg
cmp
xchg
pushf
data16
fdiv
adc
sbb
inc
jne
mov
int
xchg
or
pop
mov
repz
push
xchg
push
call
mov
fsubrp
adc
dec
ljmp
mov
jns
jbe
cmp
cmp
mov
add
and
nop
mov
fildl
push
aaa
imul
int3
mov
sti
dec
inc
adc
pop
adc
and
hlt
clc
pushf
inc
fcmovnbe
int3
stc
lcall
cmp
jb
sub
mov
iret
pop
popa
daa
push
out
test
sahf
pop
roll
pop
stos
adc
aam
xchg
or
test
xchg
mov
rclb
aad
jecxz
mov
pop
lcall
mov
gs
arpl
mov
dec
pusha
imul
push
fistl
cmp
sahf
push
cmpsl
xlat
ret
pop
and
jae
call
in
dec
sub
in
inc
xchg
testb
test
bound
pop
inc
adc
pusha
xor
lds
push
andl
add
xor
pop
cmp
stos
inc
push
out
popf
sub
subl
mov
jge
lcall
xchg
xchg
mov
xor
pop
lds
mov
dec
xchg
std
ss
test
lock
cmp
push
enter
xlat
test
sub
and
inc
loope
pushf
mov
dec
cmp
std
cmp
es
push
cmp
ffreep
clc
sbb
pop
push
iret
push
ljmp
cmp
movsb
jno
or
clc
xchg
push
pushf
mov
clc
mov
sub
insb
inc
adc
mov
inc
cmp
fidivl
and
sbb
cli
or
ja
int
or
jg
out
cmp
test
mov
push
loope
negb
mulb
insl
arpl
outsb
pusha
xchg
sbb
cld
mov
loopne
jbe
jge
dec
add
andb
movsl
enter
repz
je
add
mov
ds
pop
cs
sub
jge
jns
xchg
jecxz
xor
pop
nop
test
and
pop
leave
pop
push
loope
or
push
sbb
xor
mov
les
out
inc
pop
adc
jns
rcrl
cld
das
push
mov
cwtl
cli
gs
stc
pop
push
out
pop
cmp
pushl
or
loop
xchg
fisubrl
xor
inc
pop
pop
jp
lods
pop
mov
inc
mov
mov
les
push
pop
sahf
jb
xchg
cmpsb
pop
mov
pop
mov
push
leave
sub
mov
adc
lret
dec
inc
in
clc
inc
mov
mov
cmc
pushf
sbb
push
daa
jmp
adc
or
mov
mov
jbe
cld
xor
scas
cmpsl
and
xadd
in
fnstsw
jnp
or
test
lods
loope
dec
outsb
sbb
movsl
lods
fcmovu
dec
mov
pop
fsubrl
cmp
out
icebp
push
push
loope
sub
aas
pushl
adc
jbe
sub
mov
pushf
sahf
push
lret
mov
popf
ja
insl
push
imul
jae
mov
jle
push
jle
aad
cmp
jle
push
add
sbb
fisttps
cs
push
or
das
into
or
lods
int
iret
popa
cld
iret
iret
out
imul
xchg
cmp
push
sub
mov
sub
xor
aad
jmp
imul
push
sub
jnp,pn
mov
lcall
xor
adc
sub
mov
fisttps
icebp
popf
rcrb
or
and
push
or
xorb
add
mov
dec
sub
and
adc
add
daa
ds
das
xor
out
xchg
pop
cmp
frstor
jne
push
cmp
xchg
ss
xchg
adc
gs
insb
adc
notl
aam
sbb
lcall
stos
ret
or
nop
jno
or
sbb
adc
aam
add
lods
and
mov
inc
mov
pusha
jo
stos
mov
add
mov
lahf
xchg
fcompl
test
jne
lcall
sahf
mov
xor
pop
ret
mull
push
bound
sti
mov
mov
leave
pop
cli
mov
insl
pop
call
bound
aas
or
shl
js
cmp
aam
jecxz
adc
sub
in
in
mov
push
sbb
clc
aam
add
loopne
mov
mov
sti
sbb
aaa
mov
push
push
mov
sub
stos
mov
xchg
cmp
adc
sbb
lahf
mov
hlt
jns
lret
ljmp
cltd
fistl
pop
pop
xor
iret
fbstp
imul
xchg
adc
ret
sbb
cmpsb
mov
or
dec
ret
aaa
push
fldcw
inc
dec
pop
fiadds
xchg
test
shll
fldt
test
ss
fwait
ljmp
push
lods
aad
cmp
pop
int3
sbb
jmp
inc
pop
cli
push
enter
mov
cld
xor
sub
push
fldcw
insb
fldl
push
mov
imul
jnp
stos
fwait
bound
dec
xor
jmp
pop
insl
incl
cmp
mov
sub
pop
push
orb
dec
das
adc
jl
sbb
cmp
pop
cmp
idiv
je
cmpsb
and
sbb
int
popf
sbb
inc
dec
shlb
xor
mov
xor
xor
les
das
fbld
mov
gs
mov
jle
mov
jnp
sub
jecxz
xchg
sahf
xchg
sub
push
adcl
les
fldl
adc
sbb
jae
pop
es
or
jb
outsb
sbb
stos
mov
scas
mov
xor
mov
adc
fisubrl
adc
sbb
pop
add
pop
int3
jne
out
xor
cmp
call
cltd
push
xchg
pop
test
hlt
add
or
fsubs
add
mov
push
out
imul
mov
out
mov
sub
je
in
imul
imul
rorb
add
lods
and
sbb
push
ret
lods
dec
subb
inc
bound
test
pop
xor
pop
adc
or
test
sub
xchg
mov
in
jae
push
mov
inc
mov
mov
lahf
push
and
nop
scas
fildl
push
push
push
popa
add
sub
add
cld
jmp
fwait
add
adc
jmp
adc
cmp
sub
lahf
xchg
decb
cwtl
xchg
mov
dec
sub
sub
sub
mov
push
sub
cli
icebp
add
lods
push
int3
out
adc
mov
cmpsb
cwtl
lods
addb
ret
add
xchg
negb
sbb
int
scas
sbb
scas
mov
add
shll
cmp
icebp
gs
pusha
push
xchg
aas
sub
jle
pop
adc
mov
mov
call
enter
and
lcall
mov
fsubs
xchg
mov
int
inc
pop
xchg
js
push
cs
lahf
mov
and
cmp
roll
arpl
cwtl
imul
repnz
jae
sbb
sbb
xor
ljmp
dec
andl
adc
cltd
insl
pop
mov
lret
jae
stos
fninit
sub
jb
mov
in
jecxz
sub
jno
addl
cld
and
xor
adcl
xor
pop
xor
sbb
flds
dec
push
jbe
lods
push
test
lds
mov
mov
fldcw
bound
pop
mul
mov
jb
in
cli
inc
or
nop
sub
jmp
xchg
and
xchg
movsl
jnp
repz
adcb
or
sub
insl
pusha
mov
movsb
mov
jmp
fcom
movsb
xchg
and
add
adc
jno
push
scas
mov
mov
or
pusha
rorb
shrb
push
sub
std
push
jle
jae
dec
or
fistps
inc
scas
sti
lock
mov
out
aas
jae,pn
inc
fs
pop
jle
pop
adc
xchg
add
add
aad
mov
test
and
addr16
pop
push
mov
iret
out
sbb
xor
cld
jns
xor
mov
sub
arpl
stos
mov
mov
or
push
mov
sahf
and
cltd
sub
fsubrs
aam
sub
dec
inc
leave
and
in
or
pop
std
outsl
jnp
popf
pop
or
dec
int
add
fistl
add
ret
mov
sub
shl
xchg
xor
test
stos
outsl
jnp
inc
mov
pop
out
adc
scas
adc
push
mov
popa
sub
lret
or
fisubs
outsb
nop
mov
shll
test
pop
in
mov
movsb
in
push
push
inc
push
ret
stos
sub
push
push
xchg
add
fildl
int3
dec
fadds
in
pop
dec
outsb
mov
lock
insb
jg
lea
jne
int3
mov
bound
jg
xchg
aaa
pusha
jno
xchg
repz
les
xchg
dec
adc
mov
and
inc
leave
data16
push
push
cmp
int3
mov
decl
fistl
andl
push
adc
jo
or
mov
int3
push
outsl
push
movsb
stos
mov
mov
push
xchg
xor
cmpsl
mov
arpl
mov
in
inc
jge
fdivrl
mov
jo
call
cmpsb
pop
or
pop
xchg
cmp
lds
xchg
imul
ds
lds
adc
sbb
daa
inc
mov
bound
enter
idivl
lahf
push
push
bnd
insl
jl
rcrb
popl
sbbl
sbb
in
test
pop
mov
lods
outsb
cmp
jle
xor
push
aam
fmull
cltd
or
inc
pop
mov
adc
int3
cmpsl
jnp
push
mov
sub
or
mov
push
xchg
add
xor
sub
sbb
or
aaa
or
dec
xchg
add
lcall
addr16
push
pop
or
add
insb
rcrb
fyl2xp1
hlt
shll
test
xchg
xchg
xor
shll
fnstsw
ficompl
ret
adc
js
jmp
sbb
xchg
mov
push
mov
mov
jp
lret
cmc
pop
inc
and
jecxz
ljmp
andb
and
or
xchg
imul
mov
in
je
push
hlt
and
js
jmp
jb
repz
jne
or
lahf
ss
leave
cmp
jge
jge
andl
leave
jns
movsl
or
icebp
lret
insl
pop
faddp
or
insb
fucomp
cmpsl
ret
or
mov
int3
movsl
mov
cmp
adc
inc
dec
dec
jl
lahf
test
jle
lret
jmp
out
insb
cld
dec
jnp
sbb
outsb
xlat
in
int3
sti
insl
jb
in
sbb
je
test
out
outsl
xchg
adc
les
mov
into
sbb
out
mov
pop
bound
mov
loopne
cld
movsb
add
idivl
xor
xor
and
jg
fwait
mov
insb
lret
mov
add
les
push
sub
dec
mov
sub
lahf
pop
cmp
inc
and
jl
mov
mov
pop
add
add
xlat
in
clc
fistpll
bound
push
mov
lds
pop
adc
les
sub
jae
fwait
push
mov
sub
iret
or
or
gs
jge
out
push
add
adcb
push
sub
jp
pop
ficompl
pop
push
rcrl
push
jbe
cmp
xchg
sbb
cmp
call
je
push
xchg
scas
scas
sahf
fs
imul
mov
mov
cmp
xor
cmp
icebp
fucom
ja
or
andl
hlt
fldenv
lahf
stos
xchg
push
or
pop
push
or
inc
lods
jmp
xor
xchg
stos
enter
fcoms
mov
push
cmp
xchg
adc
gs
sbbb
sbb
mov
xchg
mov
dec
xchg
pushf
add
ffree
jecxz
or
shlb
mov
xchg
ret
adc
xchg
pop
ja
and
int3
push
aas
movsl
inc
fiaddl
ret
sub
mov
jno
mov
mov
mov
mov
adc
dec
roll
fwait
cwtl
mov
sub
ja
gs
adc
mov
mov
adc
frndint
js
jbe
in
inc
leave
and
cmp
in
xor
sysenter
pop
mov
shr
sbb
pop
adc
add
stos
arpl
xor
xor
mov
in
in
adc
fmuls
push
ja
push
outsb
push
sub
xlat
push
fmulp
cmp
loop
jo
fildll
enter
pop
mov
test
mov
in
enter
xchg
popf
ljmp
cmp
test
sub
clc
cmp
out
jb
fs
xchg
push
repnz
dec
jno
push
int
cltd
pop
cmp
ret
jle
shll
movsl
or
outsb
int3
das
mov
xchg
imulb
or
push
jmp
xchg
mov
sbb
bound
loopne
orl
sbb
insb
insb
jmp
sub
sub
addb
sub
and
or
call
sub
xchg
lods
xchg
out
mov
stc
shl
hlt
add
sbbl
fnstcw
scas
or
sub
sbb
fidivs
leave
jp
cmovno
pop
in
test
adc
popa
sahf
and
shlb
inc
outsb
adc
jg
and
addr16
mov
inc
dec
loope
cmp
dec
mov
mov
pop
xchg
jp
or
dec
mov
lahf
jnp
es
sbb
enter
daa
or
cmp
push
adc
jno
lret
imul
xchg
lock
sub
push
in
movsb
xchg
jae
mov
repz
imul
cmpsl
xchg
jae
adc
pop
hlt
xor
push
testb
out
dec
sub
mov
jecxz
xor
fnstsw
test
inc
std
call
xchg
ret
repz
cmp
dec
adc
add
stc
and
stos
les
outsb
mov
daa
mov
popf
mov
insb
inc
dec
adc
push
subl
data16
mov
rep
jb
or
out
lcall
pop
lahf
pop
pop
cmp
stc
add
dec
icebp
repnz
mov
testb
mov
add
mov
stc
mov
lods
inc
lret
pushf
sahf
outsb
adc
jno
pop
pushf
cmc
xchg
lret
out
mov
jmp
jb
aad
lods
int
mov
mov
lcall
or
pusha
push
insl
ret
int3
enter
lcall
pop
mov
ja
pop
mov
je
or
jbe
dec
in
sub
call
cs
add
int3
cltd
xchg
leave
push
repnz
cltd
sbb
cld
dec
adc
xchg
fldt
jbe
in
pop
dec
mov
sub
stos
rcrl
nop
xor
andl
das
out
jno
sbb
jmp
pop
data16
sahf
cmpsl
fdivs
mov
sbb
mov
mov
loope
jnp
mov
pop
push
pop
pop
es
lods
mov
dec
mov
outsb
incb
push
sub
inc
pop
inc
lock
fbld
nop
imul
in
in
mov
les
fsts
notb
shll
dec
clc
xchg
pop
repz
sub
push
filds
data16
and
sbb
in
jl
mov
inc
fbstp
orb
or
jns
leave
dec
mov
rolb
and
popf
into
cmp
and
jno
scas
int
ss
mov
sbb
data16
cmpsl
add
jns
sub
lods
add
das
outsb
mov
and
out
mov
adc
mov
gs
fs
imul
pop
out
dec
jns
dec
dec
ljmp
push
adc
sbb
les
out
test
mov
cmc
outsl
mov
xchg
push
cwtl
das
out
and
pop
mov
mov
subl
lcall
cmpl
in
push
pop
add
dec
push
xor
fdivrs
mov
xor
pop
lahf
test
or
sub
fdivp
stos
jne
xor
inc
sub
xor
mov
mov
call
mov
mov
fbstp
fcomip
xchg
into
or
aad
imul
jbe
push
jp
dec
mov
mov
hlt
daa
and
cmp
data16
fsubrl
mov
mov
outsl
dec
or
lods
mov
cmc
push
out
xlat
scas
fcmovnbe
push
in
loop
pop
adc
aas
sbb
pusha
outsb
add
in
das
aam
dec
cmpsl
sub
inc
daa
mov
insb
shlb
ljmp
mov
movsb
jp
fisttpll
daa
adc
clc
mov
fnstcw
pop
mov
cmc
loopne
xchg
fcomps
or
jl
adc
adc
sahf
jmp
sbb
call
aad
enter
sti
xor
out
lret
jg
in
dec
imul
or
shl
movl
lea
xor
cmpsl
jge
pop
subl
cmp
xorb
popf
xor
sbb
repnz
push
dec
bound
mov
sahf
sub
pop
mov
imul
enter
pop
out
xchg
mov
out
xlat
lahf
pop
dec
mov
fimuls
push
mov
mov
add
mov
xor
xchg
in
scas
std
cmp
fbstp
push
mov
sub
sub
dec
imul
sub
clc
push
jns
adc
or
das
push
sbbl
jns
mov
stc
out
jno
adc
and
and
adcl
cmp
push
loop
scas
sbb
sbb
filds
dec
stc
movsl
sti
aas
es
xchg
and
adc
sarl
cmp
decb
xor
push
adc
fmuls
mov
rclb
jge
in
jl
fsubrs
imul
daa
xchg
cltd
movsl
repz
rorb
mov
daa
mov
push
mov
frstor
ljmp
jne
push
inc
outsb
cltd
iret
dec
jnp
scas
inc
mov
cmp
cmp
loope
push
pop
xchg
push
xchg
xchg
xchg
add
mov
jl
mov
push
sti
fsts
insl
dec
outsl
or
addl
push
repnz
fstpt
push
adc
pop
xchg
nop
roll
pop
add
pop
pop
cli
pusha
mov
push
inc
xor
mov
push
fs
aas
repnz
xor
sbb
xchg
pop
mov
push
and
add
movsl
xchg
inc
pop
mov
pop
stos
mov
mov
mov
stos
lahf
pop
jb
dec
mov
inc
mov
out
sbb
cmc
lods
data16
inc
in
and
and
add
fucomp
aaa
xchg
fisttpl
popf
inc
aaa
ja
test
insl
test
ret
jbe
in
mov
lret
stos
push
xchg
clc
addb
jbe
scas
add
gs
pop
xchg
enter
add
data16
stc
mov
movsl
sub
pop
mov
dec
out
push
dec
inc
mov
sbb
js
pusha
jno
loopne
xchg
add
aam
sub
lcall
dec
subb
adc
insl
and
shlb
push
dec
inc
inc
xor
dec
mov
fidivrl
push
movsb
jb
nop
movsb
or
push
cs
and
mov
pop
sub
ret
sub
or
cmc
jg
fistpl
and
add
std
pop
xorl
and
push
scas
and
jl
xchg
cmp
jle
pushf
test
ljmp
dec
test
in
movsl
mov
pop
test
xchg
sub
lock
movsb
xchg
dec
mov
sub
roll
lahf
insl
xor
xchg
mov
hlt
mov
fnsave
outsl
js
mov
fucomp
leave
ss
push
nop
mov
out
fiaddl
stos
inc
pop
sub
jns
mov
cmp
enter
or
jmp
test
sbb
inc
sub
sub
jecxz
inc
inc
xchg
xorl
pop
rorl
cmp
loope
sahf
xchg
mov
and
jle
sub
inc
cmp
js
mov
jae
leave
loope
aad
cmp
loope
sub
adc
js
leave
pop
mov
and
inc
push
and
push
xchg
xor
xchg
xor
or
cmp
int3
push
addb
push
pusha
add
add
sub
jmp
arpl
loopne
mov
fisubrl
jl
pusha
jne
pop
stc
pop
into
lods
sahf
call
je
cwtl
jle
arpl
dec
push
pop
xchg
mov
out
inc
aam
pop
jno
jae
jo
add
daa
jns
lods
aam
xor
push
jne
mov
inc
les
test
aas
mov
cmpsb
mov
mov
inc
pop
sbb
clc
push
push
adc
and
cli
cmp
gs
insb
scas
pushf
push
mov
imul
or
mov
icebp
add
sbb
inc
pop
jae
pop
xlat
push
jae
or
xchg
jl
mov
test
jp
xchg
xchg
mov
repz
mov
iret
movsl
cmpl
push
icebp
icebp
movsl
dec
jcxz
pop
mov
ficompl
inc
jp
dec
aaa
or
je
pop
pop
mov
ds
jb
loopne
ljmp
cli
push
mov
adcl
fsub
push
dec
mulb
out
mov
jl
push
inc
movsl
lock
pop
add
addb
adc
sbb
mov
lods
sbb
mov
cmp
mov
data16
jnp
out
test
adc
xchg
pop
sub
je
arpl
xlat
lahf
inc
mov
mov
cli
sbb
or
hlt
pop
sbb
xor
jle
inc
je
rorb
jb
inc
mov
ja
in
pop
loop
popa
jecxz
xchg
outsb
mov
inc
cltd
stos
sbb
jb
pushf
fidivrs
out
cmp
pop
sbb
and
je
rcrb
xor
in
rcr
ja
and
dec
test
lret
bound
test
iret
test
adc
rorl
add
push
sub
aad
fdivl
ret
fistl
fstpt
pop
pop
push
sub
push
mov
in
mov
xchg
shll
mov
sbb
inc
and
dec
stos
loopne
lahf
inc
mov
push
repz
push
push
and
cmp
or
sbb
jl
adc
idivl
xchg
outsl
loopne
clc
adc
add
mov
push
fnstcw
loop
in
mov
jbe
enter
fcoms
scas
adc
pop
push
xchg
add
sub
mov
ja
xor
pop
jmp
mov
xor
pop
xchg
sbbl
shl
stc
push
mov
and
cs
or
inc
sarb
outsb
or
ss
mov
push
pop
jnp
cwtl
jl
xchg
test
test
xsha1
cmpsb
dec
mov
adc
xchg
jp
loope
rcll
test
xor
aad
inc
pushl
and
shll
ljmp
or
ficoms
inc
pop
adc
mov
push
cmpsl
and
int3
shrl
xor
push
add
lods
add
repz
pop
rcrl
fiadds
push
add
sub
pop
add
arpl
sbb
fwait
gs
scas
les
data16
add
and
sti
adc
inc
sub
imul
cmc
sahf
and
pop
add
nop
shrb
lock
xchg
add
mov
mov
arpl
and
xchg
xchg
stc
dec
movsl
inc
or
dec
and
mov
lea
push
sbbb
push
std
rcrl
shll
jecxz
sahf
pusha
mov
fdivrp
subl
add
sbb
rcll
add
mov
imul
lea
mov
ja
inc
in
inc
sbb
leave
mov
fldl
mov
or
pop
mov
mov
adc
enter
ja
in
out
ja
pop
fcomps
ss
inc
pushf
ds
cmp
push
cmp
and
lea
cmpsb
enter
push
jp
mov
mov
stos
pop
out
mov
mov
jo
cltd
jle
aas
cmp
mov
fmul
cmp
add
shr
sbb
aam
push
clc
insl
arpl
xchg
jbe
scas
or
sbb
and
int3
and
ficoml
add
xchg
adc
and
add
inc
inc
pop
outsl
pop
es
push
dec
jge
repz
fnstsw
in
xchg
sbb
int3
push
dec
sub
int3
das
pop
cltd
lcall
xchg
or
movsl
cmp
or
aaa
xchg
or
insb
inc
sbb
sbb
xor
js
jns
adc
out
ret
into
insl
into
ret
sahf
cmp
movsb
xor
or
shrl
lcall
leave
lahf
inc
mov
insl
mov
out
xchg
xchg
adc
mov
fldcw
add
sbb
neg
ds
xor
in
mov
insb
js
in
mov
fstps
jmp
jb
jne
aaa
rcrl
repz
movsb
imul
cmc
xchg
cmc
das
pop
jmp
pop
hlt
dec
dec
scas
cmp
lcall
xchg
xor
inc
mov
cld
ss
nop
std
aas
cmp
popf
xor
movsb
mov
sub
inc
jbe
and
fs
int
je
out
psubusw
cmp
cmc
mov
loope
aas
jo
les
sub
xor
std
sbbl
push
cld
dec
imul
fwait
cmp
xor
pushf
lock
mull
ficoms
sub
fldt
jl
lret
pushf
lea
orl
mov
out
push
push
test
inc
pop
inc
or
jns
cltd
mov
jns
or
xchg
pop
jae
rorl
adc
xor
pop
lahf
xchg
mov
shlb
xchg
jp
and
jmp
call
mov
mov
and
sbb
out
inc
fldl
pop
jge
xor
and
xor
ret
mov
stc
fistpll
test
aas
out
pop
add
insb
pop
pop
push
js
data16
repnz
das
cld
bound
dec
into
psubsb
ljmp
push
mov
test
aas
out
sub
dec
pop
es
dec
xchg
arpl
pop
enter
lea
fiadds
stc
lock
mov
stc
sbb
lea
ret
push
es
and
inc
cmp
sub
inc
mov
cmpsb
popl
aaa
loopne
pop
push
mov
jmp
and
or
lods
xchg
push
sbb
xlat
push
ficoms
sbb
inc
loopne
mov
pop
icebp
out
dec
sbb
jg
in
adc
mov
mov
sub
push
sti
xchg
cli
adcb
jbe
idivl
stc
and
in
hlt
std
pop
inc
incl
dec
cld
int
xchg
cmp
test
insb
dec
xchg
adc
mov
dec
repz
or
xchg
cld
fnstcw
jecxz
repz
mov
jno
push
cmpsb
push
clc
cmp
push
inc
pusha
cmp
xor
movsl
mov
ficomps
js
adc
rcll
movl
in
jbe
adcl
data16
xor
mov
sti
lods
cmp
mov
and
dec
jle
or
jbe
pop
lret
cmp
test
lret
jae
adc
movsl
adc
or
ret
scas
cmp
sbb
imul
or
ret
inc
roll
test
cli
sbb
mov
jae
rcr
repnz
aam
test
and
mov
cmpsl
inc
movsb
cmp
arpl
int3
inc
lcall
lods
loop
sbb
xor
cwtl
and
jb
outsl
ja
xchg
adc
sbb
and
push
xor
add
rorb
dec
mov
jl
and
cmp
insl
in
ds
sub
into
xor
aam
lahf
roll
jo
fstl
sub
xchg
nop
jecxz
outsb
dec
inc
fdivs
leave
or
adc
and
dec
pop
addr16
sub
sti
push
aad
xchg
and
xchg
ja
pop
neg
ret
xlat
inc
push
jmp
sub
jp
mov
ja
mov
jecxz
jg
mov
add
pop
rclb
xor
mov
mov
xchg
pushf
push
inc
mov
fldcw
mov
lods
sub
inc
add
jle
sbb
in
xchg
js
mov
pop
cs
xchg
push
and
jle
fs
mov
xchg
jb
push
rcrb
add
movhps
aam
ljmp
lea
sbb
or
and
fdivs
xchg
jne
pushf
jo
add
cmc
push
mov
xor
mov
jo
fists
push
leave
leave
xchg
imul
jns
movsb
into
into
pop
leave
adc
mov
fs
mov
adc
xor
es
scas
adc
jg
cmp
push
lahf
cld
mul
pop
push
xor
movsl
fdivrs
imulb
outsb
cmpsb
jns
and
xchg
mov
cmc
daa
xchg
insb
push
outsb
pop
mov
test
mov
add
mov
fsts
adc
ljmp
aas
mov
xchg
push
dec
push
adc
mov
and
jl
out
push
mov
pop
cmpsl
xor
ret
in
pushf
sbb
xchg
push
and
scas
xchg
cwtl
jns
adc
in
xchg
les
adc
aad
pushf
js
subl
fnstsw
adc
in
push
popf
data16
push
lea
mov
mov
lods
mov
fiaddl
aam
add
inc
mov
lods
inc
bound
xor
cmc
fstpt
xchg
out
push
lea
sbb
inc
into
or
pop
pop
vcvttss2si
pop
mov
fst
shrl
testb
cmp
add
out
add
ret
jle
cmp
push
repnz
cwtl
cmp
push
cmp
stos
leave
add
fldt
dec
lods
mov
dec
ljmp
push
outsl
test
lock
add
ret
test
pop
or
repnz
adc
pop
adc
jp
leave
xchg
cld
sub
pop
ss
cmp
stos
pop
mov
cmp
dec
dec
call
bound
sub
mov
es
testl
popa
sub
sbb
xor
sub
daa
xchg
ja
mov
push
add
movl
cmp
jg
cltd
cwtl
add
lods
add
pop
sti
leave
repz
dec
divb
mov
inc
xchg
adc
dec
out
mov
adc
mov
shrb
int3
cmpsl
push
int3
outsb
jae
adc
mov
cmp
xchg
daa
test
neg
xchg
add
xchg
jle
xor
sbb
popa
mov
add
sbb
cltd
shrb
mov
mov
adc
push
je
dec
dec
aam
sbb
mov
xchg
das
pop
xchg
mov
lea
cli
jle
cmpsb
mov
cmc
cwtl
push
xlat
jnp
or
scas
daa
mov
mov
push
sub
call
sarl
xlat
popa
mov
push
xchg
outsl
push
push
repz
imul
sbb
in
ds
insb
sahf
mov
test
adc
stc
adc
push
sub
cmp
adc
rclb
rol
xor
dec
jecxz
pcmpeqw
or
pop
mov
out
in
fisubrl
pop
xchg
sbb
out
sbb
je
gs
jnp
adc
xor
inc
je
dec
pop
adc
jmp
out
xor
or
xlat
pop
mov
repnz
sbb
fs
enter
cmpsb
cmp
lret
stc
or
dec
or
shlb
into
rorl
push
pop
ret
push
inc
adc
and
jecxz
pop
sar
imul
lods
and
test
lea
inc
add
sarl
sbbb
mov
sbb
add
xchg
fstps
and
xor
xor
push
mov
mov
pop
negb
int3
xorb
pop
fadd
insb
sti
imull
inc
lret
and
push
xchg
out
push
xchg
mov
jecxz
pop
test
ljmp
data16
mov
sub
inc
adc
mov
ds
daa
fsubl
das
dec
out
sub
dec
xchg
and
shlb
iret
mov
jl
mov
inc
fists
je
sub
xor
xchg
insl
jne
push
add
cmp
nop
adc
sbb
xchg
mov
pop
test
mov
push
mov
pop
sbb
leave
mov
sbb
pushf
xchg
xor
sub
outsl
popf
popf
into
negb
testl
inc
mov
sub
inc
mov
mov
mov
movsl
ret
jns
loopne
mov
and
mov
popa
cmp
push
mov
dec
mov
pop
push
sahf
and
into
mov
mov
insl
mov
push
add
adc
mov
sbb
inc
pop
jno
xchg
rcr
mov
aam
push
lcall
mov
clc
mov
pop
mov
cmpsb
clc
push
pop
jnp
and
xor
scas
jbe
push
xchg
mov
pop
rcrb
lds
dec
test
xchg
dec
imul
bound
stos
inc
mov
lea
aaa
push
sahf
jns
repnz
mull
fisttpl
mov
test
adc
std
add
repz
sbb
mov
cmp
inc
mov
inc
cmpsb
jg
inc
cmpsl
mov
mov
cmpsl
or
pop
popf
fildll
mov
and
test
in
jb
xor
daa
stc
notl
test
test
cli
ljmp
sub
lret
and
or
sbb
imul
shrl
push
inc
subb
xchg
pop
push
adc
fimull
dec
stos
push
fwait
cwtl
insb
insb
jl
cltd
xor
sub
mov
fdivl
xchg
push
sub
popa
sub
push
addl
mov
andl
frstor
cmp
popf
cmp
outsb
adc
sub
dec
repz
dec
pop
lea
push
out
lock
dec
jg
sub
push
xlat
jb
pop
sub
adc
ret
mov
jns
ss
clc
sbbb
icebp
dec
mov
in
push
js
ja
fs
in
sub
les
div
loop
test
adc
ds
repz
sbbl
in
loope
fs
lea
ja
popf
dec
jl
cmp
imul
daa
pop
and
jp
adc
rorl
shrl
mov
imul
jo
push
lret
mov
inc
dec
loop
je
and
xchg
push
je
push
pop
jp
fwait
sbb
jo
jns
rcll
addr16
inc
or
or
bound
imul
mov
mov
ja
mov
cld
in
or
mov
pushf
stc
mov
es
shll
scas
mov
sub
lods
mov
pop
jb
inc
divps
aas
lret
int
loope
and
mov
dec
xor
push
mov
test
in
dec
xchg
cmp
jns
add
rclb
add
popf
sarl
in
mov
into
add
enter
xchg
mov
nop
sbb
mov
jl
pusha
insb
mov
out
std
aad
adc
push
repz
fwait
loopne
aas
cmp
mov
cmpsl
rorb
cmc
and
xor
cmp
xchg
insl
imulb
xchg
popf
jle
lods
jge
repnz
mov
xchg
sub
xlat
stos
arpl
cmp
ja
iret
push
cmpsb
push
adc
and
lret
pushf
mov
push
in
ret
inc
in
insb
push
rcr
sbb
pop
push
push
inc
jge
jnp
loope
add
adc
dec
xor
dec
ror
out
cmc
sub
mov
add
mov
insl
or
idivl
inc
int
jg
divl
inc
inc
aad
xchg
or
hlt
out
push
movsl
lret
sar
cmp
jbe
add
imul
push
out
pop
popa
fisttpll
xchg
idivb
fdiv
sbb
rcrb
and
xchg
inc
push
cmp
fwait
out
repnz
arpl
pushf
adc
push
les
or
adc
adcb
int
cmp
lret
push
dec
sbb
mov
aaa
test
clc
bound
push
pusha
scas
bound
cmp
mov
cwtl
mov
cmp
shr
add
into
loope
mov
xor
decb
push
andl
outsl
mov
fcmovnu
mov
data16
pop
es
out
lret
push
adc
push
add
arpl
arpl
xchg
xchg
enter
pop
push
test
cmp
inc
cmpsb
jo
jnp
lret
aas
popf
mov
mov
rol
fs
mov
or
js
fadds
adc
les
lea
pop
daa
out
mov
or
xchg
dec
pop
jb
test
jp
lock
xchg
insb
cmovbe
cmp
fs
cli
movsl
outsl
jnp
push
cmp
lcall
sbb
push
cmp
loop
je
loope
fisubrl
daa
push
mov
addl
lret
cmc
outsb
iret
push
repz
jge
lahf
inc
sbb
add
lock
inc
stc
test
call
mov
push
sbb
movsb
xor
cmp
xchg
ja
or
inc
pop
sbb
imul
rcrb
ja
daa
inc
repnz
mov
xor
out
aas
daa
xchg
int3
jo
push
test
sbbl
das
ja
push
clc
filds
test
adc
orl
mov
in
push
push
jnp
and
pop
or
or
outsl
aad
or
mov
mov
adc
fsubl
cs
repnz
out
dec
sub
jl
stc
dec
pop
cld
mov
adc
pushf
sub
add
cli
jl
mov
adc
push
pop
xchg
cmp
adc
fidivs
aaa
add
mov
dec
mov
gs
aas
rcrb
imul
push
out
cmpsb
push
xor
adc
je
add
push
push
outsl
sbb
mov
or
or
xor
cli
cmpsb
ljmp
fistl
mov
mov
pushf
inc
rcrl
mov
jb
cmc
aaa
stc
inc
popa
jmp
cmc
jmp
jnp
cmp
rolb
sbb
xchg
add
cmp
nop
iret
sub
xor
loope
neg
pusha
std
mov
push
mov
pushf
and
pop
or
cmp
mov
mov
adc
add
jmp
cmp
and
jb
sti
mov
inc
pop
mov
mov
out
test
addb
popf
pop
mov
imul
cmp
pusha
addr16
iret
sbb
out
shl
ret
stc
insb
sarb
mov
cmp
add
push
icebp
fdivr
ss
jo
scas
lcall
dec
mov
cltd
xchg
pop
mov
es
test
mov
xchg
add
sarb
sti
mov
pop
sub
push
fwait
stc
sub
sub
push
dec
mov
in
or
cs
mov
shld
dec
in
out
jl
add
inc
stc
popa
mov
inc
mov
aaa
cmp
bound
cmpsb
jp
fcmovbe
and
sub
push
imul
icebp
pop
mov
sub
xchg
insl
cltd
popf
sub
ficomps
lds
sub
clc
jb
mov
mov
aam
iret
mov
rcr
sub
rol
cmp
out
mov
sti
inc
mov
dec
xor
mov
and
inc
pop
pusha
sbb
xchg
jmp
sbb
jge
sbb
sahf
or
ret
mov
mov
cmp
pusha
les
jo
mov
popa
xchg
mov
sub
jne
nop
int3
xor
je
jnp
ss
mov
lods
in
pop
sbb
mov
pop
in
and
idivb
push
aam
jecxz
mov
sbb
clc
mov
imulb
mov
mov
or
cld
jo
and
lods
movsl
daa
mov
aad
inc
or
mov
adc
jbe
mov
sub
cmc
fsubrl
mov
pop
pop
movsb
mov
pop
sarl
pop
out
inc
bound
mov
push
jmp
movsb
mov
xor
cmpsl
fldt
test
arpl
fwait
mov
in
dec
ljmp
jle
sarl
inc
mov
mov
cmc
xor
push
cmp
outsb
pop
mov
push
stos
fwait
aam
sub
push
or
jnp
add
int
enter
add
ljmp
dec
movsb
mov
lds
pop
mov
sub
das
addr16
sahf
lds
shlb
mov
and
mov
lods
sub
pop
cmp
jle
mov
pop
sbb
cmp
mov
addr16
idivl
mov
fldl
gs
inc
push
inc
and
cmp
pop
addr16
inc
cmp
and
ret
xchg
fst
test
mov
fdivl
dec
icebp
insb
sbb
in
call
call
test
lds
or
inc
cmp
xor
or
mov
aaa
test
jne
shlb
sbb
jge
scas
arpl
dec
gs
movsb
push
dec
jae
lods
test
dec
int
xchg
push
call
test
in
lods
push
inc
sbb
loop
push
push
jns
jne
cs
push
test
loopne
dec
inc
lods
mov
incl
cltd
sbb
jg
mov
sub
push
leave
lds
pop
in
mov
sub
decb
jmp
test
lcall
xchg
in
pop
pop
clc
lret
mov
xchg
cli
sti
sti
pop
push
cmp
call
lods
cltd
adc
or
sub
into
mov
inc
push
call
push
out
or
sbb
push
mov
pop
pop
add
and
arpl
scas
add
loopne
lahf
out
stos
jecxz
or
mov
mov
leave
adc
ja,pn
outsl
das
inc
push
mov
pop
cltd
adc
or
add
shll
in
daa
fsub
mov
push
cli
jle
jbe
loope
dec
out
dec
fwait
push
ret
cmp
jae
sarl
pusha
aaa
scas
jae
in
inc
cmc
leave
jo
in
aad
xchg
cmp
push
xchg
add
mov
sbb
sub
aas
cs
cmpsl
ljmp
stc
adc
cmp
xchg
and
sbb
xchg
mov
daa
add
cmpsb
stos
ret
and
cli
pop
mov
pop
and
stos
push
cmp
test
xor
out
lock
push
mov
mov
into
cmp
scas
mov
movsb
cltd
into
push
xor
add
mov
lcall
xchg
mov
arpl
jo
das
dec
cmp
scas
cmpsb
adc
lret
mov
in
push
push
arpl
xor
pop
adc
nop
pop
fnstsw
xchg
sub
lds
ss
notl
push
popf
jns
inc
and
sahf
repz
dec
insl
pop
lods
push
jns
sub
jecxz
cmc
pusha
test
imul
imul
cmp
push
pop
cmp
fistps
add
push
aas
push
mov
dec
jns
imul
pop
sub
in
dec
push
dec
dec
into
lods
jecxz
adc
xchg
sbb
dec
addps
dec
xlat
scas
dec
xchg
cmp
pop
subl
out
call
xor
imul
inc
enter
mov
add
fadds
adc
loope
icebp
fcoml
scas
jecxz
push
pop
mov
imulb
inc
xor
arpl
mov
sahf
xchg
sub
inc
pop
cli
jne
mov
cwtl
dec
popa
mov
push
pop
lock
cmpsb
cmpsl
rcrb
dec
sbb
pop
mov
ret
sub
mov
rcrl
mov
xor
add
xchg
dec
and
or
add
insl
out
outsb
cwtl
aam
mov
and
ret
dec
js
aaa
or
test
pop
rcll
divb
ret
out
cltd
sub
ljmp
xor
fidivrl
adc
and
stc
js
xor
imul
mov
dec
ljmp
loopne
gs
lahf
xor
inc
inc
dec
scas
jns
nop
js
ljmp
adc
dec
mov
xlat
push
cld
or
jecxz
fstpl
scas
lock
fwait
subb
imul
push
lahf
add
dec
mov
jg
xchg
sbb
sub
data16
adc
clc
data16
adc
fs
mov
ljmp
popf
lods
mov
adc
dec
mov
mov
int3
push
jmp
iret
and
ljmp
push
int
sbb
hlt
sbb
int
lods
pop
rclb
cld
ret
jae
push
pop
dec
xlat
and
insb
aas
out
hlt
mov
xor
cmp
pop
push
lods
fistpll
mov
pop
addr16
push
pop
aas
imul
xor
sbb
shr
inc
dec
pop
jbe
pusha
jl
addr16
or
aam
js
or
imul
std
pop
cli
mov
sub
imull
fistl
fcoml
es
enter
int3
cmp
dec
repnz
insl
pop
and
les
sti
adc
jge
mov
iret
outsb
outsb
call
push
jae
addb
repz
imul
rcll
and
cli
xlat
add
ljmp
sub
dec
push
pop
dec
arpl
sti
jnp
xchg
or
subb
in
sarl
or
jb
mov
push
int3
out
mov
test
mov
or
jge
jo
lods
lret
mov
pop
xchg
out
pusha
mov
out
insb
inc
xchg
int3
test
or
push
push
xlat
cwtl
push
mov
fs
xor
pop
mull
xchg
addr16
and
xor
and
push
hlt
lods
stc
sbb
cmp
ja
fisubrl
fsts
add
sahf
jle
mov
lahf
inc
xchg
xchg
jle
test
mov
jnp
leave
sbb
xor
mov
leave
repnz
pop
fistpl
out
nop
fmull
sub
dec
cmp
arpl
sub
push
dec
jnp
xorb
xchg
cmp
and
sub
push
jnp
sub
mov
mov
or
cmp
lods
inc
push
hlt
mov
fiaddl
in
loopne
rcl
imul
imul
xchg
movsl
adc
jle
out
mov
outsl
cmp
bound
cmp
mov
fmuls
cltd
scas
mov
add
cmpsb
adc
add
dec
faddl
add
sbb
stc
xor
xchg
rcrl
xchg
cli
mov
inc
dec
sub
push
mov
sbb
in
mov
ss
aas
mov
jne
icebp
dec
dec
inc
jge
ds
xchg
movsb
push
scas
shll
mov
js
mov
pop
in
push
xchg
push
inc
mov
jp
inc
and
pop
fsubr
in
cld
jmp
adc
sbb
das
add
cmp
cmp
cmp
or
mov
xor
add
xchg
push
stos
hlt
repnz
pop
adc
mov
mov
push
int3
pop
cmp
pop
inc
mov
add
pushf
loop
adc
addb
dec
cs
mov
push
iret
dec
xchg
mov
addr16
subl
cmp
cmpsb
push
sbb
sub
and
lods
cmp
jmp
cmpsb
and
out
jns
imul
popa
aas
rcr
xchg
mov
ss
out
scas
fistpl
rorl
loop
inc
mov
mov
popf
cmp
ret
jmp
mov
add
jg
pop
out
and
in
inc
cmp
xor
out
sbb
imul
mov
gs
xchg
sbb
pop
movsl
fwait
mov
dec
aaa
stos
cs
mov
ljmp
je
add
add
push
aaa
ficoml
shrl
jo
push
mov
test
mov
dec
dec
into
leave
lods
add
imul
stos
lret
add
sbb
mov
mov
int
xlat
xchg
out
repnz
and
xchg
adc
dec
cmp
shll
icebp
std
into
fildll
xchg
rolb
push
gs
cmp
shr
inc
insl
cmpsb
mov
xor
enter
cmpsl
mov
out
iret
movsl
pop
pop
add
aas
or
or
lods
pop
jb
pop
adc
adc
xchg
push
mov
jb
mov
rclb
fcomp
mov
jp
out
dec
popf
bound
out
js
mov
cmp
in
aaa
call
add
adc
stc
ret
dec
sbb
scas
mov
pop
stc
iret
lds
arpl
mov
stc
incb
and
fiadds
inc
fisttpl
cmp
sbbb
fst
sbbl
out
testb
cmp
push
ljmp
push
mov
mov
xchg
fsubrs
cmc
mov
int3
lahf
or
mov
addb
cld
inc
and
sbb
mov
xlat
add
adc
adcl
outsl
jbe
loop
in
addr16
mov
hlt
xorb
or
push
sub
mov
das
divl
mov
adc
data16
sahf
mov
dec
mov
sbb
mov
push
mov
dec
mov
icebp
rcrb
in
mov
inc
and
xchg
rcrb
mov
pop
sub
push
jg
repnz
push
sub
cs
test
sbbb
lret
ljmp
mov
pop
rcl
lods
out
leave
stc
scas
jmp
mov
inc
push
push
xchg
lahf
int
pop
sbb
push
ja
xor
adc
mov
sub
mov
mov
incl
loopne
cld
int3
das
sbb
in
cltd
pop
dec
ficomps
dec
gs
stc
dec
sahf
enter
icebp
inc
pushf
iret
inc
repnz
jg
movsl
pop
test
call
insb
inc
add
dec
inc
push
adc
lock
dec
jl
fidivrs
aam
fistpll
dec
mov
mov
pushf
sarb
dec
lret
fistl
push
popf
sti
idivb
push
andl
ja
lahf
mov
and
inc
jmp
push
sbb
or
jae
iret
mov
jne
cmp
xor
pop
push
push
stos
sub
sub
sbb
add
and
push
mov
mov
push
sub
in
lods
dec
xchg
ret
cltd
xchg
pop
or
rolb
pop
loopne
insb
clc
sub
dec
outsb
add
sub
mov
outsl
push
mov
xchg
shrb
dec
int
mov
cmp
cld
mov
cli
inc
mov
mov
aad
rolb
xchg
ss
jle
sahf
call
shl
push
adc
pop
lcall
add
pop
cmp
movsb
popl
xchg
ror
pop
mov
or
ds
jmp
test
data16
pop
and
cmp
les
rcrl
xchg
pop
out
mov
rolb
pusha
cmp
and
cmp
dec
lea
mov
push
jle
sub
inc
insb
push
jl
mov
les
dec
jmp
mov
push
dec
es
aad
and
hlt
repnz
inc
mov
arpl
dec
add
cmp
loope
pusha
inc
rcll
adc
and
and
call
dec
movsb
cli
add
mov
cmp
or
ds
mov
je
pop
and
pop
data16
pushl
mov
dec
push
inc
add
or
inc
xor
icebp
mov
adc
std
jl
or
es
mov
movsb
cmp
jne
dec
scas
pop
in
sub
les
cmpsl
lahf
inc
js
sbb
cmp
push
jle
stos
imul
xchg
mov
pop
insl
test
jmp
out
sbb
or
inc
jbe
mov
pop
rcrl
pusha
lcall
imul
inc
test
loop
dec
xchg
xchg
sub
lahf
xchg
cmp
out
pop
inc
std
xchg
push
lods
shr
dec
sbb
cltd
rcll
cltd
js
jmp
fcoms
pushf
test
mov
out
dec
pop
sar
pop
orl
fbld
push
jnp
scas
jne
xlat
js
cmpsl
xchg
mov
nop
add
xlat
jp
jecxz
mov
push
jmp
fsubl
and
addr16
int
and
adc
dec
mov
xchg
mov
adc
out
in
rclb
push
xchg
and
test
aam
jg
mov
jg
pusha
ja
mov
rolb
std
push
xor
xchg
sarb
test
fcmovu
test
sbbb
pop
lds
dec
mov
insb
dec
cmp
repnz
mov
pop
push
jo
jmp
int
lock
xor
rorl
test
mov
pop
mov
in
jbe
jmp
jmp
adc
shl
mov
sub
ret
cld
ss
pop
mov
inc
jno
pop
cmp
jo
aas
mov
fisubrs
fdivrs
jg
mov
lds
dec
test
jle
xor
push
cmpsl
push
jbe
sub
cs
lret
enter
es
pop
ret
sahf
orb
dec
test
je
pop
sbb
jg
sbb
mov
sbb
fsubl
adc
lods
add
sub
mov
sbb
daa
fcomps
fisubrs
fisubrs
mov
dec
add
gs
pop
mov
xchg
popf
repz
mov
scas
movsb
add
cwtl
loopne
mov
push
jecxz
sub
xchg
hlt
xchg
test
lcall
xorl
inc
clc
push
aad
shll
xchg
sahf
inc
pop
jle
loopne
arpl
clc
push
xor
adc
movsb
sub
in
jmp
add
cmp
mov
mov
movsl
icebp
mov
stc
insb
lea
sahf
mov
xor
dec
add
sub
jle
push
out
jmp
adc
mov
add
jecxz
jno
jbe
inc
int3
lock
jl
jp
xor
cmp
icebp
lcall
stos
xchg
or
pop
sbb
lods
jle
xchg
adc
std
xchg
mov
loopne
jb
ds
mov
jmp
pop
decl
jb
fsubr
sahf
adc
mov
data16
in
jp
jge
push
sbb
jle
jns
js
fdivs
or
push
mov
xchg
and
jnp
imul
aaa
addr16
fucomip
dec
test
les
mov
aam
mov
pop
adc
dec
inc
insb
push
dec
sbb
adc
rcrb
jno
mov
repz
add
jecxz
scas
sbb
movsl
dec
cwtl
mov
sub
js
testb
add
inc
dec
push
aam
movsb
xchg
leave
push
jl
sti
or
dec
adc
inc
insb
xchg
push
xor
xchg
adc
lds
mov
sti
mov
lods
loope
mov
arpl
xorl
push
fimuls
and
ffreep
xchg
stos
popf
mov
insl
mov
lea
stos
popa
push
cmpsl
popf
mov
mov
movsl
cmp
cwtl
mov
jmp
xchg
imul
mov
je
jle,pn
pop
ljmp
das
cmp
out
scas
pop
inc
push
call
mov
pop
mov
pop
dec
or
sahf
pushf
in
fisttps
hlt
pop
mov
lret
lods
je
xor
setnp
push
sbb
stos
test
out
mov
adc
enter
fsubs
or
es
bound
les
cs
ja
lret
sbb
sbb
div
je
lods
stc
stos
xchg
push
lfs
xor
adc
inc
pop
les
outsb
xchg
lahf
adc
fisubrl
jmp
bound
into
ret
out
lea
sbb
aas
jle
push
orl
mov
push
adc
cmp
xor
pop
dec
xchg
ds
sub
fdivr
loopne
adc
mov
bound
sbb
jmp
mov
adc
mov
push
test
popf
pop
sub
outsb
jb
cmc
test
add
add
repnz
sub
and
out
xchg
push
mov
nop
mov
inc
sub
dec
pusha
and
or
add
jl
addl
lret
dec
adc
aaa
mov
mov
mov
inc
popf
mov
test
call
sub
fwait
xchg
dec
test
inc
mov
repz
dec
and
push
and
repz
inc
cmc
sub
mov
insb
sub
xchg
popl
out
xchg
mov
xor
xchg
inc
mov
popf
cwtl
lahf
and
push
loop
and
lcall
xchg
fsubrl
cmp
cmp
std
ret
inc
jb
clc
dec
pop
pop
mov
shll
pop
sub
add
pop
sbb
idivl
push
aad
jp
mov
jns
and
sti
lods
cld
movsl
push
or
jb
subl
pop
lods
xor
lods
mov
mov
inc
in
pop
push
mov
mov
mov
out
xor
outsb
out
cmp
cmpsb
dec
and
rorb
shlb
push
cmpb
dec
icebp
dec
and
out
pop
mov
movsl
mov
sahf
jno
into
rorb
movsb
or
mov
stos
mov
outsl
jmp
ss
sti
in
adc
ret
push
and
roll
addr16
pop
std
jae
fidivs
sub
arpl
ja
pop
jp
je
ficomps
cmp
fcmovnb
dec
ds
sub
mov
dec
jp
xor
std
scas
cmc
jl
es
shlb
sbb
inc
mov
xchg
movsb
xor
sbb
movsb
push
pushf
shlb
jg
dec
loope
or
lock
xchg
testl
scas
adc
push
fcoml
jmp
pop
dec
or
cmp
sbb
das
ljmp
xchg
inc
ja
aas
inc
cmc
negb
jno
cmp
outsb
lods
adc
notb
loop
add
movsb
sub
cmc
mov
sub
push
call
iret
in
mov
jp
cmp
fsubrp
push
lods
fidivrs
xchg
stc
notl
or
test
adc
rclb
jo
sub
aas
cltd
out
add
mov
into
push
out
push
inc
xor
or
mov
out
sbb
test
xor
or
test
dec
or
stos
mov
fwait
push
jp
cld
mov
or
sti
xchg
sub
icebp
mov
add
dec
pop
dec
lods
cwtl
sbb
mov
mov
aaa
push
push
or
add
nop
jp
iret
or
add
and
shlb
push
xlat
sub
and
sub
xchg
in
les
mov
sarl
dec
sub
sbb
ljmp
int3
imul
adc
jne
stos
insl
mov
hlt
fwait
and
lret
cltd
in
adc
adc
out
scas
and
or
mov
orl
out
ret
and
pop
add
push
dec
xchg
insl
jmp
sub
nop
pop
xor
enter
daa
int
pop
daa
push
in
ret
sbb
nop
jnp
adc
xor
inc
stc
sub
test
aas
mov
inc
jmp
push
push
scas
mov
decl
nop
mov
push
push
push
dec
cwtl
je
cmp
inc
mov
ljmp
push
sbb
sahf
sub
mov
fildll
push
call
pop
inc
xchg
outsl
mov
test
xor
rcll
sub
add
lea
ljmp
imul
sbb
in
ret
test
fcomps
adc
xor
negl
cmp
xor
loope
fdivl
int3
and
scas
arpl
rolb
es
lock
cmp
or
push
lea
pop
pop
adcb
inc
cmpsl
std
xor
sbb
pop
lcall
mov
cmp
pop
pop
push
sti
adc
add
enter
sbb
shrb
xchg
jecxz
dec
sbb
xchg
hlt
dec
mov
hlt
imul
daa
testb
sub
xlat
ss
and
adc
xchg
fldcw
test
int3
mov
lea
fs
or
test
xchg
arpl
xchg
pop
lcall
mov
lock
lcall
unpcklps
sub
out
test
arpl
push
ja
mov
imul
faddl
lods
mov
stos
pop
and
nop
test
add
out
adc
mov
and
popa
and
push
ret
test
js
fisubrs
jo
mov
inc
fwait
out
daa
sti
cmp
xor
pop
add
loopne
pop
mov
or
repz
push
adc
loop
push
mov
mov
jl,pn
adc
push
mov
out
or
lret
mov
add
sub
xchg
mov
lods
test
sub
hlt
and
inc
popf
adc
xor
sub
jb
stos
inc
dec
jle
push
orl
adc
mov
xlat
js
lds
pop
add
pushf
pop
pop
mov
pop
ftst
fsubrs
push
dec
mov
rcrl
push
or
ret
in
cwtl
add
ds
fistps
lods
lcall
mov
sarb
jg
iret
jl
orb
rcrb
fsubrl
and
cmp
mov
mov
sbb
adc
sub
pop
lock
iret
mov
lods
xor
aaa
xor
stos
adc
lds
xor
cmp
cmpsl
jb
xor
jmp
mov
xchg
emms
ret
lods
dec
in
push
ret
xor
cmp
inc
mov
stos
test
sub
bound
cmpsl
out
fcom
adc
mov
fstl
add
adc
cmc
popa
icebp
sub
lret
jns
fisttpl
sub
scas
xchg
or
cmpsl
ja
enter
mov
stc
and
in
jns
cmovbe
jb
and
mov
jg
shll
aad
test
frstor
mov
sbb
lahf
sub
and
mov
orb
outsl
test
addr16
push
sub
mov
loopne
pop
nop
out
pop
xchg
xor
sahf
mov
jge
pop
jg
push
push
mov
push
into
scas
lds
jbe
inc
int3
fdivs
mov
xor
mov
cli
inc
sbb
fbld
mov
hlt
lcall
adc
jbe
cmc
lods
negb
enter
mov
mov
sub
lock
push
sbbl
mov
xor
or
or
pop
pop
das
inc
mov
push
cmp
fsubs
xor
mov
inc
mov
lods
sbb
sub
push
sbb
pop
mov
ss
sub
stc
xchg
sbb
mov
ss
adc
push
push
push
add
stos
push
add
neg
lods
push
std
cmp
cwtl
lods
test
filds
sbb
adc
mov
mov
pcmpeqw
sar
xchg
sbb
fcmove
inc
adc
lahf
mov
adc
iret
cmp
jmp
dec
sbb
push
scas
xchg
dec
das
xlat
push
sbb
pusha
hlt
xchg
dec
mov
aad
push
shrl
js
mov
xchg
orb
push
or
adc
push
cmc
jne
add
pusha
lods
arpl
inc
cld
lods
xchg
sbb
test
push
xchg
cmp
rolb
fsubl
push
lea
xchg
loop
sbb
mov
inc
add
scas
lret
adc
subl
imul
iret
lock
inc
inc
rcr
jmp
mov
ja
jo
add
arpl
stos
test
rep
mov
addr16
cs
fstl
dec
pop
cmp
aad
xor
jle
leave
push
out
xchg
pushf
push
mov
xlat
sub
sub
mov
fisttpl
xor
stc
inc
fdivrs
xor
call
lea
in
mov
mov
and
sub
jno
sbb
push
and
jg
ljmp
insl
add
stc
lds
insl
ret
iret
add
mov
lret
dec
sub
adc
mov
in
mov
lret
inc
cwtd
lock
adc
cmp
data16
push
add
movsb
push
mov
jl
rolb
mov
inc
add
repz
sbb
mov
sub
pop
mov
lods
out
and
mov
fidivrs
sub
mov
cmp
int3
mov
test
push
out
xchg
fisubrs
mov
mov
mov
mov
push
cltd
pop
fcomi
rep
iret
pop
mov
mov
sahf
push
cli
fiaddl
dec
ja
fisttpll
ret
mov
loope
dec
ror
std
fistpl
into
xlat
insl
shlb
push
sarb
sbb
pushf
cltd
add
jo
inc
test
pusha
js
ds
dec
loop
clc
mov
cmp
adc
xlat
orb
mov
inc
dec
push
mov
dec
jnp
cwtl
jns
mov
popf
movsb
popa
ret
fdivl
mov
imul
ficomps
inc
mov
scas
cmpsl
pop
push
jecxz
cmp
in
mov
cmpsl
xor
iret
ret
pop
decl
lahf
fdiv
out
mov
jmp
add
cli
mov
ljmp
inc
jb
xor
xchg
aad
cmp
iret
mov
es
xchg
push
stos
leave
xchg
push
fs
adc
mov
lret
sbb
sti
mov
dec
push
sbb
push
dec
gs
lods
jbe
addr16
xor
mov
cmpsb
push
in
dec
add
dec
and
mov
cmpsl
dec
lods
xor
push
mov
cmc
jecxz
ret
jmp
rcll
and
push
cmp
add
push
jge
cli
cmp
push
sub
sub
mov
and
xchg
jg
scas
jecxz
cmp
inc
ljmp
push
pop
mov
inc
leave
jb
rclb
stos
push
pop
stc
lods
scas
outsb
cmp
inc
cmp
js
movsl
jnp
cmpsb
jmp
adc
mov
jle
mov
push
insb
ds
push
push
enter
in
ret
jg
add
pop
std
fxch
lods
iret
pop
dec
inc
js
inc
cs
and
push
frstor
adc
insb
and
cli
std
dec
or
or
sbb
xlat
pop
jecxz
inc
sub
not
icebp
ljmp
mov
inc
popf
xor
sti
out
inc
outsb
dec
ljmp
sub
add
mov
adc
pushf
xchg
mov
outsl
out
fildll
xor
enter
shll
sub
cmc
in
inc
push
int
aad
call
insb
mov
and
cli
pop
ret
xorl
mov
stos
dec
mov
sub
jne
mov
leave
xor
mov
popa
in
mov
movsl
and
push
dec
movsl
sbb
pop
cmc
aas
mov
push
jo
add
cwtl
test
cmpsl
js
incl
sbb
adc
sbb
js
test
push
inc
nop
push
mov
int3
add
mov
out
xchg
xchg
bound
rol
add
sahf
jmp
sbb
sub
in
push
inc
lods
push
repz
fcoml
icebp
jmp
jo
decl
cmp
pop
push
ficoms
fisttps
fcomps
lahf
adc
xchg
fs
cmp
lock
push
lcall
sbb
aam
shlb
outsl
xor
out
mov
das
leave
std
adc
inc
sbb
dec
adc
add
jae
cmp
push
negl
xchg
cmpsl
outsl
fadd
cmp
jmp
sar
fcomip
lock
xchg
test
dec
adc
sbb
ja
cltd
jg
int
mov
push
popa
mov
sub
lods
jmp
or
test
cmp
imul
orl
xchg
loope
pop
hlt
xor
rcll
push
loope
stos
push
movsl
jp
or
test
inc
jne
daa
cmp
mov
rcr
add
or
fidivl
jnp
mov
pop
push
stc
pop
inc
push
mov
jno
xchg
and
movsb
sub
xchg
sbb
ljmp
sbbb
repnz
mov
enter
scas
dec
loopne
cmp
les
loope
in
addps
pushf
push
mov
inc
addr16
out
push
mov
inc
or
outsb
pop
push
or
push
adc
add
into
sub
psrld
add
movsb
fwait
inc
int3
in
mov
clc
in
fdivrl
in
mov
clc
stos
mov
outsb
xchg
call
mov
or
faddp
imul
dec
adc
push
cld
lret
add
mov
mov
fnstenv
sub
out
leave
jmp
and
gs
pop
daa
call
jno
lods
mov
adc
loope
mov
sub
pop
xchg
sarb
add
out
push
jne
pop
and
std
jmp
out
daa
inc
mov
or
add
jbe
shlb
jmp
out
mov
ret
dec
dec
pop
add
mov
sub
ja
inc
push
jb
es
sbb
inc
outsb
or
cmp
ljmp
dec
xchg
shrl
pop
test
adc
mov
pusha
mov
loopne
cld
lahf
or
sub
dec
cwtl
addr16
sub
xchg
repnz
mov
test
pop
jne
not
out
xchg
out
mov
lcall
stos
dec
and
leave
aaa
push
xor
jmp
repz
dec
xchg
sub
adc
lcall
mov
repnz
ss
xchg
bound
stc
pop
or
mov
cmp
jnp
sbb
je
or
ss
or
imul
popa
daa
test
cltd
hlt
sub
scas
fwait
popf
jl
js
pusha
mov
xor
cld
inc
mov
cmpsl
jp
xchg
mov
mov
dec
scas
fwait
xor
js
fldenv
xor
stos
sbb
pusha
shlb
sub
inc
stos
xchg
mov
pop
orb
aad
cmc
mov
dec
xchg
inc
or
loop
sub
adc
pop
mov
enter
pop
out
lds
xchg
inc
stc
adc
sub
jp
jbe
push
jmp
mov
nop
push
push
gs
dec
in
out
fwait
jno
inc
lcall
pop
mov
fbld
into
mov
adc
dec
les
push
in
hlt
adc
shl
sub
mov
sbb
test
cs
adc
mov
test
add
push
add
mov
dec
push
stos
sub
call
stos
or
arpl
cld
push
or
sub
punpcklbw
mov
xor
jo
sub
dec
mov
shr
nop
mov
pop
js
xorl
and
mov
movsb
sub
pop
and
inc
aam
or
gs
mov
sbb
lea
popf
pop
push
sbb
jp
cs
std
mov
adc
in
stos
bound
insl
push
sbb
stos
push
repz
dec
loopne
push
vpunpckhwd
sbb
cs
mov
adc
cmp
andb
cmpsl
insb
inc
jp
adcb
aad
loope
nop
data16
icebp
jle
mov
ds
add
dec
sub
int
test
push
movsl
sbb
lcall
push
imul
jno
repz
lea
inc
dec
and
mov
xor
jbe
out
adc
xor
inc
and
inc
or
mov
inc
lret
jmp
adc
add
fst
sar
nop
and
push
push
adc
add
dec
rorb
es
cld
push
stos
in
sbb
repz
test
xchg
mov
stos
ljmp
aam
loopne
lcall
mov
pop
inc
sbb
xchg
pop
insb
stc
and
enter
nop
push
repz
jnp
imul
jbe
aam
cltd
push
dec
cwtl
test
jo
sub
gs
outsb
push
or
cmpsl
mov
mov
daa
add
mov
sbb
std
loop
fildll
push
les
push
mov
xchg
test
adc
or
jge
pop
xor
in
sbb
add
roll
add
aaa
in
and
sbb
jno
cmp
cmc
subb
enter
stos
into
shl
test
das
sub
xchg
fisttps
and
rorb
or
xor
into
call
xchg
sub
inc
xchg
loope
fidivs
inc
jge
mov
inc
mov
negb
mov
jnp
mov
xchg
out
xchg
xor
cltd
decl
pop
data16
cmp
mov
xorb
jle
cmpsl
clc
pop
mov
adc
pop
fcoms
gs
mov
scas
cli
xchg
call
jl
lods
cmpsl
shl
xor
lret
add
sbbl
cld
out
xchg
clc
pushf
lods
testb
roll
dec
xor
sbb
das
lret
iret
pop
mov
add
mov
xor
cld
clc
and
inc
jle
pop
dec
leave
push
es
xor
lcall
jle
loope
loop
xchg
scas
xchg
inc
and
scas
jo
push
xchg
pop
sub
or
xor
mov
cmp
sub
mov
xchg
mov
rcl
pop
xlat
or
ret
push
jne
test
fmuls
xor
pop
xchg
movsl
divl
popf
cmc
mov
and
daa
iret
fists
pop
adc
inc
jns
into
das
out
inc
ror
sbb
and
fsubrl
stc
jb
push
pop
and
mov
pushf
mov
ret
shll
sahf
adc
ss
mov
popf
lds
add
ret
mov
loope
pushf
inc
mov
bnd
pop
cwtl
mov
xor
mov
sarl
mov
jmp
adc
rorl
mov
mov
cld
imul
in
add
xchg
mov
imul
or
dec
sub
inc
es
stc
pop
rorl
mov
jbe,pn
or
or
jae
scas
mov
jne
jns
push
sub
pop
mov
lea
mov
test
mov
fst
ss
stos
xor
imul
es
xchg
xor
push
inc
fs
lds
sub
stc
add
inc
std
mov
dec
scas
sbb
dec
push
xchg
jge
data16
push
scas
push
pop
sub
dec
xchg
sub
add
lret
test
inc
or
push
sub
xchg
imul
adc
jae
push
xchg
scas
inc
in
cmovle
leave
test
mov
pop
xor
arpl
test
dec
add
inc
orl
adc
jno
mov
jns
scas
sbb
mov
jmp
iret
sti
pop
lret
adc
mov
aam
mov
nop
ja
aaa
or
push
push
pop
xchg
sub
shlb
ror
xor
mov
pop
lds
cmp
stc
sub
icebp
pop
push
pop
in
pusha
stc
push
lahf
aad
cmp
adc
sub
lea
dec
mov
xchg
mov
insb
xchg
test
stc
mov
dec
les
repz
cltd
inc
out
jnp
adc
mov
inc
xor
xchg
jno
mov
loop
notl
sbb
int
roll
mov
xchg
dec
stc
cltd
xchg
sbb
jmp
sar
push
add
xchg
mov
lahf
sub
sti
or
mov
jno
call
shl
or
and
flds
imull
cmp
mov
es
out
push
enter
and
pop
not
test
pop
add
bound
in
pop
sbb
iret
mov
add
adc
xlat
out
cmp
int3
lret
fmull
in
mov
mov
fninit
stos
fwait
pop
fdivrs
xor
xorb
idivb
dec
sub
xchg
push
ja
repnz
dec
mov
or
dec
loope
or
jmp
aam
xchg
pop
mov
fwait
lods
adc
cmc
sbb
dec
sbb
cwtl
daa
mov
or
test
cmpsb
mov
mov
out
test
push
shll
cmpsb
push
popf
dec
jo
and
bnd
mov
nopl
int
inc
mov
push
cmp
int3
cmpsb
das
cmp
dec
stc
out
push
aad
push
mov
sbb
dec
pushf
sbb
inc
ja
add
insl
daa
and
call
cmp
mov
mov
inc
jle
jno
push
xor
sub
mull
ljmp
stos
enter
push
xchg
push
lods
cs
movl
jmp
rorb
cmp
cli
rorl
jb
scas
in
adc
out
loopne
test
xchg
add
dec
pop
mov
imul
hlt
adc
data16
shll
inc
iret
cs
and
sub
cmp
cmp
lcall
mov
subl
jl
or
mov
and
inc
les
inc
cs
cmc
sub
fimuls
pop
pop
clc
mov
and
xchg
sub
xor
call
mov
jle
jmp
iret
push
add
js
pop
fwait
daa
leave
out
fbstp
dec
xchg
cmpsl
shll
inc
jae
shlb
pop
data16
sub
mov
loope
jae
mov
addr16
xchg
xorl
test
into
das
mov
push
das
popa
mov
loop
add
push
cmpsb
xchg
hlt
mov
push
pop
fnstcw
dec
ret
insl
pop
aad
inc
ds
shrl
js
jecxz
popf
sub
add
aaa
in
fs
add
insb
addr16
mov
cmp
add
gs
inc
mov
jp
inc
mov
adc
lods
or
pop
lea
cmpb
repnz
jns
dec
sub
je
test
push
or
sub
adc
pop
mov
lods
adcb
mov
paddsw
test
pop
lods
mov
add
in
pop
inc
xchg
cltd
lock
sub
add
addr16
mov
sub
adc
lock
imul
scas
ja
and
sbb
rcl
inc
aam
les
shlb
push
mov
jne
int
mov
sub
cli
inc
in
cmp
fs
jb
xchg
pop
sar
sbb
or
and
adc
dec
enter
push
repz
arpl
inc
ss
mov
push
mov
fstpl
push
cmpsl
or
pop
rclb
adc
xchg
adc
fwait
jle
pushf
and
xchg
shll
sbb
aam
xorb
andl
addr16
out
dec
pusha
fidivrs
xchg
out
dec
push
dec
cmp
lods
dec
cmp
dec
movsb
sti
adc
les
xor
mov
ja
push
mov
pusha
push
loop
fistpl
addr16
push
in
jae
addr16
mov
je
and
inc
xor
xorl
out
es
sub
shlb
mov
xchg
aad
add
into
mov
lret
out
inc
stc
jns
dec
roll
sbb
lods
xchg
cs
mov
dec
es
scas
jbe
hlt
lcall
nop
add
mov
xchg
adc
cmp
js
mov
inc
mov
dec
int
push
push
and
scas
xchg
xor
mov
jae
cmpsl
adc
pop
sbb
mov
add
fidivs
jmp
popa
fildll
imul
push
mov
loope
xchg
add
in
push
int3
and
jge
lods
cmpsl
addr16
add
inc
loopne
cmp
cli
aaa
adc
movsb
lds
int
mov
mov
xor
mov
mov
insb
loop
aad
push
aas
push
out
dec
mov
inc
sub
or
push
lret
ja
cmc
aad
movsl
sti
cmpsb
xor
pop
inc
xchg
add
push
repz
insb
jecxz
jnp
stc
inc
les
lods
cmpsb
push
shll
lods
out
and
adc
xor
pop
cmp
dec
pushf
inc
scas
roll
xchg
xlat
lock
pushf
cld
sub
push
jbe
pop
sub
test
lds
sbb
mov
mov
rcrb
mov
add
and
jne
pop
lret
xorb
mov
dec
jbe
shr
adc
repnz
adc
repnz
testl
jmp
cmp
filds
jge
sub
push
jmp
sbb
in
xchg
add
sbb
dec
and
jmp
out
mulb
xor
fldenv
xchg
test
stos
mov
je
or
and
in
jp
sub
mov
inc
idivb
outsl
cmp
xchg
mov
popa
sub
push
cltd
dec
outsb
and
adc
and
movsl
addr16
cs
pop
push
and
or
insb
loopne
pusha
popf
insb
jge
cld
sub
sahf
fmul
sub
lock
or
fst
pop
add
push
shrb
mov
int3
sbb
loopne
sub
cmp
cmpb
cltd
orb
je
addr16
divl
xorl
mov
stos
cmpb
mov
mov
popf
dec
cltd
cmp
shl
xorps
adc
dec
cmp
ljmp
sbbb
call
xchg
sti
mov
rcl
mov
aas
mov
cmp
fnop
fs
fistl
sub
outsb
mov
loopne
mov
dec
push
fiadds
inc
or
lods
mov
outsb
sbb
outsl
iret
pushf
adc
jge
and
sub
sbb
mov
std
cmpsl
dec
aam
shlb
or
pop
iret
jae
add
js
fbld
je
mov
lds
jmp
sub
lea
mov
repnz
jl
mov
add
movsb
incb
shll
pop
mov
mov
pop
outsl
dec
call
inc
lahf
iret
push
pop
xchg
cltd
popf
dec
mov
or
xor
or
mov
pop
and
rorl
sub
cmp
mov
add
andl
dec
pop
lods
es
mov
psubb
mov
test
push
sti
push
ficoml
push
cmp
push
das
mov
dec
gs
push
mov
xchg
stos
cmpsl
ret
icebp
mov
aam
test
into
mov
xor
and
call
jp
aad
mov
jbe
lcall
dec
sbb
mov
test
push
cwtl
jl
cli
sub
cmp
and
rcrl
xlat
pushf
imul
mov
test
add
lods
mov
loop
pop
repz
mov
loopne
mov
xchg
aaa
push
and
push
aam
dec
lret
add
mov
cld
inc
cmp
pop
mov
dec
movsb
pop
cmp
push
mov
push
cli
lret
dec
push
jbe
dec
sbb
fidivrl
push
push
mov
inc
les
repz
jb
cltd
test
lcall
fistl
mov
dec
popf
stc
lcall
xlat
and
lds
mov
pop
movsb
ds
and
sar
xchg
push
test
cld
cmp
lods
shrb
popf
mov
add
jecxz
daa
mov
out
push
mov
popa
sub
test
pop
push
jo
lods
in
mov
insb
mov
jae
shl
cmp
mov
inc
add
test
push
bound
scas
and
daa
arpl
lret
sahf
mov
out
pop
ljmp
push
push
insl
inc
add
adc
mov
outsl
pushfw
lretw
dec
sbb
fwait
pop
add
push
inc
lcall
fisttpll
cmp
push
fisttpll
mov
inc
jno
jns
pop
jno
ja
add
orb
xchg
mov
inc
ret
rcr
in
mov
sub
aam
fists
fisubrl
pushf
add
push
shl
adc
mov
and
cmp
adc
outsl
xchg
fidivl
hlt
jge
mov
or
bound
mov
xchg
fadds
scas
test
inc
js
pop
les
inc
pop
add
push
gs
iret
mov
jae
sti
mov
cmpsb
lock
xchg
jle
xchg
jp
mov
hlt
outsb
mov
test
mov
scas
test
or
les
aad
and
cmpl
jecxz
imul
and
mov
jnp
and
outsl
stc
in
mov
inc
pushf
mov
and
lret
insl
andb
sbb
and
in
push
push
xor
stos
inc
inc
and
jmp
add
neg
push
xchg
inc
inc
xchg
fnstcw
push
mov
mov
aad
jno
or
xchg
sbb
mov
pop
stos
push
dec
sub
mov
xchg
stos
fidivs
dec
lods
push
adc
idiv
or
js
das
rol
gs
sub
cmp
lea
fists
bound
ja
scas
fwait
cmpsb
lahf
popl
add
add
scas
out
jae
mov
idivb
insb
je
or
xlat
pusha
leave
mov
adc
push
das
cld
inc
fcompl
adc
ret
or
test
push
bswap
std
push
lea
and
insb
mov
cmp
addr16
dec
popa
pop
stos
popa
fdivrp
test
gs
lcall
dec
mov
in
fs
lea
mov
cwtl
add
fstl
prefetcht1
sbb
out
dec
cli
test
clc
je
ljmp
jmp
cmc
andb
pop
in
mov
enter
jg
into
pop
pop
aas
lahf
xchg
pusha
in
nop
push
mov
pop
cmp
mov
scas
cmp
cltd
fcmovb
or
sub
lock
scas
add
mov
xor
mull
xchg
mov
push
adc
scas
lcall
mov
les
jecxz
ja
mov
xor
jno
inc
xchg
cmp
mov
dec
aas
into
sbb
or
loopne
loope
mov
lock
test
stos
sub
mov
and
cmp
and
les
lods
ja
jae
jb
mov
sub
jnp
xorl
fmuls
mov
dec
lock
addr16
add
in
mov
gs
or
mov
flds
xchg
int
fwait
push
push
sub
sbb
push
jne
mov
and
jl
jnp
int
jle
push
aas
in
vmwrite
xchg
xchg
xlat
notl
mov
jne,pn
imul
outsl
std
xchg
adc
push
loopne
jnp
dec
bound
push
sahf
and
icebp
sub
sbb
mov
scas
push
or
lcall
pop
push
arpl
sbb
sbb
addr16
call
repz
add
sbb
rclb
and
pop
xchg
add
push
sub
xchg
pop
in
jecxz
das
mov
or
pop
jns
scas
push
mov
jl
fprem1
add
push
cmp
cld
lds
imul
push
sahf
cmpb
clc
cs
add
mov
iret
fwait
push
sti
adc
add
mov
cmp
dec
imul
sub
adc
stos
jbe
arpl
cmp
daa
dec
or
out
push
mov
dec
mov
jecxz
mov
mov
call
inc
mov
call
aad
push
stos
mov
add
cwtl
pop
jle
loop
push
repnz
jl
lcall
in
out
cmp
and
mov
fmull
jno
int3
jge
push
jmp
jg
subb
jnp
aam
inc
sub
insl
cmp
out
cmpl
sub
rolb
pop
mull
or
mov
adc
xor
cld
and
cs
adc
aad
or
int3
pop
ret
adc
inc
adc
mov
xor
sub
jne
iret
loope
xor
repz
int
test
mov
adc
mov
add
jge
loope
add
insb
gs
stos
jb
mov
scas
adc
bound
out
out
sub
lds
dec
xchg
sar
lock
mov
and
aaa
mov
arpl
and
and
pop
aaa
xor
inc
dec
mov
adc
jo
xchg
mov
or
xchg
adc
pop
jl
repnz
out
icebp
shlb
test
sub
out
mov
jae
xor
repnz
out
jp
lcall
pandn
jge
mov
mov
xchg
inc
cmp
int
sbb
mov
mov
mov
cmpsl
in
or
loopne
lret
pop
ret
cmp
mov
mov
cmp
insl
inc
out
pop
mov
call
in
cmpsl
negb
inc
sub
jl
adc
stc
pop
mov
mov
iret
iret
movsb
mov
arpl
clc
test
inc
mov
add
xchg
gs
dec
and
mov
loope
lahf
dec
mov
cs
punpckhdq
data16
jmp
test
sbb
adc
push
call
push
std
iret
pop
sub
cltd
out
fwait
push
shrl
adc
ret
mov
xchg
mov
outsl
jnp
cmp
loopne
stos
pop
outsb
test
cmpsl
rorb
mov
adc
sbb
movb
xchg
xor
jne
xchg
inc
xor
jecxz
ret
loopne
mov
mov
sbb
cld
imul
sbb
stos
test
mov
daa
mov
out
aaa
push
dec
shrb
into
outsb
cmpl
dec
add
cmpsl
mov
popf
jbe
cli
cmp
jmp
cs
mov
jecxz
stos
mov
movsb
fcmovnu
lds
cmp
jb
fs
jbe
push
lret
push
push
adc
mov
sbb
jge
add
sub
lret
paddd
mov
stos
mov
out
push
pop
ss
pop
inc
lds
dec
sbb
adc
adc
dec
sbb
ret
adc
fcomps
mov
or
push
cld
mov
pop
mov
dec
pop
xor
or
in
ja
int
inc
lods
inc
jp
imul
fs
push
int
push
adc
imul
jp
clc
std
je
and
inc
js
out
dec
mov
pop
cmp
lret
not
adc
insb
sub
xor
add
inc
shl
gs
sar
daa
mov
push
int
mov
inc
mov
xor
sub
xor
inc
lods
adc
aam
jecxz
dec
loop
pop
dec
sub
les
js
cld
stos
imul
incb
imul
cmp
jnp
xor
stos
or
xchg
stos
fcompl
shl
icebp
mov
mov
adcb
iret
sbb
lea
push
scas
xchg
sbb
pop
lods
into
add
mov
into
jnp
mov
sbb
xchg
dec
ret
les
add
sub
or
and
pop
push
push
cmc
and
dec
add
pop
mov
mov
aaa
push
push
aam
outsl
inc
inc
cld
gs
pop
mov
push
sbb
mov
dec
test
fistpl
test
ror
pop
push
xchg
lret
movsl
xchg
dec
jge
mov
mov
loop
add
mov
push
sub
push
inc
cwtl
aad
int
in
lock
xchg
mov
repnz
js
pop
scas
sub
jle
cmpsl
js
and
xor
mov
pop
push
mov
lods
mov
sbb
mov
shrb
push
popa
sbb
mov
test
mov
mov
inc
lahf
mov
inc
adc
outsb
xor
inc
in
lds
jg
lret
inc
lods
push
push
push
outsb
es
les
pmaxub
push
fidivrs
sbb
push
mov
or
gs
iret
jae
push
movsb
mov
push
or
xchg
std
popl
imul
add
jecxz
mov
loopne
sbbb
jge
or
cmpl
jbe
cmp
sbbb
adc
lods
lret
lahf
cwtl
pop
xchg
or
add
mov
test
mov
jae
or
inc
push
outsl
data16
pop
int
sbb
cmp
test
push
push
mov
in
and
movsb
push
fwait
loopne
sti
dec
mov
or
adc
lcall
jecxz
pop
andb
mov
ret
ficoms
jl
test
pop
adc
shll
lcall
shrl
lcall
scas
repz
jnp
mov
adcl
or
mov
aad
std
mov
add
cwtl
div
mov
lcall
addb
sti
and
sbb
jns
xor
inc
std
xor
ja
sub
inc
aam
sti
cmp
aas
cli
xor
nop
test
in
cld
xchg
int
aas
out
mov
pop
mov
xor
mov
repz
lahf
std
mov
push
inc
jb
adc
add
jp
int3
pusha
xchg
xor
xchg
loope
xorb
scas
adc
sarl
jnp
dec
int3
popa
mov
leave
cli
les
inc
and
leave
stos
cmpsb
add
sbb
mov
loop
mov
bound
rorb
jg
pop
mov
cld
mov
xchg
out
popa
fucomi
xchg
pop
inc
loope
pop
push
cmp
scas
adc
ds
rcrb
or
push
pop
cmc
add
les
xchg
leave
mov
data16
xchg
stc
stos
bound
iret
push
pop
stos
shl
push
add
incl
cmpsl
insb
pop
daa
or
test
mov
aam
xchg
dec
shl
stos
mov
inc
xchg
xchg
fildll
and
xor
cmp
pop
in
in
fistpll
icebp
dec
inc
in
push
mov
mov
fisttpl
iret
out
and
scas
adc
popf
imul
nop
je
repnz
out
jp
pushf
in
enter
mov
pop
jb
fsubrp
popa
push
or
outsb
pop
jp
fsubrs
inc
add
or
jno
scas
je,pn
lahf
adc
sahf
xor
in
outsb
pop
lea
sahf
xchg
inc
shlb
mov
inc
enter
jmp
cmp
add
jae
sbb
mov
pop
fistl
push
add
pop
mov
mov
sub
xchg
js
add
dec
dec
mov
xchg
mov
mov
icebp
xchg
add
out
jge
stos
cmp
dec
and
clc
pop
push
lock
push
jo
shrb
pusha
sub
push
mov
jle
push
xor
lods
sbb
inc
adc
pop
test
inc
js
push
push
test
push
cmp
pop
fstpt
pop
inc
pop
cwtl
stc
push
int3
leave
pop
stc
ljmp
xchg
inc
shr
and
and
lods
add
mov
pop
fsubl
push
mov
lret
pop
xorb
shll
mov
popa
inc
lcall
and
dec
push
cltd
out
scas
fstl
jns
xor
push
les
sub
aam
outsl
fisubs
xchg
dec
fdivl
es
loope
adc
lock
mov
icebp
inc
xor
mov
dec
imull
loope
sub
add
jne
xor
pop
cmp
test
repnz
in
out
mov
insl
ja
mov
dec
mov
inc
bound
xor
jp
mov
jns
inc
loope
push
adc
jmp
psubd
xlat
add
mov
sub
mov
and
lcall
mov
lret
adc
xchg
cli
lahf
jge
es
mov
cmpsb
lds
or
sub
das
xor
sub
je
stos
ret
fisubrs
lahf
dec
jns
inc
push
xchg
xchg
inc
clc
ss
add
sbb
cli
out
and
cmpsb
dec
mov
movsb
aad
es
lock
lret
lret
xchg
dec
mov
jae
dec
or
mov
lret
dec
scas
mov
cmp
in
sbb
ret
pop
ds
push
shrl
leave
inc
daa
fisubrl
loopne
lret
inc
ret
into
ret
add
push
push
lret
outsb
and
out
out
pop
adc
fbstp
inc
loop
cltd
repz
mov
inc
sub
dec
rcrb
sbb
hlt
dec
movsb
pop
mov
cmp
adcl
inc
ret
cmp
sbb
ljmp
daa
cmpsl
or
xor
dec
lock
mov
lods
movsb
lcall
test
and
clc
addr16
pop
cmc
fs
mov
popa
adc
movsb
orb
lods
pusha
orb
cmp
sub
dec
outsb
or
cmp
shlb
lret
aaa
push
push
and
mov
xchg
lcall
xorb
in
push
dec
negl
push
inc
ficoml
sahf
adcl
mov
lret
xchg
pop
jl
adcl
or
mov
dec
dec
ss
mov
in
ffree
movsb
pop
cmc
stc
hlt
std
xor
in
xor
push
mov
pop
push
add
arpl
jle
insb
ficoml
fwait
push
jae
mov
inc
mov
and
in
sahf
sahf
jg
fwait
cld
mov
jne
add
add
in
bound
xor
push
cltd
mov
pop
sahf
jp
adc
inc
cltd
mov
lret
clc
fnstsw
lods
cmp
xchg
xchg
shrb
repnz
leave
loop
add
mov
cltd
hlt
dec
scas
test
cmc
shlb
pusha
rolb
push
xor
outsl
add
ficoml
xchg
pop
nop
xor
jno
sub
pop
fidivrs
mov
pusha
and
insb
pop
cwtl
stc
pop
pop
xchg
test
lcall
or
test
cmp
push
adc
cs
push
repz
or
push
mov
movsl
dec
mov
jb
xor
repz
outsb
loopne
add
xchg
shlb
dec
pop
jae
xchg
clc
fisubs
leave
pushf
mov
jb
mov
mov
push
xchg
or
xchg
inc
cmpsl
xor
fidivl
shrd
adc
mov
out
xchg
jb
sbb
cmpl
imul
xor
ret
rorl
cmp
pop
sbb
fsubp
and
test
int
inc
movsl
inc
pop
filds
add
add
jl
aas
in
popf
xor
mov
mov
xor
enter
insb
xor
lahf
pop
pop
add
imul
out
lret
ljmp
cmp
daa
into
cmp
sti
push
loop
insl
mov
and
cmp
jae
adcl
mov
xchg
pop
push
std
out
xchg
lods
ja
xchg
inc
jge
mov
mov
mov
mov
xchg
lock
or
push
cmp
lahf
or
js
ficoml
pop
in
and
jo
cmp
mov
dec
ss
push
fs
shlb
jmp
fcomps
jno
in
in
orl
cmp
mov
test
inc
aad
pop
push
mov
sbb
add
imul
push
sbb
push
or
cltd
in
xchg
mov
mov
pop
mov
fcoms
rcrb
sarl
fcomps
cld
int3
and
jne
dec
sbb
push
add
imul
adc
dec
fwait
pop
stos
jmp
cmp
lret
sbb
sub
push
dec
adc
insb
mov
adc
pop
jmp
rcr
int
mov
jl
xor
sarb
fiaddl
dec
cmpsl
daa
jb
mov
fisubs
inc
or
mulb
aam
icebp
sub
inc
mov
movups
or
pop
fwait
push
data16
dec
or
mov
in
xchg
outsb
push
sbb
js
aad
mov
scas
sub
sub
mov
sub
loopne
leave
sarb
push
pop
mov
andb
xchg
mov
subl
xor
in
and
outsb
push
aas
mov
jp
fistps
ret
mov
in
icebp
dec
pop
cltd
xchg
fnstsw
cwtl
jecxz
inc
jnp
mov
cmp
je
das
and
sbb
leave
out
bound
or
js
sub
add
pop
jo
inc
fyl2xp1
push
add
fnstcw
icebp
imul
xor
mov
mov
push
add
sub
pusha
loop
push
or
jle
stos
dec
out
or
jl
pop
sbb
ljmp
and
xlat
mov
xchg
xor
sbb
mov
fsubrl
lock
scas
cmp
mov
push
xchg
inc
mov
xchg
push
jecxz
and
sub
xchg
xor
cwtl
pusha
jnp
sub
sbb
mov
pop
in
inc
xor
dec
popa
out
imul
mov
pop
fdivrs
mov
rcl
mov
add
out
pop
test
xchg
adc
and
stos
jg
loop
or
push
rcl
mov
xlat
fnstcw
add
das
pop
andl
pop
xor
stos
rorb
mov
mov
mov
iret
nop
pusha
xlat
adc
cltd
aaa
aad
aas
clc
faddp
push
mov
imul
fcoml
js
lret
or
subb
push
imul
ds
xor
stos
or
xor
rol
push
xchg
pop
pop
and
dec
mov
int3
aaa
in
insl
push
mov
aaa
jbe
repz
push
pop
xchg
sub
push
push
fucomp
enter
xor
aad
xor
in
daa
lahf
jno
jns
loope
push
inc
mov
lods
and
jbe
xchg
mov
jle
and
mov
icebp
loope
cmpsb
sbb
bound
lret
loop
cmpl
jp
fistpll
mov
stc
insl
sahf
pusha
rolb
pushf
cltd
loope
out
cmpsl
push
inc
outsl
jecxz
pop
adc
mov
movsl
fldenv
shlb
xchg
in
je
outsb
ja
adc
jnp
cmpsb
imul
cltd
mov
daa
lcall
jl
mov
mov
jne
xchg
imul
cmpb
pop
xor
out
adc
iret
lcall
ja
movl
mov
arpl
sahf
in
fs
jle
jl
stos
cmpsb
mov
dec
dec
out
fst
push
aaa
filds
dec
and
cmp
sbbb
and
and
sub
icebp
xchg
or
lods
and
jp
pop
add
xchg
icebp
test
movb
and
call
call
ja
es
into
orl
sbb
fcmovne
test
sarb
fcomps
repz
arpl
push
in
add
pop
lahf
lods
sub
xor
sbb
sbb
rorb
xchg
das
in
add
stc
fnstsw
test
or
dec
test
data16
pop
add
push
ss
insb
int3
jb
jbe
fcoms
imul
mov
mov
lcall
cmpsb
faddl
lahf
lret
into
movsl
mov
cld
lahf
inc
lock
push
fnstenv
inc
repnz
push
jp
mov
ret
push
cmp
pop
outsb
aas
ljmp
mov
cmp
xchg
cwtl
dec
jecxz
jns
sbb
rclb
push
pmuludq
add
jp
sub
xchg
in
insl
mov
loopne
in
gs
int
mov
lret
fiadds
lcall
imul
sub
or
enter
sub
dec
or
push
jbe
pop
add
mov
lcall
lret
movups
ret
imul
add
xchg
aad
dec
stc
pop
sub
add
jb
rcll
cltd
add
in
lods
inc
and
jne
cmpsl
jnp
jns
test
xchg
cmc
push
popf
mov
adcl
call
subb
jmp
outsl
mov
pop
pop
pop
inc
sbb
inc
and
dec
or
push
mov
cmp
push
mov
rep
jnp
pop
add
mov
push
in
lea
push
fbld
mov
inc
test
pop
pop
js
inc
mov
mov
cld
out
jecxz
mov
dec
inc
pop
hlt
pop
xor
pop
adc
xchg
enter
pushf
orl
xchg
xchg
pop
adc
cmpsl
push
sub
lock
inc
out
gs
inc
jnp
ljmp
mov
push
iret
mov
andb
jle
pop
ljmp
outsb
aam
dec
dec
xchg
jo
sbb
enter
mov
jnp
pop
ljmp
in
stos
and
sbb
push
xor
cwtl
mov
jne
jbe
jle
xchg
add
xchg
cmp
pusha
pop
mov
mov
je
aas
pop
int3
dec
div
and
ret
insb
xor
int
mov
mov
xchg
sub
mov
mov
pop
repnz
jl
cli
test
gs
add
movsb
sahf
loopne
xchg
xor
divb
pop
cltd
dec
add
test
loope
stos
mov
in
mov
jo
xor
ret
push
mov
cmpsb
mov
pop
es
xor
or
mov
fsubl
test
ret
dec
scas
lret
dec
dec
mov
loopw
inc
add
xor
pop
add
in
test
pop
ret
and
adcb
aam
lea
fs
mul
repnz
xor
das
mov
add
push
sti
add
out
cmp
arpl
loopne
ds
push
gs
jnp
adc
xchg
repz
outsl
or
fstpt
stc
jbe
sti
idiv
lock
pop
xchg
shlb
xor
xchg
mov
push
fdivrl
out
loop
and
fst
in
inc
add
or
std
sbb
adc
pusha
jmp
adc
adc
aam
xchg
push
add
push
xchg
inc
fs
cli
mov
or
pushf
or
jb
xor
mov
lods
jmp
dec
andl
stos
or
mov
mov
adc
push
dec
insb
ret
sti
inc
test
mov
inc
adc
cli
inc
dec
ja
neg
push
xor
clc
idivl
sub
mov
mov
cmp
cmp
dec
cmp
mov
rcll
lahf
repnz
into
mov
dec
arpl
and
mov
iret
xchg
dec
sub
icebp
jb
cmpsb
sti
jle
ret
shll
test
test
sub
and
fdivr
xchg
adc
mov
es
bnd
outsl
jle
pop
jg
ja
cmp
fiaddl
xor
test
es
jns
sbb
lahf
sahf
push
ss
orl
out
arpl
je
gs
and
cmp
push
mov
mov
ret
jle
mov
fcmovnu
adc
out
sub
pop
and
ds
popf
rorl
xor
pop
mov
xlat
push
lds
dec
inc
cmp
scas
out
rclb
call
dec
imul
cmc
sbb
mov
ljmp
movsl
mov
and
sbb
cmp
ljmp
jae
insl
pop
mov
pop
mov
pop
push
fbld
push
pop
ljmp
mov
or
fs
jp
out
cwtl
repnz
lret
sar
jmp
cmp
inc
shl
idivb
int
mov
push
sub
and
add
aas
fdivr
cs
push
dec
aad
or
pop
xor
fldcw
fwait
repnz
xchg
mov
es
add
sbb
sub
lds
call
jne
push
test
adc
sbb
and
and
pop
add
push
jno
cwtl
add
aam
jp
jbe
mov
call
mov
pop
mov
in
xor
frstpm(287
out
insb
ret
and
push
add
ja
sbb
cmp
sti
cwtl
jb
jmp
lret
cmp
loopne
cmc
pushf
cs
cmp
cltd
pop
outsb
cmp
jo
xor
sub
insb
xchg
pop
mov
loop
jo
jge
push
xchg
or
mov
imul
movl
xchg
xor
es
aad
pop
xchg
lahf
dec
adc
cmp
outsb
aas
ret
stc
inc
sbb
or
cmc
push
mov
xchg
mov
lret
sbb
or
push
aam
fcomp
or
xchg
mov
lret
cltd
jb
ret
jbe
loope
dec
jl
mov
pusha
shr
jge
in
cli
aaa
jae
rclb
sbb
jbe
out
add
and
imulb
std
adc
dec
dec
pop
mov
call
mov
jns
jecxz
pop
enter
mov
mov
xchg
leave
push
sub
ljmp
inc
sub
pop
cmp
and
or
subb
mov
cmp
stos
lock
pop
call
in
sbbb
cmp
fidivrl
mov
and
bound
cmp
or
movsb
in
add
mov
icebp
sbb
ss
out
outsb
icebp
sarl
cmp
cltd
aad
pop
test
popf
jne
xchg
mov
and
sahf
adc
xchg
loopne
outsb
mov
push
cmp
jle
push
lcall
cmp
sbbl
or
aas
aad
lds
mov
push
stos
add
filds
cmp
and
inc
fwait
adc
movsl
hlt
loop
out
ret
in
adc
stos
mov
inc
bound
mov
ret
and
movsl
fs
jecxz
pop
jl
mov
inc
pop
pop
loop
aam
sarb
and
xor
mov
mov
cld
mov
xchg
cmpsb
mov
fwait
mov
pop
jmp
popf
push
leave
fstpl
shrl
push
jno
mov
xor
push
xor
xchg
or
jmp
out
adc
push
dec
negl
pop
es
leave
mov
cs
adc
sub
push
scas
cld
sub
cmpsb
mov
pop
inc
popf
dec
jmp
pop
jbe
mov
daa
pop
push
outsb
iret
fndisi(8087
pop
jecxz
mov
jl
fisttpl
imul
jno
loop
aam
adc
in
cmpsb
dec
in
push
and
insb
add
or
scas
inc
jne
and
sub
rorb
movsl
aas
je
xlat
cmp
stos
push
lods
iret
js
cmp
popf
cmp
testb
insl
pop
test
cmpsl
inc
push
fsubrl
pushf
cmp
orl
mov
out
sti
xchg
int
testb
lahf
push
lahf
mov
inc
xchg
and
mov
out
push
mov
mov
mov
inc
loop
cmp
incb
xor
in
je
fisttps
pop
xor
rep
jp
rorb
inc
jle
mov
test
add
cmpsb
int
shr
mov
es
lea
pop
je
call
xorl
pop
mov
mov
xor
daa
mov
pop
fistpl
into
cmp
addl
pop
push
orb
cmp
sub
movsb
ja
pop
mov
les
fnstsw
ds
movsb
in
dec
adc
lret
test
lds
out
jnp
popl
popf
xchg
mov
js
popa
in
rcrb
mov
mov
pop
lock
sub
jns
jno
out
mov
dec
and
shrb
in
sub
sahf
mov
lcall
std
xor
std
fwait
mov
jb
fstps
sub
sbb
iret
inc
mull
addr16
icebp
sub
and
and
popa
cwtl
mov
in
pop
add
mov
mov
pop
lcall
or
idivl
out
test
test
adc
mov
jae
pop
cmp
stos
in
insl
mov
ficompl
ss
xchg
adc
hlt
xchg
adc
mov
stos
ds
call
pop
aaa
in
push
rclb
push
scas
adc
inc
mov
mov
dec
xor
out
lea
inc
lds
adc
pop
cmp
inc
mov
jl
das
mov
sub
and
inc
and
push
orl
ds
pop
cli
add
mov
int
dec
test
or
jp
aas
mov
push
test
and
data16
xchg
pushw
test
popa
movsl
fstpt
and
sub
ss
cmpsb
push
test
sub
and
loopne
pop
nop
cld
imul
adc
rorl
and
push
add
jmp
sbb
xchg
enter
in
dec
out
push
inc
scas
std
stc
hlt
jle
enter
sub
dec
shll
sahf
shl
scas
ja
add
popa
mov
repnz
pushf
sub
cwtl
shlb
xchg
in
dec
adc
mov
mov
aas
add
cmpsl
cmp
int3
mov
add
loope
mov
lods
lret
int
mov
enter
cmp
lods
inc
fcmovne
jns
mov
mov
xor
outsl
jmp
pop
adc
adc
dec
ja
mov
inc
jb
fdivs
andb
push
adc
icebp
in
push
pop
dec
stos
fiadds
mov
and
mov
outsl
loop
cmp
insl
sbb
cmp
sbb
fcmove
jmp
xchg
and
mov
xchg
stc
inc
cmpl
dec
add
xchg
sti
inc
mov
fdiv
adc
push
es
decl
cmp
cmp
js
lret
cld
push
dec
fisttpl
push
in
cmpl
enter
pop
fnstenv
add
jge
jns
cmp
pop
repz
and
lret
in
std
dec
decl
and
mov
adc
inc
fwait
fwait
jnp
and
jge
pop
pop
mov
lahf
jle
mov
jo
ljmp
mov
jmp
dec
cmpsb
or
das
xchg
dec
dec
pop
or
mov
jne
nop
pushf
in
mov
and
mov
jge,pn
mov
pop
pop
test
icebp
popa
nop
sub
fisttpl
call
roll
lcall
je
mov
sub
pop
mov
xor
stos
dec
pusha
sbb
push
mov
leave
cld
xor
repnz
sbb
sahf
out
dec
ds
pushf
insb
popa
xchg
dec
shll
jmp
dec
dec
pop
fnstsw
ds
int
mov
jg
mov
xchg
fldenv
and
js
lods
xor
and
cld
out
negb
fbld
push
jg
cmpsb
mov
push
lds
ds
lcall
ret
ss
jmp
inc
scas
and
cmp
fnop
jmp
fimull
cmp
imul
inc
xor
sbb
xor
add
jg
sbb
sub
xor
bnd
stos
add
inc
push
test
jno
cli
in
sub
jp
mov
test
fdivrs
ljmp
fcoml
in
mov
gs
xchg
inc
repnz
pop
imul
inc
sarb
test
and
push
add
cmp
dec
ret
inc
xor
popa
jge
jno
or
iret
jl
jae
sar
push
shl
mov
xchg
add
pusha
inc
dec
inc
loop
popa
mov
xor
push
mov
inc
push
lds
sbb
xchg
pop
popa
mov
cmp
adc
dec
xchg
adc
aas
lcall
in
pop
fcomi
lret
gs
cltd
sahf
inc
icebp
push
xor
rorl
dec
push
cltd
pop
rcrb
cmc
inc
push
cld
cs
cld
ss
jo
fsubs
inc
test
inc
push
addr16
loop
cmpsl
test
cwtl
mov
jo
fistpll
fisttpl
ret
adc
or
nop
cltd
adc
xlat
cwtl
jno
mov
test
mov
fldl
in
pusha
out
aad
jno
inc
cwtl
mov
xchg
test
out
movsl
daa
inc
sbb
dec
mov
in
sub
insl
fwait
push
movd
or
adc
or
pop
push
push
mov
popf
add
sub
icebp
sar
cmp
add
push
dec
mov
xorl
addr16
lods
loope
mov
and
sbb
cli
jg
mov
mov
sbb
nop
dec
or
aaa
lret
mov
lret
jg
lods
xchg
push
sbb
rol
mov
inc
ljmp
mov
cmp
lea
push
push
pop
inc
out
jl
ljmp
sub
jmp
and
or
mov
scas
sub
mov
mov
sbb
adc
adc
notb
sub
arpl
and
dec
add
js
push
mov
das
dec
dec
adc
xchg
adc
adc
loopne
cltd
cltd
push
scas
pop
xor
push
pop
imull
sbb
sahf
add
xor
rolb
pushf
push
adcl
xchg
mull
enter
jge
popa
aas
test
cltd
add
scas
cmp
xlat
data16
push
mov
inc
fnstsw
mov
mov
dec
lock
jl
push
cmp
xchg
pop
arpl
push
mov
cltd
repz
loopne
xor
push
shrl
add
mov
insl
inc
add
cmc
mov
sub
out
dec
lods
fists
mov
fisubs
imul
fcomip
popa
daa
stc
loop
mov
ret
sbb
add
fmull
mov
scas
clc
fwait
into
jae
mov
leave
sub
sub
jmp
inc
mov
repnz
mov
js
and
dec
ja
cli
cld
xchg
shlb
out
push
out
sbb
mov
mov
add
out
sbb
push
pop
popf
imul
xor
jo
roll
repnz
into
xchg
jmp
mov
mov
adc
rcrl
fnstenv
fiadds
enter
bound
jle
mov
fistps
adc
testl
stc
pop
mov
dec
lock
jae
dec
inc
fs
cmp
aaa
add
leave
sbb
daa
sarb
sbb
scas
mov
xchg
add
insb
dec
fstps
push
add
int3
cld
arpl
jp
ljmp
push
pusha
dec
scas
cmp
popa
jae
add
push
inc
sub
outsb
dec
xchg
in
and
loop
mov
push
repz
ret
loopne
dec
sub
xor
into
and
mov
es
inc
xchg
imul
int
xchg
or
imul
negb
xor
mov
mov
push
push
inc
sub
inc
add
or
xor
push
sub
jns
leave
push
aas
ret
sbb
fwait
cmc
adc
outsb
jbe
or
cs
mov
js
mov
mov
add
push
sar
aaa
mov
out
test
icebp
and
enter
dec
pop
dec
jp
fistl
fwait
and
stos
and
addb
shrl
and
add
rcrl
xchg
jns
pop
mov
add
stos
repz
fs
gs
jl
adc
mov
rcll
sahf
jge
mov
iret
xor
jo
outsl
mov
inc
inc
negb
mov
mov
cli
cmp
ljmp
jp
mov
mov
push
jle
das
xor
ds
mov
int
mov
push
and
into
insl
fimull
adc
inc
mov
pop
lock
mov
adcb
xor
call
rcrb
cwtl
push
mov
and
mov
push
mov
jno
out
dec
ss
ret
prefetchwt1
or
lods
pop
add
mov
or
sub
mov
test
xlat
pop
mov
mov
into
jae,pn
push
ret
data16
iret
push
es
stc
and
pop
lcall
lods
mov
add
daa
ret
push
xchg
bound
xchg
inc
mov
out
movsb
xchg
sbb
sahf
fadds
out
int
out
push
inc
jae
fidivrl
mov
jl
xor
dec
add
in
push
cmc
dec
jbe
push
ja
sarl
push
fstps
ror
jg
adc
ror
mov
push
jno
mov
add
outsl
imul
les
ffree
adc
push
ja
or
call
jnp
dec
cmp
in
loopne
cmp
repnz
sub
or
test
test
cmpsb
adc
or
loope
sub
insl
xchg
cmp
cltd
xor
mov
in
mov
and
enter
dec
dec
pop
mov
xlat
jp
jae
lods
rcll
dec
sbb
jno
das
xor
ret
cmp
xor
xchg
inc
outsb
and
dec
pusha
jns
test
xchg
sbb
shlb
add
fcmovnb
xchg
inc
jp
pop
jge,pt
rcll
pop
xor
xchg
add
adc
dec
shrl
jg
push
das
shlb
cmp
mov
mov
or
mov
sarb
jnp
sbb
cli
adc
dec
imull
ret
jl
enter
jno
mov
adc
es
jns
xor
lods
jo
popa
icebp
fbld
xchg
mov
lds
rcrl
shrb
fsubrp
imul
les
notb
lahf
add
imul
push
ret
jmp
or
jnp
rcll
jge
cld
push
jle
ret
xchg
sarl
test
push
int3
jle
sub
scas
mov
outsl
sbb
add
or
or
lds
pop
xchg
and
inc
fs
pop
out
lret
cmp
pop
shll
fcomps
adc
leave
daa
sti
sbb
and
in
add
js
int3
dec
sub
sub
push
jecxz
pop
push
and
in
jle
popa
inc
jp
jecxz
and
into
push
push
xor
pop
iret
enter
fcomp
loope
in
cmc
fnstsw
mov
sub
sti
insb
xchg
pop
testl
sbb
pushf
add
insb
jo
or
inc
push
mov
divb
push
int3
cmpsl
shll
jb
cli
iret
cmp
add
cwtl
repnz
inc
dec
xor
cmp
mov
ret
rcrl
loope
popf
pop
mov
pop
cmp
sub
lret
jb
sbb
and
aaa
cmc
lock
sti
push
pop
sub
push
sbb
xchg
pop
lcall
add
rcll
dec
test
mov
xor
ja
or
sbb
aaa
mov
test
bound
shll
or
shl
scas
mov
cli
inc
incl
cmp
ss
pop
or
int3
int3
mov
or
mov
out
push
or
jmp
inc
loop
nop
push
mov
test
popa
xlat
or
loope
std
sub
mov
add
stos
adcl
sti
adc
pushf
cmc
mov
repz
movq
pop
sub
mov
in
std
xor
mov
mov
addl
scas
ja
sahf
mov
dec
adc
stos
data16
scas
pop
mov
lock
stos
inc
aad
dec
std
mov
or
inc
nop
pop
add
mov
divb
jne
cmp
movsb
mov
mov
mov
lds
inc
popf
mov
pop
es
xor
mov
leave
scas
sarl
sub
adc
add
dec
mov
adc
in
nop
sbb
sub
or
mov
xor
inc
adc
pop
add
xchg
addr16
dec
ret
jb
outsb
orb
mov
fidivrl
popf
mull
call
ja
into
fcmovnbe
pop
stc
dec
les
bound
lahf
clc
sbb
fadds
cmpsb
sub
inc
out
adc
outsl
and
sahf
aas
test
out
and
push
mov
out
stc
push
fcoms
in
or
in
push
jp
addr16
mov
fcoms
shld
arpl
xchg
push
je
jb
sbb
pop
pop
jae
pop
mov
push
xchg
add
lock
or
out
sbb
push
sbb
jmp
jns
cltd
inc
cmc
push
xchg
fnstenv
mov
jp
fiaddl
and
and
jno
call
test
or
and
cmc
cmp
fs
xchg
pop
std
xchg
pop
xchg
and
cmp
adc
mov
ljmp
cwtl
inc
cmp
lret
push
mov
adc
sti
shll
sub
clc
inc
test
pop
hlt
mov
arpl
fwait
add
test
mov
dec
addr16
mov
pop
push
lods
lret
outsb
mov
div
pushf
outsb
addr16
push
or
sbb
pop
pop
test
inc
aad
mov
push
data16
and
lods
pusha
or
pop
push
jp
jp
ss
mov
jae
lock
dec
pushf
js
aas
jl
xor
lea
mov
orl
dec
repnz
and
lcall
int3
inc
mov
cmpsb
dec
push
pop
jb
or
lcall
xchg
cs
inc
adc
cli
mov
xchg
mov
lret
ja
xor
and
pop
sub
add
push
mov
repnz
adc
mov
mov
je
sbbl
pop
icebp
insb
add
or
dec
mov
dec
mov
inc
aas
cmp
popl
dec
push
fs
xlat
mov
test
fisubs
mov
out
or
push
pop
neg
idiv
test
dec
and
pop
pop
in
cmp
push
cmp
rorb
adc
hlt
mov
xchg
dec
and
in
loope
cli
xor
mov
std
je
scas
fcomp
mov
test
test
jmp
leave
scas
movb
xchg
lock
outsb
adc
push
daa
movsl
xchg
lea
out
aas
adc
fistps
bound
dec
leave
mov
dec
or
cmpsl
jnp
sbb
out
cmp
cld
jmp
mov
jmp
stos
mov
and
cmpsl
sbb
je
or
sahf
fisubrs
xor
pop
aad
add
xor
movsl
lret
inc
cmp
negb
lret
imul
cmpsl
movsl
mov
test
jecxz
cmp
mov
ds
mov
pop
ss
lea
inc
push
das
jns
mov
call
out
sub
add
cld
xchg
and
stos
pop
iret
sti
test
pop
scas
jo
jmp
sbb
jecxz
push
xchg
lahf
pushf
mov
out
dec
or
mov
mov
insb
imul
lock
insl
mov
xchg
cli
or
cmpsl
outsb
xor
or
aas
pop
ljmp
or
or
popf
mov
inc
test
cmp
sub
xchg
adc
int3
mov
stos
xchg
lods
dec
or
mov
ss
aad
xchg
stos
sub
andl
sbb
jmp
popf
inc
cltd
xorb
dec
sti
aad
jne
cld
jb
xchg
andl
leave
push
cwtl
cmp
sti
loop
mov
cld
out
dec
xlat
insb
aam
pop
cmpsb
cmpsl
pop
outsl
adc
shll
cmp
xor
cmp
hlt
in
dec
add
mull
and
sete
sbb
ret
movsl
lret
pop
test
mov
mov
or
adc
sub
rolb
push
cmp
mov
fcoml
cmpb
xchg
or
and
sahf
sbb
adc
js
push
ret
mov
push
jp
ds
mov
leave
rcl
xor
in
divl
jnp
push
add
arpl
test
and
bound
xor
fsubrs
mov
call
cmpsl
scas
jb
add
lods
add
mov
pop
fists
add
clc
sahf
pop
pop
bound
out
aam
pop
bound
aad
data16
int
inc
xlat
push
push
xchg
mov
add
cld
mov
mov
repnz
jecxz
es
testb
mov
sbb
and
cmp
icebp
adc
jbe
fs
ss
lret
mov
adc
stc
fwait
stc
cmp
xchg
insb
push
pop
cs
push
push
cmp
jns
ret
cwtl
addb
stc
out
jb
clc
mov
jmp
dec
xchg
pop
leave
enter
les
clc
add
movsb
pop
and
inc
int
cltd
xchg
data16
cwtl
mov
shlb
add
cwtl
jmp
lods
xchg
es
pop
lods
mov
mov
ja
shrb
sub
repz
add
sub
pop
and
sub
sbb
mov
sub
xchg
aad
cwtl
pop
out
popf
mov
test
insl
jle
lock
or
jmp
xor
out
icebp
out
xor
sbb
xor
fistpl
sbb
lcall
jne
sub
push
cmp
sbb
pop
inc
sar
sarl
jecxz
jl
data16
cmp
inc
test
leave
sahf
jno
out
aam
shlb
lcall
jp
in
sub
or
inc
and
js
stos
adc
test
loope
push
stc
pop
xchg
adc
lea
test
push
fsubrs
shrl
je
pop
push
scas
mov
mov
mov
xor
cld
cmp
or
xorb
xor
xor
pop
or
push
out
aas
shlb
addr16
mov
lret
add
xchg
push
or
fdiv
adc
inc
jg
aaa
test
insl
nop
sbb
jb
lret
loope
xor
push
bound
jle
sarl
lock
ss
jp
ljmp
add
add
jp
sbb
dec
repnz
dec
jp
pop
xchg
cmpsb
xor
push
lahf
es
sub
fdivp
sbb
movsb
sbb
movsl
je
sti
adc
mov
cmp
push
into
pusha
mov
xor
cwtl
rcrl
xchg
lret
and
pop
add
and
pop
and
mov
daa
sub
in
xor
mov
sbb
cmp
mov
xchg
js
mov
and
sub
xor
mov
cmp
or
add
cmovg
xchg
inc
outsl
push
mov
mov
dec
jmp
out
mov
cmpl
lea
call
frstor
mov
pop
data16
getsec
adc
aad
aas
int3
sbb
sbb
xchg
inc
dec
and
popa
mov
pop
adc
mov
mov
sbb
cmp
popa
cvtdq2ps
rolb
lock
fldcw
mov
and
lods
gs
stc
test
jle
dec
dec
xchg
subb
pop
xchg
mov
push
gs
loop
sub
mov
test
add
popa
bound
shlb
lret
into
cmpsb
jp
sbb
lcall
test
xor
inc
xchg
adc
cmp
sbb
out
mov
jmp
mov
into
ljmp
xor
jb
movsl
sub
imul
adc
jb
mov
lds
pop
sub
je
imul
inc
in
pop
jns
sbb
mov
addr16
and
push
push
xchg
pusha
stos
xor
xchg
lods
mov
cmp
and
add
adc
es
repz
xor
shl
pop
pop
and
adc
push
xlat
push
test
mov
lahf
mov
push
fidivrl
push
add
xor
into
inc
testl
jecxz
add
jne
cmp
sbb
insb
dec
and
mov
xchg
add
insl
mov
xchg
std
enter
movsl
je
jnp
gs
xchg
xchg
daa
sbb
pushf
sub
add
imul
call
xchg
test
jle
cmc
push
mov
jbe
sti
inc
and
arpl
mov
aas
xchg
mov
pop
aam
cmc
sahf
inc
imul
pop
adc
fwait
pop
and
fucom
call
sub
xor
aaa
add
into
shll
dec
mov
push
push
jg
test
xor
push
xor
fidivrl
sbb
fimull
lods
and
lret
fidivrl
xlat
shl
mov
packuswb
jg
lods
lock
ds
cmp
in
pushf
das
push
test
rolb
mov
jo
or
sti
arpl
mov
loope
push
stos
push
and
mov
daa
sbbb
dec
pop
jge
test
or
mov
or
adcb
xor
mov
jae
clc
inc
xor
dec
insb
shll
pop
shrb
vmovsd
adc
mov
xchg
xlat
mov
push
push
pop
mul
xlat
mov
ss
test
outsb
xlat
jne
stc
sti
ljmp
pop
hlt
loope
pop
outsb
out
lock
mov
repz
shll
fistpll
clc
ljmp
out
subl
shl
call
pop
push
cmp
sub
jb
lahf
push
mov
test
sbb
inc
test
iret
insl
roll
cmp
pusha
pop
dec
cmp
dec
or
leave
dec
fnstsw
push
ljmp
inc
push
xor
xchg
outsb
mov
test
jecxz
cli
pop
sbb
lret
lods
xchg
mov
dec
adc
sbb
cmp
andb
or
mov
ret
sub
sub
push
lock
push
push
dec
negb
or
test
mov
bound
call
dec
out
test
push
std
dec
enter
cmp
loop
setbe
sub
xchg
mov
enter
cli
and
or
mov
jae
insb
sbb
mov
sbb
xchg
mov
aam
sub
jg
adc
sub
jae
ret
and
shll
jb
lcall
cmp
out
cmpsl
arpl
mov
push
ror
push
ror
pop
push
mov
or
add
dec
or
mov
push
int
into
int3
sub
fwait
jp
push
xor
jmp
leave
mov
xchg
xor
popa
pop
movsb
mov
in
inc
std
add
or
pop
adc
xchg
enter
or
and
fwait
pop
push
dec
inc
pop
je
mov
or
cmc
in
nop
jns
mov
add
pop
inc
mov
lea
pushf
mov
jmp
mov
sub
test
dec
enter
out
xor
inc
pop
test
sar
jae
aaa
and
push
mov
mov
xchg
mov
sub
jnp
push
jbe
mov
and
mov
or
mov
pop
mov
mov
and
push
lcall
pop
dec
sub
lahf
or
stos
sub
mov
push
arpl
fsubr
fcompl
mov
or
movsb
xorb
push
nop
test
jl
sbb
push
dec
ljmp
jo
jns
pop
mov
bnd
push
pop
test
inc
outsl
adc
dec
and
in
cmp
pop
xchg
dec
popf
push
aam
pushf
jb
fildl
sub
xor
sub
icebp
mov
mov
fstl
jp
xchg
and
inc
mov
fbstp
sti
inc
inc
xchg
cli
icebp
inc
pop
into
loope
iret
je
in
inc
jno
ficompl
pop
and
fstpl
push
cltd
or
jne
in
fcmovne
pop
ret
into
movsb
xor
push
ret
adc
sbb
sbb
ds
ret
imul
dec
in
cltd
mov
icebp
pop
dec
inc
pop
and
or
rolb
sbb
ror
test
adc
and
xlat
push
iret
in
outsb
sbb
sub
pop
cmc
ret
repz
fnstsw
aam
cli
or
pop
nop
addr16
imul
int
dec
xchg
mov
movb
cld
xchg
cmp
imul
stc
dec
cmc
and
mov
jmp
outsl
add
lret
mov
jp
in
sbb
movsl
lock
xchg
dec
cmp
xor
out
es
push
push
addr16
dec
rcr
dec
jb
mov
lahf
ja
popf
lods
pop
or
dec
push
xor
test
lret
pop
mov
stos
mov
adc
fistpl
pusha
adc
mov
inc
cmpl
cmp
dec
div
jp
cmp
fisubs
jbe
ret
sbb
and
mov
sti
je
jbe
xchg
add
mov
repnz
out
mov
test
mov
out
cmpsb
lcall
and
cmc
jle
mov
aad
cmp
sar
js
adc
iret
inc
dec
popf
int3
xchg
adc
pushf
jae
and
arpl
inc
sti
jp
inc
rclb
mov
pop
lock
js
into
repz
adc
lcall
jae
sbb
inc
pushf
jae
push
mov
xchg
jbe
and
addr16
or
pop
jmp
jmp
pop
xchg
lret
dec
loopne
add
mov
sub
scas
shrb
pop
xchg
push
iret
adcb
add
fildl
dec
dec
imul
xchg
add
pushw
fwait
xor
xlat
cmp
cmp
pushf
lahf
sbb
and
sub
inc
dec
lahf
ret
mov
scas
and
mov
pop
movsl
jno
push
std
and
nop
loopne
mov
ljmp
inc
mov
repnz
test
pop
into
inc
pop
xchg
xchg
inc
scas
mov
cmc
sub
aaa
dec
enter
pop
sbb
jle
in
mov
push
push
gs
stos
add
or
push
add
sbb
inc
push
jns
push
out
mov
sub
push
or
jl
imul
lods
imul
mov
xor
mov
hlt
les
dec
mov
call
fwait
loope
xlat
pop
mov
cmovns
inc
adc
jne
jae
movsl
cmp
mov
inc
mov
mov
int3
lahf
dec
scas
addb
leave
lahf
mov
add
cs
jmp
out
dec
rep
add
negl
test
xor
and
jno
and
cmp
icebp
ja
push
dec
pop
pusha
fucomi
xchg
jns
in
xchg
jg
imul
test
adc
sbb
add
sub
aaa
sbb
in
in
imul
mov
jae
lock
push
mov
pusha
frstor
push
dec
and
sbb
loop
adc
or
cmp
bound
push
je
sti
push
inc
les
aas
insl
dec
sbb
mov
fisubs
repnz
inc
aam
call
or
out
or
push
mov
fwait
dec
push
jo
inc
imul
dec
sbb
loopne
dec
add
fwait
or
pop
sbb
jp
jp
lahf
inc
shlb
sub
sbbl
iret
pushf
ret
jmp
jecxz
stc
sub
mov
inc
xlat
lea
adc
inc
aas
call
rcl
aaa
xchg
inc
mov
outsl
mov
pop
dec
xchg
std
call
sahf
cmp
les
stos
mov
xchg
iret
add
test
adc
jle
cmp
inc
xchg
ljmp
fildl
inc
xchg
ss
jle
sub
or
lahf
lahf
xor
or
mov
loop
adc
push
aad
jmp
cs
aam
adc
xchg
and
push
sbb
sub
pop
ficomps
leave
hlt
cmp
dec
cmc
mov
ret
sarb
and
mov
sbb
mov
push
dec
sbb
push
loop
lea
add
jbe
scas
in
sub
xchg
sub
int
adc
jl
jecxz
dec
roll
clc
jle
call
cwtl
inc
shrl
clc
mov
mov
inc
inc
test
pusha
jg
sub
aad
pop
inc
add
in
idiv
push
dec
and
inc
arpl
xor
jo
mov
mov
shr
std
icebp
lret
rorl
and
inc
movsb
jnp
mov
mov
stos
add
int
mov
into
jbe
lods
mov
push
jb
insb
mov
clc
rcrb
les
popf
mov
out
mov
mov
cmpb
pop
cltd
or
xchg
push
mov
jecxz
fsubrl
popa
adc
test
or
add
int
jge
adc
pop
xchg
incl
and
test
fsubrl
push
xor
ss
jl
jae
js
repnz
pop
jo
lret
faddl
stos
aad
jle
mov
adc
les
cld
mov
or
push
xchg
cmc
push
repnz
push
sub
insb
insb
loopne
mov
pop
push
adc
std
repnz
xchg
xchg
dec
repz
clc
xor
jp
ja
int3
inc
ja
jb
popa
cmp
fs
lcall
mov
lds
xchg
sbbl
jne,pn
fdivs
enter
add
cmp
mov
jb
fisubl
sbb
and
mov
lret
cmc
mov
inc
jns
rol
sahf
sub
pop
jmp
or
cmc
inc
stos
ljmp
in
dec
cmp
fsts
sti
shlb
jno
xor
cs
and
mov
push
cli
jle
xor
scas
enter
push
ret
imul
push
dec
pop
out
and
cmp
xor
xor
xor
inc
in
pop
push
push
jnp
mov
decb
daa
add
das
out
adc
push
outsl
jb
pushf
jbe
mov
popa
dec
testl
stc
insl
mov
add
icebp
add
add
je
cmpsb
std
push
sub
pop
jp
mov
adc
mov
stos
imul
cmp
xchg
popa
lret
or
jbe
clc
and
inc
aaa
or
movsb
jp
jmp
jne
jl
mov
push
sbb
out
imul
dec
orb
or
sub
inc
mov
push
mov
pop
in
inc
mov
inc
pop
addl
xchg
cld
xor
fisttpll
cwtl
pop
pop
popf
xchg
lods
cmp
adc
inc
add
xor
mov
jae
cmp
jae
ljmp
std
addb
loope
and
lods
pop
movsb
adc
test
or
mov
and
cmp
mov
repz
scas
mov
daa
andl
lods
out
jmp
inc
dec
mov
and
jnp
lock
push
or
cmpsb
push
sub
add
and
jb
icebp
jge
shlb
ret
mov
pop
mov
bound
mov
leave
aas
sub
cmp
popa
dec
jge
mov
stc
outsl
fucomip
stos
test
stos
xchg
pop
sub
in
jecxz
mov
ss
cmpsl
popa
pop
adc
pusha
sbb
sbb
push
subb
sbb
add
insl
mov
mov
shlb
leave
jle
in
mov
cmpsb
call
adc
dec
sbb
rcll
pusha
cmp
mov
push
out
sbb
xchg
test
adc
mov
pusha
mov
cld
imul
arpl
repnz
fldenv
scas
xor
sub
decb
pop
fmuls
cmpsl
pop
xlat
sbb
mov
call
and
push
out
stc
mov
stc
test
push
inc
flds
mov
cmova
vpsllw
cs
lahf
fdivs
popa
jb
in
fsubrl
sub
cmpsl
arpl
in
ret
arpl
arpl
stos
xor
jo
dec
in
sti
adc
mov
cmp
lahf
hlt
cmpsb
clc
andl
sub
out
cmp
adc
fldt
inc
push
sbb
ss
sbb
leave
popl
pop
mov
xor
cltd
repnz
test
out
mov
sti
adc
div
mov
jns
xchg
mov
adc
cmp
jns
push
aad
insl
into
roll
aad
lahf
jae
outsb
test
cmp
pop
out
out
adc
sbb
addl
mov
mov
jmp
adc
lods
push
jno
inc
push
push
divb
adc
push
subl
jnp
stc
int
dec
inc
lret
rorb
jle
ss
cli
filds
mov
ja
push
fwait
shrb
pop
subb
or
dec
mov
int3
push
rclb
lods
cmp
xchg
jmp
xchg
mov
mov
loopne
jb
xlat
mov
mov
out
adc
pop
out
aas
and
push
andl
sti
dec
fisttps
fimull
js
mov
lds
or
inc
test
scas
sub
fiaddl
leave
jns
or
xor
inc
mov
jg
push
data16
data16
mov
and
lret
decl
lods
popf
test
inc
pop
dec
sub
xchg
mov
fwait
in
stos
push
xchg
sub
and
outsb
jns
push
ret
repz
scas
jmp
inc
iret
vrcpss
hlt
jne
fistps
stos
and
rcrb
pop
pop
in
sarb
push
push
xchg
xlat
xor
shlb
ret
pushl
push
jnp
sahf
cmp
lods
gs
pop
fxch
out
push
pop
push
push
sub
and
mov
ficomps
adc
jnp
inc
addl
jno
jg
add
mov
lods
xor
dec
push
fildll
xor
xchg
enter
xchg
mov
mov
cs
das
jbe
dec
in
dec
jge
imul
sbb
push
dec
mov
jae
cmp
mov
or
dec
fwait
and
and
jae
xor
jp
fwait
addl
xchg
rorb
imul
xchg
and
decb
and
cwtl
aam
cltd
mov
adc
enter
cs
pop
fildl
inc
sub
fcomps
sbb
dec
mov
adc
xchg
cmp
sub
mov
xchg
inc
repz
fsubrp
popf
sub
jno
fstpl
ds
push
sbb
add
dec
xor
cmp
mov
rcrb
push
test
clc
ljmp
fcompl
leave
inc
jmp
jbe
sub
mov
xor
pop
cmp
xlat
and
dec
inc
mov
sbb
int
aas
inc
mov
rol
dec
inc
mov
add
mov
lea
jmp
fwait
ja
push
sbb
shlb
push
mov
out
mov
push
sbb
mov
inc
pop
outsl
icebp
jno
cld
add
cld
pop
sub
pop
pop
loope
xchg
lock
bound
imul
je
test
or
and
lsl
jp
mov
mov
pop
insb
pop
testl
sbb
jbe
repnz
jns
xor
mov
pop
lods
stos
cmp
repz
divl
xor
rorl
and
ret
jecxz,pt
pop
cmc
pop
xchg
pop
cmp
push
mov
ja
adc
jl
cmp
inc
jg
cmp
movsb
pop
or
idivb
mov
ja
testl
add
cwtl
repnz
pop
push
lea
insl
or
nop
addr16
shll
adc
leave
idivb
nop
adc
sbb
push
xor
pusha
pop
cwtl
fimull
ds
imul
cltd
sti
adc
or
dec
push
cmp
dec
sub
enter
in
dec
mov
dec
sbb
pop
sbb
dec
jmp
xchg
or
mov
jnp
lock
in
pop
mov
jo
out
mov
mov
into
cmpsl
cmpsb
inc
and
mov
movsl
pop
cld
xor
xchg
sbb
enter
and
inc
dec
mov
out
aad
sub
xchg
scas
repnz
jp
cmpl
divl
xor
lods
xorl
mov
mov
imul
lahf
mov
pushf
imul
sub
sub
push
xlat
adc
xchg
mov
pop
pushf
sbb
addr16
jge
push
pop
and
sub
cmp
xor
fwait
mov
mov
out
icebp
and
fcomip
push
outsb
or
mov
mov
dec
mov
jle
push
jp
out
jns
mov
pop
sub
inc
outsb
add
pop
jnp
pop
sbb
or
lock
incl
sahf
or
in
cmp
pop
xchg
mov
out
cmp
aam
cs
xor
inc
push
ds
adc
mov
and
jecxz
popa
rcll
sub
mov
mov
les
sbb
insl
int
inc
enter
pop
add
inc
leave
mov
pop
out
mov
cmp
pop
fldln2
cmp
adc
mov
insb
pushf
jl
jmp
mov
add
insl
imul
lahf
popf
ret
or
leave
xchg
rclb
add
mov
hlt
mov
leave
fbld
pop
cmp
push
push
jp
shl
dec
mov
add
int
cmp
xchg
mov
jne
fmuls
sarb
test
gs
jg
mov
cmpsb
push
push
add
out
mov
out
loopne
les
es
arpl
lods
push
stc
add
sub
xor
cmpsb
es
sbb
add
sub
pushf
cmp
mov
in
into
jbe
les
or
xchg
mov
xchg
sub
lcall
imulb
mov
lret
cltd
cmc
das
and
ficoms
sub
movsb
push
pop
ds
add
cmpsl
xor
arpl
jmp
add
xor
fists
adc
les
test
iret
or
das
fsubs
clc
xor
sti
lcall
outsb
push
loop
punpckldq
and
pushf
xchg
cmpsl
in
fdivs
add
mov
loopne
sbb
fucomp
popa
lahf
int3
sti
out
jg
mov
cmpsl
jnp
mov
lock
mov
imul
in
mov
loopne
hlt
jne
jl
fimuls
je
out
jbe
mov
ret
cmp
add
dec
jbe
adc
andl
cltd
pushw
jl
mov
dec
mov
jecxz
cld
out
cli
std
xor
push
arpl
out
xorl
lods
fisttps
test
mov
pop
fxch
es
sbb
decl
in
and
mov
clc
hlt
sbb
test
mov
movsl
fidivrs
cmp
push
popa
mov
sub
sbb
jns
cmp
push
enter
xchg
int3
inc
test
hlt
jmp
sahf
jns
sbb
adc
push
mov
movntps
xor
fisubrl
adc
insb
mov
fdivs
push
dec
orb
pop
mov
pop
cmpsb
ljmp
mov
jae
adc
shrb
loopne
adc
mov
mov
mov
sbb
mov
ljmp
bound
dec
sbb
inc
mov
jno
mov
scas
add
adc
sbb
ljmp
addr16
fsubrs
fwait
scas
push
lds
pop
fnstenv
mov
or
ret
je
jnp
mov
adc
xchg
mov
movsb
sub
mov
pop
cmc
ss
inc
inc
mov
popf
sub
repnz
movsb
mov
jg
adc
arpl
lods
add
jb
dec
mov
cmpsb
sub
hlt
fisttps
sub
mov
lock
mov
leave
fildl
mov
adc
int
add
sub
gs
mov
xor
in
dec
insl
or
addr16
adc
pop
cltd
sub
mov
xchg
ja
push
jmp
or
push
mov
cld
mov
call
pop
xchg
adc
xchg
idiv
dec
dec
cmp
sahf
in
xchg
data16
int3
fisubrs
sti
daa
mulb
rcr
addb
gs
ljmp
xchg
pop
rolb
lcall
push
loop
mov
out
sbb
neg
lds
int3
lret
mov
sar
aam
jnp
aam
jae
stc
sbb
dec
cmpsl
and
sbb
cmpsb
cmc
mov
ljmp
push
movsb
xlat
inc
jmp
call
rorb
inc
push
mov
fdivrl
pop
js
stos
jae
mov
pop
dec
adc
cmpsl
jmp
push
mov
pop
ss
in
fiaddl
ss
jle
or
iret
outsl
mov
data16
sarl
addb
lods
cmp
jae
adc
data16
movb
jp
add
mov
popa
lods
cmp
mov
dec
outsl
shrl
lea
xchg
add
stos
pop
push
insl
push
outsb
push
xor
adc
mov
inc
inc
cmc
dec
adc
mov
dec
clc
sbb
jnp
mov
in
mov
and
xchg
ret
sbb
scas
scas
mov
mov
pop
mov
pop
inc
loop
xchg
aad
scas
jl
and
mov
daa
mov
into
stc
xor
mov
inc
inc
inc
xor
sbb
es
and
loopne
adc
push
or
xor
pop
sbb
mov
adc
xlat
ljmp
ljmp
and
stos
bound
ss
cmp
inc
push
insb
pop
or
imul
inc
mov
dec
jl
pop
adc
pop
loop
rol
cmp
mov
push
xlat
mov
mov
mov
jne
push
mov
das
push
xor
enter
js
xor
cs
mov
fldenv
jno
mov
xchg
in
mov
mov
lods
lret
int
mov
mov
or
jl
and
shl
xlat
clc
int3
rol
mov
loopne
push
push
push
mov
inc
push
insl
pop
add
dec
xchg
mov
sbb
sbb
addb
sub
xor
jnp
movsb
ja
push
cmp
cmp
and
scas
pop
lea
arpl
mov
gs
adc
imul
sbb
aas
in
jmp
out
hlt
xchg
push
mov
je
in
div
mov
jbe
loope
jmp
jo
shlb
cltd
nop
inc
add
pop
pop
adc
loopne
dec
pop
xchg
iret
rcl
pop
add
dec
cmp
xchg
xor
xor
or
mov
ljmp
add
test
out
push
bnd
hlt
push
jmp
add
add
xor
daa
mov
aad
push
mov
jno
aaa
inc
push
testl
sbb
mov
mov
inc
lret
mull
repz
fcoms
in
mov
xor
iret
pop
xchg
push
lahf
cli
lods
pop
es
push
mov
cmp
jp
repnz
jecxz
out
push
lods
xor
gs
xor
mulb
fiaddl
es
pop
pusha
clc
cmpsl
dec
outsl
sub
andl
jg
jae
aad
mov
jno
jge
popf
add
mov
out
xor
lcall
pop
mov
je
xchg
outsb
xchg
mov
and
jmp
jge
mov
dec
fstl
jne
mov
shlb
mov
push
sub
popa
pop
mov
orb
sti
mov
imul
rorl
cmp
mov
xchg
loop
scas
push
xchg
inc
adc
mov
push
jnp
cmc
mov
repnz
test
cmc
and
xor
ja
cmp
incl
push
inc
stc
xchg
push
test
fcomip
in
psubw
mov
xor
mov
lea
push
add
mov
mov
jmp
sbb
out
mov
aam
dec
shl
cwtl
repnz
xor
fisttpll
lds
pushf
insl
dec
xor
lret
dec
lea
pop
ljmp
pushf
inc
sti
mov
fwait
in
mov
mov
mov
lret
add
mov
hlt
or
test
test
mov
daa
fbstp
dec
fwait
jo
sub
or
shrl
dec
imul
pushf
push
ror
mov
dec
mov
call
lea
fnstenv
sarl
or
lret
xchg
pop
cmp
cmpsl
test
test
mov
sub
push
ror
mov
inc
mov
jb
mov
les
lods
jle
mov
add
adc
fs
pop
and
inc
sbb
push
xchg
loopne
pusha
cltd
popf
imul
rorb
daa
call
fadd
ficoml
cmp
mov
lcall
div
pop
mov
sbb
arpl
andl
mov
mov
lods
bound
inc
mov
mov
pop
push
repz
xor
pop
xor
mov
pop
add
imul
push
pop
aas
jmp
repz
cld
notl
mov
call
inc
and
push
movsl
clc
lods
mov
jmp
lock
es
push
inc
jl
adc
xor
lds
jmp
or
add
movsb
mov
nop
pop
clc
nop
mov
cmp
hlt
shrl
out
and
sub
pushf
outsb
push
nopl
jne
int
adc
xchg
xchg
jbe
jl
sub
jg
fcomps
add
pushf
push
pop
push
les
pop
cmpsb
xchg
fsubl
xor
xchg
jg,pn
mov
cmpsb
or
sar
jns
rcr
push
xor
movl
mov
cltd
mov
xchg
inc
jl
popa
sbbb
mov
cmp
pop
call
mov
scas
aas
scas
cld
inc
lret
push
movsl
call
js
mov
lock
sub
std
jle
sarb
jbe
cmpsl
insb
mov
jle
push
shlb
mov
fstpl
jle
inc
lds
sub
hlt
push
mov
or
sub
outsb
mov
mov
gs
push
jno
xchg
push
inc
arpl
mov
cmp
mov
mov
call
insl
popf
add
push
popa
aaa
fwait
bound
insb
inc
cmp
and
push
xchg
add
adcb
push
xchg
aam
jo
int3
and
cmp
push
push
sbb
add
es
sub
nop
xchg
adc
scas
popf
cmpsl
adc
rcl
les
fcomip
scas
jecxz
in
dec
inc
mov
and
sbb
cld
and
bnd
repnz
and
adc
popf
mov
loope
inc
dec
jmp
jle
fmul
inc
ret
dec
nop
add
lret
fldlg2
int3
sbb
out
pusha
dec
fldl
mov
cwtl
repnz
xchg
xor
add
mov
or
mov
sub
sbb
test
aad
insl
add
hlt
mov
push
imull
jg
outsl
mov
idivl
lea
adc
movl
outsl
mov
push
sbb
mov
leave
shll
jb
cmp
icebp
mov
sub
arpl
dec
fildl
ljmp
call
lock
dec
fdivrl
cli
jp
outsl
mov
sub
loopne
aad
hlt
ret
loopne
cmp
and
imul
and
stc
popf
xchg
fildl
jo
push
push
cmp
mov
lret
fidivrs
fcomp
lea
lods
pusha
jmp
dec
ret
sbb
add
add
and
jle
push
and
pop
pop
mov
pop
jle
je
or
add
std
sbb
rcll
popa
add
mov
pushl
jge
jg
mov
lods
push
xor
popa
mov
leave
mov
dec
fldt
cld
jns
sahf
cmp
stc
lahf
jne
test
fsts
js
daa
daa
out
or
mov
pushf
xor
arpl
mov
cmp
pop
jnp
mov
dec
in
pop
adc
clc
out
push
fucomp
lds
aam
push
jns
jnp
jge
mov
sbb
jne
xlat
adc
mov
std
inc
push
dec
jmp
sbb
adc
mov
add
jp
adc
pop
loope
sbb
sarb
xor
hlt
insb
addr16
incl
dec
cld
sbb
lea
add
and
and
fisttpl
mov
inc
out
fildl
push
and
jl
or
hlt
rclb
jne
mov
jle
aaa
ror
ja
repz
push
in
ret
in
inc
mov
cmc
pop
rcrl
fstpt
cmp
nop
bound
xchg
xchg
in
mov
cmp
jb
rorl
outsl
jle
or
les
lods
dec
out
fcmovb
loope
add
cmp
pop
xchg
or
xchg
add
inc
unpckhps
jmp
cmp
idivb
jle
mov
inc
xor
int
jmp
fdivs
sbb
mov
adcl
in
insl
out
mov
sbb
daa
push
loope
sub
data16
clc
sub
cmp
pop
mov
filds
pop
mov
mov
jns
push
lahf
rcr
or
mov
push
fadds
nop
pop
or
adc
enter
adc
adc
mul
and
pushf
xor
push
aam
add
adc
mov
int
cmp
test
aaa
dec
jnp
out
or
push
test
push
sbb
fwait
jns
out
pop
mov
ret
sahf
mov
push
test
dec
or
hlt
jne
sub
cmovo
mov
mov
cli
push
nop
jo
pop
addb
hlt
mov
xchg
fsubrl
xchg
cmpsb
lods
xchg
inc
pushl
fidivl
jbe
push
enter
es
lcall
add
pushf
in
add
scas
mov
movsl
xchg
data16
popf
mov
dec
lret
cmpsb
aam
pop
pop
imul
imul
inc
adc
and
pop
inc
cltd
mov
lret
mov
dec
fildll
or
cmp
int3
push
mov
jecxz
sub
adc
out
call
loop
stos
gs
push
xchg
scas
and
jmp
add
insl
popf
jae
cmp
mov
sbb
gs
cmp
push
push
xor
jnp
imulb
in
ret
and
dec
push
lcall
cmc
sbb
test
inc
loope
repnz
repnz
or
sbb
mov
cmp
loop
xor
mov
xor
addr16
dec
push
and
inc
movzbl
loopne
dec
mov
push
daa
imul
jns
fisubs
or
mov
push
mov
and
sub
push
mov
aam
jge
or
loope
mov
fcmovu
push
das
mov
bound
lock
scas
das
dec
cmpsl
ret
mov
movsl
leave
nop
sarb
cmp
cltd
xchg
out
jnp
dec
cmpsb
cmp
push
cmpsl
addr16
sarb
mov
mov
fcmovnb
xchg
lods
pop
mov
shll
and
cs
iret
xchg
decb
and
pop
shl
pop
cmpsb
repz
addl
and
lret
mov
sarb
xchg
pop
bound
xchg
jb
sub
inc
mov
jp
test
mov
mov
mov
popf
sub
inc
add
xchg
fs
inc
xor
out
or
pushf
jecxz
stc
lock
sbbb
mov
in
push
sub
addr16
pop
pushf
xchg
ja
inc
lahf
fiadds
sbb
or
stc
dec
add
sub
repnz
or
out
dec
or
popf
les
push
int3
mov
mov
xchg
sbb
imul
xor
cmpl
xchg
pop
mov
addl
cmp
push
adc
xor
nop
mov
imul
jnp
lods
movsl
cmp
cltd
push
mov
scas
hlt
data16
mov
and
push
bound
cmp
ja
addr16
xchg
sub
mov
jae
pop
loopne
mov
sahf
adc
imull
leave
jg
jge
jne
stc
repz
push
lahf
inc
shr
sbb
aaa
xchg
data16
je
es
inc
cmp
jnp
pop
rcrl
and
jge
lods
filds
int
mov
add
adc
and
mov
inc
cs
push
mov
cmp
scas
push
jb
sub
xor
enter
sub
push
scas
aas
push
ret
xorb
enter
sbb
add
adc
iret
in
inc
mov
dec
stos
clc
fldl
jo
call
dec
fidivrl
inc
test
mov
out
dec
stos
push
mov
xorl
mov
xchg
hlt
jnp
sub
xchg
mov
ficoml
lods
xlat
in
sbb
push
push
jae
mov
adcl
adc
inc
out
out
mov
pop
enter
test
popa
push
aam
push
inc
je
mov
xor
lock
jae
adc
aaa
or
sub
xor
push
dec
sbb
adc
dec
jno
xor
pushf
out
adc
nop
pop
popa
dec
leave
jp
icebp
insl
adc
mul
js
repz
lret
icebp
xchg
aaa
cmp
iret
inc
dec
insl
sub
js
jbe
pop
loopne
jmp
sar
ss
mov
js
inc
idivl
andl
in
mov
push
dec
dec
dec
xchg
xor
cli
push
mov
add
sbb
cmp
sbb
fidivrs
hlt
cmpsb
sbb
inc
lahf
data16
rcr
push
mov
das
sahf
and
adc
add
lods
cs
sub
in
les
xor
fwait
sbb
and
es
or
out
mov
testb
es
mov
shrb
stos
pushf
mov
mov
adc
pop
repz
orb
lea
xchg
ljmp
imul
or
add
sub
sub
dec
addl
xlat
push
cmp
scas
test
cmpl
or
insl
lock
shr
or
sbb
test
mov
test
jp
mov
jmp
jmp
jns
sbbl
xchg
in
out
call
in
enter
or
cmpl
sbb
sbb
insl
and
inc
addr16
xor
and
stos
mov
std
inc
popf
stc
and
iret
inc
or
test
cmc
add
mov
mov
js
fdivr
adc
insl
test
xchg
pop
loope
jnp
loope
pop
cmpsl
mov
inc
sub
sti
in
fsub
mov
in
sbb
dec
mov
mov
loopne
in
mov
mov
lret
stos
mov
neg
fiaddl
test
in
fsubrl
mov
mov
cli
clc
mov
mov
push
push
enter
frstor
dec
mov
lods
mov
sti
push
imul
or
test
or
inc
call
and
sarl
loop
adc
lock
jno
or
cli
mov
or
lock
loopne
sti
ret
lcall
dec
mov
arpl
imul
fistpll
cli
lds
lret
insl
cli
out
pusha
lods
leave
test
inc
and
mov
cmp
loopne
mov
jge
mov
sub
jno
popa
dec
fsubrl
jno
dec
fidivl
into
loope
inc
test
mov
jno
cmp
sarb
or
call
stc
subb
and
data16
and
fnsave
adc
mov
jns
inc
cwtl
faddl
and
xor
lds
xchg
inc
clc
mov
inc
lock
pop
pop
xchg
aam
jmp
stc
pushf
movsb
out
rolb
mov
xor
ret
ljmp
cwtl
adc
dec
gs
lds
dec
xor
pop
sbb
mov
jg
pop
push
pop
push
sahf
xchg
push
int
inc
xor
inc
inc
jp
sbb
loope
push
jb
or
mov
ret
push
pop
stos
xchg
enter
leave
repz
ficoms
cmp
add
in
fnsave
test
cwtl
mov
mov
inc
rcrb
daa
push
aam
add
sbb
xor
mov
mov
int
mov
or
cmc
sub
jmp
fxrstor
notl
bound
mov
adc
outsb
push
push
hlt
pop
pusha
inc
or
aas
daa
cmp
out
in
aam
or
push
mov
sbb
push
jb
jno
outsl
sub
jo
jge
mov
mov
push
lods
mov
jo
sub
bound
push
sbb
test
add
mov
adc
or
lods
push
dec
pop
sar
xor
push
movsb
sbbl
mov
dec
mov
jo
inc
cltd
hlt
mov
dec
idiv
xchg
pop
adc
in
xchg
jle
mov
pop
das
test
push
jo
mov
sarl
xchg
xlat
lea
push
sbb
lea
mov
mov
sbb
fdivrs
lods
pop
jp
xchg
sub
push
cmp
mov
mov
es
push
sbb
push
hlt
xchg
and
sti
mov
adc
popa
pop
inc
jg
adc
dec
xchg
and
push
mov
dec
xchg
adc
sti
lds
mov
loop
in
fstps
mov
pop
addr16
push
jb
cs
rcl
loope
xchg
dec
push
jnp
ss
addr16
mov
int
outsb
jl
scas
inc
push
test
icebp
push
loop
mov
fsub
xchg
push
jne
add
in
ljmp
lea
in
and
sbb
in
jne
ljmp
xor
push
popa
lcall
popa
sub
xchg
lahf
pusha
addb
push
test
lea
mov
adc
sbb
leave
push
scas
mov
scas
inc
outsl
int3
iret
cmp
into
cltd
xor
aam
add
jecxz
outsl
mov
test
jmp
popf
inc
popa
je
fstl
fiadds
adc
push
ljmp
jmp
lret
inc
ficomps
rclb
test
scas
andb
add
jg
mov
cltd
push
mov
push
or
mov
mov
xchg
fmull
nop
sub
je
mov
sub
mov
nop
out
out
daa
ljmp
outsb
outsb
push
subb
add
jl
aad
mov
divl
pop
lcall
addr16
rcll
mov
adc
sbb
add
adc
push
sub
ret
or
dec
mov
adc
ljmp
add
addr16
cmp
mov
cmp
scas
fistpll
divb
enter
mov
pop
push
lahf
mov
pop
push
pop
sub
mov
jp
test
icebp
add
stos
mov
outsl
and
inc
xor
idivl
and
push
fadd
mov
and
iret
sbb
mov
std
add
jne
xchg
jno
ja
xor
rclb
and
cmpsl
imul
jmp
lods
xor
push
mov
pop
sub
in
sahf
cmp
pop
mov
js
subb
xor
xchg
sbb
in
insl
popa
adc
inc
in
scas
daa
pop
pop
leave
and
and
sub
pop
inc
sub
cs
pop
aas
inc
ss
les
mov
cvtps2pi
addr16
sbb
mov
add
xor
pop
lahf
into
mov
push
push
and
js
mov
in
adc
xchg
inc
test
into
jp
aaa
idiv
pop
cmpsb
push
popf
mov
cmpsl
or
jecxz
mov
xor
and
mov
lret
xchg
push
inc
psrad
stos
sbb
and
cli
mov
pop
cmpsl
loop
andl
test
xchg
lock
xchg
inc
dec
and
mov
dec
rcll
iret
std
cmp
in
lcall
jge
mov
push
pop
mov
xchg
out
test
data16
pop
call
imul
adc
or
pop
das
xchg
fildl
or
xchg
and
js
add
mov
mov
fisubrs
jne
pop
out
sub
jle
jno
int
call
lahf
fwait
stos
sbb
or
adc
popa
shrl
ljmp
insb
mov
pop
xor
stos
inc
or
ljmp
cs
mov
add
xor
jae
xor
jo
jbe
mov
addr16
iret
inc
pop
add
xor
add
dec
push
inc
cmc
fists
jb
xchg
jae
lcall
nop
and
sbb
pop
das
cmpsl
pop
push
add
xor
fcmovbe
enter
insl
sbb
sub
aam
lock
gs
cli
and
sub
push
pop
mov
ret
cwtl
jge
enter
int
mov
jo
aam
mov
in
cmpsb
outsb
sub
aaa
jecxz
fstpt
push
jns
and
loopne
nop
out
call
icebp
std
xor
dec
int
xchg
jmp
mov
push
or
inc
outsb
scas
mov
mov
xlat
fcompl
mov
mov
cld
mov
or
xchg
add
hlt
fidivrl
gs
mov
gs
test
std
int
push
test
scas
and
sti
bound
inc
mov
mov
jmp
fstpl
sub
jecxz
out
in
push
inc
adc
out
out
mov
mov
imul
hlt
xchg
add
cmc
lock
ret
mov
xchg
repnz
jb
sbb
cmpsl
and
inc
cld
jae
lret
fsubrs
push
ficoms
lock
xchg
rcll
push
stos
inc
mov
sbb
push
lea
aam
inc
jl
and
mov
jecxz
dec
sbb
int
mov
jle
xchg
orb
mov
inc
leave
sub
pop
iret
fbld
sbb
cltd
mov
in
fld
aas
sub
mov
scas
in
repnz
dec
adc
adc
or
adc
aaa
js
jg
add
xor
push
test
int3
xor
fwait
and
cmp
add
loopne
pop
pop
leave
cmpb
je
lcall
mov
sbb
pushf
push
testb
or
push
test
fincstp
mov
jo
lods
mov
xor
arpl
xchg
out
jmp
aaa
insl
jg
orb
mov
cs
mov
add
xchg
mov
shrb
xor
lock
mov
lods
cmpl
xchg
pop
das
and
push
in
push
gs
add
cmp
cwtl
jl
sub
sub
idiv
in
loop
ss
je
xor
dec
push
addr16
push
jmp
adc
cli
push
stos
adc
in
add
out
mov
cltd
mov
cmp
lcall
rcl
xchg
orl
lcall
insl
pop
jno
lods
xor
jmp
icebp
test
push
mov
xchg
xchg
adc
xorl
in
sub
scas
sub
jne
cmp
ret
xchg
pop
js,pt
dec
lock
dec
sbb
xor
stos
pop
clc
inc
sbbb
jmp
mov
mov
sub
es
insb
shl
push
icebp
dec
dec
sub
loopne
add
jno
add
lods
pusha
subl
jmp
mov
sbb
stos
or
xor
inc
push
fwait
imul
cs
and
xchg
cmpsb
jge
jp
cld
mov
dec
pushf
pop
cmpsb
push
mov
push
std
movl
lea
repnz
push
in
rorl
rcrl
pop
lahf
xchg
mov
jmp
repz
decb
cmp
add
xor
mov
lods
sub
or
imull
inc
aas
and
rclb
cs
cmpsb
mov
mov
in
mov
lcall
js
adc
mov
or
outsl
cmp
pop
xchg
mov
xchg
or
ss
pusha
lcall
ljmp
leave
xor
icebp
jle
mov
push
fcoms
icebp
push
icebp
lods
lock
or
adc
leave
imull
add
shl
add
subl
outsl
pop
sub
rorl
jbe
sbb
xor
and
inc
fucomi
cwtl
push
mov
sbb
pop
nop
jae
mov
addr16
loopne
leave
lods
and
push
in
arpl
movsb
adc
dec
xchg
sbb
dec
rclb
imul
loopne
sub
std
dec
shl
inc
sbb
mov
jo
icebp
insb
adc
shll
insb
icebp
je
or
fidivl
cmp
test
sbb
inc
jge
jmp
pusha
iret
call
inc
out
test
xchg
pusha
repnz
jle
icebp
jb
movsb
pop
int
or
test
sbb
adc
shl
mov
test
jge
push
lds
ja
cld
mov
out
notb
clc
flds
mov
cli
addr16
fdivr
int3
and
out
pop
jle
inc
lcall
adc
xor
mov
mov
mov
adcl
les
andb
jl
testl
into
mov
adc
push
mov
repz
xor
mov
add
rolb
mov
lret
cmp
sub
push
or
inc
lea
or
xor
push
push
mov
in
pop
cmp
jne
imul
pcmpgtd
inc
dec
ret
xlat
push
ljmp
arpl
mov
ret
test
jae
mov
psadbw
sbb
add
pop
jo
push
insb
and
aad
ljmp
scas
repz
sbb
fs
loop
enter
mov
jg
mov
or
inc
inc
orl
mov
jns
or
sub
lds
xor
sub
xor
cmc
mov
shlw
orl
cli
icebp
ds
cmp
loopne
int
or
out
in
cld
rclb
jmp
les
pop
mov
in
add
inc
sarb
ja
movsb
mov
push
out
pop
pusha
push
xchg
push
mov
sbb
push
mov
and
sub
mov
int3
sbb
adc
adc
test
call
sub
std
scas
sbb
dec
lret
mov
push
sbb
xor
push
push
xor
clc
in
lods
push
inc
jmp
and
sti
pop
pop
jmp
adc
das
subl
xorl
pop
jne
fmuls
mov
inc
scas
jmp
dec
popf
mov
push
sbb
xchg
xchg
or
xor
insl
ss
repz
jbe
or
mov
mov
mov
cmp
inc
sahf
lods
mov
mov
lds
je
rorl
dec
xchg
sahf
mov
aam
lcall
cmp
push
je
sub
jo
in
push
push
imul
daa
outsl
je
dec
sahf
in
sbb
push
std
ljmp
test
ds
add
dec
outsl
pop
frstor
jp
shlb
xchg
mov
dec
outsl
push
imul
mov
cmpsl
pop
sbb
dec
xchg
js
mov
ret
ficomps
cmp
insl
mov
mov
or
cmc
jae
add
pop
push
loop
dec
data16
int3
popl
jae
aaa
in
popa
jle
lods
mov
add
js
ds
out
jbe
pop
shll
jge
sbbl
add
imul
mov
push
add
insb
mov
in
in
sub
cmc
movsl
bound
pop
mov
lret
sub
testl
mov
sub
xchg
jb
xchg
lods
dec
dec
out
sarl
iret
les
sti
sub
data16
jecxz
or
in
in
addr16
cs
inc
xor
loopne
test
outsb
mov
clc
mov
mov
ret
lea
sub
xor
mov
fmul
mov
push
imul
stos
sub
push
or
xchg
xor
out
sbb
repnz
pop
adc
je
mov
pop
xor
sub
sbb
cmp
xor
mov
fisubrs
sbb
and
cmp
pop
mov
or
push
addb
hlt
jno,pn
subl
aad
sub
jmp
je
add
loope
jbe
setns
aam
mov
cmp
mov
mov
pop
cmp
dec
cmp
popa
xor
xchg
rorb
fcoml
add
xor
loope
cmp
jecxz
adc
imul
pop
pop
fs
cmp
mov
lahf
mov
lcall
cmpsb
inc
negl
call
adc
sub
pop
xchg
jle
xchg
ret
pop
std
jge
mov
in
push
sub
dec
bswap
nop
add
xlat
nop
cmp
sbb
push
std
add
mov
js
cltd
loope
lds
pop
mov
pushf
cmp
push
push
xor
mov
shll
dec
sub
ds
cmp
or
out
loopne
push
mov
ljmp
int
push
push
push
sbb
repz
in
in
cmp
negb
and
pop
fimull
das
dec
hlt
cli
sub
and
into
sbb
and
push
gs
out
adc
pop
roll
rcll
push
pop
and
insb
aaa
xor
icebp
add
sbb
cwtl
mov
push
scas
jl
sub
adc
sbb
pop
lahf
scas
cltd
sbb
add
xchg
mov
jne
bound
outsb
orl
push
xchg
jno
out
inc
dec
mov
into
pop
adc
icebp
rcrl
sub
mov
push
dec
mov
lahf
inc
add
jecxz
sahf
mov
out
fwait
sbb
push
test
and
out
dec
mov
push
inc
sbb
shll
in
lods
arpl
ss
imul
jmp
mov
addr16
punpcklbw
into
cli
fisttpl
scas
lahf
in
pop
pop
lcall
scas
lods
cmpsl
push
push
shll
lds
jp
stc
xlat
pushl
fmull
xchg
lods
mov
stos
mov
ss
mov
imul
push
push
fprem
pop
jp
jne
stos
in
scas
push
mov
scas
aad
sbb
fs
push
out
std
inc
fistpl
push
leave
adc
in
arpl
cmp
in
fnsave
rclb
and
out
mov
int
test
and
cmp
adcb
push
pop
pop
pop
or
pushf
stc
imulb
pop
stos
inc
sub
inc
cmc
in
nop
pop
faddp
je
sub
test
adc
dec
mov
loop
into
push
mov
jno
cld
test
mov
cli
js
subb
sub
inc
dec
sub
gs
les
adc
inc
and
int3
xor
pusha
aas
int
nop
scas
cli
in
sub
ja
repnz
xchg
ljmp
jg
sub
push
mov
inc
insl
fldl2e
clc
es
adc
lock
or
int
jl
cmp
shrb
imul
gs
mov
repz
push
jns
scas
iret
cmpsb
rcll
xchg
and
test
xor
adc
xor
pop
sti
mov
jns
ffreep
sub
dec
ss
mov
jp
addr16
add
aad
xor
add
jno
cli
dec
fdivrl
jo
inc
lcall
add
fldl2t
ficoml
int3
and
xlat
movb
pop
mov
fwait
pop
mov
xor
shr
mov
mov
xor
rcrl
cmpsb
push
test
ret
sbb
lods
ret
adc
jne
xlat
dec
inc
repnz
inc
adc
lret
pop
add
cmp
movsb
out
sub
push
adc
filds
orb
jo
adc
mov
dec
fwait
leave
out
dec
in
fmull
fs
dec
xchg
mov
pusha
push
mov
mov
mov
int
xlat
les
sbb
js
inc
xlat
mov
mov
cmp
cwtl
dec
and
mov
sub
fs
jae
pop
in
sahf
mov
dec
das
shl
adc
fcomps
fwait
stos
sub
les
mov
dec
test
leave
fcompl
shlb
mov
sbb
test
leave
sub
mov
xor
icebp
xchg
mov
cmp
lods
hlt
mov
add
fsubrl
ja,pt
adc
sbb
jecxz
das
jbe
sti
push
cltd
pop
and
mov
mov
outsl
mov
pop
pop
arpl
clc
inc
addr16
addr16
in
jge
pop
and
lret
fucom
push
mov
xor
inc
sub
int3
int
or
out
xor
sbb
jns
das
mov
sub
mov
out
sar
jge
pop
test
test
inc
fdivrs
jbe
cmp
xchg
xor
adc
and
jl
into
mov
or
pop
pushf
dec
fdivs
out
adc
lods
adc
cs
adc
pop
sar
add
out
cmc
jbe
mov
repz
jmp
cmp
mov
or
enter
push
int3
mov
add
mov
and
in
and
add
and
push
lods
mov
adc
or
sub
xor
mov
dec
or
mov
and
add
mov
pop
jmp
push
add
mov
imul
mov
inc
fidivrl
rcrl
les
sub
shrb
jecxz
repnz
push
les
leave
jg
add
mov
jge
ficoml
fwait
xchg
xchg
add
add
sub
mov
xchg
leave
or
rclb
mov
mov
test
aaa
ret
xlat
push
xchg
jo
enter
test
jp
mov
out
outsl
aaa
sbb
mov
and
and
mov
push
ja
jge
jnp
xchg
jbe
testl
lods
arpl
mov
push
bound
addr16
adc
stos
xor
fxch
jecxz
mov
push
stos
outsl
scas
sarl
mov
shrl
lahf
mov
adc
dec
ss
ljmp
mov
add
mov
enter
outsb
mov
das
add
adc
push
stos
aam
push
or
imul
and
ds
fs
sub
dec
aam
fiaddl
mov
ret
in
add
fisubl
outsl
sub
pop
call
icebp
ja
mov
and
and
sub
xchg
push
sub
add
ss
mov
es
pop
mov
inc
pop
aaa
data16
push
stos
jb
sub
or
cmpsl
movsb
or
pop
in
cwtl
in
in
addr16
push
push
push
xor
lds
xchg
push
xor
rclb
push
fisubrl
outsl
fistpll
mov
add
xor
lret
testb
in
and
add
out
lock
sub
cmp
add
lcall
xor
and
inc
xchg
lock
clc
adc
cmc
lods
js
aas
aam
pop
jmp
add
mov
sbb
sub
mov
das
jp
nop
rcrb
in
jl
in
inc
testb
mov
or
and
pushf
mov
repnz
in
dec
dec
mov
jno
mov
inc
mov
std
insl
andl
lods
push
sub
loope
xor
mov
iret
test
mov
jg
test
mov
ror
out
jbe
test
in
push
sbb
and
aam
arpl
sub
out
sbb
xor
fldt
imul
out
movaps
sbb
mov
or
xor
fs
idivb
push
mov
pop
pop
leave
mov
push
adc
add
push
dec
filds
xor
cltd
cld
les
out
imul
mov
xor
sub
ljmp
pushf
mov
cmp
movsl
andl
dec
hlt
or
xchg
test
cmp
sub
adc
into
push
movsb
pop
sub
test
mov
sbb
dec
popa
nop
frstor
imul
pop
mov
out
loope
test
out
iret
pushf
call
mov
cmp
mov
cs
movb
adc
jmp
testl
loopne
pop
aaa
inc
rol
xor
in
fwait
cmpsl
mov
aaa
addr16
rcr
or
pop
lds
dec
mov
iret
fisubrl
fnstenv
and
push
sbb
mov
cmc
xchg
push
push
dec
push
dec
sahf
and
or
push
mov
jne
rcr
mov
cwtl
cmp
or
cmpsl
dec
jmp
and
fstpt
xor
jne
mov
sbb
adc
call
xor
fidivl
mov
lcall
adc
in
sub
sar
adc
jge
decb
insb
leave
cmp
add
xchg
ja
mov
negb
lds
arpl
fldenv
ds
xor
ret
push
dec
add
sbb
sbb
sar
imul
dec
pop
xchg
jg
clc
inc
push
sbb
push
push
push
out
data16
fdivrp
pusha
daa
fstpt
jae
popf
inc
cs
cs
sbb
sbb
fimull
mov
je
mov
jne
mov
rclb
popf
jbe
adc
std
push
popa
ror
pushf
ror
cmp
or
adc
mov
add
lods
in
adcb
adc
pop
out
or
jnp
fs
shl
xor
xor
cli
repz
fs
fcmovb
pop
and
cmp
ret
fdivrl
add
xor
inc
in
decb
scas
push
iret
into
mov
mov
shr
push
jb
hlt
leave
mov
cld
mov
or
add
jmp
les
orb
add
in
stc
dec
xchg
jmp
and
mov
xor
mov
jb
jmp
outsl
mov
jge
cwtl
iret
pop
call
pop
fcmovbe
and
cmp
or
data16
arpl
xor
inc
cwtl
cmp
hlt
decb
pop
bound
lcall
dec
push
bound
mov
fsubrs
leave
rol
xor
pop
or
cmp
lret
mov
cmc
ret
cmp
aaa
scas
loope
mov
fstpl
aad
scas
xchg
rcl
cmp
fucomi
fsubrs
jmp
std
pop
gs
test
xor
repz
lret
adc
mov
repnz
dec
inc
aad
shll
mov
loope
mov
push
cmpsb
icebp
fidivrl
outsb
into
loop
test
sbb
cmp
jno,pn
sar
xchg
xchg
or
nop
dec
clc
jnp
scas
lock
mov
es
xchg
sub
add
inc
push
test
sbb
test
clc
jb
mov
cli
sbb
ljmp
les
ret
rorl
aas
popf
xchg
ljmp
fisttps
pop
mov
adc
push
add
pop
iret
cmp
outsl
fistpll
mov
jmp
ret
pop
dec
test
insb
scas
loop
and
shlb
aad
and
and
xchg
loopne
sbb
in
outsl
cmp
adc
inc
and
popa
mov
push
mov
jecxz
in
inc
jae
mov
mov
enter
fldl
mov
jp
sub
lock
push
push
cmpsb
out
test
and
es
push
mov
add
push
xor
sahf
cld
push
jb
icebp
fidivrs
clc
lods
dec
jge
icebp
mov
aas
xor
pop
add
iret
sub
iret
addr16
ss
out
xor
jge
leave
je
cmpb
shll
subl
cld
xor
xor
int
push
aas
push
loope
into
rcrl
jns
mov
subb
inc
or
ss
lods
cltd
dec
inc
dec
push
fisubrs
sub
in
aas
stos
dec
lret
int
xchg
push
ret
push
aaa
loopne
mov
inc
add
dec
ret
add
mov
xor
dec
mov
clc
aad
sub
xor
cli
rorb
in
sti
les
lods
xor
dec
adcl
idiv
xchg
sbbl
cmc
out
call
aam
inc
insl
adcb
xor
mov
push
mov
sbb
cltd
push
mov
pop
xor
stos
mov
jo
adc
cmp
add
fs
dec
adc
mov
dec
push
or
push
sub
cmp
xor
add
cs
push
outsb
decb
jnp
scas
and
sub
and
gs
adc
jno
mov
pop
jae
xchg
movsl
jnp
lahf
cmpl
xchg
push
mov
pusha
ret
jge
push
inc
aas
fdivrl
mull
push
out
dec
shll
push
add
xchg
bound
outsl
sub
fwait
xor
out
out
test
xor
es
scas
jno
stc
push
insb
push
push
movsl
gs
xor
addl
test
cwtl
movsb
and
or
loopne
sbb
mov
stc
je
sbb
push
xor
mov
jne
add
pushf
mov
sub
xchg
movsb
dec
ja
shrb
ja
mov
ret
mov
dec
dec
ljmp
outsl
jae
out
outsb
xchg
cltd
sti
sbb
pop
int
lods
push
ds
orb
repz
fs
int
bnd
or
cmp
push
test
je
or
pop
lret
xchg
popf
nop
stc
cmp
sahf
mov
std
mov
xorl
inc
lcall
jge
cwtl
adc
test
test
cmp
adc
out
pop
stos
xor
sbbl
ss
xor
xor
adc
xchg
aam
mov
xchg
int
enter
jbe
outsb
cmpsl
std
cwtl
dec
xor
js
jnp
out
dec
loopne
test
xchg
ja
das
cwtl
lahf
jbe
push
push
lods
fsubrl
adc
in
mov
dec
fistl
add
pop
lahf
pop
mov
clc
jp
jecxz
mov
sbb
sbb
es
xchg
inc
sahf
mov
data16
sub
mov
push
into
push
movsl
adc
push
fisubrl
pop
inc
insl
pop
cli
xor
and
sub
std
jecxz
js
aas
adc
ffree
push
sbbb
pop
or
xor
add
or
cmp
movsl
mov
jmp
imul
fwait
push
mov
dec
jne
pop
sub
dec
rcll
push
cmp
xor
fistpl
or
cmp
test
ds
fistl
loope
cmp
addr16
mov
jle
push
sbb
imul
dec
jo
mov
scas
data16
ret
xor
js
movsl
xchg
mov
lret
nop
les
cli
sarl
test
xchg
dec
add
pop
stos
push
jle
xor
pushf
cmpsl
inc
sbb
fs
fstl
insl
push
loope
push
mov
mov
scas
dec
call
pop
scas
sub
mov
cmp
lds
mov
pusha
add
push
and
fs
rorl
xorl
adc
nop
lret
push
pop
and
stos
in
sbb
mov
fcmove
orb
mov
in
loope
btc
xlat
sub
loope
lock
xor
ja
xor
mov
loop
std
mov
and
inc
lea
cmp
jp
sub
or
and
mov
sub
cmp
ret
adc
sub
inc
div
push
push
ffree
addb
sbb
push
pop
mov
jp
mov
pop
in
sub
jne
sbb
scas
lods
pop
push
mov
xchg
in
stc
or
jle
adc
dec
jle
decb
imul
xor
xor
rorl
or
xorl
fs
cltd
mov
pusha
and
sub
int3
mov
sbb
cwtl
mov
and
in
push
mov
jge
jno
ds
or
or
stc
dec
cmp
pop
sbb
fistl
roll
or
inc
sub
push
and
adc
lahf
and
movsl
lret
mov
js
xlat
cmpl
cmp
jb
int3
stos
cmp
aad
xor
repz
push
push
lret
jle
sbb
push
lahf
mov
aaa
xchg
and
insb
test
ja
in
sbb
or
or
mov
cmp
jb
push
sahf
pop
cmp
gs
sbb
test
into
and
cli
lods
and
lods
dec
mov
push
adc
dec
xor
loop
dec
icebp
popf
xlat
loope
pop
in
fstpt
fiaddl
xor
mov
mov
jge
mov
shlb
aas
mov
or
xchg
mov
aas
or
cmc
int
imull
jmp
jb
int
mov
pusha
fcmovnbe
cld
pop
ret
mov
mov
and
addr16
out
out
nop
movsb
inc
push
mov
imul
je
in
nop
push
cmpb
outsl
pop
inc
xor
push
mov
in
popa
dec
sbb
jge
dec
test
mov
lods
idivl
sub
and
das
das
js
push
pop
push
jo
add
mov
cld
push
test
sub
mov
std
push
sub
rcl
bound
dec
bound
pusha
stos
js
or
lods
mov
cmc
test
adc
roll
aad
mov
pushf
mov
aam
mov
pop
add
cwtl
pop
cwtl
psrad
jbe
add
sub
dec
mov
xchg
repnz
inc
pop
cmp
mov
mov
test
add
pop
inc
negl
imul
cmp
xchg
out
jb
arpl
in
jmp
mov
adc
xchg
xchg
bound
bnd
adc
fldcw
cmp
xchg
dec
push
mov
pop
cltd
mov
push
incl
add
push
repnz
stc
xlat
xchg
jecxz
add
pop
test
je
test
jge
gs
movsb
loope
pop
das
loopne
jae
hlt
sub
mov
sub
movsl
or
mov
inc
movsl
sbb
adc
adc
cmp
mov
mov
daa
dec
fnstsw
xchg
divl
sub
mov
jge
push
stos
test
xchg
popf
leave
and
ds
in
dec
adc
add
add
scas
cmp
js
push
lcall
sti
lods
xor
push
mov
sbb
xchg
into
xorb
filds
arpl
imul
dec
mov
mov
pop
out
icebp
pop
mov
icebp
mov
out
arpl
test
dec
push
fnstcw
pop
mov
rcrb
cmp
outsb
jae
mov
out
sub
int3
xor
push
shrl
fs
cwtl
pop
lcall
jb
jl
xchg
mov
jmp
fstpl
jne
std
dec
add
jmp
xchg
pop
lea
sbb
push
notb
xor
mov
out
dec
int3
ficompl
icebp
jno
fldenv
jno
mov
movsb
ss
in
scas
cwtl
aad
push
pop
cmc
lret
mov
sbb
aam
cmp
jg
xor
cmp
cmpsb
loopne
inc
gs
push
fcoml
jnp
push
sub
jb
add
adc
rol
jp
ret
push
cmpb
pop
push
bound
mov
int
pushf
mov
sbb
andb
push
or
stc
pop
dec
inc
popf
xor
or
dec
lods
out
mull
shlb
push
pop
pop
arpl
xchg
rcll
add
stos
rcrb
pop
ret
dec
push
cmp
inc
movsb
cmpsb
pop
incb
jae
loope
mov
fiaddl
push
shrb
sub
push
push
std
jae
icebp
and
mov
mov
sub
ret
xchg
jmp
xchg
gs
xor
out
fsubs
mov
out
test
movsb
xchg
clc
or
movb
sbb
fisubrs
int
out
and
out
repz
and
cmp
or
les
jbe
gs
dec
xchg
jmp
jecxz
mulb
mov
pop
pop
add
pop
adc
addr16
sbbb
in
jne
adc
mov
dec
out
lods
jg
pop
cld
dec
out
add
std
push
jae,pn
loopne
sub
daa
and
cmpsl
or
subb
and
push
add
ljmp
dec
pmuludq
mov
adc
imull
pusha
idiv
shrl
pop
arpl
mov
outsl
xchg
pop
test
imul
in
iret
repnz
iret
flds
cmpsl
dec
movsl
outsb
pusha
cmp
inc
add
inc
cltd
cltd
sub
mov
pop
out
into
jle
jecxz
jae
adc
inc
push
mov
scas
mov
pop
das
push
clc
mov
shlb
push
adc
mov
in
jge
dec
repnz
je
or
sbb
inc
add
movsl
adc
mov
ret
gs
and
sahf
cltd
aas
jge
pushl
jecxz
mov
mov
xchg
dec
pop
out
pop
sub
and
notb
push
jno
xor
into
pop
js
sub
jbe
int3
push
xchg
cmp
push
cltd
fucomp
and
adc
test
outsb
xor
inc
rclb
add
inc
cmp
push
xlat
push
stc
sahf
xchg
insb
iret
in
jle
fmull
adc
sarl
xorl
hlt
inc
fisttps
xchg
das
adc
mull
insl
mov
movsb
adc
push
out
sti
shrl
test
lcall
and
test
sbb
nop
push
jmp
add
push
rcll
loope
scas
add
js
cmp
xor
dec
add
hlt
daa
cmp
jl
faddl
add
xor
sub
dec
and
loopne
sub
inc
pop
movsb
das
stc
push
andl
adc
or
pop
xlat
lret
xchg
int3
pop
adc
or
repnz
ds
inc
mov
adc
loope
and
in
mov
movsl
ja
movsl
scas
pushf
fcoml
insl
mov
daa
ret
orl
sarb
sbb
in
add
adc
testl
push
xchg
pushf
test
push
and
data16
cltd
in
imul
mov
cmp
mov
hlt
mov
cwtl
into
inc
xchg
aam
xchg
movsl
push
dec
stc
add
dec
or
mull
inc
sti
roll
add
arpl
adc
mov
xor
xchg
mov
bound
rcll
push
lods
test
jno
jle
mov
xlat
ret
out
popf
dec
jbe
mov
mov
pop
push
cs
add
add
mov
push
daa
pushf
mov
out
ds
inc
xor
aas
sbb
add
mov
pop
aas
imul
add
jp
int3
mov
mov
mov
xor
lahf
cltd
mov
adc
out
out
int
sub
or
fistl
mov
cmp
shlb
cmp
movsl
icebp
push
pop
test
fsubl
inc
jle
and
fs
lret
cmpsb
add
outsb
data16
mov
into
fcoms
pop
cwtl
cmp
cwtl
insb
ret
fwait
scas
in
dec
sbbb
imull
xor
movsb
sub
ja
mov
rorb
addr16
mov
mov
or
nop
sbb
adc
or
jge
in
push
stos
insl
sbb
adc
sbb
scas
outsb
ret
adc
cli
in
daa
adc
jb
fadds
jo
mov
int3
and
mov
lea
rcrb
dec
fistpll
xor
or
or
mov
cmp
push
sub
in
adc
mov
xor
adcl
call
jg
add
iret
and
mov
mov
adc
xorl
lahf
pop
arpl
jge
mov
sarb
inc
mov
arpl
dec
test
jns
mov
mov
fadds
and
aad
mov
dec
fs
pushf
inc
sub
stos
ljmpw
ljmp
and
fistpl
mov
mov
outsl
lds
loope
inc
mov
js
stc
scas
addr16
stos
fdivp
cmp
out
lock
stos
cmp
bound
sub
aaa
shlb
mov
frstor
xchg
jl
xchg
xchg
pushf
add
js
mov
loop
cmp
fnstenv
pusha
sub
cltd
stos
mov
das
xchg
pop
jae
daa
shll
xchg
mov
xchg
sub
outsl
stc
xor
sub
jmp
movsb
fdiv
out
fsubrs
lcall
cmp
pop
out
mov
xlat
adc
jmp
pop
outsb
inc
push
jo
std
or
imul
jnp
mov
or
xchg
sub
pcmpeqd
inc
inc
mov
mov
scas
ds
fsubs
mov
add
mov
movsl
pop
pusha
insb
std
sub
mov
fldcw
xchg
push
addl
aaa
or
mov
dec
iret
loop
pop
or
aas
stc
inc
xchg
xor
cmp
pushf
xchg
sbbb
push
lods
inc
mov
ljmp
mov
data16
cwtl
ja
test
std
movsb
xchg
xchg
and
push
xor
stc
loope
aas
fwait
and
lock
in
jnp
mov
popa
ret
shl
mov
clc
add
icebp
xchg
cmp
mov
imul
push
insl
push
pop
mov
xchg
ss
jle
stos
dec
mov
fwait
insl
rorb
lock
inc
pusha
clc
stos
imul
jmp
inc
jl
lods
cmp
popa
iret
jae
fldcw
xor
out
ds
in
sbb
std
inc
add
je
push
loopne
mov
outsb
and
cmp
jae
aas
mov
ret
xor
cmp
mov
cltd
jnp
dec
jmp
jmp
ret
das
add
rcr
push
adc
scas
idivb
stc
jns
and
jp
nop
mov
aad
inc
cvtdq2ps
push
out
dec
jns
hlt
imul
mov
les
pusha
mov
mov
push
js
mov
cld
ret
push
mov
or
pusha
cmp
dec
xlat
les
adc
xchg
inc
aas
pop
cltd
push
xlat
or
mov
int3
jp
leave
push
mov
add
inc
lea
jge
jbe
cmp
fsts
outsb
popf
aam
mov
test
out
addl
in
out
les
mov
mov
gs
sar
shl
xor
in
shlb
mov
sub
ficoml
aam
and
out
sub
inc
fwait
push
pushf
rcrb
mov
ret
mov
xchg
cmc
mov
or
jge
repnz
shl
cltd
sti
jl
pop
jmp
mov
shll
adc
sub
lret
jg
fld
xor
fisttpl
sahf
loop
movsb
inc
sub
or
jb
loop,pn
sub
aaa
jmp
xchg
jl
xor
mov
push
fdivr
push
mov
push
fldt
pop
sbbl
xchg
pushf
pop
mov
adc
imul
jle
popf
push
inc
popf
hlt
add
out
jo
xlat
or
sbb
testl
jo
pop
lret
pop
dec
rcrb
mov
sahf
mov
imull
add
divb
cmp
jnp
cld
pop
cld
jmp
popf
repnz
cmp
cmp
sub
stc
loope
inc
stc
or
call
sbb
repz
das
arpl
insl
or
icebp
mov
fists
mov
js
fists
aad
mov
pop
mov
stos
xorl
mov
add
fldenv
sub
xor
xchg
lods
leave
jo
cmp
rolb
fsubrp
jg
xorl
sti
xchg
loopne
js
fs
daa
or
mov
pushf
cmc
int3
mov
mov
fstp
adc
sub
sbb
cltd
lcall
sar
push
add
es
cmp
pop
or
push
adc
jae
jp
ja
out
mov
and
mov
leave
mov
stc
mov
test
out
jecxz
fists
xlat
nop
fcomi
shll
jle
mov
cmp
and
out
nop
jbe
lock
mov
insl
lods
mov
sbb
scas
dec
call
pusha
repz
add
dec
imul
push
pop
pop
sub
out
das
repz
push
aas
or
dec
and
ds
divl
ds
sub
pop
adc
scas
int3
mov
add
add
jmp
adc
dec
dec
jecxz
add
xchg
bound
xlat
sti
lret
sti
outsb
sahf
les
fsubs
rcll
xor
or
push
add
dec
mov
inc
pop
test
das
cmp
sbb
sbb
jbe
icebp
xor
push
pop
loope
sarb
adc
ja
loopne
fidivl
inc
js
sub
icebp
jp
mov
insl
push
mov
mov
mov
pop
inc
fiadds
jecxz
cmp
lret
inc
out
ret
sbb
call
or
mov
cli
inc
xor
aad
lea
mov
jp,pn
dec
cmpsb
and
cwtl
ret
pop
mov
xor
fists
arpl
popf
setnp
movsl
inc
xchg
cmp
aam
mov
lcall
aad
rclb
mov
mov
test
arpl
cmp
lock
ret
hlt
aam
ljmp
fs
ror
insb
inc
mov
test
ljmp
and
movsl
pop
mull
xchg
and
pop
dec
aaa
insl
adc
fnsave
test
int
jge
fistl
and
or
dec
ds
test
jae
lods
jns
mov
xor
out
ffree
mov
pop
push
add
scas
xchg
loop
ds
sbb
push
cmc
xor
mov
push
addr16
int
and
repz
loop
scas
push
mov
push
xor
push
push
dec
mov
push
addl
mov
icebp
sbb
fldcw
cmpsb
repz
dec
lahf
add
aad
aaa
imul
pop
jg
call
push
mov
adc
rep
stos
add
adc
dec
jne
cwtl
sub
test
cltd
xor
dec
out
jb
mov
cmpsb
cli
fiaddl
cmp
adc
xchg
mov
mov
jp
scas
test
push
xchg
xor
sbb
outsb
jnp
pop
mov
mov
xchg
or
andb
xchg
in
pushf
xor
mov
xchg
push
clc
notl
jl
mov
das
out
cld
in
or
mov
pop
xchg
lret
push
andb
sbbl
adc
movsl
idivb
inc
jp
dec
fadds
xor
xor
sbb
cmpsb
cmp
mov
or
xchg
xchg
push
mov
outsl
in
fildll
in
cs
or
cmp
sub
add
jb
popf
aam
lock
test
sub
xchg
push
mov
lea
and
and
and
fsts
push
stc
push
or
fadd
addr16
cmpb
xor
sub
dec
stos
lods
mull
add
mov
add
cwtl
pop
je
mov
push
jns
mov
or
shlb
repz
xchg
arpl
stos
rolb
ljmp
scas
jmp
push
lahf
out
mov
push
lret
inc
add
insl
test
dec
enter
test
xor
xlat
shll
scas
negl
xchg
repz
shrb
out
or
ja
int3
xchg
loope
popa
or
nop
movsb
mov
mov
jp
testb
jmp
sub
arpl
add
pop
mov
mov
add
in
and
pop
cmp
dec
leave
fiadds
cmc
jb
lret
jg
rcr
push
jge
mov
out
movsl
mov
pop
leave
dec
mov
jo
daa
imul
push
adc
pop
ret
jl
sub
xlat
cmp
fmull
or
es
mov
fdivl
test
sub
pop
outsb
push
push
aad
push
and
lock
mov
mov
xchg
xor
jnp
mov
cmc
xchg
repz
movsl
and
outsl
lcall
les
add
and
sub
and
dec
adc
push
clc
pop
mov
or
int
test
xor
pop
sub
add
pop
sub
cmpsb
sbb
pop
jbe
dec
inc
pop
test
data16
pop
popa
mov
dec
sbb
fstpt
addl
movsl
mov
xchg
ret
movsb
push
xchg
jae
aam
adc
jno
or
jg
xchg
and
pop
aad
rolb
test
push
repnz
sub
mov
dec
sbb
cmp
in
adc
mov
cmp
imul
imul
push
sub
stos
lock
iret
fisubl
jg
push
xchg
leave
in
adc
mov
sbb
pop
fcomps
mov
aas
jmp
fnstcw
cmp
repz
inc
adc
xchg
jle
push
mov
adc
scas
es
sahf
push
dec
sub
mov
andl
and
arpl
mov
lds
or
add
aaa
cld
pop
and
and
jbe,pt
inc
jo
call
aas
in
lcall
push
je
fs
jne
and
dec
adc
mov
push
xlat
dec
mov
add
inc
adc
pop
lds
fimuls
pop
and
pushf
icebp
sbb
adc
add
fisubrl
testb
repz
jbe
push
adc
sub
add
outsl
loop
mov
pop
xor
fwait
rcrl
ret
xor
fcomp
fcoms
aas
pop
and
lret
push
mov
xor
xchg
stos
pushf
xor
pusha
stc
cmp
lret
mov
call
sbb
and
rolb
fcoms
fsts
xchg
imul
das
fs
cmp
fcoms
mov
aam
cmpb
sti
int
mov
jae
aad
and
fwait
movsb
fwait
sub
cmp
dec
push
mov
lods
jbe
test
mov
sbb
push
and
out
push
loopne
into
mov
pop
jle
lods
stos
stos
jl
loope
cmp
fstps
mov
pop
pop
xchg
pop
popf
sub
sub
jns
mov
sti
mov
jl
lcall
into
jo
shl
xchg
mov
and
mov
sti
mov
and
icebp
or
sub
cmpsb
pop
test
mov
ret
pop
aas
incl
pop
or
pop
shl
aam
aad
stos
shlb
imul
inc
neg
es
mov
loope
xchg
stos
sti
add
cmpsb
inc
cmp
popl
jne
sbb
pop
inc
mov
bound
call
test
mov
or
add
js
in
shrl
or
lret
xor
mov
jecxz
inc
mov
xor
fdivr
mov
sbb
jge
and
imulb
mov
xor
rorl
xchg
in
loopne
pop
xor
nop
xor
or
xchg
pusha
popa
inc
clc
mov
sarb
popf
nop
outsl
stc
push
pop
into
jmp
dec
fmul
adc
pop
loop
jl
jmp
xchg
mov
pop
mov
rorl
jbe
add
fiadds
hlt
push
and
sub
cmp
out
fsubrs
or
imul
repz
cld
pop
inc
and
shlb
inc
xlat
std
enter
mov
and
js
pop
dec
jno
sbb
sbb
out
stos
sbb
inc
jg
jne
mov
sahf
push
xor
jns
inc
xchg
dec
iret
insb
add
icebp
hlt
in
add
pop
lods
push
xchg
mov
sbb
fs
cmpsb
add
inc
add
sub
mov
jmp
adc
imul
jb
lcall
push
or
popf
addb
sarl
mov
dec
mov
out
push
pushf
ficompl
pop
xchg
sub
mov
lret
test
pop
push
fdivrp
xlat
popf
add
pushf
push
jmp
pushf
lods
cli
jmp
pop
cli
in
sbb
xor
mov
jo
movsb
jno
rcll
scas
sbb
in
xor
dec
icebp
cmpsl
mov
adc
push
fidivrl
imul
stos
cmp
in
xlat
mov
mov
leave
rcrb
insl
or
lret
data16
push
stc
bnd
mov
sub
mov
or
out
sub
jl
mov
adc
adc
loopne
scas
daa
ficoml
and
lret
int3
xor
icebp
push
mov
add
jno
fwait
xchg
out
sbb
aas
cmpb
cmp
xchg
das
outsl
jae
int3
mov
sarb
orb
lods
jb
and
daa
mov
cmc
fdiv
in
fsubrl
jne
pop
scas
insl
dec
and
mov
lcall
popl
mov
aaa
dec
or
fs
jo
xchg
arpl
or
repz
and
xorb
xor
add
ljmp
test
mov
adc
scas
lock
sbb
cmpsl
add
pop
lods
shll
scas
test
ret
out
sub
sub
outsl
pop
or
mov
fnstenv
or
insl
cmp
andb
or
adc
mov
sub
jno
mov
jb
mov
mov
mov
xchg
adc
inc
pop
xchg
mov
adc
addr16
cmp
cli
lds
add
mov
fst
repnz
mov
mov
loop
inc
pop
jle
aaa
jge
or
das
jg
or
int3
jne
push
or
popf
leave
push
loope
pop
mov
je
pop
inc
mov
mov
sub
fstpt
iret
or
mov
icebp
into
inc
push
jno
mov
push
inc
and
sbb
fisttpll
mov
adc
insb
icebp
xor
jnp
loop
pop
pushf
lds
sub
call
dec
pop
movsb
arpl
mov
ret
mov
std
popa
jmp
arpl
vandnps
rolb
mov
adcl
jg
sub
dec
div
inc
mov
out
lret
xor
cmpsb
adc
bsr
mov
cmpsb
stos
sbb
in
cli
dec
mov
add
adc
stc
cld
push
pop
sub
xor
insl
push
lahf
sub
adcb
adc
das
xor
lock
dec
push
fists
adc
mov
leave
cld
pop
add
sub
mov
rclb
jbe
nop
cltd
pop
mov
xchg
cltd
cmp
sbb
xor
jp
shlb
pusha
pmulhuw
jp
cmp
pop
adc
incb
aam
and
int3
fcoml
pop
mov
movsb
sub
mov
inc
xor
cs
push
add
cmp
pushf
pop
in
xchg
or
xor
and
loope
lds
dec
repnz
add
mov
xchg
jnp
jle
popf
push
cmc
xlat
add
xor
mov
movsl
add
in
lock
fsubrl
gs
xchg
inc
push
test
jnp
ja
and
mov
sbb
push
pcmpgtb
icebp
ret
mov
xchg
xchg
jb
cmp
push
pusha
xor
mov
xchg
dec
xchg
femms
sub
xor
sbb
movsb
inc
mov
cmp
mov
daa
aam
add
imul
sahf
push
fcmove
mov
push
sub
mov
enter
mov
aaa
mov
push
xchg
push
out
push
loopne
cmp
out
addl
sub
jns
adc
popa
mov
fcmovne
sbb
addr16
jo
cwtl
push
test
mov
mov
loope
xor
pop
leave
jg
sub
inc
rcll
adc
mov
jae
dec
outsl
fidivrl
mov
repnz
and
add
xor
rcll
faddl
test
jg
sbb
rorb
push
in
and
adc
jecxz
dec
aaa
cmp
shll
lahf
repnz
xchg
inc
jecxz
addr16
int3
rolb
pop
sub
push
insl
repz
mov
aaa
testl
jnp
push
mov
pop
lahf
js
inc
call
verw
dec
shl
jp
mov
cmpsl
adc
popa
or
and
xor
aaa
cmpsb
sub
insl
add
es
shrb
out
fbld
popa
xor
push
lret
into
mov
cli
enter
mov
xchg
xor
push
sahf
jecxz
rorl
out
adc
push
frstor
shlb
cmc
jne
repz
fnsave
push
aad
out
mov
or
xchg
mov
mov
lcall
pop
aas
sbb
cmp
jbe
xor
jbe
push
xchg
mov
jmp
dec
orb
sbb
in
test
adcb
xchg
and
inc
xor
loopne
les
sahf
cpuid
insl
mov
test
fwait
int3
xor
mov
xor
inc
clc
add
jne
popf
out
lret
xchg
test
adc
push
inc
add
dec
sbb
jecxz
xor
push
add
out
scas
mov
adc
lret
imul
jg
ret
inc
mov
test
or
cmp
push
add
sbb
cmp
pop
cmp
addr16
cmpsl
and
xor
xchg
fisubl
sti
test
shlb
icebp
sub
cmc
cmp
push
sbb
inc
jle
loop
xchg
push
fldl
adc
mov
pop
xor
lcall
mov
jecxz
pop
dec
das
dec
xchg
mov
sub
mov
xor
lret
and
adc
call
pop
jno
stos
mov
jnp
int
iret
daa
movsb
cli
sbb
and
mov
xchg
outsl
cmp
scas
ljmp
sarl
adc
mul
xlat
iret
xchg
fwait
xchg
push
pusha
scas
outsl
cwtl
xchg
andl
xchg
stos
idivb
sar
mov
jnp
and
jle
and
or
jae
mov
adc
fwait
add
sub
cmpsb
or
inc
xor
push
mov
sub
push
add
mov
lock
xchg
shlb
xchg
std
cmpl
hlt
xchg
fisubrl
mov
inc
xchg
cmp
cmc
imul
xchg
push
adc
pop
xchg
mov
int3
popf
addr16
xor
pop
xchg
test
xor
mov
jns
or
adc
clc
sbb
mov
movsb
fisubs
dec
mov
sbbl
xchg
and
and
fwait
lds
ret
pop
pop
js
pop
and
mov
pop
adc
jns
es
push
fsubl
adc
inc
pop
xor
lea
stc
or
mov
dec
jl
dec
jae
inc
insb
push
call
add
jo
aam
rorb
pop
inc
add
xchg
out
loopne
pushf
inc
imul
dec
out
iretw
add
pop
push
mov
shll
cltd
push
or
jo
and
inc
loopne
sbb
outsl
dec
test
sbb
ret
jp
shl
outsl
mov
mov
push
lds
or
jmp
test
fsts
repnz
or
rorl
test
jns
pop
out
ret
ja
cli
and
sahf
and
outsl
jle
jmp
rcl
mov
fadds
insb
add
outsb
cld
jl
add
dec
outsb
xor
and
cmp
shll
mov
cmc
sub
mov
ss
in
mov
and
daa
xchg
push
cmc
jb
jbe
lea
or
movsl
ret
outsl
or
adc
jno
cld
dec
stos
fnstcw
jne
or
fdivs
mov
fs
adc
bnd
in
aam
xchg
repnz
out
mov
push
loope
inc
loopne
aas
rorb
shrb
ja
loopne
das
pop
cmpsb
pop
ds
ljmp
std
pop
jne
rcrl
leave
fistps
sbb
out
and
push
pushf
aaa
push
movsb
add
mov
push
adc
xlat
shrb
pusha
mov
xor
fildll
or
mov
idiv
mov
mov
sahf
or
push
dec
jmp
add
adc
xchg
out
push
pop
adc
push
mov
dec
frstor
mov
xchg
enter
sbb
decl
jnp
sub
int3
pop
mov
loop
insb
cmp
je
sub
stc
or
dec
cmpsl
subb
loop
loopne
out
add
bound
test
cmpsb
mov
inc
or
out
sbb
jno
mov
into
aad
shrl
ud0
lret
das
outsl
js
push
xchg
stos
ljmp
cmc
repz
cmpsl
pusha
mov
dec
push
mov
mov
lods
test
mov
xchg
push
fcomps
ret
shrb
das
cmpsl
cli
test
jp
popa
sub
cmc
inc
mov
and
mov
lock
cmc
add
dec
mov
pop
xor
cmp
icebp
dec
orb
xchg
in
mov
seto
fs
pop
call
add
xchg
jle
adc
aas
push
inc
mov
jnp
sub
dec
aas
push
call
outsl
or
jae
enter
testb
shll
jnp
pop
mov
lds
std
leave
cwtl
aam
dec
cmp
xchg
cmc
loopne
sbb
push
je
and
insl
pop
popf
and
cmp
enter
fbld
ja
sbb
pop
mov
scas
lock
cmp
push
cli
pop
loopne
outsb
fiaddl
mov
mov
push
or
stos
outsb
shll
or
aas
mov
pop
out
out
xor
leave
pop
fwait
push
out
inc
ljmp
adc
shrl
mov
xlat
jle
xchg
and
scas
in
adc
cmp
movsb
push
movsb
cmp
mov
clc
pop
incl
pop
pop
inc
leave
sub
pop
jmp
push
xor
out
stos
std
jge
inc
cli
push
xchg
push
sbb
repnz
rep
push
shll
popa
jnp,pt
in
jg
pop
cmp
or
xchg
dec
cmc
fildl
addr16
in
aam
sbb
movsl
lret
pop
int3
inc
add
mov
inc
stc
hlt
mov
out
movl
cmp
rolb
repz
ret
or
push
cli
cli
stos
mov
dec
fisttpll
push
fstl
fists
addr16
mov
out
dec
rcrl
lret
test
dec
xor
movsl
aaa
inc
jnp
imulb
test
xchg
inc
xchg
cmpsl
rolb
cmp
arpl
dec
int
mov
or
dec
xchg
fmull
or
mov
push
inc
shl
pop
ficoml
xchg
fiaddl
inc
mov
pop
dec
insb
in
jnp
outsl
dec
lock
cmova
testl
lcall
aaa
lahf
or
sub
dec
aam
inc
insl
push
repnz
imul
popa
mov
movsl
cmpsl
jbe
mov
sbb
xchg
push
add
jp
shrd
fcoml
inc
and
cmpsl
push
adc
movb
push
mov
out
lds
out
imul
repnz
jmp
out
xor
mov
cltd
movsl
dec
pop
fidivrl
mov
movaps
mov
inc
add
mov
xchg
cmp
sbb
mov
lret
movsb
xor
imul
fisubrl
repz
cs
das
fnstcw
pop
mov
jecxz
cmp
lret
inc
push
subl
and
cld
shr
bound
in
cmp
sbb
fcmovnu
add
lahf
push
xor
add
add
xchg
loop
ja
movsl
mov
or
add
xor
mov
es
dec
xchg
mov
out
std
int3
cmp
inc
or
test
clc
jecxz
pop
inc
push
and
mov
sarl
lds
sub
ljmp
scas
mov
scas
push
mov
mov
jne
enter
pop
hlt
aaa
and
lods
push
mov
cs
lea
testb
pop
testl
stos
rolb
cmp
insl
cmpb
and
not
addl
lods
mov
out
aas
dec
ret
mov
sub
xchg
insb
ds
aad
jb
adc
jne
or
xor
aam
inc
gs
xor
dec
mov
into
xchg
fimull
jge
pop
jle
int3
rclb
mov
call
ret
add
enterw
out
leave
ret
pop
mov
adc
mov
xchg
aam
inc
cmp
js
mov
outsl
gs
mov
insb
inc
pop
adc
imul
mov
mov
cltd
jbe
pushf
pusha
scas
jns
aad
fcompl
ret
repnz
dec
dec
popf
fldt
iret
jns
out
movsb
jne
cvtps2pi
dec
or
and
daa
mov
adc
sbb
jp
aad
daa
dec
je
mov
dec
cmp
mov
xlat
mov
addr16
or
sahf
nop
push
adc
lea
js
pop
rol
pop
mov
rcll
and
cmc
sbb
in
movsl
and
push
jne
add
jp
adc
into
adcl
das
shll
dec
pop
lds
js
and
sbb
jno
pop
outsl
adc
xchg
mov
push
rcr
daa
out
fnstcw
add
notl
cwtl
pop
or
sbb
pop
dec
xchg
jns
mov
mov
test
xchg
jle
cmp
or
loopne
mov
push
stos
mov
int3
hlt
cmp
daa
sbb
jne
adc
stc
flds
push
and
test
out
bound
fsts
xor
inc
aad
and
pop
or
sub
xchg
and
mov
xchg
in
js
push
cmc
push
jg
ljmp
xlat
pushf
neg
pop
push
push
pop
fcmovnu
sub
dec
jmp
cli
std
push
aaa
cmp
adc
sub
inc
dec
xor
test
dec
pop
daa
mov
mov
shrl
out
sbb
add
out
lea
aad
shll
cwtl
stc
push
clc
pop
mov
in
lret
aas
inc
ret
lods
out
out
cmp
es
pop
in
xchg
sub
loopne
push
jns,pn
add
mov
jo
adc
test
mulb
xchg
push
xchg
or
add
fmull
pop
pop
aas
jo
jg
xor
adc
mulb
repnz
faddl
jl
dec
and
int3
xchg
lods
push
jg
push
insl
pop
popa
xor
or
mov
pop
imul
add
pusha
shll
cmpsl
lods
test
sbb
call
mov
cmp
imul
adc
or
lock
mov
mov
jp
sbb
movsb
dec
scas
and
lret
mov
out
xchg
test
add
dec
pop
sbb
sbb
out
or
dec
insl
js
push
push
pop
mov
adc
into
and
xchg
mov
mov
xlat
lcall
fadd
pop
lahf
in
das
pop
aas
aas
ret
int3
repz
icebp
mov
add
jae
add
cmpsb
adc
out
sub
push
ret
sbb
dec
repnz
in
pop
mov
incb
jg
jecxz
jb
mov
out
mov
test
popf
das
jecxz
test
jb
xor
adc
pop
sahf
out
cli
jnp
and
mov
add
cmpsb
and
xchg
es
stc
movsl
ss
aad
imul
jmp
mov
jmp
lret
into
and
push
dec
popa
sarb
mov
adcl
clc
jbe
pusha
add
std
xor
pop
outsl
push
shlb
mov
mov
cmp
jnp
roll
add
ret
repnz
call
cmp
imul
cwtl
in
pop
mov
insl
movsl
mov
sbb
data16
repnz
xor
cmp
cmpsl
pop
cs
push
fs
or
enter
das
cmp
inc
push
sbb
sbbl
cli
loop
or
scas
into
pop
fistpl
stc
jb
outsl
in
xor
mov
std
xchg
mov
or
ror
inc
enter
push
cld
adc
pop
shll
jo
fnsave
or
pop
sti
rolb
xchg
adc
pushf
data16
jbe
fadd
sahf
xchg
jns
xchg
inc
shll
es
ss
test
cwtl
enter
ss
mov
xchg
inc
sub
pop
lcall
dec
and
jae
fwait
arpl
or
inc
pushf
mov
xor
xor
or
lock
cmp
ds
int
add
sbb
aad
push
test
xchg
mov
shll
xor
les
push
mov
mov
nop
jp
push
jbe
imul
dec
pop
loope
in
cmp
aam
jge
fs
mov
or
and
in
fisttpl
cmpsb
scas
imul
dec
push
mov
rolb
and
les
push
pop
adc
push
xor
repnz
mov
pop
xor
cmc
bound
jns
xchg
ljmp
insb
fwait
movsl
xchg
jp
sub
xor
sub
jnp
dec
cmp
into
xor
pop
pop
leave
scas
aaa
add
sbb
mov
dec
loopne
in
add
add
ljmp
fwait
and
adc
mov
lahf
imul
mov
cmp
std
add
push
out
jns
jmp
cmp
sbb
adc
dec
push
rcrb
js
test
cmp
push
hlt
mov
or
sahf
hlt
or
mov
push
clc
xor
push
icebp
pusha
bound
jge
jb
lcall
mov
hlt
fldt
fiadds
test
insb
fs
or
shrl
mov
mov
fisttpll
push
push
add
cs
fmull
aas
jmp
add
ret
xor
inc
mov
xchg
mov
inc
cmc
and
ljmp
add
lods
cmp
in
xchg
in
adc
mov
pop
fidivrs
cld
or
mov
fsub
ja
lahf
in
cli
push
push
mov
mov
dec
sbb
mov
int
jae
xor
lods
or
mov
jne
dec
dec
stos
in
add
bnd
ss
dec
movsl
adc
pusha
xchg
mulb
cmpb
push
mov
cmp
push
std
xlat
add
lcall
mov
dec
sub
sub
xchg
decl
sub
lods
mov
push
sub
xor
xchg
js
sbb
test
cli
das
imul
and
push
xchg
adc
fldpi
fisttpll
xor
test
test
and
testb
xor
push
push
call
cld
lahf
aas
ja
push
lret
lods
pop
gs
sahf
ret
loope
nop
sti
fsubl
cmp
inc
push
rcll
pop
loope
bound
sub
and
xchg
repz
pop
mov
fldenv
aaa
cli
int
jp
lahf
je
sub
pop
cld
int3
movsl
lret
lock
jo
stc
push
mov
adc
shl
pusha
testl
pop
push
into
pushf
cli
xor
mov
mov
mov
xlat
rolb
jge
add
repnz
sbb
mov
mov
adc
sub
jle
adc
ss
mov
div
inc
in
enter
push
and
xor
mov
cmp
mov
imul
std
adc
mov
mov
or
jb
out
xchg
mov
sarl
popa
dec
push
inc
js
adc
ds
cmp
imul
clc
movsl
repz
jo
fs
out
cmpb
jne
mov
aas
cld
mov
xchg
aas
stc
stos
dec
sbb
aad
xchg
into
sub
loope
inc
scas
cltd
in
sahf
out
jns
es
xor
push
lods
ficoms
mov
mov
je
insb
xor
cmpb
out
mov
stc
push
add
out
sarb
outsb
or
popf
adc
jae
xor
stos
jle
jecxz
sti
pusha
add
xor
lds
cmp
inc
addr16
mov
ljmp
shll
cmpsb
test
lcall
ja
mov
dec
pop
jmp
xor
sbb
mov
pusha
dec
mov
sbb
jne
xchg
fwait
cmp
stc
js
sub
aam
pop
gs
jae
addr16
xchg
push
orb
push
jno
insl
xchg
inc
mov
repz
lret
loopne
dec
sbb
inc
mov
dec
mov
jmp
ja
mov
and
add
das
mov
cmp
add
push
out
dec
fcoms
int
or
mov
xchg
shrl
xor
pop
mov
loope
mov
adc
sahf
setne
mov
pop
push
sarb
push
dec
dec
cmp
jo
fmuls
add
arpl
mov
mov
xor
stos
jecxz
pop
sbb
fcmovnbe
arpl
daa
push
scas
pop
xchg
xchg
in
popf
adc
lret
lret
push
and
pop
iret
imul
jns
jg
stc
jbe
dec
scas
clc
xchg
test
stc
cli
sahf
sahf
xchg
loop
adc
repnz
push
enter
xchg
inc
inc
adc
xchg
xchg
sub
jle
dec
push
mov
mov
les
ljmp
cmpb
cmp
xchg
mov
jl
or
jl
fisubs
aad
push
sbb
pop
aas
mov
fisubrl
scas
pop
dec
mov
jbe
mov
push
loopne
adc
pop
jle
mov
lods
pusha
sbb
mov
stc
mov
pop
addr16
repz
pop
test
rcll
xchg
mov
cltd
add
movsb
adc
jno
pop
lret
fwait
pop
imulb
cmc
xchg
shll
cmp
mov
sarl
insb
mov
jp
loope
or
xor
jge
xor
test
out
push
lods
sbb
dec
lret
dec
ss
sub
pop
xor
or
push
lcall
fbld
push
jmp
inc
jmp
fisttpl
das
std
mov
lock
mov
out
adc
imul
inc
dec
jb
sub
mov
cmpsb
xchg
les
subb
and
push
fcomps
xor
fstpl
lea
sbb
nop
outsl
and
and
add
cld
insb
pop
lods
inc
jo
hlt
push
pusha
sub
into
fldenv
push
jae
xor
sahf
insl
ret
jg
test
and
loop
incb
fdivr
sub
and
add
stos
jp
pop
inc
outsb
jb
aas
cs
xchg
out
cmp
inc
iret
push
dec
pop
jp
imul
xchg
cld
lds
rclb
lds
jo
stos
jmp
xor
movsl
sub
xor
mov
add
mov
mov
inc
in
int3
mov
mov
push
mov
std
std
add
pop
xchg
out
xchg
push
scas
rcl
push
loopne
cli
sub
lcall
leave
dec
cmp
arpl
fwait
jns
repz
mov
sub
inc
scas
mov
and
pop
pop
xchg
add
aas
xchg
aaa
push
inc
lea
mov
loop
gs
scas
pop
je
lods
mov
and
xchg
add
inc
mov
call
testl
push
mov
xchg
sbb
or
movsb
out
leave
pop
dec
jo
push
adc
enter
or
fcoml
lock
or
push
fildll
std
cmp
or
jecxz
lcall
lods
mov
stos
loope
xchg
mov
cld
mov
mov
push
jne
iret
aam
dec
adc
out
adc
dec
lcall
sar
idivb
andl
push
add
iret
push
not
daa
aad
in
iret
cmpsl
xor
dec
in
movsb
sbb
add
mov
mov
lock
mov
push
jo
push
mov
loopne
sbb
pop
int3
loopne
xorl
pop
mov
xchg
sbb
ja
cmpsb
adc
repnz
pop
gs
mov
aad
stc
pop
fisttps
or
inc
aad
mov
mov
test
and
aaa
mov
clc
add
jg
or
sub
jp
int3
jmp
or
add
xchg
into
or
jle
pusha
int3
loop
and
mov
rcrl
or
pop
inc
lahf
decb
mov
mov
inc
aad
mov
xor
loope
jnp
aad
cli
aas
sbb
jg
mov
and
fsubrl
cmp
rolb
fs
push
adc
jae
xor
sub
ljmp
in
sub
pop
cmpsb
rcr
ror
push
and
and
std
mov
mov
push
out
inc
mov
lods
push
sub
pushf
leave
inc
rolb
xchg
stc
jo
or
xor
lock
push
lds
pushf
jp
sahf
pop
jg
push
add
push
cmpsl
pop
movsb
enter
gs
andb
inc
and
pop
sub
data16
xor
mov
mov
mov
fcom
jmp
pop
pop
ds
jns
clc
cltd
rcrl
loop
xor
inc
movsl
pop
add
cs
jne
pop
sahf
sub
cmp
rcrl
icebp
psubusb
pop
pop
nop
mov
jp
adc
add
mov
cmp
ja
sub
add
popa
inc
inc
sahf
shll
test
adc
loopne
icebp
in
mov
pop
inc
test
xor
dec
test
daa
fs
add
lock
and
jl
sub
add
nop
push
dec
fisubrs
pop
int
dec
mov
pop
fnstcw
or
push
jmp
pushf
in
imul
mov
xor
stc
data16
mov
popf
mov
out
fisttpll
jns
mov
aad
and
xor
push
test
cltd
or
mov
or
add
sub
sbb
mov
mov
push
fnstsw
xor
scas
mov
lea
adc
or
dec
or
pop
ljmp
test
insl
jo
int3
inc
rol
and
push
xchg
es
push
xor
jae
lods
shll
popa
ss
stos
repz
mov
andl
dec
push
dec
sub
xor
sub
inc
mov
dec
test
int
lock
or
imul
dec
inc
repz
jp
and
xchg
gs
das
or
cld
dec
add
jl
icebp
mov
push
shr
jbe
xor
push
jbe
inc
push
out
imul
inc
out
xchg
xchg
dec
inc
cmp
rclb
cmp
xlat
shl
jle
xlat
add
jl
out
xor
sub
cs
inc
imul
arpl
push
lods
jle
add
adc
lahf
loop
cmp
movb
shll
sub
rdtsc
test
xor
mov
clc
xchg
lods
mov
popf
mov
pop
loope
lock
les
int
inc
ret
jb
push
cs
or
pushf
add
adc
cs
mov
out
cmpsl
mov
enter
sub
dec
dec
push
int3
fdivrs
sbb
cmc
xchg
int3
add
mov
jb
repz
sub
stos
jle
imul
jo
cmp
std
jg
je
adc
jle
fmull
fwait
sub
xor
push
lcall
jnp
mov
aad
ret
fld
and
shrb
sbb
idivb
jg
xor
fldt
cmc
xor
push
cmp
xchg
in
int3
push
fsts
add
pop
inc
loop
test
lock
test
sarl
and
orps
sub
ss
inc
std
scas
sub
lcall
jne
xchg
sti
mov
lods
divb
mov
pop
inc
lsl
adc
ficomps
andb
mulb
fwait
out
movsb
je,pt
sub
mov
xchg
push
mov
rolb
out
xchg
inc
pop
jns
pop
fs
int
lahf
fs
sbb
fisubrl
sub
push
ja
imul
repz
lahf
aam
inc
mov
loope
xchg
sub
sub
pop
int
cli
fcmovne
pushf
lret
loopne
imul
mov
inc
add
sub
sbb
pop
out
push
push
jle
stos
adc
in
clc
jecxz
jnp
and
cmp
ds
popa
gs
and
lods
jnp
fadds
and
push
rorl
mov
dec
jecxz
ja
add
jg
add
fisttps
sti
clc
test
imul
or
int3
cltd
pop
xchg
xor
icebp
dec
adc
adc
mov
std
xor
aaa
adc
mov
xor
xchg
bound
xchg
sbb
cmpsb
sub
lock
aaa
sahf
ljmp
mov
cld
and
in
xchg
dec
adcl
inc
inc
insl
cld
pop
adc
cmpsl
out
iret
add
lock
outsb
jae
push
inc
jne
jmp
sbb
mov
ds
add
dec
in
enter
stos
adc
aas
jl
cmp
bts
mov
push
mov
cmp
or
cmpsl
jns
int
xchg
movsb
std
js
mov
add
sahf
or
sub
sbb
xchg
dec
adc
pop
gs
dec
cmpsb
imul
out
arpl
xchg
mov
dec
push
and
cmp
push
mov
pop
repz
ja
push
scas
mov
andb
cmpsl
ret
icebp
in
das
xorl
loopne
sub
dec
in
pop
sub
mov
in
int3
jb
dec
shl
jl
dec
fwait
jmp
jo
xor
pop
sarb
sbbl
outsb
dec
movsb
lods
cmpsb
pop
insb
pmulhw
xor
pop
fisubrl
hlt
enter
xchg
aam
cmc
inc
filds
pop
jne
mov
icebp
cmp
outsl
add
or
xor
sub
cltd
mov
pop
xchg
dec
rolb
imul
add
mov
enter
cmc
loope
jle
js
adc
or
xor
add
cmp
mov
out
add
dec
loop
push
and
mov
test
mov
cltd
andnps
stc
cmc
mov
dec
fistpll
jle
lods
mov
decl
ja
sbb
fwait
stos
hlt
int
js
pop
mov
jle
je
mov
xchg
dec
aam
adc
or
cmp
test
sbb
mov
data16
imul
cli
icebp
jge
jnp
cmpsl
nop
sti
into
dec
je
mov
pushf
test
ljmp
bound
icebp
cmp
mov
cmpsb
or
shl
mov
add
jmp
and
xlat
mov
xor
fsubs
aad
push
addb
mov
mov
add
dec
mov
jge
sbb
mov
mov
out
inc
cmp
daa
lret
cmpsl
jne
push
aas
pusha
in
mul
add
xchg
cmpsl
mov
adc
pop
stos
imul
daa
das
and
pop
pushf
sahf
lret
into
cmp
gs
adcl
jno
call
enter
cmp
dec
sahf
lock
sbb
jmp
into
cmp
les
js
xchg
mov
or
lcall
pop
bound
cwtl
ds
mov
mov
xor
push
jb
fisubs
pop
and
data16
lock
cld
push
push
in
popf
stos
xor
leave
fsub
mov
sub
sbb
sub
push
jne
ljmp
addl
out
xlat
gs
sbb
lret
imul
pop
dec
jecxz
and
inc
ret
test
inc
insl
ja
hlt
psubsb
or
mov
xchg
inc
cmp
dec
std
testb
mov
icebp
push
stos
pop
mulb
mov
push
adc
loop
jmp
jo
fwait
lret
pop
lods
sub
hlt
and
push
adc
lds
popf
dec
pop
xchg
mov
pusha
notb
in
mov
cs
sbb
pusha
lcall
icebp
ljmp
jge
xor
dec
mov
ficomps
mov
mov
xchg
test
jbe
add
mov
adc
pop
xor
enter
mov
dec
or
sahf
sbb
inc
or
cld
cmp
movb
lea
ret
xor
adc
mov
icebp
mov
aaa
push
dec
int
int
lods
push
add
lods
in
adc
pop
xchg
test
mov
pcmpeqd
xchg
rcl
sti
ds
xlat
int3
mov
sub
jmp
leave
adc
fcmovnb
cmp
add
xchg
sub
and
mov
imul
xor
push
ret
xor
fwait
jp
cmpsb
aam
or
jb
push
shr
loopne
arpl
xor
enter
hlt
pop
loopne
push
sahf
ja
jb
sbb
cmpsb
pop
cltd
loope
jnp
scas
jno
inc
cmp
lret
jmp
push
fmul
lss
push
xchg
or
add
pop
xor
sbb
jg
hlt
xor
mov
bnd
jae
gs
icebp
stc
adc
mov
push
jo
xorb
inc
pop
mov
mov
ja
push
jbe
add
fcmovb
and
xlat
fisubs
shll
add
push
int
jb
ret
loop
inc
cwtl
jb
or
cmp
xchg
stc
dec
fisubrl
aaa
adc
orl
push
mov
xchg
inc
pop
mov
pop
xchg
dec
repnz
mov
mov
sub
jo
cmp
jg
scas
push
in
inc
std
mov
sbb
popa
outsl
movsl
mov
ret
push
dec
outsb
stc
testl
push
xor
cmpsb
inc
mov
inc
cltd
enter
inc
ljmp
cmp
nop
mov
sti
mov
and
pop
mov
mov
dec
repz
adc
pop
xchg
lea
popa
jle
addr16
mov
mov
popf
mov
mov
mov
dec
rcrb
push
popf
xchg
xor
xor
popa
out
sub
sub
aas
xor
add
mov
mov
cmp
and
sahf
loopne
add
mov
nop
sti
sbb
cli
inc
pop
in
xor
sbb
sub
stos
jne
sub
imul
int3
in
loop
insb
insl
xchg
jl
add
nop
or
popa
sub
mov
js
fcmovbe
adcb
mov
xor
and
xchg
xor
push
testb
mov
pop
cmp
subb
mov
cmp
dec
jnp
rclb
xchg
adc
or
les
loop
enter
push
push
or
in
cmpsb
cmp
dec
mov
fsubrp
neg
push
scas
xor
daa
xchg
mov
iret
int
cld
sbb
daa
lahf
jp
inc
inc
movsb
pop
and
lcall
mov
jle
rorb
mov
sti
push
adc
or
sbb
xor
mov
push
jb
fcmove
imull
in
in
push
push
inc
mov
dec
mov
js
jbe
inc
push
and
jecxz
add
push
dec
push
jecxz
cwtl
lds
jno
mov
shll
push
shl
lods
or
movsb
std
or
cmpsl
sbb
cmp
outsl
mov
call
pop
arpl
dec
cli
mov
fldcw
out
dec
lahf
jb
push
pop
pop
in
mov
lods
and
cmc
sub
subl
sub
mov
push
push
mov
lds
sahf
out
mov
mov
sahf
addr16
gs
sbb
xor
dec
enter
inc
xor
mov
xor
popf
aam
imul
or
pop
filds
bound
push
sbb
push
push
cmc
xchg
into
nop
sbb
bound
stos
lret
mov
fs
pushf
mov
pop
fwait
xorb
aaa
fidivs
cmp
mov
into
sbb
inc
xlat
add
pop
ja
in
pop
repnz
test
push
jecxz
lcall
and
cmp
sarl
stc
sub
mov
sub
shl
mov
jb
xchg
fildl
cmp
cmc
sbb
mov
aaa
adc
inc
jmp
jmp
xchg
mov
jns
sbbl
mov
xchg
adc
les
sub
iret
cmp
out
or
jp
icebp
cwtl
xchg
lds
sbbb
and
mov
mov
in
mov
mov
sahf
mov
test
jae
sub
stos
fildl
mov
faddl
notb
jo
into
cmp
xchg
imul
fs
lods
pushf
xorl
sahf
mov
icebp
insl
ret
mov
mov
pop
sub
aas
or
push
mov
cmp
fadds
jno
cmp
lcall
lods
push
lods
into
stos
test
mov
jae
js
sub
jnp
js
mov
inc
adc
push
fcompl
cld
mov
and
scas
mov
mov
ret
aam
xor
jne
dec
mov
or
xchg
loopne
pop
data16
pop
fcoms
sub
js
cmp
loopne
inc
sbb
subb
mov
jecxz
or
adc
loopne
xchg
fucomp
lea
cmp
xchg
inc
mov
gs
inc
sub
xor
fimuls
push
mov
push
lds
scas
sbb
mov
in
push
sub
sub
insl
ret
scas
cld
xchg
shlb
sbb
xor
adc
or
adc
mov
or
popa
inc
in
movsb
les
pop
push
stos
dec
xchg
push
stos
outsb
movsl
ds
rcrl
pop
mov
test
fs
clc
leave
sbb
sbbb
ret
insl
xchg
scas
jp
push
incb
hlt
push
sbb
cli
cli
xchg
mov
pop
jbe
push
xor
pushf
cs
sbb
push
pop
mov
inc
mov
lods
xchg
fsubp
jne
sahf
sub
test
xor
sub
cltd
and
fmull
or
aaa
sub
inc
mov
gs
mov
add
ret
push
out
cmp
push
mov
pop
inc
lods
sbb
ss
mov
jge
xor
icebp
es
icebp
add
repnz
faddl
adc
js
repz
sub
shlb
das
mov
lods
jg
pop
mov
sahf
movsb
sahf
mov
dec
xor
jp
out
jae
scas
test
xor
add
out
mov
mov
je
and
aad
test
push
add
inc
pop
push
sub
aaa
repz
or
data16
cmp
pop
jl
pop
clc
pop
cld
jns
push
inc
leave
ja
movsb
mov
dec
or
rcrl
rcl
hlt
call
loopne
in
imul
pusha
xchg
cli
cmpsb
xor
add
daa
jl
inc
movsb
xchg
rorb
rep
jne
xor
push
push
inc
mov
loop
push
push
mov
inc
jmp
fcmove
fldcw
cmp
ret
mov
lock
and
jb
ret
add
out
push
scas
cltd
push
inc
cmp
cmp
adc
mov
push
rcrb
movsb
movsl
cld
int
adc
clc
lret
fmull
jno
insb
push
fnsave
push
arpl
jne
jge
sbb
loopne
or
dec
lds
int
jg
data16
mov
mov
and
jecxz
adc
mov
xchg
or
aad
insb
xor
jo
pop
xlat
fldt
sub
xchg
js
jl
ja
stos
xor
stc
mov
dec
sub
pop
push
sbb
xchg
lods
ret
arpl
mov
inc
inc
stos
xchg
dec
and
inc
pop
inc
xchg
scas
fcoml
mov
in
test
and
idivb
mov
xchg
je
imull
std
mov
add
das
stos
mov
mov
leave
mov
push
add
jge
or
and
mov
pop
mov
out
adc
ss
cli
clc
adc
adc
push
push
xor
enter
dec
push
loopne
test
in
cmc
into
movsb
push
and
js
jp
fwait
pushw
mov
jne
mov
cltd
jmp
push
into
loope
ds
cmp
mov
popa
sub
icebp
sbb
dec
xlat
cmp
add
push
nop
pop
adc
pusha
dec
dec
testl
cmp
jmp
pop
xor
push
pop
stc
enter
lock
leave
push
fimull
sahf
iret
dec
xor
jne
sub
ret
leave
call
iret
out
pop
or
pop
je
and
pop
movsb
jae
mov
je
rolb
repnz
rcr
int3
lahf
mov
lods
cmp
or
mov
stos
outsl
lock
repz
push
or
mov
mov
jno
and
loopne
inc
fcompl
xchg
loope
lret
ss
pop
push
repz
stos
test
mov
inc
jp
inc
mov
mov
int
les
add
jge
rorb
sbb
cmpsb
movsl
and
call
out
test
lahf
push
scas
dec
outsb
mov
push
xor
hlt
andl
jmp
rolb
sub
xlat
dec
xchg
mov
pusha
push
cmc
aam
aam
add
popa
lods
jmp
fbstp
and
das
push
or
pushf
mov
adc
cmp
cmp
adc
div
pop
daa
pop
jns
daa
sbb
divl
xchg
sbb
ljmp
xlat
sbb
ret
cld
adc
inc
fisubrl
mov
add
mull
out
inc
sbb
or
or
out
add
insb
add
xchg
fsts
sub
in
mov
sbb
test
into
inc
test
es
and
inc
mov
pop
in
daa
outsb
aas
push
int
cmp
jecxz
loope
sbb
jnp
inc
pop
push
dec
test
test
dec
sahf
pop
jmp
out
fdivs
jnp
sub
les
ss
fcompl
ret
dec
fmuls
xchg
jbe
xlat
rorb
scas
xor
les
inc
xchg
iret
pop
and
and
pop
xlat
inc
add
sub
mov
nop
fisubl
xor
add
mov
dec
addb
imulb
enter
das
xor
sahf
test
cmpl
jp
int
sbb
or
sti
ret
ja
xlat
pop
test
hlt
cmp
fs
ja
leave
sbb
lahf
pop
dec
cmp
or
or
push
fists
xchg
les
xor
mov
add
adc
fadd
jbe
cmp
adcb
jb
pusha
cmp
mov
jl
ljmp
testb
mov
adc
sbb
rorb
das
add
xor
dec
fimuls
test
push
sub
push
or
mov
je
subb
xlat
jns
xchg
pusha
in
cmp
pop
mov
dec
iret
mov
lods
rcl
push
dec
add
sbb
clc
in
dec
clc
fiaddl
xchg
cld
pop
movsl
inc
push
pushf
orl
cmpsb
ja
sbb
pop
fldenv
shl
lock
mov
stos
mov
cmp
xchg
aad
and
adc
aaa
push
cld
loopne
dec
mov
jns
dec
scas
or
sbb
add
cmp
adc
mov
or
push
test
lock
pop
dec
testb
int3
jns
inc
movsb
dec
or
cmpsb
outsl
xchg
xlat
sub
push
inc
cmp
pop
cmpsb
pop
mov
cmpsb
adc
mov
pushf
xchg
cltd
mov
mov
aas
adc
and
enter
les
mov
add
cmp
jle
and
sub
dec
std
xchg
je
fistps
mov
add
mov
stos
out
outsl
loopne
mov
arpl
jg
aas
int3
fcmovbe
push
mov
andl
test
xlat
push
lcall
push
jl
lcall
mull
sub
mov
inc
sbb
rorb
les
mov
mov
xchg
out
mov
or
lret
loope
test
sub
sbb
fwait
xchg
repz
inc
out
push
jo
jae
int
mov
mov
negl
jle
in
mov
pop
push
xchg
inc
nop
push
enter
jl
push
xchg
rsm
dec
mov
ret
inc
cmp
mov
dec
int3
jbe
ret
mov
inc
push
call
test
cld
mov
push
scas
mov
test
mov
scas
adc
jecxz
push
iret
pop
pushf
xchg
mov
je
out
int3
in
adc
es
and
ss
pop
in
sbb
imul
xchg
nop
mov
pop
lods
jb
mov
adc
pushl
std
ljmp
fsubl
sbb
add
iret
stos
stc
sti
inc
sbb
gs
pop
lock
leave
inc
rorb
cwtl
nop
bound
add
inc
outsl
and
out
arpl
sarl
enter
cmp
xor
xchg
jno
fcmovnbe
inc
dec
push
daa
sbb
inc
add
insl
and
jns
xchg
and
and
or
mov
or
jp
sub
xchg
gs
xor
push
fbstp
xchg
mov
pop
xchg
dec
inc
ljmp
ds
mov
icebp
clc
mov
cmp
jp
outsb
sub
mov
mov
mov
test
in
and
mov
jge
repnz
adcb
push
pop
popf
jge
push
jecxz
pop
in
mov
xchg
add
icebp
andb
data16
xchg
iret
xor
sbb
ud1
mov
sbb
mov
push
lret
or
jmp
push
sbb
mov
int3
mov
add
rcrb
jbe
lods
xor
sub
push
and
xlat
loop
cs
jecxz
ja
pop
ret
sbb
mov
fs
daa
jno
and
repnz
xor
int3
cld
dec
leave
mov
punpcklwd
mov
xchg
fsubs
jge
sti
std
and
dec
xor
popa
mov
xor
push
or
push
shll
jb
in
je
sbb
push
pop
push
push
mov
inc
test
add
or
mov
adc
into
push
enter
pop
stos
xor
pop
mov
ficoms
test
filds
mov
and
pop
sub
mov
lock
adc
xor
stos
sub
jle
mov
mov
shrl
sbb
pop
adc
fwait
push
subl
push
push
push
pop
insl
sub
pop
iret
mov
xchg
mov
pop
mov
sbb
daa
cld
mov
rol
pop
jmp
mov
push
and
cmp
nop
iret
mov
and
fildl
adc
movsb
mov
popf
sub
sub
lcall
mov
mov
shll
or
gs
lock
pop
lods
inc
pop
sbb
jns
pusha
cld
outsb
pop
fadd
stc
data16
jmp
repnz
clc
mov
out
lods
out
wbinvd
adc
bound
in
pushf
dec
add
nop
ror
popa
sbbl
loop
lret
pushw
push
or
pop
sub
movsb
inc
bound
sbb
push
adc
add
xor
arpl
cmp
push
mov
inc
scas
addb
cltd
mov
push
xor
or
lods
repnz
ja
subb
add
fimull
sbb
sub
rolb
pop
sbb
aad
inc
shrl
push
cltd
dec
gs
loope
ficoms
sbb
lea
inc
pusha
jmp
rcrl
sub
jg
xor
dec
mov
or
fiadds
adc
stos
out
mov
mov
mov
dec
and
inc
or
test
adc
sbbb
enter
xchg
mov
nop
into
or
dec
mov
lds
pop
addr16
hlt
insl
inc
in
mov
loope
lcall
scas
cmp
mov
sbb
inc
aaa
sahf
popa
adc
mov
mov
jo
push
sub
movsb
xchg
lcall
xor
lret
scas
pop
or
ja
add
mov
push
jns
push
or
je
icebp
xchg
mov
arpl
mov
xchg
aad
add
push
xor
fwait
stc
mov
pop
inc
or
jne
mov
gs
inc
and
pop
cli
pop
jge
lcall
out
jb
xor
adc
insb
popf
fstps
outsb
push
inc
pop
inc
divl
mov
in
fcmovb
xor
lret
inc
imul
and
int
xor
nop
dec
lods
or
in
cmc
mull
push
cmp
div
cltd
cmc
pop
ja
mov
fwait
xchg
popa
xchg
jno
je
sub
push
in
cltd
popa
jo
pop
enter
jae
hlt
arpl
add
sbb
pop
stc
pop
add
dec
int3
xor
clc
jno
dec
mov
push
iret
inc
mov
adc
cmpsl
dec
xlat
call
jns
sub
jns
xchg
lods
push
adc
cwtl
jae
sub
mov
stos
add
clc
scas
mov
outsb
insb
adc
mov
in
cmp
test
pusha
cmp
pop
arpl
sub
xorb
int
shl
mov
ja
sarb
clc
neg
push
les
das
bound
dec
jle
mov
imul
shlb
push
and
fistl
inc
leave
add
sti
xchg
mov
pop
inc
ss
add
adcl
in
push
mov
push
pop
pop
add
in
cli
xchg
inc
iret
jmp
cmp
enter
and
xchg
jb
fmuls
popf
repz
lahf
push
pop
decb
pop
insl
sub
sbb
push
xchg
push
aad
lcall
jae
in
into
lods
ds
iret
push
mulb
nop
scas
jns
js
movsl
xor
jmp
xor
mov
imul
inc
popa
cld
cmp
xchg
and
push
stos
dec
data16
imul
rcrl
repnz
lret
das
aaa
fisubl
inc
scas
lahf
inc
scas
sub
inc
sti
add
es
mov
cmc
cld
stc
mov
test
sbb
imul
push
dec
aas
fwait
cmpsl
xchg
ljmp
ss
or
bound
push
in
mov
pop
sub
sti
mov
add
mov
mov
leave
jnp
mov
jb
popf
mov
add
hlt
and
jne
push
jmp
add
jbe
out
mov
cmp
enter
jmp
inc
fildll
arpl
xchg
out
jle
hlt
xchg
push
movsb
fldt
test
xor
sbb
cmp
aam
out
jge
cli
sbb
cltd
dec
hlt
sub
sub
fmul
fnstcw
or
mov
jb
push
add
and
das
inc
cmp
or
fdivrl
inc
xchg
adc
pop
cmc
ret
xor
cltd
mov
imul
dec
mov
addr16
out
icebp
iret
out
bound
push
stos
loopne
loop
popf
dec
cmpb
in
stos
jp
xchg
adc
xor
mov
rcr
lret
je
aam
or
loop
in
in
xchg
push
push
dec
lds
ljmp
mov
mov
push
inc
mov
mov
sbb
fcoml
shll
mov
dec
sahf
jge
out
imul
into
data16
adc
mov
cmp
pop
std
inc
sbb
mov
mov
dec
dec
mov
call
mov
and
jmp
mov
pop
xchg
sbb
cmp
repnz
gs
mov
mov
and
cmpsl
xorb
imul
ret
stos
xchg
jne
cmpsb
jg
sub
hlt
dec
nop
inc
sbb
xchg
sub
int3
push
in
loop
pop
orl
cld
xorb
jo
mov
dec
int3
jmp
test
outsb
pop
aad
sbb
imul
pop
mov
daa
popa
pop
adc
test
fistpll
fwait
dec
out
into
push
mov
jb
push
sbb
fidivl
jae
gs
mov
stc
daa
cld
mov
scas
mov
jmp
dec
xchg
add
test
gs
push
int
cmpsb
pusha
mov
jg
daa
cltd
dec
popa
popa
rcrl
lock
push
jg
mov
movsl
mov
cli
push
stos
pop
jbe
in
lods
call
jbe
pop
mov
pushl
ret
dec
cld
iret
xchg
push
aad
add
push
jns
jmp
push
fistpl
sbbb
sub
cmpsl
out
test
arpl
sbb
and
leave
in
rcrb
push
mov
sub
jno
xchg
mov
ja
outsb
in
pop
jne
cmp
mov
cmpsb
ss
mov
inc
insl
test
push
jmp
popf
dec
jmp
roll
push
xor
fidivs
scas
xor
pop
pushf
and
xor
loop
jle
gs
dec
adc
test
xor
jno
xor
sub
lahf
dec
outsl
in
stc
inc
rclb
push
sbb
or
repnz
mov
jo
xchg
daa
and
sub
jge
or
gs
icebp
jb
mov
cli
test
dec
sarb
sub
mov
inc
arpl
mov
int3
add
sbb
dec
cmp
pop
ja
xchg
xor
iret
call
and
subb
insl
cmpsb
xchg
and
sub
rcll
or
fsubp
cmp
mov
add
rolb
loope
or
lds
cmp
cmp
jns
lret
in
je
push
adc
popf
inc
idivb
mov
ja
jb
shll
sub
adc
cmp
imul
adc
push
int
xor
stos
out
sbb
sbb
jmp
push
push
sbb
adc
cmp
pop
xchg
jg
fnsave
pop
xor
sub
pop
pop
and
sbb
std
call
imulb
daa
leave
adc
gs
dec
pusha
add
xor
mov
add
popf
mov
fsubrs
xor
xchg
rorl
int3
aad
xor
and
es
fcoml
cmp
fs
jnp
fnstsw
leave
mov
nopl
mov
and
jae
inc
push
lcall
cli
in
in
xchg
pop
or
adc
sub
cmp
dec
push
pushf
xchg
shl
dec
into
adc
repnz
mov
pop
stc
sti
pop
sbb
or
push
xchg
das
mov
sti
jbe
mov
jecxz
repz
cmp
scas
fs
out
sbb
sbb
fimuls
aad
add
jmp
out
lret
movsb
insb
fcoms
mov
clc
pushl
and
fistl
popa
pop
mov
pop
add
fbld
dec
mov
testb
push
iret
fcomip
iret
arpl
ret
cmp
mov
sub
movsl
add
mov
inc
adc
loope
cmp
stc
and
test
inc
push
mov
inc
clc
mov
ds
testl
nop
and
pop
or
sbb
pop
jp
cmpb
out
lcall
and
sub
and
test
jae
add
xor
and
jb
adc
mov
dec
fnstsw
push
pop
ds
jno
pop
lock
inc
jmp
xchg
adc
out
push
aam
jbe
ror
pop
jle
mov
leave
movsb
push
inc
inc
aad
xor
arpl
sbbl
fnstenv
jle
cvtdq2ps
imul
mov
or
aaa
mov
orl
test
mov
call
cmp
push
jp
rcl
xlat
mov
fisubs
push
incl
cmpsl
iret
das
test
lods
outsl
ja
push
push
pusha
loopne
jp
inc
and
or
mov
and
pop
mov
and
ja
xor
addr16
pop
ja
out
das
int3
shlb
lds
fists
xchg
adc
int3
xor
aad
ljmp
mov
stc
mov
fdivl
ret
cmp
lret
addr16
stos
jnp
mov
push
scas
jmp
jle
cs
sbb
dec
subb
push
add
mov
mov
bound
mov
es
dec
pop
adc
or
push
push
sbb
jp
adc
fidivrl
jnp
mov
and
icebp
popa
mov
mov
mov
fcmovnbe
call
mul
dec
jecxz
mov
rcr
arpl
sahf
or
and
ficoml
mov
das
movaps
mov
ds
inc
pop
stos
xchg
mov
sti
ss
adc
popl
bound
or
sbb
add
in
jne
stc
inc
arpl
mov
cmpsb
sbb
inc
pop
dec
mov
mov
xor
jno
xor
mov
ds
in
fisubrl
mov
je
mov
cs
push
std
int
out
addr16
add
push
sbb
into
insb
sub
imul
dec
fmuls
or
sub
push
mov
pop
mov
xor
or
push
lds
pop
push
jno
cld
sbb
orl
add
pop
loopne
and
lcall
ret
jo
pop
fcoms
push
adc
sbb
in
leave
push
add
adc
es
mov
outsl
xor
jle
outsl
mov
divb
out
sub
dec
movsb
sub
pop
cltd
repnz
iret
cmpsl
pusha
leave
mov
dec
into
pextrw
gs
cmp
or
and
out
push
jno
ret
outsl
add
repnz
lcall
dec
outsl
aad
xor
repz
sub
fldl
adc
or
aaa
test
cmp
mov
mov
icebp
jb
and
jmp
jecxz
sahf
mov
add
mov
pop
pop
inc
loopne
test
push
imul
sub
pop
xor
repnz
push
ret
xchg
mov
cltd
cwtl
sub
sub
adc
mov
dec
out
lahf
fcmovnb
xlat
loope
jmp
mov
push
ss
sbb
mov
xchg
sbb
dec
or
call
jg
aaa
cmp
cmpsb
les
mov
popf
sbb
inc
pop
xchg
mov
sbb
inc
out
inc
adc
cmpsb
mov
mov
rorb
inc
roll
imul
test
or
pop
or
lcall
dec
jo
push
hlt
mov
imul
cmp
repz
scas
sub
lahf
push
dec
repnz
fcmovnbe
ja
add
xchg
stc
sbbl
test
out
dec
leave
leave
aas
flds
and
iret
push
sub
xor
into
cmpsl
adc
mov
jne
pop
out
mov
sbb
insl
dec
dec
cmp
jnp
add
inc
insb
mov
leave
pusha
subl
push
cld
and
push
adc
mov
pop
or
stos
out
xchg
shrl
cmpsb
push
mov
mov
xchg
mov
stos
jp
dec
ret
mov
jns
ljmp
or
aad
fmul
inc
orb
bnd
sbb
add
mov
adc
test
cmc
inc
cltd
int
add
mov
pusha
pop
adc
dec
sbb
sub
faddl
pop
pop
sbb
xor
mov
fcmovnbe
xchg
sbb
inc
ud2
sbb
jns
test
mov
ja
and
cltd
imull
dec
pop
and
fsts
icebp
repz
inc
ds
jg
jbe
pop
pop
fdivl
mov
daa
jo
push
jmp
inc
mov
cs
pop
dec
roll
loopne
bound
daa
sbb
xchg
push
fs
mov
sbb
push
cmp
sbb
xor
lock
icebp
fcomps
notb
adc
xchg
pop
push
jnp
mov
decl
inc
fmuls
mov
xchg
in
mov
jl
pop
jmp
int3
movsb
les
jno
repz
bound
xchg
je
xor
js
movsl
adc
sub
sbb
adc
hlt
out
cmp
mov
mov
sub
ss
popf
push
adc
in
pop
inc
xchg
loopne
adc
loopne
xor
call
sub
daa
xchg
cmp
out
mov
mov
popf
xor
shrb
loopne
hlt
movsl
iret
sub
xor
mov
lea
test
outsb
sub
test
jmp
push
fisubrs
adc
loope
popf
iret
pop
cli
pop
repnz
push
jnp
lret
jge
xchg
ficoms
lods
stos
insl
xor
es
mov
shll
jg
cmp
enter
or
aaa
adc
shll
jl
or
mov
xor
jne
jns
je
lcall
mov
pop
pushf
icebp
shl
inc
add
jmp
outsb
inc
cltd
jge
cmc
sub
inc
lcall
add
scas
stos
sbb
or
dec
add
xor
scas
dec
mov
scas
popl
imul
mov
sbb
adc
adc
lods
adc
int
pop
mov
sbb
ss
mov
and
cld
loopne
mov
dec
sub
ljmp
or
mov
mov
mov
leave
add
insb
cmp
es
jge
or
aam
xchg
out
mov
sub
aad
xchg
or
sahf
in
adcw
adc
idivb
mov
jp
lods
push
stos
dec
ror
leave
enter
jle
push
test
insb
xchg
mov
push
push
xor
sbb
aaa
fwait
pop
ret
ss
cmpsl
loop
cmp
push
pop
adc
sbb
icebp
adc
cmp
enter
shll
adc
push
lcall
push
and
gs
cld
faddl
push
repnz
push
daa
mulb
dec
outsl
sub
mov
cld
and
lock
xor
jge
jno
lret
jle
cmp
dec
bound
push
push
add
in
imul
dec
int3
push
in
and
xchg
inc
and
pop
imul
adc
hlt
cmc
lahf
adc
mov
push
inc
sbb
and
mov
aam
or
jnp
fwait
mov
loop
sub
mov
pop
stos
aaa
cmp
mov
or
push
call
std
cld
and
loope
shl
adc
push
jecxz
inc
add
add
les
aam
lods
test
push
fmull
xor
xchg
daa
scas
das
or
jp
inc
push
and
adc
testl
clc
aas
fsts
sub
arpl
mov
sbb
push
sub
ret
cli
jnp
and
loop
cmp
ret
jge
pop
mov
inc
cmp
mov
insl
lea
icebp
cmp
xchg
pop
fnstenv
out
popa
dec
push
andl
in
ja
sbb
push
pop
rcl
mov
mov
mov
mov
outsb
loop
pop
or
mov
sbb
xchg
insl
aaa
shll
push
pop
mov
decl
sahf
lods
cltd
cmpsl
pop
mov
hlt
ror
gs
or
push
sarl
test
repnz
insl
fchs
xor
int
cmp
sub
adc
fisubrl
or
inc
xchg
cmp
frstor
pop
iret
inc
ljmp
adc
pop
inc
jne
cmpsl
loop
lcall
packuswb
jbe
pop
daa
inc
xchg
mov
test
pop
leave
xchg
or
into
scas
rcr
pop
pop
pop
int3
inc
subb
ja
aad
dec
push
pop
mov
xchg
rolb
sbb
inc
aas
mov
or
rclb
rcr
dec
pop
jle
or
push
and
sbb
sub
test
pushaw
daa
adc
cmp
sub
int
adc
daa
out
sbb
dec
jmp
outsl
cvtdq2ps
xchg
push
dec
inc
mov
mov
dec
aam
daa
jg
pop
push
in
cmp
mov
leave
pop
sub
iret
daa
pop
and
mov
xchg
xlat
ret
or
cmp
imul
scas
shlb
xchg
mov
xor
in
ss
mov
cltd
mov
rolb
xchg
repnz
mov
add
lahf
and
inc
sub
aam
jl
or
mov
dec
js
cmpsb
out
outsb
flds
mov
gs
mov
pop
jns
int3
add
cmp
in
rorb
popa
add
add
js
ret
mov
xchg
or
test
xor
jns
add
cmp
push
xor
jge
insl
push
mov
enter
xchg
xchg
testl
pusha
popl
andb
pop
cmp
mov
mov
mov
std
lret
cmp
xor
mov
push
cli
call
test
dec
xor
int
out
pop
push
xor
shufps
xlat
cmp
lahf
mov
enter
mov
cwtl
mov
ljmp
cmp
cli
aas
add
js
mov
add
push
add
mov
lgs
mov
in
sub
mov
test
das
dec
jne
and
xor
jl
cmp
or
je
mov
fisubrl
lods
cmpsl
je
or
pusha
mov
scas
insl
fiadds
fucomp
out
fldl
push
and
sub
jnp
add
loopne
cmc
xchg
mov
hlt
orb
dec
clc
cli
push
stos
jp
or
cmp
push
or
loop
mov
int
inc
mov
add
movsl
jno
adc
mov
add
inc
jns
pop
dec
sbb
and
pushf
xlat
cwtl
or
mov
pop
stos
dec
pop
inc
xchg
fsts
mov
sbb
cmpl
ss
imul
pusha
cmpl
and
je
adc
jp
fstpt
push
mov
pop
je
cltd
xchg
out
sarl
cltd
sub
sub
in
scas
jmp
ret
and
pop
or
xchg
jbe
sub
jae
sbb
fwait
cmp
push
push
test
lcall
adc
inc
rcll
clc
rorl
jg
inc
repnz
push
lds
shl
fisubrl
loope
inc
out
inc
sbb
lods
cmp
adc
pop
dec
movsb
leave
hlt
xlat
decl
lock
fdivs
inc
sub
dec
xchg
jmp
loop
bound
mov
push
clc
lahf
in
adc
dec
jno
inc
shlb
fnstenv
xor
mov
adc
and
pop
xchg
into
jmp
dec
das
mov
add
pop
in
imul
xor
cmp
cmp
ret
mov
popl
dec
pop
pop
fbld
mov
bound
sarl
dec
dec
xchg
insb
jg
mov
testl
jl
insl
das
mov
cltd
lds
mov
mov
adc
subl
push
dec
les
mov
out
jp
into
xor
or
sbb
inc
cld
ja
inc
inc
adcl
icebp
add
xchg
lea
gs
or
dec
adc
inc
rorb
out
push
ret
xor
pop
or
jae
sbb
xor
pushaw
loop
fwait
xchg
loope
js
pop
adc
ljmp
push
jecxz
adc
mov
imul
jp
icebp
sbb
stos
jb
cmp
xchg
aam
mov
or
data16
or
jne
pop
fsubrp
or
dec
xor
lret
comiss
mov
cld
push
mov
push
xchg
scas
pop
dec
sarl
sti
fsubl
pop
xchg
or
outsl
ficompl
inc
int3
movsb
sbbb
arpl
xchg
popa
adc
cwtl
scas
jecxz
jae
mov
cmp
mov
and
mov
pop
push
call
dec
jecxz
mov
cmp
pop
mov
mov
sub
xchg
mov
add
rorl
jecxz
cltd
mov
jae
sbb
scas
cli
repz
dec
pop
dec
add
xor
cmp
je
loope
xchg
insl
sub
mov
fs
jl
cwtl
enter
mov
dec
xor
test
js
clc
or
jge
jbe
mov
arpl
pop
jne
push
out
ljmp
push
ss
aas
jb
rcl
in
out
gs
test
xchg
mov
mov
pop
sbb
into
daa
mov
int
outsb
cld
jl
ja
cltd
loope
mov
xchg
pop
cmp
loopne
incl
pop
enter
cld
add
flds
call
adc
sbb
sub
lock
xor
jo
and
xor
adc
pop
sub
addr16
adc
imul
call
imul
daa
inc
es
aaa
pop
jo
or
rcl
jecxz
test
mov
adc
test
in
cld
mov
loopne
jo
xchg
mov
xor
jp
movsl
out
xor
and
ret
cmp
or
loope
es
xor
adc
xchg
sahf
mov
or
pop
les
insb
idivl
ss
cmp
je
aas
cli
mov
dec
mov
jbe
xchg
inc
jp
add
lret
xchg
push
sbb
out
jo
mov
subl
mov
add
gs
inc
outsl
cmp
imul
ja
out
ret
and
inc
push
icebp
jne
jp
test
xchg
inc
jbe
les
xor
dec
add
jbe
je
into
inc
addr16
mov
mov
sbb
pop
push
ret
mov
sbb
inc
xlat
fcoms
xor
pop
push
test
incl
filds
cwtl
fistpll
mov
sub
testl
loope
sbb
push
outsb
fs
dec
data16
dec
dec
pop
sub
sahf
push
xlat
sub
ss
push
addr16
sarl
stos
sub
adc
xor
popa
repz
stos
idivb
xor
ja
jmp
mov
in
test
in
mov
popa
pop
test
aaa
jge
out
roll
kmovw
xor
mov
and
jecxz
ds
push
lret
mov
dec
mov
test
lahf
xchg
pop
loop
pop
out
lea
mov
fnstsw
lahf
mov
cli
jge
sbb
inc
jl
mov
inc
mov
je
cmp
pop
fidivs
addb
rorl
mov
lret
xor
add
mov
in
dec
jne
in
call
jp
add
js
and
push
dec
sbb
sub
lea
jbe
jbe
in
mov
xchg
bound
or
outsl
outsl
or
fucomip
jb
cmpsl
lret
xor
or
loopne
pusha
aad
es
jp
cmp
jmp
arpl
push
inc
dec
mov
insb
int
jae
sub
cmp
mov
jo
jo
in
jbe
adcl
ja
push
mov
movsb
fisubrl
mov
fildl
pop
pop
fdivrs
cmp
cmp
jae
ljmp
loopne
mov
insb
test
aas
sub
sub
je
mov
mov
fsubs
lret
ret
rcrl
shr
inc
dec
pusha
loopne
fsubr
push
stc
out
dec
scas
sub
mov
cs
sbb
fs
add
dec
aas
xlat
scas
push
sbb
xor
clc
aaa
add
adc
cmpl
subb
cmp
push
scas
cmp
loope
aas
sbb
lds
pop
and
or
imul
xor
jg
add
sbb
cmp
call
mov
loopne
inc
lahf
jl
pusha
fucomip
jns
in
cmp
jge
repz
mov
scas
int3
lods
repz
fsubrs
jb
fadd
out
stc
mov
and
pusha
inc
mov
mov
mov
xchg
mov
arpl
test
push
out
mov
sbb
sub
das
xchg
cmp
cmp
fmul
mov
dec
mov
cli
and
add
cltd
in
xchg
arpl
xor
insb
arpl
aad
sahf
mov
adc
stc
das
insl
loope
inc
divl
inc
mov
icebp
fs
loope
pushf
js,pt
aam
pop
fmuls
movsl
mov
lret
loope
aas
sbb
stos
mov
add
push
sub
jo
pusha
pop
xchg
cmp
or
clc
push
cmc
cmp
and
pop
fs
movsl
and
out
daa
cltd
insl
sbb
fwait
dec
push
mov
sahf
andl
in
jp
or
dec
loope
and
sbb
movsb
inc
cmpsl
xor
xchg
std
fsubl
sahf
add
sub
fwait
mov
xchg
fisubrl
jg
xchg
outsb
xor
xchg
xlat
inc
push
into
arpl
dec
jle
push
int3
mov
adc
insb
insl
push
add
jno
and
imul
dec
jmp
scas
cli
insl
sub
ror
or
jl
in
fsubl
ret
mov
clc
inc
sbb
jnp
dec
clc
jne
decb
scas
xor
cmpb
nop
inc
ja
lock
mov
jmp
daa
in
xchg
loope
mov
sbb
jns
loope
and
inc
and
adc
push
mov
aam
aad
jo
add
mov
push
and
or
push
dec
test
repnz
test
mov
xchg
cwtl
inc
ds
mov
push
ds
push
add
pop
test
repz
mov
fldcw
out
fiadds
inc
push
stc
pushf
movsb
cmp
push
iret
cmp
jmp
sbb
pop
and
adc
cli
sti
test
xlat
rorl
sub
aaa
aaa
hlt
cmp
test
sbb
jp
sbb
out
dec
mov
mov
and
leave
outsb
mov
cltd
sub
popf
dec
loope
imul
mov
pop
sub
mov
int3
enter
push
mov
push
gs
xchg
lahf
xlat
or
or
test
inc
sub
loop
fwait
xchg
jnp
sub
add
andl
push
dec
dec
add
insl
mov
push
addr16
push
inc
mov
fwait
dec
push
fidivrl
adc
das
pop
and
pop
lahf
inc
popf
fildl
mov
cmp
xor
stos
nop
fidivrl
mov
and
sub
push
mov
pop
dec
pop
insb
fiaddl
dec
or
and
les
adc
shr
fcoms
jmp
das
and
testl
imul
insb
sub
jne
jbe
popf
pop
aam
and
xchg
orl
pop
out
sbb
lock
mov
or
mov
jge
xor
out
shrl
push
mov
and
das
clc
lods
icebp
cmp
fdiv
push
and
arpl
add
or
es
cwtl
outsb
push
out
call
je
mov
mov
push
mov
push
fsts
sub
cmp
ds
and
inc
mov
lea
int3
mov
xor
sub
or
rcrb
repnz
aas
aam
mov
sub
popa
lret
loope
xor
addr16
jecxz
inc
movsb
xchg
sub
jp
mov
push
loop,pt
js
mov
shld
scas
fcmovu
mov
daa
movsb
pop
movsb
inc
xor
gs
clc
mov
scas
jl
imul
jae
cltd
pusha
lcall
pop
jecxz
and
outsb
inc
sub
ret
mov
icebp
jg
movsb
adc
mull
xchg
lock
xor
imul
ror
orl
xor
push
dec
sub
mov
fidivrl
or
xor
pop
imul
mov
fwait
or
int
test
xchg
arpl
pop
jbe
jg
mov
shr
ja
xor
pusha
lock
jg
dec
mov
xor
pushf
testl
bnd
jg
push
sub
aad
test
fs
push
xor
push
ret
and
or
pop
dec
jmp
das
dec
pop
adc
out
pop
push
mov
sti
xor
ljmp
sti
sbb
push
push
push
hlt
sub
push
in
aaa
loope
ja
pop
sub
jg
popf
divl
imul
aaa
in
int
push
sbb
rcrb
adc
shlb
add
in
test
int
addl
dec
mov
repnz
lods
addps
cld
sub
shlb
jae
aad
hlt
mov
shl
sarl
sub
test
push
pusha
xor
add
xchg
jb
imul
lahf
frstor
inc
inc
loope
mov
andb
sub
inc
mov
cmp
pop
jle
pop
mov
jmp
sahf
mov
push
ss
push
dec
fsubrs
in
mov
xchg
sti
sbb
lods
adc
xor
sub
dec
int3
add
aaa
lcall
shl
in
push
mov
jno
cmp
addl
sar
sbb
in
cmp
mov
pushf
jne
clc
lds
stc
mov
mov
inc
repnz
aaa
xor
xor
dec
sti
pop
xchg
push
nop
push
outsl
mov
and
xchg
movsb
lds
or
stos
stc
sbb
les
lods
mov
insb
aam
sub
icebp
iret
and
or
xchg
imul
inc
pop
js
inc
insb
test
adc
mov
adc
pop
ret
dec
push
mov
pop
outsb
sarb
jae
or
jne
fldl
xchg
add
push
bsf
cld
scas
aaa
mov
xchg
cmpl
shlb
jmp
mov
adc
test
pop
mov
cmc
jecxz
mov
pusha
test
in
insb
outsb
mov
xchg
mov
xchg
repz
sbb
and
roll
divb
cmp
imull
jns
aad
or
dec
xchg
in
out
add
pop
inc
push
loopne
leave
cmpsl
or
fcomp
clc
lahf
adc
mov
xchg
enter
push
in
test
xchg
popl
sub
fadd
xchg
orl
cwtl
aas
frstor
xor
mov
mov
pop
sbb
dec
dec
mov
sub
mov
ss
xchg
sbb
ret
iret
push
mov
push
pop
cli
lea
adc
dec
cmp
push
dec
add
enter
and
xor
nop
sarl
inc
lret
stos
pop
mov
jecxz
dec
jmp
imul
jmp
pop
scas
jp
aam
sahf
sub
add
and
mov
in
pop
cwtl
mov
push
divb
inc
fcmovu
shll
popa
sti
xor
shr
movsl
mov
cmp
movsl
xor
lods
push
sub
sub
sub
lret
push
rolb
cltd
call
dec
push
xchg
lods
xchg
fstps
daa
mov
out
add
test
or
movsb
or
in
dec
inc
in
mov
hlt
cltd
and
sahf
cs
mov
loope
inc
mov
jmp
aaa
jno
mov
sub
jge
dec
loope
xor
fpatan
and
xchg
fst
pushf
pop
sbb
shll
addr16
push
inc
xchg
pop
jb
aaa
je
inc
push
addb
add
pop
shl
push
mov
push
sbb
std
xchg
fldt
in
sbb
test
sahf
movsl
mov
sbb
pop
jmp
push
dec
int
mov
xchg
jns
testb
into
ret
stc
int3
js
mov
mov
and
mov
frstor
pop
fdivrp
fldt
shlb
mov
clc
add
xchg
inc
cmp
cli
mov
mov
mov
adc
push
inc
popf
and
adc
in
xchg
pop
clc
xor
sub
sub
xor
lds
adc
ror
sub
xchg
mov
adc
push
mov
cmp
test
mov
lcall
mov
hlt
shlb
lock
mov
nop
sbb
in
clc
addr16
dec
inc
xlat
adc
sahf
cs
repz
sbb
and
sbb
es
cli
repnz
push
xor
inc
testl
mov
jge,pt
mov
xor
gs
dec
dec
sti
xchg
and
dec
xor
js
mov
mov
sbb
and
clc
test
lods
mov
push
mov
in
fs
sbb
mov
loope
call
outsb
insl
data16
gs
sub
pop
es
and
fsubr
xchg
dec
fisttpl
push
adc
add
mov
in
mov
mov
push
rcrb
push
pop
sub
sub
jnp
nop
inc
push
lds
ss
mov
jecxz
int3
mov
inc
or
jo
in
cmpsl
xchg
nop
adc
ds
movsl
in
roll
inc
sub
mov
leave
pop
lret
mov
ds
push
push
out
push
mov
inc
mov
sbb
loop
pop
mov
mov
pop
shl
mov
add
mov
test
xchg
nop
push
stc
mov
push
lret
jg
mov
mov
sar
jae
imull
xchg
and
pop
dec
sahf
push
pop
push
mov
and
icebp
lods
jnp
fsubl
add
mov
cmc
add
bound
ficompl
add
hlt
sbb
add
adc
xchg
sub
mov
push
seta
add
adc
dec
mov
mov
inc
mov
xchg
rcrl
push
mov
dec
outsb
test
add
add
les
cwtl
sbb
stos
popa
mov
int
xor
leave
cmpl
cmp
lods
pop
push
fcom
inc
jnp
inc
clc
orl
inc
cmc
pop
sub
inc
ljmp
xor
stos
pusha
cmp
sbb
rcrb
xchg
roll
movsb
mov
mov
or
popa
jl
add
lahf
cmpsl
push
xorb
cwtl
popa
out
add
test
movsl
push
cmpsl
inc
pop
ficomps
xlat
bound
push
sub
cmp
push
or
call
nop
bound
mov
aam
in
push
pop
outsl
scas
dec
fs
inc
add
ror
mov
mov
pop
add
and
cmpb
mov
js
aam
sbb
mov
dec
jns
cmc
shl
out
pop
fs
inc
test
ret
xchg
outsb
cmp
xor
mov
xchg
push
push
sbb
stos
jno
adc
lret
jp
stos
sub
add
xchg
ret
adcl
or
mov
imul
mov
xchg
insb
adc
movsb
lahf
mov
xchg
adc
popa
testl
and
cmpsb
cmp
shll
sub
mov
jb
inc
cmp
jne
fdivr
daa
in
pop
add
push
jl
pop
jl
cmpsb
sbb
sbb
sub
lahf
fwait
cmpsl
jno
dec
rorl
insb
into
inc
repnz
sti
enter
lret
push
mov
xlat
adc
loop
cmp
lea
pop
and
cmp
leave
notl
faddl
inc
mov
popf
std
push
jle
mov
inc
or
imull
mov
jecxz
insb
cld
or
or
fadds
mov
xchg
test
rcr
fidivrs
jp
nop
lods
xor
test
sub
push
bswap
arpl
jae
repz
jge
loope
pop
xor
sbb
mov
addr16
xor
jbe
cmp
icebp
jle
cs
fisubrl
jp
ja
sahf
sub
call
in
stos
nop
sbb
sahf
xchg
mov
cmpsb
adc
mov
or
sbb
jno
mov
dec
pushf
repnz
push
sbb
mov
pop
jecxz
aad
cmc
cs
daa
xchg
push
mov
xchg
daa
and
xor
dec
outsb
or
in
lret
jl
jae
lods
mov
negl
push
add
aas
outsl
cli
add
jae
push
adc
pop
stos
mov
push
lcall
push
cmpsl
popa
cs
mov
in
divb
mov
lods
pop
mov
mov
daa
xchg
push
lahf
cld
xchg
and
sahf
push
cmpsl
sbb
dec
cltd
and
stc
mov
jg
add
mov
int3
iret
gs
add
sahf
inc
dec
xor
pop
add
mov
test
push
mov
test
stos
pushf
push
movsb
xor
inc
pop
dec
xchg
sbb
jp
cmc
or
test
aas
lock
leave
add
fstpl
shr
les
jmp
inc
movsl
sub
je
clc
xor
push
mov
out
lret
push
lea
jl
fisubs
sub
js
icebp
xor
or
sarb
jge
fistl
idivb
cwtl
cs
add
aam
gs
ret
out
jl
mov
xchg
jg
orb
push
xor
ret
lcall
ds
jl
jo
cmp
pop
out
add
movsl
testb
dec
add
test
leave
mov
rcrl
cmc
repz
test
dec
loope
or
xchg
jno
or
xchg
pop
pop
das
mov
or
rcrl
dec
in
ficoms
add
addb
in
aam
jae
xor
fwait
bswap
fwait
push
dec
cld
xchg
in
jne
inc
notrack
pop
imul
cld
cmp
repz
mov
in
enter
mov
rcr
negl
cmpsl
cwtl
and
jo
insl
pop
stc
mov
add
test
outsb
movsl
xchg
fmull
adc
cmc
dec
xchg
and
xchg
jle
xor
sbb
shlb
stos
xor
aad
popa
jp
clc
push
sbb
cli
sbb
es
insl
mov
push
jno
out
mov
scas
mov
repz
xchg
inc
cmpsb
lock
fistps
sub
dec
and
fstpt
mov
aad
and
push
pushl
pop
mov
or
test
dec
adc
jp
push
fs
cli
push
mov
out
mov
dec
adc
scas
push
pushl
lock
pop
cmp
dec
mov
pop
test
sub
add
add
add
jge
shlb
pushf
push
jbe
in
mov
adc
pop
mov
xchg
mov
sahf
out
inc
pop
mov
inc
pushf
lods
mov
cmc
dec
dec
sar
loope
xchg
cmp
mov
outsb
jg
jl
in
stos
popa
jae
fiaddl
jmp
xor
call
cmp
gs
adcl
push
pusha
imul
jo
cmp
fwait
sbb
daa
and
xchg
lret
sub
repz
decl
call
and
mov
shrl
lods
cwtl
and
jge
sti
push
ljmp
filds
dec
movhps
sbb
push
sbb
adc
shlb
mov
sub
notl
or
or
lods
jge
repnz
stc
sub
push
push
mov
or
outsl
pop
xor
aam
mov
pop
subl
enter
cltd
adc
mov
pop
cltd
out
inc
push
add
mov
mov
cmp
inc
int3
ljmp
jl
sub
fldcw
leave
aam
cmpsb
mov
inc
sbb
shll
out
sub
fdivrs
or
jecxz
lcall
aad
dec
push
mov
xchg
pop
xchg
or
jns
dec
xchg
adc
dec
arpl
aam
sahf
lods
dec
adc
pop
cmp
or
scas
cld
push
popa
push
or
es
jnp
cli
mov
rcr
clc
xor
addr16
lods
jmp
rcrl
into
inc
pop
pop
mov
add
jnp
fs
xor
push
fidivrl
fdivl
rorb
sarb
gs
mov
js
aad
inc
lret
and
aas
jbe
xchg
cmp
or
or
xchg
push
in
aam
pop
dec
mov
pusha
cmp
add
enter
js
mov
pop
cmp
add
pop
aaa
inc
mov
add
out
cltd
ljmp
aam
jl
jg
xchg
pop
jmp
add
mov
leave
adc
repz
jle
xchg
aaa
mov
mov
cmc
adc
inc
imull
jmp
sti
jne
jnp
inc
ja
jae
sbb
test
xchg
gs
call
or
popa
aad
xchg
cmp
xor
out
es
inc
out
dec
cmp
repnz
in
jno
mov
or
cmpl
push
mov
jb
mov
hlt
in
xchg
push
mov
mov
loopne
ret
jae
repz
mov
and
adc
popf
adc
fwait
inc
out
pop
mov
pop
and
js
pop
push
push
cltd
push
rolb
and
fisubl
mov
insb
test
and
mov
sub
fstps
xor
lea
jne
insl
popf
mov
stos
notl
add
sti
add
xor
sub
sbb
and
and
test
stc
cmpsb
mov
ret
int3
stos
mov
adc
int
sti
repnz
test
push
popf
xlat
rolb
sarl
lds
xor
push
xchg
sub
rcrb
jb
dec
push
pop
aas
adc
pushf
mov
in
inc
xchg
jbe
js
mov
popf
push
dec
stc
out
cmp
inc
leave
push
rclb
mov
paddb
movb
mov
jne
add
jo
xor
adc
xor
pop
push
xchg
adc
inc
insl
out
fbstp
pusha
inc
and
xchg
sbb
push
push
cmp
push
in
insb
mov
insl
inc
fidivrl
mov
std
pop
inc
mov
add
mov
inc
lcall
xor
or
call
push
lcall
lret
insl
adc
test
mov
sub
mov
push
nop
fists
sbb
dec
jl
pop
add
inc
ja
cmp
or
mov
push
adc
mov
jo
inc
rclb
lds
jne
sub
jne
ss
sub
out
xor
test
dec
jae
jl
mov
adc
out
pop
push
aad
fbld
push
rorl
dec
cmp
mov
xchg
mov
mov
loope
jge
cmp
add
adc
movsl
sbb
cs
aam
ret
nop
sub
push
push
mov
add
mov
xor
sahf
movsb
not
cmp
jle
sbbb
ljmp
int3
inc
popa
push
test
dec
mov
notb
mov
mov
mov
and
xor
pop
aaa
pop
add
rcll
dec
aas
jo
mov
inc
push
sub
pop
out
sarl
inc
repnz
mov
xchg
add
ds
add
bound
mov
sbb
or
pushf
pop
sub
xchg
bsr
add
mov
andl
adc
jb
push
push
inc
cmpsl
loope
pushf
aam
mov
bound
les
push
enter
pushf
into
cwtl
stos
clc
outsb
add
dec
sahf
aas
jno
xchg
and
scas
jmp
mov
std
roll
mov
pop
movsb
inc
mov
sbb
clc
jo
cli
mov
mov
sub
fcmovne
jno
ja
repnz
ret
lods
in
dec
les
push
out
sub
xchg
mov
cmp
aad
pop
adc
in
loopne
les
pop
js
out
mov
mov
xlat
gs
pop
ficoms
xor
inc
mov
in
fstp
dec
dec
push
lods
dec
mov
gs
scas
lret
test
xor
inc
movntq
hlt
inc
es
cmc
sbb
movsb
push
mov
inc
sbb
pop
jbe
lea
dec
aad
pop
test
fistps
lods
or
sbb
push
and
cmp
xor
popl
cs
xchg
jmp
lret
lahf
sbb
in
pop
push
in
mull
cli
movsb
jle
shr
xchg
es
jns,pt
add
out
loope
loopne
add
aam
out
dec
rclb
cmp
out
insb
pushf
xchg
cmp
scas
or
mov
xchg
fidivs
push
fwait
xchg
test
xchg
incl
jns
add
lds
lret
in
dec
test
fdivrs
xor
stc
pushf
jecxz
xor
lahf
in
push
pop
loopne
and
out
jae
out
adc
lods
es
adc
popf
add
inc
adc
dec
in
inc
insb
test
pop
loop
pop
sbb
push
leave
sbb
dec
push
jmp
fdivl
and
pandn
cs
inc
mov
int
loope
sahf
hlt
test
push
xchg
push
fwait
in
xor
pop
xchg
pusha
lcall
loop
dec
ja
cmp
out
pushf
les
xorl
cltd
out
arpl
cmp
test
std
ret
mov
sarl
push
sub
adc
and
outsb
pop
out
lret
jecxz
jge
ficoms
pusha
cltd
pop
imul
xchg
mov
add
xchg
mov
mull
lahf
test
inc
ret
mov
xchg
jecxz
add
cmp
mov
stos
mov
ret
push
cmp
fs
xchg
cltd
loopne
cmp
mov
lret
aad
loope
cmpl
add
add
repnz
cmp
pop
adc
dec
cmp
loopne
xchg
cld
fstpt
pusha
xchg
xor
push
sbbb
call
test
mov
xchg
sbb
out
dec
movsb
cmpsl
gs
roll
add
bswap
xchg
and
jg
cld
rcrl
push
mov
pop
hlt
out
mov
mov
popa
pop
xchg
adc
sub
clc
data16
sbb
mov
sbb
out
popf
imul
pop
clc
dec
mov
jne
push
dec
jl
scas
lds
or
cld
xchg
cs
aas
cmp
dec
inc
jge
pop
jae
mov
mov
push
mov
or
mov
adc
mov
mov
pop
sbb
mov
scas
inc
dec
sub
sbb
mov
inc
and
adc
xor
call
jnp
and
sbb
outsl
in
loop
out
inc
inc
mov
push
orl
stos
jns
mov
je
mov
popa
pop
xchg
xlat
dec
mov
loope
jecxz
mov
shrb
mov
mov
in
cmp
fistpll
mov
mov
inc
push
push
ret
insl
sbb
das
inc
int3
out
out
xchg
test
fidivs
out
in
add
lock
cli
push
adc
mov
xchg
stos
push
xchg
out
leave
sbb
sbb
into
int
push
cs
jmp
daa
mov
jg
cmp
sub
inc
push
inc
pop
imul
inc
xlat
sub
adc
mov
lods
adc
push
push
sub
mov
adc
clc
sub
mov
pop
shll
ffreep
hlt
mov
jnp
ds
mov
push
daa
sbb
rcl
aaa
pop
dec
in
mov
jbe
xchg
mov
out
adc
jbe
xchg
ret
dec
imul
mov
enter
test
xor
xchg
dec
xchg
testb
push
movsl
adc
insb
outsl
out
movsl
clc
dec
arpl
das
frstor
jae
add
pop
inc
inc
enter
mov
mov
or
jnp
sahf
repnz
enter
and
loop
aaa
aas
mov
push
cli
cltd
loope
jge
lock
push
cmp
mov
je
inc
lret
mov
xchg
push
sub
test
out
ret
pop
and
jns
sbb
or
fcmovnu
ret
test
scas
mov
push
or
loopne
lret
cmp
std
repz
sbb
cmp
xor
dec
and
pop
stos
mov
dec
in
pop
aaa
addr16
sbb
adc
pop
les
push
mov
lcall
push
jns
sub
nop
pop
sub
pop
popf
jecxz
sbb
xor
cmp
xor
and
dec
ljmp
iret
xor
cmp
les
inc
adc
in
sahf
push
and
nop
xchg
jne
pop
and
push
add
xchg
xor
test
cs
pop
push
adc
pop
jmp
mov
sbb
imul
mov
jge
jmp
aas
adc
je
mov
fsub
test
jns
js
movsl
les
mov
mov
and
out
jne
loope
and
sbb
mov
inc
xchg
movsl
xchg
sbb
push
iret
fists
loope
mov
sbb
add
outsl
clc
mov
push
gs
and
loope
xor
es
push
stos
jo
and
sbb
mov
sub
inc
gs
pop
and
inc
fimuls
jecxz
popa
in
push
pop
mov
inc
shrl
lea
lods
jle
test
stos
dec
sbb
cwtl
xchg
test
adc
dec
cld
and
sbb
insb
mov
popf
mulb
fiadds
inc
cltd
shr
xor
sub
push
push
clc
es
inc
fiadds
sti
call
inc
and
push
add
pop
or
push
int
sahf
cli
repz
or
pushf
lret
jmp
and
mov
inc
dec
jle
or
mov
push
sub
out
inc
daa
in
scas
cmp
push
pop
in
and
aam
scas
cwtl
push
scas
push
imul
cmp
cmp
or
adc
test
push
inc
ja
fcompl
jl
mov
mov
add
add
testb
imul
jb
fstpt
mov
das
bound
aam
inc
cs
mov
xor
movsb
icebp
imul
push
jg
mulb
imul
shlb
and
fs
das
xor
pop
loopne
xor
cmpsl
adc
jmp
sub
pop
decb
mov
xorl
mov
stc
pop
pop
and
leave
aam
push
gs
in
cmpsl
cmp
ret
jp
mov
cmpb
mov
rcl
push
data16
jo
rorl
pop
aam
lahf
mov
insb
add
or
ret
pop
ja
xchg
outsl
jns
dec
pop
aas
arpl
out
clc
arpl
gs
mov
fld
push
xor
mov
out
add
mov
ja
fadd
lret
cli
aas
ficoms
fcoms
imul
mov
lcall
push
jb
or
mov
pop
xchg
das
cld
mov
dec
addl
jl
outsl
ds
aaa
lds
dec
mov
dec
rcll
sbb
imul
lahf
jns
xchg
cmp
mov
sub
sub
cmp
rclb
jns
or
or
or
lcall
test
and
jno
sub
cmpsl
add
jnp
mov
pop
or
sub
pop
or
push
sub
sub
cmc
insb
xchg
push
pop
sti
ret
fcom
incl
and
iret
mov
cmpsb
inc
into
push
movsl
xor
orb
xchg
jle
std
jg
pop
sbb
popa
push
dec
or
nop
lahf
mov
jbe
loopne
je
xchg
inc
inc
or
and
sbb
sub
enter
adc
adc
test
xchg
test
mov
xor
dec
xor
xchg
test
jo
push
xchg
sbb
mov
in
mov
addr16
popa
test
adc
into
ficomps
push
rcrl
aas
or
scas
or
insl
mov
lods
test
dec
repz
fwait
mov
imul
lahf
or
jns
lea
xor
into
inc
cli
sbb
jmp
jg
mov
test
idiv
xor
cmpsb
insb
nop
cmp
cmp
xchg
mov
add
testb
dec
pop
push
or
push
pop
mov
scas
adc
push
jge
jmp
sub
mov
and
cmpsb
ja
andb
or
push
mov
adc
push
stos
mov
aad
sbb
sbb
stos
adc
mov
lock
jbe
mov
aaa
rclb
mov
lahf
push
idivb
jmp
or
push
push
add
lret
xor
mov
cs
stc
insb
lcall
lds
adc
les
into
sbb
mov
xor
ret
push
leave
and
inc
mov
fwait
test
or
xchg
xchg
dec
inc
xchg
jmp
js
cltd
ljmp
dec
rorb
sub
shl
fildll
xor
ja
xchg
rorb
inc
push
pushf
int3
stc
imul
jp
loop
fwait
rcrl
inc
movsl
nop
lods
dec
sbb
pop
push
push
mov
pusha
cltd
dec
sub
cmp
cli
xchg
test
mov
lahf
cmc
cmp
fwait
mov
imul
outsb
xor
push
jp
pop
jl
jae
fidivs
cmp
pop
lods
jecxz
and
inc
or
das
iret
fwait
popf
dec
or
add
pop
loop
xchg
mov
pop
push
dec
js
test
or
sbb
jle
mov
ret
pop
dec
popa
fsubl
cs
hlt
rcl
jae
and
iret
pop
mov
pcmpeqw
pushf
jbe
lods
shrl
mov
xor
mov
scas
outsb
stc
std
loopne
sub
adc
dec
mov
push
xchg
adc
outsl
iret
test
call
mov
xor
mov
inc
std
cmpsl
jns
leave
inc
sub
cmp
ss
insb
subl
outsl
lcall
pop
and
int3
cli
mov
cmp
sub
push
or
push
hlt
push
out
mov
adc
mov
dec
outsl
jp
add
cwtl
stc
mov
pop
mov
int3
aad
icebp
or
shl
int
sbb
xchg
and
dec
dec
mov
pop
add
repz
push
fdivr
sub
popa
cld
jl
inc
loope
fisttps
icebp
add
add
add
push
jb
popf
cwtl
jne
lock
sub
mov
mov
andb
nop
add
add
dec
jae
push
addl
ret
inc
jl
mov
pop
mov
div
mov
lock
je
ret
mov
orl
les
lock
adcb
aaa
scas
in
inc
orb
jecxz
loopne
or
mov
mov
xor
ss
mov
cmp
sbb
fimuls
or
bound
dec
adc
imul
sbb
sub
mov
push
pcmpgtw
testl
adc
lea
pmulhuw
mov
xchg
xchg
or
xchg
insb
mov
fstpl
add
rclb
cmp
mov
push
popf
and
and
cld
jge
in
jb
add
scas
test
mov
jno
cwtl
add
call
idivb
test
adc
repz
dec
pop
aam
aaa
xor
add
mov
gs
ljmp
fstps
es
stos
and
subl
lods
mov
imul
hlt
sbb
lods
pop
xor
sbbl
push
adc
pop
xor
test
mov
into
add
mov
push
das
dec
adc
ljmp
ret
lods
sub
push
loopne
adc
xchg
out
icebp
dec
in
mov
dec
pop
add
rorb
push
add
jg
arpl
cmpsl
add
sbb
mov
rcrb
sub
daa
pop
push
jg
ret
or
push
sbb
mov
inc
add
leave
dec
mov
lods
xorb
aas
clc
lret
inc
js
out
ja
cmp
mov
fcom
jns
ljmp
in
sbb
xor
mov
mov
sub
push
fists
pop
add
add
and
inc
orl
arpl
push
adc
outsl
fwait
sub
push
ret
mov
or
mov
scas
mov
ds
dec
aas
lds
sub
test
cmpsb
push
enter
mov
xchg
inc
cmp
jo
pop
mov
aaa
mov
in
dec
mov
orb
adc
push
jle
cli
int
and
mov
sar
jae
sbb
mov
and
cmpsl
jns
jnp
or
jnp
test
sti
cmp
cmp
pop
das
pop
xor
pop
pushf
jmp
mov
jmp
repz
out
jnp
jp
fimull
fstl
fucomi
call
or
sub
aad
cmp
loopne
stos
loope
mov
xor
mov
pop
sbb
push
ljmp
std
shrl
test
sbb
cmp
pop
fiadds
repz
push
jecxz
out
cld
xor
pop
xor
sbb
push
rcrl
xor
popf
and
mov
popf
dec
mov
popa
xor
mov
dec
repnz
punpcklbw
xchg
mov
cmpsl
int3
jb
fs
xor
fisubrl
adc
rorl
cltd
mov
pusha
fdiv
lret
pop
addr16
fdiv
mov
pop
andl
mov
lock
popf
mov
popa
daa
hlt
int3
sbb
outsl
dec
mov
aam
inc
xchg
fcmove
mov
mov
mov
into
es
push
into
sub
scas
xchg
bound
pusha
sub
ss
mov
inc
push
aas
add
ficomps
cmp
push
and
repz
inc
lret
pop
pop
je
insl
xchg
cmp
xor
mov
jecxz
mov
dec
pop
inc
push
or
bsf
outsl
and
mov
inc
push
dec
mov
test
mov
inc
push
test
xor
mov
push
or
mov
pusha
inc
cmp
jnp
sub
fcmovnu
adc
scas
adc
iret
daa
add
mov
xchg
lcall
cmp
rcll
out
mov
push
mov
cs
sbbl
sub
ret
sbb
jl
test
pop
lcall
adcb
push
movsl
fistpl
es
cmp
sub
mov
xchg
sub
testb
push
sub
scas
fmull
nop
iret
es
mov
dec
jp
iret
lock
or
or
and
pop
push
pop
lock
sbb
in
mov
jl
and
fldcw
pop
xor
shll
popl
or
cmp
ret
aam
pop
popf
jle
push
xchg
xor
push
das
mov
dec
test
cli
or
in
dec
aaa
mov
cltd
loopne
mov
mov
shlb
sub
mov
adc
fwait
lret
mov
sub
xchg
dec
sub
pop
pop
out
call
jmp
jp
sbb
mov
outsb
scas
fisttpll
int
sbb
lahf
std
xor
and
cmp
pop
jb
jb
rcll
push
mov
xchg
xor
xchg
mov
push
mov
mov
xchg
int3
loopne
inc
cmpb
xchg
inc
cmp
push
jl
lods
inc
aad
push
mov
dec
fidivrl
add
sbb
adc
inc
push
stos
sub
adc
mov
imul
test
push
pop
add
sub
pop
aas
jmp
mov
scas
dec
idiv
loop
stos
push
mov
cmp
shll
sbb
sub
aas
add
arpl
jmp
cmp
mulb
ds
dec
movsl
and
sbbb
cltd
shll
movsb
ds
ja
dec
jno
lret
repnz
out
adc
cmpsb
in
divb
push
nop
fisttps
add
mov
inc
outsl
cs
xchg
push
bnd
pop
jne
in
mov
outsb
mov
shlb
mov
inc
jae
jbe
js
jmp
jne
mov
dec
dec
push
and
sahf
into
or
repz
test
jp
aas
lea
cmc
push
mov
arpl
cmpsl
pop
arpl
dec
xor
test
sahf
jmp
xchg
jo
outsb
adc
int3
cbtw
inc
cmp
shrb
scas
adc
xchg
lock
push
into
lock
and
adc
sarl
mov
sbb
mov
lcall
popf
int3
inc
or
popf
stos
mov
pop
shlb
push
and
push
pushw
nop
and
fiadds
sbb
arpl
xor
shlb
sub
xor
jmp
aaa
xor
daa
jns
jl
bound
andl
add
adc
call
popf
int3
and
in
dec
cld
mov
pop
cmp
push
mov
in
rcrl
jge
mov
cwtl
cmp
cmp
das
jl
mov
or
ja
imulb
cmpsl
jno
jl
mov
sub
cli
arpl
sbb
push
push
xorl
sbbb
jae
test
xchg
outsl
mov
sbb
dec
push
sti
inc
shrb
mov
jecxz
xor
ljmp
dec
mov
dec
pop
into
gs
addr16
cmpsl
pop
into
jo
or
jl
cmc
fmull
inc
ljmp
int
loop
mov
les
mov
add
cmp
lret
ljmp
pop
dec
lcall
mov
sbb
ret
mov
cmc
fists
negl
mov
stc
scas
inc
pop
and
call
ja
idivl
sbb
stos
or
test
pop
call
dec
and
xchg
test
push
iret
adc
pop
outsl
or
jle
aaa
rcrb
testb
mov
jns
in
cmp
test
mov
xor
es
jecxz
sahf
je
fildl
mov
enter
fwait
push
fwait
inc
pusha
jmp
pushf
push
xchg
mov
loope
jbe
sahf
mov
adc
push
loopne
into
xchg
imul
movsl
xchg
add
aad
mov
mov
mov
mov
rolb
jg
add
movsb
cmp
lock
insb
lea
xorl
fsubp
ljmp
mov
sbb
pop
cwtl
pop
pop
stos
inc
pop
push
lock
mov
loopne
xchg
mov
je
push
inc
add
popf
adc
cmp
int
ljmp
push
lcall
lock
cmp
push
rolb
inc
fisttpll
pushf
push
dec
or
mov
repz
stos
or
and
pop
call
add
adc
das
cmc
testb
mov
inc
lret
fldt
scas
sahf
adc
hlt
stos
repnz
jb,pn
in
data16
sbbl
jmp
dec
int
stos
cmp
ret
fldcw
add
sbb
jge
xor
rcl
into
inc
mov
aas
ficompl
and
inc
add
xor
cmp
rol
aaa
sbb
mov
sub
repz
call
sub
pop
jecxz
push
inc
and
or
fdiv
js
push
pusha
roll
inc
sbb
xchg
les
aam
cmp
cmp
pop
mov
adc
and
cld
jle
syscall
xchg
aaa
ds
or
push
pop
or
cmp
and
pop
inc
xor
mov
insl
adc
daa
mov
fsubl
daa
je
adc
loop
rorb
aas
mov
sbb
jns
arpl
mov
jecxz
in
sbb
and
imul
pcmpeqd
js
aad
inc
loopne
mov
push
sahf
shr
pop
xchg
gs
jecxz
lock
sub
rolb
lea
cltd
sbb
fcomps
stos
pop
enter
in
insl
jmp
adc
lea
movsb
data16
leave
mov
fdivrs
mov
cmc
movsb
xchg
push
insl
lds
and
pop
fwait
pop
mov
addr16
mov
mov
sub
repz
adc
and
jmp
aaa
cmp
aam
mov
femms
orl
pop
xchg
cmp
push
lock
pop
mov
popf
jecxz
clc
cld
jo
cmpsl
pop
jecxz
dec
sar
xchg
or
repz
popa
lret
cwtl
or
push
sbb
mov
sar
and
cmpsb
inc
loop
fcoml
loope
in
mov
repnz
popa
repz
cmpsb
add
and
inc
pop
cli
js
sub
ds
cmp
outsb
arpl
out
jns
daa
adc
aad
stos
xor
cmpsl
outsl
insb
add
jmp
pop
cmp
push
mov
mov
inc
enter
scas
lahf
je
dec
ss
inc
sbb
push
cwtl
les
sub
push
hlt
loop,pn
push
hlt
xor
adc
add
push
lods
mov
sti
clc
lcall
dec
ja
out
int3
sbb
inc
sub
out
jbe
and
and
push
jp
pop
lods
loope
lock
jne,pt
hlt
xor
mov
std
cmp
xor
lahf
jb
decl
rorl
push
jg
jns
sbb
ret
clc
push
and
stos
in
cmpsl
mov
pop
cmp
jb
insl
jns
adc
jmp
jo
or
jl
cmp
dec
pop
mov
fwait
jecxz
sub
inc
adc
stc
mov
adc
jae
sbb
fmuls
sub
pop
std
gs
bound
adc
cmpsb
sbb
jge
in
xchg
insl
shrb
push
subl
loopne
das
lahf
adc
and
and
cmp
in
xor
rolb
dec
pusha
xlat
jae
cmpsl
xchg
jo
lcall
dec
loopw
and
enter
mov
mov
in
iret
mov
pop
add
sub
inc
cwtl
xchg
xchg
leave
outsl
aaa
fcmovu
mov
pop
push
xchg
fsub
adc
loope
adc
cltd
cmpsb
ret
sub
fwait
jbe
aad
and
xlat
adc
or
in
je
pop
sub
push
clc
mov
or
cmpsb
xchg
inc
sub
test
jge
movsl
adc
notb
and
mov
and
ret
lcall
or
mov
mov
mov
sarl
push
mov
mulb
push
xor
jno
ja
es
repnz
stos
jmp
testl
lret
pop
xchg
inc
jae
int
int3
test
stc
mov
pop
lahf
fsubl
mov
aam
stos
aas
mov
add
jae
rcrl
mov
outsl
call
adc
cmc
fwait
mov
cmp
insb
sbbb
pop
xor
into
adc
clc
lods
out
push
addr16
in
or
jecxz
sub
xchg
lret
andb
cmp
mov
fstps
addr16
call
in
jge
mov
aas
mov
and
call
push
adc
pop
push
clc
jae
fdivs
scas
and
add
aas
sub
lds
jecxz
mov
adc
insb
lock
rcrl
fmul
inc
fs
lahf
inc
sarl
cs
test
ss
stos
lods
icebp
cltd
sahf
push
mov
push
xchg
repnz
shlb
and
jge
sub
lods
push
rcr
sbb
xchg
lahf
pop
lcall
push
mov
xchg
mov
gs
jle
push
repz
hlt
cmp
mov
inc
push
daa
insl
stos
std
sbb
dec
ja
mov
push
imul
insl
xor
stc
cmpsb
lret
push
inc
jne
inc
mov
add
pop
add
arpl
shl
and
sbb
dec
fidivs
cmpsb
adc
ficomps
cmp
jb
mov
pusha
jecxz
outsb
add
fisubl
jge
fwait
cmp
sub
cmp
unpcklps
sub
mov
mov
jo
leave
lret
dec
enter
inc
adc
fsub
xor
pushl
xor
xor
pop
fisttpl
popa
mov
shl
dec
fwait
mov
inc
das
imul
xchg
cltd
inc
push
pop
ds
ret
cwtl
leave
dec
mov
testb
sub
lret
adc
hlt
push
and
adc
mov
in
cmp
push
fs
sahf
lret
xor
clc
das
and
in
out
jl
adc
insl
mov
mov
jb
das
loope
sub
adc
add
and
sti
and
inc
inc
movsb
daa
inc
or
enter
je
mov
push
gs
xchg
addb
jnp
inc
xchg
add
mov
xchg
pop
dec
jbe
test
aas
jno
popw
arpl
add
into
stos
add
add
popa
mov
gs
sub
fs
and
fsubrl
or
inc
inc
or
clc
mov
or
adc
ljmp
addl
mov
in
imul
cmp
mov
call
scas
popa
sahf
jge
out
ss
ds
pop
pop
repz
pusha
cmpb
ss
cs
sub
pop
mov
sbbl
mov
add
jo
sbb
xchg
jb
sub
mov
jecxz
push
lds
pop
ljmp
pop
jecxz
outsb
adc
mov
sub
in
hlt
push
cmc
decl
mov
ljmp
rcr
stc
xchg
shrl
ret
icebp
pop
pop
push
sbb
sbb
pushf
push
ja
shlb
das
scas
popa
cmp
rorl
shr
jne
gs
leave
iret
sbb
leave
pop
insb
mov
lret
fdivr
stos
iret
sbb
push
scas
inc
xor
adc
test
cli
jns
js
dec
mov
notl
add
adc
cmp
pop
data16
mov
add
pop
or
pop
fwait
stos
outsb
xchg
loopne
lea
and
add
mov
inc
pop
bnd
mov
add
and
scas
mov
mov
lods
sahf
push
dec
cmp
aam
xchg
dec
bnd
and
xor
scas
and
inc
test
lods
shll
addl
insb
dec
jnp
lods
mov
sarl
inc
push
mov
adc
xchg
dec
stc
repnz
mov
sbbb
mov
sub
in
push
push
jno
sbb
sub
ss
stc
clc
test
add
out
mov
fsts
sbb
pop
jecxz
daa
push
adc
loopne
loopne
test
jg
mov
xor
repnz
add
adc
xchg
cld
adc
jo
fbstp
jp
inc
mov
xchg
cltd
outsl
push
iret
sbb
popf
pop
xchg
popf
jno
fimuls
mov
dec
or
push
sub
hlt
out
nop
cmp
mov
mov
rcl
pop
sbb
lret
test
mov
xorps
sub
add
or
or
jge
sarb
inc
push
mov
mov
adc
adc
rcll
loop
movsl
jo
mov
adc
push
jg
roll
lods
adc
add
scas
add
aam
and
out
je
and
daa
popf
pushf
and
lcall
clc
rcr
pop
cmp
clc
pusha
mov
adc
xchg
mov
insl
xlat
mov
aam
repnz
lock
imul
xor
icebp
sbb
inc
mov
cmp
pop
and
sbb
cli
sar
xor
sbb
and
in
in
push
add
scas
jecxz
out
fwait
cmp
nop
rcl
pop
xor
xor
dec
jle
and
jo
pop
and
icebp
mov
movsb
test
jg
or
stos
cwtl
adc
dec
int3
adc
mov
push
shl
inc
notb
mov
insl
fwait
pop
xor
and
jle
jo
push
push
dec
stos
lahf
pusha
dec
xorb
pop
fs
sub
nop
and
mov
mov
push
xchg
adc
aam
pop
pushf
dec
nop
mov
adc
inc
stc
fldenv
lods
push
fidivrl
add
in
popf
or
pop
dec
mov
push
inc
aaa
jo
testl
test
sahf
sahf
mov
nop
mov
addb
adc
outsl
cmpsb
scas
ja
adc
mov
cltd
jo
in
jle
ds
sub
pushf
sbb
subb
push
lret
inc
adc
addl
les
mov
in
scas
stc
mov
xor
cmc
bnd
rorl
mov
ds
push
clc
or
and
mov
test
in
jge
leave
pop
jge
lcall
stc
ret
lock
dec
fs
pop
daa
dec
push
cmp
mov
mov
mov
sbb
mov
icebp
lahf
out
and
pop
sti
cmp
cmp
mov
cmp
test
add
popf
enter
test
insl
frstor
shr
or
mov
mov
xchg
push
fstpl
ret
test
cld
and
inc
dec
xor
mov
daa
out
mov
aam
pushf
andl
or
fadds
mov
lahf
sahf
inc
mov
repnz
mov
popa
or
jne
adc
repz
icebp
daa
scas
mov
mov
mov
fisttpl
mov
xchg
ss
adc
mov
test
lds
test
mov
fisubrl
pop
xlat
dec
mov
scas
xchg
or
mov
nop
cmpsb
dec
cmc
sub
xchg
rol
mov
aas
cmc
nop
or
std
and
fnstcw
aaa
sub
inc
cmp
fstpt
pop
adc
jecxz
rorl
addl
test
sahf
dec
ret
add
mov
jmp
push
push
xlat
popf
jecxz
ljmp
aad
in
mov
hlt
bound
sbb
lea
jg
mov
xor
flds
adc
enter
pop
inc
lods
sub
xor
pop
insl
testb
sarl
or
xchg
inc
push
jne
xor
stos
int
loope
dec
xor
and
and
js
push
cmp
ret
lods
enter
cmc
call
in
shll
xchg
mov
push
mov
repnz
hlt
fistpl
xor
xor
mov
mov
lret
mov
jnp
ja
repnz
out
shrl
add
mov
fdivl
bound
out
arpl
outsl
mov
jge
sahf
or
inc
out
lret
push
mov
aaa
cmp
jo
jno
xor
dec
xchg
push
or
arpl
and
mov
mov
mov
xchg
roll
add
rcll
cmp
xor
xchg
out
or
ja
mov
mov
sub
nop
add
mov
sub
subl
aaa
xchg
clc
xor
mov
dec
mov
mov
xor
test
jno
lods
call
dec
rolb
rclb
jne
xchg
jge
aam
aam
ret
pusha
mov
in
inc
jne
xor
and
and
dec
inc
repz
scas
xchg
fwait
int3
push
jae
and
cmpsl
inc
inc
mov
sbb
mov
rorl
sarl
out
jl
out
adc
ret
adc
mov
daa
sub
fbld
jbe
repz
xchg
pushf
ret
outsl
xchg
insb
add
ret
sbb
cmp
or
test
and
js
sub
test
push
sub
cltd
and
xor
cmc
jne
test
mov
ret
stc
cmp
shll
pop
adc
stc
mov
lods
mov
push
icebp
push
or
adc
dec
pop
mov
xchg
mov
dec
lock
sub
sarb
fwait
js
mov
mov
in
cmp
fisttpll
in
das
xchg
adc
mov
push
adc
sub
jae
in
push
xchg
cld
shrl
rclb
pusha
stc
mov
loopne
mov
int
cltd
mov
test
divl
xchg
cmp
fidivs
adc
pop
push
arpl
mov
mov
pop
out
inc
xor
mov
shrl
push
mov
cmovae
xchg
cmp
xchg
mov
push
cmpsb
repz
mov
mov
sub
inc
loop
pop
subb
ss
ret
mov
cmp
lahf
in
sti
testb
mov
icebp
jae
xchg
insb
inc
ljmp
pop
dec
xlat
sbbl
arpl
lods
cmp
add
in
adc
and
mov
or
andb
cmp
filds
add
cwtl
in
repz
jae
pop
jb
stc
adc
inc
js
shl
push
sub
lea
xchg
imul
jp
cld
sub
pop
sub
jae
sbb
push
jnp
mov
sub
xor
les
bound
fdiv
test
add
mov
or
or
cwtl
int3
or
enter
add
mov
dec
mov
pop
out
repnz
inc
gs
popf
enterw
sbb
xchg
outsb
pop
mov
jmp
js
movsl
mulb
xor
lcall
movsb
add
cmpsb
dec
xor
movsl
or
leave
mov
lret
mov
int3
and
enter
pop
ljmp
mov
mov
addr16
aas
push
btr
cmpl
lock
mov
sbb
add
inc
or
push
lods
jnp
sbb
adc
dec
and
mov
cmc
stos
mov
hlt
out
ds
sub
dec
cld
test
push
pop
inc
push
xor
adc
push
gs
adc
lock
or
mov
inc
push
je
xor
cmc
sbb
fwait
test
sbb
jmp
push
cwtl
push
sbbb
addr16
jmp
inc
mov
pop
cmp
popf
pop
daa
es
mov
adc
push
shlb
pop
xor
dec
adc
cmp
ret
push
xor
fsts
xchg
xor
xchg
fsubrl
sbb
or
cmp
stos
in
stos
push
cmp
dec
shlb
js,pn
sub
sbb
outsl
aam
daa
rol
lds
filds
lret
adc
inc
or
lret
jmp
stos
sbb
pop
ds
adc
dec
jns
fdivl
neg
sub
lea
stos
popa
daa
lock
ret
les
mov
push
imul
push
insb
adc
aam
js
inc
lock
insb
pop
add
inc
fnstcw
fucomp
sbb
ds
jecxz
fsubrl
push
pop
push
addb
aaa
xchg
mov
inc
xlat
test
scas
cld
inc
andb
cmp
fdivl
cmp
xor
sti
std
rcl
push
fs
jge
jae
add
add
lods
ret
xlat
pop
mov
pop
out
mov
dec
lret
fsubl
mov
jb
xor
shl
mov
insb
cmc
cmpsl
xchg
sub
out
inc
xchg
mov
pop
fidivrs
mov
mov
inc
lock
mov
adc
jmp
cmp
addb
icebp
jmp
push
dec
dec
add
jae
addr16
gs
fadd
jo
shlb
imul
push
fstps
jl,pt
je
add
xchg
stos
mov
mov
adc
cmc
icebp
inc
fidivs
shl
push
push
aas
cmp
out
push
in
cld
fsubs
idivl
sarb
loopne
incb
out
pop
push
push
mov
adc
shl
jle
cmpsb
mov
mov
loop
in
fnsave
sub
xor
mov
sbb
in
mov
add
stc
cwtl
outsb
popf
icebp
lods
mov
and
pop
lcall
cmpsb
xchg
cmpl
push
xor
pop
jmp
ljmp
cmpsb
test
mov
add
les
mov
and
rolb
xorl
ja
xlat
mov
push
shrl
sbb
and
mov
mov
xchg
js
fstl
movsb
add
adc
sub
and
ja
or
bound
jo
xor
fsubr
cmp
cmp
stos
mov
xchg
adc
pop
sbb
add
inc
pusha
inc
push
mov
cmc
fsub
cmp
rcrb
and
insb
mov
jo
or
mov
cmp
mov
out
cwtl
test
movsl
push
xor
in
icebp
inc
pop
jnp
mov
dec
mull
in
jo
pop
mov
cli
sbb
mov
addl
test
lods
xor
jmp
xchg
addr16
lea
dec
push
mov
test
xchg
inc
call
add
lsl
fildll
jae
and
sbb
mov
inc
mov
xchg
push
add
movsb
add
or
mov
jp
mov
xor
inc
outsb
or
fcomip
test
std
and
ja
or
jecxz
pop
xchg
mov
je
pushf
ja
outsb
mov
js
jmp
xor
jl
dec
cmp
in
mov
leave
pop
jl
mov
mov
leave
les
divl
or
imul
inc
xor
jle
aad
jne
sbb
adc
cmc
rorl
dec
ret
mov
orl
ja
fs
jno
and
outsb
in
scas
xchg
fsubp
inc
test
cltd
pop
mov
mov
ret
xchg
or
cmp
test
movsb
xor
mov
sbb
push
inc
xchg
movsl
push
and
push
loop
xor
inc
sub
pop
pushf
pop
inc
push
sub
stos
add
and
outsl
cmp
or
test
les
xchg
jmp
adc
and
and
enter
lahf
scas
add
clc
push
cld
mov
rcr
jp
mov
push
cmp
ret
jg
xor
enter
stos
cmpsl
add
icebp
pop
push
push
add
popf
mov
pop
xor
lea
in
stos
cwtl
sbb
jp
inc
lret
jge
rorl
jle
cmpsb
cmpsb
pmulhw
push
outsl
es
fsub
movsb
js
jl
adc
stos
and
jb
lods
stos
dec
ret
mov
jns
lods
out
shrl
dec
stos
sahf
pop
ret
pop
pop
push
fdivrl
push
mov
sbb
add
push
call
mov
outsb
imul
clc
mov
inc
jl
push
popf
popf
outsb
test
or
daa
jns
pushf
sbb
pusha
into
inc
push
pop
or
inc
mov
je
movsl
rol
add
or
faddl
inc
adc
cmp
push
ss
adc
es
stc
mov
mov
dec
insb
mov
push
mov
daa
inc
xor
sarl
adc
imul
cs
inc
jbe
cmc
call
insb
inc
roll
imul
les
sbb
les
inc
and
bound
xchg
les
lea
push
xor
in
vshufps
ljmp
cmpsl
call
adc
cli
loope
icebp
cmp
cmp
adc
pop
mov
pusha
mov
push
pushf
jl
inc
push
lock
aas
mov
out
std
shlb
imul
and
repnz
fildll
sub
out
mov
sub
out
cltd
xchg
sub
dec
cmp
add
xchg
pop
add
sub
inc
cmp
cmp
mov
pusha
repz
gs
mov
out
sbb
mov
xchg
int3
jge
andl
popfw
adc
scas
cli
add
cwtl
lret
jl
cmp
sbb
and
lahf
xchg
and
popf
sbb
je
mov
lods
ss
add
cwtl
popa
fiaddl
adc
inc
or
mov
adc
sbb
xchg
jno
jnp
jle
in
aad
inc
aad
xor
push
pusha
dec
and
hlt
sub
test
jbe
pop
pop
daa
ds
cli
je
push
pop
cmp
scas
pop
je
xchg
add
add
sub
pop
sub
mov
aaa
movsb
and
ljmp
pop
into
or
aam
jo
adc
call
lea
stc
inc
cli
add
jp
cmpsb
gs
sar
lahf
rcl
xchg
scas
cmp
in
and
dec
shlb
mov
nop
sbb
out
dec
push
and
inc
xchg
mov
xor
mov
sbb
xlat
scas
filds
shlb
gs
filds
fldl
gs
repz
out
dec
push
push
gs
xchg
dec
mov
rorl
push
mov
repnz
mov
or
mov
push
outsl
ljmp
aad
or
int
dec
mov
aam
push
sub
dec
mov
dec
cli
pop
ret
xor
jae
mov
add
scas
ljmp
cmp
cmp
dec
decl
jg
mov
in
pop
addl
stos
push
pushf
or
shrb
pop
in
stc
test
test
in
ljmp
out
test
add
pop
movsl
inc
stc
mov
mov
inc
sub
xlat
enter
jnp
jae
out
imul
enter
xchg
xchg
jnp
lahf
insb
inc
dec
pop
jne
push
inc
pushf
push
and
enter
xchg
lret
out
and
cmp
gs
repz
lret
inc
add
popa
jl
dec
or
jmp
mov
popf
mov
in
fcomi
xchg
outsl
in
ja
movsl
js
out
cli
or
mov
ljmp
pop
cwtl
dec
xchg
dec
shll
inc
into
lahf
lock
rolb
xchg
cmc
and
add
sub
cwtl
fsubl
or
jae
sbb
or
iret
mov
pop
cmp
pop
enter
and
loop
jb
push
popf
rclb
jg
or
mov
lahf
das
lods
stc
mov
or
pusha
mov
pop
imull
out
add
xchg
and
or
mov
mov
mov
mov
fcoms
ljmp
insb
and
sbb
fwait
hlt
mov
xchg
hlt
sbb
push
xchg
jp
movsb
in
dec
imul
jnp
test
and
jl
adc
push
xchg
jb
or
mov
mov
push
jle
popa
in
call
and
dec
jo
sbb
pop
arpl
xchg
hlt
pop
add
sub
ficoml
mov
or
add
bound
jge
aad
pop
add
add
test
gs
gs
lahf
push
jns
insb
enter
lods
jp
pop
pop
mov
sub
sti
and
data16
aaa
decl
cmp
sub
pop
mov
insb
lock
push
jne
bound
stos
mov
cmpsl
stos
out
sub
hlt
xchg
jg
repnz
mov
and
bound
repz
jno
sbb
jb
adc
call
inc
in
mov
mov
and
push
test
in
push
xchg
jp
lds
xchg
or
cmc
filds
mov
push
nop
inc
enter
mov
add
xor
dec
add
inc
ja
nop
mov
mov
test
xchg
and
or
out
icebp
sti
rorl
mov
sbbl
pop
xchg
lea
push
gs
test
jmp
jecxz
js
push
fmull
cwtl
loope
cltd
inc
or
aam
cmp
aas
push
fsub
cltd
ds
inc
fcmove
scas
xor
daa
pop
negl
mov
fistpl
or
lods
push
inc
inc
cmp
mov
inc
push
mov
jns
cmp
loop
jne
das
sbb
or
adc
pop
dec
jns,pn
inc
and
jb
es
bound
sbb
adc
push
pop
lret
cmp
test
das
fidivrs
push
sub
sub
inc
cmpl
xlat
aad
bound
or
push
or
lret
movsl
cmp
adc
cli
pop
mov
aaa
fs
inc
dec
hlt
jle
xchg
jmp
pop
jne
mov
jmp
mov
scas
and
xor
data16
push
adc
mov
outsl
shlb
sub
dec
cmp
or
jmp
movsl
pop
sbb
sbb
adc
lret
ret
das
mov
enter
dec
or
lea
mov
push
into
pop
fldl
lods
push
dec
repnz
and
sbb
dec
push
addl
shl
inc
sub
mov
xor
inc
cltd
in
lcall
and
xor
inc
sbbb
pop
push
adc
xchg
inc
hlt
mov
push
jbe
and
lods
gs
mov
xor
sbb
fsubl
sbb
fimuls
add
jmp
sarl
sub
andb
outsl
push
add
and
add
lcall
inc
mov
jle
xchg
xchg
inc
adc
dec
pop
stc
push
das
mov
pop
rcrw
pop
je
mov
test
loop
add
push
pop
sub
jbe
testl
punpcklbw
icebp
dec
xor
jne
in
lods
push
lods
mov
out
icebp
sub
cmpsb
add
outsl
stc
sbb
in
popa
inc
stos
jg
pop
faddl
inc
addr16
mov
daa
sub
cs
push
sbb
adc
mov
aaa
sbb
lods
sbb
sbb
sbb
adc
outsb
dec
sbbl
xlat
adc
inc
dec
out
sbb
sbb
mov
ror
mov
mov
enter
add
push
push
movsl
hlt
js
int
ret
mov
lahf
pop
cs
jb
ja
cwtl
stos
pop
dec
xor
dec
mov
pop
adcb
adc
jmp
push
push
pop
mov
lret
mov
inc
fwait
je
push
jne
fidivl
sub
xor
gs
out
inc
test
mov
mov
jge
xor
es
andb
mov
inc
and
xchg
dec
mov
dec
fnsave
sbb
sub
idivl
mov
mov
inc
std
sub
push
repz
js
xor
mov
mov
adc
pushf
mov
sbb
clc
cld
xor
mov
bound
cmp
dec
daa
jns
adc
insl
inc
inc
fnstsw
mov
pusha
pop
mov
arpl
lods
xchg
mov
daa
sti
lret
pop
adc
int
fwait
add
lea
pop
dec
mov
jle
scas
cltd
jecxz
scas
jmp
ret
insl
out
leave
popf
sub
adc
lock
or
fwait
pop
jne
loopne
out
push
cmp
mov
sub
inc
ljmp
lahf
es
pmaddwd
pop
aas
hlt
push
push
pop
loope
mov
push
push
loop
jg
cmp
dec
addb
ret
stos
decb
xchg
dec
push
movsl
inc
in
mov
jecxz
shl
xchg
sti
mov
jp
or
add
clc
and
xchg
out
add
or
in
aas
or
sub
pop
cmpsb
push
pushf
mov
outsb
push
stos
shrb
jo
mov
shll
push
movsl
test
rorl
sti
test
xchg
sahf
pushf
int3
flds
push
aaa
jecxz
pushf
push
aam
sbb
std
cmp
in
mov
sbb
jl
push
sbb
into
jae
jp
in
xchg
sub
pop
mov
movsb
mov
test
mov
popf
aaa
or
ljmp
cmc
dec
popf
sbb
pusha
cmp
data16
pop
add
movsl
ja
arpl
adc
scas
cmpsl
add
test
popf
cld
popf
fbstp
or
leave
in
enter
xcrypt-ofb
cmpsl
sub
mov
inc
push
je
mov
sub
or
aas
or
lea
rol
fmull
xchg
daa
cltd
adc
push
sbb
jnp
xchg
add
sbb
add
in
xor
cld
call
adc
push
clc
adc
mov
loope
add
rcl
mov
mov
cltd
sub
or
mov
ret
jmp
jmp
jne
push
or
jno
adc
std
jle
or
ret
push
js
mov
and
pop
call
addb
or
int
bound
cmpb
inc
mov
mov
cmpsb
inc
push
test
add
xabort
clc
dec
dec
lahf
jo
push
andb
jo
andb
or
mov
adc
ror
sub
dec
insl
xor
ficoms
sti
fnsave
dec
cmp
mov
and
push
sub
addr16
stc
fidivs
mov
or
jecxz
jne
in
mov
adc
add
xchg
inc
hlt
stc
mov
and
adc
cmpsl
loopne
insb
aad
and
pop
jne,pt
into
jae
into
popfw
test
jle
inc
pop
iret
cmp
mov
mov
sahf
cmc
adc
inc
lret
pop
pop
and
jle
sbb
pop
cltd
loope
test
sar
lret
sub
lock
in
cmp
jb
mov
cmp
fcmovnbe
gs
cld
xchg
dec
jmp
fisubrs
adc
or
jo
or
jbe
adc
and
repz
mov
adc
ja
lds
cli
jbe
adc
jge
divl
push
mov
pop
dec
call
adc
pop
ret
iret
mov
dec
sbb
ror
aaa
fcomps
and
pop
jno
xor
cmp
lret
lds
test
notl
mov
sbbl
fidivrl
cmpl
sub
xor
and
add
xor
out
jae
xchg
and
stc
test
in
divl
inc
cmpl
mov
in
sub
sbb
sar
xorb
jns
in
xor
pop
scas
loope
into
mov
and
ja
fcmovu
gs
mov
cmpsl
pop
mov
add
movsl
sub
out
dec
mov
cmp
icebp
pushf
inc
lea
sbb
das
fwait
add
shll
insl
sub
sub
call
out
in
push
add
aas
mov
ret
or
pop
pop
jl
fldt
test
inc
jne
mov
mov
es
xchg
and
in
mov
and
inc
push
mov
cmp
shl
inc
mov
cmpsl
shlb
xor
mov
mov
ret
aas
insb
ljmp
cmpsb
sbb
rclb
lret
xchg
ss
popa
cltd
lods
ja
add
and
dec
cmpb
inc
dec
jo
mov
fdivrs
add
out
jmp
and
mov
cmpsl
add
lods
push
lret
inc
test
jecxz
xchg
loop
das
add
or
into
insl
mov
jmp
inc
inc
inc
test
sbb
jmp
mov
iret
ljmp
inc
xlat
subb
xchg
adc
pushf
mov
pushf
mov
ds
clc
push
mov
cmp
stos
inc
sub
push
or
jmp
cmpsl
cmp
sub
push
jl
jl
jae
addr16
pushf
aas
or
das
jae
add
jae
jmp
mov
xchg
std
vpmacsdqh
push
jl
stos
mov
pop
inc
cld
pop
jo
mov
das
clc
mov
cmpsl
aam
mov
das
cmpsl
fwait
push
repnz
mov
in
es
fstps
lahf
sahf
fistl
jae
cmpsb
daa
pop
ror
push
lods
or
mov
sbb
sub
add
mov
push
mov
int
add
mov
fnstenv
mov
push
mov
push
subb
dec
mov
subb
aam
push
mov
imul
jne
pop
js
sbb
test
cmp
fwait
xor
ret
add
jecxz
push
and
loop
int
adc
roll
ret
jle
mov
setp
mov
or
xchg
ret
jg
push
mov
filds
mov
push
in
pop
aad
cmp
sbb
cwtl
inc
stos
ss
fisttps
dec
or
dec
sub
mov
addr16
dec
sub
nop
pop
jae
sub
std
xchg
rol
test
aam
pop
ret
mov
push
lahf
or
jne
je
sti
insb
nop
push
push
clc
icebp
scas
sub
add
test
cli
xor
dec
fcompl
cmp
cld
xor
mov
ljmp
add
add
push
ja
and
je
in
push
mov
faddl
insb
push
jnp
or
xchg
pop
xor
jg
xchg
and
std
leave
leave
sub
sbb
xorb
rolb
jno
addr16
lock
cmp
push
insl
shr
sbb
push
mov
add
or
mov
adc
and
mov
pop
adc
mov
stos
testl
cmp
add
mov
pop
loopne
push
pop
lods
adcl
inc
lcall
loopne
aam
cs
jge
loope
cmc
jmp
sbb
mov
mov
das
adc
adc
pop
mov
or
subb
or
cmp
mov
out
pop
jnp
xchg
fcoml
adc
lret
movsb
mov
ja
orb
sub
pop
xor
xor
jle
mov
xchg
dec
inc
bound
push
ds
hlt
xor
insl
mov
mov
mov
andl
fcmovbe
sbb
dec
push
mov
es
in
jno
pop
and
pop
adc
push
mov
jb
xchg
cmpl
movd
or
repnz
jnp
imul
sbb
adc
repnz
add
mov
dec
jmp
test
mov
inc
pop
xchg
sbb
cmp
and
lea
mov
in
pusha
je
sbb
jecxz
cmp
insl
xchg
ds
and
insb
fldenv
push
out
cmp
sarl
jo
sbb
aad
in
fdivr
in
xchg
out
mov
in
arpl
imul
push
sbb
mov
mov
lods
iret
mov
sub
adc
push
inc
mov
les
aas
sbb
mov
add
or
repnz
aam
dec
xlat
lea
imul
jno
mov
xchg
inc
jmp
jg
sub
cmpb
xor
push
pop
xchg
pop
lods
dec
and
jle
test
fildll
pop
push
cltd
jp,pt
pop
xor
iret
push
or
pop
push
jno
dec
push
jl
adc
xor
sub
sti
icebp
inc
mov
jno
or
clc
mov
add
dec
loop
shr
jle
xchg
push
aad
jb
iret
add
xlat
mov
mov
lcall
or
mov
pop
dec
jb
adc
cmp
inc
cmp
les
mov
mov
xor
jne
pop
bound
jg
add
ret
sbb
pop
mov
mov
lret
stos
pop
pop
pop
mov
mov
fdivrp
sbb
mulb
jge
mov
push
inc
push
in
mov
out
dec
xorl
popa
shll
jbe
aad
ss
test
push
lret
push
loope
xor
dec
xchg
dec
pop
ljmp
add
mov
xorl
aam
punpckhdq
push
sub
das
mov
fs
pop
iret
pop
jns
insb
scas
xchg
aad
cli
inc
gs
mov
mov
mov
cmp
nop
sub
nop
ret
add
xor
les
pop
stc
xchg
repz
scas
or
xchg
test
fcomps
xor
lahf
push
loope
mov
out
aas
lret
dec
push
pop
bound
xor
add
mov
test
loope
ljmp
mov
and
cmpsl
rcl
stos
test
lock
addr16
fcompl
adc
or
mov
enter
mov
icebp
sti
fldt
mov
rolb
mov
sbb
sbb
jne
xor
mov
and
les
xchg
shlb
jns
data16
leave
cltd
cmp
push
pop
lahf
adc
add
jmp
mov
arpl
cmp
into
sub
inc
sub
pop
push
rcl
dec
in
shll
xchg
ljmp
jp
adc
in
push
cmc
fiadds
push
cmp
scas
cmp
pushf
cld
sbb
adc
cmp
add
lret
imul
or
push
hlt
test
movsl
mov
pop
and
loop
lods
mov
jnp
lds
loope
sbb
sub
sbb
ret
pop
xchg
lods
jecxz
fwait
mov
sbb
xor
mov
insl
lods
cmp
testl
add
jg
dec
insb
dec
arpl
pop
sub
and
and
movb
cmc
lock
cld
push
not
js
outsl
arpl
popa
ret
xchg
lret
push
das
dec
sub
movsb
sub
lret
mov
scas
pop
dec
test
std
enter
mov
inc
or
jo
dec
stos
push
test
pop
imul
imul
inc
jne
lret
emms
xlat
or
cmpsl
sbb
mov
push
arpl
cmp
ja
sti
iret
cmp
mov
cli
cld
mov
or
in
lods
or
mov
or
dec
jb
and
push
data16
call
enter
sbb
and
daa
xor
daa
js
fcompp
dec
dec
and
scas
ficoms
push
fsubrs
xchg
xchg
lcall
mov
mov
bound
jb
sbb
pop
cmpsb
inc
sub
jle
lods
out
xchg
push
jae
dec
iret
xor
into
out
xchg
scas
rcll
repnz
std
pusha
cli
popf
pop
es
fnsave
movb
cmpsb
push
xor
jmp
xlat
mov
mov
and
jb
stos
xchg
jecxz
adc
dec
rclb
hlt
mov
jge
ds
pop
adc
mov
cmp
shl
mov
popa
sub
and
sahf
cld
hlt
jmp
mov
pop
outsl
mov
mov
adc
xchg
pop
and
bound
arpl
sahf
mov
filds
in
jmp
arpl
cmp
mov
aad
subb
and
leave
ficompl
popa
sbb
stos
adc
test
fsts
les
push
jle
cld
mov
leave
inc
adc
sbb
inc
leave
mov
pop
shl
adc
add
mov
das
icebp
inc
adc
push
adc
add
repz
add
imul
push
inc
mov
notl
cltd
aas
or
test
test
into
fisubl
inc
mov
dec
lods
mov
mov
cltd
sbb
push
mov
xor
shll
mov
pop
and
incl
repnz
or
inc
dec
dec
pop
scas
mov
loopne
les
out
in
dec
add
es
rclb
and
test
aam
out
mov
shlw
mov
ror
mov
push
push
push
fisubl
xlat
xchg
mov
lds
aaa
add
cmp
outsb
xchg
in
jl
jge
push
mov
add
dec
inc
push
in
sub
mov
lods
repz
adc
insb
idiv
sahf
test
dec
lret
ja
into
ss
push
jl
xchg
sbb
sahf
lds
jl
mov
adc
push
or
hlt
dec
cld
pushf
lods
mov
fwait
scas
xchg
sar
ret
push
dec
push
rorl
jns
loop
rcrb
inc
or
iret
pushf
inc
test
cld
adc
pop
ror
pop
jg
loopne
sub
hlt
lret
add
and
push
shlb
push
sub
ss
lcall
lcall
imul
cmpsb
and
xor
fisttpl
inc
into
outsb
test
and
iret
lret
repnz
pop
jae
dec
mov
pop
cmp
sbb
mov
pop
push
popa
ss
cmp
cmp
inc
cmpsb
negl
mov
lock
bound
mov
jg
ret
adc
pop
and
inc
gs
dec
jae
pop
push
jno
push
jge
sarl
dec
sti
adc
repz
jge
addr16
movsb
mov
mov
push
lock
scas
sbb
jb
adc
xchg
pusha
aaa
loop
lret
sbb
adc
movsl
push
aaa
call
das
cmp
sub
sbb
pop
or
jmp
or
dec
and
push
data16
and
jnp
pushf
fimuls
or
loopne
notb
fdivp
scas
fmulp
mov
roll
push
sarl
push
jne
xchg
shll
incl
fnstcw
insb
inc
sub
push
push
imulb
and
mov
mov
popa
push
icebp
stos
jnp
gs
ret
push
adc
add
lods
mov
jne
inc
push
xchg
inc
and
add
mov
sub
outsl
mov
mov
shrl
popa
add
out
push
leave
cs
push
mov
call
fdivs
and
sarl
data16
enter
orl
aas
ss
jge
adc
insl
inc
arpl
cmp
pop
cltd
inc
cmovl
add
loope
add
jo
shll
data16
adcb
lock
sarl
in
mov
add
jo
push
mov
shr
jmp
and
and
lret
adc
push
xchg
inc
cmpsl
out
scas
into
aad
stc
data16
test
pusha
mov
pop
and
mov
pushf
inc
and
cmp
lds
sar
jle
ljmp
sub
push
dec
pop
xchg
add
gs
data16
inc
invd
lods
jae
and
push
jne
aam
cmpsb
inc
or
fs
pushl
ret
jp
js
pop
aam
and
adc
sub
jns
jl
pop
repz
sub
adcl
inc
inc
push
sbb
mov
jns
cs
ja
add
mov
aas
or
sti
xor
push
mov
and
lret
mov
lea
cmc
lds
push
mov
mov
cmpb
lcall
insl
inc
mov
bound
xchg
cmp
sbb
push
cmc
pop
shr
lret
bound
sub
clc
jge
mov
pop
dec
jmp
scas
cmovs
dec
add
repnz
adc
nop
daa
pop
cmpsb
xor
scas
mov
das
pop
sbb
push
push
cmp
adc
xlat
cmp
jp
in
and
inc
push
imul
jo
fmuls
dec
mov
mov
sbb
leave
daa
jno
pop
imul
cmp
push
dec
mov
nop
in
adc
sbb
sbb
push
mov
dec
nop
je
jo
fcomps
jge
test
dec
aam
inc
xchg
lea
or
xor
sarl
imul
stc
dec
shl
sti
je
mov
test
pop
es
bound
adc
mov
je
jl
leave
inc
int3
aas
mov
dec
push
pop
mov
outsb
into
das
cmpsb
xor
bound
cmp
je
or
stos
sub
sub
or
sbbb
cli
adc
fidivrl
pop
pop
repz
insl
mov
jne
stc
pop
jge
adc
jge
and
cmp
test
mov
cli
pop
ficompl
add
add
in
sub
mov
mov
jo
push
lods
sub
cmp
out
shlb
imul
sbb
mov
pop
repnz
xchg
mov
rcrl
jge
pop
sub
pop
lret
lahf
scas
or
rcll
out
repz
out
out
jne
mov
xor
daa
outsb
sahf
mov
jne
xchg
gs
sbb
fsub
fmulp
push
in
sub
add
push
jae
or
sbb
out
adc
popa
jmp
mov
push
cli
pop
hlt
jno
pop
xor
pusha
out
dec
mov
repz
mov
mov
jg
test
push
jmp
push
jl
subl
shr
lds
sub
arpl
add
push
sbb
roll
pushf
and
mov
addr16
mov
jns
or
mov
pop
pop
mov
data16
and
jae
adc
stc
xchg
sub
jo
std
fisttpl
repnz
jne
sub
fwait
out
in
xor
xor
adc
fnstsw
insl
adc
push
mov
enter
xchg
imul
add
jb
test
jae
mov
or
hlt
cmp
mov
lods
in
idiv
negb
push
imul
xor
stos
cwtl
cwtl
popa
icebp
mov
fisttps
jp
pop
push
lods
sbb
jp
pop
xor
xchg
out
movsb
add
fwait
ljmp
xlat
lret
adc
shl
mov
cmp
dec
adc
adc
divl
dec
lahf
shll
push
xlat
enter
imul
push
fstpl
mov
pusha
adc
loopne
orw
popf
pop
jge
lock
shll
jne
mov
xor
int
dec
xchg
cmpsl
xor
inc
outsb
mov
xchg
xchg
cmp
in
js
shr
inc
leave
jbe
lret
hlt
dec
cltd
and
aas
pushf
rcrl
incl
xchg
xchg
mov
push
call
cltd
sub
stos
shlb
mov
xor
mov
out
add
and
cmpsl
test
in
ss
int3
adc
and
xchg
xor
dec
xor
lds
cmc
subb
test
test
fmul
jge
adc
ss
cmpsl
jmp
imul
pop
pop
mov
ret
jmp
test
sub
pop
lods
jl
and
cmc
mov
loope
scas
jl
jge
mov
dec
inc
clc
popa
xchg
aaa
cmp
sub
mov
mov
in
movl
xor
in
mov
out
sbb
fildl
call
stos
in
mov
lods
or
lret
ret
mov
cmp
imul
mov
dec
adc
std
mov
push
cmc
hlt
and
rcrb
sub
ljmp
loope
and
sbb
push
push
scas
push
mov
loop
adc
sbb
sub
popf
push
add
sbb
mov
xchg
pusha
sbb
sub
ljmp
ret
in
inc
and
adc
push
xchg
fisttpl
stos
cmp
push
lock
incl
pop
cmp
push
mov
xor
inc
pop
lds
xor
pusha
aad
lahf
movsl
addr16
mov
jnp
repnz
pop
out
movsl
insl
arpl
in
mov
dec
in
pop
outsl
popa
sub
out
jl
push
dec
jge
sbb
pop
insb
xchg
and
adc
pushl
cmp
cmp
add
lret
xchg
xchg
inc
je
cmc
mov
adc
test
mov
adc
xchg
mov
scas
jg
pop
sbb
fs
dec
hlt
into
lods
inc
add
pop
xchg
and
movsb
bound
test
movsl
enterw
jno
mov
scas
adc
or
shrb
fwait
push
rorl
lahf
out
and
lock
je
mov
ja
xchg
scas
popa
and
pop
jae
dec
and
sub
xchg
into
jmp
sub
sbb
aam
pushf
jp
fbstp
stos
add
mov
xor
and
pop
stc
sbb
adc
popf
mov
test
adc
shll
mov
and
xchg
and
pop
sub
stos
icebp
cmp
pushf
xchg
jae
mov
lret
idiv
pop
imul
mov
mov
xchg
inc
imul
add
addr16
in
scas
rolb
jne
bound
test
fdivrp
pushf
or
ss
repnz
cmp
cs
dec
sub
push
les
loop
in
pusha
cmp
push
sahf
les
xor
mov
je
in
push
ss
or
jle
imul
int
dec
mov
enter
xchg
outsl
test
xor
loopne
adc
jecxz
cmp
popa
adc
xchg
cmpsl
pop
sub
xchg
jge
sub
jno
sti
lea
jmp
mov
sub
aaa
data16
pop
mov
pop
cwtl
push
or
sub
ret
mov
std
sub
adc
fucom
pop
test
cs
cmp
inc
pop
push
and
jl
roll
and
shll
ret
jg
test
fildll
jne
lret
xchg
lods
push
das
notl
mov
addl
lret
fimull
hlt
movsw
arpl
imul
xchg
mul
pop
stc
test
shl
std
lods
fldcw
lret
dec
in
adc
pushf
mov
mov
inc
xor
or
pop
testb
ljmp
mov
mov
cmpsb
and
mov
into
stos
je
xlat
sbb
adc
lea
cmp
pushf
or
lcall
addr16
mov
fidivrl
cmp
test
jmp
shll
sbb
mov
dec
pop
inc
xor
cmp
adc
xor
and
adc
or
sete
pushf
aas
mov
rcrl
adc
stos
leave
insl
pop
dec
push
cmp
outsl
mov
jb
push
push
inc
hlt
jbe
inc
or
cwtl
or
jge
cmp
or
jp
adc
fstpl
mov
push
push
sbb
xchg
sub
repz
lods
sbb
jbe
outsl
repnz
clc
dec
or
jae
pop
jmp
lahf
mov
lahf
data16
adc
lods
xchg
test
dec
pop
pop
fs
jg
movsl
inc
dec
xchg
mov
xchg
and
mov
add
inc
jo
arpl
ds
in
jmp
add
int3
ficoml
xchg
or
inc
mov
insl
push
push
mov
dec
inc
xor
hlt
jne
gs
xor
xorb
fwait
mov
jb
dec
push
out
or
mov
lods
adc
hlt
daa
push
fistl
clc
rolb
pop
pushf
pop
cwtl
test
mov
or
roll
lock
pop
fldenv
dec
lea
mov
xchg
jp
rorb
pop
and
in
in
inc
push
or
leave
lods
sub
pop
clc
mov
leave
pop
int3
dec
cltd
mov
lret
lea
test
iret
ljmp
clc
sbb
xchg
cmpl
cmp
jp
dec
lods
mov
lods
inc
cmc
xor
pop
fnstsw
int
mov
fisubrl
sbbl
or
jnp
pop
sbb
push
mov
scas
pop
iret
setbe
or
pop
inc
cmpb
fdivs
lods
cli
enterw
in
aaa
popf
loop
xchg
divl
pop
fstpt
imul
mov
jg
cmpl
scas
shr
hlt
inc
loop
aas
call
sbb
and
dec
ja
or
insl
pop
ss
inc
fxtract
rorb
inc
loopne
aaa
sub
ret
test
imul
cli
loop
xchg
inc
xchg
stos
xor
jg
imull
test
sub
or
sub
and
inc
loop
aas
pop
and
xchg
lahf
add
movaps
jge
es
push
cltd
mov
dec
shlb
fiaddl
test
insl
mov
scas
sbb
dec
cmpsb
add
pop
or
aad
aad
push
hlt
pop
je,pn
scas
mov
leave
push
movb
inc
or
movl
mov
pop
lret
test
adc
pop
pinsrw
fwait
sub
push
mov
xor
imul
cs
es
or
xlat
rolb
bound
cmc
jl
cmp
aaa
pop
mov
fstps
adc
xor
xchg
cmp
rcll
pop
jne
arpl
mov
bnd
adc
into
push
movsl
push
fidivrl
jo
call
mov
mov
adc
pop
pop
orb
pop
jmp
leave
popl
inc
mov
mov
es
push
mov
imul
inc
xchg
or
enter
push
dec
int3
adc
rol
fwait
xor
and
daa
xchg
std
les
pop
jae
mov
pop
add
bound
andb
ds
dec
xor
xor
pop
cmc
xlat
subb
sub
sub
add
mov
mov
xchg
push
out
push
enter
int
jno
push
loopne
pop
cmp
xchg
mov
inc
xor
dec
int
ret
push
lcall
xchg
cmp
fs
xlat
ss
push
sbb
lcall
cmc
and
in
fldl
inc
push
push
aam
lds
imul
popa
roll
or
pop
push
inc
cwtd
out
adc
imul
xchg
stos
subb
sar
mov
hlt
cmp
ret
xchg
fs
mov
push
loopne
lock
enter
sub
icebp
adc
shrl
shrl
push
gs
add
fistpll
out
add
or
pop
std
sbb
and
inc
mov
lock
imul
fstl
mov
and
xor
fldenv
xor
mov
aad
mov
mov
pop
mov
lret
mov
repz
movsl
pushf
mov
or
scas
out
test
das
xchg
cli
or
mov
pushf
mov
out
xchg
adc
clc
stos
sub
outsl
shlb
pop
pop
insb
popf
int3
or
sub
xchg
sub
adc
ja
pop
mov
push
hlt
cmc
rcrl
adcb
mov
aam
sbb
inc
sbb
test
xchg
mov
arpl
aaa
jb
shlb
xor
jmp
jp
xlat
dec
push
out
and
mov
mov
push
addb
push
cltd
or
and
pop
sbb
aas
mov
adc
sub
jecxz
jecxz
jno
mov
das
mov
or
adc
push
ljmp
call
cwtl
fldt
mov
pop
lcall
mov
sub
std
mov
sub
jle
cltd
jg
mov
test
test
enter
pop
ds
aad
mov
inc
jbe
sub
fadd
outsl
and
add
sub
pop
pop
sub
add
and
lcall
insb
cli
in
fwait
or
cmp
push
mov
dec
or
push
dec
xor
mov
jmp
push
sub
out
mov
add
cld
test
push
rcll
mov
cwtl
adc
inc
rcrb
lcall
stc
incl
in
push
imul
pop
add
xor
cmpsb
orl
pop
adc
cwtl
ficompl
or
mov
dec
in
xor
jo
in
jecxz
mov
sbb
cmpsb
pop
out
negl
jl
jg
sub
xchg
xchg
add
push
mov
jo
cmpsl
dec
cmp
or
or
imulb
push
jne
das
jp
xchg
nop
xchg
repnz
ret
cli
cmp
sahf
inc
ljmp
xor
aaa
fsubl
jno
mov
jecxz
cli
in
xor
and
mov
add
fs
and
sbb
es
push
mov
int3
mov
movsb
add
jno
cmp
sbb
inc
roll
cs
sbbb
sbb
in
imul
call
lods
dec
cli
movsb
nop
out
jno
push
int
pop
push
les
add
or
and
ficomps
cmp
adc
jl
cmp
mov
je
enter
mov
dec
lea
inc
popf
lea
daa
iret
lea
lcall
push
xchg
add
and
or
dec
andl
adc
sbb
xchg
jae
sbb
pop
arpl
or
pop
xor
mov
jno
ret
fsubrp
and
fs
stos
fildll
push
nop
push
cmpsb
push
xchg
push
mov
mov
ficomps
outsb
scas
sarb
popa
js
stos
add
jns
jmp
jecxz
ja
xchg
push
dec
ja
and
movsl
test
dec
gs
and
adc
sub
push
es
icebp
mov
push
outsb
cmpsb
dec
mov
xor
and
mov
nop
xchg
je
push
add
repz
and
dec
lods
xor
rclb
mov
push
clc
jl
arpl
mov
push
jae
pop
jns
xchg
and
js
dec
xlat
mov
ficomps
in
mov
push
jno
ljmp
lods
out
add
sub
or
fs
insl
bound
subl
push
adc
scas
int
xchg
ja
aad
mov
sbb
add
xlat
call
or
mov
cs
xchg
lret
add
mov
sub
adc
aam
xchg
jae
pop
pop
mov
in
out
mov
mov
and
scas
inc
sbb
xor
xorl
and
data16
sbb
iret
lcall
fucomi
inc
cli
cmp
cmp
sbb
leave
dec
insl
jle
mov
popl
and
sbb
and
cmp
inc
sti
mov
out
xchg
repnz
inc
imul
stos
mov
aad
outsl
mov
mov
popa
pop
pop
pop
mov
push
sbb
mov
xor
jge
mov
sbb
xchg
test
xchg
mov
push
pop
cld
dec
sbb
mov
out
cmp
push
js
sbb
push
push
call
addr16
add
icebp
add
push
sub
int
pop
jg
dec
clc
mull
mov
xchg
dec
orl
and
test
lea
fnstsw
pop
adc
fs
adc
mov
mov
enter
sbb
testl
push
loop
rcr
sbb
cwtl
push
dec
arpl
or
push
cmp
int3
loope
and
aas
lahf
dec
push
gs
inc
in
ljmp
lret
fcomp
sub
faddl
push
cli
pop
pop
stos
js
pusha
in
jge
adc
adc
or
jo
inc
mov
imul
sbb
or
rorl
lahf
data16
lret
sub
add
sahf
clc
fmuls
lahf
cmp
sbb
jb
cmc
movsl
test
nop
imul
mov
push
test
jae
ja
hlt
pop
inc
mov
pop
orb
gs
mov
into
mov
test
lods
lds
mov
insl
pop
inc
xor
jo
stos
repz
mov
or
push
mov
and
mov
insl
push
mov
or
repnz
ss
lret
fsubrl
add
cmp
or
mov
inc
pop
push
roll
push
icebp
jmp
jno
das
movsl
roll
cmp
push
aad
lret
adcl
cmc
aas
cmp
jae
push
imul
lahf
scas
sbb
push
cmpsb
cltd
cmp
test
mov
pop
jg
popf
jp
push
and
adc
xchg
adc
adc
inc
lock
jg
and
mov
xchg
inc
jae
push
sub
bound
and
mov
inc
lret
outsl
xor
mov
cli
pusha
push
jne
lret
shl
and
ficoms
aas
mov
insb
inc
pop
out
mov
in
gs
mov
daa
xchg
cmpsb
ljmp
pop
and
pop
and
sbb
jbe
mov
in
xor
je
sahf
and
xor
push
pop
jno
ret
aam
inc
jno
xchg
add
ss
test
inc
into
sti
mov
adc
push
repnz
popf
push
sbb
jp
pusha
ret
jbe
xchg
daa
pop
outsb
jp
push
outsb
out
in
popa
fcmovnbe
mov
sbb
ljmp
or
lahf
mov
fs
pop
pop
jnp
xchg
dec
adc
cs
and
scas
xchg
fisubl
push
stos
cld
popf
mov
addr16
data16
sti
xchg
add
xchg
outsb
dec
push
aas
in
stc
mov
addb
sub
and
add
xchg
or
test
pop
pop
movsl
out
jmp
lcall
xor
and
jg
test
jmp
xlat
call
repz
shll
cmp
mov
pop
mov
loop
imul
iret
add
subb
pop
aaa
test
pop
arpl
push
pop
cmpsb
jno
andl
sub
add
lcall
push
or
test
adc
out
push
mov
pop
xor
hlt
insl
push
ljmp
lods
mov
pop
hlt
sbb
dec
aaa
outsl
and
push
scas
push
movsl
outsl
adc
shl
filds
dec
or
push
icebp
mov
fcompl
movsl
mov
pop
sub
scas
aad
pop
mov
or
dec
adc
stos
ret
test
sahf
stc
sbb
xchg
or
or
push
rcr
adc
sbb
shrl
xor
outsl
or
imul
popa
inc
rcrb
add
lcall
out
mov
jb
or
das
int
xor
jbe
into
mov
je
lock
sbbl
cs
sub
ss
jne
xchg
dec
jge
xor
ja
push
sub
int
test
mov
sar
imull
push
push
ret
loope
inc
sti
rol
in
daa
mov
pop
cmc
rorb
sub
xchg
aam
jecxz
cli
dec
add
pop
add
mov
std
fdivrs
xlat
leave
inc
xchg
mov
int
enter
test
mov
and
jno
jp
jmp
inc
clc
push
push
out
and
imul
pop
pusha
pusha
aam
ds
fwait
out
mov
mov
xchg
movsl
in
fimuls
popa
int3
inc
loop
lret
jns
dec
test
fadds
aam
pop
fldenv
jle
imul
lods
dec
icebp
lods
test
icebp
ja
lret
pop
stos
sbb
jl
pop
loop
pushw
inc
xlat
jl
cmp
js
inc
test
jns
jp
add
xchg
lock
cmc
nop
das
fs
nop
mov
mov
hlt
imul
cmp
inc
sub
or
subb
or
movsb
adc
fistpll
adc
and
insl
sub
dec
ret
out
pop
or
pushf
mov
adc
pop
or
mov
xor
shlb
pop
shlb
rolb
and
lds
pshufw
xchg
roll
in
movsl
shll
lret
jmp
mov
pushf
jb
lret
sbb
add
cmpsb
leave
pushf
outsl
or
in
xchg
sbb
aas
pop
pop
das
std
lods
iret
pop
pop
jnp
rcrl
dec
xchg
push
rcl
pop
inc
mov
lret
xor
push
push
mov
sbb
jns
cwtl
inc
xlat
pop
jl
fidivl
fisubrs
dec
cli
iret
xor
mov
mov
sbb
faddp
repz
nop
rcr
inc
cltd
sahf
xchg
pop
cmpsl
hlt
dec
scas
sub
mov
sub
dec
call
outsb
jp
iret
ja
insb
mov
repnz
xor
shl
push
inc
pop
call
push
fiadds
and
cmc
xor
mov
jae
cmpsb
xchg
cli
xor
mov
lret
fsubrp
xchg
and
loopne
cmpsb
clc
shll
ja
xchg
fsub
push
movsl
push
add
dec
aad
push
popf
push
das
mov
pusha
lcall
xchg
mov
outsb
or
outsl
xor
push
loop
pop
leave
fidivrl
incb
sbb
pop
out
dec
push
arpl
cwtl
push
or
dec
lahf
add
out
xor
stos
jae
cmc
pushf
int3
jo
test
pop
inc
ret
cmp
or
pop
inc
fimuls
cmpsb
daa
mov
inc
mov
mov
adc
dec
adc
aas
imull
push
popa
cmp
xchg
pop
mov
sub
les
adc
mov
lea
in
imul
ds
cmpsl
ret
mov
jg
icebp
inc
lcall
xchg
push
adc
call
xor
and
pushf
and
rcrb
std
sub
loop
cmp
cmpsb
lcall
mov
loopne
jp
insl
stos
xchg
rclb
mov
cmpl
push
jmp
xor
imul
mov
ret
imul
push
mov
ja
xor
pop
push
mov
xor
ja
pop
add
les
test
mov
insl
sub
js
jecxz
aam
cmp
xchg
jo
pop
cmp
push
fcmovu
pop
push
dec
inc
hlt
or
movsl
sub
enter
testb
data16
push
mov
jb
repz
push
sbb
push
sub
insl
cmp
das
inc
stos
xchg
push
mov
push
out
adc
into
loopne
and
push
rorb
out
mov
popf
fsubrs
scas
mov
push
arpl
popa
sbb
jbe
iret
negb
dec
lcall
in
subb
cmc
movsb
jae
imul
stos
push
fcmovnbe
fists
int3
push
arpl
in
or
ret
insb
inc
hlt
pop
clc
les
xchg
push
push
push
adc
inc
repnz
pop
pop
jp
aam
dec
mov
jmp
shlb
ss
adc
or
sahf
inc
outsb
cmp
js
dec
jl
cmp
mov
dec
adc
das
xor
nop
xlat
push
mov
aad
xchg
pop
arpl
insl
pushf
les
or
pop
dec
sbb
inc
and
rcrb
xor
ja
inc
and
or
movsb
adc
pop
lock
je
pop
xchg
pop
insb
out
dec
inc
cli
rclb
cwtl
xchg
mulb
cltd
xor
and
outsb
push
movsb
push
ficompl
stos
icebp
ss
or
and
fdivr
mov
sbb
dec
ja
sbb
sbb
fmulp
cwtl
sub
sub
seta
and
jb
push
push
jae
inc
lcall
jge
sahf
clc
and
into
repz
or
dec
aas
dec
xchg
sbb
push
push
push
sub
push
sti
iret
je
dec
pop
out
pop
xor
lods
mov
lahf
push
rorl
hlt
lea
aad
aaa
push
aad
aam
lds
xor
fidivs
out
ds
rolb
enter
adc
ja,pn
pmulhuw
mov
movsl
pop
pushf
pop
lret
sub
lods
in
xchg
jl
pop
mov
cld
icebp
pushf
ss
dec
call
adc
xchg
sahf
ljmp
lea
decb
dec
xor
pop
into
pop
mov
xchg
push
loopne
jne
mov
mov
test
lcall
pop
xchg
clc
xchg
stos
pop
push
inc
push
sub
mov
aad
and
jp
jp
fiadds
ja
popa
lock
push
or
and
inc
icebp
js
cli
cmp
mov
popa
lret
daa
jbe
mov
mov
and
mov
mov
jmp
clc
cmpl
xchg
mov
mov
les
sub
sbb
loop
xor
mov
je
or
or
sahf
pop
mov
push
cmp
stc
cmpl
adcb
dec
loope
sarl
cmp
push
jmp
shll
mov
ss
mov
mov
loop
popa
adc
mov
stos
pushf
data16
movsb
das
jl
stc
out
jp
movsl
xor
pop
jge
xchg
in
xor
dec
repz
cli
mov
jb
imull
in
inc
and
sarb
int
sub
pop
js
cld
xchg
sub
rclb
dec
xchg
lock
adc
jg
pop
sub
test
ds
inc
sbb
out
or
or
or
mov
sbb
dec
lds
fisttps
lret
imul
xor
in
cmp
jge
sub
sub
das
idivl
rcrl
jae
pop
nop
push
mov
or
imul
orb
push
sbb
pop
rclb
and
ret
scas
lret
xor
sbb
fnsave
mov
fldcw
imul
and
adc
xor
or
sub
fcoml
push
test
pusha
or
or
cmp
cli
jl
ds
outsl
pop
andl
test
fistl
loope
add
adc
add
pushf
fstps
je
bound
and
and
xor
imul
jle
jb
mov
stc
sbb
fwait
hlt
xor
fwait
xchg
fcomps
mov
or
mov
sub
inc
sub
mov
add
cs
cmpsb
and
inc
jae
dec
sub
inc
mov
mov
addl
lret
adcb
mov
pop
sahf
out
mov
ja
or
mov
push
mov
loope
inc
lcall
mov
rcrb
cmp
aaa
lock
mov
push
loopne
mov
xchg
shr
out
xchg
pop
out
xchg
repz
test
sahf
xchg
mov
xchg
out
push
sbb
dec
scas
outsl
fiadds
outsl
fstps
jne
mov
cs
mov
sub
dec
xchg
lahf
inc
das
xor
fld
push
mov
sar
pop
adc
popf
cmp
mov
mov
fiadds
jge
mov
ret
and
adc
mov
dec
imul
cmp
mov
mov
mov
jmp
push
and
je
inc
negb
int3
jbe
inc
enter
mov
mov
xchg
mov
jno
lds
ds
or
mov
pop
xchg
pushw
out
lods
fldl
aaa
mov
mov
add
insb
ljmp
insl
std
out
jnp
or
pop
add
inc
lds
pop
inc
push
outsl
notb
jl
mov
daa
lds
push
push
lcall
ret
sub
adc
jmp
mov
sbb
inc
minps
or
stos
psadbw
hlt
inc
rcll
repz
int
inc
mov
jmp
lahf
pop
jb
fstl
aaa
sbb
out
fadd
inc
push
das
cmpsb
lea
clc
nop
movb
mov
adc
dec
loope
sub
call
or
test
dec
lock
push
dec
push
ds
jl
inc
outsl
xchg
negl
mov
push
push
mov
xchg
push
lods
lock
std
sbb
cmpsl
push
dec
mov
cmpsl
std
xor
shrb
and
fcomps
or
or
dec
add
sub
mov
pop
jbe
icebp
fidivrs
xor
es
xor
cli
and
dec
in
jp
cmp
jo
cmpl
out
fidivl
test
mov
xlat
das
xchg
cmp
lock
pop
jle
cmpb
push
jge
cmp
in
sbb
shrl
or
sbb
jg
adc
es
arpl
cld
lcall
fs
test
or
repz
jle
mov
popf
mov
sbb
sbb
int3
inc
ja
pop
dec
ret
mov
roll
lea
repnz
pop
in
push
and
xchg
clc
sub
movsl
pop
push
es
ret
mov
test
push
insl
jge
in
les
in
inc
push
push
sub
jns
mov
xchg
cmpsl
fiadds
mov
mov
scas
idivl
pop
add
push
mov
mov
push
scas
cmp
stc
adc
test
lahf
and
cmp
jle
sbb
stos
mull
mov
fcoms
out
jp
jo
es
dec
dec
push
lret
jle
dec
sbb
adc
adc
xorl
cs
lods
push
outsb
pop
cmp
pusha
or
mov
cmp
les
and
push
stos
js
lahf
dec
repnz
jnp
test
mov
hlt
stos
addr16
cwtl
xchg
push
aad
ljmp
testb
aam
mov
hlt
test
mov
or
push
xor
mov
sbbl
add
sbb
cmp
stc
test
jecxz
mov
lahf
rcll
mov
cmp
dec
dec
lods
nop
add
jle
add
or
mov
lods
idivl
mov
cmp
push
inc
add
sbb
mov
jmp
inc
stc
leave
fdivrl
imul
imul
mov
and
aam
xor
sbb
fcomp
dec
daa
pop
push
in
call
test
lahf
aad
clc
pop
sub
push
ljmp
cmp
push
lock
call
dec
daa
lret
push
xor
jg
leave
int3
arpl
sbb
fmuls
mov
xor
jmp
mov
std
add
cwtl
mov
inc
clc
fidivrs
pop
or
and
push
test
xchg
icebp
outsb
xlat
fstl
xchg
in
out
pop
leave
les
dec
push
into
sub
cmpl
pop
adcl
cmpsb
out
cmp
aaa
mov
mov
sbb
and
jno
mov
mull
leave
enter
int3
stos
mov
add
hlt
add
adcl
push
xchg
jg
stos
hlt
push
sahf
cmpl
xchg
cmc
and
outsl
push
jmp
dec
sbb
in
mov
and
or
loope
push
ffreep
jae
and
pop
ja
push
arpl
outsb
ljmp
bound
push
ss
cmc
aas
lods
nop
xchg
ret
sub
jns
ret
jle
dec
mov
push
pop
call
push
inc
and
cld
addr16
jnp
jmp
add
sub
jge
jbe
jmp
mov
out
lcall
js
loop
mov
pushf
cmpsb
inc
out
arpl
fwait
sub
js
mov
fbld
or
dec
das
and
or
mov
sub
mov
rolb
cmp
stos
push
jnp
or
mov
jp
or
dec
and
jb
add
or
insb
add
les
sub
dec
push
xchg
jo
mov
test
aad
jns
jnp
push
add
fdivrs
xchg
enter
dec
inc
lds
sbbl
loop
sbb
sti
mov
shl
pop
push
test
inc
insb
xchg
push
mov
jmp
repnz
push
push
daa
xchg
sbb
insl
mov
and
push
add
pop
aaa
fwait
mov
sbb
and
xchg
pushf
or
fwait
aam
cmp
mov
imul
push
in
cmp
cmp
inc
ret
leave
jno
mov
xchg
adc
js
fimuls
mov
mov
popa
adc
test
notl
and
adc
xor
jp
in
inc
jecxz
cmp
dec
and
pop
subb
pop
fisttpl
in
lds
push
lea
leave
sarb
mov
out
sub
sub
adc
mov
inc
repnz
hlt
jge
popa
ds
sbb
shlb
sub
dec
pop
push
push
out
pusha
dec
clc
ljmp
xchg
lcall
in
jo
imul
cmc
ret
push
shrl
mov
add
bound
dec
out
out
push
mov
gs
call
sbb
loop
fistl
mov
push
aad
sub
and
mov
sbb
mov
shll
sbb
sub
ficoms
inc
or
lock
ljmp
sub
cld
cmp
push
sti
shl
xchg
sbb
adc
cld
sti
push
or
loop
icebp
loope
xchg
icebp
mov
insl
sbb
subl
jg
loope
cmc
dec
insb
or
xchg
std
repnz
loope
test
bound
mov
pop
inc
mov
push
inc
push
inc
daa
push
arpl
jb
filds
popa
sub
outsl
cmc
lret
cmpsl
and
mov
xchg
or
jae
fwait
test
mov
jae
ret
lock
stos
xorl
push
jle
aaa
cmpsl
sub
leave
std
dec
add
or
outsl
xchg
cmp
lea
push
cmpsl
push
inc
mov
pop
xchg
stc
mov
cmp
jp
pop
mov
xlat
add
negl
in
xchg
popa
add
sbb
std
in
and
cmp
das
add
xchg
ss
cld
cmp
cwtl
dec
adc
insl
imul
cmp
aad
out
mov
scas
lret
std
and
mov
pop
ss
inc
aas
add
pop
scas
repnz
lods
adc
loope
loop
add
mov
mov
sahf
jmp
je
add
add
ret
push
aas
jecxz
and
int
cmpsl
fisubl
xor
aaa
aam
mov
in
adc
in
pop
jl
mov
sbb
leave
xchg
sub
mov
xor
cmp
insb
aas
enter
movsb
inc
ljmp
jae
jns
dec
add
out
xchg
xor
xor
fldt
cli
sub
aas
mov
xor
cmc
jae
test
ror
movsl
cld
push
push
call
pop
jmp
jecxz
call
shr
or
add
jmp
xor
pop
pop
pusha
call
mov
add
call
call
call
lea
lea
xor
call
call
push
push
push
push
call
mov
jmp
adc
add
adc
pushl
pushl
pushl
call
popa
add
cmpl
jne
lea
cmpl
jne
xor
pusha
jmp
mov
mov
mov
call
lea
push
or
jne
push
jmp
push
push
push
call
add
cmpl
jne
inc
or
je
add
mov
popa
mov
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pusha
pushl
push
pushl
call
popa
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
mov
movl
jmp
pushl
pushl
call
test
je
call
movl
mov
add
mov
jmp
inc
cmpb
jne
inc
call
mov
cmpw
je
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
push
push
pushl
call
call
call
popa
jmp
cmpl
je
sub
add
push
mov
mov
pop
ret
push
mov
cmpl
je
sub
add
pop
ret
push
push
cmpl
je
mov
mov
sub
add
pop
pop
ret
push
cmpl
je
mov
sub
add
pop
ret
pusha
cmpl
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
jp
adc
xchg
add
imul
gs
xor
cs
insb
add
cmpsb
adc
shll
add
cmpsb
adc
in
cmpsb
adc
add
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
add
or
add
push
push
mov
jmp
inc
cmpb
jne
jmp
dec
cmpb
je
cmp
jne
cmpb
jne
pop
inc
jmp
pop
pop
ret
cmpl
jne
mov
jmp
mov
jmp
xor
push
push
push
push
call
mov
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
or
jne
push
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
jmp
cmp
jne
push
pushl
lea
push
pushl
call
add
push
lea
push
pushl
push
call
push
push
pushl
call
popa
ret
pusha
cmpl
jne
pushl
pushl
call
mov
call
movl
call
lea
mov
mov
lea
push
pushl
mov
mov
xor
xchg
popl
add
popa
ret
push
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
leave
ret
pusha
lea
push
call
mov
lea
push
call
mov
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
lea
push
push
push
call
or
jne
lea
push
push
push
call
jmp
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
popa
popa
pop
ret
popa
ret
pusha
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
push
push
push
push
call
mov
push
push
push
call
push
push
push
push
push
push
pushl
call
cmp
je
mov
call
push
pushl
call
mov
push
push
push
push
call
mov
push
lea
push
push
push
pushl
call
cmp
jne
mov
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
cmp
je
cmpl
jne
pushl
pushl
call
push
lea
push
lea
push
push
call
push
call
push
push
pushl
call
cmpl
je
cmpl
je
pushl
call
jmp
call
popa
ret
push
push
pushl
call
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
call
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
lea
push
lea
push
push
call
cmp
jne
push
pushl
call
push
call
popa
mov
leave
ret
push
mov
add
pusha
mov
movl
mov
mov
cmpl
jne
movl
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
jmp
cmpl
je
cmpl
jne
push
pushl
call
jmp
cmpl
jne
cmpl
jne
push
pushl
pushl
call
push
pushl
call
popa
mov
leave
ret
pusha
call
mov
pushl
pushl
call
mov
lea
push
push
push
lea
push
push
push
call
popa
ret
pusha
mov
lea
mov
mov
jmp
call
lea
push
push
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
mov
pusha
push
lea
pushl
pushl
call
push
pushl
push
call
lea
mov
add
jmp
dec
cmpb
jne
inc
pop
jmp
movzbl
mov
inc
inc
cmpb
jne
movb
popa
lea
pushl
push
lea
push
pushl
call
add
pushl
push
call
or
je
push
lea
push
lea
push
push
call
push
call
jmp
push
call
or
jne
push
lea
push
lea
push
push
call
push
call
incl
cmp
jbe
movl
pushl
call
popa
ret
pusha
lea
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
add
mov
mov
jmp
inc
cmpb
jne
inc
inc
cmp
jb
push
lea
push
pushl
call
add
pushl
pushl
call
lea
mov
pushl
pushl
lea
push
pushl
call
add
pushl
pushl
call
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
push
lea
push
pushl
call
add
pushl
pushl
call
popa
ret
pusha
mov
jmp
push
call
or
jne
push
call
or
jne
call
jmp
inc
cmpb
jne
inc
cmpb
jne
popa
ret
pusha
cmpl
je
cmpl
jne
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
jmp
jmp
movl
mov
add
jmp
pusha
mov
xor
jmp
inc
inc
cmpb
jne
repz
jne
movl
popa
jmp
inc
cmpb
jne
inc
cmpb
jne
cmpl
jne
jmp
mov
mov
inc
inc
cmpb
jne
mov
incl
popa
ret
pusha
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
push
push
pushl
call
popa
ret
pusha
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
call
popa
ret
pusha
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
lea
mov
jmp
movzbl
mov
inc
inc
dec
cmp
ja
push
call
push
lea
push
push
pushl
push
call
mov
xor
cltd
jmp
mov
rol
xor
inc
cmpb
jne
cmp
jne
mov
cltd
jmp
mov
rol
xor
inc
cmpb
jne
mov
mov
cmp
jbe
cmp
jbe
cmp
jbe
jmp
xor
xor
rol
inc
dec
cmp
ja
jmp
push
lea
push
lea
push
push
call
popa
popa
pop
ret
call
popa
ret
pusha
cmpl
jne
call
mov
pushl
push
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
cmpl
jne
pushl
pushl
call
mov
cmpl
jne
pushl
pushl
call
mov
lea
push
call
pushl
push
call
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
popa
ret
pusha
mov
mov
or
jne
movl
cmp
jne
cmp
jbe
movl
popa
ret
pusha
cmpl
jne
pusha
push
push
mov
imul
add
push
push
call
mov
popa
mov
cmp
jne
mov
rdtsc
mov
cmpw
jne
movl
add
add
movb
inc
movb
movb
xor
xor
rol
add
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
add
mov
popa
push
xor
cmpw
jne
mov
mov
sub
sub
pop
ret
jmp
popa
ret
pusha
call
call
call
mov
lea
mov
jmp
pushl
pushl
call
mov
add
dec
cmp
ja
movl
lea
push
call
cmpl
je
cmpl
je
call
or
je
mov
cmpl
jne
cmpl
je
lea
push
push
call
mov
cmpl
jne
movl
cmpl
je
cmpl
jne
mov
add
mov
cmp
jne
movl
mov
mov
mov
cmpl
je
movl
mov
lea
push
push
push
push
push
push
push
call
cmp
je
movl
inc
cmpb
jne
inc
dec
jne
popa
ret
pusha
cmpl
je
cmpl
jne
cmpl
jne
pushl
pushl
call
mov
push
lea
push
lea
push
push
call
popa
pop
popa
ret
popa
ret
pusha
push
call
push
lea
push
push
push
push
call
pop
lea
mov
add
sub
jmp
movb
dec
cmp
ja
popa
ret
pusha
mov
test
js
mov
mov
addl
jmp
push
call
test
jns
cmpl
jne
mov
addl
popa
ret
pusha
lea
mov
xor
cltd
jmp
mov
rol
xor
inc
dec
cmp
ja
lea
mov
jmp
xor
rol
inc
dec
cmp
ja
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
lea
push
call
mov
popa
ret
pusha
mov
mov
add
mov
add
mov
add
xor
lea
mov
add
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
xor
jmp
mov
add
movzwl
mov
add
mov
add
mov
popa
ret
add
add
add
inc
add
xchg
inc
ja
icebp
clc
or
jg
icebp
lret
imull
sbb
nop
xchg
or
xchg
js
or
push
scas
xlat
lock
jne
gs
xor
fs
insb
add
jb
jb
add
insb
and
popa
gs
and
data16
and
and
jb
jae
add
jne
and
je
insb
outsl
popa
and
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jae
gs
outsl
jb
and
jae
fs
outsb
popa
insl
imul
and
jb
jb
and
inc
outsl
jne
and
je
imul
jb
imul
jo
jb
cmp
imul
and
outsb
popa
insl
imul
and
jb
jb
and
inc
jo
insb
imul
and
and
jb
popa
fs
jb
outsb
outsb
imul
outsw
cmp
push
popa
jb
imul
jae
ja
jb
and
jne
push
outsb
je
jb
and
and
je
jbe
imul
jns
jne
ja
outsb
je
je
and
outsb
arpl
and
and
insb
and
outsb
insb
outsl
popa
fs
or
outsb
imul
jo
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
add
jne
and
je
outsl
ja
insb
outsl
popa
and
jae
gs
jb
and
fs
insb
and
insb
sub
and
arpl
jae
cmp
sub
pop
outsl
jne
popa
jb
and
je
arpl
outsb
arpl
and
imul
je
or
sub
inc
imul
outsb
outsl
je
bound
outsw
jne
and
and
insl
outsl
je
and
jb
gs
or
sub
pop
outsl
jne
and
jb
ja
insb
insb
and
jae
bound
imul
popa
arpl
jae
and
imul
je
or
arpl
popa
jo
insb
imul
and
outsb
and
je
jb
outsb
and
je
outsl
jne
and
jae
gs
jb
and
fs
insb
and
insb
gs
and
outsl
addr16
insl
and
insb
insb
and
ja
arpl
and
inc
outsl
ja
insb
outsl
popa
fs
fs
insb
and
insb
and
and
jb
jne
je
popa
outsb
and
outsb
and
je
bound
insb
outsl
popa
fs
popa
jae
and
jae
popa
jb
and
jae
popa
jo
imul
and
and
and
insb
and
outsb
and
and
outsb
insb
outsl
popa
fs
popa
imul
add
add
add
imul
add
xchg
jb
cmp
push
dec
pushf
adc
clc
or
add
add
pop
push
dec
inc
inc
add
pop
push
dec
push
push
dec
inc
add
pop
dec
push
dec
inc
inc
add
pop
push
inc
inc
push
pop
push
add
pop
push
inc
inc
push
pop
inc
add
pop
inc
dec
dec
inc
push
pop
inc
add
pop
inc
dec
dec
inc
dec
add
pop
push
push
push
add
pop
dec
inc
inc
inc
pop
push
add
jne
addr16
fs
arpl
and
sub
popa
jae
and
outsl
jae
and
and
outsb
and
and
jae
popa
jb
and
outsl
ja
and
and
gs
cmp
push
insb
gs
jae
and
je
and
je
push
and
and
outsb
dec
arpl
push
outsl
data16
arpl
or
jb
imul
je
insb
insb
gs
popa
outsb
jae
je
popa
je
jns
jne
popa
jb
and
outsb
outsb
imul
bound
addr16
add
add
add
insb
insl
outsl
outsb
cs
insb
add
movsl
out
test
aam
or
sub
adc
pushf
inc
cld
call
mov
and
lock
add
add
inc
add
add
xor
push
bound
je
cmp
and
ja
insb
outsl
popa
imul
add
insl
jo
gs
cmp
and
jb
outsb
je
inc
imul
and
inc
add
inc
add
fwait
inc
add
fwait
inc
add
add
or
ret
pusha
mov
mov
mov
cmp
jbe
cmp
jbe
mov
cltd
mov
imul
div
jmp
xor
lea
call
popa
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
inc
add
ja
outsb
add
add
add
add
add
add
add
outsb
add
add
mov
add
add
add
add
add
jae
or
add
incl
add
outsb
add
add
add
outsb
add
and
outsb
add
jae
jae
add
popa
add
jns
and
add
add
add
imul
jae
add
add
mov
pop
add
push
add
add
add
add
add
add
incl
add
outsb
add
add
add
add
jb
outsl
add
jb
add
jae
and
add
add
mov
add
add
add
add
add
add
add
add
add
incl
add
push
add
je
add
add
add
add
push
add
add
or
and
into
add
add
incl
add
outsb
add
add
add
outsb
add
cmp
add
add
mov
add
add
add
add
add
add
or
add
add
outsl
add
jo
insb
add
je
add
add
add
add
push
add
add
daa
add
add
or
push
add
incl
add
add
add
add
add
add
push
add
add
popf
add
add
push
add
add
incl
add
arpl
add
add
add
add
lret
add
add
add
add
mov
and
add
add
push
add
jae
jae
ja
outsl
add
add
add
add
add
add
outsb
add
add
mov
pop
add
push
add
add
add
add
mov
push
add
add
incl
add
add
and
jo
popa
add
jae
ja
outsl
add
add
add
add
push
add
add
push
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
add
add
add
push
add
add
sub
or
add
add
incl
add
push
add
add
test
or
sub
push
add
add
incl
add
add
imul
add
add
add
test
add
mov
inc
add
and
add
mov
add
push
add
loopne
add
add
add
cltd
add
add
inc
add
add
add
add
add
add
jge
or
add
inc
add
add
add
and
add
add
es
add
add
dec
add
add
add
jmp
add
add
adc
test
pushf
stc
sbb
test
inc
and
dec
dec
push
ret
icebp
aaa
out
xlat
pop
int3
sbb
sub
inc
jne
jmp
jp
adc
adc
mov
popa
or
push
jp
das
push
popa
xor
mov
adc
adc
stc
sbb
add
or
or
and
cmp
add
les
mov
dec
mov
xchg
or
insb
ss
mov
jp
push
jns
lods
mov
in
adc
xor
mov
and
jmp
mov
ds
push
in
sbb
mov
adc
push
out
xor
pop
jae
fsubrs
fcmovnbe
sub
decl
jno
or
cli
mov
pop
addb
lea
cltd
out
out
jl
mov
and
inc
xchg
adc
push
cmp
xchg
psubd
mov
push
stos
dec
rorb
jg
leave
inc
data16
mov
jae
or
gs
mov
mov
or
pop
cmp
je
push
dec
dec
inc
add
mov
aas
lahf
or
das
in
int3
jno
hlt
mov
fsubrl
popf
dec
push
scas
iret
add
adc
imul
mov
pop
or
ror
inc
jno
sbb
jecxz
adc
or
mov
mov
adc
mov
lea
movsb
dec
mov
imul
incb
es
jl
xchg
jmp
lods
out
iret
jno
scas
mov
jnp
test
sbb
or
or
push
push
in
mov
mov
xchg
hlt
pop
stos
subl
adc
pop
cvtpi2ps
je
inc
loope
mov
xchg
nop
and
mov
inc
xor
lods
jle
push
xchg
push
inc
cltd
in
enter
add
and
cmp
nop
std
mov
lock
loop
sub
xor
ds
subb
push
jnp
xor
inc
pop
jl
je
icebp
mov
pop
outsl
shl
insl
repnz
mov
push
nop
or
mov
jg
add
push
adc
jmp
sbb
xor
gs
dec
mov
in
ret
push
cmp
cwtl
dec
int3
outsb
ds
push
popa
hlt
stc
push
jae
adc
mov
in
loope
ret
pop
jns
clc
movsl
test
insb
and
and
xchg
popf
mov
leave
push
mov
dec
mov
daa
or
testb
mov
fcmovu
sub
shll
int3
adcb
into
mov
cmpsl
sbb
cli
scas
int
ret
pop
fwait
call
imul
pop
dec
cmp
call
sti
or
outsb
mov
lret
xchg
fdivs
mov
out
mov
push
xchg
cmpsb
sub
and
fucomi
push
shrb
xchg
popf
testb
jl
sbbl
sub
shll
gs
pop
fwait
scas
sub
test
push
dec
int3
loop
adc
sub
lods
xchg
call
jae
mov
xchg
push
or
bound
addr16
cmc
mov
lret
lahf
enter
push
jecxz
aaa
mov
pop
aaa
negl
or
loope
std
fiadds
mov
add
adc
or
cltd
add
jb
rorl
loop
aaa
pop
inc
out
push
inc
push
aaa
push
sub
inc
cwtl
loopne
lret
ficoms
jb
dec
cld
aas
mov
xor
pop
xor
add
xchg
or
daa
js
cli
test
in
xor
popf
bound
shlb
mov
adc
mov
sahf
mov
xchg
mov
mov
bound
push
cmp
xor
xor
add
rcrl
pop
loopne
mov
cmp
cmp
jecxz
bound
stos
loop
jg
dec
testb
cmpb
lds
je
shl
sbb
stos
sbb
and
loopne
mov
or
shrl
jne
push
das
add
add
xchg
aam
clc
test
sarb
iret
push
xor
mov
xchg
push
adc
.byte
