roll
popa
call
pushf
outsb
cmc
cli
pop
lea
aad
pop
insb
mov
ds
testb
mov
xchg
addb
sub
jae
and
iret
bound
mov
push
cmp
cmpsl
lcall
lret
mov
ror
test
outsb
stos
jns
and
decb
ficoms
pusha
sti
xor
adc
cltd
pushf
insb
cli
subl
test
sub
push
daa
repz
movsl
popl
dec
cmc
int3
mov
movsb
or
in
dec
int
adc
push
mov
mov
cmp
jno
mov
push
jecxz
or
and
pop
icebp
cmpsb
out
push
repnz
stc
push
orb
cmpl
xchg
lret
or
int
neg
dec
mov
dec
pop
mov
xchg
adcl
pusha
in
aad
mov
cmp
mov
jp
and
sarb
cltd
add
lcall
mov
pop
sbb
ljmp
test
dec
mov
and
sbb
in
sahf
jmp
into
jno
inc
and
xor
les
push
dec
add
pop
cs
xchg
aaa
test
fists
sarl
stos
inc
push
xchg
xlat
dec
sub
and
jno
push
es
sub
cmp
jae
adc
cmp
mov
mov
shl
outsl
addr16
sarl
mov
jno
std
lret
dec
es
lea
add
mov
inc
aam
mov
movsb
fidivs
leave
jmp
jo
jg
jle
push
mov
data16
xor
mov
in
pop
into
push
cwtl
imul
mov
aam
xchg
arpl
cmp
hlt
loope
jo
cmpb
xor
mov
test
xor
pop
mov
aaa
adc
adc
sbb
add
inc
sarl
sub
xchg
or
dec
cmp
sbb
pop
pop
mov
fistps
cmc
or
aaa
xor
sub
inc
lea
iret
adc
cwtl
fs
pop
and
add
aas
repz
fisubs
mov
and
pop
dec
int
jp
push
or
test
dec
cmpsl
or
call
pmulhw
aaa
mov
dec
xor
cmpsb
cmp
push
cmp
in
sub
scas
or
push
push
sub
cmpsb
push
and
mov
jnp
sub
inc
aas
pop
mov
jecxz
sub
jmp
aam
das
push
xor
mov
es
add
mov
sahf
add
cmpsb
xchg
push
xchg
movl
call
aad
push
or
jge
std
sub
mov
in
mov
pop
adc
cltd
arpl
mov
arpl
pop
pop
mov
cli
das
notb
fcmovb
loope
pop
repnz
clc
mov
scas
fsubrs
je
cwtl
adc
xchg
push
scas
lcall
jb
inc
or
es
call
aam
fldt
pop
cmp
aad
or
jl
jo
int
leave
nop
mov
aas
imul
shlb
aad
cmp
fcomi
dec
push
push
fs
rcr
sti
inc
in
inc
mov
imul
fwait
into
icebp
inc
mov
or
mov
push
pushf
mov
fidivl
sub
lock
push
sbb
dec
or
daa
sti
aam
or
push
adc
lahf
inc
pop
push
dec
daa
shrl
mov
lret
cmpb
dec
push
pop
je
rcll
fsubrl
push
xchg
scas
js
mov
or
add
into
mov
jle
inc
push
enter
pop
das
mov
mov
mov
fdivrs
sub
in
xchg
jo
push
imul
and
int
mov
jecxz
pusha
in
in
xor
dec
dec
icebp
xchg
or
lock
int
jecxz
dec
scas
lret
ret
xor
adc
mov
jmp
pop
mov
bound
sbbl
push
and
sbb
inc
scas
mov
sbb
xchg
mov
sub
imul
mov
push
in
push
and
leave
js
ror
mov
pop
in
test
in
out
aad
xor
jmp
sbb
push
test
fidivl
jb
sbb
cmc
test
adc
popf
cmp
lcall
push
test
rcrb
fucomip
sub
mov
rorl
add
dec
push
inc
stos
pop
cmpb
mov
mov
cmc
and
mov
mov
movsb
out
icebp
rol
and
xchg
xchg
fwait
bound
sbb
mov
add
add
push
test
ret
sub
adc
sbb
mov
enter
ja
sub
in
fisttpll
jecxz
jno
mov
scas
push
mov
scas
mov
daa
js
xchg
pop
icebp
sub
xor
imul
jg
dec
xor
aas
lods
mov
lcall
or
cld
jo
jmp
fcmovne
and
sub
and
out
fisubrl
inc
out
mov
sbb
jmp
cmp
mov
fldcw
ljmp
mov
inc
sbb
cmp
add
mov
push
pop
decb
add
inc
in
ficompl
adc
cli
test
ljmp
jae
dec
cmpsl
mov
xchg
ret
inc
stos
imul
aam
imul
add
and
push
mov
mov
test
stos
out
or
or
jl
bound
sub
inc
add
fcmovb
je
add
sbb
push
movsl
sub
nop
sti
and
cmp
mov
aaa
jae
aas
push
ret
sub
enter
fwait
ret
push
cmp
add
mov
and
orl
cs
arpl
test
nop
adc
ss
lret
nop
int
scas
lret
push
dec
cltd
mov
cmp
xchg
int3
xchg
mov
in
mov
insb
add
sub
pop
add
mov
and
and
mov
add
in
fcoml
or
dec
mov
inc
jae
or
call
pop
test
pop
push
mov
and
nop
and
sub
xchg
leave
mov
cld
sub
pop
mov
sbbl
jge
in
mov
int3
js
xchg
gs
sar
testb
insb
lods
popa
andb
and
jbe
movsb
nop
orb
cmp
cmp
dec
faddl
push
mov
push
mov
pop
mov
sahf
test
dec
and
clc
lret
stc
sbb
enter
jo
and
sub
dec
or
outsb
push
cmp
out
sbb
inc
push
push
pop
in
jge
inc
insl
pushf
addb
jns
pop
xor
dec
scas
add
lods
int3
mov
arpl
or
push
loopne
inc
repz
movsb
incl
scas
lods
jle
pop
sbb
aam
pop
add
aam
das
fisttps
mov
add
cli
ss
lret
outsl
divl
jl
fs
out
out
icebp
lea
loope
cs
mov
add
rorb
cli
fs
push
push
adc
gs
cmc
ret
mov
mov
sar
lret
mov
movsl
adc
stos
sbb
enter
cmp
stos
or
gs
mov
fadd
pextrw
xorl
xchg
jne
dec
push
faddl
loopne
lods
lods
pop
dec
inc
lods
nop
and
ljmp
andl
aad
popf
lods
pop
cmp
mov
push
rcr
push
pop
xor
add
push
pop
xchg
icebp
pop
imul
iret
mov
sub
ja
jmp
addr16
xorl
fisttps
cmpsb
fisttpll
pop
cmp
lods
or
and
aad
ljmp
inc
or
loope
xor
push
pop
lock
adc
or
fistps
push
bound
xor
jne
xchg
sub
in
enter
mov
bound
loopne
lret
lds
mov
scas
icebp
in
cmc
test
sti
and
rol
sbb
mov
in
js
push
jecxz
jns
insb
push
xor
repz
test
inc
inc
repz
test
clc
xor
xor
dec
and
ss
dec
arpl
add
negl
test
scas
shll
xchg
std
jle
add
cmp
cwtl
dec
jle
lea
xor
insl
lcall
push
lods
mov
test
dec
jg
xchg
or
or
push
mov
je
add
ljmp
out
cmpsb
push
idiv
jle
stc
jb
mov
inc
or
push
jae
aad
dec
push
jne
and
push
dec
loop
aam
add
out
jecxz
push
adc
xor
sub
pop
pop
mov
dec
leave
loopne
pop
xchg
mov
adc
mov
pusha
loopne
adc
lods
out
popl
popa
and
arpl
stc
movsl
mov
sub
lods
sub
mov
sub
push
xor
pop
shr
mov
jmp
je
xchg
in
dec
jae
mov
insl
pusha
shl
add
icebp
loopne
cmpsb
fcmovb
fcmovnu
fistpll
test
lds
mov
or
aam
cmp
sub
int
lret
lret
adcb
mov
movsl
jne
jg
dec
cmpsl
pushf
subl
or
fidivl
mov
out
pop
mov
sbb
cmp
andl
loope
mov
in
mov
scas
imul
ja
fldt
sub
add
test
pop
cmc
sbb
sbb
adc
sub
pop
lock
and
or
ja
fsubrl
ja
adc
outsl
jb
dec
inc
fabs
xchg
add
sub
cmp
stos
sarb
ja
pop
lds
xor
mov
test
loopne
cwtl
mov
mov
stos
std
out
pop
jge
cmpsb
inc
into
mov
xor
or
mov
cmp
push
inc
outsl
and
mov
frstor
dec
adc
xchg
mov
enter
movsl
jbe
stos
pop
adc
loopne
dec
shl
testb
jne
rcrb
lds
scas
or
sbb
push
insl
pop
sarb
jb
stc
sbb
cli
push
adc
mov
cmpl
divb
cmp
cmp
xchg
outsl
jecxz
push
sbb
adcb
dec
cmp
mov
dec
xchg
stc
adc
mov
adc
sbbb
stos
mov
mov
aas
imul
pop
push
adc
push
mov
mov
or
push
movsb
mov
lcall
lcall
mov
in
sub
cld
rorb
pcmpeqd
sbb
adc
mov
idivb
negl
in
lret
mov
iret
and
sub
stos
bound
inc
test
jecxz
dec
insb
push
mov
push
cmpsb
push
sbb
mov
divl
stos
pop
mov
push
inc
pop
or
pop
movsb
add
in
bnd
jnp
or
imul
shll
mov
mov
dec
punpckhbw
xor
jp
jmp
insl
xchg
cmp
jae
or
sub
les
cli
push
ficompl
rcrb
sti
repnz
test
add
or
pop
mov
and
sbb
add
mov
aaa
and
xor
out
loopne
outsb
je
push
movsl
ds
pop
inc
hlt
mov
addr16
pop
hlt
fmull
mov
xor
and
test
stc
std
imul
mov
jg
insl
test
push
rclb
jbe
in
negb
pushl
cwtl
push
in
or
cld
xor
cmp
xchg
adc
test
pop
xchg
sti
jns
inc
dec
lret
add
mov
dec
pop
stos
cmp
adc
lret
xchg
pop
stc
sub
es
lods
xlat
ja
jg
xor
push
mov
ret
and
jb
mov
jge
out
xchg
std
xor
adc
xlat
inc
xor
cs
std
outsb
outsl
mov
popa
pop
mov
stos
cmp
ret
fcoml
sub
lahf
loop
es
in
popa
mov
jno
mov
lret
inc
in
xchg
dec
cld
shlb
inc
cmpb
mov
leave
inc
scas
ret
and
fcmovne
adc
dec
je
mov
pusha
fdivl
dec
sarl
sbb
or
fs
mov
stc
jb
imul
stos
test
cmc
push
dec
repnz
inc
cmpsb
cwtl
mov
repnz
cltd
sub
fimuls
neg
nop
lock
add
sbb
divb
mov
inc
sub
fdivs
jae
inc
fstpt
xor
call
sahf
scas
mov
das
xor
and
pop
aam
roll
movsl
xchg
imul
psrad
cwtl
add
insl
jmp
lret
pop
pop
push
lods
push
jge
insb
sti
dec
outsl
into
jmp
test
push
in
cmpsb
xor
call
mov
aas
or
out
je
pop
add
mov
repz
sbb
lea
sbb
and
pop
mov
or
andl
ds
dec
cmc
mov
xchg
mov
pusha
mov
rclb
lods
jg
dec
cmp
arpl
enter
lret
inc
inc
add
outsl
add
outsb
pushf
sub
pushf
sub
cmp
lret
dec
mov
in
sub
outsl
inc
xor
scas
into
out
jo
frstor
test
and
pop
adc
insb
bound
iret
jp
outsl
test
or
scas
cmp
mov
movsb
pop
jmp
cmp
out
stos
ss
in
loope
out
das
inc
mov
cwtl
mov
mov
pop
xchg
push
dec
fdivrs
inc
aaa
nop
sbb
cmc
call
test
push
add
xor
outsb
orb
inc
mov
pop
or
cmp
jge
daa
lock
pop
mov
adc
loope
sub
add
scas
adc
or
add
in
or
outsb
cmc
jge
sub
cmc
pop
xor
in
mov
or
sti
cmp
incl
movsb
shrb
xor
rol
xor
jle
pushf
aaa
xor
pop
xlat
ljmp
sub
enter
xchg
addr16
mov
push
pop
adc
adc
mov
pop
aam
cmp
xchg
jmp
sbb
mov
xchg
or
cmp
dec
ds
lea
dec
les
jbe
pop
sub
in
mov
or
inc
fldenv
and
insb
adc
xor
push
leave
lock
test
pop
in
push
dec
out
xchg
sub
sub
subl
xchg
and
rclb
mov
xchg
pop
aaa
push
out
div
mov
push
push
jns
popf
cltd
sub
mov
mov
cli
add
or
push
mov
jnp
mov
pop
xchg
adc
and
jb
rcrb
push
add
push
pop
dec
xor
lret
ret
push
adc
and
sbb
mov
icebp
mov
shr
lcall
call
gs
jge
adc
add
xor
mov
push
pop
insl
sub
xchg
loop
mul
jns
mov
js
loop
bound
jo
lds
xchg
movsb
dec
out
inc
xchg
push
ss
dec
mov
mov
jne
pop
and
inc
xchg
mov
stos
popa
outsb
xor
xlat
inc
arpl
jbe
xchg
aam
repz
repz
xchg
addr16
fsts
mov
andl
or
add
inc
call
ret
ljmp
in
inc
mov
inc
xor
cld
lock
loopne
flds
mov
call
jb
lds
inc
xchg
jmp
jbe
in
daa
and
jbe
pop
call
and
movsb
ds
lock
fbld
xorb
imul
popa
jo
aaa
mov
lds
sahf
lock
clc
add
aam
or
jns
test
hlt
leave
or
xchg
xorl
dec
je
xchg
ja
inc
test
scas
sbb
push
xchg
jmp
mov
mov
jbe
into
in
movsb
js
stos
and
mov
fsubl
insl
scas
sbb
xchg
pop
inc
mov
xor
push
push
mov
push
leave
lret
bound
rclb
jbe
sub
xorb
inc
mov
sub
dec
ret
nop
add
and
out
das
jb
cmpsb
fiaddl
shl
inc
jmpw
stc
ret
mov
rcrb
sarb
push
push
fs
orb
push
push
xchg
lea
adc
sbb
inc
mov
sahf
movb
cmp
scas
mov
mov
loope
pop
test
imul
pop
or
pop
outsb
jecxz
in
pop
loopne
pusha
das
ret
xchg
iret
adc
dec
cld
pop
popf
je
rorb
fs
scas
inc
frstor
fcmovnb
in
pusha
imul
addr16
stos
shrl
std
clc
fcoms
xor
imul
idiv
std
xchg
jo
xchg
sub
mov
inc
and
lods
inc
insb
mov
insl
mov
cmp
jl
std
pop
sub
mov
cmp
push
addr16
jns
popf
push
gs
cmp
jge
jbe
cmpsb
repnz
movups
xchg
cmpsl
mov
in
jns
jne
sbb
sub
les
push
pushl
imul
mov
push
out
pop
mov
and
xor
andl
xor
leave
dec
sbb
push
inc
clc
daa
stc
add
ss
or
or
icebp
push
push
test
mov
push
mov
cwtl
movsb
test
loop
sbb
lds
sti
lcall
loopne
jno
jb
test
mov
push
cmp
outsb
adc
flds
aad
push
push
ljmp
jle
sub
mov
mov
mov
mov
test
call
frstor
push
arpl
mov
notl
push
ror
ret
lods
inc
xor
or
in
mov
rcrl
lret
fldl
pop
add
push
in
sub
rcrb
pop
xchg
sahf
lret
cld
xor
ss
lods
lcall
outsb
pushl
shr
stos
jmp
mov
in
lea
into
int
sti
push
xchg
rdtsc
add
sahf
mov
gs
push
add
out
cli
test
outsb
cli
repnz
sub
add
pop
add
adc
rcl
jg
mov
mull
mov
jmp
mov
adc
fsubl
xor
insb
daa
mov
push
cmp
jle
dec
addr16
shl
inc
test
push
xchg
stc
or
mov
jle
movsl
std
push
fldl
mov
addl
enter
out
aam
lret
mov
xchg
jecxz
pushf
ret
pop
lds
mov
movsl
stc
sbb
sbb
mov
cltd
cwtl
add
push
fcomp
notl
or
jecxz
sti
mul
xchg
clc
mov
xchg
mov
test
push
lods
sbb
adc
bound
sbb
jo
inc
push
ror
add
mov
loopne
xor
dec
jae
and
sbb
jne
test
ret
outsb
test
push
bound
out
adc
divb
loop
xlat
insl
add
dec
or
pop
stc
lods
addb
scas
ds
push
mov
cmp
mov
mov
xchg
mov
mov
shrb
sbb
aad
lods
mov
sub
fldcw
and
rolb
lcall
loop
insl
lahf
popf
dec
adc
pusha
and
mov
out
xchg
fstpl
or
jecxz
mov
stc
sahf
hlt
pop
pop
push
in
mov
adc
xor
clc
jge
cmpxchg
sub
icebp
rol
and
arpl
or
mov
fs
mov
inc
ja
lret
cmp
iret
fcompl
fs
pusha
xchg
movsl
aaa
mov
cwtl
push
nop
imul
adc
xchg
add
fbld
int
sbb
imul
xor
cmp
clc
das
dec
insb
fdivrl
mov
enter
outsb
pop
adc
je
divl
in
ljmp
pop
push
add
inc
cli
jo
pop
mov
dec
adc
xchg
mov
ror
add
dec
cmp
xchg
loopne
into
xor
push
mov
fstpl
stos
sbb
push
dec
inc
and
shr
and
adc
mov
push
sbb
mov
repz
add
cmpl
pushf
pusha
bt
repz
add
ret
and
popa
scas
mov
xchg
adc
scas
jne
adc
repnz
xchg
add
insl
rorl
or
sbb
inc
xlat
push
cmp
int3
adc
cs
pop
fwait
push
imul
jl
in
pop
push
add
rorl
xchg
mov
and
sbb
mov
mov
pop
rcrl
outsb
adc
loopne
dec
push
lret
mov
mov
jge
push
int3
fcomps
insl
mul
cmp
fldl
xchg
pop
iret
push
and
inc
cmc
gs
dec
les
mov
stc
adc
test
pushf
pop
out
out
lcall
rol
pop
jbe
ud1
pop
leave
imul
jp
or
mov
leave
in
xchg
dec
rcl
adc
loop
push
fwait
pop
sub
xlat
insl
test
xchg
sub
add
pop
leave
icebp
fs
mov
adc
fidivl
daa
xchg
lret
popf
dec
xorb
out
les
outsl
dec
call
repnz
or
xchg
test
std
pusha
push
inc
mov
stos
dec
inc
test
fucom
clc
sbb
pop
xor
jge
cwtl
add
fidivrs
xchg
jne
aam
aas
jo
lahf
xorb
dec
outsl
add
jbe
ret
gs
inc
clc
dec
shll
push
dec
lahf
or
mov
scas
fucomip
test
jbe
cmc
sub
out
mov
fcmovnbe
idivl
push
loope
pop
mov
rcrb
sbb
cmp
jnp
mov
sbb
cli
movsl
sub
cmpsb
xor
adc
push
notl
xchg
or
pop
mov
xchg
xchg
cs
aam
ret
xchg
subl
test
lcall
loop
jp
lods
in
sbb
push
idivb
das
lods
mov
js
mov
pop
mov
cmp
ret
push
lds
sbb
and
fimuls
iret
jns
test
xor
popf
fistps
mov
fldl
jae
pop
mov
jg
mov
subb
push
mov
or
rclb
or
dec
lea
pusha
enter
aaa
jb
sarb
out
pop
iret
sti
std
cltd
setbe
sbb
pop
push
shr
leave
icebp
ljmp
test
rcrb
sbb
xchg
andl
xor
or
fists
mov
fs
addr16
addr16
and
mov
call
shrb
xchg
push
xor
sarb
xor
push
dec
dec
cli
mov
test
add
aam
xor
popf
mov
lret
pop
cmp
jecxz
mov
mov
sbb
jo
inc
mov
mov
sar
test
push
mov
subb
out
les
mov
cmp
rolb
xlat
js
out
sbb
stos
cltd
neg
cwtl
in
stc
push
cli
xor
jae
icebp
xchg
jg
pop
mov
push
je
movsb
js
lea
fisubs
and
movsl
lods
dec
int3
popf
sti
sbb
mov
imul
jns
arpl
cmp
fiaddl
rorb
in
push
add
sub
xchg
fdiv
pusha
dec
sbb
popa
inc
jnp
or
jne
cmc
mov
fbstp
stos
pop
jp
shlb
jnp
mov
add
push
lcall
int
stc
aaa
sti
pusha
dec
fcompl
stc
add
sar
add
lea
jae
dec
rol
mov
pop
shll
xor
insl
inc
fildl
push
shlb
pop
lret
shlb
mov
and
scas
jo
dec
xchg
push
stos
gs
cmp
aaa
insb
ljmp
mull
imul
clc
shll
add
jns
daa
js
xchg
nop
xchg
xlat
ret
or
and
push
fwait
adc
mov
or
sbb
cli
mov
push
aas
and
sbb
jns
fsubl
mov
je
xor
and
xor
call
mov
movsl
adc
cmp
imul
lahf
mov
jg
sbb
div
icebp
push
and
iret
xchg
pop
add
push
adc
cs
adc
jle
lcall
arpl
pop
or
jp
test
lcall
in
xor
and
cmpsl
dec
fcmovnb
and
icebp
lahf
xor
outsb
cmpsb
loopne
or
cs
mov
cmp
xchg
mov
lcall
jo
xor
push
ljmp
outsl
pop
add
loop
cli
dec
out
cli
aaa
xor
xchg
jne
and
lea
add
sub
lods
mov
mov
cmp
pop
das
imul
rorb
dec
call
inc
test
mov
push
or
cmp
xlat
or
and
test
inc
rcrb
sub
mov
xchg
pop
push
out
dec
les
jg
push
fcmovb
ret
into
xchg
xchg
adc
mov
pop
push
pop
inc
aaa
fnsave
mov
xor
pop
jle
out
rclb
ror
push
shr
mov
push
jp
push
push
lret
cld
add
sbb
rol
mov
cli
cmpsb
sub
jp
jns
jp
ret
dec
in
cmc
imull
jae
call
ljmp
pop
push
sti
mov
adc
cmp
aam
ljmp
or
xorb
jns
jo
loop
ss
mov
push
repz
fcoms
pop
inc
imul
or
ret
test
dec
mov
lock
jecxz
sub
jb
mov
jns
sub
pushf
or
mov
in
xor
lock
mov
imul
jb
jge
test
adc
arpl
stos
mov
xlat
mov
jne
out
mov
pusha
add
bound
cmpxchg
hlt
aas
bound
out
sbb
adc
popa
das
push
cmpsb
mov
lods
sbb
cmp
xchg
aas
mov
sbbb
in
pop
sub
subb
jge
adc
push
jbe
cmp
push
leave
clc
mov
mov
cmp
fisttpl
mov
push
fxch
inc
and
sbb
dec
adc
andps
leave
sbb
add
dec
lcall
in
jae
dec
sub
jmp
inc
into
push
mov
sub
gs
mov
das
cltd
popa
or
pop
jg
daa
cmc
push
out
push
faddp
addr16
mov
sbb
push
ror
add
mov
mov
push
push
and
cltd
daa
gs
cli
cmc
aam
aas
pop
lret
pop
or
push
inc
cmpsl
xor
cli
xchg
lahf
xlat
mov
and
sub
mov
jns
mov
mov
imul
xchg
daa
loopne
push
rcll
call
xor
pop
or
add
mov
mov
push
daa
cmp
rcl
push
sub
in
movsb
mov
sarb
xchg
pop
aad
sahf
xlat
lret
test
lret
xchg
add
popf
sarl
pop
lret
scas
or
mov
test
out
cmp
adc
arpl
andl
cmp
xor
movzwl
xor
push
jae
out
cmpsb
into
outsl
shr
jbe
fstpl
shrb
mov
jnp
mov
test
fadd
fistpll
insb
icebp
sar
xor
rorl
ret
addl
cli
enter
shll
cs
mov
cwtl
cmpsl
aam
xchg
sub
les
int3
or
test
repz
mov
mov
repz
xor
pop
and
cmp
movsb
cmpsl
bound
mov
clc
cld
inc
mov
pavgw
jmp
ret
push
lret
mov
loop
leave
idivl
pop
sbb
mov
cmp
xchg
pop
stos
mov
das
cmp
movl
out
out
xchg
mov
dec
jae
mov
aaa
fs
mov
inc
lods
jbe
xor
outsl
mov
movb
sbb
cwtl
sahf
out
in
out
sbb
lds
jns
cmp
insl
lea
mov
out
mov
lret
outsl
rcrb
outsl
jg
gs
setnp
xchg
fsts
add
dec
pop
fldl
or
mov
out
loopne
imul
cli
test
lea
out
or
arpl
mov
leave
je
mov
scas
es
sub
pop
addr16
sbb
rcrb
mov
ret
dec
sub
out
adc
sbb
daa
mov
mov
sub
mov
add
jnp
or
dec
sbb
in
movsb
xor
jle
insb
std
aam
mov
lods
ficomps
outsb
sti
jb
bound
repz
sahf
enter
clc
lock
adc
sub
insl
jo
xor
sub
jb
xchg
push
int3
idivb
and
std
mov
pop
cld
mov
dec
xchg
inc
test
dec
fs
and
mov
lds
mov
xor
stos
add
mov
sbb
out
dec
sbb
mov
stos
cmc
jne
mov
push
xchg
xchg
popa
jmp
fmul
lahf
movsl
sub
mov
mov
cmp
shl
sbb
sti
mov
jb
and
xor
shrl
or
fdivrl
inc
mov
dec
stos
pop
sbb
lods
xchg
cmc
mov
sbb
jbe
lods
int3
pop
add
xchg
sbb
dec
adc
xor
inc
push
adc
mov
mov
dec
sub
mov
inc
fidivs
and
faddp
push
push
rorl
mov
or
pop
lea
data16
mov
mov
mov
mov
ja
cmp
ds
and
int3
out
pop
or
js
mov
out
and
dec
pop
insb
rorl
mov
fmuls
adc
out
lahf
lret
cld
pop
cmp
and
push
dec
les
data16
shlb
sbb
std
in
insb
xchg
inc
daa
jne
ja
cmp
movsb
mov
pop
sbb
mov
mov
and
and
out
or
adc
adc
xor
cltd
cmpsl
mov
mov
lock
je
mov
das
arpl
pop
adc
xchg
ljmp
push
sbb
jae
lret
fdivr
test
fstps
cmpsl
push
test
add
out
sbb
scas
and
scas
add
inc
les
call
or
and
xchg
test
mov
push
xchg
adc
pop
jg
pushf
fsubrl
out
scas
das
faddl
mov
pop
pop
hlt
and
jb
addr16
jg
dec
jp
rcll
mov
repnz
fldl
cmpb
xor
push
add
inc
push
xchg
cmp
sub
fcomps
mov
aas
repz
adc
ret
adc
or
add
out
lock
cmp
outsl
add
das
sbb
addr16
lret
xor
ret
add
sarl
pushf
inc
fisttpl
push
mov
arpl
jecxz
repz
repnz
xchg
je
jge
or
mov
pusha
xor
jae
inc
xchg
and
scas
out
or
popa
mov
fsubl
pop
jns
cmpsl
jns
fmull
cmp
and
dec
jne
mov
mov
out
in
fbstp
fdivrs
divb
mov
test
popa
or
test
push
es
pop
push
pop
sbb
mov
into
push
pop
sbb
cltd
push
jnp
push
sbb
cmp
roll
daa
mov
add
shlb
jge
repz
mov
in
cwtl
ja
mov
xchg
shlb
add
das
in
and
rorl
xor
xor
loopne
pop
or
or
adc
test
repz
lds
dec
or
outsl
js
testb
mov
adc
mov
sub
stos
mov
pop
outsl
jo
or
jae
fs
pop
dec
adc
jnp
adc
dec
ss
iret
jl
incb
sub
ja
mov
enter
mov
std
out
enter
iret
negb
lock
hlt
sub
push
lret
lret
push
clc
in
xchg
sub
cmp
repz
aam
jb
adc
lahf
adc
xor
mov
icebp
pusha
mov
lods
and
aam
sbb
mov
cwtl
test
mov
cmp
inc
aas
lcall
rcrb
divb
cwtl
fsts
jl
test
xor
xchg
push
mov
lret
mov
xchg
in
and
push
stc
jmp
sbb
mov
dec
in
movsl
xchg
sbb
pop
fdivrs
jle
pop
pop
sti
mov
and
xchg
adc
pop
repz
push
mov
xchg
lahf
inc
mov
in
sub
xchg
cmp
setbe
dec
xchg
pop
aam
loop
dec
xchg
dec
sub
push
sub
cmp
in
fimuls
push
call
adc
xchg
dec
push
dec
sahf
mov
rcl
lret
add
nop
sub
pop
sbb
xor
mov
xor
mov
xchg
xchg
sub
and
mov
add
add
xor
in
mov
addl
mov
sub
les
jo
and
mov
pop
cld
popf
sub
cmp
das
pushf
or
pop
mov
xchg
andl
add
movsl
push
bound
and
test
int3
std
jge
jle
mov
or
push
xor
add
ss
inc
pop
xchg
pop
mov
lcall
fneni(8087
fistl
push
lcall
faddl
mov
loope
fnsave
sub
pop
cmp
jmp
loopne
mov
inc
jno
add
pop
test
cmp
adc
inc
arpl
aaa
dec
adc
int3
cmp
adcb
cmp
sbb
shlb
xor
outsb
das
jmp
in
mov
loope
lods
lret
pop
push
pop
push
pop
jmp
or
xor
loop
jb
outsl
aam
or
jbe
cmpl
pop
inc
mov
xor
sbb
sti
add
mov
adc
push
decl
mov
je
repnz
push
call
lods
mov
inc
scas
pop
stos
mov
push
adc
popa
outsl
adc
inc
loope
negl
lods
ja
cld
mov
fdivs
xchg
jecxz
cmp
xchg
inc
add
pop
jmp
dec
ror
test
inc
mov
fimull
std
dec
repnz
adc
std
les
push
jecxz
aad
lods
and
stc
fdiv
out
or
lea
cmc
fldt
pop
dec
movsl
or
mov
or
stos
xor
sub
popf
ja
sbb
inc
scas
negb
or
dec
mov
aaa
push
adc
leave
ret
mov
cmp
xor
in
in
mov
stos
xchg
negl
rcrb
sub
test
imul
rcr
hlt
pop
mov
fsubrl
push
fucomp
flds
movsb
mov
jae
arpl
mov
pop
les
icebp
inc
imul
jecxz
stos
shl
daa
fs
xchg
push
push
mov
pop
add
cmc
cld
dec
das
out
or
mov
shlb
rcrl
xor
or
xchg
pop
lret
js
cmp
aas
push
jbe
xor
mov
aaa
cmc
jl
test
push
and
add
xchg
cmp
int3
test
stc
mov
sbb
push
and
mov
stos
sti
add
jbe
stos
xor
pop
aaa
imul
imul
fcmovnb
sub
jp
jo
scas
mov
push
pop
jmp
push
xor
mov
clc
push
pop
jmp
das
mov
mov
jns
xor
mov
sbb
sub
fs
adc
insl
mov
hlt
insl
mov
adc
insb
sbb
fdivrl
out
icebp
mov
adc
insb
lods
inc
cli
fcmovnb
inc
push
sarb
jno
add
inc
das
pushf
mov
push
mov
ficompl
sahf
add
dec
js
inc
add
jno
add
push
out
aad
cmp
lods
loop
adc
xchg
xchg
adc
sub
or
xchg
cmp
decb
sar
push
cmp
mov
or
push
pop
lods
fmulp
in
in
xorb
sbb
jge
clc
add
pop
popf
movsl
dec
movsb
jne
ret
push
inc
outsb
nop
push
pop
movsl
xchg
or
xor
sbbl
cmpsl
dec
mov
push
adc
and
aas
jne
jg
mov
jne
sbb
adc
jg
and
int3
ja
and
dec
inc
pop
mov
mov
lcall
test
cld
push
loop
cltd
fwait
push
fs
scas
pop
xchg
inc
inc
rclb
mov
push
fdivrl
jp
test
add
or
rcll
and
xorb
repz
push
into
add
jbe
shrl
cmp
aaa
xor
jmp
es
cmc
mov
pusha
ret
jne
js
mov
les
pop
andl
test
out
cmp
dec
mov
imull
pop
test
adc
fucomi
jae
dec
stc
push
in
mov
cld
or
dec
imul
loop
call
or
add
pop
aam
xor
push
fnstsw
mov
lods
sbbl
out
movsb
jmp
test
cmp
fwait
xchg
aam
sub
add
mov
in
js
push
dec
lock
jnp
and
push
jbe
bound
jo
fbld
stos
cmp
int
cmp
aam
scas
push
fwait
out
sub
inc
arpl
mov
jl
mov
xchg
inc
sbb
add
push
icebp
cld
loope
jno
movsb
sub
out
mov
unpcklps
mov
das
and
rclb
mov
or
cmp
inc
push
outsl
popa
fs
add
jmp
ret
xchg
stos
mov
inc
addr16
std
out
out
xchg
in
daa
leave
jns
push
gs
push
or
insb
dec
xor
or
movsl
xor
cmovno
add
cwtl
push
xchg
jle
fwait
and
or
orb
and
cmp
xchg
sbb
jns
and
jecxz
add
pop
stos
cmp
mov
pusha
pop
int
aam
cmpb
xor
aam
leave
fisttpll
xor
mov
sub
mov
pop
xchg
xchg
aaa
enter
cmpsb
xorb
push
sub
insb
mov
adc
outsl
add
mov
mov
push
cmp
xor
call
cwtl
adc
mov
jns
push
dec
mov
mov
jnp
mov
fcos
xchg
in
lret
scas
jns
pop
sar
sub
mov
enter
loop
push
and
mov
xchg
mov
push
shrl
fs
in
mov
xlat
notl
out
mov
int
jge
mov
push
mov
cmp
sarb
fsubl
bound
enter
pop
jnp
jae
xchg
xchg
decb
add
jo
and
ljmp
mov
mov
sti
inc
sbb
scas
test
push
int
ja
push
icebp
cmp
or
inc
ss
push
sti
mov
pop
icebp
ds
adc
mov
mov
cmp
rol
cmp
xor
or
insb
inc
in
fwait
call
xor
xchg
cmc
fstpl
mov
ds
inc
xchg
cmp
rolb
push
and
jle
lret
testl
insl
in
adc
mov
mov
je
add
std
jo
sbb
push
std
dec
sub
movsl
inc
enter
das
jne,pn
inc
dec
aaa
or
jle
sbb
pop
xchg
loope
jbe
in
out
ret
mov
roll
pop
xlat
adc
push
popa
movsb
imul
dec
popf
aaa
mov
sbb
xchg
dec
outsl
adc
lcall
popa
nop
and
testl
mov
push
push
stos
dec
xor
daa
pusha
jecxz
push
rorb
bound
pop
inc
pop
mov
arpl
mov
push
adc
push
push
jnp
stos
fs
push
fidivs
insb
ss
mov
jp
xor
mov
xchg
lods
add
dec
adc
idivl
cmp
mov
jecxz
std
fsubr
inc
popf
scas
test
jle
ror
mov
push
in
fistpl
adc
jg
outsb
faddl
mov
cs
mov
ror
cmp
test
xchg
jl
aas
xchg
add
addb
popf
test
pop
fwait
mov
push
dec
lcall
pop
leave
mov
xor
hlt
dec
frndint
rcll
sub
cmp
leave
iret
icebp
cwtl
push
xor
dec
sti
mov
pop
jge
sub
aas
test
orb
add
and
out
cli
sbb
js
roll
jnp
cmp
fistl
and
push
pop
mov
out
sahf
mov
mov
scas
add
orb
ds
in
out
in
mov
dec
hlt
cmp
enter
ret
ja
sbb
mov
push
xchg
nop
jns
lcall
push
test
outsl
cmpsb
ja
sbb
aas
test
and
loop
push
add
adc
fcmovu
xchg
add
das
and
add
lock
aad
cltd
sbb
mov
insb
sti
arpl
test
je
adc
das
mov
adc
popa
xor
lock
mov
adc
pop
lret
test
scas
cmp
push
or
out
sub
hlt
jl
out
pushf
add
mov
mov
lds
push
shlb
sub
sbb
mov
jg
jmp
xor
pop
out
and
lods
pop
adc
fwait
mov
lahf
outsb
data16
in
inc
xchg
pop
pop
cmp
pop
pop
enter
and
popf
ja
enter
scas
loop
pop
mov
xchg
xchg
cmp
add
les
mov
xlat
lahf
mov
mov
sub
push
mov
cmp
adc
shlb
xchg
stos
dec
or
fmul
or
xor
jbe
sub
out
outsb
jo
jge
mov
dec
add
ja
sub
js
insb
ljmp
insb
jge
icebp
sbb
fwait
jmp
in
dec
jo
fs
imul
cld
xor
movsb
or
movsb
jno
xor
dec
mov
and
loope
call
push
addr16
cmp
mov
aad
testb
or
repnz
xor
mov
rorl
ds
enterw
in
mov
mov
xchg
xchg
sub
or
fisubs
in
testb
cld
jp
dec
popf
pop
xlat
fwait
ja
dec
imul
push
cmp
push
inc
out
pop
or
cmp
jno
xchg
fisubrl
xchg
in
push
mov
cs
mov
cmp
sbb
push
and
pop
das
mov
in
ret
fists
xlat
sub
add
mov
movl
pop
sbb
nop
xchg
pop
cmp
ja
ds
aas
mov
ret
pushf
sarl
and
les
push
mov
imul
scas
jo
add
dec
lds
cltd
fstl
dec
mull
push
cmp
cmp
xor
out
pop
fimuls
leave
scas
ds
sub
clc
stc
cmp
in
mov
push
int
pop
mov
movsb
mov
test
je
xchg
es
xchg
xchg
and
xor
ret
ficompl
ja
mov
mov
mov
jnp
into
and
jge
call
jmp
repz
fucom
xlat
xchg
outsl
dec
mov
sbb
js
mov
fidivrs
xchg
int3
jbe
jecxz
dec
and
push
xor
std
leave
jb
lret
push
outsl
xor
push
xor
mov
daa
in
push
in
xor
movsb
cmp
ss
dec
sub
sub
int3
pop
in
sbb
or
dec
mov
cmp
mov
push
mov
negl
leave
xchg
and
lea
subb
lahf
and
pop
ret
in
jbe
shrl
push
mov
cwtl
xchg
pop
lods
aad
push
jb
call
lret
jle
clc
jl
inc
nop
sbb
xchg
dec
sub
inc
jge
pop
js
sbb
bound
adc
lea
adc
pop
or
adc
or
sub
adcl
xor
push
pusha
push
mov
jns
adc
fwait
xlat
add
jl
fwait
inc
push
pop
orb
inc
hlt
int
jo
cmp
xchg
lret
arpl
mov
int
popf
adc
adc
sub
mov
add
mov
test
cmp
mov
or
xchg
out
js
iret
adc
add
lods
push
adc
xor
ss
std
pop
sti
xchg
sbb
repz
push
push
mov
mov
sbb
addr16
push
jns
jae
jmp
sub
loope
mov
sti
stos
mov
ret
pop
icebp
test
pushl
push
dec
cli
addr16
icebp
test
scas
xchg
insb
jno
xchg
pusha
mov
mov
cmpsl
or
rcrl
stos
add
pop
jmp
or
movsl
int
iret
mov
test
cmp
movsb
jp
out
mov
push
mov
mov
jns
fimuls
sbb
inc
lcall
xchg
movsb
and
mov
hlt
popf
leave
xchg
sbb
cmpsb
pop
ficoml
je
pop
jae
dec
test
cmp
cmc
xor
sbbl
enter
pusha
add
sahf
jl
cwtl
sahf
cltd
mov
push
xor
pop
xor
push
xchg
push
rcl
out
scas
adc
xor
dec
lret
mov
lods
test
jecxz
pop
pop
mov
fldl
add
call
movsl
adc
sub
mov
sub
nop
fistpl
in
lock
subl
mov
jbe
das
and
insb
adc
xchg
dec
shl
push
pop
jecxz
and
cmc
outsl
push
jns
outsb
jne
jp
int
push
ss
idiv
aas
cs
lock
mov
int
push
fs
int3
faddl
mov
xchg
jg
repnz
inc
sbb
xchg
aad
fists
scas
push
imul
out
scas
and
int3
popa
jnp
int3
shrl
ljmp
and
lods
pop
out
gs
push
inc
popf
mov
ret
ljmp
jnp
neg
add
cmp
sub
dec
mov
icebp
movsb
mov
icebp
outsb
das
add
push
in
aad
sbb
inc
cmp
iret
xor
fstpl
jns
addr16
pusha
sbb
dec
aaa
int3
pop
sub
sahf
jne
inc
mov
les
cmp
mov
stos
lods
dec
dec
stos
test
inc
jmp
dec
outsb
daa
mov
enter
nop
fmuls
dec
jle
mov
inc
dec
arpl
lret
jbe
or
insb
push
decl
mov
fmul
daa
repnz
aam
cs
aaa
push
push
fs
sub
mov
pop
stos
in
mov
mov
dec
mov
cmp
cmpl
cmp
pop
mov
pop
outsl
sub
mov
dec
movsb
and
in
addb
xor
flds
mov
pop
mov
pop
imul
test
and
push
cmpl
nop
aas
daa
sahf
call
outsl
push
pop
out
imul
je
push
xchg
in
inc
idiv
mov
sbb
push
jno
adc
int
sub
mov
into
pop
xor
pop
shr
mov
lds
aam
cmp
mov
or
es
into
hlt
xchg
repnz
push
sub
jno
and
ja
sahf
add
jmp
in
imul
dec
add
loope
xor
movsb
xchg
and
fs
pusha
inc
mov
iret
dec
mov
and
mov
int
arpl
mov
pop
shrl
inc
pop
dec
test
fiaddl
mov
cmpsl
sub
pop
sbb
sbb
cwtl
ret
imul
repz
lods
stc
push
mov
inc
std
bound
insb
imul
add
pop
daa
ret
les
mov
sub
scas
aaa
bound
cli
pop
cmp
push
movsl
ds
lods
in
js
data16
cmpsb
and
out
inc
fimull
xor
addl
push
mov
into
mov
jp
std
mov
pushf
int3
pop
inc
call
mov
jb
and
sub
out
mov
cmp
arpl
jmp
es
test
cmp
inc
mov
add
pop
add
mov
push
jge
ds
xchg
jns
data16
test
add
add
push
adc
pusha
pop
jb
shrl
rorb
mov
int
ret
dec
inc
xchg
gs
pop
jo
hlt
xchg
sbb
aas
in
cltd
data16
sub
rcll
inc
inc
popa
movsl
pop
and
xor
movsb
pop
push
out
sbb
mov
push
int
aas
rorl
mov
add
gs
mov
add
cmc
pop
push
test
rcll
xor
jl
pop
call
mov
push
fidivl
pop
das
push
push
enter
fsubrl
insl
es
cmpsb
out
adc
mov
add
add
xor
sbb
sub
cmp
popa
mov
stc
insl
out
pop
sbb
lds
loop
cmp
jmp
xor
push
xchg
call
dec
add
jmp
daa
inc
mov
jo
cmp
mov
or
dec
int3
cltd
mov
lret
outsl
adc
mov
push
sub
pop
arpl
in
fxch
and
add
or
addr16
xor
gs
pop
sbb
in
xchg
cmp
cs
fnstcw
fwait
adc
std
cmpsb
xor
in
outsb
jg
mov
ret
cmpsl
in
fsubrs
add
dec
sub
ss
das
scas
or
sahf
mov
pop
jg
test
test
fwait
mov
sbb
test
pusha
stos
push
xchg
lods
add
sub
jl
pop
mov
mov
xor
jg
pushf
shrl
in
dec
mov
fistpll
mov
bound
mov
jae
scas
rcll
xor
lods
aas
inc
jmp
nop
sarb
jmp
xchg
add
flds
ror
xlat
cli
inc
bound
ficoml
mov
mov
jge
je
or
icebp
lock
pop
sarb
adc
inc
jae
mov
fdivr
jg
js
cmp
lahf
push
ljmp
mov
dec
cs
in
addb
sub
js
pop
es
inc
adc
aaa
das
xor
push
sbb
rorl
sbb
rclb
xchg
repz
pop
dec
loopne
int3
mov
sub
pop
scas
call
movl
sbb
inc
ds
test
add
ret
addr16
imul
adc
outsl
aad
mov
mov
pop
stc
push
mov
out
fistpl
fdivrl
fcompl
xlat
out
dec
inc
cli
sbb
sbbl
mov
pushf
icebp
xor
insl
mov
in
das
jne
xchg
xor
fstpl
aaa
fstpt
aad
lock
dec
and
in
idivl
push
pop
cmp
xchg
daa
mov
aas
cmp
pop
jle
sbb
lock
out
jno
fsubrl
fstl
hlt
mov
das
movsb
ljmp
outsb
mov
into
mov
mov
cmp
sahf
imul
sbb
adc
imul
sub
sbb
lds
dec
test
out
arpl
mov
pop
jmp
out
rorb
mov
inc
jmp
xchg
nop
adc
cwtl
jl
and
sbb
in
movsb
enter
lret
inc
inc
xchg
fistpl
jne
mov
aaa
cltd
aam
pop
pop
into
dec
stc
xchg
enter
addr16
cmp
cmpsb
dec
xchg
fxch
shrb
and
add
dec
inc
out
inc
iret
lods
inc
jmp
rol
test
pop
xchg
pop
jo
shrl
fsubrs
adc
xor
fdivr
inc
sar
call
test
scas
outsb
jl
stos
cmpl
call
pop
inc
mov
mov
loop
fildl
cltd
cmpsl
mov
jmp
mov
lock
es
add
imul
iret
xchg
lds
cmp
pop
test
movsl
mov
ficoms
repz
stos
loop
scas
inc
fistps
loope
jns
popa
mov
in
or
aad
call
in
mov
lcall
push
xor
xchg
shlb
sub
mov
iret
mov
xor
movl
test
jge
and
sub
mov
stc
icebp
ficoms
adc
daa
sbb
adc
sub
mov
aam
icebp
sbb
inc
adc
jl
xchg
push
dec
lahf
jmp
pop
lock
pusha
fmuls
ja
idivl
mov
cmc
inc
mov
fs
repnz
lods
rorb
in
xchg
fistps
add
ja
jo
mov
inc
xchg
pop
adc
imul
xorl
lret
lret
inc
vandnps
test
outsl
mov
mov
cld
les
sarb
jne
jp
lods
pop
xchg
imul
xchg
mov
adc
int3
sar
xor
push
icebp
or
or
jbe
xchg
dec
xor
sbb
jg
in
or
pop
rolb
imul
aaa
xchg
pop
in
or
insb
and
cmc
mov
lret
stos
inc
jo
ds
adc
jno
pusha
outsb
sbb
into
sbb
push
loopne
arpl
movsl
scas
js
xor
push
add
push
jl
inc
repz
arpl
pop
jne
pusha
jecxz
pop
sub
faddl
and
xchg
mov
inc
outsb
and
bound
xchg
add
orl
push
xchg
fistpl
fmull
add
pop
pop
out
loopne
fidivrl
mov
adc
mov
mov
loop
scas
std
xchg
mov
cmp
nop
add
xchg
cwtl
test
data16
jae
cld
jae
mov
ret
xor
rcrl
gs
les
insb
dec
push
push
lahf
nop
add
dec
xchg
sub
xor
pop
cltd
outsb
dec
pusha
stc
mov
rcrl
imul
add
add
call
shrl
jns
mov
mov
pop
and
push
mov
xor
mov
sbb
aad
pop
mov
pop
jge
push
xchg
mov
mov
push
mov
stos
sbb
fiadds
mov
add
jo
push
mov
and
inc
ret
xchg
movsl
shl
adcl
and
cmp
inc
jno
inc
jae
outsb
fnstsw
cmp
jecxz
and
xor
mov
fmul
pop
cmp
packssdw
and
out
fucom
aad
and
sarl
mov
das
inc
dec
mov
xchg
sbb
jne
push
or
dec
fdivrs
out
xor
xchg
pop
jno
in
outsl
pop
je
insl
out
sbb
sbb
in
xchg
mov
push
shlb
add
cld
jp
cs
sub
pop
int3
aam
repnz
add
jmp
fisubrl
pop
pop
adc
xor
popf
sbb
xlat
xor
inc
mov
and
out
dec
cmc
push
ja
fdivl
aad
ja
ss
fs
cli
xchg
jmp
jae
pop
dec
adc
push
mov
xchg
sbb
das
repnz
stos
adc
dec
adc
sub
add
or
fs
inc
cld
pop
dec
xor
add
add
dec
test
lock
ss
rol
and
pop
pop
sub
mov
push
push
pop
out
int3
jae
sbb
das
leave
pop
mov
cltd
xor
mov
and
pop
imul
cwtl
lahf
push
aam
dec
sbb
mov
dec
jecxz
icebp
mov
xor
mov
int3
mov
jmp
jno
push
inc
inc
iret
shll
lods
negl
icebp
xor
inc
add
mov
decl
mov
in
fimull
adc
call
in
mov
mov
pusha
pop
cmp
mov
test
fidivs
push
call
inc
fsubrl
loopne
mov
icebp
pop
pop
mov
ljmp
mov
and
pop
mov
mov
js
push
mov
arpl
cmpsb
jno
mov
stc
dec
test
adc
cmp
add
add
mov
sbb
jnp
mov
cmc
sahf
push
fisttpll
scas
xor
mov
mov
iret
pop
pop
xchg
in
xchg
push
dec
arpl
and
inc
test
jmp
push
flds
cmpb
mov
ret
iret
jge
and
ds
xchg
xchg
mov
xchg
idivl
inc
mov
clc
inc
or
rorb
in
inc
ds
add
mov
pop
mov
adc
movsl
in
fldpi
cmpsb
mov
and
push
dec
imul
in
xlat
jmp
scas
shrl
push
xor
cmpsl
pop
ja
jl
iret
stc
test
mov
pop
xchg
push
jbe
inc
test
test
fs
add
and
sti
dec
cld
jb
mov
scas
cmp
inc
mov
mov
or
loope
mov
lods
mov
jp
and
imul
add
daa
xchg
inc
imul
fxch
add
icebp
xchg
mov
ret
adc
sub
add
push
test
aad
push
ss
pop
orl
xor
mov
and
cmp
jo
xorb
xor
cmpsb
add
dec
iret
imul
sub
pop
adc
roll
or
sub
clc
into
mov
ds
jl
movsl
movsl
gs
fs
xor
xor
xor
mov
ret
loop
dec
ja
mov
push
or
cld
adc
fdivrs
jno
push
mov
cmp
push
lods
addr16
aaa
lods
hlt
pop
push
sbb
cmpsb
add
test
jle
ret
subl
adc
mov
lret
mov
fldl
jbe
test
sbb
xchg
mov
cwtl
stos
hlt
mov
mov
stos
rorl
idiv
das
dec
xor
jo
xchg
leave
adc
sti
pop
mov
add
bound
aam
mov
lahf
adc
xchg
xor
or
fadd
scas
fsubs
push
inc
add
add
add
stos
adc
push
insl
push
divl
push
cmpsb
ljmp
and
mov
push
imul
loopne
xlat
cltd
clc
jecxz
lahf
addr16
out
ds
push
out
ja
dec
mov
or
data16
jo
stos
jo
lahf
mov
bswap
mov
iret
into
shrb
jecxz
xor
je
fwait
das
push
jle
int
fidivrs
mov
test
ret
das
fstl
add
int3
push
xchg
mov
call
ljmp
mov
pop
movsl
add
int3
out
fisubrl
jmp
fnstsw
xor
cmp
popf
int
sub
sbb
mov
arpl
sub
in
pop
pop
rcrb
test
adc
shl
outsb
ficoms
xchg
or
mov
les
ss
sbb
cwtl
jae
out
mov
ljmp
pop
jmp
mov
and
jb
mov
mov
test
call
pop
fnsave
mov
dec
fs
scas
pop
inc
mov
or
xchg
scas
fcmove
fcoms
hlt
fidivs
test
fdivrl
pushf
pop
xor
js
out
repnz
ret
adc
ffreep
pusha
push
lock
fidivl
ja
adc
mov
pop
or
adc
shll
imul
jb
es
jo
mov
xchg
loopne
push
loopne
adc
sub
ret
adc
cltd
clc
lret
mov
aas
push
idiv
div
repnz
sbb
fimull
cltd
dec
push
aaa
outsb
mov
fistl
push
ret
dec
push
test
test
repz
adc
je
cld
mov
jae
inc
repz
lret
pusha
jecxz
xor
repz
sti
popa
xor
aad
jne
enter
cltd
xchg
xor
or
mov
clc
add
or
fucomp
xor
dec
adc
movb
jbe
fs
mov
xor
xchg
int3
adc
jbe
testb
mov
push
cmp
inc
dec
or
cmp
mov
xchg
addr16
cmp
xor
xchg
inc
inc
loope
mov
mov
inc
cmpsb
xor
cmpsb
out
leave
xchg
out
decl
xor
ja,pn
int3
mov
es
testb
jge
data16
orb
and
scas
subl
cmp
push
addr16
ret
pop
and
jl
cmp
pop
dec
mov
rclb
xchg
xor
lock
mov
mov
loope
in
bound
add
shll
test
lret
push
lea
loopne
and
fcomps
mov
xchg
jmp
jg
inc
shrl
movsl
sub
mov
push
sbb
scas
xchg
dec
idivl
mov
dec
mov
mov
mov
jae
push
lahf
add
in
xor
push
loope
push
add
es
pop
xchg
xchg
les
fldenv
xchg
adc
pop
ds
repnz
adc
xor
mov
int3
mov
mov
or
push
popf
cld
add
pop
jb
jae
cmp
cmp
in
aad
mov
cli
into
ror
adcl
lea
mov
jecxz
add
rorb
push
jo
xor
mov
test
hlt
fsubrl
fdivr
or
movsb
movsl
rorl
popf
sbb
ds
iret
int
push
mov
adc
je
jmp
scas
mov
inc
mov
rolb
push
sbb
push
pop
sub
lods
add
aad
add
mov
mov
jo
xchg
pop
mov
push
je
sub
push
dec
mov
cmpsb
lret
xchg
mov
out
sbb
and
jg
jb
mov
les
jle
cmp
fsubrl
insb
dec
js
das
shlb
mov
sub
push
negb
lret
fucomip
fdiv
pop
stc
je
sub
inc
cwtl
daa
jae
sbb
ret
jne
js
adc
cmp
lret
xor
pop
imul
cmc
adc
stc
push
inc
jne
xor
jbe
lret
inc
xchg
mov
cli
js
lcall
mov
and
pop
test
inc
fsubrl
xchg
sti
add
sub
xchg
adc
inc
add
outsb
pop
ret
icebp
ss
mov
pop
lods
aaa
push
pop
ret
sbb
fildll
cwtl
cmpb
mov
mov
orl
sbb
int
sub
xor
fnstcw
rorb
adc
mov
jl
fwait
xchg
repnz
add
dec
out
adc
cmpsl
jno
imul
and
into
mov
es
fs
cmp
sbb
popa
ds
in
mov
outsl
sti
xor
mov
lds
sub
cld
mov
add
sahf
ds
mov
or
mov
push
pushf
jae
sbb
inc
fmull
test
nop
or
xor
add
orb
in
stc
mov
push
cmp
fbstp
scas
loop
ficoml
pop
mov
sbb
push
pop
rcrb
arpl
dec
inc
outsb
xchg
jle
daa
mov
addr16
in
inc
aas
mov
sbb
jge
pop
sti
mov
inc
insb
test
hlt
jae
mov
push
movsb
loopne
push
outsl
cmp
sub
into
test
popf
xchg
icebp
adc
call
push
pop
rorl
pop
xor
inc
fiadds
insl
movsb
jnp
lret
jo
mov
mov
lret
sbb
aaa
cmp
roll
pushf
loop
adc
add
adc
fxch
stos
dec
adc
mov
inc
add
pop
xchg
jg
adcl
pop
lcall
xor
jl
jb
cwtl
jecxz
or
pop
add
jb
push
fmulp
cmp
add
mov
push
dec
cmp
mov
cmp
outsb
pop
lahf
je
enter
clc
in
xor
mov
push
roll
loop
cmc
mov
mov
cmp
sub
fldcw
and
xlat
mov
jge
mov
add
add
sub
mov
cmp
jnp
insl
imul
out
test
pop
pop
aam
mov
push
pop
std
rorl
ljmp
and
mov
cmpsl
daa
in
lods
lods
or
adc
scas
pop
addb
mov
and
fs
decl
in
leave
out
adc
mov
lahf
pushf
and
dec
shll
mov
call
movsl
pop
nop
pop
dec
lock
out
adcl
std
adc
sub
outsl
inc
ret
xor
ret
movsb
movsb
out
jl
cmp
jl
mov
xlat
or
stos
inc
mov
adc
shr
or
xchg
or
loope
sahf
jmp
aad
popa
mov
sti
jne
stc
popa
mov
sahf
push
jno
clc
and
bound
pop
mov
mov
mov
inc
rcl
fwait
push
stos
and
pop
or
faddp
mov
aas
out
jae
cltd
movsb
movl
or
mov
out
cmpsl
mov
arpl
sbbb
xor
mov
rorl
push
inc
adc
insb
in
or
and
sub
mov
push
add
repz
or
mov
shr
cltd
and
mov
mov
ja
aam
imul
and
jle
rcrl
pop
add
sub
fsubl
push
cmp
scas
and
lcall
xchg
xor
cli
mov
jl
xchg
popf
or
mov
rclb
mov
mov
push
cmp
lret
mov
stos
adc
lea
sti
jmp
inc
lcall
enter
xchg
mov
jg
dec
cld
or
mov
andnps
clc
popf
mov
cmpsl
xor
enter
clc
ljmp
imul
mov
pop
loopne
and
mov
mov
sub
out
pop
mov
cltd
cwtl
nop
xlat
out
dec
stos
inc
aam
cltd
jo
pushf
mov
rclb
in
dec
cmc
jns
or
or
and
enter
into
sti
es
jecxz
fwait
shll
jmp
in
das
adc
insb
adc
test
cmp
sbb
cmpsl
add
pusha
pop
or
mov
mov
fs
test
shll
je
push
test
sub
test
mov
sahf
mov
jns
sub
mov
scas
or
xor
fbstp
out
inc
mov
pop
pop
sub
push
mov
jmp
pusha
pop
rcll
mov
out
sub
repnz
scas
js
cmpsl
pop
aaa
mov
cmp
pop
or
fdivs
repz
add
mov
pop
cmp
add
xlat
push
mov
insl
mov
push
test
add
pop
push
inc
fildl
sbb
sti
jae
mov
lret
mov
pop
fcmove
jl
and
rcl
push
xor
mov
add
js
es
mov
loop
jae
mov
lahf
enter
add
fs
inc
jns
xchg
rcl
aas
dec
daa
or
add
gs
cmp
xchg
mov
out
pop
jmp
xchg
push
inc
fldenv
pop
xchg
mov
sbb
mov
jg
add
jae
pop
rcl
imul
inc
dec
movsl
push
and
mov
loop
mov
jge
sbb
shlb
mov
cmc
fwait
xor
out
ljmp
out
pop
rcrb
or
xchg
pop
and
dec
add
mov
push
pop
inc
mov
and
adcb
fisubrl
sbb
inc
mov
add
dec
fidivl
sbb
push
mov
loop
cwtl
outsl
cli
cltd
sub
push
jnp
enter
insb
sub
imull
mov
xchg
stc
loope
movl
sub
cli
jns
int
sbb
cli
popa
test
repz
inc
add
imul
nop
rclb
adc
daa
shll
add
loopne
push
lahf
and
cmp
push
push
mov
fwait
daa
xchg
jns
sti
jbe
mov
lret
lret
add
insb
enter
push
mov
sub
test
sbb
push
xlat
sbb
mov
imul
movsb
ds
hlt
dec
push
repnz
daa
into
cwtl
outsb
lods
jb
push
pop
inc
mov
jl
test
lea
jmp
loopne
inc
fsubrs
mov
sub
dec
je
lcall
adc
das
xor
pop
mov
cmp
mov
xchg
loopne
adc
mov
dec
push
adc
or
lea
push
cmpb
cmp
mov
pop
pop
push
cmp
push
sub
lret
and
push
mov
xor
pop
cmpb
inc
stos
loop
movl
cs
jp
scas
mov
pop
fiaddl
and
aam
pushf
fucomp
out
xor
push
or
call
ret
xchg
punpckhdq
cmpsb
test
in
fs
xor
test
das
mov
xor
pop
jae
mov
dec
test
int
rcrb
dec
cltd
in
inc
movsl
cmp
rcrb
cli
lds
cwtl
sub
fistl
lcall
scas
das
jnp
xchg
dec
sub
jp
jmp
cmp
fidivrl
fwait
xchg
pop
sub
mov
xor
cli
mov
jecxz
sbb
lods
add
mov
leavew
ret
and
and
shll
loope
mov
mov
jo
pop
adc
pop
imul
xchg
cmc
icebp
mov
push
mov
in
jmp
sub
xchg
mov
inc
or
and
pop
pop
pusha
sbb
or
fsub
inc
movsl
adc
inc
mov
xchg
xchg
mov
or
push
dec
or
test
jnp,pn
jns
mov
iret
imull
and
lahf
enter
mov
mov
xchg
dec
sbb
data16
xlat
add
push
cmc
mov
add
lcall
and
mov
sub
fwait
repnz
cwtl
sub
and
ret
mov
mov
cld
mov
sbb
jns
jae
xlat
arpl
push
inc
popf
sbb
outsb
adc
rcl
leave
out
or
xchg
xlat
cmp
sub
or
in
shrb
aas
sbb
sub
cmp
xchg
adc
add
fiaddl
push
lods
xchg
lcall
sub
fs
addl
mulb
test
mov
popa
movsb
popf
cmpsb
and
mov
ss
les
xor
ss
movsl
push
test
iret
jb
lcall
xlat
leave
lods
or
fs
mov
arpl
shrl
filds
inc
test
xor
repnz
adc
rcll
mov
loope
test
cmc
movsl
adc
inc
adc
pop
lret
clc
cmp
lock
push
clc
inc
sub
ficoml
jnp,pt
sahf
mov
pusha
ret
das
gs
repnz
jmp
dec
xor
or
inc
shlb
sub
sub
test
ds
mov
mov
daa
jno
or
pushf
test
lret
js
sbb
sar
out
jb
aaa
call
xor
inc
jle
lret
jns
add
push
add
imul
push
xchg
repnz
add
pop
in
adc
push
push
jge
gs
or
rcl
push
inc
and
sub
ljmp
test
testb
cltd
movsl
clc
mov
je
test
mov
xchg
inc
add
sbb
lea
jp
nop
in
sarb
movl
mov
add
jmp
jmp
loope
test
mov
shlb
sbb
ficompl
mov
xlat
add
fs
or
push
push
cmpsb
fwait
cmp
mov
inc
mov
lret
push
and
dec
lcall
xor
mov
dec
cmp
adc
mov
in
adc
je
pop
push
cmp
pop
push
ret
mov
xchg
fisttpll
repz
lret
mov
repnz
push
dec
xor
push
add
mov
lock
ds
xchg
adc
loopne
add
jbe
aam
outsl
jmp
xor
sbb
bound
mov
and
xchg
sub
arpl
inc
daa
and
pop
data16
xor
cmpsb
push
dec
clc
stos
dec
jo
mov
popf
jecxz
fadds
jno
std
push
push
aas
popf
mov
and
push
cmpsl
push
dec
pop
addb
clc
repz
mov
popl
push
mov
mov
pop
test
pop
movsl
jb
imul
test
popa
mov
push
shl
adc
icebp
shrb
cmp
and
sahf
jae
fsubl
adc
mov
cltd
fmulp
cmpsb
nop
mov
gs
jae
outsb
mov
add
xor
into
sbb
pop
push
fadds
xchg
rol
sbb
out
fists
sti
aam
maskmovq
negl
push
fists
adc
sub
scas
xor
enter
stos
sub
sarl
xor
test
test
jbe
sub
int
sarl
out
aad
adc
jl
sub
leave
jmp
shl
out
push
mov
pop
cmpb
pusha
dec
roll
rcrb
push
xor
faddl
rorl
xlat
or
lret
popf
sahf
adc
inc
jp
jno
in
add
mov
dec
adc
aam
xor
ffreep
stos
inc
inc
mov
and
xchg
sub
inc
sbb
cs
fldln2
jbe
ficoms
add
push
fimuls
adc
push
outsb
int3
xor
push
add
pop
jns
inc
icebp
loope
fadd
dec
mov
push
cmp
testl
inc
xchg
mov
dec
or
rcrl
incl
dec
jo
add
and
cmpsl
les
and
dec
or
mov
add
or
mov
mov
add
mov
mov
lea
js
rorb
lea
nop
jle
sub
scas
popa
and
sub
pop
arpl
mov
cmpsb
mov
push
notl
and
add
mov
adc
jnp
and
xchg
aaa
lret
es
outsl
mov
inc
inc
enter
lcall
inc
outsl
fisubs
je
in
and
sub
sub
mov
stos
in
stos
and
scas
sti
loopne
fmuls
pop
shll
cmp
ret
jl
add
js
push
xorl
xchg
cmp
dec
stos
fisubrs
std
and
add
and
shll
pop
fistpll
cltd
dec
in
push
jbe
sti
testl
sub
xlat
je
sub
mov
cs
pop
and
sub
push
jne
xor
lahf
sub
sbb
mov
repnz
sahf
mov
dec
cld
das
test
push
loopne
pop
notb
mov
cli
sbb
mov
jge
mov
xor
add
xlat
pop
lcall
mov
jo
jmp
mov
outsl
or
jg
mov
sti
addl
addr16
push
mov
or
jne
mov
pop
sahf
or
scas
fmuls
pop
inc
dec
cmc
sub
fwait
push
in
and
lods
or
xor
dec
xorb
sbb
popf
mulb
jae
shlb
and
stos
sbb
xchg
or
add
out
pop
aad
pop
shrl
cmp
jnp
pushf
or
clc
xor
test
adc
cmp
pop
popa
sbb
or
dec
add
pop
popa
rorl
enter
sub
icebp
push
mov
push
aaa
je
out
adc
dec
xchg
push
add
adc
cmpb
xchg
rolb
lock
scas
cmp
push
fsubrs
add
and
pop
xlat
sbb
cmp
fdivrl
or
xchg
xlat
mov
xchg
cmp
mov
lods
sbb
outsl
or
sahf
add
push
notl
cmp
and
sub
add
xor
pop
adcl
fbld
pop
jge
call
and
and
mov
stos
inc
xor
xchg
add
jns
jge
cmovp
xor
push
pushf
adc
jbe
subl
mov
add
in
xchg
scas
or
pop
add
shl
add
inc
hlt
adc
push
orl
jmp
dec
xchg
fiaddl
jmp
shr
shl
mov
ret
and
or
pop
in
cs
cmpsl
xlat
dec
leave
or
push
jo
int
sub
je
stos
mov
sbb
jno
push
pop
mov
adc
push
pop
pop
sahf
inc
sbb
dec
pop
sbb
enter
jne
ret
movsl
mov
pop
test
into
hlt
in
cltd
lods
jle
pop
mov
js
push
lret
stc
add
mov
rorb
mov
repnz
push
xor
dec
cltd
mov
mov
mov
stos
xor
pusha
cmpsl
addl
adc
lahf
fwait
pop
jbe
test
pop
and
cmp
push
inc
cmpl
pop
push
sub
mov
pop
fs
sbb
hlt
mov
out
cmp
call
cmp
in
push
fs
jbe
popa
test
push
pop
push
mov
daa
push
out
push
pop
dec
mov
jmp
push
jnp
fadd
push
mov
sbb
mov
fstps
addb
pop
mov
je
int3
xchg
adc
pop
and
ljmp
jns
jle
nop
pop
scas
sbb
mov
dec
ret
mov
dec
das
fstl
or
pop
mov
iret
sbb
push
mov
rcrb
loope
out
nop
movsl
pop
add
sbb
jae
cmp
adc
mov
cltd
xchg
push
inc
sarl
mov
call
gs
inc
insb
mov
jp
fbstp
aam
add
mov
icebp
in
rcll
leave
psubd
or
pop
and
stos
or
stos
mov
push
sbbb
mov
outsb
sti
nop
or
and
pushf
mov
xchg
or
xchg
jl
and
xlat
mov
inc
addr16
pop
dec
addb
sbb
jo
daa
cld
pop
stos
push
and
push
outsb
and
dec
testl
fs
inc
sahf
add
mov
sbb
add
or
mov
aaa
pop
inc
frstor
mov
test
in
in
xchg
out
jne
cmp
stos
jmp
xchg
filds
xor
push
push
mov
jnp
mov
fimull
sarb
push
test
lcall
lock
data16
sbb
mov
mov
imul
mov
call
lock
xor
dec
push
mov
mov
rcl
mov
gs
enter
in
lds
add
sub
repnz
mov
daa
and
push
sahf
movsl
sub
daa
test
mov
out
sbb
out
sar
dec
lcall
dec
repnz
ss
cmp
or
mov
outsb
mov
test
cmp
inc
pop
test
pop
cltd
xor
movsl
add
les
mov
daa
loopne
or
dec
fadds
or
rclb
movsl
mull
mov
jae
adc
lock
mov
aad
pop
xor
push
je
rclb
cmp
mov
cs
jmp
fprem
movsl
xchg
paddusw
cmp
mov
and
mov
das
cli
mov
add
jno
pop
dec
inc
mov
lock
fmuls
lret
sarl
inc
cmp
xchg
push
inc
add
adc
in
test
lret
fdivr
cs
imul
das
insl
addr16
pop
iret
jae
mov
dec
pusha
test
in
mov
push
imul
popa
out
sbb
mov
jo
decb
ss
cmp
mov
push
dec
mov
ficompl
clc
lea
dec
aaa
mov
fwait
dec
xchg
aam
or
imul
gs
stc
rclb
or
adc
popf
sbb
jne
orl
shlb
sti
lcall
insl
in
inc
adc
jmp
ficoms
mov
iret
test
in
das
and
popf
mov
jmp
inc
aaa
ficompl
shlb
fists
jnp
cmc
stos
mov
clc
mov
xchg
xchg
mov
aaa
shlb
mov
aam
jge
fnsave
inc
cmp
sti
int
push
fsin
mov
adc
nop
jno
out
jae
stc
or
dec
das
aaa
nop
mov
add
mov
pop
jmp
imul
loope
jecxz
xchg
mov
fstpt
cli
pushf
xor
cmp
and
mov
pop
jno
into
add
loop
dec
jle
mov
cmp
cmpsl
lock
pop
adcl
mov
push
dec
and
hlt
ffree
scas
fldt
mov
sub
ljmp
stos
xchg
mov
incb
iret
push
sbb
loope
sbb
mov
clc
in
push
jo
cld
jecxz
mov
loop
mov
insl
jbe
out
call
rcl
fdivl
sub
xchg
add
movsl
pop
push
push
outsl
in
cmpsb
adc
lret
mov
cmp
stos
adc
xor
out
outsl
jp
dec
ljmp
or
mov
add
pop
cmpsb
in
ja
divb
cwtl
and
call
sbb
cmp
or
inc
dec
aam
mov
push
mov
fwait
mov
data16
nop
cld
std
push
mov
cmp
js
sub
rclb
std
test
iret
jne
adcl
push
cltd
push
insb
mov
mov
sub
sbb
mov
mov
mov
stos
lock
mov
or
shr
test
jns
cmp
ja
or
xchg
lcall
cmp
scas
fistpl
jo
scas
dec
mov
xchg
or
and
unpcklps
xor
adc
out
mov
adc
or
or
xchg
xchg
xor
mov
popa
dec
push
lock
stos
jbe
stc
push
mov
dec
mov
cs
mov
or
xor
xor
jbe
std
or
popf
and
sbbl
aam
pop
push
rclb
add
ss
lret
and
mov
cmp
jno
sbb
mov
adcb
dec
mov
push
sbbb
int3
sbb
test
int3
pop
mov
leave
xchg
sbb
jne
lods
sub
pop
mov
insl
insb
sub
or
aas
xchg
add
jne
fdivrl
mov
or
iret
inc
icebp
sbb
arpl
scas
mov
push
ds
sbb
adc
jns
into
in
inc
inc
stos
mov
pushf
cmp
or
jo
push
xchg
dec
adc
mov
sarl
push
js
aad
and
iret
cmp
daa
cmc
orl
push
aam
sub
roll
stos
arpl
aam
pusha
insl
jae
lret
test
cwtl
btc
mov
and
push
jle
mov
dec
rcl
mov
shll
adc
sti
loop
daa
mov
mov
adc
pop
loope
addr16
xchg
cmpsb
ret
jg
clc
adc
inc
aad
sbb
outsb
shl
and
enter
lret
push
into
out
nop
cltd
dec
rorb
ret
ret
sbb
mov
sub
sbb
xchg
cmp
negl
rorl
pop
fisubl
mov
xchg
dec
and
jae
and
lock
mov
adc
push
int
fs
xchg
inc
mov
push
inc
inc
jne
cwtl
loope
dec
stos
xchg
test
sbb
lcall
jns
ficomps
jge
push
sub
and
mov
movsb
clc
dec
ret
cmp
dec
insl
mov
leave
xchg
sub
mov
imull
inc
cs
ret
or
cli
dec
aaa
or
push
cs
out
push
xor
movsb
insl
mov
lods
fcoms
xor
jb
lret
cmpsl
lock
inc
addr16
mov
std
xchg
add
adc
data16
mov
dec
out
xor
push
es
ret
fnsave
inc
jno
pop
fs
push
ja
inc
mov
push
ret
ljmp
ret
add
sti
insl
fildl
out
and
or
rorb
inc
mov
test
shll
cld
xchg
mov
andl
sub
addr16
xchg
pinsrw
loopne
loopne
and
inc
adc
out
jp
in
mov
sbb
pop
inc
roll
xlat
ljmp
test
shl
js
mov
xor
scas
xchg
out
les
fs
test
sbb
mov
ffreep
sahf
pop
jns
and
in
and
stos
loopne
nopl
pop
stos
dec
loope
mov
add
clc
jge
mov
mov
ror
push
inc
lods
rcl
sub
dec
and
and
mov
mov
xacquire
in
and
frstor
subl
sub
cli
je
inc
ds
mov
and
lods
dec
mov
mov
mov
push
leave
mov
outsb
jg
add
inc
add
aad
out
xchg
addb
and
leave
sbb
setne
mov
imul
mov
or
rcr
xor
and
mull
and
or
test
cltd
cmp
lds
repnz
mov
pop
sbb
xor
adc
or
add
jmp
dec
cmp
lret
inc
mov
push
sbb
out
inc
mov
push
and
fdivl
sbbb
cmp
jno
call
dec
sub
and
xchg
jae
mov
sub
inc
out
aad
sub
dec
ds
adc
mov
sbb
negb
push
dec
dec
jle
js
push
mov
aaa
add
mov
pop
ret
jns
fs
cmp
or
fwait
inc
test
pop
adc
push
dec
fcomps
xchg
aam
pop
add
lods
mov
loopne
dec
mov
lret
test
pop
mov
call
imul
inc
push
xor
stos
and
shll
and
cld
pop
add
or
das
inc
loope
cmc
adc
loopne
pushf
xor
orb
sub
xchg
sbb
iret
movsl
arpl
push
xor
add
outsl
imul
mov
xor
pop
movsb
pop
iret
mov
mov
out
repz
jno
xor
gs
dec
enter
aam
pop
in
addr16
jbe
popa
adc
imul
outsb
leave
pop
test
arpl
xorl
sbb
mov
sbb
jg
fldenv
repnz
and
sbb
push
xor
lock
and
xchg
push
mov
and
out
fiadds
add
loop
int3
out
mov
dec
mov
mov
inc
sbbb
inc
xor
sub
test
jae
fstps
push
rorl
mov
cltd
insb
out
sub
aad
xchg
mov
or
pop
lretw
pop
and
loop
adc
mov
xchg
aad
iret
loope
mov
dec
push
ret
dec
mov
fisubrs
mov
mov
mov
stc
hlt
jo
pop
icebp
aad
xchg
push
and
lea
xchg
data16
out
or
fimuls
test
cmovno
arpl
ljmp
bound
stos
mov
lods
and
stos
shrb
out
cld
ret
lahf
cmpb
sti
push
inc
and
pop
std
dec
pop
mov
insb
das
data16
fs
js
aam
cwtl
stos
ja
jb
ljmp
cmpsl
sbb
in
les
push
cltd
lahf
xchg
mov
fldcw
addr16
mov
dec
jo
test
adc
push
push
mov
mov
cmp
push
popa
xchg
mov
pop
pop
sub
pmuludq
psrlw
filds
mov
or
jg
jp
pop
shlb
test
adcb
sub
sbb
decl
mov
rcrl
add
add
ret
mov
repnz
loop
in
aam
addl
dec
pop
jne
sub
stc
sub
sub
mov
add
sub
mov
pop
inc
mov
lret
loop
add
aaa
jl
xor
push
push
push
jae
insl
repz
scas
or
lcall
jne
notl
mov
insb
push
stc
cld
scas
mov
cwtl
push
inc
mov
adc
aaa
mov
data16
test
mov
add
rclb
cmp
mov
mov
loop
jle
xchg
es
or
arpl
add
dec
out
bound
xlat
mov
out
in
mov
jp
xor
jmp
inc
add
mov
loop
inc
fcom
scas
dec
mov
pop
pop
xchg
shrl
cmp
mov
jne
and
ret
into
lods
and
push
outsb
jg,pn
dec
mov
nop
add
mov
jb
movsl
scas
cld
insl
movsb
sbb
cltd
adc
fistpl
fs
dec
or
or
sub
jno
mov
cmpsb
sti
fcomps
mov
incl
adc
aaa
cwtl
or
push
das
subl
push
pushf
hlt
pop
xchg
fnsave
repz
hlt
dec
dec
cmp
or
jp
xchg
ficoml
pop
int
or
inc
fadd
shl
sbb
xchg
pop
mov
dec
ret
lock
popa
mov
lea
mov
pop
cmpl
or
faddl
sbb
mov
jmp
fists
mov
pop
dec
aas
or
and
mov
aaa
pop
mov
or
aaa
fwait
pushf
xchg
cltd
xor
mov
jno
enter
lods
sbb
cmpsl
test
push
sbb
movsb
in
stos
add
fisubs
nop
fistl
sti
cli
or
nop
rcrl
and
xchg
popf
adcl
pop
mov
mulb
sahf
xchg
jl
sub
aad
pop
add
jecxz
shll
xor
adc
ret
cmc
dec
loopne
hlt
add
es
lahf
in
push
push
add
push
and
popf
inc
in
mov
inc
hlt
mov
cmp
fstl
mov
push
lds
adc
sarl
cmp
out
and
sbb
cmp
je
pop
push
les
into
repz
out
mov
mov
aaa
hlt
pop
lock
jae
test
pop
push
dec
mov
sbb
jmp
pop
dec
inc
cmpb
xchg
sbbb
out
stos
xchg
cltd
add
mov
filds
add
lcall
orl
imul
cwtl
mov
adcb
mov
in
push
and
add
adc
popf
int3
lcall
push
clc
mov
aad
loop
mov
pop
push
movhps
arpl
ficompl
nop
xchg
inc
test
push
lcall
mov
sub
add
jge
or
fisubrl
jne
aam
dec
into
imulb
icebp
mov
jmp
mov
scas
inc
ljmp
or
dec
or
and
lods
int
jge
push
loope
aam
xor
lret
cwtl
outsl
lret
test
sti
shl
adc
cmpb
mov
mov
cmovp
test
lahf
cmp
sarl
rol
loop
jne
outsl
movsb
cwtl
add
js
mov
jo
es
lods
or
outsb
xchg
xchg
shll
jmp
cmp
xchg
push
fcom
push
push
jmp
shrl
push
jns
and
jb
lret
sub
popa
arpl
rorl
stos
jecxz
sbb
mov
xlat
aaa
jmp
cmpsb
add
xchg
jbe
xor
dec
mov
cmp
mov
ficoms
sbb
xor
xlat
sub
sub
mov
mov
cmp
lahf
mov
push
dec
cmpl
jo
leave
push
sbb
enter
or
cmp
ds
mov
and
xlat
int3
inc
push
imul
lea
or
in
out
stos
pop
or
arpl
inc
cmp
popl
pop
cmp
push
mov
cmpb
sbb
testb
pusha
test
mov
mov
xchg
std
aaa
test
jnp
popa
inc
inc
push
xchg
sbb
cmp
std
imul
popa
fstpt
cmp
xor
es
push
ffree
scas
fdivl
in
daa
push
inc
scas
mov
cld
inc
lret
outsb
mov
les
mov
test
inc
pop
imul
je
mov
fbstp
jg
test
xchg
ret
in
fcmovbe
sub
shlb
and
minps
repnz
dec
inc
push
cltd
es
filds
pop
inc
iret
lock
lods
jbe
xor
ss
ss
stc
ds
fwait
loop
add
mov
dec
push
jl
sbb
movsb
addr16
movsl
testb
repnz
jnp
aas
mov
popf
ds
cmc
inc
cli
mov
cmp
div
xor
xchg
cmp
jae
hlt
add
dec
ljmp
pop
xchg
and
test
fisttpl
pushf
xor
fisttpl
in
mov
dec
adc
call
popf
and
push
cltd
xchg
push
xchg
sub
ret
ret
adc
xchg
ret
popf
push
jl
or
popa
stos
lods
clc
jo
push
and
test
dec
pop
insl
push
pop
dec
sbb
cmpsb
and
or
mov
and
sub
mov
add
cmpsb
xchg
icebp
jl
stos
lods
pop
lcall
pop
out
test
lods
jne
scas
jae
sbb
add
int3
xchg
aad
inc
add
sub
xchg
mov
shr
in
cltd
mov
pop
pop
adc
cmp
iret
iret
jns
and
push
adc
mov
xchg
popf
fldcw
fistl
add
shr
inc
ret
js
pop
mov
lods
jnp
xor
xchg
shlb
pop
push
ror
jo
loop
out
test
fisttps
xor
imul
je
pop
cltd
mov
inc
stos
and
enter
out
xchg
xor
rcrl
rclb
adcb
jmp
roll
lea
push
int3
aaa
cmp
xor
cmp
popa
stos
nop
jae
add
enter
inc
push
and
push
lock
add
cli
movsl
add
pop
or
add
insl
mov
mov
pushf
std
sti
jge
xor
jl
and
fiadds
or
shl
test
add
fidivrs
sbb
dec
test
adc
fmul
out
sbb
xor
es
and
mov
out
mov
les
push
fs
scas
sahf
js
sti
in
add
std
stos
push
xchg
or
aas
jl
pop
call
push
lret
outsb
sbb
sbb
lods
sahf
outsb
dec
int3
popf
push
cltd
cmpsb
ret
xchg
add
adc
fnstcw
movsl
inc
fstl
dec
ror
mov
mov
sbbb
and
lahf
shr
iret
ljmp
jl
test
lods
mov
push
mov
push
mov
mov
fnstsw
negb
mov
pop
and
cmp
fldt
xchg
and
adc
addr16
dec
iret
aam
xchg
push
fildl
mov
jg
cs
inc
xchg
jae
mov
sbb
jecxz
mov
adc
mov
aad
sbb
pushl
jnp
or
push
js
inc
pop
or
mov
push
jbe
jecxz
pop
ficoms
jno
mov
stos
and
in
push
fsubl
pop
aad
mov
mov
cmc
pushf
cmp
lea
inc
adc
jp
lahf
repz
stos
pop
jl
imul
cmp
mov
mov
adc
aam
pop
inc
add
in
adc
jnp
mov
repz
test
pusha
fcomps
repz
lret
xchg
ret
jno
jno
mov
rclb
jle
mov
into
sub
ljmp
jge
pop
pop
dec
xor
outsl
aas
or
aaa
or
sub
sbb
or
lret
xchg
add
mov
outsl
dec
popa
inc
test
push
push
adc
movsb
hlt
test
dec
sbb
nop
cli
jge
ret
ds
fs
pop
jbe
jl
test
ss
repnz
xor
jo
daa
xchg
inc
adc
repnz
sbb
sub
add
mov
fistps
daa
inc
imul
add
xchg
nop
imul
out
addr16
or
push
loop
test
loopne
cmc
push
je
mov
inc
jge
in
dec
ja
push
or
test
or
pop
out
sahf
xchg
xchg
hlt
xlat
out
and
sbb
cltd
push
lahf
mov
lret
mov
cmp
fadds
mov
enter
shlb
sub
push
xchg
xor
out
stos
jae
xchg
sub
cmpsb
mov
sbb
and
cmp
inc
dec
jle
hlt
inc
dec
loop
dec
xchg
add
es
jmp
popf
out
in
jg
cmp
push
and
jmp
pop
cmp
and
add
xchg
cmp
outsl
xorl
test
imul
popf
jae
or
fidivrl
dec
adc
sete
out
subb
popf
cmpsb
jns
fimull
xor
and
stos
ret
adc
aas
mov
pop
sti
dec
xchg
xchg
out
cmp
addb
fsubl
fildl
lods
subb
shr
mov
fiaddl
xlat
call
jge
lret
ficoml
in
xchg
cld
scas
jno
jno
outsl
jg
pushf
push
incl
mov
enter
cmpsb
stos
cli
mov
xor
xlat
cmp
jno
sub
add
cli
shlb
scas
xor
jge
mov
loop
ror
sar
xchg
movsl
jo
clc
dec
pop
bound
dec
stc
mov
lea
data16
xor
mov
push
aad
and
out
rcr
jno
flds
int
push
inc
sbb
push
fstpl
jbe
and
das
add
js
mov
mov
stos
mov
push
xor
out
outsb
insb
imul
mov
add
call
jns
mov
dec
dec
sub
mov
out
xorl
inc
mov
jl
insb
das
in
enter
mov
dec
mov
cwtl
sub
inc
sti
mov
mov
jl
jge
sub
imul
test
scas
push
js
cmp
pushf
insb
cmp
js
jge
into
lds
pushw
push
add
in
xchg
lret
xchg
sub
mov
das
inc
sub
stos
fcmovne
ret
push
fwait
or
mov
push
inc
test
dec
out
hlt
push
insl
mov
xor
in
mov
outsb
scas
pop
adc
xlat
push
push
add
mov
js
add
mov
inc
inc
and
ret
inc
fmul
int
and
mov
dec
add
mov
cmc
jecxz
push
fcoml
sbb
pop
pop
fstl
rcl
mov
dec
mov
mov
jmp
data16
xor
jg
test
repz
cmc
idivl
mov
icebp
fadds
dec
xchg
cwtl
dec
add
sbb
filds
call
cmp
sbb
inc
xchg
or
std
inc
icebp
jg
je
shrl
jge
mov
mov
sbb
sbb
movsb
in
dec
lret
xchg
pop
pusha
fs
lcall
pop
pop
inc
sub
pop
ds
xor
push
iret
std
icebp
cmpsl
inc
cmpsl
pop
aaa
icebp
or
rcrl
cli
xchg
jmp
out
test
jmp
push
xchg
mov
aam
pop
jle
fistl
push
cmp
daa
lcall
mov
mov
nop
test
cmp
fs
adc
cmc
add
cmp
cld
out
nop
add
icebp
or
arpl
xor
popf
ffreep
xchg
push
paddq
js
jmp
in
sub
adc
jg
or
xor
jnp
ror
scas
dec
jg
and
sbb
jl
pop
jbe
adc
cmpsb
add
lock
sarb
mov
jge
inc
out
addl
sbb
mov
mov
stos
das
aad
dec
rcll
and
push
int
es
mov
add
dec
inc
cmp
std
cmc
jb
lock
pop
xchg
out
std
xchg
jmp
pop
adc
cmp
push
mov
jle
dec
in
or
pop
ljmp
mov
insb
sbb
cs
arpl
adc
sahf
mov
mov
mov
cmc
mov
pop
sbbb
imul
adc
lods
cmpsb
cmp
dec
mov
mov
mov
inc
or
je
into
imul
cmp
push
inc
js
jge
dec
jmp
and
pop
movsl
inc
sbb
aam
shrl
dec
xor
mov
and
xchg
fidivl
adc
mov
lea
lahf
popa
outsb
jo
int
cwtl
jecxz
jae
movsb
adc
jns
movsb
mov
in
or
push
int
mov
push
psrld
dec
or
adc
sub
push
pop
xchg
push
pop
xor
lds
inc
push
stc
mov
pop
sbb
or
cmp
lret
std
cmp
test
add
cmpsl
jecxz
xor
loopne
fisubrs
adc
or
or
scas
xchg
stos
es
dec
loopne
xor
push
mov
add
rolb
pop
in
fists
mov
in
ror
faddl
rcr
popf
mov
xor
sub
fisubrs
mov
out
push
hlt
jmp
mov
pushf
popf
dec
sbb
call
mov
es
mov
lret
popa
push
lcall
push
outsb
into
pop
xchg
mov
cmp
add
xchg
cmp
sub
pop
jne
mov
shlb
xlat
xlat
negb
dec
and
and
loope
inc
mov
out
sarl
push
bound
inc
sar
test
pop
add
adc
inc
pop
or
push
lcall
xchg
cli
icebp
mov
outsl
jb
rcrb
cmp
ds
imul
xchg
add
add
popa
popa
fdivrs
xor
sti
imul
jg
adc
popa
out
in
push
or
loop
sbb
leave
pop
je
mov
pushf
push
mov
leave
cmp
adc
imull
out
pop
fs
stos
adc
xchg
stc
push
fsub
add
lcall
mov
and
shrb
mov
loope
and
popa
into
pop
fadds
add
sub
popa
lahf
push
dec
in
push
bound
bound
test
and
adc
cmp
push
subl
xchg
and
testb
and
int
loopne
cmp
inc
pushl
cmpsb
xchg
pop
into
imul
test
or
aaa
ds
and
aam
fcoml
cmpsb
orb
mov
cmp
jnp
jns
adc
inc
aaa
jp
sub
cld
adc
mov
test
into
pop
lahf
lcall
scas
add
sub
gs
xchg
pop
sbb
mov
fsubrs
sti
sub
outsb
fldcw
js
push
inc
cld
into
enterw
test
imul
mov
fdivr
xchg
testb
sbb
dec
dec
push
push
mov
xchg
and
imul
jmp
imul
test
xchg
mov
sbb
mov
in
jmp
push
xor
or
jae
jno
inc
adc
cmp
push
ds
aaa
dec
mov
js
adcl
insb
mov
fwait
mov
jae
mov
outsb
jnp
fdivr
loopne
imul
ret
test
lahf
in
pop
pop
dec
inc
pop
mov
bound
es
or
mov
adc
push
xchg
enter
aam
mov
mov
mov
lret
repz
pop
xor
jnp
test
fisttpl
ficompl
adc
test
cld
sub
push
pop
and
data16
ja
ds
cli
mov
ljmp
es
inc
lds
sti
push
xchg
pusha
mov
stc
lcall
push
sub
insb
inc
stos
repnz
leave
aas
mov
jle
jns
cli
inc
jnp
hlt
dec
pop
insl
ret
sbb
xor
mov
mov
sahf
sbb
jo
jbe
mov
or
mov
mov
mov
lcall
in
es
xchg
shrb
js
add
cli
enter
scas
aam
push
fwait
pop
cld
xchg
xchg
add
ljmp
and
mov
fnstsw
sub
imul
rol
clc
fs
fcomps
and
xor
jle
mov
or
test
cmpsb
sbb
test
ret
mov
add
imulb
push
imul
mov
mov
es
out
pushf
daa
dec
and
fistl
xor
lods
ja
cmp
cld
imul
in
int
cmpsl
push
mov
lds
les
push
jecxz
dec
sub
lods
push
sahf
cmp
int3
cmp
xor
push
sbb
fnsave
das
in
out
cld
lock
aad
out
and
imul
and
lds
insl
int3
push
fisttps
clc
fdivr
nop
mov
mov
add
jp
or
lods
sub
inc
stos
jae
cmp
ret
pop
leave
rcrl
xor
sti
aam
or
xor
shll
mov
jns
sub
aas
stc
xchg
mov
loopne
mov
jle
and
mov
inc
cltd
and
fcoml
call
jbe
jo
cmc
mov
inc
out
pop
sarb
leave
cmp
aas
sbb
dec
movsb
or
xorb
push
cmp
jp
xchg
or
ds
icebp
jnp
dec
cmp
ret
js
mov
xor
out
outsl
mov
faddl
imul
push
jmp
sbb
dec
xor
cmp
jge
es
mov
mov
rcrb
insl
enter
scas
adc
xchg
add
adc
aas
scas
shl
pop
mulb
es
stc
mov
mov
faddl
imul
stc
punpckhdq
jne
mov
daa
lahf
das
push
jg
ret
mov
test
add
pop
rcr
loop
faddl
movsb
push
popa
add
mov
pop
xor
dec
cli
adc
testb
cwtl
mov
sub
ret
aad
insb
rolb
cwtl
mov
vorpd
sahf
lea
adc
repnz
add
push
shlb
repz
cmp
loope
xchg
push
jnp
push
dec
cmp
jl
inc
add
sbb
test
aas
sar
test
sbb
inc
xor
lahf
push
fwait
mov
mov
mov
js
clc
or
aaa
outsl
jo
inc
xchg
xchg
je
push
es
mov
aas
xchg
shrl
add
inc
psubw
mov
cmpsl
sbb
xchg
in
cs
xor
imul
rcr
rol
inc
cmp
sub
fsub
mov
sti
ret
dec
repnz
mov
cmp
xchg
dec
pop
mov
bound
lahf
icebp
lea
jno
into
xor
dec
push
lahf
mov
push
ret
cld
bound
mov
jle
scas
shll
mov
dec
xchg
leave
adc
push
mov
sub
lds
sbb
out
loope
jb
jb
inc
add
and
les
mov
sbbl
mov
sbb
aam
sbb
xor
loope
fimull
sar
outsl
les
inc
lock
jl
xchg
mov
aam
pop
outsb
dec
dec
call
sahf
mov
and
push
loopne
dec
cmp
jecxz
in
xchg
cmp
fstps
lock
in
push
imul
outsb
sbb
dec
out
jle
xor
nop
mov
fsubs
pop
inc
inc
jp
pop
jmp
pavgb
adc
cmpsb
lods
mov
test
push
inc
sbb
inc
sbb
add
or
add
clc
adc
mov
in
jp
push
sub
push
jp
pushl
fstps
pop
idiv
clc
adc
sbb
scas
movsl
ds
ss
pop
sub
push
sbb
pop
repz
dec
enter
fmul
clc
add
inc
pop
out
inc
insb
push
lock
push
add
enter
fldl
push
jmp
aas
andl
lock
repnz
andl
mov
and
push
int
mov
jbe
clc
das
mov
aad
push
push
or
push
pusha
in
jb
jno
dec
jg
and
loop
mov
pop
jmp
dec
push
aaa
ljmp
mov
pop
insl
pop
js
shlb
int
pop
popf
sub
sbb
push
lret
inc
ds
xchg
jns
das
fsubrl
mov
clc
aad
cmc
int3
mov
clc
pop
outsl
add
leave
cwtl
xor
xor
pop
insb
das
std
arpl
add
add
xchg
pop
sub
adc
jo
cmpsl
lcall
test
mov
or
or
jae
je
enter
xchg
loope
cmovle
xchg
insl
jne
mov
jmp
mov
loopne
inc
mov
cltd
fmuls
sbbb
sub
aas
arpl
ja
mov
inc
xchg
or
push
and
push
stc
call
cmp
fidivrl
cld
in
imul
insl
jnp
sbb
or
push
xlat
jg
mov
das
mov
jge
xor
cmp
fucomip
popa
ret
jl
ja
lock
ret
fwait
cmpsl
jl
push
sbb
mov
inc
js
cmp
push
sbb
add
jle
sub
insb
cmpsl
lret
movsl
adc
add
inc
cmp
es
cmpl
cmpsb
mov
xchg
test
in
leave
lea
sub
inc
fstpl
ja
mov
pushl
data16
arpl
fimull
jecxz
push
push
lret
lahf
inc
sub
sbb
sbb
sbb
jb
movups
jle
cwtl
out
dec
adc
cmpsl
insl
push
push
ja
jl
cmp
inc
jae
mov
jne
insb
push
popf
repnz
add
repnz
sbb
xor
sub
push
fwait
push
sbb
mov
ret
in
pop
push
imul
cmpl
or
inc
popf
cld
sbb
lahf
scas
push
sbb
les
roll
dec
dec
add
xchg
lods
popf
lods
mov
and
inc
mov
lock
ja
xchg
pop
mov
adc
inc
mov
loope
or
inc
loope
push
int3
aad
outsl
and
jo
sub
push
pop
mov
js
dec
ja
out
pop
dec
xor
pop
ja
sti
add
inc
xor
sub
and
ljmp
push
incb
and
mov
cld
sahf
cli
jb
cwtl
jle
cmp
mov
js
lds
mov
mov
and
gs
and
into
xorl
adc
mov
mov
xchg
push
int3
sti
loopne
repz
repz
div
fs
inc
lea
lahf
lea
fwait
or
mov
mov
sbb
jae
push
sub
inc
lret
and
lock
jno
cmp
cwtl
mov
inc
jle
mov
jle
jle
hlt
shrb
into
insl
push
lahf
dec
dec
adc
mov
pop
push
or
or
xor
out
pop
and
jmp
dec
inc
adc
in
adc
and
mov
pop
jge
mov
cmp
cwtl
iret
mov
adc
mov
rclb
jg
push
movsl
mov
xchg
ja
inc
xchg
and
ljmp
out
ljmp
loope
add
cltd
bound
xchg
mov
dec
loopne
pop
pop
mov
ljmp
addl
jl
jno
pushf
dec
adc
push
negb
dec
pmaxub
sub
xor
push
pop
dec
add
bound
sbb
addl
pop
jge
mov
test
or
add
test
sbb
mov
leave
pop
idiv
hlt
jl
sbb
les
sbb
pop
jmp
sbb
inc
imull
fwait
addr16
mov
sbb
fcompl
popa
lods
test
pcmpeqw
jbe
mov
pop
lcall
add
jmp
xor
pop
push
dec
fisubrs
lods
dec
sbbl
lods
cmp
cmpsl
hlt
int
sbb
lret
sbb
mov
adc
cmp
mov
test
int
xor
leave
inc
dec
lods
inc
inc
scas
clc
add
les
daa
stos
sbb
in
in
dec
pop
or
mov
test
repz
sbb
cwtl
out
or
aaa
lcall
jl
push
xor
mov
dec
in
jb
jg
dec
pop
xchg
in
push
arpl
or
pop
hlt
lret
ljmp
cmp
add
and
test
adc
add
adc
outsl
shr
fiadds
and
sahf
pop
sub
adc
mov
stos
xlat
fimull
mov
add
shlb
vprotd
pop
lea
mov
jbe
pop
mov
pop
test
adc
mov
stos
xor
js
xchg
pop
fcoml
cmp
lcall
mov
and
imul
dec
dec
adc
clc
jbe
stos
jno
sub
cmp
nop
push
cli
test
jns
in
ret
lea
enter
addb
fs
int3
adc
fsubs
int
ret
push
jbe
xor
leave
adc
stos
mov
sbb
ljmp
mov
add
or
cwtl
insb
and
or
mov
sbb
pop
out
sbb
xor
sub
outsb
xrelease
lret
rclb
sub
pop
push
arpl
mov
out
iret
dec
adc
jl
icebp
sub
mov
fwait
sbbl
sbb
cs
mov
shrl
add
dec
fldenv
xor
loope
pusha
out
rorb
popw
orb
cld
ljmp
push
rcrb
dec
lds
fidivrs
ds
cmp
xchg
xor
push
pop
sub
imul
jle
stc
in
sbb
push
xor
in
test
jmp
or
mov
js
jl
inc
mov
mov
adc
mov
add
and
int
das
in
jne
adc
movsb
lods
cmp
js
testl
stos
jb
cmp
jg
filds
in
frstor
jnp
pop
pop
mov
aad
push
dec
mov
and
mov
scas
loope
mov
dec
stos
lahf
arpl
adc
shlb
push
lods
mov
and
and
outsl
out
enter
sbb
dec
and
fsubs
mov
cli
andb
mov
xchg
push
mov
nop
xchg
andb
loopne
shl
hlt
addb
sbb
js
ds
lods
lret
stos
sar
lods
movsl
xchg
sbb
mov
xor
mov
push
cwtl
inc
cmc
xchg
xchg
in
mov
sahf
fisttps
fnsave
adc
sub
fs
or
mov
fldcw
lds
lret
add
dec
test
jg
xchg
ret
int3
and
mov
clc
add
cmpsl
je
adc
decl
shlb
dec
imul
lret
loope
shlb
dec
je
sub
xlat
scas
std
cmc
xor
movsl
insl
adc
subl
inc
jae
sbb
or
dec
push
popf
sub
dec
pushf
cli
xor
mov
jg
bound
sub
idivl
sub
lea
sbb
pop
sbb
jmp
aaa
daa
daa
lock
or
adc
adc
sbb
int3
imul
or
jne
out
lret
mov
add
test
adc
notb
inc
scas
out
inc
icebp
xorb
test
pop
ftst
out
addr16
xchg
push
xchg
mov
mov
and
cltd
iret
add
mov
lret
mov
xchg
dec
sbb
sbb
sti
sub
test
mov
push
jge
dec
test
push
fildl
loop
push
ret
xchg
xor
xchg
rcl
jns
insb
sbb
clc
mov
std
fnsave
cmpsl
jo
lea
push
xor
daa
loopne
inc
insl
add
test
cmp
lock
mov
je
jp
pop
pop
cwtl
push
cmpsl
out
scas
ss
ja
popf
sti
testl
xorb
mov
lds
xchg
pushf
movsb
dec
jno
jno
xchg
jecxz
sbb
stc
cmp
stos
jb
je
fldt
clc
popa
mov
subb
fimuls
push
jle
call
and
sub
popa
insl
dec
movsl
ljmp
ds
pop
call
cld
jge
imul
pop
imul
sbb
xor
sub
inc
inc
clc
mov
mov
pushf
adc
insb
lret
dec
je
outsl
pop
cmp
pop
mov
push
gs
cmp
sub
shrb
sub
jo
sbb
out
and
in
lahf
std
mov
and
add
pop
rcrl
and
cs
pusha
pminub
mov
or
ja
out
or
cmp
jns
xchg
repz
mov
fstps
xchg
sbb
jb
xchg
inc
xchg
aad
fisttpll
es
xchg
and
std
fisttps
and
add
xor
int3
adc
xchg
stos
test
shrb
out
xchg
jp
mov
jne
loop
xchg
test
sub
dec
pop
iret
xchg
es
cld
in
loopne
cli
repz
fdivs
in
scas
inc
pushf
into
jecxz
pushf
sub
cmp
jb
sbb
dec
pop
loopne
mov
scas
divb
xor
jge
fsubrl
inc
ss
mov
ja
inc
shl
out
cmpb
jg
aad
jne
push
dec
adc
sbbb
nop
inc
push
xor
inc
aad
push
rcrl
pop
test
je
xchg
xchg
adc
and
clc
dec
nop
or
test
adcb
fdivr
or
es
enter
sbb
fnstenv
fsubrs
in
xchg
aaa
lds
adc
pop
push
ret
xchg
insl
cmp
xorb
sub
sub
aam
das
cmp
test
gs
xor
jo
push
ret
jmp
out
mov
xchg
divb
push
mov
stos
pushf
dec
out
xchg
cmp
jl
imul
dec
bound
aad
cmpsb
inc
aaa
or
adc
sbb
nop
shrb
add
jl
shr
mov
imul
push
and
and
popl
aam
cmpsl
sub
xchg
sbb
push
and
dec
imul
xor
scas
mov
xor
dec
loope
xchg
push
and
adc
mov
jle
sahf
mov
mov
out
scas
fldl
mov
mov
push
or
ret
out
popf
cmpl
jmp
shll
lods
gs
int
lahf
cmp
push
dec
mov
ljmp
aas
aam
push
mov
jl
mov
mov
mov
clc
xor
or
repnz
pop
mov
imul
xor
cmc
pop
test
jp
das
mov
into
pop
lods
push
cmp
xchg
mov
pushf
popf
shll
mov
dec
dec
mov
push
fwait
cmp
mov
nop
jnp
aas
int
vmovntdq
xlat
cltd
or
pushl
testl
sahf
test
mov
lods
fldt
movsl
in
add
imul
pushf
pop
jmp
nop
push
int
insl
dec
push
mov
nop
movsl
or
push
jo
call
popf
fdivl
add
nop
loopne
push
rcr
leave
fdivr
cmp
data16
mov
sub
cmp
test
dec
push
adc
scas
push
clc
mov
push
pop
enter
cmp
push
or
pop
jecxz
mov
iret
mov
pop
xchg
push
cmp
fcoml
mov
stos
mov
aam
mov
mov
add
daa
rolb
adc
decl
dec
repz
push
pop
adc
jge
test
daa
stos
push
pop
adc
pop
pop
mov
pushl
scas
jmp
clc
dec
mov
fldt
movsb
mov
inc
addr16
push
in
flds
js
call
pushf
insl
inc
push
inc
aas
push
dec
adc
cmp
xchg
push
mov
mov
jg
mov
mov
lock
cld
sub
leave
fscale
std
jnp
or
iret
or
testb
push
and
fdivl
xchg
cmp
cmc
out
push
sub
adc
addr16
in
fimull
dec
xchg
pushf
incb
sub
dec
daa
in
inc
inc
js
outsl
inc
jl
dec
inc
pop
arpl
inc
das
lea
icebp
sbb
jo
int
dec
fisubl
fcom
mov
adc
fcomps
push
cmpsl
xor
stos
aaa
sbb
xor
pop
cwtl
cmp
cmc
orl
mov
fisttpl
push
scas
hlt
jbe
repz
add
or
dec
sub
movsb
mov
xor
mov
inc
int
pop
adc
or
xchg
setp
ret
xor
outsl
jns
les
gs
sbb
rclb
sbb
scas
xlat
xchg
xchg
adc
add
sahf
mov
neg
pop
movd
cli
fnstcw
dec
mov
je
icebp
sub
xchg
fwait
sub
aam
cmc
fs
cwtl
and
push
out
andps
pop
aaa
loop
scas
mov
sub
aam
xchg
mov
adc
add
and
cmp
aam
cwtl
out
repz
rorb
cli
decb
mov
fxch
push
push
js
cmp
mov
dec
mov
cmp
xchg
xlat
adc
jnp
pushf
roll
fwait
aad
jo
inc
lret
imul
jno
mov
push
mov
popf
dec
jg
sbb
jno
sub
dec
push
lds
xor
cli
adc
aas
arpl
sahf
dec
jge
add
mov
popa
mov
aas
inc
rcl
xor
cli
and
outsb
aad
mov
jmp
and
inc
xor
dec
lds
sbb
mov
loopne
and
and
pop
sbb
mov
loop
insb
movsb
jmp
sub
ljmp
cmp
lods
mov
mov
bound
mov
es
dec
jle
jecxz
pop
mov
mov
in
push
adc
cmp
cmc
movsb
jnp
fmul
push
or
push
out
and
out
mov
and
add
mov
sarb
adc
das
enter
pop
bound
loope
popf
pop
xlat
out
inc
rcrl
loopne
icebp
lods
or
pusha
ss
mov
imul
sub
std
xchg
lcall
cmp
mov
scas
cs
lods
das
out
mov
lock
xor
inc
mov
stc
out
inc
std
daa
shl
out
sub
push
sub
jae
push
addr16
addl
or
sub
aaa
adc
cmp
mov
std
dec
jns
jle
add
pop
outsl
js
loope
sub
in
out
fcmovu
in
or
xchg
push
lahf
push
sbb
mov
ja
cmp
push
push
test
in
fmuls
dec
sbb
insb
out
test
fcmovb
sbb
xchg
dec
lret
in
add
adc
adc
and
or
les
fsts
and
mov
stc
mov
mov
je
pusha
xor
sbb
mov
arpl
and
dec
add
addr16
ljmp
or
jle
mov
sub
and
sbb
sub
ret
inc
xor
inc
mov
in
pop
pop
lds
mov
subl
cmpb
pushf
and
dec
out
ret
xchg
rolb
fwait
mov
out
fistl
mov
fsubs
loop
mov
sbbl
inc
in
jp
aas
jp
pop
in
pop
mov
out
inc
stos
adc
inc
int
mov
push
iret
sbb
mov
sbb
subl
stos
enter
jae
push
outsl
clc
into
xor
xchg
xchg
xchg
xorb
sub
sub
adc
sti
mov
xor
mov
push
pop
inc
into
je
adc
in
dec
xchg
xchg
loopne
hlt
xchg
shrl
repnz
lret
movsb
push
jbe
push
sub
loopne
push
or
out
test
add
push
cmp
xchg
mov
push
test
sub
loopne
push
ja
ret
and
mov
and
pop
mov
adc
mov
jecxz
xchg
scas
sti
loope
dec
adc
add
ret
mov
loope
mov
mov
in
and
dec
dec
xor
je
jmp
xchg
cs
mov
or
push
clc
and
inc
test
fucom
test
sub
nop
clc
jmp
icebp
leave
xchg
cmpsb
fimuls
jg
cmp
aam
adc
cmp
jge
daa
leave
mov
testb
cmpsl
push
movsl
cmp
and
mov
add
inc
push
imul
jle
shrl
movsb
cltd
pusha
lods
xchg
sub
xchg
repz
xchg
mov
xlat
in
icebp
mov
outsl
call
loop
dec
xlat
cltd
push
cli
loopne
jbe
mov
mov
mov
and
push
add
repnz
mov
iret
xchg
inc
ret
test
mov
loop
ds
or
mov
cmp
testb
mov
add
jp
add
cmp
xchg
mov
repz
sub
xor
rcl
xorb
xor
xor
lods
repnz
aad
fiadds
mov
dec
stc
ficompl
test
fwait
loope
stc
inc
stc
cmp
cmp
adc
pop
aad
cltd
sbb
jge
fbld
jg
mov
imulb
push
sub
frstor
jnp
inc
fs
stc
mov
mov
mov
rcl
fmuls
jae
pop
dec
scas
xchg
xor
repnz
pop
call
xor
dec
bound
rcrb
or
sbb
enter
mov
mov
adc
cmp
add
cwtl
xchg
lret
ror
aam
orb
xchg
cltd
jp
push
mov
cmpsb
ss
xor
inc
aam
mov
leave
mov
aaa
decl
gs
inc
and
and
cmp
or
mov
mov
ret
mov
daa
xor
std
or
sub
cld
dec
shl
test
nop
sti
mov
popa
adc
sub
rcrb
mov
sub
test
call
mov
mov
lcall
loope
add
xor
or
insb
cmp
xor
lahf
ja
xchg
jne
jo
arpl
xchg
jmp
push
in
call
mov
in
test
add
or
ja
mov
mov
mov
mov
lods
or
cmp
pushf
xor
adc
out
outsb
jmp
sbbb
xchg
lret
sahf
loope
jmp
mov
pushf
push
fs
mov
xchg
ljmp
inc
jnp
lcall
dec
das
mov
pop
rorl
das
hlt
sahf
mov
sbb
adc
repnz
sub
loope
loopne
xchg
mov
dec
push
mov
lock
out
or
int3
mov
inc
loope
mov
jmp
in
push
and
sti
fs
push
stos
cs
mov
or
push
inc
adc
xchg
cmp
fistl
lret
sahf
xchg
aam
in
idiv
push
setg
push
iret
fldenv
out
ja
mov
lret
jne
sahf
xchg
xor
das
int
shlb
push
or
add
add
add
push
sbb
sub
shrl
aaa
stc
in
dec
dec
std
fwait
jl
xor
mov
popl
dec
out
loop
pushf
adc
sbb
cmp
mov
xchg
jg
mov
and
ret
mov
add
aam
loope
mov
mov
aam
jbe
mov
shufps
xchg
lret
add
mov
push
or
push
rorb
mov
and
int
in
pop
cmp
lret
js
mov
inc
mov
push
jns
push
stc
mov
adc
mov
sub
lcall
mov
rolb
or
push
inc
jns
test
mov
cli
sub
ss
loopne
sbb
aaa
adc
leave
loopne
fcomp
jecxz
add
cld
iret
mov
xor
mov
add
movsb
xor
cmp
ret
in
adcb
jo
cmp
fwait
aaa
pop
xor
xchg
incb
inc
dec
pop
push
sbb
xchg
aam
sbb
lock
aas
xor
and
loop
outsl
fisttpll
jbe
sub
int
push
outsb
scas
add
or
jb
add
dec
sahf
not
test
dec
lods
rorb
and
cltd
mov
nop
aam
jle
es
sub
pop
cmp
push
inc
int3
pop
mov
xchg
or
mov
icebp
add
lods
or
daa
test
jle
mov
stos
fcoms
add
ss
arpl
lcall
sub
jne
sub
clc
mov
cmp
aad
mov
sub
sub
mov
fwait
jge
outsl
fwait
mov
nop
jno
imul
mov
adc
test
lret
into
mov
dec
add
cmp
pop
adc
inc
mov
cmp
cmp
int3
push
push
popa
jo
testl
xchg
or
addr16
je
mov
stc
outsl
mov
pop
jp
into
pushf
adc
adc
xchg
lahf
outsl
pop
icebp
int
loope
mov
sbb
push
dec
mov
xchg
xchg
push
outsl
and
cmp
fcomi
gs
test
mov
movsb
pop
dec
sbb
xchg
adc
das
sbb
mov
jb
xchg
jbe
pop
add
mov
jo
inc
popa
out
scas
mov
mov
fnsave
cmpsl
sbb
pop
cld
test
mov
inc
add
mov
xchg
mov
cld
mov
push
mov
push
int3
test
xchg
mov
idiv
or
aaa
mov
cmc
es
stc
shlb
fwait
ret
or
cmp
mov
mulb
sbb
ret
ss
add
cmp
inc
and
in
push
test
std
dec
lds
sub
imul
xchg
lcall
mov
subb
pop
ljmp
filds
pop
dec
les
jge
fs
xchg
out
xchg
cmp
imul
out
push
mov
adc
out
jae
mov
mov
mov
ret
push
or
mov
bound
ljmp
scas
sub
movsl
cmp
test
push
mov
test
mov
push
dec
inc
pop
fcmovne
jge
into
stos
movsb
in
cltd
jg
outsl
add
jne
sarb
popf
addb
insl
cwtl
movsl
loop
imul
cwtl
loop
ret
inc
mov
or
negb
stos
movsb
and
loopne
mov
mov
movsb
lahf
xchg
scas
out
lea
jo
adc
inc
pushf
jns
mov
push
loopne
movsb
repz
or
test
imul
cmp
or
push
mov
inc
and
bound
ret
outsl
inc
lods
sbb
ret
push
adc
mov
jp
stc
xor
in
jnp
es
or
mov
mov
xor
enter
cwtl
lods
adc
bound
cltd
out
and
pushf
add
mov
test
pop
or
or
imul
in
inc
mov
ret
push
lahf
fldl2e
das
lcall
dec
jns
test
pop
and
in
xor
xchg
jnp
cmpb
adc
cmp
jge
aaa
pop
pop
sub
pop
int3
hlt
and
pusha
jge
fnstenv
and
add
mov
aam
xchg
add
out
enter
sbb
push
mov
js
sub
stos
icebp
mov
jb
or
rep
ret
pop
imul
lods
mov
leave
cltd
pop
mov
xor
push
jb
add
clc
adc
int3
stc
loopne
pop
cmc
pop
lock
int
mov
rcrb
test
out
roll
inc
repz
mov
adc
mov
pop
sbb
in
mov
jae
sub
lds
add
cmpsl
pushf
lret
aaa
test
or
jbe
outsl
jg
mov
sbb
outsl
fistps
or
xor
sbb
xor
js
xchg
xchg
xchg
xor
xchg
lods
dec
pop
stos
into
lods
ljmp
arpl
xchg
sbb
add
loopne
popf
jno
lock
in
jp
cwtl
jge
addr16
ret
loop
sbb
cltd
mov
jmp
add
lret
imul
stos
ja
lds
sub
bound
call
mov
test
arpl
pop
loopne
test
jns
add
adc
cmp
out
mov
subb
jp
popf
xchg
dec
push
rcrb
test
lret
inc
orl
jns
mov
inc
dec
jb
inc
sub
jmp
sub
mov
loope
int
xchg
sbb
out
es
lods
dec
enter
fwait
in
jge
jbe
push
movsb
push
test
enter
jg
mov
ret
test
into
mov
loop
mov
xchg
cmpsb
pop
addr16
pop
hlt
movsb
dec
dec
inc
jo
add
int3
cmp
pushl
ret
add
mov
xor
fists
xchg
jle
inc
xor
xor
dec
out
imul
push
dec
insb
add
fwait
jno
add
jmp
jo
out
movsb
popf
cmpsb
xorps
outsl
paddusw
lea
xor
int3
push
popa
push
fs
xor
ret
inc
outsb
inc
bound
fsubr
inc
xchg
xlat
in
in
mov
pop
push
jge
xor
insb
test
mov
adc
int
sbb
jne
out
imul
mov
jmp
dec
lods
data16
mov
xor
aad
jno
js
aam
sbb
test
divb
out
repnz
popf
or
inc
jb
mov
xor
or
ljmp
test
sbb
jp
les
cmp
fists
inc
scas
sub
adc
jl
loope
clc
out
call
enter
subl
jno
mov
mov
bound
sbbb
cli
or
inc
inc
jmp
repnz
ljmp
cs
sub
xchg
loopne
mov
mov
dec
orl
test
xor
not
daa
push
sub
push
mov
ds
xor
das
roll
cmc
xor
out
push
out
sbb
cwtl
lods
adc
int3
sbb
and
insb
and
out
xlat
shl
mov
xchg
jae
out
lock
nop
enter
push
outsl
pop
push
mulb
sahf
xchg
leave
or
dec
jo
dec
xor
shlb
sub
popl
adc
jg
push
dec
mov
sbb
mov
psadbw
popa
rorl
inc
mov
mov
xchg
inc
dec
cmp
ror
jns
adc
sahf
and
and
movsl
mov
push
lods
inc
xchg
push
inc
lcall
dec
cwtl
pop
mov
mov
dec
push
push
cwtl
adc
int
adc
xchg
insl
inc
lock
movsl
movsl
push
mov
jmp
adc
loopne
mov
aad
add
jle
roll
xlat
mov
mov
xor
xchg
cmp
sbb
mov
outsl
clc
mov
mov
shr
in
stc
lret
push
sarl
mov
inc
jle
xchg
xlat
clc
and
and
mov
aam
cmpl
lock
jecxz
sti
mov
cmp
mov
add
sti
mov
jge
rcr
or
cmp
jo
sub
movsl
iret
push
or
push
int
mov
inc
inc
pop
mov
jns
lock
daa
leave
lods
inc
mov
cmpsl
lcall
adc
adcb
mov
fs
cmp
mov
call
movsl
push
or
xchg
sub
cli
dec
leave
movsl
shlb
dec
fsts
jp
ficoml
cmp
scas
push
xchg
pop
and
dec
pop
hlt
cld
xchg
cmc
out
aad
cmp
push
test
cs
mov
sub
loope
mov
adc
jmp
jg
mov
jmp
cs
lods
mov
xchg
lcall
ss
test
inc
fcoml
sbb
inc
and
mov
movsl
xor
mov
jge
stc
pusha
dec
dec
hlt
cmp
push
sub
popa
in
repz
cmp
mov
dec
out
jbe
insl
sbb
mov
in
repz
popf
popfw
ret
jmp
lods
or
pusha
popa
jp
cmp
lcall
adc
push
sub
pop
lods
xchg
xor
pushf
sbb
push
add
test
loope
out
in
sub
jmp
or
mov
testb
out
push
pop
popa
mov
xchg
std
inc
jge
cmp
int
cld
xor
fwait
popl
cwtl
push
ret
cmpsb
xchg
pop
dec
test
jge
in
loopne,pt
pop
jmp
mov
lahf
int
ljmp
loopne
or
adc
jnp
adc
cmpsl
lods
push
leave
inc
mov
mov
dec
pop
cmc
push
fld
jnp
push
mov
int3
pop
dec
mov
sbb
cmp
repz
mov
mov
cmp
shll
ss
sub
pop
ficomps
inc
fwait
mov
mov
adc
jne
xchg
add
std
lock
push
sub
sub
cmp
sbbb
inc
repnz
lods
cmp
adc
cmp
jmp
adc
lret
fstpt
scas
and
jge
lds
push
mov
push
jb
inc
out
mov
enter
stc
icebp
push
ret
test
jl
je
jbe
or
in
xor
in
jg
sub
iret
dec
inc
jg
or
lods
adc
lock
mov
jns
insl
push
repnz
movsb
jns
or
push
and
sahf
jge
rcrb
in
dec
shr
cmc
sub
pop
cmpsb
jo
lods
lea
mov
mov
data16
cmp
mov
inc
jno
jb
out
sbb
jecxz
push
es
lods
sahf
push
cld
js
cwtl
jno
mov
dec
int
orb
andl
std
lds
bound
mov
or
cmpb
pop
adc
fcompl
jae
shrb
nop
jmp
or
push
xchg
and
mov
mov
repnz
sbb
loope
mov
and
mov
pop
pop
div
push
addl
adcl
das
out
push
sti
adc
cmp
mov
jp
int
aad
cmp
rol
cltd
push
pop
aad
adc
xor
mov
mov
loopne
xor
xchg
xchg
in
shll
jle
xor
dec
insl
and
insb
add
adc
xor
test
add
pop
add
test
daa
xor
andb
insb
stc
or
lret
sbb
sub
and
mov
icebp
imul
rcl
cld
arpl
cltd
mov
and
sub
jnp
pop
mov
jb
pop
sarb
mov
push
test
xchg
cmp
mov
adc
test
cwtl
adcl
adc
or
subl
and
cmpsl
lds
cmpsb
lds
adc
mov
shll
out
in
push
mov
popf
cmp
leave
jne
mov
lret
sbb
inc
mov
gs
cmp
outsl
pop
loope
pushf
cli
pop
mov
fs
mov
fwait
sub
rcrb
incb
andb
dec
mov
push
and
lret
sbb
bound
fstps
lods
stos
xlat
pusha
cmp
lret
insb
mov
push
scas
jnp
mov
nop
hlt
aad
stos
mov
cli
sbb
loopne
and
add
add
push
sbb
add
adcb
cmpsl
outsl
pushf
lods
lahf
testl
add
test
cli
pop
cmp
int3
sbb
insb
and
mov
push
or
stos
out
ds
test
hlt
xchg
int
dec
in
test
cmp
jno
dec
or
fninit
aam
xchg
push
imul
addl
out
mov
push
cmpl
jge
je
decl
cmp
sub
cmp
outsb
call
dec
aaa
loopne
lret
ret
test
cmpxchg
dec
mov
data16
mov
divl
mov
pushw
inc
dec
inc
push
fisttps
xor
les
cmpsb
sub
mov
inc
loop
push
xor
je
aas
push
mov
test
jnp
jg
popf
nop
rcrl
mov
ss
movsl
cmp
adc
addr16
out
cmpsl
mov
and
out
xlat
loop
leave
push
out
outsb
out
xchg
into
jge
xlat
adc
aad
sahf
dec
push
fstpl
lods
xor
push
dec
and
arpl
sub
add
xor
jmp
adc
mov
sti
push
adc
mov
je
in
sbb
inc
test
out
mov
cmp
and
add
xor
in
adc
cmp
dec
jns
mov
push
loop
inc
mov
jb
push
and
in
test
cmp
loop
repnz
movsb
enter
push
lea
leave
clc
mov
cmp
test
mov
xchg
divl
sahf
fld
cmpb
push
lods
push
or
and
pop
push
clc
or
jl
xchg
mov
inc
xchg
pop
in
add
and
pusha
sub
mulb
es
outsb
aas
shrl
push
roll
sbb
test
push
jno
jmp
ffree
jne
mov
inc
in
adc
stc
out
mov
stos
fmul
ljmp
sbb
mov
movsb
jg
adc
imulb
nop
mov
jg
in
mov
rorl
or
pop
xor
xchg
cmpsl
fnstsw
xlat
clc
inc
xlat
sahf
xadd
rclb
sarl
hlt
test
mov
or
loop
sbb
adc
inc
cld
push
ret
and
jp
add
xchg
mov
leave
mov
xor
sub
scas
and
sbb
addl
sub
jb
and
decb
in
cmc
add
out
xorb
ljmp
add
testb
mov
pushf
jnp
out
lahf
and
mov
push
test
aas
add
icebp
pushf
and
call
jo
cli
jns
push
pop
mov
dec
jne
imul
jecxz
inc
scas
popf
push
test
push
inc
xchg
out
pop
and
adc
cmp
pop
xor
jb
out
loope
dec
and
jnp
scas
fcomi
adc
adc
sub
adc
enter
mov
cmpsb
mov
pop
add
mov
sub
and
mov
jns
xor
sbbb
lods
pushf
lret
pop
jp
mov
xor
push
inc
adc
out
gs
mov
cmpl
adc
rolb
or
xchg
jno
or
jnp
cmp
sahf
std
xor
enter
addr16
inc
mov
push
cmp
inc
xchg
dec
xchg
mov
pop
sbb
fisttps
cwtl
out
mov
popa
ret
xor
rcll
shlb
loope
daa
andl
addr16
pushf
push
pop
push
rclb
fmulp
ret
cmp
outsb
xor
repnz
and
mov
mov
push
sub
ds
out
push
ret
xorl
mov
pop
sub
lret
mov
or
cmpl
xchg
inc
inc
and
fimull
out
mov
dec
lea
int
outsb
jne
mov
push
xor
push
pushf
xchg
in
cmp
jae
jbe
jnp
mov
mov
sahf
pushl
shl
lret
scas
jno
mov
pop
xchg
push
push
cwtl
lock
pop
neg
cvtps2pi
testl
xor
fsubrl
dec
call
cli
adc
sbb
xchg
mov
int3
arpl
in
adc
cwtl
jbe
sub
jno
inc
test
outsl
mov
pusha
xlat
jbe
or
jns
pop
push
mov
add
test
lea
shl
movsl
loop
repz
das
fwait
jb
ds
jb
and
es
jmp
ljmp
mov
js
and
mov
jle
test
jns
fmuls
cmp
inc
stos
xchg
js
push
sti
sbb
mov
jl
ret
movsl
or
cmp
mov
rcrb
adc
adc
nop
pop
dec
mov
sbb
pop
decl
loop
cmpsl
outsl
divl
pusha
dec
ret
pop
sbb
sub
push
aam
js
adc
sub
into
js
push
mov
sti
inc
lcall
aaa
stc
push
sti
mov
ljmp
mov
inc
movsb
cmpsl
cmp
sarb
or
sub
pop
inc
mull
out
push
and
jae
push
mov
and
xor
xchg
push
push
loopne
add
stos
mov
arpl
and
jne
sub
mov
dec
je
mov
ds
cmp
ret
xor
pop
pushf
xor
nop
repz
cld
sbb
aad
popa
dec
mov
iret
xchg
or
test
mov
cmp
xor
outsb
stos
xlat
test
nop
dec
and
mov
push
std
and
das
popa
sbb
sub
pop
cmp
cmpsl
jno
mov
mull
call
mull
mov
mov
push
in
cmp
add
sahf
push
and
in
dec
outsl
pushf
cmp
xchg
test
inc
dec
fs
cwtl
js
std
aas
arpl
push
pop
adcl
mov
aas
inc
push
inc
jmp
adc
ss
and
test
cmp
pop
test
mov
lock
repz
mov
inc
sub
into
pop
and
xchg
loop
sub
xor
fmul
das
mov
in
push
mov
psrlq
cmpsb
test
adc
and
jecxz
inc
and
dec
cmc
pop
in
mov
mov
rcrb
xchg
movsl
in
sub
adc
repnz
sbb
repnz
mov
adc
loopne
lahf
inc
xchg
shr
out
es
incb
filds
je
push
mov
push
mov
cmp
adc
gs
pop
mov
push
xor
sub
pop
jae
xchg
rorb
sti
clc
jae
ljmp
dec
in
pusha
dec
mov
js
ret
ret
sub
loope
sub
inc
data16
int
adc
bndldx
hlt
mov
xlat
cmc
add
add
pop
inc
lret
std
cmp
in
ja
mov
in
into
hlt
nop
push
fisttpl
cwtl
incb
insl
cmp
jmp
push
mov
ljmp
loope
xor
lcall
scas
pop
lcall
mov
xorl
cmpsl
mov
mov
jg
sahf
lret
lret
shrl
inc
xor
xchg
jge
sub
jb
push
pushf
pop
xchg
cs
or
ds
adc
cmp
mov
adc
jmp
ffree
pusha
outsb
insl
inc
jg
xchg
pop
outsb
sbb
bound
xor
push
mov
hlt
push
andb
sub
cwtl
sub
dec
movsb
cmc
xchg
push
push
sbb
fisubl
cli
or
in
ljmp
pop
xchg
popf
jne
adc
xchg
pop
sbb
mov
leave
loop
mov
in
es
loope
mov
loopne
or
cltd
mov
int
mov
add
je
dec
dec
jmp
ret
andb
xchg
sti
rcrb
enter
dec
test
js
and
shlb
mov
jbe
add
mov
ret
movsb
mov
aam
ja
pop
stc
out
or
daa
cmp
and
shrl
jg
mov
xchg
fisttpl
stc
jle
inc
data16
pop
jae
jno
sbb
cmp
mov
xchg
sbb
pop
pop
lds
sbb
jb
add
and
sbb
sbb
jns
jb
mov
adc
in
fs
lar
jno
pop
sub
mov
pushf
sub
lea
icebp
das
out
leave
dec
push
cmpsb
cmpxchg
das
sub
ret
jb
jns
fistl
icebp
lock
sbb
push
dec
mov
mov
add
add
jmp
and
jg
cs
aaa
bnd
mov
arpl
sub
push
mov
add
cmc
mov
or
jmp
jl
ret
mull
jnp
insb
mov
sbb
repnz
cmp
push
sub
loopne
sbbb
mov
ss
or
cmp
lret
xor
icebp
mov
scas
sarl
push
movsl
sub
in
scas
andb
mov
loop
les
add
dec
mov
rorl
xor
call
in
push
adc
pop
into
leave
mov
test
lods
sub
mov
es
sub
imull
addr16
inc
lods
mov
sub
jns
shlb
sarb
repnz
and
leave
scas
push
cmp
and
sub
and
sub
outsl
movsb
sub
push
sbb
adc
sbb
inc
repz
xor
and
push
xchg
mov
dec
arpl
loope
pop
push
push
xor
movb
lock
fdiv
ss
xchg
je
mov
pop
dec
std
test
addr16
cs
idivb
or
mov
les
std
incb
popa
fistps
addl
call
add
cmpsl
les
mov
adcb
jle
std
fsubs
stos
jns
mov
push
mov
jae
pop
sbb
ss
sbb
pop
pop
push
sub
xor
adc
movsl
data16
fmuls
cmc
popl
push
call
mov
mov
jo
mov
mov
lret
out
repz
pop
enter
cltd
xchg
inc
xchg
jnp
add
frstor
out
add
fs
inc
daa
xchg
lds
dec
sbb
dec
test
dec
sbb
mov
in
adc
dec
call
int
bound
adc
push
mov
cmc
cld
dec
push
imul
push
jnp
xor
jle
dec
dec
mov
mov
mov
mov
push
insb
sahf
jne
jae
mov
or
in
fldt
jle
adc
sub
or
fists
pushf
std
jmp
pusha
xchg
movsl
and
in
repnz
aaa
in
push
inc
divb
and
inc
lds
lahf
cwtl
lcall
mov
es
push
scas
jb
mov
inc
lret
js
jb
icebp
scas
rcrb
dec
dec
aaa
les
das
arpl
jp
adc
jmp
pushf
stos
inc
sti
shll
cwtl
insl
xchg
shrb
js
push
add
xchg
xchg
mov
xchg
ret
int
xchg
lcall
mov
sbb
test
jb
lahf
jno
aam
test
mov
out
js,pt
xor
dec
push
lret
sub
stos
shl
sbb
cmp
pop
aas
movsb
mov
sub
xor
in
sub
push
inc
push
movsb
xor
into
pop
and
repnz
jns
adc
and
aad
imul
dec
mov
movsl
call
sbb
inc
movsl
ret
lahf
repnz
movsl
add
testl
pop
mov
test
adc
jne
outsl
mov
cmp
cmpsb
ja
pop
in
add
push
cmp
movsl
mov
push
stc
push
adc
test
icebp
ret
xchg
paddusw
add
xchg
daa
mov
lods
push
adcl
jp
or
in
negl
lods
xchg
pop
jb
ljmp
outsl
xlat
shlb
jmp
jmp
movsb
jbe
lds
fldl
cmpsl
adc
scas
xchg
mov
in
sbb
pop
pop
fistpl
dec
lahf
xor
mov
and
repnz
popf
mov
out
push
lods
mov
clc
pop
mov
jae
push
adc
cmp
cs
inc
add
fwait
in
ss
adc
gs
test
out
add
xor
xchg
mov
enter
ret
mov
mov
in
adc
cmp
insb
cmp
enter
pop
or
in
jg
andb
mov
aam
sbb
jge
push
clc
loop
sub
inc
pushf
sbb
mov
out
frndint
mov
cld
repz
int
xchg
cmp
or
rorl
push
icebp
push
movsl
enter
gs
mov
lds
jnp
xchg
jb
push
jae
rol
cli
test
mov
popf
lock
popa
loop
xchg
addr16
hlt
cmp
in
and
mov
fbld
lock
neg
ljmp
jle
in
call
dec
clc
out
pop
sbb
jns
xor
hlt
cmpsb
pop
repnz
mov
dec
jle
std
inc
imul
sarl
neg
test
std
sbb
jecxz
shll
mov
cmc
aad
gs
cld
xchg
ret
xchg
into
jae
cwtl
cmpsb
mov
sti
lcall
fcoms
lahf
pop
int3
xlat
push
scas
mov
dec
or
gs
mov
lock
aas
inc
and
lret
lock
cli
enter
push
and
es
pop
out
xchg
aam
outsl
hlt
negb
fs
repnz
xor
lock
pop
mov
aam
stos
mov
push
cld
mov
pop
mov
outsl
jecxz
les
pop
rorb
aam
lods
push
mov
push
cld
sbb
add
pop
and
jmp
cmc
cmp
cs
pop
enter
dec
sti
or
test
sub
roll
dec
insl
pop
or
mov
mov
out
stc
cmp
jb
int3
or
stc
xchg
xor
mov
fcoms
lcall
subb
add
loop
xor
jmp
mov
cltd
pushf
inc
add
xchg
mov
or
push
popa
xchg
jge
cmp
je
pop
orl
sar
mov
mov
jo
lret
xchg
cmp
add
repz
cmpsl
stos
lret
or
sub
gs
jle
addr16
test
es
in
jns
or
addr16
cwtl
out
pop
sbb
dec
gs
cmp
cmp
xchg
jb
sti
test
adc
iret
jecxz
in
xor
insb
mov
lods
adc
xchg
pop
shll
rcr
shr
scas
dec
ficoms
push
push
pop
mov
dec
sub
insb
in
add
sarb
add
push
jp
push
lea
jo
sub
xchg
test
mov
jb
aas
test
sbbl
cltd
leave
fisttpll
aas
repnz
pop
daa
and
test
pop
mov
arpl
addr16
stos
add
pop
stos
push
xlat
test
sub
cmpsb
pop
xor
add
mov
std
fildll
mov
sub
lret
imul
movsl
cmc
mov
xchg
pop
cmp
adc
sarb
out
lea
or
push
aaa
xor
cmc
js
mov
popf
mov
pop
adc
ret
imul
cltd
mov
call
mov
push
push
repz
int3
daa
out
daa
gs
std
cmp
mov
dec
sbb
int
inc
and
stos
gs
cmp
xchg
push
sbb
ja
dec
je
push
mov
cmpsl
cmp
fistl
mov
add
in
arpl
adc
out
out
cmp
lret
in
adc
adc
mov
inc
shlb
add
pusha
out
in
ja
mov
cs
fucomi
out
cmp
in
xor
lcall
lea
mov
mov
dec
sbb
or
mov
and
movsb
jle
inc
lea
xor
in
test
cmp
jb
into
int
rcrl
adc
test
mov
sahf
sbb
or
jbe
push
cwtl
xchg
xchg
lods
cmp
in
es
scas
jl
mov
pop
push
scas
arpl
lods
movsb
les
stos
sub
divl
dec
mov
insl
lcall
pusha
or
xlat
xchg
or
dec
testb
hlt
clc
pop
dec
push
push
cmp
and
clc
aad
sub
int3
sti
daa
xor
in
xchg
pop
popf
dec
pop
aam
push
xchg
xor
repz
dec
popf
aaa
sbb
dec
jge
cli
push
pop
loope
mov
jnp
cs
sub
cmc
mov
sbb
sti
jle
jnp
sbb
stos
and
sbbb
jb
and
sti
push
stos
sub
cs
jo
sub
rcll
stos
insb
idivb
jb
xor
sub
lds
add
out
jp
mov
outsl
xor
cmc
repz
aad
sub
xchg
sub
call
out
xchg
mov
sbb
push
mov
and
aaa
arpl
pop
stos
mov
cmp
push
and
push
test
mov
push
jne
leave
dec
sub
push
mov
sub
jecxz
push
xlat
mov
cld
dec
shl
loop
loop
test
dec
sub
jno
imul
adcb
inc
sbb
ret
sbb
mov
cmp
xor
jae
sahf
dec
nop
scas
in
icebp
aas
push
or
jmp
jns
in
dec
jnp
scas
dec
xchg
or
sbb
mov
jnp
lahf
fwait
js
sub
jg
fcompl
and
shrb
js
aad
fnstenv
mov
dec
gs
sbb
movsb
mov
shrb
psraw
loope
and
xrelease
imul
and
cmpl
testl
lret
lahf
and
jae
cmp
loope
divb
cmpsl
and
loop
jbe
jns
and
mov
dec
inc
shl
dec
mov
sarb
aaa
adc
andl
jae
xchg
lret
pop
ss
aad
and
add
int3
xor
bt
lock
sbb
into
add
mov
pop
pop
lods
cmp
push
sub
pop
jo
movsl
adc
ret
sbb
out
ficoms
int
cs
mov
xchg
test
fstl
out
add
popf
mov
popa
repz
jne
cmpsl
testb
fcomps
xlat
adc
add
push
push
mov
mov
add
pop
int3
jae
xchg
es
sub
out
dec
jo
shll
pop
or
loope
pop
inc
cmpsl
pop
inc
divl
mov
jbe
jecxz
adc
mov
sub
dec
or
xor
cmp
dec
mov
fdivs
adc
or
pushf
popf
in
cmp
in
inc
inc
fwait
jno
add
cmp
out
cvtpi2ps
in
ret
lds
js
and
repz
jae
and
mov
imul
out
and
fcoml
loopne
les
aas
mov
nop
mov
xor
shlb
cmp
in
mov
pushf
loop
jmp
push
repnz
push
ficoml
mov
mov
pop
shrd
ss
ds
popa
mov
jmp
lret
or
mov
subl
call
ljmp
imul
ret
imul
xor
int
sbb
or
out
insl
cmp
xrstors
or
sarl
ficoml
pop
dec
in
and
test
xchg
mov
arpl
std
add
and
gs
sub
push
pop
add
inc
pop
inc
jmp
fucom
xchg
mov
cmp
aad
enter
dec
mov
mov
test
in
jl
cmp
loopne
and
adc
int3
repnz
out
pop
popa
pop
mov
sbb
xchg
popa
into
mov
bnd
idivb
add
inc
aad
xlat
out
xchg
and
xchg
call
adc
ja
jecxz
ss
add
loope
ljmp
sarl
pop
push
push
sbb
push
outsl
cmp
inc
jne
push
aad
cmp
das
push
shl
mov
adc
xor
mov
arpl
jg
into
call
jg
inc
repz
xchg
sbb
add
mov
ret
jecxz
ja
dec
test
subl
xchg
mov
sub
push
xchg
mov
xor
mov
repnz
inc
bound
outsb
push
xchg
out
out
in
mov
jmp
ja
in
scas
call
cmp
sbbb
xlat
test
mull
int
or
loop
clc
imul
mov
std
pop
push
pop
inc
mov
gs
lea
movsb
or
stc
jno
and
cmp
inc
fcompl
nop
sti
leave
lock
inc
or
sub
test
in
sti
or
mov
xor
push
or
lock
bound
mov
inc
addb
push
xchg
aad
adc
and
fs
mov
popf
in
inc
aam
popa
jp
or
les
lods
in
and
xor
cmp
pop
outsb
mov
inc
sbb
cld
push
mov
mov
testl
adc
adc
sbb
sub
pop
mov
and
pop
sbb
mov
push
lret
dec
adc
movsb
inc
and
push
add
loop
inc
popf
push
jnp
inc
mov
push
xlat
mov
cmc
jo
inc
xor
inc
movsb
cmp
cwtl
pop
mov
jp
loopne
mov
pop
dec
push
and
nop
jno
cltd
mov
fists
mov
lds
jno
data16
jp
jle
popf
cmp
aad
aas
aaa
js
icebp
mov
mov
das
test
cmpsb
jnp
mov
xor
je
daa
cmp
cmp
add
cmp
orl
adc
fstpt
mov
inc
fdiv
or
or
cmp
cmp
mov
mov
cmpsl
push
adc
popf
jp
jno
sub
dec
jae
daa
dec
clc
out
out
mov
in
cltd
push
loope
xchg
lcall
loopne
jo
idivl
sbb
sub
add
fwait
ja
cs
adc
imul
cwtl
mov
shl
pop
data16
cmp
mov
in
icebp
jle
mov
pop
imull
mov
mov
notb
push
jo
push
xor
js
push
cmpsl
pushf
scas
decb
addl
clc
out
sub
and
mov
test
into
or
std
or
fidivrl
out
inc
jno
add
jae
cmp
cwtl
mov
add
scas
dec
stos
cmp
and
cmp
enter
fcmovne
adc
pop
jl
push
ret
inc
dec
test
pop
sbb
jns
lret
clc
push
dec
xchg
mov
xor
mov
daa
ds
mov
cld
or
mov
movsl
pop
pop
pop
aaa
sahf
jns
aas
loope
pop
pop
lea
mov
or
mov
and
bound
icebp
jno
adc
push
and
loopne
pop
fldl
adcl
jge
sbb
shlb
sbbb
cwtl
push
inc
adc
jnp
insb
inc
divl
adc
add
mov
sub
lea
test
sbb
movsl
mov
insl
and
pop
shl
add
cmp
inc
cld
aad
sar
xchg
lahf
stos
sbb
std
or
pmulhuw
int
dec
out
cmpsl
dec
cmp
push
pop
mov
sahf
stos
gs
ss
sub
mov
aam
inc
test
iret
data16
sti
push
cli
jecxz
push
test
adc
insb
divl
sub
movsb
inc
cmpsb
or
push
mov
in
xor
jle
mov
mov
repz
inc
dec
jno
in
push
testl
es
imul
adc
inc
outsb
stc
dec
sbb
syscall
push
mov
mov
jne
cmp
into
test
xor
lret
mov
test
and
cmp
imul
mov
int3
mov
scas
cli
mov
jg
jb
out
lahf
fistpll
cltd
je
hlt
enter
leave
push
jmp
push
or
pop
jl
fidivs
push
and
loop
jb,pn
sahf
lods
stos
pop
cmpsb
or
bswap
movsb
cmpsb
pop
or
and
ljmp
jle
add
xchg
jecxz
cmpl
pop
mov
out
int3
out
xchg
lods
test
rcr
mov
inc
mov
xor
stos
or
or
mov
inc
and
ss
loope
sbb
repz
xor
mov
mov
ret
call
push
push
dec
addl
add
jnp
shrb
dec
push
loopne
adc
fimull
add
mov
xchg
push
inc
arpl
movsl
aaa
es
dec
std
push
fcom
jo
cmp
mov
push
sub
enter
and
and
sub
icebp
jnp
mov
scas
cli
fcompl
fisttpl
dec
enter
xchg
cli
sbb
clc
push
in
push
jb
test
outsl
movsl
enter
dec
add
fstpl
mov
dec
aas
mov
repz
jge
xor
and
lock
hlt
xor
xor
hlt
xchg
xchg
les
js
std
out
mov
jnp
addr16
sar
adc
mov
pop
mov
or
adc
dec
int
popa
push
inc
add
repnz
dec
into
cmp
jle
adc
jmp
repz
std
cmc
das
pop
fbstp
clc
roll
pop
push
push
and
push
pop
and
inc
pop
decl
xlat
jmp
pop
or
data16
call
out
mov
sub
cmpsb
fwait
and
inc
mov
or
insl
sub
xchg
jge
test
movl
scas
adc
cld
aam
sbb
dec
sub
dec
mov
push
add
cmp
sarb
sub
jno
nop
loop
gs
pop
xchg
push
mov
fstpl
mov
int3
add
jno
insb
mov
in
lea
adc
popa
in
nop
in
fidivrl
sbb
add
mov
xor
shrb
ss
xchg
add
out
xchg
sub
popf
out
xor
inc
sti
mov
pushf
adc
cmpsl
mov
inc
cmp
xor
pusha
rcl
fbstp
pop
jge
adc
pop
mov
scas
fmull
icebp
dec
adcb
rorb
lea
xor
pop
or
xchg
xchg
into
mov
testb
lds
stos
and
out
fidivrl
js
divb
in
xlat
dec
clc
mov
ret
mov
daa
pop
push
sarb
into
mov
add
sub
aaa
idiv
fdivrl
jo
dec
jl
xchg
repnz
inc
inc
cmp
jo
push
jnp
aam
sbb
push
sub
inc
dec
in
jne
in
nop
push
mov
shrb
cmpsb
mov
jbe
jg
rsqrtps
cmp
scas
scas
jle
shll
sbb
mov
in
negl
add
pop
insb
fimull
in
out
sbb
dec
mov
out
push
mov
ror
sbbb
pushw
xor
jbe
cwtl
xor
ja
fsubl
popf
or
xchg
addr16
aad
ffree
sbb
xor
cmpsb
imul
inc
jno
pop
arpl
test
xlat
dec
arpl
sbb
packssdw
cmp
mov
push
dec
cli
cld
dec
lahf
sbb
mov
add
pop
aas
and
fcompl
std
shrb
cmp
dec
dec
cltd
sti
mov
icebp
stos
cli
cmp
int
mov
jbe
pop
repz
push
push
mov
jns
loope
mov
out
into
lock
shr
mov
add
push
xchg
js
jns
insl
inc
mov
in
stc
xorl
inc
insb
nop
into
xchg
jb
jne
js
les
ret
ds
xor
rcrb
cmpsl
imul
scas
pusha
pop
mov
lds
outsb
test
leave
testl
inc
xchg
dec
inc
out
mov
cmpsl
mov
and
inc
repnz
lret
push
adc
test
cmc
loop
lds
xchg
imul
pop
cmp
addr16
inc
push
jne
out
pop
leave
call
xor
sbb
sbb
aad
lds
fimuls
xchg
dec
lock
mov
ss
sub
loopne
and
mov
icebp
scas
frstor
ja
push
sarl
cmp
loope
sbb
cmp
clc
adc
push
and
pop
in
xchg
jb
inc
cmp
xor
dec
push
xor
mov
xchg
stc
in
aam
outsl
add
jp
cli
sub
leave
sahf
add
adc
and
push
jle
sbb
out
hlt
adc
cmpsb
das
aas
gs
adc
jns
out
pop
mov
push
in
dec
xchg
aam
jge
sub
xchg
bound
adc
lahf
mov
jo
les
or
fmuls
push
shrb
xchg
xchg
stos
cmpsb
fbstp
pop
xchg
push
divb
nop
mov
in
or
imul
cmc
add
aam
stos
imul
jbe
lea
or
jle
sub
jle
adc
in
lret
les
repz
outsl
les
test
sub
mov
add
xchg
into
dec
in
in
add
stos
xor
add
outsl
incb
mov
lods
fs
nop
dec
push
inc
lea
jg
push
push
mov
js
adc
cld
mov
mov
inc
sarl
fsubrs
addr16
sbb
negb
push
lock
fidivrs
arpl
mov
int3
sbb
aaa
iret
rcl
es
idivb
sub
sub
fsubs
adc
out
pop
in
jecxz
mov
sub
shl
push
lods
movsb
pop
xor
orb
add
xorb
dec
pushl
sub
into
loopne
xchg
fs
add
dec
jbe
lahf
stc
test
sub
push
sbb
jmp
xor
imul
movsl
add
jp
ret
pop
sub
xor
lea
sbb
and
out
test
fstp
insb
xchg
mov
or
fiaddl
leave
xor
xor
jl
sub
ret
xor
int
mov
cmp
repz
ljmp
nop
mov
dec
js
pusha
iret
idiv
jns
aaa
jb
scas
pop
jecxz
push
mov
mov
scas
je
and
or
scas
pop
add
outsb
movsb
movsb
arpl
lock
mov
mov
icebp
fstps
es
push
std
std
dec
enter
adc
sahf
mov
pusha
xor
mov
out
mov
inc
sarl
dec
rcll
sbb
pop
lret
push
in
std
cli
imul
adc
xchg
sub
inc
fs
adc
rcr
push
mov
sbb
adc
and
or
jae
and
pop
or
add
mov
jo
jl
jbe
cmp
adc
loope
lods
pop
mov
and
or
push
stos
mov
je
movsl
lea
out
xor
mov
mov
inc
add
lcall
sbb
xchg
fs
sbb
outsl
mulb
dec
setle
or
add
add
inc
les
mov
inc
das
mov
add
mov
test
shrl
adc
push
xor
jo
push
adc
xchg
mov
lahf
aas
mov
test
cmp
push
clc
repz
fnstsw
jp
and
mov
push
pusha
jge
push
pop
outsb
sbbb
and
addr16
fisubrl
mov
cmp
and
dec
test
cmpb
hlt
test
movl
push
adc
sbb
sbb
mov
negl
scas
adc
jg,pt
test
adc
test
repz
add
cmp
inc
push
lret
mov
xchg
shrb
add
inc
xor
fdiv
outsl
pop
jle
mov
adc
in
push
stos
flds
xchg
out
mov
popf
jmp
adc
mov
stos
sti
and
jns
jbe
out
and
jg
pusha
lods
pop
sub
pop
jmp
and
inc
iret
and
xchg
aad
push
xchg
fsubrs
sbb
lea
sub
outsb
iret
push
sbb
xchg
iret
test
cmp
cs
and
sbb
lock
xchg
dec
add
outsl
cmp
popa
loopne
shlb
push
lods
xor
add
dec
and
adc
daa
pop
dec
repnz
mov
push
fsubs
adc
in
sub
in
jmp
mov
push
add
movl
pushw
jge
es
mov
push
ds
daa
fs
in
cwtl
inc
sub
loopne
mov
dec
incl
data16
loop
xorl
nop
cs
int
sahf
cld
or
out
xchg
mov
xor
lret
mov
pushf
adc
gs
loop
push
repz
cmpsl
or
mov
pop
push
adc
vmovapd
inc
and
daa
in
flds
xchg
push
arpl
push
push
mov
fs
test
lret
adc
inc
mov
sbb
or
jle
inc
insl
loope
and
lods
adc
cmp
inc
dec
insl
lea
pop
xor
sub
add
add
testl
pop
fldl
repnz
fidivl
jle
shr
sub
push
dec
push
cmp
push
mov
push
hlt
ficompl
in
inc
ja
inc
lods
loopne
ljmp
fsubp
or
sar
ljmp
xor
arpl
xchg
add
fnsave
dec
push
xlat
adc
add
pop
push
push
mov
inc
add
aaa
inc
ss
int3
cmpsb
test
insl
sub
arpl
loopne
notl
mov
jg
imul
dec
scas
mov
ljmp
mov
ret
repz
inc
sub
mov
dec
lock
pushf
pop
jbe
mov
push
or
es
loopne
jl
aaa
pop
sub
sbb
add
fs
imul
sbb
sbb
rcrl
dec
mov
pop
ret
test
mov
test
add
out
ja
mov
ficompl
imul
aas
mov
mov
mov
leave
cli
lret
mov
fimull
adc
in
jb
push
mov
int
pusha
leave
and
jl
sti
int3
mov
sub
inc
ud2
mov
dec
andl
cmp
inc
xchg
stos
mov
into
sub
adc
jnp
xchg
sar
pop
adc
fidivl
push
nop
xor
ret
cmp
outsl
mov
xchg
loop
popf
add
push
cmp
jno
ror
mov
test
fs
ss
test
mov
lods
add
fnstcw
cmp
pop
stc
mov
add
jns
in
jo
adc
stc
daa
pushf
jne
leave
sete
les
sbb
cmpsl
aaa
outsb
popa
dec
push
lcall
dec
inc
push
shl
mov
or
into
fists
addr16
jge
loope
or
or
cmpsb
or
add
daa
xchg
dec
jno
rclb
push
ret
test
imul
add
adc
jle
enter
pop
cli
adc
les
mov
mov
inc
pop
mov
iret
in
insb
fs
xchg
lahf
mov
out
outsb
inc
and
pushf
dec
in
mov
std
mov
mov
jne
jp
push
out
ficoml
leave
inc
cld
sbbb
les
adc
xchg
push
inc
repz
gs
rcrb
aas
cmp
add
inc
imul
sub
adc
pop
std
push
sbb
hlt
stos
sbb
test
movzbl
dec
inc
push
mov
or
jle
push
mov
lcall
loop
dec
xor
adc
dec
xchg
mov
imul
pop
jle
adc
icebp
jecxz
mov
loopne
ds
or
pop
addb
mov
jbe
cld
sbb
push
insb
movsl
pop
inc
pop
fwait
idivb
fs
ret
pop
into
pop
ficoms
add
xor
lea
fstpt
mov
stos
data16
mov
sarl
xchg
lods
cmp
cwtl
pop
cli
repz
push
call
es
push
xchg
sbb
adcb
mov
jg
sti
outsb
mov
push
adc
ljmp
xchg
in
mov
xchg
lds
dec
sbb
xchg
adcl
mov
mov
dec
adc
inc
aam
nop
in
add
mov
jle
loopne
adc
fisubl
mov
repnz
sub
int3
jb
adc
jmp
data16
sbb
shl
int3
ja
enter
cmp
xor
jl
popf
push
insb
js
cwtl
mov
xchg
scas
push
inc
fistpll
outsl
cmp
adc
in
ss
test
dec
or
push
in
mov
mov
mov
xchg
daa
jns
sub
fimuls
push
pop
jmp
gs
rcrb
jmp
das
and
sbb
inc
pop
stc
aad
jmp
out
std
loopne
adcl
push
and
int3
cmp
jge
dec
lcall
adc
add
inc
fs
mov
jb
std
psllq
cmp
sub
push
push
fistps
mov
xlat
in
in
enter
add
cmp
vpslld
incb
nop
sbbl
sub
aad
lea
mov
sub
outsb
call
negb
mov
stos
popa
ljmp
jle
xlat
mov
push
or
add
das
test
or
jge
sbb
mov
imul
sbb
push
push
sub
jg
repz
mov
jne
dec
lret
dec
push
or
aaa
mov
inc
inc
jg
sahf
stos
notb
pushf
stos
push
icebp
je
mov
fsubrs
or
push
jb
pop
inc
jecxz
arpl
pop
dec
aam
mov
popf
hlt
jp
xor
aas
imul
sarb
aas
dec
test
add
mov
xchg
int
lea
cs
xor
cmpsb
mov
int3
or
sarl
movsb
cli
addb
sub
xchg
and
shrb
xchg
pop
lock
lahf
imul
mov
cmp
mov
sbb
int3
jle
imul
inc
dec
popa
addr16
mov
lret
movsl
ljmp
fdivl
ret
mov
dec
jg
dec
xchg
jb
push
xchg
sub
and
mov
push
or
seta
xchg
test
adc
cmp
int3
adc
pop
mov
cmpsl
or
sbb
pushf
data16
repz
xor
add
push
andb
xchg
out
fs
cmp
jmp
fsts
gs
aam
in
mov
out
push
pop
data16
clc
test
push
sub
cmp
loop
shrl
sbb
int3
inc
loop
dec
sub
stos
jp
daa
mov
cld
dec
xor
sbb
pop
aaa
lods
lahf
jl
pop
aad
fisubrs
inc
lahf
ret
out
movsl
sub
inc
loop
mov
cltd
fimuls
ss
or
cmpb
sbb
imul
xlat
sbb
xlat
aam
push
push
push
or
sbb
mov
out
pop
pop
int
adc
repnz
test
filds
ficomps
adc
add
lock
fcmovnbe
decb
or
and
push
stc
adc
outsl
clc
push
sahf
sbb
lock
pop
xchg
sbb
out
divb
int
sti
data16
pop
ret
cmp
pop
sub
dec
aas
push
dec
hlt
inc
push
push
aad
push
xor
or
mov
xchg
ds
dec
outsl
shrl
lock
inc
data16
xor
mov
rcll
into
jo
outsl
movsb
xchg
pusha
ljmp
push
lods
mov
dec
mov
xchg
mov
orl
pop
sarl
and
or
pop
pminsw
jnp
mov
sahf
sbb
pop
inc
int3
xchg
add
push
xor
fiaddl
push
mov
lods
push
into
adc
and
imul
jns
test
cltd
stc
add
lea
xor
ret
mov
dec
fdiv
jecxz
mov
je
or
add
pop
sub
cwtl
fdivr
js
aad
and
shlb
jmp
sbb
daa
and
loope
test
add
sbb
test
mov
mov
fnstcw
pop
inc
push
jle
sahf
int3
nop
loopne
add
sub
data16
xchg
call
popl
xorb
into
pop
fists
call
pop
jle
out
cmp
imul
jbe
call
out
cmp
mov
dec
xor
pop
jns
jnp
mov
cmp
cltd
pop
xor
into
pop
loope
repz
leave
scas
pop
add
cli
ja
nop
mov
mov
test
aaa
in
dec
jg
movsb
repz
pop
aas
mov
push
mov
iret
mov
out
adc
add
ss
dec
and
adc
inc
sti
mov
mov
arpl
pop
enter
mov
leave
mov
jmp
pop
call
popf
hlt
sbb
ret
cmp
les
aas
jb
xchg
sub
inc
lock
mov
sub
mov
nop
aas
or
jnp
xor
pop
push
add
idiv
sbb
or
jp
xchg
cmp
je
or
push
aad
inc
int3
ss
adcb
mov
jnp
or
push
and
cmp
and
sub
out
outsb
cltd
sub
push
inc
pop
sbb
fstpl
cwtl
jecxz
popa
sbb
jl
sahf
push
fs
aad
jno
cmc
movsb
cs
das
fisubl
xchg
dec
jle
sbb
xor
int3
inc
sbb
jns
and
and
rcll
hlt
dec
or
daa
sub
mov
xchg
out
lret
xor
dec
mov
mov
out
loopne
inc
lret
cmp
pop
cld
sbb
inc
shl
repz
rclb
add
jnp
arpl
xchg
xchg
repz
es
fs
dec
xor
data16
std
sbb
adc
xchg
jo
adc
and
push
and
push
aam
fstps
pop
mov
inc
test
xchg
lea
pop
dec
sbb
inc
sbb
jg
mov
icebp
popf
fimuls
xchg
cmp
das
test
int3
popf
add
iret
dec
cmp
mov
enter
and
rcll
xchg
xchg
ja
jmp
dec
les
dec
outsl
adc
mov
lret
or
cltd
fstps
jne
imul
push
sahf
jp
and
xor
and
inc
lock
fwait
ret
jno
jecxz
das
add
addr16
mov
jbe
pusha
jl
mov
in
or
in
pop
das
iret
pop
push
mov
fwait
mov
cld
or
jo
mov
add
cltd
testl
bnd
paddq
insb
mov
enter
add
out
stos
in
inc
push
xorb
cmc
mov
fsubrs
into
jg
insb
xchg
pop
stos
sbb
mov
adc
sub
jl
sbb
xlat
int3
ficoms
ds
sbb
jo
inc
cwtl
addb
add
mov
popf
sarb
dec
sub
pop
inc
jle
aad
mov
and
add
hlt
addb
and
cmpsl
loop
inc
fbstp
jmp
push
icebp
sti
fdiv
or
and
pop
xchg
aaa
insb
inc
dec
mov
inc
dec
lea
push
inc
ljmp
jne
movsl
dec
sahf
addl
jl
mov
mov
mov
jle
adc
mov
rclb
fs
fprem
jne
pop
sub
adc
adc
repz
mov
popf
jmp
outsb
mov
xor
inc
sbb
adc
mov
clc
sti
mov
pop
cwtl
mov
scas
add
jne
xchg
xor
loop
mov
cltd
imulb
xor
adc
push
cmp
int
dec
inc
iret
mov
jns
xor
inc
iret
jnp
cwtl
pop
sbb
sub
xchg
test
repnz
cmp
loopne
add
in
out
cmpsb
rclb
pop
sbb
pop
xchg
stc
fs
in
clc
mov
stos
lret
add
frstor
hlt
outsl
andl
cs
ficoms
jp
dec
ja
cmp
lret
popa
cltd
mov
lahf
and
aad
pop
pop
mov
and
cmpsb
pop
repz
pop
mov
jmp
jns
dec
outsl
bound
aaa
cmpsl
ror
mov
stos
pop
icebp
mov
cmp
btrl
std
lods
pop
cmp
int
pop
rclb
lret
ja
mov
sub
loopne
mov
loopne
cmp
js
dec
mov
fistps
sbb
cmc
out
inc
adcl
outsl
pop
cmp
hlt
ret
in
js
sub
xor
hlt
inc
cmc
push
in
fiaddl
pop
sub
mov
xchg
loopne
orb
mov
dec
adc
xchg
jb
decb
push
fistpll
in
aam
fdivr
fnstcw
push
or
inc
sub
arpl
jl
test
loopne
mov
cmp
popf
lods
inc
lods
or
sub
jno
sahf
int3
lcall
cwtl
fmul
push
push
push
push
jmp
addr16
ljmp
dec
dec
adc
inc
mov
jle
fs
cmpb
lods
lea
aas
popf
push
cmpb
lods
push
std
hlt
jp
imul
cmc
xchg
leave
lods
je
lock
sbb
sbb
pop
cmpl
shlb
rclb
cli
es
fsub
icebp
stos
mov
fildl
xchg
vmwrite
daa
jbe
adc
dec
mov
lea
mov
jns
xchg
inc
lret
push
ja
imul
loopne
adc
imul
shlb
mov
sub
int3
iret
pusha
jp
int3
das
sbb
push
ds
mov
sub
ljmp
push
stos
sub
adc
sbb
popa
repz
stos
pop
pop
inc
xchg
lea
xor
mov
hlt
cltd
mov
aas
pop
inc
sub
test
ret
pop
shl
pop
test
mov
aaa
das
xchg
js
jmp
cs
xor
mov
cmp
adc
sarl
loopne
mov
adc
mov
inc
and
and
lds
daa
inc
call
shll
add
loop
je
pop
mov
mov
sarl
es
mov
or
loope
test
and
xchg
sub
dec
hlt
sbb
push
adc
cmp
cmp
and
jmp
movsb
dec
stc
jnp
cmp
out
lcall
or
fs
cmp
stos
push
push
dec
lea
inc
lahf
sub
add
inc
inc
and
push
mov
cs
mov
stc
insl
leave
fistl
sbb
pop
jmp
adc
pop
push
mov
mov
fistl
outsl
es
inc
mov
leave
lahf
pop
and
andl
pusha
jae
sbb
stc
rcr
or
in
mov
push
in
add
sbb
insl
push
mov
test
movsb
inc
sbb
cmp
pop
test
je
xchg
mov
popf
out
push
sub
and
insb
or
lret
xchg
xor
xor
sub
add
out
xchg
sbb
js
in
aam
sti
mov
push
into
and
icebp
sub
test
pop
div
call
jne
cmp
in
aaa
cmp
add
cmpsb
sbb
inc
xlat
mov
and
fistps
dec
shrb
or
sbb
scas
add
xor
dec
icebp
sarb
jp
cmpl
add
ljmp
pop
lock
bound
mov
mov
and
jmp
rcrb
adc
xchg
dec
mov
movsb
adc
roll
movsb
cmp
sti
data16
mov
ret
push
inc
push
pop
aad
dec
push
cwtl
mov
lcall
adc
into
inc
mov
loop
shlb
int3
jns
adc
cmp
mov
push
mov
mov
jecxz
cmpsb
xchg
xor
push
sahf
sbb
push
sahf
lret
jg
dec
cmp
add
mov
inc
mov
push
mov
or
lea
test
inc
js
jle
or
xor
iret
sub
jp
sbb
mov
pop
dec
and
sbb
xorl
lret
jno
inc
pushf
imul
aas
popf
sahf
mov
ret
mov
dec
push
push
mov
xchg
aad
imul
int
ja
ret
inc
add
push
pop
aad
les
fcmovbe
iret
push
inc
test
stc
lea
aas
lds
mov
pop
test
mov
out
mov
xchg
pop
mov
es
ficompl
xor
stos
addr16
stos
pop
test
push
gs
arpl
dec
in
mov
dec
add
push
jb
insl
push
sbbb
fistps
sub
js
cwtl
sub
xchg
pop
mov
nop
cli
inc
jmp
enter
loope
jmp
pop
cmc
stos
cmc
push
add
mov
and
xorb
push
pusha
push
rdmsr
mov
mov
xlat
insb
xor
je
in
mov
pushf
mov
fcom
mov
adc
lods
mov
sbb
enter
xlat
ficompl
aad
add
out
mov
mov
mov
adc
pushf
xlat
xchg
and
ret
das
lods
testb
stc
les
mov
pop
dec
mov
pop
sub
mov
test
and
jp
mov
push
into
xor
push
ds
dec
inc
stos
fimuls
sti
mov
sub
in
popf
dec
sbb
jnp
sarb
xor
scas
cmp
xchg
push
ss
cltd
sbbl
test
mov
inc
jb
data16
mov
sti
cwtl
in
stos
jbe
add
mov
xchg
add
sarl
out
ds
icebp
loop
or
sub
nop
aam
dec
fdivl
adc
cmp
bndldx
jmp
xor
and
dec
dec
mov
sbb
push
rolb
push
mov
mov
jl
nop
mov
mov
dec
les
cmp
sbb
lods
xchg
sahf
adc
jae
xor
loop
ljmp
hlt
scas
sub
adc
je
sub
lret
pop
into
jb
pushf
pusha
lea
cli
pusha
xchg
add
jne
js
inc
or
orl
pop
pop
jmp
inc
ret
movsb
pop
push
dec
fldcw
ljmp
inc
push
scas
jbe
cmp
sbb
push
fstpt
jge
mov
pop
out
adc
movsl
stos
int3
in
mov
popa
popf
repnz
repz
cwtl
negb
jmp
test
iret
add
or
jmp
test
loopne
insl
sub
jno
sbb
outsl
cli
dec
jne
mov
jmp
fwait
popf
rorb
daa
inc
fcomps
mov
jo
adc
sub
andl
and
in
sub
stos
xor
repz
aam
scas
fcmovbe
das
test
cwtl
add
pop
mov
int
sbbb
sbb
js
iret
jns
sbb
out
add
or
jge
mov
xchg
add
jl
push
add
or
inc
xchg
sbb
xor
sbb
cwtl
xchg
popa
xor
imul
jmp
fwait
lods
das
cmp
test
orb
testl
mov
rcl
push
pushl
push
sub
scas
lea
in
inc
js
nop
push
fbld
int
movb
push
mov
idiv
push
sbb
loop
mov
js
pop
push
in
lods
push
mov
pop
cmpsb
insb
sub
lock
adc
popa
mov
add
xor
push
popa
push
mov
cmp
xor
pushf
mov
dec
sbb
sbb
out
jl
jnp
or
xlat
cs
ljmp
popa
out
inc
jae
cs
bnd
outsb
cmp
andb
fldcw
push
aas
mov
ljmp
mov
cwtl
js
cli
addps
js
push
lahf
enter
pop
gs
push
inc
sbb
add
adc
roll
std
in
jbe
adc
cld
lcall
rcrl
push
pop
pusha
pop
out
loop
out
call
inc
cmpsb
bound
jle
mov
jmp
mov
aas
sbb
sbb
inc
loop
xchg
push
inc
sub
cwtl
xor
fwait
mov
mov
jecxz
inc
ret
outsb
or
mov
dec
outsl
mov
mov
mov
jl
shll
sbb
sub
aad
adcl
test
ds
movsl
and
divb
sahf
inc
jecxz
fsubrl
push
dec
ljmp
adc
enter
aas
testl
or
aas
pop
cmp
daa
test
jmp
popf
mov
cmp
cmp
mov
gs
jo
and
out
mov
mov
jnp
scas
shlb
sub
roll
in
das
mov
adc
xor
call
cltd
lods
mov
sti
mov
sbb
hlt
fimull
push
jmp
adc
out
mov
mov
outsb
xchg
popf
xor
pop
jae
rcrb
mov
xchg
sbb
pop
cmpsl
lock
mov
ss
loope
jecxz
fnstenv
pop
sbb
cmpsl
pop
fdivs
frstpm(287
lret
cmp
push
andl
xor
mov
jb
stos
cli
jo
in
aad
push
push
movsl
pop
dec
outsl
gs
imul
sub
push
das
pop
and
sub
jp
mov
mov
mov
xchg
pusha
outsl
jge
xchg
jae
fcoms
mov
jno
nop
adc
xorb
mov
inc
mov
inc
outsb
js
outsb
cmpsl
rorb
out
insb
cli
lcall
aas
mov
call
repnz
inc
stos
insl
push
inc
xor
lock
lock
adc
fdivr
xchg
repnz
into
jmp
sbb
pop
mov
test
ds
jns
dec
sbb
orl
lea
push
add
adc
call
cli
add
mov
and
xor
pop
cmpsl
popf
jmp
mov
mov
or
inc
xlat
pop
ret
cs
dec
cmp
sub
mov
aad
fimull
pop
inc
push
jno
fmull
push
sbb
fadd
into
bnd
mov
xchg
adc
dec
cmp
aas
xor
bsf
or
into
sbb
jg
les
cmp
sbb
insl
arpl
mov
cmpsb
lret
sbb
and
add
jecxz
das
repnz
mov
imul
jb
nop
xchg
sbb
cmp
leave
mov
lods
inc
xchg
and
call
mov
dec
jp
jle
sbb
cmp
rcll
jae
imul
pushf
scas
sbb
fmuls
dec
arpl
sbb
arpl
or
inc
mov
inc
lret
adc
sub
xor
loopne
sub
jo
push
scas
bnd
xor
dec
inc
out
lret
sub
push
aam
lods
adc
and
xor
movsb
push
test
fwait
sahf
vpcmov
xchg
cwtl
out
test
push
rcl
jecxz
cmp
insl
cltd
enter
mov
jg
or
mov
fcmovnbe
dec
mov
in
inc
sbb
sbb
push
jg
cltd
pop
loop
jmp
xchg
dec
sub
sub
scas
inc
pushf
es
mov
js
sbb
subb
mov
inc
cmp
fsubrs
out
mov
int
test
call
dec
adc
dec
xlat
cli
adcb
andb
test
daa
dec
test
out
xchg
pop
mov
mov
ret
sti
and
sub
add
leave
out
mov
cmc
test
fs
pop
and
add
mov
push
rol
push
inc
pop
add
enter
ret
pop
jnp
pop
aam
add
mov
push
stc
and
mov
subb
xor
sub
lds
mov
test
add
inc
int3
and
rcrb
and
dec
std
jo
cli
and
push
xlat
dec
pop
push
jg
jecxz
sub
jns
repz
std
cwtl
stos
addb
in
xor
cld
push
les
inc
dec
insl
imul
sub
lock
mov
ficomps
cmp
insb
add
cwtl
stc
lret
mov
arpl
gs
pop
inc
lods
add
push
dec
scas
out
pop
and
jbe
mov
xor
cwtl
cmp
push
leave
push
sbb
loopne
loopne
lret
dec
mov
test
adc
jmp
idivb
fs
in
inc
cmp
in
mov
nop
fmuls
lcall
cmp
fwait
push
das
or
adcb
movsb
sbb
daa
sbbl
icebp
inc
cmp
je
aam
setl
cltd
out
int
daa
cmp
popf
sbb
pushf
std
in
inc
inc
mov
xor
clc
push
or
nop
dec
daa
add
dec
icebp
fisubl
adc
test
xchg
call
ljmp
ss
rorl
lods
mov
xchg
ror
adc
pop
jbe
and
pop
and
jo
or
or
je
and
mov
xchg
adc
outsl
mov
hlt
or
sub
mov
fdivl
fisttpl
xor
dec
sub
rcrl
push
mov
lret
pop
mov
mov
jae
into
mov
jge
in
inc
test
and
xchg
rcr
xlat
jae
mov
and
adc
les
daa
lahf
jb
xchg
or
scas
sub
dec
mov
dec
jge
and
cli
inc
test
ja
sub
std
pop
clc
pandn
jb
cmp
mov
mov
stos
mov
in
mov
xor
cli
or
cli
xchg
shlb
ret
xchg
iret
fildl
or
cmp
popf
sbb
lods
dec
addr16
xchg
cs
sub
mov
in
inc
mov
clc
cltd
sbb
sub
jno
jbe
lods
enter
add
mov
jbe
adc
dec
fildl
sti
xor
in
push
mov
imul
cltd
pop
nop
sahf
jnp
cmp
cmp
xchg
push
xor
data16
fiadds
ror
lahf
je
jge
mov
push
test
xor
and
xchg
inc
add
add
fcompl
loopne
out
add
repz
aam
xchg
ljmp
fdivs
mov
fucom
mov
test
leave
dec
je
inc
mov
xchg
mov
jb
aad
int
fwait
lret
dec
pop
xorl
or
nop
jns
in
mov
stc
jl
xor
adc
sbb
sbb
sbb
pusha
js
scas
and
pop
adcb
push
cmp
movsb
rolb
push
mov
test
adc
and
mov
test
mov
jns
mov
popf
adc
dec
divl
insl
mov
mov
dec
mov
and
das
fnstenv
enter
ficoml
movsl
xor
cwtl
insl
mov
test
sti
aas
stos
or
in
jno
adc
adc
loop
nop
cmp
jne
call
dec
out
cmpsl
lea
sbb
push
xor
push
call
cmp
push
push
pushf
jo
repz
fbstp
enter
test
jle
push
push
and
in
cmp
jno
cmpl
pop
mov
mov
cmp
ja
dec
or
sbb
cwtl
and
sbb
mov
pop
gs
repnz
inc
repnz
std
xchg
aam
enter
loop
ljmp
sbb
sbb
daa
fiadds
sbb
push
and
pop
in
insb
adc
or
in
jmp
addr16
jp
aas
xor
daa
ret
jle
das
lret
fmulp
and
filds
push
jmp
cs
icebp
lret
loop
mov
mov
in
cmp
mov
cmp
inc
daa
out
mov
pop
fwait
popl
aaa
adc
popf
cld
dec
les
push
sarb
mov
ret
cld
sahf
inc
movsb
jg
mov
sbb
sub
in
add
sub
push
sub
cmpb
fwait
insl
out
mov
mov
xor
push
or
ret
cmp
xchg
stos
rol
adcb
cmp
enter
mov
or
das
mov
dec
add
je
shll
pop
arpl
mov
fldl
or
jl
cmp
and
push
leave
mov
out
dec
test
jle
movsb
and
pop
pop
cmp
jg,pn
add
sub
inc
lock
sbb
mov
call
sbb
test
aaa
je
push
cmpsl
fidivs
scas
jg
sub
out
jl
jae
add
dec
mov
scas
sahf
je
in
push
orl
mov
push
outsb
iret
push
sbb
fsubs
cmc
cmpsl
mov
xchg
jnp
dec
sbb
jno
cmpsb
inc
fildll
push
lods
hlt
or
jmp
adc
andb
ds
in
xchg
repz
in
cs
mov
out
inc
fs
jo
dec
ds
cs
ja
idivl
popf
or
aad
std
cli
sbb
mov
inc
rcrb
pop
mov
push
sahf
pop
js
iret
sbb
mov
dec
scas
push
fxrstor
in
lods
loope
outsb
out
adc
mov
push
pop
pop
comiss
and
sbb
pop
aam
je
add
xchg
push
daa
cmp
int3
push
js
add
xor
push
fdivl
shlb
jmp
aas
adc
jne
pop
xchg
fcoml
mov
jo
pop
lret
rcrb
lods
adc
shr
sub
ljmp
xchg
sbb
ss
mov
rclb
leave
jb
add
sub
insb
mov
dec
mov
dec
pusha
je
inc
mov
fnsave
cli
in
mov
dec
or
add
call
lret
loope
pop
pop
dec
push
int
inc
leave
stc
mov
stc
pop
xor
add
sbb
fadd
cmp
in
in
cs
mov
add
mov
js
and
cmp
dec
faddp
sbb
pushf
push
nop
mov
mov
cltd
cmpsb
das
dec
roll
or
or
iret
jmp
adcb
lods
push
int
scas
bound
mov
or
int
pop
jmp
jge
mov
cltd
push
sbb
xchg
scas
outsl
inc
sub
aam
sahf
sbb
or
xchg
add
repz
xchg
out
or
gs
mov
mov
aas
call
sub
fs
xchg
mov
pop
mov
xchg
adc
in
fidivl
in
sbb
jmp
cmp
xlat
shl
cmp
pop
fisttps
leave
icebp
adc
adc
sbb
cli
mov
movsb
xchg
sbb
mov
jmp
hlt
jbe
shl
inc
fldt
hlt
mov
pop
sti
cmp
aas
cmp
mov
push
lods
sbb
jmp
cmpsb
inc
adc
mov
mov
or
lea
fsubp
dec
or
mov
fnstsw
jb
jb
inc
stc
pop
repnz
dec
add
mov
lds
inc
fiaddl
add
mov
and
mov
dec
push
in
cmp
aad
push
mov
int3
jno
pushf
outsl
xchg
or
icebp
inc
xor
mov
push
and
jo
adc
orb
cmp
xchg
rcrl
xchg
hlt
mov
inc
mov
fdivl
push
mov
lock
inc
iret
insl
mov
inc
add
xchg
cmc
fwait
add
adc
jge
add
ret
shll
jg
test
data16
cmp
and
cmp
sub
xor
or
testb
adc
lds
not
xchg
pop
mov
pop
enter
mov
ss
mov
mov
into
lods
cld
jne
popf
lcall
sub
cs
aam
popa
jmp
jmp
lea
scas
inc
sar
aas
rorl
aad
sbb
mov
fstps
inc
xlat
xlat
xor
push
or
out
or
das
fdivl
xchg
xor
jbe
outsb
fnsave
cmpsb
test
inc
sbb
add
data16
das
add
mov
cmpl
pop
outsb
or
mov
pusha
shl
insl
pop
sub
inc
adc
jecxz
cmpsl
loopne
sbb
addr16
mov
pusha
pop
movsb
inc
pop
xchg
fld
sbb
jnp
pusha
push
or
ss
add
push
and
mov
push
xor
xor
cld
inc
fwait
lods
fstpt
dec
cmpb
sbbb
imul
stos
aad
pop
mov
sub
imul
hlt
stc
jmp
icebp
dec
or
and
and
mov
sti
adc
jb
into
sbb
add
push
sbb
sub
enter
mov
fst
cmp
sbb
mov
shll
enter
jne
scas
daa
enter
mov
xor
mov
cmp
mov
push
cmp
stos
inc
pusha
lock
adc
and
mov
daa
sbb
fldt
and
dec
lahf
add
aaa
jge
mov
sbb
fistpl
aas
xchg
push
jo
scas
pop
insl
adc
mov
lahf
aam
xor
mov
loopnew
in
sbb
in
sbb
xchg
adc
aaa
hlt
sbb
bound
mov
fucomip
jmp
mov
movsl
dec
adc
cmc
adc
xchg
aam
inc
jecxz
adc
fcoms
ret
sub
mov
cmp
mov
dec
in
adc
outsl
mov
or
push
out
jge
xchg
decl
xchg
or
inc
mov
sbb
xor
push
stos
inc
adc
jp
sub
cmpsb
stos
xor
adc
fdivl
outsl
ss
into
repnz
push
dec
cmpsb
push
push
fwait
pop
fwait
cmpsl
in
jae
xor
or
cmp
xchg
jg
orl
cmp
sbb
pop
fcomi
dec
ss
xchg
pop
jmp
sub
mov
sub
and
xchg
push
lock
jecxz
loopne
loop
icebp
out
push
jecxz
xor
fwait
in
mov
and
and
push
jno
push
mov
xor
cmp
call
cltd
ffree
and
or
lahf
outsl
cli
mov
cs
push
mov
cld
push
ret
dec
stos
fldcw
loope
mov
mov
lods
jle
sbb
push
cmp
jge
test
stos
push
push
hlt
test
ja
or
les
inc
or
sub
daa
out
adc
dec
mov
std
pop
push
mov
pop
cmp
imul
imul
and
in
mov
outsl
das
add
push
mov
shll
xchg
adc
jns
dec
pusha
xor
stos
leave
jge
fidivl
inc
inc
dec
outsb
sub
stos
mov
push
inc
cmpl
pop
sbb
dec
bound
adc
leave
js
popf
lcall
adc
add
iret
es
clc
adcb
dec
loope
adc
fldenv
ss
cli
push
filds
testl
rcrb
lods
sub
sbb
lods
pop
xchg
out
sub
mov
ret
or
inc
and
push
ret
mov
inc
add
jp
call
mov
lahf
cmc
ret
divl
fidivrs
mov
push
fs
add
push
pop
aas
dec
push
cmp
add
lds
mov
push
das
lock
daa
push
cmpsb
mov
or
inc
adc
int3
nop
xor
jae
test
dec
xchg
call
sub
or
or
insb
je
repnz
roll
fildll
sarl
xchg
sub
fcmovnb
dec
dec
repnz
aad
nop
movsl
pushf
aam
xchg
xor
push
pop
xchg
add
xor
scas
dec
lss
mov
aam
daa
xor
lds
jae
cmp
cmpsl
std
xor
pop
pop
mov
jge
xchg
mov
aaa
mov
xchg
xor
das
inc
lret
leave
ja
nop
xor
es
imul
jne,pn
xchg
into
notl
add
fst
pop
and
xchg
scas
in
and
jle
test
push
mov
fwait
es
js
jns
in
outsl
fiadds
les
ss
popa
push
fcmovu
xchg
jno
pusha
leave
jmp
ja
rorb
mov
lahf
mov
and
mov
in
cmpl
xchg
stos
jmp
movsl
mov
sbb
pop
and
cmp
and
adc
jl
mov
dec
push
sub
inc
add
jle
inc
cmp
into
mov
aaa
push
cmpsb
or
adc
mov
push
push
sub
push
scas
or
adc
mov
mov
cs
lahf
push
cltd
sahf
shll
pop
adc
cmpb
lock
mov
lret
rep
stos
pop
pop
push
stc
mov
clc
clc
pusha
outsb
in
hlt
pop
cmp
xchg
es
or
jnp
fistpl
add
jo
js
mov
popf
lds
dec
std
lods
imul
jnp
inc
stos
jmp
and
sub
mov
je
loopne
cs
pop
fstpl
jp
add
cmp
call
xor
fs
aaa
pop
gs
fcomps
sbb
or
xchg
test
stc
stos
cmp
sbb
mov
pushf
push
inc
dec
dec
aad
mov
xor
adc
pushf
pop
aaa
jbe
frstor
adc
xchg
add
push
or
or
mov
jns
inc
ljmp
inc
popa
daa
pop
out
and
imul
je
jbe
jmp
mov
jb
outsl
push
enter
in
jp
es
xor
les
sahf
lods
pop
push
sbb
add
mov
les
mov
repnz
lcall
aaa
sub
pop
cli
outsl
sub
push
cs
ds
mov
repnz
dec
cmp
int3
fisubrs
xor
subb
mov
lock
push
hlt
mov
insb
ret
lahf
in
out
adc
out
stc
pop
sbb
xor
repnz
mov
dec
es
repz
xor
mov
addr16
xchg
jb
mov
ds
pushf
add
out
out
push
scas
leave
or
aas
popa
dec
push
inc
jns
cmp
out
movsb
cwtl
cmp
test
mov
mov
je
in
push
mov
dec
mov
push
sub
pop
popf
ficoml
stos
sti
jb
pusha
push
add
xor
outsl
and
ljmp
pop
cmc
daa
add
pop
push
jbe
xor
decb
cld
cmp
pop
repz
push
in
add
adc
mov
cmp
inc
mov
dec
mull
or
lds
test
icebp
ss
test
or
fbstp
ja
lahf
cmp
cmp
sbb
dec
xchg
sub
idiv
dec
out
or
out
xlat
imul
ret
sti
subb
sbb
dec
inc
das
imul
fs
out
bound
pop
lret
jp
outsl
mov
movsl
addl
int3
icebp
jle
std
mov
sbb
nop
cmpsl
and
xchg
cwtl
cmp
lock
or
inc
cmp
push
fnsave
add
out
dec
adc
push
mov
hlt
jne
fldt
adc
xor
ret
adc
dec
cmp
das
lcall
std
xor
jecxz
test
enter
mov
stos
push
jge
pop
lock
jp
cmpsl
into
and
sbb
xchg
ret
insl
xchg
xchg
push
mov
imul
aam
sbbb
int3
inc
int
or
fnsave
lret
stos
xor
popa
lcall
nop
adc
negb
lods
ds
pop
mov
fiadds
lea
in
aam
imul
imul
out
pinsrw
rcr
xchg
xchg
and
shr
pop
jle
shlb
int3
in
inc
fwait
aam
clc
cmp
fcoms
add
loop
dec
fadds
test
add
push
sbb
andb
mov
jecxz
dec
and
push
loopne
push
test
jbe
xor
mov
and
push
push
sub
xchg
cltd
aad
pusha
loopne
cwtl
jnp
sub
in
pop
jne
enter
inc
push
jge
popa
into
or
cwtl
insl
jae
data16
adc
insl
enter
mov
lods
add
shlb
test
je
lods
pushf
jo
sub
jnp
fwait
cmpsb
and
call
repnz
sbbb
cmp
lret
and
mov
push
pop
lahf
mov
rorl
ljmp
pop
mov
and
cwtl
inc
xchg
in
xor
push
jecxz
jecxz
mov
mov
xchg
sahf
mov
mov
pop
es
outsl
jne
popf
pushf
out
jl
movsl
test
xchg
mov
sub
loopne
fsubr
cmp
test
pop
sbbb
lock
mov
sbb
add
hlt
dec
mov
sbb
pop
in
lock
push
fwait
mov
decb
add
mov
xchg
int3
aad
inc
or
xor
jae
xor
stos
or
scas
mov
jge
popa
pusha
lea
fs
push
loopne
lds
mov
pusha
and
inc
popa
cli
pop
into
test
cmp
add
adc
push
push
jmp
inc
xor
mov
gs
fbld
js
int
mov
je
sub
movsl
lods
sub
and
sbb
movsl
sub
xor
push
cmp
inc
nop
lods
imul
pop
or
clc
stc
mov
in
or
xchg
pop
and
mov
pop
mov
adc
jecxz
lods
cltd
mov
dec
loop
lret
dec
push
lds
adc
xor
movsb
mov
fsubs
inc
lret
frstor
stos
std
add
sub
sub
das
js
jmp
sub
and
fisubrs
stos
mov
or
fsubrl
clc
mov
inc
fsts
mov
xor
cmp
and
sub
in
cmp
push
addr16
testb
jg
popf
rcll
stos
les
mov
inc
mov
lret
mov
lods
adc
test
repnz
mov
sbbl
popf
inc
add
adc
xor
fwait
cld
iret
or
jecxz
bound
mov
repz
bound
loop
mov
lcall
push
fs
lods
fwait
push
xor
or
aad
jb
push
push
outsb
sbb
fs
roll
mov
cmp
imul
rcrb
sbb
call
or
mov
dec
mov
out
or
fnstenv
mov
ret
pop
sarl
add
loopne
sahf
add
and
xchg
aad
adc
xor
xchg
mov
inc
out
iret
inc
fldenv
bound
rclb
pusha
xor
adc
xchg
dec
aam
scas
mov
cmp
fs
push
push
lret
enter
inc
xchg
subl
imull
cmp
or
loop
inc
dec
leave
inc
fcoms
mov
or
adc
pop
push
add
mov
ljmp
xor
dec
sahf
orb
daa
mov
cmp
ret
push
fisubrl
cs
dec
scas
inc
pop
push
inc
push
insl
je
xchg
int3
mov
scas
xlat
cmp
insl
or
mov
popf
repnz
adc
scas
xchg
xorb
popf
jns
test
sbb
jp
loope
xchg
popf
mov
mov
andl
icebp
push
adc
add
fstpl
scas
and
jge
jp
sbb
adc
push
sub
in
xor
ret
lock
sahf
scas
in
lea
ljmp
sbb
add
jl
imul
fdivl
lea
mov
ja
mov
rcrb
or
and
test
testb
lahf
dec
into
adc
js
cli
pop
push
lods
rolb
sti
jmp
cmp
popf
or
mov
xor
pop
aas
jno
movsb
repnz
fsts
mov
mov
pop
push
push
push
int
test
pop
dec
sub
aad
lock
jg
pop
xchg
mov
xchg
aaa
add
inc
test
mov
xorl
dec
testb
icebp
dec
jmp
xor
adc
repnz
sahf
push
cmp
dec
bound
in
movsb
cmp
cli
cwtl
cmp
sbb
mov
pop
out
faddp
outsb
dec
jp
imul
jae
fidivrs
inc
gs
stc
jb
sbb
sbb
sbb
jae
mov
call
rcr
pop
push
push
cs
push
add
pop
divb
and
ss
xchg
cmp
mov
dec
mov
jns
lock
adc
jp
cmp
inc
push
sub
outsb
movsl
pop
inc
xchg
sub
into
jbe
jns
test
scas
in
movsb
mov
pop
lcall
fidivrl
or
into
ljmp
cmp
xchg
push
dec
sbb
sbb
shl
leave
out
imul
or
push
rol
xlat
mov
leave
test
out
push
scas
adcb
push
sahf
scas
test
aas
add
cmp
mov
sub
fdivrs
leave
repz
mov
ljmp
mov
add
xchg
fwait
mov
movsb
and
pop
fisttps
cmpb
add
stos
pop
or
fs
shll
xchg
jle
adc
jnp
iret
js
lds
xchg
stos
mov
imul
js
cmp
xor
jnp
pushf
aaa
lcall
sub
pop
mov
dec
nop
in
xchg
hlt
outsl
ret
lret
scas
mov
adcb
jno
lods
or
popf
mov
mov
or
inc
add
or
push
fnsave
jle
push
push
mov
xor
and
sti
jne
mov
pop
test
inc
addr16
test
pop
push
movsl
rcrb
adc
cmc
jns
inc
sub
adc
pop
lahf
jae
daa
lcall
paddw
ds
divl
inc
inc
out
mov
call
mov
mov
fists
out
daa
push
add
pop
gs
jbe
xchg
mov
ret
pop
aad
push
sti
stos
popa
dec
pushf
lods
gs
pop
ret
inc
call
cmpsb
pop
in
roll
hlt
or
rcrl
in
jno
cmp
lods
movsl
data16
or
add
mov
xor
stos
rcr
cmpsb
xlat
mov
pop
fmuls
sbb
int
in
mov
inc
adcl
mov
adc
sbb
mov
hlt
adc
loope
mov
mov
push
vunpckhps
fbld
int3
and
sarl
lea
xchg
mov
insb
push
cltd
mov
insl
sub
jg
ret
mov
mov
int
mov
sbb
or
xchg
dec
test
xor
inc
cmp
mov
inc
jle
jae
dec
ficompl
sbb
sub
movsb
or
jl
dec
xchg
xchg
jns
outsb
sahf
jge
jecxz
pop
pop
testl
and
into
ret
cwtl
inc
mov
roll
sub
sbb
cmpsl
mulb
jge
fisubrs
loope
loop
xorl
enter
enter
sbb
mov
stc
shll
subb
insb
dec
sub
xchg
and
add
cmp
mov
stos
dec
js
mov
pop
push
xor
stos
test
imul
and
int
mov
push
test
in
pop
icebp
lret
cmp
adc
xchg
hlt
arpl
xor
int
in
leave
not
push
insl
rep
loop
jnp
dec
mov
pop
scas
xchg
mov
cs
mov
cld
std
xor
stos
std
xlat
imul
xor
jge
cmc
adc
inc
mov
arpl
popa
xor
or
insl
out
pop
bound
je
add
adc
sub
mov
pushfw
arpl
aaa
nop
push
das
mov
lcall
fwait
adc
sahf
cmpsl
or
ret
add
cmpsb
lahf
lret
adc
stos
jnp
inc
aaa
dec
iret
pushf
rclb
push
arpl
js
adc
adc
fsubr
fs
jbe
mov
daa
and
lock
movsb
jp
mov
sahf
xor
or
pop
mov
pop
test
jecxz
pop
lret
xor
pop
in
mov
mov
ficoml
aas
rcrl
push
leave
pop
enter
ret
mov
cmpl
cli
or
cmp
icebp
pop
addb
lcall
jl
popa
rep
jp
mov
out
push
ss
test
rclb
add
pop
scas
mov
test
lock
cs
std
hlt
adc
inc
movsl
push
add
je
or
sbb
or
or
mov
jbe
aas
sub
or
repnz
sub
pop
int
fnsave
bound
scas
ljmp
inc
cmp
jae
sarb
or
sbb
add
add
mov
ja
cmpsl
pop
sub
mov
mov
mov
sar
adc
push
xor
fstpl
inc
outsl
popa
and
jl
iret
les
cltd
and
and
nop
xchg
stos
stc
gs
call
push
push
sub
xchg
int
cs
mov
and
jno
ficomps
fiaddl
mov
je
aaa
xchg
pop
fwait
cli
fdivrs
pop
loope
in
adc
xlat
cmpsb
scas
dec
xchg
cmp
sbb
out
jo
xchg
movsl
loopne
fs
dec
in
dec
fidivrs
sahf
test
push
divb
shlb
or
sbb
testl
xchg
out
jns
movsb
jns
pop
ror
xchg
or
xor
in
testl
fidivs
add
mov
push
xchg
mov
mov
iret
mov
mov
jp
mov
push
or
aad
mul
pop
in
je
mov
outsl
dec
mov
inc
shrl
mov
cli
imul
mov
ds
lods
adc
inc
dec
or
test
jmp
incl
lret
xor
popf
jne
mov
and
loop
xor
shll
loope
cmp
roll
add
ds
xchg
xor
sti
and
xchg
dec
leave
mov
mov
sbb
int
push
cmp
and
xor
push
mov
int
int3
jne
pop
out
cmpsl
outsb
xchg
into
cmp
test
push
and
add
xor
mov
subb
pop
or
mov
xchg
jno
pop
cmc
fs
sbb
mov
icebp
sbb
sub
jl
daa
ss
mov
shrl
cmp
sahf
pushf
lahf
sbb
call
pop
ss
add
mov
icebp
add
dec
dec
mov
adc
ja
shrl
out
fs
gs
add
pop
or
pushf
clc
jmp
arpl
add
in
add
rol
push
xor
stc
aam
and
fs
js
mov
leave
jae
push
or
loop
iret
movsl
sbb
les
mov
sub
ret
cmp
add
out
clc
popf
adc
inc
ljmp
lret
outsl
adc
std
lret
xor
stos
mov
push
ror
adc
aam
xchg
mov
mov
ret
inc
and
mov
and
in
adc
fimull
test
sahf
in
fnsave
out
mov
ljmp
fcomps
or
push
adc
into
sbb
repz
in
cmp
sahf
leave
rclb
sbb
addr16
pop
leave
insl
loopne
xlat
xorl
cld
cmp
cmp
jno
mov
es
ljmp
cmpsl
lret
shrb
push
iret
adc
into
out
clc
xor
mov
call
adc
push
jno
movsb
dec
or
sahf
adc
test
cmp
lcall
leave
adc
int3
adcb
aas
xor
and
adc
movsb
lds
xchg
stos
xchg
and
xchg
add
cwtl
cs
hlt
jmp
xchg
inc
insb
cmpsl
or
xchg
sbb
or
pop
mov
gs
xchg
dec
push
inc
jl
std
pop
incl
inc
in
dec
call
ret
faddl
out
dec
xchg
fsubs
es
xor
jns
popa
int
xchg
pop
lea
jl
adc
inc
lock
in
jno
jo
les
dec
iret
and
lock
jp
rclb
jmp
sub
inc
jo
cmp
cli
jmp
das
scas
or
movsl
mov
loope
test
inc
pushf
or
jmp
cmp
or
js
inc
insb
lret
xor
sarl
mov
idivb
pop
sbb
lock
sub
sahf
push
pusha
je
and
xchg
push
add
leave
mov
movsb
mov
push
ret
sub
xor
inc
iret
aad
shll
stc
movsb
sbb
mov
in
ljmp
xor
and
xchg
pop
in
push
js
cwtl
pushf
or
pop
loopne
xor
es
mov
mov
out
adc
jecxz
imul
fnstenv
jge
cwtl
aas
mov
jmp
add
or
adc
jo
inc
lret
mov
add
add
imul
leave
inc
test
call
or
adc
out
jo
sti
arpl
fmull
jno
mov
dec
int
test
pop
in
ror
jge
ja
filds
stos
cmp
cmpsb
jns
pushf
ret
das
into
xor
stc
xchg
inc
enter
mov
scas
xchg
jno
adc
add
imul
push
mov
mov
dec
or
or
mov
fxch
cs
and
outsb
mov
cmp
sti
sbb
push
pop
sbb
hlt
imul
fdivp
inc
xchg
sbb
ja
shl
pop
pop
add
mov
mov
push
bound
addb
jle
fisttpll
jg
iret
or
clc
dec
dec
pop
xor
adc
push
jecxz
or
sbb
popa
mov
movsb
jns
xor
mov
add
or
ja
das
mov
mov
shl
push
mov
xchg
push
inc
stc
lock
xor
dec
das
in
mov
testl
leave
data16
jecxz
xchg
and
das
inc
orl
clc
ret
mov
cwtl
mov
bound
lods
push
pop
ljmp
mov
pop
loop
mov
sti
add
jge
nop
loopne
repnz
rorl
dec
dec
repnz
or
xchg
add
fwait
and
jg
mov
xor
push
add
int
scas
sub
and
jbe
pop
mov
nop
imul
adc
mov
cmp
sbb
fstl
daa
push
clc
cs
mov
imul
in
pushf
pusha
in
int3
cmc
lods
cmp
sub
jge
add
iret
mov
and
je
scas
cmpsl
ret
scas
ret
xor
lds
filds
mov
pop
xlat
push
push
les
sahf
std
lods
xchg
nop
fst
int
std
outsb
mov
roll
out
aaa
sbb
xor
outsl
push
hlt
in
shlb
push
mov
pop
push
outsb
mov
nop
imul
dec
sub
rcl
mov
cmpsl
xchg
stos
imul
scas
cmp
scas
and
sbb
jecxz
lods
cmp
sti
jmp
mov
stos
adc
stos
pop
test
test
jo
pop
mov
mov
or
std
mov
cmp
xchg
adcl
push
adc
clc
out
insl
stc
or
idivl
movsb
lods
jne
mov
fwait
iret
and
sbb
cmp
mov
lods
testl
adc
push
xorb
pop
leave
stos
cmp
inc
es
xchg
xchg
leave
scas
sbb
jo
and
into
mov
or
sub
sub
lahf
cmpsb
jl
orl
cmp
jae
cmp
fidivrl
mov
movsb
push
cld
dec
sub
leave
shll
push
push
add
cmp
lcall
lcall
lahf
sbb
fcmovu
fstl
and
rcll
mov
gs
add
add
mov
adc
out
inc
movsl
xor
out
gs
xchg
inc
jg
jno
jnp
xchg
shrb
call
sbb
push
sub
sar
pop
add
out
inc
jne
pop
dec
out
stc
inc
cwtl
loopne
lods
jge
pop
cmpsl
mov
movsb
jo
pop
shll
add
pop
inc
inc
es
cmp
ret
mov
jnp
jmp
jb
xor
mov
sbb
in
ud1
ret
push
dec
push
rorb
iret
xor
pop
or
cmp
add
push
cld
les
fdivs
sub
repnz
ret
or
in
sub
fs
cmc
enter
jb
jecxz
xlat
adc
inc
adc
lcall
mov
enter
jne
lahf
test
filds
jns
mov
call
sbb
pop
sahf
aaa
xor
push
add
invd
cli
pop
in
sbb
mov
cld
cmp
jne
or
push
in
jle
gs
push
jge
lock
gs
hlt
mov
inc
mov
xor
lds
movsb
and
loopne
mov
push
ja
imul
lods
pop
sbb
ja
shlb
dec
insl
test
xchg
mov
jp
mov
popa
push
xor
push
dec
in
sub
insl
int
pop
sahf
outsb
or
movsb
sub
push
into
stos
ret
popa
xor
push
loopne
movsb
mov
mov
test
xchg
xor
mov
cmpsl
fmull
pop
lods
int3
test
loop
cmp
sarl
pop
xlat
fs
cwtl
icebp
mov
mov
dec
aam
test
push
out
test
sbb
sub
xchg
xor
pop
jmp
cmp
jnp
inc
mov
into
inc
cmc
jl
push
pop
fadds
fwait
lods
or
test
lds
inc
aaa
gs
mov
inc
std
imul
mov
xchg
rclb
fisubl
pop
dec
les
inc
sti
mov
es
sbb
push
pop
data16
lahf
push
loope
xchg
adc
ret
cmp
mov
xchg
dec
mov
cmp
addr16
mov
dec
jns
inc
jge
repz
scas
cmp
test
xor
rolb
imul
rol
xchg
pop
lds
sahf
out
cmpsb
loope
mov
mov
rol
inc
mov
and
dec
jnp
inc
popa
add
sub
arpl
mov
and
sti
movsb
mov
ss
adc
negl
test
sbb
pop
pushf
bound
pop
cmpl
sbb
cs
jge
leave
test
stos
add
inc
push
sub
jns
mul
pop
aas
mov
scas
aad
cltd
sarb
loopne
push
sbb
inc
mov
xchg
push
pop
pusha
dec
push
dec
sub
add
sbb
je
jno
mov
nop
mov
mov
sar
pop
dec
lock
lcall
dec
or
ljmp
push
movsb
addps
push
add
cli
out
xchg
rcrb
neg
adc
addb
or
xor
in
notl
repz
addb
out
sbb
mov
or
out
xor
ror
push
mov
mov
push
sbb
cmp
das
add
insl
pop
or
cmp
daa
jl
mov
xchg
insl
popa
jl
push
mov
icebp
sahf
jmp
xchg
xchg
enter
scas
bound
je
insl
in
sbb
lods
ja
or
push
cmp
pop
cltd
outsb
fwait
mov
pop
cmp
pusha
icebp
bnd
aam
sbb
lahf
in
pop
cld
icebp
mov
mov
sub
push
push
out
int3
dec
cmp
scas
mov
mov
mov
jo
fucomip
mov
xor
push
je
mov
and
pushfw
sub
loopne
leave
push
xchg
pop
fdivr
jle
mov
imul
lahf
xchg
popa
and
int3
pop
jg
xchg
mov
cmp
and
lea
jb
loop
adc
mov
imul
insb
into
add
jbe
arpl
mov
adc
jge
jno
mov
sub
inc
mov
mov
rorb
fwait
add
pop
subb
mov
fcmovnbe
mov
dec
loop
pop
sti
add
in
xchg
sub
xor
cmpl
divb
mov
jle
pop
sahf
xor
lahf
or
jb
inc
cmp
inc
cltd
cmc
std
cmc
add
mov
sbb
sbb
ss
xchg
jl
jbe
adc
in
or
lods
in
sar
or
imul
sti
mov
js
sub
mov
loop
ret
or
mov
push
pop
jmp
fadds
pop
clc
test
pop
push
jg
shl
ljmp
pusha
cmp
adc
and
sub
pop
push
pop
jns
dec
xchg
cli
lret
push
push
movsl
sub
out
jle
lea
movsb
inc
imul
out
pop
xchg
leave
jmp
mov
scas
inc
imul
cs
cmc
jg
arpl
push
scas
js
pusha
mov
repz
fisttps
jns
add
dec
into
sub
or
pushw
pop
sub
icebp
adc
sbb
mov
mov
xorl
hlt
add
mov
or
gs
insb
xchg
es
in
cmp
jmp
lods
jg
pop
and
in
movsl
jnp
xor
mov
daa
adc
push
cmp
dec
btcl
xchg
nop
dec
inc
mov
gs
incl
push
and
imull
popf
inc
bnd
xor
dec
push
sarb
dec
repz
arpl
popa
jge
push
mov
out
ss
and
jo
sbbb
sub
xor
movsl
mov
push
xlat
gs
push
cmpsb
sbb
popa
inc
pop
ljmp
cltd
fstpt
iret
test
loopne
cli
cmp
orb
loope
arpl
dec
mov
jne
push
push
push
cmc
ret
mov
xchg
dec
cmp
stc
es
add
jmp
jb
lret
adc
and
cltd
cli
cli
xor
jno
leave
out
push
xchg
sub
ss
jg
roll
scas
loope
insb
add
ljmp
inc
ffree
test
das
out
sub
push
xchg
js
add
xor
mov
ret
push
dec
sub
sar
jp
xor
lahf
mov
cmpsb
sbbl
dec
or
test
mov
xchg
sbb
sub
dec
sub
add
popa
or
sub
xchg
pop
push
sbb
push
std
pusha
cmpsl
mov
xor
iret
ljmp
sub
jmp
mov
test
add
mov
ja
adc
mov
ljmp
add
and
mov
scas
or
sbb
std
push
pop
push
or
and
mov
fwait
scas
ja
dec
ret
mov
fdecstp
clc
inc
iret
xchg
dec
xchg
or
pushf
jg
fisubs
incl
lea
push
loop
sbb
push
push
dec
test
sbb
or
pop
pop
mov
pop
mov
fwait
loop
je
adc
int
push
pop
dec
inc
leave
mov
lds
jmp
jns
mov
bound
test
adc
aaa
adc
repnz
adc
enter
sub
outsb
pushf
pop
shl
mov
mov
and
push
fisubs
flds
fwait
inc
fsubrl
hlt
sub
mov
and
xor
xor
sahf
addr16
insb
mov
cli
or
xchg
sub
into
jno
std
or
mov
mov
and
andb
sbb
dec
icebp
jle
push
xchg
sub
cltd
daa
out
repz
and
mov
arpl
or
jmp
and
pushf
mov
adc
pop
loope
cwtl
fs
jae
xchg
lret
popf
call
or
push
cli
ds
xor
in
push
mov
push
lret
jb
cmp
sbb
push
cmpsl
jle
dec
loope
shlb
inc
lret
cmp
and
and
and
mov
cltd
jecxz
fwait
lock
push
or
xchg
stos
mov
sar
call
fcomip
cmp
and
inc
or
and
mov
aaa
sub
push
dec
pop
in
and
fistps
and
insl
enter
out
xor
adc
js
addb
pop
int
loope
or
outsb
inc
jge
imul
add
sub
into
ficoms
out
fdivs
jnp
jge
dec
subl
rorl
adcl
outsl
pop
shl
das
mov
push
not
shrb
lock
andb
sub
sub
inc
movsl
call
and
in
pop
mov
repnz
xchg
rorb
int3
jnp
into
lds
pop
add
xor
cmovl
jmp
outsb
xchg
jnp
fidivrs
xchg
scas
loop
pop
mov
outsl
inc
in
pusha
jne
xchg
mov
adc
pop
rcll
pop
dec
jno
xchg
fstl
andb
ret
lds
rcll
cs
in
aad
cmpsl
int
jno
push
mov
psubusb
xor
movsl
jns
pop
call
ret
or
push
cmp
push
jno
or
popf
hlt
adc
dec
mov
pop
and
enter
pop
jge
or
vrcpps
xchg
sub
fcomp
inc
pop
add
insb
add
je
mov
jne
push
arpl
ljmp
and
mov
jns
mov
push
dec
cmp
dec
test
repz
stos
adc
xchg
or
div
arpl
test
test
int
jb
lea
push
or
adc
lods
or
sub
mov
inc
mov
lods
mov
fincstp
mov
cmpxchg
inc
push
or
mov
dec
xchg
push
lock
mov
inc
fwait
popf
cli
pop
shl
mov
inc
andl
enter
sbb
jbe
pop
add
fnstsw
test
js
pop
shrl
ds
les
mov
adc
mov
mov
push
daa
and
add
ret
test
fistps
addb
mov
jmp
outsb
cmc
arpl
scas
scas
scas
das
pushw
stc
adc
jp
push
sbb
in
xor
mov
leave
dec
and
pushf
cmp
loop
cmp
movsl
insl
mov
sub
out
mov
lods
pop
or
jg
push
push
mov
push
push
mov
jl
outsl
fldcw
pop
sbb
add
test
cmpsl
sub
loopne
jmp
test
mov
leave
or
xchg
loop
rcl
addb
outsb
mov
insb
pop
mov
cld
jnp
icebp
test
bnd
and
sub
pop
or
fidivs
push
movsl
adc
mov
fimull
jne
scas
fstpt
mov
xlat
adc
sahf
mov
push
push
sub
sti
dec
adc
xor
nop
mov
push
push
fistpll
jp
pushf
xor
add
xlat
xchg
jmp
lock
jmp
xor
adc
sbb
cli
adc
jecxz
icebp
mov
xchg
mov
jl
ljmp
movsb
scas
or
xor
repnz
or
xor
cltd
lret
roll
mov
fs
cmpsb
ja
jns
mov
mov
addr16
sahf
cld
xchg
jp
mov
jae
sbbb
pop
movsl
mov
push
je
stos
xor
sbb
pop
xchg
push
and
mov
adc
mov
repnz
nop
mov
and
mov
mov
imul
sbb
ja
aas
dec
shll
xchg
pop
lds
jl
ret
lcall
ljmp
call
jb
jl
lahf
es
jnp
push
push
sarl
cmp
fs
cld
xchg
adc
and
adc
clc
mull
movsl
and
mov
push
sbb
cmp
mov
pop
iret
in
dec
jl
mov
pushf
aas
sub
daa
mov
inc
shlb
test
push
sbb
into
inc
dec
clc
lret
sbb
iret
ffreep
imul
lret
pop
into
dec
in
hlt
leave
inc
jbe
inc
fucomp
arpl
or
mov
and
sbb
jmp
xchg
mov
in
dec
jae
stos
lock
inc
and
mov
fisttpll
xchg
push
adc
sub
mov
add
or
dec
fiadds
loopne
fadds
add
test
inc
daa
movsb
pop
or
or
mov
in
inc
ret
lcall
or
sub
mov
push
cld
push
rol
ror
pop
pop
stos
dec
inc
scas
mov
ret
adc
push
jns
xchg
test
push
stc
xor
ret
aas
pop
sbb
pusha
xchg
sbb
push
js
test
idiv
nop
ljmp
shlb
mov
stos
or
int3
dec
in
rolb
lret
mov
inc
cmp
nop
leave
in
xor
xor
cmp
loopne
push
xchg
sub
jge
sbb
sub
ret
lds
push
push
push
ljmp
inc
es
movsb
xchg
jp
lcall
sbb
outsl
or
cmp
mov
ret
jne
xchg
stos
inc
push
fs
mov
xchg
cmp
imul
pop
push
mov
jnp
dec
cli
dec
or
jl
dec
sbb
lods
popa
cltd
or
sbb
pop
push
push
push
mov
notb
cmpl
movl
das
or
pushf
sbb
insb
in
sub
pop
sub
cmc
mul
cmc
inc
hlt
jmp
add
aas
repnz
inc
push
out
cwtl
cmp
je
push
jns
mov
jnp
cmp
stc
pop
xor
gs
xchg
aad
sub
pushl
fsts
incb
dec
cmp
lea
xchg
cmc
lods
stos
mov
cmp
push
push
inc
and
push
inc
xchg
nop
in
xor
andb
mov
add
push
inc
sub
data16
into
aas
xor
cmpsl
jmp
cmp
std
and
jo
shld
and
mov
movsl
mov
add
lahf
pop
ja
ljmp
lret
lock
faddl
orb
popf
and
cmp
jle
mov
pop
inc
jns
cmp
jno
ljmp
je
orl
pop
icebp
sub
cmc
cmpsb
xchg
xchg
es
jbe
push
aad
cltd
push
push
ljmp
das
imul
rcl
out
dec
jb
into
call
mov
mov
popa
daa
fcoml
sbb
xchg
and
ss
adc
in
xchg
adc
fwait
les
lds
fmull
mov
scas
loop
and
cmp
add
sbb
mov
loop
mov
mov
leave
test
jb
pop
push
or
rcl
in
fidivl
arpl
insl
pop
jge
dec
ds
aaa
adc
sub
xchg
ja
fwait
scas
adc
popa
in
ret
cltd
adc
cld
mov
mov
cmpsb
push
or
mov
popa
nop
jmp
repnz
stc
cli
and
outsb
push
mov
stos
sub
rclb
mov
dec
mov
dec
mov
or
add
xor
push
lods
xor
inc
and
roll
in
loop
jnp
insl
mov
mov
arpl
das
aaa
rcll
cmp
cmpsb
xor
test
mov
movsb
repz
add
in
mov
ljmp
fsubs
in
mov
in
in
es
int3
mov
xor
add
push
jl
xor
adc
pop
mov
pop
in
and
adc
pop
or
fistl
xchg
xor
lret
sub
or
jns
or
pop
inc
add
xchg
sarb
or
adc
add
daa
stc
sub
mov
insl
push
lret
repz
test
adc
arpl
test
mov
shll
insl
dec
mov
inc
add
shl
popa
loop
mov
sub
aaa
mov
dec
lods
lret
aad
ljmp
lock
lcall
dec
xchg
test
jecxz
stos
data16
rcrl
cmp
inc
dec
not
sub
aad
insb
xchg
mov
jmp
js
iret
pop
test
and
inc
xchg
mov
add
pop
jns
adc
shrb
push
pop
and
pop
jo
sbb
enter
mov
out
jp
loopne
xlat
out
pop
in
xchg
out
pop
sub
mull
xor
mov
imul
mov
jnp
add
lds
xchg
aad
pop
jmp
push
loop
dec
dec
outsb
dec
jl
fistl
mov
jbe
mov
and
enter
add
mov
cs
xchg
xorl
and
add
mov
jp
leave
scas
add
dec
jae
aas
jg
push
out
inc
xchg
jns
shlb
xor
sbb
mov
inc
or
punpcklbw
fsubs
aaa
sub
scas
dec
outsl
cmp
xchg
pop
scas
or
cmp
mov
outsb
ss
das
cmp
dec
push
in
jecxz
cmp
sbb
or
pop
mov
mov
scas
popa
stos
pop
int
repz
lock
inc
pop
outsl
cmp
sub
lret
clc
push
sub
imul
aam
adc
rorb
repz
cmp
jmp
inc
xor
add
xor
shl
cmp
and
pop
ja
data16
cld
push
call
cmp
jns
push
add
push
and
and
sub
sub
cmc
sub
cmpsl
movsl
inc
into
mov
fsub
jo
outsl
push
lcall
into
add
cltd
loopne
cld
int
dec
pop
mov
in
ljmp
in
enter
jl
lcall
loope
push
leave
outsl
leave
in
divb
inc
xor
push
incb
inc
push
das
xchg
jbe
xor
dec
adc
inc
movntps
sbb
aas
mov
pop
sahf
jnp
sahf
dec
rorb
pop
dec
daa
mov
dec
mov
test
jns
inc
and
mov
mov
mov
push
cli
out
clc
sbb
gs
cmp
push
cltd
fistl
test
xchg
es
jo
and
mov
cltd
pushf
lds
sub
inc
dec
mov
fcmovbe
add
scas
scas
adc
jbe
push
adc
adc
push
cmp
mov
cmp
sub
push
pop
shl
mov
xor
mov
pop
or
mov
icebp
loopne
adc
mov
jno
pop
hlt
xor
js
out
and
mov
sbbl
rorb
daa
cmp
add
and
sbb
call
scas
scas
xor
jle
loopne
mov
clc
jl
jecxz
rcrb
pop
fcmovnbe
mov
dec
cmp
dec
in
and
test
stos
les
sbb
pop
int3
arpl
hlt
ja
jmp
out
and
pusha
pop
or
stc
faddp
jecxz
subb
xchg
jl
jnp
pop
sahf
subb
sub
test
sbb
test
sbb
jo
or
mov
call
arpl
aaa
cmpsb
stos
sbb
and
mov
xchg
fsubrp
cmp
scas
jns
jne
psubsb
or
or
lahf
cltd
push
mov
cltd
mov
pop
push
jecxz
fisubrl
xchg
rcrb
or
lods
sbb
xor
jnp
hlt
adc
es
jne
mov
es
pop
or
sbb
jg
stos
outsl
in
xchg
push
inc
into
out
daa
xor
enter
repnz
adc
hlt
jnp
jge
loope
cmp
push
mov
data16
jle
xchg
add
lret
leave
movsb
outsb
movsl
fcoms
fistps
outsl
xor
dec
ds
in
mov
loope
in
sbb
mov
lahf
dec
enter
repnz
mov
cwtl
dec
sbb
mov
repnz
aaa
sbb
dec
imul
rcrl
cli
je
test
clc
mov
scas
lret
mov
repnz
xchg
lret
fisubl
cltd
outsl
lock
push
lock
dec
add
pop
xor
outsl
lds
rorb
cs
enter
and
movsb
mov
xchg
fwait
cmc
arpl
sbb
test
fcomp
aad
scas
mov
pop
add
adc
mov
sbb
sub
cmp
add
enter
dec
int
inc
in
xchg
lock
xchg
push
cmp
les
clc
and
inc
cmp
dec
fcompl
push
jecxz
push
out
js
mov
das
out
dec
test
outsb
daa
xchg
not
loope
xlat
notb
test
movsl
jnp
lahf
mov
dec
fs
dec
mov
or
int3
dec
xchg
lcall
mov
sbb
sub
cli
push
sbb
cs
test
sub
mov
lock
insl
xor
dec
cltd
cmc
sub
lods
cmp
orps
mov
jmp
push
pop
pop
addb
fistl
cmc
adc
jp
sub
or
jo
jnp
jecxz
test
inc
cltd
pop
inc
arpl
inc
push
lret
add
inc
sub
mov
sbb
aam
lock
lret
mov
jp
test
jle
jno
xchg
stc
push
call
mov
test
repnz
aas
pop
aam
xor
lods
sub
jmp
clc
xlat
pop
dec
sub
jae
cmp
pop
xor
mov
fistps
mov
inc
pop
ds
outsl
dec
mov
pop
push
push
daa
fiaddl
in
jg
push
adc
pop
out
cwtl
loope
cmp
ret
stc
in
pop
stos
xor
stos
std
adc
jb
xchg
push
jmp
jo
lea
push
dec
lock
and
xchg
lds
test
jne
cmpsl
dec
clc
lcall
iretw
inc
cmp
iret
jl
jo
fucom
mov
cmc
sbb
or
leave
jecxz
add
mov
pop
add
xchg
addr16
scas
mov
outsb
ljmp
sti
xor
mov
push
test
pop
jb
push
jb
mov
lcall
dec
andl
in
push
cmc
inc
cs
fcomi
mov
sbb
xor
rolb
outsl
jmp
adc
out
push
dec
pop
ds
nop
push
lock
mov
jae
int3
imul
jbe
or
jecxz
mov
loop
test
popf
xchg
mov
mov
mov
inc
mov
test
or
or
or
outsl
xor
lods
loopne
mov
xor
call
xor
mov
outsl
xchg
adc
dec
lret
mov
inc
push
adc
and
and
mov
loopne
dec
pop
ret
xchg
lea
jp
mov
push
repnz
outsl
test
mov
daa
mov
inc
popa
sahf
sbb
mov
into
iret
in
xchg
nop
testb
out
ljmp
addr16
adc
inc
pop
pusha
lahf
xchg
js
dec
xchg
dec
inc
push
loopne
insb
fimull
and
sbb
jg
jnp
jb
imul
out
out
cmp
fsts
adc
pop
loopne
jae
sub
xlat
and
mov
loop
daa
mov
adc
sub
lods
stc
jno
in
out
push
push
jmp
stc
pop
and
and
push
pop
imul
push
xchg
cmpsl
out
adc
mov
inc
gs
je
aaa
rorl
push
sti
jle
dec
pcmpeqw
mov
xchg
bound
mov
lret
test
jo
lret
pop
fisubl
push
in
mov
cli
xor
test
add
dec
cmp
sarb
lods
inc
xchg
test
or
sbb
sahf
cli
into
leave
mov
lods
jb
iret
fidivs
mov
mov
push
mov
cltd
lcall
sub
loope
fnstcw
in
and
jmp
xorb
sarb
mov
or
pusha
pop
ss
lods
int
xchg
push
pop
mov
mov
xchg
stos
into
mov
aaa
xchg
mov
int3
ja
and
imul
dec
aad
les
inc
in
adc
je
fstps
dec
ret
aaa
inc
sbb
xor
inc
xchg
aaa
sub
pop
push
push
ret
sbb
stos
sbb
pop
loop
ds
lret
sub
mov
inc
jl
loop
les
lret
out
in
sub
mov
mov
push
scas
les
and
pop
out
mov
dec
daa
pop
mov
or
push
fstpt
ljmp
lcall
sub
xlat
fadd
dec
xor
test
adc
mov
or
insb
adc
cmpsl
mov
dec
rcrb
inc
ret
faddl
mov
outsl
aam
push
imul
aam
cmpb
shll
cmp
scas
cmc
fiaddl
outsl
mov
cltd
adc
xchg
mov
mov
mov
dec
mov
and
sbb
push
divb
aad
xlat
push
mov
mov
and
jae
inc
shlb
neg
dec
push
cmp
daa
iret
out
push
scas
or
mov
movsb
mov
std
cmp
cmp
cmp
cmpl
sbb
cmpsl
xchg
enter
jge
cwtl
sbb
int3
rcll
xlat
ror
sbb
adc
jge
js
mov
jae
clc
aaa
inc
test
outsb
jge
lret
adc
icebp
fcoml
add
sub
idivb
lods
and
out
test
dec
lods
mov
scas
imul
and
imul
call
cwtl
ss
popa
movsb
push
sbb
jmp
pop
jmp
jg
inc
test
adc
mov
and
mov
mov
jno
loope
lret
cmpsl
pop
inc
scas
stc
test
mov
xchg
mov
cmp
loope
dec
enter
aad
cmp
mov
jbe
int
pop
xchg
ret
jg
xor
popf
xchg
jb
gs
add
rcl
aaa
in
push
push
push
adc
sbb
je
addr16
out
cwtl
in
mov
movsw
and
mov
push
xchg
cmp
xchg
sbb
or
mov
mov
push
iret
xor
roll
jge
in
mov
loope
inc
mov
xchg
fnstsw
nop
adc
mov
adc
pop
mov
rorb
cld
sbb
ret
or
xchg
dec
mov
outsb
xchg
out
xchg
xorl
dec
cmp
inc
xchg
or
inc
punpckhdq
jae
stos
xchg
filds
pop
mov
je
filds
sti
push
lcall
pop
mov
pop
leave
imul
mov
push
aaa
mov
icebp
and
or
xor
pop
ds
jne
or
and
loopne
cmp
and
jmp
or
test
or
in
dec
cwtl
adc
dec
shr
es
mov
cmpsl
movsb
jmp
or
pop
xchg
test
sahf
jbe
push
leave
lock
sahf
std
push
fwait
mov
loop
mov
js
push
popf
jno
ljmp
imul
jbe
xchg
int3
lcall
push
popa
fbstp
cmp
xchg
push
and
pop
insb
mov
mul
mov
out
daa
mov
mov
stc
adc
lds
arpl
into
mov
or
cmc
cmpsl
mov
adcl
cmc
cs
dec
xorb
xor
pop
xor
push
push
popf
ret
ret
sub
repnz
sti
les
lea
jle
mov
rorb
push
mov
sbb
inc
pop
pop
pop
cmpl
sub
fcompl
rclb
arpl
movb
cld
xchg
add
pop
xor
in
shrl
leave
hlt
repz
into
push
and
mov
pop
mov
iret
cmc
add
pop
int
movsl
inc
sbb
mov
cmp
stos
jg
in
and
inc
cld
lret
and
inc
push
iret
push
mov
mov
sbb
ss
pushf
push
mov
push
call
lock
iret
frstor
into
mov
test
imul
add
cld
jl
jmp
mov
xchg
jcxz
jmp
jp
sub
addl
or
sbb
xorb
mov
xor
lods
in
pop
inc
cltd
shl
mov
das
iret
nop
sbbl
popa
jae
je
add
cmp
cmp
into
sub
shll
push
adc
popf
pop
sbb
sub
loop
fwait
jbe
shll
dec
mov
testb
jmp
imul
inc
pop
fisttps
push
and
mov
in
xchg
outsb
icebp
pop
mov
add
imul
sahf
orl
test
inc
cltd
add
fwait
les
mov
xchg
cld
cmp
es
fisttpll
jge
lahf
xchg
add
fidivl
fmull
jae
aam
insb
and
lahf
adc
je
pop
xchg
bnd
test
cmp
bound
pop
imul
push
mov
sbb
jb
pushf
or
mov
stos
push
or
cltd
pushf
cli
sbb
clc
lret
popa
addr16
popa
push
fsubr
fs
cmp
stos
dec
mov
mov
push
out
and
inc
lret
jg
pop
gs
mov
mov
mov
push
xor
aam
hlt
add
sub
dec
dec
aas
test
stos
inc
aad
cmpsb
adc
into
jl
fists
scas
dec
xchg
test
sbb
ret
std
stos
mov
cmp
mov
jmp
cmp
bswap
flds
push
jb
pop
xchg
ret
push
xchg
lods
mov
in
dec
rolb
imul
prefetch
sbb
xchg
subb
mov
xor
and
outsb
sbb
leave
or
jg
sbb
loop,pt
pmaxub
push
ja
adc
sub
nop
insb
inc
test
dec
mov
mov
jmp
lahf
or
rorl
in
mov
pop
push
pop
add
faddp
and
lret
jle
daa
push
pop
ss
cmp
gs
mov
push
stos
and
mov
and
jmp
xchg
pop
xor
jne
inc
pop
xor
inc
out
enter
out
sarl
je
cmp
mov
popf
jb
mov
scas
clc
sub
cs
loopne
sbb
hlt
outsb
pop
or
test
or
daa
inc
adc
cs
mov
xchg
cmp
push
es
cltd
mov
mov
negl
adc
or
subb
fs
push
inc
pop
arpl
dec
lea
fistpl
pop
lret
add
cmp
xor
out
aas
es
adc
repz
loop
ds
sub
cmp
ss
int
and
int3
fwait
ret
lods
xor
lock
xchg
loope
jne
mov
sbb
ret
std
xchg
lret
addl
pop
imul
jmp
inc
dec
mov
push
dec
aas
jns
repz
ds
push
leave
mov
imul
xchg
xchg
arpl
and
pop
pusha
test
jae
push
mov
mov
fildll
stc
lea
mov
jg
push
insb
pop
ss
fucomi
loopne
into
xor
or
push
xor
adc
mov
dec
dec
test
jl
stos
xchg
pushf
fnsave
pusha
test
jecxz
sub
ljmp
jb
adc
bound
movsl
aas
and
adc
das
dec
popf
cmp
xor
test
sbb
push
imull
ljmp
dec
xorb
mov
pop
push
sub
cwtl
aam
adc
fstps
push
jmp
out
pop
pop
push
cltd
mov
sub
add
mov
jb
in
mov
pop
mov
cmc
or
stc
pushf
das
mov
pop
movsl
and
dec
test
pop
or
cmpl
les
pop
add
jo
mov
push
jnp
mov
stos
xchg
cmpb
movsl
sbb
sub
daa
or
insl
stc
lret
mov
cmp
adc
daa
or
lods
mov
mov
shll
cli
dec
or
roll
add
and
adcl
aam
fcmovb
xor
mov
outsl
clc
lds
xchg
dec
mov
mov
cmpsl
imul
popa
repz
mov
mov
aas
aam
inc
arpl
add
outsb
jp
or
outsb
shll
sub
pop
and
mov
lcall
pop
movsb
adc
dec
sbb
and
loop
pop
mov
js
movsl
sub
arpl
dec
sbb
jge
es
dec
adc
xor
daa
cmp
lret
or
fistpl
into
jmp
ljmp
push
test
and
ss
jp
xor
lahf
sub
in
clc
icebp
xor
aas
test
xchg
dec
mov
cltd
jns
xchg
adc
insl
push
jne
aam
out
orl
clc
push
jnp
mov
sbb
ss
ret
xor
ret
adc
es
roll
fcomps
xchg
rcrl
out
insl
testb
adc
or
sbb
xchg
int3
cmp
pushf
outsl
xchg
adc
shll
jp
ror
into
aas
iret
or
cld
jp
adc
adc
xlat
dec
xchg
inc
incb
mov
jno
shll
fldcw
mov
and
std
sbbl
mov
jne
fimull
lahf
add
cmpsb
mov
xchg
inc
fwait
sti
mov
and
popa
cltd
enter
es
lret
jns
jb
jp
repnz
clc
jle
out
add
subl
pop
rolb
sbb
test
cmc
adc
pop
pop
cmpsl
movsb
pop
mov
js
or
mov
sbb
cmp
xlat
mov
enter
js
mov
push
mov
inc
cmp
cmp
xor
scas
add
popa
lock
clc
or
ss
adc
jmp
fbld
lods
ds
mov
push
xor
mov
mov
icebp
int3
pop
or
add
inc
push
add
les
shrl
inc
push
ss
out
insl
out
out
shlb
dec
inc
out
fsubr
lds
or
out
jge
and
out
fwait
xchg
popa
testl
sbb
xor
pop
imul
int
fcmovne
movsl
xchg
dec
xchg
rorl
add
sahf
mov
int
push
cmc
in
fcmovnu
test
or
mov
inc
das
mov
push
pop
nop
push
mov
movsb
mov
xchg
daa
xor
mov
std
adc
sbb
and
dec
inc
jl
subl
xor
inc
imul
scas
aas
ret
divb
dec
mov
lcall
cmp
cmp
sti
imull
inc
pop
data16
mov
mov
adc
xchg
rorl
lock
rcl
loopne
test
inc
dec
imul
mov
jmp
stos
mov
xor
stos
mov
bound
mov
push
cs
imul
jns
out
nop
push
cmpsl
pop
lcall
xchg
int3
cmp
aam
cli
aam
push
lret
out
and
mov
jg
jno
sbb
jae
push
cmp
mull
test
mov
mov
inc
popa
adc
jne
fildl
or
or
push
push
add
fildl
test
iret
xor
hlt
out
adcb
sub
mov
inc
aas
jnp
jl
aas
inc
sti
push
and
sbb
push
iret
pop
xchg
xor
cmpsl
pop
jbe
scas
sub
dec
bound
sbb
cmpsb
stc
aam
ja
push
push
outsb
lods
sub
and
lea
int3
inc
mov
xor
call
and
shlb
xchg
pop
repnz
jns
pop
cli
push
js
hlt
mov
cmp
aam
dec
in
aad
lock
mov
inc
mov
out
add
mov
mov
subl
ja
cwtl
xchg
cmp
repz
js
fs
mov
out
mov
shlb
or
sub
les
fistl
int
mov
push
lret
inc
inc
mov
movsb
shll
add
lock
or
sub
fwait
es
mov
or
dec
cmpl
dec
adc
pop
fisttpll
ret
leave
das
mov
pop
push
add
jns
js
and
mov
addl
dec
std
cmp
leave
lods
mov
add
mov
jecxz
out
push
lret
dec
xor
imul
arpl
or
loope
idivb
out
xchg
fs
inc
and
fsts
test
pop
push
lods
out
dec
gs
in
lret
jmp
sbb
rcrb
jge
out
sti
shrl
push
mov
push
push
xchg
push
xor
in
dec
mov
cmp
sub
sbb
dec
daa
mov
aad
sarl
inc
mov
jg
out
imul
std
push
decb
xchg
and
loop
jnp
sub
daa
aam
stos
sbb
lea
dec
add
fs
inc
mov
sbb
aad
jae
inc
xor
int
dec
or
add
sbb
mov
out
fcmovnb
ror
mov
or
pop
inc
jne
rclb
sub
dec
lea
insl
xor
dec
cmpsb
out
loop
dec
in
stos
dec
bound
or
mov
add
mov
sahf
mov
and
mov
cmpsl
inc
jle
and
mov
mov
aaa
mov
fsts
sub
sub
int
pop
or
nop
lea
hlt
std
jne
mov
pop
fbstp
push
add
sub
sub
mov
mov
lods
mov
bswap
push
dec
jbe
dec
fidivrl
or
or
into
pop
jp
push
mov
fisttpll
mov
les
movsl
sbb
xorb
andl
icebp
lret
pop
mov
sarl
add
adc
mov
lock
pop
jp
scas
and
lods
mov
andb
inc
cld
jb
daa
daa
test
cltd
test
inc
adc
sub
add
cmp
cltd
fisttps
out
add
ja
mov
sub
in
mov
adc
rorl
xchg
and
xor
out
loopnew
ret
fwait
xchg
lahf
addr16
xchg
mov
mov
mov
add
jb
rcr
nop
push
push
mov
je
mov
adc
xchg
shl
lcall
insl
cmpsl
xchg
pop
scas
adc
push
in
das
decb
sub
or
dec
add
mov
ljmp
enter
dec
insb
clc
jbe
inc
pop
mov
lods
in
inc
shl
pop
dec
and
xor
outsb
icebp
push
fdivr
fsubs
add
inc
lea
andl
in
cmp
ljmp
cmp
daa
add
jle
scas
lods
adc
pop
cmp
ja
int
mov
sahf
cmpsl
loopne
hlt
fcompl
mov
cmpb
addr16
or
rclb
std
sub
inc
addb
daa
std
adc
cs
lahf
psrld
lahf
fs
shll
dec
in
xchg
mov
and
sbb
movsl
mov
repz
cwtl
fnstsw
fistps
push
and
adc
push
adc
scas
xor
mov
mov
pop
pop
sbb
outsb
lods
nop
cmpsl
push
pop
inc
notb
leave
in
add
pop
je
xchg
pop
cmpsl
stos
loopne
mov
xchg
sbb
jmp
stos
push
sbb
orb
jecxz
stc
sub
adc
jl
stos
fs
dec
cmp
gs
lahf
push
pop
daa
push
data16
fidivs
and
and
push
add
in
popf
mov
repz
pushf
add
test
sub
and
adc
sti
ljmp
xor
cmp
sub
ret
dec
int
fwait
pop
or
jo
xlat
shll
test
inc
rorb
aad
repnz
cmc
daa
jns
lret
jecxz
pop
mov
enter
imul
and
into
jecxz
or
leave
push
mov
mov
sahf
shll
je
popf
into
lock
xchg
fildll
dec
pushf
lods
addr16
call
fldcw
xchg
xchg
arpl
and
jbe
out
sbb
sub
scas
ret
out
sub
fwait
inc
ror
mov
loope
jns
ret
lea
std
add
icebp
push
mov
cmpsb
das
mov
dec
clc
add
push
xor
push
std
mov
jnp
pop
aam
inc
mov
std
jae
xchg
mov
shll
loop
sub
dec
or
mov
mov
int3
repnz
cmp
push
iret
fildll
adc
mov
pop
rcrb
adc
dec
pop
bound
or
or
dec
push
push
push
and
or
mov
mov
sub
orl
punpckhwd
xor
xchg
rep
imul
loop
push
xorl
loopne
stc
fmul
mov
cwtl
xchg
or
int
dec
xchg
std
in
xchg
arpl
js
stos
jno
mov
fs
daa
sub
popa
cltd
push
and
pop
pop
fdivrl
mov
push
popa
ret
pushf
pop
and
and
pop
jnp
cmp
icebp
push
pop
pop
int3
jle
in
orl
xor
aaa
adc
and
inc
pop
out
adc
int3
hlt
shrw
xchg
test
and
fxtract
add
fdivs
mov
jo
pop
adc
pop
push
mov
addr16
scas
jle
lock
mov
mov
or
mov
stos
lds
lahf
cwtl
movsl
push
mov
add
and
or
shll
xchg
mov
dec
xor
loop
mov
push
or
jecxz
loop
mov
cmp
xchg
xchg
xchg
add
sbb
arpl
push
jecxz
mov
jecxz
push
insb
hlt
aam
xchg
in
inc
or
gs
call
xor
scas
shrb
gs
inc
sub
imul
lret
hlt
in
mov
mov
out
xchg
ljmp
adc
push
enter
sub
roll
mov
incb
adc
shll
sub
aas
jp
fcoml
imul
mov
or
add
pop
fiadds
cmp
jno
ss
test
mov
cmp
sub
mov
inc
pop
stc
lahf
mov
lds
sbb
movsl
hlt
inc
jno
mov
mov
std
arpl
sub
and
xor
repnz
fsubs
out
adc
jbe
lret
mov
adc
push
out
pop
or
mov
idiv
add
mov
pusha
movsb
and
orb
mov
add
repnz
xlat
pop
cmpl
pop
mov
cmp
dec
ficoms
hlt
into
add
xor
sub
mov
jl
xchg
add
cmp
cmpsl
jl
loopne
fiaddl
xchg
outsl
outsl
sbb
cld
xor
int
lods
fsubp
mov
or
mov
imul
lret
mov
sbb
les
pop
inc
int
mov
imul
lret
adc
ret
arpl
jnp
ljmp
or
mov
test
and
xor
cld
sbb
pusha
adc
cs
sub
ljmp
sahf
pop
cltd
jns
insb
add
push
push
js
inc
push
jl
int
xchg
push
push
dec
in
and
nop
pavgb
or
out
lret
push
mov
inc
push
mov
test
stos
inc
sbb
out
ret
dec
lods
xchg
inc
xlat
jae
xchg
movsb
and
out
ret
in
lds
mov
push
mov
test
int
add
pop
adc
shll
test
xchg
xchg
fmull
xchg
adc
in
mov
push
outsl
jle
cmpsb
xchg
std
daa
iret
cwtl
cmpl
nop
mov
cmpsb
pop
fidivrl
add
add
xor
dec
cmp
adcb
push
test
mov
shrb
sub
es
lds
les
mov
mov
inc
sbb
lods
xchg
or
pop
push
aaa
das
cmc
lahf
cmpsl
xchg
mov
sahf
inc
jmp
xchg
repz
call
repz
ret
ror
mov
jg
es
jecxz
mov
inc
fsts
cmp
adc
dec
push
sbb
sbb
adc
je
jae
imul
imul
pusha
cmp
pop
jl,pn
std
mov
ds
pop
lods
test
data16
adc
cmp
push
out
jns
call
ja
dec
imul
divl
pushf
jns
xlat
jnp
vmovlhps
or
xchg
rolb
adc
pop
les
jo
inc
cld
aam
enter
mov
orb
cmp
aam
jmp
loop
cmp
sti
insb
pop
cmp
inc
ja
pop
enter
and
xor
push
in
jbe
pop
cmp
ds
sub
aas
cwtl
xchg
dec
int3
xor
nop
sahf
mov
arpl
mov
subps
std
mov
repnz
and
mov
cmp
shll
add
cli
popf
mov
jle
jb
in
std
sbb
fwait
and
insb
jge
xchg
cmp
mov
ljmp
mov
mov
test
push
mov
jl
inc
fsubs
shl
pop
add
insb
sbb
mov
mov
add
and
mov
lcall
jg
jae
in
dec
test
mov
mov
cmc
add
xchg
lret
cmp
imul
push
dec
aas
incb
mov
cmp
imul
fisubs
sti
push
xchg
rol
xchg
mov
sbb
pop
lahf
sti
sbb
jnp
imul
in
pop
mov
add
mov
aam
mov
das
inc
add
inc
clc
sbb
fnstcw
clc
cmc
insb
and
jg
and
adc
xchg
call
movsl
ss
test
insb
sbb
xchg
push
divl
inc
jbe
mov
arpl
lea
jg
shl
roll
mov
xchg
adc
jp
gs
andb
mov
mov
sub
jmp
outsl
dec
out
cwtl
movsb
dec
mov
ja
xor
fs
jns
dec
leave
mov
rorl
jl
out
mul
into
shlb
jne
stos
sahf
bound
mov
insb
scas
push
leave
inc
mov
jle
jp
loop
loopne
ljmp
jns
ficomps
sahf
leave
jb
lock
lock
out
adc
pop
mov
or
cltd
xchg
xchg
or
pop
push
mov
shl
lds
or
or
mov
mov
cli
mov
cmc
and
fmul
fisttps
mov
push
repnz
fbld
mov
mov
mov
int
xchg
jbe
push
xchg
and
mov
test
sahf
fwait
inc
mov
jecxz
ja
xor
dec
pop
adc
bound
mov
add
xchg
cmp
or
fxch
jecxz
pop
sub
outsb
jnp
int3
dec
into
call
cmc
dec
fldl
pop
mov
es
dec
cwtl
add
leave
add
push
xor
movsl
sub
clc
cmp
sbbb
fnstcw
leave
stos
insb
shl
rcl
lock
fisttpll
push
inc
stc
loopne
popa
sbb
pop
cltd
jo
les
ss
mov
sbb
mov
lea
data16
mov
sub
shll
pop
sub
rol
fmuls
xor
dec
xchg
inc
xor
out
neg
jno
dec
lret
cwtl
add
cmp
movsl
call
push
rorb
pushf
or
in
mov
or
aad
rorb
out
repnz
jo
add
cmpsb
sub
nop
dec
lds
jnp
mov
bound
push
fadd
sahf
sbb
aad
push
pop
shlb
xchg
jl
aas
insl
aad
jge
fistpl
jp
sub
ffree
ja
mov
xchg
or
add
push
cmp
mov
mov
sub
xor
popa
sub
pop
out
xchg
adc
mov
test
dec
jne
negl
sbb
mov
mov
dec
test
push
sbb
popa
cmp
mov
test
xchg
mov
and
movsb
and
sub
shl
cmc
xor
dec
shll
jmp
test
scas
sub
mov
dec
xlat
push
jecxz
insb
jg
cmpsb
mov
test
sbb
sbb
mov
and
out
test
dec
ss
cmp
ss
scas
movsb
lods
out
lea
push
cmp
fstps
xor
sbb
and
lea
dec
stos
daa
push
outsb
clc
sbb
hlt
or
rolb
lret
mov
sub
mov
cwtl
lods
es
mov
push
pop
fs
xor
xor
loope
dec
sub
inc
fdivl
dec
push
xchg
bound
jle
arpl
cwtl
dec
or
xor
xor
cmp
xchg
scas
insb
lock
mov
nop
mov
sub
lods
movsb
mov
push
cmp
mov
fstps
sbb
popf
out
ss
pop
sti
inc
into
push
xchg
pop
and
jmp
add
adc
inc
test
sbb
inc
ficompl
repnz
lret
xchg
outsb
dec
mov
and
hlt
mov
sub
or
inc
sub
in
and
mov
cwtl
test
and
mov
ret
jo
xchg
shrl
dec
xchg
jo
testl
inc
mov
loopne
sbbl
pop
xlat
jmp
mull
dec
jl
inc
pop
sbb
scas
out
mulb
mov
mov
or
mov
and
test
jmp
cmp
dec
push
rolb
xor
cs
dec
ficomps
in
out
jg
jg
loopne
cmp
mov
and
push
ss
mov
dec
jns
push
out
xchg
nop
inc
cltd
dec
adc
das
cwtl
mov
mov
incl
push
jb
sbb
cmp
daa
add
push
les
out
jl
iret
jl
mov
int
outsl
add
inc
mov
push
pop
int3
cmpsb
adc
hlt
lea
mov
jno
out
xchg
nop
mov
scas
xchg
push
push
adc
or
sub
insl
icebp
movsb
lcall
aam
enter
xchg
xlat
sub
xor
add
and
sub
cs
push
clc
jp
mov
notl
scas
pop
arpl
jo
imul
mov
pop
std
filds
ja
jb
stc
jge
addr16
repz
mov
cmp
insb
fcmovne
push
movsl
lcall
sbbl
or
fcoml
jl
ret
repnz
fidivrs
xlat
sub
cmp
mov
out
sbb
mov
int3
cmpsl
iret
mov
hlt
push
push
lea
mov
leave
test
dec
jnp
jns
into
push
push
push
dec
imul
imul
popf
sbb
aaa
in
push
movsbl
xorl
dec
into
icebp
outsb
ja
mov
push
cmpb
rclb
and
adc
dec
adc
scas
mov
mov
dec
mov
std
shrb
shlb
xchg
data16
xor
push
pop
nop
iret
push
jno
inc
cli
xor
fisubs
inc
sbb
nopl
jle
and
out
lret
push
and
fdivs
and
in
pop
in
adc
in
and
into
scas
addr16
stos
loop
adc
mov
dec
fldl2e
das
mov
data16
aaa
xor
xor
popa
popa
add
jp
mov
in
xor
and
test
xchg
or
push
add
fdivl
jle
ljmp
adc
adcl
out
and
shl
push
push
mov
nop
pop
cld
fnstsw
fucomp
adc
add
orl
mov
cmpsl
jmp
or
dec
and
inc
add
xchg
mov
or
xor
dec
xchg
jl
fwait
cmp
or
shlb
or
sub
pop
outsb
add
dec
sbb
cmp
scas
das
gs
mov
xchg
dec
insl
test
outsb
out
in
into
jae
sub
xchg
andb
mov
xchg
jmp
mov
jb
push
push
push
inc
test
xchg
jbe
adc
loopne
fwait
sbb
pop
push
outsb
iret
iret
push
in
movsb
cmc
imul
test
jno
aad
sub
frstor
mov
mov
or
jo
int
dec
dec
xchg
aad
or
icebp
push
xchg
test
hlt
sti
rorl
push
filds
and
shr
ss
cmpsl
push
gs
nop
mov
in
add
outsb
adcb
or
std
test
jb
data16
mov
pop
aas
rcll
inc
sarb
or
les
std
and
adc
loop
unpcklps
popa
sbb
mov
jl
aas
cmpsl
movsl
add
sti
push
aaa
sbb
movsl
sbb
sub
add
outsb
pop
push
xchg
xor
mov
jo
lcall
mov
dec
mov
repz
jecxz
clc
push
pop
and
mov
mov
es
popf
ja
xlat
mov
dec
iret
aas
mov
mov
adc
imul
adc
sub
cmpsb
mov
dec
add
lods
push
sub
push
sti
push
pop
hlt
sti
dec
lret
inc
movsl
dec
je
cld
cmp
dec
jecxz
push
pusha
roll
sti
jmp
jecxz
add
jns
or
mov
push
out
iret
mov
rcrb
out
inc
daa
hlt
pop
mov
je
cmp
pop
xchg
lret
outsb
cwtl
inc
xchg
sub
outsb
or
jbe
call
bnd
stc
cmp
and
stos
xchg
loope,pt
push
nop
jle
inc
mov
fstps
addr16
out
insl
ret
ss
mov
push
xchg
jne
outsl
push
xchg
lcall
adc
jnp
scas
xor
push
fnsave
out
sub
insl
xor
add
test
and
and
dec
jb
call
fsts
jg
push
loope
and
orb
cmp
addr16
adc
daa
push
mov
hlt
xor
mov
fistpll
add
imul
sarb
vprotw
fcoms
leave
dec
cmp
pop
test
idivb
jle
jle
fistpll
shlb
mov
cld
sub
int
mov
cmp
rolb
ss
and
xchg
aam
pop
aas
inc
lcall
mov
adc
xor
mov
insb
jne
add
pusha
testb
sbb
fdivl
push
push
xchg
lds
stos
jns
cmp
and
jo
mov
arpl
xor
fildl
pop
xor
hlt
sub
in
lcall
in
dec
mov
push
xor
sbb
xchg
inc
mov
xchg
cmpsl
in
mov
call
jnp
test
add
pushf
inc
lods
out
sbb
pop
in
cs
rcl
adcb
les
insl
and
popa
ret
leave
js
lds
mov
movb
iret
pop
gs
lea
ljmp
or
cs
and
movsl
inc
mov
cmpsb
cmpsb
xchg
xchg
inc
int
lea
add
in
pop
das
push
pop
adc
xchg
pop
call
and
mov
icebp
iret
je
fdiv
cli
loope
add
nop
sub
ljmp
aaa
sub
out
mov
sbb
and
mov
stos
fsubp
sti
and
add
jmp
and
adc
xor
mov
test
add
stc
push
out
dec
imul
mov
inc
lods
cmpsl
mov
push
sbb
stos
cmpl
mov
adc
aad
add
fisubrl
add
cmp
mov
cmp
xor
and
sbb
fiaddl
dec
cli
loope
mov
cmp
pop
jecxz
gs
fs
push
lds
or
cmp
aaa
gs
push
or
push
lock
shrl
out
movsl
cmpsb
push
jge
std
xchg
fnstenv
and
or
fadd
mov
test
add
xorl
mov
jns
call
pop
cmp
xor
ds
add
aad
lcall
pop
stos
cmp
ds
or
jns
push
shr
es
lcall
jg
into
les
lahf
cwtl
test
mov
adc
adc
and
mov
adc
jno
mov
out
mov
shll
leave
and
xchg
in
mov
repz
cld
sub
add
ljmp
lahf
push
sahf
push
inc
sub
mov
mov
inc
lahf
dec
sbb
repnz
cmpl
pusha
pop
pop
or
lods
jbe
nop
mov
imul
cmp
jo
push
outsb
ret
fs
shl
sbb
popa
outsl
and
jg
add
cmpsl
cmpsb
scas
mov
xor
push
nop
movsl
loop
pusha
xor
lret
adc
outsb
call
ja
pop
xchg
push
mov
mov
mov
test
cld
jno
popf
jl
test
hlt
push
xchg
mov
mov
add
insl
add
aad
test
scas
lock
xor
test
push
inc
sbb
ds
or
inc
jecxz
inc
les
out
ja
mov
add
in
jns
xchg
pushf
cmpsb
mov
or
arpl
pop
daa
mov
imul
push
jge
repz
sub
mov
adc
adc
popa
out
iret
je
mov
cli
fisubrs
or
ja
or
and
sub
pop
adc
and
push
mov
enter
loope
ss
jns
cltd
adc
shr
add
out
out
cwtl
cwtl
ss
repz
or
mov
cmc
stos
bound
pusha
daa
rcrl
aaa
pop
mov
xorl
ret
cmpsl
cmpsb
add
cmp
and
push
sbb
repnz
scas
pop
cmpl
mov
or
cld
cmp
sub
push
outsb
test
in
pop
call
imul
rcr
je
bound
lahf
scas
adc
xchg
rolb
pop
and
dec
adc
cmc
pop
inc
out
out
push
xor
mov
outsl
or
jae
add
shll
aas
push
jp
call
dec
cltd
rcll
xor
jne
cmp
jmp
mov
daa
or
or
fildl
inc
into
aas
sub
leave
lret
add
ficompl
lods
mov
cli
add
xchg
cmp
popf
fisubl
cmpsl
ret
sbb
enter
fstp
rol
ljmp
add
imul
sub
cwtl
loopne
testl
je
inc
push
sub
pop
pop
xchg
mov
cmp
das
pop
ja
mov
dec
aaa
ss
cmp
dec
mov
push
fcompl
dec
inc
lea
xor
mov
fmuls
mov
pop
mov
popa
pop
cli
ficomps
imul
jae
adc
out
imul
pop
cmp
sub
add
pusha
dec
mov
pop
inc
sub
test
std
fcomps
dec
int3
cmpsl
adc
int3
bound
and
and
nop
popf
rclb
jns
movsl
push
mov
xchg
fdivrl
jne
sti
les
sub
push
adc
imul
jo
subl
sub
addr16
jne
and
into
fcomp
push
fwait
push
push
jge
mov
add
or
jg
ret
pushf
jns
dec
sbb
mov
or
cli
jmp
mov
faddp
jp
imul
icebp
mov
push
dec
push
ds
or
sbb
inc
jb
mov
mov
call
or
pop
aas
mov
mov
ds
adc
mov
push
cmp
clc
inc
mov
adc
ror
jge
lock
ds
cmpsb
inc
repz
outsl
or
mov
aad
dec
jae
inc
mov
pusha
pop
jecxz
mov
inc
out
nop
call
push
jbe
jl
cmpsl
dec
dec
add
and
dec
pop
add
cld
sbb
jp
sbb
dec
inc
stc
mov
add
lret
or
lea
and
mov
and
rorl
xchg
test
mov
pop
mov
imul
adc
pop
inc
arpl
or
mov
mov
inc
sub
add
in
pop
sti
fs
fldcw
mov
add
stc
fistps
scas
sub
xor
pushl
adc
and
xchg
push
test
xor
sbbb
mov
xorb
out
pop
lea
dec
fisubl
daa
call
xlat
cmpsb
mov
or
pop
cmc
mov
repnz
imulb
adc
mov
cwtl
repz
pop
mov
movsb
mov
jge
mov
iret
addl
cltd
aas
mov
add
jmp
mov
dec
nop
insl
xchg
test
test
ss
fcoms
popf
push
mov
dec
ret
jg
loop
jmp
mov
add
mov
and
in
mov
push
push
addr16
add
mov
pop
xor
dec
aaa
ss
xchg
add
aas
add
jno
dec
popa
je
and
fisubrl
inc
mov
aam
int3
cmpsb
clc
lret
mov
call
popf
mov
dec
pop
ljmp
pop
jae
addr16
mov
adcb
jge
or
sbb
xorl
dec
shll
mov
repnz
imul
pop
xor
xlat
jmp
adc
sbb
js
and
cmp
mov
sub
lds
test
push
jecxz
xchg
add
mov
sbb
cli
pop
mov
inc
rcrb
adc
add
rcrb
ds
push
das
push
outsl
cmp
aas
mov
sbb
into
adc
call
lods
in
or
add
aam
cli
mov
push
or
or
dec
js
push
xlat
sysexit
or
jns
mov
shr
push
aam
xchg
push
popf
aam
cmp
shlb
int
in
in
leave
jle
les
and
je
lea
outsl
mov
scas
arpl
xorl
cmpsb
fs
mov
sub
mov
mov
mov
xor
jecxz
in
sarb
cld
mov
xchg
cltd
mov
vpackssdw
arpl
stos
enter
test
adc
sub
call
xchg
mov
mov
nop
mov
aam
mov
lea
adc
pop
mov
in
loope
push
stc
sbb
push
dec
push
cmpsb
mov
es
dec
clc
idivb
adcl
pop
mov
dec
out
addr16
gs
mov
ret
adc
mov
lods
cmp
sub
mov
icebp
insb
subb
lret
xchg
dec
scas
scas
mov
out
inc
lahf
inc
cwtl
push
push
adc
scas
mov
jno
shl
stos
xchg
test
sub
mov
inc
nop
out
loope
icebp
mov
mov
ljmp
pop
and
push
loop
rolb
icebp
jle
sub
jl
xchg
jno
xlat
dec
sahf
cmpsl
fdivs
add
add
mov
or
lds
sub
std
inc
jg
sub
mov
dec
push
xor
lods
push
repnz
out
mov
push
or
mov
jecxz
sti
testl
fwait
and
pop
xchg
int
clc
shll
in
dec
lea
xchg
aad
mov
xchg
repz
loopne
out
pop
and
pop
add
sbb
es
xchg
jo
jae
sbb
clc
sbbb
and
lret
fdivrl
jmp
fnstcw
pop
push
or
jns
idivb
int
sub
out
xchg
or
aas
js
test
ret
hlt
cmpsb
in
bnd
push
cmpsb
test
pop
adc
out
pop
sbb
jb
mov
aad
sbb
stc
add
stos
push
mov
sbb
aas
lods
dec
test
cmpsl
icebp
cmpl
pop
ss
or
aad
scas
pop
dec
push
insl
cmpl
mov
in
or
and
negb
shll
mov
jmp
cli
imul
int3
inc
mov
pop
jmp
or
lahf
xor
cmpsb
pusha
push
insl
pop
loope
icebp
rclb
sub
or
xchg
testl
es
or
mov
push
cmp
pop
sbb
pop
mov
mov
inc
xchg
int3
pop
loop
mov
pop
dec
add
mov
mov
sbb
add
jle
lea
lahf
jbe
das
sbb
dec
or
iret
xor
mov
adc
js
scas
shl
sbb
add
int3
iret
adc
push
repz
mov
addr16
mov
outsb
enter
mov
push
cwtl
std
sub
idivb
mov
das
jecxz
sub
lahf
jno
add
in
mov
sarl
push
cmp
jbe
imull
mov
test
popa
pop
mov
sbb
aas
sub
mov
mov
test
clc
xchg
loop
repz
mov
inc
fnsave
lea
adcl
lcall
sahf
shlb
shl
nop
or
fstpt
out
rclb
adc
cld
dec
adc
hlt
data16
dec
inc
jge
xor
mov
frstor
scas
mov
fimuls
cmpsl
jl
sbb
push
xchg
mov
pop
lods
lea
int3
imul
push
arpl
mov
sbb
fistpll
jns
sub
arpl
dec
repnz
movsl
aaa
and
aam
xor
rcrb
dec
ljmp
pop
call
jae
jns
lret
mov
lock
push
icebp
out
lcall
sbb
push
stos
dec
shlb
cmp
add
fwait
jb
mov
faddl
pop
xchg
loope
in
mov
xor
imul
pop
fcoml
inc
rcll
scas
xchg
add
or
ret
sub
jl
cmpsb
mov
push
test
mov
jmp
test
data16
sbb
stos
stos
and
bound
adcb
mov
lcall
mov
mov
add
pop
pop
jge
aad
call
out
xor
mov
aaa
das
pop
inc
data16
jnp
lret
xchg
loope
jb
loopne
sarl
mov
mov
repnz
dec
xchg
xchg
call
jl
jg
js
adcb
mov
add
es
out
push
ljmp
or
cmp
movsl
push
cwtl
rcr
ss
mov
or
push
sbb
sbb
js
pop
mov
cmp
aaa
inc
mov
mov
dec
or
push
push
fldenv
es
mov
call
data16
and
xchg
or
arpl
mov
mov
or
mov
mov
js
adc
out
iret
mov
xor
xchg
rclb
dec
sub
and
and
insb
push
sarl
fldenv
push
inc
addl
jl
xchg
xchg
mov
push
mov
mov
rorb
hlt
xchg
pop
jo
ror
daa
dec
ss
hlt
jge
cwtl
xor
pop
pusha
mov
or
js
jb
out
loop
jne
dec
push
nop
ljmp
pop
push
adc
jbe
mov
aas
lcall
jmp
mov
pop
xor
aas
out
scas
rcrb
mov
or
cmpsb
imul
sbb
sahf
into
jne
pop
repnz
js
sub
cmp
add
adc
lds
cld
mov
dec
das
shlb
pop
stos
fsubrs
imul
adc
mov
and
sub
jne
stc
mov
fst
push
and
dec
notb
inc
call
loop
repz
mov
push
xorb
or
arpl
in
test
xchg
push
jge
pop
loop
mov
jge
mov
sbb
dec
xchg
mov
sbb
push
xchg
cmp
adc
into
pop
je
subb
inc
movsb
fs
sbb
sahf
mov
fwait
pop
lret
rol
mov
inc
js
sbb
xlat
mov
cmp
scas
inc
dec
fisttps
arpl
fdivl
dec
shl
out
std
test
fstl
sub
lcall
add
mov
push
les
incb
lock
icebp
pop
out
push
test
cs
hlt
clc
jle
je
bound
fs
cmp
xchg
jno
lret
pop
shl
into
inc
sti
push
orb
mov
in
adc
xor
mov
mov
lock
cmp
sub
sbb
jns
mov
jecxz
push
sub
hlt
fnstcw
lret
stos
cwtl
in
push
shrl
mulb
sub
mov
call
lcall
inc
dec
or
fwait
adc
testl
loop
xor
jecxz
popf
push
pop
test
scas
aam
or
cltd
xchg
xchg
or
pop
mov
or
pop
mov
jo
sbb
xlat
das
mov
popa
ret
mov
movsl
xchg
push
pop
add
pop
inc
arpl
dec
jg
in
mov
xor
jle
in
incl
xchg
ret
incb
xchg
lods
out
lods
sub
or
loopne
outsb
lea
sbb
pop
ror
adc
not
jns
imul
dec
scas
push
aas
inc
push
and
sub
iret
fcompl
popa
std
xor
loopne
mov
xchg
xchg
dec
jbe
iret
sub
mov
xchg
popf
adcb
adc
cwtl
dec
sti
jno
xchg
xchg
testb
inc
pop
add
push
arpl
loopne
popa
dec
idivl
shrb
fs
sbb
xor
mov
sbbb
inc
fwait
cmp
mov
test
push
sbb
movsb
bound
jo
mov
notb
insb
popf
xchg
cmp
dec
nop
stc
ss
push
and
jb
inc
ret
and
fs
repnz
inc
sbbl
sahf
scas
hlt
ss
pop
ret
rcl
cmc
sub
mov
cmp
inc
jge
sbb
pop
shl
sbb
or
jno
loopne
mov
je
jle
mov
mov
shll
and
push
xchg
xchg
js
sbb
push
enter
repnz
and
and
out
repnz
xor
clc
xorl
or
fldt
pop
pop
gs
sub
sti
jge
nop
shl
lds
inc
movsl
and
xchg
pop
pop
cmp
loope
adc
push
inc
out
cmpsl
sub
shll
push
pop
shlb
adc
imul
iret
mov
xchg
rcrb
mul
xor
push
gs
or
lods
andl
addr16
call
push
mov
pushf
clc
adc
ret
andb
fisubl
push
mov
divb
faddp
mov
dec
jbe
jnp
ja
dec
mov
xlat
add
xor
jno
adc
outsl
imul
push
test
mov
push
std
mov
or
and
cmp
subb
sub
dec
in
pushf
scas
inc
mov
lcall
add
leave
xor
or
sub
aas
outsb
das
cs
adc
sub
test
mov
cmp
insb
mov
mov
pop
adc
js
fwait
fwait
mov
push
mov
fs
push
cmc
pop
lret
push
lods
loop
xchg
mov
push
les
mov
adc
adcb
aam
sbb
leave
ljmp
mov
lret
add
lds
jb
hlt
jecxz
int
iret
data16
mov
mov
mov
push
orl
pop
mov
lret
roll
into
movsb
pop
test
mov
popaw
push
in
sub
dec
jg
sbb
lret
push
out
es
popa
pop
inc
cmc
mov
push
fsub
mov
lahf
push
push
ret
andb
mov
mov
pop
pop
repnz
sbb
arpl
add
addr16
lock
xchg
pop
daa
in
imul
push
insl
mov
pushf
pop
cmpsl
test
add
stc
fstps
push
inc
fdivrl
cmpsl
mov
frstor
push
cmc
add
lret
repnz
je
insl
inc
dec
pop
iret
pop
jmp
test
and
ja
aad
divl
add
or
push
imul
xchg
mov
add
or
mov
mov
fnstenv
cmp
jo
sbb
xchg
lods
gs
pusha
sbb
in
outsl
dec
popf
xchg
fidivl
orl
mov
adc
push
jle
xor
adc
adc
ficoms
pop
inc
lcall
adc
mov
or
movsl
inc
ds
scas
mov
ja
cmp
push
cmc
mov
or
mov
push
pop
jo
sbb
fwait
scas
push
aas
cmpsl
mov
in
xchg
ljmp
xlat
sahf
scas
adcb
inc
aad
lea
sbb
mov
leave
adc
inc
fdivs
jmp
xor
mov
xchg
xchg
mov
ljmp
push
push
sub
std
and
or
fiaddl
sub
dec
outsb
sub
lods
push
jae
mov
std
xor
lret
out
movsl
outsl
adc
and
and
cmpsl
xchg
push
jecxz
xchg
sub
inc
pop
sub
jmp
andl
mov
push
add
ficomps
mov
sub
sbb
sub
mov
xor
inc
xorb
adc
push
mov
dec
iret
aad
call
lret
mov
imul
lahf
imul
xchg
or
push
jp
ja
mull
je
retw
out
and
dec
hlt
cmpsl
mov
xor
dec
fwait
addr16
pushf
xchg
jl
cmp
sbb
decb
jo
mov
sti
mov
jns
loopne
add
sbb
aad
push
aaa
jg
dec
push
lods
mov
add
sbb
or
cmpsl
movsl
pop
icebp
mov
ja
cltd
sbb
icebp
sub
in
scas
adc
scas
push
or
adc
jecxz
cld
lret
into
shlw
inc
pop
adc
xchg
sahf
sbb
pop
out
dec
ret
ljmp
xchg
arpl
ljmp
jb
sahf
cwtl
nop
lods
xorb
pavgb
mov
sub
add
push
jge
jo
out
push
roll
addr16
por
push
loope
fsubl
and
cld
xchg
jecxz
sti
push
sub
outsl
dec
sbb
or
pop
cwtl
call
mov
daa
lret
lret
sbb
icebp
xchg
sub
or
push
pop
mov
test
stc
jl
pusha
xchg
mov
sbb
aad
mull
lds
xchg
push
pop
mov
add
out
push
in
ljmp
loop
jl
mov
js
pop
push
xlat
ret
fcoms
xchg
sub
repnz
pop
mov
jmp
enter
mov
arpl
pmuludq
setl
or
xor
mov
out
movsl
sbb
xor
dec
adc
outsl
inc
lds
and
sub
das
aaa
pop
loopne
pop
fimuls
jbe
les
divl
decb
push
push
push
xchg
cltd
in
cmpb
adc
sahf
loop
jle
jne
cmpsb
loop
dec
jb
rorb
testb
jnp
insl
jb
test
jae
nop
jp
ret
lahf
jle
in
lret
push
add
xchg
jg
imulb
mov
scas
jp
cmp
nop
sbbb
xchg
cmp
push
and
repnz
iret
mov
aaa
cmp
xchg
mov
inc
push
cmpsb
dec
jbe
int3
fsubrl
mov
rorb
jl
jmp
mov
sbb
mov
shl
inc
insb
mov
jo
xchg
outsl
stc
paddq
ficompl
xor
jns
aam
loop
outsl
mov
ljmp
mov
mov
ret
arpl
pusha
fdivrp
dec
cld
pushf
dec
loopne
mov
mov
sbb
xor
orl
cwtl
scas
repnz
cmp
lods
jg
sti
adc
clc
mov
imul
add
out
xchg
cmp
cmpb
pop
call
loop
cld
pop
push
cmpl
iret
in
xchg
sub
lds
pop
idivl
pop
mov
cltd
adc
xlat
mov
scas
jnp
inc
cmovae
stos
leave
inc
sub
mov
mov
or
lcall
rorl
add
adc
jmp
xor
daa
push
push
mov
or
mov
jg
in
mov
mov
cmp
je
fst
xor
fucomip
push
lds
cmc
imul
pop
mov
pop
negl
lods
clc
hlt
push
xor
jo
mov
or
or
dec
adc
imul
push
lret
aad
aad
ret
push
jne
adc
mov
arpl
fldt
xchg
mov
cs
sbb
int
ret
jb
dec
cli
pop
xor
cmpsl
insl
push
mov
dec
adcb
stc
cmp
mov
xchg
fsubrs
std
jae
and
cld
inc
xchg
leave
pop
inc
cmp
jl
pop
pop
mov
aad
lds
outsl
jle
orb
push
ret
or
pusha
testl
mov
inc
mov
jge
mov
jg
mov
xlat
or
pusha
mov
decl
mov
add
push
inc
cmp
mov
cmp
scas
enter
pop
sahf
sub
pop
jmp
pop
jns
cld
aaa
mov
jle
push
xchg
xor
inc
lret
inc
int3
rorb
scas
rclb
pusha
mov
js
mov
mov
lds
scas
jb
aam
jnp
hlt
clc
repnz
pushf
xor
lret
push
jge
inc
into
in
xor
inc
mov
adc
inc
dec
imul
aas
js
cwtl
mov
mov
adc
dec
pop
dec
or
xchg
inc
push
mov
mov
jmp
shl
and
xor
lods
add
movsl
adc
cmp
add
dec
adc
orb
xchg
outsl
loopne
test
out
hlt
bound
in
cmp
sahf
pop
mov
pop
jb,pn
ljmp
in
lcall
sub
das
push
test
adc
xchg
cwtl
xchg
sub
popl
movl
xor
jns
scas
mov
and
xor
aaa
cmp
scas
pop
arpl
jp
fs
test
push
fs
fdivrs
pop
jecxz
lret
imulb
fadd
xor
arpl
ret
out
mov
bound
mov
fwait
dec
fcoms
cmpsb
les
addb
sbb
mov
test
aas
xchg
xlat
mov
adc
out
pop
pop
in
jl
jp
leave
arpl
jo
repz
jbe
stos
sub
cmp
sub
push
xchg
movsb
rorl
add
and
pop
lds
rcr
aaa
les
pop
movsl
push
push
pop
inc
test
and
or
push
ljmp
mov
xchg
loopne
popf
xor
cli
xor
inc
test
xchg
inc
cs
pop
lock
jl
push
push
xor
xor
sahf
shlb
inc
repnz
mov
pop
dec
jge
jmp
dec
iret
lods
sti
out
add
cmp
int3
cmp
or
xor
sub
xchg
pop
jnp
xor
inc
pusha
stc
dec
clc
or
bound
scas
ret
sahf
mov
mov
incb
int3
push
and
rol
cltd
push
es
mov
dec
sbb
fisttps
sbb
fcomps
pushf
sahf
xchg
test
adc
inc
pop
out
lods
outsl
jne
into
cld
add
test
sarl
or
insl
jne
sub
fisubl
mov
mov
out
lea
idivb
sub
clc
add
push
xchg
imull
sub
mov
mov
int
hlt
push
sub
inc
aam
adc
popa
movsb
pusha
lret
jnp
xchg
xchg
leave
call
pop
sti
adc
sub
sub
add
lcall
inc
or
fld
data16
jb
frstor
or
pop
cmp
or
enter
sbb
cmp
xor
jg
or
cmp
dec
rclb
clc
stc
mov
mov
leave
lds
fstpl
adc
insb
clc
jno
pop
mulb
sub
xor
dec
dec
push
adc
sbb
shrl
mov
add
arpl
repz
clc
das
jb
dec
fwait
mov
int
jb
ja
sub
in
xchg
push
lea
in
ds
mov
es
xchg
int3
jae
mov
cmc
mov
mov
and
jecxz
aaa
cmc
mov
sar
ficoml
icebp
test
mov
jmp
sahf
shlb
idiv
icebp
or
mov
lcall
mov
les
in
repnz
xchg
mov
mov
xchg
std
fs
lods
mov
rclb
pop
and
lock
inc
scas
loope
pop
mov
fisttpll
inc
mov
push
mov
add
nop
call
shr
les
int
xor
inc
scas
stc
iret
ja
call
xor
or
pop
setb
mov
lcall
mov
into
mov
loope
outsl
sub
inc
cwtl
pop
sub
pop
xor
sbb
les
inc
mov
mov
repz
stos
mov
jmp
dec
adc
cmp
rcl
mov
dec
dec
in
and
mov
insb
scas
inc
xchg
mov
pop
ffreep
daa
leave
xchg
cmpsb
xchg
fistps
fcompl
xchg
aad
pop
jl
mov
jp
aaa
test
jg
xchg
mov
jns
sbb
or
lods
push
call
sarl
orl
loope,pn
int
fidivs
push
std
and
mov
jg
cmp
in
xor
sub
cs
mov
inc
add
aas
dec
lds
sbb
push
and
rorl
mov
test
cld
loope
xchg
mov
or
out
mov
xchg
push
lret
and
stos
and
pop
and
int3
ret
std
adc
scas
dec
push
mull
push
xor
orl
push
pop
push
ja
pop
lea
ds
and
popa
jb
xor
in
fcompl
fdivrp
rorl
ljmp
adc
out
cld
je
xchg
add
adc
and
xlat
jae
inc
cmp
pop
pushf
xchg
outsl
push
pushf
loop
int3
cmp
inc
adc
shrl
shll
push
iret
aad
cmp
xchg
inc
inc
or
fdivs
xchg
mov
add
aas
fildll
and
push
xor
add
shlb
popf
lret
fsubp
repz
jno
push
inc
jns
xlat
jp
bound
mov
sahf
sbb
adc
dec
add
mov
popf
test
popf
fstpt
cmp
xor
ss
addr16
adc
push
add
cmp
pop
mov
pop
mov
sub
xchg
jle
xchg
icebp
mov
std
ret
movsb
js
sub
lods
cmove
lods
add
and
gs
sbb
push
mov
in
rcrb
aaa
sbb
push
pop
mov
scas
pusha
dec
mov
jle
push
mov
dec
sbb
mov
mov
push
mov
pop
push
int3
xchg
jnp
mov
xchg
daa
pop
adc
mov
scas
ret
lahf
lret
in
addr16
inc
push
fldl
movsl
mov
push
cmp
mov
sub
mov
out
pop
aaa
pop
pushf
lea
dec
cmp
mov
push
arpl
outsl
push
or
mov
fldenv
sbb
inc
popa
cmp
cltd
cmc
push
xor
mov
lds
and
sub
mov
aad
addr16
daa
scas
mov
lea
mov
pop
adc
add
outsl
test
or
jmp
pop
pop
adc
roll
mov
nop
jmp
or
testl
call
negl
pop
push
popa
fisubrs
sub
cmp
push
iret
cmpsb
je
cmp
pop
addb
daa
sarb
ficoms
mov
sbb
cli
mov
int3
ja
xor
push
lods
out
adc
gs
cmp
push
ret
hlt
divb
incl
xchg
jo
fdivrl
fwait
inc
sub
fwait
hlt
mov
outsb
in
pop
push
fbstp
mov
jno
lock
dec
stos
mov
jbe
sbb
lods
or
sti
ret
cld
cmc
xchg
jl
mov
out
insl
mov
pop
mov
and
jmp
sub
mov
xchg
mov
push
jnp
pop
mov
xor
xor
and
cmpsl
mov
arpl
mov
cli
rorb
int
cld
popa
or
xor
cltd
add
xchg
js
lods
scas
lods
or
std
negl
pop
cs
rcrl
cmc
dec
dec
rcrl
mov
je
mov
clc
xchg
mov
or
sub
mov
cmp
jne
nop
movsb
xchg
repz
test
rclb
cmp
aad
data16
add
imul
sbb
inc
aas
sti
lret
sbbl
cld
inc
lods
dec
cs
xor
out
js
push
adc
repz
sub
push
push
je
shrb
mov
and
mov
scas
and
mov
sbb
xchg
lahf
xor
adc
jo
sahf
inc
cmp
mov
subb
addr16
mov
popf
pop
lods
sbb
or
fists
dec
pop
repnz
push
mov
cld
sub
imul
pop
fstpl
addr16
push
adc
ljmp
dec
call
inc
add
xor
lahf
movsl
nop
in
mov
jae
pop
daa
fisttpl
inc
outsb
fs
pop
dec
push
aad
jns
fists
cli
les
aam
or
nop
xchg
sub
push
outsl
mov
orb
in
mov
push
int3
cmc
ss
inc
mov
cmp
popa
xchg
and
or
pop
pop
pop
cmp
sti
jg
push
sub
stos
sarl
mov
mov
xor
retw
int
cmp
mov
mov
jmp
mov
add
repz
sbbl
jle
cmp
lret
fistl
sbb
and
stc
movl
dec
ja
stc
fcompl
popa
pop
add
cmp
fnstcw
sub
mov
sub
pop
dec
push
mov
lock
push
aad
push
shlb
movsb
jge
sbb
popa
sahf
or
adc
fbld
in
or
mov
into
popa
jg
test
jno
bound
xor
loope
rol
xchg
pop
mov
jnp
mov
dec
cmp
dec
fnstenv
popa
xchg
scas
ss
cmpsb
dec
add
loopne
jmp
es
and
cltd
inc
ja
gs
pop
loop
sti
push
mov
insb
mov
aad
xchg
lret
jecxz
out
cli
test
mov
xchg
mov
push
inc
cwtl
xchg
ficompl
in
imul
sbb
mov
test
subb
jb
out
jecxz
push
aam
inc
push
aas
jecxz
loop
mov
aaa
fucom
sbb
mov
push
fcomps
inc
shrl
arpl
jno
fdiv
dec
daa
push
jecxz
rcll
add
mov
js
icebp
or
pushf
mov
mov
mov
clc
js
inc
les
bound
dec
fwait
pop
push
dec
jbe
enter
mov
out
pop
icebp
xor
jg
adc
adc
out
push
adc
test
in
adc
or
negb
cmp
fsubp
cmp
repnz
dec
fnstcw
pop
jne
add
xor
shlb
nop
out
sbb
sub
xor
push
out
insl
divb
push
shlb
cli
mov
les
jmp
stos
xchg
or
pop
cmpsl
outsb
mov
fs
mov
mov
mov
xlat
add
mov
xchg
lds
mov
push
mov
push
jae
adc
xor
xchg
xor
or
xchg
xchg
push
adc
dec
push
or
sub
scas
push
icebp
rorl
fcmovne
shl
dec
mov
fisubl
adc
pusha
or
cs
stos
pop
xchg
adcl
stc
aas
movb
pop
adc
add
test
mov
add
stos
cmpsl
jbe
in
aas
jle
mov
das
jns
ja
add
fsubs
pop
aad
nop
jb
imul
push
sub
out
in
bound
popa
and
dec
sub
mov
xlat
jle
jns
pop
neg
jo
stos
sar
sub
adc
sbb
fcoml
rcll
arpl
imul
adc
xor
mov
mov
subl
push
sbb
aam
sbb
mov
mov
je
loopne
mov
mov
inc
mov
das
xchg
pop
orl
dec
jnp
mov
arpl
test
insb
scas
pop
pushf
std
mov
xorb
push
mov
fldl
and
and
fidivrl
xor
in
cmp
mov
pop
add
mov
jbe
lret
mov
inc
fstpt
mov
mov
sub
pop
out
cmp
or
cwtl
push
pop
stos
popf
push
dec
js
ja
rol
pop
or
xor
jmp
sbb
outsb
fnstenv
pop
or
adc
dec
lock
push
pusha
shll
sbb
dec
cld
xchg
push
jae
jp
fs
adc
sub
jb
cld
flds
aad
jbe
jbe
test
pop
mov
in
mov
and
mov
out
imul
jns
xor
lahf
loope
test
fsubs
xchg
jnp
xchg
jae
test
incl
je
lock
push
cmc
addr16
outsl
mov
inc
enter
lahf
fsubrs
sub
pop
imul
pushf
jae
mov
fidivl
adc
mov
fwait
jnp
sti
cwtl
mov
jns
mov
fsubrs
pop
jge
xchg
int3
lret
cmpl
mov
and
jle
mov
call
mov
inc
sti
cmp
jg
push
pop
ficomps
mov
lahf
jb
push
ja
or
xchg
daa
loopne
sbb
xor
aad
cmp
roll
fimull
cld
mov
sbb
insl
add
cli
jno,pn
aad
cmp
into
dec
mov
adc
mov
sbb
fldt
cmp
jno
xor
testl
movsb
addl
pop
sbb
insb
adc
fiaddl
lds
enter
xlat
adc
xchg
pop
es
fcompl
aam
inc
fs
fcomp
fsts
cmpsb
jb
mov
sbb
push
pushl
sbb
jecxz
sbb
xor
inc
push
lcall
push
test
sti
inc
sahf
jecxz
movsl
add
add
pop
cltd
pop
in
outsl
sub
adc
das
dec
addb
std
pop
jbe
or
hlt
rclb
insb
das
jg
jmp
enter
push
xchg
pop
inc
rcrl
mov
jae
movsl
inc
fstpt
and
sub
add
sbb
test
outsb
mov
xchg
sbb
aad
push
lds
xchg
or
sub
cltd
movsl
aam
inc
mov
sub
scas
inc
cmp
mov
pop
bound
adc
add
or
or
adc
push
sub
jg
scas
push
sti
pop
fsubrs
lahf
xchg
test
mov
jnp
inc
mov
pop
sub
leave
push
enter
xchg
and
cli
movsl
jb
inc
leave
sti
repnz
sbb
out
rcrl
dec
dec
insb
or
hlt
scas
iret
psubusb
cmp
out
xchg
fsubs
push
out
iret
fstpl
lahf
dec
inc
mov
pushf
jmp
cmpsb
sbb
push
push
and
sub
push
mov
outsb
fsubs
subl
fwait
gs
out
jge
mov
cwtl
rclb
negb
add
push
lds
pop
adc
jnp
cli
loope
add
out
lods
mov
add
push
push
push
or
jge
stc
and
sub
xchg
movsb
inc
dec
xor
jp
cltd
hlt
sti
shr
into
jge
mov
in
pop
pop
fwait
xchg
mul
aam
push
mov
enter
xchg
mov
adc
addl
push
fs
mov
ljmp
cmpsl
xor
adc
or
xor
call
inc
cmp
std
lcall
mov
call
adc
aam
shrl
pop
fldl
inc
fisttpl
lods
pop
mov
inc
in
mov
mov
pop
sahf
scas
out
mov
dec
bound
adc
mov
xor
push
inc
xchg
fnsave
mov
add
leave
cltd
enter
imul
shrl
int3
pop
rclb
or
sub
ja
push
pop
sbb
xchg
push
outsl
shrb
rcll
aam
mov
dec
in
cli
lret
sbbb
push
jo
jmp
inc
rcrb
cmpsb
inc
and
cmp
dec
push
lahf
push
mov
fmul
cmp
jbe
mov
loopne
lock
int3
out
fsts
dec
inc
xor
dec
sbb
pop
insl
loop
in
lret
push
push
cmpsb
and
cmpb
and
add
xchg
shlb
sub
into
imul
loop
adc
sub
and
and
out
fstps
ret
inc
or
popa
pop
pop
pop
movsl
and
inc
mov
inc
insb
adc
and
daa
and
sbb
jp
jle
rcrl
xlat
inc
mov
int
test
or
ret
aaa
push
ret
or
pop
cld
imul
jne
jne
in
test
cmp
and
push
adc
mov
jns
lret
dec
or
push
ljmp
out
add
sbb
pop
mov
pop
push
or
les
xchg
fiaddl
cmpb
mov
fidivrs
inc
insb
inc
sbb
in
mov
fisubl
mov
add
pop
test
aam
sub
rcrb
add
fst
in
ret
rcrl
xchg
cmp
std
bound
adc
dec
push
inc
sub
push
pusha
gs
aas
bound
adc
sub
mov
xor
jo
sbb
mov
add
xchg
sbb
cmc
pop
jnp
jmp
iret
lods
js
sub
shrl
dec
scas
mov
mov
shlb
mov
test
dec
lcall
jbe
scas
fwait
cmpsl
into
xor
xchg
push
jl
mov
sahf
cmp
test
andb
mov
jp
mov
ficoms
push
pushf
dec
shll
inc
adcl
repz
dec
inc
into
int3
sub
ljmp
imulb
stos
leave
jae
ljmp
ret
out
ss
loope
jl
in
inc
jmp
dec
jg
sub
jns
ret
pushf
add
aad
insb
dec
xlat
push
inc
jg
arpl
ret
test
rcr
or
pop
aam
cmpsl
lret
xchg
in
mov
int
inc
adc
stc
pop
dec
in
push
cs
push
hlt
test
je
or
cld
imul
inc
rolb
pop
ret
inc
and
mov
mov
jbe
adc
xor
mov
jno
dec
out
mov
lds
inc
mov
push
std
ret
in
inc
cltd
fmuls
pop
clc
shlb
leave
xor
out
sub
jl
cmp
popf
adc
insb
andl
enter
adc
mov
sub
or
add
xor
jno
push
mov
divl
out
mov
xor
int3
aad
sbb
stc
call
mov
arpl
dec
mov
inc
dec
fcoml
lahf
mulb
arpl
cmp
out
mov
inc
ljmp
mov
or
pop
or
or
mov
stc
mov
xchg
sub
sub
aad
fadd
adc
xor
out
jb
ror
loope
scas
ret
mov
or
ja
push
clc
jl
repz
xchg
xchg
call
fstpt
je
sbb
ret
jo
cmp
push
mov
adc
or
mov
shlb
mov
pop
jmp
xor
es
adc
dec
daa
inc
flds
fistps
mov
hlt
xor
mov
out
ljmp
mov
sub
pop
mov
xor
mov
dec
or
dec
mov
add
stos
mov
sub
inc
icebp
outsb
pop
fidivl
lahf
stos
cmc
pop
mov
cwtl
repnz
fcmove
jbe
insl
push
jg
dec
jnp
push
pop
or
cmp
aad
xor
inc
cli
mov
lret
jnp
in
lods
xchg
mov
cmp
push
mov
andb
lcall
movsb
not
jbe
mov
filds
and
testb
shl
daa
ja
repnz
icebp
push
mov
add
pop
inc
ja
imul
ret
jle
inc
shl
lods
fstl
mov
cmpsl
sbb
xor
daa
mov
test
xor
or
or
pop
test
add
inc
pop
jnp
cmp
lock
inc
push
xchg
push
inc
sub
pop
pop
jns
mov
pop
jl
sub
sub
xchg
dec
and
xchg
inc
fs
sarb
dec
jae
movsl
cmp
adc
mov
pop
jnp
sub
sub
leave
mov
jne
sub
push
int3
xor
pusha
cmp
mov
jbe
je
xchg
jge
out
nop
mov
jb
mov
mov
cmpl
leave
loop
outsb
push
clc
test
cmp
insl
jmp
testl
jno
shlb
xor
fldenv
sbb
in
inc
movl
leave
adc
loope
jmp
inc
push
cmp
xchg
popf
cmp
cmp
sti
inc
jo
pushf
outsl
shll
cltd
pusha
test
sahf
dec
addr16
inc
mov
pop
lret
lods
out
xor
enter
dec
int
lret
jl
fisubs
fistl
sub
or
cli
arpl
jecxz
int
mov
sbb
inc
or
test
out
dec
or
aam
xchg
and
popf
cmpsl
pusha
pusha
out
and
push
lock
test
mov
sbb
push
enter
dec
dec
push
sub
stc
les
cwtl
mov
mov
xchg
jle
sti
imul
pop
xchg
pop
inc
in
popa
xor
xchg
mov
or
shrb
cld
jae
sbbl
insl
pusha
inc
mov
xor
push
push
es
adc
and
test
sub
cmp
jnp
bound
decl
mov
fsubl
loop
int3
movl
add
mov
xchg
scas
pop
pop
jne
push
fcoml
les
sar
add
push
fcmovbe
repz
adc
mov
nop
cmpsb
add
lods
inc
repnz
imul
rolb
mov
imul
dec
adc
daa
mull
xor
sub
std
pop
mov
jbe
adc
dec
mov
push
jne
in
shlb
add
or
push
push
imul
xchg
add
xor
and
nop
imul
inc
cmp
bound
cmp
jecxz
sub
mov
fimull
adc
orl
jecxz
pushf
jle
gs
add
push
sub
and
sti
and
mov
mov
int
popf
mov
xchg
cwtl
hlt
lods
dec
and
and
sub
test
cld
fdivrl
mov
imul
roll
and
mov
outsb
sub
jge
push
aad
pop
out
pop
leave
pop
or
sbb
daa
hlt
and
popa
cmp
sub
and
lcall
add
ss
insb
cmp
into
out
cmp
aam
dec
repz
cmp
hlt
test
jbe
clc
lods
aad
cld
sub
repz
mov
fsts
out
mov
xchg
int3
fcompl
mov
movsl
cltd
call
je
addl
iret
cmp
pop
xlat
cmp
or
pushf
sbb
mov
aaa
cmp
stc
aaa
xor
inc
sub
movsb
mov
test
fisttpll
pop
xchg
rolb
cmp
js
push
daa
call
fs
in
dec
mov
mov
xor
mov
addr16
cltd
xchg
xorb
sbb
pop
popa
andb
cmp
lea
imul
nop
sub
cld
xchg
scas
mov
mov
outsl
dec
iret
mov
jecxz
inc
push
fsubs
cmpsb
lahf
cmp
push
jp
ret
or
enter
call
test
aaa
loopne
cmc
into
jb
scas
int3
dec
loopne
rorl
mov
cmc
cltd
fwait
jbe
icebp
mov
cwtl
sub
daa
inc
push
mov
in
outsb
callw
push
sbb
mov
scas
and
jmp
xchg
mov
ljmp
or
push
test
int3
pop
inc
adc
out
inc
xchg
cmp
sub
in
sbb
adc
stc
stos
das
stos
inc
idivl
inc
repz
loopne
loop
ret
pusha
add
ficoml
stc
data16
out
hlt
jecxz
cmp
add
xor
fdivr
add
push
jnp
push
clc
and
dec
in
pop
lret
rcr
inc
mov
fsubrl
loop
mov
mov
jns
xchg
cld
aas
mov
mov
inc
xchg
pop
push
dec
inc
addr16
and
push
jle
sub
stos
orb
loop
or
pushf
pop
push
pop
lret
and
sub
or
xchg
jne
sbb
and
push
ret
dec
mov
mov
insl
fnstenv
inc
jmp
or
dec
loop
jns
call
adc
dec
js
and
movsb
rorb
insb
mov
ror
fs
pusha
repnz
fs
fwait
sub
inc
push
push
inc
xchg
jne
pop
pop
fdivs
pop
pusha
or
cmpsb
mov
adc
imul
in
mov
add
mov
push
dec
fcoms
pop
orb
adc
mov
mov
push
push
call
jbe
xchg
sub
fstpl
inc
aad
cmp
pop
xor
adc
faddl
imul
push
shll
mov
lods
cmp
mov
sub
rclb
push
xlat
add
adc
add
outsb
dec
cmc
rcl
xorb
mov
push
cmp
lea
xchg
arpl
sub
pop
mov
push
xor
push
testl
pop
sbb
xor
add
mov
cli
jnp
mov
sub
pop
sbb
push
div
push
clc
testl
adcb
cmp
je
xchg
ljmp
jne
mov
cmp
lahf
jle
cmp
insb
mov
nop
popa
lock
mov
out
addr16
cmpsl
pop
mov
push
aad
shr
inc
nop
pop
pop
pop
mov
popa
mov
mov
xchg
stos
lods
xlat
pop
movb
out
shl
xor
push
repz
negb
pop
dec
sub
cltd
xchg
inc
jmp
aas
push
pushl
adc
aas
pop
adc
inc
push
mov
inc
mov
enter
ja
add
dec
repz
sahf
pop
outsb
mov
pop
and
rclb
sti
push
js
in
dec
sbb
inc
hlt
xchg
outsb
push
mov
dec
je
sub
loop
subl
jge
repnz
mov
sub
pop
sbb
fbld
adc
push
push
sub
stc
pop
imul
pop
ret
roll
xchg
jl
dec
mov
mov
pop
sub
add
pop
iret
pop
mov
mov
daa
jae
push
pop
sbbb
jo
pop
push
sub
cmp
imul
mov
adc
fstl
push
icebp
xchg
xor
jbe
and
ljmp
push
test
dec
sub
mov
adc
addr16
iret
sub
xor
sahf
fnsave
leave
sub
xchg
or
leave
sbb
ljmp
xchg
nop
repz
orb
push
mov
dec
jecxz
jns
shl
jg
aaa
fcoms
pop
xchg
push
fisubl
inc
inc
test
insl
push
add
dec
loop
mov
in
mov
xchg
cmp
test
mov
pop
push
les
int
ljmp
xchg
int
imul
jp
xor
push
scas
cmp
or
add
inc
push
pop
dec
jnp
or
insl
test
insb
fsubrs
stos
or
push
in
push
push
sbbl
mov
xor
xchg
xor
loop
add
push
jp
mov
mov
xchg
mov
jno
sahf
push
es
dec
popf
jmp
outsl
dec
mov
mov
pop
outsl
daa
add
lds
gs
push
mov
aam
xchg
shl
inc
mov
popa
xchg
insb
mov
xchg
pop
xor
mov
imul
jne
xchg
sbb
add
jno
cmp
pop
out
jbe
cmpsb
dec
shlb
xor
cmpsb
lock
jp
mov
in
iret
jge
mov
mov
test
jmp
pop
dec
cmp
sbb
shl
mov
jle
scas
sub
movsl
sbb
mov
in
loopne
cmp
dec
mov
add
mov
sub
and
jb
add
mov
testb
and
sbb
sbb
shlb
pop
movups
mov
push
inc
rcrl
xor
sub
mov
lahf
push
push
xchg
roll
cmp
incl
sub
loop
ret
mov
xchg
mov
lret
nop
lea
add
adcl
or
push
cmp
lock
test
clc
jnp
adc
pop
nop
lods
test
and
insb
dec
orl
aad
inc
adc
bound
mov
fidivrl
mov
add
xchg
push
pusha
or
icebp
jae
sub
popa
es
pop
stos
ds
jp
aas
inc
jg
mov
add
push
rclb
fcmove
mov
ds
xchg
addr16
das
and
cmp
inc
jbe
fbstp
pop
xchg
loope
sbbl
add
clts
fisubrs
push
cwtl
adc
fs
push
mov
lea
ja
xor
mov
dec
mov
pop
jle
dec
and
push
mov
inc
fcoml
movsl
dec
mov
jl
daa
leave
mov
outsl
add
lahf
stos
xor
inc
das
imul
pop
cmpsb
sub
movsl
clc
sbb
mov
push
cmp
add
or
mov
xor
mov
push
fs
mov
bound
call
mov
notb
sub
ljmp
das
stc
or
add
cmc
pushf
pop
test
pusha
dec
mov
leave
lahf
dec
and
or
std
cmpsl
int
mov
mov
and
pushf
nop
mov
out
hlt
popa
jp
jmp
cmpsl
pop
jno
dec
fwait
push
mov
jns,pn
inc
jno
lea
xor
js
inc
mov
fcoms
jl
pop
mov
int
les
ror
jecxz
jmp
xor
imul
fidivrl
ds
fbstp
pusha
xchg
fildll
repz
pop
cltd
into
mov
int3
sarl
stos
mov
es
mov
stos
pop
hlt
cmp
jno
mov
aam
enter
popf
sbb
mov
stc
push
jo
jg
sahf
loopne
and
cmp
jl
mov
add
mov
add
or
push
out
xchg
and
jg
out
outsb
orb
xchg
ljmp
jmp
mov
fisubl
std
adc
leave
in
mov
rcrl
ljmp
mov
insb
cmp
lods
xchg
sbb
sahf
pop
stc
ljmp
sub
xor
sarb
push
outsb
aam
pop
xchg
xor
fucomip
xchg
mov
aad
xchg
gs
sbb
push
mov
push
jg
jbe
subl
push
negb
in
loop
push
cmp
fbld
inc
icebp
cmpsl
jno
leave
fwait
inc
push
add
subb
pop
push
bound
movsl
lahf
popl
pop
orl
or
push
pop
push
lods
jno
push
inc
fsubs
nop
insl
sbb
sbb
xor
mov
sub
pop
es
xor
lret
pop
cli
xchg
enter
insl
cmpsl
data16
ja
mov
scas
ss
sti
ret
out
movb
adc
sahf
xchg
cmpsl
xchg
aad
cmp
scas
lret
shr
dec
mov
js
adc
push
mov
cmp
imul
mov
out
sbb
into
shl
mov
xchg
pop
aas
push
mov
fs
lcall
cmc
loopne
bound
icebp
subl
insl
in
mov
adc
test
jle
pop
cmc
je
in
insb
fcomps
fs
adc
mov
cli
xor
jl
lods
lock
sub
dec
or
fiadds
divl
test
cmp
and
lock
leave
fwait
mov
mov
jmp
mov
fistpll
fdivl
fistps
stos
jns
cmp
push
out
sub
jbe
lcall
cld
nop
adcb
inc
loop
pop
ljmp
xchg
es
inc
in
scas
lods
imul
sti
ret
mov
cmpsl
or
jecxz
or
xor
and
xor
ret
cmc
seto
lcall
enter
in
dec
add
cltd
es
dec
xchg
outsl
pusha
fstp
mov
mov
loopne
xchg
insb
adc
jno
push
cli
mov
dec
mov
jo
mov
lcall
loopne
icebp
fcomp
dec
fnstenv
mov
pushaw
int3
scas
imul
jp
movsb
and
hlt
jae,pn
jecxz
outsb
mov
adc
pop
mov
sbb
push
popf
fldt
mov
xor
mov
roll
jmp
jecxz
inc
push
cmp
pop
pop
std
adc
lods
daa
out
add
popf
push
repz
mov
cmp
mov
fildll
mov
mov
xlat
in
in
fstpt
inc
or
fimull
lcallw
inc
shlb
cmc
pop
out
jle
pusha
inc
inc
daa
push
or
xor
mov
xchg
popa
mov
cmp
loope
stc
popf
pop
into
fcmovbe
mov
sub
add
out
push
pop
repz
sub
push
popa
mov
xor
sbb
mov
cmp
rorb
pop
cli
xchg
pop
mov
pop
xor
cmp
mov
adc
adc
add
insl
lret
cmpsb
cmpsb
shlb
nop
sub
inc
mov
cmp
movsl
push
jle
test
pushf
mov
xor
push
sarl
adc
xor
in
fadd
xor
imul
lret
cltd
and
push
inc
add
imul
cmpsl
inc
add
add
push
xchg
lret
aam
cmp
and
jnp
pop
mov
cmp
or
icebp
add
das
movsl
dec
test
fs
pop
xor
div
cld
jns
mov
inc
pop
and
fdivrl
lret
and
dec
lea
mov
andb
sub
inc
jle
rcl
clc
lea
fnstcw
aas
mov
daa
lea
or
cmpsl
adc
notb
jmp
test
fsubs
neg
aad
push
mov
sub
inc
push
aaa
in
push
sbb
mov
fistpl
test
adc
loope
mov
sti
mov
adc
jae
jp
mov
movsl
in
cmpsb
scas
mov
mov
test
imul
xor
mov
pop
pop
push
dec
push
into
xor
push
pop
pop
mov
rcrb
lock
cmp
fstpl
sahf
mov
lds
mov
or
mov
aad
shlb
push
add
sbb
xchg
int
mov
dec
dec
push
add
fstl
add
inc
lcall
cmp
push
popf
mov
cs
add
movsl
pusha
mov
jecxz
inc
aaa
enter
fsubrl
or
clc
addl
je
fsubp
xor
insl
imul
pop
dec
push
fucomp
leave
inc
jg
mov
stc
xchg
stos
test
mov
jo
add
movsl
sub
pushf
mov
sbbb
cmpl
icebp
dec
mov
loopne
cmpsb
jbe
lock
or
jecxz
push
fildll
jne
xor
popa
mov
cmp
adc
sub
inc
aaa
cmp
pop
mov
push
push
popf
jge
jg
mul
call
and
mov
es
dec
movsl
stc
xor
mov
hlt
mov
in
neg
iret
push
mov
add
outsl
into
movsb
and
dec
xchg
repz
mov
lahf
cmp
cmpsl
sub
inc
mov
mov
stos
fisttpll
into
loop,pn
mov
add
ficoms
je
dec
dec
adc
scas
pop
mov
mov
and
lds
push
clc
mov
xor
dec
xchg
push
mov
cli
add
mov
sub
jne
and
divb
fimull
pop
lahf
outsb
popa
cltd
scas
inc
repz
data16
insb
dec
add
aam
inc
out
push
decb
and
xlat
sub
mov
jp
movsl
stc
lock
inc
or
xchg
arpl
sbb
xor
lods
fstl
xchg
test
jne
jecxz
jl
jbe
pop
adc
mov
dec
fists
repnz
in
adc
mov
add
data16
shl
xor
adc
push
cmpsl
push
ds
icebp
or
test
lcall
testl
pusha
sub
inc
pop
push
xor
lret
ja
sub
outsl
fs
shrl
inc
cmpsb
xor
mov
sub
in
lcall
outsb
mov
jg
cmp
imul
mov
sahf
jb
jae
cltd
test
int
mov
mov
ss
push
push
bound
and
or
cmpsb
outsb
mov
cmpl
dec
jns
cmp
jbe
xchg
xchg
jno
repz
sbb
mov
push
dec
scas
rcll
xor
jo
das
xor
jle
inc
jle
jae
fisubl
sbb
sbbb
mov
lds
in
push
sbb
jbe
bnd
dec
insb
xchg
dec
in
fnstcw
out
lea
cmpsl
dec
in
xchg
sub
jge
int3
sub
movsl
mov
int3
stos
xchg
xchg
pop
and
data16
push
xor
xchg
pop
pavgb
add
add
fdiv
push
mov
pushl
adc
imul
ss
sbb
push
iret
xor
jmp
lock
dec
add
mov
test
sbbl
jns
mov
cmc
and
in
aas
cmpb
int
push
sbb
xor
pop
jl
addr16
scas
call
sarb
jecxz
subl
ret
xchg
cmp
push
adc
scas
testl
pushf
roll
push
test
and
test
dec
jbe
mov
xchg
push
and
cmpl
insl
fprem1
xor
lods
mov
loope
ret
mov
pop
movsl
dec
lods
enter
push
pop
adc
std
jle
mov
iret
xchg
xchg
js
push
pop
push
movsb
loopne
push
adc
sbb
loope
iret
aad
lods
mov
mov
and
xchg
dec
fists
mov
push
mov
push
sbb
mov
addr16
mov
daa
push
mull
jnp
sbb
or
sub
push
fs
xlat
ljmp
sbb
int
mov
call
shlb
or
mov
mov
jmp
inc
mov
inc
icebp
subb
mov
mov
cwtl
fisubl
flds
mov
mov
aaa
es
rcl
mov
or
gs
xor
rcrl
in
popf
sahf
pusha
xor
rolb
lahf
add
mov
inc
and
andb
out
fsubr
or
and
out
mov
hlt
jb
push
mov
stc
inc
pop
fldt
mov
sub
out
in
in
lcall
scas
subl
cmp
or
cld
mov
jnp
mov
mov
and
sub
dec
mov
jo
sbb
out
push
cmpl
movsl
sbb
mov
add
loope
mov
pop
sub
test
lock
mov
adc
add
sbb
mov
ret
cmp
xor
jno
int
sar
js
mov
inc
inc
jne
dec
xchg
jle
or
std
or
movsl
dec
cmp
jmp
mov
outsb
fwait
lock
repz
jmp
repnz
addr16
xorl
cwtl
cmp
lret
sbb
xor
xor
lcall
push
jnp
ret
inc
into
mov
lret
insb
xchg
pop
out
dec
sti
push
mov
movl
dec
jbe
repz
inc
call
jnp
mov
scas
shl
addr16
rcl
pushf
ljmp
jno
nop
movsl
imul
rcrb
adc
jge
loopne
or
in
or
mov
mov
cmp
push
inc
xchg
jne
iret
jp
call
or
les
push
xor
mov
jb
out
mov
push
pop
and
arpl
addr16
mov
jno
inc
adc
call
imul
pop
fcmovnbe
iret
add
cli
hlt
imul
aaa
loopne
adc
add
fisttpl
mov
push
sbb
push
popl
nop
cmp
mov
lret
idiv
mul
addb
adc
dec
std
aaa
in
jp
xchg
out
pop
clc
xor
mov
mull
popf
and
imul
jae
xor
imul
outsl
mov
sub
cmp
adc
pop
popf
mov
daa
xchg
jb
and
pop
insl
jge
and
pop
movsb
in
xchg
cmc
dec
cmpsl
iret
aam
jnp
mov
ret
mov
aad
hlt
push
dec
push
adc
shl
mov
dec
roll
dec
insl
push
fsubl
lret
outsl
leave
clc
mov
or
xor
lret
pop
faddp
mov
out
in
aad
adc
fs
int3
sbb
xchg
iret
sbb
jle
pop
loop
popa
leave
adc
cmp
sbb
outsl
inc
jns
in
pop
cmpsl
rorb
pop
fiadds
inc
xchg
jo
pop
add
mov
insb
pshufw
testb
into
sub
scas
adc
int3
sbb
mov
jns
sub
cmp
invd
test
pushf
pusha
notl
xchg
or
lret
rcrb
mov
nop
jns
jle
or
call
cli
xchg
repnz
cmp
or
int3
mov
popf
jle
jl
adc
dec
and
dec
and
jne
sub
mov
lds
test
mov
ficoms
popa
push
lea
dec
mov
cwtl
out
add
ret
popa
and
mov
jae
cwtl
and
jg
xchg
sbb
data16
dec
pushf
inc
test
ficoml
add
in
jle
pop
cli
adc
pop
inc
int
loopne
jl
loop
inc
scas
movsl
sbb
mul
aam
fisubl
lea
and
inc
stos
pop
and
lea
cmc
inc
out
testl
mov
sar
nop
jnp
icebp
cwtl
leave
pop
out
pushf
cmp
lds
jmp
mov
fmul
xchg
pushf
iret
pop
push
inc
daa
adc
dec
ret
sub
mov
jge
mov
inc
sub
adc
cmp
inc
sti
call
xchg
leave
pop
loop
xchg
jmp
push
sti
jbe
push
test
ja
mov
nop
pop
mulps
clc
cmpsl
sub
fidivl
test
fstl
mov
jne
stc
mov
cmpl
ret
xchg
repnz
mov
shrb
mov
add
idivb
popa
test
test
lods
int
cmp
push
in
adc
or
int
pushf
mov
cmpsl
xor
mov
inc
pop
jle
mov
pop
xor
mov
or
sub
aad
xchg
mov
stos
icebp
lahf
popa
adc
mov
add
inc
or
pcmpgtd
cmp
shlb
and
jbe
sti
adcl
pop
mov
scas
orl
repnz
cltd
jecxz
call
mov
mov
fwait
xchg
in
fs
mov
addr16
scas
adc
cmp
call
outsb
push
mov
adc
cmp
inc
scas
test
les
gs
es
notl
mov
popa
or
xor
sbb
jge
jnp
bound
jmp
mov
inc
mov
orps
lds
imul
psrlq
adc
inc
out
fidivrl
mov
mov
rclb
jge
pushf
xlat
adc
int3
nop
xchg
cmp
out
dec
add
in
lret
inc
or
stos
lret
test
addr16
fdivp
leave
hlt
pop
fimull
in
jno
sub
fwait
adc
call
stc
push
das
loopne
cwtl
shlb
int3
sub
xorl
je
xchg
push
adcb
adc
gs
pop
dec
sbb
cmp
stos
jecxz
outsl
sbb
cli
xor
dec
test
movsb
dec
sbb
jl
repnz
xbegin
jecxz
add
inc
pushf
in
sbb
sub
push
inc
stos
test
fs
dec
jp
or
mov
dec
ret
mov
xchg
inc
and
cli
xor
xchg
movsb
roll
ret
in
addr16
pop
rolb
lock
pop
int
jbe
icebp
in
inc
xor
addr16
jg
mov
pop
arpl
jle
ljmp
movsb
add
add
dec
movsl
inc
dec
sub
mov
bnd
out
push
dec
les
mov
mov
repnz
mov
or
or
ret
jns
dec
lcall
xor
ds
icebp
rclb
and
xor
pop
xlat
test
movsb
pop
jmp
arpl
or
bound
fwait
or
or
mov
mov
jno
sti
pop
scas
in
sti
sub
es
add
std
fwait
dec
lret
mov
ljmp
and
jbe
cltd
call
inc
and
add
xchg
outsl
mov
jbe
mov
adc
les
out
in
cmp
jbe
ja
fcmove
das
lods
lea
dec
mov
mov
jmp
dec
inc
cwtl
mov
cmp
outsb
decl
lret
mov
lcall
ror
fmul
adc
sahf
aad
dec
inc
adc
push
movsb
addr16
stc
inc
and
sub
mov
test
mov
nop
xchg
push
sahf
adc
imul
jp
rcr
jecxz
cmpl
mov
dec
pop
xor
add
cs
les
sub
mov
rcr
hlt
popa
imul
pop
out
pop
adc
fcom
dec
rclb
and
or
outsl
inc
add
push
push
and
repz
mov
movsb
hlt
adc
xchg
add
xor
dec
xor
hlt
or
stos
xchg
hlt
icebp
fdivs
cwtl
sbb
in
inc
aas
xor
aas
data16
cld
lret
mov
gs
xor
sub
pop
adc
loop
fs
ret
int3
into
into
xchg
jno
in
sbb
stos
popf
mov
aad
gs
in
or
bound
xlat
daa
sub
xor
shlb
cmp
cmp
ljmp
lahf
cld
in
nop
inc
jmp
testb
in
mov
mov
sbb
lock
jp
pop
add
cmc
and
imul
dec
mov
bound
inc
add
imul
add
push
fs
xchg
out
js
testb
out
lahf
cmp
jnp
jne
ljmp
xchg
repz
pop
adc
jns
sub
jp
cmpsb
movl
inc
xchg
gs
sbbb
in
repnz
scas
or
add
fidivs
push
xchg
in
fisubs
loopne
sbbl
iret
mov
mov
adc
aam
adc
mov
in
rol
in
mov
sbb
pop
add
loope
fsubrs
mov
xor
scas
add
hlt
inc
sbb
iret
push
ds
outsb
mov
xchg
mov
lods
or
push
fwait
pop
and
sahf
outsb
jnp
push
outsl
push
sub
stos
mov
aad
push
int3
mov
add
les
push
jns
dec
dec
sbb
inc
outsb
and
inc
movsb
in
mov
push
cmp
in
xchg
stc
mov
icebp
add
inc
jo
dec
mov
push
and
cmp
xor
jb
dec
ja
jecxz
out
in
push
add
cltd
ss
scas
inc
sbb
jns
aaa
xor
or
ja
test
pusha
repz
xchg
hlt
adc
ret
into
test
pushf
ds
mov
test
dec
add
jg
cltd
popa
mov
inc
call
mov
cmpl
fstpl
sbb
sarb
loop
pushf
mov
call
lock
cmp
pop
lds
stc
gs
popa
cmp
xchg
jae
lock
jle
mov
rorb
pop
push
lahf
call
outsl
push
data16
cmpsb
push
std
aam
sbb
lahf
fimuls
mov
mov
fadd
aam
dec
sbb
sub
inc
addb
out
icebp
xchg
popf
cmp
add
roll
fdivr
test
xchg
jge
mov
inc
iret
clc
adc
lret
jg
xchg
cwtl
nop
jne
nop
shrb
jp
shll
cwtl
mov
sbb
sahf
scas
ret
in
add
push
sbb
mov
add
repz
es
icebp
sbb
mov
jno
fmulp
ljmp
popa
adc
sarl
mov
xchg
loop
fs
push
scas
xor
lret
stos
or
movsb
mov
jb
and
or
mov
lock
xchg
movsl
imul
push
fadds
movsb
loope
mov
testb
jle
cmc
pop
ss
fsubrp
adc
and
mov
lock
dec
lcall
inc
sarl
ds
xchg
in
jp
icebp
mov
rsm
outsl
shlb
jno
mov
push
sub
sbb
adc
lret
iret
movsl
and
jno
scas
mov
cmpsb
and
fwait
adc
lea
inc
mov
fsubrl
subb
xor
lock
xor
js
and
pop
jg,pn
and
jnp
jns
cld
sbb
fmull
movsb
xchg
xor
dec
nop
cwtl
out
mov
fdiv
and
push
cmpsb
jnp
push
pop
pop
int
xchg
out
out
push
jb
adc
popa
and
xor
dec
mov
and
lret
clc
andw
sbb
pop
je
aas
int3
jbe
addl
mov
clc
in
dec
test
das
cmpsl
jle
cmpsb
mov
popa
imul
cmp
shrl
stos
scas
test
scas
pop
and
jg
inc
fistl
decb
arpl
dec
pushf
mov
mov
popf
mov
and
mov
sub
xlat
dec
mov
adc
dec
jo
ret
push
dec
sbb
rcl
aad
sbb
inc
dec
cmpsl
cmpsb
int
mov
mov
das
pop
sti
mov
sbb
add
xor
jne
test
mov
push
out
or
cmc
push
pop
jp
int
cmp
push
lahf
adc
mov
jns
stc
jo
push
test
mov
jo
mov
xchg
mov
jecxz
ljmp
es
jle
inc
xlat
push
xor
cs
sub
mov
xor
out
aam
push
fwait
or
inc
lea
cmp
mov
push
pop
xchg
outsb
out
push
inc
and
mov
add
ror
pop
shlb
inc
and
insb
push
es
arpl
push
stos
push
pushf
ds
cmp
mov
test
inc
icebp
clc
stc
arpl
sub
jmp
cmpsb
cmpsb
clc
dec
mov
or
movsb
outsl
fdivr
mov
cltd
enter
ljmp
push
popa
dec
dec
es
pusha
inc
scas
mov
jle
pop
mov
mov
and
dec
subb
mov
and
arpl
int
iret
push
stos
aad
jno
sub
ljmp
clc
jl
aaa
mov
push
jg
fdivrs
pop
fistl
aad
fisubrs
mov
cmc
jbe
out
ficomps
xchg
icebp
lock
lcall
mov
out
sbb
pop
ljmp
ss
xlat
lret
fmul
das
xchg
xchg
lea
xor
lret
sbb
call
sbb
lods
mov
mov
and
dec
sub
lret
add
mov
pusha
stos
fcompl
imul
notl
jmp
inc
mov
pop
stc
aas
mov
jnp
fistps
push
pusha
jle
push
cmp
or
xchg
jb
fldt
leave
add
sub
and
or
pusha
jae
xchg
xchg
jnp
aad
mov
jecxz
les
lret
aaa
enter
pop
mov
xor
or
fnstsw
mov
mov
ret
mov
xchg
mov
dec
or
cmp
adc
adc
repz
sub
test
push
test
mov
cmp
orb
je
xchg
add
sub
xchg
and
lods
mov
mov
sbb
pop
cwtd
imul
rclb
add
mov
cli
or
test
cmpsb
rcll
add
cmp
jnp
movsl
pop
std
popa
sti
lea
mov
dec
in
cli
ret
popf
stos
mov
or
pop
pop
sub
mov
sbb
sarb
clc
lret
pop
lcall
out
jbe
loopne
das
lret
dec
push
adc
pop
adc
arpl
pusha
outsb
bswap
inc
pop
mov
pop
xchg
lea
ficoml
push
xchg
mov
icebp
lock
inc
sbb
or
clc
mov
add
dec
test
adc
push
inc
xor
push
ss
out
jbe
roll
loop
sub
xorb
leave
shl
divb
ret
mov
mov
mov
ja
lods
stos
movsl
cmc
cmp
dec
ror
and
xor
lods
push
inc
cmp
push
pop
sub
addb
inc
mulb
push
addl
mov
arpl
mov
add
fldcw
addr16
std
lahf
movsl
sarb
mov
shlb
idivl
cwtl
jne
mov
mov
add
dec
jle
or
inc
clc
je
jecxz
mov
push
clc
loopne
stc
jmp
inc
clc
cs
push
mov
pusha
idiv
pop
fs
xlat
or
mov
jne
add
lret
add
iret
inc
mov
outsb
loop
sub
pop
fildl
insb
inc
mov
roll
pop
or
orl
cltd
lahf
push
hlt
inc
in
dec
push
fldt
cmp
push
mov
repnz
mov
imul
mov
jno
fimuls
repz
sub
andl
shlb
leave
lock
xor
push
mov
sar
cmpsl
and
cwtl
jecxz
pop
movb
or
jbe
push
jns
repz
mov
aad
jl
jo
hlt
int3
inc
lret
pop
ret
sub
icebp
hlt
jmp
dec
xor
jg
or
jmp
pop
ret
int
aam
sub
inc
ret
ret
cmpsb
pop
sarl
jmp
fdivrl
sub
xor
cmc
in
aam
pop
stos
or
aad
cmp
ret
icebp
stc
jne
lcall
popa
pop
xor
stc
in
rcl
movsl
mov
outsl
push
mov
jns
icebp
jno
test
cltd
mov
sbb
in
mov
inc
xchg
cmp
addb
jmp
repz
std
add
jne
or
cs
ja
and
scas
jge
test
push
xchg
daa
add
sbb
adc
or
popf
dec
cmpsb
xor
pop
cli
out
rcrb
fwait
mov
fnstcw
mov
adc
xor
btr
add
mov
fldenv
ljmp
sbb
insb
std
mov
jb
xor
std
stos
mov
dec
nop
inc
fnsave
popa
shl
test
gs
hlt
push
ret
xchg
or
jmp
mov
sti
fbld
push
mov
mov
jg
mov
adc
mov
xor
mov
andb
enter
mov
push
imul
xchg
jnp
inc
aam
jns
dec
adc
mov
or
dec
cs
dec
lea
adc
push
movsl
jns
cmp
jne
pusha
mov
fs
mov
decb
sahf
inc
sbb
adc
sbb
shlb
std
push
pop
dec
adc
es
xchg
dec
in
sub
lret
mov
mov
ret
add
cmp
sahf
fldt
cld
xchg
sti
mov
xchg
fstl
xchg
jp
cmp
std
aas
add
mov
fsubrp
xchg
loop
xor
adc
mov
pop
mov
sub
dec
test
xchg
or
xor
dec
movswl
xchg
out
add
in
pop
add
inc
loopne
aaa
subl
cld
jne
daa
leave
cmp
inc
std
aam
ffreep
jmp
sbbl
out
lret
mov
test
add
enter
stos
add
mov
xchg
and
push
push
jp
mov
dec
inc
call
cli
xor
int
sub
cmp
lods
xlat
jb
test
jmp
test
dec
cmc
mov
fsubrl
subl
mov
hlt
dec
pop
bound
jl
fbld
aas
xor
dec
mov
in
loope
mov
and
pop
dec
faddp
xor
insl
imul
inc
push
jg
cltd
mov
add
cmpsb
push
sahf
out
repnz
adc
fildl
cltd
inc
rep
xchg
cwtl
and
testl
cli
dec
sbb
lcall
repz
dec
pop
inc
outsl
jge
les
test
dec
cmc
push
xchg
aad
cld
dec
adc
in
shl
enter
ret
stos
je
aam
jo
jbe
xchg
xchg
in
mov
outsb
ja
aad
jecxz
rorl
fs
push
jge
aas
and
mov
dec
fnstsw
fs
shl
push
iret
ja
cmp
dec
sub
gs
mov
xorl
lret
das
xor
pusha
adc
mov
mov
adc
dec
in
mov
mov
push
aam
leave
lods
sbb
xor
into
rcrb
jge
mov
xor
sbb
sti
out
push
jne
movsl
adc
xor
cmp
andl
scas
jp
cwtl
sbb
out
fnstenvs
jae
gs
test
xchg
mov
xchg
inc
fnstenv
sub
jnp
repz
mov
mov
cmp
aam
pop
shll
testl
out
mov
mov
inc
mov
sbb
sbb
xor
sahf
std
cmpsb
popf
inc
mov
iret
das
mov
adc
fisttps
insl
dec
sti
imul
ds
jb
mov
js
adc
test
pop
hlt
pop
test
sbb
mov
xor
adc
mov
mov
repnz
push
mov
ja
aas
mov
scas
je
cmp
sub
and
jb
push
dec
cld
repnz
jge
push
xchg
aas
dec
call
test
jbe
mov
pop
mov
push
pop
aad
xchg
mov
add
lods
lret
jecxz
dec
mov
inc
push
shrl
daa
inc
jae
jae
sub
inc
scas
cld
jecxz
arpl
test
mov
mov
push
pop
sub
sub
pop
or
push
jle
or
pop
fisttpl
lds
adc
sbb
xchg
fimuls
dec
jno
fisubl
inc
push
or
aas
xor
inc
in
ss
es
popa
dec
jl
incb
cmpsb
mov
jge
aas
into
nop
outsb
xchg
enter
repnz
aam
imul
ret
push
repz
jecxz
scas
jne
cmpl
pop
ss
stos
les
jmp
and
jo
lret
int
mov
pushf
adc
roll
mov
das
mov
jmp
fisubrl
mov
mov
faddp
jp
and
push
add
fidivrl
cld
inc
adc
in
mov
fs
lods
mov
push
popf
and
sahf
insb
mov
pop
jle
cmpsb
sti
or
aaa
into
jl
dec
rolb
dec
into
cmpb
xchg
xor
jae
enter
scas
outsb
push
xchg
sbb
dec
shrl
js
add
jp
xchg
sti
pop
adc
push
lea
fistl
mov
test
ss
out
xchg
leave
lcall
pushf
mov
jmp
jno
dec
lods
and
scas
cmp
mov
mov
jns
mov
stos
cmova
push
ja
or
sbb
xor
mov
push
nop
pop
loope
sub
scas
cwtl
dec
sub
cli
jmp
add
push
cs
inc
mov
dec
mov
dec
pusha
imul
bound
rcrl
sbb
inc
sub
pop
out
gs
xor
cmc
std
movsl
out
mov
xchg
int
int3
jno
out
sti
mov
mov
and
pusha
in
popf
push
lea
cmp
test
loope
add
cmp
mov
leave
ret
les
mov
repz
fsubs
push
pushf
adc
sahf
add
sbb
shll
bound
cmc
xchg
jns
repz
jle
les
fbld
jmp
fcomps
xor
ret
dec
jns
inc
out
cwtl
xchg
jnp
mov
add
insl
sbb
xchg
xchg
sar
movsl
xchg
xlat
lret
cli
cwtl
xchg
fldl
mov
sti
adc
push
inc
pop
pop
into
sbb
jge
cltd
into
add
jb
imul
push
and
ret
or
jmp
loopne
ss
scas
andb
jl
fcom
pop
or
outsl
nop
leave
mov
aam
mov
pop
out
out
insb
fs
mov
push
xchg
loope
fwait
pop
rolb
xor
or
nop
mov
idivb
xchg
mov
ja
inc
aam
loop
mov
sbb
out
xor
jns
push
into
jo
mov
push
scas
lods
les
ret
xorl
mov
mov
pinsrw
jg
sahf
cmp
mov
sbb
test
popa
xchg
dec
ret
mov
jmp
adc
mov
jb
movsl
addr16
es
fwait
cmp
pop
mov
xchg
adc
movsl
sub
loope
das
lock
icebp
jle
jle
push
mov
sbb
stos
sub
xlat
xchg
and
jae
into
mov
add
mov
fldl
push
dec
xor
and
dec
lcall
and
xchg
rclb
and
xchg
movsl
clc
into
mov
dec
subl
daa
jecxz
in
pop
sbb
int
push
mov
sahf
loopne
mov
imul
pop
sbb
mov
pop
mov
test
insl
xchg
mov
mov
xor
mov
repz
in
jle
inc
jmp
sbb
cld
pop
xlat
dec
imul
out
loopne
adc
jle
push
mov
repnz
sarb
or
and
arpl
cmp
cmp
out
pop
je
int3
mov
fbstp
stos
mov
clc
jmp
rorl
jns
aam
mov
xchg
hlt
cld
mov
cmp
lods
loop
and
sub
mov
les
lahf
lock
xlat
pop
and
js
pushf
stos
pop
inc
pop
cmp
or
jl
fwait
movb
arpl
xorb
out
popf
sarb
in
mov
xchg
xchg
push
dec
addr16
out
mov
or
rol
cmpsb
in
cmp
or
sti
or
cmp
test
movsb
or
stc
mov
ja
js
xchg
jo
imul
aam
add
jae
in
sbb
aas
pop
mov
out
xor
jecxz
push
popa
fsubr
not
xchg
or
leave
jae
sbb
notl
add
imulb
pop
xchg
lock
and
jnp
ss
in
pusha
ret
jmp
or
sbb
sahf
pusha
int
cwtl
movsb
xor
mov
jg
cmpsl
sub
jecxz
sbb
adc
jge
cmp
test
ud1
add
sahf
xchg
es
divl
jg
lea
xchg
test
icebp
fcoml
mov
lret
les
shl
push
cwtl
and
std
push
mov
stc
ret
inc
les
cmovbe
push
sub
dec
ja
xchg
adc
jecxz
fidivrs
fisttpl
or
scas
sub
clc
mov
and
pop
cmc
dec
cmpsb
or
or
mov
or
add
mov
sbb
clc
ljmp
push
in
sbbb
and
cs
mov
cwtl
mulb
push
mov
in
mov
and
dec
into
stc
add
jbe
inc
sbb
orb
jns
xchg
cmp
rolb
in
subl
mov
andb
rorb
das
scas
push
int
add
jbe
fiadds
sbbb
pop
in
mov
rep
leave
cmp
std
xor
cmpsl
xchg
push
sub
test
sarl
js
or
push
sbbb
loop
test
jg
add
push
mov
xchg
and
es
cmc
das
push
pop
mov
cmovp
pop
inc
cmp
mov
mov
adc
bound
pop
inc
lcall
loopne
pop
repz
rolb
repz
sbb
pop
addr16
sbb
icebp
icebp
leave
xor
cmp
jmp
xchg
outsb
xor
mulb
pop
ret
test
xchg
in
add
test
cltd
pop
fisttpll
dec
sbb
leave
or
xchg
push
xchg
into
add
mov
enter
repz
sub
mov
mov
arpl
pusha
inc
push
ja
and
cmc
cmpsb
imul
sbb
in
adc
in
sub
lahf
popf
addr16
movsb
fmull
dec
stc
shrb
out
jno
xchg
pop
pop
mov
xchg
xchg
xchg
lahf
repnz
mov
jl
xchg
inc
push
mov
jge
mov
gs
adc
icebp
cmpsl
xchg
cmpsb
mov
add
imul
sbb
insb
push
mov
scas
xchg
repz
jecxz
or
insb
pop
mov
xchg
sub
pop
cltd
enter
outsb
dec
mov
jp
push
jp
in
ds
pop
xchg
push
scas
insb
xor
lea
or
xchg
repnz
hlt
sub
sbb
pop
xchg
inc
movsl
push
mov
and
push
adc
pop
test
jno
fisubs
es
in
lds
imul
les
cmp
dec
idiv
ret
cld
sarl
or
inc
inc
jge
nop
je
call
mov
cmpsl
xor
dec
cltd
cmpsb
add
pop
shll
stos
xor
or
cmpb
clc
int
fmulp
xchg
push
imul
and
pop
cli
mov
jg
mov
das
push
and
es
in
inc
shlb
sub
daa
mov
dec
xor
incl
lea
scas
subl
xor
mov
out
sbb
xchg
and
sbb
int
dec
xor
test
aas
push
cmp
adc
push
bound
cmp
lock
in
mov
mov
mov
movsb
push
outsl
cmp
push
adc
rolb
sbb
mov
cltd
loopne
xor
mov
inc
shrb
jle
sub
cmpsb
fistpll
pop
scas
cmp
xchg
xchg
pop
jae
adc
inc
jns
leave
popa
jg
shr
dec
pushf
cld
push
xchg
mov
ret
mov
clc
sub
sub
fld1
jle
inc
mov
scas
push
cmpsb
xchg
call
sub
push
xor
jl
xor
daa
adc
push
jbe
jbe
enter
js
sub
jle
mov
pop
pop
sti
nop
adc
sub
sbb
lods
xchg
jl
add
sti
add
fcomps
pop
xchg
fsubrs
lret
mov
aas
mov
stc
rorl
xlat
in
mov
out
adc
lahf
cli
dec
stos
pop
mov
cmp
ja
mov
insl
xchg
in
mov
int3
push
cmc
nop
loope
xorl
bound
lret
pushf
ror
nop
push
andl
js
xor
jg
in
mov
mov
fwait
adc
movsb
jo
push
jp
seto
and
std
test
mov
addl
xlat
jge
cmp
cli
outsb
xchg
test
cli
and
insl
jbe
jge
pop
out
pop
jno
clc
aaa
inc
mov
sub
inc
sub
jmp
and
push
push
iret
sub
and
jmp
mov
test
xchg
sub
aam
es
jb
lret
push
test
jns
addr16
shll
cmp
mov
lods
mov
hlt
add
xorl
popf
inc
sub
pop
pop
pop
xchg
xor
int3
cmp
fstl
sub
icebp
aad
pop
dec
push
sub
sbb
mov
sbb
inc
das
jbe
cmp
mov
add
push
aas
data16
loop
mov
out
mov
or
jmp
sub
xor
mov
fadd
call
dec
or
jge
jl
lock
add
sbb
sub
lahf
pusha
jb
jl
addr16
jne
cmp
pop
or
cli
lahf
inc
add
aas
scas
xchg
pop
out
or
lret
mov
pop
inc
mov
xor
add
movsl
lods
inc
cmp
pop
cmp
mov
push
addb
inc
pop
aaa
sbb
movsb
add
xlat
nop
fmull
push
pop
mov
lret
mov
xor
push
push
out
ljmp
inc
arpl
popf
sar
enter
jl
popf
cmp
pop
or
jle
outsl
ret
sbb
and
imul
adc
mov
pop
adc
cmp
lds
sub
dec
loopne
xchg
insl
push
adc
and
mov
inc
adc
rcrb
sbbl
cld
rcll
jae
xchg
js
mov
les
jge
pushf
fdivrs
mov
in
and
testl
cmp
mov
cs
sahf
out
cmpsb
or
adc
mov
fisttps
cld
mov
repnz
test
sub
jb
jmp
fsub
mov
repnz
fiaddl
sub
shll
bound
inc
and
aam
and
movsl
mov
enter
andl
movsl
fs
fbstp
dec
lds
or
test
and
push
cvtps2pd
int
fcmovbe
popa
std
fwait
in
jbe
insl
sti
jbe
icebp
add
lds
dec
popf
push
je
add
aad
nop
insl
ss
rcll
push
loope
out
push
lods
and
test
negl
in
cmpsb
dec
add
sub
xchg
and
mov
cld
inc
mov
or
inc
jae
movsl
adc
jns
ja
loopne
stos
dec
clc
mov
fnstcw
pushf
pop
push
mov
push
sbb
outsb
xlat
movsb
mov
nop
pop
jl
fwait
stos
lods
dec
sub
and
jae
imull
add
sti
sbb
bound
gs
mov
adc
es
ss
dec
js
xor
xchg
xor
dec
mov
jae
mov
inc
test
fs
jmp
sbb
push
jge
jae
daa
add
mov
mov
fs
sub
cmp
movsl
cmp
add
push
xchg
jno
push
cmpsl
gs
sbb
pop
test
mov
in
addr16
xor
or
and
jbe
lods
test
sub
pop
adc
xor
pop
std
stos
loop
xchg
imul
test
pop
int
loope
add
getsec
fmull
lock
sahf
repnz
push
pop
sti
jbe
cmc
fisttps
cmp
add
jecxz
je
push
js
testb
iret
mov
movsb
les
mov
jns
fs
and
stc
ja
jb
notb
mov
lods
xor
sub
das
sub
mov
mov
lock
jns
repnz
push
cmp
ds
jecxz
mov
sahf
jl
lret
int3
dec
mov
mov
adc
jns
out
inc
xchg
inc
lds
or
add
lret
xor
dec
sti
pop
pop
mov
jle
fwait
bnd
aas
cmp
popf
loopne
shlb
fidivs
int3
mov
mov
popf
pop
daa
andl
xchg
dec
pusha
aad
test
fldt
loop
mov
dec
cmpsb
icebp
jl
jne
rcll
mov
sti
dec
insl
cli
or
je
lea
cli
cs
out
lret
repz
mov
cmp
fldcw
out
push
jle
pop
sbb
jg
push
dec
and
fisttpll
negb
ja
cwtl
jns
subl
shr
idivb
xchg
mov
xchg
sub
in
push
movsl
in
in
pop
inc
mov
in
mov
jns
mov
ljmp
insb
loop
popf
jl
dec
int3
and
or
cmp
scas
xchg
inc
push
outsb
or
pop
push
jl,pn
in
int3
sahf
scas
xlat
jp
out
sub
pop
mov
es
pop
icebp
inc
cmpsl
pop
popf
std
mov
push
adc
lods
int3
sti
mov
aad
jbe
scas
mov
inc
xchg
movsl
mov
push
std
aaa
xor
stc
adc
fwait
loop
mov
cmpsb
push
add
sbb
shrb
lock
pop
notb
xor
es
push
add
dec
test
mov
ds
jb
inc
lret
ds
sub
pop
ret
push
xchg
xchg
push
and
mov
popa
cmc
into
dec
xchg
mov
roll
lds
adc
add
mov
mov
sbb
add
xchg
loope
mov
sbb
jo
sahf
add
call
push
movsl
enter
pop
jl
popf
push
cmp
test
sub
sbb
xchg
push
mov
rcl
incb
sbbl
popf
sub
arpl
xchg
cld
push
mov
jmp
addr16
lret
inc
test
cld
push
fiaddl
aad
cmc
in
scas
mov
loope,pt
iret
rclb
pop
and
xchg
jbe
ds
inc
scas
icebp
data16
std
stc
push
push
push
pop
outsb
xchg
cmp
sbb
movsl
dec
mov
sahf
popf
daa
loopne
pop
call
sbb
in
outsl
adc
mov
cwtl
cmp
outsl
bound
int
sbb
sub
xchg
adc
mov
or
aas
jge
and
inc
mov
mov
lahf
add
ja
and
pop
ficoml
subb
clc
aas
inc
iret
sub
jg
gs
xlat
shlb
xor
sub
sbb
jnp
or
xor
mov
dec
lret
dec
std
loop
dec
cli
popf
dec
xor
gs
call
lcall
adc
jg
scas
ljmp
jecxz
loopne
les
mov
or
pop
cmp
and
clc
xchg
lret
push
jge
or
repnz
jl
pop
and
fstpt
aas
int3
aas
pop
lret
sub
jo
pop
and
data16
mov
ss
scas
mov
scas
sarl
sbb
clc
or
add
mov
icebp
and
sbb
cmpsl
sbb
or
les
dec
addl
addb
jge
jb
and
mov
push
mov
movl
adc
lock
add
int3
cli
mov
add
das
lods
jmp
std
pop
mov
popf
cmp
pop
lret
inc
repnz
jns
push
cmp
test
test
jo
sub
ss
movsl
jg
jno
in
rorb
popf
xabort
mov
pusha
scas
xor
imul
mov
pop
dec
enter
cmc
push
inc
jo
lds
aad
scas
ss
jecxz
outsl
or
sub
mov
pushf
mov
loop
lods
push
jne
mov
mov
xchg
xor
and
gs
sbb
test
dec
fnstenv
adc
dec
iret
rcrb
pusha
mov
repnz
std
or
pushf
jge
cmp
shlb
xchg
cld
js
mov
enter
sub
test
jbe
mov
sahf
je
adc
dec
push
push
fcompl
push
fs
ds
loope
lods
mov
jne
adc
jp
mov
bnd
xor
aaa
cmc
or
int
or
test
imul
sbb
test
fiadds
lret
push
fsub
inc
cs
sbb
inc
add
mov
std
mov
jne
enter
in
or
andb
ds
insl
arpl
jb
or
test
inc
cmp
pop
pop
mov
mov
mov
shll
dec
mov
ret
mov
push
and
movsl
xchg
and
or
loopne
cmp
push
and
xchg
pop
push
sbb
movsl
sbbb
mov
out
push
hlt
fcmovnbe
pushf
add
dec
pop
ss
mov
sub
pop
data16
data16
lcall
mov
dec
mov
rorl
fldl
int
and
sbb
icebp
fstpl
das
scas
lds
rolb
imul
out
aad
inc
loop
cwtl
fdivrl
pop
sarb
sahf
xchg
mov
insb
insl
xorl
jg
push
sbb
xor
iret
inc
add
movsb
dec
sub
mov
inc
loope
adcb
ja
rcll
aas
pop
pop
ljmp
scas
mull
or
mov
cltd
frstor
and
inc
cmp
adc
xchg
mov
and
shufps
mov
mov
xor
adc
cld
es
cmp
in
xor
scas
jge
out
push
daa
stc
jne
jnp
fdivrl
mov
in
adc
js
imul
sub
sub
call
das
dec
test
in
mov
sub
popa
bound
mov
jns
cs
loopne
dec
jnp
mov
xchg
xor
jnp
mov
test
cwtl
cltd
adc
lock
mov
mov
mov
aas
and
pop
out
adc
and
ja
xor
notl
shlb
insb
in
fwait
inc
movsl
xchg
and
mov
add
xor
imul
jmp
cld
fisubrs
fidivrs
aad
popf
sahf
les
cs
jmp
jns
dec
mov
cmp
inc
mov
add
pusha
lret
sbbw
inc
lock
pop
fidivrs
push
add
mov
sbb
push
test
rclb
divb
dec
popf
movsb
mov
lahf
mov
addr16
hlt
test
into
push
outsl
jg
mov
jmp
jecxz
mov
scas
int
sbb
out
push
cmpsb
in
cmp
mov
mov
adc
push
cs
dec
inc
inc
fs
lock
ja
pop
loope
xchg
bound
ret
sub
in
cmp
shlb
inc
push
and
idivl
popa
push
fildll
dec
xor
xchg
stos
arpl
xchg
fstpt
mov
lahf
sarl
pop
out
xchg
lock
adc
inc
mov
imul
test
add
jbe
xor
push
daa
sbb
cwtl
push
mov
cwtl
cmpsl
add
mov
out
jo
push
inc
and
xchg
std
push
add
mov
pop
call
pop
or
dec
scas
jae
jg
aam
movsl
cmpl
sahf
push
ss
inc
hlt
out
sti
jle
sbb
sbb
scas
std
stos
cmp
aas
mov
xor
fwait
cwtl
and
test
sbb
xor
cmp
lea
cli
mov
adc
or
xchg
repnz
repnz
pop
mov
mov
push
stc
mov
adc
add
es
mov
pop
popa
lods
testl
sbb
sub
lods
sub
jne
insl
in
pop
cmp
push
jnp
dec
pop
dec
addb
cmpsb
xchg
jg
aaa
test
cli
cli
cmp
insl
mov
vmovsd
push
jp
fisubs
cli
ss
out
add
mov
fmull
mov
adc
xchg
ror
cmp
fists
je
aaa
fcmovnb
xor
mov
jge
push
mov
test
mov
pushf
push
lods
sub
repz
cmpsb
pop
add
jmp
fimuls
push
scas
jnp
mov
sti
clc
pusha
adc
sbb
sub
mov
sub
pusha
aas
xor
dec
sbb
mov
sub
xchg
pop
gs
xlat
push
fiadds
and
ret
fistpll
sub
mov
inc
negl
jmp
fs
and
or
dec
test
test
pop
push
fcoms
sti
popa
jae
jb
push
cs
xor
aaa
addr16
dec
gs
out
inc
fcmove
std
dec
jp
sbb
test
aad
lea
push
adc
lcall
ja
or
rorl
sarb
inc
push
iret
jle
push
mov
mov
pop
lcall
add
and
ret
test
xor
xchg
cmp
adc
xor
and
mov
movsb
out
dec
lcall
js,pn
and
js
xchg
cli
push
push
xlat
pushf
or
adc
pop
xchg
jae
sbb
fcompl
mov
in
loopne
jo
inc
ja
mov
xchg
fistps
stos
clc
int3
dec
out
jbe
outsl
push
xchg
imul
jnp
dec
call
fwait
mov
rcll
mov
jne
stos
mov
scas
ret
jg
fdiv
fucomi
and
sub
je
and
jnp
adc
or
cmpsb
or
jp
rcrl
jbe
roll
sub
adc
pop
in
mov
mov
and
add
incl
negb
mov
lds
loop
ja
adc
inc
adcb
out
clc
jmp
inc
aad
inc
cmp
sbb
pop
xchg
mov
and
lds
lahf
push
loop
dec
cmp
loope
mov
out
lcall
pop
mov
mov
icebp
xchg
jmp
clc
les
push
mov
cmpsl
sub
mov
jl
cmpsl
in
clc
in
lods
pop
push
into
enter
mov
and
arpl
or
popa
pop
in
xchg
jg
adc
jno
les
adc
sbbb
test
push
aas
adc
and
mov
mov
out
push
xchg
push
cmpl
dec
call
push
pop
sub
cmp
pop
mov
out
mov
xchg
inc
ds
xor
push
jg
les
cld
mov
test
ds
sbb
sbb
stc
and
icebp
into
and
mov
sbb
add
dec
adc
sub
in
mov
roll
adc
in
push
lds
js
lcall
pop
arpl
mov
cmpsl
bound
pop
fcmovb
and
dec
gs
push
add
xchg
test
fistl
pop
lahf
stos
sbb
cmp
popf
ljmp
mov
nop
cltd
inc
mov
pop
jg
sbb
xorl
loopne
push
sub
and
cli
stos
sbb
push
iret
insb
cmp
and
cmp
call
cmp
sbb
out
sub
push
xchg
lds
cltd
xchg
incb
add
mov
test
adc
and
mov
insl
insl
mov
pop
hlt
add
stos
es
xor
lret
lods
icebp
jnp
dec
mov
xchg
cmpsb
push
jno
or
jp
push
dec
dec
iret
lods
lret
xchg
js
and
dec
mov
in
xchg
sbb
sbb
scas
sti
test
fimuls
push
imul
and
xlat
or
sahf
xchg
movsb
sub
and
ljmp
xor
adc
xor
push
in
adc
adc
cmp
pop
pusha
lods
cmp
pop
cwtl
repnz
imul
mov
inc
nop
dec
or
jno
pop
movsb
out
dec
cmpsl
pushf
sbb
iret
sub
or
ror
lock
lock
div
cmp
mov
or
outsl
jl
and
enter
shrl
add
popf
mov
pop
xor
insl
mov
das
ret
push
in
push
aas
imul
adc
and
xchg
outsb
sbb
fiadds
push
negb
mov
jmp
add
bound
cld
and
mov
and
clc
cmpsl
mov
adc
out
add
inc
cwtl
lds
js
pop
cmpsl
aaa
aaa
cmp
lock
jo
mov
pop
mov
dec
add
mov
in
out
maskmovq
push
push
call
and
outsb
in
lcall
int3
mov
scas
arpl
imul
xor
adc
mov
push
push
mov
xchg
pushf
pop
stos
out
pop
insb
movsw
ret
or
popa
in
jnp
xchg
xchg
and
or
sbb
and
test
outsl
cwtl
mov
add
fidivs
out
sub
sbb
jp
sbbb
cmpl
dec
add
jmp
aad
cmp
je
sub
enter
das
leave
cmpsl
sahf
xchg
ja
mov
enter
sub
adc
insl
adc
aaa
cmpsb
cmc
add
lods
sub
mov
int3
fs
sti
test
stos
jb
popl
insb
sub
mov
fwait
mov
xlat
sbb
enter
push
and
imul
mov
mov
mov
out
negb
dec
std
cmp
iret
pop
adcb
or
mov
adc
out
sbb
jno
pop
mov
and
pushf
outsl
arpl
xlat
jnp
lods
push
dec
pop
ljmp
jnp
scas
pusha
inc
dec
mov
test
loope
jecxz
idivb
fldenv
fmul
add
mov
cli
adc
sub
and
scas
in
mov
inc
fimuls
and
adc
stos
imul
sbb
movsb
mov
es
fldenv
push
push
add
insl
jg
adc
pusha
xchg
jmp
add
out
je
push
fistpll
sbb
add
sti
int
mov
cmc
sub
lret
dec
lret
js
sbb
sub
loopne
xchg
jl
sub
mov
mov
repz
add
ss
cltd
lret
lea
xor
pop
mov
mov
jmp
add
mov
xchg
push
and
cmp
push
and
test
mov
cmp
mov
mov
icebp
push
repz
insb
and
out
out
sub
dec
push
xor
xor
loopne
xor
push
pop
es
cmpsb
xor
xchg
shr
jae
jp
sti
aad
test
sbb
cld
adc
fwait
call
lods
push
cs
cmc
xchg
lcall
xor
dec
mov
outsb
loop
adc
sti
push
lds
jle
mov
addr16
inc
xchg
fidivrs
mull
jle
sysret
cmpsl
scas
rorl
push
pop
fistpll
push
in
mov
or
mov
enter
lret
add
insb
jle
inc
in
push
inc
cmp
sub
or
xchg
daa
jl
andb
dec
test
mov
fwait
xchg
jb
xor
mov
dec
out
fbld
mov
mov
fldt
sub
mov
in
mov
sbb
gs
add
std
mov
push
arpl
repz
mov
push
adc
ret
fucomip
add
adc
shrb
sbb
cwtl
sbb
or
pop
test
xchg
cli
repz
bound
ret
or
nop
gs
subl
xchg
lods
int
daa
mov
out
mov
sbbb
xchg
fwait
adc
shlb
into
cmp
clc
push
dec
imul
xchg
sbb
sub
cmpsb
js
mov
cmpsl
cltd
add
or
jmp
push
mov
dec
sbb
mov
pop
fld
push
xchg
dec
xchg
xchg
insb
data16
xchg
out
shrb
adc
push
insl
data16
mov
dec
sbb
fs
jae
xchg
add
ret
mov
mov
mov
xchg
xor
or
aam
push
test
or
jne
push
sbb
fstps
fnsave
or
outsl
sub
das
add
scas
not
push
mov
or
pop
loop
inc
dec
cld
fldt
inc
mov
scas
push
sub
cmpsb
xchg
push
mov
cmc
xchg
and
stos
xchg
outsl
es
mov
das
in
je
xchg
inc
mov
jp
pop
pop
jecxz
outsb
aas
iret
rcrb
jnp
out
les
aas
and
inc
rclb
call
xor
aaa
aaa
xor
pop
call
or
rorb
aam
mov
xchg
fisubrl
into
call
cmp
and
addb
jmp
add
mov
int
cmp
stc
je
shrl
outsl
out
and
jge
push
andb
push
inc
into
call
dec
push
mov
mov
les
sub
stc
mov
fbld
add
adc
fdivrs
or
xchg
mov
cmp
outsb
push
ds
roll
sub
jge
mov
fdivs
adc
mov
pop
sub
test
or
jns
cs
test
leave
fprem1
pushf
out
lea
mov
pop
push
xor
pop
xor
cli
and
sarb
mov
adc
push
or
test
ljmp
leave
in
jg
outsl
add
scas
cmp
sti
push
mov
ss
jmp
jle
mov
hlt
add
sbb
xor
jae
cs
cli
mov
pop
jg
sub
push
aas
xchg
mov
stos
popa
or
pushf
cmp
or
mov
push
out
push
pop
fisubs
jmp
out
dec
inc
mov
xchg
mov
cmp
daa
lret
mov
pop
sbb
loop
imul
dec
push
jne
and
das
and
jl
ds
sbb
jmp
jnp
insl
dec
sbb
push
pop
or
fsubl
lret
sahf
xlat
adc
add
cmp
push
sti
jb
and
test
push
shl
and
mov
pop
or
ret
inc
dec
jne
fs
xor
nop
js
jne
xlat
aam
ja
stc
nop
mov
psubusb
inc
jo
xorl
icebp
addr16
add
rcll
shlb
out
push
lret
jle,pn
sti
mov
mov
test
and
mov
mov
sub
adc
xchg
aam
push
loopne
cs
xor
mov
mov
sti
cmp
pop
fstps
sbb
mov
jmp
repnz
int
sbb
xchg
push
movsl
xchg
cmp
inc
cmp
jo
rcrb
dec
and
pop
push
jmp
lods
nop
out
cmp
shll
imul
xor
loop
mov
cmc
and
pushf
pop
and
aad
xchg
int3
xor
inc
sbb
mov
push
pop
pop
sub
enter
jbe
sub
andl
xchg
ja
gs
fildl
ficompl
js
cld
sarl
loop
mov
cld
lret
xchg
mov
inc
popa
lods
and
xchg
cmp
test
pop
cmp
push
jg
scas
sbb
or
aas
dec
sahf
and
cmpb
fists
bound
push
cmp
xlat
ficoml
stc
and
fbstp
jg
add
adc
test
push
dec
scas
scas
in
sub
mov
fwait
push
mov
pop
jle
cli
mov
leave
mov
ja
sub
stos
dec
lret
js
xchg
imul
aas
popa
loope
or
sbb
cmp
sub
sub
mov
mov
jecxz
lock
inc
xor
int3
xchg
mov
ljmp
jl
fildl
fistps
loopne
or
fbstp
stos
pop
stos
mov
jg
xchg
sbb
fisubs
and
iret
imul
out
test
movsb
mov
pop
mov
xchg
pop
push
sub
outsb
xor
clc
enter
shlb
jo
adc
outsl
into
movsl
dec
xor
sub
add
mov
rol
mov
sti
push
lds
arpl
mov
test
in
inc
cmp
repnz
cmp
pop
dec
icebp
adc
add
xchg
or
sbb
and
std
jg
pop
adc
sti
cmp
sub
sub
mov
pop
loope
imul
mov
jne
push
jge
pop
lods
insb
xor
mull
jge
cmp
mov
push
das
add
arpl
pop
mov
xchg
mov
sbb
insb
jb
jmp
xchg
mov
adc
or
fisubl
inc
cmp
mov
jmp
sbb
jo
mov
mov
sarl
mov
popa
pop
jo
mov
dec
pop
lcall
call
std
imul
mov
stc
adc
dec
push
iret
inc
xor
popf
mov
xor
jge
mov
xor
repnz
rcrb
jb
lea
lea
lea
lock
outsb
rorl
xchg
lds
leave
sbbb
pop
mov
cmp
loopne
cs
lods
cld
pushf
sub
adc
test
and
mov
ss
push
mov
lods
adc
ret
push
loopne
dec
mov
push
dec
or
andb
add
sub
add
push
je
jle
add
popf
mov
add
mov
je
adc
bts
aas
adc
jg,pt
lock
stc
scas
cmp
imul
or
outsb
adc
out
divl
mov
imulb
hlt
nop
xchg
scas
add
test
jns
inc
jnp
mov
and
mov
lods
mov
lods
loop
iret
aas
shl
aam
xor
gs
test
adc
sub
inc
mov
shlb
mov
or
jmp
test
cltd
sub
insl
ja
ds
fistl
aam
push
jnp
lahf
mov
add
xchg
icebp
bound
lds
arpl
loopne
xchg
jb
ret
add
jns
cs
xchg
in
push
mov
pop
lods
bound
mov
mov
testb
mov
lret
ljmp
out
sub
mov
jo
or
das
aad
adc
lret
gs
mov
jnp
push
mov
imul
aas
jle
mov
inc
xor
loop
cmpsl
inc
pop
movsl
jmp
mov
lods
add
or
icebp
shl
ror
jecxz
jnp
jns
fwait
rol
mov
imul
ror
push
loope
pop
ss
orb
xchg
pop
popf
xchg
imul
jl
into
out
jo
in
cs
ss
shlb
out
mov
xor
out
lcall
mov
or
cmp
pushf
jl
xchg
mov
repz
jecxz
inc
mov
ficoms
xchg
or
or
xlat
inc
ret
shrl
fisttpl
pop
out
xchg
mov
add
cltd
xchg
xorb
add
cmp
fcomps
inc
jecxz
push
jnp
iret
ret
xchg
lcall
mov
and
cld
in
sub
dec
rclb
add
mov
ljmp
mov
push
inc
js
outsl
arpl
loop
jne
data16
xlat
mov
lea
fistpl
sub
lret
sub
jge
stos
sub
ss
out
icebp
sub
sbb
shlb
cmpl
aad
arpl
pushf
cmpsb
test
fistl
stos
dec
aas
pop
mov
push
cwtl
clc
pusha
mov
adc
cli
clc
push
dec
mov
ss
adc
pop
shll
stc
inc
movsl
inc
sahf
mov
insb
add
int
cmp
push
xlat
lea
push
scas
jb
add
pop
cmp
or
adc
insb
and
jno
movsl
in
pop
xchg
push
iret
sbb
fwait
xchg
pushf
ret
dec
jae
cwtl
xchg
pop
xor
push
testl
lods
loope
inc
pop
mov
cmp
insb
mov
adc
and
stc
jl
inc
or
jno
in
test
hlt
js
movsl
jg
pushf
and
idivb
aam
test
mov
mov
jbe
repnz
hlt
mov
mov
jne
jmp
addl
fst
jae
lret
mov
arpl
mov
adc
test
lcall
fwait
outsb
cs
pop
jmp
scas
pop
add
mov
add
inc
mov
ds
stos
xchg
jp
pop
pop
aas
mov
jle
push
cld
or
inc
imul
xor
push
movsl
sub
dec
jmp
pop
iret
xor
dec
sub
cmp
xchg
xlat
notl
or
fs
rcl
sbb
mov
xchg
int3
mov
loop
sub
mov
mov
jge
outsb
xor
ret
sti
gs
sub
mov
aad
or
fsubp
lds
inc
enter
jecxz
stos
test
sahf
test
repnz
mov
rcrl
add
scas
lods
cmp
add
int3
inc
pop
and
lods
sbb
xor
arpl
sbb
sbb
fcmove
outsb
pop
and
imul
cmpsl
pop
inc
cwtl
pop
lods
lods
jnp
mov
xor
sub
sti
lcall
sbb
xchg
mov
dec
push
mov
in
xchg
adc
popa
in
sbb
mulb
arpl
xchg
sub
call
insl
shlb
dec
and
sub
add
adc
pop
dec
xor
inc
stos
imul
mov
or
add
insb
mov
jle
dec
out
xchg
pop
lahf
ljmp
mov
and
mov
std
xchg
jmp
idivb
dec
cmp
mov
jne
test
sbbl
dec
pop
and
add
sub
movsl
outsl
and
fcomp
lcall
cmp
sub
leave
xor
rep
scas
les
ljmp
and
out
adc
inc
add
movsb
out
lods
push
decb
add
lret
and
sbb
dec
iret
fnstenv
and
inc
leave
and
into
fisttpll
jb
inc
insl
insb
xchg
and
loopne
xchg
and
pop
hlt
pop
rolb
inc
ret
pop
ds
mov
push
xchg
cwtl
data16
les
es
pushf
imul
mov
xchg
xlat
movsl
jge
mov
xor
push
sub
dec
push
sub
icebp
sub
lods
enter
xchg
jb
shll
ds
das
dec
std
sub
dec
popf
lods
dec
mov
mov
mov
jae
mov
scas
pop
inc
adc
ret
test
or
and
pop
add
loop
xchg
adc
mov
mov
xlat
ret
xchg
xor
adc
push
test
fdivp
cs
pop
mov
cmc
ds
js
cltd
or
fsubr
ljmp
pop
xchg
mov
mov
mov
cli
cmp
lahf
jp
jne
push
sbbb
push
in
xchg
or
addr16
mov
adc
add
mov
cmpsl
push
shll
push
cmp
pop
lahf
pusha
sub
ljmp
mov
aas
jge
in
and
faddl
adc
push
stc
dec
cli
fldcw
jge
lahf
lcall
in
loop
sbb
lret
cmpl
push
and
xchg
leave
lods
mull
xlat
mov
shrb
fsubrl
stc
idiv
xchg
mov
pop
push
shrl
cwtl
lods
incl
and
out
xlat
add
mov
xchg
mov
mov
mov
aas
rcll
ljmp
icebp
rolb
in
lret
adc
mov
jne
sbb
insl
xor
jecxz
lock
loop
int3
push
add
and
cmp
xchg
mov
pop
shrb
pusha
mov
cmp
push
lahf
dec
jnp
js
shlb
shrb
push
jmp
pushl
adc
nop
nop
add
xchg
mov
cmc
lds
pop
adc
sub
scas
cld
les
div
mov
outsb
dec
outsl
mov
push
xor
jg
mov
clc
dec
push
into
aad
add
pushf
js
es
loopne
popf
stos
mov
mov
jl
mov
addl
pop
addr16
mov
dec
and
push
or
inc
jo
adc
lret
sbb
or
pop
jmp
lods
out
add
mov
sbb
aaa
dec
push
sub
pop
add
pop
lds
leave
stos
jne
xchg
push
xchg
fsubr
cmp
sbb
jnp
mov
clc
adc
inc
leave
add
xchg
adc
pop
mov
movsb
dec
sarb
and
cmpl
adc
je
psubw
stos
aaa
jne
jae
inc
sahf
and
or
das
fildll
insl
rcrl
sub
aaa
cs
aas
jno
dec
mov
out
mov
ret
and
jno
stos
shr
xchg
jmp
mov
sbb
pop
push
mov
adc
cmp
sub
andb
fwait
cmc
mov
or
clc
adc
call
cmp
aad
jb
push
cltd
insb
mov
lcallw
pop
pushf
mull
les
leave
iret
jp
add
stos
or
ds
push
inc
dec
mov
ljmp
pop
jo
push
sahf
add
jg
push
inc
cmp
sahf
fistl
out
xor
fcmovu
mov
shrb
rorb
cltd
cmp
cmpsb
dec
xor
sub
xor
rsm
sbb
lods
mov
lods
xchg
dec
mov
push
inc
inc
add
mov
int
xor
xchg
das
mov
icebp
rol
ljmp
and
pop
imul
cwtl
shlb
pop
popa
sbb
je
push
and
add
add
repz
sub
jle
jl
dec
mov
sub
and
cs
mov
sbb
loop
mov
cmc
jbe
dec
xchg
inc
repz
fstpt
and
push
or
adc
jne
add
imul
inc
push
jno
movsb
mov
imul
jle
je
inc
adc
inc
push
sbb
dec
ficoms
out
jae
rorl
sarl
pop
mov
sbbl
mov
inc
in
dec
mov
das
mov
push
push
gs
iret
push
xchg
adc
aam
rcrb
and
loop
sahf
ds
imul
arpl
or
jl
inc
xor
jle
ljmp
jne
int
fsubl
sbb
addr16
fmull
dec
xor
imul
ljmp
ds
iret
loope
mov
stos
mov
lods
mov
and
gs
notb
push
aam
cli
stos
sub
insl
sahf
sub
mov
or
and
fs
aas
cltd
pop
inc
cmp
push
jb
ja
mov
mov
cli
jns
mov
xchg
ljmp
dec
push
or
jmp
out
ret
adc
adc
or
frstor
in
aaa
jb
and
cmp
dec
ret
mov
bound
ret
cmp
call
ret
jmp
push
mov
mov
sub
and
sarl
mov
das
or
xchg
or
inc
insl
sub
int3
mov
stos
xchg
mov
fwait
js
and
push
cmpsl
test
imul
sub
out
dec
push
push
call
shrl
scas
inc
xchg
jge
andb
gs
add
adc
inc
push
xchg
scas
xchg
adc
hlt
ret
cli
add
push
pop
mov
test
outsl
push
push
mov
lods
lock
jns
or
outsl
add
xchg
xchg
mov
nop
std
out
inc
popa
mov
xchg
pop
inc
ss
bound
in
and
mov
cmp
pop
adc
push
pushf
inc
xor
stc
clc
inc
test
lods
out
cmpsb
out
and
aaa
dec
jne
lret
sub
mov
xchg
cmp
imul
or
rclb
push
jge
mov
fistpl
mov
jl
in
or
repnz
in
inc
pop
lods
or
cmp
dec
fs
std
fsubl
sbb
fidivrs
cmpsb
xchg
inc
and
lcall
popa
stos
sbb
push
icebp
cmpsl
mov
loope
pop
ljmp
aaa
mov
mov
popa
inc
ret
cmpsl
loop
mov
mov
mov
xor
les
push
add
add
pop
and
mull
fldl2e
mov
jl
push
out
fiadds
aad
or
add
ficoms
xchg
push
push
sub
pusha
shrb
stc
js
mov
lfs
add
add
inc
dec
subl
cmp
out
xorl
loopne
dec
fwait
pop
cmpsl
fcmovne
pop
enter
nop
pop
jne
xchg
and
into
xchg
xchg
sbb
stos
out
mov
fcoms
pushf
xor
cmpsl
mov
movsl
scas
movsl
jns
nop
mov
jne
jae
xchg
jmp
out
icebp
xchg
loopew
ss
idiv
jle
mov
add
xchg
imul
inc
inc
fisttpl
pop
aam
repz
and
ret
lods
outsb
sbb
sarl
jl
ljmp
ds
popf
ljmp
inc
mov
rclb
je,pn
add
dec
push
loope
xchg
sub
outsl
sbb
xchg
xchg
dec
int3
xor
add
inc
push
sbb
clc
imul
mov
orb
jne
mov
dec
out
insb
push
mov
popf
sarb
dec
mov
pop
or
cmc
ret
cmp
cltd
scas
xor
insl
push
lcall
sub
pop
loope
xor
sub
mov
add
lret
stc
outsb
adc
sbb
lret
je,pt
xchg
movsb
stos
shrl
and
inc
xchg
add
cmp
xor
push
pop
push
sbb
movsl
cwtl
out
mov
jnp
mov
je
mov
out
out
scas
push
into
pushf
push
pop
push
push
inc
lock
xchg
cltd
out
mov
sbb
mulb
add
sub
adc
jg
push
adc
hlt
jnp
adc
loopne
in
and
sub
hlt
pop
jne
rcrl
pushf
sbbb
cld
aas
push
inc
popf
push
jns
and
jge
scas
fsts
ja
iret
fs
cld
xor
dec
hlt
mov
and
insl
xchg
lret
fwait
jle
mov
push
adc
mov
cld
int
rcr
out
les
jo
in
xor
mov
pop
push
fdivrs
sub
repz
pop
inc
cmp
inc
mov
mov
jb
and
dec
hlt
add
adc
jbe
lcall
arpl
sub
mov
mov
mov
fcomps
aas
inc
mov
mov
aad
cmpsb
pop
daa
xchg
test
pop
jb
ror
cmp
or
andl
pop
ss
lahf
filds
xchg
stos
fildll
fwait
aas
and
stc
fnstsw
or
mov
push
cmp
fs
dec
lret
cs
fwait
scas
ret
cmp
insl
cmp
inc
adc
inc
mov
add
mov
pop
sub
mov
out
pop
arpl
hlt
xlat
push
fiaddl
adcb
outsb
nop
outsl
mov
mov
nop
mov
nop
or
sbb
adc
adc
cmp
js
sub
inc
pop
fwait
cmpsl
addr16
add
lock
ret
lret
bound
jns
cmp
xchg
fdivrs
insl
or
mov
roll
int3
jecxz
mov
in
popf
jecxz
adc
pop
lret
daa
mov
pop
dec
sbbl
xchg
mov
xchg
pop
bound
jb
push
test
cli
out
loopne
cmp
pusha
jp
cmpsb
jmp
sub
jge
je
in
xlat
sub
fsubl
mov
xor
jne
inc
fisubs
adc
xchg
addr16
cltd
cmpsl
mov
mov
push
xchg
sbb
dec
jecxz
xchg
lret
xchg
outsl
frndint
test
cmp
dec
jl
push
sbb
jnp
mov
insb
out
cld
js
cmp
mov
cli
cwtl
fsubp
in
pusha
addr16
dec
dec
aas
fwait
mov
into
daa
adc
push
or
add
xor
icebp
mov
daa
jmp
or
imul
mov
xchg
jmp
mov
sub
xchg
adc
or
cld
lds
xorb
rorl
cltd
sbb
in
cld
adcb
mov
fistpl
push
rclw
fisubs
pop
out
lods
ffreep
cwtl
inc
test
sbb
push
xchg
adc
dec
jne
push
aas
in
xor
push
lods
cmp
and
fldl
inc
rcl
scas
push
dec
test
imul
std
andl
xor
ss
fwait
lods
jbe
les
sti
sbbl
xchg
test
xor
xchg
test
insl
ret
jb
inc
aas
mov
adc
in
or
xchg
push
xor
xchg
ret
cmp
dec
sbb
push
test
shlb
cli
out
hlt
pop
mov
ror
mov
imul
loope
xor
pop
lods
cld
test
je
or
push
sub
xor
jp
mov
pop
std
je
iret
bound
js
sub
lret
push
push
out
sbb
jecxz
adc
setle
mov
dec
add
dec
lods
cmp
mov
mov
mov
sub
xor
pop
outsb
call
dec
in
mov
dec
cmp
jmp
stos
sub
cltd
mov
adc
jge
in
jb
xchg
xor
rcrl
mov
and
dec
sbb
fidivl
orw
xorl
fcompl
fldcw
lcall
out
cmpsw
push
jne
fwait
push
outsl
ret
imul
add
repz
sbb
sbb
add
mov
lret
pop
xchg
jnp
push
mov
out
cmc
out
cmp
xor
lds
adc
cmc
popf
insl
xchg
inc
dec
sbb
cmpsb
into
sub
cwtl
jle
cld
lahf
mov
cmp
add
inc
add
inc
pop
xchg
adc
sub
add
insb
fisttpl
xchg
adc
jb
pop
adc
sti
push
cmp
ret
dec
int3
jg
and
movsl
dec
gs
mov
inc
xor
fs
sub
insb
jbe
mov
mov
mov
imul
inc
push
mov
int3
adc
in
shll
fstpl
cmp
mov
mov
jg
mull
bound
rep
jmp
xchg
adc
andl
pop
sbb
jno
decl
stos
pop
clc
scas
repz
ret
adc
cmp
xchg
xorb
lds
pop
repz
push
and
mov
sbb
push
loope
dec
out
sbb
lock
enter
outsb
fdivl
nop
or
cmp
or
call
sub
xchg
mov
mov
mov
and
mov
filds
jmp
clc
out
lock
cmpsl
fnstsw
lahf
or
pusha
inc
jle
movsb
not
jle
xor
and
sub
popf
adc
mov
pusha
outsl
rcl
stos
inc
pop
and
fimull
pop
bound
push
and
gs
lret
insb
mov
int
sahf
and
jo
pop
sub
sub
mov
pop
xcrypt-ctr
cmpsl
cltd
and
cli
cli
arpl
inc
adc
pop
test
push
fisttpl
lock
loopne
fcompl
xlat
inc
or
test
lods
sbb
mov
xor
lahf
pushf
das
ret
stc
or
rorl
pop
mov
push
enter
ljmp
bound
and
int3
insl
jb
call
shll
xor
mov
push
cli
int
push
je
cltd
sub
ds
jle
and
add
sbb
lock
push
jae
ljmp
and
test
xchg
mov
sbb
adc
dec
shrb
adc
repz
mov
lods
iret
pusha
sti
fists
push
jle
inc
in
mov
sub
push
or
daa
lds
pop
mov
cmc
xor
sbb
jp
mov
call
idivl
ret
sti
cs
cmpsb
ss
sbb
das
pushf
push
imul
test
sbb
jbe
iret
mov
inc
loope
xchg
xchg
xchg
sub
mov
cmp
mov
shr
fimuls
nop
inc
and
leave
jo
xlat
ss
stos
in
pop
movsb
push
scas
sub
add
js
or
xchg
icebp
lret
orl
mov
add
aam
mov
push
mov
push
xor
sar
leave
adc
push
push
mov
mov
arpl
out
daa
mov
outsb
mov
das
fldt
sti
aam
push
mov
into
adc
push
loop
xchg
inc
popa
inc
jns
cmp
jmp
das
loop
in
push
mov
xchg
push
fstl
jmp
pop
into
cmp
sbb
fisttpl
jbe
leave
xor
roll
dec
sbbl
push
loopne
push
xlat
addr16
lods
rep
add
aam
jnp
mov
loope
mov
stos
xor
out
adc
gs
mov
add
inc
xor
add
and
cli
sbb
inc
popf
mov
and
lock
push
mov
inc
sarl
pop
out
push
fisttps
sub
lods
cmp
sbbb
cwtl
out
jns
cli
xor
aam
cmp
aas
out
push
cmp
mov
rcrb
lahf
ds
pushf
shll
sub
sub
mov
push
mov
icebp
cmc
mov
ds
pop
mov
push
subb
cltd
and
jae
mov
inc
adcb
jb
jb
jne
paddsb
add
scas
out
sub
jns
jl
mov
das
xor
xchg
xlat
call
pushf
add
pop
cvtpi2ps
mov
repz
mov
fisubl
push
xchg
in
rcrb
sub
xchg
gs
push
faddl
sbb
jg
xchg
push
sbb
shrw
in
sbb
das
or
jns
imul
push
imul
popf
inc
lea
fisubl
mov
adc
ss
in
jp
cmp
or
mov
mul
icebp
insb
scas
xlat
es
and
push
in
js
adc
bound
mov
imul
jae
xchg
aas
ss
into
push
mov
inc
or
xchg
dec
add
hlt
inc
sbb
pop
ds
aam
pop
aas
fldcw
xchg
addb
pop
loope
ds
fucomip
dec
and
or
push
mov
fiadds
jg
mov
lea
sbb
cmpl
add
ss
daa
push
loopne
xchg
out
push
xor
add
sbb
jp
xlat
cltd
inc
insl
xor
scas
cmp
call
jg
mov
sar
inc
mov
popf
div
sub
lret
lea
push
inc
ret
xchg
adc
shll
call
scas
push
xchg
mov
fcoms
mov
mov
scas
cmpsl
or
pop
fstpl
popf
mov
movsl
xchg
stos
pop
hlt
cmp
mov
mov
enter
jb
push
lret
xchg
mov
sti
addr16
aad
pop
mov
dec
outsb
inc
scas
jnp
loop
add
rcl
sbb
xor
mov
cwtl
test
in
dec
enter
repz
fstpl
stos
out
popf
xchg
out
lds
adc
push
mov
inc
adc
iret
lret
in
negl
push
sub
out
enter
test
sarb
cmp
mov
cmp
out
repnz
and
xchg
push
push
lds
lahf
jbe
sahf
aad
sbb
dec
add
movsb
mov
fisubrl
out
mov
loop
and
bound
push
mov
and
into
fidivrl
ds
mov
test
mov
jle
outsl
sbb
mov
mov
or
mov
add
fwait
push
scas
cs
pop
fyl2x
xlat
les
fisubrl
jb
inc
xchg
ss
lahf
xchg
sbb
icebp
cld
fldcw
pop
xor
mov
mulb
ss
ret
push
lods
mov
pop
sbb
jae
scas
outsl
inc
xor
sub
xlat
imul
int3
push
pop
push
push
push
push
in
mov
sbb
idivl
cmp
lret
fsubr
fldl
mov
mov
hlt
outsl
sub
or
jb
mov
mov
fstps
push
pop
add
loop
mov
jns
mov
arpl
jecxz
push
js
xchg
mov
fistpll
das
sbb
iret
movsb
sub
xor
mov
push
add
lea
arpl
fcmovne
jp
sbb
and
in
sbb
and
or
mov
pushf
clc
cmp
stos
dec
into
mov
add
push
push
and
push
cmp
test
fstpl
xchg
sub
ret
push
and
ljmp
leave
jae
jl
cmp
loop
repz
and
xlat
pop
ret
or
mov
mov
fldcw
pop
bound
pop
add
adc
xlat
jle
std
loop
xlat
cmpsl
ss
negb
dec
pop
mov
dec
mov
into
sarl
mov
lret
push
out
ss
xchg
push
and
fmull
lods
and
fiaddl
push
sub
sub
jne
cmp
push
push
or
into
fs
pop
daa
push
pop
inc
push
and
jmp
dec
mov
subl
jg
out
mov
outsl
testl
pop
and
rolb
pop
add
mov
dec
xor
mov
pushf
pop
pop
leave
lock
int3
outsb
push
fadds
shll
pop
push
aam
push
cmp
repz
aas
xorl
rcl
mov
dec
lods
mov
clc
addb
les
adc
imul
mov
pop
js
mov
jnp
xchg
mov
call
xor
add
jb
icebp
stos
in
sbb
jmp
inc
andb
es
gs
stc
mov
iret
int
in
xor
adc
jb
leave
or
xchg
into
xor
popf
jl
jge
repz
pop
mov
pushf
arpl
xor
adc
sub
fnsave
ret
sbbl
dec
inc
xchg
cmpsl
aam
dec
call
dec
mov
mov
pusha
dec
mov
daa
cmp
lods
cmp
ds
cwtl
ficoms
aaa
stc
mov
iret
into
aas
jo
sub
jbe
cmp
xchg
fcmovb
mov
mov
cwtl
dec
out
inc
dec
jb
push
js
jbe
mov
xchg
jno
test
and
mov
fildll
xchg
inc
xchg
cli
imul
in
int
dec
mov
fidivs
mov
into
jp
lea
imul
rcrl
sahf
mov
dec
in
mov
fistpll
nop
fs
xchg
mov
iret
out
dec
push
pop
in
out
jmp
mov
sub
cmp
mov
jo
scas
inc
sahf
out
push
mov
mov
dec
sub
clc
stos
stos
fistpl
or
mov
mov
dec
sbb
and
into
testb
sub
dec
xor
aad
inc
adc
imul
test
sti
sbb
pop
ret
inc
test
mulb
scas
inc
dec
fisubl
jge
sub
std
cwtl
fdivs
cmpb
dec
call
gs
cmp
add
pop
sbb
out
xchg
mov
mov
fadd
push
jle
lds
gs
cmp
inc
push
pop
and
cmp
dec
bound
out
es
mov
fidivs
xchg
jmp
mov
cld
sub
cmc
fisttps
es
inc
dec
adc
popf
lret
adc
fmull
insb
enter
pusha
les
inc
out
movsl
mov
jno
out
lcall
mov
dec
fsin
add
outsl
cs
pop
push
ljmp
cmp
sbb
mov
mov
daa
out
sub
adc
sub
add
jl
out
scas
mov
sbb
movsl
arpl
sahf
pop
lret
and
ror
sub
fbstp
push
stc
pop
xor
pop
test
test
subb
lds
mov
aaa
jo
adc
lahf
iret
repnz
jae
mov
lcall
rcrb
xchg
leave
xchg
cld
mov
and
adcb
out
outsl
cwtl
cltd
not
scas
dec
cmpsl
push
pushf
rcrl
sbb
mov
jbe
cmpsl
leave
lret
sub
mov
add
mov
sub
pop
xchg
mov
push
mov
test
pop
ficompl
cmpsl
mov
cmp
jmp
ss
cmc
cltd
adc
sbb
fs
mov
sarb
arpl
arpl
add
push
sbb
jbe
and
mov
inc
xor
xchg
adc
in
push
es
dec
pop
pop
mov
pcmpeqd
and
lods
cmp
push
imul
iret
dec
data16
out
insb
ret
neg
addl
sbb
mov
jge
jmp
inc
sahf
pop
lods
fcoml
push
adc
pusha
out
and
fildll
xchg
mov
aad
and
das
jae
push
dec
adc
xchg
imul
or
mov
cwtl
mov
inc
cwtl
lcall
jmp
mov
pusha
cmp
sbb
stc
pop
fcmovnu
lods
pop
add
adc
std
mov
push
lds
sti
dec
out
inc
jb
rorl
lods
jecxz
push
inc
in
paddusb
sub
add
mov
pop
out
leave
popf
inc
sbb
pop
mov
stc
bound
lret
mov
inc
push
and
fmuls
xchg
push
loope
in
dec
mov
cmp
stos
lret
mov
rclb
mov
pushf
iret
arpl
push
sbb
test
shrb
inc
xor
xor
enter
in
jmp
fisubl
pop
movsl
aad
mov
clc
int3
jp
stos
push
lret
push
jo
imul
ret
clc
stc
mov
pop
sub
xor
dec
je
shl
test
mov
sbb
cltd
setp
aaa
mov
mov
and
dec
dec
ss
call
cmovnp
in
cmp
int
adc
sarl
xchg
mov
add
mov
pop
xchg
cmp
sbbl
adc
rcll
mov
dec
push
out
or
adc
ljmp
ror
jo
and
mov
aad
jmp
cmp
notb
shll
push
adc
jmp
ret
add
daa
inc
in
fs
lock
sub
push
and
loop
xor
incb
jbe
insl
fst
xor
pop
ljmp
mov
cmc
lea
push
push
mov
pop
dec
idiv
nop
or
push
data16
popf
inc
jno
arpl
loope
loop
cs
xlat
add
outsb
sar
insl
pop
inc
or
xor
stos
or
pop
pop
and
notb
cs
xchg
mov
push
pusha
mov
or
jp
in
mov
xchg
push
push
xor
loop
mov
inc
xchg
cmp
jmp
dec
push
outsl
aam
push
xor
xor
jl
xchg
sbb
es
popf
mov
mov
push
dec
jl
xchg
out
add
iret
out
popa
pop
movsb
cltd
mov
les
das
fdivrs
aam
out
push
cs
adc
or
sub
xor
sbb
inc
clc
hlt
punpckhbw
and
les
out
pminub
hlt
movsb
adc
inc
clc
and
icebp
sti
icebp
push
bound
push
lea
movsl
and
loope
mov
sbb
inc
repnz
int3
lds
test
pop
outsl
adc
xchg
test
sbb
adc
test
into
fwait
cmp
std
cld
and
add
stos
sarb
xor
je
push
mov
movsl
pop
daa
insb
ror
mov
inc
jns
addr16
pop
or
decb
rorl
nop
popf
xchg
xchg
mov
push
cmp
add
sahf
mov
leave
cmpsb
dec
in
mov
cmp
call
mov
add
cmp
xchg
xor
lea
loopne
xchg
and
add
imul
push
test
xchg
and
cmpsl
add
inc
std
dec
jp
sub
outsb
sarb
fidivl
push
dec
sbb
ljmp
or
mov
or
ss
jns
repz
lds
in
aas
sbb
dec
movsb
or
adc
mov
call
mov
popl
or
imull
jae
xor
call
push
mov
insl
mov
sub
shll
pop
arpl
pop
sub
fld1
ja
loopne
xor
sti
mov
inc
pop
cmpsb
and
sbb
iret
ja
lret
fidivrl
cmc
cli
arpl
adc
dec
sbb
mov
push
xor
lods
sbb
xor
rol
sti
sti
in
lret
clc
into
mov
add
pop
and
add
cld
lahf
add
jnp
pushf
cmp
aad
ljmp
xchg
push
cmpsb
xor
dec
pop
sub
dec
inc
cmp
icebp
mov
je
jbe
jge,pn
pop
enter
data16
sahf
fadds
test
push
push
cmp
push
lock
shll
roll
test
repz
xor
push
add
sub
call
mov
push
cmpsb
xor
dec
jmp
imulb
leave
push
cmp
sub
and
sub
add
mov
orb
and
imul
sbbb
push
lcall
add
jecxz
or
and
bound
xchg
adc
cmpl
addl
iret
push
add
fidivs
fnstsw
inc
test
movsb
fcomps
mov
cmp
mov
fisubl
out
mov
push
and
mov
push
inc
push
sti
and
sub
dec
dec
jl
js
test
and
sbb
sbb
sbb
lret
icebp
pop
mov
dec
push
int
jl
add
cltd
je
sbb
xor
and
lret
jl
out
inc
jb
int
in
hlt
shlb
cmp
pop
outsb
je
aad
jns
jbe
sbb
xor
stos
cwtl
jae
sub
mov
jne
rcl
jne
mov
test
aaa
into
cmc
stc
xchg
pop
pop
icebp
jmp
jns
shr
and
and
out
mov
jbe
ficoms
test
push
inc
lcall
movsb
pop
stos
jb
jp
adc
or
lahf
push
in
add
cwtl
xor
or
imul
cmp
dec
int3
inc
out
out
cmp
ja
push
rclb
inc
sbb
sub
shrl
pop
hlt
imul
inc
sub
push
mov
mov
jns
xchg
mov
cmp
addr16
sar
and
js
cmpsl
jmp
xchg
push
mov
mov
xor
mov
add
add
cmpsb
push
inc
xor
cmp
das
ret
mov
adc
xchg
xchg
jae
out
aam
stos
xor
popf
rclb
cmp
cmp
fadds
or
push
mov
insl
in
pop
add
negl
inc
ds
jge
xor
dec
pop
push
dec
fbld
sub
stc
out
push
mov
jbe
mov
test
mov
mov
fs
leave
popa
push
ljmp
test
aam
cmp
jl
in
xchg
cmpsb
xlat
adc
or
add
pop
mov
psrlw
sbb
out
mov
mov
add
jo
cld
test
or
adc
sbb
xlat
lods
mov
ret
dec
adc
mov
or
test
lea
xor
jp
mov
daa
pop
inc
in
xor
sbb
lock
and
jno
xor
adc
hlt
shrd
fistpll
xlat
mov
fs
int3
shll
in
dec
lret
ljmp
loopne
sub
addb
and
pop
mov
and
inc
sarb
xor
sub
movsl
lea
and
mov
push
mov
dec
bound
push
into
lret
mov
addr16
dec
flds
ret
cmp
or
cs
pop
dec
mov
fnstsw
out
xchg
insl
scas
test
stos
sbb
xchg
mov
lret
daa
sbb
scas
cmpsb
sub
dec
dec
adc
xlat
sbb
mov
sbb
int
mov
and
imul
jae
mov
aaa
adc
js
mov
and
loope
orb
push
jmp
mov
stos
jecxz
and
mov
inc
into
jbe
and
push
in
sbb
xor
and
dec
xor
inc
outsb
xchg
jb
repz
ficoms
mov
sbb
mov
add
or
mov
std
jge
jmp
push
xor
out
inc
jae
fistpll
sbb
mul
dec
mov
lods
divb
dec
in
insl
cmp
jne
les
test
jb
xorb
and
sbb
cmp
movsb
or
std
push
inc
pusha
test
pusha
ret
sub
pop
jecxz
or
inc
cmpsb
cli
popf
sarl
adc
ret
cmpsl
call
pusha
repz
pop
xchg
movsb
orb
inc
in
cmpsb
cmp
xchg
push
outsb
pop
adc
outsb
shlb
sti
inc
nop
jp
loopne
push
inc
adc
daa
mov
dec
mov
mov
repz
xchg
push
leave
sub
add
lcall
add
or
fistps
lods
scas
pop
je
xor
and
push
insl
out
mov
sbb
add
ret
fistl
lds
enter
bound
lods
ret
call
mov
fcoms
cmpsb
test
je
rcll
cmp
sub
int3
xchg
or
scas
ror
outsl
mov
dec
xchg
add
fnsave
xor
das
jl
cmp
adc
rcrb
cmpsb
cmp
xchg
xchg
push
dec
addr16
inc
xlat
in
sub
test
xlat
push
cmpsl
lea
jge
dec
or
inc
pop
xor
pusha
lods
dec
cmpl
in
pop
lahf
outsl
sarl
aas
mov
inc
fisubrs
loop
cmp
test
pop
push
add
xor
sbb
xchg
sub
xor
sbb
test
test
mov
aad
movsb
and
insl
insb
push
mov
ficoms
mov
test
and
mov
adc
inc
fbstp
aaa
std
xchg
orb
fnsave
das
das
hlt
dec
mov
cld
lods
mov
add
cltd
dec
dec
fs
sub
loope
mov
cld
es
cmp
add
ljmp
ret
cs
cmp
mov
lea
in
xchg
xchg
inc
jae
inc
test
push
js
xchg
gs
dec
ljmp
enter
jl
jle
jb
lret
outsb
stos
adc
fucom
test
sub
jmp
call
lock
cmp
mov
xchg
das
addl
jle
test
inc
xor
cmp
popa
cli
cmpsb
lcall
icebp
or
or
jecxz
outsb
ficompl
insl
mov
lahf
xor
jne
add
nop
mov
dec
sarl
lahf
inc
jle
add
xchg
add
int
mov
xlat
cmpb
mov
out
push
and
cld
dec
sub
push
arpl
cmp
mov
xchg
nop
jno
and
out
cmp
loopne
fmull
pop
iret
adc
pushl
or
shlb
mov
pop
lods
sbb
add
jo
cltd
leave
pop
stc
bound
int3
out
arpl
push
sub
inc
ljmp
pop
cwtl
stc
mov
jne
lea
and
shll
test
mov
jns
rorb
mov
lahf
movsb
lods
aam
or
rorb
add
into
push
lods
cld
lock
push
lret
lods
daa
sub
mov
movsl
insb
xor
rcrb
mov
jmp
mov
mov
and
test
fs
push
cmp
movsb
test
pushf
inc
cmpsl
fidivrs
test
testl
aam
lods
arpl
inc
mov
movsl
hlt
incl
movsb
inc
add
mov
push
push
or
xchg
adc
or
into
ficoms
mov
xchg
mov
shll
testb
ljmp
jle
pop
clc
fldt
je
sub
mov
cmp
in
sub
dec
xor
fisttpll
xchg
inc
dec
lcall
subl
mov
mov
mov
lret
sti
lahf
or
jno
cmp
xor
fistpll
sbb
xlat
les
jecxz
repnz
dec
mov
popf
movsl
jecxz
out
dec
fs
push
aas
mov
lds
cmpb
pop
imul
ljmp
adc
in
sbb
stc
aas
sbb
hlt
insb
pusha
mov
cmp
sbb
cmp
xchg
jmp
jmp
sbb
sbb
gs
and
and
mov
cld
ss
mov
mov
cmp
adc
loop
push
dec
arpl
push
xchg
rclb
filds
outsb
mov
or
push
push
std
dec
push
pop
sub
sub
inc
inc
js
insl
xchg
cs
inc
push
jb
orl
push
xlat
mov
jle
popa
push
sarb
sub
lods
aam
test
scas
xchg
jmp
sbb
pshufw
into
xchg
pop
inc
mov
cmpsl
push
mov
pop
xor
roll
data16
adc
pop
pop
outsl
leave
sbb
daa
adc
mov
es
mov
fs
lock
mov
lods
enter
cltd
pop
sbb
mov
fcomi
fstpl
cltd
mov
cltd
pop
shrl
add
in
push
jbe
inc
jo
xchg
cmp
mulb
rcr
in
xchg
mov
adc
xor
sbbb
in
and
push
cltd
pushf
or
cmp
push
mov
jle
flds
add
mov
and
fs
popa
jecxz
adc
rclb
ret
dec
cmpsb
xchg
mov
or
stos
inc
lret
cmc
pop
notl
sub
out
lock
sahf
xor
filds
stc
pop
into
pop
jp
ljmp
xchg
fistpll
mov
aam
or
inc
push
cltd
add
cmpsl
sub
lret
or
scas
xor
sbb
mov
icebp
and
out
add
std
xchg
cmp
arpl
fistl
push
add
and
push
mov
sbb
imul
push
orl
inc
fwait
scas
ret
int3
push
cld
sbb
fdiv
pop
dec
aad
cmp
push
sub
ss
jne
pop
sbb
out
out
xor
and
or
aad
mov
mov
iret
addl
xchg
and
sbb
sbb
mov
sbb
mov
lods
xchg
fisttps
ljmp
shrl
lds
and
dec
leave
dec
loope
testb
loop
repz
cltd
add
push
fistps
test
scas
push
ds
sbb
pop
mov
inc
jl
jmp
dec
js
adc
stos
push
inc
enter
in
push
test
test
cmpsb
adc
mov
jle
insb
sbb
icebp
mov
out
lret
mov
mov
cld
push
lods
pop
pop
xchg
cmc
lds
xor
cwtl
pop
add
cs
sbb
jbe
popa
mov
mov
sbb
int
push
outsl
add
test
rcrb
adc
lret
xchg
fdivl
cmp
mov
jecxz
scas
mov
dec
test
inc
jbe
pop
pusha
inc
add
rcrb
mov
cmp
jbe
adc
pop
dec
das
js
lret
cmpsb
push
jns
enter
jbe
into
adcb
lcall
xchg
seto
jp
sub
std
cli
add
data16
test
dec
enter
mov
cltd
enter
add
test
and
out
dec
ds
aad
cli
aam
xchg
fimull
xlat
sbb
outsl
xor
movsl
shl
popl
cmp
mov
out
push
mov
in
xchg
gs
adc
inc
dec
mov
lret
push
addr16
push
mov
sbb
lock
or
idivb
xor
xchg
fwait
xor
pop
scas
cmp
pop
jl
icebp
int
mov
rcl
lock
cmp
out
xchg
cmp
xchg
ja
dec
fs
mov
jmp
mov
mov
scas
fcoml
les
notl
sbb
into
add
insl
in
das
loope,pn
jne
push
push
adc
xchg
popa
cmp
or
lock
fnclex
xor
xor
xchg
cs
adc
aam
repz
push
mov
push
mov
jle
sub
leave
test
pop
cmp
xor
pop
sarl
mov
test
fsts
repnz
and
hlt
std
das
pop
push
cmp
cmp
mov
pop
daa
shll
or
add
in
inc
sbb
jbe
cmp
dec
pop
hlt
mov
int3
mov
cli
jle
lea
push
mov
and
and
insl
mov
sbb
in
dec
cmp
outsl
out
sub
icebp
insl
lcall
mov
lret
cmpsl
mov
fisubs
push
pop
lahf
sbbl
xor
add
jge
aas
xchg
jns
loope
and
je
pusha
pop
mov
mov
mov
adc
movsl
xor
aam
cmc
mov
mov
xor
adc
lret
sbb
or
jno
in
mov
hlt
xor
mov
dec
aaa
jge
bound
cmp
ljmp
sti
call
out
lea
pop
test
das
pop
std
ret
xchg
popa
out
push
mov
add
jl
daa
sbb
pusha
stos
push
jecxz
mov
out
imull
subb
jg
sti
sti
jne
in
aad
jne
popa
popa
in
and
pop
lods
sub
cli
loope
fistps
inc
lock
mov
mov
pop
rcrl
les
repnz
mov
loopne
adc
lds
fcomp
sbb
dec
fnstsw
mov
into
psadbw
adc
pop
sbb
pop
push
mov
inc
sub
xor
pop
dec
mov
sub
orb
jbe
xor
xor
pop
inc
add
sub
movsb
repnz
mov
xchg
out
or
jbe
add
int
dec
jmp
data16
or
sbb
out
pusha
jb
aas
xchg
mov
in
les
mov
mov
push
outsl
hlt
jns
push
xlat
jl
adc
push
and
dec
in
xchg
pop
mov
push
xor
leave
adc
fsubrl
mov
inc
push
xchg
push
jmp
in
mov
sbb
jl
loop
mov
jl
cltd
repz
push
jo
xorl
shll
fdivs
and
outsl
xor
sbb
fistpl
add
sbb
push
ja
cmp
push
lret
dec
icebp
gs
sub
pop
fcomps
popf
mov
imul
imul
push
add
les
sarb
sbb
add
popf
repnz
cmp
std
cmp
cmp
mov
inc
push
in
mov
push
in
test
jecxz
in
add
cmp
sub
cld
and
aam
jb
mov
adc
test
jge
xchg
call
pop
leave
into
adc
nop
xor
aas
repz
mov
icebp
in
mov
mov
fnstsw
in
mov
jmp
cltd
cwtl
cli
inc
cmpsb
pop
push
xchg
inc
in
aas
lea
sahf
enter
in
movl
pop
insb
add
popa
and
stos
lcall
fwait
lods
mov
aad
lods
inc
out
push
fildl
and
scas
fnstenv
fsts
pop
mov
das
push
xchg
arpl
dec
sbb
mov
into
test
fldl
icebp
cs
mov
and
or
pop
mov
mov
xor
jb
ss
scas
js
sub
cwtl
rcrb
mov
jecxz
fcomp
pop
test
into
repz
fcoml
incb
bound
mul
scas
fbld
dec
xorb
loopne
push
pop
xor
sbb
jb
inc
out
out
mov
xor
xchg
add
outsl
mov
adc
cmpsb
pop
mov
hlt
jbe
ljmp
cwtl
loopne
xlat
jne,pt
xor
fildll
pop
lods
leave
pop
sub
push
imul
mov
js
mov
jle
or
mov
shll
push
adcl
pop
push
aas
sub
jmp
xor
dec
jl
mov
nop
imul
fsubs
ljmp
xchg
cmp
inc
imul
cmp
and
push
sub
mov
lahf
scas
es
es
mov
aam
arpl
hlt
lret
push
aas
jg
enter
inc
ffreep
mov
sbb
xor
out
jb
adc
adc
xor
cmpsb
jae
jmp
sub
stc
popf
cmp
imul
imul
sbb
xchg
loopne
pop
mov
lret
xlat
mov
fnsave
sarb
sub
jo
cld
dec
sbb
cs
mov
xor
fistpl
das
ficompl
dec
lods
add
sar
inc
ret
pop
jl
ljmp
xchg
push
movsl
sub
mov
ss
xchg
or
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
or
add
add
add
jl
cltd
dec
mov
xchg
push
inc
cmp
dec
mov
push
xchg
push
add
addl
dec
loope
or
dec
sub
leave
rcr
xor
dec
mov
pop
rcrl
xchg
fucomp
mov
lcall
arpl
hlt
js
iret
jae
mov
test
lret
sbb
andb
pop
mov
xchg
repnz
shlb
jp
jecxz
mov
stos
sti
das
push
scas
push
ret
push
inc
pop
cmp
sub
mov
lret
in
push
and
or
jo
xlat
pop
sahf
mov
fucomip
jmp
aaa
mov
jmp
mov
xor
testl
xor
and
pop
mov
clc
nop
popf
stc
mov
sbb
std
dec
mov
push
and
and
mov
movsl
jle
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
