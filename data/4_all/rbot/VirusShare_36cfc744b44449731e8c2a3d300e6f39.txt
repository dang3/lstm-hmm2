mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
cmc
jno
xchg
push
jae
ja
mov
pop
addr16
fwait
jecxz
cmp
roll
sub
es
xor
mov
pushf
pushf
clc
addr16
mov
sub
xchg
nop
xchg
fprem1
push
pop
test
pop
mov
xchg
adc
subl
cmp
outsb
or
lds
mov
sti
mov
mov
nop
push
insl
clc
mov
fisttps
push
test
das
in
scas
rclb
addr16
dec
std
cli
ja
nop
push
cmp
jle
push
xor
mov
inc
adc
int3
clc
xorb
call
adc
sbb
pop
cli
or
std
or
lcall
sbb
scas
imul
push
pushf
fstp
ss
xor
out
idivb
aas
xor
pusha
test
stos
les
push
shlb
pushf
dec
jg
sbb
testb
sbbb
fstl
or
sub
sbb
inc
sbb
sub
adc
shl
sbb
jne
je
scas
push
xchg
add
call
cli
pop
push
or
movsb
rcrl
sahf
movsl
xor
mov
cltd
and
cmp
mov
mov
rclb
stc
sbb
inc
mov
mov
sub
pop
pushf
add
push
mov
pop
mov
in
int
push
icebp
mov
fstl
mov
stos
pop
insb
scas
sbb
sbb
mov
ds
int
into
in
pop
mov
scas
add
scas
scas
stc
bound
stos
jmp
sub
jbe
pop
adc
pop
sub
packuswb
sbb
xchg
fcmovnbe
addb
pop
inc
addl
out
clc
mov
sub
loopne
xor
movl
movsb
adcl
mov
pop
call
shlb
ljmp
mov
pop
push
addr16
or
lds
inc
jae
dec
inc
inc
aas
push
lahf
lds
cmp
cmp
sub
xchg
sub
movsb
xor
fsts
mov
mov
or
cmp
outsl
mov
lods
add
jo
mov
filds
mov
and
mov
or
insb
mov
jo
jg
and
aad
mov
test
scas
inc
fsubs
mov
sub
and
jecxz
push
dec
sub
xchg
andb
push
inc
int3
add
jecxz
gs
insb
outsb
adc
cmpsb
push
pusha
out
int
outsb
mov
cmpsl
mov
mov
leave
xlat
jb
test
sbb
ds
push
sub
mov
sarb
push
mov
gs
test
addl
xchg
shrl
dec
stos
rclb
fwait
mov
xor
push
out
push
movsb
adc
mov
pushf
shll
mov
inc
push
les
and
fidivl
xor
pop
cmpb
insb
xlat
mov
shrb
imull
mov
sbb
mov
ja
fmuls
mov
imul
jo
xchg
pop
cwtl
push
test
pusha
inc
int
pop
push
push
add
lock
es
std
movsl
sbb
je
aam
xlat
adc
mov
mov
hlt
inc
adc
enter
dec
pop
hlt
sub
sub
out
xor
fldt
cmp
hlt
cmpb
das
or
fimuls
js
gs
mov
lods
shlb
mov
shr
mov
cmp
sbb
push
xchg
int
outsb
cmp
mov
aas
sub
pop
adc
rcl
dec
mov
fwait
and
ficomps
in
es
fwait
test
out
fisubs
out
inc
aad
adc
daa
idiv
mov
movsl
adc
xor
aas
in
call
shll
push
loope
scas
inc
mov
inc
sbb
enter
in
adc
and
sub
aam
sub
and
clc
pop
sbb
xbegin
setbe
adc
test
cmpsb
inc
fildll
push
in
jo
cmp
mov
xor
adc
mov
pop
jo
and
sahf
mov
and
xchg
xor
inc
xor
push
popf
popa
mul
push
out
mov
dec
leave
pusha
cmovno
xor
stos
stc
xchg
dec
ljmp
xchg
pop
daa
stos
decb
lds
pop
cmp
mov
add
mov
push
sbb
out
mov
lds
lahf
daa
pop
in
or
mov
mov
sub
out
mov
je
and
or
jnp
pushf
jp
cmpsl
sbb
mov
xchg
bswap
xchg
shlb
movsb
outsb
stc
add
jp
dec
pop
lret
or
jo
ret
aas
xor
adc
push
xchg
cmc
test
out
push
cmc
push
addl
xchg
cld
lret
pop
jp
icebp
pop
les
dec
adc
cs
movsb
rcrb
pop
fnsave
lret
lret
pop
insl
jg
sbb
imul
pushf
inc
mov
add
mov
cs
shlb
loope
pop
call
sbb
and
in
mov
adc
jmp
jo
pop
lcall
dec
lods
pop
ljmp
test
mov
push
mul
icebp
pop
fcoml
inc
and
sub
in
lcall
or
sbb
pop
xor
inc
fwait
andl
hlt
xchg
aas
mov
adc
es
mov
aam
pop
and
into
daa
mov
pop
jno
pop
mov
adc
imul
mov
inc
push
push
insl
push
ljmp
mov
inc
and
aaa
jnp
sbb
lret
sub
mov
or
xor
sbb
inc
test
aam
mov
mov
pop
pop
push
testb
cli
data16
mov
into
and
enter
adc
out
mov
test
or
iret
add
shl
dec
cmpsl
out
cwtl
sti
ljmp
xchg
adc
adc
ja
push
or
cmp
jb
add
lods
jae
sbb
popa
in
add
int3
jmp
aaa
inc
sbb
fs
arpl
fmulp
fstpl
sahf
xchg
fisttpll
pop
cmp
jl
fst
loop
xchg
fwait
sbb
loop
pop
dec
out
aad
mov
sbb
popf
out
test
es
sbb
jnp
jae
xlat
pop
ret
lea
push
add
push
test
loopne
mov
jne
lods
lock
xchg
xor
les
jmp
sub
imul
es
popa
jl
jb
in
push
fdivrl
nop
in
lea
sbbl
push
sti
or
cmp
sbb
inc
call
das
mov
fidivs
jno
sahf
scas
xor
pop
mov
mov
push
es
fisttpl
mov
loop
cmp
push
fcomip
jns
mov
or
pop
or
fldcw
lods
and
push
jl
lods
add
pop
adc
out
fidivrs
sbb
fs
and
fisubs
pop
ss
push
daa
dec
inc
loopne
pop
fnsave
aaa
sbb
je
push
xchg
mov
or
enter
clc
sbb
fnstcw
sahf
lea
sti
sbb
mov
fadd
je
pop
add
mov
xchg
xchg
sbb
xchg
outsb
fwait
xchg
pop
or
jb
fnstsw
sbb
daa
outsl
fistpll
test
scas
mov
push
data16
push
sub
cmp
xchg
mov
popf
add
repnz
setns
xchg
les
into
pop
addb
sub
sbb
lcall
jp
popf
mov
int
adc
leave
jns
stos
mov
push
out
pop
orl
fdivrs
pop
aas
mov
rcrb
mov
data16
fistl
push
popf
out
jno
bound
sbb
test
ret
cmp
rolb
popa
gs
je
pmulhuw
mov
mov
shll
xchg
sbb
add
lods
clc
sbb
insl
jmp
scas
stos
ss
icebp
test
rcl
js
mov
insl
and
bound
insl
loope
xor
mov
sub
movsl
dec
dec
nop
ret
ja
cmp
fdivp
fbstp
ljmp
jnp
lock
sahf
aas
test
or
notb
mov
fsubl
shrl
xlat
ljmp
jnp
cmc
jae
push
je
jb
sbb
xchg
inc
mov
roll
pop
add
lahf
jecxz
push
or
lcall
fwait
xor
xchg
sub
lret
pop
arpl
imul
pop
xchg
adc
dec
xchg
inc
mov
aas
into
pop
pop
andl
xchg
inc
stos
inc
jno
xlat
cld
push
cwtl
cmpsl
fidivrs
add
mov
dec
jbe
scas
movl
sub
lret
add
lret
push
cmovae
fwait
mov
jbe
fmull
sub
jg
pop
pop
incl
ljmp
dec
test
push
out
pop
push
daa
pop
addb
or
mov
push
and
out
aad
daa
mov
shl
mov
jge
or
ja
jae
nop
xor
push
push
mov
std
cmp
add
fildll
outsl
or
sub
pop
push
ljmp
dec
jle
das
jns
dec
in
mov
add
clc
cmpsb
je
cmp
mov
and
test
test
movsl
bnd
cmp
dec
aad
in
mov
push
sub
jle
aaa
jnp
das
insl
cli
mov
loope
fprem1
shlb
pop
mov
sub
push
xchg
insl
lea
mov
adc
xchg
sti
and
mov
dec
ljmp
movsb
push
sbb
aaa
mov
lret
and
nop
sub
ret
pop
mov
jp
mov
outsb
mov
mov
push
dec
out
dec
int
imul
lret
insl
cmpsl
dec
xor
push
sbb
pop
push
mov
sub
icebp
or
adc
imul
iret
xlat
stos
test
pop
pop
dec
dec
lcall
cmpb
int
stos
mov
mov
or
cmp
out
stos
outsl
outsb
lods
xchg
ret
sbbl
js
ret
ret
into
add
or
in
out
push
mov
ljmp
mov
pop
adc
popf
cltd
lods
imul
cmp
in
adc
inc
cld
and
dec
adcl
cmp
inc
lcall
dec
sbb
sahf
enter
sbb
int
pop
int3
gs
mov
repnz
cltd
pusha
push
dec
mov
rorb
in
pop
pushf
jl
or
mov
popa
into
insb
sbbl
rep
xchg
loop
add
add
pop
sub
js
loopne
repz
nop
pop
imul
xor
cmpsb
mov
push
adc
mov
stos
add
xchg
mov
rclb
cmp
dec
and
mov
xor
sbb
adc
cld
sub
and
push
mov
and
scas
rclb
out
inc
add
sub
cwtl
scas
das
lock
mov
mov
test
cli
mov
mov
pop
xchg
inc
and
push
inc
mov
push
test
mov
pop
and
sbb
xchg
aam
mov
jecxz
aas
in
subl
scas
xchg
enter
add
imul
xor
mov
sbbl
stos
stos
pop
mov
cmpsl
adcl
out
push
imul
or
lea
or
jmp
test
xchg
jg
and
adc
xchg
pop
into
push
cmp
adc
je
xchg
or
jo
gs
pop
movsl
je
inc
icebp
jae
fs
out
xchg
inc
cmp
clc
loop
ljmp
and
or
cmp
popa
mov
rolb
scas
addr16
test
cmp
mov
cmp
add
cmp
inc
push
push
sub
push
ljmp
test
cmp
dec
sub
outsl
or
sbb
outsb
lret
pop
sarb
insl
pop
xchg
out
jp
xchg
pop
and
push
aad
ss
shl
push
cmpsl
jb
je
mov
fimull
mov
imul
lret
sbb
sbb
loope
lret
shrl
loop
dec
pop
fisubrs
jno
fdivl
mov
pusha
les
xchg
xchg
and
add
mov
sub
repz
add
xlat
outsl
push
sahf
cltd
insb
test
inc
lock
shlb
loopne
mov
pop
sar
pop
loope
xchg
mov
fwait
adc
lret
cmc
lock
jp
pop
sbb
in
insb
sahf
dec
adc
and
repz
stos
cmp
call
lock
ja
dec
repz
jns
jae
dec
sub
pushf
adc
adc
xor
dec
aaa
push
inc
mov
divl
push
in
jnp
or
push
sbb
push
lock
out
xor
adc
jg
xlat
cmp
xchg
adc
mov
cmp
loope
outsl
inc
imull
inc
push
add
or
dec
inc
and
jg
mov
inc
clc
xchg
adc
cltd
leave
ss
mov
mov
cmp
enter
je
mov
popf
ret
je
push
icebp
sbb
addr16
xor
inc
inc
lods
fists
mov
xor
mov
xchg
incb
fadd
and
imul
adc
pop
repz
fistps
inc
loope
xlat
mov
insb
xor
pop
mov
dec
jne
fstps
outsl
icebp
adc
daa
dec
inc
pop
cld
scas
jle
loop
add
xchg
mov
cwtl
ja
psubsw
mov
scas
cld
rclb
pop
xor
mov
adc
jae
aam
adc
pushf
outsl
xchg
shr
lods
movsb
insl
xor
or
test
dec
popa
fdivrl
addb
testl
call
sahf
cmp
addr16
xchg
in
cmpl
push
xchg
xchg
out
push
das
jae
insb
lret
sbb
adcl
mov
mov
jle
mov
nopl
jg
fdiv
subl
cmpsl
fidivl
fsubs
push
or
mov
inc
xchg
mov
hlt
mov
jnp
out
mov
xchg
lds
or
pop
mov
jo
push
jl
mov
loop
xchg
lds
jo
push
rorb
sub
sbb
sub
xchg
cmp
pop
fisubrs
outsl
push
fidivrl
in
mov
jae
cmp
adc
pushf
mov
mov
rorb
mov
mov
decb
mov
leave
nop
xchg
movsb
repz
fsubrs
mov
push
adc
subl
and
adc
sub
mov
and
jp
arpl
push
xchg
daa
fmul
aad
hlt
xchg
or
pop
xchg
stos
cmp
adc
pop
inc
aad
push
push
sbb
fdivrs
lret
and
outsl
bound
cmp
xor
jge
jbe
imul
lock
push
inc
aas
mov
mov
xor
js
shl
pop
xchg
popa
lock
xchg
mov
movsb
and
adc
into
add
shll
push
sub
dec
sub
int
cmp
int3
sbb
lret
test
imul
jo
push
ficoml
cmp
imul
mov
lret
in
pop
cmpsl
outsb
sahf
jnp
pusha
cmp
imul
pop
mov
push
xchg
and
push
sbb
sub
das
ret
push
or
pop
cmp
loopne
bound
ret
ja
lret
fsts
stc
lahf
xchg
cld
shll
jecxz
pop
push
mov
and
cmp
xchg
xor
dec
lock
mov
sbb
jnp
lods
out
or
and
mov
sub
cmp
jns
mov
mov
pusha
mov
push
cld
xor
mov
icebp
bound
lock
mov
fs
fsubrs
cmp
jge
sti
jp
loope
jno
and
push
test
xor
les
cmp
mov
pop
pop
mov
lock
in
fdivl
iret
mov
mov
int3
sbb
aaa
mov
lcall
lock
dec
hlt
in
loop
lods
cwtl
notb
xchg
rcr
pushf
dec
ret
cmp
in
xor
push
test
arpl
test
rcrb
fildll
cmp
cmp
sub
popa
pop
pop
cmp
test
or
inc
jg
mov
test
lods
push
cltd
aad
icebp
xchg
out
leave
dec
adc
push
mov
icebp
std
addr16
pushf
cmp
xchg
jecxz
insb
loope
xchg
add
sub
dec
int3
jmp
addl
cmc
push
inc
mov
pusha
mov
fimull
push
insb
mov
sub
jge
fwait
outsb
scas
mov
lahf
call
aaa
add
cwtl
dec
push
dec
cmp
pusha
and
fwait
lods
rcll
es
jge
xor
imul
in
xchg
xchg
mov
ret
pop
cmp
stos
or
dec
add
imul
xor
or
xor
in
xor
ds
push
fildll
mov
popf
mov
push
setl
sub
lret
aaa
das
rcrl
lods
adc
fdivrl
rclb
test
rorl
imul
scas
dec
sub
or
in
aad
fldlg2
mov
adc
out
xor
cmp
fcom
jb
add
lea
shlb
lock
adc
mov
cmp
push
push
xlat
add
stos
dec
lods
mov
ret
jp
xchg
mov
fs
and
aas
pusha
rol
xchg
sbb
jmp
or
mov
fsqrt
sub
cmc
jne
xchg
out
jmp
dec
xchg
and
jae
in
jae
fwait
inc
mov
daa
in
rcll
sbb
mov
inc
scas
imul
xor
lock
inc
mov
mov
or
pop
shlb
das
pop
xor
into
pop
push
int3
cmp
push
shlb
sbb
sbb
lock
mov
mov
rolb
mov
push
push
lods
ljmp
or
push
mov
sub
addr16
ss
mov
and
or
lcall
fst
adc
sbb
outsl
adc
cmp
test
dec
addr16
outsl
cmp
test
sub
adc
adc
mov
push
ds
push
lahf
push
push
mov
dec
idivb
xor
lcall
ss
mov
and
imul
clc
jae
test
insb
xchg
ror
mov
cmp
cmpsl
push
movb
rolb
sbb
leave
lcall
int
stos
pop
pop
mov
add
test
and
pop
enter
movsl
mov
dec
out
mov
or
mov
add
pushl
lcall
mov
jge
mov
add
imul
mov
mov
call
pop
testb
icebp
jl
sarb
stos
mov
jns
adc
inc
jmp
or
imul
jg
or
out
jbe
push
pop
dec
push
je
dec
mov
ret
dec
xchg
int3
mov
pop
imul
sub
mov
cs
repnz
xor
xchg
insl
sti
fidivs
mov
nop
add
adc
call
cmp
push
jb
fsubs
data16
test
mov
mov
fistps
cmp
jecxz
out
scas
sub
xchg
lods
insl
call
sbb
into
and
add
popa
mov
lods
out
add
mov
sahf
push
loope
dec
std
add
pusha
mov
xchg
loope
mov
jne
js
subb
popa
adc
stos
in
imul
pusha
ret
xchg
sbb
sub
andb
pop
adc
cmp
out
cltd
in
insb
mov
imul
mov
lds
hlt
mov
mov
sti
aas
cmpsl
insl
in
in
mov
fs
adc
je
or
jno
icebp
testl
xlat
in
adc
cli
ljmp
lcall
test
cmp
xor
pop
arpl
pop
lret
int3
fstpl
pushf
test
data16
icebp
loop
stc
push
inc
pop
movl
xchg
iret
adcl
sbb
sub
repz
ds
mov
jbe
sub
rcrb
repz
jp
jbe
call
dec
dec
cmpsb
inc
in
gs
enter
imul
loopne
mov
push
ljmp
add
fiaddl
and
shll
jno
fwait
out
sub
psrlw
cltd
push
mov
lret
cmp
mov
xchg
dec
xchg
fcmove
push
insl
adc
xchg
mov
and
sbb
dec
push
lret
mov
xor
push
rcl
in
mov
pop
fdiv
mov
push
pusha
stc
add
xor
shl
arpl
aad
pusha
jp
es
and
ss
pop
gs
insl
test
sbb
ja
adc
cmp
enter
jle
ja
daa
idivl
in
sbb
mov
faddl
aad
jmp
int3
mov
iret
mov
aaa
stos
jle
scas
aas
std
xor
fistpll
roll
test
xchg
inc
xchg
js
mov
lock
jl
mov
imulb
lods
xor
imull
pop
jb
xor
mov
pop
rorl
inc
cmp
jle
ds
cmp
movsl
jle
push
outsl
add
adcb
fistps
adc
jp
fildl
lret
sahf
mov
shl
mov
cmp
mov
test
mov
inc
xchg
jge
sbbb
je
ja
int
inc
fmuls
mov
ret
mov
sub
pop
mov
xchg
xor
ss
sbb
jns
out
movsl
and
dec
fsts
lahf
xchg
ja
jb
xchg
jb
int3
test
jae
ss
sti
push
pop
je
out
adc
dec
mov
and
shrl
and
add
dec
sub
xchg
mov
loop
mov
dec
xchg
adc
enter
adc
cli
outsb
xchg
cs
dec
loop
cmc
xchg
push
andl
mov
bound
sbb
jg
inc
jge
sbb
push
dec
sbb
cmp
aas
pusha
clc
add
fsubrs
std
mov
cmp
or
and
push
mov
and
outsl
fstps
fisttps
ret
mov
mov
push
dec
dec
inc
repz
enter
jne
mov
loopne
sub
jle
leave
push
cmp
into
jl
adc
icebp
movsb
lahf
enter
xlat
sub
cmpsb
orb
pop
mov
push
xchg
mov
call
pop
int3
test
xorb
lock
sbb
xor
cwtl
pop
and
mov
adc
sbb
lds
cmpsb
imul
subb
clc
push
in
andl
mov
daa
mov
pop
nop
jmp
addb
add
push
mov
xchg
imul
imul
mov
negb
jnp
pop
mov
jl
out
clc
mov
pop
inc
ffree
and
push
xchg
repz
leave
cmpsb
ds
mov
lahf
xchg
dec
repnz
orl
jg
scas
jl
and
pusha
popa
push
stos
shl
mov
sub
jmp
cmpsl
ret
icebp
adc
outsl
xor
or
adc
mov
adc
inc
insb
inc
and
int
push
jecxz
inc
add
xchg
clc
and
jns
fldl
xlat
roll
push
dec
je
jns
xchg
fwait
sbb
popa
or
xchg
xchg
or
sti
pop
pop
data16
xor
das
sbb
mov
popf
sub
call
stc
cwtl
or
bound
shr
aaa
movsb
mov
cmp
dec
sub
jb
fst
mov
sahf
jp
les
dec
and
loopne,pt
cmc
mov
out
adc
jecxz
cmpsb
or
mov
sub
inc
sbb
adc
push
inc
push
bound
outsb
lods
or
inc
int
movsb
popa
pop
pop
jp
dec
lret
mov
int3
decb
jmp
scas
mov
mov
push
add
pop
shrl
or
gs
arpl
dec
dec
ljmp
cmc
jle
push
pop
fwait
pop
jae
cmp
pop
stos
push
loope
std
mov
inc
inc
fstl
fs
jb
inc
into
cmp
rcrb
insb
addr16
std
cmp
xchg
sub
jae
push
pop
sbb
and
add
add
dec
cmp
mov
lock
or
pop
das
dec
sahf
push
insl
push
xlat
adc
mov
popf
mov
dec
stc
fildl
sbb
sbbb
dec
sub
inc
dec
mov
cmc
mov
test
not
jno
pop
cmpsl
lods
out
xchg
mov
jnp
mov
mov
adc
mov
pop
in
sub
divl
push
inc
out
enter
in
fadds
jge
push
sub
xor
mov
dec
gs
out
je
jno
loopne
pop
rorb
inc
ljmp
into
sub
dec
jl
leave
dec
sub
or
mov
pop
pop
iret
fnsave
push
rol
jl
lahf
js
mov
loope
xchg
mov
popa
mov
push
mov
and
xchg
pop
or
ss
pop
lock
xor
inc
repz
xchg
mov
pop
ja
es
flds
sbb
push
jb
pushf
sbb
cwtl
xor
sub
jbe
jne
jp
inc
stc
sbb
inc
mov
cmc
ret
lods
scas
ljmp
or
scas
aaa
xchg
rcrl
out
mov
shlb
push
aam
push
inc
aam
cmp
scas
pop
stos
inc
add
call
mov
iret
gs
mov
add
cmp
out
inc
xor
cltd
inc
sahf
xchg
lods
in
xchg
pop
fucom
addb
imul
cld
outsb
xor
orl
sarl
sbb
movsb
xor
test
imul
repnz
pop
nop
xchg
sbb
aas
dec
rcrl
or
pop
dec
jb
ret
mov
mov
iret
push
xchg
data16
jge
outsl
mov
fisubrl
mov
mov
push
jmp
icebp
sub
mov
lods
sub
mov
lret
or
neg
cmc
addb
fists
mov
lock
xchg
xor
out
jg
cli
out
dec
pop
les
push
repz
xor
mov
jmp
cltd
jmp
xor
adc
sub
push
xchg
mov
pop
push
sti
lret
mov
cmpsl
push
ds
inc
push
cmpsb
aas
jnp
int
jl
add
insl
push
or
xchg
popa
aas
movsb
mov
inc
mov
sbb
imul
fidivrs
aad
out
fwait
push
add
dec
pop
lea
es
adc
mov
jnp
fistl
mov
or
add
or
jns
push
mulb
xor
je
and
fisubs
mov
mov
ja
sbb
pop
mov
pop
insl
or
lahf
cmp
xor
mov
fs
xchg
hlt
fwait
movsb
in
lcall
imul
dec
sbb
add
push
int3
jp
out
dec
sub
add
sbb
cmp
in
push
testl
roll
movsl
or
lods
in
movsb
xlat
xchg
inc
and
sub
mov
dec
cmc
je
test
push
mov
pop
mov
xchg
lahf
lock
lods
insl
xor
dec
repz
and
or
js
nop
bound
cmp
das
xor
add
test
fdivrs
test
mov
ss
stc
and
cli
mov
pop
pushf
sti
cld
adc
lock
les
imul
aam
shll
cmp
std
mov
cmp
or
ja
pop
lcall
divb
sub
je
mov
in
fstps
test
push
test
rcrb
in
cmp
into
ds
sbb
mov
lret
push
test
cmpsl
out
jmp
fisubrs
dec
jnp
sub
rorl
mov
mov
addr16
dec
mov
xor
push
mov
cmpb
add
es
std
sbb
push
lods
jg
mov
push
fsubrl
idiv
sbb
sbb
jb
sti
repz
es
or
inc
sarl
jp
lret
lods
inc
push
sub
mov
push
inc
inc
push
jle
mov
push
cmp
lock
inc
adc
mov
xchg
mov
lods
addr16
jo
mov
push
out
jo
iret
xchg
stos
repnz
adc
sub
rcrl
add
aaa
xchg
outsb
ficomps
mov
cmp
xchg
and
xchg
push
mov
push
popa
clc
mov
gs
mov
lret
movl
insl
and
fs
cmp
andb
cltd
add
popf
lea
adc
xchg
adc
sub
mulb
mov
addr16
fnstenv
mov
push
cmpl
cmp
and
pop
clc
pop
arpl
xchg
cmpsl
outsb
xchg
jne
subb
jp
jp
enter
outsb
hlt
jno
pop
pop
push
cmp
dec
out
xchg
inc
lret
add
and
out
mov
enter
les
inc
mov
daa
cmc
adc
lahf
add
sub
mov
pop
or
sahf
or
pop
mov
leave
fildll
arpl
jbe
adc
adc
shlb
inc
inc
cmp
imul
jmp
in
data16
out
cltd
adc
add
push
jns
popf
and
push
dec
mov
add
sub
push
adc
out
sub
adc
jle
ss
jl
sub
cmp
adc
jnp
in
ret
cltd
fstpt
inc
lods
jmp
vcvtph2ps
stos
dec
push
js
push
sbb
add
inc
cs
out
shll
mov
pusha
pop
xor
mov
outsl
pop
push
mov
or
sub
jl
push
loop
push
test
fwait
pop
test
xor
jg
jg
lods
inc
imul
add
out
or
mov
gs
add
pop
test
je
jge
dec
adc
push
lret
xchg
push
cmp
into
pop
mov
cmp
pop
pusha
rclb
sbb
bound
bound
jns
in
sbb
cld
add
or
call
enter
mov
mov
mov
add
xchg
or
movsl
push
sti
push
out
es
inc
cmp
daa
pushf
pop
into
push
out
bound
pop
orb
pop
mov
mov
sbb
jb
pop
mov
ss
xchg
fwait
push
xchg
jno
fmull
cmpsb
out
xor
daa
into
negb
dec
sub
pop
aad
mov
ja
leave
cmpsb
inc
cmpsb
or
pop
mov
or
xlat
adcb
lods
push
mov
or
jmp
and
jmp
mov
push
xchg
iret
rolb
dec
mov
mov
fs
jbe
and
sub
mov
fdivl
xor
adc
inc
loope
inc
jge
sbb
mov
lods
xchg
jnp
and
repnz
or
push
mov
notl
idiv
mov
jl
and
cmp
cmp
dec
mov
add
ja
inc
dec
jne
pop
repnz
int3
jmp
add
popa
and
daa
inc
leave
dec
mov
gs
xor
mov
int3
imul
pop
test
cmp
push
jns
mov
orb
shrl
out
push
jl
xor
or
std
xchg
stos
pop
lret
sub
jo
mov
add
ret
imul
dec
fnstenv
jnp
mov
cld
mov
inc
or
mov
sbb
jo
and
xor
mov
push
cs
int3
lods
dec
das
out
dec
clc
add
lods
push
addr16
mov
push
mov
arpl
iret
xchg
loopne
cld
mov
dec
das
ret
mov
ss
adcb
fcompl
mov
ja
adc
lret
lods
xlat
xchg
aad
jge
or
iret
sti
push
sbb
imul
ret
xchg
xlat
fwait
sbb
aaa
lods
jns
enter
in
add
and
arpl
sub
cmpsl
fmulp
dec
jl
mov
or
out
fsubs
cli
sbb
inc
jo
pand
sbb
fistps
scas
repz
mov
lahf
pop
mov
aad
jge
sbb
xor
pop
inc
adc
lods
adc
xchg
fldt
mov
leave
popa
out
xor
and
mov
mov
subl
jge
lret
loopne
xchg
loope
push
sahf
push
sbbb
lods
std
rcrl
pushf
xchg
sub
in
nop
repz
xchg
add
mov
pushf
leave
sbbb
and
cmp
loop
push
arpl
lahf
icebp
popf
sbb
shll
adc
jae
test
xlat
bound
cmp
ss
mov
sbb
int
sub
sbb
dec
xlat
push
in
pop
mov
inc
cmp
sahf
jle
mov
jns
xlat
jle
pop
cmp
lret
jno
jmp
outsl
rcl
into
leave
dec
cmp
mov
mov
lock
pushf
cmpsb
mov
cmp
add
bound
cmp
sub
shrb
dec
lret
lret
xlat
jb
mov
or
xchg
pop
dec
aas
data16
fiadds
fs
insb
data16
fmuls
addr16
push
jmp
movb
pop
xor
cmpb
adc
xchg
call
and
into
outsl
and
test
mov
roll
mov
and
shlb
sbb
mov
sbb
sub
dec
es
roll
cwtl
daa
clc
xlat
call
add
cltd
or
add
inc
test
in
jb
jbe
and
or
lds
push
imul
push
rcrb
dec
cli
into
mov
ret
jae
add
lock
dec
xchg
sti
push
les
arpl
nop
adc
and
xor
mov
adc
scas
test
icebp
xchg
xor
sbb
jae
dec
cmp
sub
pusha
sub
in
adc
cmp
push
xchg
ret
jmp
dec
adc
lahf
inc
rorl
pop
sahf
inc
enter
fistps
push
xor
ss
pushf
jne
cmp
add
push
mov
jno
jecxz
int3
or
add
int
dec
ds
mov
lds
movsl
sub
ret
cmp
insl
sub
push
loope
cmp
out
jecxz
cmpsl
xchg
jnp
mov
imul
shrl
and
push
insl
rcll
insb
xchg
cmpsl
rorb
pushf
insl
sub
sbb
inc
int3
or
adc
cs
add
or
repz
mov
xorl
add
ss
test
pop
fidivl
fs
mov
mov
lea
xlat
ljmp
jg
stc
mov
sbbb
inc
mov
cmc
cmp
adc
mov
test
add
dec
jbe
adc
arpl
pop
pop
mov
and
xor
pop
ret
ss
movsb
insb
inc
jle
and
sbb
arpl
dec
rcrb
mov
test
pop
mov
jne
not
cmp
insl
cmp
sbb
cltd
pop
jae
hlt
fs
mov
les
fiadds
inc
or
xor
or
jae
lret
lea
mov
int3
fdivr
or
xor
dec
mov
xchg
sbb
loop
mov
lds
cmp
add
xchg
hlt
cmpl
pop
sbb
lret
cwtl
mov
int
fisubl
pop
clc
push
xor
xchg
mov
or
test
inc
and
or
inc
sahf
cli
jl
jns
lret
in
jg
jecxz
xchg
xchg
jp
cmpsb
mov
lret
push
test
sbb
ds
pusha
and
stos
repz
dec
popf
sub
dec
mov
lcall
ljmp
mov
iret
ds
stos
push
addr16
loop
lock
sub
rcrl
push
push
mov
jo
xchg
lret
mov
fisubs
movsb
fnstcw
cmp
pop
push
add
sub
sbb
cmc
adc
mov
lret
jno
mov
leave
or
add
cmpl
sub
mov
fwait
cmp
push
enter
push
daa
adc
xor
data16
push
insb
xchg
xor
xor
push
arpl
or
push
test
js
icebp
call
frstor
xchg
cs
add
jbe
pop
in
mov
mov
pop
pop
fwait
pop
mov
imul
arpl
dec
arpl
mov
sti
jl
inc
int3
cli
icebp
mov
xorl
pop
repz
cld
xchg
clc
dec
insl
out
dec
ljmp
adc
mov
icebp
scas
add
push
mov
sbb
jb
xor
mov
std
mov
push
cmp
aas
mov
push
cmp
push
aad
pop
xchg
push
add
repz
pushf
ret
mov
xor
arpl
jmp
adc
popf
out
cld
pop
xchg
adc
push
jo
pop
push
mov
testb
lret
ss
test
pop
fistpll
add
ja
aad
scas
fcmovnbe
mov
shlb
rcr
movsb
push
mov
jne
testl
adc
leave
xchg
addr16
fs
xchg
dec
push
mov
loope
lock
xlat
and
jne
mov
pusha
and
insb
scas
fimuls
sub
mov
xchg
out
mov
mov
cmp
loope
stc
nop
jecxz,pt
xchg
mov
mov
pushf
fwait
sub
cmp
sbb
test
and
xlat
pop
cmp
nop
std
fldl
xchg
fistps
sti
fucomp
mov
jge
mov
out
cmp
push
andb
xchg
jge
shrl
cltd
mov
rep
mov
insb
leave
push
xchg
fwait
mov
push
mov
and
imul
mov
push
mov
out
cmpl
sahf
mov
xor
jle
rcrb
xorb
xchg
mov
dec
pop
jo
jb
lods
faddp
pop
jb
jb
fs
jne
inc
loopne
mov
sub
sbb
mov
pop
mov
sub
or
jne
dec
out
push
xor
adc
cwtl
shl
sub
pop
xchg
mov
and
push
fs
mov
or
sti
cld
sbb
je
shlb
push
iret
jg
fisubs
adc
xchg
jmp
fucomp
ret
pop
pop
into
sub
or
mov
cmovae
lods
xchg
lcall
or
mov
mov
pusha
mov
loope
xchg
add
ror
gs
mov
xchg
push
sbb
push
jmp
mov
xorl
inc
mov
and
add
outsl
xorb
jle
fnstsw
pop
clc
lods
add
sti
jno
stos
mov
roll
movsb
das
cltd
orl
xor
xor
hlt
push
cli
pop
ds
xchg
movsb
or
mov
xchg
pop
and
nop
fisttps
adc
test
jecxz
mov
es
rol
inc
dec
je
xlat
xorl
cmp
cmpb
xor
or
mov
jne
push
pushf
mov
cmc
call
sbbl
imul
fdivl
adc
mov
js
add
inc
adcl
mov
cmp
roll
sarl
popf
repnz
xchg
imul
js
fs
cltd
sub
test
cmp
dec
cmp
xor
dec
mov
std
sub
push
mov
fst
or
data16
jl
cmc
pop
xchg
pop
adc
js
testl
negl
jno
adc
cli
mov
imul
push
mov
mov
cli
into
sub
mov
mov
mov
jno
das
mov
sti
push
mov
mov
aaa
adc
sub
pusha
int
enter
popa
pop
lods
inc
xor
sub
cmpb
sub
std
negb
mov
mov
cmp
movsb
mov
pop
jg
mov
xor
and
dec
scas
lods
adc
pop
aaa
frstor
addr16
mov
jg
xor
mov
xchg
mov
aas
lock
je
mov
in
mov
mov
sbb
leave
js
jo
inc
imul
lahf
and
cmp
jne
inc
sub
dec
add
mov
int3
outsb
mov
imul
sub
add
mov
mov
mov
lret
mov
xor
lcall
cld
lods
mov
addr16
pop
sbb
add
jnp
stc
add
pop
sub
add
cmp
ret
jp
in
hlt
incb
push
pushf
pop
jne
loope
imul
aad
hlt
in
test
mov
or
dec
mov
stc
xchg
cmpsb
xchg
push
lods
xor
outsb
xchg
data16
mov
mov
flds
xchg
fisttpl
loop
dec
pusha
ss
outsl
cmpsl
and
lahf
sarl
cmp
xchg
or
jne
adcl
ss
out
cmp
cmpsl
mov
cmp
mov
dec
push
mov
push
shll
cmp
xchg
sub
arpl
fs
jle
inc
push
mov
jle
les
sahf
mov
popf
aaa
dec
mov
sarb
mov
sbb
cmp
in
or
movsb
adc
es
shll
test
dec
lods
push
mov
or
cmovs
push
imul
mov
addr16
mov
stos
je
dec
or
dec
cwtl
adc
jp
sub
mov
jl
cld
xor
ds
addr16
xchg
in
das
sti
push
fbstp
aas
cmc
xchg
repz
jbe
cwtl
push
and
scas
push
pop
out
mov
or
jmp
push
stos
mov
mov
adcl
aas
cmpsb
movsl
pop
ds
or
fstpl
jl
adc
cwtl
cmp
inc
shlb
cmp
sub
cmp
fcoms
lds
mov
fcompl
sub
jns
js
out
das
dec
inc
inc
sub
arpl
push
push
fimuls
push
int3
sbb
mov
inc
inc
lret
adcb
psubsw
push
jns
div
xchg
fldt
outsl
popa
dec
xor
jg
fisubrs
in
lods
decl
lea
xor
aad
jl
mov
repz
xchg
mov
shl
je
mov
xor
mov
add
loope
aad
ffree
lahf
push
adc
lods
aas
adc
sbb
sub
pop
jns
bound
cmp
pop
aas
repnz
fidivl
lea
mov
scas
inc
push
jge
xchg
inc
loopne
imul
lds
sub
or
mov
and
mov
or
jmp
mov
mov
xchg
dec
fdivrs
cs
mov
bound
mov
jae
mov
xchg
fbstp
xor
adc
mov
imul
xchg
jne
popf
test
cmp
pushf
jmp
mov
js
cmp
sbb
or
aam
notl
xor
cs
push
imul
jg
xlat
pop
movsl
pop
dec
and
jg
imul
test
das
inc
pop
sub
xchg
gs
xor
loope
shl
lcall
ljmp
mov
mov
and
dec
jl
cmpsb
dec
stos
adc
mov
aaa
push
jnp
cwtl
in
repnz
loop
divl
jno
sub
push
cld
pusha
cmpsl
mov
flds
ss
cmpsb
faddl
lods
lods
pop
aaa
pop
xor
lcall
or
dec
and
stos
or
and
mov
lret
leave
push
fs
lret
stos
sub
sahf
rorl
mov
inc
popa
and
lret
push
xchg
push
das
xchg
jb
fcoms
mov
add
mov
add
cltd
sbb
mov
jl
pop
mov
fists
imul
and
out
cmpsb
repnz
dec
fwait
cmp
adcl
and
push
xchg
mov
xchg
test
dec
insb
inc
jg
lahf
inc
or
pop
cltd
ljmp
iret
roll
cs
mov
add
adc
movsb
in
adc
jno
scas
push
sub
xchg
mov
sub
or
mov
dec
pop
mov
sub
popf
icebp
pop
add
outsb
andl
test
push
adc
ss
ret
pop
mov
dec
loope
adc
pop
ror
jecxz
fnstcw
iret
stc
mov
and
pop
js
insb
int3
lahf
dec
mov
mov
repz
jmp
jg
aam
ss
inc
mov
aaa
mov
lods
mov
xor
stc
mov
call
fldl
push
outsl
mov
pop
cli
sub
cmp
mov
jnp
jl
xchg
stos
in
and
sbb
insl
imul
add
cmc
sti
and
jg
mov
test
call
dec
mov
aaa
lods
push
cmp
inc
add
in
cld
in
pop
jp
pop
jp
sbb
sbb
fisttpl
push
imul
dec
popa
roll
push
mov
mov
adc
pop
call
xor
popf
call
mov
mov
jp
pop
mull
mov
mov
push
decb
push
push
notb
pop
dec
sbb
push
pop
adc
lahf
xor
movsb
lea
out
outsl
pop
and
push
mov
daa
ss
adc
sarb
bound
mov
lods
adcl
dec
test
mov
rcrl
rcr
or
jp
movsl
pop
or
pop
pusha
push
sub
mov
stos
outsl
adcb
int3
clc
aaa
push
cmp
adc
lahf
test
push
das
ja
add
rcr
addr16
sub
cmpsb
inc
rcll
push
int
dec
sub
fildll
addr16
addb
adc
pop
push
fidivl
add
xchg
add
push
je
push
into
in
scas
insb
xchg
sarb
pop
movsb
add
popa
add
es
adc
mov
adc
push
inc
or
lock
pop
mov
add
jns
mov
outsb
inc
jecxz
ss
sbb
data16
inc
out
sub
iret
or
es
idivb
test
or
cli
pop
aad
int
jl
cltd
and
sub
fistpl
inc
adc
fildll
daa
mov
mov
outsb
inc
hlt
cli
dec
cmp
and
je
push
hlt
or
push
sub
shlb
hlt
adc
repz
call
in
xor
inc
insb
mov
ljmp
push
xchg
push
pop
test
mov
cmpsl
outsl
andb
pop
push
adc
imul
inc
leave
mov
cmp
cmp
int
loop
cmpsb
cmp
push
in
and
stos
sub
test
dec
lock
cmp
adc
dec
movsl
ljmp
jmp
aas
cmpsl
pop
xchg
fsubl
aas
rcll
add
fsubrl
push
jmp
xor
push
lock
mov
xchg
ds
jle
adc
add
lods
add
cmp
test
lods
jg
sub
jecxz
adc
aam
stc
fidivrs
aas
mov
repnz
ja
lds
jmp
incb
sbb
fcmovu
cmp
and
ss
xor
mov
or
sub
mov
mov
inc
mov
mov
inc
jl
mov
loopne
cwtl
dec
mov
scas
jl
mov
cmc
xchg
stos
negl
cmp
mov
push
jno
aaa
dec
pushf
scas
xchg
shlb
jmp
cmp
sub
mov
fs
cmp
ret
fsubl
sbb
jle
es
outsl
leave
sub
popl
mov
ret
pop
mov
cwtl
in
pextrw
add
rcll
cmc
sub
std
xchg
sbb
pop
cmc
inc
andl
mov
popf
sub
jno
out
fsubl
and
push
and
and
in
loop
inc
pop
jb
mov
inc
dec
mov
push
aad
fildl
in
ds
dec
mov
lret
jno
mov
repz
mov
inc
pop
fucomp
jp
cli
mov
aaa
push
or
out
pusha
mov
jo
mov
mov
inc
out
sbb
mov
jmp
hlt
jl
push
hlt
pop
call
clc
outsb
mull
cmp
fsin
je
push
xchg
imul
mov
jae
push
out
push
leave
jp
mov
mov
cmp
cmc
das
imul
ljmp
cmp
push
jbe
push
pop
in
or
cld
es
cmpsl
fldl
fstpl
xlat
mov
xchg
xchg
rol
jge
mov
enter
int3
mov
mov
and
popa
mov
jg
movsl
or
mov
jg
repnz
sbb
sbb
mov
divb
xchg
enter
mov
adc
jp
out
xchg
repnz
sub
popa
daa
ret
ljmp
bnd
add
popf
lods
and
sbb
dec
jae
mov
std
xchg
push
bound
xor
ljmp
rol
mov
dec
pushf
sar
and
and
sub
and
test
std
push
dec
mov
sub
inc
xlat
rclb
xchg
aad
cmp
stos
fists
fstl
das
bound
movsb
and
sarb
jp
lods
jns
mov
mov
jno
gs
insl
or
push
sahf
push
or
lods
outsb
push
or
mov
jle
ss
xchg
filds
lock
adc
inc
idivb
scas
mov
lods
lcall
push
mov
pop
mov
lods
add
and
cmpsl
divl
jg
push
sbb
push
les
stos
add
xchg
xor
int3
dec
lock
pushf
add
xchg
sbb
dec
mov
adc
mov
imul
cmc
sarb
xor
inc
mov
or
fmulp
adcb
dec
xchg
sbb
cmpsb
leave
inc
dec
push
push
negb
push
sbb
mov
mov
pop
and
adc
cmc
scas
xor
out
sub
push
jl
push
loop
stos
dec
fwait
adc
inc
push
or
idivl
test
xchg
push
fdivl
fwait
pop
mov
xor
jl
push
jb
xchg
and
sub
and
insb
sbb
movsb
imul
fnstenv
call
xor
das
push
inc
jle
cmp
mov
movsb
xchg
jne
add
sub
cmp
adc
sbb
shrb
jmp
test
push
sarb
or
test
dec
xchg
bound
pop
das
jge
addl
jmp
xchg
decb
sbb
and
hlt
sti
pop
pop
sub
add
aaa
out
ret
rorl
leave
xor
mov
pop
int
push
fwait
push
ja
dec
dec
lcall
jge
mov
movl
xchg
test
xchg
fcomp
mov
mov
add
repz
fisubrs
leave
jb
mov
adc
clc
andb
in
stos
add
jecxz
sub
inc
and
cli
dec
pusha
fdivrs
add
jbe
adc
push
push
sti
std
pop
call
pop
ljmp
mov
mov
sti
push
pop
fidivs
mov
sahf
pop
pop
pop
nop
in
nop
jno
add
repnz
dec
aam
add
popa
ret
xchg
test
fs
cmpsb
xchg
mov
shrl
pop
push
lret
adc
pop
int3
icebp
les
or
push
fdivr
pop
cmp
inc
cli
std
xchg
sbb
jns
pop
add
sbb
or
xchg
jbe
inc
fistps
mov
adc
movsb
push
rcl
daa
mov
mov
mov
jne
add
xchg
call
xchg
mov
mov
andb
clc
jle
sbb
add
xchg
les
sti
stc
in
cmc
sbb
addr16
inc
call
sbb
scas
inc
lcall
xchg
pushf
lods
add
inc
jge
ficoml
inc
sub
pop
cld
adc
mov
outsl
mov
sub
push
in
jecxz
dec
clc
cmp
jp
enter
cmp
or
adc
call
xchg
mov
lock
cmc
jl
xchg
add
cmp
inc
jmp
sub
pop
xor
sub
leave
push
mov
cld
push
xor
mov
mov
lods
dec
push
pop
push
pop
lds
mov
jl
pop
pushf
test
pop
sub
jmp
push
pushf
test
out
mov
mov
and
aaa
inc
jae
push
in
fcoms
cmc
push
loope
xchg
out
dec
orl
xlat
add
cmp
or
call
repnz
dec
scas
pop
sahf
int3
ficomps
imul
mov
mov
dec
push
push
cmp
lcall
or
xchg
or
jbe
jmp
popf
imul
mov
dec
xor
das
pop
push
cmp
adcl
mov
xorb
push
mov
mov
stos
lea
lock
stos
aam
adc
cmc
dec
mov
push
mov
dec
loop
out
mov
jp
ret
mov
jbe
arpl
add
push
sar
repnz
data16
dec
dec
dec
les
fwait
cmp
dec
stc
cmp
in
aaa
sbb
ss
and
cmp
test
xlat
testl
xchg
pusha
imul
js
jae
addr16
and
mov
fwait
scas
icebp
pop
jnp
mov
dec
push
adc
aaa
test
call
mov
mov
insl
and
mov
cwtl
jp
cmp
movsb
test
arpl
movsb
lahf
pop
ret
mov
sbb
dec
repnz
movsl
pop
lods
xor
pop
or
fildll
add
push
ljmp
and
sbb
fucomi
xchg
push
lock
cmp
stos
xchg
ret
push
daa
lcall
add
pop
sub
cmp
test
adc
scas
xchg
mov
stc
adcl
cmc
or
sbb
dec
adc
mov
sub
jge
pop
repnz
lock
lcall
or
shr
pusha
outsb
imul
stos
je
jg
mov
push
repnz
push
mov
push
cmp
ficompl
push
es
ss
fstpt
insl
lods
dec
jle
dec
pusha
pushf
mov
push
cmpsb
int3
arpl
psubb
xorb
jp
sahf
xchg
gs
add
loope
movsb
cs
add
pusha
out
scas
adc
or
jl
xor
and
xchg
fdivs
adc
test
test
mov
or
pop
mov
lock
xchg
in
mov
mov
pop
lahf
pusha
bound
push
inc
mov
fwait
push
dec
xor
loopne
in
and
lods
cmp
gs
mov
out
insl
into
in
and
mov
es
fadds
addr16
pop
clc
push
roll
cmp
lds
sub
dec
loop
jb
int3
lret
into
adc
iret
xchg
pop
fwait
imul
jmp
insl
clc
or
int
or
push
jbe
jge
dec
cltd
mov
cmp
ret
or
mov
mov
sub
fwait
jg
clc
gs
mov
or
xchg
cmpsb
jae
xchg
adc
mov
mov
sub
insl
ret
inc
mov
rcr
fs
mov
sub
aaa
or
mov
mov
and
xor
fwait
mov
xchg
jecxz
and
leave
call
stc
cmp
test
mov
jmp
mov
mov
add
cs
push
mov
inc
pop
ja
dec
notl
loopne
pop
rorl
pop
add
push
shll
imul
xchg
outsb
push
mov
rolb
ljmp
ds
inc
pop
mov
inc
xchg
mulb
ja
jmp
es
mov
insb
push
shl
sbb
push
pop
push
or
mov
inc
push
pushf
aam
mov
sub
mov
repz
es
rolb
iret
sar
cmpl
test
adc
out
pop
sbb
pop
hlt
adc
jg
and
iret
jo
test
iret
fcomps
and
aaa
mull
in
jnp
es
insb
inc
xchg
fisubrs
push
js
pop
or
sbbl
push
mov
lock
imul
jo
mov
cmc
push
pop
jg
inc
jle
ds
mov
add
xor
out
out
inc
js
mov
rcl
mov
scas
test
mov
or
cmpb
sbb
and
or
sub
pop
test
and
jne
inc
sub
push
sub
add
pop
cld
lahf
cld
ret
or
ljmp
outsb
icebp
pop
push
push
cmp
into
icebp
cmp
pusha
stos
cs
ficoml
lret
mov
xor
lahf
xor
add
xchg
shll
cmpb
lret
test
mov
dec
aaa
mov
adc
cmc
sbb
dec
xchg
in
xchg
pminsw
push
popl
pop
in
inc
aas
popf
arpl
addps
or
loopne
cmc
rcrb
test
call
jnp
push
cmp
test
push
js
cmp
and
sahf
cli
sahf
add
cmp
in
andb
jns
push
lret
xor
ficomps
aad
sbb
xor
stos
inc
ss
push
push
push
adc
je
sbbl
mov
inc
mov
adc
sbb
or
inc
mov
out
out
movsb
enter
mov
jmp
xchg
icebp
jo
mov
sub
adc
jl
ficoml
sub
out
jecxz
push
xor
pop
xchg
test
jmp
jmp
popa
sbb
out
inc
mov
loope
push
xchg
adc
fmul
mov
ret
mov
into
cmp
inc
mov
pop
lret
push
jmp
jle
mov
mov
dec
sbb
sbb
rol
fmuls
dec
out
or
movswl
xor
mov
jb
push
lock
inc
fidivrs
ss
outsl
xor
mov
lods
push
out
dec
push
inc
popa
or
lret
int
cmp
adc
adc
or
sbb
inc
fidivl
mov
clc
lcall
test
push
outsl
leave
jns
inc
xchg
jae
mov
push
xor
xor
outsl
cmp
mov
xor
out
and
cmp
rcrb
push
inc
cmpl
mov
cmp
push
testb
mov
push
sbb
xchg
adc
pop
fcmovnbe
bound
mov
add
repz
adc
loope
mov
popa
sub
outsb
test
push
add
adc
mov
sub
inc
xorb
jo
inc
imul
lahf
pop
mov
sbbb
fs
and
sub
lods
add
push
xor
xchg
inc
ror
and
aam
mov
and
jmp
nop
push
inc
sti
push
les
fnstcw
sub
pop
movsl
xor
jno
rdpmc
sub
xchg
aas
in
cmpsb
js
mov
sbb
insb
mov
loope
push
fnstcw
dec
add
or
mov
cmp
loope
lds
out
lahf
jo
and
inc
sarl
into
fbld
xchg
outsl
into
sub
push
outsl
xchg
push
call
loop
sbb
lcall
inc
mov
inc
xchg
pop
nop
add
mov
jmp
imul
cwtl
repz
sahf
add
imul
pushf
or
fcmovbe
mov
push
cli
adc
into
mov
pop
out
add
mov
shr
mov
lret
mov
push
add
sub
xchg
pop
push
jno
xor
loopne
fcoml
jbe
inc
dec
push
sbb
pop
cmpsl
stos
push
add
sti
push
es
dec
shrb
mov
sub
loope
xor
sbbb
jns
fcoms
lret
adc
fists
sarl
inc
pop
shrl
xor
jl
mov
test
ss
aas
cmp
inc
jne
popa
inc
aas
jb
pop
push
leave
inc
adcl
lcall
out
cmp
dec
push
pop
jg
int
out
cmp
sbbb
popa
mov
pop
data16
out
sub
jb
sahf
dec
das
iret
xchg
gs
xchg
adcl
scas
in
sub
sbb
cmc
push
dec
fs
fistps
pop
dec
lds
pop
fs
movb
add
or
popa
xchg
push
adc
xchg
add
loop
pushf
fwait
jp
mov
movsb
ret
inc
movsl
adc
cmovs
js
cmp
adc
mov
out
jnp
fcmovnu
dec
cld
lea
cli
xchg
add
fiadds
push
mov
dec
ds
lods
xor
ror
push
mov
and
dec
jns
or
mov
sub
movsb
fwait
mov
test
jge
loopne
rclb
push
jle
sub
push
lcall
inc
lcall
out
test
adc
mov
sub
sarb
xor
jle
sub
cs
mov
cmp
incb
or
mov
leave
cli
inc
sbb
mov
fwait
adc
cld
or
cmpsb
rorl
mov
nop
pop
jbe
sub
std
jl
xchg
stos
inc
lds
mov
mov
movsl
cmpsl
jl
les
jmp
testl
dec
cs
xchg
cld
mov
sub
jns
lods
push
and
or
lods
rorl
pop
xor
push
rcr
das
imul
fmull
cmp
and
push
std
mov
jecxz
add
add
sbb
xchg
cmp
lret
jp
inc
test
push
xchg
xor
sub
add
pusha
dec
inc
mov
stos
nop
insb
sbb
cmpsl
loopne
test
mov
test
std
or
push
mov
in
jnp
cmc
mov
shlb
test
mov
rcrl
fwait
xor
pop
xchg
insb
ret
out
xor
cmpsl
leave
inc
push
push
mov
inc
dec
imul
jnp
and
mov
and
std
mov
packuswb
test
xchg
roll
xchg
shrb
xor
daa
imul
adc
jge
decl
cmovl
jecxz
mulb
fs
dec
xchg
mov
xor
jo
repnz
leave
xchg
xorb
cmovs
loop
xchg
ja
ja
adcb
testl
and
nop
ret
xor
lea
or
lret
insl
jl
or
add
iret
mov
xor
sub
mov
mov
sbb
sbb
lcall
jmp
das
inc
je
or
lock
clc
ds
pop
or
dec
insb
xlat
mov
adc
sbb
jo
int
out
sbbb
sub
push
je
inc
pop
pop
mov
cmpsb
cltd
mov
imul
mov
sbb
inc
cmp
mov
cwtl
aaa
frstor
mov
dec
and
or
xor
mov
mov
jge
mov
add
out
xchg
imul
push
imul
fs
lock
pop
hlt
mov
push
mov
aam
enter
xchg
jbe
cld
push
push
sub
or
adc
jle
lret
jns
push
lea
jmp
dec
add
xchg
mov
xchg
lds
inc
gs
push
and
push
stos
pusha
lea
jbe
lock
stc
xchg
inc
faddl
ljmp
pop
repnz
cli
fs
insl
sub
cld
stc
stc
pop
ficompl
sub
and
add
fidivrl
or
sub
or
out
daa
xchg
mov
pop
pop
fidivrs
push
aam
je
pop
inc
popf
cmc
fists
jne
out
sub
hlt
test
test
push
jge
xchg
xchg
xchg
or
xchg
stc
flds
xor
dec
cmpb
add
mov
jp
mov
test
addr16
dec
lahf
mov
sti
xor
add
arpl
xor
ljmp
test
in
jle
adc
xchg
stos
rclb
sti
pushf
mov
pop
mov
popf
xchg
dec
jmp
jge
scas
mov
mov
dec
push
out
push
inc
and
enter
sbb
fimuls
hlt
add
and
lds
xor
shrl
inc
or
fsubr
xor
subl
imulb
jns
pusha
push
pop
pusha
push
adc
jns
cmc
cmp
lods
pop
add
insl
lds
mov
mov
vpackssdw
jle
jmp
and
and
popf
imul
xor
jns
insb
nop
mov
ficomps
in
icebp
fistpll
lods
insl
lret
dec
movsb
nop
fsub
mov
adc
dec
lea
jecxz
mov
in
mov
sbb
sub
je
add
mov
test
mov
das
and
pop
xor
or
sbb
cmp
xchg
xor
repz
pop
test
leave
jo
insb
push
les
lds
or
add
add
push
lret
xchg
jo
loop
add
decb
lret
leave
mov
cmp
test
leave
mov
sbb
jle
push
les
cld
dec
sub
mov
and
js
mov
push
mov
adc
outsb
dec
mov
adc
jecxz
sbb
lret
je
mov
jp
fcmovb
mov
insl
mov
aaa
leave
xor
sbb
pushf
adc
jb
mov
pop
jge
mov
leave
repz
aaa
stc
mov
mov
mov
hlt
mov
mov
add
out
test
mov
lahf
divl
mov
and
cmp
inc
dec
popa
nop
imul
insb
push
addr16
addr16
push
sub
lret
and
ljmp
cmp
pop
jg
stos
out
mov
fbstp
loope
mov
jg
lcall
ljmp
lcall
rcl
push
repz
mov
push
sub
sbb
mov
inc
in
push
nop
inc
jno
sti
ljmp
cmp
jge
mov
aad
adc
hlt
mov
add
fst
push
pusha
jne
shrl
sub
pop
popf
jns
scas
inc
ret
iret
test
divb
mov
push
sahf
add
xchg
pop
movsl
jg
jg
xor
movsl
or
int
popf
cmp
add
sbb
rclb
jecxz
adc
push
mov
mov
outsl
andl
mov
shll
popa
icebp
loopne
insl
lret
decb
shrl
xchg
int3
xchg
add
adc
add
aaa
test
dec
mov
test
inc
adc
insb
mov
scas
jecxz
test
fs
out
or
sub
clc
xorl
scas
mov
out
lret
mov
adcb
scas
adc
cmp
rorl
xchg
sbb
mov
sbb
lahf
test
rorb
es
in
ret
add
repnz
shrl
mov
jo
lret
je
daa
notl
inc
mov
scas
shlb
jp
fidivl
sub
es
data16
pop
int3
adc
shlb
jge
push
add
cmp
lods
push
jge
adc
dec
dec
icebp
add
xor
xlat
icebp
push
pop
repnz
sub
sbb
cmp
imul
testb
cmp
ljmp
hlt
jnp
sahf
dec
pusha
jmp
in
or
pusha
imul
fistps
ja
dec
mov
les
xor
sahf
push
jmp
and
test
cmpsb
out
shrl
mov
push
les
arpl
imul
shll
mov
push
iret
ret
sti
or
aad
inc
roll
dec
ret
enter
loop
jns
xchg
cmp
incb
repnz
push
ljmp
cmp
shll
lret
push
adc
push
push
lds
jg
jecxz
or
xor
test
cmpsl
jbe
jns
call
aaa
lret
pop
shll
std
add
pop
jl
xor
or
mov
mov
aad
lods
aam
jnp
lret
push
rcll
stos
and
xchg
flds
or
outsl
and
repnz
es
xchg
cmp
push
leave
push
rolb
xor
lods
sub
mov
ret
xchg
dec
push
add
xchg
and
mov
push
inc
xor
cwtl
dec
dec
lret
adc
data16
xchg
call
add
out
cld
sbb
fidivs
test
push
das
test
mov
in
int3
call
mulb
or
stos
mov
xor
push
pop
loop
xor
cmp
pop
andl
nop
ret
add
mov
jbe
outsl
jecxz
sbb
mov
ficomps
shll
pusha
fsubr
nop
popa
add
mov
xor
cmp
pusha
lea
hlt
imulb
aas
das
or
movsb
dec
adc
cmpsb
sub
mov
or
unpcklps
or
push
shrl
lock
jb
mov
pop
addr16
cmp
shrl
into
mov
popf
or
jmp
adc
scas
mov
and
icebp
adc
xchg
pop
or
ficompl
cmc
lcall
dec
std
push
int3
inc
xchg
leave
btc
lret
jge
test
shlb
xchg
call
fdivl
in
cmp
push
xor
fiadds
mov
xor
mul
cmc
lret
and
lods
xor
or
cltd
lods
js
sub
push
dec
incl
mov
shrl
daa
lcall
xchg
jg
dec
cmp
stos
push
cltd
lea
imul
jbe
jmp
xchg
imul
repz
jae
dec
enter
xor
xor
das
xchg
out
xchg
movsb
mov
cmp
pop
dec
cld
sbb
push
ja
incb
outsl
lcall
subl
stos
icebp
jb
clc
inc
mov
sbb
xor
repz
aaa
sub
in
out
pop
or
sbb
pop
sbb
inc
mov
xor
xchg
dec
int3
bound
and
nop
jns
inc
xchg
leave
cs
clc
sbb
push
and
sub
test
push
xor
jp
pop
push
in
xor
xor
clc
jns
push
iret
mulb
bt
cld
jo
stos
xchg
rorb
outsb
cmp
int
and
jl
and
ret
aas
aaa
sbb
mov
adc
mov
insb
ja
rolb
and
inc
xchg
push
je
xchg
push
imul
mov
lods
add
ficomps
ja
jne
out
pop
mov
add
fs
xor
adc
cmc
leave
gs
cmc
orb
test
xor
xchg
lods
or
cltd
or
pop
movsb
inc
jge
add
add
jnp
xchg
sub
adc
das
xchg
fdivs
addb
jo
out
lods
xchg
and
stc
or
fidivrs
sub
hlt
dec
mov
adcl
adc
mov
add
cmpsb
adc
push
add
movsb
in
fs
push
es
fiaddl
dec
sahf
sub
or
mov
mov
scas
orb
in
fmuls
jecxz
mov
mov
cli
jbe
or
hlt
outsb
pop
fnsave
outsl
jle
dec
std
mov
out
adc
adc
inc
mov
sbb
xchg
push
push
sub
scas
jle
cmpsl
pop
aaa
push
push
aaa
ret
mov
daa
ljmp
jne
lret
popf
jne
idiv
pop
das
pop
mov
adc
push
enter
arpl
aaa
mov
jmp
push
inc
outsb
pushf
lret
xchg
xlat
pop
mov
adc
push
xchg
dec
movsb
cmp
cmp
jb
xchg
xchg
test
mov
and
and
rcrb
xchg
into
out
mov
or
scas
mov
addl
mov
mov
lea
iret
add
sbb
inc
cltd
push
fcmovnu
cmpsl
cli
mov
ljmp
cwtl
pop
rcll
popf
jno
clc
mov
movsl
js
shll
shrl
lahf
inc
shll
cmp
in
jmp
lcall
sub
ss
pop
into
sar
insl
add
loopne
aaa
popa
xchg
movsb
dec
mov
test
data16
push
or
or
lods
into
in
aas
lock
rorb
mov
pop
mov
call
daa
arpl
push
sti
test
pop
sar
data16
ret
arpl
pop
adc
mov
mov
mov
xchg
je
mov
xchg
xchg
aaa
pop
jnp
in
int
repz
add
push
jmp
mov
cmp
adc
nop
xchg
cmp
push
or
lods
inc
loop
xor
ja
mov
xor
inc
lods
addr16
mov
arpl
push
jne
or
sub
add
faddl
push
adc
add
mov
loopne
popl
mov
addr16
movsl
ljmp
pop
push
lods
jne
es
test
dec
xor
lock
push
xchg
cmpsb
mov
adc
es
lret
outsl
stc
xchg
xchg
outsb
xchg
in
cli
jp
pop
pop
imul
mov
icebp
adc
pop
bnd
mov
or
sbb
test
rcrb
cmpsb
mov
and
mov
stos
push
adcb
push
cmpsl
pushf
ror
sub
das
adc
repnz
push
add
out
mov
ret
or
adc
bound
jmp
mov
fnsave
xlat
or
mov
cltd
xchg
mov
dec
mov
sahf
sbb
pop
stos
push
add
inc
push
cmpl
test
inc
mov
popa
pop
lods
incl
cwtl
repz
push
mov
cmp
dec
or
and
pop
xor
pop
lods
dec
fwait
mov
inc
sbb
push
dec
in
in
xchg
push
or
sub
pop
fstpl
pop
xor
das
adc
xorb
sbb
scas
sub
dec
lods
aas
fcoms
inc
sti
cld
xchg
movsb
push
jb
loope
fcompl
sbb
add
into
cs
add
negl
inc
cmp
fucomip
ljmp
test
cmpsl
jg
mov
push
stos
pop
sahf
das
cmp
adc
jno
es
mov
jge
cmp
arpl
fmuls
adc
jp
adc
hlt
fstpt
mov
jns
push
cmp
jg
dec
addb
pop
outsb
stos
sub
arpl
out
add
dec
adc
sub
or
inc
sub
dec
sub
cli
fidivs
jle
pop
sahf
popf
jl
pop
jns
fwait
sbbl
pusha
sahf
stc
loop
rcll
adcb
ss
outsl
dec
mov
and
cli
testl
pushf
jbe
lcall
mov
mov
cli
jae
xor
fidivs
call
cmpsl
aam
test
mov
loopne
and
push
mov
mov
push
nop
insl
imul
mov
imul
lds
and
js
push
loop
cmp
mov
pop
inc
aas
push
cmpl
add
pop
mov
inc
scas
mov
int
ret
inc
dec
add
shl
jo
xor
int3
dec
subb
mov
xor
cs
mov
ret
in
mov
addr16
imul
mov
daa
shl
jecxz
xchg
ljmp
inc
and
jge
cmpsl
sbb
cmp
mov
cmp
lret
xor
fwait
in
dec
dec
sub
stos
sub
pusha
jno
cwtl
stos
ss
cld
popa
mov
pop
sarb
cwtl
stos
lret
and
shlb
es
push
and
in
dec
mov
es
push
and
and
push
jmp
test
popa
adc
xchg
inc
jo
mov
fs
mov
stos
mov
sar
dec
sbb
mov
mov
pop
pop
mov
fldl
repz
scas
lea
icebp
bound
aas
out
pop
cld
mov
push
sti
push
dec
shll
xchg
pusha
rorl
mov
cmp
cmp
jmp
test
or
repnz
adc
orb
jmp
ja
je
inc
pop
das
in
out
add
xor
sub
jae
aam
daa
add
dec
xor
shl
ja
or
es
dec
pop
inc
out
std
in
push
pushfw
pop
dec
mov
gs
aaa
aam
mov
inc
fiadds
gs
lret
pop
fisttpll
gs
cmp
pop
ljmp
xchg
mov
adc
and
decb
sub
iret
pop
push
mov
jae
push
popf
fistpl
add
in
outsb
in
idivl
int3
popf
fadds
xchg
jnp
sarb
or
int
pop
lcall
mov
andl
inc
xor
mov
jne
adc
fwait
das
pop
jae
shl
dec
dec
cmp
fbld
pop
subb
push
shl
sbb
mov
dec
xchg
sbb
cltd
adc
pushf
outsb
push
fisubrl
push
fdivrs
dec
cmp
jbe
insl
dec
cltd
pop
arpl
ljmp
imul
or
pop
adc
jae
stos
mov
ds
fdivrl
xlat
sub
iret
jns,pt
fwait
mov
fs
dec
adc
inc
fs
dec
cwtl
add
adc
or
cmp
pop
jge
sbb
fnstcw
dec
lahf
jb
in
adc
inc
pop
jbe
int
mov
std
sub
repnz
xchg
sbb
push
mov
push
pushf
jbe
es
or
add
lods
jae
or
ds
sbb
mov
or
int
outsb
mov
icebp
jne
mov
rcl
jge
add
test
cmpsl
add
jmp
cltd
ja
int
adc
fadds
in
arpl
pop
repnz
loopne
jne
gs
das
fchs
pusha
mov
and
add
out
mov
test
cs
jmp
add
out
mov
mov
mov
fs
dec
sbbb
or
cmc
mov
xchg
imul
nop
aaa
and
pusha
add
push
idivb
aaa
push
xlat
inc
dec
mov
push
mov
add
aaa
mov
scas
fstps
add
pop
add
sub
mov
sub
aaa
sbb
out
cmp
adc
inc
test
inc
add
les
jne
jo
mov
pop
add
inc
xchg
pop
stos
xor
jg
mov
mov
stc
addr16
movsl
bound
out
adc
out
cmp
or
mov
and
negb
ret
int
mov
rorb
lods
jle
or
pusha
fwait
call
into
sub
call
nop
loopne
pop
sbb
aad
adc
cmp
jnp
add
dec
add
cmp
insl
push
or
pop
ret
jb
in
lret
xchg
ret
jb
fs
mov
push
mov
mov
fsub
sub
mov
fdivrp
scas
ss
nop
sub
lcall
scas
cmp
add
sub
push
das
cld
into
and
rorl
adc
es
pop
not
call
mov
add
int3
int3
inc
mov
add
pop
pushf
mov
jle
daa
or
mov
movsl
cld
mov
repz
push
loope
cmp
lods
push
clc
jmp
inc
js
jecxz
inc
xor
inc
cmp
je
jns
adc
and
or
nop
sub
fsubr
pushf
inc
test
pop
dec
dec
pop
cmp
jl
in
mov
xor
jo
lock
cmp
xor
push
xor
js
stc
rcrl
fs
push
and
adc
lock
push
scas
daa
cmp
sti
push
cmp
stc
mov
push
bound
pop
clc
ja
push
popf
fucomi
out
pop
lret
jecxz
pushf
adc
pop
mov
mov
fstpt
adcl
and
add
repnz
sbb
push
and
test
loopne
cmp
push
push
cmpsb
cmp
jns
or
loope
not
shl
cmp
and
rcrb
mov
inc
sbb
aam
sub
in
sbb
inc
or
jns
push
ja
or
and
cmpsl
dec
fucom
fucomi
mov
in
mov
sub
imul
xor
sub
cltd
cmp
iret
hlt
add
in
pop
xchg
int3
add
out
lea
in
pop
dec
sbb
jo
cmp
in
and
stc
mov
jae
dec
out
cwtl
enter
mov
push
push
popf
rorl
scas
dec
mov
add
inc
icebp
fnstsw
lahf
jmp
pop
test
outsb
and
xchg
cmp
mov
jecxz
bound
mov
std
xor
daa
clc
and
push
dec
stos
xor
adc
frndint
sub
sub
daa
pop
lods
push
lea
sub
into
add
xchg
ret
mov
add
insl
test
mov
scas
nop
sbb
lahf
pop
xchg
dec
aaa
cld
lods
and
andb
xor
lret
jae
xchg
loop
jns
push
fs
scas
testb
add
sbb
jle
call
xchg
mov
jmp
into
in
push
imul
fidivs
pop
bound
mov
popf
mov
and
jns
movlps
xchg
xor
xchg
jg
clc
testl
inc
rcr
leave
ja
inc
lock
iret
dec
mov
cmc
movsl
xchg
mov
fxch
mov
dec
lcall
std
fcomps
movsb
jg
sbb
xchg
mov
mov
jle
aas
add
dec
and
adc
aad
stc
or
cmpsl
sub
addr16
sub
jg
fimull
or
out
and
dec
ss
push
xchg
cmp
jbe
add
or
push
jge,pn
xlat
inc
xchg
lods
inc
fucomip
push
cmp
lret
pusha
push
ret
lds
ljmp
cmp
sahf
ds
jno
rol
out
pusha
fcoml
xor
mul
push
fs
xchg
mov
pop
loop
add
daa
adc
mov
xor
inc
xchg
in
arpl
std
inc
ja
or
gs
adc
jne
popa
xor
and
push
jnp
mov
idivb
scas
rep
pushf
sub
in
in
fs
xor
lds
aas
mov
xchg
cmpsl
mov
fimull
cmp
mov
repnz
inc
nop
cwtl
jecxz
sbb
insl
cld
xor
pop
mov
pop
lret
iret
or
test
pop
mov
ret
imul
adc
test
mov
aad
inc
inc
std
fildl
popa
imul
jno
incb
pushf
imul
push
xchg
dec
ljmp
mov
les
sub
cmc
test
leave
out
add
int
adc
pop
dec
shll
lret
xor
lahf
pushf
mov
sub
das
mov
aaa
jb
stc
pop
jmp
dec
pop
jns
push
lds
ret
jle
fldcw
mov
cmp
in
je
push
dec
das
pextrw
or
jecxz
dec
dec
ss
pop
mov
lods
push
add
mov
iret
fs
iret
icebp
bound
movsb
leave
push
or
inc
push
xchg
pop
sub
inc
pop
xlat
push
hlt
mov
js
pop
outsb
xchg
mov
jno
ja
test
loop
adc
jmp
mov
xchg
mov
jp
cld
push
dec
stos
mov
in
flds
loop
aam
inc
dec
mov
lds
rcrl
cli
dec
jo
dec
es
dec
int
fs
mov
inc
pusha
push
pusha
sbb
sub
scas
cmpsb
call
shl
or
dec
mov
divb
negl
sub
nop
push
and
negl
lock
test
out
les
or
dec
push
aad
cmp
mov
cld
push
insb
add
jo
out
aas
jne
cld
movsb
dec
inc
aaa
sbb
inc
movsb
mull
je
scas
jae
mov
sti
xor
mull
je
movsl
aaa
xchg
cmpsb
test
xor
jmp
in
in
xor
xchg
pop
outsl
pop
adc
cmp
xor
add
in
inc
clc
outsb
jg
adc
dec
dec
into
cld
pop
bound
dec
vmovntps
cmpxchg
lea
mov
push
add
rcll
mov
and
addr16
or
cmp
jle
ret
xor
mov
jnp
cmp
outsb
mov
lods
adc
xlat
lds
fnsave
cmpb
push
xor
jno
sub
xchg
cs
push
xchg
idivl
fdivs
je
add
int3
imul
int3
in
cmp
xlat
mov
mov
movsl
insb
scas
in
dec
fstps
adc
test
aas
jmp
icebp
xchg
jg
push
xor
test
jne
jno
loopne
repnz
pop
movsb
lahf
mov
cmp
adc
fwait
orl
sbb
cwtl
arpl
sub
fwait
or
cltd
sbb
cld
or
nop
in
adc
aaa
pop
shrl
xor
mov
sbb
popf
ret
or
ja
mov
je
cmp
inc
jnp
nop
push
gs
cmp
mov
sbb
xlat
jl
mov
and
xchg
jns
in
ljmp
into
sar
cmp
xor
mov
movsl
pusha
dec
xchg
mov
test
sbb
insl
xor
xchg
cmp
sub
lcall
mov
jge
mov
pop
hlt
push
mov
xor
sub
mov
dec
mov
xchg
mov
jge
jle
push
repz
out
iret
and
shll
pop
cmp
fwait
xchg
inc
shll
pop
jle
inc
sbb
loope
shl
mov
mov
fisttpll
mov
sbb
fcompl
shlb
shll
in
fnstcw
aad
mov
dec
mov
xlat
sub
push
cmp
ret
mov
cmp
lret
or
and
push
in
jg
and
jno
xchg
dec
mov
orl
cmp
cmc
divl
sub
es
loop
test
movsl
test
xchg
mov
mov
icebp
decl
movsl
mov
mov
aaa
pop
inc
jp
popf
call
les
push
scas
jg
push
mov
fdivs
mov
loopne
aas
sbb
xor
rcr
in
mov
int
push
jecxz
stos
mov
cld
cmp
jp
iret
adc
testl
jmp
in
push
icebp
dec
fldl
lcall
test
pusha
mov
decl
cmpsl
sub
sub
jae
das
push
jl
mov
std
push
mov
push
mov
outsb
or
repnz
mov
cwtl
rcr
es
inc
push
xor
and
xorl
xor
lret
lods
test
repnz
test
nop
pop
stos
xor
inc
jg
and
insl
mov
mov
or
and
jb
adc
mov
lods
nop
mov
xchg
cmc
pop
sub
sub
lock
push
out
jle
adc
or
out
lahf
addr16
loopne
lods
sbb
xchg
add
mov
test
es
cmp
jb
push
mov
pop
dec
jg
or
xorps
push
push
idiv
cs
jmp
fcmovbe
out
sub
cmpl
mov
pushw
mov
repnz
insl
leave
cmp
sarb
leave
dec
xchg
push
dec
or
pop
ss
xorb
sub
out
xor
mov
jge
pop
out
pop
pop
rcrb
cli
and
sub
xor
or
push
dec
jmp
outsl
sbb
push
fcmovnu
fcmovb
jge
mov
popa
jg
sub
xor
xor
cmpsb
dec
jae
jmp
es
pop
rolb
nop
mov
clc
pop
xor
xchg
and
sbb
lods
push
shrb
cwtl
cs
mov
sbb
ds
ss
ret
icebp
jns
test
adc
out
jge
sub
rorl
adc
sub
jge
jecxz
jbe
xor
cmp
dec
jbe
movsb
mov
jg
subb
jl
push
pop
push
jo
fldt
cmpsl
out
mov
icebp
loop
inc
jl
adc
in
add
inc
loope
stc
test
jge
lods
in
and
std
hlt
jp
push
sub
into
cmpsb
xchg
stc
leave
leave
jle
push
sahf
fnstcw
xchg
mov
out
jecxz
jno
ror
test
adc
daa
das
xchg
out
add
js
or
test
cld
std
int3
cld
inc
cwtl
push
mov
jp
cld
imul
test
pop
stc
stos
xchg
pop
sub
mov
subl
cmp
repz
inc
std
mov
movups
aas
xchg
and
adcb
fcom
fldl
mov
clc
dec
jne
cld
lock
jle
sbb
sbb
mov
cmp
xor
in
sbb
ss
in
les
sbb
fxtract
inc
lahf
loope
jb
and
insb
inc
sbb
hlt
xchg
mov
arpl
cmpsb
mov
je
inc
xor
cld
mov
or
fdivl
aaa
std
mov
push
xor
jne
mov
addl
out
ja
aas
push
out
cmp
pop
dec
cmp
mov
mov
sub
mov
adc
xchg
out
mov
mov
and
fnstenv
jnp
cmc
or
xchg
lock
add
adc
push
cmpsl
fs
sti
jmp
ret
or
inc
inc
mov
je
pop
into
sbb
push
and
bound
jne
xor
ja
iret
aas
mov
push
inc
sub
std
jle
outsl
das
xor
aad
aam
dec
pop
icebp
fidivs
mov
mov
mov
outsl
inc
fnstcw
aad
add
add
dec
adc
jo
test
in
push
xor
dec
aad
add
outsb
jg
and
call
movsb
clc
fdivs
cwtl
aas
pop
mov
and
data16
int
add
in
and
lcall
mov
fisttps
and
xor
divb
mov
lea
test
jg
inc
inc
jp
xchg
jle
icebp
repnz
xor
pop
repz
call
movd
push
imul
insb
maskmovq
divl
lahf
lds
mov
jo
fistpll
mov
daa
aaa
cmpsb
sub
xor
xor
dec
jecxz
inc
adc
fdivl
mov
push
sarl
mov
jbe
sub
jle
sbb
cmp
repz
mov
fstl
aam
xlat
insb
test
cld
sti
in
movsb
mov
cs
mov
pop
mov
stos
cmp
idivb
das
fwait
jbe
outsb
vunpckhpd
mov
les
in
std
iret
fs
jecxz
sbb
add
enter
dec
rorb
and
mov
jmp
popf
jle
js
sbb
jl
mov
push
and
stc
cmc
jg
cmc
xchg
push
adc
sar
lss
pushf
pop
inc
pop
out
jb,pn
mov
scas
xor
cld
adc
jmp
jae
push
lcall
mov
sub
adc
inc
push
ds
pop
out
aaa
add
fs
dec
fwait
mov
jae
pop
push
pop
push
rorb
add
xor
rcl
xor
lea
cld
shr
fstpl
mov
jle
aaa
addb
mov
and
ss
test
out
repnz
push
idivb
pusha
mov
shl
add
mov
add
daa
jns
daa
cmp
push
cmc
dec
and
ds
je
js
inc
push
dec
add
shlb
aam
sahf
test
ret
adc
fildll
and
pop
jmp
int3
negl
icebp
daa
adc
push
test
add
in
or
jecxz
rorl
xchg
jl
cmp
imul
mov
scas
cmpsl
push
inc
dec
jnp
inc
mov
inc
cmp
in
sbb
dec
stc
sub
add
add
lods
arpl
add
inc
lret
mov
adc
xchg
mov
mov
aad
adc
or
push
outsb
insb
or
fisttps
and
add
imull
xor
sub
add
sbb
mov
hlt
filds
fs
or
addr16
mov
popa
dec
ljmp
test
jbe
in
rorl
add
shlb
movsb
push
cmp
aas
lahf
push
cltd
iret
jmp
lret
ss
cmp
inc
icebp
in
out
popa
mov
cli
cmpsb
mov
js
xchg
inc
mov
jno
pop
dec
cltd
insb
daa
fs
in
mov
popf
sahf
repz
lahf
aaa
sub
xor
pop
ljmp
cmp
or
rol
ss
xchg
inc
negl
sbb
sahf
pop
mov
leave
mov
in
dec
loopne
clc
and
mov
rorl
add
loope
mull
mov
sub
xchg
scas
popw
pushf
int
cmc
cmpsl
and
mov
xor
adc
call
insl
hlt
pop
xchg
xchg
adc
push
push
in
push
mov
mov
repnz
loopne
push
mov
mov
cmp
test
adc
std
mov
push
sub
jl
dec
test
shll
cmp
sbb
dec
xchg
xchg
ret
or
in
or
cwtl
and
sub
xchg
xchg
push
mov
sbb
jo
aas
cmp
or
clc
ss
mov
or
mov
mov
adc
popl
pop
and
dec
or
sbb
fstps
sub
pop
xor
or
in
icebp
pop
loope
scas
jb
or
fstl
stos
ret
push
and
fstpl
and
cs
and
test
cmp
ja
call
lods
sbb
addr16
sbb
fistpll
test
mov
push
loopne
inc
lret
cmp
sub
sarb
fwait
mov
mov
push
arpl
cmc
and
mov
in
addl
sub
jns
cmpsl
call
addr16
inc
sbb
sub
fs
adc
sbb
and
xor
insb
ret
xor
xchg
xchg
dec
push
xchg
jo
das
call
dec
mov
xchg
incl
bound
jmp
lcall
dec
mov
ja
aas
mov
test
pop
push
sbb
lret
dec
sbb
dec
sub
ret
pushf
pop
push
aas
ror
imul
mov
std
aas
lea
mov
test
je
sub
fsubs
add
scas
stc
stos
mov
insb
sbb
mov
dec
add
aas
pusha
push
mov
test
add
and
inc
mov
cmp
dec
aaa
push
cmp
push
popf
cmp
ja
out
and
movsl
btr
shlb
adc
add
inc
mov
inc
cmpsl
push
push
ja
pushf
or
fimull
repnz
out
mov
push
sub
fbstp
inc
popa
and
jg
rorb
dec
mov
outsb
loopne
cltd
mov
push
iret
out
jmp
cli
sbb
add
das
icebp
ror
out
mov
lret
loop
stos
mov
jl
add
cwtl
lahf
mov
mov
xchg
scas
rolb
into
nop
mov
test
xchg
push
jnp
add
inc
push
imul
mov
repnz
mov
mov
test
add
jp
adc
lods
leave
jmp
sub
loope
in
pop
or
fwait
push
adc
out
and
adc
pop
iret
adc
jl
mov
stos
jmp
ficoml
mov
aad
loope
daa
mov
data16
imul
cmp
lret
insl
push
cltd
jmp
sbb
sub
mov
fcmovnu
push
lock
std
in
iret
dec
and
xor
mov
sahf
cmpsb
scas
inc
fldcw
lahf
jo
cltd
pop
jo
lds
or
inc
sbb
mov
mov
scas
jmp
inc
jp
outsb
hlt
loop
bound
out
lret
orl
xchg
and
lret
sbb
mov
adc
add
repnz
sbb
pop
push
and
inc
sbb
sbb
add
movsl
mov
fucomi
cmp
fcoml
mov
or
pop
fdivp
mov
scas
jge
lods
out
xchg
mov
cmp
shll
insl
imul
lods
rolb
pop
and
xchg
sbb
push
cwtl
push
pop
push
jb
inc
hlt
into
scas
addl
daa
rolb
pop
cmp
popa
xchg
pop
fdivr
int3
ds
xor
and
xchg
hlt
add
lcall
xor
ret
imull
and
fs
into
push
icebp
addr16
out
loopne
stc
mov
xchg
xlat
mov
push
js
pop
adc
dec
stc
mov
mov
xchg
add
out
sub
and
orl
adc
and
mov
fdivrs
lret
icebp
nop
insb
add
xchg
xchg
cmc
push
pop
flds
cmp
or
mov
js
xlat
mov
mov
test
cmp
inc
sbb
xor
dec
in
xorb
das
mov
pop
mov
aad
subb
mov
imul
cmp
lret
mov
or
popa
cmp
mov
out
and
fisubrl
jg
enter
mov
shlb
xor
into
stos
es
add
sub
mov
loopne
or
fisubrl
xor
in
inc
mov
mov
mov
cmp
clc
mov
adc
das
mov
add
sub
cmpsl
pushf
shlb
out
shl
inc
cmp
and
gs
mov
or
popf
sbb
pop
iret
push
pusha
adc
loop
xor
add
cmp
mov
xchg
mov
mov
arpl
pop
xor
adc
pusha
aas
nop
push
mov
push
adc
scas
cmp
mov
repz
push
cwtl
punpckldq
jp
int3
xlat
js
test
repz
push
fbstp
sti
sahf
pop
imul
mov
test
cmp
jg
sbb
int3
push
xor
xchg
inc
lea
fdivrl
aam
shlb
pusha
pop
mov
xchg
push
push
insl
push
jne
dec
push
ljmp
addr16
fisubs
shrl
fisubs
gs
in
fidivl
lods
movsl
mov
popa
sbb
into
adc
adc
popf
mov
out
stc
jbe
cmp
jns
mov
pop
mov
push
cmp
daa
mov
jp
sbb
bound
pop
insl
mov
in
add
in
leave
mov
inc
sbbb
cmpsb
lea
mov
icebp
nop
adc
fwait
pop
in
xchg
mov
aas
in
js
mov
fwait
and
arpl
dec
push
in
cmp
incb
pop
sbb
clc
scas
cltd
xchg
je
imul
fstl
jne
fidivs
adc
adc
xchg
inc
cmp
mov
sti
insl
mov
in
xor
out
xchg
or
fs
push
adc
enter
test
sub
clc
aad
xor
push
scas
jns
mov
mov
xor
xchg
xor
xor
je
clc
hlt
cltd
imul
imul
jl
outsb
mov
sub
mov
es
movsl
fdivs
mov
les
out
dec
adc
push
pop
flds
arpl
sub
adc
xor
mov
hlt
mov
lods
es
cli
mov
icebp
and
push
push
cmpsb
jns
sahf
xchg
cmp
jp
gs
or
mov
push
jnp
lds
leave
subl
aas
dec
clc
xchg
stos
cwtl
lods
jle
mov
xchg
leave
fnstsw
push
mov
or
or
mov
lds
xchg
test
mov
repz
sbb
stos
add
cs
dec
in
jae
les
das
sbb
out
sub
jmp
lea
pop
push
push
push
jg
dec
inc
icebp
jne
sbb
in
mov
sbb
or
push
pop
xchg
in
add
ljmp
fdivr
mov
dec
test
sub
scas
int
test
icebp
popf
aad
lahf
pop
sahf
js
xor
jecxz
jno
mov
xchg
push
movsb
cmp
ret
and
pop
stos
out
add
sahf
adc
jb
in
lock
dec
add
call
test
push
push
fiaddl
shrl
push
andb
jno
push
jge
repz
ds
loop
loopne
sub
lret
push
dec
fcom
lcall
xchg
xor
adc
xor
das
xchg
pop
mov
ss
fisttps
loope
scas
inc
dec
insb
addr16
jnp
ja
loop
aad
mov
xor
pop
js
pop
xchg
cmp
popa
cmpsl
ror
push
mov
mov
aas
or
gs
jl
in
fucom
cltd
sub
ja
lret
add
stc
cmp
fstpt
in
jne
and
stos
adc
mov
pop
inc
pop
inc
xor
xchg
hlt
mov
fisttpl
xor
sub
sbb
lods
cmp
push
mov
rcr
adcb
arpl
mov
cmpsl
repnz
idiv
rolb
cmpsb
add
or
mov
jmp
cltd
imul
xchg
jo
rcll
int3
loopne
or
pusha
test
outsb
adc
ds
test
xchg
popa
jl
mov
ret
mov
iret
fsubrs
aam
mov
andb
pop
repnz
inc
cmp
test
xchg
jne
pop
test
paddusw
xchg
mov
ja
lret
cli
cmp
sti
je
ret
cmpsb
jno
xor
dec
jmp
jne
es
xor
and
xchg
fdivrl
cltd
adc
lds
and
pop
out
into
cli
repz
push
jmp
outsl
call
jbe
push
pop
push
push
add
test
stos
pop
ret
imul
jae
stc
test
scas
cli
in
popf
popf
stc
cmpsb
addr16
jl
push
mov
addr16
outsl
fimuls
test
mov
pop
xor
mov
scas
sub
fstpt
mov
sub
mov
into
bound
leave
mov
es
and
mov
test
mov
push
jp
test
jle
in
push
adc
jg
xchg
hlt
mov
push
xlat
push
cmp
or
mov
push
ds
imul
fwait
nop
mov
push
sub
fucomp
sarl
push
cmp
cmpl
les
insl
adc
or
addr16
jo
sbb
es
mov
mov
jle
hlt
flds
lret
aad
das
daa
mov
in
cmpsb
outsl
rclb
xchg
fisttps
lret
mov
test
and
clc
fadds
aam
sub
sti
push
xchg
mov
fwait
mov
leave
mov
adc
sub
insl
xchg
leave
xor
sbb
loopne
btc
adc
mov
popa
movsb
inc
pop
mov
sbb
xchg
roll
jp
add
fcmovne
int
test
add
addr16
bound
xchg
aad
ret
aaa
xor
sarb
out
invd
andl
inc
lcall
xor
roll
adc
push
mov
fisubrl
xchg
rcrl
add
dec
xchg
and
mov
sarl
sti
xor
lret
lret
inc
jnp
insb
xchg
cmp
sub
jbe
jae
in
iret
mov
iret
jmp
pop
xchg
iret
fstps
cltd
sti
in
out
inc
push
sbb
push
xchg
xor
adc
dec
aad
sub
add
dec
add
and
push
dec
xchg
bnd
xchg
jbe
insl
arpl
lock
push
jnp
pushf
imul
or
data16
shlb
pop
jmp
dec
dec
mov
cmp
cli
clc
sahf
fsubrp
testb
addr16
mov
cmc
cmp
xor
sbb
fcmovnb
movsl
imul
push
mov
dec
fsubl
lret
repnz
xor
mov
push
mov
outsl
push
mov
mov
jb
pop
daa
push
repz
jne
xchg
je
mov
cmp
mov
or
or
in
movsl
outsb
dec
stc
and
jns
jecxz
psadbw
aad
test
dec
xchg
xor
push
mov
xor
adc
push
aas
ljmp
push
fisubrl
cmpsl
push
mov
imul
mov
aaa
dec
dec
pop
cmp
inc
pop
ss
scas
insl
xlat
ds
icebp
push
mov
xor
sub
loope
aam
mov
jle
dec
sbb
and
lods
jns
mov
pop
jno
bound
addr16
loop
out
mov
and
mov
sub
push
and
stos
fstpt
xchg
sub
shll
shll
and
lret
mov
xor
shl
xchg
pop
dec
std
dec
lret
jns
xchg
xchg
hlt
cmp
or
arpl
addr16
dec
shr
sahf
xchg
add
jmp
cwtl
mov
and
pop
jp
xchg
mov
inc
cmp
aad
test
push
mov
push
ljmp
pushf
mov
stos
and
mov
stos
ljmp
shlb
xor
out
pop
dec
int
daa
sub
sbb
cmp
inc
addr16
pop
idivl
xchg
mov
enter
dec
repz
jae
mov
jno
pop
push
jp
mov
mov
jb
pop
ja
loope
clc
aam
imul
dec
rcrl
out
jb
shrl
add
sti
pop
mov
jae
jno
orl
mull
jae
mov
loope
add
popf
cmp
mov
jns
movsl
fwait
mov
xrelease
nop
cwtl
jle
jno
outsl
popf
add
lret
sahf
push
cmp
lea
stos
cmp
add
mov
dec
std
mov
push
inc
bound
and
popf
jmp
ficoml
clc
xchg
lcall
cmpsl
insb
fsubrl
pushf
pop
sbbl
and
cmp
and
jo
std
imul
out
clc
inc
xchg
inc
push
mov
sbb
cmpsb
mov
push
mov
and
stos
mov
cmp
push
hlt
xor
add
rcr
movsl
imul
scas
in
jl
loopne
test
dec
sbb
dec
dec
dec
shl
sub
push
xor
outsl
movsb
aas
jp
mov
xchg
hlt
ret
adc
push
ljmp
mov
adc
insb
call
mov
ret
popf
mov
pop
hlt
ret
popf
cld
dec
stos
in
lock
testl
mov
fstpt
push
pop
and
and
ds
mov
repz
lods
jle
idivb
mov
jne
lcall
in
inc
push
data16
push
jp
fnstenv
call
js
iret
adc
sbb
pop
scas
and
out
dec
cwtl
sbb
mov
test
aaa
xchg
aam
add
pop
in
mov
lcall
or
xor
and
cmp
movsb
rorl
xorl
loop
jge
and
dec
popa
pusha
mov
and
jle
cli
push
cwtl
inc
pop
xor
adc
mov
loop
ret
dec
inc
fisttpll
and
fucom
cmp
mov
inc
imul
dec
push
mov
stc
insl
add
imul
mov
mov
filds
mov
pop
int3
repnz
mov
lock
in
lds
xor
sub
pop
xor
push
jbe
loope
subl
je
cmp
call
mov
jl
xchg
adc
or
aaa
fdivr
pop
mov
in
ret
test
push
inc
adc
sti
ficompl
mov
call
pop
fxch
pop
lret
pop
std
cli
outsl
dec
int3
mov
js
stc
hlt
mov
xorb
cmp
sbb
dec
sbb
in
adc
mov
stc
mov
stc
mov
or
call
imul
or
cmp
and
adc
mov
and
stos
hlt
pushf
push
in
dec
bound
aas
jbe
lods
adc
outsl
jge
insl
popf
mov
jb
pcmpeqd
xchg
dec
ljmp
dec
jne
insl
mov
push
shl
ret
lcall
subb
repz
hlt
fstpl
test
sti
out
push
enter
lods
pop
adc
jns
adc
int
cmp
movl
cmp
fidivl
std
dec
push
fsubl
cmpsb
adc
jnp
inc
pop
aad
in
mov
jl
adc
ds
stos
mov
lahf
cld
into
out
mov
push
loope
jle
lods
xchg
xchg
aam
mov
pop
inc
rolb
sbb
hlt
fs
mov
repnz
fldl
push
lcall
imul
mov
push
mov
insl
inc
loope
loop
aaa
push
in
cltd
in
scas
or
idivl
mov
shl
sbb
push
jle
ja
leave
sub
xor
jmp
push
or
daa
imul
rclb
and
xchg
call
add
or
cmp
or
lods
add
mov
pop
lock
jge
jb
arpl
sub
out
das
lret
sbb
jecxz
xchg
jge
inc
pusha
and
arpl
xchg
pop
js
adc
leave
in
sbb
or
add
mov
notl
pop
popa
mov
mov
jbe
mov
lcall
mov
jmp
repz
imul
jg
sti
pop
and
and
outsl
xchg
fld
jl
or
xor
mov
incb
lock
ret
or
les
mov
shr
lods
inc
mov
fistps
imul
inc
scas
lea
push
sbbl
lret
movsb
mul
dec
sbb
int3
xchg
bound
cmp
frstor
enter
repnz
jmp
cmp
rolb
movsb
loope
or
fldt
jb
adc
adc
and
mov
add
daa
es
push
lods
xchg
cwtl
aaa
push
cmp
ret
repz
shrb
pop
addr16
stos
sub
stc
lods
test
mov
mov
imul
roll
cld
sbb
cmp
add
in
loopne
adc
push
ficoms
pop
fldt
cmp
dec
in
mov
sub
fisttpl
add
jg
jne
mov
lea
ja
stc
pop
ljmp
jp
pop
sub
inc
pop
pop
repnz
add
dec
cli
cmp
clc
xor
fnop
sub
dec
addr16
pop
sub
rol
into
out
incb
sbb
fsubrs
or
mov
xor
xchg
mov
add
clc
fst
sub
push
das
out
cmp
push
push
dec
icebp
imul
push
xchg
and
lcall
fbld
cmp
pop
adc
inc
fs
dec
repnz
push
gs
ljmp
outsb
shlb
aaa
insb
loopne
adc
mov
pop
fidivrl
rolb
pop
aam
out
stos
fucom
cmc
sub
jbe
daa
push
cltd
out
or
jns
adc
cmp
pop
cmp
sti
lahf
ss
std
pusha
adc
pop
icebp
xor
and
dec
incb
cmp
jnp
inc
lret
push
scas
xchg
xor
daa
add
mov
cmp
cmp
inc
inc
cmpsb
push
pop
inc
mov
je
and
pop
xchg
inc
js
xor
loopne
xchg
xchg
fst
cmpsl
mov
mov
cmp
jne
cmp
call
es
int3
sbb
mov
mov
les
jecxz
jo
adc
push
pusha
rcrl
xchg
lods
imul
lods
fistl
fistps
jne
mov
mov
pop
xchg
and
xor
jae
add
aam
pop
inc
pop
mov
mov
scas
shll
mov
mov
fwait
jnp
add
mov
jae
cmp
jo
or
adc
jno
cwtl
mov
jno
cmpsb
xor
mov
frstor
mov
cmp
mov
sbb
lcall
add
add
cmpsl
or
push
cmpsl
outsb
jno
cmp
pop
push
mov
out
leave
inc
in
rclb
scas
fadd
ret
sub
xchg
cmpsl
sarb
or
rorl
fldt
test
lahf
fimull
pop
adcl
xchg
in
fldenv
stos
cmpsl
fisubrs
mov
mov
movsb
icebp
mov
cmp
jmp
xlat
arpl
mov
add
pop
dec
add
cli
aas
ficoml
sub
bound
sub
inc
gs
lock
push
mov
jno
xchg
ret
les
clc
add
push
and
les
dec
add
sub
mov
popf
mov
mov
jnp
xor
mov
repz
push
jg
xchg
insl
sbb
push
mov
inc
mov
shl
out
popl
pop
arpl
inc
xor
retw
inc
push
sub
push
adc
sbb
pop
add
adc
or
pop
sub
xchg
and
push
rorb
loopne
jle
divb
fst
sti
pop
adcl
pop
les
mov
mov
mov
push
inc
mov
jnp
lea
rcrb
stos
add
lods
dec
in
xchg
imul
scas
mov
sub
and
mov
mov
ret
jo
xor
mov
aaa
and
push
aaa
shll
mov
or
cmp
dec
imul
pop
and
jnp
mov
enter
nop
lret
cmp
lcall
pop
cltd
cmc
push
test
pop
ss
loopne
cwtl
mov
or
aam
and
and
pop
fs
cmp
adc
out
mov
mov
je
and
fld1
lahf
pushf
inc
jnp
push
sbb
ret
enter
arpl
add
inc
mov
pop
or
xor
cs
popf
jp
mov
out
and
les
ds
cmc
xor
cmp
or
bound
mov
jl
pop
mov
sub
aam
sarl
jo
jb
fs
dec
adc
sahf
dec
pop
cwtl
scas
loopne
ror
lods
xlat
ja
mov
stos
jb
cmp
adc
insl
push
adc
mov
pop
das
fdiv
dec
lahf
pop
cltd
inc
fwait
xor
pop
mov
xchg
imul
cmp
dec
les
gs
adc
clc
std
mov
sbb
xor
xor
or
sub
jnp
mov
sbb
dec
test
subl
cmc
jnp
out
addr16
pop
cmp
rorb
push
push
idiv
insb
sub
push
cmp
ret
mov
xchg
sahf
es
cmp
add
pop
or
jae
or
jg
inc
mov
push
loopne
cmp
fld
jo
lods
mov
int
jl
cmp
je
cmc
dec
mov
cmp
scas
movsb
cmp
das
push
lret
jo
inc
adcl
or
xlat
stos
xchg
mov
jge
lret
dec
cmp
lcall
sub
in
inc
mov
jg
mov
insl
jp
imul
enter
iret
sbb
mov
pop
test
pop
xchg
sub
jle
sti
dec
adc
inc
pop
push
cmpsl
or
mov
mov
dec
or
loop
inc
lret
mov
fwait
pop
outsb
fisubrs
into
jg
mov
xchg
rclb
daa
test
inc
sub
cmp
jmp
repz
aaa
lods
or
cmp
xor
inc
jne
or
ja
mov
in
dec
adc
dec
es
ja
dec
lds
mov
mov
xor
dec
inc
pushf
roll
enter
inc
dec
aam
fldcw
sub
ret
or
in
mov
mov
pop
mov
dec
mov
inc
popa
sub
xor
fdivrs
shlb
cmc
addb
jmp
inc
mov
lods
and
and
mov
fiadds
fiaddl
ljmp
ds
aaa
adc
loop
xor
clc
in
es
lods
push
fs
push
push
ret
icebp
adc
push
testl
mov
cltd
adc
sbbl
jge
in
iret
mov
xlat
sub
pop
daa
cwtl
loope
aaa
jb
shr
adc
sbb
cmpsl
les
ja
add
or
shrl
daa
iret
mov
add
mov
adc
xor
lds
add
mov
sbb
mov
mov
mov
rcr
lds
mov
sub
or
jge
sbb
mov
or
mov
or
sbb
and
cmp
lahf
out
add
sbb
jg
adc
jno
xchg
fs
add
rorl
xchg
pop
and
lods
fildl
inc
adc
pusha
add
clc
xor
jb
nop
sbb
xchg
sub
test
lahf
fsubs
movsb
in
into
bound
loop
icebp
mov
jnp
jecxz
test
or
inc
dec
movsb
cmp
test
sbb
adc
outsl
call
lret
dec
imull
test
jo
xchg
sub
add
mov
lcall
cmp
lea
jnp
lea
scas
mov
push
sbbl
xor
mov
div
subl
adc
xor
in
popa
movsl
dec
jmp
test
pop
scas
fsubrs
pop
bound
daa
jae
xchg
inc
xor
popa
clc
mov
stc
dec
dec
enter
or
clc
mov
loop
lds
xchg
dec
ds
xor
call
mov
orb
mov
je
cmpb
loope
mov
mov
aad
jmp
mov
or
decl
ss
inc
add
ljmp
pop
test
mov
push
aas
adc
adc
in
je
sub
add
adc
mov
pop
imul
mov
and
adcb
clc
jp
icebp
xchg
xchg
push
ds
mov
mov
mov
mov
add
popf
js
mov
push
sub
sbb
insl
fmull
xor
loop
sti
pop
inc
nop
repz
pusha
imul
and
xchg
shll
out
imul
cmp
lock
shr
cmpsl
or
cmp
sub
flds
mov
scas
pop
enter
sbb
sbb
pop
aaa
sti
fwait
daa
cmp
jbe
outsl
mov
xlat
decb
lret
inc
movsl
xchg
hlt
sbb
ret
push
lcall
and
call
pop
sub
inc
or
int3
sub
push
mov
lods
fwait
jno
inc
outsl
lods
test
gs
in
stos
cmc
xchg
pop
jmp
stc
test
daa
mov
scas
dec
fbld
adc
xor
sub
jo
sbb
arpl
add
mov
cmp
mov
test
aad
and
cmpsb
rclb
xchg
mov
scas
arpl
xchg
adc
scas
arpl
cwtl
arpl
lods
hlt
lock
clc
jns
mov
push
mov
ret
mov
cmp
or
jecxz
in
cmc
mov
arpl
push
scas
lcall
rcll
mov
fdivrl
jo
jne
xchg
mov
sbb
fcoms
pop
adc
iret
cs
mov
mov
and
and
test
dec
pop
push
fldenv
adc
mov
add
gs
call
movsb
in
mov
xor
xorl
stos
jnp
cs
test
sub
mov
shl
test
scas
mov
ret
sub
shlb
mov
push
std
roll
sbb
ljmp
push
pop
repz
pop
ret
or
push
loope
sub
ffree
jbe
gs
sbb
iret
aam
outsb
ror
push
cmp
sub
jbe
pusha
insl
js
xchg
lcall
mov
inc
cmp
ret
inc
clc
dec
je
aam
movsl
lods
xor
stc
xchg
xchg
bound
adcl
jne
dec
nop
inc
lcall
pop
fbld
hlt
mov
sarl
push
sbb
push
jae
clc
test
cmp
clc
cmpsb
cmp
mov
jo,pn
jmp
sbb
jecxz
lock
pop
enter
jp
inc
inc
mov
push
mov
lds
push
add
mov
lahf
xchg
pop
imul
push
pop
push
sbb
loope
mov
cli
inc
dec
loop
add
or
dec
sti
jg
or
popf
stc
add
movsl
stos
imul
or
xor
loope
jnp
jg
push
roll
sub
iret
adc
mov
cmp
sub
mov
xchg
nop
js
jl
add
cmp
xchg
sub
inc
or
popa
xchg
add
rcrb
fwait
cwtl
lods
and
hlt
nop
or
pop
jp
sub
cmp
xorl
dec
fcmovne
addr16
loop
or
mov
jmp
iret
mov
sub
rcrb
jb
mov
fsubrs
mov
push
mov
xor
adc
inc
sbb
mov
cmp
pop
push
adc
mov
push
sbb
scas
cld
loop
mov
stos
scas
adc
inc
push
fwait
lods
test
adc
cmp
pop
fcoml
std
fstps
and
pop
aam
mov
pop
cmpsb
add
std
and
popf
sub
hlt
pop
out
aaa
pop
cmc
jmp
mov
xchg
shrl
mov
xor
mov
lret
push
xor
pop
jne
pop
insb
mov
or
mov
adc
sub
pop
arpl
pushf
hlt
adc
cltd
sbb
sbb
sub
jmp
popf
cmp
iret
sbb
push
sbb
int
xchg
cmp
out
mov
shll
rorb
push
stos
mov
xchg
push
mov
jle
push
std
bnd
shrl
sbb
mov
add
cmp
imul
popa
pop
inc
jl
sbb
and
mov
rcrl
addr16
negl
iret
test
dec
sahf
mov
push
imul
mov
repz
pop
add
daa
mov
xor
rcrl
iret
stos
jl
inc
rcr
and
mov
adc
test
sbb
xor
scas
xor
imul
jl
dec
out
jns
cmp
pop
les
cmp
cmp
adc
int
push
orb
shl
sub
ja
add
jno
popa
mov
mov
jae
subl
xchg
xor
inc
mov
test
mov
sub
pop
sbb
pushf
jp
or
pop
lods
add
loopne,pn
iret
scas
jmp
lret
mov
arpl
push
mov
adc
or
repz
rcrb
jl
push
loopne
ret
out
ret
movsl
imul
mov
iret
dec
and
mov
nop
xchg
ret
out
test
push
and
or
pop
xor
repnz
jbe
les
cmpsl
mov
lock
pop
push
lcall
int3
fists
dec
fsts
push
pop
fisttps
repz
scas
ret
mov
test
rorb
lret
fcompl
stos
outsl
jno
enter
call
cmc
ja
sub
xchg
or
pcmpeqw
xor
dec
add
add
lret
addb
in
int
sbb
nop
aam
pop
cmp
icebp
cs
and
lea
or
lahf
jo
inc
daa
js
push
sub
mulb
pushf
test
pop
add
fwait
xor
lcall
mov
sub
xchg
pushf
add
imul
push
pcmpeqd
and
cwtl
push
mov
stos
mov
pusha
ret
jg
add
adc
add
inc
or
sbb
push
shr
jo
inc
sub
dec
data16
or
mov
dec
int3
or
andb
mov
push
sarl
mov
add
cmc
and
adc
or
loop
test
fucompp
mov
daa
lahf
xchg
pop
rolb
adc
cs
insl
jo
or
mov
xchg
leave
adc
xlat
dec
movsl
pop
pop
jg
jb
enter
sub
pushf
or
fwait
push
mov
shlb
mov
test
add
jo
mov
xchg
cmp
jle
push
movsb
in
jle
loopne
inc
das
or
outsb
movsb
mov
cmpsl
rorb
shr
sbb
aas
inc
push
mov
add
shrb
mov
xchg
inc
clc
inc
stos
out
push
mov
add
push
out
negb
aas
fincstp
loopne
dec
inc
push
pop
pop
cmp
incl
fcoms
adc
out
stc
fwait
rorl
xor
mov
cwtl
subl
pusha
in
ret
add
sti
mov
push
mov
lcall
dec
sbb
cmc
dec
sub
jo
or
and
ljmp
stos
add
add
sbb
add
into
cli
f2xm1
jge
mov
out
test
hlt
dec
cmp
cmp
ja
jo
in
ds
jmp
sub
mov
pop
push
cs
int
clc
cld
sti
jae
fs
add
mov
mov
lds
out
dec
mov
fimull
xchg
push
stos
and
mov
inc
rclb
mov
shrl
jb
in
xor
rorb
les
pop
xchg
or
data16
jmp
mov
pop
in
jge
loopne
or
jmp
testl
inc
xor
mov
sarl
into
jne
out
jmp
sbb
xlat
jle
out
subl
fsts
mov
jnp
mov
sarb
mov
mov
sub
clc
mov
lods
out
add
pop
push
pop
add
addr16
sbb
fbstp
push
mov
inc
fs
dec
pop
fsubrs
xchg
repz
dec
aas
lret
dec
mov
jge
fsts
mov
mov
sbb
jne
and
loope
mov
xor
cltd
dec
fldcw
and
adc
outsl
cmp
jns
bound
mov
mov
mov
rclb
mov
dec
push
rcl
sbb
mov
fsubs
mov
cmp
fimull
pop
sbb
jmp
out
jno
iret
fdivs
xchg
add
dec
mov
xor
dec
out
adc
push
call
mov
pop
sarl
rcr
mov
dec
or
lods
bnd
xchg
xchg
push
and
jae
sub
pop
aad
mov
into
mov
and
scas
js
shll
push
add
jnp
test
jns
cli
or
outsb
cmpsl
rorb
push
sbb
pop
pop
mov
filds
and
mov
and
in
push
mov
mov
or
fcoml
sbb
dec
jne
ss
mov
sbbl
enter
sahf
out
aaa
jns
cmp
and
xchg
jbe
xor
fdivl
jg
push
scas
shll
ss
sub
in
mov
aam
int3
mov
cmpsl
sbb
outsb
add
ds
xchg
dec
jmp
lret
popa
sub
adc
cmp
push
mov
sub
cmp
lock
mov
inc
push
lcall
in
cli
fmuls
push
loope
mov
cmp
gs
imul
add
mov
sub
jno
lock
inc
lcall
cmp
nop
jo
test
push
jns
test
jno
loope
lret
add
movsb
adc
inc
ja
cltd
cmp
add
out
add
mov
daa
push
test
push
jnp
dec
mov
xchg
mov
push
push
inc
pop
or
lret
sbb
cld
push
inc
sbb
shl
pop
adcl
xchg
stos
lret
mov
fstpt
mov
out
in
sbb
shlb
dec
pusha
dec
int
mov
cmc
lcall
loop
repz
scas
imul
push
dec
mov
int
cmp
insb
lcall
pusha
sub
incb
pusha
dec
in
jo
stos
mov
push
sbb
clc
bnd
stos
repnz
fcompl
or
push
cmpb
push
mov
jle
fwait
xor
inc
push
sbb
add
mov
jns
jbe
iret
rcrl
dec
push
push
mov
xlat
mov
arpl
ds
pop
inc
outsl
cmpsl
pop
ucomiss
das
or
cmp
sub
ret
adc
inc
mov
add
jae
aam
es
jnp
mov
push
popa
adc
dec
in
push
jg
mov
xor
or
das
sbb
lds
clc
jg
out
andb
cld
pop
push
or
orl
popf
dec
xchg
pop
sub
push
fmuls
mov
std
adc
sti
mov
mull
dec
mov
jg
mov
rol
adc
test
sbb
mov
cmp
dec
sub
mov
scas
stc
push
fcoms
and
sbb
hlt
mov
cld
mov
call
test
imul
into
xchg
pop
lahf
inc
adcb
xchg
mov
xor
fwait
inc
in
xor
in
or
int
popa
push
mov
adc
addl
leave
cmp
cmp
sahf
shr
mov
decb
pop
xchg
fstpt
xchg
lea
lock
in
cmpsb
xchg
or
data16
push
add
mov
stos
cmpsb
and
subb
cli
inc
sub
or
adc
shr
out
pop
cs
and
cmp
outsl
mov
jmp
add
jge
cmpsl
push
adc
aaa
xchg
pushf
mov
int3
aam
mov
xchg
aam
cld
ret
out
bound
cmpl
roll
les
lret
xor
add
and
mov
mov
dec
sbb
xchg
lods
xchg
mov
xchg
add
decl
inc
mov
mov
outsb
das
cmpsb
mov
push
pop
sti
adc
jns
mov
loope
sbb
cmpsl
jl
jo
jecxz
xchg
push
lahf
sbb
dec
xchg
mov
xchg
add
aam
mull
jnp
jmp
sub
cli
lods
xchg
stc
jnp
popa
mov
xor
call
or
xchg
and
lret
push
orl
mov
lret
pop
mov
out
les
fsubl
sub
dec
jge
cld
outsb
jb
sub
xchg
jmp
dec
int3
add
mov
lods
or
pop
mov
in
pop
dec
mov
or
jns
lods
aaa
xor
pop
sbb
sbb
cltd
xor
sub
insl
inc
sti
lods
lds
test
add
jmp
mov
jp
inc
sub
mov
nop
inc
movsl
lret
cmp
cmp
gs
popa
jo
repnz
sbb
fdivrp
mov
jmp
clc
mov
sbb
stos
mov
push
stos
sahf
fndisi(8087
push
fnop
jge
lock
fistpll
cmc
dec
es
jne
in
push
sti
xchg
adc
lret
sub
mov
dec
cmp
enter
aad
push
outsl
jle
cli
rcrl
popf
loopne
test
insl
dec
sbb
cli
xchg
xchg
jb
aad
cmpsl
adcl
outsb
add
jl
rorl
mov
test
ss
mov
addb
cltd
aam
pop
aam
mov
bound
push
mov
test
pop
xchg
js
sbb
push
add
mov
jmp
and
fstl
add
inc
jnp
arpl
xchg
or
lods
xchg
ds
jl
repz
out
sub
xchg
mov
xor
mov
arpl
imul
ss
test
mov
add
push
sarb
lds
mov
jns
add
cmp
out
adc
frstor
aas
or
fstpl
pop
mov
pop
aas
out
inc
je
xor
sbb
lods
clc
mov
pop
loope
cmp
or
push
adc
mov
push
pop
inc
jmp
cmpsb
jl
pop
or
sub
add
mov
cltd
jo
lock
sahf
xchg
jo
mov
or
inc
ret
adc
cmpsl
movsb
mov
push
jno
outsl
mov
ljmp
xor
mov
mov
hlt
xchg
cmp
pop
push
xor
push
aaa
das
std
mov
pushf
out
jge
cmp
icebp
loopne
testl
jno
out
mov
leave
jns
das
push
dec
dec
mov
fisubs
cmp
push
add
jg
pushf
mov
test
sbb
je
inc
adc
or
and
cmp
pop
lock
pushf
jae
test
call
pop
sti
bound
lds
and
dec
jge
jg
lahf
ljmp
cmp
into
cli
ds
mov
rorl
adcb
scas
cmp
or
addb
leave
out
fs
sbb
mov
xchg
or
sti
xor
xlat
lret
ja
loope
pop
sti
jmp
shlb
jle
add
flds
or
or
icebp
push
xchg
pop
div
fwait
and
push
adc
xor
or
cmp
xor
mov
test
clc
popa
hlt
out
fidivs
add
shl
inc
aas
filds
sbb
rclb
xor
ljmp
and
sti
imul
je
ds
out
popf
dec
pop
adcl
out
imull
dec
sub
scas
pop
das
js
stc
ja
aad
or
fstpl
and
ss
mov
or
pop
push
dec
rclb
lcall
fcomip
test
jmp
jg
push
xor
mull
mov
mov
dec
jecxz
xchg
push
inc
popa
jns
testb
push
ja
test
iret
imul
js
rcrl
andb
push
push
sub
push
xor
dec
enter
popf
fcmovnbe
push
cmp
or
outsl
jno
repnz
out
test
repnz
mov
xor
jo
jo
or
jno
push
mov
ret
jo
repnz
jns
cli
mov
push
testl
fmul
jle
ret
jmp
xchg
test
mov
pop
sti
idivb
pop
mov
mov
icebp
aas
mov
push
mov
sub
rcl
hlt
pusha
and
xchg
rcr
mov
sti
mov
test
jg
aas
jno
in
leave
pop
push
inc
jmp
pusha
push
popa
cmp
jae
ja
jl
mov
sbb
inc
ret
mov
je
mov
lods
sbb
repnz
pop
mov
cli
cmp
les
lret
es
pop
sbb
cmp
lcall
dec
push
mov
dec
pop
out
sarl
jp
sub
jbe
out
decw
call
ret
pusha
ret
nop
arpl
loope
jns
jnp
jns
fnstenv
inc
inc
and
and
jne
imul
xlat
js
pop
movsb
int3
dec
push
orb
scas
mov
lods
enter
inc
pop
adc
and
mov
push
ret
mov
iret
add
adcb
jne
pop
xchg
xor
js
lret
mov
pop
popa
pop
mov
adc
js
inc
loop
movb
dec
fwait
mov
int3
ja
dec
fcmovbe
xchg
add
jb
stos
ret
dec
pop
and
loope
adc
or
and
cmpsb
mov
aad
das
das
inc
add
repz
xchg
in
dec
cs
and
cli
xchg
inc
add
scas
ret
fildll
aas
pusha
push
push
lahf
mov
fs
call
addr16
jno
add
call
or
imul
push
mov
and
mov
sub
add
jne
sbb
in
call
cli
aas
inc
inc
xchg
xor
mov
clc
clc
out
in
sbb
inc
sbb
cli
out
aaa
jg
rcl
jmp
or
ja
mov
cmp
xlat
cltd
lret
ljmp
cmp
add
jo
or
test
ret
add
pop
dec
fcoms
or
push
xor
outsb
imul
insb
ficomps
aas
es
cs
pop
in
call
scas
ror
cs
out
push
sub
bound
shl
mov
jmp
xchg
xor
loop
push
cmp
cmp
jg
jp
popf
mov
les
mov
stc
test
out
out
mov
and
mov
sub
js
adc
in
lds
mov
sub
movsb
fldenv
rolb
das
popf
sbb
push
movsl
aaa
mov
loope
mov
jb
int
pop
push
inc
xchg
pop
lret
mov
inc
mov
icebp
repz
shl
rorl
xlat
mov
or
inc
fnstcw
push
mov
loopne
mov
ja
aad
idivb
int3
scas
adc
mov
ja
pop
pop
add
add
iret
xchg
test
js
shrb
jge
imul
jne
push
pop
push
pop
mov
mov
in
sub
jnp
sbb
ja
into
and
gs
orb
in
imul
repnz
cmp
sub
mov
push
shlb
jbe
insl
dec
leave
xchg
mov
mov
adc
out
xchg
data16
js
shrl
pop
in
mov
movsb
imul
jae
pusha
rolb
movsl
inc
mov
push
loop
cmp
add
xlat
sbb
push
iret
lret
adc
or
push
mov
fsubrs
shr
or
lret
sub
inc
shlb
stc
push
jge
insb
xor
sahf
lea
icebp
push
add
sbb
clc
fisubrs
in
mov
xor
ja
pop
sub
iret
push
loope
or
sbb
loope
insb
popl
js
fs
lock
adc
push
fwait
rcl
outsl
push
pop
jg
lea
js
pushf
add
push
cld
push
das
pop
and
cld
loope
outsb
mov
mov
into
jmp
in
xchg
mov
nop
pop
dec
cmpsb
mov
xor
xor
pop
les
jbe
stos
fbld
pop
out
nop
out
stos
add
mov
adc
dec
decl
imul
or
into
loop
jbe
cld
lahf
lods
sbb
jne
sbb
adc
mov
mov
data16
arpl
adc
fucompp
sub
iret
push
test
sub
movsb
ljmp
vpsraw
jle
repz
insb
subl
fldenv
icebp
and
xchg
inc
mov
cld
hlt
fcmovnbe
in
lcall
lret
xchg
stos
bound
mov
fistpll
ja
sbb
lds
sub
mov
cmp
into
fucomip
aaa
cmpsl
shrl
cli
or
xchg
mov
clc
daa
sub
pop
insb
mov
add
leave
test
das
popa
or
outsb
fisttps
bound
out
adc
dec
addl
cmp
lds
pop
jo
in
jg
and
sub
jge
sbb
stos
sub
cli
icebp
ljmp
dec
dec
jmp
cmp
js
pop
add
sbb
mov
add
cmpsl
adc
push
adc
subl
push
or
mov
mov
mov
jge
sbb
mov
pop
cwtl
mov
rclb
orb
sbb
insl
add
loopne
lods
inc
ret
imul
push
mov
and
dec
sbb
insl
add
gs
lds
adc
test
dec
stos
pop
mov
jle
repz
jecxz
sbb
xchg
loope
xchg
mov
lock
rcrl
lods
mov
in
insl
sar
test
mov
mov
inc
xchg
inc
divl
sbb
pop
lods
es
xchg
or
push
adc
movsb
test
lret
repnz
andl
mov
xor
add
push
ret
adc
ror
cmp
cmp
fidivs
bound
pop
imul
xor
mov
jnp
sub
ficomps
cs
mov
enter
sub
dec
movsb
fisubl
sbb
ljmp
jno
mov
inc
cmp
mov
mov
fisttps
call
mov
ficoms
pop
jl
jle
or
lret
nop
adc
lods
das
rolb
stc
xchg
popf
mov
insl
inc
xor
dec
pop
jmp
insb
jae
hlt
sub
insl
pusha
jle
test
enter
jmp
adc
xchg
jnp
jecxz
out
xchg
xor
sbb
repz
pop
sub
enter
mov
jb
xchg
icebp
fadd
test
rcll
insl
push
dec
int
and
inc
negb
fisttpll
mov
xchg
jle
fadds
push
cmpsb
pop
int
mov
lock
cmp
inc
and
xchg
gs
mov
nop
iret
cs
fidivrs
int
cmp
arpl
push
add
sub
addl
mov
xchg
outsl
faddl
sub
cmpb
mov
adc
fwait
insb
and
jl
jle
lea
test
clc
aaa
mov
scas
push
or
and
loope
lret
xchg
xorl
sub
mov
pop
xchg
push
xchg
sub
push
add
rorl
mov
mov
aad
fs
fildl
jl
adcb
mov
sbb
aaa
or
or
dec
icebp
mov
es
int3
cmpsl
insb
push
sbb
xor
into
push
push
pop
inc
mov
dec
dec
jg
sbb
sbb
sub
and
jg
roll
hlt
stos
mov
lahf
pop
pop
sub
mov
sbb
pop
imul
scas
test
inc
add
movsl
ficompl
leave
in
shrb
subb
inc
add
adc
and
fisubl
or
repnz
imul
mov
fsubl
out
movsl
inc
icebp
fidivrl
out
pop
pushf
jno
push
pop
ret
xchg
shll
addl
xchg
stos
pop
xor
in
cmp
mov
lods
xchg
inc
mov
lea
xchg
inc
pop
fcomip
stc
push
jmp
xor
pop
imul
hlt
sbb
enter
mov
push
or
sbb
mov
inc
ret
pusha
loope
push
push
cmp
adc
sub
rcr
in
jge
sbb
fs
mov
ret
mov
out
in
xor
dec
pusha
int3
in
sub
ljmp
xchg
push
inc
or
jae
add
mov
cmp
sbb
sbb
mov
popa
or
xchg
stos
into
mov
lds
push
sbb
and
jno
mov
jne
inc
nop
push
mov
pop
stos
mov
cmp
and
push
xchg
stos
jns
pushf
cmp
daa
imul
jb
iret
aas
fucom
mov
push
orb
mov
std
pop
sub
imul
stc
add
scas
mov
popa
pop
mov
pop
jnp
cmp
or
cmpsl
and
shlb
in
movl
mov
xor
test
xor
clc
sub
sbb
adc
fwait
pop
cwtl
rorb
xchg
ret
cmpsl
xchg
jae
rclb
sub
loopw
movsb
inc
ret
ja
pop
js
dec
xor
mov
sub
mov
cmpsl
jo
addb
ljmp
add
inc
scas
adc
adc
clc
fisubrl
mov
push
cmp
dec
pop
lahf
pop
adc
ret
push
jb
xchg
shrl
sub
inc
inc
add
pusha
inc
inc
pop
out
push
lods
mov
mov
jo
das
or
xchg
arpl
fcomp
push
jecxz
insl
pop
mov
mov
in
ficoml
inc
jge
lcall
push
inc
je
push
cli
push
fs
std
xor
imul
adc
cmp
adc
mov
push
mov
jb
repnz
cmpsb
das
xchg
cld
aad
lret
aam
fdivs
cli
bound
dec
movsb
pop
shrb
adc
mov
call
or
jl
sub
mov
addl
dec
loop
call
mov
imul
xor
mov
repz
outsb
dec
pop
jo
in
imul
sbbl
mov
push
gs
jle
xchg
jmp
push
iret
push
xor
repz
mov
inc
shl
jl
sbb
pop
pop
mov
xchg
je
js
pop
call
add
xor
std
push
out
outsb
jae
and
lods
in
pop
shrl
sbb
scas
aaa
push
adc
cld
push
mov
inc
lret
test
fists
icebp
mov
ljmp
xlat
sti
shll
jl
push
dec
mov
je
cwtl
push
push
adc
and
dec
jl
mov
sbb
dec
jmp
push
insb
dec
jbe
stos
fists
push
outsl
movsb
imul
pusha
jns
pop
call
xor
addr16
inc
aas
mov
sub
loop
pop
in
jmp
icebp
and
fwait
inc
into
sub
dec
push
mov
adc
lock
imull
pop
cwtl
shll
pop
inc
lods
inc
dec
subb
dec
xchg
notl
jns
push
enter
mov
int3
je
mov
out
popa
in
imul
mov
cmp
das
xor
pop
aam
pop
pop
xchg
fisubl
sbb
and
adc
cmpsb
ret
inc
out
and
popf
xlat
test
pushf
cld
mov
xor
sub
pop
js
test
jp
out
out
aad
xchg
adc
mov
popa
pop
xchg
or
add
add
sbb
mov
or
ficoms
arpl
jl
dec
in
xor
cwtl
jae
in
cmp
adc
fstpl
jne
sbb
add
inc
sahf
sti
loope
ret
xor
inc
xchg
dec
push
xor
popf
or
stos
sub
ja
ret
pop
movsb
sub
dec
xor
inc
cmp
stos
popf
adc
nop
pop
sar
icebp
push
xchg
sub
or
rcr
rorb
out
rcrl
std
or
pop
jmp
test
jae
nop
xor
jno
mov
xchg
or
fimull
push
hlt
mov
xchg
sub
add
mov
adc
insl
ja
dec
dec
and
and
sub
mov
insb
mov
popf
hlt
test
sahf
outsl
pop
pusha
push
frstor
insb
mov
cmp
std
sbb
mov
popf
pop
rclb
punpckhbw
cmp
loope
and
rcrl
dec
test
cli
inc
lds
mov
xchg
mov
adc
test
pop
shll
xchg
out
insb
iret
pop
sbb
test
and
jno
mov
mov
cwtl
insb
mov
jl
cmc
imul
inc
pop
popf
jbe
or
stos
outsl
dec
mov
or
xchg
sub
idivl
scas
fucom
cmpsl
ljmp
pop
push
and
imul
or
stc
mov
lea
xchg
push
cld
sti
rcrl
stos
dec
cwtl
push
inc
mov
dec
imul
ds
sbb
dec
aaa
pusha
mov
xchg
filds
sti
mov
movsb
mov
int
movb
aad
js
push
mov
add
xchg
in
add
fsubs
xchg
repnz
jo
mov
imul
and
rclb
jb
popa
dec
mov
adc
cmp
enter
pusha
sbb
notb
inc
cmpsb
dec
mov
es
fstps
mov
idiv
add
mov
xchg
or
clc
xchg
xor
addr16
mov
push
orb
or
push
setno
mov
insl
mov
lret
fsubs
push
arpl
adc
dec
xor
xor
sbb
add
repnz
fsts
mov
movsb
push
lock
mov
or
push
shl
aas
push
cltd
loop
mov
xchg
cmp
addl
mov
clc
gs
rcrb
sbb
frstor
mov
cmp
pop
je
das
cld
test
fildl
gs
ljmp
xor
insl
adc
call
xor
adc
add
fstl
sub
adc
xor
inc
inc
mov
or
fdivrl
dec
cld
or
xchg
cmpsl
iret
inc
cmpsb
movsb
sub
sbb
pop
cmpsb
sbb
in
mov
lahf
imul
jbe
jns
cwtl
dec
sub
lahf
sbb
lret
pop
outsl
dec
mov
ss
and
je
js
cmovg
mov
cmp
or
mov
pop
mov
aad
inc
sbb
push
inc
js
and
inc
iret
push
movsb
push
pushf
mov
jp
mov
fisubrs
jl
in
fistpl
add
xchg
pop
pushf
jp
mov
cmp
pop
lret
xchg
jle
add
mov
adc
je
sahf
testl
in
mov
stos
adc
jmp
movsb
nop
jb
or
scas
pop
popf
jle
jne
icebp
and
repnz
inc
mov
mov
js
test
inc
mov
dec
je
and
movsl
add
push
push
pop
pop
cmp
mov
out
adc
dec
int
clc
mov
xor
loop
pop
adc
pop
dec
je
lods
push
pop
in
test
outsb
mov
dec
shlb
mov
or
cmp
scas
xchg
adc
lret
mov
pusha
pushf
adc
or
cmp
lret
sub
arpl
dec
div
ljmpw
or
inc
popf
loopne
jmp
push
lahf
ja
jg
aam
int3
xchg
mov
mov
push
push
lea
xchg
cld
imul
mov
lret
out
jl
mov
mov
imul
cmp
out
mov
push
and
subl
call
pop
mov
das
cs
sub
in
sub
dec
cmp
dec
xor
sbb
cli
jo
sahf
in
idivl
lea
inc
insb
xor
and
xor
rcrl
aas
test
cmp
imul
mov
mov
imul
ror
inc
andb
fisttps
adc
imul
loopne
xor
repnz
mov
bound
mov
pop
ficompl
jo
hlt
sti
jae
jg
or
mov
popf
mov
in
mov
lret
test
fdivl
xchg
push
add
mov
jb
cli
add
xchg
in
movsl
push
sub
insl
jb
push
cmp
pop
push
fmull
xlat
nop
cmp
jns
fs
imul
sti
cld
mov
out
and
sahf
mov
jb
outsb
repz
mov
xor
leave
xchg
aaa
dec
sbb
push
lcall
mov
push
xchg
or
sti
repz
lods
mov
xor
xchg
mov
das
clc
rorb
arpl
mov
cmc
fs
sbb
roll
xchg
test
mov
lcall
mov
fcoml
mov
sub
out
mov
cmp
lea
mov
jecxz
clc
mov
or
out
movsl
jl
lods
pop
jmp
cmpsl
lods
mov
fwait
sahf
dec
pushw
mov
or
xor
sub
sbb
addb
arpl
cmp
mov
mov
pop
repnz
inc
hlt
mul
dec
jno
shlb
insb
lcall
inc
stc
mov
push
jne
rclb
jle
mov
or
push
mov
aam
push
je
lahf
cmpsl
inc
or
jle
lock
and
pop
pop
leave
pop
adc
jne
dec
icebp
jge
push
jp
mov
not
inc
dec
add
lods
cmp
movl
test
sub
fimull
inc
aas
ss
jo
test
jl
push
icebp
cmp
jns
pop
xlat
cmc
js
push
insb
aas
push
sbb
adc
cli
add
adc
in
sub
cmp
icebp
into
and
xlat
out
push
sbb
inc
push
andl
rcl
xchg
mov
push
jne
jmp
insl
mov
mov
jecxz
mov
pop
shrb
mov
stc
movsb
daa
divb
cmpsb
mov
mov
and
inc
jne
fisubl
adc
movsb
xor
cs
in
aad
pop
mov
push
imul
xchg
sub
sbb
ret
stc
mov
mov
enter
mov
pop
mov
dec
scas
dec
inc
movsl
jle,pn
mov
xchg
sahf
pop
add
sub
stc
orl
add
jae
jb
pop
and
add
jl
jg
adcb
aam
loop
in
sbb
popa
jns
sahf
mov
or
orb
jg
mov
movsl
hlt
adc
adcl
in
mov
mov
sbb
pop
cmp
outsb
std
fs
sub
pop
pop
cs
ds
adc
fwait
inc
inc
inc
push
jae
sbb
in
inc
lret
dec
xor
sbb
icebp
jae
imul
pop
in
fistps
cmp
pop
pop
xor
mov
sub
jne
sahf
jmp
fs
je
pop
adc
popa
mov
out
cmp
mov
cmp
loop
mov
mov
adc
mov
sbb
xor
mov
int
sub
cwtl
sbb
adcl
adc
out
ljmp
in
xchg
fsts
push
cltd
in
push
ss
call
loope
sub
lods
inc
mov
loop
fucomip
pop
int
xchg
imul
es
out
jg
lret
mov
xchg
sub
pushf
notb
dec
cli
cmpsl
loopne
pushf
cmp
sub
xchg
xchg
adc
outsl
pop
inc
lahf
repz
popf
dec
inc
cmp
pop
pop
movsb
xor
out
cmpsl
popf
sbb
scas
xchg
adc
and
pop
cwtl
in
and
jae
imulb
das
push
aad
dec
popa
pop
and
push
sbb
sub
in
mov
stc
out
xchg
cli
ds
movsb
mov
loopne
mov
push
pop
inc
aad
adc
push
scas
daa
jb
sub
add
dec
mov
andl
push
divb
push
jmp
ret
scas
pop
mov
cmc
lea
stos
sub
cld
push
bound
cmp
jnp
loopne
shl
gs
xchg
sti
fisttpl
dec
dec
adc
shr
ds
sub
mov
xchg
sbb
out
mov
cmp
fisubrl
sub
out
cmp
dec
popw
pop
pop
dec
or
adc
inc
out
sbb
jp
leave
and
loop
repnz
fldcw
repz
lea
pop
or
jnp
fistpll
inc
jno
lods
ret
or
xchg
movsl
sbb
sbb
ret
pop
in
test
adc
pop
push
loop
adc
inc
jp
fcoml
lock
call
xchg
jb
mov
jae
mov
add
iret
imul
mov
jg
adc
out
sub
and
push
lods
fidivrl
shrl
test
push
or
pop
ret
arpl
vpsllw
aas
mov
outsb
stc
clc
dec
sbb
inc
xchg
lods
or
int
cmp
daa
cmp
add
pop
out
inc
mov
aaa
sbb
lahf
lods
mov
lret
or
cmp
xchg
adc
push
and
push
add
add
pop
loop
cmp
js
bound
adc
aaa
jp
xchg
mov
xchg
in
mov
adc
in
pop
adc
decb
pushf
inc
push
insl
adc
push
rorb
aaa
mov
xchg
cmc
notb
insb
push
sbb
jmp
xor
iret
shlb
adc
pshufw
fstl
inc
inc
jae
dec
adc
popa
lret
movsb
and
iret
sub
push
repnz
popf
les
scas
mov
insl
push
cld
jns
pop
movsl
daa
dec
ficomps
mov
or
fidivs
cmp
scas
inc
ja
dec
push
mov
push
lcall
push
mov
push
pop
pop
fstpl
push
imulb
stc
iret
push
mov
pop
cltd
add
mov
jns
xor
pop
mov
push
sub
fdiv
aas
cld
push
mov
cmp
sub
xchg
jne
mov
mov
mov
je
enter
jge
cmp
ja
repz
mov
in
sub
pop
ror
xorl
and
mov
sub
xadd
mov
inc
push
out
push
inc
push
daa
dec
insl
pop
fistl
mov
es
test
sbb
cwtl
mov
xchg
add
xchg
test
adc
xchg
in
cltd
lods
sahf
mov
test
mov
sti
xchg
push
jns
mov
gs
bound
stc
push
nop
adc
cltd
mov
flds
orb
and
shll
mov
xchg
dec
cld
daa
mov
sbb
jg
out
pop
icebp
fildll
push
ja
jle
add
xor
jmp
jae
lock
fcoms
mov
mov
cltd
or
cmp
lock
jmp
sub
mov
in
sti
mov
inc
rorb
adc
or
shlb
call
shlb
cltd
dec
fadd
jno
mov
repz
pop
mov
jnp
add
dec
xor
popf
push
testl
inc
das
int
push
test
popf
imulb
xor
sti
pop
aam
rorl
ds
test
int3
fwait
icebp
test
outsl
inc
xor
icebp
pop
outsl
scas
pusha
jno
or
push
out
cwtl
push
pop
push
or
sbb
fldt
pop
sbb
adc
imul
bound
add
jno
outsl
pop
pop
out
mov
sub
xchg
push
lods
mov
mov
and
mov
mov
inc
cltd
push
mov
jge
loopne
mov
cmc
inc
out
cmp
mov
xchg
popf
dec
lcall
sbb
test
cwtl
fbld
dec
pop
test
cmp
shr
repz
iret
fs
sti
or
mov
movsl
adc
shlb
push
sub
popf
or
jns
out
dec
mov
xrelease
jno
mov
test
pop
cmp
jns
fmull
in
xchg
inc
push
addr16
cmc
xchg
bnd
adc
std
cmp
jne
add
das
xchg
into
insb
mov
js
push
push
inc
sti
mov
or
scas
fwait
dec
xor
lahf
arpl
sub
mov
cmpsb
jle
icebp
shrl
out
lcall
bound
push
in
jb
arpl
cltd
pusha
dec
xor
orb
imul
into
dec
addr16
sahf
pop
and
aaa
add
mov
mov
push
push
faddp
add
xchg
mov
mov
sbb
or
mov
mov
and
adc
pop
adc
and
cmp
mov
loope
inc
mov
inc
xchg
cmp
icebp
sahf
lock
inc
jne
lods
jg
or
fdivrl
adc
pop
sbb
xor
adc
xor
pop
sub
scas
dec
mov
vcvttpd2dq
outsb
fcoms
inc
adc
adc
and
adc
mov
lods
mov
ror
sub
lea
sar
pusha
and
or
shl
lahf
push
ljmp
das
daa
es
dec
lods
shrl
sti
inc
pop
icebp
xor
cmp
fcom
int
fnstenv
mov
mov
sub
dec
test
nop
dec
ret
xor
cld
call
arpl
dec
sbb
pop
call
adc
xor
cmp
ds
and
cs
ds
gs
xchg
jae
jno
rep
mov
add
mov
sub
jns
data16
outsl
sti
sbb
out
ja
fisubl
inc
inc
in
fisttpll
int3
mov
push
shlb
xchg
jno
cli
imul
stos
lods
lahf
cmc
mov
pop
mov
xor
into
adc
into
cmp
sbb
inc
pop
dec
aam
sbb
stos
fisubs
mov
mov
fiadds
xchg
and
movsl
sbbl
pop
popa
popf
outsl
aad
mov
into
pop
movsl
rolb
mov
cmp
mov
mov
xchg
dec
nop
jle
jo
shlb
sbb
push
test
dec
inc
xchg
fbstp
jmp
or
push
test
mov
dec
mov
int3
ret
and
movsb
push
lods
mov
sbb
xor
mov
cmp
xor
xor
inc
aaa
adc
mov
daa
push
adc
xrstors
sub
stos
or
movl
push
inc
shll
xchg
xor
je
mov
aas
dec
mov
sbb
mov
adc
sarl
out
xlat
push
jl
jne
mov
leave
sub
xor
and
dec
in
push
fimuls
mov
push
rcrl
mov
aam
or
cmp
mov
pop
scas
adc
enter
cmp
mov
xor
imul
sub
add
xor
rcrl
pop
jb
je
xchg
aas
jno
xor
imul
ljmp
add
test
sub
cmpsb
pop
sahf
fwait
add
das
push
repnz
out
repnz
repnz
add
push
dec
and
les
adc
cmp
cltd
push
nop
imul
dec
test
jmp
pusha
aas
dec
dec
mov
dec
jp
dec
inc
out
pop
mov
adc
xor
adc
xchg
pop
cmpsb
mov
cli
inc
pop
push
push
fs
xor
pop
xor
test
lcall
sub
mov
jg
xchg
test
mov
imul
test
int3
loopne
jb
sub
imul
cmpsl
adc
inc
lahf
ret
mov
sarl
cmp
out
loopne
imul
inc
arpl
sub
movsb
cmp
cltd
popf
jg
ds
sbb
cs
in
pop
js
cltd
insb
movsb
bound
or
test
das
pop
mov
add
mov
mov
mov
mov
jge
cwtl
cmp
xchg
or
and
sub
decl
aad
aad
jno
push
mov
mov
in
push
adc
cmp
pop
dec
js
repnz
insl
iret
dec
das
js
mov
in
stos
ficomps
dec
in
adc
adc
jmp
fildl
inc
ds
shl
das
sbb
jbe
inc
and
lea
jge
subb
stos
dec
mov
pop
popl
jne
in
fisttps
mov
sub
pop
mov
pop
out
ret
sbb
in
adc
mov
jae
push
fldl
cmp
ljmp
aas
add
inc
ja
or
or
out
leave
fimuls
add
jns
sbb
test
pop
cltd
pop
repnz
jbe
nop
stc
ja
sbb
ss
movsl
mov
sbb
in
adc
fildll
std
fmul
jecxz
mov
push
stos
bound
fistps
stc
test
testb
cmp
sbb
into
pop
xchg
shl
pop
push
mov
sub
int3
and
in
jl
mov
cs
scas
sub
jle
test
push
into
sarb
aaa
jb
add
cmpsb
shlb
out
movsb
jecxz
or
sti
sar
pop
mov
push
sbb
and
cld
ja
je
mov
adc
push
fldcw
sbb
imulb
loopne
xor
xor
sub
inc
jae
lahf
jl
and
pop
xor
in
lcall
faddl
xlat
xlat
push
pop
inc
pusha
jge
pop
je
xchg
and
loope
pop
stos
inc
xchg
or
cltd
mov
add
fistps
xor
idiv
hlt
push
push
dec
inc
arpl
outsb
mov
mov
movb
mov
mov
jmp
mov
and
rclb
mov
adc
add
push
in
dec
push
repz
test
fstp
xor
into
dec
ret
cmp
enter
call
int3
imul
push
mov
push
xor
insl
int
push
cmp
pusha
cld
sbb
sbb
je
and
mov
cmpb
or
ja
test
pop
or
mov
pop
cmp
pop
outsl
sbb
xor
jno
or
cmp
and
or
lahf
dec
std
xchg
lock
push
push
cmp
push
dec
mov
ljmp
pop
jmp
dec
mov
push
cmp
pop
push
bound
and
mov
mov
iret
xchg
mov
add
pshufw
imul
push
popa
cwtl
add
xchg
nop
pop
push
in
aaa
adc
sbbl
xchg
jl
roll
push
dec
aad
mov
or
dec
inc
clc
dec
int3
testl
mov
inc
push
pop
ja
fs
jp
pop
xor
nop
xor
andl
rcr
or
lods
xor
adc
dec
pop
sub
sbb
ja
lods
in
add
pusha
ds
inc
sbb
and
mov
push
inc
inc
add
lock
andb
pop
test
into
add
pop
mov
mov
xchg
loopne
jge
aas
xor
bound
and
xor
dec
mov
sub
jp
add
xchg
cld
push
mov
icebp
aad
mov
mov
les
and
lret
mov
lret
sbb
out
iret
mov
mov
outsl
ss
jbe
inc
sub
xchg
and
and
push
add
or
cmp
mov
xor
fistps
addr16
sbb
std
stos
pop
rolb
adc
mov
mov
scas
and
adc
sbb
sbb
mov
and
jp
lods
push
addr16
xor
sarb
cmpsl
mov
es
push
scas
push
test
inc
inc
cwtl
es
jno
xchg
mov
xor
lret
popf
pop
in
repz
jae
cs
cltd
inc
push
cmp
nop/reserved
movsb
inc
out
aam
nop
mov
sub
ds
mov
xlat
scas
mov
daa
mov
cltd
adc
icebp
sbb
mov
stos
or
xchg
add
stc
and
xor
or
adc
roll
or
or
xchg
bound
mov
scas
popa
inc
inc
xchg
mov
mov
sub
xor
cld
jo
jmp
into
sbb
push
mov
incb
mul
pushf
cmpsb
push
iret
popl
add
fcmovnbe
pop
or
xchg
and
mov
inc
int3
jg
shrl
mov
jo
add
rorb
jbe
test
mov
cmp
aam
mov
lret
out
popa
jmp
dec
or
adc
bound
or
fmuls
push
jbe
ret
daa
imul
pop
mov
push
dec
ret
and
dec
aad
cmp
sub
sub
or
mov
add
hlt
scas
sub
popa
bndstx
adc
push
insl
mov
stc
arpl
xor
mov
orb
push
jnp
stc
imul
xchg
lcall
stos
push
and
scas
add
jae
xor
sub
sub
mov
mov
cmp
imul
push
cmp
sti
xchg
push
clc
arpl
out
lcall
aad
jmp
iret
adc
aam
mov
stc
sub
adc
push
lahf
orb
std
rorb
inc
inc
js
testl
push
jno
mull
outsl
enter
nop
mov
or
dec
orl
loope
sbb
sbbl
cmp
or
lea
and
cmp
call
mov
sti
xchg
mov
cmpsb
ror
mov
popa
sub
inc
pusha
fs
sahf
inc
fdivs
in
and
subb
cmp
loop
dec
mov
setb
cmp
cld
cwtl
adc
dec
ja
lret
mov
dec
imul
ret
rcll
push
sub
fbld
mov
xlat
cwtl
mov
jmp
mov
mov
clc
js
mov
sub
mov
cmp
sub
insl
cld
xchg
loopne
lea
cli
inc
cmp
xor
sub
dec
insb
xor
lock
repnz
mov
mov
xchg
mov
sti
insl
push
pushf
xchg
das
jb
arpl
mov
popa
mov
sbb
and
pop
xchg
scas
pop
mov
add
les
inc
push
sub
ret
pop
xchg
popf
std
test
inc
xchg
pop
clc
or
sbb
or
shlb
sbb
sub
mov
std
inc
push
dec
dec
sbb
pop
push
shll
and
aam
dec
jne
mov
xchg
repnz
mov
lahf
and
adc
cwtl
popf
and
or
push
imul
loope
inc
jne
add
push
mov
mov
jns
and
lahf
loope
movsb
mov
pusha
sub
xlat
nop
mov
mov
in
mov
sbb
int3
out
aad
hlt
ret
js
lods
popf
enter
jecxz
sbb
or
push
mov
jbe
fstl
test
jp
lods
adc
push
fidivl
fwait
cltd
adc
xor
imul
clc
and
mov
pop
add
jge
xchg
sbb
cld
test
outsb
jne
mov
ljmp
scas
leavew
jecxz
or
and
movsb
adc
incl
inc
add
sub
int3
mov
fmull
outsb
xchg
loope
in
fildll
push
insl
xchg
pop
in
mov
clc
jecxz
mov
fxch
mov
testl
sbb
or
jecxz
adc
rorl
cmp
dec
mov
in
outsl
mulb
arpl
xor
xchg
ret
add
xchg
mov
pop
je
incb
mov
sbb
add
test
in
repnz
push
jmp
jle
add
aam
fsubrs
or
add
dec
dec
and
push
repz
inc
outsb
sysret
addl
std
ficomps
stos
sub
icebp
daa
rorl
and
xchg
xor
or
mov
pushw
push
add
push
fwait
adc
test
sti
add
repnz
pushf
imull
mov
xchg
mov
dec
imul
pusha
enter
pop
adc
leave
push
mov
testb
setp
cltd
mov
lods
lds
insl
jne
cmp
jg
xor
mov
dec
mov
mov
gs
movsl
jge
adc
and
adc
cmp
in
jnp
cmp
lret
push
mov
mov
or
data16
repz
mov
jmp
cltd
sub
stos
dec
pop
cmp
pop
scas
dec
mov
pop
mov
sbb
pop
mov
je
leave
pop
or
sbb
enter
bound
push
jge
mov
push
dec
testl
arpl
pop
mov
clc
cmpsb
push
mov
xlat
mov
gs
jb
mov
and
jne
xchg
and
inc
daa
xlat
rclb
jg
or
xor
or
add
inc
cli
pop
dec
jno
cmpsb
jmp
pop
lock
cltd
jno
ljmp
insb
add
movsb
jle
fcoms
cmpsl
arpl
mov
dec
cmpsl
add
pushf
lods
adc
imul
fcoms
pop
movsb
dec
and
mov
mov
inc
movsb
dec
mov
orl
pop
mov
sti
int
mov
jo
addr16
inc
xchg
mov
sbb
jp
in
xchg
jge
jno
mov
enter
mov
loopne
cmp
mov
jmp
xchg
icebp
shrl
pop
lods
jns
xchg
int3
sahf
js
loop
in
jae
sub
stos
inc
cmp
mov
testl
subb
aaa
or
sub
popf
imul
cmpsl
xchg
jge
imul
pop
ror
movsb
std
out
out
cwtl
cmp
cli
int
das
pop
js
dec
mov
jle
mov
cmp
fldt
aaa
push
sbb
sub
inc
push
dec
fistps
out
pop
aad
repz
sbb
jp
lock
jbe
insb
rorb
jmp
fmull
xchg
or
mov
adc
hlt
out
cmp
cltd
xor
ret
inc
jp
and
outsb
outsb
fs
xor
inc
movsb
mov
pop
cli
fsubs
xchg
or
fstpt
sub
test
out
mov
cmpsl
popa
icebp
fs
sbb
inc
push
pop
lods
inc
inc
mov
push
lds
test
mov
or
adc
sub
scas
push
enter
mov
xor
inc
xor
xor
das
xchg
movb
mov
sub
out
dec
pop
xor
mov
push
sub
int
pop
jnp
loope
mov
loop
pop
and
shll
jp
rcll
pusha
cmp
in
or
jne
adc
sbb
cmp
ret
dec
push
xchg
sub
jne
push
inc
inc
dec
xchg
cmp
mov
xchg
outsl
cmp
jl
xchg
and
xchg
int
sbb
add
xchg
test
outsl
ja
xchg
xchg
jg
subl
incb
in
popa
es
pop
daa
push
pop
and
dec
sbb
fdivp
ja
push
inc
xchg
sbb
ret
push
sub
xlat
lret
mov
js
and
ja
sbb
sub
xchg
jge
adc
sub
and
scas
xor
fsubrl
fistpll
pop
sbb
pushf
lret
and
andl
fsub
mov
sbb
fsub
insb
sbb
sbb
lods
xorl
jae
enter
xor
dec
testl
mov
and
cmp
dec
adc
pop
mov
mov
mov
push
aam
add
test
adc
ret
dec
pop
pop
sahf
mov
jnp
pop
mov
xchg
leave
dec
mov
cwtl
xor
insb
sbb
sub
push
movsl
dec
mov
cmp
pop
push
adc
pop
cmp
btc
mov
and
mov
lods
push
lea
outsl
push
jns
adc
insl
cmc
sub
gs
dec
and
in
mov
mov
addr16
mov
js
nop
dec
js
or
push
cmp
rep
mov
pop
inc
sub
insl
cmpsl
dec
sbb
or
lods
stos
roll
aaa
lea
mov
inc
mov
xlat
in
je
push
stc
xor
sub
xor
mov
sti
jns
jae
rcr
pop
lock
lcall
addr16
sub
into
stos
gs
lcall
jae
mov
push
cmp
pop
sub
jecxz
insb
out
and
or
add
sub
pop
pop
push
dec
lock
mov
repnz
movsb
negl
mov
enter
cs
xchg
jecxz
adc
lret
pop
and
dec
sbb
iret
mov
pop
xlat
push
lods
or
sbb
cmp
sahf
addr16
cli
xlat
mov
aaa
cmp
jo
aaa
mov
xchg
inc
sub
and
stc
in
dec
cld
mul
lret
cmp
or
push
pop
sbb
in
dec
pop
cmp
push
faddl
mov
mov
or
xor
mov
cmc
insb
lods
add
add
loopne
fwait
push
mov
pop
movsl
mov
mov
shlb
pop
push
flds
sub
mov
add
push
jo
sbb
icebp
add
sub
mov
xchg
cli
dec
aad
sti
lods
dec
mov
push
inc
mov
leave
xchg
mov
mov
jns
mov
sub
or
das
mov
sub
push
push
pop
jge
jp
pop
por
addr16
jnp
jb
out
push
mov
out
add
pop
sbb
xor
mov
lret
fdivr
sbbb
pop
dec
jns
loope
xchg
xor
pop
pushf
je
jae
jae
leave
repnz
sub
mov
fcmovnb
add
cmp
cmpsb
cmc
dec
test
jge
xchg
dec
aam
mov
fisubl
add
adc
shlb
sbb
insl
push
loopne
xchg
push
mov
idivl
mov
sub
lods
or
movsb
stos
stc
mov
pop
ret
int
mov
jns
fs
icebp
fsubrl
movb
mov
mov
iret
inc
popa
repnz
outsl
outsb
jp
test
inc
mov
loopne
shrb
cli
xchg
pop
jge
mov
xchg
pop
loopne
add
data16
adc
pusha
xchg
pop
add
arpl
sbb
shr
cld
mov
and
or
inc
inc
dec
and
lds
lret
add
pop
fstpl
jg
dec
sub
mov
inc
mov
cmp
inc
inc
adcb
push
or
xor
jp,pt
push
jnp
nop
add
jne
or
push
jae
inc
sti
bound
iret
dec
cmc
cmp
cmc
and
leave
shl
adc
pop
lods
aam
lds
pop
inc
js
jecxz
push
repz
mov
jae
rolb
push
xchg
inc
iret
sbb
jo
pop
xchg
mov
inc
xor
xchg
push
add
sub
dec
sarl
inc
jl
push
icebp
pop
and
outsl
leave
xlat
add
andb
subb
stc
add
push
push
pop
ret
adc
imul
aaa
movsb
xchg
sbb
aaa
jl
mov
xchg
xchg
or
sbb
pop
outsl
inc
shll
mov
es
mov
jle
push
insl
popf
xchg
and
clc
ljmp
and
inc
jo
in
push
xchg
aaa
mov
stc
cltd
fiadds
shll
sti
insb
mov
lcall
loop
mov
insl
xlat
stos
lret
mov
and
loope
adc
mov
add
repz
cmp
popf
aas
gs
ljmp
jns
lgs
inc
adc
arpl
mov
xchg
or
fisubs
rclb
std
fcmovnbe
lds
adc
mov
nop
mov
andb
mov
mov
pop
notl
sub
jb
add
scas
sahf
scas
bound
lret
mov
lcall
dec
orb
inc
fsubrs
mov
pop
popf
fimull
jg
shl
loopne
or
jle
push
inc
and
pop
jbe
leave
jp
add
std
ljmp
lret
ret
aaa
mov
sarb
push
pop
add
lret
fldt
cmp
inc
sub
or
test
insb
icebp
xor
sbb
xor
inc
sbb
lods
mov
push
xchg
xchg
adc
mov
data16
aad
std
xor
in
lock
jp
mov
pop
fistpl
jge
sbb
pop
push
sub
pop
in
outsb
inc
inc
inc
pop
push
adc
jbe
push
sbb
es
sbb
or
popf
and
jne
mov
adc
push
scas
and
js
cld
or
mov
jecxz
sbb
dec
lahf
dec
xor
sti
cmc
dec
or
sbb
mov
mov
mov
xor
call
stc
hlt
leave
jb
lock
pop
sub
dec
inc
add
lret
inc
sahf
stc
fmull
popf
fbstp
cmc
mov
pop
lret
loop
shll
pusha
xchg
xchg
in
orl
cmp
aad
xchg
xchg
or
scas
sub
mov
stos
mov
mov
cmp
jne
subl
dec
xorb
push
stos
daa
pop
mov
sbb
adcl
mov
shrb
xchg
xchg
dec
and
cmp
inc
pop
imul
xchg
and
rep
call
arpl
lret
adcl
adc
lret
inc
lcall
pop
xlat
xor
aas
cmpsb
push
adc
enter
xor
lods
lret
fisubs
in
push
lds
mov
mov
lds
dec
pop
cmp
jb
push
cmp
xchg
push
int
adc
fwait
stc
push
dec
and
fists
cmc
fsub
shrl
push
xchg
test
push
and
push
popf
adc
out
cli
push
xor
std
movsb
into
lods
mov
dec
mov
xor
push
loope
pop
jbe
movsl
pop
stc
inc
add
mov
push
scas
sbb
adc
adc
push
stc
les
sti
jmp
int3
ficompl
inc
xor
sub
xor
fimull
aam
bound
jb
in
or
call
cmp
cli
pop
mov
loope
fs
or
ljmp
scas
jae
mov
adc
cmc
mov
call
xor
mov
outsb
xchg
add
fldl
call
rcll
mov
mov
repnz
sbbl
scas
in
sbb
jns
in
jg
bound
test
adcl
mov
jae
cmpl
sbb
mov
sbb
in
mov
insl
push
mov
outsl
test
leave
lods
adc
loope
cmpsl
js
sysret
pop
xchg
adc
iret
bound
daa
outsb
or
sub
idivb
xchg
scas
pop
push
cmpsl
int3
in
jb
into
repnz
mov
aam
repz
cs
popa
cmp
jl
dec
jp
add
xor
cmp
xchg
add
fdivr
stos
in
xor
andb
dec
sub
xchg
cld
push
dec
int3
dec
test
cld
lods
out
stos
push
push
sbb
stc
pop
sbb
pusha
in
sbb
xor
mov
fsts
outsl
int3
int3
insl
stos
pop
fcoml
outsl
jl
inc
ljmp
lods
outsl
fsubl
and
dec
dec
sbb
out
int3
ror
jbe
mov
bnd
inc
add
test
std
jg
cmpl
icebp
jle
xchg
sub
in
cli
fwait
mov
pop
push
outsb
jbe
leave
ja
int
shlb
jno
jno
pusha
cld
fistpll
adc
push
cmpsb
sub
add
inc
daa
idivl
repz
and
loope
push
mov
pop
fimuls
push
mov
js
jae
and
lds
cwtl
mov
cmp
push
inc
nop
aad
idivl
test
mov
pop
or
jge
inc
aad
cltd
out
sub
outsb
xor
xchg
pop
rol
imul
mov
cmp
add
ja
pop
out
popa
sub
jmp
xchg
inc
mov
push
dec
cld
mov
fisttpll
lock
push
fidivl
dec
push
sbbl
int
mov
jg
and
ss
iret
negl
loop
sub
in
pop
das
popf
pop
sub
jmp
xchg
pop
adc
mov
mov
dec
dec
mov
lock
ds
movsl
loop
adc
imulb
popa
and
test
popa
adc
jge
pop
push
jecxz
std
pop
lret
lret
mov
add
mov
mov
in
and
ss
mov
push
in
mov
scas
je
pop
loopne
insb
popa
outsb
mov
and
dec
push
loop
aad
in
insl
pop
sti
or
jo
jmp
mov
pop
js
cmpsl
mulb
mov
xorb
push
mov
push
push
xorl
sti
xchg
pusha
dec
sbb
add
dec
in
or
cmpsl
jge
adc
pop
lods
nop
nop
pop
dec
or
ret
push
inc
sub
loop
lock
out
cmp
push
stos
jl,pn
mov
xor
add
mov
mov
mov
movsl
outsl
dec
or
xchg
inc
ret
and
pop
xor
and
push
xchg
cmp
xchg
test
push
insl
sub
jbe
and
fstl
cmpsl
shll
inc
lea
loopne
mov
loopne
clc
and
inc
push
pop
popf
or
mov
or
push
enter
sub
in
outsb
pop
cmp
imull
dec
cltd
call
mov
repz
in
jl
and
sti
mov
jbe
loop
data16
jl
pop
shlb
and
imulb
xchg
test
je
cmovg
inc
sub
xchg
mov
dec
inc
movsl
pop
sbb
add
les
cmp
or
jp
or
push
mov
outsb
jbe
pop
mul
adcl
or
cwtl
inc
in
mov
mov
push
cmp
cld
mov
cwtl
jmp
mov
jbe
mov
jno
fdivl
mov
cmp
scas
in
clc
call
lods
lret
dec
aad
or
mov
aaa
xchg
and
jle
inc
jmp
mov
cmpsl
xchg
mov
jle
scas
sahf
shrb
sbb
loopne
js
iret
loop
inc
push
popa
out
fists
cmp
sub
xor
cltd
lret
push
movsl
inc
pop
mov
or
repnz
sbb
xchg
scas
les
adc
and
fisttps
lods
cmp
xchg
adc
sub
insb
sbb
or
ficomps
xchg
test
test
jne
adc
adc
xchg
pop
popa
int3
shll
mov
mov
adc
insl
add
add
fldl
dec
dec
lcall
repnz
shlb
addb
packsswb
xorb
out
xchg
mov
ljmp
mov
cld
adc
arpl
les
xchg
fsubs
cmpsb
adcl
adc
pop
test
mov
leave
xchg
jo
out
filds
jae
inc
mov
popa
xchg
mov
loope
jl
out
mov
pop
push
out
es
add
jp
cmp
insb
xor
cmc
out
addb
mov
imul
pop
push
mov
sbb
jno
lret
stos
push
nop
dec
jne
and
cmp
pop
inc
xor
leave
pop
xchg
shr
lods
pop
xor
add
divb
adc
ret
repz
sbb
jns
js
lret
pop
aad
xor
loopne
add
adc
mov
xchg
and
iret
enter
std
cmp
daa
push
imul
cmp
leave
add
mov
int
jb
push
adc
xor
clc
les
mov
out
push
cmpsb
jge
faddl
dec
mov
scas
int3
sti
sbb
pushf
out
enter
cld
xorl
sbb
pusha
shrb
jmp
loopne
loope
cmpb
inc
or
xchg
call
pop
inc
jecxz
jns
adc
fcoms
repnz
dec
aad
sub
pop
sub
sbb
inc
xchg
push
fists
xchg
push
mov
inc
clc
clc
mov
mov
xor
jle
dec
shll
xor
lret
cmpsb
cmpsb
lea
cmpsl
insl
push
push
push
xor
pop
hlt
cltd
jae
jae
jnp
test
push
shll
sub
scas
ret
rcl
dec
inc
mov
add
xlat
in
enter
repnz
and
gs
jge
scas
out
movsb
pop
jg
cmp
add
aaa
cli
loopne
in
rep
jbe
inc
sti
arpl
or
fiaddl
in
por
add
mov
out
jl
jmp
std
jg
lock
mov
xchg
arpl
lret
jg
mov
push
out
mov
push
aad
inc
leave
pop
inc
fucomip
mov
repnz
and
aad
xchg
xorb
jno
repz
nop
mov
adc
test
ret
jmp
push
fstps
cli
inc
int
stc
xorb
jno
mov
mov
jo
or
stc
xor
or
xlat
pop
inc
mov
cmp
xor
mov
or
ljmp
popa
jg
lea
push
mov
out
addr16
inc
insb
mov
xor
xchg
add
inc
cmc
mov
cmp
ds
adc
xchg
jl
push
lret
pop
ret
sbb
lods
mov
outsb
push
add
or
les
das
mov
lahf
fwait
cld
mov
jne
aaa
iret
pop
sub
pop
xchg
mov
pop
in
push
outsb
cltd
and
cmp
mov
test
in
out
xor
std
gs
xchg
outsb
jno
cmp
rcrb
loopne
pop
and
inc
lcall
jle
adc
cmpl
pop
jl
into
pop
push
ficoms
push
pop
sbb
sbb
cmpsb
add
inc
dec
push
and
je
rcrb
ljmp
dec
std
sub
cmp
daa
jb
mov
cmp
sub
test
lahf
insl
or
int3
mov
shl
fdivl
addr16
scas
xchg
sarb
fcomp
idivl
rcrb
fiaddl
stos
xchg
nop
in
vandpd
gs
in
in
dec
cwtl
fimuls
jmp
rcrb
dec
daa
sub
shlb
cmp
mov
std
sub
or
scas
fstl
mov
ss
push
sarb
fmuls
xchg
or
cwtl
icebp
jne
sub
push
push
push
mov
jp
scas
and
xchg
iret
stc
sti
cli
push
test
iret
bound
adc
xchg
jmp
sahf
xchg
and
es
mov
dec
popf
out
push
fisubl
stc
call
sub
mov
movsl
mov
cli
outsb
xchg
mov
pop
mov
inc
ror
sub
add
jnp
fs
jge
mov
push
cmpsl
scas
pop
jo
pop
insl
mov
das
add
aaa
or
push
push
lcall
ja
into
pushf
sbb
aad
add
arpl
xchg
arpl
es
sub
lods
jg
shl
dec
sub
filds
shlb
js
mov
jle
stos
sbb
lods
test
int3
pop
cmp
and
or
fwait
mov
dec
into
std
cmp
adc
push
cmpsl
aas
or
add
outsl
lock
dec
cmp
xchg
stos
loop
popa
mov
mov
xor
mov
jecxz
jl
xchg
faddl
dec
sbb
repnz
mov
sub
xorb
rcrl
jne
arpl
es
jmp
and
lea
aam
push
sub
cmc
rorb
push
rorl
and
shll
push
addl
lcall
das
cld
sub
iret
xor
jle
inc
repnz
test
out
and
scas
mov
push
jge
sub
or
mov
nop
pop
and
mov
jne
xchg
test
les
daa
addr16
dec
xchg
ljmp
mov
popf
lret
pop
add
and
dec
dec
les
jnp
daa
or
or
cmp
scas
xor
inc
ja
push
push
push
sahf
ret
or
ljmp
and
fists
es
cs
xchg
xor
lods
mov
push
fldl
fnstcw
jne
jecxz
shrb
or
xchg
jne
lcall
sbbl
adc
pop
cmpl
adc
dec
sub
into
loope
shr
add
fldt
xor
pop
sahf
mov
push
ds
hlt
aam
jp
pushf
dec
ret
das
xchg
adc
aas
mov
movsb
std
mov
push
ds
pusha
xchg
xchg
in
out
jnp
or
and
mov
icebp
push
push
std
ds
jnp
sti
loopne
mov
jecxz
scas
cmp
aaa
inc
ret
sbb
lods
sub
mov
ficompl
fstps
dec
and
mov
push
in
xchg
into
xchg
int
cmc
cli
popf
in
iret
das
push
sbb
mov
aas
and
adc
daa
cmp
gs
push
mov
outsl
inc
push
push
and
andl
cli
sub
and
ror
sahf
or
je
and
jo
jo
ljmp
hlt
in
jp
mov
popa
push
add
dec
int3
xchg
inc
inc
add
mov
or
andb
jmp
out
sbb
rorb
dec
and
add
cld
ljmp
xchg
sub
ds
mov
mov
add
sbb
jmp
jae
mov
cmpsl
mov
mov
xor
lods
dec
adc
adc
stc
inc
jbe
mov
xor
aad
push
add
pop
bound
add
inc
adc
mov
dec
in
mov
cmc
xchg
cli
push
pop
data16
dec
loopne
lock
pop
add
inc
push
test
xor
jmp
cmp
dec
cmp
dec
push
xchg
sbb
sahf
insl
in
xchg
pop
loopne
scas
or
sbb
dec
cld
divb
pop
lds
mov
jge
ds
ljmp
repz
iret
mov
jle
xor
pop
mov
mov
push
xor
sbb
push
cmpsl
xchg
and
mov
sub
cs
popa
add
or
jp
pxor
repnz
adc
or
adc
xlat
push
cmp
dec
dec
sbb
nop
sbb
stc
ror
jmp
mov
push
push
sbb
cmc
clc
lcall
lret
pop
enter
popa
mov
ficomps
adc
ret
or
fisubs
ret
fisttpll
jge
data16
out
sar
test
adc
ljmp
icebp
jp
push
hlt
dec
shl
leave
inc
sub
int
jecxz
sbb
test
jae
outsb
dec
inc
push
cmc
adc
push
dec
mov
pushf
das
insl
leave
sbb
loopne
pop
dec
idivb
cmp
xor
cmp
mov
jb
inc
fisubs
pop
cs
sub
push
loop
jg
adc
jbe
mov
push
std
popa
pushf
push
inc
and
jecxz
dec
xor
mov
inc
or
mov
int
push
insl
push
sub
enter
repz
cli
and
mov
or
leave
rcr
mov
aas
test
repz
int3
into
outsl
std
or
xor
mov
sbb
dec
sbbb
mov
jae
xchg
mov
add
int3
xor
push
jnp
insl
lds
push
pop
lock
idivl
fmuls
xor
xchg
pop
sbb
mov
mov
mov
adc
or
fcomi
sbb
inc
sbb
sub
xchg
loope
into
xchg
dec
fcoml
iret
xchg
lea
lea
ja
mov
sub
pop
push
test
xchg
jae
add
or
xor
and
cmp
sub
dec
int
or
cs
in
in
leave
cmp
jl
add
mov
adcl
sbb
sbb
fwait
adc
pop
cli
stos
sbb
dec
enter
cmpl
jno
dec
pop
lds
inc
mov
xchg
daa
lds
add
adc
sbb
mov
out
xor
push
mov
dec
fmuls
dec
popa
cmp
lea
add
in
fistpl
jecxz
fucom
xor
mov
xchg
in
imul
xchg
and
cmp
lret
insb
cmovns
in
bound
sbb
aam
pop
sbb
leave
and
jge
scas
bound
mov
mov
dec
mov
inc
cmp
popf
xor
les
arpl
mov
aas
adc
sbb
pop
mov
loope
movsl
xchg
imul
je
out
cmp
lret
mov
gs
fisttpll
sahf
mov
orl
repz
cmp
outsb
ret
mov
pop
loope
xor
aaa
dec
mov
aad
pop
push
scas
rorb
lds
shl
jnp
jnp
sarl
jmp
or
adc
adc
lahf
movsl
cwtl
or
push
mov
or
jl
pop
jg
and
xorl
and
mov
jmp
sbb
xor
dec
ss
cmp
fmuls
inc
sti
xchg
js
in
ja
mov
mov
not
lock
jg
or
dec
adc
xchg
inc
imul
xchg
and
cmpsb
jecxz
leave
int
adc
push
les
xor
dec
mov
xor
in
mov
ret
clc
repnz
mov
faddl
sub
cmc
orb
add
movsl
sub
push
xor
jg
and
popa
mov
mov
ljmp
int3
insb
dec
popa
mov
in
dec
iret
and
adc
mov
sub
int
sub
fimull
cmp
es
ret
je
mov
inc
sbb
dec
dec
xor
in
jns
nop
sbb
mov
cmc
aas
lret
inc
repnz
push
pop
pop
xchg
cmp
and
arpl
js
je
xchg
fwait
ds
addr16
call
lds
scas
js,pt
push
in
inc
cmp
pop
les
hlt
add
xorb
mov
push
lods
sti
mov
mov
add
jg
loope
lret
and
mov
push
into
jle
xchg
cltd
popf
daa
imul
mov
lods
cs
aas
nop
push
sbb
pop
loope,pn
fldcw
shl
and
lret
ja
cmp
in
cmc
adc
xor
js
cmpb
aad
pop
data16
addr16
insl
push
xor
loope
mov
popf
dec
lret
int
popf
in
pop
mov
in
and
pusha
pop
lods
cwtl
xchg
out
dec
dec
xchg
inc
cwtl
xlat
int
sbb
shrb
cmp
xchg
fwait
dec
cmp
gs
negb
mov
cmp
pop
lret
and
or
shl
es
and
loop
cmp
jmp
xchg
icebp
sub
pop
sbb
mov
cltd
in
fs
sub
lock
fwait
dec
out
loope
or
data16
xor
sbb
jge
fsubs
push
and
shll
pop
cwtl
push
xchg
push
pop
adc
movsb
ljmp
push
cmp
or
dec
cmp
sahf
jno
lock
int
and
mov
lods
loopne
imul
es
lods
jno
dec
in
outsl
daa
ljmp
in
es
outsb
mov
in
xor
mov
jns
xchg
scas
and
inc
xchg
stos
incb
adc
adc
pop
jno
fwait
push
mov
dec
out
mov
pop
ret
aam
imul
dec
nop
cmp
push
and
roll
jae
or
mov
mov
test
sbb
ds
xchg
mov
enter
outsb
fldl
sbb
inc
mov
xor
pop
and
or
test
add
clc
sarb
icebp
xorl
jo
dec
xchg
adc
xchg
insb
add
test
xor
fidivrs
and
into
shl
xchg
jne
shl
xchg
adc
or
inc
movsl
arpl
pusha
aaa
aad
xor
adc
cwtl
adc
test
push
lea
mov
or
dec
icebp
cltd
sbb
push
or
imul
xchg
sahf
add
jne
push
int
into
jnp
mov
inc
xor
sbb
and
cmp
adc
mov
imul
fwait
dec
sub
xchg
and
es
push
mov
or
cmpsb
push
enter
sbb
mov
and
cmpsl
std
and
or
divl
jnp
loope
scas
mov
xchg
push
xor
dec
fstps
inc
push
adc
add
jle
sti
cmp
cli
movsl
insb
lods
cs
imul
add
mov
shl
push
pop
pop
xchg
xor
mov
lret
dec
adc
push
addr16
sbb
cmp
outsb
jle
jmp
add
ret
mov
mov
fs
loop
dec
dec
jno
pushf
adc
sarl
push
mov
push
xchg
cmpsb
fmul
scas
push
in
aaa
dec
add
mov
repz
aad
movsl
aaa
and
jmp
ss
lcall
jo
push
jne
push
ds
bound
sub
cmp
cwtl
shrb
sbb
sub
sub
and
mov
push
inc
jae
sub
jge
jmp
push
cmp
test
adc
sbb
jo
mov
lret
js
sub
bound
xlat
stos
cmpsl
daa
xor
inc
shrl
ja
sti
jb
lret
lds
fmuls
push
hlt
xchg
ret
loop
mov
shrl
mov
ja
adc
cmp
and
popf
sbb
shll
adcl
mull
insb
decl
out
arpl
and
cmc
mov
mov
push
sub
and
mov
out
std
inc
js
jl
jge
xchg
push
cli
push
sub
xor
inc
enter
cmp
dec
mov
arpl
pop
sti
push
sub
cwtl
jno
fisttpl
lods
pop
dec
sbb
lods
add
loopw
test
cmp
xor
or
jnp
push
lahf
and
scas
aam
pop
push
adc
xlat
pop
jns
dec
imul
sarl
mov
jbe
xchg
lock
shrb
adc
jecxz
sub
sbbb
insb
cmpb
xlat
lea
les
test
loop
jnp
repnz
push
mov
mov
jns
sub
js
dec
frstors
in
lds
push
aas
ja
or
test
cmpsb
fwait
pop
pop
mov
mov
out
jo
repz
repnz
xor
xchg
xchg
pop
cli
lahf
inc
imul
scas
dec
arpl
out
test
xchg
addl
pushf
push
int
add
add
in
int
pop
xchg
in
xor
out
jle
lret
fs
setg
jno
lret
in
fucomi
popf
push
mov
aad
dec
add
mov
or
loope
pop
sbb
mov
xor
scas
adc
xchg
adc
dec
rorl
pop
xchg
test
fidivl
adc
repz
and
cli
cmp
in
adc
mov
adc
rorb
or
mov
mov
pop
cmp
mov
pusha
mov
mov
mov
and
mov
xlat
in
dec
inc
rcrl
cmpsb
jne
add
mov
push
imul
mov
sbb
mov
jp
push
jmp
xor
xor
gs
test
pop
enter
mov
push
jns
into
add
cmpsb
aas
mov
testl
lcall
es
scas
and
rolb
loop
pop
pop
aam
xchg
fwait
aas
mov
mov
adc
xor
movups
aas
push
dec
dec
jmp
inc
mov
mov
xchg
jl
dec
rorb
icebp
andl
push
iret
push
lcall
orl
xchg
and
lds
pop
xor
aam
shlb
sbbl
sub
jns
mov
rolb
gs
cwtl
inc
jo
daa
sti
cwtl
sbb
imul
mov
cmp
lods
xor
push
fisttpll
adcl
push
sbb
cmpb
xchg
adc
les
push
or
fiaddl
outsl
hlt
in
inc
xchg
mov
cld
std
popa
sarl
add
adc
daa
lcall
lret
cmpsb
sbb
push
idivl
mov
iret
mov
pop
in
fstpt
mov
andb
sti
lock
inc
sub
mov
imull
or
pop
add
push
hlt
sub
and
push
pop
rclb
sbb
divb
sti
inc
inc
sub
jns
cmp
imul
cmp
movsb
adc
pop
mov
xor
sub
test
cs
push
cli
dec
imul
mov
xor
adc
flds
mov
mov
xor
clc
or
cmpsl
mov
enter
inc
mov
jmp
mov
fisubrl
fldl
mov
add
adc
jbe
pop
out
insl
lcall
std
fsubr
scas
pushf
ret
sub
insb
fmuls
insb
jbe
adc
cmp
aaa
push
in
jg
lods
mov
daa
xor
inc
jbe
mov
lcall
in
sbb
loopne
pop
cmp
shrb
fcoml
leave
aam
outsl
pop
adc
cmp
ljmp
in
cwtl
sbb
jo
push
movsb
bound
mov
xchg
sub
loope
push
push
mov
pop
mov
ficoms
gs
pop
mov
sbb
shll
sub
dec
clc
sbb
cltd
or
pop
repz
or
in
fisubs
or
cmpsl
add
cmp
repnz
push
pushf
test
push
and
ljmp
sub
stos
scas
fdivl
stos
add
dec
sub
dec
fcoml
lds
subps
pop
sub
shl
arpl
mov
jecxz
adc
add
stc
imul
outsl
mov
xchg
call
shlb
jae
incl
daa
cmp
cmc
stc
arpl
push
mov
mov
add
cmp
aas
dec
adc
lds
ret
mov
int
icebp
in
loopne
int3
jae
pop
fisubrs
mov
gs
leave
outsl
mov
push
pop
cmpsb
and
nop
inc
insb
out
mov
repnz
movsl
loopne
dec
enter
stos
jbe
inc
jb
sub
nop
shll
mov
in
xchg
sarb
or
sub
jg
pop
enter
ja
cmpsl
jmp
jnp
mov
lea
sub
mov
cmp
in
xchg
scas
or
pop
sub
stos
cld
stc
sbb
pop
mov
loopne
rcrb
adc
bound
int
movl
cmp
addr16
adc
mov
hlt
daa
dec
sarb
pop
sub
rorb
test
mov
js
fwait
push
imulb
jmp
cmc
dec
push
xchg
ja
mov
lret
mov
mov
and
xchg
cld
sub
fisubl
and
xchg
ret
jne
or
mov
bound
mov
fistpll
les
and
ret
cmp
or
ds
mov
add
sub
push
std
mov
fistl
sti
mov
dec
jo
fwait
movsb
fstp
jecxz
popa
das
inc
cmpl
sub
pop
xlat
or
mov
cmpsb
jl
lret
pop
xchg
ret
int
jp
mov
pop
sbb
repnz
testb
fisubs
ret
jbe
cmc
int3
out
add
icebp
out
call
jae
pushf
enter
mov
mov
pop
dec
pop
imul
xor
mov
jae
sub
pushf
lret
iret
clc
shll
mov
xchg
jnp
xchg
clc
dec
scas
shll
push
jecxz
dec
ja
popf
or
gs
ljmp
je
ljmp
xchg
dec
scas
mov
nop
mov
dec
cmp
loope
cmp
lds
cmp
push
add
add
xchg
sub
sbb
es
inc
jne
push
sub
andb
leave
sbb
popa
dec
mov
mov
adc
idivb
jbe
jmp
sahf
inc
xchg
sbb
bnd
ja
push
ds
inc
cld
adc
repz
xor
and
sub
and
xor
or
inc
sbb
hlt
sub
xchg
cmp
pop
ret
cmp
aas
xchg
jno
pop
arpl
sub
ljmp
lods
pop
andb
into
cli
rcrl
or
lahf
scas
cmp
add
add
xlat
mov
hlt
xchg
push
insb
jbe
pop
mov
cwtl
jle
mov
shl
cmpsb
outsl
dec
arpl
jae
cmp
mov
jns
in
cli
dec
sub
xlat
pop
inc
fwait
mov
imul
sarl
push
movsb
ja
add
clc
push
and
cmp
out
xlat
fdivrs
out
mov
jbe
adc
sub
push
popf
push
add
std
adc
xchg
dec
rorl
sbb
mov
and
adc
ret
cmp
sbb
mov
subb
movsl
fisubs
sub
jl
mov
rolb
cmp
je
sbb
xchg
movsb
adc
das
iret
mov
ss
inc
sub
dec
out
hlt
ret
push
cmp
dec
nop
sbb
jge
xor
lea
pop
xchg
pushf
fwait
in
into
push
sahf
mov
cli
jae
or
inc
sub
int3
mov
sbb
outsl
movsl
push
mov
xchg
add
inc
loopne
lahf
aas
jne
sti
shrl
clc
mov
and
and
dec
bound
cmc
lods
mov
push
out
in
ret
cmp
pop
rcrb
dec
test
cmpsl
lret
aam
cmp
mov
add
mov
cltd
mov
cmp
jns
sbb
cltd
mov
pop
shrl
aaa
out
ds
and
dec
mov
test
and
bound
int
subl
xchg
add
xchg
push
nop
sti
cmp
dec
std
setbe
nop
scas
jo
sbb
mov
aam
sbb
mov
in
sub
pop
cwtl
aaa
mov
adc
sbb
and
fstpl
shll
scas
dec
scas
inc
jge
pop
or
cli
push
inc
outsl
outsl
xchg
cmpl
in
inc
cmpsb
mov
enter
ljmp
jg
inc
adc
dec
inc
xchg
dec
sub
imul
push
mov
dec
adc
fucom
aad
inc
or
les
xlat
aas
or
fsubs
ja
ret
js
cmp
repnz
sub
jo
andl
mov
mov
sarb
aas
xchg
cmp
test
inc
mulb
sbb
pop
mov
mov
aam
pop
xor
lock
add
or
adc
aas
push
cmp
or
pusha
pop
pushl
pop
mov
aaa
cs
ret
lds
or
adc
and
push
pop
dec
leave
mov
or
jns
sub
xchg
sbb
lods
push
jp
push
cmpsb
loop
pop
mov
mov
jp
movsb
cmp
fisubs
inc
mov
push
pop
cmc
sbb
push
mov
or
push
sub
pop
inc
imul
jo
push
lods
xor
sti
es
add
mov
pop
or
test
lret
icebp
insl
and
push
xor
sub
data16
jl
mov
pop
bound
movsl
pop
cwtl
popa
scas
and
bound
push
xchg
data16
xorb
jo
shll
pop
sbb
js
sbb
mov
movsb
dec
lds
scas
imul
pop
daa
ds
jns
lcall
adc
dec
mov
cmp
dec
inc
xor
sbb
mov
inc
add
dec
mov
out
cmpsl
aad
pop
nop
pop
cld
or
psrlq
bound
pop
lea
mov
out
jp
and
and
roll
cs
lods
js
mov
sub
add
aam
gs
insl
ja
xchg
push
pop
and
stos
push
sub
popf
scas
sahf
ljmp
inc
lret
shlb
mov
fwait
into
mov
add
pop
push
cli
lds
mov
mov
sub
mov
fildl
mov
sub
popf
cmp
test
in
popf
push
lahf
sbb
xor
scas
push
fstps
cmp
dec
add
and
stos
mull
shl
pop
in
sbb
leave
mov
pop
jbe
in
pop
fldenv
ret
adcb
push
movsb
mov
iret
mov
xor
pop
dec
adc
inc
aas
cwtl
adc
imul
stos
rol
xchg
cmp
inc
mov
mov
adc
ja
inc
adc
sbb
jns
push
and
jmp
into
jmp
lea
fsubrs
mov
pop
andb
inc
mov
mov
rclb
call
lods
push
rolb
adc
mov
sub
inc
stos
add
sbb
call
in
mov
jnp
lods
in
fistpl
push
mov
iret
sub
fwait
cmc
push
mov
xchg
inc
in
mov
sti
mov
popf
mov
jae
std
xor
out
lods
jno
in
incl
jo
fstpt
mov
jecxz
sub
and
mov
mov
aam
test
push
push
push
mov
mulb
decw
cmp
in
cmc
in
loopne
mov
out
or
sub
sbb
std
outsl
mov
addr16
cli
push
cltd
mov
test
jecxz
imul
add
imul
adc
pop
sbb
sbb
adc
mov
popf
fnstcw
push
push
pop
cld
stos
add
das
jno
adc
mov
adc
daa
hlt
sub
mov
outsl
inc
xor
sub
mov
fsub
lea
stos
add
jmp
sub
push
imul
inc
pushaw
inc
dec
xchg
sub
loope
xchg
push
dec
mov
mov
in
xchg
scas
mulb
repz
and
xor
dec
sub
scas
lds
ret
jns
std
xchg
mov
lods
in
cmp
mov
test
divl
xchg
in
mov
push
scas
mov
addb
mov
cmpsl
mov
jl
push
add
cli
test
ljmp
inc
repz
jmp
mov
mov
cltd
lods
test
imul
stos
js
loop
iret
sbb
inc
lods
push
rcrl
sti
in
aad
mov
test
jo
movsl
or
pop
sbb
out
aaa
inc
and
jb
mov
mov
icebp
pop
imul
adc
nop
mov
loopne
jb
pop
jnp
gs
repz
aas
dec
dec
ljmp
repz
xor
sbb
jno
jns
mov
orl
ja
sbb
push
dec
sahf
jmp
and
insb
ja
lret
inc
dec
inc
inc
cltd
ss
add
cmp
cmp
xor
js
andl
push
push
mov
cmpl
adc
adc
in
push
xchg
cmc
sbb
dec
jge
cmpsb
movsb
stc
or
repz
cmp
sub
xor
cltd
mov
or
and
xor
mov
pop
cs
lds
pop
mov
jo
push
fwait
pop
jmp
popf
xor
or
sub
inc
or
scas
and
ss
fildl
pop
dec
or
out
pushf
repnz
cmp
fdivs
pop
push
jmp
dec
loope
inc
dec
imul
sarl
xchg
jnp
sbb
add
push
paddsb
cmpsb
cmpsl
fisubrs
subl
shll
lret
inc
rcr
pushf
pusha
clc
jmp
cmpb
in
jns
jb
stos
jae
into
ret
dec
out
or
addr16
add
xor
les
xchg
xor
sbb
pop
sub
mov
push
std
mov
xchg
repz
mov
push
pop
xchg
lea
lock
cwtl
inc
insl
xor
jmp
int3
cwtl
jge
fsubl
je
out
dec
mov
scas
fcompl
lea
test
push
imul
sub
pop
jl
outsl
rcrb
add
dec
or
clc
pop
jne
in
add
xchg
sub
je
imul
js
mov
mov
cmp
add
push
addr16
dec
dec
iret
rolb
lcall
stos
push
ljmp
mov
fwait
xchg
lahf
jo
fdiv
sbb
pop
lret
and
sub
jmp
js
in
inc
mov
sbb
push
sub
add
test
rorl
jle
xchg
push
mov
ret
testl
sub
mov
inc
aas
js
fnstsw
fbld
lock
test
adc
pop
in
mov
imul
mov
and
cs
pusha
ret
sbb
loop
jl
jb
pop
addr16
cmp
mov
push
push
int
lock
fmull
xchg
push
xlat
repz
jmp
imul
jecxz
hlt
pop
repz
int
out
clc
fmul
or
jecxz
jl
mov
sub
loopne
mov
pop
mov
inc
jnp
cs
aaa
xor
outsb
movsb
inc
sbb
repnz
stos
mov
dec
inc
jns
and
xor
or
xchg
mov
xchg
dec
mov
fcomps
scas
adc
lahf
mov
or
leave
bnd
in
faddl
cmp
test
leave
jbe
xor
sbb
jne
testb
ljmp
mov
push
mov
jg
fnstcw
mov
leave
fistl
loop
cmp
ss
shlb
stos
fimuls
aad
inc
pop
and
push
lds
pop
sub
sahf
loope
jb
push
cs
mov
mov
pop
xchg
mov
dec
cs
push
pop
scas
lods
xchg
sahf
sub
scas
pop
fsts
inc
cmp
sbb
mov
ret
dec
addb
and
xor
push
int3
daa
and
adc
dec
fisubrs
pop
xchg
cmc
and
mov
mov
adc
pop
sti
adc
scas
cmpsb
shll
mov
xchg
push
jmp
inc
mov
add
pop
shl
jl
xchg
cmp
push
push
sub
xchg
add
adc
cs
push
bound
clc
cli
jnp
ds
push
and
dec
push
add
mov
push
shlb
push
ret
or
loopne
cmpsb
push
dec
pop
nop
pusha
inc
or
jne
int3
push
lods
mov
test
adc
xchg
jg
test
adc
or
add
imul
decl
sbb
mulb
push
sbb
imul
sar
ja
ja
outsl
into
mov
inc
pop
loop
or
pop
daa
sub
jo
addr16
cmp
out
push
or
or
push
sbb
xlat
leave
jbe
lret
mov
mov
lahf
jb
stc
aaa
or
stc
cmpb
loopne
xchg
xor
xor
ds
jecxz
fs
xchg
aam
popf
ffreep
mov
cs
mov
push
sbb
xchg
shlb
pop
lock
test
cmp
mov
in
pop
stos
mov
pop
add
push
jns
fcompl
outsl
mov
pusha
fwait
das
pusha
addr16
xor
jle
sti
mov
push
bnd
push
mov
cmpsb
lcall
lock
mov
pop
cmp
add
mov
cmpsb
dec
pop
or
xchg
aam
fisubl
rclb
mov
shrb
cltd
mov
pop
lahf
jb
dec
fwait
add
stc
jp
fcmovnu
das
enter
lods
sbb
push
jno
cmc
shll
cs
jle
mov
pop
cld
or
test
mov
sbb
sahf
sbb
sbb
xchg
add
insb
pop
std
das
enter
fwait
pop
stc
or
insb
frstpm(287
or
out
out
and
inc
scas
pop
inc
rcrl
cmpsb
shll
jl
add
push
jae
scas
mov
mov
dec
pop
push
je
leave
sub
into
push
push
sarb
fsubrp
stos
lock
inc
mov
cmp
xor
loope
aad
mov
hlt
and
adc
dec
faddp
cmp
sub
cmp
sti
insl
dec
push
mov
orb
in
dec
push
das
mov
into
mov
add
push
rcr
into
popa
inc
cli
xchg
mov
inc
aas
dec
sbb
fwait
jno
data16
in
fs
push
lods
std
add
das
sar
stos
in
dec
fs
scas
mov
cmp
aaa
arpl
mov
push
mov
gs
aaa
adc
sub
mov
push
sahf
push
and
adc
cmp
mov
lds
sbb
outsl
mov
cmpsl
push
mov
jge
jo
dec
dec
cmp
push
jo
add
adcb
enter
mov
jne
or
sbb
pop
push
mov
jl
lods
xchg
or
int
jbe
insb
and
xor
push
jle
jle
fucomp
stos
rcll
xlat
inc
xchg
in
rorl
rcll
out
notb
nop
roll
enter
movsl
lods
mov
es
jp
mov
mov
out
dec
dec
dec
je
jle
popf
in
fistps
mov
push
pop
inc
mov
lret
sub
and
cli
mov
imul
mov
jns
or
or
sahf
inc
idivl
out
push
or
mov
mov
rcrl
mov
mov
lds
enter
cmp
dec
mov
push
mov
xchg
xchg
fists
mov
xchg
in
fcmovne
fstps
stos
test
push
lahf
ret
mov
jo
aad
test
repnz
fsubrl
inc
shrb
fcoml
arpl
pop
sbb
dec
fsubrs
push
jle
pop
addb
jg
push
mov
push
testl
mov
cmpsb
hlt
add
jle
cld
push
xchg
notl
cmp
mov
mov
dec
scas
movsl
push
mov
mov
or
pop
dec
jp
emms
xor
out
cmp
jne
xor
test
add
ficoml
mov
das
insl
fmull
xor
xor
ljmp
or
push
push
dec
pop
dec
push
xor
lods
fs
add
fmul
pop
jae
inc
outsl
sub
loope
pop
mov
bound
xor
adc
add
cmp
insl
mov
orl
out
add
data16
sahf
jno
mov
aam
popf
dec
push
cmp
xchg
mov
inc
inc
movsl
mov
outsb
cld
mov
sbb
mov
mov
xchg
pop
sub
clc
out
aas
cmc
inc
in
push
xchg
in
mov
dec
arpl
cmp
mov
mov
push
jbe
push
add
cmp
dec
push
fistpl
aad
lahf
xlat
mov
inc
aam
popf
pushf
adc
ljmp
subb
cmp
mov
dec
pop
jecxz
jno
adc
stc
push
inc
adc
subl
ficomps
xchg
push
loopne
add
out
lret
mov
pop
ss
lock
dec
push
leave
clc
mov
mov
cmp
les
sub
or
icebp
dec
add
xor
cmp
das
lahf
sbb
adc
xchg
inc
mov
xchg
in
addr16
stc
cld
xor
cmp
movsb
pop
lret
mov
ret
ficomps
sub
dec
nop
dec
push
mov
popf
ja
dec
xlat
rcl
adc
pusha
aaa
dec
out
add
xchg
jmp
lcall
dec
js
mov
cmpsb
test
lcall
mov
scas
pusha
fsubp
outsb
mov
in
lock
popa
mov
lea
xchg
mov
push
add
nop
cmp
cmc
jo
test
inc
addr16
mov
cmp
xor
cs
cmp
cld
mov
aad
jb
clc
lret
add
rcrb
jp
movsl
rcrl
fisubl
dec
or
mov
mov
jecxz
cld
add
aaa
addb
mov
sbb
or
ds
pop
andb
and
shll
insb
fsts
sub
in
push
inc
aad
ficomps
je
mov
or
repz
cmpl
roll
stos
add
insb
mov
cmp
lods
and
mov
adc
or
inc
out
int
jmp
add
jb
rcrl
shll
push
dec
aad
adc
and
aam
jno
jmp
repz
stos
dec
rcrb
cmpsb
ds
and
mov
int
push
jnp
mov
dec
or
sbb
pusha
mov
mov
mov
sarl
iret
and
mov
repnz
push
pop
xlat
mov
adc
hlt
pusha
push
mov
mov
cli
js
pop
out
xor
out
les
or
xor
ss
les
push
inc
push
ret
xlat
int
aad
ds
xchg
and
mov
in
stos
adc
loope
inc
lret
lcall
popf
xor
cmp
xchg
xor
pop
cli
negb
push
mov
int3
outsl
clc
mov
cmp
shrb
mov
bound
enter
jp
inc
jne
jo
inc
sbb
xchg
and
dec
sub
cmp
mov
out
xchg
mov
orb
dec
jmp
sbb
cli
or
dec
mov
rcll
xchg
xor
xadd
jne
repz
mov
sti
iret
daa
shll
and
iret
mov
mov
push
push
dec
clc
jecxz
rorb
or
data16
mov
jno
cltd
mov
cmp
mov
into
sbb
jge
stc
cltd
imul
in
xor
aas
lods
xor
jno
stos
enter
add
xor
into
imul
sbb
icebp
adc
sub
aad
aas
pop
repz
clc
jg
pop
push
push
push
add
xchg
call
or
call
xor
sar
movsb
es
sub
mov
pop
add
jmp
lret
mov
jp
arpl
mov
mov
sbb
pop
xor
pop
add
into
xchg
xchg
adc
or
roll
adc
leave
inc
mov
shl
mov
call
mov
mov
xor
lods
sub
mov
push
inc
jne
ds
mov
cmc
std
fdivrl
outsl
mov
inc
call
in
out
enter
dec
out
sbb
rolb
dec
xchg
imul
mov
orl
jecxz
push
outsb
lcall
cmp
pop
cmp
jns
xor
mov
jl
or
pop
subl
filds
imul
add
xchg
cld
rcr
adc
lods
xadd
mov
ja
push
mov
popl
popl
mov
inc
xor
enter
je
fsubr
incb
inc
push
jae
flds
addr16
sub
inc
in
enter
push
add
mull
jno
fiaddl
push
xor
sub
push
das
inc
xchg
lea
push
lret
cmp
cmp
in
jecxz
bound
xlat
fdivrp
jmp
push
cmpsb
mov
mov
das
rorb
push
push
pop
push
xor
xor
mov
inc
dec
aad
dec
inc
idivl
ja
jge
out
push
fdivl
fisubrs
push
jg
in
fldl
stos
sbb
jle
and
adc
mov
pop
push
push
popf
test
clc
push
and
pop
lods
ja
shr
xor
setg
or
sbb
repz
movsb
push
or
inc
loopne
movsl
xor
jg
stc
pop
sub
mov
lock
test
and
int3
lea
pop
sub
push
pop
sti
nop
adc
pop
or
mov
in
lret
sbb
mov
cmp
mov
daa
push
cmp
mov
add
loop
fimull
mov
sub
pop
repnz
or
inc
sbb
xlat
pop
dec
mov
mov
icebp
lods
jge
rorl
ds
dec
dec
inc
scas
loope
jmp
cmp
jg
fsubs
test
imul
xor
sbb
push
dec
andl
mov
or
call
sbb
lret
push
mov
push
jl
test
les
dec
xchg
jg
pop
and
ljmp
jb
in
push
xchg
lea
pop
scas
in
jno
cld
lds
mov
js
mov
jecxz
fs
xorl
xchg
mov
fnstsw
je
outsb
cmovbe
pop
xchg
sub
mov
mov
adc
std
or
sub
add
out
out
popa
loop
adc
idivl
inc
xor
icebp
sub
test
dec
push
andb
insb
push
and
jne
data16
sub
jle
mov
orl
sub
std
inc
pop
popf
lret
loope
subl
mov
mov
les
lods
fwait
push
sbb
lods
imull
pop
scas
test
call
mov
jg
fisubl
repz
not
nop
cmp
xchg
inc
dec
xor
push
out
xor
and
aaa
hlt
inc
sbb
sbb
lds
add
das
mov
sub
lods
xchg
mov
icebp
mov
inc
inc
ljmp
roll
push
push
sub
call
int3
xchg
sub
ret
and
xchg
mov
xchg
sub
xchg
add
hlt
sti
add
cld
mov
int3
test
insl
sub
ss
repz
sub
into
loop
imul
pop
cmpsb
jp
sbb
adc
mov
add
mov
cmpl
repz
enter
adc
pop
jge
or
idivl
or
xor
scas
rclb
pop
ja
and
add
inc
nop
pusha
mov
repnz
aad
jne
sahf
pop
insb
push
push
aam
es
mov
loopne
adc
sbb
fiadds
repnz
cmp
pop
add
das
add
push
lcall
lods
mov
cs
mov
push
mov
inc
cmp
or
mov
cld
mov
or
and
xchg
xor
sbb
fwait
or
sti
and
mov
loop
popf
xor
lea
cmp
arpl
iret
outsl
loop
pop
mov
mov
inc
rclb
loop
mov
cwtl
loopne
aam
xlat
stc
js
or
inc
stc
xchg
popa
jns
int
jg
test
cmp
shll
xchg
xchg
dec
sub
mov
rcl
push
adc
inc
adc
mov
aam
xchg
out
cmp
mov
push
lahf
imul
xor
inc
jb
mul
or
xchg
push
adc
lret
sub
push
test
shl
fcomps
outsl
inc
stc
idivb
popa
add
clc
lea
mov
test
dec
cmp
dec
rolb
outsl
imulb
aad
scas
lods
sbb
in
add
jne
rorl
push
xor
push
or
aas
sub
pop
mov
lods
call
bnd
imul
leave
dec
and
insb
adc
jno
ficompl
xchg
repnz
frstor
and
add
leave
jge
sbb
sbb
xor
inc
ds
pop
xor
and
inc
daa
sbb
addl
out
gs
clc
lahf
fisttpl
cld
pop
xor
mov
adc
imul
pop
movsb
sbb
mov
and
ret
enter
les
aad
cmp
insl
inc
inc
pop
dec
movsl
jae
out
dec
shll
cwtl
fldl
fmull
cmp
push
xor
fwait
xchg
xlat
cwtl
cmp
xchg
mov
mov
rcr
lock
rcrb
ror
mov
adc
pop
push
cmpl
jns
adc
inc
jle
sub
fldcw
scas
add
aas
sbb
in
push
jge
pop
jecxz,pn
fidivrl
in
inc
jmp
mov
mov
or
daa
jecxz
enter
mov
daa
repnz
add
jl
aaa
shrl
inc
push
andl
outsb
jge
jae
pop
dec
ss
and
scas
jns
rcll
lcall
lcall
adc
fcomi
mov
or
xor
and
cli
add
dec
cmp
in
push
icebp
xor
push
add
add
lods
jmp
jecxz
repz
imulb
jle
lret
mov
loopne
bt
adc
stc
add
pop
xchg
jno
mov
imul
repz
test
inc
imul
lret
scas
mov
or
cwtl
ss
sub
inc
mov
cmp
stc
pusha
fmul
movsb
mov
jns
in
adc
mov
pop
sub
xchg
sub
add
jl
adc
insb
movsl
add
mov
or
lahf
sbb
pop
dec
push
cmc
add
dec
stc
sahf
jns
ds
ljmp
xchg
mov
lcall
sub
test
notl
cmp
divl
push
jp
mov
push
and
aam
lds
adcl
add
jae
and
cmp
sbb
mov
out
insb
pop
fs
icebp
es
push
ljmp
jmp
mov
mov
mov
inc
push
pop
add
arpl
mov
fwait
jecxz
in
lock
cmp
mov
inc
cmp
or
movsb
mov
adc
jno
repz
jbe
fwait
cmp
sahf
inc
std
jle
push
push
fcompl
xor
lock
enter
sub
leave
lds
test
loop
push
cmp
movsb
pop
repnz
adc
arpl
loopne
rcl
adc
jns
icebp
adc
xor
push
pop
mov
jnp
fcmovnbe
sub
ljmp
cs
insb
add
mov
push
loope
jecxz
lods
jp
fbstp
add
add
inc
stc
imul
mov
pop
fimuls
stos
mov
mov
xchg
int
push
adc
fstps
cmp
push
mov
popf
sti
lock
or
push
lret
das
sahf
imul
push
mov
or
pushf
test
mov
adc
pop
ss
jle
and
shrb
or
push
stc
xchg
or
push
sbb
add
icebp
int
iret
cwtl
fcmovbe
fnstsw
adc
xor
das
sub
add
mov
xchg
cli
jns
dec
and
mov
adc
mov
lcall
pop
out
fmuls
cmpsl
pop
dec
stc
mov
imul
out
push
popf
inc
sbb
nop
in
mov
pop
ret
shrl
xlat
mov
lret
ss
push
jbe
iret
add
lds
xlat
std
cmp
jg
cmp
loop
enter
addb
popf
push
push
punpcklwd
push
pop
pop
test
push
inc
add
or
jg
rcrb
orl
sbb
arpl
sti
and
dec
lea
inc
mov
fdivs
xor
cmpsl
adc
hlt
fistpl
int3
mov
xlat
xchg
sub
cmpsb
test
dec
mov
into
mov
loopne
lods
out
imul
mov
nop
cmpsl
clc
jl
jg
mov
lods
mov
shll
push
arpl
jmp
push
shr
pop
xchg
movsb
push
adc
addr16
outsl
pop
add
jno
xlat
mov
hlt
out
je
std
adcb
das
addr16
imul
mov
leave
pop
es
data16
daa
inc
push
push
add
add
repz
hlt
pop
out
aad
adc
hlt
fisttps
xor
popf
popf
sub
push
gs
xor
mov
adc
out
cmp
or
push
dec
shrl
or
cmp
inc
repz
loope
and
and
mov
adc
jp
aam
ds
sti
clc
fidivrs
cli
sbb
add
xlat
inc
jbe
push
cmc
test
ja
xor
aas
mov
movsl
bsr
int3
mov
repz
data16
ret
iret
js
lea
mov
jle
or
test
cmp
pop
in
xor
push
imulb
push
pop
cmp
cmp
jb
pop
sbb
mov
fists
ret
pushf
movsb
or
and
enter
fsubl
insb
cmp
sub
test
bound
cmpsb
mov
push
jge
cmp
sbb
rolb
orl
pop
push
cmpsl
inc
sub
sahf
mov
mov
add
cli
mov
xchg
push
mov
mov
outsb
inc
sub
mov
cltd
lcall
inc
sahf
sbbb
adc
cmp
sbb
add
mov
adc
insl
fildll
pushf
push
mov
int
ljmp
jl
cmpsb
xlat
je
push
add
ss
bound
das
scas
lods
enter
xchg
jbe
movsl
or
pop
lods
popf
mov
fidivs
xchg
inc
stos
stos
lret
movsl
jnp
jl
xlat
in
push
mov
add
mov
popa
test
ds
daa
push
ds
sbb
mov
sub
ja
mov
mov
push
lret
cld
xchg
icebp
out
adc
jo
xor
mov
cmp
lahf
mov
or
lds
insb
add
lret
pusha
inc
fildll
in
fldlg2
push
in
icebp
repnz
or
mov
xchg
add
adc
xchg
shll
in
sbbl
sbb
xabort
mov
or
cmp
and
cmp
mov
or
add
in
hlt
loopne
stos
mov
cltd
insl
clc
dec
arpl
push
mov
mov
cmpsl
adc
shll
data16
inc
pop
sbbl
xor
add
flds
sub
mov
mov
cmp
cmpsl
fadds
push
jp
jp
sarb
sub
adc
sub
add
mov
pop
sbb
imul
dec
sbb
aad
aaa
mov
in
fcoml
pop
jbe
js
fidivrs
mov
stc
sbb
lods
enter
int
push
cmp
fmul
cmp
sbb
pop
xchg
fisubrl
es
shrb
or
rol
nop
xor
shrl
mov
loopne
mov
gs
mov
push
ja
cld
mov
mov
outsl
mov
mov
cli
fcomip
adc
jle
and
adc
inc
loop
insb
movsl
and
andb
andb
fisubrs
outsb
mov
or
cltd
cld
pop
jnp
les
jnp
jmp
stos
aad
jno
fdivr
gs
fildl
decb
stos
mov
fmuls
out
pop
jb
cmp
add
loopne
shl
test
cmpsb
push
ss
cwtl
ljmp
or
aas
repz
repz
lock
jmp
pop
arpl
jns
aad
ret
push
jb
sbb
scas
or
arpl
and
inc
sbb
mov
cmpsb
dec
icebp
jne
fs
pop
dec
or
and
xchg
fidivs
into
mov
out
adc
xlat
int
gs
mov
data16
addr16
xlat
pop
xor
cmp
fcmove
mov
pusha
ret
inc
mov
fwait
pop
dec
lahf
dec
xor
loope
cmpsb
add
cmpsb
xor
lods
pop
cmp
jle
mov
xchg
xchg
xchg
stos
push
inc
rorl
enter
daa
popa
dec
cmc
mov
pop
aaa
inc
dec
inc
adc
jo
stos
or
push
aaa
test
add
ret
adc
arpl
cwtl
xlat
cmp
cmp
pusha
popf
xor
imul
sbb
jl
or
call
insb
out
jb
xchg
xor
fcmovnb
in
pusha
pop
sti
leave
jge
cmp
lods
add
mov
add
test
push
jne
decb
mov
imul
cmpsl
inc
inc
pop
jne
ja
insl
mov
cmp
int
mov
push
ljmp
add
mull
push
jns
es
mov
push
sahf
push
pop
clc
sbb
mov
cli
mov
mov
cmc
mov
pushf
adc
sbb
les
cs
rclb
faddl
mov
xchg
or
sub
mov
popa
mov
mov
movd
sbb
pop
int3
movsb
mov
hlt
push
xorb
jecxz
jne
lret
lea
popa
lds
aad
fwait
jns,pt
mov
ret
imul
loop
cmp
aas
cmc
subl
mov
jp
pop
mov
popa
xchg
call
sub
movsb
ror
sub
push
fisubs
test
stos
lods
les
sbb
call
and
jge
sbb
pop
jmp
inc
push
out
fcoml
or
shrb
ds
add
adc
add
lods
xchg
mov
fs
pop
test
mov
pushl
test
push
ljmp
cs
test
push
add
dec
cmc
and
xorl
pop
ja
cmp
jb
xor
xor
jbe
push
js
inc
push
scas
in
xor
jmp
pop
fisubrs
inc
je
dec
cmp
adc
cmpsl
jle
xchg
xchg
add
dec
pop
outsl
aaa
dec
sbb
int3
and
xchg
xor
lcall
sub
mov
mov
into
jp
cmpsb
aad
adc
jae
lcall
sbb
xor
push
ljmp
shll
cltd
xor
in
xchg
mov
popf
das
int
popa
icebp
push
insb
inc
test
inc
add
mov
pop
adc
push
xor
fcomps
pop
and
out
sbb
adc
mov
jns
movsl
push
mov
add
mov
es
imul
ret
mov
cmp
inc
dec
pop
xor
rcrb
test
push
insb
outsl
out
mov
sbb
sti
sbb
jp
daa
insl
repz
adc
repnz
mov
xor
mov
add
fisttpl
movsl
clc
inc
xchg
popa
xor
inc
mov
lahf
es
into
ficompl
cmc
mov
pop
inc
aad
dec
cli
sub
push
insb
mov
mov
in
imul
inc
xchg
lods
cmc
bound
mov
mov
xor
cmpsl
sbbl
and
mov
pop
cltd
or
test
sbb
cli
jle
orl
add
test
add
mov
shlb
cmp
ret
push
cmpsb
mov
push
and
xchg
shlb
cli
addr16
pop
into
in
int
add
cmc
lret
lret
sub
ret
rorb
pop
xchg
repz
enter
add
xchg
jecxz
jg
push
sub
call
cmp
cmp
clc
leave
ret
lea
dec
sub
dec
xchg
mov
mov
lahf
adcl
jl
lcall
mov
imul
or
jmp
push
push
sahf
cs
jb
inc
inc
dec
push
negl
jg
mov
xlat
mov
xchg
cmp
or
sti
pop
xchg
mov
aad
push
xchg
and
or
pop
or
inc
lock
pop
repz
sarb
enter
jmp
insb
popa
add
out
aam
jecxz
cs
out
mov
nop
cs
iret
fidivs
rorb
sub
mov
popa
adc
imul
mov
ficoml
jg
sub
jnp
xor
gs
fcomi
push
lods
mov
lds
xchg
lock
cld
loopne
add
mov
mull
ficoml
jnp
xor
sub
pop
aad
hlt
adc
cmp
imul
xor
addr16
pop
inc
test
dec
adc
cmc
mov
mov
sbb
add
fldl
clc
rorb
xor
mov
inc
cwtl
pop
ja
mov
push
cli
inc
lods
ficompl
fldt
in
xchg
out
js
lock
lock
les
test
push
jmp
or
add
scas
mov
stos
stc
shll
dec
xchg
fbld
jb
std
mov
les
cmc
mov
dec
mov
xorb
and
push
push
insl
ss
insb
fmull
mov
pop
pop
es
and
lods
insb
aaa
sub
aas
pushf
daa
pop
fcmove
insl
mov
adc
dec
jbe
sbbl
sub
into
xchg
mov
out
mov
sub
popa
and
cs
rol
subps
sub
stos
mov
jb,pn
jmp
or
mov
push
push
in
push
mov
inc
movsb
and
jl
cmp
rclb
pop
mov
jno
cmp
jg
outsb
repz
bound
sub
adc
and
into
ds
repz
inc
stos
sbb
xlat
setbe
sti
fisttps
mov
xchg
jnp
fisttpl
adc
mov
mov
loop
push
js
div
in
test
ja
push
out
andb
mov
imul
movb
rcrb
leave
das
sub
xor
push
fucomi
and
fbld
arpl
call
pop
push
lret
idivl
pop
ret
imul
js
dec
lods
test
push
pop
mov
pop
lret
loopne
mov
call
mov
mov
jns
stos
inc
test
jmp
xor
mov
and
xchg
pusha
loop
loope
adc
or
jecxz
mov
jne
rcrb
stos
dec
andb
out
pop
and
adc
fadd
aad
sahf
sbb
int
pop
mov
ds
fs
scas
inc
sbb
mov
pop
jae
add
jae
dec
lods
push
es
lret
cmp
jno
shrl
orl
dec
cmpsl
jns
arpl
mov
lock
enter
sbb
lods
push
cmp
add
rorb
dec
adc
faddp
dec
mov
cmpsl
jmp
sub
push
mov
insl
push
fucomi
xor
stc
jp
lret
adc
jl
and
ret
aam
lahf
sbb
xchg
sarl
mov
push
test
sbb
sub
xchg
notl
lea
lods
xor
mov
aam
pop
cmp
mov
fdivrs
dec
aas
or
js
das
shrl
push
adc
sub
xchg
mov
jecxz
call
sub
cmp
sub
cmp
cmp
pop
inc
mov
out
test
mov
xchg
rcrl
push
daa
test
repz
xchg
pushf
scas
loope
adc
cmp
es
std
mov
cmp
mov
aad
insl
add
push
frstor
sti
cmp
add
push
movsl
hlt
pop
jne
out
scas
dec
test
int3
jbe
daa
frstor
sbb
loope
iret
xchg
or
and
ds
insw
sarl
mov
outsl
lds
push
sbb
subl
lock
or
daa
sub
stc
or
and
mov
stos
bound
or
push
mov
xlat
mov
push
pop
dec
ret
mov
adc
andb
fimull
mov
mov
clc
mov
data16
pop
inc
fimuls
mov
nop
ret
movsb
pop
out
adcb
repnz
inc
inc
fwait
cltd
add
jnp
mulb
jns
aad
les
cmpsb
inc
push
daa
mull
fidivs
sub
dec
mov
loopne
outsb
add
xchg
sti
jp
test
mov
inc
mov
mov
shlb
xchg
mov
std
cltd
jbe
lods
inc
jle
js
ljmp
out
xor
sub
mov
jg
stos
ss
push
mov
stos
sub
rol
testb
addr16
ljmp
fidivrl
stos
adc
xor
push
fildll
lret
dec
pop
notl
cmp
sub
xchg
clc
out
jl
arpl
mov
popa
pop
sbb
sti
mov
push
xlat
pop
js
xor
mov
add
cld
sbb
add
in
sar
pop
or
popf
movl
mov
imul
aas
or
mov
push
jne
sbb
adc
sub
fdivl
and
jb
inc
mov
es
andl
jne
ljmp
dec
cmp
out
mov
mov
sub
inc
sub
es
mov
dec
sbb
cmp
jmp
ds
vucomiss
or
imul
ret
fcmovbe
push
fldenv
je
dec
mov
xchg
adc
ss
mov
scas
sbb
mov
int3
neg
mov
iret
xor
jno
lods
xor
inc
pop
mov
pop
pop
fstl
shlb
enter
fmuls
stos
sub
stos
xor
sbb
and
fstl
jb
push
daa
subl
mov
negl
xchg
add
adc
lods
push
xchg
dec
pop
mov
cmc
outsb
xor
or
jmp
in
xchg
jl
ds
out
push
loope
sbb
lds
insl
adc
sbb
fidivl
loop
das
pushf
mov
push
adc
out
add
hlt
ljmp
aaa
ds
xchg
stos
ret
push
aaa
insb
test
dec
repnz
fs
aaa
outsb
out
fs
dec
jecxz
adc
enter
or
or
fildl
adc
fsubr
and
xor
popf
mov
xchg
aad
je
loopne
cmp
pop
dec
and
mov
xor
out
push
daa
jno
mov
int
lahf
xchg
jecxz
add
lret
jg
ror
add
insl
or
testb
test
mov
xchg
pop
lahf
jb
aas
mov
test
dec
push
rcrl
lock
cmp
popf
lock
mov
dec
bound
hlt
sbb
xor
icebp
push
mov
bound
sbb
ljmp
movsl
aaa
dec
sbb
adc
pop
cmp
mov
sub
outsb
imul
cwtl
adc
or
sahf
icebp
fsts
add
outsl
in
mov
icebp
fs
aaa
lahf
hlt
adc
sub
jl
mov
mov
jmp
or
aam
out
cmp
out
pusha
xlat
sbb
fists
push
push
ja
adc
out
cmp
xor
out
sbb
clc
out
bound
dec
cmp
jbe
add
test
or
add
int3
cld
lods
outsb
add
push
test
cmp
sbb
xor
insl
popf
out
mov
inc
mov
jbe
fisubs
sbb
ja
imul
adc
roll
lods
mov
xchg
popf
xchg
xchg
imul
mov
icebp
into
xor
data16
jnp
push
out
std
sbb
mov
stc
cli
cwtl
pop
push
mov
sbb
cmp
xlat
je
js
jbe
repz
jle
jae
out
xchg
sub
aas
insl
dec
pop
lret
popa
sbb
pop
mov
scas
mov
cmpsb
loop
cmp
add
dec
out
ror
cmp
cmc
add
mov
scas
pop
ret
in
sbb
dec
insl
arpl
mov
mov
fbld
and
sub
cli
cmp
out
push
push
push
idivb
jle
std
aas
mov
pop
inc
stc
xor
pop
ret
add
int
pop
xchg
aad
jnp
pop
or
xchg
cli
sti
sub
sbb
xor
pop
movsl
cmp
add
fstp
mov
out
lods
rorl
cltd
mov
out
mov
push
mov
jnp
in
pop
ffreep
sub
ljmp
divl
mov
inc
pushf
jp
sbb
scas
xorl
or
or
sub
insl
out
out
enter
sbbb
push
or
fucomp
scas
div
lahf
xchg
mov
mov
sbb
sub
fmul
cmpsl
ljmp
jns
and
mov
xchg
int3
inc
lcall
pop
lahf
xchg
jne
sarb
sub
in
mov
xchg
pop
xor
mov
jecxz
enter
jbe
mov
adc
mov
mov
ficoml
fisubs
daa
push
nop
push
push
inc
fiaddl
pop
mov
pop
cmp
pop
adc
sub
out
and
arpl
jns
aad
pop
mov
jo
pop
fsub
mov
inc
or
jns
mov
xor
xor
das
cltd
mov
xlat
or
sarl
pop
pop
dec
xor
sbb
xchg
xchg
les
mov
push
pop
ret
cltd
mov
je
nop
dec
pop
in
dec
loop
js
xlat
faddl
das
and
lahf
sub
push
xor
rorb
mov
xchg
ret
outsl
inc
mov
jecxz
rcrl
inc
or
fisttps
xchg
push
mov
inc
fs
dec
test
and
in
mov
outsl
push
mov
jle
insl
repz
pop
aad
pop
pop
cmpsb
sarb
xchg
xchg
icebp
sbb
in
mov
fnsave
sahf
xorl
ret
popf
nop
ret
adc
ljmp
aas
into
push
adc
imul
mov
dec
sbb
pusha
stc
add
in
jne
mov
fadds
cmpsb
pushf
cs
aas
jmp
in
sbb
pop
inc
pop
das
shll
cmc
ret
fcmovnbe
cmp
in
shr
jbe
iret
loop
dec
ret
dec
dec
inc
sub
dec
xor
mov
mov
mov
repnz
stc
rcr
or
mov
jge
mov
mov
fdivrl
je
lret
mov
or
adc
roll
shlb
rolb
imul
sbb
mul
fnstsw
imul
test
hlt
xor
clc
outsb
push
xchg
jo
xchg
or
dec
lock
push
les
ds
sarb
insl
mov
push
dec
movsl
adc
jae
dec
dec
dec
and
mov
xchg
push
movsb
cmp
jg
imul
push
mov
fcomps
test
mov
int3
add
lret
sub
rcrb
cltd
fnstcw
enter
mov
lret
in
push
addb
inc
inc
xchg
out
hlt
push
mov
sub
and
mov
das
add
aad
fstpl
mov
jecxz
arpl
mov
and
inc
and
adc
push
loop
xor
xor
jecxz
add
and
mov
xor
dec
movsb
shll
push
mov
stos
xchg
lcall
pop
xchg
in
mov
xlat
popa
int3
les
inc
sarl
clc
daa
xor
mov
mov
in
cltd
arpl
mov
jmp
lret
jo
sub
mov
jbe
or
push
mov
add
push
shrb
repz
cmp
mov
hlt
xor
fsub
icebp
inc
sbb
loopne
outsl
jne
mov
aad
push
mov
add
mov
repz
add
jmp
sarb
popf
mov
icebp
and
in
mov
cmp
gs
sub
jl
sti
cmp
enter
hlt
lret
push
ret
pop
je
or
mov
mov
cmp
icebp
mov
loope
jp
inc
adc
daa
add
imul
mov
popa
js
xchg
mov
mov
lods
pop
out
lret
subb
leave
out
shll
cli
jne
push
cmp
push
nop
add
bound
or
gs
dec
lcall
data16
mov
inc
lods
sahf
cmp
or
test
iret
iret
sbbb
xor
pop
jmp
mov
jecxz
movq
push
fdivl
xchg
sbb
cmpsb
lds
cmp
xchg
lret
movsl
jle
icebp
ljmp
mov
cmp
rclb
aaa
and
addl
cmp
cmc
xchg
loopne
lcall
mov
movsb
jmp
pop
cmp
and
iret
xor
ret
pushf
fsts
cmp
inc
movsbl
dec
in
addr16
cmp
push
iret
dec
xor
and
clc
inc
push
out
adc
js
or
or
lods
sbb
ret
jp
fsubr
int
pop
adc
sbb
lods
sbb
sti
jg
je
push
mov
xchg
pop
in
inc
stos
sahf
adc
dec
data16
mov
sbb
mov
mov
mov
and
ret
and
or
xchg
cmpsb
inc
icebp
and
sbb
decw
pop
lcall
or
or
xor
lods
popf
out
sub
push
rcrb
mov
outsb
adc
les
scas
scas
insb
push
adc
jge
mov
push
jno
fstpt
incb
mov
out
adc
xor
jb
or
mov
bound
das
mov
dec
xchg
dec
mov
addr16
jle
daa
add
ljmp
xchg
ret
mov
ds
out
xchg
in
sub
lea
xor
aad
enter
jmp
xchg
ja
dec
sub
mov
lcall
stos
pop
icebp
pop
fbld
cmp
shrb
es
cmp
outsl
cmpsb
jmp
pop
sahf
cltd
clc
jp
repnz
or
pop
in
lret
inc
ret
adc
es
mov
enter
mov
int3
mov
cmp
lods
decb
cld
test
das
dec
push
out
xor
out
mov
mov
cs
cmc
cmc
mov
ljmp
pop
jae
xchg
mov
dec
shr
enter
mov
fistpll
cld
aas
dec
inc
setl
jle
sub
test
jecxz
jbe
mov
push
xorl
sub
out
dec
inc
jmp
adc
xor
scas
xchg
mov
cltd
lcall
dec
xchg
test
cld
sbb
es
lds
add
xchg
jae
loopne
xor
adc
lea
testl
mov
sbb
incl
add
jne
pop
shrl
cld
xor
and
cmp
xchg
lds
mov
test
sbb
sub
and
sbb
or
pop
mov
cld
nop
xchg
xlat
lods
movsl
or
std
loopne
sbb
stos
loopne
leave
in
sub
lret
xlat
push
lret
pusha
xor
push
pop
mov
adc
fldcw
mov
data16
inc
push
bound
arpl
je
or
into
sbbb
testl
push
repz
cmc
das
insl
pop
lds
or
loopne
cmpl
xor
or
iret
pop
inc
pop
rcrb
push
mulb
mov
loopne
lcall
enter
cli
pop
jmp
jbe
fists
insl
xchg
loop
mov
arpl
mov
xor
push
aas
cmc
push
xor
adc
sbb
push
inc
adc
jns
cmp
sti
outsb
outsl
jle
aad
mov
or
mov
inc
pop
push
sti
pushf
add
popf
orb
jecxz
imul
add
jg
inc
cmp
imul
shll
push
xchg
rcrl
push
fs
and
mov
mov
enter
add
fucomi
das
mov
out
lods
sti
int3
dec
push
pop
mov
daa
test
int3
sbb
cmp
add
iret
pushf
and
mov
push
dec
pop
mov
daa
and
lods
fimuls
notl
test
mov
add
ss
stos
xor
xor
incb
or
imul
inc
cli
push
mov
pop
inc
mov
inc
ja
pop
pop
push
cli
scas
mov
xchg
and
mov
outsb
adc
inc
mov
inc
mov
mov
out
movsl
lcall
call
leave
cmpsb
dec
movsb
inc
fldt
and
mov
cmpsl
push
xchg
scas
cltd
hlt
sbb
in
or
inc
sub
iret
popa
in
or
jg
dec
pop
mov
mov
jnp
mov
test
mov
scas
jg
out
lcall
mov
orb
xlat
fs
pop
movsb
out
mov
mov
aam
or
out
pop
andb
push
stos
jle
andb
ret
mov
repz
shlb
pop
and
in
jle
push
jb
mov
inc
loope
ficomps
or
js
add
mov
rolb
cmpsb
cwtl
je
repnz
add
sbbl
neg
popa
and
outsl
pop
rorb
fimull
xchg
rolb
loop
cmpsl
cmpsb
sarl
test
mov
adc
jae
fwait
mov
cmp
push
movsl
nop
xor
daa
or
inc
lods
lods
out
repnz
dec
cltd
push
or
xorb
cmpsb
imul
repz
out
add
insb
push
out
int
mov
push
add
and
adc
sub
mov
insb
push
adc
push
pop
notb
in
data16
mov
jae
mov
pop
fwait
std
cwtl
push
adc
sbb
shll
mov
inc
mov
sbb
dec
push
cmpsb
mov
jle
inc
xor
jb
arpl
xor
adc
js
fdivrp
push
cld
xor
adc
mov
or
add
rclb
sub
push
adc
jmp
xlat
xorl
jno
test
popa
lret
pop
mov
hlt
cmp
xchg
adc
inc
adc
and
mov
into
xor
xchg
mov
inc
mov
aad
andb
push
and
rcrb
mov
lcall
sar
shl
and
mov
add
mov
pop
jl
loope
cmp
adc
jmp
cmp
mov
push
xor
mov
lods
es
add
mov
fists
mov
fcmovnu
jns
dec
movsl
loope
xlat
pop
xor
xchg
sub
mov
push
insl
push
jne
cmp
repnz
les
cmp
xchg
jl
sbb
inc
das
mov
sbb
mov
fucomp
fldcw
cli
xchg
cmp
das
lods
clc
testl
add
fsubrp
cwtl
icebp
fdivrs
addr16
movsl
in
loop
cmpsb
push
cmp
cwtl
lock
jo
add
imul
push
mov
adc
dec
mov
arpl
aam
ds
xchg
lret
pop
adc
fistpll
test
enter
cmp
jb
aaa
inc
ja
or
xchg
sti
fst
into
jl
add
mov
sbb
sbb
lods
daa
and
inc
pushf
xchg
repz
adc
out
cmpsb
sbb
mov
pop
xchg
call
adc
push
jnp
in
xor
nop
subb
pop
cmpsl
fmulp
xor
leave
popa
mov
sahf
sbb
mov
pop
out
pop
sbb
in
xor
and
inc
xchg
fldenv
xchg
dec
scas
loopne
xor
fistpll
dec
pop
lret
sub
scas
pop
bnd
add
push
fmul
loop
pop
jmp
fisttps
mov
call
jno
pop
mov
lret
adc
lcall
pcmpeqw
jbe
jne
lods
add
loope
push
out
das
icebp
inc
or
push
insb
lea
out
xchg
lds
test
gs
jp
jbe
jae
std
ja
fsubs
inc
ljmp
xchg
sbb
aam
push
sbb
bnd
adc
imul
je
or
rorl
fildl
fcomip
xor
add
into
nop
xorb
or
clc
sub
addr16
xchg
call
out
out
loopne
inc
push
add
mov
shlb
mov
or
insl
xor
pushf
jno
data16
pop
pop
jmp
arpl
out
cmpsb
aaa
lock
repnz
sub
fwait
xor
mov
mov
cli
shrl
mov
call
push
and
and
std
test
and
xor
cmp
popa
add
popl
jmp
cmp
lods
fimuls
rcrl
das
loop
sahf
xor
aad
call
sbb
add
imul
dec
addr16
sbb
idivb
repz
sbb
push
in
mov
xor
scas
cmp
mov
enter
mov
pop
and
inc
push
xor
aaa
mov
jno
sub
scas
loop
outsb
outsb
push
jno
jle
sub
lea
std
popa
push
ja
outsb
push
adc
sbb
push
pop
xor
mov
pop
mov
fstpl
sub
jmp
out
push
xchg
out
mov
sub
jle
fisttpl
cmp
test
or
icebp
xor
pushf
jae
js
int
or
push
aaa
cmp
lds
mul
xchg
lea
test
push
or
daa
and
and
push
mov
loopne
enter
sbb
push
in
mov
in
pop
inc
mov
daa
lret
and
pop
cmp
in
adc
ja
bswap
adc
mov
mov
adc
lds
push
out
mov
jnp
push
das
mov
hlt
jecxz
jo
shlb
in
ret
inc
and
sbb
out
negl
jae
mov
dec
arpl
stc
dec
cmp
xor
dec
push
in
or
push
leave
jns
int
sub
xor
xlat
enter
inc
mov
in
push
or
xlat
mov
cli
mov
icebp
ds
mov
test
cli
call
jno
nop
cmp
int3
movsl
iret
enter
push
repz
push
pop
mov
pop
aaa
mov
hlt
test
mov
or
xchg
cmc
inc
out
scas
inc
push
mov
imul
jecxz
mov
adc
push
fincstp
mov
movsl
push
or
and
in
lea
xchg
sti
clc
jo
mov
inc
xorb
sbb
cwtl
inc
std
popa
jns
add
push
pop
xchg
lds
xchg
jne
xorb
cmp
add
xor
push
clc
xor
sub
pop
xchg
icebp
sbb
jl
mov
cmp
pop
shrb
lock
mov
mov
leave
inc
cmpsl
inc
dec
int
fisubrs
cmc
rolb
push
push
push
test
push
gs
or
and
enter
out
or
hlt
push
jmp
aaa
xor
loopne
push
mull
mov
jge
xchg
icebp
shll
addr16
pop
mov
dec
fistpll
loopne
sahf
mov
xchg
sbb
and
push
adc
pop
cmpsb
xchg
mov
aam
add
mov
inc
cmp
lret
push
dec
adcl
mov
imul
pop
push
in
aaa
loopne
cmp
adc
outsl
ret
das
ds
faddp
cld
les
pop
sbb
repnz
outsb
push
jmp
jl
ja
mov
jl
inc
xchg
lods
movsl
enter
repz
call
and
add
test
pushf
clc
pop
dec
ljmp
push
call
pop
mov
cmc
lcall
movsb
mov
push
fdivrl
aaa
and
icebp
shll
fdivrl
adc
aas
and
das
clc
push
pop
pop
cmp
or
loopne
xchg
pcmpgtd
add
xchg
or
out
icebp
lods
or
xchg
xchg
cli
jg
stos
xlat
and
mov
popf
cld
cltd
lcall
repz
call
mov
xchg
scas
je
jmp
xchg
cmpsl
push
push
jns
std
mov
mov
cmova
push
int
adc
rorb
mov
lods
cmovle
mov
and
push
sub
mov
cmp
mov
es
xchg
xor
scas
mov
push
rcrl
jge
insl
xor
nop
xor
inc
add
or
and
sub
stos
jo
test
sbbl
fwait
add
dec
insl
adcb
push
movsl
xor
addr16
test
adc
add
andl
pusha
in
mov
mov
hlt
adc
inc
dec
or
ffreep
xchg
faddl
xchg
sub
arpl
lea
adc
clc
pop
out
push
in
mov
insb
cmpsb
push
or
mov
jnp
andb
push
and
mov
scas
shrl
mov
mov
dec
lret
sbb
lret
mov
mov
sub
roll
mov
add
sbb
data16
cmp
fsubl
cltd
mov
icebp
xchg
sbb
sub
xchg
mov
pop
fbstp
push
incb
iret
sbb
lods
stc
adc
inc
movsl
xor
add
mov
in
push
aaa
adc
adc
pop
jl
in
inc
das
jae
loop
leave
and
xchg
repz
ret
cltd
fstpl
rcl
fcoms
addb
enter
fcomi
ret
jecxz
jl
mov
ret
popa
lods
mov
inc
sbb
outsl
repz
or
mov
adc
jne
cmpsl
fsts
ja
and
mov
jmp
scas
iret
lods
fiadds
push
out
add
adc
jge
cmpsl
sti
bound
sub
mov
loop
sub
jmp
lahf
fisubrl
dec
adc
xlat
xchg
lret
jbe
test
dec
test
call
xchg
pushf
adcl
arpl
fnstenv
add
pop
ficompl
push
test
xor
out
or
or
jae
lea
xchg
or
jne
clc
mov
push
pop
out
bound
test
and
mov
mov
push
ret
test
and
sbb
movsb
pop
add
movb
dec
jle
add
or
and
jecxz
addr16
cmp
andnps
imul
int
out
aad
mov
xlat
daa
dec
sub
xchg
jmp
test
incb
hlt
adc
in
fwait
mov
push
daa
pop
popf
mov
loopne
js
fucomi
mov
mov
push
adc
mov
and
xchg
pop
pop
idivb
push
xchg
rcrl
cld
leave
test
lods
push
adcb
enter
xchg
outsl
inc
enter
scas
popa
in
adc
into
out
sti
in
jne
add
les
sbb
loopne
out
leave
sahf
pushf
inc
lods
jno
pop
mov
hlt
test
rcll
adc
cmp
cmpsl
repz
stc
mov
mov
repnz
and
loop
rcrb
icebp
pop
xor
adc
push
sbb
repz
mov
fdivs
mov
and
subl
lods
lret
jne
xor
xor
mov
adc
xchg
and
into
out
adc
or
pop
xchg
dec
pop
dec
sub
loopne
jg
xor
jl
mov
sub
leave
xchg
push
cmpsb
leave
jb
aam
mov
pop
jne
jns
popa
mov
mov
pop
jl
insl
jge
das
jl
outsl
pusha
jle
adc
repnz
push
loope
cmova
decb
fldl
in
mov
pop
jns
mov
sar
or
popf
ret
xchg
xlat
jge
shlb
and
mov
and
out
xchg
testb
test
xor
pop
cmpsl
xchg
movsb
aaa
xchg
xor
fstpl
sbb
xchg
xor
push
mov
jnp
or
dec
addr16
daa
out
call
rcll
mov
and
mov
jb
dec
in
mov
out
cmc
pop
jmp
dec
pop
in
ljmp
sub
push
push
imul
inc
cltd
movsb
sti
dec
cmp
or
nop
or
test
ja
aas
or
out
rclb
aam
xor
das
dec
mov
jnp
lea
adc
dec
jb
mov
int3
pop
jns
rorb
mov
sar
aas
mov
lret
cmp
cmpsl
out
shll
test
std
jnp
enter
paddb
lahf
rcl
ss
in
mov
dec
leave
inc
lea
inc
pusha
push
push
pusha
mov
xchg
mov
inc
nop
pop
cmpsl
adc
xchg
mov
xchg
cmp
jno
fbld
and
lcall
pop
stc
or
lcall
jnp
dec
fcoml
cli
push
mov
xor
movsl
rorb
ret
mov
cmp
sub
jo
push
outsb
addl
add
push
icebp
std
cld
sbb
add
pop
cli
xor
pop
jp
call
push
inc
push
mov
rcll
pushl
ds
scas
test
cmc
lret
mov
fstpl
lock
mov
or
fmul
int3
aam
mov
jle
ficoml
push
ror
ret
cltd
add
enter
imul
dec
mull
adc
insb
pop
test
jb
sub
fsubrp
scas
popa
fwait
jo
jnp
sub
add
and
icebp
pop
sub
ljmp
movsl
hlt
aas
push
pop
hlt
mov
les
cli
sub
stos
xor
shl
inc
cmpsl
std
scas
sub
into
mov
mov
clc
push
mov
jno
xchg
mov
or
in
imul
push
test
xchg
mov
pop
addr16
and
push
in
jp
sub
dec
lret
dec
xor
push
enter
loop
data16
incl
rcr
lcall
cltd
mov
push
cld
cltd
jmp
or
je
std
add
mov
nop
gs
fnstcw
adc
ljmp
fisubrs
pop
popa
in
fildl
ror
arpl
xor
shl
js
or
sbb
sub
insb
jnp
adc
dec
sti
jo
pop
iret
cmp
mov
sti
aam
gs
scas
mov
imul
xchg
enter
mov
lret
arpl
mov
dec
or
or
test
out
hlt
scas
cmpsb
fcmovnb
movl
mov
in
cmp
std
sub
movsb
push
or
cmc
xlat
push
pop
mov
sbb
in
lds
hlt
insl
repnz
inc
jl
sbbb
cmpsb
js
sbb
rorl
dec
xchg
stos
and
mov
pmaxub
cmp
movsl
into
cmpsl
dec
sarl
imul
sbb
std
sbb
mov
xor
mov
roll
sbb
es
sub
dec
je
divl
inc
inc
pop
adc
insb
es
roll
stc
mov
jbe
add
mov
push
adc
scas
mov
das
push
or
cmp
jno
loope
test
or
adc
push
out
pop
push
out
dec
arpl
out
das
divl
jge
in
cmp
imul
cmp
pop
jecxz
outsl
lods
leave
bound
gs
xchg
xchg
in
jno
test
in
add
mov
sub
sub
push
cmp
push
int3
mov
sti
imul
push
dec
iret
mov
hlt
dec
dec
sbb
add
sbb
lret
inc
setne
jno
add
xorl
xchg
dec
scas
add
cltd
shrl
mov
sbb
xor
push
pop
loop
push
mov
hlt
aam
mov
sbb
imul
mull
cld
xor
and
std
sub
lock
pop
iret
xor
pop
cmp
enter
nop
sub
jo
push
push
stos
and
loopne
enter
add
clc
jmp
lods
cmp
aaa
int3
jnp
xchg
sub
push
aad
ljmp
xor
sbb
push
mov
push
aas
jae
inc
fnstcw
add
sub
jnp
imul
dec
or
mov
cmc
mov
add
movsb
fld
mov
out
jecxz
xor
push
call
fstps
pop
mov
sti
gs
movsl
or
js
es
add
int3
mov
insl
stos
xor
jp
jecxz
test
sahf
sahf
loop
repnz
inc
fcompl
sub
xchg
lods
fcomps
pop
sarl
jnp
andl
push
outsb
cwtl
imul
sbb
call
cli
push
cmpsb
addr16
out
mov
repnz
xchg
add
ret
stos
shr
push
inc
in
adc
dec
test
out
xchg
clc
test
xor
mov
int3
ja
sub
mov
fisubl
pushf
rcl
aam
int
mov
mov
outsl
mov
add
cmp
push
pop
push
and
sti
mov
cmpb
fldcw
in
gs
push
das
insl
aaa
adc
loope
cli
dec
jns
mov
pop
lcall
push
mov
jb
out
add
fcomi
and
adc
ja,pn
cmp
outsl
mov
mov
ss
dec
mov
mov
adc
scas
xor
movsb
das
adc
imul
ja
outsl
aas
xor
cmc
pusha
imul
add
push
mov
repnz
pop
jns
fdivrs
pop
or
mov
mov
rcr
cmpsb
stos
lock
outsl
or
sub
pop
adc
pop
mov
ja
push
mov
stc
jno
pushf
adc
sbb
daa
xor
xchg
push
cmp
std
mov
fisubs
cwtl
mov
pop
iret
scas
xchg
xor
xchg
jl
add
daa
xchg
dec
xor
push
cmp
ret
adc
inc
pop
ret
jmp
lock
loopne
pusha
and
mov
lahf
cltd
inc
jge
lret
xor
cmp
in
sti
dec
xchg
mov
xchg
xchg
jno
xchg
mov
sub
add
cwtl
jae
push
lds
pop
xor
mov
cmp
push
cs
rclb
xchg
lcall
loopne
jae
into
pop
sbb
xchg
mov
into
movsb
stos
push
jmp
fnstsw
add
inc
mov
adc
clc
cmc
nop
mov
cs
shrb
sub
adc
sub
xor
cmpsl
insl
mov
mov
inc
in
addb
adc
sbb
dec
jle
cltd
imul
add
jmp
ds
pop
mov
pop
aad
mov
out
or
add
je
sbb
jle
xor
mov
mov
test
push
jl
cmp
add
les
mov
loope
popa
mov
jnp
movsl
or
ss
repnz
mov
dec
and
mov
xchg
or
mov
push
mov
mov
mov
mov
inc
std
adc
aas
xchg
mov
mov
mov
xor
mov
subb
jl
clc
adc
shlb
inc
and
sub
popa
xlat
fcomps
movsb
xchg
enter
orl
test
int3
sbb
push
or
fisubrs
or
jmp
aaa
and
mov
andl
mov
inc
cld
ljmp
iret
mov
push
ljmp
lahf
adcl
mov
lcall
roll
int
call
frstors
xchg
in
mov
scas
sbb
mov
push
or
pop
rclb
inc
and
out
stc
out
mov
pop
adc
in
negb
or
shl
push
out
mov
fdivrs
adc
sub
mov
ds
xor
push
inc
mov
push
push
dec
mov
out
hlt
in
cmp
cltd
cmp
push
cmpw
cs
mov
or
xor
fisubl
insl
jbe
sbb
sbb
arpl
andl
pop
xor
movsb
outsl
push
inc
jo
sbb
loop
loopne
xor
insl
or
es
inc
test
push
xor
adc
adc
push
fstpt
sub
inc
pop
xchg
adc
fsts
mov
mov
addr16
pop
xchg
es
xor
jmp
sub
lea
mulb
rcrb
popa
push
jecxz
inc
fadds
hlt
pop
cmpsb
imul
jno
fwait
dec
sbb
xchg
lods
push
xorb
xchg
lock
imul
rep
test
sbb
rolb
insl
xchg
push
int
lcallw
or
xor
cmp
push
sahf
shrb
and
pusha
sahf
call
xorl
push
jns
adc
lcall
or
add
cli
xchg
xor
or
sarl
and
sub
int
icebp
in
xchg
lds
pop
xor
xor
and
imul
xchg
loope
cmpl
into
repnz
lods
mov
icebp
sbb
mov
sub
sbb
cmpps
rcrb
divb
pop
push
push
insl
or
ss
out
insb
sub
repnz
sbb
pandn
decl
sbb
repnz
and
in
cmpsb
pop
scas
pushf
rorb
ds
fnstcw
xchg
cmp
inc
jb
in
and
xor
stc
xor
pusha
subl
inc
ret
adc
adc
push
pushf
cld
xchg
in
filds
std
das
cmpb
adc
jg
xlat
jl
imulb
inc
out
dec
jae
cmp
and
pusha
cmp
loop
mov
adc
jmp
lret
or
gs
mov
jg
fstps
jbe
repnz
xor
cld
xor
xchg
shlb
xlat
xchg
sbb
and
int
js
in
mov
test
sbb
loope
scas
cmp
lret
jo
aas
icebp
add
dec
xor
rolb
pop
adcl
and
fildl
scas
fbstp
pop
sub
mov
popa
sti
test
test
inc
ss
jbe
fmulp
mov
mov
inc
sbb
mov
decl
out
sub
stos
cwtl
js
cmp
mov
mov
and
xor
add
shll
hlt
mov
fimull
lret
fcmovbe
int3
fistpll
inc
jns
mov
jg
stos
jbe
inc
jne
mov
xchg
movsb
sti
popa
std
and
or
inc
inc
ss
je
mov
in
inc
pop
xor
push
dec
call
jne
and
push
dec
lods
outsl
mov
idiv
lret
mov
fs
pop
jnp
sarl
insl
mov
xor
cmp
inc
movsb
cmp
and
ss
in
push
and
push
sbb
es
ds
fs
jle
sahf
jge
imul
mov
ficoms
lahf
not
sub
rcll
and
mov
mov
test
sti
sbb
mov
pop
pop
cmp
jge
jmp
inc
aas
add
pop
jl
jmp
lahf
rcrl
lret
jg
adc
imul
mov
sbb
sbbl
ficompl
bnd
cmp
inc
dec
sbb
jmp
dec
mov
popa
xchg
lock
cmp
or
xor
insl
mov
dec
orl
in
jbe
push
sub
sub
aad
pushf
xor
in
in
adc
or
push
cmpsl
loopne
cmp
cmp
out
mov
bound
imul
dec
pop
aaa
push
mov
aas
pop
inc
lds
repz
addb
and
gs
rcll
out
pop
aad
scas
xor
mov
xchg
icebp
mov
sub
xor
mov
cltd
jmp
inc
push
in
dec
pushf
pop
sbb
mov
scas
push
cmp
mov
xchg
push
mov
inc
add
mov
hlt
loop
pop
jae
stc
mov
popa
and
ja
cltd
sarl
in
iret
sub
sbb
shrl
lret
stos
and
cwtl
je
or
andl
rolb
idivb
cmp
mov
cmp
push
lahf
pop
mov
mov
out
insl
pop
inc
xchg
xchg
xor
adc
in
je
movsl
stos
push
push
pop
insl
inc
addl
in
push
jp
popa
jne
movsl
add
pop
add
fisttps
mov
test
ret
call
mov
cli
data16
inc
jb
mov
sbb
dec
pop
mov
or
mov
ret
cmp
cli
outsb
sbb
bound
xor
fcoms
imul
lret
jp
dec
sti
or
push
jg
adc
dec
fwait
mov
in
fmuls
mov
mov
imul
leave
push
cmp
fadd
mov
lret
and
pushl
mov
mov
pushf
arpl
mov
mov
ss
add
cmpsl
jl
stos
push
stos
shll
aam
or
sti
sub
cmpsb
aas
push
pop
lret
cmp
ja
push
mov
inc
dec
sarl
xchg
movsb
stc
dec
mov
adc
mov
mov
cmp
push
sbb
and
insb
inc
push
cmpsl
lret
push
fsts
or
stc
ret
jns
jg
jp
xchg
mov
adc
outsb
push
mov
pushf
mov
in
jb
or
mov
lea
test
jnp
arpl
je
add
mov
mov
fadds
mov
shr
imul
mov
leave
mov
jmp
pop
call
and
rcrl
popf
and
setle
cmp
das
dec
xor
aaa
insl
in
inc
in
sbb
xor
mov
add
sti
fsts
mov
fwait
xchg
test
ljmp
icebp
cli
xor
inc
mov
repnz
pop
add
jae
xchg
mov
repnz
rcl
jbe
ret
push
mov
je
in
xchg
sti
daa
lods
push
push
jmp
push
and
roll
inc
sbb
sub
rol
int3
je
outsb
or
cmp
push
add
mov
fs
in
mov
mov
cmp
aas
adc
pop
mov
xchg
sub
mov
push
jmp
and
scas
mov
mov
adc
sub
loopne
pusha
add
pop
xchg
out
add
fmul
das
in
add
insb
jge
and
jo
lods
mov
cmpsb
jp
pop
xchg
pop
add
jl
mov
cmp
dec
cmovnp
cwtl
in
push
jnp
inc
test
stc
lods
std
pop
pop
xor
fdivrl
inc
in
imul
sub
call
and
sarb
dec
pop
mov
insl
and
in
inc
jge
xor
push
mov
xchg
sbb
pop
bound
jg
sub
imul
mov
lods
dec
je
pop
push
sbb
imul
mov
fucom
mov
call
ffree
sbb
push
shlb
pop
test
jbe
jns
enter
push
mov
int3
sbb
pushl
loop
roll
adcb
clc
daa
cltd
push
outsb
flds
and
std
adc
test
push
adc
sub
loope
sub
sbb
adc
jb
cwtl
jns
push
jle
or
les
and
push
sub
push
push
daa
sbbl
inc
test
clc
pusha
loope
push
pop
lahf
inc
xor
cmp
xor
mov
cltd
jns
add
out
and
ja
inc
dec
sub
imul
lock
sub
shrl
add
ljmp
scas
cld
cmp
lcall
add
jecxz
lcall
add
repnz
pop
xchg
xor
add
aad
das
repnz
lds
dec
or
dec
sbb
shll
mov
test
out
test
popa
cmp
rcl
jne
out
roll
add
push
sub
aas
addr16
pop
cs
mov
mov
jle
cmp
stos
jecxz
add
cli
cmp
movsl
por
mov
outsb
push
sub
fnstenv
xlat
mov
xchg
inc
xor
scas
inc
or
mov
sub
xchg
scas
add
sub
sub
push
mov
sub
push
test
icebp
xor
cltd
testb
fwait
popa
mov
or
loop
pushf
js
cld
pop
mov
sbb
or
loopne
xchg
xchg
fsubr
mov
out
mov
sub
xor
push
mov
in
push
int3
testb
ss
and
subl
dec
clc
dec
sbb
mov
aam
cli
ja
adc
fistl
loopne
inc
ficomps
inc
ret
xchg
adc
not
cltd
mov
or
dec
inc
lods
ja
andb
shrl
cmp
outsb
cmp
mov
and
jg
cmp
arpl
aaa
pop
adc
das
push
lret
fildl
mov
mov
pushf
or
sbb
xchg
leave
test
std
insb
push
add
repz
xchg
mov
aaa
dec
xchg
out
dec
sbb
cli
ret
stos
push
jmp
push
movsl
jae
aad
call
lods
notb
jmp
or
pop
insl
cmpb
hlt
mov
test
add
mov
imulb
popf
testb
add
push
sbb
fsubrs
mov
add
das
adc
mov
rclb
stc
inc
frstpm(287
imul
into
adc
pop
js
or
lods
adc
jnp
les
mov
xchg
inc
sub
test
push
add
jb
scas
call
jbe
sub
jecxz
notl
aaa
lods
shll
push
pop
aas
inc
dec
xor
bound
addr16
std
incb
cmp
imul
or
movsb
sub
int3
outsl
xlat
dec
push
xchg
test
sub
pop
inc
test
dec
aad
xchg
dec
ljmp
addr16
pop
push
rolb
push
mov
mov
push
pop
and
xor
sbb
aas
shl
add
mov
cltd
cmp
fstpl
mov
mov
jnp
or
push
fwait
in
popf
and
or
testb
mov
gs
push
out
dec
aas
shl
fwait
add
cmp
pop
test
ja
test
lods
mov
mov
push
lcall
rol
and
xchg
mov
xor
shrl
push
cmp
popa
enter
add
jo
loopne
xchg
jl
aas
mov
add
dec
test
cmp
jns
mov
cltd
aas
mov
loope
jb
test
movsl
lock
ljmp
loope
adcl
lea
fldcw
and
dec
outsb
outsl
test
dec
xchg
mov
sbb
hlt
icebp
pop
xchg
in
xchg
test
adc
cmp
jbe
aaa
movsb
jmp
cmpl
mov
xchg
fisttps
scas
or
or
dec
adc
add
xchg
je
xchg
sub
lcall
push
pop
in
ficomps
cld
xlat
push
inc
push
arpl
dec
sbb
jnp
inc
insl
cmp
adc
pop
ret
data16
pop
les
daa
inc
fcmovbe
and
aas
add
les
lret
fmul
cmp
icebp
out
pop
mov
imul
pop
jp
das
add
inc
push
mov
dec
lea
imul
cmp
movsb
ljmp
sub
pop
add
movsl
pushf
cmp
loope
les
sbbb
sahf
out
mov
xchg
sbb
cmp
outsl
cltd
inc
pop
mov
sub
pop
pop
push
xor
scas
subb
notb
out
mov
or
ror
in
cmp
jo
push
push
pop
inc
and
jecxz
xlat
dec
cwtl
push
fdivr
dec
int3
push
cmp
test
and
insl
add
adc
sbb
push
sub
rorl
xchg
push
mov
adc
jns
adc
lock
int3
inc
or
and
push
pusha
xor
in
repnz
in
das
lahf
cmp
cs
mov
cmc
call
jae
in
cmpl
mov
icebp
add
sub
push
pop
pop
pop
and
push
sbb
push
loop
and
add
xor
hlt
sub
adc
xchg
add
fildl
xchg
fadds
loopne
sbb
dec
outsl
push
push
imul
movsl
lret
stc
xor
cwtl
adc
popf
cmp
xchg
fldcw
mov
sarb
xchg
aas
inc
jne
mov
mov
in
mov
test
lret
lret
inc
pop
jno
cld
pop
scas
sahf
push
imulb
shrl
test
pop
jno
push
jmp
lcall
adc
xor
xor
jne
pop
stos
pop
das
insb
lcall
dec
sub
fiaddl
shlb
push
jae
pop
mov
cmpb
cmp
sub
sub
sub
es
cld
shll
idiv
add
sub
repz
pop
fdivs
push
popf
sbb
movsl
xchg
pop
xchg
pop
clc
ret
aas
mov
and
hlt
aam
xchg
fstl
popf
test
fs
ret
std
test
push
imul
pusha
insl
jmp
xchg
inc
aad
popa
adc
into
loop
in
lea
in
js
shlb
aas
enter
jns
and
ja
xor
fwait
rolb
sub
arpl
stc
xchg
mov
mov
sti
push
imul
mov
nop
addr16
and
adc
add
out
shr
pop
or
mov
test
daa
adc
sbb
add
movsl
cmp
aad
out
mov
sbb
cmp
out
sbbb
xlat
into
vshufpd
call
stos
cli
mov
data16
push
movsb
cmpsb
add
lods
cmp
test
rcrl
jbe
xchg
xor
pop
lahf
rol
aas
mov
loope
mov
lds
outsb
dec
mov
jns
xor
clc
test
pushf
cmp
push
add
jecxz
mov
dec
dec
repz
arpl
popf
aaa
and
sbb
cmc
pop
jg
sub
stc
fsts
gs
ds
sub
std
je
out
adc
aaa
mov
pop
scas
pushf
adc
mov
inc
ror
repnz
mov
mov
cwtl
and
pusha
ret
inc
fstpl
mov
add
daa
out
js
cmp
lds
roll
inc
sbb
xchg
pushf
out
je
fwait
into
or
or
pop
aas
xor
add
xor
cmp
loope
inc
add
push
lret
out
ftst
outsb
in
add
adc
lea
xchg
jnp
push
lock
daa
es
rol
and
mov
cmpb
mov
pop
fdivrs
mov
push
mov
movsb
cmp
daa
ljmp
jnp
inc
adc
jecxz
shrb
icebp
jne
ret
loope
fdivp
jge
ret
cmp
pop
inc
xchg
mov
clc
addr16
je
pop
add
or
notl
mov
stos
mov
or
pop
sbb
mov
std
rcll
add
sub
xor
negb
xlat
xchg
pop
shr
pusha
inc
andl
sar
dec
inc
mov
mov
stos
push
ficoml
jle
jo
push
icebp
add
adc
jae
add
push
cmp
pop
shll
pusha
mov
inc
fstps
sbb
jmp
mov
inc
jno
cmp
cmp
xchg
jb
mov
cs
lods
sub
outsb
xchg
adc
sub
jl
icebp
jg
xor
cld
imul
and
rcl
and
jnp
xchg
cwtl
mov
push
mov
jp
xor
dec
dec
xchg
lret
punpckhwd
outsb
mov
push
aad
push
mov
xchg
call
push
push
xor
cmp
cltd
lcall
push
popa
mov
arpl
movsb
repz
mov
mov
or
dec
clc
jb
xor
cmp
and
fisubrs
xor
sub
shlb
dec
rcll
lds
adc
call
ljmp
nop
loopne
cmp
sbb
rcrl
out
rolb
js
mov
std
xor
lret
dec
test
xor
add
cwtl
rorb
jp
movsl
fstl
cmpsl
mov
pop
jle
cli
psraw
shlb
shrb
subl
and
fwait
loopne
mov
adc
mov
int
jmp
xlat
dec
gs
loop
mov
mov
pop
out
test
aaa
jl
test
cwtl
mov
push
aaa
insl
jae
mov
push
or
fldcw
mov
push
sbb
push
mov
xor
mov
out
rcr
insb
iret
in
add
out
or
xchg
int3
out
jecxz
pop
add
je
test
and
push
in
adc
xorb
jecxz
scas
shll
jbe
call
pop
fwait
jbe
daa
cmp
jmp
repnz
add
xor
shl
test
faddp
or
sti
add
ret
sbb
or
mov
xor
int
fs
mov
jp
sbb
outsl
mov
xchg
cmpsl
sbb
sbb
lods
dec
cwtl
in
adc
mov
push
xchg
aaa
in
jnp
lea
js
pusha
sub
nop
daa
scas
das
loopne
repz
xor
mov
in
and
fildl
imul
in
push
cmp
test
mov
or
sbb
inc
out
jno
popl
jl,pt
pop
push
nop
nop
sub
insb
into
imul
movb
ret
mov
fcmovnbe
mov
or
es
dec
fstl
arpl
push
lods
cmovg
sarb
sub
in
pop
inc
sub
push
sub
fbld
jge
cmp
ds
fimull
inc
ljmp
cli
insb
and
daa
inc
inc
xor
inc
cmp
add
insb
xchg
push
dec
insl
cwtl
aaa
insl
xchg
outsb
xchg
jbe
jl
dec
cmp
popf
jecxz
cmp
mov
mov
push
rorl
jo
dec
in
jae
sbb
jno
cs
loope
sarl
daa
push
dec
cmpsb
mov
fidivrl
test
ret
xor
popa
outsl
in
inc
test
out
xchg
sbb
jae
cld
or
sbb
ds
sub
jge
sub
out
out
in
fnsave
mov
xlat
inc
rcrl
fwait
in
es
cmp
mov
arpl
mov
jg
xor
stos
or
cmp
enterw
add
mov
sub
jns
call
sub
mov
call
scas
stc
mov
sbb
fwait
jnp
mov
arpl
loop
test
xchg
dec
rcrb
dec
js
mov
add
mov
fwait
cmp
push
add
sti
neg
and
and
lods
sbb
xchg
and
fistl
jnp
dec
std
fwait
sarb
inc
in
dec
add
imul
dec
jae
mov
mov
pop
sbb
xchg
xor
mov
js
mov
sub
das
imul
xor
arpl
movsl
cltd
or
inc
out
jns
fidivrs
or
in
xchg
lret
hlt
adc
mov
cmc
call
add
repz
sub
jb
add
inc
lea
fists
in
popf
add
lock
daa
fsts
out
das
jmp
aad
clc
ud2
into
xor
int3
adc
shr
inc
pop
hlt
stos
icebp
adc
mov
pop
into
dec
adc
adc
ror
test
fisubrs
and
mov
cmp
push
ljmp
mov
sub
out
ljmp
fwait
pop
hlt
lret
mov
lds
mov
inc
jne
fwait
cmp
push
push
mov
push
jb
cli
jns
or
sahf
cmpsb
inc
cmp
mov
sbb
test
mov
andb
add
stc
xor
aas
push
sbb
pop
pop
mov
push
cmp
or
les
sbb
jno
cltd
lret
add
xchg
mov
push
and
into
xlat
dec
insl
push
mov
repz
repnz
xor
mov
push
jae
jmp
jge
sub
test
cli
scas
jg
mov
loopne
dec
adc
bound
dec
dec
xorb
mov
push
lret
lea
sub
xor
xchg
pop
inc
fcomip
outsl
mov
stos
das
in
es
xchg
inc
jae
aaa
cmp
imul
jecxz
in
into
xchg
leave
mov
test
mov
push
cmpsl
dec
cmp
add
push
xchg
push
inc
sub
data16
inc
lods
ret
fs
mov
jle
or
sbb
ljmp
fisttps
xor
dec
fisttpl
jmp
push
adc
add
icebp
adcb
cmp
lret
faddp
xor
push
and
pop
and
cmp
aam
bound
jg
lret
push
mov
scas
cli
bound
add
jmp
fcompl
fisttpll
into
jecxz
je
call
push
es
pop
fldenv
inc
or
fiadds
fwait
or
cmp
imul
mov
xor
iret
or
or
jne
cmp
ljmp
sbb
pop
sub
arpl
cmp
mov
or
das
pushf
shlb
or
adc
push
aas
out
xor
sbb
call
fbstp
cwtl
pushf
mov
inc
aam
idivb
add
js
xchg
aad
mov
push
mov
test
pop
andl
shrb
cmc
push
aam
pusha
pusha
das
bound
jg
mov
xlat
mov
push
pushf
cmp
push
int
mov
push
or
or
jo
mov
xor
pushf
inc
outsb
movsb
inc
movsl
scas
mov
pop
rol
jno
and
mov
sti
pop
xor
sbb
fistps
pop
inc
popf
mov
fwait
and
lea
or
cmp
ret
cwtl
add
mov
inc
adc
fldenv
inc
adc
loop
push
mov
mov
scas
pop
inc
rorl
imul
mov
xchg
repnz
fdivrs
sbb
out
lods
sbb
pop
sti
adc
ss
adc
outsl
testb
or
sub
test
je
vcmpss
mov
test
sahf
inc
call
movsb
push
in
mov
out
in
mov
cld
mov
pop
mov
insl
iret
iret
das
daa
xchg
inc
lock
imul
add
nop
push
sub
fistpl
push
mov
movsl
cmp
jno
push
mov
outsb
insl
mov
gs
mov
or
cmpsb
jle
call
add
sahf
jns
imul
push
jecxz
jns
pop
pop
mov
mov
mov
sti
mov
mov
mov
lret
iret
stos
xchg
sti
sti
cmp
cmp
lea
inc
dec
mov
jne
out
inc
ret
sbb
cltd
hlt
xacquire
bound
mov
sarb
inc
xchg
push
ja
xchg
js
push
cli
xchg
std
ret
dec
addl
fmuls
nop
sbb
fsubl
ret
repnz
fisubs
repz
push
add
ss
decb
and
lods
enter
sbb
insb
add
sub
cmpsb
xchg
mov
jb
xor
cmpb
testl
and
xchg
insb
fldcw
sub
jne
call
pushf
mov
jle
mov
std
pop
dec
or
lds
sar
stos
sbb
loopne
jo
xchg
repnz
fmull
push
and
js
xchg
orb
add
call
fldenv
cwtl
pop
lret
mov
sub
je
mov
adc
jl
cmp
or
add
jnp
jge
dec
or
shlb
fidivl
inc
mov
insl
pop
adc
ja
jecxz
daa
xor
aad
enter
adc
repz
ret
sub
sub
in
push
xchg
mov
js
shlb
pop
stos
dec
cs
pushw
movsl
xor
gs
push
mov
lods
add
cli
dec
push
add
fidivrl
adc
popa
icebp
or
add
or
lahf
cmp
and
inc
es
rol
faddl
add
pop
out
repnz
sbb
add
jno
scas
movsl
xchg
leave
dec
push
add
in
mov
mov
push
gs
push
movl
or
xor
push
sbb
popf
inc
cmpsl
xchg
je
mov
sub
xchg
inc
and
lea
test
dec
push
xor
push
and
adc
push
scas
cmc
ds
xchg
lcall
pop
pop
inc
sbb
mov
dec
rcrl
hlt
sub
shrb
fadd
adcb
lcall
and
xor
pop
cld
jbe
mov
ss
mov
xlat
adc
inc
loop
clc
mov
fidivrs
inc
les
lahf
or
or
fidivrs
cmc
or
and
shlb
sub
pop
jbe
fisubs
stos
rclb
dec
shrb
pushf
sub
loop
cmpsl
scas
mov
outsb
jmp
mov
jl
sbb
jmp
pop
sub
push
imul
add
and
xchg
repnz
mov
and
push
andl
and
imul
xor
sbb
add
sub
pop
lea
xor
bound
insb
mull
shr
and
push
leave
outsb
imul
or
sub
into
push
sbb
mov
cs
lahf
push
shlb
arpl
std
xor
ret
jns
icebp
push
aaa
mov
mov
pop
loopne
adc
test
mov
pusha
aaa
daa
xor
mov
push
fisubrs
jp
push
ret
aam
and
mov
dec
push
or
pop
hlt
mov
cmp
addl
out
rorl
ja
mov
cmp
sbb
adc
adc
cmc
xor
xchg
and
movsl
xor
sbb
xchg
mov
inc
fnstenv
pop
je
inc
or
mov
adc
ret
fisttpll
test
ret
stos
adc
adc
sbb
xchg
test
dec
xor
xchg
bound
fldl
xchg
in
cmp
sub
mov
jl
ret
inc
add
inc
sbb
jo
add
nop
pop
adc
adc
daa
fwait
push
repz
leave
lret
icebp
data16
sar
push
mov
pusha
pop
xchg
add
add
pop
xlat
sub
and
lahf
push
xchg
cmp
push
jmp
sub
shrb
xchg
out
pop
xor
icebp
inc
jo
dec
or
and
imul
sbb
loop
fidivrs
push
and
and
loope
xchg
lods
and
lds
mov
test
add
jmp
repz
ret
mov
pop
fmul
out
mov
xor
sti
xchg
ss
bnd
and
dec
xchg
push
add
mov
push
adc
sbb
rorl
jge
pusha
loopne
std
sti
xchg
adc
xor
jb
mov
js
in
adc
cmpsb
dec
or
mov
call
jb
jge
sub
fbld
fcmovne
les
dec
in
enter
cmc
mov
repnz
push
inc
adc
fbstp
add
imul
lahf
ret
ljmp
jnp
shll
fcmovnu
cli
imul
js
jmp
cli
pop
inc
lds
add
ret
or
lahf
sbb
mov
aad
inc
repz
xchg
gs
xchg
mov
add
out
call
fsubr
pop
xor
xchg
add
xlat
jns
adc
std
inc
xor
and
leave
outsl
insb
jg
test
ret
orb
cmpl
and
mov
jle
mov
inc
in
pop
stos
sub
mov
outsl
cmc
and
fwait
daa
mov
data16
lret
inc
inc
sbb
loopw
mov
ja
test
pop
js
xor
or
sub
adc
jnp
mov
cli
aaa
cmp
xchg
call
sahf
dec
xor
sarl
call
push
pop
icebp
cmp
pop
inc
push
lcall
or
or
mov
pop
adc
sub
stos
addr16
adc
test
in
sub
cmpl
mov
and
or
cmp
sbb
dec
mov
xchg
mov
out
cmp
adc
jbe
mov
xchg
cmpsb
xchg
out
inc
je
aam
add
mov
inc
and
hlt
in
test
fmuls
into
stos
mov
adc
dec
jb
cwtl
cmpsb
mov
clc
cmp
mov
lods
mov
rol
popf
add
scas
fstpl
jbe
push
mov
mov
xor
int
fisubs
mov
push
fistl
or
cmp
push
negl
push
inc
xchg
xlat
push
sbb
pushf
xchg
xchg
xlat
cmp
scas
mov
xchg
std
xor
or
stos
or
in
daa
mov
push
enter
loope
out
cmp
outsl
in
xor
enter
mov
into
inc
xchg
mov
sub
sub
adc
mov
lcall
ret
mov
stos
stos
lret
and
mov
jg
xor
js
add
mov
mov
add
je
push
int
dec
or
fs
mov
push
push
es
fisubrl
push
insl
push
mov
test
ret
sbb
mov
xorl
call
push
jp
ds
xchg
pop
mov
iret
lcall
and
cmp
and
inc
sub
mov
aam
sbb
cltd
sub
popa
lock
xor
loope
rorb
and
xchg
movsl
clc
xchg
push
nop
add
push
in
test
std
shll
or
xor
cmp
sbb
imul
aam
and
repnz
imul
mov
push
test
ret
repnz
flds
jg
sbb
and
sar
or
dec
adc
arpl
sbbb
adc
fbld
iret
adc
mov
pop
mov
mov
inc
je
sbb
pop
jo
out
loopne
sbb
sbb
daa
fwait
and
out
cwtl
xchg
in
aad
sub
pop
iret
sub
push
mov
iret
inc
test
out
jg
repnz
and
stos
cmp
jo
insl
mov
out
loopne
xchg
xlat
xchg
and
fs
fcoms
pusha
enter
popa
inc
mov
cmp
scas
xor
fbld
adc
mov
pop
mov
sbb
dec
iret
mov
rcl
subb
out
outsb
or
inc
mov
xchg
xchg
mov
in
dec
arpl
sub
dec
cmpsb
lods
add
sub
push
inc
pop
sbb
xor
shlb
fwait
ja
iret
add
rclb
xor
xlat
cltd
jne
cmp
cmp
mov
cmpl
jecxz
push
pop
loope
sbb
dec
loop
idivb
ficompl
out
xchg
mov
cli
outsl
fwait
jge
inc
jns
push
mov
inc
xorb
push
pusha
pusha
icebp
add
pop
push
dec
or
das
dec
loopne
dec
les
jbe
out
call
test
pushf
push
icebp
pop
jne
leave
push
add
pop
dec
and
mov
and
sub
cmpsl
mov
sub
loope
ror
cmp
xchg
mov
enter
int3
dec
cmp
pop
pushf
pusha
nop
jge
mov
ss
hlt
cmp
xchg
hlt
sbb
fidivl
xchg
cmpsl
dec
scas
std
insl
sub
dec
mov
mov
mov
loopne
shld
adc
add
daa
into
and
lcall
inc
lods
xor
mov
mov
cmp
mov
test
dec
cmc
adc
dec
cmc
mov
mov
xchg
out
lret
jle
jge
bound
mov
cltd
out
aaa
jmp
call
out
ret
outsb
add
inc
out
aaa
jge
inc
std
xchg
cmpb
cs
lock
mov
sahf
cmp
xlat
cs
mov
out
xchg
xlat
repnz
gs
popa
push
daa
xor
pop
and
cltd
fcoms
xor
pop
cmp
je
sti
cwtl
jmp
nop
dec
fcomps
or
aas
leave
je
pop
push
ljmp
mov
cmp
dec
add
xchg
cmp
adc
mov
lock
dec
rcr
outsl
and
and
dec
mov
push
fldcw
or
das
jp
dec
xchg
pusha
jns
in
inc
mov
push
lahf
in
pop
mov
push
push
lock
lret
les
add
dec
rolb
pop
sbb
push
popf
lea
jno
mov
lahf
dec
push
nop
mov
std
repz
xor
jle
es
stos
cmc
aad
and
push
pushf
xchg
in
jns
adc
dec
sbb
mov
icebp
add
pushl
xor
mov
ret
fisubl
ss
jno
rol
test
pop
dec
ret
test
cmp
in
mov
mov
push
popa
and
outsb
mov
shl
jo
xchg
xlat
xor
out
mov
movsb
xchg
xchg
out
dec
stos
aaa
inc
xlat
sub
shlb
test
iret
sbb
repnz
loop
inc
inc
push
int3
sti
iret
sub
rcll
lods
adc
in
jno
shl
pop
mov
ficomps
shrl
clc
inc
sti
dec
pop
adc
out
xor
fs
dec
mov
pop
stc
sbb
and
inc
xchg
lods
adc
jno
or
bound
addr16
push
mov
mov
mov
fisubrs
incl
fcoml
inc
xchg
je
into
xchg
cmp
ret
pop
fimuls
fucom
cwtl
fucom
insl
inc
lea
sub
sub
mov
mov
pop
jge
xchg
lods
mov
sahf
xchg
mov
sbb
loop
pop
inc
sub
mov
adc
sbb
dec
mov
ror
rolb
popl
fimull
imul
pop
inc
addr16
rcrb
clc
jmp
test
idivl
add
loopne
jne
xchg
decb
cmp
fidivs
jmp
mov
jmp
sub
loope
mov
stos
cld
mov
pusha
pop
arpl
int
sub
and
sub
jmp
mov
in
cmpsl
or
mov
test
push
mov
jmp
ret
ror
push
shrb
enter
je
add
test
hlt
lret
fwait
mov
sub
test
subl
adc
add
dec
cmpsl
shlb
sub
mov
das
movsl
adc
divb
ret
jae
leave
mov
inc
mov
stos
cltd
jae
addr16
cld
jne
ret
shll
mov
bound
test
aaa
scas
fimuls
mov
xor
push
rcll
sub
cs
sub
xchg
mov
adc
stos
pop
popf
inc
inc
jge
xor
lcall
addr16
mov
mov
ljmp
jo
add
inc
pop
sbb
hlt
inc
movaps
pop
loope
pop
test
lds
arpl
and
mov
fistps
or
dec
dec
hlt
push
jl
jae
imul
test
aaa
jge
nop
aad
or
popa
jmp
int3
movsl
in
cmp
fwait
std
adc
inc
das
fcoml
jp
inc
fcomi
inc
addr16
jg
in
inc
push
mov
dec
outsl
xor
rorb
pushf
outsb
mov
popa
pop
fsubrl
or
jg
mov
mov
adc
or
shr
imull
pop
dec
or
icebp
xchg
nop
stos
push
jmp
shrb
shlb
mov
mov
aaa
mov
mov
out
pop
adc
std
xchg
mov
cmpl
sbb
jo
out
scas
fwait
dec
out
xorl
inc
scas
or
imul
fisttpll
addr16
loopne
out
loope
sub
insl
inc
and
addb
xlat
sub
call
mov
dec
test
and
inc
xlat
jge
and
sahf
adc
sbb
push
imul
jle
shll
iret
mov
shrl
sbb
roll
ds
pop
iret
cmp
mov
xchg
xchg
out
mov
fcomip
ret
hlt
sub
les
jp
push
ljmp
loop
enter
cmpsb
in
push
int3
cmpsl
inc
imul
bound
xor
adc
lret
icebp
xchg
loopne
popf
xlat
fimuls
pop
stos
xchg
sub
test
lret
jo
cmp
mov
add
insl
mov
pop
dec
and
push
scas
cmp
push
js
fwait
add
jne
orl
adc
pushf
and
jge
mov
push
cs
xor
dec
fsubrl
shrb
rcrl
sub
in
test
dec
ja
cmpsl
push
sbb
pop
lods
sub
cmp
sbb
ficompl
addl
cmp
jno
enter
mov
cld
lret
sub
sub
popf
inc
aad
addr16
das
arpl
sbb
sbb
push
add
inc
stc
in
stos
and
cmp
lret
inc
out
or
pop
bnd
or
mull
les
sbb
pop
mov
add
popf
js
cwtl
push
xor
or
out
mov
fucomi
mov
ds
out
rorl
mov
jg
mov
push
mov
fsubl
mov
sti
xorb
popa
xor
aas
mov
adc
jae
push
mov
mov
pop
jg
mov
jbe
js
or
xchg
push
repnz
or
das
xchg
std
into
xchg
out
sarl
test
in
sub
and
mov
mov
add
dec
sub
fstps
add
jae
xchg
cmp
inc
inc
pop
xchg
scas
sub
mov
pop
test
shr
repnz
add
dec
cwtl
cmpsb
in
ss
outsb
jmp
or
aas
sbb
cmp
adc
adc
jg
cld
cmp
out
dec
sbb
stos
xchg
mov
divl
mov
mov
jp
pusha
dec
fists
ljmp
add
xorl
and
jg
sbb
sbb
pusha
sti
insl
push
mov
xchg
lds
push
xor
repz
jp
faddl
and
iret
mov
ljmp
pop
repz
ds
ss
dec
inc
scas
inc
ffree
cmc
pop
xlat
cmp
sbb
call
in
loopne
cmp
or
cli
jns
jle
pop
insb
maxps
ret
fwait
ds
jae
sub
jp
push
sub
aas
push
dec
pusha
and
inc
popa
loop
cmpsl
pop
xor
push
cmc
jb
cmp
stc
ficoms
push
enter
clc
jle
and
mov
or
cltd
aam
xchg
mov
adc
das
pop
fs
mov
mov
out
xor
repnz
rcrl
jp
add
std
mov
int
aam
mov
shl
jno
into
icebp
xchg
push
pop
aam
fs
lock
and
rorb
jnp
sub
sbb
fcomip
lods
es
stc
les
into
outsb
sub
insb
push
pop
dec
movl
cmp
notb
dec
xchg
or
ret
dec
data16
rorl
mov
cltd
mov
adc
dec
jl
mov
fst
adc
std
incb
test
mov
and
lahf
jns
mov
jg
xorb
sbb
inc
cmp
dec
out
jecxz
or
jb
out
movsb
xor
pop
shl
lods
std
sti
es
xor
inc
jle
dec
xchg
shr
pop
rcll
fucompp
sub
je
inc
and
int3
jecxz
jmp
jo
data16
std
xor
cwtl
add
outsl
lahf
add
xchg
sub
lods
sti
ljmp
sahf
inc
or
cmp
testl
cmp
xor
mov
adc
or
int3
push
add
add
andl
into
cli
jge
lods
mov
xor
and
nop
iret
push
js
pop
lcall
or
fwait
adc
scas
sahf
cmp
mov
aas
push
cmp
test
cli
ds
in
mov
cli
es
inc
dec
icebp
popa
pop
mov
push
add
insb
jns
subl
mov
lret
mulb
dec
mov
dec
or
jg
push
mov
xchg
and
dec
jno
mov
arpl
and
sbb
js
xor
es
movsb
dec
test
fnstsw
loope
imul
adc
pop
rclb
and
push
cmp
sub
sar
loop
dec
scas
inc
add
mov
lods
repnz
mov
xchg
and
call
xchg
test
cmp
repz
bnd
fwait
push
cmp
jnp
gs
mov
push
xchg
sub
in
jnp
insb
push
mov
push
mov
mov
outsb
into
mov
push
mov
outsb
pop
mov
xlat
push
das
addb
in
cs
push
mov
add
fisubrl
xchg
dec
outsb
xor
push
push
pop
in
xor
inc
mov
scas
arpl
adc
jbe
xor
cli
lahf
and
xor
lods
lock
out
jecxz
or
add
push
cmp
push
mov
loop
xchg
sub
and
jg
pop
jne
mov
adc
outsl
sti
ds
inc
cld
pusha
es
mov
jae
ret
or
das
je
outsl
sub
mov
inc
fwait
xlat
add
testb
push
and
mov
sub
jle
enter
lea
fs
cmc
push
mov
sbb
xor
shrl
repnz
mov
push
xor
push
loope
imul
add
loop
add
cmp
push
into
imul
shlb
pop
and
fnsave
call
lods
mov
sbb
mov
adc
push
ror
push
insb
and
gs
cmp
inc
xor
test
jmp
push
inc
pop
mov
aad
add
pushf
sti
mov
sub
pop
insb
aad
inc
orb
jns
jl
call
mov
inc
cwtl
fsubs
sbb
in
cmc
xor
cld
xchg
add
insb
xchg
adc
out
jl
cs
xor
mov
sub
xor
insb
rolb
cmpsb
mov
mov
or
cmp
mov
pop
std
sub
sub
jne
cmc
add
in
hlt
in
sbb
add
fidivrs
aas
pushf
mov
shlb
xlat
add
stc
int3
adc
or
jne
fwait
inc
xor
xorb
lret
add
mov
adc
cltd
jnp
xlat
sbb
lods
and
out
or
rol
pop
leave
and
scas
fwait
or
outsb
push
xor
cs
mov
les
mov
mov
cmpsl
rorl
push
scas
in
mov
jl
lock
pop
xchg
mov
fwait
popf
imul
test
ss
jo
add
mov
jns
xchg
pusha
mov
nop
push
mov
adc
pop
cld
in
lret
fimull
xchg
mov
ja
dec
shlb
rep
iret
or
dec
shlb
jbe
adc
sbb
addr16
aaa
mov
fsubrs
scas
mov
mov
inc
icebp
sub
gs
sub
or
data16
xlat
xchg
push
stos
sbb
aas
es
mov
inc
negl
xchg
repz
popf
ja
and
push
mov
xor
mov
push
jb
add
sub
or
lahf
jnp
cmp
xlat
inc
adc
out
sub
jbe
adc
lahf
stos
cmpsb
sub
rol
pop
pop
roll
int3
pushf
stos
pop
inc
pusha
adc
fcoml
push
sbb
aaa
fdivl
pushf
aaa
daa
addl
adc
enter
sbb
sarl
mov
jge
ljmp
std
dec
outsb
movsl
fnstcw
stos
sbb
mov
cltd
pop
xor
ret
pushf
mov
gs
push
pop
push
jge
lret
mov
repz
xor
lret
mov
jp
icebp
xor
int
mov
mov
xor
aam
mov
mov
sbb
js
ljmp
ficomps
mov
push
movsb
std
repnz
inc
scas
inc
adc
jno
cmc
inc
aas
or
mov
push
int
mov
jg
xchg
bound
popa
mov
sub
sub
insl
ret
cmc
sub
mov
fs
pop
lret
mov
lahf
inc
orl
pop
stos
les
xchg
dec
stos
dec
xchg
cwtl
popf
je
cs
jle
mov
scas
lds
cmpsl
cmp
cmp
mov
clc
rdtsc
mov
stos
nop
mov
loopne
into
dec
bound
movl
mov
cltd
call
lock
clc
dec
cs
lock
cld
jge
push
xchg
and
js
rol
adc
mov
cli
mov
adc
and
test
lcall
test
xchg
addr16
stos
aas
inc
repz
ljmp
addr16
repz
push
cwtl
rorb
mov
add
push
mov
fnstenv
mov
cmp
and
jno
mov
mov
das
push
bound
jns
cmpsl
push
cmpsb
dec
inc
aam
xor
push
push
outsb
xorl
adc
sbb
or
cmp
dec
jne
inc
test
add
mov
adc
cmp
in
pusha
testl
push
jmp
add
fldcw
lea
inc
icebp
mov
mov
jp
pop
sub
repz
mov
lods
mov
popa
sbb
stos
shll
inc
test
sbb
sbb
pop
mov
adc
xchg
sbb
xor
xchg
std
mov
test
ljmp
jmp
insb
fidivs
mov
sub
stos
xor
mov
mov
and
int
sbb
jle
jo
int
into
fidivrl
pop
jnp
int3
jmp
push
lds
push
shlb
inc
fs
mov
xor
in
pop
mov
jg
cmp
push
xchg
dec
sbb
xchg
add
add
std
data16
cmp
inc
push
sub
scas
dec
cld
mov
cs
mov
loop
popf
push
in
test
in
outsl
inc
lods
cmp
inc
dec
hlt
in
clc
add
stc
lret
lret
inc
repz
or
fldpi
push
xchg
fcoms
hlt
lcall
dec
movsb
nop
cmpl
mov
sbb
out
aaa
lods
adc
bound
daa
lds
je
xlat
popf
fcos
lret
cmpsb
in
aam
jecxz
les
popf
xor
xchg
mov
push
rcrb
push
push
addr16
iret
clc
dec
jecxz
inc
stos
test
sarl
in
lret
sub
fcoms
gs
mov
adc
lea
xchg
xor
xchg
jl
lods
or
adc
popf
adc
xchg
pop
cltd
and
and
jns
in
sub
scas
lea
or
mov
cmp
jne
aad
push
push
adc
xchg
or
mov
dec
mov
sbb
aam
jo
insl
int
push
mov
xchg
cli
add
loope
fisubs
and
outsl
mov
sub
bound
mov
pop
xor
and
std
repz
pop
fisubl
fwait
lahf
add
sub
cmp
mov
out
mov
popf
sub
loopne
out
adc
mov
pop
outsb
and
cs
stos
fstpt
sahf
inc
mov
mov
add
ds
lds
cltd
daa
mov
pop
mov
lcall
lcall
pop
ret
or
data16
xor
pop
cmp
mov
push
rolb
cmc
mov
add
mov
sbb
outsl
mov
enter
lret
ja
mov
xorb
daa
ficoms
les
lods
ljmp
ret
inc
pop
scas
push
and
ljmp
pop
sub
cmp
lret
xor
push
clc
xlat
xchg
push
adc
mov
nop
mov
adc
popf
jno
mov
push
xor
xor
push
push
jp
push
ret
mov
fidivrs
jg
xchg
lea
adc
xchg
std
out
pop
dec
cmc
in
lock
jnp
dec
cmpb
loopne
xchg
jae
lds
std
jmp
or
rcrb
dec
mov
roll
stos
lds
hlt
fwait
jb
jnp
movsb
xchg
iret
lds
ds
leave
stos
sbb
xor
cwtl
js
mov
pushf
ficomps
inc
mov
outsl
jl
dec
imul
fcmovnbe
std
cmpsb
gs
mov
lret
test
imul
add
inc
jp
fldcw
and
insl
popa
mov
sbb
lret
nop
bound
repnz
sbb
mov
bound
sbb
daa
xlat
adc
push
je
jmp
mov
out
roll
sub
stos
insl
out
test
mov
cmp
test
pop
cmp
cmpsb
das
out
into
push
push
pop
lret
adc
mov
mov
sbb
mov
push
sbb
leave
loopne
xchg
xor
dec
push
test
inc
out
cmp
bound
jle
outsb
adc
popa
in
mull
lret
jbe
sbb
popf
xchg
push
mov
lret
sub
jg
mull
ljmp
sub
mov
sbb
mov
lahf
add
sbb
adc
test
sbb
fidivrl
push
call
ja
add
xor
popf
add
sub
fdivr
and
idivl
jae
mov
icebp
adc
aad
mov
lcall
pop
add
push
xor
dec
mov
xchg
add
sub
mov
add
das
jge
mov
adcl
push
pusha
push
dec
repz
ss
lods
andb
xlat
cmp
sbb
sarl
aam
mov
sub
xchg
lret
insb
cmp
sub
xor
int
sub
jns
add
sub
or
push
jno
out
inc
cs
fldl
rclb
in
enter
loopne
fwait
out
ret
sbbl
popa
add
loope
mov
ds
inc
aas
loope
jbe
bound
cld
dec
inc
adc
nop
mov
stc
and
lods
clc
daa
rol
movsl
notb
gs
mov
push
xor
mov
adc
push
into
add
sub
shll
add
rorl
test
ret
mov
mov
jp
push
push
sti
hlt
push
cmp
jge
jns
push
xchg
adc
scas
xchg
inc
mov
outsb
inc
sub
push
lds
imul
push
jo
adc
inc
jne
mov
dec
lahf
push
inc
xor
cmp
test
inc
aad
add
arpl
xor
sbb
aas
xor
sbb
fdivrp
push
mov
mov
popf
pop
lahf
jne
outsb
sbb
xchg
pop
notl
notl
js
in
mov
add
insb
jae
dec
mov
xor
push
das
data16
jl
mov
push
and
popa
inc
shrb
jbe
add
fbld
xor
mov
sub
adc
imul
orl
fsubr
push
mov
rcll
adc
test
rcrb
sub
out
mov
jns
in
out
mov
sbb
test
cmp
mov
stc
scas
push
adc
jne
pusha
add
cmp
out
xchg
adc
pop
inc
adc
and
std
das
lea
hlt
movsb
fwait
xor
jnp
push
jae
sahf
leave
jne
inc
roll
mov
cmpsl
lcall
mov
pop
jmp
adc
mov
aas
test
stos
pushw
out
adcb
xchg
mov
sahf
cld
lods
out
mov
or
sub
sbb
jl
add
xchg
cmp
and
ja
mov
inc
sbb
lret
pop
jbe
pop
push
iret
and
jbe
fcomps
cld
push
mov
sbb
mov
lods
or
inc
pcmpeqw
lret
bound
es
xchg
xchg
stc
mov
or
sbb
popf
push
adc
push
inc
pop
mov
popf
cmp
fcoml
fsubl
xchg
outsb
stos
dec
xor
push
mov
inc
and
aad
aam
inc
pandn
push
shlb
clc
sbb
loopne
in
jno
xor
scas
mov
test
insl
jmp
cwtl
inc
daa
mov
cwtl
out
adcl
lret
sarl
or
lds
int3
xchg
popa
loope
inc
sbb
mov
pop
rcrb
daa
mov
out
imul
dec
out
sub
fsubrs
fimull
ret
arpl
jns
pop
mov
inc
fadd
rclb
dec
and
mov
inc
into
xor
in
int3
aad
xor
lret
sbb
loop
jns
inc
dec
repz
rcll
xchg
and
ficompl
xor
pop
into
into
jg
pop
hlt
cmp
inc
int
push
inc
test
push
shl
fsubrl
cmp
push
mov
xlat
sahf
sbb
sub
add
pop
lock
orb
mov
jbe
and
mov
mov
ja
mov
cli
pop
jno
cmp
and
shrl
scas
fistl
cmp
imul
icebp
mov
mov
xchg
dec
push
pop
adc
xor
adc
jl
push
push
push
es
mov
dec
cwtl
add
add
dec
push
pusha
lcall
out
sub
lea
jle
cs
subl
push
xchg
pop
add
pop
inc
sbb
fwait
rorl
sbb
mov
mov
aaa
jb
add
std
lea
adc
dec
dec
in
dec
mov
mov
xor
dec
xchg
aam
push
std
ret
lods
or
int3
pop
into
pop
loope
adc
add
mov
adc
not
insl
xor
clc
arpl
push
rolb
es
loope
inc
jl
adc
xlat
jae
xchg
std
sub
inc
les
mov
ret
mov
imul
xlat
stos
push
push
mov
insl
dec
lret
and
pushw
and
aam
outsb
and
pop
fsubr
clc
xchg
push
pop
mov
dec
adc
into
pop
addr16
inc
into
jnp
jb
sarl
xlat
pop
cmpsb
cmp
dec
pop
mov
leave
push
push
lret
inc
xchg
jmp
xor
jl
popa
mov
xchg
xor
dec
popf
xchg
stos
inc
mov
and
insb
mov
dec
inc
jg
push
cmpsb
enter
test
mov
fidivrl
push
adc
mov
gs
dec
lea
mov
dec
in
or
pop
mov
mull
and
in
mov
mov
repnz
lods
cmpsb
test
mov
imul
pop
mov
stos
wrmsr
pop
gs
lods
and
mov
pand
add
repnz
push
sub
rep
movsb
or
or
push
mov
sub
xor
or
inc
out
inc
cli
mov
ror
fdivs
das
enter
aad
dec
outsl
xor
xchg
fbld
dec
aaa
xchg
jp
out
adc
rcrb
adc
pop
je
mov
divb
dec
pop
jne
out
fcompl
jns
int
ljmp
loop
jmp
mov
imul
cli
inc
out
rcrb
sub
div
aam
xor
adc
push
fildll
lahf
mov
nop
inc
pop
sbb
decb
lock
in
inc
pushf
sbb
adc
jo
insb
adc
outsb
imulb
pop
fmuls
inc
fisttpll
pop
addr16
mov
mov
mov
or
xchg
or
addr16
fldt
sbb
xlat
or
cwtl
lahf
pop
dec
cmp
jbe
push
mov
outsb
mov
lcall
or
ret
mov
mov
mov
fdivs
mov
mov
mov
in
fwait
rcll
scas
das
sub
mov
inc
dec
lret
popa
frstor
fistpl
rorb
clc
dec
inc
popf
fwait
dec
pusha
pop
pop
xor
sbb
sub
aas
mov
xor
lock
add
es
mov
cmp
cwtl
push
fiadds
cmc
sbb
jns
xchg
outsl
fnstsw
sbb
sub
sub
and
out
mov
notb
adc
lock
aas
popa
wbinvd
scas
cpuid
pusha
arpl
inc
dec
and
testl
les
les
aad
push
mov
cmp
mov
sbb
subl
jmp
xor
insb
aaa
ret
dec
mov
cmp
xchg
popf
xor
es
mov
test
push
cmpsb
and
loop
fucomi
mov
jb
jb
rorl
jmp
ja
jns
sbb
or
jle
add
gs
jg
xchg
xorb
pushf
dec
call
pop
mov
and
or
jns
add
push
aaa
cs
js
popa
shrb
jmp
and
loopne
jns
or
jecxz
cmp
xchg
mov
cmpsb
xchg
xchg
xchg
sbb
icebp
xor
cld
xchg
mov
inc
arpl
andb
adc
fistps
and
jb
outsb
leave
hlt
sub
enter
in
jne
and
dec
fptan
jp
insb
mov
push
jle
mov
repz
pop
pop
fnstcw
sbb
xchg
add
add
out
xor
scas
inc
or
std
add
arpl
dec
int
sub
aad
xor
push
cltd
fmull
cmp
shrb
mov
mov
imul
mov
mov
clc
shlb
mov
jns
out
and
lret
call
insb
in
in
dec
les
dec
push
js
jp
pop
pop
lods
xor
std
cli
cmp
lock
inc
mov
jnp
shlb
cltd
inc
jne
jb
insl
mov
jle
cmc
hlt
cmpsl
mov
imul
push
mov
ja
imul
sarl
cmp
ja
out
int
ret
sbb
sahf
mov
push
inc
pushl
adc
repnz
lahf
adc
mov
xchg
cs
sub
pop
xor
jo
jo
xchg
xchg
inc
pop
aad
in
mov
sbb
sub
out
dec
lods
mov
mov
sbb
mov
adc
sub
movsb
ss
scas
outsl
xchg
das
out
scas
lcall
xchg
dec
mov
cmovbe
shl
ljmp
or
fcompl
cmp
pop
pop
mov
push
and
mov
inc
push
popa
aas
loop
or
loopne
jb
sbb
mov
mov
ret
mov
push
mov
fnstsw
cmp
fwait
or
loope
arpl
or
inc
push
adc
ror
push
pop
xor
mov
fistpl
inc
out
and
push
push
mov
xchg
outsb
sub
je
add
loopne
bound
adc
pop
pop
mov
xor
adc
add
mov
test
xor
xor
les
pop
jle
cmp
adc
add
jns
into
push
das
mov
cld
mov
sahf
je
adc
popf
cmc
pop
lret
shlb
int3
std
dec
mov
and
push
ret
movl
je
xor
mov
sbb
clc
fbstp
mov
jno
test
negb
mov
adc
dec
mov
and
sahf
test
out
out
mov
loopne
and
int
or
sarl
or
xor
mov
xchg
inc
jo
movsl
std
test
jmp
mov
outsb
es
xchg
cmp
mov
pop
repnz
outsl
xor
shlb
das
push
jo
shll
push
push
sbb
mov
in
out
shll
sbb
test
sub
loope
arpl
xchg
inc
dec
jnp
jbe
sbb
mov
movsl
jp
in
mov
jo
cmp
fwait
aam
out
xchg
xchg
call
inc
imul
jmp
xadd
filds
es
lock
fistpl
sbb
popf
jmp
push
jae
cwtl
rolb
outsl
cmp
sub
xchg
jge
sub
lahf
cmp
push
adc
mov
sub
xor
lret
into
jbe
je
sbb
repnz
or
xchg
out
pop
test
jmp
mov
and
mov
push
aaa
or
das
mov
xor
jp
lret
lret
sub
adc
loope
xchg
sub
sahf
dec
and
js
dec
ret
fmul
pop
jg
stos
jmp
adc
loop
and
jne
jmp
dec
and
dec
loopne
loopne
sbb
into
inc
xor
call
lods
jnp
cmp
adc
cmpsl
movsb
loop
iret
mov
add
fbstp
stos
adc
fsts
imul
ds
inc
ds
or
pop
add
popf
and
les
int
aad
ljmp
lock
or
inc
pop
loopne
add
mov
mov
xor
sbb
lds
jno
jno
loop
sub
aaa
data16
cmp
pop
pop
dec
and
and
enter
pop
loopne
jnp
cmp
fucom
jb
and
daa
jmp
dec
pop
push
push
jl
push
fistl
loop
shll
out
mov
fnstenv
fisttpll
mov
pusha
pop
push
leave
hlt
and
mov
lock
mov
aas
mov
and
xchg
push
ljmp
xchg
stos
rolb
fwait
imul
jae
mov
sub
pushf
and
xor
pop
xchg
and
orb
pop
shlb
sub
and
repz
mov
repz
daa
fucom
pop
mov
lahf
xor
mov
fwait
pusha
inc
je
xor
lock
fsubrs
cmc
call
pop
dec
cli
push
sbb
in
sbb
mov
data16
xorl
xor
push
adc
cmp
xchg
pop
pop
mov
or
ss
mov
sahf
mov
xor
shl
cmp
movsb
pop
pop
icebp
cs
enter
aaa
sub
mov
mov
out
push
aaa
js
cmp
mov
mov
in
pop
bound
sub
cmp
adc
mov
addb
add
add
insl
stos
push
jge
mov
cmp
sub
rcrb
cld
hlt
cltd
imul
sub
inc
and
cmpb
lret
out
jp
push
int3
pop
inc
or
inc
inc
in
nop
inc
sbb
mov
sbb
orb
mov
pop
push
jle
shll
add
xchg
or
call
hlt
sub
mov
insl
jno
push
test
and
mov
test
xchg
rorb
dec
jns
outsl
in
inc
jo
mov
push
xchg
das
dec
movsb
xchg
push
sub
adc
cwtl
subb
sub
push
stos
mov
sbb
or
push
cld
mov
loope
or
add
lea
xor
test
in
mov
dec
sub
push
insb
ds
sbb
hlt
and
aaa
dec
enter
adcb
xchg
mov
push
mov
sub
adc
cmp
lret
or
outsb
iret
jne
into
or
add
scas
ret
pop
insb
sti
mov
test
pop
movsb
sbb
ret
mov
adc
aaa
jl
inc
sub
dec
cmp
dec
fstps
xchg
or
shl
ret
bound
insb
and
rcrl
js
xor
sub
inc
jnp
cmp
mov
add
dec
mov
add
fcmovne
or
stos
imul
mov
test
loope
in
xor
cmc
adc
and
mov
dec
adc
fisubl
cltd
test
sbb
aaa
sbb
lods
mov
jne
mov
sti
pushf
nop
mov
loop
sarl
cld
jg
test
push
clc
push
or
mov
arpl
fistpll
or
inc
add
test
stc
fs
or
mov
cmp
fs
push
nop
sub
mov
test
push
rolb
pop
cmpsl
in
dec
mov
ljmp
push
add
xchg
lret
arpl
cmp
push
dec
mov
or
sbb
or
or
subl
lret
shl
scas
call
jnp
ret
cltd
pop
imul
inc
sub
jl
dec
mov
sahf
cmp
pop
push
ret
shlb
inc
es
inc
outsl
jnp
orb
inc
mov
xchg
je
imul
or
ret
loopne
inc
das
pushf
xchg
dec
fnstsw
cmp
mov
in
hlt
inc
cmp
ret
jl
cmp
or
or
gs
dec
jecxz
mov
inc
add
push
leave
mov
test
lret
frstor
xchg
cltd
sbb
loop
adc
sbb
idiv
movsl
add
daa
mov
sahf
cmp
inc
mov
dec
dec
jae
or
popa
cmp
sbb
jmp
cmp
adc
cmpsl
mov
sub
in
cs
sub
xchg
xorl
mov
fidivl
cs
movsl
enter
and
out
icebp
dec
jb
jmp
shlb
sar
cmp
repnz
push
cmp
xor
pushl
cmp
mov
leave
xchg
std
add
repnz
push
jno
or
adc
movsl
out
cld
repnz
push
lods
dec
addr16
xchg
xor
shlb
repz
sub
js
repnz
rclb
add
mov
dec
ficoms
jmp
pop
pop
sub
xchg
into
pop
and
inc
sti
mov
and
jl
ss
inc
push
das
sarl
push
mov
fsubs
push
xlat
push
pop
aam
xchg
push
mov
das
lock
adc
mov
mov
imul
fnstenv
ja
js
aam
xor
and
push
nop
aas
loopne
pop
jg
sbbl
roll
stos
pop
incb
mov
cmpsl
dec
fildl
in
enter
loope
inc
in
inc
xchg
push
out
mov
dec
je
adc
and
jecxz
sub
and
movsb
push
in
mov
mov
mov
mov
popa
dec
setae
and
mov
cli
cltd
inc
pop
dec
cli
add
ret
add
mov
nop
aaa
subb
dec
cmp
xchg
arpl
js
cmp
adc
aam
insb
wrmsr
es
inc
leave
sbb
adc
lock
xor
mov
filds
adc
mull
adc
ficoms
ret
jno
lret
pop
ret
cmp
dec
arpl
jge
cld
push
mov
imul
push
inc
clc
jecxz
popa
xchg
sarb
loop
push
scas
pushf
mov
cltd
test
or
insb
pushf
pop
repz
lcall
or
das
xchg
xchg
insb
fsubrp
and
pop
decb
mov
mov
mov
in
xchg
inc
push
cmp
mov
call
dec
test
cs
xor
cli
mov
push
add
stos
cmp
sahf
cmpsl
jae
dec
fdivrs
aam
test
inc
dec
loope
clc
insb
adc
mov
push
jns
popf
cli
mov
rcl
add
or
pop
push
xor
icebp
icebp
lret
mov
std
jg
push
pop
sbb
jo
ljmp
xor
jle
loop
mov
mov
dec
lahf
rol
test
repz
mov
or
or
push
lock
movsl
pusha
leave
mov
icebp
int3
sti
inc
pop
dec
xchg
paddb
pop
int3
je
push
fnstcw
js
xchg
fsubrs
add
push
add
jb
es
pop
call
mov
rolb
push
push
mov
mov
insl
or
inc
jae
xor
mov
sbb
xchg
push
mov
fisubs
pop
pop
sub
movsb
das
mov
xor
in
mov
sub
jbe
mov
into
hlt
xor
push
out
test
mov
out
add
out
xchg
pop
int3
mov
pop
subb
mov
inc
jo
sti
sbb
pop
xor
pop
lds
loope
xor
fmuls
xor
or
mov
imul
je
outsl
jnp
adc
dec
dec
jg
mov
aaa
pop
and
outsl
mov
xor
aad
jno
lret
sub
mov
fimuls
add
xchg
shlb
aas
andb
xchg
pushf
cwtl
ror
fidivrl
sbb
addr16
aaa
or
jno
add
pop
daa
into
push
jg
es
push
out
or
outsb
xchg
jp
pop
sahf
sahf
mov
addl
and
lret
int3
push
jmp
xor
or
lret
lock
in
sbb
xchg
sbb
push
push
imulb
sahf
inc
cmp
add
fsubrl
pushf
iret
mov
or
test
mov
popf
pop
xchg
xorl
push
sbb
mov
cli
and
mov
xor
lret
ds
sahf
inc
sbbb
jl
add
dec
adc
or
and
xchg
push
fsubrs
jl
and
mov
sub
mov
xchg
mov
shll
dec
sbb
rcrl
ret
xchg
or
imul
dec
sbb
dec
dec
mov
cmp
mov
popl
cltd
jno
and
pop
loopne
pushw
decl
add
push
je
jnp
movsb
fisubrl
pop
loop
sahf
add
std
mov
stos
jmp
in
pop
sub
push
add
fcoml
lock
cmp
dec
in
fdivs
ret
cmp
xchg
mov
add
sti
jno
aad
aaa
outsl
mov
lock
xor
lahf
fsubrl
push
out
lock
jne
or
mov
mov
sbb
jmp
mov
mov
mov
fnstsw
jne
or
fstpl
sub
pop
lret
ret
jl
into
and
repz
cs
pop
and
cwtl
pop
cs
pusha
sbb
in
dec
and
xor
pop
inc
cli
pop
stc
nop
cmc
sbb
incb
scas
into
leave
mov
sbb
dec
jb
xor
sub
in
lahf
sbb
nop
pop
fisubl
jo
push
mov
push
cmpl
popa
pop
repnz
js
enter
mov
testb
daa
ds
mov
xchg
insb
cld
or
insl
inc
cmpsb
lret
mov
jns
and
in
test
in
sbb
mov
or
sub
push
loope
inc
mov
fildll
adc
mov
lret
push
dec
iret
push
rol
lcall
mov
pusha
fsubl
test
xchg
mov
xchg
pop
push
inc
cld
mov
imul
testb
gs
lods
js
jb
sbb
gs
mov
push
jo
cmp
push
ds
nop
pop
mov
jmp
popa
dec
adc
aaa
call
cld
clc
and
lahf
and
sti
js
rol
adc
orl
cltd
mov
pop
rclb
loopne
or
lods
and
and
pop
jne
jnp
xchg
dec
mov
gs
call
mov
repnz
cli
inc
or
leave
dec
out
add
sbb
mov
inc
arpl
aaa
adc
push
setle
dec
mov
push
ljmp
mov
and
xor
pop
rcrb
push
icebp
in
lods
push
shl
dec
jmp
pushf
push
insl
ret
adc
xchg
mov
pop
cmp
inc
jno
cmp
mov
notl
stos
and
xchg
pushl
shll
and
rclb
divl
cmp
cmc
dec
sub
imul
nop
fiaddl
loop
mov
jecxz
xchg
xchg
cli
int
pushf
mov
ss
sub
mov
pop
pop
incb
imul
fucom
mov
insl
jo
in
add
mov
test
xor
incb
in
adc
insb
cmpsb
out
mov
test
pusha
mov
fistl
mov
mov
jae
mov
push
dec
in
jp
mov
leave
xchg
xlat
loop
test
pushf
ja
push
xorl
xchg
rclb
aam
es
jle
pop
leave
das
cmp
mov
insb
ret
aas
add
loope
sub
xchg
inc
inc
xchg
out
sti
mov
stos
aas
cmp
fistpl
mov
pusha
jp
fcompl
jne
mov
nop
xor
mov
ds
lret
or
fildl
cmp
jns
pop
in
pop
ss
stc
pushf
insl
push
sbb
sbb
pop
mov
inc
pop
jae
adc
adc
pop
xchg
ljmp
call
out
xchg
adc
fsubl
mov
jge
jne
xchg
jns
test
clc
setae
add
loopew
in
mov
loop
int
adc
inc
mov
clc
mov
stos
inc
lcall
xchg
add
push
xchg
iret
sahf
sub
popf
inc
stos
lods
push
dec
adc
movsb
mov
out
ret
mov
jnp
and
data16
xor
inc
push
cmp
dec
cli
mov
mov
sbb
push
xchg
dec
jg
jns
clc
jae
dec
aad
push
aam
mov
cs
sub
fistl
cmp
inc
sub
addr16
ret
inc
cmpsb
or
adc
fstp
int
ds
call
rcl
xchg
add
or
pusha
fcompl
ja
aaa
mov
sti
push
mov
dec
and
and
cltd
pop
pop
notl
inc
xor
dec
push
out
or
insl
sub
jb
cmpsl
mov
adc
enter
pusha
xchg
sbb
mov
iret
ljmp
in
xorl
push
dec
pop
inc
jo
and
jge
pop
xchg
int3
inc
stos
stos
out
adc
testb
or
inc
mov
xor
mov
rorl
dec
push
fildl
aas
ss
in
add
mov
cmp
out
out
bound
movsb
inc
pop
cmp
out
in
push
into
cld
addr16
loop
lds
aaa
cs
outsl
cmpsb
mov
and
shlb
rcll
and
popf
gs
into
clc
jg
and
cli
roll
das
sub
sti
or
xor
fbstp
repnz
xchg
xchg
jns
add
aam
incl
or
pop
lds
mov
hlt
push
mov
ss
out
push
stos
insl
add
cs
jg
fsubrp
imul
lahf
testb
mov
xor
shlb
jge
push
inc
lret
cmp
data16
adc
imul
adc
mov
shlb
pop
xor
fstpl
cmp
push
or
lds
ss
xor
adc
pop
icebp
push
loop
jnp
sbb
je
in
add
and
pop
cmp
sub
or
push
dec
andb
lret
inc
ficomps
push
push
outsl
and
stos
bound
enter
jle
sbb
or
add
sub
add
ja
stc
jecxz
jmp
cmc
mov
add
aam
push
fcomip
arpl
pop
jle
jnp
mov
stos
cs
mov
and
sub
mov
jb
xorl
push
mov
mov
and
lods
adc
dec
ffreep
dec
fsts
in
adc
sbbb
lods
pop
movsb
jo
out
adc
pop
aas
sbb
loopne
insb
lock
sti
mov
js
xor
repnz
mov
adc
fisttps
dec
push
cwtl
and
inc
pop
fsub
addr16
repnz
scas
push
mov
add
lock
jbe
insl
into
jno
jmp
or
add
push
imul
cmp
pop
dec
out
sahf
mov
call
pop
in
pop
pop
cmp
insl
dec
fnstsw
pop
push
add
pop
inc
inc
sub
or
jae
into
jg
lods
xchg
loopne
sub
hlt
cwtl
loop
aas
in
bound
push
or
sbbb
out
icebp
jl
iret
sub
jg
mull
movl
cmpl
xor
dec
cmp
and
sub
pop
sub
dec
jmp
or
fbstp
jno
mov
xchg
mov
cmp
fcoms
cmp
cli
rorb
sbb
inc
int3
sbb
clc
jae
pop
repz
push
jbe
addr16
mov
ja
add
loopne
je
icebp
jecxz,pn
sub
dec
fists
adcl
stos
push
xor
andl
lahf
xor
clc
popf
ljmp
cmp
scas
push
pop
movsl
pop
test
jnp
mov
and
in
stos
shll
aaa
popa
stc
imul
aad
and
repz
outsl
mov
xlat
out
scas
inc
dec
push
mov
and
inc
add
mov
and
out
fcmovu
dec
fst
test
inc
pusha
bound
or
and
xor
dec
mov
pop
lret
out
push
and
adc
xor
sub
loope
dec
xlat
cmp
push
mov
addb
in
sub
cmp
decl
out
jmp
push
add
sbb
and
push
mov
push
aas
sahf
push
rcrb
sub
cs
lods
inc
jge
push
add
mov
mov
jle
pop
sub
out
mov
call
or
jae
ja
imul
sbb
add
push
lods
rcrb
pop
jge
dec
dec
sbb
jg
pop
xchg
mov
orl
out
lret
daa
iret
rclb
out
pop
and
add
fsubrs
inc
jbe
hlt
int
xor
pusha
loop
icebp
sub
pop
jae
bound
aam
sub
dec
aas
xor
push
pop
dec
pop
test
mov
lahf
ljmp
push
fs
dec
sbb
stos
pop
sub
cltd
cmc
loopne
jp
lret
dec
out
sbb
imul
mov
and
mov
lcall
jbe
inc
mov
repnz
push
mov
and
sbb
add
and
mov
fadd
les
jg
add
insb
lret
and
lea
lods
sbb
push
int3
lods
shr
sub
gs
andl
jg
aam
push
shlb
sti
push
lods
dec
adc
push
das
sub
ljmp
cmp
int
pop
repnz
mov
cli
push
std
addr16
jb
jg
jp
push
pushf
cmc
mov
aad
ret
imull
loopne
xorb
mov
lods
push
inc
lock
or
dec
mov
ss
cmp
ret
mov
insl
or
stc
bound
bound
and
inc
cmp
sub
sbb
jns
xchg
xor
fwait
dec
add
adc
aam
js
in
inc
jno
cmc
inc
insb
mov
or
out
clc
andb
inc
mov
lds
stos
jge
sahf
lods
or
js
sub
jg
imul
jge
lods
icebp
pop
xchg
adc
shll
or
mov
cmc
pop
fiadds
mov
test
jns
into
push
inc
or
shrl
jl
jno
push
jecxz
push
mov
stos
xor
cmp
bts
fucom
and
gs
fsub
stos
sarl
int
std
mov
lds
fistpll
adc
pop
in
push
mov
lods
dec
into
add
pushf
cmpl
and
loopne
pop
mov
fisubs
sub
jb
scas
bound
stos
ss
das
sub
shlb
rolb
push
jmp
cli
mov
je
sbb
rcll
cmpsb
fnstsw
mov
stos
jecxz
dec
pop
xor
sbb
jl
fstps
out
xchg
add
pop
cltd
jg
pop
pop
xchg
popf
aas
ds
cmpsl
cmp
sub
cld
ljmp
mov
and
cli
aad
add
mov
jo
fwait
push
scas
into
mov
pop
pusha
jae
in
cmp
mov
adc
sbb
mov
add
cmp
call
or
daa
jno
jg
xor
shlb
scas
and
ss
roll
in
fidivrs
lods
xor
jbe
mov
and
sub
fildll
mov
and
insb
lcall
mov
xor
jecxz
mov
sarl
sbb
repz
cmp
scas
test
testl
mov
addr16
popf
adc
fwait
mov
add
shl
mov
mov
dec
scas
or
mov
jne
or
xchg
jecxz
pop
push
or
mov
cmp
mov
and
lods
jl
or
scas
cwtl
inc
sub
mov
pop
push
pop
inc
lret
pop
mov
push
or
mov
or
sub
and
mov
adc
pop
inc
or
stos
sub
and
outsl
aas
loope
pusha
arpl
loop
popa
and
out
mov
sub
push
cmp
cmp
cs
daa
add
lods
enter
cmp
push
pop
roll
add
pop
push
insb
sub
leave
and
add
pop
xchg
jle
lods
out
sub
push
scas
push
dec
outsl
jmp
loope
mov
leave
mov
daa
mov
scas
or
mov
cmp
cs
int3
dec
cwtl
push
fdivr
rorb
mov
jbe
stos
into
mov
enter
test
adc
sbb
scas
push
fistps
mov
push
add
mov
push
or
xchg
bound
ret
ja
push
hlt
inc
cmp
pop
fs
push
pop
in
movb
pop
or
adcl
mov
int
adc
push
popa
xor
jge
out
sub
cmc
push
mov
jle
mov
insb
dec
clc
add
stc
xchg
mov
mov
inc
adc
loopne
xor
xor
mov
xor
inc
test
mov
add
sub
lret
cmpl
lgs
push
cmp
cmpsb
lock
outsl
mov
push
pop
test
mov
js
ret
sub
dec
dec
push
jge
movsl
orb
inc
xchg
pop
cltd
jnp
xor
jecxz
mov
hlt
and
fadds
inc
cmp
add
pop
mov
js
clc
imull
ja
sti
sub
cmp
xchg
pop
jecxz
mov
and
sbb
push
add
cmp
dec
cwtl
je
xchg
loop
add
aad
dec
jnp
ret
add
pop
jl
imul
add
add
jmp
aam
popa
pop
nop
shlb
daa
fildl
push
addr16
int3
stos
sti
mov
sbb
pusha
jmp
shlb
loope
xchg
std
sbbl
lahf
jge
dec
or
idivb
aad
daa
jo
adc
shl
xchg
test
jnp
lock
dec
lret
pop
ret
pop
loope
aad
jb
mov
loopne
or
pop
inc
repnz
and
sar
pop
ficomps
pop
scas
mov
or
xor
pushf
sbb
xor
pusha
sti
lods
addr16
push
inc
jae
stos
cmpsl
loope
cmp
or
fildl
jno
fisubrs
sub
nop
mov
test
add
push
pop
jns
or
jl
icebp
lret
outsb
pop
inc
or
mov
dec
das
jmp
stos
imul
add
lret
dec
mov
push
rorb
int3
inc
push
sbb
xchg
lahf
mov
mov
call
inc
aaa
stc
inc
adc
hlt
lcall
loope
adc
xchg
mov
push
adc
out
and
shll
movsl
fsubl
mov
cmp
adc
dec
jmp
repnz
out
push
aaa
jbe
fadds
and
xchg
arpl
incb
sti
dec
popa
adc
loope
adcl
divb
push
add
mov
pop
xor
push
jns
add
test
pop
push
cmp
mov
jbe
push
in
cli
xchg
sbb
or
inc
pop
or
lods
out
aad
sub
sar
enter
in
or
and
mov
add
xor
cmpsb
ja
push
mov
loop
xchg
mov
push
nop
mov
fdivrl
or
push
dec
aad
test
push
fcmovnbe
enter
sbb
lret
mov
xor
mov
mov
pushf
xor
outsb
fwait
loop
in
insb
push
cmp
pop
aam
rcrl
and
jns
adc
jp
cmp
scas
xchg
cmp
test
mov
or
add
xor
or
bound
and
pop
andb
cld
jecxz
negl
xchg
adc
je
mov
pop
push
scas
mov
scas
jnp
jne
push
push
pop
mov
sbb
fdivs
mov
in
mov
fs
add
imul
add
rcll
cltd
inc
sub
cmpsl
test
out
and
xchg
addr16
in
xchg
repz
mov
xchg
mov
fs
outsl
ficomps
push
and
ljmp
mov
enter
out
jl
nop
adc
aam
fldenv
aas
jle
pop
push
enter
mov
mov
xor
mov
mov
rcr
js
out
mov
out
sbbb
out
xchg
pop
push
sti
push
mov
mov
rolb
hlt
xchg
mov
dec
push
xchg
or
pusha
rorl
movsl
dec
mov
mov
mov
adc
test
popf
mov
ret
and
jl
aam
or
fcomp
es
xchg
cmc
lahf
into
and
enter
addr16
lea
or
add
push
jbe
lret
aaa
mov
jecxz
adc
lea
adc
outsl
sbb
mov
lret
mov
and
xor
je
or
mov
in
push
cli
outsl
out
cltd
sbb
sub
out
adc
lcall
xor
hlt
xchg
mov
enter
arpl
sub
mov
into
idiv
ja
and
ret
out
pusha
outsl
aam
repnz
outsl
orb
cmp
xchg
and
loopne
je
icebp
or
cld
jmp
or
sbb
test
or
mov
mov
pop
fisttpl
pop
aas
call
adc
movsb
arpl
mov
popf
sub
dec
arpl
jl
inc
test
mov
mov
inc
or
sti
pop
movsl
hlt
cmpsl
jl
xor
test
bound
jecxz
out
movsl
mov
fcomip
pop
mov
adc
int3
cwtl
sub
imul
pop
mov
sahf
aas
jb
cmp
jne
iret
and
insl
insl
jp
mov
dec
mov
xor
push
jmp
ja
lcall
add
shl
in
add
int3
lahf
insl
sub
rcrb
clc
lock
xor
out
outsb
jae
hlt
negb
lods
sbbl
out
stc
pop
add
push
fistl
pop
neg
int
enter
push
adc
sbb
bound
jg
mov
ret
mov
pop
cwtl
pop
add
loop
test
in
jmp
push
test
sbb
pushl
jnp
popa
push
xchg
pop
imul
pop
enter
adc
cmp
mov
bound
and
adc
mov
jb
clc
das
inc
fwait
inc
stc
jbe
pusha
in
add
sbb
or
in
lret
jae
fnstsw
add
orb
push
cli
shlb
jge
cmc
jb
inc
inc
add
jle
pop
xor
or
or
push
enter
mov
or
lods
pop
push
pop
cmp
lods
sub
mov
jp
mov
pop
mov
popw
sbb
shrl
sbb
daa
dec
dec
lods
outsl
outsl
pop
pop
inc
add
adc
push
mov
in
aas
dec
cmp
mov
fsub
adc
sbbb
push
pop
push
inc
xor
in
fs
xchg
movsl
std
inc
add
fdivr
mov
sub
das
dec
ret
jp
es
lret
xchg
es
mov
add
out
test
push
push
mov
cmpsb
push
rolb
inc
call
fists
inc
lret
rcll
arpl
mov
adc
loop
mov
cld
cmpsl
push
dec
add
cmp
mov
shl
jle
call
sub
pop
enter
sti
jge
int3
shrl
mov
or
mov
mov
add
out
ficoml
repnz
dec
xchg
lahf
testl
sahf
jecxz
js
sub
popa
rcl
or
adc
nop
adc
pop
sub
adc
in
fwait
mov
inc
inc
mov
loopne
mov
fmul
sti
in
stos
stos
roll
pop
mov
ficoms
pop
sbb
call
mov
adc
int
add
sbb
or
hlt
les
call
sub
cmp
test
push
jmp
int3
int
pop
or
aas
cmp
mov
xor
test
sub
jmp
inc
xor
dec
test
mov
adc
into
test
mov
repnz
mov
test
pop
aam
push
adc
ja
pop
cmp
or
js
inc
sti
mov
in
sub
test
repnz
push
inc
in
dec
cmp
lea
and
vandps
jae
pop
or
jg
mov
fdiv
mov
ret
into
ljmp
xor
pushf
sbb
adc
out
in
rolb
daa
fst
in
movsb
push
fnsave
mov
or
int3
pop
xchg
lcall
adc
pusha
sbbl
cmp
cmpsl
iret
mov
sarb
ret
movsb
insl
test
lods
ljmp
es
inc
loopne
vandps
das
mov
gs
mov
ss
and
icebp
pop
loopne
in
mov
mov
cld
add
mov
push
add
pushf
jp
mov
popf
and
in
out
adc
and
cmp
icebp
shl
rolb
sub
jge
lods
repnz
sti
ss
fwait
repnz
xlat
sub
insb
pop
sbb
push
mov
int
sub
adcb
mov
mov
xchg
add
push
mov
add
dec
lea
sub
sbb
jne
sub
fnstenv
ret
in
adc
xchg
add
popa
adc
ror
fcomip
mov
int3
lock
iret
mov
call
or
mov
hlt
cld
mov
xchg
lea
mov
push
cmp
imul
mov
rcl
aaa
pushf
jae
sbb
fldpi
sbb
dec
in
insl
fistl
jp
ja
and
sarl
xchg
cmp
mov
jno
stc
mov
xchg
xchg
push
icebp
and
cli
addr16
pop
dec
fs
sbb
add
pushf
ror
pop
mov
ss
fdivrs
add
and
mov
movsb
or
std
cmp
mov
pop
les
out
aam
sub
das
pop
sub
xchg
and
xchg
int
mov
andb
pop
adc
mov
and
push
pop
pop
pop
xchg
test
aad
pop
das
jae
fwait
sbb
xor
lcall
push
into
jp
test
and
arpl
pop
inc
stc
imul
sbb
test
push
mov
adc
jns
push
movsl
stos
ja
mov
xchg
mov
cmpsb
faddl
lret
cmp
xor
sbb
jg
mov
js
inc
int
loop
decb
pop
push
sarl
pop
adc
jno
adc
sbb
and
cmp
pop
fidivl
push
mov
fistl
scas
pop
cmp
push
push
lahf
shlb
pop
movsb
sub
dec
add
jge
pop
out
aas
jle
cs
lock
xchg
dec
sub
shl
fnstenv
xor
cmp
mov
mov
mov
pop
test
xchg
mov
jbe
xor
xor
push
cwtl
dec
mov
mov
dec
mov
sub
cmp
shl
in
test
decb
mov
add
mov
push
xor
pop
mov
xchg
and
jns
add
fimull
lret
test
add
xchg
arpl
xchg
repnz
push
jge
mov
mov
xor
out
lcall
je
ds
inc
sti
test
iret
mov
clc
es
mov
sbb
mov
mov
shrb
jne
push
cmpsb
testl
repz
lret
push
mov
or
testl
xchg
aad
xor
lahf
add
cmpsb
inc
adc
fiaddl
test
mov
outsl
xor
jae
xchg
inc
pushf
jecxz
mov
mov
push
push
clc
xchg
pushf
mov
das
xchg
mov
lahf
ss
out
xor
mov
and
mov
adc
fwait
inc
and
jmp
clc
mov
gs
or
rol
mov
inc
pop
addr16
adc
xor
fists
in
xlat
jecxz
mov
cs
or
clc
fdivl
rcr
pop
jne
lcall
out
xlat
jp
or
or
cmpsb
cmp
lock
movsb
in
stos
mov
cmp
xor
fimuls
pop
pop
pusha
or
lea
lret
ret
mov
sbb
sub
test
fdivs
adc
nop
xchg
call
cmp
push
push
ret
ret
int
push
insl
icebp
lea
lock
adc
out
insl
push
mov
insb
mov
cmp
dec
add
pop
inc
in
mov
pop
movsl
mov
xchg
xchg
out
cld
cs
lret
xor
incl
pop
cwtl
out
jg
gs
not
adcl
bound
ss
or
insl
lahf
in
jmp
dec
call
push
ret
jge
mov
cmp
jmp
aam
inc
iret
mov
pop
hlt
push
inc
inc
xor
adc
jnp
incb
arpl
shrl
sub
cmp
cld
add
or
jp
pop
jno
add
xchg
int
or
gs
fcoms
mov
in
imul
gs
cmp
aad
jnp
leave
stc
xchg
fsts
inc
fs
clc
mov
repnz
inc
jmp
inc
loopne
add
cwtl
jmp
jb
test
movsl
push
dec
mov
add
leave
shrl
aad
cld
ret
nop
sti
sbbb
ss
test
add
jmp
xchg
adc
les
jae
sub
xor
jns
mov
mov
or
test
xchg
pop
mov
xchg
cmp
call
inc
gs
sbb
cli
dec
push
xor
mov
mov
sub
jno
enter
xchg
pushf
insb
dec
cmpsb
popa
sub
ljmp
xchg
xor
rclb
es
jb
mov
testl
adc
dec
mov
mov
mulps
fmuls
push
add
bound
loope
int
jno
lcall
arpl
fimull
push
int
nop
jle
sbb
repz
xchg
sub
cmp
mov
push
and
out
push
stos
dec
pop
or
pushf
iret
cli
pushf
insb
je
cltd
call
jo
cmp
mov
loopne
ret
inc
mov
inc
lods
fsubs
sbb
mov
mov
addr16
push
out
out
aam
pop
int
je
xlat
mov
out
addr16
stos
and
pop
inc
cmpsb
cmc
fisubrl
cld
cmpsb
xchg
push
ss
mov
out
rorl
pop
mov
das
mov
jbe
mov
ret
test
sub
pop
int3
addr16
jl
and
mov
and
fsubrs
jae
dec
pop
sarl
push
push
adc
inc
in
mov
add
jg
jae
mov
mov
test
int3
cs
xchg
or
xor
add
push
sub
adcl
dec
stos
aas
pop
repnz
mov
mov
pop
popa
dec
ret
add
xchg
mov
adc
add
outsb
mov
or
arpl
sahf
sbb
aas
or
call
repz
inc
imul
shlb
mov
cwtl
lcall
stc
xor
cltd
shr
mov
gs
lret
mov
pop
lock
jmp
clc
fisubs
xchg
push
inc
cmp
jno
adc
cmpsl
insl
sbb
inc
mov
std
push
push
mov
std
dec
ljmp
test
push
test
std
repnz
ja
jns
xchg
or
xor
subl
fptan
xchg
aad
add
cld
incb
pop
or
leave
mov
fldt
lret
dec
test
popa
push
push
fisttps
xlat
pop
mov
xchg
pop
mov
psubsw
in
sub
mov
sub
adc
insl
pop
inc
popa
les
jne
sub
jae
pop
pop
fimuls
stos
out
sbb
sub
pop
mov
and
xchg
das
pusha
addl
fdivrs
sub
push
xor
adc
push
or
daa
cwtl
fcoml
sub
daa
sub
add
es
mov
xorl
pop
and
divb
ret
mov
divps
mov
repz
stc
adc
adc
sub
clc
faddl
jg
sub
push
dec
mov
mov
xchg
sarb
ficoml
cmp
out
or
push
cmpsl
fwait
or
pop
xor
push
ds
cmpsl
add
fistl
push
adc
mov
aam
jbe
cs
xchg
fwait
clc
pop
jnp
xchg
xchg
fisubs
fiaddl
aas
mov
fistl
mov
add
mov
pop
mov
jno
mov
dec
popa
xchg
ror
pushf
sub
test
fidivl
jecxz
ficompl
out
test
stc
dec
and
cmp
sbbl
ds
jno
jno
sub
repnz
dec
push
nop
lahf
push
jbe
into
jo
sarb
xchg
and
xstore-rng
cmpsl
andl
pop
dec
dec
hlt
dec
add
lock
std
mov
dec
jmp
mov
sub
rorl
mov
or
push
sub
stos
insb
mov
test
push
cmpb
pop
push
jns
fbld
sub
addr16
pusha
xchg
push
int3
data16
mov
mov
mov
imul
mov
out
or
pop
mov
or
pop
in
and
adc
rdpmc
and
and
mov
cmp
rorb
and
xchg
dec
mov
int
pushf
test
icebp
mov
jo
inc
mov
xor
pop
cmp
aad
in
lcall
addr16
shll
xchg
sub
nop
adc
xor
add
cwtl
sub
or
jmp
push
cmp
int3
jbe
mov
adc
pop
sbb
push
or
and
cmpsb
xchg
xor
popf
std
pop
jle
push
call
rcrl
sbb
cld
lods
fs
insl
test
jp
in
lds
wrmsr
push
inc
or
sbb
mov
pusha
pop
test
movsb
js
loope
rol
les
jne
push
sbb
xchg
and
adc
dec
push
lds
into
imul
mov
push
pop
jle
xor
repnz
scas
int
xchg
in
pop
and
clc
lret
xchg
imul
imulb
sahf
lds
sbb
mov
push
mov
add
mov
xchg
mov
lcall
and
std
icebp
adc
dec
jne
sbb
enter
sub
lods
lcall
jge
iret
shll
mov
movb
loopne
movsl
cs
test
sbb
fsts
fst
push
mov
xchg
orl
jle
jge
jl
shll
cs
jnp
add
mov
sbb
sub
xor
movsl
mov
lds
mov
push
outsl
push
into
jl
test
cld
xchg
and
aad
sahf
mov
xorl
and
pop
ss
inc
jns
mov
xor
sub
push
and
test
mov
inc
mov
sbb
mov
mov
inc
test
push
test
insl
call
push
adc
add
scas
and
insb
bound
pop
push
cmp
mov
push
test
fimull
test
mov
adc
cli
mov
cmp
dec
stos
jp
mov
xchg
pop
in
push
scas
and
dec
std
inc
and
mov
ja
rcrb
add
lea
lahf
jo
mov
cmp
lret
es
or
push
cmp
sbb
inc
repz
xchg
pop
mov
pop
push
push
inc
mov
std
sub
dec
jecxz
sub
rcrl
cli
inc
sub
pop
xor
jge
inc
enter
test
mov
sbb
out
nop
jge
adcl
and
xor
or
popf
pusha
mov
sahf
inc
jae
xor
sub
fldt
icebp
jle
mov
xchg
mov
fbld
inc
movsb
ja
pop
mov
sub
inc
je
push
hlt
jno
shrb
clc
outsl
insb
push
sbb
inc
fcomp
outsb
cmp
int3
dec
loopne
add
test
rcrl
mov
push
cmc
mov
fistl
int
jge
andb
sbb
inc
push
pop
sub
cmp
insb
ret
outsb
insb
gs
into
scas
mov
ret
dec
adc
lcall
mov
loope
pop
mov
or
jo
outsb
sbbb
lcall
mov
jp
mov
and
xor
pop
pop
mov
mov
sbb
jge
push
xor
iret
inc
icebp
scas
aad
les
push
inc
call
scas
mov
xchg
jle
lea
lret
repz
adc
add
pushf
add
dec
das
xor
popf
jp
xor
pop
inc
test
leave
xchg
push
and
call
imul
dec
out
shlb
dec
xchg
pop
sbb
lcall
mov
into
ficoms
xor
push
cmp
dec
cmp
imul
das
xchg
cmp
xchg
cmc
sbb
add
jne
lcall
push
dec
jbe
cli
or
movsb
dec
cld
pop
pop
jp,pn
int3
xor
repnz
adc
jg
imull
mov
add
or
std
rcl
dec
nop
sub
push
sbb
inc
ljmp
das
mov
cmp
xchg
jns
mov
out
sbb
lods
lods
mov
push
test
sbb
jmp
push
pop
mov
aad
outsl
imul
or
pop
sbb
idivl
inc
test
sarl
cmp
test
push
sbb
sub
sahf
cld
cmp
push
jmp
mov
xlat
pop
adc
fcoms
das
push
cmp
movsb
or
jae
aam
nop
sti
add
add
mov
mov
jge
in
push
arpl
xchg
lcall
js
dec
ret
jns
xor
xor
aad
stc
mov
mov
lcall
fstpt
pop
mov
pop
inc
sahf
fistl
jge
dec
cmp
xor
mov
mov
xchg
pop
xchg
outsb
jbe
aaa
mov
fsubs
push
dec
les
daa
xor
mov
loopne
int3
iret
cltd
in
rclb
mov
ret
ja
outsb
pop
push
jg
and
rorl
push
adc
push
in
popf
sbb
aas
push
jp
xchg
fwait
rol
in
adc
js
pop
cmp
aam
push
mov
stos
cld
int3
mov
sbb
es
pop
roll
inc
add
and
mov
popa
std
add
push
inc
mov
pop
ss
ja
data16
xchg
xlat
clc
sbb
add
sub
dec
xchg
inc
movsl
cmp
mov
outsl
out
jle
mov
int
ljmp
repz
cmp
push
cltd
pop
sahf
push
add
xchg
sbb
and
cmp
and
adc
popa
or
and
and
sarl
imul
add
in
adc
sub
mov
pusha
mov
sti
lock
jns
sbb
lret
mov
movsl
jle
addr16
lret
dec
sub
test
lds
dec
scas
rolb
stos
aam
push
adc
stc
mov
test
inc
leave
loope
xor
mov
cld
ljmp
and
push
fnstcw
cmp
call
int3
mov
mov
mov
pop
and
dec
sbb
xchg
xchg
in
lds
push
into
cmpsl
cmp
jecxz
mov
hlt
addr16
jle
push
cmp
add
inc
add
cmp
push
ljmp
addb
sbbl
mov
hlt
test
mov
sbb
pop
in
insl
lock
cmp
mov
adc
ffreep
or
push
lea
fldenv
jle
xchg
shlb
cmp
mov
aas
in
bound
fildl
sbb
fs
cmpsb
test
mov
lea
imul
fsubl
pop
mov
fadds
push
popf
imul
xor
cmp
cwtl
out
xor
xor
out
lret
sbb
cld
xchg
rorl
sbb
cmp
rorl
jl
cmp
sbb
push
addr16
sub
movsl
int
out
mov
mov
int
daa
xchg
xchg
xchg
mov
das
xor
jl
sahf
mov
scas
xchg
push
lcall
mov
ja
lods
cmpsl
push
xchg
out
sti
lahf
gs
jbe
push
xor
addb
imul
clc
nop
orb
pop
js
aad
das
movsb
daa
jle
mov
push
push
dec
mov
mov
insl
repz
les
mov
mov
adc
and
add
inc
das
fsubs
jnp
push
fcmovne
ret
inc
insl
push
dec
loop
dec
mov
lea
adc
adc
mov
insl
stos
int3
pushf
push
pop
pop
outsl
shlw
add
ljmp
push
jmp
xchg
cmpb
iret
mov
mov
inc
xor
ficoml
in
sub
test
mov
test
arpl
gs
pop
mov
cli
ljmp
mov
outsb
hlt
repnz
push
xchg
xor
jns
jo
int
pop
adc
sbb
pop
leave
js
cmpsl
xor
jp
rcr
in
fisttpll
jae
push
shr
sub
shl
lahf
movsb
adc
xor
adc
mov
aad
pop
out
aas
popf
inc
insl
test
mov
es
filds
les
out
es
inc
js
jge
std
aas
pop
inc
mov
inc
cwtl
dec
mov
scas
je
iret
xor
mov
xor
pushf
sbb
add
out
adc
cmp
push
xchg
xor
push
and
in
test
test
in
jg
sbb
cmp
jmp
aad
pop
xor
scas
push
pop
jne
scas
lcall
jne
xchg
or
in
inc
sbb
movsb
orl
sahf
inc
aam
push
push
dec
bound
xor
out
jp
pop
jns
fisttpl
sub
pop
mov
imul
pop
lock
enter
mov
and
js
mov
xchg
mov
stc
daa
call
inc
nop
test
into
xchg
add
ret
fiadds
add
rcr
ss
cld
sarb
popa
sbb
sbb
pop
stos
and
arpl
pusha
sub
jmp
leave
sahf
add
inc
aam
mov
icebp
test
mov
testb
jno
movsb
mulb
xor
mov
add
mov
insb
jle
pop
lahf
xor
xchg
sbbl
mov
fsubrs
jb
jns
aas
in
jmp
lds
in
dec
fildl
push
add
push
mov
and
mov
mov
fstl
flds
icebp
scas
mov
pop
repnz
sbb
adc
push
xchg
sbb
cmpsb
mov
ror
xor
in
add
xor
mov
or
cmp
sbb
ljmp
pop
adc
insb
sarb
pusha
scas
or
jb
loope
mov
into
aaa
andl
or
xor
fmuls
js
loope
mov
fmull
add
push
in
es
out
daa
out
nop
imul
mov
call
lcall
jns
fiadds
push
scas
or
loop
das
fmuls
mov
nop
inc
pop
loope
lret
jecxz
or
rcrl
sahf
dec
pop
or
mov
lds
repz
mov
addr16
lret
cmpsb
or
pop
out
sub
xchg
jle
outsb
test
add
inc
pop
jmp
aas
ds
pop
mov
js
hlt
mov
mov
and
fildll
and
lcall
or
loop
mov
adc
xor
int3
in
mov
out
iret
jbe
adc
push
sub
data16
lret
push
jl
repz
push
push
arpl
stos
add
cwtl
bnd
jae
push
lods
lock
sub
pop
xchg
insl
pop
sahf
stos
xchg
das
aad
hlt
mov
popa
sbb
push
ss
adc
xchg
sbb
in
aad
push
mov
pop
mov
addr16
fcomp
movsb
lahf
mov
xchg
ficomps
add
loopne
and
add
aas
xor
fsubs
fstpt
sub
enter
out
lret
mov
jns
sbb
fists
fadd
out
scas
or
mov
mov
decb
adc
jle
mov
push
cmp
jnp
pop
lods
sub
ret
addr16
mov
cmp
adc
mov
enter
in
and
shlb
pop
push
add
sub
outsl
jl
and
outsb
shrl
jp
outsb
insl
mov
outsl
sbb
xchg
pop
mov
add
adc
lret
test
enter
sahf
cmp
cmc
and
mov
adc
out
dec
sub
or
jae
add
cmpsl
out
into
adc
mov
xchg
mov
dec
rclb
ds
test
dec
xchg
movsb
test
push
sub
ret
mov
mov
nop
push
pushf
scas
mov
cmpsl
push
or
gs
adc
aas
cld
dec
arpl
lcall
fstpl
scas
dec
sahf
test
adcb
lcall
sbb
stos
push
adc
xchg
cs
or
lcall
loop
sub
sub
xchg
xor
jb
push
inc
jp
punpckldq
pusha
xchg
xchg
pop
pop
mov
cmp
adc
sbb
cld
dec
lock
dec
add
es
in
data16
xchg
inc
xorl
inc
xchg
or
pop
and
mov
aaa
xchg
sti
fcmovnb
test
pop
xchg
push
das
mov
out
test
pop
iret
sti
sub
ljmp
inc
cmp
mov
filds
cmpsl
lahf
cwtl
bound
mov
push
pop
add
stos
inc
xchg
xchg
jmp
popa
dec
or
in
xchg
pusha
imul
and
out
jo
push
icebp
fstpl
mov
pop
mov
and
inc
add
into
into
mov
fadds
inc
jge
add
pop
xchg
cs
push
xchg
out
in
je
jmp
jne
gs
lret
les
fsubr
pop
jecxz
add
lret
sete
loope
pop
cmp
test
pushf
dec
pop
popa
daa
fadds
cs
sbb
ds
adc
add
ror
mov
push
sahf
cmpsl
bswap
xor
lcall
std
sbb
das
out
dec
call
fdivrl
xchg
fwait
pop
out
sahf
in
sbb
pusha
scas
cltd
adc
and
and
fsubr
push
add
sbb
sti
push
sar
add
std
mov
ljmp
xor
mov
or
xchg
out
frstor
adc
shrl
sub
mov
sub
xor
arpl
fnstsw
fldl
lahf
into
push
push
sbb
daa
adc
in
xor
test
fmuls
xor
and
mov
fldcw
jge
cmp
or
mov
mov
test
pop
sahf
test
sub
xchg
mov
cmp
xchg
aad
or
shrb
jno
adc
cmp
inc
inc
movsb
aas
mov
loop
rcr
mov
xchg
std
fst
xchg
mov
out
in
pop
jae
inc
and
in
and
jp
cmp
ja
xchg
cmp
mov
lret
or
mov
icebp
out
xchg
ss
aas
mov
shrl
aam
fwait
xchg
sahf
add
scas
lock
and
int
jo
push
push
adc
mov
fidivrl
dec
mov
xchg
adc
test
icebp
push
dec
sbb
add
into
rorl
jo
inc
ret
inc
mov
ret
lahf
jecxz
mov
shll
fbstp
push
adc
push
movsl
cwtl
lea
adc
xchg
sub
push
sti
mov
ficomps
aad
enter
mov
in
rcrl
and
aaa
cmp
sub
and
push
or
ss
mov
jnp
pop
ret
cmp
sbb
call
adcl
dec
addr16
cs
xchg
mov
cmpsl
or
sbb
orl
dec
daa
inc
out
test
lea
popa
mulb
dec
jo
sbb
nop
into
add
push
jo
mov
out
imul
jecxz
lahf
movsb
mov
pop
out
pushf
scas
mov
xor
arpl
xchg
push
frstor
bound
push
hlt
mov
jne
jae
loop
mov
outsl
xor
adc
jmp
out
ret
jmp
lods
pop
jmp
lahf
sbb
push
aas
fldenv
xchg
mov
loopne
inc
sbb
fiadds
jg
mov
std
xor
in
insl
ret
xor
jns
in
lret
gs
pop
or
xchg
pop
fwait
jb
shlb
cmpsl
push
rcrb
out
leave
adc
and
outsl
dec
adc
push
scas
pop
inc
ficompl
xlat
fs
add
std
pop
insb
lods
lods
enter
bswap
jo
inc
lods
dec
das
mov
js
les
je
cmp
dec
leave
push
xchg
or
hlt
push
push
movb
lock
xor
ret
cs
cmp
out
push
inc
pop
sbb
mov
rorl
mov
pusha
insb
jae
inc
or
inc
test
mov
cltd
jae
jl
xor
aad
inc
iret
inc
pop
out
mov
dec
pop
mov
and
sbb
pop
ret
insl
mov
testb
push
lods
add
xadd
adc
mov
cwtl
ret
fmuls
xchg
mov
in
rcll
fidivs
int3
adc
inc
test
mov
popf
je
adc
lods
arpl
mov
fstpt
jl
adc
dec
outsb
lret
pop
test
out
and
int3
loop
jbe
add
test
fsubrp
adc
inc
jl
cmc
shrb
lahf
mov
imul
loopne
sbb
xchg
xor
nop
push
dec
dec
push
gs
sub
pop
mov
in
mov
add
push
or
or
xchg
xor
in
outsl
xchg
movsb
es
in
sub
lods
inc
mov
cmp
mov
mov
adc
rcl
test
mov
sbb
addr16
jl
mov
pushf
xchg
add
in
outsb
cmc
sbb
outsb
rcr
sti
jge
imul
int3
in
adc
add
mov
fnstenv
test
subb
sub
push
xor
pop
pop
jb
test
pop
cs
daa
in
sbb
inc
push
mov
lahf
cmp
imull
mov
leave
sub
or
add
inc
mov
xchg
cmp
out
mov
in
movsl
daa
sub
pop
add
mov
mov
mov
lock
gs
push
into
jmp
xor
aam
mov
fisttpll
mov
test
add
fwait
jb
cmp
sub
xchg
jge
test
mov
cmp
enter
call
push
mov
inc
xor
sbb
push
mov
push
jg
mov
icebp
pop
aaa
inc
mov
push
xlat
push
rclb
adc
inc
cld
out
stos
sbb
pop
std
in
cmc
dec
cmpsb
in
or
cs
addr16
adc
inc
stos
scas
call
mov
mov
cmp
rorl
movsl
out
mov
and
pop
fnstenv
mov
mov
xchg
loopne
mov
cmpsb
cmp
adcb
sbb
adc
and
cli
xor
sbb
into
xchg
add
push
add
mov
cmpsl
sbb
jne
clc
movsl
lcall
xchg
outsl
cmp
sti
rcl
jno
mov
sub
and
dec
push
out
ljmp
add
push
dec
inc
inc
or
in
shll
test
sbb
cmp
stc
enter
and
xchg
outsb
xchg
in
push
stos
mov
imul
dec
sbb
fadd
jg
jo
push
js
pop
inc
mov
out
adcb
cld
pop
lcall
jecxz
test
pop
xchg
sbb
subb
pop
xchg
push
or
ss
xchg
add
cwtl
fwait
xor
and
mov
push
cli
pop
xchg
sbb
or
les
pop
adc
call
clc
add
push
jnp
stc
test
inc
xchg
inc
sbb
icebp
test
fdivp
and
sahf
movsl
orb
sti
push
mov
dec
pusha
mov
inc
out
js
push
icebp
rcrb
arpl
jns
jp
mov
ljmp
or
loopne
jno
aam
mov
pop
pop
mov
jecxz
xor
fimuls
sbb
ja
cmp
cmpsl
add
gs
int3
mov
inc
es
sub
mov
rcll
push
pop
iret
mov
mov
mov
lret
or
popf
fcoms
leave
dec
add
ja
ret
sbb
and
sbb
rorb
sbb
push
aad
pop
out
ss
pusha
jo
add
movsb
inc
sub
jbe
pop
sbb
fcmovnbe
les
inc
lret
mov
ficompl
into
pop
pop
inc
xor
push
xor
nop
lret
sbb
scas
je
jno,pt
je
sbb
jne
push
pushf
repnz
xor
jae
icebp
dec
lahf
lock
repz
add
lds
cs
shll
mov
sbb
rcll
dec
fstps
cli
in
push
push
sbb
dec
scas
xor
xor
enter
pushf
dec
sbb
dec
adc
pop
xor
xor
dec
stos
mov
adc
push
out
push
iret
mov
cmp
out
popf
in
push
dec
shll
loopne
cmp
jmp
mov
ss
push
fistpll
incl
ss
mov
xor
popa
jge
mov
jo
inc
sbb
inc
loop
imul
sbb
push
std
jae
add
mov
sub
mov
mov
lcall
sbb
xor
or
jle
cmpsb
xor
bound
je
push
ljmp
pop
mov
imul
hlt
lods
fisubl
das
int3
jmp
mov
push
sbb
push
filds
pushf
repz
mov
jbe
or
push
inc
push
jmp
fwait
sbb
roll
push
pop
sbb
adc
and
cmpsb
daa
loopne
and
push
pop
add
add
lods
or
xchg
cmp
shr
or
pop
lock
imulb
lea
dec
mov
fcom
mov
dec
jnp
fistpll
or
outsl
ljmp
sub
lret
out
push
mov
adc
jmp
mov
pop
dec
mov
dec
or
fnstenv
add
mov
xor
adc
je
ss
imul
out
rolb
loop
sbb
mov
pop
mov
popf
sbbb
lret
es
loop
clc
mov
and
js
xor
dec
pop
jae
dec
lock
imul
inc
mov
out
pop
xchg
iret
inc
insl
inc
daa
sub
int
lods
fwait
add
in
adcb
adc
xchg
jo
mov
arpl
fmull
push
jnp
and
inc
adc
cs
std
popa
cmpsl
mov
lret
jb
sbb
push
lea
pop
lods
jmp
inc
in
sbb
add
mov
fistpl
add
cmpsb
jae
cwtl
add
je,pn
dec
aas
outsl
xchg
jb
ds
sbb
add
mov
cmpsb
adc
loope
lret
cmpsb
inc
add
nop
jg
aas
aas
mov
push
cmp
jle
test
adcl
addr16
dec
mov
and
popf
and
out
data16
data16
xchg
loope
add
mov
loope
add
test
pushf
mov
mov
iret
add
mov
xor
or
sub
xchg
out
shll
push
sub
shlb
pop
leave
sub
sub
call
pop
pop
push
lahf
cmc
mov
push
dec
daa
sub
into
pop
insl
in
push
jecxz
push
and
iret
jecxz
cmp
dec
rorl
mov
cmp
stc
icebp
imul
dec
fwait
repz
inc
or
inc
rcll
or
sub
outsb
add
inc
scas
xchg
rcrl
push
add
outsl
sti
xchg
insb
jnp
jg
jp
ds
test
adc
fbstp
or
addl
repz
cmp
out
cli
push
fs
int
subl
mul
cmpsb
push
gs
jl
test
addr16
int
adc
decl
int3
push
jp
inc
adc
mov
inc
cmc
pop
aaa
add
iret
jae
jmp
leave
daa
mov
loopne
xor
iret
or
adc
adc
inc
insl
ret
lret
dec
scas
mov
cmc
outsl
xor
addr16
adc
mov
cmpsl
hlt
divl
pop
addr16
inc
movsb
in
push
cmp
test
sub
jnp
sbb
xor
push
jb
push
adc
in
test
out
sar
inc
mov
jle
fs
lods
inc
mov
in
imul
mov
pop
fdivrs
lds
enter
add
sbb
scas
mov
ficompl
scas
daa
sub
loope
mov
mov
bound
movsb
inc
xor
push
out
hlt
iret
cmp
ret
idivb
xchg
jle
fdivp
lods
push
scas
pop
cmp
ret
shrl
mov
cmp
rdmsr
inc
push
std
sbb
cli
movsb
call
xor
jbe
dec
and
mov
add
fwait
in
or
imul
aas
fs
dec
imul
insb
cmp
rorl
xrelease
fnstsw
dec
pop
bound
iret
cmpb
and
mov
repnz
lahf
je
push
out
nop
ljmp
push
int
ja
fildll
xor
enter
xor
in
sbb
xchg
mov
mov
iret
andb
lods
jmp
cmp
adc
inc
into
shlb
jg
ret
xchg
mov
rcr
jge
shl
pop
xor
cmpb
hlt
xchg
sbb
pop
js
jge
dec
jo
push
jecxz
pop
inc
pusha
dec
aad
subb
xlat
das
xorb
lock
scas
das
mov
out
mov
call
mov
sub
mov
inc
inc
das
jns
xchg
jns
mov
addr16
cld
xor
repz
aad
sbb
push
add
std
push
cmp
push
aas
aad
int
inc
push
xor
rcrl
or
sbb
mov
mov
in
pop
dec
popf
lea
jecxz
mov
sbb
mov
mov
aad
xchg
mov
stos
je
cs
stc
or
dec
jle
inc
adc
adc
cmpsb
pop
sbb
xchg
xchg
nop
hlt
cmp
cld
bound
cmp
out
mov
or
jns
inc
inc
rcll
insl
in
cs
orl
mov
mov
or
xor
add
int3
inc
push
insb
lds
shlb
inc
fldenv
cmp
adcl
cmp
mov
jae
and
pop
mov
sub
lods
mov
popa
and
dec
add
jg
sbb
cmp
xchg
dec
stos
and
cmpb
in
mov
xchg
stc
cmp
mov
mov
aas
pop
jmp
mov
outsb
das
mov
sub
pop
xor
jo
and
and
adc
scas
dec
sarb
xlat
inc
sarb
mov
adc
repnz
pop
jmp
or
push
xor
and
fidivrs
xchg
sub
dec
jle
pop
or
inc
dec
and
pop
inc
jge
mov
xor
push
jmp
pop
xchg
out
push
mov
add
push
mov
out
int
dec
popa
pop
push
jb
pop
mov
jne
orb
push
outsb
popw
jecxz
mov
dec
jp
xchg
or
mov
cmpsl
xor
xchg
jns
inc
int3
xor
mov
push
mov
xchg
inc
sub
cmpsl
xchg
je
cmc
xchg
xor
and
testl
js
mov
mov
mov
fs
ljmp
adc
and
cmpsb
out
stos
sub
scas
push
xchg
inc
cld
enter
push
mov
inc
js
inc
mov
mov
idivb
jecxz
dec
sbb
pop
push
jg
sub
pop
loope
sbb
sbb
mov
inc
shrb
jg
add
mov
dec
rcrb
in
adc
sti
imul
or
fsubs
sub
xchg
xchg
cli
add
or
fnstenv
incb
outsl
scas
mov
push
xchg
fstpt
xchg
and
adc
cltd
adc
rclb
jbe
add
les
adc
jne
jmp
or
jno
hlt
int
mov
inc
fisubrs
xor
inc
inc
dec
fdiv
movsl
jno
adc
into
mov
pop
sub
mov
mov
push
stos
xchg
lods
sbbb
popf
rclb
push
push
mov
movsl
in
xchg
shll
in
xchg
sbb
daa
sbb
cmp
pop
outsb
mov
in
jg
fs
mov
dec
ljmp
cmc
imul
leave
pop
test
sbb
and
fistpll
jecxz
inc
mov
enter
inc
mov
pusha
insb
inc
mov
js
mov
lcall
aad
push
mov
lret
jbe
aas
hlt
pop
inc
dec
push
lahf
fbld
das
movl
mov
or
call
adcl
xlat
xchg
cmp
fstps
imul
stc
pop
mov
clc
sub
ret
add
pop
xchg
and
out
inc
xchg
cmp
loopne
pop
xchg
push
aas
sub
lods
add
mov
mov
xor
lods
xchg
adc
xor
jmp
and
je
cmpsl
cmp
cmc
std
insb
pop
fwait
nop
mov
push
cs
sbb
movsb
mov
jecxz
lods
or
shld
cmp
sahf
push
shr
and
into
ficoms
pusha
jp
pop
mov
cmp
pop
jecxz
mov
sub
out
rcr
add
clc
jg
push
mov
sub
cmp
daa
pop
cmp
lods
or
sub
lods
ja
adc
push
adc
push
loopne
and
mov
mov
sarl
cmp
loop
enter
and
iret
mov
mov
negl
stos
in
stos
gs
mov
cmp
push
out
jle
movsb
mov
loope
popa
pop
fcmovu
mov
lcall
mov
inc
dec
mov
scas
icebp
aaa
inc
pop
movl
add
mov
sub
add
xor
sbb
mov
repz
xor
dec
jmp
sahf
dec
fisttps
xchg
cmp
push
mov
xchg
push
xchg
aas
ret
fsubrs
movsb
xor
pop
fwait
xchg
stc
add
ljmp
pop
cmovs
dec
dec
push
cmp
in
ds
sbb
fimuls
fisubrs
dec
daa
les
cmp
push
push
jo
into
les
inc
xchg
pop
xchg
pop
mov
mov
aad
xchg
add
insl
ds
push
js
mov
cmp
mov
or
lods
shll
pop
mov
or
mov
jmp
sbb
push
cmp
sub
mov
aaa
mov
sbb
fstpl
idivl
add
sar
mov
cmp
xorb
js
add
fnstenv
push
lods
ret
sbb
in
out
xor
test
jne
fcomps
mov
std
xor
cmp
cmp
imul
adc
dec
nop
xchg
add
mov
cmp
xchg
or
lret
in
cmp
inc
dec
adc
xor
subb
std
lock
scas
sbb
scas
mov
imul
mul
xchg
xchg
jp
les
sti
sahf
sti
adc
push
jecxz
inc
adc
pop
test
jle
or
test
in
mov
fidivrs
or
jb
icebp
add
hlt
jb
repnz
push
bound
gs
out
jne
push
jg
vunpcklps
movsl
and
xor
nop
test
cmpsl
rorb
stos
mov
mull
and
shl
and
into
and
pop
push
pop
adc
jmp
sahf
or
lea
jnp
push
ficoml
sbb
pop
push
lds
push
jge
shl
das
mov
lahf
xor
scas
xlat
test
dec
sbb
shlb
pop
push
jl
out
xor
push
jmp
sub
dec
push
je
std
xor
insl
pop
cmp
sbb
mov
mov
fisubl
or
jle
loop
mov
pop
push
mov
inc
das
int3
mov
inc
outsl
mov
dec
adc
sub
jle
dec
pop
js
addr16
sbb
jl
cmp
lret
enter
sahf
mov
cmp
orb
inc
mov
enter
lds
pusha
pop
cmpsb
int3
in
add
jb
lcall
gs
shrb
mov
lret
cmc
mov
push
push
scas
pop
test
adc
sbb
jnp
in
inc
and
pop
push
mov
add
add
mov
mov
shl
mov
shlb
xor
add
imul
fisubrl
and
jnp
lds
cmp
fnsave
fcomi
mov
lahf
test
out
mov
loope
inc
js
mov
jmp
fdivrp
andb
in
sarl
xchg
fcmove
sub
and
inc
xchg
sub
out
mov
rcr
out
mov
inc
fstpl
std
xchg
jmp
cwtl
fiaddl
fbld
xchg
push
sub
mov
xchg
xorb
testb
out
addb
lds
call
cmp
lcall
jae
loope
jmp
xor
sbb
jno
popf
mov
je
or
mov
mov
andb
shrl
mov
fildll
cmp
aaa
movsl
mov
aaa
xchg
xchg
push
pop
mov
cmp
mov
add
adc
cmp
mov
pop
and
aad
flds
push
mov
mov
addr16
xchg
fisubrl
inc
loope
push
dec
and
fidivrl
mov
repnz
push
mov
fists
lahf
or
fstps
push
pop
test
push
or
jae
loop
adc
pop
loopne
in
mov
mov
and
sub
out
dec
inc
sbb
jo
dec
dec
sbb
std
into
push
add
xchg
loopne
jl
adc
inc
inc
in
add
stos
int
fdiv
jno
pop
jmp
add
cmpl
push
imul
pop
xchg
xor
push
mov
jae
les
shrl
rorl
xlat
insl
out
dec
and
das
test
bound
and
pusha
xchg
jp
out
test
xor
jl
lock
or
pop
jecxz
ret
and
xchg
pop
fs
push
fsubl
dec
fwait
xor
pop
pop
jp
pop
xchg
xor
cmp
sub
insl
and
mov
cli
xchg
xor
pop
sbb
dec
stos
lods
mov
das
leave
lret
pop
cmp
pop
cli
icebp
hlt
stc
adc
gs
xor
aas
andl
int
dec
fwait
pusha
dec
out
popa
arpl
jnp
aaa
jns
shll
lcall
out
xor
push
shll
notl
cltd
mov
popf
mov
aad
pop
mov
cmp
test
jle
insl
cmp
mov
iret
aas
xchg
jmp
dec
cmp
lock
mov
fisttpl
frstor
aas
xor
aam
add
jecxz
jbe
mov
sbb
shrd
add
add
fidivl
sbb
pop
enter
sub
in
sub
push
jg
movsl
clc
jmp
fcom
inc
adc
fcoms
pop
mov
icebp
push
repz
or
outsb
ret
ljmp
and
ret
push
es
es
movsl
inc
bound
icebp
add
test
insl
pop
insl
and
ret
mov
jb
jecxz
ljmp
jnp
jo
pop
and
inc
push
je
lods
xchg
addb
pop
sti
cmp
sub
into
cmp
xchg
cwtl
sub
sarl
movsl
fisubrl
iret
pop
jo
mov
cmc
aas
xchg
cwtl
xchg
imul
jp
mov
outsb
jge
pusha
ret
mov
icebp
mov
cli
icebp
insl
cwtl
and
jb
rcrb
jle
fsubl
lret
enter
adc
fisttpl
jbe
loopne
ljmp
stos
add
mov
aam
mov
sbb
jge
jmp
fsubs
adc
cmp
adcb
push
shrl
fs
dec
push
push
test
dec
fwait
xchg
mov
or
pop
mov
hlt
sbb
jmp
sbbb
daa
inc
dec
inc
jmp
ret
lock
test
cmp
fwait
aaa
stc
lods
je
je
sbb
or
lret
add
aas
int3
fdivrl
ret
xchg
jbe
lcall
rcrb
cmp
pusha
inc
jl
outsb
pop
push
sub
into
mov
out
push
lret
cltd
out
fstps
rcrl
xor
push
mov
rcl
test
xor
jo
insb
jge
lahf
shl
mov
and
mov
cld
cmpsl
sub
adc
pop
mov
dec
mov
xorl
and
out
push
adc
xchg
push
push
stc
stos
movsb
mov
mov
jne
sbb
xchg
sti
lock
popf
mov
inc
loopne
inc
sub
sub
mov
xchg
idivl
mov
aam
mov
mov
mov
das
mov
jmp
sub
add
in
fisubs
dec
xor
aam
inc
int
out
test
incb
insb
or
int
inc
idivl
dec
jle
rcrb
ja
scas
xchg
out
cmp
or
push
jle
jne
loop
sti
insb
xor
in
sbb
add
dec
fidivs
stc
mov
pop
inc
inc
enter
movb
repz
push
mov
fs
shl
and
adc
adc
stos
mov
push
xchg
lcall
xchg
sbb
sbb
rolb
add
and
push
mov
repnz
xchg
std
imull
jns
pop
cmp
mov
nop
cmpsl
popa
or
hlt
sbb
je
mov
rcrb
lea
out
pushf
inc
xchg
inc
jl
ss
inc
int3
or
mov
sti
movsl
test
fucomi
xchg
sub
cltd
xchg
xchg
push
jmp
ret
push
loopne
daa
xor
in
dec
rcrl
jnp
lahf
cli
imul
push
and
les
xchg
js
sahf
shrl
pop
scas
push
mov
sbb
mov
mov
cmp
mov
icebp
leave
dec
sub
cmp
icebp
push
pop
xchg
mov
aam
ss
mov
aad
ret
or
inc
pop
fisubl
jge
stos
jnp
int
movsl
sub
fsts
sub
cmp
jbe
fcoml
jb
dec
sbb
lock
xchg
cmp
lods
insl
or
rorl
popa
fcomip
in
sahf
mov
and
jb
filds
or
pop
push
imul
aas
jb
mov
sbb
sarb
adc
lods
out
std
push
push
mov
adc
jno
add
jb
xchg
into
movl
push
adc
std
packuswb
mov
adc
jnp
cmp
or
inc
jmp
lret
lock
test
and
ljmp
push
fs
cmp
mov
or
outsl
xor
mov
xchg
adc
and
aaa
outsl
bswap
out
sbb
addl
or
push
inc
inc
movsb
lods
xor
loope
out
xchg
mov
pop
in
in
sub
jns
dec
xor
dec
gs
dec
pop
xchg
mov
aaa
idivl
inc
xchg
or
shll
mov
push
arpl
iret
movsb
push
icebp
bound
imul
scas
popa
push
push
lahf
cmp
pop
gs
cmpsl
imul
fwait
fs
inc
jnp
jbe
imul
rorl
jge
imul
mov
xor
jne
inc
hlt
xchg
jecxz
sti
inc
ss
mov
xor
add
dec
mov
cmpsb
pop
xchg
and
mov
loope
test
cmpsb
pusha
lds
pop
xor
fcomi
mov
sub
cmp
xlat
fisubrl
sub
mov
jnp
loop
das
add
not
xchg
jg
sbb
adc
iret
movsl
aas
mov
lret
push
mov
jmp
test
cmpsb
mov
xor
mov
xor
mov
decl
test
mov
roll
mov
incb
fwait
mov
inc
es
jb
shrb
mov
test
mov
clts
movsb
or
fldenv
sub
test
xor
ss
cmpsb
sbb
mov
das
push
rclb
fucom
xor
aam
pop
sub
outsl
das
sti
and
inc
clc
je
test
jmp
cwtl
adc
int3
stos
repz
fadds
push
lahf
stos
movsl
arpl
clc
dec
int
pop
loope
sub
sub
cltd
loop,pt
add
test
xor
push
into
mov
sbb
lahf
fildl
popf
sub
mov
out
push
mov
sub
test
mov
jno
ret
and
dec
jae
ret
fidivs
cs
loopne
mov
ret
pop
xor
js
dec
in
cmp
cld
or
jns
les
mov
lcall
lea
pusha
cltd
cld
push
xchg
addr16
mov
mov
pushf
mov
pop
nop
fs
push
push
jne
repnz
ds
adc
ret
cwtl
mov
xor
push
aas
enter
and
sub
mov
push
mov
nop
popa
dec
xor
sub
sub
inc
push
mov
xor
xlat
inc
mov
pop
repz
and
ss
inc
in
stos
dec
cmp
mov
jg
inc
out
lret
mov
sub
push
fiadds
movzwl
inc
push
xchg
and
in
adc
dec
mov
jae
xchg
or
nop
das
aam
hlt
inc
xor
sub
xlat
test
mov
mov
or
shll
out
and
jle
sub
imul
pop
enter
in
adcl
lret
adc
sub
sti
push
int
leave
pop
jae
shrl
in
and
mov
or
sub
shll
or
jo
and
rcrb
xor
inc
js
xor
push
and
sbb
mov
es
cmc
jo
cmp
mov
mov
jbe
scas
icebp
mov
das
mov
cld
mov
fucomip
add
ror
into
jmp
cmp
push
pushf
push
test
cwtl
xchg
cld
pop
shrb
in
pop
mov
into
outsl
mov
xchg
test
jnp
es
getsec
xchg
adc
sbb
cld
jne
div
ret
repz
xchg
push
and
adc
cmpsl
and
call
jb
pop
mov
hlt
dec
shlb
dec
mov
sbb
adc
xchg
pop
fwait
pmaxsw
lret
scas
add
mov
xchg
clc
inc
fs
mov
sub
imul
outsb
cmp
nop
dec
mov
xor
fucomp
or
dec
testb
lods
cmp
adc
ret
jmp
add
in
call
cmp
adc
enter
mov
dec
lods
inc
sub
hlt
and
rcrl
cmp
in
fsubs
push
test
fcmovbe
shlb
ficompl
push
dec
lds
mov
ficomps
jno
xor
mov
mov
jo
adc
aad
js
jmp
jl
cmpsb
sbb
or
imul
jge
repz
xor
xchg
popf
loope
inc
aam
cmp
pop
lcall
mov
outsb
xchg
das
mov
ljmp
mov
outsl
insb
data16
out
loopne
adc
jp
adc
jl
adc
mov
sub
add
subb
lcall
cmc
xor
ds
push
mov
dec
stc
iret
pop
inc
xchg
mov
testl
mov
jle
mov
sahf
push
adc
ret
negb
mov
lock
mov
xchg
gs
aaa
mov
or
test
xor
adc
add
mov
jl
xor
test
movsb
mov
and
xchg
pop
or
and
fdivrs
test
loope
shll
mov
in
in
mov
idivb
cltd
out
inc
hlt
shl
pop
adc
adc
inc
fisubs
addl
sub
sub
and
es
mov
jns
int
cmp
rcll
inc
int
mov
sbb
in
cmp
arpl
cmp
mov
cmp
push
inc
lret
dec
mov
push
fsubr
inc
dec
mov
push
insb
cmpsb
mov
in
add
mov
push
and
int3
loop
inc
adc
mov
push
in
mov
and
jo
lea
or
js
xchg
jmp
or
ret
setbe
push
call
or
sub
movsl
lret
mov
ret
mov
inc
pop
add
mov
aas
push
fmull
push
mov
call
scas
fisubs
push
pop
in
xor
and
out
push
add
insb
pop
jge
fsub
sub
lods
push
popf
in
adc
dec
push
add
imul
mov
fmuls
repnz
sub
mov
xchg
gs
loopne
fs
int
push
cwtl
fs
pop
add
lret
xchg
lods
mov
lahf
jns
lcall
repnz
mov
mov
add
mov
mov
scas
je
es
js
or
mov
cli
sub
imul
sti
and
out
je
cmp
add
sbb
push
mov
imul
movsb
into
lea
daa
xchg
out
push
shr
scas
inc
xlat
data16
mov
iret
test
mov
mov
push
or
xor
pop
ds
rcl
xorl
pop
in
xchg
pop
sub
xchg
cmp
xchg
adc
pop
jno
jne
jl
mov
out
gs
in
mov
sub
addb
pop
mov
sar
incb
pop
shlb
jbe
sbb
test
in
jmp
xchg
pop
es
ljmp
cmp
xor
cmp
ret
push
mov
enter
jne
add
jo
rorl
push
les
push
mov
out
adc
pop
sub
inc
icebp
sarb
push
cmpsb
and
lahf
mov
or
inc
sbb
fstpt
dec
or
jl
jae
js
sbb
gs
cli
iret
mov
sahf
xchg
pop
pushf
movb
mov
repz
sbb
add
lcall
fsubl
xor
mov
enter
insl
iret
inc
js
cmpsl
hlt
es
out
sub
mov
filds
mov
pusha
inc
inc
pop
loopne
insb
push
and
push
in
aaa
test
pusha
hlt
gs
jge
inc
cmp
loope
jl
mov
dec
push
and
les
stc
mov
int
pop
mov
push
mov
inc
xchg
stc
sub
or
mov
leave
jmp
push
mov
pop
sub
cld
lock
lods
test
iret
pop
imul
idivb
in
mov
xorb
dec
lahf
arpl
xchg
fstps
cmp
jae
push
add
xor
xlat
imul
test
into
pop
xchg
jbe
inc
xchg
push
lods
ret
loop
add
pushf
clc
std
lcall
dec
dec
gs
sbb
lcall
dec
lcall
dec
pop
into
jecxz
sbb
cmpl
ljmp
in
pop
das
in
sbb
cmpsl
xchg
inc
ljmp
adc
adc
addr16
jecxz
sub
pusha
mov
push
fdivr
pop
jns
cmp
sbb
mov
xorb
cmp
stos
daa
mov
dec
sub
lcall
mov
icebp
mov
adc
flds
jl
fs
mov
fadds
jns
js
outsl
aad
sti
xchg
ja
sub
scas
out
jmp
fsubl
xor
or
xchg
rorb
jmp
adc
push
popl
push
in
pushf
out
jl
fldl
xchg
scas
js
mov
lcall
cmp
sti
push
ja
fwait
roll
cmc
imul
bound
sarb
dec
inc
sbb
sbb
adc
jecxz
data16
insb
pop
inc
mov
fisubrs
jl
mov
je
movsb
call
mov
cmp
int3
cmpb
jecxz
jnp
adc
add
mov
mov
xchg
mov
sbb
iret
xchg
ja
movsl
cmp
mov
and
dec
and
pop
push
fdivrp
dec
repnz
push
xchg
adc
out
out
and
sbb
test
push
and
aas
jo,pn
cmpsb
pop
popa
sahf
or
jo
pop
imul
push
daa
xor
ss
jle
xchg
arpl
push
data16
pushf
fisubs
je
or
mov
movsl
gs
lfs
pop
sub
xchg
shrb
xchg
jno
gs
inc
addr16
mov
xor
and
push
leave
arpl
jp
inc
inc
fwait
xor
jae
mov
jo
lock
in
or
cmpsl
int3
sub
adc
push
mov
lea
fisubrs
clc
es
pop
shlb
mov
rcrl
sub
cmpsb
enter
jns
mov
push
push
lret
test
sti
loopne
push
mov
dec
mov
mov
or
sbb
addr16
iret
add
adc
xchg
loop
mov
adc
lret
rcl
addb
inc
sub
arpl
and
and
cmpsb
in
pop
and
xchg
sbb
inc
shl
gs
add
pushf
nop
cmp
iret
jbe
mov
pop
into
repz
lods
pop
mov
lret
pop
pop
ret
xchg
psadbw
push
inc
ret
inc
divb
add
add
sbb
mov
clc
inc
mov
insl
pop
or
nop
jbe
pop
dec
mov
sub
jbe
cld
into
jno
dec
js
mov
rcll
sub
pop
push
aam
xchg
xchg
stc
fs
xlat
lret
mov
in
into
or
xchg
clc
mov
add
xchg
cmp
out
mov
adc
fdecstp
imul
mov
mov
jnp
xchg
jno
mov
mov
inc
cmpsb
lcall
xchg
add
ficomps
ja
push
dec
mov
adc
mov
mov
inc
add
adc
xchg
test
sbb
movsb
xlat
xchg
mov
dec
sub
mov
popf
scas
and
das
scas
pop
mov
or
fld
je
inc
lods
pop
push
dec
jns
movsb
popa
orb
add
inc
shll
sub
ljmp
sbb
loopne
pusha
je
adc
jecxz
push
inc
cmp
test
mov
add
outsl
loopne
add
mov
jg
dec
mov
pop
pop
js
fsubs
mov
pop
push
inc
testb
into
pop
out
fldt
pop
cs
jle
jbe
lret
push
lds
lahf
iret
jbe
pop
add
lds
and
jo
cmp
and
xchg
cs
pop
mov
pusha
and
pop
and
pop
sarl
loope
nop
inc
or
push
cmp
addl
add
iret
mov
out
cmp
xor
cmp
je
movntq
out
testb
aad
shrb
call
xor
icebp
mov
leave
out
mov
xor
sub
xchg
outsb
sbb
rcll
mov
mov
add
and
xor
int
aaa
stos
and
seta
xchg
push
xor
add
rolb
cld
loope
pusha
cld
je
out
icebp
mov
mov
jg
add
outsb
jnp
in
xchg
popa
jmp
adc
push
cs
pop
test
sbb
negl
inc
xchg
ret
inc
mov
pop
mov
xor
inc
repnz
xor
add
and
mov
js
sbb
jnp
xchg
lock
fwait
sub
shll
sti
mov
xor
les
mov
mov
push
cmpsl
adc
pop
test
lcall
add
mov
ret
out
cmp
push
aas
cmpsl
xor
shlb
or
stc
xchg
mov
movsb
daa
push
adcb
scas
clc
and
lods
push
or
cltd
sub
pop
mov
sahf
dec
ja
lods
mov
jp
push
in
mov
out
fdiv
adc
adc
dec
adc
or
bnd
lods
cmp
dec
cmp
arpl
mov
adc
and
mov
in
mov
xor
leave
lcall
mov
and
int3
push
fbld
cmp
adc
sti
and
adc
aad
xchg
xor
wrmsr
stos
insb
pop
sbb
mov
inc
clc
inc
push
pop
add
cmp
out
or
sbb
lret
ss
mov
xchg
cwtl
jmp
pushf
inc
mov
xor
sbb
mov
addl
sbb
push
pushf
movsb
lea
cmp
push
sub
xchg
loop
gs
stc
pop
mulb
jns
mov
fcmovnu
mov
imul
push
enter
cmp
xchg
data16
sub
je
jmp
lods
jg
adc
jne
xchg
add
aaa
ljmp
push
sub
adcb
pop
cmpsl
nop
push
mov
cmp
negb
sub
out
pushf
mov
sahf
mov
into
inc
lahf
icebp
in
addl
or
or
lcall
adc
outsl
jge
cmp
stos
out
test
add
mov
push
inc
pop
mov
mov
xlat
fwait
les
test
data16
in
stos
push
mov
test
mov
jle
leave
add
and
scas
leave
in
shrl
adc
lcall
fisubs
dec
push
sub
test
push
fists
test
ds
mov
sub
adc
xchg
lds
dec
lds
pop
movsl
stos
mov
mov
insb
movsl
mov
push
clc
cmp
mov
jle
sub
jecxz
js
mov
dec
lods
push
lahf
cmp
or
pop
push
and
jns
xor
out
xor
xchg
popa
cwtl
xorl
mov
xlat
jle
in
push
test
dec
push
push
inc
test
sub
bound
cmp
fwait
js
lds
add
push
push
push
fcomps
jmp
or
setge
inc
sti
call
cmpl
mov
pop
nop
sbb
xor
fildl
rolb
sub
mov
je
addr16
pop
mov
adcb
pop
xor
and
add
fidivl
pop
inc
jp
mov
mov
aas
lods
or
push
lea
jns
sarl
mov
aaa
iret
ljmp
and
adc
ljmp
jne
cld
cs
andl
je
imul
sub
cmp
leave
or
imul
xor
cwtl
movl
xlat
loop
repz
cmp
dec
dec
sub
pop
pop
cwtl
lret
loopne
or
sti
lock
cmpsl
ss
push
int3
lahf
fwait
addl
or
clc
or
mov
xorb
mov
push
adc
test
ficoms
add
ret
add
lea
lcall
pop
mov
das
inc
or
out
sbb
push
dec
mov
imul
sub
pop
sbbb
mov
pop
pop
scas
cli
push
addl
test
fs
or
mov
cmc
bound
lods
and
aam
rcr
pop
xor
divl
lea
add
in
mov
ds
push
into
stc
cmc
xor
push
push
xchg
xor
mov
ja
pop
pop
xor
xor
push
lahf
add
pop
movsl
jo
jne
inc
mov
sub
mov
mov
test
rcrb
xchg
cmp
lock
negl
in
cld
adc
lea
fildl
dec
adcb
pop
fs
xor
cli
fwait
adc
push
or
insb
cmp
repz
out
lods
jnp
add
ljmp
pushf
test
mov
inc
push
sub
rcrl
jl
fisubrl
cmp
insb
pop
fidivs
jg
add
add
mov
dec
imul
sbb
add
or
cli
cmpsl
mov
ret
repz
fcmovnu
mov
sbb
int3
popf
dec
cmp
push
pusha
aaa
adc
adc
cli
cmp
mov
les
mov
sub
mov
shr
bound
cmpsl
or
in
sub
inc
mov
and
dec
pop
mov
cld
sbb
loop
lret
aam
shlb
rcll
mov
xor
popf
fsub
ljmp
outsb
mov
sarb
and
sahf
sub
adc
mov
lods
inc
and
jmp
or
xchg
fnsave
mov
jg
ret
jmp
inc
dec
push
dec
cmpsb
jno
sub
mov
add
js
in
jno
mov
dec
pop
out
std
push
iret
jmp
or
stos
adc
mov
lds
stc
push
out
data16
insb
sbb
mull
sub
add
movsl
jae
out
adcl
xchg
inc
sahf
push
test
push
and
lahf
je
adc
mov
jg
sub
aaa
xchg
inc
jne
xor
sbb
sbb
jmp
push
fiadds
push
jge
xor
lahf
cmp
cmp
in
push
xchg
lahf
mov
repnz
icebp
sub
fwait
adc
nop
mov
nop
iret
dec
insb
mov
dec
xor
mov
xor
pop
jecxz
popf
dec
outsl
sub
fistps
scas
pop
lahf
popf
xlat
jnp
pop
and
or
xor
cli
inc
mov
fwait
or
ficompl
imul
jae
in
push
in
xrstor
sbb
imul
push
mov
movsl
adc
mov
loopne
mov
subl
xchg
sahf
mov
cmpsl
adc
cwtl
add
push
outsl
into
pusha
mov
and
test
mov
xchg
imulb
lcall
xchg
jae
fistps
push
adc
mov
lods
cld
rcl
sub
cmc
mov
mov
dec
cmpsl
dec
xor
iret
mov
and
jl
mov
adc
lahf
inc
pop
jecxz
sub
or
sub
insl
xorl
lret
push
jl
stos
out
fs
inc
mov
push
mov
pop
jnp
sbb
leave
mov
push
pusha
pop
shll
ret
outsb
popf
cwtl
mov
mov
push
test
ss
jmp
mov
ss
jb
mov
sbb
mulps
cmp
sbb
pop
jne
into
push
xor
adc
or
push
jmp
xchg
lock
jle
xchg
pop
push
stc
nop
inc
addr16
xlat
push
ret
mov
push
popf
push
shrb
sub
push
rorl
push
loope
jns
push
jp
push
rolb
inc
cmpsl
pop
dec
adc
mov
pop
outsl
pop
mov
xchg
push
mov
mov
mov
les
cli
cmp
stos
dec
ljmp
imul
imul
andb
loopne
and
test
shlb
aas
xchg
jl
outsb
jae
xchg
inc
ja
cmp
shlb
mov
mov
je
sub
leave
or
outsl
movsb
int3
lcall
lahf
jae
cs
pop
jb
mov
and
lea
dec
fs
fwait
jg
push
pop
inc
add
jae
in
out
lea
or
ret
sub
add
or
cld
call
ja
mov
enter
rcrl
jecxz
dec
adc
test
xor
jnp
jle
loopne
dec
push
fadds
mov
sbb
adc
pop
push
add
cli
icebp
xlat
shll
roll
pop
push
xor
cmp
and
sbb
xor
ja
inc
xor
sarb
mov
cmpsl
sahf
pop
cs
cmp
xorb
inc
mov
add
inc
xor
popa
cmp
insl
or
cmp
cmp
pop
xchg
mov
pop
sub
test
pop
xchg
mov
aaa
lcall
adc
pop
sub
pop
in
in
stos
push
jae
mov
js
mov
jns
out
int
aaa
mov
aas
pop
hlt
dec
or
cld
sub
jle
mov
jecxz
mov
or
add
xchg
xor
fcomps
lea
add
sub
les
push
xchg
lea
or
ds
sub
inc
mov
xlat
adc
xor
out
and
aaa
mov
xor
pop
sbb
mov
dec
out
insl
xor
or
in
fcmovnb
dec
js
notb
clc
inc
adc
xchg
add
cmp
out
pop
cmp
sarl
sbb
mov
scas
add
mov
aas
mov
add
xor
pop
sbb
aaa
and
imul
shl
cwtl
pop
leave
outsb
pop
lret
movsb
or
arpl
push
mov
pop
inc
mov
pop
es
outsl
or
lret
xchg
jno
mov
add
aad
xchg
icebp
pop
gs
xchg
shlb
mov
data16
and
and
push
fs
imul
jnp
aam
mov
cmp
or
xor
xchg
mov
pop
push
call
mov
cli
je
push
int
cmpsb
or
imul
sti
lock
fstps
sbb
loope
inc
pusha
in
mov
jnp
insb
xchg
rcrb
add
mov
sub
pop
push
outsl
and
sub
lcall
mov
in
mov
dec
jmp
rol
xchg
sbbb
lock
ret
stos
dec
xchg
enter
pop
mov
mov
xor
xor
mov
push
pop
mov
negl
jmp
sub
pop
loopne
inc
ficomps
scas
cli
pop
lods
add
mov
push
xor
sbb
in
xor
out
sub
int
test
mov
add
popa
jg
stc
add
push
ljmp
mov
gs
int3
fucom
repz
xchg
dec
cmp
jne
mov
or
push
mov
fists
decb
cltd
aad
pop
shlb
push
sub
js
inc
movsb
mov
cmp
xchg
and
shll
cmc
mov
xabort
xchg
and
in
int3
pop
pop
lahf
push
push
mov
lea
mov
and
jnp
xchg
cmp
mov
notb
and
rorl
mov
out
ss
out
out
dec
addr16
cmc
es
adc
sbb
stos
dec
fiaddl
lods
iret
inc
cmp
aam
cmp
xchg
aad
lcall
jne
jo
add
insb
mov
add
loope
les
shlb
fdivr
stc
ret
icebp
push
sbb
rclb
popf
repnz
shll
jp
xor
repnz
inc
stc
leave
rclb
push
dec
mov
mov
fwait
mov
xor
repz
push
ret
mov
std
mov
in
lcall
test
fcoml
and
mov
in
and
jne
shrl
fstp
nop
add
nop
bnd
out
outsb
roll
scas
in
push
insb
clc
imulb
jne
lahf
add
ret
imul
aam
les
adc
ja
out
iret
loopne
mov
cmpsl
jecxz
stos
repz
in
or
fadd
js
jp
cld
add
in
or
fadds
sahf
test
dec
cltd
add
int3
aad
pop
int
push
inc
cmpsb
dec
lahf
mov
aas
pop
idivb
jbe
push
ret
mov
and
rorb
ret
imul
sub
ja
popf
cmp
gs
dec
insb
clc
sub
cld
ud0
cli
loop
or
cmpb
lret
and
repnz
ljmp
out
test
shl
addr16
jl
aad
mull
sti
popf
call
lahf
daa
mov
add
loop
mov
mov
add
adc
movsb
inc
pop
test
ds
xor
jge
loop
les
call
pop
jmp
loopne
sub
push
xor
mov
negl
es
xchg
dec
xor
mov
fcmove
in
lret
dec
aam
sbb
popa
mov
test
pop
xchg
test
inc
repz
outsl
mov
mov
push
xlat
out
cmp
pop
and
pop
inc
mov
out
and
nop
mov
stc
fdivr
mov
jmp
jle
dec
or
xchg
or
lds
imul
out
mov
pop
std
sub
dec
loopne
pop
test
mov
mov
subl
stos
mov
inc
sahf
sarb
jb
in
mov
xor
cmpsl
stos
sub
add
adc
and
or
pop
loopne
adc
dec
shll
stos
add
jae
cmp
loopne
add
mov
daa
inc
cmpsl
adc
in
adc
and
lret
ss
cmp
add
mov
push
das
in
fbstp
cmp
aam
sbb
stos
shl
cltd
sbb
inc
and
adc
and
ja
xor
jl
loopne
mov
hlt
sbb
in
adc
push
into
fcmovnu
xchg
outsl
jmp
enter
xchg
cs
lods
mov
mov
mov
shrb
shrl
ds
sbb
stc
xchg
sbb
adc
and
cs
in
pop
les
aas
or
mov
rorl
and
pop
fs
xchg
and
subb
test
movsl
mov
icebp
fdivs
aam
shlb
dec
loope
jno
outsb
push
push
ja
cmpsl
jno
mov
aas
scas
xor
mov
push
ret
and
test
fst
mov
punpcklbw
pusha
fsubrs
stc
sub
jno
movsb
outsl
or
mov
dec
fs
jp
adc
sub
iret
sub
mov
push
mov
xchg
dec
and
and
mov
and
pop
fisubrl
mov
lret
insb
pop
lcall
jp
push
sbbl
shlb
cmc
xchg
mov
mov
call
lds
dec
daa
or
out
mov
scas
movl
mov
push
sarb
sbb
lahf
sbb
jne
pop
push
mov
out
cld
xchg
or
adc
mov
jmp
mov
movsl
adc
xor
mov
fistpll
mov
adc
add
movsl
jae
push
jg
adc
fs
loopw
ds
adc
ja
xchg
push
xor
adc
adc
push
xor
pop
pop
and
dec
jo
out
xchg
mov
mov
xchg
dec
jl
aaa
and
jl
push
cmp
xchg
xchg
mov
adc
imul
add
and
lcall
fistpl
pop
out
adc
xor
xorl
sbb
loopne
mov
test
jo
adc
and
lea
pop
imul
cmpsb
sbb
into
in
xchg
test
int3
adc
test
mov
aad
lret
add
rcr
test
mov
and
mov
jmp
imul
fdivp
pop
pushl
pop
mov
push
xor
fistl
mov
ds
scas
scas
xchg
imul
das
cmp
adc
jl
lock
and
dec
sti
jl,pt
or
mov
pop
mov
std
mov
repz
orb
jnp
lds
gs
loope,pt
notb
dec
arpl
adc
pop
arpl
pop
rcr
and
xor
ja
test
and
rorl
aad
cli
jmp
es
leave
jns
shr
mov
pop
inc
enter
sub
pop
repz
loopne
fucompp
dec
rcl
jb
cmp
sbb
std
xchg
fistl
jns
mov
loop
fistpll
jmp
pop
push
jecxz
mov
idivb
dec
outsl
xchg
mov
or
arpl
xor
push
aas
jl
subb
stc
sti
mov
into
sub
idivb
cmp
mov
leave
jecxz
sarb
les
add
or
xor
into
xor
popf
lret
sahf
and
nop
jp
mov
or
cmp
push
push
mov
ret
and
adc
mov
bound
xchg
int3
sbb
sub
mov
mov
fwait
cmp
ret
loope
data16
mov
pop
or
test
dec
shrl
stos
cmpsb
jmp
lahf
xchg
scas
push
fldl
ds
fwait
mov
out
repnz
test
push
or
xchg
sbb
or
dec
in
mov
fstl
xchg
sti
icebp
leave
sahf
fs
stos
dec
sub
cmpsb
pop
xchg
fwait
push
dec
imul
adc
cli
or
pop
into
push
push
pop
adc
dec
push
iret
bound
dec
mov
adc
or
dec
fisubrs
mov
daa
xor
xlat
push
adc
cmp
jp
out
xchg
sub
lahf
subl
int
stos
push
js
notl
or
into
cld
stos
push
adc
add
sub
add
gs
jno
adc
out
lea
push
fcomps
and
cmc
leave
fwait
adc
andl
fmull
jge
jp
jp
xchg
das
inc
in
fisttpl
ret
jg
mov
test
jle
movsl
lret
jecxz
inc
les
sbb
imul
mov
mov
or
inc
add
xor
lea
and
mov
es
jo
adcb
popf
out
cmpsb
push
push
subb
out
mov
xorb
les
loopne
call
pop
stos
insl
sahf
hlt
out
cmp
ficomps
inc
jp
adc
lretw
cmpsl
mov
mov
push
push
pushw
fdivs
or
dec
addr16
xchg
adc
mov
out
and
shll
aad
arpl
lock
pop
pop
ss
adc
inc
mov
out
push
icebp
in
inc
into
out
enterw
scas
loope
and
push
sarb
push
sbb
mov
mull
cltd
jb
jb
dec
mov
mov
or
and
push
pop
add
nop
sbb
sub
sarl
jge
rorl
idivb
or
mov
lods
call
es
jge
cmc
pop
mov
pusha
pop
rcl
clc
fdivrs
das
adc
out
push
xchg
ss
sti
cmp
pop
imul
jmp
fcmove
leave
add
jge
jne
aad
insl
adc
jge
cmp
mov
push
outsb
sub
enter
les
and
out
fwait
gs
daa
shll
xchg
scas
pop
adc
leave
pop
xor
lock
push
mov
push
lret
je
jae
les
rcl
mov
pushf
sahf
sbb
cmp
mov
fwait
cmp
xor
pop
ljmp
jmp
mov
gs
jecxz
jae
aas
movsl
cmp
cmc
hlt
xchg
mov
dec
les
xchg
lcall
dec
jne
movsb
or
pop
popf
cmp
ret
test
ret
aaa
jl
fildl
cmp
cld
sbb
cmp
dec
sahf
ret
ret
mov
bound
stc
xchg
mov
xchg
xchg
and
rorb
outsl
or
js
out
inc
sti
mov
movsb
sub
xlat
fs
ja
mov
xchg
xchg
lods
fcomps
std
test
add
dec
in
in
call
xchg
int3
push
or
insl
in
faddp
test
andb
push
rol
or
or
fldcw
icebp
movsb
adc
fcomps
in
mov
push
sbb
loope
sub
outsl
mov
jne
xchg
xor
jns
imul
adc
jg
mov
add
sbbb
insl
adcb
push
xlat
int
rcr
cmp
pop
cmp
lret
sbb
add
cmpl
or
clc
gs
and
fisubrs
repz
imul
cmpsb
sub
mov
int3
xchg
and
push
icebp
das
daa
sbb
inc
cmp
push
or
outsl
shlb
outsl
ror
insb
mov
xlat
and
or
pushf
rolb
aaa
sub
dec
jo
inc
xchg
enter
addr16
fsubl
mov
loope
adc
in
icebp
dec
mov
pop
mov
leave
push
movsl
dec
mov
cmc
in
jp
ret
sti
xor
push
adc
lock
xorb
rcrl
sbb
cmp
cwtl
loope
pop
jbe
jge
inc
push
sbb
sahf
add
stos
cltd
fsub
mov
sbb
sub
cltd
movsl
pop
or
je
scas
xlat
mov
test
hlt
enter
xchg
pop
push
cmpsb
arpl
adc
cmp
mov
lea
in
rorl
int3
push
adc
shlb
sbb
les
stos
adc
fistpl
xchg
dec
inc
jp
fs
adc
adc
imul
cmpb
pop
cmp
shll
push
xor
fdivrl
cltd
jo
mov
sub
push
test
mov
mov
add
ja
sbb
mov
std
popa
inc
add
inc
sub
mov
mov
jo
sub
cmpsb
mov
fstps
mov
add
inc
repnz
shll
mov
arpl
push
adc
fs
add
mov
pusha
mov
fsubrl
sub
cwtl
jns
and
repnz
or
sub
pop
push
push
movsb
fdivl
dec
jl
add
adc
sub
pop
shlb
xchg
bnd
push
imul
sub
and
repz
popf
mov
adc
lods
xchg
push
mov
mov
addl
insb
sbb
negl
push
outsb
les
xchg
ret
loop
pusha
or
test
mov
leave
ja
push
sti
shlb
sub
popa
jne
add
scas
or
test
and
int
jae
imul
push
ret
xlat
imul
andl
jecxz
std
xchg
xlat
mov
lret
dec
popa
dec
sbb
clc
or
dec
xor
and
cwtl
mov
frstor
or
mov
and
and
and
pop
mov
stos
jbe
xlat
fbstp
aam
cmp
inc
jle
loopne
xor
xorl
adc
stos
pusha
ror
xchg
sarl
xchg
xchg
xchg
adc
mull
enter
icebp
lcall
into
inc
shll
cmc
jb
xor
xorl
les
mov
push
sub
add
repz
mov
repnz
pop
push
and
std
cmp
push
cmp
push
mulb
xchg
das
sub
scas
sub
leave
aam
add
insl
mov
lock
cmpsb
sbb
push
add
jb
push
jge
dec
inc
ljmp
data16
arpl
ja
into
push
cmc
out
es
inc
sub
pop
hlt
or
frstor
sti
in
sub
mov
sbb
stc
lea
push
enter
outsb
ret
dec
dec
xchg
adc
out
inc
inc
and
mov
lods
lods
testb
daa
in
icebp
sar
and
inc
imul
lock
add
dec
scas
sub
test
or
and
push
adc
shlb
inc
es
pop
xchg
cmp
ret
pop
daa
fsubs
fimull
shl
sub
je
sub
cmc
pushf
sub
icebp
aam
mov
stos
dec
and
rclb
cmp
iret
mov
sub
insb
imul
xchg
ret
push
cmpb
jb
arpl
jbe
inc
lock
movsl
push
xchg
cmp
push
push
cmp
clc
in
cmpsb
aam
cmpsb
push
shl
gs
pop
lret
into
inc
mov
jo
test
es
push
mov
xor
mov
out
push
je
jg
push
bound
push
out
sub
or
ret
dec
daa
xchg
mov
xor
jo
add
mov
xor
push
sub
dec
shlb
xsaveopt
mov
mov
jg
add
pop
roll
aas
mov
dec
pushf
jge
mov
add
xchg
lock
les
sub
lret
sub
aas
jns,pt
fmull
outsl
dec
ror
leave
and
pop
cmp
test
gs
sti
imull
fwait
jmp
or
insb
fsubrl
out
divb
aad
inc
fbstp
cwtl
and
scas
cmp
cmpsb
add
jecxz
pop
lea
ds
mov
mov
cltd
xlat
lds
jb
popa
sub
sbb
jecxz
inc
or
mov
jo
jecxz
xor
out
int3
jb
fistpll
and
inc
and
push
call
test
sbb
lret
jbe
pop
sahf
rep
repnz
loop
adc
push
adc
inc
into
nop
xor
add
daa
fimull
push
bound
sti
push
sbb
out
shll
lahf
adc
or
mov
xchg
int3
adc
popa
or
jle
cmpsl
arpl
loope
add
arpl
jns
mov
imulb
dec
xor
cmc
cmp
rol
pop
daa
jle
lea
dec
or
xchg
jno
dec
inc
cwtl
inc
clc
scas
cmpsb
cmp
jnp
mov
fwait
into
mov
sti
inc
in
adc
mov
outsb
inc
cwtl
pusha
lahf
xchg
xor
and
cmp
insl
add
pop
xchg
ret
and
fdivl
mov
xor
or
pop
mov
push
cmpsb
or
pop
sbb
in
ljmp
dec
stos
inc
bound
mov
push
inc
stc
stos
nop
sahf
xchg
sahf
icebp
pushf
dec
lret
dec
mov
inc
movsl
push
insl
push
and
cmp
add
mov
jg
mov
jne
sbb
mov
add
dec
and
rcll
pop
and
cld
dec
dec
cmp
jo
jmp
mov
dec
dec
jns
push
aaa
les
push
lahf
fstps
testb
push
mov
or
loopne
mov
aad
inc
push
inc
out
pop
test
or
xor
sbb
pop
sbb
xchg
or
mov
les
into
cmp
mov
mov
xor
cmpsb
inc
test
fnstenv
lret
aaa
inc
rcll
mov
je
mov
stos
jae
in
and
pop
push
xchg
cwtl
pop
push
jae
cmp
or
cmp
movsl
inc
in
mov
xchg
mov
or
sbb
xor
xlat
scas
mov
fcomp
shl
sub
jns
ss
jno
pop
arpl
fidivl
hlt
stos
xchg
xor
cmp
mov
sbb
push
push
add
es
cmp
aas
push
xchg
mov
sub
cmpsl
or
int3
pop
in
pop
test
and
push
mov
mov
scas
fldl
push
mov
sarl
sub
lahf
int3
fwait
push
lahf
pop
push
sub
cmc
cmp
pop
add
dec
lds
scas
mov
and
sti
enter
xchg
ret
inc
inc
jno
adc
imulb
inc
xchg
jae
lret
mov
ja
adc
pushf
jno
mov
cmc
inc
inc
shrd
je
outsb
and
or
pop
ret
mov
inc
andl
mov
jp
hlt
mov
inc
and
adc
cmp
or
sbb
dec
inc
sub
and
lahf
xor
mov
data16
pop
dec
push
icebp
mov
or
lea
mov
shlb
ret
xchg
in
popl
aam
mov
mov
clc
pop
jno
mov
mov
sbb
adcl
xchg
andl
setge
jno
and
leave
leave
xchg
jmp
pop
cmp
outsb
mov
mov
push
iret
lret
ret
jge
ja
outsb
sub
mov
pop
les
adc
dec
xlat
scas
call
sbb
fidivl
shlb
xchg
test
or
inc
jp
in
stos
xor
jae
outsb
push
mov
pop
out
ja
outsl
je
push
cli
mov
mov
je
cmp
jno
push
int3
out
lahf
mov
inc
pop
pop
call
push
jl
aad
aaa
push
daa
and
ret
adc
fisttpl
les
adc
pop
pop
mov
or
dec
outsb
addr16
popl
or
dec
popf
sbb
out
sub
adc
push
negb
cwtl
mov
sbb
enter
std
jne
lds
mov
jge
lcall
push
xchg
xor
xorl
mov
stos
out
jo
js
cmp
sbb
push
and
dec
mov
jo
adc
sub
or
mov
or
add
lds
lea
repnz
jbe
jae
dec
mov
sbbl
scas
mov
or
dec
dec
lcall
xchg
iret
fidivl
mov
out
pop
mov
lret
sbb
push
pop
fadds
xor
rorl
out
add
in
hlt
out
leave
pop
sbb
mov
dec
lret
pop
sbb
mov
push
push
sti
and
push
dec
out
roll
push
inc
hlt
lcall
lods
in
cmp
sub
mov
in
std
mov
loope
dec
aam
adcl
cmpsb
bswap
or
push
and
enter
addr16
stc
stc
mov
adc
cmp
xchg
xor
xchg
mov
xchg
mov
mov
or
mov
divb
aaa
test
mov
mov
sub
ret
inc
pop
adc
aaa
mov
das
sub
insl
jae
sahf
cmp
dec
enter
jne
roll
fcmovb
das
cs
or
negl
and
xchg
jmp
jns
adc
or
aad
imul
aad
sub
inc
adc
inc
mov
pop
or
push
dec
jl
ret
dec
push
xchg
mov
and
mov
aad
inc
adc
aaa
cwtl
mov
and
fs
lret
pop
add
mov
es
test
mulb
jb
ret
std
in
sub
loope
lods
iret
pop
les
jnp
mov
call
xor
mov
jle
imul
sub
mov
or
push
cmc
gs
js
jne
xchg
push
pop
or
js
mov
enter
push
cs
mov
mov
xlat
sti
pop
jmp
hlt
loope
cs
xchg
or
js
mov
push
jne
pop
aam
stc
jnp
lds
fs
push
icebp
daa
xchg
adc
rolb
mov
cltd
xchg
mov
imul
jl
jb
sbb
repz
sarb
flds
mov
pusha
repz
jmp
popa
inc
and
aaa
push
xchg
jle
popf
loope
pushl
cmp
sbb
cld
aam
ss
cmpsl
jmp
pop
aas
jg
mov
lods
scas
andb
sub
xchg
mov
loop
lock
xor
push
mov
mov
into
jecxz
cmp
roll
add
push
jmp
or
xor
sub
data16
xlat
pop
test
or
js
sub
inc
cmpsl
es
jmp
xchg
jns
cwtl
mov
lret
push
xor
pop
lock
lea
or
ljmp
sbb
scas
test
or
fcomps
mov
jb
jle
in
pop
rcll
xchg
adc
ret
push
test
int3
cmp
stos
les
inc
in
sub
pop
push
dec
js
mov
push
jmp
xchg
arpl
push
out
test
or
mov
test
in
jo
lret
outsb
and
fwait
test
mov
mov
std
inc
jp
cmp
mov
jb
inc
push
dec
and
mov
push
ljmp
xor
push
shrb
sti
aaa
and
sbb
inc
pop
daa
cli
jno
mov
cmp
sub
sub
sbb
sub
inc
rorb
bound
xor
inc
inc
push
xor
call
test
std
out
fdivrl
mov
jns
lds
xchg
fs
daa
mov
aad
adc
outsl
jmp
std
or
dec
icebp
adcb
pop
mov
mov
ja
mov
add
rolb
out
pop
jmp
jo
adc
out
cli
jns
jmp
icebp
push
cltd
imul
pop
mov
and
cld
enter
cli
daa
pop
pop
popf
xchg
inc
inc
ss
test
cmp
jmp
lret
xchg
add
sti
cmp
xchg
in
add
dec
xchg
call
loop
mov
xchg
mov
mov
mov
cld
or
jbe
xchg
es
pop
push
cld
mov
ret
cmp
push
std
mov
pop
sub
in
sbb
outsl
sbb
idivl
pop
xchg
pop
and
jl
mov
ja
lahf
stos
mov
std
mov
mov
cmc
loop
and
adc
mov
mov
ljmp
cmp
xor
repz
enter
scas
popf
mov
jno
mov
in
jp
mov
loope
or
in
jae
int3
xor
aam
jns
adc
hlt
add
lret
add
dec
fcmovb
iret
imulb
xchg
lcall
pop
add
push
gs
dec
stos
js
xor
xchg
xchg
mov
xchg
cltd
out
jnp
pop
inc
mov
idivl
cmp
dec
inc
rolb
out
or
in
xor
adcb
adc
cld
pop
pop
in
jns
movsl
or
mov
jmp
inc
dec
jge
adc
mov
stos
jmp
lret
push
popa
aad
inc
in
out
scas
cmp
add
sbb
roll
popa
lcall
jmp
add
je
jae
pop
and
and
test
jns
leave
fmull
jl
dec
xor
fnstenv
je
mov
popf
daa
shrb
in
push
adc
cld
add
sbb
cmp
aad
shll
addr16
movsl
daa
popa
movsl
push
push
or
xor
sbb
pushf
loopne
call
shll
movsb
movsb
lods
lahf
sbb
in
adc
aaa
add
iret
mov
mov
and
daa
das
mov
stos
dec
or
das
xor
dec
neg
jmp
sar
and
and
ret
in
cmp
xchg
and
popf
or
andb
stos
mov
mov
jge
adc
jb
jbe
pushf
cmpsl
rcll
xchg
enter
sbb
insl
daa
dec
xchg
and
fidivs
add
adc
xlat
sub
stos
sbb
ljmp
aam
imul
or
loope
fldt
into
lcall
dec
cmpsl
mov
daa
out
fwait
movsb
cld
mov
cmpsb
je
ret
xchg
dec
add
push
lcall
mov
jo
mov
xchg
out
add
fldl
jo
sti
jb
or
imul
ljmp
adc
bound
push
or
inc
ja
aas
pushf
pop
and
outsb
subb
lret
das
or
lret
mov
dec
jno
std
lcall
int
jns
in
clc
cltd
sbb
adc
push
and
pusha
add
loop
arpl
sti
test
dec
shll
add
mov
or
inc
js
pop
scas
fadd
adc
scas
pop
sbb
in
mov
mov
mov
push
mov
popf
push
std
xchg
lcall
add
sub
test
mov
icebp
add
mov
loop
mov
or
add
or
popa
stos
xchg
sti
jns
jg
mov
es
xchg
cwtl
adc
inc
adc
dec
sbb
scas
sarl
xchg
jnp
mov
icebp
aad
into
mov
xchg
or
inc
inc
shll
and
xchg
mov
out
jae
test
outsl
outsl
sbb
lea
dec
cmpsb
push
insb
cld
out
jae
fs
dec
cli
cmpsl
aam
xor
fildll
test
out
jl
adc
add
fisttpll
mov
xor
inc
dec
or
pop
push
jmp
push
std
dec
adc
sub
pop
xor
ljmp
mov
iret
aad
adc
testb
sbb
scas
pushf
nop
push
inc
daa
imul
cs
inc
add
jb
cmp
pop
sbb
loope
xor
or
stos
adc
pop
sbb
dec
insl
test
mov
jmp
int
leave
xchg
pop
mov
imul
ficoml
push
stc
pop
mov
fimull
and
xlat
sbb
std
repz
dec
cld
out
cmc
loop
jg
sbb
mov
and
test
inc
mov
cld
insl
xchg
mov
inc
and
and
test
and
ljmp
mov
int3
xor
aas
outsb
fsubs
mov
insb
dec
sub
pop
in
call
cld
pop
aad
mov
daa
mov
int3
sbb
dec
sub
sbb
pop
cmp
ja
nop
mov
mov
push
mov
inc
enter
mov
les
fsubs
imul
mov
dec
adc
lcall
adc
test
inc
repz
xor
or
stos
jo
sbb
mov
andl
jl
shrl
add
pop
sub
adc
loopne
icebp
cwtl
nop
out
and
cmp
iret
cmp
push
xor
push
lods
loopne
jbe
sarl
aad
mov
push
ss
jl
mov
clc
lret
aam
aam
gs
stos
popf
arpl
or
pop
mov
test
mov
sbb
add
pop
mov
sahf
dec
mull
inc
pop
mov
sub
daa
ljmp
jae
or
inc
mov
inc
jnp
pop
dec
sahf
xchg
mov
adc
mov
jecxz
mov
pop
cli
fldpi
hlt
and
stc
mov
xchg
pop
xchg
cmp
xchg
clc
jae
ret
arpl
roll
jg
jecxz
movsb
mov
dec
pop
mov
aam
sub
xor
cli
sbb
add
fwait
sub
xchg
or
pop
jle
or
pop
lds
addr16
pop
arpl
shlb
or
cld
cs
push
sbb
xchg
mov
dec
inc
jmp
cmp
movsb
aas
mov
xor
lods
clc
adc
adc
movsb
je
aam
dec
loopne
mov
push
xchg
aas
insb
adcl
pop
mov
repnz
mov
cli
pop
add
dec
dec
add
or
test
ds
je
into
int
pop
call
push
push
loopne
scas
push
ret
mov
mov
pusha
fildl
test
fwait
nop
pop
xor
js
ret
push
popl
movsb
pop
xor
cltd
dec
jne
fidivl
sub
test
inc
or
rol
aad
fwait
cwtl
cmpb
fidivs
push
mov
cmpsl
imul
mov
test
mov
sub
sub
shlb
jp
shlb
and
cmpsl
das
xchg
lcall
out
pop
outsl
out
sbb
scas
in
lcall
aaa
lcall
or
or
push
sbb
data16
sbb
faddl
jge
add
arpl
nop
rcll
inc
mulb
jno
popa
or
clc
sahf
and
inc
push
es
je
inc
dec
movzbl
aaa
adc
mov
sub
xor
sbb
cmp
cs
rolb
xor
sbb
clc
push
cmp
cmpsb
add
push
push
aam
xchg
mov
test
jae
cmp
outsb
push
jle
je
fists
clc
orb
mov
fdivs
xchg
cltd
mov
addr16
sub
pop
call
cld
sbb
movsb
inc
or
out
fisubl
add
mov
mov
clc
push
outsb
xlat
cld
pop
cmpsl
xor
jns
fs
mov
and
mov
sub
ljmp
repz
aaa
inc
cmp
add
les
in
fisubrs
movsb
aam
rcrl
xchg
test
addr16
inc
rcrb
hlt
cmc
mov
pop
xchg
push
or
cwtl
xchg
lret
cmp
sar
data16
xchg
mov
pop
xchg
outsb
aas
aaa
in
nop
pushf
jmp
test
repnz
vunpckhpd
lcall
push
insl
jb
subl
pop
and
insb
out
mov
fidivrl
xor
in
int
xor
jecxz
inc
sub
sub
xor
stos
push
aam
in
pop
dec
scas
xchg
xor
push
in
inc
scas
outsb
jne
bound
movsb
arpl
cld
mov
xchg
jl
push
and
ss
mov
add
cmpsl
fadds
lcallw
xchg
xchg
ret
cmp
rcrb
adc
sahf
pop
inc
and
lcall
cmp
cmpsb
and
int3
lock
outsb
push
adc
xchg
or
fsubrs
aad
cmp
pop
arpl
push
cmp
cmpsb
jnp
mov
xlat
mov
mov
fisttpl
faddl
pop
das
adc
or
or
sbb
sbb
cmpsl
daa
leave
push
push
mov
mov
scas
popf
or
aad
fwait
cli
icebp
jp
rorl
xor
daa
pushf
mov
std
jne
sbb
enter
push
outsl
into
xchg
arpl
adc
add
cli
sbb
js
sub
add
inc
cld
outsb
mov
fwait
inc
xor
dec
fsubs
push
xchg
cmp
out
insl
xor
add
scas
int3
pop
push
or
xlat
ljmp
cltd
clc
push
out
out
stos
data16
sbb
rorl
cmpsl
rorl
xchg
test
outsl
cmp
and
shrb
mov
mov
jecxz
mov
pop
cmp
sub
mov
mov
mov
nop
or
pop
push
popa
pop
iret
outsb
int3
and
mov
out
dec
xor
adc
pop
mov
dec
xchg
pop
push
mov
mov
mov
xchg
and
mov
cli
jp
cmp
mov
ficompl
cmp
sub
in
add
xchg
ret
pop
repz
jecxz
jne
mov
adc
lea
inc
test
inc
cmp
dec
mov
orl
fs
sub
in
cmc
idiv
sub
nop
hlt
clc
sub
dec
dec
negb
js
leave
test
jnp
mov
sub
push
in
mov
add
rolb
fadds
mov
hlt
mov
mov
mov
pop
rcll
ds
rorl
jg
xchg
ja
xadd
inc
mov
mov
mov
enter
xlat
mov
jecxz
mov
mov
and
push
sub
mov
or
sbb
ljmp
jp
xchg
cmp
jge
dec
dec
fdivrs
sbb
into
out
lock
sbb
sbb
dec
dec
lods
neg
test
mov
jge
test
dec
sub
lods
ds
cmp
xor
jmp
cltd
in
or
push
mov
dec
aam
call
mov
stc
mov
cltd
mov
sbb
dec
pop
jmp
icebp
adc
push
mov
repz
sbb
lahf
fbstp
out
push
icebp
mov
sbb
aaa
cwtl
mov
mov
or
adc
rcll
jns
dec
js
insl
push
rorl
adc
int3
cs
lock
push
lods
lret
testb
jno
adc
add
or
xor
imul
out
or
imul
add
xor
insl
loope
xor
mov
inc
shrl
mov
call
mov
cli
add
push
lods
in
repnz
into
jg
mov
xchg
cmp
and
jecxz
fdiv
dec
mov
adc
jne
shl
adc
mov
xor
xchg
jmp
fildll
pusha
sbb
inc
iret
xchg
cmpl
in
xchg
xor
or
fnstsw
mov
daa
mov
lcall
cmc
mov
jl
out
lock
in
cmp
mov
or
jne
sub
sub
jae
ss
aad
scas
push
mov
repnz
nop
xorl
es
sbb
es
mov
mov
test
lods
rcr
ljmp
mov
pop
adc
sbb
sbb
in
cs
jo
mov
mov
out
ja
push
repnz
push
jmp
cmp
pop
dec
jo
push
and
fwait
push
iret
mulb
jmp
out
mov
enter
dec
je
insl
sbb
add
in
popw
and
aad
push
fildl
lahf
cmpsl
dec
sbb
out
push
push
adcb
insb
cmc
cmpsb
dec
inc
scas
ljmp
loop
add
mov
mov
loop
sub
inc
pop
xor
stc
lock
aad
cwtl
mov
cmpps
push
sbb
adc
sbb
adc
or
adc
repz
outsl
popa
inc
xchg
clc
sub
mov
jecxz
jecxz
lods
pop
dec
mov
xlat
mov
fiaddl
pop
pushf
enter
pop
sub
lods
jmp
cld
push
sub
push
adc
repz
iret
lods
mov
adc
push
rcll
stc
fldl
push
into
or
leave
pop
pop
jp
and
inc
inc
mov
sub
addr16
fimull
push
xor
out
dec
inc
sub
fiaddl
data16
ljmp
adc
adc
pop
push
lods
cmp
mov
inc
orb
xchg
std
nop
sbb
sarb
jecxz
adc
mov
and
sub
dec
mov
cmp
xchg
mov
das
or
mov
mov
popa
arpl
stos
adc
test
push
xorl
push
popa
jg
test
jbe
adc
jbe
xchg
into
or
xor
nop
and
fnstsw
lahf
xchg
mov
mov
xorb
dec
xor
insl
aaa
ret
ljmp
jb
sahf
jle
addr16
mov
adc
js
jecxz
ds
arpl
mov
pop
cmp
les
data16
cs
sbb
sbb
aaa
ret
pusha
icebp
push
inc
fldenv
xchg
shrl
dec
hlt
ljmp
fs
cmovnp
bound
cmp
jns
xchg
push
dec
movsb
xchg
sarl
out
dec
jne
and
shlb
xchg
out
sti
popf
cwtl
mov
push
adc
repnz
std
sbb
mov
cmp
mov
lods
adc
in
jg
add
cli
add
mov
adc
cmp
ss
movsb
cmp
sub
das
push
sahf
sbb
jb
out
sbb
pop
push
andb
iret
or
test
cmp
mov
int3
push
adcb
mov
cmp
outsl
mov
arpl
or
bound
and
incb
fiadds
data16
adc
fs
jge
cli
push
daa
mov
mov
arpl
adc
lea
loopne
fbld
xchg
fldl
or
mov
jnp
sar
sub
cmpsl
dec
aaa
fdivl
popa
pop
imul
pop
je
cmpsl
xchg
mov
fwait
sub
fistps
out
cli
cmp
aad
jnp
push
cli
cltd
mov
sbb
sarl
pop
fiadds
bound
push
push
dec
loopne,pn
shrl
mov
add
push
faddl
dec
pop
jns
fisttpl
pushf
sarl
inc
mov
rclb
mov
pop
cmpsb
dec
dec
xchg
adc
jne
loope
jnp
shll
stos
adc
jo
decb
inc
add
pop
cmp
lret
out
lds
fsubrs
mov
xchg
and
or
dec
xchg
imul
sbb
dec
scas
push
jb
loop
sub
mov
sete
ja
jb
push
repnz
mov
dec
mov
xchg
xor
outsb
popf
pop
cmp
cmpsl
dec
add
les
sub
cmpb
jbe
ljmp
add
adc
add
cmp
stos
cmpsb
dec
dec
sub
or
mov
mov
xor
jb
pop
imul
loope
ljmp
orl
jne
push
adc
addl
mov
sub
insl
jno
ret
daa
mov
pop
and
popf
mov
out
and
and
iret
outsb
adc
imul
sbb
aaa
adc
xcrypt-ofb
cmpsl
scas
push
or
lahf
push
or
mov
sahf
jmp
sahf
push
jl
or
push
xchg
xor
push
jne
mov
fbstp
scas
or
inc
test
loop
push
xchg
lcall
inc
sbb
inc
insl
xor
icebp
pop
mov
lea
sub
imul
stos
push
imul
mov
adc
je
adc
lock
gs
jecxz
adc
or
mov
xchg
roll
push
adc
loope
imul
dec
and
lds
orb
data16
push
xchg
jg
jno
xor
jp
std
out
jl
test
lods
add
dec
xor
jp
cvtps2pd
xchg
inc
jmp
outsl
dec
xlat
scas
into
push
stos
add
int3
sarb
outsl
jo
xor
scas
js
xor
mov
mov
or
incb
adc
cmp
popa
cmp
shlb
push
mov
or
push
push
aaa
jl
mov
gs
xor
cmp
jle
imul
or
ss
jg
popa
push
xchg
daa
jg
movsb
sub
dec
mov
mov
nop
clc
and
sub
cli
out
mov
xor
pop
ret
das
int
add
test
mov
push
mov
sbb
or
aam
mov
sub
ret
popf
andl
mov
jl
push
jge
insb
setbe
cltd
xchg
fcomi
add
adc
mov
cli
fsubl
mov
mov
daa
adc
push
in
mov
out
jo
mov
jmp
mov
in
shl
pusha
xor
outsl
and
int3
lock
inc
jbe
add
push
jns
mov
fcoms
cld
pusha
xchg
repz
or
or
push
es
jl
cwtl
push
mov
popa
xlat
into
popf
lcall
dec
scas
je
lea
out
imul
jmp
inc
cmp
sbb
in
shll
dec
mov
push
testl
stc
scas
adc
jae
push
cmp
mov
or
outsb
xchg
ss
xor
shrb
jmp
sbb
aas
ja
fldcw
dec
push
jae
out
lock
dec
rorl
cmp
lret
lret
or
adc
pushf
aas
xchg
cs
and
je
sbb
xchg
jns
and
test
shrl
fsubl
mov
sbb
shlb
push
cmc
jmp
enter
cld
rclb
shlb
jb
xchg
hlt
add
pop
popf
jnp
movsb
mov
jecxz
mov
and
add
ja
lock
dec
arpl
sbb
dec
cld
xor
mov
sbb
int3
jns
cmc
mov
dec
xchg
scas
mov
or
mov
fdivl
and
not
sbb
lods
xor
jnp
pop
call
movsl
cld
ds
xchg
pop
mov
ror
add
nop
sbb
jns
adc
adc
lret
mov
dec
loopne
loopne
out
daa
jmp
inc
xchg
aaa
pop
xor
cmp
out
fistpl
dec
stos
push
or
es
pop
and
icebp
cltd
js
cmpsl
loop
ja
daa
nop
jo
lcall
pop
mov
mov
and
mov
lods
in
xor
shr
std
fstp
sub
and
and
leave
mov
sbb
iret
push
lds
lret
add
cltd
repz
inc
test
mov
dec
test
movsb
fdivl
rcll
jl
imulb
push
xor
mov
scas
loop
pop
push
jp
fs
mov
loop
xor
adc
adc
call
inc
xlat
aad
gs
dec
repz
lret
ja
xchg
stos
pushf
insl
xchg
incb
add
or
fldt
shll
aas
inc
push
loope
push
adc
adc
andb
and
xchg
hlt
adc
call
mov
loope
push
test
add
outsb
mov
mov
pop
das
out
dec
adc
pop
int3
push
and
mov
data16
in
mov
push
cmp
jno
fwait
mov
daa
or
dec
subl
orl
push
push
jmp
cltd
adc
aad
leave
jp
mov
jecxz
push
jne
out
jecxz
scas
js
pop
jno
jns
xchg
adc
int3
xor
rcrb
pop
or
cmpsl
mov
out
gs
es
jns
push
aam
inc
pop
xchg
push
shrl
sahf
dec
mov
fst
sar
jb
out
xor
xorl
push
outsb
movsl
pop
imulb
mov
sub
adc
cmp
push
jl
scas
sub
insb
and
mov
xchg
jle
mov
fsts
push
inc
rorb
xchg
mov
xor
xchg
dec
and
xchg
cmp
mov
out
cltd
and
pop
arpl
testl
jecxz
mov
in
enter
mov
fsubp
cmpsb
shr
mov
cld
in
sahf
pop
xlat
das
mov
clc
jge
cltd
cmp
enter
imul
mov
scas
xor
mov
lods
movsl
into
sub
jp
mov
sarl
cld
jbe
js
movsb
out
testl
lds
gs
pop
xor
jne,pt
pushf
jmp
dec
bound
loop
mov
idiv
jl
shrb
daa
repnz
movsl
in
sub
aaa
push
jo
jno
roll
dec
jnp
mov
shlb
call
into
cmp
ja
xor
or
jmp
mov
add
adcb
js
fs
cwtl
pop
dec
pop
sbb
gs
popa
xorl
mov
bound
and
mov
lds
xchg
movsl
bound
pop
sahf
pop
adc
mov
jnp
inc
lods
sub
mov
mov
dec
xlat
or
jns
rcl
popf
or
xchg
pop
lds
addr16
and
jecxz
cmpsb
mov
aam
test
std
xchg
jecxz
into
xor
jecxz
sbb
mov
xor
scas
jle
lret
jg
cld
xor
fadds
xchg
pop
and
in
mov
bound
das
dec
inc
cmp
imul
cmpsl
fs
cld
pop
push
fwait
jo
pop
sub
push
dec
stos
lea
je
sub
sbbl
sub
loop
dec
loop
scas
jecxz
rolb
inc
repnz
stc
cwtl
and
mov
into
pop
or
mov
pop
test
xchg
xor
sub
arpl
or
test
aad
xchg
push
pop
cmp
mov
xchg
lods
add
pop
rolb
scas
sbb
roll
jbe
xor
ret
push
pop
mov
or
movsb
pushf
sahf
fistl
lea
sbb
xchg
dec
xchg
xlat
cmp
mov
fdivl
pop
inc
mov
fnstsw
paddsw
cmp
cmp
flds
and
leave
jge
scas
scas
lds
add
sbb
inc
sub
sub
jae
aaa
cmp
xor
mov
push
out
popf
nop
enter
lea
add
int3
xchg
mov
mov
push
out
aad
fadds
dec
enter
jge
xlat
cmp
sbbb
sub
dec
decb
shrb
push
jecxz
int3
in
outsl
adc
inc
lods
loop
jmp
test
gs
cmpsl
inc
push
pop
loop
rcll
pop
push
es
push
test
rcrl
gs
mov
adc
icebp
in
mov
scas
inc
cmpsb
xchg
xor
mov
fists
mov
inc
mov
ret
dec
cltd
into
push
inc
jb
and
sti
sti
cmp
int
or
pop
push
sub
pause
ja
cltd
fs
cmp
repz
test
push
cmc
jle
dec
pop
add
xchg
xchg
imul
call
jl
ret
and
cmp
loope
xor
in
mov
insb
in
ficoms
push
in
mov
inc
cld
cmp
cwtl
or
sahf
fsubs
out
jae
lods
sbb
test
mov
pop
pop
fnstenv
xchg
fisttpll
mov
ficoml
mov
jecxz
subb
or
mov
test
dec
cmp
sbb
addr16
incl
loope
call
xor
test
dec
loop
gs
ss
jg
dec
adc
insl
ret
or
sahf
addb
xorb
daa
arpl
jmp
xlat
sub
jmp
inc
lret
cmpsl
iret
and
mov
int3
test
push
scas
cmp
rclb
hlt
outsb
jne
addl
lret
jb
jae
cmpsb
push
push
sub
adc
fildll
push
push
movsl
orb
test
call
push
xor
mov
std
or
and
ret
cmp
push
add
push
fwait
leave
je
push
pop
cli
push
leave
int
and
xor
pop
and
stos
xchg
in
mov
ljmp
sub
nop
add
ja
idiv
pop
cli
mov
stos
jno
cmp
fwait
adc
mov
push
shlb
ja
dec
cmp
pop
xchg
add
pop
adc
mov
pop
lret
jo
inc
cmpsl
xlat
mov
fdivs
xor
aad
adc
ds
call
pop
or
outsl
scas
xlat
sti
dec
mov
push
testl
mov
cltd
clc
fmuls
cwtl
movb
adc
xchg
xor
aam
fs
pop
mov
sbb
inc
cmpl
iret
repnz
or
and
and
inc
stos
in
into
pusha
xchg
scas
lds
lahf
or
test
push
inc
test
ret
push
jl
or
cld
in
cmc
add
lock
fwait
cwtl
push
incb
imul
or
push
push
jle
add
aad
hlt
daa
inc
sub
pop
fisttpl
mov
jb
movsl
fiaddl
fstps
cmpsl
sbb
daa
xchg
xor
dec
cli
shrb
mov
or
mov
cmp
les
scas
pop
imul
das
aam
mov
cmp
ds
je
filds
cmpsb
adc
xchg
lahf
mulb
adc
ficoms
aad
lahf
push
pop
cmp
int
sbb
xchg
lret
mov
adc
mov
push
test
mov
inc
out
ljmp
adc
pop
pop
push
and
sub
hlt
test
out
cmc
in
lods
inc
mov
jmp
xor
inc
and
rorb
lods
push
mov
dec
xchg
cwtl
fisubs
mov
mov
shll
lock
bound
sub
int3
lea
pop
mov
jbe
out
lahf
xchg
mov
mov
mov
pop
lods
aad
mov
ss
pop
cld
push
scas
xchg
test
cmp
cmpsb
movsb
cmp
cld
mov
mulb
scas
aaa
out
scas
inc
lahf
xor
mov
mov
addl
xchg
push
in
loopne
and
mov
out
inc
rcll
imul
adc
divl
ret
arpl
sbb
xor
pop
in
or
imul
jmp
mov
sahf
js
mov
cmp
mov
pushf
sub
sub
ficoms
add
hlt
xor
cmp
mov
and
pushf
xchg
icebp
shrd
dec
push
xor
mov
dec
mov
in
call
xchg
rcrl
lds
or
cld
adc
cmc
test
ficoml
jno
xor
dec
cs
pop
fcomps
mov
insl
jne
and
jo
jo
int
imul
out
fcmovnbe
aas
in
cmp
push
xchg
mov
sbb
fistpl
imul
das
xor
mov
lret
lahf
inc
mov
dec
sti
cld
stc
stc
imul
outsl
push
push
adc
inc
pop
jno
icebp
mov
inc
and
pop
add
add
outsl
vmread
cmpsl
pop
pop
push
add
cmpsb
or
sub
call
cmc
pop
jne
data16
jae
dec
pop
lret
and
out
fimuls
ds
dec
cmpsb
or
mov
jg
jmp
push
dec
mov
jb
cmp
leave
in
subl
jmp
adc
cmpsl
mov
xchg
insl
ss
mov
int
jl
xchg
aad
mov
pop
push
xchg
mov
cmp
lret
not
and
dec
mov
cmpsb
dec
cmp
gs
arpl
xchg
sbb
mov
mov
fsub
push
push
divl
adc
push
test
mov
adc
lock
push
push
mov
jns
imul
lret
push
fsubl
xchg
andl
bswap
cltd
cmpsb
jle
push
pop
sub
int3
scas
fnstsw
iret
cmpsb
jge
xor
lahf
cmpsl
push
call
out
pop
js
sti
cmp
mov
mov
add
je
fldenv
sub
jmp
and
jge
push
das
push
test
rorb
outsl
inc
pusha
mov
lock
jnp
xchg
fdivl
mov
sub
dec
flds
cmp
mov
mov
mov
ljmp
sahf
or
xor
or
aas
icebp
inc
repz
addb
fst
sbb
mov
repz
and
inc
stos
xor
sub
fisttpll
mov
addr16
mov
sub
loope,pt
mov
xchg
xchg
int
fisttpl
in
in
aad
mov
stos
movsb
movsl
inc
sbb
hlt
mov
lods
int
inc
jbe
or
inc
cltd
mov
fiadds
push
and
out
dec
clc
shll
mov
xchg
sub
mov
cltd
test
xor
fs
test
add
icebp
inc
sarb
scas
subl
inc
lret
dec
mov
push
loop
mov
daa
inc
popa
mov
hlt
div
rorl
inc
pusha
and
inc
add
pushl
ds
inc
aaa
popa
mov
in
mov
in
add
data16
xor
push
xchg
mov
sbb
cli
mov
dec
cmp
mov
and
pop
icebp
lret
outsb
in
pop
call
mov
sbb
cmpsl
lds
in
es
jno
cs
popf
les
push
mov
jmp
add
arpl
inc
pop
test
and
and
xchg
outsb
adc
pop
mov
jp
xchg
push
pop
fdivl
inc
ret
mov
mov
sub
sub
push
jg
fsubl
fisubs
inc
cmc
cmpsb
inc
es
int3
cmp
ret
test
nop
dec
lret
and
repnz
inc
sub
out
std
in
pusha
popl
inc
test
jbe
pop
and
cmp
cmp
sbb
xchg
aam
sub
jmp
push
mov
imul
aas
jg
iret
inc
int3
or
popf
nop
in
imul
xor
loopne
jge
dec
das
fiaddl
in
xchg
xlat
stc
cwtl
pop
dec
sbb
lahf
sub
es
or
mov
cmp
out
ja
cld
daa
or
out
mov
push
movsb
sahf
mov
jmp
dec
push
fsubl
lcall
out
lea
xchg
mov
mov
sbb
js
mov
jns
mov
lcall
push
out
sub
xor
xchg
loop
jg
mov
sbb
or
sbb
mov
lods
sbb
jns
pop
in
dec
std
popf
stos
jae
nop
shrb
ret
cli
lock
jno
pop
adc
mov
mov
shlb
or
int
and
adc
push
cmp
and
dec
cmp
cmp
test
mov
mov
mov
shl
fimull
repz
jp
push
mov
or
pop
int
mov
inc
sbb
xor
sbb
iret
frstor
movsb
dec
out
dec
push
adcb
sbb
xrelease
hlt
add
jne
or
jb
lret
dec
and
fwait
jl
loopne
fprem1
ret
int3
cli
insb
enter
jmp
sbb
mov
lahf
cmp
mov
jo
xor
js
pushf
and
out
xor
test
enter
add
aas
adc
push
push
xor
jp
jmp
pop
mov
pop
cmpb
lea
scas
mov
or
mulb
das
xchg
jo
jbe
sbb
sub
pop
pop
push
or
test
xchg
call
aaa
push
dec
int
gs
push
pop
cmpsb
xchg
in
lods
add
xor
push
mov
inc
xchg
aaa
lcall
sub
int
ret
loopne
lods
adc
fmulp
sbb
ljmp
mov
xor
ja
mov
sbb
mov
aas
push
js
fsubr
gs
cld
push
aad
rol
sub
cld
repz
or
sub
add
stos
sbbb
pop
mov
push
scas
cmp
pop
jecxz
shlb
test
mov
xlat
xchg
sbb
inc
xchg
in
push
insb
data16
sbb
add
lock
mov
mov
lea
mov
jle
jecxz
loopne
mov
movsb
leave
jge
mov
sbb
repnz
insl
inc
nop
jbe
insb
xchg
loope
mov
xchg
push
mov
ljmp
and
scas
cli
in
loopne
pop
in
dec
push
cmp
or
gs
sahf
shl
scas
push
ds
add
jns
popa
sub
in
call
add
dec
push
idivl
xor
loopne
into
jnp
icebp
popa
add
fisubrs
jnp
cmc
repnz
mov
popf
mov
cld
mov
mov
cli
cmp
inc
fisttpl
js
xchg
cmpsl
jge
and
xchg
and
xchg
xor
cmpsl
mov
lret
sbb
sbb
fimuls
pop
xor
xchg
inc
xor
jno
fisubrs
scas
add
xchg
mov
outsl
xor
dec
repnz
jecxz
mov
sbb
sbb
push
shll
pop
xor
rcrl
in
xchg
adc
imul
push
mov
aaa
push
jle
outsl
int3
dec
push
xor
es
lods
cmpsl
stos
ljmp
and
push
push
pop
ss
mov
push
leave
lods
cmc
mov
dec
pop
adc
dec
repz
test
xchg
push
sbb
in
and
filds
cmpl
test
fisubl
inc
sub
es
bound
jbe
mov
stc
std
loop
mov
addl
dec
in
rorl
pusha
mov
xchg
or
fcompl
pop
dec
pop
push
jecxz
enter
jecxz
or
fmull
sbb
mov
add
or
sub
sbb
int3
jno
imul
lcall
sbb
push
or
or
ds
mov
xor
jl,pn
call
test
ffreep
and
rclb
test
sub
jbe
push
push
cmc
mov
popa
les
mov
push
push
add
jecxz
movsl
xchg
int
push
cmp
mov
scas
into
ljmp
push
sub
rclb
cmpsb
and
sti
push
jno
ljmp
mov
lock
jp
arpl
roll
jne
lcall
test
mov
pop
mov
mov
sbb
inc
stc
mov
and
jnp
hlt
ja
roll
xchg
dec
mov
jo
int
mov
inc
fs
mov
cmp
mov
pushf
jb
test
fldenv
popa
sbb
sub
mov
popf
sbb
sbb
pop
xchg
inc
or
push
mov
add
dec
inc
push
test
push
imull
aas
adc
into
cwtl
cmpl
mov
xor
pushf
sti
pushf
mov
push
push
adc
test
cmovbe
jne
or
into
pop
xchg
xchg
adcl
or
push
and
aam
and
xchg
xor
testl
sbb
out
div
ss
fidivl
xor
incl
int3
mov
cmp
sub
sahf
jae
mov
loopne
mov
imul
or
mov
add
jo
repz
ficompl
rolb
cmp
out
or
sub
aad
jg
pop
js
push
in
inc
ds
nop
pop
addr16
xlat
cmpsb
sarb
xchg
dec
push
lcall
fisubrs
pop
jo
lcall
leave
out
test
lock
imul
into
jmp
dec
mov
and
lcall
sub
add
mov
frstor
push
shll
ljmp
push
mov
add
scas
dec
xchg
rep
sahf
rclb
mov
sti
dec
cltd
xor
and
lods
fsubl
dec
cld
daa
push
shlb
aam
out
and
mov
pop
in
sub
sbbb
movsb
ja
aas
test
xchg
lcall
loope
leave
xor
pinsrw
shll
lret
pushf
lahf
mov
mov
loopne
leave
mov
push
aad
pcmpeqd
xor
jmp
xor
xchg
lods
out
cmc
mov
into
ret
jg
push
gs
mov
outsb
repnz
mov
jge
jmp
mov
sarl
mov
mov
dec
lods
icebp
out
jbe
mov
test
dec
fiaddl
mov
stos
lahf
faddl
bound
aam
adc
ds
inc
in
or
imul
mov
cld
xchg
testl
lock
sbb
pusha
or
stc
cmp
insl
push
inc
mov
hlt
mov
xchg
sbb
subl
das
insl
push
sub
lret
xlat
into
push
stos
decb
xor
std
jmp
push
pop
mov
mov
sub
xchg
aad
fcoms
add
sahf
cmc
pop
jns
push
aad
enter
inc
push
imul
cmpsb
mov
add
fsubrs
cmp
mov
xor
aas
cmp
cmp
jno
or
popf
jl
shll
pop
cmp
lret
shl
push
movsl
mov
or
iret
popa
out
sbb
loope
adc
cwtl
xchg
mov
push
fists
jmp
jmp
inc
inc
enter
cwtl
insb
sarb
inc
adc
pop
or
test
mov
sbbb
ficomps
loope,pn
xchg
sar
mov
jmp
outsb
repnz
adc
add
mov
inc
std
pop
mov
and
notb
inc
dec
cmp
mov
mov
add
push
cmpsb
bound
jne
test
jle
push
add
push
pop
outsl
jmp
xor
mov
mov
cmp
leave
jp
jmp
sbb
in
jecxz
cmp
lahf
into
or
push
sub
and
in
or
push
cmp
arpl
push
pop
movsl
jnp
icebp
in
mov
mov
arpl
or
adc
jecxz
mov
dec
dec
outsb
iret
sbb
clc
inc
or
arpl
cmp
mov
lcall
fcom
inc
enter
sub
pushf
int3
vmovdqu
mov
jnp
pop
movsl
adc
mov
or
insl
popa
xchg
sbbl
or
ret
cmc
xchg
pop
cmp
mov
or
and
pushf
cmpsb
icebp
int3
shlb
mov
je
xchg
enter
add
push
bound
xor
and
dec
jne
into
cmp
xor
ret
ret
fwait
hlt
and
cs
mov
push
dec
popf
jno
cmpsl
mov
lcall
repz
sarb
dec
es
pop
push
mov
jae
jo
int
mov
nop
dec
push
test
push
outsb
inc
aam
jnp
loop
cmp
int
clc
test
lds
sbb
daa
mov
idivb
arpl
mov
pop
rcrb
loopne
jns
adc
sbb
mov
xchg
xor
dec
arpl
and
mov
movsb
mov
and
push
push
xchg
fs
ffreep
rorb
ss
add
mov
pop
mov
leave
ret
cmp
dec
xchg
lahf
and
aam
daa
add
aam
push
in
xlat
xchg
mov
aad
out
push
out
pop
sbb
fldenv
scas
mov
push
fdivrs
xchg
movsb
inc
andb
pop
lods
mov
leave
jle
jns
xor
xor
dec
pop
aam
add
xchg
pop
mov
sub
in
adc
xchg
mov
cmp
mov
outsl
mov
sbb
adc
add
push
lods
sbb
pop
fs
cmp
rorb
bound
and
jl
sbb
inc
sub
jb
fdivl
adc
js
cs
daa
mov
mov
jmp
dec
jbe
test
aad
fdivrl
test
out
scas
pop
fisttpl
jo
adc
repz
push
mov
xchg
sti
jge
iret
xchg
xlat
xchg
dec
lds
sahf
loop
cmpsb
jne
in
int3
add
sub
sub
cld
adc
push
dec
adc
mov
sub
push
pop
mov
and
pushf
call
dec
mov
or
mov
mov
incl
jp
inc
incb
sub
shlb
sbb
rcll
fs
sub
rcrb
push
int
orl
push
push
inc
sahf
fcmovnbe
mov
dec
pop
jge
fimull
add
adc
mov
jg
mov
mov
fists
aam
divl
mov
fiadds
aas
fcmovbe
mov
sbb
fidivrl
pushf
push
fbld
xor
pop
sbb
mov
cmpsl
pop
sub
or
jne
dec
mov
nop
aam
loope
mov
xchg
call
repnz
popa
jne
xor
std
or
ss
sbb
mov
popa
or
and
mov
loope
subb
push
inc
xchg
rcpps
scas
add
sbb
ljmp
push
movsl
lahf
js
out
lret
dec
jbe
push
pushf
leave
mov
stc
test
pop
or
mov
pop
and
lret
cli
adc
lods
dec
stos
add
pause
mov
pop
mov
in
sbb
sbb
xchg
rcll
repz
sti
push
add
lcall
mov
aam
xor
scas
sub
pop
jb
dec
stc
fnstsw
dec
cmp
gs
loop
push
sbb
and
push
mov
movb
jle
mov
cmp
push
nop
xor
lea
leave
inc
ljmp
cmp
mov
lahf
push
jns
shll
sbb
pop
lahf
push
jne
or
test
sbb
out
clc
faddl
hlt
mov
mov
mov
inc
jmp
je
mov
sbb
and
shrl
dec
mov
xor
push
fsubrs
addr16
xor
xchg
loopne
mov
xchg
negb
mov
push
sub
jecxz
aam
out
mov
in
inc
test
cmp
sub
push
fists
daa
call
nop
cmp
add
pmaxsw
ret
sbb
xor
enter
cld
insb
int3
inc
mov
mov
cmp
push
es
inc
test
and
push
push
pop
and
adc
fdivl
or
imul
out
mov
loopne
fiaddl
push
jl
xchg
xlat
push
pop
cmp
mov
cld
jno
adc
rcll
add
aas
test
cld
js
mov
dec
daa
fisubrl
and
ja
lods
mov
pop
loop
jb
dec
cmp
cmpb
in
push
aas
dec
mov
icebp
and
xchg
frstor
dec
in
mov
cmp
dec
xchg
xchg
mov
push
out
mov
xor
bound
add
xor
enter
push
add
cli
mov
xchg
repz
dec
test
mov
notb
jbe
repnz
mov
fidivrs
es
gs
ret
lret
dec
les
in
and
out
pop
push
daa
and
out
fwait
arpl
ds
add
fisubrs
cs
stc
ret
inc
add
add
add
mov
jne
mov
or
and
stos
test
incb
xor
rclb
mov
bswap
jge
jle
jb
call
mov
loope
add
cmpsl
pop
xchg
inc
or
mov
in
push
mov
jge
jle
mov
enter
pushf
cmp
xor
daa
cltd
and
mov
outsl
roll
push
mov
in
pop
rcrb
and
or
shlb
or
inc
cli
xor
mov
adc
fcompl
mov
push
cld
sahf
push
jg
flds
lcall
fidivrl
xchg
add
mov
mov
push
inc
leave
sar
push
jge
and
sbb
mov
es
outsb
insb
sbb
lock
or
lret
hlt
repnz
out
loope
mov
roll
or
jl
jmp
cmpsb
xchg
push
cmc
add
data16
sarl
mov
add
jne
mov
pop
sbb
pop
jmp
push
mov
ret
jmp
xchg
push
addr16
negb
jb
outsl
ret
into
xchg
push
and
pop
sti
fs
leave
pushf
sahf
ss
xchg
xchg
fbstp
or
add
push
add
push
or
add
jle
stos
add
fimull
push
and
mov
or
pop
fldenv
xchg
in
sbb
jb
lods
fildl
mov
jge
das
aaa
ss
mov
jg
lock
mov
insl
aam
xor
inc
pushf
jge
adc
sub
inc
adc
dec
mov
add
push
hlt
jnp
and
xchg
mov
jo
arpl
stos
cmp
outsl
bound
lahf
sub
mov
loopne
imul
push
loope
push
push
test
mov
ret
inc
ficomps
push
mov
cmp
cmp
icebp
imul
adc
cs
and
int
jp
pop
sbb
inc
test
add
xor
cmpsl
mov
nop
xorl
std
ljmp
jle
fadds
or
es
pop
in
pop
fldenv
aad
dec
mov
out
jb
jp
mov
mov
and
pushf
jmp
xor
cmp
lods
les
push
mov
lret
jmp
mov
fisttps
cld
out
pop
negb
comiss
test
dec
daa
push
and
push
ds
jl
je
out
dec
dec
mov
rcrb
repnz
xchg
mov
xchg
jnp
mov
adc
pop
jge
ljmp
xchg
cmp
pop
inc
jp
push
sub
mull
jmp
sarb
in
rcr
sub
andl
jo
xor
popa
je
add
jno
sti
pop
push
mov
negl
ljmp
subb
mov
add
rorb
adc
mov
mov
lods
cli
xor
iret
cmpl
call
fcomps
fmuls
adc
dec
and
dec
aad
fistpll
push
stc
arpl
rcll
ret
sbb
fldt
pop
inc
lea
test
xchg
divb
dec
in
cmc
adc
shrl
jmp
rcrl
testl
cwtl
sbb
mov
mov
stos
sarb
ficompl
jne
mov
mov
sbb
leave
xor
hlt
cmpsl
sub
ret
lcall
push
pop
addr16
mov
out
movsb
xchg
leave
xchg
jmp
xchg
clc
or
dec
icebp
pop
mov
insb
adc
inc
pop
cmp
ss
lahf
push
and
cmp
inc
add
mov
aad
aad
lock
cld
cmp
in
xchg
push
daa
sbb
jecxz
cmp
cmp
jno
pop
enter
jg
mov
mov
and
sub
aad
lret
cwtl
pop
and
in
mov
inc
and
cli
sub
lea
iret
daa
or
jecxz
sti
push
adc
leave
fnstcw
movb
inc
xchg
gs
adc
xchg
ret
shlb
ljmp
jmp
add
push
in
lret
cmp
xchg
mov
scas
mov
or
rcll
das
push
xchg
or
je
sarl
fisubs
cltd
or
mov
and
xor
outsb
imul
pop
pop
sub
adc
daa
sub
xlat
sub
lahf
xor
cmp
or
and
mov
mov
cmp
adc
outsl
scas
out
jno
push
nop
or
inc
pop
sarb
inc
orl
shl
cmpsl
and
dec
stos
pop
mov
into
fwait
movsb
outsb
xchg
pop
es
add
cs
mov
es
dec
scas
icebp
xor
je
arpl
lods
pcmpgtd
out
push
pop
add
xchg
mov
sbb
insl
out
sub
xor
cwtl
je
mov
add
xchg
pop
dec
std
in
mov
adc
jp
inc
repnz
push
xor
jno
add
pop
xchg
push
add
jbe
sbb
cwtl
xor
adc
je
ds
jecxz
mov
gs
add
xchg
subl
push
push
and
addr16
pop
xchg
push
imul
hlt
jae
sbb
jle
mov
lahf
pop
push
out
pop
out
push
pop
js
cmp
sbb
cmpsb
js
decb
add
push
dec
loop
aad
mov
sbb
lock
fistpll
incl
inc
pop
mov
test
cli
adc
jmp
sub
jae
shrd
xor
arpl
push
push
mov
jle
dec
test
lahf
fcmovu
cmp
xchg
pop
mov
sbb
or
rcl
sarl
fisttps
push
push
xlat
and
mov
add
mov
jl
test
lea
pop
vmread
arpl
jmp
cmp
jnp
jns
lret
pop
shll
fstps
cli
js
loop
and
test
inc
loopne
or
sbb
jle
ds
bound
lea
bound
mov
movsb
mov
and
fldt
jge
xchg
or
out
cmp
ds
nop
push
pop
iret
insb
sahf
xchg
lahf
cmpsb
mov
xor
ror
adc
adc
cmp
ja
aaa
mov
mov
adc
cwtl
call
testl
adc
jg
icebp
pop
push
icebp
fmuls
dec
int
mov
aaa
push
mov
xor
mov
xchg
int
push
xor
lea
scas
adc
out
push
pushf
data16
sub
imul
mov
gs
dec
imul
sub
or
sub
xor
and
xor
jmp
sub
jnp
push
xchg
cli
mov
ljmp
dec
gs
sbb
pop
fidivrl
out
xchg
mov
lret
jae
and
mov
dec
mov
mov
loope
and
adc
negl
mov
pop
mov
ja
pop
or
fdivrp
ss
std
mov
jg
add
scas
pop
leave
mov
push
ljmp
int
or
ret
xchg
sbb
cwtl
sub
mov
cmp
jecxz
lret
cmp
or
inc
test
mov
dec
int
pop
lea
jne
jmp
dec
and
arpl
out
mov
mov
dec
cmc
cwtl
adc
xchg
xor
mov
insb
mov
sub
xchg
mov
xlat
loop
push
inc
les
hlt
rorb
add
or
sbb
or
sub
or
add
add
inc
rorl
add
add
rorl
add
add
test
or
add
add
movsb
rorl
add
add
rol
add
add
add
add
addb
add
add
or
add
add
jmp
rorb
add
or
adc
or
add
add
cmp
or
adc
or
sbb
or
add
add
call
add
or
and
or
add
add
pushl
add
or
sub
or
add
add
lcall
rorb
xor
or
add
add
pushl
or
cmp
or
add
add
call
rorl
cmp
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
insb
outsl
jae
dec
gs
add
outsl
insb
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
imul
insb
add
add
add
gs
je
inc
outsl
outsb
je
add
add
gs
insb
xor
cs
insb
add
add
gs
insb
inc
js
arpl
gs
add
add
add
xor
xor
fs
insb
add
faddl
add
add
add
add
sub
pushf
mov
in
pop
sub
mull
add
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
mov
je
mov
and
inc
test
fwait
dec
mov
cmpsl
adc
adc
shll
sbb
dec
test
sbb
jae
jns
inc
ret
xchg
or
mov
sbb
or
mov
push
sub
pop
or
jo
push
jb
adc
jo
add
movsl
jo
nop
add
mov
test
mov
add
or
cmpsl
add
les
xchg
cmp
into
negb
sbb
push
addr16
loop
xor
push
push
push
call
pop
sub
mov
or
dec
xadd
lock
jbe
add
ja
insb
or
mov
stos
add
jnp
add
jae
test
mov
jle
push
mov
inc
cli
rep
xchg
and
cld
push
popl
das
outsl
add
cwtl
mov
sbb
push
call
sbb
xor
mov
stos
and
mov
lea
dec
sbb
inc
push
xor
and
xor
push
fs
fwait
xchg
sub
pop
sub
or
push
nop
add
sub
sahf
xor
leave
mov
adc
push
adc
jnp
xchg
sub
lret
sub
lea
jmp
test
xor
push
push
and
xchg
push
push
pushf
jnp
and
es
pop
sbb
incl
aas
std
or
sub
aas
push
and
xchg
aad
or
push
js
daa
jne
or
sub
dec
inc
icebp
add
movb
and
sub
inc
bound
push
call
lock
sub
or
xchg
sub
pop
pop
or
or
cld
stos
call
pop
sub
push
add
push
call
dec
push
push
add
sar
scas
sti
rorl
add
add
ret
mov
cld
inc
cmpsl
stos
pop
add
jmp
adc
lods
push
jne
scas
leave
push
nop
add
rcl
jmp
push
jae
aas
pop
dec
cmp
scas
pop
add
or
enter
call
mov
cmp
daa
add
cs
jmp
sub
xchg
mov
movzwl
test
outsl
sub
ja
js
repnz
cld
inc
pop
adc
add
cmp
jge
push
cmpl
mov
add
sub
shll
mov
jne
adc
rorb
shr
rclb
les
addr16
push
sub
rcrl
pop
pop
mov
push
aaa
xor
jne
aam
lds
mov
jmp
push
mov
xchg
clc
add
xor
adc
lcall
sbb
das
push
aas
bound
push
lret
mov
dec
xchg
inc
in
mov
pop
push
loop
xor
dec
or
sar
rep
xchg
fildl
sbb
add
cli
movsb
test
push
nop
outsl
rcrl
stos
lret
insl
ss
pop
into
pusha
cmp
cmp
inc
lods
xorb
popa
pop
and
andb
lock
push
push
xchg
push
xchg
xchg
jb
mov
mov
dec
sub
pop
sub
push
daa
inc
xor
lret
dec
push
and
sub
push
dec
or
mov
push
push
push
in
shlb
fs
inc
je
inc
adc
adc
adc
ret
lcall
cli
cmp
lock
cmp
push
stc
jmp
fiaddl
add
imul
sub
dec
fstpl
in
or
push
sub
cltd
or
mov
pop
cmpb
mov
shl
xchg
je
add
inc
or
into
jle
test
and
movsb
sahf
adcb
push
call
add
jle
mov
xchg
xorl
jae
bound
inc
sbb
add
imul
mov
jg
adc
loope
cmpsl
lahf
dec
test
xor
adc
adc
mov
ror
adc
rclb
scas
dec
add
testb
iret
pop
add
pushf
pushf
adc
test
push
cs
or
push
je
inc
data16
gs
push
inc
inc
imul
pop
sub
dec
push
mov
lods
xchg
imul
mov
inc
cld
outsl
repz
sub
addb
mov
call
or
inc
jmp
je
cmpsb
scas
ss
test
mov
mov
inc
cmp
dec
adc
jl
sbb
adc
pusha
loope
cld
push
test
dec
mulb
test
test
testb
pop
sbb
inc
push
movsl
xchg
adc
sbb
or
sub
cmpsl
sbb
jo
imul
add
and
cld
dec
popl
push
push
pop
ffreep
jg
adc
jae
jns
cmp
outsb
jbe
outsl
jge
bound
pop
ss
icebp
imul
int3
sub
xor
insb
and
or
imul
insb
push
call
sub
mov
lock
jne
mov
adcl
daa
popa
addr16
outsl
js
ja
cmpsb
xor
xchg
je
adc
arpl
jnp
cmp
or
inc
dec
add
js
je
into
test
add
sbb
fs
jo
repz
mov
inc
je
fs
insb
sbb
push
inc
enter
mov
or
les
add
scas
inc
mov
and
dec
add
add
testb
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
or
add
add
or
add
or
or
or
or
or
add
inc
add
rorb
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
