pop
cmp
mov
movsl
dec
dec
adc
sbb
out
and
cltd
or
xchg
lea
mov
aad
int3
add
fsts
arpl
push
jne
fwait
icebp
jp
xor
mov
in
adc
push
into
mov
shr
pop
insb
mov
push
pushf
fcmovnu
sbb
lock
scas
mov
xchg
adc
aaa
dec
mov
xchg
cld
xor
out
je
adc
lret
or
adc
les
mov
xchg
jne
jmp
in
xorl
mov
mov
xlat
xor
push
jmp
mov
adc
mov
aas
or
popa
roll
xor
rclb
adc
dec
aaa
aas
push
in
jo
in
fidivs
in
add
push
test
negl
imul
xchg
sub
test
adc
mov
push
xchg
out
in
fsubr
add
push
push
pop
mov
mov
lock
jb
fs
lret
sbb
mov
aas
pusha
cmp
sub
fisttpl
xor
xchg
mov
xor
or
push
jns
adcl
jg
nop
sub
in
mov
xor
adc
mov
push
aaa
push
pop
add
test
in
mov
xchg
sarl
ljmp
imul
cltd
mov
sbbl
divb
scas
adc
xchg
mov
adc
jnp
push
mov
jns
xchg
adc
mov
insl
scas
insl
rcll
std
fwait
stc
js
ficoml
xchg
ss
je
call
dec
jo
adc
gs
mov
jbe
loop
inc
push
push
call
ss
fists
adc
je
mov
inc
push
rclb
mov
addl
imul
popf
test
cmp
jge
js
xor
xor
xchg
ret
and
scas
testl
clc
pop
xchg
movb
xchg
ret
or
cmp
stos
lahf
mov
cld
imulb
int3
ss
lcall
jmp
xchg
clc
mov
stc
or
pop
jb
inc
mov
outsl
cmp
push
pop
scas
xor
adc
jns
mov
lret
sub
ja
and
inc
pusha
mov
test
mov
imul
test
jmp
pop
push
mov
xor
cmp
or
pop
or
sub
add
or
mov
shrl
js
jle
aad
sbb
mov
dec
ret
inc
adc
cmp
stc
push
jp
loopne
insb
daa
clc
pop
mov
out
pop
jnp
inc
xchg
dec
loop
inc
outsb
jbe
inc
lret
sub
push
jp
int3
cmp
mov
popf
rclb
xlat
pop
imul
xor
mov
stc
sbb
sti
cmp
ljmp
cmpsl
lods
adc
dec
pushf
popa
mov
cli
shlb
pop
aas
lss
xlat
push
imul
push
xchg
inc
or
lods
jecxz
push
je
mov
lods
mov
popf
mov
cld
data16
add
add
cmpsb
rol
notb
popa
add
and
imull
into
adc
cld
mov
insb
inc
int
out
cmpsb
cmp
insl
sbb
aas
subps
mov
icebp
test
arpl
not
mov
mov
push
mov
adc
dec
mov
bound
add
nop
add
push
inc
push
xchg
loopne
xchg
addr16
jnp
int
xchg
and
hlt
pop
out
and
in
ss
rorl
imul
mov
add
aad
sbb
int3
hlt
call
mov
xorb
sub
scas
in
out
mov
rorb
sbb
ja
scas
mov
repnz
xchg
frstor
dec
push
jmp
daa
fs
xor
lea
add
or
xchg
imulb
cs
in
test
repz
mov
in
xor
pop
pop
or
xchg
sbb
pop
and
jp
inc
push
insl
stos
adc
sarb
lods
orb
popa
push
or
dec
xchg
inc
mov
adc
jecxz
and
add
adc
dec
fstpt
xchg
bound
cmpsl
sub
pushf
fs
lock
inc
jo
inc
cmpsl
xchg
imul
sub
loope
imul
pop
sbb
mov
add
sbb
ss
pop
push
int3
mov
fdivrs
mov
sub
or
out
sbb
add
jmp
dec
jg
hlt
lock
cmp
mov
mov
and
adc
mov
out
ja
cld
dec
jl
out
xlat
or
mov
push
movsl
mov
test
xchg
jo
add
mov
jo
mov
inc
xor
into
inc
sub
nop
pusha
leave
mov
int
sub
pop
fstl
add
data16
lret
mov
aad
mov
or
bound
out
std
or
cmc
dec
jbe
push
adc
jecxz
nop
nop
pop
jg
enter
adc
mov
xor
add
pop
pushf
mov
lea
inc
out
inc
or
xchg
lahf
shrl
add
cli
add
lock
ja
leave
cwtl
and
lret
out
hlt
outsl
xor
out
push
mov
addr16
and
mov
jbe
mov
xor
push
jp
sub
lcall
mov
xchg
in
xchg
mov
out
mov
pop
xchg
mov
test
and
jo
add
xor
pop
fsubrp
jne
nop
shlb
daa
mov
lds
add
mov
cld
jne
out
sub
add
test
das
fbstp
out
or
mov
pusha
jle
lret
or
std
and
and
pop
sub
nop
push
sbb
hlt
xchg
jb
push
insb
mov
out
cmc
pop
loopne
inc
xchg
jmp
cmp
or
adc
aad
sar
sbb
pop
sub
cmp
dec
sbb
fnstsw
adc
dec
jmp
mov
aad
ret
or
iret
mov
push
and
repz
push
jge
adc
loop
or
cltd
addr16
arpl
adc
fwait
pop
addr16
adc
cwtl
test
sub
push
xchg
xchg
inc
into
orb
fwait
or
inc
cltd
jo
nop
rorl
jnp
xchg
addr16
xchg
mov
jecxz
add
add
int3
nop
push
sub
push
sbb
ret
adc
mov
repnz
dec
decl
adc
jb
loop
push
sbb
cs
roll
sbb
push
inc
mov
mov
push
lahf
insl
scas
mov
fisubrl
xor
mov
pop
mov
lock
idiv
push
scas
jge
sub
xchg
pop
sbb
addr16
mov
not
pop
sarb
ss
or
test
sub
inc
adc
icebp
aas
sub
inc
xlat
mov
subl
dec
pop
adc
dec
cmp
jmp
ret
sahf
fisttps
ja
lods
iret
and
sbb
and
fldl
mov
test
add
cmp
jg
xchg
hlt
rorl
flds
rclb
xor
cmp
aad
mov
dec
jae
lret
rclb
call
mov
push
jle
inc
cs
mov
jl
push
xchg
lds
add
cmp
adc
lret
cmpsb
mov
les
in
in
jmp
xchg
fbstp
xchg
test
sbb
push
in
dec
test
mov
loope
jo
xchg
in
xchg
sbb
pop
lds
inc
leave
mov
xchg
sarb
jns
lea
ja
movsb
pushf
cli
sub
int
sub
sarb
dec
mov
icebp
mov
lock
js
inc
decl
rcll
push
add
and
mov
movsl
lock
push
out
sarb
in
pop
clc
popa
lahf
jmp
mov
movsb
sbb
aam
push
in
and
or
mov
mov
or
mov
xlat
jns
mov
out
fmull
lahf
rorb
jg
popa
cmp
bound
sbb
movsl
enter
lods
jne
mov
mov
cltd
jmp
jbe
sub
imul
hlt
push
scas
mov
sub
cmpl
clc
mov
push
xchg
aas
adc
popl
frstor
fcomps
inc
punpckhwd
xchg
cwtl
lods
add
test
ja
push
jp
rolb
fdivs
test
mov
push
inc
mov
mov
icebp
out
std
pop
add
mov
shl
pop
aas
test
cltd
mov
inc
int3
fs
test
out
fisttpll
cltd
cltd
xchg
popf
insb
pop
rcr
xor
popf
aam
fsubrl
daa
mov
inc
int3
lock
pop
jae
cmp
or
daa
pop
or
pusha
push
popf
add
mov
std
cmovo
mov
js
push
aad
inc
test
rcr
adcl
mov
xchg
cmp
or
add
jne
sbb
adcl
cmpb
xchg
dec
mov
inc
aas
lods
les
lahf
xchg
stos
mov
inc
scas
int3
and
test
pop
cmpl
rorb
jle
push
mov
je
jb
insl
test
shr
push
xchg
in
filds
repnz
jg
xchg
cmp
or
pop
mov
pop
int3
aaa
jmp
or
jne
pop
into
imul
mov
cltd
jo
xchg
mov
xor
mov
or
xor
dec
std
notl
insb
lahf
push
mov
je
sbb
xor
xchg
dec
add
sub
nop
lahf
stos
mov
aas
lret
sub
mov
sub
dec
lds
test
mov
loop
cmp
inc
mov
into
jg
jg
lret
neg
mov
cltd
dec
xchg
inc
repnz
leave
hlt
or
xchg
leave
cmpl
out
xchg
sbb
sub
int3
jns
aaa
shll
or
rcl
mov
sub
inc
jmp
outsb
enter
iret
dec
cmpsb
mov
mov
cmp
aad
sarb
sbb
inc
cmp
mov
fistpll
popf
icebp
das
dec
jne
push
in
push
push
shlb
shlb
out
mov
pop
or
or
pop
cld
mov
subb
int
inc
sarl
ds
jge
push
adc
test
jae
int
loop
xor
outsl
push
mov
and
mov
jae
lods
jle
mov
sbb
or
mov
jecxz
aam
sbb
inc
dec
es
xchg
rcll
jne
subb
adc
jb
scas
int3
adc
add
cmc
ljmp
xchg
stc
dec
and
ret
stc
cltd
push
mov
adc
orb
test
push
out
imul
aam
and
mov
ret
xchg
cmp
xchg
xorl
and
iret
adc
adc
mov
cmpsb
or
mov
cmp
mov
pop
stc
dec
shlb
pop
je
icebp
lret
aad
push
mov
in
cli
and
inc
and
fsubr
movsb
shrb
fxtract
inc
rcrb
mov
lds
add
mov
aas
jecxz
call
mov
mov
imul
jle
js,pt
cmp
inc
fiaddl
dec
sbb
popl
mov
call
sbb
sub
add
sbb
fimuls
mov
popf
les
sbb
mov
aam
mov
ss
shrl
cmp
iret
cli
pop
movsl
mov
fs
stos
push
fs
lods
ret
mov
cli
inc
mov
fstpl
xor
add
sti
out
ss
jecxz
adc
jno
ja
icebp
loopne
mov
jnp
lods
pop
add
or
shlb
shrb
insl
negb
mov
outsb
imul
mov
les
subb
jne
adc
in
xchg
imul
mov
fs
xchg
jmp
fs
fisubrl
add
paddb
mov
lcall
xor
inc
mov
and
rcl
xor
lret
fs
jne
lds
inc
fbstp
adc
pop
aas
push
dec
test
push
jns
inc
pop
shlb
inc
cmc
insb
hlt
aam
cmpb
lahf
sub
xchg
and
xchg
data16
cmp
lock
jle
jo
popf
mov
adc
hlt
jno
pusha
pop
jae
or
out
addb
clc
mov
push
in
ja
out
hlt
mov
xlat
popf
jmp
push
adc
adc
orb
pop
mov
xchg
cs
dec
fstl
aad
aad
push
decl
xchg
or
xor
fabs
xchg
xorl
push
mov
mov
jg
xchg
add
pop
shll
pushf
nop
push
repnz
testl
je
or
aas
mov
shlb
jge
repz
jb
repnz
imul
lahf
je
inc
mov
icebp
inc
pop
pop
pop
flds
cmp
push
or
push
lret
in
push
xchg
insb
and
xor
clc
lret
cmp
dec
cltd
push
lods
lds
popl
loope
pop
mov
vaddpd
xor
addr16
push
sbb
push
and
cltd
push
pop
cmp
add
or
inc
aaa
insl
pop
int
rcrl
mov
fistl
test
rol
push
iret
jnp
jb
aam
xchg
test
int3
popa
pop
and
sub
fwait
mov
roll
sbb
test
fwait
in
std
mov
daa
loop
cmpl
insl
inc
push
leave
or
jns
push
pusha
xorl
in
rcl
shl
dec
leave
dec
dec
xor
cmc
pop
out
push
mov
sbb
sti
inc
jmp
mov
add
xor
lahf
in
enter
scas
fcomp
mov
ja
xchg
sub
sbb
loope
rcll
test
stos
jg
xchg
enter
test
outsl
sbb
popf
jbe
into
cmp
pop
into
mov
scas
add
push
push
lods
mov
inc
adcb
push
cs
in
sub
push
loopne
mov
jle
test
out
popa
adc
out
punpcklbw
xchg
sbb
rolb
pop
iret
lcall
test
push
jo
dec
mov
int
repz
jg
adc
dec
dec
xor
loope
cmp
lea
sub
dec
xor
out
xchg
mov
mov
clc
addr16
jnp
or
test
ret
xor
dec
sbb
movsl
xor
jb
pop
add
jmp
popf
loope
pop
pop
add
fimull
jmp
js
add
aad
dec
adc
imull
jg
fidivrs
xlat
pop
jmp
sub
cmpsl
inc
hlt
jae
adc
out
clc
shl
and
ret
fmuls
imul
xchg
push
fimuls
xchg
jo
das
add
test
xchg
in
pop
cmp
pop
xor
mov
mov
and
push
cmp
loope
push
or
and
push
cmpsb
jne
adc
inc
pop
sbb
cmpsl
and
addl
push
sbb
xor
popa
rcrl
jo
inc
sub
das
rorl
pop
mov
sbb
xchg
and
decl
pushf
add
movsl
out
fadds
dec
loope
mov
gs
sub
dec
mov
cmp
xor
push
cmp
cmc
cwtl
dec
test
xlat
mov
test
mov
jne
fcomps
push
and
cmp
ljmp
inc
out
sub
rcr
imul
adc
sbb
dec
xchg
popa
repz
lahf
push
out
outsl
stos
push
ret
mov
insb
push
inc
shr
add
shlb
inc
mov
pop
sbbb
sub
insb
sub
jmp
pop
cmp
mov
ret
ja
inc
stos
aaa
addr16
adc
adc
jne
adc
dec
jnp
in
aam
dec
loopne
test
pop
in
push
andb
add
pop
adc
das
mov
jno
lods
mov
cmpsl
add
stc
adc
pop
andl
add
and
lahf
or
lea
fldl
out
mov
push
loopne
xchg
idiv
pusha
lea
dec
or
insl
push
xor
out
mov
pop
cmp
push
mov
aad
icebp
push
data16
gs
pop
lahf
and
sbb
inc
js
dec
jmp
into
and
aam
mov
stos
push
adc
fwait
cmp
dec
xchg
sub
push
jns
fsts
mov
jbe
lods
push
scas
adc
pop
mov
test
imul
jb
push
fnsave
outsl
sub
arpl
fmuls
jbe
cld
iret
mov
xchg
subb
in
and
lret
xlat
dec
jmp
imul
out
push
mov
shrb
imul
inc
add
jmp
push
inc
repnz
adc
dec
adc
fsts
jp
push
or
aas
loopne
scas
push
mov
fcoml
add
cltd
mov
out
add
jno,pt
ja
addb
jg
adc
out
jecxz
and
sbb
std
lods
js
xor
mov
mov
daa
and
adc
mov
and
adc
push
jne
outsl
jo
in
aad
in
sbb
fdivrl
rcrl
stc
cmp
lods
mov
jbe
push
push
xchg
xor
push
test
push
fcompl
ds
cli
sbb
mov
dec
sahf
push
jge
mov
pop
into
fsubrs
dec
inc
pop
out
ja
add
scas
mov
cmp
daa
mov
dec
lea
xchg
inc
lret
insb
pop
pushf
dec
in
dec
int
xor
sbb
dec
ffreep
dec
mov
fs
mov
and
notb
iret
cmp
lods
outsl
inc
out
scas
add
inc
or
push
adc
stc
shrl
mov
push
mov
test
in
cmp
fldcw
and
gs
rorl
pop
movsb
mov
jecxz
inc
and
jne
in
inc
into
push
cli
jp
pop
mov
push
push
and
jne
test
lock
pop
repnz
out
adc
int3
arpl
jns
mov
ss
pushf
xorl
cmpb
pop
insl
push
jne
leave
fldz
test
jne
cmpsb
pop
pop
push
jo
cld
aas
repnz
cmpb
xchg
pop
or
jmp
xor
jl
xchg
xor
jmp
int3
fcmovbe
lcall
or
les
pushf
jle
or
xchg
xor
xchg
test
imul
mov
mov
adc
pusha
or
mov
aaa
int
inc
sbb
mov
jl
mov
pusha
push
adc
xchg
inc
incl
or
inc
add
pop
and
popf
xlat
hlt
insb
pop
in
push
sarl
mov
dec
or
adc
push
inc
mov
mov
dec
mov
sbb
mov
sub
or
mov
inc
test
dec
sub
mov
sbb
test
add
push
cmpb
or
push
jle
mov
sub
pop
mov
add
cltd
stos
cmpsb
mov
test
pop
test
inc
jecxz
cld
dec
push
test
aas
jae
or
push
xchg
push
aam
lea
das
dec
mov
loope
push
add
and
or
jae
orl
leave
repnz
cmp
lahf
lock
push
jo
lret
aaa
cld
movsb
cmpsb
push
mov
mov
enter
xchg
jl
not
xchg
loopne
xor
aam
and
insl
loope
sub
lds
das
mov
loope
and
mov
xlat
js
sbb
int3
mov
mov
shr
xchg
xor
cmp
loope
fs
cmp
xchg
sahf
popf
mov
mov
pusha
pop
jg
and
mov
mov
arpl
mov
pop
cs
adc
test
popa
pop
adc
in
ja
pop
enter
dec
sub
cmpsl
adc
cmpsb
or
jmp
popf
in
sub
dec
pop
jl
push
dec
pop
test
push
imul
or
fwait
imul
imul
test
adc
test
stos
pusha
ja
push
lods
xchg
imul
aad
testl
in
jno
jnp
push
dec
adc
add
pop
sbb
and
xlat
and
lock
sbb
lods
ss
test
je
pop
push
popa
adc
bound
push
jnp
fidivs
shll
repnz
js
sbb
das
sarb
sar
sub
ss
cs
fstl
xor
jns
xchg
decb
inc
jne
jns
jle
pop
jl
push
mov
and
sbb
mov
outsl
icebp
mov
lods
xchg
sub
jle
sti
lret
mov
cmp
pushw
nop
out
imul
add
insl
pusha
xchg
jo
ja
test
aas
jae
ja
mov
sub
loopne
push
mov
jg
push
cltd
enter
stc
jb
int
xchg
add
dec
mov
aam
jmp
sub
jg
adc
jns
dec
mov
sbbb
mov
dec
jno
insl
add
jle
pop
xchg
xchg
rclb
fcom
cmc
pusha
loopne
icebp
dec
inc
lea
cwtl
jne
mov
fbstp
mov
sbb
xor
adc
sub
std
mov
mov
add
mov
out
fadds
sub
xor
mov
andl
dec
pop
xor
mov
or
jmp
xor
or
lods
lret
insl
clc
call
xchg
outsl
push
mov
enter
xor
push
or
iret
jmp
lods
bound
pop
aas
or
jmp
mov
adc
fisttpll
and
dec
mov
jne
nop
inc
or
mov
mov
enter
pop
xlat
test
jae
int
andps
loopne
push
add
xor
mov
xor
fstp
imul
test
je
xchg
pop
pop
push
stos
sub
subb
push
push
cs
push
mov
ljmp
mov
lds
sbb
jb
sub
ret
push
sbb
mov
sti
das
mov
xchg
out
stos
push
mov
sub
jno
outsb
lret
or
loope
out
sbb
pop
xchg
sbb
fwait
dec
jbe
inc
push
sbb
push
test
sbb
aam
adc
aas
hlt
loop
jb
jb
test
push
add
jbe
pop
outsb
pop
push
mov
and
jle
fs
jne
xor
mov
adc
and
jp
fistl
rcll
push
dec
sbb
cmc
or
scas
inc
push
xchg
xor
out
push
mov
pop
sahf
jnp
cmp
mov
inc
pop
pop
cwtl
push
xchg
mov
and
lock
fldt
sub
mov
stos
test
or
repnz
jne
data16
mov
pop
cmp
test
das
xchg
icebp
int
sti
jae
enter
adc
mov
int3
inc
scas
test
ljmp
mov
sbb
in
addr16
dec
mov
sub
xchg
add
xor
dec
negl
mov
fisubs
cmp
dec
add
push
jbe
fisttpl
ja
dec
jno
push
pushf
sbb
iret
out
arpl
jb
call
mov
xlat
fwait
pusha
gs
push
lock
inc
adc
pop
mov
ror
sti
adc
jae
or
insb
sub
cmp
call
stc
sarl
sub
jbe
shlb
into
into
fsts
xchg
xchg
jg
mov
out
xor
push
cmpl
xchg
xlat
dec
mov
mov
sbb
and
sbb
xor
das
and
test
repnz
jl
pop
lahf
lods
xchg
es
pop
les
movsl
insb
mov
aad
push
mov
test
popa
insl
stos
leave
call
jecxz
int
nop
cmp
sbb
xchg
vmwrite
or
mov
das
pushf
xlat
pop
outsb
or
inc
jmp
mov
lods
out
jne
and
mov
lcall
xor
js
lds
mov
test
inc
das
ret
test
jne
fcmovnu
shlb
sub
or
cmp
mov
js
scas
adc
sub
push
dec
jmp
mov
jbe
cmp
js
pop
cwtl
out
pop
pop
sbb
xchg
ds
pop
test
push
inc
push
jbe
dec
pop
pop
lods
pop
xchg
shl
loope
sti
adc
fs
pop
push
xchg
rcl
bound
jbe
pop
xor
int
out
push
shl
inc
or
xchg
jns
lock
icebp
mov
add
xchg
pusha
pop
jmp
jnp
jl
mov
inc
idivb
sub
adc
push
sbb
mov
cmp
lods
mov
inc
in
push
xor
jno
xor
and
inc
scas
cli
cmpsb
jl
add
sub
rorl
dec
jnp
adc
sub
or
fimuls
lods
lret
mov
mov
scas
inc
ja
pop
jmp
jecxz
dec
pop
hlt
sti
sub
sub
jbe
in
or
jne
sahf
cmp
in
mov
rorb
or
xor
mov
sbb
jmp
and
lahf
shll
jp
mov
loopne
test
enter
push
jae
or
mov
dec
jno
sub
test
xchg
push
call
inc
arpl
je
das
mov
frstor
popf
icebp
popf
fisttps
sbb
push
lcall
sahf
and
movsl
fnsave
clc
push
notb
pop
push
mov
or
popf
ja
dec
fs
add
jno
fisubrs
test
lods
jns
dec
pop
push
dec
pop
push
mov
fidivl
mov
mov
cs
inc
cmc
or
hlt
call
inc
lods
sbb
jo
lods
mov
fwait
int3
fsubs
ljmp
adc
and
popa
negl
jb
mov
xlat
aas
sbb
mov
dec
cmp
adc
mov
jmp
pop
jge
inc
rolb
pop
or
das
ret
cmp
push
imul
mov
ja
inc
lock
fldenv
mov
pusha
pop
adc
jnp
jle
dec
and
pop
imul
lods
test
jns
xlat
mov
outsb
mov
hlt
pop
dec
insl
push
cmp
fisttpl
aad
mov
cmp
cs
fs
nop
xchg
vcvttps2dq
jb
andb
imul
or
inc
pushl
mov
push
add
adc
xor
dec
rorl
push
hlt
sbb
push
ficoml
lock
mov
push
fdivrs
sbbb
cmp
shrb
adc
xchg
scas
xchg
idivb
sub
sbb
movsb
rol
subl
xchg
adcb
mov
sarb
cmp
aad
inc
je
icebp
ds
ljmp
xor
stos
popf
cmp
pop
out
xchg
sbb
jmp
push
dec
das
sbb
jb
mov
lods
adcb
enter
and
push
push
js
jl
push
movb
mov
pusha
and
jle
push
imul
in
imul
test
sbb
aaa
mov
pushf
and
fwait
into
ljmp
icebp
mov
xchg
loopne
jns
icebp
shr
adc
lods
addr16
jno
inc
in
add
out
aad
icebp
adc
std
and
jne
aam
add
dec
mov
insb
daa
insb
pop
xor
jbe
mov
push
or
inc
xchg
dec
jns
ja
in
xchg
sarl
aas
fldl
fiaddl
daa
push
in
fdivrp
ret
xor
dec
aad
lds
pop
js
iret
mov
mov
sti
jns
xor
dec
sub
sbb
adc
mov
pop
xor
push
lcall
shll
sbb
mov
pop
jae
iret
insl
adc
jbe
test
in
ss
jp
call
sub
bound
shrb
pop
push
ljmp
ss
cli
xchg
jbe
test
stos
mov
and
int
dec
rclb
sub
xchg
or
add
push
sarb
fnsave
bound
outsb
stos
rclb
xor
iret
ret
adc
jno
adc
sub
and
dec
in
test
clc
jp
xchg
sub
mov
sbb
repnz
rclb
push
pop
andl
push
scas
rcl
lahf
pushf
xor
mov
je
jg
sbb
mov
mov
mov
pop
loop
scas
imul
jg
xor
mov
test
pusha
fisttps
in
adcl
clc
sub
jo
test
push
jmp
test
add
lods
les
ljmp
or
mov
or
pop
jno
mov
ljmp
xchg
outsl
push
jne
pop
pop
pop
in
xchg
mov
lds
out
je
xor
and
les
xor
inc
addl
and
add
xor
sbb
ja
or
pop
and
lret
cli
out
shll
jo
mov
arpl
mov
lods
outsl
scas
notl
push
inc
insb
xchg
or
mov
clc
xchg
jle
mov
fsubrs
mov
sub
cs
rcl
adc
push
insb
xor
div
in
and
or
aaa
mull
jb
adc
fadds
jno
xor
mov
fs
mov
adc
sarl
push
frstor
push
xchg
shrb
test
fiadds
xchg
inc
in
ljmp
cmc
add
jle
scas
pusha
add
les
add
mov
gs
cmp
mov
jp
add
pop
cs
jle
fistpll
movsb
push
mov
xchg
or
push
adc
iret
das
mov
lahf
arpl
adc
sti
out
callw
imul
xor
xchg
inc
pop
lahf
jg
notb
cmp
jae
pop
scas
jbe
and
mov
xor
ret
mov
push
subl
cmpsl
jmp
jae
gs
sub
add
sarb
cmc
xor
ret
adc
mov
add
mov
xchg
sub
adcl
xchg
cwtl
push
jg
jl
jno
mulb
enter
mov
or
pushf
mov
pop
lods
sub
sti
call
loop
out
call
insl
in
sbb
inc
mov
jecxz
int3
ljmp
icebp
shlb
aaa
cs
pusha
mov
nop
and
inc
ret
mov
aam
into
cmc
mov
ds
cmp
fwait
subb
adc
mov
repnz
pushf
faddl
movsb
xchg
popf
shrb
pop
jnp
xor
cmpsb
add
or
push
pop
push
jbe
incb
inc
add
mov
or
add
mov
nop
testb
notb
dec
fistl
repnz
jno
out
fcmovnbe
popf
leave
inc
adc
push
imul
or
mov
dec
sub
push
push
push
jp
adc
jb
flds
repnz
sbb
and
sub
stos
and
jbe
mov
jp
scas
mov
adc
mov
sub
movsl
pusha
icebp
mov
cmp
shll
js
or
test
cmp
fdivl
pop
push
sbb
jo
cli
scas
inc
aad
xor
iret
mov
fidivrl
cmp
mov
mov
xchg
mull
mov
lock
push
je
mov
pop
daa
xor
mov
pop
stos
and
and
nop
or
xlat
imul
mov
push
shlb
xchg
pop
lock
xchg
les
mov
call
push
inc
shrb
xchg
xchg
sub
divb
sub
jnp
and
dec
dec
es
pmaxsw
jb
dec
cmp
dec
xor
and
repnz
or
add
mov
call
push
push
mov
mov
aas
in
mov
loop
dec
filds
ja
ja
add
pushf
loopne
fcmovb
fbld
cmp
insb
lea
repz
jg
pop
jae
mov
aaa
inc
mov
into
sbb
iret
aam
mov
mov
jns
cmp
lcall
inc
push
out
adc
pop
xchg
push
aaa
push
sbb
js
mov
add
xorl
xchg
into
mov
popa
imul
pop
js
ds
lods
movsl
or
add
dec
imul
xchg
add
push
and
in
sbb
push
jb
mov
lods
xchg
scas
or
xor
lret
cli
and
and
imulb
mov
lcall
imul
test
pushl
inc
in
jns
cmpsl
imul
or
in
mov
mov
push
inc
add
inc
pusha
nop
test
add
call
dec
stos
lods
inc
cltd
icebp
mov
push
fs
mov
xchg
maskmovq
notl
push
add
xor
cli
push
scas
aam
data16
push
gs
add
subl
lret
mov
inc
mov
popf
into
cli
or
pop
fstpl
or
jnp
mov
push
push
push
sub
inc
sbb
mov
pop
inc
ret
lods
sti
cmc
aas
mov
adc
ds
cmp
fimuls
fst
jmp
pop
inc
push
shrl
and
sub
pop
sub
inc
add
cmpsl
popa
or
insl
gs
repnz
mov
cmpb
sarl
imul
shlb
push
jne
loopne
shr
jmp
adc
push
outsl
xor
addr16
jb
orb
mov
loopne
mov
lea
cmp
add
or
insb
mov
mov
imul
mov
push
test
lods
mov
lahf
add
pop
push
and
out
js
call
imul
mov
test
xor
clc
das
inc
dec
xchg
nop
insl
jae
or
les
xchg
cmp
sbb
aad
cmp
popa
push
jno
negb
and
es
mov
and
pusha
mov
pop
xchg
iret
in
sub
ja
push
scas
lahf
or
out
push
fistpl
out
inc
sbb
gs
bound
dec
xor
push
in
lods
out
lea
in
subl
dec
add
outsb
or
push
cmp
cmp
sahf
xor
imul
les
sbb
xchg
gs
fmuls
dec
mov
push
int3
sub
cmp
jns
leave
popa
push
inc
and
dec
push
sub
test
frstor
or
push
push
pop
lret
lods
je
xchg
jge
jp
xor
or
mov
push
or
cmp
dec
push
cmp
lock
push
loopne
in
gs
mov
imul
adc
fistps
jbe
mov
les
xor
dec
mov
add
ror
sub
dec
data16
xorl
dec
pop
xchg
add
ret
push
sahf
jmp
cmp
push
cmpsl
cmp
add
call
xor
push
ficompl
cltd
rorl
jno
mov
loopne,pn
data16
mov
and
sarl
pop
stos
enter
pop
lods
js
repz
cli
add
gs
pop
push
rclb
xchg
cltd
jp
icebp
cli
aam
ljmp
push
insl
fcmovnbe
lds
lods
or
stos
xchg
jp
divb
inc
mov
push
sahf
cmc
out
int
call
cld
xchg
popf
cwtl
sub
out
in
mov
int3
dec
stc
cli
cmp
inc
cli
into
scas
pop
or
in
push
testb
hlt
in
lahf
mov
push
mov
lcall
insb
jbe
cmpsl
mov
push
pop
cmp
dec
sbb
add
lcall
test
jp
lods
sahf
insl
mov
jo
out
imul
or
add
xorl
or
shll
ds
in
push
jae
jae
lock
or
les
jmp
and
pop
push
cmp
out
lods
rcrl
jge
jmp
adc
enter
lock
pop
sub
out
lds
pop
cmp
sbb
fmul
push
inc
jae
outsl
les
sub
fsts
fcmovnu
inc
mov
fidivl
jnp
jnp
sarl
sub
or
mov
cld
inc
cwtl
add
in
add
sbb
jne
shl
pushf
mov
or
mov
sbb
sub
sar
xor
test
cmc
jg
cmpsb
push
mov
mov
mov
mov
ja
pop
cmpsl
sbb
test
dec
push
ljmp
xor
cltd
jl
fisttpll
pop
mov
in
leave
les
adc
gs
lret
push
lods
inc
jecxz
nop
adc
adc
test
pop
and
mov
int
adc
mov
lahf
xorb
lret
pop
popa
dec
mov
aaa
pop
push
jle
xchg
aam
daa
dec
xlat
xor
mov
push
js
dec
rorb
out
push
cs
xor
dec
cmpsl
cli
mov
add
push
and
add
push
sbb
and
jns
xchg
dec
out
cmp
fcmovu
repnz
rcrb
fidivl
sub
outsl
cmp
fwait
daa
mov
xor
shrl
mov
loope
rdmsr
mov
xchg
fs
and
ja
scas
icebp
xchg
and
in
and
lods
xchg
pop
out
xor
push
mov
mov
inc
xchg
cwtl
push
and
pusha
outsb
rorl
cmpsl
inc
aam
lock
ds
in
mov
pop
xor
mov
inc
cmp
jns
mov
mov
je
push
test
std
dec
iret
test
addl
outsl
sub
fstp
cmp
mov
mov
cwtl
sub
jbe
push
dec
mov
and
push
xor
aaa
or
lock
fsub
imul
jp
gs
pop
jmp
ret
sub
jle
adc
andl
shlb
leave
jns
mov
dec
js
adc
movsb
aad
push
pop
adc
loope
pop
xchg
mov
pop
aad
fmul
mov
xor
sti
pop
jne
fistpl
add
inc
jnp
scas
cmpsb
insb
enter
setnp
call
fwait
push
xor
cli
and
mov
mov
adc
xor
add
cmp
out
test
mov
icebp
loopne
mov
das
sub
popa
shll
or
imul
arpl
push
dec
mov
in
jmp
rcl
jecxz
pop
sbb
pop
sbbb
mov
xchg
push
lcall
inc
dec
fstl
mov
shr
movsl
getsec
je
adcl
mov
pop
mov
xchg
rorl
xchg
or
movsb
push
rcrl
xchg
pop
jne
idivb
aam
dec
outsb
shrl
je
pop
inc
shll
mov
adcl
xchg
add
mov
test
sub
xor
mov
xchg
mov
test
xlat
jecxz
out
mov
mov
pop
pop
hlt
xchg
sbb
jge
mov
sbb
xchg
das
movsl
icebp
inc
mov
cmp
fnstsw
cmp
mov
lds
and
jmp
stos
test
jg
dec
aas
imul
mov
mov
sbb
shr
mov
xchg
mov
and
jmp
jg
jmp
outsb
push
cmp
ret
jns
ret
push
ja
aaa
dec
insl
adc
aaa
test
lsl
pop
mov
mov
mov
sarl
push
mov
aad
jnp
aas
loop
sbb
xchg
jmp
fistpl
data16
push
pop
jecxz
sbb
in
sahf
xlat
inc
arpl
pop
mov
cwtl
mov
sub
popf
sahf
mov
mov
fcmovb
pop
out
xchg
out
jno
mov
sarb
jns
mov
in
push
sbb
adc
std
or
sahf
icebp
jb
mov
and
cs
ficompl
stc
push
das
loope
in
setb
pop
push
ss
pop
mov
adc
test
mov
lea
xlat
cmc
les
inc
xor
xor
lods
addb
mov
push
jns
cli
popf
dec
cmp
or
jbe
aaa
jne
stc
lock
jmp
nop
inc
fpatan
mov
pop
jg
pop
push
xor
jle
mov
dec
adc
sbb
cmp
aam
dec
lret
lcall
das
daa
subl
adc
jo
inc
mov
gs
mov
inc
ss
aad
rcl
jne
sbb
jne
push
stos
and
ds
sub
loope
push
xor
pop
add
add
fildl
mov
xor
lods
mov
jmp
jb
xchg
scas
mov
add
push
pop
and
in
scas
push
mov
sbb
or
pop
popa
inc
fnstenv
pushf
cld
mov
mov
lahf
fdivl
mov
jge
jne
cmp
jmp
add
fisubrs
movsb
in
cmpl
imul
fbstp
push
lea
jl
or
adc
fmull
pusha
fcom
or
cmpl
adc
cmc
push
mov
jno
in
xor
movsb
insl
lret
mov
xchg
sbb
sbb
sub
and
shll
cmpsl
push
scas
out
pop
dec
add
mov
shll
in
jbe
pop
mov
xor
and
mov
mov
loope
cmp
imul
stos
push
gs
mov
sub
test
adc
out
lds
icebp
cmp
cmp
mov
aad
and
in
adc
popa
push
xchg
sub
scas
inc
fsubrp
ret
dec
cmpsl
inc
les
dec
push
sub
rep
xor
js
sub
addl
mov
mov
xchg
or
or
jmp
loope
ss
aas
rcll
pop
shll
mov
jns
and
lds
mov
add
or
fadds
mov
mov
mov
dec
sub
or
pop
mov
cmp
jae
jg
dec
jno
pop
int3
or
xchg
cltd
xlat
imul
cmp
mov
xchg
adc
in
mov
fadd
out
out
cmpl
mov
into
movsl
xor
outsl
subb
adc
xchg
pop
xchg
add
pop
jmp
add
mov
and
mov
test
sub
cs
xlat
lcall
inc
sti
icebp
push
adc
fwait
and
jno
add
movsb
jno
xor
inc
pop
jecxz
pop
lret
std
push
bound
orl
and
xchg
xchg
sbb
jne
ds
xchg
bound
arpl
push
jmp
pmullw
negl
lahf
mov
dec
mov
mov
stc
flds
mov
in
mov
push
push
sarb
mov
mov
pop
jns
or
sub
sub
ja
inc
sub
fnstsw
push
add
fldl
hlt
testl
mov
mov
cltd
and
aam
lea
stos
cld
push
adc
pop
test
fs
jmp
mov
repnz
cmp
push
lds
ret
xchg
jnp
and
gs
dec
das
jo
repnz
inc
dec
out
mov
idiv
movups
clc
cltd
xchg
in
pop
jb
adc
xchg
adc
mov
xchg
adc
hlt
in
ljmp
cmp
lds
pushf
scas
cmp
loop
ficoms
dec
rorb
mov
or
inc
mov
mov
pop
mov
and
ljmp
mov
sub
push
ret
arpl
or
out
or
je
mov
fnstenv
sti
insb
lret
jne
addr16
mov
outsb
add
xlat
cli
aaa
dec
int3
enter
xchg
xlat
repz
sti
fnop
jecxz
ds
xchg
mov
pop
negb
test
xchg
es
jne
sbb
pop
and
ljmp
inc
fldt
jmp
inc
lea
iret
sahf
dec
xlat
inc
shrb
lahf
jecxz
jns
fcmove
inc
test
roll
jmpw
mov
xor
sbb
add
ss
inc
push
imul
dec
mov
mov
jl
jne
sti
insl
xchg
sub
sti
outsl
inc
out
mov
dec
imul
ja
jne
stc
les
mov
adc
outsl
lods
fistpl
stos
stos
pop
inc
mov
jmp
in
out
adc
dec
ds
scas
pushf
push
fidivs
mov
and
xchg
add
push
jo
flds
inc
push
out
inc
push
sbb
dec
xchg
push
test
mov
cmp
dec
out
addr16
rol
cmpsl
movsl
push
jno
dec
daa
popa
subl
jmp
mov
mov
jb
or
shr
mov
xor
pop
xchg
arpl
sub
rcll
dec
sahf
jp
mov
ss
fisttpl
outsl
cmp
fldz
ja
inc
xchg
xor
test
loope
add
frstor
ds
xor
fdivrl
fucomp
ret
or
scas
mov
les
jge
pusha
xor
xchg
cltd
ss
pushf
pop
icebp
mov
push
pop
xor
and
xor
stc
pop
inc
sbb
lahf
jl
out
or
push
sub
shll
inc
out
gs
sub
call
lock
mov
jo
jb
adc
jg
xor
add
xchg
mov
pop
subb
jb
cmp
repz
dec
sti
xor
xor
fwait
sbbl
rcll
jle
aam
popa
enter
mov
sbb
mov
test
push
aam
imul
xor
test
add
jge
fisttpl
dec
inc
inc
jge
or
dec
sub
add
or
out
lret
jo
pop
xchg
ret
mov
mov
inc
mov
in
aam
int
nop
arpl
dec
dec
gs
jnp
xor
data16
mov
test
xor
sub
fidivs
or
mov
jb
ja
cmpsb
outsb
das
bound
shrb
dec
addr16
sahf
out
inc
adc
inc
leave
sbb
mov
add
xor
dec
call
and
sbb
enter
dec
outsl
inc
test
xor
pop
test
lahf
fadd
mov
xor
sub
mov
jae
mov
cmp
sti
sub
push
je
dec
xor
scas
fwait
pop
xchg
jp
stc
push
dec
sub
popa
mov
push
fistl
std
aad
pop
mov
add
xchg
test
jge
xor
ret
mov
rclb
jo
addl
lock
es
scas
dec
je
sarb
aas
dec
in
xchg
dec
sub
mov
repz
repnz
push
push
cmpsl
arpl
and
mov
sahf
xlat
push
cmp
pushf
sahf
clc
aam
cmpsb
stos
ret
jnp
ds
mov
or
xchg
aam
mov
sub
inc
insb
add
daa
cmpsl
xchg
aaa
jb
adc
push
mov
xchg
fidivl
adc
pop
push
les
jmp
stos
popa
add
pop
pushf
sbb
lret
loopne
popa
pop
cmpsb
mov
cwtl
gs
aas
xchg
outsl
aad
xor
mov
mov
xor
and
xor
ret
jne
jmp
inc
arpl
repz
and
inc
in
xlat
sbb
cltd
js
xchg
enter
mov
repnz
nop
ret
and
mov
inc
xor
mov
push
and
shl
and
xor
dec
jno
xlat
and
ss
xor
xchg
xchg
jno
out
lock
ja
dec
mov
cmc
dec
adc
jne
lods
xlat
jge
clc
test
xlat
ljmp
pop
dec
je
aad
adc
js
out
cmp
dec
jl
xlat
adc
cltd
xchg
test
sub
das
in
push
mov
sahf
add
jecxz
dec
adc
ds
xchg
cmp
negl
dec
lock
or
outsl
push
aas
mov
or
push
xchg
sub
popf
test
inc
stos
aaa
es
or
mov
out
dec
cmpsb
adc
jbe
das
inc
inc
scas
out
movsl
dec
jae
mov
mov
in
loop
mov
xchg
xchg
lds
aad
rep
sbb
js
daa
fisttpl
lock
imul
mov
adc
dec
pushf
cmp
jnp
sarl
inc
in
push
call
jb,pn
lods
mov
hlt
lods
insl
sub
leave
hlt
cmc
pop
dec
dec
int3
test
lock
aas
inc
inc
mov
sub
in
or
cmpsb
jecxz
xchg
or
mov
pop
inc
and
out
dec
mov
clc
mov
sbb
jbe
out
mov
or
clc
mov
push
xor
sbb
jb
inc
xor
xor
add
mov
push
out
cli
pop
hlt
sbb
mov
mov
add
fdiv
jno
into
imul
xchg
jp
xor
inc
add
mov
test
cmpsb
add
aad
in
call
fimull
dec
ret
movl
pop
inc
xchg
imul
aas
popa
out
mov
or
xor
mov
scas
mov
sub
jnp
bound
xor
movsb
mov
pop
aaa
add
jl
out
xchg
lods
xchg
mov
inc
outsl
shll
fldl
stc
or
push
andl
cmp
aas
xor
mov
cltd
imul
jge
jp
fadds
andb
dec
jns
pop
sbb
pop
loope
hlt
dec
fsubr
xor
popa
data16
xorb
push
lods
pop
addr16
stc
pushf
out
cmp
mov
dec
popf
push
les
rclb
or
or
roll
xchg
mov
mov
fdivrp
adc
std
sub
jle
pop
mov
or
mov
in
cmp
dec
mov
jl
xchg
pop
fs
dec
je
pop
add
addb
incl
or
mov
fs
jns
or
fisubrs
sub
in
mov
and
imul
mov
adc
jnp
icebp
loope
mov
pop
mov
sahf
pop
xchg
push
cmp
mov
add
test
mov
inc
sbb
jmp
mov
shll
push
lret
cmp
jae
jmp
adc
lahf
adcl
enter
outsl
mov
or
push
fs
mov
pushf
xor
cli
hlt
xor
jmp
mov
jecxz
dec
dec
mov
rorl
and
jmp
rorl
mov
lock
scas
sbb
shl
and
mov
push
push
jae
mov
mov
push
or
jge
push
repz
fsts
fsub
sbbb
cmp
lcall
lahf
and
sahf
comiss
xor
or
sub
test
xchg
xchg
xor
jg
call
push
dec
lcall
call
jne
sub
lods
test
push
cmp
addr16
int
dec
push
imul
daa
xchg
xor
dec
push
outsb
subb
or
inc
mov
movsl
add
lahf
pop
jg
push
jmp
fisubrl
xchg
sub
xor
mov
inc
sbb
fisubs
sar
std
jbe
icebp
mov
loope
jmp
test
push
movntq
push
sub
push
sub
mov
pop
popa
mov
sub
fsubs
shlb
add
pusha
mov
xchg
out
push
ret
dec
test
aad
jne
jecxz
inc
aam
mov
mov
sub
jae
cwtl
pop
test
add
jo
cmc
inc
mov
repnz
pop
imul
adc
lods
dec
xor
std
dec
inc
insb
and
adc
mov
fs
xor
mov
push
sarb
xchg
adc
outsb
dec
push
fsubrs
aam
xor
or
push
xchg
cmp
ja
sbb
mov
adc
pusha
fs
fmull
xchg
mov
sbb
mov
addl
insb
mov
sub
and
popa
ret
insl
inc
pop
or
cmp
or
subb
test
loope
arpl
sub
enter
mov
or
insl
push
movsl
inc
mov
sub
sbb
ja
ds
bound
ret
aaa
test
ja
cmp
mov
inc
xchg
mov
adc
mov
cmp
xchg
push
cmp
pop
insb
xor
xor
push
imulb
pop
add
in
pop
pop
int3
jmp
sbb
dec
jbe
shrl
cwtl
dec
movl
xchg
jb
adc
jo
lds
cltd
mull
xor
add
in
cmp
mov
pop
dec
inc
and
insl
inc
and
push
mov
and
rorl
xchg
push
mov
pop
stc
sbb
test
mov
insl
sbb
or
or
jg
mov
adc
filds
and
out
cltd
sub
loop
out
out
dec
or
mov
in
fmul
mov
rcl
loope
pop
mov
pushf
out
or
call
add
pop
cli
insb
add
pop
scas
mov
pop
aad
sbb
cld
cmpsl
shlb
push
addl
roll
stos
rcrl
pop
leave
jecxz
or
repnz
sar
cmc
ljmp
dec
lahf
xchg
xor
lcall
imul
adc
push
and
inc
incl
shll
int3
adc
pop
jns
dec
jge
jns
out
adc
adc
fs
jl
add
in
jns
movsl
in
leave
fadds
add
mov
add
xor
stos
pushf
cld
je
fsubrs
mov
sub
xchg
rcll
shll
push
pop
ja
scas
sbb
in
hlt
fldl
jns
int
push
sub
add
popa
push
js
mov
push
or
xchg
jecxz
xchg
dec
jns
lods
loopne
insl
xchg
outsl
int
jne
pop
sub
ja
push
mov
xchg
mov
imul
les
mov
fbld
xchg
ret
cld
test
adc
fstps
xchg
xchg
test
gs
push
jb
neg
xor
mov
roll
in
mov
xor
rolb
jecxz
in
xor
fnstsw
pop
mov
or
add
jnp
xor
push
inc
jo
adc
mov
dec
cmp
push
or
lahf
inc
icebp
xchg
and
addr16
xchg
jne
pushl
jae
shl
pop
mov
loopne
lock
lcall
cmp
mov
cmpb
lret
mov
adc
jo
jb
push
fisubrl
jecxz
mov
or
add
ss
repz
cltd
add
imul
dec
or
xor
ret
out
pop
cmc
mov
push
mov
sub
jae
xchg
lods
sbb
out
push
shl
push
push
sub
arpl
mov
lods
jbe
xchg
xchg
sbb
pop
shrb
in
jbe
jle
mov
ja
loop
jo
fnstcw
jmp
fnsave
decl
stos
and
aad
adc
xchg
jno
jg
movsl
xchg
and
jb
ss
jp
xchg
sbb
and
push
cmc
or
cmp
nop
push
lods
jp
ja
sbb
inc
popf
popa
push
inc
pop
mov
mov
fadd
push
dec
or
je
out
sbb
mov
mov
jns
sub
push
loop
xchg
mov
mov
out
dec
jae
jmp
add
das
dec
sahf
xor
mov
or
pop
xor
sub
das
and
mov
sti
mov
notb
jbe
xor
jne
fs
int3
mov
aas
mov
xor
mov
std
adc
jo
dec
xchg
cmpb
jg
cltd
xchg
xor
jl
aad
imul
repz
mov
out
enter
popa
inc
sub
pop
out
push
sbb
scas
jbe
mov
jb
cltd
fwait
push
cmp
push
cltd
dec
in
sub
mov
enter
pop
sub
pop
call
add
pop
sbb
cmp
mov
xor
cmp
rcr
sbbb
repnz
dec
ja
xor
lods
in
sub
sub
shll
jno
sub
adc
inc
inc
lea
xor
icebp
cld
xchg
loope
sbb
int
out
mov
imul
dec
pminub
mov
mulb
xchg
xchg
aaa
add
mov
clc
outsl
test
jmp
jae
xchg
pop
push
inc
imul
lea
sub
or
fisubl
ja
xchg
xchg
or
test
mov
add
shr
push
and
adc
push
ss
pop
les
pop
in
lea
or
mov
push
xor
cs
or
and
dec
jbe
or
inc
push
enter
jns
push
mov
pop
push
std
call
adc
sbb
cmpsl
cmc
into
lods
cmp
xorl
mov
xchg
pop
arpl
cmp
adc
pop
sbb
insl
lahf
push
imul
inc
xchg
mov
mov
stos
cmp
cmpsb
dec
sbb
and
or
cmpsb
jmp
jno
sbb
scas
mov
in
inc
pop
push
jb
xor
push
push
xchg
jo
jnp
dec
pop
xor
test
xchg
imul
fisttpll
adc
or
aam
rorl
jg
add
cmp
xor
stc
pop
lods
mov
js
inc
mov
imul
jbe
inc
pop
divb
mov
lods
stos
lock
into
mov
dec
xor
aas
adc
push
in
mov
pop
dec
popa
push
lret
outsb
test
mov
jo
mov
xchg
add
mov
xor
idiv
jno
xchg
ljmp
dec
mov
push
repnz
fnstenv
aad
ljmp
xor
add
daa
push
sbb
push
mov
bound
lret
je
sub
je
ja
sub
test
dec
mov
push
aad
pop
dec
mov
pusha
jo
mov
mov
sub
fimull
or
aas
scas
mov
xor
imul
inc
jo
dec
shufps
test
push
es
jl
lods
pop
imul
xlat
adc
mov
adc
jae
addr16
adc
inc
nop
dec
xchg
xchg
loope
jb
inc
pop
mov
insl
inc
lock
pop
push
fsubl
fs
push
loope
imul
adc
mov
shrd
push
cmp
scas
clc
mov
mov
scas
sbb
hlt
repnz
repz
dec
loope
test
test
sbb
insb
shll
inc
adc
mov
outsl
pop
aaa
cs
imul
adc
pop
in
adc
loopne
cmp
xchg
dec
loop
jb
jne
lahf
push
mov
cmp
clc
cmp
or
pop
inc
das
ljmp
mov
mov
add
jmp
mov
mov
les
pop
in
into
cmp
mov
xor
mov
or
out
dec
dec
mov
dec
adc
pop
cmp
test
shl
mov
lcall
mov
pop
scas
jo
cmp
pushf
pop
cmp
xor
and
push
xlat
mov
shll
mov
push
inc
or
repnz
test
pop
mov
fisubs
dec
daa
cmp
movsl
add
dec
mov
loopne
std
adc
lea
loop
mov
repnz
adc
xor
jecxz
pop
sub
pop
repz
outsb
aas
xlat
stc
in
xchg
jecxz
mov
or
das
nop
jns
pop
inc
rcl
dec
mov
xor
xchg
imul
xchg
dec
hlt
inc
sti
addr16
or
loopne
in
sarb
daa
push
sahf
and
dec
mov
shll
scas
sbb
sbb
fsubl
notl
pop
pop
sti
dec
enter
xlat
push
and
fiaddl
xor
jne
hlt
mov
pop
dec
jnp
jns
loop
and
js
fcom
pop
mov
and
je
cmpsb
xchg
lock
cld
ds
lahf
mov
insb
ret
dec
lahf
outsl
dec
sbb
subl
sbb
cmp
push
daa
ss
add
xor
in
ret
ja
stos
data16
add
lods
mov
fnstenv
push
arpl
addl
loopne
sbb
inc
pop
sti
xor
jl
dec
mov
das
xchg
add
push
aad
push
jecxz
mov
add
xchg
cs
jmp
repz
cmpl
jns
fwait
jno
xchg
lsl
dec
rcrl
hlt
xor
dec
adc
dec
lret
xor
call
push
push
push
and
ss
mov
cld
or
pop
data16
mov
mov
adc
inc
cld
jne
lock
or
jmp
movsl
xchg
xchg
cmc
clc
push
outsl
xor
pop
scas
sahf
std
in
push
dec
cmpsb
cmpl
in
push
mov
push
pop
stos
jmp
jns
jmp
xor
xchg
int
xchg
xor
imul
xor
ret
dec
popl
pop
cli
aas
call
jmp
out
daa
jb
push
js
mov
dec
pop
lcall
test
pop
jnp
xchg
call
jo
loope
pop
push
in
xor
or
rep
mov
test
mov
nop
xchg
jg
pop
mov
jle
cmp
in
pop
add
imulb
test
mov
ds
lea
sub
push
mov
aad
test
loope
sbb
add
mov
pop
dec
xchg
inc
inc
repz
data16
cld
push
xchg
int
ja
cmpsl
push
xchg
pop
adc
in
add
xchg
jae
jnp
dec
int
push
insl
mov
scas
hlt
fwait
imul
and
pop
int
mov
ss
int3
fdivrl
ret
dec
shrl
mov
mov
out
test
cli
arpl
mov
bound
in
es
and
push
les
inc
pusha
sbb
test
and
adcl
stc
adc
fcomi
xchg
jne
das
ret
cwtl
push
jbe
inc
adcl
hlt
test
ljmp
dec
or
repnz
inc
mov
loopne
pop
rcl
into
jl
pop
xlat
leave
repz
or
xor
dec
or
cmpsl
pop
adc
insl
lods
pop
mov
xchg
push
jnp
inc
arpl
xchg
out
divl
insb
out
and
mov
rcrl
inc
ss
test
les
add
mov
testb
and
jge
mov
mov
add
jne
sub
push
stos
out
xor
xor
in
mov
xchg
fs
sbb
and
imul
data16
arpl
inc
movsl
inc
cmp
xchg
dec
jmp
jecxz
cltd
sub
adc
je
xchg
shlb
xchg
fcom
jge
lcall
jne
lret
inc
xor
cmc
push
stc
and
xor
or
push
repz
lock
sbb
dec
jp
pop
insb
inc
fisubs
out
int
add
add
in
das
fmuls
push
mov
mov
pop
mov
push
sub
mov
jae
enter
ja
leave
ficoms
clc
std
push
pop
and
loope
inc
dec
dec
mov
inc
lock
mov
mov
lock
add
pop
insb
mov
addr16
adc
adc
xchg
jle
jecxz
ljmp
push
sti
fsubs
mov
inc
mov
cltd
hlt
imul
in
test
push
leave
push
jnp
leave
shr
inc
mov
test
mov
shrl
mov
mov
pusha
int
mov
sub
lods
pop
xor
sahf
js
pushl
inc
test
mov
lock
in
dec
pop
in
add
cmp
sbb
add
in
pop
lock
sbb
popf
push
push
xchg
jle
add
aas
jne
or
mull
mov
hlt
call
cmp
lahf
push
mov
dec
fildll
or
lods
push
jno
push
test
pop
xor
je
or
jp
xchg
mov
xchg
add
sbb
dec
mov
mov
loopne
add
xor
sub
xlat
test
sbb
call
jno
xchg
roll
xchg
inc
scas
in
mov
stos
xchg
mov
jmp
repz
movsl
test
add
cmc
mov
dec
icebp
mov
aad
jne
fists
outsl
imul
jae
nop
pop
xor
or
pop
sbb
jle
mov
arpl
shrb
xchg
in
pop
cmp
add
jo
mov
adc
adc
push
push
pop
pop
jl
dec
iret
push
inc
lahf
pop
fstpl
dec
mov
and
sarl
loopne
testb
sub
sbb
adc
hlt
add
shrl
clc
ret
lock
out
xchg
pop
cmp
ret
pop
cltd
out
and
jecxz
add
out
mov
sub
cmp
fs
loope
rol
test
xchg
lret
jecxz
add
xchg
daa
xchg
xlat
adc
sub
jl
icebp
scas
push
adc
loopne
ss
xchg
out
in
lahf
ret
dec
data16
fcompl
fdivl
xchg
mov
hlt
add
cmp
mov
mov
insb
int
test
pop
or
mov
or
mov
loop
int
cwtl
pop
push
stc
mov
es
js
dec
xchg
pop
and
xor
test
push
xchg
stc
adc
lea
mov
stos
ds
mov
push
bound
andb
loopne
mov
rcrb
orl
dec
cmpl
jns
add
sti
stos
push
insl
mov
not
or
mov
mov
push
insl
inc
ds
nop
sbb
mov
jno
sbb
mov
ds
dec
stc
leave
dec
andb
setno
aad
repnz
cmpsb
mov
adc
jl
pushf
outsl
daa
out
fs
pusha
xchg
mov
push
fs
sahf
and
sbb
orl
lods
jp
add
add
imul
mov
pushf
aas
jne
std
std
lods
rcl
pop
scas
dec
xchg
fwait
dec
mov
or
mov
cli
adc
dec
jp
mov
loop
xchg
dec
popa
dec
in
andl
inc
dec
in
inc
jne
insl
or
dec
scas
sbb
and
imul
cwtl
cmpsb
addb
pop
insb
mov
jne
mov
jne
in
aas
arpl
cmpb
jecxz
jp
ja
mov
pop
or
shll
push
mov
xchg
sahf
icebp
and
dec
pop
arpl
add
rcrb
mov
and
icebp
sub
add
push
ja
cmp
sbbl
cmc
test
pop
aaa
imul
sti
movsb
jne
scas
xor
adc
add
or
test
push
cmpsb
jg
mov
imull
cltd
dec
pop
inc
pop
into
xor
js
in
fcmovb
sub
add
push
movsb
sub
repnz
or
jb
sub
pop
enter
dec
push
loop
adc
sbb
mov
sub
cmp
push
xchg
hlt
xchg
iret
xor
sbb
sub
fsubrl
out
outsl
pop
and
push
xchg
push
xchg
xchg
adc
dec
and
dec
jae
jnp
inc
jle
jae
and
sbb
push
jb
inc
add
dec
stos
in
sbb
adc
cmc
es
jnp
pop
and
popa
adc
mov
stos
mov
mov
or
scas
loopne
xchg
push
or
push
gs
test
out
scas
lock
cwtl
mov
leave
sti
imull
xchg
aam
fstpl
cmp
xchg
scas
xor
adc
xchg
jno
hlt
out
movsl
loopne
dec
push
xor
pop
enter
mov
ds
sbbb
mov
mov
lret
je
sbb
stos
xor
cmp
pop
push
call
dec
dec
mov
mov
shrl
cmpl
gs
dec
in
jge
mov
inc
xchg
mov
mov
dec
in
xlat
orl
int
jne
sbb
mov
movsb
test
insb
fwait
mov
sbb
insl
mov
shl
adc
mov
cmp
mov
aaa
iret
xchg
outsb
xor
int3
adc
push
in
add
out
call
rcl
dec
pushf
test
fidivrl
cmp
push
insb
pushl
sbb
sti
jle
cltd
add
cltd
jo
shr
cmp
sub
push
dec
jo
xor
or
mov
ja
xor
jno
inc
cmp
mov
mov
loope
pop
into
cmp
gs
xor
in
ljmp
cmc
sbb
lods
or
push
dec
mov
fcoml
jb
stos
test
je
push
xchg
fisttpll
cmp
pop
inc
pop
fldl
sbb
push
dec
push
mov
test
sahf
div
rcll
cmp
insl
mov
icebp
inc
cmp
popa
xchg
cmp
sub
inc
sub
inc
adc
ret
icebp
add
icebp
out
mov
aaa
sub
and
out
sbb
push
addb
mov
sti
or
inc
xor
and
sub
insb
nop
test
mov
loope
sbb
add
loopne
jge
or
lea
test
ss
push
jne
or
dec
stc
out
pop
aad
push
mov
jb
mov
inc
test
sub
out
sarl
mov
xor
push
or
xor
outsl
cld
mov
add
test
jns
lds
cmpsb
sbb
sub
dec
jp
cmpsl
pop
test
pop
stos
cmp
rol
or
mov
adc
or
mov
fs
jmp
mov
cltd
movsb
loopne
je
push
add
icebp
es
bound
movsl
inc
stos
gs
xchg
inc
push
pop
mov
shl
lods
test
fsubrl
pop
lds
jmp
adc
mov
or
xchg
andb
arpl
jae
pusha
imul
dec
jg
inc
test
insb
and
jmp
push
int
jecxz
mov
mov
lods
jae
lea
xchg
repnz
jp
xchg
cmpsb
push
ret
mov
dec
push
lcall
xchg
stos
and
mov
rolb
cmp
outsb
mov
out
mov
add
insb
pop
test
jae
arpl
cmpsl
jp
push
inc
mov
outsb
mov
mov
mov
inc
push
shlb
dec
mov
outsb
imul
jg
fdivs
mov
sub
cmp
cld
test
in
sbb
or
insl
add
cmp
into
mov
out
loop
push
loop
push
fucomip
dec
mov
mov
sbb
rcr
or
outsl
push
push
mov
jns
lock
cli
arpl
or
ja
data16
pushf
sub
push
out
xchg
push
stc
add
push
js
dec
roll
sbb
inc
arpl
imul
and
fcomp
jae
push
xchg
mov
xor
mov
es
scas
insb
mov
cli
push
sub
fiadds
and
jmp
pop
andb
dec
sub
push
lret
mov
mov
xchg
or
cmp
dec
iret
jp
push
stc
sub
popa
mov
dec
mov
jl
fdivs
xchg
push
ret
popf
cmp
jno
fnsave
mov
frstor
hlt
imul
repnz
jo
test
push
sub
mov
xchg
cmpsl
dec
xor
inc
scas
lea
cmp
xchg
adc
adc
mov
jecxz
sub
es
jge
cmc
jge
daa
iret
popa
xchg
call
mov
xor
jne
ja
arpl
test
mov
call
xchg
gs
cwtl
mov
mov
mov
sbb
jno
cmp
cmp
cld
mov
xor
adc
or
aam
in
xchg
dec
sub
lcall
aad
pop
jae
popa
xchg
aam
jmp
ds
addl
mov
gs
std
dec
jp
in
mov
mov
outsl
popf
lret
mov
xchg
scas
in
ja
add
dec
adc
frstor
fcomps
in
mov
sbb
xchg
outsb
jle
push
dec
lock
sbb
jmp
popf
stc
fdivrl
xchg
inc
loop
pop
dec
xchg
dec
adc
mov
ds
and
add
mov
mov
pop
mov
into
jp
leave
ja
mov
aaa
inc
dec
iret
outsl
dec
push
mov
xor
inc
cmp
lret
insl
fsubrs
pop
add
enter
stos
insb
shll
inc
hlt
dec
ss
lds
inc
push
ficoml
mov
lahf
mov
out
adc
mov
test
flds
add
push
loopne
lret
xor
xchg
ret
xor
push
mov
fiadds
imul
mov
test
or
xchg
mov
push
das
or
pop
inc
mov
sbb
sub
addr16
imul
stos
xlat
mov
push
push
mov
xchg
jle
push
cmp
loope
mov
cs
push
ret
or
or
cld
xchg
pop
out
cmp
mov
adc
xchg
inc
adc
xchg
jne
jg
gs
js
imulb
xchg
jnp
movb
cwtl
add
inc
mov
xchg
add
int
jl
pop
cld
lds
push
out
jbe
push
or
addl
popa
mov
inc
or
ljmp
inc
xchg
cmpsb
cmpsb
ret
mov
pop
xchg
xchg
test
cwtl
push
mov
fiadds
push
dec
dec
loope
cmc
mov
inc
in
imulb
xchg
push
sti
pop
pop
mov
sti
push
cld
add
es
mov
popf
inc
pop
inc
out
fabs
cld
mov
xchg
dec
push
sarb
cmpl
jge
mov
sbb
leave
call
push
mov
pusha
mov
cmc
lea
pop
dec
xor
les
mov
adc
jb
outsb
push
int
inc
icebp
addl
push
movsl
mov
mov
jl
idivl
dec
icebp
mov
push
insl
cli
mov
outsl
push
xchg
hlt
mov
xor
ficomps
cmp
push
pop
jmp
dec
adc
shl
mov
jo
imul
push
mov
stos
popa
sub
bound
mov
cmp
push
or
xchg
and
jle
outsl
push
or
je
loop
sbb
testb
jge
mov
fidivrs
mov
test
data16
int
add
repz
iret
inc
adc
mov
sub
add
dec
shlb
into
loopne
inc
pop
arpl
fsubrl
cltd
shll
jg
div
push
pushf
into
pusha
push
mov
sbb
imul
dec
fdivs
arpl
insl
mov
mov
and
aad
push
lods
lea
and
pop
xor
jmp
icebp
std
mov
mov
pop
hlt
pop
mov
std
push
lcall
insl
rolb
enter
mov
or
stc
iret
test
mov
or
push
pop
fdivrs
test
and
xorb
mov
in
xor
mov
cmp
nop
sahf
pop
aas
sbbl
or
loope
in
or
fdivs
mov
mov
daa
sub
push
stos
xchg
mov
mov
pop
dec
pushl
pop
int
int
movsb
aad
outsl
jle
fcomp
ds
repnz
xchg
mov
fistl
adc
push
xor
pop
testb
add
pop
test
adcl
aas
push
stc
mov
inc
mov
cmpl
cmpsl
loope
subb
push
adc
mov
add
ja
lcall
out
jne
push
cmp
cmp
mov
iret
mov
sub
repnz
xchg
inc
ss
inc
jge
ficompl
adc
mov
lea
sub
xor
mov
lahf
inc
cmpsw
jo
and
jecxz
mov
push
pop
loop
jg
mov
outsl
es
mov
pop
fstp
imul
inc
fdivr
pop
ss
mov
mov
push
bound
sbb
sub
xchg
sbb
cmc
fnsave
cmpsl
out
outsl
arpl
jmp
or
lock
movsl
mov
rcrb
pop
shll
test
into
adc
jecxz
lret
add
ja
mov
inc
ljmp
test
neg
xchg
loopne
mov
push
aad
mov
push
xor
cmp
movsb
and
cmp
pop
inc
movsl
xor
adc
dec
jecxz
dec
iret
popf
adc
daa
mov
aas
das
xlat
hlt
push
xchg
mov
stos
adc
sti
xchg
mov
outsl
lea
mov
sbb
xlat
in
nop
jbe
jecxz
movsb
lds
scas
scas
pop
sarl
sbb
xor
repnz
add
xchg
test
adc
cmp
dec
fldenv
aas
xor
or
les
xor
xchg
sub
imul
cwtl
xlat
popa
inc
leave
push
jno
mov
mov
xchg
push
adc
cmpsl
mov
xor
movb
mov
lock
cmc
shl
daa
xchg
icebp
ljmp
dec
and
das
lods
je
in
daa
mov
pushf
mov
cmp
or
outsl
lods
pop
cltd
aad
add
lret
and
in
xor
cmp
insb
xchg
in
mull
movsl
xor
orb
shl
cs
xchg
bound
mov
add
xchg
xor
adc
mov
enter
push
les
inc
pop
xor
cmp
addr16
cmpsl
or
add
icebp
pop
cmp
or
xchg
or
test
fwait
sti
sbbl
xorb
lds
add
sbb
dec
fwait
or
loopne
pusha
je
les
jns
dec
add
daa
push
inc
xor
and
sub
or
jp
or
test
fwait
addr16
cmpsl
cwtl
jge
addr16
xchg
mov
mov
xchg
hlt
push
iret
or
sub
pop
jge
xor
adc
jne
sub
pop
adc
loopne
inc
jbe
sub
pop
xorl
ljmp
or
mov
push
sbb
mov
inc
and
cmpsb
sbb
sarb
roll
pop
push
xchg
pop
jmp
lods
pop
mov
mov
inc
pop
pop
mov
addl
sbb
inc
xchg
mov
dec
test
pushf
mov
or
and
sbb
mov
in
aad
gs
or
or
mov
adc
xlat
mov
jnp
xchg
lds
adc
int3
cmp
mov
pop
cmp
cmp
loop
xchg
and
test
shl
fcoml
ss
pop
imul
add
aad
in
sbb
pop
lods
sbb
icebp
jle
and
jb
dec
and
movsb
punpcklwd
push
xchg
pop
sbb
push
xor
push
fwait
outsl
dec
add
sub
mov
cltd
out
popf
adc
fstpl
adc
jo
daa
jge
dec
or
inc
xor
mov
movsl
nop
fnstsw
arpl
inc
jp
jg
pop
jge
addb
cmp
jne
fistpll
and
sbb
popf
or
cmp
insb
movsl
out
int
imul
mov
scas
inc
cld
mov
xlat
add
or
jno
xchg
lcall
popf
insb
pop
mov
aaa
out
cltd
inc
xchg
fcompl
outsb
and
lods
mov
test
pushf
adc
xlat
sbb
call
fcoml
mov
add
repz
or
sbb
cmp
lock
jl
adc
jl
sbb
movsb
lea
lret
stos
mov
lea
rcrb
ret
add
sbb
ss
popf
mov
sbb
dec
call
popa
fistpl
shlb
xor
push
int
push
xchg
inc
push
adc
aas
hlt
sbb
mov
pop
dec
fdivrs
rcrl
imul
shr
cltd
cmpsb
inc
adc
cmp
mov
imul
add
pop
jns
cmp
jae
popa
lret
mov
test
or
push
jo
inc
adc
inc
add
pop
lcall
mov
mov
jle
stc
andb
jge
xchg
call
mov
xchg
push
imul
push
jnp
mov
pusha
push
mov
jle
outsl
xchg
dec
pusha
popf
push
pop
cmc
addb
popf
repnz
mov
jmp
sbb
out
idiv
popa
and
sbb
sti
shrb
ljmp
xor
icebp
jo
xchg
nop
mov
iret
adc
les
shlb
std
push
popf
pop
outsb
cli
out
imul
dec
jnp
mov
cmp
xchg
adc
sub
xchg
jl
faddl
push
cltd
jg
push
mov
lea
and
into
cmc
in
mov
mov
inc
ja
inc
adc
mov
jp
inc
mov
clc
scas
xchg
lds
push
and
push
mov
leave
cmp
cld
out
xchg
xor
and
inc
fwait
adc
push
popa
pop
call
arpl
sbb
aas
repnz
xor
xor
pop
cmc
fisubrl
sbb
inc
mov
sub
pop
pushf
test
jo
in
mov
xor
adcb
jg
jbe
inc
shrl
into
xchg
mov
push
sbb
dec
orl
and
adc
rcrb
adc
outsb
inc
rorl
dec
fwait
sub
jge
push
ror
add
jg
dec
pop
mov
lock
fisttps
sub
jae
push
pop
inc
inc
mov
iret
bound
dec
loopne
inc
fidivl
jno
imul
out
je
jecxz
push
int
decl
in
sti
or
cmc
mov
stos
into
lods
clc
jae
stc
push
cmp
ret
adcl
lods
into
sbb
bnd
outsb
jne
imul
pop
popf
lock
inc
push
jne
jge
xchg
sbb
xchg
imul
pop
jl
cltd
pop
adc
jmp
xorl
or
out
xchg
jne
jae
push
mov
xchg
sub
adc
or
add
in
mov
jp
gs
dec
jg
sub
add
push
nop
and
fisttpl
daa
sahf
pop
mov
lds
popa
out
ror
into
in
push
mov
aam
jge
and
xor
stos
roll
and
test
cmpl
xor
lahf
inc
aaa
ja
push
xchg
ficoml
dec
sbb
sbb
jne
cli
xchg
mov
ds
push
inc
cwtl
jnp
shr
mov
call
ret
xchg
cmpl
xchg
mov
movsl
xchg
dec
lods
mov
les
mov
jge
push
xor
dec
jecxz
repz
ret
bound
les
pop
dec
aad
inc
js
xchg
loope
dec
fldt
fidivl
loope
ss
mov
test
add
sbb
sub
sbb
xor
jbe
fmuls
jb
enter
test
dec
lea
mov
xchg
gs
call
pop
push
test
sub
leave
jl
mov
sub
mov
out
jg
js
daa
xchg
fs
pop
movsl
mov
daa
std
inc
das
jp
std
scas
push
mov
ljmp
icebp
mov
push
bound
dec
repnz
int3
xor
in
ja
bnd
or
nop
mov
jmp
and
jno
sub
xchg
pop
popl
stos
rcll
mov
pop
scas
xor
in
ss
lock
sbb
sub
int
add
inc
cltd
jg
in
push
sbb
mov
cmp
std
inc
mov
dec
ret
mov
push
stos
add
mov
push
lcall
adc
or
cmp
xor
in
ja
ret
xchg
pop
xorl
les
dec
push
fwait
mov
icebp
rclb
dec
pop
xchg
dec
ljmp
test
jmp
icebp
sahf
sbb
jo
xlat
or
sub
mov
imul
xchg
aaa
int
out
adc
adc
sbb
scas
es
pop
leave
addr16
and
mov
out
pushf
mov
flds
aas
mov
push
adc
push
test
fwait
into
pop
scas
jb
repnz
enter
xchg
mov
pop
pop
call
mov
mov
mov
jle
mov
in
dec
inc
test
mov
imul
inc
int
cltd
in
sub
push
mov
xchg
push
mov
dec
adc
clc
push
cmpsb
outsb
bound
dec
lock
test
adc
jb
mov
mov
xor
mov
mov
iret
out
jmp
xchg
sbb
sahf
mov
idiv
sub
jge
push
pusha
mov
jnp
aaa
cmp
mov
aad
push
insl
or
outsl
mov
mov
std
mov
xor
xor
mov
pop
push
not
jmp
dec
jp
loop
rorl
lock
test
inc
jo
jnp
fldl
leave
lcall
inc
insl
mov
loopne
xchg
pop
sbb
and
xchg
inc
mov
repnz
adc
and
jecxz
cmp
xor
subl
xchg
lods
dec
dec
add
lods
sbb
subb
in
pop
cmp
fnstsw
dec
mov
xor
aam
xor
fisubs
jo
mov
sti
dec
adc
dec
pop
xchg
testb
fucom
xchg
xor
cmpsl
jno
out
mov
xchg
lods
popa
mov
inc
lods
pop
xchg
cmp
push
call
shl
rcll
data16
mov
js
enter
push
push
adc
lret
lret
pop
lods
inc
das
ret
popl
cs
dec
icebp
leave
jb
fmuls
cld
mov
lahf
inc
fldenv
inc
rorl
push
testl
pop
cld
adc
data16
jmp
lret
int3
loop
cmpsb
mov
pop
lea
call
cwtl
rcrl
xchg
int
fistpl
ret
dec
rorl
adc
mov
insl
stos
hlt
repnz
mov
roll
adc
adc
jno
adc
mul
bound
popf
mov
jns
ret
pusha
les
aaa
adc
loope
mov
movsl
mov
sbb
xchg
imul
dec
adc
mov
sub
lcall
std
xchg
int
daa
lahf
repnz
mov
bound
jge
mov
lds
dec
iret
daa
ret
mov
and
and
cltd
out
shll
and
inc
inc
ret
jecxz
in
push
out
or
adc
fwait
jbe
inc
xchg
insb
loop
iret
pop
mov
scas
mov
dec
je
lds
aaa
inc
imul
dec
jbe
jno
xchg
imul
jne
call
pop
js
cmp
dec
jns
cmp
push
lds
fistpl
dec
loopne
and
test
sbb
xchg
mov
cmp
sbb
adc
dec
jns
mov
shll
mov
xchg
aam
rclb
imul
stc
mov
dec
test
xchg
cltd
ds
decb
ljmp
int3
in
mov
ficoml
adcl
ss
and
and
ds
rolb
or
lahf
std
mov
rcrl
test
lahf
outsb
inc
mov
lods
jo
or
inc
xor
leave
xchg
sub
dec
add
xchg
test
iret
jg
stc
outsl
and
jbe
aam
jg
ror
xor
loop
gs
jg
icebp
fldt
lods
jne
lods
out
xchg
cmp
pop
jae
mov
out
cmp
les
sbb
jmp
jmp
lods
loop
dec
in
push
add
scas
mov
dec
dec
sahf
inc
test
insl
insb
sahf
movsl
sub
cwtl
sub
jo
xor
mov
jae
mov
add
sbb
and
push
mov
stc
aaa
cli
fs
add
in
and
cmp
jmp
movb
and
scas
insb
or
sub
lahf
push
les
lcall
jge
aam
fwait
jecxz
jnp
das
push
repz
aad
mov
lret
inc
xlat
inc
repnz
jae
mov
rcr
inc
lret
xor
jle
cmpsl
mov
jns
cmc
mov
mov
aaa
and
sub
jge
rclb
jbe
aam
mov
lcall
mov
mov
leave
jmp
lret
lahf
pop
jg
xor
rorl
dec
fwait
ret
or
call
jbe
push
shl
gs
aas
xchg
sti
pop
test
inc
sbbl
push
fcompl
leave
hlt
inc
jne
push
pop
jno
or
jns
icebp
int3
popa
push
popa
jbe
in
outsl
ficoms
or
das
mov
xchg
in
mov
int3
pop
ja
outsl
push
mov
inc
mov
and
push
or
out
pop
adc
inc
push
inc
mov
mov
push
mov
or
sbb
xor
test
push
push
popf
or
jbe
mov
xchg
jnp
push
and
jne
adc
jg
mov
sub
ret
outsl
push
rclb
jmp
jp
adc
push
call
push
inc
sbb
subb
test
add
cmp
rclb
cmp
xchg
inc
or
test
xor
ja
mov
or
or
out
sarb
inc
scas
ret
ja
adc
lea
xchg
inc
div
fwait
and
mov
scas
popf
mov
jge
pop
dec
cltd
sbb
outsl
enter
test
aam
pop
jnp
mov
scas
popf
adc
test
xchg
add
add
cmp
fldl
jg
pusha
jns
hlt
stos
inc
mov
out
out
fs
mov
dec
jmp
shlb
mov
aad
xor
mov
lock
scas
jae
pop
add
lock
les
int3
adc
xchg
pop
or
shlb
lods
add
sub
jmp
popa
int3
xchg
xchg
pop
sbb
xor
sub
out
mov
xor
lcall
pop
mov
sbb
add
inc
icebp
pop
outsb
mov
int
ret
test
les
lcall
ja
int
in
adc
mov
pop
mov
rcrb
in
inc
lret
andl
cmp
adc
test
inc
mov
push
push
pop
adc
mov
lret
jno
xor
ss
xchg
mov
negb
jp
fidivs
mov
xor
inc
arpl
xor
fndisi(8087
movsb
and
push
inc
decb
rclb
test
aaa
xchg
adc
xchg
pcmpgtd
iret
lret
outsl
pop
leave
or
fs
cwtl
imul
sbb
cmc
or
inc
mov
mov
adcl
xor
xchg
and
jecxz
nop
xor
xor
pushf
cmp
addr16
mov
dec
jnp
cmc
jp
pop
and
xor
sub
test
add
aaa
inc
addb
push
ljmp
lret
das
inc
lock
mov
push
out
cmp
sub
roll
fs
mov
cli
aam
loope
sbb
aaa
push
fnsave
rcll
xor
push
fisubrs
jp
lods
fmul
jl
out
jo
xor
jle
in
dec
cmp
fs
mov
pop
jge
hlt
outsb
adc
imul
add
rcr
jo
adc
data16
push
pavgw
dec
addb
cwtl
shlb
dec
frstor
push
sub
sub
and
sub
in
test
int
pop
adc
adc
mov
pusha
adc
aad
add
lret
push
adc
mov
incl
jg
fiaddl
mov
adc
xchg
cli
mov
loopne
mov
rcrb
dec
addr16
jge
add
lds
adc
out
dec
push
pusha
inc
mov
mov
aaa
into
pop
js
mov
rcll
adc
pop
cmp
bound
stc
cmpsb
or
enter
iret
mov
inc
xchg
loope
add
cli
mov
xchg
shrb
push
adc
mov
jmp
sub
pushf
inc
jne
icebp
jmp
aas
cld
sbb
jo
jns
clc
xchg
cmc
fldcw
sbb
test
sub
add
jne
jg
xor
jp
sbb
popf
push
sub
std
add
adcl
sahf
push
rorl
adc
xor
lcall
xchg
imul
pusha
nop
mov
fldt
inc
mov
in
mov
lods
pop
pop
mov
adc
xchg
xchg
js
lods
fcoms
or
adc
jb
popf
xchg
je
out
daa
fcoms
sbb
bound
sub
or
ja
push
dec
cltd
lea
cli
xor
jo
fbld
nop
aam
loop
adc
insl
dec
mov
xor
mov
xchg
or
cmpsl
pushl
int
or
in
icebp
mov
shrl
dec
mov
inc
mov
das
outsb
inc
iret
imul
test
shll
notb
jo
int3
mov
je
xor
add
test
xlat
idiv
and
dec
push
stos
mov
sar
sub
mov
loop
rcl
std
cmp
imul
leave
xor
xchg
int3
sti
push
hlt
pop
xchg
cmp
xchg
orb
or
jmp
out
add
rorl
out
cld
sub
mov
cmp
cmc
loop
enter
pop
mov
inc
clc
cltd
sarl
imul
xchg
adcb
mov
outsl
pop
or
xchg
mov
gs
mov
xor
leave
ss
jnp
jge
lods
iret
dec
fsubl
and
xchg
dec
sbb
test
jno
push
sub
test
pop
xchg
outsl
inc
push
test
sbb
dec
bound
or
mov
jmp
mov
push
lods
xchg
std
in
xchg
cmp
xor
rorl
and
pop
fld
jg
gs
dec
mov
push
or
idiv
add
add
dec
imul
repz
push
lock
cmp
xchg
aaa
push
popa
ficompl
movsl
pop
fisttpll
dec
jg
dec
jo
ljmp
outsl
jmp
pop
out
xchg
sar
lds
cld
push
hlt
dec
rcrl
fnstsw
jle
mov
jge
xchg
xchg
in
cwtl
pop
aas
adc
adcb
sub
outsl
test
push
and
jge,pn
pop
cmp
gs
notl
movsb
jl
mov
outsl
sub
jo
das
mov
ss
lods
nop
aad
loopne
loopne
and
pusha
jp
mov
jbe
or
loopne
cmp
add
lods
jno
in
lahf
push
fs
sub
adc
shll
dec
push
mov
repz
idivl
xor
and
sub
dec
leave
add
test
insb
movsl
dec
je
test
push
xorb
and
jmp
push
imul
jle
shrl
ret
int3
adc
or
or
mov
ret
lret
imul
sub
jns
adc
lea
mov
inc
arpl
mov
dec
imul
inc
xor
fsub
inc
movsb
flds
mov
adc
and
mov
pop
xchg
pop
scas
call
pop
inc
test
or
cmp
push
jo
jae
xchg
add
ud2
add
js
cltd
cmp
lret
add
lods
movsl
sub
into
test
push
fnstsw
aas
pop
mov
add
es
out
jmp
sbb
cmpsb
mov
scas
jbe
loop
ret
shl
sbb
xchg
inc
mov
cmp
test
movd
fists
xor
shl
and
outsl
cmpsl
fwait
ljmp
cmpb
push
repnz
cld
dec
sti
and
mov
neg
mov
inc
mov
lahf
and
dec
imul
lea
pop
jae
and
std
inc
test
stos
aaa
cmp
push
clc
jmp
stos
mov
mov
test
gs
push
cltd
mov
outsl
mov
aas
dec
dec
mov
adc
dec
sbbl
repz
sbb
mov
jmp
lahf
sub
outsb
imul
ret
jne
or
push
int3
je
and
in
push
and
pop
repz
in
sti
cli
cmp
into
xchg
nop
fbld
sub
popf
shlb
mov
sbb
xchg
jmp
mov
and
paddd
jno
lcall
ret
cmp
addr16
mov
psadbw
cmovbe
repz
lahf
mov
inc
push
and
jbe
pop
loop
fistps
xchg
test
adc
int
call
and
jecxz
cmp
jmp
popf
aad
sbb
pop
jg
dec
pop
notl
sbbb
cli
cmp
xor
call
xchg
fnsave
rclb
xchg
adc
lock
insl
push
xchg
test
xchg
inc
cmp
xchg
cltd
call
xchg
pshufw
lods
pop
cwtl
or
jns
pop
dec
dec
xchg
jmp
fcmovnu
add
and
mov
pop
sarb
push
fimull
in
push
pop
xchg
shl
push
repz
jg
fistl
popf
mov
xor
xchg
insb
int
dec
mov
lds
mov
dec
cmp
pop
outsb
insl
aad
lock
lds
inc
or
adc
mov
movsb
inc
jb
and
rcll
js
icebp
lods
inc
fnsave
je
test
dec
add
cmp
push
sbb
xchg
das
in
push
ret
jbe
outsl
mov
daa
cs
jnp
nop
iret
sub
lea
pusha
cmp
sub
or
pushf
cmpsl
xchg
movsb
fwait
scas
push
pop
inc
jbe
dec
adc
aas
pop
cmpsb
adc
add
mov
adc
test
push
push
sub
pop
jge
cmc
mov
adc
inc
jg
add
test
aam
int
sti
loope
jo
ljmp
jns
outsl
push
subl
jmp
sti
jae
inc
adc
leave
test
nop
lods
inc
jne
cli
sahf
ret
add
dec
fwait
shrb
lds
xchg
fcmovnu
addb
pop
xor
push
roll
lods
imul
cmp
jnp
in
mov
test
out
jg
mov
daa
pop
icebp
out
xor
xor
popf
xor
jno
pop
bound
les
insb
negl
sbb
mov
inc
enter
jecxz
pop
sbb
dec
jo
fcmovnu
sbb
outsl
mov
inc
pop
mov
jmp
lret
int
rep
xor
ja
roll
pop
pop
sbb
sti
gs
adc
sbb
int
decl
ja
lcall
outsl
in
insl
xorl
addl
push
ljmp
rcll
gs
xchg
arpl
data16
pushf
jp
jne
dec
imul
js
mov
lods
mov
out
inc
es
jno
sub
jmp
movb
fistpl
popa
call
mov
sub
icebp
test
jbe
dec
fldz
jle
loopne
rorb
in
pop
xor
call
sub
insb
mov
faddl
flds
cli
pop
imul
movsl
or
dec
pushf
add
imul
into
pop
lea
or
jbe
enter
sub
jno
cmc
cmp
fimuls
rorb
sbb
add
inc
inc
push
push
inc
jmp
fcoml
sahf
add
mov
pop
stc
in
cmp
and
stos
push
xorb
shl
push
add
je
testl
fcoms
mov
repz
call
push
push
loopne
mov
lret
cwtl
xor
jo
movsl
loope
std
xor
stos
pop
push
push
sub
xchg
icebp
sahf
sbb
mov
aam
xor
jbe
adc
sar
psrlq
push
jns
dec
lret
inc
jns
jbe
es
ret
mov
sub
or
dec
rolb
xchg
push
testb
je
or
js
in
mov
loopne
cmp
push
enter
movsb
out
mov
imul
pop
dec
jge
mov
adc
lods
pop
sbb
scas
dec
inc
andb
cmpsl
ljmp
dec
sbb
int3
jo
jmp
pusha
xchg
outsb
push
jbe
xchg
jnp
push
dec
test
cmpl
call
cmc
aaa
iret
lcall
outsl
or
nop
in
stos
out
jo
movl
fimuls
cltd
dec
aas
into
mov
stos
jmp
and
clc
pop
adc
loope
sbb
mov
xchg
xorb
jns
mov
sbb
ret
sarl
int
pop
ret
lret
pop
roll
fdivp
jge
and
js
pop
leave
sbb
js
testl
inc
sub
repz
scas
mov
aad
mov
cmp
sub
mov
push
add
int
std
mov
jle
cmc
fstpt
xor
pop
pop
sub
adc
xchg
aas
jl
xor
xor
and
movsb
inc
adc
mov
or
cwtl
fs
out
call
pop
cmp
and
xchg
push
sti
sbb
push
leave
pushf
mov
test
data16
jl
xchg
enter
dec
aas
cltd
fisubs
imul
js
fldcw
lahf
jecxz
xchg
inc
pop
mov
mov
and
out
in
add
jecxz
loopne
mov
inc
les
stos
jnp
mov
xchg
jns
adc
push
out
or
int3
pop
ret
dec
jbe
icebp
push
push
les
shl
sbb
cltd
call
lods
cmc
push
in
das
xchg
xchg
das
xchg
ja
add
add
cld
jmp
dec
cld
fisubl
xchg
ljmp
pop
es
enter
fcmovnu
popa
ja
aas
enter
mov
imul
pop
cmc
daa
adc
lret
test
pop
inc
addl
xor
cwtl
in
xor
jae
stos
loope
jns
jo
std
cmp
outsb
jbe
out
mov
test
push
add
imul
adc
in
xchg
shl
aam
add
xchg
shll
and
sub
mov
cmpsb
add
lds
mov
push
aas
push
push
push
in
scas
sti
xor
xchg
mov
pop
es
jb
push
mov
inc
and
lds
pop
cmc
push
or
enter
sahf
addr16
sbb
pop
push
test
sti
cmp
loopne
push
test
cmp
scas
push
push
sarb
or
dec
mov
push
lods
inc
xor
push
xchg
cld
icebp
outsl
sub
xor
mov
push
and
test
ret
jae
int3
xchg
dec
data16
cmp
out
inc
sbb
outsl
pop
mov
adc
mov
arpl
mov
and
roll
std
aaa
call
stos
mov
arpl
sti
mov
jae
xchg
lds
sbb
sub
popa
cli
add
test
xchg
mov
iret
movsb
loope
inc
lock
gs
lret
scas
sahf
add
jmp
jne
ds
mov
cmp
dec
ljmp
scas
mov
xchg
and
pop
adc
nop
test
jle
mov
adc
sub
push
pushf
push
out
mov
int
dec
fsubs
push
iret
mov
rep
rol
inc
pop
add
xlat
xchg
gs
push
inc
xlat
lds
std
hlt
sti
xor
push
pop
sub
add
mov
dec
mov
cmpsl
ss
xor
jae
push
adc
dec
adc
mov
and
xor
mulb
mov
rclb
sbb
xchg
aad
pushf
rcrl
and
mov
pop
pop
idivl
or
lret
cmp
mov
loope
push
idiv
inc
mov
push
test
loop
iret
nop
xor
int
inc
in
push
mov
cltd
gs
mov
adc
int3
daa
and
cmc
jne
sbb
insl
pop
lcall
lea
cmp
shlb
cmp
out
mov
nop
and
sbb
cmp
mov
xor
shlb
adc
cmpsb
out
ret
les
mov
loopne
popa
inc
ds
push
jne
lods
inc
lret
sbb
inc
call
and
pop
data16
xor
arpl
jle
inc
mov
jb
in
fs
mov
lcall
push
sahf
push
mov
jge
xchg
mov
cmc
or
sti
lea
dec
scas
stc
sahf
jno
mov
push
jno
xor
or
pushf
sbb
popl
pop
notb
xchg
or
cltd
shlb
sub
xchg
and
mov
mov
in
or
cmovno
xor
mov
mov
iret
mov
push
rorb
std
jmp
std
mov
rorb
dec
mov
jbe
imul
cmp
popa
inc
lds
bound
and
popl
or
lcall
xor
xchg
fprem1
sti
and
inc
test
sbb
dec
inc
jae
mov
fadds
add
int3
cld
adc
adc
std
and
xor
push
imul
mov
fs
jbe
rcl
add
test
xchg
ljmp
xchg
adc
inc
jbe
mov
push
push
adc
sbb
jmp
repnz
cmpsl
sbb
or
stos
mov
dec
imul
inc
aam
jp
sub
cld
cmp
inc
cwtl
fdivrs
bound
stos
hlt
cmc
out
sbb
insb
jle
mov
pop
into
les
fcmovnb
iret
sub
add
imul
scas
cmp
and
call
out
enter
push
fmull
movsb
and
push
jno
imulb
push
ss
jmp
hlt
jmp
cmpl
xorb
mov
push
cmp
movsb
scas
es
inc
inc
jecxz
jmp
push
mov
adc
mov
scas
bound
jmp
and
hlt
test
decl
movsl
imul
in
test
enter
imul
fcomp
jo
ret
inc
and
fwait
movsb
pop
rcrl
mov
adc
dec
pop
xchg
cli
icebp
mov
mov
loope
push
testl
jmp
jle
xchg
stc
aam
aaa
jo
loope
add
push
add
inc
xchg
mov
loopne
fdivl
or
lds
cmpsb
xor
jb
out
push
sarb
or
test
add
pop
or
popl
cmp
pop
cmc
dec
sub
sub
push
loop
xor
mov
mov
adc
scas
pop
int3
mov
sub
sub
xchg
add
popa
inc
mov
scas
lods
push
es
imul
mov
jl
push
outsb
push
imul
arpl
push
sti
xchg
add
sub
ja
mov
mov
or
push
repz
in
inc
dec
leave
data16
sahf
mov
pop
mov
cld
pop
dec
lds
mov
inc
dec
fcompl
mov
fidivs
mov
mov
xor
repnz
ja
pop
imul
push
scas
cmc
push
testb
fs
fs
or
mov
popl
scas
or
mov
popa
ds
stos
sarb
stc
sub
inc
ss
aam
push
dec
aam
or
dec
aas
in
hlt
jns
push
push
stc
stos
dec
or
insl
push
outsl
gs
lea
loope
test
inc
jno
push
ret
push
in
cmp
sub
pop
fwait
addl
push
mov
arpl
out
movsl
popf
jae
out
dec
mov
pop
dec
cmp
xchg
mov
aas
ja
sahf
fwait
lock
jnp
add
xor
testl
nop
aad
cmp
adc
cwtl
jne
ss
rolb
aad
mov
pop
scas
jbe
push
scas
sahf
stos
lcall
lret
fisttps
shrb
mov
mov
mov
mov
xchg
es
sti
lret
or
lods
insl
mov
sub
adc
add
cld
cmp
adc
arpl
mov
nop
add
mov
pop
mov
cmp
ja
ds
inc
adc
inc
adc
stc
sub
flds
enter
pop
jo
xor
pop
xlat
sub
rclb
dec
addb
scas
adc
push
stos
movl
sub
xchg
dec
fwait
lock
insl
dec
icebp
pusha
xor
scas
cmpsl
test
mov
aad
and
mov
data16
je
adc
icebp
ret
cmp
mov
xorb
ss
xor
xchg
sub
bnd
mov
out
cmp
imul
dec
loope
xchg
jmp
jns
int
lock
jo
xchg
je
lcall
enter
add
xlat
in
xchg
in
fidivrl
test
lock
cli
xchg
cmp
shr
sbb
adc
pusha
rclb
int
das
in
aam
xorb
jecxz
xchg
push
fdiv
ljmp
lea
xchg
push
jne
mov
scas
or
cmp
jae
stos
test
xchg
popa
jge
adc
jbe
bound
pop
pop
or
ja
cwtl
out
testl
sbbb
sub
sub
ljmp
pop
aad
cmc
dec
jle
repz
pop
mov
orb
jnp
sti
xorb
arpl
je
shr
lret
pop
sbb
arpl
imul
enter
int
and
add
dec
pop
je
inc
mov
pop
shrl
mov
push
jne
repz
pop
or
and
ret
insb
dec
lods
sub
cvtps2pd
and
fnstsw
loope
mov
pop
fnstcw
xchg
push
sbb
sub
scas
cmp
pop
mov
aaa
and
cmpsl
movsl
aad
inc
or
das
mov
cmc
fcompl
jnp
dec
mov
shlb
js
jbe
fisttps
mov
jbe
jbe
adc
jecxz
sbb
add
xchg
adc
aam
jge
sub
xorb
mov
mov
mov
and
push
js
dec
es
dec
or
jg
into
stos
or
push
dec
sti
icebp
imul
xor
lds
shr
push
std
cmp
add
mov
lods
es
das
push
imul
xor
xor
sub
mov
adcl
in
cmc
aas
or
aas
clc
int
push
fldt
std
call
mov
in
jns
movsb
inc
sti
xchg
rcr
imul
xchg
repz
and
mov
rorl
andl
pusha
into
cmpsl
sub
cmp
dec
xchg
jg
pop
dec
aaa
les
jb
sahf
rcl
fs
cmp
xchg
jno
dec
fsts
sbb
and
mov
testb
inc
cmpsb
jo
movsb
push
movsb
pop
fidivrl
ja
dec
pop
testl
scas
xor
pop
sar
fstps
roll
or
xchg
in
movsb
dec
push
sub
fdivp
sahf
push
int
mov
in
lock
sub
jne
out
lahf
movsb
jp
sub
stos
inc
mov
mov
pusha
test
push
and
lea
add
dec
mov
insl
cld
repz
in
push
aad
dec
addr16
adc
mov
pop
jp
xor
out
iret
mov
xchg
sbb
sbb
inc
pop
dec
mov
inc
imul
pushf
mov
xchg
jbe
lret
inc
dec
push
jns
pop
mov
push
les
pop
adc
outsl
dec
cmp
or
aas
xchg
nop
jns
and
sahf
sub
lds
xor
xor
push
leave
sbbb
or
stc
insb
lock
xchg
sahf
into
inc
scas
clc
in
add
popa
push
aas
cltd
add
les
popa
push
ret
add
rolb
push
scas
push
fsubs
fdivrs
sub
adc
push
mov
pushl
adc
fwait
xor
xchg
adc
cwtl
or
lahf
pushf
jg
or
push
out
jge
aam
add
movsl
stc
pop
mov
mov
imul
repnz
jb
divb
push
insl
push
dec
xor
xchg
mov
jae
push
cmc
pop
outsl
ss
adcb
adc
ss
jbe
adc
ficomps
dec
mov
pop
push
mulb
ret
popa
jns
inc
jne
aaa
test
pusha
xorb
vpsubusb
jmp
mov
lcall
mov
adc
fsts
mov
add
cmp
pop
inc
cmpsb
imul
sub
scas
js
sub
or
daa
sbb
mov
cltd
mov
push
push
and
imulb
and
adc
hlt
mov
test
in
cmc
imul
pop
outsl
xlat
xorb
push
dec
and
jno
push
mov
sti
popa
push
push
adc
test
call
enter
nop
nop
insl
jp
mov
into
sarl
imul
pop
les
pop
test
cld
mov
pop
mov
cmp
sbb
lds
jae
mov
aad
xor
imul
mov
push
pop
addb
mov
sbb
sbbl
dec
sarl
push
out
sbb
push
pop
loopne
push
bound
test
jno
jmp
xchg
jb
out
sub
shl
jo
add
aam
sbb
mov
push
push
fcoms
out
xchg
fstps
mov
in
imul
rcr
xchg
les
lods
jl
mov
mov
repz
mov
mov
xchg
jnp
pop
cli
lds
jmp
outsl
test
test
push
lret
subb
add
mov
mov
mov
and
in
addl
stos
pusha
cld
testl
out
data16
fildl
sbb
dec
das
fldenv
popa
pop
aas
mov
std
mov
ds
adc
das
jmp
test
clc
inc
add
jmp
mov
mov
cmc
mov
mov
or
sub
mov
push
cmc
xchg
pop
push
push
test
mov
xchg
inc
aas
sbb
inc
or
xchg
xor
and
xchg
jmp
lods
pop
push
jbe
cld
in
out
shll
aam
subl
gs
fcomps
or
ret
test
dec
adc
sub
jmp
ficoml
neg
jge
mov
jmp
outsb
fisttps
mov
fmull
in
push
loop
dec
arpl
fdivs
outsb
push
dec
cld
or
iret
mov
push
sbb
xor
mov
stc
addl
or
adc
popf
aam
push
mov
pop
mov
enter
sub
and
mov
inc
sahf
imul
lahf
leave
sbb
or
dec
orl
lcall
inc
mov
cwtl
scas
mov
jg
out
loope
test
mov
push
sub
ss
mov
xor
adcb
xlat
xchg
mov
pop
outsb
xchg
dec
adc
je
lea
adc
xor
nop
arpl
test
cmp
hlt
pop
jl
jns
iret
push
fnstcw
adc
adc
mov
xlat
fisubrs
call
sbb
pop
add
mov
lret
iret
jge
sbb
xchg
outsb
sarb
cmpsl
lahf
dec
push
mov
inc
in
lahf
push
cwtl
sbbl
mov
das
inc
jl
or
daa
xor
jecxz
mov
inc
lcall
lret
lret
cmpsb
push
mov
inc
sarl
ret
test
and
out
out
out
and
loopne
insl
fisttpll
fwait
loopne
mov
icebp
jbe
mov
jnp
gs
adc
sbb
mov
ret
lret
inc
sti
inc
dec
pop
mov
enter
mov
shll
or
jae
in
mov
sub
daa
mov
xor
mov
loop
pop
adc
mov
insb
xor
notl
and
ss
idivl
cmp
fsubp
stos
sub
shrl
adc
idivl
pop
add
push
push
rclb
dec
pop
jnp
mov
cmp
sub
cld
pop
and
aam
xor
mov
push
cmp
shl
pop
outsl
adc
aam
lods
in
sahf
fnsave
data16
cmc
xchg
sbb
loop
or
pop
mov
xchg
aaa
negb
outsb
int3
outsl
pushf
lds
adc
or
xchg
xor
inc
out
fs
mov
sahf
sub
scas
repz
aad
push
add
lods
xchg
out
popf
cmp
in
sub
inc
sub
mov
cli
dec
cmp
fwait
test
aad
in
adc
mov
jne
or
xor
cmp
dec
sbb
jle
mov
xor
or
out
lea
aaa
sbb
pop
inc
enter
movsb
nop
testl
push
subl
push
gs
pop
cmp
and
aas
pop
mov
movsb
int3
mov
ficoms
or
popf
loope
js
cmp
xor
sti
jne
pop
sub
xchg
imul
movsb
mov
cld
loopne
test
pop
and
rcll
xor
rcrb
out
sarl
sub
adc
mov
push
sbb
arpl
fistpll
pop
movsb
add
lea
outsl
xlat
jg
mov
in
repz
dec
dec
xchg
inc
jg
push
add
cwtl
pop
aam
ja
mov
lret
pop
push
shlb
pop
les
add
clc
hlt
xorl
hlt
cltd
jne
fidivs
dec
push
mov
test
sti
movl
ret
out
and
and
popa
add
sti
mov
inc
sbb
jbe
adc
mov
movsb
sbbb
sbbl
aam
mov
dec
push
std
icebp
lds
mov
std
lret
cmpsl
mov
and
lock
push
cs
test
xlat
xor
cmpsb
xchg
xchg
cmpsl
outsl
mov
je
sbb
gs
xchg
jp
sbb
push
imul
jge
ja
mov
push
and
popf
pop
sti
imul
xchg
rolb
mov
lcall
mov
push
lahf
test
and
mov
cmp
fwait
pop
and
leave
mov
pop
push
das
je
dec
push
add
lea
xlat
add
into
cmpsl
in
or
cmc
and
sub
add
das
pop
cltd
pusha
push
lret
push
sti
cmp
jnp
xchg
mov
pop
repnz
sub
jl
lds
push
lahf
xchg
fadds
xor
sbb
sarl
xor
in
outsb
sbb
out
and
xchg
hlt
call
icebp
hlt
xor
movsb
cmp
sarl
mov
xchg
mov
mov
popa
inc
jmp
jle
shlb
and
out
adcl
pop
dec
mov
sbb
movsb
cmc
popf
sub
ljmp
cmovnp
imul
lret
loope
sbb
loopne
cmp
push
push
mov
mov
or
xchg
xchg
cmp
cmp
xor
jp
ret
jecxz
inc
cmp
xor
xor
scas
jnp
outsb
adc
cmpsb
inc
pop
aas
mov
pop
orb
pop
fdivrs
mov
push
aas
mov
test
scas
xchg
lds
or
fstl
jne
mov
gs
fnstenv
dec
lret
push
lcall
xlat
jnp
lds
mov
or
add
shlb
imul
loopne
dec
xchg
popf
rclb
adc
adc
loop
mov
or
dec
fdiv
cwtl
mov
out
or
nop
pushf
movsb
clc
enter
push
loopne
pushl
add
sub
and
popa
push
add
cs
lock
loop
xchg
push
mov
aam
rclb
push
xchg
notb
aad
sarb
ret
or
pop
loop
cs
mov
icebp
fnsave
sahf
sbb
imul
scas
shll
inc
pop
js
fcoms
lds
adc
cmp
push
fmul
scas
mov
xchg
in
imul
mov
cs
push
je
xor
pushf
inc
decl
test
lea
push
sub
lods
aas
lahf
cmp
cmpsb
fwait
mov
cmpsl
shrl
insb
pop
fxch
imul
test
add
adc
cmp
pop
add
adc
in
mov
fiadds
stc
or
daa
outsl
clc
inc
inc
dec
jo
dec
sti
or
hlt
pop
push
mov
jns
push
mov
mov
pop
notl
lea
aad
jae
icebp
mov
push
enter
daa
pop
cmp
loopne
mov
insl
nop
enter
icebp
addr16
cli
in
xchg
idivl
inc
inc
or
jno
or
lock
mov
mov
fsts
fiaddl
mov
enter
xrelease
push
mov
shl
nop
sub
sti
aad
js
stos
sti
lods
xchg
mov
sbb
push
aam
fcoms
dec
xlat
dec
or
jne
nop
mov
mov
inc
dec
stos
dec
xchg
popf
lret
into
sbb
add
in
cmpsb
xchg
mov
dec
div
xchg
xor
pop
sbb
jnp
movsl
ds
mov
popf
outsl
jno
jl
jecxz
lods
sbb
mov
mov
jbe
out
rcr
mov
sbb
and
je
push
jg
inc
cmpsb
aad
ret
adc
jmp
shlb
mov
hlt
iret
mov
in
sub
jp
js
imul
push
xchg
stos
dec
clc
mov
cmc
ficoml
pop
push
outsb
dec
pusha
bound
pusha
rorb
lea
out
aam
aaa
cmp
popa
jecxz
sti
dec
arpl
pop
lcall
test
jp
data16
mov
mov
mov
mov
sub
fsubrs
aam
addr16
pop
lods
or
ret
dec
add
xchg
xor
cmc
push
and
inc
xor
gs
pop
mov
inc
cmp
xor
movsl
icebp
lds
sub
int
dec
clc
imulb
loope
jle
lret
and
push
pop
pop
and
loop
int
cli
push
cwtl
aad
dec
or
sub
push
or
inc
dec
cmp
repnz
jl
insl
add
imul
mov
sub
push
iret
cmp
mov
test
sub
std
cmp
inc
sbb
pop
stos
jp
sub
sub
call
jae
push
cmp
ret
movsb
lods
push
es
lahf
mov
cmp
jg
push
inc
xor
outsb
sbb
or
push
pop
push
mov
xchg
sbb
cltd
fdivr
mov
sbb
sbb
loop
xlat
movsl
sti
adc
xchg
adc
popa
push
imul
push
mov
js
mov
and
cmp
and
jno
lods
dec
jmp
movsl
minps
push
repnz
xor
sahf
jmp
pop
fists
out
or
sti
cmp
xor
sub
push
add
mov
sarl
xor
imul
mov
int
cmpsl
inc
daa
mov
test
xor
daa
lods
lret
stos
fcoms
lods
stos
adc
or
gs
lods
les
test
jbe
pop
testb
inc
dec
pushf
pop
movntps
lret
pop
insl
into
repz
sub
mov
arpl
mov
stc
jne
sbb
sub
cmpsl
mov
fisttps
sub
aad
aam
pop
dec
push
push
mov
sub
mov
orl
add
lods
sub
enter
xchg
mov
call
mov
mov
mov
inc
shl
mov
pop
lea
push
pop
xor
and
adc
push
mov
xchg
sarb
outsl
mov
shlb
ret
push
inc
push
adc
popa
or
jg
enter
adc
or
pop
cmp
lea
pop
pop
icebp
leave
jbe
xchg
pop
enter
mov
inc
stos
cmpsl
aam
mov
jmp
or
cmp
std
sti
jb
mov
je
shlb
rorb
fs
sti
int
iret
outsb
inc
js
jnp
mov
mov
pop
xor
fwait
xchg
jne
fimuls
jl
test
imul
xchg
jmp
and
sub
or
aam
jne
push
mov
inc
sbb
sti
sub
adc
scas
xchg
jle
sub
ljmp
lea
adc
mov
jge
scas
fmul
test
push
ds
mov
sbb
jp
adc
jnp
mov
test
xchg
dec
push
and
mov
mov
mov
scas
push
or
and
imul
ror
orl
mov
pop
lahf
ficomps
stc
add
adc
mov
add
mov
pop
bound
jle
in
lods
test
mov
lea
or
and
je
outsb
dec
mov
repz
jbe
jo
pop
rolb
sbb
jp
loop
and
xor
xor
iret
jge
mov
xchg
sub
fbld
cs
push
pushf
xor
stc
repnz
mov
lods
lea
outsl
and
adc
and
jno
push
sub
int
scas
dec
dec
mov
sbb
dec
jae
mov
cmp
lahf
lods
and
jecxz
popa
sub
dec
xor
or
dec
xor
inc
call
fs
push
xchg
in
inc
aam
inc
or
mov
inc
fsubs
sbb
rcr
sub
subb
les
jg
and
nop
es
sub
ficomps
xchg
jns
xchg
xchg
xchg
lea
loop
in
pop
and
aad
mov
dec
and
push
mov
push
sub
and
adc
lcall
cmpsl
xor
lcall
fisubrl
popf
adc
cmp
inc
mov
scas
push
mov
out
or
outsl
sarl
fists
push
gs
sti
loop
dec
addb
fwait
adc
out
repz
cmp
in
jle
jmp
add
mov
dec
fwait
mov
popf
scas
pop
jle
dec
out
xchg
stos
insl
inc
enter
and
aad
sbb
rorb
in
sahf
lock
mov
loopne
mov
rcll
lahf
xchg
popf
pop
lcall
mov
or
xchg
repnz
pop
push
scas
push
and
push
popa
jnp
dec
mov
div
out
out
or
and
xchg
sarl
fdivl
js
push
jb
add
shlb
ss
adc
cwtl
test
roll
xchg
push
bound
dec
mov
and
std
push
mov
cld
cmp
or
and
jmp
in
out
mov
push
xor
movsb
pop
cmpsl
jns
jg
in
add
sar
ja
push
or
dec
inc
push
aam
mov
pop
mov
cmp
cmp
gs
aaa
sbb
lds
stc
adc
in
push
in
dec
out
jg
xchg
stos
pop
sbb
jb
in
mov
jno
testb
int3
jo
jns
dec
inc
inc
gs
inc
das
lods
std
cmp
push
mov
push
loop
push
in
int
pop
cmp
fsub
mov
enter
ds
mov
hlt
cltd
xor
mov
jbe
js
stos
scas
inc
ja
fsubrs
cwtl
lock
sbb
test
dec
xchg
cli
cmpsb
and
jnp
xchg
aaa
xchg
imul
mov
js
dec
mov
or
cmpsl
insl
mov
out
js
jecxz
aam
fcomps
divl
jno
jle
icebp
xchg
stos
xchg
inc
test
push
popf
daa
sahf
imul
call
jo
sbb
or
ja
pop
outsl
test
xchg
loopne
mov
call
cwtl
mov
aad
mov
jmp
repz
mov
sub
out
jmp
loope
mov
xchg
adc
sub
pop
pop
adc
dec
and
shrb
jge
mov
cmp
jo
es
imul
cmp
jp
lret
mov
aad
mov
inc
pop
lds
das
fstpt
add
jae
or
bound
jne
lahf
jns
pop
sub
std
nop
in
or
or
sti
loope
roll
push
stos
push
and
ret
shll
cmp
je
adc
sub
jne
leave
lea
lea
test
loop
cmp
leave
arpl
xor
jmp
in
inc
push
rorb
cmp
jnp
cmp
jbe
adc
pushf
dec
loopne
push
out
inc
ja
cmp
jnp
jmp
cmp
les
out
xchg
dec
js
dec
xchg
cli
divb
xchg
arpl
arpl
mov
xchg
cmp
or
ss
push
sub
push
ja
mov
sbb
xchg
xor
shrb
push
lods
jae
adc
adc
add
and
sub
dec
insb
int
xor
ret
xchg
sti
in
xchg
jle
dec
or
xchg
ds
dec
add
aad
jp
pop
jns
aam
fiadds
sti
dec
test
lea
mov
xor
pop
jg
arpl
and
in
sub
xor
xchg
pusha
mov
pop
mov
cmpsl
fsub
mov
and
mov
push
cmp
xchg
add
inc
adc
data16
mov
sbb
pop
jb
sbb
out
popf
sub
jnp
push
int
js
fistl
shlb
xchg
movb
mov
jge
pop
int3
repnz
sbb
jp
in
xchg
out
and
fcomps
dec
mov
or
jge
xchg
arpl
js
in
add
xchg
xchg
jl,pt
sub
out
lds
sbb
mov
pop
ffree
inc
and
outsl
adcb
dec
adc
pusha
pusha
scas
das
mov
xchg
cmp
cmpsb
inc
xor
mov
push
mov
or
jecxz
hlt
cld
imul
mov
out
testl
imul
shll
stos
mov
add
out
fs
jl
mov
mov
testl
or
outsl
loopne
inc
aaa
popa
push
dec
or
add
inc
jne
inc
sbb
jb
mov
push
jae
or
mov
and
rcl
loop
imul
dec
inc
add
dec
out
mov
in
sti
in
xchg
sub
cmpsl
sbb
fldl
adc
pop
push
mov
mov
movsl
imul
je
fs
or
fcmovb
and
adc
xchg
and
cs
ret
mov
jecxz
movsb
xchg
loope
test
sub
mov
ret
inc
or
loop
cmp
dec
pop
mov
xchg
pop
mov
inc
or
lods
outsb
into
sub
sub
pop
sub
push
fistpl
xor
push
filds
jbe
dec
out
or
or
stos
inc
xlat
mov
jb
and
mov
ficomps
or
jmp
out
inc
xchg
lock
push
cmp
stc
test
sbb
rorb
mov
dec
or
pop
pop
jno
mov
lahf
in
push
pop
push
add
sub
ss
ljmp
test
push
mov
sub
jns
test
sub
stos
xor
inc
filds
push
lret
fcoml
mov
cmp
fnstenv
out
sub
subl
xor
mul
addr16
pop
inc
je
pop
fisttpll
pop
mov
loopne
cltd
pop
movsl
or
inc
daa
pop
mov
dec
cmovb
inc
push
mov
and
test
popf
xchg
jbe
ret
and
ljmp
jg
dec
xchg
fs
mov
jno
push
aam
mov
enter
lcall
sub
or
std
cmp
and
sbb
jbe
push
inc
push
pop
icebp
dec
inc
sbb
mov
pop
dec
aam
push
stos
subl
xor
mov
jno
or
push
xor
mov
push
cmpsb
clc
cmpsl
sbb
push
inc
cmpsb
or
mov
dec
push
push
loopne
dec
xor
adc
push
aam
sbb
xchg
ss
mov
addb
adc
and
out
mov
xchg
mov
mov
mov
xchg
xor
out
mov
adc
je
inc
mov
insb
in
or
lock
dec
adc
xchg
call
mov
xchg
push
pop
das
lods
push
sub
pop
and
mov
mov
add
dec
lock
jae
or
int3
cld
aad
ds
movsl
push
push
mov
jge
mov
or
dec
xchg
das
stos
dec
jmp
mov
popf
mov
lock
and
xchg
or
imul
push
adc
mov
ja
push
sub
pop
aad
daa
inc
ret
outsb
ret
push
addr16
lods
adc
divb
lock
in
xor
cld
mov
scas
cs
daa
cwtl
pop
adcl
adc
inc
scas
in
cmc
mov
cmpsb
push
lret
or
aam
addb
movsb
mov
adc
mov
int3
lock
out
pop
push
xchg
test
jae
xchg
add
adc
outsb
push
jne
aad
mov
aaa
scas
ds
gs
push
and
jl
aam
cmc
stos
dec
cmp
lcall
push
test
gs
int
adcl
jb
and
fsubl
imul
push
adc
lcall
lea
outsl
cmpsl
rol
cmpsb
test
jae
es
cmpsb
inc
ljmp
adc
inc
mov
adc
aad
int
dec
adc
sbb
mov
or
ret
icebp
fcoms
push
addr16
push
ret
mov
xchg
inc
repz
scas
cmp
lods
cmpsb
call
xchg
lods
mov
inc
imul
std
jne
aam
inc
pop
subl
repz
push
add
jb
call
sbb
sbb
push
stos
push
sbb
mov
mov
pop
jo
insl
flds
push
sbb
jns
sbb
shrl
std
mov
inc
push
gs
pop
and
sub
dec
xchg
xchg
movl
jae
add
fisubrs
mov
jecxz
cli
stos
add
fwait
push
jp
mov
mov
insb
add
pop
mov
movsl
sbb
clc
cmp
test
insb
andl
xor
aas
jg
sbbl
jae
jns
sbb
mov
stos
scas
mov
pop
add
push
sbb
mov
push
xor
add
ja
or
in
jecxz
clc
dec
inc
xchg
loope
lock
push
dec
insb
shl
inc
mov
pop
icebp
dec
mul
lods
and
mov
lea
cmpsl
imull
fmull
xchg
add
in
cmc
or
arpl
inc
xor
jne
dec
out
stos
pop
inc
dec
imul
ds
xor
cmc
inc
rorb
fisttps
add
jp
xchg
arpl
lock
fwait
aam
push
out
stos
dec
imul
orl
push
xchg
add
mov
xchg
aas
leave
sub
jno
sub
sub
sbb
add
push
xor
jmp
bound
and
fnstenv
les
lret
adc
stc
pop
dec
mov
mov
ret
pop
pop
lahf
xlat
add
bound
stos
inc
sbb
lods
movsb
sub
scas
xor
dec
call
fildl
stos
icebp
rcll
lds
and
mov
add
fisttpll
jo
xor
icebp
push
sbb
inc
movsb
adcb
je
and
leave
add
loope
cmp
mov
mov
xchg
out
pop
xor
jge
cld
ds
je
cmpsb
movsb
xor
fildl
or
lret
adcb
fcmove
lahf
mov
jb
mov
jae
ret
push
mov
cltd
sbb
push
aad
arpl
inc
xchg
xor
test
pop
aam
test
loopne
jne
mov
push
or
fnstsw
cwtl
sub
lahf
mov
and
in
jns
inc
jle
cmp
inc
out
lcall
testl
in
xchg
add
push
jge
pop
mov
adc
leave
fdivrs
out
dec
xchg
daa
mov
data16
cmc
test
loop
enter
pop
mov
add
fdivl
fnstcw
push
imul
test
lods
adc
dec
push
sub
xchg
inc
inc
push
aad
out
sarl
inc
aas
jno
fnstsw
mov
in
dec
aam
mov
adc
cmc
mov
stc
lods
jno
cmpb
mov
stos
sahf
mov
add
pop
pop
push
arpl
adc
fdivrl
dec
inc
or
lahf
jb
imul
jbe
add
xchg
pop
roll
lahf
addl
mov
lahf
push
jnp
inc
fcoms
xor
test
ss
aam
sbb
xchg
nop
daa
popaw
jg
repz
out
sar
imul
add
pushf
clc
adc
jno
in
mov
dec
cltd
cld
aaa
xor
ja
or
ljmp
push
sbb
cmp
mov
mov
sbb
lods
jns
cwtl
and
rcrl
imul
sti
stc
jle
dec
dec
sub
sbb
mov
xchg
add
out
mov
pop
jmp
push
cmp
mov
mov
loop
fcmovb
dec
outsl
add
rolb
add
sbb
mov
mov
cmpl
mov
or
xchg
imul
pop
lret
iret
xchg
movsl
and
add
inc
out
filds
jns
dec
cmp
imul
dec
xchg
lahf
data16
sub
cmp
xchg
pop
stos
subb
push
cmpsb
push
mov
xlat
daa
into
mov
rcrb
add
xchg
faddl
std
lods
lret
adc
jp
jge
repnz
cwtl
pop
sarb
enter
adc
call
jmp
add
pop
mov
test
mov
pop
lock
in
pop
mov
mov
imul
mov
dec
sub
sbb
lods
xor
repz
pop
fnstsw
shlb
in
jmp
stc
xrelease
fstp
xor
mov
inc
mov
mov
xchg
sti
insl
pop
ljmp
inc
push
or
xor
adc
rcl
xor
loope
mov
push
xchg
out
pop
add
adc
xchg
fimull
pop
and
aaa
rcrb
mov
push
pusha
inc
xchg
and
add
jg
addl
testl
out
shrb
dec
xchg
cmp
push
repz
push
and
sarl
movb
jl
imul
lods
fiadds
pop
in
xchg
or
aas
add
jb
lock
orl
mov
lds
cmc
cld
and
xor
add
sbb
mov
jecxz
push
sbb
or
int
jnp
enter
push
lods
mov
filds
into
inc
cld
stos
movsl
adc
das
out
and
stos
sbb
je
add
int
incl
mov
test
fxam
jb
aam
outsl
lods
inc
ficoml
adc
in
mov
xchg
adc
or
sub
test
pop
rorb
mov
cmp
pop
push
xor
add
pop
pop
cmp
lahf
or
dec
mov
dec
adcb
push
movsl
js
mov
pusha
pop
dec
out
mov
adc
rorl
jno
sbb
dec
push
aaa
xchg
cli
push
push
mov
arpl
imul
xlat
sti
jle
fidivl
sbb
pop
lock
mov
cmpsb
mov
arpl
ja
push
into
sbb
push
mov
jp
mov
ss
mov
stos
xor
adc
stc
pop
paddw
lahf
out
fwait
loope
push
lods
outsl
mov
sub
mov
cli
pushf
shll
in
xchg
mov
xor
bound
inc
fcoms
add
xor
lds
push
mov
jl
sar
lcall
cwtl
jl
xlat
cli
in
js
mov
or
and
rolb
mov
sbb
mov
mov
pop
mov
mov
mov
cmp
test
adc
push
pushf
cli
lret
movsl
subb
xor
daa
out
sub
shr
dec
mov
outsl
loope
cmp
mov
lock
hlt
xchg
test
and
movsl
enter
mov
fisubrl
mov
icebp
outsl
pop
adc
xlat
jmp
mov
dec
sbb
xchg
ret
arpl
aad
stos
pop
mov
incb
mov
stos
int
dec
movsb
push
fwait
jge
mov
sub
and
cmp
es
adc
aaa
inc
add
xor
or
pop
imul
hlt
mov
mov
sbb
cmp
fcoml
add
mov
je
clc
adc
mov
dec
inc
jne
je
jo
and
inc
aad
xor
test
mov
das
lods
dec
push
add
aam
jae
pop
cli
pop
ss
push
mov
xor
in
add
je
je
mov
rorl
and
mov
inc
lret
push
jne
add
mov
cmpsb
pusha
xor
dec
mov
aad
int
push
imul
adc
inc
cmpsl
sti
sti
lcall
lock
push
popf
mov
iret
stos
nop
hlt
ficoms
dec
adc
lret
xor
inc
push
pop
iret
ret
dec
dec
cmpl
jp
sub
push
mov
mov
jno
cmp
xor
test
hlt
insl
cmp
push
push
aad
mov
xlat
sub
fildll
jae
cmpsb
push
or
inc
imul
imul
fsts
je
imul
aam
or
xor
inc
push
fprem
fcomip
repnz
loopne
push
add
jge
sub
inc
dec
jno
aas
mov
mov
sbb
inc
jle
push
xor
mov
loop
aas
enter
jne
add
sub
xchg
data16
cmp
fst
jns
jo
mov
dec
or
ljmp
sub
adc
xlat
in
nop
jbe
pop
dec
mov
add
pop
sarb
sbbb
adc
jno
mov
push
cwtl
orb
fisttpl
push
pop
ficoml
push
test
int
pop
pop
push
or
mov
test
nop
xor
fs
mov
outsb
repz
fimull
mov
cmpsb
xor
jecxz
mov
outsl
jae
lret
in
or
imul
xchg
jno
ja
test
jb
xchg
mov
lea
aaa
mov
jecxz
bound
jbe
aad
dec
xchg
and
popa
in
mov
fldcw
add
lahf
adcl
out
dec
sub
stos
jo
das
repz
jmp
sahf
cmp
add
fbstp
mov
pop
adc
sbb
xor
sbb
pop
or
fisttpll
mov
or
mov
and
sbb
or
mov
fldt
faddl
push
pop
jp
cltd
adc
imul
jg
es
and
loop
and
mov
pop
inc
dec
cmpsb
je
xchg
outsl
mov
mov
out
adc
in
jle
and
and
test
rcll
rcr
lods
inc
and
mov
fistpl
int
push
call
outsb
push
scas
test
ret
mov
xchg
pop
adc
daa
push
out
outsl
xchg
and
xor
pop
inc
dec
sub
fcoml
testl
stos
add
push
mov
dec
push
mov
add
mov
ja
dec
cltd
sbb
cmp
stos
popf
repz
insl
imul
pop
icebp
imul
pop
cmc
jmp
popa
xor
lea
cmc
cmp
lds
ljmp
mov
cwtl
mov
les
movsb
push
adcl
xor
ja
dec
sub
addr16
pop
cmp
adc
scas
mov
inc
xor
xchg
fs
icebp
adc
xchg
stos
fisttpl
pop
ja
mov
repz
std
ret
or
iret
cli
lret
push
fwait
jecxz
cltd
arpl
xor
lods
push
cmpsb
ss
xchg
leave
jle
xchg
popf
aaa
and
mov
add
fnstsw
mov
aam
arpl
sub
or
sub
pop
fildl
mov
pushf
sbb
mov
test
fs
loopne
and
push
hlt
mov
xchg
cmpsl
cmpsb
push
addr16
div
dec
dec
pop
stc
cltd
insl
ffreep
and
das
mov
inc
or
fdivrp
sbb
jno
loope
push
or
pop
mov
dec
inc
fisubl
movsl
mov
fucomp
mov
and
fldt
mov
sahf
adc
dec
sbb
lret
inc
inc
mov
lods
cmpsb
lock
jge
xor
lret
cmp
mov
mov
cmp
mov
push
popl
addr16
mov
lods
or
pop
xchg
mov
popa
shll
push
cmp
dec
pop
cmpsl
and
jno
mov
call
aad
push
repnz
dec
or
int
add
icebp
xlat
push
push
inc
lcall
push
shll
xchg
ljmp
sti
xchg
sub
pop
xor
cmpsl
pusha
or
jne
cmp
std
jge
mov
sti
fwait
dec
sahf
dec
xchg
mov
cs
imul
insb
stc
in
xchg
jmp
je
pushf
iret
popf
loopne
jo
jge
sub
pop
jo
cmp
or
aas
pushf
dec
int3
sahf
mov
cmp
push
shrb
cmpsl
rclb
loopne
cmp
divl
outsl
sub
fsub
jmp
data16
jo
stos
and
and
jl
mov
shlb
cmp
imul
popa
sbb
cmpsb
fs
and
xchg
ja
and
mov
adcl
lahf
cld
cmp
pop
pop
jmp
fdivl
in
negb
call
xchg
xlat
movsl
ret
fdivrl
subl
repnz
fstps
rcl
and
testl
or
jbe
aas
scas
mov
andl
jne
test
lret
out
jp
adc
push
pop
test
jmp
roll
aas
inc
mov
sti
shl
cmp
roll
test
nop
sti
xchg
jmp
sti
outsl
into
inc
test
mov
push
pop
int
pop
sbb
and
jecxz
mov
xchg
bound
xor
and
mov
cmp
xchg
daa
xor
sub
ljmp
add
inc
xor
sbb
inc
jb
adc
adc
ret
mov
mov
jbe
ljmp
jne
lock
cmp
out
jae
enterw
sahf
mov
add
imul
icebp
jae
xor
sbb
xor
pushf
sub
xchg
orl
cld
add
int3
xchg
adc
xor
jg
xor
roll
mov
xchg
push
loop
xchg
pop
addr16
mov
mov
push
push
clc
or
or
push
nop
mov
jbe
mov
aam
add
iret
xchg
or
inc
mov
das
jno
mov
cmpsl
cmp
stos
cltd
mov
and
outsl
cli
js
add
jo
mov
xor
fucomi
pop
lods
inc
push
sbb
mov
inc
bound
imul
hlt
or
int
lahf
popa
dec
insl
or
cmp
pop
loopne
sub
les
mov
mov
push
inc
repnz
inc
arpl
xorl
jae
adc
test
sbb
mov
cmc
push
xor
push
add
cmp
pushf
movsl
insl
cmp
in
out
int
cltd
pop
inc
aas
pop
mov
aas
or
shl
xchg
jo,pn
or
mov
xor
test
iret
gs
fcoml
jae
push
dec
scas
mov
hlt
js
push
mov
test
sbb
imul
imulb
rcrl
mov
in
cmpsl
mov
nop
addr16
sub
push
xor
fisttpll
mov
movsl
xchg
mov
inc
leave
add
aaa
push
repz
dec
mov
and
pop
fistl
gs
clc
aas
cmp
arpl
imul
sbb
mov
in
mov
lahf
lahf
aad
add
clc
cmp
pop
jnp
sbb
cmc
push
xchg
ljmp
mov
adc
push
fdivrs
mov
insl
fs
dec
jae
imull
stos
xchg
push
in
shl
imul
inc
jnp
addr16
dec
movsb
imul
pop
cmp
sub
dec
sar
ret
fldt
pop
push
adc
mov
iret
pop
shrb
sbb
sar
mov
imul
mov
mov
xor
or
incb
pop
lret
jne
push
push
jbe
adc
xchg
shll
mov
pop
aam
push
xor
mov
jl
xchg
mov
inc
inc
pushf
or
mov
into
mov
mov
push
sub
xor
sbb
pop
or
mov
imul
mov
enter
dec
lods
mov
push
lahf
xor
out
adc
jmp
imul
mov
lret
test
fcmove
sub
fcoml
push
icebp
loop
lds
lds
and
add
xchg
push
testb
bound
add
add
lahf
icebp
mov
ja
dec
imul
dec
leave
pop
insl
jbe
push
mov
mov
mov
scas
orl
sahf
push
push
cmp
pop
add
iret
sti
inc
jmp
rcrl
xchg
or
stos
sub
filds
push
test
insl
adc
xchg
mov
push
or
mov
mov
lock
sbb
shrl
xchg
data16
pop
mov
sti
mov
iret
push
insl
cmp
aas
in
leave
add
aam
xchg
and
or
xor
add
ljmp
push
repz
mov
dec
xchg
xchg
in
dec
cmp
mov
push
pop
inc
inc
xor
shll
push
mov
or
int3
mull
mov
dec
pop
out
mov
sub
iret
cmp
into
mov
shlb
mov
std
nop
add
fcomi
int3
and
imul
cmp
sbb
sbb
ret
into
push
jne
jp
xchg
out
ret
lcall
loopne
std
iret
outsl
leave
mov
scas
ds
cmpb
test
xor
je
out
dec
adcl
mov
push
cwtl
pop
jl
cmp
or
outsb
aam
imul
divb
test
jo
icebp
imul
ljmp
push
fadds
pop
leave
mov
andb
mov
mov
fdivl
xorl
test
mov
rcll
ja
fdivl
jbe
out
in
adc
rcr
test
mov
or
cmp
orb
dec
mov
in
outsb
iret
arpl
lds
jmp
xor
push
mov
pop
sub
xchg
inc
mov
movsb
daa
aam
inc
in
add
mov
dec
sbb
ja
mov
push
rorb
inc
clc
adc
loop
add
repz
in
inc
std
add
sub
jg
lcall
xchg
sub
mov
out
mov
mov
or
or
popf
push
jo
scas
jb
das
cmp
jnp
mov
inc
stos
rcl
test
dec
enter
adc
icebp
repz
or
mov
adc
mov
push
sbb
jbe
xchg
adc
enter
xchg
dec
aas
push
or
adc
dec
jno
mov
jo
mov
xchg
std
mov
ss
sub
dec
in
enter
cld
jge
cmpsl
cli
sti
xchg
loop
xor
cmpsl
in
repz
in
jle
dec
mov
in
imul
sbb
fwait
mov
lea
push
jno
fisubs
cmp
testl
insl
daa
push
fstps
jae
das
dec
aad
jp
es
xchg
jno
jne
add
stos
ja
pushf
fmull
adc
scas
jae
out
mov
jp
sub
sbb
or
dec
inc
push
jecxz
mov
mov
ret
repnz
jb
xchg
jg
enter
dec
stos
add
out
iret
adc
mov
mov
not
mov
fbld
push
jns
push
xchg
dec
or
push
pop
push
mov
mov
sahf
fisttps
xlat
inc
pop
pop
add
in
je
xchg
out
jecxz
or
mov
je
subl
ficoml
ja
xor
pop
lods
xchg
stos
cmp
andl
aas
shll
lea
jae
pop
mov
jmp
pop
pop
push
pop
lds
and
push
repnz
inc
push
arpl
aad
hlt
inc
mov
lcall
shll
push
test
and
inc
mov
jne
mov
je
inc
xchg
xchg
shlb
fdiv
mov
jmp
lret
out
sarl
sti
or
icebp
cmpsl
aam
int
stos
adc
or
sub
clc
jle
jns
pop
or
outsl
in
lahf
dec
pusha
jb
pusha
sub
xchg
push
cmp
push
dec
mov
adc
adc
sub
pusha
xchg
add
or
lret
shlb
xchg
sbb
pop
or
inc
fisttpl
or
cmc
adc
sub
push
or
pop
scas
repnz
pop
cmp
add
in
adc
loopne
js
sub
int
cld
jmp
nop
je
add
aaa
mov
popf
ds
xchg
pusha
mov
scas
push
dec
inc
test
push
push
cmp
and
out
push
push
outsl
test
mov
in
or
lods
cwtl
adc
adc
mov
dec
sub
dec
call
rolb
add
mov
cltd
fists
dec
sub
daa
aad
inc
lahf
ja
test
jmp
jnp
out
jbe
mov
ss
push
and
jecxz
push
popa
jmp
sbb
jmp
fsubl
push
jg
stos
xor
in
dec
xchg
cmp
xor
add
inc
insl
mov
pop
lds
rorl
ret
and
inc
les
lret
xor
push
sub
jbe
ficompl
mov
fs
add
mov
jmp
and
imul
pop
jne
jae
fisttps
andb
xchg
out
cld
sub
inc
fildl
int
jg
in
cmc
stc
cmp
hlt
nop
jns
cli
mov
shr
movsl
int3
pop
data16
inc
push
or
push
jne
jne
clc
movsb
xchg
adc
cmp
aam
cmp
cmpsb
jae
lret
test
mov
movsl
add
fstpl
rcl
pop
sub
sbb
or
jg
fcmovb
outsl
jge
jge
and
aas
imul
int
jmp
xor
jo
pop
cmpb
cli
cmc
jo
inc
sbb
les
mov
in
loopne
pop
jnp
mov
cmpsb
mov
stos
inc
ret
dec
cltd
or
mov
cmpsl
sti
movsl
bound
scas
mov
iret
mov
bound
mov
sarl
fdivrs
adcb
cmp
xchg
bound
cmpb
sbb
xchg
adc
mov
adcb
call
xorb
pusha
lret
add
aas
xchg
inc
iret
jno
jecxz
lret
jne
inc
mov
leave
aas
sub
push
sbb
mov
dec
xchg
mov
or
pop
orb
pop
popf
in
insb
ss
xchg
gs
fsub
call
jo
lods
sub
jecxz
cmpsl
jnp
and
jae
push
xchg
mov
daa
sahf
dec
jbe
push
cmp
pop
push
and
pop
pop
imul
dec
adc
mov
jmp
sahf
push
cwtl
adc
popf
mov
xor
mov
mov
aas
xor
pop
jle
jge
inc
pop
push
add
out
stos
leave
push
test
lea
dec
fdivrs
xor
sub
sbb
lods
fcomip
aad
xor
add
or
cmp
sbb
xchg
scas
inc
aad
out
inc
mov
gs
unpckhps
sbb
xor
adc
insl
outsl
pop
outsb
sahf
push
mov
ret
dec
mov
aam
pop
mov
xchg
xor
inc
lea
scas
stos
lret
and
xchg
jne
sub
mov
adc
and
inc
sarl
jb,pt
xchg
divl
sub
adc
push
nop
mov
in
insl
xorl
repz
dec
pop
enter
mov
gs
jge
fiadds
lock
sub
jge
das
scas
adcl
mov
and
imul
rolb
pop
out
push
push
movsl
xchg
arpl
xor
xchg
daa
jb
jge
add
mov
pop
int
lock
sub
inc
ja
testb
inc
hlt
xor
testb
popf
enter
enter
inc
dec
gs
jnp
lea
add
cmpsb
push
sub
cmp
inc
inc
aad
mov
test
sub
jnp
adc
pop
mov
push
pop
cmp
dec
add
call
std
ds
jmp
mov
sbb
add
cmp
rcl
enter
xor
mov
pop
test
jne
xchg
imulb
ss
add
mov
jp
mov
add
mov
pop
flds
cmp
test
inc
in
dec
insb
mov
idivb
shrl
or
mov
iret
loope
dec
push
xor
and
pusha
repnz
push
mov
jne
add
in
hlt
mov
mov
push
push
insl
pop
test
insl
sbb
ret
jmp
dec
lds
xchg
cli
sbb
cli
push
jbe
into
les
out
mov
adc
pop
repnz
insl
into
mov
aam
js
pop
test
nop
jbe
ret
hlt
sbb
dec
adc
adcl
jbe
and
testl
insl
or
pop
cmp
xor
push
movsl
lds
or
xor
cltd
jg
xchg
in
and
jae
shlb
icebp
dec
sub
pop
ja
and
xchg
mov
outsb
dec
xor
lods
outsl
mov
push
cmpsb
pop
int3
out
rclb
lcall
lods
sbb
mov
push
lods
rolb
icebp
test
pop
push
xchg
push
imul
gs
xor
pop
cltd
pop
cmp
sub
lods
xchg
pop
xchg
or
fsubs
in
mov
cs
test
cltd
mov
test
jo
mov
inc
out
sub
int3
in
sbb
ss
xchg
fs
jbe
inc
pop
icebp
cmp
sti
mov
pop
lock
mov
sbb
cmp
add
push
int3
sbb
or
imul
adc
pop
test
jae
pop
xlat
xlat
sbb
sub
faddl
sbb
cmpb
jns
cld
fcomps
pop
imul
outsw
cmp
insl
std
dec
das
dec
pusha
imul
push
or
cld
test
lea
shll
sub
out
sub
xor
xchg
cmpsb
rorl
lret
test
loop
push
jne
add
les
jge
xchg
mov
mov
jmp
cwtl
je
jp
adc
and
addr16
pop
nop
cwtl
outsl
push
sahf
sub
xor
dec
sbb
fbstp
jb
push
enter
fldl
rol
inc
sub
sub
inc
sbb
add
push
cmp
pop
ds
pusha
outsb
add
outsb
mov
daa
adc
aas
xor
or
cs
xchg
je
in
dec
lea
inc
add
sub
outsb
mov
xchg
addr16
mov
out
stc
or
xor
xchg
lods
and
sub
sub
xchg
lret
sub
test
jo
orb
enter
or
jle
movsb
call
loope
pop
out
ja
aad
test
pop
inc
inc
dec
pop
dec
testb
mov
stc
aad
sbb
push
push
movsl
iret
cltd
sbb
in
ss
mov
xchg
or
pop
loop
cmp
jno
adc
inc
icebp
xor
xchg
scas
xchg
imul
popf
sahf
fcmovnbe
and
test
jae
je
arpl
push
xchg
push
sub
inc
mov
add
cmp
lahf
pusha
jns
int3
enter
mov
mov
push
jmp
cmpsl
adc
sub
addr16
sbb
clc
mov
hlt
adc
orb
in
adc
sub
or
inc
xor
mov
popa
dec
in
pop
out
lock
loopne
pop
sbb
mov
fisttpll
sti
mov
sbb
inc
in
jbe
pop
clc
inc
insl
sbb
aam
jne
bound
push
in
push
add
outsl
gs
loopne
xchg
lds
pop
and
leave
stc
outsb
dec
rolb
bound
mov
popf
shrl
stc
pop
inc
fdivs
pop
mov
fimull
mov
pop
out
jg
jbe
dec
fcmove
test
daa
fistpll
stos
mov
mov
mov
out
fisubrs
loop
push
sbb
mull
outsb
clc
popa
fs
js
and
mov
clc
mov
jmp
push
fnstenv
push
xchg
pop
xor
push
sbb
add
es
push
cmpsb
jg
add
lock
add
lods
orb
bound
sti
adc
cmp
rcll
shl
shl
mov
lods
stos
movsb
rclb
bound
and
jge
jbe
and
xchg
mov
pop
addb
pop
nop
das
sbb
and
cmpsl
push
adcb
int3
or
xor
je
or
imul
and
pop
sarb
lret
xchg
cmp
jge
popf
mov
push
lods
sub
mov
mov
sahf
push
enter
mov
cs
xor
popf
xchg
mov
mov
sub
mov
cmpsl
out
xchg
mov
jl
stos
aam
add
iret
clc
cli
std
in
out
or
push
shrb
pop
rclb
sbb
lahf
xchg
loop
dec
xlat
or
xchg
lock
cmp
cmp
pop
push
aad
jbe
push
lcall
mov
bound
test
and
pusha
lahf
sbb
daa
sbb
lock
loopne
movsl
cwtl
popa
lds
push
pop
mov
jb
movsb
stos
cmp
xor
adc
daa
xor
adc
outsl
inc
push
jg
insb
jbe
test
jle
in
inc
add
testl
data16
and
add
and
mov
push
push
add
push
xor
mov
or
pop
xchg
es
sbb
mov
jnp
adc
sub
test
mov
sub
xchg
mov
mov
je
or
adcl
jbe
add
shll
jle
mov
mov
sbb
fidivrl
pop
fcomip
pop
mov
in
mov
shrb
outsb
lcall
test
fcoml
adc
inc
dec
popa
out
push
jae,pt
bound
fsub
mov
arpl
cmpsb
jmp
mov
aam
mov
lds
and
xchg
clc
push
idivl
sub
pop
sub
mov
das
adc
rolb
xor
inc
shrl
mov
scas
imulb
fiadds
cltd
adc
jl
icebp
jnp
cltd
or
jp
mov
pop
insb
nop
lret
adc
adc
pop
sub
ja
xchg
push
mov
xchg
ljmp
mull
fidivrl
movsb
movsb
and
mov
mov
int3
sahf
xor
mov
lea
pusha
leave
arpl
clc
pop
insl
xchg
jno
xor
jmp
xlat
lea
adc
stc
inc
repnz
test
pop
adc
dec
in
fbld
add
aad
in
mov
mov
insb
decl
pop
xor
andl
icebp
inc
dec
negb
jmp
es
adc
add
dec
inc
xchg
ss
cmc
dec
aam
test
xor
aad
std
sub
cmpsl
inc
andb
cltd
scas
pop
pop
sub
xchg
insb
fsts
outsl
hlt
aad
adc
lret
ljmp
or
mov
dec
xchg
fs
outsl
cltd
scas
inc
hlt
pop
xchg
xchg
fsubl
add
push
in
mov
mov
shlb
mov
push
and
jo
adc
dec
xor
lods
mov
xor
mov
rcl
outsb
push
jg
inc
jbe
lea
sub
adc
xor
mov
or
push
add
mov
adc
inc
mov
jo
xor
lcall
leave
in
fmull
cmp
stc
push
push
mov
mov
leave
bound
in
pop
stc
mov
mov
dec
pop
adc
stos
imul
sub
pop
jbe
fsubp
movsl
fsubs
pop
xlat
jno
jnp
mov
ret
out
out
bound
push
cmpb
inc
test
mov
pop
dec
pop
test
or
leave
sub
std
adc
mov
sbb
xchg
imul
lret
imul
adc
mov
and
sub
jp
shll
mov
test
sbb
data16
insl
in
xchg
dec
mov
int3
into
mov
stos
xchg
mov
jbe
lret
add
int3
mov
addr16
ret
add
ds
sbb
insl
inc
and
xor
cmp
adc
inc
data16
arpl
fstpl
lods
movl
add
cmp
pop
dec
mov
push
mov
mov
mov
cmp
mov
jle
into
in
jne
mov
data16
sbb
add
dec
or
xchg
mov
cmpsw
jmp
adcb
movsl
mov
mov
das
call
in
jmp
pop
nop
cmp
mov
and
sub
int
in
xchg
and
cmp
popa
cmpsl
rorl
pop
sti
call
inc
sbb
sbb
roll
loope
pop
addl
xorl
mov
or
in
xor
das
xorb
add
and
mov
sbb
out
scas
popf
pop
jle
mov
pop
add
testl
adc
xor
mov
dec
lahf
mov
hlt
pop
lahf
arpl
cmpsl
xchg
int
add
sarb
mov
mov
repnz
xchg
or
adc
inc
enter
mov
nop
xchg
call
stos
mov
test
lret
xchg
mov
repnz
pop
or
iret
xchg
push
outsl
jns
rcr
mov
aad
in
out
les
sub
dec
js
fbld
jb
in
xlat
mov
outsl
xchg
addr16
jmp
pop
aad
stc
jne
dec
mov
xchg
sub
insl
cmp
mov
gs
jg
and
out
aaa
sub
and
and
leave
pop
fimuls
stos
sub
xchg
lahf
fstpl
mov
loop
lock
repnz
xchg
jno
mov
add
enter
dec
jp
fdivrl
xchg
shl
mov
fisubrs
negl
fldcw
push
int3
icebp
mov
xchg
xchg
dec
sub
or
sub
mov
and
subl
cmp
lock
and
xchg
fstpt
sbbb
in
lret
pop
and
enter
mov
movmskps
fnsave
add
pop
inc
aad
arpl
xchg
or
sbb
mov
mov
adc
add
xchg
lods
js
xor
lahf
pop
jecxz
mov
xor
insl
jg
adc
pop
enter
push
shr
lcall
sbb
test
ss
bound
sbb
add
pop
inc
mov
adc
sbb
sub
andl
pop
fs
sarb
mov
inc
fnstsw
sarl
shlb
enter
pop
dec
dec
mov
lods
fsts
mov
xchg
inc
pusha
xchg
dec
cmpsb
pop
dec
into
push
inc
add
popa
inc
mov
out
adc
and
push
cmpsl
xchg
test
mov
sahf
fwait
decl
cmpsl
aaa
push
push
fisubrs
lahf
iret
in
pop
fwait
jnp
andb
lods
pop
hlt
lea
cmp
inc
adc
outsb
mov
shr
movsl
and
je
dec
arpl
cmc
in
enter
int
jg
je
lds
repnz
subl
dec
dec
pop
sub
xor
pop
push
lcall
add
test
jp
nop
xchg
and
mov
rcrb
fbld
cmpsl
mov
adc
or
adcb
ds
in
aas
repnz
ja
mov
ret
xchg
xor
test
push
lret
xor
add
cltd
cld
or
pop
stos
iret
cmp
pop
sbb
xor
arpl
outsl
jg
push
sub
std
mov
loopne
add
mov
in
outsl
gs
fucom
pop
and
cli
mov
mov
jns
sbb
push
popa
sbb
add
in
out
jge
and
xchg
push
in
test
pop
lret
mov
mov
xchg
xchg
sub
push
dec
gs
pushl
lcall
or
inc
xchg
loope
mov
jb
xor
cltd
jge
xchg
lds
pop
sbb
ficoms
clc
jo
scas
adc
mov
sahf
pop
mov
push
lahf
or
inc
lds
jl
mov
sbb
cmp
and
jg
xchg
in
push
jb
orl
sub
mov
add
in
add
pop
jo
ja
dec
sbb
push
rclb
in
sub
cld
add
dec
aad
cld
cmp
xor
mov
out
cmpsb
pop
in
popa
inc
popf
cmp
pop
into
ss
dec
std
pop
sbb
je
fbstp
gs
mov
lahf
sub
outsl
pusha
lods
test
pop
dec
orb
sbb
or
sbbb
cmpsl
push
dec
imul
jle
ficompl
lock
pop
dec
mov
sahf
test
lock
mov
jne
mov
xor
insb
jno
movsb
pop
fisubs
xchg
lret
mov
int
lea
or
and
mov
adc
dec
push
mov
mov
lock
scas
dec
jae
adc
clc
test
outsl
les
xchg
dec
movsb
jg
aaa
or
pushf
push
pop
xor
jl
mov
icebp
lret
ret
imulw
push
mov
cmpsl
xchg
add
jp
xchg
imul
inc
cmpsb
and
ds
push
jns
fiaddl
movsl
push
fs
add
dec
adc
and
sub
cmpsb
fwait
bound
aas
aam
push
push
or
push
sub
xchg
fiadds
out
cmp
movsb
mov
in
mov
mov
cmp
das
testb
mov
cmpsb
push
mov
mov
mulb
adc
push
mov
cs
mov
jae
and
xor
jno
loopne
test
sbb
mov
jo
rcrb
sub
test
lret
push
lahf
xor
gs
and
les
cmp
push
push
inc
pop
push
fbstp
jnp
mov
jle
mov
loop
clc
inc
cmp
movsb
clc
repnz
adc
sub
outsl
mov
xchg
and
sbb
mov
push
mov
jnp,pt
sub
repnz
mov
and
xchg
xchg
lea
push
xor
into
mov
xor
inc
pushf
fwait
test
imul
push
dec
outsl
push
push
test
add
xchg
fs
fimuls
xor
push
push
cmovne
or
and
xchg
inc
jg
shlb
push
ja
push
pusha
imul
stos
insb
add
jge
push
mov
sub
imul
mov
in
xor
mov
cli
or
icebp
sbb
leave
dec
mov
dec
mov
jmp
std
mov
stos
scas
and
adc
pop
lahf
pusha
xor
mov
jbe
cmp
xorl
cwtl
inc
cmp
inc
scas
pop
or
cmp
push
repnz
dec
mov
inc
jl
es
aas
xor
es
jnp
xchg
mov
insb
insb
and
push
pop
push
push
bound
fs
fstpt
jo
pushf
imul
add
jmp
adc
in
push
dec
cmpsb
pop
ds
jnp
loope
aaa
mov
jb
pushf
xlat
mov
popa
std
dec
cmpsl
xchg
or
push
cmp
outsl
fcom
mov
xor
push
inc
dec
pop
ror
test
dec
mov
xor
cmp
push
push
mov
mov
pop
movl
scas
xchg
mov
push
lahf
lods
lcall
arpl
push
ljmp
add
and
iret
xor
dec
ret
mov
mov
fnstenv
mov
push
jg
adc
xor
and
clc
adc
push
cmp
inc
mov
gs
inc
push
sub
or
fnstenv
cmp
inc
adc
lods
sahf
add
out
adc
shrb
in
rclb
inc
rorb
inc
aad
repz
mov
mov
and
jo
push
pop
cmpsb
dec
pop
jae
cmpsl
push
dec
out
mov
addb
js
add
xchg
fwait
xor
jbe
aam
aam
push
mov
movsb
mov
fisubrs
std
stos
imul
out
sbb
pop
inc
cli
mov
movsl
fs
in
dec
cmp
add
aad
mov
and
mov
sahf
aad
jmp
xchg
cld
and
sub
daa
jo
cli
out
push
popa
das
fcom
add
aaa
xor
flds
mov
sub
inc
cld
stos
lea
adc
jb
dec
out
dec
repnz
and
ja
push
lahf
pop
mov
ljmp
std
mov
dec
inc
stc
lock
jge
rcrl
push
lret
xor
dec
sbb
and
or
mov
lret
cld
adc
mov
cmp
add
je
outsb
and
ljmp
test
adc
and
xchg
aam
shll
xlat
push
jge
jne
xor
out
and
xchg
out
jle
adc
mov
repnz
fsts
jge
movsl
fs
rcll
lahf
rcr
call
jl
insl
sub
jg
xor
loopne
jle
scas
pop
pop
jmp
sub
sbb
mov
repnz
sub
imulb
xchg
repz
pop
outsl
hlt
hlt
int
jbe
fmull
icebp
cmp
test
test
enter
fmul
andb
mov
cld
jns
ret
hlt
mov
mov
in
sbb
dec
mov
jmp
cmc
sbb
data16
lea
mov
stos
ret
mov
repnz
test
scas
cmpsb
cli
push
int3
pushf
fiaddl
shrb
mov
push
or
lret
mov
xor
fwait
jno
into
mov
lock
cmp
add
daa
mov
test
cld
hlt
lcall
lds
addr16
hlt
shrb
cmp
hlt
int
shlb
popf
mov
mulb
push
jbe
stos
std
test
idivl
out
rcl
inc
mov
sub
mov
pop
mov
iret
loope
ljmp
addr16
or
or
cmp
pop
lods
mov
lock
mov
mov
xchg
mov
lds
mov
mov
or
mov
xor
pop
xlat
xor
add
insl
sbb
popf
jns
mov
push
ret
mov
fwait
pushf
sub
pushf
pusha
mov
xchg
rcrb
clc
mov
scas
mov
jge
jb
cmp
mov
cvtps2pd
adc
sbb
movsb
les
pop
jle
out
shll
adc
rol
mov
or
repz
or
gs
mov
xchg
dec
xor
loopne
les
fildl
or
stos
mov
push
stos
pusha
sub
insb
pop
scas
fsts
xchg
push
xchg
jmp
inc
outsl
sbbl
inc
cmp
xor
mov
addr16
in
and
mov
sbb
push
and
pop
imul
mov
les
loope
daa
mov
movb
in
mov
bound
movsb
inc
insb
ja
int
incb
out
inc
inc
jb
and
pop
lea
popa
lods
pop
pop
xor
lcall
jecxz
cmp
bound
sbbl
push
mov
push
push
and
pop
xchg
rcll
popf
dec
push
das
fiadds
repnz
mov
add
sbb
xchg
fcoml
lret
pop
es
mov
fwait
into
pop
sbb
cmp
adc
pop
mov
add
cmp
mov
jmp
cmpsb
jle
lds
scas
dec
js
aad
jge
daa
lods
int
jne
push
or
push
and
mov
xor
jecxz
jp
sbbl
notb
xlat
scas
inc
push
ljmp
adc
mov
add
push
mov
aad
sbb
fadd
xor
mov
adc
adc
xor
sbb
jne
lcall
sbb
movsb
pop
mov
xor
lds
ret
dec
gs
xchg
xor
and
xlat
daa
push
cmpsb
dec
jle
mov
push
mov
push
movb
shl
ljmp
movsb
push
sbb
fsubrs
mov
or
xchg
and
sbb
dec
fwait
cmp
iret
jns
test
das
lods
or
cmpsb
dec
inc
cmp
push
adc
mov
jbe
dec
cltd
aad
int3
mov
cmp
adc
jo
cltd
fdivr
sub
mov
sub
jno
adc
cmpsb
push
sub
scas
in
mov
dec
xchg
add
cmpsl
sarb
sub
movsl
rorl
or
adc
outsb
dec
pop
pop
vandnps
jbe
hlt
ficomps
xchg
test
out
xchg
insl
enter
lods
nop
pop
pop
push
and
movsb
lods
les
notl
dec
mov
mov
xchg
push
jnp
dec
fisttpl
fisubl
jbe
mov
lods
push
cld
lock
push
cmp
push
fmul
mov
cmp
ret
xor
test
fsqrt
loop
ljmp
jge
push
daa
inc
add
rcr
lahf
clc
mov
sbb
mov
jmp
cld
push
jge
bound
adc
pop
jo
jns
cmp
cmp
add
fwait
movsb
sbb
lcall
dec
arpl
out
mov
fildl
xchg
test
adc
je
in
mov
xchg
test
in
movsb
nop
sbb
popf
xor
sbb
dec
pop
outsb
jb
out
mov
mov
mov
std
add
dec
inc
mov
movsb
popa
dec
mov
iret
xor
or
jmp
mov
push
sub
xchg
or
lea
iret
rorb
push
test
mov
pop
shlb
xchg
xor
fmull
cld
mov
shlb
iret
add
or
add
dec
cmpsl
mov
and
pusha
dec
pusha
sahf
cmp
fisubl
mov
jecxz
pop
sbb
mov
mov
mov
ja
push
pushf
push
inc
insl
imul
adc
pop
adc
inc
dec
movb
decb
or
cmc
add
add
add
aam
das
lds
xor
ss
std
dec
mov
ror
in
xor
insl
adc
xchg
cmpsl
ficompl
enter
inc
jmp
je
jne
mov
mov
in
mov
adc
jp
mov
ds
push
imulb
mov
mov
loop
jge
cmpl
xchg
call
xchg
repnz
loope
jbe
pop
dec
dec
ss
nop
mov
mov
add
inc
fsts
mov
pop
pop
aad
lret
out
shll
push
pop
sbb
jo
jbe
scas
push
loope
xor
xor
cwtl
enter
inc
or
push
test
arpl
adc
lret
ljmp
add
outsl
nop
mov
imul
xor
xchg
movsl
cmp
push
ss
xorb
jns
mov
inc
stos
xchg
loop
mov
lea
outsb
and
fnsave
cli
xchg
loopne
cmpsb
lods
scas
daa
fistpl
adc
shrl
pop
push
sbb
mov
inc
rorl
inc
pop
fcmovne
mov
jle
loopne
push
outsl
nop
or
pop
inc
cmp
fsubrs
jbe
xchg
clc
xchg
mov
repz
add
add
pop
insb
mov
lret
in
push
test
in
ret
xor
cli
mov
lods
in
mov
xchg
push
imul
xchg
lock
lods
test
hlt
movsl
xlat
mov
repnz
movsl
dec
ja
adc
mov
cmpsb
or
sbb
pop
out
rcrl
dec
adc
icebp
insb
jl
fisttpll
cli
cmp
or
decb
sbb
shl
or
push
aad
mov
loop
xor
in
ljmp
mov
fisttpl
push
les
dec
int3
rcr
dec
cmp
int
mov
ret
sub
mov
cmp
outsl
bound
int
mov
mov
int3
test
mov
mov
add
xchg
push
inc
or
pop
lahf
test
clc
xchg
push
push
push
in
aaa
push
aaa
and
jb
add
or
pop
sub
pop
in
xor
jns
xor
ljmp
lahf
sbb
data16
add
cmp
inc
jnp
adc
movsb
xlat
sbb
fstpl
int
fmul
or
into
push
pop
loopne
imul
pop
mull
jge
xor
push
cwtl
insb
add
sub
jno
insl
push
jae
aas
ret
inc
push
or
inc
out
xchg
xlat
sbb
fs
mov
outsl
inc
push
mov
lahf
jne
dec
push
mov
mov
adc
dec
jge
mov
push
out
ret
test
xlat
mov
push
jp
rcr
cmpsb
sub
ret
sbb
and
xchg
dec
pop
or
jno
dec
pop
sbb
int
lods
scas
outsl
mov
sub
jno
icebp
pop
xchg
adc
push
sub
stc
in
imul
fstp
xor
rolb
stos
call
add
scas
xor
std
push
repnz
add
jb
in
xchg
mov
in
and
jbe
cmp
addr16
mov
add
in
xor
jle
fnsave
lea
mov
sbb
int
leave
negb
pop
insl
stc
cmpsb
ss
pop
jl
nop
xor
jbe
push
fistpl
adcb
icebp
adc
bound
pop
mov
gs
xchg
mov
push
cld
fwait
lock
jmp
in
dec
xchg
pop
lea
jl
loop
ja
jnp
sbb
push
pop
add
nop
push
push
jb
sub
repnz
stc
lret
mov
lea
gs
f2xm1
std
push
shl
pop
inc
sub
cld
sbb
add
adc
jno
and
jb
es
nopl
and
cmpsl
xor
inc
xor
mov
cwtl
test
pop
sbb
xor
pop
aad
mov
push
mov
rolb
jecxz
and
cmp
push
jns
xorl
jg
mov
aad
cmp
lret
or
aaa
rorl
push
xchg
jae
cmpb
xchg
adc
sti
push
test
sub
pop
out
xlat
in
dec
lods
add
mov
pop
pusha
add
mov
mov
sub
cmpsb
fnstenv
jo
out
xor
dec
loop
xchg
cmp
aad
sbb
int3
fsts
xor
pop
pop
xor
ss
filds
das
mov
dec
mov
hlt
ficomps
sub
xchg
push
push
in
adc
xor
mov
or
je
sbb
insb
xor
andl
shlb
cli
in
mov
es
fst
mov
add
jbe
xor
xchg
gs
adc
sub
and
popa
inc
subl
xlat
jp
push
out
mov
test
xor
outsb
adc
lock
pushf
roll
out
test
and
jne
icebp
dec
lret
cli
stc
jmp
xchg
mov
sub
outsb
ljmp
xchg
mov
scas
pop
add
leave
sti
inc
pop
insl
mov
sub
bound
invd
cmc
addb
push
jns
imul
pop
push
mov
cmc
fwait
ds
dec
jns
ja
mov
cmpb
sub
or
pop
arpl
mov
xchg
stos
mov
jno
mov
inc
sub
mov
lret
xchg
pop
insb
jo
mov
les
cwtl
adc
pop
adc
add
mov
dec
call
insl
jnp
cmpsl
popa
push
sub
xor
in
xchg
mov
push
mov
inc
pop
mov
dec
test
mov
xchg
add
push
dec
and
shlb
cltd
mov
sbb
ret
sbb
fidivrl
clc
sbb
leave
pop
xchg
sbb
jnp
cmc
movsl
mov
xchg
jmp
or
lods
mov
lahf
add
pop
in
xor
pop
aaa
adc
lahf
mov
shl
ret
jno
fs
loopne
in
lret
in
sbb
push
lret
pop
mov
push
lock
lahf
sub
push
cli
int
xlat
out
and
xchg
in
jmp
mov
push
shlb
mov
popa
pushf
mov
fstps
inc
fwait
sub
pop
push
outsb
push
mov
xor
xchg
push
enter
lods
nop
lea
call
adcl
mov
cmp
pop
cmp
pop
jns
and
sub
bound
mov
adc
lret
cmp
inc
xchg
call
inc
dec
in
jo
js
test
push
in
mov
sbb
mov
ja
inc
mov
sbb
jae
pop
fwait
loope
sub
xchg
push
jp
stos
mov
pusha
sti
repz
push
scas
cmpsb
inc
mov
jne
sbb
adc
repnz
out
push
push
fwait
xchg
hlt
in
xor
add
int
popa
inc
mov
jmp
out
and
cmpsl
dec
xchg
loop
int
mov
test
into
mov
mov
or
mov
jle
addb
into
ja
xchg
xor
dec
sbb
pop
jl
jae
fstl
jb
jno
repz
aaa
xor
xchg
in
mov
call
pop
aam
in
les
xor
aad
scas
adcb
sahf
fadds
hlt
stos
leave
xlat
rcrl
cmp
mov
adc
push
dec
dec
rolb
test
ja
in
popf
orl
rolb
sbb
ret
mov
push
aad
fstpl
xor
pop
in
in
sbb
lret
imul
sbb
pop
xor
filds
push
xor
clc
push
mov
push
imul
xor
mov
stos
jb
add
fsubs
ret
fsubr
jae
xchg
scas
inc
sub
or
out
popa
push
push
inc
or
jp
fadd
push
mov
pop
push
push
ret
pop
addl
mov
jmp
xchg
dec
pop
inc
inc
mov
pop
dec
add
push
mov
outsl
imul
loop
sahf
and
negb
and
arpl
pop
and
sti
sub
mov
in
imul
hlt
jecxz
dec
add
adc
sub
in
int3
mov
clc
aaa
xor
pushf
cmp
sti
jno
lcall
pop
mov
mov
xchg
enter
stos
fs
pop
push
iret
nop
ss
jnp
mov
decl
and
imul
dec
add
sbb
daa
inc
push
bound
pushf
les
push
lcall
fisttpll
nop
scas
jno
mov
mov
mov
xchg
xlat
push
jae
jmp
gs
push
cld
rdtsc
pop
jbe
inc
fwait
xor
sbbb
and
xchg
roll
pop
cmp
inc
xor
dec
and
inc
push
lcall
push
stos
mov
adc
pop
sbb
push
xchg
stc
push
icebp
cmp
stos
push
jbe
repnz
repz
andl
leave
out
pop
inc
push
test
fadds
mov
shlb
push
inc
imul
jb
clc
in
mull
xlat
in
xchg
fcomps
pushf
orl
mov
insb
mov
inc
push
dec
mov
scas
xor
dec
arpl
roll
aaa
xor
add
sbb
xchg
push
scas
xor
xchg
push
repz
sahf
xchg
stos
stos
sbb
scas
mov
or
push
outsl
xchg
not
mov
mov
cmp
jns
mov
jnp
xor
sub
xchg
dec
popa
cs
addr16
fadds
icebp
cmp
addr16
lahf
add
cmpsl
ds
mov
mov
lcall
scas
jmp
push
jecxz
lahf
xchg
fmul
insb
decl
jmp
cmpsb
int
adc
negb
cmpsb
dec
add
and
jo
inc
out
loop
push
adc
inc
fmull
mov
pop
push
test
lds
je,pn
sbb
fldl
cmp
fwait
sub
je
add
pop
pop
and
hlt
sub
or
mov
pop
scas
ret
icebp
shrl
mov
sub
loope
sbb
sbb
jo
cs
int
mov
loopne
out
push
push
cmp
loop
popa
adc
sti
icebp
lods
dec
mov
ja
push
mov
mov
inc
cmp
js
cltd
out
sahf
in
add
push
popf
xor
push
loopne
dec
insl
jbe
filds
jno
pop
pop
inc
push
clc
repnz
outsb
stos
rcrl
xchg
sub
mov
cli
in
xchg
add
enter
mov
dec
sbbb
fdiv
xor
xor
ljmp
adc
adc
nop
in
jle
shrl
clc
dec
lahf
xchg
jnp
adc
xchg
xchg
outsl
iret
decl
push
dec
and
push
sbb
lds
push
loope
dec
pop
dec
sbb
outsb
ljmp
pusha
add
xchg
test
and
xchg
adc
addr16
mov
pop
mov
addr16
gs
arpl
inc
jg
xchg
cld
in
std
and
iret
jle
outsl
xor
ja
cs
popa
pop
sbb
iret
xchg
jge
insb
sbb
inc
push
lret
repz
mov
xchg
in
loope
cmp
push
sti
test
dec
xchg
insb
inc
push
shl
mov
mov
add
add
mov
imul
test
push
mov
push
mov
fwait
pop
inc
mov
fnstenv
xchg
pop
bound
hlt
icebp
jl
stc
mov
xchg
mov
orl
int
cmc
gs
mov
stos
mov
in
mov
and
adc
dec
roll
adc
xorl
lock
xor
pop
mov
inc
rcl
xor
fcoml
aam
mov
ja
arpl
enter
loopne
ljmp
ja
aaa
subb
xor
in
sti
xchg
xor
cmp
aad
or
sti
je
jl
stc
cmpsl
dec
jmp
jnp
shll
adc
ja
fdivrs
pop
movsb
ret
sbb
cld
inc
pop
xor
or
push
add
push
mov
ljmp
sbb
cmpsl
into
dec
sti
imul
xchg
jp
mov
xor
push
and
mov
in
or
out
sub
data16
pop
cmp
popf
ret
pop
or
lahf
add
pop
iret
xor
and
adc
cmpsl
stos
jae
cmp
fcomip
mov
fstpt
and
mov
add
cmp
dec
xchg
xchg
repnz
sub
xchg
lds
jl,pn
test
dec
cmc
jns
jae
push
nop
adc
cltd
arpl
mov
data16
sbb
fimull
mov
push
sbb
sbb
xor
lock
aam
sub
xor
pop
pminsw
jg
addr16
fldl
push
fstps
cli
orb
push
popf
jmp
out
or
dec
test
fmuls
jns
lahf
in
js
lret
push
mov
lods
add
xchg
jmp
xchg
aam
test
jae
sbb
popf
xor
adc
add
outsl
adc
ret
test
jecxz
lcall
ficoml
in
fistps
pop
xchg
ficompl
or
popa
and
ret
mov
add
repz
push
outsl
cmc
xor
pop
sub
and
xchg
mov
pop
cld
aas
dec
fwait
shrl
jae
fbstp
mov
in
mov
in
mov
mov
bound
cmc
je
xor
lods
add
ret
mov
lea
test
mov
fwait
imull
xchg
push
idivl
data16
mov
inc
inc
sbb
fsubs
xchg
aad
sti
pop
pop
cs
adc
pop
mov
push
sbb
jmp
iret
mov
pushl
mov
test
sarl
dec
mov
or
jecxz
add
movsl
sbb
cmp
fsts
pop
and
mov
rcll
and
jnp
inc
cltd
mov
jmp
push
dec
cmp
jbe
outsb
js
pop
xor
jmp
mov
rclb
mov
pop
xor
jae
je
dec
mov
xor
jo
cmpsl
ja
sti
adc
xchg
xor
stos
scas
sahf
pop
xchg
sbb
jb
push
mov
nop
lds
addl
sbb
aaa
rolb
shlb
shll
mov
scas
pop
dec
push
out
imul
popa
xchg
xchg
outsl
cmp
insl
mov
pop
cmp
decb
idivl
pop
push
mov
push
cltd
movsb
enter
pop
jbe
testb
popf
orl
xor
mov
lock
scas
xchg
bound
popa
nop
xor
pop
xlat
push
jecxz
dec
loope
mov
cmp
jl
jne
cmpsb
lahf
aad
roll
adc
popa
stos
les
fistpl
jbe
lcall
out
pop
addr16
jecxz
arpl
xor
out
mov
nop
mov
sbb
mov
test
mov
mov
pop
adc
sets
pop
xchg
xchg
daa
imul
pop
jne
stos
push
inc
dec
jp
push
aad
out
push
inc
aam
add
push
testb
hlt
imul
lds
sub
gs
movsb
mov
or
push
xor
jp
sbb
jp
cld
fildl
in
fdivs
jg
pop
cltd
aas
cli
cmp
mov
das
fisubs
cmp
mov
les
test
aas
fbstp
stc
int3
pop
inc
shll
iret
xor
insl
xor
mov
in
mov
mov
cwtl
adc
pop
test
pop
xor
aad
aad
jnp
in
lods
inc
pop
push
cwtl
movsl
test
lahf
xchg
scas
mov
pushf
rorl
repnz
notl
in
int3
push
stc
pushf
jns
lods
daa
mov
dec
sbb
in
cmpsb
cmpsl
mov
lret
pop
pop
rcll
into
dec
pop
push
add
add
or
dec
mov
pop
adc
mov
test
push
lods
sbb
int
addr16
bnd
repnz
std
sub
jmp
fildll
notb
je
fcompl
sbb
sar
push
pop
jns
push
shr
inc
ja
xor
jg
dec
outsb
rcrl
int
aad
dec
in
mov
xor
mov
jns
xchg
or
cmp
movsl
inc
or
mov
imul
aad
push
lock
dec
pop
loope
int
cltd
xor
enter
xor
je
into
cmc
pushf
test
sbb
cmc
jbe
stc
mov
test
stos
lcall
sub
or
and
mov
cmpsb
push
test
stos
push
mov
out
and
xor
or
pop
jb
gs
sbbb
or
dec
sti
pop
adc
and
jecxz
addb
xor
push
insl
xor
stos
fimuls
mov
cmpsb
aas
aad
pusha
les
or
or
xor
mov
push
int
repz
xchg
sbb
fnstcw
cmp
das
xchg
cmc
xchg
sub
es
orl
dec
mov
mov
jl
push
push
fdivrl
jae
inc
data16
and
lahf
push
and
cld
lret
xorl
subb
lds
jo
mov
sub
loope
mov
clc
std
stos
lret
aam
adc
imul
cmp
inc
jmp
cmpsl
pop
mov
addps
out
fisubs
xchg
push
mov
ja
mov
mov
mov
dec
xlat
shrb
shr
push
mov
add
fdivrs
mov
or
into
call
dec
lods
jae
sti
leave
jb
dec
mov
stos
xchg
xchg
aam
add
dec
icebp
xchg
jbe
rcrb
roll
cmpsb
mov
adc
adc
sub
push
lods
mov
arpl
hlt
push
push
subb
std
push
outsl
mov
std
mov
xor
cld
xor
push
sub
sub
fadd
push
pusha
add
jl
push
mov
jge
cli
pop
call
lds
imul
idiv
popf
ljmp
pusha
enter
imul
std
xor
stc
mov
stos
gs
jbe
std
rolb
mov
sub
xor
add
stc
pop
inc
cmp
es
mov
cli
adc
cmp
sbb
iret
inc
rcr
push
sub
push
add
aam
in
lds
xor
aam
xor
xor
aas
clc
xchg
aaa
adc
mov
add
test
cmpsl
jecxz
lcall
xor
push
push
sbb
mov
dec
mov
inc
iret
mov
sub
fisttpl
and
mov
cmp
xor
add
mov
mov
outsb
mov
int
sbb
pop
leave
ljmp
mov
icebp
push
pop
sbb
bound
aaa
jmp
test
dec
pop
xchg
sbb
idivl
fimull
std
lock
and
mov
pusha
ja
jnp
arpl
in
adc
sub
push
mov
or
cmpsl
cmp
sbb
adc
fadd
ja
pop
mov
xor
sbb
sbb
cmp
arpl
les
cld
addb
mov
ss
sub
out
xor
test
in
cmp
in
repnz
test
cmp
sbb
les
fwait
mov
scas
int3
mov
push
and
clts
xorb
xlat
and
cmp
or
fwait
xor
fdivrp
cmp
xor
pop
jno
jg
cmp
nop
push
fs
andl
sub
out
pop
outsl
fsubrl
insb
outsb
cmp
test
insb
orb
mov
push
sbb
adc
mov
add
out
xor
mov
jne
outsl
outsl
xor
xor
cmpsl
das
je
pop
leave
xchg
push
scas
in
add
xchg
fwait
clc
pop
xchg
push
pop
or
lea
jp
arpl
sub
loopne
jl
test
xchg
ss
loop
or
and
popa
aaa
int
mov
loope
das
inc
mov
jmp
inc
mov
jge
mov
jp
mov
stc
fs
fs
cwtl
in
subb
scas
lods
jns
arpl
aas
adc
dec
dec
dec
imul
add
popf
mov
adc
xchg
leave
andl
push
adc
mov
jbe
sub
mov
loop
sarl
push
add
jle
fcmovnb
push
lret
imul
mov
mov
mul
ret
pop
jne
mov
cmpsl
cltd
and
ljmp
adc
sbb
push
adc
pop
sahf
mov
push
stc
inc
popf
test
cld
sub
add
iret
jp
add
push
lahf
stos
xchg
lret
out
int
xchg
mov
into
stc
psubd
pop
rolb
sbb
lods
cmp
mov
leave
xor
test
sbb
pusha
lahf
test
jne
rcl
xor
dec
out
sti
outsb
imul
push
movsl
aaa
arpl
dec
and
push
popa
xchg
popf
pop
int
pushf
insb
pop
mov
insl
lea
cmp
clc
adc
outsl
insl
test
mov
add
dec
jns
sub
das
push
cltd
loope
and
jne
aam
jle
in
lret
add
mov
mov
in
cli
xlat
inc
xor
out
in
enter
jnp
sbb
call
cmp
sahf
and
notl
fsubr
mov
test
jns
fnstenv
dec
xchg
cmp
jnp
mov
loop
ficoms
xor
jge
ss
xchg
stc
mov
xchg
inc
mov
fadds
mov
ror
inc
aam
dec
and
push
sbb
adc
dec
inc
or
mov
dec
int
and
xorl
adc
pusha
sub
adc
jecxz
lea
test
test
cmp
and
bound
outsl
xchg
or
dec
loopne
loopne
mov
mov
xor
cwtl
sub
sbb
lret
jge
cmp
push
shlb
in
or
push
or
adc
ds
leave
insl
inc
inc
sub
push
in
pop
mov
lret
ds
pop
sti
popa
xor
and
adc
aas
xor
jb
pop
into
pop
push
call
ja
sbb
xor
cwtl
fnstsw
imul
shll
mov
push
jmp
fs
ss
mov
xchg
int
dec
in
mov
jmp
and
movsl
ds
clc
sbb
adc
xchg
push
fwait
inc
lods
gs
pop
jg
xchg
out
xchg
imul
xor
pop
cmc
std
dec
xchg
jg
cld
push
orl
add
or
fcmovnbe
and
sub
in
push
or
push
mov
inc
cmp
shll
sub
and
mov
movsl
imul
xor
popa
addr16
xor
push
rorl
xchg
mov
mov
mov
jg
je
icebp
jp
xchg
lret
movsl
xchg
xor
roll
icebp
xchg
or
xchg
inc
into
adc
stos
jecxz
xchg
jmp
xchg
out
adcl
push
sbb
sub
jns
add
dec
in
aam
or
dec
jmp
ret
inc
loope
xor
inc
dec
into
pushf
and
shr
fstps
fidivrl
popa
int
lret
pusha
pop
sub
adc
test
out
fidivs
pop
in
les
cmc
adcl
stos
sub
or
aaa
call
loopne
in
jo
mov
mov
ret
mov
mov
pop
movsb
mov
shlb
js
bound
xorb
cmpsb
dec
repz
mov
cmpsb
or
dec
loop
lods
inc
repz
dec
mov
jns
sub
mov
push
cmp
ds
mov
sbb
cmp
pop
out
mov
cwtl
jg
outsl
movsl
dec
movsl
adc
shll
stc
cmpsb
mov
jg
fdivrl
dec
jle
xchg
fnstsw
jnp
add
jno
sbb
adc
ja
ds
inc
jmp
shlb
mov
out
jge
xor
sbb
mov
jmp
shrb
in
adc
ss
mov
push
or
mov
adc
fcoms
cltd
out
pop
dec
push
mov
sub
mov
cmp
xchg
and
inc
push
movsl
lret
cmp
and
data16
pop
dec
mov
rcrb
lds
cmp
xchg
pop
jmp
xchg
ficomps
rcrb
push
stc
fisubl
int3
in
aas
pop
ficompl
adc
inc
sbb
test
inc
mov
clc
push
jo
enter
cltd
and
push
xchg
and
pop
jne
test
test
call
push
push
xor
or
loop
repz
mov
lea
int3
pop
mov
jb
out
jl
cmp
jecxz
add
in
scas
fbld
jge
and
ja
xor
cmp
jae
ret
addr16
int
inc
fldenv
cld
daa
mov
inc
stos
cmpsl
out
std
andl
mov
lahf
adc
addl
ja
lcall
xor
mov
jno
pop
loopne
test
lods
dec
or
xchg
je
rolb
adcl
addr16
fisttps
cmp
insl
mov
push
aas
xchg
shl
addb
cmpsl
lock
jb
ficoml
outsb
sahf
add
fisttpll
push
inc
xlat
inc
adcl
or
jns
mov
push
jmp
adc
insl
inc
sar
xor
punpckhbw
add
adc
fstl
sbb
push
and
add
repz
inc
push
pop
pop
lret
icebp
jns
sti
mov
je
ficomps
inc
lea
into
lods
movsb
frstor
add
sbb
js
cmp
lahf
adc
dec
cmp
aaa
lds
imull
cmp
push
cld
imul
in
in
movsb
xchg
sbb
in
add
sub
xchg
pop
outsl
popf
aad
lods
test
outsl
test
mov
xchg
in
mov
mov
cld
aad
xor
mov
push
stos
push
xor
negl
nop
popa
shll
mov
sbbb
inc
loopne
scas
les
nop
fimull
test
dec
jnp
mov
jo
pop
rol
enter
insl
dec
xchg
push
repnz
jo
cmpsl
add
inc
testb
pop
dec
inc
out
enter
mov
jge
in
sbb
push
cld
and
scas
inc
stos
mov
jp
cld
lahf
push
sete
adc
in
jae
xchg
ss
xchg
jae
arpl
sahf
ret
cli
sub
ret
enter
jno
dec
andl
inc
lea
jmp
mov
lods
mov
mov
fldln2
cmp
mov
inc
xchg
add
out
cli
leave
ds
inc
popa
sub
jno
mov
mov
mov
pop
dec
iret
mov
pop
jl
aam
sahf
mov
pusha
mov
mov
in
add
jg
popa
fwait
jo
sbb
xchg
xchg
and
mov
adc
lea
xor
pop
adc
xchg
out
inc
mov
outsl
and
xchg
test
movsb
push
dec
sbb
mov
dec
mov
inc
daa
pop
jge,pn
or
mov
xor
mov
lcall
nop
xchg
dec
test
enter
pop
sbb
les
adc
inc
xor
push
out
sub
xchg
mov
ss
fistl
fidivrl
cmpsl
sbb
jnp
jp
cmpsl
stc
cmp
or
fdivl
lahf
hlt
daa
sbb
mov
lcall
add
and
or
nop
pop
cwtl
ljmp
cltd
mov
xor
pop
dec
ljmp
lods
std
add
cmp
les
dec
push
out
stos
aaa
sub
jo
lods
adc
xchg
xlat
push
fwait
or
mov
mov
adc
xor
cld
and
jne
pop
mov
mov
fucomip
lcall
adc
jns,pt
fs
pushw
xchg
ss
push
push
in
mov
mov
imull
adc
adc
sbb
xrelease
scas
psubsb
and
jne
pop
mov
push
mov
stos
push
cltd
cwtl
aaa
dec
xor
xchg
mull
push
pop
movsb
push
sahf
add
add
sbb
push
add
sbb
push
test
add
sub
cmp
add
add
adc
mov
mov
push
or
adcl
rcrb
pop
jnp
push
clc
push
lods
and
mov
cmp
jae
sub
mov
fnstenv
pop
cmp
js
push
loopne
insb
les
insb
dec
dec
data16
fadds
push
sub
push
pop
sub
fcompl
imul
std
test
inc
sub
cmp
daa
mov
lods
cs
dec
cmpsb
sub
cmp
dec
xor
ja
shrl
out
je
aad
cltd
dec
adc
dec
xchg
imul
aas
mov
mov
outsl
mov
test
mov
and
or
lods
and
and
out
addr16
int3
xlat
clc
jge
mov
insl
jle
mov
push
movsl
out
mov
jp
and
into
xor
and
push
push
inc
lods
mov
stos
dec
push
movsb
enter
mov
test
pop
and
lea
sbb
pop
sub
insl
pop
gs
lcall
push
pop
sahf
pop
adc
fstpt
jg
hlt
pushf
add
mov
hlt
pop
mov
bound
aaa
inc
lret
jmp
xchg
dec
pop
push
divl
faddl
dec
jne
out
jo
popf
sub
mov
inc
test
pop
mov
pop
cmpsw
dec
and
aaa
xchg
push
loopne
in
adc
sarl
test
clc
push
insb
xor
jno
dec
sbb
stc
push
mov
adc
sub
and
xchg
mov
dec
xchg
sbb
ret
mov
ret
push
add
lahf
or
dec
les
mov
push
scas
xchg
pushf
mov
jae
jae
inc
lret
mov
dec
add
or
sub
mov
xchg
lahf
xor
jae
sbb
mov
cmpsb
pop
pcmpgtd
jne
sbb
lret
sbb
lock
jmp
jns
adc
out
shl
daa
popf
xchg
inc
test
or
sub
push
lret
xor
push
dec
or
mov
int3
cmp
cmp
negl
enter
stc
cwtl
jmp
cltd
mov
lea
xchg
mov
call
cs
push
xor
ficompl
test
jno
cmp
lahf
push
mov
call
and
xor
inc
mov
lock
pop
cltd
xchg
lret
adc
fdivl
in
mov
or
sbb
xchg
lcall
or
jo
jbe
push
add
mov
into
mov
lods
out
inc
popf
lret
stos
add
jg
divb
bound
pop
jg
mov
inc
mov
mov
sbb
subl
fisttpll
inc
lds
inc
lahf
icebp
jae
out
inc
and
push
imul
jno
or
xchg
sub
jns
xchg
rclb
inc
or
dec
add
outsl
mov
fcompp
cltd
ds
lret
les
repz
fst
pop
in
push
xchg
fs
or
cmc
adc
adc
dec
xor
pop
pop
mov
cld
insl
mov
jo
sti
ror
hlt
jbe
xor
inc
int
insb
test
push
sbb
dec
sub
add
or
mov
aad
scas
gs
mov
arpl
scas
xor
inc
xchg
cs
xchg
mov
outsb
data16
imul
lret
push
push
jb
xor
push
mov
add
sbb
push
pop
rcrl
dec
shrl
mov
adc
add
into
imul
jl
scas
cmp
xlat
jae
adc
sub
imul
xor
out
ds
pop
fiadds
add
jbe
addl
inc
insl
inc
cwtl
mov
outsb
sti
sub
dec
icebp
insl
mov
jnp
push
pop
add
mov
sbb
les
mov
test
sub
shrl
inc
jbe
xor
inc
movsb
xor
loope
test
aaa
add
xor
lahf
jns
mov
cmp
cmp
jno
pop
xchg
pop
xchg
add
pop
nop
cmp
jmp
cltd
lcall
xchg
xchg
sti
and
jge
orl
icebp
mov
repz
push
jmp
call
call
leave
xor
fldcw
cmp
mov
cld
inc
push
and
pop
or
mov
sbb
xor
cmp
mov
lahf
xchg
mov
sub
or
jle
cs
push
xchg
out
and
arpl
arpl
aam
mov
jno
jo
jno
int3
dec
xchg
jo
lock
adc
lret
dec
xchg
dec
insl
call
jnp
pop
imul
xchg
xor
add
in
mov
add
xchg
push
and
push
sub
mov
mov
push
test
repnz
std
sbbb
xchg
xchg
xor
ljmp
lds
cli
push
jl
pop
ljmp
mov
jp
fsubr
push
push
int
or
testl
sbb
add
inc
mov
mov
shl
xor
mov
pop
test
xlat
loop
xchg
hlt
or
adc
fcmovnu
dec
pushf
mov
lret
pop
adc
ja
insb
inc
fiaddl
out
in
sub
add
jg
push
xor
jmp
mov
scas
xchg
push
mov
adc
jns
or
cmp
jp
xor
jns
cmp
ret
iret
mov
add
adc
and
dec
inc
pop
testl
or
jg
jb
cmp
lea
pop
shrl
in
outsb
jbe
jb
inc
mov
fisubrl
gs
lahf
repz
int
add
push
in
lea
lcall
dec
ja
lock
stc
jo
mov
lods
lahf
daa
pop
loop
or
mov
push
lods
stos
add
loop
adc
xorb
lret
aam
scas
jnp
cwtl
cmp
or
sub
rclb
jnp
movsb
sbb
push
sbb
push
mov
xor
inc
cltd
jns
test
lea
mov
adc
xor
cmp
mov
pop
jge
push
push
add
push
sub
sbb
xchg
inc
aad
add
xor
jmp
in
cmpsl
imul
arpl
test
cmp
adc
outsl
leave
fistpl
jne
dec
gs
cmp
rorl
push
push
cmp
and
xchg
cmpsl
mov
lret
jno
aas
sbb
sub
mov
fs
inc
loop
aaa
pop
lret
push
ret
sub
xchg
inc
cmp
cmpsb
inc
or
adc
les
iret
dec
aam
gs
cmpsb
scas
mov
inc
lahf
jge
jmp
jne
stos
add
inc
insb
je
rcrb
xor
jno
addr16
movsl
lods
xchg
test
push
lods
inc
mov
cmp
cmp
int
ret
ret
dec
jne
dec
mov
sub
in
ds
test
sbb
sub
test
rclb
mov
sub
hlt
repnz
sub
inc
mov
add
or
and
ds
aaa
dec
stos
daa
cmp
outsl
mov
out
add
inc
dec
sbb
aam
stos
fwait
rorl
pusha
xchg
add
xor
repnz
lods
pop
in
in
xchg
movsb
fwait
adc
and
sub
jno
imul
fwait
cltd
xor
adc
into
jge
pusha
jnp
out
xor
pop
aas
push
dec
mov
and
cwtl
mov
mov
xor
mov
mov
push
xor
in
xorl
mov
shll
clc
mov
mov
std
daa
inc
imul
in
rolb
rcrb
pop
je
psubw
out
std
mov
mov
mov
out
sub
push
scas
pop
insl
int
jge
cmpsb
imull
cmp
adc
inc
movsb
jne
jmp
fucomip
jb
addb
cmp
xor
mov
test
and
inc
frstor
jns
je
xchg
iret
xchg
mov
and
fabs
jnp
push
lahf
and
outsb
repnz
stos
pop
inc
in
push
bound
inc
ds
jle
clc
repnz
shll
sbb
lods
xchg
sarb
fxch
test
ret
icebp
xorl
leave
jl
lahf
outsl
jp
aaa
addr16
imull
or
mov
sbb
jae
shlb
lods
insb
xor
add
push
lock
insb
push
scas
jl
mov
fstps
add
xchg
andl
xchg
mov
icebp
add
or
mov
cmp
lea
lahf
dec
push
fwait
movsb
xchg
xchg
xchg
inc
push
dec
inc
or
shlb
xchg
cltd
notb
sbb
iret
jp
adc
into
mov
sbb
jns
jle
aaa
mov
add
push
aam
cmp
or
inc
push
pop
jp
lods
push
dec
adcb
mov
pop
mov
and
popf
js
mov
cmp
lret
dec
inc
xor
repnz
sbbb
xor
fadd
nop
lods
mov
aas
outsl
sub
int
sarb
push
or
aam
pop
pop
dec
int
test
pop
or
push
sti
push
mov
into
mov
jl
inc
lahf
add
dec
inc
jb
test
sub
ljmp
jbe
xchg
daa
xchg
jmp
lcall
add
jb
imul
push
stos
loope
add
lcall
inc
and
lahf
dec
cltd
jno
xor
mov
mov
pop
mov
lods
pushf
add
xchg
jg
adc
pop
jmp
or
lods
pusha
jns
das
outsb
inc
rcll
stc
daa
mov
adc
mov
adc
ss
out
xor
jg
loopne
add
or
inc
mov
lcall
add
cwtl
aaa
adc
scas
aas
gs
imul
mov
xchg
sarb
mov
movsb
dec
push
in
outsb
arpl
das
xchg
adc
fcmovnbe
push
xchg
out
call
push
sub
or
xor
adc
mov
mov
fadd
sahf
inc
out
xchg
mov
add
add
iret
ja
jae
clc
dec
or
outsl
lret
cltd
and
jb
add
mov
lahf
push
sub
jge
jge
mov
xchg
jmp
rorl
test
push
push
enter
xor
sbb
sbb
les
addl
mov
nop
and
or
aas
pop
sbb
leave
and
xchg
loop
add
sub
and
outsb
je
push
fwait
pop
stc
xchg
lock
popa
test
lcall
je
cmp
xchg
lea
iret
ja
pop
xchg
mov
addr16
inc
mov
rcrb
and
sub
or
jmp
mov
mov
int3
jbe
sahf
andb
cmp
sub
lds
icebp
xchg
ret
add
shll
inc
push
mov
inc
pop
sub
sar
cmp
test
inc
insb
les
sub
xchg
pusha
pop
mov
jnp
std
je
adc
and
sbb
rolb
mov
lock
sbb
frstor
cltd
mov
stos
ss
cmc
jo
cmc
xchg
cli
cmp
repnz
test
orb
mov
lods
jb
sub
outsb
aad
mov
aam
imul
mov
addb
and
push
or
mov
out
fdivs
addr16
mov
pop
das
adc
push
cmp
push
push
lahf
dec
xor
mov
pop
mov
testl
add
cltd
lock
out
cld
iret
rclb
rcl
jns
sbb
sub
adc
and
imul
add
xor
push
mov
pop
jmp
mov
out
mov
adc
cmpsb
lods
ret
ret
int
cmp
or
jns
xchg
les
loop
stos
xor
xchg
push
push
data16
cmpsb
adc
adc
negl
out
inc
cs
divl
or
push
loope
int
mov
icebp
mov
mov
jle
pop
or
ss
pusha
mov
add
xlat
mov
xchg
mov
xchg
insl
je
dec
or
insl
inc
add
push
jnp
movb
xor
push
pop
out
aas
pop
mov
xor
lock
iret
sbb
aam
jae
out
sbb
test
jl
rorl
repnz
fsts
out
adc
jnp
pop
cmpsl
adc
into
inc
xchg
push
loope
xchg
push
sub
lret
lret
enter
out
or
or
rcrb
shrl
shll
icebp
dec
lock
pop
popf
mov
and
inc
jns
sbb
inc
repz
inc
fcompl
jae
push
sahf
gs
pop
xchg
pop
add
mov
arpl
pop
das
inc
inc
inc
adc
mov
cwtl
push
pop
sbb
call
cwtl
adc
xor
adc
ds
add
mov
cmp
mov
mov
inc
incl
mov
or
or
into
jo
jne
test
pop
inc
jns
lock
in
insb
adc
mov
inc
cmpsb
push
enter
pop
enter
jg
jp
insb
leave
fisttps
xchg
dec
sbb
lds
ds
xchg
pushf
mov
adc
sbb
and
in
test
or
fmull
subl
or
cmpsl
xchg
pusha
add
xor
mov
ret
fbld
daa
das
sub
sbb
sub
jle
mov
in
push
outsb
push
dec
xchg
repnz
lcall
pop
inc
jbe
xchg
cmp
pop
inc
mov
mov
fstpl
inc
loope
mov
push
popf
or
xor
in
sub
add
adc
jo
mov
add
sub
jne
iret
jb
inc
pop
repz
dec
inc
adc
test
cmpsb
into
push
outsb
xor
aaa
insb
fwait
or
inc
imul
test
adc
jecxz
mov
xor
subl
dec
mov
push
xor
fldl
dec
dec
ror
lds
int3
aad
stos
addb
cmp
jg
mov
fwait
stos
out
and
mov
or
repnz
xchg
fildl
cmpb
mov
cmp
gs
mov
out
lret
dec
lahf
inc
fbld
enter
and
add
cmpb
mov
iret
mov
inc
pushf
in
js
add
enter
cmp
inc
pop
xchg
xor
xor
shrb
cmp
sahf
lret
das
loope
in
fnstcw
stos
dec
aam
push
mov
push
in
fnstsw
shl
or
ds
xchg
cmc
fs
add
daa
sbb
aaa
ss
dec
mov
fimull
notb
dec
lahf
jecxz
xor
aas
add
ret
push
addr16
adc
sbb
rcll
stos
sbb
movsl
xchg
jmp
dec
mov
stc
mov
adc
jp
mov
jne
rcr
mov
int
add
jno
int
cmpsb
dec
mov
cmp
xchg
cmp
icebp
cwtl
aas
jg
mov
scas
sbb
mov
scas
jecxz
popf
add
mov
xlat
jb
mov
movsb
mov
push
push
sbb
sbb
lcall
inc
out
movsb
xchg
push
arpl
xchg
push
cmp
dec
adc
push
pop
sbb
xchg
and
femms
pop
mov
xchg
fidivrl
clc
mov
stos
mov
insl
fdivrl
sub
sub
es
popf
jo
pop
dec
loopne
test
push
pushf
adc
dec
inc
add
pop
push
mov
dec
outsl
mov
push
jb
jle
shll
adc
stos
icebp
push
in
stos
bound
adc
pop
scas
jmp
shlb
lcall
bnd
in
icebp
mov
lret
and
push
sbb
adc
xchg
cmp
cmpsb
daa
movsl
andb
movsb
xorl
jo
popa
push
pop
push
test
xor
xor
shl
fwait
in
int
popf
sub
cs
inc
addr16
jo,pt
aad
out
sahf
pop
xor
jae
xor
std
clc
ja
fildll
out
inc
popf
xchg
scas
sbb
xor
sysenter
cmp
cld
dec
lods
test
sub
mov
or
orb
jno
scas
fdivs
mov
xor
xchg
aaa
sahf
or
push
div
les
xchg
cmp
mov
and
adc
adc
push
jo
scas
pusha
test
add
les
sbb
and
test
sbb
pop
cli
sbb
add
pop
pop
jmp
test
stos
arpl
insl
push
lea
jg
mov
inc
std
cld
scas
push
sub
call
mov
call
sub
add
and
add
mov
xlat
add
push
aad
dec
and
inc
repnz
sbbl
ljmp
dec
das
cli
xor
das
xor
test
ffree
mov
mov
orl
lret
add
in
mov
dec
mov
and
cld
scas
imull
sarl
xchg
add
push
pop
lret
leave
jg
mov
pop
push
out
rorb
mov
push
insb
mov
inc
or
add
add
mov
pushf
mov
inc
dec
aad
jp
xor
shlb
sbb
sbb
popf
add
inc
sarb
fwait
pusha
jae
mov
mov
mov
lods
and
xchg
push
ja
scas
mov
gs
jmp
mov
rorl
jo
dec
cmp
lock
pop
out
mov
mov
decb
push
lock
sub
shl
mov
mov
call
notb
sbb
xchg
push
push
xchg
jno
into
mov
sub
hlt
dec
jb
fidivrl
rcrl
fimull
lods
mov
inc
mov
mov
mov
decb
jae
shlb
xchg
xchg
inc
subl
push
jmp
shlb
cmp
push
testl
or
leave
stos
lods
fs
int
jbe
popf
insb
sbb
push
idivb
xor
sahf
or
cmp
mov
pop
mov
mov
mov
xor
pusha
xor
dec
xchg
push
push
cmp
aas
rol
ret
or
cwtl
cmpsl
or
inc
cmp
inc
js
mov
notb
clc
iret
mov
imul
icebp
add
or
xor
in
fidivs
pop
or
fsubrs
aas
xchg
decl
or
cmp
nop
movsl
jecxz
lock
mov
arpl
les
xchg
pop
xchg
adc
stos
outsl
enter
xor
mov
fmuls
add
in
mov
inc
mov
arpl
ljmp
test
xchg
nop
loopne
aad
mov
rcrl
lahf
inc
repz
mov
ficompl
and
xchg
sub
mov
xchg
not
loop
xchg
clc
inc
cmp
and
adc
addl
mov
lea
mov
push
mov
cmp
rcll
pop
or
mov
mov
ss
push
jbe
pop
sbb
mov
out
xlat
or
cmp
test
mov
sahf
sbb
das
lds
inc
imul
incl
and
cld
iret
ror
dec
add
mov
or
jb
mov
jl
stc
fldt
push
adc
xlat
xlat
das
or
orb
xchg
xlat
scas
clc
adc
aaa
lods
push
cmp
adc
int
mov
nop
cli
mov
mov
sbb
lea
test
ret
pop
scas
xorl
push
fildl
mov
mov
fists
das
push
xchg
cltd
testl
push
test
mov
mov
inc
push
adc
adcb
sbb
loopne
movsl
jbe
lock
lods
insl
adc
adcb
push
insl
pop
popa
insb
push
mov
test
dec
xchg
cmpb
into
mov
lea
int
add
sbb
mov
cmc
movsb
jno
push
cmp
orb
fsubrs
out
pop
xchg
push
fidivs
addr16
jnp
mov
xor
sub
push
mov
pop
xchg
js
lods
lret
or
xor
inc
cmc
cmp
and
jbe
in
dec
in
out
pushf
out
xor
or
in
imul
or
lds
mov
jmp
xor
icebp
xchg
sti
and
mov
dec
mov
bswap
fbstp
jmp
adc
adcl
jb
pop
aaa
xchg
cmpsl
cmp
cmp
mov
sbb
adc
out
dec
or
pop
in
push
xor
iret
lahf
dec
sbb
cwtl
jnp
mov
data16
mov
sub
mov
inc
in
pop
shr
lcall
jb
lret
mul
fiadds
imul
scas
ret
iret
cmp
mov
gs
sbb
movsb
pusha
push
or
testl
adc
adc
cmc
xor
and
inc
mov
adc
in
mov
inc
mov
xchg
repz
xchg
add
and
aam
arpl
lods
lret
iret
arpl
add
mov
outsb
outsb
jno
pushf
outsl
mov
jbe
mov
cmpsb
js
dec
sbbl
cli
push
pop
mov
dec
les
pop
movsl
mov
add
dec
lods
push
daa
lds
int3
xor
cmp
loop
push
xchg
dec
mov
xor
lock
jo
xchg
in
add
out
sub
mov
xchg
pop
daa
aas
add
jo
dec
jmp
loopne
stos
shll
stos
mov
mov
cmp
xchg
shrl
ljmp
mov
js
inc
push
popa
cmpsl
mov
pop
adc
mov
add
push
mov
xor
lods
rcrl
pop
pop
cli
jae,pt
outsb
jecxz
jg
dec
movsl
in
inc
enter
orb
jno
pop
xchg
repz
js
faddl
jns
jge
outsb
cmp
jp
and
out
int3
pop
lret
iret
xchg
dec
sub
std
cmp
xchg
dec
pop
mov
dec
jbe
sub
lcall
xchg
dec
lahf
into
dec
adc
dec
xor
and
sarb
insl
lahf
imul
pop
cmp
sub
cmpsl
cwtl
and
mov
jo
ds
jmp
inc
js
xor
cmp
cld
rclb
repz
aaa
push
inc
iret
arpl
pop
xchg
pop
mov
dec
aaa
les
jae
jp
sbb
ja
fs
cmpsl
add
std
xor
outsb
push
sbb
jns
test
jmp
dec
adc
push
incl
sbb
scas
dec
cmp
fiadds
lret
scas
xchg
sub
imul
mov
xchg
pop
xchg
outsb
xchg
ss
lret
fimuls
mov
jmp
cmp
adc
adc
call
addb
stc
mov
xor
into
js
test
cmp
js
xor
jbe
jb
cltd
scas
mov
push
jno
cmp
fld
push
dec
push
push
mov
loopne
lods
sbb
les
push
xchg
popa
adc
pop
fstpl
fadds
cmpsl
mov
push
push
jp
aad
xchg
sub
jl
xor
imul
adc
popf
dec
sbb
sbbl
push
clc
adc
outsb
test
std
gs
and
push
inc
int3
push
xchg
cld
push
adc
add
or
adc
jg
push
call
pop
add
adc
popa
popa
idivb
call
shrb
dec
notb
ljmp
and
lock
cmp
imulb
xor
xor
scas
pop
icebp
mov
pop
ffree
ljmp
inc
or
add
in
pop
xor
test
jle
pop
mov
icebp
and
comiss
lock
insb
data16
sub
lock
pop
jb
fcoms
adcb
mov
push
push
and
cmpb
sbb
insb
xchg
dec
mov
pop
imul
sbbl
mov
outsl
xchg
mov
ljmp
lret
sbb
xchg
jg
and
lcall
push
or
add
test
jg
pop
fdivp
pop
sub
xor
hlt
cmp
xchg
mov
outsl
inc
pop
enter
adc
pop
mov
or
mov
aad
xor
lret
loopne
nop
push
lret
shl
mov
adc
addb
les
lods
xadd
or
add
out
jle
xchg
mov
mov
sub
aaa
test
jecxz
pop
xchg
sub
inc
xchg
in
mov
imul
sbb
xor
repz
add
xchg
mov
rolb
bound
pop
repnz
sbb
fnstsw
jmp
cmp
pop
mov
popa
or
dec
mov
fisttpll
cmp
fisttps
adc
pop
adc
xor
setnp
sbb
push
xchg
fcmovnb
das
jg
mov
dec
test
pop
dec
jnp
cwtl
lods
test
add
mov
push
fwait
lcall
test
std
rcrb
xor
hlt
jae
push
adc
movsb
lret
sub
adc
push
fisubrl
xchg
iret
aad
mov
or
or
push
pop
inc
cmc
mov
inc
ret
rcl
sahf
xor
pop
mov
cli
sbb
mov
repz
pop
scas
pop
lds
adc
test
shll
adc
mov
and
stc
fcomp
outsl
mov
push
adc
jp
push
mov
scas
dec
lahf
jnp
sbb
es
jle
sub
cli
std
mov
inc
andb
push
dec
int3
ljmp
and
xlat
test
aas
mov
jns
sbb
leave
mov
int
push
cli
enter
jne
js
jl
sbb
xchg
xlat
push
sahf
jns
jnp
sbbb
movsb
xor
mov
xchg
dec
ret
xor
sub
adcl
cmp
loop
iret
mov
incb
and
jns
inc
loopne
test
pop
lds
adc
xchg
out
xchg
xchg
jp
mov
dec
push
ret
xchg
bound
inc
pop
push
and
pop
sub
fidivrs
sbb
push
xchg
lea
pop
mov
add
ds
lcall
dec
repnz
push
fptan
js
push
and
aas
lea
pop
gs
dec
sarl
andl
xchg
cmp
lret
je
mov
stos
push
lods
test
jo
pop
lds
ja
repz
cltd
inc
stc
add
pop
inc
cld
pop
cmpsb
inc
std
mov
test
or
xor
xchg
and
inc
inc
repz
rolb
stos
pop
jecxz
pop
fisttpll
push
cli
mov
and
inc
cld
jnp
fbld
inc
cld
xor
push
xchg
xor
fwait
lret
ret
jmp
xor
mov
bound
mov
push
jp
mov
or
aas
lods
ror
bound
cmp
ljmp
mov
aam
jns
les
or
add
add
fstps
jmp
add
dec
mov
mov
enter
cld
jmp
cmp
pop
xchg
nop
sbb
mov
and
addb
or
lret
jo
jb
jbe
xchg
dec
pop
into
fidivrl
lods
adc
loope
shr
loopne
js
adc
pop
jno
cmpsl
xchg
pushf
pop
bound
dec
jp,pt
ds
mov
sbb
cmpsb
addr16
fwait
ret
pop
pop
callw
addl
pop
into
inc
insl
jb
mov
xor
leave
mov
mov
cltd
inc
pop
shll
pop
jns
adc
push
out
test
lret
push
cmp
outsl
jb
inc
dec
inc
xchg
mov
les
pop
aam
jge
xor
dec
sub
stc
push
inc
aam
js
or
mov
fbld
sbb
sub
dec
mov
or
xlat
or
pop
shr
pop
fcomps
xlat
insb
mov
imul
adc
adc
imul
adc
dec
push
fistpll
iret
dec
inc
pop
pop
dec
mov
or
cmp
inc
fwait
mov
mov
outsl
xor
jmp
mov
inc
out
xchg
dec
xlat
int
mov
lock
es
sbb
bound
cmpb
sti
mov
enter
lds
push
insb
inc
lods
inc
das
data16
jp
fsubrs
jge
dec
xor
clc
lods
fidivs
rclb
xor
xchg
outsl
leave
test
fidivl
mov
inc
inc
push
bound
insl
insb
cli
dec
movsb
jnp
xor
jo
rcrl
mov
aad
dec
cli
dec
cmp
pop
cltd
sti
daa
push
loop
xchg
mov
addr16
incl
fxch
mov
cmp
fisttpll
clc
push
test
push
out
movsl
add
int3
xchg
ret
lret
mov
push
add
dec
add
push
call
sti
out
fldcw
stc
adc
into
jno
adc
dec
orl
jge
ret
mov
xchg
data16
mov
lcall
xchg
push
inc
fbld
in
rcll
add
mov
dec
sbb
adc
icebp
addr16
cwtl
sbb
sbb
scas
adc
jg
mov
repnz
es
negl
cwtl
inc
hlt
xor
cmpb
mov
and
add
xchg
and
adc
push
push
mov
lea
dec
bound
scas
mov
push
pop
dec
bound
cmp
movsl
xchg
sbb
loope
cmp
or
lea
aam
pop
mov
je
rclb
dec
add
in
mov
add
insb
dec
push
xchg
push
shll
inc
dec
stos
sysret
sub
ret
cmpsb
dec
imul
inc
push
cmp
fldl
xor
mov
loope
out
ret
mov
mov
adc
popf
aad
mov
add
es
into
pop
aaa
push
int3
or
xchg
and
xchg
cmpsl
out
test
mov
outsl
jge
xor
lcall
aam
inc
lods
xor
loop
cmpsl
cmp
add
notl
jmp
aas
outsl
and
repz
shr
pusha
and
or
xchg
push
test
jle
or
sbb
adc
sub
dec
out
jge
push
pop
or
pop
mov
popl
popa
ss
lret
pop
in
dec
leave
cmp
mov
dec
mov
adc
subl
dec
repz
mov
pop
xor
bound
imul
ret
push
push
xchg
or
scas
mov
in
test
pop
rcrl
add
shll
lcall
adc
sub
xchg
sbb
sbb
mov
rcrb
mov
xchg
jl
push
cmp
jp
push
xchg
rclb
insl
subl
pop
adc
dec
push
dec
ds
inc
mov
xchg
mov
and
mov
popf
jne
adc
pusha
pusha
xchg
xor
out
xchg
inc
mov
add
push
loope
jno
sbb
popa
cld
push
add
lea
stc
js
pop
xor
mov
repz
xor
cmp
in
mov
insl
or
push
lock
stos
loop
mov
or
xchg
mov
dec
xchg
std
or
jb
fsubl
xor
xchg
insl
inc
cld
test
pop
les
or
or
in
mov
adc
addr16
adc
cmpsl
dec
xor
test
out
ffreep
aas
hlt
sbb
xchg
mov
xchg
lret
addr16
hlt
pop
movsb
xchg
iret
ds
ljmp
out
push
pop
out
xchg
xor
xchg
stos
wbinvd
sub
mov
shrb
xor
inc
mov
pop
push
and
inc
adc
xor
movsl
adc
push
cmp
lahf
jle
scas
mov
xchg
mov
jne
jg
add
js
xchg
adcb
mov
repnz
les
icebp
xor
movsb
pop
and
mov
sub
ficoms
int
out
pop
shll
out
inc
pop
mov
add
mov
ja
xchg
out
aam
jg
pop
daa
pop
pop
push
pop
out
or
mov
push
popf
inc
out
lahf
loopne
pop
cli
dec
adc
outsb
mov
das
popf
popa
std
inc
adc
adc
push
stc
xor
xchg
inc
lcall
dec
sub
mov
outsl
inc
in
decl
inc
cld
imul
mov
xchg
daa
insb
push
movsb
mov
jle
and
scas
enter
jno
jl
shr
cli
not
adcl
fs
lods
sub
and
lret
mov
jg
pop
pop
cmc
test
adc
das
jp
sahf
enter
lea
lahf
sub
fwait
dec
fildl
shlb
aaa
push
jno
addr16
lds
gs
popf
movsl
sbbl
xchg
cltd
pop
and
lret
pop
fstpt
and
aaa
ljmp
cltd
daa
imul
jbe
push
mov
test
stos
push
cmp
pop
mov
aas
inc
pop
add
sbb
xchg
xchg
xlat
xchg
dec
mov
lret
cmp
mov
ja
adc
pop
push
jno
inc
mov
js
ja
neg
in
stos
xor
pop
mov
xlat
cltd
inc
or
dec
popa
clc
sbb
mov
xchg
fcom
inc
and
and
adc
pop
sub
addb
inc
lcall
inc
mov
and
cmpsl
jmp
jnp
sub
in
lea
xchg
js
pop
pop
pop
or
add
inc
in
mov
jecxz
push
pusha
mov
mov
adc
mov
adc
and
mov
sbb
hlt
jmp
lcall
ja
xchg
add
data16
xor
or
aaa
sahf
dec
add
mov
loopne
addr16
stos
fs
imul
sahf
mov
push
rep
pop
fisubs
xor
sahf
mov
adc
push
ret
ficomps
pop
add
es
stos
mov
adc
daa
sahf
inc
arpl
add
test
mov
aaa
jb
imul
fistpll
push
cmpsl
daa
repnz
outsl
xor
fwait
mov
popa
jns
into
in
js
popf
jnp
or
push
adc
loop
clc
mov
stc
lcall
push
pop
out
out
mov
xchg
mov
sub
outsl
xor
je
push
cli
xorb
push
subl
sbb
pop
nop
das
cwtl
pop
mov
ficomps
inc
xor
mov
inc
ja
pop
xlat
mov
dec
mov
adc
jae
push
cltd
aaa
sbb
clc
mov
jge
mov
imul
pop
inc
sbb
push
bound
adc
pop
out
cmp
lods
stos
pop
sub
and
mov
jns
mov
xor
repz
test
ficoms
mov
push
out
fmuls
push
cmp
add
xor
addl
pop
stos
test
jg
xchg
push
mov
add
push
insl
inc
dec
lds
dec
cmp
mov
or
cs
xchg
jecxz
push
mov
dec
jns
ds
cmpsl
pop
ja
jp
arpl
jecxz
mov
fstl
jbe
notl
xchg
cli
dec
push
pushf
or
and
std
stos
adc
cli
iret
mov
movsl
or
inc
cld
scas
cmc
or
addr16
push
pop
fnstsw
jo
mov
ss
sub
xchg
xchg
mov
sub
into
subb
adc
lods
cmpb
xor
enter
test
aam
lds
add
lods
bound
mov
aad
sbb
adc
shrl
or
cli
fadds
jg
insl
inc
cmp
adc
push
out
mov
dec
jnp
fsubr
dec
sub
daa
nop
mov
test
hlt
xor
xchg
add
adc
popl
dec
ret
pop
sbb
mov
bswap
jbe
xor
mov
repz
dec
pop
int3
add
cltd
inc
test
ret
pop
ja
push
insl
aaa
js
cltd
and
jge
cmp
jno
mov
xor
test
inc
sti
jb
xor
xchg
cli
pop
push
adc
push
je
clc
adc
mov
pop
xor
icebp
xchg
into
scas
dec
xor
fmull
inc
jb
ja
sbb
jns
jb
aaa
mov
jno
sarl
mov
adc
inc
add
call
test
test
fisubs
push
cmp
jae
fiadds
cmpsb
adc
pop
addr16
adc
or
testl
mov
les
cmp
sub
dec
lods
fnstsw
cmovne
loope
divb
pop
sub
movsb
or
dec
loop
rolb
icebp
sub
ljmp
popf
aas
in
or
dec
mov
loop
pop
pushf
xor
inc
and
mov
stc
push
or
lahf
and
shrb
mov
addb
mov
jne
insb
push
xlat
and
mov
pop
fimull
das
shll
jg
aad
daa
je
inc
or
mov
int3
icebp
pop
sbb
fstl
popa
and
mov
cmp
jmp
mov
xor
cmpsl
jle
and
sub
mov
jg
lret
fistl
xchg
out
add
iret
sub
into
ret
cwtl
subl
popa
cmp
gs
ljmp
mov
xchg
int3
sti
add
movsb
negb
imul
cmp
xor
jb
push
sar
jns
pop
lock
mov
adc
mov
mov
lock
fimuls
jmp
mov
push
xchg
xor
mov
test
mov
add
test
in
push
outsl
push
add
andl
xor
sahf
add
mov
xchg
movsl
ret
inc
in
or
push
stos
es
or
add
dec
scas
sub
idivl
adc
xchg
cwtl
iret
clc
dec
xchg
shlb
sbb
or
bound
xchg
inc
fs
xchg
incb
lahf
inc
stos
xchg
in
stos
dec
push
pop
dec
sbb
es
pop
or
pushf
imul
cmc
or
push
jge
fucom
jnp
add
movsb
or
adc
aam
in
xchg
sbb
aaa
push
xchg
push
iret
jmp
pop
adc
jo
iret
and
jp
or
inc
clc
dec
sub
shl
mov
sub
lock
jecxz
push
push
int
jb
dec
xchg
add
fabs
roll
cmc
adc
mov
das
cld
mov
adc
inc
int
aad
imul
popa
mov
test
mov
mov
pop
lea
fcmovb
xor
cmp
push
aad
das
out
add
push
data16
testb
cltd
mov
push
mov
fcom
dec
xchg
mov
aas
xchg
lock
mov
adc
cmpsl
or
push
icebp
mov
repnz
