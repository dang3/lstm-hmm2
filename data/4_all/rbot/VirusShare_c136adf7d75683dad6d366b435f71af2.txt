add
add
add
test
add
push
add
add
add
jb,pn
jb
add
add
and
add
mov
add
add
add
add
pusha
add
loopne
pop
dec
add
add
add
mov
add
add
add
.byte
sub
and
or
and
dec
call
add
repnz
cmpsb
push
fsubs
pop
xabort
rol
imul
jnp
or
insl
jno
pop
jmp
fs
mov
cwtl
cmp
cmp
add
inc
pop
mov
jb
cmp
fldl
sub
call
cmp
negb
in
jle
jl
pusha
loopne
and
inc
call
aaa
mov
push
pushf
jns
imul
int
lods
outsb
adc
sbb
or
mov
xor
mov
insb
sahf
daa
jae
cmpsl
les
and
mov
add
movsb
fstps
add
out
cmpsl
mov
inc
sub
fld
push
outsl
mov
jle
arpl
iret
sbb
mov
imul
mov
sbb
shl
pop
mov
push
addl
fcomps
adc
mov
test
mov
std
cmp
xchg
xchg
jecxz
push
mov
stc
ja
or
fnstsw
dec
mov
repz
inc
mov
out
mov
in
pop
push
fistpll
enter
inc
add
dec
lahf
dec
ljmp
test
loopne
scas
into
dec
push
out
cmpsb
and
xchg
cld
push
xchg
push
cmp
push
scas
lret
loope
int3
sbb
lods
out
pop
add
arpl
lcall
push
dec
rcl
out
xchg
daa
enter
test
push
lea
cmp
sahf
sub
adc
push
lret
stos
bound
divb
movsl
pop
js
dec
daa
jae
outsl
push
jns
pop
mov
lds
sub
or
mov
xor
lods
mov
push
test
lret
push
mov
cmp
mov
lds
test
or
pop
add
out
jo
lcall
jbe
mov
dec
insl
test
pop
ss
shld
fldpi
xchg
movsl
pop
imulb
xor
decb
iret
sbb
and
into
rcrb
jb
les
mov
std
idivb
repnz
insl
mov
imul
cmpsl
dec
addr16
sbbb
jae
lods
pop
fcmovb
imulb
sub
mov
addl
mov
mov
fucomi
fisttpl
push
mov
cs
aaa
xchg
call
clc
rcrl
mov
test
xchg
ret
cli
sti
cmpl
scas
hlt
popf
xchg
ss
inc
dec
add
mov
testl
xlat
lods
push
popa
rcl
ficoms
cmpsl
push
mov
mov
inc
lock
or
xor
int3
test
scas
scas
mov
pop
push
out
cwtl
inc
dec
gs
or
psubw
aad
add
push
aad
or
and
fsin
out
sub
orb
dec
aas
jge
push
pop
sti
adc
xchg
add
xor
hlt
xchg
cmp
call
add
fbld
fimull
inc
ret
xchg
loope
mov
mov
dec
xor
loop
in
xor
pop
out
out
pop
jge
jb
jb
mov
and
dec
cmp
pop
pop
jecxz
dec
add
jmp
push
pop
test
in
jecxz
in
pop
ja
call
cmp
mov
xor
cmpb
cmpl
insb
cmp
cli
sahf
push
rorb
scas
sub
inc
cmp
mov
cli
and
push
sbbl
lods
inc
pop
push
divb
or
mov
or
mov
xlat
in
stc
addr16
push
cld
mov
push
add
imul
mov
jae
jp
xor
in
lahf
or
js
shll
xlat
jp
sbb
in
dec
adc
roll
fwait
mov
fbld
test
daa
pop
inc
stos
fldcw
adc
mov
ret
mov
outsb
test
and
adc
in
inc
jne
pop
sbb
mov
jne
jno
cmp
inc
daa
mov
outsl
sbb
rcrl
dec
loopne
ljmp
call
mov
xchg
cmp
mov
xchg
mov
sbb
dec
sub
mov
icebp
inc
dec
fs
mov
or
repz
pop
add
xchg
jns
out
outsb
push
enter
ficompl
jae
out
jo
xchg
aas
jno
or
sahf
add
es
and
stc
mov
pop
add
stos
je
cmpsb
outsl
sti
add
jbe
inc
repz
lods
jge
insl
pusha
jnp
js
mov
mov
mov
and
scas
in
mov
testl
mov
cmp
test
or
xchg
jo
int
loope
or
lahf
adc
sub
fistpll
mov
inc
je
dec
out
nop
repnz
std
iret
neg
jmp
adc
mov
fwait
adc
pop
in
adc
hlt
pusha
xchg
jnp
mov
pusha
jl
mov
mov
xor
mov
dec
push
scas
adc
pop
testl
dec
int3
add
push
adc
hlt
outsl
in
filds
xor
xor
loope
je
pop
inc
cmp
pushf
inc
cltd
aam
pop
rclb
mov
iret
or
outsb
sub
jecxz
adc
sti
add
and
push
popf
dec
xor
push
shrb
or
sti
imul
pop
sub
icebp
push
sub
mov
clc
inc
je
and
xor
sbb
or
scas
and
mov
les
sarl
and
in
xchg
std
in
call
sub
cltd
roll
in
out
repnz
mov
push
nop
in
mov
cmpsl
or
or
pusha
mov
mov
testl
inc
test
stc
adcb
sarb
sbb
push
sub
lds
jmp
mov
and
std
xchg
mov
inc
es
nop
cwtl
daa
inc
pop
xchg
pop
mov
sbb
loopne
xlat
sar
mov
cmp
mov
in
fistpl
inc
shlb
movsb
cld
stos
mov
icebp
fwait
cmpsl
or
leave
or
sub
xchg
out
rol
not
jmp
or
jp
sbb
mov
jb
lcall
cmc
aas
mov
negb
xor
addr16
pop
sub
in
enter
nop
xor
pop
jp
mov
jne
push
js
mov
jnp
mov
into
in
leave
adc
xor
pusha
or
jecxz
mov
repnz
xor
sub
jne
and
mov
imul
in
inc
mov
cli
in
cld
xor
jne
add
das
xchg
jno
sub
sbb
mov
ret
mov
shl
push
repnz
cmp
mov
ja
xchg
fisttpll
lods
mov
mov
test
sbb
and
push
inc
cmp
and
fisttpl
push
lods
push
mov
sbb
jmp
push
mov
mov
stc
push
imul
push
fimuls
popa
and
insb
int3
or
out
jb
test
fcoms
out
xchg
or
mov
add
repnz
or
xchg
lcall
mov
adc
imul
xchg
aad
cmpsl
stos
leave
stos
ds
out
sti
push
cmp
movsl
fwait
push
jnp
inc
gs
sbb
lret
xchg
rcll
lock
addr16
dec
adc
out
test
push
sbb
loope
or
or
int
mov
movsb
cmp
fdivs
imul
jecxz
fsubs
sub
adc
ret
ret
inc
lods
scas
fisttpll
es
fwait
js
leave
cmp
jns
xchg
repnz
test
xor
shrl
jne
push
or
pop
in
test
xchg
pusha
mulb
testl
push
or
sbb
mov
dec
and
sbb
sbb
loope
ret
mov
fisttpll
fucomi
dec
lds
ss
xorl
inc
cltd
xor
mov
add
inc
sub
test
fcomps
in
xor
lahf
push
mov
je
dec
dec
sarw
ja
add
repnz
sbb
xor
shrb
stos
dec
pop
les
ss
sbb
test
jge
cmc
imull
outsl
jns
stos
mov
dec
add
push
mov
push
xlat
pop
jno
into
jno
popa
lods
push
mov
shl
outsl
out
shrb
int
sbbl
jno
add
push
cmp
call
jnp
and
lds
insb
cmp
and
dec
xchg
add
out
shll
mov
hlt
inc
ja
movsl
stc
imul
xor
std
jb
push
dec
imul
xor
stos
push
mov
int3
add
or
test
mov
pop
sbb
inc
push
inc
addl
fidivl
xchg
cmpxchg
pop
lea
pop
test
gs
sub
movsb
lret
jne
lock
lods
cmp
push
and
cmp
jp
leave
ljmp
mov
adc
push
std
add
push
mov
adc
leave
pop
xchg
push
mov
shlb
xor
push
push
mov
gs
outsl
ret
push
jmp
sub
and
inc
sti
movsb
clc
sbb
mov
xor
sbb
xchg
inc
imul
inc
imul
xor
out
int
lds
mov
dec
dec
adc
es
out
xor
in
add
inc
or
dec
in
push
cmp
xor
dec
cmpsl
or
pusha
pop
cmp
sti
mov
push
stos
and
cs
mov
add
push
aaa
or
jmp
hlt
dec
das
xchg
push
inc
fisubs
jge
outsl
ret
rcrb
mov
popf
lock
pcmpgtd
out
ljmp
mov
mov
cli
loope
aam
inc
sbb
xor
pop
fdiv
imul
jne
mov
sub
in
jno
in
scas
loop
clc
loope
mov
or
cmp
cmpsb
aas
cmp
inc
or
adc
scas
loopne
jmp
jmp
shlb
inc
dec
dec
push
ja
and
and
push
stos
imul
mov
xor
inc
inc
pop
dec
adc
lret
popf
pop
or
mov
pmuludq
xchg
or
ret
outsb
pop
push
xlat
addb
aaa
sub
sub
pushf
jne
add
adc
lret
pushf
mov
ljmp
jbe
mov
push
push
call
add
sub
push
mov
or
enter
mov
stc
add
sub
aad
adc
shrl
mov
test
mulb
hlt
vucomiss
add
in
fsubrl
loope
dec
pop
hlt
lock
into
dec
dec
jno
sti
jmp
xchg
arpl
out
flds
adc
out
cltd
enter
pusha
lods
inc
or
iret
shll
stc
pop
cmp
sbb
outsb
neg
mov
jg
pop
mov
add
jecxz
or
dec
pop
data16
jnp
mov
mov
faddl
add
ret
and
fdivp
push
aad
xlat
fstpl
scas
call
mov
mov
sub
inc
mov
sub
add
ss
ljmp
js
mov
jmp
xchg
mov
repnz
push
sub
pushf
xchg
lcall
inc
sub
push
das
int
movsl
mov
pop
push
popf
fildll
popa
cmpsl
sbb
mov
clc
pop
push
sub
xchg
push
sbb
xor
daa
jecxz
ljmp
mov
push
cmp
incl
fists
mov
push
inc
mov
dec
ljmp
mov
sub
and
inc
xchg
mov
fdivs
jmp
push
dec
mov
rolb
push
in
xor
inc
stc
and
inc
rcrb
lcall
push
sub
add
insl
mov
xor
xor
jecxz
pop
cmp
jns
inc
mov
rcrl
hlt
pop
out
mov
daa
rcrb
in
mov
lods
les
or
or
ffreep
call
or
xchg
popf
xchg
xlat
fildl
sbb
cmp
ds
mov
add
mov
push
pop
cmpb
mov
jb
mov
aad
repnz
lret
pop
fsubp
mov
int3
mov
xchg
dec
outsl
repnz
sbb
insl
std
enter
mov
shll
mov
popa
stos
andl
icebp
stc
test
sbb
and
out
je
jge
cmp
mov
adc
repz
into
ss
lea
dec
je
inc
hlt
xor
xor
mov
inc
outsb
imul
cmp
jle
pop
test
fmulp
mov
scas
out
enter
pop
pushf
mov
jge
push
mov
lods
aad
and
movsl
imul
pop
dec
sbb
movsb
add
push
pushf
into
int
xor
negl
mov
outsl
pop
pop
flds
sti
aam
rcrb
imul
adc
insl
fildll
push
cmpsl
out
jmp
imul
mov
shrl
dec
ss
roll
mov
stc
or
xor
jmp
lret
jecxz
lock
lock
cli
in
cmp
inc
xor
sbb
arpl
shrl
mov
adc
in
jo
xor
jecxz
push
mov
int3
shrl
sub
lock
jge
call
roll
pop
ss
sub
dec
daa
stos
pusha
lock
dec
jno
notb
dec
mov
flds
je
je
or
inc
shrl
in
in
cld
gs
outsl
or
mov
lret
xor
sahf
outsl
fs
mov
hlt
cmp
ret
mov
xchg
pop
push
or
mov
inc
stos
ret
pop
pop
in
ljmp
call
aad
sub
inc
jmp
mov
inc
les
inc
dec
xchg
and
leave
fs
fdivl
cmp
movsb
and
gs
out
push
jb
mov
add
pop
shll
int3
js
fnstcw
mov
mov
int
and
sahf
std
push
jge
push
mov
push
sbb
or
adc
sub
stos
bound
pop
cmp
aaa
ljmp
fists
rcrl
mov
jno
mov
in
jnp
test
and
fcoml
xor
into
loop
inc
dec
in
cltd
mov
cmp
mov
in
cmp
sub
pop
imul
xchg
pop
aam
popf
into
out
push
jno
push
movsb
testb
sbb
fcomps
je
rorb
fwait
orl
dec
pusha
mov
jo
mov
jp
into
mov
mulb
push
inc
mov
enter
sub
iret
pop
lods
xchg
out
repz
pusha
inc
mov
lret
mov
sbb
dec
movsl
mov
push
dec
lods
pop
outsl
cs
sub
ret
testb
jg
cmpsb
ds
and
sti
sti
sbb
jbe
mov
mov
pushf
cld
mov
movswl
xor
and
cmp
push
stos
xchg
aad
test
lret
pushf
xchg
adc
sbb
push
ljmp
push
mov
pop
cmp
push
ljmp
std
mov
cmp
in
movsb
idiv
shlb
mov
push
insb
in
jbe
lcall
jle
adc
mov
pop
adc
add
ror
cmpsb
data16
xor
addr16
popa
add
out
jb
xchg
inc
or
pop
fcoml
out
push
dec
push
test
sbb
push
icebp
sbb
in
lcall
mov
test
xchg
cmp
fldl
addl
loopne
xchg
mov
int3
pop
andb
mov
xor
cli
leave
jne
call
inc
icebp
cmp
push
and
jl
lea
mov
mov
push
pop
and
jmp
sti
mov
mov
ret
fucomip
mov
adc
scas
dec
add
cmp
insb
es
push
or
pop
jbe
sub
sbb
add
jae
mov
or
push
cmpsb
pop
push
xchg
iret
dec
cmpb
jne
into
mov
in
subl
shl
notb
or
push
adc
mov
fadds
ds
pop
ljmp
bound
xchg
std
fwait
std
jnp
leave
push
ss
mov
mov
fcompl
cmp
dec
enter
testl
pcmpgtw
and
rorb
sbb
or
fucomi
jecxz
js
and
test
fidivl
mov
jnp
stos
push
inc
or
and
pop
inc
jo
xor
enter
mov
popa
jmp
sarl
pop
gs
jecxz
out
mov
sub
into
add
or
fwait
dec
insl
push
dec
iret
lahf
mov
dec
pop
leave
sti
pop
pop
jg
icebp
pop
push
pushf
aam
in
dec
dec
mov
xchg
frstor
adc
cmc
fnstsw
sahf
inc
clc
sahf
cwtl
add
adc
nop
dec
sbb
dec
mov
pop
popa
out
inc
pop
mov
scas
jl
jno
push
orb
sbb
sbb
inc
test
dec
xlat
push
int3
mov
jbe
sahf
popf
sbb
loope
mov
mov
test
sub
pushf
lret
and
cmp
shr
inc
xchg
mov
in
adc
arpl
jecxz
xchg
lret
cmp
out
mov
imul
mov
in
jb
clc
cmp
cs
lea
or
xor
jo
dec
cmp
sbb
enter
icebp
test
and
mov
xorb
gs
and
clc
es
dec
lret
stc
loop
sub
nop
adc
jnp
insb
jge
add
xchg
data16
xor
clc
lds
or
decl
std
xchg
movsl
mov
and
or
iret
clc
jmp
ds
xchg
out
adc
pushf
jae
push
stos
sub
mov
subb
aam
and
jae
pop
les
pop
sbb
fimuls
adc
js
mov
and
push
test
lods
add
repnz
xchg
xlat
jno
nop
cltd
sbbl
ret
mov
ljmp
stos
cs
cwtl
in
dec
mov
int
pop
stos
test
inc
and
sbbb
out
mov
cmp
jbe
mov
or
mov
sub
bound
inc
jle
nop
out
cmc
cmpsl
mov
and
xchg
push
shll
je
pop
xlat
mov
les
pop
xor
test
insb
insb
sbb
sub
mov
and
imul
sub
adc
jp
shlb
mov
dec
cmpsb
xor
rorb
push
ljmp
cmp
push
mov
push
sahf
xor
in
das
roll
pushf
not
mov
test
adc
mov
mov
fldl
movsb
out
mov
popa
push
repnz
and
xchg
in
ljmp
stc
mov
xor
push
data16
aad
fiaddl
movsb
adc
mov
fidivs
ficomps
dec
in
cmpsb
xlat
fs
in
inc
dec
push
adc
not
stos
test
scas
sbb
adc
scas
mov
sub
add
ret
mov
insb
xchg
mov
push
pop
mov
sahf
fistl
cmp
xor
cmc
repz
dec
mov
add
or
in
pop
push
aam
mov
orb
daa
insb
mov
ljmp
add
adc
je
inc
adc
in
mov
mov
inc
das
jmp
mov
jnp
pop
insb
out
xorb
xorl
cmpsl
pop
xchg
adc
and
xchg
push
lahf
cwtl
jge
outsb
dec
cltd
ret
mov
imul
jno
popa
aas
sub
xor
cmp
xchg
pushf
inc
mov
repz
sbbb
adc
dec
jnp
push
cmp
add
rcl
popa
loopne
test
shrl
aaa
xchg
pop
push
push
jnp
loopne
mov
dec
push
sbb
outsb
data16
inc
jmp
push
es
imul
out
ds
add
jge
insb
mov
mov
push
aaa
sbb
sub
test
sbb
movsl
mov
xor
cmp
gs
dec
add
mov
pushf
lahf
or
sub
sub
mov
push
mov
sbbb
fisubrl
pop
pop
sti
fstl
popa
jl
ds
jmp
pop
inc
inc
or
jnp
mov
adc
call
push
ret
mov
repnz
adc
add
lahf
icebp
or
loopne
push
jno
sub
or
pop
dec
out
adc
test
gs
push
pusha
push
mov
outsl
adc
sti
or
loop
and
sub
mov
fisttpll
lds
hlt
jbe
dec
out
outsb
adc
fs
out
in
dec
sub
push
daa
pop
add
pop
xchg
out
shrb
ficomps
pop
fisubl
push
push
mov
popa
pop
xor
cld
jbe
insl
es
pop
sahf
cmp
pop
js
ret
pop
jne
fisubrs
cmpsl
add
inc
push
cmpsb
xchg
popf
jnp
cltd
mov
mov
xorl
push
mov
or
mov
std
ds
dec
mov
jno
mov
sub
clc
icebp
mov
jnp
outsb
outsb
ljmp
mov
lods
loop
mov
or
sbb
and
jmp
jae
xor
and
push
cmp
inc
fisttps
loop
rcrl
test
jae
inc
fmulp
mov
xchg
cmp
dec
add
inc
lea
ss
inc
mov
and
mov
fdivrl
adc
mov
xchg
fs
dec
adc
mov
xrelease
cs
push
adc
and
dec
push
xor
mov
push
push
mov
mov
pop
push
adc
mov
int3
push
ds
mov
enter
mov
jnp
sbb
add
scas
jbe,pn
jns
cmp
and
add
mov
or
cmp
jb
aas
mov
xchg
movsl
add
rolb
mov
scas
mov
cmp
inc
lret
aas
lds
movb
fnstenv
and
in
cmc
sbb
mov
push
jl
cmpsb
xor
testl
sarb
clc
leave
arpl
sahf
adc
mov
lds
mov
xchg
stos
jb
loope
lods
data16
sar
pop
daa
test
lds
mov
jbe
rol
call
and
add
xchg
enter
inc
cmpsl
jnp
add
adc
mov
imul
lods
cmpsl
repz
or
mov
mov
sbb
mov
scas
test
adc
mov
jne
insl
hlt
xchg
pop
mov
xor
mov
fwait
addr16
mov
inc
arpl
jge
rcr
fists
in
adc
es
and
pop
fisttpll
sub
inc
push
cmp
mov
mov
rcll
and
rcrb
jmp
lods
xchg
xchg
jae
and
test
pop
movsb
lea
push
sahf
lods
mov
adc
push
pop
iret
pop
pop
xor
adc
cltd
fmulp
mov
daa
dec
xor
icebp
push
mov
std
dec
mov
sub
repnz
fisttpl
push
sbb
sbb
xlat
push
lds
ljmp
dec
aas
in
inc
mov
test
scas
std
inc
xor
ja
pop
aas
test
call
dec
out
lret
or
aas
cltd
hlt
insb
xor
negb
loopne
xchg
js
and
pusha
push
adc
mov
xor
and
dec
jmp
test
shrb
or
add
mov
test
push
or
hlt
cmp
and
cmp
sub
mov
inc
fisttps
xchg
mov
fucomp
lret
adc
or
sbb
sub
pop
cmpsb
out
repz
scas
sbb
or
imul
push
stos
mov
fwait
cmp
xchg
lods
mov
pop
jns
fildll
std
dec
int
inc
add
cli
imul
shll
clc
mov
xchg
sbb
cmovae
push
iret
mov
jmp
jl
inc
movsb
sbb
fldt
fst
test
push
mov
aaa
mov
bound
ret
lret
push
and
jl
hlt
jge
push
push
dec
xchg
mov
pop
jnp
or
lret
shll
jb
bound
es
testl
sbb
addr16
jg
inc
fcomps
push
fwait
mov
adcb
jp,pt
pop
enter
iret
dec
push
jbe
icebp
push
sbb
in
inc
cmp
mov
xchg
mull
mov
sbb
or
out
rcrl
sbb
mov
mov
ljmp
and
mov
in
test
andb
jbe
adc
addb
aas
inc
jg
cmovs
lahf
adc
adc
aam
mov
adc
push
pop
xchg
inc
pushl
imul
pop
cli
jne
inc
cmpsb
add
pop
lods
xchg
arpl
popa
movsb
scas
ss
cli
ljmp
or
jecxz
add
mov
lret
mov
addr16
fsub
inc
sub
lea
ret
scas
xchg
mov
icebp
mov
enter
fs
insl
aam
leave
jle
fldcw
insl
and
mov
or
call
jg
scas
invlpg
incl
lock
aam
addb
rcrb
jb
fldt
iret
movsl
cld
ret
daa
out
push
icebp
xor
clc
mov
adc
aas
fisttpl
xlat
call
mov
or
mov
inc
push
incl
fildl
jns
dec
or
ljmp
xor
iret
push
xchg
loop
mov
test
add
push
je
bound
sbb
adc
nop
mov
in
mov
xchg
cs
push
xlat
pop
subl
dec
ret
scas
call
pushf
dec
mov
add
push
xlat
mov
push
mov
push
in
adc
mov
fcmove
out
test
incl
dec
test
dec
xor
ds
stc
cwtl
adcl
sbb
into
bound
jns
jo
dec
jecxz
in
imul
jns
rcll
push
xchg
push
call
adc
mov
testl
insl
out
lds
cwtl
sarb
jle
mov
call
fsubs
adc
outsb
leave
ljmp
xor
lods
es
in
cmp
cwtl
imul
mov
test
loope
into
adc
adc
rclb
xorb
jnp
push
adc
loope
push
mov
fwait
xchg
imul
or
cmp
outsb
lret
cld
cmp
scas
aad
or
sahf
mov
jmp
sbb
outsb
push
mov
repnz
sbb
jb
and
sub
test
adc
inc
push
xor
aam
popf
mov
insl
mov
jmp
dec
add
sub
std
dec
addr16
cmp
xchg
mov
dec
or
push
outsl
adc
ficomps
in
loop
inc
cmp
mov
xchg
and
addr16
std
xchg
mov
iret
cmp
mov
pop
ss
das
adc
int
arpl
sti
dec
in
sbb
lds
shlb
adc
leave
js
cmp
out
xchg
xchg
loopne
cmp
xorb
inc
imul
xor
xchg
outsl
pop
cmpb
and
cs
sbb
orl
cmpsl
daa
iret
sahf
in
push
stos
xor
and
ss
inc
push
out
cmp
jg
cs
xor
jecxz
pop
push
repz
inc
rcr
ss
mov
cmp
mov
addr16
adc
test
dec
adc
xor
and
jmp
lret
outsb
push
mov
inc
xchg
mov
aas
push
mov
add
and
mov
push
or
aaa
jns
mov
jmp
push
sub
or
into
mov
inc
loope
add
cmpsl
aam
push
movsb
xlat
jp
mov
into
stc
mov
add
jbe
fstpl
jo
xchg
mov
ss
pushf
dec
ret
mov
test
inc
pop
fbld
cli
incb
xor
cmp
ret
and
sti
aad
imul
jl
out
and
inc
add
fcmovu
enter
or
cmp
fwait
inc
add
mov
ds
jns
sbb
lods
das
dec
jge
mov
es
push
sbb
shll
mov
cltd
sub
ret
out
fimull
xchg
fmull
daa
pop
cmp
cmc
ret
xor
xor
inc
mov
repz
inc
xor
cmpsl
test
jns
shll
mov
mov
jnp
mov
xor
int3
dec
mull
mov
cmc
lock
cmp
xchg
int3
push
int
stos
imul
add
mov
stos
pop
xchg
xor
inc
sub
mov
sbbl
inc
push
push
lock
orl
xchg
jg
ljmp
xchg
push
sub
jae
aam
in
push
sub
xor
mov
sbb
into
sbb
mov
repz
or
les
inc
sbb
jle
mov
test
sbb
cmc
add
cmp
sbb
aam
test
inc
in
inc
mov
push
cmpsl
add
fistpl
push
imul
sbb
aam
js
jmp
js
lds
mov
das
lock
inc
adc
push
jnp
pop
fwait
sbb
push
jle
adc
mov
stc
jmp
xchg
cmp
ss
push
push
daa
push
or
jmp
enter
mov
loopne
pop
mov
add
xchg
call
insl
or
mov
mov
and
push
and
mov
dec
push
ret
sub
mov
fisttps
lret
frstor
cwtl
outsb
mov
pop
dec
scas
cwtl
sub
pop
xor
or
xlat
test
mov
jge
mov
pop
xor
pop
sbbb
fildll
out
mov
push
add
ret
push
daa
or
pop
jecxz
sbb
inc
fs
fstpt
cmpl
nop
lods
inc
mov
inc
inc
int
and
cwtl
xor
or
aas
or
push
cltd
sbb
jecxz
out
sub
inc
pop
fmuls
inc
mov
bound
idiv
pop
mov
xchg
fcmovu
dec
data16
cli
xchg
sbb
jbe
pop
mov
xchg
mov
test
addb
sbbl
pop
push
std
pop
lods
pusha
es
lods
cmp
lea
mov
mov
scas
aaa
mov
pop
jmp
ret
xor
jno
jbe
ucomiss
das
ja
lahf
mov
daa
inc
out
or
sub
icebp
inc
stos
jnp
sbbb
inc
repz
mov
insb
repz
gs
cs
inc
inc
loop
sahf
inc
fidivrs
rcll
je
push
popa
jnp
pop
inc
inc
fisttps
push
sbb
cltd
and
faddl
xor
push
stc
sti
cmp
rcrb
push
leave
add
movb
popa
mov
stos
jno
xchg
arpl
out
mov
mov
push
enter
cmpsl
scas
and
push
repnz
sbbl
mov
mov
das
out
iret
lock
outsb
or
mov
mov
add
aad
jnp
js
cwtl
push
insl
in
add
xchg
dec
fisubl
fcoml
and
sbbl
int3
and
lea
sbb
push
call
xor
sbb
movsb
or
mov
xchg
mov
sahf
mov
adc
sub
pop
sub
mov
arpl
int
xchg
lods
stos
je
and
fdivr
icebp
movsl
or
mov
int
adc
imul
mov
pop
xchg
inc
popa
jmp
xchg
cmp
lcall
dec
leave
xor
add
mov
stc
sbb
int
jae
pushf
xor
sbb
mov
in
ja
jl
and
imul
incl
mov
pop
and
dec
xchg
ljmp
pop
cmp
testb
jne
sti
push
fsub
inc
subb
subl
mov
into
sbb
sahf
call
sub
inc
ss
loope
loope
sub
aas
pop
lahf
repz
xchg
mov
lret
shlb
and
push
fidivrl
jle
test
shlb
out
adc
push
addr16
lds
push
mov
xor
add
fucomip
mov
lcall
cwtl
rcl
nop
mov
popa
push
mov
orl
mov
lret
cmp
sub
out
gs
insb
std
rolb
jge
test
mov
pop
test
jge
mov
and
lods
mov
and
pop
push
std
in
in
int
std
or
test
xchg
shlb
sti
gs
std
leave
mov
jmp
addr16
loopne
push
dec
jbe
stc
aam
pop
jbe
sub
jecxz
cmc
sbb
mov
lret
pushf
rol
fdivl
jne
mov
or
shll
mov
xor
mov
aaa
icebp
je
rorb
orb
adc
out
mov
or
pop
fiadds
jb,pt
jl
icebp
enter
imul
xlat
mov
insl
outsb
outsl
daa
sub
or
jmp
inc
cli
mov
scas
adc
inc
ja
push
js
scas
inc
fucom
cmp
inc
push
mov
pusha
adc
fs
or
mov
sub
cli
stc
adc
inc
sysret
xor
std
lea
xchg
dec
in
or
jno
out
incl
outsl
xchg
or
repnz
loop
test
lret
push
pop
cltd
hlt
int3
int
sbb
push
hlt
aad
ljmp
dec
int3
dec
mov
enter
std
dec
xchg
lea
cmp
and
inc
adc
js
lcall
sbb
inc
scas
pop
ficoml
dec
jle
push
jle
mov
jle
fwait
nop
mov
leave
cmpsl
jmp
imul
cmpsl
es
xor
xchg
and
imull
loopne
push
clc
pop
inc
mov
adc
mov
mov
cmp
lock
mov
cmp
fldl
add
sub
sti
insl
loopne
xchg
aaa
mov
add
pop
incb
dec
pusha
ret
lods
lods
cmp
into
sub
sbb
in
popa
lds
ds
sub
clc
fisubrl
stos
loopne
add
add
add
xor
push
push
mov
jg
sahf
mov
jmp
xlat
cmpsl
cmpsb
testb
mov
ret
mov
lahf
sub
hlt
pop
mov
arpl
les
adc
dec
std
fisubs
arpl
in
mov
mov
in
jle
cwtl
sahf
pop
dec
ret
inc
gs
push
scas
dec
sbb
fisubs
lods
mov
lea
xchg
jmp
or
mov
daa
dec
stos
or
dec
jmp
cltd
jecxz
mov
push
dec
dec
add
shlb
and
ret
mov
cmp
add
dec
stc
jnp
push
push
inc
and
outsl
test
lcall
and
add
add
outsb
dec
xchg
dec
jns
jl
xorb
dec
rol
insb
jne
rorl
inc
mov
out
aad
lcall
cmc
push
push
orb
les
xchg
daa
cs
test
cwtl
mov
inc
cld
aas
mov
lret
nop
les
pop
les
jb
add
flds
das
popa
xlat
aad
add
and
subl
cmpsb
push
inc
cmp
in
xor
adc
sbb
fcoms
outsl
and
or
cld
push
sub
mov
adc
ljmp
inc
jno
cmp
adc
test
pop
mov
movsl
iret
scas
dec
mov
loopne
loopne
in
sbb
push
xchg
cmpsb
shld
pop
mov
adcb
inc
aaa
insl
pop
cld
lock
push
add
lds
xchg
dec
adc
add
out
mov
scas
imul
aam
stos
sub
xchg
lods
imul
out
mov
loop
mov
iret
xlat
jbe
hlt
push
cwtl
cltd
cmp
test
sbb
xor
mov
inc
xor
adc
ret
inc
fisttpl
mov
loopne
xchg
and
mov
and
in
nop
popf
sub
mov
add
aad
mov
imul
sbb
inc
mov
pop
push
and
sub
daa
and
scas
inc
xor
mov
rorl
xchg
push
les
dec
cwtl
leave
je
div
ret
lods
les
call
call
or
fisttpll
pop
cmp
mov
mov
cli
scas
adc
mov
push
mov
inc
adc
inc
cmpsb
pusha
mov
aam
mov
and
cmc
cld
mov
sbb
and
divl
inc
add
aam
pusha
out
scas
fsubp
push
push
js
or
pop
lcall
mov
adc
bound
jg
xor
sub
push
xchg
daa
mov
add
in
add
int
in
rcrl
mov
push
pop
pop
jmp
repz
dec
loope
push
loope
test
lds
cmpsb
inc
xchg
call
test
shr
das
sub
in
dec
fisttpll
enter
jge
dec
sub
psraw
mov
inc
pop
pop
aam
xchg
mov
scas
adc
lret
mov
push
or
test
hlt
mov
cltd
and
pop
adc
lods
inc
neg
cmp
incl
or
pop
loop
push
gs
orb
push
clc
pop
repnz
dec
xchg
and
ds
xor
ljmp
jno
gs
fiadds
mov
pop
cmp
xchg
push
xor
and
mov
cwtl
sbb
jp
mov
jno,pn
movsb
dec
ljmp
or
imul
je
or
movl
pop
lock
inc
jp
add
or
jbe
sub
outsl
or
and
dec
mov
and
jmp
repnz
pop
cld
cwtl
scas
and
mov
jmp
and
sbb
dec
lods
fstl
and
je
sbb
lods
lds
rorl
adc
cli
outsl
enter
test
xchg
popf
fstp
add
fldl
into
in
jno
cmc
inc
daa
icebp
loopne
push
sbb
xor
xchg
or
out
or
sub
jne
rolb
or
insb
pop
cld
jo
adc
imul
ja
popa
push
orl
call
popa
pop
cmp
xchg
dec
aam
and
fnstenv
pop
mov
or
ljmp
mov
mov
jge
outsl
not
and
jl
add
jne
mov
pop
xlat
pop
lret
cmp
add
dec
imul
repnz
mov
jg
dec
jl
rorl
cmp
jnp
aaa
xor
mov
cwtl
insl
sub
popa
jmp
xchg
outsl
add
and
inc
xchg
outsl
aad
mov
inc
sbbl
lret
add
jl
gs
mov
mov
dec
push
mov
js
pop
aad
daa
sbb
xchg
jae
cwtl
and
out
adc
scas
fadd
jle
in
push
dec
cmp
aaa
jbe
inc
pop
xchg
sbb
add
jge
push
mov
add
and
sbb
mov
insl
test
cmp
rcr
fsubrl
outsl
dec
xlat
mov
call
out
adc
sarb
loopne
stos
shrb
hlt
sbb
lcall
jae
cld
cmpsb
stos
fistl
in
push
movsb
sbb
fisttps
xchg
and
ljmp
jmp
lahf
cmp
imul
ret
and
add
pop
push
jg
jae
pop
push
sub
lret
test
xor
js
jnp
mov
sub
xchg
pusha
mov
in
scas
dec
adc
pop
jge
pop
xor
leave
add
mov
int
stc
fists
nop
cmpsb
or
push
js
test
insl
add
mov
jmp
jno
mov
ss
inc
insl
lcall
sub
fidivrl
pop
scas
stos
out
mov
sub
add
mov
sahf
cld
jl
cmp
mov
test
jo
dec
adc
jae
sub
dec
rclb
out
xchg
imul
xchg
mov
sbbb
cmp
aam
mov
sub
mull
cmp
add
and
sbb
sbb
shr
lret
cs
mov
sahf
sub
je
aaa
jne
dec
stc
out
push
mov
xor
mov
fwait
enter
subb
arpl
add
into
repz
sarb
ret
pop
and
cld
adc
loopne
jle
push
scas
sbb
cmp
and
fwait
in
fcoml
icebp
iret
rorb
xor
sbb
adc
dec
nop
pop
int
rcl
push
cld
popa
aaa
and
mov
dec
sbb
int
sub
mov
xor
fwait
or
lods
mov
stc
push
cltd
lea
mov
or
das
or
int3
or
out
test
push
adc
inc
subl
mov
and
enter
dec
pop
adc
bound
push
outsb
je
testb
fwait
xchg
out
fsts
aad
inc
jp
roll
aas
and
gs
jp
movsl
adc
dec
sub
imul
mov
xchg
push
dec
sarl
mov
addl
fnstcw
sbb
insl
test
sub
rolb
icebp
imul
aam
aad
scas
inc
adc
pop
pop
jg
jno
pop
and
mov
fstp
push
popl
adc
or
test
fiaddl
in
mov
movsl
loopne
pop
mov
jge,pn
or
vpsubb
sub
xor
sbb
scas
xchg
mov
cmp
xchg
das
pop
xor
ljmp
scas
scas
xchg
jle
scas
fiadds
das
aas
enter
fdivr
cmp
ss
cmp
push
xchg
sahf
rcrl
fldl
inc
js
mov
or
xor
mov
fdivrl
call
pop
pop
pop
pusha
arpl
cmp
cmc
pop
mov
xchg
out
cmp
jb
mov
mov
jns
out
inc
mov
popa
sbb
cwtl
or
inc
outsl
imul
sub
and
add
jge
aas
test
xor
outsb
sub
sub
xor
inc
jne
inc
std
push
mov
mov
jns
ds
pop
cli
icebp
pop
pop
cld
addl
or
mov
sbb
sbb
pop
ds
cmp
push
ljmp
sbb
idivb
mov
dec
mov
adc
into
rorb
clc
add
shrl
add
test
std
mov
shrl
push
mov
nop
seto
mov
data16
mov
mov
xchg
dec
add
push
jo
xorb
adc
jg
mov
fwait
push
outsl
ss
mov
sub
mov
mulb
inc
mov
push
fwait
jb
inc
outsl
sbb
cmpsl
flds
inc
das
sbb
es
add
jp
mov
mov
fidivs
mov
pop
sbb
ljmp
and
add
inc
lea
lock
out
mov
mov
ljmp
daa
ljmp
xchg
jmp
mov
ja
aas
movsb
lret
cmpsl
dec
mov
jns
mov
je
jmp
decb
insb
das
cwtl
mov
mov
mov
iret
xchg
fiaddl
push
xor
xchg
dec
imul
mov
int
add
add
or
je
push
mov
and
movsb
subb
scas
and
test
nop
aaa
popa
or
loopne
clc
imulb
mov
imul
pusha
rorl
out
filds
daa
or
lahf
test
push
cmp
mov
outsb
jae
xchg
imul
clc
mov
mov
mov
fistps
sub
add
and
add
call
cld
push
xchg
lds
sbb
orb
pop
ficoms
out
push
fiaddl
out
insb
ficomps
lcall
clc
push
fsubrs
std
out
and
fdivrs
sbb
cltd
das
push
repz
les
mov
pop
mov
lods
fwait
or
pop
mov
movl
sbb
pop
repnz
sub
and
ja
push
gs
and
inc
sub
dec
push
pop
and
popa
or
add
in
or
int3
fildl
pop
ljmp
jae
dec
xor
andb
bound
jae
lret
pop
ds
xchg
cwtl
fldl
cmpsl
push
lret
jns
sbb
ficoml
aad
dec
pop
gs
aam
out
and
add
lcall
cmpsl
inc
adc
divl
cmp
js
pusha
out
xlat
mov
inc
mov
mov
mov
xlat
xor
stc
mov
call
pop
push
leave
ret
lods
or
mov
popa
or
fucomip
sahf
jg
jnp
pop
mov
mov
popa
fucomi
iret
insl
jl
ret
jb
push
jne
inc
cmp
jne
inc
inc
arpl
stos
mov
mov
mov
cmp
adc
cmpsb
cltd
sub
mov
push
pop
or
call
mov
int
lea
jns
scas
leave
jnp
mov
dec
test
mov
xchg
mov
dec
and
cmpsb
lahf
xchg
ret
aam
adc
add
scas
sbb
das
jp
jae
out
mov
hlt
cwtl
lods
mov
mov
pop
fistpl
fmulp
adc
cld
pop
add
or
push
ret
aad
outsb
mov
mov
fwait
into
xchg
mov
sub
fwait
test
iret
push
xchg
xchg
jp
add
inc
hlt
movsl
mov
int3
ret
enter
fwait
pop
loopne
mov
xchg
mov
mov
inc
sbb
rcr
addb
aam
sub
sub
xor
jle
xlat
push
jmp
scas
dec
cmpsl
imul
fidivs
loop
add
subb
mov
rcr
leave
stos
popa
xlat
ret
pop
inc
adc
mov
fmull
ret
js
popa
push
fldenv
mov
sbb
popa
mov
repnz
pop
std
cmc
sub
cmp
aam
ljmp
cli
scas
shll
movl
jp
aaa
mov
pop
xor
mov
mov
into
lret
lret
lods
xchg
mov
xchg
leave
mov
mov
sarb
mov
sub
outsl
xchg
lahf
or
xchg
add
fs
ret
sahf
mov
jmp
negl
xchg
cmp
fs
into
and
mov
hlt
jnp
mov
mov
and
cmp
call
mov
xor
xor
mov
in
dec
testb
andl
mov
adc
gs
push
subb
sahf
pop
out
pop
stc
test
lret
popf
and
sbb
jae
lods
aas
or
in
bswap
push
ret
out
shll
sbb
add
mov
lds
push
adc
gs
inc
xchg
sbb
inc
movhlps
loope
jb
inc
dec
test
and
fnstsw
push
sbb
jo
stc
movsb
and
pusha
sti
xchg
stc
fs
lahf
sub
xchg
js
sub
push
cmp
jge
jne
xchg
xor
mov
xchg
dec
mov
lods
insl
cwtl
insb
into
dec
int3
into
insb
test
jae
push
add
mov
ret
and
push
jo
into
addl
out
addl
js
or
inc
fiaddl
out
outsl
mov
or
data16
in
out
xchg
pop
sbb
or
pop
jp
push
iret
cs
test
xchg
iret
adc
jnp
jno
es
and
lahf
and
lods
movsl
fcmovnbe
testl
jge
push
movsl
adc
mov
mov
cltd
jmp
fistl
aaa
adc
mov
xchg
fwait
shrb
adc
xor
and
into
dec
pop
jne
enter
sbbb
and
push
shr
push
add
pop
lcall
ds
and
jbe
jmp
push
mov
jg
out
dec
sub
mov
cwtl
aaa
cmp
hlt
add
and
sub
lret
sahf
jle
insl
sbb
pop
mov
ja
cmp
js
xchg
xchg
inc
pushf
adc
rorl
mov
pop
or
mov
ret
rep
addb
dec
sub
mov
insl
mov
mov
imul
fcomi
pop
adc
sub
shll
mov
push
add
loop
shl
xchg
mov
pop
mov
jle
mov
mov
pusha
shrl
iret
movsb
scas
mov
int
test
and
inc
rcll
sar
or
or
xchg
scas
pop
pop
movsw
mov
add
jnp
fsubrs
xor
stos
xchg
pop
push
out
xor
cli
dec
dec
add
fldt
sub
test
cmp
inc
aaa
push
sbb
cmp
adc
dec
push
inc
rorb
daa
andl
mov
mov
xchg
push
sbb
push
adc
cmp
pop
lock
jns
roll
shlb
ljmp
loop
inc
fstpl
cmp
xchg
sub
adcb
mov
fwait
arpl
testb
sub
dec
in
jb
in
pop
xor
shl
lahf
sub
fs
mov
dec
pop
lods
push
xchg
mov
lods
daa
and
nop
xor
adc
mov
mov
outsl
outsb
daa
cmpsl
sbb
out
xorl
push
add
jl
popf
les
sbb
mov
inc
ss
push
stos
addl
push
sbb
shl
shll
test
lret
pop
push
test
scas
pop
ffree
test
test
cmpsl
jmp
adc
jbe
jno
dec
or
mov
push
dec
inc
cltd
dec
dec
idivb
xchg
sbb
sbb
in
inc
jl
stc
cmc
mov
test
ficompl
dec
pushf
inc
imul
mov
and
push
outsl
sarb
fisubs
out
xchg
or
pop
jne
imul
lods
mov
jb
jns
inc
pop
stc
iret
lret
insl
nop
iret
mov
dec
jl
jge
mov
gs
add
jmp
and
push
rol
xchg
push
out
mov
fidivrl
movsb
mov
js
xor
loopne
shll
imul
mov
cld
jae
mov
adc
xor
out
sub
pop
pushf
mov
cmpsl
mov
mov
jmp
mov
dec
dec
mov
cmp
or
stos
sar
inc
mov
lret
mov
in
int
xor
scas
lahf
je
inc
cmp
jge
or
xor
outsb
add
mov
aas
push
outsl
in
stc
mov
imul
icebp
subl
aad
jmp
adc
pop
js
fs
out
sbb
sub
jmp
inc
cmp
out
mov
je
push
outsl
add
fwait
cmpsb
mov
cwtl
stc
pop
lock
jecxz
sahf
ret
call
pop
mov
mov
or
imul
bound
mov
mov
insb
cmpsl
lea
inc
cmpsl
rcl
lret
outsb
movsb
lret
in
mov
jg
shll
mov
mov
adc
xlat
fisubrl
es
xchg
iret
insb
out
dec
pop
lret
ja
in
hlt
mov
cmp
jle
ds
sbb
mov
mov
mov
imul
xor
lock
jno
inc
and
mov
xchg
add
into
cmpsb
ja
xchg
mov
inc
and
stos
dec
inc
mov
repz
dec
mov
fisttpl
xchg
popf
and
lcall
pop
pop
insb
and
or
adc
sub
or
mov
or
cld
shll
mov
ret
xor
mov
into
cmp
pop
xchg
fsub
xor
jne
mov
lret
call
repz
adc
outsb
xor
mov
popf
inc
nop
inc
adc
mov
jg
xlat
loopne
cmp
sti
mov
popl
cs
cmp
add
stc
jmp
mov
jne
fldt
mov
xchg
jnp
bound
jo
push
jb
hlt
fimull
mov
pop
mov
sub
push
jmp
and
sbb
or
ja
mov
mov
int
cmp
sbb
inc
cmc
fsubs
or
test
repnz
jp
hlt
cmp
and
sbb
rorb
sahf
fdivl
xor
cmp
jp
sub
inc
repz
out
push
pop
outsb
bound
ss
stc
repz
gs
bound
adc
add
lods
mov
inc
push
ss
push
mov
iret
data16
mov
cmp
mov
mov
insl
stos
add
push
sub
xchg
insl
adc
pop
push
or
and
insl
pop
xor
hlt
fwait
popf
out
add
mov
cmpsl
and
sbb
das
jl
sbb
fdivrs
push
xchg
arpl
fcoml
test
in
push
mov
lock
rcll
dec
cli
xchg
sahf
push
adc
popa
xchg
mov
dec
mov
jl
into
push
push
rcrl
pcmpeqw
out
movsb
xchg
jecxz
fiaddl
fs
into
sahf
adcl
pop
movsl
xor
jle
mov
xor
push
or
outsl
bound
pop
dec
bound
cmp
es
stc
lock
adc
xor
and
jp
xor
dec
sbb
ds
push
xor
sbb
cmc
icebp
stos
out
add
stc
xchg
inc
jns
jmp
mov
pop
into
stc
out
add
ljmp
cltd
js
cltd
xor
sbb
idivl
xor
mov
and
mov
fidivs
outsl
outsb
sbb
cmp
lret
sub
and
xor
xchg
pushf
mov
es
adcl
mov
std
pop
push
fcoms
add
int3
inc
xchg
aam
decb
xor
and
add
je
test
pop
pop
push
roll
add
stc
les
jnp
insl
mov
pop
fcmovbe
inc
cmp
fldenv
mov
add
dec
aas
mov
stc
stos
adc
cvtps2pi
mov
cmpsb
sbb
dec
cli
pop
ret
cmp
mov
and
sub
dec
inc
lahf
fstpl
shlb
in
or
movsb
je
dec
add
daa
xchg
mov
nop
and
xchg
inc
mov
adc
cmc
xchg
lcall
in
sti
movsb
push
pop
fisubrs
add
ret
popf
pop
push
push
int3
add
xchg
clc
addl
sub
scas
add
jmp
popl
jecxz
lds
ljmp
jmp
imul
test
leave
or
pop
mov
mov
or
fdivrl
call
cmp
xchg
jle
ljmp
dec
int3
ja
inc
imul
inc
xor
push
insb
js
sub
mov
xlat
gs
inc
sbb
sub
outsb
std
mov
and
mov
dec
cmpsb
test
push
push
xchg
sub
and
or
or
daa
rcll
stos
cmp
jp
cmp
add
cmpsb
daa
xchg
mov
mov
or
adc
mov
add
xor
sub
sub
leave
or
push
jbe
push
sbb
out
add
cwtl
add
mov
rorl
shll
inc
mov
jg
fistps
dec
mov
add
jg
pop
outsb
rcrl
cmp
and
inc
dec
or
dec
and
out
dec
mov
pop
jl
rcrb
dec
jo
inc
in
cmc
sub
mov
cmp
jl
pop
sub
cld
dec
sub
pop
dec
xor
inc
test
icebp
mov
aam
xchg
add
lahf
push
push
mov
push
add
in
mov
jnp
push
jmp
xchg
pop
xchg
jl
inc
les
movsb
push
mov
sub
clc
pop
in
clc
repnz
jecxz
adc
bound
sbb
stc
inc
popf
push
jg
fsubl
mov
and
lods
and
push
cmp
mov
or
arpl
adcb
mov
out
dec
insb
pop
cmp
pop
push
dec
in
add
pop
mov
loope
int3
jo
clc
cmpsl
mov
bound
fisttpll
movsl
scas
jmp
push
in
jno
lea
jecxz
push
push
xor
jns
sbb
adc
push
in
test
jae
dec
add
push
jno
and
inc
aaa
fisttpll
mov
mov
not
dec
hlt
arpl
push
stos
int
jns
repz
fwait
dec
lret
shl
mov
sbb
sbb
push
and
sbb
repnz
sub
add
scas
xchg
movsb
aaa
clc
or
test
pop
test
sub
neg
int
push
sbb
aam
lds
faddl
mov
rclb
imul
fistl
fadds
mov
fimull
mov
lret
adc
stos
jecxz
mov
push
add
cmp
enter
xlat
pop
adcb
leave
xor
push
incb
repnz
shll
jg
movb
or
dec
sub
cltd
lods
bound
xchg
dec
add
je
sahf
aaa
mov
jnp
inc
enter
aad
fwait
rcrb
jns
sbb
call
ret
imul
mov
imul
movsb
out
mov
ja
test
cli
in
pop
mov
jne
in
or
psubsw
sub
rcrb
shlb
insl
sbb
movl
adc
sub
movsl
adc
mov
fimull
cwtl
mov
pop
pop
mov
roll
dec
jmp
sub
jnp
mov
mov
pop
fmuls
dec
push
and
int
repnz
icebp
mov
push
cmpsl
fmull
xor
enter
ss
js
aad
jg
out
push
in
cmp
push
push
ds
cmp
push
inc
test
stc
iret
jnp
adc
mov
sub
stos
imul
push
cmpsl
idivl
or
dec
sbb
or
shl
push
xor
lock
in
mov
pop
inc
adc
inc
or
dec
or
gs
js
mov
arpl
pushf
jne
adc
inc
push
mov
or
dec
fst
push
xchg
subl
adc
gs
dec
add
push
add
sub
int3
pop
into
xor
popa
imul
add
lret
out
dec
jbe
lods
inc
pop
pushf
mov
and
dec
and
sub
pop
loop
leave
jp
cli
dec
xchg
and
mov
pusha
adc
xchg
not
and
cld
add
inc
sub
sar
and
xorb
inc
mov
ffree
push
movsb
or
pop
and
mov
stos
shrl
insb
mov
adc
cmp
push
leave
or
inc
cs
pop
mov
or
xor
sub
scas
xchg
xchg
mov
or
int3
insl
lret
in
fdivl
ret
lods
inc
inc
add
sbb
inc
push
mov
jmp
pushf
adc
jnp
ss
leave
fisubrl
jle
and
outsb
call
call
push
lcall
rorb
ja
loopne
dec
mov
bsf
inc
add
or
shll
xlat
stos
ljmp
cmpsl
sub
mov
mov
lea
pop
leave
inc
ret
stos
and
jg
or
add
jns
lock
and
mov
pusha
sub
leave
xor
popf
dec
lahf
daa
dec
shrb
outsl
mov
xlat
cmp
fcmovu
lahf
adc
stos
loop
pushf
mov
fmuls
in
das
repz
dec
ss
repnz
adc
add
lcall
mov
sub
repz
iret
leave
into
nop
movsb
mov
movsb
repz
out
jge
loop
or
into
mov
popa
lods
mov
loopne
in
repnz
aad
es
cmp
movsb
dec
sbb
mov
jle
sub
test
dec
inc
xor
and
cmc
lods
stos
push
or
popa
sub
adc
pop
xor
loop
cmp
cmpps
in
rsm
or
inc
push
stc
daa
orl
sub
scas
cmp
xor
inc
lret
pop
mov
jae
pushf
stos
leave
pop
in
add
aas
test
ret
rdmsr
mov
jb
mov
lock
jmp
daa
dec
sbb
xchg
movsb
push
lahf
cmp
mov
scas
mov
add
lahf
add
or
cmp
mov
xor
orb
xchg
pop
push
aam
lods
mov
out
out
dec
mov
fs
inc
cmp
push
inc
pop
nop
sub
xchg
negl
dec
dec
dec
dec
and
shll
xorl
sti
or
push
divb
lahf
push
call
adc
xor
xchg
ss
dec
cmp
subl
imul
inc
cltd
mov
out
xchg
and
repz
push
push
mov
push
ds
test
mov
cli
and
add
and
daa
cmp
mov
xor
cmpsl
dec
push
icebp
adc
and
ret
dec
or
cltd
mov
test
ret
lcall
sub
clc
add
cmp
xor
stos
insb
arpl
iret
ficompl
jbe
lods
push
cmpsl
mov
mov
cmp
divb
pop
inc
xchg
sub
push
dec
mov
cmp
mov
mov
in
loope
xchg
lock
adc
outsl
shr
xor
cmp
jmp
push
std
inc
pop
in
cmp
jne
and
call
adc
outsl
jmp
mov
imul
inc
scas
fnstenv
lea
jne
jg
or
cmp
or
add
jmp
pop
cmp
divb
mov
adc
pop
push
adc
mov
jge
cli
push
or
mov
mov
push
inc
mov
popa
and
push
sbb
pushl
pushf
add
xchg
leave
mov
lret
imul
jo
push
pop
es
pop
je
lods
mov
mov
inc
insl
dec
fistl
in
jb
push
sahf
icebp
push
ss
cli
add
lahf
pop
sub
mov
dec
sub
loopne
lcall
mov
outsb
das
imul
cmpsl
movsb
aad
dec
add
popf
lds
fs
mov
roll
inc
add
in
in
fwait
shrb
cmp
xchg
dec
xor
movsl
cmp
je
outsb
test
cmp
lods
or
fsubp
xor
jo
dec
maskmovq
test
inc
cmpsb
cli
les
jecxz
mov
add
in
gs
sub
add
cmpsb
in
cmp
mov
jns
cmpsl
test
nop
in
xchg
data16
push
add
inc
outsb
pop
pop
hlt
xchg
pop
push
jl
stos
int
pop
add
xor
outsb
push
push
mov
pop
repnz
and
clc
sbb
or
cwtl
inc
push
loope
cmp
fcompl
stc
out
fdivl
push
fstp
ficomps
add
dec
jae
dec
jnp
pop
aas
mov
ror
roll
push
mov
out
roll
sub
imul
fmuls
ret
push
add
cmpsl
ja
xor
push
mov
cwtl
mov
dec
call
roll
in
push
dec
leave
jno
fwait
mov
push
dec
cmpsb
push
int3
push
or
sbb
lock
les
or
dec
inc
shll
out
or
fdivrs
int
cmp
inc
fmull
and
arpl
mov
xor
outsl
mov
inc
push
add
mov
bound
mov
lea
sub
out
mov
mov
js
pop
jmp
outsl
xchg
rorb
add
push
fisttpl
jg
pop
dec
cmp
xchg
mov
cmp
pop
xchg
cmp
fmull
or
loopne
cmp
divb
cmp
fmul
xchg
cli
sub
pop
add
inc
adc
xlat
jno
jns
inc
mov
aas
leave
xlat
daa
lahf
out
in
imul
sub
jo
out
or
jp
jg
fcmovnu
fisttpl
mov
cmc
popf
push
xchg
mov
sahf
mov
xchg
out
add
sbb
into
shlb
mov
add
push
dec
cmp
test
arpl
pop
and
xor
aaa
sub
sbb
cltd
inc
icebp
popf
pop
scas
movsl
mov
into
sub
cmp
fldl
mov
mov
or
das
mull
pushf
jge
shll
push
sub
outsb
stos
jp
cmp
imul
push
lret
dec
orl
push
inc
cli
inc
setl
xlat
adc
cwtl
imul
je
xchg
sar
adc
sbbl
dec
or
push
je
mov
ret
cmp
add
mov
lods
sbb
cmp
inc
movsl
dec
loope
icebp
and
push
mov
loopne
loop
cmp
mov
adc
stos
test
out
pop
dec
and
inc
imul
adc
and
jne
or
scas
aaa
cli
and
test
jp
cld
xlat
enter
jns
ljmp
imul
sbb
add
sub
shl
push
lds
add
fdivrp
mov
ja
push
pop
inc
add
rcll
sub
mov
rcrl
and
imul
jge
insb
cmc
clc
mov
orb
and
repz
xchg
jb
pushf
aas
lods
pop
hlt
arpl
jno
pusha
cwtl
mov
das
lret
int
and
mov
sbb
cmpsl
pop
pop
and
fidivrs
pop
xchg
rorl
dec
imul
or
xor
mov
dec
js
lahf
mov
ret
sub
xorl
jecxz
test
dec
mov
call
xchg
mov
mov
mov
jo
adc
mov
cwtl
push
je
imul
hlt
and
cmp
aad
ror
jb
pop
mov
fmull
jbe
addr16
jnp
rcl
fcompl
insl
ljmp
sub
pop
mov
push
outsb
jb
fstps
das
sub
inc
dec
jle
dec
jns
dec
mov
sub
icebp
add
cmp
popa
or
cmovns
out
out
mulps
mov
fwait
jbe
andb
dec
mov
loope
inc
cmpsl
icebp
xor
lds
pusha
setno
jno
jmp
pop
test
mov
xchg
rolb
leave
add
xchg
inc
sub
int
push
mov
mov
in
mov
cmp
mov
and
jnp
push
addl
inc
hlt
shr
das
addr16
xchg
mov
mov
inc
sub
mov
fs
das
add
mov
aam
dec
outsb
aaa
pop
dec
cmp
fildll
inc
sub
aas
jo
lret
xchg
into
xchg
pop
lret
roll
push
dec
pop
inc
xchg
mov
sub
jbe
int3
mulb
rolb
cmp
xchg
fnstsw
nop
pop
pop
sub
sbb
adc
shl
nop
push
nop
cli
icebp
sbb
dec
jp
dec
dec
aas
outsl
lahf
nop
lods
mov
iret
push
inc
pop
mov
pop
out
adc
imul
shl
xor
shll
mov
dec
loopne
mov
test
test
insl
insb
cmc
shrl
les
adc
cwtl
xchg
mov
lcall
cmpsb
mov
lods
pusha
and
jne
cmp
sub
into
mov
xlat
aad
push
in
xchg
clc
movsb
iret
dec
sahf
mov
pop
xchg
testb
testl
push
js
flds
out
jp
jne
mov
mov
test
inc
sub
push
push
rcll
test
sbb
arpl
mov
stos
outsl
fidivs
mov
push
in
pop
cmp
mov
sub
loope
add
stc
aaa
cmpsb
xor
mov
xchg
sbb
push
mov
and
cltd
cmpsl
movsb
fdivrl
iret
jbe
js
add
mov
mov
in
pop
cltd
es
or
fidivrs
dec
adc
and
add
shrb
dec
insb
jmp
setae
adc
daa
mov
pop
mov
dec
sbb
cli
pop
mov
dec
je
mov
jns
sti
inc
fsubl
mov
aas
xor
lock
mov
inc
lods
sbb
cmpsb
mov
push
imul
push
mov
lods
cmpsb
je
or
dec
in
push
sbb
xlat
pop
mov
hlt
pop
lock
fwait
test
or
stos
cmpsl
cmpsb
push
jmp
sub
lods
cmp
jne
or
das
push
rolb
add
add
shl
inc
xchg
jg
mov
cmp
lcall
shll
shl
repz
mov
ja
nop
aaa
jp
movsl
xor
inc
push
add
jge
push
add
and
cmp
ljmp
ss
mov
idivb
lds
ficoml
add
pop
cli
dec
inc
push
xchg
rcrb
out
dec
imul
mov
adc
adc
and
iret
mov
xchg
jge
out
inc
mov
mov
pop
call
cmpsl
ja
les
out
std
fmul
daa
mov
jge
movsb
push
mov
je
add
jb
jl
ja
dec
int3
insb
jb
lods
mov
and
orl
mov
xorl
ret
cmp
mov
push
mov
and
xchg
push
stc
aaa
imul
fistpll
stc
cs
mov
and
mov
outsb
adc
lret
stos
aam
pop
inc
push
and
cwtl
es
ret
adc
stc
sub
add
pop
push
das
cwtl
xchg
call
mov
xchg
dec
bound
fstps
mov
pop
pop
stos
mov
xchg
cmp
popa
in
sbb
inc
mov
in
arpl
leave
arpl
imul
push
cltd
inc
jbe
and
xchg
fdivl
aad
jmp
mov
mov
call
mov
cmpsb
fdiv
pop
iret
scas
lods
mov
inc
ret
inc
rcll
pusha
ds
cmpsl
aas
loop
mov
fs
or
xlat
pop
mov
out
mov
repnz
xchg
add
pop
and
add
jmp
pop
mov
test
sarb
rorl
xchg
and
cwtl
jb
push
insb
test
cmp
pushf
xor
jbe
rclb
iret
test
pop
or
int
and
jecxz
inc
flds
ret
shlb
sub
pop
cmp
hlt
and
fxch
xchg
loopne
icebp
fsubl
add
loop
jle
add
bound
fdivs
call
mov
dec
pop
cmp
mov
mov
mov
push
pop
mov
pushf
fidivrl
jl
dec
hlt
mov
das
xchg
loopne
loop
jmp
inc
xchg
xor
push
jns
jge
pop
aas
mov
sbb
loopne
or
or
mov
je
dec
mov
sbb
pop
aad
or
negb
pop
aaa
sub
mov
cli
sti
js
out
pop
pop
push
push
or
xorb
xor
pop
mov
sarb
popa
pusha
shrb
sub
scas
sbb
fwait
xchg
sub
mov
sbb
push
loopne
repz
xchg
imull
stc
lahf
inc
dec
lods
ret
mov
pop
mov
aaa
jbe
inc
xlat
sbbl
repz
inc
pop
mov
mov
xchg
xor
in
aaa
adc
fisttps
jl
je
cmpb
int
xlat
mov
pop
xchg
ja
push
adc
mov
insl
test
mov
enter
mov
ss
and
idiv
add
and
test
xchg
mov
fisubrl
or
lds
pop
repz
mov
dec
mov
dec
loopne
int3
fcmovu
mov
and
fcomi
mov
mov
int
xor
notl
frstor
mov
leave
mov
clc
push
add
test
iret
mov
popa
xlat
outsl
pusha
xchg
push
iret
fadds
jnp
ret
mov
stc
hlt
cld
pop
cmp
lret
pushf
inc
rsm
jne
pop
pop
add
notb
push
ffree
jno
lahf
mov
jns,pn
and
hlt
into
leavew
fsubl
push
cmp
out
jnp
and
inc
sbb
or
arpl
repz
in
es
jo
push
out
cmpl
jb
lret
mov
daa
add
hlt
dec
xchg
sahf
out
add
push
mov
jo
xchg
scas
mov
sbb
push
lock
push
data16
mov
xchg
xchg
leave
outsl
push
mov
mov
bound
int
cmp
enter
lahf
adc
lcall
cmc
inc
imulb
add
jbe
push
cmpsl
jo
add
lret
cmpsb
hlt
pushf
cmpsl
cld
or
push
mov
mov
xor
fnstcw
test
je
or
or
xchg
bound
pop
popf
sub
lret
xorl
test
dec
or
xchg
les
sar
repnz
lahf
push
dec
test
pusha
adc
call
lret
inc
cmp
xchg
xchg
into
rorb
rcrb
pop
fucom
jecxz
lret
pop
repnz
push
dec
sub
ljmp
push
data16
push
mov
mov
out
je
fistps
pop
cmovle
sbb
ss
arpl
pop
mov
pop
mov
aaa
in
mov
xor
out
and
neg
fiaddl
mov
lahf
jl
mov
ret
mov
push
xor
mov
subl
cmp
pop
push
sti
xlat
or
fisubs
inc
inc
cs
lds
jbe
xchg
jo
lock
jns
pop
cltd
push
out
xchg
stc
mov
add
pop
push
xrelease
filds
loop
dec
sti
stos
adc
dec
fidivrs
push
icebp
push
adc
mov
and
mov
movsl
add
js
lods
cmc
add
inc
adc
mov
pop
dec
sub
jno
fs
lds
xchg
out
popa
insb
jmp
imul
lcall
sbb
jmp
add
pop
push
or
xor
add
mov
leave
xchg
pop
jle
aad
adc
xor
imul
cltd
push
pop
jo
pushf
mov
out
xchg
lret
fs
mov
popf
inc
lock
movsb
or
mov
push
lcall
movsb
push
int
repz
lret
xchg
out
jmp
adc
paddb
nop
or
setb
mov
mul
insl
or
jns
adc
nop
sbb
mov
pop
lret
mov
mov
cmp
pop
sub
std
leave
sarl
fwait
or
jns
movsb
xchg
inc
xor
stc
dec
xabort
negb
xor
addb
iret
and
dec
aam
nop
out
outsl
mov
popf
pushl
mov
or
lahf
cmc
call
call
mov
pop
cmpsb
les
fsubs
dec
xchg
xor
push
mov
push
scas
dec
sub
repz
xor
sbb
cmp
sub
sub
and
push
jo
in
jae
mov
daa
adc
pop
xchg
test
test
inc
xchg
xor
movsl
inc
popf
xchg
test
dec
cld
pop
pop
loop
out
pop
push
jae
gs
lds
and
dec
cmp
bound
icebp
stc
add
mov
jnp
mov
jg
xchg
lahf
xor
adc
pushf
xchg
loopne
cmp
les
insl
mov
jbe
movsl
sub
inc
jp
sub
jbe
mov
in
pop
mov
jp
mov
jns
stos
pop
sbb
punpckhwd
les
cmp
dec
jb
dec
jns
pusha
sbb
pop
push
leave
cltd
inc
xchg
xchg
sti
jo
inc
pushf
iret
sbb
mov
or
outsl
fcmovb
rorb
stos
xchg
or
in
popf
cmpsl
iret
cmp
clc
rcll
adcl
sbb
out
ret
test
push
incb
jbe
stc
mov
mov
jle
aad
xor
mov
sahf
add
and
sar
xorl
or
lahf
subl
test
mov
inc
in
xor
loope
jecxz
jb
pop
xchg
cmp
dec
add
subl
inc
jno,pt
push
jae
repnz
push
jle
and
pop
inc
stos
adc
fs
or
cmpsb
push
jl
lcall
fwait
pmullw
push
cmp
pop
jmp
pop
mov
leave
cmc
jo
mov
cmp
mov
cmc
insb
insl
inc
xchg
cmp
jmp
and
mov
add
adc
inc
jle
adc
bound
lcall
in
ret
mov
std
lea
xor
mov
out
push
push
adc
push
sahf
push
hlt
mov
adc
and
xlat
sbb
iret
outsb
cld
xor
sub
inc
arpl
test
mov
mov
push
push
sub
movsb
mov
popa
and
ret
rolb
push
add
ljmp
shll
psrad
fmul
push
test
mov
jle
loopne
inc
movsl
rolb
dec
xchg
cmp
push
ds
ljmp
popa
pop
or
pop
aaa
mov
xchg
popf
test
xor
adc
and
jp
rol
sub
pop
fyl2xp1
cmp
mov
push
cmpsl
insl
push
xchg
pop
cmc
add
and
mov
test
mov
mov
inc
std
and
cmpsb
adc
gs
pop
push
and
lret
insb
test
aam
jbe
cli
add
imul
out
hlt
push
and
lcall
or
idivb
adc
repnz
add
mov
insb
test
add
push
outsb
jae
neg
pop
and
mov
push
leave
movsl
sbb
jle
pop
xor
cltd
repz
and
cmp
push
xchg
jb
shlb
jnp
mov
push
addr16
jno
sbb
rcrb
inc
in
sbb
pushf
imul
rorb
loopne
hlt
nop
sti
gs
cld
gs
adc
mov
sar
nop
sub
fsubs
loop
icebp
jnp
jg
std
xchg
cmp
jmp
pop
jge
jmp
sbb
out
clc
bnd
vpsubw
adc
and
push
dec
lock
mov
mov
outsb
inc
dec
mov
rclb
xchg
test
dec
xchg
pop
sahf
or
xor
mov
data16
test
shl
and
int
mov
mov
jns
pushf
clc
push
pop
sbb
mov
and
iret
out
push
repnz
mov
call
jbe
adc
sub
mov
mov
pop
sahf
push
cmp
sub
leave
push
insb
aaa
push
cmp
sbb
or
sbb
mov
or
imul
int3
dec
mov
pop
out
mov
aad
in
outsl
dec
ljmp
in
pop
xchg
aad
dec
dec
lds
jp
mov
ret
inc
and
out
push
mov
out
lret
and
push
sub
test
adc
jg
inc
jg
fisubrl
in
inc
repnz
adc
clc
stc
cmovo
inc
fwait
dec
and
xchg
shrb
pop
aas
imul
mov
aad
dec
pop
ror
cmpsb
mov
jo
add
sbb
out
xor
sbbb
stos
cmpsb
xchg
rorl
shll
jbe
or
cmovae
in
xchg
or
outsl
pop
sub
mov
pop
inc
cmp
sbb
xor
sahf
insb
in
popa
jmp
movsb
stos
loopne
out
xor
and
push
and
inc
add
or
add
dec
add
fstp
xchg
mul
movsl
subl
xorb
divl
inc
stos
pop
aas
sar
mov
es
leave
or
leave
js
loope
lcall
repz
mov
adc
add
incb
and
xchg
inc
sbb
push
push
dec
sub
ds
push
sbb
sub
jbe
inc
push
sub
dec
test
insl
or
fwait
add
out
mov
and
insl
loop
movsb
xorb
or
cwtl
insl
xchg
dec
xor
jae
push
mov
jmp
mov
in
ja
pushf
adc
xchg
int3
push
xchg
mov
adc
vpavgw
adc
xchg
pusha
jmp
pushf
mov
mov
scas
mov
icebp
ss
push
jne
dec
sbb
mov
mov
mov
cmc
in
adc
sbb
mov
movl
aaa
cmpsl
mov
inc
jne
jne
loop
inc
push
pop
push
out
cmp
scas
std
xchg
jecxz
mov
movsl
add
add
js
aad
inc
lock
ds
sub
fisttps
xor
fldcw
orb
xchg
cmpsl
pusha
cs
pusha
hlt
add
in
decb
or
inc
inc
lods
pop
or
loop
sub
pop
inc
dec
pop
movsl
push
mov
lock
scas
mov
jns
unpcklps
out
xor
or
rcrb
pop
inc
lcall
xchg
loopne
scas
cld
ljmp
fs
int
scas
sbb
xor
cld
dec
jo
jnp
pop
add
dec
xchg
inc
lods
test
test
pop
xor
filds
sahf
mov
mov
lcall
out
push
loopne
xchg
inc
lret
cltd
test
mov
ret
shr
mov
mov
mov
out
sbb
clc
sti
arpl
push
jo
data16
cmpsb
mov
repz
and
fxch
add
lock
xchg
aas
xchg
dec
adc
mov
movsb
add
fisttpl
jl
and
and
out
cltd
movsl
cmc
fimuls
test
call
dec
scas
test
pusha
inc
int
es
pop
cld
inc
push
jmp
or
jnp
or
sbb
mov
inc
ja
imul
bound
xor
xor
iret
out
mov
push
xor
xor
les
push
iret
cli
ret
jae
push
pop
sub
out
jp
rcrl
mov
mov
xor
mov
mov
js
mov
ficompl
add
push
cld
aaa
and
push
jns
les
rcll
rolb
mov
out
out
imul
mov
mov
jp
mov
mov
add
movsb
mov
jae
iret
sbb
sbb
loop
in
xchg
xchg
mov
xor
aam
insb
lea
test
div
sub
aaa
mov
push
test
push
mov
push
jns
test
sub
ss
jge
fcomp
icebp
and
test
out
sbb
cmpsl
stos
pop
fdivrl
gs
inc
lods
call
mov
imul
int3
mov
push
outsl
bound
inc
repnz
data16
shlb
iret
shrb
adc
push
aad
adc
sti
sahf
sbb
dec
mov
jmp
popa
pop
push
pop
xor
sub
xchg
mov
jns
cwtl
cmp
scas
or
pop
mov
xchg
sub
aaa
cmp
or
lock
and
cmp
mov
and
sbb
paddb
jmp
rcll
push
cmp
inc
test
sub
scas
fs
lea
sub
pop
hlt
pop
int
cld
lods
je
imul
mov
subb
pop
dec
fstl
mov
call
pop
mov
scas
icebp
ss
adcb
lcall
sti
mov
int
fstl
scas
out
add
insl
inc
fisttps
xor
jmp
push
arpl
jl
clc
or
mov
imul
divl
divl
jae
push
pushf
and
nop
mov
cmp
clc
lcall
or
ret
mov
rorb
addb
adc
dec
and
mov
mov
lds
subb
in
push
inc
adc
cmc
mov
cwtl
aaa
stos
imul
decl
adc
push
sbb
ret
adc
dec
dec
test
inc
mov
fldl
fadds
sbb
inc
push
nop
lret
sbb
stos
add
iret
aad
dec
imul
mov
pop
xor
mov
pop
cmp
mov
jae
in
xor
xchg
pop
mov
or
lret
inc
loope,pn
mov
xchg
mov
leave
dec
lds
xor
sahf
aas
pop
and
cwtl
rorb
test
in
daa
mov
mov
faddl
mov
and
sti
mov
insb
lret
and
push
btc
inc
js
push
cmp
mov
xlat
roll
pop
arpl
sbb
mov
imul
push
jae
and
leave
xchg
and
in
es
lahf
call
ss
xlat
sahf
push
push
loopne
mov
pop
movsl
sbb
hlt
or
fnstsw
xchg
jg
xor
shll
rorl
xchg
bound
repnz
xor
bound
cwtl
ss
jp
xchg
daa
xor
aam
lock
cld
cmpsb
outsl
shll
adc
jb
sahf
imul
lret
rclb
enter
add
jg
in
adc
fmull
fs
jns
push
pop
xchg
cmp
push
js
add
shrb
mov
lcall
cli
daa
push
xchg
adc
into
cmp
cmpsb
xchg
pop
mov
pop
sbb
inc
imul
loope
in
and
pop
ss
nop
repz
arpl
mov
or
and
and
sub
pop
fsubl
repz
pushf
cs
int3
mov
andb
dec
push
and
xor
movb
inc
inc
jle
loope,pt
leave
ja
daa
add
xchg
lret
pcmpgtw
out
jno
pop
icebp
xlat
js
inc
sahf
cmpsb
loope
mov
xor
stos
cmp
xor
dec
gs
dec
lods
mov
fimuls
fnstenv
or
js
add
movsl
fcmove
sbb
push
orl
mov
xchg
add
clc
repnz
xchg
jge
jecxz
lahf
notl
aam
mov
aaa
xchg
repz
scas
cltd
mov
jae
outsb
xchg
gs
xor
inc
arpl
push
pop
insl
adc
mov
cmp
cmp
push
inc
shl
push
ds
orl
cmp
ret
push
mov
imul
xchg
pop
dec
push
ror
lea
inc
cmp
inc
mov
pusha
out
jmp
dec
lock
mov
pop
iret
jmp
test
xchg
inc
cmp
pushf
pop
repnz
sbbl
mov
sbb
or
add
nop
mov
adc
lret
xchg
loop
dec
stc
push
mov
test
sti
cmp
jae
jmp
xor
mov
scas
imul
call
lods
xchg
pushl
lds
ds
sbb
push
pop
call
sbb
pop
push
out
rolb
dec
test
mov
scas
cmpsb
cmp
xor
test
or
jge
ljmp
popa
mov
je
iret
mov
clc
js
or
inc
mov
push
mov
into
daa
sub
jmp
cli
jnp
jb
or
out
movsl
sbb
mov
aam
push
jp,pt
dec
adc
ret
mov
cs
cltd
sub
shll
sti
lods
push
js
shrl
cmp
int
imul
push
cmp
repz
push
leave
inc
data16
loope
fildl
cmp
xor
xor
loopne
pop
inc
fidivs
ss
jge
mov
jmp
add
cli
aas
cwtl
jle
shll
mov
inc
sub
pop
or
sarl
stos
xchg
adc
sub
jle
movsb
fisttpll
add
cmp
or
data16
xlat
dec
push
mov
iret
lock
cmp
test
cmp
shll
adc
sbb
inc
adc
jo
test
int3
push
dec
fs
sbb
nop
jo
repnz
sub
jle
rcr
mov
pop
push
adc
int
dec
mov
cld
adc
cld
sbb
mov
add
popf
mov
mov
dec
out
adc
cmp
jg
ret
add
xor
cmpb
je
lods
mov
mov
xchg
push
mov
sahf
lcall
or
cmp
cltd
cmp
adc
in
ds
loop
or
xor
inc
adc
shll
jns
lahf
cmp
xor
mov
xchg
mov
jns
call
call
dec
jb
rcl
push
sbb
fnstcw
or
sbb
rcll
push
dec
out
test
pop
mov
push
add
popa
xchg
xor
mov
pop
scas
xor
aas
sti
and
in
nop
int
incl
ret
xchg
push
xor
push
push
lcall
fcoms
loop
test
push
and
cwtl
sahf
add
decl
mov
ret
mov
or
xchg
and
push
aad
stc
dec
mov
pushf
mov
inc
pop
lahf
popa
imul
inc
gs
sbbb
imul
subl
popf
and
and
shl
jno
xor
mov
gs
fisttpll
pop
dec
test
push
ljmp
add
pop
or
xchg
jae
push
daa
dec
scas
adc
lods
loopne
pop
pushf
sub
mov
mov
and
jge
iret
aad
outsl
cmp
pop
iret
push
ret
and
pop
mov
pop
dec
scas
dec
jae
ss
jle
mov
xchg
dec
cld
scas
popa
fnstenv
popa
insb
adc
jecxz
mov
fldl
sub
or
sahf
sahf
cmpb
sub
or
mov
fwait
mov
lahf
stc
pop
addb
fsts
sub
data16
add
mov
shlb
loopne
adc
sbb
imul
lret
mov
imul
js
stos
mov
dec
es
dec
jnp
push
cmp
or
jnp
popa
mov
adc
add
popa
sub
lret
inc
inc
xor
aad
or
xchg
ret
xchg
mov
push
xor
jmp
xor
iret
aaa
pop
pushf
xchg
and
adc
pushf
scas
enter
sbb
or
mov
add
pushf
outsb
arpl
mov
addr16
lods
cwtl
loope
loop
lods
std
inc
xor
xchg
scas
cli
dec
cmpsl
call
sti
dec
imul
lods
add
push
and
out
gs
faddp
xchg
mov
enter
jnp
adc
and
jle
fdivrs
sub
xor
test
mov
and
fs
push
lods
hlt
lret
imul
cltd
and
lea
or
pop
in
mov
sti
mov
fwait
out
scas
fildll
int
jp
iret
int3
jns
or
in
fwait
in
das
subb
in
cmp
push
ds
fsubl
out
or
mov
je
fstpt
leave
adc
mov
adc
cmp
add
push
out
pop
sbb
clc
out
mov
sbb
xchg
jo
or
lcall
sbb
stos
mov
sbb
dec
repz
push
movsl
mov
sarb
lods
arpl
xor
add
lods
jl
out
add
adc
loopne
dec
mov
daa
jle
out
scas
and
mov
inc
enter
int3
negl
or
popa
in
int3
lds
gs
scas
mov
xchg
popf
adc
pop
adc
mov
jns
in
jmp
or
pop
mov
cmp
mov
pop
push
xchg
pop
push
mov
rclb
mov
and
mov
mov
addl
stos
adc
shlb
mov
cmc
addl
cvtps2pi
call
inc
cmp
adc
mov
into
js
jg
jno
xchg
adc
les
cmp
mov
push
lcall
es
mov
mov
mov
pop
jl
dec
xchg
loopne
mov
sub
lahf
insb
mov
pop
mov
cli
pop
jge
sahf
sti
sbb
gs
mov
imul
mov
sbbl
clc
data16
lods
testl
xchg
mov
dec
dec
lcall
sub
add
pop
add
push
imul
bts
push
std
js
pop
mov
sbb
jmp
xchg
mov
lods
jae
push
out
add
pop
aaa
sahf
in
xor
xor
push
loope
xorl
out
js
adc
push
scas
imul
cmp
or
shlb
and
je
xchg
dec
hlt
dec
or
lea
and
sbb
or
push
cltd
jg
leave
std
mov
and
pop
inc
xor
jp
cmpsl
xchg
and
push
mov
inc
jo
push
insl
inc
movsl
shlb
ffreep
add
fnstenv
pop
dec
inc
rolb
sbbb
shr
mov
pop
lret
xchg
jp
lcall
stos
fs
or
flds
mov
stos
xor
push
fs
mov
ja
jnp
jecxz
sub
sub
idivb
adc
dec
sti
push
sbb
xchg
lea
fdivrl
scas
push
aaa
or
cmp
ljmp
mov
add
int3
popa
jmp
arpl
add
sbb
add
ljmp
dec
in
push
inc
xchg
lret
mov
movsl
sbb
mov
mov
hlt
popa
mov
add
pop
ljmp
lods
cmp
pushf
jae
add
aam
iret
jp
ljmp
inc
insl
inc
inc
mov
mov
xor
adc
cwtl
sbb
stc
pop
jo
mov
bound
out
negb
add
insl
lret
aas
stos
xchg
pop
int
mov
push
xchg
sub
fldl
lods
das
xchg
loope
cwtl
xchg
mov
popf
out
lcall
mov
pop
flds
fsubrs
or
into
test
ds
pop
inc
sbb
ja
out
mov
mov
cmp
pop
fwait
adc
jno
and
das
inc
aad
jg
xor
lret
xchg
mov
pop
mov
jnp
and
orl
jmp
xlat
lds
repz
jo
test
xchg
push
lea
or
insl
cli
cmp
jmp
jmp
cli
sti
push
dec
sub
add
xchg
inc
sbb
aaa
jg
ja
xchg
xchg
mov
decl
out
negl
aaa
out
xor
mov
popf
adc
push
push
sbb
mov
mov
lret
dec
push
cmp
push
cltd
stos
stos
out
fistpll
and
stos
xor
in
sbb
push
hlt
loop
ljmp
arpl
adcl
fisubs
lods
pop
mov
xchg
pop
popf
inc
cmp
jecxz
mov
imulb
dec
mov
jmp
xchg
cmpps
xchg
xor
dec
cmp
mov
mov
jecxz
mulb
scas
insl
mov
sbb
mov
movl
pop
lods
adc
mov
imul
jge
fwait
movsl
pop
maxps
xchg
adc
or
mov
cli
fadd
sbb
and
loopne
jb
outsl
aam
out
dec
jns
or
mov
popf
lods
mov
push
ds
dec
enter
cmpsl
fbstp
cmc
enter
out
and
ficomps
in
out
dec
imul
adc
dec
xchg
cmpsl
dec
fbstp
test
or
sbb
hlt
sbb
je
rclb
jp
aaa
mov
dec
mov
or
sub
dec
nop
ss
mov
xchg
cs
mov
adc
das
adc
and
les
les
mov
addr16
in
add
fisttpll
call
sbb
fcoms
mov
and
fistl
cmp
and
mov
mov
and
imul
jle
fcomp
xor
rorl
fs
mov
mov
add
pushf
push
xchg
cmp
and
dec
shl
push
cmpsb
add
mov
jb
sub
icebp
test
inc
jmp
inc
inc
iret
pop
insb
mov
add
pop
jne
ja
fcompl
push
push
cmc
xchg
fcmove
cmp
std
stos
sbb
adc
xor
jle
aaa
out
loope
adc
lods
imul
adc
stos
xchg
cltd
pop
pop
add
aad
jmp
xor
push
data16
movsl
data16
fnsave
jne
add
movsl
mov
ljmp
stos
pop
dec
mov
dec
mov
xor
test
add
mov
pop
mov
lods
xor
mov
push
insb
xchg
xor
cmp
cltd
imul
mov
add
dec
pop
dec
out
lds
push
in
jecxz
lods
hlt
add
ret
pop
push
jnp
xchg
in
jle
popf
repz
cmp
xchg
push
xchg
push
xchg
jg
clc
jg
ret
xor
mov
lret
adc
notb
cmp
inc
stc
inc
clc
sbb
cs
mov
jl
or
int
dec
loopne
add
gs
testl
aaa
in
mov
inc
iret
pop
cmp
cltd
stc
je
inc
clc
fcoml
cmp
stos
sbbb
mov
movsl
repnz
pop
and
adc
test
sub
ss
nop
xchg
aas
inc
fwait
mov
lds
xor
cmp
and
pop
mov
js
cwtl
push
or
mov
mov
push
pop
rcrb
int3
ret
dec
push
int
jp
out
sahf
lds
outsl
push
push
jns
sbb
mov
out
clc
inc
inc
sbb
test
fisttpll
daa
loope
je
or
rorb
mov
ficoml
fdivrs
mov
inc
or
fdivrs
dec
fs
mov
jbe
in
pop
subl
push
fdivrl
mov
fwait
mov
sub
ret
out
push
jg
aad
stos
pop
jno
dec
cltd
int
div
rcrl
pop
loop
or
lahf
nop
jecxz
mov
dec
jbe
pop
push
and
pop
scas
mov
xlat
movl
and
sbb
das
ds
mov
subl
add
inc
add
cmpsb
or
pop
mov
ret
mov
mov
push
lahf
pop
pop
into
pop
and
mov
pop
sbb
data16
add
inc
mov
add
or
sub
jecxz
dec
pop
jae
test
rcll
mov
ss
movsl
mov
dec
ja
fnop
mov
cmpsl
mov
ficoms
jmp
loope
shll
arpl
push
push
fcmovbe
rcll
movsb
loope
popa
fadds
jge
int
bound
cli
aad
stos
mov
rcrl
lock
test
push
pop
add
mov
pop
mov
adc
mov
in
jp
je
xchg
fcmovnbe
stos
jle
cltd
sbb
push
mov
pop
cmpl
xlat
xchg
or
loop
ja
dec
je
addb
inc
cmp
sub
or
sbb
inc
pop
xor
inc
inc
sbb
mov
jo
imul
mov
aad
out
sbb
or
xor
jns
sbb
lods
lret
jge
ljmp
fwait
cmpl
shrb
test
rcr
mov
nop
add
aas
adc
jae
icebp
outsb
cmpsb
add
push
les
fcom
inc
sub
push
add
push
pop
aaa
add
push
inc
dec
or
dec
cmpsb
mov
pop
sbb
fdivl
cmp
into
in
xor
ss
in
and
scas
mov
or
add
es
movsl
xchg
lods
lret
jp
dec
xor
sub
imul
or
push
jnp
cmp
cmpsb
popa
in
mov
dec
add
ret
rcrb
outsb
loopne
lret
fcmovb
add
and
lahf
or
mov
imul
lret
insb
add
xor
sbb
sbb
pop
mov
sbb
shl
aam
push
pop
inc
loopne
pop
push
mov
sub
dec
dec
adc
cmp
fistps
lods
cld
test
andb
xor
stc
inc
xchg
fistpl
cmpsb
cltd
mov
dec
sbb
mov
lret
and
pslld
or
dec
stos
push
dec
push
sub
lods
xchg
outsb
add
rclb
inc
ds
movsb
sbb
incl
push
dec
pushf
pop
xor
add
pop
jne
mov
mov
ret
xor
enter
inc
scas
sti
mov
addr16
sbb
inc
sbb
popa
es
mov
mov
cmp
jbe
xor
sbb
scas
dec
push
scas
or
mov
nop
sub
fsts
cltd
push
mov
aad
sub
hlt
mov
cmpsl
adc
sbbb
inc
and
shll
and
cli
jmp
pop
cld
pop
mov
out
stos
mov
popf
insb
sar
xor
lcall
mov
cwtl
mov
lock
scas
std
fbld
mov
subb
and
lahf
jb
cmp
jl
fcompl
xchg
out
data16
fmull
stc
and
adc
pop
test
aad
andb
xchg
push
in
lret
stos
sub
out
popf
xchg
fildll
mov
mov
addr16
add
adc
popa
mov
mov
add
rcrl
lds
dec
sub
sbb
xchg
subb
and
mov
repnz
rcrb
jnp
push
mov
cwtl
insb
xchg
push
lahf
mov
add
mov
push
pop
xor
mov
mov
sarb
scas
in
pop
mov
mov
std
mov
mov
in
repz
fists
lds
jbe
jge
movsb
data16
and
and
cmpl
or
data16
mov
xchg
push
rcrl
outsl
mov
inc
stc
xchg
mov
push
pop
inc
sbb
xchg
lods
inc
cmp
cmc
andl
sahf
decb
xchg
or
mov
movsl
fisubs
insb
pop
pusha
jns
mov
push
mov
cmp
mov
divps
push
jb
xchg
push
pusha
mov
adc
cwtl
inc
out
decb
movsl
mov
mov
mov
cmp
sub
mov
hlt
cmp
xchg
mov
jnp
lock
fnsave
inc
sbb
cmp
dec
cli
push
in
xchg
mov
test
pop
test
rcl
dec
pop
stos
jbe
je
fadds
rcl
test
cld
push
push
cmpsl
orl
or
int
outsl
jecxz
xchg
aas
ret
scas
negb
and
pushf
divb
cli
out
mov
mov
sbb
cs
ljmp
inc
xchg
sub
int
aam
xchg
rclb
xchg
jp
stos
adc
pop
dec
frstor
jne
mov
stc
xchg
pop
loop
xor
bound
in
sbb
daa
and
icebp
repnz
scas
pushf
gs
sub
aaa
inc
xor
fwait
hlt
mov
sub
in
jl
mov
mov
mov
jg
sarb
call
push
clc
std
push
fidivrl
stos
test
push
lret
mov
scas
lds
sahf
movl
pop
in
ljmp
or
loopne
sahf
js
cmp
mov
jecxz
shll
inc
xchg
mov
fdivrs
fwait
outsl
outsl
dec
adc
mov
cmp
stos
pop
pop
hlt
and
jno
sbb
sbb
divl
out
outsb
add
pop
mov
push
repz
es
fsubrl
jle
out
inc
push
pop
loopne
cltd
mov
lret
dec
cmp
ja
push
je
or
xchg
cli
jl
mov
mov
out
ret
incl
sbb
leave
jae
push
in
js
xchg
mov
adc
xchg
jnp
pop
in
xor
data16
pop
call
pop
sahf
or
fs
ret
pop
in
aas
popa
jge
xchg
mov
cmp
jo
xchg
lock
faddp
mov
leave
or
mov
in
pushf
push
sbb
cmp
add
mov
popl
push
or
enter
pop
and
xor
mov
xor
rcl
daa
loope
jecxz
mov
adc
push
lret
cmp
or
subl
test
mov
shr
outsb
imul
jb
push
inc
or
cwtl
inc
mov
mov
xchg
jmp
lcall
dec
mov
push
int3
loopne
sub
fs
pop
cs
fmul
jecxz
pop
das
push
aas
cmp
xchg
fucomp
subl
shlb
inc
mov
xor
lcall
clc
das
dec
mov
divl
pop
ffreep
subl
add
mov
movsl
sub
pop
bnd
leave
movsl
ret
sbb
adcl
mov
sbb
xchg
pop
mov
mov
repnz
out
loopne
fs
push
lds
add
je
sahf
dec
jmp
mov
cwtl
popa
mov
inc
into
mov
mov
mov
cli
jno
mov
xor
mov
dec
jmp
data16
push
fcompl
out
repz
or
test
ljmp
jnp
adc
out
xchg
fisubl
les
mov
push
fistpll
push
sbb
leave
adc
out
repnz
shrl
xchg
sbb
or
xor
sbb
add
dec
add
pop
mov
loop
inc
sbb
push
mov
ret
nop
lods
scas
int
lahf
dec
lods
aaa
xchg
call
xor
iret
sbb
xchg
orl
ret
imul
test
mov
pop
push
int3
in
das
std
push
mov
into
rcl
jnp
out
sarb
int
sbb
ja
lret
inc
push
scas
sti
xchg
push
xor
in
movsl
movsb
ljmp
xlat
push
sbbb
js
out
xlat
ljmp
stc
rcrl
jp
mov
pop
sti
dec
lods
test
les
gs
push
imul
xchg
repnz
nop
int3
das
ss
jbe
dec
push
cmp
cld
movsb
adc
fcom
pop
addr16
ja
dec
lods
xor
pop
into
arpl
cmp
mov
enter
pusha
jmp
out
or
xor
lods
pop
fwait
aaa
bound
jp
shlb
or
mov
addb
push
loopne
inc
imul
dec
inc
imul
or
outsb
jbe
cmp
jecxz
xor
cwtl
aaa
mov
xlat
pop
mov
mov
push
or
cltd
lea
or
adc
mov
hlt
jnp
or
push
jle
sti
fmull
addb
dec
sbb
test
imul
ds
xorl
int
cmc
xchg
xchg
js
lock
scas
pusha
aad
mov
flds
lods
jbe
sbb
in
pop
pop
scas
mov
xchg
push
pop
sub
loopne
test
cmc
jg
cmp
jmp
out
lea
cltd
xchg
mov
or
jle
push
and
or
scas
push
loopne
push
mov
subl
dec
mov
ss
cld
lea
add
int
jmp
add
popa
mov
or
pop
push
mov
and
or
sar
arpl
sbb
mov
in
jae
incl
scas
sub
andl
and
std
mov
mov
or
cwtl
xchg
shlb
or
insl
jle
cmpsl
mov
pop
rol
push
mov
cltd
mov
orb
call
ret
test
mov
mov
xchg
pop
clc
push
lea
fincstp
mov
mov
pop
pop
outsl
or
pop
cwtl
fnstcw
push
and
xchg
orb
sub
adc
mov
fbld
or
lret
sbb
bound
mov
mov
hlt
jnp
push
ds
mov
ljmp
dec
aas
and
mov
out
pop
jae
sbb
leave
jb
pop
enter
inc
dec
dec
lcall
dec
push
push
test
sub
push
mov
pop
mov
and
sub
mov
movsl
es
daa
mov
adc
xchg
loopne
mov
and
rolb
test
movsb
cmp
sub
pop
cs
jmp
jo
stos
pushf
ret
ds
test
adc
push
and
outsl
lock
cmpsl
negb
xor
out
jmp
or
dec
xchg
dec
mov
test
push
sti
sbb
fcmovu
por
or
pop
aas
jecxz
xor
xor
out
out
pusha
das
rorb
pop
push
ret
jb
xor
adc
loope
inc
ficompl
mov
shl
pop
les
leave
cs
enter
pop
adc
mov
repz
mov
adc
push
stc
loope
loop
js
lock
sub
cmc
pop
xor
js
out
imul
imul
pop
fistpll
mov
mov
xchg
test
outsb
insl
out
xor
and
push
stos
test
inc
fnsave
inc
cmp
jo
add
out
mov
jmp
dec
mov
xchg
xor
inc
mov
push
inc
lods
pushf
pushl
es
sarl
leave
lret
xor
loop
add
dec
mov
jb
popa
loop
push
xor
fs
popf
cmp
sub
jmp
in
xor
dec
aam
cmp
out
cs
pop
dec
rcrb
fbstp
fs
sar
jl
mov
and
dec
mov
inc
add
addb
cld
nop
xchg
cs
and
xchg
cmp
mov
addl
add
xor
lahf
mov
arpl
cmp
std
pusha
cmc
addb
movsl
and
mov
fsubrl
xchg
sub
out
cmpsl
xor
lods
mov
das
jb
cmpl
fldenv
scas
sub
sub
mov
es
push
dec
dec
push
inc
mov
xchg
fs
int3
xchg
mov
repz
mov
fwait
mov
sbb
pop
insb
loope
lahf
jg
sbb
inc
pop
popf
mov
sbb
or
fistpl
repnz
mov
adc
lods
sub
sbb
push
jp
scas
dec
testl
gs
les
inc
mov
cli
rorl
add
sub
int3
or
xchg
clc
mov
imul
jmp
jnp
add
or
subb
loope
orb
xchg
mov
in
dec
mov
inc
stc
scas
or
int
aas
aaa
adc
or
ja
popa
jl
cli
pusha
fmull
and
inc
iret
cld
mov
push
bound
daa
xor
pusha
sarb
loop
clc
mov
jbe
pop
push
outsb
lret
mov
in
pop
adcb
std
mov
sub
cmpl
and
or
cs
fsub
popw
in
or
std
call
push
xchg
xor
push
xor
sti
push
out
popa
mov
adc
sti
xchg
pop
mov
xor
inc
bound
xor
loop
xor
pop
xchg
gs
inc
xchg
sahf
xlat
xchg
fs
or
or
xchg
push
inc
add
cmp
negb
into
ljmp
daa
scas
or
movsl
xor
in
in
bound
xchg
repnz
xor
mov
cmp
mov
mov
mov
cltd
enter
mov
sbb
shlb
loopne
stos
sbb
push
mov
push
mov
push
sbb
clc
sub
jg
jns
mov
dec
mov
push
pop
stos
dec
sti
or
movsl
sti
and
popa
and
stos
aas
movl
lea
adc
fmuls
mov
mov
popf
pop
loop
sbb
stc
in
push
lahf
pop
add
out
push
xchg
movsb
sahf
sbb
and
mov
pop
movsb
test
mov
jle,pn
sub
rcll
pusha
pop
loope
jno
leave
test
sbb
in
in
lret
mov
gs
jge
xchg
or
mov
jb
cmp
mov
arpl
fisubrl
jge
and
lock
jbe
pop
pop
aad
inc
mov
xor
leave
inc
repz
push
xchg
idivl
adc
jae
mov
cmp
cmp
test
lods
nop
cmp
push
dec
add
in
sub
push
xchg
push
sub
dec
xor
mov
sub
add
jle
jmp
xchg
lods
adc
mov
test
cwtl
pop
and
xchg
mov
push
and
lock
inc
mov
test
scas
lcall
jp
out
mov
sbb
dec
int3
add
mov
xor
xchg
popa
int3
mov
sub
loopne
call
and
lcall
mov
mov
push
fnstsw
je
aam
cmpl
into
add
mov
leave
pusha
add
pop
ljmp
fstpt
mov
gs
repz
jecxz
mov
pop
divb
je
lods
sub
xchg
inc
xchg
les
movsl
add
ret
jecxz
inc
jne
mov
loope
mov
cmpsb
lea
sarl
push
pop
pop
adc
in
fsts
cmp
push
popf
mov
mov
das
pop
and
add
sub
icebp
lahf
lds
inc
stos
dec
les
or
or
xor
adc
xchg
cmp
cmp
push
adc
mov
subl
fcomps
mov
jmp
pop
andb
insl
and
or
aas
mov
cld
mov
gs
out
and
insb
mov
cltd
xchg
pop
or
imul
cmp
jnp
xor
xor
mov
inc
mov
sub
cli
shll
xlat
push
lods
mov
cwtl
inc
push
and
fwait
xor
shll
ret
xor
das
test
ret
xchg
stc
test
outsl
imul
std
dec
pop
repz
dec
clc
stos
insb
cld
or
rcl
pop
stos
nop
sub
movsb
sbbl
push
dec
lods
pop
jno
dec
in
inc
fsubrp
mov
stos
xchg
std
in
call
cwtl
ss
mov
leave
sbb
cmp
sub
lods
fiadds
push
idivl
test
lds
jo
cltd
loopne
aaa
sub
and
lea
lds
xchg
adc
sbb
cmp
xor
movsb
mov
mov
push
adc
in
loope
iret
ds
push
movsl
jl
add
sbb
sub
pop
push
inc
shll
lret
shrl
pop
dec
push
pop
movsb
dec
jg
inc
mov
shll
orl
cmp
out
or
lret
xchg
or
ret
sub
add
xlat
orb
aas
xlat
std
mov
dec
inc
or
cltd
mov
sub
loopne
nop
out
adc
mov
push
mov
add
adc
jl
nop
xchg
push
push
inc
sbbb
adc
xor
mov
dec
ljmp
mov
mov
xor
or
adcb
mov
imul
insl
test
inc
adc
enter
lods
jns
enter
add
fstp
cmp
dec
inc
enter
subl
popf
cmp
sti
cmc
push
sbb
pop
and
sbb
sbb
mov
xlat
cmp
ficoml
ret
mov
add
cmp
lds
or
cmp
xchg
int
es
add
sub
mov
outsl
adc
loope
shrb
shrb
in
ss
xchg
adc
daa
dec
jno
test
dec
mov
cli
movsb
ret
mov
mov
or
inc
mov
sti
aad
or
aaa
xchg
xor
add
sahf
dec
xchg
jge
enter
das
ret
jbe
out
int
insl
insl
xor
enter
jb
and
inc
push
lock
jns
dec
call
sbb
jg
sbb
gs
arpl
outsb
cmp
lahf
les
push
sbb
push
add
jg
ja
loopne
sub
xor
adc
out
pop
and
movsb
add
inc
push
cs
or
xor
lret
sub
pushf
imull
in
les
xchg
ret
xchg
testb
subb
into
outsb
push
out
mov
mov
test
popf
mov
cmp
jb
push
xchg
sbb
inc
cld
jle
jb
push
dec
pop
jl
push
jge
xor
mov
es
pop
enter
inc
pop
outsb
in
faddl
push
lret
lret
call
xchg
stos
negl
popa
adc
gs
adc
adc
pop
push
jbe
mov
mov
inc
push
loop
mov
dec
lods
mov
cmp
aam
jl
mov
into
jnp
cmp
test
cld
inc
push
daa
mov
push
clc
push
pop
sar
ja
lock
jo
push
cwtl
mov
fdivs
in
popa
mov
add
data16
cmpsb
bound
ja
aaa
loope
sub
adc
mull
sbb
cmp
std
fs
gs
jp
cli
test
fidivrl
dec
cmc
aad
xor
fidivs
sbb
adcb
push
imul
shlb
pop
sbb
aad
mov
loop
inc
ret
xchg
shl
pop
shrl
sub
testl
mov
jae
mov
push
add
dec
jo
xor
fisttpl
cmp
mov
mov
mov
xchg
fwait
dec
push
mov
or
cmp
jle
mov
insb
sbb
xchg
popa
rclb
hlt
mov
cmpsb
ljmp
lods
cld
out
mull
rol
decl
mov
dec
cmp
dec
add
or
mov
icebp
add
pop
mov
xchg
pop
les
mov
cmp
clc
push
dec
cltd
or
mov
loop
sbb
rcrl
imul
iret
mov
xor
or
pushf
jecxz
outsl
ss
popf
movb
loopne
icebp
sbb
aas
rolb
mov
sub
cltd
lea
aaa
imul
dec
sub
push
mov
mov
cmc
lea
xor
loopne
hlt
rorl
xchg
ss
fsub
and
sbb
stos
adc
out
call
and
push
and
or
fisttpll
jb
fs
jge
push
rcr
sub
add
fcoms
sbb
aaa
or
in
dec
push
test
in
push
insl
bound
xchg
sbb
pop
inc
mov
cmp
icebp
inc
push
push
pop
mov
aaa
stos
mov
lea
repnz
dec
std
and
xchg
cmp
lock
loope
xchg
and
stos
cmpsl
add
adc
mov
sub
btc
ret
pusha
xchg
pop
push
sbb
inc
stos
jl
cltd
mov
loopne
dec
int
xor
in
out
loopne
jge
stos
jmp
mov
test
mov
mov
mov
push
mov
mov
dec
xchg
lds
jge
popa
sbbb
popf
sbb
lea
pop
repnz
push
lock
sbb
mov
add
rorl
pop
pop
push
data16
inc
movsl
imul
sub
jg
dec
insb
sub
mov
inc
dec
xchg
sarl
out
iret
mov
xor
push
in
ss
aas
cld
jae
push
dec
push
out
push
sub
xchg
jns
mov
sbb
nop/reserved
stc
hlt
out
mov
stos
lods
not
int3
fiaddl
dec
pop
aam
outsb
in
lea
lret
mov
fisttpl
jnp
test
nop
push
outsb
test
enter
push
popf
aad
ss
xor
jge
stos
inc
sub
test
out
sbb
int3
leave
mov
xchg
movsl
mov
cmp
in
sub
ljmp
xor
push
inc
mov
push
cltd
xchg
jg
mov
rcrl
imul
jle
or
pop
cs
sbb
fimull
cmc
push
aad
lods
dec
mov
cmp
into
sar
loope
pusha
xchg
jnp
add
shlb
dec
clc
insl
rorl
xchg
inc
lahf
jge
insl
or
aam
les
outsb
sahf
aam
mov
aas
xchg
cltd
scas
aam
fs
inc
ret
dec
jb
xlat
push
repz
mov
cltd
mov
jp
xchg
dec
jbe
pushl
and
add
int
imul
movsb
fnstenv
dec
pop
insb
imul
jnp
inc
fcmovb
dec
test
mov
or
pop
inc
scas
and
int3
jmp
cmc
sub
jl
jmp
in
jmp
orb
sub
sbb
lret
faddl
mov
xor
rolb
rorb
icebp
js
mov
mov
sbbb
pop
rorb
add
xlat
xor
lahf
das
pop
in
mov
lcall
dec
pop
stos
mov
pop
pop
das
or
in
adc
inc
mov
xchg
lea
mov
mov
mov
sbb
xchg
xlat
xchg
mov
arpl
adc
pop
adc
clc
js
add
xchg
lahf
dec
xor
nop
inc
in
or
mov
cmp
mov
mov
ljmp
inc
cmc
pushf
dec
repz
gs
in
imul
ja
es
mov
in
dec
sub
sbb
into
cmp
ds
rorl
int3
xchg
leave
mov
push
test
fs
xor
cmp
aaa
insb
or
push
pushl
add
cmp
cmc
je
dec
xchg
add
out
dec
and
and
daa
adc
daa
aam
mov
jno
les
std
test
jae
sub
add
jle
mov
xor
stos
jb
shl
inc
xchg
sub
lds
int
and
xchg
pushf
iret
jb
jb
mov
add
and
inc
sbb
cmp
cmp
mov
or
sub
xchg
push
pop
aam
insl
addr16
pop
xlat
outsb
test
adc
and
lock
enter
sti
inc
xchg
add
cmpsb
fwait
inc
cwtl
add
lds
pop
test
inc
push
sbb
loope
jmp
es
jl
into
xlat
dec
push
sbb
shll
mov
jge
mov
mov
pop
push
jge
lea
dec
or
mov
out
loopne
jne
imul
and
sub
and
jmp
das
stos
adc
mov
push
jl
add
cmp
mov
mov
lods
bound
icebp
or
bound
fxch
stos
add
jnp
pop
xchg
cmpsb
pusha
fistps
or
sub
sub
scas
lods
or
adc
movsl
dec
stc
jnp
lds
sub
cld
adc
das
push
stos
cmp
lret
cs
add
or
xor
test
arpl
jns
mov
cmc
mov
fstps
sbb
adc
sub
call
lea
xor
inc
mov
leave
ds
mov
push
out
sub
ret
arpl
addr16
cmp
mov
cltd
fidivl
cmp
pop
mov
xchg
sub
iret
push
in
cmc
mov
inc
mov
imul
sti
loop
mov
push
fistpll
cli
sub
cmc
insl
sbb
jne
outsb
xorl
lahf
dec
xchg
hlt
stos
popf
adc
xchg
dec
mov
mov
jle
sub
adc
dec
sub
test
loop
pop
add
jg
jne
or
loope
sbb
imul
dec
int3
jne
mov
mov
js
jp
push
cwtl
ret
ljmp
push
mov
jg
mov
cmp
in
and
pusha
jo
sbb
fwait
add
xor
and
pop
dec
mov
shll
bound
mov
jo
jg
or
jnp
and
jnp
inc
jle
es
paddq
mov
add
mov
das
fldcw
dec
push
jnp
pop
dec
dec
loopne
add
pop
icebp
mov
xor
sarl
mov
or
push
mov
test
jne
cld
shl
jg
adc
inc
nop
xlat
dec
jecxz
fnstcw
lea
push
pop
ret
les
mov
test
mov
popa
sub
pop
xchg
data16
loope
pop
or
jmp
and
xor
jae
es
cmc
shll
scas
inc
and
or
dec
xchg
movsl
out
es
mov
setge
lods
lock
cmpsb
or
jle
ss
movsb
xchg
lret
mov
imul
cmc
and
das
dec
stos
push
push
pop
cmpl
sbb
push
cmp
and
mov
scas
mov
fstl
pushf
les
push
flds
pop
mov
out
or
add
mov
sbb
mov
adc
clc
adc
sbb
jb
movsl
mov
cmpb
pop
jbe
pop
lds
shl
lret
jb
push
mov
inc
push
push
or
sahf
imul
add
jle
add
dec
daa
jno
mov
fsubrs
aad
int3
and
cmpsl
loope
lods
jae
xor
sub
xor
adc
mov
cwtl
add
pusha
adc
leave
fisttpl
out
sbb
jne
cmpb
int3
leave
stc
in
cmp
mov
lcall
adc
ss
adc
mov
mov
sub
into
sub
enter
int3
add
push
mov
xor
hlt
inc
sbb
jg
sbb
inc
dec
add
stos
sub
fwait
into
mov
inc
cmpsb
adc
insb
add
sub
pop
pop
fwait
mov
xchg
ljmp
lahf
jbe
sbb
mov
clc
cmp
pushf
mov
loop
add
inc
xchg
insl
test
jo
aad
inc
shl
xchg
sub
push
push
sub
aaa
pop
test
inc
aam
xchg
test
nop
dec
mov
mov
imul
daa
daa
add
aad
jae
lds
enter
and
push
sbb
mov
mov
inc
test
dec
mov
in
nop
int
jle
xor
xchg
jmp
out
lret
mov
add
jmp
mov
push
mov
inc
xor
popa
sub
clc
mov
push
lds
in
sbb
jb
mov
loopne
repnz
or
and
pop
xchg
adc
jae
sbb
jnp
test
push
fdivp
lret
jle
mov
xor
shll
stc
pop
cmp
add
xchg
inc
mov
fnstsw
sbb
leave
inc
or
outsl
ret
xchg
jne
mov
or
pop
pop
daa
xorb
nop
mov
push
dec
js
push
aam
inc
pop
sub
nop
fwait
inc
jo
popl
es
adc
jmp
lock
popf
cld
pop
jmp
jge
shlb
loope
add
imulb
cli
sbb
add
add
lret
pop
popa
xchg
decb
mov
seta
jl
clc
je
add
or
dec
add
fiaddl
mov
xlat
and
ljmp
int3
or
shr
and
or
ja
aad
jge
and
xor
icebp
mov
scas
lret
pop
xchg
cs
inc
or
data16
xor
dec
mov
xor
push
xchg
cmp
clc
xor
aam
pop
dec
mov
mov
and
jns
adc
arpl
stos
pop
call
xchg
inc
out
test
add
pop
daa
sbb
shll
ja
xchg
adc
push
mov
add
sub
add
xchg
sub
lods
sub
testl
cli
in
mov
cltd
bound
fcomp
xchg
lret
push
mov
aaa
mov
stc
jo
and
sub
sbb
mov
inc
out
or
or
inc
mov
or
cltd
sarl
out
shrl
mov
or
jb
lcall
pop
push
cs
inc
leave
mov
and
jne
push
dec
mov
cmp
loopne
mov
push
sub
jns
push
or
inc
addb
sbb
push
inc
cmpsl
ljmp
sub
and
pop
and
arpl
call
ret
lock
aam
repz
ficomps
pop
mov
push
mov
iret
enter
push
pop
adc
int3
push
mov
xor
testb
insl
add
mov
arpl
sbb
orl
add
fdivrs
sbb
aas
insb
fldl2e
jno
int
adcb
lahf
pop
movsb
in
incl
dec
add
mov
and
mov
mov
xor
cltd
cmp
push
insb
mov
jno
arpl
cmp
add
imul
gs
repz
pop
pop
inc
rorb
cmpxchg8b
dec
lea
mov
cmp
mov
or
and
pusha
cmc
pop
and
push
inc
cmp
outsl
popa
push
lahf
xchg
lea
add
jl
ret
push
int3
stc
inc
sbb
or
and
fld
fildll
xor
cmp
pop
bound
mov
dec
and
rcrl
mov
sub
movsl
popf
mov
js
ljmp
pop
jae
and
cld
inc
pop
mov
mov
jl
lea
cmp
icebp
sbb
push
data16
out
es
fmuls
clc
imul
rol
hlt
pop
pushf
gs
lcall
dec
clc
xlat
clc
daa
ret
jg
sub
pop
fidivs
xchg
and
mov
sub
aaa
aam
xlat
push
pop
sub
inc
pop
mov
xor
aad
in
push
xor
mov
and
push
pop
pop
push
push
mov
mov
or
jecxz
or
daa
shrl
dec
dec
jge
fisubs
int
add
lret
mov
adc
test
arpl
jl
sub
push
dec
outsl
test
cmpsl
dec
xor
dec
adc
sbb
and
mov
es
push
insb
lea
jb
jl
adc
push
jne
std
leave
int3
or
and
nop
leave
leave
push
repz
insb
repz
dec
add
jae
jae
cs
je
mov
sahf
mov
add
rcrl
lcall
pushf
and
into
xor
out
push
orb
sub
jo
fwait
in
les
cmp
pop
adc
push
mov
xor
cld
ja
inc
push
jle
dec
fs
stos
cmp
push
pop
shll
dec
outsb
out
and
les
jae
js
insb
roll
jns
inc
add
add
dec
pusha
and
xor
jo
loop
js
or
cli
pop
jl
add
rolb
lea
pop
sbb
mov
les
enter
mov
je
mov
xchg
mov
lock
adc
cs
aam
out
shrb
repnz
rcll
cmpsb
fs
mov
out
and
mov
pop
pop
ret
adc
mov
sbb
mov
pop
inc
loope
lea
xor
addr16
xor
rclb
js
fs
dec
sarl
jg
and
mov
test
dec
bnd
lods
xor
outsb
scas
pop
lea
add
test
dec
test
xor
inc
adc
xchg
xchg
mov
jecxz
test
inc
mov
imul
jbe
cmpsl
adc
push
cld
mov
fchs
bnd
mov
push
and
push
sahf
arpl
aam
adc
jno
data16
test
mov
xchg
add
cmp
sub
dec
inc
in
imul
mov
lds
daa
andb
js
shr
aam
test
xchg
add
jno
stc
lahf
clc
negl
mov
mov
dec
lock
lock
sbb
adc
push
xchg
fstpl
sbb
xor
nop
lea
mov
insl
pop
scas
mov
je
ds
or
push
loopne
jmp
mov
lret
dec
clc
xor
lcall
xchg
data16
adc
icebp
ja
xchg
repz
push
enter
int3
movsb
push
jbe
pop
ss
nop
sahf
inc
jb
jo
pusha
lcall
out
jne
and
insl
sbb
pop
or
js
jbe
cmp
cld
fstps
cmp
loope
stc
addl
lret
enter
std
mov
loop
lret
stc
cmp
push
insb
adc
sbb
pop
popa
inc
ja
push
pop
add
in
push
pop
push
je
movsb
rcll
or
mov
scas
sbb
pop
inc
jge
sub
mov
and
cmpl
in
sbb
notl
inc
cmpsb
xchg
jns
dec
mov
gs
int
mov
not
bswap
mov
repnz
int3
jp
movsl
fisubs
dec
pop
dec
int3
dec
enter
sub
iret
js
xchg
and
push
bound
xchg
push
inc
fbld
lods
out
and
mov
rclb
popa
outsl
pop
push
add
gs
out
jle
insb
jp
daa
cmp
pusha
insb
enter
iret
int
add
sub
arpl
push
rcrb
dec
nop
stc
adc
sti
imul
divl
hlt
cmpsl
shlb
and
dec
mov
jno
pop
aam
and
adcb
mov
push
adc
mov
pusha
dec
shl
fildll
dec
int3
jo
sahf
out
dec
xlat
shl
sub
add
xchg
gs
push
flds
push
pop
rcll
divb
push
fsubs
mov
ds
lods
jge
xchg
arpl
pop
mov
andb
dec
pop
fmulp
cmp
jnp
into
dec
insb
std
cltd
adc
push
cmp
dec
adc
out
movsl
inc
subl
mov
fstpl
mov
scas
sarb
pop
loope
or
out
add
jle
fimull
sti
mov
lods
cmp
xor
jbe
mov
push
clc
xchg
call
test
push
push
jo
aas
pop
dec
add
movsb
jne
lahf
fsubrl
out
mov
adc
stos
dec
jecxz
mov
bound
push
mov
pop
pusha
or
and
dec
sbb
and
pop
and
cld
pop
vpextrw
pop
data16
popa
dec
rcrb
adc
inc
aam
test
sub
and
in
call
inc
sub
clc
jp
xchg
jb
ret
lods
and
je
aad
pop
int3
push
xchg
cmc
cmp
in
fildl
adc
aam
inc
ja
int
das
repz
out
jno
stos
popf
enter
addb
add
lds
pop
int
test
ss
shl
mov
enter
cmp
or
adc
sarb
mov
std
ss
mov
ror
push
push
stos
push
mov
movsl
pop
jle
add
pop
and
add
outsl
xor
inc
jbe
dec
lret
imul
rolb
cmp
inc
mov
mov
mov
mov
call
pop
icebp
xor
aam
test
sbb
jns
into
add
add
cmpsl
movsl
pop
jns
aam
push
repnz
cli
movsl
mov
mov
cmp
enter
adc
push
xchg
lea
xor
jnp
sub
mov
and
push
mov
xor
leave
std
and
xchg
stos
imul
pop
fidivl
in
clc
std
xor
push
mov
subb
mov
test
jbe
in
scas
push
xchg
mov
lods
nop
aas
lahf
hlt
sub
lods
sub
hlt
sti
cs
xor
xchg
cmp
mov
dec
mov
pop
inc
and
in
decl
ret
xor
call
xchg
sahf
rclb
or
push
jne
xchg
cmp
pusha
cwtl
dec
movsl
enter
inc
dec
bnd
sbb
stos
in
je
and
push
shlb
adcb
mov
mov
ja
mov
push
ret
adc
or
lods
mov
xchg
call
int3
cmp
push
cld
aas
mov
stos
adc
shl
rorb
push
pop
enter
addb
sbb
cmp
rol
in
mov
mov
lock
xchg
ljmp
xchg
out
jmp
jbe
cwtl
lahf
in
mov
testl
call
repnz
mov
aad
pop
daa
or
das
dec
fistps
and
inc
or
cmpsb
rorb
enter
push
jle
sub
rorl
fcompl
mov
mov
data16
pop
in
idivb
mov
aad
sbb
xor
push
aad
insl
jg
jnp
aas
fidivrl
push
xchg
xchg
dec
xchg
cmp
rcl
pop
adc
inc
ret
jns
mov
push
add
sbb
xor
xchg
test
in
enter
mov
scas
mov
cmp
sbbb
adc
pop
cmp
iret
add
ljmp
push
call
mov
lret
push
mov
mov
inc
sub
cmp
jo
push
dec
xor
jmp
sub
jmp
dec
insl
and
lret
inc
pop
cmp
pop
dec
push
mov
mov
cld
jmp
aad
sahf
cmpsb
flds
test
clc
mov
jmp
jl
lret
cltd
pop
sub
hlt
xlat
ds
arpl
push
into
cld
fstl
add
stc
xchg
mov
xchg
jp
je
sti
xchg
dec
or
inc
test
filds
clc
test
or
insl
enter
scas
lods
add
sbbl
int
mov
xor
push
popa
insl
mov
mov
mov
sub
int
arpl
xor
mov
js
bound
test
notl
mov
add
push
mov
mov
dec
imul
xchg
sarb
mov
push
sbb
mov
dec
mov
fisubrs
xlat
jg
push
call
mov
sbb
add
daa
addr16
lcall
loope
fs
pop
out
repz
frstor
test
stos
cmc
hlt
cltd
test
test
aam
ja
mov
ds
leave
jmp
cmp
shrl
cld
das
push
mov
xorb
mov
cwtl
xchg
shlb
sbb
mov
add
stos
jnp
inc
je
cmp
test
pushf
pop
mov
mov
cmp
push
mov
cmpsb
xchg
sub
scas
xchg
pop
push
dec
in
popf
hlt
pusha
lret
imul
lds
sbb
inc
clc
add
cmpsl
out
jb
mov
movsl
and
adc
mov
cld
cs
sbb
push
clc
ds
fnstcw
test
stc
or
adc
pushf
inc
popa
imul
and
fisubl
lcall
aad
insl
sbb
in
popf
pusha
mov
sub
push
or
add
xor
add
adcl
xor
sub
mov
outsb
cmp
mov
sub
sub
gs
sbb
lods
mov
sbb
repz
mov
daa
mov
xor
xchg
or
clc
imul
jnp
and
mov
loop
repz
pushf
or
es
dec
xchg
cmovb
aaa
push
hlt
aas
dec
outsb
lock
mov
push
or
push
es
add
cwtl
adc
rcl
push
jge
cmp
test
fiaddl
cwtl
inc
lods
cmp
mov
xor
in
mov
add
lds
mov
mov
loopne
mov
sub
jb
lret
mov
cmp
sub
mov
sbb
js
cltd
jo
mov
xorb
pop
gs
fmulp
jg
xchg
sahf
lds
mov
imul
pop
sub
xchg
lods
das
xchg
adc
orb
adc
jbe
lds
inc
scas
out
xlat
dec
push
jmp
xchg
push
int3
sbb
pop
icebp
cmp
je
inc
mov
jp
loope
fwait
cmpsb
ret
sahf
outsb
js
pop
imul
lahf
cmp
shr
inc
pushf
in
mov
sbb
sahf
das
testl
mov
sbb
xchg
xor
lahf
dec
xchg
xlat
mov
mov
pop
xchg
clc
push
rorb
fbstp
out
xor
bnd
ret
xchg
pop
lea
cwtl
inc
xchg
pop
dec
dec
mov
leave
data16
jmp
mov
loop
mov
mulb
adcl
fistpll
xchg
lds
orl
shll
xor
xor
loop
sbb
out
inc
int
sbb
push
jb
shrl
aaa
in
dec
jmp
sub
mov
xor
mov
adc
cs
aad
xchg
add
lahf
fisubrs
mov
popa
or
inc
icebp
mov
xchg
lods
test
sbbl
add
inc
xchg
sbb
out
test
or
cmp
dec
push
data16
lcall
add
shrb
in
adc
pop
arpl
mov
and
or
stos
shrl
aad
inc
cmp
pmulhuw
aas
insl
xchg
mov
add
inc
xor
insl
push
mov
sahf
fisubs
aam
paddd
mov
mov
subb
inc
sub
xchg
cwtl
lea
adc
mov
jp
sub
xchg
mov
push
add
aad
lds
rcl
ljmp
inc
lret
sarb
pushf
nop
xchg
xchg
sub
mov
loopne
addr16
and
push
or
cwtl
sbb
mov
pop
pop
mov
inc
xchg
enter
call
adc
loope
jmp
das
inc
adc
lods
inc
iret
imul
hlt
mov
cmpsl
fwait
lea
mov
in
fmul
cli
pop
and
xchg
xchg
mov
popf
xchg
inc
sub
std
daa
int
js
add
ljmp
dec
ficoml
fistpll
loop
xor
pop
mov
fistpll
push
popf
call
cmp
js,pn
in
ja
enter
jg
push
sub
out
cmpsl
mov
jecxz
leave
push
stos
push
es
sahf
cmp
fwait
sbbb
mov
out
aas
popa
sbb
push
push
or
push
mov
test
pop
xchg
sub
sbb
mov
jl
jmp
xor
stos
rcll
lock
adc
fisubs
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
jle
clc
adc
in
pop
mov
jbe
fcompl
xchg
pop
in
push
xlat
pop
das
imul
pop
mov
cmp
sub
jle
cli
sub
loop
xor
mov
imul
cs
sbb
pushf
mov
pop
add
int3
popa
mov
pop
mov
xchg
push
sbbl
movsb
dec
pop
jge
loope
sbb
and
adc
aam
inc
addb
push
ljmp
inc
scas
pop
pop
sti
ja
xor
iret
repnz
xor
xchg
stc
pop
cld
mov
fnsave
sbb
ss
movsb
std
icebp
push
push
lods
stos
pop
mov
fwait
ljmp
dec
xchg
movsl
stos
sbb
push
jle
jb
aam
arpl
enter
mov
js
sbb
lds
jnp
sub
cs
or
scas
test
adc
inc
addl
push
outsb
mov
nop
push
mov
leave
inc
sub
adc
imul
jmp
je
loope
in
pop
inc
fcmovnb
orps
inc
movb
in
fs
inc
push
dec
out
fdivrl
pop
inc
fadds
out
movsb
out
sbb
sbb
inc
pop
or
mov
dec
sbbb
cmpsb
stos
sbb
inc
outsl
jae
jge
dec
bound
addr16
cmp
or
dec
xchg
add
jge
int3
mov
shlb
sahf
mov
add
sahf
add
das
sahf
lcall
hlt
sub
inc
xchg
test
and
pop
jns
sbb
mov
mov
out
std
rcl
test
roll
int
adc
imul
add
ds
xchg
push
gs
aaa
jo
lods
jmp
dec
pop
dec
cmp
mov
movsb
pop
les
mov
addr16
dec
xchg
jmp
or
enter
gs
jnp
add
in
addb
pop
jle
loopne
sarb
mov
pushf
xlat
xchg
push
xchg
or
or
movsb
ds
decb
lret
push
cmc
cmp
sahf
pop
mov
mov
xor
sub
cmpsl
xor
loope
mov
arpl
cmp
lods
lds
adc
es
pop
lahf
leave
pusha
dec
pop
mov
das
mov
xchg
clc
sub
fisttpl
fdivs
addr16
call
rcrb
add
adc
scas
sbb
std
mov
fidivrl
or
cmp
das
in
inc
xor
xor
cmpsb
hlt
or
fwait
xor
pop
push
aad
mov
js
imul
push
lahf
and
sbb
inc
jno
pop
test
cmp
loop
icebp
int
test
mov
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
pop
or
