fcomp
add
rcr
add
fadds
add
add
xor
lea
cwtl
loope
movsl
lea
inc
mov
ret
pop
xchg
sbb
cld
ficoml
movsl
inc
push
repz
push
inc
pop
call
push
pop
sub
mov
cli
cmp
insl
mov
data16
test
loop
aas
mov
push
mov
mov
cmp
pusha
rorl
xchg
test
xor
ret
pop
leave
nop
sub
decl
jle
xor
sub
jno
dec
loope
mov
pop
inc
pop
movsl
lods
ret
or
sbbl
mov
into
mov
inc
fldcw
movsb
jne
pop
sbb
div
pusha
mov
add
fnstenv
addl
pop
dec
and
fists
out
adc
loop
fwait
mov
cld
or
and
inc
jo
icebp
sub
cli
mov
mov
out
divl
pop
xor
insl
scas
lret
mov
scas
scas
mov
cmpsb
xchg
cs
lret
pop
cmpl
push
repz
mov
test
mov
pop
test
cmp
inc
icebp
out
mov
out
sbb
ficomps
fnstenv
into
lret
inc
fsubr
and
lret
loope
repz
jnp
mov
cmp
pop
push
pop
out
pop
inc
loopne
jno
aas
dec
mov
and
icebp
push
mov
shrl
pusha
inc
dec
out
loop
xchg
jne
sti
inc
sub
pop
and
cmp
pop
nop
aaa
xor
cmc
mov
popa
dec
jno
mov
pop
rclb
and
adc
lret
dec
int3
add
aas
xor
fdivp
out
xchg
inc
inc
mov
mov
push
inc
stos
xchg
xor
jne
dec
jb
mov
mov
jle
rol
psllq
arpl
out
mov
mulb
jns
push
sbb
push
movb
jle
or
adcb
sbb
jge
jo
inc
fimuls
subb
mov
shl
push
jg
pop
xchg
movswl
insb
push
xorb
adc
rcr
mov
outsb
shll
or
push
das
push
inc
out
push
mov
cmpsl
aas
cmp
pop
xchg
mov
sbb
pop
pop
add
or
bnd
sub
je
or
cmpsb
lcall
push
push
addr16
movsb
cmp
and
or
jle
out
sbb
mov
pop
cs
icebp
out
gs
ja
popf
faddl
push
push
cmpsb
jl
pop
stos
mov
sbb
pop
out
or
dec
or
test
das
std
enter
dec
stos
mov
add
lods
mov
fstps
mov
pop
mov
mov
mov
sbb
popf
sbb
add
push
inc
adc
mov
decb
add
testb
and
pop
jg
shrl
mov
popf
shlb
les
pushl
shl
shlb
stos
or
jle
mov
xor
sub
int3
jb
test
fldcw
cmp
xor
fisubl
arpl
inc
push
adc
popf
inc
aaa
lcall
in
mov
push
sbb
test
cs
mov
sub
jg
cmp
hlt
pop
imul
cmp
sub
inc
xor
sub
daa
add
sub
cmp
xchg
loop
gs
dec
fcmovbe
jo
xchg
sub
mov
jmp
nop
movsl
and
inc
sbb
mov
stos
jb
in
xchg
xor
xor
inc
fisubs
sbb
push
add
dec
adc
test
dec
xchg
ds
and
mov
mov
xorb
mov
jnp
pop
push
mov
cld
sbb
mov
xor
dec
cmp
push
shr
sbb
and
fucomip
jo
addr16
dec
cmp
and
dec
ljmp
push
push
into
lcall
add
push
lods
jp
lahf
je
cmp
or
lcall
pop
cmpsl
mov
jmp
pop
mov
aam
out
mov
lock
imul
lea
lcall
imul
shr
push
aam
lods
sbb
push
fcoms
jb
outsb
fisubrl
ss
xor
inc
call
ja
aas
inc
sub
fsubrp
popf
popf
push
imul
push
jg
les
cmc
lods
int3
invd
jg
test
mov
int3
cs
add
push
adc
in
xchg
bound
imull
pop
scas
push
adc
push
aad
mov
movb
sbb
cmp
pop
jg
je
inc
shl
pop
pushf
jb
test
rcrb
clc
lds
pop
popa
mov
pop
imul
mov
add
in
hlt
dec
sbb
xlat
and
push
push
inc
or
cmpsb
adc
out
repnz
mov
or
int3
xchg
push
repz
call
sub
xchg
mov
jg
inc
adc
outsb
stc
ss
jo
fstp
int3
sub
push
pop
pop
inc
mov
dec
and
jg
inc
pop
ret
shll
repnz
insl
dec
outsl
fdivrs
push
sub
ficompl
jg
stos
xlat
into
xor
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
cli
inc
xchg
mov
jecxz
loopne
cld
jge
mov
mov
pop
or
sub
scas
xor
sbb
add
xorl
movsb
sbb
loopne
rcrl
or
dec
fisubs
add
adc
xchg
iret
sub
dec
dec
fbld
adc
pushf
cmp
sub
dec
sub
sub
jecxz
add
aam
or
push
or
xor
fldln2
sub
lds
pause
sbb
jno
sti
sub
cld
hlt
jnp
mov
fwait
jle
insb
and
xor
push
pop
sahf
or
fnstsw
dec
add
dec
ret
push
pop
mov
push
lcall
jl
nop
sahf
insb
xchg
fwait
inc
ret
rcl
jbe
call
dec
lock
pop
mov
aas
mov
call
rcr
dec
int3
stos
clc
insl
push
enter
mov
and
mov
lcall
xor
in
or
sub
or
divb
pusha
push
pop
xor
pusha
aaa
out
dec
mov
dec
dec
cs
sub
mov
sbb
add
mov
mov
xchg
aaa
in
cmpsb
inc
cmp
rolb
xor
mov
in
jne
fistps
daa
ret
sub
outsb
fwait
jbe
push
dec
movsb
mov
stos
fidivrl
in
andb
sub
or
out
daa
jl
les
dec
xchg
mov
lcall
jmp
xchg
jns
inc
mov
xor
pushfw
dec
cmpsb
dec
cmc
es
jb
push
repnz
xor
jmp
or
test
sbb
cmp
xchg
imul
mov
mov
movsb
dec
popa
jae
out
mov
xor
cmp
or
xor
fiadds
jno
lods
ret
lret
xor
pop
pop
out
xrelease
cmpsb
and
cld
cmp
in
mov
sub
and
ja
lock
jg
jecxz
popf
insb
sbb
pop
aad
jge
scas
sbb
add
sub
les
imul
dec
fyl2x
mov
inc
pop
call
pop
pop
push
adc
rolb
je
push
repz
and
jne
jne
test
add
adc
outsl
cmp
call
add
pop
leave
xchg
push
pop
and
mov
insl
mov
dec
jecxz
cmpb
rcll
mov
test
sub
fyl2xp1
aaa
mov
inc
dec
xor
sub
pop
push
sti
mov
clc
add
fbstp
test
sub
stc
lahf
aam
lret
mov
push
xchg
in
jmp
pop
repz
or
add
jp
cmp
dec
popa
arpl
insl
aam
pop
xor
std
mov
mov
sahf
fcoml
and
cltd
jb
test
bswap
jne
leave
sub
cmpl
das
lret
mov
push
mov
xchg
nop
xlat
mov
jno
sub
das
lahf
jge
pop
add
push
test
push
xchg
dec
push
and
pop
mov
mov
sub
arpl
xchg
pmullw
jp
cmp
mov
rcrb
clc
addb
cmpsl
imul
cli
sub
or
adc
in
fwait
insl
jo
test
lea
ds
lret
imul
out
push
sub
or
movb
in
scas
xchg
add
mov
jl
fimull
sub
mov
sub
mov
fidivs
xor
push
outsb
into
loopne
dec
je
cmp
mov
xor
clc
and
mov
or
mov
mov
movsb
push
std
insb
push
inc
push
in
cmp
sbb
and
fs
xchg
in
aam
cli
sub
mov
mov
add
cmp
hlt
fsubl
ja
sar
cmp
das
adc
outsl
dec
fiaddl
sub
mov
push
add
mov
mov
inc
sbb
adc
jo
sub
sbb
inc
fwait
and
inc
fbstp
nop
in
loope
int
mov
cmc
scas
inc
xchg
ds
pop
sbb
xchg
cmp
clc
push
test
jo
mov
adc
adc
test
pop
stc
pop
int
ret
daa
dec
xor
ret
mov
xchg
jo
push
and
sbb
sbb
sti
sti
outsl
iret
mov
jnp
adc
imul
addr16
mov
mov
imull
es
aad
cmc
lret
dec
inc
push
lret
mov
sub
in
mov
lahf
xor
ds
and
pop
mov
dec
in
mov
fldt
cmpsb
inc
or
stos
ja
push
or
push
xchg
in
nop
xchg
cmpsl
cmp
nop
mov
mov
xchg
cmc
mov
lods
cmp
pop
mov
scas
jecxz
jmp
jl
test
repnz
shrl
roll
jmp
out
or
data16
inc
adc
lcall
test
or
push
in
out
test
lods
pop
dec
cmp
jge
int
mov
lods
adc
pusha
xchg
lds
movl
jb
mov
arpl
inc
jnp
movsl
fdivrs
ret
xor
lret
std
dec
fsubrl
mov
js
ficoml
add
push
jb
dec
mov
inc
bound
mov
adc
mov
push
mov
rcrb
jnp
mov
xchg
jno
add
scas
jmp
mov
popf
arpl
xlat
popa
sub
push
dec
and
lock
fs
outsb
insb
fs
pop
mov
loop
aaa
orb
addl
sahf
pop
jno
jecxz
arpl
sbbl
fldl
iret
xlat
jns
popa
aas
lahf
dec
sbb
jecxz
pop
fdiv
jge
dec
rcrb
imul
test
xchg
or
fistps
imul
add
dec
sbb
cmp
or
loopne
xlat
lahf
mov
xchg
adc
lock
jl
inc
divl
fldcw
insl
orb
lret
jmp
push
or
inc
xor
xor
shrb
je
cmp
and
pop
mov
mov
adc
out
movsb
or
sub
xchg
test
fnsave
sub
fsubl
nop
fildl
shr
mov
pop
jbe
sbb
iret
mov
lahf
jecxz
arpl
mov
xchg
ja
mov
std
cmp
loop
jns
pop
add
nop
push
cld
or
shll
pop
dec
mov
out
push
xor
rcrb
je
popa
fiadds
pop
dec
cmp
scas
scas
test
dec
das
mov
call
xchg
push
addr16
cmpsl
xor
pop
scas
add
stc
and
push
adc
in
mov
push
mov
mov
nop
jle
pop
adc
aaa
fwait
pushf
add
mov
das
addr16
xor
repnz
cmp
jbe
sbb
push
popf
scas
sarb
clc
jg
lock
cli
test
ds
js
les
mov
pushf
shr
fistpl
push
je
pop
stc
fiaddl
pop
sub
mov
repz
fimuls
shl
cmpsb
sbb
lea
dec
int3
sbb
jmp
out
arpl
and
pop
lret
cmpb
mov
xchg
in
mov
decl
shrb
cmp
xor
dec
inc
mov
fwait
xchg
loop
xchg
dec
lea
xchg
push
xor
lret
movb
dec
inc
test
add
in
or
dec
mov
mov
jp
and
repnz
cmpsl
adc
xchg
and
or
sbb
cmp
mov
xor
out
sti
test
mov
loopne
adc
push
and
rorb
lock
lods
jnp,pn
xor
jecxz
jno
stos
cmp
sub
popa
cmpsl
cmp
fcmovu
pop
insb
inc
xor
insl
lret
inc
xor
mov
lea
arpl
mov
add
xchg
push
out
pop
aam
pop
movsl
mov
cwtl
jno
or
mov
cli
and
gs
jb
ljmp
mov
test
popa
xchg
cmp
xchg
push
xor
mov
cld
pop
cli
adc
xchg
xor
ret
rol
dec
cmc
jmp
fwait
lods
leave
jnp
iret
mov
cmpsb
loope
mov
push
cmp
rcrl
sbb
aad
mov
fcoml
daa
loope
or
mov
mov
add
sbbb
sub
sbb
cmpsl
dec
es
cmpsb
lds
jp
pop
das
inc
cmp
sub
jmp
mov
ja
pusha
in
orl
pusha
sbb
jge
pop
xor
ss
sbb
in
cmp
jl
outsl
lods
lcallw
sub
jp
sub
dec
and
imul
cltd
add
bts
out
mov
jno
inc
cmp
roll
xor
pop
sbb
icebp
lds
and
roll
sbb
xor
add
cltd
add
js
mov
js
cmpsl
dec
mov
cmpsb
es
xchg
loope
mov
ficoml
xor
mov
gs
std
sbb
mov
cmp
cmp
push
mov
imul
pusha
stos
out
test
data16
jae
push
cmpsb
test
fsubrl
dec
adc
inc
imul
jmp
xchg
inc
ss
ljmp
clc
loopne
movb
mov
aaa
sub
subb
lods
ljmp
pop
fldl
int3
mov
jecxz
jns
arpl
idiv
sahf
imul
jns
inc
jae
sub
aaa
pop
addr16
cli
or
xor
aam
jnp
sbb
repnz
int3
out
jns
and
in
pusha
mov
inc
sahf
jle
jb
mov
jnp
popa
or
mov
test
jmp
mov
lret
orb
out
jbe
dec
mov
es
adcb
jle
sbb
mov
ja
call
rorl
sbb
outsl
ds
sti
test
jns
inc
nop
data16
fnsave
mov
push
jo
xchg
insl
ja
jge
inc
mov
leave
or
push
adc
push
call
and
xor
jge
ja
rorb
in
fwait
clc
lea
cmc
in
push
jmp
loope
repz
push
ja
sub
cmc
pop
push
jno
xchg
pusha
xchg
out
mov
lahf
jb
jl
and
push
in
xchg
repz
adc
xor
mov
testl
push
mov
or
adc
fisubl
int3
mov
add
pusha
mov
or
lock
or
cmp
sbb
dec
jg
cmp
stc
xor
push
xor
dec
push
dec
or
push
mov
arpl
xor
call
push
in
fsubr
jae
test
add
jle
pop
test
push
add
rol
xlat
jno
push
fbld
aad
lea
frstor
cmpsl
iret
lds
add
sti
jle
cmpsl
rorl
jle
lcall
bnd
imulb
cmp
movsb
push
push
out
adc
loope
in
scas
sub
pop
lea
mov
pop
pop
sbb
push
gs
es
test
hlt
pop
mov
or
bnd
in
xchg
sbb
out
outsb
mov
add
or
scas
xchg
xchg
pop
movsb
xchg
rcrl
sbb
lods
push
rorb
cmpsl
xchg
pop
es
decb
iret
cmc
jns
notb
lea
xchg
cli
hlt
mov
mov
sbb
mov
pop
xchg
sarl
call
mov
jne
outsb
scas
xchg
mov
test
pushf
mov
aaa
sbb
adc
dec
lret
addr16
testl
lahf
pop
out
mov
xor
movsb
ds
or
adc
sar
ljmp
cmpb
addb
insl
inc
or
xchg
mov
lcall
xchg
in
add
fs
mov
xchg
imul
or
mov
cmpsb
idivb
movsl
mov
jo
mov
pop
pop
adc
cmp
mov
xor
cmp
stos
pusha
and
mov
outsb
mov
jge
fbld
mov
mov
fmull
int3
scas
loop
mov
sbb
mov
pop
cmpsb
push
and
mov
loop
sbb
mov
cmp
xorb
imulb
out
leave
ds
xor
pop
push
popa
sub
push
fmull
cmpsb
sbb
mov
pop
movsb
add
push
sub
jo
inc
xor
mov
and
push
jnp
imul
test
mov
jo
push
fidivrl
mov
jl
int3
pop
fidivrs
and
test
lods
lods
or
repnz
pop
data16
mov
mov
sbb
xchg
and
mov
jns
cmpsl
pop
lahf
lret
lock
pop
loopne
mov
int3
jae
cli
jo
cmp
cmp
pop
aam
xor
scas
in
pop
orl
jmp
adc
push
rcrb
mov
dec
js
xor
mov
push
lds
mov
add
lret
jmp
int3
cmp
fistps
mov
pop
xchg
push
lds
mov
sub
test
mov
mov
lret
adcb
cli
pushf
pop
fnstsw
sbb
dec
cmp
into
or
popl
les
xchg
xor
out
loopne
lcall
adc
xchg
inc
jecxz
rorb
test
push
sub
shlb
jno
cmp
jnp
push
outsl
push
insl
popa
lcall
imul
jns
pop
les
les
aam
stos
or
inc
ss
dec
cmp
jns
xor
aad
sbb
jmp
cs
in
fdivs
inc
ss
cmpsb
dec
mov
decb
pop
add
adc
mov
add
cmpsb
xor
call
lods
leave
push
lret
cwtl
mov
jo
inc
dec
fprem1
push
in
sbb
pop
ss
in
mov
fnstcw
ficoms
test
bound
xchg
ds
add
sarl
and
or
jb
das
mov
cmp
sub
in
popf
pop
pop
fcomp
cmp
fiadds
xchg
pushf
popa
out
xor
fadds
adc
jl
dec
dec
jb
dec
xchg
mov
jmp
icebp
cmc
mov
imul
cmp
mov
jne
xor
xchg
ljmp
std
pusha
jmp
dec
test
mov
out
cmp
ljmp
cmc
and
xchg
pop
in
pop
add
adc
jns
and
pop
jb
and
ret
dec
insb
or
pop
into
mov
cwtl
fnsave
push
cltd
pop
and
movsl
sbb
test
testl
pop
jnp
push
dec
in
int
push
je
bound
in
or
pop
pop
fsincos
sbb
out
lods
jo
mov
dec
sub
fbstp
cmovns
stos
cmp
sbb
movsl
loopne
push
or
fsubl
xor
pop
test
insl
mov
lea
loopne
xchg
pop
xor
dec
push
push
push
mov
xchg
pushf
sub
pop
add
jl
add
inc
dec
and
xor
mov
mov
dec
insb
push
xor
jb
loopne
mov
xchg
popl
scas
stos
mov
shll
adc
pushf
stos
sub
xchg
dec
xchg
mov
imul
mov
cmp
and
out
sbb
adc
sti
jl
jne
pop
mov
ja
out
fldl
cmp
pop
aas
mov
xor
lretw
and
not
imul
and
scas
int
addl
dec
adc
popa
subb
lret
call
push
test
adc
pop
inc
xchg
lock
icebp
loop
mov
mov
rcr
ret
mov
mov
xchg
daa
icebp
jb
stc
imul
or
push
push
adc
mov
scas
xor
xor
fstps
imul
lret
call
andl
dec
popa
dec
pop
call
push
pop
rorb
sarl
jle
mov
add
xor
adcl
lock
push
pusha
test
push
mov
lret
inc
xorl
mov
in
into
fwait
lcall
imul
and
fcoms
vmaxss
add
stos
xchg
imul
pop
lret
adc
rclb
push
stc
pop
mov
xor
push
add
icebp
pop
mov
ret
mov
cmp
arpl
jmp
in
push
xchg
push
roll
andb
pop
addr16
int3
jb
push
hlt
out
jae
push
pop
mov
loopne
mull
adc
dec
js
in
pop
subb
fnop
int3
ja
lods
dec
das
mov
mov
fisubs
add
mov
cmp
jmp
jbe
jmp
adc
jmp
push
dec
aas
lock
xor
cwtl
mov
inc
mov
and
into
dec
decl
movl
inc
aam
add
decl
adc
and
outsl
testb
icebp
adcl
call
lahf
int
dec
cs
push
cwtl
lock
pop
pop
or
test
mov
xor
mov
popf
dec
dec
mov
movsb
lods
leave
xchg
fistps
cmc
aad
aas
jno
sarb
lcall
scas
mov
cmp
stos
jg
loope
sbb
mov
and
jb
add
mov
add
sbb
adc
fs
mov
lret
inc
sub
xorb
stc
and
jno
pop
inc
int
cmp
ror
gs
and
sahf
mov
fwait
in
lods
ja
jns
ja
sbb
sub
mov
cmp
add
stc
xor
xchg
cmpsb
sahf
imul
mov
mov
idivl
aad
xchg
jecxz
pop
xor
lock
dec
add
and
jle
xor
mov
mov
adc
popf
addr16
in
sahf
nop
cmc
int3
bnd
ror
inc
push
in
jae
popf
jecxz
cmp
fdivl
repnz
imull
outsb
push
call
push
push
mov
xchg
and
adc
add
loop
mov
pop
ljmp
or
or
cmp
repz
adc
cmp
cmp
mov
adc
mov
mov
outsl
inc
out
aad
add
arpl
in
mov
push
jmp
clc
out
into
cltd
mov
ffreep
fnstsw
bound
adc
pop
inc
fisubl
scas
addr16
sahf
ret
orb
ja
lret
and
mov
adc
inc
in
fisubrl
push
sbb
jge
adc
cs
js
in
pop
mov
cli
jg
fnstsw
add
xchg
enter
jnp
push
xor
xor
pop
xlat
lret
inc
xor
inc
and
sbbl
dec
hlt
inc
inc
imul
inc
sbb
push
cmp
jno
push
adc
dec
adc
xchg
subb
mov
bnd
mov
pop
imul
and
lea
cli
idivb
test
adc
cmpsb
sbb
xchg
jge
lds
test
in
std
dec
inc
rcll
pushf
leave
bound
out
cld
push
mov
xchg
pop
in
push
xchg
adc
xor
or
cmpsl
pop
in
mov
mov
jg
js
test
and
test
mov
mov
js
dec
cmc
fldt
ficoml
mov
daa
cld
sbb
mov
add
adcb
and
pop
sbb
jae
in
ja
test
xchg
iret
push
mov
mov
mov
hlt
xchg
cmpsb
int
mov
pop
and
int
sbb
subb
dec
mov
adc
add
push
out
out
xchg
decb
xor
push
ljmp
movsl
jmp
cmp
push
dec
insb
iret
sbb
mov
mov
push
sbb
ss
mov
leave
aaa
and
mov
idivl
xor
test
fisttps
cmp
jne
add
xchg
stos
mov
adc
sbb
cmp
movl
dec
daa
or
mov
dec
cmpsb
jl
int
dec
arpl
push
mov
pop
dec
fs
int
add
and
push
jmp
clc
loopne
adc
dec
xchg
shl
sub
xchg
pop
insl
jg
lcall
punpckhwd
dec
in
imul
lds
adc
loope
rclb
movsb
xor
xchg
or
mov
in
xchg
mov
ds
xchg
insb
jg
add
loope
pop
push
xor
std
cmc
xchg
ret
push
push
mov
std
inc
inc
and
cmp
lahf
rorb
add
test
popf
pop
jns
cmpsb
lods
mov
mov
xchg
lret
xchg
pushl
cmp
mov
test
inc
and
push
mov
hlt
stos
add
jae
adc
dec
and
adc
lcall
inc
iret
insb
sub
jg
pop
inc
sbb
jl
fldcw
jmp
dec
mov
punpckhbw
pop
or
orl
inc
xchg
jl
mov
push
aad
into
pop
mov
xor
ror
fwait
xchg
aaa
lret
faddp
or
testl
fxch
inc
icebp
not
cmp
mov
sub
cmp
call
jge
dec
xchg
push
jne
mov
push
jmp
pop
mov
jle
in
movsb
adc
fistpl
push
mov
adc
push
mov
pop
pop
stos
sbb
loop
hlt
mov
loop
dec
lret
fimull
add
mov
add
hlt
inc
adc
dec
repz
dec
jecxz
mov
outsb
cmpl
outsb
out
sub
hlt
inc
xlat
lret
push
sbbb
ret
shl
and
fmul
mov
sbb
sbb
inc
push
or
lea
shrl
aad
shr
jbe
fisubrl
fsubrl
push
add
mov
xchg
rolb
hlt
fisubs
push
notl
mov
orl
addl
jle
sub
sti
mov
or
fnsave
inc
pop
cmp
mov
jo
jne
mov
lds
repnz
mov
call
push
pop
or
fisubrl
movsb
arpl
pop
in
push
adc
lret
lods
ds
out
mov
inc
xchg
xor
push
es
push
and
int3
xchg
and
xchg
inc
mov
int
dec
lods
xchg
cltd
int3
push
pop
xlat
sub
cmpsb
xchg
dec
mov
pop
mov
hlt
jmp
or
int3
dec
or
enter
xchg
mov
fucomp
adc
mov
pop
mov
jno
scas
xchg
xchg
scas
adc
dec
or
jne
pop
icebp
ret
jmp
jns
mov
sub
shll
pop
iret
test
pushl
sub
pushf
ret
fistps
jl
adc
mov
pop
jecxz
out
xor
xlat
sub
cs
pop
aaa
out
inc
jecxz
test
clc
test
mov
add
test
mov
push
out
stos
dec
xor
test
incb
mov
add
push
pop
jnp
pushf
pop
repnz
aaa
sub
add
sub
mov
test
stos
rcll
fnsave
and
in
inc
xor
cmp
hlt
cli
ret
sbb
cmc
js
es
add
test
jbe
inc
inc
xchg
clc
mov
push
inc
es
shlb
push
repz
mov
sub
or
icebp
clc
lods
mov
addr16
push
pop
imul
adc
leave
stos
in
fimuls
xchg
xchg
sti
xlat
mov
cs
mov
call
enter
loop
and
add
jae
mov
add
stc
test
popf
inc
push
jae
add
mov
inc
cmp
jnp
sarb
lods
jle
and
aaa
sub
cmp
push
data16
add
ja
in
jns
or
imul
movsl
sub
jb
sub
jmp
mov
js
inc
dec
jmp
lods
ret
in
ds
mov
fnstcw
cmpsb
loop
into
enter
cmc
bound
adc
movsb
loopne
arpl
cmp
or
das
inc
jmp
cs
gs
mov
out
lods
cmp
mov
push
xor
insl
mov
inc
imul
ret
xchg
cld
jge
sub
cli
lds
idivl
fwait
cmpb
push
nop
icebp
scas
add
ljmp
faddl
les
scas
divb
jg
jp
sbb
iret
cmp
imul
push
mov
loop
sbb
cmpsl
mov
lret
push
sbbb
cmp
push
adc
dec
push
inc
add
jecxz
push
pop
aaa
daa
lods
push
mov
push
bound
inc
xor
lahf
cmp
loopne
movd
jbe
jnp
mov
push
push
jg
ret
xorb
pop
push
cld
int
mov
sti
lock
and
mov
push
enter
or
test
pop
stos
add
cmpl
pop
pop
lods
sti
inc
inc
xchg
sub
jp
pop
addl
xor
adc
lret
pop
ds
dec
or
test
loop
mov
loope
imul
test
mov
dec
xchg
clc
lret
or
fnsave
call
sub
popf
mov
dec
jb
fwait
and
jl
sub
stos
les
repnz
ja
sbb
imul
pop
fs
lods
mov
ret
push
or
lahf
xor
repz
loope
xchg
gs
lock
pop
push
mov
dec
in
in
xorl
lea
mov
leave
pop
test
mov
pop
dec
mov
push
lods
cld
xor
dec
mov
dec
test
jns
mov
mov
leave
or
mov
insb
mov
test
outsb
mov
out
xchg
jge
jge
mov
add
jnp
cmp
xor
inc
sbb
outsb
and
dec
stc
mov
adc
je
insb
aaa
pop
cmp
xlat
popf
mov
xor
mov
pop
sub
lock
push
lock
xchg
test
shl
movsb
mov
sbb
jnp
ret
loopne
mov
test
push
enter
pop
push
popa
mov
repz
hlt
push
loope
cld
xor
cmp
out
test
cwtl
dec
push
lcall
outsl
pusha
daa
xchg
adc
rorl
dec
cld
xchg
mov
mov
jecxz
and
test
fisttpll
sub
es
add
push
nop
data16
out
add
jmp
push
rorb
cmpsl
xor
cmpsb
mov
lock
xchg
or
lret
push
imul
arpl
ss
pop
xchg
xchg
imull
pop
daa
xchg
dec
mov
leave
lret
push
std
iret
sub
cmpsl
xchg
mov
pop
int
adc
bound
movsl
fdivrl
int
cli
xorb
sbb
inc
jmp
je
pop
push
jnp
pusha
inc
adc
mov
jo
dec
loop
jg
xor
icebp
dec
xchg
or
jnp
hlt
call
pop
shr
aad
mov
iret
roll
mov
adc
mov
cmpsl
ja
mov
pop
mov
xchg
daa
addb
jno
mov
pusha
and
sbb
inc
sbbl
adc
sets
mov
mov
pop
push
sbb
arpl
bound
imul
fucomp
fiaddl
clc
push
stc
fidivrl
and
cmp
imul
push
sbb
aam
ret
fldt
int
out
jae
jae
hlt
lock
das
into
loop
pop
pop
repz
pop
or
push
and
xchg
xchg
adc
cmpl
mul
sti
mov
push
fmul
test
adc
and
mov
adc
adc
pop
cltd
fs
ret
pop
or
inc
incl
ss
jno
ss
int
andl
and
roll
jne
push
push
inc
add
idiv
mov
adc
movsl
dec
pop
fisubrl
sbb
loope
mov
sarb
call
mov
ljmp
mov
test
inc
mov
data16
xor
cmpsb
ret
dec
dec
dec
das
and
test
xor
cmpsl
mov
ret
out
jl
imul
sub
pusha
out
stos
sbb
sub
ds
loopne
imul
mov
fs
lods
xchg
scas
js
sti
sbb
push
mov
ret
pop
adc
mov
cmpsl
les
out
aas
xchg
sub
jne
pop
jbe
movsb
cmc
jnp
lea
xor
mov
or
mov
lock
mov
push
add
and
and
mov
pop
mov
sbb
call
test
jp
loopne
fisttps
and
xor
adc
inc
add
sarb
call
jecxz
jo
jmp
inc
dec
stc
push
addl
arpl
popf
cmp
sti
sub
dec
push
mov
ss
les
lret
mov
imul
daa
sbb
es
rcll
sub
es
rcrb
push
in
cmp
pop
mov
add
inc
das
push
clc
fsts
out
gs
dec
pop
push
push
cmp
das
sahf
addr16
sub
out
and
mov
sbbl
adc
sbb
out
add
lds
pusha
ljmp
les
sbb
fists
adc
lds
pop
cmp
int
dec
cltd
lahf
mov
into
fsubr
add
mov
and
or
push
in
mov
jecxz
test
add
lahf
cmp
and
addb
xor
inc
rorb
repz
cld
lcall
es
ror
or
cmp
xchg
test
and
imul
adc
xchg
push
les
sbb
push
lds
mov
lcall
push
call
shrl
and
enter
dec
cmpsb
out
movsb
push
mov
cmc
pop
jp
es
shll
sbb
lods
mov
test
inc
out
push
jge
ss
jmp
imulb
cmp
mov
jnp
testl
pop
scas
sub
push
outsl
mov
movsl
inc
gs
add
lds
lds
mov
dec
ds
insb
stc
pop
lahf
jecxz
loopne
mov
loopne
sbb
mov
xchg
in
cmp
mov
xchg
xchg
lods
jmp
fldl
je
emms
in
mov
cld
mov
pop
mov
xlat
pop
ja
inc
outsb
jmp
imul
dec
xchg
int
insb
sbb
push
jne
mov
test
mov
dec
stc
jge
jp
lods
xchg
push
movsl
outsb
das
sbb
xor
sub
loop
sti
clc
xchg
sub
imul
cmp
lods
jmp
nop
mov
cli
or
sti
nop
add
sub
int
add
dec
lods
jb
shll
es
jns
ljmp
push
adc
and
cli
mov
cwtl
jns
lods
fisubrs
adcb
mov
mov
in
xchg
test
and
pop
inc
sbb
xor
sarl
jnp
mov
and
inc
push
cmc
cld
pop
xchg
and
les
outsl
ljmp
arpl
ljmp
cmp
repz
adc
sub
loopne
aas
scas
sahf
cmpsb
mov
adc
out
test
lea
cld
and
ss
call
sbb
xchg
and
dec
out
jp
rorl
scas
icebp
arpl
dec
add
fidivrs
sbbb
pop
lods
and
pop
sti
insl
mov
repz
addr16
aam
cmp
pop
outsl
mov
das
xchg
lock
out
mov
popa
test
push
jecxz
out
data16
sbb
push
add
mov
test
lret
leave
mov
inc
mov
push
dec
or
push
xor
push
fstl
pusha
jg
mov
movsb
out
cmp
mov
js
adc
inc
mov
repz
mov
mov
mov
dec
jecxz
in
mov
mov
gs
loopne
add
movsl
cmp
adc
mov
jmp
loop
jno
gs
xchg
pop
adc
mulb
std
and
das
dec
enter
frstor
aaa
mov
add
out
andl
pop
pop
sbb
pushf
push
dec
pop
ret
jae
and
jnp
inc
sub
insl
pushf
pop
cmp
movb
mov
xor
push
in
push
inc
loope
cmpsl
fstpl
and
xchg
xor
ja
pushf
mov
in
jae
and
mov
cs
rcrl
jnp
inc
scas
push
add
jecxz
jno
inc
push
pop
pop
dec
loop
ud1
fcomp
jnp
in
pop
pop
lods
outsl
loopne
xchg
scas
aam
imul
mov
test
ljmp
outsl
mov
fmul
xor
fistpl
repnz
dec
icebp
popa
xor
popf
ja
push
ljmp
outsb
xor
jmp
or
pop
pushf
outsb
test
inc
bound
xchg
xlat
test
add
push
add
or
cmpl
pusha
xor
test
out
xor
fnstenv
loope
lret
sahf
mov
mov
clc
les
jl
test
aas
xorb
stos
xchg
jge
sub
stos
pusha
and
lods
fwait
mov
iret
popf
cltd
aaa
outsl
movsl
dec
ss
adc
or
mov
adc
sub
push
mov
arpl
in
shlb
test
cmp
cmp
push
or
mov
fldenv
pop
aad
dec
mov
jns
push
mov
xor
inc
sub
mov
mov
hlt
pop
ret
lcall
pop
sbb
orb
add
pop
lret
pop
aaa
outsb
pop
or
pop
mov
xor
loop
add
in
fimuls
or
xlat
dec
scas
scas
pushl
add
pminub
lret
fwait
dec
in
aas
inc
mov
into
mulb
sbb
movsb
adc
mov
lret
dec
mov
repnz
xchg
adc
cmp
jle
data16
xchg
or
mov
mull
jbe
imul
mov
sub
addr16
mov
fwait
sbb
test
mov
lret
and
xchg
and
add
inc
xor
lahf
cmp
lret
subb
daa
repz
cmp
sbb
out
mov
iret
rol
sub
sbb
das
or
pop
aam
cmp
fistpl
arpl
clc
rorl
adc
or
jns
mov
inc
fptan
out
mov
cmpsb
das
test
dec
mov
xor
or
xchg
mov
insl
negl
fsubrp
sub
std
or
xor
aad
loope
das
sub
movsb
jmp
xchg
cld
push
iret
xchg
and
pop
add
xchg
jecxz
push
mov
adc
sbb
mov
sub
add
into
xlat
mov
mov
mov
add
xor
leave
sbb
cs
test
call
out
or
pop
mov
mov
inc
fwait
sub
scas
popa
or
out
push
xchg
lds
inc
cwtl
fwait
inc
mov
sbb
and
nop
movsb
mov
xor
jecxz
outsl
movsl
xchg
adc
xchg
cmp
ficoml
in
jge
xchg
mov
dec
push
jns
out
pop
cmp
xchg
les
out
subl
push
jg
push
jp
push
int3
xchg
je
push
mov
dec
nop
push
and
scas
jb
push
inc
das
mov
sub
or
add
ljmp
xchg
jno
les
or
cwtd
ljmp
mov
or
sbb
inc
pop
mov
mov
stos
hlt
lea
loopne
in
lahf
sahf
insl
inc
push
cmpsl
rcll
push
in
and
insb
lcall
mov
into
in
xchg
lock
cmpsb
xor
ljmp
arpl
xchg
aas
xor
dec
xor
mov
add
cmp
cmp
jge
mov
imul
repz
outsb
cmovg
mov
add
mov
cld
and
sub
cli
cmpsl
add
jns
stos
fisttps
sbb
pop
and
sbb
push
pushf
sub
dec
mov
sbb
jb
or
scas
jp
adc
ret
cmpsl
inc
movsb
inc
xchg
lea
xchg
xor
dec
outsl
or
loope
jno
pop
mov
pop
push
pop
mov
mov
xor
sub
inc
mov
jns
lret
sub
popa
dec
stos
mov
push
mov
loop
int3
pop
lea
push
test
fnstsw
push
lret
mov
adc
rcrl
ljmp
jecxz
and
add
sbb
pop
insl
sbb
sbb
dec
mov
inc
push
mov
mov
cmp
add
dec
jecxz
shll
adc
or
fs
pop
xchg
jl
negb
mov
aaa
das
cmovle
or
into
mov
mov
push
shll
push
xchg
repz
xchg
imul
enter
mull
mov
fptan
sbb
mov
pop
fistpl
jp
ret
xchg
add
jmp
lret
test
cmp
push
stos
mov
add
aam
mov
das
dec
repnz
cmp
cli
xor
push
mov
mov
sub
lret
stc
xchg
dec
lret
test
mov
int
je
jl
mov
sub
loope
call
xor
faddp
stos
lret
in
mov
stc
shlb
insl
clc
addr16
mov
cmp
call
sbb
push
lret
pop
and
and
mov
inc
into
call
xchg
mov
push
inc
addr16
inc
je
dec
movsb
lahf
push
mov
sub
adc
iret
xor
inc
imul
add
pop
loopne
or
mov
les
sub
pop
push
sbb
inc
mov
pop
shl
test
aas
es
mov
mov
mov
in
xchg
jge
inc
push
out
add
push
js
xorb
movsl
pop
pop
mov
testl
jo
out
adc
out
xchg
jae
cmp
outsl
lcall
ret
dec
jbe
cbtw
adc
sub
aam
push
std
mov
lahf
gs
mov
mov
or
clc
movl
in
call
push
mov
ret
cld
clc
nop
fstpl
xlat
out
mov
or
pop
mov
xor
xchg
lods
dec
arpl
pop
cwtl
add
mov
jmp
push
sub
inc
mov
and
dec
mov
loop
movsb
pop
xor
jne
sysret
int3
xchg
rcrb
ret
mov
adc
and
rcrb
loope
cmp
pop
cltd
ljmp
pop
mov
ja
pop
mov
mov
sub
and
add
xor
and
add
sti
cltd
add
aad
xor
sub
pop
lret
mov
cmp
in
lock
dec
rolb
mov
mov
stos
icebp
or
pop
xor
leave
and
shlb
jnp
out
add
cs
pop
jae
fcoms
dec
and
mov
gs
icebp
push
push
push
cmp
icebp
ret
ror
mov
xchg
addl
arpl
in
dec
stos
jns
jno
push
push
test
aam
mov
scas
int
lock
cmpsb
push
inc
push
in
mov
mov
cltd
adc
xchg
mov
fs
lea
cmpsl
fdivrl
push
bnd
addl
xor
dec
in
in
add
jp
mov
or
mov
cmp
jmp
push
test
fisubrs
jmp
pushf
aad
dec
push
das
pop
mov
push
lods
sub
inc
xchg
push
ss
or
ss
mov
pop
insb
std
push
jo
sbb
add
ds
inc
imul
outsl
call
std
jb
cmp
sahf
hlt
xor
inc
es
dec
mov
dec
and
jle
sbbl
xor
fwait
out
inc
js
pop
add
jno
in
xchg
aad
jmp
add
fwait
dec
and
ret
stos
lahf
clc
mov
xor
inc
dec
xchg
jo
mov
clc
mov
cli
inc
xchg
rcrl
pop
or
push
xchg
ficoml
adc
in
xorb
mov
lods
jp
and
sub
add
or
dec
push
jae
fisubs
or
and
and
sarb
push
in
lret
imul
lea
inc
in
mov
cmc
inc
aam
dec
fwait
mov
cltd
pop
cmpsb
int3
push
les
jae
push
add
adc
cli
call
sti
cmp
inc
adc
cmp
sub
push
xchg
loop
jmp
iret
inc
inc
fcmovnb
jnp
repnz
orb
sbb
dec
dec
or
jns
mov
pushf
ja
mov
jmp
call
xchg
lea
lahf
or
repnz
adc
fisttps
jp
sbb
push
daa
jb
out
sbb
mov
insl
add
and
mov
xorb
jno
jg
in
mov
sub
jne
enter
inc
imul
jns
inc
ljmp
iret
ds
inc
adc
add
mov
fsub
jmp
xchg
cvtps2pd
sarl
clc
icebp
repz
mov
test
inc
cmpl
xchg
cmp
imul
sub
jo
sub
dec
dec
xchg
inc
jmp
inc
mov
and
mov
dec
ret
aaa
popf
mov
xchg
mov
jno
xchg
ss
test
push
mov
fadds
int
pop
fildll
lea
loopne
outsb
shll
jg
fldt
call
push
mov
sahf
adcb
in
incb
jo
test
xor
mov
add
sub
push
inc
jge
jg
mov
mov
sub
adc
cmp
push
daa
into
test
movsb
scas
jecxz
ret
cld
jl
xor
sub
mov
aad
cmc
mov
data16
fnsave
cmp
push
in
clc
insb
xchg
movsb
mov
jl
movsl
popf
lock
mov
and
push
mov
pop
aad
nop
outsl
stos
lret
xor
sub
imul
cmp
jb
pop
std
jmp
sub
jo
cmp
fs
jp
das
mov
inc
mov
dec
mov
ja
rclb
jl
fildll
and
add
xchg
lret
mov
inc
jae
sbb
adc
mov
add
inc
xor
out
in
push
jle
das
jmp
xor
xlat
and
fldt
jne
bts
icebp
andl
sub
in
icebp
les
mov
incb
or
addl
cltd
test
ficomps
mov
mov
out
test
ficomps
popa
iret
add
adc
mov
pop
jae
enter
push
xor
arpl
or
push
repz
xchg
std
jp
mov
add
popf
mov
sbb
dec
pop
jo
sub
jno
mov
clc
lea
cmpsb
cmp
cltd
dec
push
leave
push
test
jno
popf
stos
dec
test
sub
jmp
mov
sarl
in
cmp
in
das
mov
idivb
lcall
pop
bound
fstpl
hlt
and
inc
int3
aaa
loope
outsl
xchg
test
jge
sub
imul
subl
add
fs
push
mov
enter
in
sub
dec
es
lcall
sub
addb
pushf
add
and
testl
dec
loope,pt
leave
mov
add
jg
ret
jo
rol
repz
inc
ficoml
lea
iret
jbe
jo
inc
scas
dec
daa
cmp
jns
sbb
pop
dec
popf
imul
cmp
xorb
imul
xchg
rorl
add
sub
and
stc
add
cmp
mov
daa
fstpl
leave
cmp
cmp
cmp
pop
js
sbb
cld
arpl
xchg
xor
inc
sbb
xor
and
out
pop
pop
fbld
cmp
rclb
loopne
cmpsb
mov
sbb
cld
lods
push
push
lahf
iret
sbb
scas
mov
mov
aas
pusha
inc
push
ss
pop
popa
dec
mov
mov
pushf
clc
pop
leave
or
arpl
ds
cli
sub
ja
push
pop
mov
push
or
inc
mov
inc
xor
sbb
adc
lea
sbb
aad
scas
and
push
rolb
test
lahf
cmp
popf
dec
xor
mov
sub
into
pushf
jb
rcll
add
and
dec
sub
aam
cmp
lahf
push
xor
push
arpl
add
jl
jno
ss
xorb
or
adc
xor
xchg
pop
scas
mov
sti
fdecstp
and
xor
imul
outsl
mov
outsl
je
mov
jl
xor
mov
cwtl
das
pop
inc
add
cmp
ret
clc
jno
es
mov
movsb
test
lods
mov
iret
mov
xchg
inc
xchg
xchg
lret
aam
arpl
inc
stc
adc
jl
mov
mov
int3
addr16
and
shlb
xor
fistl
xor
dec
mov
ror
add
pop
push
fsubs
pop
sbb
inc
mov
rolb
add
or
mov
cmp
adc
sti
jae
decl
idivb
xor
jno
mov
lods
jg
or
push
pop
inc
sbb
jns
testb
pusha
pop
orps
cltd
movq
outsb
fsubl
or
or
aaa
js
clc
icebp
ss
loopne
xchg
xor
sbb
and
aas
xchg
adc
adc
inc
dec
std
mov
scas
aam
or
dec
dec
mov
and
xor
lret
rol
and
cmp
dec
sbb
dec
lods
mov
aam
loope
jmp
and
xchg
cmp
cmp
mov
jno
cmp
adc
or
in
adc
rcr
pop
sti
mov
xchg
lods
push
xor
add
test
out
or
pop
and
ss
sub
cli
incb
in
aas
mov
out
leave
inc
xchg
mov
pushf
mov
push
pushl
and
cmc
in
movsb
xchg
shlb
out
mov
xchg
int3
notl
out
setge
jl
dec
div
inc
lods
mov
dec
lods
pop
into
daa
popa
cmp
pop
or
inc
xchg
stos
and
test
aam
out
ss
inc
or
jecxz
xor
push
je
int3
mov
pushf
add
loope
movsb
dec
xchg
xor
push
imul
fmuls
add
ljmp
and
inc
jmp
adc
cltd
jno
pop
adc
pop
xor
pop
add
mov
push
adc
loopne
iret
mov
fnstenv
mov
dec
inc
fcom
mov
inc
xchg
cvtdq2ps
imul
xor
push
mov
ret
and
jl
jmp
xor
outsb
out
adc
pop
ds
pop
fdivs
mov
xchg
sub
and
jle
add
or
call
inc
cmp
push
stos
xor
dec
iret
mov
mov
rol
ja
cmpsb
pmaxub
jle
icebp
gs
repz
ja
push
insl
lret
aam
mov
jmp
fnstcw
xchg
mov
in
xchg
sbb
xchg
pop
es
or
mov
mov
add
in
jne
add
xchg
pop
pop
imul
xchg
and
push
xchg
arpl
add
bound
push
xlat
adc
cmpsb
inc
jl
aas
mov
addb
mov
cld
imul
nop
jb
xchg
sbbl
mov
cli
mov
outsl
leave
loop
out
addr16
jle
fldt
aas
jo
sti
inc
test
adc
jns
repnz
in
movsb
fwait
sbb
fdivp
les
std
add
lcall
divl
fisubl
jle
xchg
push
pushf
test
insl
test
add
push
push
push
pop
sub
mov
out
or
xchg
sub
push
into
dec
add
xchg
push
sbb
mov
jo
mov
ds
and
mov
push
xchg
xchg
in
pop
mov
cmc
inc
decl
cmp
mov
and
fiaddl
sbb
jecxz
jno
cmp
cmp
pop
sbb
sbb
mov
les
mov
lods
push
fsubp
or
daa
das
cmp
not
jno
sbb
enter
xchg
xor
lock
dec
cli
sub
in
dec
mov
es
fstps
stc
adcb
xchg
push
aad
inc
dec
popa
aas
xchg
lret
dec
faddl
ret
mulb
inc
and
jmp
sub
mov
test
popa
push
mov
adcl
mov
pop
call
int
xor
lock
and
sub
pop
pop
dec
jno
arpl
call
fsub
jae
ja
sbb
xorl
data16
fwait
loopne
xor
loopne
and
leave
or
arpl
sbb
inc
outsl
xchg
ljmp
xor
xor
clc
cmp
data16
jno
sbb
pop
mov
and
ret
int3
repz
inc
push
inc
xchg
push
ret
add
loop
stos
sub
adc
ss
js
es
pop
test
or
scas
xor
and
add
jns
push
inc
out
inc
mov
lret
fmul
xchg
or
ja
mov
dec
dec
pop
iret
fistl
insl
ja
divl
pop
lods
fimuls
iret
lods
cmp
es
outsb
ret
xor
iret
pop
cmpb
fwait
mov
scas
dec
fisubrl
add
imul
lds
lock
cmc
fwait
stc
push
dec
test
adc
xor
sub
mov
outsl
insl
dec
mov
jb
xchg
xor
in
sub
xorl
jge
sub
dec
lds
jb
int3
or
je
pop
jns
xchg
xchg
loopne
fld
push
outsl
sbb
out
cli
mov
jns
and
movsb
ss
lahf
decb
scas
mov
in
pushf
lahf
loope
push
pop
test
sub
xchg
xchg
imul
cmp
mov
cmp
or
std
or
ror
loopne
ret
jle
dec
adc
out
sub
rorl
filds
lock
sti
cmp
or
sbb
clc
bound
stos
jecxz
jge
divl
aad
mov
andb
dec
out
repnz
push
jo
jbe
xor
sbb
shlb
je
add
push
cwtl
roll
pop
fisubrs
adc
popa
xchg
imul
incb
sti
bound
out
outsl
ret
xchg
xorb
lret
movsl
cmpsl
dec
cmp
fwait
push
js
arpl
push
ret
add
repz
aaa
cmp
stc
outsl
push
dec
lahf
push
xchg
mov
xor
fldt
loopne
sub
cmpsl
aam
jae
cmpsl
in
or
iret
and
arpl
add
popf
lret
mov
xor
idivl
xor
sbb
aas
mov
jp
out
loopne
pop
jge
outsl
daa
jge
mov
inc
pop
jnp
ficomps
sbb
xor
rcrl
hlt
xor
xchg
notl
imul
cmpl
sti
xor
sbb
fwait
stos
dec
adc
lods
jb
mov
loope
das
out
iret
add
cli
or
adc
push
es
cli
add
inc
push
jae
or
je
mov
adc
xchg
pop
inc
push
mov
xchg
lods
testb
dec
or
mov
sti
xchg
shl
adc
xlat
popf
imul
jge
leave
push
xlat
mov
imul
data16
cmpsl
add
scas
hlt
xchg
rcrb
pop
hlt
js
jp
xlat
lea
dec
mov
xor
adc
loop
out
popl
das
icebp
cs
xchg
pop
add
and
mov
shl
mov
pop
dec
cmp
cwtl
push
aas
dec
ficoms
push
cmp
mov
leave
add
or
add
in
pop
notb
loope
inc
addr16
js
jg
lahf
sbb
int
stos
mov
out
mov
inc
push
jp
dec
lret
sahf
int3
add
adc
clc
repnz
mull
sbb
and
dec
in
int
idivl
fildll
xchg
into
gs
sub
lds
sbb
jecxz
inc
jp
leave
inc
lahf
push
mov
inc
movsb
inc
mov
ror
movsb
adc
mov
mov
pop
aas
arpl
cmp
pushf
mov
int3
hlt
cmp
sub
inc
push
loope
and
sbb
sahf
lods
mov
xor
cmpl
ja
mov
ret
jo
fimuls
push
sub
adc
adc
sub
mov
aaa
adc
leave
data16
ljmp
ret
leave
movsb
adc
imul
loop
jle
js
popa
mov
imul
jl
jge
movsl
and
mov
insl
or
jo
xchg
ror
sbb
pop
mov
mov
loopne
jmp
imull
fimull
cwtl
xchg
cwtl
in
std
outsb
fsubs
push
cwtl
jbe
les
sti
xor
cmpsl
sub
dec
aas
movb
rorl
dec
adc
add
add
fiadds
mov
sbb
insb
dec
or
out
hlt
lods
sbb
into
gs
lretw
dec
sti
iret
dec
stos
jae
sub
in
shrb
cmp
mov
xchg
sub
xor
cmp
adc
pop
mov
out
mov
cmp
fisubs
and
push
out
imul
mov
mov
mov
in
xor
pop
jnp
in
xchg
fidivl
or
call
add
dec
pop
bound
movl
cli
movl
pop
clc
mov
add
ds
sub
dec
jmp
int3
rclb
sbb
and
or
push
mov
aas
or
mulb
adc
mov
cmp
in
aam
xor
jb
out
jp
shlb
arpl
and
dec
rolb
popf
sbb
or
orb
rcrl
xchg
mov
daa
adc
mov
push
aaa
add
xor
jp
xchg
orb
movd
push
mov
lods
fnsave
jmp
push
pop
arpl
mov
jne
out
test
or
das
into
lret
pop
add
xor
or
fcoml
jo
xor
pop
cmp
adc
xor
xor
xchg
scas
mov
insl
and
and
pop
mov
in
sub
stos
sahf
pop
add
popa
orl
pusha
inc
mov
test
xor
sbb
inc
jns
jb
stos
jo
data16
cmc
jl
or
in
insl
movsl
jecxz
pusha
icebp
repz
popf
add
pusha
and
data16
pop
push
sub
das
mov
pop
jp,pt
mov
incb
and
gs
imul
insb
into
mov
cld
mov
xor
dec
pushf
stos
stos
push
pushf
nop
ret
sub
and
loop
mov
dec
mov
aaa
fwait
popf
and
movsb
cmp
pop
sub
repnz
sti
xor
sbb
ffreep
add
insb
les
aam
sbb
je
and
das
cs
add
cmp
jmp
jne
sub
push
les
test
mov
push
nop
push
sub
mov
fs
jge
je
test
jle
movsl
xor
pop
loope
add
lock
scas
loop
inc
sbb
ret
push
punpcklbw
cmp
cmpsl
shll
cmpb
rcrb
sbb
cmpsb
mov
mov
pop
popf
out
cmp
data16
popa
xor
stc
aas
mov
mov
je
jle
adc
xchg
test
lods
mov
lea
test
adc
mov
pop
or
pop
imul
mov
into
mov
sbb
cmpsb
sub
adc
cmp
lock
cmp
adc
sub
aad
jle
inc
jb
jns
call
daa
push
iret
scas
fadds
jno
mov
mov
dec
ret
cltd
cmp
push
mov
and
adcl
inc
aas
or
push
mov
into
pop
xchg
or
je
push
pop
movsl
mov
cld
add
pop
out
test
test
stc
bound
add
into
icebp
xlat
lcall
enter
mov
bound
out
xchg
idivl
jecxz
mov
and
sahf
sub
cmpsl
je
gs
or
ljmp
sbb
pop
aaa
ja
sbb
dec
mov
in
dec
inc
xor
in
jecxz
add
mov
jg
dec
mov
cmp
mov
jne
in
sarl
leave
jnp
and
xchg
icebp
nop
xor
cmpsl
out
mov
cmpl
insl
cmpsb
sti
dec
pop
xor
cld
cmc
push
hlt
push
pop
aam
jae
sbb
out
dec
or
jo
jg
clc
inc
outsl
lret
scas
sbb
fbstp
movl
sarb
push
int
and
sbb
and
xor
push
fcomps
loopne
ret
jo
ljmp
popa
js
inc
cmp
mov
test
push
test
out
cmpsb
inc
rorl
outsl
xor
dec
inc
or
notl
jg
sbb
sbb
xor
lea
and
stos
push
icebp
shr
icebp
gs
fiaddl
and
xor
icebp
daa
jae
mov
pusha
push
sub
xor
in
ljmp
loopne
jmp
xchg
pop
pop
insb
ret
frstor
movsl
xchg
push
mov
test
test
push
sub
enter
les
nop
loope
jmp
int3
aad
mov
inc
lods
xor
ljmp
loope
mov
mov
mov
cli
pop
adc
ss
dec
aam
xchg
out
jmp
xchg
sbb
mov
mov
inc
push
add
xchg
rcll
mov
lock
ja
push
fstpt
insl
add
inc
cli
in
int
lods
popa
pop
orb
call
inc
mov
mov
inc
test
daa
movsl
arpl
jmp
xchg
lret
xor
xchg
sbb
mov
ret
ja
xchg
mov
pop
stc
xorl
mov
pop
into
push
add
cmpsl
xor
jmp
clc
push
sbb
xor
in
scas
mov
int
add
jmp
xchg
popa
mov
lods
mov
push
push
js
or
cmp
jns
iret
rorl
mov
mov
cs
aam
loopne
leave
mov
push
mov
push
mov
mov
shll
jp
call
mov
mov
pushf
adc
fisttpl
pusha
mov
jae
outsb
jno
adc
out
mov
dec
add
outsb
sarb
adc
fcmovnb
in
jp
pusha
push
ja
mov
push
sbb
fsubl
push
rorl
mov
mov
add
call
ljmp
push
jmp
jno
jb
mov
or
test
adc
sti
cmc
sarl
fcmovnb
dec
ds
pop
add
testl
or
in
fsubrl
dec
shll
mov
xor
lock
outsl
test
xchg
outsb
subb
lret
repz
mov
stos
insl
jnp
test
jb
cmp
outsb
loop
adc
lds
pop
mov
pop
scas
arpl
mov
lcall
jb
sbb
inc
mov
sub
sbb
rol
push
rep
flds
inc
inc
mov
hlt
dec
sahf
xchg
add
test
int
fisttps
dec
xchg
in
test
hlt
xchg
sub
inc
xchg
mov
ss
rorl
test
sbb
lods
add
arpl
xor
cmp
cwtl
outsb
cmp
xor
mov
shrl
lock
mov
mov
outsb
je
jbe
test
inc
push
mov
mov
push
mov
xchg
push
jg
jbe
into
inc
repz
cwtl
clc
sub
lret
or
aas
dec
scas
sub
add
dec
xchg
sbb
je
inc
pop
inc
scas
rclb
sbb
loope
out
jl
sub
insb
mov
in
sbb
cmp
jmp
xchg
bound
inc
mov
mov
in
xchg
sbb
xor
mov
lods
je
outsl
adcl
push
std
xor
data16
inc
fiadds
and
cmp
icebp
mov
jle
jns
inc
mov
inc
ljmp
push
popa
or
xchg
jne
hlt
leave
cmp
jmp
aas
rolb
mov
sahf
mov
jl
mov
shrb
mov
mov
gs
xchg
pop
or
or
push
cltd
fnstcw
adc
rorb
xor
cmpsb
dec
adc
ss
leave
aaa
clc
hlt
jb
in
push
push
jp
push
xchg
add
ljmp
dec
hlt
mov
popa
xchg
filds
sbb
aad
and
jbe
mov
cmpsb
scas
movsb
dec
pop
xchg
cmp
test
cmp
out
mov
inc
lock
xor
cmp
rcrl
bound
lock
and
test
nop
or
scas
fadd
xor
ficomps
shlb
cmp
inc
inc
sub
scas
aaa
rclb
sbb
lret
pop
mov
fmull
cs
inc
fistl
stos
push
cwtl
pushw
cltd
enter
repnz
mov
fcmove
scas
cmpsl
xchg
push
mov
push
dec
mov
clc
xchg
aam
scas
mov
jae
sbb
or
out
lds
pop
dec
dec
sbb
sbb
test
mov
je
les
push
aad
fistl
jmp
xchg
cltd
xchg
jno
mov
add
imul
or
arpl
das
xchg
mov
js
jb
jl
loopne
insl
popl
cmp
sub
shl
fisttpl
inc
rclb
scas
jmp
data16
orb
mov
lea
int3
into
lret
ja
cmpb
ss
mov
fiadds
pusha
fcompl
cmp
rsqrtps
pop
pop
xchg
std
push
mov
cmpsb
aas
arpl
or
adc
into
test
pop
mov
inc
inc
jb
dec
fidivrl
loop
inc
dec
icebp
pop
xchg
and
mov
push
popf
std
insl
es
cmc
or
push
push
sub
cmp
xchg
xor
mov
fwait
inc
cmpsb
pop
shl
sub
inc
mov
mov
lret
jno
outsb
inc
lods
insb
jecxz
hlt
imul
outsl
in
es
psubq
mov
xchg
add
gs
pop
push
test
mov
sti
fwait
push
popf
daa
clc
push
mov
sbb
cmp
dec
pop
cli
cld
int3
lahf
mov
popa
outsl
popa
xchg
cmp
mov
mov
ja
out
xlat
dec
push
xchg
fistpll
push
sub
aaa
push
sub
and
enter
lahf
mov
rclb
stos
jno
push
insb
dec
les
insl
aas
rolb
sub
jl
mov
or
mov
sub
insl
xchg
enter
mov
add
iret
xchg
jg
jo
adc
inc
shll
cmp
xchg
scas
rclb
arpl
out
mov
cs
jg
xchg
cmp
stc
mov
xor
test
pop
sub
dec
sbb
sub
xor
inc
aas
test
mov
insb
gs
repnz
sub
fldenv
pop
adc
sbb
dec
or
sub
das
mov
in
or
pusha
sarb
stos
packssdw
xor
sbb
add
inc
je
adc
stos
mov
fildll
sbb
test
pop
sbb
add
adc
mov
xchg
loop
test
int
notl
fwait
cmp
sub
stos
inc
jecxz
je
sbb
rcrb
pop
dec
cmp
push
out
pop
xchg
enter
mov
loop
dec
mov
jle
pop
inc
dec
xor
pop
cmpsb
xchg
mulb
div
arpl
or
mov
xor
mov
pop
cmp
push
aas
mov
adc
sbb
mov
xor
mov
jmp
sbbb
in
jae
jmp
cwtl
std
in
add
nop
xchg
mov
int
sub
loopne
push
scas
lret
stos
icebp
jl
mov
add
aaa
stos
mov
pop
xchg
and
inc
shrl
push
jno
fwait
daa
fbstp
mov
sarb
fists
stc
add
add
and
data16
mov
movsb
push
mov
jmp
not
les
lods
in
nop
mov
push
fcompl
add
pushf
std
stos
fdivp
les
inc
sti
fidivs
int
xchg
cli
dec
jl
cmp
adc
scas
xchg
xor
jns
test
rcrl
loop
dec
dec
scas
shl
aam
pop
stos
fcoms
jge
and
cmp
fwait
or
es
xchg
pop
in
pop
pusha
sahf
mov
jle
rorl
cmp
mov
lock
movsb
adc
fstl
push
inc
cmp
sbb
lahf
dec
jp
xchg
push
jae
scas
jbe
sbb
or
dec
jp
mov
pushl
sbb
les
sarb
aad
jl
sub
push
lods
inc
out
sbb
repz
data16
cwtl
or
stc
inc
jo
and
mov
mov
push
dec
out
inc
adcb
pusha
fistpll
and
jmp
insl
ljmp
inc
sub
in
jecxz
inc
or
dec
cs
cld
dec
aam
mov
mov
jo
add
dec
cli
pop
in
mov
push
movsl
in
movsb
rcrb
idivb
syscall
or
xor
les
xchg
or
orl
cmp
jo
ret
scas
jnp
mov
dec
xlat
and
xchg
inc
loop
mov
pop
inc
lea
push
mov
sbb
and
or
pop
imull
lock
imul
sbb
loope
lret
mov
jb
and
cmp
pop
mov
leave
outsl
xchg
and
xlat
cmp
sar
daa
int3
and
pop
pop
ficoml
or
jl
fistps
inc
inc
lds
imul
jle
inc
sbb
les
dec
lds
sub
mov
mov
mov
mov
repnz
sbb
and
outsl
mov
pop
into
fisubrl
loopne
and
lret
mov
in
xchg
shrl
test
add
sub
push
add
and
imul
mov
inc
callw
ss
xchg
mov
mov
pushf
jl
aad
lahf
pop
out
xchg
fdivs
cltd
mov
sub
or
cs
mov
pop
cli
jb
jb
xlat
mov
jg
and
mov
aad
jnp
mov
mov
cmp
xchg
push
icebp
aaa
mov
int
mov
inc
push
sub
xor
add
ret
or
inc
push
mov
xchg
adc
roll
push
insl
lock
sub
cmp
cmpsl
push
jecxz
lds
xor
add
js
cmp
cmpsl
rcll
loop
dec
and
jg
aas
adc
mov
or
addr16
sbb
lods
mov
repnz
dec
aam
sbb
and
scas
add
dec
aaa
fstp
je
in
mov
adc
and
adc
nop
mov
outsb
xor
xlat
push
shlb
push
arpl
xorl
jno
loopne
jns
fidivrs
insb
add
mov
shrb
dec
xchg
cmc
roll
icebp
aaa
dec
scas
xor
lret
cmc
fmull
dec
cmp
xchg
mov
xlat
push
push
mov
cs
jle
mov
push
and
iret
push
mov
xchg
push
jp
repz
lds
imul
lret
stc
fmuls
push
jle
test
je
shrl
mov
adc
dec
iret
sbb
mov
sbb
mov
push
mov
pop
fnstsw
mov
dec
lods
jb
andb
jb
andb
imul
jecxz
or
test
fidivrs
sbb
mov
fbld
or
push
addb
aaa
jno
and
mov
lock
adc
pushf
scas
icebp
iret
xor
jne
mov
aad
mov
pop
loop
xchg
sub
or
test
dec
out
movsb
dec
cmp
xchg
sbb
mov
xor
push
aad
aad
js
outsl
test
clc
lods
into
aam
cwtl
jp
int
fists
xchg
mov
mov
or
push
nop
xchg
push
aad
adc
stos
or
fcomps
rcrl
mov
push
mov
dec
scas
pop
stos
arpl
sarb
andb
sbb
mov
xlat
push
inc
jge
fisttpll
adc
jo
inc
xchg
cmp
aaa
jg
stos
js
and
loopne
adc
dec
clc
notb
and
inc
adc
xchg
cmc
hlt
cmp
arpl
aad
pop
into
enter
push
nop
std
leave
in
scas
inc
pushf
fdivs
test
mov
xor
and
adc
jb
arpl
cmp
pusha
pop
aaa
push
sub
jnp
adc
fdivrs
mov
or
push
cmp
mov
popf
je
je
imul
test
mov
xchg
mov
push
dec
jns
push
adc
mov
mov
cmp
or
fs
mov
lret
jo
push
test
aaa
rorl
out
mov
dec
xor
pop
shlb
loop
out
cmp
scas
and
adc
adc
aad
adc
inc
mov
out
pop
test
or
push
sub
sysexit
sbb
pop
inc
add
mov
scas
push
aam
and
ja
jns
shl
mov
movsb
insb
add
jnp
aaa
dec
hlt
lret
cld
dec
in
and
bswap
fdiv
adc
dec
or
scas
or
push
xor
dec
cmpsb
loope
and
adc
jmp
xor
sub
and
mov
jo
add
mov
repnz
jnp
fwait
subb
xor
cmp
les
stc
stc
inc
dec
jnp
adc
add
imul
jp
cmp
imul
xchg
mov
jecxz
xchg
sahf
cmp
push
cwtl
pop
pop
stc
lods
mov
dec
or
mov
js
mov
cs
mov
inc
and
cli
addl
mov
pop
les
cmp
gs
mull
lret
mov
jmp
add
out
outsl
add
in
cmpsb
subb
lods
jne
cmp
sub
jle
in
mov
loope
pop
jns
sbbl
sub
sub
rcrb
mov
sub
fs
cltd
nop
inc
movsl
icebp
mov
adc
mov
imul
xchg
xor
out
push
xchg
je
xor
daa
lret
out
cmp
add
or
push
inc
jge
dec
lds
in
mov
addr16
dec
test
dec
pop
sbb
stos
sbbb
pop
sbb
jae
iret
sub
test
xor
jmp
subl
test
mov
scas
jb
and
gs
ja
mov
imul
imul
repnz
js
imul
lcall
mov
fnsave
adc
scas
xchg
mov
popa
in
pusha
iret
leave
sub
xor
sbb
scas
aas
lods
mov
xchg
pop
mov
orb
or
icebp
inc
insb
repz
pop
jp
rolb
lods
out
mov
inc
pushf
push
inc
adc
les
push
cmpl
hlt
test
jge
inc
jge
pop
ljmp
sbb
dec
lahf
mov
in
jg
outsb
mov
push
test
or
loopne
loopne
mov
push
iret
jb
ljmp
je
add
dec
fdivrl
hlt
push
fldenv
mov
xor
xchg
add
outsl
inc
mov
stos
add
jmp
cli
dec
mov
mov
adc
pop
or
or
imul
xchg
pushf
call
dec
lds
inc
stc
or
fnstcw
or
aad
pop
int3
jne
xchg
mov
pop
xchg
fdivl
cli
xor
cwtl
mov
jle
imul
mov
cld
lret
arpl
fsub
pusha
imull
jae
adc
lret
push
mov
hlt
aad
adc
mov
shr
dec
xchg
leave
iret
xchg
imul
or
int3
or
push
fcom
jno
and
jns
movsl
das
dec
add
sbb
lock
mov
jle
jge
and
cltd
push
arpl
push
repz
xchg
cmp
or
mov
nop
cmp
add
sub
out
xchg
ja
lods
addr16
pop
decl
insl
sub
xchg
and
cmp
mov
or
addb
mov
das
push
mov
cmp
hlt
dec
mov
jp,pt
rol
pop
pushf
adc
inc
mov
bound
scas
or
inc
das
popf
enter
sbb
idivb
push
shr
outsl
xchg
dec
out
loope
cmc
xor
pop
add
movsb
jnp
jbe
or
mov
lcall
fcoms
jbe
jne
loop
call
pop
pop
sub
imul
cmp
mov
aaa
and
repz
test
int
scas
push
sar
push
dec
inc
ret
filds
popa
add
addr16
xor
clc
xor
xor
insb
movsl
mov
in
filds
sub
mov
mov
xchg
cmpsl
es
dec
push
loopne
add
push
push
sti
fs
lret
fs
cmp
mov
not
adc
xor
and
test
insl
call
cmp
dec
sbb
movsl
fstpt
fstl
jecxz
sub
xlat
out
cmpsl
in
jge
mov
js
lock
int3
or
sbb
lock
int3
add
mov
test
or
cmp
mov
inc
jae
pop
mov
mov
and
jb
add
cmp
loope
xor
sbb
lret
aad
shlb
jae
test
cld
out
out
sahf
fisttpl
icebp
sbb
outsl
lds
stos
outsl
mov
mov
fisttpll
out
jecxz
add
lods
std
out
repz
leave
mov
dec
out
out
fsubr
pop
js
int3
cmpxchg8b
xchg
inc
insl
pop
in
inc
mov
pop
mov
or
xchg
clc
outsl
xorl
lods
inc
dec
mov
insb
pushf
sbb
sarl
je
add
aas
cwtl
in
int3
ret
push
mov
pushf
or
fs
cmpsb
fwait
inc
pop
sbb
push
lret
in
mov
loopne
std
jecxz
push
out
and
xchg
fs
notb
push
mov
pop
fisubrl
lock
xchg
mov
cwtl
ds
cmpsl
xchg
setge
fstps
push
inc
into
pop
and
insb
mov
lods
inc
popf
out
xlat
sbb
sbb
and
lcall
inc
pop
lds
pusha
push
std
fs
jl
imul
pop
push
mov
fistl
insl
fidivrl
jge
mov
mov
fsubrl
mov
inc
in
arpl
scas
lock
inc
ficoml
push
mov
in
imul
clc
mov
xchg
pop
adcb
repnz
enter
push
stos
in
insb
ret
loope
inc
out
jle
iret
mov
cli
icebp
loopne
mov
loop
pop
cli
cli
push
push
popf
mov
xorb
pop
std
popa
xchg
jmp
mov
mov
pop
pop
out
call
sub
movsl
fisubrs
xor
xlat
stos
gs
pop
jnp
clc
ss
orb
test
mov
mov
pop
cmc
sbb
into
pop
decl
dec
push
mov
pop
sbb
and
xor
adc
push
sbb
jmp
repz
stos
das
pop
hlt
call
dec
leave
jnp
out
mov
out
je
stc
popf
pop
ficompl
xchg
and
adc
out
pop
mov
sub
and
hlt
xchg
adcb
js
int
shrl
mov
mov
or
cmp
loop
in
push
xchg
or
outsb
push
stc
cmc
xchg
js
dec
in
and
sub
ja
int3
jg
test
rcrl
out
jb
pop
or
xor
popa
sbbb
jp
mov
adc
stos
xor
repnz
push
mov
data16
pop
cmpsb
ljmp
jmp
sbb
lods
or
scas
fildl
sub
sbbl
lcall
cli
adc
mov
inc
mov
inc
test
data16
out
mov
clc
push
lods
jp
push
xor
mov
mov
pop
pop
pop
incb
mov
cmp
cmp
jne
push
test
nop
repnz
inc
pop
repz
pop
jo
mov
adc
ljmp
mov
cmp
push
jns
push
lret
dec
outsb
sub
cmp
popf
mov
jmp
add
add
xchg
push
je
les
loope
push
insb
lods
insl
and
rcl
rcrb
jbe
rorl
mov
or
lret
pop
and
in
call
pop
mov
outsl
push
inc
popf
stc
jns
and
syscall
jecxz
hlt
adc
mov
sbb
movsb
mov
jbe
jae
pop
push
pushf
aaa
in
hlt
aam
stc
push
fldt
jmp
sarb
int
aad
test
inc
push
out
dec
insb
mov
lods
add
prefetch
jmp
test
inc
fldenv
in
cmp
add
loope
mov
movnti
lahf
je
aam
sbb
jb
sbb
mov
inc
dec
inc
in
push
js
cs
cmc
into
adc
xchg
mov
xchg
add
fstps
xchg
in
leave
push
sub
mov
icebp
lret
pop
mov
mov
mov
mov
enter
cmp
sbb
andl
sahf
and
or
mov
outsl
push
push
es
shl
hlt
popf
add
rcll
xchg
test
inc
and
xchg
jno
cltd
pop
into
das
gs
xchg
pop
rcll
insb
push
and
pushf
pop
out
xchg
inc
mov
xchg
dec
add
pushf
imul
out
scas
inc
out
enter
push
jnp
clc
dec
sahf
lock
adcl
or
pop
mov
cmp
lods
add
pop
add
xchg
push
iret
es
lret
mov
xlat
mov
jbe
push
mov
lock
or
aaa
inc
adc
mov
pop
jecxz
xor
inc
jmp
mov
popf
pop
pusha
xor
shlb
sub
push
sahf
mov
mov
lahf
sti
data16
xor
push
dec
fcoms
or
cmp
insb
or
and
mov
mov
cmp
rol
mov
into
rol
clc
mov
fwait
jno
add
and
push
loope
aas
adc
cmp
into
sti
mov
pop
js
into
push
sub
xchg
mov
sbb
stc
in
push
push
or
ja
loope
mov
outsb
sub
inc
add
notb
sub
orl
ja
push
movsb
mov
aad
imul
popf
cld
lahf
scas
fsubs
dec
pop
adc
pop
pop
mov
mov
mov
fwait
pop
iret
or
pop
orb
movsb
nop
sbb
xor
movsb
add
mov
add
sbb
and
mov
pop
int3
ljmp
sti
cmp
call
jp
clc
mov
repnz
adc
stos
jbe
add
add
scas
jne
add
and
inc
rcrb
pop
aaa
push
push
mov
fmulp
mov
movsb
loope
cmpsl
cld
cltd
jnp
flds
sub
cmc
jo
adc
push
nop
or
jge
jne
push
mov
push
sti
mov
sti
jle
sbb
mov
ret
jbe
mov
and
cmp
icebp
mov
inc
fiadds
imul
les
repz
mov
fdivrs
es
or
sbb
adc
lods
test
pop
icebp
dec
jnp
jns
add
notl
insl
les
sbbl
jnp
mov
xchg
negl
insl
pop
dec
sub
inc
xor
mov
dec
xor
mov
pop
iret
jb
cltd
xchg
dec
call
xchg
sub
cli
ret
js
jg
push
stos
aad
out
mov
test
repz
xor
nop
enter
or
daa
dec
lock
inc
cmpsb
add
lahf
outsl
iret
inc
jns
inc
ds
div
loopne
or
xchg
lods
or
mov
test
xor
mov
sub
and
iret
adc
mov
int3
xchg
inc
cmpsl
insb
ja
cmc
ljmp
add
test
xor
notl
or
ror
mov
jp
test
xor
xchg
push
enter
in
mov
stos
adc
stos
lods
add
ja
ficoms
inc
scas
xchg
pop
shll
or
jbe
imul
adc
lods
lods
xchg
jge
cmc
push
add
cmc
imul
cmp
rorl
cmp
and
dec
lock
mov
mov
sahf
sub
loope
lock
test
jbe
add
mov
dec
inc
and
xchg
int
scas
loopne
xor
add
fiaddl
xor
cmpsb
mov
mov
mov
ficomps
inc
sub
add
ss
jg
jb
sar
popa
iret
out
ffreep
negl
popf
inc
adc
fcoms
xor
jo
repnz
out
mov
xor
in
push
cmc
mov
pop
mov
repnz
outsb
stos
or
pop
mov
xor
daa
fistpl
sbb
outsb
mov
movsl
jmp
jecxz
jmp
dec
int
mov
add
sbb
ds
test
adc
fdivl
pushl
movsl
cmp
dec
pusha
aam
gs
fadd
sbb
into
cmpsb
adc
mov
test
pop
xchg
cmp
aaa
lods
cmp
shlb
pop
mov
call
imul
int
push
jp
imul
mov
inc
xchg
push
stos
sbb
mov
jmp
sbb
in
sbb
ret
rcl
ja
clc
fidivs
pusha
xchg
leave
push
dec
jb
rolb
in
shl
fmuls
push
je
aam
in
shll
sub
dec
mov
jle
mov
inc
sahf
push
in
sub
add
jnp
pop
push
cwtl
pop
jae
rolb
das
sbb
fsubs
ds
adc
cmp
mov
xor
pop
test
lock
bnd
mov
pop
mov
add
mov
pushf
pop
xchg
mov
into
xorb
jmp
daa
leave
cmp
mov
ss
pop
adcb
add
mov
or
inc
aad
or
fidivrs
xchg
sub
or
mov
inc
cld
jmp
jnp
lods
push
xorb
pushf
rolb
jge
lods
pop
in
ret
sbb
arpl
shlb
xchg
cld
mov
dec
daa
pop
stos
cmp
mov
nop
aad
sub
mov
dec
test
jl
shll
mov
fmuls
fwait
leave
aad
and
cmp
leave
mov
cmpsb
and
sahf
shlb
in
cwtl
pusha
adc
ja
adc
testl
repnz
outsl
mov
xor
or
in
inc
inc
mov
mov
sbb
pop
inc
ficoml
pop
fildl
lcall
jb
xchg
ret
std
dec
cmpsl
incb
movl
movaps
fidivl
dec
xchg
jmp
jno
add
jbe
inc
pop
jnp
mov
mov
pop
add
push
popf
or
mov
or
subb
push
sbb
pop
jae
xor
movsl
and
mov
xor
jae
or
xchg
ljmp
cli
dec
fisttps
mov
jb
xor
mov
fs
inc
repnz
call
lods
dec
mov
mov
cmpsb
nop
ljmp
inc
jl
push
decb
ljmp
cmpsl
daa
inc
mov
fcoml
adc
lods
pop
dec
aam
pushf
je
movsb
dec
fisubrl
pop
cwtl
add
jno
cwtl
push
adcb
sti
repz
ficompl
or
outsl
fldenv
push
jb
and
das
push
xchg
insl
std
pop
aas
cmp
nop
inc
jp
bound
outsl
mov
and
dec
imul
int
popa
lahf
add
ljmp
xchg
rcll
mov
xor
into
push
push
enter
popa
push
fs
inc
sti
or
in
and
sbb
fldenv
test
dec
xchg
cld
mov
sbb
push
fs
sbb
xchg
mov
xchg
addl
aad
jle
imul
xor
pop
mov
out
mov
out
jge
sbb
ret
clc
fnsave
mov
push
adc
sbb
imul
inc
cmp
cmp
and
lret
sahf
test
add
mov
into
mulb
sub
into
jo
inc
mov
cwtl
mov
sub
lahf
ja
idivl
setle
stos
popf
mov
push
aam
pusha
inc
and
sub
outsl
push
int
sub
rol
push
lods
xor
aas
pop
lock
outsb
js
sar
mov
cmc
ljmp
mov
lret
jo
orl
xor
aas
insb
loop
das
mov
mov
adc
int
cmp
outsb
xorb
cmpsl
jns
pop
inc
dec
test
repnz
add
xchg
push
xlat
faddl
pusha
dec
arpl
push
or
xchg
nop
dec
lock
movb
cmp
jo
push
test
dec
leave
js
cmpsl
movb
fisubrs
enter
rclb
dec
push
mov
sbbb
in
fs
pop
mov
cmp
leave
add
stos
dec
shll
rclb
subl
mov
loop
insb
mov
movsb
mov
adc
daa
scas
cmpsb
jl
sbb
inc
push
cmc
jl
rep
lock
and
cmp
sbb
xor
les
ja
daa
pop
loop
add
pop
xlat
lds
push
icebp
mov
jne
sahf
push
call
jnp
jle
imul
nop
movsb
sub
add
mov
fidivl
lods
jp
lods
xor
ror
cmp
xor
xchg
addr16
pop
mov
push
dec
and
gs
dec
shll
int
out
imul
or
rcrb
dec
inc
fcomp
in
test
arpl
and
jp
pop
and
xchg
or
xor
sub
add
jl
xor
pop
addr16
cmp
inc
sti
fwait
daa
push
mov
out
jle
jl
mov
push
inc
enter
in
enter
loop
jle
lods
rol
mov
sti
mov
mov
inc
out
lock
orb
jo
add
sti
xor
jecxz
popa
insb
pop
fidivrs
jbe
pop
mov
out
out
pop
lods
xor
push
adc
mov
test
adc
or
sbb
jns
mov
push
or
mov
outsl
fwait
jge
push
push
andb
rcl
push
lock
leave
sbb
dec
mov
mov
movsl
inc
jbe
inc
ljmp
scas
testb
mov
lahf
lea
hlt
div
stos
not
adc
lcall
iret
and
ds
jae
aas
push
inc
xor
mov
and
or
add
push
push
dec
jl
push
popa
cmp
and
mov
int
xchg
stc
adc
jmp
roll
in
push
cwtl
aad
call
fcmove
dec
mov
pusha
out
dec
les
mov
test
mov
ja
jg
jb
outsb
pop
lea
or
xor
jne
sub
movl
loop
push
push
out
mov
pop
dec
dec
repz
lret
push
mov
mov
lret
mov
in
xchg
mov
cmpsb
xor
lods
adc
dec
sub
cmpsb
xor
imul
mov
inc
jno
sbbl
iret
dec
push
loopne
inc
push
push
add
js
or
adc
xchg
rcll
inc
pushf
pop
ficomps
cmpsb
loopne
popf
mov
fsubr
mov
pop
adc
int
sbb
outsl
lahf
pop
iret
repnz
sbb
lea
xchg
mov
mov
popa
in
sbb
pusha
pushf
and
pop
jmp
aam
fidivs
mov
and
adc
daa
pop
mov
scas
sbb
notl
push
scas
sub
data16
mov
inc
pop
jmp
pop
inc
je
cmpsl
cmp
mov
xor
push
mov
mov
in
movsl
popa
inc
enter
subb
adc
add
iret
adc
inc
sub
rcl
lret
mov
int
mov
cmpsl
and
or
cmp
ret
sbb
push
or
lods
mov
and
xchg
stos
lods
hlt
enter
and
imul
cmp
xchg
xor
je
test
pop
dec
cld
fmull
es
out
dec
mov
sub
mov
jo
incb
sahf
push
mov
and
mov
das
push
pop
mov
inc
test
ret
push
cmp
ss
jecxz
std
lahf
into
mov
cmc
fidivrl
push
pop
add
shrb
jno
pop
adc
pop
sbbl
xorb
and
cmp
scas
add
test
jno
ss
mov
mov
out
adc
fisubrl
test
jmp
ss
push
xor
imul
sbb
orl
into
jmp
fdivrl
add
inc
xor
js
and
outsb
out
push
leave
xor
add
test
out
mov
cmc
xor
jo
cmc
dec
jno,pn
pusha
cld
push
iret
insl
call
jbe
pop
inc
push
xchg
xor
sub
or
imul
sarb
insb
scas
push
push
pop
enter
jle
les
movsl
inc
jae
jle
push
or
and
in
out
pushl
outsl
int3
mov
adc
pushf
dec
or
mov
test
inc
les
gs
ret
dec
ret
js
jo
mul
ret
sub
push
xor
fistl
js
and
bound
or
ret
inc
ret
cmp
das
fmuls
cmp
mov
or
mov
add
cmpsl
fsubrl
js
dec
and
xor
std
mov
std
loopne
mov
popf
cmc
rolb
nop
sbb
jae
enter
aaa
adc
inc
icebp
sti
mov
sarl
aam
push
lret
leave
aaa
loopne
cmp
dec
mov
and
insl
xor
mov
xchg
mov
cmp
repz
push
xchg
jecxz
jecxz
test
leave
jns
xchg
pop
in
mov
aad
stos
in
jl
xor
clc
fimull
sub
xor
lea
fsubrs
adc
arpl
inc
test
inc
out
cmp
mov
out
sub
sbb
in
notl
subb
and
cwtl
xchg
sub
out
mov
aaa
roll
adc
jp
aam
lods
dec
cmp
inc
sbb
push
or
xor
sarl
iret
mov
lcall
xchg
cwtl
inc
shl
mov
loope
cmpsl
sbb
movsb
sti
lods
xchg
and
add
or
sub
pop
mov
add
sub
sub
pop
push
lret
xchg
cmp
sub
mov
repnz
scas
dec
mov
mov
sub
push
inc
jne
inc
dec
pop
sbb
xchg
dec
lods
aad
lea
adc
iret
call
push
outsb
cltd
clc
sbb
lock
xor
or
push
sbb
popa
mov
test
sbb
in
xchg
das
mov
in
mov
and
xchg
loopne
popa
mov
cwtl
jp
clts
or
sbb
mov
adc
gs
hlt
lods
xchg
std
mov
sub
cli
mov
xchg
xor
pop
loop
dec
outsl
add
stc
xor
repnz
jbe
cld
test
pop
sbb
jns
test
jp
push
dec
or
clc
out
inc
mov
mov
mov
sub
mov
cli
aaa
cwtl
aas
rcrl
icebp
movsl
addr16
ja
pop
xchg
push
xchg
fildl
xlat
testb
in
xchg
loopne
lods
xor
ja
mov
aam
dec
sbb
mov
dec
test
shrb
jle
ja
mov
bound
aam
stos
outsl
insl
sahf
dec
push
notb
sub
add
and
push
jb
sar
xchg
pop
iret
mov
test
push
enter
repnz
sbb
shrb
jge
sahf
mov
roll
in
inc
push
lcall
sub
adc
or
push
mov
mov
pop
cltd
inc
sahf
lods
cltd
lret
rclb
test
jmp
add
ja
or
movsb
pop
push
fdivr
add
push
mov
add
push
popf
adc
cmp
in
push
into
icebp
or
xlat
mov
inc
mov
push
loopne
mov
loop
jecxz
aam
insl
clc
in
sahf
jecxz
mov
mov
xor
rcrb
pand
jns
test
cld
dec
pop
adc
cs
mov
imul
mov
dec
jmp
rcll
popa
xor
push
and
jns
nop
push
mov
imul
or
popf
mov
in
in
pop
insb
movsb
cmp
pushf
out
push
jns
lods
xchg
fcoml
xchg
pop
mov
std
addl
jne
loop
push
xor
and
xchg
mov
pusha
push
out
adc
or
js
pop
in
mov
xor
jo
out
nop
jno
xor
xchg
enter
shll
out
insb
jae
inc
test
sbb
mov
sbb
iret
push
insl
sub
cli
add
pop
rcrb
sbb
dec
pusha
out
push
lods
push
pop
jmp
in
adc
mov
mov
ret
push
aad
daa
enter
jge
mov
aad
and
imul
pushf
cld
pop
fisubrs
into
jo
test
pop
mov
and
stos
jne
adc
lcall
clc
es
mov
test
ficomps
push
sbbl
cli
bound
sbb
or
sub
xor
daa
xchg
out
inc
cltd
and
in
mov
clc
fsubs
jae
dec
push
inc
adc
outsl
inc
xchg
nop
out
ja
rcr
mov
lods
stos
pop
in
xor
fidivl
addr16
mov
cmp
mov
scas
xor
or
inc
sub
sahf
xchg
jns
jg
sahf
addr16
jle
pushf
fdiv
outsb
arpl
xchg
mov
pusha
pop
lahf
pop
imul
js
jae
sub
cmc
dec
iret
or
jno
imul
stos
or
int3
hlt
std
rcrb
mov
push
xlat
outsb
clc
or
lcall
bound
mov
lods
jnp
dec
dec
jecxz
daa
ds
add
lock
dec
int3
add
and
lcall
arpl
jae
cmp
pop
pop
sbb
inc
inc
xchg
cmp
mov
movsb
mov
cmc
jmp
fisttpll
insb
cmp
add
lods
xor
in
loop
call
sysret
mov
dec
ret
mov
out
inc
add
shrl
hlt
stc
aaa
inc
dec
mull
pop
cs
lods
xor
xchg
sub
jno
movl
xor
lods
pop
cwtl
push
inc
or
dec
cs
repz
jg
dec
mov
inc
sub
ret
pop
xchg
testl
mov
jnp
add
sub
in
or
sbb
inc
test
loope
mov
jbe
sarl
insl
xor
aas
sbb
xchg
dec
push
and
cli
add
add
xor
cmp
ljmp
push
aam
lods
aaa
cmp
insl
add
mov
xchg
jp
ret
xor
pop
rorl
mov
test
call
xor
sub
mov
pop
fidivl
mov
or
stc
mov
int
lret
fs
mov
push
sub
sub
sub
enter
ljmp
aas
and
push
mov
popf
sbb
ljmp
cmpsb
ljmp
sahf
cli
sub
in
inc
cmp
push
repnz
xor
js
jl
mov
push
lds
xchg
aas
aas
and
orb
mov
repz
fmuls
xor
int
sbbb
mov
sbb
std
dec
popa
xor
out
mov
xor
fstl
popa
out
pop
movsb
ret
sub
jg
dec
jp
aas
cs
mov
lcall
add
les
mov
stc
pop
push
pop
push
add
fadds
add
jnp
lcall
push
pop
xor
push
cli
mov
add
sti
lcall
cmp
lret
stos
lock
push
into
lcall
sub
cli
in
and
xor
sub
add
adcb
cmp
mov
push
sub
nop
mov
jo
insl
mov
xlat
je
fsts
ja
popf
xchg
mov
fld
aas
out
cmp
and
subl
pop
inc
jle
xchg
cwtl
adc
mov
cmc
mov
inc
cwtl
loope
and
sbb
lcall
push
scas
addb
xor
xor
add
bound
das
call
xchg
sub
daa
push
jae
sbb
mov
fwait
jo
pushf
dec
pop
loop
jbe
repz
lret
mov
mov
icebp
es
inc
movsl
fstps
cmp
mov
jns
out
js
fildll
data16
cmp
ficoml
test
inc
push
inc
sbb
inc
lret
mov
das
jge
es
sbb
popf
sbb
stos
stc
mov
jnp
enter
das
and
test
push
out
or
xor
mov
or
add
pop
adc
and
mov
arpl
daa
mov
out
repnz
sub
outsb
or
das
lods
sbb
dec
sarb
add
ret
xor
pop
popa
mov
xchg
in
test
fidivl
mov
adc
test
jge
fxch
push
pop
inc
pop
arpl
ret
mov
inc
push
pop
mov
sbb
cmp
pushf
sub
mov
cmpsb
test
ja
xor
outsl
jmp
sbb
xchg
stos
jb
shrl
dec
ja
cmp
sub
in
add
dec
push
or
mov
bnd
xchg
dec
xor
movsb
insl
cmp
scas
dec
fs
outsb
stos
stos
xchg
mov
inc
mov
aad
js
loopne
test
sbb
js
push
xchg
jno
add
mov
push
mov
xorl
movb
xchg
dec
xchg
in
jg
and
shl
push
ljmp
xchg
test
pop
inc
mov
lock
daa
les
pop
outsb
or
mov
jp
push
xor
jg
fidivrs
xor
or
ret
imul
subl
imul
push
lret
sub
push
inc
stc
nop
dec
mov
pop
pop
sub
ljmp
cmpl
data16
insb
jg
test
push
push
adc
inc
pop
push
fcom
add
add
sbb
lahf
adc
cmp
sub
sub
in
out
mov
pushf
inc
fdivrs
in
lods
cltd
fstpl
in
cmp
aaa
inc
lods
out
dec
jle
dec
sub
mov
jl
or
je
dec
xor
dec
popa
stos
push
ret
lds
mov
jmp
push
adc
cmp
aas
inc
and
dec
lret
jns
push
shll
loop
stos
cmpsl
rclb
lods
pop
add
in
and
cmp
jae
bound
cmpb
int
insb
xchg
sbb
ss
movsb
popa
arpl
aaa
dec
push
stc
push
push
cs
mov
mov
xor
loopne
test
adc
lcall
leave
cmpsl
mov
and
addr16
jo
adc
xchg
inc
mov
xchg
pop
cltd
int
out
xchg
shrl
push
rorl
shrl
dec
scas
sbb
incl
aam
fidivrl
or
int3
dec
insb
mov
insb
nop
lcall
cli
xor
add
std
jne
jge
xor
xlat
pop
shll
xor
stos
ds
into
mov
loop
ss
imul
lods
push
js
push
xor
subb
cmpsl
dec
test
push
test
imul
xlat
pusha
and
cmpl
jmp
mov
cld
repnz
inc
push
icebp
or
jg
shr
outsl
ror
faddp
sbbb
adc
push
jmp
int3
adc
adc
sbb
jge
pushf
push
dec
stos
jge
lock
xchg
push
sbbl
movsb
lods
loop
dec
add
or
jae
mov
mov
cli
mov
js
es
ja
sahf
mov
lret
adc
leave
mov
mov
fidivl
mov
mov
iret
or
cmp
or
test
jmp
flds
pop
mov
pop
adc
sbb
push
or
scas
scas
xor
in
sbb
inc
mov
xchg
lock
out
inc
ret
or
sub
cmc
test
stos
lea
movsb
adc
adc
or
mov
pop
fistps
push
xchg
pop
fdivl
gs
push
hlt
pop
mov
pop
jne
pop
xchg
ret
dec
data16
and
pop
int3
fldenv
mov
push
ljmp
or
mov
stos
nop
push
push
push
stc
mov
inc
push
or
pop
popa
sbb
nop
dec
rclb
push
inc
sub
push
or
sub
adc
in
mov
jae
or
mov
push
andps
stc
iret
stos
cmp
imul
inc
jnp
and
emms
stos
pop
xor
sets
inc
fldenv
js
outsl
mov
test
sbb
pop
movsl
dec
sbb
stos
adc
xor
lret
add
mov
fstpl
rorl
push
cmp
repz
sahf
push
xor
jge
hlt
xor
and
lret
mov
pop
stc
jge
dec
pop
lock
inc
dec
sahf
dec
or
inc
mov
imul
fs
in
adcb
add
lock
jnp
jg
jl
sbb
out
gs
push
je
out
mov
popf
or
adc
xlat
xor
sbb
jae
inc
in
mov
pop
aam
push
pop
imul
fsts
loopne
jnp
not
xor
in
adc
xor
mov
inc
jmp
pop
fcomip
push
sbb
push
roll
lods
and
adc
into
jp
popa
in
mov
lahf
bound
mov
and
xor
lods
ss
sub
fsubs
cmpsl
inc
out
xor
or
xorb
push
mov
mov
sub
data16
push
cmpl
dec
xor
pop
shl
fcomps
xor
mov
fstp
cwtl
jb
xor
mov
shl
outsb
xor
jle
add
ret
stc
fdiv
mov
mov
dec
pop
push
inc
fs
or
sub
scas
shrb
gs
testb
jp
jp
fs
out
xor
jo
cmp
mov
sbb
add
mov
push
pop
cs
ljmp
jp
jl
add
repnz
lods
mov
test
inc
jl
leave
inc
popf
cmp
jmp
dec
ljmp
mov
pop
cmc
daa
jnp
fldl
cmpsl
push
ret
and
sbb
and
xlat
movsbl
out
movsl
fstl
mul
lcall
cmpb
cmp
scas
iret
or
scas
movsl
xchg
push
inc
clc
dec
minps
cmpsb
lods
cli
mov
in
push
ds
mov
sub
sbb
mov
mov
loope
repz
loop
mov
and
decb
dec
inc
dec
adc
xchg
inc
xchg
out
data16
es
xor
jge
fmull
jmp
pop
movsb
jp
ficoml
mov
jmp
xchg
push
flds
fwait
aam
sahf
pop
mov
and
cltd
xor
dec
pushf
dec
mov
test
xor
aas
add
movsb
mov
dec
fcoms
pop
lock
loopne
lods
repz
inc
jo
or
popf
adc
daa
dec
loopne
dec
mov
daa
js
insb
subl
mov
insl
ficoml
dec
push
add
dec
pop
icebp
jp
add
pop
push
mov
sbb
cmp
popa
pop
push
sub
or
cmpsl
fsubl
xchg
jb
sub
cmp
push
pop
insl
cli
inc
jae
fwait
out
sub
ret
jecxz
cmp
cwtl
cmp
fsubr
stos
mov
push
xor
test
leave
push
popf
push
mov
xor
loopne
sub
lods
xor
xor
fcmovbe
dec
mov
or
and
xchg
inc
rol
xor
sti
add
loope
in
sahf
loop
addb
push
xchg
stc
aas
gs
and
cmp
stc
mov
add
in
shl
mov
push
xchg
push
adc
xchg
outsl
sbb
mov
adc
inc
shll
pop
mov
loopne
push
mov
fdivr
lods
or
ds
and
les
push
push
and
dec
rcrl
bound
sbb
and
sub
int3
stos
pop
shr
push
mov
sahf
mov
jmp
mov
or
jmp
imul
push
jb
cmp
push
inc
addr16
movsb
or
push
mov
sahf
mov
cmc
xchg
flds
sti
or
mov
sbb
cmp
movsb
iret
dec
pop
fldt
pop
pushf
xchg
xor
cs
dec
loope
jmp
push
insb
add
fisttps
nop
addb
dec
mov
movl
lods
in
out
add
inc
fisubs
mov
cld
ss
out
cld
arpl
es
hlt
js
popa
fwait
gs
out
fisttpl
inc
jle
pusha
sub
outsb
into
adc
add
in
out
mov
leave
mov
into
sbb
and
push
pop
pop
xchg
and
pusha
movsb
lahf
ret
xchg
jg
stc
fmuls
lds
mov
mov
lock
sbb
jb
cltd
push
sbb
pop
fmull
dec
xchg
push
js
jg
pop
sub
sti
ret
xor
pop
dec
addl
lret
es
cmp
std
add
push
xchg
arpl
sti
mov
and
jecxz
ret
loope
bound
nop
mov
mov
cltd
pop
and
outsb
adc
je
in
ss
fidivrs
lods
out
push
xchg
pop
nop
test
and
loope
cmp
push
mov
xchg
jecxz
or
insb
cltd
push
fidivs
mov
jecxz
out
scas
test
mov
pushl
cld
adc
es
or
mov
xchg
fnstenv
outsl
lock
push
lods
push
mov
call
ss
es
mov
in
xchg
ret
mov
adc
mov
je
cli
jbe
shr
sub
ljmp
lods
mov
xor
stc
add
int
arpl
fs
xor
xchg
cmp
jmp
sbb
add
dec
xor
dec
arpl
ret
xor
xchg
inc
dec
and
mov
jbe
pop
call
std
pop
out
aad
lahf
aaa
ds
jmp
out
mov
scas
mov
mov
cli
mov
push
fisubs
call
jge
mov
ret
adc
xchg
popf
pop
stos
xlat
or
add
cmc
dec
cmpsl
lods
dec
fstpl
pop
dec
xchg
adc
adc
mov
aaa
outsb
in
cmp
lea
lock
out
mov
outsl
sub
scas
dec
and
inc
or
mov
scas
sub
leave
mov
imul
clc
push
and
test
adc
xchg
test
ljmp
sub
dec
int3
sar
imul
cmp
mov
popf
pop
jne
mov
mov
cld
mov
lcall
add
test
cmp
and
mov
adc
sbb
inc
arpl
imul
jge
dec
nop
test
and
int
rep
mov
sbb
adc
add
lock
inc
inc
imul
mov
sub
cmp
cmp
cmp
packssdw
outsb
stos
push
fisttps
dec
mov
dec
cs
add
fimull
jae
mov
adc
cmpsl
lds
and
add
mov
xchg
xor
sahf
jmp
sarl
sbb
imul
in
rcll
movsl
sub
enter
xchg
fisttpl
mov
cld
inc
pop
ja
dec
xor
push
jb
mov
in
add
imul
dec
xchg
mov
enter
mov
test
int
clc
jle
sub
scas
inc
call
sbb
gs
xor
add
push
shrl
mov
insl
dec
xchg
mov
push
sbb
jge
pmullw
data16
push
out
enter
cmp
xchg
pop
pusha
push
adc
dec
or
hlt
fwait
dec
mov
cmpsb
inc
adc
bound
pop
lods
stc
test
or
lods
pop
dec
sti
pop
adc
hlt
xor
dec
push
cmp
add
mov
sbb
sti
bound
ret
stc
mov
fiaddl
stos
inc
adc
mov
icebp
add
and
push
notb
loope
xor
popa
inc
pop
add
sub
mov
stos
lock
xor
test
icebp
dec
call
inc
lds
cmpsb
mulb
iret
add
jb
xor
xchg
mull
shll
pop
ljmp
hlt
mov
out
out
lcall
add
cmp
jge
xchg
into
jge
movsl
mov
xchg
cmc
hlt
leave
movsb
jmp
fmull
adc
nop
xchg
jp
fs
add
gs
or
int3
cmp
cltd
out
xlat
dec
rolb
dec
icebp
lcall
pop
out
fsubrs
xlat
fsub
jg
mov
notb
xchg
sub
fbld
cmp
addr16
sbb
xchg
inc
test
jle
push
and
test
mov
pop
sub
inc
ret
adc
add
scas
sbb
lcall
mov
adc
insl
add
test
lds
cmc
pop
aad
adc
loope
mov
mov
push
aaa
jmp
inc
pop
jle
and
adc
addb
inc
cwtl
inc
cld
insl
pop
cmc
movsb
add
out
addb
sbb
pusha
lods
call
adc
rcl
sbb
adc
cmpsl
pop
lret
jo
loopne
inc
lret
js
iret
inc
xor
mov
jne
inc
stos
leave
rcrb
fwait
jne
fwait
aaa
xor
add
mov
xor
insb
hlt
xchg
ficompl
or
inc
fdivrs
mov
push
imul
jnp
out
or
mov
cmp
pop
mov
idivb
mov
test
pop
addr16
pop
shrb
gs
jge
bound
xor
push
jg
int3
mov
ljmp
insb
shll
cmp
inc
in
push
popa
in
and
mov
pop
not
cmp
inc
fisttpll
test
xlat
xchg
rcrl
and
cmp
xor
dec
xchg
or
int3
pop
lahf
stc
jne
pop
insb
stos
lods
cmp
test
adc
mov
xchg
arpl
pushf
in
shrb
rcl
insb
xchg
pop
mov
push
cmp
hlt
cmpsb
bound
and
and
jnp
jmp
mov
icebp
xor
adc
push
push
lcall
pop
push
sub
dec
pusha
jns
daa
jae
jg
pop
mov
ljmp
xchg
inc
sub
xor
dec
or
mov
add
add
xchg
out
cltd
mov
jle
ret
xchg
call
sbb
in
sub
inc
in
sahf
testl
pushf
icebp
shlb
and
movsl
add
ret
repnz
sbb
ret
pushf
lods
outsl
aaa
cmp
fisubl
pop
popf
lock
mov
add
pop
in
add
repnz
aaa
andl
mov
seta
cmp
fsts
push
in
hlt
xchg
repnz
jecxz
inc
sbb
xchg
jl
or
es
ror
out
movsl
or
xchg
xor
pop
mov
mov
and
mov
mov
sbbb
jnp
push
cs
jmp
mov
fninit
xchg
cmc
sbb
mov
in
int
xor
mov
cmp
lds
add
dec
fnstsw
xchg
dec
das
or
xchg
addr16
insb
mov
inc
jle
loopnew
shlb
push
jns
pop
adc
ffree
mov
push
jp
push
mov
mov
xor
sbbl
mov
out
inc
lahf
pop
pop
mov
jp
jp
das
aas
adc
mov
ljmp
arpl
dec
jb
add
dec
mov
push
jl
repnz
dec
sti
adc
pop
sub
xor
fistpll
and
test
cmp
add
leave
shl
adc
mov
pushl
xchg
dec
push
fcomps
insb
cmp
jmp
jb
fwait
int3
roll
in
dec
loop
or
pop
popa
push
mov
loop
loopne
pusha
xor
add
lods
sahf
jmp
jne
clc
mov
lods
in
jnp
push
or
jae
imul
push
mov
jle
test
sbb
negb
xchg
mov
iret
es
xchg
out
mov
mov
lea
scas
xchg
sbb
cld
gs
cld
push
aad
mov
ficoml
add
popa
ret
mov
pop
ror
sbb
out
pop
and
push
das
ljmp
ss
loop
mov
shr
icebp
mov
inc
pop
bound
test
mov
rsqrtps
in
pop
xchg
outsb
mov
sti
jecxz
sub
push
or
adc
cmp
cmpsl
xor
out
mov
lcall
pop
mov
movsl
and
cmp
adc
mov
mov
push
outsb
xor
inc
add
and
idivb
xchg
std
or
addr16
ffree
int
pop
sub
xchg
mov
add
push
cmpsb
sahf
sbb
or
sub
icebp
mov
imul
mov
test
lahf
std
enter
les
dec
popl
xor
or
ret
sub
sub
aas
xchg
loope
push
stos
ficomps
add
xchg
push
inc
jmp
repnz
jae
sub
in
lods
test
ss
loop
and
movsl
xor
pop
movsb
fsubs
into
std
pop
jg
fwait
out
mov
adcl
popf
mov
and
pushf
xchg
sbb
lret
test
xchg
push
and
jp
sub
mov
scas
iret
call
jno
iret
mov
jecxz
xchg
xchg
in
mov
iret
lods
adc
add
or
push
push
mov
pop
icebp
jle
jae
not
pop
call
das
xor
jnp
outsl
or
dec
je
in
test
xlat
fdivp
sbb
mov
pop
or
jne
mov
mov
mov
scas
sub
dec
adc
jecxz
adc
mov
addb
cwtl
inc
push
jecxz
ljmp
je
jns
push
out
lock
in
adc
scas
and
mov
jnp
cmpsb
jge
jns
lock
inc
dec
push
int
pop
jae
das
out
enter
mov
dec
dec
adc
movb
pop
sbb
stc
dec
mov
loope
mov
int3
fisttpl
aam
or
pop
push
int
mov
mov
aad
or
mov
adc
pushf
lds
shufps
orb
pop
lret
mov
clc
je
dec
je
data16
cmp
nop
jnp
push
push
pop
and
ds
jb
shrb
jbe
dec
fcmovnbe
shlb
inc
adc
inc
add
faddl
and
pop
pop
lock
and
inc
icebp
dec
js
cli
inc
aam
dec
mov
test
lock
addr16
repz
cmp
jge
ds
jmp
mov
shr
jl
xor
xchg
jne
push
dec
cmp
fsub
and
orl
scas
lahf
inc
pop
jb
dec
fmulp
mov
pop
divl
ficoms
and
sub
inc
xchg
xchg
push
sub
cwtl
jno
or
jg
sbb
das
insb
lods
mov
xchg
or
cmp
xor
bound
or
rcrl
arpl
mull
shl
into
fidivl
and
adc
and
cmpsl
movsb
rcrl
pop
pop
mov
cmp
stos
rolb
les
cs
dec
aas
mov
or
jbe
cmpl
push
ret
and
inc
push
and
icebp
ds
mov
push
xchg
mov
sbb
fsts
pop
stos
adc
adc
jbe
mov
scas
out
dec
push
jo
push
mov
out
sub
fmull
xor
jnp
inc
push
in
and
and
inc
in
mov
adc
xor
push
data16
mov
xor
xor
scas
inc
or
testl
lahf
cmp
movsb
andb
push
das
test
std
insb
xor
scas
mov
rolb
pushf
aad
pop
lds
in
roll
cmp
outsb
lds
sub
pop
jmp
add
add
xchg
xlat
loop
js
add
inc
fildll
rclb
cmp
push
fsubl
add
orb
xchg
aas
sarl
add
xchg
inc
inc
hlt
or
dec
xor
imul
adc
js
or
dec
cmpb
mov
js
adc
inc
data16
hlt
outsl
sbb
mov
xchg
or
push
das
mov
mov
in
cld
sub
dec
sub
adc
push
add
ret
mov
mov
mov
xchg
pop
repnz
int
pop
mov
sbb
sahf
jbe
xlat
ss
sbb
jl
lds
mov
stos
scas
cmp
inc
push
mov
add
dec
xchg
mov
sbbb
popf
imul
mov
int
pop
cmp
sbb
adc
jge
sub
sbb
xchg
out
add
mov
dec
into
jb
shrl
jb
in
xchg
jb
xchg
call
and
jns
mov
pop
or
mov
adc
pop
inc
push
inc
adc
repz
cmp
cmc
in
mov
cmpsl
xchg
lcall
adc
jo
xlat
les
mov
jbe
adc
mov
xchg
mov
add
pop
int3
lock
hlt
adc
xchg
mov
or
and
jecxz
test
mov
pushl
sub
sub
insb
xchg
movsl
mov
out
lret
inc
jge
adc
or
pusha
cld
adc
fcompl
and
xor
ja
dec
lea
pop
jg
cmp
sbb
fs
adc
push
leave
in
shll
shrl
xor
push
pop
pop
sub
loopne
jg
rcrl
int3
popf
mov
add
out
enter
adc
inc
inc
shr
mov
cmp
enter
test
xchg
lods
inc
lea
nop
inc
pop
push
xchg
sub
mov
repnz
xchg
stos
adc
adc
aas
test
sub
push
sub
test
push
enter
sub
fdivrp
cmpsb
sub
dec
xchg
or
pop
lcall
cmp
jmp
cld
enter
int3
lods
lret
ja
sbb
fcoml
pop
sar
shr
jg,pn
lock
aad
push
mov
jmp
push
in
popa
push
lret
xor
hlt
mov
nop
js
enter
not
stc
mov
or
nop
xor
js
dec
mov
push
xor
dec
xchg
lahf
aaa
jge
pop
pop
addr16
mov
xorl
mov
ror
xchg
cmp
or
insb
mov
movsb
lret
jns
imul
fimull
pop
pop
xchg
std
hlt
xchg
sti
xor
fisubrl
and
vpshuflw
pop
and
fistps
fnstenv
outsb
icebp
or
dec
andl
push
xchg
jp
addr16
lds
cs
lea
fstp
and
rcl
test
sti
push
lcall
test
scas
test
mov
shrb
jecxz
adc
in
add
gs
popa
cmp
ljmp
mov
out
ja
inc
push
iret
jns
inc
cmp
mov
lea
sub
ret
test
in
repz
push
loopne
inc
sbb
insl
or
fistps
inc
fs
xor
cmpb
loop
lods
sub
adc
jno
xchg
dec
daa
roll
outsb
xchg
repz
xchg
movsb
push
bound
test
lcall
sbb
sbb
dec
cli
dec
jae
fs
jne
aad
lods
sub
mov
inc
cmp
lock
cmp
and
mov
out
icebp
call
fiadds
js
les
aas
aad
sahf
mov
pushf
xchg
cmp
sbb
push
dec
rcr
adc
mov
jmp
out
je
push
jecxz
sub
and
lods
add
mov
xlat
cmp
jmp
xchg
xor
dec
pushf
arpl
fcmovb
jmp
lock
lds
iret
rcrl
pop
sub
push
adc
push
mov
mov
stc
jo
lea
push
test
jb
in
pop
cwtl
pop
cmp
inc
sub
cltd
and
int3
lods
sub
inc
jne
aad
xchg
push
addr16
lahf
sarl
das
adc
int3
cs
push
mov
subb
dec
test
push
cmp
aas
push
mov
imul
sub
into
ja
push
xchg
lods
sub
shufps
repnz
jmp
inc
lods
rorl
dec
cli
add
fstps
orl
and
jo
imul
push
xchg
push
fildl
jne
cltd
and
xor
cmc
mov
adcl
and
cmpsb
popa
mov
cs
pop
in
pop
cmc
lcall
adc
imul
cmp
in
inc
jg
shr
jnp
js
and
jmp
ss
lods
dec
fnstenv
iret
out
pop
adc
subb
cmp
cs
in
imul
xchg
sbb
sub
fcmovnbe
and
dec
jecxz
xchg
pop
dec
bound
int
pop
inc
inc
bound
clc
cli
add
mov
popf
add
adc
cmp
xor
cli
out
dec
inc
icebp
xor
repnz
mov
inc
inc
pop
mov
pop
lret
movsl
shrl
jg
es
lods
rcrb
fs
mov
mov
cs
adc
insl
cmpsb
dec
es
scas
jp
push
jns
inc
xchg
jecxz
jecxz
jmp
xlat
pop
shll
loop
ja
xor
inc
push
leave
lret
inc
mov
push
push
pop
jne
or
sti
stos
sub
push
idivb
dec
mov
insb
sub
les
ljmp
pusha
jbe
int
pop
mov
js
push
dec
lods
popa
fwait
out
ret
cmp
dec
inc
repz
ret
pop
push
es
in
sbbb
sub
in
lret
fcoml
or
cmp
outsb
das
or
add
icebp
in
js
mov
adc
xrelease
cmp
in
ret
add
popa
mov
xchg
mov
rol
ret
adc
mov
int3
inc
icebp
mov
xchg
in
mov
out
orl
insl
lret
int
mov
or
push
push
loopne
notl
jne
mov
test
mov
xchg
ret
ds
cld
ret
inc
out
jo
pop
pop
stc
xlat
out
jb
sarb
in
dec
out
divb
bound
cmc
jo
pop
xor
cltd
sbb
xor
xor
xchg
or
inc
addr16
sbb
fsubp
insl
nop
std
jnp
sbb
sub
and
adc
stc
popf
sti
icebp
pop
enter
std
pop
lcall
mov
and
mov
bound
cli
xchg
or
adc
lcall
test
repnz
mov
cmp
pusha
cmp
lret
jnp
cld
daa
into
cmpsb
imul
jl
shrl
pop
jno
xchg
or
dec
sbb
mov
jns
push
adc
push
push
loope
xor
push
inc
clc
cmp
mov
adc
jl
add
movsb
jo
dec
xchg
inc
pop
insb
cmp
mov
loope
sbb
repnz
and
inc
push
pop
pop
jnp
push
addl
push
pop
mov
js
mov
js
popa
or
add
xor
add
imul
lret
std
inc
fs
fisubs
dec
and
sub
add
mov
jns
std
add
dec
dec
mov
or
cmpsl
fs
jle
mov
loope
int
or
dec
mov
mov
jno
push
scas
stos
cmp
adc
dec
jo
or
jae
out
mov
repz
xchg
jg
jns
xchg
jae
hlt
mov
and
adcl
mov
jmp
gs
xlat
bound
js
repz
or
xor
aam
xchg
mov
sbb
mov
nop
and
xlat
ret
xlat
mov
pop
xlat
and
fildl
sbb
popa
daa
cmp
mov
pop
mov
sub
pop
add
sub
fwait
je
nop
subb
mov
jl
cmpsl
mov
pop
mov
mov
scas
leave
mov
int3
popf
pop
std
cmp
hlt
sub
loope
test
ljmp
clc
xchg
xchg
push
jle
sti
push
and
and
cmpsl
outsb
imul
add
jns
push
mov
and
es
jo
sub
sbb
mov
push
lods
lods
xor
sub
sub
cmp
insl
push
hlt
out
mov
sahf
xchg
lret
jno
shll
jmp
imul
aam
andb
sar
aad
or
cmp
in
xor
xor
idivl
mov
mov
lret
fbld
orb
adc
fs
sbb
pop
je
and
pop
sbb
sbbl
cmpsb
test
mov
xor
and
gs
dec
mov
idivl
mov
ljmp
fnstsw
inc
ret
fs
or
xor
sbbl
mov
out
ja
jae
push
sub
mov
cmp
inc
dec
jns
cmp
cld
mov
push
fisubs
int
outsl
ret
xor
or
cmc
jle
cmc
jmp
xchg
imul
fsubrl
mov
mov
sub
sbb
enter
mov
sub
inc
add
mov
adc
push
mov
xor
jle,pt
mov
sti
fistpl
jns
decb
inc
es
fsub
xchg
insl
mov
xchg
in
sbb
mov
xlat
outsb
add
cmp
adc
loop
pushf
jnp
ret
sub
das
pop
mov
in
cld
out
loopne
ret
jmp
mov
movl
out
xor
bt
rolb
push
cltd
mov
sbb
sbb
int
ljmp
into
enter
lret
push
mov
inc
xchg
xchg
test
sub
cmpsb
sbb
loopne
xchg
scas
sub
push
add
sub
ret
mov
add
loop
mov
test
xchg
adc
push
mov
xor
lcall
fdivrl
dec
add
je
icebp
stos
xchg
inc
rcrl
mov
test
addl
in
mov
enter
add
mov
int
setb
loopne
lods
mov
xchg
in
jne
in
cmp
test
pusha
sub
mov
lahf
icebp
repz
inc
mov
fxch
inc
std
icebp
xchg
jp
lret
addb
dec
pop
scas
mov
sub
xor
xchg
mov
lods
roll
adc
xchg
test
jne
loopne
sbb
imulb
xor
dec
dec
outsl
or
and
mov
dec
pusha
pop
dec
bndldx
sub
inc
test
xchg
in
imul
shlb
insb
les
movl
rcrb
in
push
in
inc
jno
sub
dec
imul
shlb
xlat
arpl
sbb
mov
mov
leave
xchg
dec
mulb
js
sbb
mov
push
adc
sub
arpl
xchg
mov
cltd
jecxz
mov
lret
sbb
arpl
imul
bound
push
push
and
in
or
dec
sbb
mov
add
int3
push
popf
push
je
in
rcrl
jo
movsl
ljmp
xcrypt-cfb
cmpsl
arpl
fistpll
sub
xchg
nop
imul
push
push
scas
sub
mov
mov
scas
xor
aad
iret
pop
cmp
jle
lds
jp
and
pop
jecxz
daa
mov
jno
pop
aam
mov
sbb
pop
xor
outsb
clc
push
adcl
ss
pop
jb
mov
push
and
xchg
pop
out
sub
add
lock
cmp
lahf
push
int3
cmp
out
jno
sub
jl
repnz
mov
inc
mov
dec
repz
fcompl
into
cmpsb
xor
into
lods
inc
test
sbb
sbb
push
cmp
sub
in
mov
sub
xor
sbb
js
sbb
add
test
adc
ficoml
pop
cli
pusha
sub
jns
mov
push
mov
cmc
mov
ja
jnp
lods
jns
xchg
es
inc
jge
fst
mov
pop
lret
ret
and
dec
push
push
lret
test
jb
push
scas
out
fcompl
pop
out
add
inc
sub
mov
push
or
pushf
fmul
fs
cmc
lea
cmp
ljmp
cltd
rcl
rorl
fsubl
add
mov
ja
jmp
fwait
mov
cmpb
mov
sar
cmpsb
mov
mov
pop
movsb
xlat
mov
mov
repnz
jge
jecxz
xchg
and
lea
add
pushf
ret
test
daa
xchg
xor
lea
in
push
mov
xchg
test
pop
adc
push
mov
inc
shlb
leave
lea
lcall
add
jle
cmp
mov
mov
mov
push
nop
mov
ds
mov
mov
pop
dec
or
out
push
ror
repz
fildl
mov
nop
push
sbb
pop
pusha
lret
adc
in
shll
sbb
mov
sub
push
in
sti
lods
es
mov
stc
stos
mov
jbe
mov
jecxz
push
adc
xor
mov
push
pushf
jno
fisttpll
and
es
sbb
lret
dec
adc
mov
add
mov
and
fsubl
or
outsb
pop
pop
jg
outsb
cmpb
es
cld
popf
lds
addr16
inc
ss
in
pusha
out
out
ret
and
pop
jnp
mov
jb
inc
inc
jp
pushf
add
or
jle
mov
and
les
push
outsb
leave
mov
rcll
xor
inc
insb
popa
dec
testb
jle
pop
dec
sbb
leave
pop
xchg
out
mov
cmp
jae
adc
sub
movsb
push
fwait
xchg
cltd
popa
leave
int3
addb
ret
pushf
outsb
test
adc
or
jecxz
scas
icebp
and
testl
ja
pushf
add
mov
push
lds
fbld
and
sbb
cmpb
push
xchg
ret
int3
std
dec
or
inc
fisubs
lods
out
cmp
adc
add
inc
inc
iret
push
cmpsb
sub
and
dec
iret
div
inc
lods
lcall
inc
mov
call
or
sub
fbld
test
xchg
rol
add
inc
push
repnz
daa
mov
aaa
sbb
ret
out
dec
bound
push
int
sti
std
in
leave
daa
push
imul
adc
inc
or
pop
cmp
jecxz
mov
bound
mov
loopne
cmc
sub
movsl
scas
sbb
mov
xor
adc
and
jne
dec
addl
inc
xor
loop
xlat
movsb
das
and
repz
jecxz
add
icebp
inc
inc
add
mov
xchg
sbb
mov
xor
and
jp
iret
sahf
inc
daa
dec
sbb
fstpl
xchg
jns
cld
xor
insb
jne
in
addr16
jmp
cmp
inc
arpl
adc
push
mov
jecxz
cmp
pushf
shrl
daa
adc
or
icebp
and
das
rorl
ljmp
gs
in
movsl
inc
daa
std
and
pop
dec
push
shlb
fisubrl
sub
fnstsw
das
in
lea
mov
pop
movsl
add
cli
sti
xchg
or
hlt
int
shll
rcl
sub
outsb
or
pop
jbe
cwtl
outsb
push
cmpsb
dec
cld
add
test
lods
mov
les
jns
cltd
mov
aaa
ss
sub
arpl
xchg
cmp
leave
mov
mov
ljmp
dec
xchg
imul
outsb
out
je
cmp
or
clc
daa
xor
jg
imul
cmpsb
mov
push
push
adc
cmc
mov
fbstp
int3
icebp
int3
jp
xchg
scas
or
sbb
ficoms
and
jl
and
pop
sbb
jecxz
mov
xchg
mov
cwtl
jle
sarb
test
and
mov
test
adc
or
or
xor
addr16
arpl
mov
sbb
push
subl
fisubs
rcrl
fwait
mov
add
cltd
or
jns
inc
ret
add
pop
adc
jp
adc
pop
fdivrl
adc
insb
add
cmp
dec
aad
stos
testb
xchg
inc
fwait
shll
adc
pusha
movsb
add
xor
xor
pop
data16
mov
fdivrs
mov
decl
mov
stc
jb
sbb
and
xorb
pop
pop
push
in
aam
sbb
mov
pop
xchg
push
nop
movsb
std
incb
mov
sbbb
subl
test
cmp
jnp
cmp
sub
xor
add
or
or
jno
shrl
mov
rcrl
cmp
daa
or
jb
jo
flds
mov
and
scas
jae
rcll
call
inc
or
mov
icebp
xchg
out
fisubs
pop
add
xchg
mov
arpl
jecxz
js
cwtl
mov
pushf
xchg
in
in
jle
andl
push
push
mov
mov
add
test
lahf
bound
jecxz
mov
pop
mov
clc
scas
cmp
popf
xor
mov
jmp
icebp
aas
mov
mov
in
pop
mov
leave
fcom
xor
fwait
cmp
xchg
inc
or
call
add
mov
cwtl
fistl
xchg
lahf
mov
clc
dec
fwait
xchg
sub
lret
push
push
mov
add
iret
lret
adc
jae
inc
mov
test
xlat
subb
scas
cmp
add
xchg
jecxz
mov
jge
imul
aad
ljmp
mov
jbe
ja
inc
and
fisttpll
sub
mov
mov
stos
out
sub
rolb
cmp
lods
arpl
popl
mov
mov
outsl
ficoms
xor
divl
mov
mov
aam
outsl
divb
pushf
scas
mov
sub
loop
or
mov
adc
push
imul
push
sub
loopne
scas
mov
or
movsb
cli
into
clc
pusha
outsl
mov
mov
out
sbb
adc
push
test
jmp
mov
stc
sahf
push
into
or
xchg
mov
repnz
dec
dec
insl
lock
cltd
popf
lcall
pop
push
das
outsb
push
sarl
into
cwtl
xchg
mov
insl
push
insl
enter
or
das
outsb
adc
inc
pop
push
cmp
xchg
jno
in
cmp
out
lods
push
cmp
push
xor
ja
jns
sbb
xor
jmp
mov
rclb
push
cwtl
sbb
pop
int
adc
dec
or
fstp
cmp
cmpsb
std
das
mov
pusha
inc
dec
push
dec
fildll
rcr
fwait
cmc
push
sub
dec
cmp
daa
pushl
aam
sub
aas
mov
and
or
adc
and
shrb
sub
adc
movb
ret
mov
sbb
pop
and
mov
jge
inc
jb
cld
cli
jbe
js
sarb
pop
jle
and
cld
sbb
imul
sbb
call
outsl
and
xlat
xor
lock
push
mov
int3
or
stc
mov
inc
outsl
scas
fcoms
imul
pusha
xor
mov
pusha
ret
sub
out
into
cmpsb
mov
mov
in
cwtl
or
repz
ljmp
fiadds
arpl
aas
iret
lea
mov
push
mov
sbb
aaa
jb
xchg
int3
sbb
pop
aam
pop
imul
cmp
push
outsl
sbb
loop
add
test
jle
xor
cmp
mov
push
jns
orl
roll
add
scas
add
ret
das
xchg
add
daa
push
xor
mov
mov
and
sbb
sub
adc
and
pop
pop
inc
fs
jae
mov
dec
pop
repnz
cmp
jmp
mov
pop
loopne
push
pop
lahf
pop
inc
mov
jle
add
push
cmp
xchg
jns
lahf
cmpb
add
pop
lods
xor
das
push
cltd
gs
fldl
dec
dec
push
mov
push
mov
inc
sbb
imul
js
mov
stos
mov
mov
sbb
aam
pop
push
sub
outsl
or
decb
pop
push
mov
ret
add
jne
inc
push
jae
adc
mov
add
push
and
adc
sub
data16
popa
push
pop
xchg
call
loop
cmp
jg
sub
int
mov
bound
popl
outsl
loop
cmp
mov
dec
sahf
shlb
xor
std
xor
clc
push
jg
fwait
das
xchg
lret
cld
std
popf
jns
inc
inc
xchg
movsb
fildll
mov
enter
shll
sub
push
sbb
inc
push
leave
aam
push
mov
ret
rorb
out
add
cmp
adc
pop
or
add
fwait
mov
jnp
cmpsl
sub
inc
jno
cltd
adc
clc
pop
mov
aad
cwtl
adc
cmp
inc
sbb
bswap
push
into
pop
xor
rcrl
fnsave
xor
xchg
jo
mov
push
lock
xchg
push
mov
mov
gs
push
lods
lret
int3
pushf
push
test
xchg
jb
adc
in
nop
xchg
repz
mov
add
stos
xchg
xor
ss
cmp
aas
das
push
and
xorl
add
dec
sbbb
jl
pop
push
lods
cmpsb
add
lahf
mov
jb
mov
sbb
das
push
rcl
xor
mov
dec
xorb
fadds
pop
add
outsb
popf
data16
mov
jmp
inc
out
inc
lcall
push
inc
cmp
mov
inc
int3
test
inc
cmpsl
adc
add
xlat
jp
sub
push
ljmp
xor
mov
fucomip
inc
orl
lods
outsl
int3
lods
adc
out
xchg
mov
fwait
lods
mov
test
iret
adc
mov
push
jg
ljmp
test
iret
mov
xchg
add
icebp
bound
popa
pop
xchg
leave
and
in
lret
rorl
add
adc
adc
pop
pop
push
mov
insb
sbb
jo
ss
push
xchg
out
xorb
fwait
push
adc
jmp
pop
lea
xor
insl
mov
pop
lds
mov
or
int3
inc
sub
inc
sub
mov
loop
or
xchg
lock
add
pop
imul
pop
fs
xchg
mov
jmp
into
lret
or
adc
icebp
xchg
xlat
rcrb
movsl
mov
inc
mov
cltd
rorl
push
push
lret
sbb
insl
js
xor
xchg
push
or
push
jle
inc
sub
int
dec
xor
cmpsb
mov
dec
pusha
adc
xchg
mov
pop
rcrl
sahf
pop
bnd
or
push
adc
test
and
mov
inc
xchg
mov
add
lds
sbb
push
xchg
test
ret
loopne
jns
mov
aad
xchg
push
out
sub
sub
push
or
xchg
scas
mov
or
leave
jl
push
and
or
mov
jno
jmp
ds
mov
xchg
ds
or
xchg
in
sbb
ja
xchg
shr
ljmp
inc
add
mov
mov
mov
adc
adc
sub
inc
mov
sub
aad
stos
mov
xor
mov
pop
loopne
mov
inc
jns
addr16
cld
or
pop
movsb
sub
add
leave
and
icebp
xchg
jle
mov
ljmp
call
push
iret
xchg
inc
jmp
inc
jle
jae
jo
mul
scas
aad
inc
pushf
add
jns
cmp
xor
cmpsb
mov
jno
jg
test
xchg
inc
add
dec
decl
and
lods
add
arpl
adc
or
push
pop
sbb
dec
jb
sbb
pop
cmpsb
in
lahf
jnp
mov
and
nop
call
mov
ss
adc
cwtl
jl
push
rcrl
mov
movsl
jg
lds
mov
hlt
cld
sbb
mov
pop
in
out
and
xchg
out
js
jmp
pop
pusha
push
adcb
adc
ret
test
mov
xlat
xchg
sub
pop
dec
push
into
xchg
push
fistpll
subb
mov
push
cmp
inc
lods
cmp
mov
xchg
add
and
xlat
pop
bound
dec
lret
push
xchg
iret
mov
divb
adc
dec
rclb
adc
je
mov
fiaddl
xchg
pop
pusha
pop
xlat
mov
jl
clc
js
sub
ficoms
out
testb
fcomps
or
or
add
jbe
lcall
test
ret
sbb
shrb
fsts
arpl
int
lods
test
pushf
repz
pushf
cld
fcoml
cmp
mov
int3
out
shlb
pop
in
repnz
in
or
and
lock
lds
fisttps
jp
scas
jge
insl
pop
xchg
aad
fisttpll
out
pop
xchg
popa
rorb
pop
loop
push
xlat
ds
jb
scas
push
mov
xor
or
cmp
push
xchg
sbb
cmp
aam
cmpsb
pop
clc
xchg
xchg
fs
jp
mov
jbe
sbb
cmp
in
imul
repnz
leave
popa
jmp
scas
sub
daa
pop
loop
cli
sbb
ficoml
push
es
jbe
jmp
les
ljmp
mov
xchg
jnp
add
enter
pushl
and
dec
mov
pusha
fadds
mov
repnz
test
inc
sbb
out
add
push
or
cmp
addr16
outsb
iret
dec
scas
or
sarl
cs
pop
outsl
jge
mov
xchg
stos
lahf
ljmp
adcl
add
imul
repnz
and
insb
xchg
cmc
cmp
and
xchg
std
sub
mov
cmp
and
push
pushf
ret
push
sub
or
scas
ret
xchg
pop
pop
stos
or
cmp
xchg
clc
mov
sbb
jae
or
in
test
shrb
or
jbe
std
and
ret
sub
xor
enter
lcall
movsl
cs
fldl
mov
test
jecxz
ja
jns
add
bound
repz
test
or
and
sub
adc
and
lock
leave
hlt
push
ror
jge
inc
es
lods
pusha
jmp
cmp
nop
or
sub
cwtl
aam
pop
fs
mov
pop
pop
data16
mov
ret
adc
mov
cli
in
fnstsw
xor
mov
test
mov
and
pop
popf
sub
cli
pop
add
sbb
test
jno
loop
cmp
repnz
in
jae
xorb
ds
test
or
sub
ret
cmpsl
jp
jp
gs
test
add
neg
jns
cmpsl
out
pusha
jmp
jnp
testb
ds
cwtl
xor
push
adc
jae
dec
movb
and
js
icebp
mov
xor
inc
in
scas
add
shlb
xlat
pushf
lock
jecxz
jl
cmp
mov
inc
fimull
dec
jb
mov
std
sti
or
dec
adc
mov
aas
sub
in
add
adc
push
xchg
push
das
out
push
inc
stos
sahf
les
mov
xchg
ror
jnp
xchg
xchg
dec
shrb
push
add
fsubl
test
or
push
ret
add
add
jb
stc
outsl
jb
jne
mov
outsb
xorb
jmp
std
adc
aas
iret
pusha
fidivrs
repnz
mov
aas
push
mov
mov
push
lcall
mov
jl
and
fstps
pusha
xor
adc
gs
shr
loopne
and
rcrb
jge
xchg
pop
popa
loope
rclb
dec
mov
fiaddl
je
inc
ss
mov
dec
mov
scas
sub
add
mov
xor
mov
push
inc
nop
fs
or
mov
mov
sbb
mov
roll
lock
inc
mov
jb
inc
xchg
rclb
out
sub
cmc
xchg
rcrl
pop
mov
push
mov
pop
outsl
jo
mov
mov
or
inc
push
aas
cmpsl
dec
nop
push
jge
pushf
sbb
mov
xchg
add
push
mov
stc
in
leave
popa
jecxz
xor
adc
mov
std
fwait
pop
sub
imul
sarl
mov
movsl
inc
push
or
popf
inc
mov
movsl
mov
sub
sub
shll
out
imul
mov
xor
imul
or
stos
jnp
mov
test
inc
xor
popf
cmp
stos
pop
add
jmp
cwtl
js
lcall
out
adc
push
sbb
jp
sbb
pushf
sbb
ret
push
cwtl
sti
outsl
add
and
shrb
pusha
subl
loop
out
cmpsl
inc
test
aam
lea
roll
adc
lcall
subb
mov
dec
or
mov
xchg
jno
push
fnstcw
into
mov
out
aam
ficoms
mov
sbb
mov
lahf
lcall
and
xor
xchg
sub
and
adc
add
cld
add
mov
xor
arpl
mov
and
mov
jmp
dec
jmp
pop
xchg
movsb
hlt
out
das
push
and
test
iret
fs
daa
adc
icebp
inc
jno
je
pop
addb
and
subl
jmp
push
rorl
repz
lret
sahf
mov
and
pop
icebp
pusha
sbb
imul
add
movsl
stos
xor
mov
and
mov
fistl
sub
lahf
mov
xchg
insl
out
mov
push
dec
jge
mov
repnz
sbb
adc
shrb
ljmp
scas
fcmovbe
std
pop
int
mov
push
pop
xor
push
lea
mov
dec
cmp
jmp
pop
jl
fisubl
test
xchg
add
xchg
xchg
pop
cmc
and
push
dec
dec
je
imull
fsubrl
movsb
dec
adc
mov
cmpb
cmp
test
fcomip
jp
test
push
notb
test
push
insb
dec
xchg
shlb
ret
in
adcl
aas
xchg
adc
fnstcw
pop
lahf
outsl
sub
outsl
lods
inc
jmp
jge
sti
pop
jge
adc
inc
push
mov
std
jmp
jmp
aas
inc
sbb
scas
std
lar
ja
test
test
popf
shll
xchg
in
jno
push
and
and
shrl
mov
stos
or
aad
lahf
jne
sahf
aas
es
js
xchg
mov
cmp
jo
fcompl
add
call
push
cmpb
ja
sbb
stos
mov
sbb
notb
fimull
mov
sub
pop
mov
inc
outsb
add
fadd
mov
adc
mov
pusha
sbb
dec
popl
mov
jnp
mov
jne
enter
sub
cmp
pusha
lods
xchg
mov
or
aam
mov
push
gs
or
sbb
xor
andb
mov
dec
lahf
push
das
loop
repz
push
popa
ret
insb
xlat
pop
out
sbb
add
xor
mov
cs
mov
and
in
jmp
mov
dec
push
xchg
adc
enter
in
test
adc
pop
sbb
push
enter
mov
push
aam
popa
mov
cmc
test
xor
mov
mov
sub
pushf
xchg
pop
lds
aam
subb
inc
jns
adc
frstor
adc
das
dec
decb
test
das
xchg
dec
sub
imul
dec
and
stos
or
clc
outsl
jo
loopne
cli
fdivs
mov
pop
lret
mov
cmp
stos
or
mov
test
sahf
lea
bound
int3
inc
inc
stos
test
xor
mov
sbb
mov
leave
es
lea
fs
dec
loope
fwait
or
mov
fadds
push
cmp
bound
mov
mov
cltd
nop
adc
sub
inc
or
add
mov
mov
stc
bound
outsl
mov
dec
mov
filds
jns
push
sahf
jnp
movsl
cmc
andb
stc
sbb
pop
stos
pop
test
mov
fidivl
mov
stos
pushf
cmp
or
cltd
inc
push
jp
cmp
xor
cwtl
mov
dec
pop
jno
adc
push
andb
stc
je
mov
lods
ret
icebp
sbb
dec
insl
sbb
out
xor
pop
arpl
movsb
stos
popf
fldt
inc
and
inc
push
fwait
xorl
cli
mov
adc
mov
ljmp
inc
fcmovnb
in
notb
inc
roll
adc
mov
cs
in
sahf
std
in
xchg
ds
aad
mov
lret
dec
or
mov
in
imul
mov
pop
xor
add
call
mov
add
cmp
xor
js
das
and
mov
mov
int3
push
or
inc
mov
loop
ljmp
xor
cmpsb
std
pop
out
xchg
lret
or
pop
jbe
cwtl
cmp
adcl
fidivrl
cmp
push
xchg
adc
add
lahf
sbb
sbb
js
mov
insl
das
adc
loope
rcr
or
into
cmc
fcoms
inc
movsl
dec
add
jge
pusha
push
pshufw
dec
dec
pop
sub
mov
in
icebp
fsts
imul
sbb
cmpsb
fidivrs
das
mov
xchg
mov
xchg
test
and
xchg
ficoms
lds
and
aam
push
xchg
negb
adc
js
cmc
mov
xor
mov
outsb
out
mov
adc
pop
sbb
insb
andb
push
arpl
cmp
orl
lea
out
mov
test
sar
cmp
sti
mov
in
mov
dec
jnp
fnstcw
repnz
jae
jns
or
dec
into
fsubrs
cmp
dec
mov
imul
lods
xchg
cltd
int3
int
sub
xchg
test
pop
sti
push
je
enter
sub
fisubrl
sub
adc
mov
cwtl
rorb
sub
xor
in
sbb
cs
bound
stc
jle
mov
mov
mov
pushf
sub
test
lcall
ss
rcrl
fists
pop
xor
inc
insl
or
cmpsb
insb
or
mov
imul
mov
movsl
pop
test
fld
ret
dec
imul
les
imull
mov
dec
inc
pop
or
mov
in
stos
push
popa
scas
pop
adc
andb
adc
dec
dec
jo
mov
jmp
jmp
je
jnp
insb
icebp
cmp
jl
xchg
fwait
popf
popa
cmpsb
into
xor
and
ss
jns
jp
ja
gs
fnstsw
jp
aaa
mov
mov
xchg
popa
jge
inc
sub
std
push
adc
push
iret
dec
cmp
aaa
incb
xor
add
fxch
out
jmp
or
mov
or
rorb
push
fmuls
mov
stos
pop
sbb
es
stos
xor
mov
sbbb
shlb
dec
mov
inc
pop
je
add
jne
pusha
das
out
inc
pop
out
push
fs
dec
mov
push
pop
aas
or
dec
nop
dec
and
fldt
mov
xchg
icebp
cmp
sub
cmp
arpl
xchg
dec
sbb
mov
cmp
jae
mov
mov
aas
pinsrw
ss
in
fldt
in
cmpsl
stos
xchg
adc
xchg
mov
jge
fdivs
lock
jmp
cltd
icebp
xchg
sahf
jne
pop
das
cmc
mov
aaa
std
mov
jle
pop
cmpsl
subb
pop
pop
xor
mov
lret
cli
or
add
pop
inc
bound
add
sub
push
movsb
pop
inc
data16
fsubs
and
push
scas
xchg
push
and
adc
dec
scas
push
and
mov
sar
imul
sub
enter
clc
imul
dec
jo
and
mov
fiaddl
fwait
xchg
negl
dec
test
dec
or
bound
push
lods
adc
dec
das
movb
add
hlt
lea
xchg
xchg
xor
outsb
imul
repz
mov
xor
scas
xor
and
cmpsb
stos
jbe
dec
leave
xchg
cmpsl
xchg
cmp
mov
out
jecxz
lcall
sbbb
fidivl
sarl
dec
inc
popa
jne
pop
dec
cli
out
test
lcall
and
stc
pusha
cmpsl
lcall
xor
lahf
add
rorb
test
movsb
adc
cs
nop
test
dec
or
andb
movsl
in
inc
mov
push
shrl
idivb
mov
push
in
dec
xor
mov
mov
adc
sub
cld
inc
mov
inc
ds
mov
lret
xchg
loop
outsl
sbb
and
bound
mov
inc
pop
test
mov
mov
or
pop
popf
je
xchg
mov
popf
repnz
push
fisubs
les
clc
mov
ret
out
dec
adc
hlt
inc
shll
stc
je
imul
out
repnz
inc
mov
dec
bnd
or
mov
pop
clc
fsubr
test
hlt
add
pop
psllq
fists
or
and
int3
cmp
test
mov
pop
cmp
gs
fcomps
leave
or
jno
cltd
sub
inc
jno
sub
dec
jns
push
push
ja
xchg
insl
jb
lock
adcl
pop
lahf
mov
xchg
adc
in
fstps
mov
clc
fiadds
lds
cmpsb
bound
pop
mov
xor
lods
inc
clc
repnz
push
xor
mov
ret
movsl
enter
addl
insb
ss
xchg
inc
or
xchg
push
jb
add
daa
stos
fwait
pop
xchg
cwtl
bswap
push
cmp
inc
or
push
imull
bt
inc
xchg
and
pusha
aaa
inc
push
pop
enter
adc
mov
sub
mov
push
aad
inc
lret
jecxz
xchg
xchg
in
clc
ss
xor
addr16
ds
imul
popf
sbb
xchg
lods
push
sub
jl
std
test
lret
movsl
sub
cltd
or
pop
outsb
repz
cmpsb
cmp
leave
pushf
std
fbstp
es
ss
inc
je
and
je
cwtl
adc
adcl
pop
sub
mov
add
js
jle
pop
or
shrl
inc
xchg
pusha
mov
adc
inc
sbb
mov
cmp
and
lds
xchg
ffree
jge
aas
rcrl
stos
rcr
pusha
dec
push
fcomps
push
aam
fisttps
lcall
pop
icebp
cmp
rcrl
lods
mov
and
mov
es
in
or
nop
stos
in
lods
mov
arpl
push
popl
mov
cmpsl
int
stos
cs
cs
or
test
aad
ret
ret
ret
mov
fisttpl
push
mov
int3
testb
xchg
inc
xchg
jno
mov
aad
sub
xor
aam
call
popf
aam
bound
loope
test
sbb
lock
and
mov
pop
push
fldt
pop
inc
jne
in
stos
outsl
sbb
dec
clc
dec
mov
mov
cmp
cli
lret
lds
xchg
sbb
popf
out
addr16
mov
jmp
and
lcall
movsl
xor
clc
sub
arpl
xchg
mov
pusha
inc
pop
ret
dec
test
mov
insb
repnz
sub
adc
nop
bound
mov
movsl
cmpsb
mov
cmp
or
mov
fcomps
mov
andl
adc
jae
pusha
push
xchg
mov
or
cmc
stos
adc
add
cs
xchg
stos
ret
mov
cmc
mov
pusha
dec
lods
cmpsl
mov
push
outsl
add
lahf
imull
outsb
fimuls
mov
add
outsl
sbb
or
mov
dec
and
push
stos
or
lret
lcall
pop
push
push
xor
mov
mov
mov
pop
lods
nop
ja
pop
push
repnz
outsb
cmp
xchg
fiaddl
pop
jae
scas
pop
pop
xchg
ret
mov
roll
iret
adc
cmp
daa
sbbb
xchg
pop
xchg
mov
mov
popl
jle
mov
xor
jmp
aaa
xchg
push
jnp
jnp
inc
mov
push
push
adc
repnz
add
jg
out
mov
sbb
mov
repnz
adc
xchg
add
jl
jg
xor
lahf
mov
xlat
pop
sub
pop
mov
dec
mov
sub
sub
pop
lods
mov
enter
aas
cmp
ret
push
leave
fidivrl
ss
daa
imul
das
add
push
xor
lcall
dec
cmpsl
out
subb
inc
das
xchg
sti
push
bnd
cld
stos
pop
adc
xor
pop
xchg
fiadds
jle
xchg
stos
adcl
mov
inc
and
int3
into
scas
stc
jbe
sub
push
in
leave
leave
pop
add
add
pop
lahf
mov
inc
mov
icebp
dec
jnp
bound
cwtl
pushf
pop
xchg
cmp
cs
adc
mov
or
stc
lcall
imul
sbb
lahf
xor
jbe
lret
bound
scas
aad
add
mov
pop
inc
mov
shlb
xchg
test
loop
pop
pop
ficoml
jmp
mov
mov
ret
xorb
scas
stc
xchg
jp
iret
cld
movsb
stc
push
dec
mov
lret
push
cltd
add
and
loop
adcw
add
aas
nop
sbb
cmc
icebp
inc
mov
imul
fwait
lock
aaa
adc
lea
movsb
imul
push
mov
test
xchg
gs
jo
adc
dec
gs
subb
xchg
or
out
lcall
or
lcall
fisubl
rep
mov
sub
xchg
insl
jl
xor
push
stc
test
sub
xor
add
fidivl
ja
cltd
leave
cmp
popf
mov
int3
pop
nop
popa
mov
push
xchg
dec
sbb
jl
ret
outsb
push
cmc
std
jg
das
les
stos
and
mov
adc
push
ret
pop
outsl
icebp
and
clc
jae
sahf
out
cmp
push
xchg
arpl
in
xor
pop
mov
jmp
xchg
fnstenv
popa
loope
cmp
push
repnz
stc
xlat
je
xchg
js
pop
adc
fcom
push
xchg
mov
inc
dec
into
stos
adc
rorb
rcrb
pop
adcb
and
pop
dec
mov
popf
pop
mov
xchg
sbb
cmp
lods
daa
adc
pushf
je
out
mov
gs
jne
pop
mov
int3
lods
clc
lods
scas
adc
das
add
repnz
fmuls
addl
adc
test
enter
test
inc
jg
xor
out
add
sbb
sbb
in
orl
out
xchg
lahf
ret
sub
out
dec
fidivrl
daa
out
push
and
add
std
ja
fsubrl
jo
stc
loop
test
mov
aam
dec
mov
addb
ss
iret
lods
ror
add
popa
pop
iret
add
mov
loop
test
xchg
movsb
dec
roll
vpsubb
ret
inc
les
mov
jbe
or
hlt
pop
jecxz
cs
movsb
enter
fildl
shl
add
xor
les
pushf
sbb
loop
out
mov
ss
in
mov
test
fsub
xor
push
pop
jo
addr16
fnstsw
insl
insl
xchg
dec
rcl
lcall
idivl
sar
push
das
icebp
call
les
mov
mov
push
jecxz
aam
out
dec
add
jae
ret
dec
stos
jb
out
jne,pt
loopne
cmpsb
add
fimuls
push
push
imul
fsubrs
sbb
cmc
xor
loope
int
xchg
mov
sub
sub
mov
neg
pop
cwtl
rclb
fsqrt
imul
mov
push
inc
inc
jl
cmp
mov
pop
xchg
push
pusha
test
lret
xchg
iret
mov
or
fisubl
sahf
push
mov
sub
push
ret
mov
imul
mov
push
xor
test
lods
sub
sbb
subb
sahf
lret
pop
sbb
jp
fisttpll
pop
pop
stos
push
mov
cwtl
stos
fdivrl
jbe
mov
test
dec
or
testl
pushf
addr16
inc
jno
insb
mov
je
add
movsl
sub
sarl
pop
xchg
ss
insl
xor
iret
mov
jecxz
dec
xchg
lret
add
test
or
das
push
xchg
xchg
jge
add
xor
leave
idivl
lret
fsubrs
push
pop
adc
xchg
cmp
bsr
push
dec
lock
mov
mov
shr
mov
pusha
decl
in
mov
test
xchg
sbb
mov
pop
dec
lcall
sbb
in
sbb
add
and
aas
or
enter
adcb
xchg
out
test
loop
mov
cmpsb
add
jecxz
imul
and
movsb
imul
mov
mov
cmc
and
int3
lods
mov
bound
xchg
idivb
rol
sbb
lahf
fdivrs
outsb
cmpsb
test
jb,pn
mov
jae
ret
xchg
cmp
jbe
xor
add
mov
cmp
adc
scas
add
lds
adc
js
push
je
jp
pusha
test
cmp
xchg
cmp
ret
cmpsl
jb
pop
iret
adc
jg
jnp
sbb
push
aas
jl
push
bound
out
push
cmpl
sub
push
lods
mov
xchg
inc
gs
sub
stos
cmc
push
int3
jecxz
xchg
pop
push
fadds
inc
or
inc
scas
cmpsb
inc
cmpsl
fisttps
stos
or
ror
std
mov
in
xor
test
adc
jl
cmp
je
push
mov
pop
andb
add
dec
push
jg
xlat
cld
dec
sub
jmp
cmp
dec
loope
xor
push
mov
pop
pop
jbe
loope
adc
lahf
dec
push
jmp
movsl
xchg
rclb
xorl
and
dec
or
sbb
std
es
xor
mov
aam
xchg
sahf
into
or
aam
sarl
pushf
movsl
aad
push
les
sbb
cwtl
nop
xor
popa
dec
in
aam
js
pop
fwait
mov
xchg
xchg
inc
movsl
sbb
loop
sti
push
sti
fs
cli
movsb
ss
aam
inc
mov
cmc
mov
xchg
pop
mov
mov
daa
cmp
aas
sub
lock
pop
mov
nop
addl
call
xchg
jns
mov
daa
sub
movsb
mov
scas
mov
jge
xor
shlb
xchg
push
cld
sbb
sbb
pop
pop
ss
and
and
in
outsb
xor
add
popa
or
mov
xchg
clc
xlat
sbb
ret
shlb
mov
add
ljmp
in
cmpsb
xchg
jae
cs
lea
and
testb
and
mov
stos
ficoml
sahf
mov
fwait
aaa
cmp
pop
popf
sbb
xchg
ljmp
push
pop
adc
pop
je
pop
xchg
ss
stos
jg
fisubs
mov
mov
add
stos
decl
cmp
jp
popa
xor
jmp
and
adc
movl
cmp
mov
fldt
add
push
out
decl
insb
lcall
scas
push
scas
dec
push
mov
clc
and
inc
mov
outsb
jnp
shlb
add
adc
int3
mov
dec
pop
fistpll
sub
jnp
pop
jmp
cmc
mov
aad
sbb
out
in
hlt
xchg
inc
xor
aaa
aaa
aaa
push
mov
fldenv
rol
xchg
in
in
cmpsb
and
push
popa
out
and
mov
cmp
divb
out
mov
xchg
mov
ret
cwtl
sub
popa
push
jae
add
icebp
ds
lcall
fsub
test
test
pop
loop
lahf
int3
test
cmp
addr16
sub
mov
daa
lock
inc
sbb
jmp
fwait
jo
jecxz
pop
outsb
loop
push
lds
decl
pop
or
jbe
xor
jae
pusha
xchg
gs
mov
je
add
mov
lret
enter
or
in
lods
jl
rcll
push
push
jae
mov
loop
ss
stos
xor
push
mov
inc
inc
jle
xchg
repnz
inc
leave
lock
and
addr16
jecxz
cmpsb
xor
xchg
sbb
cmpsb
xchg
bound
pop
pop
xchg
push
mov
pushf
mov
es
push
or
or
add
jg
add
cld
in
jnp
mov
mov
xchg
or
cmpsl
dec
mov
pop
xor
leave
xchg
lods
or
or
daa
ror
sub
stc
stc
xchg
cmp
jp
pushl
xchg
jg
ret
aaa
es
movsb
pusha
adc
pop
xchg
xchg
push
push
xchg
inc
mov
mov
mov
loopne
mov
push
jle
or
in
sbb
jecxz
mov
daa
push
mov
fcoml
mov
lea
test
enter
ret
adc
add
jmp
jno
jmp
mov
dec
push
insl
icebp
mov
addr16
mov
test
xor
pop
test
xor
add
jbe
fisubrs
sub
adc
push
and
xchg
aaa
icebp
cmp
push
dec
movb
mov
dec
arpl
push
push
mov
jg
pop
pop
inc
mov
push
push
mov
adc
mov
jp
test
push
js
aas
jg
in
testb
xor
movsl
das
int3
mov
pusha
imul
sbb
popa
out
sbb
movsb
icebp
je
xchg
xor
aaa
push
jns
mov
aad
sahf
lcall
xsha256
cmpsb
adc
fidivrl
or
stos
pop
xor
outsl
in
incl
out
sbb
int
inc
loop
gs
mov
aam
cmp
les
sbb
jae
psrlq
mov
stos
bound
add
mov
out
adc
lods
or
ljmp
daa
adc
jge
mov
cmp
jnp
sub
in
xchg
pop
pusha
add
mov
pop
fidivl
imul
xchg
loopne
rorl
pop
jge
out
and
push
in
mov
jno
mov
sbb
add
jle
test
ret
pop
pop
jns
movsl
test
mov
fcoml
daa
es
adc
adc
cmp
add
iret
jl
pop
pop
mov
add
xor
movsb
sub
dec
pop
cmp
js
or
adc
cmp
jns
das
or
mov
je
nop
dec
xor
pop
loope
xor
loop
les
bound
cld
mov
les
push
and
mov
insl
jmp
xlat
aas
loop
jp
jmp
stos
cmpsb
psubusw
cs
out
mov
aaa
or
das
jnp
enter
jmp
scas
pop
shrb
sbb
es
and
loop
push
push
jb
aas
xor
stc
rclb
jbe
xor
inc
adc
pop
pop
mov
insb
adc
cmp
jecxz
dec
sahf
jbe
xor
push
imul
stos
push
or
sbb
sbb
mov
xchg
jmp
jbe
push
xchg
jl
mov
stos
int3
in
and
inc
mov
xchg
aas
cmp
hlt
psubsw
sub
std
das
dec
mov
addr16
test
mov
sbbb
mov
lret
lea
xchg
in
pushf
stc
js
cs
sub
adc
shlb
cmpsb
fildl
sti
mov
pop
std
mov
pop
mov
sbb
lods
sbb
lcall
ja
adc
dec
fisttps
jge
fdivrl
fldt
xchg
bound
pop
jne
jns
mov
test
ret
push
int3
daa
mov
adc
bound
pop
jno
ja
jno
or
push
or
cmpsb
jmp
push
xor
test
sbb
mov
imul
popa
jmp
sti
sbb
in
outsl
push
pop
in
push
leave
and
dec
inc
push
push
ss
fcmovnu
xchg
enter
fnstsw
pop
mov
clc
lods
dec
add
xor
enter
adc
fidivl
pop
sub
xor
inc
mov
cmc
adc
enter
push
jmp
add
mov
icebp
adc
jp
aas
mov
les
test
adc
push
movsb
add
xchg
ss
mov
clc
mov
jecxz
or
xchg
or
sub
cmpsb
mov
xorl
pushf
pop
ja
inc
mov
jg
mov
xchg
insb
and
scas
pop
sbb
dec
fmull
enter
cs
sti
rolb
push
sbb
xor
pop
sbb
push
jnp
icebp
pop
sbb
dec
pop
scas
pop
sub
negl
inc
add
mov
jne
imul
xchg
fnsave
loop
jb
pop
and
ret
or
inc
ds
xor
rcl
ja
test
out
and
ja
xor
push
lcall
mov
sub
es
lret
sahf
sub
sbb
pusha
xchg
aaa
rolw
add
dec
dec
sbb
push
sub
push
xchg
cmpsb
jbe
cli
inc
jo
push
arpl
mov
lds
mov
adc
stos
adc
call
xchg
inc
add
lret
jne
in
popf
dec
adc
mov
sbb
dec
dec
mov
sub
int
cmp
fbstp
lret
mov
push
cmp
adc
inc
add
mov
call
int3
insl
mov
lods
adc
ret
fidivrs
out
movsl
mov
vaddsubps
fbstp
ds
aaa
lods
scas
pop
jecxz
or
lods
and
fdivl
into
add
lea
fnstcw
adc
flds
sub
xchg
mov
aas
int
cmp
out
jp
jno
or
test
sarb
mov
outsl
ficoml
cs
push
jmp
outsl
dec
cmpsb
fstl
aaa
imul
cmp
rorb
or
out
and
mov
aas
inc
and
sub
gs
jp
adc
mov
and
mov
push
push
ds
int3
xor
xor
xchg
sub
out
loope
adc
or
mov
fidivl
push
and
sbb
popf
ret
pop
cmp
imul
lock
jbe
cs
xchg
mov
lods
jno
push
and
std
jbe
int
cmp
dec
jge
rolb
cs
mov
dec
fbld
fldt
ja
cli
adc
pop
divl
or
jnp
jmp
cmpsl
push
mov
mov
pop
jns
enter
loope
gs
xchg
inc
add
lods
adc
ret
push
mov
add
movl
dec
mov
loope
push
mov
jne
dec
inc
add
mov
cwtl
int
xor
in
and
inc
in
push
xorl
push
dec
adc
std
ret
dec
enter
push
cmpsb
dec
shrl
xor
push
rcll
xchg
in
shll
dec
cmp
int3
cmp
inc
push
rorl
stc
xchg
sbb
mov
aad
dec
add
ja
pop
mov
push
jecxz
mov
and
pop
out
push
scas
dec
xor
or
dec
mov
add
cmp
cmpsl
inc
nop
stos
sbb
lods
inc
clc
push
push
lock
xor
push
inc
fildll
cmc
cs
int
or
add
ss
dec
mov
mov
rcrb
xchg
sti
int
loope
adc
fistps
sbb
mov
lods
sub
pop
imul
adc
fs
jg
sbb
xor
or
pop
repz
and
aam
pop
imul
adc
adc
adc
sub
fucomp
sub
dec
sbb
and
push
in
int3
mov
and
je
lea
adc
into
mov
jge
repnz
test
add
adc
fadds
imul
cmp
mov
or
arpl
insl
addr16
pop
push
test
add
sub
cmp
xor
iret
pop
in
adc
shll
xor
out
sub
push
add
js
inc
out
mov
add
sbb
mov
xchg
xor
sbb
xchg
nop
jno
aas
cmp
push
popa
icebp
mov
and
ja
in
loopne
scas
scas
pop
les
insb
sbb
cmpb
push
ljmp
sub
add
cwtl
cmp
xor
imul
rcrl
std
xchg
popa
imul
pop
dec
bswap
sub
dec
adc
add
mov
in
dec
testl
pop
mov
popf
dec
jb
and
sub
lea
push
xlat
adc
pop
add
pop
push
stos
jne
rcrl
and
shrl
and
jl
insb
inc
in
dec
xchg
cmp
xchg
out
ja
sub
aas
fbld
xlat
fsubs
or
push
sahf
jne
push
gs
cmpsb
in
mov
sub
outsl
and
in
mov
adc
ss
xor
sbbl
jo
adcb
cvttps2pi
aaa
mov
or
gs
fnstcw
pop
std
mov
in
aam
lock
pop
mov
std
lock
ljmp
xchg
sbb
fs
jl
mov
or
dec
enter
jb
mov
add
cmp
lcall
pop
push
add
jecxz
roll
dec
pop
sub
sarb
movsb
cli
sti
in
scas
push
jp
jbe
loopne
stos
cmp
pusha
imul
cld
jns
mov
cmp
outsb
andb
lcall
aam
pop
and
xchg
xchg
push
or
cld
mov
enter
jmp
and
jmp
or
scas
ja
jno
pop
cmp
sub
mov
or
aas
imul
push
icebp
add
pop
add
cli
mov
xchg
sbb
insl
xlat
aad
xchg
ficoml
cmpsb
and
adc
xchg
add
xchg
adc
mov
pop
ds
or
xchg
xor
push
dec
adc
daa
add
imul
fisubrl
add
cld
gs
push
popf
mov
jno
dec
ret
adc
sar
sbb
in
pop
icebp
scas
adc
dec
inc
xor
adc
adc
addb
fwait
sbb
dec
popa
cmpsb
aam
repz
scas
xor
lock
in
sub
sub
dec
mov
leave
or
or
out
jns
shr
cmc
mov
xor
cmpsb
shll
xchg
inc
adc
and
loopne
cld
and
and
test
arpl
mov
mov
js
push
push
mov
adc
dec
sbb
aaa
sbb
add
sbb
roll
and
ja
cmp
cmp
out
in
shll
jnp
adc
inc
mov
test
jecxz
inc
cmp
mov
and
xchg
std
icebp
icebp
ret
clc
sub
in
add
std
xor
xchg
sbb
push
dec
or
add
xchg
sub
in
cltd
or
jo
and
push
ja
dec
aad
mov
inc
and
cmpsb
inc
mov
pop
insb
jb
and
lock
xchg
fdivrp
inc
mov
movsl
mov
xor
or
cmp
and
aad
jnp
mov
imul
and
sub
stc
icebp
inc
ret
int
aaa
ja
gs
test
out
adc
pop
mov
popf
add
test
jns
pop
cld
adc
mul
pushf
inc
fistpll
fptan
xchg
lods
fists
or
jnp
in
addr16
or
or
and
loopne
out
cmc
stc
lods
sub
add
icebp
lods
into
pushf
unpckhps
pop
je,pt
scas
in
mov
and
call
lea
add
mov
rorb
int3
sub
dec
cmp
push
mov
stos
push
mov
xchg
imul
insb
and
mov
je
lret
and
xchg
leave
aam
shrb
xor
stc
pop
adc
sti
fstpl
fs
int3
adc
mov
sub
sbb
pop
loope
lcall
or
xor
mov
xor
add
cmp
dec
repz
inc
arpl
xchg
int
add
scas
cmp
ds
jg
ljmp
dec
mov
into
jp
pop
loopne
out
stos
mov
lds
add
dec
dec
rcrl
dec
outsb
inc
stc
pop
mov
lcall
xchg
pushf
push
fs
or
dec
xchg
pop
sbb
je
roll
cmp
pop
cmc
dec
pop
sbb
pop
push
in
pushf
jg
sub
xchg
nop
dec
cmp
xchg
lds
jecxz
cmp
rorl
add
mov
lods
scas
cwtl
and
or
movsb
divb
fildl
gs
stos
les
mov
push
and
leave
lock
mov
leave
iret
mov
pop
loopne
dec
and
frstor
sbb
add
xchg
and
mov
aas
inc
popf
into
insl
push
aam
aam
bound
stc
ds
orb
jmp
stos
pop
sarb
xor
es
xchg
adc
jbe
out
lret
sbb
dec
xchg
cli
fwait
shlb
push
mov
lret
mov
lea
xchg
cs
and
sub
xchg
and
nop
cmp
adc
sub
push
and
out
xchg
cmpsl
push
cmp
sarb
or
leave
orb
push
cmpsb
out
aas
pop
pop
pusha
mov
jb
adc
inc
xor
add
outsl
adc
out
pop
pusha
inc
sbb
lahf
inc
mov
cmp
mov
jg
hlt
stos
rcll
popl
jmp
leave
inc
sahf
cmpsl
xor
cltd
int3
lea
outsl
insb
andl
sub
sub
out
movsl
loopne
incb
jp
mov
int
lahf
xchg
test
data16
mov
imul
mov
lret
or
into
lods
push
mov
loop
add
mov
leave
xchg
test
loope
mov
inc
mov
mov
mov
in
xorb
jne
loop
sbbl
ja
xabort
outsl
sarl
imul
movsb
daa
cltd
rcl
mov
sbb
ret
cmpb
jp
xchg
pusha
movsl
mov
xor
or
out
xchg
fs
insb
push
scas
leave
loopne
nop
adc
dec
inc
mov
mov
and
cmpsl
push
sbb
inc
rcr
aam
mov
hlt
enter
jb
imul
shll
fcomps
arpl
xor
fldcw
xor
fidivs
fwait
add
sbb
xchg
mov
inc
xchg
adc
cmp
out
add
xor
xchg
es
add
or
icebp
sti
fisttps
push
push
add
mov
dec
jle
add
inc
mov
dec
test
hlt
add
outsl
cld
icebp
test
in
sub
pusha
dec
or
dec
pop
sbb
mov
int
sub
int
pop
inc
lods
adc
popa
jle
insl
fdivp
mov
scas
test
bound
jno
lret
dec
jmp
adc
sbb
aas
mov
pop
jo
mov
inc
popa
xor
adc
mov
sbb
movsl
call
scas
and
mov
movsl
xor
mov
test
ror
cmc
jp
pop
inc
add
es
dec
fs
pop
rcrb
mov
and
push
das
shrb
lea
test
cmp
fnstcw
out
imul
adc
or
shrl
outsl
aaa
call
jmp
jge
bound
jmp
flds
inc
addr16
or
mov
mov
into
pushf
das
cs
and
enter
or
pop
or
outsb
pop
cli
push
jno
js
ljmp
in
or
sbb
mov
jl
pop
int3
nop
lret
les
ss
mov
push
popf
sbb
pop
mov
into
add
jmp
sub
mov
cmpsl
cmp
repz
jb
xor
movb
fnstenv
lods
testb
jle
shl
pop
inc
fnsave
int3
jle
xchg
mov
add
test
mov
faddl
adc
test
fistl
xor
sbb
cmpsb
icebp
sbb
push
pop
ljmp
pop
mov
xor
jmp
nop
bound
sub
stos
rcrl
jg
lea
sbb
test
repz
xchg
lea
loope
js
xor
xor
outsb
mov
push
sbb
mov
and
iret
hlt
test
mov
fwait
mov
movsb
sub
xchg
lret
push
sbb
imul
cmp
addr16
leave
mov
sbb
fdivp
enter
inc
lds
or
xchg
push
ss
xchg
push
mov
mov
push
rorl
addr16
dec
sub
xchg
mov
aaa
les
leave
mov
jmp
mov
and
fcmovb
fdivrl
mov
or
push
mov
xchg
sub
dec
lcall
cmp
sub
imul
jae
repz
xor
hlt
in
mov
xlat
pop
insb
mov
rcrl
mov
scas
add
adc
stc
sahf
jbe
sbb
and
and
mov
cmp
or
and
jl
rcrl
mov
xlat
test
hlt
inc
mov
bound
pop
test
push
mov
dec
addr16
mov
addb
xor
call
xor
arpl
hlt
rcll
lcall
push
imul
inc
aam
dec
mov
repnz
aas
xor
pop
fistpll
scas
test
je
aad
push
ret
daa
ljmp
lret
add
mov
loop
add
sbbl
mov
xchg
out
rcll
pushf
jg,pn
in
dec
xchg
xchg
fisttps
cli
inc
xor
xor
adc
sbbl
sarb
enter
clc
pop
call
leave
je
mov
incl
adc
jne
or
xor
sar
mov
adc
inc
sub
xchg
push
xor
outsl
jmp
sbb
ds
inc
fnsave
push
add
loopne,pt
sub
test
ret
insb
insl
jno
int
mov
mov
mov
and
pushf
and
sub
xchg
add
lock
and
lcall
outsl
jecxz
jne
lods
xchg
testb
leave
test
pop
fwait
pop
lea
cli
jae
push
adc
mov
scas
hlt
addr16
adc
push
nop
add
xchg
push
add
je
push
cmp
test
jle
xor
adc
nop
addb
fisttpl
jnp
aam
out
lods
lods
movsb
xor
test
cmp
sarb
pop
movsl
ds
jl
add
lret
cmpsb
dec
jl
or
cmc
filds
inc
sbb
loop
icebp
sub
xchg
pop
sbbb
mov
aam
out
push
xor
lcall
js
test
mov
aam
loopne
and
les
jnp
ljmp
div
imul
or
test
aaa
mov
add
mov
pop
sbb
mov
test
shll
lods
inc
push
test
ds
sbb
mov
lcall
sub
jge
push
pop
cmp
xchg
mov
mov
ds
inc
dec
je
mov
xchg
fdivrs
clc
and
cmpb
fcomps
xor
xchg
lock
lea
xchg
js
mov
push
mov
sub
pop
xchg
in
les
outsb
popa
cmp
push
sub
or
or
out
in
mov
pop
popf
jge
insb
repnz
sbb
or
imul
leave
inc
gs
pop
cmp
adc
rcrb
shl
rcr
lcall
mov
push
jmp
out
or
out
or
or
xchg
xchg
jbe
cmp
xor
sub
cmpsb
xchg
imul
mov
int3
pusha
in
mov
jne
aam
shll
adc
pusha
xor
cmp
jno
pop
push
fsubs
cmp
sbb
xor
mov
mov
sar
mov
gs
adc
add
sub
popf
pop
data16
xor
lock
out
je
jmp
xorl
push
ret
push
sbb
cs
mov
jmp
add
imul
fldenv
insl
mov
imul
sbb
xchg
add
arpl
pop
xor
addr16
imul
xor
or
add
cmc
stos
in
mov
pop
cwtl
dec
jae
pushf
and
inc
test
and
inc
enter
clc
cmpsb
push
rol
in
dec
sub
es
rcr
pusha
std
addr16
mov
int3
dec
in
lods
jne
dec
pop
lea
mov
insb
xor
loop,pt
adc
pop
inc
popa
mov
xchg
adcb
mov
and
pop
shrb
lods
mov
out
add
lds
call
cmp
cmp
jbe
xor
outsb
imul
jns
inc
inc
push
add
lahf
push
mov
cmpsl
and
dec
icebp
addr16
int
mov
mov
pop
adc
daa
dec
jle
or
ja
adc
imull
out
jno
push
jmp
xchg
inc
leave
dec
mov
jl
mov
inc
aas
xchg
fs
pop
adc
ja
imulb
outsb
inc
mov
insl
loope
add
orl
pop
push
dec
inc
in
sub
fs
addl
mov
pop
mov
inc
xlat
rcrb
in
inc
add
fwait
dec
push
cwtl
ret
lods
js
rcrb
outsl
jbe
sti
cmp
xor
push
loope
inc
mulb
out
xchg
iret
cwtl
je
adc
out
xchg
jne
mov
pop
jp
cs
and
cs
fwait
mov
mov
jo
jo
lcall
add
xchg
popa
xchg
add
outsl
in
outsb
sbb
adc
sbb
pusha
rcrb
neg
mov
xor
daa
pop
jmp
cltd
mov
mov
out
jno
lahf
jns
das
jg
sub
xchg
or
jg
mov
fstpt
pop
mov
fdivs
insb
mov
push
mov
dec
pop
xchg
cli
push
outsb
in
inc
adc
and
int
in
xchg
fistps
cmp
fs
sarl
stos
or
mov
cmp
jbe
stc
gs
push
leave
mov
xor
push
sti
in
sub
rcrb
adc
pop
push
push
lret
pop
movsl
btr
movsl
inc
sbb
sbb
adc
inc
rorl
cld
dec
push
dec
jnp
popf
xchg
mov
lcall
xchg
jnp
sti
shr
fldt
outsl
std
sbb
dec
mov
fdivrl
out
ret
xchg
lcall
xchg
xchg
cmc
add
cld
jg
pop
add
nop
mov
fwait
test
cmp
shr
lahf
xlat
xor
lods
add
mov
aas
das
mov
lret
add
push
int3
adc
out
int3
insl
pop
movsb
jmp
ljmp
xchg
pop
jg
ror
sub
or
cmp
movsb
jne
andl
ja
pop
and
out
hlt
inc
inc
lods
pop
arpl
movsl
in
popf
test
mov
fxch
jo
inc
xor
push
nop
dec
and
mov
cmp
push
adc
fsubrl
ja
push
rolb
dec
inc
ss
or
push
push
and
xor
xor
roll
cmp
call
lcall
mov
mov
jnp
and
adc
ja
xchg
push
out
sub
aas
mov
push
cmpsb
cmpsl
rclb
into
xchg
cmp
pop
adc
fimuls
fs
int
xchg
sub
fistl
sti
sbb
jns
sarl
inc
movlps
mov
icebp
test
gs
pop
bound
mov
loop
lds
mov
sbb
and
sti
repnz
pop
daa
mov
pop
lods
pop
rolb
addb
push
inc
jmp
imul
jbe
mov
push
pop
jp
and
mov
jbe
fimuls
jns
loopne
verw
push
cmp
lea
and
xor
lret
mov
push
xor
daa
lahf
push
hlt
sub
cmpb
xchg
insb
lods
jmp
jne
in
cmp
movsl
push
bound
mov
push
dec
ret
lods
leave
daa
mov
or
push
addr16
add
jo
int
add
push
dec
iret
pushf
and
cli
mov
jns
cmc
test
enter
adc
inc
push
pop
or
add
mov
and
dec
popl
lds
or
shrb
in
pop
fnstcw
ret
pop
dec
ljmp
mov
lret
pop
movsb
cmp
pusha
nop
push
in
mov
hlt
push
aam
jecxz
fcompl
cli
cmp
dec
mov
repz
push
mov
ss
push
jmp
notl
popf
pop
js
pop
ss
mov
adc
inc
sub
pop
jns
mov
sbb
dec
test
dec
pop
mov
adc
pushf
lret
jge
jnp
lock
iret
ljmp
leave
jmp
loope
or
and
cmpsb
dec
ljmp
push
cmp
fwait
mov
xlat
fcmovb
and
or
and
xlat
ja
xor
mov
dec
push
lods
cmp
jmp
sub
lods
nop
add
or
push
push
outsb
cmp
dec
sbb
in
jo
push
xor
sarb
push
daa
in
jle
dec
lret
bound
test
cmp
dec
mov
mov
or
cli
ret
mov
jb
mov
add
jp
scas
je
jmp
dec
stos
jmp
push
mov
mov
adc
push
or
xchg
insb
fisttpl
scas
xchg
lcall
loop
mov
rcrl
icebp
and
and
sbb
aam
cmp
mov
popl
xlat
daa
jbe
pop
push
and
data16
adc
dec
outsl
pop
iret
bound
and
xor
xor
cwtl
dec
jge
push
jb
and
out
mov
sub
xor
pop
cld
stos
dec
jle
jl
jbe
dec
mov
xor
mov
fs
fldcw
dec
out
push
test
cli
test
push
into
and
pop
pop
xorl
ss
jle
and
enter
fisubrs
mov
jg
jge
push
cmp
sbb
insl
push
mov
hlt
lcall
mulb
sub
out
cmp
loop
es
cmp
fs
xor
inc
sub
push
gs
and
aas
ds
out
push
pop
add
add
push
dec
jnp
rcr
cmpsb
and
adc
dec
push
sbb
push
lds
roll
in
jne
or
insl
fldl
cmp
mov
or
std
or
xchg
xor
push
sub
hlt
lcall
mov
iret
inc
shlb
test
mov
dec
jl
mov
cmp
jnp
sub
scas
jns
xorl
cmp
ds
notb
xchg
sub
je
jnp
push
mov
pop
jno
sub
cvtpi2ps
pop
scas
adc
mov
lea
push
cmp
int3
pop
clc
jbe
dec
lds
sbb
icebp
jae
enter
scas
pop
xchg
call
data16
lds
mov
pop
xor
in
pusha
bound
mov
adc
xorl
ljmp
stc
and
out
push
ss
mov
and
mov
cmp
adc
push
or
mov
mov
lock
int3
xor
adc
jbe
mov
push
pop
icebp
jmp
push
cld
jnp
mov
jb
xchg
xlat
inc
pop
dec
or
es
rcl
into
nop
je
in
adc
sub
ficoml
std
stos
fdivr
inc
adcl
mov
xor
cli
jge
xchg
repnz
xchg
divb
dec
adc
adc
mov
xor
imul
rcrl
je
dec
cmpb
lods
jg
pop
push
and
cmp
in
and
loope
dec
faddl
sub
jne
addr16
test
xorl
jns
lock
iret
and
adc
loop
xchg
ret
ljmp
addr16
repnz
lret
fadds
and
shlb
dec
lret
aam
xchg
inc
les
mov
lods
xchg
push
jl
out
cmpsb
jne
xor
mov
mov
cmp
stos
incb
or
daa
test
ljmp
std
xor
dec
jnp
mov
pusha
mov
mov
shlb
inc
jl
mov
pop
imul
mov
push
and
mov
call
js
stc
push
jo
sbb
xchg
nop
lahf
jb
adc
dec
movsb
out
jb
sbb
xchg
push
fisttpll
pop
cmc
bound
outsb
push
fldt
pop
nop
out
fisubs
hlt
xchg
std
pushf
outsl
repz
fsubr
add
cmp
test
pushf
cmp
push
inc
mov
inc
icebp
cli
cmp
mov
add
or
popa
sub
mov
aam
arpl
pop
insl
jmp
out
mov
loopne
test
fisubrs
push
lea
and
insb
stc
cltd
push
inc
fidivs
push
repnz
insb
mov
push
stos
pop
xchg
cli
addb
push
movsb
mov
repz
push
push
jnp
jge
pop
mov
sahf
insl
jns
jge
gs
sbb
cmp
jmp
and
pop
imul
cmp
outsl
sbb
or
push
mov
ss
jns
cmc
mov
stc
scas
cs
icebp
adc
fsubr
mov
push
xor
add
xor
xchg
pop
stc
movsb
xchg
jmp
lea
loope
dec
das
mov
test
xor
inc
stos
into
pushf
int
sbb
mov
dec
pop
subb
aad
or
ret
push
orb
loop
inc
movsb
sbb
dec
inc
dec
xor
mov
stos
jae
inc
sbb
mov
mov
repnz
rol
mov
call
lods
jne
lods
ret
fcoml
stos
les
pop
cld
jo
mov
stc
cmpsb
stc
or
inc
int3
mov
sub
sbb
in
add
xchg
jns
arpl
dec
inc
xor
inc
mov
das
push
enter
clc
jge
cmp
sub
pop
or
mov
aas
inc
mov
inc
mov
aad
into
pop
aas
jle
enter
pop
inc
and
test
inc
js
sbb
xchg
hlt
and
iret
out
mov
lock
xchg
fiaddl
jle
cmp
cmc
popf
jle
jle
cmp
add
je
jle
popf
loopne
nop
fcom
sbb
jmp
mov
outsb
repz
xor
jge
pop
jb
aaa
or
inc
in
and
mov
jmp
push
push
outsb
cmc
sahf
int3
pop
xchg
test
mov
jl
jns
adc
ljmp
outsl
iret
loopne
repnz
and
inc
aad
cltd
add
addr16
cmc
sub
rorb
movsb
add
call
sbb
outsl
stos
adc
ret
lahf
neg
and
sti
call
adc
pcmpeqd
movsl
xchg
jg
xlat
mov
int
mov
aad
sbb
xor
mov
in
or
les
insb
icebp
pop
jbe
dec
test
xor
pusha
jb
sub
adcb
lcall
loop
mov
mov
mov
test
and
pop
lods
sub
movd
movsl
cmpsl
add
add
lahf
push
pop
cmp
aas
punpckldq
scas
push
sti
dec
sbb
ficoms
mov
jnp
cmpsb
addr16
mov
and
cmp
je
pop
daa
add
add
bound
orl
fimull
std
jne
insl
jge
fcom
adc
pop
jle
cld
jecxz
mov
fs
in
or
inc
repz
fildl
das
fidivrl
pop
stc
sbb
shl
popf
ret
jecxz
lods
push
pushf
lret
enter
ds
ret
sarb
pop
xorl
mov
addl
stos
aaa
ds
mov
notb
cwtl
insl
push
or
stos
mov
jmp
mov
sub
mov
ljmp
dec
popa
rdtsc
daa
mov
xlat
aas
pusha
xchg
cs
lret
stos
clc
iret
sub
mov
push
push
push
sub
and
cmp
sub
adc
mov
push
push
and
jb
clc
adc
xchg
mov
adc
sub
loope
jge
orb
mov
repnz
sub
push
mov
cmpsb
cs
enter
es
xchg
gs
stc
xlat
movsl
xchg
sub
pop
push
lret
popf
test
ss
mov
rclb
out
sub
xor
push
cmc
fst
push
in
ds
xchg
adc
pop
ss
ret
lret
inc
add
insb
mov
movsb
push
std
and
lcall
mov
add
or
popf
cli
inc
xor
push
and
jl
push
or
jmp
push
mov
push
shll
fcompl
jnp
pop
in
lret
or
adc
ss
mov
popf
inc
aad
xchg
add
jge
mov
xor
stos
arpl
inc
jo
and
sub
daa
xchg
fcmovb
pop
mulb
lods
mov
pop
lret
fwait
stos
mov
daa
xor
je
lahf
xchg
mov
mov
jns
and
push
mov
jmp
mov
sbb
cmp
xlat
mov
adc
fstps
mov
hlt
data16
lret
sbb
pop
je
jmp
inc
imul
mov
sub
jge
pop
jbe
iret
rolb
inc
sti
push
mov
mov
pop
jnp
ffree
push
or
dec
push
mov
dec
xor
shll
ss
arpl
ljmp
xchg
insl
test
repnz
mov
fsubrl
enter
insb
jb
stos
push
inc
pop
or
lods
les
test
xor
jmp
test
sbb
adc
inc
adc
xor
jnp
xchg
jno
jl
or
enter
cmc
icebp
popf
stos
mov
out
mov
ss
icebp
data16
repnz
sub
das
and
and
and
aas
push
pop
pop
mov
jmp
cmpsl
test
repnz
push
push
push
dec
push
push
inc
push
pop
adc
or
fbstp
lret
cmp
sti
jge
outsl
rcrl
adc
xor
cmp
sbb
mov
add
mov
jae
pop
je
dec
ret
stos
and
stos
dec
cmp
out
jno
cmpl
cmpsl
inc
mov
arpl
xchg
aaa
jmp
js
test
adc
push
ja
popa
xor
push
movl
dec
or
cld
fdivrs
lea
aam
or
or
adc
sarl
pushf
inc
push
rclb
into
and
stos
enter
and
sub
jnp
out
out
lods
outsl
pop
in
sahf
dec
push
lods
push
xchg
testl
sub
and
call
push
and
sbb
xchg
cs
fldenv
stos
mov
and
pop
sbb
loope
or
mov
std
std
ds
outsb
lret
sub
divl
clc
push
mov
pop
or
mov
jb
cmpsb
or
filds
xchg
je
dec
mov
popf
scas
push
cmp
cmp
cmp
cli
mov
inc
test
push
dec
push
lea
pop
xor
push
aam
cmpsl
xlat
mov
out
push
sub
test
sarl
and
push
enterw
and
out
outsb
jo
cmpsl
das
adc
and
jbe
testl
lcall
scas
pop
mov
sbb
xor
dec
add
dec
cmp
orb
mov
ds
stos
pop
cs
sbbb
jg
and
sub
aas
adc
adc
ss
inc
xlat
xor
icebp
ds
jmp
out
add
sbb
mov
ljmp
out
pusha
or
nop
pusha
rorl
repz
push
iret
mov
scas
jp
cmp
ret
and
dec
xor
fs
and
dec
loop
int3
mov
jne
sti
push
pushf
imul
daa
in
ds
sub
xchg
xchg
das
sbb
cltd
jge
push
mov
cmp
xor
and
fwait
adc
out
dec
jnp
cltd
fwait
fwait
mov
std
sub
mov
mov
sub
xor
jne
mov
aam
mov
sahf
stos
xchg
mov
repz
popa
xchg
nop
cld
pop
mov
notl
pop
inc
pop
inc
mov
sbb
insb
pop
pop
and
jecxz
stc
fmull
adc
sbb
mov
pop
lods
or
push
aam
and
push
and
rcl
mov
movsb
xchg
fistpl
sbb
pop
jae
loop
popf
inc
xlat
mov
inc
cmp
lcall
sbb
cmc
ds
pop
lds
jle
fstps
popa
movsb
insb
call
push
cmp
jl
adc
arpl
lods
sti
xchg
pop
sub
call
and
pop
js
or
sbb
xchg
push
xor
adc
dec
and
iret
jl
inc
les
pop
inc
cs
cli
rcrb
aas
mov
ret
gs
hlt
add
stos
or
sbb
sub
das
sub
add
sub
stos
je
mov
ss
aaa
mov
loop
dec
push
pop
sbb
jbe
test
leave
enter
mov
fbstp
iret
es
sub
sbb
jae
jae
cltd
sti
mov
sbb
pop
sub
mov
iret
pop
mov
aad
lret
add
aam
and
mov
arpl
addr16
inc
mov
mov
push
out
mov
jg
or
jg
or
pop
test
pop
xlat
cmpsl
gs
pop
dec
inc
jae
test
mov
imul
stc
lahf
cld
lods
xchg
adc
xor
int3
sub
add
or
test
add
ja
mov
addr16
xchg
inc
gs
cmp
pop
je
add
push
pop
arpl
enter
push
push
add
pop
mov
gs
mov
pushf
js
jne
cld
fistpl
sbb
xor
pop
add
dec
lods
xchg
push
dec
dec
mov
dec
pop
cmc
pushf
mov
outsl
sarl
xor
inc
pop
sub
loop
pop
faddl
cld
aad
jb
adc
fsub
sarl
xor
add
jnp
or
xchg
jo
and
addr16
add
aad
leave
loopne
scas
dec
inc
jp
addl
dec
and
cmp
jbe
dec
sub
fisubrs
out
mov
pushf
mov
cmp
popa
or
loopne
lahf
pusha
sbb
cld
jle
out
shll
in
push
pop
sbb
sti
fnstcw
in
sti
or
test
add
stc
xchg
mov
sahf
out
ja
sahf
xor
push
xchg
mov
imul
lcall
xor
mov
imul
les
pop
xchg
add
mov
orl
int3
fidivrs
mov
inc
mov
into
subl
push
inc
outsl
loop
mov
fxch
jae
xchg
lea
mov
imul
imull
pushl
icebp
pushf
into
stc
and
pop
or
pop
mov
ret
leave
jmp
mov
insl
sub
sbb
mov
das
inc
xchg
test
lea
jge
mov
sarl
data16
inc
push
sub
inc
rolb
jb
scas
mov
jmp
or
mov
in
ja
jle
stc
mov
sbb
sbb
sti
mov
insb
pop
adc
mov
jb
sbbb
nop
test
xchg
xlat
pop
xchg
inc
or
pop
cli
loopne
gs
dec
mov
mov
add
loop
or
add
adc
popa
cmc
xchg
stc
jmp
daa
add
pop
xor
lret
cmp
popa
mov
rcrb
lcall
cli
mov
out
and
lahf
push
neg
shr
xchg
mov
outsl
scas
cmpsb
mov
pushf
mov
mov
scas
lock
sarl
loop,pn
jnp
xorb
adc
sub
stos
sbb
fwait
xor
es
jns
into
mov
mull
out
mov
in
mov
push
sbb
or
dec
sbb
mov
testb
clc
pop
imul
test
scas
sbb
mov
lods
cmp
xor
cmpsb
movsl
mov
rcr
xor
test
stc
and
push
inc
int
adc
testl
test
int3
mov
mov
outsb
jmp
xchg
loop
aaa
sub
sti
test
mov
cmp
cmp
repnz
lahf
or
jmp
gs
fsubs
push
loopne
insb
adcb
xchg
bnd
cmp
jno
stc
pop
fstpt
cld
ret
sbb
icebp
or
stos
in
mov
sub
ret
call
push
rcpps
outsl
lret
jbe
cld
xor
jmp
and
mov
shlb
sub
add
mov
or
in
and
lcall
cs
mov
mov
pushf
cmp
xchg
xor
xor
lods
sti
pop
add
mov
xchg
movsl
dec
movswl
jb
mov
xor
pop
std
jle
repnz
clc
setno
xchg
adc
mov
dec
lret
iret
fisttpll
and
sahf
ret
std
aad
mov
fistl
popw
nop
xchg
fidivl
add
out
aad
xchg
loopne
pop
push
jp
stos
clc
inc
or
outsb
ljmp
nop
dec
sbb
popa
mov
add
inc
adc
insb
mov
test
jo
xchg
outsl
push
sub
push
xor
and
pop
shrb
iret
cmp
addr16
xchg
test
ja
ljmp
lods
int
fsubl
mov
dec
mov
pop
aas
pop
jae
or
test
roll
and
fcomps
add
pusha
clc
xlat
leave
inc
mov
imul
incl
rclb
pop
and
mov
jmp
pushf
jl
inc
dec
filds
mov
rcr
push
roll
xchg
cld
cmp
mov
arpl
scas
jg
mov
pop
sub
jmp
inc
jge
inc
dec
add
test
xchg
pop
mov
fmul
sti
or
mov
push
jmp
mov
inc
sbb
lds
jb
push
mov
in
shrb
mov
dec
xchg
cmp
hlt
inc
lods
mov
or
ss
cmp
cwtl
fdivr
stos
lret
mov
popa
mov
fiadds
pop
mov
xlat
inc
add
sbb
fildll
pop
cmpsl
sub
pop
shlb
or
js
loope
push
fidivrs
sahf
hlt
xchg
es
push
js
or
data16
mov
das
mov
cmp
jp
or
jbe
imul
mov
dec
js
mov
shrl
or
aaa
or
cs
std
pop
mov
pusha
sbb
stc
add
movl
ja
cs
daa
inc
insl
in
jmp
outsl
cli
fisubrl
cli
inc
or
xchg
sbb
xor
mov
fwait
jo
loop
jnp
xchg
cmp
fmull
mov
loop
push
or
add
imul
cmpsl
rcl
push
call
das
mov
add
cs
ds
xlat
push
popf
pop
fstpl
dec
jno
jne
pop
lods
test
scas
xchg
add
jp
adc
ret
adc
xor
aad
adc
cmp
rcrb
adc
mov
or
leave
sti
pop
pop
call
xchg
test
ret
adc
in
sarl
or
hlt
cmc
xchg
mov
cld
add
mov
icebp
lret
cmp
inc
sub
ret
lock
xchg
jge
jecxz
jmp
lahf
inc
dec
mov
iret
adc
call
cs
mov
lret
jp,pt
mov
ljmp
rclb
rolb
adc
adc
sbb
sub
ja
lea
push
or
mov
push
test
jb
je,pt
cmp
inc
loopne
mov
stc
stc
hlt
js
cmp
ja
imul
sub
add
sarb
or
arpl
sbb
popf
inc
xor
inc
sub
and
xchg
gs
sub
rcll
push
jo
and
dec
test
std
mov
adc
cmc
add
mov
mov
push
aas
adc
stos
pop
cmp
push
xor
sahf
push
daa
pop
cmp
jmp
clc
cmp
insl
xlat
pop
mov
cmpsb
or
fwait
nop
rcrl
dec
cli
xchg
adc
scas
pop
bound
dec
cmp
outsl
jae
xchg
cmpsb
fsubl
and
out
into
lahf
xchg
mov
jp
cltd
jl
ret
outsb
cmp
aad
movsl
xor
inc
fadds
loopne
out
inc
arpl
rcrb
push
rcrb
mov
fldt
aas
mov
mov
rcll
lahf
pop
push
je
scas
pusha
iret
dec
mov
fists
stc
dec
push
and
jge
pusha
xchg
sbb
mov
add
hlt
mov
push
mov
movsl
xchg
fisubl
dec
dec
in
mov
dec
popf
mov
shll
xchg
pop
int
cmp
cmp
dec
mov
fstps
out
or
ja
test
or
es
xchg
addl
hlt
insb
pop
adc
xor
jno
pop
jb
fucomip
mov
mov
push
insl
mov
or
clc
or
xchg
fmulp
push
pop
ss
loopne
pop
jl
lret
shl
stc
mov
mov
adc
jo
loop
mov
pop
push
and
push
push
push
adc
mov
mov
mov
push
test
add
or
or
test
jmp
ds
decb
in
push
mov
jecxz
sbb
in
adc
push
imul
cli
pop
mov
popa
ds
rcll
orl
push
mov
dec
gs
movsb
shrb
sbb
mov
daa
and
pusha
out
sbb
sbb
jmp
shlb
inc
ret
icebp
dec
mov
mov
mov
popa
addl
jmp
mov
jp
jle
out
mov
pop
popf
dec
jb
push
jmp
dec
inc
repnz
xor
in
mov
pusha
mov
daa
cmp
inc
les
cs
push
aaa
xchg
mov
jne
aaa
mov
testl
decl
xchg
lcall
insb
adc
lret
cltd
pushf
out
pop
cmc
sahf
test
sub
push
ret
hlt
pop
jno
js
jmp
jp
mov
add
in
xor
inc
xor
jne
add
mov
mov
push
xor
andl
fists
xor
ret
shrl
xor
roll
or
mov
adc
ret
mov
sub
xchg
pop
repz
mov
aad
and
insl
sbb
outsl
fs
lods
sub
mov
testl
test
lea
add
sbb
call
adc
mov
int
out
and
pop
xor
mov
ss
out
and
les
gs
pop
add
adc
xor
sub
lcall
xchg
xchg
lods
xchg
js
test
in
das
cmp
pusha
rcrb
push
decl
or
mov
mov
xlat
sbb
dec
call
das
xor
mov
pop
stos
jle
sub
mov
repnz
test
cs
movsl
push
cmp
xlat
sbb
sahf
xchg
nop
dec
mov
ds
stc
jp
push
dec
scas
out
sub
ds
rclb
jbe
dec
sub
ret
aas
fldenv
xchg
pop
dec
insb
mov
pop
and
ret
lods
fcomi
xor
or
jae
mov
mov
int3
imul
mov
inc
test
pusha
cmpsl
mov
lods
les
addr16
data16
cli
bndldx
mov
xchg
je
push
ja
push
arpl
out
inc
cld
fisttps
or
or
stc
and
push
test
fwait
xor
jae
and
xor
movsb
add
sbb
bound
neg
insb
jo
push
shlb
mov
mov
rcll
notl
loop
popf
cmp
jl
push
popf
int3
popf
test
dec
pusha
leave
stc
test
add
push
and
dec
mov
jle
or
mov
add
sbb
lret
into
bnd
repz
mov
into
mov
mov
pop
shrb
push
mov
incl
out
out
xchg
into
fcomps
and
in
out
xchg
ds
bound
pushf
pop
bound
xchg
sbb
pop
jbe
or
pop
aam
sub
sbb
mov
fabs
stos
push
dec
pop
inc
adc
stos
fsts
mov
outsl
xchg
mov
pop
add
movsb
mov
add
adc
xor
sub
jae
pop
cmpsl
cmpsb
sbb
lds
es
pop
pop
int3
inc
fmull
jmp
js
dec
adc
fcoms
jbe
or
les
push
jo
insb
mov
jp
lea
imul
jmp
aaa
xor
bound
jno
mov
div
sar
inc
test
jae
push
pop
mov
loopne
xchg
jns
pop
into
lcall
addr16
jae
dec
sahf
mov
iret
jo
in
inc
lods
sbb
pop
and
xlat
daa
scas
cltd
xchg
sub
push
push
cmp
into
jge
push
fildl
pop
sub
fimull
clc
lret
addr16
mov
mov
rcll
mov
xor
insl
dec
cmp
mov
mov
cs
sub
pop
xor
ja
mov
pop
imul
inc
movl
xor
inc
frstor
enter
aad
add
aaa
jbe
in
testb
mov
mov
mov
pop
into
imul
push
stc
movsb
lret
mov
rol
jge
pop
push
sub
rorb
push
push
js
test
addr16
cwtl
adcb
and
sub
push
xchg
xor
inc
popf
iret
in
adc
mov
inc
mov
aas
aam
je
mov
addb
out
imul
daa
lock
inc
xor
cmpsl
dec
mov
dec
push
fstpt
inc
dec
repnz
loope
push
daa
adc
add
and
std
sbb
je
aaa
push
std
adc
jnp
stc
push
mov
js
push
aam
xchg
jmp
cmp
or
add
int3
push
cmp
cmp
mov
inc
push
fsts
imul
lods
sbbl
add
sub
mov
mov
lahf
or
lahf
outsb
loope
xlat
sub
in
jecxz
push
push
mov
jae
inc
dec
push
pop
jecxz
in
into
push
pop
leave
push
cmc
mov
test
imul
sbb
xor
scas
rol
mov
scas
test
fiaddl
ret
repz
movsl
loope
sarl
movsb
pop
test
cmp
repnz
in
cwtl
pop
mov
jle
leave
arpl
dec
dec
sub
cmp
sub
inc
lahf
adc
mov
popf
ret
cmpsl
push
cli
mov
stos
xchg
outsl
out
push
into
mov
sarl
lret
cltd
aad
jae
xchg
test
shrl
aas
mov
test
fisttpll
out
fdivrp
jle
fisubrs
sub
sbb
cmp
fs
xor
inc
mov
cmp
jbe
je
lds
mov
negl
cmpsb
dec
stc
inc
ret
cs
in
gs
iret
pop
insb
cmp
loope
xor
push
jecxz
lea
adc
jge
push
mov
inc
sub
cmp
and
inc
mov
ficoml
mov
sub
aam
mov
dec
push
and
pop
jb
sbbb
mov
sbb
jmp
xor
testb
or
push
dec
xchg
mov
movl
dec
push
jecxz
sbb
lea
lods
mov
inc
mov
jae
mov
mov
mov
dec
mov
inc
cmp
int3
mov
xchg
fisttps
or
dec
and
cmp
ss
insl
mov
jno
stos
adc
pop
scas
cmp
inc
dec
mov
push
rorb
shrb
and
mov
cmc
xchg
mov
pop
xchg
test
out
test
test
add
mov
sub
aas
add
sub
xchg
repz
in
mov
push
xchg
js
dec
scas
fbld
ret
rep
xchg
pop
cmp
inc
or
imulb
add
aaa
jg
sbb
mov
int3
jg
mov
pushf
and
je
sbb
movsb
or
inc
rcrl
push
push
int
sbb
jne
add
aam
fdiv
cmpsl
or
sbb
jne
cli
inc
xor
and
dec
mov
je
mov
mov
jecxz
dec
cmp
int3
daa
hlt
mov
repz
repz
or
fbstp
push
das
dec
lcall
cmp
adc
imul
mov
imul
sbb
jp
jp
clc
or
jne
bound
cmp
ljmp
in
push
push
fs
fs
mov
test
push
xor
clc
add
mov
lock
cmp
push
lds
adc
imul
inc
push
out
fucomip
stos
cmp
out
lds
test
xor
lcall
cmp
inc
bound
mov
ja
push
xchg
mov
mov
mov
aas
xchg
pop
dec
stos
or
dec
push
jae
js
fimull
inc
fistpll
lea
inc
dec
push
ss
out
mov
movl
arpl
bound
mov
repz
rorb
decb
imul
mulb
mov
lock
mov
out
fcomip
clc
jns
sti
inc
popa
sub
ja
lret
pop
xor
in
into
fwait
inc
push
outsl
out
xlat
fstps
xchg
dec
int
and
cmpsb
push
xchg
mov
add
xchg
xchg
jmp
imulb
and
shlb
mov
in
divl
nop
pop
pop
add
pop
popf
fdivs
push
cmp
sbbl
lds
dec
and
sub
push
xlat
imul
dec
jle
test
rol
cld
in
mov
aam
nop
xchg
cmp
mov
fimull
push
lods
add
cwtl
fisubs
call
sbb
fnstcw
rol
nop
dec
jmp
or
imul
movsl
mov
fcmove
and
mov
sahf
and
jnp
lret
jecxz
or
inc
push
adc
adc
push
out
xchg
mov
pop
jge
xchg
cli
xor
xor
mov
sub
lock
movsb
mov
loop
inc
jge
jg
iret
lock
xchg
sub
test
mov
nop
jl
lcall
push
jbe
int
mov
ljmp
cmp
dec
jmp
dec
adc
sub
mov
es
in
repnz
add
and
idivl
add
mov
in
out
scas
testl
and
rorl
sub
stos
test
jge
jg
sub
sub
fildll
and
icebp
add
mov
shrb
aas
inc
xlat
cld
inc
pop
insb
push
rcrl
add
cwtl
xor
xchg
jmp
cli
or
sbb
mov
xchg
in
psllq
mov
fstps
in
push
mov
adc
dec
in
aaa
out
mov
jo
hlt
dec
mov
lods
jecxz
add
mov
imul
xchg
or
enter
outsb
dec
mov
out
fisubrl
out
in
add
stos
es
shlb
xor
sbb
pop
lret
jo
daa
ja
lods
and
ffreep
lahf
insl
cmp
aas
mov
or
mov
mov
sbb
cmp
push
pop
mov
cmp
jmp
lock
cmp
scas
push
inc
and
push
mov
iret
inc
icebp
dec
jno
loopne
push
push
pushf
fisttpll
mull
push
adc
inc
mov
faddp
ficomps
mov
fstl
insl
cmp
and
stc
xchg
pop
xor
insl
idiv
xchg
cmc
adc
dec
ljmp
sbb
lret
adc
jno
test
sbb
bound
insb
sub
ds
pop
loope
in
mov
or
dec
lahf
mov
push
loope
repz
push
les
mov
xor
js
ret
sub
in
xor
jbe
test
mov
pop
adc
lahf
xlat
jnp
jns
fnsave
cmp
sbb
sbb
lds
mov
pusha
jge
mov
xchg
rol
imul
add
xchg
jmp
js
ja
fs
imul
push
notl
adc
and
push
xchg
xlat
sarl
xor
push
sub
mov
lock
xchg
hlt
xor
sub
out
hlt
pop
ss
ja
pop
push
pop
or
aad
lahf
js
test
sub
push
and
add
add
or
cmpsb
aad
ss
js
sarl
jnp
dec
or
pop
fsubrl
pop
test
and
and
lret
xchg
mov
mov
lcall
push
mov
push
add
out
pop
and
insb
ljmp
movsl
mov
xchg
inc
mov
inc
and
xchg
iret
lock
call
out
mov
sub
mov
popf
jp
pop
les
into
and
pop
in
rcrb
mul
dec
repz
cmp
push
dec
pop
in
push
pop
inc
ds
loopne
jbe
jp
jo
rcll
pop
das
mov
inc
mov
outsb
push
lahf
mov
lret
enter
ds
mov
out
or
das
cld
imul
jnp
push
jae
sbb
scas
jne
fmull
icebp
push
push
into
popa
sahf
dec
sar
xchg
push
ljmp
movsl
mov
pop
inc
cmpsl
add
inc
cmpsl
push
or
test
hlt
dec
cmp
add
mov
pop
mov
and
leave
roll
addr16
cmp
dec
sbb
mov
or
lock
jns
pop
add
cs
mov
sahf
fdivl
adc
leave
enter
mov
nop
shrd
jns
rcrl
xor
push
movsb
daa
outsl
arpl
xchg
sti
mul
cli
mov
hlt
jmp
mov
std
insb
lods
inc
test
or
loopne
aaa
outsb
pop
sti
lret
ret
setb
jb
in
and
mov
pop
rorl
sub
adc
mov
ret
xorl
pop
movsb
sub
bound
fwait
outsb
xor
push
das
imul
stc
mov
cltd
xchg
pop
cmp
push
cmp
pop
fildl
addb
scas
mov
outsl
ljmp
push
outsb
cmp
test
inc
inc
cwtl
mov
mov
popf
pop
sbb
and
mov
push
fmull
loop
enter
test
mov
jge
dec
xor
ja
adc
pop
in
popf
jo
jno
push
sub
popa
jbe
push
inc
adc
loope
add
fwait
pop
adc
mov
sbb
pop
push
mov
adc
stos
movsb
lahf
in
insb
out
pop
movsb
in
repnz
fwait
cmpsb
dec
test
imul
pushf
push
push
into
push
mov
push
jns
inc
sbb
sub
rcrl
mov
imul
push
push
add
or
mov
dec
aas
sbb
xchg
sti
imul
stc
xor
cmp
cltd
fstpl
adc
sbb
icebp
aad
push
sub
push
ret
in
cmp
pop
imul
lahf
mov
jle
stos
je
clc
into
dec
ljmp
fisubrl
and
pop
inc
decb
sahf
or
jne
pop
js
mov
jae
test
insl
adc
push
in
xor
adc
fsts
pop
push
xor
das
aam
cmpsl
mov
dec
cmp
mov
mov
inc
mov
push
pop
adc
or
xchg
mov
rcr
lahf
sbbb
das
adc
gs
or
ss
iret
or
stos
pop
fwait
jbe
neg
popa
fistpll
int
dec
gs
sub
nop
fs
dec
adc
add
xlat
adc
sbb
cmp
or
test
xchg
arpl
adc
inc
push
xchg
inc
dec
jmp
fcompl
lock
push
add
fwait
or
aam
and
pushf
in
movsl
and
test
in
sbb
lods
cli
jb
mov
jl
jae
subb
cmpsb
push
inc
mov
notl
xchg
insb
cwtl
xchg
inc
cmp
in
mov
or
add
push
mov
jle
or
mov
je
sbb
js
lcall
sti
or
xchg
mov
mov
inc
xlat
add
lret
inc
inc
add
lods
mov
aad
mov
shrb
ret
jmp
pop
sbb
mov
mov
inc
in
inc
in
sti
xor
pop
pop
xchg
insl
std
inc
dec
cmc
test
std
jns
bound
jae
pop
inc
ss
xchg
mov
sbb
xchg
daa
and
mov
jmp
arpl
cmp
outsb
mov
jnp
cmp
lea
push
adc
scas
sahf
and
adc
ss
lret
idivl
fldcw
and
jecxz
fdivrs
pushf
xchg
add
pop
in
jl
inc
es
xor
lret
iret
lahf
cwtl
xorb
stos
jl
mov
imul
or
mov
mov
inc
movsl
roll
shlb
pop
adc
testb
push
aam
cltd
cmp
lods
arpl
lcall
and
push
dec
mov
loop
add
xor
movsl
push
pand
xchg
fimuls
addr16
xchg
shlb
dec
andb
or
adcl
mov
or
mov
leave
aas
mov
mov
in
js
jle
or
andb
fwait
rorl
sahf
xchg
loopne
ret
sbb
imul
popf
das
loope
orl
mov
fdivrl
or
stos
test
fwait
test
out
inc
xchg
fistpl
sub
cmpsb
xor
aas
or
orl
push
add
ja
add
xchg
hlt
and
mov
or
or
sub
and
inc
test
mov
aam
cmpsb
or
cwtl
lods
cmpsb
scas
dec
repz
mov
and
jecxz
and
shlb
fsts
sub
enter
subb
shr
in
icebp
pop
mov
ljmp
cmpsl
xchg
loopne
cli
xchg
mov
or
dec
sbb
cmp
xchg
jnp
push
test
pop
test
inc
ficoml
mov
or
pushf
repz
xorb
test
push
cmc
or
cmp
mov
mov
sbb
shl
sbb
mov
cli
mov
push
and
ljmp
mov
jge
inc
xorb
out
ffree
loop
je
jmp
push
xchg
jge
push
aaa
punpcklwd
xor
sar
inc
add
or
test
cmp
or
out
in
inc
add
mov
repz
push
add
shrb
xchg
pop
lock
jns
cmp
mov
inc
pop
jo
test
rcll
jno
cmp
sahf
dec
xor
dec
jl
lock
add
ljmp
pop
or
jmp
fmuls
imul
imul
inc
aad
pushf
push
ja
in
xchg
adc
pop
and
inc
cld
or
xchg
mov
mov
push
int
xchg
arpl
fildl
popa
scas
mov
mov
fisubs
enter
test
outsb
pop
notb
popf
add
aam
int3
in
test
addb
lock
sub
popa
out
jle
or
mov
sarl
cmpsb
pop
out
sarb
test
mov
push
push
xor
jecxz
jne
jge
inc
jmp
testb
out
dec
pop
mov
das
stc
fildl
cs
shll
in
cmp
lcall
hlt
dec
out
adc
sub
mov
jne
xor
xchg
sub
fdivrs
repz
sub
jl
mov
sahf
stos
les
add
dec
testb
push
mov
xchg
sahf
pop
out
movsl
lods
subl
jbe
xchg
xor
shlb
push
test
call
lret
and
cmp
mov
in
mov
cltd
out
std
mov
sbb
movsb
inc
fcom
mov
push
push
aaa
sahf
repnz
xchg
mov
mov
sub
mov
lcall
int3
add
jg,pn
xor
test
out
mov
push
or
ret
or
xor
lahf
add
leave
movsb
pop
or
hlt
jne
push
std
inc
xchg
ds
in
daa
cld
fidivl
and
test
xchg
pop
push
mov
dec
push
icebp
add
es
xchg
pop
into
push
push
stos
adc
adc
adc
in
lds
data16
addr16
ret
mov
arpl
jnp
sbb
ljmp
and
mov
mov
ret
ds
movsb
sahf
or
mov
cld
mov
xor
sbb
mov
loop
mov
inc
and
inc
xor
xor
clc
incl
xor
and
jns
cld
xchg
jmp
inc
add
in
mov
out
mov
ss
jnp
outsb
mov
addb
xor
sub
sar
imul
xor
or
insl
adcl
clc
mov
ds
xchg
idivb
sub
add
pop
ljmp
add
cwtl
push
into
mov
stos
jb
in
sub
jge
push
enter
sbb
and
adcl
mov
dec
cld
sub
rol
xor
insb
popf
fbstp
int3
ds
es
cwtl
pusha
mov
addr16
or
out
call
ret
in
xchg
xchg
mov
ror
dec
or
stos
outsl
mov
xor
jg
mov
mov
jecxz
scas
dec
pop
push
mov
enter
clc
lret
jbe
sahf
ret
inc
fs
and
orl
pop
mov
cs
and
das
adc
test
and
stos
add
or
insb
mov
jbe
pop
mov
test
add
daa
xor
shrb
mov
iret
loope
sub
sahf
ja
imul
ja
and
jmp
inc
push
mov
test
add
icebp
aam
loopne
nop
lds
call
and
out
addb
fdivrl
mov
and
sahf
sbbb
push
inc
jg
sub
push
adc
out
adc
jb
movsb
xor
and
inc
fwait
pop
nop
std
arpl
push
jp
xor
or
es
push
jns
popf
fs
mov
sbb
test
pop
jg
mov
and
mov
fsts
and
adcb
push
dec
mov
sbb
outsl
mov
dec
movsl
cmpsb
pushf
push
sub
mov
fnstcw
icebp
lcall
int3
sub
push
js
mov
add
sbb
mov
cmpsb
dec
lret
sti
out
arpl
mov
inc
lods
int3
cmp
xor
sbb
cmp
outsl
xchg
pop
dec
data16
mov
nop
popf
mov
jp
sbb
inc
in
mov
dec
push
out
or
test
out
cwtl
xor
mov
aad
cs
mov
popa
pop
aaa
or
add
mov
scas
es
pop
iret
aad
imul
movsl
pop
push
push
mov
lock
cmp
nop
inc
outsb
and
pop
add
sub
sbb
jae
into
push
mov
cmp
pop
jns
icebp
mov
push
int
iret
pop
fstps
jb
inc
bound
sub
push
ret
push
jne
mov
ds
out
mov
xchg
sub
pushf
sub
sbb
sarl
mov
cmc
inc
xchg
push
in
out
sbb
sbb
adc
mov
sub
mov
inc
out
out
movsb
enter
es
pop
das
clc
pusha
pop
pop
inc
fs
mov
xchg
or
icebp
cmp
mov
dec
xchg
negb
fs
xor
jg
daa
jo
push
xor
lcall
lahf
fs
cmp
inc
in
lods
shlb
lahf
in
mov
imul
mov
out
mov
mov
and
cmp
in
lret
and
pop
add
out
inc
stc
lret
test
lcall
insl
xor
out
mov
sbb
push
mov
das
adc
push
pop
xchg
push
cmp
pop
aaa
outsb
or
push
dec
or
inc
cmpsb
sbbl
pop
jnp
aaa
scas
xchg
mov
pop
sub
jg
imul
and
dec
dec
sbb
add
pop
add
arpl
pop
add
loopne
sbb
xor
cmpsl
jle
jg
loopne
cld
cs
lahf
dec
dec
outsl
aad
jl
test
cmp
ljmp
xchg
cmp
adc
lods
push
push
loopne
xchg
ss
cmp
iret
clc
aaa
mov
add
insb
shl
inc
and
cmp
js
add
mov
aaa
dec
cltd
sbb
ret
push
cmp
mov
shr
subl
sbb
imul
jge
int
mov
mov
push
repnz
icebp
adc
inc
adc
sbbb
loop
mov
add
pop
out
hlt
repnz
div
insl
mov
inc
dec
xchg
sbb
mov
mov
mov
adc
and
std
sbb
int3
lock
sbb
ret
cmpsl
mov
mov
sbb
not
nop
sti
sbb
push
xor
jno
aas
push
inc
mov
neg
lds
lcall
in
cli
sub
jmp
fs
lcall
fildl
js
movsl
aaa
add
sbbb
ret
repnz
aaa
mov
pop
adcl
pop
xor
sbb
adc
fucom
jbe
xchg
add
pop
jb
mov
jl
cmp
mov
fdivrs
dec
addr16
aas
and
push
jb
and
push
lods
and
pop
sti
aaa
push
jne
lock
ds
sahf
imul
rorl
mov
or
jmp
pop
xchg
or
je
and
pop
adc
lds
cmp
pop
or
nop
fistl
mov
lea
into
jno
icebp
ja
jge
sahf
mov
cs
int
gs
ret
pop
sbb
jmp
outsb
or
cmp
jl
scas
jo
enter
mov
xor
sub
cmp
pop
push
push
xor
pop
pusha
gs
fucom
es
inc
pop
mov
fwait
lock
rcrb
lahf
pop
jp
xor
add
mov
loopne
ja
push
clc
or
inc
push
es
or
cmp
mov
lods
fildll
insl
cmpsb
bt
mov
or
stc
inc
and
in
in
dec
or
pop
sbb
push
sbb
and
add
fildll
adc
hlt
xchg
ss
or
push
ret
push
mov
pop
pop
in
icebp
inc
andl
out
mov
aam
inc
mov
rorl
aaa
sub
loop
cmp
jmp
out
int
inc
xor
nop
jne
xchg
in
mov
lods
adc
push
fwait
add
xchg
or
fcoms
ficoms
test
cli
push
xlat
lds
int3
mov
pop
jno
mov
sahf
dec
cs
fst
xor
movsb
xchg
ljmp
push
cmp
sbb
pop
movsb
cltd
xor
neg
xor
adc
sarb
fnstenv
mov
out
mov
sub
pop
mov
dec
inc
sub
sahf
cmp
push
fistpl
jmp
psrlw
std
pusha
mov
sbb
imul
jno
leave
loope
cli
out
movsb
pop
adc
lahf
xchg
add
adc
jbe
mov
cmpsl
sbb
sahf
popf
fadd
lahf
xor
scas
cmp
clc
repz
arpl
not
rorb
data16
mov
inc
or
repz
push
je
mov
lcall
pushf
std
cs
sahf
das
pop
stc
ljmp
jb
and
insl
jmp
dec
frstor
je
test
lret
iret
shll
int3
inc
jecxz
push
leave
pop
cmp
pop
jb
inc
pusha
enter
enter
sub
xchg
bound
push
aam
arpl
cmp
xor
add
or
mov
loope
jae
cmpsb
ja
adc
add
lea
mov
out
mov
mov
add
lds
mov
test
mov
add
mov
add
aas
jns
adc
fstl
dec
in
sbb
data16
vpcmpgtb
js
pop
filds
xor
xchg
ljmp
add
add
int
cwtl
test
in
daa
stos
xchg
adc
cmp
dec
and
mov
dec
cmp
call
pop
mov
sbb
dec
sbb
scas
lea
shrb
leave
dec
push
push
cmp
sahf
pop
add
push
adc
sbb
add
lret
push
inc
ret
call
jbe
add
adc
lods
das
lds
mov
loopne
cmc
lcall
pop
sub
dec
cs
mov
cs
sub
or
in
add
and
fsub
pop
pop
frstpm(287
push
repnz
or
or
in
pop
sarb
xchg
fsub
std
push
sub
popa
test
sub
repz
and
outsl
scas
mov
imul
sbb
cmp
mov
je
out
stc
std
push
sub
adc
cwtl
jge
dec
leave
cmp
lds
xchg
mov
mov
sbb
ret
or
and
lods
push
in
cld
lret
pop
or
ret
xlat
fmul
shlb
stos
es
hlt
xor
lods
xorl
outsb
inc
xor
or
imul
push
test
lods
pop
and
jg
cmp
or
inc
sbb
pushf
sbb
cmc
cli
cld
test
out
imul
mov
aas
mov
or
repz
jb
fsubrs
lret
jge
ss
jl
sbb
mov
inc
and
mov
popa
testb
pop
sbb
inc
push
mov
jmp
incl
hlt
bound
xchg
mov
cmp
out
int3
jbe
loop
add
cmp
ljmp
sub
mov
popl
dec
fidivs
pushf
jge
gs
fwait
icebp
add
adc
leave
fbstp
and
xchg
mov
lods
pop
lret
rolb
outsl
and
popl
mov
add
imul
call
test
push
mov
pop
cwtl
fstpt
inc
ljmp
xchg
cld
pop
xlat
push
ret
jae
lods
repnz
xchg
out
loopne
push
sub
icebp
xchg
mov
movsl
movsb
xlat
cmp
cmpxchg
flds
int
xor
inc
call
movsb
xor
jg
and
enter
negl
add
repnz
xor
call
aas
rolb
es
or
shlb
les
jnp
xor
inc
mov
imul
int
jns
lea
stc
mov
mov
inc
movsl
out
and
inc
pop
and
ja
xchg
inc
cmp
out
test
outsb
je
and
add
mov
sbbl
pop
mov
mov
and
in
out
rcrb
pushf
aad
mov
inc
mov
pop
inc
mull
pop
jo
push
ss
mov
push
jne
shlb
lret
sub
push
outsb
fildl
or
adc
pop
mov
movsl
clc
out
xor
mov
pusha
scas
and
sbb
lods
pusha
fdivr
stos
push
xchg
dec
gs
xlat
out
push
lahf
adc
loopw
pop
loopne
push
mov
dec
les
fs
sub
push
cmp
jns
or
iret
inc
pop
pushf
jae
or
cmp
cmp
pop
jnp
pop
inc
dec
cmpsb
aad
pop
mov
cmp
inc
sbbb
xchg
enter
lcall
je
add
xchg
sar
adc
sub
rcrl
lds
sbb
rorl
out
mov
lret
sbb
les
fcomi
enter
mov
mov
lret
loop
adc
push
mov
xchg
call
out
sti
test
sub
xchg
or
cwtl
xchg
or
cmp
lock
cmp
sub
push
jmp
dec
arpl
push
repnz
xor
call
mov
roll
pop
pop
mov
je
loope
stc
xor
sub
xchg
mov
xor
mov
or
push
lds
jp
in
mov
int
lods
mov
sbb
cmp
subl
pop
mov
inc
test
adc
sbb
adc
cld
inc
add
mov
scas
movb
pop
fld
jb
mov
std
subl
add
xchg
rclb
shrb
fisubrs
push
mov
dec
inc
movsb
add
add
es
cmp
lcall
add
xchg
imul
mov
dec
pusha
sub
adcb
dec
push
aam
sub
push
mov
push
sub
fbstp
out
or
adc
jmp
and
int
adcb
push
mov
xchg
cli
pushf
sti
movsl
fiaddl
xchg
cmp
xchg
add
xor
dec
cmp
inc
cmp
and
xchg
in
clc
rorl
nop
mov
xchg
cs
mov
xchg
test
and
enter
sub
push
push
sub
imul
das
sti
cli
nop
push
xor
repnz
sub
cmp
mov
std
mov
xchg
lds
out
out
lret
cmc
jo
nop
int3
pop
imul
pusha
sbb
addr16
stos
cmpsl
sub
sbb
jl
mov
sub
or
push
ljmp
fstl
adc
jmp
int3
push
add
dec
testl
movsl
hlt
mov
mov
cmp
in
mov
call
test
les
and
sbbl
rcr
clc
pop
adc
std
aaa
pop
gs
sbb
add
ss
js
mov
aad
ret
les
push
and
fbld
sbb
mov
sbb
mov
fwait
mov
lret
xor
stos
ljmp
xchg
pop
imul
lahf
mov
cmp
lods
outsl
or
dec
jmp
imul
imul
out
cmp
push
inc
sarl
aad
pop
add
jle
fld
repz
outsl
sbb
lds
test
insl
rorl
mov
repnz
and
xchg
shrb
mov
outsb
gs
jp
xor
cld
or
jmp
sub
add
jl
sub
daa
add
push
or
test
or
and
add
add
and
push
and
fsubs
ds
pushf
jbe
dec
jnp
pop
sbb
cmc
icebp
push
cmpsl
andb
mov
add
lods
call
popa
mov
hlt
stc
mov
xchg
mov
mov
jno
daa
dec
jb
adc
add
inc
cmp
adc
mov
xlat
jo
mov
lret
test
mov
aaa
negl
stos
pop
sbb
jb
fiadds
adc
jb
and
into
loop
xlat
mov
cmp
ficoml
sbb
dec
fists
out
mov
fbld
aaa
dec
and
in
jecxz
daa
xchg
adc
inc
jg
add
mov
sub
cmpsl
leave
add
push
push
xchg
add
adcb
int3
sub
mov
mov
pop
xchg
gs
push
lahf
loop
jp
fcompl
fcompl
es
aas
mov
sbb
loope
pop
adc
push
into
xrelease
jle
push
sub
lret
aaa
sti
addb
add
sbb
sbb
ret
cli
stos
aaa
or
aaa
and
pop
dec
sub
jb
dec
sbb
xor
outsl
cmpsl
sahf
incl
push
push
mov
jno
inc
cli
jle
xor
push
jno
int3
cmp
and
cli
mov
jo
or
adc
pop
xchg
and
lcall
test
arpl
andl
cmpsl
dec
jo
fcompl
jnp
jb
lcall
pusha
aaa
add
add
xor
jecxz
out
sub
add
add
stos
out
mov
lcall
cmp
mov
leave
push
jns
dec
in
fsubl
and
negl
shl
das
fst
sahf
xor
sub
leave
mov
mov
xchg
pop
test
gs
or
inc
cmc
add
int3
loop
xchg
adcb
das
or
inc
jecxz
and
or
bound
or
add
or
dec
sbb
jb
ret
in
and
cmp
insl
push
cld
push
inc
inc
stos
and
jge
arpl
ficompl
xchg
cmpsb
add
rorb
rclb
sbbl
gs
loop
ja
shld
cmp
adc
push
lret
xor
adc
jle
popa
add
pop
adcb
and
sub
cmp
jae
ret
or
jno
inc
or
rolb
or
and
test
ret
arpl
lahf
adc
mov
fxch
adc
sbb
mov
mov
jnp
pop
adc
xchg
cwtl
sub
bound
mov
mov
jle
add
pop
lea
fisubl
rol
sub
push
cmp
cmp
scas
sbb
mov
sbb
pop
shll
bound
pushf
dec
xor
rol
adc
or
sub
into
cmp
cmpsl
cmp
or
sub
cltd
xor
jno
cmp
or
mov
out
cmc
es
adc
inc
mov
sub
int3
ffree
xchg
mov
push
dec
pop
xchg
cmp
pop
test
shr
sub
ror
sbb
ljmp
jo
mov
mov
cld
cld
pop
push
ds
iret
xchg
adc
push
ljmp
xchg
sbb
ljmp
mov
addr16
mov
xor
and
sbb
jmp
lret
shl
data16
mov
xchg
loopne
das
leave
imul
daa
fwait
and
push
aas
je
inc
adc
push
sub
mov
mov
call
push
inc
cmpsb
mov
out
or
dec
insb
push
stos
push
shlb
inc
sbb
xchg
ds
xor
sub
xor
test
cmp
cld
fs
pop
mov
adc
dec
shl
fcoml
jne
mov
jge
popf
cwtl
jno
sub
aaa
sahf
js
fcoml
daa
cmp
sbb
pop
mov
lock
int
xor
ret
hlt
scas
testb
adc
mov
and
fwait
and
insl
and
fs
and
push
mov
pop
daa
rcrb
inc
and
daa
mov
jae
imul
push
fadd
xchg
push
mov
pop
rorl
adc
and
cwtl
in
lods
sbb
test
in
icebp
je
dec
dec
jg
add
mov
mov
xchg
test
ret
pushf
insb
sub
dec
xchg
dec
jnp
stos
pusha
sbb
mov
in
testb
aaa
jbe
js
int
mov
or
lock
xor
push
push
lret
adc
sub
stos
sbb
loop
ja
ficoms
jae
outsb
loope
or
imul
ret
dec
in
int3
push
adc
fcmovbe
pusha
xor
imul
dec
dec
test
aaa
inc
xor
call
test
mov
mov
test
mov
push
jb
xorl
divl
cli
repnz
sbb
add
sub
les
icebp
sarl
daa
mov
add
mov
dec
jo
jae
sub
jmp
cwtl
push
repz
push
push
or
push
mov
sbb
jle
dec
adc
mov
sub
mov
cmp
in
icebp
xlat
out
roll
sub
inc
fistpll
cmp
cmc
jbe
enter
mov
into
sub
dec
or
and
push
and
cmp
jne
inc
sbb
mov
sub
imul
sar
ja
sbb
or
mov
fstpl
cmp
jne
sahf
sub
xchg
addl
negb
out
xchg
leave
call
jno
xchg
and
imul
arpl
mov
rcr
or
sti
adc
adc
nop
shrb
test
lods
cmpsb
jo
mov
inc
scas
int
idivb
mov
sti
dec
int3
ret
loope
dec
add
cmp
popa
jmp
or
mov
jo
in
mov
int3
in
jl
xchg
flds
lret
dec
pop
cld
mov
jnp
pop
negl
fimuls
mov
es
dec
add
fucomi
ss
mov
ficompl
adc
push
inc
lret
xor
rolb
aad
pop
aaa
repz
mov
popa
nop
je
imull
sbb
stc
out
std
mov
cmpsb
ret
hlt
ja
jg
xlat
cmp
or
jnp
sub
adc
push
les
pushf
stc
and
mov
sub
imul
cmp
in
iret
mov
cld
inc
lret
mov
outsb
enter
adc
gs
pop
out
sbb
xchg
push
mov
repz
lods
insb
gs
push
lahf
jns
daa
enter
xchg
sti
lret
cmp
aad
push
or
pop
cmpsb
in
xchg
push
pop
and
adc
push
lret
stos
dec
cmc
pop
lcall
out
pop
shl
jne
xchg
and
js
xchg
jge
pop
sbb
xlat
mov
inc
push
rclb
add
fs
mov
xchg
icebp
cmp
cmp
push
test
adc
adc
enter
movsl
arpl
sub
hlt
add
testb
push
sub
dec
jl
mov
cs
jno
sbb
adc
sub
pop
into
gs
cmc
adc
imul
ljmp
jbe
dec
inc
test
jns
hlt
xor
int
call
mov
or
test
dec
jns
repz
mov
push
cwtl
loope
fdiv
push
xchg
pusha
pop
adc
pushf
inc
mov
popf
cmp
out
imul
inc
shll
push
add
mov
jb
xorb
test
jbe
push
or
call
cmp
insl
xor
outsl
mov
jbe
cmp
dec
inc
lret
or
pop
aam
mov
mov
sub
pop
cmpsl
daa
jmp
je
dec
or
imul
fiaddl
mov
inc
popf
loopne
add
cmp
jae
xor
sub
xor
test
cmp
fwait
jb
or
ret
push
int
mov
adc
sarb
mov
out
mov
sahf
popl
in
add
imul
push
jbe
insl
rcll
out
fs
pop
xchg
cmpsb
bound
xor
iret
bound
and
fimuls
ja
pop
rcr
push
ds
sarl
test
sbb
nop
push
xchg
ret
mov
push
lock
cmp
sub
jbe
adcl
inc
and
loope
in
in
das
add
or
flds
loop
sbb
add
mov
pop
popa
mov
sub
jb
dec
push
add
test
adc
adc
mov
test
cmp
sarb
outsl
mov
add
dec
shlb
aaa
inc
fcoml
in
sub
push
repz
adc
cmp
jo
dec
push
mov
pop
inc
or
fadds
movsl
test
aas
pop
push
add
mov
lock
xchg
mov
pop
ss
cs
push
push
dec
addl
jne
push
jno
mov
cwtl
outsl
fwait
or
rorl
aaa
mov
sbb
fldl
sub
test
and
mov
jle
adc
mov
lret
xor
mov
pusha
nop
xor
cmpsl
je
mov
jo
sbb
roll
ret
pop
or
lea
pop
jno
ffreep
jge
fwait
inc
lods
sbb
loop
xor
push
adc
xor
add
sub
cmp
cld
aaa
lahf
xor
in
xchg
mov
enter
lea
push
mov
in
mov
je
testb
faddl
mov
fldl
shll
js
xchg
mov
mov
das
test
cwtl
aad
fsub
notl
push
sbb
or
sub
push
insb
rclb
aam
mov
adc
nop
sub
dec
xchg
popa
push
lods
or
mov
int3
repz
pop
in
jle
or
popf
dec
or
leave
mov
lea
out
aad
push
lldt
fs
aad
gs
test
xchg
bound
pop
jne
push
cmp
popa
stos
aas
pop
pop
mov
jmp
mov
ljmp
and
int3
fstpt
push
xchg
loop
push
sti
pop
les
lods
lock
rclb
push
sub
mov
mov
mov
jp
inc
shlb
sbb
cmp
push
inc
and
jnp
test
test
imul
sbb
dec
stos
inc
add
arpl
or
es
mov
add
jb
inc
pushf
push
mov
sub
divl
std
daa
mov
add
lahf
push
inc
pop
push
fidivs
xlat
dec
dec
ficoml
nop
fdivp
pop
outsl
cwtl
mov
sahf
out
sbb
rclb
and
dec
sarl
enter
lea
inc
orl
inc
push
xchg
shlb
inc
mov
in
and
popf
cmc
cmpl
mov
insb
sub
xchg
add
in
xchg
movsb
daa
pushf
loop
jp
jg
jno
push
or
fbld
xorb
mov
test
pop
je
adc
gs
repz
or
adc
and
aaa
or
shlb
daa
rcl
pop
pop
xor
add
mov
sub
std
fdivr
jne
lock
mov
xchg
loopne
fstpt
js
xlat
lahf
jnp
ds
sub
hlt
pop
icebp
std
insb
push
add
dec
jae
mov
add
jge
pusha
xchg
or
arpl
loopne
aas
jo
jp
jmp
sbb
rorl
add
cli
inc
js
scas
dec
inc
negb
pop
fstps
xor
xlat
les
imull
xchg
into
sub
dec
adc
out
dec
inc
xchg
xor
shl
test
jbe
lds
mov
stos
in
popa
call
sub
shrl
incb
iret
cmpsl
fistpll
imul
xchg
jle
icebp
push
popa
test
sub
jp
call
jo
adc
inc
cwtl
sbb
movsl
outsb
movsl
stos
jmp
cmp
push
sbb
push
add
pop
mov
mov
add
sub
jge
lock
sbb
or
sbb
push
inc
popa
mov
outsl
mov
sub
gs
sub
xchg
cmp
icebp
mov
jne
ret
lds
mov
movsb
inc
into
inc
adc
cmp
mov
bound
cmp
aad
push
cmp
adc
das
dec
cmpsl
cmc
mov
push
xchg
movsb
jecxz
inc
dec
scas
in
mov
xchg
pop
pop
pop
movsb
test
xchg
adc
or
xchg
loopne
or
in
jmp
or
aaa
loop
pop
cs
int
and
jp
push
popf
movsb
mov
mov
int3
pop
mov
mov
push
and
xchg
dec
xchg
ret
lea
xchg
out
cs
or
cmpsb
mov
mov
mov
scas
daa
in
jmp
mov
xor
shll
adc
pop
subl
sbb
lods
jns
cmp
gs
scas
pop
arpl
pop
push
sti
lret
repnz
xor
xor
iret
jl
aad
xchg
mov
ja
pop
mov
mov
mov
mov
or
movsb
inc
mov
sbb
ret
dec
wrmsr
jle
int
insb
aam
ret
push
ret
or
add
mov
jo
push
dec
xor
pop
sti
gs
bound
and
add
aaa
inc
mov
test
outsb
pop
mov
mov
in
mov
popf
pushf
pop
stc
push
adc
aas
sahf
push
push
ud1
push
and
adc
sti
sub
stos
popa
cmp
xchg
mov
aaa
add
sbb
int
mov
inc
push
push
sub
pop
adc
xor
cmp
test
push
inc
push
test
push
pop
repz
sub
sub
add
xchg
outsb
push
arpl
lock
out
fcmovb
fstp
lds
mov
cld
es
mov
jmp
shrb
inc
and
jnp
cmpsb
in
mov
jb
out
fildll
cmp
cmpsb
data16
xor
je
pop
lcall
push
lods
sub
movsl
mov
loope
cmovno
inc
insl
xchg
subb
xchg
sbb
decb
jmp
push
fists
les
sub
ret
fwait
jge
mov
push
addr16
mov
aas
addr16
sub
pop
in
imul
lea
int3
jge
push
sub
push
and
inc
lods
mov
add
cmp
popa
jno
lds
add
std
mov
hlt
shrl
mov
and
popf
mov
jne
scas
push
in
lea
ret
mov
icebp
int
jae
dec
sbb
pop
test
out
aaa
pop
sbb
dec
xlat
stos
ss
pop
in
cmpb
mov
or
or
les
std
repz
dec
or
mov
fldcw
push
add
movsl
mov
mov
fbstp
xor
and
das
rcrb
or
cmp
arpl
mov
mov
adc
or
int3
xorb
es
or
aad
addr16
hlt
cmp
jne
repz
adc
pop
inc
cli
mov
lret
cmp
sub
mov
inc
ja
mov
xor
aam
and
leave
pop
sbb
fs
mov
mov
es
mov
xor
test
mov
mov
cwtl
and
ficoml
push
mov
ja
sub
lock
add
outsl
mov
dec
cltd
stos
ljmp
aad
inc
mov
push
push
les
cmpsl
ret
pushf
ja
sbb
mov
scas
add
mov
xchg
mov
sub
in
mov
or
rcl
sbb
lahf
mov
jmp
shrb
std
mov
xchg
dec
and
jo
in
cld
jno
jmp
jno
mov
cmp
dec
mov
das
mov
enter
mov
push
xor
mov
es
and
aad
dec
push
dec
fistps
enter
movsb
scas
dec
push
jb
fcompl
push
mov
xor
stos
sub
fmuls
pushf
push
std
test
mov
mov
push
stos
mov
call
mov
pop
cmp
lret
inc
jle
and
push
sbb
push
or
fcmovnb
mov
jb
inc
nop
add
jo
push
lahf
sub
mov
push
dec
mov
adc
cmp
push
lds
scas
pop
sbbl
lret
movsl
fsin
pop
in
mov
cmp
lcall
ficoml
cmp
ds
enter
lcall
push
and
cwtl
and
adc
in
sbb
dec
jnp
push
jns
scas
cltd
pop
mov
mov
jns
xor
inc
push
jl
sbbb
cmpb
in
aam
push
inc
fldl
cmp
and
movsb
les
movsb
jle
sbb
mov
cmp
xchg
mov
pop
xchg
add
mov
sti
xchg
rorb
jg
les
and
fsts
paddusb
push
jl
push
outsb
testl
pushf
dec
inc
inc
adc
pop
scas
lret
ja
push
in
outsl
sbb
xlat
dec
xchg
sbb
pop
movl
jns
mov
inc
daa
dec
adc
mov
dec
mov
and
adc
pop
fs
jmp
mov
ret
aam
movsb
sbb
nop
sub
mov
mov
cld
xchg
insl
insl
hlt
mov
les
sbb
jl
iret
fsubrs
push
mov
adc
pop
lret
cmp
ljmp
dec
xlat
xchg
lods
mov
push
pop
scas
or
pop
das
stc
push
lcall
adc
cltd
jecxz
xchg
pop
adc
push
in
rcll
fisubl
cwtl
out
rorb
jge
daa
sahf
push
pop
xchg
jne
pop
add
dec
fcomp
icebp
xchg
mov
pop
shr
cwtl
push
xor
outsb
mov
push
psrld
inc
mov
adc
jo
arpl
mov
iret
and
shrb
cmp
in
lods
lret
jl
rcl
xor
xchg
adc
daa
imul
and
aaa
fildl
loop
cwtl
gs
andl
xchg
mov
stos
dec
arpl
inc
lahf
lods
shl
xor
andb
nop
mov
fstl
pop
fists
insl
mov
movsl
icebp
jo
bound
jmp
mov
popf
pop
xchg
mov
fistpll
fs
jnp
sub
adc
sub
in
movsb
adc
pusha
sub
or
mov
popf
jnp
add
scas
ja
xor
in
insb
jne
popf
rcrb
lods
jb
jo
cld
insb
push
push
adc
xor
cli
mov
adc
cwtl
adc
aam
cwtl
add
dec
nop
mov
in
data16
and
sahf
mov
xor
add
popa
dec
inc
clc
in
push
jno
dec
lahf
shrb
mov
hlt
sub
pop
ds
sbb
subb
leave
xor
push
clc
xchg
aam
jb
dec
rorb
stos
cs
push
lea
cmpsb
xchg
inc
jl
cmp
ret
data16
sub
outsl
mov
lods
insl
ret
rcr
sti
xchg
sub
mov
aad
mov
xor
cmovae
loop
js
inc
mov
mov
ja
test
cmpsl
jns
ljmp
mov
fsubrs
imul
push
ds
mov
in
ja
pop
add
iret
and
decb
loop
out
push
ret
cld
repz
mov
lea
sbb
fsubrl
adc
add
jmp
inc
jnp
add
mov
fcoml
mov
sbb
adc
test
cmc
jne
iret
adc
push
jecxz
adc
pop
in
pop
jecxz
push
jne
sub
pop
cmp
js
or
js
stc
and
push
stos
push
push
sahf
sbb
add
dec
icebp
arpl
jmp
pop
pop
xchg
lret
lahf
cld
cmp
mov
adc
cmp
movsl
rclb
xchg
mov
cmp
ljmp
imul
cld
xchg
jg
sbb
xchg
adc
add
mov
adc
add
cltd
popa
aaa
xchg
cltd
test
daa
adc
dec
adc
mov
inc
mov
push
jae
test
sar
adc
lahf
mov
xchg
jecxz
mov
in
xor
hlt
xchg
mov
jecxz
mov
dec
sub
mov
loop
aam
jmp
inc
push
fs
mov
fstl
cmp
mov
pop
sub
sub
jnp
pop
and
dec
lahf
cs
push
cmp
stos
subps
cmp
popf
adc
add
add
xchg
iret
xchg
push
es
mov
scas
rclb
lods
xor
addb
inc
cmp
adc
lret
std
cmp
mov
mov
xor
pusha
pop
inc
bound
xchg
into
es
or
test
ror
les
push
mov
loope
fcmovne
roll
xchg
inc
jnp
jne
xor
jge
add
mov
movsl
jmp
sub
outsl
cmc
cmp
add
pop
xchg
xor
arpl
neg
adc
sahf
out
jbe
mov
add
mov
mov
adc
fldt
test
dec
cld
or
cmpsl
fisttpl
xchg
xchg
ja
inc
or
je
sub
popa
push
xchg
jae
cwtl
mul
jb
lret
repnz
vaddps
test
jmp
test
pop
cmpb
lret
scas
sahf
mov
int
movsl
repz
cmp
int3
cmp
add
and
in
je
fdivr
jp
xchg
jp
pop
sbb
and
cmp
or
js
dec
mov
push
adc
dec
icebp
cli
inc
xchg
xchg
sub
xchg
add
pop
jns
dec
fmuls
mov
cltd
shll
fistpll
int
mov
icebp
jne
jg
xchg
test
pushf
lds
movsl
cmp
loop
and
inc
mov
out
loope
out
hlt
pop
dec
push
or
cmp
xchg
cld
pop
repz
std
pushf
sub
mov
subb
gs
imul
scas
and
outsl
in
adc
and
test
mov
imul
in
dec
clc
cmp
in
fwait
pop
sbb
push
cltd
int
ror
addl
cmp
test
int3
xor
das
iret
xor
xor
push
loopne
dec
ficoms
push
mov
pop
inc
xlat
xchg
xchg
icebp
cmpl
and
es
and
and
jb
pop
ja
insb
dec
or
xchg
jns
and
data16
fistps
in
std
insb
ja
dec
incl
inc
lahf
test
inc
rcrb
push
jmp
gs
xor
push
mov
rcll
lret
fcmovne
stos
pushw
and
pop
lock
sbb
mov
loop
pop
js
minps
jne
js
and
lret
cld
cmp
fisubrl
or
adc
xor
out
mov
fidivl
jmp
scas
pop
decl
stc
aad
repz
xor
insl
inc
mov
mov
xchg
mov
stc
out
add
aas
sub
sbb
sarl
pcmpeqw
xor
jmp
nop
data16
cmp
movsb
cmpb
cwtl
sub
in
xchg
or
adc
jno
pop
jbe
jecxz
or
imull
pop
mov
pop
add
ja
aam
lahf
mov
sub
dec
mov
ret
es
cmp
adc
in
push
push
fidivl
or
add
push
mov
inc
es
add
and
lahf
pop
jbe
ss
nop
shr
es
jecxz
mov
test
loop
lret
dec
aad
dec
jno
dec
fistl
cmp
add
sub
sbb
push
push
fsubrl
andl
pop
fldenv
clc
and
mov
punpckhdq
lods
aad
dec
and
push
jno
clc
dec
mov
daa
shl
jg
cmp
push
inc
xorl
dec
mov
jge
push
fisubs
cmp
cmp
js
mov
inc
pop
sbb
mov
push
mov
xor
daa
pop
cmp
xor
jb
cwtl
cld
movsl
mov
lret
repz
push
xchg
inc
push
mov
out
dec
pop
xchg
mov
nop
fcomp
mov
and
sbbb
sbb
mov
adc
xchg
mov
lahf
clc
mov
sbb
cmp
insl
jb
inc
lahf
dec
les
cmp
dec
dec
sub
dec
xchg
and
xor
testl
push
xchg
ja
cltd
dec
jecxz
adc
xor
loope
pushf
sub
jne
xorb
cs
dec
pop
and
add
pop
movsb
iret
inc
or
xor
ja
fsts
push
sbb
dec
jnp
lahf
mov
ds
xor
into
pop
in
mov
lea
cmp
cmp
pop
or
lret
fcmove
insb
sub
push
and
in
jo
repnz
stos
add
sti
mov
leave
xor
mov
psubw
cli
jle
jecxz
xchg
in
repz
std
int
aas
push
lcall
popa
mov
adc
push
lods
lret
sbb
fldcw
inc
mov
ret
and
or
subb
push
push
fistps
outsl
aaa
mov
mov
aas
outsb
mov
aad
test
ficompl
push
rcll
js
test
and
ret
ds
or
inc
jbe
xor
or
aaa
popf
mov
into
daa
or
mov
xor
out
mov
je
mov
xchg
inc
fldl
sbb
test
jbe
idivl
pop
mov
push
cwtl
jmp
je
jl
mul
adc
sbb
ret
test
push
lret
repz
dec
test
fnsave
adc
jg
jl
call
enter
mov
push
mov
push
xchg
cltd
pop
bound
jnp
pusha
jns
scas
lock
mov
arpl
lods
les
dec
in
out
inc
movsl
sbb
lret
push
fwait
das
pop
pop
scas
pop
ret
lcall
divb
in
stos
es
xor
inc
clc
imul
pop
mov
hlt
jle
mov
sbb
mov
or
push
dec
in
mov
mov
or
out
inc
jmp
sahf
and
inc
scas
ja
icebp
and
leave
adc
jg
mov
jle
jns
dec
aaa
mov
lods
pushf
test
inc
xchg
and
push
in
cmp
jae
jg
or
clc
pop
icebp
and
sbb
adc
sbb
mov
push
pop
sbb
add
xor
inc
shlb
ror
jo
ljmp
dec
lret
push
fmuls
xchg
dec
aaa
fcoml
lahf
jno
sub
xchg
and
imul
out
sub
test
roll
test
push
popf
ret
test
outsl
mov
inc
clc
dec
push
scas
jb
sbb
insb
xor
xchg
aaa
sbb
sti
adc
sbb
sub
sbb
loop
add
loope
aad
push
and
es
xor
mov
pop
insb
out
cwtl
sub
xor
inc
rclb
cmp
loop
pop
addl
jl
pop
sbb
cmp
dec
pop
mov
js
cwtl
mov
dec
mov
call
mov
adc
jns
xor
xor
loop
test
inc
jae
inc
addr16
mov
mov
clc
push
sub
cwtl
movsb
call
daa
popa
mov
out
jno
mov
push
scas
repz
sub
inc
shrl
fs
repz
jge
fldenv
cmpsb
icebp
adc
jbe
fs
inc
mov
jmp
rorl
sarb
and
ret
mov
test
pop
adc
adc
push
lahf
lds
push
add
out
je
cmp
jns
jb
dec
mov
inc
or
stos
adc
push
inc
push
leave
out
je
and
enter
sbb
sub
icebp
jne
xchg
mov
inc
test
cmp
outsl
mov
call
in
out
mov
iret
sbb
aad
test
fidivl
scas
xor
sbb
push
mov
xchg
xchg
xlat
mov
inc
inc
out
jmp
int3
mov
daa
adc
mov
call
jge
rcrl
popa
sub
fists
mov
insb
xchg
movsb
mov
out
mov
jecxz
mov
add
inc
test
rcrl
xor
lea
inc
xchg
mov
jle
pusha
movsb
add
in
mov
jno
push
aad
nop
mov
jne
shr
in
adc
in
jecxz
std
imulb
pop
sbb
xor
or
mov
mov
sub
int
es
cmpsl
xor
xchg
inc
test
aam
inc
imul
mov
sub
mov
and
cmpsb
add
stos
mov
push
cmp
push
sub
cmpb
pop
mov
pop
pushf
jmp
mov
nop
jl
ficompl
std
psubb
jae
rorl
subl
mov
xchg
pop
mov
pop
in
mov
mov
pop
mov
decl
lret
les
movsb
mov
popa
scas
push
scas
sbb
cmpsb
repnz
cmpsb
das
stos
movsb
cmc
dec
jg
aaa
push
add
into
cld
cs
inc
sbb
mov
cwtl
sbb
xor
repz
mov
scas
lock
cmp
imul
jp
push
jge
icebp
adc
or
ret
jmp
sub
scas
shrl
and
roll
fidivrl
xchg
pop
mov
mov
les
mov
adc
lret
in
movl
sbb
or
xchg
repz
icebp
lock
mov
mov
stc
repz
sti
arpl
or
lret
sbb
dec
mov
adc
dec
das
sbb
pop
jge
test
je
xchg
idivl
repz
es
push
cmpsb
fidivl
decb
xchg
cmpsl
pop
stos
movsb
popf
stos
lret
add
aas
fdivs
mov
push
stc
lds
wbinvd
adc
scas
bound
shlb
ds
repnz
mov
xchg
pop
scas
inc
gs
inc
insl
lods
loop
xor
dec
mov
and
and
jmp
or
push
ja
hlt
imul
cmp
jle,pn
fnstcw
adc
stos
fcoms
add
push
jae
inc
insb
mov
xchg
popf
sub
inc
roll
outsb
push
jg
in
gs
cld
dec
call
leave
mov
lret
mov
pop
popa
or
and
negl
cli
loop
pop
shlb
sbb
repnz
popa
or
sbb
jge
pop
jns
mov
push
adc
ret
lcall
xchg
jne
daa
mov
cmp
push
jbe
or
xor
fs
jae
call
lcall
scas
stos
repz
enter
push
cmp
movsb
clc
sub
pop
lea
cmp
jnp
pop
cmp
push
pop
xor
aaa
je
adc
sahf
ds
adc
mov
fsubs
dec
inc
inc
xor
dec
mov
popa
sub
ss
cmp
insl
mov
lahf
gs
aam
rorl
mulb
shrd
mov
shr
push
aam
or
adc
and
or
ja
mov
dec
pop
push
daa
mov
fmuls
shlb
incl
pop
mov
dec
inc
movsb
or
imul
repnz
and
push
xchg
pusha
stos
pop
xchg
jge
mov
lcall
mov
mov
mov
jb
pop
les
rcl
popf
add
insl
cld
mov
movsl
rcll
jl
popa
inc
out
into
rcrb
scas
xor
icebp
pmuludq
cld
xor
jmp
jne
negl
xchg
mov
xor
mov
jge
or
inc
test
repnz
fiadds
xorl
xchg
daa
ret
cmp
jnp
clc
sub
ror
imul
scas
pop
das
add
scas
adc
xchg
jns
sarl
addb
arpl
push
xchg
insb
dec
push
push
pushf
out
and
dec
jp
pop
cli
sub
jp
jge
loopne
sbbb
push
mov
xchg
xchg
pop
adc
orb
xor
ret
or
jnp
dec
fisubl
call
cmp
fwait
xchg
cmp
data16
ja
loop
adc
or
inc
mov
idivb
mov
popf
fwait
stos
dec
adc
lcall
sbb
push
mov
lea
sahf
imul
mov
mov
jl
pop
jge
or
out
jnp
stos
lret
cmp
into
push
dec
add
adc
out
push
je
xor
test
addb
fwait
dec
fidivl
or
out
dec
popf
enter
pop
loopne
inc
in
orb
les
xchg
pop
cmp
dec
mov
leave
insl
add
pop
pop
jb
movsb
mov
push
je
ja
cmp
fldenv
aam
fnstenv
daa
shll
jne
inc
and
ss
dec
ret
mov
jae
fsubrl
adc
rep
cs
sub
push
pop
hlt
hlt
pushf
lahf
dec
mov
xor
sub
xchg
jbe
push
test
sub
loope
in
rcll
leave
cs
xor
out
inc
mov
sahf
adc
sub
data16
or
jp
pop
xor
ret
mov
lds
mov
dec
push
push
iret
clc
add
push
lret
ds
xlat
js
gs
or
sub
repz
aas
fwait
cmp
movsb
imul
outsb
adc
dec
jl
ja
cld
mov
jg
xor
test
mov
pop
addr16
ss
loope
jecxz
lock
and
mov
bnd
and
and
xchg
pop
call
dec
fistps
cwtl
inc
in
cs
adc
js
lcall
jecxz
mov
je
ror
mov
add
pop
jne
or
fildl
jo
sub
and
ret
push
jg
cld
mov
jnp
or
inc
mov
add
arpl
push
lods
test
xor
aam
fmuls
mov
inc
cld
loopne
aaa
pop
repz
movsl
and
test
out
inc
mov
leave
mov
mov
mov
xchg
jmp
cmp
inc
out
add
jo
adc
or
mov
clc
mov
aaa
cmpsl
cmp
cmpsb
xor
sub
enter
je
jecxz
insb
xor
outsl
or
fadds
xchg
cli
je
pop
nop
cld
movsl
pushw
pushf
xchg
xor
cs
or
add
insb
mov
adc
push
jle
push
data16
pop
jle
sahf
lcall
lgs
arpl
mov
les
ret
mov
inc
es
addr16
inc
and
mov
insb
es
ficompl
icebp
fdivp
pop
jnp
aas
loope
dec
sbb
pop
stc
lock
mov
push
les
adc
cmpsb
cmp
call
insb
fs
pop
jecxz
in
outsl
sbb
movsl
add
mov
lods
mov
mov
adc
movsw
push
imul
dec
aam
pop
cli
cmp
push
jnp
iret
xchg
mov
jne
es
punpcklwd
andb
mov
inc
int3
negb
pop
stos
pop
adc
imul
loope
int3
mov
mov
or
bound
dec
ds
inc
pop
test
aam
mov
mov
hlt
inc
pop
nop
adc
and
jl
mov
leave
xor
jbe
das
inc
jne
cmp
mov
repnz
jns
push
push
jle
mov
adc
mov
dec
lahf
xchg
dec
push
roll
mov
call
xchg
int3
into
mov
pop
fiadds
mov
lret
dec
lcall
aaa
dec
xchg
icebp
push
pop
push
cmp
fsubrl
mov
sub
or
xor
out
push
popf
sub
push
testb
std
xor
sbb
add
nop
pop
xor
cmp
rorl
ror
into
repnz
sti
std
hlt
aas
shr
int3
push
xor
mov
enter
shl
or
cltd
mov
mov
bound
aas
je
jbe
mov
pop
cmc
rcrb
dec
xchg
jne
bnd
lods
add
sub
cmp
imul
mov
cmp
dec
push
shrb
or
jle
push
ja
sti
cmp
cmc
pop
aam
mov
loop
aad
dec
iret
leave
rcll
inc
rcrb
repnz
loope
loope
negb
iret
lods
ret
cltd
pusha
notl
movl
push
lods
sbbb
es
add
je
mov
push
aas
push
lret
outsl
jno
or
aaa
test
in
pop
ljmp
jg
jge
andl
jge
mov
xor
add
sub
loop
popa
loopne
scas
and
inc
inc
sub
pop
jle
jno
stos
insl
push
mov
into
and
cmp
and
and
sub
hlt
stos
dec
aaa
or
in
add
mov
loop
xor
call
roll
leave
je
test
orb
es
data16
inc
scas
jae
filds
fcoml
add
pop
iret
shl
sub
jl
and
in
es
je
int3
jg
or
cmp
adc
add
jb
inc
push
stos
mov
in
jnp
inc
add
xchg
call
xchg
mov
cltd
cli
shll
pop
sahf
xchg
inc
jle
cli
push
or
icebp
fsubrs
sbb
mov
xchg
or
movsb
js
int
mov
xchg
pop
mov
cmp
sbb
dec
sbb
cltd
call
cld
jmp
dec
lret
jne
movl
jmp
sub
xor
outsl
sbb
enter
pop
mov
cmpsl
enter
fidivl
cmpsl
and
stos
out
sarl
arpl
sahf
xorl
aad
orb
lock
sarl
test
js
xchg
mov
and
pop
outsb
inc
sub
jg
or
test
shrb
push
ficoml
pop
mov
mov
mov
inc
and
popf
mov
add
mov
dec
ja
pop
xchg
imul
cmp
pop
ljmp
movsb
insl
cmpsl
ss
or
push
aam
add
loope
cltd
push
fwait
cmp
aaa
bound
stos
and
xchg
sub
pop
mov
test
imull
sti
or
or
adc
xor
in
rolb
in
adc
and
repnz
xchg
push
xor
add
lret
sub
pop
xchg
shl
cld
mov
ficomps
xchg
push
sbb
push
xor
test
sbb
sbb
push
or
in
mov
push
hlt
fcmovbe
sub
xlat
fadds
ljmp
and
inc
rorl
adc
cmpsb
out
xchg
jl
pop
rolb
mov
icebp
je
inc
sub
and
ljmp
int
stc
in
and
dec
mov
iret
divb
addr16
push
ret
sub
lods
dec
icebp
test
mov
jnp
sti
int3
jp
notb
pop
mov
adc
ja
out
push
jnp
jle
cld
mov
jmp
insl
sbb
imul
xchg
push
dec
fistpll
in
or
push
test
pop
fists
in
imul
mov
imul
push
jg
stos
mov
dec
mov
roll
into
mov
mov
fnstenv
and
mov
ds
adc
insb
ja
fildl
xchg
scas
fs
lea
pop
movsb
movsl
ss
inc
nop
out
outsl
push
adc
jp
lods
sbb
xlat
cmp
sbb
imul
fmul
xchg
push
xchg
test
arpl
xor
xchg
and
loopne
jo
add
flds
into
mov
outsb
arpl
mov
gs
lret
mov
and
insb
rcrl
es
xlat
jno
subl
iret
jge
rcrl
push
int
orl
out
mov
cmp
jl
jno
sbb
insl
test
es
inc
inc
test
and
add
xchg
lods
mov
dec
xchg
or
mov
xchg
jg
sub
test
std
and
icebp
js
in
push
shl
jle
dec
lret
jl
jge
sti
push
cmp
shrb
cmpsb
add
ds
call
cmp
int3
push
and
hlt
mov
shll
hlt
push
push
mov
sub
nop
andl
xor
bound
adc
das
mov
sub
push
inc
and
or
addl
insl
outsl
imull
inc
mov
add
enter
sbbl
cmp
jnp
cmp
std
pop
stos
les
mov
xor
shl
repz
push
sub
jb
popf
sbb
jae
and
ss
push
dec
jno
push
daa
inc
mov
shll
adc
mov
popa
inc
sub
add
mov
xor
aam
clc
cmp
lret
les
lea
int3
mov
pop
or
movsl
jne
mov
insb
fdivrl
mov
popf
mov
pop
sbb
cmpsl
or
sbb
stos
jb
lods
and
mov
sub
jp
add
mov
add
mov
cmp
loopne
ljmp
cmp
push
mov
cmp
insl
inc
lods
movsl
or
push
outsl
int3
mov
icebp
cwtl
adc
or
mov
mov
pop
cmp
or
popa
lahf
gs
mov
cmp
jae
test
xchg
mov
cli
sub
lret
je
test
xchg
jp
in
loop
mov
jbe
sbb
pop
sbb
xor
sarb
adc
into
andl
aam
sbb
pop
dec
xchg
add
rclb
pop
xor
push
add
enter
jle
lcall
xor
and
add
cmp
adc
cmp
sbb
jns
adc
add
stos
aaa
out
cmp
push
and
add
and
push
xor
jae
out
stos
sbb
mov
jmp
xor
and
pop
mov
xchg
jecxz
mov
inc
cmp
outsb
divl
xchg
sub
sub
aaa
and
sub
in
inc
clc
dec
bound
mov
cltd
rcll
add
mov
inc
in
jmp
clc
mov
mov
mov
loopne
push
xchg
in
inc
dec
xor
mov
sti
push
inc
mov
int3
std
mov
ss
fdivl
xchg
fldcw
repz
mov
ret
imul
fs
clc
and
aaa
fs
fdivr
int3
cmp
push
fmull
mov
push
pop
xor
mov
ljmp
nop
dec
xchg
call
inc
fimuls
cmp
mov
adc
insb
pop
popf
insb
cmp
mov
lcall
xchg
repz
pusha
not
mov
int3
insb
push
jbe
popa
outsl
add
imul
into
push
push
adc
mov
pop
or
lcall
int
mov
imul
out
std
pop
lds
inc
pop
push
jmp
imul
scas
cltd
pop
popa
sbb
jnp
mov
pushf
aaa
mov
dec
mov
mov
lret
jb
inc
adcb
adc
mov
dec
lret
cmpsb
cs
xlat
iret
jmp
and
aaa
pop
and
mov
sbb
sbb
xor
cmp
pushf
pop
wrmsr
pop
inc
dec
dec
call
cld
out
fwait
adc
add
cmp
jmp
adc
sub
sub
and
xlat
repz
cmpsl
fsubs
ja
in
mov
jb
movsb
xor
cmpl
push
or
jmp
xor
sub
jl
adc
xor
add
pop
iret
insl
and
and
sub
mov
int3
sbb
daa
repnz
jl
xor
insl
cmp
dec
push
test
adc
fcmovnb
in
and
mov
rorb
mov
leave
push
into
lds
fidivs
pop
addr16
pop
jns
in
mov
pop
test
sub
pop
push
mov
insl
in
dec
and
xor
jmp
nop
mov
hlt
mov
testb
push
fiadds
mov
pop
and
das
mov
push
pop
adc
outsb
hlt
jle
filds
cmc
dec
arpl
add
in
icebp
fnstenv
fisttpll
mov
les
fcmovne
insl
cmp
pop
mov
imul
jno
movsl
push
sbb
xor
pop
clc
lret
push
mov
jo
add
jb
ja
ficoms
out
popa
aas
add
cltd
rcl
pop
or
jo
push
loope
fwait
mov
sub
mov
jb
icebp
mov
xor
mov
mov
or
mov
insb
push
aad
and
or
jo
sbb
les
jae
jmp
dec
fisubl
lods
jmp
loop
out
repz
mov
push
mov
lods
imul
out
or
jbe
mov
mov
test
pusha
xor
insl
inc
pop
fnstsw
and
negl
push
jge
jle
pop
mov
and
pop
push
or
sti
mov
inc
push
cld
lahf
outsb
push
xchg
xlat
xor
xchg
mov
pop
sbb
pop
ja
ficoms
shll
cwtl
sbb
es
inc
js
mov
xchg
aam
sub
nop
icebp
pop
repz
adc
fsts
in
cmp
mov
pop
scas
pushf
sbb
xor
or
mov
popf
pop
mov
add
imul
imul
mov
add
lds
jne
pop
mov
decb
cmpsl
bound
mov
iret
out
mov
repz
and
sub
call
and
push
shll
and
pushf
cmp
popa
xchg
jle
sub
inc
test
pop
ret
sub
jg
inc
out
dec
aam
push
ljmp
fisubrl
loope
add
xchg
mov
popa
jbe
out
clc
rolb
mov
adc
mov
xchg
and
inc
fadds
mov
je
pop
testb
dec
pop
xchg
xor
cmp
xchg
popa
xor
pusha
mov
mov
inc
mov
shll
iret
jo
mov
and
dec
sahf
mov
adc
add
jnp
adc
rorb
movsl
adc
sarl
ss
xchg
xor
inc
stos
loopne
in
repnz
enter
sbb
sarl
add
xchg
pop
scas
dec
adcb
sbb
test
pop
es
pop
sub
call
imul
out
push
or
scas
sti
in
cs
mov
ja
cmpsb
cmpsl
cmp
or
gs
pop
jmp
xorb
enter
cmp
and
or
jl
lods
sarb
push
inc
inc
fstl
pop
xchg
mov
jle
aad
sub
push
mov
rcl
ja
sub
and
sbb
mov
dec
popf
shrb
or
xchg
inc
and
jmp
sbb
fcoms
jg
mov
push
outsl
imul
xchg
loop
push
mov
pop
jnp
ret
inc
cmp
add
into
les
cmp
xorl
les
xchg
mov
or
loopne
andb
mov
leave
jl
push
pop
jae
jns
inc
jb
add
xor
mov
mov
pop
jnp
stc
in
je
jge
dec
test
jmp
mov
popf
push
popf
das
cld
pop
dec
inc
popf
pop
aad
mov
repnz
mov
ds
sti
outsl
xor
sub
insl
aam
xor
jno
dec
leave
push
lcall
repz
sbb
sub
rorb
lret
mov
cmp
outsl
daa
push
aad
xchg
push
cmpsl
push
jo
outsb
stos
sub
or
dec
mov
cmpsb
inc
inc
pop
cmp
sub
and
or
aam
sbb
or
js
lahf
mov
sbb
loopne
xor
aaa
add
mov
mov
mov
jbe
push
lods
add
or
jnp
jg
movsb
insb
sub
jp
mov
jge
mov
mov
insb
mov
test
inc
mov
aas
repnz
fisubrl
movsl
mov
xor
mov
sbb
or
jns
cmp
mov
scas
mov
jno
js
notb
into
dec
add
add
lods
fstps
dec
and
scas
dec
je
iret
sub
cli
outsl
xchg
mov
jl
ret
fcomip
inc
xor
test
js
jecxz
mov
les
in
popf
adc
mov
addr16
ds
lret
loopne
jae
or
outsb
mov
cwtl
sub
push
or
cmpb
aas
push
push
xor
outsb
rolb
adc
cld
shl
mov
lods
mov
adc
pop
scas
cltd
mov
xor
sub
pop
testb
xchg
xor
adc
pusha
and
imull
sbb
scas
xor
mov
xor
scas
xchg
mov
jmp
inc
pop
xchg
dec
mov
cmp
loopne
add
hlt
test
aam
ja
por
addr16
dec
mov
mov
pop
push
addr16
mov
adc
xchg
das
jmp
das
repnz
mov
lods
adc
sub
cmp
or
jbe
add
sahf
gs
pop
mov
jecxz
or
xor
xchg
imull
adc
xchg
inc
cld
pushw
mov
sti
test
outsl
mov
xchg
xchg
xor
ss
nop
add
fidivrl
jns
scas
jae
mov
pop
sub
mov
aas
mov
lret
aam
out
pop
rcrl
cmp
push
jo
negb
mov
mov
sbb
cs
aad
clc
cld
or
into
jne
add
pop
pop
xor
or
mov
push
or
rcrb
cmpsb
cmpb
pushf
cld
js
fidivrs
or
das
es
test
lods
xor
in
out
lret
hlt
les
mov
movsl
pop
fs
dec
cmp
jge
in
fldl
xor
sbb
cmp
out
xor
roll
add
shrb
nop
sbb
sub
jl
push
shlb
pushf
jle
fcoms
xchg
or
fsubs
imul
jno
mov
out
in
mov
ds
adc
call
pop
dec
push
jg
leave
fnstcw
jo
dec
and
mov
cs
dec
jae
es
out
js
loop
fsubl
and
lret
in
sbb
fs
repz
mov
jecxz
mov
jbe
andl
movsb
lds
hlt
cli
cltd
add
data16
outsb
push
iret
mov
gs
push
iret
or
js
nop
xor
cmc
fidivs
shr
shlb
dec
cmpsb
xchg
mov
cmpsl
nop
mov
repz
orb
and
xor
mov
pop
sub
adc
in
sbb
sub
add
sub
sbb
test
cmpsb
jp
and
dec
in
scas
jecxz
adc
test
mov
roll
ror
ret
inc
jge
mov
mov
pushf
dec
adcl
nop
xor
and
rclb
pop
push
or
shr
hlt
cmpsl
rclb
in
jge
dec
daa
mov
stos
xor
clc
arpl
inc
pop
clc
cld
test
pusha
int
sar
sti
mov
bnd
inc
int
mov
mov
sub
cli
mov
mov
cmpsl
sub
jnp
jmp
add
ja
sbb
ret
mov
arpl
mov
mov
std
cwtl
jae
stc
push
xchg
or
push
sbb
cmpsb
jmp
lcall
ret
dec
repz
xchg
adc
cmpsl
xor
xorl
fwait
mov
adc
jg
sub
fidivs
imul
out
add
pop
iret
icebp
shrl
cmp
inc
scas
xor
add
jecxz
std
icebp
test
xor
dec
std
cltd
adc
test
fcoml
movsl
adc
mov
lock
bound
push
jo
idivb
add
ja
sub
sarl
retw
add
cmpsb
sahf
mov
js
rorl
repz
dec
stos
jne
or
cmp
xor
sub
or
test
sti
cmc
out
ret
imul
jbe
mov
dec
mov
inc
jbe
sbb
mov
ljmp
lret
lock
sub
jge
test
out
pop
fcoms
fstl
fistps
cmp
mov
ljmp
aas
jp
movsb
std
mov
lds
shl
pop
outsl
or
push
push
xor
sub
notl
ret
subb
shlb
fucomp
enter
insl
sub
fdivrs
or
sub
icebp
push
adcb
arpl
cltd
dec
inc
push
sub
scas
pop
aas
sbb
dec
repz
imul
jmp
mov
hlt
imul
jmp
push
push
inc
mov
rsqrtps
lea
xor
leave
cmpsb
pop
xor
repz
movsb
fimuls
xor
dec
mov
jp
test
idivb
repnz
mov
and
dec
mov
and
imulb
push
andb
sbb
ret
mov
std
and
call
negl
mov
push
gs
lods
bnd
jle
adc
adc
int
push
cmp
shl
shll
cmc
lea
movsl
sub
push
insl
or
pop
hlt
mov
stos
outsl
sub
dec
popf
fwait
sbb
cmpsb
inc
mov
inc
pop
adc
adc
cmc
and
cmp
mov
pop
bound
or
jb
cmp
jmp
sub
fwait
mov
out
jmp
cmp
cld
mov
mov
adc
inc
mov
mov
add
cld
stc
repz
ds
mov
dec
loop
pop
je
mov
adc
lods
pop
lock
xlat
push
outsl
jle
lds
adc
cmp
sub
add
fs
sub
and
in
add
mov
faddl
inc
pushf
xorb
sub
out
leave
mov
das
loope
clc
jge
mov
inc
lds
mov
rcll
je
mov
pop
ret
out
xchg
cld
mov
push
movsb
inc
sub
int3
jg
cmp
jns
cmp
jmp
xchg
mov
loope
outsl
cmp
jmp
out
mov
jae
es
sbb
push
arpl
xor
test
das
inc
stos
and
dec
mov
mov
pusha
repz
clc
cmpsl
clc
add
ret
xchg
xor
into
in
jle
or
or
sti
into
inc
mov
aam
stc
sbb
or
cmp
mov
cmp
mov
js
movsb
fs
xorb
fisttps
push
or
or
jno
dec
outsl
mov
rolb
inc
jno
xchg
pusha
pop
inc
cmpsb
push
ljmp
xchg
and
xor
mov
test
dec
jb
fildll
mov
rorl
fsub
rcrl
cmpsb
mov
mov
addr16
out
std
jmp
inc
in
add
push
repz
je
or
sub
fcmovb
pop
ja
cmp
fsubs
test
lahf
aaa
ljmp
push
sahf
stc
xchg
or
dec
push
pop
xchg
mov
pop
mov
pop
xchg
movb
ja
jl
xor
jne
mul
fistpl
pop
cmc
mov
cmp
std
dec
push
pop
mov
dec
adc
ficoml
or
je
lock
insb
sahf
ds
pop
sbb
imul
xor
ds
inc
inc
jbe
cmp
fcomps
push
xchg
or
pop
pop
add
dec
loopne
jb
fstl
ret
pusha
fcomi
jmp
push
jnp
cltd
or
fidivrs
push
and
add
mov
out
mov
dec
std
jecxz
in
fwait
jae
push
add
mov
pop
xchg
faddp
les
cmc
and
rcrl
xor
xchg
add
mov
push
loop
or
push
mov
js
and
stos
aad
fnsave
push
movsb
mov
push
addr16
inc
push
adc
xor
repz
mov
pop
cmc
loope
je
pop
adc
insl
shl
rolb
cmp
inc
push
dec
negl
xchg
cmpsb
lret
add
mov
outsl
mov
mov
inc
cld
mov
into
bound
ds
jl
into
mov
addr16
mov
imul
dec
jbe
popa
inc
dec
test
mov
bound
and
inc
insb
fidivs
aas
cmpsb
ds
inc
or
pop
mov
mov
xor
sub
or
cmp
pusha
xor
jl
push
mulb
nop
cltd
and
sub
aaa
loopne
out
or
fnstenv
push
jb
ja
inc
sub
hlt
sub
mov
pop
mov
sub
setno
push
sub
jbe
inc
cltd
mov
test
dec
xor
sbb
iret
sub
in
mov
xchg
scas
push
pop
call
outsl
idiv
arpl
xor
outsl
sbb
lock
dec
out
push
xchg
mov
fsubr
testl
jnp
sahf
loop
mov
dec
popf
int3
cmp
rol
mov
jno
fs
mov
pop
cwtl
xchg
outsb
incb
xor
sub
pop
int
xor
pop
in
aaa
pop
mov
loope
dec
int
cmpsl
mov
xchg
xchg
inc
sub
fsub
ficoms
cltd
fstp
mov
test
xor
pop
lahf
dec
rolb
mov
dec
xchg
dec
into
testl
fsts
mov
pop
pop
jecxz
lcall
add
jg
mov
pop
mov
mov
xchg
and
cmpsb
mov
dec
cmp
jns
adc
pop
loopne
adc
inc
jmp
shll
adc
adc
push
and
push
mov
stc
cli
ret
aas
mov
loop
inc
decb
jns
mov
mov
xchg
pop
aam
pop
dec
inc
adc
es
jmp
dec
lcall
and
and
mov
push
in
xchg
jp
xor
dec
inc
jp
je
nop
je
push
add
iret
xor
hlt
or
dec
daa
iret
test
int3
xor
sti
xchg
stos
mov
jle
fsts
mov
xchg
sahf
mov
hlt
shlb
xor
mul
add
dec
into
xor
dec
push
mov
les
int3
sub
dec
call
adc
stc
orl
jnp
bound
fcompl
mov
cmp
arpl
lods
push
loope
movsl
sub
je
add
mov
push
pop
leave
pusha
cmp
aaa
in
inc
into
mov
ja
cmc
or
arpl
cltd
xor
lea
cli
mov
sahf
insb
bnd
push
mov
push
test
sarl
push
lcall
fsubp
pop
or
cmpsb
das
cwtl
jge
sbb
xchg
and
and
mov
test
and
mov
inc
mov
testl
mov
jnp
int
int
or
nop
lock
cmpsb
pop
cmpl
dec
movsb
or
add
fisttpl
sahf
ljmp
xorb
cmp
icebp
inc
mov
pop
inc
imul
aam
cwtl
push
sub
pop
add
inc
sub
xor
aas
and
mov
mov
imul
mov
insb
push
shll
push
adc
in
pop
into
sbb
jb
sar
mov
adc
fcoms
push
xor
fldcw
dec
loope
cmpsl
mov
mov
push
push
push
xor
es
pop
xchg
sbb
jb
push
xor
ja
xchg
xchg
mov
dec
fcoml
lods
out
rcrb
js
dec
xor
imul
stos
jnp
es
push
mov
es
cld
sbb
inc
or
mov
cmp
packuswb
mov
in
mov
les
xchg
add
push
mov
and
cmp
loop
es
inc
mov
fnsetpm(287
sbb
js
mov
xchg
lcall
xor
xor
inc
test
movsl
sub
add
clc
into
mull
addr16
into
in
fmuls
popa
lcall
cmovle
stos
push
loopne
jo
or
lods
mov
xchg
xor
cmp
push
mov
jl
inc
ret
sbb
ror
leave
loope
popf
mov
pop
and
or
mov
in
cwtl
xor
and
fwait
inc
fimuls
jp
dec
cmp
add
imul
xchg
imul
aam
mov
add
lds
and
shl
ds
rolb
inc
repz
aas
inc
in
es
mov
aam
or
sbb
cltd
sbb
inc
mov
cmc
lret
outsb
pop
in
popf
mov
mov
cmp
xchg
mov
std
xchg
pop
cmovns
cmp
xchg
out
adc
pushf
pop
cmp
mov
dec
insb
pop
ret
mov
push
sahf
sbb
jl
dec
movb
movsb
js
iret
jb
adc
enter
xor
popf
jecxz
jmp
rcrb
mov
fadds
or
jbe
in
jnp
xchg
iret
add
mov
cmp
pop
aas
ljmp
sub
sbb
sub
xchg
stc
pop
inc
push
in
rcr
std
ja
rcrb
nop
add
cmp
mov
push
dec
adc
push
aaa
sub
int3
sub
dec
sti
mov
cmp
adc
mov
jo
mov
sbb
sbbl
add
enter
or
sarl
aas
lcall
aas
push
rorl
sub
cli
mov
clc
xchg
pop
inc
push
or
repz
push
push
cmp
sub
push
cmp
repz
dec
cmp
ljmp
sbb
xchg
mov
aas
mov
imul
mov
mov
int3
sub
inc
jp
xor
xchg
les
popa
test
adc
jl
shlb
dec
iret
sbb
aam
mov
pop
mov
or
jmp
std
jb
add
in
out
jmp
sub
mov
xchg
mov
sub
int
mov
jb
inc
mov
sti
mov
push
fwait
inc
enter
push
leave
ljmp
or
std
mov
fwait
sbb
pop
pop
ljmp
shlb
fnstsw
pop
enterw
ja
aas
das
add
mov
add
sbb
pushf
call
jp
jbe
int
and
mov
pop
push
pop
xchg
lds
ljmp
jno
fucomip
pop
jae
pushf
in
lret
insb
inc
sbb
stc
stos
jge
sub
push
loop
sub
adc
jno
xor
xchg
add
imul
pop
pop
jecxz
enter
and
test
mov
pushf
addl
sbb
inc
fs
pop
lret
jbe
cmp
xchg
in
push
gs
pop
aam
les
mov
fldcw
xchg
movsl
mov
and
pop
div
xchg
cmp
out
and
jns
or
sub
or
sub
pop
pop
inc
lds
mov
fs
fidivrs
mov
imull
idiv
xlat
xor
jecxz
cltd
xchg
add
ss
test
repnz
pop
sahf
or
gs
inc
dec
and
mov
jne
xchg
sub
outsb
and
lret
clc
push
stos
bound
in
ficomps
sbb
push
loopne
out
sbb
cmp
in
jg
cmp
mov
repnz
and
movsl
pop
sbb
mov
push
push
int3
lahf
jbe
arpl
imul
xchg
lds
mov
and
fs
push
clc
jle
lret
push
pop
fbld
bound
aas
mov
lods
fadds
daa
jp
pop
jp
lret
orb
cmc
push
mov
push
adc
inc
and
jl
dec
es
shl
iret
xor
nop
test
dec
sbb
push
aad
daa
es
ss
add
ljmp
lock
lahf
test
xchg
fistpl
push
repz
and
xchg
xchg
adc
out
loope
push
sbb
loopne
dec
outsb
jmp
mov
lret
loopne
call
add
push
mov
pop
ds
pop
fisttpl
andl
and
jg
push
sbb
loop
iret
push
iret
lret
rcrl
push
sbb
sbb
dec
cmc
mov
in
xor
mov
in
dec
test
push
dec
dec
inc
inc
cs
jb
stos
in
rorl
cmp
int
fdivrp
sbb
inc
cmp
pusha
jnp
je
outsl
arpl
vmwrite
push
cmovo
sbb
loope
xor
stc
int
mov
adc
and
mov
cmpsb
and
sbb
jg
sub
std
pushf
sarl
jo
add
ja
pop
je
mov
mov
imul
mov
pop
lods
lret
movsb
add
sub
mov
stos
lcall
jmp
fistl
cmp
dec
or
or
test
pop
sub
das
mov
adc
dec
cmp
jbe
fadd
mov
push
mov
sbb
testb
and
ret
iret
dec
mov
out
or
cs
out
popfw
xor
jbe
or
sahf
aad
stos
xchg
mov
gs
or
pop
cmp
test
movsl
icebp
jno
ljmp
mov
pop
lcall
pop
mov
outsl
add
dec
fidivrs
push
mov
pop
clc
call
push
dec
mov
ret
mov
adc
dec
add
jnp
hlt
push
jb
cld
mov
add
stos
fwait
xchg
add
fsubr
mov
push
mov
cltd
jae
sub
insb
xor
sbb
stos
push
jno
in
jae
stos
nop
lds
scas
push
in
mov
ret
cmp
inc
mov
mov
jbe
mov
or
cwtl
mov
sub
lds
cs
frstor
iret
sbb
or
jp
push
ret
jp
lds
xlat
cs
movsb
inc
and
lock
mov
or
in
pop
stc
imul
jle
mov
mov
decl
das
inc
and
lds
bound
pop
xchg
xchg
jmp
xchg
loopne
jns
push
mov
movb
dec
sbb
jo
xor
and
sbbb
xor
adc
test
cli
test
mov
dec
xchg
mov
cwtl
ljmp
fcmovu
pop
push
or
in
ja
sbb
xchg
mov
xchg
pop
into
dec
sbb
push
inc
mov
xor
cmp
ja
inc
lea
add
icebp
cmp
pop
leave
in
push
fisubrl
or
push
xchg
dec
or
and
and
inc
jbe
outsb
jo
pop
in
xor
inc
pop
andl
rclb
xchg
mov
fiadds
mov
std
xchg
mov
clc
push
xchg
data16
fs
lods
cs
pop
stos
out
dec
ja
xor
lods
lds
fisttps
cmp
ljmp
lret
jb
and
ret
inc
mov
subb
xchg
pop
or
xchg
mov
out
push
test
push
push
hlt
lahf
dec
cwtl
sbb
or
inc
xchg
or
das
int3
shlb
push
aad
insb
cmp
lret
pop
pop
jg
or
scas
fisubl
xchg
int3
mov
andb
mov
dec
jecxz
in
dec
jno
sub
pop
imul
pop
adc
data16
pop
or
mov
in
loop
dec
sbb
dec
mov
xchg
dec
xchg
xchg
jg
call
or
push
lcall
iret
mov
fucom
push
push
pop
sub
mov
xchg
pusha
ret
jmp
and
jae
mov
xor
dec
insb
xchg
sub
out
adc
int3
enter
push
not
pop
fimuls
cmpl
dec
test
mov
mov
enter
stos
sub
gs
stos
fcomp
cltd
and
mov
xlat
or
popf
inc
ret
sub
dec
mov
sbb
cmpsw
or
repz
inc
xor
add
out
js
data16
jmp
and
or
mov
xchg
stos
rcll
add
xor
test
sub
push
cmpb
sbb
data16
or
adc
vpminsw
dec
clc
push
mov
ror
outsb
push
pushf
sbb
push
mov
mov
mov
les
dec
repnz
lcall
xorl
dec
mov
cmp
subb
pop
inc
mov
mov
adc
aas
rcrb
decl
pop
pop
ret
sbb
cmp
lds
lahf
adc
mov
mov
cmpsb
add
jbe
cmp
shr
test
es
inc
iret
jl
into
or
aaa
xor
inc
insl
mov
dec
imul
sub
xchg
lahf
jmp
and
sti
push
sbb
lods
xor
inc
ret
add
mov
cmp
or
repnz
lock
pushf
pop
test
adc
in
mov
insb
scas
mov
sbb
or
sub
stos
dec
sbb
out
push
jg
mov
mov
fidivrs
dec
fs
bound
push
mov
jl
adc
dec
nop
push
outsl
into
sub
repz
cs
cld
mov
inc
xchg
adc
push
push
mov
lods
xchg
addr16
in
xor
adcl
les
test
lock
adc
mov
or
in
imul
sub
mov
dec
sar
fcmovne
cmp
xor
sbb
mov
mov
ficompl
mov
mov
pop
xchg
in
jnp
jno
cli
dec
stc
lea
jl
arpl
mov
mov
mov
repnz
lods
loopne
nop
insb
jmp
or
sbbb
jns
scas
cmp
lea
mov
aam
lds
cs
hlt
mov
xlat
std
rorb
ds
mov
sbb
rorl
mov
movsb
lret
xchg
sub
push
aas
arpl
mov
and
push
mov
and
mov
ss
insl
cmp
jne
out
fwait
daa
jl
rol
add
ret
jae
and
jbe
inc
aam
push
mov
popl
mov
data16
and
cmp
push
sahf
or
and
inc
in
call
jmp
or
mov
je
movsl
mov
inc
out
jmp
ret
das
push
scas
add
fsts
aaa
push
push
jle
jmp
pop
pop
jne
outsb
xlat
mov
cmpsb
insb
push
mov
dec
aas
mov
xor
imul
subl
iret
test
adcb
mov
cwtl
dec
loope
stc
mov
out
mov
fmul
pusha
dec
lret
cli
sub
dec
inc
les
movsb
popa
loop
add
inc
mov
aam
icebp
push
cmp
or
sarl
ret
add
sahf
push
les
aad
xchg
daa
out
dec
out
mov
add
test
into
popf
rolb
int
xchg
dec
sub
mov
cmpsl
jae
int3
push
push
js
cli
js
lret
out
push
add
add
into
testb
in
jbe
dec
sub
mov
cmpsb
inc
lcall
out
ss
nop
xor
hlt
repnz
stos
xchg
push
jnp
xlat
jb
cmp
xchg
and
mov
mov
push
subl
inc
dec
fnstenv
jecxz
xor
inc
test
lret
push
inc
dec
mov
push
jo
dec
jnp
cltd
adc
in
ss
cmp
ret
stos
neg
sbbl
inc
mov
mov
jg
mov
adc
rorl
in
xor
loop
lret
xchg
sti
add
dec
into
adcl
pop
out
adc
lods
or
lods
es
leave
mov
sbb
enter
cmp
cli
loop
pop
dec
jle
rclb
pop
xor
sub
xchg
mov
movsb
clc
xchg
shll
andb
out
fucomp
mov
mov
aas
in
into
out
mov
or
add
fs
sti
jecxz
xor
popa
mov
jp
aam
or
sub
fs
push
mov
dec
sbb
inc
add
mov
mov
push
nop
add
ret
dec
out
xchg
loopne
in
dec
push
inc
xor
shrl
push
xchg
pop
dec
mov
fcom
out
pushf
pop
insl
fists
lds
pop
mov
sub
test
adc
jns
push
adc
inc
mov
push
das
stos
push
sub
mul
je
add
xchg
pop
mov
insl
mov
cld
rcrb
sub
jmp
outsb
mov
xchg
pushw
pop
movsl
mov
jns
movsl
fimuls
pop
mov
xchg
adc
jae
cmpsl
enter
inc
lods
xchg
lods
sahf
mov
outsl
xchg
dec
clc
xchg
mov
xchg
sbb
adc
mov
pusha
lahf
xchg
rclb
mov
or
scas
jae
push
in
jbe
push
xchg
leave
or
mov
cld
sti
pop
icebp
rcll
popf
jmp
in
mov
mov
xchg
in
push
jo
adc
fidivrs
mov
gs
mov
clc
sbb
pop
cmp
sbb
jbe
cltd
xchg
or
mov
push
mov
xor
test
inc
loopne
test
push
rcr
pusha
xor
sbb
popa
push
sti
push
stc
inc
push
ljmp
and
push
les
into
iret
lds
ficoms
mov
jg
fbstp
dec
inc
jle
jp
cmpsl
mov
pushf
lods
push
sbb
jle
dec
and
pop
loope
les
add
cmp
aas
cltd
mov
std
scas
jbe
lods
push
sbb
adc
cmp
pop
ds
pop
insb
rcl
clc
sub
jle
fisubs
in
pop
test
add
cmpsl
enter
cs
adc
scas
arpl
lret
daa
dec
fs
fsubl
movsb
cs
mov
and
pop
insl
repz
in
cmp
xchg
das
jle
sub
fsubrs
inc
mov
cmpsb
cwtl
addb
pop
mov
push
lcall
jo
inc
test
xor
clc
call
sbb
mov
and
mov
cmc
xor
pop
mov
and
mov
pop
test
lahf
fcmovbe
jl
out
mov
sub
mov
imul
bound
mov
xor
sub
or
jns
fsubrl
inc
or
add
xchg
mov
sti
in
jnp
cmc
mov
sub
test
mov
sub
jb
enter
mov
mov
scas
cwtl
movsl
mov
inc
rorb
inc
mov
ljmp
xor
int
stos
sbb
shl
xchg
lret
stos
jno
in
mov
fsubrl
sbb
lea
xor
mov
push
cmpsl
mov
in
pop
mov
dec
sbbl
in
xchg
faddp
mov
loope
test
push
icebp
and
leave
cmp
dec
mov
out
aaa
call
leave
fiadds
aaa
or
sbb
insl
or
xlat
xchg
outsl
push
into
xor
mov
xchg
sub
xor
mov
push
or
ja
dec
mov
dec
mov
cmp
inc
inc
scas
sbb
push
popa
mov
fisttpl
pop
pushf
in
ljmp
fsubl
mov
mov
mov
xor
inc
fdivrs
hlt
sbb
push
test
sub
xor
je
lds
jecxz
pop
fs
mov
push
pop
inc
pushf
clc
sbb
lods
jmp
mov
add
int3
push
es
inc
add
inc
jge
jne
das
mov
sahf
int
in
or
jle
mov
mov
pop
adc
or
push
cwtl
jecxz
sub
pop
xor
loope
nop
rcrb
xchg
xor
movsb
push
loop
cmp
pop
les
popf
mov
test
sub
sub
inc
cmc
jb
daa
imul
lods
push
pop
cli
ror
fistl
fisubrs
adc
repnz
in
daa
sarl
ljmp
and
inc
es
pop
push
push
cmpsb
fnstsw
hlt
gs
outsb
dec
mov
push
gs
insl
jecxz
and
or
hlt
push
cmp
mov
movsb
daa
xchg
xchg
iret
leave
cwtl
sti
pop
push
ja
pop
in
cmp
daa
fwait
jmp
xchg
adcb
pop
mov
out
and
add
mov
lret
je
xor
in
jo
outsl
lret
ficoms
push
cmp
xchg
fs
xor
push
aam
jmp
pop
xchg
sub
sub
inc
sub
in
pusha
inc
adcb
scas
mov
xchg
pop
mov
dec
cli
clc
rcl
xor
push
arpl
mov
aam
movsb
cmp
push
jp
or
pop
fistpll
cltd
imul
add
loop
mov
adc
lahf
sbb
inc
adc
out
or
testl
xlat
in
lret
cli
dec
mov
xor
fisubs
jmp
or
int3
dec
cld
dec
and
mov
movsb
lret
repz
je
push
cwtl
jle
mov
insb
or
pop
test
sub
std
mov
adcb
inc
outsl
ja
push
out
jmp
icebp
jl
cmp
push
pushf
dec
mov
fcoml
fld
jge
dec
mov
xchg
jp
cmp
cmc
jg
jno
out
ret
and
pop
pop
lock
mov
xor
adc
jg
test
dec
pop
out
inc
popa
cs
jne
and
stos
dec
sahf
push
and
and
int3
outsb
mov
fxch
push
not
sarb
inc
add
pusha
aaa
nop
pop
mov
sub
xchg
cmpsl
jmp
xchg
imul
sub
std
adc
repz
mov
adc
inc
loope
sbb
cmp
aas
xchg
inc
addr16
or
and
mov
cli
jae
pop
fs
in
add
mov
pop
incb
outsl
loopne
test
jge
pop
pop
xchg
in
in
shlb
push
push
fsub
hlt
mov
jne
aas
dec
lds
dec
cmpsb
ljmp
mov
std
adc
pop
clc
jl
sbb
mov
aaa
out
or
dec
pop
push
xor
inc
cld
in
in
xchg
sub
or
frstor
popf
cmpsb
std
adc
sarl
sahf
push
xchg
sub
cmpsb
ds
xor
nop
sbb
clc
gs
shlb
in
lea
jo
mov
push
gs
aas
pop
mov
dec
sub
lcall
xchg
call
xor
and
roll
data16
stc
or
scas
es
arpl
insl
mov
inc
add
loope
xor
jne
sbb
dec
in
adc
push
mov
jne
jp
outsl
and
cmpsb
mov
addr16
cmp
test
jmp
loope
cmp
ret
mov
mov
orl
je
inc
cmp
xor
or
adc
dec
out
std
lcall
cmp
in
out
sti
and
fcmovu
lcall
or
add
out
mov
xchg
fsub
out
enter
cltd
jmp
out
or
mov
inc
jle
pop
xor
adc
imul
cld
scas
in
mov
mov
test
sbb
sub
pop
out
test
and
dec
fistl
addl
fwait
sbb
fcmovb
jns
add
jne
cwtl
mov
fsubl
jb
in
adc
mov
cs
jg
adc
pusha
cld
test
jne
idivb
xlat
push
mov
aad
stc
lret
xor
inc
xlat
adc
cmp
test
loopne
insb
sub
mov
loope
fstpl
fisubl
sbb
sub
xor
mov
pop
ja
xchg
fcmovnb
rcrl
mov
jmp
or
push
add
es
sub
mov
dec
mov
lods
xchg
sbb
mov
push
xchg
inc
icebp
lods
cmpsb
jp
sbb
sub
je
cli
clc
fidivrs
cmpsb
sbb
dec
cmp
aam
jbe
loop
xchg
xor
dec
cli
xchg
pushf
add
not
fldt
mov
cmpsl
mov
sbb
sbb
dec
ret
adcl
and
mov
inc
mov
pop
push
sub
jbe
fidivs
movsl
sub
and
add
in
inc
cltd
or
push
xor
repnz
jb
dec
mov
adc
in
test
adcl
dec
push
vpaddw
or
sub
sub
loope
xchg
adc
and
mov
or
or
aaa
insl
divl
cmpsl
test
mov
adc
lret
jb
mov
icebp
cld
mov
call
dec
inc
je
jl
add
ret
push
xor
ret
cmp
shl
dec
testl
mov
inc
scas
mov
lret
adc
xchg
mov
push
xchg
out
push
out
js
sub
lcall
xchg
dec
or
cmp
mov
sti
push
jge
add
sbb
pop
fmull
or
outsb
xor
je
jo
lret
adc
xchg
sti
xor
mov
mov
mov
mov
stc
enter
insb
lods
adc
cmp
or
popa
hlt
shr
mov
movsb
sub
cmpsb
fwait
mov
dec
jb
add
adc
jne
lcall
sarl
and
data16
cwtl
inc
insb
xchg
bound
movsl
and
lcall
xchg
cmp
inc
xchg
popf
popf
loopne
lods
imul
iret
xlat
fwait
push
fdivl
imulb
aam
jecxz
cmpsb
mov
cltd
addl
call
xchg
aad
or
lahf
outsl
jl
cwtl
sub
add
or
inc
scas
lahf
mov
sar
sbb
fidivrl
adc
andb
jge
aam
call
out
adc
add
add
adc
jo
pop
hlt
xor
aas
cmp
insb
dec
sahf
leave
cmp
mov
aaa
cmpsb
out
push
cmp
sarl
push
mov
subl
std
cmp
or
jo
enter
pop
jnp
push
push
jg
inc
cmpb
cmp
jns
sar
leave
mov
add
push
xor
loop
stc
and
sbb
pop
jae
arpl
outsl
lds
fisttpl
mov
cmp
jo
rolb
and
enter
cwtl
in
insb
fildl
jg
mov
test
test
push
sti
jle
in
sub
orb
daa
inc
je
jg
cld
in
push
flds
ret
and
insb
fdivp
and
arpl
pop
cld
and
mov
and
jnp
es
neg
pop
jmp
fdiv
jmp
stos
mov
mov
lods
out
shr
mov
testb
add
mov
inc
ljmp
sahf
xchg
sub
pop
out
fwait
mov
sub
cltd
or
sbb
jecxz
mov
xchg
pop
inc
test
mov
cmp
jmp
jle,pn
mov
daa
addl
mov
jp
mov
xor
pop
push
fldlg2
mov
push
mov
pop
scas
push
arpl
pop
mov
jo
mov
clc
insb
add
rclb
scas
add
fdivp
sub
mov
or
mov
sbb
jge
fdivrs
nop
push
loope
cmp
ljmp
sbb
mov
push
push
jb
mov
mov
sahf
lea
push
dec
and
cmc
adc
scas
popa
call
sub
add
filds
pushf
rcll
mov
push
or
aaa
sar
shr
in
mov
pop
shll
mov
clc
add
mov
cwtl
push
repz
jle
loop
arpl
cs
sub
adc
notl
lods
mov
test
lds
out
inc
lahf
pop
lea
mov
imulb
mov
adc
add
sbb
mov
stc
ret
dec
repz
jecxz
adc
sub
inc
scas
or
hlt
movsl
inc
pop
movsb
cmpsb
fsts
cmpsl
lret
xchg
pop
mov
push
pop
and
ss
add
test
loopne
test
pop
mov
out
out
jle
pop
dec
inc
push
sub
pop
bound
jmp
mov
into
inc
jle
icebp
xchg
xor
sub
cmp
or
xchg
adc
add
mov
sbb
xor
scas
xlat
or
dec
mov
or
jne
or
es
push
cltd
rorl
addr16
sub
or
pop
repnz
sub
inc
std
fs
xchg
pop
jo
jmp
pop
dec
insb
mov
jle
lcall
fs
cmpsb
or
sahf
stos
ds
addl
push
fsubs
into
arpl
aam
or
mov
adc
sbb
lock
cmc
test
out
leave
cmp
sbb
jecxz
pop
scas
ret
out
adc
ljmp
dec
dec
aaa
call
bound
stos
xor
pop
in
xchg
das
mov
inc
jp
loope
clc
int3
cli
mov
lds
xchg
add
hlt
fsubp
js
lret
cltd
adc
or
xchg
xchg
insb
mov
add
fmull
out
and
cmpl
cmp
cmp
and
sbbb
jno
jns
and
push
insb
aad
adc
fisubrl
sbb
lods
lods
cmpsb
jno
loope
sbb
movups
outsw
push
push
mov
mov
xor
push
sbb
jno
sbb
push
stos
repz
or
outsl
jp
jp
mov
in
jb
nop
fcoms
repz
cltd
or
aas
aam
call
mov
stos
jo
mov
loopw
xor
pop
lret
jmp
dec
adc
dec
dec
adc
or
test
sub
and
aas
dec
mov
cltd
jne
xchg
xor
push
lods
test
clc
xchg
push
jp
fwait
dec
ss
and
add
outsb
cmpsl
ljmp
dec
std
js
arpl
loop
dec
or
or
cmp
inc
sub
and
imul
fbld
mov
repz
add
adc
and
mov
push
inc
jae
int3
outsb
inc
ficoml
push
add
scas
cli
mov
jmp
mull
inc
sti
iret
clc
mov
dec
push
iret
loop
shrl
sub
inc
in
jno
stos
xor
ret
xlat
sbb
mov
xorl
jns
call
clc
push
lods
in
roll
cli
mov
jo
lds
mov
ss
cmpsb
cs
sub
push
loopne
pop
movsl
mov
pop
loope
jmp
push
sbb
pop
cmp
pop
jns
fstps
ja
stos
push
js
adc
insb
and
pushf
sub
jb
sub
ret
popf
inc
cmp
lret
inc
mov
xor
fisttps
xor
test
jne
jns
fdivrs
stc
adc
std
jae
nop
and
xchg
test
xor
loop
push
stc
rcll
push
xchg
xor
mov
cmp
nop
inc
mov
mov
pop
sbb
ds
aas
das
mov
cltd
dec
or
mov
mov
bound
in
jns
hlt
js
push
es
add
mov
adc
cltd
stc
or
pop
int3
pop
out
push
cmp
xchg
shr
lea
scas
loope
jno
mov
adc
leave
mov
pop
xchg
sub
pop
and
outsb
fbld
unpcklps
xor
mov
push
lret
inc
jae
cli
loopne
adc
jae
cmc
sub
in
mov
mov
and
adc
stos
inc
test
or
lahf
jmp
dec
pop
pop
push
ficompl
jmp
insl
mov
sub
repnz
or
mov
pop
dec
push
add
icebp
mov
outsb
xchg
dec
adc
cld
xchg
xchg
inc
loope
sahf
xchg
fisubrs
sub
cwtl
inc
jb
mov
dec
xor
mov
ret
sbb
pop
mov
jae
out
sbbb
inc
cli
hlt
sub
jae
jbe
pop
mov
pop
cmp
push
push
sti
cmpl
roll
push
push
sub
mov
cmp
and
aad
and
or
fnstcw
adc
mov
push
mov
shr
push
sub
negb
repnz
xor
lods
add
xchg
fisubs
push
push
and
mov
sub
icebp
and
pop
popa
mov
xchg
cld
outsb
ja
loopne
ss
jbe
lods
lret
sub
ficoml
aaa
push
fwait
dec
scas
aas
lret
push
pop
hlt
push
addb
ficomps
add
jle
js
dec
in
shlb
mov
xor
push
pop
ljmp
push
in
or
arpl
adc
mov
or
fwait
push
lret
jmp
inc
ja
xchg
cmp
in
insb
xchg
inc
addb
adc
sti
pop
lret
adc
jmp
popa
call
mov
pop
nop
mov
pop
jbe
lcall
adcl
cs
lds
mov
sub
sbb
repz
adc
dec
sub
push
and
fisubrs
pop
or
and
cltd
mov
cmp
fsubp
mov
push
rcr
add
rol
lahf
add
adc
aas
add
push
pop
xchg
mov
adc
cmp
push
jnp
xorl
fnstsw
mov
lods
lods
xchg
xchg
in
lret
repz
add
sarb
bnd
fmuls
in
fists
ret
movsl
aam
pop
mov
mov
repz
cld
sbbb
mov
mov
mov
scas
movsb
or
dec
mov
fildll
pop
jb
cmp
add
pop
push
jnp
add
xor
inc
inc
push
xor
fcoms
mov
add
jns
popf
mov
bound
mov
push
es
push
xchg
cmp
adc
xchg
or
fs
sbb
les
lods
mov
push
or
dec
das
sti
jecxz
push
sbb
in
jp
out
test
xchg
repnz
pop
push
cli
mov
out
fwait
jbe
shrl
arpl
sbbl
in
sub
pusha
test
cmp
stos
adc
insb
lods
cmpsl
sti
test
je
loopne
adc
scas
pop
ljmp
adc
adcb
rolb
insl
test
sub
iret
pop
pop
dec
add
dec
int3
xchg
push
fsts
add
rol
stos
test
dec
mov
and
jg
mov
mov
mov
xchg
adc
mov
xor
mov
lret
in
inc
xlat
sbb
aad
sub
push
add
and
inc
out
sti
sub
pop
loope
into
mov
sbb
mov
adc
jmp
adc
push
dec
push
leave
and
test
pop
mov
fs
xchg
push
mov
dec
dec
jns
adc
push
scas
jae
adc
push
leave
stc
movsl
das
popa
shl
notl
mov
imul
outsb
mov
sub
loope
sbb
fnstsw
mov
cmp
jae
pop
les
insl
in
std
add
js
aaa
lahf
test
jne
jg
lds
stos
in
ja
mov
scas
out
inc
xchg
jl
mov
cli
negl
test
mov
pop
cmp
aas
lea
mov
aaa
stc
jb
mov
out
xchg
mov
dec
scas
or
ficoml
pop
enter
jle
fsubp
ja
jns
xor
outsl
lcall
shlb
fsubr
dec
enter
popf
and
inc
cwtl
rcl
stos
fldcw
pop
inc
jmp
ret
add
pop
sbb
or
sub
je
test
movlps
call
mov
movsb
loop
mov
sbb
fcmovne
and
adc
out
lcall
jmp
in
ret
out
inc
call
adc
cwtl
je
bound
mov
hlt
fs
into
add
test
pop
sub
cwtl
sub
add
inc
outsl
cld
fidivs
leave
or
out
test
sub
adc
test
mov
test
mov
jne
or
outsl
or
cmp
mov
add
jle
es
insb
test
into
pop
mov
fimull
mov
push
rcl
sub
lds
scas
cmp
jne
add
push
lret
daa
test
call
xor
inc
cltd
stc
in
inc
testl
shrl
xor
in
lret
insl
fcmovbe
mov
test
cmpsl
and
pop
inc
out
fisttpl
outsb
lahf
je
adc
lahf
gs
cld
dec
mov
inc
and
ja
shrb
xchg
das
out
jns
xchg
jnp
inc
ja
jge
add
jecxz
shl
test
mov
jbe
and
mov
mov
cmp
lret
faddp
lock
shlb
mov
sub
rcl
mov
mov
insl
orl
cmp
in
hlt
mov
ret
or
push
jno
std
popf
call
sub
mov
sub
lret
sbb
dec
jno
pushf
aad
cmpsb
xchg
pop
hlt
iret
pop
sub
adc
ss
push
push
inc
in
mov
and
in
xchg
pushf
jge
pop
daa
mov
ds
pop
ret
pop
mov
stc
pushf
sub
sahf
pop
add
inc
mov
lods
sbb
int
stos
dec
push
notl
push
sbb
mov
sahf
lcall
adc
mov
cwtl
mov
repnz
pop
mov
mov
std
loop
push
sti
aaa
cs
inc
test
stos
mov
nop
pushl
adc
pop
scas
or
ja
in
arpl
cltd
fidivrs
sti
fidivrs
push
push
xchg
xchg
dec
gs
dec
pop
rcrb
push
lock
stc
rcll
cli
rcrl
out
ss
stos
repnz
shlb
int3
icebp
sub
inc
mov
jecxz
jl
out
mov
or
les
mov
lock
push
mov
fsubr
fsubrp
movsl
stc
inc
and
push
lret
int
sbb
fwait
xor
into
mov
pop
pop
divl
in
aam
loopne
div
cmp
adc
ret
dec
cltd
out
inc
xlat
aas
cmp
or
insb
ret
sub
notb
ret
ja
sar
sub
sub
imul
sub
hlt
inc
pop
xchg
sbb
add
sub
mov
das
cltd
xchg
jbe
pop
mov
cmp
ret
and
push
sarb
pop
inc
iret
je
clc
jmp
ret
imul
stos
test
testb
dec
cltd
ret
daa
add
jns
add
adc
mov
jnp
adc
and
push
out
scas
cwtl
fs
loope
xchg
inc
lahf
dec
mov
xor
sub
inc
sbb
ja
mov
gs
inc
lods
test
ss
jbe
mov
jl
inc
inc
popa
sbb
adc
sub
mov
push
pushf
mov
pop
push
or
inc
pop
xchg
nop
out
or
sbbl
xor
dec
sbb
xor
les
ss
xor
adc
pop
rolb
push
sub
cmpsb
pop
mov
faddl
js
mov
sti
xchg
sub
jle
dec
addl
loopne
fwait
mov
mov
inc
inc
and
adc
adc
std
push
data16
jae
jns
icebp
add
addb
pop
gs
dec
clc
dec
sub
ja
push
ret
mov
nop
cs
mov
jmp
xor
add
mov
jmp
inc
adc
lods
in
dec
cmpsb
das
adc
inc
push
xchg
sbb
test
add
jl
int
add
andl
lods
jne
and
mov
lcall
lcall
mov
mov
add
ja
imul
ds
outsb
pop
lahf
jmp
dec
negb
sbbb
idivl
shll
ss
jbe
or
and
inc
lcall
add
xchg
lods
jnp
jns
jp
jp
sub
jns
shlb
cmpsl
outsb
stos
ret
mov
incb
cmp
jmp
sbb
fldcw
pminsw
sar
imul
sub
lret
sbb
xchg
jge
adc
jns
outsb
mov
mov
aam
and
rorb
rclb
cmp
lock
jecxz
js
nop
lods
push
cmp
js
repnz
and
cs
idivl
stos
add
adc
mov
out
in
fidivrl
lock
inc
in
add
jge
cmp
inc
sti
mov
jge
sbb
dec
sub
repnz
iret
mov
jecxz
sub
mov
sub
adc
jl
mov
mov
dec
and
aas
test
mov
loope
mov
lds
push
xor
leave
fwait
jns
and
jno
dec
push
lods
adc
pop
sub
scas
adc
ljmp
ljmp
pop
add
push
mov
ss
loop
imul
mov
insl
repz
cltd
stos
or
bound
aaa
adc
repnz
mov
fldt
int3
mov
or
subl
jmp
pmulhuw
jge
cli
adc
in
or
push
ret
lock
shlb
scas
xchg
pop
mov
jge
rclb
loop
xchg
add
pop
jl
xor
and
mov
mov
sbb
cmp
add
jae
test
pushf
loopne,pn
sahf
les
sbb
movsb
sub
inc
arpl
or
lock
test
push
insl
inc
mov
sub
ret
icebp
mov
mov
rcl
inc
mov
jge
or
bound
push
sub
cs
leave
inc
fidivs
mov
out
js
addr16
ljmp
out
cs
xor
adc
in
mov
out
push
jg
bound
mov
mov
jg
xchg
xor
or
out
addr16
sbb
mov
adc
out
mov
ret
or
push
jecxz
outsb
push
mov
lods
adcl
xchg
lods
mov
scas
push
out
sub
rorl
mov
insl
add
data16
fildll
xchg
inc
pop
xchg
mov
fisttpll
adc
xor
insb
mov
hlt
aad
mov
xor
and
cltd
or
loope
int3
cs
movsl
fs
pop
hlt
adc
push
jle
pop
les
mov
xlat
cmp
pop
sub
mov
loope
xchg
push
lahf
push
ret
pop
pop
adc
imul
and
dec
hlt
popf
insl
push
cmpl
xchg
arpl
mov
and
fiaddl
mov
jo
and
popf
mov
cmp
jp
pop
shrl
stos
adc
jno
or
lds
jl
push
cmpsb
mov
in
cmp
aad
dec
in
aad
dec
xor
mov
jge
cmpsl
sbb
pop
sbb
or
stc
clc
daa
out
adc
cwtl
sub
fnstenv
fildl
mov
mov
dec
sbb
mov
pop
cmp
popa
out
xor
cltd
outsl
outsl
cs
lahf
sub
push
fisttpll
mov
shlb
xchg
ljmp
out
cmp
adc
arpl
or
sbb
nop
sarl
popf
arpl
insb
push
js
pop
dec
leave
xchg
add
stos
jae
pop
xor
insb
shrl
imul
xchg
or
stc
xor
jnp
iret
loopne
sub
fiadds
insl
jb
nop
pop
sbb
mov
dec
lods
dec
adc
and
xor
scas
lea
bound
or
and
dec
das
add
pop
test
inc
outsl
bound
jl
jno
mov
pop
push
mov
push
sbb
pop
push
test
dec
les
sbb
jmp
mov
push
nop
shll
dec
xchg
jno
lea
push
mov
lock
jb
adc
in
xchg
push
jb
mov
loopne
dec
xchg
mov
in
insl
pop
xor
cwtl
fisttpll
and
shl
dec
xchg
shl
fxch
jl
inc
hlt
std
imull
in
fiaddl
aas
fwait
and
hlt
add
inc
mov
jne
push
lahf
sub
in
ljmp
gs
lea
jmp
pop
lods
xor
lock
enter
dec
push
lods
push
pusha
xchg
pop
stos
pop
pop
and
inc
jge
aas
int3
xor
lahf
dec
imul
and
icebp
mov
and
mov
dec
cmc
mov
push
enter
aaa
xchg
ret
in
mov
cmc
and
xchg
xor
insb
xor
lret
int3
outsb
je
pop
cmp
xchg
loope
lods
stos
push
add
xor
jle
adc
add
in
push
shl
dec
cmpsb
add
xor
vandnpd
addl
pop
jns
imul
cmp
mov
fcmove
mov
pop
arpl
imul
lret
pusha
test
add
and
pop
out
mov
mov
adc
and
out
inc
jg
ja
pushf
sahf
jne
cmp
cmp
jae
xchg
movsb
cmpsl
xchg
adc
mov
in
push
iret
lcall
mov
mov
je
push
pop
inc
adc
pop
lret
scas
sub
inc
xchg
xchg
or
shll
sbb
test
adc
pop
mov
mov
sbb
sarl
cmp
pop
adc
in
push
or
jp
push
aad
mov
in
test
scas
and
rcl
and
jne
scas
xchg
xchg
lods
mov
in
test
mov
cmpsb
in
add
insb
push
pop
js
test
fnstenv
or
pusha
daa
mov
insl
xlat
aaa
sub
pop
aaa
add
call
popf
cmp
xchg
movsb
mov
repz
call
out
push
pop
or
fildl
imul
push
xchg
lds
int
shl
call
mov
mov
call
pop
jle
data16
aaa
faddl
cli
mov
les
jns
jns
fwait
fbstp
dec
pop
ljmp
nop
arpl
inc
ja
outsl
jne
movsl
adc
inc
pop
sub
or
sub
sub
mov
sub
mov
adc
cmpsl
cmp
aam
fmull
push
into
xchg
sub
sub
mov
adc
out
cmp
sub
xchg
push
ret
xchg
enter
mov
lcall
pop
mov
fnsave
lds
xchg
mov
rcl
cli
mov
push
mov
out
sbb
outsb
nop
mov
mov
bound
jae
or
stos
das
orl
adc
shlb
xlat
mov
push
sub
xchg
fistpl
sti
out
andb
add
adc
fldenv
mov
jg
jns
pop
loopne
std
cmp
test
xchg
mov
jp
andl
cmpsl
negb
dec
shll
stos
xchg
loop
fsts
ficomps
push
and
and
mov
repnz
xorl
push
pop
push
das
test
out
mov
scas
dec
inc
lea
adc
or
adc
sbbb
xor
outsl
inc
insl
push
cwtl
and
daa
into
arpl
xor
js
sub
sbb
fsub
iret
push
clc
rorl
jnp
cmp
dec
shll
dec
adc
push
mov
mov
cmp
or
test
push
adc
xor
jae
adc
rol
sub
cmp
xor
out
mov
fs
sub
dec
je
sub
sub
into
ret
sub
cmp
in
mov
std
jp
push
addr16
or
push
cli
add
bound
dec
mov
cs
aam
ds
insl
cmp
lock
out
dec
or
sbb
cltd
inc
fisttps
je
iret
fiaddl
inc
push
je
sahf
icebp
dec
jle
insb
scas
push
mov
in
iret
enter
adc
pop
clc
push
loope
aaa
pop
push
fcmovbe
subl
cmp
shlb
cmp
or
rorb
arpl
jg
loop
stos
adc
push
mov
cmp
ret
sbb
xchg
mov
inc
jne
or
int
sub
out
and
cmc
sub
inc
dec
out
gs
add
xchg
stc
movsb
cmpsl
imul
addr16
stos
add
test
jne
mov
sbb
lret
cli
mov
pop
cmpsl
mov
es
ficoml
aam
mov
loopne
push
jl
pop
jp
cld
je
std
mov
jbe
bound
fnstcw
mov
add
push
aas
pop
sub
out
add
add
rol
xor
into
imul
or
or
cmp
aas
imul
out
mov
sete
outsl
push
cmpsb
jle
insb
cmp
and
aad
insl
inc
ja
leave
icebp
scas
or
cs
insb
jmp
jbe
xchg
mov
sub
mov
out
incl
cmp
adc
push
inc
xor
cwtl
sub
stos
pop
ja
dec
and
cwtl
inc
ljmp
jmp
push
dec
push
das
push
pop
test
sbb
sub
out
cmp
fdiv
lds
out
jb
push
jp
loope
lcall
imul
shrl
xchg
decb
sbb
pop
xor
push
movsb
xchg
mov
cmpsb
mov
fdivrl
push
fisttpl
bound
pop
imul
pop
sar
in
stos
pop
cmpsb
inc
dec
sub
dec
lods
scas
cmpl
cmp
aam
loope
out
ror
int3
inc
loope
push
jne
lea
mov
push
shlb
lret
mov
cltd
sub
pop
push
mov
dec
push
jg
fs
bound
jge
push
jp
cwtl
sar
sub
add
cmpsl
sbb
inc
lock
stos
mov
fsts
pushf
addr16
mov
push
mov
adc
inc
or
inc
mov
in
aaa
lds
int3
pop
xor
add
adcl
adc
jne
jmp
inc
ljmp
out
shrl
xchg
push
adc
mov
outsl
jns
rcrl
mov
in
loope
ror
cli
ljmp
or
inc
sub
call
dec
test
and
mov
in
mov
mov
loope
jecxz
mov
addb
cmp
test
xlat
xor
outsb
pop
scas
fdivrl
repz
jns
and
xchg
add
jmp
stc
sbb
jle
sbb
fdivs
sub
into
jmp
xchg
aas
aad
mov
ss
push
sub
mov
push
fsts
mov
xchg
push
mov
mov
cmp
lea
jnp
cld
lock
ja
jo
imul
mov
inc
dec
cwtl
mov
and
popf
jmp
shlb
test
add
js
dec
aad
cmpsl
inc
push
inc
sahf
or
cmp
xor
outsb
in
push
push
ror
inc
das
and
les
jl
add
jl
test
xchg
xchg
mov
lahf
push
xor
inc
movsl
cs
lock
lcall
adc
or
push
iret
xchg
lods
ret
loopne
mov
notl
dec
sub
ljmp
xorl
sti
cltd
pop
test
je
push
bound
movsl
and
add
jecxz
mov
jmp
pop
push
mov
mov
xor
movsl
stc
adc
pop
test
or
sub
jnp
xchg
pop
jnp
dec
cmpsl
jbe
jne
and
and
sbb
idivl
cmpsb
loope
pop
pushf
push
push
add
je
ds
aas
cli
das
pop
das
add
cmp
jmp
inc
into
sar
fstl
insb
dec
pop
aad
aas
mov
mov
jmp
lahf
adc
cmp
out
mov
sub
cmpsb
adcb
test
rcll
jae
jns
mov
dec
pop
mov
scas
inc
mov
scas
nop
lods
inc
and
ret
sub
iret
enter
addr16
std
and
sbb
jmp
jns
in
adc
scas
data16
test
mov
jae
or
mov
test
leave
orl
ss
xchg
mul
fiadds
ss
loop
xor
sub
cwtl
cmp
aas
movsl
push
cltd
push
js
fucomip
mov
sarl
stc
sub
ljmp
aas
aas
cmp
je
aad
cmpsb
imul
scas
fmuls
inc
add
nop
enter
lahf
mov
daa
popf
jmp
ljmp
js
pop
iret
into
arpl
pop
jmp
mov
out
scas
movb
mov
mov
mov
ss
cli
pop
push
aad
sbb
adc
jecxz
mov
repnz
or
rorl
mov
fsubrl
pop
cld
insb
sub
cmp
imul
pushf
xchg
xorps
lret
mov
xor
mov
xor
insb
adc
mov
orb
cmp
and
enter
dec
jp
ss
out
cmpsl
mov
add
lahf
mov
inc
mov
or
test
enter
push
lea
cli
into
xchg
call
jbe
sbb
std
je
add
ss
fsubrl
or
add
scas
insb
fcmove
subb
inc
xor
jo
inc
dec
addb
push
fstl
fstps
mov
pop
xor
inc
cmp
inc
sub
pop
pop
bnd
mul
mov
inc
das
fnstenv
and
push
insl
rorb
out
shl
push
jmp
lret
fidivrl
sub
mov
inc
dec
cwtl
fcmovbe
adcl
mov
push
xchg
leave
sbb
pop
dec
mov
sub
lcall
push
test
xchg
push
cwtl
inc
push
repz
and
sbb
testl
dec
into
mov
mov
mov
pushf
mov
movsb
xor
shlb
dec
or
and
test
iret
dec
fimull
push
inc
adc
roll
cmc
mov
nop
or
pop
outsl
insb
scas
ljmp
fucom
inc
sub
fcoms
sbb
outsl
xchg
rclb
add
mov
loop
out
rol
xorb
push
outsb
out
clc
jbe
call
lea
jp
xchg
or
mov
jg
mulb
dec
loop
push
jb
imul
sub
shrl
lret
stos
xchg
fwait
arpl
jecxz
mov
fnstcw
mov
cmp
clc
imul
lods
fsubs
xchg
sarb
jle
or
mov
xchg
movb
and
xchg
rorb
lea
out
pop
sbb
mov
cmc
push
mov
mov
stos
cmp
test
pop
mov
jmp
cmp
xor
mov
fsubp
stos
mov
dec
xchg
xor
add
mov
sub
push
jl
jae
shll
js
xchg
les
pop
fisttps
sub
push
js
inc
stc
xchg
fcmovnu
leave
xchg
adc
or
inc
pop
outsl
nop
les
cmp
inc
sub
add
pushf
mov
in
jg
sbb
ljmp
pusha
push
test
mov
pushf
cmp
mov
mov
notl
pop
sub
rcrb
jo
dec
mov
andl
xchg
add
and
shl
scas
loopne
ss
pop
jle
hlt
pop
shll
xchg
fstpl
mov
std
jb
cmp
je
push
mov
sbb
xor
adc
dec
and
xchg
cmp
push
int
or
inc
mov
mov
pop
arpl
and
out
push
outsb
daa
sub
pop
int
hlt
jle
scas
das
inc
xchg
es
pop
aam
push
cwtl
scas
mov
inc
sarl
cmc
rcrb
cmp
leave
lret
movsb
enter
adc
or
inc
pop
shrl
fwait
mov
add
popa
or
push
shr
and
pop
aam
daa
daa
fcom
adc
mov
out
test
lock
push
scas
rclb
mov
xor
add
jae
mov
or
shlb
mov
sub
fisttps
pop
pop
idiv
ljmp
cmp
jmp
cmpsb
lods
pop
xor
and
or
inc
in
dec
pop
xor
int3
imul
xchg
insl
cli
xor
xchg
loopne
mov
lods
in
adc
jmp
shrl
and
pop
sub
dec
lret
gs
arpl
addb
push
repz
dec
pop
inc
sub
ss
jge
mov
or
push
dec
movsb
test
add
jo
mov
movsl
adc
dec
adc
cmp
inc
outsb
jl
loopew
loop
cmp
jle
fcomp
sub
popf
push
jge
cmpsl
dec
shrb
mov
pop
enter
test
out
test
xchg
mov
aaa
in
jbe
mov
xor
mov
add
jge
test
movsl
or
repnz
push
dec
jno
les
call
enter
ret
xor
movsl
adc
adc
mul
xchg
adc
dec
add
mov
mov
sub
adc
rcll
icebp
sahf
lret
fisttps
add
fistps
jp
fdivrp
and
scas
xchg
or
push
shr
mov
cmp
subl
push
dec
inc
push
jb
xchg
xchg
inc
ret
jo
xlat
mov
sbb
dec
pop
push
adc
xchg
and
mov
sahf
mov
jae
sub
fsub
shlb
addl
sbb
mov
jnp
fwait
add
sub
pop
cmp
push
cmp
pop
push
mov
xchg
mov
jne
test
mov
sub
cmp
lods
jns
mov
lea
cmp
sub
ficoml
inc
cli
mov
adc
scas
jb
or
or
clc
jno
mov
shrb
lds
clc
pop
movsl
insl
imul
loop
aad
mov
je
add
cmp
push
sub
dec
jle
adc
mov
dec
xchg
outsb
imul
stc
mov
icebp
aad
inc
int
scas
out
repz
pop
js
cmc
lret
xor
jbe
jns
in
loope
push
pop
out
stos
mov
pop
mov
test
incl
pop
pop
mov
inc
movsb
push
icebp
inc
cmpsb
mov
and
lahf
call
fldenv
sti
push
mov
mov
faddl
test
fadds
div
mov
and
sub
dec
std
adc
mov
nop
fs
sbb
outsl
outsb
and
push
mov
stos
insb
or
sbb
dec
in
je
xchg
popa
mov
sub
jmp
out
jp
xchg
leave
and
test
xorb
scas
fidivrs
lahf
outsb
setle
in
jnp
divl
hlt
ljmp
pop
and
shlb
insl
inc
pop
pop
int3
rcll
test
mov
sub
loop
scas
pop
orb
pop
dec
push
mov
decb
mov
mov
mov
insb
jge
xchg
sbb
loope
in
idivl
inc
xor
push
mov
imul
lods
push
jno
mov
repz
push
je
sub
out
sbb
aad
frstor
std
sub
jle
xchg
jo
xchg
insb
lret
aaa
ficomps
sbbb
js
adc
in
xor
push
and
dec
mov
xchg
fwait
in
int
sub
jnp
movsl
insl
sti
and
xchg
aam
pop
imul
test
and
rorb
imul
push
imulb
sbbl
mov
pop
jge
mov
addb
lret
sub
or
xlat
aam
mov
cmpsb
adc
mov
scas
jns
mov
fbld
sub
adc
sti
jmp
pushf
push
mov
pop
aam
xor
std
jecxz
pop
or
jae
fwait
leave
xchg
mov
daa
lcall
addr16
loopne
xor
xchg
mov
inc
xor
jmp
lahf
xchg
mov
adc
lods
repnz
ret
or
loop
stc
ret
mov
xchg
aas
stos
push
xchg
mov
dec
pop
mov
hlt
or
and
je
mov
push
cs
xor
lods
repz
aaa
fwait
mov
fistl
test
fadds
iret
and
aas
jl
stos
and
aas
stc
xchg
shl
cmp
push
inc
fwait
push
adc
ret
shll
adc
mov
fisttpll
lock
pop
or
pop
and
add
jo
setle
aas
mov
jmp
loope
int3
out
cli
sub
test
rcr
jp
ljmp
add
jnp
pop
jle
dec
cmp
push
add
sbb
mov
andb
stc
and
add
ss
xor
mov
mov
add
loope
repnz
adc
data16
mov
popa
jbe
insl
loop
orl
fidivrl
mov
push
scas
int3
nop
mov
cmp
cmc
dec
sub
xchg
mov
sbb
cmp
leave
cmp
inc
out
dec
dec
add
out
insb
or
pop
push
cmp
jnp
or
scas
sbb
sbb
movsl
mov
shl
push
xor
push
jecxz
cwtl
xchg
xor
mov
mov
pop
adc
ja
mov
mov
rclb
fxch
mov
push
out
popa
mov
cmp
loop
sub
lds
fnstsw
inc
fdivrl
mov
xchg
lret
adc
lods
jb
aam
out
mov
or
push
and
aam
gs
push
jb
or
push
sbb
test
xchg
add
andl
mov
inc
imul
aad
push
and
aaa
stos
push
out
or
jl
stos
dec
sub
jp
add
push
pop
data16
inc
add
ficoml
mov
iret
repnz
push
xor
pop
ficompl
push
cmp
ja
pop
addr16
push
mov
adc
sbb
loope
xchg
or
ljmp
in
mov
leave
xor
insb
add
popa
outsb
imul
jg
cli
out
incl
pop
mov
or
dec
jp
push
lock
clc
in
and
mov
fisttpll
jae
jno
test
xor
dec
outsl
cwtl
cwtl
push
int3
ljmp
or
xchg
cli
data16
fisttpll
jnp
in
mov
pop
mov
adc
imul
imulb
push
and
mov
dec
dec
mov
mov
decl
pop
sbb
xchg
cmc
aas
loopne
mov
sahf
js
popf
mov
int
fs
push
lock
ret
push
out
fdivp
mov
xchg
push
sbb
scas
outsb
jbe
inc
int
icebp
fistpl
fisubs
xchg
mov
outsl
mov
pop
into
pop
and
jo
or
jmp
lret
imul
das
testb
pushf
lea
inc
shll
dec
adc
jmp
pop
aas
sub
aad
xchg
fdivrp
xchg
mov
cmpsl
arpl
adc
pop
ljmp
add
xchg
psrad
cmp
cmp
dec
dec
mov
xchg
gs
hlt
and
and
cld
out
pop
fisubs
mov
inc
bound
sbb
in
enter
xchg
loop
cld
mov
scas
scas
mov
cld
shll
mov
xor
pusha
cmovl
stos
jnp
add
and
xchg
shr
pusha
imul
or
xchg
icebp
xchg
fs
call
xor
add
sbb
scas
in
stos
hlt
adc
divb
push
out
push
add
out
xchg
fs
scas
adc
pushf
and
int
imul
pop
lock
movsl
loopne
cli
rorl
daa
inc
pop
mov
incb
inc
je
sub
xchg
xchg
jno
fisubl
xchg
cmc
jbe
push
fidivs
sub
stc
dec
test
mov
push
mov
lahf
repnz
push
push
out
add
lret
mov
adc
fimuls
sub
cmp
nop
mov
jnp
ljmp
xchg
cwtl
jg
mov
xchg
dec
pop
or
test
jb
inc
jge
scas
es
sbb
dec
sbb
inc
stos
aaa
icebp
ljmp
push
das
or
faddl
pop
call
scas
inc
decl
fsts
pop
sub
aad
pop
mov
out
repnz
pusha
ret
arpl
orl
dec
xchg
add
pop
dec
test
repz
sub
pop
or
fldl
out
pop
subb
ficomps
mov
cmpb
mov
mov
jae
push
loop
push
aas
aam
fmull
pop
fs
and
mov
negb
fwait
push
jbe
mov
iret
mov
mov
lret
xor
nop
pop
test
aaa
inc
loope
mov
call
sbb
jle
mov
loop
jno
movsb
testb
mov
cld
out
xchg
or
out
stc
xor
xchg
sbb
sub
ss
cmp
jp
inc
les
lahf
int
jp
aas
push
xchg
inc
mov
mov
sub
pop
lea
inc
stos
cwtl
inc
sub
xor
add
movb
cld
rolb
sbb
dec
xchg
ss
and
lcall
inc
hlt
icebp
fcompl
cmp
loop
add
enter
push
mov
mov
pop
adc
mov
popf
call
push
in
inc
jae
jecxz
ret
popf
cmp
arpl
mov
pop
pop
xor
xor
xchg
test
aam
rcr
jmp
popf
inc
icebp
jle
xor
dec
fbld
les
sub
pushf
xor
cld
movl
cmc
mov
lcall
sub
filds
pop
and
mov
bound
out
and
or
adc
ret
outsl
xchg
mov
sub
push
pushf
mov
out
xchg
mov
in
stos
inc
or
in
out
popf
push
push
fistpl
adc
int
mov
sbb
ds
lret
push
xchg
cmp
dec
push
or
mov
jo
add
push
mov
in
or
lret
mov
xor
xchg
and
in
adcb
pop
pop
mov
call
cs
lcall
mov
and
ds
xchg
nop
xchg
into
fwait
and
mov
sub
jecxz
fwait
popf
data16
mov
clc
jnp
popf
add
lcall
add
mov
test
lahf
and
rcll
cli
or
pop
lea
loopne
sbb
shrb
inc
jb
loope
mov
adc
jl
push
jno
in
mov
movsl
lret
das
int3
jmp
push
ja
andl
in
xor
jbe
popf
movsl
lret
mov
leave
loope
or
mov
cmp
lea
mov
lret
sbb
mov
sub
lret
ja
fsubs
loop
arpl
fimull
scas
dec
dec
dec
fistps
sbb
insl
stc
das
imul
push
lods
movsl
inc
aam
mov
xchg
and
and
push
jge
clc
adc
xchg
ret
int3
jmp
mov
aad
push
push
lds
mov
mov
pop
call
sahf
inc
cltd
and
adc
xchg
in
ret
cli
leave
and
mov
andl
test
pop
nop
adc
fsubrs
lea
sbb
mov
pop
sub
movsl
jns
or
xchg
movsb
mov
jne
adcb
lret
js
bswap
int3
into
sbb
cwtl
sahf
imul
call
cwtl
in
jmp
test
enter
fisttpll
out
pusha
test
lods
inc
pusha
negb
into
or
cs
inc
xlat
push
icebp
imulb
push
sub
scas
push
pop
xchg
lahf
push
adc
orl
jb
insl
sbb
pushl
and
pop
fdiv
jmp
push
xor
dec
outsb
mov
data16
mov
and
loope
jmp
ljmp
icebp
dec
into
pop
adc
cmpsb
mov
lret
jmp
xchg
outsb
push
pop
xchg
push
xchg
sub
cmc
or
mov
sbb
push
incl
add
out
lret
cs
stc
movd
ljmp
aam
adc
and
jb
fcoms
adc
out
shr
test
pop
imul
xchg
jmp
dec
fsubrs
mov
dec
fcompl
hlt
jae
mov
pushf
pop
movsb
ljmp
push
dec
gs
push
in
fwait
xchg
repnz
fwait
int
pop
es
inc
divl
adc
movb
movsb
mov
sub
int3
lds
mov
mov
sbb
inc
rcrl
adc
cmp
outsb
xlat
adc
mull
adc
xor
xchg
and
lock
xchg
in
jl
inc
shlb
roll
inc
sbb
insl
ret
cld
cwtl
aam
jnp
pop
cmp
js
xor
xor
xchg
rorb
dec
popl
es
icebp
and
aas
mov
mov
sbb
inc
bnd
mov
jae
xor
fs
ljmp
push
scas
call
gs
lcall
xchg
pop
je
fs
dec
push
xchg
lret
cwtl
sahf
fs
push
xorl
out
insl
jae
jns
ds
push
dec
mov
mov
pop
mov
lret
mov
mov
test
out
push
inc
cmp
jbe
repz
jnp
pushf
popf
push
and
jns
repz
cs
subb
mov
repz
imul
push
out
je
subl
cmpsb
movsb
mov
ret
mov
jnp
sub
push
popa
xchg
fidivrl
scas
outsb
iret
ja
fcomps
dec
jmp
jo
clc
mov
fisttps
adc
je
popf
lds
fwait
loop
outsb
mov
or
mov
mov
mov
loop
les
loope
in
loopne
roll
mov
jne
jb
outsl
aad
xor
fcmovu
sbb
cli
xchg
jb
or
jp
or
in
loopne
sbb
fmul
cli
dec
popf
repz
inc
lock
lods
inc
jae
lcall
lahf
lret
cwtl
xor
adc
push
mov
out
xorl
bound
test
ret
pop
xor
sbb
dec
pop
nop
bound
push
ja
fwait
loop
xchg
lahf
jno
bnd
cld
sbb
adc
mov
xorl
sarb
cltd
fincstp
jne
sub
and
mov
gs
xchg
xor
mov
sub
jle
pushf
lret
push
and
dec
ret
mov
pop
jmp
and
cmc
stc
adc
push
andb
push
cmpb
push
inc
aad
das
cmp
sbb
sbb
jle
sti
jo
jmp
or
mov
cmp
xchg
in
sti
ds
lret
aas
gs
ret
shrl
xlat
jg
orb
sub
or
add
shll
adc
xor
scas
xorl
xlat
pop
cmp
iret
imulb
mov
sbb
dec
ljmp
insb
or
cs
andb
rorb
inc
push
xor
outsb
mov
daa
nop
xor
sub
and
xchg
inc
int3
lret
push
shlb
pop
addr16
out
in
mov
dec
sbb
mov
add
push
iret
stos
ficomps
inc
push
insl
imul
mov
in
orl
inc
insb
lret
or
adc
call
jbe
xor
jns
in
dec
sbb
into
mov
rcrl
inc
cltd
in
imul
cmp
sub
icebp
add
fwait
and
jg
out
and
xchg
mov
mov
rcl
push
adc
aam
lods
dec
test
push
xchg
cmp
add
mov
movsb
les
ret
xlat
push
daa
xor
jge
cmp
cmp
in
outsb
sbbb
pop
mov
das
out
insb
cmp
push
insb
push
movsb
dec
push
mov
jmp
push
pushf
pop
and
jmp
and
stc
mov
inc
lea
add
stos
adc
test
in
adc
adc
es
outsb
test
push
and
movsb
mov
mov
aaa
les
fdivp
xchg
jmp
and
or
sahf
and
jo
cmpsl
ds
lea
arpl
add
mov
int3
add
push
xchg
add
mov
stc
add
and
or
dec
jmp
leave
push
mov
sahf
notl
push
clc
jp
or
push
mov
out
jle
xchg
addr16
outsb
scas
and
mov
cs
std
mov
sbb
cmp
mov
pusha
out
rcll
sub
hlt
mov
and
pop
sub
pop
sub
stc
movsl
pop
ljmp
add
sub
xchg
cmc
push
or
add
lods
inc
fildl
lret
cmp
jbe
stc
aad
sub
inc
dec
mov
ljmp
in
push
push
mov
lahf
imul
lods
pop
js
inc
jp
je
fwait
fwait
movsb
mov
repnz
jge
arpl
dec
lret
stc
xlat
mov
std
rcr
dec
inc
pop
sub
fsubrs
lock
in
dec
pop
jae
push
lea
sub
push
iret
pop
mov
sub
dec
aam
dec
xchg
sahf
and
fstps
jp
xchg
inc
arpl
repz
int
sub
cmc
sahf
out
jmp
add
lcall
or
pop
sbb
fists
pusha
mov
hlt
mov
pop
add
addr16
scas
out
into
push
fwait
mov
stc
stc
mov
push
jne
loope
sbb
inc
arpl
cmp
iret
outsb
adc
int3
xchg
leave
xchg
mov
sbb
int
mov
inc
into
sbb
push
imul
sub
hlt
jl
lcall
xchg
ficompl
xor
repz
ffreep
std
xor
imul
stos
sbb
sub
push
dec
fs
or
fisttps
dec
add
and
lret
push
cli
sbb
outsl
jecxz
lret
popa
js
add
shr
sub
inc
add
mov
push
out
mov
sub
mov
mov
mov
rclb
clc
push
jg
ret
push
jbe
xor
pop
cmp
fisttps
and
mov
and
subb
ljmp
pop
dec
pop
push
and
je
cmp
xor
xchg
es
movsb
sub
sti
xor
jp
inc
imul
orb
mov
out
dec
stos
fldl
in
pop
sbbb
xchg
jne
leave
fwait
sub
fists
in
pop
jo
pop
jae
jecxz
fimuls
jns
push
add
jns
cli
jae
mov
fists
fists
imul
popl
dec
cmpsl
jge
jb
pusha
push
insb
xlat
fcompl
into
outsl
or
xchg
sub
xor
sub
jl
and
jmp
add
xchg
and
dec
cmpsb
pop
jp
sahf
jp
cmp
xor
sbb
int
jno
cmp
inc
jns
dec
loope
test
and
sbb
leave
push
fcomps
mov
and
xchg
add
lret
mov
inc
jg
push
sub
dec
fsubrs
cmp
popa
pop
mov
xchg
mov
add
mov
pushf
push
push
shrb
jge
ffree
fcompl
lret
je
cmpsl
lock
sbb
xor
lea
imulb
popa
mov
gs
fldl
mov
xchg
sbb
insb
out
push
mov
out
insb
lods
fs
out
jae
push
repnz
or
ret
dec
cmpsl
push
cmpsb
adc
dec
sarb
push
dec
xchg
mov
lods
sbb
cli
test
movsb
jo
orb
add
cmpsl
pop
push
movsb
or
dec
es
mov
cmp
and
cltd
sub
cwtl
jbe
imul
mov
mov
test
dec
inc
mov
aas
fisubrl
popf
dec
pop
stc
sub
xchg
and
popf
negl
dec
cmpl
pop
mov
adc
repnz
outsb
and
and
jae
xchg
push
outsb
punpcklbw
mov
pop
out
lret
sub
cltd
cli
aaa
cmpsb
or
xorb
cmp
pop
xchg
and
and
mov
jns
decb
jecxz
ds
orl
sub
shr
xlat
xor
mov
adc
mov
inc
add
mov
arpl
nop
hlt
and
xchg
fdivl
xchg
pop
adc
rcll
mov
dec
or
in
insl
cld
cmpsb
out
test
dec
xor
push
xchg
push
and
pop
cld
push
and
xor
pop
dec
xor
mov
add
sbb
into
je
sbb
jo
into
inc
jmp
sahf
xor
add
xchg
mov
movsl
lahf
rorl
push
es
scas
nop
gs
jmp
jae
sarl
fisttps
scas
mov
cmc
ret
push
mov
pop
sub
loop
das
push
in
mov
and
aad
insl
sub
mov
jle
mov
shlb
cld
xchg
ret
mov
push
fdivr
mov
in
dec
lahf
das
jge
popa
xor
loop
sub
mov
push
jns
rclb
sti
xchg
dec
dec
les
inc
pop
cli
pop
loopne
insb
xor
cmp
jmp
inc
mov
inc
enter
add
xlat
sub
mov
adcb
aam
and
mov
or
inc
or
xor
popa
add
inc
mov
int3
shlb
js
push
call
ficompl
andl
addr16
shl
cmp
in
pop
sbb
stos
xchg
nop
pusha
into
sub
jg
push
std
repnz
cld
icebp
adc
cmpsb
hlt
dec
mov
fnsave
outsb
mov
cs
lds
sbb
dec
fidivl
cltd
mov
insb
fstpt
add
sub
mov
mov
ds
out
ljmp
cmc
leave
int
test
mov
test
sub
dec
mov
pop
push
inc
imul
and
mov
bound
rcll
dec
xchg
jl
lods
les
adc
jle
mov
into
cmpsb
lahf
sub
jno
loop
xchg
sbb
insb
or
out
lret
inc
add
or
rcrb
fbstp
adc
cmp
pop
lods
popa
sbb
sbb
dec
or
cltd
test
and
std
ficoml
mov
and
sbb
repz
mov
stos
jmp
test
inc
ret
mov
sarl
test
mov
push
mov
clc
xchg
outsb
test
xchg
push
and
out
mov
push
adc
jg
dec
js
cld
dec
jmp
xchg
sbb
rcr
sub
mov
fs
jmp
lret
jmp
xchg
inc
mov
xchg
jne
pop
push
sub
dec
push
dec
dec
test
mov
addr16
adc
jmp
out
dec
mov
and
mov
xor
cwtl
pop
ficoms
fmuls
lahf
repz
addr16
jl
fdivp
mov
sbbb
out
add
jl
pop
int3
xchg
jnp
stos
stc
pop
lret
hlt
sbbb
data16
mov
ror
inc
inc
sub
xchg
cmp
push
std
and
dec
es
and
lods
jo
xchg
push
lock
fstpl
aad
adc
pusha
test
sbb
popa
pop
js
ja
mov
sub
xchg
mov
and
push
and
xor
movl
gs
repnz
popf
push
inc
adc
pushf
mov
stc
nop
inc
jle
fwait
popf
xchg
mov
jmp
movsb
jmp
lock
sbb
lret
mov
mov
movsl
xchg
jae
jb
mov
jns
sahf
cmp
incb
push
mov
jnp
mov
in
mov
or
fisubrl
test
add
add
inc
iret
cmp
loopne
xchg
jnp
imul
xchg
add
sbb
call
pop
jl
fstl
sub
lods
bound
ja
es
xchg
js
fsubr
xor
js
sti
sti
shll
mov
je
int3
aas
jno
aam
gs
mov
subb
xor
je
ljmp
mov
pushf
ds
nop
push
es
mov
push
cmc
pusha
lods
jnp
addr16
jbe
fucom
xchg
mov
mov
gs
pop
movsl
das
sbb
push
in
pushf
and
add
mov
insl
incl
cli
jge
or
mov
lods
xchg
mov
out
xor
inc
int
lods
js
imul
divl
enter
cmpsb
mov
repz
pop
sub
xchg
push
jb
push
fadds
sub
jnp
imul
mov
mov
xchg
mov
mov
mov
mov
fsubrp
cmp
sti
fadds
sar
pop
sahf
lods
mov
outsl
xchg
push
xchg
cld
leave
pop
push
mov
in
movsb
mov
xchg
xchg
sbb
pop
xor
or
dec
pop
out
out
call
lea
dec
in
js
xchg
stos
fiadds
jecxz
and
and
push
jmp
xor
push
adc
inc
cwtl
jnp
push
and
inc
cmpsb
add
and
push
cmpb
popf
or
xor
adc
jns
mov
jecxz
fwait
popa
jge
jo
inc
jmp
cmp
shrl
les
ret
fs
mov
mov
lahf
mov
repnz
cmpl
rclb
xchg
cli
sarb
fwait
add
xchg
dec
iret
adc
xor
pop
push
pusha
push
cmp
mov
mov
mov
int
mov
insb
xor
popf
pop
aad
xor
aas
cmc
mov
dec
dec
push
int
cmp
jae
jb
into
cmp
cwtl
sbb
je
sahf
int3
mov
inc
lea
xor
xchg
xchg
pop
xchg
pop
sbb
mov
lock
jbe
add
jge
xor
loop
inc
scas
js
jp
inc
cmp
cltd
fdivs
sbb
adc
xor
jno
data16
js
jnp
data16
inc
je
iret
xchg
push
adc
pop
out
sbb
jb
cmp
mov
adc
mov
push
pop
mov
dec
addr16
xchg
pop
aam
dec
nop
aas
xlat
jp
not
dec
push
pushf
add
and
mov
xor
arpl
xchg
push
push
fwait
sbb
cltd
movl
and
push
icebp
test
and
dec
lea
xchg
pop
cs
jmp
test
xor
jbe
sbb
lcall
mov
popf
and
ljmp
mov
push
push
sbb
cmp
mov
imul
xorl
xchg
fldt
clc
pusha
dec
arpl
mov
pop
cwtl
or
pop
outsb
push
and
out
scas
fwait
inc
cmp
add
jbe
mov
inc
xorb
mov
icebp
cmp
or
push
xor
lahf
mov
jnp
dec
jmp
addr16
or
rolb
addb
sahf
pop
and
pop
nop
push
push
sub
lds
lret
fwait
bound
pop
push
loop
dec
mov
divl
xchg
imul
loop
xchg
adcl
pop
or
jmp
dec
push
clc
mov
ja
lds
and
subl
jl
rorb
pop
fisubl
das
pop
adc
mov
mov
loop
mov
sub
add
sub
inc
shrl
push
mov
add
pop
loope
daa
xor
sbb
adcl
push
stos
test
je
ja
jge
loope
leave
mov
sub
push
stc
dec
cli
rorb
das
sbb
daa
pop
pop
lret
xchg
insb
cmpb
xchg
negl
nop
aad
jge
xchg
xchg
test
push
loopne
and
ja
adc
and
popa
imul
push
jb
ret
lds
movsl
and
lret
fiaddl
add
mov
mov
stc
or
leave
loopne
gs
mov
cld
loopne
movsl
pop
sub
xor
cmp
mov
arpl
and
dec
fndisi(8087
xchg
pop
inc
xorb
jmp
mov
cs
mov
daa
repnz
sbb
sub
sbb
push
mov
in
lret
cmp
test
add
push
fs
pop
enter
and
xor
ja
mov
add
xor
dec
push
decl
lret
ljmp
and
aas
inc
sub
cmc
and
add
cmpsb
mov
jo
xlat
cmp
loop
or
shlb
mov
xlat
shrb
pop
repnz
sub
sbb
lahf
push
sbb
jge
sub
ret
or
lea
incl
adc
mov
xchg
test
nop
xchg
sbb
jle
lret
sub
mov
les
fmul
or
call
sbb
sahf
sbb
js
int3
xchg
mov
cmp
xchg
jmp
push
lret
xchg
xor
dec
mov
sbb
mov
mov
nop
loopne
and
stos
fiadds
rolb
xor
sbb
scas
sbb
add
cs
inc
mov
lahf
fdivrs
adc
mov
pop
push
ficompl
stos
dec
int
add
jl
push
pushf
mov
das
mov
jmp
inc
jmp
push
mov
scas
or
cmc
cltd
xchg
mov
fidivs
cmp
test
jmp
loope
cli
jo
out
pusha
pop
jl
push
fcoms
test
mov
pop
aas
pop
mov
xor
or
jno
cwtl
mov
dec
jg
pop
mov
addb
inc
mov
cli
jb
xor
jg
xor
xchg
fstps
repz
cmp
xchg
scas
cwtl
rcl
lret
inc
lock
xor
sub
ss
inc
in
cmpsl
loope
ja
out
xor
or
fs
mov
xchg
xor
and
push
cmpsl
add
dec
movsb
enter
fists
inc
pop
and
sahf
mov
aas
into
jg
mov
ret
dec
shrl
xor
pop
lods
or
mov
shll
jle
outsb
mov
pop
jne
adc
xchg
imull
push
fwait
test
add
repnz
cmp
pop
or
bound
mov
lcall
test
test
xchg
das
div
pop
push
lds
or
int3
subb
xchg
loopne
cs
xor
fs
std
xchg
jns
das
shl
mov
ret
fs
gs
cs
inc
jmp
aaa
fbld
or
cwtl
and
popa
insl
enter
out
fidivs
cmpsb
mov
mov
cmp
jne
imul
shlb
mov
fidivs
mov
orl
jl
ja
mov
mov
sbb
xchg
dec
xor
stos
lret
in
inc
or
int
push
xor
lods
lock
ljmp
call
das
or
mov
cmpsb
sahf
loopne
sbb
int3
ds
imul
jbe
or
jns
icebp
cmc
out
lock
rorl
cld
adc
adc
sub
aad
adc
or
out
scas
inc
pop
xor
mov
cmp
repnz
lahf
movsl
push
push
mov
pop
lods
ds
add
popa
xor
dec
repnz
cltd
mov
test
stos
clc
and
cmp
gs
sub
mov
ss
stos
mov
and
mov
sub
bound
push
push
cs
out
notb
mov
movsb
ret
jge
dec
mov
icebp
mov
xchg
stos
xor
xor
fnstcw
jno
mov
or
add
fmul
addb
aam
loope
movb
lds
mov
testb
movsl
adc
lret
dec
inc
dec
cmc
mov
test
jnp
fdivl
mov
mov
nop
xchg
mov
repz
out
xchg
aaa
jmp
inc
lea
xor
sti
out
lock
data16
adc
insl
ror
mov
or
imul
xor
ss
push
int
test
bsr
lods
push
sub
and
aam
mov
pop
sub
ret
adc
aam
mov
and
xlat
gs
js
in
mov
and
cs
mov
outsl
std
mov
sub
lods
xchg
cwtl
imul
nop
jge
fsub
out
sbb
push
sbb
fcomps
filds
xchg
add
mov
popf
push
and
nop
dec
stc
std
mov
subb
bound
ja
xchg
shlb
adc
push
dec
lahf
mov
cmp
out
lock
shrb
ljmp
jecxz
pop
jp
aaa
in
mov
stos
xchg
jnp
add
add
iret
lret
lods
loop
imul
or
test
outsb
test
dec
mov
mov
jg
push
outsl
sbb
repnz
inc
inc
pop
cmp
cmp
jnp
popl
and
mov
xor
mull
sbb
fmul
adc
jle
lcall
xchg
sbb
mov
push
add
jg
jg
aam
xor
mov
jl
aam
mov
rol
jo
pop
das
arpl
xchg
pop
jmp
add
out
jno
mov
int3
lcall
dec
inc
stos
mov
jae
loopne
add
and
sub
stc
jl
pop
dec
popa
jle
mov
movsl
pop
cmpsb
ds
adc
daa
sub
push
je
or
in
loopne
sbb
not
sbb
inc
enter
adc
sbb
sub
cmp
arpl
jge
cwtl
xlat
cltd
mov
out
fcmovne
jns
das
xchg
ss
cmp
in
sub
mov
inc
mov
cmp
shr
mov
popf
dec
je
ss
loop
and
int3
cwtl
std
xchg
or
call
push
shrl
lds
sub
xchg
scas
or
jo
pop
scas
imul
xchg
fsubl
dec
lcall
lcall
sbb
sbb
sub
push
xchg
lahf
pop
mov
mov
mov
dec
fbld
flds
mov
shlb
dec
jg
xor
mov
and
leave
cmp
push
cmpsb
out
sub
daa
and
mov
or
arpl
sbb
adc
nop
ficomps
repnz
pop
push
rcrb
mov
icebp
push
imul
push
les
dec
outsl
push
pop
xor
push
mov
push
je
int
push
pop
js
xor
sahf
arpl
cwtl
pop
in
push
add
jae
arpl
and
addb
ljmp
movl
xchg
packssdw
dec
and
fmul
jle
mov
rolb
push
int3
or
jb
ljmp
out
add
or
jmp
arpl
pop
cmp
xor
sub
mov
jp
and
xorb
lock
jp
and
jb
push
rolb
xchg
mov
pop
or
or
dec
mov
push
and
int
movsb
mov
iret
cmp
sbb
xor
inc
jbe
cli
pop
data16
cmc
fwait
adc
jle
andb
les
pushf
lret
cmpsl
and
aad
loop
sub
push
push
fcomps
or
in
xchg
fidivs
jo
sub
mov
aam
cmp
mov
sub
xor
adc
aas
cmp
cmc
lds
fcmovnb
adc
lds
add
aas
jge
push
adc
xchg
lret
loope
jnp
mov
ds
ret
and
bound
pushf
jp
int
mov
or
sub
mov
mov
and
push
lds
fmull
xchg
jmp
idiv
iret
jp
ljmp
imulb
dec
repz
hlt
or
fyl2x
mov
adc
jp
out
xchg
xchg
aas
jae
and
jg
iret
sahf
sbb
mov
dec
sarl
hlt
mov
push
xchg
out
add
fcmovnbe
mov
int
and
outsb
test
cmpsb
aad
mov
sub
jo
pop
test
add
jp
stos
inc
push
mov
arpl
mov
lods
mov
notb
dec
push
jns
scas
mov
popf
sub
sub
push
mov
loop
and
push
ja
add
or
adc
loop
or
fs
lds
mov
cwtl
fwait
jecxz
clc
data16
add
gs
pop
adc
fstpl
inc
imul
push
pop
sub
stos
dec
pop
je
and
test
dec
imul
lods
and
mov
test
jge
hlt
xlat
jb
test
push
mov
push
dec
or
rcr
jmp
xor
jb
imul
or
jno
es
or
cli
jb
in
cli
adc
repnz
xchg
mov
mov
and
rorb
imul
mov
jbe
std
loopne
sub
mov
adc
sahf
adc
in
sub
iret
leave
jnp
mov
xchg
fistpll
pushl
add
ds
xchg
addr16
movsl
adc
adc
xor
adc
ret
int3
arpl
dec
push
js
xchg
pop
push
inc
dec
popa
add
decb
xor
pop
pop
test
cltd
out
lds
test
and
add
push
cmp
lret
dec
jnp
sbbb
dec
sbb
bound
push
jecxz
add
push
jae
jmp
sbb
push
xchg
mov
xor
andl
sub
jae
mov
pop
sbbb
pop
ds
loope
jne
js
in
jbe
xchg
lea
pushf
xlat
testb
ret
mov
into
inc
dec
push
inc
push
push
xchg
and
cmp
aam
add
test
or
pop
stos
dec
sub
shrb
fimuls
adc
push
dec
repz
stos
stos
push
xor
push
sbb
rcll
data16
jbe
jnp
pop
mov
xor
dec
mov
push
inc
pusha
ja
mov
int
mov
fcmovne
adc
add
xlat
call
inc
push
mov
int3
movsb
into
ljmp
mov
mov
pop
lahf
or
cmpsb
in
jno
push
cmpsb
push
mov
enter
std
jnp
hlt
and
xchg
movsb
xchg
push
pop
aas
jmp
test
xlat
adc
and
mov
test
push
mov
insl
cld
rcrb
and
rorb
mov
shlb
cmp
push
cmp
push
clc
add
xlat
push
xor
out
loopne
and
pop
add
arpl
pop
pop
cmpsl
sbb
lahf
mov
push
jl
imulb
mov
push
mov
in
test
bound
aaa
xchg
fistpl
cmp
scas
xor
jmp
adc
cli
fists
pop
testb
jne
push
jle
sub
push
loopne
mov
es
cli
clc
inc
xchg
adc
xlat
pop
stos
pop
mov
pop
dec
xor
jle
jno
test
mov
push
lods
xorl
cmpsb
mov
add
rcl
adc
popa
mov
jae
push
sbb
mov
and
pop
pop
cs
xor
xchg
push
mov
roll
pusha
or
sti
das
cs
mov
out
xabort
mov
jns
xchg
jge
mov
sub
mov
sub
lds
jns
lods
loopne
inc
or
xchg
mov
out
and
xchg
pop
mov
test
adc
and
mov
mov
push
fmul
adc
sub
sarb
jb
add
push
icebp
xchg
jnp
mov
imull
adc
es
icebp
js
add
arpl
xchg
xor
mov
les
xchg
mov
outsb
mov
mov
dec
xchg
pop
movsb
out
pushf
loopne
and
inc
mov
cwtl
mov
shll
in
ljmp
scas
popa
orb
xchg
sub
fimuls
in
and
xlat
xor
push
xchg
sub
sbb
mov
push
sub
jle
lock
orl
aam
fdivr
adc
and
mov
pop
pop
xchg
test
mov
aam
jg
enter
mov
mov
negl
and
cltd
int
lods
cltd
mov
lret
or
cmpsb
dec
push
or
je
scas
jmp
into
cmpsb
insb
adc
jnp
jno
mov
dec
add
inc
jb
fdivl
jo
aaa
test
and
and
jge
lods
pop
jnp
dec
sub
mov
pop
scas
fs
lret
push
out
jae
pushf
jb
lahf
dec
ss
aaa
cwtl
scas
fsts
mov
cmpsb
fldcw
ret
pop
ljmp
ljmp
dec
jo
add
add
or
xorb
add
add
add
add
add
add
cmp
or
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
ds
adc
xor
push
flds
std
aad
sbb
cli
add
or
dec
add
push
push
push
mov
test
je
or
outsb
out
push
xor
cs
test
cmp
adc
call
jb
jne
insb
inc
in
gs
sbb
push
add
inc
mov
shlb
mov
arpl
pop
mov
and
mov
stc
push
pushl
cmp
rolb
push
push
clc
jbe
pusha
push
or
lea
stc
leave
mov
or
add
push
push
push
call
add
pop
pop
je
add
cltd
dec
push
addb
out
sub
adc
ret
mov
rorb
cmp
jne
or
inc
adc
mov
roll
mov
inc
and
or
or
xchg
adcl
mov
pusha
push
mov
ds
orl
push
rolb
pop
push
push
call
mov
or
rol
or
dec
xchg
mov
in
cmp
in
jp
out
iret
push
scas
jle
je
mov
shll
out
cmp
jb
push
sub
orl
cmp
adc
out
call
jecxz
pop
or
dec
rcr
nop
adcb
add
mov
and
subb
scas
jl
jg
or
push
add
data16
sbb
sarb
cli
sar
add
clc
mov
xorl
add
fisubrl
sub
fwait
xlat
push
and
fisttpll
loopne
ljmp
cmp
inc
std
int3
adc
dec
pop
sub
adc
jne
lea
push
leave
add
push
sub
cmp
adc
and
mov
loop
or
push
adc
cli
fdivr
cmp
daa
push
cs
out
sbb
or
add
adc
xor
loopne
sbb
cmp
sbb
mov
jb
int3
fists
or
data16
mov
or
cmp
sub
test
ret
inc
mov
xchg
aam
lret
or
gs
shr
ret
dec
add
addl
js
neg
xchg
subl
sbb
jmp
adc
pop
and
ds
in
mov
xchg
fwait
mov
push
lcall
push
inc
div
divb
sbb
fldl
or
add
mov
or
insb
cltd
out
sbb
pop
sub
test
test
add
mov
cwtl
rorb
cmp
or
mov
lods
push
dec
adc
sub
popf
stc
xor
loope
jo
adc
ret
lea
push
push
mov
sub
cli
ja
or
mov
push
lock
add
xor
dec
dec
fcoml
cmp
mov
in
or
pop
jmp
mov
mov
sar
aaa
nop
add
loopne
rep
adc
xchg
pop
or
lea
or
mov
push
clc
sub
and
test
adcl
call
jge
test
out
sbb
test
adc
clc
lea
dec
rclb
mov
enter
jp
xor
sti
xor
test
and
adc
add
mov
sub
inc
sahf
ret
rcll
mov
andl
push
add
cmp
dec
sbb
jl
xor
ss
bound
and
or
mov
xchg
es
mov
mov
movntq
out
cltd
xor
mov
fcoms
or
xchg
sub
jmp
or
or
out
push
add
clc
sbb
testb
fadds
jmp
test
jle
and
jnp
movsb
movsl
inc
fisttps
cwtl
xchg
stos
roll
jne
mov
mov
mov
cmp
or
jne
jl
cli
je
inc
shrb
inc
sbb
push
xchg
mov
mov
jb
nop
mov
movb
jnp
enter
xchg
sbb
hlt
jmp
test
jae
adc
fistpl
jl
int
inc
andb
adc
xchg
mov
test
mov
loopne
mov
test
mov
adc
pop
sub
or
inc
pop
push
dec
sbb
add
jl
cwtl
mov
pop
jge
or
aas
pusha
shrb
dec
in
sti
push
jl
cwtl
dec
cwtl
xor
jecxz
add
stc
dec
jecxz
add
into
sub
push
jge
lea
push
xor
cld
sub
ret
pop
add
xor
fsubr
ja
adc
cld
push
jno
call
fsubs
xchg
cs
sub
adc
shl
mov
inc
mov
mov
js
test
xchg
push
xchg
ret
imul
stc
shrl
inc
dec
push
mov
inc
adc
cmp
pop
cmp
or
addb
int
jb
sub
inc
cmc
xor
leave
pop
test
notb
nop
daa
xor
push
pshufw
add
jo
or
shlb
pop
hlt
pop
fwait
adc
adc
add
xor
jo
in
sbb
push
rcrb
or
sub
add
or
or
xor
lret
cmp
scas
cmp
sbb
or
cli
sub
xor
and
xchg
push
call
sbb
ficoml
push
lea
inc
inc
rolb
lock
fimuls
add
add
lea
lods
stos
nop
add
je
mov
test
sbb
mov
cmp
mov
rep
cld
repnz
mov
add
xchg
outsl
add
push
or
push
call
dec
cmpsl
dec
and
mov
dec
lea
loop
xor
call
test
loopne
xchg
jb
dec
sbb
rcll
inc
add
popa
test
sub
push
sub
push
in
add
xchg
and
mov
or
ret
sub
xorb
loope
cmp
jg
push
test
push
adc
scas
sbb
es
inc
pusha
xchg
inc
loop
enter
rclb
test
inc
sbb
rcl
adc
or
ficoms
inc
or
dec
inc
shl
test
sbb
sub
mov
test
cmp
xor
andb
pushl
stos
mov
out
pop
pop
pop
dec
pop
and
cld
and
call
jmp
adc
aas
into
jae
push
add
push
call
or
loopne
add
in
cwtl
pushf
in
add
je
push
mov
jne
cld
inc
mov
ret
jmp
mov
lods
push
jne
int
leave
push
ret
clc
pop
sbb
inc
popf
sbbb
ret
je
jmp
push
cmp
repz
sub
add
clc
lods
outsl
mov
mov
pusha
enter
or
dec
inc
in
movw
lods
icebp
popa
push
mov
add
fiaddl
out
setae
or
cmp
fmull
dec
pop
and
jmp
xchg
jbe
jae
shll
repz
pop
pop
add
adc
cmp
repz
imul
fistl
leave
or
push
jmp
cmpsb
push
add
mov
adc
pop
mov
add
je
cld
pop
push
sbb
push
or
add
lret
xchg
xchg
popa
inc
aad
mov
push
clc
fs
xchg
push
jne
in
or
jae
jo
js
insb
aaa
sbb
inc
pop
adc
mov
iret
jge
inc
push
inc
movzbl
add
push
cld
sub
pop
dec
je
dec
mov
xor
sub
ret
and
or
rclb
xchg
inc
or
add
test
xor
enter
mov
xor
bound
xor
jmp
xor
aaa
pop
add
sub
data16
push
push
add
or
lcall
aas
mov
lret
adc
in
pop
addl
sub
fs
loop
push
add
movsl
pop
sbb
jnp
xchg
cli
movsb
nop
outsl
push
rcrl
stos
clc
lret
stos
pop
into
pusha
insl
cmp
cmp
ret
xorb
mov
mov
add
push
lock
push
push
and
push
mov
in
adc
enter
mov
pop
imul
xchg
out
arpl
lock
leave
jl
or
lret
repz
hlt
push
test
mov
aaa
push
push
in
push
in
in
shlb
leave
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loop
add
out
out
sti
test
pushf
pushf
fimull
mov
or
and
inc
sahf
dec
adc
mov
pop
pop
pop
insb
xor
and
ds
sub
lock
add
mov
or
push
filds
mov
ret
mov
adc
push
mov
pop
and
imul
or
mov
add
mov
lea
sbb
mov
add
je
test
push
sbb
push
cmp
ja
xorl
sub
lock
mov
xor
rorl
cmp
jae
mov
cltd
ljmp
out
faddl
jle
je
sbb
rorl
ficomps
notb
mov
in
sbb
lcall
xor
js
dec
pop
cmp
cmp
add
push
je
and
or
mov
dec
enter
mov
jnp
push
push
push
push
call
mov
dec
mov
clc
push
pusha
lds
in
gs
inc
sbb
inc
or
adcl
daa
sbb
inc
inc
mov
xorb
mov
int
mov
adc
sub
adc
popa
jnp
or
cmp
mov
inc
inc
jmp
pop
int
roll
adc
jp
dec
add
jbe
testb
dec
lahf
movsb
and
test
and
test
lock
dec
inc
mov
push
push
inc
xor
inc
mov
outsl
dec
popa
mov
pop
mov
xchg
adc
imul
sub
adc
iret
lock
sbb
mov
pop
inc
sub
mov
xor
mov
nop
adcb
repz
mov
and
cwtl
push
push
cld
inc
xchg
pop
mov
in
mull
loope
jmp
sub
xor
stc
mov
pop
test
cmp
cmp
dec
adc
mov
bound
sub
sti
xchg
sahf
cmpsl
and
and
lds
loopne
jno
pop
insb
imul
and
jb
iret
adcl
arpl
fs
adc
jae
xlat
iret
das
insb
sahf
pop
outsb
lahf
je
bound
xlat
fstpl
ss
pop
jl
inc
jno
lret
xor
sub
insb
and
imul
je
sbb
daa
fildll
adc
jae
sbb
xor
popa
xchg
js
pop
ja
popf
xor
cltd
or
fdivs
jae
or
lcall
js
je
movsb
into
faddl
dec
popa
outsb
fs
cmovg
sub
pop
inc
iret
je
push
out
sub
inc
cmpsl
loopne
inc
mov
sbb
and
es
xor
test
add
mov
push
mov
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
or
cwtl
adc
add
jge
add
jo
add
or
add
pop
add
jo
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
or
add
add
add
push
push
push
push
mov
test
je
call
imul
gs
xor
cs
insb
add
adc
add
add
add
push
imul
jb
add
push
add
shlb
call
push
imul
insb
insb
outsl
arpl
push
call
test
je
mov
mov
push
push
pushl
push
call
test
je
mov
push
push
pushl
push
pushl
lea
push
movzbl
push
movzbl
push
movzbl
push
pushl
push
call
add
test
pop
je
xor
dec
push
push
pushl
push
call
pop
jmp
xor
dec
pop
pop
pop
pop
ret
mov
mov
cmp
jne
movl
or
ret
mov
inc
mov
ret
mov
mov
push
mov
andl
andl
push
mov
add
orl
push
mov
pop
push
call
pop
mov
movzbl
shl
or
dec
mov
jne
pop
pop
ret
push
mov
mov
push
push
mov
andl
test
mov
push
mov
je
mov
shll
shr
cmp
jb
sub
orl
cmp
jae
push
shl
call
movzbl
shl
pop
or
decl
jne
mov
mov
pop
mov
pop
pop
pop
ret
mov
movzwl
push
mov
mov
push
mov
shr
imul
mov
cmp
jae
mov
xor
mov
movzwl
mov
sub
sar
add
mov
cmpl
jae
push
call
pop
mov
movzbl
shl
or
shll
mov
xor
jmp
sub
sub
mov
mov
xor
mov
xor
mov
shr
sub
mov
cmpl
jae
push
call
pop
mov
movzbl
shl
or
shll
mov
xor
inc
pop
pop
ret
push
mov
xor
inc
cmpl
je
push
push
mov
pushl
lea
mov
add
push
call
pop
add
dec
pop
jne
pop
pop
mov
xor
inc
shl
sub
pop
ret
push
xor
push
xor
inc
xor
cmp
jle
push
mov
pushl
lea
add
push
call
pop
pop
mov
lea
shl
or
inc
cmp
jl
pop
pop
mov
pop
ret
xor
inc
push
pushl
lea
mov
add
push
call
or
cmp
pop
pop
jl
pop
ret
push
mov
push
push
xor
push
inc
mov
movzbl
mov
pushl
shlb
shr
lea
shl
add
lea
push
call
add
pop
or
cmp
pop
jne
cmp
jl
jmp
mov
pushl
lea
add
push
call
pop
or
pop
mov
cmp
jl
pop
pop
mov
pop
pop
ret
push
mov
push
mov
push
push
call
test
pop
pop
push
jne
mov
shl
lea
push
push
call
add
jmp
lea
push
call
test
pop
pop
push
jne
mov
shl
lea
push
push
call
add
add
jmp
push
add
push
call
add
add
pop
pop
ret
push
mov
sub
mov
andl
push
push
mov
andl
xor
inc
lea
push
mov
shl
mov
mov
shl
mov
mov
mov
mov
mov
shl
add
xor
dec
dec
lea
cmp
mov
mov
jae
push
pop
jmp
test
mov
jbe
mov
shr
mov
mov
rep
adc
rep
pushl
lea
pushl
push
call
mov
andl
add
cmpl
jbe
mov
and
cmpl
mov
jne
mov
lea
push
mov
shl
add
lea
push
call
test
pop
pop
jne
mov
and
xor
mov
sub
movzbl
shr
mov
shl
add
lea
shl
cmp
lea
jl
mov
sub
mov
mov
mov
pushl
lea
push
push
call
add
jmp
lea
push
push
call
pop
pop
mov
incl
cmp
mov
mov
mov
jge
andl
jmp
cmp
jge
sub
mov
jmp
sub
jmp
lea
push
lea
push
call
cmp
pop
pop
jne
lea
push
lea
push
call
pop
test
pop
lea
push
jne
lea
shl
add
lea
push
call
test
pop
pop
jne
cmp
je
mov
cmp
setge
sub
lea
mov
mov
mov
mov
incl
mov
jmp
lea
push
call
test
pop
pop
jne
mov
jmp
lea
push
lea
push
call
test
pop
pop
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pushl
lea
push
lea
push
call
mov
xor
add
cmp
setge
dec
and
add
mov
jmp
mov
mov
mov
pushl
mov
mov
mov
xor
cmp
setge
dec
and
add
mov
lea
push
lea
push
call
add
cmp
mov
jl
push
pop
lea
push
shl
lea
push
push
call
add
cmp
jl
mov
mov
and
sar
dec
or
shl
cmp
jge
lea
push
push
mov
sub
lea
push
call
add
add
jmp
add
push
lea
push
call
shl
add
lea
push
lea
push
push
call
add
jmp
mov
mov
inc
mov
cmpl
je
mov
cmp
ja
mov
addl
mov
sub
add
mov
mov
inc
inc
decl
mov
je
cmp
jb
mov
cmp
jb
mov
mov
mov
xor
pop
pop
pop
leave
ret
xor
inc
jmp
add
add
add
pop
add
add
push
add
add
add
add
add
or
shr
add
hlt
push
add
add
add
add
add
add
or
add
jo
add
inc
or
add
add
rorb
add
add
add
add
add
inc
or
incl
adc
add
adc
add
fiaddl
add
inc
or
add
add
or
add
add
add
add
add
andb
incl
adc
add
adc
add
roll
add
add
add
add
or
cli
sub
rolb
add
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
push
push
call
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
push
call
push
push
call
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
push
call
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
mov
mov
mov
cmp
je
mov
test
je
add
mov
sub
mov
lods
mov
add
lods
test
je
mov
sub
test
je
movw
lods
cmpw
je
add
mov
mov
and
add
shr
cmp
jne
mov
add
dec
dec
jne
jmp
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
movzwl
test
je
mov
add
push
lea
push
pushl
pushl
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
movzwl
push
pushl
call
test
je
push
mov
mov
mov
sar
rep
add
and
rep
pop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
movzwl
test
je
push
push
mov
sub
mov
add
lea
cmpl
jne
push
call
mov
lea
lods
add
stos
lods
add
stos
lods
add
stos
jmp
xor
add
je
add
pushl
call
pop
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
lea
xor
add
je
add
xor
mov
mov
add
cmp
ja
add
dec
jne
sub
mov
and
jne
mov
add
mov
mov
push
lea
push
push
push
push
call
xor
add
je
add
mov
test
je
push
call
mov
add
jmp
add
jmp
pop
lea
push
pushl
pushl
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
push
mov
lea
xor
add
je
add
je
cmp
jae
add
cmp
jne
inc
inc
jmp
pop
jmp
call
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
xor
xor
add
je
sub
xor
lods
test
je
cmp
je
add
inc
jmp
mov
pop
pop
pop
leave
ret
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
inc
jne
mov
add
pop
pop
pop
leave
ret
dec
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
inc
jo
insb
imul
and
jb
jb
push
push
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
imul
jne
je
add
add
sbb
adc
sbb
adc
add
add
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
sbb
add
jbe
add
fcomps
adc
sbb
adc
sbb
adc
add
add
jb
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
sbb
add
es
add
dec
sbb
add
repz
adc
sbb
adc
