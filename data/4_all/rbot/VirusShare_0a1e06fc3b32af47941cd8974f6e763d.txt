lret
and
jl
mov
xchg
addb
aad
imul
outsb
mov
cld
arpl
cmpsl
arpl
loop
push
aas
inc
xchg
jecxz
insb
test
sub
add
sbb
ret
push
lods
inc
xor
sbb
or
xchg
cld
addr16
cmp
adc
push
push
xchg
adc
pop
test
enter
push
pop
push
ja
std
cwtl
aad
mov
imull
test
popf
mov
fidivrs
cmp
sbb
lds
xor
dec
jmp
sbb
jno
popf
insl
xchg
add
xor
call
xchg
cld
xor
pop
jle
adc
int3
aam
push
and
outsb
jne
hlt
jmp
cli
addr16
rclb
fucomp
aad
ds
and
sar
or
into
mov
in
pop
jge
push
test
daa
jmp
pop
add
cmp
mov
mov
hlt
adc
xchg
shrl
mov
pop
lods
cwtl
jecxz
popa
int
and
mov
push
and
rolb
push
fst
mov
and
cmp
sub
out
outsl
inc
mov
inc
xor
stos
das
and
add
outsb
mov
and
out
inc
xor
fs
xchg
fwait
xchg
jne
or
jle
mov
mov
lret
dec
insl
imul
outsl
xchg
sahf
mov
daa
mov
jl
xchg
inc
push
inc
aaa
loopne
insb
and
adc
lcall
test
xchg
mov
fistl
inc
je
add
icebp
mov
movsb
insb
sub
outsl
test
jbe
lea
jbe
stc
push
pop
push
push
sahf
cmp
aad
jns
aas
and
or
aas
mov
data16
test
leave
and
mov
xchg
ret
fs
xor
mov
cmp
sbb
out
sbb
lods
loopne
je
or
mov
pop
hlt
sbb
popf
or
imul
hlt
or
inc
lods
dec
stos
cli
shll
inc
push
lock
xor
ficompl
mov
pop
in
inc
mov
int
mov
push
mov
in
out
fmuls
aad
fcoms
imul
movsl
inc
cmpsb
mov
jmp
pop
insb
lea
sahf
pop
std
jmp
pop
pop
and
outsb
clc
mov
and
fidivrl
add
jecxz
xchg
rorl
pop
das
cmp
cmp
loope
in
add
scas
sub
fiaddl
cmp
dec
adc
cmp
iret
jno
ja
lock
fidivs
stos
lcall
add
movsb
add
in
or
imulb
fdivrs
pop
and
stc
das
push
clc
mov
or
movsb
roll
bound
xor
mov
fwait
mov
dec
xchg
sysexit
mov
add
dec
shll
jbe
push
outsb
shl
sahf
enter
mov
push
leave
aam
adc
leave
jmp
jmp
dec
dec
int3
or
ret
imul
or
and
jg
pop
leave
arpl
scas
shrb
fwait
leave
sub
js
cmpsb
sbb
aad
adc
lds
clc
sbbb
inc
fmull
nop
pop
jmp
ret
inc
lret
inc
jmp
sbb
mov
fisttpl
fisubs
cwtl
mov
push
or
loopne
adc
push
sahf
jg
gs
pop
psraw
mov
adc
ss
fiaddl
lret
add
roll
pop
jg
orb
and
int3
push
divb
xor
or
pusha
je
mov
insl
movsl
sbb
dec
mov
push
adc
inc
imul
push
push
push
xchg
lahf
lods
push
mov
js
ret
pop
in
cmp
out
jne
test
test
out
push
sar
and
mov
push
pop
dec
dec
icebp
xchg
push
cmp
lcall
push
ror
pop
cmp
stos
test
jae
push
roll
pusha
addr16
xchg
mov
dec
imul
mov
cmpsl
out
arpl
nop
sbb
fwait
adc
cwtl
test
stos
mov
push
pop
out
subl
xor
jge
lods
shlb
mov
js
xor
mov
sbb
lods
jo
mov
cld
xor
sti
dec
jbe
pop
push
mov
stc
jecxz
mov
je
data16
adcl
or
push
pop
mov
lcall
inc
inc
std
push
jbe
mov
push
add
push
push
dec
lahf
fnsave
add
add
in
mov
push
movsb
test
sbb
and
push
inc
nop
test
mov
push
ss
cld
imul
and
xorl
push
mov
mov
pop
inc
lock
mov
jb
cmp
xchg
jae
daa
clc
mov
jno
fdivl
sti
in
outsl
xor
pop
sbb
dec
push
es
push
xor
jmp
in
push
push
lahf
pop
pop
sub
pop
icebp
push
mov
out
push
rcr
orl
fidivl
pop
ljmp
xor
jle
sbb
mov
pop
mov
mov
jmp
mov
dec
outsb
mov
push
mov
js
push
popf
aaa
sbb
fcom
je
pop
dec
sub
jmp
xchg
dec
pop
daa
mov
xlat
cmp
mov
xchg
andb
jns
sbb
out
fsubrs
xchg
mov
mov
mov
jb
lods
mov
int3
repnz
enterw
xor
andl
movsb
imul
adc
mov
out
fdivrs
add
mov
in
lock
lds
adcl
inc
mov
inc
lock
leave
daa
cmp
in
sub
adc
lods
add
mov
inc
lahf
shrl
cmp
xchg
sbb
dec
xchg
sub
add
into
mov
out
mov
movb
jbe
adc
inc
xchg
sub
pop
pusha
lods
jns
push
fadd
xlat
mov
mov
int
mov
popa
push
test
icebp
clc
lcall
fsubs
ja
sbbl
xchg
adc
push
xor
mov
mov
bound
mov
into
addr16
push
adc
and
rdtsc
cmp
out
push
sub
jmp
pop
sub
fnstenv
cli
mov
dec
dec
imull
mov
xchg
test
into
push
icebp
inc
dec
fdivl
xchg
and
dec
inc
pop
sti
shll
inc
cmp
rcrb
and
adc
imul
notb
mov
inc
es
out
hlt
xor
sub
jmp
dec
mov
mov
cli
jno
mov
pop
mov
sub
hlt
add
jne
test
jmp
push
lds
xor
movsb
mov
add
lahf
and
jl,pt
inc
sahf
jno
or
cmp
fldt
mov
sbb
mov
dec
sub
lcall
repz
sub
jl
and
adc
mov
xor
and
iret
mov
sbb
or
scas
test
sbb
imul
dec
outsl
adc
push
lods
daa
stc
sub
fmul
xchg
or
ja
jnp
inc
outsl
lahf
sarl
ret
addl
insl
lock
stos
ret
xchg
mov
push
xchg
into
cmp
jmp
rcrb
sub
pop
pop
enter
mov
push
insl
pop
add
add
and
out
cmp
xchg
mov
sub
push
pusha
mov
push
fisttps
movl
pop
jns
push
xchg
cs
sbb
loopne
dec
push
xchg
mov
fdivrp
xor
and
mov
fldt
pushf
sbb
mov
test
lods
inc
ja
xor
and
outsl
dec
mov
shlb
fnstenv
mov
insl
sbb
je
and
adc
push
mov
cltd
fnstenv
inc
inc
push
or
nop
sbb
xchg
jo
leave
movsb
adc
sbb
repnz
js
shll
push
cmpw
lds
pop
test
lea
fxch
ss
call
xchg
mov
ret
mov
mov
sbb
sub
jb
and
stos
cwtl
dec
cmpsl
sbb
push
cmp
mov
mov
xrelease
je
or
push
pop
push
add
cld
das
and
cmp
mov
data16
loopne
fsubrl
mov
repnz
xchg
leave
ret
sbb
jbe
js
pop
adc
sbb
sub
je
mov
pop
and
je
mov
mov
decb
ret
push
mov
sbb
cmp
or
scas
repz
sbb
sbb
aam
fst
data16
add
push
jb
adc
fnsave
mov
pop
jl
das
add
xchg
cmp
cmp
jbe
cmp
and
rol
sub
push
sbb
pop
rcll
mov
icebp
arpl
and
int
lods
pop
sbb
test
cmp
mov
insl
inc
xchg
mov
adc
adc
or
add
ss
ljmp
push
stos
fdivr
sub
pop
fisttps
cmp
jne
pop
cmp
sub
fs
lea
cmp
jmp
cs
ret
adc
mov
test
xor
daa
jmp
stos
clc
lcall
sbb
cmp
mov
jae
fmulp
dec
in
jns
sub
dec
test
aad
mov
enter
leave
sub
or
mov
arpl
inc
popf
mov
aad
imul
pop
cmp
es
mov
mov
mov
pop
sbb
cmp
pusha
dec
jmp
xchg
je
or
push
xchg
orb
call
jge
push
cs
xchg
in
mov
or
cmc
pop
inc
lret
mov
and
scas
xor
scas
cs
jl
mov
dec
sub
and
jne
ret
cmpl
aaa
mov
test
xor
ss
lea
outsl
mov
jo
sub
dec
out
xchg
cmp
mov
in
jnp
enter
sahf
xor
xlat
pushf
into
dec
jecxz
enter
pop
sub
add
xchg
loopne
dec
cmp
mov
inc
push
adc
int3
dec
cld
jecxz
les
data16
cmp
aas
in
int
mov
or
push
dec
rclb
loope
and
sbb
std
sbb
rorb
test
hlt
sub
pop
loopne
add
xlat
xchg
lahf
aam
lea
and
jb
fnop
cwtl
sub
ret
mov
mov
jp
subb
stos
adc
movsb
mov
lea
fdivl
iret
push
aas
les
fisubs
out
imull
or
test
push
jmp
dec
call
pop
xchg
aad
enter
into
xchg
mov
or
jne
mov
adc
mov
shll
push
insb
rclb
shrl
dec
jg
sub
jne
cmp
loop
sti
cmp
jae
fmuls
dec
sbb
mov
mov
out
fstpl
cs
xchg
test
mov
mov
std
sub
mov
sti
jns
insb
aad
dec
fwait
in
sbb
ds
push
cmpsl
xor
dec
leave
fwait
xor
popa
xor
jmp
data16
dec
push
les
jl
call
push
hlt
cmp
xor
sbb
popf
add
adc
aam
jne
lock
pusha
sub
inc
mov
jp
jo
push
xchg
mov
ljmp
insb
push
lret
lock
enter
fiadds
mov
or
mov
dec
mov
jecxz
and
and
int
test
in
jb
sarl
jmp
je
nop
jne
pop
mov
repnz
inc
out
sbb
push
out
xchg
int3
inc
shll
xor
add
sahf
ret
fadds
dec
in
inc
push
js
not
sub
push
mov
fbstp
cmp
imul
in
mov
and
mov
cli
out
repnz
pop
sbb
shll
mov
sbb
sub
inc
jl
mov
inc
dec
data16
adc
popa
and
push
sahf
cs
mov
sub
pop
rorl
sub
cmp
jo
test
lahf
clc
daa
sbb
loope
jmp
test
inc
shll
cmp
sub
test
cmc
mov
shll
test
test
xchg
sbb
xor
lahf
or
sbb
sub
add
in
aam
xchg
add
lcall
daa
mov
sub
insb
mov
jmp
mov
cmpsl
ljmp
jnp
pop
mov
jb
loopne
arpl
fbstp
sbb
cmp
fisubrs
jb
ljmp
jp
out
stos
jl
push
xchg
xchg
push
test
lock
rclb
xor
pusha
in
bound
sub
ficoml
jb
pop
add
dec
loop
int
pop
fucomip
mov
jg
fsubl
mov
loop
and
push
push
fldl
fcmovnu
jge
and
ja
movsl
outsl
sbb
cmp
cmp
aad
in
push
scas
adc
jmp
xchg
adc
adc
rcrb
jmp
setno
rolb
mov
xchg
mov
pop
imul
out
mov
lcall
subl
cmp
sub
sbb
mov
orb
sub
ss
addr16
xchg
and
pop
movsl
neg
sub
jg
sub
push
mov
push
push
mov
dec
aaa
mov
sub
push
mov
sub
jmp
sub
outsb
xchg
push
adc
icebp
insl
stos
and
jmp
outsb
pop
sbb
lcall
nop
mov
je
ja
lock
imul
outsb
in
jno
xchg
mull
mov
test
cmp
jmp
mov
inc
leave
imul
sbb
xor
mov
mov
jno
push
enter
xchg
outsb
or
out
rcrl
in
mov
pop
stc
ja
mov
push
insb
or
jmp
sub
cmp
insb
pusha
push
andb
ss
mov
ljmp
cli
call
das
ds
pop
sbb
int
or
enter
xor
xchg
pop
dec
lahf
mov
inc
pusha
bound
cmovp
out
imul
mov
xchg
dec
cwtl
out
fs
repnz
aas
ja
inc
add
daa
and
repz
jle
loope
cmpb
adc
inc
or
dec
jb
mov
scas
mov
mov
mov
inc
mov
out
loope
pop
loopne
adc
xor
mov
mov
xor
cmp
in
lods
and
xlat
pop
insl
cmp
push
jne
into
jmp
clc
xor
pushf
ds
outsb
sub
push
adc
push
ljmp
push
xchg
fmull
add
mov
cmp
adc
mov
subl
aam
ja
mov
mov
sahf
xchg
sbb
ret
aas
cwtl
mov
jecxz
test
push
xchg
loop
cli
pop
mov
decl
dec
jg
mov
push
cmp
fs
shlb
aam
or
mov
sahf
aad
mov
or
or
out
outsb
or
jmp
adc
push
imul
call
cltd
cltd
loope
xchg
int
lret
adc
xchg
ret
xor
mov
xor
in
das
les
add
pushf
nop
lock
jo
and
dec
loop
mov
fsubp
fcompl
ret
js
es
push
sub
and
lods
fidivl
out
mov
pop
add
dec
push
xchg
add
xchg
and
idivl
add
data16
push
stc
sbb
test
mov
test
sub
in
cmpsb
out
jb
xor
addb
pop
and
push
aas
outsb
lock
aad
pop
lahf
mov
jg
cli
iret
cwtl
lods
add
mov
cmp
mov
mov
cmp
sub
pop
pop
cmc
push
int3
fildl
inc
ljmp
test
push
es
dec
jle
mov
jl
data16
ss
in
lret
sub
outsb
xor
xor
push
andl
cwtl
fsubs
xchg
sub
mov
mov
imul
scas
popa
cld
mov
xchg
sbb
enter
subb
insb
sub
inc
and
sbb
shlb
add
dec
mov
xor
movnti
xchg
mov
jnp
out
and
sub
imul
fsub
ds
shrl
add
xchg
push
xchg
jb
xchg
mov
xor
je
nop
shrl
inc
lret
push
push
rclb
push
cwtl
fnstenv
leave
leave
ret
and
adc
mov
cwtl
repz
imul
cmp
mov
push
lcall
mov
mov
and
cmp
jb
les
push
outsb
pop
xor
aam
cmp
into
adc
pop
mov
xlat
rcrb
cmp
xchg
into
cmp
iret
lcall
repz
in
push
and
pushf
test
pushf
xor
into
jbe
cmp
push
sbb
inc
sbb
test
pushf
pop
adc
and
leave
mov
push
xchg
add
pop
xchg
jmp
lcall
push
xchg
nop
in
fldt
loop
mov
test
dec
lods
xchg
xchg
lahf
sbb
push
mov
jl
ss
xor
scas
orb
jb
jge
jmp
ss
cmp
int
sub
cmp
cmp
jbe
pop
loope
cmp
xor
mov
es
dec
mov
mov
sub
sub
sub
je
ret
dec
push
cmp
mov
lcall
and
dec
sbb
mov
mov
ds
jmp
mov
xchg
lret
fs
and
add
mov
sbb
jo
cmp
cmp
js
jmp
mov
cmp
sahf
ret
shrb
mov
bound
or
add
add
add
test
cwtl
in
cmp
shll
call
pop
cmp
std
out
pop
push
mov
jns
pop
and
pushf
imul
aaa
mov
sub
cmp
fwait
mov
push
dec
jno
fdivrs
in
mov
lock
sbb
lret
push
test
jne
sub
push
add
aam
jo
inc
adcb
aas
mov
jle
stos
pop
push
and
dec
mov
shl
in
sub
test
jb
mov
or
jbe
mov
dec
inc
ds
xchg
mov
xor
pop
mov
and
sub
imul
sub
sbbl
push
xor
es
mov
mov
pop
inc
les
sbb
dec
push
mov
enter
fiaddl
mov
notb
xor
imul
adc
js
mov
notb
outsb
mov
lds
mov
dec
mov
ret
fdivs
mov
push
mov
dec
in
dec
dec
loope
pop
mov
push
sbb
sub
xchg
pop
lss
mov
and
aaa
adc
bound
jbe
adc
dec
negl
jne
inc
jp
push
push
add
je
call
dec
in
mov
mov
int3
arpl
or
pushf
iret
das
arpl
jne
push
out
jne
mov
jp
mov
and
push
mov
out
pop
test
idivb
sti
imul
leave
jns
cmc
jnp
mov
add
and
add
lcall
test
adc
add
pop
icebp
mov
cmp
add
fcompp
cmp
push
loopne
insb
lds
sub
faddp
mov
sahf
mov
xlat
cmp
sbb
sub
arpl
push
sar
jecxz
jmp
pop
or
or
int3
jno
push
pusha
adcb
xchg
xchg
xor
xlat
xchg
repz
lds
aad
jmp
fwait
aad
xor
mov
xlat
les
mov
jns
leave
jge
mov
jnp
stos
xchg
cmp
cmp
decl
mov
fisttps
or
call
lret
adc
or
cmp
push
mov
dec
test
pop
push
into
movsl
out
mov
cwtl
ds
ret
sub
lock
test
mov
mov
and
sahf
outsb
inc
aaa
push
aam
mov
add
ja
mov
adc
inc
mov
mov
dec
xor
push
push
adcb
negl
out
mov
gs
test
jnp
js
mov
sub
loop
jecxz
loopne
cmpsl
mov
test
inc
jmp
cmp
adc
frstor
dec
and
fmuls
sbb
inc
push
jle
mov
add
pop
mov
std
ss
fisubrl
lret
mov
int
pop
lret
call
stos
push
mov
fimull
sub
and
fucomi
cmp
xchg
or
cmc
neg
sub
dec
xorl
and
fwait
push
mov
lods
jno
pushf
jle
dec
shll
test
in
lret
adc
sbb
jmp
stos
inc
test
call
dec
test
pusha
pop
aam
mov
sbb
mov
push
lds
add
scas
adc
popa
sbb
inc
popa
push
and
xchg
cmp
pushf
push
fildll
popa
mov
pusha
bound
adc
dec
movsb
leave
xchg
add
addr16
jnp
je
call
mov
fimull
mov
xor
cwtl
cld
popf
and
lahf
aad
shlb
loop
mov
push
inc
pop
js
movsl
imul
into
cmpsl
jno
cmp
push
stos
movsl
mov
mov
pop
jg
popa
push
stos
and
push
or
fs
push
popf
sbb
push
mov
xchg
ret
fucom
add
mov
mov
gs
push
cmp
pop
dec
outsl
inc
popf
jne
adc
sub
rclb
jnp
add
pop
xchg
dec
push
in
js
ljmp
push
pop
test
mov
and
mov
ss
dec
gs
push
dec
pusha
push
push
add
mov
insb
xor
pop
push
dec
and
sahf
js
push
clc
rcll
aas
out
leave
pop
inc
cmp
xlat
xchg
xor
jbe
and
xchg
xchg
push
sbb
jo
mov
jg
dec
clc
adc
cltd
cmp
adc
push
es
mov
rcrl
pminub
sarb
and
dec
pop
loope
jle
push
ja
cltd
sbb
jno
pop
adc
aam
stos
sbb
push
outsb
xchg
adc
jb
rolb
and
pop
jbe
addl
push
addw
adc
sbb
adc
insl
pop
rclb
mov
sbb
cmp
jo
sti
popf
repz
mov
adc
adc
ss
push
push
mov
adc
pop
sahf
cmp
movsl
pushf
jp
jmp
daa
fnstenv
push
or
pop
mull
orl
push
cwtl
fxch
mov
fstps
mov
loopne
rolb
jle
cmc
std
push
adc
mov
idivl
rcr
push
cltd
lds
jle
sahf
add
stos
sub
adc
fnstcw
mov
call
lods
jae
popf
sub
xor
sbb
sbb
lods
xchg
shl
or
dec
xchg
shr
jmp
push
pop
inc
xchg
jmp
test
rcrb
pusha
mov
sub
scas
add
aad
cmp
sarl
add
dec
rolb
out
test
fidivl
push
je
xchg
mov
push
into
test
cwtl
push
dec
mov
inc
sub
add
jle
xor
loopne
int
in
dec
ret
out
cmp
leave
push
arpl
out
pushf
jecxz
sbb
cmp
or
imul
test
or
scas
outsb
fisubs
popf
jnp
outsl
xor
pop
mov
jns
jge
mov
popf
cld
ljmp
or
add
pop
inc
adc
outsl
arpl
mov
leave
push
inc
movsl
incl
adc
sub
testl
mov
dec
push
fsubl
xor
push
fstps
pop
xchg
dec
cmp
stc
cmp
add
outsb
jne
mov
and
mov
xor
out
xchg
dec
jp
sub
sbb
adc
dec
jl
arpl
call
cltd
cltd
inc
data16
sub
lret
aaa
xor
fdivs
shlb
int3
call
and
or
pushf
push
xchg
loopne
sbb
pop
cmp
movsb
stos
pop
dec
cmp
call
ret
push
dec
in
xchg
test
sbb
push
lds
enter
rcrb
sbb
mov
pop
loopne
and
aad
jo
rorl
popf
mulb
or
rcr
test
enter
insb
das
inc
push
js
out
pusha
add
stos
fiaddl
adc
fwait
push
adc
add
mov
mov
test
jl
into
xchg
pop
sbb
jge
xchg
adc
repnz
dec
add
and
or
mov
cmp
aam
shll
call
mov
mov
or
xor
xchg
pop
lret
movsb
daa
jnp
xchg
jmp
dec
adc
jb
clc
pop
xchg
call
push
cmp
ja
jns
imul
test
push
data16
enter
inc
cmc
mov
insb
dec
jp
mov
dec
cwtl
fdivl
and
pop
pop
push
push
scas
stos
adc
adc
adc
push
cwtl
les
das
stos
cmp
mov
mov
add
repz
into
cwtl
push
mov
aad
aaa
lods
xor
sub
mulb
fisttps
push
mov
cmpsl
or
icebp
pop
xor
subl
popf
roll
push
rclb
nop
adc
enter
mov
cli
int3
daa
xchg
lret
notl
sahf
sub
lds
popf
ds
movsb
stos
je
xchg
cmp
popa
sbb
pop
aam
mov
mov
fadds
jns
ret
sub
jbe
mov
add
cltd
jbe
hlt
shr
scas
adc
fbstp
int
jb
cli
fildll
test
adc
push
sub
mov
data16
add
xchg
sar
rolb
and
aaa
or
or
sbb
scas
sub
insl
daa
jne
xchg
cmp
inc
mov
sub
andb
sti
push
aad
idivl
in
pop
or
pop
cmp
flds
inc
pop
push
push
jge
cltd
mov
mov
sub
push
add
pop
xor
icebp
inc
push
out
mov
clc
imul
push
shl
pop
jne
jmp
mov
push
xchg
cmpsb
mov
inc
mov
adc
xor
xchg
dec
fmul
xchg
pop
jmp
xchg
or
sub
punpckhbw
test
sub
outsb
cltd
loopne
pop
push
cli
xchg
loope
dec
pop
adc
xorb
and
pop
repnz
lret
outsl
lahf
inc
outsb
pop
outsl
or
pop
jo
or
and
fisttps
or
nopl
ret
push
cmp
iret
mov
mov
lcall
lret
das
push
push
inc
mov
pop
and
movsl
ret
out
dec
xor
cmc
shrb
mov
mov
mov
lret
lcall
cs
dec
data16
cli
dec
lock
outsb
negb
pop
cmc
daa
dec
es
xchg
lret
pop
inc
les
push
scas
mov
clc
cmp
jo
xorl
daa
lcall
aad
lods
sub
xchg
adc
je
mov
pop
mov
pop
jno
icebp
sub
mov
cld
rcll
shl
xchg
inc
fsqrt
jge
mov
inc
mov
xor
adc
adc
push
in
push
pop
or
cli
imul
pop
xchg
imul
and
pop
loop
fwait
push
pop
fs
xchg
inc
out
inc
addb
mov
sbb
push
stos
stos
dec
dec
insb
test
jecxz
rcll
dec
arpl
xchg
mov
xchg
and
es
and
ja
push
push
jb
dec
aam
into
sahf
push
xor
mov
std
jle
popf
call
sbb
push
dec
push
test
faddp
mov
sbb
mov
aaa
xchg
add
jp
cmpsb
push
cmp
xchg
fsubrl
cwtl
ljmp
mov
mov
jp
testb
xchg
xor
cmp
mov
push
pop
inc
or
mov
fs
je
clc
sbb
and
sub
or
mov
es
push
dec
pop
nopl
mov
push
jb
divb
fdivl
mov
or
movl
shrb
mov
pop
ds
push
rcl
xor
addr16
ja
dec
fisubs
mov
mov
xchg
and
pop
xor
sbb
in
cmp
xor
and
test
insl
loopne
pushf
mov
sub
fidivrl
add
adc
inc
rorl
out
fsubrs
inc
stos
lret
in
ljmp
ljmp
lds
or
mov
adc
leave
aam
sbb
or
jg
popa
push
and
add
stos
in
xchg
insl
dec
mov
fwait
push
dec
test
lds
mov
jmp
push
imul
xchg
cltd
dec
imul
les
imul
out
mov
dec
jno
pop
mov
sbb
jno
nop
mov
sbbb
imul
jmp
mov
sti
in
push
push
ss
jne
sbb
add
xchg
jp
jecxz
xor
lret
test
jns
or
lods
or
notb
jnp
loopne
stos
hlt
lea
inc
xor
and
pusha
lcall
rcl
inc
fnstenv
aad
sbb
inc
je
insb
xchg
mov
sbb
mov
xchg
push
movsl
sahf
sub
roll
push
popa
or
je
inc
test
mov
xchg
sub
fstpl
inc
rcrl
movl
mov
or
cmp
mov
push
bound
or
outsb
adc
fstpt
jbe
and
mov
xchg
outsb
jmp
xor
ret
rolb
lcall
rcrb
jecxz
gs
pop
lret
pop
insl
adc
and
sbb
and
dec
xor
ret
out
mov
jbe
xchg
or
push
push
push
pop
and
mov
cwtl
sbb
sbb
popa
mov
loopne
mov
das
mov
jge
ret
sbb
lret
lret
test
cli
aam
push
repnz
pop
adc
adcb
loopne
jmp
data16
pop
push
lds
ficompl
xchg
push
mov
mov
xchg
jmp
loope
xchg
sub
xchg
mov
mov
and
in
cmp
push
ja
sub
xchg
jb
ss
jns
jmp
mov
pop
xor
adc
push
xor
lahf
mov
push
fiadds
mov
cwtl
jle
or
out
jge
in
stos
test
mov
xchg
or
xchg
lcall
push
cwtl
jecxz
stc
xchg
add
mov
lods
popf
daa
pop
lcall
sbb
hlt
jg
mov
push
jno
fstpt
push
sub
adc
mov
inc
mov
mov
xchg
dec
jge
ljmp
push
xchg
push
lods
inc
and
pop
push
lea
or
adc
jb
ret
push
jg
push
daa
mov
in
adc
nop
mov
xlat
movsl
mov
mov
sti
into
inc
stc
das
mov
jae
int3
or
mov
mov
and
loop
pop
mov
adc
mov
sub
mov
out
jno
jno
fcmove
mov
sub
dec
cmp
or
xchg
jno
mov
adc
stos
jmp
dec
test
bound
lods
push
les
mov
cmp
bswap
test
adc
and
jl
add
adc
xchg
fwait
cmpl
and
push
mov
testb
inc
addr16
mov
cmp
xor
insb
aad
mov
les
or
inc
mov
mov
jo
pop
jl
xchg
adc
mov
mov
cwtl
sub
in
sbb
jno
scas
push
in
mov
jns
lret
addr16
push
ja
pop
mov
push
cmpsl
mov
imul
and
pop
imul
lret
lret
mov
push
mov
or
js
shrb
jp
das
pop
daa
inc
in
pop
push
or
adc
je
outsl
lcall
loop
mov
pop
push
xchg
sti
pop
int3
mov
enter
lahf
insl
push
outsb
pop
and
mov
jmp
xchg
xchg
or
dec
adc
or
mov
enter
mov
subl
out
push
and
sbb
and
mov
fwait
push
ds
test
std
ljmp
jae
shrl
dec
bnd
pop
sbb
ficomps
outsb
clc
push
cwtl
cli
mov
pusha
xor
cmp
jl
stc
ja
or
jnp
je
and
mov
mov
and
dec
or
out
popa
lret
test
inc
lods
addr16
js
insb
mov
test
push
dec
fcmovb
push
xor
pop
les
push
int
pop
scas
insb
test
mov
mov
mov
mov
mov
je
xor
jns
test
popa
pop
enter
or
enter
inc
popa
ljmp
mov
mov
xchg
cmp
mov
pop
addr16
imul
mov
jo
sbb
jmp
stos
pop
loope,pn
neg
lds
clc
mov
cmp
pop
pop
sbb
mov
mov
pop
movsl
cmp
lds
out
xor
sbb
insl
inc
lock
add
push
cli
sbb
fwait
lods
std
sbb
sbb
mov
jns
int
fdivrs
inc
dec
push
push
cwtl
or
aas
insb
cwtl
lds
jmp
addb
inc
adc
cvtpi2ps
xchg
jae
pushf
mov
mov
lret
rorb
fcoms
popa
pop
xor
push
clc
mov
psadbw
or
cmp
or
scas
dec
adc
stos
lods
jb
lret
and
dec
push
cmpb
mov
mov
sub
mov
rcrb
clc
je
es
sbb
xchg
addr16
clc
dec
insb
lock
nop
push
pushf
add
adc
ds
push
xor
inc
lods
out
cmp
stos
inc
das
sbb
stos
cmp
mov
xchg
shl
xlat
mov
gs
popf
sbbb
push
pop
lds
out
cltd
inc
clc
es
pop
ds
mov
je
sbb
inc
addr16
pushf
mov
xchg
fprem
inc
popa
mov
cmpsb
add
xchg
mov
into
lret
mov
das
bound
in
bnd
test
jo
jo
cmp
jb
icebp
faddl
shl
jb
inc
inc
mov
or
and
pop
dec
cltd
mov
arpl
je
lcall
stos
clc
pop
push
push
sub
cmp
adc
mov
scas
jmp
and
fadd
scas
pop
jne
test
push
jp
scas
xor
xchg
sub
rorb
add
mov
sar
adc
sbb
or
daa
push
add
jp
test
sub
jns
enter
xor
add
test
add
shll
lahf
xlat
icebp
push
stos
mov
es
mov
push
sbb
cld
xor
imul
mov
sub
push
or
out
pop
cld
mov
sbb
adc
xchg
and
mov
push
lret
fwait
xor
mov
jp
xor
inc
mov
inc
mov
repnz
loope
movsl
sbb
push
fisubrs
outsl
xor
fs
rcrl
mov
std
out
mov
ret
insl
adc
mov
jbe
adc
daa
mov
pop
inc
adcl
leave
dec
jmp
loop
out
inc
sbb
xor
pop
jmp
push
movsb
push
and
push
cld
sub
sub
icebp
cli
pop
in
movsl
iret
sahf
jnp
loopne
cli
pushf
lret
jp
ds
lock
mov
adc
pop
je,pn
stos
adc
pop
xchg
push
inc
sub
out
aad
jmp
daa
mov
je
inc
hlt
test
test
cmp
ds
sti
xchg
push
mov
mov
cmp
dec
decb
fbstp
xchg
jbe
rcll
imul
push
int
and
shlb
and
jmp
push
das
sbb
xchg
jns
int3
push
loopne
lret
dec
in
jnp
sub
and
clc
into
dec
add
push
sub
mov
lea
mov
rcr
jl
fmuls
mov
jbe
shll
add
mov
cmp
push
movsl
dec
test
and
test
arpl
sbb
subb
bound
and
pop
cmp
imul
ficomps
push
adc
adc
cmp
and
sub
xor
rclb
dec
and
ret
push
lds
jg
outsb
cld
mov
lcall
push
xchg
push
popa
adc
xor
cmp
push
xlat
lods
mov
push
int
pusha
pop
pop
or
stos
jnp
inc
add
test
ja
test
mov
out
in
cmp
dec
push
pusha
in
inc
add
sbb
loop
fdivs
mov
xor
cld
xlat
gs
cmpsl
mov
lock
mov
dec
icebp
dec
fnsave
cmc
pop
mov
ja
scas
xchg
insb
orb
push
lock
bound
rcrb
sarb
push
ret
cmp
inc
sub
push
mov
iret
fs
lret
sub
mov
sub
je
int3
cmc
mov
loope
push
pop
push
dec
stos
pop
movsb
mov
notl
test
jl
test
hlt
loop
mov
xlat
xchg
fisubl
gs
xor
xchg
mov
pop
jno
jae
fnstenv
sub
sti
ret
pop
jae
shrl
mov
jb
inc
orb
sub
popa
shlb
mov
mov
sti
xchg
push
pop
loopne
sbb
sti
mov
pop
lds
insb
fwait
insb
mov
test
cmp
or
or
cmp
pop
std
push
lahf
lods
add
sub
sbb
aam
jmp
adc
out
test
jge
xor
call
xor
pop
loop
sarl
lahf
popf
ret
mov
adc
adc
es
and
stos
push
sbb
xchg
scas
aaa
imul
pop
and
lods
cwtl
cmpsl
xchg
leave
test
push
lret
jp
movsl
les
mov
mov
or
mov
cmp
jle
or
out
mov
mov
xchg
mov
cmp
xorl
cld
cmp
ret
jne,pn
add
or
add
cmpsl
inc
push
out
lds
pushw
faddp
sub
adcl
push
out
jno
jle
push
jne
push
outsb
les
ljmp
sbb
pop
and
dec
fcoml
xchg
mov
adc
jae
sub
sbb
inc
xor
aad
outsl
xchg
or
pop
push
mov
push
and
or
nop
ja
aas
push
inc
ja
add
nop
adc
sub
jb
sub
sahf
sbb
stos
clc
fisubl
xor
inc
or
and
mov
pop
jmp
jp
mov
add
pop
int3
enter
popf
test
mov
xor
dec
and
movsb
push
sbb
jmp
xor
ljmp
jo
or
sub
inc
outsb
rcl
jp
cmpl
push
or
popf
or
test
movsb
daa
pop
lds
mov
jmp
cmpsb
fimuls
je
xor
jp
out
dec
cmc
sbb
xchg
xor
mov
push
fwait
icebp
mov
mov
or
hlt
jecxz
mov
cmp
pop
aad
cmp
mov
jle
cmp
jmp
out
rol
mov
sbb
ret
idivb
rcrl
and
rclb
mov
mov
mov
mov
pop
shrl
push
mov
ret
mov
dec
stc
shll
mov
adc
cli
data16
and
push
incb
sbb
mov
mov
push
sbb
mov
into
mov
pusha
ja
xchg
repnz
inc
cmpb
shll
sub
in
or
xor
pop
mov
jb
pushf
jg
mov
mov
int
lea
aaa
add
dec
or
fisubrs
jge
popa
mov
int3
loop
cli
enter
imul
lods
push
ds
arpl
xor
dec
pusha
sbb
xchg
mov
loop
sar
ss
inc
sub
pop
sub
or
rorl
out
rclb
mov
ljmp
mov
cwtl
push
mov
push
xchg
cmpsb
dec
and
in
aam
or
ss
jmp
imul
xorb
mov
add
sub
fstpt
sub
andb
xor
and
scas
mov
or
int3
jl
xor
ret
ljmp
add
movl
roll
lea
dec
mov
fwait
outsb
push
cmp
arpl
dec
inc
leave
lahf
or
call
out
mov
mov
mov
out
pop
push
add
data16
adc
xchg
push
cltd
mov
gs
jmp
mov
inc
cmp
in
bound
fdivs
xchg
cmp
cli
inc
popf
mov
fistl
mov
dec
sti
ljmp
out
jl
sub
imulb
subb
movsb
out
and
ja
and
jb
scas
imul
push
cmp
loop
adc
mov
xchg
shrb
ret
jno
jmp
movsl
xchg
jne
jae
pop
and
outsl
iret
fmull
sbb
inc
cs
inc
sbb
fistpll
int
mov
adc
and
cmp
sbb
aad
cltd
fwait
pop
or
das
cmpsb
fcmovnu
push
arpl
roll
jns
add
stos
mov
pop
das
dec
cmp
mov
stos
mov
push
dec
sbb
gs
mov
shl
aas
mov
or
neg
fisttpll
rcrl
lahf
xchg
or
cld
ja
dec
lahf
adc
lea
xor
xor
pop
push
sbb
jo
mov
adc
or
jb
in
or
nop
xor
jl
and
aad
jge
ret
and
cmp
jno
imul
lods
sub
and
fs
insl
mov
mov
pop
jo
push
aam
xlat
jmp
outsb
jno
push
cmp
test
lret
stc
mov
mov
arpl
shr
repz
shrb
and
ret
xor
pusha
cwtl
xchg
or
cmpb
push
rcl
pop
in
xor
mov
fdiv
mov
ds
das
sub
or
mov
inc
ffree
cmp
pop
int
movsb
xor
pusha
stos
mov
xchg
out
or
les
pop
push
cmpsl
jmp
cltd
sbb
add
mov
or
aaa
shrl
mov
in
mov
aas
cmp
sbb
pusha
push
push
pushf
das
mov
out
or
ljmp
dec
pusha
ss
dec
xor
mov
cs
pop
cli
ljmp
gs
cmpsl
inc
bound
ds
iret
mov
movsl
sub
mov
pop
iret
mov
cmpl
addr16
jmp
movb
push
jl
hlt
mov
mov
push
rorb
lret
call
add
repz
xlat
xchg
test
mov
fs
sub
push
cmpl
leave
jno
xchg
push
ja
sti
sub
pop
cmp
mov
fiaddl
xorl
shlb
and
stos
push
pop
push
fs
mov
cs
cwtl
ja
shrb
movl
cmp
pop
lea
enter
push
fldl
test
lods
scas
rcll
out
cmc
hlt
aaa
inc
sbb
js
xor
rolb
push
pushf
dec
push
je
imul
sbb
sbb
test
iret
loopne
arpl
je
push
sub
daa
dec
in
cmpsl
jno
shll
js
or
aam
mov
push
fucomip
fidivrs
stos
push
fsincos
inc
lea
push
rclb
fcmovb
das
cmovo
rcrl
mov
clc
fucomp
xchg
lret
adc
add
and
jmp
aam
rolb
add
or
mov
insb
xor
mov
adc
rorb
xor
loope
cld
cmp
dec
lcall
test
jne
stc
cmp
shl
scas
inc
mov
sub
jnp
repz
push
xor
mov
push
add
xchg
adc
nop
insb
jp
rclb
incb
pop
jle
mov
mov
cli
sarb
and
imul
and
push
xor
inc
cmpxchg
pop
adc
lock
pop
mov
xchg
or
inc
sti
addr16
cmp
lock
mov
out
add
push
push
in
add
cmpsb
sbb
push
xor
outsl
inc
pop
dec
repnz
xchg
sub
cmc
fiadds
leave
lds
repz
adc
or
sub
adc
mov
and
mov
dec
pop
inc
jne
fidivrl
mov
xor
cwtl
out
imul
adc
sub
dec
nop
mov
cmp
jns
cmp
mov
ja
loope
daa
sbb
stos
mov
jo
inc
pop
sub
sbb
lret
push
adc
pop
sbb
xchg
jp
test
xchg
dec
orl
jnp
or
pop
leave
push
lahf
jns
test
iret
mov
fistpl
pop
push
in
pop
pop
frstor
out
add
xor
cmpsl
pop
pop
xlat
or
pop
data16
call
mov
sub
addl
jmp
repnz
cmc
int
jo
jnp
pop
pop
xchg
mov
outsl
cld
jnp
lods
adc
mov
xchg
aam
loopne
imul
test
das
sub
adc
movsl
push
fstpl
ljmp
fsubr
shll
sbb
sub
inc
inc
push
sub
sbb
push
fnstenv
sub
jl
sbb
dec
inc
jle
mov
push
xchg
les
adc
test
enter
and
dec
add
push
inc
mov
dec
gs
and
andb
jb
jb
lahf
pop
js
rcrb
cmpsb
ss
sub
dec
xor
inc
fwait
addb
cmc
jbe
mov
inc
cmp
sbb
ljmp
cs
cmp
mov
int
adc
and
jnp
test
in
add
adc
sbb
out
lods
daa
push
mov
mov
fs
pop
lret
sub
loope
cwtl
cli
leave
lds
jbe
in
lahf
hlt
add
push
repnz
insb
les
jbe
push
mov
add
mov
sahf
and
push
pushf
lcall
pop
pop
mov
in
sub
push
out
xchg
dec
addr16
cmp
jp
or
inc
push
sbb
jle
jp
cmp
in
call
push
mov
push
bound
xchg
dec
sub
mov
pop
xor
sbb
mov
mov
jns
roll
or
fmull
loope
int
push
mov
sbb
insl
fiaddl
or
sahf
mov
push
jnp
pushf
pop
popf
outsl
or
xor
fucomi
dec
mov
sti
or
xor
in
push
dec
pop
popf
xlat
pop
push
cmpsb
lahf
test
jg
dec
add
lods
and
cmp
mov
sub
dec
mov
or
fbstp
mov
repnz
cld
pop
dec
inc
sarl
mov
push
pop
mov
jns
mov
push
inc
fisttpl
lret
xchg
outsb
jle
js
sbb
shll
cmp
add
add
mov
pop
xor
jp
mov
sbb
jnp
in
lods
es
ret
int
add
dec
sbb
insl
xchg
mov
int3
jge
adc
or
cmp
int
jnp
push
mov
mov
adc
loopne
out
subb
cltd
sub
xchg
aas
sub
cli
inc
shlb
sbb
mov
sub
stc
sbb
or
mov
lods
adc
arpl
das
rclb
dec
rclb
scas
inc
and
pop
adc
jg
push
adc
out
push
test
xor
add
rolb
xchg
aaa
subl
test
inc
outsb
mov
ficoms
or
jbe
pop
add
int
add
jle
jbe
mov
cmpsl
shr
cmovle
cmpsl
sbb
jp
pop
cmp
popf
push
addr16
movsl
mov
xor
sbb
sarl
mov
adc
push
add
mov
add
cmp
inc
dec
ss
push
push
mov
adc
mov
mov
xchg
adc
mov
dec
adc
add
dec
imul
in
sti
ljmp
xchg
xchg
sahf
jb
enter
xor
pop
lods
pop
dec
jge
dec
push
sbb
push
test
movsb
inc
lock
stos
inc
pop
fstl
fistpll
ficoml
ja
add
sbb
es
inc
push
lods
mov
movsb
xchg
dec
dec
xchg
lods
sub
mov
cmpb
movl
pushf
sbb
cli
je
mov
push
testb
push
dec
xor
mov
cli
out
in
in
lret
shll
push
push
mov
sub
and
pop
mov
loopne
xor
push
fdivrs
inc
rorb
sub
test
jnp
xor
fldl
mov
pop
mov
jb
sub
fadds
fcmovbe
push
adc
repnz
outsl
xor
mov
mov
test
ljmp
jbe
xchg
sbb
jae
sub
mov
ret
sbb
push
dec
cmp
xchg
pop
xchg
es
mov
hlt
xchg
dec
and
icebp
inc
out
xor
insb
xchg
push
sbb
in
and
scas
insb
mov
sub
mov
cmc
sub
dec
mov
daa
add
gs
je
xor
and
jmp
mov
es
or
mov
adc
mov
ljmp
cli
ficompl
pop
push
adc
mov
testb
sub
mov
push
add
js
lcall
sti
hlt
into
or
push
mov
xor
sbb
shl
or
call
adc
mov
dec
xchg
inc
inc
mov
jge
cmp
jge
and
shlb
sbb
push
mov
xor
xorb
pop
int3
jo
mov
ja
cwtl
pusha
sbbl
and
popf
xchg
jle
mov
mov
push
cli
mov
int3
scas
inc
outsb
sbb
inc
cld
push
lds
push
jbe
adc
es
xchg
jle
mov
lods
xchg
sbb
and
mov
and
jb
push
or
pushf
sub
loopne
jnp
subb
in
lock
out
testl
mov
jno
xchg
lods
sbb
out
repnz
and
mov
mov
repz
push
popf
push
call
enter
sbb
push
push
inc
cmp
mov
sub
xchg
cmp
out
xchg
in
push
stc
jle
mov
shrb
and
imul
mov
es
subb
and
outsb
mov
lods
pop
pop
pop
push
mov
pop
mov
sbb
out
sub
push
mov
cmp
cmp
mov
cmp
mov
cmp
dec
dec
fiaddl
push
mov
inc
cmpsb
repnz
add
cmc
and
dec
negl
adc
movsl
pop
stos
pop
lret
sbb
and
test
inc
das
pop
jnp
mov
mov
outsl
ljmp
hlt
loop
fcom
out
mov
aam
clc
loope
and
mov
fcompl
mov
dec
sub
jb
mov
scas
cmpsl
xor
push
pop
in
jl
and
ret
xchg
or
jnp
mov
push
pop
jbe
shlb
dec
sarb
jg
es
sub
pushf
push
lods
imul
subb
mov
xor
pop
cld
dec
test
jno
and
stos
ror
notb
mov
jae
mov
pop
cmpsb
cwtl
lods
add
lcall
sub
push
outsb
push
sbb
push
fldl
stos
test
mov
outsb
sub
add
dec
adc
cltd
mov
int3
jp
outsl
and
cmpsb
mov
push
jl
mov
andl
add
mov
rorb
out
push
stc
mov
int3
mov
inc
hlt
push
pop
shlb
test
dec
inc
add
dec
cmp
cld
lods
push
jbe
lcall
dec
pop
pop
outsb
shl
cmpsb
popf
mov
icebp
push
std
fisubrl
data16
icebp
jne
pop
sbb
sarb
scas
jl
push
dec
inc
adc
shrb
loop
and
adc
sub
loop
xor
aam
in
ds
and
xchg
shll
mov
aad
push
push
sub
test
push
scas
xchg
jecxz
rorl
js
cmc
in
push
mov
aaa
adc
pop
or
add
test
fidivl
shl
cmp
jge
pop
jnp
ss
cmpsw
or
in
inc
popf
sub
sbb
or
push
testb
mov
out
adc
mov
movsb
sbbb
or
jle
sbb
repnz
mov
dec
cs
movsl
lret
outsb
cmpsl
imul
popa
cmpsb
hlt
mov
add
cs
sbb
fcom
push
and
push
loopne
cmpsl
in
je
dec
out
lret
jle
sbb
les
jmp
sub
mov
fimuls
out
xor
mov
ljmp
sbb
loope
mov
xor
jbe
xchg
out
xor
mov
aam
into
dec
jl,pt
push
lea
ret
ss
add
mov
stos
rclb
dec
mov
movsb
aad
roll
orb
mov
sti
cmp
push
mov
and
ss
dec
push
into
aas
xor
push
fbstp
vshufps
push
movsl
lods
jecxz
pop
pop
add
add
and
sahf
mov
mov
fwait
std
push
mov
stos
push
inc
mov
mov
pop
fsub
cmp
mov
sub
int3
in
xchg
mov
sbb
add
xlat
faddl
mov
inc
add
mov
lret
inc
pop
ret
dec
pop
pop
lods
push
sub
in
test
mov
nop
mov
add
adc
out
loop
orb
and
sti
add
sarb
sub
lds
lahf
clc
andl
movsb
or
add
movsb
inc
imul
rorl
fsubs
dec
pushf
mov
fmull
cmp
aad
ret
push
cmp
cmp
inc
inc
aas
sub
pusha
adc
pop
push
clc
push
je
xorb
repnz
aas
cwtl
add
cli
sbb
adc
sbb
jle
popa
iret
data16
rcrb
negl
sbb
outsb
iret
xchg
add
aad
add
sarb
mov
push
xchg
inc
call
mov
xor
fadds
xchg
enter
das
and
mov
nop
sub
inc
and
outsl
xor
adcl
mov
jge
sti
cmp
pusha
scas
mov
sbb
out
mov
xor
sub
js
loop
into
xor
sub
decb
imul
mov
sbb
int3
arpl
mov
lods
mov
aaa
and
xor
sub
xor
push
das
mov
adc
jbe
sbb
enter
lcall
shr
mov
clc
sbbl
imul
mov
xchg
loop
cltd
cmc
xchg
cmp
iret
sti
lds
xor
scas
xchg
add
mov
push
psubsw
push
cltd
mov
arpl
adc
inc
jmp
pop
clc
or
das
xor
shrb
popa
sbb
xchg
or
fldt
cmpsb
inc
and
dec
in
inc
arpl
lea
and
mov
sbb
pop
and
jmp
sbb
mov
movsb
fiadds
fisttps
pop
xchg
sub
mov
xchg
pop
mov
push
aaa
lock
lock
scas
cmp
xchg
cmp
leave
jecxz
push
xchg
sti
jb
cltd
jae
pop
ret
shr
adc
mov
pop
mov
jns
or
outsb
push
lea
lret
das
ljmp
mov
insb
xchg
or
stos
lea
xchg
mov
sub
imulb
dec
mov
in
cli
nop
cltd
mov
xorb
aam
xchg
inc
iret
leave
leave
inc
enter
das
lret
xor
pop
and
pop
js
and
dec
adc
xor
mov
arpl
stos
xor
mov
mov
add
adc
in
cmpsl
jb
dec
pavgw
cs
pusha
mov
je
fwait
xchg
jge
or
inc
mov
pop
int3
mov
mov
jnp
aaa
inc
push
fwait
or
fbstp
inc
ss
sub
sub
jo
sbb
sub
test
add
rcrb
imul
ficomps
loop
jecxz
xor
xor
dec
adc
lock
fcomp
aad
ret
hlt
fxch
cmp
lahf
sbb
ss
loope
xchg
add
das
mov
xchg
mov
enter
pop
xchg
dec
pusha
outsl
jg
sbb
pop
lret
int
enter
jge
cmpsb
and
pop
mov
jo
frstor
mov
push
int3
sbb
roll
or
cmp
dec
ss
call
hlt
repnz
popf
ret
push
out
inc
jne
fldenv
fldenv
or
dec
aad
dec
mov
in
in
scas
ret
cmp
cld
mov
mov
cmp
jecxz
push
xlat
sbb
dec
fs
jne
or
or
sahf
aas
mov
cltd
movsb
cmp
or
jecxz
lcall
mov
cli
mov
das
cmc
jae
dec
ljmp
sub
fwait
outsl
pop
xchg
out
test
or
js
xor
dec
les
adc
dec
aad
lahf
or
dec
cli
xor
jg
xchg
insl
daa
mov
jge
in
bound
mov
cmp
cwtl
ds
push
mov
mov
out
rcl
js
int3
mov
dec
movsb
adc
das
testb
cmp
mov
push
stc
sahf
ja
leave
dec
mov
pop
pop
pusha
je
mov
mov
jae
sbb
sub
cmp
in
movsb
or
jo,pt
sub
add
cmp
repz
add
imul
repnz
in
scas
or
aam
cli
movsl
lea
jo
int
shr
sub
lret
vpand
rolb
insb
in
push
data16
xchg
shll
inc
inc
imul
dec
int3
pop
push
and
scas
aam
stos
lret
mov
mov
lahf
and
xor
jns
mov
sub
out
hlt
push
pop
xchg
pop
jnp
fistpll
leave
dec
test
or
sbb
mov
add
sbb
xor
outsl
pop
cmpsl
rol
xlat
daa
and
jp
sub
sub
daa
push
inc
cmpb
sbb
roll
xor
popf
inc
das
sub
rcl
ret
outsl
xchg
jg
lods
js
mov
out
jno
cmp
pop
shr
test
scas
mov
int
insb
mov
dec
outsl
dec
xlat
icebp
pop
orb
jp
pop
sub
pushf
jmp
sub
xor
jo
xchg
arpl
fsubs
fidivs
insl
fadd
inc
cmpsl
dec
adc
in
mov
xor
adc
lods
dec
inc
xor
add
adc
push
xor
mov
push
mov
dec
or
cmp
adc
cmp
sti
jno
dec
aaa
pop
jne
jo
loopne
insb
or
sub
jbe
divb
fisubl
or
aas
cmp
subb
mov
fcmove
cmpsl
lods
pushw
dec
jg
or
sub
xor
stc
nop
call
sub
cmp
lret
outsb
test
int3
pop
testb
add
or
jg
jmp
push
ret
cmp
adc
mov
out
mov
push
andl
jnp
adc
leave
and
in
cltd
xchg
les
ret
bound
imul
ljmp
pop
adc
bound
les
stos
loop
int
ret
xchg
jge
adc
mov
inc
or
mov
ja
mov
pop
add
inc
sub
sub
int
push
mov
les
rolb
les
cld
push
ss
je
inc
inc
scas
push
or
and
dec
sbb
mov
sub
scas
pop
push
lahf
adc
or
add
push
mov
negb
outsb
stos
lea
lcall
cmc
cmp
pop
imul
and
aaa
sbb
jae
cli
mov
cmpsb
or
scas
mov
mov
jg
xchg
bound
dec
in
movsb
push
adc
pop
stos
sub
das
xchg
pushf
clc
cmc
fs
lret
rcrl
std
adc
push
cmp
scas
sub
xchg
pop
push
inc
lret
cmp
clc
inc
mov
cmpsl
xchg
xchg
cmp
jns
outsl
ret
les
mov
mov
ljmp
sub
je
outsb
xchg
lret
cwtl
dec
filds
push
push
push
loop
mov
or
mov
adc
int
xchg
aad
and
das
dec
test
in
jo
negl
lds
jb
out
fisubl
mov
sahf
aam
mov
xchg
pop
mull
ja
jns
out
fstpt
popf
mov
adc
popa
jno
mov
and
mov
pop
outsb
mov
out
adc
lret
int
push
fisubs
xor
lret
cs
mov
rorb
dec
test
xor
in
scas
push
mov
inc
push
mov
push
sahf
pushf
jns
leave
outsl
ret
pop
lret
dec
insb
add
inc
in
cmp
sub
pop
or
and
out
pop
push
out
dec
push
orl
aad
cltd
stos
mov
mov
mov
mov
mov
mov
and
fwait
sbb
adc
xchg
mov
dec
mov
fwait
mov
push
xor
inc
outsl
xlat
push
mov
xchg
test
jae
xor
and
mov
jmp
jns
out
pop
dec
js
push
test
mov
insl
daa
outsl
fstl
adc
mov
into
adc
dec
imul
pop
pop
aad
mov
addr16
dec
push
push
jns
repnz
cltd
jo
mov
sbb
in
inc
adc
rcl
in
stos
adc
repnz
arpl
loope
jno
test
jbe
xchg
jle
idivb
pop
jl
hlt
add
cltd
lahf
insl
das
in
jbe
pushf
dec
push
ja
adc
jns
sub
loopne
iret
aam
push
mov
fisttpll
adc
cli
inc
lock
pop
mov
mov
mov
rcrl
loope
jns
ret
jbe
insb
mov
outsb
mov
and
adc
push
add
xlat
cmpsb
add
mov
aad
xchg
jb
push
sarb
fs
das
dec
push
push
lret
data16
pushf
cwtl
xchg
das
mov
and
mov
outsb
lcall
sub
ret
sbb
arpl
dec
outsb
or
movsl
mov
pushf
fldl
inc
test
dec
sahf
test
nop
cld
mov
into
shl
sub
sub
notb
xchg
jnp
adcl
enter
mov
shll
xor
dec
add
insl
rcll
jno
and
popf
jnp
cmovg
aam
dec
mov
or
xchg
lock
data16
inc
fisubl
fstps
out
jbe
adc
faddl
and
ss
or
ret
unpcklps
mov
dec
shll
pop
or
inc
jb
cmp
cmpb
out
push
scas
jecxz
mov
xchg
mov
icebp
imul
push
cli
and
cld
test
les
insb
dec
les
inc
out
out
sbb
adc
lret
pop
je
xor
nop
enter
sub
js
pop
int
dec
ja
xor
xlat
pop
mov
int3
into
adc
and
or
rorl
loope
dec
push
in
stos
sbb
inc
xor
test
ret
and
insb
mov
mov
clc
jo
cmp
stos
insl
dec
add
lds
mov
sub
das
or
test
popf
les
je
mov
push
repz
xor
mov
push
data16
xor
jmp
mov
out
lcall
test
ret
out
sbbb
daa
mov
xchg
inc
push
cmc
cmpsb
or
mov
and
sub
and
xor
aam
sbb
inc
add
outsb
addb
out
xchg
popf
mov
outsb
in
push
and
mov
stc
push
xor
stos
lea
cltd
mov
pop
and
pop
mov
loopne
add
cmp
cmp
test
push
mov
pushf
and
add
adc
cmp
jmp
and
into
sti
ss
stos
ja
add
mov
pushf
call
xor
and
inc
jno
xor
out
mov
lds
inc
jbe,pn
and
push
arpl
fsubrl
xor
test
dec
dec
movsl
jecxz
jae
popa
push
lds
testl
in
lcall
std
stos
sub
jae
test
test
lods
popf
ljmp
cmpsb
push
xchg
insb
add
mov
in
mov
xchg
outsl
jo
or
jp
adc
popa
mov
js
cmpsb
scas
popf
sub
cmp
mov
xor
mov
pop
xchg
mov
faddl
fmull
inc
or
arpl
cmpsl
push
scas
sub
and
js
and
xor
mov
cmc
jp
pop
mov
add
clc
mov
imul
ds
lcall
test
movsl
and
ret
pop
enter
popa
sub
jno
dec
incl
mov
lahf
ja
in
mov
add
loop
ss
sub
inc
dec
test
mov
xchg
cmp
pop
xor
movsl
add
imul
shl
shll
and
xor
pop
cmpsl
pop
inc
sub
cmp
sub
adc
sub
arpl
sub
je
test
xor
add
ljmp
sub
ja
and
pusha
and
add
mov
mov
inc
pop
mov
xor
cltd
aas
jmp
dec
lods
mov
xchg
lret
mov
pop
jo
jge
ret
fstpt
lret
fwait
add
stc
inc
jmp
adc
mov
outsb
push
out
jno
shlb
jle
les
mov
jl
outsl
cmc
aam
xor
mov
fxch
pop
pushf
inc
jbe
mov
sahf
shrl
leave
stos
adc
cmc
in
cmp
cmp
dec
sbb
and
dec
int3
fsubrp
push
scas
cld
repz
pop
mov
xor
test
dec
data16
fisubl
in
rcrl
and
sti
rcll
mov
add
inc
std
push
jno
ret
data16
jmp
adc
mov
pusha
mov
je
jg
inc
subb
inc
xor
pop
cmp
lcall
das
dec
outsb
inc
jl
or
push
lahf
mov
or
dec
je
inc
test
pusha
test
or
push
sbb
stos
jae
repz
add
cmpsb
popa
out
pusha
add
xchg
pop
divl
jae
je
mov
cltd
dec
out
jmp
sti
test
jbe
ret
mov
xchg
out
aaa
icebp
sub
pop
ss
ror
pusha
loopne
pop
movsl
es
jae
adc
aaa
je
cmpsb
ret
inc
cs
es
ss
add
dec
or
pusha
mov
cmp
inc
mov
jmp
push
and
xor
xchg
aas
mov
es
icebp
xor
mov
into
jno
mov
bound
pop
bswap
xlat
and
sbb
sahf
imul
imul
fldcw
cmp
mov
pop
mov
inc
rcl
mov
sub
or
add
adc
or
out
imul
push
int
sarl
stos
cmpsl
and
lea
scas
fsubs
aaa
jnp
cwtl
add
inc
cmp
xor
lret
sti
dec
adc
out
mov
sbb
imulb
mov
add
sub
rolb
sub
fcmovu
stos
popa
or
loope
aam
cmp
insb
shrb
dec
frstor
fdivs
fnstcw
push
mov
rclb
jg
out
js
dec
adc
and
add
sub
xor
inc
mov
xchg
xor
lahf
fists
subb
adc
fs
jg
push
xchg
mov
adc
xchg
pushf
das
mov
dec
mov
jl
push
or
test
stos
mov
push
ret
xchg
bound
sub
mov
push
jmp
inc
mov
movsl
inc
fdivrl
fstps
fnstsw
mov
mov
dec
fmull
mov
int3
mov
lcall
rorb
fistpl
shrb
imul
rcrb
lods
arpl
stc
int3
test
ja
arpl
mov
mov
test
adc
pusha
mov
mov
sub
fdivs
cs
ret
mov
addb
js
mov
mov
push
and
imul
pop
sahf
mov
inc
leave
orb
out
pop
clc
test
push
cmpsb
mov
push
lods
test
add
push
faddl
cmc
ret
loop
xchg
push
int
xchg
push
mov
mov
push
das
or
test
and
call
lret
ljmp
mov
pop
sbb
cmp
mov
mov
repz
inc
jo
and
in
fwait
pusha
mov
mov
hlt
enter
repnz
cltd
mov
lea
adc
mov
sbb
das
sub
cmp
js
movsb
cmc
ret
rcl
enter
xchg
push
push
outsb
in
sub
mov
data16
js
lds
sti
imul
xchg
adc
pop
ret
dec
jmp
or
imull
mov
xor
mov
in
gs
addr16
testb
je
cltd
pop
daa
outsl
mov
push
daa
or
cmp
ret
ficoms
scas
in
loopne
cwtl
repz
clc
into
inc
inc
testb
xor
mov
mov
movsl
fmull
int
loop
xchg
movsl
dec
insl
outsl
xchg
repz
dec
int3
mov
cmp
pop
dec
pop
sbb
mov
push
mov
cmp
xor
in
and
xor
in
mov
add
pop
mov
leave
mov
or
fnstcw
outsb
outsl
int3
pop
pop
lret
data16
idivb
and
scas
or
xlat
jbe
jle
pop
add
mov
push
mov
pop
jl
les
push
mov
sbb
push
rcrb
out
mov
call
adc
adc
or
xor
cli
sbb
icebp
and
mov
cltd
fwait
loope
lock
jmp
adc
xor
stos
jne
test
das
push
jg
iret
dec
setle
in
lcall
addr16
jo
loopne
in
testb
push
test
push
xchg
push
mov
ffree
mov
adc
es
pop
sti
jle
mov
filds
cmp
and
sti
mov
sub
daa
mov
xchg
fistpl
fildll
imul
mov
fsubrl
jae
cmpsb
push
or
aas
hlt
pushf
jmp
lods
jb
and
daa
leave
paddw
push
movsb
sub
test
movsb
cld
repnz
xchg
inc
sbbl
pop
dec
nop
orl
mov
idiv
fmulp
shlb
pop
mov
movsb
jae
add
fldcw
mov
xor
pusha
sub
mov
mov
and
xchg
cmp
push
cmp
and
mov
lds
xlat
cmp
dec
dec
pusha
push
cwtl
adc
pop
ds
jnp
insb
fwait
push
xor
sbb
cld
das
adc
xchg
pop
push
out
in
xor
rorl
xchg
sbb
xchg
xchg
or
jl
push
fdivrl
sbb
fstpl
enter
mov
sti
dec
xor
push
xchg
and
jge
insb
mov
pop
jae
mov
xor
push
mov
mov
enter
mov
jle
push
cmp
lds
or
add
mov
cld
negl
sbb
les
jle
mov
jmp
pop
sbb
pusha
insb
xchg
dec
cmpsb
hlt
sub
outsl
repnz
mov
fmull
int
imul
ret
cmc
and
or
enter
shll
and
lds
mov
cs
mov
xchg
sub
rorl
das
xor
sti
mov
adc
xlat
mov
test
jo
lods
adc
clc
lcall
adc
out
in
or
pop
in
shl
int
lret
sbb
xor
pop
and
imul
or
mov
or
pop
jg
lea
dec
xor
ffree
mov
xorl
iret
repz
sub
cmpsl
fiaddl
jne
test
add
cmp
int3
sub
cmpl
filds
fcomps
fldenv
in
mov
xchg
add
push
dec
aaa
mov
pusha
cmp
push
mov
shrb
jmp
hlt
dec
adc
sub
cltd
outsb
cmp
arpl
inc
dec
fs
insl
and
pop
push
or
lea
mov
mov
sub
mov
inc
ljmp
sub
mov
inc
or
cmp
in
fisttpll
sub
inc
cs
cmp
movsl
adc
xorb
mov
pop
rorl
xor
les
ljmp
dec
cltd
setg
out
push
fiadds
hlt
out
insb
push
mov
cltd
lret
pop
jg
xchg
jbe
in
jno
test
mov
cmp
sbb
inc
mov
mov
or
in
movsl
mov
ret
stc
insl
lods
pushf
rclb
mov
lea
jp
sub
out
lcall
lcallw
mov
pop
and
vphaddwq
pushf
jbe
je
xor
sbb
mov
xor
shll
cmp
push
mov
push
or
movl
inc
ret
lret
xchg
and
scas
int3
push
mov
inc
jns
inc
xchg
dec
inc
int
xchg
js
enter
pushl
inc
lock
dec
mov
fisubl
in
insb
lret
out
xor
mov
pop
dec
pop
cmp
or
hlt
xor
xchg
nop
push
lock
stos
enter
add
pop
xchg
mov
hlt
sub
add
sti
mov
stc
inc
iret
xor
xchg
sub
xchg
ret
out
inc
inc
jp
insb
mov
fwait
insb
or
and
stos
xchg
pop
fimull
xor
icebp
cmpsb
mov
pushf
sub
adc
mov
mov
shrl
mov
mov
sbb
sahf
jb
dec
or
data16
dec
outsb
sbb
sti
fs
aad
pop
pop
sub
push
mov
add
es
stos
fs
loopne
ret
hlt
sub
fisttpl
pop
out
clc
addr16
gs
ljmp
jnp
add
sarl
inc
dec
loop
jb
ret
mov
and
mov
or
inc
adc
jl
lods
fcmovnbe
xchg
outsb
shrb
sahf
int
lea
notb
sub
pop
and
cmp
shr
pushf
and
lret
clc
add
jnp
in
imul
xor
ds
cltd
or
and
out
call
imul
maskmovq
notl
mov
lret
clc
fidivs
je
pushf
sbb
adc
pop
mov
mov
xchg
popa
jo
clc
es
testl
push
aaa
inc
xor
mov
test
mov
dec
mov
xor
mov
jns
sbb
lahf
sub
lds
jl
jns
rcrb
cmpsb
movsb
push
inc
sub
xor
cmpsl
popf
pop
xor
idiv
adc
xchg
jo
and
mov
push
add
dec
sub
std
xor
xchg
out
mov
mov
pop
cmp
xor
or
lods
sbb
cli
test
xchg
or
and
call
mov
and
and
dec
adc
sub
jae
ret
jns
sbb
hlt
lods
jle
xor
add
mov
add
stos
xor
mov
cmpb
lcall
adc
dec
cmc
dec
inc
repnz
adc
mov
jae
push
push
add
movb
pop
cmp
ja
mov
mov
pop
scas
aas
push
mov
dec
and
sub
push
pop
dec
test
cmp
outsb
pop
mov
jbe
sub
mov
lods
or
mov
enter
add
or
mov
adcb
dec
cli
stos
mov
mov
xchg
jne
in
lods
jb
fcomps
cwtl
xor
xor
cli
cmp
pop
xor
fidivrs
mov
mov
hlt
sbb
outsb
mov
cltd
out
adc
cmpsl
jbe
push
sub
lret
lahf
xor
xchg
jp
adc
loope
arpl
mov
xlat
mov
sbb
pop
cmp
or
fimuls
mov
and
loop
and
sarb
pop
pop
cmp
popf
xchg
cmpsb
push
outsb
pop
dec
test
jp
mov
fisttpl
ds
ret
sub
mov
dec
dec
call
xor
shll
popa
clc
sbbb
jge
cmp
or
inc
sarb
fsubrl
enter
loopne
jmp
xchg
fldcw
iret
lea
cmp
je
xlat
aam
mov
in
add
pop
xchg
jmp
xor
outsw
lods
cmp
addr16
mov
adc
sbb
test
xor
pop
aas
xor
lahf
mov
push
sbb
in
mov
or
sub
into
imul
xlat
lea
sahf
pop
ret
xchg
test
push
stos
push
sbb
sub
and
sub
mov
xchg
insl
jmp
jmp
inc
mov
jp
mov
out
push
in
jno
xchg
pop
mov
pop
mov
dec
lret
sbb
xlat
add
scas
mov
inc
and
and
xor
jb
les
or
ja
mov
mov
out
lds
xor
iret
imul
das
rol
lahf
sub
sbb
loope
pop
add
int
mov
enter
pop
xchg
pop
aam
push
xor
add
mov
aad
mov
shll
push
mov
mov
lock
xchg
dec
out
mov
into
loope
rcr
loopne
push
mov
push
test
dec
adc
or
sbb
in
xorl
das
and
andb
fnstsw
push
jbe
imul
test
xchg
cmpsl
or
jo
mov
das
in
imul
inc
testl
aam
mov
stc
jmp
xchg
movsb
mov
jae
sbb
bnd
add
sarb
jle
add
push
xor
inc
jmp
mov
push
cwtl
jge
sub
or
sub
add
in
xlat
into
lock
adc
mov
and
push
mov
scas
lea
call
loope
test
dec
jno
adc
xchg
ljmp
adc
aas
push
dec
jne
lods
or
popa
inc
cli
repz
jmp
and
sbb
jmp
into
ds
clc
xlat
mov
mov
bound
dec
enter
push
push
mov
inc
ljmp
mov
das
popf
push
jl
int3
add
iret
mov
add
in
scas
dec
or
or
scas
push
adcl
jns
mov
sub
sbb
fs
or
mov
aaa
push
aad
je
push
and
xchg
mov
imul
cs
mov
std
push
mov
xor
push
xchg
int3
and
movsl
cmpsb
add
jb
fwait
add
jmp
sub
scas
mov
dec
push
jge
mov
jne
mov
aaa
sub
mov
inc
ds
lret
fnstcw
jo
xor
pusha
xchg
adc
fisubs
and
lds
push
or
xchg
and
and
pop
cmpsb
pusha
ret
std
dec
sti
pop
inc
xor
sbbb
adc
fisubs
movsb
push
cmp
fistl
push
jl
out
sbb
mov
jl
adc
lds
mov
sbb
les
lea
hlt
das
or
or
cmpsb
je
cli
fidivs
sub
and
int
mov
sti
add
aad
mov
mov
popa
in
inc
repnz
pop
loope
lret
xor
xor
dec
hlt
push
in
jb
stos
test
stos
xor
jmp
sub
stos
cli
fstps
lods
push
js
cmp
pop
sub
sbb
pop
mov
aad
xor
out
push
fnstcw
xchg
sbbb
xor
test
push
jmp
push
sub
pop
enterw
pop
pop
imulb
repnz
push
add
adc
jmp
xchg
mov
out
sbb
sbb
xor
pop
fadds
jnp
cmpsb
push
jl
mov
push
shlb
addb
xor
and
jge
push
out
loop
mov
hlt
mov
jb
push
cmp
xorl
adc
mov
mov
inc
shl
mull
dec
jo
cltd
es
idivl
mov
shlb
xchg
adc
dec
roll
mov
das
dec
dec
imulb
mov
sub
jo
out
shr
adc
and
fildll
int3
fcomps
repnz
cld
in
sbb
fidivrl
sbb
mov
sub
pop
mov
inc
jbe
mov
push
xor
jbe
loopne
mov
push
dec
scas
add
jecxz
jo
lahf
stos
mov
inc
mov
mov
mov
mov
adc
fmuls
push
jne
lahf
push
das
popa
sbb
cmp
cmp
mov
push
push
jns
outsb
cmp
jb
xchg
sbb
dec
movsl
xor
rep
shl
ss
add
mov
cmp
sti
je
insl
xchg
cmp
rcll
cmp
shlb
jnp
adcb
mov
imul
adc
jo
mov
mov
mov
fcomps
lahf
jns
popf
mov
and
stc
jmp
pop
bound
jnp
cltd
mov
leave
iret
sbb
push
pop
mov
inc
mov
jo
xchg
pop
push
aad
cli
loopne
mov
pop
aad
stos
sbb
jne
mov
add
aam
pushf
mov
addl
pop
loope
les
pop
test
cmp
xchg
xchg
jns
testb
xchg
addr16
hlt
cmp
out
xor
push
mul
and
xor
adc
cltd
xchg
cmp
out
mov
fdivl
ja
xor
jecxz
call
mov
fisubrl
lea
push
mov
push
inc
and
test
or
xchg
dec
idiv
insl
and
cwtl
popa
imul
mov
xor
iret
jmp
fsts
push
pop
leave
imul
mov
jne
push
ljmp
sbb
arpl
inc
ds
das
add
out
mov
inc
xchg
xor
inc
das
pop
das
loope
mov
gs
dec
aad
and
add
fcomip
mov
inc
sbb
fldenv
pop
aam
lods
fisttpll
push
shlb
decl
lods
jle
mov
adc
xlat
adc
xor
pop
push
dec
sbb
add
jae
dec
push
mov
sub
rclb
xchg
pop
popf
pop
add
stc
popa
repnz
and
jnp
sub
mov
push
jb
and
xor
pusha
xchg
push
xchg
cwtl
xchg
mov
sub
jp
dec
pop
dec
inc
ds
sub
dec
sub
sub
js
mov
insb
mov
int3
data16
adc
mov
imul
jnp
mov
push
lods
out
in
scas
inc
ret
adc
jbe
mov
jnp
les
cld
je
in
mov
push
adc
push
idivl
xchg
xchg
sbb
int3
ficompl
movsl
xchg
cld
xchg
lods
in
or
loop
addr16
jae
sbbb
pop
mov
hlt
incb
push
fldenv
mov
sbb
pop
jmp
rcrb
sub
fwait
loope
iret
jno
call
stos
push
cmp
ja
xchg
icebp
xor
fdivrs
shl
nop
ja
pop
cmc
popa
pop
xor
pop
mov
xor
dec
and
mov
sbb
mov
call
repnz
shll
mov
jno
rcll
add
subb
cmp
sbb
xor
jle
xor
xchg
sbbl
mov
setb
dec
mov
jmp
cmp
jnp
push
cmpsl
movsb
or
les
mov
inc
mov
adc
push
mov
mov
shlb
mov
xchg
jl
mov
inc
and
cmp
aaa
into
in
out
out
push
in
push
stc
push
out
sbb
mov
sbb
sbb
ja
nopl
iret
movd
mov
cmpb
or
inc
stos
push
outsb
repnz
adc
mov
sub
cltd
sbb
fmull
inc
add
gs
adc
inc
cmpb
sub
cld
sub
xchg
xchg
out
call
jle
lods
sbb
enter
rolb
xor
mov
or
pop
loopne
mov
jg
mov
cmp
sbb
outsb
stc
dec
sbb
fucomp
cmp
adc
sbb
shl
jb
add
mov
jmp
mov
mov
das
push
movsl
xchg
flds
cmc
push
pusha
jno
out
xlat
ljmp
push
fldenv
fistpll
sbb
jns
xorl
mov
nopl
mov
test
cwtl
mov
sarw
xor
cld
adc
sbb
fnstcw
mov
stc
shl
or
mov
loopne
pusha
cli
xchg
cmpsl
stos
mov
jp
sbb
add
inc
inc
xor
jo
arpl
je
mov
cs
mov
and
test
push
and
dec
sub
jl
data16
push
mov
sub
outsb
inc
fcomps
out
arpl
aam
les
sbb
lahf
mov
push
addr16
jmp
mov
scas
out
out
out
xchg
mov
movsb
ljmp
pop
xor
js
push
ljmp
test
dec
and
mov
and
add
cltd
in
leave
adc
cmc
movsb
repnz
mov
sbb
jp
loopne
data16
add
mov
lods
inc
jl
mov
jb
outsl
movsl
sahf
pop
inc
xor
shrl
insl
inc
leave
sbb
push
jl
xor
cmp
sbbb
clc
scas
iret
pop
clc
movsl
push
in
sub
stos
jb
test
cmp
cmpsb
movsb
lcall
out
into
roll
orb
out
and
data16
andb
es
imul
or
rorb
dec
leave
fnstcw
imul
adc
fnstsw
inc
insl
mov
xchg
jne
cmc
mov
xchg
cmp
xor
jge
cmpsb
shrl
fmuls
jo
add
lret
dec
mov
insl
lret
inc
outsl
mov
subl
or
lcall
jle
push
add
ljmp
xchg
movl
or
add
sbb
hlt
loopne
ljmp
xchg
mov
mov
mov
inc
sbb
dec
mov
push
xchg
jmp
xchg
add
in
test
mov
and
movsb
dec
inc
mov
lcall
xchg
dec
jnp
push
lods
pop
pop
clc
mov
call
and
idivl
add
divl
add
stos
pop
adc
and
push
icebp
mov
xchg
sub
popf
jl
popa
and
or
xchg
mov
test
mov
xchg
add
jp
stc
add
iret
mov
enter
fsub
mov
in
or
lcall
dec
push
aam
inc
lods
mov
test
test
lcall
inc
xchg
test
adcb
push
inc
sbbb
add
stc
mov
push
into
push
ljmp
push
xor
push
sub
push
faddl
adcl
push
in
sbbb
and
push
cmp
mov
xor
sub
repnz
shr
popa
jl
iret
cs
sub
pop
mov
jp
adc
sub
mov
push
roll
xor
sti
jae
lret
test
nop
mov
popa
mov
cmpsl
sahf
outsl
adcl
jae
xchg
mov
popa
pushf
sub
or
add
xchg
pop
jecxz
xor
adc
ss
xchg
cmpb
mov
repz
add
fcmovnbe
xchg
sbb
adc
mov
pop
andb
lods
xor
jp,pt
adc
pop
fsubp
mov
xchg
mov
adc
mov
mov
inc
je
cltd
xchg
jg
inc
dec
fmull
xchg
xchg
jae
icebp
inc
div
push
aad
loop
cmp
popa
sub
movsl
push
iret
scas
lret
dec
mov
mov
and
imul
shll
push
out
rolb
xlat
lea
xchg
dec
outsb
pop
movsl
sub
mov
push
mov
movsl
cli
dec
clc
in
aas
sti
sbb
insb
testb
jbe
mov
lret
fs
fldcw
dec
ret
cmp
push
aaa
mov
mov
cltd
insl
or
inc
scas
xor
aas
call
das
cs
pusha
popf
jnp
or
int
jnp
call
test
test
pop
sub
push
jmp
xchg
push
adc
xor
mov
adc
inc
or
testl
mov
lea
mov
xchg
xchg
clc
aaa
aam
add
cmp
std
addb
xchg
sub
fcoms
test
jl
xor
rclb
or
jl
les
sbb
inc
inc
mov
sbb
jb
movsl
das
jbe
bound
in
mov
insb
add
sub
jbe
popa
jo
cwtl
mov
jmp
jl
xor
fldenv
cltd
insl
cltd
inc
mov
pushf
loopne
into
ja
xor
mov
mov
data16
filds
scas
mov
mov
roll
xchg
mov
aam
sub
cmpsb
insb
jo
sub
fsubrl
push
cmpsb
and
cmpsl
mov
aaa
mov
roll
int
pop
xor
xchg
push
add
divb
jecxz
lods
std
pop
or
xchg
test
mov
xor
sbb
inc
lea
mov
xor
dec
cltd
mov
int3
loope
fidivs
repz
subl
jns
inc
ficoms
outsb
sbb
inc
mov
mov
adc
in
mov
xchg
xchg
jne
or
iret
into
dec
jns
es
rclb
sub
pop
xor
mov
push
jns
mov
add
call
loopne
inc
lock
cs
adc
fisubs
out
cmp
stos
mov
pop
lret
loop
inc
cmp
daa
insb
jmp
lret
mov
adc
cmpsl
jecxz
xor
into
rcr
insb
xor
push
and
imul
sub
and
sbb
mov
xchg
lock
push
pushf
out
shlb
xchg
xchg
lock
imul
sbb
xchg
imul
sbbb
cwtl
int
xor
sbb
test
sub
scas
push
inc
lahf
fimull
mov
and
ret
fwait
test
ret
dec
or
pop
mov
sbb
cld
dec
lock
mov
sbb
push
xchg
dec
dec
cmpsl
add
adc
mov
xor
adc
sub
jns
cltd
sub
push
push
pop
leave
movsl
cld
sub
aam
out
popf
daa
pop
cmpsb
or
ss
fs
sub
sbb
mov
aad
outsl
mov
xor
jl
fidivs
mov
mov
mov
cli
push
mov
xchg
cmc
hlt
pop
das
lret
jle
sbb
cwtl
xor
adc
and
test
pop
inc
jl
ljmp
xor
inc
cwtl
loope
adc
adcl
sti
leave
es
mov
test
adc
cmp
in
sub
cmpsb
pop
jmp
repz
inc
bound
rol
jge
dec
in
pushf
or
adc
pop
pushf
leave
lret
lret
imul
sbb
mov
movsb
lods
xor
xchg
add
clc
cwtl
inc
repnz
cli
scas
mov
lcall
scas
sbb
das
dec
out
mov
jl
call
lcall
cs
pop
lcall
scas
mov
into
dec
icebp
jg
aad
sbb
smsw
into
mov
ljmp
mov
jno
ficoml
push
xchg
bound
xor
sub
pop
push
mov
fidivrl
ja
mov
sbb
xor
shrb
pushf
push
xor
sbb
push
call
aam
pop
inc
push
jg
pop
fs
mov
sbb
adc
push
clc
sub
cmpsb
or
pusha
jmp
or
lods
js
dec
mov
cmp
int
sahf
sbb
xchg
pop
scas
mov
xchg
roll
enter
mov
mov
mov
adc
xchg
mov
dec
or
jns
mov
repz
jp
fcmovu
loop
xor
pop
add
imul
hlt
leave
aam
clc
test
sub
add
lods
adc
cmp
cmp
dec
mov
fbstp
adc
dec
shll
lret
push
gs
rcrb
bound
fwait
cli
loope
pop
out
adc
dec
mov
jecxz
jbe
xchg
push
iret
pop
test
adc
mov
out
mov
fs
gs
mov
sbb
jbe
xchg
push
lret
rcr
mov
out
decb
sti
dec
jl
sahf
mov
xor
mov
xchg
jge
pop
cmpsl
xchg
leave
jne
sub
ror
push
jno
pop
fcomps
lcall
aas
inc
cmp
jno
sbb
push
dec
out
jl
mov
sti
jae
insb
jl
push
imul
sub
clc
push
out
push
jmp
xor
sbb
gs
popa
sbb
scas
out
sub
mov
in
xchg
scas
adc
pop
inc
pop
adc
xor
aas
jle
sub
fmulp
movb
jge
inc
leave
clc
lods
pop
xor
cmp
inc
and
cwtl
xchg
inc
aam
fwait
cs
rcr
and
nop
push
out
sahf
mov
lock
into
sbbb
sti
je
push
lods
mov
ja
loopne
scas
sbb
fldenv
xor
hlt
das
rcll
pop
jnp
cmp
add
jmp
fstpt
sbb
hlt
xchg
adc
lret
sub
add
inc
inc
jns
in
add
xchg
rclb
cmc
shlb
mov
scas
loope
insl
sub
or
push
fisubrl
fstp
jae
xchg
jnp
pop
xchg
mov
push
pop
popa
xor
inc
or
jo
cwtl
dec
fisubl
jnp
lods
pushf
test
mov
sub
pop
je
xor
inc
pop
xlat
fsubs
adcb
dec
cwtl
cli
pop
fisubl
push
adcl
aam
add
jge
push
rolb
xor
fmull
mov
adc
xor
dec
icebp
fdivrl
pop
sub
jnp
pop
jae
rcl
adc
jns
mov
gs
shrb
mov
pushf
in
ret
dec
lock
movsl
rorl
pop
and
fsts
and
dec
aam
jne
mov
scas
jnp
xor
jp
cmp
or
fildll
mov
fsub
lods
dec
jle
lret
pop
int3
dec
dec
mov
arpl
inc
insl
push
inc
mov
fisubl
test
js
jns
jb
lret
data16
and
sbb
sub
push
loope
popf
push
add
xchg
sbb
mov
ret
sbb
push
lret
adc
je
xor
ja
shlb
hlt
xor
je
lods
add
sub
fdivl
ja
inc
and
cmp
jb
rcrb
in
cmpsl
inc
sub
js
xchg
pop
sub
insb
sub
sub
stc
lock
in
sub
ficoms
sub
movb
jle
xor
in
dec
add
bound
test
fdivrs
movsb
mov
pushf
or
mov
inc
shlb
xchg
addb
add
add
nop
xor
mov
gs
xchg
sub
jne,pt
popa
adc
adc
leave
sub
add
push
shr
dec
xor
xor
ret
lods
ror
imul
or
sti
and
push
cld
jl
aam
iret
mov
fstpl
decl
push
rolb
sub
into
in
mov
push
idivb
outsb
or
ret
aam
fldenv
fs
aas
stc
es
add
xchg
test
int3
fstps
jl
leave
mov
mov
cwtl
mov
xchg
push
mov
jbe
cmp
lahf
mov
cmpsb
cli
ficoms
popa
or
push
aam
jne
sub
loopne
xchg
mov
lods
iret
imul
jecxz
and
mov
cld
mov
xor
pop
mov
mov
ror
sbb
mov
call
inc
mov
mov
and
jp
insb
pop
nop
xchg
mov
movb
fisubrs
dec
jae
test
aam
popf
aas
sub
ret
pop
and
iret
jmp
dec
pop
jge
bound
mov
jecxz
loop
insb
or
mov
pop
sbb
out
scas
mov
js
pop
jg
imul
push
aam
fwait
aam
sbbl
or
icebp
xlat
imul
or
push
mov
shlb
sub
jns
adc
popa
inc
and
sbb
sbb
cmc
call
aad
push
dec
adc
mov
cmp
inc
jb
fidivl
test
ficoml
xchg
js
lcall
inc
add
dec
pop
call
out
out
push
outsl
jo
dec
cmp
sbb
out
leave
test
adc
sub
mov
pop
pop
addb
int3
xor
inc
xchg
lret
gs
and
ljmp
jle
sbb
sar
cli
pop
hlt
les
mov
es
cmp
mov
push
fadds
mov
xchg
pushf
rclb
add
push
rcrl
fxch
mov
cmpsl
xchg
xor
push
sbbl
jns
xchg
inc
je
inc
fnsave
push
sbb
sbb
hlt
xchg
aam
outsb
stos
in
sub
mov
cmp
stos
mov
sub
insl
insl
jmp
inc
xor
inc
mov
xor
testb
jl
mov
and
lds
xor
scas
je
popf
fistpl
mov
enter
lcall
push
adc
sub
test
pop
lret
fldcw
jae
dec
sahf
scas
lods
fstpt
mov
clc
stos
andl
mov
mov
hlt
xchg
or
ret
xchg
iret
sub
mov
sub
sbb
aam
in
sbb
mov
test
mov
aas
out
inc
stos
pop
test
fistl
rolb
add
aam
ret
out
jns
xor
pushf
push
push
mov
mov
divb
dec
test
outsb
jb
pop
add
shlb
fistpl
daa
iret
mov
sub
push
jmp
jmpw
mov
stos
jnp
and
sub
mov
ret
loope
push
aad
xlat
lahf
aam
out
push
insb
inc
pop
push
jp
xchg
jl
sub
cmp
fwait
jecxz
sahf
mov
fcoms
sub
pushf
lods
jno
leave
adc
adc
jl
test
mov
or
out
aaa
hlt
mov
push
cmpsl
movsl
addr16
aad
daa
mov
lret
dec
pushf
add
rclb
sarb
aaa
xor
in
jmp
lock
mov
and
ja
pop
xchg
cmp
sub
int3
rorb
repz
fsubp
js
dec
pop
jmp
insb
insb
jge
filds
div
and
scas
je
add
sbb
aaa
mov
add
xor
jb
stos
push
scas
or
orb
ds
and
js
negb
sub
xchg
out
sbb
hlt
jb
stos
cmp
leave
bound
iret
xor
scas
sub
movsl
mov
jbe
xchg
or
mov
lret
cmpsb
jecxz
jl
scas
xchg
das
pop
mov
adc
ret
mov
xor
xchg
aam
fnstenv
sub
les
out
loopne
push
subb
shrl
fsubrs
cwtl
lods
sub
xor
scas
mov
in
out
xor
pusha
sbb
cs
mov
sub
mov
fcmove
out
out
into
sub
inc
scas
push
push
enter
pop
sub
adc
je
fld
ret
inc
jbe,pt
push
test
pop
insb
fcomps
ljmp
xchg
pop
ss
mov
lret
push
mov
lret
sbb
jmp
sub
mov
shll
aaa
cmp
sub
xchg
and
xchg
test
mov
pushf
or
shrl
fnsave
mov
jp
iret
enter
xchg
xchg
imul
addr16
shlb
jge
jne
rcr
pop
jmp
nop
movb
sbb
sub
sar
pop
jno
inc
inc
inc
data16
ja
bound
and
fldt
mov
xsha1
cmpsb
mov
jae
adc
jmp
jp
mov
mov
in
jno
sub
sbb
mov
pop
push
or
mov
imul
in
lahf
fsubs
mov
mov
inc
jnp
movsl
aaa
dec
xlat
and
xchg
jo
in
iret
jmp
cmp
add
inc
rcr
mov
or
data16
arpl
aam
mov
dec
mov
jl
push
xchg
iret
or
rcll
fcmovbe
mov
outsl
inc
and
std
incl
jnp
mov
out
push
movb
sbb
sarl
mov
in
test
imul
pushl
mov
and
sbb
jl
divb
sbb
inc
adc
and
lea
mov
xor
mov
cs
icebp
out
mov
pop
pop
es
mov
push
rorb
ss
dec
dec
or
sub
adc
and
popa
leave
push
mov
popa
push
stos
cmp
leave
out
fists
test
loopne
mov
ja
insb
or
dec
dec
jbe
fs
gs
sub
into
mov
imul
adc
test
xchg
aas
mov
bound
js
dec
arpl
jecxz
push
dec
or
mov
jbe
jbe
in
test
pop
inc
test
cli
jl
xchg
xor
sti
rol
mov
fldenv
cmpsl
cmp
push
add
int
aam
xorl
jg
enter
mov
inc
add
mov
fildll
mov
mov
sbb
aaa
and
pop
arpl
test
xchg
mov
jb
dec
push
push
xchg
frstor
ficomps
pop
push
in
xor
adc
xorl
andl
call
sbb
mov
pushf
jbe
sub
mov
add
or
lods
daa
mov
movsl
and
movsl
imul
push
ss
mov
lret
mov
mov
xchg
mov
mov
test
ret
mov
dec
pop
dec
stos
into
adc
shlb
test
fisubrl
jle
arpl
lods
pop
hlt
xorl
arpl
adc
rorl
pop
mov
in
xchg
rcrb
pop
out
or
insb
push
sbb
inc
push
clc
fisubs
jnp
mov
cmp
adc
xorb
movsb
jb
dec
and
pop
mov
stos
enter
mov
js
sbb
ret
insb
sub
pop
decl
js
sbb
mov
push
sub
ja
arpl
xchg
ret
inc
sub
and
cld
cmc
push
in
mov
cmp
mov
std
sub
sbb
cmpsl
mov
jb
ret
frstor
into
push
fdivs
adc
test
push
es
rep
push
data16
mov
push
sub
jle
push
loop
dec
push
shlb
mov
mov
inc
jnp
pop
xor
out
fadd
test
subps
jns
movsb
push
addr16
mov
jecxz
cmpsl
shll
push
ret
mov
xor
subb
je
pusha
subl
xor
mov
ficompl
jbe
lods
std
mov
mov
ja
sub
adc
loopne
push
or
repz
lcall
es
mov
push
sub
ret
jge
mov
bound
jl
lods
jno
mov
dec
adc
cmp
sub
push
test
hlt
test
loop
adc
mov
cmp
mov
jae
cmc
notl
adc
inc
dec
in
sbb
jle
addr16
in
outsb
rcr
inc
jmp
sub
add
sarl
mov
or
xchg
lret
push
push
sub
jne
sub
mov
sub
sub
sti
rorb
and
jns
or
xor
add
insl
cld
int
in
outsb
and
ret
rorb
sti
jecxz
sub
ror
adc
loop
enter
push
sbb
cld
adcl
ds
cmp
xchg
ljmp
out
cltd
out
push
xchg
adc
bound
sub
pop
jl
sbb
add
mov
imul
mov
adc
or
sub
mov
cmpsw
test
adc
or
scas
cmp
pushf
enter
test
dec
nop
mov
jo
pop
shll
call
cmp
in
ret
lret
jnp
pusha
mov
inc
push
cwtl
nop
fsubrs
sub
addl
jbe
test
insl
xor
cmc
xchg
mov
push
test
imul
add
fsubrs
adc
and
ret
or
inc
mov
fnstsw
cmpsl
cwtl
in
fcompl
std
mov
ds
mov
add
outsb
xchg
xchg
and
inc
xchg
incb
mov
ja
in
pop
fs
pop
or
sub
das
mov
inc
or
mov
es
mov
ret
mov
mov
and
adc
lods
leave
xchg
ss
or
aas
inc
lods
outsb
stos
mov
jbe
popa
inc
jg
sti
sub
mull
iret
sahf
ss
imul
sbb
cmp
test
test
mov
imul
dec
or
cmp
mov
divl
jne
sub
pop
dec
inc
scas
outsb
pop
testb
jne
xlat
jecxz
push
mov
fwait
xchg
dec
mov
andl
push
adc
outsl
xchg
cmp
jnp
imul
cli
in
leave
sbbb
sbb
mov
loopne
xchg
xlat
js
int
or
sti
xor
fbld
daa
outsb
in
inc
and
repnz
in
fists
clc
cmpsb
outsl
call
jns
cmp
fldcw
in
hlt
push
inc
push
jbe
jnp
in
out
fidivs
jecxz
mov
and
sbb
xchg
mov
sbb
sbb
loope
vsqrtps
cmp
mov
dec
mov
jae
dec
cmp
mov
lret
jbe
ret
mov
addr16
rorb
fs
inc
mov
mov
imul
cmp
xchg
les
mov
adc
pop
xchg
movsb
push
xchg
ljmp
push
lcall
mov
xchg
sbb
sbb
or
pop
daa
aad
xorl
dec
mov
pop
jno
xchg
xchg
mov
jne
jb
push
and
leave
and
jle
mov
xchg
popf
movsb
adc
lock
xor
jle
int
out
push
sbb
pop
lcall
xor
adc
dec
fcompl
fs
sbb
cmp
push
lods
lcall
insb
xchg
loope
cmp
or
or
jnp
inc
ljmp
cmp
outsl
sbbb
outsl
xor
hlt
fsubrl
push
movsl
cld
insl
pop
add
mov
js
inc
xchg
jmp
cmc
mov
scas
xlat
movb
pop
jp
mov
push
push
jno
loopne
repz
cmp
xchg
cmc
push
leave
cmpsb
ss
pushf
cld
test
stos
mov
pop
jb
mov
sub
lahf
mov
inc
je
out
jl
mov
jl
out
call
xor
sub
mov
sbb
mov
pop
insl
es
cmp
sarl
inc
sbb
divb
and
lea
fdivs
adc
rolb
cmp
push
jmp
inc
movsl
imul
dec
ret
xchg
fwait
loopne
xchg
jne
inc
jae
movsl
or
dec
lods
mov
xchg
aas
xor
cltd
add
fdiv
lods
push
mov
jns
in
std
jne
xchg
cmp
xchg
ja
data16
cmp
mulb
jg
xchg
or
int3
pop
sub
lahf
shrb
test
enter
mov
loope
pop
xchg
loope
inc
jp
sarb
xor
popf
push
imul
inc
push
adc
jae
mov
mov
sub
in
xor
sub
and
fdivs
pop
adc
jbe
sub
pop
xchg
sub
lret
push
dec
out
or
test
push
push
rorl
outsb
inc
add
xchg
jmp
jnp
xchg
mov
popa
or
jnp
in
mov
leave
fadd
push
mov
ret
push
xor
cmp
inc
push
test
repnz
lahf
mov
fwait
xchg
data16
xor
rcll
out
xchg
mov
xchg
add
inc
loope
mull
testb
stos
jmp
mov
sbb
sbb
cli
mov
rorl
gs
cwtl
mov
loopne
lcall
pop
pop
loope
mov
insl
das
in
sbb
cs
mov
dec
ss
mov
jge
mov
enter
jbe
cs
int
add
pop
jno
xor
leave
imul
adc
orb
cld
sub
mov
ljmp
lahf
mov
lcall
ds
cmp
dec
aaa
outsl
iret
or
in
or
xchg
ss
mov
lods
pop
cltd
inc
sbb
push
es
add
jle
jge
hlt
fmul
in
addr16
fidivrs
xor
fisubrs
jb
jle
scas
mov
stos
imul
leave
cmp
fdivs
or
rcrl
cld
adc
lods
xchg
movsl
aad
jmp
push
movsb
movsl
cli
addb
inc
outsl
lret
into
inc
gs
ja
sbb
and
icebp
test
outsb
jnp
xchg
movsl
mov
pop
sub
andl
dec
ds
jo
add
leave
jge
es
add
sub
jmp
test
push
add
movsb
adc
sbb
push
or
mov
push
repnz
sub
lea
or
lods
rol
push
push
addr16
ljmp
movsl
pushl
pusha
arpl
or
sbb
xchg
sbb
test
ret
sbb
mov
test
sbb
fisubrl
stos
clc
das
sar
es
cwtl
rorl
mov
pop
jne
lds
js
movsl
mov
outsb
loope
in
mov
dec
jno
hlt
out
mov
or
decb
movl
adc
cwtl
xchg
scas
in
push
or
enter
inc
add
sub
ljmp
xchg
popa
pop
mov
mov
ret
mov
adc
daa
sbb
ret
cmp
sbb
icebp
out
jno
cld
xchg
lock
fucomp
fcmovbe
inc
aad
stos
test
int
push
dec
out
test
and
fidivs
movl
sub
xor
or
pop
pop
mov
cmp
out
enter
pop
lock
xchg
mov
or
gs
xor
iret
imull
cmp
mov
adc
adc
imul
stos
int
xchg
outsb
jns
jecxz
dec
loopne
or
pusha
out
mov
mov
sahf
lcall
sbb
into
cmp
inc
and
loop
sub
jle
xchg
xchg
in
xchg
lods
jbe
sub
imul
insb
int
fcmovne
into
out
jbe
add
scas
sbb
sbb
inc
mov
pop
sahf
mov
scas
mov
movsb
insb
sbb
mov
dec
je
inc
inc
movsb
es
lods
adc
pop
pop
add
stos
fdivl
sahf
rclb
jg
sub
mov
or
insl
data16
mov
jae
pop
int
mov
jae
inc
cltd
mov
fdivr
and
add
daa
jbe
fdivrp
movsl
outsl
jp
mov
stos
jno
js
push
cld
popa
negb
lcall
jnp
movsl
pushf
jmp
in
sub
in
add
test
push
int
je
push
and
inc
daa
pusha
cmpsl
movl
cmp
cwtl
adc
std
sub
or
or
scas
mov
cmp
push
pushaw
fcmovnb
and
pop
inc
mov
jmp
jle
out
xor
mov
shl
inc
mov
mov
cmc
pop
xchg
jne
or
divl
pop
enter
mov
std
and
callw
arpl
cwtl
adc
mov
cmp
push
fists
addr16
aaa
push
scas
mov
push
cmp
sti
mov
popf
inc
aam
mov
xchg
add
add
aaa
ds
lahf
mov
adc
ficoml
xor
out
mov
cmp
rclb
cmpsb
shr
mov
test
sbb
sbb
adc
loopne
clc
int3
dec
inc
or
jne
int3
pop
sub
cmp
fwait
nop
dec
push
rcrb
and
dec
fidivs
test
push
mov
cwtl
xchg
sub
daa
cwtl
idivb
lea
mov
add
xchg
push
arpl
mov
adc
std
test
enter
xor
cli
enter
mov
or
lds
and
push
data16
sbb
jg
insl
fcompl
or
push
js
or
sub
push
inc
jb
popf
std
jl
pop
lods
insl
sbb
push
aas
sbbl
sub
cmp
xlat
pop
js
jmp
sbb
mov
ret
insl
sub
dec
mov
in
and
adc
loopne
or
andb
sub
sahf
cltd
cmp
add
xor
dec
icebp
scas
xor
in
mov
pusha
mov
cmp
arpl
jp
jge
push
push
jg
mov
pusha
lods
scas
xor
mov
cld
push
sub
loop
lds
mov
shll
mov
cmp
mov
and
shrb
rcll
xor
mov
into
pop
sub
xor
out
jmp
adc
movsl
xchg
out
dec
cs
push
jne
and
jg
aas
stos
jno
or
inc
int
sub
and
es
and
mov
iret
cli
xchg
dec
clc
mov
dec
xchg
jo
fadd
push
mov
xchg
outsb
addr16
ss
push
fnsave
mov
xor
test
das
icebp
in
xlat
rcr
push
push
rcll
lret
mov
push
test
jmp
test
xchg
frstor
xchg
xchg
cmp
jb
jg
addr16
js
aam
mov
js
insl
iret
adcl
or
addl
lret
and
call
push
sub
negb
push
cmp
test
lock
outsl
incl
push
incl
push
loop
sahf
popf
das
dec
xchg
flds
leave
jg
push
mov
in
into
aad
pop
sbb
mov
xor
or
add
dec
dec
sti
fidivs
arpl
pushf
sbb
out
adc
sub
rclb
je
enter
xchg
subb
pop
frstors
and
inc
adc
xchg
pop
mov
jo
jo
dec
mov
or
ror
nop
adc
and
and
push
xchg
stos
shll
subb
loop
inc
cmpsw
or
hlt
scas
inc
inc
mov
dec
fmul
out
pop
inc
aad
jnp
aad
inc
mov
cs
pop
sub
loopne
fists
mov
jmp
xchg
into
xchg
pop
jno
xchg
test
inc
mov
mov
mov
jno
xchg
jo
dec
and
aam
mov
movb
fsub
sub
sub
xor
in
pop
cmpsb
mov
loopne
pop
sahf
push
jns
std
mov
xorl
dec
jecxz
sub
movsb
lcall
in
adc
mov
loop
sub
sbb
stos
jl
fildl
xor
dec
sahf
jb
lidtl
sbb
ds
jno
sub
jno
lret
fcoml
add
rorl
xor
xchg
push
out
hlt
lahf
sbb
mov
or
imul
dec
call
fcoml
xor
inc
mov
je
xchg
jne
pop
ror
mov
mov
pop
adc
xor
gs
jle
jle
popa
mov
test
mov
cmp
sahf
lcall
mov
jo
fdivs
das
xor
mov
loopne
aaa
fwait
dec
jp
sbb
jmp
jmp
dec
or
negl
insb
mov
jne
ljmp
loope
mov
and
aaa
mov
xchg
and
adc
adc
dec
dec
cli
mov
pusha
mov
sub
fsubr
mov
mov
jmp
cmp
negl
mov
test
xchg
in
xchg
enter
dec
les
dec
mov
iret
dec
lock
ret
push
scas
fcomp
mov
das
xchg
pusha
outsl
or
fsubl
cmpb
outsb
mov
ljmp
xchg
lds
jne
ret
or
lret
imul
push
lods
nop
cmp
clc
inc
in
loop
jmp
testb
jecxz
dec
jne
icebp
incb
xchg
inc
pop
data16
or
and
pop
dec
loope
xchg
data16
cmp
insb
cmp
add
pop
ss
cmpsb
mov
mov
mov
aam
fldt
lahf
xchg
shll
hlt
push
cmp
jecxz
cltd
aad
movsb
adc
mov
jge
dec
jl
test
sbb
add
out
repnz
adc
mov
jge
cltd
pop
rclb
adc
dec
and
ret
add
movb
add
gs
or
jns
aam
stos
adc
aam
cmp
aad
adc
jne
sub
xorb
dec
js
call
mov
and
push
xor
dec
popf
ficoms
dec
fsts
add
int
sti
fisubl
fidivrl
stc
adc
lods
adc
clc
out
bnd
sbb
cmp
push
lcall
outsl
xchg
jb
int3
mov
jb
jnp
in
pop
loop
push
xchg
imull
sbb
mov
cli
nop
ja
shr
cmp
ss
mov
jo
add
mov
test
push
shll
cwtl
jae
push
inc
dec
scas
leave
sub
push
xlat
pusha
sbb
in
mov
popf
mov
jno
sbb
mov
adc
paddusw
mov
adc
mov
hlt
jmp
and
in
or
sar
inc
in
lds
xor
flds
mov
push
pop
inc
sbb
and
lret
mov
xchg
leave
sti
inc
and
sub
push
outsb
fimull
fldl
ret
mov
adc
inc
push
mov
pusha
jle
sbb
cmpb
outsb
jbe
xchg
into
inc
jo
in
push
mov
inc
in
jle
pop
xor
add
mov
rcr
out
jg
je
jp
outsb
mov
mov
sub
inc
fildl
xchg
mov
xor
fcom
shll
and
or
lcall
pop
adcl
and
inc
pop
sbb
or
fmull
ds
sar
fdiv
shlb
jge
or
pushf
push
dec
push
add
sbb
addb
test
jno
outsb
sub
push
icebp
rol
mov
jg
inc
and
cld
push
fists
xor
movsl
icebp
daa
pushf
dec
icebp
xor
fs
push
mov
mov
cmp
push
orb
xchg
sbb
cwtl
mov
push
mov
mov
sbb
push
hlt
ss
shll
mov
and
sbbl
popa
addr16
mov
cmpsb
repz
hlt
sbb
mov
add
out
enter
imul
or
mov
rolb
adc
cs
adc
xor
inc
out
dec
sub
aas
enter
cmp
gs
cwtl
movsl
sahf
test
loop
iret
aas
xor
cmp
mov
sti
fildl
jbe
movsl
into
lds
sbb
jecxz
xchg
sbb
pop
xchg
fists
sub
fld
aas
lods
cmp
fidivl
mov
xlat
imul
fcmove
dec
dec
mov
cld
mov
and
jmp
pushf
out
push
inc
mov
push
notl
mov
ret
mov
fisubrs
mov
adc
sbb
add
jae
jb
dec
dec
jle
lcall
mov
es
faddl
scas
arpl
dec
je
in
mov
mov
in
or
ljmp
mov
inc
lret
fisubrs
popf
inc
pop
clc
mov
ds
push
roll
jns
push
aaa
js
out
or
lds
xor
push
mov
xchg
fidivrs
in
push
lret
mov
es
cltd
sub
mov
ficoml
push
insl
xchg
loope
lods
add
in
jo
mov
aam
xchg
das
push
mov
outsb
or
push
fwait
and
sbb
mov
dec
mov
dec
mov
ret
cmp
jbe
jp
cmp
repnz
xor
cmc
mov
arpl
and
test
xor
cmc
cwtl
or
int3
jmp
out
int3
mov
cmpl
je
xor
jp
mov
pusha
mov
and
and
pop
xor
enter
ret
xchg
jae
xchg
out
in
adcl
push
inc
mov
and
test
imul
mov
xchg
push
lret
dec
adc
sub
cld
adc
mov
sbb
lcall
repnz
adc
arpl
dec
into
clc
lods
nop
and
lret
jp
rclb
fnsave
sub
mov
xor
mov
dec
dec
int3
xchg
push
mov
insb
and
outsl
or
js
rcrl
mov
push
insb
ret
xlat
mov
outsl
adc
sub
fnstsw
scas
cmp
repnz
shrb
fsubs
lret
movsl
imul
dec
addr16
ret
rcrl
push
adc
xor
cmp
mov
cmp
pop
not
push
push
mov
mov
cmp
insl
lods
add
out
repnz
lea
adc
or
into
xchg
push
jne
dec
cmp
cmc
pop
xor
data16
loop
scas
and
cmp
jmp
add
jmp
push
cmc
sti
pushf
inc
push
fwait
test
xor
js
mov
or
or
notb
shr
sub
mov
bound
repnz
outsb
sbb
fwait
in
pop
dec
lcall
jmp
movsb
idivl
and
xchg
cli
xchg
push
jae
jno
fisttps
out
aad
lcall
sarb
call
jnp
aaa
cmp
sbb
sahf
mov
ljmp
dec
cmc
int
add
pop
xor
arpl
push
add
js
dec
fs
fbstp
ficoms
outsb
xor
cwtl
mov
adc
push
hlt
cmpsl
adc
push
cltd
jb
mov
dec
arpl
xlat
andl
in
add
lods
lea
movsl
xor
in
in
cmp
out
mov
pusha
fs
and
jmp
data16
adc
mov
mov
insl
pop
faddp
popa
les
mov
mov
sub
fcoms
outsl
cwtl
stos
bound
mov
adc
xor
dec
in
out
cmp
cltd
insl
movsb
ljmp
jb
and
fmuls
inc
inc
sbb
sub
jno
cli
xchg
and
xor
into
lahf
adcl
gs
not
inc
out
pop
out
popf
sbb
inc
sahf
push
scas
imul
dec
mov
sub
lahf
test
cmc
push
int
addr16
mov
or
sti
add
cmp
xchg
jge
nop
jno
mov
dec
sbb
cs
leave
lea
fsubr
xor
mov
shrb
dec
mov
addr16
adc
inc
add
pop
outsl
inc
aad
mov
cltd
adc
sahf
xchg
daa
leave
ret
xor
mov
jno
sub
push
and
mov
sbb
fstpl
bound
data16
lret
sbb
mov
cltd
jp
mov
sbb
xchg
sub
outsb
jns
xor
xchg
insl
xchg
adc
and
int3
jmp
icebp
arpl
inc
scas
xor
addb
or
in
in
popa
lahf
pop
push
pushf
out
aas
mov
xchg
imul
jbe
test
andl
adc
push
mov
jl
dec
and
insl
adc
aam
jno
mov
rcl
rorb
pop
add
icebp
imul
push
arpl
xor
adc
es
sub
leave
int
adc
ret
sti
faddl
cmp
sbbb
mov
jnp
mov
out
adc
mov
xchg
sub
pushf
lcall
cltd
jb
imul
or
js
fdiv
inc
mov
int
adcl
lds
sbb
and
popf
dec
xchg
fsubs
lds
outsl
jnp
cltd
fisubl
sbb
les
lods
cld
add
fadds
push
das
xor
xor
pushf
dec
adc
ljmp
adc
sbb
push
mov
sahf
popa
dec
jg
fcompl
out
xchg
fmuls
lahf
fwait
icebp
xorb
add
mov
pop
aad
pop
lahf
xor
inc
dec
popf
push
push
jo
jae
mov
test
xor
sbb
sub
pop
jo
fs
inc
out
cmp
jns
mov
aaa
into
jg
je
les
scas
lahf
adc
sbb
das
mov
jne
add
or
xchg
test
mov
xchg
lods
push
pop
cmp
mov
mov
ljmp
movsl
mov
mov
repz
adc
mov
scas
mov
push
xor
lods
lods
sbb
adc
mov
das
inc
pop
jp
jg
jbe
push
adc
aas
out
mov
sub
fistl
or
inc
adc
mov
inc
jle
sbb
pop
sub
xchg
fdivrl
mov
adc
xchg
add
negb
pop
cld
addr16
pushf
out
pop
imull
jb
push
outsl
pushf
jmp
popa
mov
lret
mov
mov
test
adc
aaa
cmp
popa
jecxz
nop
cmp
lahf
mov
fists
in
sbb
xchg
xchg
mov
mov
lcall
xchg
popf
jp
inc
mov
push
shl
adc
out
jo
addr16
mov
rorw
xor
dec
add
and
out
dec
jmp
mov
adc
mov
shl
lcall
jb
inc
imul
sahf
fsubl
xchg
outsb
push
mov
subb
mov
adc
sbb
xor
shrb
jle
or
arpl
push
or
sbb
sub
or
enter
sbb
rorl
inc
sbb
pop
pusha
adc
inc
dec
mov
scas
pop
mov
cmpsb
ds
mov
sub
push
inc
roll
shl
push
call
push
pusha
mov
outsl
test
psubusw
mov
and
ss
stos
cs
pop
jnp
lret
nop
movsb
push
adc
or
fistl
sub
push
mov
pop
insl
test
rorl
insb
pushf
xchg
in
cmp
jmp
js
mov
or
mov
into
out
or
out
mov
sbb
out
xor
mov
stc
mov
das
mov
rorl
and
adc
jnp
push
out
xor
push
icebp
subb
inc
imul
insl
sbb
cltd
insl
jmp
jmp
xchg
in
mov
outsb
or
cmp
aad
sbb
sub
mov
mov
jb
pop
imulb
sub
mov
add
lahf
rcrb
add
sub
jp
repz
fucomp
or
cmp
jnp
ds
jg
add
jo
orb
out
lahf
clc
cltd
imul
fsts
ds
divl
xchg
push
sbb
pop
jbe
inc
jge
fcomps
out
and
mov
cmpsb
rcll
or
pop
jbe
mov
pop
aam
loopne
add
int3
mov
sub
jns
pop
push
adc
jb
outsl
js
daa
mov
subb
lea
dec
dec
cmc
add
sbb
cli
dec
andb
es
movnti
inc
shl
test
push
cltd
popa
or
enter
and
loopne
mov
inc
and
pop
loope
shll
jmp
pop
add
push
loope
mov
and
in
mov
and
jp
stos
popf
inc
out
movsl
pop
mov
stos
mov
aam
cmpsl
aam
push
cmp
lahf
sbb
pushf
jb
frstor
rolb
add
pop
pop
xchg
push
mov
cmp
push
leave
mov
mov
sbb
fsubrl
mov
rorb
movsl
push
xor
xchg
cmp
mov
cld
jns
insb
fistl
shlb
insb
pop
jnp
sbb
scas
test
push
mov
clc
mov
xor
and
adc
dec
sub
xchg
in
mov
push
xchg
ret
jns
out
cmp
idivb
add
lds
imul
sub
sub
mov
mov
out
mov
imul
ss
add
xchg
loope
loopne
jmp
stc
mov
jbe
mov
mov
shl
push
jmp
fcmovnbe
sub
pop
daa
inc
in
and
scas
cs
aaa
inc
in
lret
mov
fisttpll
cmc
push
xchg
sahf
inc
pop
insl
fwait
inc
test
test
cmp
addr16
arpl
jno
push
pop
add
sbb
fdivrs
jbe
insb
cmp
jno
cmc
or
push
mov
fistl
scas
bound
pushf
pusha
loopne
sub
lcall
push
outsb
fnstenv
lcall
inc
mov
pop
mov
jg
lahf
xchg
enter
mov
mov
push
mov
enter
mov
and
fdivl
push
rol
negb
bound
adc
arpl
xchg
fs
scas
pop
fsubrp
add
je
mov
push
inc
movsb
dec
lret
int
sub
xchg
or
rcrb
or
cmp
pop
mov
dec
sub
xor
dec
pop
push
xor
stos
cmc
leave
push
push
adc
and
shl
clc
fidivrl
adc
idivb
push
mov
mov
pop
imulb
push
bound
adc
xor
jb
or
xor
je
nop
pop
repz
xchg
je
and
xchg
stos
inc
aaa
outsl
les
push
lcall
mov
punpckhbw
mov
cmpsb
aam
cmp
push
movsb
cs
mov
mov
adc
xor
push
lds
jp
test
jmp
mov
mov
inc
daa
pop
icebp
enter
add
jle
fcom
shll
cmp
int3
xor
aaa
lret
imul
stos
sub
xchg
lock
movsl
call
js
cli
pop
mov
mov
popf
testb
inc
xor
xor
out
bound
mov
inc
pop
adc
ret
sbb
shrl
aam
sarb
stos
xor
outsb
fsubrs
sti
xor
push
jle
inc
testl
pop
push
push
pushf
sahf
dec
arpl
lcall
cmc
outsb
mov
nop
dec
hlt
or
clc
andb
int
jg
jne
or
or
outsl
es
int3
mov
sahf
mov
sub
and
inc
xchg
into
push
pushf
clc
mov
out
sub
sbb
cmp
adc
xchg
adc
adc
xchg
mov
cmp
filds
xchg
sbb
jo
cld
pop
in
mov
push
ret
mov
mov
add
mov
sbb
xchg
mov
or
in
adc
adc
in
xor
and
aaa
les
cwtl
mulb
cmc
lds
lret
pop
jmp
cmp
jecxz
or
sub
sbb
mov
sahf
fcmovnu
jmp
clc
cli
add
repz
inc
push
repz
addl
xchg
lahf
mov
rclb
push
negb
mov
cmpsl
test
clc
bound
shlb
fsubs
jns
mov
push
call
negb
xor
pop
loop
adc
xor
push
ljmp
adc
cmc
test
push
test
pop
xor
mov
add
add
insl
adc
loopne
ret
ret
adc
subl
mov
mov
mov
mov
lods
mov
push
int
push
femms
mulb
and
dec
lods
cmpsb
test
cmp
test
lahf
xchg
int3
dec
bound
arpl
stos
int3
push
jno
sub
cmp
cmp
sbb
pop
adc
into
and
xor
mov
sbb
sbb
popf
dec
adcl
push
cld
inc
into
enter
xchg
jne
push
and
cli
leave
fiadds
pop
popf
hlt
and
dec
xor
mov
mov
xor
xor
jp
cltd
int
and
push
outsb
dec
xor
xchg
and
adc
out
out
mov
aas
ret
push
test
sarl
push
cmpsl
aam
cmp
mov
mov
in
ud1
jb
lods
cmp
repz
mov
add
xchg
mov
inc
lret
mov
imul
in
ljmp
xchg
or
xor
test
sbb
aad
cmp
mov
mov
and
enter
data16
pushf
imul
mov
enter
inc
imul
cld
cltd
mov
lret
into
stc
push
dec
cmp
cs
std
cmpsb
enter
jl
ss
push
push
movsl
fidivs
add
push
movb
jae
mov
or
stos
jo
adc
jbe
adc
scas
test
mov
or
aas
cmpb
rolb
lds
lods
xchg
inc
cmp
jbe
loope
mov
cwtl
faddp
mov
jb
sahf
sbb
add
mov
fiaddl
pop
mov
mov
jecxz
stos
cli
pusha
adc
lods
out
jmp
xlat
adc
dec
inc
dec
sub
pop
cmp
push
xchg
pop
sbb
testb
mov
xchg
push
in
pusha
pop
and
mov
add
outsl
inc
push
adc
addb
and
fs
mov
sub
shrb
js
fdivrp
jno
nop
xchg
xor
mov
sub
lds
int
arpl
push
mov
xor
jp
push
stos
cmp
push
or
pop
aam
jno
movsl
test
es
cmc
jns
fisubrl
sub
or
jno
jne
enter
es
in
test
mov
push
incb
fistps
in
popa
mov
inc
pusha
stos
jmp
fstl
fstpl
and
rolb
pop
push
orl
adc
adc
and
lret
repnz
ret
fsubr
sub
shrb
pushf
jge
sub
and
popa
out
jb
adc
decl
and
push
jbe
loop
inc
loopne
popa
or
inc
js
pop
sbb
sbb
pop
add
inc
sub
mov
jb
pop
stc
insb
pop
sti
data16
jae
sub
push
cmpsb
push
cmp
mov
xchg
inc
jp
push
dec
shll
lods
sbb
in
pop
ljmp
cmpsb
jbe
sub
cmc
push
push
fwait
lahf
sbb
cmp
js
movsl
sub
xchg
xor
mov
jecxz
xchg
cmp
cmp
enter
mov
adc
xchg
mov
fists
push
sbb
ret
xchg
hlt
insb
pop
pusha
scas
repz
dec
fisubs
fsubrl
dec
gs
fsubl
jnp
mov
dec
fisubrl
jl
mov
out
andb
call
adc
mov
call
mov
mov
mov
cmp
sbb
int
mov
addr16
add
fisttps
xor
sbb
mov
mov
xlat
mov
inc
mov
inc
cmpsb
jmp
lods
cltd
and
sbb
sbb
lods
mov
sub
insl
lods
lret
shlb
scas
inc
push
sbb
mov
scas
cli
sbb
popf
pop
leave
dec
push
bt
mov
cmp
scas
stos
aas
cmp
sub
push
in
jecxz
mov
decl
xor
xchg
dec
out
lea
outsb
xchg
push
mov
push
cmp
aaa
cmpsl
xchg
mov
sti
das
dec
xor
shrl
sbb
cmp
arpl
mov
add
xchg
mov
mov
stc
cs
lret
mov
insb
fildl
mov
aas
hlt
pop
cmp
mov
xchg
mov
cmp
fisttpll
sub
imul
je
leave
jno
lret
mov
xor
ret
fldenv
dec
jmp
push
clc
aad
into
les
fadd
in
stos
movsb
jp
out
dec
lods
test
lret
lds
adc
lcall
shrl
push
cltd
jp
test
test
mov
push
lcall
cld
push
movsb
imul
jmp
jb
mov
stos
aam
mov
xor
push
in
or
push
dec
fisubl
push
rcrb
cmp
lods
insl
adc
add
or
inc
rcll
stc
push
shll
xor
push
sahf
aas
outsl
sbb
aas
clc
subb
scas
ficomps
pop
pusha
cmc
sbb
jl
stc
shll
call
xlat
mov
gs
test
mov
sbb
leave
lahf
jle
out
sahf
bound
lcall
dec
adcl
and
xor
cs
fwait
in
push
pop
fidivs
enter
and
mov
xor
les
outsl
ret
push
jbe
call
js
pop
mov
cmp
xchg
movsb
test
pop
data16
mov
insb
cmpsb
in
cmp
xchg
lea
aad
add
popa
test
xchg
xor
dec
mov
stos
mov
sub
cmp
mov
jo
add
pop
pushf
addr16
dec
or
or
mov
pop
xchg
sub
mov
gs
fbstp
add
scas
jle
push
test
push
andl
scas
pop
mov
stos
xchg
jnp
jp
xor
mov
fadds
addl
fbstp
out
cmp
pop
daa
jmp
xchg
cmp
push
or
jmp
pop
cmpl
imul
xchg
rorl
xchg
push
movsb
pop
jb
mov
test
xor
ficompl
pop
push
dec
jmp
enter
mov
jbe
fwait
sti
xor
popa
pusha
cmp
popf
insb
ds
cmp
movsl
mov
pusha
mov
lds
in
aad
or
or
negb
aam
mov
outsb
outsb
or
xchg
mov
xor
test
aad
or
insl
sbb
popa
push
les
cmp
inc
je
mov
fs
repz
popf
sub
pop
mov
dec
push
cmpsl
outsb
adc
mov
sti
mov
dec
lods
dec
jp
push
adc
xor
mov
xchg
jp
pop
sub
lods
in
sbb
push
test
mov
es
shll
test
sbb
out
shrb
cmp
push
cmp
cmpsb
dec
push
loop
in
sbb
jmp
pop
dec
in
inc
iret
shl
sub
mov
push
pop
lea
fdivrs
cmp
sbb
gs
xchg
add
dec
adc
aas
adc
sti
mov
xor
jne
pop
mul
in
aas
and
mov
leave
int3
xor
dec
imul
adc
mov
das
and
pop
out
adc
push
pop
mov
das
mov
pushf
or
pop
cmp
xchg
mov
jmp
dec
add
mov
xchg
loopne
mov
out
std
sbb
in
bound
adc
fmuls
pop
scas
inc
sub
orb
jns
aam
gs
jae
lret
xor
aas
pop
inc
and
mov
dec
mov
mov
shrb
xchg
movsl
cmp
xchg
leave
sub
fsubrs
jo
sbb
cmp
push
dec
xorl
notb
xor
jno
mov
push
mov
pusha
lds
enter
in
iret
and
es
or
sbb
add
insb
cld
out
cmpsl
insb
push
stos
mov
cmp
mov
fadds
jle
rcl
adc
cmp
dec
fcmovnb
cmpb
xor
push
and
and
sub
shll
add
fstpl
call
cmovnp
and
sbb
jmp
mov
mov
xchg
mov
jmp
pop
mov
jl
out
sub
int3
jae
lret
adc
fwait
mov
or
jmp
mov
sub
aas
dec
cmp
cld
lea
aad
lret
adc
shlb
and
mov
movsl
dec
ss
xchg
sbb
out
xchg
icebp
cmpsb
sub
cld
sub
in
mov
jo
mov
jg
rcrl
es
cmp
jnp
push
mov
sti
fs
insl
xchg
adc
xchg
jne
adc
hlt
cmp
fstps
push
jg
testl
xor
movsb
push
mov
pop
dec
mov
out
push
hlt
ss
pop
cmc
ficoms
push
mov
iret
add
mov
aaa
mov
jmp
jmp
push
cwtl
jno
out
rcr
inc
mov
push
fsts
pop
push
in
add
pop
xchg
andl
dec
sbb
adc
aad
js
leave
cmp
xor
add
shrl
neg
lahf
aam
mov
pop
push
mov
mov
sbb
jg
dec
sub
push
mov
test
jae
inc
sbb
lods
clc
addr16
int3
ret
fsubr
and
dec
and
test
mov
fdivs
sbbb
subb
dec
sbb
mov
cmp
adc
mov
inc
outsl
mov
inc
sbb
fwait
mov
jb
inc
lock
inc
into
sarl
xchg
aas
outsl
dec
push
dec
mov
xchg
aad
jle
cmc
jbe
and
into
lahf
or
jno
sbb
pop
pop
int
mov
imul
add
lret
jae
xchg
ret
fsubrp
insl
popa
adc
aad
lods
push
dec
and
fisubs
jae
xchg
enter
bound
xchg
loop
les
mov
stos
mov
testb
aam
adc
and
mov
and
jmp
cmp
js
addr16
stos
xor
movsb
xchg
jne
push
insl
idivb
and
notl
test
movl
xchg
sarl
xchg
ljmp
aaa
mov
fs
arpl
fnstenv
mov
cmpsb
in
int3
aad
jae
cmpsl
leave
add
sub
mov
or
andb
jmp
xor
ljmp
push
jo
sbb
lock
cli
and
mov
mov
pop
mov
xchg
fisubrl
cmc
jle
jae
push
fsubrs
dec
jl
fs
mov
fadd
data16
xor
xlat
lcall
cmp
pushf
lret
dec
push
dec
lds
push
fs
cmp
lret
push
mov
out
pop
es
popa
and
andb
inc
push
fcomi
sbb
jg
push
inc
pop
femms
adc
ja
sbb
jg
hlt
adc
je
nop
push
xchg
imul
sbb
push
cwtl
adc
mov
ss
mov
pusha
je
ljmp
lock
out
fbstp
sahf
lods
fbstp
add
and
testb
jmp
dec
lret
dec
dec
leave
xchg
dec
ljmp
dec
mov
xchg
xchg
cli
sub
and
inc
xorl
loope
cmp
insb
popf
out
inc
inc
pop
cmp
sahf
and
and
inc
movsb
mov
xor
or
push
lea
movsb
sahf
jp
js
mov
pop
scas
adc
clc
test
mov
and
push
mov
xchg
xor
lea
sahf
mov
mov
sbb
xchg
jo
xor
mov
adc
cmpb
sbb
or
add
ficoml
lods
mov
test
mov
lcall
push
aam
aad
lret
test
jno
cmp
adc
add
cmpsl
lods
jmp
jno
fs
mov
add
subb
pop
jo
sahf
jo
ror
mov
and
jb
in
sub
repz
mov
je
inc
jmpw
mov
lods
popf
inc
shl
mov
mov
outsb
cmp
xlat
arpl
cmpsl
fdivrs
fs
mov
dec
cltd
fidivrs
mov
mov
add
mov
mov
sbb
and
stc
adc
lea
pushf
push
lret
add
mov
ret
or
xchg
push
cwtl
mov
mov
aad
push
lea
popa
mov
outsb
push
in
mov
lcall
je
aas
jb
data16
mov
ret
sub
sub
mov
jmp
adc
pop
pop
lds
jg
xlat
fs
stos
jg
stos
out
jno
xor
mov
aas
adc
int
mov
push
je
int
stc
cmp
xor
mov
mov
push
lods
mov
and
push
hlt
sti
sbb
add
sbb
repnz
sub
pop
or
leave
inc
pop
xchg
test
xchg
out
out
insl
pushf
mov
push
push
xchg
push
movb
aaa
je
loope
ret
iret
push
leave
mov
pop
jo
mov
mov
sti
xchg
xor
sbb
pop
or
popf
sbb
pop
scas
xchg
inc
xor
sahf
xchg
or
push
hlt
sbb
push
mov
jo
aam
xor
in
sbb
ljmp
xchg
add
in
xchg
jo
pushf
cmp
ja
aad
mov
add
or
into
xlat
dec
repnz
pop
loop
fidivrl
jne
gs
outsl
pushf
xchg
pop
cltd
pop
mov
int
inc
fwait
mov
or
cmp
dec
add
in
jge
cld
cmp
aas
ret
jo
sub
sub
pop
cmpsb
jmp
leave
out
push
or
sahf
fsqrt
adc
or
enter
mov
stos
mov
lea
mov
push
out
mov
push
cmp
shll
mov
jp
aas
xchg
dec
sbb
and
outsb
lcall
jmp
data16
call
loopne
out
or
add
xchg
push
inc
xchg
cmovae
jns
cs
push
fcmovnb
push
in
inc
lock
ffreep
xchg
mov
aaa
fidivl
pop
mov
daa
push
mov
negb
mov
jmp
sub
dec
jg
inc
mov
jg
stc
divl
mov
test
scas
add
jbe
fidivs
pop
loopne
inc
mov
andl
mov
call
movsl
aad
sbb
roll
pop
lahf
jae
and
paddw
mov
lods
mov
sub
pop
call
cmp
cmp
movsl
lcall
loopne
mov
in
sbb
push
sbb
data16
xchg
adc
dec
pop
push
insb
xchg
or
imul
dec
in
cmp
mov
xor
insl
xchg
imul
xchg
jle
mov
jecxz
sbb
jge
pop
sbb
xor
pusha
and
pop
loop
and
insb
addb
insl
inc
insl
cmp
adc
rolb
ljmp
cmpsb
mov
popf
cmp
sbb
xchg
or
xchg
push
ds
pop
inc
movl
adcl
mov
in
adc
inc
sbb
mov
push
push
mov
push
mov
jae
mov
sahf
xor
cld
ret
dec
mov
jno
sub
adc
aaa
fidivrs
jne
xchg
cmp
sub
loopne
movsl
xchg
sbb
sbb
shl
stos
pushf
mov
jnp
jne
add
aas
mov
mov
dec
ret
mov
cwtl
jne
jae
nop
lret
mov
cmc
jge
jmp
push
into
lock
dec
outsb
stos
movd
jne
pop
pushf
ljmp
pushf
cli
sub
mov
mov
push
mov
xor
and
test
rorb
je
inc
out
cli
outsb
push
jnp
and
popa
test
fisubrl
and
out
imul
add
jmp
in
sti
sub
jne
bound
test
sti
ret
xor
test
imul
sbb
std
push
aad
mov
jl
out
popf
stc
aas
inc
push
pop
lcall
mov
mov
cmp
mov
add
mov
push
jbe
mov
or
test
bound
mov
mov
jle
mov
xchg
add
xchg
inc
pusha
aam
sbb
push
add
dec
gs
cmp
out
aas
xor
mov
ja
cmp
lock
nop
call
les
push
pop
scas
outsl
xchg
xchg
fdivrs
adc
insb
fidivs
popf
dec
xchg
and
push
out
xlat
add
xlat
add
lods
mov
sub
xor
sbb
mov
leave
mul
cmp
mov
cmp
shrb
sbbb
mov
out
imul
sysexit
sahf
adc
sbb
mov
add
add
jo
outsl
xlat
cmp
call
jg
pusha
bound
inc
mov
cmp
adc
jb
sbb
xchg
add
out
mov
into
xlat
orb
jle
mov
sub
fldt
inc
jle
mov
inc
xchg
leave
push
and
xor
push
je
sbb
pop
icebp
fbstp
jbe
in
adc
fwait
outsl
lret
psrlw
xor
xor
addb
xchg
xor
addr16
add
or
mov
pop
cmc
mov
push
addr16
cmp
arpl
rcl
push
sti
ret
out
sbb
xor
pusha
and
arpl
sub
movsb
push
shl
push
mov
dec
add
and
mov
lret
push
setl
pop
lock
jnp
adc
mov
xchg
fcomps
and
push
ds
sti
jp
jo
sbb
ret
lock
addl
movsl
iret
sub
push
repnz
sbb
mov
jle
mov
or
xchg
out
fistl
arpl
inc
push
jge
add
adc
in
lods
jae
and
or
and
movsb
jmp
xchg
mov
fisubs
xor
cmp
sahf
fnstsw
popa
jb
sbb
pop
adc
xchg
xchg
imul
jmp
cwtl
or
cwtl
cwtl
cmp
mov
jmp
hlt
jmp
jbe
out
sbb
or
ss
xchg
dec
pop
jnp
push
jno
jp
aas
add
sbb
mov
sahf
dec
adcl
pop
dec
cmp
jae
outsl
scas
aaa
xor
fisubs
dec
sahf
pop
adc
and
cmp
push
daa
test
xor
lret
fdivl
lret
fldcw
pop
inc
das
xor
cmp
sub
mov
sahf
jp
adc
xor
pop
lahf
pop
cmpsb
out
inc
loopne
fst
js
mov
pop
sbb
pusha
dec
test
dec
xchg
in
stos
ss
and
loop
in
movsb
add
sahf
out
jl
int
mov
add
mov
test
js
std
pop
ret
out
add
push
in
outsb
cmc
fisubs
cs
mov
popa
mov
cmp
add
xor
scas
inc
arpl
test
sbb
cmc
fcoms
shr
test
or
sub
pop
fstps
push
jb
mov
mov
shll
mov
lock
lret
add
fstpt
xor
sub
push
aam
ret
lahf
mov
lods
decl
inc
in
sbb
inc
dec
lret
lahf
dec
fisttpl
cld
sub
dec
xchg
les
mov
addr16
push
inc
in
fwait
movsl
out
test
jb
sub
and
out
loopne
mov
xchg
sbb
cmpsl
cltd
xor
filds
push
xor
mov
test
aad
mov
rclb
sub
jecxz
add
outsb
rorb
sahf
mov
mov
mov
es
mov
fwait
dec
aam
fsubp
jge
inc
jae
sub
and
xchg
imul
aas
pop
adc
into
push
lds
xchg
pop
fistpl
je
adc
outsb
xchg
dec
pusha
mov
sbb
jp
cmp
ja
outsl
lock
inc
and
push
mov
inc
lahf
aad
test
imul
xchg
push
and
jle
rcrl
shr
push
cwtl
inc
lcall
cmp
insl
outsb
push
ss
test
in
push
aaa
and
inc
arpl
rorl
cmp
sub
xchg
jo
jae
add
arpl
mov
dec
cmp
andb
dec
jb
lcall
mov
push
je
ret
cmp
lahf
mov
dec
mov
jbe
fwait
and
push
repnz
mov
xchg
mov
pushf
pop
pop
ffree
inc
push
add
lea
mov
sbb
jnp
imulb
xchg
pop
and
fildll
mov
shlb
out
and
pusha
das
es
fwait
or
jb
or
add
dec
xor
pop
and
out
or
adc
daa
inc
lcall
arpl
popf
inc
sbb
jb
lret
jae
and
mov
mov
ret
ficompl
mov
xlat
sub
adc
pop
mov
lea
pushf
shrl
mov
push
call
scas
hlt
adc
imul
std
mov
xchg
lods
insb
and
outsb
sub
dec
jno
and
lcall
movsb
jbe
cld
ljmp
lahf
icebp
cmp
sbb
sti
dec
xor
add
jmp
xlat
xor
out
sbb
repz
xor
in
fcom
push
movaps
iret
push
dec
pop
cmp
es
xor
dec
lret
add
push
and
jns
xchg
jb
loope
mov
xlat
cli
xchg
scas
pop
roll
sub
popf
in
js
fwait
mov
dec
and
repnz
mov
pop
push
in
inc
and
pop
mov
pop
lahf
sub
pushl
hlt
popa
add
push
pop
fnstsw
cmpsl
fcompl
xchg
movsb
insb
mov
sbb
push
push
stos
cmp
out
sbb
imul
in
nop
je
sbb
js
push
push
mov
mov
into
aaa
fs
imul
add
subb
lods
ret
xor
out
pop
jg
aam
popa
scas
call
pop
adc
movsl
push
sar
inc
mov
and
mov
dec
out
sahf
sarb
data16
ds
ret
ja
jmp
loopne
push
test
sbb
xor
jns
es
inc
mov
cmp
lcall
xchg
xchg
outsb
push
lds
mov
push
cmp
mov
outsb
dec
mov
rcpps
mov
lret
pop
push
xlat
pop
jb
sbb
imul
sub
movsl
jecxz
xchg
adc
in
jmp
cmpsl
push
mov
mov
pop
lods
mov
dec
shrl
sub
subl
pop
test
inc
mov
ds
lods
clc
mov
aad
jge
subl
hlt
jl
push
out
addr16
pop
add
lock
scas
outsb
and
int
push
push
dec
repz
sbb
out
and
ret
shlb
mov
xor
call
push
out
jmp
call
sbb
xor
pop
fistpll
mov
jne
lock
inc
cltd
xchg
aam
xchg
xchg
mov
adc
mov
and
mov
xchg
jp
mov
mov
cmp
aam
push
mov
or
setb
lods
sbb
rcll
loop
arpl
xor
xchg
cwtl
les
sub
outsl
dec
sbb
push
cmp
ljmp
jne
mov
mov
adc
fucomp
cltd
xchg
mov
fidivrs
out
es
int
jle
xchg
call
jb
repz
push
mov
cmp
push
jle
mov
dec
jno
jl
insb
pop
fmuls
lret
popa
xor
mov
call
xor
xor
fstpt
int
jl
jbe
sub
jne
cmp
mov
insl
push
cmp
int
sbb
popf
repnz
dec
dec
lret
inc
divl
jnp
jns
jle
ficoms
mov
add
idivb
cli
cwtl
in
and
mov
rolb
mov
fwait
push
call
aas
jae
and
pop
jmp
inc
sbb
js
xchg
adc
sbbl
cmpsl
lds
push
mov
jne
jle
xor
mov
out
in
outsb
mov
sub
xchg
pop
into
popa
hlt
mov
lea
out
push
xorb
mov
sbb
mov
rcrl
jp
mov
cmpsl
push
sbb
shll
loopne
jne
fwait
popf
or
mov
sub
xchg
push
adc
loope
pop
and
ja
inc
inc
arpl
add
xlat
pop
and
outsl
fdivr
push
add
loop
addr16
jg
mov
mov
les
push
popa
sarb
inc
mov
cmc
cs
sub
xchg
mov
inc
test
popa
mov
lods
push
xchg
mov
mov
roll
movsl
mov
jo
ret
insl
in
test
ja
shll
xchg
imul
mov
or
aam
mov
imul
and
inc
sbb
sahf
daa
inc
cltd
jge
daa
push
cmpsl
enter
xchg
push
popa
sub
shll
jnp
ret
inc
call
cmp
fwait
jecxz
out
sbb
movsb
ret
and
stos
and
int
push
inc
int
jne
dec
enter
fidivrs
stos
vpcmpeqw
and
in
sti
or
arpl
jle
xchg
xchg
arpl
outsb
add
xchg
setle
adc
mov
mov
orl
call
stos
lahf
cmpsb
xchg
sub
mov
xor
imul
outsl
sbb
adc
mov
mov
pushf
xor
jne
out
pop
imul
cmpsb
hlt
pop
aam
or
or
shlb
fcomps
jecxz
push
sbb
popf
sub
or
mov
xchg
ja
cmp
inc
pushf
jmp
cmp
leave
mov
fisubs
pop
fdivrp
nop
inc
pop
fwait
pop
adc
xlat
cmp
jg
xor
rorl
push
mov
jo
je
pop
cmpsb
push
mov
imul
cmp
xchg
xchg
ja
gs
mov
cmpb
adc
sbb
sbb
push
lock
xchg
out
stos
fs
pop
int
and
ljmp
pop
sahf
lahf
pop
jge
pusha
mov
and
cmp
xchg
sub
mov
pop
pop
jle
movsl
stc
adc
cmp
fists
iret
sbb
fistpll
hlt
add
push
and
and
movsl
outsb
mov
push
jae
in
xor
xchg
aad
add
je
mov
mov
add
dec
ret
aas
jbe
cmp
loopne
push
xor
jbe,pt
sub
adc
test
pop
sti
push
jno
xchg
xor
iret
movsl
pop
jl
sarb
mov
aad
or
outsl
add
push
mov
fs
shll
mov
lret
sbb
fsubrl
out
loop
fimuls
inc
xchg
fbstp
lds
xchg
pop
fs
pop
pop
loope
mov
lods
xchg
push
frstor
jbe
mov
mov
sbb
sbb
jle
aas
icebp
cmp
fisubrs
mov
dec
xchg
scas
fsubl
mov
xchg
fcmovb
jno
rolb
dec
pop
adc
add
push
inc
mov
sub
xor
push
dec
pop
shll
jb
fimull
rcl
cs
cmp
fdiv
movsb
sarb
mov
and
outsl
loope
xchg
adc
and
ret
xor
ja
inc
adc
into
call
rep
imul
xchg
sub
test
jns
in
cmp
xor
add
sub
mov
sub
add
xor
xchg
js
xor
mov
inc
loope
out
cltd
xchg
adc
cld
inc
int3
jge,pt
and
cmpsl
push
add
push
jns
mov
mov
lods
add
rolb
sbb
ds
xchg
fcomip
cmpsl
test
aaa
mov
ret
inc
cmp
jnp
push
inc
cmpsl
add
sub
xchg
sub
mov
jl
out
dec
xchg
sbb
dec
sarb
ret
leave
or
xchg
xor
in
and
xor
and
sbb
mov
cli
stos
xor
sbb
jns
push
lods
pop
movsb
mov
mov
out
fdecstp
stc
adc
rcr
popa
and
rolb
in
in
push
aad
cvtpi2ps
jecxz
inc
push
out
jge
lea
mov
xchg
dec
jns
adc
loopne
jp
adc
jns
jl
xlat
jnp
pop
jmp
std
out
js
xor
mov
push
arpl
jmp
inc
pop
or
lods
jge
movsl
out
pushf
loop
xchg
xchg
mov
mov
lods
jmp
cwtl
out
xor
xor
sbb
outsl
sbb
lahf
lods
fs
mov
push
repz
fsubrl
inc
inc
clc
outsb
push
pop
ds
and
adc
test
dec
mov
into
es
clc
pushf
mov
mov
pop
and
pop
ret
rclb
mov
dec
data16
lret
sbb
jp
mov
cwtl
and
xchg
jg
ret
lea
movsl
push
cltd
iret
aad
sbb
or
xor
insb
xor
mov
mov
popa
pop
movsl
jl
out
sub
in
lret
pusha
cmp
lret
or
out
xchg
xchg
push
cltd
dec
dec
lcall
mov
xor
xor
add
pop
faddl
cmp
int3
push
movsl
sbb
leave
xchg
add
xor
mov
xchg
mov
sub
pop
sbbl
push
imul
add
mov
mov
pop
outsb
shlb
mov
adc
fstl
push
add
lret
xor
cwtl
sbb
movsl
mov
aad
pop
xchg
sti
xor
push
movsl
lret
push
xchg
bound
sbb
negb
mov
arpl
xchg
mov
loope
cmp
sarl
and
add
fs
pop
jae
cmp
pop
jp
pushw
xchg
stos
lods
popf
push
iret
push
fistps
mov
jo
ret
and
out
push
rcrl
or
inc
repz
fwait
pop
in
data16
inc
fsubs
push
mov
ja
call
xorl
shr
lods
push
mov
icebp
aaa
cmp
pushf
xchg
mov
dec
mov
fidivrl
arpl
push
dec
addr16
mov
insl
xorb
inc
xchg
movsl
hlt
pushf
xorl
outsb
mov
mov
outsb
mov
dec
mov
enter
popa
push
xchg
mov
pop
mov
sbb
mov
out
mov
cmc
es
out
cmc
into
loope
outsb
cmp
jae
fistps
pushl
dec
jge
in
adc
lods
pop
adc
pop
in
xor
cmpsl
lds
movsl
nop
mov
cs
mov
popf
mov
xor
fcmovb
push
cli
add
jno
or
mov
dec
mov
lods
pop
ss
dec
mov
inc
inc
imul
rolb
pusha
inc
add
outsl
sub
not
aaa
imul
push
aas
fmul
pop
sbb
xchg
mov
mov
cld
cmp
dec
mov
mov
add
xchg
or
sbb
push
andb
jp
inc
dec
cmp
sarb
jne
jecxz
jae
aad
cmp
mov
jbe
daa
push
add
adc
mov
mov
arpl
adcb
clc
inc
xchg
xchg
enter
ja
insb
lret
push
and
mov
and
cs
imul
movsb
xchg
nop
scas
mov
add
mov
call
xorl
and
xchg
mov
sub
push
adc
dec
jg
xchg
test
sti
push
xor
jb
lcall
fistpll
inc
rcll
xchg
push
aas
stos
sub
push
adc
push
xchg
push
push
aas
arpl
xchg
add
sti
adc
inc
pushf
cmpsl
loope
lret
loop
in
push
adcl
leave
jp
fdivl
repnz
dec
dec
outsl
sbb
cmpsl
mov
adc
cmp
fidivrs
loopne
xchg
mov
movl
cmc
lret
adc
xchg
ret
imul
hlt
lcall
cltd
and
aad
test
ret
lcall
ja
sub
outsb
mov
mov
lcall
pop
lock
inc
mov
pushf
xor
jnp
mov
xchg
push
adc
xchg
scas
xor
lds
mov
jns
fwait
mov
add
insl
clc
ret
je
adc
sbbb
sbb
aad
mov
out
ja
test
inc
scas
data16
pushf
adc
jb
in
cld
dec
in
fs
mov
gs
adc
orl
push
repz
aad
xor
xchg
adc
mov
push
xlat
mov
dec
push
bound
fisttps
into
push
sub
adc
adc
mov
jns
push
cli
scas
sub
xor
adc
cwtl
in
cmp
dec
adc
pop
xchg
ret
add
jne
adc
pop
push
xchg
ja
loope
xchg
sub
lds
into
sahf
dec
xchg
fs
lret
push
sub
mov
jg
jmp
movsb
mov
and
fcoml
adc
popa
outsb
and
es
in
push
xchg
or
adc
xor
mov
lcall
jge
mov
fimuls
pop
lcall
dec
push
mov
pop
xor
mov
cmpl
sbb
sub
jae
fistl
xchg
mov
addb
push
daa
xchg
pop
jae
inc
cmp
aad
xorb
fcmove
aad
push
mov
xchg
shr
cmp
xchg
sbb
incl
fdivrl
inc
fdivrl
push
add
lcall
and
arpl
cmp
ljmp
mov
jae
pushf
mov
and
xchg
ss
and
test
je
push
movsb
outsb
imul
movsl
add
aam
test
out
xor
inc
jge
or
add
ret
leave
gs
mov
and
mov
cmp
in
mov
xor
repnz
pop
adc
fadds
xchg
or
loope
dec
hlt
push
js
gs
inc
sbb
xor
lea
mov
test
jo
shrl
push
call
fwait
popf
ljmp
stos
scas
mov
addr16
lahf
loope
jo
test
mov
pop
mov
or
mov
out
or
mov
testl
rorb
dec
mov
pop
into
in
jl
out
sbb
ret
add
out
pusha
or
xchg
pushf
repz
sbb
stc
lds
cmpsl
test
aad
push
mov
adc
inc
jne
dec
pop
cltd
jbe
mull
pusha
outsb
add
mov
xchg
jne
jl
xchg
cltd
pushf
jecxz
inc
mov
jnp
lcall
mov
mov
lea
insb
pop
js
popf
roll
mov
jge
mov
out
pop
add
lcall
jle
bound
adc
jp
dec
sub
push
lret
or
rcl
add
arpl
hlt
sub
lods
inc
adc
leave
inc
popf
mov
cli
cmp
jg
cmp
outsl
shll
mov
insl
inc
ja
pop
ja
fwait
aad
jp
dec
mov
jnp
pop
test
mov
pusha
push
and
add
pop
dec
jp
and
cmp
mov
xchg
outsb
insb
mov
hlt
ds
cltd
cmpsb
xchg
enter
sahf
cmp
pop
cmp
and
fs
sub
daa
out
shrl
gs
incb
mov
loope
cltd
es
or
sti
adc
or
xor
lods
mov
push
jge
jne
xchg
push
int3
fisubrs
in
or
push
sub
shlb
inc
imul
fsubr
mov
aas
adc
mov
adc
and
adc
hlt
or
mov
dec
cld
pop
lahf
push
lcall
ss
push
mov
stos
lds
test
dec
add
sbb
xor
mov
imull
inc
mov
push
pop
repnz
dec
sbb
mov
xchg
sub
mov
leave
ljmp
hlt
cmp
mull
cmp
dec
adc
cmp
ljmp
aam
aaa
xor
fmuls
push
adc
pusha
mov
jb
inc
in
pop
pushf
mov
imul
mov
cwtl
mov
ja
dec
inc
sahf
jno
jns
rclb
push
aad
mov
cmp
clc
fptan
sahf
pusha
inc
dec
insb
mov
int
jle
sbb
mov
add
jg
add
xor
sub
fadds
rsm
mov
push
mov
fs
mov
nop
mov
notrack
cltd
xchg
out
call
push
cmpsb
stos
popf
mov
call
mull
test
cmpb
es
push
loop
inc
cmp
push
jne
jnp
pop
pushf
rclb
cmpsb
js
ffreep
test
lock
sbb
and
jp
push
cmpsl
inc
cmp
push
add
dec
jmp
rcr
cwtl
push
sbb
mov
gs
int
dec
into
aas
sub
mov
movl
xor
cmpsb
in
push
ja
cmc
xchg
and
fstpl
push
mov
fcmovu
sbbl
or
movsb
or
test
and
leave
std
sub
loopne
mov
imulb
push
push
dec
sub
aaa
data16
pushf
movsb
idiv
lods
xchg
jne
shlb
dec
xor
in
lcall
adc
data16
dec
jbe
call
xor
pop
je
rolb
adc
ljmp
push
js
jns
push
mov
fcompl
push
jmp
jmp
aad
adc
push
and
arpl
cs
mov
in
stc
cs
out
fs
xchg
mov
loope
mov
out
ret
popf
and
jbe
stc
sbb
add
out
fsubr
mov
inc
into
enter
imul
sbb
dec
and
popf
in
cs
in
ret
rorl
movsl
addr16
pop
push
jg
and
mov
push
call
ficompl
mov
inc
sub
clc
mov
xor
mov
push
insb
xchg
xorb
jge
mov
mov
mov
cmp
jmp
mov
and
gs
dec
in
jle
and
arpl
test
adc
fsub
cli
inc
int
imul
adc
cmp
leave
ds
xor
jbe
pusha
cmp
mov
push
das
and
pop
nop
lock
adc
adc
fwait
sub
mov
cmp
popf
jmp
add
and
adc
pop
xchg
roll
stos
movl
or
popa
push
mov
ljmp
sub
mov
mov
stos
or
call
hlt
jae
or
sub
dec
js
mov
subl
jb
inc
push
xor
mov
je
or
add
int3
xor
sub
outsl
and
mov
mov
sub
add
xchg
pop
dec
insb
into
sahf
ja
sbb
and
sub
xor
ds
out
sbb
add
sub
jnp
mov
xchg
add
xchg
sbb
push
sub
mov
out
adc
xor
mov
mov
pop
stos
inc
outsl
loope
out
subb
add
mov
aad
fwait
sub
popf
sti
mov
fcoms
out
add
mov
add
xor
cmp
sbb
aad
cmpsb
mov
lret
int
inc
into
rcrl
das
mov
rcrl
sti
cmp
subl
in
push
popf
push
pop
mov
icebp
imul
jecxz
std
dec
pshufw
xor
push
dec
sub
and
inc
ret
cmp
sbb
inc
pop
dec
inc
jnp
scas
jp
cwtl
sbb
jbe
jmp
test
xor
xchg
adc
lahf
cli
rclb
int
popf
sbb
clc
add
int
fcompl
pop
and
sbb
nop
dec
les
or
enter
and
cwtl
pop
mov
js
es
pop
es
cs
shll
arpl
pushf
dec
mov
xor
fadd
out
cmpsb
jns
movsl
mov
mov
xor
js
call
loopne
fld
xor
rcr
jp
cmp
mov
jp
adc
mov
in
iretw
jmp
adc
sbb
sub
mov
jge
push
rolb
cwtl
fildll
lcall
jne
dec
sbb
cld
data16
mov
mov
out
jg
xchg
addr16
jb
stos
inc
jne
jne
fldl
cmpsl
xor
int
enter
addr16
jmp
and
imul
mov
xorb
add
test
add
push
ljmp
sub
dec
aas
cmpsl
inc
ja
sub
push
scas
stos
jns
sbb
movsl
xchg
xor
daa
dec
adc
pusha
test
sbb
lcall
jle
in
jmp
jae
and
and
les
xchg
ror
cmp
jmp
sbb
lret
insl
or
rcrb
mov
cmp
pop
out
or
pop
in
push
inc
call
cmc
out
cmp
xor
mov
and
aas
insb
lahf
xor
sub
pop
jae
adc
cmp
lahf
xchg
inc
imul
mov
xor
or
cmpsb
jmp
lock
cli
add
popf
lahf
call
push
jmp
mov
ljmp
sti
lock
aam
cwtl
inc
int
xor
xor
xor
xor
add
repnz
and
aad
or
ret
les
adc
in
xchg
aam
inc
and
mov
lock
aaa
ljmp
push
test
pop
push
sbb
lcall
xchg
jb
sbb
int3
xlat
mov
jbe
jb
dec
cmpsl
ret
or
test
sbb
or
jnp
mov
jnp
outsb
fiaddl
popf
sub
adc
ja
lds
mov
adc
data16
xor
inc
inc
repnz
push
sub
and
aad
xor
push
xchg
dec
xchg
insb
pop
test
pusha
sahf
cmp
outsb
scas
imulb
loope
mov
fistps
sub
jp
hlt
dec
fs
pop
mov
xchg
dec
sbb
xor
lods
int3
shrb
add
mov
jle
in
sub
je
inc
fisubrs
add
mov
and
mov
cmc
fstps
gs
dec
dec
js
jbe
div
gs
mov
loopne
mov
stos
mov
insl
mov
adcl
hlt
mov
mov
mov
cmp
cmc
or
aam
mov
aam
dec
jp
cltd
dec
ret
mov
sub
cmpb
xchg
stc
push
test
mov
scas
adc
int3
sub
fdivrl
imul
pop
shrl
sbb
mov
insb
lcall
xchg
fcompl
mov
jne
lods
movsb
xchg
xor
jmp
dec
enter
in
xchg
and
int
inc
into
pop
ja
clc
pop
cmpsl
in
add
sbb
das
lret
movsl
clc
pop
xchg
cmc
and
shlb
hlt
fidivs
ret
sbb
repz
or
cmpsb
xor
orb
scas
mov
cmpsb
lock
mov
mov
xchg
cltd
jmp
xchg
sub
adc
ret
je
add
push
and
insl
add
test
jns
push
insb
xchg
popf
sti
out
loop
xorl
xor
and
cmp
xor
cli
add
push
jb
std
ja
stos
movsl
xor
dec
xorb
rcl
add
dec
sub
cmc
xor
outsb
sub
jge
dec
xor
adc
icebp
pop
sbb
sub
cmp
in
mov
mov
scas
sub
push
in
mov
mov
out
cmp
pop
adc
pop
fidivl
cmp
add
scas
stos
mov
popa
inc
out
lea
repnz
xchg
mov
jge
js
aas
inc
roll
pop
mov
mov
push
adcl
dec
movsl
mov
cmp
icebp
mov
icebp
xchg
lods
mov
addl
sub
mov
aas
pusha
int
ds
cmp
jo
fdivrs
in
je
pusha
sti
push
cmp
push
fdivrl
cs
rcl
inc
je
push
add
in
xor
int
and
push
into
mov
cmp
sub
xchg
gs
sbb
fsubrl
arpl
push
cmp
fbld
jl
and
out
inc
js
jl
cs
jno
mov
fcoms
mov
sbbb
adc
xor
imul
add
cltd
outsl
mov
mov
gs
push
xchg
push
daa
arpl
arpl
imulb
push
push
popf
pop
inc
rolb
fucomp
or
sahf
pop
adc
sbb
sahf
mov
lret
jp
xlat
ss
xchg
jp
xchg
jno
mov
push
mov
add
lcall
inc
arpl
adc
jnp
inc
mov
sub
repnz
popa
jne
or
xchg
shlb
push
insb
pop
push
in
add
mov
sbb
adc
pushfw
insl
inc
stos
add
mov
jecxz
pop
fmuls
cmpsl
rcl
and
push
jae
arpl
popf
test
sbb
ret
or
pop
dec
add
test
sub
fadd
push
jge
loopne
ds
or
andb
cmp
xor
cli
cmp
arpl
xorb
mov
add
pop
sbb
push
push
hlt
insl
insl
mul
add
aam
mov
push
mov
aam
repnz
or
jg
aas
loopne
movb
faddl
cmp
imul
lea
mov
ljmp
and
das
xchg
data16
cmp
cmp
mov
jle
adc
leave
aas
or
lret
xor
aad
cmp
add
inc
or
or
ljmp
add
pop
divb
push
inc
inc
push
cmp
mov
sbb
xchg
std
mov
aad
pop
jnp
xchg
js
mov
fsubl
cmpsl
dec
movsb
xchg
int
push
inc
adc
in
pushf
in
mov
cmovp
cli
outsl
lds
mov
cmp
adc
lahf
xor
cmp
sub
shrl
xor
push
dec
inc
in
adc
push
push
cld
xor
jno
popa
sub
mov
xor
jno
movsb
pop
sub
sbb
cmp
mov
repnz
enter
out
dec
daa
mov
or
mov
hlt
fmuls
xchg
jge
adc
inc
lock
ds
or
cmc
cwtl
scas
xor
ja
adc
mov
and
inc
jmp
adc
sbb
mov
pop
inc
jge
arpl
aam
cmp
popa
lahf
adc
cmpsb
scas
push
in
aas
mov
xor
mov
in
sub
xchg
imul
sbb
into
ja
iret
imul
pop
inc
cmpsb
hlt
xor
ja
dec
or
sbb
xor
call
fildl
adc
xor
inc
rorb
xchg
imul
pop
ret
call
jae
dec
cmp
sti
cmp
pop
outsl
mov
xor
stos
dec
dec
pushw
mov
dec
dec
inc
adc
push
nop
adc
cmp
adc
inc
pop
jns
mov
cwtl
test
cmc
call
push
lds
jnp
out
mov
pop
cmp
les
mov
sahf
add
js
xchg
adc
into
dec
dec
xchg
xor
rcl
dec
js
sti
mov
repnz
hlt
in
lret
aas
lahf
jbe
in
sbb
sahf
sub
popf
add
test
lock
jle
ret
mov
insb
repz
js
and
xor
rcr
sub
pop
push
push
inc
adc
cmp
lahf
sbb
testl
int3
in
push
sub
and
add
sarl
adc
sbb
fdivrs
lret
push
lods
popf
mov
sbb
loope
jb
xor
xchg
jbe
notl
clc
cmpsb
aam
mov
cmp
dec
scas
das
jne
mov
andl
testl
ds
aad
das
jne
lret
sahf
test
cli
pusha
leave
jbe
mov
mov
sub
mov
icebp
adc
pop
in
int
stos
xchg
push
mov
outsl
jp
add
mov
mov
insl
lock
fucomp
sti
outsl
mov
push
add
popa
jmp
fists
js
addr16
inc
dec
js
push
mov
out
mov
xor
notl
dec
inc
lcall
mov
outsl
loop
sbb
int
cmpsl
int
push
xor
inc
enter
out
in
sub
int3
xchg
sbb
imul
clc
test
shl
stos
mov
ljmp
fmuls
out
jnp
add
fsubl
ret
test
xor
fsts
mov
mov
lds
repnz
xor
sbb
fcomi
dec
mov
sbb
jne
fcoms
stc
enter
mov
movsl
mov
mov
lock
cmp
jno
addl
es
sbb
mov
dec
xor
loopne
xor
cmpb
xchg
out
inc
jg
push
add
jo
gs
jge
mov
test
xor
lcall
xor
stos
push
lea
and
sub
in
sbb
hlt
pop
or
outsb
adc
push
test
adc
mov
ds
cltd
xchg
mov
xor
vpmullw
add
je
cmpsl
sub
inc
movsl
popf
xchg
loopne
pop
jbe
std
sbb
sub
mov
mov
mov
popa
inc
nop
mov
dec
mov
xor
xor
cwtl
pop
mov
stos
sti
push
aaa
pop
xchg
shll
cmc
fucomip
push
xchg
gs
pop
sahf
mov
sbbl
inc
outsl
lods
mov
xor
fistl
int3
xchg
out
js
adc
data16
cmp
icebp
fstl
xchg
mov
fisubs
mov
faddl
mov
insb
stos
mov
push
ja
lcall
pop
mov
cli
dec
cwtl
sbb
pop
push
sbb
lret
mov
jo
push
adc
jbe
leave
cld
or
push
fcomps
sbb
lods
adc
xor
cmp
imul
jp
mov
mov
dec
cmp
cmpsl
loop
cmp
sahf
cltd
mov
icebp
outsl
jo
gs
mov
and
aam
inc
mov
pushf
mov
push
clc
arpl
pop
roll
outsl
push
sbb
sti
and
adc
sbb
cmp
sbb
cmc
clc
lds
add
repnz
repnz
mov
test
xchg
jb
fs
std
movsb
aam
cmp
fildll
or
popa
pop
aaa
jne
ret
hlt
cmp
pop
fst
mov
mov
movsb
mov
sub
push
mov
ja
testl
xor
cmc
out
push
fdivl
jmp
adc
xchg
sub
jl
inc
push
jle
mov
mov
stos
sub
jg
testb
cmp
lods
test
loopne,pt
outsl
fwait
mov
mov
je
xor
jp
fildl
notb
pop
cmp
inc
mov
jecxz
cmpsb
cmp
mov
mov
xchg
icebp
ja
sub
and
push
sbb
icebp
mov
cmp
ljmp
push
insl
fsubr
stos
outsl
adc
mov
mov
xchg
pusha
or
cmp
orb
mov
adc
pop
popa
mov
cmp
iret
fsubs
jg
les
jno
sahf
sahf
xlat
push
out
int
addr16
mov
stos
push
adc
push
jne
sbb
and
dec
sub
hlt
insl
and
mov
insl
sub
cmp
inc
data16
inc
xchg
enter
adc
fistpll
pop
cmpsb
cmp
push
scas
xor
out
in
int
jge
mov
dec
or
and
loop
jmp
mov
jle
jp
xchg
ja
aam
xchg
cmp
filds
mov
dec
jae
lods
mov
jae
insl
jbe
or
dec
xchg
cmp
in
std
mov
dec
dec
inc
bound
dec
mov
xchg
bnd
jo
inc
cmp
shll
and
push
cwtl
mov
lret
jae
dec
cmovae
pushf
sbb
pop
fucomip
dec
mov
popf
push
xchg
jge
aas
jns
ret
mov
and
mov
pop
dec
imul
fidivrs
popf
mov
roll
es
mov
and
push
or
fbstp
sub
and
imull
cmp
movsl
cmpsb
lcall
lea
sub
xlat
andb
sbb
lret
int
ret
fmull
fisttps
xchg
pop
and
mov
pop
rorb
sbb
xor
daa
inc
leave
fdivrl
mov
lods
addr16
popa
movsl
sub
ror
stos
xor
mov
push
orl
ja
cmpsb
daa
in
jbe
fisttpl
movnti
sbb
inc
sbb
data16
mov
mov
insl
lcall
outsl
or
rorl
dec
incb
in
adc
mov
lds
push
mulb
adc
cld
call
dec
fnsave
jns
cmp
sbb
cmp
push
cltd
lods
lret
daa
popf
cwtl
inc
and
cli
and
lcall
sub
xorb
push
push
pop
insl
sbb
fmuls
cmpsl
in
or
stc
jo
pop
jo
test
push
ret
inc
mov
insl
inc
dec
push
testb
push
mov
sbb
xor
add
negb
ja
sar
sbb
dec
mov
cld
mov
and
xchg
lret
popa
daa
cmp
aad
dec
aas
hlt
mov
push
std
cmp
xor
mov
orb
mov
dec
shl
movsb
jg
mov
loopne
adc
cmp
or
push
mov
shlb
and
mov
jl
rorl
out
pushf
xor
jg
cmpsl
jns
mov
fnstenv
in
sub
mov
es
fcompl
sbb
jmp
jle
movsl
lock
fs
cld
jo
sbb
stos
sahf
test
lahf
mov
mov
jp
mov
and
pop
pushf
bound
xor
fnstcw
mov
je
sahf
in
inc
inc
adc
jl
jbe
std
push
les
sahf
iret
pushf
jbe
fmuls
out
adc
cwtl
sub
cmp
push
imul
rorb
inc
pop
push
in
xchg
xor
dec
fcmove
outsl
and
adc
outsb
mov
pop
aas
mov
jle
outsl
pop
lock
mov
xor
jno,pt
js
scas
mov
inc
add
jno
or
movsl
std
mov
ret
adc
cmp
xchg
pop
insl
mov
adc
add
sbb
and
into
dec
xor
sub
jge
and
sbb
sbb
and
mov
xor
xlat
xchg
sub
loopne
push
popa
in
test
cmp
sbb
push
xchg
js
loop,pt
add
sbb
dec
cmp
xchg
sbb
dec
nop
rcrb
inc
iret
sbb
adc
icebp
sub
in
xchg
push
mov
test
push
outsl
shll
sbb
popa
mov
nop
in
xor
jne
mov
in
cmp
sbb
mov
sbb
sub
adc
xor
rolb
imul
or
xor
jno
insb
sbb
xor
mov
mov
sbb
sub
imul
xchg
add
mov
mov
in
or
cltd
sbb
mov
popf
jmp
pop
mov
fnstsw
sbb
add
mov
xor
cld
inc
addr16
fwait
sub
lea
sbb
enter
mov
xchg
das
push
or
leave
xor
arpl
inc
enter
insl
xchg
mov
in
lea
icebp
into
pop
das
fs
mov
outsb
popa
mov
std
xchg
pop
mov
fs
sub
lahf
ja
cmp
mov
pushf
ljmp
mov
mov
pop
jb
jmp
loopne
push
pop
add
cmp
pusha
mov
loopne
cld
dec
out
rcrl
fcmovbe
xor
in
rcrl
int
fldenv
ja
jno
xchg
icebp
ljmp
cmp
popa
jl
xlat
xor
arpl
leave
js
outsl
jg
jb
jge
fs
sub
jb
and
xchg
lock
iret
fidivrl
cli
adc
in
adc
xchg
pop
mov
cmp
outsb
in
jno
insb
into
push
mov
mov
sbb
xchg
jle
outsb
sti
addr16
fidivs
jecxz
fists
dec
pop
mov
icebp
jmp
xchg
sub
out
or
rcll
fistl
hlt
loop
or
push
dec
adc
lahf
jbe
xchg
adc
iret
hlt
cmp
test
sub
fcoml
add
aaa
sahf
out
push
adc
fs
add
add
lahf
imul
mov
dec
lods
pop
push
and
lds
aam
js
lods
fwait
push
mov
mov
cs
lods
out
adcl
xchg
and
je
jo
mov
cmc
fs
cmp
mov
and
or
sub
mov
pop
and
in
das
jb
push
jne
cwtl
push
dec
push
add
lods
flds
pop
mov
push
dec
lret
mov
mov
out
push
xchg
out
mov
sub
push
jmp
test
dec
xor
add
aas
nop
dec
dec
cwtl
xor
xor
in
xor
xor
enter
jecxz
out
movsb
xlat
push
cmp
jne
lods
push
xchg
ja
addr16
mov
movsl
xor
pop
ds
xchg
xor
adc
adc
mov
rorl
cmc
out
aam
icebp
lahf
mov
mov
adc
sub
in
popl
and
mov
ret
hlt
xor
int3
fwait
jns
mov
jnp
mov
jg
xor
lock
pop
jae
inc
insl
add
aas
ror
andb
ret
xchg
ljmp
push
pop
mov
jecxz
cmp
jmp
out
xor
arpl
cwtl
sub
aas
cs
call
fwait
aad
fisubs
enter
and
inc
nop
pop
pop
mov
pushf
nop
cmp
popf
cld
rorb
jne
fdivs
scas
fidivl
mov
out
rcr
mov
add
ja
jg
mov
test
push
dec
sub
arpl
movsb
push
andb
xor
test
shl
pop
andl
rorb
mov
rcll
imul
xor
cwtl
mov
and
lret
push
stos
adc
add
mov
lahf
push
stos
pop
jl
xchg
aam
cmp
jae
out
mov
lcall
int
ret
lea
add
lea
mov
int3
adc
bound
jo
mov
sbb
outsb
dec
in
inc
insb
stos
sbb
xor
out
and
daa
add
xor
mov
sbb
xor
mov
cmp
or
cmp
stos
sbb
push
test
push
mov
arpl
push
mov
or
mov
insl
arpl
mov
addr16
mov
jbe
sub
mov
cmp
sbb
outsl
outsb
inc
xchg
lods
cmp
adc
and
mov
jge
xchg
jge
sbb
fsubrl
lock
xchg
mov
cmpb
pop
dec
sub
and
in
xchg
cld
push
leave
inc
dec
fstl
dec
xchg
sbb
jp
adc
fisttps
pushf
xchg
mov
inc
lods
in
fsubs
push
push
xchg
out
mov
lret
les
repnz
shll
jecxz
mov
sub
push
jne
ja
pop
xor
and
rcrb
jbe
sub
jle
sbb
dec
int3
fmuls
jecxz
ss
loopne
lea
xor
js
inc
movsb
add
ret
xchg
stos
xchg
lods
sbb
and
push
dec
xchg
cmp
xchg
add
mov
mov
cmc
jo
sbb
outsb
mov
jb
jge
ret
push
addl
adc
sub
sbb
out
add
xchg
mov
cmp
mov
push
ret
pusha
xorb
ss
outsl
outsb
sar
insl
mov
jp
mov
jp
jmp
gs
insb
push
movsb
jnp
sub
data16
rcrb
ret
lds
test
int
sqrtps
test
mov
inc
jg
cmp
cs
stos
jns
in
adc
imul
mov
xor
cmp
pop
pop
mov
pop
push
mov
push
inc
lea
iret
mov
ret
push
dec
shlw
imul
mov
sub
push
mov
push
out
lds
sub
jns
ret
xchg
aaa
sub
sti
mov
cmc
add
mov
into
cs
js
push
call
and
xchg
pushf
shlb
mov
ffreep
psubw
dec
push
outsb
in
ss
sahf
test
push
daa
popf
outsb
mov
rolw
and
aas
mov
int3
addb
add
add
jmp
adc
jp
das
push
fidivrs
jmp
push
jecxz
xchg
outsl
sub
lret
aaa
inc
insb
fucomp
sbb
pop
ds
pushf
nop
or
fisttpll
aaa
push
xchg
xchg
les
dec
cli
sub
sbbl
pushl
pop
adc
pop
outsb
loop
cmpsl
sar
pop
dec
popa
pop
out
movsb
lcall
xchg
pop
dec
xlat
cli
mov
cmp
stc
sbb
gs
mov
aaa
js
push
idivl
mov
aam
das
fs
popf
or
add
push
jo
add
sbb
cmpsb
popf
sub
pop
mov
ficoml
mov
stos
scas
adc
pop
and
mov
repz
xchg
loopne
jb
ljmp
jns
xchg
in
xchg
js
pop
out
fs
lea
xchg
cmc
sub
aas
into
sbb
jecxz
lods
inc
pop
adc
outsb
mov
push
stc
xchg
mov
cmp
xchg
push
sbb
push
cmpl
mov
mov
inc
xchg
jmp
shll
int3
in
in
cmp
ret
cmp
push
stos
roll
ja
jne
cmp
xor
sbb
mov
pop
lock
mov
daa
inc
clc
bound
push
int
ret
xchg
ds
cmp
stc
mov
test
icebp
cltd
scas
mov
gs
loope
mov
imul
xor
push
jbe
movsl
stos
jns
mov
push
add
fisubrs
addr16
call
mov
out
adc
adc
pop
adc
pushf
mov
jp
add
lds
gs
or
out
lea
scas
lods
mov
dec
mov
cltd
insb
out
sbb
ds
clc
push
mov
adc
cmpsb
lret
test
out
jbe
aas
pop
sub
or
push
mov
inc
addr16
lea
push
cmp
je
sahf
xorps
shll
inc
mov
mov
cmpsl
mov
std
cmp
sbb
rcll
jle
jne
jns
mov
jbe
lods
imulb
mov
sub
lcall
orl
es
pop
and
enter
and
pop
xchg
mov
daa
push
movsb
in
push
jbe
test
and
js
push
lcall
xchg
movsl
jae
mov
push
jnp
sbb
ljmp
jmp
xchg
dec
gs
jbe
daa
gs
pop
sbb
and
push
int
mov
repnz
test
in
popf
jmp
adc
adc
cmc
and
push
pop
daa
cwtl
pop
bound
push
inc
cwtl
pop
dec
mov
push
mov
adc
cwtl
or
les
xchg
add
test
push
and
push
mov
cld
push
pop
out
pop
fs
adc
jno
pop
sub
and
mov
mov
pop
pushf
test
sub
fsts
addr16
xor
addr16
jb
jp
or
rcrl
in
mov
cmp
xor
mov
push
cltd
ja
test
test
ficoms
icebp
adc
into
and
xchg
and
xchg
push
repz
fisubl
mov
imul
ror
dec
dec
fwait
sub
cmpb
xchg
add
fnsave
add
fld
std
lcall
jo
ret
jb
pop
scas
scas
out
inc
mov
pop
cmp
ljmp
push
mov
inc
sub
mov
addr16
mov
loope
hlt
lret
xlat
cmp
inc
adc
cmp
sub
jne
xchg
mov
vsubsd
xor
lods
cmp
mov
mov
sbb
mov
push
pop
mov
sbb
adc
wbinvd
and
xor
jo
ljmp
das
mov
imul
fidivs
repnz
aam
lods
out
push
hlt
jo
add
shrb
lods
xchg
sbb
jl
jno
test
add
pop
xchg
dec
pop
cwtl
dec
sub
xor
sbb
push
mov
jecxz
cs
lea
icebp
shll
mov
in
sbb
mov
jge
push
in
imul
insl
xchg
test
jnp
into
add
cmp
mov
xchg
sbb
cmp
adc
mov
jl
sti
inc
outsl
mov
inc
int
cmp
push
jb
stos
push
and
pop
xchg
and
popf
jbe
popf
ficoms
cs
push
mov
idivb
mov
sbb
adc
fwait
sbb
xchg
jge
xchg
scas
mov
test
stc
sbb
lret
mov
and
repz
sub
add
ret
in
loop
and
gs
push
cmp
push
subb
pusha
addr16
adcl
pop
lea
jo
or
lods
jb
mov
inc
lcall
adc
fwait
pop
xor
iret
ds
jns
repz
cmp
sarl
repz
mov
jae
push
ljmp
sub
cmpsb
push
ror
xchg
and
mov
stc
cmp
ss
icebp
fidivs
push
pushf
jle
mov
popl
enter
dec
rcrb
nop
dec
xchg
mov
xlat
mov
arpl
push
stos
call
mov
lret
jns
out
js
dec
push
out
xor
cwtl
lock
sub
cltd
add
add
cmp
aaa
mov
icebp
cmp
loop
add
sbb
ss
ljmp
pop
xchg
jmp
sbb
dec
xor
aas
mov
and
lretw
jge
imul
mov
lods
in
jns
xor
int
xor
cld
dec
je
incl
js
testl
or
insl
and
sub
jne
or
imul
adc
sbb
imul
aas
adc
mov
lcall
iret
inc
pop
xchg
xor
xorb
in
mov
ss
mov
pop
sub
ss
push
nop
aaa
xchg
dec
mov
js
jp
cltd
add
push
out
hlt
sub
fbld
push
pop
sub
xchg
sbb
push
mov
sub
test
fwait
mov
push
inc
inc
and
and
lods
jae
ljmp
push
adc
push
sbb
lods
into
ds
cmp
lock
cmp
lret
xor
fimull
pop
push
adc
cli
jnp
sub
xchg
ljmp
fsubs
orl
stos
push
jmp
in
adc
stos
sbb
lret
outsb
push
rorl
dec
insb
imul
insb
cmp
fstpt
inc
mov
xor
or
andl
sub
in
mov
loop
sbb
shl
addb
pusha
ds
adcl
stos
insb
push
cmp
mov
iret
xor
pusha
lods
bound
xchg
push
jne
sar
push
jo
aad
inc
rcll
and
lds
mov
push
lds
test
jae
mov
jge
xchg
loop
add
bound
int3
xor
jecxz
xor
and
movl
sti
fsubrl
cmc
fst
fldenv
ds
mov
push
nop
test
mov
sub
mov
fwait
lea
clc
insb
jl
mov
arpl
xchg
test
mov
pop
xchg
push
sub
add
push
mov
xchg
cmp
dec
fdivrs
jge
jns
enter
and
fs
aam
xchg
into
inc
cwtl
sub
inc
scas
sbb
mov
icebp
out
ret
sub
xor
sti
shlb
shll
jl
dec
pushf
inc
mov
mov
dec
jbe
push
mov
je
push
lods
dec
pop
push
mov
xor
pop
enter
mov
dec
mov
das
lds
ret
mov
in
xchg
push
scas
in
fstp
xchg
lds
lahf
adc
xor
fstpt
aam
fnstsw
fcoml
adc
lahf
aaa
sub
or
frstor
pushf
or
jecxz
and
rorl
in
aam
xchg
movsb
jo
and
sbb
mov
pushw
sub
inc
xor
fs
mov
dec
fcmovne
adcb
jle
aam
push
adc
inc
mov
jbe
push
sub
pushf
mov
mov
mov
mov
push
aad
movsb
and
mov
in
fdivp
cwtl
add
mov
dec
sub
mov
dec
ret
sub
outsb
aam
fidivl
fcomps
popa
cmpsl
cmp
mov
dec
addr16
jle
xchg
out
ds
popa
arpl
mov
push
scas
add
or
sbb
das
cmp
scas
ss
jne
int
outsl
jge
stc
mov
push
push
cwtl
push
push
xchg
loop
push
cld
pop
push
mov
cmp
xor
lods
mov
sbb
inc
cbtw
jmp
mov
pop
inc
sbb
xchg
es
out
fmuls
ja
jb
and
jmp
xchg
lock
nop
lret
push
cwtl
or
movsl
xor
lods
pop
xor
sub
add
and
mov
faddp
data16
aam
or
movsl
sahf
cmpsl
or
popf
xor
jp
inc
adc
outsb
mov
ret
lcall
iret
sub
lock
cmpsb
imul
jmp
jp
push
stos
inc
mov
cwtl
adc
rcl
xor
sahf
and
mov
jp
sbb
js
pusha
add
frstor
inc
or
and
cmpsl
push
pushl
fndisi(8087
ljmp
xorb
push
repnz
inc
mov
dec
mov
shl
sahf
fisttpll
inc
sub
sahf
add
sbb
daa
cs
je
cmp
movsl
xchg
inc
add
das
mov
dec
xor
hlt
lahf
pop
cmpsl
clc
xor
jnp
pop
sub
and
dec
sbb
dec
imul
call
aaa
loop
pop
push
xchg
adc
stos
adc
xchg
cmp
xchg
fidivrs
jnp
loop
mov
mov
movsb
in
xchg
and
rorl
rorl
jp
push
jbe
fimuls
mov
push
subb
inc
lahf
arpl
pushf
push
cld
ja
inc
dec
aam
sahf
ret
mov
push
cmp
push
std
pop
sbb
test
push
fisubrs
subb
mov
xchg
arpl
fidivs
xchg
jne
inc
lea
mov
repnz
ljmp
dec
xchg
mov
lds
jp
xor
es
cs
mulb
and
lahf
out
enter
icebp
cmp
push
mov
pushf
dec
ret
cmc
out
sahf
pop
pop
aad
inc
dec
mov
popa
ss
ljmp
pop
lock
xchg
cmpsb
arpl
xchg
shrb
insb
mov
xchg
pop
ds
sbb
sbbb
dec
jecxz
insb
cli
inc
mov
loope
lret
or
lret
jecxz
addr16
jecxz
aaa
inc
inc
pop
add
push
lods
out
add
inc
mov
jg
inc
jb
lds
inc
pop
int
xchg
in
imul
add
push
loop
and
out
jno
fstpl
jno
movsl
jnp
mov
mov
imul
popf
sahf
scas
mov
mov
sub
add
data16
push
stos
lods
imul
arpl
adc
fistpl
mov
fwait
xor
cltd
jae
aam
mov
mov
xchg
sbb
and
cmp
lods
outsl
or
or
mov
xchg
inc
lods
jae
xor
mov
out
xor
lea
or
pop
pop
movsb
mov
ja
fldenv
push
sbb
xchg
int
popa
fwait
push
xchg
lods
popf
sti
cmp
pushf
add
push
cmpsl
je
push
or
leave
pop
mov
outsb
aad
es
push
notb
insl
aaa
cli
mov
push
out
mov
shrb
sub
jne
pushf
jl
lods
pop
pop
add
js
scas
les
ret
cmp
sbb
pushf
repnz
aam
dec
xor
mov
cli
jg
aad
cmp
and
repnz
adc
or
sbb
add
push
dec
push
pop
rorl
mov
test
add
outsb
or
mov
adc
jae
mov
shrl
mov
xor
pop
dec
in
fists
jnp
jb
std
and
cltd
int
xchg
loope
and
jno
cwtl
in
jae
mov
sbb
xor
mov
je
mov
addr16
je
mov
xor
mov
cmp
jae
mov
cld
or
cmc
cmp
popf
test
ret
dec
xchg
scas
mov
data16
rolb
outsb
pop
mov
mov
mov
mov
movsb
mov
pop
dec
shrb
jl
mov
lds
subl
sbb
jg
popw
es
cwtl
into
sub
jnp
sub
mov
scas
hlt
jb
inc
pop
inc
xchg
xor
lcall
sbb
fcoml
and
mov
sbb
shlb
stos
xor
xor
jnp
jg
mov
mov
mov
cli
pushf
xor
imul
or
mov
aam
gs
out
insb
xor
jecxz
push
shlb
pop
inc
jecxz
mov
xor
das
sbb
in
sbb
aad
xchg
negl
mov
pop
mov
sub
mov
jl
loope
jg
add
lcall
xchg
imull
adc
push
sub
sbb
cltd
add
pushf
sbb
sbb
mov
shlb
enter
mov
daa
loope
dec
je,pt
mov
jmp
addr16
jp
dec
inc
inc
clc
data16
dec
push
cmp
cwtl
ret
or
hlt
cmp
fdivrl
in
pop
lret
jle
nop
cmp
pop
ds
ret
jno
pushf
imul
addr16
cmp
test
mov
mov
and
push
xorb
xchg
movsl
cmp
mov
push
and
sbb
mov
or
cmp
and
popa
fstp
inc
pop
xchg
xor
and
mov
icebp
enter
into
pushf
lret
adc
subb
sub
fwait
hlt
add
mov
and
pop
sbb
stos
je
popf
jne
fadds
fmull
sub
mov
fdivs
adc
mov
lcall
mov
addl
and
addb
jo
fildl
mov
or
and
sub
daa
scas
and
ja
in
into
out
sbb
cmp
mov
mov
loopne
xor
js
mov
stos
mov
cwtl
clc
nop
xor
jns
jp
xor
sti
pop
ja
rcl
ljmp
ljmp
xor
mov
fnsave
out
xchg
dec
insb
ret
enter
add
jne
mov
popf
mov
push
pusha
inc
mov
mov
pop
cmp
inc
adc
fidivrl
sbb
pop
and
sbb
ja
cwtl
xchg
xor
mov
xchg
les
arpl
mov
jb
ret
je
inc
lret
xlat
and
jbe
mov
sbb
aas
aas
xor
adc
imul
sub
enter
dec
pop
enter
ljmp
push
cmp
aam
mov
sti
cwtl
scas
push
adc
or
out
icebp
iret
out
adc
pusha
jno
fldcw
lret
sarb
ss
cmp
push
into
sbb
int
in
cltd
mov
sub
ficompl
sbb
mov
stos
mov
push
jbe
jno
jecxz
pop
cmp
mov
inc
and
xchg
dec
test
push
jg
neg
mov
jl
out
nop
lret
push
dec
cltd
adcb
mov
mov
std
out
inc
lods
dec
ljmp
xchg
andb
xchg
cmp
test
xchg
test
into
cwtl
ret
int3
je
jle
popf
ret
lods
xchg
dec
sub
xchg
in
adc
adc
imul
mov
ds
out
test
scas
cltd
cld
mov
sbb
mov
in
sub
data16
push
insl
push
imul
and
pop
rcrl
ja
rcrl
xchg
shlb
jmp
mov
pushf
mov
popf
mov
add
cmp
xchg
xchg
dec
xor
popa
sbb
xchg
loope
ret
jle
hlt
sub
sub
loopne
mov
mov
and
fs
add
and
pop
cmc
cmp
and
shrb
lods
cld
aaa
xchg
cmp
fcmovnbe
adc
popa
mov
out
loope
popf
jecxz
ret
popa
jnp
orl
and
push
cmpb
stos
lods
popa
cltd
fwait
test
pop
andb
insb
jmp
xchg
adc
gs
mov
scas
mov
cmovl
mov
push
mov
inc
pop
fldenv
cltd
rcrl
in
cmc
mov
mov
adc
mov
arpl
push
data16
adc
add
imul
push
cmp
jl
imul
sbb
jns
fcomi
xchg
lahf
inc
mov
stos
add
adc
into
in
out
push
movsl
jnp
out
sbb
mov
fidivrl
xchg
adc
inc
add
out
int3
xchg
sub
gs
mov
push
push
mov
popf
or
insl
push
pop
insl
pusha
mov
sbb
jle
lods
pop
stos
pop
in
mov
cli
cwtl
inc
cld
fisttps
pop
imul
mov
daa
xchg
cwtl
sbbb
shlb
jno
mov
movsb
push
push
xchg
mov
jnp
xchg
pop
in
ja
jne
add
adc
mov
jne
ficomps
adc
jg
inc
fwait
xchg
pop
jmp
mov
cmp
inc
push
xchg
dec
ret
insl
dec
lret
jnp
or
scas
inc
xor
outsb
mov
ja
fld
xchg
icebp
enter
mov
mov
fsubs
icebp
cmpb
jae
les
hlt
mov
ja
fs
xchg
pop
and
data16
xor
fsubrs
xchg
repnz
sbb
pop
adc
sahf
mov
mov
filds
mov
cld
mov
mov
stc
sub
in
lock
or
adc
cli
cltd
xor
movsl
adc
inc
xor
outsb
inc
or
ret
into
push
lods
lret
aaa
ja
fs
insb
test
addr16
imul
loope
lods
cs
jnp
jg
sub
cmp
inc
roll
and
lods
inc
pop
adc
in
cli
xchg
mov
dec
bound
loop
pushf
addr16
push
and
xchg
adcl
movsb
sbb
fists
notb
pushf
mov
in
int
stos
jge
and
or
inc
mov
push
dec
popf
jne
enter
addb
jle
pop
jg
mov
xor
lds
sar
pop
push
mov
test
sbb
jae
aam
jg
mov
mov
lahf
xor
outsb
sbb
lea
mov
popa
pop
test
mov
push
aaa
inc
add
mov
xchg
movsl
in
xchg
imul
xchg
jle
and
cmp
mov
out
leave
cltd
adc
imul
cs
xchg
xlat
sbb
fsubr
lods
xchg
mov
js
jmp
fbld
out
xchg
cmp
pop
out
jmp
repnz
icebp
push
fcomi
ja
aad
aas
push
xorl
sbb
imul
fstpt
dec
inc
loop
fnstsw
dec
movsl
jne
outsl
cmp
dec
jl
sub
dec
sbb
cmpsb
mov
push
lahf
aas
data16
mov
cwtl
in
push
fwait
movsl
mov
sub
iret
dec
sarb
or
sub
out
mov
xlat
mov
jle
lahf
mov
and
test
mov
and
mov
inc
insb
ja
call
popa
cwtl
or
aad
mov
mov
pop
mov
sub
shrl
lea
push
add
lds
inc
xchg
jns
cmp
jge
test
jae
ret
cmc
push
ror
insl
cltd
and
xchg
dec
imul
inc
sbb
push
add
loop
sbb
mov
cs
leave
int3
repnz
cli
sub
xchg
outsb
inc
sbb
cmp
jle
adc
jae
lahf
cmp
out
xlat
pop
xchg
gs
jb
jle
dec
xorb
test
dec
cmp
loop
addr16
sbb
jbe
jg
popf
cmp
insb
jae
jae
into
insl
fcoml
xchg
add
sbb
jg
jbe
jmp
test
mov
xor
cwtl
add
xchg
out
test
mov
push
xchg
jmp
shll
mov
imul
dec
insl
fs
xchg
in
aas
repz
popa
pop
in
push
mov
adc
mov
int3
xchg
aas
mov
out
jnp
push
icebp
xchg
cmp
shlb
data16
fisttps
mov
or
movsl
push
inc
dec
cmp
sbb
and
adc
js
sub
adc
sbb
add
stos
cmc
js
rorb
push
xchg
daa
xor
test
lods
ss
mov
dec
mov
sub
pop
and
shlb
out
int3
out
lea
mov
fmul
cmpsb
data16
test
pop
pop
fbstp
or
pop
pop
mov
dec
daa
popf
imul
into
fidivrs
jp
sbb
sub
in
xlat
push
sahf
bound
inc
into
xor
sahf
clc
lea
inc
jno
xchg
xor
jb
cmp
imul
inc
mov
rcrb
popf
std
jecxz
jbe
cld
inc
rolb
jne
xor
mov
mov
mov
jmp
sub
in
notl
dec
js
push
lret
stos
xchg
cli
cmp
mov
loop
mov
push
sbb
lods
push
lcall
test
push
test
aam
mov
int3
jmp
adc
lds
jne
sbb
jle
pop
ljmp
jecxz
les
lahf
xchg
inc
jae
push
stos
or
push
aaa
pop
idivb
pop
int3
mov
repz
dec
xor
jbe
xchg
mov
fwait
pop
shrl
std
flds
movsb
fwait
sub
push
mov
shl
pop
pop
xor
jo
fst
insl
adc
addl
les
fstl
push
pop
cmp
ret
scas
jmp
pop
in
cmp
loope
testl
pop
dec
test
dec
call
fsubs
das
and
int
je
fldl
jae
popf
test
sbb
repnz
adcl
mov
xlat
xlat
cmp
mov
arpl
stos
repnz
pop
inc
fs
or
push
xchg
loope
push
insb
xor
or
xchg
cwtl
hlt
pcmpeqw
pcmpgtb
mov
std
mov
xor
lcall
mov
mov
jns
cmpsl
mov
mov
mov
addb
cltd
add
xchg
fsubrs
mov
arpl
inc
subb
jb
and
jbe
jp
jae
js
cmpsl
pop
shrb
and
pop
mov
dec
push
rolb
mov
inc
jnp
addb
and
fildll
enter
pop
and
fisttps
mov
mov
mov
hlt
pop
or
nop
sub
pusha
pushf
jp
mov
lret
popa
xchg
negb
inc
cli
rcrl
testb
popw
add
sbb
xchg
jnp
pop
pop
xchg
fldenv
inc
mov
test
dec
pop
arpl
pop
and
fisubrl
fcompl
sub
mov
aas
add
mov
mov
repz
mov
xchg
cli
sub
aad
jle
inc
inc
notl
out
jne
jge
imul
lods
stos
pop
push
iret
popf
pop
dec
xchg
mov
inc
jae
xchg
gs
xchg
arpl
pushf
inc
dec
xchg
daa
sbb
sbbl
push
xchg
jae
popf
push
popf
in
jmp
nop
sbb
outsb
jo
add
jl
jnp
mov
es
cmpsb
mov
sbb
js
into
pop
bound
xchg
push
sub
scas
dec
icebp
xor
gs
or
mov
icebp
pop
lea
xlat
xor
ror
jae
and
jle
popf
test
add
pop
push
out
mov
mov
sbb
and
inc
fimuls
into
sbb
enter
and
test
push
loop
adc
fs
or
jne
jb
test
iret
or
or
outsl
icebp
movsb
in
xor
movsb
push
addb
inc
dec
xchg
adc
jecxz
sbb
pop
out
jno
inc
mov
xchg
fwait
adc
jae
pop
insb
sti
cmp
pusha
loop
add
in
inc
imul
insb
xor
test
xor
fnstcw
cwtl
inc
cs
xchg
push
loope
mov
or
mov
in
lret
mov
xchg
jl
outsb
bound
xor
adc
cltd
outsl
movaps
and
or
push
xorb
push
adc
daa
insl
mov
lods
rorb
mov
icebp
mov
xchg
sbb
inc
je
notl
aam
mov
jo
push
cmp
paddusb
fdivrl
inc
mov
movsl
adc
or
adc
cmp
pop
insb
daa
je
popa
or
ja
mov
mov
aam
outsb
xchg
adc
xchg
sbb
xor
aam
into
popf
out
ficompl
lea
push
fwait
push
pop
pop
into
lcall
stos
xchg
loope
aas
cmp
aad
pushf
lret
sbb
insb
lds
jb
xchg
add
test
adc
imul
fisubl
mov
sbb
jnp
mov
iret
pop
sub
inc
or
jns
and
ja
adc
loop
test
or
cmpl
enter
push
mov
mov
sub
test
lods
jmp
pop
loope
jae
nop
in
setge
mov
dec
adc
loop
add
out
inc
xchg
fwait
in
aas
push
nop
das
pop
jnp
xchg
out
lcall
push
push
inc
pusha
addr16
sbb
into
cmc
mov
mov
pop
scas
jo
pushf
cs
les
or
jmp
jns
push
popf
out
jge
shrb
mov
push
pop
jl
jle
push
stos
fxch
add
adc
xchg
dec
test
mov
mov
sub
lock
cwtl
bound
mov
sub
dec
hlt
xlat
rclb
mov
dec
outsl
adc
and
clc
mov
jnp
mov
movsb
dec
inc
adc
dec
xchg
mov
je
push
aad
xor
icebp
and
mov
mov
mov
das
push
iret
pushf
inc
xchg
ret
lret
mov
xchg
in
ss
push
ljmp
into
mov
add
pop
cmp
xchg
negb
xchg
loope
loope
rcrl
psraw
mov
imul
mov
jb
bound
pop
push
jns
mov
mov
lcall
push
add
jne
inc
inc
cmp
je
lret
movsb
add
mov
sub
imul
adc
cld
aas
mov
nop
fisttpl
scas
loopne
hlt
loopne
mov
lahf
cmp
xor
push
repnz
or
xchg
mov
fucomp
pop
lods
aad
sahf
mov
frstor
xor
xchg
imul
mov
jcxz
sbb
into
cli
scas
xor
mov
es
lret
push
fmuls
inc
xchg
sar
mov
mov
dec
push
shlb
shll
popa
insb
push
sbb
xchg
sbb
push
or
out
jl
inc
sub
stos
je
ja
cwtl
sbbl
or
rcl
fldcw
sub
das
mov
cmp
xchg
push
pusha
clc
xchg
stos
push
adc
xchg
mov
das
sbb
es
pushf
out
adc
lods
fstpt
idiv
out
cmc
jbe
lds
ljmp
push
in
dec
sub
gs
orb
xchg
pop
cs
jle
fisubl
mov
xlat
mov
jge
cmp
inc
fldenv
sub
insl
out
xorb
jecxz
sbb
dec
push
mov
outsl
outsb
js
sub
imul
jg
js
mov
xchg
popf
mov
mov
xchg
js
js
aas
and
cmp
push
or
cmpsb
mov
add
jno
mov
js
fcomps
out
imulb
sahf
pop
adc
fsubs
and
aaa
mov
mov
movsl
into
fcomp
or
mov
sti
lret
int3
inc
pop
sub
mov
sti
jno
xor
mov
loope
out
arpl
ret
sub
cmpl
xlat
movsb
int
in
jle
mov
add
sbb
dec
out
iret
out
out
and
outsb
mov
loopne
cmc
pop
subb
push
div
jp
sub
xchg
loopne
push
jmp
sbb
test
ja
cmp
adc
mov
mov
hlt
cmp
leave
pop
gs
mov
icebp
sub
xchg
fwait
repnz
cltd
mov
cmpsl
dec
sub
cmpsb
pusha
call
cmp
out
push
dec
ja
cmp
add
adc
cmp
sub
dec
dec
nop
jmp
jmp
sbb
negb
mov
sbb
xchg
ret
add
fidivs
cmp
fdivl
xchg
popa
push
jbe
insl
pop
popl
push
into
test
sub
push
xor
push
add
das
sbb
xchg
or
insb
clc
adc
stc
jg
aas
outsb
sbb
test
sbb
inc
in
cmp
inc
fisttps
pop
xchg
xchg
lret
xchg
cmp
test
and
dec
mov
into
shlb
leave
cmpsl
test
jecxz
adc
mov
push
push
mov
out
jno
fcomps
ret
ja
movsl
mov
mov
ljmp
scas
ret
fdivl
lds
lock
out
inc
xchg
jle
out
sbb
xchg
lret
aas
push
stos
push
xor
gs
and
ds
inc
fadds
xchg
js
sbb
mov
jnp
mov
scas
cmp
loope
sub
test
sbb
stc
test
shlb
mov
pop
xchg
xor
add
jne
push
int
test
repnz
and
setnp
jns
sbb
insl
in
dec
xor
lret
mov
mov
rcrb
adcl
xor
out
pushf
dec
test
ss
fwait
mov
jp
xchg
jae
xchg
pop
sbb
fistps
jmp
loop
xor
xor
jl
xchg
mov
out
sbb
sbb
sbb
xor
xchg
sbb
xchg
push
xor
inc
xorl
mov
ss
lds
mov
cmc
pop
js
pop
pshufw
aas
repz
outsb
pop
push
sub
es
pop
mov
ss
mov
les
stos
sbb
jo
jle
inc
jmp
movsl
mov
test
pop
ss
jle
jge
inc
push
mov
jae
inc
test
pop
mov
jp
lret
jnp
insl
lcall
jp
repnz
ljmp
mov
adc
roll
pop
aad
inc
sbb
notb
adc
je
push
stc
mov
or
movsl
xchg
xor
dec
subl
cmp
sbb
cmpsl
cmpsl
lds
test
mov
sbb
sbb
sbb
lcall
jecxz
popf
lock
mov
sub
stos
push
leave
sbb
mov
inc
jmp
pop
cwtl
xor
cmp
jg
xchg
xor
cmp
rcrl
ds
ret
in
cmp
sahf
stos
push
stos
scas
scas
and
cmpsb
scas
leave
xor
push
pushf
pop
pop
pop
add
pop
hlt
or
bound
push
sub
sub
pop
test
mov
xchg
push
test
cld
jecxz
adcl
movsl
mov
jl
stos
ds
mov
out
and
bnd
dec
ret
ljmp
loop
in
scas
jmp
jnp
push
push
call
push
test
xor
popa
xor
pop
fcomp
daa
orl
outsl
bound
pop
aaa
pop
mov
test
mov
pop
stc
pop
sti
lret
insb
cmp
pop
sbb
in
es
jl
xor
in
sbb
sbb
lods
xor
xor
stc
in
imul
test
jb
sahf
ja
inc
subb
imull
int
xor
arpl
ds
fstpt
sub
addr16
lret
wrmsr
shl
stc
sahf
sub
or
ror
mov
dec
jmp
adc
jb
iret
sarl
pop
shlb
jecxz
sbb
add
test
js
dec
inc
insb
add
pop
xchg
sbb
mov
inc
mov
cmp
jp
jo
test
mov
leave
cmp
test
addr16
into
pop
mov
jge
aaa
sbb
sub
jecxz
lret
addb
cmp
out
stos
push
jmp
jno
dec
rclb
lds
in
pop
fldcw
lods
cmpsb
mov
arpl
cmp
mov
push
jns
sbb
jle
xor
or
sarl
test
test
inc
jae
cmp
imul
out
lods
add
fildll
push
and
loope
cmp
popa
in
inc
pushaw
jno
pop
cmp
aaa
test
or
dec
push
xor
pop
xor
pop
add
mov
shl
pop
imul
imul
adc
in
incb
shll
sbb
in
imul
xor
sub
cwtl
inc
sub
xor
push
mov
daa
fadds
sbb
in
pop
jno
mov
dec
arpl
bound
sub
or
jp
arpl
and
int3
es
pop
jbe
int
pop
pop
shlb
add
sub
cmp
xchg
cmp
pusha
mov
mov
popa
pop
dec
dec
outsl
push
pop
imulb
lahf
jno
and
das
imul
cli
insb
adc
hlt
pop
or
notl
cmp
push
scas
pop
icebp
push
lods
push
cwtl
or
cmp
push
push
sub
hlt
cltd
arpl
fisttpl
push
jg
mov
lahf
push
inc
pop
sub
xchg
and
add
enter
xor
pop
push
jne
adc
add
and
icebp
sbb
or
orl
inc
pop
push
sbb
jp
movswl
jmp
scas
add
les
pop
mov
loope
repz
pop
mov
testl
xchg
adc
fldt
test
shlb
adc
ss
jb
dec
fs
dec
pop
cmpsl
jnp
xchg
dec
pop
push
ja
push
mov
int3
mov
push
or
mov
mov
cmp
and
sub
mov
xor
jp
ficompl
cmp
fisubrl
pop
scas
loope
leave
shrl
add
stos
outsl
jbe
lods
cs
jnp
in
aaa
subl
jmp
pop
mov
test
sub
bound
sbb
or
pushf
in
cmpb
jnp
cwtl
jcxz
mov
orw
or
cwtl
fcomp
push
adc
dec
mov
push
mov
or
aas
pop
push
xor
out
repz
movsb
sahf
jp
mov
ret
pop
mov
cs
sbb
outsl
scas
sarb
xor
roll
fmul
mov
cmp
sbb
pop
pop
les
lcall
fs
ja
inc
leave
or
push
and
lea
dec
push
sub
push
adc
loope
xor
push
test
jae
and
bound
push
gs
inc
scas
movsb
shlb
cmp
cmp
jne
push
jle
lea
jp
xchg
jle
jno
pop
cltd
or
mov
inc
pop
jae
mov
mov
into
cmpb
push
stos
push
sbb
inc
rorb
mov
in
pushl
push
fs
jo
sbb
arpl
cs
mov
fistps
es
insl
dec
push
sbb
inc
in
inc
loope
push
inc
adc
xor
sub
jb
cmp
jl
sub
fdivrl
pusha
jb
repz
fmuls
sub
pop
xchg
mov
outsl
jnp
jns
pop
sarb
adc
popa
sbb
ljmp
xor
pop
sbb
and
sub
adc
stos
jno
pop
sub
int
mov
pop
mov
cmp
cmpb
or
xchg
sbb
sbb
mov
adc
incl
lods
pop
fldl
xor
xor
dec
add
mov
inc
or
fisttpll
pop
add
sbb
and
and
jbe
cmp
push
jne
ret
push
sarl
mov
clc
jge
dec
jmp
push
pop
xchg
and
rorl
rolb
repz
mov
pop
mov
sbb
xchg
imul
bound
loope
pop
loop
imul
xorl
mov
pop
in
jge
repz
cs
sbb
fs
pop
dec
and
pop
mov
jle
sub
scas
sbb
mov
or
insl
push
fbstp
in
cli
push
int3
adc
sub
inc
inc
lods
test
ret
xchg
mov
ret
jp
push
cmpl
or
mov
inc
divl
shl
mov
loope
shl
flds
imul
mov
imul
nop
js
divb
adc
push
mov
int3
cs
xor
add
pop
mov
mov
jle
imul
mov
test
lods
xorb
xchg
or
js
add
int3
adc
dec
faddl
std
xchg
imul
fdivrl
fdivrp
or
sbb
cwtl
cmp
mov
notb
out
dec
rorb
jnp
adc
add
pop
movq
fstps
das
dec
mov
sti
push
scas
sbb
js
cmc
push
fs
dec
or
adc
jge
out
jmp
mov
add
mov
push
sbb
ljmp
in
lahf
push
mov
and
adc
sar
or
lea
push
dec
mov
cltd
and
xchg
dec
sbb
dec
sarl
shll
pop
call
push
popf
in
in
dec
add
shlb
mov
xor
or
cwtl
cmp
sbb
mov
adc
in
jmp
inc
push
shlb
pop
rcrl
sbb
pop
in
cltd
jo
mov
add
mov
out
inc
add
jbe
out
push
gs
push
lds
mov
adc
scas
inc
mov
adc
jnp
sub
shll
je
jecxz
xor
bound
jno
xor
jno,pn
bound
pop
mov
incb
sbbl
add
insl
lret
imul
addr16
xor
dec
popa
dec
sti
jecxz
sbb
dec
mov
sti
out
mov
movsb
fstpt
xchg
add
mov
sbb
inc
adc
repz
ljmp
lods
in
inc
pop
les
daa
aad
mov
call
adc
in
mov
push
lret
dec
leave
jb
arpl
repnz
push
addr16
arpl
lds
sti
clc
dec
mov
dec
jne
in
inc
pop
les
daa
into
lret
test
jge
cmp
int
pop
in
or
je
xor
xor
push
mov
add
xchg
std
in
adc
std
xor
xor
cs
xor
and
xor
mov
aad
push
jge
popa
outsl
and
inc
leave
jge
popa
mov
in
negl
mov
jecxz
mull
imul
sub
rorb
mov
movb
popf
add
je
and
lea
jg
hlt
neg
lea
push
cmp
imul
jmp
imul
xchg
std
out
imul
jge
std
int3
test
jge
pop
call
data16
ret
pushf
neg
lea
fwait
cmp
imul
xchg
pop
ja
std
pusha
cmp
cmp
loop
add
mull
loope
mov
adc
imul
cwtl
and
pop
add
ret
icebp
shl
mov
cmp
or
adc
push
xlat
and
jno
nop
xor
fldt
mov
cli
addr16
and
push
stc
imul
xor
js
lods
out
je
pusha
shrb
jno
cmp
int
lahf
ss
push
or
or
int3
sti
int
push
outsb
xor
scas
adc
mov
adc
mov
arpl
adc
pop
mov
sti
scas
int
mov
mov
test
mov
aad
mov
daa
mov
adc
xorb
mov
call
cmp
sub
leave
test
je
loope
pushf
dec
dec
jmp
ljmp
pusha
add
jb
std
call
xchg
pushf
add
push
fldl
lcall
in
push
imul
pop
adcb
gs
push
dec
and
nop
sbb
decb
test
add
jne
mov
sarl
es
cmp
call
lret
mov
repnz
push
fistl
out
popa
stos
loopne
in
xchg
arpl
adc
test
add
je
movsb
xor
push
lock
dec
in
arpl
test
sbb
add
or
sub
dec
push
pop
xchg
lock
mov
inc
rorl
and
jo
repnz
stc
adc
data16
jnp
lods
pop
fnsave
jne
repz
jle
jecxz
cmpsb
pushf
shl
push
cltd
mov
xor
sbb
add
or
adc
test
or
and
push
xchg
lock
mov
mov
and
test
jg
dec
jo
jnp
stos
pop
fstl
jne
repz
in
popl
mov
js
push
xchg
lock
stc
adc
in
xor
mov
stos
in
iret
inc
push
push
xchg
call
fldl
pop
test
xchg
fcomp
icebp
push
nop
fdivl
cmc
mov
cmp
das
mov
lods
inc
xchg
bound
and
cmp
inc
mov
push
jmp
cmp
jl
xchg
cmp
rorl
and
dec
mov
mov
fisttps
in
cld
add
and
sub
and
push
hlt
pop
out
setno
test
cmp
nop
scas
adc
inc
xchg
pop
or
cmp
xor
mov
mov
leave
je
add
mov
jb
add
pop
pop
loopne
add
adc
js
sahf
mov
loope
repnz
ljmp
xor
and
xor
in
sub
stos
and
out
adc
cmpsl
xor
push
es
sub
ds
cs
mov
sub
ljmp
jne
addb
mov
mov
insb
cmp
mov
imul
jge
int3
sbb
cmp
std
aad
in
cwtl
push
fstl
mov
data16
out
es
jns
lock
adc
xor
jge
icebp
adc
xor
jne
in
out
aaa
jge
pop
adc
imul
jmp
jge
aad
das
xchg
add
xchg
pusha
mov
add
mov
adc
jns
jg
jno
bound
dec
xor
inc
bound
out
dec
push
xor
fdiv
add
inc
jb
jmp
cmpsl
cli
jecxz
push
out
stos
sub
cmp
pop
iret
in
or
es
pop
and
aaa
cmp
xor
inc
jne
ret
repz
xor
iret
mov
jp
repnz
mov
out
in
scas
adc
into
mov
mov
popa
pop
testl
and
push
decl
jne
mov
cs
pushf
or
fdivrs
cmp
sbb
add
dec
sbb
mov
adc
orb
xchg
push
jge
ss
in
push
add
test
jg
cmp
out
arpl
mov
cmp
and
mov
mov
leave
cmp
mov
mov
pop
fucom
inc
adc
lock
sbb
xorb
loopne
loop
scas
lcall
add
push
popa
xor
or
dec
mov
mov
push
mov
or
dec
pop
mov
insl
popf
movsb
sbb
subl
mov
sahf
filds
insb
jo
bound
ss
je
out
cltd
mov
mov
icebp
dec
inc
cmpsb
sbb
stc
negb
xchg
mov
test
repnz
es
test
aas
mov
fstl
fwait
notb
std
fwait
inc
mov
mov
shrl
out
out
push
jl
mov
out
mov
insl
nop
or
pop
xchg
negb
stos
or
call
xchg
aaa
inc
fcoms
or
les
mov
sbbb
xchg
jo
lods
dec
xchg
xchg
or
xor
xchg
xchg
xor
add
cmp
fsubl
fdivl
and
mov
push
xor
jmp
mov
mov
cs
mov
inc
mov
pop
lahf
jle
pop
arpl
mov
add
mov
pop
iret
jmp
fucomi
insl
fadds
in
mov
hlt
pop
out
adc
dec
orb
repnz
mov
cs
pop
and
xor
jle
jno
mov
add
sbb
mov
sbb
pop
sti
xchg
int3
fmull
pop
stos
inc
test
rolb
xchg
mov
scas
test
xor
adc
jne
aam
lcall
hlt
das
mov
push
or
sub
notl
test
push
clc
je
adc
xchg
rolb
test
addl
sahf
in
mov
inc
int3
fcomps
int3
mov
ret
mov
mov
pop
push
outsb
jle
push
testb
jecxz
hlt
lcall
pop
sub
std
pop
data16
jne
lock
es
mov
out
fnsave
cld
jno
fcmovu
repnz
jmp
nop
xor
pop
mov
cmp
push
leave
lods
mov
jne
sub
icebp
fsubrs
jb
aam
jo
dec
in
mov
dec
cmpsb
popf
sti
push
mov
das
jmp
jbe
call
in
push
adc
mov
xor
or
jp
dec
pop
ficoms
push
pop
jp
call
out
lcall
call
push
mov
int
add
hlt
pop
jns
mov
cmpsl
shlb
sbb
mov
jae
inc
mov
arpl
ds
cli
hlt
mov
bound
push
pop
inc
xchg
repnz
and
icebp
sbb
xor
je
xchg
popa
jge
test
mov
dec
cmc
shl
sbb
jle
es
loopne
scas
ja
cli
push
cld
lock
and
shll
popa
loopne
and
ss
ljmp
pop
loopne
ljmp
jmp
cmp
enter
mov
call
out
or
mov
shlb
pop
int
cwtl
add
jae
xchg
sub
daa
adc
sbb
lea
push
adc
inc
and
add
push
jecxz
ds
loop
jmp
mov
jo
lea
pop
mov
inc
jmp
push
mov
test
add
jno
adc
adc
dec
cltd
outsb
fwait
insb
addr16
daa
std
pop
adc
or
or
test
cmpsb
lcall
and
movsb
mov
loope
sub
sbb
test
cli
mov
push
fdivs
popf
xor
call
mov
cs
shlb
icebp
push
adc
jns
sbb
push
and
loopne
sbb
in
shl
sbb
and
mov
fisubs
push
inc
xchg
push
push
shll
aam
movsl
les
mov
inc
movsl
dec
data16
dec
fnstcw
inc
arpl
push
dec
les
dec
dec
mov
xchg
iret
loopne
push
fistpl
mov
fcoml
imul
scas
lods
imul
xor
cmp
mov
in
loope
or
into
jns
in
cmp
fs
das
cs
ror
rcr
ljmp
adc
lea
xor
mov
call
dec
clc
sti
sbb
or
outsb
fstps
fsubrl
or
bound
mov
mov
mov
fcompl
subb
outsb
loope,pn
and
or
fidivrl
ds
js
aas
sbb
xchg
hlt
das
rorb
jmp
repnz
push
sub
out
in
push
cmp
push
sub
dec
push
filds
push
mov
jne
mov
jo
jge
cld
mov
into
push
xor
pop
jno
clc
xlat
mov
adc
jmp
lahf
xchg
fcoms
mov
lds
in
cltd
test
pop
inc
jo
outsb
test
fcompl
xchg
pop
addb
loopne
ljmp
lds
mul
dec
jnp
adc
xor
add
inc
xchg
icebp
sub
cmp
and
je
inc
add
in
jle
nop
test
pop
cli
dec
mov
jae
sarb
pushf
dec
adc
add
insb
jge
enter
es
xor
popl
jge
mov
je
xchg
push
push
adc
xor
jmp
lds
mov
sub
mov
fdivl
scas
and
mov
movsl
sub
add
ja
or
push
push
adc
adc
add
sbb
inc
mov
pop
lds
cmp
int3
jne
fs
mov
mov
xchg
jnp
in
lret
aam
pusha
mov
or
cltd
insb
or
add
mov
push
daa
xchg
jne
mov
pushf
xchg
pop
jp
push
cmp
mov
cmp
std
ds
sub
je
pushf
inc
fs
std
enter
add
xor
pop
stc
add
mov
aas
std
fs
dec
je
dec
lock
into
mov
adc
sar
push
xchg
push
add
outsl
andb
sbb
in
mov
lock
xchg
cmpsl
jne
mov
test
mov
clc
mov
lcall
addr16
or
dec
and
mov
push
mov
sbb
outsb
mov
push
clc
dec
lds
mov
test
add
cmpsb
push
lods
outsl
pop
xchg
mov
repnz
shlb
inc
jae
imul
and
adcb
sbb
adc
push
inc
fmuls
popf
mov
mov
push
and
xchg
and
ret
mov
add
mov
or
shlb
stc
push
repnz
testl
mov
ret
inc
add
cmp
insb
hlt
outsl
repnz
loopne
and
jle
imul
test
dec
rcll
push
xchg
ss
jnp
xor
shlb
stos
jg
xchg
pop
push
mov
push
or
xchg
cmpsl
test
pop
mov
pusha
sub
push
iret
lock
dec
rcl
mov
sti
and
add
pop
mov
sahf
xor
mov
int
adc
shlb
hlt
adc
cmp
jl
push
xlat
das
gs
pop
mov
cmp
or
push
pop
add
fisubrs
stos
xor
mov
inc
sbb
call
sbb
xchg
xor
adc
int3
add
pop
adc
popf
push
dec
lcall
or
popa
jg
dec
jp
imul
jbe
sub
lods
aam
fstps
jg
jb
decb
addr16
jo
jnp
push
and
mov
dec
jbe
jg
jae
xor
push
and
ror
imul
loop
testl
ljmp
out
jne
jb
lds
std
adc
test
pop
and
dec
movd
fildll
pop
mov
mov
out
add
mov
lds
xor
inc
inc
loopne
push
mov
add
js
jmp
jl
and
imul
xchg
jo
loope
js
inc
and
mov
lahf
inc
and
and
inc
lea
xchg
or
pop
push
loope
inc
jae
aas
fxch
out
adc
xchg
testl
ljmp
jo
xchg
dec
dec
imulb
sub
sub
ret
jns
xchg
mov
and
mov
jmp
loop
jmp
add
ljmp
and
xchg
dec
or
jge
daa
cmpb
or
sti
mov
xchg
dec
fs
xor
ds
fdivl
clc
pop
cmp
xor
out
cltd
pop
test
xor
loope
and
mov
pop
jo
push
mov
push
mov
dec
stos
add
inc
push
aam
and
adc
adc
and
xor
xchg
pop
outsb
movsb
xchg
xlat
and
add
jecxz
lds
loope
mov
into
in
inc
mov
push
shlb
mov
fidivrs
sub
inc
dec
cltd
rcr
clc
pop
and
adc
xchg
lods
xor
mov
loope
add
sub
lahf
mov
arpl
sbb
fs
sub
cmp
jl
xor
shrb
out
add
repz
mov
cmc
les
out
jmp
fs
inc
xor
cmpsb
rcl
lock
jns
fimull
and
jns
aas
fcmovne
mov
fisubl
movsl
es
enter
jl
push
mov
fcmovnb
mov
addb
mov
adc
jb
xor
adc
add
repz
or
outsl
fistpll
mov
mov
push
cmpl
inc
push
in
push
xor
les
push
sbb
sti
mov
dec
insb
int
jl
and
and
in
mov
cmp
push
pushf
test
stc
mov
mov
adc
add
sbb
pop
test
sub
lds
fs
mov
les
iret
das
mov
mov
fs
sbb
pop
sbb
pop
in
jno
dec
or
or
je
fs
pop
mov
mov
test
inc
cmp
push
inc
jne
mov
mov
push
xchg
and
clc
aaa
pop
push
mov
xor
jnp
and
and
fwait
sub
arpl
cmp
scas
rcll
imul
inc
movsl
cwtl
test
rclb
out
or
inc
mov
xor
jb
imul
bound
push
test
cmp
push
es
sbb
repnz
popf
sbb
mov
das
lock
xor
sahf
adc
dec
and
push
repz
and
jnp
aad
xchg
pop
into
cmp
pop
xor
lds
jmp
push
jne
cli
clc
xchg
jb
pop
int3
jle
imul
in
pushf
aas
xchg
mov
popf
pop
add
je
sub
insb
inc
or
ret
scas
adc
insl
mov
mov
das
dec
lods
pop
xchg
mov
mov
jl
das
mov
dec
shrl
enter
js
mov
notb
pusha
or
sahf
adc
dec
int3
fwait
mov
mov
push
or
push
lods
sbb
adc
or
test
cmp
jne
sbb
xchg
add
cmpl
mov
pop
pop
jecxz
cmp
les
loopne
push
mov
sub
loope
mov
pushf
push
lds
or
sub
mov
xor
jp
iret
iret
sbb
cmpsb
inc
and
sub
inc
std
inc
push
jge
ss
add
sbb
push
insb
andb
sub
dec
shrl
cmpsl
xchg
subl
int
jmp
and
cmp
add
mov
movb
pop
inc
idivb
gs
ret
sbb
inc
jle
dec
adc
inc
pop
stos
and
je
lods
rclb
fimuls
test
mov
std
dec
cld
pushf
and
sarl
pop
xchg
push
mov
dec
push
inc
xchg
mov
movsb
push
xchg
mulb
and
adcl
jge
jecxz,pt
mov
jne
outsl
xchg
stc
mov
or
add
shlb
dec
fcoml
daa
out
mov
fcoml
stos
pop
sbb
lea
cmp
imul
pop
cwtl
inc
sarl
xchg
fstps
add
movsb
dec
xchg
lock
jb
add
scas
pop
fmul
ret
mov
ret
mov
push
iret
sbb
pop
mov
pop
or
inc
int3
pop
xchg
ss
pop
enter
jo
pushf
mov
hlt
mulb
xor
sbb
push
push
or
dec
enter
sbb
scas
jl
pop
add
or
cwtl
xchg
push
imul
mulb
int3
test
incl
adc
into
dec
pop
inc
out
bnd
inc
jle
pop
or
sbb
push
loope
jbe
popa
cmpsl
stos
cmp
push
ss
pop
inc
add
jle
mov
sbb
clc
dec
scas
jl
popa
lea
mov
daa
hlt
or
hlt
std
into
fsubl
or
es
movsb
out
xchg
push
jl
inc
push
sub
xchg
pop
int
cmp
jae
adc
dec
push
ljmp
icebp
adc
popa
xorl
cld
xor
jecxz
outsl
test
and
xor
push
adc
adc
in
fmuls
pop
pop
mov
call
xchg
push
pop
in
fisttpl
std
int
sbb
imul
ucomiss
or
fwait
mov
inc
rcrb
mov
shl
pop
std
bound
es
inc
lods
inc
xor
inc
cwtl
xor
incl
pop
mov
ljmp
sub
test
jnp
fdivrs
xor
enter
fisubs
cmp
pop
lds
adc
cmc
loop
sub
mov
pop
loop
add
cmpl
fs
inc
stc
jbe
cmpsl
insl
setp
repz
aad
or
fdivrl
popa
and
sub
fisttpl
sub
mov
repz
push
mov
xor
sub
fcmovne
or
out
ret
movsl
nop
mov
push
int3
cwtl
and
addr16
test
jae
jbe
pop
enter
repnz
dec
fists
aam
mov
sub
and
push
clc
mov
jne
mov
adc
sub
daa
sub
fidivrs
push
add
aad
es
test
aad
inc
ret
test
cmc
int3
sbb
aaa
push
and
add
faddl
sbb
lea
adc
sbb
mov
xchg
dec
fisttpll
add
add
in
push
or
test
jl
lods
add
in
add
daa
les
test
sub
mov
push
sbb
mov
scas
bound
mov
or
mov
cmp
cwtl
or
add
xor
inc
enter
std
out
cmp
pop
mov
es
push
ret
in
loop
scas
movsb
mov
pop
mov
mov
jge
loopne
add
hlt
mov
ljmp
sbb
mov
jae
aam
rorb
sbb
cld
sahf
xlat
mov
js
orb
cmp
add
dec
stos
out
icebp
mov
out
filds
mov
icebp
test
test
insl
pop
test
in
fs
xchg
test
outsb
std
shl
mov
pushf
push
mov
fadds
pop
mov
lcall
xlat
jg
js
push
les
jle
js
xchg
vmwrite
dec
jb
push
and
xchg
adc
test
out
mov
fmuls
sbb
pop
loop
and
xchg
out
sub
and
jo
iret
ljmp
cwtl
inc
out
scas
push
in
mov
xchg
cmp
pop
and
adc
insb
mov
and
pop
sarb
and
xchg
add
mov
loop
aad
push
loope
xchg
int
push
xchg
push
ljmp
cld
icebp
sahf
inc
ss
in
cmp
inc
push
mov
xchg
mov
xchg
adc
jae
mov
les
dec
lods
lock
mov
sarl
sbb
aaa
and
pop
jg,pt
loopne
jmp
xlat
pop
mov
pop
insb
fstl
and
dec
movsb
aas
inc
mov
and
or
sub
js
adc
iret
sbb
or
add
lods
mov
nop
dec
in
sub
call
and
adc
sbb
mov
push
iret
xor
leave
int
adc
dec
aam
fxch
sub
in
mov
test
mov
xor
incl
insb
sbb
outsb
sti
outsl
mov
push
xchg
inc
xchg
pushl
pop
aam
ja
repnz
mov
xchg
cmpl
sub
inc
jmp
mov
add
push
jl
leave
or
pop
hlt
popf
int
push
in
cmp
mov
mov
sub
jecxz
fnstcw
popl
xlat
ds
ds
mov
clc
sub
mov
mov
sub
aaa
movsl
loope
cmp
in
dec
int3
sbb
sub
sahf
imul
sub
lret
mov
leave
or
push
mov
mov
pop
lret
push
outsl
or
dec
mov
test
pop
roll
xchg
ret
in
mov
filds
pop
mov
mov
add
push
sbb
inc
roll
aad
int3
sbb
int
lock
push
xchg
cmp
fistl
stc
ret
add
push
inc
push
mov
sarl
or
mov
jo
outsb
stc
pop
sbb
les
pop
or
or
shlb
inc
out
cs
scas
loopne
mov
sub
enter
loop
adc
xor
scas
sbb
fldt
cmp
movsl
and
stos
shld
jae
dec
add
lcall
cmc
mov
push
rcl
and
movsb
cmp
sbb
and
dec
mov
sub
cld
mov
jne
pop
lahf
aaa
xchg
jl
add
xchg
aas
call
add
loopne
in
fsubl
adcb
loop
leave
mov
dec
push
lds
or
sbb
mov
arpl
mov
mov
js
enter
cmp
mov
and
add
and
in
out
ss
xor
dec
imul
dec
cmp
scas
das
mov
int3
pop
mov
cmpsb
xor
mov
repnz
adc
sub
or
mov
movsb
leave
push
xchg
push
cld
fildll
push
cmp
push
inc
add
inc
mov
dec
jmp
scas
inc
mov
pop
cmp
gs
mov
inc
sbb
mov
in
movsl
inc
test
popl
decb
or
sbb
xor
jle
scas
js
hlt
sub
aaa
push
sub
pop
adc
ficompl
lret
nop
xchg
dec
mov
push
xchg
sarl
dec
xchg
adc
popl
xor
pop
push
shlb
insl
ffreep
xchg
cmp
rolb
shl
mov
xchg
sub
movsb
test
xlat
adc
adc
inc
out
mov
mov
cmc
add
cmpsb
jnp
loopne
cld
nop
mov
cmp
into
sub
pop
lret
adc
pop
push
mov
pop
rorb
sbb
ss
and
pushf
cmp
adc
sub
clc
je
sarb
fdivl
loopne
pop
scas
loopne
fnstsw
pop
cmp
stos
fmuls
xor
xlat
jns
loope
pop
inc
push
cmp
pop
in
fcompl
in
enter
imul
dec
stos
mov
lds
mov
cmpsb
jmp
and
hlt
es
xor
mov
mov
popa
dec
es
rolb
imul
push
enter
aaa
ss
sbb
xchg
test
dec
out
push
dec
and
outsl
add
mov
cli
lods
mov
jb
jbe
and
pushf
cmp
inc
lret
movsl
jo
je
setg
popf
jp
xor
or
sub
test
fdivl
gs
test
incb
ds
data16
cmp
in
adc
xchg
jecxz
jbe
xchg
fs
fldt
aaa
ret
xor
inc
ret
mov
es
pop
and
or
mov
aad
gs
das
xchg
enter
sub
push
nop
sahf
mov
mov
fimull
sbb
mov
adc
inc
call
sub
cli
or
dec
or
mul
scas
clc
pop
sub
jecxz
adc
fucomi
xor
jp
shll
jp
test
and
and
adc
mov
cs
xor
xorl
sub
cwtl
mov
dec
lret
xlat
aaa
aas
jp
dec
xchg
mov
xor
sub
ja
dec
adc
ret
pushf
and
movsl
lods
adc
mov
cmp
sbb
cmp
inc
mov
mov
outsb
pop
int3
jae
push
das
mov
cwtl
xor
cmp
xchg
xor
cmpsb
or
mov
sbb
sbb
pop
imul
inc
push
cltd
or
je
inc
cwtl
test
xor
xor
push
adc
loop
lret
in
jae
out
mov
insl
push
dec
mov
rcll
movsb
add
cmp
xor
shlb
into
ds
pop
add
inc
push
jo
insl
adc
lds
in
movsb
in
push
and
daa
insb
aam
fcoms
add
push
mov
cmp
pushl
dec
das
or
data16
lock
fisttps
xchg
mov
mov
decb
fbld
mov
adc
xor
loop
mov
jmp
leave
push
or
aas
cmp
add
mov
add
int
adc
fstp
fstp
jp
lods
lods
and
jae
inc
rorl
adc
mov
out
mov
pushf
sarb
iret
push
xor
sbb
mov
in
add
xor
loop
lds
frstor
pop
loopne
pop
adc
cwtl
fdivl
jmp
cwtl
inc
outsb
daa
xor
adc
shl
xchg
or
insb
cmc
cs
jecxz,pt
push
add
lods
repnz
loope
lahf
data16
add
add
arpl
lods
leave
repnz
stc
sub
orl
xor
push
push
mov
mov
sbb
dec
lods
pop
xor
xchg
push
jmp
inc
cmp
mov
arpl
jae
iret
repnz
lods
mov
pop
push
mov
fnsave
stos
into
sbb
sbb
inc
in
adc
fnsave
mov
in
pop
dec
inc
lods
in
push
mov
and
inc
test
adc
jb
xchg
push
test
popf
or
ret
int
ljmp
div
add
pushf
lods
incb
ss
sub
shll
add
xchg
sbb
push
add
aas
rclb
loop
lret
sub
inc
sbb
xor
xor
gs
mov
sub
std
cmp
mov
movsl
pop
mov
clc
fnstenv
mov
je
pop
sbb
lret
dec
fs
les
insl
mov
cmovns
ret
xor
xchg
nopl
and
lret
inc
jmp
cmp
adc
mov
in
add
push
ret
xchg
mov
inc
les
xchg
das
jl
test
jne
cmp
cmp
cmc
inc
int
xor
dec
mov
mov
cld
sub
filds
or
cld
adc
sub
sub
jbe
push
mov
pusha
jp
cmp
push
mov
mov
adc
ljmp
mov
mov
in
adc
xor
and
rcrl
sub
mov
mov
jb
push
pusha
sub
test
fcmovnu
add
lods
dec
push
dec
cli
fists
ja
and
push
fistpll
pop
xchg
clc
in
mov
push
mov
int
lcall
rcrb
cmpsb
push
das
adc
sub
rclb
add
daa
xchg
pushf
xchg
and
and
daa
insb
xor
xor
inc
mov
aas
ds
lret
hlt
mov
jecxz
jl
xlat
sub
cmp
sub
add
cmp
not
cwtl
loopne
sub
fists
inc
lret
fs
push
xchg
imul
inc
add
ss
push
add
sub
pop
popa
fcompl
call
sub
leave
shlb
sbb
rcll
jbe
aad
mov
lret
stc
add
lret
out
cltd
sarb
dec
mov
clc
push
nop
mov
test
and
mulb
xchg
pop
jle
out
cmp
cs
inc
inc
or
dec
cs
inc
vhsubps
xlat
and
mov
xchg
and
and
bnd
mov
pop
mov
movsb
mov
xchg
add
pop
mov
sar
push
out
add
ds
mov
and
mov
inc
xchg
notl
mov
enter
sbb
cs
jge
outsl
cmp
mov
mov
out
lahf
pop
and
addb
pop
insb
sbb
lds
push
rep
dec
pop
mov
xchg
adc
jnp
and
lods
pop
les
add
bound
or
adc
mov
pop
pop
adc
mov
inc
mov
sbb
push
repz
enter
jp
pop
or
cmc
xor
stos
inc
sub
mov
lock
div
adc
lock
cs
lret
aad
sbb
js
push
or
jmp
pop
sub
sub
jne
or
pop
fwait
add
and
xchg
test
mov
ret
jge
shrl
pushf
add
push
pop
mov
int3
mov
es
das
mov
fisubl
iret
xchg
mov
imul
or
push
xor
enter
push
test
pop
sub
inc
cs
pop
push
push
push
dec
push
push
addr16
ss
fists
andl
pop
daa
or
data16
adc
pushl
sahf
xchg
mov
inc
xchg
xchg
out
sbb
push
shrb
cmp
xor
pop
inc
into
test
jne
inc
dec
push
and
sbb
lods
cmp
jbe
xor
ss
test
push
out
fwait
xor
xor
dec
xor
mov
cmp
sbb
insl
jb
xchg
dec
pop
and
dec
ljmp
mov
inc
pop
xchg
popa
int
pushf
ss
xchg
fisubrs
push
cmp
mov
in
out
push
adc
inc
icebp
sahf
imul
inc
push
cmpb
adc
cmp
add
jmp
mov
or
push
fidivs
add
test
pop
lahf
inc
ja
imul
movsb
jmp
lea
int
mov
pop
push
and
xor
lcall
inc
cmp
cmp
mov
test
dec
push
inc
and
sub
jne
repz
roll
add
hlt
cmp
jmp
je
ss
inc
das
mov
leave
daa
cmp
leave
std
ret
leave
cld
add
std
mov
pxor
pop
std
out
int
xor
push
ss
mov
nop
mov
inc
ss
adc
xchg
cmpsb
enter
mov
int3
or
aad
mov
arpl
xor
adc
fs
adc
std
xor
cmp
xchg
enter
cmc
and
das
rorb
loop
fcoml
outsb
cmp
push
add
xchg
test
cwtl
test
test
xor
hlt
and
adc
outsb
daa
scas
pop
gs
dec
jnp
adc
add
cs
cs
inc
xchg
in
mov
test
fwait
xchg
xchg
mov
cmpsb
mov
mov
xchg
or
in
inc
nop
mov
pop
sub
aas
pop
push
jnp
sarl
pop
pop
mov
daa
enter
filds
and
inc
lds
xor
subb
dec
push
mov
pop
mov
mov
and
rorb
fldt
js
repz
int
cmp
cli
add
mov
lods
and
inc
sub
lds
mov
push
test
adc
scas
es
test
popa
or
adc
cmpsb
in
in
add
mov
and
cmpsb
mov
mov
lcall
mov
ret
mov
jg
in
xchg
subl
and
andl
fcoms
imul
rcr
sub
aam
pop
mov
push
mov
inc
imul
push
and
pushf
test
aaa
xor
pop
xlat
aas
adc
lahf
mov
inc
pushf
cmp
pop
adc
fnsave
push
ret
add
sub
pop
dec
les
push
in
and
pop
lahf
mov
dec
fsubrl
inc
addl
mov
and
xor
add
dec
pop
not
xor
cltd
stos
movsl
sub
sub
sarl
daa
xlat
in
xchg
xchg
pusha
jae
mov
rcr
rcrl
mov
cld
aas
xchg
fldenv
loop
insl
fisubs
cmp
test
icebp
sub
push
jmp
xor
push
pop
push
nop
mov
movsl
lods
inc
cmpsl
mov
shr
subl
sbb
leave
mov
fcmovne
mov
dec
and
cmp
push
lret
les
cmp
cli
addr16
leave
dec
adc
test
les
stos
cmp
lds
out
ret
cmp
test
inc
mov
sbb
push
jbe
sahf
je
adc
jl
dec
lock
shll
xchg
hlt
loope
xchg
push
mov
mov
dec
aam
stos
inc
mov
xlat
lock
pop
aas
cld
inc
arpl
mov
dec
imul
dec
dec
push
xor
lret
lret
rorl
sub
lock
pushl
lock
flds
aam
mov
xor
ds
push
aas
push
adc
lods
sub
sub
mov
xchg
es
mov
shll
and
and
movsb
fisubl
int3
ljmp
mov
loop
shll
cvttps2pi
sahf
jb
jg
dec
mov
dec
xchg
xchg
cs
adc
inc
push
mov
fists
mov
xchg
sbb
mov
aam
fcom
shlb
cmp
pop
pop
or
inc
out
ds
xchg
into
pop
cmp
dec
stos
data16
pop
movsl
movsb
add
adc
pop
imul
dec
xchg
jo
movsl
mov
pusha
hlt
inc
leave
cmovns
mov
push
dec
mov
inc
mov
andl
in
mov
dec
sbb
popa
or
iret
mov
and
aad
fidivs
jle
cwtl
lcall
or
push
jl
aas
test
push
dec
and
xlat
xlat
mov
int
icebp
lahf
movsl
xor
imul
scas
dec
mov
pop
std
mov
sbb
sbb
and
mov
loop
pop
outsb
sbb
int
xlat
jne
sub
mov
sbb
into
jbe
mov
pop
mov
mov
cltd
lret
sbb
std
xor
divps
data16
stos
in
frstor
push
cmpsl
out
xchg
dec
lock
ljmp
mov
testb
add
inc
cmc
enter
or
aaa
xor
cwtl
add
adc
iret
fadds
jbe
jae
mov
dec
adc
js
or
pop
inc
sbb
in
cli
das
xor
pusha
fcmovnbe
out
xchg
xor
mov
mov
push
dec
and
mov
pusha
loope
pop
xchg
and
adc
leave
and
popa
jmp
push
mov
jnp
pop
shrl
xor
pop
add
not
push
sub
jnp
lock
cmpsb
out
int
in
sub
xor
adc
add
int3
sbb
jecxz
inc
popa
jne
xchg
or
repnz
ds
inc
dec
mov
inc
std
loop
sub
jb
jns
add
nop
cmp
stos
jg
dec
sub
sbb
mov
adc
adc
lahf
mov
mov
mov
jp
insb
les
pop
mov
xchg
arpl
stos
out
test
add
xor
in
bound
out
je
sbb
dec
ror
cmp
push
pop
addr16
insb
sti
cltd
aas
ss
sbb
test
lock
pop
popl
mov
in
div
push
fsubl
test
xchg
or
adc
xchg
lock
and
enter
out
add
ss
adc
pop
inc
push
push
loopne
xor
or
jo
iret
xor
ror
cmpsl
fadd
lcall
cmp
or
cmpsl
cmpsl
xor
ljmp
inc
mov
aas
inc
fs
push
test
inc
shr
dec
jg
pop
xchg
mov
mov
leave
les
test
mov
cwtl
inc
test
fidivs
xchg
fsubr
xchg
sahf
rcr
fiadds
in
out
repnz
mov
sbb
add
in
outsb
int
pop
lods
push
rolb
mov
enter
mov
inc
mov
sbb
jno
inc
nop
fidivrs
and
scas
add
movsb
mov
sbb
lods
in
rolb
in
fdiv
les
sub
jmp
mov
int3
icebp
les
test
mov
sbb
inc
adc
push
mov
addr16
dec
adc
inc
jle,pn
jl
addr16
cmc
sbb
loopne
clc
push
gs
pushf
fs
lods
ds
mov
int3
pop
add
jl
bound
cwtl
shlb
pusha
test
sahf
mov
mov
scas
fdivrs
sub
adc
insb
push
add
jl
add
add
sub
and
mov
sub
out
inc
lock
jmp
and
pop
icebp
xor
dec
and
movb
mov
sbb
adc
enter
mov
enter
jne
sahf
jo
jb
cmp
mov
mov
inc
sbb
push
icebp
sub
inc
xchg
stc
lods
ret
insl
jg
inc
pusha
xor
jne
sahf
adc
push
les
insl
cs
sub
xor
inc
fdivrl
xchg
icebp
in
push
test
or
ds
icebp
xor
inc
ret
out
test
mov
sbb
adc
in
jb
push
fsubrl
mov
mov
enter
jne
sahf
je
jp
fs
cmpsb
mov
pop
sbb
imul
sub
pusha
push
sbb
repnz
or
adc
sub
test
loopne
cwtl
inc
lock
popf
cwtl
aad
gs
jne
sahf
test
mov
fsubrs
scas
enter
jmp
test
cld
icebp
xchg
push
in
and
es
push
mov
sbb
je
std
or
add
jge
jmp
ss
jne
sahf
rcr
faddp
shrb
lock
fs
cwtl
ds
test
shlb
add
inc
mov
sbb
fs
stos
xchg
insl
add
les
out
inc
inc
xor
jne
sahf
hlt
fdivr
in
or
jmp
mov
int3
icebp
les
fsubrs
jo
jb
cwtl
fiaddl
gs
sub
movsb
inc
cmp
pop
push
adc
push
xor
adc
sbb
xor
scas
and
fs
inc
in
ds
add
xchg
ficomps
inc
jb
push
xor
dec
out
inc
pop
xor
jne
sahf
loopne
push
les
and
jmp
int3
movsb
icebp
loopne
cwtl
and
fdivs
sub
insb
inc
and
inc
mov
fcom
cld
insl
out
in
or
jmp
test
shl
push
mov
enter
mov
sbb
jno
push
mov
cmpsb
scas
test
sbb
adc
popf
aam
fisubrl
in
fdivp
enter
loopne
cwtl
push
shrb
lods
out
inc
shlb
dec
jne
sahf
js
jp
fs
scas
jno
push
push
test
mov
aam
ficomps
lock
lock
push
call
inc
mov
enter
sahf
dec
fcoms
js
data16
fmull
add
mov
mov
leave
int3
in
ljmp
jne
sahf
adc
push
les
insl
cs
sub
xor
inc
fdivrs
nop
icebp
call
mov
inc
add
ds
icebp
sub
dec
and
ret
out
ljmp
fiadds
enter
shlb
push
shrb
out
inc
int3
xor
insb
shlb
cwtl
jecxz
jl
adc
add
test
mov
fcomp
enter
adc
insb
push
add
jl
hlt
inc
mov
in
jne
sahf
sub
xor
pop
insl
inc
scas
inc
mov
popa
test
add
popf
mov
xchg
enter
dec
jb
push
and
pop
out
inc
push
push
sahf
adc
adc
cmp
and
jmp
fdivrl
xchg
icebp
in
push
test
sbb
adc
fcomp
fcmove
shrb
jb
push
lock
xor
xor
cmp
push
insl
pop
scas
inc
mov
popa
test
add
popf
nop
ficomps
inc
jb
push
xor
dec
out
inc
pop
xor
lock
sahf
sbb
add
or
scas
cmp
fs
icebp
in
pushf
and
out
gs
jg
and
mov
test
mov
sbb
hlt
jo
or
mov
sub
xor
pop
jne
sahf
dec
fcoms
jl
data16
push
lcall
fidivrs
cmp
push
sub
fs
inc
je
lock
sbb
xor
cmp
jmp
in
pushf
icebp
clc
insl
jo
or
pusha
test
mov
test
mov
sbb
call
nop
push
call
inc
mov
enter
sahf
dec
fcoms
je
jp
call
out
sahf
test
mov
sbb
mov
pusha
push
sbb
jo
or
test
cld
or
sahf
xor
les
insl
inc
scas
dec
mov
test
insl
je
sbb
popa
fidivrl
std
scas
imul
adc
push
les
ss
int3
movsb
inc
fdivrl
xchg
icebp
in
push
test
pusha
enter
push
sub
dec
inc
inc
xor
jne
sahf
clc
fsub
call
mov
fs
lods
ds
mov
js
data16
mov
xor
xchg
sahf
mov
insl
mov
fdivrs
fs
insb
ds
jl
hlt
and
push
add
xor
enter
xchg
jb
push
test
inc
je
add
pop
sbb
inc
adc
out
hlt
fdivrp
enter
cld
jb
push
shrb
lods
out
inc
mov
push
sahf
jl
pop
scas
insb
mov
addb
mov
sbb
aam
ljmp
jb
push
sbb
jo
or
xor
or
adc
sub
scas
push
mov
fs
inc
lock
add
popf
nop
ficomps
pop
jb
push
xor
dec
out
inc
pop
xor
jne
sahf
loopne
push
les
insl
adc
jmp
int3
ds
loopne
cwtl
and
jb
pushf
in
idivl
adc
sub
pop
inc
xor
dec
fdivs
sahf
enter
clc
insl
out
call
nop
fs
icebp
mov
enter
add
jl
bound
pushf
in
pop
fidivrl
mov
cmp
push
sub
fs
inc
je
or
jne
sahf
or
push
les
dec
mov
inc
in
outsb
and
repz
sub
out
inc
sub
inc
mov
fcom
clc
insl
out
call
cwtl
fs
lods
ds
icebp
mov
pop
add
jo
jle
and
sbb
sub
test
mov
sbb
int3
pop
call
jo
or
and
inc
nop
xor
cmp
and
pop
insl
inc
scas
dec
mov
mov
jnp
xchg
mov
sbb
mov
pushl
jb
push
and
pop
out
inc
insb
xor
jne
sahf
or
push
les
insl
es
sub
movsb
inc
fdivrl
cwtl
icebp
lock
mov
add
push
icebp
xor
dec
and
fiadds
lock
sbb
or
pop
xor
adc
add
push
mov
sbb
jb
push
jo
mov
inc
imul
xor
int3
jne
sahf
cld
fsub
in
insl
imulb
jmp
mov
enter
mov
js
jp
jno
addb
cmc
cmpsb
sbb
aam
ljmp
jb
push
sbb
jo
or
xor
or
adc
sub
xor
jmp
call
data16
fiadds
push
jb
push
dec
sub
inc
push
xor
jne
sahf
call
insl
push
scas
add
sub
jmp
les
mov
and
jp
in
mov
cmc
mov
sbb
enter
jb
push
or
and
inc
nop
xor
cmp
and
push
insl
pop
scas
inc
mov
xor
push
inc
scas
hlt
jmp
adc
add
test
mov
fcomp
enter
adc
jo
or
test
cld
inc
xchg
xor
cmp
sahf
and
dec
les
pop
scas
inc
mov
addr16
inc
lahf
leave
mov
out
jmp
sub
int3
pop
call
jo
or
and
inc
xchg
xor
cmp
sahf
sub
les
inc
scas
inc
mov
mov
jae
xchg
mov
sbb
mov
decl
inc
push
cmp
push
out
inc
xor
jne
sahf
adc
sbb
add
sub
jmp
fdivrs
nop
icebp
call
mov
sub
out
inc
xor
dec
fdivs
sahf
enter
clc
insl
out
call
nop
fs
icebp
mov
enter
add
jl
bound
arpl
xchg
mov
mov
cmp
push
push
sub
fs
inc
je
or
jne
sahf
or
push
les
insl
es
sub
movsb
inc
fdivrl
xchg
icebp
in
push
test
je
xchg
adc
insb
jb
push
inc
sub
out
inc
dec
xor
les
sahf
lock
les
adc
jmp
mov
push
test
loopne
add
pushf
std
adc
adc
insb
icebp
sub
cmp
add
shlb
sbb
fsubrs
mov
mov
enter
mov
lods
jno
mov
mov
mov
xchg
test
mov
sbb
enter
jb
push
or
test
cld
inc
xchg
xor
cmp
sahf
sub
les
inc
scas
dec
mov
popa
test
add
into
xorb
icebp
sbb
push
and
mov
fsubr
ret
mov
sbb
inc
sar
popf
add
jg
sub
fsubrs
inc
les
scas
jo
jle
inc
or
sbb
test
pushl
dec
push
and
pop
out
inc
jo
or
jne
sahf
add
sub
xor
cmp
jmp
call
insl
jo
adc
xchg
push
jmp
cmp
xor
dec
push
and
pop
out
add
loopne
push
sbb
xor
dec
jb
push
mov
inc
loopne
pushf
fs
dec
add
jg
sub
out
inc
sub
inc
movsb
jne
sahf
rcr
faddp
shrb
lock
fs
pushf
ds
lods
push
enter
add
jl
sbb
je
and
imul
cmp
push
xor
jne
sahf
in
push
les
insl
push
scas
add
fs
enter
fcoml
in
jle
in
mov
or
fs
and
pop
lods
jne
sahf
mov
insl
scas
clc
mov
fs
inc
xchg
ds
icebp
movsb
push
shlb
add
inc
mov
sbb
add
jne
jne
sahf
test
scas
les
mov
sbb
or
adcb
push
add
sub
enter
cwtl
jb
push
jo
clc
xchg
mov
scas
mov
xor
xor
sub
fs
add
add
xor
enter
movsb
jb
push
pushf
sub
into
enter
push
inc
adc
fs
and
xor
add
enter
clc
fsubp
enter
or
mov
sub
xor
fsubrs
je
jle
pushf
or
sbb
test
mov
sbb
cld
incl
jb
push
lock
mov
jb
push
fsubrl
mov
les
xor
fsubs
push
or
push
movsb
out
mov
aam
sbb
in
jl
clc
jb
push
call
inc
mov
mov
jne
sahf
js
les
mov
adc
and
test
mov
sbb
int3
pop
call
mov
hlt
into
addr16
jo
add
js
or
xorb
adc
nop
add
push
sahf
cmp
and
sub
xor
jmp
loopne
cwtl
icebp
lock
test
adc
test
mov
xchg
adc
mov
sahf
mov
inc
sub
inc
icebp
cmp
push
fiadds
cld
mov
sbb
lock
add
push
inc
dec
add
out
test
or
inc
ljmp
xchg
loopne
mov
jg
xor
push
mov
int3
out
inc
loopne
pushf
fs
lret
cmove
out
inc
sbb
push
lods
jne
sahf
aam
mov
insl
fisubrs
jmp
mov
call
and
es
pop
mov
sbb
jo
incl
in
xchg
jmp
inc
ds
dec
push
and
pop
out
add
adc
push
sbb
add
fdivs
jg
inc
aam
test
jne
sahf
insb
fdivs
cwtl
or
inc
imul
popf
mov
mov
fsubrl
scas
sarb
push
push
dec
lods
lcall
push
repnz
insl
sbb
jmp
sarb
icebp
rclb
rcl
inc
inc
and
cwtl
icebp
cmc
jp
fmull
add
mov
mov
enter
sub
push
sbb
jo
or
xor
or
adc
sub
xor
jmp
call
data16
fiadds
push
jb
push
inc
sub
out
inc
dec
xor
les
sahf
hlt
fdivr
in
or
xlat
inc
add
nop
jg
jmp
pop
ljmp
nop
mov
inc
cmc
ss
movsb
jb
push
cwtl
sub
out
jnp
fwait
cmp
cwtl
xor
jno
jmp
xchg
scas
mov
dec
fs
pop
ds
je
fnstsw
lcall
sub
sbb
jno
jg
je
cmp
imul
in
test
and
int3
pop
mov
call
in
bound
notb
xor
xchg
mov
cmpsb
les
mov
jmp
pop
ds
insb
push
or
or
or
enter
mov
enter
fsub
lods
inc
loopne
xchg
jo
jle
shlb
pushf
pop
push
js
out
xchg
test
mov
sbb
test
pushl
jb
push
cmp
push
out
inc
pusha
xor
jne
sahf
call
insl
add
jmp
lods
ds
push
int3
and
inc
add
inc
mov
sbb
push
add
test
mov
fs
inc
cmp
dec
icebp
inc
push
xor
dec
fiadds
clc
mov
sbb
sbb
clc
jb
push
in
pushf
out
inc
test
fsubrl
inc
les
pop
scas
dec
mov
addb
call
ficomps
insb
jb
push
pop
sub
dec
inc
cmp
xor
jne
sahf
fcom
cld
insl
out
scas
lock
sbb
sbb
push
test
push
add
xor
enter
cwtl
jb
push
mov
sahf
test
stos
pop
jmp
cmp
xor
dec
push
and
pop
out
add
xor
pop
lock
addl
mov
push
lret
scas
lock
repz
jns
arpl
loope
dec
push
xchg
outsl
sbb
popf
push
les
jo
dec
into
fs
sbb
push
mov
outsb
push
push
inc
push
sbb
add
sbb
bound
dec
lea
test
outsb
jmp
pop
add
out
and
scas
scas
std
adc
jle
jb
ficomps
adc
fldl
into
fbld
dec
leave
jp
pop
cltd
cmp
xor
hlt
bnd
xor
add
rolb
movsl
outsb
xchg
pop
test
mov
inc
jns
ja
push
sbb
jge
in
jl
shl
add
popa
hlt
sbb
js
outsl
jmp
jle
in
sbb
outsl
stc
lret
test
fwait
jle
jne
adc
mov
push
outsb
cmpsb
jns
ja
push
jns
xchg
jns
and
jno
pop
xchg
stos
in
leave
hlt
into
lret
xchg
fidivrl
and
popa
mov
dec
push
js
xchg
outsl
out
std
jle
jno
push
mov
in
xchg
or
and
xchg
mov
push
ja
push
jmp
and
es
xchg
dec
in
hlt
xchg
xchg
mov
in
fldenv
jle
scas
in
ljmp
aad
xor
mov
xchg
icebp
fstpt
mov
dec
push
subl
dec
lock
mov
lods
in
outsb
xchg
add
icebp
mov
out
and
cmpsb
js
outsl
incb
cmp
mov
mov
fs
pop
lock
sti
hlt
bnd
popa
sub
out
push
xchg
cmp
and
xchg
add
icebp
call
in
mov
mov
push
test
cmp
add
test
jle
mov
add
or
add
test
lock
pusha
lcall
sbb
pop
insb
dec
jle
in
fs
mov
push
push
push
mov
xor
repnz
and
dec
gs
sarl
mov
jle
andb
stc
in
mov
mov
in
adc
and
ret
push
jecxz
mov
mov
xor
rcr
gs
mov
in
xor
mov
call
xor
test
xchg
mov
adc
cmp
hlt
in
test
fdivrl
xchg
mov
mov
movsb
mov
bound
test
jge
push
dec
dec
adc
dec
dec
pop
je
popf
mov
jb
xchg
add
push
mov
call
inc
mov
out
or
sbb
lret
hlt
pop
xchg
push
lret
jno
frstor
hlt
fcoml
jo
dec
test
ret
jg
les
adc
lock
lods
stos
hlt
sbb
test
stos
js
adc
aaa
daa
mov
xchg
mov
cs
js
aam
pop
xchg
and
iret
cld
fnstsw
sub
and
lock
or
scas
push
js
pop
test
outsb
ja
insb
mov
mov
pusha
pop
movsb
int
lods
adc
cmpsl
jns
ja
insb
xchg
imul
mov
push
inc
lods
push
jmp
add
xor
inc
mov
jns
fmuls
cld
fnstsw
sub
and
lock
mov
xchg
shl
inc
ss
push
insl
outsb
mov
mov
aam
mov
js
and
inc
xchg
bound
mov
test
lds
sub
out
inc
enter
ja
dec
std
dec
int
testl
test
fcompl
cwtl
push
inc
leave
lock
and
xor
add
mov
repz
jno
outsl
loopne
add
pop
rcr
imul
jg
insb
inc
mov
jno
push
nop
je
jl
insl
mov
push
add
fists
ds
dec
insb
push
jle
jno
push
cmp
sarb
mov
and
popf
testb
les
mov
aaa
outsb
mov
or
hlt
adc
add
fsubrl
pop
sbb
dec
add
add
out
adc
hlt
shlb
imul
xchg
subl
adc
mov
cwtl
lret
push
pop
add
sbb
in
adc
inc
fiaddl
mov
push
cltd
dec
fildll
add
sub
add
inc
js
shll
es
pusha
inc
stc
xor
jp
mov
gs
fcomip
and
mov
out
js
lods
xchg
lods
jmp
aam
pop
cld
adc
outsl
inc
and
pop
sub
lock
addb
jmp
in
cmc
or
aam
pop
push
push
mov
enter
inc
lret
mov
out
sbb
push
out
insb
xchg
add
push
lret
adc
test
or
sbb
jmp
cs
sbb
out
jno
xchg
rcl
adc
push
adc
jmp
xchg
push
push
mov
test
aas
ljmp
in
inc
mov
lcall
mov
push
in
or
push
mov
mov
fstl
and
test
jp
js
push
ljmp
jb
mov
xchg
push
cwtl
push
call
inc
and
cmp
push
mov
or
jp
add
adc
jg
jb
mov
in
test
fmul
sbb
in
or
add
in
leave
popf
cmp
and
or
icebp
out
cltd
sbb
push
push
push
flds
adc
cmc
xor
ret
sub
nop
mov
loopne
cmc
adc
decb
push
mov
mov
xor
call
outsb
inc
mov
dec
lock
sbb
mov
or
sbb
mov
insb
icebp
test
sub
cmp
test
sahf
mov
lods
xchg
movsl
push
rcrl
shr
mov
mov
in
repz
push
sbb
push
mov
fdivrs
cmp
xchg
into
sbb
sbb
inc
cli
fsubl
push
notb
adc
jo
jle
insl
test
pop
jno
das
pop
imul
nop
pop
test
pop
pusha
out
inc
or
sti
and
push
mov
setns
push
fdivrs
pop
push
jge
pop
xchg
hlt
in
xor
sbb
sbb
popf
scas
enter
hlt
and
js
in
daa
xor
xchg
lret
add
ficoml
in
popa
jo
sbb
jo
rolb
sarb
adc
xor
mov
cmp
or
xchg
jle
sbb
loop
test
xchg
ljmp
rolb
sub
fwait
insb
jle
add
sar
xchg
sub
les
dec
jb
jp
pushfw
js,pn
cs
push
cmp
sbb
popf
add
in
sbb
fdivrl
dec
enter
enter
rcrb
jns
sub
hlt
rclb
shlb
ret
inc
xchg
mov
test
fsubrl
push
jle
sub
cli
call
or
pop
test
int3
mov
test
xor
sbb
mov
push
dec
sub
dec
lock
ds
mov
lods
adc
jnp
int
daa
jo
adc
adc
mov
stos
testb
nop
aas
xor
or
cwtl
mov
sahf
xchg
insb
push
jle
cltd
sub
ds
dec
mov
stos
jp
push
in
out
jecxz
xchg
and
loopne
xchg
push
hlt
aas
mov
shl
daa
jecxz
sub
cmp
mov
or
nop
inc
scas
es
mov
outsb
mov
cmp
cmc
lret
or
xchg
adc
push
test
jp
mov
data16
push
sbb
pop
ficoml
and
ja
jb
dec
addr16
or
pop
es
out
hlt
dec
lock
dec
test
lahf
jns
push
pushf
add
ljmp
jns
test
movsb
sbb
call
pushf
or
enter
popf
add
test
or
dec
jmp
mov
aas
lcall
xor
jbe
xchg
aam
pop
xor
cmp
imul
push
js
jmp
pop
movsb
dec
mov
pop
adc
inc
mov
aas
adcl
arpl
inc
mov
fwait
insb
jl
sbb
pop
xchg
push
incl
sbb
js
xor
cmp
std
test
ret
mov
in
dec
adc
push
outsb
fadd
aad
mov
sub
mov
test
pushl
and
out
movsl
sbb
jb
add
lods
int3
fistpl
inc
pop
bound
test
cmp
xor
rorl
test
inc
aas
pusha
into
out
cmc
add
movsb
jmp
mov
movsl
sbb
adc
xchg
pop
mov
sbb
insl
mov
bnd
and
out
sahf
pop
out
and
data16
in
nop
inc
push
jns
adc
hlt
adc
test
adc
adc
dec
icebp
hlt
add
loop
pop
not
cmp
pushf
pop
jg
push
jno
xor
dec
dec
cmp
cmp
inc
hlt
sbb
lret
push
mov
mov
xchg
xorl
repnz
rcrb
lret
add
sbb
inc
pushf
lock
jle
inc
push
jle
mov
mov
mov
push
cwtl
fstps
xor
or
loopne
mov
mov
bound
insb
pop
lret
popf
add
hlt
adc
negb
push
pop
sbb
xchg
popa
push
je
jle
or
pop
or
mov
je
lock
aad
stos
fildll
xchg
fstp
movsl
shrb
cmc
jno
adc
ret
aam
mov
repnz
cld
xor
movsl
sbb
insb
sub
push
add
data16
cmp
insb
pop
jle
ljmp
in
adc
xor
mov
dec
lods
add
int3
or
lahf
adc
jno
jl
js
cld
pusha
push
mov
pusha
aad
push
enter
aad
mov
call
sub
cmp
shrb
js
jle
jo
loop
push
bound
inc
das
xchg
ljmp
addr16
pushf
fsubrs
loope
mov
rcrb
jmp
hlt
dec
pop
pop
sbb
loopne
sub
test
fmull
movsl
ljmp
leave
ss
jae
ret
lahf
push
cmp
xchg
xor
inc
sbb
adc
pushf
add
fs
ljmp
call
pop
lock
sub
lahf
clc
sbb
sbb
push
push
cmp
push
sbb
test
in
sbb
scas
negl
aad
dec
addr16
repnz
std
jns
inc
stos
xchg
lcall
push
pop
inc
push
rcll
dec
stos
in
cmp
mov
pop
or
out
test
xchg
push
inc
in
adc
sahf
add
cmp
push
enter
call
fmul
pop
ficomps
decl
pop
push
pop
js
jnp
jo
mov
jge
sbb
aam
xchg
inc
sti
cmp
pushf
addb
dec
fistl
les
ss
je
adc
mov
scas
mov
sbb
push
xchg
push
jle
cld
and
dec
xchg
jle
and
inc
add
mov
jo
xchg
mov
push
pop
jle
xor
orb
mov
std
jmp
add
lock
cwtl
bound
fwait
mov
inc
test
xchg
adc
push
mov
xchg
subb
xchg
xor
adc
or
pop
pop
cmc
cli
lods
mov
push
inc
fsts
loopne
pop
fsubp
sub
push
add
cmp
test
mov
push
ljmp
into
jg
mov
data16
or
and
out
idivl
and
add
push
mov
add
inc
hlt
je
adc
add
shlb
dec
dec
data16
sub
xor
jecxz
mov
out
xchg
push
sbb
cmp
outsb
ljmp
fst
sub
stc
pop
xchg
push
out
addb
scas
push
push
push
pushf
xchg
jmp
ds
adc
test
pop
fsubrs
or
cld
adc
in
out
addr16
fsubrl
cld
lds
out
push
jle
or
inc
cli
adc
faddl
ds
dec
sub
fadd
popa
rol
dec
hlt
push
iret
xorb
aaa
sub
add
bswap
push
insl
cld
sbb
sub
adc
mov
dec
in
inc
jno
xchg
cmp
xor
push
push
jecxz
jb
cwtl
push
pop
sbb
sbbb
push
shlb
pop
pushl
sbbb
jle
inc
stos
daa
mov
xor
and
add
or
js
or
push
add
adcb
maxps
jo
outsb
and
push
push
dec
mov
xchg
dec
pushf
das
call
out
sbb
in
mov
iret
cmpsb
add
sub
cmpb
cld
cmp
mov
sti
inc
xchg
outsb
sahf
aaa
cwtl
clc
inc
push
js
mov
hlt
pop
push
dec
sbb
cmp
adc
inc
dec
ficoml
mov
sub
dec
test
in
data16
xor
test
in
aas
adc
push
sbb
and
loop
jp
addr16
leave
rcrl
lea
cmp
data16
popf
mov
dec
pop
mov
ljmp
push
fsubrs
scas
shl
mov
test
jne
jle
or
jns
aad
insb
jb
cmp
dec
addw
sub
lret
shlb
dec
inc
pushf
adc
in
xchg
inc
mov
jge
test
repz
sbb
or
mov
std
repnz
cwtl
shrl
enter
test
insl
das
mov
aam
mov
jmp
lock
inc
cwtl
push
add
pusha
jge
sbb
add
call
sbb
pushf
into
test
cltd
inc
sub
cmp
jmp
jne
sub
or
sub
cmp
repnz
dec
mov
xor
imul
xor
add
or
mov
hlt
inc
hlt
repnz
xchg
dec
adc
xchg
inc
xchg
int3
aaa
cmp
cmpsl
lock
sbb
or
loopne
adc
cmp
std
movsl
dec
les
sub
adc
lock
push
leave
data16
clc
insl
insb
cwtl
clc
mov
mov
in
fs
and
out
add
outsb
clc
or
jmp
aam
and
loope
aam
pop
cmp
adc
test
sub
inc
inc
test
sbb
jle
fbld
cld
es
xor
ja
bound
jno
or
jle
hlt
std
add
push
mov
stos
scas
push
les
pop
push
xor
movsb
sbb
cli
sbb
mov
rorl
in
out
and
loopne
rcrb
and
cmpsl
or
mov
pop
or
pop
hlt
popf
pusha
sbb
jg
or
xchg
pop
data16
leave
pop
test
mov
ud0
cs
push
or
outsb
or
sbb
pushf
adc
adc
aam
xchg
inc
loope
and
enter
sbb
jle
dec
pop
cmp
movsl
mov
pushf
scas
outsb
jle
pop
xchg
cmpsw
push
fsubl
mov
sbb
push
pop
jle
push
outsl
sbb
inc
xchg
cmpsb
adc
cwtl
mov
out
hlt
lret
cwtl
pop
mov
fbld
hlt
cwtl
xchg
ret
push
sbb
fst
insb
shrb
fldt
in
push
jle
or
loop
cld
push
jle
cwtl
aad
push
push
jle
lcall
movsl
insb
scas
jle
fsts
rcpps
movsb
lods
aas
loope
movsb
push
dec
jl
sbb
jg
in
xchg
pop
orb
aaa
push
jle
inc
mov
sub
push
lock
inc
inc
pop
data16
je
in
sub
or
imul
outsb
loope
into
jle
js
test
xchg
add
adc
add
ja
call
jp
fcoml
call
dec
into
lods
lock
pushf
or
cmpsl
push
mov
or
fs
test
jle
push
adc
outsb
sub
mov
pop
push
addr16
add
out
sahf
adc
jo
fcoms
inc
pop
test
add
adc
dec
inc
xchg
enter
mov
xchg
sbb
adc
add
jle
repnz
dec
adc
xchg
bound
and
dec
mov
daa
movsl
dec
or
stos
lods
push
loop
dec
pushf
dec
test
inc
lock
add
jo
out
fstl
in
int
lods
push
imul
push
pop
jl
inc
mov
cltd
add
add
add
cmpsb
clc
mov
iret
push
outsb
sysret
push
push
stc
fisttpl
push
xchg
pop
enter
jne
mov
pushf
mov
out
nop
popf
aam
and
psubusb
inc
push
jo
xchg
sub
mov
xorb
adc
cmp
cmp
xchg
add
pop
cli
mov
inc
inc
inc
pop
ficomps
hlt
sub
movsb
aas
add
push
xchg
mov
cwtl
adc
dec
push
data16
jle
jmp
pop
call
jg
outsb
sahf
imul
gs
jge
inc
jbe
iret
sub
lods
xor
popf
rcll
stc
insb
scas
jle
or
xor
movsb
adc
mov
cmc
int
and
xor
daa
pop
or
repnz
cltd
mov
sbbb
sbb
lock
dec
cwtl
cmp
sub
mov
cwtl
pop
aam
cwtl
push
in
fsubrs
mov
adc
sub
pop
movsl
les
test
cmp
sub
pop
xor
in
incb
in
xchg
sahf
mov
inc
int3
mov
pushf
mov
mov
incl
jo
sbb
out
add
iret
out
sbb
sbb
int3
xchg
inc
mov
adc
test
jg
or
sahf
and
pop
dec
add
xchg
arpl
inc
hlt
lea
test
jl,pt
inc
wrmsr
jae
push
stos
sub
in
rcll
test
dec
pop
popf
mov
push
add
adc
sarb
cmpsl
pop
push
je
jp
push
xchg
ret
pushf
pop
jl
idivb
dec
mov
in
repz
inc
jl
cld
fstl
pusha
enter
xchg
addr16
adc
ljmp
and
mov
fiaddl
push
push
out
add
add
xor
sub
jo
cmpl
push
xor
inc
hlt
adc
add
mov
movsb
sbb
imul
aam
sub
popa
repnz
push
mov
xor
mov
fiadds
jne
hlt
cmc
mov
push
mov
sbb
roll
dec
hlt
pop
pushf
std
mov
in
xchg
pop
jmp
adc
jno
lret
fs
hlt
and
mov
push
lods
push
test
pop
aad
jl
or
outsb
loope
test
and
cltd
cmp
sub
push
cmp
test
and
das
push
jle
nop
cmp
test
in
jb
and
jae
push
dec
or
pop
les
sbb
addr16
leave
in
mov
jge
in
sbb
adc
pop
lret
jl
jle
insb
cwtl
xchg
fsubrs
ficompl
fdivp
lea
mov
js
adc
mov
hlt
aad
int
data16
jl
data16
test
test
andl
push
scas
push
idiv
notb
pusha
xchg
jp
imul
cmp
scas
jle
pop
test
orl
popf
xor
data16
popf
jl
sub
dec
call
pop
leave
inc
out
pop
xchg
pop
jnp
testb
stos
xchg
dec
in
adc
sbb
push
mov
fimuls
jnp
jo
imul
mov
add
jl
push
mov
fldl2e
add
add
cmp
ffreep
push
xlat
scas
nop
imul
sbb
push
hlt
loop
mov
inc
pushf
sbb
jecxz
sub
dec
int3
jae
pushf
push
fwait
push
xlat
pop
nop
sub
xchg
cmp
testl
aad
push
movsl
jns
jle
in
addr16
adc
and
test
lahf
lock
mov
ret
daa
orb
jle
xor
push
lea
lcall
enter
clc
lods
pushf
mov
imul
hlt
dec
loope
mov
and
inc
call
hlt
sbb
in
add
lock
rolb
push
hlt
sub
lahf
push
and
lret
ret
jle
add
adc
sbb
xor
and
pusha
cmc
stc
mov
cmpl
mov
cmpsl
mov
pushf
movsl
aam
call
add
fs
inc
push
es
sbb
hlt
fcompl
or
addr16
test
add
push
in
and
xchg
sahf
into
repz
scas
les
sbb
pushf
pop
mov
addr16
mov
xchg
xor
das
inc
hlt
push
orb
test
movsl
pop
jle
cmc
repnz
fstpl
xchg
xor
leave
hlt
add
hlt
ljmp
test
daa
lds
cmp
out
add
mov
dec
fistl
dec
mov
mov
xchg
sbb
pushf
adc
xor
add
push
aad
sbb
sahf
adc
and
lock
push
pusha
dec
push
cmp
bound
fstl
test
push
add
lock
pop
xchg
bswap
or
stc
fucom
shlb
cmpsb
aad
xor
mov
sti
je
fsubl
push
lock
iret
mov
fsubrs
in
nop
mov
pop
mov
ds
fs
jmp
lods
mov
cmpsb
xor
mov
and
call
cld
xchg
in
adc
jecxz
push
xor
inc
fisttps
cmpsb
sub
jl
or
dec
adc
jle
std
sbb
jl
scas
sbb
test
test
adc
dec
mov
adc
hlt
or
adc
jnp
jge
data16
inc
or
xchg
lds
sub
mov
and
jnp
mov
jo
in
push
fcmovnb
es
orb
pop
add
inc
or
hlt
adc
pop
into
sub
cwtl
xor
out
jae
mov
xor
lret
mov
cs
cltd
push
out
test
xlat
adc
lock
inc
cmp
or
movsl
jp
push
fildl
and
roll
push
in
add
out
push
dec
ljmp
xchg
decl
in
dec
mov
je
jle
ret
fistpl
insb
lret
jns
dec
in
mov
jl
cmpsb
mov
call
in
hlt
cmp
mov
in
js
pop
pop
adc
stc
pop
call
xchg
outsb
lcall
int
mov
lods
into
pop
xchg
movsb
or
test
std
pop
in
hlt
cld
in
mov
push
lds
stos
inc
pop
xchg
pop
pop
js
rolw
cld
mov
hlt
into
mov
in
xchg
in
pop
cli
lock
jp
push
mov
pop
xor
and
popa
adc
xor
lods
adc
stos
shrl
jle
mov
inc
sbb
add
lahf
push
sbb
xor
xchg
ret
std
xor
pop
push
lock
jp
lret
hlt
xchg
insb
lock
and
lcall
insb
mov
cld
fcomi
sub
imul
mov
sbb
imul
dec
inc
jno
pop
fsubrs
test
je
adc
call
outsb
sub
cmc
push
test
outsl
push
mov
lret
test
test
and
cmp
filds
jle
test
mov
mov
mov
outsb
adc
hlt
enter
sbb
sbb
lret
cs
cwtl
aaa
hlt
or
sahf
adc
leave
in
or
dec
fsubr
iret
pusha
xchg
sbbb
sbb
push
push
loop
rol
add
or
push
inc
xor
xchg
jp
stos
movsb
and
xor
movsb
ja
fisubrs
jle
sbb
popf
negl
outsb
and
sahf
jbe
insb
mov
pop
fsubs
push
push
cmp
shl
and
into
dec
sbb
dec
mov
adc
pushf
stos
cltd
incb
mov
out
sbb
nop
xchg
insb
jle
adc
loopne
dec
hlt
push
jle
push
lock
adc
subl
jne
lret
inc
mov
inc
push
and
cmp
pop
test
and
adc
lds
rcrl
pop
and
int
push
and
and
xchg
outsl
push
sbb
push
xor
stc
sub
loope
movb
cs
imul
push
sub
mov
mov
add
fcmovbe
pop
and
sti
test
test
xchg
sbb
jo
loop
xchg
adc
clc
pop
pop
pop
and
fdivrl
sub
push
add
xchg
dec
fs
negl
jp
push
fdivrs
pop
loopne
data16
nop
pop
aad
pop
rclb
push
jp
push
push
cmpsb
sbb
test
js
lahf
loopne
hlt
test
or
adc
and
push
xor
mov
jle
test
pop
fistps
xor
push
in
daa
mov
cli
jecxz
shrl
in
fwait
popf
lods
imul
adc
push
cltd
daa
push
dec
call
fadds
sahf
ss
popf
push
jmp
xor
push
clc
and
push
mov
sbb
sbb
and
jo
add
lods
jmp
fwait
test
sbb
lea
xchg
data16
call
jle
jns
shl
push
jmp
icebp
xor
push
cwtl
outsl
sbb
add
in
sbb
sbb
sub
pushf
push
dec
push
data16
ljmp
adc
lahf
sbb
fsts
hlt
push
or
push
jle
push
in
mov
pop
scas
lods
cmpsb
stc
xor
cli
out
jle
jo
xchg
fucomp
xchg
fadds
hlt
std
jmp
adc
fiadds
add
cmp
mov
inc
inc
in
sbb
mov
dec
sbb
stc
and
cmp
add
in
aam
mov
ret
xchg
push
add
pop
test
dec
push
jo
jnp
or
pusha
mov
fistps
pop
jl
xchg
mov
pushf
dec
sbb
lock
pop
lahf
leave
adc
xchg
cmp
mov
outsb
cmpsb
or
add
mov
fldenv
jo
push
loopne
hlt
ljmp
xchg
fimull
cmp
xchg
push
ret
mov
and
sbb
add
loopne
pop
push
push
lods
jle
jo
push
cmpsb
stc
dec
fstps
push
cltd
jle
sbb
pop
mov
hlt
in
adc
movsl
cwtl
ud1
push
or
lock
sub
hlt
adc
or
pop
in
rolb
setnp
test
push
add
gs
pushf
test
dec
in
mov
adc
inc
ds
dec
hlt
lahf
dec
jns
mov
mov
sub
loopne
mov
pop
fcomps
rolb
sbb
mov
in
mov
in
clc
out
pushf
xchg
test
inc
and
js
mov
ret
es
push
ds
test
test
sub
mov
popf
nop
fnstsw
pop
inc
xchg
sub
inc
xchg
ficomps
fcompl
lods
fnstsw
sahf
dec
fdivrs
dec
inc
hlt
mov
pop
vmovdqa
ret
mov
into
andl
inc
pop
or
ret
xorb
cmp
dec
dec
clc
lahf
or
inc
je
test
clc
out
adc
fst
push
lods
popa
int3
add
push
cwtl
popa
divb
cs
jo
mov
cwtl
mov
jle
or
ret
pop
push
les
test
pushf
mov
out
loopne
mov
sbb
push
jp
leave
int
mov
dec
loopne
out
ja
fldenv
pop
jle
cmp
xor
push
sahf
add
fcomps
cmp
jle
hlt
jecxz
inc
stos
cwtl
adc
sub
sub
fsubl
add
lea
mov
int3
fwait
xor
cmp
xchg
loope
sbb
outsb
push
daa
jmp
mov
dec
outsb
ret
lock
sbb
cmp
lods
mov
jb
push
lcall
ljmp
fwait
inc
xchg
push
stc
test
or
divb
add
push
xchg
mov
add
js
insl
imul
fcmove
cwtl
pop
out
push
call
add
int3
and
nop
adc
test
ret
xor
cmp
es
pop
push
in
out
push
fcmove
repz
imul
fs
fcoms
lret
xlat
test
bound
test
addr16
pop
hlt
mov
cmp
and
sbbb
fisubrs
xor
xor
fmull
imul
pop
cmpsb
lea
mov
mov
js
sahf
sub
xchg
mov
xor
pop
packsswb
dec
stos
cmp
jno
sub
pop
push
and
data16
das
test
les
pop
movsl
push
divb
fldcw
dec
xorl
mov
int
jo
outsl
xor
and
dec
dec
in
aas
ret
cmp
loope
xor
or
mov
sbb
out
lock
loope
stc
cmpb
sub
fcom
xorb
sbb
mov
test
add
lds
subb
sbb
and
sub
sbb
add
jl
out
dec
lea
and
enter
dec
lret
cmpsl
jge
int3
xchg
mov
and
inc
mov
sub
and
pop
adc
sub
cmp
call
sub
int3
jae
ret
sbb
mov
cld
shlb
adc
push
les
sbbb
test
in
mov
mov
jp
fnstenv
mov
je
inc
sbb
adc
fstpl
shr
cmp
pop
adc
xchg
fs
std
mov
fs
adc
push
xor
and
jns
mov
test
and
mov
push
pop
rorb
push
fidivs
xchg
imul
xor
mov
xchg
inc
adcb
mov
adc
cmp
int
or
adc
cmp
rcr
fdiv
jb
in
sbbl
lods
mov
xor
push
arpl
push
mov
addb
cmp
arpl
mov
lcall
stos
or
and
loope
cmp
add
and
jp
mov
rorb
adc
adc
jmp
lods
and
loope
dec
sub
bound
and
add
les
jns
loope
mov
out
mov
and
push
push
cmpsb
pop
pop
lret
jbe
inc
stc
sub
cmp
dec
adc
aas
enter
aam
cwtl
sub
ljmp
repz
cmp
loopne
fcmovb
lret
fwait
adc
pop
je
add
out
pop
add
sub
in
shlb
ljmp
jo
inc
pop
leave
mov
xlat
out
or
arpl
bnd
cmp
sub
mov
daa
mov
je
pop
cli
jle
cmp
clc
sbb
push
stos
mov
sarl
pushf
cmc
aam
and
fldcw
sbb
inc
add
add
fwait
int
xor
and
or
mov
adc
pop
xlat
cmp
pushf
push
dec
flds
sbb
ljmp
adc
fildll
sbb
lret
jl
xor
mov
fucomp
fmuls
mov
fiaddl
lods
mov
stos
ret
mov
cmp
xor
xchg
faddp
testl
cmp
dec
test
es
iret
inc
fcomip
push
xchg
insb
notb
jg
cs
or
and
sub
out
les
dec
dec
dec
negl
sbb
cmp
fwait
xchg
mov
mov
pushf
hlt
cwtl
mov
jmp
xchg
lret
dec
sub
xchg
sub
pop
add
adc
or
push
add
xor
fisubrl
stos
stos
daa
stos
sbb
cmp
subl
out
pop
add
cmova
cmc
cmp
dec
and
push
add
pop
stos
cmp
aam
adc
pop
add
and
lods
or
or
cmp
lds
les
lret
push
daa
mov
lcall
cmp
push
test
adc
inc
push
enter
mov
mov
jl
stos
lods
jmp
rorl
inc
push
std
loope
mov
mov
ss
push
test
cmp
das
popf
inc
pop
das
enter
iret
adcb
cmpsl
xchg
cmp
lock
add
sub
inc
stos
mov
jmp
xchg
ret
movsl
shr
cmp
mov
sbb
mov
jmp
jmp
adc
stos
jb
and
ljmp
adc
lret
inc
shrb
xchg
cs
xchg
enter
jb
and
mov
dec
cld
mov
mov
mov
data16
sbb
push
dec
sbb
mov
insb
mov
sub
test
xchg
lods
notl
push
andb
xor
aaa
push
xchg
ss
fiaddl
inc
psllw
push
and
dec
and
xor
cmpsb
lahf
adc
add
into
xor
xchg
cmpsl
outsb
xor
pop
mov
push
pop
sbb
pop
adc
roll
imul
lcall
push
sbb
cltd
adc
lods
repz
or
out
sub
pop
and
cmpb
in
mov
sti
sub
nop
shlb
mov
pop
mov
les
push
mov
xor
enter
lret
xchg
sub
sbb
push
cmp
inc
jmp
dec
xlat
xchg
xor
sub
push
lock
inc
test
inc
jo
imul
js
rcrb
push
iret
dec
pop
in
add
fidivrs
aas
cltd
pusha
xor
sbb
cmpsl
xor
int3
xor
jbe
jb
leave
add
sub
jg
inc
das
out
xor
scas
fcoml
es
and
mov
movsb
pop
outsb
inc
aam
adc
jb
insb
movsb
push
dec
and
xor
inc
and
xchg
push
xchg
call
mov
sbb
call
shll
mov
pop
inc
aas
xchg
fcompl
push
rcl
cltd
or
fldcw
dec
push
outsb
and
aam
pop
out
movb
jecxz
aaa
push
imul
insl
arpl
gs
lea
icebp
lds
jl
mov
dec
fdivl
sbb
repnz
test
test
test
stos
lcall
cld
loopne
pushf
cli
insl
adc
std
aaa
test
test
ret
stos
dec
mov
sbb
loopne
xor
mov
and
xchg
out
testb
cld
iret
sbb
jnp
pop
nop
lds
jge
dec
int
push
arpl
and
cmpsb
xor
or
mov
xlat
mov
pop
out
test
movsl
pushf
xor
stc
xor
mov
aad
inc
xor
cwtl
dec
jmp
inc
adc
mov
pop
xor
inc
sub
pop
mov
cmp
xchg
jne
lret
pop
out
push
shl
xor
rcrl
sub
add
je
and
pushf
pop
add
cmc
adc
or
xor
pop
or
add
mov
ret
stos
ss
ja
in
rcrl
xchg
mov
fldenv
cmc
sub
sub
or
and
inc
add
xor
cmpsl
aad
dec
arpl
les
xor
or
lahf
sti
lock
push
mov
enter
mov
or
xor
les
push
and
cmp
mov
dec
in
mov
pop
inc
push
outsb
mov
add
cmc
fcoml
test
sti
pop
xor
mov
mov
pop
sub
dec
xor
scas
aam
jbe
adcb
push
into
xor
gs
pop
ss
push
sbb
dec
adc
das
sub
jp
ret
pushf
je
sbb
inc
test
xor
pop
jle
insb
xor
xchg
add
add
ljmp
and
sarl
add
call
jb
sbb
push
dec
cmp
pop
hlt
shl
adc
movsb
test
dec
cli
inc
hlt
add
push
into
icebp
addb
jle
mov
rorl
xor
sbb
adc
data16
in
or
fs
jmp
adc
add
jns
add
mov
mov
bound
push
fisubrl
ret
push
hlt
sbb
xchg
popf
incb
mov
jmp
or
loopne
addb
lds
popf
stos
call
mov
sbb
das
pop
les
in
adc
or
cmp
lcall
mov
or
mov
xchg
push
enter
sub
test
mov
push
xchg
and
cmp
pop
bnd
pop
aam
add
movsb
sarl
mov
mov
popf
ficompl
imul
mov
or
aas
pusha
mov
stos
cmp
and
push
mov
pop
and
lods
test
xor
mov
or
ja
pop
mov
sub
test
enter
cli
add
pop
sub
and
aaa
adcb
addr16
xor
xor
push
dec
rolb
sbb
mov
mov
sub
pop
cmp
sub
pop
dec
adc
aam
pop
jl
test
mov
in
test
out
or
pop
xchg
fldcw
push
push
hlt
mov
test
je,pn
lods
outsl
sub
iret
jle
lods
stos
push
fldcw
in
test
dec
push
lock
mov
popa
mov
mov
sub
pop
nop
ds
adc
add
add
inc
adc
aad
lods
sbb
test
xlat
adc
pop
leave
out
call
stos
xchg
cmp
jo
pop
test
scas
lods
int3
div
shrl
push
cmp
pop
iret
pop
loopne
clc
inc
roll
out
call
jle
sbb
dec
insb
mov
push
add
xchg
ljmp
xor
mov
lods
repnz
push
inc
outsb
and
and
int3
in
mov
mov
ljmp
push
ss
adc
loopne
lods
mov
mov
rol
addl
pop
in
rorb
loopne
aas
outsl
dec
xchg
jo
xor
addl
sbb
cmpsb
mov
adc
sub
jge
sbb
cmpsb
mov
jo
push
sbbb
imul
mov
dec
xchg
mov
push
push
testb
stc
adc
add
mov
cmp
cmp
mov
mov
jmp
hlt
push
xchg
adc
fucomip
add
andl
xchg
bnd
jle
testb
setno
push
fdivrl
pop
test
and
xchg
pcmpgtw
mov
sbb
lods
pop
or
pop
jge
add
sub
dec
xchg
rcll
push
fcompl
xchg
lret
cwtl
in
inc
push
stos
cmc
out
jp
push
loopne
loope
fstpl
push
rclb
xchg
lods
mov
push
dec
mov
adcb
dec
dec
mov
inc
loope
test
jne
xchg
xchg
adc
hlt
xchg
mov
jb
adc
sub
das
add
lcall
popa
orb
fisttpll
mov
subb
div
loopne
sahf
jp
into
gs
inc
dec
mov
enter
dec
je
sahf
sub
jmp
pop
dec
sbb
jl
and
jmp
in
and
sbb
testb
push
aam
int
mov
mov
mov
pushf
test
mov
jg
imul
lds
sbb
mov
in
inc
cs
bound
sbbl
add
mov
bound
xor
pop
test
jecxz
pop
mov
fsubp
mov
stos
fs
inc
mov
push
mov
sbb
ds
cmp
outsb
ja
enter
lods
cmp
pop
sub
mov
js
adc
mov
and
push
cmpsl
loopne
sbb
fldt
lods
aam
test
data16
xchg
push
mov
push
popf
and
fsts
into
fs
lods
or
loop
jb
and
or
adc
sbb
xchg
gs
and
mov
mov
adc
xor
shlb
in
aam
loope
call
adc
and
and
rorb
mov
fsubr
inc
cmp
hlt
fwait
stos
negl
out
inc
sub
push
pop
aam
das
add
ja
iret
xor
cltd
orb
lods
ljmp
pushf
mov
popa
shll
xchg
ret
xchg
aad
push
shll
jo
xchg
xlat
dec
fnsave
and
lock
or
cmpsl
les
or
cmp
iret
inc
movb
add
dec
clc
sbb
mov
cmp
push
arpl
sub
mov
mov
adc
mov
lret
xchg
das
sub
xor
and
push
and
mov
mov
inc
fisubs
bound
inc
jno
sbb
js
movsl
jmp
fs
mov
push
subl
mov
ficomps
pop
mov
cwtl
inc
cld
ret
fnstcw
mov
es
ja
add
in
xchg
pop
inc
add
dec
cmp
clc
repnz
cmp
fsubrs
add
cmp
and
pop
out
ja
push
mov
sbb
je
std
cmp
and
call
xor
push
std
adc
pushf
add
ret
pushf
push
test
sbb
mov
mov
call
repnz
pop
mull
xor
xor
shlb
mov
leave
clc
lret
enter
xchg
roll
lahf
fs
xchg
es
or
dec
loopne
adc
fistl
ret
cwtl
lcall
fnstcw
jno
aad
ds
dec
push
dec
aam
pop
je
cmp
mov
mov
divl
inc
pop
mov
inc
pop
inc
ljmp
pop
enter
setp
dec
shl
fnstsw
iret
sbb
cmpsl
mov
pop
mov
rol
dec
adc
out
or
cmp
jb
fsubr
hlt
push
rcr
xor
jns
bound
cmp
and
popa
xchg
adcb
mov
sub
push
es
movsb
mov
iret
cmp
add
out
sbb
xor
push
xchg
sbb
in
mov
cmp
push
shrb
xchg
push
xor
cli
shll
push
adc
leave
dec
or
xor
cmpsl
cmp
sub
adc
sub
add
cwtl
mov
lret
inc
adc
dec
loopne
cmp
test
lret
pop
shrb
lods
pop
das
xor
aas
cmp
mov
in
mov
test
rol
in
adc
inc
push
mov
xor
pop
stos
sub
adc
and
lret
mov
sbb
in
gs
inc
jno
dec
push
push
mov
dec
ljmp
in
xchg
shl
movsb
xchg
test
mov
cli
jmp
popf
bound
sbb
mov
and
sahf
aas
mov
enter
mov
mov
enter
nop
and
mov
pop
dec
fldcw
leave
test
insb
scas
cmp
in
jl
lock
sbb
jge
pop
dec
xchg
sbb
dec
test
mov
jae
loope
xor
mov
pop
lcall
outsb
cld
cmp
out
inc
and
dec
pop
in
xor
sbb
pop
mov
xor
jo
jns
push
push
dec
movsl
scas
cmp
sbb
ja
movl
scas
shll
insb
loope
shrb
lahf
and
dec
shlb
or
fwait
xchg
jbe
cmp
sub
clc
insb
push
pusha
insl
repz
in
dec
jns
cs
and
xchg
pop
sbb
aam
roll
pop
push
aad
xchg
xor
mov
lea
and
sti
sub
test
or
xor
imul
pop
aam
outsl
ljmp
cmp
lret
xor
mov
mov
popf
mov
or
and
cmp
sub
push
mov
jno
add
pusha
movsb
test
rcrb
push
and
femms
lret
mov
shlb
pusha
aaa
lods
ds
scas
pandn
call
push
lret
adc
popf
and
push
jb
xor
mov
xchg
int
sbb
sbb
out
ljmp
scas
stc
dec
shll
shlb
inc
push
shl
xor
nop
dec
mov
dec
sbb
xchg
hlt
in
repz
cmpsl
cmp
xlat
cmp
mov
loop
pop
lret
and
inc
sbb
adc
cmp
inc
dec
enter
mov
dec
fistps
mov
and
pop
mov
in
xchg
xchg
inc
outsl
xor
or
mov
rcr
sub
jl
sub
shlb
cmc
or
push
js
negb
mov
sub
push
pushf
xor
xor
out
push
std
push
popf
mov
outsl
fsubrl
or
dec
sbb
push
mov
and
imul
fdiv
cltd
and
adcl
mov
xor
out
bound
sbb
inc
sub
xchg
outsl
mov
mov
cmp
pop
insl
ret
sbb
scas
pop
inc
dec
sub
push
call
pop
adc
ds
fdivp
push
cmp
mov
push
pop
mov
mov
push
cmp
call
xchg
dec
sahf
adc
xstore-rng
cmpsl
test
ffree
and
mov
mov
add
scas
pop
xor
jnp
mov
pusha
and
aaa
insl
les
sub
inc
test
aad
std
push
outsb
ret
das
pop
xor
xor
shlb
aam
out
mov
ja
cli
cmc
cmpsl
movsl
ds
addr16
shll
iret
inc
mov
jbe
call
cmp
jns
sbb
add
inc
test
shrl
and
pop
cmpsb
scas
insb
inc
test
arpl
test
test
jle
imul
dec
rorb
fsubs
jno
and
inc
cmp
push
clc
loopne
jmp
mov
imul
mov
and
in
aam
outsl
adc
inc
lret
xchg
xor
aas
sub
inc
rcrl
push
add
inc
and
cltd
adc
popf
test
mov
ficomps
mov
inc
xor
es
ror
cmp
and
sbb
fwait
mov
addr16
fistps
and
xchg
jne
mov
pop
mov
or
add
or
call
add
push
sbb
push
mov
gs
sub
push
mov
sbb
adc
add
adc
and
jmp
inc
imul
sbb
pop
pop
je
gs
jae
cli
sub
cmpb
andb
jne
in
inc
dec
lock
arpl
dec
std
cmp
imul
or
std
idivl
inc
lret
lods
or
loopne
jae
or
test
mov
inc
lcall
dec
nop
jecxz
jb
mov
daa
aad
shrb
jle
push
insl
fisttpl
cwtl
inc
ss
cmp
push
insb
adc
mov
cmp
jl
in
rorb
movsb
sub
pusha
xor
jno
pushf
jno
int3
xor
test
sar
xor
aaa
scas
daa
lahf
or
in
pusha
lock
lahf
sub
dec
xor
repz
mov
movl
mov
js
fdiv
loope
test
sbb
mov
xor
mov
sub
inc
push
cli
mov
fcoml
outsl
outsl
cmpsl
popa
popf
cs
and
pop
seto
xor
xor
mov
mov
push
movsb
fnstenv
mull
mov
std
mov
and
hlt
mov
pop
pop
pop
jb
cwtl
popa
push
fistpll
hlt
in
bound
jge
sub
jae
std
xchg
pop
or
and
mov
xchg
lea
popa
into
push
loope
pop
inc
out
pop
icebp
out
inc
and
mov
jae
into
test
mov
sbb
insl
pop
incl
sub
inc
je
xchg
in
fs
loopne
push
les
jge
jmp
loopne
shl
in
fsubs
xor
movsb
enter
int3
push
scas
sub
out
inc
aam
lea
or
jno
mov
in
adc
hlt
enterw
add
stc
jecxz
and
jb
pop
ja
aam
mov
pop
mov
sub
test
pushl
push
inc
outsb
sub
pop
je
lcall
pushf
and
pop
dec
ret
es
mov
sahf
fidivrs
pop
dec
cmp
cmp
aam
test
xchg
imul
pop
jl
gs
push
ds
mov
ret
xchg
in
ja
movsl
push
mov
cmpb
inc
rclb
jb
arpl
mov
mov
jo
imul
jle
imul
fiadds
call
jb
js
push
movsl
push
in
out
test
xchg
fcoml
and
js
cmp
sbbb
insl
sbb
jmp
pop
inc
fneni(8087
dec
pop
or
test
xchg
or
out
dec
mov
pushf
add
gs
sub
sub
xor
mov
outsb
mov
jae
mov
loope
mov
jns
in
mov
stc
mov
jnp
sbb
repz
add
cmp
jp
jg
jnp
outsb
and
mov
shll
push
lcall
push
jge
lods
pusha
je
lahf
scas
dec
movsl
xchg
mov
mov
mov
ljmp
clc
pinsrw
mov
js
int3
fnstcw
ja
adc
dec
inc
xor
push
push
stc
xor
cltd
cmp
mov
inc
data16
in
std
mov
movsl
inc
dec
lods
mov
inc
mov
adc
test
mov
xchg
xchg
les
fbstp
ss
lock
enter
lcall
scas
jle
dec
mov
inc
sub
fidivrs
and
test
inc
cmc
cmp
or
nop
mov
mov
das
push
jle
lcall
or
xlat
fadd
xor
movsl
xor
movsb
insb
push
xor
mov
lods
mov
outsl
ds
js
call
pusha
faddl
push
xor
jb
test
repz
popa
lods
xor
lods
nop
bound
adc
fisubs
movsl
popa
pop
je
cld
sub
sbb
in
jcxz
pop
sbb
repz
movsl
iret
divb
pop
xor
jge
add
shlb
jg
or
add
testb
in
and
lret
test
jns
addb
jne
cld
lea
push
daa
iret
rcrl
cli
xorl
movsl
dec
js
mov
pop
pushf
ja
mov
mov
imul
sub
mov
imul
and
in
das
cmpl
out
add
mov
aam
sbb
pop
pop
movl
fidivrs
rcrl
jmp
pop
add
nop
pop
push
dec
xor
cli
push
popf
cmpsl
jno
cmpsb
out
inc
mov
adc
cmc
add
addl
inc
shlb
loop
xor
cld
mov
pushf
mov
inc
mov
les
ja
adc
jl
ret
mov
call
in
imul
jecxz
mov
das
pop
jmp
xlat
ret
popa
sub
scas
in
insl
inc
int3
cmp
mov
ss
xchg
sbb
gs
mov
pop
inc
xor
arpl
mov
insl
mov
push
popf
pop
xor
push
pusha
sbb
jecxz
test
sti
dec
stc
and
bound
push
xchg
push
pop
inc
ja
pop
mov
test
mov
inc
cmc
mov
popf
std
testb
jne
xor
mov
mov
outsb
repz
fwait
mov
lahf
mov
fistpl
sbb
cwtl
or
pusha
sub
fstps
or
fcoms
jg
sbb
pusha
outsl
testb
xor
mov
jne
mov
mov
mov
and
aam
std
insl
cmp
arpl
or
xor
add
push
lea
inc
sbb
bound
out
pop
pop
icebp
xor
jle
cs
xchg
in
dec
sub
arpl
aad
cld
data16
push
enter
push
mov
mov
cld
mov
mov
loop
adc
ror
xor
xchg
cs
out
sbb
jne
iret
cli
loop
jno
sub
xor
mov
loopne
sbb
dec
int
cltd
push
out
xchg
fwait
gs
mov
movsb
pop
aas
add
and
cmpsb
lret
rorb
push
fcomip
ss
lods
test
jecxz
pop
adc
sbb
mov
enter
aas
roll
add
push
add
add
push
add
roll
add
add
add
add
add
add
add
add
add
roll
add
add
add
roll
add
add
add
addb
add
in
rolb
add
rolb
add
rolb
add
push
add
push
add
push
add
roll
add
push
add
roll
add
push
add
roll
add
push
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
mov
or
fisubl
out
inc
push
xchg
inc
pop
add
loopne
andl
adc
inc
shlb
xchg
dec
adc
pop
rcrl
sbb
xchg
and
add
mov
mov
and
and
dec
dec
adc
mov
xor
shrl
adc
or
jno
das
cmpsb
cmp
adc
sub
sahf
loopne
lret
mov
mov
jo
bound
push
add
push
pop
cltd
gs
add
stos
test
cmp
test
jns
inc
inc
mov
jo
inc
xchg
aaa
int3
inc
sbb
test
push
mov
mov
sub
or
push
jp
add
cwtl
mov
adc
jmp
repnz
out
cwtl
jns
mov
pop
test
jb
dec
lock
les
das
or
cmp
int3
jns
mov
or
lods
push
push
bound
push
outsb
adc
add
adc
dec
add
add
add
pop
test
imul
xorb
dec
add
in
xor
hlt
fnstsw
dec
add
test
in
cmp
pop
add
jl
sbb
or
ret
ficomps
mov
mov
aam
orb
mov
sub
lds
out
nop
cmp
repnz
sub
xor
loopne
lods
mov
and
inc
call
test
fst
fsubrp
xchg
adcl
mov
cmpsl
pop
sarb
xor
pop
syscall
movsl
mov
test
inc
std
rorb
adc
mov
aaa
xlat
sub
and
push
add
cmp
adc
ss
in
adc
inc
fdivrl
add
popa
popf
pop
cmpsl
adc
cmpb
push
fistpl
push
pusha
add
jmp
push
and
inc
and
or
and
push
lock
xor
or
or
jo
out
mov
aas
add
xor
fcomps
sbb
sub
or
nop
movsl
and
shlb
add
dec
fdiv
lcall
add
shl
push
mov
scas
xor
enter
mov
push
mov
adc
dec
cmpb
and
aam
inc
pop
hlt
mov
or
cmpsl
pusha
mov
sarl
test
scas
jns
lcall
jb
lea
pop
or
xchg
ret
sbb
jle
and
shrb
or
or
sub
adc
adc
xchg
and
and
test
inc
pop
inc
inc
pusha
inc
fs
xor
pop
jo
inc
js
fs
jl
dec
jle
cmp
add
orl
addb
out
and
test
cmp
mov
shlb
or
push
cmpsl
and
and
xor
sub
mov
push
or
mov
aad
sub
inc
adc
xchg
dec
and
icebp
loope
and
into
sar
push
sarb
xchg
adc
sub
push
in
in
adc
ljmp
jns
mov
nop
testb
pop
mov
aas
or
inc
add
and
inc
add
sbb
out
in
aaa
or
dec
mov
popa
ds
inc
adc
mov
or
sbb
sbb
xor
push
dec
sub
sahf
add
adc
pop
or
cmp
xchg
ss
int3
push
add
adc
lahf
cmp
add
sbb
out
ja,pt
dec
pextrw
cmp
fimull
test
stos
adc
xchg
and
sub
roll
xchg
pop
or
adc
pop
inc
in
mov
mov
mov
mov
add
arpl
and
ljmp
adc
adc
aaa
adc
sbb
adc
sub
cmp
insb
pop
add
bound
lds
lcall
jo
js
adc
je
cmp
ds
mov
push
inc
jle
inc
orb
inc
movsl
cmp
aaa
inc
test
mov
or
enter
cwtl
leave
enter
int3
sbb
or
enter
pop
jmp
clc
or
cli
or
test
int
jnp
or
mov
lret
mov
or
or
adc
and
adc
adc
aas
push
adc
sbb
add
push
sbb
outsb
and
outsl
and
out
and
data16
int
add
je
add
add
loopne
dec
enter
rcrb
or
sbb
add
jnp
sbb
push
jb
and
inc
mov
inc
call
jno
loopne
mov
push
or
cmp
pop
or
xor
cli
push
imul
mov
test
add
or
push
ljmp
repnz
xor
sub
add
mov
or
popf
add
lahf
add
movsb
add
test
and
mov
cmp
ja
or
cmpsb
xlat
or
aas
add
add
add
jg
pop
inc
rcrb
inc
aas
xor
in
xor
sub
mov
or
adc
ja
mov
int
repnz
into
mov
cwtl
add
pop
xor
lods
outsb
stc
jb
outsl
add
jns
push
mov
xchg
daa
or
push
cmpsb
movsl
sahf
mov
adc
popf
push
mov
adc
fstpt
add
pop
int
and
leave
add
mov
pop
add
jb
push
jae
push
je
cmp
pop
movb
sbb
mov
xchg
roll
and
pop
add
cmc
mov
pushf
cmp
in
dec
loopne
pop
xor
dec
nop
lret
or
xor
out
lods
or
add
cmp
call
orb
jbe
add
xchg
aas
testl
loope
inc
jne
inc
jp
jl
punpckhwd
add
add
lea
stc
adc
lret
in
adc
adc
sahf
inc
call
mov
mov
xor
inc
movl
jmp
ret
pop
cli
add
add
mov
mov
xchg
sahf
and
adc
adc
mov
push
inc
sbb
inc
sbb
sbb
inc
and
fildl
fadds
adc
xor
or
jbe
or
ja
sub
mov
enter
loope
or
ret
fld
sub
sbbb
adc
add
cmpl
mov
cmpsl
xor
push
pusha
push
sahf
test
ret
sbb
out
adc
je
and
inc
jge
mov
add
sub
xchg
cmpsb
adc
stc
and
dec
adc
xchg
andb
inc
lret
or
mov
adc
push
loopne
aad
dec
xchg
mov
inc
adc
repnz
and
jo
aaa
test
mov
orb
pusha
push
adc
inc
fcoml
or
in
orl
add
and
inc
sahf
dec
push
mov
das
ja
or
add
aam
fisttps
out
add
mov
mov
cmp
pop
cld
add
fidivrs
lds
mov
js
sub
aam
adc
jae
cmp
cs
add
add
xor
add
cmc
mov
sub
fmull
gs
add
xchg
sbb
jmp
ljmp
stc
or
add
repz
sbb
scas
in
mov
hlt
fs
mov
iret
add
or
cs
nop
push
xchg
iret
adc
and
cmpsb
test
add
xchg
pop
rcrb
sub
lods
cmp
xchg
sbb
fwait
pop
and
push
and
ja
adc
push
out
add
or
adc
push
xor
daa
fnstcw
add
repnz
add
aaa
jle
or
cmp
addb
add
inc
pushl
mov
pop
jns
adc
lods
addl
es
jbe
movsb
dec
daa
cmp
add
add
nop
fiadds
imull
mov
push
mov
mov
inc
out
mov
dec
mov
les
das
testl
scas
cmp
add
mov
out
pop
icebp
ficompl
jo
and
inc
xor
xchg
push
movb
jnp
scas
mov
andl
jo
push
push
push
pop
mov
push
mov
add
out
sti
lret
adc
xor
fsts
or
dec
fsubl
loopne
lret
push
rclb
psubq
mov
sbb
sbb
cwtl
mov
push
pushf
mov
mov
lahf
fildl
or
pop
test
adc
nop
and
nop
add
mov
enter
lcall
insl
mov
lcall
popf
daa
or
cmc
imul
jge
mov
push
fldenv
push
add
lea
gs
dec
xor
pop
shll
enter
xorb
sbb
dec
mov
lahf
data16
fldenv
arpl
and
test
xchg
sahf
mov
sub
or
add
movsl
sub
sbb
loopne
leave
xor
or
adc
push
lods
jmp
js
ret
imul
daa
xor
movsb
movsl
mov
lock
pop
stos
or
enter
add
cmp
add
lock
lods
cmpsl
aas
add
add
and
ds
in
test
cwtl
xchg
xor
jnp
cmpsl
push
or
stc
xor
pop
xor
xor
ror
ret
loope
or
test
icebp
mov
add
mov
mov
ret
mov
xor
cwtl
pop
xor
aas
sbb
lret
inc
loope
sbbb
insl
adc
adc
dec
enter
dec
daa
int3
or
jmp
or
int3
incb
dec
mov
push
int3
enter
inc
adc
push
jns
cmp
jbe
aam
and
inc
sti
and
mov
cmp
es
adc
or
xchg
sbb
xor
pop
repnz
int3
hlt
lea
leave
dec
sbb
jg
dec
xorl
andb
adc
adc
dec
mov
cmp
push
cmp
and
add
mov
xchg
inc
jo
gs
add
add
jne
in
mov
inc
clc
jmp
mov
or
sub
cmp
ds
xor
out
add
aad
add
pop
movsb
inc
mov
cwtl
or
lea
mov
and
loop
test
daa
lock
dec
inc
enter
jbe
fisubrl
adcb
pop
add
pop
jns
inc
xlat
sbb
lock
test
inc
mov
dec
add
cmpsl
dec
add
or
cld
dec
adcb
push
jo
fisttpl
push
dec
xchg
or
out
lea
mov
outsl
or
mov
leave
mov
sbb
inc
cmp
repnz
out
dec
scas
stos
sbb
lret
loop
test
inc
xchg
lea
push
or
mov
mov
scas
inc
cmc
cwtl
imul
cld
testb
push
or
add
stos
js
push
out
add
mov
imul
sub
cmp
ljmp
xchg
push
add
sub
xchg
les
flds
out
or
push
dec
pop
insb
add
sub
sub
movsb
fbstp
in
or
aas
sub
dec
test
jnp
and
pusha
cmp
xor
stos
add
je
aaa
repnz
lods
xor
cmp
add
sarb
mov
add
push
inc
daa
push
pop
pop
add
mov
xor
fidivl
div
sub
ljmp
stc
dec
pop
mov
xorb
std
sbb
push
push
shlb
inc
xor
stc
sub
mov
sbb
adc
or
add
mov
sub
int
and
and
cwtl
and
cltd
je
mov
add
xchg
or
jns
clc
inc
xchg
push
mov
out
inc
push
icebp
fwait
inc
or
add
loope
mov
xchg
sub
mov
push
movsl
mov
pop
adc
xchg
lds
sbb
mov
sbb
dec
jl
and
and
mov
pop
lcall
push
jecxz
mov
push
inc
xor
add
lret
mov
imulb
jle
out
gs
mov
and
inc
add
mov
and
pop
jp
dec
aaa
xor
or
aaa
ret
adc
and
mov
add
out
push
cltd
adc
inc
xchg
in
add
mov
dec
iret
cmp
add
mov
cmp
lock
adc
cli
lods
dec
idiv
int
adcl
pop
loop
mov
lea
add
incl
rolb
jo
rolb
jge
add
add
jmp
add
shl
sub
xor
add
call
shll
not
xchg
fisubs
mul
cmpsb
add
mov
jno
roll
test
cmp
jmp
in
add
call
push
sub
out
jne
lret
call
clc
in
adc
add
leave
call
jno
cld
into
testb
or
hlt
bound
shl
pop
add
js
lds
mov
aad
push
push
cs
add
inc
lods
or
xchg
testb
and
shl
mov
ljmp
testl
jne
adc
mov
enter
ret
add
jmp
ljmp
out
adc
mov
lods
inc
xchg
ret
sub
repnz
sahf
ljmp
imul
add
imul
sub
fcompl
inc
jle
jle
add
bnd
fbstp
and
call
pop
mov
filds
loope
and
pop
mov
pop
iret
and
push
movl
mov
outsl
out
cmp
fwait
xchg
in
fucom
ficoms
ja
add
in
outsl
pop
mov
test
cmpsl
rorb
cld
dec
cmp
imul
cmp
mov
test
push
dec
iret
add
and
and
add
pop
pop
clc
les
inc
stc
fistl
dec
mov
adc
cmp
vrcpps
hlt
sbb
xor
add
pop
push
pop
push
pop
mov
adc
xor
xor
imul
push
jg
or
push
dec
sbb
shlb
call
xor
xorl
cltd
mov
sub
flds
nop
ss
inc
lahf
rclb
and
mov
mov
icebp
or
mov
ret
pop
xor
movsl
mov
add
test
push
or
adc
les
fcoml
test
popf
int
pop
xor
sub
mov
fisttpl
imul
or
fadds
xchg
fstps
iret
push
inc
dec
xor
pop
xchg
adc
pop
int
loopne
dec
out
loop
pop
pop
sub
push
xor
ljmp
cwtl
xchg
cwtl
cltd
or
int
sti
inc
inc
cmp
test
jmp
rcr
push
push
dec
out
push
int3
cltd
sub
jne
xor
cmp
rcl
or
xchg
rolb
iret
sbb
rcll
add
mov
push
pop
sbb
cmp
xchg
push
cmp
jno
fiaddl
jnp
adc
jb
rcll
and
xlat
adc
or
ret
ss
jle
jbe
andb
push
lcall
mov
shlb
adc
adc
mov
sub
push
test
inc
dec
pusha
xlat
pop
imul
jae
in
inc
cmp
pop
push
sbb
or
neg
sbb
sub
pop
dec
rolb
mov
fcmovu
pop
and
add
or
test
add
adc
fstp
paddb
inc
push
in
inc
int3
stos
jae
xlat
jnp
pop
and
mov
pop
mov
repnz
orb
and
in
push
fistpll
popa
push
jmp
clc
insb
mov
lcall
inc
call
pop
dec
fildl
xor
add
leave
pop
xor
dec
and
aaa
push
rclb
inc
mov
xor
ret
adc
lods
les
jp
lds
cli
adc
push
add
shr
add
loope
das
lret
pop
xchg
pop
mov
inc
dec
es
popa
pop
fdivrl
fldl
sbb
lods
js
out
adc
je
cmp
xchg
add
or
dec
ljmp
pop
adc
add
aaa
push
jns
fsubs
xchg
pop
adc
xchg
shlb
sub
test
nop
jns
and
mov
dec
sbb
and
dec
dec
add
rolb
mov
mov
not
dec
pusha
movsb
cmp
mov
int
test
cmp
push
and
test
test
adc
mov
adc
add
sub
pop
adcb
mov
adc
add
add
mov
xor
xor
mov
cmp
frstor
add
icebp
sub
cs
adc
sub
nop
shlb
sbb
adc
inc
cmc
test
xor
mov
shll
enter
rclb
and
xor
cld
mov
test
scas
sub
push
or
dec
pop
xorb
xor
not
inc
fsubl
ret
mov
int3
movsl
int3
or
inc
mov
int3
arpl
jmp
inc
cs
and
dec
sub
push
jne
repnz
loopne
pop
sub
rcll
neg
out
push
sbb
ljmp
xor
xchg
dec
dec
mov
lods
dec
jno
add
sub
clc
shlb
sbb
or
or
pop
mov
stc
xchg
movsb
cltd
idivb
push
mov
mov
and
sub
rcrb
roll
jnp
mov
xor
lock
mov
ljmp
clc
decb
daa
in
aas
rcll
dec
fcomi
or
pop
dec
sbb
arpl
pop
dec
dec
movsl
bound
mov
jmp
mov
hlt
pop
orb
pop
pop
add
popf
repz
sub
mov
or
mov
mov
pusha
ficoml
repz
jl
and
add
push
cmc
imul
out
mov
test
ds
out
gs
loop
mov
mov
icebp
sub
fdivl
test
jg
das
mov
int
cli
cmpsb
lret
jge
sub
mov
jae
sub
repnz
int3
add
mov
pushf
arpl
subb
repz
ja
adc
movsl
les
pop
mov
mov
sub
push
inc
push
jbe
push
sub
inc
sbbb
sbb
and
xor
test
mov
and
cmp
push
out
xlat
in
stos
inc
inc
stos
es
mov
icebp
jnp
pop
cli
insb
push
sbb
ds
pushf
les
add
or
push
or
push
or
iret
insl
sub
pop
inc
ret
push
cmp
pusha
push
push
dec
add
fs
xor
fwait
mov
lods
adc
add
mov
ja
ds
fmuls
or
adc
adc
push
push
lahf
sub
call
or
ret
bound
add
xchg
dec
jno
dec
mov
test
jae
decb
xor
push
filds
int3
pop
sbb
clc
adc
add
jne
mov
xor
adc
dec
mov
int3
dec
in
push
test
xlat
push
add
orl
adcb
xor
xchg
or
sub
inc
xor
std
cmp
jg
repnz
out
stc
mov
ja
xorl
lahf
xchg
xor
andb
mov
jecxz
sbb
ja
or
lods
xor
neg
cmpsb
hlt
jp
push
jecxz
mov
adc
pop
add
pop
push
add
sbb
outsl
or
xchg
out
push
add
call
xchg
test
xchg
push
sbbl
add
shr
mov
loopne
fimull
jp
push
mov
test
jg
jno
pop
mov
rolb
jle
inc
mov
daa
enter
inc
bound
aam
mov
dec
xchg
mov
loop
popf
cwtl
test
int3
jae
xchg
stos
add
sub
in
and
fiaddl
es
jge
movsl
iret
pusha
add
adc
lock
js
xlat
pop
js
mov
test
push
xchg
ds
mov
and
ljmp
mov
xchg
sbb
test
jb
mov
arpl
dec
nop
ret
jbe
cli
fcomps
and
push
gs
mov
incl
xor
and
neg
and
add
jb
xor
inc
xchg
and
cltd
xchg
mov
shrb
bswap
adc
push
sbb
fadd
push
dec
mov
sub
mov
addb
mov
incb
imul
push
jae
and
bnd
inc
jl
aam
xor
neg
xchg
dec
mov
or
and
dec
xchg
iret
inc
and
add
pop
pop
shrb
bound
push
les
cwtl
fimull
cmp
inc
xchg
test
and
setge
movsb
ffreep
mov
add
sbb
addl
xchg
cwtl
lea
mov
fcompl
push
iret
adc
bound
cmpl
and
add
gs
aad
xchg
dec
or
mov
je
rcrb
adc
not
rol
out
adc
sub
cmp
inc
xor
dec
cmp
inc
or
movsl
imul
ret
arpl
leave
cmp
push
aas
xchg
push
cmpsb
mov
aad
mov
or
fsubrl
add
lahf
dec
sbb
sahf
into
inc
mov
and
mov
insl
mov
adc
inc
mov
pop
inc
adc
add
repnz
mov
loope
push
dec
test
or
adcb
dec
test
and
adc
data16
rcll
mov
orb
cmp
inc
mov
movsl
scas
dec
inc
inc
push
cld
mov
jb
add
insb
cmpsl
cmp
mov
leave
push
pop
jecxz
negb
imul
fsts
clc
je
adc
jb
incb
dec
ja
fsubl
sub
shlb
xor
inc
push
dec
xor
rcl
rorb
addr16
inc
movhps
push
mov
adc
cmc
xor
dec
push
adc
adc
gs
inc
xor
jno
hlt
jmp
nop
rorb
push
add
sbb
inc
or
test
insl
add
dec
and
ss
inc
add
jns
adc
pusha
sbb
push
aad
pusha
cmc
cmp
test
test
pop
inc
inc
sarb
push
call
sub
out
lods
leave
xchg
std
shl
push
daa
in
push
add
faddl
and
inc
adc
loopne
cwtl
cmp
add
shl
loopne
not
jmp
mov
jle
stc
je
popa
int3
push
das
inc
xchg
mov
call
dec
call
mov
dec
negb
or
add
lock
push
inc
or
adc
outsb
dec
mov
out
xchg
xchg
cmp
mov
fmul
dec
iret
mov
sti
or
lea
and
cld
clc
cltd
mov
and
pop
andl
movsl
adc
push
pop
jo
out
push
xchg
pop
sub
inc
add
inc
sub
clc
aam
or
hlt
xor
mov
and
add
imul
sub
inc
xor
in
xlat
and
inc
add
push
out
fldenv
jge
fmulp
testl
fistl
addb
imul
add
pop
btr
inc
cltd
adc
sbb
xor
incb
subl
fisttpl
fmull
push
cmp
xor
jmp
das
push
sarl
mov
or
cmpsb
lahf
xor
addr16
movzwl
mov
test
pusha
pop
mov
xchg
sub
adc
xchg
xchg
xchg
fmul
js
icebp
xchg
mov
pop
test
sub
add
ret
sbb
xor
loop
add
pushf
xlat
mov
movsl
inc
out
sahf
std
insb
pusha
inc
fldt
scas
fbld
rclb
mull
add
jecxz
ljmp
das
jo
nop
ret
andb
inc
push
in
xor
loope
addl
enter
inc
mov
cmp
xor
mov
mov
inc
lahf
not
test
inc
xor
and
jns
sbb
popf
addl
or
pusha
inc
adc
add
push
loopne
push
mov
push
sub
push
and
dec
adc
into
popf
scas
shll
scas
sub
sub
or
test
frstor
cltd
ja
mov
leave
sub
hlt
mov
out
data16
add
fwait
push
pop
pop
adc
push
lock
push
pushf
adc
int3
lds
jns
mov
ret
loopne
xchg
sbb
jb
test
add
mov
or
dec
enter
cmp
divb
xchg
mov
push
add
jl
loop
push
xchg
jp
or
sub
mov
cmp
and
shll
cmc
and
add
ror
cmpsl
xor
scas
nop
push
push
outsl
push
mov
rcl
rorb
xchg
sti
mov
inc
or
push
hlt
mov
in
dec
cld
mov
xor
movsb
ljmp
sub
sub
xchg
test
xchg
pop
fwait
das
and
xor
stos
add
cmpsl
jne
test
imul
add
inc
dec
jne
and
les
lret
lock
lock
dec
leave
sbb
fadds
movsb
push
daa
into
dec
mov
dec
test
mov
xor
in
push
sbb
test
mov
xor
jp
dec
inc
cmpsl
test
add
sub
add
mov
push
cmp
int3
sub
xchg
cmc
bts
cwtl
popf
or
int3
mov
lret
idivl
mov
lret
adc
sti
jle
push
xor
or
xlat
sbb
incb
cli
lret
cmp
icebp
add
and
mov
xor
pushf
or
icebp
cld
cmpsl
sbbb
sub
lds
sahf
sub
andb
fimull
mov
add
jno
inc
pop
test
pop
jmp
pop
das
mov
inc
inc
push
dec
pop
enter
rolb
popa
and
pop
shll
mov
js
out
sub
pusha
insl
add
mov
jb
arpl
pushf
xchg
push
and
nop
dec
in
push
aas
add
add
sbb
ds
pop
mov
pop
or
leave
cmc
mov
add
mov
push
mov
cmp
mov
mov
and
xor
out
mov
jp
dec
and
imul
dec
xor
hlt
insb
sbb
jbe
or
dec
imul
ret
sbb
or
inc
and
add
or
push
or
dec
add
mov
sbb
popa
sub
cwtl
xchg
push
mull
insl
dec
xor
in
pop
cmpsb
in
sub
popa
scas
cwtl
cltd
push
jge
nop
inc
and
xchg
sbb
aad
or
push
xor
add
mov
jbe
push
cmp
and
dec
mov
xchg
aad
xchg
add
dec
shr
inc
push
pop
fs
pop
iret
inc
loope
fs
pop
add
test
std
inc
cltd
movsb
push
push
icebp
xchg
mov
dec
scas
sti
pop
or
inc
jmp
pop
popf
mov
cmp
xchg
add
lret
push
sarb
push
punpcklwd
std
mov
in
decl
lcall
cmpsl
sbb
sub
xor
sbb
jb
dec
mov
add
aad
int3
je
cld
mov
pop
and
or
cmp
dec
mov
and
not
shrb
addl
mov
pop
femms
add
fisubl
addl
add
pop
into
shlb
cltd
xchg
push
in
cs
daa
daa
sbb
xchg
or
or
or
imul
push
lret
loopne
sub
adcb
cmp
or
cmp
pop
adcb
sbb
add
pusha
out
xchg
mov
add
xor
mov
jecxz
repz
add
sbb
stos
inc
les
andps
rolb
jmp
sbb
into
test
mov
and
mov
aad
sub
stos
inc
sarb
inc
ja
xor
and
jo
cmpsl
mov
dec
in
clc
adc
mov
ljmp
popf
out
push
ficompl
jno
and
dec
test
test
push
addl
clc
fwait
push
lods
dec
mov
jp
push
xor
mov
gs
adc
sub
add
in
xchg
lock
out
sbb
lcall
loop
repnz
fisubrs
and
pop
test
jmp
adc
jnp
das
and
hlt
adc
sti
jle
bound
adc
outsb
mov
push
push
pop
popf
or
rcll
fcoms
rclb
dec
add
maxps
xor
jb
mov
out
push
inc
je
leave
jp
adc
dec
fnsave
mov
adc
push
pop
inc
pop
add
rcll
dec
push
mov
fnstsw
add
xor
add
or
fwait
loopne
or
jns
mov
pop
inc
bt
and
out
add
arpl
xchg
add
stos
sbb
ret
xchg
xchg
dec
add
rclb
sbb
xchg
adc
sub
sbb
sub
xor
fdivr
push
dec
xchg
out
inc
sbb
xlat
mov
adc
clc
hlt
out
adc
into
incb
xchg
cmp
xchg
aad
pop
cmp
dec
testl
fnstenv
mov
push
ror
and
addr16
cwtl
sub
andb
cmp
adc
and
out
cmp
push
push
pop
sub
jnp
shlb
daa
jmp
in
sarl
adc
stos
xchg
mov
lods
adc
std
or
cmpsb
pop
lret
sub
add
loop
push
push
addl
pop
mov
mov
adc
inc
xchg
repnz
pop
imul
into
cmpsb
xchg
add
adc
add
push
test
sub
pusha
mov
divl
cmp
mov
mov
inc
enter
xor
out
mov
inc
adc
or
pop
or
xchg
mov
orb
xor
cwtl
add
pop
scas
jle
aas
repz
or
mov
cmp
std
add
lahf
mov
jne
test
imul
cmp
sti
xor
add
bswap
cwtl
mov
or
lret
fwait
shll
aam
and
shl
add
cmp
call
pusha
dec
jns
test
test
add
adc
fcoml
pop
lret
push
les
neg
mov
inc
xchg
mov
or
push
push
sbb
adc
out
and
mov
and
mov
scas
loopne
outsl
jmp
mov
push
mov
and
btc
push
xor
test
inc
js
test
int3
cwtl
cltd
mov
adc
push
mov
sub
mov
nop
rorl
ret
repz
xchg
push
pushf
xchg
movsl
adc
ja
mov
testl
xchg
out
inc
mov
push
mov
xor
or
or
cmp
std
fiadds
aad
mov
mov
out
xor
add
test
es
mov
mov
aam
dec
sbb
out
les
and
jbe
fimull
data16
test
cli
xchg
mov
rcrl
add
repnz
aad
add
add
cmc
dec
sbb
sti
sub
add
mov
mov
add
outsb
pop
or
neg
xor
xor
pop
or
es
sbb
xor
sub
push
sbb
adc
dec
mov
and
sti
incb
repz
mov
dec
add
cmp
push
mov
shlb
insl
inc
insb
sbb
popf
inc
add
adc
pop
xchg
adc
in
aas
xchg
les
mov
enter
inc
cmp
dec
shrb
mov
clc
pop
cmp
rorb
pop
cmp
pop
dec
fadds
jno
cmpsb
outsb
pop
xor
xor
loope
cli
add
xor
cmp
push
dec
push
push
lret
mov
es
insl
in
and
cmp
cmp
dec
int
or
mov
leave
decb
push
sub
jnp
rolb
cmc
xor
lret
icebp
and
movsb
dec
mov
mov
dec
push
test
dec
sub
cmp
lret
aam
or
repz
xchg
imul
xor
jbe
xorb
sbb
mov
les
inc
pop
lods
dec
cmp
imul
insb
adc
je
test
enter
dec
fisttpl
mov
pop
inc
push
sub
out
insl
movaps
fldt
mov
add
not
push
and
stc
loop
push
dec
pop
mov
lea
inc
test
push
xchg
mov
test
les
jg
cwtl
or
in
dec
sub
jne
and
push
aas
fiaddl
mov
push
ret
or
mov
pop
leave
mov
add
loop
cmp
lds
sbb
lds
pop
jnp
test
inc
and
jnp
push
add
pop
push
inc
pop
push
adc
scas
inc
mov
xchg
jns
lds
push
pop
and
pop
mov
jb
add
jnp
push
out
fisubs
pop
sub
jmp
xchg
ja
mov
xchg
scas
icebp
sub
xchg
push
loop
andl
test
push
jge
test
sub
pop
mov
pop
out
leave
ficompl
out
popl
jmp
or
and
sbb
xchg
sbb
call
pop
jns
mov
icebp
mov
lcall
leave
cld
sub
xchg
mov
jge
jnp
mov
test
push
out
inc
jge
fcmovnbe
test
aad
movsl
xchg
rcll
push
xchg
ljmp
dec
mov
sbb
lcall
rclb
jg
pop
and
aam
xor
xchg
fidivrl
jns
enter
mov
aad
movsb
bound
aad
ss
adcl
xor
pop
xor
iret
mov
jb
mov
mov
push
leave
dec
in
adc
lea
xchg
jecxz
rol
lcall
push
loope
xchg
push
mov
pop
jecxz
les
add
lock
sbb
cmpsb
out
push
test
outsb
lods
cli
aaa
and
pop
mov
lea
jno
xor
xchg
fstps
subl
mov
push
xchg
inc
loop
mov
rolb
push
and
loop
lea
jp
popf
pop
dec
sub
scas
sub
loope
xchg
add
int
mov
pop
sahf
repnz
and
push
mov
mov
fucomip
ffree
pusha
pop
push
fistps
xchg
and
push
ret
inc
push
jmp
loop
push
or
cli
inc
icebp
lds
xor
fpatan
inc
test
xchg
sti
pop
test
pop
je
dec
add
dec
pop
add
sbb
add
aam
pusha
dec
pop
push
leave
movsl
int3
push
push
sbb
in
mov
mov
sub
push
or
adcl
leave
jbe
insl
push
test
cwtl
or
sahf
mov
in
mov
rolb
xchg
xchg
jmp
dec
inc
leave
addr16
nop
add
hlt
push
mov
adcb
mov
addr16
in
div
xchg
repnz
xor
je
sub
dec
jmp
add
idivb
dec
mov
pop
in
sbbl
int3
lret
add
sub
rolb
pop
aad
or
mov
sbb
inc
mov
lcall
roll
adc
cmc
push
lea
lahf
enter
imul
stc
fwait
aaa
inc
clc
adc
push
orl
or
sbb
ret
adc
enter
lret
repnz
fwait
push
outsl
push
ds
bound
or
jae
fwait
push
xor
sub
add
sub
iret
lea
rorl
pusha
aas
in
jmp
xchg
mov
daa
and
movl
mov
push
mov
fs
push
enter
jmp
jp
rcr
push
popa
and
jle
xor
outsl
fs
movsl
test
sbb
stos
or
sbb
xchg
adc
fsubrp
addr16
add
and
cmp
adc
or
mov
and
jmp
sub
add
fadd
push
stc
lret
shll
add
mov
jae
in
jne
loope
cmpsl
in
sbb
pushf
mov
adc
xchg
loopne,pt
inc
mov
dec
xchg
cmc
adc
push
jge
insb
call
dec
lahf
sbb
negb
in
sub
popf
popf
mov
fdivrp
dec
cltd
mov
sahf
cmp
push
daa
mov
lea
or
mov
in
std
sub
sti
cmc
xor
loop
add
test
add
stos
push
int3
inc
xor
aam
pop
and
lahf
push
and
push
loopne
jecxz
dec
rcrl
sub
inc
int3
xchg
and
pop
icebp
into
mov
inc
xchg
add
sub
sub
pop
lret
adc
jae
popf
push
in
mull
daa
adc
pop
jge
loop
test
sub
into
xlat
mov
in
test
aas
inc
sbb
mov
sbb
mov
push
mov
fstl
pop
in
jl
sub
push
loope
inc
scas
stc
rolb
arpl
adc
jmp
mov
js
adc
mov
xor
inc
subb
lret
dec
cmc
sub
cmp
mov
sub
inc
stos
cmp
int
divb
mov
mov
jae
insb
pop
add
push
out
adc
xor
or
push
jbe
insb
xchg
dec
mov
ljmp
or
push
xor
adc
shl
lcall
repnz
xchg
push
adc
mov
or
popf
mov
pop
ss
out
out
js
push
icebp
jne
fldl
fs
movb
push
mov
adc
sysret
addl
dec
movsl
sarl
fsts
cmp
dec
outsl
jbe
dec
push
std
push
jne
out
xchg
out
push
daa
xchg
adc
pop
and
lret
xchg
inc
enter
jns
mov
mov
inc
dec
aaa
xchg
fisubs
jnp
movsb
and
fs
psubsw
push
or
xor
lcall
lahf
or
fisttps
loope
pop
pop
cmp
add
nop
sahf
faddl
or
and
cmpb
out
movsb
pop
adc
mov
lcall
cmpl
les
mov
mov
cmpsb
or
mov
pop
mov
xchg
mov
out
fwait
iret
sub
xchg
push
mov
fisttpll
mov
sub
mov
mov
cltd
lcall
adc
sub
push
mov
faddl
cmp
sub
lods
pop
je
clc
lahf
ret
pop
inc
and
stc
movsb
sub
fpatan
inc
rcl
jecxz
call
orb
jmp
lds
call
lret
and
cmp
sahf
stc
xchg
xchg
testb
ret
sbb
outsl
sbb
adc
shrl
jge
les
xor
adc
dec
mov
lret
or
lds
push
stos
stos
mov
xchg
sbb
adc
pop
in
test
sbbb
push
push
dec
sub
mov
pop
mov
popa
cmp
lods
add
xchg
xor
stc
inc
jo
lcall
lock
sbb
dec
sahf
xlat
ljmp
sbb
adc
cld
sbb
rolb
cmc
popf
stos
jg
int
adc
cmp
lcall
pushf
sahf
loop
adc
aaa
test
sbbl
rol
cmc
xchg
repnz
sub
pop
xchg
je
jl
scas
call
cmpsl
xorl
fcomp
mov
add
mov
out
xchg
rclb
jp
sbb
andl
adc
sbb
sbb
imul
cmpsl
leave
sbbb
loop
mov
jae
push
std
loop
fistpl
dec
cmpsl
xchg
sub
xchg
insb
sub
dec
sahf
adc
in
jl
push
add
dec
mov
xchg
xchg
fwait
mov
loop
ljmp
loope
js
lret
repnz
xchg
ret
inc
jnp
cmp
inc
xor
aam
adc
in
xor
in
jg
testb
jecxz
jbe
push
sub
lahf
add
jb
cltd
push
mov
into
mov
push
popf
repz
xchg
fcoms
loopne
cmpsl
mov
test
mov
mov
push
ret
or
mov
imul
pop
in
jmp
adc
nop
sub
fstpl
or
adc
iret
xchg
push
inc
loopne
add
clc
filds
lret
or
push
iret
hlt
fstps
aaa
shlb
cmp
xor
std
std
mov
lcall
push
ret
leave
mov
push
add
out
in
ror
jle
dec
pop
mov
ds
popf
in
mov
mov
stos
pop
mov
or
testl
mov
fistpl
jno
loopne
jecxz
mov
xor
jmp
fnsave
sbb
jb
arpl
fiaddl
mov
inc
and
jle
pop
mov
lds
pop
sbb
xchg
and
sub
mov
sub
mov
mov
dec
xchg
xlat
jl
and
or
jl
out
leave
fwait
subb
nop
or
pusha
lcall
popa
outsl
fiadds
push
push
aaa
cmc
xor
cmp
mov
xor
jno
imul
xchg
sbb
mov
push
fdivr
cmc
push
inc
call
dec
icebp
mov
push
shlb
adc
inc
sub
aam
push
movsb
xor
dec
rolb
shrl
xor
add
sub
xchg
jecxz
enter
and
and
or
outsl
clc
push
mov
sub
ja
sbb
enter
push
daa
push
es
inc
sbb
andb
adc
or
jge
xor
ret
jbe
adc
aas
mov
das
lock
dec
cmp
sbb
adcb
dec
add
cmp
addr16
sbb
add
xchg
mov
fcmovnu
xor
int3
mov
lahf
adc
push
sub
int
pop
outsb
lret
jp
jno
inc
sbb
fwait
mov
xor
add
mov
aad
into
and
mov
daa
inc
mov
repz
jnp
adc
xchg
and
push
xor
repz
xlat
adcb
outsb
cmpsl
sbb
dec
mov
nop
mov
jo
rolb
xchg
push
addb
popa
xchg
negl
mov
jno
jno
out
ret
mov
and
jecxz
jo
lahf
invd
mov
addr16
int3
repnz
stos
add
and
gs
fbstp
mov
pushf
repz
push
ss
ret
jmp
lods
pushf
fwait
rorl
rolb
adc
shlb
outsl
js
push
je
call
mov
xor
add
lahf
cmp
les
xchg
inc
mov
xor
sbb
push
or
ret
cmp
sbb
inc
lods
push
loopne
mov
pop
aaa
lret
rol
adcb
mov
dec
outsl
cmpsl
lods
xor
xor
stos
push
inc
dec
jmp
mov
pushf
sbb
lods
pop
jnp
pop
test
gs
sbb
pusha
aas
aad
out
and
loopne
cmp
xchg
repnz
push
mov
inc
adc
lret
negb
loop
or
movsl
inc
xchg
xchg
xchg
cwtl
adc
or
push
mov
enter
or
testl
aam
or
ds
cwtl
ds
ficompl
inc
int
stos
xchg
or
clc
push
inc
hlt
xor
jno
enter
adc
xchg
ljmp
aam
add
cmp
ss
sub
shlb
jno
popf
out
dec
sbb
dec
scas
repz
popf
and
nop
and
out
mov
jbe
add
mov
cmp
imul
test
cmc
cmp
test
ret
mov
cwtl
adc
xchg
inc
aad
inc
insl
dec
xchg
lret
loop
xchg
lds
testb
cmc
mov
xor
popa
in
or
xchg
or
xor
xchg
hlt
in
cmpb
adc
xlat
sub
test
movsl
out
xchg
cwtl
rolb
out
cmp
scas
test
xchg
or
or
cmpsb
mov
not
dec
or
dec
jmp
jle
aam
sbb
ret
add
or
push
mov
jnp
iret
jbe
jns
jge
pushf
repnz
stos
mov
stc
lods
cli
jmp
inc
pop
cmp
xchg
pop
sub
lock
sbb
repnz
call
jecxz
jno
xchg
movl
push
scas
hlt
lds
cmp
popf
push
hlt
sahf
add
and
jae
pop
lret
adc
cmp
sahf
push
out
imul
loope
xchg
dec
push
cmp
jmp
lret
call
jbe
sahf
aam
negl
dec
mov
ds
sbb
cmp
or
push
add
int3
test
adc
movl
leave
pop
clc
xchg
jmp
push
lods
out
add
xor
loop
inc
ja
or
ja
mov
das
sbb
fdivrs
adc
push
sub
xchg
mull
in
add
ljmp
or
int3
dec
jne
cwtl
fwait
xorl
sbb
in
sahf
push
mov
jmp
xor
inc
jp
xchg
shl
out
or
out
cmp
lahf
ds
mov
jp
mov
cli
imul
loop
cltd
mov
popf
mul
sbb
ljmp
add
xorl
mov
in
movsl
xchg
push
adc
mov
push
add
add
lock
push
lods
mov
mov
and
enter
cmp
cmpsb
push
xchg
mov
dec
std
sub
fs
popf
push
lds
add
or
pop
in
mov
sbb
test
rorl
and
xchg
or
fxch
lahf
in
dec
shll
cmp
push
sbbl
push
and
or
mov
lea
push
sarl
sbb
dec
mov
fcoml
adc
in
js
das
lret
mov
nop
cltd
imul
xor
jp
ss
ficomps
push
negb
sub
scas
shl
lahf
imul
loopne
sbb
xchg
or
mulb
push
arpl
popa
push
cmp
mov
loopne
and
pop
xchg
mov
push
inc
imull
add
rorb
in
inc
mov
sub
xchg
mov
addb
inc
or
shlb
pop
sub
frstor
loope
jmp
cmpsb
or
mov
popa
inc
ljmp
cld
jnp
lcall
popf
add
cmp
jae
cmp
cmpsl
mov
div
push
out
or
into
loop
rcr
xor
out
mov
cmp
cmpsb
mov
loop
aam
pop
movsb
and
mov
lock
mov
rcr
sbb
cwtl
ret
cmp
cmp
pop
cmc
sbb
lock
pop
cmpsl
jmp
mov
sub
in
dec
js
cmpsb
int
dec
and
ja
adc
push
push
or
sub
mov
mov
mov
jnp
push
icebp
fs
lret
enter
adc
adc
inc
xchg
mov
rcl
xchg
mov
aad
push
xor
mov
daa
loopne
fldt
jle
ret
loop
xchg
fisttps
mov
add
dec
adcb
icebp
push
dec
pop
loope
cmp
mov
and
mov
test
push
inc
sub
sbb
ficoml
pusha
ss
loopne
out
xor
jno
shll
xchg
ss
loope
sbb
dec
pop
sarb
cmp
inc
inc
and
cmpsl
xlat
movb
pusha
leave
mov
std
or
in
jg
adc
mov
scas
push
test
or
and
in
ja
adc
rcrl
mov
mov
dec
jb
icebp
faddl
jle
cmpsb
jnp
mov
imul
divl
pop
mov
outsb
add
xchg
std
push
push
les
pop
insl
push
or
mov
loop
adc
and
call
rcrb
push
dec
pop
gs
xor
cmp
loop
xchg
and
insb
into
mov
pushf
sub
lret
popa
cmc
add
hlt
imul
ret
cs
cmpsl
push
xchg
out
cmp
xor
imul
push
loope
add
lods
or
cld
push
and
addr16
out
inc
loope
dec
inc
dec
mov
and
ror
sbb
icebp
out
out
mov
popa
scas
or
sbb
mov
test
paddq
gs
cli
outsl
cmp
pop
ljmp
cmp
dec
in
in
loope
cmp
adc
inc
test
xor
es
pop
pop
sbb
lea
or
mov
sub
sub
int3
movsl
scas
loope
inc
pop
ds
jo
test
leave
outsb
cmpsb
mov
adc
je
mov
imulb
nop
jbe
ficomps
popa
sbb
xor
sub
xchg
mov
mov
dec
movsb
popf
aam
xchg
into
cli
jg
movsl
xchg
pop
test
les
lea
jg
stos
shl
loopne
jnp
sbb
inc
ficomps
mov
mov
das
sub
pop
ret
cmp
mov
fmuls
or
ret
dec
adcb
fadds
mov
mov
cmp
out
adc
test
test
push
icebp
lcall
mov
les
out
rcrl
loop
cmp
call
das
and
cld
in
les
jb
sub
cs
repnz
mov
lds
or
lret
imul
inc
hlt
mov
inc
in
nop
sbb
loope
add
pop
push
dec
pop
data16
dec
sub
sbbl
dec
dec
sbb
aaa
xchg
adc
mov
loopne
mov
sbb
inc
call
aas
sbb
popf
out
xchg
in
xchg
adc
inc
ret
loopne
mov
loop
jbe
inc
jecxz
inc
pop
in
jb
js
pop
popl
cs
in
push
daa
movsb
xchg
hlt
sbb
enter
insl
movsb
leave
add
mov
jle
test
into
jbe
addr16
push
and
pop
cltd
xchg
dec
loop
ljmp
sti
xchg
ss
movsl
sbb
pop
mov
push
pop
in
mov
adc
rcrb
ret
pop
int
adc
inc
cmp
push
icebp
cmp
sbb
out
or
loopne
movsl
add
pop
adc
or
test
fcoml
inc
stos
ds
xchg
push
dec
add
or
imul
std
or
jl
stos
xchg
and
leave
into
jbe
xchg
movsb
pop
add
pop
in
into
pop
out
loop
mov
push
push
push
xchg
sahf
fsubrs
dec
xor
lret
jge
in
into
sub
and
iret
xchg
pop
xchg
pop
shrb
fdivl
push
mov
xchg
int3
dec
push
add
dec
ret
loope
or
cmp
mov
subl
lahf
fstps
push
pop
push
mov
cmp
mov
push
out
inc
xlat
mov
inc
shrl
jno
push
aas
bound
jns
xchg
aam
mul
fs
popf
lahf
push
cmp
mov
xchg
cmp
mov
shlb
aam
cmc
ror
inc
and
fcmovbe
addl
cmc
sahf
pop
pop
mov
loop
out
mov
sbb
jno
or
xlat
mov
mov
dec
clc
add
xchg
mov
movsl
test
mov
andl
stos
add
push
aad
push
jne,pt
mov
pop
adc
dec
mov
lock
push
pop
jmp
loopne
cmpsb
loopne
lea
push
fists
roll
loop
aaa
mov
xchg
push
test
sub
or
dec
sub
es
sbb
xchg
mov
xchg
lds
pop
dec
sti
pop
push
in
mov
pop
movsb
inc
adc
push
xchg
ss
mov
adcl
push
pop
in
inc
negb
test
mov
pop
fdivrs
fisubs
ds
shll
xor
pop
setp
subl
repnz
mov
sahf
jns
addb
and
push
dec
arpl
or
cwtl
fsubr
shll
jecxz,pn
add
sbb
ret
std
adcl
mov
test
in
jge
in
push
in
inc
jle
jns
mov
dec
ja
xchg
fldlg2
add
or
fstpt
imul
pop
mov
int
pop
pop
lret
xchg
mov
mov
jns
loopne
pop
xchg
pop
cmp
pushf
pop
cmp
std
push
shr
rcl
xchg
lcall
out
push
cmp
push
mov
sub
mov
xlat
inc
js
fstps
xchg
fnstenv
mov
xchg
add
cmpsb
pop
rcrb
movb
push
pop
mov
mov
adc
nop
orb
lock
stos
arpl
adc
xchg
mov
lds
rorb
xchg
inc
cmc
into
add
mov
and
cwtl
mov
inc
outsl
loope
adc
cmp
push
and
lods
lods
andb
sahf
fidivrs
adc
push
mov
aaa
cltd
fwait
cmp
call
pop
aas
lds
jnp
inc
cmp
sub
cmp
repz
sub
mov
mov
push
shrl
xor
lahf
mov
aad
lods
in
lahf
loope
sbb
push
aad
cld
std
mov
and
mov
das
mov
sub
icebp
dec
jmp
scas
js
adc
in
mov
movsl
lea
aas
int3
test
lcall
fcmovnu
lret
int3
mov
arpl
adc
mov
icebp
add
pop
jmp
mov
and
fiadds
xsha1
cmpsb
or
clc
xchg
arpl
sbbb
adc
push
xor
cwtl
test
fnstcw
adc
and
inc
test
cmp
fs
sbb
xchg
addr16
sahf
loope
sbb
stc
sbb
daa
out
loop
loopne
dec
divb
cld
ss
leave
fldcw
sub
inc
add
push
add
mov
ret
jp
test
push
daa
inc
or
jno
mov
mov
pop
popa
loope
inc
push
add
pop
imul
insl
ljmp
daa
add
aaa
xor
mov
adc
shrb
pusha
xchg
mov
or
es
out
test
mov
ret
mov
adc
icebp
stc
or
mov
add
loope
sub
inc
sub
shrb
pusha
xor
into
lahf
test
add
jge
out
cmpsb
adc
daa
inc
pop
push
mov
pop
push
jmp
mov
jl
or
adc
mov
push
fisubl
jmp
fisubrl
mov
iret
mov
filds
test
cmc
mov
das
fdivrl
jp
lods
pop
mov
orl
push
inc
sar
pop
out
out
pop
or
jle
add
cmp
cs
mov
or
popf
lret
hlt
mov
adc
push
aad
in
pop
dec
xor
adc
push
add
fisubrs
cmpsl
mov
mov
aaa
out
and
notb
xor
inc
adc
and
adc
in
lds
sbb
fistpl
or
adc
push
or
mull
jmp
in
loope
xor
add
or
jg
dec
sbbl
es
out
ret
popf
shll
mov
das
dec
fimull
ret
mov
mov
push
ret
add
adcl
enter
sbb
nop
mov
movsb
sub
cltd
and
pop
sbb
mov
ds
mov
mov
in
out
jo
lret
ljmp
leave
call
lret
mov
mov
bnd
and
imul
mov
jmp
add
mov
push
jne
fcoms
scas
ror
cmp
add
push
push
fdivl
enter
xor
jo
sbb
aaa
leave
test
or
dec
or
mov
lods
cmp
lods
mov
imul
mov
sbb
dec
xor
call
sub
xchg
pop
pop
xor
push
ficomps
add
pop
sahf
mov
or
gs
ljmp
or
das
out
lea
or
imul
mov
out
inc
add
add
sbb
push
mov
sbb
scas
cli
mov
mov
pop
jns
lret
mov
adc
aam
loopne
xor
ret
ss
bound
cmc
or
pop
push
test
inc
rorl
lock
jnp
adcl
in
mov
adc
gs
mov
xlat
loopne
lret
xchg
stos
and
pushf
pop
jo
push
les
lods
mov
dec
sbbl
xor
mov
aad
aas
sbb
cmp
push
sbb
inc
sub
aad
xor
mov
nopl
push
mov
mov
xor
adc
std
adc
imul
xor
push
negl
pop
test
sbb
pop
pop
insb
xor
push
cmpsl
sbb
test
push
icebp
test
jge
xchg
mov
mov
js
push
sbb
ds
dec
pop
testl
ficoms
mov
xor
in
clc
sahf
das
jl
enter
test
sbbb
pop
lahf
sbb
xchg
jecxz
mov
imulb
sub
mov
jge
std
dec
loope
ret
enter
push
pop
push
xchg
movsl
cli
or
lds
mov
das
icebp
sbb
sub
adc
mov
cltd
sbb
jne
fsin
jl
mov
fmuls
jl
adcb
xchg
cmp
rcrl
add
cmp
sub
sbb
dec
imul
xchg
jb
movsl
lea
sbbb
inc
ss
or
push
or
mov
inc
push
icebp
mov
sbb
movb
clc
rcll
std
pop
ds
lods
add
insl
lret
xchg
fimuls
loop
movsl
push
fldl
out
int3
jge
ror
adc
sub
adc
add
cwtl
mov
add
pop
and
push
cmpsb
adc
insl
imul
movsb
dec
push
and
inc
ss
sbb
aad
xchg
xor
inc
adc
sbb
push
in
jb
sbb
mov
add
call
lods
ljmp
js
mov
jae
cmp
or
je
pop
ss
mov
out
loope
fsubs
jmp
or
out
dec
lahf
jecxz
out
rclb
sbb
adcl
imulb
fisttpll
insb
jecxz
sbb
out
inc
call
fwait
ret
fildll
mov
or
test
add
cmc
push
xchg
cmp
loop
sbb
ss
pop
test
movsb
push
icebp
inc
ret
mulb
cmp
or
cwtl
xchg
sub
mov
xchg
lods
sbb
mov
cmp
lock
cmp
pop
xchg
daa
dec
and
jge
xor
sbb
mov
aad
cmp
dec
imul
xor
roll
mul
pop
int
xchg
mov
in
repz
ja
daa
sbb
sahf
es
xlat
jmp
lock
sbb
sub
add
fcompl
add
fcompl
add
xchg
sti
jno
gs
mov
or
or
sbb
fcomps
cmc
sarl
ret
inc
popf
sbb
xchg
adc
minps
add
xchg
test
enterw
dec
imul
mov
push
pop
xchg
imul
cmp
mov
std
inc
outsl
add
fdivr
jo
mov
movsl
nop
lret
int3
std
hlt
fdivs
push
jg
rclb
inc
push
fmull
jmp
imull
out
adc
adc
imul
call
lds
in
xor
movsb
faddl
sub
xchg
movsb
adc
ljmp
rcr
and
ffree
xchg
ljmp
adc
cmc
aad
in
sti
pop
push
shll
push
xchg
mov
leave
xchg
dec
mov
testb
mov
add
shlb
movsl
mov
jecxz
pushf
sahf
sbb
mov
fmul
xlat
cmp
pop
pushf
adc
mov
mov
cltd
and
lock
dec
addr16
adc
lretw
arpl
or
jb
dec
xchg
mov
cmp
sub
enter
mov
test
cltd
mov
das
jecxz
pop
iret
test
call
stos
pop
lock
mov
jecxz
cltd
fwait
cmc
or
or
movsl
lcall
lods
add
dec
lret
adcb
adc
jmp
jo
or
pop
xchg
lds
pop
mov
loope
fldt
sub
dec
aam
xchg
xor
ret
or
loope
loopne
ss
dec
lock
jae
roll
loopne
sahf
loope
loop
mov
cmpl
mov
and
xchg
stc
xchg
iret
xchg
jae
and
and
mov
mov
cmpb
sub
push
xor
sbb
mov
ss
push
movsl
adc
loopne
les
pop
inc
push
sti
push
test
imul
sub
mov
mov
jbe
test
jecxz
loop
pushf
nop
add
flds
sti
leave
lahf
arpl
jno
xchg
or
aaa
dec
xchg
sub
sbbb
mov
imul
sahf
xchg
outsl
negb
sbb
imul
sbb
aaa
adc
leave
hlt
repnz
imul
mov
nop
bound
enter
cmp
push
mov
push
xchg
out
fcmovb
xchg
imul
lret
pop
mov
idivl
clc
mov
mov
dec
push
das
pop
jl
xor
pop
in
rcrl
add
dec
add
jge
push
lret
insl
sub
cmc
xor
add
je
pushf
xchg
jmp
ljmp
pop
out
push
xchg
sar
sub
test
orb
cmc
cmp
lea
sub
pushf
lcall
push
rclb
outsb
dec
cld
and
mov
xchg
dec
xor
sbb
arpl
sarb
in
lahf
push
scas
shrb
shl
and
push
leave
and
sbb
popf
pop
xlat
ds
ds
mov
or
dec
mov
shll
jl
adc
add
sub
and
push
sbb
dec
mov
xchg
iret
cmc
test
push
inc
idiv
test
cltd
cld
cmp
lds
push
lahf
iret
dec
pop
and
pop
adc
outsb
add
int
lahf
les
insb
call
test
aad
jbe
sub
xchg
or
dec
notb
cmp
inc
mov
xlat
es
in
or
push
mov
aam
push
jo
loop
lret
out
adc
leave
sbb
push
push
in
and
xchg
es
lea
xor
or
sbb
add
lret
or
mov
dec
mov
movsb
lahf
test
fiadds
call
sub
std
in
fldl
add
mov
aaa
out
icebp
mov
jo
jo
cmpsb
or
cmc
cmp
hlt
sarb
popa
movsl
jg
fistpl
xchg
popa
stc
je
leave
out
pop
sub
int
dec
xchg
sbbl
ret
jle
flds
in
push
lea
fidivl
jnp
imul
push
sbb
pop
mov
dec
loopne
movsl
outsb
dec
fdivr
dec
testl
mov
int
xchg
jle
aaa
mov
movsl
cmp
call
fsubl
mov
cmp
push
movsb
cld
push
dec
lea
notb
stos
sahf
scas
mov
mov
lret
push
and
push
sub
jle
add
jmp
jg
mov
xchg
pop
xor
imul
jne
mov
rorb
movsl
out
shlb
sarl
xchg
jg
test
xlat
or
in
stos
jge
jne
mov
push
pop
pmulhw
cwtl
push
out
lcall
adc
gs
popf
mov
mov
jecxz
mov
clc
repz
subb
fwait
inc
jnp
mov
mov
scas
shr
movsb
dec
jp
je
inc
jecxz
sub
jg
test
push
sbb
add
inc
adc
dec
or
sbb
lods
lea
subb
test
outsl
xchg
cld
push
mov
pop
xor
sarb
ss
out
mov
xchg
lret
lcall
rorb
push
push
sarb
inc
lods
xor
sbb
dec
adc
bnd
mov
pop
int3
mov
inc
jl
add
xor
outsl
ret
ret
dec
sub
filds
push
cld
addr16
mov
push
je
xor
movsb
adc
xor
sub
mov
fdivs
ret
lock
mov
les
mov
mov
out
loop
or
pusha
cmpsb
popa
aad
aaa
insb
mov
loopne
push
mov
dec
cmpsb
mov
pop
add
les
mov
es
and
adc
aad
dec
cs
xor
jns
jmp
push
cmc
cli
xchg
daa
repz
xlat
rclb
add
push
lods
pop
mov
jecxz
test
jmp
aam
inc
pop
repz
out
lock
in
fisttps
jmp
shl
mov
aad
sbbb
in
cltd
mov
sbb
mov
jmp
mov
pop
mov
and
es
adc
inc
push
mov
dec
lret
dec
or
imulb
out
hlt
jg
xor
cmp
roll
je
dec
data16
test
xor
call
movb
icebp
mov
out
out
mov
or
fldl
data16
mov
repnz
push
jnp
clc
mov
loop
push
movsl
jno
pop
cli
aad
lods
jmp
jbe
cmp
mov
lcall
jmp
addr16
jg
addr16
popf
int3
adc
out
and
jle
xchg
adc
lods
sbb
sbb
dec
mov
or
mov
lods
xlat
xchg
jmp
sub
dec
inc
dec
inc
push
rorb
cmpsl
cmpsl
stos
pop
lods
or
xchg
repnz
add
push
and
test
andl
lcall
cmc
mov
lea
inc
outsb
sbb
addr16
or
loope
xor
es
cwtl
aam
dec
out
rorb
mov
mov
inc
adc
push
nop
mov
pop
push
cmpsb
jmp
jnp
call
xlat
inc
stos
push
jne
mov
adc
and
lods
in
aam
cmc
adc
jo
fcomps
mov
test
inc
aas
inc
rorb
cmp
shll
data16
xorl
stos
movsl
mov
fdivrs
je
mov
loope,pt
xchg
mov
jno
xor
movsl
pop
test
and
scas
mov
cmp
pop
xchg
cltd
and
add
pop
xchg
jmp
popf
jns
xor
jno
push
mulb
jo
cwtl
adc
jle
mov
movsl
push
and
xchg
pop
stos
jmp
adc
in
add
insl
mov
jle
pop
jbe
repz
loopne
inc
xchg
int3
mov
adcl
dec
add
stc
mov
cmpsl
and
nop
mov
mov
adc
and
scas
sar
add
ret
and
push
add
insl
xchg
mov
adc
mov
outsl
xchg
out
in
xor
or
xor
dec
leave
mov
jo
pop
mov
popa
shll
push
iret
xchg
sbb
sahf
dec
stos
icebp
cmp
sbb
sbb
loop
cmpsb
mov
jno
mov
pop
pop
add
fnclex
lahf
push
cmp
mov
rcrl
or
fnstenv
cmp
jmp
shlb
test
cmpl
xchg
imul
mov
xor
scas
push
leave
dec
dec
mov
loop
push
dec
pop
addb
xchg
xor
pop
adc
pusha
push
or
sbb
push
cmpsb
cmp
loopne
push
mov
jo
pop
cld
add
and
clc
outsl
xchg
or
jl
jb
hlt
lods
fnstcw
jmp
push
js
push
and
inc
add
dec
ror
ret
enter
xchg
sbb
pop
cmp
or
and
push
nop
cmpsb
add
pop
flds
or
cmp
cs
and
push
dec
shrl
ret
cmpsb
sub
movsb
xchg
jp
mov
pop
loop
popl
push
fidivl
data16
leave
or
sub
adc
xor
mov
nop
dec
movsl
int
data16
inc
push
or
fstl
pop
jl
or
jg
movsb
call
movsb
out
mov
outsl
repnz
mov
ret
imul
paddw
imull
lcall
cld
adc
rcrb
adc
lock
test
or
xchg
lret
subl
ds
sub
pop
cltd
push
jb
loopne
xlat
call
jns
or
lods
pushf
and
std
mov
adc
scas
jb
xchg
clc
mov
dec
cs
jns
inc
mov
stos
mov
and
rcrl
lret
loopne
cwtl
fwait
sub
gs
xor
divl
movsb
adc
mov
in
lcall
ret
lock
mov
push
lahf
lret
and
pop
sbb
mov
mov
orl
mov
sbb
loopne
clc
test
push
jmp
push
es
cltd
outsl
inc
out
mov
push
push
push
int
push
add
mov
shlb
aad
stos
arpl
xchg
push
cltd
cmp
hlt
dec
into
imul
mov
push
adc
mov
jp
out
dec
adc
scas
gs
pop
cmp
pop
fstl
pop
icebp
lahf
mov
mov
pop
out
sbb
mov
mov
dec
dec
lgs
push
push
movsb
xor
imul
fsubl
push
inc
lret
pop
or
lea
mov
sbbl
mov
mov
jge
or
or
lret
inc
xchg
out
in
outsb
movsl
mov
jne
jge
jb
cltd
pusha
pop
and
pop
scas
add
or
mov
ss
mov
out
mov
add
adc
add
jg
scas
repnz
xchg
ljmp
stc
cwtl
lahf
xor
insb
jno
cmp
cmp
pushf
mov
mull
mov
inc
sbb
mov
or
insl
stc
out
lods
rclb
loop
mov
xchg
test
mov
cli
inc
in
out
add
ret
scas
in
cli
mov
push
pop
and
xchg
hlt
icebp
cmpsl
popa
in
xor
xor
lcall
push
cmp
mov
xor
int3
dec
fsubp
popa
or
cmp
jbe
cmp
icebp
loope
popf
jmp
xor
cmp
cmp
push
add
push
cltd
lret
gs
xor
rcr
jmp
enter
ss
test
les
xlat
push
call
pop
mov
push
xor
std
jns
in
mov
adc
push
or
fwait
mov
push
loopne
inc
scas
rol
inc
cmc
loop
xchg
sub
mov
in
inc
fisubrl
movsb
sti
popa
pop
shll
push
std
imul
mov
bound
lret
dec
push
shll
xchg
scas
andb
mov
shl
lahf
xchg
sti
inc
mov
lcall
rcrl
imul
dec
mov
pusha
movsl
fildll
aam
jbe
pop
aad
in
mov
aas
add
fildll
xchg
daa
leave
notb
out
pop
dec
sub
dec
mov
std
adc
out
dec
int
pop
dec
jg
ja
dec
enter
push
daa
and
push
or
cwtl
pop
mov
nop
pop
pop
cs
pop
jno
jmp
outsb
jne
xchg
pop
clc
inc
mov
les
inc
dec
rcll
or
stos
repnz
test
jmp
out
cld
adc
or
test
rcl
sub
sbb
pusha
stos
outsb
pop
cli
add
cmp
stos
xchg
or
push
in
dec
lock
out
mov
dec
lret
ss
and
and
lds
jecxz
adc
lods
and
push
nop
push
adc
leave
and
sbb
stos
xchg
mov
push
xchg
popa
sbb
add
or
mov
iret
or
xchg
inc
lahf
pushf
push
pop
add
iret
fisubrs
movsb
mov
cmpsl
push
push
jl
xor
dec
int
xor
das
jns
cmp
lret
and
mov
sti
inc
in
pop
ds
lods
push
push
or
cwtl
inc
xchg
lods
rorb
addl
jb
loope
cmp
push
shlb
es
data16
loop
bound
fisttps
push
add
aas
fisttpl
call
lea
jns
push
or
out
mov
test
js
sbb
testl
dec
and
or
int3
sbb
xchg
pop
push
adc
and
scas
sbbl
adc
sti
inc
sbb
sahf
or
cmp
or
push
push
fstpt
mov
ss
int
out
or
pop
adc
lcall
ss
mov
push
sub
xchg
xlat
xchg
pop
xorl
and
ret
jle
rorl
push
les
adc
jae
data16
xor
ret
je
adc
pop
and
xor
movl
scas
enter
inc
repz
outsb
sarb
or
inc
pop
sbb
fsubl
xor
jb
xchg
das
jle
jmp
jmp
aaa
scas
scas
pop
sbb
jg
test
call
inc
mov
dec
cmpsl
aad
inc
pop
das
mov
cmpb
mov
xor
das
mov
mov
or
jae
das
or
stos
lret
mov
cmp
std
imull
in
adc
mov
test
leave
pushf
inc
decl
mov
sarl
dec
mov
enter
fs
into
test
mov
test
imul
dec
rorl
out
cmp
mov
mov
mov
push
add
inc
jae
testl
push
stos
sti
mov
add
sbb
jl
aaa
and
pop
fcmove
pop
outsb
pop
push
push
mov
out
mov
lods
sbb
ds
inc
pop
mov
test
mov
rolb
into
dec
pop
push
sub
scas
popa
add
inc
sub
bnd
pushf
cmp
sub
inc
push
call
nop
insl
stos
cmp
mov
adc
or
fs
or
loopne
sub
push
cmp
ret
inc
inc
dec
or
cmpsb
ljmp
cmp
clc
push
and
out
mov
ror
sbb
ljmp
fidivs
mov
das
cmp
stc
cs
pushf
xchg
sub
pop
xor
dec
adc
jno
mov
xor
cmc
inc
jmp
adc
pushf
dec
push
divb
mov
iret
xchg
cli
pop
jg
push
rcrb
lret
insl
pusha
adc
mov
cltd
fdivs
pop
xor
into
and
and
push
loope
addl
mov
loop
popa
addr16
loopne
mov
fldl
mov
fwait
sub
pop
cmp
dec
push
cmpsb
xchg
loop
aad
es
dec
mov
cmc
dec
repnz
or
in
mov
lahf
xchg
cmpsl
into
lock
sub
test
aas
push
movsl
in
pop
xor
xchg
loope
not
xchg
int
jns
mov
add
sbbl
dec
adc
cmp
push
sub
ljmp
fnstsw
popf
and
hlt
jmp
or
icebp
lret
pop
dec
lock
cmc
push
lods
xor
mov
lods
mov
lods
stc
mull
or
add
cmp
xchg
fs
daa
loopne
push
mov
stc
xchg
push
mov
sub
stos
lock
aas
imul
stos
mov
cmp
dec
fs
xchg
imul
cmpsl
jae
pop
xor
loope
mov
stos
mov
and
lods
push
cmp
int
inc
std
sub
call
dec
mov
add
subl
mov
cmp
cmp
jnp
xor
or
out
out
jbe
cmc
jecxz
movsb
mov
pusha
pop
pop
xchg
decb
out
mov
imul
sarl
pusha
mov
xchg
sahf
jb
cmpsb
repz
pop
int3
clc
push
push
push
clc
jecxz
mov
mov
or
jecxz
movsb
mov
sbb
mulps
test
and
push
fs
mov
push
cld
fst
and
cmpsb
test
xchg
inc
mov
popa
add
xor
cmp
dec
cld
out
call
mov
leave
xchg
rorb
shrb
or
sarl
in
push
xlat
sub
mov
es
int
xchg
mov
pop
xor
int3
out
mov
adc
xor
pushf
out
adc
adc
loop
push
sbb
cltd
and
adc
sahf
xor
mov
mov
adc
daa
pop
inc
inc
out
daa
popf
dec
lods
daa
leave
scas
imulb
mov
cmp
xor
iret
sbb
jo
mov
push
and
stos
shl
test
dec
leave
push
xor
scas
xchg
arpl
jno
jmp
add
and
mov
jne
shll
and
mov
push
insl
imul
sti
repz
or
mul
es
sbb
sbb
inc
aaa
push
xchg
add
adc
pushfw
dec
leave
insb
mov
inc
xchg
push
push
adc
pop
mov
xor
dec
pop
pop
insl
repnz
inc
inc
and
lahf
fisttpll
fcomip
imul
mov
pushf
roll
mov
daa
inc
divb
sti
pushf
cmp
mov
lcall
lret
test
and
test
pop
or
data16
int3
fiadds
push
pusha
lods
xchg
push
lret
call
cli
and
jb
inc
std
pop
ss
mov
imul
cmpsl
fdivrs
sub
sub
stos
sahf
jle
test
shlb
mov
lret
roll
adc
mov
test
adc
lcall
mov
adc
inc
test
pop
fstpl
std
xor
sti
jo
xchg
and
out
shlb
mov
int
movsl
cmp
and
mov
fsts
pop
fists
push
mov
add
in
std
xlat
push
test
inc
sub
fdiv
lcall
and
iret
test
or
lock
xchg
lret
pop
test
aad
std
mov
into
xor
cld
repz
mov
imul
or
in
sarb
aad
imul
or
jp
push
mov
xor
xchg
jle
fs
out
lds
movl
jne
test
sbb
fnsave
lds
lds
sbb
in
sub
clc
sbbl
rcr
xor
or
push
mov
xchg
mov
pop
arpl
mov
mov
xchg
push
enter
cld
les
iret
fnstenv
repnz
ss
jp
cmp
rolb
dec
cmp
nop
testb
orb
testl
cmpsl
inc
lahf
repz
push
cmp
dec
int
popa
xchg
imul
lock
lock
call
pop
jns
lods
fsubs
rorl
int3
jp
inc
mov
xchg
int
out
sub
fiadds
inc
jle
std
push
pushf
shl
lahf
jl
dec
test
ret
add
xor
xchg
enter
pop
shl
mov
adc
sbb
jp
shlb
pop
fistps
and
lret
incb
icebp
push
xor
lcall
mov
or
scas
sub
mov
popf
push
rcrl
loope
hlt
push
cmp
test
adc
rclb
or
cmc
fdivp
fsts
cmpsl
jnp
aad
mov
clc
loopne
cs
xor
mov
lret
lcall
mov
push
stos
das
inc
test
xor
fcomps
push
popa
nop
pop
xor
adc
imul
inc
shr
adc
jmp
icebp
mov
add
mov
mov
jecxz
fwait
insl
adc
mov
lds
sti
xchg
in
cmp
xor
lds
fimuls
out
jb
in
pushf
cmp
xchg
test
jecxz
push
in
loopne
fwait
mov
mov
cs
imul
fisttps
out
sub
mov
test
mov
rolb
sbb
ret
daa
xchg
xchg
mulb
test
pushf
fidivrs
fiaddl
xchg
fs
jecxz
xor
fxch
out
orw
pop
leave
pop
dec
mov
cmp
or
cvtdq2ps
repnz
jge
out
lahf
sbb
rolb
mov
pop
cmc
mov
popf
add
outsb
sbb
add
pop
mov
aaa
adc
loopne
cmpsl
jno
les
adc
loop
cmp
cli
dec
sbb
pop
pop
xor
jne
xchg
loop
dec
js
mov
adc
and
push
repnz
cmpsl
xchg
arpl
rcrb
pusha
xlat
aad
xchg
mov
in
in
mov
movsl
push
lea
rolb
pop
mov
or
mov
push
xchg
lret
sbb
or
mov
fistpll
pmulhw
test
jae
sbb
push
xor
and
add
xchg
cmp
pop
in
sbb
or
push
je
pop
fsub
jge
jp
sub
arpl
test
adc
cmp
add
and
cmp
es
pop
or
xchg
lods
xor
lcall
pop
jbe
mov
mov
sub
sahf
shrb
lods
leave
bound
mov
loopne
sub
sbb
mov
out
sti
xchg
popf
popf
cs
divl
repz
jno
jmp
sub
fs
xor
sbb
insl
sbb
into
cwtl
pop
sbb
psraw
lock
mov
sub
lret
into
and
mov
push
pop
dec
and
xchg
inc
decl
mov
xchg
lds
cmc
xor
inc
jmpw
fiaddl
adc
cli
adc
mov
ds
ja
cmp
test
and
rorb
rcr
inc
ffree
sahf
pop
ja
xor
cwtl
jo
pop
pop
aas
cmp
mov
add
dec
xor
xchg
mov
cmp
mov
test
repnz
stc
mov
mov
pop
data16
call
outsl
jbe
push
aam
lahf
shll
mov
arpl
js
lahf
mov
lret
inc
ss
into
dec
lret
lock
jecxz
pop
sub
xlat
or
test
incb
bound
push
sub
sub
lahf
or
mov
pop
adc
cli
fdivl
push
cmp
push
sub
push
inc
jg
icebp
push
in
or
xor
mov
jg
xor
popl
ljmp
cmpsl
mov
cmp
add
test
ljmp
aas
cmp
mov
push
mov
bound
std
lret
mov
jecxz
xchg
outsl
xor
jbe
ds
lret
pop
testl
xchg
lds
pop
or
bound
outsl
fwait
mov
xor
xor
int3
sub
fucomi
lods
in
jmp
out
pop
xchg
clc
jle
mov
repnz
or
inc
pop
lods
roll
cs
call
mov
pop
fidivs
and
iret
adc
leave
lods
push
jg
test
in
fidivrl
cld
mov
and
ds
inc
jae
push
dec
add
jg
xchg
xchg
xchg
in
mov
mov
xchg
push
loopne
lods
sbb
mov
mov
in
cmp
das
push
xchg
jmp
xor
push
insl
pusha
sub
call
push
push
in
stos
je
xchg
aam
mov
ds
sbb
pop
pop
test
out
xchg
xor
jb
stos
imul
pop
out
xchg
jle
jmp
cltd
fidivs
fisubrs
ss
lea
ret
lret
test
pop
shrw
roll
cmc
imul
cmp
in
in
gs
sbb
jb
jne
add
shll
fwait
xchg
add
loope
or
mov
mov
test
pop
cld
push
or
and
push
test
fsts
cmp
inc
xorb
inc
les
imul
daa
xorl
dec
adc
xchg
data16
in
mov
jle
mov
cltd
scas
lods
jnp
mov
inc
cltd
cmc
lahf
jge
push
lock
fucom
sub
icebp
stc
xor
loopne
shll
inc
xchg
lds
cs
sub
sbb
or
adc
jbe
shlb
xchg
scas
fidivrs
std
cmpsb
sti
pop
cltd
jl
add
test
fwait
pop
test
push
xor
mov
insb
push
into
jg
les
push
jl
jbe
pusha
add
imul
cld
add
mov
xchg
fimuls
icebp
aad
pusha
jl
lret
subb
mov
or
rclb
mov
add
fiaddl
mov
daa
cmp
call
add
ds
jae
not
or
pop
xor
mov
lock
inc
rolb
scas
hlt
xor
mov
push
pop
cmp
jbe
and
dec
and
mov
dec
sbb
push
mov
and
gs
pop
inc
inc
call
sbb
loope,pn
xor
pop
adc
cmpsb
push
rorb
xchg
mov
or
sbb
fidivl
sbb
pop
ret
add
pop
cwtl
mov
test
insl
fistl
push
dec
dec
in
les
and
mov
lahf
sbb
mov
add
cmp
jmp
push
pop
xchg
push
stos
xchg
mov
sub
or
test
insb
lds
cmc
pop
mov
inc
sub
lea
jmp
icebp
loopne
adc
xlat
scas
sbb
push
ret
in
lock
out
dec
cli
inc
jge
pop
subl
adc
shll
push
xchg
rorb
dec
pushf
adc
mov
and
les
push
xchg
lcall
mov
pop
dec
or
cmp
xchg
clc
push
mov
add
push
shlb
mov
mov
or
mov
xor
sub
adc
xchg
test
xlat
test
cmpsb
out
ret
das
add
pop
push
pushw
add
or
ljmp
int
sbb
call
enter
leave
inc
pop
adc
dec
mulb
sub
popa
call
xor
adc
dec
lcall
or
mov
cld
dec
mov
dec
sbb
sbb
add
and
mov
test
pop
xchg
add
notl
push
push
stos
rclb
divl
insl
mov
stos
sub
roll
cmpps
fcomi
push
xor
jp
mov
fcompl
enter
sub
mov
cmp
sbb
sub
stos
sub
lret
adc
aaa
incl
sub
xchg
pop
insb
outsl
stc
cmp
repnz
xor
in
test
jb
lods
push
sar
pop
mov
rdtsc
lcall
and
gs
and
test
negb
in
rcrb
jl
xchg
lds
mov
or
scas
and
insb
jl
add
jbe
fldenv
lds
cwtl
adc
mov
ret
fcmovu
fisttpll
cmc
ret
cld
shlb
mov
xchg
mov
out
push
cmp
pop
jb
adc
es
out
sahf
sbb
mov
mov
ret
fwait
sbb
iret
xorb
xor
cs
hlt
mov
xor
jno
fucomp
xchg
adc
fsubs
pop
rcr
xchg
sahf
call
inc
sbb
mov
push
dec
lods
gs
inc
and
mov
add
xchg
pushf
xor
mov
inc
ret
lods
addr16
add
add
inc
add
pop
xchg
adc
mov
xchg
cmp
add
aam
in
xchg
cmp
adc
push
and
add
mov
arpl
je
adc
mov
cmp
insb
dec
xchg
leave
int3
jnp
pop
jge
ja
add
jns
lret
or
fiaddl
ds
jne
xchg
lahf
jno
pop
inc
or
dec
js
hlt
js
call
pop
xchg
push
xchg
mov
dec
pop
movl
push
xor
push
and
and
hlt
fmul
in
xchg
push
jmp
in
pop
mov
icebp
ficoml
or
push
adc
ret
add
xchg
out
inc
add
mov
mov
out
mov
int
nop
int3
bound
sbbb
movsb
popa
mov
add
push
or
push
mov
clc
xor
rolb
push
cs
push
mov
pusha
push
mov
popf
and
jb
sahf
sbb
xor
insl
mov
out
in
dec
enter
cli
ret
hlt
adc
rol
cli
fucom
push
test
jecxz
adc
push
sbb
jno
rorb
call
xchg
insb
stos
adc
test
lods
inc
xchg
xor
sbbb
enter
hlt
xor
in
repnz
or
mov
sar
shr
fistps
pop
stc
shl
and
lcall
loop
cmc
call
xor
cmpsl
popa
xor
push
mov
divb
sub
push
js
std
or
repz
sbb
mov
lret
loop
popa
push
dec
mov
test
loope
adc
mov
nop
clc
test
sahf
cwtl
les
pop
xadd
sbb
jge
xchg
dec
lds
stos
or
mov
mov
push
cmpsl
mov
adc
or
pusha
call
sub
mov
cs
les
lds
ljmp
push
mov
mov
xchg
mov
imul
loop
ficomps
sbb
push
and
jbe
cwtl
ljmp
and
xor
jl
cltd
jmp
or
fnsetpm(287
pusha
push
int3
popf
sarb
mov
mov
push
lds
es
flds
sub
pop
repz
out
push
aam
adc
daa
bound
xor
into
inc
cmpsb
dec
or
push
mov
nop
push
cmp
outsb
fdivl
mov
shlb
xchg
call
movl
cmp
imul
push
xlat
cmp
xchg
sub
mov
fwait
and
int3
push
gs
out
mov
adc
push
gs
out
or
or
dec
leave
push
xchg
imul
test
adc
xchg
mov
cli
fdivl
pop
inc
xchg
adc
mov
fsubp
add
sti
test
movsb
pop
mov
cmpsl
jg
sbb
sbb
jmp
xchg
imul
out
sub
ficomps
stos
out
mov
xor
and
jnp
xor
inc
push
std
ret
cltd
mov
dec
mov
nop
outsl
cmpsl
inc
pop
sti
adc
jmp
pop
fsubrl
imul
mov
cmp
dec
dec
sbb
cltd
push
dec
movsb
jp
sub
popa
push
mov
jmp
ja
xlat
out
xchg
data16
sbb
adc
cld
repz
add
lret
sarb
xchg
and
in
mov
shlb
hlt
mov
cmp
xchg
xor
addb
or
mov
rol
push
test
push
int
mov
cmpl
xor
jns
adc
fidivl
test
add
jmp
repnz
arpl
popf
mov
add
jns
push
or
mov
out
xor
cmpsb
jo
xor
mov
rclb
popf
dec
mov
fcomps
push
add
out
sub
inc
testb
sub
inc
ret
fiaddl
test
push
cld
xor
cmc
repnz
jecxz
scas
dec
xor
mov
mov
adc
adc
adc
mov
test
cmpsb
jns
xor
cmp
ljmp
outsl
pop
mov
movsb
and
fiadds
jne
push
and
loop
loope
cmc
lods
loop
pop
icebp
or
cltd
xor
outsb
testb
scas
loop
lods
mov
adc
pop
mov
out
cmp
ret
cmovno
out
fistpll
fmuls
sub
jno
lods
outsl
subl
pop
sbb
lods
mov
dec
mov
movsl
mov
sbb
mov
out
lods
test
sbb
loope
pop
lods
xchg
cs
icebp
push
cltd
cmp
mov
fcomp
rdpmc
lcall
lds
pop
and
mov
mov
or
cmp
mov
mov
or
and
cltd
int
dec
or
mov
and
lret
cs
addb
push
mov
xchg
mov
out
dec
inc
xlat
and
call
push
data16
test
outsl
sub
mov
popa
inc
lock
movsb
mov
les
jns
push
test
imul
sub
fiadds
mov
push
push
mov
inc
out
mov
loopne
or
in
push
and
xchg
jno
cmpsl
push
shll
cmpsl
pop
fsts
mov
test
sub
mov
test
imul
das
and
stc
mov
pop
and
jle
ljmp
in
mov
jae
in
sbb
dec
xchg
xor
fidivrl
xor
sub
or
pop
cmp
push
cmp
mov
faddp
int
adc
dec
sub
jns
dec
ror
and
aad
xor
pop
mov
leave
stos
dec
push
or
add
sbb
pop
jg
jne
rolb
jno
cmp
dec
pop
bound
cli
lcall
es
lds
out
xchg
pop
fisubrs
jmp
or
lods
pop
lods
in
xchg
inc
lea
cmp
popf
pop
push
xchg
add
hlt
lcall
mov
fdivrl
imulb
adc
cs
sbb
or
aaa
shr
sub
loope
repz
fsubs
mov
mov
sbb
flds
xchg
fwait
lods
push
movsl
aad
aam
ret
test
icebp
mov
lods
stos
and
loope
or
loop
xor
gs
inc
cltd
add
xchg
push
iret
xchg
ljmp
pop
jno
push
pop
shl
mov
test
xor
jle
mov
es
xchg
sbb
loopne
pop
insb
or
mov
stc
xchg
sub
lods
cwtl
popa
cld
lret
lcall
mov
cmpb
idivb
cmpsb
mov
adc
popf
push
les
add
xchg
mov
icebp
sbb
push
sbb
add
notb
mov
aad
mov
arpl
xor
or
mov
cmpsb
pop
push
xchg
cli
das
outsb
lock
fldcw
incb
pop
shll
arpl
push
add
mov
je
test
sbb
idivb
fucomp
movlps
ja
mov
and
movsl
xlat
leave
ds
test
sbb
cld
mov
lret
cwtl
imul
and
mov
push
mov
mov
pop
dec
sbb
out
add
out
loopne
lds
dec
mov
xchg
push
mov
cmp
jns
jmp
imul
fucomi
lret
mov
fists
daa
sbb
xor
mov
int3
jo
rcrb
lea
test
pop
sbb
mov
xchg
pushf
cmp
cmp
cmp
mov
push
pushl
jo
dec
xor
mov
push
xchg
fnstsw
xchg
divb
jecxz
xor
jno
pop
push
push
push
jge
dec
mov
adc
mov
movsb
mov
rol
jne
pop
xchg
jno
data16
sub
out
inc
adc
insb
lods
xchg
xor
gs
ljmp
xor
imul
mov
lret
inc
jle
jge
jl,pn
jns
pop
nop
in
dec
sbb
and
cmpsl
mov
inc
pushf
jecxz
sti
add
cmc
jno
pop
and
int
and
adc
iret
jb
xor
pop
xor
idivl
dec
pop
shlb
repnz
jmp
jb
loopne
and
bound
test
ds
push
cld
jmp
sub
cmp
mov
mov
inc
add
adc
sbbb
std
mov
push
lock
sti
icebp
pop
push
inc
inc
mov
xchg
fcomp
cwtl
aas
stc
rorb
push
decl
ds
mov
mov
cmc
and
mov
sub
or
lret
lret
jecxz
pop
out
adc
mov
xchg
push
clc
or
out
and
or
bound
shll
lock
adc
or
int
sti
push
cwtl
out
adc
dec
add
flds
or
rorb
imul
loopne
sbb
sahf
lock
ljmp
jno
aad
pop
xchg
mov
lods
pop
jmp
and
jnp
add
mov
fdivs
xchg
pop
dec
cmp
mov
xchg
lret
ss
jmp
push
clc
movb
sbb
inc
sbb
sbb
icebp
test
jl
inc
cmpsl
push
notb
dec
lods
mov
mov
push
repnz
lahf
cmp
aad
cld
loopne
xchg
pop
jmp
sbb
iret
fwait
push
push
mov
ror
adc
aam
js
xchg
fcmovbe
in
sahf
cmp
popw
xor
stc
out
jae
xchg
lock
mov
mov
fmuls
jne
repnz
sub
or
adc
ljmp
imul
xchg
rep
lods
sti
dec
sub
mov
pop
lds
pop
cmpsb
ret
sahf
pop
stc
push
xchg
add
fistpl
or
fimuls
mov
int
lret
xchg
das
cld
test
cmp
fcompl
mov
add
addb
adc
sbb
insb
jg
jge
sub
addl
rcl
test
cmc
xchg
loop
push
xchg
push
fbld
out
push
mov
dec
xchg
add
loopne
lock
leave
dec
hlt
dec
push
jnp
repz
jne
aad
enter
out
xor
rol
iret
popl
cmpsb
cmc
mov
or
inc
add
sub
mov
xor
lahf
mov
jne
movsb
mov
inc
inc
xor
sbb
cwtl
in
out
repnz
inc
into
mov
pop
fnstsw
test
ds
mov
popf
fimull
xor
mov
inc
jae
add
je
ja
pop
dec
imul
cmpsb
sbb
pop
sahf
sub
aad
lcall
std
outsl
test
out
je
popf
push
hlt
jmp
xlat
leave
pop
stos
mov
fidivs
mov
lcall
mov
loop
icebp
sti
jg
sub
xor
mov
sahf
jnp
mov
fimull
movsb
icebp
mov
int
aad
push
sub
scas
jle
cltd
sbb
loop
mov
mov
daa
rcr
nop
cmpsb
rcr
repnz
mov
jo
pop
into
add
jns
clc
cmp
imul
sub
jmp
jnp
push
sub
out
cli
push
imul
jge
outsw
push
dec
ds
mov
jb
xchg
cltd
scas
dec
std
mov
pop
mov
or
cmpsb
scas
imul
in
jno
aas
mov
ret
pop
dec
xchg
lret
xchg
mov
inc
jnp
cmpsl
inc
push
test
xor
imulb
inc
mov
xchg
pop
cmpb
loopne
js
int3
add
imul
mov
aam
test
in
ss
icebp
mov
test
mov
fnstcw
cwtl
cmp
add
stc
lahf
xchg
inc
scas
xchg
stos
leave
fildl
outsl
into
or
out
cs
adc
xchg
repnz
sahf
pop
xchg
ja
sub
hlt
repnz
mov
fimull
sahf
lods
loopne
mov
insb
lcall
insl
lcall
dec
out
repnz
mov
imul
xchg
adc
stos
iret
repz
popf
popf
repz
ret
mov
lock
xor
inc
mov
jge
push
shl
mov
cmpsb
dec
jge
lcall
imul
stos
and
mov
pop
adc
js
pop
rcr
cmc
xchg
arpl
cli
xchg
out
fimuls
push
lds
aad
das
inc
imul
idiv
cmp
ficompl
movsl
inc
in
sbb
mov
les
in
push
aad
sbb
dec
out
jb
inc
loope
lods
pop
inc
fmull
pop
xrelease
in
jle
push
push
pop
cmp
out
sub
aam
dec
pop
push
mov
out
mov
pusha
loope
int3
movsb
mov
push
lret
pop
popf
jo
add
mov
pop
xchg
not
push
push
push
sub
cmpsl
xlat
sub
mov
aam
out
sub
out
mov
jg
das
insl
lock
in
cmpb
lea
insl
out
sub
bound
dec
ret
fsts
add
lds
mov
mov
sahf
jmp
jne
xchg
add
mov
push
popf
inc
sbb
cmpsl
fstpl
sbb
pop
addb
xchg
fsubrl
mov
fwait
pop
out
inc
inc
jl
jns
mov
popf
xchg
mov
sbb
xchg
xchg
and
jl
push
repz
aaa
mov
mov
sub
mov
testl
xor
push
cld
mov
mov
out
les
aas
daa
adcl
or
aam
andl
inc
loopne
jmp
push
xchg
push
lock
push
cltd
jnp
imul
jle
scas
into
cmc
pop
adc
icebp
decb
rcl
dec
or
filds
xlat
pop
out
fs
push
jg
sbb
push
adc
jle
fsub
lcall
imul
into
xchg
testb
out
jb
inc
jl
lods
mov
sbb
rcrl
adc
push
sbbb
adc
xchg
call
xchg
cltd
imul
or
loopne
pusha
test
icebp
cs
in
cwtl
comiss
test
in
jge
sub
lret
fwait
sbb
imul
je
pusha
sbb
incb
jg
and
int3
cld
popa
adc
cmp
hlt
shrl
xchg
sbb
shll
mov
xchg
ss
aaa
adc
adc
xchg
data16
push
cmp
mov
add
lods
jp
mov
inc
cmp
pushf
lods
or
icebp
dec
pop
push
lock
xorl
mov
xchg
sahf
ret
ds
or
adc
stos
jg
aas
cmp
lahf
push
push
cmpsb
jnp
add
sbbl
xchg
movsl
lds
adc
arpl
xlat
push
out
and
repz
add
sub
xor
jnp
mul
test
gs
adc
cmp
outsl
imul
outsl
or
cmpsl
cmpb
aaa
xor
mov
mov
add
or
sbbl
pop
pusha
mov
mov
and
stc
lods
repnz
aam
loop
sub
dec
int
js
push
fsubr
outsl
sbb
ret
stc
xchg
and
lods
pop
mov
xor
adc
adcl
icebp
inc
nop
outsb
cmc
shr
push
gs
incb
bound
jge
add
inc
stos
inc
leave
icebp
push
jle
jae
mov
jo
fstpl
cmpsb
jbe
mulb
inc
enter
test
daa
icebp
push
pop
in
les
xchg
loope
movsb
lock
dec
sub
push
jle
addb
and
inc
es
shr
add
pop
adc
mov
lret
cmp
jnp
mov
in
shrb
dec
notb
ds
add
dec
js
in
push
sahf
mov
out
fs
aam
inc
data16
inc
pop
xor
jo
loope
notb
cs
inc
inc
push
jecxz
cmp
in
add
nop
sti
in
stos
in
out
mov
in
sahf
stos
test
jge
dec
push
cmp
pushl
sub
mov
mov
gs
std
daa
mov
enter
pushf
repnz
pop
push
mov
mov
stc
movsl
add
fdivrs
cmp
push
sub
pop
push
pushf
xchg
mov
ret
cmp
in
jo
cmp
pop
in
es
mov
icebp
in
pop
inc
scas
adc
into
inc
sbb
xor
sti
lahf
cltd
push
push
les
adc
xchg
repz
fwait
shll
mov
popf
sub
dec
inc
pop
push
lcall
movq
jmp
mov
dec
fidivl
mov
lea
clc
insb
xchg
sbb
pop
and
outsl
hlt
inc
sub
popa
pusha
mov
sbb
cs
xchg
jg
lods
sub
lret
mov
int3
jecxz
lcall
mov
jl
inc
ljmp
mov
bound
mov
movsl
pop
mov
out
pop
jg
pusha
jno
bound
pop
mov
in
ljmp
notl
adc
icebp
jns
popf
mov
mov
jle
clc
inc
aaa
xor
jae
xchg
sbb
movsl
push
scas
sbb
andb
ljmp
insl
push
bound
popa
into
lret
or
lods
or
out
adc
mov
cwtl
add
ljmp
sub
cmp
fisttpl
data16
dec
jnp
icebp
gs
mov
dec
repnz
ss
jmp
sbbl
lcall
jae
lcall
rorb
imul
pushf
adc
cmp
adc
loopne
jbe
int
enter
repz
xor
mov
gs
lds
inc
arpl
mov
adc
pop
adc
jle
push
inc
xor
in
xchg
and
pop
aaa
movsl
mov
arpl
shlb
shr
sbb
or
addb
out
aad
push
dec
or
sbb
aas
dec
movsb
jns
mov
repz
push
leave
mov
xchg
push
jmp
nop
and
icebp
out
push
mov
adc
push
fisttps
sar
mov
loop
ljmp
loopne
dec
fs
inc
mov
cli
or
jmp
adc
subb
repnz
cmp
dec
repz
xchg
insl
in
repnz
xchg
cmovbe
pop
rclb
arpl
sbb
adc
inc
push
xchg
lds
or
pop
aas
mov
mov
mov
inc
insl
mov
lret
out
shrb
lods
cmp
adc
sbb
outsb
inc
cs
mov
fimuls
xchg
push
call
and
testl
into
xor
in
ror
sub
icebp
cmc
sbb
mov
or
fimuls
les
fcom
push
jb
xchg
xor
inc
je
lret
cmpsb
je
mov
aad
mov
fnstenv
and
jae
data16
daa
ljmp
ret
sub
call
bsr
int3
and
pusha
in
loop
jecxz
popa
sub
movsb
stc
nop
cmp
cmp
xchg
push
sbb
mov
femms
leave
mov
outsl
pop
test
xor
sbbl
pop
daa
push
mov
dec
mov
dec
hlt
inc
stos
movsl
loope
sub
shll
mov
test
pop
test
mov
dec
mov
lds
xchg
insb
inc
aam
int3
pop
or
pop
inc
or
pop
pop
cmpsb
xchg
mov
arpl
test
xchg
in
int3
xchg
xchg
push
xchg
push
sbb
cmp
xchg
popa
push
dec
jecxz
sbb
sbb
mov
inc
fiaddl
mov
shrb
mov
lahf
adcb
mov
fidivrs
fstpt
pop
hlt
roll
cmc
into
xor
in
ret
sub
loopne
jge
lods
push
and
pop
sbb
pop
push
cmp
pop
jo
jl
sahf
sbb
js
aas
jle
inc
and
pop
pop
dec
xchg
adc
lea
ljmp
and
arpl
xchg
push
inc
pop
xchg
ds
out
inc
cmp
xor
hlt
movmskps
fstpl
push
mov
push
cmpsl
push
cwtl
add
inc
add
orb
push
ds
in
sbb
xchg
push
inc
xor
ret
add
lock
xor
and
sahf
jecxz
mov
js
inc
xchg
scas
lret
loopne
pop
mov
imul
sub
cmp
mov
out
xchg
push
add
test
sbb
mov
jle
movsb
shlb
mov
in
mov
fbld
jmp
cmpl
sub
inc
mov
ret
sbb
das
xchg
adc
adc
test
into
pop
mov
lret
loopne
fcmovne
push
pop
adc
adc
mov
fistpll
sub
addr16
xor
dec
pop
dec
xchg
sbb
pop
mov
inc
jg
stos
sbb
cmp
imul
cmp
loopne
in
xchg
sub
xchg
dec
stos
push
jno
scas
popf
repz
fildll
sbb
fidivl
pushf
cmp
jp
stos
cli
jle
jg
dec
stos
lock
dec
movsl
pusha
imul
push
cmpsb
and
cmp
fsts
push
push
pushf
mov
bound
loope
jae
ja
mov
mov
adc
ret
leave
lret
mov
mov
loopne
rorb
adc
testb
pinsrw
inc
mov
or
sbb
mov
adc
cli
in
push
inc
pop
std
xor
add
xchg
sub
inc
sub
mov
jb
stc
mov
and
push
sbb
enter
ret
or
pop
add
out
adc
scas
sub
xchg
or
jns
add
xchg
fs
nop
xor
add
mov
push
xor
loop
push
scas
movsl
push
dec
mov
call
outsb
add
pop
addb
mov
test
mov
add
mov
clc
mov
mov
das
outsl
stc
jle
push
adc
jae
push
cmp
xor
mov
or
addr16
ret
sbb
push
lds
mov
cwtl
xor
stos
ret
ret
push
fiaddl
test
out
dec
push
mov
jmp
lea
fisubrl
test
repnz
xchg
cmp
in
in
mov
adc
lret
loop
jl
xchg
stc
dec
stos
es
cltd
test
rolb
or
in
push
out
fmul
inc
inc
iret
out
rclb
mov
sbb
jmp
mov
imul
mov
xchg
mov
mov
pop
sbb
je
das
xor
sbb
gs
xor
lcall
dec
cmp
mov
movsb
arpl
mov
mov
pop
push
xlat
mov
and
roll
loope
or
xchg
fdivr
jle
fnstcw
adc
xor
scas
jnp
mov
das
fdivrs
jmp
adc
cli
adcb
rorb
aas
ds
or
or
gs
leave
kmovb
cmp
pop
inc
mov
jbe
jb
outsb
repz
in
call
mov
imul
cmpsl
xchg
cmp
aad
inc
arpl
sbb
or
scas
jg
ret
mov
sahf
pop
call
dec
ficomps
xor
add
jo
je
aad
push
stos
mov
sahf
insl
in
les
sti
jmp
test
in
cmpb
adc
lock
xorl
mov
mov
push
leave
insl
inc
jge
or
mov
aad
and
dec
outsb
filds
mov
outsb
or
loop
lahf
lods
dec
adc
or
adc
dec
insl
adc
ljmp
push
cmpsl
cli
enter
movsl
mulb
push
je
out
cmpsl
neg
je
std
sbb
jle
in
popl
jno
in
lds
xchg
mov
mov
pushf
ljmpw
fucomp
push
scas
xchg
rorb
cli
loopne
pop
cmc
shlb
mov
in
push
outsl
push
xchg
repz
sbb
std
inc
loopne
dec
dec
aad
rclb
dec
insl
rolb
add
inc
loopne
dec
dec
jle
gs
mov
jmp
sbb
mov
fnstsw
xchg
rorb
subl
mov
inc
lret
mov
jl
xor
mov
imul
adc
std
or
jbe
mov
cwtl
lds
daa
hlt
outsb
push
adc
push
xchg
sub
mov
pop
cmp
ja
push
adc
fs
orl
popa
hlt
repz
jecxz
and
pop
loopne
add
test
jecxz
mov
mov
loopne
push
jno
inc
lods
jmp
stc
sub
push
jecxz
imul
jbe
inc
mov
sbb
push
pop
lods
dec
pop
jecxz
add
push
sbb
in
mov
out
adc
cld
mov
add
push
jle
or
in
adc
loope
orl
pop
dec
mov
in
jg
mov
adc
addr16
dec
push
dec
push
lret
mov
xchg
repz
sbb
adc
mov
or
xchg
ret
orl
sbb
test
sub
outsl
in
call
jns
xchg
xchg
sbb
je
push
imul
insb
mov
cld
mov
or
icebp
inc
add
mov
adc
rcl
pop
push
xor
jp
icebp
and
inc
mov
xor
xchg
repz
push
add
mov
pop
cmp
xor
aad
jnp
mov
out
js
movsb
test
adc
sbb
popf
push
dec
xchg
add
pop
xor
and
ljmp
push
adc
add
xchg
scas
adc
sbb
or
ds
or
imulb
orl
jmp
or
nop
jg
stos
jge
inc
pushf
adc
nop
or
fmull
lods
dec
or
sti
xchg
xor
pop
xchg
lock
cmc
out
icebp
imul
push
je
cmpsb
xchg
mov
adc
pop
cmp
dec
in
lds
mov
push
sub
fmul
adc
sbb
mov
mov
pop
cmp
ss
into
inc
sbb
shlb
out
dec
xchg
jo
mov
sbb
cmp
in
imul
outsl
and
mov
jl
imul
insl
test
xrelease
ds
mov
xchg
xor
les
mov
scas
jl
push
out
sub
ss
shlb
mov
bound
in
sbb
nop
dec
jo
mov
inc
in
cmp
cmp
add
int
lds
es
cli
cmp
and
sub
repnz
pop
lea
xchg
fwait
xor
les
sub
xchg
push
pop
sbb
bound
push
outsl
mov
enter
movsl
fwait
jns
sbb
sbb
outsb
enter
adcl
push
xchg
sbb
in
mov
mov
xor
pop
aad
loope
pop
lret
or
daa
mov
and
in
mov
repnz
mov
int3
xchg
insl
sbb
mov
jae
sbb
mov
xchg
pop
xchg
fmuls
jge
ljmp
insl
push
fs
out
aas
mov
xchg
xor
adc
and
xor
mov
sub
lcallw
and
cmpsb
test
jl
adc
lcall
int3
lahf
dec
icebp
lret
adc
aas
insl
add
rclb
subl
repz
hlt
shl
and
nop
cmp
in
rcr
lods
aad
sbb
inc
pop
rol
popa
inc
in
add
inc
jecxz
jle
addb
sbb
sub
enter
xchg
aas
insb
inc
jg
xchg
jne
sub
adc
arpl
cmp
pop
mov
add
pop
xchg
test
lods
push
hlt
jmp
leave
pop
in
ret
dec
adc
outsl
pop
sbb
adc
fistps
mov
jno
outsb
push
ficomps
mov
stos
leave
cmp
mov
int3
aad
xchg
rcrl
jle
iret
mov
pusha
insl
idivb
ja
xor
je
dec
cmp
nop
popf
adc
outsl
xchg
repnz
and
and
out
lds
push
and
and
add
pushf
xchg
mov
adc
mov
cmp
and
sub
mov
mov
scas
adc
ret
cmp
mov
inc
lahf
nop
sahf
dec
cmpsl
xchg
mov
xor
mov
stos
nop
clc
mov
cmp
pop
lahf
sbb
std
sbb
mov
pop
in
mov
fwait
aaa
dec
mov
fcomp
pop
iret
std
fmuls
lahf
or
ss
xchg
inc
mov
jmp
dec
icebp
sub
ss
imul
push
repnz
adc
cld
adc
adc
mov
or
cmp
inc
push
xlat
jb
imull
dec
int3
dec
push
adc
aad
or
mov
sbb
sarb
mov
lds
jmp
fdivrl
ret
ds
or
rorb
rcll
mov
mov
xchg
leave
rorb
push
or
jns
or
in
cmp
ftst
insl
pop
outsb
mov
cmovl
add
mov
xchg
pushl
lret
cmp
pop
loop
shlb
jge
xor
mov
sahf
sub
gs
mov
inc
inc
nop
jbe
out
cmp
in
add
inc
push
lea
aas
rclb
inc
dec
mov
insl
stc
shlb
inc
cld
ss
shrb
dec
push
cmp
add
popf
dec
int
add
es
sub
sub
jnp
fdivrl
scas
add
dec
and
wbinvd
jecxz
add
xlat
push
sti
scas
jbe
aaa
mov
icebp
cmpsl
mov
sbb
loope
inc
mov
mov
add
or
add
push
hlt
cmp
push
add
push
inc
cwtl
aad
shrl
push
mov
xchg
aam
mov
jbe
popa
int3
sbb
xor
ds
push
mov
mov
mov
enter
int
jecxz
mov
and
stc
sahf
ss
mov
lcall
je
ret
adc
lods
jp
popf
and
push
mov
sbb
or
setns
or
jno
ljmp
arpl
ret
sbb
and
add
push
ret
cs
mov
jmp
push
ss
push
mov
cli
daa
test
mov
shl
xor
int3
movsl
cmp
push
sahf
ljmp
sahf
sub
xchg
leave
out
faddl
adc
sub
xchg
test
mov
dec
or
fistpll
test
outsb
xchg
dec
lock
test
ficoml
mov
sub
test
and
stc
jl
xor
xor
sub
outsb
sub
sbb
test
sub
shll
insb
cmp
mov
push
adc
repz
lds
negl
xchg
jle
mov
add
xchg
lcall
jl
xchg
inc
iret
aaa
sbb
push
das
sub
call
jmp
mov
xchg
call
stos
decb
out
cltd
push
lret
sbb
mov
sub
fwait
stc
repz
jnp
xchg
pop
cmpsb
ja
cmp
adc
les
cmpsl
jbe
or
jbe
mov
or
cmpsb
inc
addr16
pop
enter
push
shrb
cli
call
sbb
mov
lcall
pop
dec
pop
inc
push
rorb
aam
jae
mov
xor
and
add
pop
add
xchg
mov
pop
add
cmpsl
ret
sahf
sub
xchg
jmp
adc
xor
sub
mov
dec
adc
mov
and
loop
mov
sbb
cld
xor
and
fucomip
jnp
shrb
jb,pn
sub
push
ret
shll
pop
test
insb
rorb
adc
push
mov
cld
loopne
pop
pop
test
ljmp
jecxz
test
outsb
pop
idivb
stc
test
or
std
aam
and
andl
mov
mov
fsubl
mov
adcl
adc
mov
push
aad
in
push
fdivrl
lcall
das
mov
repz
inc
adc
add
and
rcrb
push
add
int3
jmp
or
pushf
sbb
add
hlt
mov
or
nop
pop
cs
jg
loopne
mov
push
lahf
push
imul
ljmp
pop
jae
rcll
jno
and
lds
cltd
fwait
scas
xchg
bound
mov
add
cmp
cmp
int3
mov
fs
mov
jl
pop
in
mov
test
int
mov
push
aam
mov
and
xchg
das
dec
arpl
xor
push
mov
out
cs
dec
lcall
ja
mov
das
pusha
dec
divb
mov
cli
or
sbb
xor
pusha
call
aam
pop
mov
push
push
xor
faddl
mov
mov
dec
in
gs
andb
mov
addr16
pop
loop
cmpsb
xor
mov
mov
mov
cltd
lcall
adc
jge
jmp
andl
fimull
test
loope
cmc
in
aaa
mov
sub
mov
mov
hlt
jle
or
mov
mov
mov
mov
rcr
stc
dec
pop
sub
cltd
mov
movsb
adc
pushf
aad
fdivl
jle
inc
in
sahf
and
lret
jne
mov
xchg
mov
xchg
rcll
sbb
int3
push
mov
outsb
sub
cmp
call
xchg
jmp
cltd
push
flds
loopne
fisubrl
push
mov
jnp
cmp
shrb
aas
xor
shlb
push
popa
lock
mov
adc
daa
iret
test
mov
iret
mov
mov
sub
sub
mov
in
add
adc
sti
xchg
xor
outsb
rolb
sbb
dec
push
sub
sahf
out
mov
mov
mov
sbb
aad
addb
jmp
cmc
push
sub
pop
sub
aam
es
jns
and
push
sahf
ljmp
xchg
lods
imul
not
jecxz
pusha
fbstp
adc
loope
adc
test
enter
xor
lahf
push
icebp
stos
das
lock
test
mov
xor
and
or
inc
mov
add
insb
push
sbb
les
pop
fsubrs
lahf
cmp
dec
and
test
movsl
sub
pop
movsl
inc
xor
mov
jmp
lock
mov
mov
mov
lods
cmpsb
adc
sub
adc
bt
stos
lods
add
pop
pop
leave
js
mov
inc
pop
inc
stc
imul
dec
mov
sub
imul
nop
xchg
aad
shlb
roll
add
sbb
mov
xchg
inc
or
ret
dec
dec
inc
and
xchg
in
add
push
cs
in
cmp
dec
out
fdivrl
and
mov
mov
mov
or
sub
or
out
cmc
dec
mov
iret
fcompl
dec
out
mov
sub
ficompl
xchg
mov
add
movhlps
dec
orb
pavgb
cltd
shll
push
adc
or
lea
int3
stos
xchg
aad
mov
jle
xor
daa
jle
repz
fnstsw
dec
push
stos
jl
adc
sub
cmp
mov
mov
stos
popf
inc
lea
jecxz
inc
fistps
pop
ficoml
test
andb
aas
adc
pop
pop
mov
xchg
out
lcall
or
mov
ds
fists
push
mov
cld
or
pop
lds
addr16
cmc
sbb
xchg
not
cmp
xor
jg
sbb
jp
loopne
jo
push
adc
dec
lds
push
clc
out
insb
mov
aad
stos
lods
push
in
pop
sub
adc
outsb
pop
pop
dec
jl
out
lods
outsb
push
sub
sbb
jecxz
inc
jmp
and
mov
sub
jp
cmp
aaa
test
mov
xchg
ljmp
bnd
scas
fwait
out
dec
daa
inc
push
ss
push
sahf
int
jge
out
imul
jne
in
cmp
sub
fsubs
cld
push
xchg
lcall
dec
ret
out
jecxz
mov
callw
push
xchg
or
fld
mov
add
roll
xchg
mov
dec
aaa
mov
call
sub
dec
lcall
add
add
push
cmp
or
fbld
push
adc
or
push
jae
pusha
jmp
ljmp
jne
mov
push
lret
enter
std
add
jg
xor
addb
mov
and
shl
adc
shll
mov
push
test
in
movsb
dec
mov
mov
test
std
notl
out
mov
daa
jae
adc
mov
repz
and
inc
sti
xor
out
xchg
mov
enter
cmpsb
jge
adc
movsw
loopne
sub
pop
pop
fcomp
mov
rcrb
pop
stc
ret
xchg
in
adc
cltd
pop
push
movsl
adc
enter
cs
jmp
push
inc
js
xor
mov
shrb
push
and
mov
xchg
add
daa
push
sahf
xchg
popa
mov
and
in
sub
sub
lret
cmp
sub
aam
sbb
jecxz
sbb
mov
adc
filds
es
sub
test
cmp
xchg
popf
fstpl
call
popf
jns
jne
cli
out
add
hlt
dec
and
ds
loopne
xchg
jmp
lret
sub
add
movsb
jl
dec
fimull
in
stos
jmp
push
mov
push
fldenv
jg
dec
stos
dec
iret
and
out
dec
data16
inc
out
rol
ficoml
jle
sahf
pop
daa
mov
out
adc
mov
test
jno,pt
imul
cld
into
xchg
outsl
pusha
lret
pop
insb
nop
enter
cwtl
in
sub
out
add
push
mov
add
stc
pop
push
addl
xchg
int
repnz
mov
cltd
in
mov
mov
xchg
nop
pop
out
xchg
ljmp
cmc
jecxz
xchg
sbb
or
adc
daa
jl
jne
lea
jge
mov
iret
jge
roll
scas
repz
sbb
and
pop
std
mov
out
push
les
sub
push
jmp
or
gs
aad
ss
add
dec
xor
add
and
adc
test
in
int3
nop
mov
out
cmp
hlt
xor
xchg
jge
mov
cmpl
xchg
sti
cmp
xchg
mul
loop
mov
inc
xchg
hlt
push
in
inc
cmp
movsl
mov
mov
int
mov
loop
iret
sbb
xor
outsb
add
iret
adc
or
repz
aad
int
out
push
cli
xor
mov
sub
aaa
dec
iret
jae
cltd
repz
mov
xor
je
imul
adc
pop
xchg
inc
fucom
movsl
mov
cltd
xor
sahf
outsw
orb
orb
fcompl
jecxz
dec
fildll
lcall
cmp
push
xchg
sub
sub
test
cmp
jnp
pop
and
cmpsb
add
mov
ret
cmpsb
ljmp
add
and
sbb
testl
jne
inc
dec
aaa
dec
data16
dec
mov
add
mov
xor
fisubrs
mov
faddl
lret
and
mov
divb
iret
fs
lods
adc
mov
data16
mov
and
pop
push
mov
in
test
sbb
cmc
lds
out
or
jns
fs
jmp
sub
mov
lcall
cmp
mov
pop
xor
mov
mov
call
pushf
imul
int3
insl
sub
xacquire
cli
jnp
out
popa
sub
add
sbb
loop
inc
clc
adc
movsb
mov
xor
dec
or
rorl
dec
mov
aaa
xchg
sbb
ret
cltd
lcall
jmp
iret
jns
adc
jl
idiv
rolb
lret
jmp
imul
bound
ret
push
dec
lcall
pop
stc
cmp
xchg
in
push
push
sti
push
cmp
ljmp
out
rcrb
mov
and
inc
xchg
jl
adcl
call
shlb
or
xchg
xor
mov
jg
jmp
pop
pop
fnstcw
xchg
mov
les
or
xor
or
ljmp
mov
fstpt
mov
jno
push
ljmp
insl
or
cmp
aas
std
stos
inc
out
loope
jmp
adc
lret
pushf
sub
stos
pop
jns
sub
ljmp
stc
shrb
adc
cmp
cwtl
dec
out
mov
sbb
push
pop
adc
xlat
mov
or
enter
jmp
inc
mov
lods
idivb
sti
int
bound
jl
in
cld
ret
inc
test
jecxz
sahf
mov
hlt
or
inc
jg
xor
push
xor
and
data16
out
jge
add
cli
sbbb
in
fistl
idivl
mov
outsl
xchg
xor
es
sub
or
loope
pop
je
cmpsl
das
sbb
sbb
out
jecxz
cwtl
fiadds
repnz
jmp
mov
fcmovbe
dec
out
fs
push
and
and
out
ret
das
jmp
sbb
adc
gs
xor
push
jns
pop
dec
jmp
pop
sti
jle
mov
pusha
push
push
arpl
xor
add
xor
xchg
loope
hlt
in
inc
je
push
mov
enter
sub
mov
out
push
xchg
enter
les
or
sub
scas
pushf
jp,pn
mov
pop
inc
loopne
sbb
pop
cmpsb
fistps
jle
fsubs
lds
fcmovne
jecxz
push
mov
je
fisubrs
cmp
addr16
sbb
and
xorb
xchg
sahf
sub
outsl
or
mov
cmc
leave
je
cmpl
xchg
push
mov
fcoms
mov
or
lahf
mov
push
imul
lods
cmpsl
xchg
cmp
repnz
gs
in
outsl
cmp
cmc
rclb
leave
mov
pushf
jne
pop
xchg
push
ficomps
jmp
jo
dec
aam
sub
test
mov
sahf
sbb
sbbb
mov
mov
lock
jl
addr16
in
shrl
dec
fidivrs
out
fmuls
mov
add
xlat
sbb
cmp
scas
int
out
jmp
mov
cmp
dec
xor
imul
xor
lock
xorb
push
push
mov
cmp
push
shrl
in
in
inc
fdivl
mov
ds
arpl
mov
xchg
push
xchg
add
pop
loope
in
mov
test
jae
aas
mov
roll
adc
ret
pushf
imul
sbbl
in
arpl
mov
or
jge
roll
icebp
mov
sbb
or
lds
xchg
int
or
lret
add
mov
fsts
nop
adcl
cmp
pop
in
mov
jo
out
sub
sbb
repz
movsl
pop
pop
xor
jecxz
imul
sbb
enter
dec
cmpsl
or
dec
jo
mov
movsl
mov
imull
dec
mov
jnp
xor
add
sarb
dec
jb
adc
popa
insl
pop
roll
pop
cld
in
push
aam
stos
dec
roll
xchg
adc
cmp
dec
ficoms
movsl
jb
xchg
daa
fstpl
xor
cmpl
push
shrb
call
rolb
jo
mov
movsl
cld
rclb
mov
jecxz
pop
xchg
mov
mov
test
shlb
sub
cmpsl
call
shld
enter
lock
adc
mov
out
test
aad
dec
ficoml
mov
push
ljmp
insl
test
xor
ret
jnp
ret
sarb
enter
xor
pop
movsl
loope
xchg
iret
shll
stos
jecxz
pop
mov
lods
mov
test
dec
rorb
mov
rol
insl
lahf
lods
push
or
shll
mov
movsl
and
outsl
cmpsb
xchg
adcl
mov
pop
mov
pop
jae
lods
out
mov
mov
fs
cmp
cmp
movsl
jo
mov
daa
push
xchg
cmp
imul
add
cwtl
push
ja
in
xor
sbb
xchg
mov
imul
js
dec
test
out
fdivrs
sbb
pop
jp
sbb
cmp
les
sub
fwait
jg
pusha
aad
inc
inc
pop
xor
mov
mov
or
jl
in
inc
mov
or
iret
add
clc
sbb
les
sub
lret
mov
add
push
pop
or
ss
mov
mov
and
adc
push
push
dec
mov
aad
adc
mov
adc
xchg
fiadds
sahf
mov
movsl
cmpsb
std
xchg
mov
negb
pushf
mov
jle
mov
sbb
add
pop
xchg
or
mov
lcall
fistl
cmp
test
cmp
add
xlat
mov
movsl
iret
pushf
xchg
out
mov
hlt
fyl2x
jnp
adc
mov
cmpsb
mov
push
xor
xor
cmp
shll
dec
jno
stc
mov
jo
add
icebp
jo
call
hlt
clc
mov
jo
adcl
push
cmp
push
sbb
arpl
popa
push
jbe
mov
xchg
subb
shll
xorl
test
jl
cmpsb
aam
cmp
cmp
lods
xlat
outsb
outsl
scas
out
ja
out
jo
testb
sub
mov
aad
mov
mov
js
dec
mov
xor
test
and
dec
mov
pushf
dec
jge
adc
xor
push
iret
sbb
aad
adc
dec
and
jecxz
xchg
dec
push
iret
pop
enter
fcmove
adc
jge
pop
filds
inc
in
mov
aaa
cmc
xchg
xlat
hlt
jmp
lds
mov
xchg
or
adc
movsl
repz
jns
jne
add
rcrl
cmp
popf
dec
in
mov
aaa
aad
ficompl
mov
cltd
xor
icebp
or
dec
into
or
enter
test
pop
and
repz
dec
push
xor
pop
mov
fisttps
pop
and
xchg
mov
add
es
xchg
je
and
dec
fisubrs
inc
repnz
pop
fstl
call
add
ljmp
add
rcl
insl
roll
and
rorl
pop
push
movsl
rorl
ror
push
xchg
dec
aad
xor
and
mov
mov
pop
aam
mov
mov
lcall
dec
mov
mov
lcall
mov
push
les
stos
cmp
mov
and
mov
adc
xchg
loopne
xchg
and
js
in
xchg
mov
xchg
fcmovnb
add
js
sahf
sbb
push
and
popf
push
fsubl
sahf
bound
or
shrb
push
inc
leave
insb
and
in
and
std
inc
lcall
inc
cmp
rorb
xor
int
adc
mov
sbb
rcl
ljmp
add
sbbl
fwait
push
insb
dec
stos
test
add
add
jmp
pusha
sub
mov
adc
out
fsubr
pop
mov
in
push
outsl
movsb
mov
sbb
cmpsb
sarb
sbb
mov
fistl
adc
fadd
cmpsl
insl
in
inc
mov
jle
lds
sbb
fwait
popf
in
ret
cmp
adc
jp
dec
ret
pop
loop
xchg
ret
cltd
jge
leave
mov
lock
lret
cltd
ds
push
jno
mov
cmp
ret
xchg
or
arpl
ss
jle
cmp
xchg
mov
push
xor
loope
push
outsl
jno
fstpl
mull
adc
scas
fbstp
into
scas
loop
xchg
into
lds
mov
pop
enter
adc
lcall
leavew
sbbb
ja
mov
cmp
pop
into
ss
lds
aaa
or
lret
out
pop
dec
or
mov
jae
pop
jle
sub
lret
push
push
into
xchg
outsb
mov
sbb
or
xor
xor
sahf
jnp
das
movsl
nop
loop
xchg
lahf
stc
xor
or
stc
xor
call
sub
push
fs
jl
cmp
or
loopne
dec
repnz
mov
cmp
pop
pop
ljmp
rolb
mov
loopne
rcl
into
cmp
push
adc
cltd
pop
mov
movsl
inc
aam
cmpsb
addb
stc
icebp
xchg
push
icebp
cwtl
cmpsb
inc
std
pushf
mov
pop
push
ds
pushf
inc
ret
sub
loop
xchg
ficoml
into
inc
mov
sbb
popa
jns
js
lret
xor
rcl
xchg
push
mov
cwtl
xchg
call
jo
cmc
push
xchg
popa
push
sbb
or
sub
es
mov
sub
or
mov
idivl
mov
adc
xchg
sub
push
std
ljmp
and
fisubs
pop
mov
mov
fildll
bound
sbb
sti
test
loopne
addb
mov
xchg
enter
cltd
add
push
pop
ficoml
xchg
adc
scas
sarb
lds
mov
cmp
mov
and
xchg
popf
in
ret
xor
xchg
sub
lcall
outsb
fadds
pop
jmp
mov
insl
jne
xchg
mov
adcl
jecxz
pop
lock
in
inc
into
or
pop
mov
into
pop
cmp
call
dec
xchg
push
repnz
lret
cmp
ret
cli
mov
mov
js
sbbl
inc
sbb
loopne
loopne
in
mov
mov
pop
xchg
mov
jnp
mov
mov
push
lds
popf
sahf
xchg
test
hlt
xchg
pop
mov
out
jbe
adc
sub
data16
incb
loopne
dec
add
xchg
sub
adc
je
ljmp
imul
xchg
es
mov
and
lret
ja
decl
push
push
xor
mov
ds
and
aam
les
test
ret
jne
adc
xor
aad
popf
inc
inc
dec
fstpl
push
add
adcl
popa
out
inc
add
std
rcll
push
push
xor
jbe
xchg
loope
shll
xchg
cltd
imul
push
cwtl
ljmp
adc
or
test
inc
in
pop
cmc
cmpsl
bound
push
push
aaa
test
ss
or
gs
outsb
fwait
xchg
int
pop
in
push
sbb
rcl
leave
or
sub
clc
outsl
daa
incl
inc
cmpsb
mov
inc
xchg
pop
fs
or
dec
xchg
in
roll
mov
cmp
bound
mov
fistps
mov
das
lcall
pusha
inc
fbstp
mov
pop
xchg
mov
jl
jmp
mov
in
test
cwtl
mov
add
test
and
jae
test
iret
push
mov
rolb
pop
xor
outsl
cmp
outsb
sub
mov
ljmp
je
mov
stos
aad
pop
adc
xor
iret
sub
pop
inc
js
or
push
jbe
stos
cmc
pusha
xchg
pop
xchg
fmull
lcall
mov
pusha
scas
sbb
fst
push
outsb
int
mov
dec
xchg
adc
fimull
pop
pop
in
pop
rorl
in
leave
or
add
cmc
fsubl
movsb
test
jmp
pop
andb
movsb
loopne
sbb
gs
int
mov
aam
stos
dec
mov
cmp
sahf
divl
sti
xchg
dec
mov
mov
mov
xchg
and
rdmsr
and
mov
xchg
mov
in
adc
mov
jns
rcrl
cs
arpl
xor
orl
sub
cwtl
in
adc
aad
pushf
inc
insl
nop
add
jns
leave
or
out
and
pop
sti
sarl
call
push
sbb
push
adc
mov
pop
and
jg
adc
shll
cltd
popf
dec
out
cwtl
adc
jno
inc
dec
jge
xchg
icebp
inc
lods
mull
aas
sbb
adc
test
popa
and
and
das
pop
jmp
add
pop
mov
decl
mov
movl
loopne
and
sub
pop
mov
xlat
int3
pop
in
jg
mov
ds
out
leave
inc
lock
jb
pushf
sbb
and
push
xchg
push
lret
sbb
dec
or
jl
divb
jno
xchg
notl
xchg
jp
jnp
dec
add
mov
ljmp
mov
xor
jl
dec
pop
and
fcoml
ret
aas
enter
popf
rorl
sbb
pop
bound
and
rcr
imul
and
sar
out
mov
cs
mov
jge
jmp
mov
dec
int
call
enter
mov
xchg
xchg
lret
mov
mov
inc
loope
or
sub
pop
in
push
dec
xchg
dec
adc
xchg
dec
jp
sub
jb
mov
push
sbb
cltd
mov
adc
dec
lahf
adc
push
cmc
inc
imulb
outsl
aaa
cmpl
enter
cmc
adc
adc
mov
push
sbbl
lods
in
inc
les
sbb
mov
push
xchg
or
xor
out
fs
lahf
lods
adc
aam
add
add
cmp
jmp
ljmp
add
arpl
outsb
lret
or
mov
dec
mov
add
dec
leave
or
sbb
dec
fwait
ss
call
orb
cltd
das
gs
xor
add
adc
imul
cmp
scas
push
dec
out
sbb
push
cmp
add
mov
orb
mov
cmp
daa
add
in
arpl
jnp
lds
push
add
popf
stos
adc
insl
out
stos
push
mov
mov
cmpsb
ret
ror
inc
shlb
jp
mov
add
xchg
aas
scas
lds
mov
mov
in
subl
jecxz
xchg
or
pop
dec
jecxz
hlt
ds
imul
push
gs
sub
call
fwait
add
out
mov
hlt
iret
xlat
aaa
sbb
pop
fisubrl
fwait
jbe
popl
nop
mov
sbb
fistl
mov
xchg
cwtl
fldcw
mov
scas
test
sub
mov
xor
rcll
adc
lock
in
test
rcrb
sahf
adc
jge
aaa
lock
pop
adc
in
xor
inc
or
je
and
mov
mov
xchg
in
stc
mov
cmpsl
xchg
fildl
movsb
cltd
lret
mov
pop
ja
mov
sbb
or
jge
or
sahf
sbbb
cmp
in
cwtl
fld
push
test
pop
sbb
sub
xchg
jo
aas
sbb
nop
arpl
mov
inc
dec
or
andl
pop
add
inc
iret
sub
inc
jmp
popa
cmpsl
jecxz
or
jae
xor
aas
pop
les
xchg
add
mov
mov
mov
mov
pop
mov
cmpsb
push
mov
jb
orl
aam
mov
add
adc
jno
movsl
out
out
xchg
xlat
push
test
shrl
xor
push
push
test
mov
mov
fcoml
icebp
xor
push
push
xchg
and
in
xchg
adc
pop
cwtl
loopne
dec
add
call
in
or
aad
mov
hlt
es
mov
mov
ljmp
shll
rcrb
adc
iret
cmp
jno
out
hlt
lret
jb
lahf
aas
push
gs
mov
mov
mov
mov
xchg
push
out
nop
mov
xor
pop
mov
pusha
int
js
pusha
pop
andb
call
jo
adc
mov
dec
add
mov
xchg
enter
push
jecxz
mov
push
lods
mov
mov
xchg
out
pushf
sub
movsl
lods
jge
and
mov
push
pop
jo
mov
pushf
sbb
jecxz
inc
add
push
jle
loop
jb
mov
mov
mov
and
jns
mov
in
mov
sub
pop
cld
or
insb
xchg
data16
sahf
ss
jne
aas
cmc
adc
out
mov
inc
xchg
addr16
cmp
pop
push
ds
mov
mov
out
in
push
cmpsb
ljmp
addr16
aad
repz
sbb
xor
push
lret
dec
test
xchg
cltd
in
add
and
pop
adc
insl
mov
adc
dec
push
in
adc
mov
and
stos
mov
imul
daa
stc
sarb
into
adc
loopne
mov
jmp
jmp
outsl
arpl
imul
mov
mov
sbb
sub
cwtl
xchg
cli
add
dec
cli
xor
lea
inc
insb
mov
data16
inc
sbb
mov
mov
pop
iret
out
aam
repz
cld
jmp
jns
add
adc
sub
jae
cmpsb
cmpsb
test
adc
lods
orl
loope
push
lea
mov
loop
lea
xor
inc
push
mov
xlat
xlat
test
sbb
xchg
push
sub
lods
call
jb
aam
inc
pushl
ss
out
or
fistpl
out
dec
xlat
sub
and
push
das
out
leave
ret
xchg
ret
pop
ljmp
les
jmp
out
daa
jnp
push
idivb
jb
and
shlb
mov
imul
inc
lret
inc
push
loope
and
jp
xlat
scas
xchg
jo
pop
ljmp
outsl
jbe
pop
movsl
test
add
inc
int
jb
movsl
mov
fadds
mov
or
lcall
adc
and
hlt
mov
pop
add
xchg
shrb
into
mov
bound
sub
cmpsb
lahf
sub
sbb
adc
daa
push
int3
jno
adc
into
adc
cmp
out
call
jmp
rcl
push
test
nop
xchg
add
jnp
push
stos
mov
and
in
jno
aas
or
pop
dec
inc
fisttps
lret
inc
add
pop
clc
test
pop
jmp
dec
jmp
jns
pop
sbb
sbb
in
ljmp
stos
leave
cmp
jge
and
xchg
mov
mov
call
jge
out
ljmp
shll
push
sti
mov
outsl
lds
push
add
mov
push
test
jb
movsl
and
mov
and
jp
pushf
cmpsb
fisubs
divb
int3
jae
mov
rol
mov
jle
mov
fldl
inc
shlb
lock
mulps
out
fs
sar
int3
lret
addr16
lcall
pop
ret
lahf
mov
add
cld
test
sub
and
stc
mov
aad
mov
jmp
loop
and
ja
test
adcb
push
mov
mov
and
lock
cmp
mov
pop
gs
push
pop
jne
lods
mov
mov
sub
rolb
loopne
jl
shlb
movsl
popf
aaa
mov
ret
outsb
or
fistpll
testb
into
iret
mov
test
imul
pop
xor
loop
add
sub
or
in
int3
xor
jmp
or
cmp
and
xor
pop
or
movsl
repz
jp
insb
xor
inc
mov
repnz
jl
fidivl
lods
fs
aas
shr
jl
outsb
orb
mov
push
and
add
leave
xchg
mov
into
fildll
mov
repz
and
jmp
addr16
ret
mov
jge
movsl
imul
dec
aam
insl
jae
repz
mov
insb
or
incb
jbe
repz
aaa
xlat
cmp
jl
mov
loope
icebp
nop
jo
fildll
pop
mov
std
pop
xor
fucom
lret
sub
fnstcw
stos
out
sbb
shl
lods
inc
jp
jg
sub
push
addl
mov
add
fcmovnb
int
popa
xchg
mov
aas
fisubs
outsl
cmp
cld
pop
add
mov
ss
hlt
xchg
test
loop
cmp
xor
lds
fstpt
aam
ljmp
dec
loope
nop
je
scas
pop
ret
add
cmp
imul
jns
xchg
lret
loope
mov
call
sub
into
mov
sti
adc
xor
push
and
enter
iret
addr16
pop
ljmp
mov
or
sub
aaa
cmp
jb
out
loopne
stos
inc
insb
stos
out
int
cmpl
jno
sbb
pop
sub
insl
lods
mov
movsl
imul
adc
fwait
scas
ljmp
andb
gs
popf
lock
adc
cmpsb
in
push
push
std
mov
movsb
aam
sarb
in
add
loope
adc
in
loop
add
add
fimull
push
xchg
pop
lock
lret
cmp
dec
push
jp
repz
xchg
add
mov
icebp
or
test
mov
add
sbb
adc
idivb
call
cs
cmc
adc
sub
mov
and
cmp
pop
das
dec
outsb
jp
repz
adc
xor
hlt
out
clc
adc
mov
jp
xor
aad
rcrb
or
push
movsb
int3
lds
jecxz
or
jle
push
repnz
add
and
sbb
in
cltd
icebp
and
test
cwtl
aas
cmp
add
aad
rolb
imul
sbb
xor
dec
outsl
xor
push
cwtl
cmpsl
push
mov
jno
je
clc
pop
lcall
add
xor
and
add
movsb
jp
stc
das
or
pop
add
push
jno
jbe
mov
adc
lock
shll
mov
add
insl
int3
loope
push
or
fstpl
mov
inc
adc
mov
mov
inc
lcall
inc
int3
cmpsb
jl
sti
cmp
lds
add
push
dec
or
jnp
stc
hlt
lcall
aaa
and
movsb
cmp
jno
outsl
inc
mov
inc
cmp
js
jo
mov
leave
mov
mov
popf
mov
lea
dec
inc
dec
push
mov
out
jno
test
or
fs
pop
mov
mov
cmp
enter
xchg
mov
or
mov
mov
or
xlat
mov
das
insl
push
pop
insl
pusha
outsb
mov
int
lcall
dec
push
cmp
adcl
dec
shr
gs
add
outsl
add
lret
mov
cli
sarb
popa
sbbl
add
sbbb
test
fidivrs
jmp
pushf
sahf
cmpsb
cmp
mov
nop
dec
or
rcll
inc
mov
movsb
sub
test
pop
jb
mov
push
or
imul
ds
fs
es
data16
mov
repnz
sub
out
dec
gs
idivb
sbb
repnz
pop
sbbl
mov
je
xchg
add
iret
mov
jae
xlat
sbb
cli
out
ret
daa
sub
dec
insb
movsl
dec
es
sub
icebp
fs
adc
repnz
vmovaps
inc
test
mov
mov
sbb
adc
into
sbb
pop
negb
lret
mov
mov
xchg
insl
pop
cltd
push
subb
lret
mov
and
sbbb
xor
pop
lods
imul
xor
negl
or
icebp
ds
ret
out
lahf
movsb
les
or
push
andl
sbb
aam
es
movsl
adc
fnstsw
xchg
cmpsl
cmc
mov
mov
mov
adc
sub
cltd
icebp
in
sub
insl
xchg
add
sbb
pushf
push
xchg
lcall
mov
in
mov
sub
add
loope
dec
cmpsb
aas
pop
stc
addb
addr16
daa
int3
push
call
mov
movsl
data16
push
push
aas
push
nop
xchg
sbb
aam
adc
xchg
mov
sbbb
in
mov
popf
mov
xor
xchg
mov
lock
push
sbb
stc
mov
into
cmp
insb
neg
xchg
cmp
xor
adc
popa
inc
and
mov
push
movsb
idivb
int3
sub
rcrl
stos
cli
ljmp
scas
jno
aaa
mov
push
movl
test
mov
adc
jbe
jg
shl
in
lret
test
shrl
mov
out
add
fs
loop
jmp
and
and
shlb
test
ja
mov
sbb
lods
movsb
dec
data16
andb
insb
cmp
fsubr
test
mov
fadd
ja
call
ret
shl
xor
mov
or
stc
mov
dec
xchg
cmc
ja
out
sbb
in
mov
idivb
mov
repz
ljmp
or
lods
lock
subb
xchg
jae
data16
aam
inc
ret
sar
jno
aad
ljmp
mov
mov
push
mov
test
xchg
mov
sbb
scas
pop
jge
xchg
aad
lods
fistl
push
test
les
xchg
movsb
cmpsl
rcrb
push
movsl
repnz
jne
mov
stc
std
inc
push
dec
icebp
int
mov
mov
xor
xchg
ja,pn
ds
or
cmp
stos
shlb
fs
sarb
loopne
mov
fnstcw
ss
shl
dec
cmp
push
sub
push
fists
negl
mov
xchg
sub
fistpll
scas
dec
inc
inc
decb
test
jo
cltd
cmc
imul
cmpsb
sbb
movsb
cld
sub
rcrb
daa
cltd
push
adcb
push
outsl
scas
icebp
jns
dec
pop
or
call
sarl
mov
push
xor
mov
insl
mov
out
add
flds
sti
add
icebp
add
cltd
cmp
ss
jge
dec
xchg
jmp
mov
inc
cmc
cmp
and
sub
sub
popf
out
jge
push
sbb
adc
mov
jge
in
sub
xchg
cmp
out
movsb
aaa
ret
sub
dec
push
sahf
scas
aad
aad
in
shlb
icebp
movsb
adc
shrl
sahf
inc
or
xchg
mov
std
and
xor
ljmp
xor
out
fwait
mov
mov
bound
lahf
sub
dec
test
pop
inc
aad
push
stc
fmulp
push
xchg
mov
insl
aaa
dec
xor
pop
out
scas
cmpsb
ficoml
test
cmp
sub
dec
ret
imul
xchg
div
pushf
jb
int
xor
call
jno
test
pop
je
jecxz
sub
in
mov
stc
add
mov
fsub
out
add
jae
das
xchg
adc
pop
mov
inc
mov
sub
cmp
sub
mov
int
sub
fs
lcall
leave
icebp
dec
jmp
ret
xor
stc
and
popf
xlat
cld
fistps
jge
imul
sub
jmp
hlt
sti
rcll
xchg
xchg
lds
fidivrs
mov
imul
ret
cmpsl
test
ret
andl
lcall
push
adc
mov
jge
out
stos
push
xchg
mov
mov
and
mov
xor
sbb
jnp
fcoml
jo
andb
lahf
subb
lods
sbb
ret
ffreep
mov
cli
push
scas
xchg
push
rcrb
ret
in
fisttpl
mov
es
addb
jmp
or
inc
rclb
jmp
fs
stos
inc
or
out
fldl
inc
pusha
pusha
test
fidivl
cltd
sti
mov
cltd
push
test
cmpsl
shll
sub
add
mov
mov
adc
data16
out
adc
popf
orb
sti
adc
sbb
andb
lret
pop
gs
mov
inc
in
into
inc
xchg
xchg
adc
leave
adcb
xchg
jg
or
add
mov
arpl
loopne
push
call
in
es
les
in
mov
xchg
xchg
cmp
mov
into
lcall
xorl
adc
adc
or
push
or
dec
lods
insl
bound
fnstenv
cmpl
pop
dec
lea
lds
fcomip
dec
rolb
cli
dec
imul
sub
lcall
popa
push
jne
sahf
jb
xchg
and
xlat
dec
test
push
jecxz
fistpl
mov
imul
mov
xchg
mov
loop
xchg
dec
sbb
xor
mov
pop
out
mov
rcrb
mov
pop
aaa
mov
ss
xor
fsubrp
iret
cmc
mov
dec
shrb
aas
jb
sbbl
mov
push
lods
inc
arpl
add
xchg
int3
push
shlb
cmp
test
jo
imul
fsqrt
jns
nop
ficomps
inc
popa
insb
push
jnp
dec
mov
lret
sbb
xor
jl
dec
push
or
adc
rcr
mov
loop
or
jae
dec
les
int
push
in
mov
jne
pop
push
mov
inc
jg
mov
aas
inc
loopne
xor
out
test
push
mov
push
pop
imul
mov
jnp
in
mov
fiaddl
or
add
jae
inc
xor
aaa
xor
jge
ret
mov
aaa
pop
fsubl
popa
pop
jns
incl
and
jmp
adc
push
ljmp
iret
lods
or
mov
inc
ret
xor
shlb
enter
add
stos
cmp
in
popa
scas
mov
or
loop
loop
pop
xor
pusha
movsl
call
xchg
out
insb
mov
or
pop
mov
stos
jns
rorl
lock
sbb
push
sbbl
mov
mov
iret
rolb
xchg
cmp
es
insl
aas
adc
les
in
sbb
enter
inc
push
adc
mov
cmpsb
push
xlat
xchg
xchg
mov
sbb
mov
orb
movsb
jne
test
or
out
mov
mov
xchg
mov
push
mov
jb
rolb
push
sbb
fldcw
leave
pusha
mov
cwtl
dec
pop
or
lods
lret
mov
imul
jge
insl
lret
jb
mov
icebp
stos
mov
test
mov
loopne
mov
dec
repz
push
cmp
xor
rcll
xor
push
sbb
pushf
and
stos
popa
mov
push
mov
mov
mov
dec
mov
call
test
mov
xchg
out
aas
stc
mov
xor
inc
lcall
xor
shrl
jo
push
clc
or
es
les
mov
dec
mov
ret
jp
ret
xlat
mov
test
roll
fldt
pop
inc
cmp
push
xchg
pop
insb
fwait
loope
insl
xchg
cmpsb
jb
mov
pop
subb
js
out
inc
pop
mov
ret
pop
fisubs
std
lcall
sub
mov
mov
aam
mov
fdivrl
push
dec
in
call
add
mov
repz
and
jmp
dec
movsl
fcmovb
loope
mov
sbb
arpl
in
loopne
cmpb
mov
lods
dec
or
neg
insl
pop
sub
mov
or
scas
cmp
xchg
popa
add
pop
test
dec
lret
push
or
fadds
jmp
sahf
nop
lods
mov
nop
in
jmp
divl
inc
les
cmpsl
mov
lea
xchg
sub
lahf
push
add
and
fs
jb
pop
inc
std
push
cwtl
inc
push
pop
xchg
add
mov
jae
xor
sbb
leave
mov
jp
sbb
ds
cmc
sbb
imul
cmp
sahf
test
or
mov
xor
jl
lcall
repnz
mov
popf
xor
mov
adc
lahf
aaa
xchg
aad
pop
lret
or
xchg
jp
inc
add
adc
mov
adc
ss
ficoml
mov
bound
jle
jl
bound
loop
xor
inc
mov
xchg
in
xchg
addl
jno
aad
and
mov
sbb
out
mov
dec
push
or
pop
adc
push
push
xchg
clc
push
pop
filds
daa
add
sub
lea
call
xchg
sbb
pop
add
dec
cmp
sbb
bound
lret
into
sub
shr
jno
jnp
push
int3
pop
inc
inc
and
shl
fidivs
cmc
pop
lods
sub
mov
xchg
inc
push
pop
fwait
test
in
xor
jbe
cmp
sub
xchg
popa
add
inc
sahf
add
mov
jb
test
scas
fidivs
jnp
call
pop
mov
jmp
outsb
jne
xchg
in
roll
sbb
jae
imul
sub
xchg
fwait
sub
scas
js
fstps
lock
inc
push
nop
lds
in
xchg
xchg
aad
dec
mov
pop
cmc
fidivrl
popf
xchg
insb
sub
imul
jno
in
and
pop
insb
xor
inc
push
mov
mov
pop
inc
lret
test
sar
xchg
xlat
cmpsl
adc
jae
dec
mov
push
add
adc
in
cwtl
push
lret
aaa
lahf
pop
rcl
ss
push
xor
and
aam
dec
loop
mov
mov
stos
mov
stc
push
call
lahf
mov
mov
sti
mov
add
inc
out
push
cmp
mov
add
stc
test
push
gs
jns
pop
cltd
stc
mov
loopne
shll
pop
add
push
xchg
popa
mov
push
js
add
or
leave
push
ss
pop
jg
mov
bound
xchg
test
dec
test
dec
and
es
sub
jae
sub
or
roll
mov
push
push
or
mov
shll
imul
rclb
jne
dec
int3
cmp
popa
push
adc
mov
pop
cmp
iret
jmp
scas
pop
aam
xchg
mov
ret
ds
jmp
mov
mov
adc
outsl
mov
imul
into
xchg
shrl
test
xchg
jle
mov
xchg
aas
gs
stos
or
jmp
mov
movsl
rcrb
aam
push
dec
or
add
rorl
sbb
test
xor
mov
xor
lea
enter
jae
es
insb
xor
lock
mov
repz
jle
and
sub
push
fsubrl
aaa
insl
add
mov
std
cmc
mov
mov
frstor
outsb
or
adc
sub
push
xor
cltd
lahf
les
push
mov
shll
rol
sub
out
dec
repz
push
or
iret
jmp
ljmp
cwtl
rcrl
pop
jae
push
pop
mov
sahf
jnp
mov
lahf
enter
stos
push
fadd
xchg
scas
mov
adc
sbb
push
adc
push
adc
stc
adc
sub
scas
imul
xchg
pop
xor
cld
scas
scas
idiv
mov
cmpsl
or
loope
cltd
and
or
das
add
mov
mov
sbb
je
mov
add
iret
pop
imulb
lods
sub
or
in
lea
adc
sub
mov
adc
mov
pop
inc
mov
push
push
xchg
or
sbb
push
fdivr
movsb
and
movsb
and
icebp
sub
mov
loope
pop
imul
sub
cmpsb
mov
pusha
add
pushf
pop
mov
flds
xor
jle
int
or
int
dec
pop
jge
jo
mov
movsb
dec
js
mov
jo
and
rclb
sub
fbld
add
or
test
xor
cmc
mov
ds
jg
adc
inc
pop
cmpsl
inc
xchg
lods
aas
stc
aad
sarl
sbb
int3
jnp
lods
mov
mov
decb
lods
jg
inc
mov
loope
pop
fnstsw
and
fstl
and
pop
push
adc
cmp
pop
jmp
jle
mov
mov
loop
lods
cli
mov
pushf
push
fstps
fmuls
adc
rclb
fwait
mov
push
jge
loope
movsb
insb
popf
push
aas
call
hlt
ds
push
adc
sbb
ficoml
test
int3
out
lret
dec
xchg
data16
mov
add
rorb
call
dec
movsl
aad
scas
fldl
mov
xor
das
jns
inc
add
aad
aaa
ja
jge
mov
addb
outsb
lods
inc
or
add
pop
out
ret
mov
mov
iret
dec
fstpt
mov
leave
push
xor
adc
mov
int3
fwait
loopne
int3
adc
subl
add
call
aam
loopne
imul
clc
mov
pop
loopne
jle
mov
xorl
mov
scas
loopne
ljmp
mov
scas
fnsave
mov
fsubl
pop
scas
call
lds
and
movsb
push
and
sahf
push
mov
leave
movsl
pop
aas
loop
pop
mov
xlat
xor
add
andl
xor
leave
fs
push
mov
mov
loopne
lock
adc
es
xchg
ficoml
xchg
scas
sbb
loope
cmp
sub
cmp
mov
push
movsl
ss
arpl
test
aam
mov
mov
movsb
adc
scas
pop
cltd
mov
xchg
mov
aam
faddl
and
movsb
into
xchg
mov
mov
dec
push
test
jae
int3
in
bound
das
pop
popa
push
loop
leave
pop
sub
xchg
pop
or
lahf
mov
je
outsl
mov
adc
insb
pop
push
testb
shlb
cld
xor
fsubl
adc
pop
xchg
stos
rcrl
shl
pop
jmp
aas
fstp
outsb
push
aam
fnsave
les
lcall
clc
xor
mov
mov
mov
inc
cmpsb
scas
mov
jge
daa
cmp
sbb
fsubrl
push
inc
mov
outsb
mov
icebp
je
mov
leave
out
push
mov
push
les
xchg
adc
push
test
dec
lcall
fwait
dec
add
out
xchg
sbb
out
add
scas
es
roll
ret
add
int
les
or
rclb
rcrl
mov
subb
sub
scas
ja
dec
rorl
and
fcompl
pop
stos
and
dec
ljmp
pop
movsl
mov
add
pusha
pop
dec
out
shrl
push
or
xchg
das
fsubl
andb
stos
inc
jb
mov
and
shl
mov
nop
mov
je
jge
rcr
jae
and
xor
jns
mov
dec
bnd
test
loopne
enter
jg
sub
inc
imul
xchg
pop
ja
fcmovb
hlt
rcrl
add
lods
fisubrl
pop
into
ret
inc
dec
or
fs
or
fs
lock
xor
lret
xchg
sub
addr16
cmp
hlt
out
mov
fiadds
or
in
fcmovnb
cmpsl
cwtl
adc
test
mov
in
push
rol
and
inc
jle
xchg
cmp
dec
sub
je
lock
shrl
adc
mov
in
fiadds
lods
jg
or
xchg
cmp
mov
pop
pop
test
or
sbb
jle
jb
rolb
in
push
adcl
repz
enter
sahf
test
inc
push
hlt
push
out
mov
out
sbb
sahf
mov
mov
lret
outsb
adc
insl
pop
and
sub
ds
pop
jecxz
dec
jbe
pop
popf
test
out
in
imul
adc
mov
or
cli
or
push
xchg
mov
mov
sub
pop
loopne
fs
sub
inc
ja
or
dec
pop
icebp
pop
repz
jmp
jns
mov
fs
mov
push
add
sahf
scas
mov
daa
push
test
imul
mov
test
mov
mov
insb
pop
movsl
incl
mov
fcoml
mov
dec
decb
fimuls
jl
ja
gs
mov
mov
cmpl
or
lcall
jno
jle
mov
arpl
jo
cmpb
fisubrl
mov
push
mov
sarb
adc
clc
dec
ljmp
xor
push
int
inc
repz
mov
mov
pop
orl
fidivl
in
stos
jmp
jno
bound
int
sbb
xchg
lret
dec
push
mov
mov
movsb
ficoml
das
repz
adc
push
repnz
sub
js
imul
aad
adc
jo
dec
movsl
ja
push
mov
dec
jp
enter
dec
into
xorb
mov
test
inc
gs
leave
mov
xchg
adc
mov
push
cmp
mov
and
adc
mov
incl
xchg
mov
inc
pop
mov
sbb
inc
xchg
cs
add
mov
repz
add
push
xchg
icebp
mov
add
clc
and
sub
das
jb
shll
orl
gs
mov
inc
adc
mov
scas
mov
cmpsb
jl
mov
ret
scas
inc
mov
inc
aas
mov
push
in
mov
mov
dec
mov
loopne
pop
xorb
xor
shl
fcmovb
xchg
scas
sub
repz
leave
fmuls
cmpsb
hlt
cltd
jmp
inc
shlb
mov
leave
push
xorb
mov
mov
repnz
das
unpckhps
xchg
lahf
shl
sbb
test
in
sbb
clc
dec
push
mov
hlt
lcall
push
adc
sub
js
ljmp
sbb
int3
into
xchg
and
into
or
in
push
sbb
mov
andl
jl
adc
cmp
add
adc
jns
test
or
lds
andb
scas
daa
lods
xor
push
in
pushl
inc
popf
loopne
inc
mov
sbbl
ror
xor
sub
jp
ffreep
push
rcrb
jle
es
xor
inc
cli
inc
fsubl
or
xor
inc
jmp
das
push
xor
push
fsubrl
pusha
mov
es
int
jl
mov
and
cmpsb
sbb
cmpsb
inc
mov
mov
movsb
popf
psubusb
dec
mov
mov
mov
jbe
aas
cmp
xor
add
shrb
pop
repz
incl
xor
or
out
movsb
sbb
clc
popf
data16
mov
mov
fwait
shlb
push
aam
push
dec
js
pop
sbb
movsl
push
add
repz
mov
mov
push
bound
sbb
mov
cltd
jle
hlt
aas
mov
rcll
mov
add
or
or
or
fisubl
stos
inc
shrl
push
mov
test
hlt
lcall
xlat
push
iret
lahf
movsl
shll
sub
mov
stc
loopne
mov
jmp
in
dec
xor
push
fs
mov
sub
mov
enter
leave
lea
xchg
outsb
sahf
out
push
fistpl
testl
adc
mov
sti
fwait
mov
iret
xchg
cld
test
popf
int3
out
rcll
jmp
stos
push
int3
mov
xorl
test
push
aad
pop
inc
inc
xorl
cmp
lods
lcall
xchg
subb
lods
loopne
jg
popf
mov
test
jg
rorl
daa
and
int3
je
out
xor
sbb
das
insb
dec
xchg
ljmp
hlt
or
loop
jo
push
imul
in
cmp
loope
jno
iret
xchg
mov
jle
adcl
add
hlt
sub
lret
cmc
jl
scas
mov
shlb
test
cmc
fwait
mov
sbbl
pop
or
sub
imul
add
mov
call
sub
xlat
mov
andb
inc
xchg
sbb
test
jge
lcall
pop
test
jmp
pop
test
movsb
pop
arpl
int3
cwtl
cmpsl
mov
mov
jo
inc
shll
je
and
incl
aad
pop
clc
add
pop
mov
and
xor
lcall
lret
test
push
fs
or
test
push
cs
clc
rclb
pushf
xchg
inc
movsb
paddsw
push
fdiv
cmpsl
mov
lahf
mov
nop
cmp
js
test
orb
mov
xor
xchg
xchg
nop
lcall
call
xor
inc
nop
cltd
jo
insb
dec
hlt
outsl
cmp
jnp
vmovlps
mov
push
cmp
aad
add
out
mov
pop
xchg
or
jp
lods
ret
pop
inc
jg
mov
out
daa
cmpsb
test
aas
fnstenv
lcall
cwtl
das
push
leave
fisttps
mov
setp
dec
jo
cwtl
xchg
jne
and
imul
fisubs
mov
lock
ja
test
fnsave
imul
popl
xlat
shll
loopne
cmp
sbb
ja
cltd
in
ja
add
outsl
mov
loop
pop
or
test
mov
xchg
loop
sbb
repz
jmp
insb
mov
ret
nop
js
into
cmp
leave
aam
mov
cltd
movsb
mov
ret
pop
orl
bswap
push
test
cld
out
sub
pop
inc
cmp
push
push
in
xor
in
jecxz
jne
loop
imul
or
cmp
loope
movsw
in
xchg
mov
pop
arpl
adc
movl
mov
jmp
xchg
es
imul
dec
aas
xlat
shrl
loopne
cmp
cltd
out
insb
add
outsl
mov
loop
pop
or
test
mov
test
jo
and
push
jmp
jns
xchg
int
mov
rol
nop
js
into
add
add
mov
imul
dec
sub
mov
lret
imul
push
mov
loope
hlt
sbb
dec
push
gs
cltd
jmp
scas
adc
sarl
push
sti
in
xor
sti
in
aam
jle
jl
scas
cmpl
loop
addr16
xor
jmp
mov
dec
cmp
adc
fwait
jl
mov
out
dec
js
into
pop
mov
mov
pop
push
ljmp
rorb
cld
gs
aas
out
jmp
aaa
mov
xchg
aad
inc
addr16
fwait
je
mov
test
out
ret
outsl
js
int
mov
add
xchg
sub
cld
stos
mov
hlt
dec
lcall
push
sbb
lahf
mov
icebp
movsl
cmp
mov
mov
outsb
movsl
mov
popl
mov
add
xchg
aas
insl
stos
adc
mov
lahf
rclb
int
add
adc
cmp
sbb
sub
dec
pusha
jl
stc
jle
pop
aad
loopne
mov
xchg
push
or
pop
or
lahf
jno
mov
das
sahf
jecxz
pop
lods
lahf
push
testb
maxps
insb
push
aas
push
lcall
popa
lahf
into
test
and
test
rorb
fucom
pop
xchg
push
jne
jmp
nop
xchg
scas
mov
sahf
enter
or
insl
lock
pop
lahf
add
aad
xchg
cs
mov
out
lahf
inc
loope
and
cltd
jmp
popf
call
push
andl
psubsw
sbb
xchg
inc
push
rcll
iret
mov
mov
pushf
imul
mov
push
and
int
cltd
lcall
pop
inc
cld
cwtl
out
dec
fs
ja
rcll
data16
test
pusha
lret
xchg
das
xchg
arpl
push
fwait
shr
pushf
adc
adc
inc
mov
ficoml
cld
lcall
mov
faddl
mov
out
pop
aaa
fcoml
fprem
in
xchg
int3
test
xchg
push
in
and
andl
pop
mov
mov
push
cmpsb
xlat
ljmp
or
cli
mov
inc
jecxz
jle
xchg
repnz
vpmacssdql
fmuls
outsb
ret
icebp
sub
dec
cld
jmp
in
sub
mov
jmp
xchg
jae
mov
popf
in
sbbb
adc
sbb
or
rol
cmp
data16
ret
outsb
leave
cmpsb
aaa
sbb
dec
or
fwait
inc
mov
test
push
repz
pop
mov
cltd
pop
push
imul
dec
or
mov
stos
sbb
adc
fcoml
ljmp
arpl
rorl
loope
xor
icebp
rolb
and
xchg
arpl
sbbb
pop
fdivp
orb
frstor
push
icebp
shlb
mov
enter
mov
cwtl
das
in
push
inc
outsl
xchg
or
rolb
push
mov
fwait
inc
push
fstl
insl
setbe
lods
lods
and
add
clc
movsl
inc
cmp
inc
fs
push
xchg
cmpsb
loop
in
jo
shll
fwait
push
ljmp
sbb
pop
mov
rol
mov
imul
aam
lcall
fwait
mov
outsb
movsb
mov
ret
xchg
mov
sub
ret
push
ret
xchg
mov
push
push
test
popa
jg
or
mov
popf
xlat
lods
xchg
xor
xor
pop
ret
mov
xchg
dec
sbb
xchg
enter
pop
xchg
and
repz
cmp
and
mov
in
sub
jmp
cwtl
dec
adc
lcall
dec
pop
add
push
mov
ds
cmp
and
jns
inc
shrl
nop
push
or
andb
les
fs
add
stos
call
mov
rclb
jle
jb
fadds
xchg
out
fidivl
mov
les
mov
loope
call
or
xchg
pushf
cmp
dec
cmpsl
dec
push
dec
test
push
rclb
push
push
ror
mov
mov
fabs
mov
stos
arpl
les
bnd
xchg
cltd
xchg
das
and
repnz
mov
push
inc
dec
pop
xchg
pop
lahf
mov
cmovno
sbb
lds
int
mov
bsr
mov
sub
mov
imul
daa
enter
push
lahf
push
push
rorl
cli
pop
and
lock
sbb
cmp
or
out
test
lahf
adc
lds
std
fsubrs
sbb
stc
adcb
ret
ja
imul
xchg
in
jbe
test
xor
pop
ss
mov
movsl
cmp
or
lds
sti
sub
sub
mov
hlt
scas
call
test
jmp
jmp
dec
push
pop
xchg
xor
mov
scas
xchg
mov
ret
fnstcw
repz
jmp
dec
mov
ror
jle
call
lods
leave
rcrl
sbb
rorb
push
jbe
add
sti
xorl
sbb
push
jl
dec
popf
loopne
loop
sar
loop
mov
jnp
jne
cs
lea
dec
call
jbe
or
adc
fmull
xchg
push
push
call
and
shr
fcoml
or
ficompl
fsub
xchg
call
call
mov
out
xchg
popa
rcrl
cmp
push
popl
ds
push
jns
fdivp
or
loop
xchg
xor
dec
jmp
ds
dec
cmpsb
or
out
cmp
test
inc
push
ret
in
loop
sahf
sbb
les
pop
test
repz
mov
ljmp
xchg
cmp
and
test
or
aas
jo
stos
cmp
push
addr16
cmp
sub
jmp
fidivl
mov
inc
roll
outsb
mov
push
mov
xor
scas
js
cs
and
pop
cmp
mov
add
jle
and
loop
mov
push
mov
xchg
in
push
leave
push
cmpsb
cmp
and
push
lds
mov
movsl
mov
xchg
popa
rcrl
cmp
je
inc
imul
fisubrs
sub
pop
pop
jg
test
push
loop
inc
pushf
mov
testb
push
gs
cmp
fisubs
dec
movsb
pop
sub
inc
lea
icebp
sub
dec
pop
dec
je
jo
or
call
rcll
out
mov
loopne
pushf
adc
add
rolb
push
clc
fistl
add
sbb
mov
arpl
lock
mov
mov
ret
out
mov
movsb
mov
sysret
filds
cld
outsb
aam
cmc
push
or
mov
repz
xor
xlat
stos
sbb
xor
add
popf
jo
pusha
out
cs
jo
sub
jno
xchg
mov
dec
pop
pop
inc
jmp
xor
sbb
dec
cwtl
je
ljmp
cli
push
repnz
jne
mov
jp
test
inc
loopne
add
cmc
push
fmul
insb
jmp
int3
sahf
xchg
sub
clc
and
lods
and
cltd
outsl
xchg
loop,pt
ror
in
fucom
fs
inc
jne
lret
mov
lea
pop
aaa
rcrl
subl
loope
jecxz
test
aaa
rorl
adc
cmp
iret
dec
dec
popa
addl
pop
je
stos
shl
lods
loope
jnp
pop
clc
cs
mov
lods
loope
lcall
shr
into
rcr
jbe
push
add
ja
push
mov
sbb
xchg
roll
push
fisubs
test
fs
loope
movsl
lret
outsl
dec
call
fistps
push
jns
ja
loope
cld
popa
int3
cld
sti
push
jbe
cli
jp
ror
pop
xor
cmp
loopne
dec
test
xor
jnp
pushf
xchg
gs
rorb
mov
cltd
jmp
sbb
jnp
xchg
jg
jl
mov
pop
cmp
xchg
push
int3
sbb
jnp
rolb
mov
mov
mov
xor
mov
cmp
insl
ljmp
pop
jecxz
scas
mov
mov
jns
les
and
sbb
jmp
pop
in
sbb
add
ret
mov
imul
lcall
cld
adc
enter
pop
jb
loope
cwtl
out
lahf
push
xlat
cmp
mov
stos
dec
push
push
or
cld
and
xor
popf
sub
push
insb
cli
movsb
and
adc
lods
pop
pop
lcall
shl
cmpsb
adc
mov
and
dec
sbb
dec
insl
repz
jne
xchg
je
int3
ds
mov
shr
and
add
scas
jg
stos
arpl
bound
pop
aas
push
sbb
ss
jns
inc
out
xlat
lods
stc
add
xchg
loopne
ljmp
icebp
or
dec
cmpsl
nop
cmp
jge
inc
scas
push
mov
dec
pusha
jb
aaa
ficoml
xor
adc
sub
inc
sbb
stos
fimuls
dec
xor
jmp
cmp
stos
ret
fwait
xchg
cs
shll
das
cwtl
jg
push
cmpsl
dec
and
js
jge
int3
mov
mov
mov
lret
pop
xlat
xchg
cmp
out
sbb
and
outsb
mov
push
ljmp
push
push
push
das
adc
xchg
loope
dec
xor
outsl
dec
inc
push
cmp
fs
pop
xor
lea
test
fwait
xchg
in
xchg
xchg
xchg
sbb
sub
add
scas
lcall
nop
xor
mov
push
sbb
test
cwtl
mov
jb
push
mov
andb
aaa
ja
push
mov
sbb
add
outsb
mov
xchg
loope
cli
nop
js
lret
lock
outsb
test
jl
adc
mov
out
cld
jmp
js
xor
inc
dec
loope
xchg
daa
and
mov
xor
imul
pop
dec
js
push
out
out
cli
dec
sub
pop
sub
lods
cmpsb
sub
out
repz
pop
loope
fcompl
cmpsb
push
jb
lds
fcomip
inc
in
movl
pop
shl
ret
js
jns
push
addb
push
lret
sub
and
and
xchg
inc
insb
cs
inc
int3
sarl
push
clc
mov
mov
mov
sbb
mov
push
jns
sahf
jle
int3
mov
jmp
xor
repnz
pop
jne
lahf
repnz
pop
add
imul
scas
mov
adc
test
adc
stos
adc
ljmp
dec
scas
jnp
and
fstl
or
andb
loopne
orl
sbb
enter
sub
cmp
xchg
push
lods
mov
jb
movb
rorb
fsub
in
pop
adc
dec
out
sar
mov
hlt
xchg
icebp
push
push
lods
fucomp
out
insl
push
pop
adc
lods
sub
add
test
fisubl
and
repnz
icebp
lods
mov
push
rcl
xchg
nop
dec
lahf
xchg
pop
push
mov
fcoms
jg
mov
dec
out
jo
mov
pop
cmp
das
cmpsb
or
sbb
pop
push
xor
shll
cmpsl
push
popf
icebp
push
push
jge
jp
pusha
idivb
enter
xchg
or
js
xchg
clc
repz
mov
adc
popl
push
sub
repnz
or
and
lods
or
stos
loope
ja
stc
mov
pop
xchg
out
xchg
mov
xchg
cmp
xor
sub
out
adc
inc
clc
stc
inc
bound
mov
repnz
mov
mov
cwtl
mov
jp
in
or
mov
dec
mov
call
shlb
adc
mov
int
xchg
ret
jb
jge
ja
cmc
add
outsb
sub
inc
dec
add
mov
test
cmc
pop
dec
mov
cmp
jle
xchg
pop
xchg
cmc
adc
div
inc
push
xor
jge
mov
sub
bound
cmpl
bswap
push
out
rcrl
and
cmc
pop
sbb
and
push
add
or
mov
rcl
cmp
jecxz
pop
jge
pop
mov
test
test
lds
mov
movsl
pop
xor
add
cwtl
push
fldl
pop
lret
xchg
xchg
pop
sub
xchg
push
xor
movsl
jns
xchg
xor
sub
call
outsl
pop
mov
stos
add
xchg
jne
rorb
clc
imul
sub
sti
and
sub
out
ret
iret
mov
out
btc
jns
shr
pop
xchg
push
jns
clc
push
inc
pop
and
xchg
rcrb
add
repz
hlt
jmp
stc
pop
push
ret
lahf
shrb
dec
add
in
push
sub
loope
cmc
movsl
fnstsw
cmp
jecxz
pop
jns
sbb
loopne
movsb
push
add
fs
xlat
jp
call
test
jo
mov
movsl
arpl
xchg
sub
inc
aas
or
or
sbb
mov
stos
or
call
in
imul
inc
cmp
test
mov
shlb
mov
enter
jecxz
pop
pop
nop
repz
mov
push
lds
cmp
test
jb
inc
test
jo
mov
movsl
cmp
cmp
xchg
pop
lock
les
ret
mov
pusha
insl
or
fisubl
rclb
cmp
lahf
shrb
dec
push
or
in
push
and
nop
or
adc
lahf
inc
movsl
stos
in
xchg
imul
cmp
cs
inc
int
xchg
or
jno
fcompl
xorb
jmp
sahf
iret
jg
sub
xchg
int3
inc
nop
lds
in
adc
mov
addr16
push
dec
add
ss
xorb
mov
loopne
clc
mov
jne
imul
mov
shr
std
clc
jge
sub
test
xchg
ret
pop
scas
imul
mov
or
test
fldt
lods
or
xchg
mov
adc
sub
mov
pushf
jge
mov
sub
mov
shll
dec
xor
fs
aaa
repz
mov
adc
inc
push
paddb
notl
stos
das
push
mov
inc
subb
notl
pop
fs
jge
imul
hlt
out
repnz
push
lret
int3
lret
aad
mov
and
int
push
addb
data16
or
xchg
dec
adc
orb
add
in
mov
pop
js
mov
push
xchg
outsl
pop
cwtl
fmuls
scas
insb
test
add
test
inc
adc
aas
xchg
subb
pop
mov
fsts
dec
fsubs
test
mov
loope
pusha
sbb
mov
popf
int3
out
mov
aaa
xchg
sbb
add
pop
xchg
xorb
xchg
shll
push
mov
lea
jl
jae
pop
sbb
mov
cmpsb
testl
je
or
dec
mov
or
mov
xchg
je
xchg
add
pop
nop
add
push
pop
push
jno
fldlg2
cs
test
and
cmp
sub
push
fs
loopne
jae
add
mov
mov
xor
mov
js
mov
sbbl
or
repz
roll
push
push
dec
ss
int
cmp
and
rol
push
scas
iret
sarl
xchg
jge
addl
enter
bound
xorps
sub
imul
push
out
mov
out
fiadds
sub
jmp
pushl
add
add
ss
pop
test
adc
ror
fistpll
mov
xlat
test
movsl
andb
xchg
xor
xlat
add
mov
test
mov
sbb
sarl
mov
enter
int
mov
mov
push
lea
adc
xchg
cmpsb
daa
stos
sub
cli
ja
jp
hlt
sti
mov
lods
or
jb
ljmp
fstl
xor
ds
mov
sub
outsb
movsl
in
pop
mov
stos
sti
in
in
mov
xchg
test
fs
mov
dec
stos
mov
out
mov
sub
js
mov
out
dec
int
out
roll
lods
adc
scas
push
cltd
pop
mov
adc
clc
push
hlt
push
test
mov
cmp
lock
in
repnz
push
xchg
je
push
int
and
in
lret
cmp
sbb
inc
add
xchg
mov
or
xchg
jmp
nop
cmp
sbbb
xor
inc
dec
jbe
ss
fwait
xchg
pop
pop
xor
jae
cwtl
pop
pushf
or
inc
push
fcmove
shrb
or
mov
push
movb
je
xchg
dec
data16
xchg
push
sub
neg
sbb
mov
ljmp
pop
mov
out
lods
aad
pop
lods
and
sub
sbb
jns
or
stos
das
jns
fstl
cmpb
adc
push
test
xor
sub
push
cmpsl
sbbb
insl
or
sbb
repz
rcl
mov
and
pop
ljmp
xor
add
aam
adc
movsb
aaa
or
cli
shr
enter
xlat
mov
mov
jnp
stos
pop
push
mov
lods
lock
jmp
xchg
js
mov
xlat
mov
pop
cmc
or
mov
xor
data16
scas
xchg
mov
or
push
cli
daa
icebp
mov
ret
cli
cli
jbe
movsl
out
mov
jns
jle
sub
movq
mov
and
mov
lcall
fwait
test
movsb
sbb
sub
mov
in
lahf
imul
xlat
movswl
sub
dec
loop
dec
ljmp
arpl
rcll
cs
pop
mov
movsl
pop
movb
pop
testb
pop
in
andb
xorb
addb
adcb
andb
pop
xorb
dec
addb
jl
adc
cltd
jecxz
pushf
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
cmp
push
out
cmp
out
cmp
out
aaa
data16
sahf
cmp
repnz
aad
pop
mov
pop
or
jle
dec
pop
ret
push
push
mov
stc
cli
mov
sbb
jbe
aaa
cli
dec
and
inc
cli
or
je
fstpt
push
sbb
int
or
add
push
jb
add
insl
jb
add
mov
jb
add
clc
jb
add
add
cli
jb
add
push
jb
add
std
shll
push
dec
lea
push
cli
cli
and
lods
cli
mov
and
test
fsubrs
scas
cli
fdivs
test
cltd
scas
push
fadds
mov
and
shll
ret
insb
mov
mov
data16
in
xchg
pop
in
xchg
aaa
mov
shl
or
jge
add
mov
cwtl
adc
xor
out
pop
les
int
inc
rcrl
in
mov
mov
insb
cmp
mov
add
bnd
cmpb
ljmp
pop
add
nop
out
cmp
xor
sub
or
xlat
jno
aas
xlat
pop
or
cmp
mul
aam
pop
in
shl
mov
lea
and
decb
cli
fwait
and
out
cmp
out
cmp
scas
and
iret
nop
and
mov
sbb
fsubl
lahf
clc
or
inc
clc
sub
and
pop
nop
cmpb
add
pop
stos
mov
jne
enter
jns
mov
movsl
shll
add
cmp
stos
aas
mov
jmp
fiadds
sub
in
xchg
mov
gs
inc
in
xchg
pop
in
xchg
gs
xchg
outsl
in
xchg
pop
in
lods
cmp
add
test
or
jge
or
data16
mov
cmp
pushf
mov
movb
dec
mov
movb
cmp
out
pop
dec
sub
gs
ja
or
adcl
adcb
xlat
push
mov
push
mov
pop
fcmovnu
mov
and
clc
in
into
fldcw
ja
subl
ret
cmp
or
ret
or
xlat
mov
iret
xlat
test
stc
xlat
ja
cmp
aam
jmp
xlat
aas
or
invd
pusha
std
in
xchg
mov
fists
and
pop
daa
xor
jp
sbb
mov
rorb
icebp
push
xchg
push
push
jae
or
cs
sub
je
or
xchg
and
push
test
lret
push
movsb
mov
mov
les
mov
pop
xchg
sub
test
arpl
movsb
movb
aam
adc
hlt
jb
insb
mov
pushf
cli
repz
mov
cli
mov
mov
insb
xorl
insb
arpl
scas
mov
and
subb
inc
cmpb
je
or
mov
jecxz
dec
call
clc
cmpsb
adc
jno
add
jecxz
xor
clc
scas
and
xchg
scas
test
daa
pop
jle
inc
pop
outsb
cmpsb
lock
icebp
push
mov
jmp
scas
pop
fmuls
scas
jle
test
scas
sahf
fmuls
mov
pop
scas
mov
into
jns
mov
xchg
sbb
in
in
sarb
sbb
icebp
and
mov
insb
mov
mov
insb
sbbl
scas
mov
pop
scas
mov
fdivrs
or
loop
and
leave
add
jb,pt
add
pop
xorb
dec
xchg
iret
popf
jmp
pop
mov
jne
adc
ret
mov
shrl
adc
data16
mov
mov
stc
fsubs
scas
sbb
push
test
xor
insl
out
cmp
or
inc
adc
mov
insl
add
je
nop
mov
jge
cs
lds
push
jge
or
jge
or
mov
push
jge
cmp
jge
add
mov
imul
mov
cmp
push
int
push
aad
push
fnsave
dec
cltd
mov
mov
mov
mov
push
mov
mov
jne
cmpsb
jge
faddp
add
mov
and
adc
shll
add
loope
cmp
jmp
mov
test
mov
mov
mov
push
mov
jge
faddp
add
mov
adc
push
cld
in
stc
cmp
and
mov
leave
and
xchg
cli
movsl
and
out
xchg
and
push
cli
gs
or
pop
and
pop
cli
xor
dec
cli
add
push
daa
std
out
cmp
out
cmp
in
int
stc
add
or
out
cltd
or
xlat
popa
or
xlat
imul
add
jns
cmp
sub
or
mov
lods
ss
jmp
and
stos
sti
subl
cli
imul
ss
inc
and
es
and
xor
scas
cmp
loop
iret
lods
sbb
out
cmp
into
push
mov
loop
jne
or
gs
mov
insl
pop
scas
sub
cmpsb
test
ret
outsb
sbbb
sahf
sub
xchg
rcrl
cmpb
repnz
loop
push
dec
xlat
push
movsl
and
push
jne
ficoml
adc
lret
xchg
mov
fnstenv
ljmp
fimuls
lea
lea
push
lea
push
add
add
cmpsb
daa
mov
andb
hlt
sar
test
mov
ret
cli
mov
and
sti
cli
nop
and
jmp
pusha
and
xchg
add
fs
iret
add
sub
pop
popa
popa
mov
adcb
and
std
test
iret
xchg
sub
jmp
stos
test
cltd
xchg
sti
mul
dec
and
add
mov
insb
pop
mov
add
repz
jle
insb
sub
mov
sbbb
xchg
clc
mov
test
int
push
push
mov
out
fcomps
xchg
fdivs
dec
inc
jbe
in
xchg
sbb
mov
push
push
xchg
cwtl
shrl
mov
lock
xchg
jg
scas
or
dec
add
mov
cwtl
test
jno
adc
mov
lea
xor
add
jl
sbb
cwtl
pandn
fsubrs
scas
inc
fbstp
jne
jb
add
movsb
jb
add
inc
jb
add
push
jb
add
outsb
jb
pop
dec
in
mov
cs
jmp
cmp
sahf
icebp
std
xchg
xor
dec
or
jge
pop
aaa
cli
adc
in
fildl
mov
pop
jb
add
adc
in
xchg
pusha
lret
frstor
cmp
mov
sbb
mov
insb
pushf
mov
insb
outsb
mov
adc
adc
ret
mov
popl
sub
push
xlat
or
outsl
cmc
hlt
in
xchg
stc
in
xchg
lahf
in
xchg
inc
in
pop
in
in
xchg
or
hlt
std
ret
mov
xor
add
and
clc
insb
add
pushf
push
aad
fcomps
nop
fisttpll
add
pop
scas
mov
dec
scas
lcall
scas
imul
stos
stos
jns
push
and
fimuls
inc
xor
insb
sbb
xchg
add
insl
mov
lea
or
dec
sub
mov
in
cli
mov
mov
pop
and
stc
and
pop
and
push
mov
xchg
adc
je
sub
mov
fnsave
add
dec
push
xchg
xchg
cltd
in
mov
clc
loop
popf
in
push
test
inc
dec
jns
add
xchg
into
xchg
adc
fidivrs
jg
lcall
jmp
pop
mov
int3
repz
scas
insl
fdivrs
scas
mov
jb
mov
fcomps
stc
fsubrs
jmp
repz
cmp
out
xor
xchg
push
scas
pop
in
push
gs
sbb
mov
jg
add
lea
push
imul
std
call
mov
jge
or
jge
or
jno
pop
testl
icebp
neg
subb
addb
sbbb
subb
inc
cmpb
je
or
sbbb
xchg
es
xchg
fdivr
out
cmp
push
pop
and
or
jb
clc
int3
daa
cmp
xor
dec
mov
pop
mov
imul
or
cld
jb
lea
push
xchg
daa
jmp
test
sti
and
cld
add
pop
aam
stos
pop
les
jb
add
xchg
jae
dec
insb
xchg
arpl
mov
jae
movsb
xchg
add
aam
adc
les
clc
insb
adc
sti
pushf
push
ret
push
stos
out
mov
fimull
in
sub
pop
sbb
pop
enter
ljmp
cmp
xchg
sub
push
mov
adc
movsl
popa
lcall
iret
mov
push
mov
jbe
shr
aaa
in
lods
incb
and
in
js
mov
sub
and
dec
into
fldt
xchg
mov
repnz
sub
clc
aad
mov
dec
mov
add
push
xchg
or
push
fs
std
push
lods
add
cld
inc
or
jb
add
cmp
pop
sbb
xchg
push
jecxz
cmpsb
mov
je
mov
fdiv
jmp
mov
mov
ss
lock
imul
mov
loope
jle
dec
hlt
push
add
push
mov
push
push
push
cli
je
mov
inc
pop
xor
cmp
std
jb
add
xchg
dec
iret
adc
dec
xor
or
pop
sbb
daa
lods
clc
ss
pop
clc
pusha
cmp
mov
outsl
and
or
pop
push
push
aam
or
jp
outsb
jb
add
clc
int
jge
add
ljmp
lahf
sub
mov
out
mov
pop
pop
fmull
jae
fists
push
iret
mov
repnz
or
add
out
into
das
fwait
or
daa
sub
or
mov
xor
mov
stos
ljmp
sarl
push
cmp
dec
sbb
daa
mov
and
cmp
jae
popa
mov
push
fisttpll
pop
pop
add
mov
insb
pusha
mov
insb
jae
or
es
pop
mov
and
fsubr
mov
jns
push
jbe
adc
mov
sub
sub
pop
out
sar
insb
lds
fdiv
test
ja
insl
mov
std
cmc
push
mov
adc
jbe
call
mov
insb
jno
loopne
sbb
mov
push
mov
xchg
in
xchg
and
repz
enter
fcoml
lea
push
jb
jnp
stos
push
es
or
dec
dec
lcall
stc
mov
iret
mov
movsl
pop
inc
jne
dec
add
push
fiaddl
inc
jbe
sbb
hlt
clc
testb
pop
or
add
xchg
dec
push
mov
in
pop
sub
or
pop
arpl
sub
mov
cmp
cltd
jno
lcall
das
movsb
jbe
movsb
mov
cmp
inc
sbb
sub
sub
in
iret
loope
jnp
or
xor
lea
frstor
add
xchg
iret
in
xchg
dec
in
scas
push
lahf
mov
add
and
push
int3
sbb
in
xchg
sbb
jle
dec
cld
data16
adc
or
xor
fildll
arpl
data16
pop
push
or
call
dec
stos
rcr
push
mov
out
or
inc
in
int
insl
add
cwtl
sbb
scas
fsubs
test
push
xor
jbe
xchg
xchg
int
ljmp
stos
insb
mov
fisttpll
pop
into
xlat
mov
or
ss
out
xchg
movl
push
imul
stc
sub
fwait
insb
lock
xor
fsubrl
aaa
subb
push
jmp
call
or
adc
lret
scas
ss
in
fsubrs
xorl
mov
pop
pop
xor
fwait
pop
and
pop
or
and
addb
jns
fcmovne
lods
aas
mov
rcl
or
fsubrp
and
and
out
push
push
push
xlat
iret
fidivl
mov
add
std
js
fcmovb
sbb
movsb
or
test
dec
mov
xor
pushf
sbb
lret
ds
repnz
scas
popf
fmuls
fsubl
mov
fisttps
push
push
cmp
imul
push
mov
or
popa
mov
lods
rcl
sbb
les
xchg
jb
mov
shrb
jbe
cmp
enter
sub
jge
or
mov
or
gs
mov
pop
push
test
sub
gs
shll
add
mov
push
pop
sbbb
popf
pop
add
push
outsb
ffree
faddl
pop
jae
jg
push
std
push
daa
fdivr
xlat
daa
xchg
clc
cmp
pop
out
pop
out
imull
sub
mov
add
daa
jp
push
jb
add
sti
cwtl
dec
ja
fists
test
scas
cmc
jno
push
aaa
fdivs
cmp
ja
mov
fmull
jp
loop
scas
or
fiadds
in
clc
loope
inc
in
jp
mov
add
mov
inc
xchg
fisttpll
test
and
fwait
daa
fsubrp
scas
cs
scas
pop
cwtl
xlat
cmp
push
add
fcmovne
mov
mov
bound
pop
cli
adc
add
insl
jb
jl
mov
sbb
out
mull
cwtl
data16
lret
push
orb
fstpl
pop
add
inc
std
testl
jg
cmpsl
add
fnstsw
mov
popa
mov
mov
popa
sub
push
testb
scas
fcomps
xchg
fiadds
mov
cmp
pop
and
scas
leave
jb
mov
add
dec
not
data16
mov
jb
push
mov
xchg
mov
insb
stos
pushf
movl
jmp
nop
add
sub
pop
push
pop
adc
mov
dec
jle
call
mov
movsl
test
jbe
xor
fucomip
inc
inc
orb
push
fmul
fists
jb
add
imull
lods
or
xlat
mov
pop
inc
sub
add
inc
sti
or
jge
or
jb
daa
jb
push
xchg
adc
xchg
or
sarb
xchg
test
into
call
test
mov
mov
sub
sub
shl
lods
jecxz
in
xchg
test
jge
dec
in
xchg
or
mov
add
in
out
in
scas
pop
fcomps
lcall
sbb
cmp
add
pop
jg
push
stos
lret
pop
loop
mov
cmp
in
cmpsl
inc
popf
insl
test
lret
inc
aas
push
cmp
in
int
das
push
dec
fstpl
jb
jmp
pop
cmpsb
pop
rcl
sbb
push
pop
and
pop
ss
cmpsb
jne
mov
call
inc
clc
and
daa
out
jg
cs
xlat
mov
insb
cmpsl
mov
insb
lcall
push
pop
inc
mov
mov
stc
xchg
daa
mul
movsl
fdiv
mov
pop
pop
sub
mov
daa
cli
mov
lods
test
xor
int
in
xor
mov
push
and
sbb
push
cld
push
push
gs
xlat
mov
cmpsl
dec
mov
enter
sub
inc
add
and
daa
mov
shll
pop
jo
mov
cmp
in
xchg
sbb
daa
mov
loop
jge
inc
in
ret
mov
shlb
push
push
les
mov
lock
jne
pop
mov
mov
jb
add
sbb
into
jb
add
jecxz
outsb
ljmp
nop
fcoms
scas
cli
fdivs
popf
pop
shr
ja
jo
test
and
inc
out
sub
cmp
es
shrb
cwtl
pop
xor
add
aad
das
sub
pop
mov
aaa
div
cmp
and
and
cld
sub
ljmp
stos
fsubs
push
fdivrs
mov
jmp
loopne
mov
jg
outsl
cli
lock
ja
out
pop
loopne
daa
mov
subb
fdivrs
lahf
push
fcmovnu
mov
aam
iret
out
sbb
aaa
popf
mov
iret
mov
test
aam
cmpl
test
fdivrs
sbb
rcr
add
xchg
mov
xchg
and
cmp
std
test
lahf
cmp
in
xchg
jge
xchg
aaa
adc
cmp
xlat
jg
lea
mov
mov
push
insb
es
shrl
adc
sub
pop
push
fcmove
xchg
jae
mov
or
fisubl
pop
mov
shll
repnz
xorb
cld
into
dec
xchg
sahf
in
scas
dec
adc
out
ja
pop
jae
rcl
pop
fiadds
out
in
jae
pop
xchg
dec
int
call
sub
or
mov
jmp
mov
js
lods
add
lcall
insb
mov
mov
inc
cmpb
jg
in
test
cmp
iret
icebp
sti
in
mov
cmp
sub
xor
lock
pop
lock
mov
fxch
mov
mov
cmp
gs
jb
add
inc
jb
add
jp
into
iret
enter
fnstsw
orb
mov
or
sub
push
mov
hlt
add
pop
jb
pop
inc
pushf
sub
out
cmp
in
push
adc
iret
pop
or
xlat
pop
add
inc
pop
or
add
leave
push
xor
mov
in
adc
jae
push
xchg
cltd
add
in
insb
gs
inc
xor
add
jae
jle
or
mov
nop
les
in
popf
mov
cltd
or
iret
insb
mov
xor
cltd
stos
in
stos
into
adc
mov
cmpsb
dec
mov
push
lret
dec
pop
xlat
out
sub
fcmovnu
and
ficompl
popf
sbb
ja
ror
addr16
pminub
cli
daa
pop
in
imul
sub
nop
mov
hlt
and
lea
add
repz
addb
lcall
jb
add
add
stc
add
out
jo
scas
insl
icebp
sahf
cltd
mov
mov
fdivrs
lods
pop
cmp
mov
lds
mov
ja
or
out
movsb
add
in
xlat
sub
jmp
xor
mov
jno
stos
insb
divb
hlt
insb
popa
popl
popf
fwait
jge
out
jae
push
aad
sub
repz
and
mov
xor
adc
lahf
mov
push
icebp
dec
cmp
je
jecxz
sub
or
add
sti
leave
lret
out
adc
testl
stos
mov
and
in
cltd
jg
mov
pop
mov
push
addr16
xchg
dec
fildll
scas
das
test
push
repnz
or
xlat
jle
repnz
sti
mov
add
pusha
cltd
fistpll
and
xchg
dec
fs
mov
ss
and
mov
xchg
imul
jbe
fsub
out
mov
mov
inc
or
inc
sahf
sbb
call
jle
lds
jmpw
ds
push
into
lea
das
out
mov
jne
mov
add
add
mov
jge
lea
pusha
pop
iret
movsb
or
mov
mov
hlt
mov
dec
sbb
repnz
out
sbb
pop
cli
popf
cmp
rolb
popa
and
dec
lods
sbb
push
xlat
scas
inc
or
xor
int
mov
push
jl
sub
movsl
rorb
mov
add
testb
sbb
jne
add
pop
dec
mov
inc
and
pop
or
jge
adc
clc
mov
lds
add
cmp
out
cmp
imul
les
adc
mov
mov
and
jle
call
jge
cld
push
addb
sub
ljmp
fisttpll
lea
mov
cli
call
sahf
aam
stos
xor
out
insl
add
jle
lods
dec
lods
enter
add
scas
inc
sbb
in
push
dec
stc
fbld
cltd
filds
in
fwait
and
push
popf
mov
cltd
ror
and
add
lea
pop
out
out
push
push
pop
lcall
inc
call
out
out
lcall
push
lods
sub
aad
or
lea
dec
jbe
and
into
mov
ds
cmp
or
inc
out
cmp
or
and
cmp
mov
sahf
adc
lret
orb
int
test
icebp
in
mov
adc
mov
pop
mov
ja
cmpb
cli
cli
xchg
and
ljmp
dec
data16
movsb
add
mov
mov
stos
les
mov
mov
add
fsub
scas
cmp
fcoms
stos
int
inc
cmc
or
mov
int
xor
jecxz
mov
mov
lea
or
or
push
test
push
add
push
ljmp
popf
cmp
mov
aam
dec
lret
movsl
pop
jbe
push
and
push
mov
add
enter
xorb
imulb
dec
insb
add
sub
stos
inc
push
add
add
std
xor
out
xor
mov
sub
int
jle
pop
lods
sub
cmp
mov
push
repnz
push
xor
aam
sub
push
shlb
nop
adc
xchg
out
mov
into
cmp
lea
test
jo
mov
je
into
out
andl
shrb
rol
lcallw
in
sbb
adc
jno
mov
sbb
notb
lea
inc
jo
int3
shl
shlb
inc
in
cmp
cmp
xchg
inc
mov
push
cmp
add
and
rcrl
sbb
add
add
jbe
das
enter
rolb
add
stc
fbstp
scas
ja
push
inc
dec
jbe
add
jbe
add
mov
out
icebp
jge
scas
xchg
jl
movsb
out
jmp
lods
lret
or
lods
xor
clc
lock
jnp
xchg
mov
jbe
rcl
sarl
xor
dec
pop
imul
cwtl
sbb
lds
call
subb
nop
mov
fs
fsubrl
leave
sahf
jb
cmpb
test
lcall
or
out
in
mov
xchg
xchg
test
in
mov
pop
jne
out
cmp
push
mov
movsb
pushf
aaa
lea
pusha
ror
in
or
adc
loopne
mov
ja
cmpsb
loop
out
mov
push
pusha
mov
fwait
inc
cmp
push
test
mov
cmpsb
js
sbb
loop
aaa
xchg
cmpb
cli
xchg
mov
sbb
adcl
mov
ja
ljmp
xchg
cmpsl
test
repz
mov
mov
jns
es
mov
jge
adc
addb
xchg
mov
jg
push
repnz
mov
out
scas
cmpsl
pop
jge
psubb
xchg
push
fwait
cs
cmp
and
pop
or
dec
test
xchg
lret
jmp
xorl
repz
xorl
insb
imul
jo
aas
sahf
clc
stos
jge
mov
iret
pusha
imul
xchg
insb
lret
sub
add
adc
push
push
int
dec
stc
pop
fistpl
mov
and
cmp
adc
jb
shlb
stc
imul
jns
cmpsb
xchg
ds
movsl
fs
mov
xorb
add
mov
inc
inc
icebp
mov
or
adc
movsb
adc
add
push
shl
in
out
inc
lds
lock
dec
stos
mov
sbb
sbbl
mov
in
dec
aas
lods
test
mov
ret
ja
dec
out
push
mov
jecxz
mov
push
push
cmp
sub
stos
js
insl
aam
or
notb
cmp
adc
mov
lods
fistl
or
scas
imul
dec
lods
mov
hlt
mov
mov
mov
sarl
mov
in
bound
push
jecxz
and
adc
out
xchg
mov
movb
push
xchg
hlt
stos
out
mov
pop
sub
pop
add
and
push
repnz
xor
insl
out
in
in
push
mov
out
js
lret
mov
loop
adc
clc
push
push
xchg
xor
lock
shlb
pop
popf
ret
or
push
iret
mov
jg
mov
xor
cmp
shrb
mov
ret
ret
scas
pop
xlat
test
imul
or
insb
push
movsl
in
xor
aaa
movsl
cmpsb
out
cmp
add
mov
enter
xchg
jbe
and
jo
push
push
push
inc
sbb
loopne
loope
push
xor
int3
imul
add
or
lods
enter
cld
fldenv
and
cmpsb
loope
mov
loop
or
or
mov
mov
mov
push
lret
clc
add
roll
stc
xchg
mov
test
jp
sub
push
roll
xor
xchg
icebp
frstor
inc
cltd
test
mov
pushl
shlb
jbe
push
out
jmp
or
jo
or
fsubl
stc
xlat
push
movsl
cmc
aaa
lret
lods
or
fistl
icebp
hlt
adc
stos
cmpsl
aas
add
fiaddl
ret
pop
inc
or
movsb
negl
fucomip
dec
sub
data16
adc
fidivrs
test
pop
aam
scas
lret
in
pop
cs
sbbl
xchg
lds
mov
push
lods
fists
dec
mov
mov
and
lds
mov
jge
dec
hlt
jb
popa
xchg
add
xor
out
inc
xchg
jo
jo
daa
dec
sbb
mov
lods
js
add
cli
mov
fs
mov
stos
mov
add
push
rcll
pop
pop
cld
xor
cmp
and
fwait
jmp
jp
std
fnstenv
movsb
xchg
orb
addl
aaa
mov
ja
xor
fs
lcall
call
pop
sub
sub
test
adc
adc
xor
mov
xor
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
xor
bsf
adc
xor
test
or
sub
sub
jmp
lcall
ret
or
bsf
shl
bts
adc
xor
add
bswap
jmp
lcall
xor
add
add
pop
xor
xchg
push
mov
or
and
test
xor
add
call
lcall
incl
ret
neg
sub
shl
mov
btr
mov
test
add
cmp
jmp
lcall
cmp
test
dec
adc
inc
shr
cmp
btc
sub
dec
mov
mov
xchg
push
push
xchg
dec
add
add
call
movsbl
inc
xor
shr
adc
bsf
test
or
or
dec
add
mov
sub
sub
xor
and
cmp
dec
not
bsf
mov
shl
sub
xchg
mov
test
add
movsbl
adc
xor
sub
jmp
lcall
ret
or
cmp
test
cmp
shl
adc
or
inc
mov
call
lcall
add
xorl
pop
xor
xchg
push
neg
sub
shl
add
mov
xor
mov
neg
jmp
lcall
stc
add
xchg
ret
neg
sub
cmp
mov
btc
test
adc
add
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
bts
sub
mov
btc
shr
cmp
sub
jmp
lcall
push
add
adc
not
bswap
not
neg
add
cmp
and
bsf
mov
add
mov
cmp
mov
cmp
add
xor
adc
btr
and
inc
call
lcall
add
cmp
sub
btc
dec
xor
or
test
sub
call
lcall
push
add
or
adc
repz
dec
cmc
cmp
btc
cmp
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
adc
sub
btr
cmp
shl
btr
neg
call
lcall
push
loope
add
test
gs
lods
mov
xchg
mov
add
sub
jmp
lcall
dec
bswap
or
xor
sub
bts
bt
bts
movzbl
mov
or
sub
bswap
bts
or
btc
test
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
bt
bsf
bt
test
mov
neg
or
or
push
shl
btc
cmp
cmp
shl
btc
cmp
cmp
bswap
add
add
mov
sub
add
bt
shr
xor
add
mov
cmp
cmp
bt
cmp
bt
btc
inc
btr
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
add
shl
bts
btc
shr
bt
adc
call
lcall
add
adc
mov
bsf
sub
test
btr
or
inc
mov
add
and
or
add
test
or
test
sub
mov
neg
neg
xor
sub
cmp
xor
test
call
lcall
mov
btr
test
add
sub
or
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
mov
btr
sub
sub
or
or
inc
shr
cmp
cmp
mov
test
inc
sub
or
xor
jmp
lcall
xchg
or
movzwl
inc
and
mov
or
and
dec
mov
add
test
cmp
bts
bt
sub
bsf
bt
call
lcall
add
mov
bt
test
and
test
cmp
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
shl
btc
xor
sub
test
mov
sub
mov
shr
shr
mov
bts
btr
and
neg
sub
dec
movswl
xor
test
and
neg
add
cmp
neg
bsf
movzwl
mov
add
test
adc
and
and
xor
btc
lea
inc
cmp
jne
test
and
test
btr
xor
sub
shl
add
and
sub
xor
bswap
movswl
btr
test
test
test
call
lcall
je
add
mov
and
sub
sub
bt
test
sub
mov
cmp
bts
adc
or
dec
bt
btc
test
call
lcall
mov
btc
mov
bsf
shl
cmp
btc
bts
cmp
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
sub
bt
xor
btc
xor
dec
call
lcall
shr
and
inc
and
test
btr
movzwl
or
btc
add
btr
xor
xor
inc
not
movsbl
sub
xor
or
mov
jmp
lcall
je
test
test
btr
btr
bts
shr
mov
add
inc
cmp
add
bsf
movzbl
adc
cmp
test
and
call
lcall
add
and
or
or
add
or
not
bsf
bt
push
pop
inc
add
loop
btc
add
bt
and
btc
xor
shr
push
decl
mov
add
xor
and
xor
btr
bsf
mov
test
call
lcall
push
ret
inc
dec
bswap
dec
and
or
or
bt
push
shll
cmp
inc
xor
bt
neg
bsf
adc
bt
push
adc
neg
mov
btr
sub
or
dec
sub
mov
adc
shr
cmp
shr
bt
sub
not
push
push
pop
add
add
call
or
not
bts
inc
add
sub
bts
bt
xchg
or
test
movzbl
btc
inc
and
test
shl
shl
mov
sub
btc
add
add
bt
add
sub
and
call
lcall
mov
loop
loop
mov
std
dec
neg
adc
add
shr
bsf
add
test
btr
test
shr
bts
add
adc
call
lcall
mov
cmp
sub
bt
test
mov
bswap
shr
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
or
bsf
shr
and
test
bt
adc
bswap
or
sub
test
and
test
inc
call
lcall
adc
rorb
push
mov
cmp
sub
adc
mov
mov
mov
cmp
and
or
adc
inc
and
and
dec
cmp
je
btc
or
bsf
sub
mov
adc
inc
add
adc
add
shr
adc
mov
shl
adc
shl
cmp
sub
call
lcall
bts
adc
sub
or
mov
shl
movzwl
cmp
sub
test
xor
add
or
bsf
and
add
movswl
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
or
bt
movzwl
btc
add
xor
sub
push
decl
mov
add
bt
bt
test
xor
cmp
xor
bt
bsf
push
decl
mov
add
bts
cmp
sub
shl
and
bts
shl
add
bsf
add
add
xor
add
bsf
mov
mov
jmp
sub
bsf
mov
add
add
adc
bt
shr
mov
neg
bsf
btc
add
cmp
shl
mov
test
mov
mov
and
bt
test
add
sub
inc
add
cmp
mov
inc
add
add
and
bt
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
sub
add
shr
sub
inc
bts
and
dec
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
test
not
bsf
add
shl
add
and
push
push
cmp
adc
xor
not
shl
bt
sub
adc
push
sub
mov
test
test
not
xor
bts
xor
bts
btc
mov
sub
cmp
add
shr
xor
or
mov
shl
call
lcall
js
in
cmp
mov
lds
and
ret
btr
adc
not
lea
xor
movzwl
mov
test
adc
shl
test
neg
mov
shr
movsbl
sub
test
cmp
shr
cmp
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
ljmp
test
test
xor
cmp
bsf
and
sub
mov
sub
bt
shl
sub
mov
bt
xor
shl
push
btc
inc
xor
xor
test
shl
btr
bts
push
shl
movsbl
sub
and
xor
bts
sub
btc
push
shl
xor
add
add
xor
btc
add
call
lcall
mov
sub
or
mov
shr
bt
adc
sub
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
bswap
xor
xor
test
shl
shl
cmp
call
lcall
sub
dec
mov
shl
and
test
add
shl
add
inc
bts
and
xor
test
cmp
or
bt
shr
call
lcall
mov
shr
bsf
bt
or
shr
sub
movzwl
movswl
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
aad
push
cmp
sahf
cmp
rolb
faddl
imul
int
sbb
mov
and
sbbb
push
or
or
add
sbb
test
sbb
shl
add
test
mov
addb
pop
pop
lds
xchg
int3
mov
fidivs
xor
aad
xor
pusha
cld
jbe
fdivrs
and
jno,pt
cmp
stc
push
push
sbb
pop
push
stos
inc
add
xor
adc
add
test
aad
sbb
pop
adc
add
cmpsl
push
lea
pop
adc
xor
adcl
push
or
or
add
shlb
test
add
movsl
sbb
or
mov
sub
fsubl
add
arpl
mov
fmull
imul
bound
jnp
adc
or
andb
add
and
nop
inc
mov
subl
add
mov
adc
push
call
pop
mov
add
inc
dec
inc
push
dec
push
out
xor
inc
pop
inc
aaa
cmp
pop
in
dec
je
in
inc
in
jge
jnp
call
pop
mov
push
mov
ja
jl
sqrtps
pop
inc
push
dec
push
inc
push
in
in
cmp
push
hlt
inc
aas
xor
jecxz
inc
aaa
mov
test
jle
dec
orb
ss
push
push
inc
inc
call
dec
mov
shll
dec
inc
cmc
dec
inc
and
pop
push
push
test
push
pop
aaa
xor
dec
inc
nop
inc
dec
dec
push
cmp
inc
cmp
aaa
push
pop
cmp
dec
out
push
mov
dec
dec
inc
incb
aad
xor
inc
sarl
cmp
lds
mov
in
push
pop
push
inc
pop
inc
cmp
dec
dec
push
sbb
push
mov
lahf
cmpsl
ss
mov
imul
mov
sub
pop
outsl
jae
and
jne
stos
jb
out
popa
outsb
stc
sarl
pop
outsl
cs
cmpsl
outsl
addr16
dec
insl
add
insb
push
outsb
je
bound
sbb
pop
add
ret
and
lds
sub
ffreep
push
push
push
imul
mov
push
and
push
jle
out
and
jo
scas
arpl
movq
in
cmp
lahf
mov
adc
mov
inc
test
shll
dec
sarl
int3
sbb
loope
push
dec
divl
aam
outsb
repnz
push
outsb
add
jb
and
and
jo
push
outsl
xor
jbe
jbe
test
inc
xchg
jmp
movsb
enter
pushw
push
decl
jne
adc
xchg
inc
cs
test
xchg
add
add
pop
mov
push
push
add
push
push
je
or
add
inc
push
call
sbb
add
pusha
adc
insl
mov
xlat
mov
popa
addr16
mov
inc
ret
jns
je
or
loope
negl
icebp
add
or
fs
repz
pop
je
daa
int
iret
out
vpabsw
pop
sub
push
js
mov
fs
xor
push
in
aad
push
dec
popa
jns
mov
xchg
jecxz
or
cmp
cs
add
add
sbbb
push
dec
inc
push
push
inc
push
inc
dec
pop
mov
xchg
aad
popa
or
inc
daa
add
fadds
