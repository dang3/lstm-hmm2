pop
cmpsb
repnz
ret
aam
xchg
fcomip
fsubrs
ja
pop
sub
and
nop
mov
or
cmp
mov
xor
pop
mov
push
cmp
inc
xor
xor
jmp
sub
testb
aas
pusha
ss
out
testl
sub
and
mov
mov
pop
push
les
shll
sub
in
xor
dec
push
das
int
addl
mov
stos
mov
xor
out
lret
and
test
vxorps
adc
fwait
cmp
and
in
xchg
dec
sbb
jno
jno
das
fst
test
popf
mov
jmp
mov
leave
insl
cmc
add
sarb
jecxz
inc
loop
xchg
or
xor
sbb
mov
pop
adc
pop
fistl
inc
cwtl
pop
lods
mov
mov
out
je
xor
dec
sbb
push
and
fwait
jmp
arpl
or
add
jno
fsubs
mov
push
xchg
cmp
xlat
je
mov
sbb
cmp
in
mov
jne
mov
icebp
push
mov
and
push
pushf
icebp
bsr
stos
jle
add
fistpl
cmp
sbb
pop
std
je
add
jae
adc
stos
pop
rorb
test
and
out
insl
inc
xchg
mov
or
lcall
fwait
clc
ret
test
xchg
mov
cmpsb
mov
jno
movsb
mov
cmp
out
test
add
shl
icebp
xchg
pop
lock
pop
xor
in
mov
inc
cwtl
or
mov
or
test
das
out
call
out
cmp
sub
or
pop
xchg
lret
clc
movb
scas
inc
fcom
add
push
xor
xchg
jne
lret
sbbb
insl
pop
dec
fs
bound
cwtl
xchg
xlat
sbbl
push
or
xchg
add
xchg
add
in
push
dec
mov
insl
bound
xchg
xchg
push
mov
dec
std
mov
out
test
faddl
cmpsl
push
pop
lock
sbb
mov
sbb
mov
lods
clc
jl
bound
jnp
mov
aam
xchg
jne
test
decl
stc
adc
dec
mov
lock
push
pusha
cwtl
xor
pushf
jb
pushf
lretw
mov
xchg
jp
sahf
pushl
push
ss
stc
jle
push
push
push
xchg
ret
pushw
and
mov
movsl
in
sub
subl
in
lds
xchg
lea
scas
xor
fwait
jl
int3
adc
lds
xchg
dec
mov
cwtl
pop
jno
repz
in
and
mov
ds
xchg
lahf
xor
lret
ljmp
call
xchg
bound
adc
jg
mov
add
sbb
and
mov
push
and
jp
leave
mov
out
addl
sti
cltd
lods
jo
test
bound
fnsave
push
mov
cmp
pop
popf
push
pop
jge
pop
or
cmp
mov
call
push
lcall
lock
lods
cmp
shll
or
xor
xchg
pop
xchg
lock
insb
loopne
aam
int3
aam
divps
subb
fdivr
adc
jmp
test
faddl
call
add
subb
aam
cli
lcall
jp
mov
lods
lds
cmp
sub
ss
lret
cmpsb
push
loope
lcall
mov
adc
xor
inc
mov
push
stc
andl
stc
fs
adc
aas
fsubl
adc
jl
sub
out
popf
enter
insb
mov
xor
and
out
js
push
nop
popf
or
je
xchg
add
ljmp
xor
xchg
aam
push
out
pop
adc
arpl
in
xchg
lods
out
outsb
cmc
add
push
xchg
adc
xchg
enter
dec
push
shl
popa
lret
push
xchg
cmpsb
push
inc
push
imul
mov
mov
jge
pop
mov
aad
xchg
cwtl
lock
push
inc
shrb
fcmovnb
sbb
pop
xchg
sarl
insb
jle
mov
call
int3
orl
push
in
mov
mov
adcb
das
inc
subb
cmpsb
clc
inc
cmp
dec
add
fbld
dec
cwtl
push
call
adc
fcoml
jmp
das
xchg
jmp
mov
jmp
stc
ljmp
lock
in
enter
loop
mov
std
pop
cmp
stos
mov
and
inc
das
push
mov
lods
loop
xor
mov
sbb
jae
jne
or
cli
xchg
xlat
dec
stos
lret
and
stos
wbinvd
push
push
or
stc
inc
rcrb
lock
jne
cli
sub
add
pcmpeqb
enter
mov
cmp
outsb
fsubr
sbb
jecxz
scas
or
lods
adc
test
popa
mov
ds
int
jns
ret
xchg
or
lock
pop
push
andb
push
mov
incb
dec
jno
clc
cld
push
pop
xchg
mov
fs
aas
fisttpl
rcrb
insl
aam
test
push
add
mov
dec
or
cmp
lcall
add
add
das
fadds
mov
fs
arpl
mov
adc
xchg
mov
push
and
pop
pop
pop
inc
dec
clc
lea
push
push
push
push
lea
push
push
push
push
sub
push
push
pop
pop
push
pop
push
mov
pop
push
push
push
cmp
pop
pop
pop
test
push
cmp
pop
lea
je
ja
or
cmp
jge
push
inc
pop
shl
add
push
test
pop
jp
or
inc
dec
cmc
nop
push
test
pop
cld
call
test
js
ror
add
mov
and
lea
push
jnp
shl
pop
jns
push
jns
push
mov
pop
pop
cld
and
push
add
push
pop
pop
push
jbe
add
pop
jns
push
test
pop
sub
clc
lea
push
inc
pop
jbe
xor
rol
test
push
dec
pop
cld
lea
add
push
push
je
ror
pop
pop
jge
shl
add
push
jns
rol
pop
rol
rol
pushl
pop
ja
rol
push
push
mov
pop
pop
mov
push
je
or
pop
or
testl
je
jbe
shr
xchg
jmp
popa
std
sub
stos
std
test
inc
mov
push
fisttpll
mull
xor
push
mov
add
pop
push
call
fsubl
push
cmp
adcb
and
out
xor
cwtl
dec
stos
add
loopne
loopne
aas
mov
push
mov
push
xor
pop
pop
push
ja
and
pop
js
or
stc
mov
inc
inc
inc
inc
and
sub
test
push
jle
push
add
pop
test
test
sub
ja
push
push
cmp
pop
pop
or
dec
jne
push
inc
pop
push
push
push
cmp
pop
pop
pop
jmp
insl
adc
xchg
push
push
xchg
cmpsl
js
cld
bound
inc
pop
cmc
add
dec
adc
cmp
add
test
mov
push
jp
push
jns
nop
pop
pop
test
push
push
inc
pop
pop
sub
test
or
dec
jne
cmp
nop
out
hlt
pop
rclb
les
lret
fs
pop
sbbb
add
nop
je
je
enter
aaa
std
mov
push
jecxz
sub
cs
mov
pop
stos
cltd
or
cmp
outsl
psllq
into
testl
imul
mov
pop
pop
mov
push
inc
aad
fidivrl
fcom
fs
or
pop
mov
jae
adcb
mov
jl
out
inc
insl
pop
cwtl
jp
add
roll
popa
in
lret
jl
stc
mov
lcall
out
mov
xchg
xor
std
pushf
adc
cmp
jl
out
inc
imulb
out
mov
xor
ficoms
lods
mov
mov
inc
jnp
cmp
cmp
mov
jl
inc
movsl
pop
push
push
xor
push
sti
jp
jno
fcoml
inc
xchg
pop
or
or
and
mov
push
lret
out
pop
cld
call
in
xchg
in
ret
cs
shrb
jae
inc
and
and
es
pushf
addr16
rol
je
jge
mov
mov
cli
out
test
jno
js
sbb
push
fiaddl
repnz
push
nop
dec
mulb
sahf
jmp
pop
fwait
lret
insb
enter
stos
cmp
sbb
scas
out
jmp
jno
rorl
cvttps2pi
sbb
mov
push
cmpsl
xor
inc
es
inc
inc
inc
mov
sbbb
test
repz
cmp
xchg
inc
jmp
je
clc
add
je
out
es
adcl
mov
pop
jne
rcrl
nop
push
adc
mov
dec
cmpb
and
dec
lret
ret
sti
sbb
sub
lds
imul
xchg
cltd
std
fnstcw
scas
imul
mov
and
neg
mov
mov
fiaddl
push
xchg
jne
test
daa
adc
scas
mov
cld
mov
cmp
mov
mov
lods
pop
xor
and
cmp
cld
bnd
iret
call
xor
cwtl
lea
loope
sbb
cmp
rcrl
sbb
ficoml
aad
and
jl
mov
arpl
add
roll
jnp
inc
iret
lods
bound
or
rorl
and
scas
inc
jbe
in
mov
pop
xor
sub
aam
mov
movsb
aas
call
jnp
imul
into
repz
xorl
or
xor
inc
adc
test
pop
andb
test
sub
mov
subl
scas
lock
fstpt
rcl
sbb
jle
loope
pop
aaa
mov
mov
jp
int
mov
xchg
scas
add
test
stc
rolb
cmp
mov
mov
iret
sub
lcall
repnz
xchg
push
enter
dec
stos
testl
dec
and
dec
sbb
dec
cmp
test
arpl
mov
popf
add
repnz
pop
mov
and
xor
jle
test
mov
aad
xlat
mov
int
aas
mov
outsl
pop
sbb
fsubl
mov
pop
jae
dec
cmpsb
add
nop
sub
popa
mov
aad
or
addl
or
cld
jae
les
mov
mov
push
movsl
push
cli
or
cmp
xor
jnp
mov
mov
pop
cwtl
addr16
pop
inc
jecxz
xchg
popa
out
fisubs
mov
push
ja
fimuls
shrl
es
test
pop
pop
adc
jp
and
or
and
mov
pop
add
fidivl
int3
push
adc
fwait
sti
cmp
cmp
xchg
mov
inc
movsb
lcall
out
insb
push
mov
mov
jb
and
enter
mov
mov
cmpl
push
repnz
dec
push
or
les
insb
mov
icebp
cmp
or
fcomps
jp
into
sub
inc
add
repz
testl
mov
mov
popa
fs
add
lret
js
xchg
cmpsb
sub
aaa
test
sub
and
pop
dec
mov
test
arpl
xchg
scas
jns
test
leave
addb
push
pop
out
pushf
mov
cmp
push
mov
xchg
loop
xchg
push
scas
jecxz
mov
mov
xchg
fimull
in
daa
lock
cmp
ds
outsl
lods
jmp
xor
loopne
scas
or
shll
mov
lock
sub
mov
adc
jae
sub
mov
cmpsl
hlt
mulb
jae
xor
loop
ror
add
lret
in
add
add
andb
test
scas
mov
xchg
fsubs
dec
push
das
or
subl
pop
daa
hlt
pop
fists
test
adc
fadd
int3
jo
mov
mov
sar
popa
nop
or
jl
or
dec
imul
xlat
call
jle
mov
xor
jmp
sbb
sbb
rclb
mov
xorb
loope
cltd
shrl
mov
iret
cmp
test
out
js
mov
inc
pop
push
inc
dec
mov
jmp
ss
sub
mov
mov
iret
adc
mov
and
dec
xor
shlb
xor
mov
adc
fsub
loope
and
ret
and
adc
mov
lods
mov
imull
shlb
ficoml
scas
sub
xor
push
and
ljmp
mov
xor
jo
lds
mov
das
push
test
push
jae
pop
sbb
sub
adc
fiadds
cmp
mov
inc
orl
popa
xchg
push
mov
je
inc
lahf
adcl
mov
aas
in
out
out
aad
lock
mov
dec
jl
mov
stc
mov
jbe
adc
mov
push
add
fists
call
adc
nop
or
testl
jne
jl
add
jnp
aam
pushf
and
js
testb
sbb
mov
andb
hlt
addr16
pop
push
or
aaa
xchg
insl
ljmp
pop
cli
add
lock
push
and
insl
in
scas
inc
lea
lods
dec
stos
fwait
dec
in
xorl
aam
fcoml
popf
lret
jns
or
xlat
or
pop
rol
xchg
push
inc
out
sub
repnz
mov
jg
xchg
mov
sbb
add
sbb
push
cmp
sbb
loopne
aas
movsb
xor
and
xchg
and
jb
fstps
scas
leave
and
in
pop
loopne
lods
fcoml
les
jbe
mov
test
sbb
mov
ret
lock
sarb
cmpsl
push
cli
repz
mov
mov
orb
mov
cs
popa
xchg
rclb
mov
imul
les
in
sub
into
adc
cmpsb
and
in
dec
push
arpl
mov
add
lea
cmp
scas
insl
stc
int3
in
sbb
xor
pop
mov
push
fnstcw
or
addr16
popf
xlat
sub
fdivl
leave
push
test
push
push
out
ds
mov
xor
jl
inc
shlb
jnp
push
mov
xor
mov
loop
sbb
andl
mov
mov
jo
stc
push
push
outsb
pop
icebp
mov
sbb
push
aaa
add
insl
jl
add
rclb
xchg
adc
lcall
leave
bound
mov
sbb
fcompl
outsl
clc
shlb
insl
in
pop
xor
lock
push
and
lret
adc
xchg
sub
movsl
out
sbb
movntss
adc
iret
jnp
ja
push
fadd
dec
xlat
pop
pop
xchg
mov
add
xchg
call
stc
test
les
out
idivb
xor
aas
repnz
xor
mov
xchg
stc
fadd
inc
cmp
mov
cmp
sahf
into
loope
aas
and
mov
add
jmp
popf
nop
pop
pop
lea
dec
dec
test
xor
push
pop
sbb
jo
inc
push
inc
popl
arpl
cld
pop
cmpsl
movsl
push
mov
mov
mov
push
pop
pop
dec
rcl
addr16
aas
push
inc
or
mov
scas
add
mov
push
out
test
cmpb
fnstsw
sarl
lds
and
rcrl
push
cmp
push
push
pop
sahf
jle
fcmovnb
ja
cmpsb
sub
dec
lods
rol
or
mov
shrl
mov
test
sbb
inc
mov
loopne
cs
cltd
jns
loop
sub
sub
divb
xchg
test
push
sahf
int
sahf
push
lret
scas
mov
adc
lock
hlt
cmp
stc
fs
mov
data16
into
adc
sti
call
lahf
push
inc
pop
and
aam
add
andl
imul
int3
sub
shll
mov
in
mov
or
inc
cmp
lods
data16
xor
ret
jge
movsb
or
adc
loopne
jne
xor
mov
ja
push
lods
test
mov
add
sub
pop
les
xor
pop
add
aam
jmp
inc
mov
pop
jmp
je
dec
xor
lcall
out
fisubrl
push
jge
sbb
fst
jl
xchg
dec
dec
mov
cld
jns
test
mov
outsb
pop
push
xchg
imul
dec
cli
add
rclb
xchg
adc
repnz
adc
and
fwait
mov
lds
mov
cmpsl
loop
loope
mov
jo
jb
cmp
andl
rcrb
push
jecxz
dec
cltd
leave
clc
in
mov
sbb
sbb
adc
in
jl
sub
dec
repz
gs
push
bnd
pop
clc
xchg
mov
imulb
push
push
mov
jns
push
aaa
bound
or
xlat
adc
ret
cmp
mov
sub
jb
or
sti
jae
test
mov
aam
test
xchg
mov
icebp
add
aaa
sbb
xchg
popa
push
xchg
ret
inc
aad
dec
lret
jp
pop
call
cmp
insb
insb
inc
stos
divb
push
and
repnz
push
inc
enter
aas
ds
pop
fmuls
pop
xchg
ret
cld
lret
xor
in
push
shl
mov
inc
and
loopne
pop
sbb
add
dec
out
sbb
loop
out
lock
mov
js
fstl
add
xchg
test
les
adc
xchg
lcall
aad
or
adc
icebp
and
sti
and
pop
lcall
mov
push
leave
out
mov
push
jbe
cmp
adc
aas
push
jbe,pt
lea
push
inc
cmp
cmp
sbb
cmp
xchg
imul
pop
stos
jno
mov
pop
mov
pop
sub
das
xchg
add
out
mov
stc
shlb
jmp
testb
fimuls
and
repz
mov
sub
ljmp
loop
aaa
add
addb
push
xor
xchg
cltd
fmul
dec
test
sahf
fistpl
pop
test
std
andb
mov
pop
or
cli
pop
or
xchg
xchg
icebp
push
jecxz
test
sbb
inc
push
xor
loop
out
clc
xchg
or
pop
data16
aaa
jecxz
in
adc
sarl
add
and
cltd
cli
mov
or
jl
add
dec
mov
push
dec
pop
sub
xchg
inc
mov
das
sbb
add
push
xor
cmp
mov
ret
sysexit
sub
or
int3
adc
xor
fiadds
cmp
mov
mov
jge
in
popf
sbb
loopne
sub
call
ja
add
mov
cmp
daa
lcall
dec
scas
prefetch
or
inc
pop
adc
out
popa
jbe
out
pop
xor
mov
mov
sahf
sbb
push
fwait
fs
stc
das
add
es
and
jns
bound
inc
add
cltd
int3
sbb
enter
pop
iret
mov
mov
lods
mov
cmpsb
cmc
popl
pop
xor
and
mov
enter
fsubl
push
iret
aas
push
adc
iret
out
xchg
pushf
test
mov
mov
sbb
cmpsb
push
cmp
xor
ja
pop
cld
mov
cvttps2pi
jbe
leave
sbb
inc
mov
fs
push
xchg
xchg
push
push
jl
lods
add
in
in
mov
inc
out
call
adc
stos
pop
fucom
das
cmpsb
aam
shll
fsubr
push
stos
mov
xor
pop
push
or
pop
jmp
or
std
or
fcomps
bound
mov
xor
adc
jbe
jg
xor
mov
mov
movsl
sbb
pop
mov
inc
jno
movsb
or
aad
cmp
adc
and
lods
and
inc
orl
sub
repnz
ficompl
out
iret
mov
and
pop
ret
filds
test
pop
imul
jl
ljmp
mov
jno
je
pop
xor
push
xor
and
or
mov
xlat
shll
dec
out
out
pop
movsb
mov
fdiv
in
and
cmpl
aaa
mov
mov
icebp
mov
xchg
sbb
imul
popf
xchg
cwtl
cltd
mov
mov
mov
jno
dec
scas
mov
add
daa
inc
mov
divb
mov
mov
cmp
ficompl
and
mov
rclb
xlat
inc
and
xor
fildl
in
cmp
daa
cli
push
sub
pop
and
loope
jbe
ljmp
push
lock
or
or
xchg
mov
pop
cmp
jne
data16
dec
test
out
mov
test
pop
sbb
mov
xchg
cmp
subl
filds
add
mov
outsl
out
xchg
pop
int3
movsb
add
lcall
push
sub
and
mov
ds
sub
js
pop
cmp
push
fnstsw
inc
popa
and
cld
mov
fwait
and
push
ja
add
fwait
das
out
cmc
jp
mov
shl
imul
mov
mov
rolb
stc
call
fwait
jp
push
sub
enter
pop
insl
jb
incb
pop
lret
mov
cmp
fnstcw
aam
dec
shrb
maskmovq
divl
popa
sbb
mov
arpl
mov
dec
ret
out
and
mov
in
mov
jmp
call
mov
pop
fldcw
and
mov
addr16
mov
jg
xchg
sbb
and
test
mov
ds
std
pop
mov
je
in
cmp
mov
scas
push
pop
fwait
stc
mov
scas
pop
lods
sbb
cmp
shl
aas
mov
iret
nop
inc
je
call
andl
xchg
pop
cmovg
xchg
pusha
jl
enter
cmovno
lahf
mov
adcl
lods
int
cwtl
cmc
push
sub
push
jmp
adc
pop
js
cmp
jge
mov
inc
sbb
lcall
push
or
call
decl
mov
sti
ss
sahf
sahf
pop
bound
mov
fiadds
decl
inc
aad
inc
sbb
mov
int3
aad
fadds
add
mov
je
lds
mov
dec
ds
rol
cmp
pushf
pop
and
cmc
mov
sbb
dec
dec
aad
cltd
je
cmp
cli
cmp
out
out
lfs
adc
pop
xor
test
cmp
jmp
push
xchg
loope
jno
ss
int3
cmp
daa
pop
cmp
imul
enter
stos
add
or
xchg
or
into
ljmp
add
inc
aam
add
lds
xchg
gs
fldl
sbb
jb
lock
call
xor
es
inc
movsl
xchg
and
sarl
jg
jecxz
sbb
aad
sub
add
setp
mov
dec
nop
pop
lret
cmp
sarl
idivb
xlat
cmpsb
mov
xchg
imul
aad
push
outsl
daa
imul
sub
sahf
loope
inc
push
int3
stos
sbb
fs
jmp
insb
call
into
xor
jb
xchg
lds
pop
sar
push
xor
mov
xlat
mov
movsb
xor
loopne
fs
cmp
stos
pop
sub
inc
arpl
mov
jno
int3
lea
or
scas
les
jbe
cmpsb
mov
ja
or
clc
ja
dec
mov
jae
sahf
shrb
mov
je
fwait
test
and
adc
adc
push
adc
shl
test
xchg
icebp
arpl
mov
mov
fldenv
mov
jnp
lcall
push
push
enter
rol
push
sbb
cli
pusha
es
aad
sbb
adc
inc
xchg
fdecstp
mov
adc
and
inc
aam
stos
dec
popf
adc
dec
jb
cld
push
lcall
push
loop
stc
cli
pop
push
sbb
mov
push
and
cs
add
jnp
xor
jae
dec
push
push
int
stc
jns
mov
lea
push
mov
out
mov
jns
pop
xchg
xchg
repz
xchg
and
or
not
xor
push
sarb
mov
scas
adc
rcrl
test
sub
enter
push
jle
jg
xor
nop
inc
lods
or
inc
sbb
sub
pusha
clc
ret
sbb
xor
cli
push
inc
je
pop
add
cltd
lods
cmp
mov
and
sbb
adc
les
stos
hlt
cld
mov
push
xor
jge
xlat
int3
outsb
adc
push
ror
popa
cmp
mov
cmp
outsb
enter
outsb
mov
mov
jnp
xor
addr16
and
and
enter
in
adc
adc
lods
or
cwtl
inc
xchg
or
lret
repz
adc
adc
in
jmp
add
dec
int
std
and
fcomp
pop
clc
pop
mov
and
dec
lods
mov
jp
sbb
xor
jns
xorl
ret
cld
xchg
and
mov
jp
sub
lret
stc
mov
lahf
aad
clc
lds
orl
movsl
push
loop
ljmp
adc
sub
loop
mov
mov
or
js
cmpl
sti
xchg
je
sub
xchg
mov
dec
sub
jecxz
sarl
xor
outsl
add
mov
sbb
icebp
test
ljmp
test
ds
stos
imul
dec
sbb
mov
cmpsl
jo
test
aas
push
inc
movsb
cmp
mov
mov
je
xor
jl
add
pop
mov
imul
rcrb
push
cmp
xlat
scas
sub
lret
jno
xlat
test
xor
addl
or
dec
dec
sahf
xchg
pusha
pushf
lret
and
xchg
aaa
imul
sbb
in
xchg
push
pushw
lahf
mov
stos
or
mov
xchg
test
aam
fucom
pop
push
lods
or
cmp
cmp
inc
lcall
fcomi
cwtl
mov
imul
xchg
add
push
addb
lahf
xchg
movsb
mov
ds
cli
xchg
cmpsl
xchg
mov
test
insb
mov
mov
xchg
pop
dec
sar
std
fwait
negb
inc
mov
or
and
or
aaa
xchg
and
add
pop
andl
add
fcmovnb
sahf
mov
sti
sbb
pushf
mov
icebp
jp
out
insl
push
pop
cmpsb
adc
push
out
loope
push
int3
ret
pop
sub
fnsave
fsubrs
dec
sbb
lods
test
rorl
mov
repz
sub
aam
mov
push
fwait
sti
mov
fisubrl
inc
shrl
jge
jmp
adc
cmp
sbb
push
sbb
xor
rcrb
push
sbb
sub
popa
mov
xchg
gs
fs
add
stos
inc
cwtl
outsl
icebp
jo
xchg
jae
mov
int
mov
lock
push
dec
arpl
or
inc
push
out
adc
push
or
movsl
out
lcall
clc
mov
inc
inc
add
push
aad
adc
adc
xchg
adc
push
sbb
cmp
loopne
push
ds
jle
movsl
mov
push
in
inc
loopne
leave
or
push
jmp
or
lahf
xchg
mov
mov
cmpsb
xchg
inc
xor
repnz
leave
lret
pop
sbb
or
fsubrl
leave
sbb
lahf
cmpb
loopne
fiadds
dec
inc
and
ret
out
test
or
add
test
inc
mov
or
popa
adc
nop
add
mov
je
fbld
sbb
stos
inc
ja
cmp
pop
test
je
jo
rcl
fldcw
call
insb
add
call
push
cmp
push
packuswb
scas
mov
jl
xchg
imul
mov
mov
call
xchg
mov
stos
jb
xchg
push
pop
outsl
icebp
fidivs
repz
pop
add
mov
test
xlat
stos
jne
hlt
xor
and
adc
mov
ret
ljmp
xor
mov
mov
test
outsl
lret
dec
ficoms
fldt
jle
sbb
ja
out
test
xchg
xor
repnz
xor
out
pop
fbld
push
enter
call
clc
fxch
dec
es
insb
hlt
xor
inc
xchg
add
icebp
adc
mov
fisubrl
push
mulb
scas
xchg
lcall
cmc
popf
adc
inc
insb
dec
inc
jecxz
aaa
mov
ret
repnz
and
or
fistpl
xor
aaa
je
jns
pop
xlat
lret
orl
push
pop
push
pop
mov
push
jo
jle
icebp
pop
dec
mov
push
pushw
or
loopne
add
push
imul
xchg
jge
mov
jp
push
sbb
jbe
insl
pop
shrl
jnp
dec
adc
cmpsl
lret
adc
call
ret
xor
repnz
pop
gs
jmp
sub
test
into
stc
lea
shll
imul
cmc
rolb
outsl
frstor
sub
mov
inc
push
mov
xchg
hlt
or
rcrl
lock
and
int3
mov
ret
movsb
into
sbb
cmp
jno
enter
lds
ds
std
loope
pop
mov
jge
jp
lahf
dec
inc
call
retw
in
aaa
aam
sbb
mov
stos
dec
push
out
mov
stos
jg
les
movsl
fsubrs
test
dec
add
xlat
ret
fs
push
pushf
adc
int3
mov
lods
pop
daa
test
push
mov
cld
out
or
les
sarl
ret
xchg
sti
jne
lret
push
lods
dec
mov
cs
inc
sbb
adc
or
aaa
cmpsl
push
sub
out
pop
loope
popa
mov
and
mov
subb
sub
pushl
shll
mov
test
mov
jge
ds
xchg
cs
aam
mov
mov
mov
scas
or
inc
aas
mov
mov
lahf
mov
inc
aam
sub
sbb
lea
push
mov
sbb
cltd
sbb
sbb
addr16
imul
sub
out
mov
loopne
mov
adc
sbb
int3
pop
cmp
mov
lea
out
sbb
pop
push
out
mov
repz
into
fdivrs
rol
ficoml
out
inc
lret
lret
lcall
int3
pop
out
addr16
gs
mov
stos
aaa
push
jo
notl
orb
outsb
jne
sbb
aas
mulps
fisubl
mov
adc
call
pop
stos
popa
cltd
es
test
mov
push
icebp
push
mov
ret
in
xchg
lcall
inc
sub
push
jmp
cltd
add
out
pop
sub
jle
pop
roll
mov
stos
adc
shl
in
test
dec
loop,pt
aas
jns
cmp
in
xchg
xor
xor
jno
jg
fwait
subb
and
mov
stc
test
stc
pop
xor
sub
mov
mov
inc
mov
add
pop
insb
cmp
mov
cmpsl
pop
pushf
xchg
scas
aad
in
pop
std
xor
ljmp
jno
push
xchg
into
mov
ret
and
arpl
xchg
jg
mov
aaa
and
mov
add
inc
lock
and
rcrl
out
mov
push
cmpsl
andb
ficompl
jg
mov
movl
push
shrl
movsl
movsl
repnz
dec
pusha
push
jne
push
mov
ja
cmpsb
fistpl
pop
jno
pop
jl
dec
push
pop
jnp
and
cmp
sub
shll
or
rorl
scas
iret
shll
mov
cmp
push
push
jno
adc
ret
sbb
stc
cltd
mov
mov
je
adc
mov
mov
imul
in
push
loopne
shrl
pop
lods
jbe
sar
iret
push
push
or
cmp
imul
push
idivb
cmp
test
sti
fidivrl
jno
sub
jle
in
lahf
cli
jnp
test
sub
dec
mov
std
inc
fadd
cmp
int
imul
xchg
cmp
jns
call
sti
mov
push
xchg
loope
out
jge
sbb
mov
outsb
divl
arpl
aas
andb
or
andl
mov
call
sbb
fwait
jb
pop
mov
and
pusha
sub
and
mov
push
sbb
scas
jne
dec
sbb
hlt
add
inc
push
adc
cli
iret
xchg
das
addl
test
dec
mov
jae
addb
in
loopne
pop
movsb
ljmp
dec
neg
std
inc
fisubl
loope
or
gs
into
mov
adc
repnz
mov
or
or
sbb
repz
mov
xchg
loopne
mov
push
push
ret
outsb
jge
xchg
rcrb
push
repz
fucomi
add
dec
jns
cmp
mov
mov
out
jb
out
cmp
scas
lods
push
cmc
scas
lret
add
and
flds
movsl
xlat
fdivl
andl
lcall
xor
mov
cmpsl
xor
test
adc
lock
in
inc
sbb
or
sti
inc
mov
add
mov
test
xchg
sti
cltd
push
mov
int
pop
adc
push
lcall
pop
dec
sbb
cs
fwait
aad
aas
adc
inc
ret
push
popa
mov
mov
sbb
out
jecxz
test
or
pop
out
in
inc
push
dec
mov
or
sarb
xor
ret
fimuls
pop
fsubrp
pop
and
in
add
iret
leave
rcrb
adc
fwait
xlat
out
call
xchg
out
fs
loopne
daa
sub
mov
pusha
lds
incb
mov
shlb
mov
out
mov
into
push
or
sbb
xchg
adc
or
xchg
sbb
in
dec
ja
push
nop
jno
pop
movsl
mov
ret
mov
sti
dec
lretw
push
in
stos
push
sub
mov
sarb
cwtl
stos
jmp
imul
lret
cwtl
idivl
jmp
jle
adc
sub
jne
mov
in
sub
sub
mov
jo
or
fwait
loope
popa
inc
mov
inc
into
jne
mov
push
adc
jge
mov
out
test
and
pop
fsubl
jno
idivl
xor
lock
stos
lock
adc
mov
fistpll
push
push
push
lea
test
mov
and
rol
add
stos
ja
xor
shl
push
enter
push
cmp
jg
push
mov
dec
add
das
jg
sbb
jbe
test
pop
dec
push
popf
sahf
mov
jge
push
add
push
sbb
sar
mov
jmp
cld
bound
push
in
pusha
mov
out
movsl
enter
or
mov
sub
stc
dec
fs
clc
popa
push
mov
rorb
andl
pop
aaa
daa
enter
jb
xchg
mov
push
xchg
dec
mov
cs
jmp
cmp
sub
xchg
sub
addl
cs
dec
inc
sti
test
call
adc
push
test
data16
ret
mov
push
inc
jne
nop
pushf
xlat
fcoml
pop
fimuls
filds
sub
adc
xlat
in
lods
push
xor
jmp
adc
jmp
xchg
scas
sub
add
sub
in
sub
gs
mov
cmp
aaa
sub
dec
jno
dec
pop
ficoml
int
push
xor
lret
sbb
mov
leave
mov
test
sbb
add
loopne
andb
inc
jmp
addr16
sbb
mov
sub
leave
adc
int3
in
aas
push
insl
jge
push
fbld
dec
push
inc
lds
testb
push
pop
mov
sub
cli
aam
mov
or
movsb
xchg
and
add
mov
loop
sbb
sti
sahf
sub
cltd
fdivrs
pop
js
xchg
cltd
test
mov
movsb
push
push
ds
inc
mov
sarl
or
in
popa
clc
ljmp
sbb
add
inc
and
inc
str
fucomip
fxch
nop
push
cmc
pop
sbb
push
cmp
mov
dec
fstpt
mov
add
mov
push
fwait
and
imul
es
out
cmpsl
dec
mov
adc
xchg
xor
adc
jnp
mov
and
xchg
int3
sub
mov
inc
jno
aaa
mov
dec
adc
sub
dec
sub
fiaddl
data16
sub
inc
dec
popa
mov
in
jns,pt
pop
and
xor
rolb
cmp
mov
xor
lret
lret
repnz
les
jno
enter
mov
fsts
push
jb
pop
add
sbb
test
mov
fcmovnb
sub
aas
mov
addr16
push
outsb
jno
sti
jmp
out
or
xor
call
pop
xchg
test
pop
dec
add
sub
scas
push
xchg
rorb
xchg
push
ss
in
bound
xlat
jnp
sub
sbb
dec
sub
lahf
lea
xor
pop
scas
shlb
and
mov
jnp
jb
sub
cmpsl
sub
ret
sub
loopne
dec
jmp
mov
jp
xor
cmp
sub
mov
jge
lret
cs
repnz
in
pop
outsl
dec
fwait
and
loop
nop
adc
repz
pop
mov
push
sbb
mov
inc
mov
inc
pop
bound
shl
cmp
lcall
leave
pop
pop
ror
loope
shrb
mov
daa
fimuls
pop
out
cmp
shll
enter
sbbb
pop
dec
jge
cmp
mov
mov
sahf
cmp
lea
lods
xlat
adc
pop
or
xchg
push
loopne
and
cli
add
xchg
pop
das
add
mov
scas
cmp
add
lret
sbb
cmpsb
inc
cli
je
sub
aaa
int
jg
fs
xorl
sbb
rcrl
testl
sbb
imul
pop
in
sbb
or
int
jbe
push
sbbb
sbb
int3
adcl
in
inc
lods
pop
repnz
xor
lret
into
mov
cmpsb
xor
mov
insl
sbb
loopne
bound
or
mov
or
cli
lds
push
mov
sub
xchg
mov
cwtl
push
stos
adc
in
and
in
inc
pop
push
shll
loope
inc
pop
fnsave
mov
jle
adc
popf
sbbl
pop
test
jle
data16
repz
jge
rorb
insl
pusha
add
jmp
push
xchg
shlb
cltd
inc
cld
adcb
fs
ja
mov
xor
or
out
lds
or
add
in
gs
jg
lahf
jno
jp
leave
xchg
dec
add
sti
sbb
lds
push
fisttpl
ret
inc
outsb
sbb
movsl
jecxz
jo
fsts
push
out
test
leave
jno
outsl
aam
cld
jecxz
lahf
or
adc
fimull
mov
ficoml
cmp
aaa
push
out
loope
jb
ret
test
ljmp
pop
mov
mov
xchg
cmp
pop
mov
adc
add
and
mov
jl
xlat
sub
xor
in
pop
cmp
inc
mov
fld
adc
xlat
outsl
insl
jmp
lahf
add
in
inc
sbb
push
dec
sbb
xchg
dec
sub
insl
pop
mov
mov
insl
pop
push
sarb
jge
dec
inc
testb
cmp
es
scas
es
outsl
add
mov
xor
xor
addr16
mov
in
test
loope
in
mov
imul
insb
jecxz
add
push
and
out
js
jl
roll
inc
out
das
out
fnsave
jns
or
add
dec
add
mov
dec
inc
inc
dec
cli
push
sti
int3
popl
xor
movsb
dec
fmuls
sub
mov
repnz
push
sbb
aam
gs
and
adc
shl
aas
fbstp
xchg
dec
sub
or
lahf
jnp
fcoml
aas
nop
pushf
insl
clc
aaa
mov
stos
pop
xchg
cmpl
out
fwait
arpl
sbbl
pop
int
inc
mul
in
inc
adc
push
mov
cld
adc
rclb
push
out
or
lods
sbb
fistl
dec
notb
xor
stos
out
jno
bound
repz
xchg
out
iret
jo
adc
lret
fst
mov
and
sbb
enter
les
pop
push
cli
sbb
mov
insl
inc
into
aad
mov
dec
popf
fsub
mov
int
mov
xchg
adc
mov
dec
lret
pop
movb
push
xor
or
in
data16
shll
iret
xlat
inc
fcmovb
popf
mov
pop
add
test
divl
dec
popf
rclb
jp
mov
gs
imul
fcoms
push
mov
in
clc
inc
cmpsl
hlt
adc
sub
cmp
inc
inc
repz
dec
filds
mov
jne
push
push
loopne
es
movsl
xlat
xchg
xadd
dec
insl
xchg
orb
fildll
xchg
loope
xchg
les
stc
divl
int3
loope
jae
icebp
mov
add
out
sbb
jl
icebp
xor
lret
sbb
clc
xchg
pop
jecxz
insl
xchg
rorl
hlt
cmpsl
insl
add
lods
les
out
cld
test
pop
or
pop
shl
dec
popf
out
hlt
leave
stc
lods
pop
pop
dec
jge
cmp
test
fdiv
dec
cmpsl
scas
push
add
mov
lahf
cli
add
inc
in
repnz
lods
scas
push
ret
mov
jl
dec
popa
popa
pop
pop
popf
adc
fistpl
sub
ficomps
test
fs
outsl
in
cltd
push
and
xchg
jae
inc
ljmp
dec
repnz
jp
dec
sti
int
outsb
xchg
lods
aas
push
in
mov
jnp
jmp
mov
and
in
jo
and
adc
add
and
mov
mov
ret
idivl
xchg
jmp
out
fsubl
jmp
incl
hlt
pop
adc
mov
dec
inc
jmp
mov
push
jns
sti
rclb
pop
imul
add
inc
cmc
mov
inc
inc
dec
cmc
pop
ret
imul
sub
xchg
loop
sbb
lods
into
test
jg
aam
jmp
adc
mov
imul
or
stc
rcll
inc
test
inc
add
and
pushf
push
mov
fnstenv
mov
mov
lcall
inc
stc
sbb
mulb
and
sti
test
xor
iret
mov
es
jl
push
bound
mov
xchg
xchg
mov
daa
sub
and
jle
mov
inc
mov
adc
sbb
mov
fsubrs
push
mov
test
sub
jl
insb
push
pop
mov
loopne
mov
dec
ficomps
decb
vcmpps
lahf
call
add
lcall
jmp
cmp
sbb
and
into
icebp
jae
or
dec
outsl
dec
stc
cli
xor
cli
push
mov
stos
xor
in
insl
outsl
sbb
jmp
mov
sbb
jo
in
xor
insl
xchg
imul
jno
aaa
ret
test
pop
negl
adc
inc
push
jmp
adc
outsb
jbe
pop
mov
or
jmp
dec
insl
xchg
cwtl
mov
out
sbb
daa
ret
jno
lcall
jp
in
pop
xchg
mov
xor
cmp
push
add
pop
jno
inc
xchg
xor
test
mov
sub
or
xchg
adc
push
jo
sbb
shr
mov
dec
cmc
jae
daa
pusha
and
cltd
loope,pn
mov
mov
and
pop
mov
push
and
xor
mov
pop
cs
cmp
sub
test
dec
cmpb
aad
rolb
stc
xor
xor
mov
sbb
iret
xor
or
out
mov
mov
inc
mov
inc
aam
xchg
outsb
xorb
inc
jae
cmp
fcoml
mov
sub
adc
sub
sti
scas
mov
stos
xchg
push
dec
sub
xorb
inc
test
insl
or
mov
inc
cld
pop
pop
xchg
jns
std
push
cmc
inc
pop
fisttpll
std
xor
jne
adc
push
mov
lea
lret
jae
jae
rolb
fcoms
lock
bound
inc
cld
jge
and
mov
jle
inc
popa
cs
inc
cmpb
push
loop
lcall
push
inc
xchg
sbb
cmp
mov
repnz
and
ss
insb
daa
dec
inc
in
das
inc
loopne
pop
push
mov
xchg
scas
dec
sbb
xchg
cmp
xchg
pop
ljmp
lds
es
shr
lods
orb
mov
push
imul
cltd
in
xchg
jno
insl
je
das
xchg
popa
in
mov
cmc
insl
popf
ljmp
sbb
arpl
xchg
in
sbb
lods
push
enter
and
rcrl
xchg
clc
mov
jl
jae
dec
push
loop
or
push
pop
adc
test
dec
mov
icebp
xor
push
daa
pop
dec
jns
pop
cmp
mov
lds
add
mov
pop
xor
mov
hlt
mov
sub
mov
xor
mov
jno
outsl
push
dec
xchg
push
push
data16
mov
repnz
jge
popa
ds
dec
jnp
xlat
lea
sub
inc
fldt
and
fchs
shrd
subb
sbb
adc
jle
int3
push
movsl
xor
mov
repnz
cltd
jbe
jnp
xor
xchg
shl
fisttpll
shlb
arpl
inc
mov
push
cld
jmp
in
lds
loope
test
aam
je
fidivrs
adc
loop
sbb
mov
mov
popa
sbb
pop
cmp
stos
mov
fsubrs
loope
mov
popf
fimull
imul
mov
push
jl
cwtl
jmp
or
icebp
loopne
cld
lret
js
mov
scas
lock
jp
mov
inc
pop
scas
push
adc
jnp
mov
out
movsb
mov
dec
outsl
inc
fdivrl
rcr
cmpsl
cmp
int3
call
push
dec
push
push
xor
pop
add
je
cmp
mov
push
mov
sub
mov
mov
loopne
shrb
sahf
in
add
or
jecxz
pushf
scas
dec
mov
fists
jle
test
lock
std
mov
jne
jge
orl
fs
and
and
das
cmpsb
lock
sub
test
mov
shll
sub
add
jecxz
imul
es
inc
fs
or
add
out
sub
pop
cmp
out
dec
mov
xor
leave
rolb
push
jae
push
push
sti
mov
and
jecxz
pop
lea
enter
jbe
cltd
mov
pop
pop
xchg
jl
jecxz
cmp
icebp
push
movsl
mov
cmp
jo
cmpsl
aad
xchg
cmovne
and
jp
arpl
in
add
popa
cltd
push
xchg
xor
dec
mov
test
mov
cmp
into
nop
cmp
jo
je
rcrl
xchg
cwtl
cltd
mov
dec
arpl
pop
push
cmp
or
stc
push
xchg
insl
icebp
push
das
dec
lret
cmp
cli
cmp
sub
jns
cmpb
mov
fsts
jae
mov
xlat
cmpsl
mov
mov
and
push
sub
mov
sahf
xchg
jmp
outsl
test
outsb
jecxz
add
rorw
imul
dec
loop
xchg
mov
imul
mov
cmp
lcall
mov
nop
out
jl
out
mov
xor
sbb
loope
fwait
rorl
inc
cld
dec
aad
mov
fs
push
adc
jp
cli
xor
lea
test
sbb
mov
ljmp
xor
leave
sbb
enter
sub
jno
push
outsl
mov
sub
jle
cld
cmp
ficoms
js
sbb
dec
gs
mov
or
adc
pop
inc
mov
mov
xchg
sub
pop
sbb
or
jp
fimuls
mov
add
ljmp
scas
repz
popa
ljmp
in
fucom
mov
add
push
mov
enter
fimuls
jne
xchg
pop
leave
insb
jb
xor
jno
or
cltd
test
int
dec
nop
cmp
jp
inc
pop
push
loop
inc
pop
inc
enter
stos
fldl
sub
xor
jmp
or
xor
xchg
iret
loopne
ja
push
mov
fisubrl
push
jns
aam
xor
mov
lcall
mov
clc
int
sbb
shl
inc
imul
xor
jne
mov
inc
sbb
jecxz
push
jae
or
mov
arpl
sbb
push
jb
or
stc
aaa
jbe
int
pop
inc
jge
subl
push
sub
dec
push
or
mov
xchg
jmp
in
test
out
aam
lods
adc
rorb
push
cld
xor
xlat
cwtl
cld
sarl
sarl
dec
lods
je
pushf
pop
mov
push
clc
push
mov
pop
movsb
ficoms
insb
pop
pop
push
mov
ficoms
fcomi
ds
cmp
inc
lock
sbb
jge
scas
push
dec
sub
ret
push
lcall
or
adc
arpl
repz
mov
cmp
mov
push
jl
les
shll
sub
xchg
out
jb
ja
mov
adcl
add
insl
sbb
mov
lahf
int
jmp
and
pop
mov
cmp
inc
iret
push
aam
pop
jle
das
addb
jbe
push
rol
inc
pushf
shrb
mov
shrb
repz
cwtl
push
hlt
jle
push
cmp
mov
push
and
rcrl
rcrl
inc
andb
jbe
sub
xor
jp
add
mov
lods
mov
or
loope
jb
rcll
clc
aad
rcrb
mov
jl
inc
adc
add
xchg
xor
mov
dec
sbb
jecxz
or
push
les
rclb
xor
lods
fdivrl
mov
and
sub
mov
sti
mov
clc
rorl
jl
inc
arpl
sub
gs
inc
test
scas
dec
scas
stos
mov
pop
in
add
addl
mov
fildll
and
ss
lods
xchg
ja
arpl
int3
loop
test
daa
btc
jo
loopne
mov
int3
dec
mov
movsl
jno
cli
sub
mov
leave
cltd
lds
mov
inc
jns
and
or
dec
mov
mov
sti
sarl
or
stos
jns
mov
sub
push
push
jno,pt
jmp
in
cmp
out
mov
insb
jg
dec
daa
popf
mov
adc
pop
push
mul
adc
mov
or
mov
mov
call
into
in
add
cmp
or
mov
popf
sub
stos
fwait
add
mov
mov
mov
sub
lock
shlb
shlb
lea
sbbb
and
in
sub
cmp
repz
data16
push
xorb
test
and
and
adc
fstpt
mov
push
fdiv
mov
pusha
in
lock
in
push
and
stos
mov
xchg
lock
loop
jae
hlt
push
cmpsb
jmp
loope
mov
xchg
push
sti
out
jmp
cmp
lahf
stos
rolb
push
adc
pop
jle
lcall
es
xchg
xchg
dec
sahf
pop
jge
sbb
sub
lahf
pop
mov
ret
aaa
mov
xchg
cmp
mov
mov
mov
and
lods
bound
mov
mov
movsl
sub
stos
fcmove
mov
lea
dec
and
pop
sarb
or
into
pusha
pop
cld
popa
inc
lcall
add
les
in
scas
mov
out
lea
jo
ds
sbb
or
rcl
scas
xor
push
scas
dec
imul
out
pusha
push
jnp
cmc
inc
inc
jl
jl
inc
jns,pn
stos
dec
sbb
mov
and
mov
sti
hlt
pop
push
xor
xchg
movsl
popa
dec
sti
mov
mov
jnp
out
jbe
outsl
sbb
jmp
stc
fucomi
lock
mov
mov
in
push
je
pop
iret
mov
lods
clc
mov
insl
bound
mov
lds
push
in
sub
gs
cmp
es
clc
int
sbb
or
cltd
mov
push
in
mov
jle
rcll
or
test
and
repz
insb
pop
pop
sub
dec
icebp
inc
addr16
shll
mov
dec
jae
sbb
push
xor
jo
rcrl
nop
mov
mov
adc
fildll
inc
inc
adc
and
push
push
test
jnp
and
lds
mov
pop
dec
cmpsl
adc
inc
mov
and
rol
xchg
dec
movsl
adc
mov
daa
pop
jl
dec
pop
icebp
loopne
out
and
stos
fucomp
fdivs
push
movsl
and
popf
push
inc
sbb
ficomps
lret
mov
ficoml
jo
arpl
rcl
sti
pop
inc
adc
ret
sub
lret
sbb
mov
cmp
push
sbb
xchg
inc
xchg
push
mov
push
or
jne
or
inc
fdivs
push
aas
jp
in
jnp
das
repz
dec
xor
push
mov
cmp
jle
in
adcl
or
jns
scas
idivl
push
shr
mul
pop
jnp
push
out
test
mov
sarb
mov
loop
dec
fimull
inc
mov
push
push
cmp
pushf
mov
fnstcw
push
mov
pushf
int3
push
ja
xchg
jecxz
xchg
iret
ja
leave
aad
je
pop
out
jmp
test
adc
xchg
jg
mov
in
shrl
lcall
cs
jmp
pop
mov
leave
mov
lock
pop
add
fnsave
cmc
inc
es
push
arpl
aad
pop
outsb
iret
mov
mov
shlb
mov
das
loope
mov
cmp
aaa
inc
xor
pushl
std
cmp
xlat
jp
pop
stos
rcll
adc
adc
jnp
shlb
ds
lods
cmc
xchg
or
jmp
and
jmp
pop
fwait
addr16
fnsave
shrb
lods
cmp
stc
xchg
cmp
jo
test
push
loope
int3
xchg
jns
sub
xor
cmp
xor
and
pop
push
inc
xor
in
jbe
sbb
loopne
cld
dec
das
mov
rclb
fsts
pusha
test
scas
push
jae
insl
mov
orb
cmp
gs
or
int3
cmpsl
xlat
aaa
out
xchg
lahf
shll
ret
cmp
cmp
mov
in
or
jnp
jo
inc
fcoml
aad
sbb
lret
push
movsb
sub
sbb
jmp
rcr
sub
inc
lea
jmp
jns
xchg
fst
mov
hlt
pop
sarl
testl
or
push
and
cmp
mov
mov
imul
push
cmpsb
jae
xor
mov
dec
sub
mov
pop
mov
and
dec
mov
sub
cmp
push
mov
jne
rcl
stos
inc
dec
pop
jl
mov
and
cs
iret
outsb
dec
add
movsb
xor
jl
mov
jmp
stc
mov
mov
pusha
adc
ds
rolb
xchg
dec
lock
xchg
push
add
jp
sti
clc
shll
cmpsl
pop
ret
adc
pop
addr16
adc
mov
mov
sub
aad
jae
adc
cmc
pop
push
sub
bound
and
ja
test
adc
cmp
gs
fisubl
sbb
aam
insl
icebp
push
lcall
mov
jg
xchg
cmp
mov
xchg
sahf
loopne
cmp
je
lcall
or
repz
mov
add
shrb
aam
addb
jo
jno
cltd
inc
mov
adc
xor
daa
and
or
sar
test
push
mov
sahf
jecxz
daa
in
jecxz
mov
jp
add
lret
dec
mov
test
jle
jns
mov
ret
lods
icebp
test
push
xlat
mov
xchg
and
jne
inc
fidivrl
call
jmp
jns
and
jb
lcall
fcomip
mov
cmpsl
xlat
aaa
sbb
outsl
repz
enter
scas
dec
je
mov
cli
aam
aaa
pop
arpl
stos
and
jl
enter
aas
es
and
imul
dec
add
imul
fcompl
mov
test
dec
pop
jecxz
sbbl
subb
decl
jbe
lcall
aas
std
enter
js
mov
test
sub
fisttpl
push
fstpl
out
push
sarb
aaa
in
mov
clc
fwait
inc
xor
cwtl
xchg
in
int3
adc
cmpsb
hlt
cld
rcr
sbb
cs
mov
mov
xlat
aas
pop
jmp
lea
mov
mov
orps
jne
inc
in
mov
pop
les
sbb
sub
adc
icebp
sbb
push
vunpcklpd
add
aad
jge
dec
mov
lds
xchg
js
sub
in
pop
rcrb
repnz
cmp
cmc
mov
das
or
js
push
jno
pop
mov
je
inc
js
jae
fwait
cmpsb
ret
fucom
les
or
enter
sahf
pop
outsb
arpl
inc
cmp
pop
push
out
xor
imul
popa
adcb
arpl
cmp
pop
xchg
or
cli
mov
cmpsb
cwtl
mov
or
mov
stos
popa
fs
aam
jne
icebp
mov
sub
ror
sbb
mov
add
popf
fisubrs
xor
lahf
inc
popf
xor
ss
add
mov
or
rclb
sbb
jns
out
lahf
test
xlat
mov
inc
xchg
adc
cs
bound
daa
mov
xchg
cmp
inc
rorl
pop
jl
jne
or
fiaddl
xlat
pusha
add
add
js
aad
inc
mov
shll
pop
scas
mov
fildll
jle
stc
sub
inc
mov
aad
movsl
lret
enter
mov
pushf
insb
fstpt
mov
das
cltd
adc
cmpsl
and
negb
cmp
addr16
js
rcrl
mov
jne
or
pushf
add
lcall
flds
into
xor
xchg
xor
cltd
cmp
push
push
adc
mov
mov
sub
outsl
pop
lahf
outsb
pop
dec
pop
inc
inc
add
lcall
jmp
mov
mov
flds
lcall
inc
scas
adcb
and
inc
aaa
pop
sub
jo
ret
jecxz
div
nop
and
add
dec
push
leave
clc
mov
ds
imul
ja
lcall
dec
sub
in
scas
pop
shr
test
mov
cmp
and
or
arpl
imul
stos
or
ret
leave
or
neg
jne
mov
ret
jge
and
loopne
fldcw
jno
mov
mov
ljmp
mov
adc
stos
shll
xor
dec
ljmp
sbb
sub
fwait
iret
push
push
mov
loop
sbb
mov
mov
dec
push
pushf
jbe
xor
and
pushf
pop
mov
ds
rcrb
enter
stc
jg
or
push
adcb
mov
mov
fwait
cld
dec
cmpsb
sub
inc
jb
adc
call
mov
mov
ja
fwait
mov
cmpsb
outsl
int
inc
stos
cmpsb
jmp
mov
xor
inc
dec
push
lahf
cmp
jl
add
add
push
scas
imul
mov
push
fldt
pop
movsb
xchg
movsb
mov
loop
sub
shlb
negb
mov
popf
xor
push
call
lock
xchg
fdiv
xlat
push
cmp
imul
lcall
dec
add
or
xchg
std
jle
and
loope
sahf
jg
out
fwait
mov
jno
imul
sbb
inc
sbb
cmp
cltd
jecxz
in
jle,pt
mov
inc
adc
loope
fdivs
xchg
dec
xchg
and
or
mov
mov
or
mov
add
cmp
or
jge
cmp
mov
adc
outsl
into
pop
sar
and
movsl
call
adc
or
out
bound
mov
stos
inc
loope
dec
pop
push
jb
adc
push
xor
jl
repz
push
xor
popf
push
orb
fdivp
stos
jp
sahf
pop
leave
fcomps
subb
xchg
push
add
out
xlat
int
outsl
ficompl
cmp
nop
push
jbe
mov
fwait
push
mov
jp
call
sti
ss
ret
and
dec
sbb
xchg
clc
pop
jl,pt
mov
or
enter
inc
xchg
adc
jp
fwait
mov
mov
fisubs
cli
popa
push
movsb
push
and
lret
stos
xchg
aam
sbb
sub
push
leave
cmp
xor
sbb
scas
or
int3
into
push
cmp
popf
test
sbb
mov
cmp
mov
ja
mov
inc
or
push
push
dec
add
icebp
jp
icebp
dec
push
mov
sub
shlb
lods
sarl
jecxz
jmp
pushf
sbb
xlat
sbb
adc
cwtl
cmp
mov
xchg
lds
sbb
pop
pop
xchg
scas
sbb
and
popa
sbb
fmuls
lret
insb
cmpb
fisubl
out
and
insl
fstpt
mov
jmp
jns
icebp
lea
jmp
mov
or
lcall
std
jae,pn
dec
pop
mov
jecxz
fisubl
arpl
lock
rol
dec
pop
int
sub
mov
sti
imul
testl
dec
push
fldcw
cwtl
addb
xor
push
jbe
nop
jecxz
cmp
cmpb
mov
mov
mov
jbe
cwtl
lcall
hlt
subb
std
and
das
negl
jle
adc
jnp
bound
jo
push
sbb
pop
les
rclb
loop
mov
add
lahf
stos
inc
xor
mov
daa
ljmp
and
push
xor
sub
push
add
adc
in
and
adc
insl
mov
es
nop
or
jb
mov
scas
or
and
dec
fs
mov
xor
ljmp
or
adc
arpl
icebp
xchg
out
sbb
dec
xchg
sub
in
inc
pop
scas
fidivl
imul
lods
add
aas
pushf
and
pop
inc
xlat
pusha
aam
cmp
shl
enter
xchg
or
fcoms
test
popl
ss
imul
inc
mov
mov
xchg
xchg
rcl
cmpsl
xor
dec
dec
ret
iret
sbb
push
lods
frstor
push
cli
xchg
ljmp
cmp
dec
fistl
jb
cltd
loopne
ljmp
mov
pop
jle
adc
flds
js
adc
inc
push
les
and
inc
sbbb
imul
ja
xlat
sub
aam
fildl
js
outsl
shr
gs
mov
jl
lret
inc
and
insb
orl
js
les
adc
outsl
aas
call
adc
sub
mov
sbb
sub
push
mov
arpl
pop
jge
ljmp
mov
cmp
es
fstps
and
adc
add
xchg
icebp
pushf
pop
dec
fucom
pusha
mov
xchg
jp
lret
xchg
movsl
cmc
ret
scas
scas
jae
mov
push
push
mov
push
movsb
scas
jl
mov
xchg
push
xchg
xor
jl
cmpsb
xchg
shrb
ret
pop
movsl
xor
adc
stc
jo
mov
cld
sub
stc
lcall
dec
add
icebp
cmp
cmp
fwait
add
xchg
jns
rolb
fimuls
lods
pusha
xorl
sbb
lock
inc
arpl
lds
push
push
add
xchg
xchg
je
sbb
icebp
mov
inc
inc
sbb
addr16
lods
jo
popa
mov
jl
mov
std
xchg
daa
jb
jg
movsl
or
cmpsl
cmp
jge
dec
mov
mov
push
mov
xor
pop
lods
fadd
cmc
daa
jp
arpl
je
lods
insb
mov
mov
test
in
loop
lahf
notl
fldenv
jo
or
insl
repz
push
pushf
mov
rcll
cwtl
xor
lret
in
sbb
lret
loope
popa
addr16
sub
jb
loope
daa
pop
adc
shll
sbb
adc
jnp
inc
inc
jp
mov
jno
sub
adc
fwait
hlt
mov
setns
je
adc
adc
add
adc
sarb
jbe
mov
adc
jg
idivl
in
enter
mov
add
call
inc
add
xor
jno
and
movsl
lock
outsl
cmc
sub
mov
cmp
daa
lds
push
sbb
mov
cmp
les
out
popa
mov
lcall
loope
arpl
je
insl
lock
decl
shll
sarb
cmp
push
in
sub
inc
or
addr16
pushf
cmp
xorl
loope
test
dec
cli
cmp
arpl
aaa
loopne
imul
pop
inc
xor
test
jp
or
test
mov
cmpb
in
cmp
xchg
lods
or
in
xor
in
js
mov
jle
adc
dec
jo
add
sub
and
scas
jb
in
sub
mov
lock
jecxz
xchg
fwait
dec
sti
mov
lods
cmpsl
mov
enter
leave
sbb
mov
and
ret
push
cmp
inc
cmp
jbe
lret
addr16
sbb
pop
xchg
xchg
or
sahf
rcl
add
int3
mov
lock
bound
in
test
cwtl
lds
je
lea
lds
cwtl
sbb
imul
dec
outsl
xlat
mov
push
outsl
jno
lea
enter
shrl
jns
and
clc
adc
popa
fmul
push
movsb
sub
popa
pop
or
xlat
inc
jnp
pushf
push
insl
test
aas
cmpb
xor
sbb
and
movsl
ja
xor
sbb
js
or
mov
lock
jne
cltd
cltd
xor
xor
mov
insl
scas
outsb
dec
fwait
dec
add
xchg
and
jae
adc
inc
cmpxchg
push
or
movl
ds
inc
xor
inc
add
bnd
lret
inc
imul
mov
and
scas
test
inc
test
mov
mov
push
js
xlat
ret
aam
jne
sub
inc
sub
jne
add
ss
xchg
data16
adc
sbb
adc
inc
inc
cmpsb
out
xlat
pop
int
mov
das
xchg
popf
imul
pop
mov
push
in
ljmp
inc
pop
pop
ljmp
pop
pop
mov
icebp
sub
cmc
sti
sbb
add
jb
cmp
es
mov
xchg
ja
repz
add
push
xlat
pop
roll
or
cmp
scas
xchg
xchg
xor
jle
imul
imull
dec
jo
loop
mov
scas
push
shrb
out
test
jnp
cltd
nop
outsb
xchg
mov
ljmp
test
cmp
adc
clc
pop
std
sub
pop
inc
aad
sub
xlat
out
pop
leave
sbb
fisttpll
dec
jne
shlb
push
jns
cmp
xor
or
push
xchg
fstpl
cmp
aaa
cs
or
mov
adc
shlb
in
icebp
dec
push
fstpl
push
out
mov
sub
inc
dec
sti
mov
nop
shlb
push
fstps
xchg
jns
pop
push
pop
jbe
jb
xchg
fs
mov
add
shrl
mov
leave
xchg
pop
push
daa
sti
lock
movsb
imul
jbe
xchg
loope
mov
mov
sarb
pop
fistps
mov
js
sub
stos
inc
lea
mov
sbbb
ret
sbb
lds
dec
xlat
lods
or
je
pop
and
mov
or
dec
mov
xchg
lahf
push
je
cmp
jmp
popf
stos
stc
test
push
push
aas
clc
testb
call
sahf
int3
icebp
push
fisttpll
and
ss
fidivl
mov
dec
sti
push
add
shrl
nop
ss
mov
arpl
add
jno
inc
xlat
ss
scas
shll
adc
xchg
sub
xorb
or
ja
or
mov
aaa
out
call
in
push
pushf
mov
aaa
pop
xor
mov
enter
jbe
aaa
add
popf
inc
dec
or
aad
scas
adc
imul
cmp
insl
sub
mov
jno
mov
xchg
jl
clc
repz
dec
add
ja
aad
pop
jbe
dec
push
test
jno
popf
mov
inc
rorl
xchg
or
push
out
xchg
pop
loopne,pn
ja
dec
aam
push
or
mov
xchg
testb
jge
je
and
inc
sbb
pusha
int3
test
pop
add
sbb
mov
cmp
fwait
lock
mov
pop
loop
adc
in
xor
lahf
mov
int3
das
or
test
mov
xchg
push
pop
sarl
mov
in
int3
rcl
or
call
or
mov
in
pop
sbb
cmp
add
push
aaa
inc
inc
sub
cmp
inc
pusha
and
push
add
jbe
rclb
out
sub
loope
das
jb
filds
fists
ret
mov
xchg
stc
mov
sbb
mov
jns
add
fstps
nop
ret
mov
fistpll
incl
cmp
adc
insl
push
jmp
adc
push
imul
xchg
adc
sti
aas
jle
lahf
outsb
jecxz
inc
fistpll
pop
sbb
cmp
mov
hlt
cmp
js
sub
pop
rol
insl
test
loope
jmp
lock
data16
mov
pushf
adc
cs
push
rol
jmp
loop
dec
dec
in
dec
sti
adc
inc
dec
xchg
in
sarb
mov
jg
dec
xlat
jg
psubusw
fnstcw
insb
call
xor
pop
fistps
mov
xor
fwait
or
push
adc
int3
setg
aam
inc
mov
jg
daa
stos
cmp
icebp
nop
xor
add
hlt
stc
movsb
gs
popa
xchg
into
jo
pop
pop
cs
jae
jge
arpl
sub
mov
mov
cltd
rcll
add
divb
push
cld
dec
insl
xor
sbb
inc
or
jo
mov
xor
in
scas
cwtl
ds
out
inc
sub
dec
aaa
push
aas
bound
test
xchg
in
invd
or
ret
dec
out
push
test
inc
test
in
mov
arpl
mov
push
dec
imul
lahf
out
into
sbb
mov
jo
xor
jnp
in
dec
shlb
addr16
lods
push
fldt
adc
xchg
mov
mov
aad
add
out
out
inc
lahf
into
pop
clc
or
sbb
mov
int3
cmpsb
cmpsb
push
xchg
pop
dec
xor
jmp
add
out
inc
add
popa
mov
out
js
xor
add
xchg
stc
bound
cmp
pop
pop
xchg
dec
jno
mov
fwait
hlt
xchg
shlb
icebp
dec
int
rorb
xor
xchg
shll
adc
adc
inc
das
sti
ss
sbb
sbb
test
fidivs
pop
js
pop
and
loope
mov
dec
es
nop
mov
push
mov
fsts
and
fcoml
cld
add
loop
add
in
mov
test
outsb
sbb
mov
jmp
push
dec
add
pop
test
cmp
pop
test
loopne
dec
enter
ret
push
sbb
xor
loop
addr16
shlb
nop
ret
mov
movsl
inc
mov
jg
xor
leave
pop
jae
dec
or
roll
push
outsl
loopne
ds
cmp
das
es
push
aas
pop
xchg
lods
xchg
out
ror
arpl
sbb
and
outsb
cmp
pop
aaa
pop
fwait
add
aas
mov
in
fisubrs
pushf
or
lret
dec
sub
lcall
and
fwait
sbb
cmovne
inc
std
addb
js
xchg
loop
mov
andb
outsb
ret
inc
mov
loopne
xor
shr
test
push
dec
addr16
jbe
outsb
xorb
aad
fninit
xor
imul
lret
jl
push
std
insl
inc
ds
jb
xor
and
stos
pop
xchg
call
les
mov
int
pop
pop
xor
xor
jmp
pop
movntq
aad
clc
ljmp
cmp
fdivrs
daa
inc
insb
mov
adc
add
and
mov
vmwrite
mov
adc
dec
pop
jmp
xor
scas
jns
popf
push
outsb
jns
jg
loope
pop
jmp
js
out
movsb
lret
aam
ret
idivb
dec
cs
mov
dec
jnp
sbb
cli
test
push
sbb
test
or
in
gs
enter
push
jp
pusha
lods
add
push
imul
in
cli
mov
adc
jbe
mov
lret
jmp
clc
jp
xchg
in
loope
inc
in
imul
test
adc
jg
test
das
mov
sub
jp
bswap
xchg
enter
arpl
cmpsb
pop
xchg
inc
stos
pop
popa
mov
stc
dec
icebp
push
stos
cwtl
je
push
fidivl
jne
xchg
or
shl
movl
or
mov
dec
shl
idivl
fsub
das
jecxz
xor
pop
jae
or
xlat
adc
and
jge
loop
in
cmp
inc
mov
rcr
jge
imul
repnz
jp
mov
sub
jmp
outsl
shlb
repz
push
sbb
movsb
cmp
shl
jb
out
fldt
or
in
adc
pop
fs
pop
flds
les
and
outsb
popa
jl
lret
stos
pop
stos
jp
jl
sar
call
add
cmp
xchg
insl
cmc
sub
pushf
mov
pop
fnstcw
iret
orb
sar
ret
lcall
sbb
dec
add
int
and
push
jbe
mov
in
add
repz
ljmp
sbb
sahf
or
push
push
mov
jnp
rolb
out
adc
ret
je
push
jle
mov
rclb
aad
add
mov
push
mov
out
mov
sbb
ljmp
sbbb
scas
cmp
fs
mov
sbb
ret
mov
shlb
pop
scas
dec
xor
mov
mov
or
rcll
adc
shrl
test
fbstp
popf
or
mov
dec
xchg
mov
out
incl
pop
dec
in
sarb
dec
or
fldt
jmp
into
std
insb
sub
mov
cmpsl
jmp
in
pop
stos
push
cmp
loopne
sahf
xchg
or
inc
fidivrs
jno
cmp
or
mov
add
stos
loop
push
push
or
movsb
std
xchg
push
movsb
repz
mov
cmp
sub
xchg
mov
icebp
cwtl
mov
adc
icebp
xchg
xor
ja
sbb
js
dec
mov
test
sbbb
mov
mov
or
mov
jno
push
mov
xchg
inc
mov
lcall
shlb
sbb
cmp
prefetch
mov
inc
jle
inc
jge
xchg
movsl
sbb
fists
adc
xchg
movl
push
and
scas
ret
cltd
int
mov
xlat
lock
and
push
stos
insl
xor
xchg
aad
aam
outsb
cmc
out
hlt
adc
xchg
aam
subl
repnz
aad
xchg
mov
call
add
mov
fwait
and
in
fstps
push
ss
mov
popf
call
xchg
mov
push
or
xor
pop
pusha
cmp
adc
mov
mov
cmp
addr16
pushf
scas
xchg
aas
pop
test
mov
in
xor
int
ds
push
or
test
mov
jecxz
clc
xchg
pop
xchg
idivb
sub
inc
cmp
enter
mov
push
ljmp
andb
fimuls
pop
cs
push
leave
loopne
arpl
adc
adc
scas
jg
or
jmp
or
push
icebp
sarb
xor
adcb
fcom
mov
imul
nop
push
mov
sahf
cmp
movsl
movsl
pop
sbb
jo
dec
sbb
aam
mul
dec
pusha
inc
insb
adc
and
daa
out
in
mov
jge
into
push
inc
rorl
push
push
sub
push
jl
fldpi
stos
loope
sarl
sub
gs
popa
mov
pushf
xor
mov
xchg
mov
and
or
jno
mov
cmp
jne
sbb
stos
aam
mov
xor
popa
xchg
push
push
lcall
push
cmp
xor
movsb
arpl
push
or
jb
sbb
adc
out
and
lcall
inc
adc
push
ss
mov
loope
ret
outsb
pop
and
shl
cmp
xchg
pop
jbe
aas
or
mov
mov
repz
mov
or
and
idiv
dec
push
out
clc
or
adc
push
jp
pop
mov
imul
jmp
sub
mov
push
int3
inc
xchg
jb
jmp
lock
add
arpl
call
std
mov
arpl
fnstenv
xor
cmp
outsl
and
divb
ds
pop
xchg
iret
int
lcall
fstps
push
or
cmp
mov
popa
sbb
xor
fwait
pop
movsl
xor
adc
xchg
xchg
push
enter
repz
or
push
aas
jbe
jno
or
pop
mov
nop
je
es
adc
sar
mov
into
mov
push
mov
stos
xor
pop
lods
jmp
aaa
popa
xor
shl
sarl
adc
cmpsb
addb
hlt
in
mov
into
orl
push
mov
sbb
push
mov
mov
xlat
pop
fwait
adc
in
shlb
or
ret
mov
scas
push
jno
push
stos
or
mov
xor
decb
or
cmp
frstor
pop
add
rorb
mov
les
or
jl
insl
jae
std
cmp
inc
stos
xchg
xor
aad
xchg
mov
mov
pushf
stc
popa
es
sti
jno
push
inc
clc
adc
pop
andb
into
pop
hlt
pusha
mov
inc
in
aas
mov
fsts
scas
in
loope
clc
push
iret
pop
sahf
stc
movsb
gs
add
mov
test
subb
mov
sahf
sahf
adc
cli
sub
ds
dec
and
xchg
push
sub
xor
mov
lcall
push
fs
lret
inc
and
push
stos
fwait
mov
in
xchg
sub
jnp
add
xchg
outsl
lahf
arpl
dec
adc
and
fwait
aam
lock
xor
pushf
inc
xchg
add
mov
aad
out
sub
out
pop
sbb
sub
fwait
pop
pop
mov
mov
loope
jg
fimull
cmpsb
xchg
push
incb
mov
mov
inc
rcll
xor
dec
sub
dec
cmpl
add
cs
fs
les
xchg
sahf
aas
cltd
shll
sub
mov
push
pushf
scas
stos
shll
insl
enter
cmc
scas
jnp
pop
stos
jno
sbb
push
fists
xor
mov
setl
cs
inc
xor
into
lret
add
pop
push
push
mov
xchg
mov
lcall
es
dec
mov
ds
ss
dec
pop
stos
pushf
jmp
mov
pop
in
mov
lahf
xchg
stc
inc
sub
addb
test
aaa
mov
mov
push
and
mov
jl
fwait
and
lret
add
pcmpeqw
jp
or
nop
and
ja
add
and
int3
jg
xchg
cmp
dec
push
or
andl
adc
lahf
jbe
pop
testb
pop
and
dec
mov
sub
dec
rolb
sbbb
dec
hlt
ja
outsb
mov
dec
cltd
sbb
cmc
sti
imul
sub
mov
mov
daa
insl
jae
sub
loope
jmp
sarl
ljmp
js
lods
mov
pop
icebp
lcall
jns
popf
push
xor
xor
jl
incb
push
cmp
cmp
and
imul
lret
sahf
iret
adc
rcll
add
mov
jns
sbb
mov
cwtl
mov
mov
sbb
dec
inc
push
xor
mov
and
cmp
pusha
mov
in
mov
add
mov
cmp
xor
fbld
add
xor
xchg
mov
cld
bound
push
test
mov
cmpsl
ret
inc
xlat
xchg
ds
and
lcall
mov
fincstp
imulb
mov
test
inc
aad
and
adc
popa
pop
dec
push
iret
xor
loopne
popf
dec
les
xchg
in
mov
mov
sbb
mov
inc
bound
dec
jg
sub
push
pop
xchg
scas
mov
pop
and
ret
pop
mov
js
imul
jo
ret
testl
das
out
iret
and
shrb
fisubrl
push
repnz
cs
xchg
lods
mov
cltd
ja
imul
pusha
cwtl
add
sub
scas
popf
stos
jg
or
call
sbb
sbb
add
call
in
call
ja
lea
test
loop
dec
adc
sbb
leave
dec
dec
ret
dec
push
lock
call
mov
add
push
pop
mov
mov
dec
xchg
int3
popl
fistl
sub
jnp
sahf
das
mov
addl
jns
icebp
insl
push
mov
dec
scas
sub
sbb
ljmp
mov
pusha
test
mov
xor
inc
shlb
andl
cmpl
push
fwait
push
xor
fs
in
adc
cltd
scas
mov
push
sbb
lods
xor
pop
repz
sbb
es
shlb
xchg
mov
in
xchg
lret
shrb
inc
mov
out
and
inc
dec
mov
jae
jp
mov
nop
xchg
clc
test
movsb
sbb
aad
addl
pop
dec
in
fcompl
add
shlb
pushf
add
test
pop
xor
fildl
mov
xor
sub
pushf
xor
mov
lea
loope
pop
xchg
cli
movsb
xor
xchg
push
jo
insl
lcall
xchg
mov
xchg
or
and
jl
sub
dec
push
and
ss
mov
std
int3
sub
fldcw
dec
out
scas
pop
lcall
mov
out
push
inc
mov
or
popa
lock
or
jl
ret
rclb
fcmovnb
es
fbstp
not
push
pop
sahf
out
dec
push
stc
mov
and
push
stos
jl
imull
mov
lcall
lret
das
jae
push
push
add
dec
ljmp
loop
ljmp
shl
jle
daa
into
jns
adc
leave
sub
leave
xchg
jp
in
mov
iret
and
dec
movsl
pop
mov
and
shll
out
lods
mov
and
pop
hlt
or
jbe
icebp
mov
pushf
or
xlat
jg
fwait
int3
lods
aaa
pop
or
movsb
pop
cmpb
je
aaa
in
jecxz
stos
jno
into
aam
in
cmpsb
xchg
push
scas
lds
cmpb
push
xchg
adc
jns
cmp
fucomip
sub
icebp
lcall
and
subl
xchg
lods
sub
jno
xchg
popf
sub
lahf
add
int
je
testb
sub
incl
scas
out
repnz
fdivs
dec
sahf
mov
daa
add
xchg
jae
outsb
rorl
pop
mov
xchg
jl
adc
xchg
xorb
push
sbb
out
pop
mov
ret
xchg
imul
into
sub
incb
in
push
adc
jge
aaa
test
ret
add
push
cmp
inc
jg
mov
scas
popa
adc
adc
es
jne
decl
push
push
mov
mov
lea
jne
bound
enter
inc
fldt
xchg
es
es
lret
adc
mov
dec
cld
xor
sub
roll
cmp
cli
sub
mov
jle
loopne
or
loopne
repz
fsts
or
xchg
scas
outsb
mov
jb
clc
mov
add
nop
pusha
jl
adc
movsl
dec
mov
cs
push
push
out
add
shrb
sbb
stos
ja
or
pushf
add
int3
stos
jmp
jo
loopne
pop
inc
movsl
mov
xor
je
dec
test
cmp
add
shrb
adc
je
mov
add
sahf
xchg
sub
sub
and
subb
sub
push
jl
int
ficomps
jge
xor
and
inc
movsb
sbb
push
pusha
add
dec
sbb
or
mov
mov
imul
push
add
rorl
imul
mov
fwait
cwtl
adcl
loop
or
jns
xor
mov
popf
in
daa
ja
push
xchg
inc
and
sahf
test
ljmp
mov
or
hlt
sub
clc
mov
cs
mov
or
aaa
and
push
jge
cmp
dec
aas
jae
mov
fsubr
or
out
jns
mov
mov
clc
hlt
sbb
sbb
mov
adc
ljmp
movsb
addl
fwait
cmp
ret
or
movsb
and
mov
icebp
jns
call
mov
in
in
in
fs
repnz
jg
mov
xchg
int
aaa
xchg
mov
jae
icebp
gs
arpl
pop
mov
loopne
mov
sub
stos
xchg
mov
pop
movl
or
jbe
es
push
cmp
xor
mov
gs
pop
xor
dec
icebp
dec
aas
js
inc
sahf
xchg
ficoml
pop
das
xchg
mov
out
nop
bound
ret
jbe
in
pop
xlat
lcall
mov
jge
repnz
adcb
push
push
sub
sub
cwtl
fdiv
push
je
inc
adc
arpl
push
cmp
xor
in
mov
inc
and
pushf
sbb
sub
xor
sbb
out
test
xchg
jg
mov
jle
mov
in
loop
cmp
hlt
lcall
std
cltd
clc
and
push
std
sub
clc
mov
push
fmuls
cwtl
mov
and
jp
xorb
xor
js
dec
sbb
lea
jg
xor
rcrl
sbb
aaa
sub
sahf
fwait
or
jae
mov
test
in
cmpsl
cld
in
xchg
pop
cmp
scas
movsl
pusha
mov
sbb
jmp
cmp
jmp
and
mov
mov
insl
lock
inc
rorl
mov
in
xor
push
jo
sbb
int3
mov
push
jge
lret
push
insl
jns
outsl
sub
enter
and
push
mov
dec
popf
out
cwtl
sub
cmp
sbbl
mov
aas
jge
push
fs
int3
and
cli
leave
mov
mov
les
stos
mov
fdivrp
xlat
jmp
mov
cmpsl
idiv
xchg
clc
xor
jno
repz
cltd
mov
data16
shll
adc
loopne
and
xor
stos
add
lahf
mov
mov
leave
push
ss
jnp
jno
add
mov
mov
rclb
dec
test
mov
insb
jg
scas
test
mov
xlat
mov
mov
or
inc
inc
aam
insl
push
bound
out
mov
mov
insb
testl
out
push
sub
mov
pop
rcr
pop
jg
arpl
mov
cmpsb
push
mov
cli
jp
jmp
lods
imul
xchg
clc
jmp
icebp
sub
fwait
add
notb
and
sti
jne
adc
adc
in
xchg
je
pushf
cmp
add
pop
adc
sbb
outsl
sti
addr16
movb
fucom
gs
lods
daa
mov
test
mov
adc
fs
inc
mov
sub
ret
inc
mov
dec
pushf
fwait
push
mov
jge
dec
or
adc
ffree
adc
push
call
xor
popa
negb
cmp
jp
mov
or
sub
test
imul
cmpsb
add
roll
xchg
inc
push
daa
fidivs
in
lea
jle
push
stc
popf
xor
mov
xor
pop
dec
icebp
cmp
ret
or
int3
xlat
inc
imul
or
inc
fwait
pop
mull
xchg
popa
xlat
lret
push
jae
out
pop
leave
test
enter
js
jns
jmp
jge
and
dec
inc
cmp
mov
xchg
xchg
fisubs
dec
icebp
cmp
les
add
sub
aad
push
push
js
cltd
dec
add
xchg
imul
in
push
fbstp
dec
test
in
sbb
xor
imul
cmp
fwait
push
lods
es
xchg
sti
loop
add
popl
daa
gs
xchg
movsl
out
clc
mov
add
pop
sbb
aam
push
test
in
dec
movsb
aad
aam
ja
fmulp
insl
jne
loop
call
das
fld
xchg
and
mov
xchg
mov
mov
loope
mov
cmp
jb
and
fnstenv
sbb
out
inc
faddl
jns
test
nop
sbb
jns
mov
mov
mov
inc
xor
aaa
test
imul
and
or
aam
or
cmp
mov
mov
lea
aad
mov
lret
lret
sahf
js
add
lahf
dec
push
nop
mov
or
mov
inc
xchg
data16
in
dec
aam
add
dec
stos
ret
mov
mov
out
ret
loopne
mov
or
lds
lods
xchg
ficoms
pop
xchg
adc
cmpsl
ret
andb
std
rolb
cmp
call
pushf
fwait
jnp
es
xchg
addr16
xchg
xor
xchg
das
sarb
push
jecxz
mov
sub
push
xor
and
pop
mov
pop
ret
xchg
mov
sub
in
out
bound
dec
dec
cmp
add
dec
push
xchg
in
xchg
cmp
test
inc
ret
mov
stc
mov
data16
imul
insl
mov
dec
and
adc
cmpsl
sub
arpl
and
mov
xor
inc
jle
fldl
push
hlt
push
gs
mov
mov
cli
dec
push
cmp
je
cli
lret
cld
adc
adc
and
std
mov
roll
cmpsl
or
pop
clc
xchg
push
arpl
jecxz
xchg
sub
in
aam
mov
imul
mov
cmp
movsl
xchg
loop
or
mov
jl
push
cmpsl
and
jns
cmc
or
shll
outsb
dec
shrb
sub
aam
ficomps
xchg
push
daa
dec
jp
mov
rcrb
loopne
mov
or
rcl
loopne
mov
pop
inc
stc
dec
popa
fidivrs
add
mov
jge
adc
mov
fisttpl
dec
loopne
lock
mov
pop
mov
and
cwtl
lods
fstl
jmp
cltd
xchg
cmp
pop
popf
data16
mov
lods
das
push
cli
lock
mov
stos
ds
mov
stos
mov
inc
scas
mov
push
rclb
mov
cwtl
mov
int
rorb
stc
adc
or
mov
pop
std
repz
ret
loopne
leave
dec
cmp
add
sar
shlb
insb
xchg
jl
pop
pop
xlat
cmpsb
inc
dec
inc
mov
or
out
repz
sti
lcallw
sbb
rorb
sub
in
push
sub
sub
xchg
shll
shll
mov
aas
jl
and
cmp
xor
jne
mov
mov
imul
mov
xchg
pushf
push
xchg
fs
movb
test
shr
sub
dec
rcll
and
pop
sub
stos
xchg
xchg
lcall
push
sbb
shl
jl
movsl
xchg
pushf
js
xor
mov
js
mov
pop
int3
js
sahf
in
mov
mov
insb
add
lret
and
xchg
lods
inc
inc
loope
jmp
sub
dec
das
mov
or
insb
push
jmp
mov
filds
icebp
adc
and
lock
ljmp
cmp
test
in
cmpsl
addb
out
insl
sub
roll
or
cld
pop
movsl
jns
andb
jg
mov
shl
fisubs
xor
fisubrl
fwait
dec
push
push
or
fcmovu
mov
mov
jge
cmc
test
inc
cs
sub
stos
out
cmp
cmp
jp
push
inc
pusha
cwtl
inc
outsl
add
push
incl
jle
lds
cmp
mov
stc
sahf
jb
lcall
add
xchg
pop
mov
pop
adc
adc
cld
lds
dec
xchg
mov
test
shlb
movsl
ja
cmpsl
pop
jp
js
and
mov
xor
in
and
jno
scas
lods
cld
aaa
ja
pop
popa
cmp
inc
fwait
lds
dec
mov
mov
cmovo
push
fstl
xchg
sbb
push
or
shll
push
mov
cmp
gs
or
cmpsl
cltd
or
jl
in
adc
cld
imul
push
popa
cmp
insb
shrb
dec
scas
iret
push
pop
xor
scas
stos
jnp
cmpsb
lea
adc
push
sub
sbb
sahf
dec
inc
mov
mov
test
lret
sub
lea
or
lahf
adc
test
jne
mov
aas
fisubl
push
mov
cli
add
ja
adc
dec
mov
cmp
sbb
imul
out
cs
and
push
jle
xchg
push
sarb
push
movsb
sti
aam
mov
cld
push
inc
pop
lret
test
jp
loopne
push
negb
clc
daa
ljmp
loop
popa
jo
out
cmp
in
lcall
test
sbb
mov
out
jmp
inc
dec
pop
mov
mov
sub
mov
dec
inc
xlat
fnstsw
dec
test
cld
pushl
adc
mov
dec
hlt
rclb
aaa
push
mov
stos
pop
shlb
pop
xor
push
add
pop
xchg
jle
decl
inc
dec
in
push
mov
jge
jno
mov
rcl
rorl
jb
sbb
lea
jg
sub
gs
int3
inc
cmpsl
cli
ret
xchg
sbb
ljmp
mov
fisubrs
mov
hlt
or
lret
andb
jne
jge
jge
out
or
repz
cmp
popa
shll
pusha
adc
test
fidivrl
sub
dec
shll
push
or
stos
shl
add
mov
fdivrp
mov
insb
or
pop
mov
fmul
es
repnz
push
inc
cmc
pop
mov
xchg
lods
jne
daa
pop
push
jmp
jb
lods
mov
shr
dec
jno
inc
fst
inc
inc
and
mov
jle
dec
sub
fimuls
in
xor
inc
loop
roll
icebp
or
iret
cmpsb
mov
dec
or
lret
lahf
sbb
sbb
sbb
imul
jmp
xchg
push
cltd
or
ljmp
jmp
jg
stc
pushf
in
adc
or
int3
outsl
pop
cli
push
in
mov
int
inc
scas
movsl
rorb
cltd
xor
and
pushl
mov
mov
mov
sahf
mov
jne
jno
subl
test
roll
sbb
popf
pop
lret
dec
add
mov
jno
std
dec
iret
test
pop
das
icebp
mov
push
hlt
lods
je
inc
push
jb
or
repnz
mov
dec
movsb
dec
sbb
mov
imul
out
subb
sbb
nop
jl
out
cmpsb
fwait
adc
sbb
push
scas
push
sub
push
out
xchg
ficompl
jne
push
inc
mov
rcrl
push
into
stos
push
ret
push
push
dec
test
jb
iret
pop
jo
in
or
jecxz
fcmove
adc
xchg
loop
mov
lret
rcr
test
and
jl
cmpl
sbbl
mov
and
xchg
cmpsb
fidivl
or
leave
jnp
ja
jno
jecxz
dec
outsb
insl
scas
mov
ffreep
fwait
jne
jo
lea
mov
cmpb
sahf
and
shl
scas
cltd
or
xchg
lcall
mov
mov
shl
call
inc
push
cmc
arpl
nop
in
inc
jecxz
jb
repnz
and
mov
idiv
fcmovb
pop
mov
fstps
out
imul
sub
fcmovnb
push
or
inc
push
test
fmuls
sarb
or
popl
lcall
aas
ficoml
adc
gs
fsub
cwtl
pop
push
cltd
fldenv
and
test
jp
inc
sub
ljmp
and
movsb
and
leave
inc
aaa
adc
xchg
mov
mov
bound
cmp
jecxz
dec
cmp
mov
stos
ja,pt
and
mov
lods
loope
out
xor
pop
xor
test
ss
scas
fs
xabort
xor
scas
or
imulb
add
fdivrs
in
jge
in
imull
fcoms
sbb
test
into
orl
je
mov
aam
add
addr16
adc
jo
jnp
ficoms
lret
sbb
mov
mov
stos
push
lea
pusha
iret
sahf
imul
xchg
jl
lods
adc
mov
imul
orl
ss
ja
pop
dec
cwtl
pushf
push
mov
inc
inc
adc
insb
cmp
test
decl
jp
add
xor
cmpsl
pop
int
jns
insb
jnp
xchg
aad
adc
stos
xchg
mull
or
fmul
push
lea
jg
mov
cmp
sub
mov
add
aam
clc
pop
pushf
shlb
fs
inc
pop
xor
mov
rorl
xor
sub
lret
xlat
dec
and
addr16
or
lret
lcall
push
inc
insl
adc
pop
fadd
xor
push
mov
pop
mov
jno
test
dec
popf
test
lcall
sub
scas
cmc
insb
xor
ss
cmpsb
xor
mov
repz
popf
aas
cmpsb
ret
imul
jns
pop
cmc
addr16
movsb
inc
jge
mov
test
cmpsb
or
mov
jns
lretw
movsl
add
xchg
loopne
clc
inc
and
jae
xlat
iret
sarl
mov
xor
jle
xchg
cmpsl
adc
inc
push
flds
loop
mov
jmp
rorb
sti
dec
sub
lods
adc
negb
std
je
ds
rclb
les
insl
mov
insb
movsb
sbb
repz
js
js
add
sub
xor
sub
mov
fmuls
adc
in
sbb
pop
test
or
dec
scas
or
aas
test
bound
push
xlat
and
and
out
mov
pop
push
lea
dec
jp
or
leave
xor
ret
jecxz
in
sarb
lret
dec
xchg
sti
mov
sub
out
insb
and
xor
in
rcrb
fsub
ficoml
test
in
and
pop
sbb
cmp
imul
cmp
call
pop
addr16
and
jnp
sub
repz
out
js
xor
dec
cmc
xchg
push
cmpl
dec
xor
fs
loopne
rcr
xchg
movsb
lods
daa
aas
out
addr16
out
and
push
xchg
and
stos
inc
add
add
loop
imul
or
cltd
out
fstp
jbe,pn
outsl
cwtl
add
mov
xor
orl
ror
shlb
inc
shl
sub
jno
sarl
sbb
mov
xchg
and
sbbb
cld
inc
fsubrl
xor
push
rcrb
jge
sub
aas
dec
mov
pop
adc
xchg
popf
sbb
fsubr
in
mov
add
mov
push
sbb
lods
push
jge
inc
cltd
and
push
mov
xor
cmpsl
dec
enter
mov
fs
stos
popf
push
call
and
push
push
xchg
lret
movsl
mov
ds
cli
xor
rcr
adc
notl
mov
fcom
add
insb
pop
xor
in
fs
sub
call
xor
lods
or
adc
add
les
pop
stos
add
hlt
xchg
in
iret
jnp
pop
in
push
inc
sub
push
mov
stos
inc
and
pushf
movsl
cmp
daa
jmp
xchg
ss
dec
pusha
and
insb
movsb
and
mov
mov
repz
je
jle
jecxz
pusha
pop
mov
jmp
es
addr16
rclb
dec
rcll
testb
or
push
sbb
xor
push
bound
mov
and
jnp
jmp
popf
pop
rclb
test
sbb
mov
cmpsl
cmc
inc
sbb
mov
imul
xor
loopne
fwait
jmp
test
rcr
bound
mov
aam
and
and
addr16
test
je
jo
call
cmc
push
test
fwait
fs
xchg
push
xor
adc
rclb
push
es
cmp
popa
testl
ja
or
mov
cmp
sub
jae
inc
xchg
inc
pop
xchg
fldenv
into
pop
push
push
in
int
in
call
mov
test
sbb
testl
push
pusha
mov
fisttps
pop
sub
inc
insb
inc
in
cmpsb
aas
sbb
leave
lods
lock
stc
loopne
mov
or
shr
std
cltd
sub
fnstcw
jb
xor
loopne
sar
fsub
inc
xchg
mov
inc
ljmp
push
stc
push
adc
push
mov
test
movsl
je
push
in
mov
mov
fdivrl
lock
lahf
mov
ss
push
mov
jb
inc
add
repz
pusha
or
notb
lods
mov
or
shll
adc
aad
sbb
xchg
jg
jge
pop
push
jns
cmp
xchg
add
pushf
and
subb
add
enter
into
popf
mov
and
fisttps
cmpsl
mov
sub
stos
aam
inc
lret
mov
mov
mov
sub
push
fincstp
xchg
and
int3
mov
and
inc
sbb
stos
out
in
das
cmp
cwtl
aaa
je
mov
aaa
xor
in
out
arpl
inc
xchg
pop
repnz
mov
popf
lea
mov
dec
fistpl
and
fld
in
or
sbb
jle
scas
mov
fisubs
imul
push
in
in
sbbb
lea
mov
je
leave
in
mov
sbb
sahf
pop
pop
jo
push
mov
es
mov
inc
xor
mov
data16
inc
orl
lock
push
cmpsl
gs
push
enter
shrl
push
dec
gs
push
out
jne
sub
sahf
jbe
fistl
jne
lods
push
dec
adc
scas
lret
pop
test
pop
es
mov
pushf
mov
dec
mov
ljmp
pusha
inc
lcall
popf
jae
push
mov
cmp
lock
xor
dec
rcr
push
push
aaa
aaa
xchg
pop
xchg
cmp
push
xor
xor
sub
sub
cmp
jns
pop
sahf
aas
ss
sahf
mov
rorl
sarl
mov
push
push
pop
popf
sub
es
mulb
addr16
aas
inc
cmp
adcl
aad
jp
mov
insb
cwtl
stos
cs
movsl
sbb
cmp
pushf
adc
insb
loope
std
repz
scas
mov
lahf
lods
cmp
xor
fidivs
cmp
or
cmpsb
shlb
rorl
pop
das
or
dec
pop
jle
ret
push
inc
daa
js
bound
push
fwait
ja
xchg
add
mov
mov
fisttps
lahf
bound
mov
fimull
inc
adc
adc
or
adc
addl
ljmp
leave
call
filds
scas
loope
dec
mov
lds
sbb
add
call
xor
jle
xor
jno
jecxz
jmp
pop
inc
xchg
out
cs
stc
movsl
sti
cld
loope
xchg
fwait
sbb
pop
loop
fstl
dec
test
mov
xor
lods
push
adc
adc
mov
icebp
decl
popf
js
push
imul
lret
push
cld
lret
mov
fucomi
int
or
inc
sahf
sub
adc
mov
nop
sbb
movsb
xor
jns
jmp
jecxz
jp
sti
mov
jge
in
and
inc
ja
faddl
pusha
arpl
jbe
adc
xor
cli
nop
inc
repz
hlt
sbb
inc
push
push
pop
punpckhdq
mov
add
outsl
adc
cmp
jg
jg
mov
mov
cmp
sahf
xor
jno
push
stos
in
mov
mov
mov
sub
cld
insb
setnp
in
add
dec
or
int3
mov
mov
mov
mov
or
adc
adc
int3
mov
jnp
sub
adc
mov
inc
and
outsb
mov
pop
cmp
or
dec
mov
pop
xchg
push
push
xchg
rorl
sarl
fiadds
xor
test
inc
dec
sahf
adc
pop
jno
jae
and
insl
add
push
out
jg
xor
fstpl
rclb
arpl
sbb
addr16
jae
push
pop
push
push
mov
out
in
or
iret
jecxz
xchg
dec
sub
jns
je
push
shl
mov
outsl
inc
movsb
aad
mov
xchg
cmp
mov
shlb
sarl
gs
adc
shlb
hlt
enter
mov
lret
js
mov
ror
push
in
les
sub
ficoml
pop
insb
push
cs
mov
int3
mov
leave
loope
xchg
push
cwtl
xor
sub
add
cltd
call
bound
sbb
rcr
jbe
outsl
dec
add
das
pop
mov
das
pop
and
dec
data16
lods
mov
leave
jns
movsl
and
add
std
push
sub
mov
shrl
inc
mov
mov
lret
out
adc
add
js
jp
push
test
inc
xchg
push
mov
jne
xchg
pop
lods
mov
jb
ret
mov
fisttps
dec
inc
jns
push
and
dec
jge
insb
sub
jo
jbe
sbb
inc
icebp
sbb
movsl
das
sti
pushf
push
pushf
jae
rorb
push
ja
mov
jmp
orl
lock
xchg
out
adc
cmp
adc
cmpsl
mov
inc
pusha
outsb
movsb
in
fcomp
pushf
sub
sti
jns
and
repz
test
sub
pop
mov
jae
ret
cmp
sbb
adcl
mov
inc
cwtl
xor
adc
nop
in
mov
mov
mov
add
xor
fsts
fcom
fs
and
mov
insl
inc
xchg
add
rcrb
rcrl
mov
test
mov
mov
clc
addr16
mov
pop
push
lret
jbe
insl
dec
rolb
dec
or
outsb
jge
cmc
sarb
or
and
sbbl
lcall
push
mov
idivb
out
mov
xchg
sbb
int
xchg
xor
fdivrs
pop
cli
outsl
sbb
sbb
pop
loop
dec
mov
mov
mov
push
pop
ja
shrb
int
push
dec
sbb
inc
mov
fcmovbe
enter
fnstenv
adc
pushf
push
jg
lods
jne
mov
test
pop
shlb
in
ret
jecxz
mov
push
addr16
and
mov
in
mov
sbb
xor
mov
ds
call
cmp
cld
jge
popa
call
clc
arpl
cmpl
bswap
push
mov
sub
xchg
pop
mov
lods
mov
and
pop
js
ss
ja
mov
int
adc
add
add
les
fildl
stos
push
pop
and
xchg
js
imul
std
xor
dec
xor
xchg
xchg
repnz
pushl
xor
adc
rcrb
pop
pop
icebp
xlat
sub
fcompl
inc
mov
jle
fisttpll
cmp
negb
jl
loope
mov
popa
lret
mov
sub
lock
test
sub
mov
std
dec
fbstp
adc
mov
push
shrb
add
bound
aas
mov
fadds
fcmovne
pop
and
lahf
push
out
ss
xchg
or
adc
fstp
stos
in
test
rcrb
loope
xchg
outsl
imul
je
sbbb
mov
popf
mov
pop
xchg
in
std
pusha
and
adc
sbb
repnz
push
popa
ficoml
or
int3
sub
adc
out
jge
jg
mov
xchg
inc
arpl
jns
fdivrs
cld
jecxz
mov
jge
dec
push
cmp
adc
in
fdivrp
fistpll
aam
adc
imul
imulb
fcmovnu
mov
pusha
lods
cli
sub
push
sub
cwtl
mov
dec
pop
lret
insb
gs
psllw
mov
aam
fs
js
clc
std
cld
sub
test
enter
inc
xor
ret
into
ja
mov
pop
push
dec
cmpb
sbb
fstpt
test
jb
inc
out
loope
mov
and
pop
mov
xor
cs
pop
dec
cmp
and
xor
icebp
les
add
lods
sbb
inc
aam
lret
pop
cwtl
sbb
jmp
pusha
roll
sub
jnp
lea
jl
jg
mov
shlb
jg
dec
or
xor
loope
inc
mov
enter
mov
xchg
inc
in
jp
or
scas
enter
lret
and
inc
mov
xchg
inc
pushf
test
test
pop
sbb
pop
repz
ds
jle
fmuls
int
sub
les
pop
mov
sbb
call
test
pop
or
cmpsb
popf
fidivl
les
pop
mov
negl
pop
les
inc
dec
lret
dec
lahf
pop
inc
sti
lods
call
lock
and
jb
test
sbb
sbb
push
shrl
shll
fbstp
mov
sub
test
divl
lcall
xor
shll
fisubrl
ror
or
xor
mov
arpl
cltd
and
lret
pop
cmp
add
out
out
jae
lds
movb
or
push
or
sub
jae
mov
xor
xor
cmpsb
rcl
and
in
les
push
andb
dec
mov
fmull
les
sub
add
ja
lods
ret
xchg
fisttpll
cmp
xor
push
lahf
es
mov
inc
outsl
nop
and
scas
into
inc
fcmovnu
push
dec
aaa
nop
fld1
mov
xchg
jno
movsl
stos
dec
out
cs
clc
stc
jg
add
jg
or
mov
ffree
sti
out
add
test
lret
outsb
loopne
mov
jo
jmp
rcrl
inc
mov
loope
leave
out
adc
push
or
aas
cli
outsl
fmulp
cwtl
decl
vcvtdq2pd
mov
sbb
inc
xchg
mov
xor
test
addr16
push
adc
dec
cltd
popa
xchg
mov
push
leave
insl
shrb
ret
lods
and
imull
adc
push
mov
call
je
mov
pop
xchg
imul
sahf
xchg
scas
imulb
sti
mov
pop
pop
mov
mov
add
adc
mov
adc
aas
cmp
ja
pop
mov
shrb
mov
fdivp
pushf
aaa
in
fwait
test
icebp
sbb
sub
nop
inc
dec
in
mov
push
mov
rorb
jo
cmpsb
sub
lds
mov
fidivrs
xchg
add
push
inc
sub
xchg
add
ret
out
icebp
repnz
jns
or
mov
pop
in
sub
and
and
add
out
inc
std
push
sbb
insl
bnd
in
test
lea
dec
test
loope
std
jo
rol
jne
push
daa
dec
aaa
cmp
shrb
inc
jno
imul
jne
into
stos
sti
stos
test
xor
hlt
sub
ss
jns
aam
adc
das
or
xchg
xchg
iret
in
cmpsb
push
cwtl
mov
dec
xor
mov
mov
gs
out
ljmp
in
pop
test
push
sub
pop
or
pop
jmp
in
cmp
xchg
insl
outsb
adc
ret
stos
pop
mov
mov
dec
addl
jmp
mov
lods
shl
cmpsl
mov
dec
addl
aaa
loope
movsl
dec
pop
insl
cmpsb
pop
test
loope
out
dec
sub
ret
and
xchg
stos
in
notb
push
xor
sbb
leave
insb
jb
xchg
adcb
sbb
outsb
adc
je
test
sub
mov
sbb
js
fisubrs
dec
jge
fimull
mov
sbb
in
mov
ds
pop
xchg
loop
push
pop
mov
pop
outsb
bound
fdivs
mov
add
adc
insl
call
mov
lret
sub
fwait
pop
cld
sub
addr16
inc
cli
insl
lcall
adc
sbb
jecxz
fldt
rcrl
push
popl
pop
in
cwtl
mov
scas
sub
dec
lahf
push
xchg
jbe
mov
jno
lods
je
divb
ja
ja
adc
ds
addr16
lock
rorl
mov
stos
mov
fidivrl
aas
int3
ja
xchg
pop
xchg
jg
into
scas
cli
jge
stc
mov
mov
jl
std
adc
ljmp
mov
sub
dec
mov
push
fs
leave
or
mov
mov
cmp
jg
int
mov
popf
in
fcomps
pop
das
push
adc
pop
and
xchg
pusha
inc
inc
dec
pop
mov
xor
jg
mov
leave
lds
jge
cli
and
push
ds
and
pop
decb
and
jecxz
pop
icebp
bound
mov
dec
hlt
mov
lods
call
cs
jo
mov
xchg
insb
push
xchg
fcmovnbe
cmpsl
pop
mov
push
dec
loope
push
cmc
outsb
mov
pop
repz
jb
push
push
or
mov
shrb
ja
cmp
or
pop
clc
cmpsb
xchg
scas
dec
pop
mov
mov
lods
push
aaa
xor
dec
ret
push
aas
test
sub
sahf
xchg
xchg
and
cmp
fcom
and
mov
jecxz
in
adc
xchg
xchg
push
stos
jae
enter
enter
pop
dec
jp
es
mov
imul
push
mov
in
jecxz
pushf
and
mov
mov
int
in
jecxz
cmp
adc
imul
mov
cmp
ljmp
adc
mov
or
or
aaa
outsb
jbe,pt
aas
icebp
scas
dec
popa
mov
shl
mov
cmp
dec
fldenv
push
mov
xor
aad
je
push
inc
mov
xchg
popa
hlt
pop
jp
cs
mov
loope
fidivrs
and
sbb
bound
lret
cmp
dec
mov
call
es
outsl
mov
cs
xchg
orl
ficoml
andb
jg
js
mov
pop
outsb
stos
pop
test
mov
mov
pop
mov
fcoml
inc
adc
adc
sbb
dec
xor
pushf
divl
testl
lahf
out
xor
or
inc
aad
jg
stos
sub
lcall
stos
test
out
and
fs
push
dec
inc
jl
loope
daa
notb
xchg
dec
sbb
sahf
sub
ret
sub
mov
hlt
jne
pop
xor
sti
dec
jno
lret
fs
loop
clc
add
dec
ja
test
in
fidivrl
ret
push
mov
cs
push
cmp
sbb
fidivrs
insb
mov
dec
ret
sub
fiadds
cmpsb
fldcw
mov
dec
pop
mov
loopne
xor
mov
aaa
pop
jmp
cmpsl
lods
not
out
out
jp
scas
mov
pop
lret
jb
test
xchg
iret
xchg
aaa
cmp
lret
pushf
repnz
fidivrl
in
dec
push
cli
repz
fsub
push
jg
inc
in
loope
xor
jbe
fcmove
movsl
pop
push
xor
mov
push
lock
jbe
ja
enter
mov
push
pop
mov
test
out
push
or
xchg
cli
pop
lock
lock
mov
loope
add
jnp
xchg
jo
gs
adc
adc
sub
adc
push
ret
out
stc
sub
imul
es
lds
std
cs
shr
aad
cmp
cmpb
filds
movsb
cmp
adc
dec
rcrl
shl
cmpsl
cmp
pusha
sub
lds
mov
mov
hlt
jge
call
js
inc
movsl
and
jns
mov
and
xor
test
addb
add
addb
cmp
enter
xor
sbb
fstl
jne
jnp
sub
adc
sub
fimuls
sub
out
cwtl
xor
out
push
testl
movsl
push
adc
mov
test
gs
mov
xchg
jb
jle
jnp
adc
test
ljmp
nop
insb
sbb
push
dec
xor
mov
xchg
mov
mov
pop
mov
lret
mov
xor
or
xchg
das
hlt
movsb
adc
clc
mov
in
add
ja
pop
out
mov
scas
out
mov
into
sub
ljmp
stc
adcl
dec
push
test
and
jo
push
hlt
call
int
inc
enter
mov
xor
pop
repz
sbb
ficoms
push
jge
ljmp
jne
mov
jno
outsb
mov
push
icebp
pop
test
jne
std
jo
xchg
mov
mov
xchg
repz
sarb
mov
dec
jge
jns
mov
pop
sub
cwtl
data16
mov
adc
loope
push
je
clc
icebp
outsl
into
das
push
push
stc
scas
sbb
rcll
and
mov
dec
and
push
xchg
mov
mov
or
mov
fstl
dec
not
mov
xchg
sahf
stos
insl
add
test
scas
aaa
sbb
mov
adc
int3
cmpsl
push
cli
gs
aad
sub
lods
aad
and
sbb
rcrl
movsl
pop
xor
call
mov
dec
popa
dec
pop
jl
mov
cmp
pop
scas
aas
mov
xlat
bnd
and
and
dec
mov
dec
sub
iret
lock
jo
push
jg
test
xchg
loop
push
adc
fadd
pushf
sub
pop
push
cmp
mov
xor
outsb
stos
cld
ror
ret
mov
sbb
cmp
stos
sbb
test
add
sub
jl
sub
sbb
cs
xchg
repz
sbb
lods
push
fisttpll
inc
xorb
sub
call
popa
fwait
sbb
sahf
outsl
pop
jl
xor
movsb
fbld
rolb
fs
xchg
shrb
xchg
mov
in
aad
call
sar
mov
in
repnz
mov
pop
cmp
addr16
ret
cmp
in
push
mov
xchg
jno
sub
aas
cld
cmpsb
outsb
jecxz
loopne
call
inc
push
push
cmpsl
xchg
jge
adc
loopne
mov
add
or
or
dec
mov
adc
les
roll
mov
iret
in
fdiv
inc
add
sub
out
fidivs
or
inc
in
sti
shrl
inc
dec
xor
shrl
aam
xchg
sarb
sbb
cmp
test
or
mov
enter
sub
fnstcw
scas
lret
in
in
cmp
push
jp
mov
mov
notl
pop
push
je
into
pop
jb
jl
cmp
hlt
and
pop
adc
out
xchg
lret
in
loopne
dec
aaa
sbb
xchg
cmp
pop
leave
push
inc
dec
rcll
aas
jmp
adc
test
shlb
sti
pop
into
ret
mov
repnz
ljmp
push
cmc
pop
iret
in
inc
mov
adc
inc
mov
loopne
lcall
test
dec
enter
sbb
loopne
ss
cltd
mov
js
imul
rorb
push
add
mov
push
bound
dec
inc
pop
inc
jae
imulb
adc
pop
sahf
cmp
cs
add
add
movsl
loope
xor
jl
insl
adc
fs
and
out
ja
dec
xor
rorl
and
jecxz
icebp
shll
inc
nopl
stos
mov
xchg
jb
adc
ret
ja
int
enter
sub
aas
pop
inc
jmp
jo
jg
mov
mov
push
mov
std
pop
sub
xchg
mov
mov
sar
mov
popa
out
xor
sbb
sarl
shll
es
adc
adc
sbb
xchg
adc
imul
pop
data16
jg
and
push
or
sub
fidivrl
mov
sbb
je
pop
xchg
sarb
bnd
jecxz,pn
int
popf
nop
test
les
lret
aaa
sub
lcall
pop
mov
xchg
imul
subb
shll
push
and
ss
test
xchg
mov
movsl
movsb
xchg
xor
sub
lock
popf
popf
dec
fs
mov
jnp
int
and
sub
mov
dec
mov
mov
scas
sub
adcl
mov
push
sub
sub
es
nop
jp
aam
inc
push
inc
mov
inc
mov
jmp
xchg
inc
xor
pop
or
mull
jle
aad
sub
push
sahf
inc
insl
sub
int
jl
or
adc
outsl
dec
into
pusha
jae
pop
pop
push
jbe
jl
sbb
aaa
lods
loopne
mov
lcall
push
pop
sub
mov
test
outsb
sbb
loop
popa
and
sahf
xlat
pop
dec
imul
mov
aaa
inc
push
jecxz
xchg
leave
aaa
mov
fs
roll
dec
jns
or
lcall
inc
add
sti
dec
sub
stos
inc
xor
aaa
ret
adc
into
jo
push
sub
in
ret
dec
push
add
mov
mov
clc
filds
inc
inc
aaa
out
mov
sbb
stos
movsl
hlt
mov
cmp
sub
call
xchg
lds
dec
out
dec
jbe
mov
cmp
icebp
mov
lods
sub
xor
dec
add
fld
xor
push
mov
pop
pop
sbb
push
mov
cli
ljmp
mov
pop
mov
mov
in
cmp
aam
stos
sub
jge
adc
cmp
xlat
jmp
sub
and
aas
xchg
and
pop
fstpl
or
inc
mov
imull
shr
fdivp
movsl
je
xchg
lret
lock
out
inc
shll
xor
add
jecxz
enter
int
ja
push
das
add
push
jp
fsubp
stos
xlat
in
icebp
xchg
mov
xchg
sbb
ret
jae
lods
sbb
sarl
pop
or
int3
imul
add
into
push
bound
add
or
lock
or
or
push
inc
sub
jg
icebp
jl
insb
cmc
nop
cmp
push
mov
cli
out
mov
mov
mov
lods
stos
test
icebp
aaa
idiv
lea
dec
jg
jno
movsb
scas
das
push
jnp
push
test
stc
popf
pop
jle
imul
clc
in
mov
sbb
nop
inc
adc
or
dec
xor
out
in
xor
jl
leave
mov
mov
xor
mov
enter
and
popf
mov
push
negb
mov
add
ds
outsb
push
or
mov
sbb
xor
xor
gs
xchg
pushf
mov
idiv
dec
inc
xor
mov
pop
lcall
mov
sahf
popa
lret
decb
pop
xchg
fstpl
mov
pop
adc
mov
push
iret
dec
push
xchg
in
xor
push
mov
cmp
inc
pop
push
push
xor
movsl
fs
jnp
push
sbb
xor
inc
xor
or
add
sti
jae
cmpsl
std
jno
xchg
push
lds
leave
nop
mov
pop
pop
pop
xor
push
jmp
sub
lds
loopne
rcrl
notl
hlt
in
shlb
pop
jle
shlb
push
mov
xor
push
ljmp
mov
shr
sbb
inc
je
pop
push
inc
out
clc
dec
outsl
add
jge
ds
sub
mov
pop
xchg
into
xchg
daa
xchg
xchg
mov
cltd
in
inc
adc
repz
push
call
mov
xchg
mov
xchg
sbb
pop
in
mov
xor
jae
xchg
ficoms
jbe
aam
aaa
mov
jecxz
pop
nop
sbb
ret
pop
aad
scas
add
cmp
adc
scas
cmp
popf
push
hlt
leave
dec
xchg
out
rorl
insl
adc
std
fimull
and
dec
push
lods
int
sub
pop
cmp
cmpsl
adc
jl
lods
add
sub
push
int3
lret
and
dec
xchg
mov
push
outsb
mov
pop
lods
jle
push
ret
jbe
vpunpcklqdq
rcrb
call
add
ret
int
jmp
sub
pusha
xchg
cmp
pop
jnp
es
cli
jno
ja
cld
repnz
push
cltd
mov
xchg
je
addb
jg
xchg
inc
je
loope
popa
loop
lds
test
das
insb
cwtl
out
pop
push
xchg
xorl
test
inc
shlb
imul
or
push
ret
sub
pop
das
xor
push
outsl
test
xchg
jge
or
lods
lcall
mov
jg
mov
cmp
cmp
cmp
lahf
or
rorl
imul
jl
push
dec
data16
jl
int
sbbb
cli
shlb
push
jb
in
sbb
fnstsw
jecxz
imul
dec
mov
mov
out
dec
sti
jl
dec
cli
or
ja
and
cwtl
fs
scas
aam
sbb
xchg
outsb
mov
aam
jbe
int
popa
add
sub
mov
aad
cmc
xchg
mov
lock
pop
lea
std
jo
cmp
lahf
mov
sub
mov
not
clc
stos
xor
sahf
incb
cmp
gs
mov
push
push
loope
or
push
movsb
out
out
rorb
decl
mov
cmpl
pop
pop
jle
cld
ss
sarl
fsubrp
mov
out
xor
outsl
cli
and
mov
aam
sbb
rorb
int
mov
popf
rolb
dec
fstps
sti
add
repz
repnz
xchg
outsb
dec
repz
mov
cmc
and
sbb
js
sbb
jne
inc
test
lret
mov
push
cwtl
ret
xchg
cmpsl
movsb
sbb
fisubrl
popf
dec
sub
sub
sbb
mov
add
xchg
jb
pop
and
cli
inc
jo
fdivrp
lods
subl
pop
paddd
xlat
push
or
xchg
mov
jle
movsl
jnp
pop
cmp
into
xchg
add
dec
mov
xor
test
mov
std
mov
inc
shl
repz
adc
dec
adc
pushw
fs
inc
lds
or
push
sub
aas
arpl
cwtl
hlt
sahf
adc
ja,pt
lret
xlat
or
pop
sti
xchg
push
je
fdivr
mov
adc
inc
inc
xchg
clc
add
jg
jns
lcall
jp
std
mov
xchg
test
or
xchg
push
shll
sub
clc
arpl
test
movsb
into
bound
fdivrp
insb
icebp
xchg
pushf
push
xor
ret
inc
gs
lea
pop
push
rclb
xor
cmpsl
push
inc
fildll
inc
cli
pop
jbe
aam
add
xchg
jnp
les
xor
in
adc
mov
scas
daa
sahf
loope
adc
xor
xor
loopne
rcrl
jb
lods
pop
lock
xchg
jb
xor
push
pop
dec
iret
jnp
loop
sbb
imulb
mov
sub
test
mov
or
cmp
lds
xor
jb
cmpsl
inc
jl
jmp
and
int3
inc
arpl
sbb
ja
icebp
add
cmp
jp
loop
icebp
mov
push
test
or
mov
fnstenv
add
ljmp
push
jne
xor
pushf
inc
jns
jae
inc
jno
or
mov
jnp
test
test
mov
pop
push
sahf
int3
cmp
cmp
in
in
sbb
cmp
mov
cwtl
cmpsb
cli
test
sub
mov
sti
iret
or
add
mov
dec
push
jno
pop
xchg
shrl
xchg
xorl
jl
or
outsl
jo
test
jns
jae
pop
sub
add
je
adc
jmp
add
fadd
addr16
adc
sbb
push
jmp
in
cwtl
in
mov
mov
ret
lcall
or
addr16
imul
mov
push
cwtl
pop
cmc
push
je
rclb
jecxz
mov
xchg
das
aaa
adc
loopne
cmp
cld
push
dec
mov
sub
shrl
lods
int3
and
fnsave
lret
out
lret
pop
imul
or
xchg
xchg
cmp
imul
jle
pop
insl
mov
pop
lret
into
shrb
cmp
scas
cwtl
filds
outsl
jb
sbb
repz
push
sahf
and
mov
mov
lret
in
movsb
sub
adc
enter
ds
push
gs
push
mov
pusha
and
push
hlt
sbb
mov
dec
xchg
lret
pop
xchg
mov
test
shlb
jmp
into
mov
test
jno
pop
enter
pop
or
loope
jmp
mov
sbb
mov
sub
adc
test
fidivrl
lods
push
lock
sbb
sbb
lock
mov
pusha
daa
push
push
sub
fmuls
mov
xchg
dec
and
adc
int3
pop
sub
add
cwtl
mov
adc
cltd
jg
xlat
stos
xchg
daa
lock
ljmp
push
xlat
xor
test
gs
adc
fimuls
dec
push
sub
ret
pop
inc
pop
test
test
inc
pop
test
dec
dec
mov
ret
jne
cs
insl
pushf
aad
pop
int3
pop
cmp
mov
and
sub
aaa
and
xchg
ljmp
js
in
bound
les
xchg
jns
xchg
dec
inc
int
pusha
or
in
in
jb
xchg
add
and
inc
loop
inc
sbb
icebp
mov
in
js
es
mov
mov
test
sbb
cmp
jecxz
pop
lds
sbb
fistpll
in
xor
lock
adcb
stc
pop
stos
push
das
mov
xlat
sbb
xor
cmp
hlt
clc
push
adc
addr16
adc
and
call
xor
inc
loope
xchg
lret
aam
lds
ret
jbe
je
lds
jg
andb
mov
inc
dec
sub
add
enter
jle
inc
mov
jmp
adc
and
iret
xorl
push
orb
lea
cld
stc
pushf
sahf
mov
test
imul
mov
jmp
lea
cmp
jecxz
pop
pop
pop
adc
leave
adc
pop
in
enter
into
cmp
xchg
shrb
pushf
lret
jns
fiaddl
push
add
cmp
std
gs
xor
je
in
cld
aas
pop
sbb
lods
in
aam
insl
and
aaa
sti
jp
test
dec
ss
jmp
push
and
adc
nop
dec
add
pop
xor
fisubl
sub
mov
adc
jg
jmp
xchg
xor
pop
addr16
imul
test
outsl
or
xchg
les
shrl
xor
pop
cmp
daa
nop
xchg
test
sbb
inc
adc
ficoml
stos
outsb
xor
push
sbb
and
and
adc
fldcw
mov
fcmovnb
cld
inc
adc
scas
aam
sub
sbb
dec
push
loope
jnp
adc
jecxz
shlb
adc
mov
stos
shl
sub
jne
add
das
test
inc
gs
and
pop
std
sbb
divb
pop
insb
clc
add
push
add
pop
jne
sub
or
xor
and
xchg
inc
movsl
xchg
jmp
push
push
js
aam
call
clc
cltd
inc
dec
jle
adc
mov
cmc
sub
pushf
cmc
add
fisubrl
or
xor
jno
stos
out
dec
xor
xlat
mov
rcl
fdivp
push
rcrb
cld
test
mov
sub
dec
mov
push
cmp
out
mov
out
mov
imul
test
test
push
mov
xchg
arpl
dec
loope
xchg
inc
call
aad
dec
dec
lock
aas
mov
fistps
stc
sub
andl
outsl
sarb
sbb
movsb
test
jg
cli
xchg
in
xchg
popf
inc
ss
xor
stc
into
aaa
xchg
mov
dec
or
arpl
pop
orb
push
sub
add
lods
jnp
fs
je
xchg
sbb
sbb
repz
cwtl
sti
aas
mov
pop
dec
sub
jne
push
leave
scas
cld
loop
adc
xchg
inc
mov
push
inc
and
outsb
push
jb
in
fsubr
stos
pop
pusha
xlat
pop
or
loopne
xchg
mov
add
mov
int3
inc
adc
fdivrl
arpl
lret
arpl
lds
xchg
push
and
into
pusha
xorb
mov
enter
cmp
or
lods
or
mov
fwait
sbb
xchg
cwtl
shlb
xor
rcll
pop
scas
add
ja
shl
aam
cmp
fistps
dec
adc
data16
pop
mov
mov
ret
jecxz
lret
jbe
push
xor
cli
sahf
and
xlat
xlat
or
rorl
cmp
sti
mov
sahf
loope
pop
mov
cmp
pop
mov
fcmovbe
mov
cmpb
add
lret
cmp
or
cmp
cmp
sbb
xchg
jns
add
or
and
push
ss
pop
fs
xchg
ljmp
push
jno
or
ja
cmp
stos
jns
mov
xor
test
in
sbb
mov
int3
sub
and
je
xchg
loopne
mov
arpl
mov
in
aad
test
pop
movsb
mov
imul
sti
pop
and
dec
mov
pusha
cmpl
jo
and
dec
cmp
adc
in
shr
xor
outsb
clc
shl
test
jle
shll
bound
mov
out
and
std
mov
sarl
cmc
loopne
aaa
adc
insb
jb
mov
addb
xchg
sbb
aam
add
loope
or
xchg
fs
subl
jb
adc
push
lock
mov
pop
xchg
cmp
imul
mov
lret
mov
xchg
lea
push
dec
mov
mov
out
cli
jno
cmp
cli
cmp
jl
pop
aas
enter
jo
xchg
pop
push
int3
aam
mov
mov
jmp
lcall
push
cmp
sub
mov
jecxz
repnz
mov
jnp
push
fdivr
cmovg
cmp
mov
push
xor
scas
in
int
mov
repz
sbb
mov
dec
push
mov
clc
push
mov
adc
pop
test
shlb
rorl
add
inc
jns
cmp
pop
je
sbb
icebp
mov
push
mov
sarb
cli
mov
mov
daa
dec
jbe
cmp
fisttpl
fisttpl
sbb
js
outsb
xor
sbb
ret
int3
and
mov
sahf
hlt
sbb
and
xor
pop
sbb
inc
mov
mov
adc
mov
enter
dec
fs
leave
inc
fwait
adc
pop
pusha
mov
or
xorb
and
shr
mov
pushf
fisubrs
xor
push
aaa
lock
enter
mov
lcall
xchg
jmp
cli
aas
pop
mov
push
arpl
mov
push
push
dec
addr16
dec
and
xchg
int
lcall
or
out
lock
jae
pop
push
test
mov
sbb
insb
push
and
lret
fwait
pusha
jno
or
andl
pop
data16
loopne
loopne
mov
in
rclb
scas
xor
lock
cmpsl
adc
scas
or
pop
mov
jmp
mov
fldl
adc
cmp
add
jl
sarb
lahf
mov
ljmp
inc
movsb
jmp
test
adc
in
fmull
and
cs
out
jmp
pop
int
xor
adc
inc
jge
mov
add
dec
inc
jbe
fisttpl
in
mov
mov
push
movsl
jbe
fadd
jp
repz
call
inc
mov
std
inc
stc
lahf
and
test
jecxz
push
sbb
ficomps
addl
gs
iret
mov
dec
or
inc
cmp
jle
sub
movsb
loop
ret
es
ljmp
inc
or
jl
movsl
lret
dec
jp
mov
or
aaa
movsl
inc
inc
pop
fdivr
sub
xchg
mov
inc
fistl
daa
into
mov
hlt
push
loopne
inc
inc
jg
push
pop
rcll
sub
cmc
adc
dec
lock
pushf
gs
cmp
hlt
das
fwait
addr16
gs
mov
imul
repz
and
stc
rorl
dec
in
test
stos
inc
mov
adc
mov
mov
orb
xchg
jmp
adc
lahf
and
push
xor
je,pn
push
cmp
and
mov
insb
push
mov
dec
sbb
fsubl
inc
pop
push
adcl
shll
sbb
aaa
xchg
xchg
dec
sbb
mov
jns
pop
xchg
pop
out
popa
loopne
call
ret
pop
jae
mov
mov
xchg
adc
inc
cmpsb
lret
xchg
jnp
jb
repz
out
add
out
adc
cmp
notl
mov
mov
xchg
les
push
pop
sahf
out
mov
cmp
inc
test
arpl
call
subl
pop
mov
es
add
xchg
inc
cs
in
push
inc
fisubl
lcall
and
lahf
cmp
sub
jnp
inc
xlat
repnz
fldln2
es
add
xor
loop
xchg
shr
xor
dec
mov
cmp
push
dec
inc
out
inc
sub
jo
mov
sbb
mov
inc
push
sysexit
cmpsb
mov
cmp
xor
mov
pop
jb
push
rclb
adcl
add
sub
dec
or
lahf
or
xchg
mov
orb
dec
sub
jecxz
sbb
lock
stos
fsubrl
mov
add
and
push
add
iret
mov
decb
movsb
in
ja
ret
jmp
in
sub
cmp
pop
in
xchg
cmp
mov
cmc
loope
mov
das
fs
or
mov
cmp
rclb
adc
add
shl
mov
push
fisubl
sbb
push
jp
jb
imul
mov
add
pop
mov
cmp
nop
lret
mov
sbb
jp
push
cmc
push
loope
loopne
jecxz
aaa
enter
insl
dec
cmp
jns
scas
hlt
mov
inc
lret
pop
sub
leave
xchg
fdivrp
incb
bound
mov
cld
sarl
push
jnp
lock
jge
repz
push
jnp
fsubrl
stc
push
add
adc
faddl
fcoml
xchg
jo
mov
inc
xchg
jle
cwtl
pusha
imul
xchg
lods
dec
repnz
sub
cmp
movsb
andl
and
cmp
ss
int3
xchg
jne
je
ljmp
into
mov
pop
add
std
sub
mov
pop
cmpsl
cli
and
pop
xor
lock
out
mov
and
mov
or
aam
jg
mov
cmc
inc
stos
enter
jne
btcl
es
adc
push
das
mov
bound
popa
scas
adc
mov
xchg
sub
iret
sbb
mov
mov
shl
out
sahf
pop
pushf
icebp
movsl
in
and
mov
jle
iret
xor
imul
stc
ret
in
jnp
cli
rcr
pushf
popa
add
jmp
rorb
scas
jbe
inc
out
or
dec
loope
mov
jp
and
stos
loopne
or
rolb
cmp
mov
scas
inc
jl
ret
ss
jne
xchg
flds
sahf
xchg
inc
sar
or
sbb
adcl
jg
nop
adc
movsb
jo
mov
xchg
xchg
repnz
pop
cmc
ret
pop
xchg
sub
das
sub
and
in
dec
add
std
add
popw
push
daa
sti
andb
dec
lret
xchg
jge
push
out
lods
adc
push
lret
mov
fwait
add
call
xchg
shrb
mov
and
pop
mov
test
sub
test
aas
shrl
push
push
mov
cmp
xchg
sahf
push
sub
test
fidivrs
arpl
out
mov
fidivl
pop
xor
fiadds
cmp
push
mov
jmp
shll
inc
mov
pop
sub
out
push
scas
jns
push
in
imul
fldcw
dec
sub
xor
fstps
fstpl
stos
mov
stos
gs
sub
lds
mov
jecxz
sbb
add
jmp
test
ljmp
stc
in
jecxz
clc
fistpll
inc
cmp
mov
adc
cmovs
adc
cmp
mov
jp
je
pop
out
ret
ds
add
push
or
push
data16
popa
cltd
jbe
jmp
sub
sub
push
adc
xorb
jmp
fdivs
inc
repz
mov
pop
push
lret
rclb
jbe
jae
and
nop
out
sub
sar
out
clc
decb
xor
xchg
imul
sub
dec
or
sti
sahf
daa
dec
jle
jno
ljmp
fwait
push
std
mov
adc
xchg
push
jg
stos
mov
inc
clc
push
pop
or
mov
outsb
loope
dec
mov
popa
mov
ret
out
fistpll
adc
bound
pusha
scas
add
into
dec
ljmp
dec
jmp
dec
sbb
pop
push
dec
repz
xchg
daa
fisubs
inc
shlb
push
lret
xor
cmp
jb
mov
cmp
push
mov
push
mov
mov
mov
nop
push
loop
dec
insb
jno
and
add
loopne
dec
mov
test
movsl
jae
int
dec
or
hlt
loope
push
fs
mov
adc
popa
xor
iret
sar
fs
pop
mov
mov
adc
sbb
stos
cmpsl
pop
push
mov
mov
scas
cmpsb
mov
mov
shrl
mov
int
mov
pushf
xchg
xlat
ljmp
and
mov
pushf
lret
outsb
cmc
aad
addr16
mov
sti
in
pop
cwtl
mov
and
shlb
sub
sub
rol
inc
xchg
mov
adc
mov
lea
jmp
fcoms
ror
inc
inc
adc
sbb
or
mov
jg
pop
jae
mul
in
xchg
aaa
aad
jle
mov
mov
and
push
leave
lcall
aaa
sbb
pop
lahf
push
dec
add
pop
sub
jae
popf
in
iret
pop
xor
lahf
inc
sub
adc
addr16
test
push
fldenv
aad
jecxz
adc
fsubrs
mov
mov
cmpsl
sbb
std
or
ret
and
sub
jmp
mov
push
jnp
mov
push
mov
or
shrl
inc
iret
rcrl
sbbl
fxtract
xchg
push
cli
xor
adc
stos
dec
cs
cld
lods
xchg
push
adc
insb
ret
out
add
inc
and
cmp
mov
mov
bound
adc
pmaddwd
rorb
cmpsl
fwait
test
loopne
add
cmp
repz
mov
sbb
jnp
loope
xorb
push
xor
jno
enter
inc
js
jbe
mov
mov
inc
or
xor
xor
jbe
jl
push
lods
ljmp
mov
arpl
mov
xchg
pop
push
lcall
pop
lods
sbb
int3
dec
addb
mov
push
or
and
data16
ret
pop
loop
push
xchg
and
add
pop
stos
lods
lods
lods
repnz
and
ljmp
testb
xor
out
mov
nop
fsubrs
cs
pop
adc
mov
sbb
xchg
adc
pop
jno
hlt
inc
push
jnp
mov
imul
jns
pop
sti
aas
inc
jge,pt
add
xor
shlb
stc
cwtl
js
fdivrs
cmp
mov
inc
mov
and
inc
cmp
in
push
js
insl
cmc
popa
cmp
pop
cmpsl
or
xor
popf
aas
inc
clc
jge
out
or
push
or
sbb
movsl
and
imulb
mov
or
and
test
fdiv
or
movsb
es
das
xchg
adc
xor
std
add
push
adc
out
inc
in
xchg
ret
data16
call
xchg
std
in
mov
out
pop
out
in
sti
adc
lods
loope
repz
pop
xchg
daa
jo
pop
add
mov
pop
push
jae
ljmp
es
out
jp
jge
cmp
jne
sbb
jmp
scas
mov
cmc
xlat
inc
bound
mov
and
js
mov
pop
fidivl
fucom
xchg
and
sub
fsubl
or
inc
mov
sub
dec
sti
adc
xor
mov
out
mov
fcmovnbe
sbb
pop
cmp
aad
divb
mov
fwait
pushf
sbb
jne
cli
mov
shlb
insl
inc
out
cmp
rclb
push
pop
xchg
addr16
add
cmp
mov
test
jbe
or
mov
jno
bound
dec
mov
stos
loop
sbb
cli
mov
imul
fwait
or
pop
scas
sahf
testb
inc
or
mov
aam
inc
sbbb
lret
mov
cmp
sub
push
clc
mov
add
cmc
push
mov
imul
cmp
xlat
xchg
test
xchg
jp
cmp
jbe
lods
das
push
ds
mov
repnz
mov
inc
xor
insb
lods
push
dec
and
repnz
jnp
js
cli
mov
call
mov
adc
sub
lea
call
xchg
je
call
dec
les
add
mov
push
fdiv
adc
int3
sahf
in
jecxz
push
in
test
js
testb
mov
sub
adc
jbe
imul
outsl
jle
or
scas
mov
cld
dec
popf
and
jne
xchg
or
jae
imul
sahf
mov
arpl
fnsave
js
test
outsb
and
mov
xor
sbb
push
lret
add
lcall
sbb
js
push
gs
push
push
jne
xchg
shr
test
insl
inc
rcrl
repnz
jle
xor
lods
sbb
xchg
leave
arpl
jecxz
repz
cmp
push
and
pop
lock
mov
xor
imul
cmpsl
jg,pt
mov
call
jge
cli
inc
lock
jo
xor
dec
sbb
and
pop
push
shl
mov
dec
xchg
call
jg
into
out
sbb
dec
out
ja
lcall
inc
sbb
dec
mov
dec
mov
add
pusha
adc
cltd
data16
data16
ds
lods
pop
mov
mov
into
stc
lcall
inc
cmp
jae
mov
jns
jb
test
scas
loope
mov
lods
shlb
ja
ss
pop
xor
dec
sarb
push
inc
mov
sbb
rcll
xchg
je
cmpsb
mov
adcb
imul
aad
mov
mov
mov
mov
inc
inc
dec
mov
loop
shll
sbb
fmull
xchg
or
sbb
mov
jb
lret
in
xchg
xlat
test
or
cli
sarb
cltd
dec
rorl
pushf
add
in
fsubp
jo
lret
ss
fs
dec
mov
mov
std
idivb
fnstsw
push
fiaddl
ja
pushf
jb
xchg
push
mov
push
adc
sahf
mov
pop
adcb
xor
sub
xchg
add
popf
xchg
mov
gs
jb
dec
jns
or
pop
cmc
into
in
pop
adc
xchg
adc
mov
rcll
or
push
and
inc
inc
inc
mov
shll
orb
adc
in
js
mov
out
int
cwtl
dec
xlat
ljmp
jl
or
cli
shld
mov
ret
scas
mov
popa
xchg
jg
mov
jo
push
lcall
lahf
adc
negb
mov
jnp
dec
mov
out
mov
jbe
aad
outsl
xchg
add
push
mov
pop
cmc
push
lock
push
xor
mov
push
cwtl
sahf
pop
cmp
dec
jae
push
pushf
in
jle
xor
xchg
inc
push
and
in
rorb
mov
dec
xor
stos
sub
testb
dec
inc
sub
mov
and
jno
xchg
push
test
inc
mov
xchg
mov
mov
add
shlb
push
cmp
pop
xor
leave
sub
add
daa
inc
and
push
push
jecxz
insl
mov
std
xor
js
mov
das
jmp
movsb
add
inc
test
data16
sub
int3
dec
mov
in
imul
mov
add
mov
fs
dec
and
cmpsb
push
xchg
adc
pop
mov
outsl
mov
jne
int
mov
sbb
imul
shll
popa
mov
inc
out
push
jno
sub
or
fimuls
push
pusha
xor
popf
lahf
out
lods
jns
xchg
pop
inc
int3
out
dec
jge
cmpsl
push
cmpsl
mov
cmpl
enter
and
and
fildll
dec
sbb
aas
xchg
adc
mov
inc
and
iret
xor
mov
cld
loope
pop
inc
repnz
imul
sub
loope
inc
adcb
mov
sbb
mov
add
addr16
lods
xor
xchg
arpl
leave
xor
add
push
lock
jne
inc
mov
sub
and
push
shrl
inc
dec
or
add
sbb
jae
and
dec
cmp
or
rorb
pop
sbb
lcall
arpl
push
loopne
sub
xchg
or
or
inc
adc
xor
pop
xchg
int
push
dec
mov
jbe
daa
aas
gs
subb
dec
pop
jle
xchg
rcrl
addr16
test
add
es
es
test
sub
sub
push
jae
and
test
lahf
push
cltd
icebp
fstpt
fildll
inc
mov
stc
push
jg
movsb
add
and
popf
mov
adc
cmp
ss
mov
or
cmp
jge
pop
cmp
fs
rolb
les
test
scas
insl
movsb
or
sub
xor
int3
je
pop
dec
mov
and
push
cld
ds
imul
xor
mov
or
add
shrb
mov
add
pop
or
out
jmp
lock
fildl
sarb
jbe
adc
pop
sbb
mov
mov
andps
push
pop
xchg
mov
add
jno
sub
sbb
xchg
scas
jns
and
aas
cmp
aaa
lcall
add
aad
xchg
in
jb,pn
sbb
cltd
out
out
mov
fisubl
jmp
mov
aad
push
out
mov
mov
or
bound
mov
dec
mov
test
or
lahf
jmp
cltd
loopne
mov
int3
push
mov
aas
sbb
and
xor
das
sbb
mov
out
push
stos
push
dec
jmp
sub
lods
xchg
sbb
inc
jmp
add
sarb
push
es
repnz
dec
into
add
cmp
icebp
mov
jg
cltd
add
sbb
pop
and
jg
lcall
inc
sahf
or
xchg
or
adc
mov
les
leave
es
pop
repz
and
ljmp
inc
jecxz
and
dec
out
push
popa
loop
out
icebp
and
ret
mov
or
and
scas
adc
cmp
or
mov
es
jmp
sti
push
std
sub
add
xchg
mov
lahf
mov
sbb
repz
sub
add
xor
cmp
or
fstpl
test
cli
arpl
dec
inc
out
cmc
and
jnp,pn
clc
pop
fidivrs
andl
mov
lods
popf
jbe
pop
ss
nop
add
dec
dec
push
lea
daa
roll
xchg
das
and
dec
jmp
daa
ljmp
cs
and
ja
in
pop
arpl
movsb
popa
arpl
daa
dec
xor
je
add
insb
cmp
bound
push
fdiv
fmull
xor
mov
shrl
cld
mov
cli
out
sub
push
add
sbb
std
imul
jne
mov
popa
lock
push
pop
or
frstor
jno
sti
cmp
xor
adc
fs
mov
in
aas
movsb
jb
jge
cmpsb
test
xchg
lahf
xchg
or
cld
xchg
dec
and
sbbb
sub
mov
popf
mov
sub
popa
push
inc
movsl
pop
xchg
pop
stc
mov
gs
shrb
rorb
das
cs
fdivrs
cld
aad
repz
incb
ljmp
ss
inc
jb
loop
pop
xor
pushf
push
sub
frstor
xchg
stos
add
xchg
in
shl
movsl
and
js
in
and
enter
jnp
or
adc
sahf
movsl
inc
or
adc
popf
jl
les
js
and
or
clc
scas
or
lock
xorb
in
dec
mov
in
shll
sbb
stc
lds
push
not
inc
outsb
cmp
shr
push
scas
mov
es
inc
xchg
adc
popa
pop
jge
mov
adc
lea
movsb
jp
mov
sub
ds
push
jb
push
in
mov
push
lds
xchg
sub
jmp
in
ja
imul
adc
imulb
and
ds
cmc
xlat
mov
ss
dec
call
push
cmpl
cmp
mov
in
jnp
scas
mov
test
adc
popf
stos
jne
jo
adc
or
cmp
out
out
xor
pop
fimull
adc
dec
loop
mov
leave
jle
pop
popa
into
push
pusha
adcb
mov
loopne
pop
bound
loopne
sub
inc
shlb
push
int
mull
jo
pop
scas
movsb
and
sbb
sub
xor
inc
pop
cmpsl
cltd
movsb
xchg
push
add
pop
mov
mov
dec
orb
push
fwait
adc
mov
orl
cmpsb
sti
dec
jo
sub
mov
hlt
jb
insl
nop
ljmp
int3
xchg
stc
mov
mov
pop
rcrl
adc
adc
lock
fwait
xchg
xor
mov
sbb
inc
sbb
mov
fcoml
mov
sbb
aas
mov
mov
mov
stc
out
in
mov
clc
lret
stos
sahf
cmp
hlt
push
add
jns
aaa
and
mov
push
push
movsb
mov
clc
inc
cmpps
jecxz
es
rcrb
pop
push
jne
adc
sub
fcoml
std
inc
push
fwait
push
int
inc
add
mov
inc
pop
popf
dec
test
pop
mov
dec
mov
mov
mov
adc
dec
pop
shlb
stc
pop
jns
or
movl
aam
dec
daa
add
cld
das
lds
test
fimull
lock
test
das
repz
inc
test
or
push
push
adc
aam
mov
mov
jo
xchg
adc
out
ret
fdivl
mov
sub
bound
push
mov
mov
out
std
mov
xchg
leave
loop
mov
pop
pop
ret
or
dec
pusha
aaa
mov
and
scas
adc
sahf
mov
xchg
mov
sbb
scas
jae
mov
add
inc
and
das
std
xchg
or
cwtl
inc
hlt
cmc
xlat
mov
fs
push
ss
sahf
fbld
cs
xor
cmp
xlat
fwait
ret
xor
rcrl
and
stc
jno
scas
cmp
cmp
dec
pop
xchg
mov
sub
and
pop
xchg
cltd
xorl
push
enter
lea
out
push
dec
sub
add
imul
pop
loope
ljmp
push
cmp
sub
ret
sti
sub
lcall
sar
and
xor
inc
mov
dec
stos
ss
addr16
repz
mov
sbb
scas
and
aaa
hlt
push
push
and
pushl
sub
xor
jmp
mov
insl
cmp
xchg
dec
push
fs
pop
call
ds
push
mov
stc
repz
adc
xchg
out
pop
dec
mov
jge
in
inc
mov
push
mov
push
adc
jl
lods
or
cmp
sahf
push
push
fsubl
icebp
lahf
xor
jle
cwtl
add
lock
fimuls
loope
fimuls
and
push
or
or
int
push
pop
int3
xchg
jnp
loop
sub
orb
in
mov
fs
and
dec
or
sti
dec
pop
outsl
mov
fimuls
add
inc
add
pop
inc
or
sub
adc
into
inc
add
cli
push
out
call
or
push
arpl
xchg
incb
pusha
insb
mov
loope
pop
int3
ret
sbb
push
mov
fildl
mov
insb
imul
mov
leave
lock
sbb
dec
xchg
inc
cmc
pushf
scas
add
mov
pop
mov
out
and
pop
jb
mov
dec
push
or
adc
sub
cmpsl
sub
loop
push
sarb
and
mov
sarl
leave
inc
js
out
cltd
ss
out
int3
ds
xchg
hlt
js
sub
add
rcll
or
mov
push
loope
test
rcll
iret
cltd
adc
cmp
negl
dec
or
mov
mov
loopne
push
pop
xchg
xchg
fsubl
jg
aas
aaa
jmp
fs
rclb
sub
ss
sbb
or
mov
xor
out
push
mov
jp
iret
movsb
cld
push
and
sti
loop
adc
inc
sbb
mov
dec
pop
dec
mov
xor
data16
lahf
cmpsb
ds
xchg
fstl
aam
imul
inc
into
cmp
movl
push
push
push
lret
outsb
lods
xor
push
iret
push
pop
out
pusha
xor
push
push
mov
mov
scas
sub
gs
cmp
enter
dec
push
das
inc
lods
fdivr
push
test
fstpl
push
pop
or
cmpb
stos
push
lahf
rcll
sbb
cmpsb
or
out
jmp
cmp
bnd
push
fnstcw
adc
mov
pop
inc
and
test
pop
mov
pop
mov
repz
pop
dec
leave
cmp
push
pop
xor
mov
mov
fildll
or
pop
sub
and
cmp
mov
ja
arpl
in
loope
xor
int
cmp
imul
sub
sti
pop
icebp
push
aaa
jp
push
jecxz
out
adc
push
mov
dec
mov
aad
jp
push
push
sbb
das
xor
jmp
add
or
daa
jnp
add
sbb
jp
fs
int
dec
dec
xor
cmc
add
push
nop
pop
mov
stc
xor
loopne
mov
movsb
adc
and
test
push
xchg
jae
imul
fnstcw
jne
and
or
pusha
fdivrs
mov
jne
call
sbb
pop
in
cld
ret
mulb
rclb
aad
leave
mov
mov
stos
cltd
jne
jnp
xchg
mov
movl
xchg
sub
hlt
dec
inc
rolb
outsl
mov
fcomi
rorl
fs
arpl
mov
andl
xchg
mov
pop
dec
push
hlt
lea
stos
inc
fwait
cmp
sbb
lock
shll
push
data16
mov
ret
inc
mov
xor
and
push
loope
xchg
sbb
data16
mov
xlat
rcrb
es
flds
fsubr
ret
out
leave
inc
jne
sub
enter
sub
adc
mov
testb
aad
jno
addr16
xchg
mov
sbb
fildll
jne
sbb
push
sti
sub
mov
push
mov
mov
mov
les
inc
add
mov
or
std
xchg
sbb
loop
jge
cltd
addb
push
test
mov
pop
add
pushf
imul
jb
pop
mov
shll
bound
push
sahf
cld
push
leave
cmp
jmp
lahf
into
dec
mov
cmp
sub
mov
push
mov
out
imul
jno
pushf
cwtl
leave
les
roll
mov
cld
aas
jl
sahf
dec
subb
sbb
fnstcw
outsl
mov
sub
or
mov
jnp,pn
arpl
arpl
insb
lcall
mov
mov
loope
popa
or
cs
cmp
jns
out
mov
mov
adc
arpl
xor
in
or
mov
mov
ss
pop
inc
outsl
sbb
fidivs
jmp
push
xchg
addr16
xchg
es
movsb
insb
out
mov
sub
push
xor
pop
cmpsl
xchg
jg
lds
cmp
test
add
lods
hlt
lods
pop
mov
scas
push
ljmp
mov
and
xor
int3
pop
jbe
int
pop
data16
jae
sub
mov
xlat
pop
bound
and
call
aad
jg
repnz
dec
imul
popf
scas
xor
jl
xchg
into
xchg
lock
xor
push
rolb
pusha
lods
xchg
inc
mov
std
dec
stos
scas
cltd
cld
pop
std
sub
sub
std
enter
mov
stos
xorl
fs
stos
or
ss
mov
and
faddl
xchg
fildll
daa
shll
adc
pop
adc
pop
pop
aas
dec
leave
sub
test
pop
dec
jnp
dec
bound
outsl
push
jmp
lret
dec
inc
scas
push
ret
in
pop
or
cmpsl
jp
inc
mov
dec
insb
stos
mov
outsb
pop
xchg
jo
xlat
std
dec
dec
lcall
sbb
rorb
cmc
sarl
rcrl
cmp
popa
popf
mov
cmp
pop
lcall
and
pop
int3
adc
ficoml
push
xchg
push
cwtl
sbb
jg
inc
sub
out
xchg
mov
sub
rorb
mov
xchg
cld
pop
or
je
mov
arpl
or
and
mov
int
push
xor
push
jb
pushaw
mov
push
data16
mov
rclb
sbb
shl
gs
xlat
add
push
outsl
sbb
sbb
adc
cld
into
sarl
les
and
lods
add
mov
sbb
das
add
mov
int3
mov
push
nop
inc
das
adc
push
jnp
or
xchg
fnstcw
movb
pop
cmp
repz
mul
pop
fwait
adc
add
inc
mov
jno
rclb
out
add
je
pop
gs
xchg
xchg
test
lahf
insb
cmpsl
cltd
sub
inc
xchg
push
dec
scas
mov
cwtl
cwtl
fsubl
sahf
dec
aam
pop
daa
push
rolb
inc
es
sub
popa
mov
cmp
xchg
mov
cmp
rcll
xlat
fnsave
repnz
imul
and
imul
out
iret
xchg
cs
lret
ss
dec
jge
sahf
loop
push
fwait
clc
int
inc
mov
leave
cmpsl
pop
fwait
shlb
push
jno
xlat
lds
mov
adc
mov
cmp
sti
mov
push
bound
or
mov
sub
popa
push
inc
xor
push
iret
adc
std
lret
add
imul
inc
push
sub
lods
es
sub
cmp
repz
mov
cli
jnp
shll
hlt
lods
adc
inc
and
call
push
lea
mov
xor
lock
mov
ds
nop
shrb
add
inc
pop
lahf
sub
cmp
fwait
xor
jae
mov
and
pusha
xchg
mov
out
mull
mov
adc
push
inc
aas
mov
xchg
loopne
xor
jmp
cmp
mov
cmpsl
cltd
jmp
dec
mov
pop
sub
movsl
ficompl
inc
cmp
mov
fcoml
int3
imul
aam
stos
push
push
mov
mov
in
and
pop
testb
sbb
fisttps
aad
push
xchg
pop
fisttps
dec
sub
clc
dec
inc
aad
stos
das
sub
mov
pop
loope
scas
cmp
clc
lods
cmp
push
outsb
add
cmp
push
shlb
data16
cmp
push
int
pop
mov
out
mov
sub
loope
scas
and
add
scas
cmp
shl
inc
adcl
jle
dec
nop
in
out
ds
pushl
adc
js
out
arpl
xchg
cmp
add
mov
xchg
popa
xchg
test
jbe
cmp
xchg
sar
add
sbb
out
adc
pop
mov
mul
loope
mov
mov
dec
test
sbb
movsb
cmc
push
stos
cmp
xlat
sbb
jl
data16
and
adc
iret
fcmovb
mov
mov
pop
dec
ja
push
imul
scas
xchg
sbb
fwait
mul
dec
and
fs
pop
nop
add
addr16
jecxz
xor
mov
inc
jge
mov
icebp
jge
outsb
xchg
ljmp
mov
das
fsubs
jne
stos
adc
es
loopne
mov
mov
mov
push
sarl
pop
outsl
and
xchg
dec
mov
pop
inc
jnp
inc
out
sub
in
push
movsb
das
jmp
dec
lret
push
add
fimuls
mov
adc
ret
nop
and
les
inc
sbbl
or
cwtl
in
addl
xor
cld
dec
arpl
push
fimuls
mov
sub
loope
into
pushf
push
jle
or
aad
mov
sbb
inc
mov
dec
lock
or
add
jg
mov
test
cmp
outsl
cmpsl
lret
out
push
repnz
mov
ret
hlt
shrl
shll
std
aas
xor
and
add
icebp
or
outsl
fldcw
aam
sub
adc
xchg
mov
js
lods
enter
rcrl
jae
stos
jnp
mov
std
ffreep
cltd
repnz
adc
xor
push
ret
ret
mov
mov
pop
ss
pop
push
pop
xchg
push
enter
divb
jecxz
daa
ss
loopne
mov
jne
xlat
xchg
push
adc
jl
jmp
push
or
xbegin
je
add
jp
mov
ja
pop
clc
xchg
lock
xlat
sbb
pop
int
xchg
pop
pop
insl
inc
pop
pop
pusha
cwtl
add
cmpsl
lods
mov
sti
add
aaa
jne
add
in
xchg
mov
jb
test
fmuls
adc
push
cmpsl
push
inc
and
dec
push
lds
lods
shlb
rorb
cmp
loope
or
sbb
imul
push
sahf
sbbl
pushf
jl
loop
addr16
scas
xchg
rol
in
sub
xor
cmc
test
jno
mov
jge
clc
xchg
add
mov
mov
sub
inc
mov
sbb
xor
insb
lret
sbb
mov
dec
jmp
sti
aaa
mov
lock
data16
div
js
jmp
pop
insb
jbe
iret
aaa
orb
mov
pop
cmc
adc
and
lahf
adc
or
jbe
fsubrp
sbb
sub
sub
cld
fiaddl
push
lock
and
out
pop
sbb
jge
fwait
lods
popf
add
mov
sbbl
jl
xchg
dec
repz
push
add
stos
add
dec
mov
mov
cmpsl
sti
mov
adc
mov
test
or
push
lock
arpl
enter
or
imul
jmp
xchg
mov
jge
out
int3
out
test
xchg
and
icebp
inc
les
mov
sbb
jecxz
fistpl
xor
lock
addr16
sbb
pop
mov
adc
add
in
sarb
fucomip
aaa
test
mov
mov
dec
sbb
and
pop
enter
push
imul
or
enter
nop
or
mov
push
fisubl
testb
cmp
pop
popa
je
push
sbb
int3
adcl
cmpb
pop
and
mov
adc
addr16
shrl
push
lahf
cmp
out
hlt
cltd
pop
jecxz
xchg
fwait
addl
jge
dec
dec
pop
mov
xor
cmpsb
xor
loop
dec
imul
adc
jge
pop
out
mov
ds
in
inc
daa
or
pusha
jmp
aam
push
dec
pop
jl
nop
movsl
inc
lret
xchg
mov
outsl
shl
adc
in
std
jl
jecxz
sub
push
pop
dec
rcrl
jo
inc
into
push
addl
cmp
lcall
call
lods
fucom
scas
cmpsl
movsl
cmc
or
mov
stos
sti
call
iret
mov
jnp
sbb
or
dec
jne
incl
lds
add
clc
jo
aad
ds
shlb
loop
rcrl
cltd
loope
insl
fmul
fdivr
inc
loopne
fsubrp
xlat
mul
adc
mov
rolb
dec
xor
imul
addb
adc
in
pop
inc
clc
adc
adc
fcomip
fwait
xchg
aas
cmp
adc
jo
inc
sub
jle
arpl
mov
lret
in
repz
aas
aaa
sub
popf
jae
xchg
mov
test
mov
xchg
cmc
adcb
or
or
loopne
xorl
lea
mov
pop
push
scas
mov
jecxz
pop
push
mov
adc
add
mov
dec
or
mov
fadds
int3
popf
jge
popf
test
xchg
push
mov
in
arpl
cwtl
insb
repnz
or
lahf
sub
adc
int3
int3
push
rcll
iret
leave
inc
sbb
mov
mov
inc
loope
loope
jecxz
and
lods
xorb
loop
mov
stos
lret
fisttpl
pop
fcompl
sbb
in
aam
aaa
mov
sbb
xchg
int3
cmp
in
adc
mov
cwtl
fistpll
iret
xchg
mov
jns
imul
imul
mov
inc
cmp
ja
shlb
xor
movsb
loop
jge
sbb
adc
xor
cltd
ds
cmp
int3
popf
xor
mov
lcall
and
adc
mov
call
xlat
xchg
ja
xchg
xchg
add
repnz
jg
jmp
std
mov
mov
test
jno,pn
mov
inc
stc
sbb
jae
xor
in
pop
leave
pushf
inc
std
mov
sbb
adc
add
subb
cwtl
push
pop
out
int3
pushf
push
xchg
cmp
loope
pop
jecxz
xchg
inc
mov
xchg
frstor
arpl
xor
adcb
mov
pusha
data16
popf
inc
pop
inc
inc
stos
cmp
or
pop
out
popf
dec
std
clc
inc
aad
xor
add
adc
mov
mov
push
sahf
push
in
shlb
jp
push
pop
in
shr
int
adc
inc
jb
ret
xlat
mov
or
popa
jp
pop
jl
pop
add
fdivl
push
push
lods
in
adc
inc
fisttpl
mov
mov
test
lahf
jae
enter
dec
aaa
jg
jge
repz
xchg
stos
pop
push
push
pop
push
push
push
add
xor
xlat
adc
fistps
cmpsb
jb
stos
sbb
mov
pop
jmp
adcl
sub
cmp
mov
dec
outsb
hlt
sub
fildl
int3
cmpl
inc
test
and
or
sub
push
xcrypt-ofb
cmpsl
sub
xchg
or
push
sub
mov
xor
insb
dec
cmp
out
push
push
jnp
jge
mov
mov
push
sbb
pop
or
adc
in
pop
fldt
out
lods
push
pusha
mov
rcll
jb
jl
push
cwtl
push
movsl
and
or
mov
cmpsl
frstor
mov
insb
jmp
pop
sbb
dec
pushl
mov
addl
sub
les
lds
int
and
cmp
arpl
es
mov
sub
sub
mov
push
mov
aas
add
enter
xor
jp
mov
loope
fiadds
imul
adc
iret
das
gs
jno
sarl
sub
les
iret
je
arpl
idivb
pop
test
xchg
dec
dec
movl
imul
aam
orb
cmc
mov
clc
daa
lock
cmc
ret
xor
out
aaa
es
and
sub
cld
adc
sbb
lea
enter
jecxz
scas
mov
push
dec
imul
lret
lcall
inc
xchg
mov
clc
add
lret
call
imul
mov
lods
and
daa
mov
outsb
lret
std
movsb
or
ret
dec
aas
notb
xchg
dec
inc
scas
cmpsb
mov
cld
scas
mov
push
fdivs
xlat
adc
xchg
rcll
orb
bnd
lret
pop
adc
mov
cli
jl
sahf
xchg
mov
sbb
or
adc
add
push
lret
icebp
in
fimuls
imul
andl
cmp
outsl
xchg
push
stos
lods
push
or
pusha
lods
add
cltd
je
xor
aas
stos
and
sub
int3
mov
xchg
adc
and
mov
jno
icebp
je
jns
dec
test
adc
fwait
arpl
jle
dec
fstp
out
arpl
sbb
outsl
sarl
ret
popa
pop
push
cmpsl
sbb
jne
sbb
nop
pop
and
call
dec
popa
or
sbb
stc
test
or
cmp
mov
ss
js
push
mov
scas
scas
cmp
xor
or
xchg
and
jg
mov
scas
sub
jge
dec
jae
lret
or
adc
adc
test
cmc
out
test
nop
or
test
aas
inc
popf
notb
mov
into
sbb
add
xchg
lock
inc
clc
lock
gs
gs
sub
jnp
mov
and
add
cli
dec
add
mov
jl
push
or
sbb
push
pop
rolb
aam
add
outsb
pop
jb
gs
dec
or
xchg
and
add
ss
mov
inc
ss
mov
cmp
or
mov
sub
xor
add
or
popa
xor
jo
push
sti
adc
outsb
addr16
xchg
jbe
movsl
jnp
lret
add
neg
jg
leave
fwait
and
jnp
dec
loopne
add
push
or
or
jecxz
adc
shrb
mov
int3
cmp
jns
aas
push
cltd
lods
sub
lret
sbb
jp
jl
bnd
lock
sbb
adc
rorb
iret
adc
fdivrs
sub
in
push
push
sub
adc
call
js
pop
mov
jmp
lret
imul
xchg
jl
shrl
in
or
stos
out
and
mov
test
call
inc
pop
pop
sbb
sbb
and
std
push
leave
enter
ljmp
leave
push
out
pop
sub
pop
out
push
cmc
adc
jmp
mov
in
push
sub
aaa
xor
jge
mov
in
xchg
cmp
int3
fcmovb
xor
mov
sti
leave
push
outsb
cmp
adc
mov
inc
xor
jnp
popa
and
rorb
sahf
jmp
jecxz
test
jae
rcll
fdivrp
mov
test
xlat
add
jb
fwait
aam
mov
sub
dec
add
int
lret
inc
lds
cmpsb
ucomiss
mov
fdivrl
adc
arpl
popf
lret
pop
popa
mov
xor
imul
pop
and
fsubs
sub
enter
xchg
dec
movsl
push
or
push
inc
xchg
and
sbb
dec
cmp
jle
arpl
and
or
mov
pushf
sar
movsb
int
mov
mov
in
push
inc
jl
int
add
insb
std
sub
data16
adc
aas
fldcw
mov
jmp
dec
and
ss
pop
dec
and
adc
or
xchg
mov
mov
mov
adc
mov
imul
adc
xchg
mov
xchg
sub
data16
sbb
dec
push
pop
cmpsl
fs
pusha
add
in
jp
push
lss
mov
out
inc
push
mov
daa
xchg
repz
adc
imul
stos
repz
xchg
call
sahf
lods
out
or
arpl
fimuls
mov
aam
sahf
sub
gs
insb
xor
ljmp
loope
filds
fcoml
push
lret
pop
and
jg
repnz
mov
mov
pushf
enter
fidivs
sbb
xchg
xchg
ja
in
in
pop
cwtl
jbe
fsubrs
pushf
int
mov
lods
or
mov
ds
xchg
xor
imul
pop
arpl
dec
xchg
cmp
pop
push
xor
mov
out
lcall
cwtl
scas
repnz
pop
or
jge
es
lea
fbstp
cmp
push
mov
xchg
jle
dec
jne
rcll
fwait
scas
sub
loopne
aaa
cli
mov
out
mov
jae
dec
subb
cmp
cmc
popf
dec
stc
mov
popa
sub
fstpl
movsb
roll
fists
mov
test
or
pop
xchg
mov
push
push
inc
mov
xorl
and
mov
sbb
rcll
xor
and
shlb
sar
inc
imul
and
aam
add
xor
leave
or
inc
mov
add
notb
mov
mov
lock
adc
rolb
call
mov
jge
xchg
add
loop
sti
pop
lret
mov
sub
cmpsl
inc
call
fwait
and
xor
jno
inc
scas
mov
ss
lock
sbb
jl
or
xchg
xor
add
outsb
pop
ljmp
mov
sub
or
inc
in
orb
imul
push
test
mov
or
fidivrl
mov
mov
or
mov
imul
inc
xchg
adc
mov
mov
ds
std
loope
adc
popf
jle
shll
or
cltd
xchg
lds
or
sbb
sub
js
add
cmp
pop
cmpsl
mov
fstpl
sbb
stc
aaa
fisubl
cmpsb
mov
lock
jne
in
pop
ja
inc
pusha
lret
fdivrl
test
dec
jbe
icebp
and
sub
imul
mov
xchg
subl
pusha
movb
fiaddl
sti
jnp
fsts
daa
cmp
and
pop
push
fdivp
cmp
fwait
and
jmp
inc
lods
sbb
xchg
xchg
inc
xor
loop
inc
push
dec
and
xor
pop
in
dec
dec
fsubs
out
mov
jge
add
in
inc
rol
loopne
sbb
sti
out
push
inc
jp
push
xchg
ds
xchg
out
and
lods
notb
jnp
insl
mov
mov
cli
call
in
pusha
xor
cli
mov
les
repnz
add
fwait
dec
sub
mov
mov
repnz
leave
pmovmskb
fcomps
mov
leave
icebp
cmc
cmp
cmp
push
jnp
leave
mov
jl
cmp
push
sub
lock
mov
loopne
fnstenv
and
lods
shlb
aad
xor
pop
jnp
xchg
pop
jp
pop
ja
inc
mov
and
sub
flds
fdivl
ret
jge
cmpsb
xor
xchg
mov
jae
xchg
add
add
dec
bound
in
fisubrl
popa
mov
jne
icebp
sub
ss
cltd
aad
hlt
adc
jp
and
pop
sub
jae
xor
jno
pop
dec
jne
out
pop
data16
inc
mov
mov
lea
jmp
insl
xchg
cmp
seta
fcompl
inc
push
jecxz
popa
fidivrl
daa
xchg
sbb
mov
test
add
mov
pop
push
xchg
lret
adc
movsb
pop
out
xor
loope
mov
add
js
jno
push
shrb
dec
xchg
out
pop
add
loop
mov
shll
sub
and
mov
mov
leave
popa
aaa
jle
adc
sahf
bound
mov
fdivr
fdivrs
mov
inc
aam
mov
adc
push
sub
push
dec
xchg
xchg
es
iret
cmp
push
or
int3
push
sbb
popa
test
push
inc
dec
popa
mov
sbb
push
lds
outsl
cs
cld
pop
movsb
sbb
jns
pop
jge
scas
stc
in
sbbb
mov
or
imul
in
or
cltd
dec
movsl
shrl
and
xor
ret
shll
pop
mov
jb
in
daa
push
cwtl
in
jmp
je
xchg
lret
mov
lret
mov
cmpsl
mov
xor
cmp
pop
ljmp
mov
push
pusha
adc
inc
test
rcrb
scas
adcb
and
dec
ret
xor
xchg
iret
mov
jnp
mov
call
cmp
dec
push
test
xchg
pop
dec
cld
sbb
mov
jae
or
adcb
enter
mov
push
jp
mov
push
adc
mov
cmovle
test
xchg
pop
idiv
push
repnz
inc
aaa
and
ss
out
xchg
pushf
sahf
movq
gs
icebp
insb
adc
scas
push
stc
stc
ficomps
jmp
and
scas
sub
cmp
adc
sbb
cltd
xor
cmpsl
popa
xchg
jb
cld
pop
orb
xchg
mov
repz
inc
xor
in
shlb
stc
dec
mov
jge
sbb
mov
ret
out
cmp
jl,pn
outsb
subb
faddl
adc
jg
dec
lods
leave
cltd
ja
mov
insl
mov
pop
mov
stos
push
aas
dec
jno
insl
jl
jp
mov
or
mov
jp
jb
fimuls
mov
je
cmc
insb
repz
cmp
mov
cmp
scas
test
and
pop
cs
pop
fwait
cmp
mov
imul
std
mov
adc
out
push
rcrl
jns
hlt
pop
cwtl
mov
ljmp
pop
push
sti
dec
icebp
mov
sar
push
sub
jns
fdivl
adc
mov
mov
sub
cwtl
sub
hlt
lahf
stos
xchg
insl
push
xchg
int3
js
add
cmp
imul
mov
mov
outsb
mov
lock
nop
pop
in
xor
aad
sub
add
xor
and
idiv
sbb
ja
sti
pop
jb
ja
cld
bound
out
movsb
sahf
add
inc
xchg
dec
outsl
and
fwait
lds
lcall
cwtl
add
push
in
subl
test
jo
xchg
and
adc
sub
fisubrl
imul
mov
test
xchg
lahf
push
jns
stc
inc
das
and
cmp
mov
add
mov
cld
cmp
pop
repnz
or
rolb
sahf
lcall
fdivp
mov
lret
lcall
sub
imul
mov
xorb
adc
aaa
into
out
add
out
out
fcomp
jo
pop
in
inc
inc
stos
push
and
push
add
cmp
cmp
mov
inc
fs
add
push
mov
jg
in
stc
add
xlat
and
adc
pop
scas
mov
lahf
push
xchg
and
pop
test
cmpsb
push
fidivl
jno
jmp
inc
push
jb
les
jle
pop
inc
scas
push
cld
xchg
and
sub
jmp
stos
xor
rcrb
enter
mov
adc
ror
cltd
cmp
es
movsb
stos
in
insb
pop
sbb
fsubs
insl
mov
insb
push
jno
adc
push
movsl
push
mov
push
jg
sarb
sbb
xchg
clc
rorl
jbe
imul
loope
out
sahf
loopne
aad
inc
xchg
subl
rclb
adc
add
pop
and
inc
test
mov
sar
jge
push
popa
incl
dec
xchg
jmp
imul
cmpsb
insl
push
or
pusha
jp
mov
mov
inc
mov
jp
daa
popf
or
push
push
fnsave
int
scas
repnz
sub
stc
mov
pop
and
adc
pop
sub
sub
jle
arpl
jmp
mov
clc
loopne
cmp
push
adc
cmp
cmp
mov
push
test
mov
mov
add
and
push
js
xchg
and
xor
and
lock
in
inc
cmc
ds
into
or
jns
scas
mov
xchg
cmc
outsl
les
fldl
jne
cld
scas
ret
scas
std
or
add
push
adc
leave
das
icebp
or
mov
xchg
rolb
leave
cmp
ljmp
icebp
xchg
es
fsubrs
jg
out
xor
mov
and
and
sbb
push
or
ljmp
inc
or
or
aas
or
xor
mov
add
dec
mov
negb
sub
xchg
scas
sti
out
int3
and
adc
test
nop
mov
dec
xlat
fstpl
loopne
pushf
sbb
lock
aam
fcomps
fdivp
pop
inc
push
mov
mov
dec
lret
rol
jecxz
ss
leave
add
cmp
jno
sbb
je
pop
ljmp
movhps
xchg
pop
daa
int3
je
push
sbbl
inc
xor
bound
lods
ds
mov
jle
jbe
push
or
jne
jb
psrlw
in
dec
mov
push
jl
mov
mov
sub
xchg
pop
adc
or
sar
jns,pn
rclb
mov
or
push
mov
dec
test
fs
js
add
mov
lea
dec
xchg
and
jno
test
sbb
or
push
cmp
sub
lahf
divl
dec
lret
fiadds
aam
mov
and
imul
and
or
push
cld
pop
dec
cli
xorb
push
stos
adc
enter
ds
add
xor
or
cmp
mov
pop
cmc
ret
stos
rcll
pop
jg
aaa
aas
cmp
rcrb
stc
inc
imul
jge
mov
dec
sbb
inc
xor
xor
in
pop
inc
sbb
ja
adc
scas
pop
aad
sbb
xchg
sahf
jbe
ffreep
inc
mov
dec
mov
mov
shl
add
lahf
jg
and
sub
std
rorb
sbb
pop
lcall
xor
adc
ja
js
xlat
stos
and
adcl
mov
push
mov
xchg
or
sub
dec
daa
jg
sbbb
ss
and
rorl
xchg
pusha
mov
xchg
sub
aad
cli
loop
pusha
mov
jnp
mov
pop
xor
jmp
adcb
mov
push
scas
jno
lods
xchg
add
dec
call
adc
dec
pop
jno
ja
mov
jb
or
pop
stos
adc
or
add
imul
pop
stos
repnz
data16
lock
xor
mov
ljmp
lock
sub
ret
into
jno
or
cli
jnp
or
and
pop
dec
pop
shrb
cwtl
mov
add
nop
mov
or
push
xchg
mov
xchg
adc
insl
test
ss
inc
sub
sbb
mov
xchg
mov
cltd
pop
fimull
dec
mov
cltd
push
loope
fstpt
xor
jae
int3
nop
repnz
cmp
popf
ret
inc
mov
mov
jmp
dec
cld
jae
adc
push
es
or
sbb
and
pusha
dec
xor
cli
fwait
iret
in
mov
repnz
int3
push
cmp
xor
pusha
mov
subb
loope
jns
pop
pop
dec
push
pop
loopne
pop
mov
mov
jne
push
inc
test
movsb
sbb
inc
in
and
leave
dec
inc
pop
aad
and
insb
das
sbb
xchg
rol
sub
mov
sub
mov
imul
lret
movsb
icebp
ret
mov
add
pop
icebp
sub
dec
or
loope
test
push
cmp
xchg
leave
inc
jg
test
pop
add
es
jecxz
pop
cld
push
iret
scas
repz
mov
sub
fstpl
arpl
sbb
pushf
inc
inc
lret
pop
mov
fidivl
pop
dec
je
push
test
pop
add
bound
jnp
mov
sub
sbb
mov
pop
in
jne,pt
mov
mov
aaa
repnz
jecxz
dec
test
test
pop
lret
push
mov
stc
adc
mov
loopne
mov
mov
stc
sub
and
mov
sbb
jne
iret
mov
nop
sub
jae
out
clc
test
and
jge
push
sub
cwtl
sub
xor
roll
in
imul
push
jp
pop
xchg
mov
cmp
js
rep
jb
jl
mov
test
mov
aas
imul
dec
test
nop
mov
in
imul
loopne
inc
in
or
push
xor
les
cmp
push
mov
insb
xchg
jle
pop
sub
stos
and
sub
inc
cmpsb
or
sub
adc
testb
vpor
dec
sub
mov
addr16
and
cltd
lods
sbb
stos
mov
mov
sub
arpl
pop
inc
xchg
ja
dec
mov
cltd
pusha
jns
jecxz
xchg
jno
aam
inc
hlt
movsb
jb
push
inc
clc
out
aad
loop
xchg
push
xchg
cmp
stos
shl
in
dec
jns
mov
pop
cltd
popa
mov
or
sbb
fdivl
divl
lret
clc
add
ss
add
ja
jno
add
or
jne
repz
stos
mov
ret
dec
enter
xchg
mov
aas
sbb
in
xchg
dec
xchg
pop
cmpsl
fsubrl
inc
insb
adc
mov
cli
es
add
addb
std
mov
dec
mov
or
aad
test
inc
inc
dec
roll
mov
fiaddl
push
push
sahf
sbb
mov
je
sub
mov
mov
push
or
ret
push
pop
push
into
jg
push
movsl
ficoms
test
js
daa
mov
movsl
repz
jmp
lret
hlt
fmul
inc
inc
jmp
subps
shlb
push
orl
daa
xchg
inc
sbb
out
sbb
call
xchg
imul
inc
fs
push
inc
mov
jbe
push
sub
icebp
sbb
mov
push
jno
lods
sbbl
sub
mov
out
mov
xchg
sub
das
ficoms
xchg
divb
scas
pop
lods
sub
mov
add
nop
inc
xchg
fildl
dec
xchg
dec
test
mov
mov
xlat
sub
clc
xor
mov
enter
dec
popl
out
cmpsl
adc
addr16
ret
and
sti
xor
sub
cmp
sub
add
xchg
fdivrl
push
xor
and
mov
pop
push
add
mov
call
sub
mov
xor
and
xchg
pop
loopne
rcl
test
bnd
enter
outsb
dec
jmp
sub
repnz
push
dec
movsb
push
fs
outsb
bound
sti
cmp
fcoml
out
lea
icebp
pop
adc
xor
add
mov
mov
std
sub
loopne
and
pop
sbb
lods
fnstenv
xchg
pop
xchg
sub
mov
cld
jno
pop
jne
cs
mov
mov
leave
push
fildll
lock
cmp
sub
mov
sbb
hlt
pop
pop
xchg
push
pop
mov
popf
add
adc
jge
ja
and
scas
cwtl
fwait
push
bound
insb
into
lds
xchg
incb
inc
testb
shr
inc
adc
push
mov
scas
andb
gs
pop
cmpsl
push
push
cmpsl
stc
out
add
cmovs
out
mov
push
sahf
stc
cli
xchg
adc
pop
stos
mov
xchg
xor
dec
jae
loopne
fmuls
lret
leave
test
in
xlat
and
sbb
cmpsl
in
dec
cmc
lods
testl
lret
cmp
orb
orl
jb
sub
cmp
arpl
fwait
sub
in
sub
rorl
inc
lahf
mov
sbb
sbb
testl
movswl
pop
sbb
add
cmpsl
inc
sbb
pushf
mov
jns
das
and
sbb
mov
aas
ds
pop
mov
aad
dec
cmp
outsb
iret
or
cli
xchg
or
icebp
cmpsb
nop
adc
daa
testb
js
mov
sub
fnop
outsb
and
rcll
fiaddl
inc
out
mov
lahf
in
enter
imul
push
push
andl
ret
jl
push
mov
leave
pop
out
inc
addb
adc
pop
inc
push
mov
jecxz
xchg
pop
scas
fmulp
xlat
imul
push
mov
dec
mov
xchg
pop
loope
aaa
inc
imul
mov
and
or
ret
shl
out
fstpl
lcall
mov
rcll
mov
mov
ja
mov
dec
pop
andl
xchg
jecxz
adc
mov
into
out
jnp
clc
jp
sub
mov
and
mov
es
jae
call
jle
rep
faddp
add
loop
cmp
into
fwait
das
and
div
sbb
xchg
lods
mov
insb
flds
call
in
pop
fcomps
out
cwtl
sub
push
or
xchg
mov
xor
sbb
or
and
or
pop
imul
add
leave
xor
jp
pop
test
pop
xor
dec
subb
aad
repz
dec
out
call
sub
mov
cmp
outsb
and
cmp
or
popf
dec
jg
mov
dec
sub
jmp
cltd
add
xchg
and
lcall
adc
cmc
sbb
les
and
in
xchg
shrl
mov
es
dec
mov
mov
aas
add
pop
shl
lcall
inc
pop
lret
dec
pop
inc
push
lods
mov
repz
into
lock
insb
xchg
pop
inc
ret
shlb
and
xchg
mov
ret
pop
xchg
sub
dec
pop
mov
add
xchg
aam
sbb
and
sub
cmp
jp
adc
xchg
sub
jle
and
pushf
jl
xorb
fcmovbe
mov
mov
mov
lea
dec
test
inc
cmp
test
xchg
scas
xor
cmp
aad
jge
mov
bound
jmp
adc
jl
or
push
pushf
adc
sub
sbb
xor
test
jge
decb
push
pop
add
xor
fsubs
fsts
push
pop
inc
jne
ret
aam
lods
adc
ret
dec
push
mov
lds
push
movsb
mov
adc
js
inc
aaa
outsl
inc
js
fistpll
into
pop
movsl
push
xchg
mov
sbb
shll
add
inc
xor
mov
mov
add
ja
cmp
cmp
mov
inc
daa
cli
add
fcompl
adc
mov
inc
jecxz
sub
xchg
and
aaa
cmp
jmp
ret
cmp
loop
repnz
jbe
movsl
loop
cmp
mov
adc
movsb
or
es
out
out
jne
pop
sti
rorl
mov
outsb
jge
inc
hlt
outsl
pop
sub
int
out
jl
mov
push
pop
push
in
lds
insl
mov
push
lea
sbb
jg
mov
xor
sbb
adc
sbb
mov
fsubrs
into
adc
adc
lds
push
cs
sbb
pop
jmp
inc
clc
fistpll
rclb
push
mov
in
sub
in
movsl
or
aad
adc
arpl
mov
or
jle
xchg
xor
inc
xchg
out
pop
add
enter
xchg
push
mov
mov
lock
cmp
sbb
pop
push
int3
xchg
fsubrp
sbb
mov
mov
ret
fbstp
xchg
icebp
enter
nop
xchg
mov
cmp
sahf
popf
jge
inc
loop
sbb
xchg
fsubrl
les
insb
mov
dec
adc
test
xchg
or
aad
rcl
es
or
add
lcall
test
jae
inc
aam
mov
cmpb
jno
jno
stc
add
inc
outsl
stos
rcrb
add
xor
pusha
mov
jno
outsb
add
mov
sub
xchg
outsl
nop
shll
push
add
stos
xchg
mov
aas
iret
add
mov
inc
add
into
outsl
cmp
pop
push
sub
inc
inc
repnz
adcb
arpl
outsl
jo
mov
jb
dec
jmp
in
popa
mov
sub
xor
and
adc
mov
inc
rcr
push
loopne
adc
pushf
aam
xlat
inc
ja
popa
push
push
sbbb
add
lcall
movsb
and
adc
popf
popf
sub
ret
push
push
add
lock
popa
mov
xor
pop
in
or
sbb
dec
jae
or
loope
inc
inc
dec
and
adc
fisubrl
scas
add
test
cmp
xchg
das
mov
into
mov
and
push
insb
inc
lret
bound
add
adcb
cmpsl
scas
jno
mov
sbb
cmp
xchg
stos
mov
cmpsl
mov
ret
and
test
sbb
mov
push
xchg
pushf
test
movsb
enter
mov
lret
jecxz
lcall
cmp
ret
xchg
mov
sahf
sub
and
jle
subl
mov
outsl
ret
xchg
dec
inc
sbb
add
add
daa
mov
pop
sub
mov
cmp
jns
sbb
in
enter
push
or
mov
dec
ret
sbb
std
sarl
mov
in
mov
mov
mov
inc
jle
test
push
lds
jg
js
test
mov
stos
addr16
bound
mov
sbb
imul
lret
mov
je
into
pop
xor
jl
mov
and
pusha
cmp
push
fnstsw
out
std
sar
mov
mov
lock
lret
sub
sub
mov
adc
je
dec
push
xchg
call
int3
dec
jbe
jl
imul
lahf
fnstenv
stos
scas
mov
cmc
ret
cmp
inc
and
clts
imul
in
arpl
push
mov
xchg
cli
push
dec
lret
sbb
jmp
xchg
iret
and
adc
scas
jg
adc
jo
test
jne
scas
mov
sub
or
mov
xor
push
mov
aad
mov
or
dec
sbb
cmpsb
jns
xlat
pushf
stos
and
mov
aad
dec
inc
sbb
inc
pop
push
stc
nop
popf
fs
push
mov
call
xor
pop
xchg
add
pop
cmp
mov
mov
or
std
enter
jl
notb
jmp
dec
aas
icebp
adc
mov
enter
je
stc
inc
pop
call
ja
icebp
push
test
or
lods
cmp
mov
cs
cmc
in
push
mov
sbb
cwtl
and
stc
std
pop
mov
mov
test
test
inc
xor
dec
outsb
sbb
xchg
mov
in
pop
cltd
mov
out
jb
imul
push
or
sti
sub
sub
adc
and
add
cwtl
fidivl
mov
xchg
gs
sub
daa
loopne
lret
repz
add
cmp
mov
jne
xor
mov
lea
pop
out
lea
in
mov
jge
mov
mov
adcb
mov
cli
push
loope
movsl
inc
dec
mov
jns
daa
out
repz
ficoms
test
adc
xchg
loop
mov
add
and
data16
jle
ret
jb
lods
pop
fistpll
ret
outsl
adc
push
dec
js
jns
outsl
xchg
pop
inc
or
jns
pop
sub
std
pop
sbb
xchg
inc
mov
push
loop
mov
inc
les
or
mov
test
je
iret
xor
pop
cmpsl
and
in
mov
mov
out
stc
xchg
addr16
cmp
mov
push
jmp
sbb
int
ror
sbb
fdivrl
and
jae
out
lods
jae
mov
ret
in
pop
xor
and
sub
in
cltd
dec
and
cli
or
shll
out
jg
xlat
mov
rorl
cmp
cs
pop
cmpsb
or
repnz
xchg
mov
call
cmp
mov
mov
sbbl
pop
in
mov
xor
enter
xor
in
lret
push
les
repz
loope
adc
bound
xor
mov
stc
add
push
jp
mov
cltd
push
daa
mov
pop
inc
push
mov
out
add
sub
cltd
sti
popf
push
pop
loop
pop
xchg
push
std
ja
add
lods
cmp
loopne
fs
cs
aad
movsl
out
inc
push
jp
enter
rorl
and
outsb
sbb
xchg
daa
mov
inc
stc
popa
and
insl
in
and
add
lret
stos
cmp
push
mov
cld
inc
aaa
lock
in
movsb
and
sbb
jmp
or
sahf
xchg
insb
push
mov
cmp
dec
test
add
addr16
push
sub
outsl
jno
mov
cmpsb
add
cltd
adc
data16
repnz
addl
out
daa
lods
rorl
mov
sub
imul
in
sub
dec
cmpb
xor
clc
push
mov
xchg
cmc
sahf
mov
mov
test
addl
lods
cmc
and
sub
inc
mov
mov
dec
mov
xchg
jmp
cli
lahf
dec
lods
sbb
lock
mov
ljmp
and
stos
pop
shll
dec
mov
cli
xor
sbb
subb
fwait
imul
pop
or
lcall
loop
inc
xlat
addr16
pushf
xlat
aad
mov
addl
mov
jp
xchg
xchg
loop
pusha
shlb
ljmp
iret
add
loopne
mov
add
jp
loopne
aam
inc
adc
dec
ror
pop
stos
sub
ss
and
scas
cmc
lcall
sarl
dec
jp
cmp
mov
or
mov
xor
cld
xlat
sbb
in
les
imul
push
pop
cli
sub
inc
mov
cmp
adc
mov
decb
push
cltd
ret
sub
out
mov
mov
pop
inc
imul
les
popf
dec
push
cmp
cld
loope
add
fmul
mov
add
mov
xor
cmp
sahf
out
js
pop
lret
dec
pop
fwait
mov
in
and
inc
mov
mov
cs
cmp
mov
in
jbe
shl
inc
in
into
or
mov
pop
mov
popf
adc
pop
leave
jnp
addr16
aam
call
xchg
int
jae
out
data16
lds
bound
inc
pop
icebp
and
imul
jg
pop
sete
push
push
testl
loopne
les
add
sahf
std
cli
popa
into
rorl
les
loope
sbb
jnp
jns
fucomip
sub
outsb
mov
inc
cmc
sub
in
jns
xor
pop
lret
cmpsb
lret
popa
test
pusha
or
lods
roll
sub
xchg
mov
adc
sub
int3
ss
ljmp
jp
mov
rclb
ljmp
cmp
pop
add
mov
xor
shlb
dec
aad
test
pop
and
punpcklbw
lret
in
xchg
mov
ss
mov
iret
add
ss
subb
leave
cs
ret
sbb
pop
loopne
cmp
pop
sarl
outsb
popa
lds
mov
test
xor
jne
push
out
imul
arpl
push
movsb
xor
popf
jno
mov
xlat
int3
push
pushl
movsb
mov
movsl
sub
lds
push
dec
sub
test
pop
inc
fdivs
or
pop
sub
lcall
xor
jo
stos
xor
jecxz
xchg
xor
add
test
dec
pop
xor
mov
popf
push
test
or
roll
in
adc
cltd
adc
push
cmpsl
rolb
lcall
cli
shll
dec
jmp
rol
adc
outsb
cltd
lret
outsl
mov
test
mov
rcrb
inc
jbe
fnsave
pusha
mov
xlat
dec
sbb
sbb
or
xchg
popf
xchg
je
jmp
aad
shr
mov
jp
ret
clc
popf
test
insb
inc
int3
push
cmp
push
sbb
pop
xor
rcll
push
add
xlat
sub
outsb
or
jmp
jl
das
scas
xlat
popf
or
mov
lods
stc
bound
and
push
out
sub
int3
clc
negb
fs
test
jbe
pop
sbb
ds
or
std
mov
xchg
adc
push
mov
nop
jae
push
and
xchg
push
cmpl
mov
xchg
ljmp
imul
shr
dec
adc
ds
or
add
cwtl
and
cld
adc
test
imul
iret
jbe
xchg
in
push
rcr
and
std
js
stos
repz
mov
xchg
and
mov
push
aas
gs
rdmsr
pop
das
xor
sub
lods
repz
jns
test
sub
fildll
xchg
es
mov
movsl
in
cmp
xchg
adc
insb
cmp
xchg
xor
stos
cmp
fs
cli
pop
jl
adc
insb
mov
adc
add
mov
sub
hlt
inc
inc
jns
mov
sbbl
xchg
outsb
mov
decb
mov
lret
mov
test
xchg
xor
shll
das
mov
js
push
mov
nop
shll
test
adc
sub
daa
repz
fnstcw
push
xchg
cmpsl
fwait
aad
stos
leave
jb
sub
ds
sbb
adc
daa
inc
out
xchg
xchg
pop
adc
sub
dec
sbb
lret
repnz
lret
test
push
pop
fwait
add
incl
ret
daa
push
add
pop
xchg
xor
inc
cltd
adc
xchg
mov
dec
mov
dec
mov
orb
fxch
sub
test
lds
push
out
out
stc
scas
shrl
or
mov
lcall
pushf
or
xchg
jno
std
xchg
js
xor
mov
std
xor
stos
pop
roll
dec
add
movsl
mov
outsb
jmp
dec
xor
rcrl
add
inc
pop
rcrl
xchg
push
testl
iret
in
xchg
sub
mov
subl
adc
cmp
push
loop
and
scas
jno
sbb
jno
jb
fldenv
mov
pop
sti
add
xchg
outsb
jo
iret
cmp
and
sub
jbe
dec
jmp
mov
out
push
dec
jecxz
inc
in
sbb
jns
cld
push
cmc
jo
mov
int
out
sahf
addr16
add
cmp
in
pop
aam
inc
int
jbe
dec
push
rorl
cmp
xor
push
sarl
mov
sbb
lods
nop
loop
ja
mov
or
daa
jne
pop
aad
mov
stos
je
adc
rcl
push
fsub
out
mov
out
fiaddl
xchg
inc
in
pusha
jg
lods
xor
jg
xchg
lret
sbb
rclb
sbb
dec
movsl
cli
add
nop
roll
xchg
push
xor
stos
iret
mov
lea
lods
adc
js
or
sbbb
and
fiaddl
jbe
jmp
add
sahf
in
and
push
clc
mov
dec
mov
cmp
test
add
add
push
cmc
jle
jmp
flds
mov
into
dec
ds
inc
test
push
pop
shlb
cmpsl
jmp
push
lahf
push
mov
add
sub
clc
fildl
push
in
and
pop
pushf
outsl
aad
addr16
and
xor
push
cmp
or
rcrl
push
insl
lock
dec
sbb
xchg
mov
mov
in
push
dec
icebp
push
rcl
sbb
add
aaa
jle
cmc
mov
cwtl
cmp
pushf
mov
std
adc
cmp
fnstsw
loop
sahf
out
push
mov
repnz
iret
lods
addr16
je
shrb
mov
sub
test
cmp
lds
or
mov
jbe
cmp
repnz
ficomps
pop
ja
push
push
mov
cmp
gs
test
mov
and
imul
mov
adc
push
enter
ret
outsl
pushf
push
dec
js
orl
idivb
inc
out
mov
jno
imul
cmp
push
iret
aam
sbb
cwtl
es
popf
out
dec
xchg
inc
and
fst
and
cli
ja
pop
pop
push
cmpsb
idivl
and
jge
mov
out
jae
dec
pushf
sbb
push
add
fcomp
mov
mov
xchg
push
movsl
inc
xor
out
arpl
dec
pushf
bound
mov
fs
daa
mov
popf
pop
mov
mov
add
pop
sub
jecxz
pop
xor
fidivrs
jle
out
push
mov
insb
mov
sub
add
cmpsb
add
pop
jb
push
imul
pop
jmp
hlt
repnz
js
cs
mov
xor
mov
shr
push
mov
add
outsb
cmp
arpl
sub
pushf
lcall
push
lret
mov
or
and
adc
fadds
push
push
scas
dec
orl
nop
cmp
ret
ja
movsb
or
cmp
paddd
mov
lahf
or
cmp
aaa
out
adc
imul
cmpsb
outsb
std
pop
xor
adc
mov
sbb
out
inc
lods
mov
in
out
dec
sub
imul
xlat
mov
in
sub
rclb
into
pop
push
aad
out
xor
dec
aas
hlt
inc
mov
cmp
fwait
push
mov
or
imul
and
dec
pop
ret
inc
cmp
fcoml
fistps
mov
leave
call
popf
fiaddl
test
loop
pop
adc
scas
add
hlt
inc
mov
mov
add
inc
insb
cmpsb
inc
fildll
sarb
mov
xchg
test
jp
jmp
cmp
xchg
sbb
ja
lret
jge
inc
arpl
mov
xor
in
lock
push
mov
mov
cmp
popf
test
sbb
movsb
loopne
mov
pop
dec
imul
loopne
lcall
loope
movsb
repz
and
test
test
loop
pop
mov
mov
push
repnz
out
mov
mov
mov
test
out
inc
adc
daa
sbb
sbb
into
cmp
dec
add
pop
rclb
mov
cltd
imul
sub
dec
test
aas
push
sarb
mov
mov
popa
cmpsl
repz
xor
mov
mov
dec
out
jecxz
mov
or
dec
adc
shlb
sarl
pop
and
or
sub
add
enter
mov
out
stc
pusha
lods
roll
xchg
dec
jmp
and
jo
dec
push
push
mov
cltd
testl
addr16
xor
xchg
js
movsl
pop
jno
fldl
inc
or
pop
int3
in
mov
sub
ds
dec
out
push
cmpsb
cmpl
fdivp
repnz
mov
sbb
aas
shlb
cld
and
std
pop
repnz
js
push
adcb
mov
fnsave
or
cld
mov
cmp
mov
push
sti
cmp
sub
xor
pushl
aam
popf
adc
movsl
sbb
jns
outsl
mov
sbb
adcl
mov
or
dec
repnz
adc
in
sbb
jl
mov
fwait
dec
jbe
jle
jb
mov
incb
pop
movsl
bnd
add
cmp
cmp
jb
call
cli
pusha
lock
add
pushaw
scas
test
mov
inc
sub
inc
fildl
pop
fucomi
sbb
clc
mov
sbb
or
or
aam
addr16
xchg
and
in
imul
iret
lret
cmc
mov
icebp
movsl
mov
shlb
adcb
movsb
sub
sbb
popa
fstp
mov
jns
adc
dec
das
sub
loope
mov
sub
adc
fisubl
cmpsb
dec
adc
cmp
js
push
adc
jp
jae
xchg
popf
into
fdivl
out
add
xchg
cld
mov
cmpb
out
pop
dec
adc
jns
aas
xchg
daa
nop
inc
iret
mov
in
imul
aad
jecxz
push
mov
sub
repz
xchg
jecxz
fcmove
push
arpl
sbb
in
loope
outsb
imul
int
mov
push
imul
mov
sbbb
cmp
push
cmp
inc
adc
xor
nop
cltd
stc
jg
mov
mov
cmp
scas
mov
or
sub
add
cs
inc
dec
mov
lret
mov
cmp
cs
mov
or
sub
xchg
jno
jmp
mov
arpl
out
aam
mov
lret
add
fmull
mov
ljmp
jecxz
insb
std
aad
rclb
dec
bound
jle
icebp
jg
lock
cmp
mov
lahf
push
pop
movsl
cmpl
repz
jo
int
or
sbb
inc
in
and
repz
jno
fildll
lret
movsb
repnz
sub
add
inc
sbb
pop
mov
imul
or
hlt
roll
add
repz
rolb
mov
sub
pop
iret
jne
daa
mov
testl
aaa
in
dec
add
sbb
mov
pop
jl
test
push
outsb
lods
push
jne
mov
popf
imul
pop
jno
call
test
pop
gs
xchg
mov
mov
sahf
pusha
xchg
dec
pop
aad
jns
clc
sbb
pop
imul
push
aaa
sbb
loopne
sbb
add
dec
push
dec
push
sar
notl
pop
into
push
sahf
dec
mov
movsl
shll
loop
ja
pop
sbb
pusha
sbb
and
fistpll
pop
pusha
xor
adc
out
out
ljmp
mov
mov
dec
out
push
cltd
cmp
pop
push
repz
imul
fcomp
lods
ljmp
xchg
or
add
xchg
sub
ffree
cs
ficomps
test
sbb
push
adc
lret
inc
loop
mov
adc
jo
or
mov
inc
lcall
push
and
and
cmp
iret
push
mov
ret
xorl
push
scas
addl
dec
pop
xchg
xchg
jecxz
lea
lods
mov
pop
arpl
push
loop
test
ja
mov
pop
mov
mov
mov
cmp
je
xchg
mov
adc
test
fisttps
push
test
outsl
dec
cmp
inc
xlat
test
cli
data16
xadd
fucompp
mov
fists
pop
inc
push
iret
in
adc
adc
stc
jnp
xor
lret
pop
mov
jmp
pop
jecxz
loop
xor
in
mov
lret
mov
inc
push
sub
gs
loope
stos
gs
cmc
sahf
mov
mov
add
icebp
xor
ss
mov
cwtl
jae
push
adc
inc
xor
in
push
jmp
ds
jge
ja
movsl
cwtl
std
ljmp
add
cmc
out
add
adc
sub
dec
dec
adc
sub
sbb
push
or
int3
push
cmp
xchg
cld
adc
pop
xchg
mov
mov
xlat
sbb
xor
movsb
lea
cmp
push
movsl
push
je
cli
jbe
lret
pop
dec
jp
xchg
es
xor
sbb
pop
std
xchg
dec
jle
xchg
dec
jno
xchg
jl
xor
popf
lds
mov
adc
test
arpl
sbb
jae
and
dec
movsl
or
pop
leave
fisubs
orb
data16
inc
cmp
mov
daa
rorb
dec
orb
lea
imul
cld
cltd
or
rolb
mov
mov
mov
test
push
xlat
push
mov
pop
fptan
jbe
push
cmp
lret
pop
bswap
add
fimuls
mov
mov
jge
movb
loopne
pop
adc
call
test
fucomip
xor
add
out
ret
xchg
inc
sub
loope
jmp
aam
push
and
xor
icebp
add
rcrl
xchg
jge
push
loop
xchg
add
adc
sbb
xchg
rol
add
nop
sub
mov
inc
mov
mov
jge
jp
pusha
mov
xor
mov
sbb
xchg
xor
std
xchg
test
and
mov
ljmp
fildll
xchg
jne
xor
xchg
test
add
cmpsb
fnstenv
repnz
addr16
int3
mov
inc
mov
ret
push
loopne
cwtl
xchg
lret
sub
aad
push
jae
sahf
push
ds
sahf
outsl
push
in
pop
scas
out
push
dec
pop
test
mov
push
ret
mov
and
cltd
repnz
mov
decl
arpl
lods
test
test
iret
mov
cmp
adc
mov
into
mov
arpl
sbb
lea
mov
or
sbbl
and
jne
fbld
xchg
xor
push
lret
cs
jo,pn
into
mov
or
mov
in
into
sahf
lods
xlat
mov
push
data16
sub
faddl
adc
pusha
rorb
sbb
pop
adc
shlb
jg
mov
mov
mov
jbe
fadd
arpl
call
and
jl
dec
das
mov
sbbb
dec
xchg
jno
arpl
test
std
iret
lods
ror
es
xor
imul
js
push
adc
into
adc
popf
xchg
mov
cltd
or
xor
scas
push
lret
leave
pop
inc
cltd
sbb
insl
inc
jnp
dec
add
xor
cmpsl
push
int3
sbb
sub
call
aas
mov
mov
or
dec
or
fldt
aad
fadd
mov
jae
andb
icebp
mov
outsl
add
clc
or
movsb
bound
adc
or
jl
clc
lahf
mov
lahf
or
loope
sbb
into
sbb
out
popf
mov
jge
xor
cld
test
ljmp
out
out
test
test
xor
pop
call
hlt
test
pop
mov
mov
push
xor
xor
dec
out
ror
push
or
imul
adc
adc
dec
inc
xchg
xor
pop
negl
dec
adc
cmp
inc
xchg
sub
sub
stc
push
cmp
ss
ja
mov
add
jae
fwait
insl
pop
les
fldt
sbb
pop
addr16
pop
jae
inc
std
jmp
popf
cmp
jl
or
mov
xor
sbb
loop
inc
popf
xchg
or
or
movsl
xchg
sbb
xor
mov
sahf
test
cmp
in
sub
gs
insb
xchg
and
ss
push
or
insl
popa
xor
rcl
adc
mov
or
stc
ret
cli
ja
dec
fsubrp
pop
pop
push
sub
stos
mov
les
xchg
pop
pop
icebp
cld
pop
shlb
leave
cmp
cs
mov
inc
mov
and
cmp
jle
inc
pop
scas
aaa
push
cmp
adc
adc
or
sbb
std
cmp
stc
jecxz
les
imul
lcall
xchg
clc
call
dec
daa
daa
mov
add
push
xor
jne
out
adc
ss
mov
cltd
add
mov
xchg
sbb
stos
lret
out
ret
dec
mov
in
lahf
scas
cwtl
and
clc
dec
sbb
lds
jbe
jg
jns
fs
in
loopne
jmp
push
lahf
jnp
mov
hlt
inc
out
pop
add
xchg
pop
subb
xchg
ret
mov
add
ljmp
mov
mov
cld
fisubrs
bound
out
repz
dec
mov
adc
cltd
aam
loopne
mov
mov
adcb
xor
lret
movsl
and
stos
pop
cld
jno
hlt
adc
adc
cmp
lock
out
insl
cltd
inc
lods
add
loope
or
cmc
rcrb
je
lcall
mov
push
in
or
sbb
jbe
push
div
das
sub
adc
cmp
mov
mov
sbb
cmc
or
cmpsb
add
stos
fisubrl
aaa
jl
adcl
scas
or
fs
rcr
cli
lods
sbb
sub
xchg
mov
imull
pushf
mov
aad
movsb
inc
jge
push
add
icebp
pop
aas
mov
xor
jl
rcrl
inc
sbb
subb
sub
sbb
repz
loop
call
inc
mov
adc
fistl
and
insb
and
cltd
cmp
xchg
mov
imul
add
rorb
push
dec
or
shll
aad
xchg
push
pop
sbb
jl
sub
jb
push
out
and
insl
loop
sub
int3
test
out
movsb
inc
enter
outsb
jb
xchg
fsubs
shlb
shlb
push
fwait
inc
cli
pop
mov
test
das
dec
out
mov
sub
outsb
mov
repnz
loop
out
xor
xchg
xchg
pusha
mov
cltd
jne
and
sti
cs
mov
scas
push
jl
hlt
outsl
fstl
rolb
inc
cmp
mov
fbld
sub
xlat
mov
jns
xchg
fidivl
cmc
cmc
int
pop
lock
push
out
sub
push
jno
dec
fimuls
icebp
shlb
xchg
test
sub
add
fsubrp
loopne
adc
xchg
movsb
mov
lock
loopne
inc
imul
sahf
data16
call
pop
jp
fsubrl
ror
enter
jle
je
adc
fcomps
mov
stc
pop
shlb
add
pop
inc
dec
xchg
adc
cld
or
and
lcall
loope
pop
daa
testl
mov
out
rcl
adc
idivl
or
mov
lahf
push
and
dec
mov
insl
in
cld
sub
pop
xchg
xchg
sbb
inc
mov
xor
cmp
sti
or
dec
cmpsb
mov
mov
push
or
lock
sbb
popf
lret
arpl
nop
fwait
fs
cmpsb
and
push
xchg
imul
ljmp
ret
shr
popf
jge
idivl
mov
xchg
mov
out
and
icebp
outsl
mov
jae
xor
daa
les
imul
int
add
jge
imul
nop
pop
cmc
push
hlt
xor
sti
jle
pop
mov
and
sub
and
gs
xchg
mov
icebp
icebp
insb
cld
push
adc
lods
pop
xchg
cmp
testl
out
add
rcll
stos
sbb
negb
jmp
mov
adcl
movsb
and
lods
mov
push
and
gs
push
gs
mov
pop
xchg
out
cmp
push
cmp
loope
jbe
cmp
int
or
das
or
inc
jge
sbb
into
sbb
lea
fisttpll
sbb
jnp
pop
push
add
jle
or
js
in
stc
jb
cmc
cmp
dec
pusha
mov
dec
imul
pop
ljmp
xor
stos
shr
rcrl
sbb
js
jl
ss
mov
lock
iret
jne
lock
push
scas
mov
dec
je
and
nop
aaa
jp
jl
xchg
fwait
mov
loope
jp
cmp
pusha
mov
aad
adc
xchg
jl
mov
adc
out
clc
mov
adc
bound
xchg
sbb
xor
xchg
lods
fwait
and
insb
or
movsl
es
insl
push
push
lods
in
out
pop
mov
xchg
stos
mov
rol
rcr
inc
dec
xor
ret
rolb
dec
mov
jmp
mov
rolb
push
arpl
pop
xor
pop
push
cmp
ljmp
jns
adc
mov
xor
jne
mov
popa
in
mov
cmp
outsb
in
adc
iret
ficomps
dec
rolb
sarl
add
pushl
addb
mov
lds
aam
movsl
lcall
icebp
in
mov
mov
test
lcall
jae
and
xchg
push
push
pop
mov
leave
subb
xchg
jle
push
xchg
mov
es
arpl
rcrb
adc
inc
rcrb
hlt
mov
sub
dec
repz
stos
mov
pop
add
fwait
fwait
pop
pop
jmp
mov
add
andl
pushf
sbb
rclb
in
fldcw
cltd
mov
pcmpeqw
cmpl
cmp
rcl
negb
call
movb
out
stc
scas
shll
ss
fadds
clc
test
test
add
dec
and
fdivs
sahf
sbb
push
xor
cwtl
sub
test
xor
in
imul
cs
fidivrl
insl
popa
jecxz
divl
leave
adc
xlat
jecxz
enter
jns
xchg
insb
cmp
or
sbb
js
loope
sarl
mov
jno
push
std
popf
adc
shlb
addb
inc
cmpsl
mov
adc
shr
xor
test
pop
ja
mov
adc
cli
lea
add
loop
icebp
jbe
add
into
popa
mov
push
cmc
dec
subb
rolb
daa
out
and
push
cmp
sub
repz
adcb
in
sub
dec
cld
push
lea
sbb
and
push
daa
arpl
adc
out
cmp
cld
jne
and
dec
cmpsl
out
ficoms
sahf
cmp
sbb
in
iret
xchg
outsl
jnp
add
mov
cmpl
int3
xchg
xor
mov
push
jge
mov
mov
jg
and
cmpsl
sbb
sub
jmp
sbb
ds
shr
and
pop
jno
sarl
push
inc
pop
aas
sbb
cmpsb
cltd
mov
mov
jp
jns
mov
or
test
adc
or
inc
mov
aad
ljmp
shrl
jecxz
push
lods
test
dec
cmp
gs
ljmp
sbb
int
fdivl
and
shrl
arpl
adc
dec
nop
and
andb
mov
pushw
add
loopne
dec
adc
scas
and
cmp
inc
daa
fmul
push
mov
repz
std
adc
and
lret
cltd
dec
dec
or
call
xor
mov
or
cmp
loopne
jb
sahf
andl
outsl
jp
pusha
leave
daa
int3
iret
inc
mov
sbb
aad
push
lods
mov
mov
push
or
add
sub
loopne
dec
sub
mov
mov
sti
es
loope
adc
icebp
popa
adc
mov
and
into
and
push
fstpl
mov
mov
cld
fs
dec
cmpps
cltd
loopne
sarl
nop
mov
mov
pop
pop
pop
stc
in
dec
cli
inc
fistpl
cmp
pop
adc
or
mov
std
sub
dec
imul
in
in
push
cmpsl
mov
dec
add
data16
lret
clc
lock
es
ret
dec
xchg
insl
not
movsl
push
fcmovu
jmp
stos
mov
fstl
push
arpl
xchg
dec
cmp
fnstenv
xchg
jg
jmp
cltd
jp
sub
push
xchg
sarb
repnz
push
in
fwait
xor
rorb
cmpsb
call
cmp
pusha
push
cmp
mov
xor
lea
cltd
sub
jns
ret
mov
push
jns
ret
inc
lret
push
test
jmp
sub
out
in
inc
aaa
cmp
sbb
pop
push
lock
jns
scas
test
jno
pop
ljmp
shlb
cmp
push
pop
pop
je
popa
adc
vmread
xor
sahf
cmp
aad
sar
test
jecxz
mov
stos
outsb
ljmp
inc
daa
idivb
jecxz
inc
jl
cwtl
pop
daa
data16
int3
int3
mov
jge
cvtdq2ps
jge
mov
out
jb
cmpsl
dec
push
jb
into
aaa
lcall
mov
fwait
mov
insl
dec
mov
mov
outsl
test
cmp
dec
dec
cli
cmp
jae
mov
xlat
inc
mov
cwtl
cmpsl
and
cwtl
sub
lds
push
loop
adc
imul
pop
dec
xchg
pop
mov
ss
rcrl
mov
inc
inc
xor
outsb
lock
dec
cwtl
push
add
inc
mov
sub
push
gs
cli
negl
and
xchg
stc
cmc
push
movsl
test
popa
pop
lcall
xchg
ret
jp
pop
repz
leave
cmp
xor
push
scas
lods
lea
xchg
in
mov
incl
adc
inc
popf
sbbb
adc
scas
lahf
loope
addl
outsb
xchg
fldt
adc
cmp
stos
movsl
ret
xchg
loope
popa
dec
and
cld
and
clc
push
std
sbb
in
aad
mov
insb
sahf
pushf
in
jns
int
pop
mov
xor
in
subl
loope
lret
mov
popf
add
jmp
sti
daa
mov
dec
adc
aaa
dec
push
fs
add
sub
mov
stos
jo
aad
ja
inc
ret
push
jae
call
dec
movsb
xor
mov
or
movsb
inc
inc
je
add
in
mov
notb
fisubl
int3
cmp
mov
mov
pop
jae
rcrl
mov
cmp
vprotw
xchg
jno
ror
and
pop
leave
mov
xchg
icebp
fistpll
inc
adc
pop
mov
subb
int
leave
dec
aam
inc
aas
jae
jae
xchg
mov
repnz
fbstp
cmp
or
xchg
add
or
sbb
pop
push
cwtl
scas
dec
mov
sti
lret
cmp
inc
fdivrl
dec
cli
testb
cs
or
mov
sbb
lods
mov
cmp
mov
and
and
jecxz
mov
mov
lock
sahf
adc
pop
and
in
arpl
push
es
sarb
jl
mov
in
mov
into
cmp
int3
mov
mov
dec
movsb
mov
out
aaa
fsts
in
pop
aam
xor
push
fsts
xchg
popf
push
xor
push
ja
repnz
in
mov
xchg
dec
jp
shlb
jg
ss
pop
in
sbb
sbb
pop
add
and
lods
js
inc
jne
xchg
inc
pushf
or
scas
push
jns
add
leave
jmp
xor
loop
addr16
sbb
je
faddp
sub
pop
sub
jl
jp
cwtl
sub
sbb
lea
and
mov
ret
test
pop
sub
xchg
pop
lods
dec
aam
mov
sub
shlb
jmp
aam
daa
cmp
in
xchg
cmp
sbb
jae
xor
mov
daa
xchg
mov
into
mov
daa
mov
mov
sub
inc
jno
sti
popf
dec
ret
das
js
shll
cmp
adc
cmc
jnp
idivl
insb
push
cmp
sub
mov
add
push
and
ja
ljmp
mov
cltd
or
fwait
shr
mov
pop
fisttps
ds
js
divl
bound
add
hlt
sub
mov
or
cmpsl
cld
jg
xchg
sub
or
or
sub
in
stos
or
sarb
or
add
call
pcmpgtb
lcall
ds
loop
inc
cmp
inc
dec
pcmpeqd
mov
xchg
daa
mov
lcall
mov
or
push
dec
cmovb
xchg
dec
dec
or
xor
push
mov
stos
jge
shll
sub
lock
add
pop
cmp
mov
shll
cmp
xchg
mov
xchg
sub
pop
popf
int
jnp
sti
sbb
lock
imul
xor
xchg
xchg
les
stc
stos
rcrl
stc
jle
jnp
ret
mov
sbb
dec
scas
jmp
mov
jno
mov
lea
lods
and
jecxz
in
push
pusha
je
movsl
imul
jle
pop
cwtl
aaa
int
adc
cli
mov
std
and
test
and
push
outsl
cmp
xor
jae
aam
pop
sbb
pop
mov
pop
fwait
mov
std
sub
and
xchg
aas
inc
xchg
popf
not
stos
xchg
inc
adc
repnz
in
cwtl
xchg
sbb
jp
jo
jecxz
insl
mov
rcll
mov
hlt
fiadds
stc
movsb
inc
inc
xor
in
mov
cmp
mov
inc
orb
sub
or
push
fimuls
xor
sbb
adcb
push
in
insl
jnp
aad
jno
sub
in
and
cmp
jbe
mov
mov
ret
mov
cmp
pop
dec
inc
scas
mov
divl
inc
stc
adc
push
push
fisttps
inc
scas
ljmp
inc
jmp
xchg
fistpll
iret
pop
sub
sbb
sti
in
in
mov
shrb
sub
fdivrl
in
mov
mov
push
imul
push
leave
les
lods
and
or
cltd
arpl
cmpsb
andl
or
and
mov
sub
outsl
jl
mov
jno
insl
cli
jg
shr
notb
lahf
in
sbbb
and
dec
jno
mov
sahf
push
adc
testl
mov
shrb
sbb
pop
enter
insb
call
outsl
mov
add
in
mov
rcll
mov
adc
xchg
cwtl
sub
and
pop
jle
dec
mov
mov
test
and
jmp
jnp
in
outsb
xchg
loopne
xchg
mov
sub
and
sbb
mov
mov
popa
mov
jne
in
aam
mov
int
dec
lret
mov
and
andb
xlat
jns
pop
add
xor
mov
lret
cmp
or
out
jmp
out
shll
sbb
mov
sbb
pop
jnp
jne
mov
int3
int3
mov
aad
inc
and
les
or
inc
movsb
fnsave
xor
mulb
add
inc
jns
xor
cmp
popf
clc
mov
imul
fdivrl
fnsave
int
sbb
lods
and
sbb
xchg
ja
jmp
dec
jo
pop
aaa
xchg
call
es
sub
push
sbb
push
js
testb
ret
leave
xor
jge
sub
sub
mov
xchg
mov
test
add
pop
jg
push
push
jo
dec
mov
mov
xchg
pop
mov
test
mov
mov
lods
and
cmp
add
sub
fldenv
movsl
add
fs
int3
clc
inc
les
dec
cwtl
push
lret
mov
jae
mov
idivb
mov
aaa
jno
shrb
stos
inc
addl
roll
out
pop
pop
jnp
scas
add
cmp
jp
hlt
lret
and
ficoms
lea
nop
stc
outsb
fsubrs
inc
inc
or
xor
aam
push
dec
pop
loope
sub
cmpsb
mov
dec
fcmovnb
xor
xor
and
daa
inc
and
arpl
ds
mov
inc
adc
sbb
inc
jo
push
pop
push
cs
adc
nop
aaa
pop
iret
add
outsl
lds
outsb
inc
cwtl
xor
in
add
xchg
add
imul
mov
mov
test
testb
lret
fucom
fisubs
cmpl
out
out
out
or
aaa
and
lret
ret
add
pushf
dec
das
sub
mov
push
pop
sub
in
gs
fildl
jle
add
fidivrs
enter
adc
rolb
inc
or
bound
dec
add
enter
hlt
jne
jo
jle
cmp
inc
loopne
push
push
dec
or
mov
aam
jp
cmp
jae,pn
sub
mov
pop
daa
ljmp
outsb
loopne
mov
mov
pop
mov
lret
mov
icebp
adc
mov
sub
movsl
mov
ljmp
fnstcw
mov
dec
sub
insb
sbb
dec
scas
mov
fnop
inc
lret
add
lds
sbb
arpl
in
mov
out
pop
dec
daa
fwait
fbstp
outsb
decb
xor
pop
ljmp
xor
sahf
ja
and
dec
sub
jo
add
lods
mov
sub
stc
pusha
loopne
and
pop
and
sub
sbb
xchg
xlat
cld
inc
jecxz
dec
sti
adc
subb
in
mov
sub
jmp
repnz
mov
sub
pusha
out
pop
and
cmp
xlat
or
out
pushw
mov
add
sbbl
movsb
jp
dec
out
fsubrp
xlat
nop
call
push
and
add
xchg
push
cwtl
mov
loope
fistl
imul
jnp
repnz
xchg
fwait
xchg
jae
sbb
les
in
mov
dec
mov
or
push
cmpsl
pop
sahf
std
inc
subb
stos
in
sub
or
dec
mov
cld
clc
mov
shl
js
imul
push
jno
mov
aam
ret
sbb
add
movsl
lock
test
into
enter
cmp
icebp
pop
rorb
jge
xor
sub
jg
xchg
cltd
fbstp
sub
mov
in
shll
int3
faddl
daa
sbb
sbb
add
pop
pop
mov
jmp
stc
in
or
pop
lret
mov
scas
movsl
xchg
lcall
cs
pushf
and
jmp
out
dec
test
andl
gs
add
xor
jge
mov
sbb
sub
movsl
test
pushl
and
ret
jle
enter
and
push
push
loop
and
cmpsl
sub
roll
rcl
cmp
jae
lea
mov
cwtl
push
sub
adc
jg
mov
jecxz
adc
in
push
mov
jecxz
pushf
adc
inc
data16
mov
adc
daa
mov
ljmp
out
mov
adc
mov
jb
inc
pop
insb
mov
pop
add
fmuls
xchg
mov
clc
cmp
out
mov
dec
xchg
rcrb
leave
outsb
int
push
mov
nop
cld
xchg
ss
adc
push
aad
xchg
es
inc
cmp
sbb
fcompl
test
lock
pop
lret
jo
lret
pop
mov
push
mov
push
sub
call
cld
repz
gs
dec
push
cwtl
sub
lret
and
xchg
xlat
ja
mov
mov
lods
out
test
mov
adc
xchg
push
sub
xchg
push
call
pop
mov
cmp
push
adc
push
insb
pop
ss
in
andb
mov
xor
mov
add
mov
jl
iret
lret
jae
cmpsl
sub
mov
mov
xor
shll
in
push
loope
arpl
push
insl
and
nop
lock
in
daa
idiv
ds
in
stc
mov
mov
lahf
xor
cmpsb
pusha
push
fildl
or
mov
fprem
cmp
sbb
lret
push
push
sbb
push
mov
xor
imul
xchg
bound
fs
mov
pop
popaw
and
and
call
sti
pop
xchg
xor
aas
mov
jl
je
cmp
xor
xchg
aas
mov
mov
mov
lods
mov
popf
mov
mov
jno
mov
stos
leave
cs
and
mov
les
mov
iret
sub
push
jle
lret
test
xchg
pop
aas
push
std
aad
pop
add
ss
adcb
add
push
inc
cmp
fistps
in
mov
lret
data16
or
jae
add
int3
insl
sub
popa
sahf
sar
dec
insl
sti
imul
dec
hlt
xchg
dec
stc
scas
addr16
in
dec
xlat
lret
gs
cmp
int3
vpavgb
mov
bound
std
cwtl
fwait
cmp
shrb
mov
aaa
jl
dec
xlat
outsb
mov
mov
sahf
lods
sahf
mov
add
mov
fmuls
mov
pop
jb
push
in
out
jns
setg
mov
push
and
dec
mov
int
pop
xor
push
shll
pop
inc
insb
repz
sub
data16
add
test
pop
xchg
mov
ljmp
cmp
clc
mov
adc
inc
or
inc
inc
jg
out
iret
test
movsl
dec
movsl
adc
mov
lods
dec
cmpsb
push
xor
stos
xchg
aas
sub
mov
pop
hlt
stos
das
and
std
jmp
bound
ss
ss
dec
inc
out
lret
notb
ret
mov
mov
jp
addl
jecxz
add
mov
pop
cmp
jmp
pop
sbb
rolb
pop
jge
jae
lahf
push
xchg
testb
adc
xor
pop
push
divl
xchg
enter
and
in
push
push
push
cmpsb
int3
xor
sahf
insb
shl
add
mov
loop
add
inc
shrl
and
push
js
or
movsb
ss
cmpsl
inc
sbb
movsb
xchg
fsubrl
into
es
sbb
test
rcr
or
inc
pusha
or
jbe
je
jb
fbld
pusha
mov
imul
sub
adc
cwtl
bound
xorb
clc
rcll
aaa
cltd
mov
in
sub
rol
or
xor
sbb
jae
mov
xor
jb
ss
push
leave
mov
fcomps
sub
pushf
jg
mov
je
mov
daa
je
jmp
mov
data16
jnp
mov
clc
xchg
pop
orb
aaa
fdivr
das
or
lock
rep
das
lcall
nop
xor
mov
pop
push
ja
cmp
fwait
lahf
ficoml
jb
test
dec
ljmp
sub
sub
inc
adc
ficompl
mov
cmpsl
add
mov
and
cmp
pop
int3
mov
cmp
or
shrl
mov
sbb
fcmovnb
dec
mov
mov
sar
subb
dec
prefetch
and
iret
loope
in
in
roll
std
aam
fstpl
xor
xchg
imul
push
test
xor
xchg
stos
pop
in
stos
jp
cmp
and
ret
iret
fcoms
jecxz
adc
pop
pop
std
or
inc
add
clc
pop
pop
adc
adc
sub
sub
pop
fildll
shr
adc
mov
push
mov
test
icebp
negl
out
pop
xchg
pop
ljmp
in
movsl
dec
rclb
aam
dec
xlat
rcr
inc
mov
clc
ficoml
adc
icebp
mov
aaa
out
adc
in
sbb
js
push
adc
jbe
lcall
arpl
push
popa
ljmp
cmc
roll
in
xchg
xchg
insb
and
pop
push
jecxz
add
cli
fidivs
aad
bnd
out
cli
mov
and
loope
cmpsl
mov
adc
out
push
xchg
push
shll
mov
jmp
je
lods
lahf
add
pusha
pop
mov
adc
jo,pn
int
sub
pop
incb
fs
aam
loopne
jbe
repnz
or
rcl
pop
repnz
adc
inc
insl
pop
int
cmc
mov
in
push
mov
push
test
fdivs
inc
popa
ret
add
lods
push
adc
xor
mov
movsl
xchg
pop
cwtl
into
and
xor
or
shrb
aad
or
daa
scas
pop
xchg
lret
ss
in
cli
sahf
fidivl
cld
xor
xor
and
xchg
cmpsb
cmp
inc
shll
sub
mov
or
sahf
fs
aaa
aad
adc
in
sbb
into
fiadds
cltd
mov
out
or
fwait
xor
sub
rclb
loope
inc
movsl
ret
adc
sub
inc
into
and
or
ja
and
xlat
mov
push
adc
int
stos
mov
jg
xor
data16
jbe
jl
imul
sahf
xor
adc
adc
add
fcompl
nop
sub
jg
mov
inc
subb
mov
mov
and
sahf
scas
sahf
outsb
xorb
dec
sbb
push
push
jb
cmpsl
in
popf
push
gs
test
js
inc
xchg
aaa
pop
popa
push
jp
imul
test
sbb
cmc
lahf
stos
out
cmpsb
shll
jns
sbb
push
mov
bound
test
sahf
test
lock
adc
lcall
mov
repnz
out
mov
jo
subl
inc
cmp
sbbl
dec
dec
rcll
daa
pop
jge
inc
out
inc
pop
sbb
jmp
push
sti
out
test
mov
cmc
bnd
pop
pop
mov
aad
lcall
inc
mov
test
sbb
mov
iret
cmp
insb
push
push
mov
pop
jp
cltd
dec
xchg
sub
and
inc
es
pop
jmp
neg
inc
das
pop
je
and
xor
mov
into
inc
rolb
arpl
outsb
or
jmp
lcall
mov
test
mov
mov
jl
pop
clc
push
push
sbb
enter
cli
dec
jge
jle
outsl
test
pop
cwtl
leave
dec
lock
sbb
jno
jle
push
sbb
add
adc
repz
cmp
jle
and
lcall
or
cmc
icebp
fs
sub
repz
pop
enter
iret
cmp
sub
mov
aad
aaa
or
andb
adc
nop
testb
insl
xor
bswap
lods
mov
xor
loope
fs
adc
fcoms
mov
sti
fwait
cmp
inc
popa
mov
jmp
hlt
mov
and
jg
repnz
bswap
sub
imul
sub
push
adc
pop
inc
cmp
aaa
push
mov
loopne
cmp
inc
cmpsl
das
or
adc
repnz
enter
mov
sub
add
add
add
inc
mov
or
dec
mov
or
add
add
dec
mov
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
