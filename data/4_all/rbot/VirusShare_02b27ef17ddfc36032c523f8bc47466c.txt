jmp
ret
mov
lock
inc
jnp
jle
.byte
loop
int3
mov
add
add
add
cmp
pop
add
pop
add
add
add
call
mov
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
mov
add
mov
add
mov
add
inc
add
popf
dec
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
inc
add
add
add
add
add
aad
test
or
sbb
inc
lock
clc
xor
push
negb
xor
dec
mull
insb
sbb
hlt
pop
ret
loopne
adc
and
inc
dec
shl
shlb
or
jmp
mov
xchg
je
sbb
rclb
pop
ds
sbb
or
clc
mov
mov
popf
push
mov
adc
or
sub
outsb
and
dec
xchg
push
dec
sbb
adc
or
hlt
push
arpl
jecxz
cld
mov
add
inc
or
das
cmp
stos
xlat
scas
adc
xor
ja
test
push
stos
adcl
xchg
jnp
inc
shlb
sbb
das
fisubl
out
fisttpll
adc
out
sub
dec
call
insl
call
les
xchg
setns
xchg
sbb
cld
dec
clc
and
add
adc
cli
pusha
add
shll
pop
or
or
jbe
xchg
xchg
aas
out
incb
test
add
aam
and
lea
fimull
sub
repnz
test
dec
jecxz
mov
jne
mov
orb
rcl
xchg
sbb
mov
lea
mov
sub
dec
mov
push
push
nop
neg
sbb
mov
push
fs
and
mov
rorl
xchg
sahf
sub
mov
dec
xorb
mov
clc
das
pop
sub
push
pop
inc
xorb
in
xchg
daa
test
inc
lret
in
adc
mov
push
das
and
mov
dec
adc
roll
shlb
sub
subb
cmpsb
pop
push
xchg
sbb
pop
jl
push
jmp
sbb
ja
push
add
out
nop
jne
mov
push
xchg
add
add
fcoml
jmp
pop
shlb
lock
enter
or
push
lods
and
arpl
jge
rol
mov
nop
mov
pop
data16
imul
add
push
lds
loopne
or
and
incl
aad
outsb
or
mov
dec
push
les
or
lds
fcmovu
stos
mov
mov
and
xchg
mov
inc
imul
test
and
and
pushf
adc
mov
nop
in
int3
pushf
inc
inc
mov
mov
xchg
push
pop
xchg
dec
popf
add
es
mov
adc
dec
js
cld
lods
cwtl
fsubrs
xchg
mov
jl
fisttpl
xor
or
in
push
cmp
andb
xchg
mov
dec
cmp
loopne
faddp
push
sub
xor
mov
xor
push
adc
fdivp
push
ja
or
lcall
lcall
dec
mov
xchg
call
lcall
loopne
ds
or
clc
inc
inc
xor
push
mov
nop
add
jns
scas
jbe
mov
xor
pavgb
jp
je
xchg
test
fmull
cwtl
stos
and
clc
je
adc
lea
stos
mov
or
push
aas
leave
fsubrl
popf
jecxz
or
mov
andl
orl
add
lock
jns
jle
aad
clc
sbb
nop
dec
push
ret
cli
hlt
fdivrl
xchg
lret
mov
jno
frstor
pop
fistpl
leave
mov
and
hlt
and
rclb
or
les
add
ja
cmp
inc
adc
push
inc
push
and
aaa
push
jge
lods
push
shlb
xor
and
sub
push
popa
mov
popf
jp
sub
aad
jae,pt
jns
icebp
aas
sbb
inc
lds
shll
repnz
mov
leave
fmul
and
shrl
cmp
dec
inc
in
mov
repnz
ja
push
mov
popf
sbb
dec
or
out
ss
or
pslld
das
cld
jo
dec
sahf
adc
inc
nop
xchg
insl
jb
addl
aaa
data16
lods
dec
iret
pop
or
dec
add
ficoml
scas
push
outsb
dec
pop
sbb
push
aam
test
inc
iret
sti
pop
fbstp
xchg
jb
movsl
mov
or
mov
lret
imul
testb
aam
jb
lods
dec
hlt
ffreep
fidivs
int
lret
and
std
inc
and
insb
ret
fdivs
daa
xlat
dec
ljmp
ljmp
inc
fcomip
jl
sub
sub
xor
loopne
mov
and
xor
xchg
mov
add
scas
sub
adc
lock
mov
rol
cwtl
addl
pop
push
in
dec
sbb
iret
nop
pop
cmp
aad
pop
push
push
cwtl
pop
add
dec
les
je
into
into
xchg
push
xchg
andl
aam
xor
cmp
push
xor
cmp
jne
cmp
jg
adcl
xchg
aaa
iret
xlat
andl
push
aam
mov
jb
mov
jmp
das
mov
bound
shrb
mov
push
pop
sub
jne
sbb
out
push
clc
cmp
inc
movsb
loop
mov
inc
gs
sub
or
ss
sbb
jne
int3
inc
mov
mov
pop
frstor
cmc
fcmove
gs
int
shr
jp
loopne
xchg
test
stc
ret
cmp
hlt
push
imul
or
decb
pop
lds
cmp
xorb
rorl
cmp
ret
inc
dec
or
arpl
jecxz
popa
pop
fbld
push
adc
js
es
and
test
dec
or
insb
mov
push
push
and
push
sbb
xor
inc
fnstenv
decb
inc
xor
dec
xchg
inc
push
mov
push
push
test
cs
enter
mov
jecxz
xchg
aad
push
adc
fcoml
sub
push
inc
es
repz
push
mov
je
jge
into
mov
mul
jle
push
add
xchg
icebp
mov
add
pop
add
xor
xchg
mov
cltd
push
xchg
jg
jge
inc
jl
test
pop
mov
jge
inc
subb
xchg
cmp
orb
test
rcr
test
cmp
xchg
mov
xchg
adc
sub
lock
and
rcrb
mov
dec
ret
mov
adcl
iret
push
jb
jbe
mov
repz
xchg
ret
mov
idivb
sub
cmp
add
jmp
jno
sbb
mov
orl
xchg
je
mov
xchg
pop
insl
sub
test
dec
sbb
stc
adcb
adc
sbb
push
xorl
lock
inc
sahf
mov
sbb
lods
leave
xchg
mov
jns
mov
inc
jmp
out
imul
gs
pop
push
inc
jge
sub
aas
push
insb
fsubrl
adc
mov
loopne
fdivrl
cmpsb
inc
mov
dec
int3
inc
pusha
out
sub
ss
outsl
gs
adc
aas
mov
inc
xor
jae
pop
insl
adc
cld
adc
fs
push
fcom
add
mov
cmpsl
iret
ljmp
push
or
enter
test
cmp
jp
sub
ds
adc
dec
push
sub
and
jecxz
subb
xchg
pusha
pusha
dec
in
cmpsb
or
xchg
daa
mov
push
push
insl
xor
pop
adc
in
add
fisttpl
sbb
lret
mov
notb
push
adc
stc
or
adc
test
and
pop
mov
cmp
ja
sub
lods
dec
xor
jns
cmp
xor
js
fistpl
sbb
enter
ljmp
xchg
jne
push
stos
xor
arpl
xlat
and
mov
pop
lcall
je
xlat
pop
adc
inc
push
inc
sub
lds
loopne
mov
jmp
loop
aam
ss
cmp
mov
loope
pop
xchg
inc
mov
sbb
clc
jmp
or
sarb
and
ss
pop
pop
shlb
jmp
sbb
dec
pop
push
jecxz
aaa
nop
stos
and
inc
inc
push
gs
sub
in
fbld
adc
pop
or
sti
adc
pusha
fstpl
cmp
pop
orb
out
or
inc
mov
lods
rol
shlb
sub
test
mov
or
pop
test
pop
xor
adc
ror
into
xchg
adc
loopne
push
mov
add
push
and
mov
mov
inc
sarl
add
push
dec
lods
push
xor
sub
adc
push
popa
aaa
fildl
sbb
mov
pop
push
mov
inc
mov
jns
data16
in
mov
xchg
ja
aas
mov
dec
divb
shll
jle
pop
xchg
imul
and
sbb
add
xchg
pop
cmpsl
lcall
je
add
ljmp
lods
test
divl
fiadds
imull
mov
ja
push
xor
ficompl
enter
jbe
cld
inc
rcll
dec
xchg
sahf
jno
ss
xor
cmc
leave
or
cwtl
arpl
adc
mov
mov
inc
xchg
pop
xchg
add
mov
mov
ljmp
cli
inc
xor
orb
addr16
ss
pop
and
out
ljmp
or
sahf
sub
mov
sub
mov
and
mov
fnstcw
scas
out
push
pop
sahf
push
aad
add
sbb
jecxz
sub
cwtl
pop
repz
int3
xor
add
pop
clc
lret
add
sub
shlb
pop
mov
inc
mov
mov
and
sub
imul
pop
sbb
and
inc
mov
mov
mov
fisubrs
push
push
icebp
out
das
push
dec
inc
adc
test
push
arpl
iret
sbb
sbb
mov
outsb
pusha
cmpsl
mov
lock
mov
mov
add
and
test
cmp
adc
aam
push
pop
shlb
pop
push
arpl
and
mov
fdiv
cltd
adc
test
lea
add
sbb
sub
es
push
pop
mov
aad
jge
into
push
out
addr16
clc
mov
dec
sbb
aad
adc
sub
pop
and
push
cs
aas
ljmp
adc
lods
std
pop
in
jp
add
push
cwtl
inc
sub
stos
cmpl
push
loope
aad
or
test
sub
cmp
mov
lods
lret
push
sub
pusha
movups
jmp
loopew
lret
scas
pop
inc
out
jbe
cwtl
inc
add
xorb
iret
lds
push
scas
pop
xchg
pop
jl
ljmp
jnp
imul
and
ss
aaa
sub
mov
outsb
cs
in
mov
xchg
in
or
mov
mov
ret
call
mov
mov
mov
lock
aam
or
dec
fsubrs
out
pop
dec
rsm
into
cmc
push
pop
jne
push
pop
push
jl
popa
ret
adc
dec
jbe
sbb
and
push
out
aad
std
es
inc
lds
popf
adc
pop
rcrb
negl
jmp
inc
je
jmp
dec
cmp
scas
pop
mov
cltd
or
cwtl
mov
std
pop
dec
adc
pop
mov
xchg
orb
lcall
sub
xchg
aas
cld
jmp
ret
out
or
ror
test
xor
dec
adc
shrl
divl
js
add
roll
and
bound
jo
andl
popf
pop
xor
cmpsb
jecxz
icebp
push
ss
push
adc
pop
xor
jp
out
xchg
xor
cmp
pop
push
mov
dec
cltd
lock
sti
xor
rorb
adc
mov
inc
outsb
add
mov
cmc
in
loope
adc
les
xor
or
xchg
movsb
lock
push
dec
dec
bound
jp
xchg
cmp
and
jo
dec
push
movsl
testl
cmp
or
cld
das
or
sub
aaa
and
nop
pusha
jmp
dec
js
xchg
push
push
cmp
inc
sti
out
and
punpckhbw
add
cmp
mov
inc
out
bound
test
adc
pop
pop
imulw
inc
add
push
in
inc
lock
dec
std
inc
xor
jge
xor
adc
pusha
mov
push
dec
mov
or
jnp
into
inc
push
adc
inc
nop
push
and
jbe
shrb
xor
sbb
dec
cmp
stos
pop
mov
mov
or
fwait
shll
dec
dec
sarb
sub
hlt
rorb
test
adc
in
daa
into
xchg
or
icebp
inc
cli
aaa
or
js
sbb
mov
je
mov
xchg
pop
xchg
mov
fcomi
mov
cld
fmul
ret
aas
daa
into
cmp
popa
inc
adc
loop
rcrb
mov
xchg
or
test
repz
mov
fsubrs
cmp
cmpsl
add
hlt
mov
aas
je
out
cmp
hlt
jae
adc
cmp
xor
in
mov
add
movsl
nop/reserved
sub
pop
loopne
shl
pop
nop
test
inc
and
xchg
sbb
mov
cmpsl
and
sbb
in
ja
out
adc
repz
ret
sbb
cmp
mov
xor
stc
pop
xchg
jo
jne
xchg
movsl
xchg
and
add
mov
push
pop
inc
adc
pop
add
add
bound
enter
mov
sub
xor
mov
insl
lcall
push
repz
mov
pop
inc
fwait
aaa
push
test
mov
jae
push
adc
adc
int3
pop
inc
data16
ret
fbld
gs
jmp
addb
stos
sbb
mov
lcall
push
xchg
sub
data16
xor
mov
mov
mov
lods
and
loope
cmp
and
movsl
cli
ss
test
push
aad
sbbl
xor
or
sub
mov
xor
jecxz
or
xchg
or
xchg
jmp
dec
add
out
int
cmp
push
daa
insb
nop
add
sbb
mov
daa
push
cmpsb
inc
sbb
aas
in
fwait
mov
mov
xor
mov
xchg
or
repz
or
sbb
pop
clc
aas
xchg
pop
mov
cmp
sub
or
xor
je
add
ljmp
sbb
sbb
test
xchg
test
daa
pop
insl
aam
xchg
inc
push
jo
push
add
sub
insb
push
call
arpl
push
test
pop
cmp
insl
add
xor
aad
divb
iret
out
inc
les
pop
push
jne
adc
pop
push
or
lret
idiv
mov
cmp
push
sbb
imul
or
loop
cmp
pop
mov
andl
test
or
aam
vpsubd
inc
addr16
test
lods
or
popf
loop
ds
add
fisttps
hlt
sbb
loopne
and
ljmp
sbb
jge
ficoml
xor
inc
maxps
fwait
in
add
xlat
popf
imul
ds
sub
mov
lret
pop
pop
lds
int
les
lock
xor
or
pop
cmc
fs
lds
xchg
mov
inc
fidivrs
sbb
jne
xchg
pop
sbb
aam
mov
adcb
into
cmp
adc
dec
mov
inc
stc
shlb
dec
xchg
jno
adc
repz
xchg
dec
or
mov
clc
xchg
inc
push
scas
mull
mov
jp
shlb
rcrl
imul
lods
sub
arpl
mov
or
mov
test
in
adc
movsl
xor
aaa
adc
daa
test
or
and
in
pop
fcomp
push
fidivl
xchg
dec
movsb
cmp
les
lds
cld
push
lods
push
cmp
push
roll
push
or
scas
sub
ds
push
jnp
iret
inc
xchg
lods
pop
nop
cmp
mov
rclb
loopne
xchg
bound
daa
sub
cli
lods
xchg
stos
sbb
aas
mov
sub
pop
adc
rcll
xchg
jge
add
mov
and
cmp
jbe
sub
imul
aad
lods
and
fisubrs
xlat
xchg
gs
mov
mov
roll
daa
dec
or
or
inc
jg
das
lods
xor
iret
stos
add
mov
push
adc
mov
mov
adc
call
into
lea
add
or
jg
ds
adc
cmpsl
movsl
cmp
adc
in
aas
push
lcall
pushf
inc
lret
xor
arpl
call
cmp
xchg
dec
pop
je
dec
test
pop
inc
ficoml
pop
shlb
add
arpl
test
inc
jo
jb
or
data16
fcompl
add
inc
mov
push
insl
dec
movsl
aam
mov
popa
mov
daa
push
mov
inc
outsl
test
test
pop
imul
lock
lock
gs
sub
stos
fiaddl
outsb
mov
inc
push
incl
rolb
mov
imul
ljmpw
es
rcll
pop
xor
sbb
test
dec
cwtl
dec
aam
inc
and
pop
pop
sbbb
mov
fstp
mov
pusha
xor
sub
and
jmp
lea
push
fnstenv
xchg
pop
pop
mov
push
das
clc
mov
test
xchg
mov
xchg
shll
mov
dec
cmc
nop
sbb
mov
xor
xchg
fwait
movsb
pop
int3
daa
jecxz
push
sbb
test
mov
jo
stc
stos
pop
jecxz
ljmp
and
pop
or
sysexit
and
arpl
lret
repnz
loopne
data16
pop
or
xchg
scas
pop
mov
fdivs
scas
xchg
pop
lcall
push
add
sub
out
xorb
aam
iret
cmpsb
out
arpl
pushf
mov
cmp
or
xor
pop
sahf
cmpl
mov
jmp
mov
pop
mov
out
test
dec
gs
movsl
fwait
stos
pusha
adc
shlb
cmp
and
push
mov
lock
cmp
pop
push
jne
ror
cmp
ds
push
xchg
fisubrs
push
inc
push
call
loopne
and
repnz
pusha
loop
and
jmp
push
scas
jae
rolb
dec
bound
dec
enter
mov
add
push
push
jae
nop
sarl
mov
sbb
mov
stos
lds
js
dec
add
aam
lds
and
in
push
push
mov
cmpl
rolb
les
cltd
and
jns
adc
mov
aaa
jo
imul
sahf
rolb
cmp
sub
stc
sbb
cmpsb
xchg
lods
inc
imul
inc
push
add
mov
out
fcmovbe
sub
sub
orb
dec
aam
cwtl
mov
xchg
cmp
sbb
in
mov
inc
jae
fldcw
cmp
out
mov
xchg
test
orb
ds
outsl
ficompl
inc
sbb
push
jmp
addr16
jae
scas
and
lds
bound
ss
xchg
addr16
icebp
pop
scas
test
xchg
xchg
dec
mov
lock
mov
add
cs
xchg
dec
jecxz
cmp
or
and
xor
dec
or
mov
fs
inc
push
inc
mov
mov
rcl
pop
loope
ret
jge
inc
push
jns
test
dec
push
adc
and
push
or
out
aaa
ret
sub
push
push
push
add
push
and
imulb
pop
cmp
and
push
stos
sbb
push
inc
shll
loope
mov
rclb
ds
addl
jmp
dec
loopne
stos
inc
enter
cmpsl
inc
jno
lods
inc
andl
fisubrs
jno
icebp
jle
xchg
and
fs
cmp
sbb
andl
fs
sbb
in
fdivrl
jge
arpl
movsb
ror
mov
stos
pop
jmp
mov
roll
pop
cmp
push
pop
and
add
xchg
enter
or
ljmp
jg
test
sbb
jecxz
adcb
outsl
sbb
mov
mov
pop
or
or
daa
cltd
mov
int
sub
inc
sub
jbe
inc
fcomi
and
bound
push
push
push
int
movsl
xor
jo
daa
and
mov
mov
imul
jp
aad
xchg
jp
je
das
inc
dec
adc
out
push
or
out
adc
push
sub
fsubl
out
mov
pop
xchg
test
jb
lock
stc
xchg
imul
push
unpckhps
jno
adcl
cmp
cmc
or
mov
fisubrs
push
jp
jb
pop
push
adc
bnd
sub
dec
popf
in
cli
clc
movsl
cmc
in
shlb
rclb
int
inc
mov
mov
bound
and
sub
adc
xchg
int3
pusha
mov
jl
rcl
inc
ret
fwait
lds
mov
rorl
push
or
addr16
jne
mov
xchg
sahf
mov
lret
adcl
imull
pop
mov
or
in
mov
movl
imul
subb
lods
mov
std
mov
dec
push
mov
add
mov
mov
int3
out
adc
fdivrp
mov
mov
lods
sub
or
mov
and
mov
cmp
mov
sbb
iret
lahf
and
cmpsb
sub
into
loop
mov
rol
cmpb
dec
sti
xor
dec
jbe
mov
sub
stos
cmp
loope
xchg
movsb
lcall
or
adc
adc
pop
xor
push
andb
adc
or
rolb
popa
sub
mov
inc
ljmp
mov
sti
mov
pop
mov
xchg
out
les
in
add
jbe
mov
imul
push
add
xor
adc
mov
adc
sbb
aam
movsl
and
faddl
mov
test
or
sub
das
stos
sbb
jle
mov
les
test
lods
adc
lret
mov
lea
pop
leave
or
nop
and
lock
test
in
inc
mov
push
icebp
aam
imul
adc
pop
out
and
xor
icebp
inc
sahf
sbb
xor
insb
ror
out
sti
pop
pop
in
adc
jo
cltd
leave
imul
push
cmpsl
pop
out
push
jmp
fdivr
into
lods
mov
xor
imul
ret
aas
jg
push
inc
pop
nop
sub
movb
loop
cld
add
orb
pusha
inc
pop
sbb
mov
adc
xchg
mov
pop
sub
roll
imul
cmpsb
cwtl
inc
mov
jne
test
rorb
nop
xor
nop
sub
mov
fs
sti
or
xchg
jbe
stc
pop
ror
xor
mov
mov
in
sbbl
je
inc
mov
adc
int
add
ret
dec
mov
sub
mov
push
pop
gs
dec
out
push
int
add
repz
xchg
and
inc
cltd
jmp
add
data16
push
mov
cld
push
inc
int
lods
mov
cmp
push
ljmp
sbb
out
and
jmp
cmp
jmp
add
fadds
or
adc
xor
sbb
movl
mov
cmp
sbb
sbb
es
cmp
test
xchg
and
test
jb
push
push
rolb
pop
aaa
add
stc
int3
scas
xor
or
adc
or
add
scas
lock
mov
imul
sub
loope
leave
push
scas
xchg
sbb
jo
inc
cmc
rcrl
push
mov
clc
jp
pop
test
push
and
rcrl
push
nop
adc
loopne
xorb
je
push
inc
jno
popf
out
cmp
pop
jo
outsl
inc
or
repz
gs
add
or
es
add
adc
aad
lea
shlb
adc
fiaddl
xor
mov
sbb
adc
out
fld
enter
inc
adcl
xchg
inc
pop
cltd
push
or
jo
pop
pop
mov
jbe,pn
negb
xchg
test
push
cmp
ja
xor
popa
push
xchg
sbb
cltd
fmul
mov
xlat
arpl
pop
subb
lods
jge
mov
shl
movsl
into
in
mov
roll
mov
mov
push
jle
in
pushf
movb
push
dec
xchg
and
test
add
outsb
in
cmp
adc
mov
jo
sbb
jb
lods
ret
repz
and
jmp
or
adc
mov
movsl
mov
and
loop
dec
mov
jo
xor
and
jns
sbb
ljmp
xor
popa
mov
test
and
mov
mov
sub
loopne
xor
push
cmp
adc
testb
pop
pop
les
push
jecxz
sbb
dec
movl
es
and
mov
popa
push
inc
filds
bound
and
add
sub
push
rclb
scas
test
and
push
sbb
scas
enter
pop
inc
push
shrb
push
jecxz
adcb
pop
or
imul
cmp
or
bound
cltd
inc
ljmp
stos
mov
insb
xor
mov
xchg
arpl
lret
outsl
fldt
call
jge
test
or
dec
mov
cmpsl
movsl
stos
and
jns
add
lahf
cmp
test
pop
inc
add
sbb
push
sbb
xor
or
in
imul
xor
mov
add
movsl
aas
push
pop
push
insl
stc
inc
repnz
mov
shll
push
pop
mov
repz
sub
divb
inc
dec
rcl
mov
mov
adc
mov
sbb
sti
out
or
fcomps
pop
push
add
fcomps
adc
movsb
inc
sub
in
dec
inc
or
rcr
dec
sbb
xor
loop
adc
data16
xor
lods
mov
enter
insb
adc
mov
data16
int3
ficompl
test
rcl
pop
test
push
mov
mov
cltd
and
mov
push
jae
push
push
inc
adc
inc
sbb
mov
cltd
adc
pop
mov
xlat
xchg
and
shlb
cmpsb
movsb
test
jmp
xchg
fs
arpl
bnd
mov
insl
adcb
out
cmp
sbb
mov
mov
or
inc
shr
jo
imul
add
sbb
or
and
data16
mov
inc
notb
add
test
ss
pop
test
add
push
repz
and
cmp
push
fbstp
lods
xchg
sbb
ss
pop
nop
iret
and
es
inc
xchg
js
pop
mov
and
cmp
mov
iret
sahf
ja
ret
xchg
daa
jecxz
or
enter
mov
jne
fcompl
mov
bound
sub
jle
or
loopne
dec
mov
cmp
roll
mov
inc
adc
mov
and
or
popa
pop
xor
and
or
mov
mov
sub
push
sbb
lcall
adc
mov
pop
push
out
dec
sub
jo
sub
ds
cmp
insb
ja
mov
mov
push
push
add
mov
add
fldt
mov
fsubrs
xchg
xor
insb
cld
leave
lods
mov
ss
nop
jecxz
mov
movsl
sub
dec
subl
or
aam
mov
pop
cmpl
ja
pop
jl
xchg
stc
jg
cmp
shrb
dec
les
sub
push
fiadds
mov
dec
cltd
scas
dec
dec
cmp
ret
xor
and
xor
sbb
rcl
push
mov
sbb
popa
push
sub
push
mov
mov
xor
lods
lea
fldt
mov
or
sbb
xchg
push
xor
push
cmp
aam
xchg
lret
mov
jbe
in
jle
test
imul
ds
orb
dec
inc
cmpsb
test
mov
lret
das
push
xor
cmp
and
xor
xchg
shlb
dec
sbb
scas
push
mov
lock
push
insb
insb
cltd
repnz
xchg
or
inc
shlb
insb
movsb
sub
stc
and
mov
xor
mov
mov
and
mov
leave
out
jl
or
cltd
cs
inc
leave
mov
inc
xchg
and
hlt
aad
mov
sub
int3
pop
pop
jne
ss
andl
push
adc
movsb
sub
adc
mov
bound
adc
adc
rorl
faddl
out
mov
mov
sbb
popa
scas
mov
pop
addr16
jnp
clc
inc
incb
enter
mov
shll
adc
jmp
jno
xor
and
test
or
orl
or
adc
or
fists
ljmp
xchg
push
dec
dec
push
add
sbb
stos
stos
mov
add
push
adc
pop
subb
xchg
cmpsl
lods
and
lret
aas
push
mov
dec
lret
sub
in
xor
push
lret
pop
sbb
and
and
test
ss
lret
shll
shl
cltd
pop
xchg
mov
sub
adc
and
clc
adc
mov
xchg
dec
inc
sub
xor
mov
loope
mov
push
add
rolb
repnz
rolb
pushf
lahf
fadds
mov
pop
pop
mov
pop
rdmsr
adc
xlat
fnstenv
mov
push
shrl
enter
xchg
dec
push
mov
xor
or
sbb
loope
call
inc
in
sub
sbb
outsb
repnz
call
mov
subl
sub
pop
loop
iret
cmp
gs
in
imul
mov
or
sbb
mov
int
pop
ljmp
cmpl
push
add
lahf
cmp
inc
addb
cmp
xor
sub
js
shll
sbb
add
or
pop
lds
cmpsl
mov
inc
mov
add
inc
mov
adc
popa
or
and
cltd
jmp
ror
aas
jb
lods
clc
mov
pop
into
add
fs
in
fcmovb
pusha
adc
nop
inc
lock
cmp
mov
popa
aam
dec
push
adc
pop
xchg
xor
rcrb
mov
inc
ret
adc
pop
pop
mov
aad
loop
sbb
pushf
xor
lcall
push
jno
in
jl
mov
out
stos
dec
push
fidivrs
cmp
jnp
pop
imul
cmpsb
dec
mov
pop
push
dec
and
dec
add
call
insb
das
jmp
aaa
fidivl
fs
repz
rolb
and
pusha
jnp
shll
mov
daa
dec
mov
jmp
cmp
rcll
pop
inc
inc
xlat
imul
test
cmpsl
cmp
inc
pop
mov
push
aaa
mov
imul
cs
xchg
add
cmpsb
push
sub
jae
or
sub
lds
mov
xchg
add
dec
mov
mov
xor
pop
cwtl
cmpsb
shll
push
push
imul
mov
sbb
sbb
icebp
movsb
in
les
lea
dec
mov
adc
pop
insb
adc
in
imul
and
push
inc
dec
jnp
scas
mov
sub
mov
in
test
and
mov
sub
mov
mov
mov
and
fidivl
adc
cli
mov
jecxz
dec
ja
pop
int
pop
mov
mov
push
mov
lret
into
inc
data16
cmp
dec
xchg
xor
xchg
sub
push
and
in
mov
sub
sub
movsb
mov
xchg
enter
push
lods
dec
mov
in
pop
lret
dec
lds
cmp
not
repnz
xor
push
mov
pop
imul
or
pushf
cltd
add
dec
les
dec
xorl
pop
pop
stos
lret
cmpsb
and
out
push
and
inc
rol
push
adc
jae
cmpb
aam
mov
mov
call
test
nop
xlat
gs
inc
ret
dec
insb
mov
push
clc
pushf
rclb
int
ds
mov
mov
xchg
push
das
xchg
dec
leave
jge
mov
inc
push
lcall
or
das
mov
mov
add
adc
pop
xlat
mov
mov
push
shlb
dec
scas
sahf
ja
rcl
aaa
push
movsl
mov
in
cwtl
clc
xor
ret
mov
adc
push
outsb
push
scas
mov
and
das
lods
fisttpll
cmpsl
mov
pop
in
arpl
pushf
and
add
pop
sbb
mov
inc
hlt
stos
arpl
out
cmp
fsubrs
mov
jno
dec
aaa
das
pop
or
inc
add
dec
sub
subb
mov
sbb
ret
jecxz
hlt
sub
jne
mov
mov
sbb
add
cmp
xor
test
movsl
dec
shll
sbb
movsb
sahf
or
movsb
push
mov
xchg
mov
mov
pop
hlt
push
add
jg
aam
or
popl
in
cmp
mov
jp
dec
shlb
pop
xor
mov
movsl
mov
pop
xchg
push
mov
cmp
xlat
imul
shl
mov
pop
das
iret
test
enter
in
jno
mov
mov
lock
lods
fs
in
bound
xchg
dec
shlb
sub
xchg
cmpsl
or
jns
and
mov
mov
pmullw
lods
mov
mov
test
and
xor
pusha
lret
sub
test
ds
popf
or
in
addl
stc
cs
pop
or
pop
adc
loop
cmp
lret
cwtl
jo
cld
add
mov
rclb
mov
scas
jl
stos
bound
sub
adc
jge
sbb
cmpsb
andl
test
add
cmc
mov
push
repnz
fmuls
and
mov
lret
pushf
shlb
jmp
sete
stos
sahf
dec
mov
jnp
int3
push
aam
jo
data16
jns
mov
sub
cmp
jo
pusha
mov
sahf
dec
inc
sbb
lods
inc
fisubl
mov
jno
ss
int
xor
pusha
aaa
clc
into
bts
xchg
sahf
mov
rcll
lods
and
jl
lock
test
add
int
push
pop
dec
add
pop
scas
add
insb
fdivl
adc
cwtl
and
inc
and
dec
or
roll
sbb
or
xchg
or
rcr
cmp
jecxz
and
outsl
sbb
or
fcoms
or
mov
int3
ljmp
sub
inc
inc
mov
movsl
mov
xchg
pusha
fmuls
nop
jb
pop
cmpsl
xor
mov
cli
sub
xor
stos
stos
jno
and
dec
mov
aad
add
cwtl
das
mov
sub
outsl
jle
mov
out
cmpsb
and
repz
add
and
add
add
sub
mov
mov
scas
adc
shrl
in
cs
add
sub
push
xor
jb
icebp
add
negb
jle
sub
jmp
ffree
jecxz
fisubs
pop
lret
orb
fld
push
rol
and
stos
popf
mov
iret
loop
push
inc
and
push
mov
mov
jge
out
stos
bnd
test
loopne
ret
ret
mov
gs
xor
movsb
adcb
mov
mov
in
inc
mov
inc
dec
or
loopne
in
mov
addr16
orl
lcall
sub
xor
scas
inc
mov
je
adc
shlb
inc
mov
lock
jmp
out
outsb
movsb
out
adc
or
orb
ljmp
and
cli
mov
sub
and
adc
pusha
into
mov
push
jns
pop
or
cs
mov
ss
fwait
add
mov
mov
loope
jge
xchg
push
inc
mov
lock
xchg
cs
ja
push
adc
shrl
subl
jecxz
inc
mov
jle
in
push
and
mov
int
sti
jg
sahf
cmc
lds
pop
pop
adc
sti
or
cmp
dec
fs
or
out
xlat
mov
f2xm1
push
sub
addr16
inc
and
pusha
ljmp
xor
inc
xor
push
push
xchg
cmc
popa
and
scas
mov
fsubrl
and
jnp
stc
jl
fwait
pusha
loopne
push
dec
push
pop
sub
inc
gs
sub
dec
mov
sub
fadds
clc
in
xchg
ds
push
add
and
std
leave
inc
aad
push
fdivrl
push
xchg
push
sub
mov
xchg
stc
xchg
iret
mov
sbb
push
scas
xchg
adc
movsl
jo
aaa
mov
pop
fadds
negl
out
cwtl
pop
push
pop
test
out
test
mov
lret
inc
out
xchg
mov
cmp
push
in
and
xor
mov
out
enter
mov
loope
pusha
pop
shll
enter
jb
xchg
and
repz
rorl
jo
add
and
add
ret
adc
mov
xchg
dec
inc
aad
pop
cli
xor
adc
mov
push
test
inc
sbb
das
jne
add
jnp
add
filds
push
insl
inc
fistpll
inc
jne
sub
inc
jge
cmc
cli
divl
pop
push
inc
aad
jmp
icebp
pop
jmp
das
inc
push
pop
mov
xchg
dec
cli
popf
incb
mov
xchg
pop
stos
das
mov
jns
dec
mov
push
xchg
jge
leave
pop
shlb
mov
mov
shlb
addl
int
js
jmp
or
mov
dec
adc
popf
sub
push
jno
adc
aad
hlt
fwait
lahf
inc
test
push
push
data16
xchg
inc
dec
push
add
jns
pop
xchg
inc
add
in
icebp
movsl
std
jnp
lods
sbb
and
repnz
push
rcl
pop
cwtl
dec
add
pop
and
aam
int
iret
es
xorb
pop
lret
cmpsb
pusha
pop
insb
aad
mov
jp
arpl
push
je
inc
sbb
pop
xchg
aad
pop
lods
subb
inc
add
shlb
push
lods
or
inc
fisubl
mov
push
inc
mov
xchg
add
es
lret
jbe
mov
pop
loopne
push
iret
scas
aad
adc
loopne
jmp
cmp
cmp
inc
in
int3
pop
jno
in
decb
add
inc
or
ja
add
sub
mov
cs
or
es
fmull
shrb
pop
loope
add
push
and
jne
adc
inc
mov
in
inc
mov
or
mov
cmp
xor
sub
inc
mov
or
sub
gs
mov
xchg
dec
in
sub
inc
movsb
rorl
rcl
xor
ret
add
sti
imul
lock
rcll
and
and
adc
jbe
je
fsubrs
cmp
sbb
adc
pop
test
adc
mov
cmp
add
lret
repnz
les
hlt
and
mov
add
xor
dec
xchg
and
pop
arpl
xchg
dec
and
or
inc
dec
lds
cmp
cmp
test
mov
ss
decb
jecxz
cmpsl
jno
pop
jp
lret
mov
pop
add
nop
inc
cmp
mov
fiaddl
scas
mov
pusha
movsb
fs
subb
das
inc
aas
mov
stos
fdivs
rorb
push
and
sub
enter
leave
inc
cwtl
popf
js
aad
or
mov
push
adc
adc
pop
inc
cwtl
popa
pop
xor
and
jae
lods
mov
mov
pop
push
sub
xor
movsb
lock
dec
inc
insb
jns
dec
jns
fisubrl
add
mov
orl
scas
inc
mov
pop
test
sub
loop
rcrl
mov
inc
aad
pop
cmpsl
adc
sbbl
das
cmpb
mov
xor
loop
cltd
pop
je
cmpsb
and
sahf
adc
mov
bound
or
jae
je
aad
push
fbstp
push
fmul
pop
mov
fidivs
jecxz
xor
std
or
sub
add
inc
icebp
js
cwtl
enter
notb
or
and
mov
adc
or
rcr
llwpcb
lods
arpl
push
test
frstor
in
in
push
and
add
mov
lahf
mov
movsl
mov
mov
dec
adc
xchg
mov
or
adc
insb
xchg
scas
pop
adc
mov
sbb
arpl
push
xor
iret
mov
stc
push
add
mov
adc
jle
mov
aam
or
xchg
gs
into
mov
mov
movsb
sub
cmp
pop
fwait
pusha
repz
loop
xchg
sbb
pop
xchg
or
imul
push
inc
mov
mov
xchg
xchg
mov
jge
xor
pushf
adc
adc
mov
jnp
fcompl
aam
add
inc
jne
mov
and
xchg
jbe
mov
xor
xor
fldl
fnsave
jmp
in
inc
cltd
pop
roll
push
rcll
mov
pcmpeqd
mov
xchg
mov
xor
push
aad
in
cmp
push
jmp
loop
jno
iret
sub
std
fidivl
dec
in
sub
push
pop
fcmove
xchg
fsubp
dec
jp
pop
addl
pusha
mov
fwait
mov
cwtl
cwtl
sub
rorl
lods
stos
aam
ljmp
mov
mov
xchg
fwait
adc
dec
fs
adc
scas
xchg
out
xchg
inc
pusha
aad
sub
loopne
xor
mov
mov
push
pop
xlat
mov
sub
jae
inc
mov
mov
fucomp
cmpsb
jno
xchg
push
std
pop
jbe
cmp
sbb
test
pop
stc
pusha
push
or
cmp
movsb
pusha
dec
xor
adc
jge
push
pop
jmp
push
test
jmp
fsubrl
mov
popf
jbe
test
out
and
xchg
and
loop
out
inc
xchg
faddl
loop
mov
imul
sbb
shrl
movsl
insl
int3
and
pop
jne
loopne
pop
les
les
movsl
dec
mov
arpl
cmc
sub
mov
cwtl
push
mov
inc
nop
xor
pop
fstpt
scas
scas
inc
bound
out
mov
and
insl
xchg
out
arpl
dec
and
cmp
orb
sub
idivl
pop
xchg
fdivr
imul
push
mov
add
push
xor
push
jmp
fisubl
gs
sub
int
rclb
mov
ret
aas
mov
test
test
sub
sbb
out
fstpt
pop
loope
jmp
sahf
out
cmp
in
jns
and
stos
inc
imul
mov
pop
or
clc
and
jno
int
mov
mov
jmp
push
pop
or
inc
sbb
icebp
push
cmp
sar
into
jecxz
lods
stos
lods
je
dec
push
sbbb
sbb
mov
mov
push
out
ljmp
and
sbb
xchg
mov
lcall
aad
or
xchg
aam
lahf
add
in
sub
inc
loopne
out
xchg
and
and
sub
mov
scas
xor
mov
push
fs
mov
loope
mov
inc
inc
mov
push
cli
lcall
push
loope
lret
mov
clc
pop
sub
daa
mov
orl
in
mov
or
sub
mov
test
and
adc
aam
sub
dec
or
scas
mov
jno
adc
push
pop
mov
add
xor
mov
dec
push
flds
lods
add
push
cld
js
and
add
mov
push
addr16
into
pop
aam
pop
sbb
xchg
pop
fisubrl
popf
sahf
mov
lock
inc
ret
inc
shlb
push
lahf
shr
push
pop
dec
std
fsts
xchg
inc
jne
push
jge
loop
or
jno
pop
and
add
ljmp
sbb
push
mov
pop
pop
aas
addps
xchg
adc
pop
mov
imul
adc
mov
lea
int
jbe
inc
dec
scas
add
and
push
or
aad
in
int
stos
push
sub
ja
addb
mov
sahf
cwtl
cmp
iret
stos
fisttps
lahf
cs
inc
inc
or
dec
xchg
push
add
loopne
xchg
adc
pop
pop
sub
out
mov
lods
mov
add
adc
mov
ror
arpl
lea
mov
mov
cmp
xor
pop
insb
or
ret
mov
adc
push
cmc
mov
cltd
xchg
inc
push
movsb
push
xorb
xchg
cmp
iret
adc
xchg
mov
jge
out
push
imul
scas
push
and
dec
jl
push
gs
xchg
pop
rcll
mov
add
jb
shll
pop
mov
push
push
dec
dec
aas
cli
xchg
test
pop
xchg
adc
aaa
jno
rorb
mov
jg
xchg
sbb
fwait
or
pushf
inc
gs
out
and
or
dec
std
jp
pop
add
aam
or
pop
xor
or
fildl
adc
leave
jecxz
sub
dec
xchg
test
mov
add
loope
add
mov
pop
xchg
push
shrb
xor
lea
jl
push
aas
test
lahf
sarl
test
adc
xor
push
movsb
mov
fnsave
data16
fcoms
in
cld
pop
fcomp
inc
cmpsl
data16
push
les
mov
mov
adc
into
lock
pop
mov
xor
xlat
and
dec
jno
movsb
add
out
shrb
sub
cmpsb
sbb
push
inc
xchg
xor
or
and
test
and
xor
xchg
aaa
rorb
sbb
dec
fldt
xor
in
lcall
aam
lods
in
inc
jo
pop
jmp
lock
xor
fists
addr16
les
mov
ret
pusha
inc
pop
pop
inc
and
test
mov
sbb
sbb
das
fmulp
test
test
in
popf
jge
sbb
lahf
cli
fwait
push
jg
test
pop
mov
sahf
inc
cmp
rolb
xchg
add
push
adc
pop
inc
mov
cmp
mov
in
lods
insl
loope
jg
popf
pop
adc
and
sbb
insl
filds
ret
cmpsl
cmp
ret
mov
add
xlat
int3
dec
lods
jge
jmp
add
sbb
sbb
mov
out
sub
jns
or
sbb
inc
sub
inc
outsl
xchg
inc
jbe
arpl
in
jno
push
push
cmc
inc
inc
outsl
xchg
rclb
aad
scas
mov
adc
icebp
fstl
mov
cmpsl
or
cmp
push
movsb
aaa
add
push
sub
mov
jbe
xchg
ss
cmp
int3
xlat
push
test
stos
or
mov
cmpsl
inc
mov
inc
popa
jle
icebp
lock
sub
call
jo
addr16
daa
aas
lret
pop
inc
test
mov
mov
add
or
mov
cmp
repnz
sbb
sbb
or
mov
in
stos
movsl
mov
mov
mulb
sarb
pop
dec
xor
inc
adc
jbe
idivb
movsb
pop
xlat
add
jg
inc
and
mov
adc
and
and
push
rorb
jp
lea
cmp
dec
lea
inc
jge
mov
push
into
xchg
lock
sub
clc
push
push
inc
mov
push
and
in
xchg
sub
mov
mov
push
or
pop
xchg
outsb
inc
out
repz
movsb
popa
xchg
ret
mov
daa
jbe
imul
cmp
out
cvttps2pi
mov
aas
mov
lret
inc
push
xchg
xchg
imul
aad
in
adc
hlt
clc
inc
sub
pop
notb
xor
je
sbb
sub
jg
aas
and
and
loop
or
mov
mov
test
lcall
xchg
ret
inc
lods
cmpsl
xchg
rolb
mov
sub
call
lea
nop
lret
xor
sub
mov
dec
lahf
xchg
mov
push
mov
sbbl
xchg
pop
popf
dec
mov
test
sub
sbb
fwait
inc
clc
addr16
cmc
push
cs
shll
sub
test
or
cmp
rorb
and
fbstp
xchg
movsb
inc
mov
flds
sar
insl
and
pop
sbb
sti
loope
mov
scas
cmpsl
sub
popa
and
mov
enter
jp
xchg
xor
pop
add
push
sub
stc
mov
sub
dec
bound
test
pop
fistl
in
arpl
pop
dec
add
negl
pop
rorb
and
neg
in
ljmp
jno
aam
leave
push
or
test
jno
xor
fwait
test
popf
fidivl
xchg
pop
jecxz
pop
divb
mov
add
jecxz
push
xor
cli
or
and
lret
xor
addr16
gs
iret
lods
mov
fsubrl
fsubs
mov
bound
repnz
in
jg
sahf
mov
repnz
pop
les
aam
and
das
into
mov
pop
and
inc
addb
inc
push
mov
cmp
inc
push
push
push
lods
dec
lea
push
jmp
popf
insb
jns
push
mov
xchg
push
jns
imul
cmp
xor
pop
les
aad
adc
sbb
pop
ja
and
cmpsl
ja
push
loop
or
and
js
bound
or
jns
int
inc
inc
dec
iret
inc
sub
jmp
inc
cmc
nop
push
rorb
inc
sbb
inc
inc
push
aas
push
loop
stc
and
mov
mov
shlb
sub
push
stos
lret
cmc
cmc
icebp
sahf
dec
push
push
outsb
push
sub
stos
or
add
decb
mov
or
icebp
sahf
inc
or
shl
jecxz
xor
decl
mov
imul
int
daa
mov
pop
push
lcall
lahf
rorb
outsb
js
pushf
icebp
into
in
pushf
sbb
inc
push
clc
inc
loopne
repnz
shlb
lcall
test
test
test
mov
shll
mov
adc
xor
dec
pop
mov
and
lds
mov
nop
adc
dec
rolb
sub
pop
pop
jb
movsl
out
jg
inc
shr
push
push
cltd
sub
mov
mov
aaa
or
stc
inc
popa
arpl
xor
xchg
scas
jmp
xchg
sti
pop
mov
enter
and
test
nop
cmp
or
push
in
add
lds
add
je
pop
stos
jo
into
movsl
fstl
mov
fiaddl
decl
inc
pop
xor
add
adc
aas
int3
sbb
aaa
xchg
in
mov
jge
pop
test
push
cmpsl
push
jae
out
call
test
jb
clc
inc
lahf
jmp
mov
xor
fwait
or
or
xor
sub
into
jge
loopne
or
or
xchg
mov
rol
pop
xchg
movl
ret
ja
xchg
push
repz
cs
dec
pop
inc
mov
mov
cmpsl
es
pusha
pop
lods
or
xorb
ss
clc
pop
fucomi
hlt
icebp
sub
dec
fdivl
dec
mov
mov
shll
sub
dec
mov
stos
xor
adc
sub
mov
and
mov
out
bound
jns
add
pop
das
pop
in
cmp
push
popa
push
xchg
push
mov
dec
mov
data16
popa
pop
ss
push
sub
lods
pop
aaa
jge
push
pop
fiadds
and
cmp
sti
xor
iret
lods
lea
out
pusha
mov
loopne
push
inc
inc
shl
roll
aam
fistl
jmp
mov
pop
adc
xchg
jb
imul
jnp
inc
enter
sarl
ret
cmp
pusha
mov
fmul
xor
leave
stc
test
mov
out
adc
push
and
das
das
movsb
push
cmp
aad
mov
add
pop
xor
test
das
lahf
pop
mov
rolb
repz
xchg
push
pusha
fdivrl
cmpsl
call
pop
mov
ja
int3
mov
ss
stos
mov
pop
mov
xor
pop
fldenv
cmp
daa
add
xchg
imul
stos
jne
sti
mov
cmpsb
outsb
stos
pop
sub
mov
sub
or
inc
aam
xchg
dec
js
dec
jo
and
sarl
aaa
and
test
inc
dec
mov
mov
cld
test
dec
push
stos
or
jo
mov
mov
sbb
sahf
loope
sub
cmp
int3
das
iret
ds
pop
insb
int
xorb
sahf
push
aaa
push
mov
sub
and
test
rolb
pop
rcrl
jo
lock
and
bound
enter
stos
adcb
jnp
test
cmpb
jle
jo
stos
or
mov
add
pop
sub
pop
inc
mov
test
mov
xor
repz
pop
addb
mov
bound
popf
sub
fs
lock
xor
enter
lds
sbb
cld
add
add
test
addr16
js
adc
mov
fimuls
dec
push
stos
dec
xchg
pop
push
push
mov
test
rorl
outsl
mov
and
jmp
xchg
push
mov
inc
mov
mov
xchg
aaa
lock
jns
mov
test
mov
add
push
mov
adc
ljmp
dec
adc
ljmp
pop
sahf
push
xchg
mov
cmpl
pop
lods
rep
cmp
dec
dec
sbb
sbb
or
mov
sbb
xlat
push
push
add
les
sahf
call
cmc
sub
jbe
lock
push
pop
sbbl
and
dec
push
je
or
push
orl
inc
push
sbb
inc
mov
movsb
adc
sub
lea
pop
fnstenv
xor
sbb
mov
adc
mov
sbb
inc
xor
and
aad
xor
adc
es
adc
test
sbb
ss
and
push
data16
enter
pop
sub
lea
and
fdivrs
xchg
fwait
insl
mov
dec
and
in
mov
subb
popf
jns
dec
dec
outsl
jecxz
xchg
aam
jecxz
insb
jns
movsl
pop
mov
xor
mov
xor
mov
mov
sbbb
jno
pop
inc
int3
hlt
or
adc
stc
ror
in
adc
clc
popf
fsts
or
mov
adc
ds
repnz
aam
pusha
into
aas
adc
hlt
inc
and
mov
pop
rorl
jmp
rcrl
adc
enter
in
and
inc
push
add
mov
insb
mov
icebp
jmp
add
or
mov
adc
or
xor
jnp
inc
adc
mov
xchg
push
push
nop
jmp
push
jne
push
test
mov
cmc
pop
cmpsl
mov
inc
xchg
lcall
lahf
sbbb
push
mov
cmp
enter
dec
dec
orb
dec
adc
sub
or
fdiv
pop
xchg
iret
jbe
and
jp
test
lock
es
inc
cmpb
pop
sub
ss
sub
cmp
and
mov
cmp
adc
lret
ret
xor
std
outsb
arpl
xchg
xchg
sarl
jge
push
cmp
add
xlat
or
dec
or
jns
inc
call
pop
out
shll
nop
fs
in
aam
add
lds
sub
push
mov
inc
sub
jp
push
xchg
das
push
repz
popa
jae
sub
push
out
pop
ja
popf
fldl
xchg
sti
jecxz
jo
mov
es
lds
xchg
icebp
vdivpd
or
add
dec
stos
add
or
repnz
inc
xchg
notb
sbb
inc
and
sub
sub
lea
daa
push
or
push
shrb
repnz
mov
push
arpl
lret
sbb
cmp
push
gs
adc
and
cmp
pop
cld
sub
jnp
js
mov
in
xor
add
lods
repnz
xchg
out
cwtl
jo
push
movsb
dec
scas
jb
jg
test
stc
push
std
andl
mov
or
cmp
insl
add
pop
mov
jb
sbb
pop
in
dec
push
adc
jno
dec
aad
push
test
sbb
into
or
out
sbb
or
xchg
das
cmp
mov
addl
mov
sub
push
xor
jecxz
leave
stos
push
loope
cs
pop
dec
push
int
cmp
popa
rcrb
lds
mov
sub
cmp
push
pop
movsb
and
push
xor
inc
push
lods
jp
add
mov
pusha
jg
mov
jge
icebp
mov
dec
mov
mov
testl
ret
lea
gs
cmc
and
jl
mov
shlb
daa
sahf
adc
and
and
push
into
dec
es
jnp
push
divb
imul
xchg
sbb
jae
fcmovu
test
push
icebp
orb
imul
or
loop
mov
add
mov
cs
cmp
dec
push
mov
notb
jmp
inc
and
fsubrs
mov
sub
add
jne
aad
lods
push
mov
sbb
sbb
mov
xlat
addr16
mov
add
mov
jge
ss
test
mov
sbb
fscale
jg
cmpsl
xchg
xchg
rorl
xor
mov
lahf
popa
jae
test
xchg
pusha
xchg
and
or
dec
orb
xor
call
fldcw
stc
inc
popa
pusha
push
jle
push
leave
mov
xor
in
cwtl
and
inc
inc
push
int3
imul
xchg
mov
mov
fdivs
lods
imul
fidivl
mov
jmp
repnz
jns
fwait
add
ds
cltd
fmull
cmpsl
sub
push
xor
lods
pop
ret
inc
xchg
loopne
je
pop
std
scas
pop
ss
inc
loopne
es
pusha
or
cmp
scas
lods
inc
pushf
cmc
jmp
hlt
xor
pop
xlat
push
mov
cwtl
cwtl
adc
stc
fisttpll
ds
fnstenv
pop
dec
cmp
ja
add
gs
mov
push
cmpsl
sbb
adc
mov
enter
in
mov
inc
fs
mov
js
lahf
cmpsb
and
ret
stos
mov
cmp
mov
loop
aad
loop
jno
push
shlb
lods
enter
dec
or
dec
xlat
jg
adc
push
imul
fists
fs
adc
test
push
mov
push
movsb
xchg
sub
out
mulb
mov
mov
out
pop
inc
fistpl
lods
hlt
or
clc
outsl
sub
sub
je
lea
push
or
cmp
call
lahf
std
out
push
scas
jno
aas
xchg
enter
idivl
push
adc
mov
daa
pop
adc
add
mov
or
mov
es
xor
fistl
fcmovnbe
mov
add
xchg
nop
jge
fidivl
mov
dec
lods
mov
fwait
mov
sti
xchg
sbb
sbb
jae
repz
and
ja
jns
loope
pop
call
pop
jns
mov
outsl
dec
in
pop
push
pop
in
jns
pushf
or
cld
pop
xchg
jl
iret
mov
inc
icebp
outsb
bnd
jbe
inc
mov
mov
sub
loopne
sub
adc
push
daa
aaa
gs
lea
mov
mov
into
jmp
test
hlt
lea
ljmp
in
adc
mov
cmp
pop
mov
call
xchg
xlat
loop
inc
adc
sub
xchg
mov
push
mov
inc
dec
sti
or
jbe
sub
xchg
inc
inc
mov
mov
adc
and
jle
mov
popf
mov
jge
sub
ss
mov
adc
jo
lret
sub
mov
xor
mov
mov
or
cwtl
xor
dec
inc
mov
mov
mov
repz
es
daa
sub
mov
add
out
jge
pop
push
sub
xchg
inc
push
sub
mov
jne
cwtl
mov
or
and
and
arpl
imul
jno
adc
or
push
addr16
sbbb
cs
xor
aam
loopne
add
push
movsb
addr16
xorb
or
mov
inc
cli
or
pop
sti
jns
sub
push
sub
movsl
mov
sbb
lea
movsl
xor
or
loopne
xchg
orb
xor
fucom
icebp
les
lock
sbb
das
decb
jmp
sbb
shll
xor
or
addl
popa
mov
pop
insb
std
push
push
add
dec
div
pop
aad
clc
stos
rol
add
push
fs
xchg
nop
adc
sub
aas
pop
test
loop
mov
push
inc
mov
push
push
pop
pop
sbb
fdivs
xor
pop
mov
out
sbb
push
fs
pop
mov
xor
jns
pop
loop
bound
sbb
push
xorl
push
mov
jno
dec
add
das
xchg
pop
dec
mov
arpl
loopne
fs
dec
addr16
push
adc
dec
push
and
into
clc
mov
mov
push
cli
jbe
pop
sahf
addr16
dec
stos
enter
inc
enter
mov
addr16
arpl
popf
lret
popf
fwait
mov
inc
dec
out
push
inc
add
imul
popf
xlat
mov
loop
es
aaa
push
push
xor
mov
or
cmp
xchg
push
xchg
test
outsb
pushf
lret
cmp
fdivs
rol
shl
js
sub
in
arpl
fxam
or
fwait
mov
test
mov
lods
dec
repnz
or
mov
dec
cs
adc
or
mulb
ss
lret
nop
cwtl
pop
dec
adc
in
cwtl
jl
aam
roll
shll
sub
shlb
jge
rol
sbb
rcll
inc
clc
inc
mov
ds
push
sbb
jge
and
nop
jae
jno
adc
lcall
inc
jnp
adc
ljmp
fistps
int
mov
sub
aad
jbe
pushf
jnp
ja
nop
or
out
push
sti
or
mov
repnz
adc
add
outsb
fisttpl
mov
inc
adc
mov
sbb
add
cli
scas
cmp
or
loopne
and
adc
inc
or
and
mov
in
push
outsl
dec
mov
inc
sub
adc
or
stos
mov
movsl
add
mov
cmp
inc
es
fucompp
js
or
ret
mov
push
lcall
lcall
dec
mov
jl
test
inc
test
inc
aas
adc
cmp
cwtl
clc
adc
call
jbe
rcrb
outsb
adc
push
icebp
mov
adc
movsb
insl
bound
or
and
les
insb
adc
dec
subb
adc
and
aam
test
fwait
mov
ret
dec
movsl
inc
xor
mov
mov
es
push
fwait
sub
inc
push
inc
insb
mov
loopne
hlt
les
mov
rcrl
shl
cwtl
cmp
or
mov
fdivl
mov
or
and
mov
fldt
sbb
dec
add
mov
cwtl
ss
sub
test
and
sub
cmpsb
dec
cmp
ss
fiaddl
and
inc
mov
add
inc
push
xor
lock
mov
and
popf
das
jle
frstor
lock
cmp
in
inc
xchg
xchg
aaa
adc
and
test
bound
mov
popa
add
test
call
loopne
ds
stos
ret
imulb
mov
mov
pop
movsl
pop
adc
dec
stos
ret
push
and
enter
mov
cmpb
mov
mov
mov
ss
adc
add
or
mov
test
jnp
sub
sbb
push
xchg
lret
rol
inc
andb
push
lods
popf
cmp
cmc
stos
stos
pop
xchg
and
call
popf
cmp
jl
xchg
outsl
out
cli
sti
ret
lret
mov
lods
shlb
mov
push
out
fldl
xor
jg
fnstsw
mov
xchg
dec
push
jge
frstor
movsl
mov
aaa
sbb
jge
mov
sti
stc
fcomp
fwait
sti
lods
mov
gs
nop
mov
pop
jg
add
inc
push
js
andl
sub
loopne
inc
dec
stc
sti
jge
jne
and
lods
fwait
icebp
sti
dec
or
mov
cmpb
mov
rclb
jo
push
gs
shrb
mov
int
icebp
xlat
ret
cmp
test
xor
es
sub
popa
mov
int3
lret
push
pusha
pop
pusha
enter
enter
in
or
ss
jo
scas
subl
inc
sbb
and
push
mov
inc
insl
push
mov
movb
cli
stc
inc
add
ss
hlt
mov
cmp
jge
cmp
cmp
dec
ficoml
std
lahf
idivb
mov
push
or
cmpb
or
sbbl
lods
fidivrl
test
push
bound
fdivrs
add
jp
mov
lds
test
into
rcrb
repnz
icebp
mov
lcall
jmp
pop
push
fbstp
inc
mov
pop
jle
adc
push
inc
sbb
push
rol
mov
repnz
insl
dec
mov
dec
es
inc
adc
dec
cwtl
rcrl
and
push
pop
lret
mov
daa
test
cmc
movb
mov
adc
pop
lret
cmp
mov
pusha
add
addl
addl
leave
jmp
push
inc
imul
mov
adc
aad
aam
mov
add
add
push
pop
xor
jp
xor
xchg
jne
push
lea
jmp
inc
mov
xor
stos
mov
xlat
lods
mov
xor
nop
fwait
push
aaa
sarl
and
lods
jbe
ret
mov
jl
clc
add
insb
mov
or
pushf
cld
pusha
jge
subb
sub
clc
popa
sti
sub
stc
jb
mov
jge
pop
movsb
mov
mov
fisubrs
loopne
push
xchg
mov
mov
jl
mov
add
sub
rolb
xchg
je
pop
or
cmc
adc
mov
pop
imul
fldcw
or
mov
lods
pop
sub
xor
push
push
push
adc
jmp
test
test
andl
mov
or
repnz
jns
fwait
test
iret
sti
xchg
shrb
cmp
push
or
sub
gs
add
lahf
push
mov
xor
or
mov
lret
mov
dec
test
fadd
in
and
xchg
xor
sbb
lcall
xor
jmp
adc
test
stos
mov
out
stos
sub
sti
stos
ficoms
bound
rcrb
and
mov
push
push
xlat
shr
push
fsubs
pop
mov
loop
pinsrw
sti
lds
mov
lahf
xlat
dec
mov
fists
mov
add
add
pop
adcl
push
sti
mov
xor
sbb
iret
adcb
or
xchg
cmp
movsb
push
inc
aad
add
addl
daa
mov
mov
loopne
mov
iret
aad
push
scas
inc
sbb
mov
jnp
push
sub
cmp
out
pop
fbstp
stos
mov
rolb
cli
mov
and
mov
pop
mov
mov
daa
sub
movsl
push
xchg
xchg
dec
or
loop
mov
test
or
xchg
push
jb
cltd
loop
push
cli
stc
xchg
js
repnz
pop
or
xchg
negl
aam
or
mov
adc
inc
mov
gs
xor
pop
lods
push
mov
jmp
cmp
dec
or
in
dec
push
fdivl
pop
aad
cld
mov
dec
repnz
cmc
sbb
insb
adc
pop
xchg
nop
adc
xorb
fldenv
and
test
or
fs
inc
cld
pop
push
pop
in
shr
cmpb
mov
mov
ljmp
lods
shlb
push
xlat
cmpsb
jg
mov
inc
adc
ret
stos
push
dec
jae
dec
mov
add
mov
jno
push
add
test
cmpsl
stos
mov
dec
das
pusha
mov
sub
inc
lea
cmp
pop
les
sub
repz
les
push
es
cwtl
pop
mov
jmp
push
in
xor
or
pop
outsb
mov
enter
lea
sub
adc
test
nop
inc
adc
leave
gs
in
jb
jns
add
mov
mov
sbb
xor
add
das
roll
sarl
stos
aad
inc
das
cwtl
jp
pop
fsub
lret
mov
movsl
sub
outsl
and
subb
sbb
rorl
shl
mov
enter
ret
pop
jg
mov
and
and
xorl
sahf
pop
inc
sub
fistps
push
add
push
in
jl
adc
mov
push
mov
xchg
ficomps
dec
pop
mov
cli
data16
jae
add
in
negb
inc
sub
dec
xchg
mov
ret
xor
cld
repnz
mov
or
mov
lret
dec
pusha
stos
ret
stos
scas
or
jg
sub
idivb
jecxz
cmpsl
jmp
add
pop
pop
fcmovnu
cmpl
in
add
jbe
test
or
inc
dec
out
movsb
jmp
inc
test
cwtl
jecxz
lret
fdivrs
add
dec
gs
sub
cmp
adc
outsb
inc
movsb
loopne
loopne
and
dec
and
and
lcall
or
dec
call
int3
inc
inc
xor
int
cmp
je
sub
mov
clc
mov
cld
lcall
sub
sub
mov
fcompl
push
cmp
int3
pop
mov
sbb
inc
sub
ja
outsl
icebp
mov
add
add
sbb
cwtl
popa
inc
fs
idiv
dec
or
scas
je
xchg
cli
aam
push
push
movsb
xor
push
mov
add
cmc
mov
xchg
imul
jmp
jns
inc
rolb
jmp
add
fisttpll
fsub
pop
pavgb
mov
mov
mov
fisttps
push
jne
mov
lods
sub
cwtl
inc
repnz
and
push
or
push
push
lods
and
aaa
mov
or
jae
jns
mov
mov
clc
mov
push
lock
cmpsb
mov
inc
inc
mov
stos
xchg
jecxz
sahf
subps
pop
test
xor
push
cmc
in
addr16
sti
add
push
inc
mov
rolb
clc
mov
pop
mov
nop
sbb
mov
mov
dec
xor
inc
sbb
xchg
mov
outsl
add
cwtl
jae
push
imul
jne
rclb
push
cwtl
andb
and
and
or
les
and
sbb
data16
mov
add
add
fnstenv
and
cmp
movsb
loop
test
xor
sti
push
push
jno
je
insl
push
mov
daa
loopne
add
mov
frstor
lret
dec
orb
add
jns
cli
enter
sbb
xor
lods
dec
mov
xorb
test
xor
xchg
aaa
add
add
cmp
add
test
out
cmpsl
adc
push
add
pop
add
push
mov
push
inc
cli
mov
movsb
nop
cmp
or
subb
mov
data16
inc
xchg
push
and
push
push
pushf
rol
xchg
xchg
xchg
sub
test
js
int3
sub
or
test
xchg
mov
mov
xor
imul
jb
insl
es
or
call
mov
les
imul
lea
inc
cmp
inc
test
mov
dec
and
daa
or
xchg
mov
cmp
cmpsl
adc
or
adc
jle
cwtl
sub
or
hlt
xchg
ljmp
or
test
mov
sub
push
lret
rorb
inc
lret
add
gs
sbb
sbb
movsl
int3
inc
xor
mov
dec
imul
sub
and
lods
inc
push
cmp
jne
mov
pushf
fwait
sub
inc
adc
out
push
xor
les
loopne
mov
cmp
imul
inc
cltd
or
test
jmp
icebp
or
push
sbb
xchg
rcrb
dec
and
adc
adc
or
dec
or
int
filds
repz
pop
mov
in
mov
add
scas
inc
inc
mov
dec
test
and
adc
outsl
dec
int
mov
cwtl
dec
mov
rcr
xor
pushf
mov
cmp
rcll
mov
cmp
in
shl
ffree
sub
pushf
adc
repz
dec
pusha
dec
aaa
lds
push
lea
lea
arpl
push
mov
lahf
or
mov
lea
inc
sbb
and
fmull
mov
push
cmp
rcr
orb
sbb
push
inc
xor
pushf
test
jmp
popf
and
push
and
cmp
insl
jae
dec
xchg
jns
das
inc
sbb
add
inc
push
lea
mov
test
roll
imul
adc
out
inc
xchg
or
mov
push
sarl
leave
mov
ret
and
ds
sub
shlb
pop
lea
adc
mov
fmull
fimull
ds
mov
sub
fidivs
popa
mov
mov
push
fisttpl
push
pop
mov
repnz
ret
sub
jno
sbb
inc
sbb
xchg
inc
je
and
es
movsl
cli
add
mov
push
dec
arpl
std
push
xchg
jo
cwtl
or
and
aas
push
movsb
aas
outsb
adc
or
xchg
aaa
loop
nop
fmull
outsl
adc
movsl
push
in
pop
gs
fisubl
mov
mov
mov
das
pop
inc
jne
mov
push
add
push
xchg
mov
xchg
or
push
xchg
mov
aam
or
push
xchg
or
xor
adc
sbb
push
gs
add
and
adc
dec
addr16
fsubl
insl
pop
out
adc
mov
test
dec
xchg
and
or
aam
mov
adc
mov
iret
mov
cmp
rorl
rcrb
incb
pop
jns
cmp
sbb
inc
inc
jo
cmp
ret
rolb
and
or
or
or
sbb
and
inc
repnz
sbb
out
add
mov
xor
jmp
pop
and
inc
mov
ficoml
stos
mov
jo
xchg
insb
inc
jns
out
sbb
faddl
inc
inc
int3
cmp
pusha
sub
movsb
push
sbb
outsl
add
cmp
jo
out
inc
mov
push
shlb
aaa
ljmp
js
loope
sbb
and
sbb
sbb
enter
add
xor
push
cwtl
outsl
add
ret
mov
mov
and
pop
push
push
jmp
sbb
dec
add
cmpsb
mov
xchg
sbb
xor
xor
and
add
ss
fcmovnu
adc
xchg
punpckhdq
mov
push
push
data16
cmp
sub
adc
xchg
pusha
mov
xchg
and
sbb
outsb
rorl
cli
mov
sub
movsb
sbb
fisttps
and
or
cmp
xchg
sahf
pop
xchg
sub
jns
out
int3
or
insl
fwait
dec
ficoml
push
sub
mov
shr
xor
movsb
inc
fs
sbb
sub
mov
fs
sub
out
mov
mov
xor
xor
push
lods
lea
mov
sub
sub
fstl
maxps
cwtl
popf
push
cmp
mov
push
ljmp
mov
ss
push
add
and
fmull
inc
frstor
cmpsb
pop
test
lock
dec
mov
jns
dec
cmp
lock
scas
les
jae
outsl
pusha
and
cmpb
inc
xor
push
shl
loop
xchg
lods
or
or
jbe
aaa
or
pop
and
mov
xor
push
pop
sub
push
clc
sub
dec
dec
das
mov
pop
adc
iret
bound
adc
mov
dec
jle
and
xchg
insl
lahf
and
rcrl
cli
int3
fldt
test
push
out
jo
rclb
inc
lcall
fsubs
les
and
imul
adc
andl
push
adc
push
sti
les
inc
lods
jbe
int
lahf
mov
rorl
sti
add
rolb
lds
daa
jns
mov
out
xor
mov
push
popf
daa
iret
inc
and
out
les
cmp
xchg
or
inc
incb
jb
iret
push
js
xchg
subb
mov
insb
addr16
push
mov
xor
bound
xor
jle
sbb
dec
fadds
and
cli
adc
jl
clc
mov
repz
pop
loope
sub
outsb
rcrl
add
stos
int
add
lcall
clc
xor
mov
cmpsl
adc
das
or
subb
in
sub
mov
push
stc
rolb
dec
sbbb
dec
loope
push
std
cltd
push
out
cmp
xchg
mov
or
sbb
xchg
and
sbb
repz
pop
push
mov
shrb
das
mov
aad
mov
repnz
cmc
das
int
popa
lret
pop
sarb
outsb
sbb
jne
push
xchg
cmp
sub
adc
sahf
mov
push
fwait
cmp
xor
loopne
mov
or
in
mov
mov
dec
aad
nop
inc
pop
sbb
sub
mov
sub
push
jp
push
fiaddl
cmpsb
mov
jne
bnd
mov
sbb
or
loope,pn
fsubrp
addb
cmp
mov
clc
test
dec
dec
in
fnstsw
hlt
push
cmc
pop
inc
inc
in
or
mov
ficoms
loope
jge
push
jns
xchg
pop
shll
bound
js
pop
loope
xchg
lods
mov
mov
out
adc
fnstsw
inc
mov
dec
jmp
add
sub
repz
into
xor
xchg
lahf
pop
xchg
stos
inc
ret
mov
add
add
stos
push
shll
xchg
sub
inc
test
repnz
push
dec
push
mov
dec
fistl
mov
mov
clc
shlb
push
rclb
fistl
and
xor
jmp
loopne
ret
sbb
imul
out
dec
push
and
pop
imulb
xchg
sti
cmpsb
sub
inc
pop
in
gs
and
stos
push
jp
clc
dec
je
out
sub
je
xor
scas
cmpsl
mov
xlat
addb
rorl
sub
icebp
xchg
loop
jae
cmp
in
outsl
pop
dec
push
out
add
cmp
adc
mov
sbb
sub
adc
hlt
daa
mov
mov
dec
push
inc
cltd
out
adc
js
rcll
fbld
add
fwait
and
les
pop
xlat
push
rolb
loop
mov
fisubrl
jl
cmpsl
sub
inc
cmpsb
mov
fcmovnu
stos
stos
sub
pop
add
jbe
inc
pop
je
mov
jns
fnstsw
xor
ret
sub
pushf
scas
sub
addr16
cmc
nop
push
push
push
cwtl
int
notb
out
gs
add
cmpsb
xchg
and
sbbl
sub
jge
jbe
mov
lea
adc
stc
loop
test
push
dec
adc
xor
cmpsb
out
or
sub
incb
jle
jmp
jae
pop
cmc
or
cmpsb
or
jge
xor
lea
mov
ret
in
xlat
popa
scas
imul
mov
rolb
iret
adc
mov
popa
int
fisttps
pop
dec
jns
dec
jecxz
lock
inc
call
lcall
dec
mov
shll
add
imul
sub
xor
pop
es
or
adc
int3
jg
dec
mov
popa
mov
xor
inc
pop
jecxz
scas
inc
es
and
xchg
out
test
mov
movsb
add
xlat
mov
shl
repnz
pop
adc
ret
shlb
loop
mov
mov
xchg
pop
mov
adc
test
fdivr
xlat
sbb
arpl
pop
mov
mov
clc
push
test
cli
mov
andb
mov
cwtl
testb
shrl
test
cs
fucomip
or
mov
xchg
call
pop
imul
jno
jecxz
inc
push
sbb
mov
sarl
adc
jb
inc
xor
rcl
in
push
loopne
in
push
push
xchg
mov
cmp
pop
fwait
lds
cltd
cmp
popa
scas
dec
rolb
repnz
sub
call
pushf
pop
mov
add
stos
lret
jnp
lods
stos
add
in
scas
pxor
sbb
shlb
das
pop
inc
popa
in
jae
sbb
inc
or
and
cmp
popa
jnp
dec
inc
xchg
mov
cmpsb
loop
pop
mov
cmp
jecxz
lahf
sbb
cmpb
push
dec
imull
lahf
mov
ret
and
ja
sbb
popa
xchg
enter
adc
mov
adc
fnstcw
xor
and
mov
dec
fsubrs
dec
hlt
or
or
xchg
sarb
out
sub
stos
bswap
mov
push
sahf
pop
jbe
in
rcrb
stos
adc
pusha
xchg
inc
or
push
rorl
sub
fcom
push
mov
fcompl
and
lea
push
lea
push
fcoml
mov
cmpb
arpl
frstor
add
push
or
jno
aaa
mov
pop
push
jns
inc
mov
mov
rolb
stc
rolb
push
lahf
inc
pop
xor
stos
pushf
xor
xchg
jecxz
repnz
push
add
movl
push
cltd
inc
xor
adc
std
andb
sub
mov
adc
pop
outsb
push
out
inc
add
lods
cli
pop
mov
inc
andl
lock
mov
lret
inc
mov
and
cmp
pop
movsl
add
test
sub
popf
es
pop
test
adcl
push
adc
push
jecxz
add
cmp
outsb
pop
sbb
push
or
rclb
ljmp
dec
mov
enter
gs
mov
pop
sub
notb
and
ret
inc
imul
push
loope
scas
sub
pop
adc
ret
xor
push
lret
mov
cmp
or
xchg
stc
push
inc
in
sub
mov
xor
mov
jecxz
xchg
dec
fnsave
mov
lcall
test
bound
fldt
outsl
push
in
mov
xchg
out
sbb
out
and
dec
push
in
cmp
lock
stos
jg
inc
cld
sahf
jge
inc
mov
and
mov
xchg
inc
stos
stc
jae
test
mov
rcrb
xchg
cltd
mov
add
imul
inc
clc
ret
aam
xchg
pop
loopne
jle
dec
xchg
push
and
xor
enter
sub
and
das
push
imulb
rcr
mov
pop
xorl
pop
jp
xchg
jnp
loope
pop
inc
adc
dec
sub
mov
jg
xor
std
mov
pop
xor
pusha
adc
push
call
aad
pushf
adc
push
or
xchg
xor
cwtl
loopne
repnz
xor
outsl
and
jle
and
push
ds
and
sbb
mov
dec
push
lods
pop
lahf
pop
scas
test
push
stc
outsl
sbb
sbb
test
push
xorb
ret
ds
mov
insl
fwait
inc
das
xorb
roll
dec
lret
pop
push
xchg
fs
pusha
icebp
cmp
sub
in
inc
mov
cmpsl
dec
ficoml
jbe
dec
push
movl
mov
insb
scas
je
lahf
mov
and
cwtl
inc
lds
jns
inc
lea
in
int3
cli
ljmp
in
lock
add
inc
insb
adcb
push
sub
dec
mov
cmpsl
dec
or
lret
or
jbe
adc
insl
push
jae
imul
cmpsb
pop
imul
mov
in
sub
add
subl
xor
pop
jno
testl
and
mov
js
repnz
in
mov
jne
inc
cmp
and
add
add
sarl
push
or
pop
call
mov
push
or
adc
adcb
sub
test
insl
in
dec
divb
cmp
les
lea
add
add
or
lcall
sti
sbb
add
and
and
xchg
add
dec
lock
popa
or
jmp
pop
imul
jne
cmpsb
cs
dec
lds
dec
xchg
sub
and
in
in
stos
in
xchg
sbb
and
std
sbb
test
push
inc
mov
jg
inc
add
pop
mov
jg
rorb
dec
das
lock
and
jle
lahf
push
popa
dec
or
add
scas
flds
cmp
pushf
dec
jno
test
add
mov
mov
js
mov
pushf
imul
mov
pop
int3
mov
sub
xor
out
dec
aaa
inc
popf
dec
pop
fsubp
mov
inc
add
scas
test
push
pop
mov
push
iret
imul
and
mov
hlt
dec
cmp
dec
mov
ss
mov
sub
jb
ljmp
pop
xchg
push
xor
sbb
or
imul
popf
jne
repz
inc
sbb
push
add
cwtl
stc
ljmp
jne
jns
add
mov
cltd
mov
add
cld
fmuls
adc
fildl
mov
push
mov
scas
dec
or
inc
mov
imul
or
mov
imull
pop
ds
fs
loopne
and
mov
push
daa
jmp
inc
jne
mov
and
add
fmulp
arpl
mov
fiaddl
dec
gs
ds
hlt
into
cmpsb
and
dec
arpl
push
sbb
pop
pusha
mov
mov
aad
test
mov
mov
sbb
je
pop
out
stc
lret
test
adc
sub
es
sub
inc
sub
cs
loopne
sbb
aam
or
sub
mov
xchg
ret
adc
cmp
jmp
js
dec
test
cvtps2pi
or
sub
mov
add
outsb
jae
insb
popf
fsubrp
cmp
stc
or
test
add
sub
movl
push
sub
gs
pop
sub
inc
gs
and
lret
sbb
icebp
xchg
xchg
scas
or
inc
mov
xchg
adc
mov
inc
mov
test
aas
cmp
and
push
shrb
push
adcb
gs
adc
xor
jmp
std
lds
repnz
je
adc
je
xchg
scas
cmp
mulb
or
je
addr16
jnp,pt
loopne
aas
jmp
jnp
out
decl
mov
push
out
dec
jmp
leave
pop
mov
pop
lret
insl
mov
es
sarb
mov
lods
dec
and
push
clc
int3
daa
mov
test
push
push
leave
pop
jno
leave
push
hlt
ret
mov
push
push
push
das
repnz
movsb
pop
stos
and
scas
movsl
ds
xchg
rol
add
or
out
adc
insb
ffreep
xchg
popf
adc
add
in
mov
cmp
push
loop
aam
mov
orl
test
nop
lret
mov
and
push
jmp
jnp
inc
mov
mov
lea
mov
in
imul
pop
or
jecxz
ficomps
arpl
jns
add
push
mov
inc
les
cmp
ret
push
fistpll
out
scas
mov
outsl
mov
or
inc
xchg
into
sbb
mov
inc
add
sbbw
push
adc
mov
popa
sahf
shlb
jo
xchg
and
mov
or
pop
push
sbb
pushf
in
incl
daa
popf
fisttpll
dec
or
std
or
adc
mov
dec
or
fsubr
add
add
mov
cmp
leave
mov
stos
aam
mov
mov
pop
jae
jnp
test
xchg
adc
nop
mov
sahf
rcrb
sbb
cmp
adc
and
xor
pop
ja
jmp
push
xorl
add
or
push
in
sub
and
test
jmp
push
push
fstps
jmp
ss
inc
test
sbb
out
loope
push
push
mov
loopne
push
and
gs
pop
rol
add
ds
sub
push
daa
sbb
cmp
xor
scas
icebp
sbb
hlt
and
pop
sub
or
inc
or
mov
pop
xchg
xor
or
and
mov
or
daa
push
mov
sub
lret
pop
xor
enter
dec
xor
insb
loope
out
and
inc
pop
sbb
push
adc
push
or
push
inc
loopne
push
fwait
ds
fs
xchg
jno
mov
push
xor
xor
add
icebp
sti
or
lahf
cmp
fucomi
aad
loop
and
sub
mov
out
jo
mov
dec
sahf
inc
adc
mov
stos
into
imul
nop
xor
xor
sbb
push
dec
sub
xchg
mov
cmp
ljmp
and
rorb
mov
insb
icebp
in
addl
or
in
mov
sarl
stos
outsb
iret
notb
cmc
popa
mov
pop
add
mov
cmp
enter
jnp
xchg
add
xchg
inc
data16
and
adc
jne
test
lock
rolb
insl
or
out
sub
shlb
or
loopne
pop
adc
push
mov
stos
shrl
jecxz
sbb
and
sub
mov
push
sbb
iret
ss
xor
dec
repnz
jl
push
adc
pop
nop
push
test
mov
xchg
clc
sbb
repz
cmp
dec
ffree
jl
inc
aad
movsl
mov
dec
cli
sbb
push
dec
es
jp
or
shrb
lcall
push
aam
movsb
pop
sarl
mov
mov
jns
cmp
out
cmpl
xor
xchg
mov
push
jb
rcll
fsub
or
popa
pop
stos
dec
ss
xlat
inc
push
imul
test
cmp
push
or
fstpl
cli
pop
ljmp
stos
push
data16
inc
cmpsb
femms
popa
lahf
lcall
jne
mov
push
push
inc
sbb
xchg
sti
imul
int
iret
movsb
cmp
test
pop
in
or
or
ret
cmp
jbe
pusha
mov
scas
adc
cmc
popf
call
push
lods
mov
lret
leave
xchg
iret
dec
cltd
gs
lods
mov
jnp
pop
xor
or
ds
xchg
cmp
lock
es
roll
pop
jge
ret
xchg
pop
pop
mov
dec
mov
adc
add
xchg
jg
add
mov
cltd
push
lds
es
lods
scas
push
pop
inc
push
leave
les
lret
popa
xchg
test
mov
test
pop
out
jge
adcl
fadds
mov
push
insl
iret
rorl
cwtl
jmp
pop
push
xor
pop
hlt
popf
push
int3
xor
mov
arpl
pop
lret
insl
pop
pop
movsl
movsl
dec
adc
clc
popf
nop
jmp
mov
rcr
daa
popf
xlat
jno
inc
sti
and
xor
pop
xor
inc
insl
jne
xchg
push
bound
and
adc
push
add
push
sub
and
pop
fdivrp
sbb
std
dec
insl
or
cmp
leave
cmp
sbb
sub
mov
xchg
jp
push
pop
xchg
sub
dec
cmc
daa
inc
mov
outsl
push
jb
fwait
xlat
stc
aaa
cld
mov
inc
in
call
imul
ror
pop
gs
push
stos
sbb
pop
add
aas
mov
add
inc
xor
inc
add
adc
inc
inc
cmp
fdivs
daa
addl
jne
inc
bnd
add
fs
lcall
pop
jl
insl
pushf
lret
push
mov
mov
pop
or
jnp
roll
xor
cmpb
repz
shlb
mov
cmpsl
xchg
dec
aad
push
sub
jecxz
lret
rcrl
sbb
aas
into
rolb
pusha
les
mov
sarl
lds
xchg
pop
or
jmp
cmp
sub
xor
add
aam
xlat
xor
cmp
add
pop
popa
jbe
sbb
mov
cli
pushf
xor
adc
jae
daa
in
inc
jecxz
mov
sub
cld
leave
in
sub
bound
cmp
jp
push
push
in
jne
xchg
dec
shll
data16
lea
inc
dec
fstl
in
add
or
pop
and
enter
fmuls
add
insb
nop
sbb
mov
iret
jge
aam
push
mov
inc
adc
sbb
and
lret
sbb
push
push
jae
jp
sbb
movsl
in
cmp
ss
push
rcll
jb
mov
setnp
fwait
adc
adc
cld
jne
addr16
xor
test
in
adc
dec
xor
aad
xchg
clc
inc
inc
lcall
test
lret
clc
pop
add
int3
lret
je
sti
pop
pop
cmp
aas
add
jle
ss
bound
ja
dec
mov
mov
and
pop
mov
pop
push
mov
mov
ret
sub
sbb
dec
add
test
push
and
cs
lock
pop
sub
lret
nop
inc
dec
movsb
addb
or
xchg
inc
cmp
pop
inc
sub
lret
sti
lahf
xor
aam
mov
fbstp
jbe
nop
xchg
popl
ljmp
out
adc
jg
mov
pop
jno
or
adc
lahf
ret
adc
sub
inc
lret
inc
pop
icebp
and
das
xchg
sti
call
dec
add
mov
jp
lods
dec
jno
repz
mov
cmp
xlat
repnz
mov
out
add
mov
pusha
jne
rorb
add
xor
and
in
call
inc
push
sub
decb
in
mov
or
je
or
mov
and
sbb
jmp
mov
push
mov
sub
inc
pop
lods
popa
inc
imul
or
scas
sub
and
xor
xor
fucom
adc
fs
fists
push
jb
subl
std
inc
xchg
mov
and
lahf
leave
push
stos
inc
and
scas
sub
shlb
xchg
sbb
adc
pushf
mov
es
mov
mov
mov
push
cmp
fmul
lea
pop
dec
daa
outsl
jmp
mov
pop
dec
in
add
call
mov
inc
inc
mov
push
sbb
es
sub
push
dec
add
test
fnstsw
xlat
addr16
jno
cwtl
add
std
adc
mov
and
or
scas
or
cs
inc
xchg
into
lods
repz
dec
leave
aad
pop
push
sub
inc
push
inc
decl
push
in
lds
fsubrs
add
or
dec
imulb
loopne
idiv
test
jecxz
fdivl
lahf
or
addr16
repz
shrl
outsb
sub
or
les
jmp
mov
dec
bound
mov
inc
xor
sbb
jb
and
xor
jle
aaa
push
mov
push
lds
push
sbb
or
stos
and
adc
pop
inc
jp
iret
sub
jne
xorb
dec
mov
je
mov
pop
add
push
in
cltd
xor
das
mov
jmp
idivl
cli
popf
mov
daa
mov
cld
adc
shrb
and
sbb
icebp
cmp
cmp
push
xchg
pop
daa
jo
aad
dec
mov
adc
loopne
fldl
xor
jecxz
shll
dec
mov
jg
ret
jmp
xchg
pop
ret
movsb
jbe
adc
dec
push
push
cmc
scas
sub
pusha
clc
inc
cmp
popf
mov
pop
aam
dec
mov
add
stos
adc
adc
push
sub
jmp
inc
mov
imul
sub
ja
cmpb
adc
pusha
bound
and
bound
fisubrl
push
sti
pop
js
jl
fwait
cmp
push
and
leave
scas
inc
jno
leave
and
add
dec
scas
mov
out
mov
fmull
mov
ljmp
pop
in
xor
jne
mov
in
incl
mov
mov
in
and
sarl
inc
mov
pop
mov
mov
add
push
sub
mov
xor
test
mov
push
adc
jecxz
insl
test
push
or
adc
push
pushf
lahf
test
aam
pop
popf
lods
sti
cmp
movsl
push
gs
xlat
sub
mov
sub
sbb
mov
std
insb
pop
out
inc
imul
mov
sub
psubd
dec
ds
xchg
enter
or
lock
mov
cmp
jnp
andl
push
xor
divb
xchg
rclb
sahf
push
xor
daa
sbb
mov
xchg
adc
adc
ljmp
sbb
dec
dec
pop
pop
jge
sahf
out
mov
testb
cli
adc
test
xor
cli
pop
repz
daa
lods
inc
add
subb
pop
add
negb
shl
mov
mov
aad
cli
lahf
call
mov
adc
or
pop
add
sbb
cs
jno
inc
cmp
push
mov
loope
lcall
sub
add
xchg
push
push
leave
es
lahf
adc
mov
adc
inc
push
sub
xor
sbb
dec
sbb
mov
orl
xchg
xchg
je
pop
inc
xchg
mov
stc
lcall
xchg
sub
adc
ss
mov
scas
xor
inc
in
fdivr
and
mov
xor
mov
pop
lcall
add
push
cmp
sbbl
and
jo
test
outsb
or
push
popa
call
cwtl
repnz
dec
mov
sbb
lcall
push
mov
insb
push
and
pop
adc
and
mov
inc
inc
add
push
into
test
cli
pop
mov
je
popa
cmc
rorl
roll
es
pop
mov
fisttpl
cs
sbb
inc
loop
mov
xor
add
cld
push
mov
in
mov
aad
sub
adc
inc
jge
imul
arpl
jnp
frstor
cwtl
insb
cmp
xchg
add
mov
es
in
mov
or
notb
pop
push
push
loop
or
and
xchg
pop
jno
adc
mov
ret
bound
push
aam
nop
jbe
push
icebp
inc
arpl
scas
pop
into
nop
loope
pop
fwait
lods
pop
movsb
jmp
xchg
jecxz
inc
aam
cmpsl
fs
cmpsb
push
sbb
xor
test
sbbl
pop
arpl
pusha
mov
push
fdiv
or
out
xchg
cld
cs
fidivrl
cmp
lahf
push
xchg
decl
cltd
jno
insl
fidivs
stc
lods
lcall
shll
push
inc
rclb
mov
mov
repnz
filds
push
fisubrl
ret
sbbl
xor
lds
jmp
add
xor
push
push
inc
adc
inc
cmp
add
cmpsl
fidivs
clc
std
or
mov
adcb
push
add
sbbb
test
dec
and
and
or
mov
fldt
movsl
mov
pop
nop
outsb
out
out
je
stos
fsubr
inc
fwait
ret
dec
pop
adc
xor
push
adc
lret
out
mov
and
enter
cmp
push
adc
loopne
or
scas
jl
sbb
ja
aad
ret
ficompl
jmp
andb
xchg
in
push
aas
mov
ja
dec
js
adc
gs
or
dec
adc
inc
imul
mov
jns
out
lods
das
push
pop
mov
jmp
push
adc
inc
inc
sbb
xchg
mov
xor
addr16
xchg
scas
enter
jne
loop
xchg
push
sub
mov
fwait
dec
mov
xor
xor
ss
pop
push
hlt
nop
xchg
lods
lret
mov
daa
xorl
loop
adc
fadds
and
add
adc
fildll
mov
push
test
push
mov
xchg
out
push
mov
jle
adcb
or
out
std
ljmp
jo
sbb
and
shlb
lea
mov
adc
inc
stos
xor
mov
leave
addr16
pop
in
test
fdivl
loope
out
jecxz
and
xor
test
add
dec
in
push
mov
icebp
fldl
xor
jne
push
add
jne
mov
or
mov
shll
mov
rcll
loope
cmpsb
or
call
mov
cmp
jno
xchg
es
adc
jl
xchg
push
jne
mov
shll
push
sub
sbb
dec
adc
mov
scas
xchg
imul
int3
adc
das
sbb
rclb
add
fldl
int
inc
fadd
fldl
jns
sub
sbb
out
jge
pop
sub
mov
aaa
mov
aam
cmp
add
mov
xchg
pop
andb
push
call
add
xor
push
divb
and
xlat
inc
idiv
jg
push
adc
clc
bound
mov
mov
nop
and
ljmp
jae
stos
sub
rol
xchg
mov
mov
fdivrl
shll
cmp
cmp
nop
rcrb
pop
cs
inc
je
pop
sub
adc
mov
sbb
in
xchg
jle
jmp
dec
push
sub
mov
sub
lret
divl
or
repz
inc
push
outsl
xchg
push
jb
loopne
pop
sub
inc
jmp
adc
mov
lock
rolb
mov
lea
frstor
sub
dec
pop
repz
jne
or
or
gs
sub
xchg
push
addl
xor
sbb
pop
adc
add
sbbb
dec
lods
jns
add
in
push
jo
imul
out
inc
push
or
push
jns
xor
ret
push
popa
fsubs
pop
mov
push
imul
out
repnz
lock
sbb
push
fsubrp
into
movsb
stc
stc
clc
out
adc
adc
cmpsl
nop
sub
jl
ret
outsb
insb
and
roll
fadds
xor
mov
sub
int3
ficomps
pop
rclb
bound
loope
xchg
jp
mov
outsl
mov
lcall
mov
test
xchg
pushf
jo
xor
inc
fs
xor
das
or
mov
or
inc
push
dec
cmc
pop
lcall
lcall
stos
or
cmp
pop
adc
mov
mov
aaa
imul
push
jno
daa
add
mov
icebp
sbb
push
lock
popf
int3
aaa
pop
pop
mov
inc
loope
jl
sub
les
xchg
insb
cs
stos
jo
cmpsb
mov
jge
add
out
xchg
hlt
push
mov
sub
and
or
push
xor
push
xchg
es
fidivrs
jb
inc
jbe
adc
out
insb
mov
push
cmpsl
inc
push
mov
stos
and
ficoms
push
dec
repz
cli
addl
xor
cmp
imul
jge
inc
je
data16
ret
sub
xor
push
mov
push
and
test
pushf
or
in
pop
inc
mov
pusha
mov
ret
dec
aas
lahf
lcall
adcb
add
lods
loop
push
cld
dec
aas
inc
push
pop
pop
xchg
push
push
push
cld
mov
pop
aam
cmp
cli
xchg
faddl
popa
cmc
push
xchg
test
mov
adc
or
into
push
push
cmp
fcom
rcrb
stos
add
imul
sti
adc
shrb
js
aad
inc
call
decl
sbb
add
or
aaa
mov
ficompl
jae
fidivs
or
std
loop
das
stos
dec
pop
mov
sbb
stos
lock
scas
les
lcall
mov
aam
sti
push
inc
notb
fld
rcrb
mov
fdivrs
int3
cld
mov
xchg
xlat
push
xor
cmp
sub
ret
jg
jns
push
xchg
fwait
mov
adcl
pop
cmpsl
fstpl
mov
push
vmovups
jg
pop
push
sub
mov
mov
loope
subb
mov
mov
mov
inc
fwait
stos
pop
xchg
adc
mov
push
jne
inc
aad
shr
popa
or
dec
push
xor
inc
push
test
jmp
movsb
arpl
sarl
xor
xor
mov
test
iret
fdivl
ljmp
sahf
outsl
movsb
sarb
pop
out
cmpl
push
jl
rol
pop
or
fisttpll
sbb
sub
and
ret
mov
pop
mov
call
pop
aad
cmp
ljmp
out
scas
push
jg
std
inc
lock
mov
cmp
cwtl
jecxz
jbe
out
decl
stos
fisttpl
add
sbb
out
icebp
lds
jle
in
push
ret
js
fs
aam
adc
adc
jno
movsb
xor
bound
mov
mov
mov
insb
popf
xor
lret
das
lods
mov
push
pop
cld
dec
mov
dec
inc
dec
cwtl
mov
sub
jae
sbb
and
push
popa
data16
xor
scas
adc
or
pop
lea
mov
push
in
add
mov
xchg
dec
int
and
enter
and
adc
dec
ret
xchg
push
loopne
pop
or
loopne
jo
xchg
dec
dec
stos
lds
je
push
andb
fwait
loop
test
pop
rcrb
jge
mov
cvttps2pi
or
fbstp
leave
mov
mov
outsl
rorb
and
mov
insl
loop
inc
lret
mov
inc
test
lock
out
loop
jp
add
push
cmp
add
adc
test
xlat
mov
cmpsb
adc
pop
das
xchg
lods
or
xor
inc
bound
scas
jmp
push
ror
inc
sbbl
in
pop
insl
sbb
rolb
mov
xchg
fsubl
shrl
lahf
push
pusha
xchg
xor
ja
js
jno
in
mov
push
shll
mov
push
pop
mov
sbb
and
add
add
imul
loop
jns
enter
xor
push
cwtl
cs
out
sub
sub
ds
fnsave
inc
push
test
mov
xor
into
ja
jmp
clc
adc
jns
sub
xchg
sub
xchg
and
sub
mov
sub
xchg
mov
jo
xchg
xchg
pop
mov
xor
xchg
xchg
sub
xor
test
arpl
lds
rol
fucomip
pop
mov
stc
jmp
pop
xchg
xor
xchg
sub
jl
or
cltd
fcoml
sbb
dec
fwait
pop
cmc
popf
jne
or
in
leave
dec
or
mov
xor
in
mov
inc
adc
cmc
xchg
outsb
push
dec
cltd
mov
mov
mov
movsb
push
jl
mov
pushf
push
lds
cmp
fisttpll
test
sar
lahf
lock
dec
and
xchg
scas
jno
mov
push
sub
and
stos
mov
dec
loopne
cmp
jbe
icebp
xchg
inc
sbb
mov
or
adc
push
add
test
divb
lret
clc
mov
fisubl
mov
mov
sahf
insl
mov
divb
stos
jno
ss
cmpsl
mov
sub
pop
sbb
movlps
push
pop
das
ficoms
pop
sub
lds
add
je
adc
lods
xabort
inc
or
mov
sub
clc
mov
jle
mov
pop
sub
cmp
orb
data16
aam
stc
out
les
pop
sbb
jo
push
sub
dec
or
xchg
dec
mov
sbb
stos
popf
rolb
mulb
je
adc
mov
sbb
jp
aaa
mov
aaa
outsb
loop
daa
jge
xchg
mov
test
ss
filds
inc
sbb
daa
pusha
mov
call
movsl
nop
in
add
push
adc
test
imul
push
testb
enter
pop
aam
push
shrl
fsts
ret
jb
negb
jge
push
int
push
dec
adc
scas
mov
push
sbb
fidivs
addl
out
inc
ljmp
test
shl
add
sub
push
mov
aas
xor
hlt
andb
jbe
jo
sbb
and
jge
inc
pushf
pop
xor
sub
ret
jl
dec
inc
mov
cmp
sub
pop
mov
loope
mov
push
xchg
inc
fiadds
jb
push
mov
aad
cmpsl
test
adc
and
pop
add
cmp
js
and
fsubrl
or
rorb
out
sbb
mov
cmc
inc
inc
jbe,pt
dec
inc
mov
sbb
add
add
mov
call
ret
adc
mov
mov
test
rorb
lahf
push
pop
sbb
push
xor
mov
sbb
mov
sub
int3
cmp
lds
lret
nopl
cmp
xchg
and
inc
adc
or
mov
je
cmp
lods
mov
cmp
stos
add
mov
mov
push
arpl
xchg
pop
lcall
mov
lea
sbb
addr16
je
ds
cmp
ds
ret
in
lds
add
xor
pop
pop
das
add
stos
push
or
iret
aaa
movsb
rorb
in
stos
mov
aaa
push
xchg
insl
ret
imul
xor
sub
sbb
adc
mov
stos
add
jp
loopne
push
gs
adc
adc
dec
adc
mov
icebp
xchg
aaa
mov
adc
sbb
mov
jp
ficomps
sub
mov
jg
mov
rclb
xlat
add
xchg
cmp
and
shrb
es
in
lds
arpl
push
push
mov
aad
test
cmc
xchg
xor
add
lret
insb
int
sbb
outsb
mov
outsb
push
xor
int3
sub
mov
dec
in
dec
dec
xchg
lret
pusha
push
mov
mov
adc
stos
call
subl
pop
xlat
add
pop
push
fcoms
pop
cmc
stos
rcl
push
pop
cmp
push
mov
stos
sub
int
scas
pop
and
and
mov
lret
cmp
or
mov
test
nop
ffreep
pop
shrb
push
adc
lcall
fmull
xchg
push
movsl
cld
push
push
jp
jp
bound
jbe
mov
or
add
adc
enter
inc
fwait
add
add
hlt
unpckhps
lret
adc
push
push
ljmp
or
sub
cmp
test
xor
dec
sub
lret
xchg
fimull
aad
xor
mov
mov
push
scas
jbe
jl
push
clc
jmp
and
ret
repz
push
andb
out
js
mov
jb
sahf
cmc
sub
pop
sub
mov
xchg
mov
jae
jne
aam
mov
push
loop
loope
sub
ss
jge
les
inc
mov
leave
bound
adc
mov
add
int3
sub
mov
sbb
add
xchg
mov
jbe
inc
lds
cmp
ds
lret
in
add
mov
mov
jno
ss
push
pushf
cli
push
fldcw
push
mov
adc
mov
aas
jmp
xor
mov
lods
test
or
in
add
add
push
xchg
push
movsl
outsb
push
jo
gs
inc
jo
lret
xchg
add
aam
sbbb
inc
add
mov
xor
push
out
lcall
adc
daa
mov
xchg
pop
add
lods
pop
adc
movsb
or
roll
icebp
push
add
push
movsb
les
sub
xchg
push
lret
aas
mov
dec
mov
adc
dec
fdivrs
xchg
jbe
mov
mov
mov
and
stos
shlb
cmc
testl
mull
mov
scas
addr16
mov
mov
push
xchg
xor
xchg
adc
nop
jg
sub
int
hlt
pop
sub
fnsave
shll
into
movsl
or
lcall
movsl
idivb
scas
dec
add
mov
pop
adc
and
ds
pop
xchg
aad
lret
add
addl
sub
aad
movsb
push
jb
cltd
loopne
dec
xchg
xor
inc
test
mov
sub
inc
jecxz
mov
and
insl
mov
xor
add
js
shlb
dec
xlat
pop
loope
movl
xchg
cmp
fs
sub
mov
lods
mov
xchg
and
sub
adcb
pop
test
jne
xchg
das
iret
push
cmp
or
jp
dec
mov
jp
mov
mov
dec
jns
cmp
add
mov
cs
dec
mov
ljmp
int
cld
lret
fisttpl
cmp
xor
sub
inc
mov
push
js
in
icebp
xor
aas
jecxz
inc
addr16
sbb
and
addr16
sbb
je
adc
jo
clc
orb
pop
roll
sub
adc
or
rcrl
push
or
push
subl
pop
insl
pop
push
sti
xchg
cld
add
mov
sbb
stos
jp
pop
pusha
in
dec
pop
cwtl
mov
rol
shr
out
inc
jl
repnz
loope
xor
or
xchg
int3
xchg
add
add
xor
lea
push
mov
xor
cmp
or
cmpsb
mov
adcb
push
jecxz
pop
sub
and
shrb
in
dec
pop
xor
inc
test
out
loopne
xchg
les
mov
xor
add
fistl
bound
and
push
loopne
mov
out
fsubr
push
outsb
rcr
fstl
pop
out
and
dec
add
jge
dec
inc
push
aam
test
jp
gs
or
push
int3
mov
push
cmpb
and
scas
xchg
loope
xor
stos
imul
xchg
pop
sbb
xchg
add
sbbl
and
xchg
adc
or
dec
or
cmc
popa
lods
xor
add
stos
lds
mov
int3
cwtl
adc
push
mov
repnz
outsl
xchg
jne
je
push
adcb
or
xor
lock
loop
test
adc
push
xor
inc
add
mov
push
enter
inc
mov
fsubrl
inc
cmp
add
movsb
inc
out
pop
jae
push
cmpsb
sub
push
add
aam
mov
sbb
inc
shlb
lcall
jecxz
pop
jp
nop
lds
push
ret
shrl
dec
loop
shr
js
pop
xchg
mov
clc
insl
cmp
jnp
dec
movsb
mul
and
sahf
inc
or
stos
cltd
xchg
push
add
jg
jmp
dec
or
mov
mov
aas
push
addr16
add
dec
rcrb
dec
stos
inc
inc
and
jb
adc
pushf
add
outsl
rolb
xor
ds
ret
xor
jno
daa
inc
dec
jecxz
repnz
xor
test
enter
fcomp
mov
loope
ljmp
cmp
mov
cmp
hlt
aam
push
enter
mov
cmpsb
mov
push
adc
mov
cld
je
mov
test
fsubr
dec
and
or
das
and
add
bound
inc
pop
inc
adc
and
inc
add
icebp
sub
out
adc
popf
loopne
inc
iret
adc
mov
les
frstor
les
rolb
inc
and
sbb
add
xor
dec
inc
add
add
add
add
adc
into
and
shlb
clc
push
push
addb
add
pushf
and
sbb
inc
push
add
daa
jg
and
fs
rclb
adcl
mov
dec
push
stc
fs
mov
pop
loop
adc
fmuls
and
mov
adc
mov
movsb
dec
inc
pop
subb
push
and
jo
cmpsl
jl
and
jo
les
movsl
sub
cmp
sbb
leave
data16
push
cwtl
xchg
push
sgdtl
lret
js
mov
xchg
and
and
add
push
or
sub
inc
rorb
adc
jmp
dec
enter
shll
inc
jp
ret
xchg
loopne
inc
push
repnz
push
dec
test
sub
dec
mov
ds
xchg
and
pushf
dec
pop
ret
dec
mov
sbbb
sub
js
xchg
nop
jno
jns
add
insb
ret
sbb
push
bound
mov
pop
sub
sub
mov
mov
push
adc
fidivrl
imul
lret
or
sub
jnp
mov
add
inc
xchg
xor
push
or
jne
mov
mov
in
add
outsl
cmp
add
lds
and
inc
mov
ret
sbb
adc
sub
xchg
xchg
insl
dec
imul
mov
mov
outsb
add
enter
movsb
rcrb
fs
scas
rol
int3
rorb
rolb
sub
andb
xchg
add
push
adc
mov
addl
or
sbb
js
bound
or
mov
or
loope
mov
add
cld
rcrl
out
mov
sub
enter
sub
orb
popf
sub
mov
dec
xchg
xor
or
lret
loopne
adc
rol
mov
xorb
jo,pt
inc
test
dec
push
outsl
jmp
jmp
inc
sub
add
subb
and
pop
mov
andb
jbe
bound
push
xorb
mov
or
or
packuswb
adc
pusha
nop
inc
or
adc
mov
sbbb
push
mov
xor
rcll
cmpsb
push
sbbb
jb
add
fs
lret
insb
sbb
mov
sub
dec
imul
test
cwtl
inc
adc
imul
push
test
pop
mov
loope
inc
jb
mov
fs
sbb
mov
dec
int3
aas
pusha
mov
and
cmp
pop
add
jle
lock
add
loopne
adc
mov
xor
pop
mov
pop
pop
dec
push
pop
add
or
or
in
add
shl
shll
cmp
popa
nop
xor
inc
mov
leave
push
adc
inc
sbb
pusha
sub
xor
xchg
sarb
add
hlt
movb
adc
rcll
loope
ret
push
pop
cmp
push
sbb
adcb
out
cmp
adc
sub
nop
adc
adcb
and
add
mov
inc
cmp
jp
mov
cmp
dec
mov
rolb
or
jo
add
call
or
insb
mov
jmp
into
fdivs
mov
shlb
mov
adc
mov
pop
jg
sub
or
ret
jbe
insl
sub
dec
lods
pop
add
cltd
push
mov
movsl
cmp
sbb
stos
inc
sub
aaa
cmp
rcrb
jo
ds
arpl
add
lods
test
icebp
pop
or
inc
es
push
int
cmp
test
or
lods
jge
mov
and
or
mov
or
push
sub
add
adc
xor
or
in
cmp
bswap
cmp
mov
cmc
xchg
jb
outsb
mov
sub
ret
pusha
push
xchg
call
xchg
and
fcomps
dec
sbb
cltd
mov
fwait
or
shll
push
js
mov
xor
and
push
ja
mov
push
stos
je
xor
add
mov
add
mov
stos
cs
pop
movsb
xchg
sbb
je
dec
adc
add
inc
lods
dec
or
cmp
int
push
repnz
andl
movsb
pop
daa
push
push
add
in
rorb
cmp
mov
inc
and
sub
dec
pusha
movsl
xchg
test
fwait
orl
nop
shrb
inc
mov
sub
inc
push
ljmp
aam
stos
in
dec
loop
adc
mov
adc
push
sub
sbb
dec
dec
dec
aam
movsl
or
andps
or
mov
push
inc
fcomps
cmpsb
xchg
push
sbbl
xchg
adc
sub
jmp
mov
dec
mov
add
adcb
popa
lcall
cwtl
leave
add
xchg
inc
sub
adc
stos
adc
pop
push
lret
inc
popa
lods
push
pop
inc
outsb
mov
sbb
mov
adc
lret
mov
push
imul
sub
push
add
mov
xor
dec
adc
push
push
inc
inc
xchg
dec
in
push
jp
xchg
lret
adcl
pop
cwtl
insb
pop
mov
lods
movsl
pop
push
cmp
loop
jo
fstl
sub
test
aaa
jne
subl
inc
loope
xchg
mov
inc
mov
xchg
mov
and
push
call
add
in
les
dec
add
push
lret
andl
es
push
sub
push
pusha
sub
gs
js
insb
sub
cmpsl
xor
sub
aad
fimuls
ss
adc
ror
mov
mov
inc
sub
in
sahf
lea
dec
movsl
test
fistps
adc
cwtl
imul
addl
inc
xchg
cmp
dec
cmp
dec
test
lret
ja
or
xchg
icebp
push
rol
shrb
fstps
mov
xchg
icebp
clc
cltd
pop
push
xchg
mov
repnz
inc
or
test
in
xor
push
sub
sub
sti
test
int
dec
out
push
push
and
cmpsl
push
test
rolb
and
popa
dec
mov
pop
fists
xor
icebp
es
xchg
or
subb
jbe
mov
add
mov
dec
mov
imul
nop
mulb
jmp
mov
sbb
sbb
pop
push
push
addr16
or
hlt
cmpsb
mov
mov
dec
int
dec
lret
cmp
insl
jecxz
aas
roll
inc
push
mov
fcmovnu
fs
fdivs
inc
cwtl
hlt
or
xchg
mov
or
and
subl
shll
cmpsl
add
sub
mov
sbb
push
or
dec
stos
cld
xchg
xchg
sub
cmp
loop
jo
xor
push
jecxz
sbb
xor
outsb
sub
shr
sub
xor
sbb
pop
in
pop
mov
xor
cmp
test
pop
add
fwait
sub
movsl
adc
mov
fcoml
push
stos
mov
xor
or
push
loopne,pn
push
xlat
push
mov
and
icebp
xchg
push
mov
sub
orb
or
and
mov
xchg
aad
xor
push
jl
shrl
lds
adcb
nop
jg
out
and
mov
add
add
add
add
mov
adc
dec
insb
repnz
dec
pop
in
xor
pop
scas
pop
jl
push
rclb
cwtl
sub
test
xchg
and
pushf
sub
ret
push
and
movsl
aad
jae
ret
in
jge
mov
leave
je
aaa
mov
imul
push
clc
in
and
lea
xchg
jnp
loop
adc
dec
mov
out
push
adc
stos
pop
or
shl
pop
or
fcmovne
fmuls
mov
int3
dec
push
push
jecxz
jb
xor
jne
idiv
pop
xor
xchg
jnp
loopne
sub
rcr
inc
pop
sub
xor
into
mov
into
adc
sbb
add
popa
xor
add
lock
popf
and
xchg
fimuls
fldenv
xlat
jnp
sub
sarb
leave
adc
add
out
sub
cmpsl
scas
mov
not
inc
daa
cmp
sbb
sub
pop
notb
add
or
inc
call
aaa
scas
push
out
pop
loop
jmp
mov
pop
mov
inc
rolb
mov
mov
les
subl
dec
addr16
mov
jecxz
aad
imul
stc
test
loope
and
or
cmc
xchg
cli
pop
xchg
mov
sti
cmc
sub
jp
xor
pop
dec
fdivrs
xchg
aam
test
jp
xchg
or
mov
mov
dec
pop
ss
push
push
add
repz
ret
xchg
scas
pop
push
mulb
add
sub
xor
inc
mov
fidivrl
or
pop
imul
mov
push
jg
fwait
data16
wrmsr
fsubp
subb
aad
sub
sub
push
mov
push
sbb
rcrl
sub
jp
gs
inc
add
add
cmpsl
cmpsl
sbb
inc
push
pop
xor
test
pop
xchg
dec
inc
roll
test
mov
jno
sbb
sbb
out
lret
xchg
mov
test
jb
add
push
dec
dec
pop
sbb
add
mov
inc
nop
pop
loope
cmpb
and
add
mov
mov
xor
sub
or
or
mov
xor
sub
pop
repnz
or
pop
mov
xchg
jae
and
add
push
dec
pusha
cs
arpl
cltd
ret
cmp
mov
loopne
sub
mov
xor
lcall
dec
xor
jnp
outsb
pop
xchg
cltd
add
mov
inc
test
sbb
mov
pop
adc
stos
clc
test
pop
add
sub
inc
push
push
sbb
adc
mov
mov
inc
outsb
fisttpll
add
insb
fnsave
cmp
movsb
or
dec
pop
mov
test
push
mov
flds
xchg
mov
shrb
mov
roll
push
jne
mov
add
mov
adc
test
cwtl
aad
repnz
mov
mov
push
pop
dec
mov
sub
inc
push
hlt
xchg
xor
cs
inc
fsubrs
aad
addl
mov
push
in
pusha
pop
mov
adc
ds
inc
xor
js
and
lret
ds
adc
je
xor
es
enter
xor
push
dec
test
aam
push
mov
push
movsl
sbb
fldenv
add
fdivrs
lret
movsb
pop
jge
out
mov
push
popf
pop
or
shlb
mov
cmpsb
mov
test
cs
andb
fs
mov
sarb
mov
xor
mov
aam
xor
add
das
inc
sbb
push
adcb
sub
shrl
adc
ror
psrld
fsubr
push
stos
mov
popw
imul
int
pop
fwait
jmp
or
out
mov
xor
pop
sub
popf
pop
mov
inc
popa
js
loop
ja
cltd
out
add
jnp,pn
sbb
adc
cli
ljmp
sbb
jbe
das
add
xor
push
loopne
lahf
add
inc
les
lahf
lods
pop
mov
rol
loope
insl
int3
nop
and
cmp
adc
xorb
dec
inc
clc
pusha
xchg
add
orb
je
jo
inc
out
fmull
xorl
dec
divl
pop
or
fsub
popa
mov
xchg
in
aaa
loop
clc
mov
ret
jnp
xor
aas
inc
jae
ror
cwtl
cli
test
dec
inc
mov
sbb
mov
rcr
adc
or
enter
push
mov
lcall
xchg
ret
jp
sub
add
add
xchg
loop
mov
imul
stc
cmp
inc
mov
out
dec
cli
jmp
push
inc
xchg
inc
push
dec
or
pop
int3
add
mov
xchg
mov
or
mov
stc
ljmp
or
mov
jo
inc
xchg
iret
addb
dec
movsl
pop
jmp
ds
pop
icebp
pushf
inc
add
push
mov
sbb
lea
push
pop
and
rcl
pop
or
pop
in
pop
dec
cltd
insb
sub
rorl
fstl
push
xchg
test
xor
lcall
or
test
frstor
insb
in
push
in
fistl
sub
js
stos
leave
fldl
push
mov
xchg
or
gs
or
dec
std
outsl
movsb
add
icebp
and
loopne
rcrb
pop
push
fwait
sbbb
cmpl
pop
and
pop
imull
test
inc
add
popl
sub
xor
mov
inc
xchg
sbbl
sub
stos
loope
add
adc
push
adc
sub
mov
data16
ljmp
push
lods
pusha
inc
repz
dec
mov
jmp
int
mov
in
push
mov
inc
sub
add
orb
dec
or
test
aad
andl
gs
sbb
movsb
ja
sbb
and
ja
inc
xor
mov
and
test
add
adc
es
adc
push
sbb
imul
in
test
sub
push
add
inc
addb
test
pop
jns
mov
cmp
repz
dec
xor
add
mov
inc
mov
mov
inc
pushf
add
cld
daa
cld
in
setle
pushf
add
pop
pop
cmpb
and
shlb
add
popf
add
inc
and
sub
or
out
test
ror
mov
add
pop
mov
js
add
jnp
cmp
adc
add
aam
rorb
bound
inc
fiadds
int3
mov
aad
enter
or
add
add
sbb
xor
cs
movsb
shlb
sbb
sbb
shrb
rcrb
imul
mov
add
and
repz
imul
imul
xor
lock
push
mov
hlt
push
or
push
mov
mov
lea
es
push
mov
sbbb
adc
lcall
sbb
xor
or
lret
sub
cmp
adc
dec
stos
jge
in
rorb
mov
xor
or
ret
cmpsl
mov
cmpsl
adc
adc
dec
or
call
add
les
imul
lods
sbb
xchg
loop
mov
arpl
push
mov
lahf
dec
ljmp
mov
int3
inc
cmpsl
add
cmp
adc
jl
add
dec
shlb
call
movsl
jmp
dec
data16
or
push
add
inc
inc
sbb
add
arpl
pop
pop
push
or
push
inc
mov
add
xor
mov
dec
xor
test
xor
pop
adc
push
cmp
push
push
movsb
adc
xchg
popf
push
ret
xchg
xchg
outsb
dec
dec
out
mov
test
sub
mov
push
xor
xor
cmp
add
mov
fwait
hlt
lods
lret
mov
and
es
sbb
mov
fwait
pop
cmp
int
repz
ss
lods
lret
es
mov
xchg
sub
pop
mov
sbb
inc
adc
orb
pop
stos
pop
rorb
adc
push
inc
xor
test
adc
or
xchg
je
cmp
sub
xchg
lret
sbb
jp
jne
movsb
mov
lcall
aam
adc
push
dec
and
cld
and
inc
cwtl
push
sarl
and
and
sub
pop
mov
mov
and
push
dec
sub
add
mulb
ret
data16
jmp
sahf
xchg
and
pop
mov
sub
sub
sub
stos
lock
sub
xchg
adc
xchg
mov
xchg
xchg
pushf
inc
lcall
dec
cmp
pop
add
rcrb
push
imul
stos
push
repnz
pop
mov
inc
inc
mov
adc
mov
adc
scas
sub
and
mov
es
sub
lret
fsubl
inc
push
mov
sbb
or
ljmp
addb
mov
das
js
add
imul
dec
mov
adc
ja
loopne
inc
pushf
cmp
cwtl
push
fcmovbe
pop
pop
push
outsb
loop
pop
xor
ss
imul
jo
loopne
adcb
dec
loope
imul
sbb
sti
mov
sbb
test
movd
sbbl
adc
cltd
adc
js
cmc
out
int3
adc
aaa
inc
ljmp
repnz
fwait
inc
xor
adc
cmp
inc
or
xor
flds
lret
dec
sub
sub
gs
xor
push
adc
ffree
dec
pop
test
es
push
jp
pop
or
pop
out
sbb
xchg
cwtl
xchg
xor
lret
and
push
inc
in
and
nop
jge,pn
xor
inc
dec
xchg
mov
sbb
mov
cmp
inc
add
hlt
inc
sub
sbb
inc
mov
pop
lds
pop
adc
cwtl
shrb
add
jmp
pop
lahf
loope
scas
or
sbb
cmpsb
jne
mov
enter
stos
enter
push
jne
and
push
xor
xor
lret
pusha
in
or
les
test
xorb
rolb
outsb
or
sub
or
adc
xchg
jo
add
inc
sub
inc
or
pop
adc
sub
lds
add
in
mov
bound
sub
sub
add
xor
or
xchg
adc
push
pop
leave
pop
mov
or
mov
inc
jg
outsl
sbb
xchg
mov
add
insb
pop
mov
pop
rorb
add
mov
int
and
fstp
test
dec
mov
xchg
sub
ljmp
call
mov
adc
add
sub
push
inc
inc
jmp
insl
push
xchg
sbb
or
jmp
gs
je
inc
popa
jl
rclb
xchg
inc
mov
add
pop
xor
inc
xchg
subb
stos
gs
sbb
pop
add
push
inc
add
push
and
sub
outsb
adcl
adc
dec
aas
pop
sbbl
sub
pop
data16
xor
push
add
movsl
imul
xchg
cmp
sub
push
pop
int
mov
ds
pushf
cmp
fcomps
es
pop
inc
les
cmp
es
jno
inc
shl
dec
mov
addr16
loop
push
pop
push
cld
sub
or
imul
adc
bound
cmp
or
gs
ret
cmpsl
or
adc
push
add
ss
in
jno
out
dec
add
hlt
sub
adcb
daa
adc
ds
xchg
stos
mov
dec
sub
xchg
mov
andb
loope
sbb
jp
mov
sub
and
sub
pop
call
add
cs
dec
loopne
push
pusha
xchg
call
inc
test
push
test
dec
lret
push
popf
or
cmpsb
add
mov
pop
movlhps
loope
mov
lret
push
aas
lcall
inc
or
and
insb
sub
adc
xor
aaa
push
push
push
adc
daa
push
in
pushf
in
lods
mov
js
outsl
int
adc
enter
push
cwtl
mov
adc
push
orl
push
fstps
in
sbb
push
mov
enter
mov
ljmp
xchg
clc
je
sub
push
je
incl
dec
dec
push
mov
lds
push
mov
scas
jb
jl
pop
in
mov
jmp
sub
push
and
pop
adc
sub
xchg
add
mov
fndisi(8087
orb
lret
and
xchg
jno
insb
pop
mov
push
bnd
push
dec
stos
cmpsb
mov
int3
or
mov
out
lds
cmp
dec
xchg
stos
or
cmp
xchg
adc
ljmp
les
lahf
add
test
ret
jl
aad
popf
add
jno
push
movsb
xchg
pop
sbb
mov
daa
popa
inc
pop
xchg
pop
inc
nop
add
pop
arpl
pop
test
mov
inc
xchg
lds
xlat
push
mov
sub
and
insl
pop
arpl
xchg
into
mov
add
push
fisubrl
pop
xchg
add
inc
dec
add
push
scas
xchg
mov
push
jno
shrb
push
jns
jo
inc
pusha
bound
ds
pop
xchg
sub
pop
rcrb
fcmovbe
add
ss
and
push
mov
jecxz
xor
mov
scas
mov
lcall
mov
sbb
sbb
jb
pop
sub
lret
and
adc
jp
or
mov
push
xchg
test
pop
dec
mov
imul
inc
xor
adc
inc
es
jae
xor
dec
inc
lcall
jns
lea
xor
push
sub
stos
js
sub
test
bound
push
push
dec
dec
mov
dec
aaa
mov
cmp
mov
insb
jmp
pop
xchg
xchg
adc
mov
fisttpl
jae
addl
jnp
mov
dec
in
push
push
and
pop
add
xorb
inc
loopne
add
lcall
into
cltd
add
ret
sub
mov
andb
mov
xchg
xlat
fsub
scas
rcrb
xchg
cmc
pop
int3
mov
ret
jne
shlb
push
xchg
mov
cmp
sub
shrb
xor
push
out
adc
aam
xor
sub
bound
mov
xorb
or
mov
xor
cmp
cmp
dec
insl
test
xchg
nop
add
pop
jno
push
lods
fs
sbb
dec
int3
xor
mov
xchg
mov
jae
arpl
xor
mov
in
ds
rol
arpl
xlat
or
sub
fwait
call
stos
or
cmp
rcll
pop
push
dec
jns
xor
and
daa
repnz
cltd
andb
adc
adc
gs
push
nop
mov
sub
xor
cmp
scas
push
add
jne
add
sti
cmp
adc
sub
fdivrp
push
fildll
addr16
mov
shr
xorb
jp
sbb
jmp
iret
or
lret
mov
push
cmp
call
sbb
pushf
sub
in
mov
sbb
push
or
rclb
xor
fdiv
or
cmp
push
add
jae
leave
xchg
mov
clc
cli
fdivrs
jp
sub
pop
xor
stos
mov
outsb
sub
arpl
mov
adc
add
rcl
cmp
dec
fcoml
cwtl
xchg
mov
gs
and
mov
inc
gs
mov
pop
es
pushf
jl
mov
jne
mov
sub
mov
jo
pop
into
pop
mov
inc
insl
push
dec
rep
setns
out
xor
adc
bound
mov
mov
or
pop
pop
inc
pop
in
outsl
mov
inc
inc
add
nop
int3
cmp
inc
inc
sbb
xor
arpl
mov
test
leave
cmp
andb
les
push
mov
test
xor
xchg
jb
push
cs
fyl2x
repz
add
dec
cli
add
xchg
sbb
fistl
add
repnz
les
inc
xor
repz
mov
cmpsl
fwait
das
add
xor
stos
loop
push
sub
jecxz
js
mov
jbe
jmp
clc
es
add
pop
dec
sub
push
popf
or
fwait
ret
les
cmp
sub
popf
into
adc
mov
or
or
es
inc
pop
pop
push
jl
popf
das
hlt
gs
inc
rclb
outsl
cmp
gs
in
nop
jle
jp
inc
mov
cmp
mov
add
xchg
aad
pop
push
mov
mov
xlat
jae
aad
outsl
or
insb
mov
and
pop
pusha
and
add
fcompl
jb
lret
push
or
cmp
popf
mov
pop
push
fstps
lahf
lcall
lds
negb
sbb
movsb
xor
and
add
xchg
pop
mov
dec
pop
cmpsl
jo
xor
repnz
mov
dec
ficoms
sbb
or
mov
jbe
adc
adc
mov
xorl
and
mov
or
cmc
les
xlat
push
call
dec
pusha
xor
pop
sub
sub
nop
shlb
xchg
adcb
sub
mov
dec
add
shrl
or
mov
imul
ss
addr16
mov
inc
pusha
fsubrp
push
movsb
cmp
jns
jns
adc
jp
jg
adc
push
xchg
orb
mov
sahf
mov
aad
lds
and
pushf
sbb
push
push
or
sbb
pop
mov
ss
dec
sbb
add
les
mov
into
push
jmp
xor
xchg
inc
das
and
xchg
jmp
ja
cmpsl
add
xchg
sbb
adc
jecxz
pop
jnp
cmp
rcrb
out
movsl
imul
jo
popf
pop
addr16
xchg
inc
push
jne
push
mov
pop
sbb
loope
pop
add
and
sub
mov
add
fmull
lret
mov
popf
loop
lods
push
call
test
inc
loop
ljmp
subb
dec
ret
jp
ret
mov
jecxz
mov
jno
cwtl
lods
cmp
push
xchg
cmpsb
mov
mov
int3
out
pop
add
mov
bound
push
adc
jle
and
jno
lahf
push
outsl
out
jge
imul
push
orl
jmp
bound
xor
repz
mov
ret
ds
push
xor
int
inc
sahf
ret
mov
loopne
add
push
in
daa
popf
bound
add
mov
mov
stos
pop
add
sti
jmp
mov
push
mov
sahf
add
call
push
call
inc
jb
xor
sub
inc
lods
sub
movsl
inc
test
or
sbb
pop
inc
push
push
insb
pop
in
out
mov
fdiv
xor
cmp
xchg
or
addr16
fldcw
mov
sub
push
jbe
push
jbe
lret
xchg
push
xlat
lret
cmpsb
js
stos
or
lcall
test
adcl
inc
aas
dec
mov
add
add
or
cmp
pop
mov
dec
mov
mov
int
mov
push
jb
jns
pop
fcoms
pop
mov
movsl
or
adc
in
dec
add
js
stos
stc
je
mov
cmpsl
cmp
push
arpl
mov
je
xor
push
sub
jp
cmp
push
sub
test
xchg
xlat
rolb
and
mov
mov
cwtl
inc
mov
mov
nop
ret
push
lds
pusha
addr16
lret
and
xlat
cs
xor
lret
ss
and
das
or
jnp
sub
mov
sub
fisubrs
in
jae
jae
or
hlt
cld
dec
cmpsl
or
dec
pop
pop
pushf
das
stc
in
imul
xchg
cmp
cmp
mov
jbe
xchg
xchg
jecxz
sbb
push
pop
repnz
add
in
adc
daa
mov
dec
mov
inc
outsb
scas
cmpsl
mov
aaa
add
cmp
mov
cli
cmp
jl
ljmp
bound
adcl
cmpsb
test
push
jp
xor
or
stos
xchg
jb
lret
ret
xor
test
xor
cmpsb
mov
arpl
loope
cmpsb
xchg
lods
pop
pusha
scas
ret
push
mov
sbb
inc
inc
mov
jge
dec
mov
or
xor
jbe
movsb
cld
sub
xor
imul
sbb
and
mov
xor
lret
xor
out
push
adc
shr
notb
push
pop
js
jno
mov
xchg
popf
gs
adc
shll
sbb
adc
stos
pop
xor
ss
push
in
pop
cmp
pop
cmp
sub
add
add
fnstenv
or
mov
andl
pop
mov
xor
jl
add
call
sub
push
test
sub
jge
jno
cltd
addb
enter
mov
out
push
movsb
and
inc
mov
jmp
inc
negb
inc
rorb
inc
sbb
push
rcrl
out
xchg
inc
dec
movb
sbb
pop
cmc
es
mov
xor
or
sbb
mov
push
lret
mov
add
int3
add
rorb
mov
pop
push
rclb
or
mov
nop
inc
push
repnz
jl
adc
jnp
inc
xor
add
and
inc
cmp
adc
test
push
add
inc
lret
push
mov
imul
add
cmpsb
dec
cmp
xchg
shll
sbb
inc
inc
xchg
lods
jl
call
mov
pop
dec
sub
sbb
adc
test
pop
push
test
add
in
ja
adc
orl
and
add
repz
test
mov
mov
lds
add
dec
sbb
jge
xor
lods
add
push
addl
aas
or
cli
jnp
lods
inc
jl
cmc
shrb
cld
or
adc
loope
adc
nop
add
icebp
leave
xchg
lcall
add
and
jp
orb
ret
jl
inc
clc
jmp
test
and
or
mov
cmp
jmp
ss
shll
push
ficompl
pusha
out
xor
loopne
mov
jecxz
es
mov
pop
inc
addr16
arpl
mov
adc
inc
or
mov
xor
std
sti
ret
cmp
add
and
mov
ret
pop
aas
les
pop
mov
adc
loope
cmc
in
pop
roll
js
jmp
pop
xchg
std
repz
daa
adc
dec
push
int
es
cmp
ret
and
jle
adc
ss
cmp
pop
add
xor
cmpsb
fwait
lods
cmp
cltd
dec
sub
les
adcl
int3
xor
push
mov
arpl
mov
push
xchg
push
inc
mov
xchg
movsl
push
sbb
xor
add
push
cmp
outsb
test
loopne
fsts
data16
sub
adc
icebp
and
in
or
xchg
rcrl
adc
ds
popa
fcomip
mov
sti
cmp
fs
mov
aas
push
and
sbb
cmp
call
mov
jae
xchg
xchg
outsl
pop
popa
les
mov
sub
dec
sbb
mov
lods
jo
xor
mov
das
xchg
add
imul
out
ret
mov
stos
and
pusha
and
mov
fsubs
add
mov
add
das
jnp
lea
xchg
xchg
pop
adc
cmp
jno
in
popa
pop
jns
adc
stc
add
mov
push
cmpsl
push
lret
mov
adc
xor
dec
fisubrs
pop
xchg
pop
pop
push
push
cwtl
aad
lock
movsb
rolb
repnz
xor
push
shll
xchg
push
inc
add
push
ret
push
xor
ss
push
jmp
ds
xor
mov
les
inc
push
call
push
test
daa
mov
pop
adc
ds
int
sbbl
jae
jo
lret
xchg
hlt
push
cltd
xlat
or
ja
lock
dec
andl
inc
adc
and
xor
add
insb
mov
push
mov
pusha
xorl
mov
add
cmp
cmp
dec
add
sbb
pusha
pop
ret
add
test
jo
mov
das
xchg
data16
and
imul
popa
sub
xchg
sub
dec
dec
popa
push
cmp
cmp
sub
bound
push
inc
popa
in
adc
adc
and
push
cwtl
or
fs
inc
inc
into
aaa
cmp
stos
aam
test
and
xor
add
or
mov
in
lret
repnz
adc
sub
add
mov
jns
inc
cld
ss
mov
loopne
and
or
inc
in
or
cmp
xor
dec
lcall
and
dec
cmp
or
movsl
mov
fcomps
xlat
or
rol
subl
sbb
jns
rorb
test
pushf
aam
mov
cli
cmp
andl
jge
bound
test
nop
sbb
out
sub
jae
jno
out
xchg
in
jno
dec
add
add
or
ret
pusha
gs
movsl
cmp
mov
pop
cld
fchs
or
dec
lret
shl
inc
fldenv
ret
dec
arpl
sbb
pop
incb
ret
xchg
xorl
pop
cmp
dec
bound
push
sub
iret
test
cld
sub
addb
mov
popa
adc
movntps
lock
xchg
scas
clc
xlat
inc
pop
or
aam
into
mov
es
jno
sbb
mov
push
ret
fsubrs
adc
dec
xor
xorl
ljmp
or
push
pop
inc
inc
adcl
sti
addl
je
pushf
addr16
sbb
mov
mov
imul
lock
icebp
sbb
ret
inc
mov
popa
cmp
push
sub
subb
jb
sub
ret
movsl
jp
sub
xor
int3
pop
int3
jmp
addr16
add
inc
out
lods
cltd
aad
xor
insb
enter
out
pusha
mov
mov
subl
loop
dec
je
sub
pop
test
add
pop
aaa
and
mov
inc
mov
or
stos
pop
popf
push
or
mov
mov
cmp
in
ror
mov
popa
fs
jbe,pt
pusha
inc
das
mov
ret
cwtl
xor
sti
cmpsl
inc
dec
pop
dec
int
lods
pusha
int3
nop
mov
hlt
ljmp
mov
pop
movsb
rol
or
scas
pop
and
lods
sub
or
les
cmp
xorl
sub
in
jmp
roll
lods
jmp
insl
adc
enter
sbb
fstps
sub
popa
and
push
repz
sbb
pusha
pop
jnp
xor
loope
jl
add
je
daa
xor
mov
inc
mov
add
rsm
push
mov
add
pusha
sub
mov
pop
mov
sub
shl
mov
aas
mov
mov
mov
cmp
mov
outsl
mov
call
push
and
sub
xchg
les
add
scas
or
sub
inc
and
or
iret
mov
bound
sbb
lods
pop
mov
dec
cs
push
lea
or
mov
jno
gs
mov
loopne
mov
or
cmp
pop
mov
inc
xor
adc
je
aaa
xchg
pmaddwd
inc
int
out
popf
pop
mov
pop
jae
pop
sbb
and
loopne
lock
in
fisubl
xor
mov
xchg
and
loopne
lret
popf
inc
int3
push
test
scas
aad
sbb
dec
out
dec
dec
rcll
add
pop
and
jns
inc
pop
sub
cmp
xchg
cmp
pop
popf
cwtl
xchg
fildll
xor
or
and
inc
sbb
or
aam
pop
push
sub
test
insl
dec
mov
lods
adc
fsubr
add
push
add
dec
pop
test
mov
movsl
mov
pop
icebp
jmp
or
and
mov
sbb
sbbb
xor
xor
inc
in
cwtl
mov
push
icebp
fidivrl
mov
repz
jo
rcrl
adc
aas
xchg
into
insl
inc
orl
aas
shlb
cmpsl
mov
sub
enter
push
cmp
sub
xor
jns
ss
fs
push
push
bound
mov
cmp
cli
adc
pop
mov
dec
lods
das
cmpsl
orb
into
int3
and
xchg
push
fldl2e
lods
inc
cs
xor
rcrb
repnz
es
add
in
outsb
int3
movsb
sub
dec
cmpsl
dec
sbb
mov
loop
pop
mov
adcb
and
test
dec
fnstsw
xorb
sahf
push
add
cmp
inc
je
es
and
mov
push
and
shlb
mov
aad
movsl
nop
push
xor
add
sub
cmp
lods
adc
jno
gs
xchg
xor
mov
cli
in
xchg
ja
cltd
mov
xchg
pop
pop
dec
scas
fcmovnbe
jmp
push
pop
lods
mov
pop
sbb
lcall
ret
pushf
dec
es
pushf
bound
sub
lcall
sub
rcpps
stos
mov
dec
and
adcb
mov
in
mov
sbb
add
jae
mov
stos
add
jno
adc
xor
and
sti
cmp
mov
pop
int
lret
mov
es
imul
jno
test
xor
test
jmp
imul
mov
scas
clc
sbbl
mov
sub
or
xor
pusha
adc
fwait
lret
sub
sbb
jne
test
popf
lea
mov
adc
mov
sub
mov
push
adc
jbe
nop
shlb
and
xchg
xor
movsl
xor
xchg
push
cltd
pop
mov
mov
or
sbb
fcmove
les
push
add
aam
lods
std
push
xor
lret
push
pusha
mov
in
gs
ss
cmp
adc
add
sbb
push
push
add
rcll
lods
and
movsl
dec
dec
mov
cwtl
adc
mov
pop
pusha
adc
scas
mov
adc
xchg
movsl
xchg
nop
mov
add
mov
ss
repz
dec
add
inc
lahf
stos
sub
gs
mov
xchg
test
or
data16
aad
push
inc
cs
imul
sub
push
jmp
or
cmp
push
mov
add
sub
push
mov
xor
fcoms
push
adc
stos
sbb
push
std
rolb
and
inc
push
stos
sbb
cmp
bound
pop
add
dec
ret
mov
inc
sbb
mov
and
or
movsb
movb
jnp
jne
add
jo
xchg
lds
mov
xchg
mov
pop
and
inc
push
add
sbb
cltd
xchg
xchg
xchg
push
daa
mov
cmpsl
push
mov
mov
ss
andl
shrl
mov
popa
push
or
stos
sbb
sub
mov
out
pop
jb
in
pop
mov
inc
aad
das
xchg
and
dec
sbb
cmp
ds
bound
dec
cmp
or
xchg
aam
add
std
stc
dec
or
xchg
call
adc
cmp
loopne
inc
inc
cmp
mov
jae
xchg
add
sbb
sub
js
or
jmp
pop
push
scas
sub
call
out
xchg
mov
or
ret
das
ljmp
outsl
hlt
aad
pusha
pop
ja
mov
jle
add
push
inc
js
movsb
pop
cmp
popa
shrb
inc
xchg
pop
push
push
insl
incl
sub
mov
jno
inc
shr
daa
sbb
add
loope
testl
or
rcr
test
push
add
out
dec
mov
cmpsl
push
push
and
testl
mov
jl
repnz
iret
cmc
cmp
cs
mov
mov
decl
sub
sub
ret
fcoms
js
mov
push
repnz
mov
mov
mov
sub
rcrb
push
adc
aam
movb
xchg
pop
out
jnp
imul
int
mov
mov
scas
mov
pop
mov
ja
jb
cmp
imulb
lcall
lock
stos
out
sarb
mov
cld
mov
sbb
mov
sbb
mov
stos
pusha
std
mov
hlt
cs
stc
jmp
fisttpll
pop
sbb
test
leave
pushf
ffreep
push
xor
jle
sub
add
cmp
or
ljmp
in
arpl
or
or
mov
f2xm1
dec
andb
sub
xchg
or
adc
dec
inc
push
inc
sub
adc
add
mov
dec
adc
add
inc
jbe
mov
adc
xchg
orb
subb
mov
add
push
or
sub
xchg
or
inc
or
not
orb
adc
push
xor
fiaddl
loop
aad
stos
sub
sbb
inc
fcoms
rol
hlt
xchg
into
mov
int3
subl
dec
sbb
stos
dec
sbb
stos
dec
sbb
test
dec
sbb
test
sbb
cmpsl
dec
sbb
cmpsb
dec
sbb
movsl
dec
sbb
movsb
dec
sbb
mov
dec
sbb
mov
dec
sbb
outsb
xor
inc
mov
int
push
sbb
jmp
xchg
jge
lods
stos
and
inc
xlat
stos
mov
jmp
lods
jb
scas
push
mov
decl
mov
das
pop
xchg
pop
and
or
in
fisttpll
js
mov
mov
shrl
arpl
stos
mov
stos
ss
inc
ret
divb
stos
xchg
popf
xchg
enter
out
sahf
inc
sbb
aam
mov
ret
imulb
pusha
dec
mov
and
pop
or
mov
cmp
dec
sbb
cmpsl
inc
cmp
sbb
mov
or
and
test
xchg
mov
adc
jbe
add
stos
cmp
push
ja
mov
cmpsb
and
mov
dec
insl
push
ja
daa
ret
push
sub
mov
sti
mov
mov
stos
movsl
mov
sbb
stos
push
pop
mov
xlat
dec
lods
mov
sbb
lahf
fldenv
sub
cli
push
data16
out
dec
gs
add
nop
out
xchg
adc
add
mov
cmpsb
inc
mov
jecxz
mov
push
and
inc
popa
gs
push
insl
add
push
cmc
rcl
in
push
stos
push
xchg
mov
insb
mov
xor
lods
cld
pop
inc
sbb
xor
mov
push
cmp
add
mov
andb
loop
cmp
cmp
subl
dec
adc
jg
or
gs
xor
cmpb
pop
add
mov
mov
cltd
xor
jmp
add
adc
lds
xchg
sub
sbb
data16
dec
mov
xchg
lods
ljmp
out
mov
inc
outsb
cmp
cmp
xor
mov
mov
adc
mov
sti
mov
mov
mov
pop
out
pop
ja
push
add
lret
and
aad
jb
push
sub
jbe
lods
cmp
in
sub
sarb
lcall
sahf
or
fwait
add
pop
jbe
test
xor
pop
xor
dec
sub
push
inc
bound
ljmp
out
adc
add
pop
jg
fdivs
les
data16
pop
lock
xor
imul
mov
scas
xor
loopne
sub
fwait
pop
jno
add
add
inc
and
add
add
add
add
in
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
xchg
sub
add
add
add
loop
jae
iret
mov
divb
out
lea
imul
xchg
call
lock
dec
push
das
adcl
mov
pop
mov
popl
testl
dec
dec
jp
xchg
movsb
enter
orl
xchg
cwtl
stos
rclb
dec
dec
push
or
xor
xor
bound
fstl
movsb
call
sbb
icebp
ret
lret
inc
push
add
xchg
and
mov
movsb
clc
lea
mov
mov
inc
shlb
enter
cli
int3
rclb
cmp
pop
bound
call
or
lds
and
ss
mov
mov
mov
inc
aaa
or
push
jbe
or
jecxz
std
loop
push
addb
cmp
rcl
or
adc
lock
ds
inc
cwtl
pop
add
sbb
and
sbb
adc
aad
pop
adc
mov
mov
sub
ret
call
pop
testb
data16
fstps
adc
pop
mov
flds
decl
mov
dec
mov
mov
and
sbb
cmp
cmpsl
sbb
btr
mov
fs
jge
push
mov
mov
cmp
xorl
je
push
jecxz
adc
cld
les
push
mov
insl
movsl
mov
jb
sub
or
xchg
sub
mov
pop
push
test
cmp
ja
jo
jmp
ss
and
cli
pop
xor
mov
ret
rol
sar
and
in
popa
sbb
or
add
cmpsb
or
pop
mov
sbb
das
rcrl
lahf
pop
add
das
inc
pop
in
test
scas
dec
sub
shlb
mov
inc
inc
dec
imul
xchg
adc
test
sti
inc
jge
pop
dec
pop
push
mov
push
inc
or
ljmp
or
or
imul
push
xchg
cmp
pusha
xchg
adc
add
das
ret
test
mov
dec
sub
dec
mov
xorl
fiaddl
repnz
push
mov
jle
out
cmp
cmpl
adc
push
dec
pushf
mov
lret
cli
fwait
xchg
das
mov
data16
mov
lret
loop
push
sbbl
fwait
inc
vphaddubw
aam
and
js
jg
ficoml
decl
cmpsb
aaa
jae
mov
pop
dec
mov
pop
cs
mov
xor
add
andb
insb
loope
sub
insb
sub
and
imul
outsb
fsubr
xor
xchg
mov
bound
or
gs
test
jmp
xor
sub
pop
inc
and
ret
stos
mov
out
out
jae
mov
fildll
jecxz
mov
iret
push
movsl
call
in
stos
leave
add
hlt
jmp
push
sbb
fdivl
mov
pop
pushl
int
or
dec
jl
add
mov
mov
jg
or
xchg
xchg
in
les
push
daa
cld
adc
dec
in
ds
and
cmc
fcoms
data16
xorl
test
leave
and
mov
shr
cmc
outsl
cmp
aam
cmc
popa
ljmp
or
loopne
mov
adc
and
nopl
gs
mov
and
ljmp
stos
ja
in
or
bswap
sub
or
into
stos
adc
clc
xchg
daa
cmp
lock
push
imul
cmp
add
fists
arpl
jecxz
jb
lea
mov
mov
shr
pop
fsubp
fimuls
push
jo
mov
push
push
mov
mov
dec
add
dec
int3
das
add
fmull
mov
inc
cld
out
jp
in
add
shl
pop
dec
aas
mov
dec
pop
xor
neg
mov
jp
popa
and
push
jno
ss
pop
imul
xchg
jg
divl
push
test
sbb
das
add
in
sbb
mov
das
or
xchg
mov
andb
addl
mov
push
jns
add
pop
xchg
cmp
adc
add
loope
std
js
cmp
popf
push
adc
roll
pop
fisubrl
mov
lods
mov
pop
mov
pop
enter
shlb
rclb
fwait
and
jle
mov
xchg
inc
push
pop
cmp
push
and
inc
repnz
lahf
lds
push
hlt
and
std
lea
loope
subps
xor
in
lret
jae
cmp
adc
mov
inc
ss
lret
cmpsb
dec
jp
int3
xor
sbb
stos
xor
or
pusha
mov
insb
cmpl
movb
xchg
outsl
mov
int
out
pop
push
js
pusha
stc
rol
xchg
std
loop
js
sbb
sti
pop
outsb
pop
subb
cmp
xchg
sbbb
jns
cmpsb
addr16
rorl
jp
pop
out
mov
cmp
ss
or
test
push
push
pop
stos
and
cmc
jns
rorb
cmp
out
in
mov
inc
jg
jnp
out
jo
loope
adc
push
adc
dec
adc
mov
xlat
xchg
mov
lock
mov
push
repz
flds
dec
jg
mov
or
add
nop
push
adc
mov
scas
sbbl
jbe
in
sarb
imul
mov
mov
aad
enter
mov
pop
or
into
push
or
jmp
or
in
mov
pop
gs
pop
dec
push
mov
loope
xor
adc
shrb
xchg
repz
rclb
sbb
pop
or
js
or
frstor
repz
mov
sbb
xor
ret
or
stos
addr16
loopne
out
pop
orl
cmpsl
lds
cmp
xorb
cmp
push
xchg
fdivrs
iret
mov
clc
test
jp
sub
jae
loope
xchg
ds
jmp
testl
pop
dec
mov
cli
push
inc
test
fwait
mov
adc
cmc
push
in
mov
xor
je
clc
loope
xor
push
xchg
pop
sub
xchg
mul
rcrb
or
mov
push
push
aaa
in
test
fadd
fdivl
jl
and
test
adc
pop
jp
or
push
pushf
xor
cmc
shll
mov
ds
in
push
pop
in
xor
mov
pop
sbb
sbbl
jmp
push
mov
sbb
scas
fs
dec
add
sar
sub
popf
ds
sti
pop
cli
and
cmpsl
mov
dec
dec
fisubrs
xlat
sarb
lods
sub
inc
int3
mov
xor
in
inc
and
push
jo
test
js
bound
fwait
icebp
cmp
jle
fcomps
mov
int
cmp
cmpsb
arpl
repnz
mov
pop
movsb
out
rcl
xchg
dec
push
or
sbb
scas
pop
xchg
iret
adc
in
jns,pn
aad
pop
inc
cmc
std
add
popf
lcall
js
adc
mov
stos
ud1
movsb
ret
sbb
movsb
fstl
add
jae
or
xchg
jae
repz
add
movsb
test
jmp
fdivrp
fnstcw
xchg
mov
les
jle
mov
loopne
cmpl
or
jbe
sahf
ljmp
cld
xchg
pop
popa
jns
pushf
mov
das
lret
cwtl
adc
push
push
cmp
repnz
pop
adc
adc
xchg
cmpl
sti
lds
and
int
in
pushf
lret
jl
push
mov
pusha
sub
mov
pop
aad
lds
pop
ja
sbb
pop
mov
or
faddl
rcll
aad
hlt
xorb
mov
in
jae
mov
lret
out
shl
pusha
push
mov
sbb
outsb
lds
imul
aad
pop
sbb
out
mov
mov
test
test
out
mov
pop
push
stos
sub
pop
mov
mov
mov
shrl
pop
lcall
push
stos
imulb
pop
fidivrl
pop
das
call
and
icebp
mov
mov
pop
pop
fistl
cmp
push
fdivp
xlat
pop
fdivs
cmpb
sub
cmp
push
and
adc
mov
es
add
sbb
mov
jle
mov
hlt
icebp
adc
lods
fs
popf
mov
xchg
test
popa
mov
sbb
xor
scas
cmp
push
cmp
sub
rclb
pop
aam
lods
jg
outsb
stc
xchg
movsb
arpl
ljmp
push
popa
hlt
pushf
inc
cltd
mov
fdivr
inc
xor
sbb
sbb
cld
popf
push
push
ret
add
aam
mov
mov
fisttps
mov
mov
xchg
mov
mov
xchg
xchg
incb
add
mov
out
out
lods
and
test
mov
neg
push
inc
mov
add
in
sarl
mov
fs
xchg
jns
shrb
fdivrp
loop
adc
fimuls
test
xor
popa
rorb
lods
mov
lock
and
xchg
aaa
jp
push
scas
add
sbb
addr16
lock
xchg
sbb
fsubp
adc
mov
inc
lea
mov
mov
dec
cmc
popa
ret
sub
xor
sub
outsb
stos
cs
add
arpl
ja
xor
loopne
mov
push
mov
or
inc
insl
and
push
or
xor
mov
pop
add
jnp
jno
jmp
js
inc
cmp
sti
push
mov
mov
in
cmp
mov
rep
movsl
rep
ret
enter
inc
aaa
mov
or
ret
aad
out
in
cmc
shr
pop
mov
sbb
xchg
pop
ss
aaa
ret
aam
mov
inc
mov
fwait
mov
test
clc
gs
aas
xor
cmpsb
stos
push
shr
addr16
inc
hlt
pop
jb
shl
sbb
sub
imul
dec
es
inc
dec
or
mov
repnz
movsl
insl
sub
movsb
mov
inc
lea
sub
push
sub
mov
lock
mov
cmp
dec
mov
xchg
jb
fsubrs
enter
icebp
inc
jge
repnz
daa
int
movsl
jge
pushf
cmpsl
insl
add
imull
mov
test
cmp
loope
fldcw
in
aas
push
pop
inc
xchg
repnz
in
push
lret
add
push
jmp
jns
push
push
mov
inc
dec
cmc
mov
out
adc
mov
pop
add
idivb
scas
ficoms
cld
cmp
movsb
insb
inc
cli
movsl
ret
inc
aas
mov
clc
pop
jbe
xchg
stos
inc
dec
jle
leave
mov
inc
sub
push
mov
pop
movsl
adc
test
pop
hlt
data16
push
sbb
dec
jg
adc
push
scas
fldcw
addr16
test
lods
int
mov
out
mov
xchg
loop
ds
pop
xor
cmc
out
xor
pop
arpl
out
push
cmp
xchg
dec
xlat
adc
aad
mov
into
mov
push
pushf
imul
pop
ds
jae
leave
lods
fnstenv
xor
cmp
int
jmp
stos
clc
inc
mov
sbb
hlt
push
push
pop
sub
xchg
jmp
pop
sub
jo
fsubs
shrl
jae
pop
add
and
adc
stos
pop
or
lret
test
pop
jge
push
sub
scas
mov
int
or
fistpl
in
mov
mov
mov
pop
mov
icebp
jmp
lds
cmp
fimuls
cs
xor
pop
out
mov
lods
adc
fdivs
lds
cmp
cmp
or
sahf
int3
mov
popa
mov
std
xor
cwtl
rcrl
fnstsw
fnstsw
mov
scas
sbb
and
jp
aaa
mov
lret
sub
out
in
js
add
mov
inc
mov
cmp
test
push
bound
sub
mov
add
inc
xor
out
push
inc
xchg
test
pop
in
sub
out
jns
aaa
rorl
or
inc
or
stc
loopne
ret
xor
bound
mov
or
jecxz
add
sbb
in
adc
out
pop
mov
lret
cmpsl
je
mov
sbb
stos
pop
sahf
mov
fstpl
inc
das
push
les
or
dec
daa
or
and
xchg
push
fnstsw
fdivr
rorb
mov
push
pop
lds
call
or
and
push
xor
and
xchg
pop
xor
or
les
cmp
out
aas
fnstsw
lock
jle
cmp
fidivl
js
inc
add
imul
push
mov
pop
in
popa
ja
sti
mov
push
mov
pop
push
pop
inc
jmp
dec
adc
and
ret
push
sbb
inc
fsts
hlt
cmp
push
andb
dec
test
push
add
ja
cmpsb
data16
imul
push
loope
mov
push
mov
popa
pop
jmp
jp
sub
xchg
mov
sub
ja
inc
cmpsb
int
cli
cmpsl
shll
rcrl
mov
aad
push
xchg
gs
popf
fsts
daa
add
call
roll
cmp
pop
leave
fistpll
jl
sbb
jge
fists
jno
pop
outsl
push
rol
dec
inc
xchg
xchg
xor
test
outsl
pop
push
inc
sbb
and
mov
mov
push
repnz
mov
inc
mov
or
jne
xchg
daa
xchg
dec
inc
lea
pop
pop
pop
test
mov
lahf
mov
dec
push
data16
repnz
icebp
mov
dec
je
mov
dec
in
popf
xor
movsb
roll
jecxz
xor
aad
push
jle
mov
dec
mov
push
dec
mov
mov
jo
push
xchg
push
adc
mov
jae
push
mov
jae
and
sub
mov
push
ret
inc
pop
adc
sarl
sub
lds
mov
pop
xchg
push
xor
dec
adc
pop
dec
push
add
jbe
scas
enter
inc
ja
addr16
pop
jo
or
mov
out
adc
and
repz
inc
inc
jge
mov
test
cmp
xchg
daa
aas
loope
es
jo
mov
aaa
ds
lods
sub
jo
aad
or
jecxz
leave
aaa
sub
push
jp
cmp
xchg
out
cmp
xor
xor
and
fldt
cs
cmp
repz
jb
add
out
das
fnsave
mov
inc
test
loop
jg
repnz
outsl
test
xor
or
jecxz
in
inc
cmp
push
stc
mov
pop
shl
adc
mov
dec
and
iret
cmp
push
lods
addb
lods
xchg
dec
jno
aad
stc
and
cmp
lcall
icebp
sti
out
in
iret
inc
push
inc
arpl
sbb
leave
aaa
xchg
push
cmp
or
lods
repnz
adcb
inc
mov
push
push
into
push
or
jns
std
loop
xor
test
in
icebp
inc
pusha
notl
pop
inc
adc
inc
add
popf
out
pop
lea
aas
fists
repnz
mov
dec
jne
fnsave
jg
mov
sar
mov
mov
and
insl
pop
je
shrl
xor
repz
out
insl
sbb
inc
cmp
dec
or
cmovne
out
push
sbb
hlt
cmp
out
mov
mov
jge
fdivs
decb
inc
mov
mov
mov
mov
pushf
dec
fildll
push
dec
sahf
push
imul
jno
mov
or
push
sbb
and
sti
push
push
cli
mov
mov
stos
mov
sub
xor
cmp
jbe
rol
mov
lret
inc
mov
jl
test
cmp
xchg
dec
mov
pop
push
add
jecxz
scas
enter
fs
sbb
popf
lcall
fwait
sub
daa
aad
pop
pushf
or
jle
pop
push
pop
push
fwait
or
pop
push
div
xchg
lods
jl
xchg
pusha
sahf
xor
sbb
lods
jo
and
hlt
and
jmp
call
mov
dec
mov
or
inc
fistpll
std
sub
inc
mov
scas
scas
sahf
test
mov
mov
jmp
sbb
jp
cli
push
cmp
cmpl
jns
mov
stos
divb
mov
push
pop
push
xorl
or
jnp
adc
add
sbb
push
xchg
cwtl
sbb
lds
clc
movsl
dec
imul
loop
out
out
dec
jecxz
pop
ja
sub
rclb
push
es
dec
sub
insl
push
call
lret
insb
sbb
leave
pop
fsub
movsl
add
insl
mov
cld
pop
xchg
jecxz
aas
loop
idivb
pop
pop
sahf
dec
nop
pop
jmp
sub
sub
inc
shll
adc
sub
add
and
fnstcw
and
inc
sahf
cmpb
adc
out
fstl
cmp
scas
mov
lock
pop
xchg
lret
cs
jo
in
mov
repz
inc
pop
ss
loopne
cmpsb
mov
cmp
cli
cmc
adc
dec
mov
arpl
jl
xor
stc
fdivl
lods
dec
imul
push
out
fsubrs
push
cwtl
inc
push
enter
cmp
jg
jne
push
cli
test
push
inc
cmp
ss
cmp
jo
lods
mov
adc
mov
mov
ljmp
bound
popf
or
jno
cmp
arpl
dec
jnp
ljmp
js
lods
imul
out
adc
pop
idivl
sbb
pop
push
push
and
dec
iret
sbb
xor
pop
jmp
es
test
bound
jmp
fidivs
shll
or
dec
push
mov
outsl
adc
int3
mov
push
fcom
jns
or
in
adc
outsl
jp
popa
popf
push
xchg
bound
pop
test
cmp
loop
rclb
rorb
es
out
loopne
sbb
fcmovbe
xchg
movsb
pushl
addb
mov
stos
dec
mov
dec
push
out
xor
cs
sahf
mov
lods
rolb
pop
mov
adc
jl
jns
insb
mov
fucomip
push
mov
aas
jns
fcomps
rol
inc
jno
pop
xor
xor
iret
inc
mov
jmp
push
mov
minps
cmpsl
mov
add
fisttpl
add
ja
dec
adc
fisubl
lret
pop
jle
dec
jne
movd
fxch
fmuls
ret
cs
mov
sarb
aas
mov
cmp
arpl
pushl
aas
cmp
hlt
mov
push
cld
imul
cmp
outsb
cli
cld
xchg
pop
ja
testb
rcrl
sub
xlat
addr16
jae
adc
sbb
test
sub
mov
daa
xchg
mov
jmp
mov
lea
cmp
fimuls
xorl
shrb
mov
loope
cmp
cmpsb
and
mov
cmp
pop
mov
gs
push
lret
fcoml
test
jb
push
cwtl
cmp
fcmovne
jns
inc
lcall
mov
arpl
leave
push
mov
clc
bound
sub
jecxz
dec
aaa
mov
jg
rcrb
jo
int
sub
mov
aad
imul
cmp
or
xor
call
es
pop
pushf
sub
xchg
push
insb
xor
sub
xor
call
daa
jae
sbbb
push
jle
pop
push
inc
jp
mov
sbb
stos
insb
call
pushf
dec
or
pushf
push
cmc
insb
mov
push
mov
fadd
mov
nop
add
inc
mov
les
push
sub
sub
test
sub
idivl
js
mov
imul
jl
clc
cmc
mov
testl
xor
cmp
frstor
insb
dec
cmp
inc
jnp
test
lret
jns
mov
inc
inc
sti
push
jge
sbb
inc
mov
outsb
repz
xor
lods
add
pop
ljmp
cld
mov
mov
xchg
add
rorl
lret
cmp
push
add
ljmp
loopne
in
add
ds
mov
scas
outsb
inc
inc
sbb
pusha
lea
mov
rcl
xchg
fistpl
jae
xchg
adc
push
stos
jae
pop
js
xchg
mov
cmpsb
push
mov
cmpsb
je
xor
jns
mov
test
mov
test
mov
call
adc
out
pop
jb
jle
stos
mov
stos
xchg
xchg
pop
mov
adc
push
mov
out
rorb
dec
cli
scas
pop
sbb
dec
shll
pop
fisttpl
pop
cmp
add
cmp
pop
xchg
std
ret
test
xorl
jg
repnz
shrl
out
hlt
pop
pop
mov
subb
arpl
sub
int3
ffree
sub
lcall
out
mov
aas
loopne
lahf
jo
and
or
iret
mov
popl
cld
or
mov
xor
push
push
mov
icebp
cld
adc
loope
ds
ss
outsl
popf
sahf
mov
or
push
ds
pop
mov
cmpsb
cli
inc
les
inc
inc
std
daa
lds
and
or
mov
cmp
xor
mov
add
sub
push
out
test
stc
loope
pop
jl
pop
test
testb
push
scas
xchg
push
rcll
mov
fisubl
popf
jne
ret
decb
lds
scas
push
loop
je
ljmp
or
cmp
lods
and
xchg
pop
popa
inc
sub
cmpsb
iret
aas
nop
mov
inc
mov
outsl
test
push
cld
enter
mov
mulb
pushf
add
add
adc
mov
push
movsl
rcll
hlt
lds
sub
in
pop
inc
lcall
dec
sub
mov
or
lods
jg
inc
mov
pop
adc
adc
ret
adc
scas
popf
test
mov
jmp
push
mov
jle
fcoml
dec
adc
cld
jae
movnti
sbb
dec
mov
dec
int3
rol
lret
mov
test
movsl
lahf
jg
push
adc
in
xchg
xor
mov
or
fcmovnu
out
mov
sbb
ret
push
out
inc
rcrl
into
hlt
mov
mov
mov
cmp
mov
out
scas
pop
mov
rcll
sub
mov
int3
cs
mov
jns
or
aad
aaa
lods
loopne
sub
adc
push
cli
daa
mov
push
or
repnz
lods
mov
mov
shlb
pop
cltd
lret
sub
repz
pop
push
cwtl
stos
into
fidivrl
mov
mov
fnstsw
testb
ss
es
adc
mov
mov
lret
lret
loopne
cmpsb
hlt
sbb
divb
int
sub
inc
cmpl
movl
adc
aaa
mov
mov
arpl
push
in
cmp
dec
in
push
arpl
sbb
lods
ljmp
ljmp
mov
jl
sbb
aaa
fldt
sbb
roll
mov
outsl
imul
mov
pusha
je
lret
scas
jae
outsl
mov
inc
push
or
jmp
mov
movsw
dec
xlat
rorb
dec
jne
dec
das
imul
and
ja
outsl
inc
mov
sti
mov
mov
setle
push
push
jg
cli
inc
aad
mov
clc
shr
xor
xchg
push
and
adc
mov
adc
dec
hlt
movsb
in
mov
and
inc
loope
mov
mov
fisubrl
lods
inc
mov
pusha
inc
jl
cmp
or
mov
dec
push
adc
fnstenv
xchg
stos
cmpsl
xchg
clc
insl
movsb
xor
stos
push
push
push
xor
rcrl
mov
sbb
mov
push
imul
movsl
sti
add
jge
inc
xchg
jb
push
loopne
mov
push
daa
xchg
scas
mov
aaa
xchg
inc
pop
adc
js
lcall
test
subb
cmp
mov
out
out
leave
cltd
cld
ret
ret
dec
sbb
jg
daa
std
and
xor
pusha
mov
sti
movb
xchg
imul
xchg
in
jb
xchg
inc
inc
inc
cmp
jp
and
cmc
xor
mov
push
movb
pop
addr16
rcl
sti
jo
movsb
leave
push
sub
push
pop
lods
icebp
cmc
mov
adc
or
iret
imulb
in
jo
sub
pop
mov
jg
mov
pop
out
mov
xchg
mov
mov
xchg
les
inc
jno
cmp
dec
cmpsb
pop
iret
outsl
sub
adc
pop
adc
cmp
dec
es
shl
stc
mov
and
jl
out
lock
pop
add
lcall
dec
sub
or
mov
insb
int3
sti
xchg
jb
jmp
ss
popf
movsb
ret
lahf
ja
ret
jmp
dec
lea
pushf
subl
xchg
push
test
mov
in
aam
dec
popf
fdivp
outsl
in
inc
rcrb
pop
adc
sarl
pushf
dec
jmp
movsb
or
mov
pop
fsubs
in
push
mov
js
ljmp
imul
in
mov
adc
pop
fists
lods
add
in
scas
aaa
pop
pop
inc
rorl
inc
dec
cmp
mov
xor
lahf
test
sti
fstpl
inc
push
push
jno
incl
sub
and
sahf
jp
xchg
mov
or
cld
mov
mov
ret
adcb
cmp
hlt
inc
sbb
dec
or
subl
xor
push
and
and
push
lods
and
and
dec
xor
jae
add
sti
sarb
add
lock
adc
or
inc
pop
pop
sub
adc
sarb
cmp
sbb
out
cltd
jne
sbb
idiv
mov
aas
movsb
xchg
das
pushf
fadds
push
in
test
adcl
flds
push
add
or
add
clc
add
xor
cli
push
push
popa
add
lret
add
sbb
adc
inc
lds
push
jmp
sbb
add
pop
pushf
insb
jae
mov
add
add
xchg
pop
fs
dec
mov
dec
or
mov
data16
inc
lock
mov
jg
add
fwait
adc
cmp
mov
cs
fcmovb
dec
ficoms
inc
test
sub
sbb
dec
in
or
xchg
inc
fcomps
jae
ds
cltd
push
pop
arpl
mov
sbb
sti
repnz
cmp
xor
or
popf
lods
jns
andb
sti
sbb
pop
ret
add
aam
adc
or
hlt
vshufps
dec
sbb
stos
push
in
inc
xlat
dec
pusha
jg
mov
push
mov
pop
inc
cmpl
inc
adc
sub
pop
xchg
mov
mov
shl
inc
mov
add
sub
das
xchg
nop
push
adc
rolb
cmpsb
orl
addb
adc
sar
leave
inc
adc
or
lods
in
adc
movsb
mov
cmpsb
pop
mov
push
cmp
cmp
js
pop
sub
or
ds
fisubl
fdivp
bound
pop
and
pop
push
ror
out
js
neg
ds
and
dec
lds
fsubs
jecxz
xchg
stos
std
mov
push
imul
pop
and
push
and
ja
iret
pop
in
cmp
setne
and
pop
inc
jns
mov
ret
mov
fsubs
xchg
xchg
xchg
cmp
addr16
fwait
in
rorb
dec
or
mov
outsb
icebp
or
mov
mov
ds
out
int
inc
lcall
lret
lcall
dec
jae
loopne
lea
imul
or
xchg
scas
testl
pop
stc
enter
dec
repz
leave
push
xor
outsb
sbb
test
mov
cmp
jl
adc
jp
cmp
add
popf
inc
add
fcmovnu
pop
cmp
mull
mov
mov
testl
push
pop
add
mov
mov
imul
sti
mov
xor
xchg
and
dec
jp
mov
cmpl
mov
outsl
push
or
lea
sub
pop
rorl
dec
movsb
dec
ss
jb
jae
push
rcr
and
xchg
daa
and
sbb
iret
pop
and
adc
subl
scas
ss
add
loop
mov
icebp
notl
js
pop
fstpt
in
mov
nop
mov
push
imul
fisubrl
sub
or
arpl
sbb
push
push
push
sbb
shll
cmp
arpl
xchg
jo
jecxz
sahf
jno
inc
enter
shll
mov
cmp
pushl
mov
mov
jbe
sbb
adc
adc
mov
add
cmc
mov
stos
cmp
adc
fildl
lods
popf
dec
sub
sub
mov
movsb
jb
inc
int
pop
adc
sub
sub
jns
into
push
testb
inc
lock
jge
call
cmpsb
test
sub
ja
fidivrl
dec
xchg
fsubrl
mov
xor
fsqrt
push
or
mov
clc
xchg
pop
mov
mov
in
add
jns
inc
fistpll
dec
xchg
mov
or
cmc
mov
pushf
in
adc
mov
mov
scas
push
jecxz
js
cli
idivb
sbb
mov
int3
adc
xchg
mov
mov
out
out
inc
or
adc
push
fbstp
lahf
ljmp
dec
jg
fmull
test
jae
xor
sti
gs
das
outsl
ds
sub
dec
cld
dec
mov
cli
push
aaa
xchg
daa
jo
cwtl
fisttps
loopne
lds
xchg
out
sbb
push
dec
sub
xchg
adc
rorb
xlat
jns
xlat
gs
and
aas
dec
pop
in
sub
pop
inc
aam
scas
cmpsl
pop
cmp
addr16
cmpsb
adc
pop
lods
mov
jb
jb
or
imul
ljmp
js
lcall
sbb
pop
outsl
dec
add
xor
sub
push
cs
sub
lods
movsl
xchg
and
loope
xor
push
in
cs
in
add
sub
ds
out
mov
clc
ret
insb
das
test
ftst
pop
mov
notl
mov
push
xchg
icebp
loope
in
ret
mov
arpl
cld
movsl
les
shrb
push
dec
jo
cld
mov
mov
adc
lods
ret
dec
jg
sub
addr16
cmc
pop
cmc
push
loope
cmp
leave
sahf
pop
xchg
adc
mov
mov
adc
imul
enter
mov
cmp
stc
iret
xor
cmc
sub
and
xchg
in
pushf
xchg
and
aam
mov
jo
pop
cmp
in
repnz
mov
int
dec
dec
data16
call
movsl
xchg
mov
fidivrl
jmp
push
int3
fs
enter
repz
mov
sbb
mov
daa
ret
stos
cmpsb
mov
icebp
clc
mov
push
dec
and
cmp
sub
xchg
outsl
mov
nop
cmovnp
mov
je
out
xchg
repnz
cmp
into
les
in
cmp
sub
es
jae
push
outsb
insl
push
add
jae
lods
mov
xchg
fstp
out
sti
add
aaa
lret
adc
dec
arpl
jmp
out
jle
fcmovb
pop
icebp
icebp
scas
jmp
shrl
jp
jge
add
jno
clc
and
rclb
mov
pushf
push
repnz
iret
add
fs
lock
mov
jp
pop
fwait
push
shll
fcoml
jge
shll
sbbb
out
and
aam
jl
je
fcompl
lret
xchg
test
and
out
xchg
gs
dec
and
loope
sbb
lds
dec
dec
ds
es
mov
ds
xor
fldln2
mov
in
test
cltd
ds
pop
xchg
sub
fmul
sbb
mov
push
mov
or
push
push
sub
jg
int3
das
scas
frstor
test
notl
sub
int
ror
mov
out
jno
inc
cmp
mov
jbe
leave
mov
cmp
jle
std
xchg
jmp
in
cmp
pop
fbld
cmc
in
popa
mov
je
ja
pushf
xor
out
call
mov
test
out
ja
lahf
xchg
sbb
sub
sahf
pushf
mov
repz
push
pop
pop
jp
lahf
fwait
bswap
cltd
cmpsb
aad
std
outsb
jae
pop
clc
push
outsb
out
push
push
xor
mov
adc
lret
dec
je
mov
pop
orl
push
fnsave
sbb
push
ficoms
mov
loop
sub
fsub
lea
out
imul
fs
jb
inc
popf
pop
push
mov
leave
sub
out
or
test
push
fstpl
sbb
nop
insb
std
push
push
ret
out
jns
sub
push
push
and
inc
cmpsl
push
and
pushf
popa
xor
push
fs
cmpsb
rorb
mov
outsl
data16
or
and
mov
pusha
adc
sarb
lret
dec
clc
sbb
xchg
cmc
movsb
dec
scas
daa
sub
in
fisubrs
adc
ret
in
hlt
add
fs
in
in
or
xchg
push
les
data16
out
repnz
sub
dec
sub
movsb
es
dec
pop
in
bnd
test
xor
stc
xor
aas
add
dec
js,pn
and
pop
xchg
add
sub
les
add
add
hlt
addr16
stc
lods
out
sub
imul
xchg
icebp
push
aaa
mov
push
push
jae
add
jge
scas
into
add
enter
push
aad
out
test
push
pushl
stos
cmp
popf
mov
mov
xor
daa
pop
test
fiadds
insl
push
mov
sbb
stos
daa
mov
and
add
insl
ss
push
ret
testb
ss
negb
pop
scas
jg
adc
loopne
enter
xor
mov
mov
ljmp
lock
fidivrl
add
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
or
inc
dec
rcll
aaa
leave
or
rorl
add
imul
movsl
xor
dec
sub
pop
mov
push
outsl
sub
out
xor
mov
idiv
incl
jmp
call
add
jmp
call
lcall
