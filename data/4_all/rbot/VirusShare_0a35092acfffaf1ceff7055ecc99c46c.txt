out
std
xor
loop
scas
fwait
ja
mov
fs
inc
sub
mov
inc
pusha
mul
and
js
pushl
adc
push
pop
or
outsb
test
pop
inc
pop
sbb
xor
rcl
std
insl
mov
subl
push
ja
dec
jmp
pop
add
inc
add
ret
mov
std
insl
cmp
lods
jmp
mov
ret
and
das
in
cmc
lcall
bnd
hlt
and
ljmp
pop
cs
filds
adc
mov
scas
dec
mov
arpl
ja
ja
jae
jno
loope
rorb
xchg
in
popa
mov
dec
xchg
je
dec
bound
sbb
call
adc
jbe
addr16
loop
inc
and
out
loopne
ficomps
mov
adc
add
inc
pop
dec
scas
sbb
aam
add
sbb
aam
pop
stc
addb
mov
scas
arpl
notb
jb
lret
jno
push
xchg
xorl
scas
test
adc
push
cltd
divb
push
pop
sub
mov
inc
shrb
lcall
imul
mov
cmp
aam
fstpt
cmpb
je
out
mov
ret
push
das
mov
pop
or
xchg
js
mov
jne
xor
inc
push
push
repz
push
dec
cmc
es
pop
sti
in
dec
mov
dec
mov
vxorps
dec
daa
icebp
lret
mov
and
or
pop
mov
sbb
in
cltd
xchg
outsl
pop
mov
pop
aad
shlb
fdivs
out
dec
int3
cmp
xor
inc
lock
and
jp
mov
out
fsubl
xchg
pop
cmp
out
aad
inc
mov
stos
dec
sub
repnz
cmp
aas
sbbl
scas
xchg
sbb
scas
jns
adc
imul
jnp
sub
mov
mov
xor
into
in
rorl
fdivr
and
in
andl
addr16
sarb
mov
sbb
mov
inc
push
jno
enter
add
and
mov
fs
call
and
mov
lcall
lahf
loopne
push
xchg
lods
jge
loopne
stos
or
aaa
sub
sub
aaa
repz
rcll
lods
stc
imul
mov
loopne
dec
and
mov
jl
mov
cmpsb
lods
sti
orl
add
mov
in
mov
xor
and
sbb
push
cld
incb
ljmp
and
mov
sti
mov
and
lahf
inc
movb
mov
mov
xchg
and
inc
lahf
or
ljmp
xchg
push
cmp
mov
mov
push
std
mov
pop
and
sub
inc
and
mov
hlt
loopne
movsl
or
adc
jb
loopne
repnz
mov
fisubrs
aam
sbb
mov
inc
cmp
and
ljmp
inc
jo
jne
enter
mov
jno
popf
iret
push
cmp
in
outsl
jecxz
mov
jg
lods
imul
out
push
repnz
imul
incb
xor
xor
dec
out
cmp
arpl
mov
inc
test
aas
pop
jno
cmp
sbb
shl
fnsave
das
arpl
je
jle
sbb
or
mov
jecxz
mov
cmc
push
mov
and
mov
jmp
out
bound
add
mov
jne
and
sub
xchg
test
mov
jb
and
pop
les
subb
out
lcall
push
repz
into
cltd
inc
pop
push
xchg
nop
clc
icebp
add
lcall
jae
mov
popf
cmc
cmpsl
xor
test
and
pop
push
jbe
pop
mov
sarb
fsts
xchg
sti
ret
lcall
pop
shll
dec
lahf
xchg
xchg
cwtl
mov
mov
mov
das
cli
pop
add
and
cmc
add
es
fsts
cs
rcrb
cmpsb
cmp
cmp
ljmp
jae
repz
sub
or
dec
mov
and
adc
mov
dec
sub
and
adcb
mov
jp
and
add
sub
xchg
dec
mulb
in
jmp
lcall
mov
cmp
es
jecxz
add
into
lock
xorps
pop
dec
adc
xor
push
shrd
inc
mov
inc
add
and
mov
mov
lods
mov
ljmp
mov
scas
scas
jmp
sub
icebp
lock
push
mov
sub
mov
das
pop
mov
mov
push
xchg
xor
xlat
jmp
jno
add
loopne
imul
repz
js
mov
cmc
addr16
mov
mov
push
pop
enter
lea
sbb
dec
iret
mov
adc
in
sbb
shl
outsb
fdivl
cmp
int3
push
sarb
cli
jle
adc
sti
cmp
jns
pushf
pushl
sbb
mov
scas
add
mov
lods
std
mov
push
outsb
xchg
rolb
nop
fisubrl
rcll
cmp
popa
les
cmp
push
sti
pop
outsb
ss
mov
ja
pop
mov
mov
push
leave
loope
mov
aaa
rorb
idivb
adc
adc
sti
pop
movl
push
je
out
add
ja
hlt
popf
ds
outsb
lods
clc
sbb
inc
and
xchg
inc
lahf
xorb
out
das
clc
fs
nop
mov
dec
insb
push
jb
inc
rcr
push
xlat
rcrb
out
popa
or
xor
mulb
sbb
out
daa
scas
jo
fwait
sub
fsubp
push
push
pop
pop
jg
lods
cld
imulb
mov
ja
in
out
or
mov
addb
or
cs
and
dec
cmp
int3
xchg
in
in
shl
sbb
jl
xchg
shlb
ret
jmp
insb
mov
sbb
sbb
aaa
arpl
pop
jae
repz
pop
out
repnz
cmp
dec
in
icebp
fwait
push
lcall
mov
lock
repz
lock
repz
inc
ss
lods
jns
negb
sahf
mov
scas
xchg
push
pop
and
pop
mov
xor
pop
mov
aas
jp
lret
inc
cmpsl
push
pop
call
cmpsl
sub
cmc
outsb
subb
cmp
stos
push
sub
outsb
out
cmc
outsl
scas
repz
add
aam
add
and
mov
addr16
mulb
jae
aas
sbb
ficoml
sub
mov
into
adc
mulb
out
ss
and
scas
insb
mov
addr16
rcrl
inc
sbb
aad
xchg
adc
movsl
and
stos
xor
data16
mov
fwait
scas
loop
xlat
and
sarb
dec
popa
ret
mov
pushf
xor
test
pushl
cld
movsb
cwtl
loop
mov
pop
xor
daa
std
sarl
and
inc
sti
lcall
mov
ss
xchg
loope
pop
mov
lods
imul
jbe
pop
cmpsb
daa
jl
into
mov
push
push
ss
sti
dec
mov
pop
xor
or
mov
dec
jl
in
inc
mov
mov
jo
cmpsl
push
push
xchg
out
adc
cmp
mov
stos
test
mov
dec
imul
imull
fdivrl
sbbb
aas
mov
mov
jns
ss
xchg
gs
imul
outsl
lock
inc
dec
aaa
out
inc
add
jge
jne
mov
scas
jb
test
in
ljmp
pushf
cs
andl
xor
sahf
push
jecxz
out
mov
and
cmpsl
and
je
jnp
cli
sahf
adc
push
pop
dec
data16
cmp
cmpsl
adc
hlt
inc
adc
mul
mov
mov
and
pop
adc
jmp
xchg
push
cld
mov
cltd
dec
inc
stc
pop
test
in
and
cmp
adcb
lcall
ret
xchg
test
out
cltd
dec
outsl
jmp
out
pop
icebp
ret
arpl
lret
arpl
into
mov
cmp
xchg
imul
sbb
pop
fisubrl
loop
push
shl
pop
xchg
loop
decb
mov
out
push
out
cmc
xor
stos
xlat
loopne
ficomps
push
push
cli
pushf
jmp
lcall
push
leave
addl
imulb
pushf
jo
std
push
jmp
mov
jb
shrb
gs
outsb
in
fisttpl
cmp
xchg
pop
dec
xorb
adc
es
lods
xor
loopne
inc
stos
stc
fmull
ret
mov
pop
or
cmpsl
andl
xchg
aaa
mov
xchg
sbb
mov
cld
int3
aam
and
bswap
sub
mov
cld
lret
xchg
scas
cmp
popa
arpl
jno
call
loop
and
mov
add
adc
jno
lods
pusha
dec
test
or
mov
inc
rcl
push
out
popf
jle
data16
fwait
shr
jno
int3
testb
and
lahf
inc
out
aad
jmp
adc
dec
push
lcall
sbb
shll
jb
fwait
fs
xchg
and
xchg
mov
xchg
xor
es
mov
sub
loope
ljmpw
ljmp
out
inc
ficoms
add
or
in
adc
cmc
add
rcll
jae
push
test
mov
push
jne
testl
fsubrs
outsl
cs
js
push
addw
rol
sub
adc
push
roll
iret
pop
loop
or
js
cmp
mov
divb
dec
pop
imul
push
inc
push
add
push
cmp
sbb
or
xchg
sub
pop
leave
dec
mov
in
xor
lods
clc
cld
dec
shlb
sub
push
ss
jecxz
test
aaa
sub
orl
xchg
pop
adc
jnp
out
ds
adc
out
pop
cld
aam
bound
out
arpl
stos
adc
push
movsl
repnz
jp
insl
pop
jnp
xor
lock
ja
adc
push
pop
int
in
pop
sub
scas
addr16
cmpl
adc
sbb
or
cmp
inc
sub
push
fwait
dec
je
sarl
in
fwait
stos
ss
xchg
cmp
mov
cmp
add
je
or
xor
cs
cmpb
sbb
pop
adc
lds
sbb
ljmp
mov
jl
mov
push
xchg
dec
push
in
sbb
inc
adc
scas
push
cmp
mov
xchg
fisubrl
idiv
jg
imul
sti
fisttpl
movsl
cwtl
fsubrl
push
mov
out
inc
dec
mov
lds
add
das
jno
pop
pusha
imul
lods
xor
or
dec
adc
jo
inc
fldt
dec
sti
popa
pop
mov
jmp
sub
xchg
cmp
xchg
inc
fnstcw
jmp
mov
cmp
jp
fwait
movsb
cltd
insl
mov
lcall
fsubrs
iret
mov
pop
mov
gs
and
aad
dec
mov
nop
mov
lea
aam
or
jmp
or
fld
ficompl
sti
jp
push
mov
mov
cmp
incl
aas
popa
imul
ficoms
sub
mov
iret
pop
sbb
stc
repz
in
xchg
mov
pop
lret
mov
cmpsb
and
test
imull
fisubl
add
dec
mov
sub
or
dec
mov
mov
mov
rcll
dec
mov
repz
sahf
dec
popf
mull
ret
sti
outsb
pop
cmp
dec
out
subl
sub
ret
dec
incb
mov
test
cmpsb
mov
cwtl
xchg
add
lcall
aad
sub
js
mulb
jecxz
mov
js
sti
das
mov
xchg
pop
subl
stos
mov
in
test
loopne
aas
idiv
test
dec
repnz
mov
or
xchg
jae
dec
jb
dec
inc
push
js
into
jp
outsl
push
mov
testb
popf
or
ljmp
mov
xchg
out
mov
dec
cmc
or
je
out
mov
cmpsl
push
push
fidivs
mov
fisttpl
enter
mov
xchg
je
xor
and
sbbl
pop
into
push
iret
pop
adc
mov
or
or
iret
aad
inc
xchg
popa
les
cmp
jb
push
ficoms
mov
gs
outsl
hlt
sbb
mov
xchg
pop
push
jge
push
sbb
push
mov
lock
push
xchg
ret
adc
and
push
sub
stos
jns
xor
call
and
adc
xchg
mov
sub
adc
int
repz
add
inc
add
movl
fbstp
lcall
ja
scas
ja
xor
xor
inc
shl
fs
xchg
loope
push
xchg
ljmp
mov
lcall
cmp
rclb
or
repnz
fiadds
mov
sub
movsb
sbb
pop
mov
out
clc
pop
pop
adc
sar
mov
and
mov
daa
push
mov
lahf
inc
jb
and
xor
cmpsl
cmp
test
mov
test
pop
xchg
clc
idivb
out
in
cmpsb
cli
inc
bound
call
imul
adc
push
mov
sarl
mov
sbb
fistl
gs
sbb
dec
in
mov
pop
pushf
loop
in
ret
jmp
jg
xor
jo
test
xlat
cmc
mov
jecxz
fsubr
xchg
pop
cltd
xchg
xor
xchg
pop
iret
push
xchg
mov
insb
jae
inc
dec
cwtl
cmpsl
bound
push
lock
mov
inc
cmp
repz
stos
sbb
andl
rep
lock
mov
addr16
and
scas
pop
inc
out
cwtl
and
and
cmpl
icebp
int
out
arpl
push
cmp
inc
or
fdivl
sbb
out
mov
push
pop
cmpsb
sub
xchg
scas
or
xchg
hlt
adc
daa
and
and
push
daa
rol
pusha
inc
rcrl
mov
push
mov
mov
push
or
ret
push
push
loop
push
xchg
mov
pop
mov
cmp
pushf
imul
push
imulb
adc
rcrl
push
jns
and
shrb
pop
mov
daa
subb
fists
jecxz
mov
loop
pop
mov
pop
imulb
dec
push
pop
aam
mov
push
push
xor
add
test
or
movb
lret
pop
test
mov
orb
xor
aas
push
hlt
jb
lahf
jp
js
ds
movsb
cmp
dec
mov
out
and
inc
or
or
cmp
mov
cmpb
je
cs
movsb
out
xor
in
bound
aad
xchg
popa
or
add
or
ljmp
pop
mov
lahf
dec
xchg
jno
adc
inc
das
ds
ljmp
in
pop
sub
popf
lret
inc
stc
mov
icebp
arpl
andb
push
mov
and
mulb
loopne
scas
cld
lock
cmp
xchg
loope
mov
test
jp
jmp
push
mov
cwtl
out
pop
ss
aas
xor
outsb
das
pop
icebp
gs
fs
xor
jg
das
jge
mov
sahf
fistps
xchg
xchg
outsb
mov
inc
xchg
xchg
push
shrb
negb
aad
inc
jb
shlb
and
or
xchg
lock
push
stos
mov
xlat
sub
jb
mov
jb
lds
pop
data16
cwtl
or
fldl
out
movsl
sbb
sub
inc
jb
pop
pop
or
xor
scas
xchg
movsl
push
adcl
dec
mul
data16
test
int3
mov
inc
in
or
ret
arpl
cmp
xor
dec
jns
push
sbb
jecxz
or
mov
dec
popa
decb
scas
loop
outsl
mov
mov
jecxz
xchg
enter
push
cli
arpl
and
inc
lods
ljmp
mov
ljmp
dec
in
xchg
out
mov
sbb
test
cmp
cmpl
cs
xor
lcall
fwait
pop
ret
leave
adc
in
adc
adc
jmp
pusha
jp
dec
out
and
dec
icebp
pop
dec
lret
or
mov
dec
in
pushf
mov
testl
xor
dec
fs
jecxz
mov
mov
xchg
icebp
maxps
mov
xorb
xchg
jne
jge
xchg
sub
inc
push
arpl
push
neg
stc
rorl
ret
icebp
fimull
pop
data16
push
fcmovbe
stc
pop
inc
mov
scas
scas
xchg
in
jae
mul
rcr
pop
cli
dec
sbb
idivb
mov
mov
push
ret
icebp
je
scas
cmp
lcall
push
xchg
fistpl
jno
push
int
repz
jbe
mov
xor
push
push
lock
pop
inc
fwait
iret
xchg
loop
mov
dec
repz
outsl
pushl
push
push
ljmp
xor
and
ljmp
inc
xchg
mov
push
lret
std
sbb
ss
jl,pn
push
jle
adc
lahf
sbb
arpl
cltd
and
lret
pop
clc
ret
pop
bound
nop
aas
or
outsl
hlt
mov
in
sti
not
subb
and
imul
nop
mov
scas
or
cld
fcompl
jg
std
fnstenv
push
imul
idivb
xchg
outsl
sub
and
out
in
mov
or
xchg
push
mov
cld
in
cmp
pop
jno
sub
and
cld
jmp
jle
lahf
cmpsl
and
add
popf
xor
jnp
repnz
shll
retw
inc
pop
enter
cmp
mov
xchg
mov
sbb
xchg
add
in
xchg
mov
xchg
in
xchg
inc
lcall
push
scas
jmp
ds
jno
mov
es
lahf
aas
pop
loope
jbe
out
dec
jnp
fcom
sub
xor
pop
pushf
arpl
and
sbb
scas
mov
loop
mov
lds
cltd
mov
movsl
and
xlat
add
xor
pop
repnz
sub
mov
fistpl
fistpl
es
cmpsb
cs
xchg
repz
pop
mov
pop
das
pop
mov
lcall
and
add
adc
fadd
leave
mov
es
or
test
jo
ret
mov
pop
std
mov
adc
leave
mov
mov
insb
js
sub
ljmp
or
out
xor
ret
xor
and
jp
rcl
pop
lods
mov
and
adc
sub
dec
add
push
sahf
or
mov
push
sub
stos
sub
push
cmpsb
imul
mov
movsb
and
mov
sbb
dec
stos
xchg
rorl
or
or
jne
push
test
fidivrl
loopne
ficoml
xor
adc
pushf
adc
xchg
and
fidivrs
ret
dec
cmc
dec
movsl
adc
iret
push
fwait
or
fsubs
jecxz
inc
sub
imul
or
mov
lahf
jo
or
adc
xor
mov
in
mov
sbb
add
test
popa
mov
aaa
cli
fwait
je
imul
pop
arpl
loopne
pop
aam
in
ret
testl
xchg
sub
cmpsl
enter
sbb
inc
sti
add
xchg
push
in
add
mov
jae
inc
arpl
mov
nop
xor
pop
jnp
lret
push
jle
jae
les
inc
dec
out
pop
outsb
mov
inc
pop
das
lds
rol
inc
xchg
mov
push
outsl
sbb
es
push
jp
decb
inc
cli
popf
lea
mov
insl
and
shl
mov
mov
mov
or
nop
pop
xchg
sub
imull
call
and
xchg
stc
movsb
jmp
mov
mov
popf
jns
and
jb
je
jecxz
fnstenv
test
mov
push
int
add
loope
addr16
xchg
lret
daa
fldcw
int
rcll
mull
inc
ja
es
fdivs
push
xchg
je
js
adc
mov
or
sub
jno
fprem
mov
andl
orb
and
and
adc
out
cmc
mov
dec
and
repnz
ljmp
out
adc
stos
mov
or
dec
std
fists
xchg
push
jp
xchg
or
inc
mov
hlt
push
shll
roll
testl
sti
and
xchg
or
ja
int
mov
lods
sbb
in
pop
repnz
mov
add
adc
test
jge
add
fiaddl
into
mov
inc
arpl
or
sti
push
and
out
loop
sti
xchg
out
cmp
inc
hlt
mov
sub
pop
pop
push
test
sbb
xchg
push
jb
jne
gs
jnp
mov
mov
lret
adc
out
push
push
xchg
dec
mov
lahf
mov
inc
jb
sti
cli
fidivrl
shrb
mov
push
cld
xchg
mov
das
scas
cwtl
cmpsl
js
sub
mov
jmp
xor
jmp
jae
mov
fildl
out
test
adc
popa
sbb
xor
insl
sarl
sahf
mov
in
or
mov
jne
idivb
mov
add
xor
mov
lcall
lds
mov
and
imul
xor
and
and
pop
xor
inc
xchg
sahf
xchg
in
cmp
jne
pop
dec
push
and
jb
mov
inc
mov
and
mov
in
mov
inc
mov
cmpxchg
pusha
cmp
pop
sub
lcall
pop
xor
mov
lods
orb
dec
mov
sbb
outsb
sub
cmp
mov
mov
xor
lods
mov
add
mov
mov
cmp
inc
jne
push
ja
fsubl
jns
aaa
pushf
jnp
scas
sbb
das
jo
ror
mov
mov
xor
out
inc
testb
push
hlt
fcos
mov
mov
xlat
jnp
mov
jmp
mov
push
loope
inc
and
xchg
mov
loop
test
popa
sbb
sub
sbb
sbb
mov
fwait
and
jno
js
je
jnp
sub
test
jne
loop
es
enter
jp
aad
mov
fisttpl
ret
xchg
dec
xchg
dec
push
and
orb
ja
mov
movb
pop
xchg
aam
adc
dec
daa
or
dec
xchg
push
test
cmp
lea
pop
push
fimuls
sub
or
dec
aaa
das
adc
fcompl
cmpsl
lods
xchg
into
xlat
out
mov
adc
fimull
adcb
xor
push
pop
pop
sbb
push
cmp
call
mov
into
mov
je
ficoml
xchg
sbb
or
popf
sahf
xchg
or
test
and
xchg
out
pop
ss
jb
std
es
icebp
cmp
xor
cmp
arpl
mov
pop
pusha
mov
xchg
jnp
lahf
iret
mov
out
aas
std
fcmovnb
test
inc
lcall
adc
js
push
fldl
pop
xor
mov
cld
imul
push
je
aas
pop
sbb
call
out
cmp
and
pop
xor
mov
xor
pushl
dec
sarl
gs
mov
aaa
pusha
cmpb
and
out
mov
pop
xchg
mov
mov
xchg
dec
into
pop
jno
xchg
mov
adc
mov
xchg
filds
imul
inc
or
jmp
or
outsb
pop
cmp
push
xchg
mov
and
jecxz
inc
outsl
jo
imul
sbb
cs
jae
dec
push
es
mov
stos
mov
call
and
push
rclb
add
call
mov
cmp
xchg
lret
or
or
rorb
cltd
mov
cs
fsubs
push
sub
test
add
cmp
jmp
popf
jns
clc
inc
outsl
data16
loope
pop
adc
xchg
rcll
shrl
add
pop
imul
je
es
dec
mov
psllq
and
xorb
pop
sti
pop
dec
sbb
ds
jge
rorl
mov
xchg
cmc
out
jge
or
hlt
mov
popa
ljmp
sti
call
dec
xor
fidivrl
mov
xor
cwtl
int
pop
dec
adc
mov
popf
xlat
mov
jp
and
popa
mov
inc
loopne
notb
sbb
pop
mov
popa
lcall
jg
mov
mov
loopne
add
adc
enter
js
inc
mov
les
sub
mov
stc
jl
hlt
imul
jp
cmp
sub
not
dec
push
icebp
test
dec
out
andl
popa
dec
adc
movsl
idivb
sbbl
add
cmpsb
negb
mov
jns
and
cld
inc
sbb
add
push
sbb
pop
or
shll
mov
divb
bnd
push
sahf
push
test
xchg
xlat
and
fsubs
mov
mov
pushf
rep
inc
pop
xor
cmp
shll
rorl
adc
xchg
out
hlt
mov
jmp
pop
cli
push
xchg
mov
cmc
mov
iret
stc
mov
cmpsl
scas
mov
dec
das
ljmp
ret
lock
sub
insl
out
or
stos
inc
xchg
add
and
orl
movsl
ja
mov
jnp
mov
iret
mov
sbb
jbe
in
mov
inc
mov
sbb
aaa
adcb
sbb
push
popa
ret
mov
jnp
mov
fcom
loop
ret
pop
out
imul
or
and
inc
mov
mov
ret
mov
adc
pusha
and
jecxz
sbb
out
xchg
jns
sbb
dec
pusha
xorl
stc
icebp
push
int
lea
jp
andl
jge
or
sub
icebp
jo
sbbb
in
sti
and
int
mov
push
inc
dec
clc
push
int
cltd
inc
rcrb
notl
test
pop
inc
push
cmp
mov
push
add
cmp
hlt
cs
test
inc
add
mov
mov
mov
inc
stos
xor
popa
sub
stos
rcll
in
and
mov
stos
or
cmp
aaa
pop
mov
pusha
pop
mov
pusha
cmp
xchg
push
js
bnd
fisttps
out
inc
dec
fcompl
imul
je
fnstcw
mov
lock
out
ret
xor
outsl
add
iret
xor
lahf
mov
lea
xor
dec
mov
xchg
nop
shlb
test
mov
mov
cli
push
mov
stc
and
push
dec
and
adc
test
pop
shll
cs
icebp
jg
pop
dec
movsl
add
mov
sbb
sub
inc
push
dec
jne
jecxz
int3
mov
mov
and
jae
outsl
inc
scas
push
pushf
push
push
mov
lcall
xchg
pop
mov
inc
test
xchg
cmp
das
cmp
sar
push
fnstenv
cmp
clc
arpl
mov
lock
xor
cmp
lret
jl
cs
inc
or
push
leave
push
filds
scas
pop
sub
je
dec
and
push
mov
lret
jnp
aaa
push
outsl
pop
cmc
in
ret
lret
sbb
test
push
mov
fimull
ret
inc
adc
pushl
xor
jo
sub
adc
popa
test
dec
push
adcb
clc
daa
cmc
push
por
loop
push
xchg
jnp
stos
bound
es
shll
add
sbb
add
add
enter
sbb
mov
aaa
pop
or
fidivs
adc
or
jecxz
push
insl
jno
jb
mov
mov
pop
scas
or
out
add
sbb
nop
push
and
xor
jmp
fbld
xor
mov
pop
xlat
imul
fisubl
xchg
cmp
push
dec
subb
sarl
aaa
sub
jns
sub
push
and
lods
mov
cltd
and
or
jo
fistl
mov
push
jmp
xchg
push
pusha
dec
sub
idivl
mov
sti
sub
test
pop
dec
sbb
xchg
data16
and
rcrb
std
pop
shlb
cltd
stos
ss
mov
xchg
out
enter
dec
add
mov
push
int
sahf
fwait
dec
cmc
outsb
fistpl
rcrb
popa
inc
jnp
pop
mov
jbe
dec
aas
jns
andb
or
es
mov
mov
or
push
mov
mov
jmp
push
lods
iret
pop
scas
xchg
sub
pop
mov
repnz
mov
mov
dec
loop
test
enter
push
xchg
sub
mov
jecxz
repz
xchg
and
mov
aas
loope
pop
jmp
xchg
or
pop
fcmovu
mov
mov
aad
es
orb
sbb
out
add
sub
addr16
ficompl
xchg
stos
xor
mov
mov
xchg
ret
popl
fwait
pop
sub
in
sbb
int3
or
mov
rorb
sarb
jle
xchg
movsb
cmpl
stc
in
or
adc
inc
inc
xchg
test
iret
pop
fwait
out
jbe
jb
negl
das
xchg
inc
or
cltd
pop
pop
cmp
mov
sub
roll
mov
push
vxorps
push
ja
pop
sub
cmpsb
into
inc
dec
int
pop
xchg
push
cld
inc
aam
push
mov
ret
ss
rcrb
in
dec
sub
daa
fwait
jno
scas
orl
sub
push
insl
xor
int
jle
in
lods
insl
stc
fucomi
std
cld
cmp
mov
test
mov
je
push
mull
mov
jl
xorl
pushf
xlat
xchg
aam
stc
xchg
ret
mov
and
aad
fwait
lret
xchg
push
iret
fcmovnb
stos
xchg
xchg
call
popl
pop
dec
std
dec
lret
mov
push
clc
loope
pop
adc
js
pop
xlat
sub
mov
cld
fldt
fidivrl
mov
dec
dec
mov
add
in
leave
xorl
push
std
push
icebp
pop
pop
test
int3
and
jecxz
add
jp
nop/reserved
jmp
lea
inc
and
cmp
mov
lcall
in
lods
jle
daa
xchg
loopne
lea
add
mov
pop
fildl
jbe
pop
adcl
mov
xchg
sbb
push
in
mov
jo
jnp
push
stos
int3
jnp
pop
dec
fildl
or
fcmovnbe
lret
pop
ficompl
and
push
pop
imul
mov
xorb
leave
test
or
imul
in
mov
jmp
cltd
negl
call
xchg
pop
add
outsl
adc
mov
in
pop
stos
xchg
jp
cmp
sub
insb
std
jb
mov
cld
push
movsb
sub
jo
adc
jns
xchg
shrb
adc
push
pop
jo
xor
insl
scas
lds
inc
adc
stos
aas
out
pop
ud0
jp
cmpsb
push
pop
push
das
push
int
pushf
mov
sbb
push
aaa
push
pop
lock
mov
pop
xor
sbb
mov
mov
inc
jne
cwtl
mov
lods
mov
repnz
sbb
mov
notl
bound
and
xlat
ljmp
adcb
mov
call
mov
popf
lds
mov
or
int
call
inc
jp
inc
mov
repz
imul
dec
jns
lock
cmp
cli
xchg
es
cmp
mov
jle
cmpsb
xchg
xchg
dec
push
loop
push
jb
in
cmpsb
mov
mov
mov
pop
add
inc
and
outsl
add
push
mov
xchg
mov
jns
mov
mov
fildl
push
xchg
xchg
xor
in
jo
jmp
rcrb
xchg
andl
and
mov
pop
iret
push
lret
dec
jns
cli
ret
sub
mov
cmpsl
sub
pop
pop
pop
mov
rorl
jne
sahf
or
mov
inc
mov
jle
adc
data16
sbb
and
adc
mov
lret
imul
mov
sub
xor
dec
fabs
lret
adc
std
inc
pusha
jno
repnz
mov
xor
cmp
mov
push
out
test
pop
in
jle
fcmovnbe
and
cmp
inc
mov
test
rorl
or
pop
jg
cmp
push
pop
cmp
cmp
mov
subb
popf
test
subl
lret
inc
stos
push
xor
int3
sub
and
add
das
jnp
push
shll
js
jb
mov
mov
xor
xor
out
out
mov
in
ds
popf
xor
aaa
push
mov
dec
pop
movsb
xchg
mov
xor
stc
mov
pusha
pop
xor
inc
sarl
jmp
pop
mov
ret
repnz
cmc
cmp
fwait
pop
cmpsl
mov
sbb
jmp
jne
or
mov
cmc
push
cmp
lahf
mov
inc
adc
es
fistl
sub
repz
mov
mov
daa
lea
orb
lods
dec
pop
subb
subb
adc
test
jge
pop
popa
jmp
stc
pop
in
pop
cmp
push
mov
lock
shll
in
call
stc
adc
mov
mov
dec
mov
add
dec
loopne
into
scas
insl
sti
add
jns,pn
call
jle
pop
xor
sbb
sub
in
mov
mov
pop
insb
or
icebp
roll
fdivl
das
jae
loopne
mov
loop
mov
sbb
out
inc
movsl
and
in
in
add
mov
inc
js
mov
pop
sub
pop
mov
ds
lcall
divl
or
cmp
es
ror
cs
and
cld
push
ret
in
sub
dec
into
gs
adcl
ret
push
hlt
jp
dec
mov
mov
mov
mov
cmpsb
enter
inc
jbe
iret
push
mov
stos
rcrl
repz
outsb
jecxz
jns
push
and
das
sub
fildl
inc
cwtl
mov
in
push
cmpsb
data16
out
fs
add
ret
xchg
mov
gs
mov
jb
cltd
mov
cwtl
cmp
inc
cmpl
fisttpl
out
insl
cmpsb
jne
scas
cmp
ror
add
xor
jne
push
andb
inc
xchg
adc
lods
push
cli
add
mov
dec
adc
mov
add
adc
test
lods
in
nop
jne
repnz
dec
lods
ret
push
jne
xlat
rol
fistpl
sbb
repnz
push
mov
andb
imul
mov
xchg
ror
sbbl
outsb
ret
fidivrs
sbb
jle
or
jle
inc
xor
dec
adc
pop
mulb
aas
enter
add
xor
adc
sub
mov
andb
jle
aaa
lds
sub
sarb
push
cs
sbb
inc
pop
cmp
push
jnp
cmpsb
cld
icebp
mov
rclb
rcrb
and
ret
mov
dec
in
dec
jmp
jmp
cmp
jmp
icebp
lret
outsl
jnp
leave
cld
mov
mov
jb
and
mov
in
and
loop
aas
loope
mov
pop
push
inc
and
mov
xlat
push
pop
arpl
push
lcall
std
push
inc
out
cmp
pmulhw
push
ds
icebp
test
push
jp
hlt
and
sti
repnz
mov
pop
repnz
xor
cmp
clc
mov
xchg
add
ds
nop
cmp
sbb
arpl
test
cmc
push
cmpsb
mov
ret
popf
fsubrl
mov
cltd
mov
or
mov
stos
cmpsb
and
add
inc
and
xchg
add
repnz
and
jle
xor
and
jne
jae
lret
into
fwait
sub
sub
sbb
mov
test
jmp
int
and
pop
inc
idivl
in
bound
cli
jae
mov
pop
jl
aam
xchg
push
outsb
es
sar
xor
inc
loopne
sahf
mov
fs
into
pop
sub
cltd
sub
pushf
mov
xchg
cmpsl
lcall
cmp
sub
jp
push
fldenv
lahf
pop
stos
pop
xchg
inc
je
jb
xor
jmp
std
push
into
loopne
push
mov
cli
xlat
sbbb
mov
mov
and
divb
mov
sbb
or
gs
sbb
test
mov
jo
sub
and
orl
lcall
push
lds
xchg
ds
sub
cli
test
insb
mov
mov
dec
add
and
movsb
repnz
ss
push
shll
pop
sub
xor
adc
aad
jae
and
pop
je
mov
idivb
sub
testl
push
repnz
daa
mov
scas
mov
mov
and
adc
pop
repnz
jge
in
dec
rclb
lret
mov
lock
jae
les
js
mov
inc
nop
pop
jns
pop
ret
test
pop
das
mov
jo
dec
rclb
out
inc
out
push
cwtl
inc
mov
mov
push
pop
dec
in
cmp
inc
or
std
mov
punpckldq
popf
fistpll
sbb
mov
push
inc
dec
mov
pop
lods
mov
add
mov
nop
dec
mov
aam
movsb
std
xchg
call
cmp
sbb
jl
cli
sub
fidivrs
clc
mov
jge
jg
and
lock
shlb
mov
ficompl
rol
xor
sbb
cli
mov
pop
mov
and
mov
mov
adc
clc
sub
cwtl
xchg
add
cmp
pusha
inc
cwtl
out
pop
loopne
mov
mov
in
mov
cli
std
adc
xchg
xchg
adc
cmp
ja
sub
jmp
hlt
popa
mov
andb
hlt
sbb
sbb
or
out
lahf
out
mov
decl
test
nop
daa
mov
or
nop
ja
inc
push
loopne
inc
pop
insb
lcall
cmp
test
mov
and
dec
jne
stos
stos
aad
movsb
add
sti
cli
aam
divl
cmpsb
cld
pop
cwtl
sbb
lcall
sub
mov
mov
jp
xor
fstpt
jb
sti
fadds
test
fs
mov
rcl
lods
jg
jne
out
jmp
in
cld
rorl
or
inc
gs
out
jb
pop
or
jbe
mov
xchg
mov
jnp
idivb
jno
sub
jb
push
push
lods
jg
out
push
xlat
mov
dec
sbb
ret
loop
sbb
or
sub
sub
sbb
cltd
mov
mov
call
into
lret
xchg
mov
fmulp
inc
movsl
cwtl
jmp
cmp
xchg
pop
iret
cmp
sarb
sbb
out
loop
aaa
imul
loope
or
xchg
xlat
xchg
addl
shll
test
cmp
sbb
sub
popa
dec
mov
sub
sub
cmc
mov
pusha
movb
sbb
mov
test
xor
mov
fistpl
ss
mov
cmpsb
bound
movsl
jge
pop
jmp
ljmp
mov
mov
lret
out
lea
ss
pop
push
xor
dec
test
xor
dec
div
mov
daa
aam
lcall
pop
pop
lock
xor
int
jno
sbbl
scas
xchg
jp
sbbl
jo
enter
xor
call
jae
clc
or
cmp
cli
pop
insl
jno
and
cli
repz
sbb
add
xcrypt-ofb
cmpsl
test
hlt
sbb
movsb
xchg
lock
repnz
cmp
imul
mov
sub
xor
pop
aaa
cmpsl
mov
lock
pop
jl
fcmovnu
dec
pop
aaa
int3
ss
fcompl
mov
fs
jae
cmp
enter
cs
jle,pn
lds
cmpsl
cs
sub
mov
je
jb
mov
fs
fcoml
data16
pop
mov
aaa
mov
cmpsl
loopne
fistpl
lods
imul
add
pop
push
adc
popf
test
inc
jo
inc
ja
cli
adc
pop
push
push
mull
repnz
jb
out
ret
push
scas
imul
xchg
out
ret
sub
test
loope
adc
stos
aaa
jne
inc
and
out
into
sahf
in
in
mov
stc
xchg
jb
shll
push
testl
lods
insl
push
jg
and
dec
add
insb
xchg
xor
xchg
cli
negb
mov
in
xchg
xchg
imull
mov
cwtl
stos
push
shll
mov
xchg
outsl
lret
icebp
and
mov
cmpsl
pop
sub
ror
loope
pop
ss
cmpsb
jb
popf
cmovns
repz
sub
and
dec
pop
sbb
dec
pop
repz
sbb
xchg
andl
icebp
push
jl
xchg
daa
mov
int3
cli
mov
cmc
mov
into
ret
jo
mov
pop
jge
ljmp
mov
fwait
scas
andb
bts
sbb
mov
xchg
insl
mov
test
pop
sarl
dec
jmp
and
push
and
dec
incb
loop
stos
call
loope
cmpsl
pushf
dec
xchg
mov
mov
nop
inc
mov
and
div
pop
pushf
stos
ret
add
lcall
gs
inc
paddsb
mov
cwtl
jo
adc
push
dec
xor
fildll
xor
push
mov
push
xor
adc
lods
mov
pushf
push
xchg
sub
out
mov
pop
mov
shlb
je
rorl
pop
scas
xchg
imul
add
sub
mov
jl
ret
sarl
sarl
ss
stos
icebp
adc
push
imulb
lds
push
lds
notb
and
das
mov
jnp
and
inc
sbb
repnz
sbb
inc
xor
fstpt
push
mov
pop
iret
stos
mov
or
push
out
ret
sub
pop
hlt
fwait
lcall
pop
ret
jnp
popl
cmpsb
dec
lods
sub
cltd
dec
fidivrl
sahf
push
push
hlt
push
adc
pop
shrl
pop
mov
pushf
js
popa
lcall
test
dec
shrb
scas
outsl
negb
cmc
jg
mov
inc
xor
in
sub
pusha
shrb
dec
push
push
jmp
sub
xchg
inc
aas
cmp
add
test
cmp
jle
cmp
cmp
pop
insl
jns
add
dec
cmpsl
insb
sub
adc
xchg
loop
sarl
stos
cmp
xlat
jmp
push
adc
std
adc
dec
xlat
pop
jecxz
cmp
mov
pop
insb
cmp
dec
inc
cmpsb
inc
loope
and
stos
push
push
loopne
pop
inc
repz
test
or
and
jns
or
out
das
inc
sub
pop
xchg
mov
lcall
out
jb
hlt
jbe
and
repnz
mov
pop
xor
xchg
fisubrl
mov
jno
cmp
cmc
mov
mov
movsb
cmp
cmp
decl
adc
fucomp
sub
xchg
dec
jg
cltd
sbb
pushf
jno
repnz
test
push
out
inc
daa
arpl
push
adc
pop
mov
fsubs
imul
inc
push
mov
xor
dec
mov
sbb
push
frstor
fbstp
mov
xor
cmp
lods
dec
push
xlat
in
pop
push
jmp
popf
outsl
sbb
add
out
js
sbb
xchg
lock
mov
sub
push
adc
add
add
inc
hlt
jmp
sbb
mov
andb
out
xchg
mov
pop
das
clc
xchg
lock
cltd
and
arpl
test
leave
sbb
int
fcoms
jmp
aas
cwtl
bound
in
test
pop
jno
shrb
pop
push
pop
and
adc
xor
xor
pop
pop
pop
std
or
jbe
adc
pop
push
ret
mov
ret
xchg
jne
mov
mov
lret
scas
repz
mov
iret
mov
pop
pop
pop
inc
lods
xchg
fisubl
cld
in
cli
rol
push
lahf
or
sub
scas
mov
jmp
adc
inc
call
xchg
mov
sub
fistps
sbb
jp
aaa
mov
not
jp
aaa
lcall
rclb
or
scas
outsl
addr16
sbb
rcrl
inc
scas
and
popa
test
sub
pop
arpl
pop
lcall
add
jne
fisttpll
mov
ret
pop
test
sbb
mov
pop
lret
ret
ss
inc
adc
jb
or
je
jmp
ljmp
jns
stc
pop
push
mov
pop
iret
out
scas
pop
sti
sbb
add
adc
sub
lds
jmp
inc
sub
or
cwtl
je
pusha
jne
push
ja
push
push
adc
ja
popl
movsl
fistl
repz
xchg
lds
pop
cmp
push
ss
into
or
cmp
jns
sub
jp
cwtl
or
add
add
mov
into
cli
mov
inc
push
ret
je
dec
dec
divb
xor
sbb
stos
in
scas
cmp
into
add
jbe
mov
or
loope
imul
push
filds
shr
shrb
jae
movsl
repz
push
lahf
pop
stos
add
xlat
loope
xchg
mov
sbb
sbb
cmovns
and
pop
and
xor
and
div
dec
sbb
es
shll
xchg
jmp
or
mov
enter
fwait
cmpl
lahf
cltd
add
push
mov
lods
pop
xchg
mov
arpl
lret
in
out
push
push
daa
hlt
fs
fnstenv
or
decb
push
inc
loopne
sbb
stos
lahf
lret
and
xor
mov
repnz
fwait
sbb
xchg
scas
pop
xchg
jg
dec
or
xchg
mov
dec
mov
loope
into
in
dec
mov
out
jle
push
aaa
sarl
jnp
dec
lock
pop
jge
jg
inc
add
arpl
dec
sahf
sbb
outsb
mov
aas
sbb
clc
inc
jno
test
or
jbe
lret
roll
out
sbb
xor
roll
cltd
or
rcrb
cmp
mov
add
repz
movsl
adc
lock
mov
cld
movsl
cmp
jae
push
lock
mov
inc
ja
mov
and
or
insb
out
test
inc
decb
notl
test
outsl
bound
xor
sbb
mov
xor
jp
cmp
dec
jae
cmovl
hlt
sub
mov
lret
stos
out
data16
lock
test
decl
jmp
sti
cs
xchg
mov
xlat
fnstenv
mov
add
cmp
jb
nop
pusha
repz
movsl
scas
dec
push
bound
inc
mov
imul
pop
lcall
push
mov
testl
push
pusha
testl
cltd
ret
mov
sbb
xor
and
lock
mov
ja
jne
jae
dec
iret
mov
pop
stos
test
psubq
stos
enter
push
loop
movsb
sti
lahf
dec
negb
lret
xor
cmp
mov
adc
push
loop
stc
shll
sahf
sub
cmp
and
fwait
js,pt
mov
and
pushf
ret
xlat
addl
les
pop
sahf
out
mov
sub
mov
hlt
mov
sbb
fwait
andl
push
push
mov
test
aas
cmc
pop
loop
fildl
aas
fchs
jns
mov
xor
in
andw
cmp
mov
pop
xor
in
and
or
mov
popf
popa
dec
aad
push
dec
mov
or
dec
add
push
sub
pop
imulb
imulb
dec
jae
out
incb
mov
outsb
lods
fwait
lahf
jo
sti
jo
stos
push
call
cld
nop
cmp
mov
mov
mov
jp
in
fcomip
xchg
adc
jbe
lds
inc
les
cmpl
pop
incl
dec
je
insb
mov
popl
dec
add
std
out
movaps
cmp
lds
imul
imul
dec
imul
mov
add
mov
nop
call
aaa
mov
rcll
aas
xor
bound
icebp
lahf
mov
ja
or
xor
into
add
out
xchg
stc
fcomps
dec
enter
fsubp
pop
pop
and
movd
shrl
in
lock
pop
pusha
pop
inc
mov
jnp
push
shl
iret
repnz
adc
mov
int
jl
mov
and
loope
je
add
jle
push
popa
jecxz
cmc
or
mov
mov
add
xchg
and
ds
adc
xchg
out
jnp
pop
iret
and
daa
fdiv
push
sbb
insl
cmpsb
repnz
scas
cmc
fwait
xchg
jmp
inc
jo
inc
jb
mov
and
into
hlt
lock
mov
mov
lahf
dec
sub
adc
add
xchg
mov
pushf
mov
sub
cmp
mov
popf
sahf
ret
decb
sti
sub
mov
push
dec
cmp
les
test
push
mov
lock
adcl
ret
mov
loop
int
in
ljmp
push
pop
jne
cwtl
jmp
inc
inc
jp
mov
out
out
and
xchg
xchg
test
push
adc
jp
and
loop
leave
xchg
mov
ret
lds
push
clc
xchg
mov
cmp
testb
stos
lret
ret
mov
cmp
lock
lret
xchg
pop
shll
mov
test
rcrb
push
rcr
dec
mov
sub
adc
push
jo
sahf
pop
fimuls
mov
mov
popw
imulb
xor
addr16
flds
sbb
ror
add
xor
cmp
mov
daa
adc
shll
rcrl
cltd
out
inc
mov
cli
stos
sbb
and
icebp
xlat
loope
insb
mov
out
data16
mov
imul
in
dec
sub
jnp
xor
dec
addb
icebp
out
scas
mov
adc
inc
add
rorl
adc
cmp
cmc
imul
into
outsl
ss
or
fwait
xchg
aas
xchg
xchg
pop
dec
adc
push
jle
mov
and
lcall
pop
cmp
pop
jl
mov
fcomp
imul
ret
add
xor
addl
or
mov
daa
arpl
push
subl
lock
xor
adc
ret
inc
data16
sarb
mov
mov
push
jnp
adc
cs
and
daa
xchg
pop
fsubp
sub
lret
mov
mov
and
jbe
xor
inc
test
into
fsqrt
xor
push
mov
fisttps
xchg
mov
adc
jecxz
loopne
push
hlt
jb
stos
or
divl
inc
or
stos
repnz
pop
jae
jg
fsincos
jno
jmp
sub
stos
jae
ret
in
ljmp
ficomps
mov
push
stos
ret
jb
push
xor
stos
xor
xchg
add
loop
sub
inc
subb
add
ret
push
into
jle
test
jle
div
jle
imul
jg
or
mov
arpl
and
mov
mov
outsl
inc
cmp
jecxz
js
add
divl
push
stos
xchg
pop
stos
xor
push
dec
xor
aas
push
insl
jo
pop
clc
addr16
jnp
xlat
xchg
inc
out
das
out
mov
cmp
xchg
ret
sub
xchg
xchg
icebp
movntq
hlt
lds
jp
xchg
addr16
stos
push
jmp
scas
sti
clc
stos
fbld
addr16
push
scas
push
mov
pop
and
mov
pop
fs
fwait
xchg
scas
mov
push
inc
scas
mov
data16
mov
adc
data16
pop
fildll
test
jecxz
xchg
icebp
xchg
loop
jecxz
notb
les
fidivrl
cmp
icebp
xor
jb
inc
jnp
addr16
push
push
bound
sub
pop
lock
mov
and
cwtl
jle
ja
adc
adc
push
ja
xchg
sub
lahf
add
mov
xchg
loop
ds
fldcw
in
jne
ss
cmp
mov
mov
in
repz
inc
mov
cwtl
ja
outsb
lret
cs
mov
jb
lods
cmc
and
pusha
stos
pop
negl
mov
stos
and
stos
lret
in
mulb
scas
xchg
imul
xchg
ret
out
adc
in
lcall
jmp
out
in
repz
add
stc
adcb
mov
popf
push
jnp
stos
xchg
repz
jns
scas
and
stos
pop
lret
mov
push
mov
push
std
sahf
ficompl
mov
jg
addr16
inc
addr16
mov
aad
and
clc
cld
test
adcb
push
aad
es
rorl
dec
stc
fs
dec
and
loope
mov
and
orb
xchg
push
mov
fistps
cmpl
cmp
cli
cmp
repz
xchg
xchg
mov
cltd
das
dec
ss
lahf
out
push
loop
push
xor
idivb
out
out
push
ret
arpl
ljmp
js
xor
mov
ret
mov
cltd
das
push
fistps
push
jmp
loop
push
xor
mov
push
cmp
arpl
or
das
gs
in
mov
and
ror
jl
scas
stos
adc
shl
adc
sub
sahf
lret
std
or
loop
xchg
push
ds
ljmp
cmc
in
daa
push
adcl
push
xchg
xchg
or
mul
icebp
loopne
push
dec
fadds
std
push
sub
mov
cmp
jns
adc
shr
fs
ror
arpl
xor
sbbl
or
es
out
jmp
enter
aam
mov
sti
int
cld
shll
shll
mov
mov
mov
nop
lods
fsts
xchg
cmp
dec
ja
stos
scas
add
xor
repnz
test
jmp
push
xchg
add
pop
aam
lods
lods
shrl
jnp
mov
xchg
pusha
xchg
xchg
scas
into
or
mov
shl
dec
and
sub
sub
lods
outsb
or
mov
fsubs
fdivrs
shrb
pushf
subl
mov
add
sar
or
mov
test
out
aaa
mov
clc
dec
or
dec
cmp
jb
mov
testl
bound
mov
shll
dec
addr16
push
inc
stos
adc
mov
lds
out
scas
call
xchg
repnz
sti
and
jne
int
mov
mov
leave
xor
xor
fsubs
sub
mov
add
adc
and
lods
cmp
or
mov
es
push
jae
ljmp
pusha
iret
jecxz
add
mov
jno
arpl
loopne
imul
lods
fdivs
mov
push
icebp
repnz
sti
pop
stos
mov
imul
out
repz
insb
push
popa
into
dec
xor
inc
dec
lds
test
adc
cmpsl
or
rcrl
mov
cltd
pop
xchg
lea
cmp
int3
arpl
imul
push
or
out
shlb
sub
sahf
call
push
les
adc
push
and
xor
mov
and
clc
jmp
lret
sti
fistl
push
repz
into
cmp
sub
jns
aaa
xor
mov
mov
jle
xchg
inc
inc
mov
mov
or
out
mov
and
inc
cmp
adc
roll
jno
cli
mov
scas
gs
inc
int3
fiaddl
pop
scas
jecxz
jge
sub
or
add
mov
nop
cli
ds
ss
push
shll
rorl
cld
inc
cwtl
add
fldenv
cltd
mov
mov
sub
jecxz
add
aas
addl
mov
pusha
adc
push
pop
sub
mov
adc
imul
fs
mov
fisubl
movb
rcrb
scas
jge
rolb
pop
jns
mov
loop
repz
xchg
paddd
js
xor
push
push
lret
and
into
inc
leave
cli
iret
rclb
notb
sub
test
adc
mov
mulb
or
sub
movsb
mov
inc
xor
cld
inc
mov
or
ret
sahf
xor
sbb
push
aas
cmpsl
and
fiadds
sti
lods
jle
popa
cmp
dec
sbb
mov
test
mov
push
iret
pop
movsl
sbb
xor
inc
dec
xor
pop
adc
push
enter
movsb
sarb
cmp
inc
jmp
or
ss
or
or
fiaddl
inc
sub
notb
inc
mov
pop
leave
shrl
and
out
sub
out
sahf
push
adc
inc
rcrb
jnp
test
shll
inc
or
les
icebp
xor
idivl
out
pop
or
sub
ja
sbb
and
ret
adc
xchg
popf
jl
insl
add
or
jge
pop
icebp
cli
stos
out
iret
sbb
dec
add
jl
imul
push
in
sub
mov
shr
sarl
ds
jb
rorb
xor
add
pop
test
repz
sbb
mov
jg,pn
jmp
mov
or
mov
jg
mov
cmpsb
inc
ret
pop
sbb
push
sub
or
fs
stos
jo
push
xor
pop
jnp
dec
and
lods
xchg
inc
fsubrs
fisubl
xchg
addl
movsb
sub
xor
lock
cmp
jns
faddp
dec
out
mov
jo
xchg
sti
rolb
icebp
mov
mov
mov
shlb
inc
test
ja
dec
and
cmpsb
dec
les
push
shll
and
pop
mov
and
xchg
scas
mov
push
or
gs
cmp
mov
or
mov
cli
dec
popf
cli
clc
inc
pop
movsb
push
xchg
push
aaa
out
pop
mov
loopne
insb
sub
dec
cmp
xor
cltd
or
call
jp
pop
sbbl
sbb
mov
fcoml
jecxz
jno
psadbw
mov
shrd
jnp
data16
dec
jnp
jae
push
je
into
pop
mov
dec
push
add
leave
cmpl
shll
scas
out
jns
out
mov
xchg
sub
xchg
cmp
in
pop
adc
lret
xor
xchg
sarb
jns
arpl
mov
adc
addr16
dec
lock
adc
or
sub
jbe
push
iret
ss
cmpsb
or
imul
dec
jge
jp
add
dec
mov
pop
lahf
arpl
testl
pop
mov
ffree
lcall
iret
inc
lods
addr16
call
mov
das
scas
sub
jns
idivb
incl
int
add
addr16
loop
pop
andl
shr
sbb
in
sarb
rcrb
in
mov
jns
lahf
jecxz
and
push
imul
movsl
std
inc
mov
scas
adc
cld
lcall
movsb
gs
sahf
negb
lods
ret
or
daa
jae
and
movsb
or
gs
ljmp
stc
and
jo
jnp
mov
pop
mov
cld
loop
adc
outsb
ret
pop
jg
xlat
loop
inc
in
fidivl
movsl
mov
cmc
inc
push
in
loopne
sbb
or
add
push
mov
pushf
xchg
subl
bound
sahf
xor
cld
mov
lock
adc
cmp
mov
sbbl
mov
outsl
pop
xor
std
sti
fstpt
mov
jns
pop
inc
cmpsb
mov
push
jg
mov
scas
scas
adc
adc
ror
mov
and
mov
outsl
pop
mov
ljmp
jl
in
mov
popa
push
loopne
mov
inc
aaa
popa
lahf
or
or
inc
add
shll
dec
xor
sub
and
push
cmp
lahf
lret
jne
and
pop
mov
sbb
inc
and
jns
mov
xor
jl
call
lahf
stos
jg
cmp
lcall
cld
out
mov
jp
insl
dec
lea
pusha
xor
mov
jp
or
out
jnp
xchg
mov
cmpsb
in
movb
popa
xchg
pop
movsl
cmp
lcall
push
inc
fidivrs
mov
pop
je
stos
jo
imul
sbb
fstpl
mov
in
push
cmpsb
ret
sbb
mov
inc
push
fidivl
ficompl
jle
mov
fs
lods
or
mov
sub
cmp
inc
xchg
push
mov
scas
mov
mov
ljmp
test
out
sub
sbb
outsb
mov
lret
ljmp
cmp
cmpsb
dec
jns
xchg
fsub
andl
std
add
xor
push
gs
pop
xor
add
sahf
adc
adc
nop
lahf
and
sahf
movlps
jne
testb
out
out
in
mov
not
stos
pop
pop
jnp
mov
adc
mov
test
add
sbb
subl
push
jl
out
fstl
inc
mov
mov
pop
adc
cwtl
popa
mov
test
pop
test
and
jl
and
jbe
les
mov
add
in
mov
sahf
sub
adc
movsl
imul
mov
cld
add
xor
shlb
imul
in
jmp
mov
xchg
leave
idivl
push
fadd
enter
cmpsl
pop
adc
jo
sub
lods
mov
mov
pop
fs
dec
mov
jge
jns
enter
repnz
push
lock
push
js
shlb
mov
dec
shll
lock
xchg
cmc
add
mov
mov
decl
mov
cmpsl
mov
bnd
loop
push
cmp
sub
iret
icebp
mov
ret
lcall
lds
ret
je
cli
pop
scas
lock
hlt
cmpsl
pushf
lahf
and
ret
cmc
outsb
cmp
mov
pop
push
orl
jb
add
xchg
sbb
cmp
repz
pop
sbb
lret
cwtl
adc
lahf
dec
jae
pop
add
stos
hlt
xor
push
insl
xchg
ja
adc
cltd
sbb
scas
push
pop
xchg
fsts
jmp
adc
mov
pop
in
testb
and
lods
cmc
sub
test
in
loopne
push
sti
fcmovu
into
repnz
into
xchg
stos
sbb
pushf
push
push
lret
flds
dec
sbb
adc
lcall
es
rcrb
popa
pusha
xchg
dec
dec
in
sub
lods
icebp
sub
orl
es
sub
mov
fnstenv
sub
jp
jnp
xor
dec
pop
sarl
cmpsl
dec
and
or
xchg
xchg
sbb
cmp
sti
mov
cmpb
ss
sbbb
xchg
fidivl
xchg
xor
js
and
or
aas
xchg
aad
imul
mov
mov
inc
push
add
mov
stos
push
sti
push
cltd
fnstsw
adc
repnz
pushf
sti
push
jecxz
xor
xor
arpl
out
outsl
loop
or
sub
sub
jp
arpl
cs
xchg
cmp
jno
jbe
aaa
cld
stos
push
in
into
idivb
pop
mov
mov
mov
xchg
int3
bound
dec
push
in
or
insb
icebp
jge
mov
arpl
cwtl
mov
pop
push
add
pop
and
inc
jge
fs
imul
mov
or
movsb
cmpsb
int
mov
in
loope
outsb
pop
jns
ja
int3
jle
in
xor
in
push
mov
fs
test
test
mov
loopne
pop
inc
pop
adc
les
add
jb
testl
mov
cwtl
push
pop
pop
out
mov
add
xchg
ja
fwait
dec
scas
mov
std
push
pop
iret
fucom
pusha
scas
into
fucomi
fdiv
sub
es
mov
mov
xchg
pop
jbe
cmc
xchg
push
pop
loope
push
inc
shrb
mov
cmp
popf
jnp
and
ja
pop
inc
cmp
pop
sub
push
ret
jo
je
push
push
mov
jge
mov
adc
jns
insl
lods
jne
xor
sahf
xor
test
xor
into
adcb
in
sub
scas
popa
add
adc
lret
dec
pop
xor
scas
ffree
fistl
mov
jmp
clc
dec
lret
mov
in
in
out
add
stc
pop
aad
addb
xchg
xor
cmc
xchg
outsb
and
inc
jge
ret
ror
fimull
xor
pop
hlt
sbb
sbb
lea
or
call
xchg
sbb
jmp
ds
shl
inc
push
cwtl
js
or
inc
loope
test
dec
xchg
lock
jmp
xorl
ffree
pop
lea
pushf
mov
push
and
jb
scas
jae
xchg
lcall
incl
ret
cmpsl
sahf
mov
cltd
mov
mov
mov
je
in
push
ja
push
mov
outsb
cmpsl
mov
in
jae
jp
adc
test
xchg
addr16
xchg
sbb
outsl
xchg
pop
xorb
or
push
inc
cs
cs
pop
int3
shll
movsl
outsl
adc
mov
mov
inc
pop
ljmp
mov
dec
sbb
push
nop
mov
mov
rcrl
rcrl
out
jmp
outsl
outsl
inc
adc
jae
aaa
or
jae
xchg
xchg
aam
in
rorl
test
add
xchg
push
mov
cmpsb
rcrb
fidivs
xchg
call
in
adc
adc
int3
ljmp
inc
sbb
adc
xchg
in
in
push
or
rorb
or
mov
cltd
mov
mov
jo
xor
and
cmp
cli
jnp
jne
fnstenv
mov
out
xor
sbb
mov
inc
shl
sub
mov
push
add
mov
push
mov
push
rclb
cmp
mov
xor
dec
and
cmpb
in
test
mov
pop
push
std
xchg
fcoml
hlt
push
ret
sti
repz
rol
cld
fstps
push
xor
jg
cmp
ret
mov
lea
popf
add
movaps
lds
scas
cld
and
push
pushf
sub
pushf
lret
push
in
sub
testl
scas
mov
dec
xor
cmpsb
xchg
jle
fwait
into
mov
xchg
flds
jo
cmpsl
xor
adc
dec
push
adc
test
xor
sub
jmp
cmpsl
es
xchg
mov
pushl
xor
fidivrl
lods
pop
push
rcrb
mov
lock
cltd
out
push
das
add
and
lea
mov
and
test
rcll
mov
cmp
and
subl
xchg
call
out
sti
fnsave
mov
fidivrl
rcll
xor
push
cwtl
mov
repnz
movb
stos
xor
test
cmpsl
push
mov
mov
adcb
aas
call
push
xor
mov
add
xor
mov
into
sbb
sbb
mov
inc
sbb
mov
mov
inc
cmp
psrld
mov
adc
lods
sub
mov
pop
enter
and
lock
cmp
fbld
dec
sub
stos
mov
xchg
stos
outsl
xchg
out
ljmp
lds
push
add
xchg
out
mov
cld
ret
push
pop
adc
out
scas
outsb
call
push
dec
or
mov
test
std
or
lcall
mov
fucom
mov
cltd
xchg
arpl
iret
lods
inc
adc
shrl
ljmp
shrl
pop
mov
lods
xchg
icebp
rclb
mov
pushl
std
dec
das
cmp
xchg
and
popa
dec
scas
add
in
sub
outsl
loop
iret
sbb
orl
or
jbe
jg
inc
and
cli
iret
das
fldt
scas
jge
inc
jg
mov
in
adc
adcl
sbb
icebp
cli
push
das
jmp
test
cmpsb
into
movsb
pop
mov
xchg
xor
jo
cli
jle
out
lock
out
shl
jae
xchg
int3
dec
sbb
jge
pushf
inc
pop
test
mov
dec
pop
insb
mov
mov
stc
sbb
xchg
sbb
out
in
aas
testb
mov
push
ficoml
add
popa
jp
subl
adc
aam
insb
lcall
dec
inc
notb
jbe
loope
inc
aas
hlt
adc
pop
shrl
sti
repz
pop
add
dec
bound
inc
gs
sarb
push
pop
fwait
out
or
pop
loope
mov
xchg
xor
jae
pop
daa
fidivs
clc
push
ds
jecxz
gs
out
dec
and
inc
sbb
pop
in
jo
popf
sub
mov
inc
adc
cld
xchg
mov
xchg
andl
mov
jecxz
incl
xchg
es
hlt
movsb
das
aam
cld
cmp
daa
mov
xor
xchg
dec
shll
adc
repz
jmp
aaa
xchg
shlb
negb
lahf
push
aas
cmp
dec
rorb
sti
fadd
lcall
leave
xor
sub
movb
mov
rcrl
cmpsb
mov
mov
sub
dec
lret
push
repz
adc
xchg
je
dec
mov
cmp
and
cmpsl
xor
stc
xchg
pop
cwtl
mov
push
rcrb
sub
xchg
jne
fnstcw
mov
push
movsb
scas
mov
enter
dec
arpl
adcb
pop
or
jp
cmp
or
aad
test
aad
and
out
call
xor
insb
add
push
mov
or
std
sub
cwtl
js
lret
add
pop
in
jnp
cwtl
sub
jle
xchg
ret
imul
sub
repz
dec
movsl
inc
movsb
adc
add
int
cmp
jae
scas
out
in
cmp
cmp
sarl
jp
aaa
out
adc
sbb
ja
pop
mov
adc
push
shll
fs
loopne
xor
jns
cmpsb
insl
cmpsb
cli
push
fists
sahf
roll
adc
out
in
cmpl
mov
fcomps
xchg
fmulp
test
aaa
rcrb
and
mov
and
mov
jmp
aad
dec
int
pop
or
repnz
jb
outsb
adc
pop
sarb
out
jp
cli
ret
test
ret
jg
sbb
scas
mov
mov
push
or
and
ds
cmpsb
inc
push
push
shll
clc
out
jae,pn
sahf
sub
dec
ret
xor
loope
ja
xchg
xor
sbb
and
sbbl
fwait
mov
or
addr16
into
cmpsl
lcall
ja
mov
mov
xchg
push
aad
ret
repnz
out
stc
pop
data16
push
pop
mov
cmp
cmp
clc
jg
sarb
out
push
push
jns
jo
outsl
mov
jne
jge
das
mov
push
inc
subb
sbb
or
cmp
inc
mov
pop
jmp
cltd
sbb
jno
adc
es
adcb
push
ljmp
leave
mov
mov
mov
xchg
sbb
sub
or
subl
xchg
loopne
jo
imul
movsl
ja
fnstcw
subl
jne
pop
xchg
pop
gs
mov
inc
cld
xlat
mov
pop
imulb
inc
push
fs
mov
call
aad
in
xchg
iret
stc
push
scas
push
aam
mov
ret
jns
pop
jae
jb
jo
xlat
xlat
inc
mov
aaa
add
jb
iret
or
jg
xchg
inc
es
dec
push
es
loop
out
ret
dec
push
daa
and
cmp
push
push
movsb
mov
xor
cmp
inc
add
into
aaa
aas
ja
in
mov
sub
add
ficompl
mov
repnz
je
fdivrs
nop
jno
frstor
mov
xchg
loopne
ret
jle
dec
pop
or
xchg
into
push
mov
insl
aas
jne
insb
into
jmp
cmc
fistpl
mov
mov
sbb
or
call
stc
ret
mov
mov
popf
std
or
or
and
sub
test
sti
mov
ret
xchg
andl
hlt
mov
mov
das
test
and
outsl
push
adc
pop
mov
loope
loopne
hlt
repz
mov
mov
jns
test
loop
sub
dec
es
pop
xchg
fdivrp
repnz
ret
xor
xchg
rcrl
movsl
cmp
popf
cs
mov
push
in
lods
fwait
dec
sub
inc
popa
dec
pop
lahf
jns
ret
movsl
lds
xchg
inc
out
ljmp
push
and
int3
test
mov
fwait
inc
pop
inc
cmp
les
std
imul
sar
and
out
insb
sbb
mov
sub
jge
shrl
inc
sbb
and
mov
pop
xchg
cmpsl
or
inc
fiadds
xor
lock
mov
and
les
jecxz
lcall
stc
jle
xchg
add
add
dec
popf
pop
mov
xor
lret
xchg
pop
lcall
stos
sub
loope
inc
loopne
pop
mov
mov
ja
pushf
mov
add
push
cmp
mull
jno
pop
adc
gs
jl
clc
ret
adc
jnp
add
orl
cmp
adc
jg
fcoml
mov
fisttpll
arpl
and
mov
xchg
imul
push
leave
andb
into
ds
in
xor
sti
loop
dec
dec
push
sbbl
fimuls
jns
xchg
pushf
test
push
call
outsl
mov
ret
cmc
shrl
fwait
in
addb
lds
mul
xor
jp
mov
xchg
or
xchg
push
jl
shlb
add
out
ds
mov
incb
xorb
rcll
out
dec
mov
por
stc
pop
lahf
push
push
push
xor
stos
mov
add
dec
push
clc
jle
dec
xor
mov
fdivrs
mul
shll
dec
sbb
loopne
imul
pop
and
hlt
mov
sti
jp
std
cmp
jg
sub
bound
inc
and
fsubrl
jne
mov
adcl
sub
clc
mov
fninit
cmc
xlat
fwait
mov
sub
fcomp
notb
and
mov
loopne
adc
int
xchg
iret
push
cmpl
dec
xchg
cli
dec
and
lahf
ja
dec
inc
data16
xchg
cmp
pusha
mov
andl
aam
fnstenv
sub
clc
mov
sub
enter
xchg
sahf
sarb
inc
out
adc
out
sub
out
rclb
lret
push
mov
mov
movsb
mov
out
fs
inc
sbb
mov
mov
jmp
dec
cli
movsl
mov
fcomps
push
outsb
sbb
push
repnz
iret
xchg
scas
cmc
filds
repz
xchg
iret
loop
stos
pop
add
insb
aaa
test
scas
scas
push
xchg
stos
out
push
lret
leave
adcb
cmp
mov
pop
das
iretw
add
sbb
je
icebp
and
adc
pop
popa
cmpsb
mov
mov
test
aad
fiaddl
iret
add
fsubrp
cmc
xor
out
mov
repz
sarl
sbb
xor
adc
or
jg
xchg
stos
pop
repz
into
inc
lods
inc
xor
mov
mov
cmpsb
stos
sbb
and
mov
cmc
cmpsb
sub
je,pt
inc
push
jmp
rolb
xchg
inc
mov
divb
cmp
addr16
mov
out
fcmovnu
fistpl
cltd
dec
cltd
push
push
mov
insl
xlat
push
andb
hlt
insb
pop
test
fbld
fwait
and
mov
push
lds
jbe
jmp
dec
cmp
lods
push
icebp
dec
push
cwtl
jp
aad
jp
sti
xchg
push
pop
dec
mov
cwtl
notb
pop
adc
xor
popf
mov
dec
xor
sub
dec
clc
clc
pop
mov
test
rdpmc
push
push
xchg
mov
subl
jb
and
cmp
pop
pop
enter
loope
jae
fldz
pop
stos
dec
decb
rolb
mov
iret
xor
loope
inc
jne
push
push
test
ljmp
roll
xchg
mov
cs
inc
adc
or
add
insl
sbb
std
into
sbb
adc
aas
and
inc
dec
out
jge
xor
and
mov
mov
cs
jmp
lcall
push
mov
sbb
subb
fstp
mov
imul
sahf
out
das
sbb
stc
out
ret
out
jnp
inc
dec
lret
push
mov
lods
mov
scas
scas
push
push
cld
orb
jmp
lahf
mov
jo
ds
xchg
lea
fisubl
fstpt
xchg
std
add
lret
in
negl
sbb
jp
and
dec
out
jne
ja
loope
lret
inc
imul
gs
nop
cmpsb
or
jecxz
std
jns
and
mov
jle
lods
ss
adc
arpl
shl
xlat
mull
cmpsl
std
insb
fs
int
dec
enter
cs
mov
mov
push
push
cmc
jns
rcl
push
add
dec
pop
pop
push
test
sbb
or
or
inc
fldenv
jecxz
subb
mov
push
push
mov
je
lods
cmpsl
jns
ret
cmpsb
dec
jne
daa
out
dec
in
shlb
in
insl
mov
mov
dec
mov
sub
movsl
test
loope
dec
daa
dec
fsubrs
sbb
sub
adcb
and
mov
or
add
xorl
push
test
cmp
dec
loop
pusha
notl
out
jne
or
fistpl
scas
stos
leave
xor
test
cmp
adc
sti
add
mov
jmp
pushl
jl
push
xor
mov
xchg
test
es
clc
fcmovnu
fdivl
pushf
xor
sbb
scas
gs
in
xor
ljmp
pop
sahf
add
ds
addl
add
ret
inc
jae
sbb
shrl
je
sti
adc
or
sub
pop
dec
bound
cmp
stos
lods
xor
mov
shrb
xchg
lock
push
lcall
ljmp
xor
xchg
lock
mov
pop
lods
cli
inc
outsb
fstpt
mov
in
inc
adc
aas
test
fistps
mov
testl
jne
cli
movsb
or
mov
cmp
ja
test
and
adc
and
mov
mov
call
xchg
sub
in
jnp
testb
or
jne
ss
push
pop
jb
jns
and
or
dec
lcall
add
je
clc
movl
sti
out
in
in
sub
std
cld
into
xchg
rorl
and
mov
js
xor
mov
or
dec
and
cmpsb
add
or
pop
dec
lods
add
add
popf
shr
xchg
xor
divb
xorb
in
dec
xor
fs
repz
sti
rorb
adc
shll
xchg
ret
adc
sbb
fs
lock
mov
mov
mov
sub
jp
and
xor
sbb
mov
or
push
nop
jo
push
xor
test
adc
xchg
jle
cmp
in
pop
orl
jmp
pop
daa
lods
xor
gs
rorb
push
insl
inc
cmc
outsl
add
adc
add
sbb
add
icebp
fimull
xchg
mov
icebp
xchg
clc
push
xlat
pushf
xor
jmp
out
stos
cmp
sbb
cli
shll
mov
fadds
sarl
and
xchg
aam
xchg
mov
ja
dec
mov
push
aas
dec
jne
pop
hlt
inc
dec
nop
inc
mov
mov
adc
jns
inc
xchg
imull
push
sahf
mov
psubsb
neg
or
xchg
div
dec
sbb
and
mov
push
sub
repz
dec
cmp
or
lret
std
adc
push
adc
mov
testb
xchg
mov
das
sti
les
pop
in
mov
les
inc
xchg
pop
xchg
mov
jnp
jnp
ds
xlat
xor
sbb
and
adc
fiaddl
cmp
shll
xlat
add
lret
insb
adc
test
mov
cmp
mov
inc
insl
pop
mov
push
sub
jmp
test
lods
dec
cwtl
lret
sub
aad
sahf
push
mov
and
pop
loop
es
pop
inc
icebp
es
aaa
adc
jno
jno
out
in
jbe
and
push
mov
pop
pop
push
mov
lcall
movsb
frstor
mov
dec
xor
mov
dec
push
mov
stc
pop
lds
cs
dec
push
ja
test
shll
cmpsb
loope
lds
mov
sbb
mov
mov
xchg
mov
mov
insb
sub
cmp
es
movsb
lahf
loopne
fidivs
adc
mov
and
lahf
cmp
dec
fcompl
mov
fwait
jg
test
ja
add
jae
sub
aam
cmp
mov
and
hlt
or
jecxz
inc
push
cmpsb
mov
cmp
adc
mov
cmp
out
xchg
setbe
in
xor
pop
iret
sbb
mov
cwtl
call
xor
dec
push
jmp
mov
mov
dec
and
jmp
pop
mov
fisttps
mov
lcall
minps
cld
xlat
in
dec
rol
out
mov
sti
scas
xchg
fcoml
xor
mulb
shld
bound
rcrb
fucom
xor
mov
pushl
and
add
dec
into
jl
push
leave
mov
mov
lret
lret
ss
das
sub
xchg
push
push
pop
mov
stc
leave
xchg
movsb
pop
jbe
adc
dec
jg
sub
mov
clc
or
pusha
stc
mov
jo
push
lahf
mov
dec
icebp
idiv
mov
push
pop
jmp
stos
fld
or
test
sahf
pop
or
lds
jbe
mov
adc
push
rclb
out
push
sbb
mov
mov
leave
cmp
lods
dec
adc
cmp
fistpl
mov
jb
jl
bound
dec
push
push
push
sbb
bound
cmpsl
mov
inc
scas
mov
mov
xorl
movl
shlb
popf
cmp
lahf
sbb
mov
gs
jno
incb
pop
sbbb
sbb
aad
adcb
outsb
cmp
sub
mov
mov
lods
add
cmp
cmp
jecxz
add
and
xchg
pop
in
mov
adc
cmp
mov
popa
clc
inc
pop
inc
lahf
xchg
popf
or
xchg
scas
or
cmpsl
dec
fimull
xlat
fnsave
data16
add
arpl
cmp
xchg
mov
cmpsb
push
xor
mov
cmp
notl
fimuls
xchg
xchg
fucomi
xor
lret
hlt
lock
mov
fistps
nop
push
adc
inc
rdmsr
xor
jns
xchg
jg
fs
fstps
mov
dec
jge
xchg
sbb
mov
mov
imul
fildll
pop
ret
ss
mov
sbbb
jl
fldt
lcall
xchg
faddl
daa
mov
pusha
aaa
mov
ljmp
jle
aaa
add
cmp
pop
xchg
xorb
mov
popf
xchg
cmp
stc
ret
push
scas
lcall
ss
push
std
lcall
hlt
jmp
cmpl
cmp
movsb
push
and
cmp
mov
xor
mov
out
push
lret
outsl
push
lods
xchg
inc
ret
inc
es
ret
dec
xchg
push
test
push
and
push
lcall
insl
icebp
xchg
add
cmc
push
jae
jg
sub
jle
int3
jmp
sar
test
imulb
mov
add
pop
gs
pop
xlat
cmp
cmpsb
xor
out
pop
in
icebp
iret
arpl
fwait
xor
adc
mov
int3
xchg
push
out
push
outsl
lcall
jnp
xchg
pop
and
repnz
xchg
das
fidivl
hlt
stos
decb
scas
mov
sbb
rcrl
push
cmpsb
cmp
lea
mov
ja
lock
push
sbb
inc
outsb
popl
xchg
jle
pop
insb
mov
inc
jno
and
gs
pop
mov
jne
xor
sub
sub
add
jp
xor
ds
push
call
dec
into
mov
sbb
xchg
xorl
andl
pushf
ret
xchg
stc
mov
adc
jbe
fidivrs
pop
sub
aaa
push
dec
lock
fwait
xor
inc
andl
adc
jbe
xchg
inc
daa
inc
sbb
mov
test
adc
xchg
gs
lret
mov
mov
dec
mov
sti
fcomi
mov
jne
fwait
mov
xchg
inc
fcmovbe
out
push
dec
cmp
inc
inc
stos
in
xor
cmp
xor
nop
mov
dec
xchg
movsl
xlat
stc
fimull
es
xchg
xor
nop
dec
mov
sarl
ja
add
dec
push
lods
test
inc
cmovne
add
xchg
rorb
incb
sbb
cmp
aas
sbb
push
inc
into
fildll
jle
sahf
arpl
stos
imul
xchg
rcll
cmp
xchg
stos
jns
test
cmp
lret
or
in
mov
pop
xor
lret
dec
xor
lods
test
inc
outsl
inc
and
jg
imul
adc
inc
or
into
pusha
jle
or
outsb
insl
ret
fdivs
aaa
rcrb
es
xchg
jmp
lahf
pop
gs
xchg
mov
dec
and
mov
mov
aam
testb
xor
cs
popf
ret
call
mov
mov
push
dec
loop
dec
mov
notb
mov
sub
dec
jge
div
pop
and
sti
mov
popf
dec
movsl
jae
fisubrs
cwtl
loope
jge
xor
jae
fcoms
jecxz
pop
jmp
add
negb
xor
jnp
cs
sub
mov
push
sbb
fstpt
ret
xchg
gs
mov
xorb
mov
das
clc
xchg
mov
push
sub
aaa
pop
jne
pusha
sbb
daa
psubw
xchg
ljmp
dec
mov
ret
jb
or
xor
xchg
cmp
inc
push
mov
mov
mov
fidivl
mov
es
jmp
ficompl
push
mov
in
pop
adc
aam
ja
movsb
xor
repz
cmp
jns
inc
sub
loopne
xor
push
insl
cwtl
sub
ss
stos
mov
insl
repz
jl
sub
mov
inc
cwtl
test
push
inc
fwait
mov
dec
ljmp
jle
call
int
arpl
mov
jg
cs
ds
and
xlat
mov
sahf
inc
jge
imulb
xor
jmp
cwtl
repz
mov
pop
inc
nop
mov
hlt
push
scas
add
outsl
jp
mov
je
pop
ret
push
dec
dec
xor
lret
jne
push
mov
push
xchg
mov
loopne
sahf
dec
inc
stos
mov
nop
push
dec
cmp
cmp
in
sub
fldl
mov
movsb
xor
lock
std
popa
lock
call
lods
jmp
adc
add
xor
pop
mov
rcll
xchg
stos
test
adc
xchg
lods
test
inc
and
int
das
stc
out
and
sbb
push
in
sahf
popf
sar
xor
mov
pop
hlt
idiv
adcl
call
push
mov
call
mov
shrl
add
sub
out
mov
icebp
or
fwait
pushf
aaa
mov
jnp
inc
push
cld
inc
loope
stc
arpl
xchg
stos
clc
sub
data16
cmp
mov
fwait
xchg
into
das
sub
movsb
arpl
stos
stc
sub
pop
aaa
inc
pusha
mov
fwait
xor
nop
shll
xchg
add
repnz
fists
nop
stc
xchg
rorl
adc
movsb
add
andl
mov
mov
pop
hlt
repnz
nop
add
jmp
das
cli
xor
inc
mov
cmp
xchg
push
lret
sti
xor
nop
jae
xchg
shll
mov
in
jp
mov
mov
loope
out
scas
push
mov
out
lcall
cli
push
dec
dec
nop
xlat
loopne
mov
adc
popa
ret
xchg
outsl
push
and
imul
ffreep
pop
hlt
idiv
dec
push
out
pop
cmc
movsb
push
out
ja
add
test
xor
lds
sub
mov
fs
push
and
jecxz
ret
cmpsb
push
in
insb
adc
mov
xchg
addl
pushf
scas
sar
jae
dec
roll
packssdw
es
inc
add
cmpsb
int3
outsl
fsts
aaa
xchg
int3
cwtl
dec
mov
cli
xchg
cmp
mov
enter
shll
inc
loopne
stos
popf
sbb
out
xor
xorl
fsubl
jl
push
mulb
imul
sub
out
pop
cmc
sbbl
jecxz
arpl
xchg
sti
mov
dec
sbb
enter
xchg
andl
in
mov
test
pop
fimull
mov
lods
clc
imul
insl
out
or
scas
movsb
jecxz
fwait
cmp
orl
nop
rcll
cmpl
cwtl
inc
lds
dec
filds
pop
xor
mov
push
dec
adc
xchg
cmc
out
shrb
repnz
xor
out
fisttps
in
push
into
flds
loop
add
pop
xchg
xchg
bnd
ss
xchg
push
mov
jnp
adcb
add
in
dec
sub
nop
addl
test
and
and
sbb
stos
fimull
lock
mov
in
jae
pusha
test
fistpl
daa
fmulp
jb
mov
mov
or
mov
lret
in
jmp
mov
int3
lea
jg
and
adc
in
std
in
xchg
mov
gs
jbe
cs
int
cwtl
jnp
mov
inc
cmpsl
movsl
add
add
mov
add
inc
shl
imul
adc
adc
test
add
test
imull
adc
mov
bound
mov
mov
repz
fistps
jmp
fwait
sahf
jmp
xchg
cli
xor
sbbl
out
test
cmp
sbb
ret
call
fidivrs
mov
pop
testl
leave
cltd
pop
mov
pop
mov
and
testb
jecxz
stos
cwtl
jp
pop
subl
rcrl
leave
cmp
movsb
pop
ret
pop
or
divl
jg
outsb
push
lret
sub
mov
js
stos
mov
ja
in
jnp
xchg
or
rcrl
daa
pop
inc
rep
pop
xchg
leave
pop
pop
test
aam
repz
clc
cmpsb
in
rcll
mov
out
pop
addb
in
and
or
mov
pop
or
cltd
arpl
sbbb
out
in
or
and
mov
push
loopne
ret
push
cmp
ja
jecxz
lcall
mov
inc
cltd
lahf
and
xchg
insl
adc
push
test
lock
les
dec
xor
or
fcomp
sti
and
ret
lea
xchg
kunpckbw
push
inc
cmp
jg
shl
out
fstps
add
stc
sub
lcall
add
dec
fldl2e
jae
xor
jp
jmp
jmp
pop
mov
jg
dec
scas
fsubs
xchg
fwait
sub
dec
jp
js
stos
test
out
mov
push
in
negb
insl
shll
xchg
dec
scas
and
ficoml
andl
data16
gs
jmp
push
xor
popf
leave
in
sub
mov
or
lahf
aas
pop
roll
data16
add
jnp
je
mov
ss
pushf
cld
jp
mov
int3
inc
movsb
mov
or
pop
jecxz
dec
test
push
fbstp
insb
sub
movl
xchg
sbbb
loope
aad
adc
repz
adc
fistpl
daa
mov
stc
sub
cli
push
stc
fs
pop
push
pop
out
mov
lock
sbb
jno
push
imul
int3
dec
xorl
dec
mov
dec
sbb
jle
adc
data16
fidivs
aam
cmp
das
jmp
and
and
mov
sbb
mov
fmulp
call
lea
cwtl
fiadds
movsb
xor
scas
xor
jg
cmp
jle
and
popa
nop
scas
call
xchg
sahf
push
idiv
pop
cwtl
fucomip
jle
mov
fisubs
ret
cli
cltd
loop
mov
jo
mulb
xchg
dec
fwait
test
mov
paddw
add
adc
jge
and
sti
dec
fdivr
out
cmp
mov
adc
fmull
loop
xchg
subl
loop
test
shl
iret
dec
pushf
lret
repnz
sub
push
cmpsb
sub
notb
dec
es
push
aas
sub
or
outsb
cld
push
imulb
xchg
sbb
icebp
inc
test
xor
mov
cmpsb
scas
dec
or
xlat
mov
icebp
orb
cmpsb
and
and
dec
push
out
cmc
test
outsb
push
pop
cmp
mov
ds
fsubl
es
mov
ret
mov
addr16
jg
push
loop
enter
mov
lock
sub
icebp
repnz
lret
jo
aaa
push
mov
ds
inc
adc
xchg
cmpsb
fsts
ret
loop
adc
mov
inc
das
mov
leave
test
adc
testb
lahf
ja
xchg
pop
add
push
and
push
mov
pop
and
testl
test
xor
sbb
pop
jmp
pusha
mov
and
mov
testl
inc
test
or
sahf
dec
push
dec
and
arpl
sarb
insb
movsl
hlt
pop
ja,pn
lods
cmpsl
jne
push
cmp
js
jmp
int3
cmp
mov
subl
subl
push
inc
out
mov
lahf
sub
adc
adc
pushf
imul
xchg
jmp
iret
sti
add
cmp
cmp
ss
lock
xchg
sub
xchg
in
arpl
dec
cmpsb
mov
and
int
jg
xorb
mov
mov
dec
or
mov
sub
inc
dec
ljmp
ds
pushf
rorl
xchg
clc
repz
arpl
push
pop
in
jg
shrl
sti
insb
dec
jns
dec
sub
jp
jnp
jl
lock
addr16
stos
push
mov
cmp
rcll
dec
stos
add
cmp
aad
addr16
xor
insl
aaa
mov
push
sub
push
push
dec
ss
into
ss
int
sbb
inc
xor
cmp
pop
fcmovbe
ror
and
test
or
fmul
xchg
xchg
push
lods
xchg
xlat
push
mov
out
mov
out
iret
fistps
mov
rcrb
push
scas
popf
push
mov
daa
es
pop
scas
scas
xchg
inc
mov
cmp
bound
jle
mov
dec
jne
cmp
mov
inc
movb
aas
sub
jmp
cmp
divl
popf
cli
ret
out
pushf
shll
mov
std
mov
xchg
lcall
or
mov
cld
test
pop
dec
into
xchg
hlt
pop
data16
and
sub
or
test
cltd
sub
addr16
jnp
mov
adcl
inc
rcrb
dec
rcrl
in
movb
jg
inc
dec
ja
sub
pop
cli
dec
xchg
int3
movsl
xchg
fabs
cmpsb
mov
sub
cld
add
fistpl
std
cwtl
jae
lret
xchg
and
pop
add
add
out
jecxz
mov
dec
std
cmp
mov
push
and
add
pop
jmp
ss
cli
out
outsb
test
mov
outsl
dec
adc
xor
push
fidivrl
out
xchg
push
jne
pusha
cmpsb
pop
dec
push
jae
jecxz
popa
xor
sahf
test
adc
ffree
add
cmpsl
mov
pop
aad
jmp
inc
add
jb
mov
mov
lcall
adc
add
rolb
les
adc
pop
mov
sbb
pop
push
js
ds
divb
nop
mov
push
lods
xchg
loope
sub
addl
icebp
lret
lret
xchg
popf
add
push
in
std
or
pop
jecxz
popa
sub
fistpl
adc
dec
push
loop
movsl
ja
mov
mov
inc
fildl
ja
jecxz
lea
sub
dec
loopne
mov
dec
dec
push
inc
sub
sti
xor
jno
es
in
mov
push
cmc
popa
pop
inc
inc
cmp
fcmovu
or
dec
mov
or
sub
decl
add
in
movb
inc
push
pop
pop
subb
lret
mov
xchg
gs
pop
dec
jecxz
mov
mov
es
ss
and
xor
sub
push
xchg
dec
mov
ret
orl
insl
ret
cltd
movsb
lret
je
pop
mov
cmp
stos
xlat
ret
mov
and
push
hlt
mov
mov
subl
mov
lea
bound
aad
sbb
and
shlb
xor
push
iret
cltd
pushw
test
pop
sbb
mov
xor
add
mov
or
mov
inc
push
jg
cmpsl
aas
xchg
cltd
add
dec
push
in
jecxz
and
bound
sbb
das
in
mov
cld
pop
jecxz
jle
push
lods
lret
mov
or
andl
sub
imul
pop
fistpll
or
push
jno
mov
das
xchg
ret
pop
mov
jmp
popf
insb
add
fisttpl
cmp
loop
sbbb
aad
inc
mov
sub
mov
xchg
fwait
xor
mov
add
leave
ss
faddl
sti
movsb
xor
lret
add
cmpsl
dec
gs
cld
scas
mov
lahf
and
xor
push
xor
shrw
sbb
std
pop
faddl
orl
and
cmpsl
dec
mov
notb
out
mov
pop
mov
addr16
dec
and
dec
mov
and
mov
test
iret
xchg
movsl
mov
shll
pop
mov
popf
icebp
dec
inc
add
add
jecxz
cmp
mov
mov
ror
mov
mov
loopne
ljmp
adc
lcall
pop
adc
push
jno
inc
mov
nop
and
jns
arpl
mov
movsl
mov
into
mov
aas
mov
add
sbb
jne
pop
cmp
mov
push
cmp
push
and
test
and
push
arpl
jl
xor
mov
mov
xor
int3
adc
std
in
cmp
mov
sahf
mov
movsl
cs
std
or
cmp
out
fs
lcall
fiadds
je
add
pop
and
shr
scas
nop
into
movl
mov
test
lcall
jmp
adc
inc
inc
fisttpl
rol
mov
mul
mov
mov
push
and
imull
nop
popa
jae
lea
sub
sub
lret
movsl
pushf
xchg
inc
inc
ret
icebp
xchg
in
xchg
mov
mov
push
imul
lea
stos
cmpb
sub
int3
icebp
fs
jp
pop
fwait
jno
inc
pop
gs
mov
mov
js
data16
sub
push
jg
mov
adc
setb
jmp
loop
outsb
inc
mov
rorb
add
or
push
and
fwait
movsl
out
fcmove
out
cmp
sbb
pop
jae
adc
cli
aaa
dec
mov
enter
pop
mov
ss
cld
mov
les
sbb
sahf
mov
pop
addr16
dec
jl
cmp
mov
jns
push
out
mov
adc
fnstenv
mov
sbb
dec
pop
loope
cs
icebp
pop
or
and
sub
out
dec
sbb
push
sti
jns
mov
negl
int
andb
les
stos
xchg
addr16
mov
stc
das
in
decb
and
rcrb
enter
cmpsl
lods
pop
push
mov
or
daa
ret
or
mov
xor
pop
lret
push
addr16
add
inc
push
aaa
jle
mov
lock
aaa
pop
dec
cmpl
mov
stc
addb
mov
jne
into
push
add
pop
out
cmpb
mov
jl
xor
pop
stos
cmp
push
mov
cltd
mov
scas
xor
mov
bound
dec
add
or
jl
xor
mov
adc
push
inc
cli
cmp
incl
ljmp
push
push
or
mov
mov
adc
es
sbb
xchg
je
in
inc
push
push
out
and
ret
shll
insb
cmp
leave
stc
sti
push
dec
and
loopne
test
mov
xchg
or
xor
or
inc
dec
pop
loope
jl
outsb
mov
daa
cmpsl
inc
cltd
xor
cmp
push
push
lods
lcall
std
dec
arpl
pop
pop
outsb
mov
adc
cmp
mov
jo
inc
jo
or
and
lods
int3
jne
lret
xchg
mov
jnp
lcall
adc
cmpl
lahf
sub
add
fisttpll
xchg
into
rorl
jnp
dec
gs
jb
jns
dec
cli
aaa
sbb
xchg
or
popf
test
ljmp
jle
sbb
scas
mov
dec
inc
add
pop
sahf
in
mov
dec
jmp
pop
in
push
dec
xor
jp
ret
fwait
jl
outsl
dec
ret
sahf
mov
cmp
mov
cmp
jb
shlb
popf
fidivs
loope
push
push
dec
sbb
sti
fimuls
fs
adc
mov
cli
adc
jg
mov
idivl
adc
push
nop
and
push
cmc
cmc
adc
sub
in
cmp
sub
movsl
pop
inc
scas
lret
jne
mov
and
jecxz
fimull
rcrb
push
outsb
sub
push
loope
out
xchg
or
mov
mov
and
enter
hlt
lret
dec
mov
push
xlat
xchg
inc
stos
loopne
jmp
xchg
nop
dec
pushf
stos
sbb
test
clc
lock
lahf
fsubl
dec
sti
jle
in
cmpsb
push
add
cmp
xchg
mov
pop
iret
std
call
mov
aaa
mov
dec
std
cmpsb
and
aaa
pop
jae
xchg
fsubl
mov
iret
jle
add
mov
push
scas
jnp
mov
lcall
mov
call
pop
push
push
mov
je
jge
dec
adc
mov
fnstcw
repz
cwtl
add
pop
sbb
dec
add
or
push
mov
lcall
dec
scas
test
or
mov
cmpsb
hlt
xchg
or
sti
mov
clc
cmp
jmp
mov
mov
jae
pop
enter
mov
mov
rcrl
or
dec
sub
in
jmp
ds
divb
out
xchg
cmp
or
mov
pushf
inc
adc
leave
xor
adc
aas
or
push
imul
mov
adc
gs
mov
test
hlt
pusha
adc
pop
ret
sbb
or
out
divl
out
mov
dec
dec
mov
mov
bound
andl
dec
std
fidivl
xchg
jg
hlt
cmp
add
jge
dec
or
sub
dec
pop
stos
cmp
inc
mov
stos
sub
jp
mov
push
scas
mov
out
scas
das
jmp
inc
insb
pop
out
xlat
pop
test
xchg
or
test
push
push
sbb
xor
mov
fists
xor
mov
and
and
add
in
push
pop
outsl
addb
push
ss
cltd
sbb
jg
out
jno
or
dec
mov
push
popf
lretw
out
je
lahf
dec
sbb
sub
pop
dec
push
cmc
sub
iret
xchg
mov
mov
xor
mov
inc
out
xor
mov
mov
in
push
iret
pop
pop
sub
pop
or
jnp
fiaddl
call
ja
and
in
stc
int3
addl
dec
movsb
jecxz
out
std
pop
cmc
jp
inc
in
das
push
xchg
test
not
test
pusha
mov
lcall
decb
stos
leave
sub
add
das
jb
andb
cltd
movsl
arpl
stc
mov
mov
outsb
lret
cmp
ja
mov
mov
jg
jl
std
mov
xchg
xlat
xorb
xchg
inc
mov
ret
stos
cmp
pushf
mov
sar
shr
imul
ja
ret
insb
loop
mov
std
mov
aaa
nop
xchg
sub
jb
insl
inc
mov
mov
and
shrb
xchg
sub
ffreep
lods
cmp
inc
xor
cs
out
mov
jl
xor
addr16
add
sbb
lahf
loopne
push
adc
pop
test
xchg
and
inc
movq
add
in
pop
xor
pop
pushl
xchg
adcb
mov
jmp
pusha
push
loop
fldenv
xor
or
cmp
mov
mov
inc
ret
sub
jne
scas
sbb
popf
pop
imul
mov
mov
sub
inc
xchg
cmp
packuswb
inc
sti
test
push
lods
dec
jb
xor
dec
stc
cmp
dec
adcl
paddd
and
retw
es
add
mov
inc
inc
sahf
jecxz
das
mov
and
jmp
sbb
sbb
call
lret
mov
pop
inc
sbb
pop
loopne
and
jno
inc
cmpsl
std
imul
sti
outsb
outsl
adc
in
cs
in
es
aaa
jae
cmp
outsl
in
push
and
sub
inc
icebp
jg
decl
dec
pop
aas
mov
add
jb
into
scas
add
push
lret
cmp
loopne
popa
cmpsl
scas
fisubl
adc
insb
cmp
or
ljmp
xchg
mov
xor
inc
xchg
xchg
pop
xorb
mov
adc
xchg
mov
mov
arpl
fcomps
push
lahf
cs
mov
jae
int3
loopne
stos
jno
jecxz
repz
shrl
and
js
lea
fistl
bound
pop
repnz
insl
pop
sarl
mov
xlat
hlt
outsb
mov
mov
sti
xor
call
add
pop
inc
pusha
rcrl
fdivrs
jae
ds
addr16
cs
adc
xor
in
cmp
push
adc
in
mov
mov
xchg
test
insb
cmpsb
adc
cltd
mov
stos
jp
adc
test
subb
ret
mov
clc
mov
int3
xchg
add
mov
test
mov
in
push
fstps
outsl
xchg
enter
mov
xchg
jne
cs
pop
lret
into
mov
mov
pop
mov
fwait
dec
aam
in
inc
lahf
xchg
fadd
jo
fisubrl
mov
dec
imul
push
out
pop
mov
movsl
dec
dec
or
in
stos
pop
insb
dec
add
stc
inc
movsb
in
int3
push
pusha
jg
icebp
or
and
xlat
cld
rcrb
mov
xchg
rcrb
mov
stos
mov
xchg
ss
mov
je
dec
adc
push
ja
cmc
pop
mov
mov
adc
mov
dec
loope
in
imul
pusha
in
imul
bound
scas
sub
jecxz
mov
ss
push
mov
lea
adc
pop
adc
and
xor
add
fiadds
pop
out
cli
arpl
aam
push
push
pusha
insl
aaa
or
stos
add
mov
flds
mov
inc
inc
dec
mov
pusha
jp
sub
mull
adc
mov
scas
loopne,pt
call
xchg
mov
aas
ret
push
inc
ja
dec
adc
mov
int
push
sub
lcall
out
stc
fs
mov
in
xor
ds
sbb
push
mov
aaa
pop
ss
adc
sbb
pop
lock
mov
jns
das
hlt
arpl
outsl
sub
mov
mov
add
or
arpl
cld
cmp
movsl
sbb
outsb
add
sub
test
imul
cwtl
xchg
dec
push
mov
int
movsl
pushf
in
jmp
xchg
mov
aad
mov
gs
mov
jno
pop
out
js
dec
mov
orb
and
push
test
sub
push
mov
xchg
aas
xor
mov
add
push
mov
jle
mov
jle
icebp
sub
or
sbbb
out
xor
push
mov
cmp
cwtl
pop
sarl
lahf
push
or
daa
sar
xchg
or
dec
ss
mov
or
loop
in
push
in
sub
movsb
sub
stos
jae
std
xchg
mov
mov
pop
int3
xor
xor
loopne
push
jno
cwtl
mov
xchg
and
sbb
pop
sbb
sete
cmp
push
cmpsb
sub
dec
add
pop
jnp
loope
add
add
negb
sub
ja
addr16
in
jl
mov
mov
fcmovnbe
ja
lahf
or
sbb
mov
lret
and
fstp
xor
clc
sti
mov
jecxz
lock
sbb
push
out
push
mov
sbb
in
sarl
pop
sub
sbb
jmp
adc
leave
dec
lret
and
adc
add
and
xchg
pop
mov
jl
mov
xchg
mov
push
mov
aas
push
pop
pushf
stc
push
or
in
je
mov
mov
cmp
out
fwait
jo
and
adc
daa
in
sarl
dec
into
in
bnd
xchg
sti
mov
jno
or
shl
out
scas
add
xchg
fucomp
cli
sub
cmp
test
pop
xor
jl
mov
test
push
fcoml
xchg
jmp
adc
mov
push
out
and
push
add
orb
fldenv
sub
mov
add
imul
mulb
mov
adc
sti
pop
and
inc
mov
cwtl
mov
sti
xchg
mov
and
in
jno
mulb
mov
jne
xor
adc
das
iret
negl
sub
and
cmpsl
mov
mov
jne
xchg
mov
mov
inc
sub
adc
ja
jno
sub
insl
shll
xor
ss
repnz
addr16
mov
fisttpl
cmp
bndstx
pop
lret
hlt
sahf
or
sar
inc
mov
shll
jns
icebp
out
sbbl
mov
jo
fldt
sub
adc
or
push
fsub
dec
or
stc
sbb
sahf
arpl
jg
jmp
or
jecxz
mov
movl
inc
inc
loopne
addr16
adc
loopne
mov
popa
jmp
sarl
sbbb
stos
popf
mov
adcl
add
xor
push
movsb
aaa
mov
repz
pop
sti
pop
adc
mov
xchg
leave
in
or
lcall
push
ds
pop
ficompl
cmpsl
les
shrb
and
insb
cmp
int
mov
into
arpl
fisttps
adc
int
and
aas
mov
loopne
xor
lahf
jg
xchg
loope
or
mov
xchg
inc
pop
lret
and
in
pop
int3
outsb
arpl
xchg
add
scas
flds
push
lret
test
sbbl
cmp
push
and
cli
rcr
fadd
scas
sar
hlt
imul
hlt
mov
shl
enter
mov
jo
or
jnp
jecxz
inc
int
icebp
add
push
lock
imul
dec
inc
sbbl
pop
pop
pop
icebp
fwait
into
loop
loopne
and
dec
lods
outsl
inc
xor
dec
lahf
clc
nop
jnp
cmp
test
negl
push
lea
enter
lahf
xor
dec
ret
pop
aaa
jg
xchg
cmc
pushf
mov
stos
xchg
inc
jbe
mov
pop
repz
lcall
cmp
add
and
repnz
bound
mov
sub
xchg
fwait
dec
dec
mov
mov
inc
push
psubd
and
sahf
and
inc
in
jae
out
movsb
rclb
or
nop
xor
mov
and
pusha
jb
mulb
bound
fcomi
add
into
ret
test
sbbb
push
inc
cmpl
adc
dec
int
fimull
mov
adc
orb
fldt
push
jmp
adc
stos
xor
mov
add
mov
fdivrs
andps
xchg
gs
test
adc
mov
lahf
ret
mov
xchg
lahf
mov
xchg
mov
pop
jnp
in
test
rorb
stc
fstpt
hlt
jae
jl
and
jno
pop
out
mov
mov
insb
js
push
xchg
mov
lds
adc
mov
arpl
push
mov
add
cltd
int3
andb
pop
adc
call
dec
cmpsl
mov
inc
fsubrl
mov
loop
divl
pop
pop
cld
adc
jge
test
and
jp
sbb
jbe
int
fs
mov
sub
nop
or
out
data16
sahf
mov
xchg
outsl
nop
faddl
shlw
push
push
jnp
cli
push
xlat
sbb
cmpsl
sbb
test
adc
and
mov
adc
loope
lret
jnp
sti
jecxz
cmp
pop
jne
out
mov
fldenv
daa
mov
clc
inc
rorb
daa
push
fidivl
mov
mov
mov
je
mov
mov
in
add
xchg
and
inc
dec
test
out
pop
add
out
pop
insb
loopne
cwtl
sbb
int
jg
dec
xor
cmp
hlt
pop
pop
repnz
add
push
cmpsb
fidivrl
jl
mov
push
jecxz
hlt
mov
and
jl
int
sahf
sub
sahf
cltd
pusha
jo
popa
xor
or
mov
mov
adcl
add
or
rcrb
mov
xchg
cmp
ret
push
cmp
sbb
shr
mov
pop
mov
repz
rcll
out
lea
sub
inc
add
cmp
mov
jecxz
scas
loope
ljmp
xchg
bound
dec
arpl
movb
int
das
iret
ljmp
mov
aaa
pop
jns
shr
and
xor
test
das
fbld
popl
gs
out
push
sub
push
pop
aad
dec
sbb
shll
adc
cli
in
pop
fsubr
daa
loope
cmp
outsl
mov
lahf
mov
mov
mov
jnp
push
in
out
jnp
inc
mov
repz
or
pop
jb
outsb
or
xchg
push
sub
es
and
out
ljmp
sub
movsl
pop
fs
mov
pusha
hlt
in
popa
dec
mov
leave
mov
mulb
push
sbbl
in
cwtl
pusha
cmp
ljmp
pop
xchg
popf
stc
inc
xchg
test
pop
aam
jl
loopne
adc
jb
push
rolb
call
or
and
sahf
inc
mov
sbb
cltd
xchg
pop
pop
lahf
loope
push
jp
shrb
cmc
loop
xor
loop
or
sub
xchg
pushf
add
scas
addr16
mov
xor
lods
in
mov
and
cmpsl
mov
or
flds
fimull
jmp
mov
stos
mov
xchg
das
in
rol
fisubl
or
add
in
data16
inc
fisubl
and
fimuls
pop
xchg
popf
out
ljmp
adc
dec
xchg
les
sub
inc
icebp
and
or
xor
faddp
loopne
cmpsb
cmp
loopne
mov
inc
enter
cmp
sub
adc
mov
cmpb
or
rol
jmp
mov
cltd
enter
dec
cmpl
and
aaa
loope
loopne
xchg
ret
mov
or
add
loop
lock
mov
out
cwtl
lods
subb
andb
outsb
jmp
jge
mov
push
add
and
rcl
push
xor
das
movl
pop
sti
pop
cmp
dec
xchg
add
jle
std
xor
je
mov
pop
ljmp
sbb
es
out
fidivl
shrl
xor
pop
jecxz
sbb
das
sbb
cmp
mov
ror
lret
inc
push
lods
cmc
adc
mov
addr16
mov
sbb
bound
out
mov
into
mov
mov
subb
ret
cmp
fdivs
ja
inc
lcall
notb
adcb
jns
push
shlb
insb
push
rcrl
fmul
out
pop
pushf
ljmp
add
jl
cltd
xor
mov
imul
xor
push
jecxz
jmp
ficoml
addb
out
pop
or
clc
int3
into
lret
aam
in
pop
or
cmp
dec
jge
test
sahf
leave
je
cmp
rclb
inc
lcall
jae
into
sub
or
daa
es
jnp
inc
and
cmp
outsl
cmp
dec
push
xchg
sub
out
mov
xor
das
shll
or
imul
sbb
cs
out
dec
push
call
cld
jle
popf
lods
in
sbb
pop
cmp
and
inc
xchg
push
sbb
add
inc
les
dec
xchg
mov
pop
mov
pop
add
arpl
mov
cwtl
rcrb
sub
fs
pushf
daa
mov
lods
fcomip
bound
fs
xchg
mov
test
jg
adc
or
or
movsl
int
mov
in
inc
imul
cmp
movsl
mov
jp
jbe
rorl
or
popf
rcll
bound
pop
adc
test
daa
sub
mov
push
xchg
pop
adc
or
insl
xor
aam
xchg
test
into
sub
rcr
lock
stos
and
enter
int
daa
xchg
jbe
or
test
les
pop
gs
xor
arpl
add
jb
mov
fs
xor
jle
aas
fdivr
pusha
push
cmpsl
in
fdivp
mov
cmp
sbb
sarb
xchg
pop
or
adc
shl
and
and
xcrypt-cbc
cmpsl
adc
loopne
imul
xchg
add
jecxz
stos
sbb
inc
inc
popf
and
xchg
test
xchg
lds
scas
mov
scas
dec
xlat
jecxz
out
xchg
inc
sub
stos
inc
mov
xchg
std
out
xchg
jno
mul
out
roll
scas
int
and
scas
xor
inc
pop
icebp
out
aaa
xchg
cs
and
nop
loopne
xlat
and
cmp
outsl
cmp
repnz
stos
inc
rcll
inc
in
andl
mov
push
lds
dec
loope
sti
mov
js
enter
or
or
ret
xor
inc
mov
aaa
test
inc
ja
cltd
aas
pop
mov
pushf
cmp
and
cmpsl
int
cmpsl
sub
inc
sbb
fldt
insl
jp
sub
rcll
outsl
lods
iretw
rcrb
insb
lods
adc
xor
add
data16
push
mov
dec
lahf
xchg
test
in
xor
icebp
mov
xor
cmp
mov
pop
ret
and
movsl
aad
dec
xchg
jb
cmp
ret
dec
push
sub
jp
jg
mov
mov
in
out
cmp
outsb
pop
dec
btr
fwait
pop
notl
or
imulb
jbe
pop
adc
mov
aad
xchg
clc
cmpsl
sbb
add
lea
imul
xchg
jl
lods
mov
xlat
fs
mov
mov
push
arpl
leave
stc
mov
repz
push
call
cli
call
sub
lock
jge
scas
lea
gs
sub
ss
pop
dec
mov
xlat
popf
xchg
dec
mov
sbb
inc
and
dec
xor
inc
hlt
inc
dec
mov
fildll
jo
and
and
cli
imul
pop
pop
cmp
push
leave
nop
sub
sub
inc
mov
ja
or
iret
add
cmp
mov
inc
movsl
lea
bound
in
jl
out
pusha
sub
in
pop
cmpsb
mov
insb
andb
adc
jp
mov
scas
lahf
xchg
nop
or
mov
or
gs
popa
stc
arpl
push
pop
jne
push
popf
hlt
cld
iret
mov
outsb
es
mov
mov
mov
lods
push
fildll
lods
mov
clc
dec
cmp
cmp
pop
movsl
xchg
mov
or
inc
incb
push
shll
stos
call
repz
pop
stc
inc
pop
test
cmp
cld
lds
sbb
adc
xor
fimuls
in
jo
sbb
repz
ret
ja
neg
pop
xchg
mov
loopne
sub
xchg
or
in
push
cwtl
inc
adc
dec
or
xor
or
cmpsb
push
mov
dec
cmp
dec
daa
shlb
sti
mov
pop
in
fistpl
pushl
shl
push
mov
in
lea
fildl
and
repnz
icebp
in
sbb
lds
stos
sarl
or
mov
xchg
lock
inc
cs
push
ret
movsb
loopne
pop
and
xor
and
aaa
fwait
jmp
inc
jno
scas
fcoms
enter
sub
inc
insl
sub
test
pop
add
mov
lds
xchg
xchg
das
es
mov
rclb
add
clc
mov
lea
sub
pop
aaa
dec
or
xor
in
into
cmp
pusha
lock
cltd
push
sub
cltd
dec
cmc
push
push
mov
inc
pop
cmc
arpl
dec
lock
jmp
xchg
loope
insb
push
js
sbb
xchg
pop
cltd
mov
cmpl
fldenv
cmpsb
adc
rcrl
push
xchg
dec
mov
xchg
out
jecxz
sbb
push
test
test
mov
mov
jo
mov
neg
cli
jb
inc
lahf
mov
pop
cmp
mov
scas
pop
sbb
in
mov
inc
xchg
popf
enter
ljmp
xor
sahf
rorl
cmp
xor
js
mov
fisubs
mov
mov
leave
inc
inc
js
mov
pop
sub
xchg
pop
jne
cs
call
mov
repz
xlat
mov
add
xchg
call
inc
inc
call
lods
xor
das
mov
xchg
add
je
mov
mov
div
in
fs
xor
sub
popf
fstpt
push
inc
pusha
inc
and
pop
das
das
sbb
ljmp
mov
ss
stos
jae
jl
into
pop
ss
mov
jl
mov
mov
loopne
pop
aam
mov
adc
sahf
out
mov
cld
mov
sti
ffree
cmpsb
cld
fwait
packuswb
jnp
push
mov
pop
dec
rcrl
out
push
add
mov
or
cmp
xchg
stos
xchg
add
ja
in
out
shrd
repnz
outsl
pop
adc
sbb
sub
xor
out
and
cmpsl
popf
les
mov
sub
adc
sbb
ficoms
inc
cmpsb
cmp
das
xor
xchg
cmp
mov
popl
mov
cmpsb
cltd
outsb
cltd
call
sub
idivb
adcb
mov
dec
mov
add
xchg
and
mov
in
xor
sub
movsb
in
cmpsl
jne
push
ja
push
fwait
clc
push
mov
sti
dec
mov
dec
shrl
push
or
pop
push
sub
add
xor
clc
add
sub
jecxz
pushl
incb
es
jle
push
daa
push
adc
movsl
cltd
bound
ficompl
pop
jne
stos
adc
imul
aam
mov
mov
jae
sub
mov
fiadds
sbb
push
shl
xor
mull
add
inc
shrb
adc
out
push
cmpsl
dec
fistps
mov
mov
lahf
sbb
sbb
jo
cli
in
les
jg
sbb
and
cs
jnp
dec
cmp
movsb
jns
mov
xorb
jne
je
jne
lock
leave
inc
inc
adcb
jle
lcall
xchg
in
stos
push
pop
adc
scas
fs
add
out
mov
lods
cli
fildl
das
push
add
sub
jecxz
adc
aad
lcall
sub
lahf
sub
lahf
cmp
iret
data16
and
jns
push
xchg
cmc
jecxz
push
std
out
std
mov
jecxz
cmp
push
inc
test
and
imul
sahf
push
push
aaa
movsb
hlt
pop
xchg
pop
inc
mov
inc
dec
sar
movsb
in
and
jne
rcll
mov
idivl
out
xlat
cld
sub
add
push
ret
mov
push
jp
lahf
stos
sti
cmpsb
xorb
mov
inc
xchg
mov
sbb
stos
mov
push
pop
xchg
icebp
icebp
cmp
cli
rorl
push
ds
adc
int3
mov
xchg
push
pop
xchg
icebp
sarl
subl
std
adc
xor
xor
xchg
jbe
jecxz
cmp
mov
cmp
mov
imull
cmp
or
mov
mov
jns
mov
add
sti
adc
adc
pop
ss
data16
cmp
add
mov
out
sub
lret
sahf
clc
stos
das
ja
mov
dec
into
clc
add
add
and
mov
push
imul
pop
jb
mov
push
ja
popf
lods
mov
movl
mov
mov
sub
mov
and
adc
jecxz
pop
adc
fadds
cmp
push
push
jno
sub
sub
lahf
sbb
xchg
xor
repnz
rol
adc
movsb
sarb
shll
rcrb
mov
andb
jge
jo
jp
mov
inc
mov
xor
or
loop
push
rcll
lods
into
xchg
fwait
je
leave
jmp
and
out
es
testb
add
cmp
cld
repnz
jne
hlt
dec
movsb
lcall
sub
cmp
mov
aaa
ret
cs
mov
out
fsts
lcall
sbb
mov
dec
mov
movsl
orl
enter
pop
jge
inc
jg
pop
adc
fsubp
roll
shr
int3
jecxz
cmp
mov
movsb
mov
jmp
test
icebp
cld
mov
into
andb
call
or
stc
lahf
cmpsb
cmp
and
fidivrl
stc
sub
ret
inc
dec
popf
pop
int
mov
shlb
push
cmpsb
and
cmp
aad
mov
test
mov
sub
lock
loopne
leave
and
adc
xor
mov
xor
jp
repz
popf
call
popf
push
add
out
ret
jl
data16
push
ror
dec
fs
inc
cmp
scas
aad
scas
mov
test
fildl
xor
popf
testb
mov
ret
adc
mov
dec
es
pop
icebp
jb
pop
cmp
stos
mov
add
rclb
sbb
out
repnz
mov
xor
data16
and
test
shl
cmpl
test
cmpsl
inc
sub
push
bound
and
jmp
lret
ret
cmpsb
pop
dec
std
das
xchg
call
push
pop
sub
mov
adc
sti
stos
pop
or
dec
jb
dec
mov
pop
mov
sub
outsl
repz
ret
inc
hlt
ds
inc
icebp
lock
mov
movb
xor
dec
fs
mov
shrl
mov
scas
cs
xlat
fcomp
jns
fcmovu
inc
cmp
mov
or
mov
xchg
cs
in
lock
aaa
pop
test
icebp
pop
mov
orl
mull
cltd
lods
clc
jmp
mov
ds
stos
sahf
push
test
sti
sti
shl
stos
add
cmp
xor
xchg
je
data16
cli
mov
jecxz
addl
xor
daa
and
sub
and
and
and
pop
scas
lret
inc
add
shlb
incl
in
cltd
shll
nop
and
les
jnp
sbb
test
je
insl
cmpsb
mov
add
sub
pop
fidivs
ds
push
arpl
inc
mov
xchg
sub
out
mov
jns
push
push
cltd
aam
mov
mov
mov
add
pop
cltd
xchg
adc
lock
nop
mov
movb
xchg
inc
jbe
dec
repnz
loop
sahf
std
cmp
fsubl
push
pop
or
inc
add
add
call
dec
cmp
mov
push
xor
xor
int
rol
cmp
dec
sbb
cltd
or
inc
jmp
loopne
loopne
outsb
pop
cmp
scas
jecxz
fdivl
notb
testl
stos
into
xchg
shlb
cmp
clc
jecxz
add
mov
and
fstps
cmp
jl
in
cmp
adc
mov
push
sti
lods
add
rol
dec
in
sahf
fnsave
out
pop
add
lea
cmpsl
mov
test
jo
add
stos
or
jnp
mov
jl
mov
cmpsl
adc
fcoms
mov
and
icebp
push
iret
fucomp
ret
lods
jae
adc
das
adc
aad
xor
jae
sub
mov
pop
clc
sbb
daa
mov
or
jle
sub
xchg
and
dec
test
cs
lret
into
push
inc
fimuls
sbb
jnp
and
dec
mov
aaa
inc
bound
leave
jle
adc
push
adc
scas
aam
out
mov
aad
popa
leave
sar
rclb
enter
mov
adc
das
push
xchg
ljmp
mov
sub
shl
repnz
test
lcall
sbb
lahf
arpl
aaa
jbe
push
jmp
sar
pop
xchg
mov
fiaddl
divl
pop
dec
jle
test
rcl
xchg
aam
fisubrl
inc
test
cmc
mov
inc
ficompl
xchg
movb
cmp
add
les
mov
adc
mov
pop
pop
in
cmpb
ret
aam
pushf
mov
and
xchg
das
jge
jg
fsts
js
sti
sub
push
inc
scas
movsl
mov
dec
jl
xchg
je
cs
imul
in
push
xchg
dec
sub
push
dec
ficomps
dec
xchg
jg
jecxz
sar
and
cmpsl
adc
jae
shl
push
sub
dec
inc
inc
jg
or
divl
push
or
std
lods
das
xchg
push
push
jmpw
shll
test
aad
push
fstpl
fdiv
fimuls
cmp
test
mov
in
inc
icebp
rcr
push
push
lods
add
test
jmp
sbb
les
mov
cmp
push
lock
and
xor
out
aaa
or
lret
mov
cmp
mov
sahf
cmp
pop
inc
mov
fldenv
sahf
incb
in
mov
xchg
out
lahf
cmpsl
loope
pop
subb
iret
mov
sarl
lahf
cmp
push
jle
dec
sbb
es
gs
daa
cli
out
nop
scas
inc
ror
mov
pop
into
or
repz
jmp
shrl
and
mov
xor
adc
xchg
jle
jmp
xor
adc
add
lds
sti
out
sub
popa
cmp
xor
mov
mov
mov
sub
jo
stc
dec
shr
sbb
scas
pop
and
fistpll
addl
pop
dec
orb
dec
ficompl
mov
int
dec
shll
mov
in
paddq
mov
sub
sub
andl
ficoms
sub
jecxz
out
jmp
loope
addl
xchg
mov
xor
lock
lret
ret
imul
ldmxcsr
jo
jl
mov
push
push
pushf
dec
mov
test
lock
cs
rclb
mov
sub
repnz
xor
pop
call
lods
xlat
xor
ja
adc
mov
lahf
push
fcmovnbe
xor
nop
adc
mov
and
fcmovbe
fistl
outsb
cmc
out
mov
hlt
imulb
scas
mov
jg
decl
mov
inc
inc
imul
mov
dec
cltd
cmp
push
es
stos
lret
loope
add
arpl
movsl
jnp
or
test
ds
subb
mov
les
inc
pushf
mov
jb
je
mov
mov
xor
cmp
inc
mov
stc
and
push
dec
adc
sti
and
push
sbb
mov
aas
das
in
mov
jnp
stos
dec
jg
lcall
lock
lahf
cmp
xchg
mov
test
or
psubsw
jae
lods
sub
rcrl
mov
xor
das
mov
out
out
stc
popf
xor
inc
mov
xlat
test
lret
loopne
not
sub
push
mov
mov
and
and
jmp
pop
notb
int
mov
sub
adc
adc
and
filds
sarl
dec
pop
mov
popa
andl
test
in
mov
xorb
mov
push
jg
push
in
and
addr16
pop
mov
sbb
cs
xchg
pop
adc
sub
loopne
pusha
and
xchg
arpl
std
add
repz
mov
in
and
pop
scas
dec
mov
mov
shl
xlat
mov
popf
fstpt
jmp
mov
sub
pop
cmp
mov
sub
movsb
pop
and
scas
cmp
xchg
pop
hlt
xchg
pop
ljmp
mov
mov
dec
push
push
movsl
out
test
or
mov
mulb
lahf
or
fadd
addb
xchg
jnp
xchg
pop
mov
loop
daa
push
and
mov
jne
xor
pop
cmp
rolb
out
loope
inc
ljmp
jl
cmc
cmp
pop
inc
inc
mov
jae
outsb
add
sahf
xor
push
sar
xchg
sbb
mov
mov
jecxz
imul
cltd
out
or
sbb
and
rcrl
mov
xchg
leave
pop
test
push
cld
xlat
inc
inc
hlt
xchg
xchg
test
push
lock
jecxz
repnz
mov
popf
xchg
notb
pusha
sbb
push
push
mov
add
sbb
sbb
mov
jae
imul
push
cmp
cmpsl
push
sbb
jno
loope
scas
push
push
das
lods
lret
xor
xchg
push
pop
outsb
mov
pop
fdivl
and
sbb
fidivrl
insl
dec
push
inc
out
aaa
and
jl
or
push
aas
cmp
sbb
les
loope
int
cli
add
cmp
popf
adc
ds
popf
or
mov
test
test
lcall
jb
loope
shrl
cs
in
dec
shrb
pop
and
sbb
mov
mov
adc
les
inc
aam
nop
pop
xchg
sbb
ffreep
push
inc
push
xchg
incb
cli
cmp
icebp
cmpsl
jp
push
test
movsb
cwtl
pushf
pop
dec
stos
pop
cmc
pushf
lret
cmp
xchg
into
stc
int
cmpb
inc
mov
addl
sub
int3
push
push
fstl
clc
cld
les
ret
sbb
es
sbb
sahf
inc
sti
xchg
mov
jo
cmc
xor
out
test
push
mov
xchg
je
loop
lahf
sbb
daa
and
push
cbtw
sarl
cmpsb
cmp
push
and
pushf
mov
jge
sbb
arpl
cmpsl
rclb
jnp
cwtl
pop
nop
es
push
test
cmp
jg
jo
xchg
fnstcw
and
mov
mov
js
pop
cmpsb
cmpsl
mov
pop
push
and
xchg
xchg
cmp
sti
dec
int3
cmc
dec
push
push
jnp
adcb
test
and
pop
test
shll
repnz
das
sub
add
roll
icebp
jmp
ljmp
lret
or
mov
insl
test
lods
test
popa
add
sbb
mov
mov
lds
cmc
and
or
jno
or
aad
sbb
loop
sub
or
fcoml
jecxz
sbb
es
cmpsb
repnz
dec
movsb
mov
lret
cmp
stos
data16
sbb
push
in
scas
sub
sbb
sbb
out
addb
call
and
push
pop
jecxz
popf
iret
cmp
in
in
test
cltd
mov
stos
scas
stos
movsl
sub
scas
adcb
pushf
push
rclb
push
and
or
jbe
ja
and
sub
shlb
push
loopne
ljmp
jne
popa
fs
lds
or
and
je
mov
je
data16
push
das
imul
push
mov
mov
lods
and
lcall
cmp
imul
rol
xchg
inc
xchg
rcll
lahf
out
add
add
cmp
repnz
sub
inc
loop
js
push
add
fs
iret
popa
lods
mov
or
incb
cmp
mov
and
fs
jp
jg
repnz
pop
popf
cmp
jp
dec
mov
ljmp
mov
fstpl
mov
xlat
jo
xor
out
std
imul
jnp
xor
mov
fcomps
jbe
xlat
jmp
dec
jge
mov
mov
push
mov
stos
mov
sbb
or
dec
and
sub
call
inc
ds
mov
pop
xor
es
push
mov
call
in
ljmp
icebp
push
testl
scas
sbb
jnp
cmc
mov
mov
pusha
pop
pop
mov
ret
push
dec
into
stos
dec
sbb
out
cltd
in
and
adc
pop
rcrl
jb
mov
cmpsb
dec
xchg
cmp
das
inc
scas
xor
or
jg
push
push
push
aad
in
cmpsl
out
out
dec
xchg
push
cmp
ja
mov
loop
dec
push
xchg
inc
push
shrb
push
scas
jae
mov
loop
sbb
lahf
cmc
inc
mov
push
mov
push
jmp
cmp
rcrl
cmp
ror
cs
jne
lcall
mov
rcll
mov
shll
nop
mov
lods
cld
sarb
aam
fsubr
scas
cs
mov
in
pushf
icebp
sbb
ljmp
mov
mov
movsl
dec
fs
outsb
out
aam
sub
cs
jns
das
imul
xchg
loopne
inc
push
outsb
test
loop
ficomps
mov
cltd
jecxz
lea
movsl
jbe
fdivl
jg
sbb
push
inc
and
xorl
ret
outsb
mov
mov
outsb
pop
out
mov
test
xor
lods
icebp
imul
popa
es
jb
hlt
and
sbb
testl
sub
ret
pusha
dec
and
je
push
notl
test
outsl
cwtl
inc
repnz
mov
bound
xchg
sub
sub
jb
ljmp
das
mov
mov
insl
cmpsl
iret
int
mov
and
outsb
shrb
aad
dec
xchg
jnp
sub
mov
xorb
aas
dec
or
mov
mov
out
add
negl
pminub
repz
insb
shlb
pop
push
cli
sub
fisubrl
lcall
lahf
insl
jl
mov
shlb
les
mov
xchg
or
push
pop
out
or
divb
cmp
outsb
gs
orl
jmp
les
outsb
mov
dec
sbb
mov
lock
mov
add
imul
xchg
notl
loope
rep
mov
repnz
outsb
push
gs
ss
or
lock
inc
and
push
shlb
mov
ja
scas
sbb
das
cmp
int
sarb
pop
push
mov
ret
pop
arpl
and
movsl
pop
scas
sub
push
fcoms
add
repz
sahf
push
out
test
jb
filds
push
pop
xor
lock
ds
dec
aad
ret
jecxz
sub
adc
ljmp
pop
jmp
xchg
aaa
cmp
bnd
daa
mov
or
inc
lods
test
in
xor
xchg
xor
and
jl
popa
movsl
inc
fstpt
pusha
push
imul
mov
and
mov
pop
add
push
cmovo
mov
jmp
xchg
iret
daa
jo
fldenv
out
pop
dec
fcomp
xlat
hlt
sar
jb
jb
cltd
por
pop
jl
movq
iret
xchg
in
cmp
mov
dec
inc
sti
jne
cwtl
mov
inc
jg
inc
sbb
xor
ds
pmulhuw
nop
lret
dec
bound
push
bound
aas
repz
test
push
lock
popf
in
addb
nop
cmp
jnp
lea
out
and
push
pop
loope
push
js
sbb
sub
xor
xchg
mov
mov
scas
sub
popa
sbb
out
inc
mov
cwtl
js
mov
loope
popf
lret
cwtl
inc
mov
faddp
cmp
popa
movsl
aas
jae
cmc
cwtl
pop
js
data16
iret
gs
sbb
pop
or
jne
sti
ja
dec
fisttpll
arpl
ja
in
rcrb
pop
fcomp
fwait
dec
sahf
in
fistl
lret
outsb
xchg
cmp
stc
sbb
jge
in
cld
push
arpl
fcompl
sbb
sbb
mov
movsl
int3
les
out
xlat
mov
roll
fnsave
rcr
pop
stc
loopne
add
jg
or
add
lcall
push
stos
lahf
push
call
and
ret
insb
cltd
out
xor
pop
outsb
scas
sbb
xorb
inc
and
mov
dec
popf
xchg
jbe
jno
stc
sub
push
pop
ds
jl
mov
cmpsb
mov
pusha
jge
dec
shll
divb
mov
arpl
test
and
in
sahf
dec
cwtl
iret
je
ret
pushf
xchg
jle
cmp
fisttpll
std
cmp
lcall
xchg
cmp
jmp
sub
dec
dec
sub
mov
inc
aad
and
pop
aaa
dec
and
push
out
das
pop
sub
fcoml
xchg
inc
sub
cmpl
sub
stc
shrb
jbe
test
test
adc
inc
inc
cmp
or
add
inc
and
sbb
and
into
jge
mov
jmp
orl
cld
fmull
loope
lcall
dec
add
loop
pushf
mov
and
jb
mov
movsb
aas
test
ja
sahf
xchg
xchg
inc
es
add
cmc
shr
mov
inc
jmp
mov
mov
mov
into
popa
xor
fstps
pop
movsl
inc
jns
mov
xor
pop
inc
mov
sbb
adc
sbb
jle
sub
jnp
loope
sub
push
push
lods
jmp
pusha
add
adc
cmpsw
sub
cs
movsb
push
fcoml
movsl
xchg
jmp
cmp
mov
lea
dec
jo
mov
mov
sarl
mov
addb
loopne
jle
cwtl
push
mov
nop
jne
clc
ss
mov
push
pop
loope
leave
sub
mov
cld
or
cwtl
sbb
cmp
cs
push
arpl
popfw
mov
dec
fbstp
inc
data16
add
outsl
pop
repz
and
jmp
jge
push
push
inc
xsha256
cmpsb
xchg
cmpsl
pushf
dec
and
mov
sbbl
cmp
push
imul
popa
add
xor
xor
push
jmp
mov
adc
mov
push
inc
xor
sbb
cmpb
sahf
out
xor
mov
push
inc
mov
add
mov
fldt
insl
out
imul
pop
jne
and
js
pop
mov
imul
cmp
mov
xor
int
mov
imulb
or
fidivs
iret
jmp
cld
or
je
ret
frstor
je
addr16
lea
xor
nop
adc
pop
std
sub
js
ljmp
ja
cltd
addr16
jmp
pop
cmpsl
das
js
push
xor
add
jb
mov
lods
dec
pusha
cmp
mov
sbbl
push
adc
sbbb
mov
mov
das
cld
das
cmp
mov
je
push
add
ds
inc
adc
push
pusha
ljmp
fwait
inc
nop
out
xchg
mov
data16
sbb
ds
pop
test
push
aad
inc
ret
lods
sti
xor
testb
fsub
loope
xchg
stos
adc
test
or
ret
test
scas
mov
shl
dec
xor
ljmp
ja
and
push
in
adc
inc
pusha
in
cwtl
pop
movsl
cmpsb
mov
pusha
fnstenv
xchg
mull
dec
pop
xchg
xchg
sub
dec
cmp
dec
mov
push
clc
outsl
into
sahf
mov
out
repnz
stos
sbb
js
and
pop
shr
pop
stc
dec
sahf
push
in
lods
sbb
push
clc
out
and
orl
call
mov
jne
stos
xor
sub
and
and
push
popf
lcall
mov
add
mov
mov
xchg
inc
pop
outsl
xchg
imulb
xchg
xchg
or
mov
mov
pusha
sbb
pusha
push
push
jne
imul
mov
fildll
push
and
or
inc
xchg
push
dec
cmpsl
stos
cmp
pop
dec
xor
inc
dec
fadd
scas
ss
mov
lock
mov
push
ljmp
pusha
mov
daa
cmc
dec
shll
push
cmpsl
nop
dec
xchg
cmp
push
sbb
ds
pop
mov
es
pushf
sbb
xchg
bnd
cmp
dec
jae
mov
xlat
xchg
mov
call
mov
and
loope
lods
push
js
mov
scas
shl
pop
cmp
mov
mov
or
mov
ljmp
ja
popa
pop
mov
fcomps
xor
jle
sbb
lahf
add
lcall
mov
pop
in
mov
mov
and
orl
mov
shrl
inc
fcmovnu
test
lods
xor
arpl
dec
xchg
ffree
leave
data16
dec
push
and
negb
xchg
inc
cmpsb
popf
push
or
dec
dec
out
cmpsb
inc
scas
xlat
push
ret
shlb
std
xchg
repz
jae
lods
scas
xchg
test
mov
iret
ljmp
ss
jmp
pushf
lock
cmp
and
xlat
ja
cmp
repz
rorb
dec
inc
xchg
insl
add
inc
shl
imul
pop
push
mov
rcrb
cmp
push
ljmp
push
sti
aas
or
pop
xchg
pop
mov
xchg
std
lcall
daa
push
imul
cmp
fsub
push
mov
mov
cmp
adc
cmpsb
inc
mov
push
jae
pushl
push
out
outsb
dec
aad
or
pop
mov
add
sbb
subb
divl
cmp
cmpsb
pushf
pop
sbb
test
push
sbb
sub
mov
lods
fs
inc
mov
push
mov
sarb
mov
pop
js
inc
aas
shl
lds
mov
notb
push
mov
fwait
xchg
aad
idivb
mov
xchg
addps
inc
push
dec
icebp
jae
lock
fwait
add
sbb
cmp
or
cmp
inc
jmp
jle
lea
lret
xchg
mov
out
sub
pushf
loop
neg
sub
shlb
arpl
mov
mov
pop
xchg
out
fistps
jg
adc
popf
xlat
fidivl
sbb
xchg
es
cmpsb
mov
popf
xchg
repnz
add
and
sbb
and
jl
sub
aam
mov
fcmovbe
dec
xchg
lcall
es
push
fcomps
iret
and
sub
test
aam
dec
jb
stos
push
aad
movsb
cmc
xor
mov
pop
jbe
mov
mov
je
arpl
testl
inc
int3
mov
push
es
es
icebp
inc
adc
mov
pop
inc
cmp
arpl
adc
int
ss
jmp
lahf
or
sub
mov
push
cmp
pop
leave
mov
idivb
xorb
mov
jge
repz
mov
inc
jae
jg
iret
in
inc
xchg
mov
adcb
je
jnp
gs
cmp
jge
cwtl
adc
mov
jge
xchg
out
jmp
xor
addl
int
cmp
jp
sbb
or
xchg
into
js
cmc
mov
pusha
mov
cmp
je
stos
cli
sti
int
pop
pop
mov
movsb
test
lock
out
lds
popa
loopne
ljmp
xor
popf
adc
cmp
andb
lret
es
in
rolb
ja
lds
fidivl
mov
stos
mov
inc
or
dec
test
lods
mov
sbb
add
ja
lahf
mov
fistpll
mov
movsl
sub
gs
fldenv
add
sub
lret
sub
mov
insl
aad
js
fsts
pop
cld
outsb
insb
rcll
bound
scas
mov
xchg
or
adc
test
xchg
stos
jo
cmc
lret
out
nop
dec
push
push
sbb
mov
or
aas
and
dec
int
and
fsubp
inc
mov
cmc
mov
cmp
push
adc
cmc
push
loop
adc
pop
cmc
xchg
mov
xchg
mov
stc
xor
mov
sub
popa
adc
pop
mov
add
das
fldenv
or
sbb
dec
mov
negb
push
mov
loop
pushf
add
mov
loop
icebp
jle
fcmovnb
loopne
imul
mov
mov
push
and
mov
inc
into
ja
push
mov
aas
sarl
xchg
repnz
jle
imul
das
lds
xchg
mulb
cs
ljmp
dec
in
push
sahf
clc
adc
stos
adcb
pusha
test
divb
repnz
jno
jmp
mov
bound
xor
movsb
sub
int
mov
es
imul
scas
outsl
sub
aad
xor
movsb
ljmp
sti
mov
pop
idivl
ret
add
xchg
mov
fldcw
add
push
xor
xor
jns
xorb
jns
push
scas
xchg
test
lret
cs
xor
out
jb
mov
dec
dec
jae
aad
jle
inc
xchg
sbb
lock
fsubrl
xlat
lds
add
dec
push
push
inc
mov
mov
out
out
mov
ds
in
pop
sbb
lods
mov
out
aaa
push
lods
incb
inc
cli
or
sub
mov
mov
loop
iret
jmp
mov
arpl
mov
loop
pusha
adc
mov
xchg
mov
cmp
sti
jnp
fldenv
fcmovnb
jmp
inc
add
ficoml
out
pmuludq
pop
repnz
cltd
lods
mov
aam
mov
outsb
insl
cmc
jge
and
mov
mov
mov
repnz
dec
pop
cmp
bound
mov
jp
sti
fistpl
popa
in
mov
in
cltd
sub
mov
imul
push
out
push
ret
add
out
push
push
mov
daa
or
push
hlt
jp
jle
add
dec
pop
inc
out
aad
negl
hlt
inc
repnz
fsubl
mov
or
dec
mov
shrl
jne
inc
scas
push
shrl
dec
push
mov
lods
mov
testb
popf
mov
inc
inc
xor
pusha
pop
add
aam
repz
dec
xor
xchg
dec
inc
push
test
imul
jne
jns
dec
popf
mov
and
repnz
dec
rol
sub
ret
ss
repz
scas
cmpsl
sbb
dec
call
mov
std
pop
push
xor
ljmp
mov
incb
fldenv
pop
mov
cmpsb
mov
lock
mov
push
mov
pushf
pushf
negb
repz
in
jnp
sar
iret
push
mov
push
pop
leave
aaa
jne
popa
lds
stos
sub
out
loope
or
mov
pop
js
mov
mov
and
mov
sbb
mov
enter
mov
cs
ficoms
add
fidivl
imul
testl
pop
mov
jns
jle
arpl
pop
mov
mov
inc
mov
pop
dec
push
push
xchg
xchg
rcr
or
mov
test
xor
shrl
fcmovnb
andl
jmp
sbb
jl
mov
pop
mov
sub
cmp
push
out
mov
xor
jp
test
test
inc
cmc
stc
push
loop
lahf
push
lahf
jmp
adc
mov
mov
add
xchg
loope
loop
pop
pop
rcr
lds
adc
pop
inc
add
repnz
stos
pop
mov
in
push
mov
xchg
mov
jle
insb
dec
data16
test
out
add
sbb
sbb
lock
mull
cs
ja
cmp
jle
leave
fdivs
lea
mov
mov
mov
sbb
fisubl
mov
adc
push
xchg
mov
pop
xor
jecxz
xor
pop
mov
dec
mov
push
xor
and
dec
jae
stos
dec
aaa
out
inc
int
cmpl
lea
stos
mov
jne
clc
jae
out
cmp
repz
ja
movsb
mov
and
fsts
push
lods
xlat
js
sub
mov
ret
push
loop
ss
xlat
xor
mov
sub
sub
cmp
dec
xor
cmpsb
add
xchg
das
sarb
sarl
cmc
in
xor
pop
aas
aad
stos
rcl
mov
ja
pusha
xchg
xlat
int
sub
mov
pushf
mov
dec
mov
cwtl
divl
cli
shll
lds
mov
or
rcrb
popa
mov
lret
out
pop
test
sbb
mov
cli
shl
push
in
pop
popf
mov
insb
mov
xchg
icebp
movb
addb
dec
jmp
jno
dec
mov
mov
dec
movsb
mov
xor
subb
mov
xor
add
cmp
mov
adcl
dec
scas
pop
cmpsl
fwait
and
sti
cwtl
out
push
mov
xor
mov
movsb
jle
loopne
adc
cmp
imul
stos
shl
jmp
xor
push
aas
push
cmc
loope
cmp
out
cwtl
rorb
test
jmp
clc
movsb
sub
insl
shll
aaa
mov
jmp
jno
test
imul
ljmp
push
jae
movsl
cmp
jno
repz
sbb
add
xchg
cmp
sti
cltd
push
mov
into
pop
repnz
jns
cli
cmp
xchg
stos
push
in
jb
push
cmpsl
jl
sub
fs
enter
das
aas
pop
lret
repnz
rep
mov
cmc
sub
mov
pop
repnz
idiv
lahf
mov
mov
lret
ss
mov
fldl
pop
sbb
and
mov
xor
xor
lcall
mov
sub
loop
jae
sub
mov
jle
ret
stos
test
xchg
or
movsb
mov
mov
add
fucomi
repnz
lea
out
mov
cmpb
lret
enter
popa
jmp
push
sub
in
popf
lods
inc
mov
xlat
shll
push
push
test
sbb
add
jp
pusha
sub
pop
push
push
push
xor
inc
jo
mov
sahf
mov
out
cld
mov
fisttps
xorb
sbb
cmpsl
xchg
pop
pop
loopne
xor
add
or
in
adc
mov
sbb
xor
repnz
data16
cli
push
cmpsb
repnz
sarb
jge
jge
sar
push
jns
bound
and
xchg
xor
movsl
cmp
inc
jb
push
fidivrs
sub
lods
push
lods
mov
adc
aad
push
mov
sbb
sbb
cmp
xchg
das
cltd
shlb
mov
pop
lahf
push
push
cmpsb
stos
push
orl
pop
fsubl
mov
repz
popa
out
int
pop
sub
xor
jo,pt
pop
stc
cmp
xchg
into
dec
pop
pop
in
sti
aam
and
ret
dec
xor
mov
push
mul
mov
push
lcall
add
clc
ss
pop
mov
xlat
adc
dec
fnstenv
jno
mov
xchg
mov
dec
lock
call
bound
stos
adc
xchg
scas
mov
xchg
xchg
stos
dec
sbbl
lods
pop
inc
lods
push
mov
mov
and
in
int
xchg
jnp
mov
mov
test
rcl
and
xchg
mov
rcrl
mov
adc
test
pop
negl
jg
dec
test
ljmp
jge
ret
insl
cmp
insl
pop
jp
ds
xchg
enter
out
lock
jl
pushl
pop
iret
stos
pop
adc
enter
dec
loop
fistpll
fildl
xchg
mov
mov
and
cmp
bound
jo
cmp
inc
les
mov
popa
leave
loop
imul
scas
adc
popf
std
push
mov
fistpll
jmp
or
outsb
sbb
and
lahf
clc
mov
subl
mov
xchg
jmp
xchg
mov
gs
xor
xor
xchg
iret
xchg
dec
lock
adc
mov
xorb
sub
ds
adc
mov
adc
adc
xchg
xchg
cmp
les
cmp
pop
pop
sti
cld
lret
cs
orl
pop
repz
xchg
xchg
in
xor
andb
xchg
lea
mov
popa
repnz
testb
sbb
add
popa
cld
and
dec
mov
mov
cmp
xchg
inc
push
lods
lds
repnz
jp
or
notb
in
pop
mov
out
loope
pop
mov
jecxz
xchg
xchg
jmp
fisubrl
pop
jmp
and
and
mov
jns
stc
mov
mov
mov
xlat
data16
aas
daa
repnz
enter
mov
ljmp
mov
inc
out
icebp
and
das
lcall
mov
xchg
pop
push
ja
mov
idivb
fmull
sbb
loop
and
inc
pusha
std
sahf
dec
and
mov
mov
cmpsb
push
stos
sti
cwtl
mov
mov
add
inc
jno
cmc
in
sbb
repnz
fdivr
scas
std
movsl
add
mov
cmp
push
cmpb
jp
dec
cmc
mov
inc
add
cwtl
notb
inc
xchg
jle
test
push
add
popf
dec
mov
jmp
out
sahf
sub
cmp
and
shrl
test
cmp
xor
or
movsb
mov
cmp
je
dec
lret
push
mov
dec
sub
pushf
mov
test
mov
daa
mov
out
inc
pusha
cmp
lahf
mov
enterw
sub
dec
scas
or
pop
fidivrs
sub
addr16
movsb
subb
pop
jae
jg
ss
loope
or
lds
lods
shrb
adc
mov
xchg
sahf
inc
mov
mov
imul
mov
ret
dec
lcall
add
mov
xor
push
insb
subl
cltd
mov
cmp
jns
fstl
dec
xchg
loope
sub
lcall
mov
cmc
mov
cmp
sub
cmp
lds
sub
dec
nop
popf
fidivl
pusha
dec
iret
sbb
test
aam
frstor
cmp
push
pushf
ja
clc
movsl
imul
push
inc
mov
jne
mov
mov
mov
mov
in
pop
sub
into
xchg
jl
mov
add
jmp
lds
xchg
test
xor
and
lds
pop
jno
shlb
inc
jmp
mov
jg
dec
jne
push
xchg
enter
imul
ficompl
faddp
sub
shlb
repz
push
imul
inc
inc
lcall
jg
xorl
pop
sub
mov
int3
loop
jl
rorb
xor
pop
mov
aam
jecxz
outsb
mov
sub
loop
div
mov
and
pusha
pushf
mov
jnp
fistps
xchg
outsl
jne
lods
dec
movsb
jns
jno
push
add
loop
inc
sub
sbb
fcomp
push
xor
fdivs
nop
sbb
pushf
mov
pop
repnz
hlt
es
je
jb
jl
test
cmp
cmc
rcrb
mov
xor
jle
fsubr
sub
sub
sbb
hlt
inc
mov
mov
inc
mov
mov
aad
jmp
push
push
xchg
jle
inc
cmp
inc
aam
add
loope
lret
stos
out
orl
xorb
mov
les
sbbb
sti
into
movsb
push
and
add
jbe
out
mov
test
push
and
mov
xchg
mov
stos
movsl
repz
test
mov
adc
jnp
pop
mov
repz
adc
dec
aad
mov
int3
adc
orl
lcall
push
fidivl
daa
cmp
incb
xchg
mov
clc
sbb
jns
or
adcb
mov
xlat
mov
scas
test
pop
vmwrite
xor
test
repnz
inc
fsubl
ja
jnp
divl
repnz
pop
adc
mov
out
push
inc
scas
outsl
or
xor
stc
sti
jp
mov
mov
ja
andl
shll
repnz
shlb
loope
lea
es
ret
daa
pop
add
loopne
mov
adc
jne
jecxz
sub
jmp
mov
je
rorl
mov
cltd
dec
call
add
std
fstl
xchg
sbb
mov
add
loopne
push
testl
jg
popf
or
jp
aad
data16
xor
std
movsb
fisubrs
push
dec
inc
adc
xlat
mov
sub
sub
popa
xchg
xchg
out
push
lret
sub
push
adc
jne
xchg
test
gs
stos
arpl
push
sub
pop
int
movsb
dec
cmp
decb
and
sbb
jnp
stos
jp
cmp
mov
add
jle
inc
xchg
mov
mov
dec
aaa
inc
nop
fcmovnb
mov
addr16
inc
jge
pop
cmp
add
mov
and
in
iret
or
popa
push
ss
push
and
rorb
sti
out
iret
int3
popa
lods
mov
push
daa
pop
pop
inc
ret
test
ds
dec
mov
cmp
xor
push
mov
add
lcall
mov
mov
dec
dec
mov
push
jae
push
aam
stos
ljmp
mov
push
sbb
mov
test
mov
fldl
mov
lods
movsb
movsl
mov
mov
imull
jecxz
inc
cmp
movsl
lds
xor
mov
sahf
sti
mov
mov
ficoms
mov
cs
cmc
jbe
shlb
sub
pop
outsb
lahf
mov
pop
dec
rorl
insl
mov
mov
pushf
inc
jmp
xchg
jmpw
xor
or
xchg
mov
push
jmp
loope
mov
add
cmp
adc
shll
out
pop
jo
popf
xlat
adc
add
push
and
lea
push
pusha
mov
mov
xchg
xchg
cmp
mov
icebp
div
jg
scas
incl
jle
jae
dec
adc
jb
cmp
push
adc
mov
sti
test
mov
sbb
push
scas
jne
mov
adc
out
add
arpl
test
xchg
addr16
in
adc
and
inc
pop
iret
pusha
outsb
movsb
cld
mov
lds
cmpsb
jns
hlt
xchg
xchg
cmp
aam
mov
je
shlb
inc
xchg
and
mov
fadd
lods
mov
or
dec
mov
les
outsl
stos
aam
sub
imul
shrl
fwait
rorb
sbb
adc
stc
pop
jne
xor
inc
dec
push
xor
inc
lcall
mov
pop
or
fstl
loop
aam
push
jo
mov
mov
repnz
xor
or
mov
xor
out
movsb
inc
mov
sbb
stos
xchg
sbb
xor
fwait
mov
fiaddl
cmp
pop
xchg
pop
dec
outsb
lods
in
and
cmp
mov
sbb
jl
sub
iret
dec
stos
mov
bnd
loopne
cmpsb
cmp
mov
mov
adc
sarl
jp
xchg
pop
mov
jg
call
mov
pop
xor
jle
mov
mov
cltd
jno
clc
sbb
and
xchg
ljmp
loop
addl
mov
mov
mov
mov
pop
sahf
in
out
or
loop
jp
cmp
jo
dec
ficompl
push
dec
adc
inc
popf
pop
fidivl
dec
mov
pop
repnz
repnz
mov
jp
mov
lcall
jmp
jmp
mulb
cs
add
iret
faddl
sbb
fwait
mov
sbb
int
test
mov
fwait
loopne
sbb
or
in
imul
mov
push
aad
mulb
mov
movsl
inc
in
xchg
mov
xor
push
jnp
adc
push
mov
in
sub
xchg
dec
out
mov
xchg
int
pop
fiadds
sbb
popa
in
inc
daa
es
sub
outsb
mov
and
jecxz
ret
fcmovne
mov
mov
mov
cltd
cmp
andb
adc
cmp
ss
mov
jne
xchg
pop
gs
pop
fs
mov
dec
repnz
mov
mov
test
cmpb
movsl
mov
push
cmp
pop
nop
pop
and
adc
je
xchg
mov
push
sub
xor
mov
jno
shll
cmp
nop
insl
sarb
out
mov
sub
repz
mov
loopne
mov
test
xchg
int
adc
add
aaa
cli
fst
mov
insl
das
mov
push
xor
movsl
push
mov
mov
mov
hlt
push
popa
mov
mov
mov
adcb
sbb
pop
push
dec
scas
add
fwait
pushf
mov
ss
cltd
loop
jp
push
sahf
mov
jae
popf
and
shrb
orb
cmc
sbb
imul
dec
pop
mov
fwait
aaa
xor
sub
xchg
cmp
ljmp
pcmpeqb
jge
push
xchg
ja
repnz
xor
jecxz
push
stc
les
lcall
aas
stos
das
pop
and
mov
bound
mov
mov
push
in
movsl
rcll
cld
xchg
dec
popf
mov
aaa
jmp
jne
popa
jbe
into
mov
push
rorb
or
add
cmp
fdivrl
sub
ds
loope
insl
lret
inc
mov
xchg
sbb
xchg
adc
das
jge
cld
inc
mov
lods
sbb
movsb
mov
sub
fbld
std
test
fwait
in
mov
push
adc
mov
ficomps
fildl
sti
jecxz
scas
iret
aad
mov
xchg
xor
stos
mov
mov
xorb
jecxz
nop
adc
fcomps
int
into
add
fsubrs
andb
or
dec
mov
cltd
jo
push
popf
xor
test
dec
pop
fistpl
pop
dec
mov
xor
jae
movsl
shr
dec
mov
loop
lret
mov
test
mov
sub
cmpsl
mov
xchg
mov
mov
aad
mov
test
pop
add
lcall
mov
mov
mov
scas
dec
btc
pusha
add
aas
push
add
ss
sub
jbe
sbb
xchg
lds
pop
std
mov
mov
jno
cmp
leave
popa
mov
and
cwtl
es
sbb
icebp
pop
lcall
cmc
cmp
and
mov
adc
and
inc
sbb
aam
enter
and
mov
or
ret
mov
and
lret
jle
fwait
dec
xchg
pop
pop
test
mov
lahf
loop
cltd
pop
js
dec
pop
subb
sub
pop
push
xchg
int
es
or
es
rclb
inc
gs
or
fimull
fsubrl
out
add
rcr
push
xlat
outsl
push
fidivl
daa
mov
inc
sbb
inc
or
jl
push
cmp
inc
sub
ret
scas
shlb
or
test
sbb
idiv
pop
mov
insb
jg
inc
aaa
cltd
pop
cmp
add
sahf
xor
add
adc
pop
sub
stos
mov
repz
ret
scas
rorl
add
fidivrs
lahf
bnd
sub
fdivs
pop
jae
mov
xchg
ds
push
orb
loope
dec
rclb
fidivrl
shr
rcrl
out
push
andw
cmp
mov
mov
test
stc
or
orb
idiv
insb
sbb
jp
insl
xchg
sti
cmpsb
adc
mov
stos
imulb
xchg
mov
inc
pop
test
lcall
data16
push
ret
repz
cmp
popf
sbb
addb
add
mov
mov
hlt
sahf
ja
xchg
jl
mov
std
jle
les
cmp
pop
sti
popa
mov
mov
mov
orl
jle
jb
mov
lods
mov
cmpsl
and
decl
sub
xchg
adc
aam
lahf
std
mov
add
add
lret
sub
mul
fbstp
cltd
adc
rol
ja
sbb
pop
fwait
dec
jo
sbb
adc
stos
ss
int
fistpll
das
jle
testl
int3
ljmp
out
loop
fdivrp
xor
mov
cmp
xchg
xchg
fimuls
in
mov
lods
inc
fwait
mov
dec
ret
or
fnstcw
subl
test
jnp
test
js
cmp
jbe
cmc
mov
jp
and
sbb
xor
cmp
in
lock
es
jle
std
jb
xchg
testb
popf
ret
jb
mov
jge
push
movsl
mov
fidivl
cld
pop
test
mov
data16
xorl
mov
mov
les
das
jno
xor
xor
sbb
push
test
mov
dec
ss
sbb
stos
loopne
pop
mov
push
mov
or
test
out
or
mov
dec
adc
stos
fmulp
inc
out
lahf
and
popf
xlat
cmp
out
push
jp
lea
jmp
test
dec
jb
and
lods
ss
sti
movsl
pop
adc
push
scas
scas
cmp
or
sub
std
or
sub
mov
inc
addl
imul
xor
push
je
jae
cmc
xchg
stos
mov
jb
test
sub
adc
xor
inc
jmp
test
clc
mov
out
pop
inc
fmul
movsl
testl
jne
adc
xchg
and
add
mov
push
test
notl
leave
loopne
push
mov
mov
and
mov
mov
add
mov
or
scas
add
mov
add
cmp
fimull
jecxz
jb
rcl
sbb
sbb
and
cmpsl
mov
aas
xchg
iretw
mov
dec
sub
in
push
clc
and
cmp
insl
fstps
ljmp
lret
and
stos
stos
cmp
xchg
mov
fildl
fildll
mov
loopne
fimull
daa
jecxz
jb
jns
mov
jmp
in
xlat
call
or
hlt
cmpb
das
xlat
imul
push
sahf
cmc
dec
jo
cld
jns
cmp
scas
pop
push
imul
jnp
jecxz
movsl
sbb
lahf
neg
test
pop
and
test
outsb
push
adc
adc
pushf
sub
test
xchg
xchg
sub
jecxz
fmuls
loope
mov
pop
mov
shll
ljmp
sar
fisubl
lea
push
xchg
nop
xor
xchg
fs
push
cwtl
sbb
mov
subb
jecxz
xchg
cmp
stos
push
and
push
and
lahf
add
jb
bound
imul
jmp
data16
push
inc
aaa
jp
cli
add
into
push
arpl
jno
cmc
cwtl
mov
rcrb
bound
andb
sbb
or
cwtl
leave
xchg
stos
dec
lods
stos
mov
push
sub
repnz
xchg
inc
test
dec
scas
lock
xchg
ret
jb
movsb
lahf
loop
push
in
test
mov
imul
mov
mov
pop
cmc
xchg
xlat
jne
popf
jnp
jae
and
shrl
xchg
inc
sarl
pop
jecxz
mov
pushf
mov
xlat
inc
sarl
xchg
mov
mov
imul
movsl
jns
fsubs
ljmp
scas
mov
push
cwtl
jecxz
pop
push
xchg
fimull
xor
daa
jbe
out
lea
loope
mov
xchg
fbld
jns
cmp
jle
movb
xchg
or
out
mov
int
in
lcall
inc
insl
push
rcll
iret
jne
sbb
es
ret
psrlw
mov
out
enter
fwait
das
ficompl
sub
xchg
xchg
add
movsl
xlat
jmp
aad
ret
adc
fcmovnb
movsb
mov
negb
push
in
xchg
and
dec
push
ss
mov
push
movsb
daa
test
pushfw
pop
pop
movsb
fwait
xchg
inc
mov
mov
push
mul
cli
rep
cltd
aam
int3
out
aas
popf
icebp
pop
cmp
mov
cmp
outsb
mov
mov
xor
shll
cmp
push
push
cmp
mov
mov
mov
inc
adc
pop
test
out
pop
ret
mov
or
mov
mov
mov
cmp
push
mov
jbe
jmp
jo
ret
aas
out
fcompl
loope
outsl
mov
push
cwtl
push
lret
jg
xchg
add
xchg
xchg
fcoms
push
mov
js
xchg
push
aam
popl
loope
mov
mov
fsubs
js
push
je
les
sbb
mov
sbb
mov
aas
in
notl
sub
popf
cltd
ret
cmp
jb
sub
add
xchg
dec
cmp
fsubrs
clc
aaa
loop
out
pop
mov
xor
and
test
xchg
shrl
mov
jle
addl
insl
stos
jg
shrb
inc
add
or
das
bound
inc
cli
xlat
sahf
sarb
ss
bound
mov
test
insb
cmp
mov
mov
inc
mov
popf
cs
fildl
mov
loopne
jmp
or
popf
mov
popf
pop
cmpsb
in
xchg
lcall
sub
bound
scas
std
ss
cltd
mul
xchg
push
movsl
popf
int
mov
mov
jmp
xor
sahf
andb
mov
daa
inc
jo
mov
sub
leave
mov
jecxz
leave
loop
push
cmp
jne
es
dec
xchg
mov
shr
test
and
repz
jne
popa
add
stos
jnp
cmpl
cwtl
sbb
data16
push
cmp
xchg
pusha
sarb
test
js
xor
arpl
pmaxsw
mov
mov
imul
lock
cli
das
push
cmpsb
gs
jnp
mov
pusha
scas
mov
call
bound
ja
aad
addb
jmp
movsl
test
das
shlb
in
lcall
and
push
adc
mov
outsl
xlat
cld
sbb
std
sub
pusha
push
xor
sub
push
mov
mov
mov
mov
das
sbbb
lea
add
jo
sub
or
adc
into
ret
adc
sub
repnz
push
negb
mov
arpl
jmp
je
mov
sbb
push
mov
or
adc
mov
dec
push
cld
adc
mov
cmpl
mov
jecxz
sub
xchg
rcr
xchg
mov
and
adc
scas
dec
das
call
xchg
pushf
sbb
xchg
adc
xchg
mov
lock
xor
mov
test
lds
mov
lahf
jle
mov
and
push
lea
out
js
sahf
ficoms
adcl
fildl
pushf
imul
inc
jbe
jne
test
stc
dec
xor
das
jb
pop
mov
es
push
mov
insl
push
cli
lock
jb
ret
dec
jmp
pop
fcompl
or
fcomps
add
dec
sahf
mov
roll
movsl
inc
cli
mov
adc
iret
ja
pop
outsb
dec
push
push
cmp
cltd
loope,pn
mov
mov
mov
lock
aam
inc
jo
incb
xlat
xor
popa
pop
or
je
xchg
sub
and
enter
or
pop
addr16
adc
xor
dec
orl
mov
jb
pop
cmpsb
lret
fdivrs
jne
xor
dec
dec
leave
lock
ja
pop
ret
adc
mov
or
adc
mov
outsl
fcompl
inc
cmc
cli
mov
mov
hlt
jle
movsl
jp
mov
mov
cs
ret
jne
mov
inc
pop
fldcw
jl
or
movsb
xor
sbb
adc
jmp
push
cmp
adc
mov
divb
pop
nop
neg
xor
scas
add
or
inc
cmpsl
mov
test
out
xor
hlt
cwtl
shlb
out
sahf
adcb
jp
jg
js
dec
adc
pushf
and
xor
cli
pop
dec
int
repz
scas
dec
xchg
mov
aas
ret
outsl
xchg
sbb
dec
cmc
fildll
imul
cmc
sub
popa
adc
pop
sti
cmc
leave
and
out
xchg
mov
sub
sub
ret
mov
mov
jmp
shll
negl
and
subb
sbbl
push
mov
sbb
aas
jb
push
loop
adc
jae
outsl
in
lahf
aam
es
xorl
mov
mull
sti
push
shr
inc
xchg
or
inc
shlb
xchg
sbb
fs
cli
mov
sahf
add
dec
movsl
insl
add
aad
ret
sub
or
aad
dec
loope
rcrb
test
repz
xor
mov
push
add
adc
dec
pop
jb
popf
mov
fs
cltd
sub
clc
scas
fbstp
cmp
cmp
sbb
test
aas
mov
and
addr16
dec
xchg
push
mulb
fmul
fistpl
jnp
sub
xor
out
fildl
out
dec
fwait
mov
sub
xchg
push
push
pop
ss
cmp
ss
je
pop
aad
sub
mov
push
cmp
jl
jne
sub
add
repnz
lods
cld
xchg
xchg
in
mov
mov
push
dec
mov
jns
aam
push
jb
jle
jno
xchg
out
push
loope
jne
and
insl
notb
xor
popa
mov
mov
xchg
fisubrl
mov
std
rcl
int
ret
outsl
cld
add
data16
dec
and
sub
dec
mov
jb
movsb
add
pop
aas
fistl
insb
and
inc
ds
dec
je
std
and
int
mov
mov
sub
jb,pn
shll
xchg
mov
xchg
jl
add
repnz
mov
mov
sub
mov
or
adc
adc
xor
pop
push
fsubrs
outsb
ljmp
cmp
cmpb
test
ja
jne
jge
xor
xor
sub
mov
bnd
mul
mov
addl
dec
mov
cmp
arpl
adc
pop
inc
jmp
sbbl
in
add
jb,pn
stos
bound
popf
add
mov
xchg
and
jae
das
cmp
cs
pushf
ret
psubd
or
jne
or
stos
aam
jg
imul
sti
int
ja
and
mov
pop
loopne
dec
mov
cmp
sbb
outsl
sbb
lahf
fcoml
andl
or
dec
jmp
aas
fnstsw
mov
mov
mov
icebp
rcll
mov
mov
mov
dec
fnstsw
fwait
leave
add
stos
add
loopne
mov
imul
fsubrs
inc
js
std
cmc
pop
dec
ja
imul
in
fcmovnb
mov
mov
outsl
das
popf
ret
test
js
ljmp
add
jmp
add
and
stc
outsl
jmp
cmp
test
lods
cmp
xchg
mov
sbb
inc
sub
xchg
ja
cmp
xor
sbb
out
pop
shl
hlt
mov
jge
adcl
movsb
sub
mov
xchg
imul
push
push
daa
imul
push
lds
lods
mov
inc
cmpsl
mov
xchg
xorb
in
inc
jb
pop
mov
scas
pop
cmp
lret
scas
pop
fsubs
arpl
dec
and
stc
test
mov
xor
cmc
leave
jle
std
fld1
pusha
test
int3
push
aam
pusha
mov
or
xchg
test
add
pushf
andl
je
lea
pop
sbb
and
inc
loopne
jle
xchg
mov
cmp
movsb
mov
int
xor
cmp
sub
sbb
mov
cmpsl
repnz
mov
stos
sub
mov
lahf
stos
pop
jo
inc
ret
fiadds
and
mov
sar
cmpsb
sti
pop
mov
push
mov
test
adcl
loop
mov
scas
xor
mov
sub
hlt
cmp
jo
dec
mov
adc
adc
std
fnstcw
cld
adc
jnp
test
adc
and
mov
inc
cmc
lods
daa
dec
fsubl
ficompl
and
sbb
and
outsl
test
pop
push
push
or
data16
xchg
out
lock
xchg
jl
repnz
call
hlt
pop
dec
cmp
aam
imul
mov
pop
jne
pop
mov
movsb
add
mov
and
fmuls
cli
cmp
cmp
fstl
fldenv
sar
popa
mov
push
mov
cli
cmp
jecxz
in
add
add
loopne
aam
jae
sbb
xchg
je
roll
jl
lahf
cs
outsb
and
les
and
rorl
jnp
notl
cmp
test
push
inc
loop
pop
lds
ss
cltd
ljmp
sahf
cmp
pop
popf
ret
mov
or
mov
jp
rclb
cmp
fstps
daa
mov
stc
rclb
mov
scas
je
inc
in
pop
in
enter
jne
les
pop
lahf
mov
fimuls
pop
pop
fistpll
cmp
adcb
jmp
bound
rolb
je
in
popa
jno
hlt
sbb
jns
imul
sbb
inc
fwait
das
fildl
mov
int3
xor
out
pop
push
xchg
fisubrl
stc
sarb
lods
xor
xchg
jae
xchg
mov
lods
rcrb
test
mov
mov
inc
scas
int3
loop
pop
das
mov
adc
xor
xorl
add
push
out
sub
and
sarb
fs
sahf
cmp
xor
scas
push
loopne
dec
xlat
pop
in
jno
sarb
xchg
ss
jns
fldl
or
popf
jp
outsb
std
inc
loope
push
pusha
mov
jmp
sub
push
xchg
dec
sub
data16
push
test
sbb
movsl
cld
mov
jge
pusha
filds
mov
lock
pop
in
adc
pop
mov
mov
scas
jno
scas
cmp
mov
je
push
or
pop
xor
push
addr16
es
or
imul
ja
lock
popf
push
mov
icebp
nop
popf
and
js
rolb
loop
or
mov
pop
cmp
ret
shll
repz
push
xchg
cwtl
data16
push
lcall
mov
sbb
popa
cmp
pop
jae
imul
mov
fmuls
std
mov
mov
mov
cmp
enter
xchg
inc
popf
add
xlat
outsb
mov
inc
inc
dec
add
int
nop
ret
jo
pop
pushf
inc
sub
lds
les
fidivs
inc
out
mov
add
stos
hlt
push
jb
sbb
or
cmp
pushf
shrl
imul
push
fdivp
aas
pop
arpl
mov
inc
lock
jmp
fisubl
mov
push
jmp
jae
mov
adc
insl
mov
add
loopne
clc
lea
jae
enter
dec
in
ss
or
pop
lods
pop
cltd
gs
xlat
xchg
hlt
outsb
xlat
mov
or
dec
mov
push
pop
dec
subb
insb
outsl
or
outsl
mov
adc
mov
insl
ja
cmpsb
aad
and
cli
jmp
addl
add
pop
cmp
jbe
imul
mov
mov
dec
add
fsubrs
es
xchg
inc
xchg
xchg
stc
xchg
add
and
pop
xchg
sti
pop
iret
xor
push
adc
out
add
adc
add
xor
dec
out
popa
stos
mov
cmp
iret
push
shrb
adc
mov
pop
push
mulb
pop
rcr
ss
push
ja
notb
push
mov
sub
std
xor
inc
mov
fisubl
into
adc
xchg
fwait
roll
pop
in
out
add
scas
inc
sbb
inc
test
enter
cld
xchg
out
shr
sbb
sbb
push
or
cmpsl
data16
in
scas
test
and
jns
pop
iret
in
pop
pop
mov
imul
mov
mov
push
and
aam
das
negl
mov
cmp
addb
pop
mov
mov
orb
pusha
mov
into
sbb
mov
in
cmpsb
clc
movsb
xchg
push
sub
adc
mov
cld
inc
or
pop
fisubl
loopne
xchg
fwait
roll
cs
jae
ret
xor
add
inc
xchg
mov
sbb
pop
lcall
push
ja
leave
mov
ljmp
lds
fimuls
jae
icebp
jo,pn
xor
out
push
faddl
in
dec
negl
loop
mov
addr16
mov
inc
rcll
cmp
jge
xlat
inc
aam
sub
push
lock
icebp
push
sub
nop
out
sbb
das
loope
test
incb
and
fnstsw
nop
cmp
out
pop
cwtl
pop
daa
adc
jecxz
outsl
fsubr
dec
js
sti
outsl
icebp
push
mov
jo
icebp
scas
dec
ret
jbe
jg
push
scas
pop
jmp
or
add
add
test
shl
sub
js
push
les
lahf
cmp
jae
out
mov
cmp
std
xchg
and
shl
sub
loop
adc
scas
lea
dec
adc
mov
pop
push
repnz
push
shrl
fistl
inc
or
mov
cmpsb
call
pop
insb
cmp
sub
test
in
jmp
loope
mov
ss
inc
cltd
jecxz
shl
icebp
pop
xchg
jnp
and
push
lahf
sti
les
push
out
mov
mov
fdivrl
mov
cli
daa
mov
idivb
sarb
outsb
repnz
iretw
cmp
xchg
scas
arpl
push
mov
ja
pop
out
in
pop
subl
orb
jnp
mov
xchg
inc
and
mov
mov
test
sarb
sbbl
lahf
shll
enter
and
add
jmp
and
mov
ret
or
pop
sbb
cs
mov
stos
dec
fmuls
scas
movsl
icebp
hlt
out
fidivl
cmp
adcb
aam
shll
repnz
sbb
pushf
mov
jns
inc
ret
loope
mov
jle
inc
mov
in
mov
in
pushf
adc
sbb
ret
repnz
xor
out
aad
mov
stos
nop
pop
movsl
test
stos
data16
push
inc
xor
roll
xlat
lods
ret
inc
aam
jle
fcmovu
sbb
mov
je
in
add
adc
mov
adc
add
pusha
dec
lods
cmc
sbb
addl
or
cmp
fcompl
mov
mov
sub
push
es
pop
stc
jns
adc
mov
fwait
xor
cmp
mov
std
and
lock
nop
es
mov
xlat
fstpt
cmpsl
insl
dec
jmp
mov
pop
or
test
cmpsl
jle
in
int
mov
jbe
cmpsl
jmp
jle
adc
mov
sbb
fwait
pusha
daa
lods
cmp
lahf
inc
jnp
idivl
daa
fldenv
dec
and
sahf
cs
imul
and
repnz
fistpll
sbb
movsl
and
and
xchg
movsb
and
xor
and
mov
imul
rorb
mov
in
scas
and
lock
scas
add
jp
imul
cs
mov
mov
sub
xlat
jecxz
dec
lret
xchg
xchg
addr16
sar
fistps
jae
mov
scas
pop
push
mov
sub
fidivrl
lds
rcll
xor
mov
and
jns
scas
pop
xchg
or
jne
ret
repnz
xor
push
std
ret
sti
xchg
ljmp
mov
and
mov
and
hlt
mov
push
out
and
repz
push
testb
addr16
and
mov
cmpsb
je
pop
mov
jne
out
and
adc
divl
pushf
fcompp
and
adc
imul
pop
jl
dec
cmp
or
cmpsl
mov
mov
cmpsw
mov
leave
cli
stc
jle
mov
dec
adc
inc
dec
push
mov
push
les
out
cld
imul
pop
jb
add
mov
dec
jecxz
xor
cmc
shll
mov
mov
mov
cmc
jge
xchg
mov
mov
inc
das
aaa
mov
lock
lahf
mov
orb
dec
mov
and
or
fadd
enter
scas
mov
mov
jl
fisttpl
jnp
mov
mov
and
lds
sub
cwtl
loop
xchg
repnz
testb
shrl
cs
cmc
inc
jno,pt
mov
jne
mov
add
out
pop
inc
push
sbb
pop
loop
jp
lods
xchg
test
cmp
loop
jbe
popf
mov
mov
enter
scas
out
cmpsl
jae
lea
jno
das
std
sub
mull
xor
adc
stc
pop
fldcw
mov
jns
xor
mov
jno
cwtl
les
and
out
rclb
xor
pop
xor
bound
mov
stos
cmp
push
cwtl
cmp
mov
adc
cld
in
mov
ljmp
cmc
mov
or
xor
pop
int
sar
cltd
imul
cmp
rcr
xchg
popf
sbb
stos
jb
std
cltd
daa
xchg
cmp
jae
aad
ss
int
xor
xchg
outsb
mov
pop
scas
popa
lahf
mov
push
jne
sbbb
cltd
aad
pop
fcompl
mov
sub
pop
rorl
mov
outsl
cmp
daa
add
jg
push
cmp
sub
xchg
xor
sbb
adcl
sti
pop
push
fwait
std
pushl
mov
mov
sub
mov
mov
mov
in
cmp
repnz
mov
loope
mov
cmc
push
xor
scas
sti
sub
pop
sbb
pop
subl
test
xchg
push
movsb
pop
movzwl
lahf
and
xchg
rcll
fldt
mov
xchg
hlt
lret
fldenv
loopne
testl
jl
or
dec
movsb
int3
xor
xchg
out
pushf
and
mov
jecxz
loopne
addr16
jecxz
fdivp
xchg
adc
popa
xor
stos
rorb
adc
push
pusha
lock
repz
mov
adc
mov
lahf
roll
sti
pop
flds
int3
push
pop
jne
and
sahf
pop
mov
mov
frstpm(287
in
xchg
mov
xor
lock
add
out
jo
mov
in
les
insb
dec
pop
aaa
xlat
inc
mov
jg
and
adc
flds
sbb
test
push
jle
rdmsr
ret
jne
orl
dec
cmp
sbb
jl
ss
test
mov
leave
test
xor
cmpsl
cmc
test
adc
jae
mov
cmp
and
mov
jae
fimuls
mov
iret
fiadds
pop
dec
push
sbb
cmp
xchg
ss
cmc
leave
mov
loope
pop
ljmp
jb
add
jecxz
fidivl
out
pop
mov
add
ss
mov
cwtl
ss
insl
cmpsb
dec
jl
dec
mull
lock
inc
pop
and
sahf
mov
jl
cltd
sarb
std
xchg
inc
cmp
jbe
inc
jl
cltd
sub
stos
jge
mov
test
xlat
jmp
loop
fwait
out
mov
add
mov
mull
int
mov
jg
sti
inc
jmp
push
push
xor
aam
jp
mov
jbe
aam
jmp
movsb
pop
aam
popa
fimull
and
fdivs
lret
sbb
cmp
faddl
in
xor
icebp
js
adcl
mov
cltd
out
out
inc
and
fcoms
sbb
xchg
mov
in
mov
dec
leave
dec
mov
addl
mov
loop
xchg
int3
sub
outsb
in
and
sub
cmp
mov
test
or
test
ret
enter
inc
pop
xor
ljmp
fsubrl
xchg
out
pop
xchg
jns,pt
mov
mov
mov
out
mov
xor
roll
stos
out
cmpb
aaa
dec
adc
pop
testb
call
mov
xor
fistpl
dec
inc
hlt
jge
inc
adc
sbb
repnz
mov
sub
or
pop
mov
adc
ljmp
xorb
loopne
test
push
into
mov
adc
add
out
mov
pop
aad
xchg
mov
sub
lahf
sub
daa
fsubrs
ljmp
sub
sbb
jg
das
adc
add
and
mov
hlt
and
jnp
mov
out
pop
test
test
out
insb
sbb
leave
or
dec
mov
mov
shlb
ds
mov
mov
js
jae
inc
test
cs
dec
add
xchg
call
int
incb
rol
inc
dec
out
lcall
outsb
jb
dec
add
mov
fwait
std
jge
push
repnz
cmpsb
mov
push
mov
jbe
clc
sbb
mov
jp
mov
mov
xlat
dec
test
and
cld
mov
dec
std
jne
aaa
call
jecxz
imul
add
out
popf
test
pop
mov
add
rclb
std
pop
sub
xchg
pop
addr16
sbb
mov
pushf
loope
push
ds
scas
gs
out
sbb
and
mov
push
nop
xor
adc
mov
pop
imul
adc
adc
push
fdivp
scas
sub
iret
cli
loope
dec
sbb
fwait
je
jmp
mov
pop
mov
pop
jge
les
push
and
imul
shll
pushw
cmc
push
fnstenv
lret
mov
std
addr16
adc
cltd
mov
cmc
in
icebp
xchg
and
fidivl
dec
imull
in
out
xchg
cmpsb
pop
ret
outsl
fldenv
rcrl
adc
scas
sub
aas
sub
mov
das
xchg
lret
and
cmp
xchg
repz
fsubs
ds
cs
pop
mov
xor
push
mov
stc
push
jbe
inc
and
lahf
leave
jecxz
xor
call
xorl
sti
mov
push
ja
loopne
leave
fisubs
xchg
jb
sti
push
xchg
push
add
ds
pop
xorl
push
inc
fistpl
pop
mov
inc
pop
adc
ljmp
xchg
jle
bnd
mov
inc
mov
loope
and
mov
sbb
repnz
popf
cmp
js
shll
push
in
and
lcall
in
pop
fstps
movsb
pop
push
xchg
mov
and
xorl
rolb
shl
cmp
mov
push
mov
sub
hlt
dec
xor
xchg
repnz
mov
inc
aas
mov
xchg
and
stc
jnp
push
mov
jecxz
mov
xor
cmc
fiadds
mov
icebp
aam
shll
dec
rol
dec
sbb
shlb
repnz
adc
and
int
cwtl
cmpsl
rol
andb
ret
repnz
dec
inc
pusha
mov
jne
andb
and
xor
dec
leave
aam
pop
and
and
inc
xor
fwait
adc
jle
dec
or
addr16
out
adc
push
sub
nopl
data16
jne
mov
sahf
lock
xchg
push
jbe
imul
dec
icebp
add
out
ret
and
dec
sub
rcll
xchg
jb
roll
sbb
pop
adcb
testb
mov
stos
dec
xor
and
jae
xchg
sub
nop
insl
leave
loope
lods
mov
mov
pop
xchg
jl
imul
add
xor
shll
sbb
adc
mov
hlt
mov
jo
in
lods
fcompl
cmp
lods
mov
xchg
mov
and
in
mov
or
pusha
add
mov
fldl
fwait
cmpsl
lahf
sub
xchg
mov
out
data16
xor
jge
imul
fisubl
xor
mov
out
fidivl
insb
cs
inc
jecxz
cmp
cmp
movsb
hlt
in
add
movsl
push
inc
xor
mov
jmpw
leave
in
xor
roll
insb
mov
mov
jle,pn
insb
lret
mov
dec
std
push
stc
sbb
loop
popa
leave
out
jns
pop
out
mov
mov
mov
dec
rcrb
pop
mov
int3
xchg
and
test
or
mov
leave
gs
mull
les
dec
xchg
test
mov
fs
or
add
jmp
push
lret
rorb
fldt
ds
jno
adc
push
insl
test
repnz
pushf
jge
push
shrl
pop
or
nop
test
jl
fistpll
adc
cld
add
fsubrp
in
push
cld
sbb
repnz
push
lock
leave
xchg
jb
sub
jp
mov
push
mov
data16
push
js
pushf
xlat
push
ret
push
divb
mov
push
cmpsb
rcrl
sub
insb
jno
inc
insl
add
out
cmpsl
lods
mov
ret
mov
sarb
je
jo,pt
int
xchg
fsts
jl
mov
add
or
daa
sbb
call
xor
lods
scas
push
sub
push
mov
push
and
adc
mov
xchg
or
add
mov
add
stos
mov
fdivrs
lock
push
std
test
cmp
fiadds
call
and
mov
cmc
xchg
cmp
ds
fadd
add
mov
lods
movsl
punpcklwd
cwtl
insl
cmc
push
dec
je
xor
bound
shrb
icebp
pop
jne
mov
lahf
loopne
mov
and
stc
loope
inc
or
and
das
fstps
add
rolb
dec
inc
mov
pop
adcl
stos
scas
or
cmpsb
insl
shll
repnz
js
sarb
or
bound
pop
jo
mov
sub
loopne
test
xor
stc
inc
std
std
sbb
sbb
shr
xchg
add
push
das
fmul
test
mov
dec
cs
or
add
mov
fs
dec
outsl
repz
xor
stos
push
mov
and
mov
inc
pop
xchg
xchg
ja
xor
add
in
push
fs
push
adc
repnz
mov
je
inc
mov
fidivrl
mov
dec
and
leave
jno
and
mov
sbb
cld
mov
jno
aad
lods
push
sbb
pop
push
cmp
or
popa
xchg
fnstcw
inc
mov
dec
inc
cmpsl
outsl
aas
adcb
cld
scas
and
push
push
push
cmpsl
iret
bnd
jl
into
outsl
movsl
mov
or
clc
setg
jmp
outsb
insl
mov
jl
push
inc
orb
fnstsw
jp
xor
push
push
mov
popa
orl
sub
pop
add
leave
mov
loope
mov
scas
inc
bound
das
fs
orl
mov
mov
cmp
add
adc
or
lock
xor
popf
jno
mov
mov
fwait
dec
or
cwtl
pop
inc
out
xchg
sbbb
push
std
in
adc
sbb
mov
jo
shll
mov
adc
es
jl
mov
movsl
roll
and
xchg
pop
xchg
cli
inc
fcoms
push
push
gs
xchg
sbb
aas
cmp
sti
mov
mov
subl
inc
jmp
ss
in
mov
fdivs
adcl
clc
fs
lret
push
adc
add
pusha
andb
push
jle
out
imul
stc
dec
and
ja
loope
mov
rclb
in
adc
or
stc
sbb
test
and
and
sub
sub
jo
movsl
inc
mov
mov
sub
repnz
es
test
and
dec
fstpt
inc
pop
imul
in
lds
mov
xchg
icebp
hlt
jno
pop
jmp
gs
cmp
nop
mov
scas
sub
repnz
mov
pop
inc
adc
std
iret
mov
arpl
push
ret
into
pop
fnstenv
inc
fistpll
cmp
xchg
outsl
das
cs
in
aam
jb
stos
aaa
call
jge
dec
pop
cmpsb
call
aas
cmpsb
pushf
push
cmp
test
sbb
mov
fsts
fwait
xchg
call
sbb
out
mov
ret
adc
popf
cltd
xchg
jmp
cld
loop
shr
ret
sbb
adc
jnp
and
pop
mov
testb
dec
imul
mov
pusha
xchg
jp
insb
popf
lahf
insb
mov
fnstcw
fiaddl
and
call
fistps
cmp
repz
icebp
pushf
fwait
cwtl
mov
xchg
xchg
dec
and
movsb
shr
stc
push
rcr
cmp
into
adc
outsb
adc
mov
xchg
sbb
mov
cmp
sbb
outsl
popl
pop
movb
cmp
test
jp
push
xor
cwtl
aaa
xchg
mov
sbbb
jns
xchg
mov
dec
iret
inc
jecxz
mov
mov
dec
shrl
cmp
pop
jbe
xchg
push
adc
rcrb
mov
js
jle
mov
icebp
or
imul
dec
out
jae
in
fnsave
and
adc
repnz
push
pusha
push
sbb
fcoms
mov
insl
lods
scas
cmp
pop
cmpsl
inc
mov
inc
xchg
sub
mov
imulb
stos
out
mov
add
int3
ja
xor
movsb
adc
xor
in
adc
mov
dec
sahf
scas
jno
and
or
jmp
inc
fistpl
cs
and
pushl
mov
and
nop
adc
leave
cmp
push
cmp
jo
test
inc
lret
pop
mov
das
push
loop
mov
mov
cwtl
pop
pop
mov
or
push
xchg
scas
iret
sub
push
cmp
or
xchg
aam
xchg
mov
mov
mov
adc
push
inc
mov
ljmp
sahf
pop
pop
pop
mov
shr
add
jp
sub
or
inc
and
push
dec
clc
mov
bound
hlt
inc
icebp
cmpsb
test
lcall
mov
xchg
mov
idivb
cmc
mov
das
cmpsb
push
adc
cmp
inc
xor
mov
nop
pushf
out
jmp
out
jmp
push
in
pusha
and
mov
jmp
jl
adc
in
mov
add
scas
jmp
idivl
in
sbb
push
adc
inc
nop
pop
repnz
add
icebp
adcl
xor
out
xchg
fwait
shlb
or
inc
pop
adc
into
pop
xchg
mov
leave
jno
popf
cmp
mov
jmp
js
and
and
in
xchg
rep
adc
or
mov
pop
push
pop
adc
mov
jo
in
stos
mov
dec
lods
mov
popf
cmp
std
cmc
pop
fwait
imul
inc
xchg
pop
pop
inc
jecxz
cmpsl
fisttpll
orl
jmp
dec
xor
or
xchg
addb
push
cmpl
and
notl
stos
jp
xor
call
jmp
lea
arpl
sub
sub
nop
push
push
pop
adc
pop
mov
xchg
dec
lods
dec
jg
mov
test
mov
and
inc
cmp
push
pop
jle
loopne
popf
cmpsl
mov
imul
jno
ja
jae
loopne
pop
inc
jbe
inc
adcb
loop
adc
and
mov
orb
cld
ss
nop
pop
mov
aad
sbb
stos
movsl
sbb
mov
mov
sti
mov
lods
xor
jmp
arpl
test
pushf
scas
pushf
cmpsb
call
mov
inc
mov
fidivrl
test
andl
data16
sub
jecxz
jecxz
int3
cs
jnp
mov
jo
out
jp
mov
add
mov
aaa
xor
jb
clc
pop
out
push
jb
cmp
or
mov
data16
jb
test
and
sysexit
out
cmp
insb
movsl
movsl
xor
add
mov
adc
sub
xchg
mov
aaa
popf
push
dec
adc
sub
push
std
xchg
les
or
mov
pop
adc
pop
cmp
pushfw
lret
dec
mov
cmp
rcr
shlb
mov
cmp
outsb
imul
mov
jno
mov
out
sub
aas
roll
push
dec
pusha
sbb
pop
test
jp
mov
mov
xchg
mov
not
xchg
insb
stos
ss
stos
jae
out
arpl
or
sub
test
fists
aaa
lods
insl
shlb
fs
outsb
pop
sahf
and
add
pop
mov
push
enter
clc
mov
rcl
mov
cmpsb
mov
repnz
dec
pop
lock
icebp
sbb
adc
fdivrs
xchg
mov
fnstenv
lea
sbb
rol
inc
gs
ficoml
mov
jb
mov
xchg
mov
inc
push
jb
mov
shlb
outsl
jns
inc
lock
cmp
dec
mov
test
les
jl
pop
push
mov
lcall
sub
sbb
fldcw
xor
test
movsl
dec
movsl
push
mov
inc
cmp
out
test
scas
leave
and
leave
in
test
mov
pop
sub
dec
lea
dec
ja
test
fbld
lea
xor
dec
lds
xchg
lods
mov
and
arpl
cmpb
and
loopne
fsubs
xor
es
and
das
jno
cmp
mov
cmp
outsb
sbb
mov
movsl
mov
cmp
and
outsl
and
popf
mov
scas
inc
cmp
loope
or
enter
fstps
stos
ss
cmpl
shll
pop
andl
mov
rcr
pusha
es
cltd
sbb
jecxz
stc
test
cmp
jne
stc
push
fadds
pop
mov
cmp
in
add
or
jb
inc
or
dec
sbb
pop
cld
and
adc
mov
out
arpl
dec
std
pop
in
loope
cmpsb
add
fstps
add
sti
dec
cmp
mov
adc
dec
inc
push
flds
imul
jg
in
jl,pn
decl
cmp
pop
mov
dec
and
and
cmp
push
or
pop
inc
aam
popf
pop
insl
mov
push
mov
inc
test
xchg
in
or
mov
inc
xchg
and
mov
fs
push
inc
dec
imul
les
popf
lahf
loopne
test
outsl
adc
mov
stc
in
dec
mov
in
xchg
scas
mov
icebp
mull
out
pop
mov
mov
or
push
sti
scas
mov
sub
and
std
les
xor
pushaw
icebp
xor
jo
enter
push
xorb
push
jmp
rcrb
sahf
push
jle
icebp
lahf
data16
jl
and
xor
push
ljmp
es
jo
movl
xor
cmc
data16
lcall
push
jl
jp
in
inc
mov
mov
pop
add
adc
push
out
pop
or
sub
repnz
xor
ds
xchg
sbb
scas
mov
xlat
mov
dec
xchg
mov
add
jae
mov
or
divps
iret
stos
jl
lahf
fdivs
mov
in
xor
ss
cs
push
das
xlat
xor
jmp
std
inc
mov
jae
enter
out
nop
aaa
mov
mov
xchg
xchg
push
rcr
jmp
xlat
push
mov
jl
orb
add
jl
pop
mov
loop
cmc
jbe
mov
mov
inc
mov
fsubrl
push
sub
mov
call
rol
mov
push
cs
jl
dec
jp
ret
mov
scas
mov
ljmp
mov
lds
sub
rcll
jne
add
mov
mov
pop
daa
popf
loop
stos
sbb
lea
mov
popa
sub
call
xchg
add
pop
dec
and
addr16
icebp
mov
loopne
imul
pop
shlb
sub
pop
fnstsw
arpl
xchg
call
aad
aas
jecxz
sbb
ret
jge
inc
and
cmp
mov
xor
jae
aas
push
adc
xchg
sub
pop
sub
pop
les
test
sbb
jmp
sti
fdiv
xchg
xor
jb
sub
test
pop
addr16
mov
adc
ret
ljmp
pushf
int
jecxz
lods
cmp
daa
fisubrl
jecxz
js
out
inc
sub
inc
and
push
pop
jle
sbb
push
adc
andb
xchg
andl
sub
pushf
xchg
mov
aam
outsl
cli
int
rclb
jmp
jbe
lds
jae
mov
or
push
xor
sti
into
push
cmp
shlb
lock
repnz
mov
test
popa
lahf
addr16
pushf
xchg
ss
mov
loope
dec
stos
lcall
jne
sti
mov
push
es
lret
pop
xor
flds
cmc
jl
outsb
push
mov
pop
mov
mov
rcl
xchg
lods
push
push
rcll
std
dec
je
pop
stc
dec
bound
popf
inc
mov
mov
pop
dec
ja
jne
mov
mov
and
xor
ret
cmpsb
fsin
loopne
add
xor
cmp
mov
add
dec
mov
sbb
imul
fwait
ss
xor
pop
inc
mov
negb
lock
loop
add
dec
or
and
into
aad
and
push
mov
inc
data16
xchg
pop
mov
lock
das
cwtl
sub
dec
dec
dec
push
pop
jne
mov
popf
jmp
scas
out
add
mov
icebp
lods
in
xchg
push
nop
and
mov
xchg
push
cmp
out
mov
mov
or
fisubl
adc
push
fucom
dec
test
sub
xor
xor
mov
mov
add
cld
xlat
enter
icebp
and
mov
push
bound
inc
pop
pusha
iret
inc
stos
scas
mov
jns
mov
dec
popl
or
cwtl
ficoml
adc
push
cmp
fdivrp
jmp
sbb
and
adc
pop
in
lret
cmp
call
mov
imul
cli
jp
xchg
pop
push
in
shll
sbb
lock
ror
mov
fisubl
mov
or
int3
scas
lahf
cwtl
in
sbb
xor
mov
repnz
sub
fisttpll
fiaddl
xor
push
sbb
addr16
push
push
xchg
mov
movsb
cmp
test
sbb
lock
adc
dec
rolb
ja
sbb
jecxz
jg
mov
mov
and
std
sbb
sub
fwait
mull
mov
mov
daa
fs
dec
cld
mov
insb
push
dec
xchg
jbe
clc
mov
add
mov
out
popf
and
pop
pop
push
lea
lahf
cmp
popf
scas
ja
xor
outsb
mov
dec
shrb
out
es
xchg
shlb
movsl
cmp
jg
mov
scas
lcall
and
in
mov
xor
enter
mov
cmp
into
xlat
pop
ret
inc
enter
xchg
xchg
scas
outsb
pushf
add
insb
test
push
pop
mov
pop
mov
xlat
xor
inc
mov
sbb
mov
pushf
pop
scas
xor
in
push
lods
shrl
jl
popa
ja
jp
test
cmc
cmpsb
pop
push
dec
push
out
pop
addl
jmp
push
out
cwtl
stos
mov
mov
cmpsl
out
sbb
push
pop
xchg
and
aam
lods
jp
push
adc
xchg
mov
js
xor
or
aas
lods
jle
inc
sahf
pop
loope
aad
xor
add
repnz
into
xor
pusha
jp
xchg
dec
andb
or
bound
mov
cmpsb
out
jo
mov
add
push
mov
xchg
jb
cltd
cmp
fldenv
idivl
mov
movsb
movsb
daa
push
push
lahf
dec
cmpsl
mov
rolb
jne
outsb
xor
cmpsb
sub
sar
sbb
xchg
in
in
mov
addr16
movq
jae
xchg
lods
pop
stos
idivl
movsb
dec
addr16
cmc
fwait
mov
mov
pop
shrb
xchg
shll
sub
mov
dec
pop
insb
jg
push
xchg
shrb
loope
test
int
adc
xchg
and
jns
les
mov
xor
sbb
sbb
in
adc
je
popf
pop
jg
ret
cld
ror
sbb
inc
dec
mov
test
pop
jmp
loope
call
movsb
dec
mov
addl
pusha
jmp
cmp
movsb
popa
or
nop
jg
cmp
je
mov
xorb
and
pushf
cmp
cwtl
cmc
insl
dec
scas
movsb
jb
sahf
in
pop
test
imul
aam
rcr
stos
popf
mov
lods
daa
orb
movsl
mov
pop
mov
push
daa
xchg
cmp
adc
push
xchg
mov
bound
cmp
xchg
and
jae
int
mov
push
daa
xor
sbb
xor
xchg
lods
mov
xor
add
int3
mov
ja
sub
scas
outsl
mov
icebp
cltd
dec
aaa
imul
cmp
mov
xchg
push
stos
fwait
sarb
pop
enter
lcall
icebp
jns
mov
adc
scas
and
fsubp
inc
movsb
xchg
mov
test
pop
sbb
sbb
test
add
add
add
mov
es
lods
jle
cmp
xor
and
mov
xlat
xor
fldt
fchs
sbb
js
int3
mov
pop
dec
push
movsl
rcll
imul
jg
adc
pop
sub
test
in
call
cs
icebp
movsb
mov
mov
adc
movsb
es
out
rcll
shlb
ret
andb
mov
sti
sub
push
jnp
test
or
add
adc
hlt
mov
fisttps
shrb
je
mov
and
aad
aad
aad
or
imul
xor
jnp
xlat
je
cmp
or
lods
jo
sbb
jecxz
cmc
bound
mov
dec
sub
pushf
sub
jecxz
mov
out
xchg
push
popf
pop
iret
fistpl
test
jae
add
outsl
fistpll
inc
push
stc
pop
scas
fnstenv
loop
mov
mov
repz
dec
fldenv
lcall
inc
jge
cmpsb
scas
data16
dec
repnz
xchg
loop
jp
stc
and
repz
pushf
test
fldenv
mov
fcoms
sbbl
insl
std
in
test
fldcw
inc
sub
scas
scas
jne
aas
or
call
lcall
rcr
movsb
aad
pusha
ds
pusha
clc
mov
mov
sub
dec
out
mov
into
arpl
test
mov
nop
cmpsb
jmp
in
movsl
xor
inc
jle
mov
xchg
xor
sub
notb
jmp
and
mov
outsl
sub
out
inc
lahf
fiadds
and
lea
sbb
or
cmp
in
cmp
movsl
sub
sbb
mov
push
lea
inc
in
lods
push
out
xchg
and
xchg
jg
nop
xchg
setnp
loop
cmp
test
sbbl
subb
or
add
mov
mov
in
cmp
popf
pop
sbb
hlt
adc
mov
movsb
test
in
mov
mov
scas
ss
inc
out
pop
adc
insl
mov
mov
mov
stos
iret
mov
push
jbe
fstps
andb
ret
adcl
ja
ret
stc
lods
adc
loop
and
ss
inc
cmpsb
das
jno
mov
ficompl
mov
push
ret
cmp
push
push
jmp
push
int
arpl
in
dec
push
js
ljmp
fcoml
dec
std
out
fwait
xor
xor
mov
sti
jmp
mov
add
add
jae
lods
pop
push
dec
loope
mov
sbb
add
les
adc
mov
cmp
adc
iret
rorb
sub
je
insl
xchg
addr16
shlb
out
pop
sub
fiadds
and
mov
mov
jmp
push
rcrb
ffreep
out
addb
popfw
xor
cmp
leave
cmp
mov
push
jl
orl
nop
ljmp
fimull
mov
xchg
cmp
outsb
ret
cmpb
notl
sarb
mov
push
lods
aaa
insb
xor
add
inc
std
imul
lea
pusha
sti
jo
sbb
xchg
jle
push
jp
mov
clc
aas
adc
sarl
cli
fstl
loop
cmpb
and
sbb
mov
cmp
out
mov
cmp
dec
push
mov
cmc
pop
in
push
mov
dec
pushf
push
and
xchg
cli
mov
mov
call
sbb
orl
lret
mov
test
mov
jmp
mov
push
add
stos
sub
dec
sti
adc
sti
shl
pop
adc
xorb
mov
jp
fxam
cld
push
ja
jecxz
push
mov
into
jb
aaa
or
xchg
mov
inc
pop
notb
dec
inc
cvtps2pd
cmp
push
and
xor
leave
mov
mov
dec
out
movsl
sub
es
pop
xlat
inc
or
fisttpl
imul
fbld
adc
in
pop
ret
andl
and
cwtl
insl
ds
ja
arpl
daa
pop
sub
pop
xchg
insl
adc
or
lods
dec
cld
shll
push
inc
dec
imul
cli
jmp
je
cmpsb
shll
popa
push
sub
or
lcall
jae
jmp
jmp
addl
adcl
xchg
cmp
mov
cmp
and
cmp
and
xchg
lods
cmp
lret
or
hlt
sub
mov
xchg
mov
pop
xor
jne
sub
sbb
icebp
aaa
fidivrl
loop
push
shrl
insb
add
sahf
mov
sub
xchg
mov
push
xchg
pop
push
or
inc
adc
sub
je
fwait
dec
cltd
pop
jmp
sub
ds
or
add
test
push
mov
vmovntpd
xchg
mov
sub
xchg
out
push
mov
pop
aaa
xlat
jae
mov
mov
mov
adc
cmp
cmp
roll
xchg
imul
jnp
xor
scas
sub
cmp
sbb
cmp
xchg
and
cmc
decb
mov
jge
cmc
jnp
fwait
sbb
fisttps
out
rcr
xchg
leave
bound
pop
gs
sub
and
in
repnz
lret
shll
pop
pop
test
out
ja
push
lea
cmc
movsl
stos
mov
mov
outsb
mov
cwtl
lods
cltd
pop
lods
test
imul
sarl
xor
lahf
lea
cli
inc
push
es
mov
jp
mov
jg
mov
call
push
cmpsb
ret
scas
lds
out
mov
add
push
cmp
cs
pop
pop
lcall
int
stos
mov
loopne
sarb
sti
cmp
bound
aas
xchg
ret
sbb
aad
mov
mov
mov
jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
jmp
test
xor
insl
shlb
inc
int3
int3
std
scas
js
daa
inc
ss
pusha
test
gs
adc
pop
pop
in
mov
inc
ja
bnd
xor
nop
or
jle
adc
push
sbbl
mov
cld
sbb
sbb
inc
imul
or
add
mov
roll
repz
into
nop
pop
outsl
je
push
divb
add
mov
adc
cmpl
iret
adc
jb
lahf
add
dec
cwtl
out
pop
sbb
cmp
xchg
pop
cld
test
jo
pusha
lret
pop
jns
in
sub
mov
cmp
xchg
dec
jns
xchg
loope
and
icebp
call
sbb
movsl
dec
ss
fiaddl
push
enter
push
sbb
jecxz
mov
cld
sbbb
add
mov
adc
ljmp
fildll
pop
push
xchg
xchg
sub
sahf
lock
pop
je
push
movsl
and
mov
iret
dec
pop
mov
xchg
mov
xchg
test
scas
fwait
rclb
repz
cmp
inc
and
xor
out
mov
push
inc
stos
pop
es
fdivrl
push
add
test
sbb
cmc
int
xchg
movsb
push
mov
or
or
sahf
xorb
cld
cmp
enter
push
sbb
push
cmpsb
sub
cld
xor
fs
aas
sbb
push
test
addl
das
out
sahf
jns
add
mov
cwtl
jae
mov
lds
adc
sub
bound
test
mov
loope
sbbl
popf
push
mov
cltd
lret
or
int3
jg
ja
mov
rcr
ja
lcall
push
daa
hlt
pop
sub
ret
pop
pop
mov
in
push
mov
sub
mov
aam
iret
add
ret
test
dec
pop
gs
sub
repz
xchg
mov
adc
adc
int3
lds
sete
data16
adc
out
inc
push
pop
mov
int3
in
rcrl
xor
dec
iret
inc
or
ficompl
sub
jno
insb
sub
xchg
xor
dec
stos
cmp
fcompl
mov
push
cmpsl
push
adc
ret
je
sub
mov
xor
hlt
testl
adc
adcb
ret
imul
mov
pop
stc
pmuludq
insl
push
rol
fcoms
leave
and
jle
sub
jg
jg
loope
sub
jae
pop
mov
jae
jp
push
repnz
mov
repnz
fisubl
cmc
sbb
jbe
cmp
cwtl
sub
xor
or
daa
rorb
lret
in
test
mov
in
addr16
or
xchg
and
insb
popf
mov
pop
mov
mov
sub
adc
ja
inc
stc
in
rcll
xor
add
std
push
aam
ret
dec
dec
or
stos
loop
lret
xor
jle
mov
test
xchg
cmp
push
dec
sub
inc
ds
xchg
test
inc
aaa
push
ss
jnp
test
dec
push
js
mov
fbld
cwtl
dec
push
arpl
jmp
pop
ljmp
adc
xchg
inc
push
push
pop
aad
nop
push
adc
ljmp
push
xor
icebp
cmpsb
push
test
cmp
lahf
imul
or
idivl
fnstcw
cmc
in
js
repnz
cmp
mov
cmpsb
add
into
fisubs
adc
test
dec
sub
popa
sub
jg
dec
mov
ja
in
call
push
lret
sbb
inc
movsl
imul
and
jl
push
pop
sub
pop
ljmp
hlt
faddp
mov
je
mov
xlat
out
addl
movsl
lcall
jbe
cmp
mov
mov
mov
mov
in
inc
mov
cmp
or
dec
aaa
scas
push
in
push
sub
sbb
data16
leave
outsl
jb
stc
push
js
push
cmp
jnp
test
call
sub
push
insb
jmp
adc
xchg
js
cmp
adc
sub
adc
sub
add
divb
das
hlt
push
push
pop
mov
cmp
jns
ret
popa
movsl
imul
xchg
das
pop
mov
adc
daa
pop
ds
inc
scas
adc
sti
ds
or
sbb
push
es
push
and
int3
push
cmp
adc
push
ds
rorb
fiaddl
jp
pop
push
adc
mov
push
loop
movmskps
enter
jns
outsl
cwtl
jle
xlat
enter
sahf
ja
pop
movsl
aam
mov
push
inc
jge
xchg
jp
lret
or
jg
cmp
ja
xorb
lret
pop
imul
in
cmp
cmp
jp
sub
inc
mov
xor
xor
xor
jp
push
and
enter
push
inc
or
loopne
jnp
pop
insb
sub
pop
jmp
jecxz
sahf
test
ss
pop
movsl
push
shll
push
cmp
out
pop
sbb
shl
jp
cmpsb
out
xchg
lret
cmpsl
into
cmp
inc
bound
jno
cmp
pop
inc
jns
mov
scas
sub
daa
add
pushf
lds
or
jl
and
rorl
insl
pop
inc
aad
pop
imul
sbb
sbb
inc
loope
xor
dec
repz
aam
mov
or
lret
daa
cmp
cs
ljmp
mov
pop
adc
mov
inc
adc
sbb
movsl
inc
mov
push
sbb
add
lods
push
add
pop
push
mov
pop
dec
in
fistps
pop
mov
outsl
pop
repz
adc
mov
fidivl
ret
sbb
fwait
popf
sarb
out
push
ficomps
pop
adc
ds
mov
mov
xchg
stos
movsb
jle
pop
inc
mov
add
jl
dec
pop
stc
movsl
int3
dec
xchg
and
inc
xchg
arpl
scas
mov
xor
dec
iret
and
jge
test
push
dec
or
inc
add
push
js
jnp
fsubrs
pop
dec
insb
movsb
daa
push
sbb
pop
pop
pop
push
jno
cmpsl
fists
adc
stc
sbb
push
js
les
movb
fs
frstor
mov
ja
add
stos
mov
aad
jmp
adc
xor
sub
test
mov
stc
dec
sbbl
test
xor
aaa
dec
xchg
push
cs
loope
dec
js
ret
push
or
push
inc
sub
sub
into
daa
testl
or
jmp
sbb
push
mov
outsl
add
pop
ret
jnp
ja
mov
push
je
push
pusha
push
clc
and
outsl
mov
cmpb
bound
pop
lret
xchg
daa
lret
insb
mov
dec
bound
bound
pop
fadd
sub
pusha
shrb
sbb
sbb
add
cmp
push
orb
pop
mov
push
or
daa
dec
jns
sti
mov
pop
ret
imul
cmp
in
mov
std
mov
jp
xchg
sub
cld
or
mov
add
xchg
jecxz
mov
lods
arpl
data16
xor
mov
mov
adc
sti
cmp
movsb
jnp
repnz
mov
or
xchg
pop
cmp
add
sbb
aas
fs
xchg
pop
lcall
insb
mov
pop
sub
or
adc
jle
and
sbb
push
push
add
pushw
mov
add
idivl
loopne
jb
adc
pop
loop
dec
enter
push
inc
fadds
imul
or
inc
dec
cmp
pop
push
mov
pop
or
lods
sub
insb
and
testb
je
adc
pop
or
loopne
push
stos
push
xor
lcall
and
pop
pushw
out
jle
mov
dec
insb
cwtl
out
das
add
movl
xchg
arpl
cld
fsubl
out
jne
sbb
jns
into
push
in
adc
mov
ds
cmp
ds
cmp
cmp
pusha
es
pop
mov
mov
mov
mov
adc
xchg
bound
cwtl
int
cmp
dec
pop
js
inc
add
cltd
in
pop
das
xor
push
pop
or
xor
xchg
adc
jb
push
rolb
das
push
fwait
popa
xchg
jno
sub
cmp
pusha
ljmp
cmp
cmpsl
mov
mov
out
insl
mov
xor
mov
ja
cmp
sub
test
data16
adc
arpl
cmp
mov
sub
cmp
xor
jg
cmp
sbb
dec
loopne
dec
mov
insl
mov
hlt
je
cmp
sbb
xchg
in
in
mov
xor
call
paddsw
ret
nop
xchg
mov
jno
cli
push
shr
xlat
shrl
cwtl
insl
jge
popf
xchg
mov
lret
fadds
mov
cli
push
aam
ret
clc
sahf
inc
divl
ret
sub
mov
loop
inc
xlat
mov
jp
and
cld
push
insl
jmp
xor
jmp
ds
js
ret
or
shll
js
mov
cld
gs
arpl
xor
add
jb
divb
outsb
or
sub
mov
dec
inc
mov
test
or
cmp
or
cmp
add
fcoml
sbb
add
jmp
loope
pop
or
cmpsb
push
cmpsl
ss
push
cmpsl
aaa
add
or
aad
xchg
cmp
mov
or
mov
add
out
or
outsb
dec
add
out
push
fisubl
sub
fisubl
rol
fwait
jge
hlt
test
push
lods
dec
add
jg
imul
popf
out
iret
jo
add
andb
flds
push
mov
jp
jbe
ret
aam
fisubrs
repnz
xor
pop
mov
mov
shr
lcall
popa
lcall
pop
mov
movsl
imul
inc
in
nop
sub
pop
ret
loop
cmp
jb
adc
xchg
sbb
mov
das
mov
outsb
lret
into
jno
insb
xchg
dec
sbb
push
and
lea
jns
pop
aam
fisttpl
sarb
or
and
push
aad
sahf
push
lock
cwtl
push
imulb
mov
pop
inc
dec
or
lahf
sti
test
cwtl
add
in
sub
inc
mov
xor
rcr
mov
nop
fdiv
cwtl
inc
inc
push
decl
jb
cwtl
inc
fidivrs
cmp
std
pop
cld
dec
fidivs
mov
test
sub
rcl
mov
adc
lret
mov
in
push
mov
ret
dec
inc
daa
lock
mov
mov
mov
lret
pop
fcmove
fidivrs
xchg
push
jb
iret
cltd
dec
adc
push
sbb
lock
popa
cltd
push
imull
push
hlt
setge
mov
jmp
lea
ja
inc
jmp
fnsave
pop
mov
sbb
inc
orl
dec
mov
hlt
sbb
into
dec
cltd
mov
mov
popf
inc
jno
sub
push
sahf
enter
adc
dec
aad
mov
loop
sti
sbb
mov
dec
lcall
xor
cmp
arpl
mov
inc
pop
cmc
sahf
out
sbb
cltd
cmpsb
sub
add
cmpsb
insb
popa
rolb
cmpsl
inc
orl
mov
pop
scas
add
or
add
je
out
push
cmp
ret
fs
dec
fwait
adc
add
add
loope
xchg
sbb
jmp
jecxz
bound
mov
cmp
lret
sbb
mov
std
jae
dec
sti
jecxz
or
or
and
popa
fldcw
sbb
mov
loope
mov
out
add
xor
cmp
mov
ss
lcall
xchg
pusha
cli
pop
daa
in
pop
clc
push
xchg
inc
fists
mov
xchg
push
or
int
lret
sbb
lock
mov
cmc
outsl
into
icebp
addl
mov
mov
mov
jno
adc
sbb
fistl
sub
dec
mov
loope
sbb
and
repz
pop
xchg
int3
icebp
daa
fisubrl
and
movsl
mov
xor
cmpsb
or
jle
inc
mov
out
inc
jns
sub
cmp
jo
dec
and
push
mov
pusha
and
xchg
mov
and
leave
mov
cli
fidivrs
call
push
push
cmp
inc
or
push
loopne
xchg
sub
jne
int3
mulb
fiaddl
xchg
jg
and
pop
jb
inc
clc
stos
lds
inc
fs
mov
jp
xchg
mov
movsb
das
mov
lahf
jmp
xchg
in
in
jbe
jae
push
iret
call
fxch
iret
das
fisubl
and
and
inc
imulb
fs
subl
neg
jge
call
sbb
aam
adc
mov
pop
rolb
lock
push
leave
and
cmpsl
js
jbe
aaa
negb
push
in
loop
arpl
inc
loopne
fidivs
iret
or
cs
jnp
sbb
sub
gs
or
lahf
dec
iret
or
cli
imul
aam
test
jo
sbb
and
cwtl
sbbl
fisttps
jns
sahf
inc
cwtl
ret
xchg
sub
insl
mov
mov
sbb
das
outsl
int3
jb
roll
sub
insl
mov
test
lcall
into
mov
inc
sbb
pop
test
cmp
orb
inc
sahf
push
cli
jo
mov
lock
cld
data16
ret
adc
dec
sbb
add
mov
fcompl
out
mov
in
dec
cmpsb
xchg
cmpsl
cmp
lods
fmuls
fldl
jo
jecxz
push
cltd
pop
push
stc
cld
jge
inc
or
xchg
decl
int3
fists
adc
sub
push
lea
ret
rcrb
mov
sbb
in
jno
mov
or
lea
xchg
sbb
push
inc
shr
test
and
add
xchg
lea
shrb
pusha
mov
sbb
pop
sbb
push
dec
add
sbb
push
push
and
pop
or
mov
pop
sbb
leave
xchg
sub
push
push
inc
les
ror
push
xor
sbb
xchg
in
adc
stc
push
and
sbb
and
jmp
inc
cltd
fcmovu
movsl
xor
add
out
lds
xlat
xchg
cmpsb
sub
mov
sahf
les
dec
dec
xchg
mov
lods
inc
dec
push
jmp
aam
pusha
push
mov
xor
stos
sbb
jns
pop
xchg
adc
xchg
sub
pop
jge
xchg
lahf
cmp
xchg
outsb
sbb
sbb
jge
push
lret
stc
mov
pop
jno
cmp
pop
pop
int
add
lods
sub
dec
or
sahf
pop
lahf
and
pop
ret
pushf
cmp
push
lea
mov
xchg
cmp
xchg
int
push
out
sahf
and
xchg
xchg
cld
movsb
add
push
dec
jg
push
repz
push
sub
ret
mov
and
fbld
cmp
mov
mov
or
popa
lcall
lock
movsl
inc
pop
cmp
push
cmpsb
push
adc
leave
push
std
xchg
fiadds
xchg
bound
jge
jecxz
mov
mov
pusha
stos
pop
jge
dec
adc
add
sbb
jb
flds
mov
out
and
ds
rolb
mov
test
xor
js
and
dec
repnz
mov
and
outsl
int
push
jge
jmp
scas
shl
add
popa
stos
mov
out
push
push
mov
sti
test
inc
pop
add
pop
sub
leave
inc
negl
inc
orl
push
pushf
mov
incb
shlb
dec
and
lahf
cmovb
xchg
push
repnz
in
je
inc
stos
sub
cmp
gs
arpl
les
and
ret
sar
nop
jae
adc
pop
mov
bound
adc
and
fistpll
lret
mov
mov
xchg
xchg
push
push
jns
and
xor
jb
jmp
mul
repz
push
dec
jmp
bnd
mov
mov
mov
adcl
add
pmaddwd
mov
mov
mov
filds
lahf
movl
sbb
pop
sarl
push
push
cmpsl
inc
jecxz
subb
cltd
loopne
inc
mov
out
in
adc
ds
xchg
sub
popa
sbbl
mov
mov
mov
stos
out
dec
scas
and
out
mov
inc
pop
cmpsb
cmpsl
frstor
or
inc
add
mov
pop
xchg
fisttpl
dec
aad
cmp
je
push
fstpl
xchg
xchg
xor
movsl
je
push
cli
mov
repnz
leave
xchg
mov
add
popa
test
jo
mov
xchg
cltd
lret
jle
enter
xor
pop
call
mov
xchg
pop
repz
pop
mov
lahf
jg
pop
dec
ret
icebp
mov
les
jge
in
xchg
pop
mov
lahf
cmp
lods
cmp
sub
icebp
xchg
ja
orl
push
or
ret
sbb
stos
sub
fildll
iret
ret
movsl
loope
push
dec
pushf
scas
mov
jo
ss
sar
iret
shll
pop
fldcw
xchg
mov
pop
fists
adc
outsb
outsl
ja
push
fstl
inc
fidivl
mov
push
inc
xchg
pop
sub
adcb
fists
aad
sbb
inc
test
sahf
jg
in
dec
sbb
loope
dec
or
and
xchg
mov
popa
movsb
inc
add
dec
cmp
jne
add
jecxz
das
cld
jbe
sub
cmp
ja
jl
jne
inc
or
lock
imul
and
mov
and
mov
jne
sbb
mov
lock
insb
leave
xor
inc
test
pop
dec
fwait
outsl
or
mulb
in
sbb
and
cmpsb
jg
aas
mov
lahf
ljmp
stos
pop
jno
sub
in
je
je
popa
movsb
arpl
rorl
call
insl
cmpsl
cmp
and
aas
sbb
lret
pop
data16
add
pop
mov
es
stc
xor
pop
dec
idivl
lret
inc
xor
mov
ss
sar
sbb
dec
sub
sub
push
fiaddl
je
push
leave
js
js
dec
lret
cmc
xchg
jae
lret
repz
push
ss
lods
or
sbb
inc
jnp
xchg
or
hlt
and
icebp
insl
pmullw
lcall
push
pop
xor
sti
pop
shr
mov
in
mov
dec
inc
pop
mov
cmpsl
xchg
cmp
cs
sbbl
pusha
push
xchg
and
loopne
jo
hlt
mov
nop
std
push
test
mov
lret
or
jg
adc
mov
push
push
push
das
mov
mov
xor
mov
or
inc
aas
pushf
ljmp
movsl
insb
inc
and
sub
fmull
or
dec
lahf
lods
ljmp
das
lret
sbb
aas
pop
cwtl
or
sbb
insl
ret
mov
in
lahf
xor
sbb
rcrb
repnz
inc
xchg
leave
push
mov
lea
in
inc
imul
push
divl
out
adc
add
sub
rcrb
icebp
adc
insb
repz
sub
rclb
and
add
sub
sub
in
pop
xor
inc
pop
stc
jnp
addr16
and
and
js
mov
push
adc
mov
push
mov
push
push
add
leave
icebp
enter
jnp
clc
lods
xchg
cltd
pop
and
in
sbb
les
fnsave
sub
ds
jno
movsb
cmp
movsl
dec
jnp
cmp
out
out
incl
xor
ret
dec
dec
jmp
xchg
leave
call
lahf
cld
clc
pop
lahf
push
xchg
jbe
sub
aas
dec
adc
inc
repnz
lcall
push
mov
sahf
arpl
das
clc
bound
xchg
push
pop
frstor
arpl
inc
jg
xor
outsb
push
push
inc
popf
pop
enter
fwait
ja
pop
lds
sbb
nop
adc
dec
pushf
stc
aas
dec
cwtl
pop
leave
push
test
int
orl
clc
data16
out
mov
icebp
insl
mov
jns
jne
cs
jo
das
out
jl
and
add
out
jb
pop
lahf
or
jbe
fldenv
cmp
mov
mov
outsb
or
rcr
or
sti
lea
pop
icebp
outsl
pop
jb
into
cmpl
and
mov
sti
xlat
shlb
lcall
outsb
stc
mov
jae
xor
push
pop
push
fcmovnbe
sub
mov
popa
in
imul
xlat
push
adc
stos
fcmovu
cmp
sub
add
mov
imul
pop
adc
mov
cwtl
in
adc
adc
add
in
push
mov
stc
inc
idivl
lcall
dec
std
mov
add
mov
add
fcmovnbe
xchg
pop
sub
imulb
dec
sbb
scas
pop
rol
cs
xorb
nop
out
lods
mov
outsl
add
or
and
pop
inc
out
cwtl
push
push
fdivs
xchg
inc
push
pop
dec
aaa
xchg
adc
xchg
pop
add
mov
sbb
popf
sbbl
adc
or
mov
add
push
xor
xchg
test
mov
aas
stos
jge
jno
test
mov
dec
test
push
push
inc
mov
fwait
xchg
and
lds
leave
testb
in
andl
inc
cwtl
push
sbb
popf
jnp
aad
sbb
jge
xor
rcl
mov
lcall
push
inc
loope
fstps
les
xor
mov
adc
shlb
xor
cmp
shr
sbb
movsb
dec
cmpsl
adc
adcb
aas
mov
aaa
pushf
jp
insb
sarl
pushf
and
stc
jne
cwtl
clc
cli
fs
sub
xchg
cmpsl
rcrl
clc
lahf
int3
lahf
or
addr16
ja
fnstenv
xor
out
add
je
push
sbb
mov
cmpsl
sbb
jns
dec
dec
xchg
adc
clc
dec
in
std
push
inc
movsl
and
dec
jnp
push
sub
pop
lret
dec
sbbl
push
fwait
imul
ret
xchg
iret
sub
lods
int3
dec
mov
push
lds
cmp
lock
mov
sbb
ja
jge
fisubrs
mov
jb
add
cwtl
mov
push
pop
inc
stos
ficomps
fsubp
xlat
scas
inc
adc
pop
cmc
leave
push
jb
xor
lcall
rcrl
mov
and
xor
imul
sbb
insl
jge
movsb
pusha
test
rcrl
emms
lods
jo
and
ret
fsubl
mov
sbb
call
mov
mov
add
lods
xor
iret
dec
fisubrs
add
dec
inc
adc
imul
or
lods
dec
rcl
imulb
xor
popa
mov
loop
mov
es
xor
xchg
and
addr16
ret
inc
mov
mov
in
negb
hlt
mov
call
pop
mov
imul
movsb
mov
hlt
push
imul
out
ja
mov
jmp
shrl
cmpsl
in
adc
mov
sbb
out
cmp
inc
leave
dec
xor
enter
cmpsl
std
push
cmp
push
pop
xchg
push
ljmp
xchg
frstor
mov
pop
jno
mov
pop
insl
lods
xchg
xchg
ss
add
xchg
sahf
data16
cmp
insb
imul
pop
mov
xor
sub
insl
stos
xor
sbb
push
jle
cmp
cmp
cli
std
xor
aaa
push
push
push
mov
cmp
fiadds
mov
xchg
mov
gs
movsb
mov
fwait
aaa
cmc
push
shr
lods
subb
inc
fnstsw
in
jb
inc
push
jbe
xor
in
mov
push
mov
clc
xor
sub
out
inc
mov
fildl
imul
fisttpl
sbb
pop
add
lret
pushf
jae
fdivl
clc
xchg
ss
mov
outsl
mov
sub
out
pop
test
cmp
lods
leave
inc
cmp
iret
xor
add
iret
mov
stc
add
sub
push
and
fwait
sub
out
aad
test
int
xchg
movsb
insb
fcoms
fwait
mov
int
sub
jno
push
xor
stc
sti
in
push
int
sub
or
rcrb
popf
inc
iret
inc
xchg
mov
lods
out
insb
scas
sbb
jnp
mov
out
xchg
push
mov
mov
cltd
in
sahf
push
and
lret
out
lret
fdivr
scas
aad
cli
outsl
xchg
sbb
xchg
inc
lret
inc
stos
iret
mov
push
stos
xor
lock
push
xor
mov
push
fldl
or
mov
jne
xor
xchg
popf
mov
fcmovnbe
jbe
rorl
sub
dec
int
jbe
in
dec
push
imul
jg
add
fwait
xlat
mov
mov
fimull
add
cltd
dec
cmp
jge
sbb
pusha
leave
sbb
and
pop
rcrb
daa
adc
sarb
dec
mov
repnz
push
leave
jl
and
mov
and
dec
mov
or
insl
rcrl
dec
jb
dec
mov
outsl
icebp
push
sbb
or
incl
insl
flds
nop
adc
int
adc
stc
sarl
addl
jmp
int
iret
insl
fyl2xp1
mov
repz
lods
push
fmuls
aaa
cmpsb
call
inc
pop
std
push
inc
cmpsb
inc
or
adc
cmpsb
scas
ja
pop
add
insl
jge
mov
popa
jge
pop
mov
xor
mov
add
mov
xchg
pop
push
data16
shrl
incl
mov
cli
lock
sub
xchg
inc
sbb
rclb
pop
lods
out
pushf
mov
push
lds
xchg
ss
push
mov
adc
pop
xchg
test
jae
mov
pop
add
test
imul
fwait
or
cmpsb
cltd
fs
cmp
jae
fiaddl
or
push
pushf
dec
xchg
add
or
dec
adc
insl
push
nop
enter
flds
dec
es
mov
mov
sub
mov
or
jo
popf
jl
mov
in
push
shlb
adc
inc
and
cli
sbb
lods
repnz
fwait
test
push
adc
stos
adc
mov
in
int
pop
stc
xchg
ja
push
add
enter
js
and
push
fmull
xor
mov
or
movsb
jbe
mov
out
mov
imul
mov
sbb
xlat
loopne
js
adc
into
mov
aas
add
push
mov
inc
mov
ffree
bound
xor
movsl
xchg
mov
dec
clc
rol
lods
sbb
dec
pop
mov
cmp
jl
outsb
or
sub
fwait
stos
popa
cwtl
loopne
and
jo
jmp
xor
popa
push
and
lcall
mov
aaa
lret
insb
scas
lds
cltd
arpl
mov
and
dec
cli
adc
mov
testb
jl
xchg
mov
mov
out
int3
sbb
adc
mov
inc
xchg
mov
cltd
popf
outsl
outsl
test
push
out
mov
sub
jo
repnz
cmpsl
aas
ljmp
test
jae
and
inc
or
cld
outsb
cld
sub
mov
insl
out
data16
mov
add
push
loopne
mov
and
call
jns
push
lahf
cwtl
sub
cmp
push
jae
mov
push
or
mov
aad
jecxz
xor
adc
fisttpll
movsl
movsl
pop
xchg
xchg
adc
push
cwtl
and
add
xchg
or
test
cmp
gs
out
icebp
cmp
add
out
int3
movsl
test
dec
ljmp
mov
sub
add
push
jecxz
jmp
mov
shlb
into
cwtl
adc
je
adcl
divl
out
mov
gs
xchg
inc
mov
pop
pop
jnp,pn
mov
scas
cld
sbb
or
rcrb
adc
mov
icebp
mov
lret
int3
loop
test
pop
jns
lea
or
dec
or
ja
je
int3
xor
popa
jl
xchg
and
out
mov
lret
push
jb
pop
rep
popa
into
sahf
test
push
in
xchg
xchg
call
orb
pop
adc
ret
loope
xor
das
cmpsb
push
shl
push
adc
cld
jg
mov
cmp
jmp
sub
lds
rclb
inc
xor
jg
lret
leave
push
out
outsl
and
inc
mov
nop
inc
cmpsl
cli
cmp
mov
lds
mov
push
cmpsb
mov
cmp
fmulp
sub
movsl
rclb
jo
rolb
aas
xchg
mov
sub
data16
push
lret
add
ljmp
add
call
ja
in
pop
jmp
push
xchg
shrb
jb
arpl
and
push
cmp
lock
test
jns
lret
mov
mov
adc
mov
mov
test
xchg
xor
push
xor
rolb
inc
jle
and
mov
icebp
or
lods
mov
jg
js
jae
add
xorl
adc
and
mov
add
repnz
mov
mov
insl
sti
adc
stos
ret
ret
pop
xor
xchg
mov
stos
imul
jnp
popa
mov
mov
call
in
in
cmp
loop
adc
mov
jne
lock
mov
add
fldenv
loopne
imul
idiv
nop
nop
mov
jo
sub
mov
push
sub
push
mov
mov
cmc
xadd
sbb
xor
int3
aad
mov
lret
push
mov
imul
sbb
insl
popa
cld
pop
fsts
mov
sbb
in
pop
dec
sub
dec
mov
adc
pop
sahf
sub
enter
mov
add
cs
test
nop
rcrl
cmp
adcl
inc
jp
out
rcrl
dec
iret
sub
and
xlat
mov
and
xchg
push
in
int3
xchg
mov
insl
sbbb
adcb
in
pop
push
int
repz
in
xchg
fdivrl
fsubp
xor
stc
out
pushf
cmp
int3
mull
lcall
in
nop
cwtl
jp
or
lret
xchg
nop
or
inc
mov
or
jnp
sbbl
jmp
inc
stos
cmp
pop
jnp
orb
mov
rorb
xorl
in
dec
sbbb
outsl
popa
or
jg
jne
inc
cmp
test
in
out
sub
mov
aas
repnz
stc
aaa
jl
inc
sbb
out
incb
sub
inc
cmc
push
xchg
or
test
push
loop
mov
ljmp
xlat
aaa
cmpsl
pop
sti
xor
mov
arpl
sbb
mov
or
xor
int
pop
filds
lret
or
adc
jns
lret
dec
or
shrb
push
push
xchg
sbb
fdivrs
adc
push
dec
sbb
jne
pop
andl
xchg
movsl
fcoms
in
adcl
mov
push
cmpb
dec
xor
pop
out
mov
hlt
popa
test
xlat
xlat
jno
cmp
stos
fcmovne
cmc
insb
mov
shrb
add
pop
push
mov
sbb
cmpsl
shrl
and
jne
sub
lahf
pop
pop
ljmp
dec
mov
dec
gs
push
mov
dec
addr16
mov
dec
mov
mov
test
push
mov
out
push
xchg
and
mov
mov
lea
fldt
cmp
dec
aas
mov
and
fadds
test
dec
test
rcl
fwait
sbb
sbb
movsl
das
push
xchg
jl
imul
xor
pop
mov
movsb
das
mov
out
inc
outsb
sbbb
inc
push
cmpl
cmp
add
mov
inc
in
mov
or
inc
add
inc
inc
dec
add
push
lahf
mov
xor
push
add
div
xor
das
aam
test
fbld
xchg
xchg
jmp
pusha
lds
or
mov
jae
shr
cld
mov
pop
xchg
stc
ficoml
ljmp
and
push
add
pop
popa
cmp
push
hlt
clc
adcb
and
sub
mov
push
insb
push
std
push
lcall
js
sbb
sub
mov
push
lods
mov
subb
fnstcw
mov
add
pusha
mov
add
leave
push
sti
mov
rcrl
or
push
lahf
or
mov
icebp
ss
lea
ds
call
popa
rorl
cld
mov
incl
mov
sbb
cwtl
adc
icebp
cld
or
push
inc
or
out
shrb
ror
sub
cmp
push
jp
xor
sbb
pop
lahf
outsb
mov
adc
adc
mov
shrb
xor
clc
mov
pop
iret
in
dec
cmp
aaa
mov
or
sbb
sub
add
imul
mov
jo
je
or
in
sbb
xor
dec
nop
cwtl
aam
bound
push
daa
outsl
lahf
sbb
leave
mov
mov
adc
cwtl
pusha
lret
dec
lret
adc
mov
xchg
das
jo
test
shrb
repz
adc
xor
bnd
sbb
xlat
lods
dec
out
mov
pop
jg
jge
sbb
into
popa
jmp
push
in
aad
in
std
aaa
cmc
adc
lock
ljmp
xor
mov
or
or
loop
enter
sbb
cmc
cmpsb
hlt
sub
into
bound
aaa
mov
and
sub
push
out
jge
scas
pop
inc
test
sub
sbb
dec
rolb
orb
or
lcall
pop
icebp
ja
xorl
dec
shll
aaa
adc
lea
imul
sub
outsl
mov
xchg
sub
out
enter
nop
and
aas
mov
fwait
xor
inc
fs
pop
pop
repnz
jmp
pushl
lcall
shr
das
mulb
outsl
dec
fisubrs
sarb
addr16
lea
inc
push
sbb
xchg
adc
fcmovnu
jno
add
mov
xlat
out
int
pop
loopne
sub
int3
jmp
scas
rcll
aam
xchg
mov
dec
lods
int
lods
ret
mov
jp
push
outsb
stc
adc
xor
lock
xchg
and
xchg
fisttps
ret
cmpsl
daa
dec
push
call
jmp
mov
fisubrl
dec
jmp
sbb
mov
xor
push
daa
adc
push
scas
lret
mov
mov
xlat
sub
sar
rorb
fwait
and
dec
add
adc
scas
cmovns
jns
or
dec
andl
das
xchg
or
dec
ss
mov
or
fwait
mov
dec
mov
shll
push
mov
ret
jnp
ja
dec
mov
adcb
mov
adcl
rorb
sbb
sbb
sub
aad
mov
sbb
shr
nop
cmp
jmp
sahf
iret
clc
mov
cmp
insb
movsb
mov
mov
decl
mov
xor
inc
and
jnp
xor
mov
jmp
daa
push
xor
push
push
lahf
repz
dec
out
insl
add
int
push
shl
mov
dec
je
mov
rorb
ljmp
sbb
fstpl
xchg
nop
aas
pop
orb
jne
sbb
xchg
cmp
imul
adc
add
adc
lcall
in
aad
xor
enter
sti
notb
sbb
mov
mulb
dec
and
iret
fldenv
mov
jbe
sub
imul
sub
or
aad
ret
sbb
cmpl
loope
mov
dec
lock
pop
lock
mov
xchg
sbb
lods
push
ret
int3
movsl
mov
adc
inc
ljmp
push
xor
dec
mov
pop
mov
xor
out
int3
fldcw
cmp
adc
sub
cbtw
cmp
xor
inc
mov
dec
mov
das
jecxz
jnp
cmp
or
pushf
fwait
pop
fldcw
mov
pusha
movsb
add
repnz
nop
pop
jae
xchg
push
sub
cmpb
xor
fnsave
in
test
nop
lret
fsubp
sbb
cmpsl
or
pop
pop
mov
cmp
sahf
pushf
sbb
adc
add
cmp
int3
cmp
stos
test
fsts
sub
pushf
sbb
mov
mov
xchg
fiaddl
and
jecxz
jmp
or
outsl
jbe
mov
adc
sbb
dec
xchg
sbb
test
gs
sub
mov
xor
mov
mov
test
movsl
andl
pusha
cs
rorl
sub
bound
adc
lcall
adc
jecxz
inc
idiv
xchg
cmpsb
mov
lock
xchg
adc
jo
sub
fidivl
mulb
ja
movsl
imul
dec
mov
dec
int3
mov
sti
ss
out
insb
mov
in
lods
scas
xor
xor
testb
adc
and
xor
mov
push
lcall
push
jecxz
decb
add
dec
popl
xorb
or
iret
and
pop
xor
xchg
int
jmp
mov
shrb
mov
cmp
fbld
mov
movsl
nop
hlt
in
or
jbe
push
in
push
jmp
sub
loopne
and
lods
filds
repz
test
jne
insl
sub
xor
insb
mov
arpl
push
scas
push
test
mov
sbb
inc
sbb
js
xlat
popf
dec
insb
stc
jmp
lret
sub
fdiv
fisubrs
clc
jecxz
jp
push
lcall
pop
cmpsb
xor
ljmp
jno
or
lock
pop
je
or
xchg
xchg
loop
mov
lock
pop
xor
ss
inc
leave
fldt
adc
push
mov
lea
mov
push
dec
shll
lds
cmpsl
sub
loope
insb
mov
dec
cmpsb
insl
push
xor
popf
into
mov
lea
mov
mov
es
in
sbb
pushf
jp
shl
mov
adc
jp
mov
cmp
in
sub
add
dec
or
jno
sub
sbb
repz
pushf
push
mov
push
divl
jmp
mov
jp
out
aas
adc
frstor
mov
cmp
jo
shll
pop
gs
test
cmp
ret
and
in
movsb
mov
mov
mov
hlt
or
shrl
mulb
xchg
push
mov
inc
sahf
or
xlat
mov
inc
jl
sbb
sbb
jo
adc
and
pop
mov
aad
xchg
sbb
arpl
pop
jb
stos
xchg
and
jecxz
push
push
pop
push
pop
cltd
out
xor
sbb
push
bound
sbb
cs
sub
cmc
ss
out
mov
jno
and
fs
jmp
xchg
pusha
xchg
in
pop
dec
lret
push
inc
xchg
aam
mov
pop
dec
cmc
out
and
int3
jb
pop
out
aas
push
out
inc
jmp
stos
add
push
lret
ss
adc
sbb
gs
dec
jecxz
xlat
loope
jl
leave
repz
nop
stc
movsb
mov
jl
adc
ja
in
inc
inc
ljmp
cmc
sahf
sbb
lret
xlat
stos
cld
adc
sarb
pop
jo
pop
out
jge
mov
mov
add
push
mov
cmp
xor
mov
mov
ret
lret
cmpsl
jae
adcl
cmp
push
in
xor
xchg
aaa
or
cmpsl
mov
mov
test
inc
mov
lock
xchg
test
lea
dec
xchg
test
xor
frstor
mov
je
xchg
fwait
jne
push
repz
js
sahf
push
rcr
stos
fcom
sbb
int
stos
adcl
dec
xchg
add
popf
cld
and
mov
xchg
inc
adcb
mov
jle
leave
call
mov
nop
xor
mov
aam
mov
sarb
nop
stos
jecxz
aad
cs
imul
clc
adc
jb
fstl
out
mov
ss
or
cmp
mov
adc
movsb
sbbl
push
out
stos
xor
sub
dec
mov
cmpsl
cmp
in
mov
imul
inc
icebp
add
push
insl
negb
jne
dec
popf
loopne
mov
pop
lock
sbb
loope
cmp
cmp
out
mov
adc
outsb
mov
pop
cmp
call
loop
test
gs
lret
sbb
shlb
dec
sub
lock
loopne
sub
or
dec
mov
cli
dec
jnp
or
xchg
in
mov
xor
sbb
mov
mov
iret
subb
mov
repz
cmp
lahf
sarl
mov
jo
cs
insl
rdtsc
out
loopne
mov
pop
mov
mov
int3
or
jo
adc
rol
cmpsl
int
rcl
test
popa
add
rorl
add
dec
sahf
dec
dec
sub
mov
in
popa
mov
test
clc
fisubl
add
ja
mov
cltd
fistl
mov
insl
jae
test
mov
jmp
jb
hlt
fbld
popf
cmpsl
and
in
dec
sub
movsb
into
cli
push
cmpsl
mov
popa
dec
lock
pop
iret
dec
cld
int
push
pop
mov
push
imul
add
or
inc
insb
cmp
insb
jno
insl
pop
push
dec
lea
dec
xchg
outsl
push
aas
jge
arpl
outsl
imul
dec
test
xor
mov
fwait
cmp
xor
into
or
iret
out
xor
add
mov
sub
pop
mov
in
mov
jno
add
jo
std
xor
popa
push
mov
push
cmpsl
add
adc
aad
imul
xchg
xor
pop
shrb
jns
bound
es
lods
rorb
sub
push
sub
adc
mov
pop
mov
push
mov
inc
imul
call
cltd
mov
bound
je
pop
pop
mov
jecxz
sbb
mov
nop
mov
mov
add
adc
dec
sbb
lods
lret
scas
fsubrl
lahf
lahf
mov
iret
mov
out
popa
test
xchg
mov
jge
pop
js
cmc
inc
add
cld
add
lods
pop
xchg
in
cmp
lret
sub
sbb
mov
stos
cltd
insb
push
imul
in
shll
sub
sub
xchg
push
cmp
xchg
xor
ret
sub
outsb
aaa
into
loop
dec
mov
mov
fstpt
jp
sbb
xor
mov
or
add
das
mov
add
jp
xor
push
adc
ret
and
in
test
add
ret
dec
data16
lret
mov
xor
sub
sub
add
stc
and
push
movsb
mov
mov
push
test
orl
iret
add
push
mov
and
les
adc
sbb
jns
out
xlat
xor
inc
push
xor
lock
adc
cltd
loope
xorb
sbb
add
movl
cltd
jbe
dec
push
cmp
jo
jl
cli
in
popa
lret
or
and
inc
jl
in
jne
and
es
jae
push
icebp
stc
cld
fnstsw
jbe
push
push
mov
jno
add
shll
into
xor
arpl
sub
pop
dec
insb
das
orl
sub
or
push
mov
dec
in
pusha
cmpsl
and
lret
xchg
int3
loop
stc
out
or
push
cltd
in
push
xchg
xor
jae
cmp
cmc
test
frstor
lds
or
das
cltd
loope
push
pop
mov
stc
ficomps
rcr
int3
xor
stos
xor
repz
sub
arpl
lods
or
add
incl
dec
sti
push
cmpb
mov
ja
sahf
pop
fisttps
in
mov
scas
pop
jecxz
aam
lods
ja
es
leave
adc
inc
stc
or
std
xchg
dec
mov
push
cmp
inc
rcrl
adc
lret
stos
and
clc
jno
mov
cmp
inc
mov
jo
jae
jp
add
sbb
jle
jecxz
xor
xchg
jb
mov
mov
mov
or
pop
mov
mov
lcall
lea
insl
xor
sahf
and
in
xor
sbb
dec
jo
adc
leave
or
adc
dec
xchg
fldenv
int3
insb
xchg
sbb
sub
test
gs
mov
nop
cltd
popa
mov
out
adc
mov
sbb
sahf
mov
inc
scas
inc
cmpsl
pop
shrb
js
or
ss
dec
mov
jl
aaa
loope
jge
ljmp
xor
cmpl
dec
jbe
xchg
das
lret
stos
cs
popf
je
sahf
inc
xor
pop
inc
ljmp
pop
adc
cmpsl
pop
push
in
cld
gs
push
rclb
jne
xchg
stos
rclb
les
loop
lods
xor
inc
ja
jns
ss
jmp
and
pop
and
movsb
inc
rcll
adc
mov
xor
or
mov
ret
repnz
arpl
pop
jnp
enter
fistps
mov
cmp
ljmp
cmp
clc
adc
cmc
sub
sbb
dec
push
mov
push
stc
jne
jmp
fisttpl
stos
cli
and
sahf
lret
lret
jl
imul
and
sub
jge
jmp
jp
icebp
sbb
lock
sub
insl
aam
cwtl
xor
ss
sub
loopne
jae
in
mov
insl
into
or
cmp
cmp
and
xor
lcall
jle
test
xor
cmp
lret
int3
add
es
cs
sbb
and
sti
dec
xchg
stos
in
inc
sub
adc
jo
imul
ds
mov
cmp
call
js
push
push
xchg
in
jno
add
lds
inc
cs
cmpsb
jo
jo
sbb
fnstenv
movsb
cld
lea
subl
dec
lds
push
sub
and
sub
xchg
insl
mov
push
fwait
in
jbe
rclb
cmp
mov
jnp
incb
sub
jle
loop
std
test
arpl
test
dec
lret
inc
movsb
lahf
shll
mov
es
mov
testl
inc
sbb
js
adc
aas
pop
mov
ret
bound
fisttpl
xchg
repz
pop
ds
pop
jnp
bound
sub
adc
cmp
test
xor
sub
or
sahf
enter
xor
or
stos
sbb
data16
rcrl
decl
mov
movsl
loope
rcrl
lock
pusha
fwait
rol
fldcw
data16
icebp
insl
fiadds
outsb
aad
in
ja
or
mov
sbb
pop
aam
cltd
push
lret
aaa
in
xor
fwait
inc
test
fsubrs
aas
or
sub
jnp
and
popa
insl
mov
push
mov
pusha
scas
cmp
jmp
insb
sbb
imul
rcll
pop
mov
push
out
clc
dec
scas
jne
out
in
dec
push
lods
test
addr16
mov
fwait
repnz
pop
inc
mov
pop
jnp
inc
scas
sub
insb
lds
or
in
pusha
je
dec
sub
push
mov
xor
sarb
or
pop
mov
or
or
inc
sbb
mov
movsb
xchg
nop
mov
mov
shrl
mov
lea
adc
inc
pop
adc
clc
fsubrs
daa
jge
dec
bswap
dec
es
std
jno
pop
dec
and
lahf
sub
lret
mov
adc
push
jge
dec
mov
jno
mov
adcl
xchg
shlb
dec
repz
sbb
mov
mov
jge
jns
mov
lods
cmc
std
frstor
jge
dec
push
enter
sbb
mov
or
dec
inc
sbb
lret
dec
mov
fistl
xchg
mov
daa
shlb
aaa
jge
dec
sbb
pop
imul
cwtl
repz
mov
mov
lea
adc
inc
jns
sbb
dec
mov
in
adc
pusha
push
sbb
mov
rcl
inc
xchg
mov
mov
int3
push
push
ja
add
inc
sbb
mov
rcll
adc
mov
and
dec
fisttpll
rcl
gs
push
lods
mov
repz
mov
lea
xor
ja
or
inc
scas
sub
insb
lds
mov
inc
cmc
fnsave
call
mov
dec
xchg
jae
lea
dec
inc
and
adc
pop
jnp
inc
jnp
adc
jl
sub
insb
mov
rcll
jge
dec
jmp
lods
es
sbb
mov
dec
mov
jnp
inc
xor
mov
mov
cmc
frstor
pop
jge
dec
scas
enter
sbb
mov
shll
inc
jno
and
inc
mov
das
jno
stc
enter
add
in
rcll
jg
add
dec
push
enter
sbb
mov
roll
mov
and
adc
cld
lock
xor
dec
add
push
adc
mov
inc
aad
test
dec
stc
and
jnp
inc
out
jne
and
inc
mov
clc
icebp
mov
sub
adc
ficomps
mov
and
lea
adc
inc
repz
adc
lds
clc
repnz
jns
add
inc
pop
loope
mov
icebp
mov
xchg
cmc
fstp
js
shl
push
mov
rorl
es
sbb
mov
repz
rorl
sbb
adc
lds
or
cmc
loope
test
rolb
dec
stos
enter
sbb
mov
shll
jno
and
inc
mov
das
jp
sti
push
inc
lea
dec
pop
and
sub
in
sbb
or
push
jge
dec
cmpsl
enter
sbb
mov
rep
shrl
jns
adc
jnp
hlt
lds
or
cmc
in
mov
sarb
push
inc
jge
dec
push
enter
sbb
mov
sarl
imul
daa
sub
fstpl
in
orl
arpl
xor
cwtl
pop
rorb
pop
enter
and
push
cmpl
xchg
enter
sbb
mov
push
lds
loopne
mov
sti
push
push
lea
dec
and
xchg
ja
or
jo
xor
push
cmc
adc
inc
out
shrb
dec
enter
mov
jge
or
dec
xchg
sbb
inc
imul
test
std
mov
mov
fstp
js
shl
push
mov
lds
aad
xchg
sbb
mov
repz
rorl
sbb
or
adc
mov
dec
dec
or
pop
adc
xchg
scas
jnp
inc
mov
adc
mov
sub
jge
sbb
rclb
sbb
lods
shr
inc
mov
pop
lea
sub
xchg
dec
jnp
inc
push
and
je
xor
push
cmc
adc
inc
out
shrb
dec
iret
enter
outsb
sbb
adc
or
add
push
es
sbb
mov
sarl
lea
adc
xchg
jmp
test
adc
movsl
sub
add
in
rclb
or
outsl
enter
sbb
mov
xor
leave
lea
adc
inc
push
adc
int
jo
pop
push
jns
dec
inc
pop
cltd
adc
stc
or
shr
push
mov
enter
sbb
mov
jns
adc
mov
inc
daa
mov
in
cmpl
test
rolb
dec
push
enter
sbb
mov
sarl
imul
mov
inc
mov
cmc
mov
push
push
adc
dec
arpl
xor
mov
mov
shll
add
testl
mov
ds
sarl
mov
mov
dec
gs
adc
xchg
mov
adc
cmp
insl
mov
sbb
dec
fisttpll
rcl
adc
mov
mov
int3
cmc
cltd
fnsave
dec
jge
dec
pop
enter
sbb
mov
or
mov
testl
mov
dec
push
loopne
test
sbb
and
sub
inc
dec
int
mov
fnstsw
push
adc
push
xchg
jge
dec
jecxz
mov
negl
mov
cmp
stc
enter
add
in
rclb
inc
add
jl
xor
leave
lea
adc
inc
push
adc
daa
enter
sbb
mov
inc
stc
mov
lea
loope
cmpsl
adc
xchg
mov
roll
adc
lds
sub
jns
sbb
dec
fmull
test
loopne
test
shl
xchg
ffree
imul
push
jg
cmp
adc
jo
xor
rcll
mov
repz
test
adc
adc
aaa
dec
inc
and
adc
imul
jnp
adc
lahf
fisttpll
js
sub
rcll
jge
dec
xchg
enter
sbb
mov
push
lds
stos
mov
mov
or
addr16
adc
fisttpll
js
sub
lds
cmpl
xchg
enter
sbb
mov
repz
fcoms
xchg
cmp
inc
or
mov
mov
push
shl
push
mov
enter
sbb
mov
repz
rcll
inc
push
mov
in
jecxz
sti
push
dec
lea
dec
pop
and
sub
inc
dec
aad
add
mov
fs
add
push
lahf
rcr
push
out
jge
dec
dec
mov
add
xchg
test
dec
jno
aaa
adc
sbb
inc
imul
lods
pushf
lahf
leave
or
rol
push
cmpl
xchg
enter
sbb
mov
repz
lds
scas
mov
or
pop
dec
and
xchg
ja
or
js
sub
or
es
cmp
inc
cmc
push
mov
sbb
dec
mov
cmc
pop
scas
cld
fdivl
mov
mov
sbb
mov
fnstcw
lea
adc
xchg
out
jnp
inc
incl
adc
push
mov
or
enter
sbb
mov
inc
sarl
scas
dec
jmp
xchg
jnp
inc
lahf
sbb
cmp
imul
or
jnp
or
inc
test
lea
xor
xchg
inc
jnp
inc
push
and
mov
push
cmc
adc
inc
out
shlb
dec
ret
enter
jns
or
mov
lea
dec
dec
and
adc
outsl
jnp
inc
jae
adc
lahf
and
je
xor
fs
ror
push
lahf
jge
dec
out
enter
sbb
rclb
lea
loope
es
shll
lahf
popf
or
jae
add
dec
push
enter
sbb
mov
sbb
mov
fisttpl
es
pop
popf
hlt
lahf
mov
adc
and
dec
jae
add
inc
sbb
mov
rcll
adc
lods
sti
dec
mov
xchg
fildll
adc
rolb
jns
movups
pop
jnp
inc
outsl
jmp
mov
xor
fnsave
sar
push
jge
dec
lahf
enter
sbb
mov
push
lds
mull
adc
lds
or
dec
rorb
dec
stos
enter
sbb
mov
sarl
imul
sub
inc
popa
pop
es
les
ds
nop
inc
sbb
mov
nop
cmc
aad
subb
std
dec
mov
int
fwait
sbb
mov
repz
sbb
mov
inc
aad
adc
lds
or
cmc
loope
mov
sarb
push
dec
jge
dec
pop
enter
sbb
mov
sarl
inc
insl
mov
dec
xchg
sub
dec
popa
add
aaa
rorb
sbb
dec
outsl
enter
sbb
mov
cmp
aad
xchg
dec
lods
and
adc
jl
sub
in
add
enter
mov
inc
rclb
push
push
jge
dec
mov
sbb
mov
rep
shrl
inc
jge
sbb
cmpsb
sub
mov
adc
and
dec
ja
add
inc
sbb
mov
mov
cmp
aad
xchg
dec
mov
xchg
lret
jnp
inc
shll
std
or
pop
jnp
inc
imul
test
std
mov
mov
fstp
jl
sar
push
jge
dec
lahf
enter
sbb
mov
repz
lds
mull
adc
lds
or
jae
add
dec
push
enter
sbb
mov
sbb
cmp
imul
and
inc
jo
stc
enter
adc
pop
jnp
inc
outsl
jmp
mov
xor
fnsave
stc
push
cmpl
xchg
enter
sbb
mov
push
jnp
inc
cmp
mov
mov
cmc
frstor
pop
jge
dec
scas
enter
sbb
mov
shll
jno
and
inc
xchg
rorl
insl
mov
sti
push
inc
lea
dec
push
and
adc
xchg
addr16
inc
dec
int
mov
fnstsw
insb
cmc
add
fstl
out
jge
dec
dec
mov
or
fstp
cld
cs
imul
mov
icebp
or
shl
push
cmpsl
jge
dec
mov
int
fwait
sbb
mov
repz
sbb
dec
mov
cld
gs
ror
inc
popf
mov
lea
add
xchg
scas
jnp
inc
mov
adc
mov
sub
jge
sbb
rclb
jl
mov
in
xchg
mov
push
and
adc
inc
ja
adc
and
frstor
rcll
jmp
test
es
sbb
fcomip
and
dec
adc
mov
inc
sarl
lea
fucom
in
pop
jnp
push
xchg
adc
mov
xchg
repz
inc
push
adc
aas
enter
sbb
mov
inc
leave
mov
lea
adc
xchg
out
jnp
inc
incl
adc
pop
mov
out
lods
pop
loopne
orl
mov
jmp
cmp
dec
adc
xchg
push
dec
shll
inc
mov
xor
pop
pop
or
dec
cmc
sbb
test
dec
repz
sbb
cmc
mov
imul
xor
inc
dec
inc
xor
nop
inc
pop
cltd
adc
rorl
cmc
leave
fisttpll
push
jb
movsb
mov
mov
in
mov
je
mov
adc
mov
aaa
imul
xor
ss
push
movsl
and
adc
inc
lret
dec
adc
movsl
imul
adc
or
inc
sbb
mov
pushf
cmc
int
mov
in
mov
enter
sbb
mov
repz
and
mov
cmc
aad
mov
loopne
test
rcrb
shlb
dec
jg
cmp
mov
mov
shll
mov
lea
or
push
in
mov
cmc
push
addl
push
adc
daa
pusha
pop
loopne
orl
or
jnp
xor
jae
add
xchg
sahf
mov
mov
cmp
pop
and
loope
cmpsl
dec
std
and
jnp
inc
out
imul
sbb
dec
or
mov
lods
sbbl
or
aas
sarb
dec
dec
pop
enter
sbb
mov
fnstcw
lea
adc
xchg
xchg
jnp
inc
out
adc
push
and
sbb
pop
mov
in
adc
les
dec
cmp
dec
adc
xchg
pop
jnp
inc
scas
sub
insb
ret
repnz
mov
fimuls
and
arpl
imul
or
lret
jnp
inc
fistps
imul
xor
into
cmp
dec
or
outsl
jge
dec
ja
or
jo
ja
pop
in
mov
inc
mov
dec
dec
popl
mov
or
mov
insl
nop
repz
sub
dec
mov
into
scas
lods
pop
cld
xor
inc
push
or
mov
shlb
cld
cmp
mov
and
and
test
les
mov
lea
xor
ja
add
stos
sub
push
lahf
add
fldl
shlb
dec
test
xchg
or
pop
mov
cmp
insl
and
push
jnp
aas
mov
mov
shl
fnsave
jae
cmp
or
pop
sbb
mov
xor
mov
lea
adc
inc
repz
adc
push
and
sbb
pop
test
rcr
inc
lea
lea
dec
and
adc
xchg
jg
cmp
mov
sarl
jl
sub
insb
mov
stc
push
mov
dec
fwait
enter
sbb
mov
jns
sbb
mov
mov
mov
cld
lds
or
cmc
sbb
push
adc
dec
arpl
sub
jnp
xor
aad
mov
mov
mov
cmp
adc
sbb
or
cmc
jns
adc
rcrb
hlt
outsb
popf
jns
cmovnp
pop
adc
imul
jnp
adc
lahf
fisttpll
js
sub
push
les
clc
cwtl
adc
push
test
in
stos
xor
dec
scas
or
mov
cs
push
les
divb
test
imul
xor
mov
jb
adc
enter
jl
mov
mov
std
cmp
xor
lret
sub
sti
pop
cmp
inc
dec
cmp
jno
sub
push
fildll
fisttpll
sbb
push
xchg
out
sti
push
in
or
test
push
fwait
or
sbb
jne
or
pop
jmp
outsb
aam
notl
iret
int3
xorb
xchg
je
mov
xorb
add
ds
lret
cld
sbb
or
inc
cmpsl
repnz
fistpll
rcrb
int3
add
mov
sbb
inc
in
add
cmpsl
aad
push
iret
inc
int3
je
adc
in
decb
iret
jmp
imul
push
lds
sbb
cmpsl
aad
sbb
mov
or
dec
andl
test
sbb
inc
repnz
adc
inc
repz
outsb
xchg
or
dec
add
insl
lock
mov
addl
or
push
arpl
inc
sub
mov
or
xchg
into
cmp
push
fildll
adc
sbb
aas
cmp
fstl
or
dec
push
filds
sub
fstpt
ds
jns
push
iret
int3
andb
xchg
mov
sub
lds
dec
negl
aad
xor
adcb
sbb
repz
mov
fidivs
sbb
int
shlb
push
inc
daa
out
sbb
or
sub
gs
cmp
jno
sbb
enter
cmpsb
pop
and
mov
xlat
pop
adc
push
dec
push
shll
lahf
mov
push
or
mov
sub
imul
ficoml
fisttpl
pop
call
loop
inc
jl
pop
rorb
cmpsl
fisubs
nop
test
rorb
mov
and
clc
xorl
aam
sti
push
in
outsb
mov
inc
stc
mov
stos
xlat
pop
dec
clc
imul
or
dec
adc
inc
mull
mov
loop
stos
ss
xor
aam
sahf
out
filds
pop
inc
jecxz
test
adc
inc
mov
xor
push
xor
push
ss
xchg
shlb
and
sbb
bound
pop
mov
in
jl
test
out
popf
jmp
in
popf
out
mov
dec
inc
out
push
loope
es
jnp
adc
lods
aas
adc
adc
movb
cmc
into
andb
sub
or
inc
xchg
inc
mov
mov
clc
sub
cmp
xor
adc
ret
call
lock
xchg
scas
aas
lahf
lret
or
js
or
dec
or
xchg
inc
push
mov
imul
xlat
pop
lods
into
sub
lea
lods
mov
cmp
outsl
sbb
repnz
mov
test
fsubl
push
lret
lea
push
iret
adc
je
popa
ficompl
pushf
jns
scas
iret
jb
xor
lock
push
mov
mov
out
notl
iret
cmp
xor
inc
js
cmpsl
mov
out
mov
xor
cmp
outsl
sbb
repnz
mov
sbb
pusha
push
ljmp
push
sub
fstpt
lret
push
sbbl
ret
dec
jle
and
push
adc
inc
insb
mov
cld
adc
xcrypt-ctr
cmpsl
fdivl
and
dec
xchg
das
out
xor
mov
push
mov
pop
repnz
push
outsb
lcall
adc
das
mov
push
movsb
sub
pop
xchg
mov
repnz
lea
fisttpll
xchg
inc
xor
nop
adc
insb
dec
sbb
repz
and
xchg
out
fbstp
mov
jae
pop
or
xor
push
mov
iret
cs
lods
shll
hlt
stos
and
jle
xor
shll
mov
jno
xor
fbstp
mov
jge
test
mov
cld
mov
sbb
inc
std
dec
xor
mov
mov
sbb
loope
ret
lods
jnp
cmp
fcmovnbe
and
cmp
aad
movsb
xchg
xlat
pusha
icebp
lock
xchg
cwtl
in
int
jne
pusha
sub
or
fldl
pop
ss
data16
insb
xchg
leave
hlt
xchg
std
std
in
inc
pop
cmp
push
std
mov
ds
sbb
and
inc
jne,pn
cmpsb
lods
repz
lea
add
fisubrs
adc
mov
aad
pop
int
cld
jae
aam
nop
popa
push
fisttps
sub
iret
or
rep
xchg
cmp
cwtl
fistpll
fiadds
xlat
inc
mov
arpl
mov
jnp,pn
in
lret
push
sub
cmp
sub
in
insb
add
in
jb
jae
mov
fsts
repz
dec
iret
sbb
pop
cmp
pusha
and
das
stos
pop
movsb
jmp
dec
idivl
sti
rolb
inc
cs
jne
add
in
jne
inc
imul
js
icebp
pusha
clc
or
lahf
dec
popf
leave
icebp
sub
mov
add
leave
stc
frstpm(287
add
popf
dec
loope
sub
xor
xor
aad
inc
imull
cmp
subb
popa
add
push
xor
mul
aam
repnz
pop
mov
mov
dec
icebp
pop
imul
std
xchg
inc
arpl
test
mov
jbe
mov
push
mov
and
push
in
decl
jle
std
add
insl
loope
out
dec
or
ret
lods
fstl
push
mov
imul
call
jecxz
out
insb
cmp
inc
popa
js
xchg
push
mov
mov
add
outsb
scas
push
sarb
aam
xor
movsl
lods
out
rcll
push
fidivrs
inc
and
mov
ret
mov
xchg
sub
xchg
sbb
jecxz
jnp
xchg
add
and
xor
or
pop
dec
jecxz
push
xor
fsub
or
imul
mov
ret
lods
mov
dec
fistps
test
ds
out
sub
in
push
sti
cmp
mov
pop
pushf
lds
lret
cmp
scas
jae
sub
in
addl
icebp
sub
mov
jl
add
sub
mov
mov
mov
add
adc
std
pop
jnp
int3
adc
orb
sahf
push
out
fiadds
xchg
sub
out
xchg
or
imul
mov
fcomip
loope
push
or
aas
jl
push
adc
insb
ja
xchg
lods
fildll
fistpll
clc
jo
mov
adc
mov
mov
xlat
pop
adc
adc
dec
add
pop
sbb
sub
dec
inc
mov
loopne
dec
cld
jo
adc
ret
cmp
sub
iret
lods
pop
jle
cmc
xor
dec
enter
loopne
sahf
inc
int3
or
jge
mov
jno
adcl
mov
cmp
push
fisttps
stos
inc
test
add
cmp
dec
js
popa
push
adc
push
shlb
push
mov
xchg
fidivrs
outsl
mov
test
movsl
push
lds
mov
js
and
mov
xor
mov
or
add
dec
lret
push
or
inc
jns
xor
lret
push
sub
push
fbld
shrl
push
cmp
fcmovnbe
xchg
enter
adc
ss
xor
sbb
repz
push
das
jb
or
outsb
rclb
mov
mov
lds
sub
inc
fbstp
jl
nop
mov
jp
xor
or
jno
or
add
and
imul
repz
xor
sub
mov
cmp
adc
and
pop
cmpsl
mov
cli
inc
mov
rep
lea
and
or
inc
fisubs
hlt
sbb
sbb
dec
or
int
inc
mov
inc
popf
cmpxchg
dec
andb
fistps
inc
jp
jge
dec
sti
jge
dec
jmp
dec
xor
or
fwait
subl
dec
lea
inc
jle
stc
in
push
cmp
outsl
mull
aas
sub
lret
ljmp
adc
jmp
and
inc
ds
fs
lar
mov
or
ja
adc
push
mov
outsb
test
xchg
or
cmp
mov
dec
jle
pushl
aaa
or
xor
sub
or
repz
in
shll
int
lock
jno
xchg
dec
loope
notl
xchg
int3
mov
popa
movsb
xchg
test
lods
xor
jge
and
or
loopne
push
or
adc
dec
fistpll
push
jecxz
cltd
xchg
dec
and
loope
ds
inc
dec
daa
xor
in
mov
mov
mov
pop
imul
cmp
fdiv
jae
rol
aas
fsts
pushf
ret
pop
or
mov
adc
hlt
inc
push
pushf
mov
sub
sti
inc
sti
xor
test
addr16
dec
xchg
lea
and
les
dec
jl
xchg
cmc
or
pop
xchg
or
ss
adc
popa
and
and
jecxz
and
mov
mov
mov
insb
or
mov
dec
fbstp
jl
pop
dec
sti
jae
push
incb
ds
xor
pushf
fbstp
incb
and
mov
fnstenv
dec
mov
imul
mov
clc
arpl
jge
push
sahf
push
push
cmpsb
mov
dec
jae
cltd
jno
shlb
leave
pushf
cmp
insb
xchg
fists
xchg
xor
adc
popa
lock
pop
mov
jmp
addr16
add
or
fwait
imull
mov
mov
in
sbb
cmpsb
movsb
rolb
or
jmp
int3
adc
pushf
inc
adc
cmp
jae
addr16
jle
and
xchg
movsb
push
fists
addr16
lds
in
mov
or
jbe
jge
sub
xor
jl
xor
push
push
or
cmp
fnclex
xchg
in
dec
mov
fisttps
nop
jmp
div
and
mov
adc
cmp
sbb
sub
mov
in
imul
ds
mov
mov
mov
lea
inc
lock
jp
cmp
mov
jg
add
scas
mov
jno
outsl
sti
jl
shrl
cmc
mov
fneni(8087
dec
or
jl
add
sub
cmp
mov
aam
out
inc
shrb
mov
in
loope
mov
cmp
insl
bound
sub
jge
push
jmp
out
outsb
jg
jmp
in
and
dec
mov
jae
in
outsl
pop
mov
mull
jl
lds
push
mov
push
sub
xor
fbstp
add
mov
add
xor
shrb
adc
xchg
dec
aas
in
dec
sti
ret
in
pop
ffreep
out
jge
push
std
jbe
lcall
inc
dec
icebp
mov
das
push
fisttpl
or
push
lret
scas
adc
dec
or
aas
add
dec
fistps
xchg
xchg
pop
jecxz
les
jge
push
add
aas
mov
movsb
lret
mul
xchg
xor
pusha
call
sti
jge
pop
cld
push
xlat
stos
and
cmpsb
inc
xor
cs
push
data16
dec
jae
inc
fists
ljmp
push
std
in
scas
jle
or
sub
dec
push
ret
call
sub
sub
push
jg
xchg
dec
sahf
icebp
movsb
push
xchg
into
fistps
lock
cmp
scas
mov
add
int3
sub
stos
adc
bound
and
mov
addb
dec
push
push
mov
int
adc
adc
cmp
jb
fdivrs
xchg
mov
sub
add
rcrl
jmp
out
sub
dec
inc
data16
add
iret
aas
mov
push
lea
adc
lock
lods
lea
xchg
add
jle
adc
in
dec
in
cmc
mov
push
and
jns
int3
and
adc
or
mov
mov
fstl
dec
insb
or
or
dec
shll
jmp
xchg
fcmovne
mov
adcb
int
jno
adc
in
mov
xor
ja
or
aaa
mov
mov
dec
addl
push
loopne
lret
jmp
mov
sub
addr16
jne
jbe
cmc
or
push
mov
clc
jle
ret
je
adc
dec
xor
stos
icebp
xchg
xchg
movsl
ret
push
adc
pushl
pop
hlt
dec
js
movsb
or
shlb
fsubl
push
fistpll
mov
mov
lret
inc
push
aam
test
rorl
xor
adc
repz
neg
ss
ret
adc
pop
mull
cmp
mov
mov
inc
xchg
mov
in
xlat
sub
push
aam
push
jp
inc
push
lock
dec
into
imul
imul
mov
cwtl
xchg
mov
push
or
and
mov
loopne
ret
js
xor
mov
pop
imull
mov
icebp
iret
cmp
adc
shll
test
sub
xabort
lods
jb
xor
inc
lahf
lods
scas
mov
pop
in
clc
jp
or
sbb
aas
loopne
dec
int
mov
btc
pop
repnz
xchg
pop
mov
mov
into
pop
int
jno
xlat
xor
dec
jecxz,pt
ds
mov
pushf
divb
inc
mov
xor
pop
jge
jbe
adc
dec
es
mov
cmc
frstor
int3
and
iret
scas
nop
pop
jmp
ficoml
or
inc
mov
outsl
stos
out
sbbl
inc
leave
inc
adc
data16
dec
test
mov
or
sub
out
xchg
aaa
jae
cld
fucomi
push
adc
mov
cmp
jecxz
and
xor
pushf
aaa
loop
or
test
into
stos
adc
lret
jae
xor
jns
lock
xchg
xchg
xor
sub
or
in
adc
dec
loope
cmpb
stos
rol
in
lods
xor
add
in
inc
loopne
dec
sub
or
mov
insl
fwait
xor
or
pusha
adc
cmc
mov
iret
pop
jl
decb
or
push
lret
push
sub
lods
cmc
rorl
mov
ret
mov
adc
push
and
loopne
cltd
xor
loope
mov
xchg
lods
es
call
push
lret
adc
xorb
fcom
xchg
pop
xchg
ja
mov
xchg
push
pop
sub
into
mov
push
je
ss
and
cmpsl
xor
rclb
mov
sub
outsb
mov
inc
loop
pop
add
cld
dec
inc
xor
mov
adc
xchg
cmp
cwtl
dec
lea
lods
lods
adc
scas
sbb
loopne
xchg
push
js
jno
push
lods
sbb
in
xchg
in
arpl
fidivrl
push
fisttps
push
fbstp
insl
and
jbe
loopne
or
xchg
cmpsl
mov
pop
dec
push
imull
test
push
sbb
aas
jle
sbb
dec
mov
and
loope
in
std
adc
sub
lea
adcl
scas
jl
cmp
mov
push
mov
fbstp
cld
jge
vorpd
xor
fsubl
ret
adc
xchg
sti
adc
lahf
fists
arpl
jb
mov
mov
cmc
aad
scas
dec
jbe
notl
jp
jb
xchg
push
popf
rorl
jno
mov
cmpsb
and
mov
std
popa
inc
jp
in
clc
adc
mov
push
dec
mov
sbb
jp
sbb
cmp
jge
and
adc
in
fs
imul
iret
lcall
or
subl
sub
mov
push
repz
sub
xchg
mov
mov
addr16
mov
jle
aas
ficomps
adc
jno
push
jle
pop
in
aas
jns
dec
push
popa
or
rcrl
inc
lea
mov
push
push
insb
inc
push
mov
pusha
sub
jecxz
data16
js
or
cmp
inc
mov
cli
jge
enter
pop
cld
mov
mov
xor
in
mov
insb
and
in
or
cmpsl
cmp
or
filds
jo
hlt
jmp
sahf
xor
inc
mov
cltd
adc
jl
hlt
adc
mov
and
sub
ret
negl
mov
and
lods
clc
xchg
out
push
mov
xchg
mov
or
decl
popa
popf
faddp
loop
sarl
jmp
scas
push
out
test
insl
pusha
iret
add
negb
adc
shlb
cmp
cs
jns
lahf
loope
mov
icebp
mov
out
and
xchg
dec
pop
sub
dec
jno
iret
gs
ret
push
sub
and
outsb
jge
movsb
outsb
mov
dec
mov
xor
xor
sub
lcall
inc
jo
adc
mov
or
sub
int
cmc
adc
push
xchg
adcl
inc
test
imull
add
out
xor
xor
xor
jl
stos
andl
xor
pop
je
je
push
or
ds
jge
push
xchg
imul
stos
dec
dec
xor
into
fistps
aaa
mov
dec
frstor
or
adc
mov
push
mov
mov
imull
xchg
adc
xor
push
mov
inc
or
or
xchg
popa
adc
int
inc
cmpsl
shr
fldcw
fwait
dec
add
sub
clc
jae
cmp
test
mov
test
insb
test
addr16
in
mov
fdiv
lea
jae
je
mov
out
std
xchg
fwait
scas
mov
or
sbb
xor
mov
sbb
jbe
mov
leave
bound
clc
cs
adc
fwait
adc
dec
mov
jle
inc
push
insb
scas
insb
cmc
sbb
lods
mov
mov
int
sbb
cmpsl
repnz
adc
scas
hlt
adc
push
push
inc
inc
sbb
fnstsw
aaa
sub
cmp
mov
das
inc
test
jo
dec
pop
add
repz
or
stos
mov
xchg
popa
mov
std
and
in
fst
pusha
clc
jno
or
cli
and
popa
cli
nop
jl
leave
pop
dec
ljmp
mov
push
mov
add
enter
and
jo
and
or
std
mov
inc
iret
movsb
nop
movsb
push
or
push
idivl
test
xor
jmp
inc
mov
cmp
mov
js
and
xor
movsl
fbstp
int
jg
lret
sbb
xor
mov
dec
push
addr16
sbb
or
mov
fisttps
sbb
lret
or
out
test
add
pop
push
insl
and
sahf
outsb
fistpl
cld
jl
xor
xorb
pop
push
sahf
lods
dec
adcb
push
cmp
push
mov
ss
add
push
add
test
jo
lods
cmp
je
jno
fisubrl
inc
mov
loope
push
fisttpl
push
je
mov
mov
mov
sbbl
xchg
jnp
push
mov
inc
ror
and
imul
dec
fstpt
arpl
xor
popa
loopne
js
xor
faddp
adc
jae
adc
loop
mov
or
inc
shl
shlb
ja
outsb
sbbl
mov
lock
inc
in
mov
inc
xchg
and
mov
lret
sti
fnstsw
sub
mov
imul
mov
mov
sub
push
mov
lock
std
xchg
xchg
in
push
stos
mov
mov
aaa
lret
or
dec
aam
orb
push
dec
imul
and
dec
xor
cmp
dec
jne
jmp
cmp
mov
cmp
popf
ret
ja
fdivr
push
mov
negb
mov
push
aaa
push
inc
stos
into
aas
xchg
out
movsb
pop
jg
xor
mov
add
xor
cmp
or
dec
int3
or
xchg
xchg
push
out
adc
mov
vandps
push
mov
xchg
rol
das
int3
gs
roll
rcr
lcall
fistpll
outsl
insb
clc
testl
leave
push
jecxz
dec
in
mov
lea
incl
mov
add
xorl
lret
in
cmp
ret
cmp
pop
iret
cmp
lock
lods
out
inc
dec
pop
leave
xchg
outsb
lock
sub
repnz
jae
ljmp
jmp
dec
sbb
mov
sbb
subl
adc
jnp
into
test
mov
push
loope
xor
mov
outsb
or
adc
mov
lret
daa
std
jae
test
xchg
dec
idiv
add
inc
xchg
mov
psubw
or
mov
or
xchg
mov
xchg
cmp
xchg
testl
lret
cmp
fistps
mov
jmp
pop
mov
mov
mov
movsl
test
and
adc
mov
sbb
or
jo
lods
ret
push
xor
ds
adcb
fbstp
xor
fists
aaa
add
cmc
sahf
dec
loopne
mov
xchg
xchg
lods
inc
test
addr16
and
add
cmp
pushf
mov
ljmp
jecxz
mov
sbb
push
stc
sbb
or
adc
push
fisttpl
dec
adc
dec
aaa
leave
ror
outsl
es
cmp
inc
in
hlt
stos
pop
ljmp
out
lahf
inc
cwtl
push
mov
sarl
push
aaa
ljmp
ljmp
inc
std
and
enter
sahf
mov
mov
xchg
add
std
mov
stos
sbb
in
rolb
sub
cmp
adc
cmp
xchg
or
dec
add
int
mov
jp
cwtl
clc
leave
outsl
cmpl
dec
ret
push
push
jp
mov
cmp
xchg
dec
add
shll
jns
jbe
and
push
fisttpl
xchg
je
lret
push
dec
inc
dec
sbb
arpl
ret
clc
mov
inc
pop
pop
sub
dec
mov
sub
insl
aaa
iret
aaa
adc
jae
adc
repz
sub
stos
rclb
xor
add
fs
repz
mov
lods
push
ss
arpl
inc
int3
dec
cmpl
adc
movsb
stos
into
mov
jle
fwait
add
std
xor
mov
mov
and
inc
mov
push
add
test
push
cld
mov
push
xchg
xchg
xor
repnz
mov
or
mov
lret
mov
sub
mov
mov
insb
mov
sub
push
repz
movl
mov
xchg
jnp
imul
lods
in
pop
cli
cli
adc
or
or
cmp
or
sub
repnz
subl
hlt
mov
lock
and
sub
mov
pop
std
xlat
xchg
into
fbld
jae
mov
nop
jb
pop
mov
dec
mov
mov
xchg
popa
sbb
lea
out
iret
leave
lea
xchg
inc
movsb
adc
ffreep
aad
pop
adc
xor
test
add
shlb
cmc
push
fildll
jb
adc
ret
fs
jae
scas
iret
es
or
mov
cmp
cmpsb
and
dec
push
dec
les
cmp
and
push
cltd
bnd
stos
insb
orb
mov
sub
sub
repz
sbb
pusha
into
loopne
sbb
scas
fistl
pop
sahf
lahf
enter
mov
mov
xchg
rcrb
mov
and
xlat
push
push
je
mov
or
cwtl
lret
or
cmp
push
divl
or
mov
lods
fcomps
hlt
xchg
push
outsl
dec
loopne
pop
xchg
adc
sbb
and
inc
push
or
cmp
ds
cmp
mov
xor
sbb
mov
jo
mov
in
push
iret
int3
std
repz
js
sahf
inc
push
jne
jge
or
ss
ljmp
mov
nop
push
fadds
inc
xor
mov
dec
jle
sti
xchg
push
cltd
in
mov
out
orb
ret
mov
lret
mov
sbb
xchg
in
fisttps
sub
inc
lcall
std
insl
mov
adc
call
clc
in
pop
and
gs
dec
push
mov
lretw
cmp
lea
sbb
and
clc
test
lret
cld
push
inc
aaa
pop
scas
fcmovnu
xchg
jbe
pop
cld
mov
fbstp
lfs
inc
test
xor
lea
ret
lock
push
lret
or
xor
or
test
or
fbstp
sbbb
inc
mov
lods
ja
push
repnz
cld
xchg
imul
test
lds
or
xchg
push
xor
fistps
repnz
rorl
int
insl
mov
imul
dec
cmp
ja
js
aas
mov
push
sbb
std
lea
leave
insb
pop
mov
sub
int
add
mov
pop
or
cmp
out
jge
int
cmp
and
adc
or
adc
adc
scas
adc
mov
pop
cmp
int
sub
or
fsub
stos
fildll
mov
or
pop
sub
dec
fstpt
insl
addl
mov
lret
adc
enter
cmp
lock
dec
jmp
jne
add
push
movsl
push
mov
push
adc
gs
shlb
push
mov
stos
fisttps
shll
xchg
add
pop
insl
pop
jae
adc
lret
inc
adc
lods
xlat
in
add
sub
insl
jge
jae
jl
mov
xor
nop
shll
jmp
xchg
mov
fldcw
or
xchg
mov
cmp
push
xor
pop
addr16
iret
xor
jl
dec
cmp
je
mov
daa
insb
ret
push
gs
xor
data16
int3
mov
out
sti
repnz
daa
jb
dec
aas
or
add
xchg
lret
and
inc
fildll
cmpsl
repz
movsb
outsb
xchg
or
lds
hlt
imul
icebp
mov
lea
push
dec
cld
push
int3
xchg
lret
xchg
cs
daa
adc
int
sti
inc
dec
or
sub
arpl
push
xchg
adc
fistl
adc
sbb
inc
ljmp
cltd
lock
orl
mov
add
jbe
jae
xor
push
addr16
call
lds
mov
sub
out
push
and
or
jmp
push
sarl
push
out
jl
lods
sbb
pop
xor
fs
jge
push
cmp
arpl
aam
jne
arpl
aam
jecxz
push
cmc
push
push
push
lea
jle
repz
repnz
mov
iret
pusha
xchg
pop
ds
and
dec
mov
scas
pop
lods
and
jnp
ds
jns
push
iret
fwait
in
push
mov
out
andl
sub
pop
popa
push
repnz
rclb
cmp
mov
or
andb
insl
and
jns
xor
aaa
stos
pusha
mov
push
sub
addr16
fbstp
cmpb
sbb
bound
aam
lahf
int3
out
or
dec
jmp
xchg
pushf
in
aas
jbe,pn
pop
mov
fildll
sub
cmp
mov
mov
jecxz
mov
add
sahf
sub
adc
fbld
add
xor
pop
and
gs
xchg
fistpll
mov
jae
fmull
mov
cld
ret
and
dec
adc
xchg
fstl
xor
mov
lods
bound
dec
push
dec
ljmp
in
enter
cwtl
loopne
or
jle
sub
push
aad
mov
fucomip
pop
insl
and
mov
in
xchg
jp
rcll
neg
nop
pop
mov
mov
loopne
mov
fisttpl
cmp
cli
dec
mov
imul
pop
or
ret
pusha
cmp
out
scas
fists
test
add
lret
push
loope
push
mov
insl
cmp
xor
inc
push
adc
lret
or
push
or
dec
add
mov
lret
or
popf
sub
xchg
dec
fsub
in
pop
jmp
out
jecxz
and
mov
xchg
add
adc
pop
fadds
or
pop
bound
pop
lock
or
leave
ret
dec
jne
lds
leave
adc
sbb
pop
rorb
push
nop
pop
push
xchg
add
lahf
or
sar
std
lods
inc
decl
push
sahf
sahf
jo
sbb
or
mov
imul
jmp
sbb
sbb
or
sub
jno
cmpb
lret
lret
jecxz
push
or
shlb
sub
jns
mov
sbb
in
js
sub
or
mov
mov
mov
inc
aas
jp
push
lock
push
or
dec
push
mov
lcall
mov
sub
add
push
xchg
std
sbb
or
dec
fldt
mov
inc
stc
pop
out
pop
pop
mov
lods
push
mov
pop
sub
cmp
stc
adc
ficoml
outsl
sahf
imul
arpl
adc
fcompl
iret
sbb
lahf
push
or
dec
ss
or
roll
or
xor
xlat
jbe
or
cltd
xor
pop
mov
in
iret
insb
add
out
sub
sbb
test
adc
jo
pop
push
dec
in
xchg
shr
pop
cmp
mov
or
adc
jge
jg
loope
push
pop
jne
pop
mov
push
das
stc
adc
or
mov
leave
insl
mov
adc
clc
scas
and
mov
add
sbb
mov
clc
inc
jnp
adc
mov
dec
loop
mov
int3
inc
stc
sbb
sbb
mov
jbe
in
stc
xchg
jl
out
lods
out
bnd
adc
jae
push
out
sub
sub
es
nop
fs
pop
pop
call
xchg
rcrl
movsl
cmp
push
jns
mov
divl
sti
push
enter
test
xor
dec
adcb
sub
cs
mov
enter
in
test
rcr
mov
push
sbb
dec
push
lahf
adc
sbb
mov
arpl
push
pop
arpl
stos
test
or
cwtl
push
add
dec
xchg
arpl
cmpsb
lahf
in
add
shll
es
adc
stc
data16
test
repz
sub
aas
mov
or
ss
mov
data16
mov
mov
cmp
test
xlat
aas
ja
inc
cltd
int
icebp
lock
push
or
fcompl
in
iret
int3
add
repz
mov
dec
push
mov
stos
leave
pop
movsl
mov
das
je
lea
loop
cli
add
mov
push
mov
jecxz
mov
shrl
shrb
sub
mov
xor
rcr
cli
in
pop
and
aad
sub
add
pop
mov
jmp
jae
xchg
add
jecxz
mov
insl
scas
testb
jo
inc
clc
stos
jecxz
ljmp
mov
or
mov
gs
jno
sub
aas
es
popf
adc
push
sbb
mov
lods
add
int
sub
xchg
mov
cld
pop
mov
out
fs
repz
xchg
das
xchg
pop
scas
cmpsb
sub
hlt
mov
or
and
mov
xor
pusha
cli
dec
adc
sbb
mov
hlt
xor
cmp
shlb
pop
fs
add
xchg
add
out
cld
leave
xlat
jnp
adc
stos
dec
mov
lock
mov
out
ud1
jl
sub
lret
xchg
fmul
out
sub
stc
xor
ds
lea
daa
cwtl
addb
mov
sarb
jno
mov
or
jns
cld
mov
insb
jge
ret
dec
test
shrb
into
int3
jae
lock
fnstcw
clc
inc
add
nop
sub
dec
dec
jne
lods
or
xorb
loopne
in
mov
pop
jl
js
mov
icebp
cs
popa
lret
cmpb
out
mov
add
push
or
cli
sbb
in
mov
xchg
or
inc
mov
mov
add
fdivl
sub
jb
fdivrl
jmp
push
adc
pop
mov
push
out
repnz
insb
lret
daa
pushf
das
ja
pop
xorb
movsb
in
mov
dec
sub
mov
xor
bnd
lods
shlb
jo
shrl
sub
xchg
fucomi
shrb
lea
stos
jno
mov
cmpsl
xchg
sub
cli
lds
lea
jnp
xlat
jmp
xchg
hlt
ja
shll
jmp
jecxz
push
rol
shl
loopne
cmp
mov
fnsave
and
aam
jo
test
clc
mov
cs
ljmp
divl
out
push
mov
pusha
sub
jne
inc
out
add
sub
cmp
dec
jne
xor
jl
data16
sub
or
movsl
push
shlb
add
leave
in
jne
call
jb
out
dec
push
popa
in
or
fildl
nop
push
in
outsl
das
popf
in
push
insl
add
repnz
mov
test
test
fnsave
xchg
or
cs
ja
mov
mov
loopne
xor
int
js,pn
test
popa
loop
test
stos
ret
ss
pusha
add
roll
push
ja
push
mov
insl
in
xchg
lret
inc
jae
cltd
lods
test
gs
push
xor
fiadds
lods
add
add
add
add
leave
shl
leave
std
gs
out
adc
and
lret
scas
adc
inc
cli
cltd
leave
push
xor
jecxz
push
jle
shlb
orl
jo
adc
xchg
cli
outsb
fstpl
jge
ja
movsb
mov
mov
mov
gs
mov
sub
jne
inc
repnz
push
xor
push
cmp
mov
sbb
lahf
mov
dec
jb
add
sub
imul
int
orb
jge
outsb
testb
push
outsl
xor
imul
jp
cmp
ss
ds
fs
hlt
call
hlt
xlat
sbb
scas
xor
inc
int
std
lea
inc
adcl
dec
mov
and
fldcw
test
cmp
and
movsl
and
add
push
subl
dec
xchg
je
les
lock
jle
mov
mov
push
andb
pop
pushf
mov
bound
std
xor
sahf
sbb
sbb
jae
aam
and
xor
in
mov
adc
vsqrtsd
icebp
mov
push
dec
jl
aaa
sub
sub
ret
xchg
roll
xchg
push
mov
pop
xchg
cmp
jno
and
mov
or
or
lea
mov
je
lea
jge
ret
test
dec
inc
subb
jmp
mov
insb
mov
out
fxch
ret
jne
dec
push
daa
xor
adc
shll
jp
dec
sti
jge
or
add
pop
aaa
popa
sub
jo
add
mov
fists
cmc
mov
repz
cmpsl
repz
jae
icebp
out
and
sub
jecxz
inc
cmc
mov
xchg
movsl
fdivrs
cli
lret
or
andl
sub
sub
push
lock
pushf
cs
shlb
lds
hlt
in
aas
jle
rcrb
add
lret
rclb
or
test
dec
lcall
jb
lret
imull
mov
sbb
xchg
fld
mov
adc
xor
or
add
idiv
sub
loop
xor
jg
pop
notb
scas
test
xchg
jno
sub
pop
es
push
sub
jb
mov
pop
sub
or
cmp
outsl
xchg
popf
pushf
push
ja
and
mov
insl
mov
or
hlt
add
fildll
dec
jmp
loope
xchg
cmp
mov
sub
jns
test
dec
int3
std
jae
mov
sbb
clc
or
xchg
not
jmp
push
add
xchg
mov
int
fxch
outsb
filds
cmp
mov
mov
adc
imul
dec
xchg
jbe
jne
das
iret
sbb
test
xchg
cwtl
dec
xor
jb
repz
aam
lock
int3
and
ret
mov
mov
lret
jne
insb
dec
push
out
sbb
in
mov
arpl
ja
jg
add
mov
sub
fmull
rcll
popa
and
or
push
jb
gs
jo
mov
mov
sub
icebp
rorb
or
in
dec
cmc
adc
push
adc
lock
fwait
daa
mov
ret
mov
mov
loopne
mov
call
jle
in
into
and
sti
ret
sbb
mov
inc
or
dec
std
hlt
fnsave
popa
mov
loopne
xor
xor
or
stos
and
ljmp
xchg
push
shlb
test
adc
push
insb
scas
icebp
sahf
ret
repnz
add
jb
setp
jae
insl
sahf
add
push
dec
xchg
cmp
fstl
add
test
sub
sbb
sbb
mov
dec
jno
ficoms
xchg
imull
bound
sub
and
lods
pop
arpl
pop
popa
mov
push
dec
and
in
mov
jl
loopne
outsl
adc
sub
and
jo
sbb
sarb
das
fisttps
fldcw
pop
dec
mov
arpl
pop
jmp
add
or
xchg
mov
mov
stos
psubsb
sub
and
in
adc
cmp
jbe
fwait
clc
jae
sub
in
ss
mov
repz
jnp
pushf
outsb
xchg
push
lods
add
mov
or
negl
mov
rol
test
mov
and
cmp
or
shl
or
stc
shlb
repnz
int3
xchg
xchg
cmp
add
lea
lret
scas
mov
addr16
insl
stc
rcr
jmp
fwait
xchg
mov
push
sub
adc
sbb
and
in
dec
add
pop
push
push
add
dec
jecxz
cmc
push
mov
aas
pop
cwtl
mov
cmc
mov
sbb
sbb
clc
jo
test
jmp
bound
push
push
push
jl
cmpxchg
les
adc
call
add
stos
arpl
in
out
movsl
adc
decl
add
popa
mov
lea
or
xlat
decb
xor
and
cmc
push
nop
jae
stos
mov
mov
mov
je
push
lea
pushf
push
sub
sarl
cmp
icebp
subl
aad
and
push
xchg
xchg
in
hlt
xor
divl
jge
loop
mov
pop
mov
icebp
xor
xchg
pusha
sbb
mov
dec
sti
cmp
pop
pop
stc
rorl
popf
aad
mov
mov
stos
adc
and
and
fldt
shrl
mov
dec
sub
sbb
mov
push
ror
out
mov
int
and
clc
fwait
jo
xchg
push
dec
mov
daa
in
pushw
dec
dec
lds
mov
mov
gs
dec
movsl
mov
mov
jmp
push
jnp
or
xchg
div
movsb
and
xchg
jno
push
scas
mov
pusha
shrl
jo
cwtl
and
and
sub
mov
inc
int3
jo
data16
loope
arpl
push
pop
pusha
cmc
jae
xchg
js
cmp
insb
mov
xor
jo
push
aaa
fdivrs
scas
in
leave
xchg
mov
ret
dec
aaa
je
cs
lods
rorb
jne
inc
lret
sub
lods
sub
pushf
dec
cmc
mov
lret
fcmovb
mov
or
sub
xor
adc
mov
iret
cmp
and
or
movq
mov
ror
jno
test
mov
aaa
push
and
test
ret
je
sub
xlat
rcrl
or
sub
jge
mov
mov
hlt
test
cmp
popa
xchg
cmc
fists
pop
int3
jo
inc
xor
jle
xorl
mov
das
cmc
and
or
std
int3
xchg
ljmp
cwtl
push
test
in
mov
lods
and
jmp
jae
sti
pop
sbb
cli
pop
popa
std
mov
sbb
mov
xchg
adc
sahf
pop
jge
jbe
pop
mov
popa
stos
lods
in
and
cmp
mov
push
jbe,pn
mov
insb
push
push
lds
mov
mov
push
or
cmpl
lods
aaa
aas
mov
std
xchg
rorb
dec
sub
xor
push
dec
ss
mov
cmpsl
das
int
add
in
stos
pop
and
push
out
stos
addr16
into
fstpl
int3
repnz
lahf
addl
xlat
jmp
rcl
popa
xor
aad
push
or
sbb
icebp
in
int3
sbb
outsb
pop
rcll
mov
aas
xor
pusha
mov
mov
dec
insl
or
xor
mov
dec
movsl
sbb
mov
and
inc
fldl
rcrb
mov
fstpt
or
jae
scas
aaa
or
dec
test
mov
dec
shlb
cmc
or
fisttps
std
dec
mov
xchg
jne,pn
ret
shll
pop
lock
lds
inc
mov
xchg
sbb
push
out
in
scas
jecxz
xor
mov
les
stos
mov
ret
repz
loopew
cmp
mov
mov
mov
shl
mov
repnz
xor
pop
xor
jle
adc
cli
out
icebp
nop
mov
inc
outsl
dec
fildl
push
fwait
inc
dec
add
js
sub
test
xor
outsl
mov
out
sbb
xlat
sub
sti
outsl
or
cmp
repz
pushf
sub
mov
ja
leave
dec
mov
lods
dec
mov
mov
jl
ds
roll
inc
cmp
test
lock
cmpsl
xchg
in
clc
popa
inc
insl
jmp
int3
inc
nop
sbb
xor
js
mov
testb
push
cld
je
jle
out
popa
and
pop
ret
push
jp
mov
mov
add
pop
jne
dec
sub
shll
cmp
lret
push
mov
mov
mov
xchg
xchg
push
add
sub
mov
push
ljmp
xchg
push
jmp
icebp
cmp
add
xor
test
ds
mov
mov
mov
adc
mov
lret
sub
mov
add
push
pop
mov
add
xchg
sahf
xchg
xchg
mov
xchg
js
out
lea
dec
cmpsl
popf
and
int3
js
nop
das
lock
xor
mov
cmpsb
shl
and
imul
sbb
mov
lock
popa
jne
int3
paddw
mov
or
shrb
imul
push
mov
nop
mov
out
sub
mov
push
test
fs
pusha
sub
sub
inc
shrl
mov
insl
xor
jae
xchg
sbb
jge
inc
mov
xor
scas
imul
inc
sub
subb
out
aaa
outsl
jmp
inc
shlb
jge
out
loope
lcall
inc
hlt
add
adc
mov
jo
mul
insb
lahf
dec
xor
adc
imul
and
or
js
repz
stc
sub
xchg
cmp
jo
mov
push
aam
scas
ja
mov
mov
xor
xchg
cmp
xchg
jmp
dec
pop
inc
cmp
stos
and
shl
outsl
movsb
and
or
js
dec
jbe
cmp
mov
inc
lcall
in
repnz
push
and
dec
jmp
cmp
and
sbb
int
lea
in
cs
adc
or
ss
mov
mov
in
insb
jle
xor
in
ljmp
push
ss
or
add
subl
test
lret
dec
mov
aam
fbstp
icebp
into
out
rorl
js
in
insb
sbb
jecxz
pop
mov
mov
outsl
pop
push
ret
xchg
sub
inc
jle
inc
cmp
sub
push
sbb
outsl
popa
pushf
insl
add
mov
xor
neg
lret
sbb
imul
cmpsl
cld
adc
cmp
dec
and
test
mov
mov
lds
mov
jecxz
mov
nop
adcl
pusha
lret
mov
mov
sbb
sub
sahf
mov
or
daa
xor
shl
lock
repnz
or
sbb
cmp
imul
push
gs
jne
mov
test
dec
into
jp
push
inc
and
xor
jnp
fisubrl
repz
jne
xor
mov
cmp
push
lds
mov
arpl
mov
lods
ds
aas
in
jo
nop
cmp
xor
jle
jno
popl
lea
add
jecxz
mov
ss
xchg
jbe
je
xlat
and
cmp
jo
pop
dec
inc
out
jl
ja
xchg
jae
add
loope
xchg
sub
shlb
push
mov
gs
pop
arpl
rol
ret
jnp
jno
pop
sub
cmp
push
imul
shr
repnz
popf
hlt
adc
ds
or
rep
ret
popf
mov
call
cmp
aaa
fildll
decb
inc
in
gs
xor
cwtl
add
push
lds
sti
fisubrs
pushf
sahf
fimuls
lock
or
and
xor
stos
sbb
ss
push
cmpl
sahf
xchg
out
jl
push
or
sub
cmpb
push
jo
stos
inc
js
scas
sbb
mov
push
gs
mov
enter
arpl
pop
repz
adc
mov
out
addr16
lods
mov
divb
mov
sub
ret
mov
jmp
out
cmp
stos
in
icebp
add
das
sub
cmp
pop
in
add
lret
fildl
and
fcoml
insb
mov
jbe
repnz
jmp
mov
bound
notb
in
icebp
pop
imul
iret
lock
lods
mov
inc
jb
cmp
mov
xor
push
std
and
dec
mov
xchg
jge
add
idivb
stos
jg
fildl
jbe
xorb
xchg
movsl
adc
jae
sub
xchg
movsl
mov
adc
mov
inc
sub
mov
add
aas
mov
test
mov
push
or
xchg
inc
xchg
mov
sub
fildl
push
in
std
pop
xchg
imul
mov
push
jb
pop
push
lods
mov
mov
pop
fcoml
fsubs
cmpl
pusha
stos
sti
lret
scas
into
je
push
mov
enter
dec
push
pop
mov
pop
mov
out
outsl
jo
mov
in
add
not
mov
pusha
cmp
mov
shrl
rorl
xchg
aaa
mov
test
and
cmp
aas
popl
les
xchg
jne
dec
pop
adc
pop
adc
rolb
stos
cwtl
scas
addr16
pop
outsb
mov
lret
ficompl
mov
mov
sbb
bound
push
push
jmp
jl
loopne
pushf
jo
or
in
pushf
inc
push
ljmp
mov
mov
add
xchg
jns
hlt
rcrl
in
push
mov
xchg
inc
into
pop
aad
mov
xor
dec
fisttps
inc
push
lods
icebp
es
cld
fwait
xchg
out
inc
pop
fistpl
addr16
sbb
repz
pop
ja
popa
imul
mov
es
cwtl
push
orb
lret
push
add
cmovle
or
dec
dec
int
dec
and
adc
enter
or
stc
fisttpll
dec
rorb
dec
pop
enter
sbb
mov
push
shll
push
mov
lret
dec
lds
into
adc
xchg
jnp
inc
iret
sbb
mov
cmc
insl
frstor
out
mov
dec
push
cwtl
or
es
das
cmpsb
sti
jmp
dec
mov
rcl
sbb
cmp
inc
pushf
pop
push
lcall
popf
and
push
mov
mov
pushf
sahf
pop
fwait
sub
push
xchg
xor
pop
xchg
fs
and
jno
mov
or
movsl
jb
sbb
xchg
daa
sbb
jg
pop
cmp
pop
test
cli
lock
or
in
test
mov
xchg
cmp
jae
test
lret
mov
pop
mov
out
jbe
enter
inc
pop
inc
cltd
in
pop
movsl
xor
ss
mov
idivl
mov
popa
aad
popf
pop
dec
push
popf
push
iret
jge
dec
fcmove
lahf
ficomps
test
notb
adc
gs
or
add
adc
dec
mov
lds
iret
js
xor
dec
fdivrs
jecxz
lret
sbb
or
pop
stos
cmp
ss
xor
and
sub
sbb
sub
test
sbb
add
inc
sbb
sub
jbe
or
sub
into
sbb
shll
jns
and
push
sbb
add
iret
jge
lahf
push
jge
jmp
push
xchg
inc
stos
or
xchg
lret
push
xchg
scas
pop
mov
mov
cwtl
mov
sbb
inc
mov
dec
xchg
mov
and
pop
and
mov
xchg
loope
fs
pop
fs
sahf
mov
fs
pop
adc
iret
and
in
and
xor
dec
data16
js
mov
pop
out
sbb
bound
push
sti
ret
jecxz
jnp
insb
mov
rorb
insb
mov
stos
aam
pop
test
sub
pop
fldl2t
lahf
pop
push
imul
sbb
das
xchg
xor
dec
xor
mov
mov
mov
inc
lea
xor
push
xlat
xchg
mov
push
jmp
testb
push
clc
enter
xor
fwait
inc
xchg
pushf
dec
fisttpl
or
lret
add
fsubr
mov
test
adc
jns
mov
push
inc
mov
jmp
add
popa
and
test
xor
xlat
mov
stc
repnz
sub
fld1
xchg
add
fiaddl
fstps
js
jns
push
fmuls
jecxz
gs
mov
enter
mov
mov
int
jecxz
add
sbb
cmp
aaa
and
inc
add
les
test
clc
jg
xor
imul
sbb
mov
rcll
pop
out
jo
push
and
dec
lods
int3
push
inc
mov
cltd
ret
inc
push
aas
stos
ja
jp
je
xchg
inc
rclb
push
xchg
out
int
adc
pop
xchg
mov
mov
push
cmp
jl
ljmp
xchg
lea
mov
mov
cmp
pop
add
xlat
jl
lea
cmp
inc
pop
popa
div
out
int3
aas
test
push
adc
adc
test
shl
bound
xchg
lret
add
pop
bound
cmpsb
fs
shll
add
mov
inc
dec
pop
into
notl
jmp
mov
or
out
dec
cmc
push
mov
pop
fdiv
pop
mov
popa
xor
pop
js
and
push
mov
aaa
ljmp
nop
push
sub
cmp
loopne
jbe
dec
mov
or
xor
mov
cld
dec
mulb
xlat
and
cs
cld
repz
mov
aas
out
adc
mov
pop
xlat
cwtl
out
test
dec
add
jbe
add
sbb
loopne
fisttpll
jo
sbb
sbb
cmc
cmp
imul
push
jmp
xchg
mov
xchg
out
fsubs
mov
fiaddl
cltd
xor
cmp
fcmovnu
xchg
outsl
pop
fs
test
add
push
xorb
pop
cltd
ret
fildl
popa
shr
loopne
mov
in
test
scas
jp
cmp
or
lcall
pop
imul
cltd
out
jmp
mov
mov
mov
repnz
outsl
lods
dec
test
push
outsl
cmp
rolb
pop
ficoml
lahf
xchg
inc
pop
movsl
mov
cltd
adc
mov
or
fimull
dec
int3
ficomps
mov
aas
inc
cmc
nop
pop
ja
inc
cmpl
dec
cmp
lods
sbb
out
fmull
sbb
fnstsw
js
cmp
mov
je
idivl
test
cmc
int3
mov
aas
roll
add
push
add
add
push
add
roll
add
add
add
add
add
add
add
add
add
roll
add
add
add
roll
add
add
add
addb
add
in
rolb
add
rolb
add
rolb
add
push
add
push
add
push
add
roll
add
push
add
roll
add
push
add
roll
add
push
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
mov
or
fisubl
out
inc
push
xchg
inc
pop
add
loopne
andl
adc
inc
shlb
xchg
dec
adc
pop
rcrl
sbb
xchg
and
add
mov
mov
and
and
dec
dec
adc
mov
xor
shrl
adc
or
jno
das
cmpsb
cmp
adc
sub
sahf
loopne
lret
mov
mov
jo
bound
push
add
push
pop
cltd
gs
add
stos
test
cmp
test
jns
inc
inc
mov
jo
inc
xchg
aaa
int3
inc
sbb
test
push
mov
mov
sub
or
push
jp
add
cwtl
mov
adc
jmp
repnz
out
cwtl
jns
mov
pop
test
jb
dec
lock
les
das
or
cmp
int3
jns
mov
or
lods
push
push
bound
push
outsb
adc
add
adc
dec
add
add
add
pop
test
imul
xorb
dec
add
in
xor
hlt
fnstsw
dec
add
test
in
cmp
pop
add
jl
sbb
or
ret
ficomps
mov
mov
aam
orb
mov
sub
lds
out
nop
cmp
repnz
sub
xor
loopne
lods
mov
and
inc
call
test
fst
fsubrp
xchg
adcl
mov
cmpsl
pop
sarb
xor
pop
syscall
movsl
mov
test
inc
std
rorb
adc
mov
aaa
xlat
sub
and
push
add
cmp
adc
ss
in
adc
inc
fdivrl
add
popa
popf
pop
cmpsl
adc
cmpb
push
fistpl
push
pusha
add
jmp
push
and
inc
and
or
and
push
lock
xor
or
or
jo
out
mov
aas
add
xor
fcomps
sbb
sub
or
nop
movsl
and
shlb
add
dec
fdiv
lcall
add
shl
push
mov
scas
xor
enter
mov
push
mov
adc
dec
cmpb
and
aam
inc
pop
hlt
mov
or
cmpsl
pusha
mov
sarl
test
scas
jns
lcall
jb
lea
pop
or
xchg
ret
sbb
jle
and
shrb
or
or
sub
adc
adc
xchg
and
and
test
inc
pop
inc
inc
pusha
inc
fs
xor
pop
jo
inc
js
fs
jl
dec
jle
cmp
add
orl
addb
out
and
test
cmp
mov
shlb
or
push
cmpsl
and
and
xor
sub
mov
push
or
mov
aad
sub
inc
adc
xchg
dec
and
icebp
loope
and
into
sar
push
sarb
xchg
adc
sub
push
in
in
adc
ljmp
jns
mov
nop
testb
pop
mov
aas
or
inc
add
and
inc
add
sbb
out
in
aaa
or
dec
mov
popa
ds
inc
adc
mov
or
sbb
sbb
xor
push
dec
sub
sahf
add
adc
pop
or
cmp
xchg
ss
int3
push
add
adc
lahf
cmp
add
sbb
out
ja,pt
dec
pextrw
cmp
fimull
test
stos
adc
xchg
and
sub
roll
xchg
pop
or
adc
pop
inc
in
mov
mov
mov
mov
add
arpl
and
ljmp
adc
adc
aaa
adc
sbb
adc
sub
cmp
insb
pop
add
bound
lds
lcall
jo
js
adc
je
cmp
ds
mov
push
inc
jle
inc
orb
inc
movsl
cmp
aaa
inc
test
mov
or
enter
cwtl
leave
enter
int3
sbb
or
enter
pop
jmp
clc
or
cli
or
test
int
jnp
or
mov
lret
mov
or
or
adc
and
adc
adc
aas
push
adc
sbb
add
push
sbb
outsb
and
outsl
and
out
and
data16
int
add
je
add
add
loopne
dec
enter
rcrb
or
sbb
add
jnp
sbb
push
jb
and
inc
mov
inc
call
jno
loopne
mov
push
or
cmp
pop
or
xor
cli
push
imul
mov
test
add
or
push
ljmp
repnz
xor
sub
add
mov
or
popf
add
lahf
add
movsb
add
test
and
mov
cmp
ja
or
cmpsb
xlat
or
aas
add
add
add
jg
pop
inc
rcrb
inc
aas
xor
in
xor
sub
mov
or
adc
ja
mov
int
repnz
into
mov
cwtl
add
pop
xor
lods
outsb
stc
jb
outsl
add
jns
push
mov
xchg
daa
or
push
cmpsb
movsl
sahf
mov
adc
popf
push
mov
adc
fstpt
add
pop
int
and
leave
add
mov
pop
add
jb
push
jae
push
je
cmp
pop
movb
sbb
mov
xchg
roll
and
pop
add
cmc
mov
pushf
cmp
in
dec
loopne
pop
xor
dec
nop
lret
or
xor
out
lods
or
add
cmp
call
orb
jbe
add
xchg
aas
testl
loope
inc
jne
inc
jp
jl
punpckhwd
add
add
lea
stc
adc
lret
in
adc
adc
sahf
inc
call
mov
mov
xor
inc
movl
jmp
ret
pop
cli
add
add
mov
mov
xchg
sahf
and
adc
adc
mov
push
inc
sbb
inc
sbb
sbb
inc
and
fildl
fadds
adc
xor
or
jbe
or
ja
sub
mov
enter
loope
or
ret
fld
sub
sbbb
adc
add
cmpl
mov
cmpsl
xor
push
pusha
push
sahf
test
ret
sbb
out
adc
je
and
inc
jge
mov
add
sub
xchg
cmpsb
adc
stc
and
dec
adc
xchg
andb
inc
lret
or
mov
adc
push
loopne
aad
dec
xchg
mov
inc
adc
repnz
and
jo
aaa
test
mov
orb
pusha
push
adc
inc
fcoml
or
in
orl
add
and
inc
sahf
dec
push
mov
das
ja
or
add
aam
fisttps
out
add
mov
mov
cmp
pop
cld
add
fidivrs
lds
mov
js
sub
aam
adc
jae
cmp
cs
add
add
xor
add
cmc
mov
sub
fmull
gs
add
xchg
sbb
jmp
ljmp
stc
or
add
repz
sbb
scas
in
mov
hlt
fs
mov
iret
add
or
cs
nop
push
xchg
iret
adc
and
cmpsb
test
add
xchg
pop
rcrb
sub
lods
cmp
xchg
sbb
fwait
pop
and
push
and
ja
adc
push
out
add
or
adc
push
xor
daa
fnstcw
add
repnz
add
aaa
jle
or
cmp
addb
add
inc
pushl
mov
pop
jns
adc
lods
addl
es
jbe
movsb
dec
daa
cmp
add
add
nop
fiadds
imull
mov
push
mov
mov
inc
out
mov
dec
mov
les
das
testl
scas
cmp
add
mov
out
pop
icebp
ficompl
jo
and
inc
xor
xchg
push
movb
jnp
scas
mov
andl
jo
push
push
push
pop
mov
push
mov
add
out
sti
lret
adc
xor
fsts
or
dec
fsubl
loopne
lret
push
rclb
psubq
mov
sbb
sbb
cwtl
mov
push
pushf
mov
mov
lahf
fildl
or
pop
test
adc
nop
and
nop
add
mov
enter
lcall
insl
mov
lcall
popf
daa
or
cmc
imul
jge
mov
push
fldenv
push
add
lea
gs
dec
xor
pop
shll
enter
xorb
sbb
dec
mov
lahf
data16
fldenv
arpl
and
test
xchg
sahf
mov
sub
or
add
movsl
sub
sbb
loopne
leave
xor
or
adc
push
lods
jmp
js
ret
imul
daa
xor
movsb
movsl
mov
lock
pop
stos
or
enter
add
cmp
add
lock
lods
cmpsl
aas
add
add
and
ds
in
test
cwtl
xchg
xor
jnp
cmpsl
push
or
stc
xor
pop
xor
xor
ror
ret
loope
or
test
icebp
mov
add
mov
mov
ret
mov
xor
cwtl
pop
xor
aas
sbb
lret
inc
loope
sbbb
insl
adc
adc
dec
enter
dec
daa
int3
or
jmp
or
int3
incb
dec
mov
push
int3
enter
inc
adc
push
jns
cmp
jbe
aam
and
inc
sti
and
mov
cmp
es
adc
or
xchg
sbb
xor
pop
repnz
int3
hlt
lea
leave
dec
sbb
jg
dec
xorl
andb
adc
adc
dec
mov
cmp
push
cmp
and
add
mov
xchg
inc
jo
gs
add
add
jne
in
mov
inc
clc
jmp
mov
or
sub
cmp
ds
xor
out
add
aad
add
pop
movsb
inc
mov
cwtl
or
lea
mov
and
loop
test
daa
lock
dec
inc
enter
jbe
fisubrl
adcb
pop
add
pop
jns
inc
xlat
sbb
lock
test
inc
mov
dec
add
cmpsl
dec
add
or
cld
dec
adcb
push
jo
fisttpl
push
dec
xchg
or
out
lea
mov
outsl
or
mov
leave
mov
sbb
inc
cmp
repnz
out
dec
scas
stos
sbb
lret
loop
test
inc
xchg
lea
push
or
mov
mov
scas
inc
cmc
cwtl
imul
cld
testb
push
or
add
stos
js
push
out
add
mov
imul
sub
cmp
ljmp
xchg
push
add
sub
xchg
les
flds
out
or
push
dec
pop
insb
add
sub
sub
movsb
fbstp
in
or
aas
sub
dec
test
jnp
and
pusha
cmp
xor
stos
add
je
aaa
repnz
lods
xor
cmp
add
sarb
mov
add
push
inc
daa
push
pop
pop
add
mov
xor
fidivl
div
sub
ljmp
stc
dec
pop
mov
xorb
std
sbb
push
push
shlb
inc
xor
stc
sub
mov
sbb
adc
or
add
mov
sub
int
and
and
cwtl
and
cltd
je
mov
add
xchg
or
jns
clc
inc
xchg
push
mov
out
inc
push
icebp
fwait
inc
or
add
loope
mov
xchg
sub
mov
push
movsl
mov
pop
adc
xchg
lds
sbb
mov
sbb
dec
jl
and
and
mov
pop
lcall
push
jecxz
mov
push
inc
xor
add
lret
mov
imulb
jle
out
gs
mov
and
inc
add
mov
and
pop
jp
dec
aaa
xor
or
aaa
ret
adc
and
mov
add
out
push
cltd
adc
inc
xchg
in
add
mov
dec
iret
cmp
add
mov
cmp
lock
adc
cli
lods
dec
idiv
int
adcl
pop
loop
mov
lea
add
incl
rolb
jo
rolb
leave
stos
in
jmp
les
into
call
jo
jmp
popa
push
push
pop
pop
movswl
and
add
jge
es
cmp
push
out
push
inc
adc
sub
call
shll
cmp
cli
orl
orb
stos
add
mov
inc
sbb
fcoms
mov
sarb
cwtl
stc
xor
enter
rol
test
push
pop
add
out
shlb
inc
addr16
adc
mov
mov
xor
jae
inc
dec
inc
mov
inc
add
aam
int
add
jns
fisubrl
fimuls
pusha
sub
out
sbb
cmp
xor
jns
enter
jmp
mov
dec
fwait
dec
sbb
pop
push
lds
int3
stos
cwtl
std
enter
enter
incl
into
fwait
daa
push
push
fxsave
dec
mov
bswap
mov
incb
shrb
shr
std
and
aam
dec
mov
xor
pop
pop
test
or
call
add
insb
sbb
mov
add
rol
loopne
dec
mov
and
fs
mov
addl
mov
inc
add
in
adc
lea
inc
push
loopne
sarl
icebp
popa
mov
xor
cmp
aad
sub
or
add
or
rcrb
fbld
inc
dec
neg
dec
shll
and
mov
pusha
arpl
shll
dec
xchg
ja
xchg
jb
sub
cmp
cmpsb
lahf
or
add
xor
xchg
push
orb
fs
xchg
in
add
jno
and
pop
add
pop
push
shrb
add
inc
cwtl
test
pop
pop
stos
les
cmp
sub
iret
les
arpl
push
sbb
adc
cwtl
and
and
push
pusha
sbb
call
or
not
dec
xchg
js
dec
jmp
outsl
cli
fidivl
adc
scas
or
or
ret
inc
es
mov
nop
ret
std
xor
iret
nop
pop
or
mov
fstpl
xorl
add
jg
sub
jmp
inc
popaw
add
outsl
jmp
push
js
dec
jp
add
mov
pop
pop
or
out
sub
add
xor
inc
and
or
sbb
inc
add
pop
inc
mov
xchg
sarl
lahf
pusha
and
inc
stos
ljmp
inc
sub
mov
into
outsb
gs
out
dec
in
dec
cld
inc
mov
mov
test
dec
test
mov
leave
pop
push
lret
inc
pop
or
add
stos
adc
mov
or
dec
mov
aaa
sahf
jle
xor
clc
cmp
ja
not
imul
jnp
pushf
mov
push
and
push
add
and
dec
fimuls
and
loop
sbb
dec
cs
into
jle
jecxz
inc
xor
push
xchg
in
leave
mov
cmp
dec
mov
fimull
mov
fnstsw
mov
popf
or
fidivs
add
mov
test
xlat
cmp
inc
pop
dec
testl
rorl
xchg
mov
sbb
out
adc
push
xchg
add
fbld
in
addl
mov
push
inc
sub
or
andl
loopne
sub
mov
mov
lods
popa
mov
hlt
pop
push
pop
pop
add
fnstsw
add
popa
pusha
out
lahf
adc
add
movsl
lret
inc
fmuls
cmp
fidivrl
fisttpl
pop
pop
dec
mov
testb
icebp
movsb
sub
jl
add
jmp
je
push
repnz
mov
add
xor
repnz
sub
orl
repnz
add
jl
pop
xchg
not
mov
push
out
nop
jns
inc
ret
cmp
pop
test
add
ljmp
xor
int3
and
or
inc
daa
loop
inc
push
cmp
movsl
push
cmp
mov
test
das
mov
ds
push
frstor
mov
jge
xor
bound
mov
popf
add
add
testb
enter
dec
adc
in
daa
jne
fcoml
push
pop
pop
inc
inc
sbb
xchg
add
inc
mov
je
dec
test
jmp
pop
dec
sbb
test
cltd
sbb
sub
add
int
ljmp
lret
xor
xor
hlt
je
add
jb
cmpsl
sahf
push
pop
into
xchg
add
add
sub
push
pop
xbegin
cmc
loope
call
and
imul
mov
cmpb
loop
mov
mov
lahf
adc
or
dec
daa
orl
push
adc
ret
shll
xchg
and
imul
or
les
adc
not
add
test
pusha
mov
fcompl
in
sub
jmp
jl
inc
in
push
add
fistps
lea
repz
test
push
stos
rclb
sub
jne
push
add
punpcklbw
xchg
push
bound
repnz
not
xchg
fmulp
pusha
add
adc
cmp
xor
rcll
addl
inc
sub
and
adc
xchg
in
or
push
add
bound
push
int3
pop
ja
add
xor
insb
inc
loopne
mov
dec
fcomi
ror
adc
and
lock
xchg
out
adc
mov
inc
inc
and
xchg
jbe
push
cmpl
add
pop
neg
dec
dec
cmpsb
ljmp
mov
aam
add
push
pop
pop
xor
mov
cmp
pushl
mov
sti
sbb
rclb
fadds
xor
mov
test
xchg
dec
subl
rolb
dec
mov
sbb
test
jecxz
pop
or
pop
aas
pop
mov
outsl
add
push
dec
lock
popl
dec
mov
jnp
and
sub
mov
dec
pushf
fbld
xchg
xor
ret
cld
xchg
rorb
pusha
test
loope
in
cmp
inc
sub
nop
push
dec
jl
sub
add
gs
and
aad
addr16
push
jno
mov
scas
outsb
movsb
outsb
out
push
sbb
inc
and
xchg
mov
movsb
push
xchg
add
xchg
mov
jl
mov
jle
inc
sbb
aam
int
lcall
in
iret
sub
xchg
mov
dec
or
or
test
and
nop
les
sub
sbb
fists
into
lds
dec
inc
sub
nop
cwtl
pop
cmp
mov
xor
push
rclb
pop
mov
add
pushf
lcall
test
pop
rol
popa
setae
sbb
out
xchg
xchg
andb
push
push
into
arpl
js
dec
jmp
aas
stos
shl
xlat
not
cltd
xchg
mov
inc
or
pop
mov
jbe
repz
pop
add
bt
xor
add
out
into
test
dec
sub
inc
and
shlb
xchg
inc
pusha
ror
mov
jle
pop
loopne
jg
rcrb
es
and
lock
rcrb
lds
push
pop
pop
test
addl
jmp
push
pop
pop
sub
cwtl
call
out
lds
sbb
repnz
pop
add
dec
rcl
orb
jns
lahf
dec
das
cmp
shrl
subb
push
add
adc
xor
daa
dec
jbe
xchg
or
sub
dec
push
or
pushf
pop
or
andb
cmp
lea
pushf
fiadds
test
pop
jo
xlat
fwait
cwtl
xchg
inc
or
pusha
pop
loopne
lock
xchg
loopne
dec
pop
leave
inc
sub
xor
jae
jge
push
jbe
loop
push
lock
int3
es
ffreep
push
call
loope
pop
adc
and
mov
popa
xchg
lock
mov
pop
or
into
cmpb
shll
mov
or
and
dec
fbstp
das
push
xor
pop
movsl
cli
sub
sub
add
mov
push
cld
test
scas
test
ret
mov
sub
in
or
dec
inc
orb
notl
sub
push
and
sub
lock
inc
adc
jnp
mov
js
rol
ret
push
or
insl
bound
or
cmpsl
sub
add
es
push
ret
icebp
insb
and
adc
movsl
sarl
jb
cmp
dec
std
ror
cmp
mov
not
jmp
adc
jbe
dec
stos
or
add
mov
repnz
leave
push
std
dec
pop
push
adc
mov
arpl
cwtl
ret
stos
pop
loopne
loopnew
mov
scas
in
ss
add
dec
pop
shrl
push
pop
pusha
or
adc
xchg
outsb
dec
cmpsb
repz
std
fwait
xchg
je
xor
in
sbb
add
xchg
mov
sbb
pop
mov
sbb
cmp
push
dec
js
mov
adc
and
gs
out
and
ret
xor
das
mov
ljmp
inc
inc
and
xor
notl
sahf
or
rcrl
sbb
shlb
mov
adc
pop
hlt
mov
inc
pusha
lcall
push
push
movsb
or
fnsave
xorb
pusha
jge
and
fld
leave
mov
cmp
jb
ret
cltd
in
shlb
out
xchg
sbb
movb
cmp
leave
pushf
push
ficoml
adc
data16
inc
xchg
push
push
pop
or
mov
jge
into
mov
icebp
dec
dec
divb
data16
adc
cltd
addl
fwait
mov
shll
add
mov
jg
add
mov
rcrl
adc
xor
and
cmovo
jmp
pop
mov
xchg
ret
adc
sti
pop
pop
and
inc
rclb
push
shll
add
adc
add
push
pop
lret
and
ja
les
js
sub
cmc
sub
loope
inc
rolb
xadd
out
outsb
dec
dec
test
and
pop
mov
cmpsb
in
dec
cmp
pop
xchg
sbb
or
push
xor
jne
pusha
idiv
sub
mov
sti
pushf
push
xchg
shrb
cmp
pop
mov
add
popa
sbb
or
or
push
stos
jae
sbb
mov
jp
add
in
xchg
mov
pop
loopne
add
insb
sub
pop
add
inc
ljmp
and
push
sbb
loope
pop
or
adc
lcall
leave
je
sbb
mov
rolb
and
xchg
fdivs
xchg
cmp
and
sbbb
test
mov
loop
mov
test
mov
xor
push
xor
nop
out
sti
mov
sbb
loopne
add
and
inc
adc
xor
ret
aad
leave
cmpsl
push
jno
cmp
sbb
mov
jno
out
int
sti
outsb
sbb
loopne
jge
sub
sbb
mov
in
popf
and
in
repnz
add
ret
mov
faddl
cld
inc
jo
ds
popf
out
mov
div
mov
adc
stos
into
cli
mov
pusha
xlat
pop
dec
inc
dec
shrb
push
negl
add
fiaddl
in
mull
xchg
push
out
dec
cwtl
in
int
mov
shll
push
jb
sub
jl
inc
jmp
mov
inc
inc
sub
or
pop
mov
xchg
cwtl
sub
cmp
out
movsb
into
add
stos
lret
or
cmpsb
testb
sarb
int
divl
and
mov
add
pop
push
pop
pop
test
test
or
or
or
and
andb
and
jmp
call
pop
fildl
adc
jp
mov
cltd
hlt
mov
adc
sub
adc
add
pusha
adc
cmp
ja
push
sbb
lea
add
dec
sub
sarl
add
test
movsl
and
pop
mov
adcb
add
hlt
aaa
iret
mov
into
xor
cmp
hlt
mov
rcr
pop
mov
mov
lea
pop
mov
adc
mov
or
repnz
outsl
mov
test
or
leave
cmpsl
addb
int
push
mov
inc
pop
or
cmp
movsb
pop
sub
mov
inc
dec
repnz
repnz
push
adc
int3
push
xor
sbb
jle
mov
nop
sub
stc
mov
fistl
fsubrs
pop
sub
lea
jp
pop
pushf
loopne
pop
pop
cltd
dec
bound
aad
cmp
int3
add
jns
xlat
and
out
pop
or
stos
ficomps
add
push
jl
sub
sub
mov
and
jo
and
not
mov
js
adc
rcll
inc
xor
mov
testb
mov
mov
lret
mov
pop
filds
clc
pop
gs
push
pop
or
mov
shl
fsts
movsb
sub
lods
mov
jecxz
inc
aad
sub
cmp
mov
and
inc
cld
adc
fisttpl
cmp
movsb
add
fdivp
jecxz
pop
xchg
inc
aaa
adc
jbe
in
and
jg
gs
hlt
inc
sbb
mov
in
insl
push
cmpsb
mov
lds
mov
add
cld
mov
fistl
sbb
pushf
hlt
push
and
pop
xchg
pop
inc
and
adc
orl
sbb
ss
pop
pop
mov
push
sysenter
push
add
nop
push
or
ficoml
adc
xchg
es
not
mov
ja
and
mov
aaa
shll
mov
push
mov
mull
lods
sbb
cmp
and
inc
fsubrp
adc
mov
das
or
lret
pop
rcll
adc
add
or
mov
and
push
inc
add
call
in
sub
sub
jns
jnp
mov
xchg
sarb
popf
add
bswap
cmp
mov
or
out
mov
and
out
jno
push
dec
int3
test
adc
sbb
orl
shrb
shlb
inc
mov
push
pop
pop
or
stos
test
xchg
sbb
or
add
xchg
mov
aas
pusha
push
mov
aam
adc
mov
jp
imul
rolb
add
call
divl
or
sete
push
mov
mov
ror
clc
cmpsl
sarl
addb
cld
pop
push
jmp
lds
xchg
imul
imul
mov
push
dec
or
lret
lret
hlt
sbb
and
fcoml
mov
add
mov
fs
dec
dec
inc
mov
rcrb
xchg
je
sbb
cmp
jmp
cs
add
lahf
adc
test
xchg
daa
ds
loope
aam
aad
dec
shll
inc
pop
cwtl
inc
sub
sbb
push
insb
lret
movb
sbb
movsb
lret
sbb
incl
push
testb
jmp
loopne
cld
dec
arpl
cmpsl
rol
mov
fadds
leave
scas
push
cmp
mov
rorl
xor
shl
shlb
fdivrl
jo
fnstenv
mov
fsubrl
in
es
jle
lds
inc
fwait
testl
adc
inc
mov
scas
or
dec
sbb
icebp
mov
hlt
cmpsb
mov
add
test
or
in
cmpl
and
rclb
mov
dec
test
leave
or
out
adcb
mov
sub
inc
inc
add
lahf
test
jp
lret
dec
subb
popf
stc
mov
out
xor
es
xor
cltd
or
mov
out
push
cmp
or
and
add
aad
sub
adc
sbbl
mov
aaa
test
filds
mov
repz
adc
jle
sbb
sub
pushf
dec
notl
adc
loopne
sbb
ret
add
out
ret
push
lods
dec
mov
aaa
stc
pop
add
test
std
jno
cwtl
sub
jmp
enter
mov
dec
in
cmpsb
loopne
jmp
shll
mov
dec
add
leave
jmp
sub
jae
sub
lret
cmpsb
gs
push
xor
cmp
popf
mov
mov
jo
loop
mov
mov
mov
inc
in
add
ret
dec
loopne
pop
iret
add
stos
shl
sub
icebp
daa
add
mov
rcll
add
sbb
out
or
and
xchg
or
cli
mov
out
inc
mov
testl
sub
insb
pop
idivb
cmp
cmp
mov
mov
test
pop
pop
mov
push
bound
pop
push
or
xor
push
popa
cld
pop
jb
add
push
xor
data16
lock
push
xchg
into
xor
lahf
jb
test
cmp
dec
mov
test
outsl
data16
push
and
es
add
push
mov
popf
pop
xor
divl
push
cli
pop
int3
jnp
push
lret
rorl
mov
cmp
outsb
fs
pop
dec
xchg
movsb
cmp
testl
test
xor
sar
pop
rolb
pop
adc
lods
scas
xor
mov
sub
xchg
jns
sbb
lods
mov
out
ja
fnstenv
mov
pop
and
push
jle
inc
movsl
or
dec
mov
inc
cwtl
xlat
add
adc
bswap
out
rcr
xor
adc
jecxz
ljmp
mov
lock
addb
hlt
lock
gs
clc
adc
lcall
mov
jl
inc
or
mov
or
dec
mov
inc
xchg
pusha
dec
lods
adc
aad
mov
add
sbb
int
add
stos
sub
xchg
test
pusha
push
mov
cmpsb
mov
cwtl
lret
orb
dec
scas
cli
cltd
mov
je
cwtl
pop
testl
sbb
in
cs
adc
daa
sub
and
test
repnz
add
adc
dec
dec
repz
pop
hlt
xor
xchg
push
ds
jmp
jbe
pusha
and
sbb
add
negb
adc
das
adc
adc
daa
cld
push
nop
pop
out
fxch
insl
aad
cltd
xchg
pop
rcr
mov
in
pop
imul
icebp
neg
leave
rolb
lds
add
mov
mov
sbb
mov
or
fdivs
inc
mov
adc
xor
fcompl
les
ja
jbe
inc
test
mov
aas
xchg
cmp
test
sub
add
cli
pushw
ss
pop
adc
and
dec
ret
xor
or
sbb
dec
arpl
mov
ja
pop
mov
add
xchg
adc
iret
jne
push
dec
mov
mov
pusha
push
pop
xchg
mov
push
pop
pop
pop
leave
in
inc
repnz
and
cmp
outsb
mov
inc
or
test
in
stc
add
shrb
push
pop
sub
pop
aam
inc
test
leave
lds
add
lods
mov
andb
mov
in
test
int3
push
push
add
pop
and
and
sub
push
adcb
mov
mov
mov
jle
popa
in
xchg
nop
xor
mov
cmpsb
cmp
leave
lahf
mov
or
cmp
sub
roll
xor
loope
repnz
sub
and
std
jbe
sub
cltd
push
dec
xor
sub
sbbl
out
sbb
stos
mov
xor
aad
dec
dec
push
mov
lock
push
inc
outsb
not
in
and
fstpl
sub
shlb
jmp
loopne
cmp
lcall
push
cld
push
and
add
jnp
or
xchg
sbb
pop
sub
cs
push
cmp
dec
cmp
btr
aaa
mov
xor
inc
out
dec
mov
loopne
push
js
dec
xor
fcomps
or
jge
ret
mov
dec
adc
xor
sub
call
add
and
push
pop
mov
ret
int3
add
mov
shrb
add
pushf
in
out
or
in
mov
popa
jns
sub
mov
mov
nop
pushf
test
jae
cmp
push
sbb
addl
mov
jns
push
fildl
mov
aas
pop
adc
test
leave
mov
jle
cmc
daa
fnsave
jecxz
and
pusha
cmp
dec
inc
xor
shll
dec
xor
jae
add
cli
test
mov
sub
lcall
jecxz
sub
sub
aas
inc
lods
xchg
mov
and
and
in
and
jl
xchg
aad
movsl
mov
push
dec
or
inc
shlb
out
dec
shrl
push
and
xor
sub
and
mov
out
jne
cwtl
or
or
jl
stos
dec
rorb
lret
inc
dec
add
cmp
dec
cmpsb
rolb
jl
rorl
push
in
or
pusha
add
hlt
push
dec
enter
nop
shll
mov
int3
nop
pop
int
adc
mov
or
repnz
adc
jecxz
or
or
rorl
dec
lea
mov
mov
addr16
jb
rolb
inc
cmp
cmp
xchg
push
js
xchg
std
arpl
jecxz
arpl
loop
sbbl
outsl
bound
and
dec
jne
test
or
add
sbb
outsl
mov
xor
loopnew
lcall
add
imul
cmpsb
packsswb
xor
das
daa
lcall
cmp
sub
jbe
loop
gs
pop
add
jne
imul
mov
test
repz
jnp
ret
push
adcl
add
jne
mov
paddusb
insb
jmp
xchg
push
jb
mov
popa
pop
insb
loop
sub
and
add
mov
pop
fs
push
cmp
shrb
sti
adcb
orb
aas
and
xor
push
xor
repz
lock
test
push
inc
sti
and
es
dec
jge
fcmove
lret
sub
mov
popa
std
and
mov
sub
add
clc
inc
mov
mov
or
mov
outsb
jnp
xchg
int3
jle
xlat
arpl
dec
clc
pop
insb
add
out
jle
xor
jbe
js
gs
and
adc
cmp
pop
mov
dec
insl
xor
outsb
aas
dec
dec
adc
imul
sbb
loopne
pop
jecxz
jnp
ret
mov
jecxz
mov
out
adc
cmp
jle
mov
push
mov
out
ss
dec
fwait
es
inc
push
iret
push
pop
dec
add
orb
push
lahf
add
ja
mov
stc
pusha
movl
ss
test
mov
mov
jle
xchg
sbb
aad
add
jmp
jg
push
mov
pushf
into
icebp
and
and
roll
sub
lret
addl
lock
or
mov
sub
mov
adc
or
and
sbb
or
add
mov
out
jle
addl
je
je
movsl
rolb
int3
cmp
cwtl
ficoml
fisttpll
ja
ret
adc
ja
scas
negb
and
jl
sahf
push
data16
or
insb
adcl
sub
lds
stos
mov
repz
leave
jmp
mov
pushf
add
pop
adcb
mov
ret
xlat
mov
cwtl
add
nop
jmp
inc
inc
loope
and
adc
or
sub
adc
aas
lret
pop
notl
fcompl
lcall
out
fs
mov
clc
ljmp
mulb
or
inc
arpl
cmp
xor
cld
sbb
sub
xchg
pop
into
lret
cmpsb
add
cwtl
mov
xor
sbb
lods
mov
push
sub
loop
push
jno
push
jo
in
jmp
iret
jns
stc
and
push
es
push
xchg
cmp
pop
fcomps
adc
jg
fcoml
out
mov
add
adc
inc
ret
lds
negb
std
inc
push
mov
lods
fidivl
aaa
push
push
adc
jmp
inc
dec
xchg
cmp
aaa
pop
fstpt
jl
xor
xlat
arpl
outsb
push
sub
loope
push
sbb
in
inc
mov
dec
cmpsb
paddw
xor
dec
fwait
movsl
adc
ja
iret
xor
xchg
shr
jg
push
or
add
jg
dec
xchg
xor
icebp
or
add
or
out
ds
push
jmp
psubb
cltd
pop
push
loop
or
xor
xor
ss
push
sbb
testb
popa
pop
xor
outsl
loope
jb
mov
pop
xor
inc
adcl
pop
jbe
jnp
ds
or
xchg
sbb
mov
jbe
xchg
sbb
fxrstor
dec
cmp
fs
mov
cltd
movsb
xchg
or
xchg
je
mov
xor
jg
mov
daa
test
cli
cmp
ret
push
les
imul
pop
sub
stc
outsb
push
imul
and
cs
in
xor
pop
inc
cmp
xchg
or
inc
mov
cmp
sahf
lea
repnz
lret
jecxz
inc
and
insl
notb
xchg
bound
cwtl
mov
mov
test
dec
pop
xchg
incb
dec
push
and
adc
push
aam
dec
lret
dec
stos
xchg
fisttpl
mov
movsl
jl
js
mov
mov
inc
inc
enter
cmp
popf
mov
or
cmp
dec
inc
test
pop
ds
jp
mov
xchg
pusha
bound
xchg
and
push
ret
mov
lahf
lock
lret
mov
cwtl
sub
dec
and
jae
mov
xor
and
repz
outsl
pop
into
jge
je
ficompl
dec
mov
stos
xor
jg
sbb
or
insl
xchg
loope
pop
sub
pop
and
xor
sub
and
add
stos
push
jae
inc
out
sub
rclb
push
xor
movsl
and
mov
xrelease
jl
and
jle
scas
fmull
push
scas
mov
pusha
lods
jmp
fdivrl
addr16
movsb
dec
loopne
leave
pop
push
addr16
lock
mov
jae
hlt
mov
pop
jae
xchg
out
add
sahf
jecxz
inc
jecxz
cld
sbb
push
fbld
popf
cmpsb
pushf
testb
push
jb
pop
jns
test
jl
jno
mov
push
cld
enter
and
pop
lcall
push
loope
aas
jns
adc
push
lcall
xchg
aam
jle
data16
fidivrl
pop
in
sub
jb
les
pop
lods
jle
lcall
or
lds
jge
sub
out
ret
mov
jo
pop
xlat
out
mov
sbb
dec
pop
js
or
mov
xor
rorb
insl
imulb
aas
out
das
mov
test
add
inc
sub
lret
cmp
sbbl
or
in
inc
xlat
mov
mov
jo
movsb
cmp
pop
xchg
and
popf
cmp
dec
orl
ja
insl
out
inc
jmp
jg
addl
mov
inc
shr
scas
sbb
xchg
xor
sbb
dec
lods
notb
outsb
dec
mov
out
ja
mov
and
mov
mov
mov
daa
push
jo
fs
cwtl
xor
or
rolb
sub
sbb
mov
lret
arpl
clc
outsl
push
fwait
lds
pop
jmp
add
jle
and
mov
lahf
test
xchg
scas
fs
sar
mov
out
sbb
and
outsb
mov
cli
push
add
jge
mov
cmc
aad
fiadds
loop
sar
push
ja
fdivl
jbe
xchg
jbe
dec
mov
imul
test
mov
or
xchg
xchg
std
cs
rolb
adc
adc
test
mov
push
jmp
adc
mov
cmpsl
gs
jge
xchg
inc
push
pop
dec
test
or
pop
and
lock
or
and
cmpsl
pop
and
leave
ljmp
mov
xlat
xchg
push
jle
dec
jmp
push
jp
sti
lret
or
ret
push
lds
xchg
adc
mov
xchg
in
dec
add
stc
mov
rcr
loope
or
jbe
mov
or
jle
push
xchg
pop
in
mov
inc
mov
in
lock
addr16
mov
lds
mov
sti
nop
sbb
pushf
pop
fs
ret
lods
clc
flds
cwtl
pcmpgtd
popf
xchg
mov
inc
adc
outsl
sbb
add
jns
cmp
cltd
xlat
xchg
insl
jno
test
fnsave
add
test
xor
mov
shrb
std
jne
adc
push
mov
mov
mov
and
ljmp
stc
sbb
cli
mov
lret
sbbl
js
movsl
addr16
inc
int
xlat
sub
fwait
out
mov
pop
out
xchg
das
mov
pop
inc
and
ja
pop
push
sub
mov
cmp
inc
jnp
repz
jbe
and
les
jl
clc
push
or
hlt
test
pop
iret
fmul
push
lock
aaa
xor
dec
push
inc
loope
mov
pushf
test
pop
hlt
pop
out
xchg
aam
xchg
inc
sahf
sahf
xor
pop
dec
hlt
cmpsb
jge
outsb
push
sbb
es
mov
test
out
or
and
push
add
mov
jge
xchg
inc
add
les
cmpb
ja
xor
adc
jno
ss
cmpb
fwait
repnz
sbb
jo
adc
in
sub
je
inc
enter
sbb
pusha
push
imul
imul
stos
pop
fcmove
lods
push
js
jge
ret
sub
sub
pop
jg
movsl
mov
jbe
daa
add
mov
je
sbb
in
test
mov
xchg
cs
out
movsl
lds
rclb
mov
lods
popa
inc
pop
in
pop
pop
jmp
repz
sbb
iret
rclb
lea
push
mov
push
sub
mov
pusha
loope
xchg
add
in
cmp
sbb
mov
xchg
lock
lret
sub
mov
pop
shlb
ja
lret
mov
cmp
movsl
cwtl
das
fdivp
push
adc
in
lock
repz
adc
or
push
xlat
imul
daa
mov
sbb
dec
mov
push
or
pop
sahf
pop
xchg
rclb
push
cmp
sbb
xchg
das
add
test
ficoms
cmc
ljmp
pop
inc
mov
cmp
jge
push
sub
cmp
pop
stc
xor
cmpsb
xchg
fnstsw
xchg
es
test
sbb
push
mov
sub
push
ds
clc
mov
jge
xchg
imul
out
js
in
dec
imul
int3
mov
fwait
loope
popa
xchg
push
add
insl
add
dec
negb
imul
ljmp
adc
mov
pop
jbe
loopne
mov
sub
fdivrs
push
mov
add
dec
mov
push
add
xchg
popf
pop
popf
cli
inc
pop
test
dec
add
in
xor
push
push
jecxz
lret
aas
jno
pop
out
xor
dec
xor
lahf
jmp
xchg
jbe
cli
mov
and
mov
inc
push
mov
push
jmp
adc
movsl
add
push
dec
pop
jbe
mov
xor
fs
dec
inc
mov
dec
push
mov
add
adc
cmc
pop
fadd
xchg
inc
jb
sbb
mov
and
push
cmpsl
xchg
push
jl
aam
inc
pushf
and
in
xchg
sub
outsl
xchg
sub
cmpsl
mov
jl
loope
imul
mov
sbb
jbe
xchg
pusha
stos
mov
aas
push
std
sub
jl
mov
add
push
dec
mov
jb
dec
add
jmp
cmp
push
aaa
fstps
mov
movsl
rcll
stos
repz
pop
and
xor
in
call
mov
sub
push
jl
mull
stos
xor
sub
add
je
lods
mov
xor
add
mov
loope
inc
aad
fwait
mov
pop
fs
pop
pop
lcall
jo
jmp
clc
inc
xor
addb
lods
int3
fsub
mov
sbb
sub
mov
jno
dec
push
stos
test
loope
or
push
xchg
and
lret
ret
cmp
adc
lea
insb
sbb
or
ljmp
sti
inc
pop
adc
loopne
pop
orl
lret
mov
adc
or
push
push
jmp
daa
outsb
and
leave
out
jo
gs
adcl
jbe
mov
pop
or
cmp
popa
adc
add
xchg
dec
repnz
sti
pop
lahf
or
mov
xchg
pusha
jmp
pop
ds
xchg
inc
xchg
mov
loopne
jg
mov
stos
pop
push
inc
out
int
sbb
add
mov
mov
xor
mov
jle
icebp
adc
testl
addl
push
pushf
call
addb
mov
xchg
xor
lcall
outsl
sbb
and
or
cs
mov
mov
sub
jp
sbbl
xor
push
xlat
pop
pop
mov
daa
pop
cmp
mov
jle
pop
jmp
pop
ljmp
sbb
fidivs
dec
jl
out
das
mov
cmp
jecxz
or
outsl
pop
jge
icebp
ficompl
jge
jae
shlb
push
push
sbb
imul
mov
mov
push
push
pop
xchg
push
in
push
lahf
push
rcrl
or
fs
fstps
push
push
jb
xchg
movsb
lock
mov
out
or
xchg
add
add
dec
jae
fwait
cli
adc
dec
lea
cvttps2pi
int
and
and
pop
lock
dec
pop
loope
and
outsb
lahf
inc
andb
xchg
jns
lret
scas
jne
mov
loop
add
popf
push
nop
daa
jp
repz
sub
bound
xor
aas
jle
add
xor
sbb
hlt
out
rcl
add
inc
jo
pop
cwtl
mov
adc
dec
push
dec
push
ja
xor
hlt
je
mov
or
les
xor
cltd
fsubl
mov
inc
mov
movsl
mov
mov
push
loop
add
lret
scas
inc
lods
pcmpeqd
subb
or
xchg
push
inc
mov
imul
in
imul
pop
sub
test
pusha
cwtl
mov
rcrb
js
loopne
lret
das
xchg
add
push
lret
pop
in
in
stos
and
dec
movsb
mov
aaa
xlat
lds
and
test
movsb
es
mov
inc
lcall
mov
loop
in
scas
mov
stos
pop
shlb
add
bound
sbb
pop
push
mov
push
inc
or
ja
sub
dec
xchg
adc
add
inc
mov
or
adc
xchg
jne
les
into
xor
jnp
ret
mov
and
movsl
hlt
notb
push
dec
add
sahf
popf
fsubrl
mov
or
loope
testl
xchg
clc
scas
aas
xchg
adc
and
jecxz
mov
addb
shll
pcmpgtb
dec
les
adcl
outsb
mov
scas
dec
mov
inc
xlat
gs
jb
push
stos
sahf
fstl
add
loopne
arpl
xchg
dec
imul
cmp
dec
clc
aam
add
fldt
mov
sub
mov
sahf
cmp
aas
ljmp
xchg
rorl
ja
push
or
loopw
xchg
out
adc
sbb
in
arpl
xchg
cmp
inc
leave
or
jp
cmpsl
inc
mov
mov
sti
repz
cltd
xlat
mov
stos
and
pushf
lret
fs
mov
mov
or
je
add
and
into
nop
xchg
sbb
inc
jg
out
adc
cmpsl
es
xchg
rorl
jp
in
dec
lret
arpl
or
cld
stos
xor
xor
sbb
out
rcrb
xor
pop
or
xchg
lret
add
cmp
fwait
and
lods
int3
mov
js
lods
cmp
je
mov
mov
sbb
iret
mov
or
hlt
mov
cmp
call
add
xlat
in
xlat
iret
push
lahf
add
lods
imul
sub
je
mov
lea
jns
insl
sarl
push
ret
xorb
lods
jle
push
pop
jl,pt
imul
xor
aad
xlat
mov
xchg
pop
data16
mov
les
sub
adc
xchg
movsb
arpl
adc
outsl
adcl
iret
bound
call
xchg
icebp
mov
pop
negb
mov
rol
jg
lcall
xchg
orl
adc
dec
xor
scas
aaa
sarb
sub
leave
aas
mov
lock
movsb
jg
xor
mov
cmc
sti
minps
fstps
lcall
mov
cmc
mov
cmc
pusha
bound
cmp
sbb
sbb
cmp
xor
add
pusha
arpl
cli
js
mov
jle
cwtl
daa
std
popf
lock
outsl
in
push
inc
and
rorl
xchg
iret
xchg
fwait
daa
enter
mulb
insb
cltd
sahf
clc
push
adc
dec
aam
and
mov
xor
push
pop
push
mov
xor
adc
or
jmp
cld
mov
jle
je
cmp
sarb
faddp
in
mov
aaa
insb
jmp
dec
stos
ljmp
or
and
push
jg
rcrl
or
cli
data16
icebp
jae
or
fisubrs
and
push
xor
out
sub
nop
fstps
leave
or
jb
push
pop
mov
mov
fildl
scas
aas
ret
xchg
std
out
sbb
inc
pop
sub
push
sub
mov
xlat
sbb
add
mov
mov
dec
ja
dec
add
insl
add
insb
jbe
lea
repnz
rcr
sbb
jns
jno
push
sub
pusha
pushf
std
cs
ret
jmp
mov
leave
xchg
dec
cmpsl
push
push
push
mov
xchg
mov
outsl
lcall
movl
stos
push
lahf
jns
out
inc
mov
pop
addb
jno
cmp
push
notb
and
ja
shlb
mov
les
push
loop
fdivp
xchg
inc
mov
xchg
mov
dec
jmp
shlb
xchg
repnz
xlat
rclb
xchg
xchg
pusha
pop
xchg
mov
daa
jb
outsl
lret
xchg
lds
repnz
mov
xchg
inc
add
fs
sahf
arpl
scas
and
lcall
cltd
lcall
push
sbb
push
pop
or
subl
add
insb
xchg
xchg
fstpl
or
add
inc
inc
arpl
xor
push
mov
cmp
test
js
jo
arpl
or
fistps
jne
outsb
mov
rclb
and
idivb
outsb
loopne
jno
subl
lret
adc
xchg
sbb
data16
imul
outsl
jo
or
rol
add
lret
aas
jo
inc
add
addb
daa
jle
lods
adc
cwtl
jns
addb
jne
mov
jl
adcl
shrb
jo
fisttpl
adcb
je
and
arpl
and
divb
inc
jle
lods
jmp
dec
push
or
push
loope
decb
arpl
sahf
sub
pop
pop
or
imul
xor
insl
xor
pop
movsb
cmp
loope
adc
arpl
cwtl
cli
adc
test
lods
fdivrl
fcoml
or
cmp
jns
ja
arpl
stos
mov
pop
out
push
flds
pop
pop
clc
nop
insb
loopne
dec
mov
pop
jbe
mov
fmull
rolb
jae
jnp
jp
jae
sarb
pop
pop
jae
movsb
or
jl
adc
ja
push
inc
test
lea
adc
mov
jo
adc
jns
pop
aad
lds
movsb
test
dec
gs
outsb
jp
xorb
jne
adc
push
add
or
lods
lds
xlat
jo
cli
push
push
xchg
cmp
and
pushf
mov
fldz
push
test
ja
fbld
ficoml
aad
push
lds
jge
dec
in
sub
orl
or
jbe
jne
dec
inc
test
pop
pop
ret
iret
push
jl
mov
aaa
ret
push
sub
add
adc
daa
daa
bswap
sub
cmp
in
ret
push
cwtl
sbbl
hlt
lret
mov
xor
jg
push
inc
cltd
adc
incl
mov
inc
jl
push
sbb
jbe
loop
mov
enter
std
or
or
push
xchg
enter
adc
out
stc
push
xchg
aas
in
sub
jge
dec
loopne
sub
popf
ds
ret
das
jp
mov
clc
aad
aas
or
xchg
dec
xchg
add
adcl
xor
sub
lods
das
in
outsb
mov
add
mov
sub
pop
in
mov
and
leave
push
mov
loopne
mov
mov
gs
pop
inc
insl
and
dec
inc
jne
dec
inc
jns
pop
adc
movsl
sub
stos
lahf
push
jae
or
and
mov
xlat
repnz
cs
push
lds
push
inc
dec
mov
mov
pop
in
int3
cmp
push
dec
and
test
sub
idivb
lea
fldcw
and
mov
shrl
mov
imul
insb
xchg
ljmp
mov
push
mov
xlat
mov
aaa
ss
jge
and
ret
lahf
jbe
jle
dec
inc
stos
loope
adc
int
add
popf
loopne
inc
arpl
divl
push
fsubrs
frstor
aaa
add
sti
adc
pop
das
out
pop
add
repnz
es
push
stos
sub
xor
or
jmp
imul
pop
out
pop
or
leave
sub
sbb
xor
movsb
scas
loopne
in
pop
pop
push
mov
and
test
ds
stc
push
push
push
sbb
lds
add
cmpsl
lock
xchg
push
pop
outsb
rorb
inc
mov
xchg
fsub
or
push
mov
cmovns
lret
cld
pop
push
jns
pop
or
call
inc
sub
and
in
hlt
pop
rorl
out
int3
inc
aaa
cmp
int3
dec
ja
pop
or
cmp
std
imul
lret
popf
inc
and
xor
inc
outsl
aam
pop
insb
inc
lods
jle
loope
cs
mov
mov
aas
lea
inc
aaa
mov
cli
movsb
les
xchg
hlt
pop
mov
cmp
adc
nop
xchg
or
add
sub
cmp
daa
add
sub
add
push
pop
int
cmp
cmp
or
inc
fwait
mov
je
mov
dec
das
sbb
hlt
and
jle
push
fimuls
jle
outsl
push
nop
sti
jne
test
mov
jl
or
clc
cwtl
bound
in
mov
data16
aam
clc
cmp
imul
xchg
and
push
or
xchg
xor
rcrb
ret
adc
iret
daa
jecxz
push
imul
mov
dec
outsl
and
into
cmp
xchg
popa
or
lahf
mov
add
in
outsb
enter
cld
jp
and
cmpsb
push
sub
and
adc
push
cld
pop
push
stos
andb
cmp
pop
sbb
cltd
in
xor
shrl
dec
mov
loop
jns
adc
addl
xchg
rolb
and
xchg
shlb
loope
jnp
nop
xchg
daa
push
jl
aaa
dec
ds
je
mov
add
push
jno
cmp
cwtl
cwtl
cmpsl
dec
xchg
je
addr16
insb
and
inc
or
in
fcmovnbe
mov
jne
xchg
mov
sbb
movsl
ja
dec
addb
mov
xor
pop
cmp
outsl
nop
mov
mulb
jbe
pop
imul
fwait
fs
test
or
mov
xchg
xchg
sub
lods
cltd
ljmp
mov
xchg
push
cmp
hlt
jb
scas
pop
jle
inc
or
call
or
xor
jp
imul
adc
js
inc
jl
lcall
sub
fdivs
mov
in
out
and
push
dec
pop
jns
inc
mov
lds
int3
mov
or
jbe
pop
es
or
int
lret
xchg
mov
jl
inc
les
adcl
add
divb
push
cltd
pop
adcb
aam
lods
mov
xchg
mov
ret
loop
js
jno
sbb
imul
push
jno
pushf
mov
jo
dec
rorb
inc
hlt
xchg
stos
das
ja
cmpl
push
mov
sbb
adc
and
cli
add
dec
imul
xor
pop
in
shrb
pop
pop
push
jl
push
sbb
and
movsl
add
xchg
xor
fs
movsb
lods
mov
xorb
scas
dec
xchg
xor
pusha
cmpsl
xchg
pusha
stos
outsl
adc
mov
sub
fisubl
repnz
dec
gs
inc
push
xchg
popa
fistpl
add
imul
mov
adc
sbb
imul
mov
pusha
pop
push
cmc
xchg
jno
cltd
add
outsb
pushf
jmp
jl
scas
adc
icebp
mov
mov
add
sub
mov
outsl
pop
nop
cmp
mov
cmp
cmp
dec
jp
movsb
decb
test
cmp
fwait
push
stos
out
fs
xchg
lahf
mov
jnp
xor
sarb
int3
cmc
jmp
pop
dec
dec
inc
xchg
repnz
sub
hlt
cli
movsl
mov
cmpsb
rcrl
cmp
jb
pop
mov
jle
int3
jmp
dec
sbb
notb
inc
dec
mov
nop
inc
andl
out
push
stc
insb
mov
xor
cmp
xchg
push
pop
insl
int3
pop
pop
jge
mov
repz
in
mov
aaa
or
insb
lds
aaa
mov
push
imul
add
push
cwtl
cmp
or
and
jg
imul
jbe
mov
inc
lods
loope
sbb
aas
out
dec
movl
cmpsl
popf
mov
jmp
mov
jp
lock
sahf
inc
dec
arpl
repz
jmp
adc
jp
outsb
add
ja
faddp
and
inc
add
xor
lods
dec
scas
popa
mov
xchg
arpl
aad
call
lods
mov
or
shrb
mov
jno
mov
cmpsb
pop
int3
dec
mov
out
jnp
or
sub
sbb
jg
out
je
jno
cmp
push
inc
xor
add
inc
insb
lea
incb
jne
jns
mov
jle
jg
push
fldenv
push
test
add
adc
outsb
push
jmp
sbb
xchg
pop
das
testb
lcall
out
xchg
fcos
fisubl
test
fcmovb
dec
xor
loop
jno
sub
inc
adc
gs
inc
aas
push
push
push
and
inc
popf
outsl
ds
fwait
cmp
or
jns
fadds
jo
sub
lahf
jge
arpl
ja
stc
jg
push
inc
or
jmp
sahf
adc
cmp
outsb
mov
sahf
ljmp
xchg
xor
fsubrs
bnd
and
xor
mov
cmpsb
pusha
sub
fwait
xchg
lock
imul
push
test
dec
aaa
fwait
testb
out
addl
mov
push
or
je
sbb
bnd
setle
xor
sub
test
push
dec
dec
loop
mov
adc
pop
push
jb
jl
jp
aaa
xchg
out
flds
outsb
mov
mov
leave
or
mov
lock
and
dec
cmp
dec
jg
sti
mov
mov
repz
push
das
mov
add
in
ficoms
shl
cmc
jo
in
stos
pushf
repz
push
cs
andb
dec
add
sbb
jg
pop
jae
mov
jb
cmpsl
pop
jno
fsts
jo
loopne
outsb
jl
mov
sbb
push
sbb
shl
jg
or
fs
sbb
test
nop
mov
mov
dec
sahf
xorl
jge
repz
out
xchg
pop
jp
dec
jg
aas
pop
js
inc
mov
fstl
mov
push
dec
xor
sbb
adc
out
and
add
mov
adc
inc
lahf
xor
loopne
addb
and
loop
and
jb
adc
jp
int3
add
int
mov
push
cmp
outsb
fcompl
js
jl
mov
sub
push
push
cmpsb
aam
xchg
inc
pop
inc
imul
push
mov
dec
push
nop
ljmp
test
outsb
shll
sub
add
imul
jnp
mov
movsb
jecxz
call
call
xchg
xchg
pop
xor
jle
add
fstps
mov
insl
inc
pop
push
xor
pop
js
or
inc
fstpl
aaa
inc
mov
pop
int
test
divl
adc
insl
les
and
jg
out
xor
xlat
outsb
in
cmpsl
and
iret
jmp
push
xchg
or
jp
dec
mov
es
mov
push
divb
cmpsl
sub
stos
mov
fisttpll
fs
jmp
xchg
dec
jo
or
cmp
call
jle
sarb
jb
adc
imul
cmc
and
add
add
push
sub
bound
sub
shll
mov
repz
sbb
and
dec
in
sbb
lods
add
xchg
xchg
ja
jecxz
xor
inc
xchg
out
push
imulb
lods
es
inc
jle
mov
mov
pop
jno
test
movsl
inc
push
lds
imul
or
shr
pop
int3
xor
repz
sbb
inc
inc
sbb
data16
outsb
xchg
push
mov
sbb
cmp
pop
pushf
xchg
and
ffree
pop
repnz
pop
lahf
inc
lock
cmp
cld
xchg
or
lods
xchg
pop
xchg
mov
sti
sbb
jl
mov
icebp
push
ret
fwait
pop
xchg
jmp
xchg
lea
dec
push
inc
jle
push
std
pop
les
jle
jl
stc
fs
test
ja
add
push
jo
icebp
xchg
or
incl
int
mov
pushf
xchg
jp
scas
add
mov
jg
stos
mov
push
inc
lea
ret
jo
cmp
dec
pop
push
cltd
mov
imulb
sub
mov
cmp
or
test
repnz
mov
dec
add
xchg
xlat
sbb
cwtl
or
mov
and
scas
mov
das
dec
adc
insl
inc
test
fs
jbe
cwtl
cmp
jne
xlat
sub
movsl
xchg
add
out
sbb
jp
shl
xor
inc
insb
push
fdivrs
cld
pop
insb
add
mov
std
jbe
fildl
inc
push
mov
adc
and
mov
adc
mov
and
ja
jo
mov
dec
adc
inc
push
enter
out
sub
shlb
int3
adc
ja
dec
push
dec
out
rorb
sbb
inc
js
jae
push
orl
adc
and
xor
ljmp
and
xchg
pop
insb
jb
push
mul
mov
test
loope
push
or
jge
fstps
int
xchg
clc
inc
mov
adc
aaa
ja
sbb
iret
pop
push
sub
sub
push
or
and
push
cwtl
xchg
call
or
icebp
pushf
fdivrs
ss
adc
jb
pop
jp
adc
and
jnp
fcomip
push
mov
cmc
popa
cli
dec
jecxz
push
aaa
jg
push
and
out
pop
adcl
push
gs
mov
inc
sub
or
gs
inc
dec
mov
cli
mov
adcl
xchg
ja
fwait
shr
cmp
arpl
and
cmp
arpl
xchg
adc
stos
cs
cmpsb
adc
xchg
test
push
push
mov
mov
xchg
pop
xor
fsubl
xor
lds
sarb
subl
or
dec
inc
cmpsl
sub
mov
jns,pn
mov
loopne
xchg
inc
daa
int
andb
dec
adcl
push
inc
inc
loop
jge
movsb
adc
push
enter
mov
loopne
sub
aas
add
and
sar
xor
mov
loopne
push
add
clc
xor
mov
lea
ret
adc
cmp
add
push
jge
push
jbe,pt
mov
jmp
or
mov
daa
jp
lods
cld
sbb
subl
sbb
sbb
pusha
jo
pop
idivb
fadds
inc
arpl
loop
out
mov
mov
stos
rorl
stos
lahf
adc
dec
adc
mov
lret
lret
inc
sbb
data16
ja
leavew
cmpsl
jbe
inc
pop
mov
fisubrl
xor
imul
rorl
lods
jl
and
inc
dec
xchg
adc
cmp
push
pop
faddl
jg
outsb
loope
jae
pop
and
pop
push
jno
and
xchg
arpl
addb
ss
fimull
xor
or
push
or
and
sub
in
xchg
sub
sbb
sub
loope
adc
jp
cmp
xchg
test
imull
outsb
jo
movsb
lcall
jecxz
or
add
popa
mov
mov
lcall
mov
lret
xchg
and
mov
dec
hlt
nop
popf
jmp
rorb
outsl
fnstenv
cmp
push
jns
imul
push
fsubrl
push
dec
xor
pop
jb
dec
fxch
and
mov
jb
cmp
cmpb
pop
xchg
stos
cmpsl
push
cmp
fldl
inc
imul
or
insb
in
xchg
flds
dec
fld1
inc
test
xorb
sub
mov
mov
daa
stos
pushf
lea
loope
pop
test
sarb
cmc
fists
xchg
es
pop
ret
xorl
mov
pop
jns
adc
shll
push
xlat
xor
rcll
in
sbb
and
out
cmp
mov
jo
das
mov
inc
stos
jo
mov
outsb
hlt
fiadds
xchg
push
cs
sub
sub
jmp
addr16
fwait
jno
jno
mov
loop
mov
cld
and
xor
jge
stos
push
dec
sub
xchg
mov
repnz
sub
mov
es
push
sub
sahf
adc
outsl
mov
daa
add
loope
inc
cmp
fwait
jecxz
xor
les
push
pushf
inc
pusha
push
fsubrs
jbe
dec
not
mov
sahf
ret
addb
mov
or
fs
daa
fmul
test
xchg
int
jo
outsb
mov
xchg
lret
dec
fcoms
lock
push
mov
pop
inc
sub
jmp
xorb
sbb
fs
addl
jne
and
push
in
xor
pop
xchg
xor
adc
push
ss
cmp
jmp
mov
ficompl
jl
loop
pop
push
mov
adc
popf
push
inc
addr16
mov
sarl
pop
enter
jge
addr16
aaa
adc
scas
out
jae
fmull
and
xor
push
stc
xchg
push
mov
dec
ret
pop
push
pop
sbb
imul
mov
enter
adc
mov
jmp
loopne
pop
add
pop
pop
inc
ret
mov
sub
pop
fcoms
lds
ret
loope
iret
loope
pop
fdivrl
dec
mov
or
lret
xlat
addr16
add
adc
gs
cmp
sub
sub
out
cmp
jae
dec
flds
or
cs
xor
adc
maxps
int3
or
and
loopne
in
cli
addr16
pusha
or
mov
mov
mov
ljmp
xchg
jmp
sbb
mov
arpl
inc
arpl
push
mov
fidivrl
fdecstp
cmp
pop
ret
mov
jo
lock
pop
mov
es
ja
fidivs
rcrl
test
ja
xlat
daa
in
xchg
aas
and
xchg
lahf
mov
sahf
ljmp
out
lret
dec
xchg
adc
jbe
sbb
fsubl
out
inc
mov
or
xchg
push
hlt
mov
inc
ljmp
cmpsb
inc
push
inc
push
sbb
mov
cmp
mov
xchg
out
inc
xchg
mov
icebp
and
arpl
xchg
outsl
push
sub
lcall
lds
jecxz
xorb
xchg
inc
cwtl
push
test
dec
mov
sbb
jns
xchg
stos
jnp
scas
adc
lods
jle
mov
mov
xlat
out
mov
aad
mov
mov
icebp
and
dec
lret
push
jo
pop
push
push
mov
cmpsl
add
lret
lods
enter
inc
mov
pop
xchg
mov
pop
out
adc
mov
mov
movsl
mov
out
ficompl
fsub
mov
icebp
and
xor
mov
sbb
or
xor
inc
pop
jo
push
rorl
cwtl
stos
ret
rorb
pop
sbb
xor
sub
mov
pop
mull
push
std
insl
adc
ficoms
mov
pop
jb
stos
sub
cld
xchg
add
js
daa
fsubl
adc
pop
push
repnz
cmpsb
fimull
fidivrl
adc
add
das
icebp
outsl
adc
in
ds
ja
push
and
mov
or
sub
ffreep
out
push
sub
push
ds
stos
popf
fs
loopne
xor
outsb
jne
push
pop
mov
data16
and
inc
sub
mov
sbb
adc
insb
xor
lret
dec
push
cmp
std
or
and
pop
les
xchg
stos
sbb
and
bound
or
addr16
inc
mov
pop
enter
jae
pushf
or
adc
add
push
sti
jne
push
sbb
and
mov
mov
cwtl
dec
xchg
sub
je
xchg
sbbb
inc
in
or
sbb
mov
mov
sahf
jb
pop
int3
pop
mov
pop
xchg
lcall
mov
int3
xchg
out
enter
jmp
push
push
xlat
push
xchg
mov
and
mov
daa
mov
adc
xor
bnd
pop
iret
test
mov
cli
lock
sub
xor
insl
mov
adc
xor
sub
jbe
sbb
adc
cwtl
sysexit
insb
pop
int
addl
daa
xlat
insl
lds
and
cmpsl
jae
pop
xchg
aam
xorl
roll
adc
popf
xor
mov
cmc
mov
mov
xchg
mov
dec
mov
les
sbb
incl
and
int3
inc
jae
stos
mov
int3
or
data16
jbe
add
enter
push
mov
xchg
ljmp
cld
or
mov
mov
push
and
jo
ret
outsl
jno
filds
pop
mov
add
mov
xchg
insl
outsb
mov
cmp
mov
sbb
pop
push
add
es
or
jno
divb
cmpsb
adc
rcr
mov
fidivl
insb
ss
andb
dec
aas
ljmp
rep
jb
jno
sbb
fadds
jae
sub
push
nop
imul
fmull
pop
push
jnp
add
xchg
sahf
cmovo
add
xchg
xchg
mov
mov
ja
push
add
xchg
jle
mov
fmulp
lock
xor
jnp
insl
sti
mov
test
loope,pn
dec
fmull
in
inc
pop
cli
sub
jbe
mov
or
inc
je
push
xchg
inc
cmp
xchg
or
mov
das
ds
mov
sub
push
dec
mov
repz
jo
outsb
test
js
int
push
xchg
mov
or
sbb
shlb
jnp
mov
cwtl
clc
xchg
push
sarl
mov
mov
call
mov
adcb
add
je
arpl
push
cwtl
fidivrs
ljmp
fiaddl
mov
js
jnp
xor
iret
repnz
or
notb
rorl
ss
pop
add
xchg
sahf
cmp
clc
es
into
push
cmpsl
mov
stos
jmp
jnp
push
dec
dec
lcall
gs
movsb
ds
ficoml
sub
mov
cltd
mov
xchg
cmp
lods
fistpll
push
pop
mov
push
push
mov
pop
aas
mov
sbb
xchg
jl
or
js
fldt
sub
push
push
and
jl
daa
xlat
xchg
insl
cli
mov
ja
pushf
adc
stos
andb
xor
add
xchg
insb
aad
adc
dec
movsl
pop
les
in
popa
les
xchg
ret
inc
sub
jae
cmpsb
mov
and
mov
mov
cmc
jp
std
jle
push
ljmp
leave
out
inc
cmpsl
ja
pop
xchg
xchg
jns
fs
stos
call
fiadds
cmpsl
flds
leave
dec
out
jmp
mov
sti
jns
popf
sub
hlt
vmread
call
lret
jp
xchg
out
xor
cs
xor
rcr
int
dec
inc
ja
adc
mov
inc
cmpsl
movb
sub
pop
sahf
out
mov
push
outsl
add
mov
insl
jbe
mov
mov
inc
cmp
loope,pt
cmp
imul
andb
inc
roll
cmp
movsb
xchg
and
jbe
out
jbe
xor
cmpsl
add
in
clc
das
icebp
inc
mov
fists
xchg
mov
insl
dec
test
sahf
std
mov
loop
jne
sub
xchg
pslld
fs
out
push
and
or
inc
repnz
fs
adc
insb
test
jl
aam
pop
push
mov
xorl
filds
sti
xchg
jg
dec
daa
fs
gs
sbb
mov
inc
push
cmc
std
bnd
lret
bound
sti
mov
hlt
mov
movsb
out
out
pop
push
or
fadds
cmpsl
xchg
or
xor
popf
mov
into
adc
bound
out
inc
lret
sub
mov
jo
cmp
inc
and
mov
sub
sarl
xor
adc
lret
xor
andb
push
movb
sub
xchg
inc
mov
inc
arpl
adc
movsb
add
lret
shrl
out
dec
test
iret
cmpsb
sub
fwait
inc
push
xlat
mov
inc
loop
mov
jns
iret
pusha
fnstcw
pop
pusha
mov
mov
sub
jne
push
inc
mov
lea
fists
xlat
inc
js
pop
inc
fnstcw
push
adc
add
cmc
jae
stc
mov
jne
mov
mov
mov
aad
out
les
out
push
cmpsl
ljmp
pusha
xchg
push
subl
push
inc
inc
mov
lock
jmp
mov
sar
pusha
adc
dec
ss
into
xchg
aad
sub
mov
cmp
add
xchg
push
insl
inc
enter
lret
jmp
mov
sbb
pop
push
mulb
pop
ud0
dec
sub
pop
fwait
popa
jae
mov
inc
data16
std
lods
cmp
jne
stc
dec
add
scas
xor
daa
xor
ret
mov
mov
jmp
jo
push
adc
cmp
jb
scas
inc
inc
in
aad
fidivs
imul
and
mov
iret
leave
pushf
sbb
xchg
jae
push
push
loope
push
mov
ds
mov
xchg
mov
rcll
jecxz
xorb
pop
clc
sub
inc
sub
pop
lods
mov
push
sub
or
dec
aaa
or
add
pop
cmpb
dec
or
adc
mov
fsts
addl
xor
xor
es
and
cmc
pop
mov
jo
in
jne
or
decb
or
mov
xchg
jmp
dec
lds
or
movsb
add
fldt
cwtl
jb
mov
shll
pop
fdivr
inc
dec
mov
test
enter
sbb
mov
xor
es
not
addr16
aas
lock
jmp
or
inc
repz
call
xor
dec
popa
jle
push
outsb
daa
xor
or
sarl
mov
clc
push
inc
push
repnz
and
push
add
bound
xchg
xchg
cld
xchg
cmp
inc
call
outsl
in
test
mov
test
fdivs
fsubrs
jae
xchg
mov
jno
mov
jge
sti
sub
adc
pop
xchg
adc
pop
cmp
arpl
xchg
sub
and
repnz
repnz
jbe
xor
dec
xchg
inc
fsubr
push
inc
scas
dec
pop
mov
pop
push
jne
aam
mov
js
popf
add
mov
xor
pop
push
or
pop
or
jmp
cmp
mov
ja
pop
std
fildl
pop
and
dec
mov
dec
or
lret
fstl
lcall
lret
mov
loopne
mov
adc
jp
xchg
popa
adc
dec
pop
call
xchg
push
and
mov
or
into
push
decb
jo
and
loope
fcmove
jae
or
push
cmc
sbb
cmpsl
cmp
mov
cmpsb
loope
sub
iret
sarl
mov
jbe
shrl
push
clc
push
xor
and
orl
lods
jnp
shlb
and
xchg
ds
pop
imull
cmc
adc
push
clc
mov
mov
push
xlat
push
adc
inc
leave
pop
pop
mov
xchg
lret
mov
int
mov
and
insl
mov
dec
sub
fsts
xor
jmp
enter
push
jle
mov
test
lcall
rolb
jg
loopne
nop
fisttps
or
divl
push
mov
arpl
and
movsb
xor
or
dec
sahf
insl
jg
xchg
mov
xchg
dec
mull
arpl
aad
les
leave
xchg
ret
adc
cmp
fisttpll
adc
add
cmp
and
push
ljmp
stc
loopne
or
mov
push
pushl
repnz
pushf
lock
adc
out
jecxz
dec
pop
pop
jo
mov
inc
daa
xor
arpl
pop
sub
adc
out
xchg
lock
in
mov
pop
das
xchg
jo
and
push
popf
jmp
cmc
out
sbb
clc
sbb
imul
sub
pop
mov
sub
jle
adc
jnp
popf
in
adc
cmp
sbb
mov
cmp
lahf
filds
arpl
sbb
orl
xchg
out
pop
iret
repz
mov
inc
mov
lods
dec
cmp
adc
push
or
outsb
jmp
push
push
enter
aam
cmp
sbb
imul
sub
addb
cmp
jnp
fwait
mov
mov
or
loopne
lcall
sbb
xlat
push
js
sar
push
hlt
xchg
es
push
popa
lret
xor
sahf
sahf
ss
and
xchg
call
stos
and
cmc
aas
xor
shlb
xor
push
rorl
insl
adc
sub
cltd
test
push
dec
jp
daa
pusha
loopne
imulb
addr16
testl
div
cwtl
add
adc
mov
pop
mov
cwtl
add
sbbl
sub
mov
adc
sbb
or
ljmp
ljmp
push
or
dec
cmc
xchg
push
sub
mov
jmp
imul
ret
test
pop
jno
iret
pop
cmp
adc
mov
xchg
ja
pop
es
inc
mov
or
jmp
lahf
push
dec
shrb
push
jns
jp
dec
sub
jle
pop
dec
dec
scas
sub
mov
mov
inc
xchg
dec
dec
sbb
mov
lahf
inc
outsl
adc
enter
mov
imul
push
xor
pop
fs
xchg
das
mov
mov
sbb
test
je
addl
mov
jl
or
inc
movsb
xlat
adc
mov
ret
sbb
mov
push
jo
sahf
idivb
xchg
lods
xchg
cmp
out
shl
ja
loope
sahf
lcall
cmp
jl
movsb
popa
or
dec
jae
bound
xorb
addr16
out
add
jae
cmpsb
ret
insb
jno
jno
jnp
insl
mov
stos
cmp
jo
mov
add
push
inc
jno
fistpl
pop
outsl
push
pushl
jne
mov
sub
bound
sub
dec
lea
imul
xorl
and
pop
ret
xchg
mov
movl
push
mov
rcll
nop
movsb
add
data16
jns
inc
or
test
repz
subl
sub
xor
popf
push
add
adc
mov
fmul
aam
loop
adc
jp
lcall
aaa
jo
adc
cwtl
clc
dec
mov
sbb
lods
push
leave
es
dec
fidivrs
fnstsw
sub
aam
mov
mov
jmp
mov
or
and
movsl
inc
and
xchg
push
stos
push
push
js
adc
inc
xchg
ret
loopne
sbb
mov
mov
mov
xchg
adc
mov
ds
in
loope
lock
cmp
ljmp
mov
or
into
xchg
jl
sbb
mov
sub
ss
stos
pop
add
repz
rol
aad
dec
mov
hlt
cli
sub
std
fildl
sub
leave
dec
dec
xor
fs
xor
cmp
fstps
xchg
pusha
cmpsl
add
jge
pop
nop
inc
stc
push
push
fsubrp
mov
fs
push
jo
adc
or
jecxz
jns
imul
sbb
stc
dec
jp
mov
jnp
jne
ja
inc
out
sbb
jno
add
sub
inc
aaa
sarb
push
das
xchg
dec
hlt
mov
dec
imul
jp
dec
push
mov
push
xchg
aam
into
pop
aam
add
in
lea
cli
movsb
mov
es
addr16
sbb
and
add
push
lcall
insb
ljmp
add
inc
add
pop
or
cli
fstpt
xchg
int3
loop
fistpll
iret
pop
mov
in
arpl
jmp
testb
pop
jae
imul
cwtl
lahf
lahf
and
enter
dec
xchg
ds
dec
inc
dec
sbb
lcall
jl
jmp
enter
testb
mov
fldcw
add
fwait
and
in
decb
movsb
xor
pop
rorb
cs
icebp
repz
hlt
mov
cmp
popf
fldcw
aad
sub
or
ficoml
mov
mov
mov
loop
cmp
dec
cmp
push
stos
les
call
inc
push
stos
jo
aas
scas
sbb
dec
xor
lds
in
pop
test
imul
std
jae
lea
xchg
xchg
mov
inc
addb
push
pop
lret
jns
mov
xor
add
and
cld
das
dec
pusha
std
sbb
lret
cld
stos
cmpsb
mov
inc
or
lret
ret
dec
or
ss
or
fmuls
xor
arpl
mov
dec
es
std
pop
ret
stc
and
or
movsl
xchg
out
mov
or
xchg
cmp
xchg
repnz
inc
add
cmp
daa
xor
cmp
push
aas
and
jno
mov
mov
add
cmp
mov
repnz
in
dec
push
pop
movsl
mov
ljmp
data16
cmp
test
fs
sbb
arpl
test
ret
jl
fnstcw
xchg
mov
stos
imul
or
enter
stc
cli
cmp
rorb
jnp
inc
es
shl
movsb
xor
inc
fs
jbe
cmp
pushf
pop
repz
rolb
add
inc
and
xor
inc
insl
fmulp
cli
xchg
push
xchg
push
lret
fisubrl
les
out
dec
outsl
ret
lea
repnz
jmp
cmpsl
sahf
outsb
or
pushf
ja
pop
mov
cmp
jmp
push
mov
mov
arpl
movsb
fsts
add
gs
mov
lret
aas
push
daa
xchg
push
xchg
es
and
loop
or
jnp
mov
fnsave
pop
fsubrs
sti
es
cmc
and
mov
sub
shl
mov
jmp
push
pusha
rorl
sahf
mov
sahf
and
stos
enter
xchg
dec
arpl
inc
inc
push
push
sub
cmp
adc
push
mov
test
push
sub
push
sub
pop
out
out
das
xchg
fadds
nop
push
cmp
sub
mov
fcomi
push
out
pop
cli
ret
push
mov
test
cwtl
out
enter
and
add
mov
stos
jae
mov
or
push
inc
sti
adc
add
movsl
js
or
adc
adc
xor
jo
mov
in
fadds
push
shlb
call
out
inc
or
and
je
jge
ss
pop
jecxz
scas
mov
jnp
push
outsl
jg
dec
jl
mov
inc
push
movsl
daa
scas
aad
xor
jo
insl
aaa
pop
jae
adc
push
adc
loope
adc
pushf
in
std
add
movsl
outsb
push
push
movsl
sbb
hlt
nop
stc
or
rcr
mov
jo
ljmp
sbb
xorl
mov
xor
movsb
negl
cmp
push
jle
lcall
popa
js
add
cmc
or
pop
mov
js
jnp
stos
clc
xor
in
mov
sahf
pop
icebp
ret
icebp
add
mov
es
adc
pop
daa
add
pop
divl
in
lahf
outsl
adc
jne
inc
dec
add
scas
into
mov
aaa
xor
cmp
adc
sub
addr16
pushl
jmp
jl
cmp
mov
jmp
jb
cli
xchg
jbe
sub
push
into
lret
inc
mov
and
inc
inc
testl
add
ret
mov
xchg
dec
mov
les
adc
and
pop
dec
mov
inc
ret
mov
pop
jl
dec
mov
push
xor
insb
ret
adc
xor
ret
cmp
sub
inc
sub
mull
pop
mov
fisttpll
psadbw
gs
into
add
mov
fs
inc
ret
outsb
lahf
sub
pusha
mov
push
out
fidivs
stc
sub
gs
loop
lret
aad
and
std
sub
adc
xor
ljmp
sub
loopne
and
pop
xor
inc
cmp
mov
das
imul
inc
scas
push
lahf
dec
aad
sahf
cmp
pushf
pusha
xlat
int3
stos
fcmovnu
or
mov
xchg
xchg
test
xchg
push
bound
sub
push
push
add
hlt
loop,pn
in
mov
pop
cld
sub
mov
sbb
jno
adc
jns
je
xchg
cmp
jo
and
lret
cmp
mov
or
punpckhbw
mov
sbb
lret
sub
push
jae
inc
push
inc
fidivrs
shrl
push
inc
sbb
leave
shrb
cs
jl
mov
lds
lcall
imul
les
push
mov
push
ljmp
or
sub
js
insl
fs
jns
popf
cmp
dec
idiv
in
loope
aas
insb
orl
sub
xor
je
mov
divl
imul
jmp
sub
es
and
jo
jae
jecxz
push
in
dec
adc
test
leave
jbe
fiadds
decl
mov
je
push
mov
imul
cmpsl
adcb
mov
jg
xor
repnz
jmp
out
fidivrs
iret
xchg
push
out
xchg
inc
jns
adc
xchg
pop
push
inc
push
mov
push
jb
adc
fiadds
lret
xchg
les
mov
inc
mov
fcoms
lods
fnstenv
push
movsl
pop
adc
sbb
nop
shrl
pop
and
daa
imulb
mov
push
xchg
or
fildl
xor
faddp
or
inc
mov
push
cli
jae
mov
cmpsb
test
loopne
mov
inc
andb
dec
out
xlat
sub
jg
mov
jg
and
popa
out
sbb
pop
ja
test
je
cwtl
add
lcall
jmp
pop
nop
sbb
ljmp
cli
push
cmp
iret
imul
add
outsl
inc
lret
cmp
add
or
aaa
insl
add
pop
mov
inc
or
int3
mov
add
ret
outsl
outsb
inc
pop
int
jmp
xchg
rcll
das
call
les
iret
mov
aaa
sbb
cld
xchg
bnd
mov
sti
dec
je
sub
push
mov
sti
mov
inc
mov
mov
sub
lock
pop
sbb
rol
fcomps
dec
rcrb
mov
pop
or
mov
xchg
jmp
or
and
or
fbld
add
jge
add
and
lret
or
sub
clc
xchg
out
jmp
mov
fadds
xor
and
mov
dec
jmp
xor
loop
loope
lcall
outsb
loopne
xor
inc
jbe,pn
lea
imul
movsb
aad
lret
inc
pop
sbb
xor
pusha
pop
sbb
imul
stos
pop
pop
lods
mov
in
imul
mov
sbb
sbb
or
mov
push
sarb
adc
push
scas
cmc
mulb
push
jnp
mov
sub
cmpsb
je
sarb
call
outsl
aam
jp
jle
rorb
nopl
inc
sbb
mov
jge
pusha
mov
sub
sahf
sbb
push
les
outsb
xchg
stos
jbe
xchg
cmp
sbb
jne
popf
cmp
push
incb
fisubs
jbe
nop
inc
aas
dec
fadds
imul
outsb
andb
cmp
inc
aaa
fistl
das
sbb
ds
mov
out
and
sbb
xor
and
jae
cmp
inc
and
popf
adc
imul
cld
imul
test
dec
pop
into
scas
cwtl
and
mov
mov
push
cmc
mov
fmuls
add
xchg
pop
mov
jl
out
jle
call
jne
cmp
jo
in
lea
lods
mov
jg
in
pop
jp
pop
lret
andl
add
fmulp
jge
pop
shlb
push
addb
dec
xor
xor
add
lds
cmc
push
pop
sbb
gs
push
cmp
ret
sub
mov
ljmp
lret
mov
dec
outsl
leave
mov
xor
inc
subl
gs
push
out
mov
loop
jo
data16
aam
imul
cmp
mov
pop
jae
lcall
cmp
jle
xchg
jo
push
mov
cmpsb
and
divl
cmp
les
push
sbb
xchg
cmp
sbb
push
cmpb
test
in
aam
fdivrl
adc
fwait
lret
je
jae
js
xchg
jg
cmc
mov
add
and
adcb
adc
in
mov
xchg
aaa
lahf
mov
bound
or
pop
stos
cwtl
mov
cmpsb
jnp
mov
repz
gs
jo
lret
mov
or
addb
test
arpl
sub
mov
sbb
pop
lcall
adcb
xor
xchg
ret
xchg
sbb
sub
fsubrs
dec
out
or
hlt
xchg
xor
je
fwait
sub
js
add
movsb
notl
aaa
and
pop
int3
sahf
icebp
ja
loop
pop
mov
and
notl
jmp
and
outsb
in
dec
cmp
cli
out
add
aas
and
cli
roll
int
adc
movsl
pusha
rcrb
xor
mov
sbb
scas
mov
imull
xchg
sahf
mov
fsubr
xchg
jno
movsl
adc
addb
push
or
add
lds
add
xor
adc
orl
dec
testl
sbb
pop
out
frstor
mov
dec
lcall
loope
sub
dec
fs
pop
push
pop
pusha
pop
stc
cs
inc
inc
sub
mov
dec
outsl
or
mov
pop
mov
shll
call
push
adc
cs
loope
dec
fwait
cs
sbb
jb
mov
lds
xor
outsl
out
sbb
xor
push
pop
test
jmp
mov
sbb
fisttpl
push
fmuls
sarb
mov
popa
push
notb
gs
inc
push
pop
rcll
fimull
fstpl
pushf
enter
daa
pop
stos
sbb
dec
fcoms
cwtl
pop
lock
mov
cmpsb
lcall
and
lds
lea
scas
jp
inc
sahf
cld
outsb
pop
jb
sub
pop
lahf
and
sub
jg
or
jae
mov
fwait
cwtl
sbb
sub
repz
sti
cs
xchg
pop
out
fs
xor
outsl
mov
jl
lea
arpl
negb
push
inc
sub
es
and
fsts
xor
pop
movsb
scas
int3
and
dec
adc
loop
int
mov
divb
pop
in
int
jo
ffree
roll
std
rcrb
mov
cmp
in
push
pop
xor
rorl
and
sahf
or
ss
inc
insb
sub
ficoml
pop
jl
std
jno
and
lds
in
sbb
rorl
xor
adc
lea
xchg
dec
xchg
and
ljmp
adc
pop
stos
test
sub
jp
mov
inc
aad
insb
sbb
push
out
add
aaa
sti
cmp
divl
ljmp
enter
rolb
pop
sti
sbb
pop
jo
es
cs
adc
jmp
xchg
dec
sub
jb
lods
push
notb
push
pop
dec
fcompl
out
inc
mov
mov
out
push
stos
dec
push
inc
push
test
sbb
xchg
out
idivl
mov
mov
xchg
sbb
lcall
jae
sbb
mov
push
cwtl
into
pop
sahf
cmpsb
es
and
inc
xorb
mov
dec
outsb
sub
mov
xor
jo
dec
add
into
add
inc
stos
cmp
jecxz
jbe
push
inc
xor
repz
or
outsb
mov
xchg
jle
mov
jle
mov
cs
mov
push
fcomps
imul
int3
dec
adc
sbb
mov
cs
divb
push
pop
jmp
dec
aaa
push
sbb
mov
cs
outsb
idivb
xor
jae
sbb
mov
rcrb
fcomps
aas
jmp
mov
jae
cmc
sahf
out
lcall
inc
push
mov
clc
push
mov
je
xchg
leave
or
mov
in
push
sub
js
aas
push
fdivs
fiaddl
pop
push
je
ss
pusha
sbb
outsl
xor
outsb
neg
mov
xor
cli
repz
pop
dec
and
sbb
or
mov
outsb
pop
cmpsb
or
xor
in
cmp
cmp
out
lahf
and
push
call
mov
mov
or
ss
adc
repnz
adcl
sbb
stos
jno
sub
jmp
pop
inc
in
aas
and
idivl
xchg
xor
jno
imul
xchg
sub
out
aam
jmp
in
hlt
das
sub
mov
leave
xchg
mov
imul
cmp
les
pop
lret
arpl
jo
je
fidivl
in
xchg
inc
xor
jp
mov
les
sub
jbe
and
mov
xor
or
mov
add
pop
mov
dec
stos
mov
sbb
sub
aad
clc
cmp
jecxz
stos
dec
inc
push
xchg
sub
mov
push
lret
mov
in
cs
es
cwtl
cs
push
ret
xchg
adc
mov
mov
jmp
xor
fdivs
fstl
cs
fimuls
pop
in
or
xor
in
gs
dec
mov
std
lock
ljmp
mov
repz
es
and
rclb
inc
xor
and
jmp
dec
inc
jle
ss
sub
or
mov
lret
add
mov
out
test
mov
movl
subl
mov
stc
mov
orb
cli
add
aaa
stos
repnz
pop
xchg
add
mov
xor
xchg
negl
outsl
jnp
adc
mov
movsb
xor
inc
xchg
inc
pop
lcall
or
cmp
push
cltd
jns
fisttpll
jbe
pop
fs
dec
jl
xor
movl
pop
inc
push
xor
das
outsl
push
fsubs
push
int3
notl
inc
and
popf
cmp
ret
xchg
popa
pushf
mov
cld
mov
pushf
add
mov
xchg
or
inc
adc
insl
inc
call
sub
xorl
xorl
je
clc
xor
inc
imul
call
add
popf
or
xor
cs
out
dec
out
adc
js
push
jno
mov
arpl
mov
inc
out
arpl
mov
pop
repnz
jae
push
cmp
and
shll
or
imul
icebp
jmp
xlat
push
mov
mov
jl
adc
add
adc
sbb
adc
js
js
jmp
popf
in
pop
mov
sbb
rcr
push
jbe
adc
pushf
xchg
std
repnz
jmp
dec
mov
mov
jl
mov
sub
push
jae
push
fcmovnbe
sub
pop
pop
mov
aad
es
and
dec
repnz
dec
repz
cmp
out
xlat
sub
sub
jo
notl
cmpsb
repz
lods
cmc
loopne
inc
pop
add
dec
adc
or
sbb
push
or
fisubl
pop
pop
dec
dec
sub
pop
sub
jecxz
xchg
inc
repnz
adc
out
xchg
mov
outsb
sub
cs
mov
or
jmp
push
pushf
inc
pop
imul
xchg
push
fstpt
push
mov
int
popa
aas
mov
mov
sbb
pop
les
clc
rcr
sbb
mov
xor
fnsetpm(287
xchg
xchg
jmp
adc
pop
push
adc
mov
push
and
aad
es
jp
roll
ja
mov
bnd
sbb
xor
mov
jl
inc
jge
lcall
enter
jl
inc
ljmp
test
call
inc
test
and
push
pop
ret
or
and
jecxz
sub
push
sub
or
rorb
mov
pusha
add
in
jbe
adc
lea
gs
subb
ja
outsb
test
leave
std
repnz
repnz
add
pop
jp
lahf
add
dec
lock
dec
or
and
mov
test
hlt
pop
xchg
rcl
adc
xor
out
push
lahf
imul
and
rol
bnd
repnz
jb
repnz
cmc
xlat
xacquire
inc
xchg
in
popf
mov
push
mov
sbb
enter
push
movsl
cmpsb
cmp
ja
test
call
ss
adc
ds
and
testl
fisubs
xor
jbe
lret
adc
jbe
xor
insl
nop
arpl
xor
or
test
xchg
xor
dec
sbb
and
jbe
pop
lock
insb
jae
adc
cmc
aas
fs
jae
xor
hlt
mov
mov
push
ljmp
jp
adc
push
add
and
repz
inc
xchg
addr16
rcll
xor
movsb
decb
addb
or
mov
xlat
adc
jl
shrl
sub
dec
arpl
sub
mov
outsb
mov
sbb
imull
jle
push
pop
push
add
pop
inc
xor
and
movsb
lret
mov
cmc
fcmovu
stos
or
dec
mov
inc
ret
cwtl
xor
mov
mov
fistps
dec
dec
or
pop
cmp
rorl
imul
push
xor
xchg
cmp
lret
js
mov
push
cmp
mov
push
aaa
fdiv
test
repz
es
dec
jmp
dec
dec
pusha
push
cmpsb
aad
shlb
xchg
jno
push
inc
int
shl
dec
int
dec
mov
fistl
scas
inc
in
push
add
ret
or
and
repz
pop
jl
cwtl
pop
mov
add
jp
xor
scas
dec
gs
jmp
imul
sbb
jne
inc
scas
jae
add
mov
xchg
pop
lcall
adc
lods
push
cld
int
imul
call
push
pop
sbb
mov
lahf
out
scas
nop
ja
fidivrl
jo
sbb
cmp
ficomps
push
dec
xchg
mov
xchg
pusha
sub
xor
addb
jg
pop
jae
jl
sub
cmp
icebp
adcl
mov
cmp
sbb
orb
in
jns
rolb
inc
inc
test
cmp
cmp
outsb
xor
popf
mov
inc
xor
mov
imul
mov
cmp
aad
sub
push
sbb
cmp
filds
jg
outsb
push
cmp
rcr
push
or
mov
es
testb
loope
jne
and
jnp
mov
push
stc
sub
cs
stos
pop
rcrb
mov
push
arpl
or
adc
pop
jg
cwtl
inc
xchg
cmpl
ljmp
xchg
sbb
jle
jnp
lret
lret
mov
push
popf
xor
jge
cltd
xchg
push
dec
mov
lret
aam
pushf
jmp
lock
mov
jmp
bound
lahf
movsl
jae
call
push
mull
sbb
imul
lahf
push
xor
imul
jo
push
lods
je
loopne
sub
lds
lret
mov
jle
and
xor
ret
ljmp
push
mov
mov
xor
rcrb
aas
addr16
mov
pop
inc
jbe
inc
aas
inc
push
inc
cld
lcall
jge
dec
mov
int3
pop
aaa
scas
pusha
and
fs
xchg
sub
and
push
mov
pop
pop
test
push
mov
mov
sbbb
fistl
cmp
hlt
or
cmp
ds
push
enter
add
cmp
push
cs
sbb
out
jp
pop
mov
fwait
mov
inc
incb
shlb
arpl
jo
popa
popf
jmp
cwtl
ret
mov
xchg
imul
mov
outsl
adc
jp
xchg
popf
jecxz
lret
jo
aam
movsl
sub
in
test
insl
mov
nop
sbb
pop
add
jne
mov
jb
push
stos
jl
fisubrs
or
mov
add
repz
das
push
lret
and
inc
mov
inc
dec
ret
inc
mov
mov
push
adc
imulb
push
das
dec
cli
rol
imul
scas
cltd
pop
and
ret
int
shlb
inc
outsl
rorb
ss
jno
stc
jns
orb
jb
test
push
mov
in
push
push
lock
jmp
add
js
lret
lock
mov
cmc
rolb
push
push
in
dec
negb
ja
and
aam
dec
sub
push
push
ds
movsl
test
mov
rolb
imul
out
xchg
inc
mov
imul
inc
iret
popa
sbb
lock
lahf
mov
rorb
xchg
imul
add
adc
pop
scas
jbe
fnsave
inc
mov
dec
mov
pop
add
insl
pop
jb
aam
push
outsl
sbb
mov
pop
cmpsl
mov
mov
xchg
add
out
push
mov
mov
sbb
insb
hlt
sub
mov
cmp
pop
jp
cmp
jle
dec
movsl
mov
fadds
xchg
shr
xchg
outsb
jp
xor
mov
xchg
xchg
addl
pop
movsl
cmpsl
mov
mov
xlat
or
out
mov
mov
cmpsb
movsl
xchg
pop
andb
daa
and
push
xor
pop
in
outsl
fadds
out
fdivl
inc
outsl
addr16
ja
push
mov
sub
cmp
addr16
mov
jge
xchg
adc
push
cmp
incl
add
and
xchg
inc
xchg
loop
lcall
xchg
dec
xchg
mov
popf
push
xor
test
sbb
and
add
pop
pop
xchg
or
adc
mov
mov
inc
mov
sti
xchg
xchg
and
fstpl
mov
inc
mov
xchg
push
je
les
xchg
adc
aam
jne
cs
mov
pop
sbb
les
cmp
and
fcomps
shll
or
jmp
pop
cmp
outsl
dec
mov
imul
scas
jmp
xchg
sbbl
out
mov
inc
in
xchg
lea
insl
sti
sub
or
sti
orl
clc
outsl
inc
notb
out
jno
popl
dec
nop
adc
jmp
fnstcw
xchg
push
cmpsb
mov
add
out
xor
dec
sti
icebp
loopne
call
inc
push
jnp
xor
out
and
mov
addl
icebp
push
sahf
and
or
jb
dec
repz
inc
jae
jno
mov
fidivrl
jg
pop
xchg
fdivl
cmp
lods
dec
dec
pop
push
push
test
sahf
bound
bound
cli
or
fisubrs
mov
mov
bound
mov
inc
imul
adc
nop
mov
jl
and
push
ljmp
scas
dec
inc
fildl
cwtl
aam
lcall
nop
inc
push
outsb
cli
imul
sbb
sbb
scas
mov
mov
or
jno
sub
mov
lds
aam
call
fcomps
cli
cmp
mov
movsl
pop
idivb
mov
cli
movsl
cli
jbe
aaa
xchg
fcomip
sahf
mov
out
mov
sbb
adc
jg
push
into
jae
cmp
mov
cmp
sarl
inc
pop
sti
out
xchg
sti
pop
sti
mov
imul
test
sbb
xchg
push
fsub
pusha
ret
test
sub
idivb
xor
xchg
pop
ret
mov
aas
lea
rclb
xchg
dec
adc
sti
adcl
fcompp
xlat
je
aas
data16
pop
mov
data16
cmp
mov
bound
outsl
arpl
divb
iret
nop
pusha
mov
mov
adc
xor
jb
jns
mov
push
or
xor
jl
sub
out
or
gs
mov
ret
loop
lahf
push
xchg
add
pop
test
or
and
cmp
repnz
inc
cmp
jecxz
imulb
dec
sti
fadd
add
testb
xchg
dec
xchg
cli
aam
outsl
icebp
xchg
xor
add
cwtl
xor
mov
int3
scas
add
cmp
push
mov
gs
cmp
int3
cmpsl
sub
xor
fnstenv
aam
and
std
test
andl
arpl
into
cmp
mov
or
add
and
lods
stos
push
fs
jge
popf
xorl
cmp
aam
or
ret
add
fcompl
xor
sbb
cmp
shll
xor
stos
mov
out
sarl
add
fs
mov
mov
notb
jmp
or
push
dec
sbb
pop
mov
popl
add
ret
add
xchg
xchg
add
pop
jp
jo
addr16
mov
fbld
fimull
xchg
pusha
push
aam
mov
lcall
mov
and
mov
inc
lods
nop
inc
lret
push
popf
jb
mov
fimull
lods
shlb
notl
add
mov
inc
jg
rolb
and
fmuls
xor
push
sub
les
cmp
testb
lahf
dec
jmp
push
pushf
sub
sarl
jp
jae
leave
sub
inc
nop
push
mov
aas
and
gs
iret
aam
xor
cmp
inc
test
pop
int3
lcall
xchg
cmp
adc
lcall
xchg
out
adcl
pop
call
xchg
push
fsts
imul
aam
cltd
mov
push
ja
cmpb
pop
or
imul
cld
pop
or
mov
xchg
mov
add
inc
push
xchg
leave
and
nop
lods
and
std
sub
inc
or
bound
lods
sub
xchg
jno
fwait
xchg
cmp
dec
orb
and
jp
int
adc
and
call
sbb
adc
jo
mov
jne
pop
stc
arpl
dec
push
out
ja
cmp
add
xchg
mov
push
addb
pop
outsl
cmc
push
add
jno
push
ror
scas
mov
lcall
fstpl
repnz
xchg
add
cmpsl
dec
scas
adc
bound
mov
or
mov
mov
sbb
imul
push
das
sub
fisubrl
andb
int
clc
testb
push
loope
sbb
xor
cli
fsubl
inc
push
cwtl
or
or
adc
jl
data16
imul
ss
xchg
iret
pop
dec
aam
mov
mov
inc
dec
sub
lahf
cmpsl
and
push
cmc
imulb
popa
sbb
les
repz
sbbb
add
xchg
cli
mov
out
add
add
inc
loope
jnp
xor
ss
dec
fidivrs
mov
test
js
jmp
js
jmp
cmp
xlat
test
mov
jb
out
insl
aad
aam
sbb
scas
xchg
out
sub
dec
repnz
cmp
dec
sahf
dec
ret
xchg
addr16
push
outsb
mov
adc
push
rolb
cmp
mov
ja
jno
pop
cmp
pop
out
sahf
cli
stos
fsubl
aaa
lret
and
adc
inc
mov
sbb
adc
mov
inc
and
push
lds
ljmp
iret
out
iret
mov
out
inc
adc
mov
jns
add
jg
mov
sbb
lcall
sbb
pop
jno
xchg
daa
js
mov
rcrb
push
add
mov
adc
ja
jmp
mov
imul
inc
fstps
mov
sbb
mov
cs
imul
sahf
dec
addr16
jle
andl
jb
xchg
imul
push
mov
fldcw
popf
dec
jo
ljmp
mov
subb
in
ss
ja,pn
inc
sbb
mov
scas
ret
fwait
lea
pusha
pushf
pop
xchg
rorb
push
shrl
jb
push
inc
xchg
and
call
cmp
or
mov
dec
adcl
or
movq
cmpb
pusha
mov
jo
dec
adc
jo
es
andl
movsl
aam
sub
ficoms
jae
xor
and
push
jle
pop
jp
jmp
add
ret
pop
repnz
pusha
seta
adcb
dec
loop
mov
mov
push
insl
cmp
loopne
sbb
jg
mov
sub
sub
adc
xchg
mov
jmp
nop
loopne
adc
insl
or
xchg
std
addr16
push
lods
cld
add
mov
jp
out
or
imul
xchg
adc
mov
inc
dec
test
sub
mov
xchg
or
mov
das
rolb
add
xchg
popf
xor
push
adc
lods
adc
add
add
fmuls
xlat
push
cmp
xor
loop
pop
insb
xchg
ss
inc
and
bound
popf
test
les
sub
jb
mov
mov
dec
ja
cltd
pop
xchg
lds
xchg
insl
pushf
nop
fildll
and
mov
inc
sub
cwtl
and
iret
divl
mov
adcb
or
push
popl
adc
lcall
cmp
mov
pop
jle
pop
adc
std
sti
and
mov
lahf
fidivs
sarb
and
aad
dec
mov
xchg
int3
sub
int
fwait
xchg
adc
test
pushf
subl
test
add
or
sub
movsl
jnp
jle
jns
pop
call
jl
negl
add
inc
stos
divb
and
adcb
hlt
jo
jnp
es
sub
stos
repz
int
jnp
or
repz
pop
mov
mov
cmp
mov
push
inc
nop
out
jecxz
sbb
insb
mull
orb
cmp
xchg
notl
and
in
jnp
xor
repz
xchg
into
and
push
loopne
mov
jmp
and
loopne
xor
pop
push
or
mov
lret
pop
shrb
push
jb,pt
xor
mov
in
push
jnp
cmp
pop
subl
jnp
and
imul
or
xchg
stc
les
inc
jbe
adc
mov
cmp
xor
sbb
rep
xchg
insl
enter
or
adc
call
cld
stos
hlt
repnz
sub
pushf
mov
out
sub
mov
and
mov
cmp
lcall
pop
lcall
cmpsb
xchg
repz
stos
fsts
and
imul
mov
hlt
adc
jae
and
mov
and
ds
repz
cmp
xchg
ljmp
xor
es
mov
or
push
push
repz
gs
arpl
lds
out
mov
out
insb
shrb
xor
pop
push
repz
xchg
xchg
mov
jnp
hlt
mov
mov
push
shr
adc
mov
aas
push
pop
rcl
jno
fwait
inc
xlat
test
inc
pop
rcl
out
xchg
mov
mov
xor
notb
in
test
fnsave
fsubrs
cli
inc
push
jnp
dec
push
sti
dec
rcrb
push
imul
out
push
call
mov
or
nop
inc
push
jns
das
loope
lea
sbb
jbe
cld
and
pop
imul
loope
sbb
in
add
xchg
sti
je
pop
outsl
pop
fcmovbe
xchg
data16
in
mov
les
lahf
aad
adc
cli
subl
xchg
movsb
xlat
je
jge
sar
push
adc
cli
mov
xchg
jecxz
pop
stc
outsb
in
dec
clc
pop
or
test
stos
adc
inc
and
sets
test
adc
out
and
out
lock
jbe
rcll
or
repz
xor
mov
mov
sub
jl
lods
mov
imul
out
mov
adc
fimuls
stc
fimuls
stos
repz
loope
jp,pn
out
xorb
mov
adc
pop
push
or
shll
jle
lret
sbb
pop
xchg
inc
mov
or
inc
inc
ja
rolb
ret
mov
mov
mov
xchg
inc
or
xchg
aas
lock
mov
call
es
stos
dec
jns
add
add
cmp
shr
pusha
push
cli
pop
add
adc
loopne
push
mov
mov
sbb
je
loope
inc
fistpll
xchg
in
aad
popa
push
adc
mov
mov
adc
dec
or
mov
pop
nop
rclb
fistpl
xor
popa
mov
mov
inc
jnp
jl
adc
xchg
cmpsb
jb
lock
lock
fildll
ss
jl
cmp
mov
in
inc
xlat
inc
mov
inc
daa
fmul
shll
or
ljmp
rcrl
iret
and
mov
sub
xor
push
xchg
push
fiaddl
jmp
jp
pop
fidivl
mov
mov
and
inc
jae
das
push
stos
movsl
jae
adc
ja
ret
xchg
xchg
or
jae
lea
jmp
jbe
test
pop
insb
sbb
xchg
sub
mov
sbb
lds
xchg
out
fisttpll
push
inc
xorb
jns
add
push
shll
les
mov
add
jl
cmpsl
repz
xchg
and
lock
sbb
aaa
push
inc
jl
jo
mov
addr16
sub
insl
jno
shlb
sub
add
and
add
fs
or
movsb
sbb
imulb
add
and
ja
mov
xor
and
mov
push
adcb
popa
sbb
xor
fld
stos
aaa
mov
add
inc
jbe
je
push
ljmp
push
adc
push
js
xchg
mov
xor
lret
in
loopne,pn
arpl
outsl
mov
std
mov
mov
inc
pop
ror
iret
and
into
pop
movsl
add
les
inc
insb
pop
out
inc
mov
cmp
push
ja
rclb
inc
push
in
push
cwtl
jo
xlat
in
pop
add
adc
gs
jo
pushf
dec
cmp
and
or
dec
cmp
or
or
movsl
sub
movsb
cmp
jbe
xor
jmp
cwtl
sub
dec
mov
sub
xchg
int
popf
aas
cld
lret
out
das
outsb
cmp
dec
jb
inc
pop
mov
adc
jno
jne
adc
and
xor
mov
outsb
in
dec
lret
adc
jge
orb
pop
adc
data16
in
lret
add
cmpsb
add
sub
pushf
mov
lea
push
cmp
mov
mov
or
mov
mov
or
xor
mov
lcall
xchg
scas
mov
scas
cmpsb
ds
or
cmp
movsl
data16
cli
into
and
or
in
mov
sub
cmp
inc
inc
stc
popa
lock
subl
int3
jle
mov
or
mov
push
andb
shlb
jns
or
ja
xchg
fs
sbb
cmp
in
mov
cmp
ret
cld
jne
jnp
cmp
fadd
jbe
xchg
aam
adc
pop
cs
inc
jl
psraw
push
dec
jge
pop
iret
sarb
pop
xchg
push
xor
mov
inc
fcmovnb
sbb
jne
or
out
test
pop
dec
enter
xorb
lds
jne
outsl
push
mov
xor
roll
popf
enter
lds
es
jl
mov
faddl
push
pop
mov
test
jle
hlt
jb
lahf
xor
cmc
xchg
xlat
loope
ja
repz
into
inc
jmp
cmp
and
outsl
mov
push
mov
aas
sbbb
mov
lret
mov
mov
fnstcw
and
fidivrl
das
insb
sbb
shlb
int3
jo
or
pusha
jl
cwtl
lahf
sahf
rcl
add
or
enter
jmp
or
mov
cmp
aam
cmp
sub
adc
out
loope
inc
and
jb
ja
xchg
test
pop
or
mov
popa
xorb
jmp
cmovl
dec
int3
fcompl
shlb
js
aam
pop
ja
fisttpll
xchg
test
or
pop
add
cmp
cld
inc
lods
cmp
dec
jecxz
jmp
fists
into
add
inc
lahf
das
xor
sbb
jle
test
push
fcmovb
xor
icebp
jnp
dec
jl
xor
and
add
pop
shl
incl
mov
mov
adc
es
lcall
push
lock
insl
insl
jl
pop
arpl
pop
mov
pop
jmp
xchg
and
test
jle
movsl
mov
mov
push
iret
imul
xlat
in
mov
sahf
or
or
outsb
jmp
jl
push
jecxz
cmp
mov
addb
aam
fsubr
repnz
push
pop
inc
sub
cmp
mov
pop
divl
ficomps
adc
cli
scas
jb
xchg
pop
call
fiaddl
repnz
shrb
jo
pop
test
jo
jo
gs
sbb
mov
in
add
out
imul
adc
mov
stos
int
jb
leave
popf
out
or
sub
mov
sub
ljmp
enter
jo
dec
adc
lret
test
jo
fcompl
call
xchg
sub
adc
and
push
jo
adc
pop
adc
pop
adc
adc
jns
fisubl
cmp
xchg
and
ret
in
cs
jmp
push
dec
push
mov
xor
lds
fcmovbe
out
adc
mov
sbb
pop
xor
mov
pop
cmpsb
test
pop
mov
cli
and
add
mov
loope
and
xchg
out
inc
or
fdivl
pop
outsl
xchg
lods
mov
iret
icebp
xchg
daa
cmp
xor
xor
or
push
fmull
aas
iret
into
pop
mov
mov
call
lcall
pop
mov
test
mov
scas
jp
mov
mov
jae
outsb
add
popf
push
je
repz
mov
cmp
notl
les
push
loope
jmp
aaa
pop
mov
pop
insl
xchg
call
adc
push
sub
dec
out
leave
add
push
xchg
or
sbb
insb
mov
dec
add
inc
dec
popf
add
enter
cmp
es
ficoml
fcompl
add
push
lret
rcll
testb
add
pop
lods
adc
xchg
sbb
out
cmp
or
shll
insl
xchg
mov
es
mov
and
mov
cmp
rcrl
aad
stos
xchg
pop
aaa
ds
and
ss
jecxz
addr16
dec
pop
mov
jne
icebp
dec
out
jl
repz
inc
mov
mov
popf
fidivrs
and
fisubrl
mov
mov
mov
orb
pop
sbb
mov
pop
sub
pop
push
lret
and
fiaddl
jne
cmp
negl
push
int
xor
out
cli
int3
cmp
add
scas
dec
fwait
popf
mov
xor
stos
mov
insb
lea
adc
pop
mov
cwtl
stos
ret
sbb
mov
enter
iret
pop
mov
mov
fdivrs
cltd
sub
pop
inc
jo
mov
push
iret
mov
xor
int
push
mov
mov
stc
push
mov
and
hlt
sbb
sbb
mov
jbe
mov
repnz
jns
push
mov
mov
pushf
pusha
scas
mov
repz
or
sub
int
mov
lahf
insl
mov
cmpsl
inc
inc
xchg
adc
sbb
notb
rcl
sahf
or
inc
adc
inc
or
cld
rolb
scas
aad
pop
mov
ljmp
stc
mov
pop
inc
mov
lea
repz
sub
sub
ficoms
lods
out
mov
ja
test
sahf
and
pop
mov
pop
and
inc
pop
xchg
pop
enter
adc
lods
ret
sub
ja
push
xor
mov
xchg
jl
adcl
lahf
push
mov
cli
popf
movsl
pop
mov
or
add
repnz
push
test
sub
fisttpll
sub
out
jbe
mov
inc
nop
add
js
scas
jmp
pop
stos
xor
inc
jb
or
dec
adc
adc
fucom
dec
push
adc
neg
aaa
lock
mov
inc
dec
cld
cltd
pop
mov
mov
shll
inc
fisubl
rclb
mov
fistpll
cld
mov
push
mov
mov
popa
test
cmp
loop
mov
sub
dec
or
or
iret
or
ret
ret
ljmp
jb
mov
jle
fs
add
sub
test
jle
lods
into
shlb
ds
fidivl
cmp
les
pop
pop
nop
add
test
jb
inc
xlat
inc
das
mov
jnp
jmp
cmp
jl
dec
push
adc
cmp
jl
getsec
orb
push
or
in
mov
cmp
pop
std
pop
xorb
xchg
inc
xchg
mov
enter
aas
ret
mov
out
xchg
imul
movsb
jae
mov
jno
fstl
pop
push
xchg
rcrb
je
push
pop
push
ficoms
dec
enter
pop
adc
into
add
xor
icebp
fwait
jbe
dec
test
cmpsb
sub
mov
and
mov
or
fwait
je
fdiv
sbb
sbb
pop
add
out
sbb
mov
scas
nop
xchg
aad
sbb
pusha
xchg
dec
xor
shll
out
lcall
mov
sbb
adc
imul
ja
cmpb
mov
test
call
inc
out
test
fstpt
outsl
xchg
ret
cltd
or
andb
xchg
xchg
test
pop
ljmp
es
arpl
dec
outsl
jnp
sub
sub
adc
jmp
mov
lahf
push
adcb
push
pop
pop
mov
jns
cmpsl
es
imul
repz
mov
pop
xor
shr
and
mov
loop
mov
add
xor
dec
jae
das
nop
dec
popf
mov
ljmp
adc
push
pop
hlt
out
jbe
add
xchg
push
dec
mov
sub
sbb
lret
aas
movsl
mov
outsl
adc
in
mov
xlat
xchg
je
fmulp
cmpl
mov
inc
mov
inc
sub
std
adc
xchg
aam
push
ja
jbe
fs
cli
pop
cwtl
lret
xchg
mov
lahf
ljmp
pop
ja
sub
push
sub
mov
aaa
xchg
fldl
imul
ret
lods
dec
sbbb
or
add
data16
xchg
nop
and
dec
cmpl
push
stos
cmpb
cmc
sbb
in
jnp
or
mov
add
fadds
cmp
cltd
lcall
daa
sarl
js
add
add
jnp
sbb
movsl
pushf
mov
nop
pusha
sti
sub
adc
mov
test
cld
push
xchg
mov
rsqrtps
lret
jb
mov
mov
jno
mov
add
mov
sbb
push
in
stos
push
xchg
ja
adc
insb
jne
out
lret
jmp
pop
push
rorb
leave
or
orb
movsb
push
rorl
hlt
fs
jnp
notl
div
push
int3
xchg
jge
mov
inc
stos
and
iret
das
pop
cmp
dec
or
loope
mov
dec
les
add
or
pushf
rorb
pop
push
loop
mov
pop
and
jo
js
out
shl
das
jmp
ss
int
push
fisubrs
sti
dec
sbb
jo
lods
cmpsb
mov
xor
lcall
fwait
add
scas
xchg
pop
add
pop
negb
je
dec
adc
jl
popf
imul
testl
repz
or
jg
pop
cbtw
rcrl
sbb
and
fstl
jbe
js
cmp
jp
inc
aaa
mov
sbb
fnstcw
mov
out
mov
das
and
ljmp
xchg
or
data16
inc
jo
insb
jge
xchg
mov
push
push
fwait
mov
or
jp
xor
data16
push
and
cs
ljmp
shlb
notl
xor
lds
mov
call
xor
mov
outsl
mov
push
gs
and
fistpl
repnz
sahf
mov
push
adc
pusha
jge
andb
mov
test
stos
xor
mov
test
or
mov
dec
les
jp
push
sahf
xor
jns
xchg
les
mov
xor
lds
js
sbb
xchg
les
cmp
fucomip
xor
sahf
push
popf
inc
sbb
sub
pop
pusha
ret
loop
xor
sarb
sub
jo
cs
ja
sbb
sub
testl
mov
stos
imul
insl
loope
repz
fdivr
sti
sub
fs
imul
mov
push
inc
cld
dec
idivb
aam
out
dec
sbbb
es
fisubl
das
adc
xor
lret
leave
mov
cmp
hlt
movsb
sbb
cmpsb
les
pop
mov
sbb
stos
jg
pop
stos
mov
dec
jno
test
push
mov
movsl
push
div
or
adc
cmp
popa
fcom
push
into
add
leave
out
stos
jne
insb
sub
push
ljmp
cmp
ja
lret
cmpsb
out
add
sahf
dec
ret
inc
pop
in
pop
std
pop
push
std
xor
popf
inc
dec
movsb
jl
icebp
fistpll
subl
cs
inc
popf
inc
or
pop
aas
pop
mov
and
mov
and
sti
std
and
test
mov
mov
popf
ljmp
push
fwait
or
cmp
sub
addr16
cmp
in
movsb
dec
arpl
hlt
jnp
mov
jo
popf
inc
jmpw
add
mov
jbe
mov
scas
mov
xor
pushf
les
fsubrs
stos
cmp
cld
lods
push
sbb
out
je
pusha
lock
incb
mov
cmp
inc
movsb
sub
jg
jne
xchg
sarl
mov
data16
cmpb
inc
jmp
sub
pop
jl
loop
inc
inc
hlt
jo
fists
xor
aas
add
add
mov
sarb
jne
lock
divb
cmpsl
gs
repz
pop
lods
cld
jns
jge
test
mov
ja
adc
jo
cmpsl
push
mov
dec
pop
mov
adc
jecxz
dec
ret
dec
aad
sbb
sub
mov
rorb
xor
daa
xchg
adc
adc
stc
cmpsb
mov
mov
repnz
cmpsb
insb
fs
stc
pop
adc
hlt
test
sahf
push
lret
mov
mov
or
xlat
mov
push
xchg
xchg
or
xrelease
xchg
mov
inc
dec
xchg
jo
lock
pop
in
aaa
in
xor
dec
out
sbb
cltd
pop
add
push
adc
in
xchg
pop
stc
adc
push
jo
adc
repnz
jle
daa
cvtps2pd
call
popf
jo
and
add
push
fsubrs
pop
xchg
jmp
aas
mov
dec
addr16
mov
jb
aam
adc
cmp
fs
jo
push
jno
mov
inc
decb
mov
mov
mov
cmp
or
fstps
cltd
dec
ja
fcmovne
gs
fsubrs
in
js
cwtl
sbbb
lock
xor
sbb
push
in
outsb
lcall
pop
sbb
xchg
jmp
stc
lock
popa
jg
sti
and
and
popa
and
cmpsl
dec
mov
cmpb
insl
mov
or
dec
and
lret
sbb
pushf
sbb
test
mov
adc
pop
pop
in
je
jne
mov
push
dec
arpl
les
dec
pop
add
push
jb
xor
pop
jle
cltd
xor
mov
das
jb
test
in
aaa
adc
pop
daa
adc
sahf
addb
push
stos
or
adc
loopne
fs
sbb
mov
lret
adc
jbe
and
clc
aam
jl
repnz
push
ja
cs
jle
jo
and
sti
sarl
jb
icebp
adcb
adc
mov
xchg
dec
xor
mov
pop
push
jo
ss
mov
sahf
fisttpl
sbb
test
cmp
loopne
dec
mov
fldl
push
aaa
addb
mov
nop
xor
jb
push
out
sub
add
ret
nop
xchg
sub
mov
dec
pop
mov
lcall
sub
shlb
dec
daa
and
jns
push
mov
inc
aad
arpl
adc
xchg
xor
out
xor
xchg
nop
xor
push
test
jl
jbe
jne
scas
dec
test
popa
fstl
sub
lock
loope
cmpsb
jbe
xor
or
mull
popa
rolb
mov
ljmp
pop
dec
and
cltd
or
es
inc
xchg
lahf
ret
mov
cmp
inc
dec
lahf
repz
mov
jno
sbb
xchg
cmp
dec
ja
push
inc
jae
lret
add
jbe
mov
inc
dec
loopne
mov
push
inc
fnop
sbb
ret
dec
mov
adc
outsb
addr16
outsb
imul
inc
xor
sub
notb
adc
dec
incb
mov
in
add
mov
jmp
push
mov
inc
adc
mov
jmp
adc
outsb
sbb
and
dec
add
aas
cmp
fists
sub
repz
es
mul
xchg
out
std
mov
cmp
and
int3
fistpl
int3
dec
jae
or
pusha
fidivs
lea
push
shl
xchg
int3
sbb
in
add
inc
jmp
sbb
dec
adc
mov
mov
nop
push
bound
andb
lock
add
and
mov
dec
cmp
fisubs
cs
pop
testb
pop
push
fdivrl
loopne
mov
repnz
fisubrl
sbb
lret
add
out
jmp
bnd
imul
push
mov
pop
inc
mov
and
shll
fsubrs
in
nop
decl
into
clc
imul
push
cmp
adc
inc
aaa
dec
aad
shlb
shlb
outsl
xor
sarl
dec
out
mov
xchg
sahf
sub
add
lret
pop
mov
leave
stos
fcoml
dec
xchg
fnsave
push
jnp
icebp
jns
cmc
mov
jmp
icebp
inc
mov
push
mov
inc
jmp
cmp
push
adc
fidivrl
pop
addr16
jg
jae
fstpl
test
mov
add
gs
pop
mov
rcll
jl
or
mov
clc
dec
add
push
repnz
idiv
push
add
lcall
movsb
repnz
push
js
adc
cli
outsl
pusha
mov
aaa
cmp
gs
sti
adc
gs
jb
int3
enter
pop
add
cs
test
and
out
outsl
fldt
cmp
imul
push
dec
sbb
sbb
js
adc
jo
or
jmp
adc
and
and
lods
xchg
ja
fcmove
or
popa
xchg
fcompl
or
dec
xchg
cli
inc
int3
test
cwtl
xchg
mov
popa
rorb
in
sub
mulb
std
sbb
mov
xor
iret
push
fdiv
push
ja
or
arpl
push
jl
xor
loopne
test
ljmp
or
add
gs
lods
mov
xlat
outsb
adc
insb
push
or
cltd
out
mov
cmp
push
cmp
inc
dec
fsubs
mov
inc
idivb
push
push
sbb
add
rolb
xchg
icebp
dec
dec
enter
stos
stos
mov
addr16
popf
insb
and
ss
or
stos
inc
pop
adc
imul
clc
or
stos
xchg
cltd
je
dec
adcb
mov
cmp
cwtl
mov
dec
aam
adc
jb
loopne
fcom
pop
flds
and
pop
add
adc
dec
dec
jns
push
and
push
insb
cmpsb
sub
dec
push
or
inc
mov
je
pop
jae
sbb
jle
jle
and
jnp
mov
xchg
stos
lret
mov
pushf
fimull
jl
mov
out
cltd
or
xor
or
loop
xor
cltd
xor
cmpsl
fxtract
inc
popf
mov
sbb
push
add
std
cmp
outsb
adc
sub
and
fs
push
outsl
jp
mov
inc
sub
inc
ret
sub
mov
xor
push
inc
mov
popa
stc
rcll
cmp
std
das
popa
stc
rcll
cmpsl
shlb
lret
cmp
cmp
rcrl
xchg
fs
cmpb
outsl
sbb
sbb
jle
in
cmpsl
or
stos
addr16
test
ja
ds
jecxz
mov
test
xor
or
pop
inc
lods
out
lahf
push
dec
pop
jle
inc
mov
idivl
cmpsl
fwait
das
sub
cmp
sbb
fs
push
loopne
ja
je
mov
push
aad
out
cmpsb
test
jno
jmp
mov
and
mov
ljmp
and
bound
xorl
fbld
xchg
sbb
cli
sbb
cli
push
cmp
push
xor
mov
shr
mov
aaa
jo
add
pop
jmp
push
mov
loope
add
dec
dec
loopne
xchg
inc
xor
add
mov
jo
aaa
or
xor
or
or
cmp
pop
lods
inc
add
jle
enter
out
mov
sti
ffreep
insl
sbb
xor
lock
ja
inc
sbbl
sbb
rcrl
out
incb
inc
or
jnp
mov
dec
dec
adc
daa
gs
dec
out
pop
nop
add
cli
data16
aas
or
and
jbe
push
data16
daa
dec
loopne
call
cmpsb
cltd
and
stc
rcr
mov
push
lods
testb
ljmp
jnp
js
std
lock
sub
loop
push
jmp
scas
lock
pop
pop
in
dec
in
xchg
mov
or
xchg
cmp
jae
sub
loop
jmp
pop
sub
dec
jb
ss
repnz
jbe
add
fucom
into
imul
mov
dec
les
pusha
pop
add
mov
int
push
rcrl
and
adc
imul
dec
sub
popf
lds
rolb
imul
sub
das
mov
jl
test
aas
mov
sub
rcrl
ljmp
xor
insb
mov
add
mov
cmpsl
push
outsb
bound
jp
or
es
subb
mov
loop
inc
or
adc
mov
das
jbe
jmp
and
bound
fwait
std
shrb
and
cmp
mov
mov
pop
popa
sbb
xor
sbbl
icebp
data16
mov
addr16
pop
jnp
or
mov
insb
insl
xchg
pop
imul
sti
dec
xchg
repnz
mov
addr16
fwait
xchg
sub
cmpsb
pusha
cld
adc
notb
push
add
insb
shrb
aad
cmp
in
loope
jae
pop
add
addr16
shlb
sub
pop
adc
jo
ret
sbb
push
out
insl
xchg
jne
test
imulb
in
stos
mov
xor
fcompl
fnstsw
mov
shlb
js
xchg
xor
shrl
xchg
add
ja
int3
loope
filds
inc
jbe
pop
or
lahf
cmp
imul
or
int
sub
xchg
dec
and
loope
outsb
pop
cli
jbe
lret
sub
divps
loop
sbb
out
pop
mov
mov
push
sbb
inc
mov
sub
inc
cmp
scas
inc
aaa
fisubrl
stos
ds
dec
pop
adc
orps
push
ja
sub
dec
pop
nop
push
ret
pop
inc
mov
push
sub
mov
mov
fcoml
pushf
arpl
pushf
bound
inc
fcomp
movsb
xchg
mov
mov
lea
test
jmp
fcomi
arpl
xchg
cltd
int3
fcmovnu
mov
jg
pop
or
push
idiv
add
jecxz
mov
out
jo
jl
andl
lahf
fists
xor
inc
int
sbb
xor
mov
shlb
decl
stc
fbstp
shlb
js
xor
lahf
mov
push
and
sub
mov
sti
mov
roll
lea
fistps
lea
mulb
and
mov
in
mov
mov
imul
clc
mov
icebp
pop
rcrl
ret
aad
addb
push
out
push
pop
loopne
int
aas
stos
lock
andl
mov
xchg
jg
or
jno
mov
dec
inc
dec
ret
movsl
jno
cld
cmp
mov
cmc
call
pop
cmpsb
int3
push
cmp
lcall
adc
dec
sub
lcall
jge
sub
add
pop
sbb
call
xchg
je
fsubl
or
out
push
imul
sti
jno
and
es
cs
andb
arpl
xor
mov
push
out
cmp
mov
push
fstpl
mov
cmp
sbb
outsl
pop
dec
dec
and
mov
jbe
fmull
jb
loop
mov
in
scas
xchg
cwtl
js
ss
mov
pushf
in
iret
pop
cwtl
fsubrl
sub
sahf
insb
dec
in
lds
imul
inc
mov
xor
mov
inc
xor
jle
les
pop
xchg
int
jae
icebp
push
leave
xchg
jp
int3
adc
mov
inc
imul
sub
push
add
outsl
decl
jae
adc
or
mov
into
dec
xor
stos
hlt
leave
xorl
sbb
mov
test
push
loopne
scas
jns
xor
hlt
push
mov
arpl
shlb
testb
sub
les
mov
insb
xor
xor
add
push
push
outsl
shlb
in
pop
cmpsl
push
xchg
mov
sbb
or
xor
cmp
xor
mov
ret
insb
sub
push
imul
cmovo
aaa
pop
pushf
add
aas
jne
jl
mov
into
mov
mov
sub
nop
adc
jle
mov
xor
mov
push
and
pop
mov
ja
ret
push
shll
cmp
mov
cs
lcall
adc
pop
jecxz
popfw
loop
pop
jnp
mov
xlat
nop
sub
movsb
cmp
sldt
pusha
outsl
imul
inc
pop
mov
jmp
push
int
dec
inc
pushf
sub
rolb
push
xcrypt-ctr
cmpsl
lahf
or
push
cmp
mov
jmp
loope
lret
cmc
mov
push
pop
lahf
je
fwait
mov
jle
test
cmp
cmc
test
add
sub
inc
push
popa
sub
mov
popf
mov
or
stos
jno
jmp
or
aam
mov
orb
jl
les
xchg
or
mov
insb
addl
pop
dec
push
sbb
outsb
ja
daa
xor
push
sub
and
adc
adcb
push
xor
xchg
cwtl
arpl
lods
fdivrp
dec
sbb
cld
pushf
xchg
mov
or
test
ss
mov
push
fisubs
push
sbb
je
cmp
daa
cmp
roll
fdiv
cmpsb
xchg
jge
test
int
addb
adc
cmp
cmp
dec
push
add
or
fnstenv
ljmp
mov
fistpl
adc
push
aaa
iret
sub
movsl
mov
data16
jb
adc
les
sbb
jb
fisttpl
jo
adc
dec
jbe
hlt
loopne
adc
mov
int
jp
fisubrl
repz
arpl
sub
xchg
jns
push
sti
cld
imul
mov
lea
push
lock
adc
xchg
mov
jo
shrb
addr16
lret
jo
push
imul
loope
shrl
dec
inc
jnp
xchg
arpl
stc
dec
sarl
dec
pop
roll
sub
cmova
ja
jge
fildl
aam
je
gs
in
fidivl
pop
sub
das
push
adc
rorb
pop
loop
aas
xor
sub
xor
dec
mov
sbb
int
jb
and
push
xchg
sub
arpl
and
out
or
dec
mov
pop
pop
push
push
imul
jb
scas
dec
jmp
int
arpl
loop
int3
adc
insb
aad
pop
push
stos
push
jno
pop
bound
sub
xchg
int3
shl
push
xchg
fcoms
mov
dec
loopne
ja
jle
jle
cwtl
sbb
jge
cmp
jb
sub
add
cld
mov
jns
lcall
mov
cs
pop
sub
mov
fimull
xchg
out
nop
daa
mov
jge
mov
popa
daa
fneni(8087
sbb
fsubr
or
or
scas
or
data16
idivb
rep
dec
inc
pop
in
cmp
sub
sahf
lret
pop
pop
out
jg
adc
jno
lock
in
jecxz
or
mov
dec
cmpsl
xchg
loop
ss
je
stos
mov
or
test
or
dec
sbb
inc
out
and
rol
adc
js
iret
mov
je
movl
test
sub
dec
das
and
daa
dec
cmp
rcll
fcmovbe
arpl
out
or
lcall
adc
repz
push
add
mov
add
cmp
fiaddl
lds
and
and
lcall
popf
pop
outsl
jns
outsl
jbe
push
add
pop
loope
testb
pop
mov
push
inc
sub
outsb
ret
mov
mov
cmc
scas
push
add
in
cmp
ss
mov
or
mov
pop
jp
int
sbb
pusha
xor
mov
inc
loopne
pop
in
push
fcmovnbe
in
outsb
jmp
aam
cmp
mov
push
sub
das
inc
dec
shl
sbb
mov
or
je
xchg
or
inc
sub
dec
into
jmp
jmp
mov
add
jecxz
cli
pop
jmp
and
insw
and
sub
pop
mov
addr16
clc
dec
add
pop
mov
das
pusha
lcall
cwtl
out
push
popl
fwait
pop
fisttps
mov
inc
addb
xchg
add
aaa
add
sbb
aad
cmp
rcll
dec
or
xchg
nop
mov
js
push
sbb
mov
fistps
call
xchg
and
decb
lcall
stos
arpl
push
pop
sub
mov
mov
in
fsubs
push
in
pusha
nop
data16
jne
imul
outsl
pushf
ja
pop
dec
dec
sbb
aas
fldt
insl
jle
cmp
inc
and
and
mov
icebp
pushf
mov
mov
push
sbb
jno
je
push
popf
imul
push
adc
dec
jbe
cmp
fcoms
dec
xlat
cmp
cmp
push
sbb
cmpsb
push
test
push
test
xor
aas
push
sbbb
imul
fcmovb
pop
push
movsb
dec
fcmovu
or
shl
mov
ret
xor
popf
cli
xchg
fs
popa
pop
jmp
clc
sahf
push
dec
icebp
add
je
test
test
aad
rclb
je
sbb
rcrl
sub
mov
xor
pop
inc
jns
test
pushw
pop
jl
xor
xchg
lret
mov
notl
or
and
adc
push
xchg
cmpl
push
mov
dec
push
das
jecxz
repnz
fcmovnb
outsb
cmp
push
push
das
jae
mov
and
or
inc
mov
lahf
xorb
and
adc
mov
and
pop
xor
sbb
jl
je
push
into
mov
push
jmp
xor
xchg
rcll
mov
jg
mull
jnp
fisttpl
andl
loop
iret
rcrl
mov
cmp
push
sbb
xchg
push
xchg
pop
and
cwtl
mulb
daa
outsb
push
cli
jge
pop
xchg
mov
mov
lcall
loop
in
ljmp
imul
mov
or
jbe
cwtl
sub
xchg
mov
pusha
ss
lea
arpl
add
pop
sub
pop
nop
or
jge
icebp
push
xchg
outsb
push
pop
outsl
ficoml
dec
mov
aam
repnz
pop
sub
push
cmp
inc
lcall
inc
mov
pop
clc
shll
mov
adc
adc
adc
inc
or
lret
inc
std
popa
fwait
das
shl
push
lret
jb
aad
in
mov
out
and
gs
pop
xorl
add
movsb
bound
add
or
repnz
and
test
xchg
cmp
movsb
inc
pusha
test
jae
pop
pop
sbb
adc
mov
lret
xchg
lret
jae
in
sahf
sbb
pushf
sub
mov
arpl
test
inc
dec
jl
ficoml
adc
sbb
in
add
push
daa
loopne
inc
es
mov
out
scas
mov
stc
jg
jp
cs
push
dec
pop
rcpps
movsl
nop
jg
rcll
sbb
jne
inc
xorl
adc
push
rol
mov
leave
ds
jb
pop
add
mov
dec
and
mov
rcrb
ret
xchg
cmp
js
push
push
adcl
daa
mov
or
inc
dec
jecxz
mov
popa
jle
cmp
inc
adc
ret
jo
leave
add
ja
mov
in
adc
fcompl
mov
adc
sti
lahf
stc
push
inc
sub
fs
test
flds
icebp
int3
repnz
add
cmp
pop
sbb
or
dec
jge
cmpsl
fdivr
adc
insl
inc
cmpsl
sub
dec
sbb
mov
and
ljmp
or
sbb
dec
jmp
mov
xchg
and
dec
adc
sbb
ja
add
pushw
nop
cmp
inc
adc
outsb
sbb
insl
ja
adc
add
cmp
or
bound
xchg
adc
shl
psubsb
sti
les
push
popf
icebp
xor
gs
and
sub
and
xor
mov
aam
inc
fisubrs
mov
and
cli
mov
sbb
aam
insl
dec
out
ljmp
mov
jne
sbbb
mov
mov
mov
or
jns
or
stc
aam
sbb
jnp
loop
scas
or
push
pop
pop
das
push
in
hlt
scas
mov
and
cld
add
in
add
pop
js
stc
ficoms
or
sub
xchg
and
xor
xor
or
sti
sahf
inc
sub
scas
or
dec
imul
arpl
pop
add
inc
mov
push
xchg
and
xchg
mov
mov
data16
outsb
out
push
fcomps
inc
faddl
inc
and
imul
xchg
hlt
cmp
xchg
fisubrl
std
pop
popa
sbb
test
inc
leave
shrl
mov
xor
mov
das
call
shr
mov
mov
ljmp
les
outsb
cltd
or
dec
and
orb
dec
out
stc
and
mov
lock
mov
data16
or
cmp
mov
aas
imul
pop
and
cli
stc
and
xchg
aam
cmp
push
mov
test
mov
lock
sbb
inc
fs
das
stos
rol
push
inc
push
cmp
mov
out
ds
xchg
dec
mov
movsl
or
mov
sbb
jo
out
mov
out
or
es
in
loop
adc
jbe
mov
dec
xchg
pop
stos
call
push
cmp
mov
out
out
sbb
sbb
repz
lret
inc
push
out
in
xchg
pop
scas
add
popf
scas
lea
mov
dec
mov
xor
fstpt
test
sbb
sbb
cmpsb
scas
dec
push
or
ss
pop
cltd
ljmp
mov
or
in
push
add
sti
lds
lods
lret
and
insl
js
fnstsw
push
test
test
inc
ret
or
cvtps2pd
mov
jae
aad
ljmp
push
adc
sbb
add
pop
mov
popf
mov
jae
loope
cmp
cmpsl
hlt
int
sar
push
or
outsb
adc
or
adc
sub
inc
ljmp
inc
outsl
stos
clc
jae
insl
xorl
pop
mov
lods
lret
adc
fistpll
jle
out
aas
mov
ja
sti
jnp
out
jno
cmc
jg
aam
cli
jge
dec
push
jne
adc
and
idivb
sbb
jbe
mov
cwtl
divb
mov
inc
jbe
jle
mov
jae
adc
cmpsl
sub
xor
xchg
inc
and
mov
cmp
inc
adc
hlt
mov
jbe
imul
adc
jl
dec
sub
jmp
shl
sbb
push
shl
xor
sub
mov
ret
enter
mov
outsb
mov
decb
cwtl
jb
push
add
pop
lock
std
shrb
dec
pop
adc
inc
push
jae
arpl
js
sbb
enter
pop
sbb
xor
mov
inc
insb
lcall
hlt
fistl
ds
pop
cmp
jae
jle
xchg
inc
cmp
or
ds
pop
ds
psubsw
xchg
shll
sbb
pop
shlb
outsl
nop
xor
int
add
ret
lret
sbb
imul
or
aaa
mov
xchg
cmc
sbb
cs
faddp
out
push
jl
cs
mov
repnz
pop
and
out
sub
inc
pop
xchg
push
fnstsw
sbbb
cmpsb
mov
xor
roll
out
rorb
dec
ljmp
fdivs
add
clc
jb
mov
pop
push
int
gs
sbb
imul
repz
cs
imul
pop
inc
mov
pop
js
fimuls
inc
lahf
leave
jne
stos
cmp
pop
jp
sbb
nop
ss
jle
inc
push
push
scas
outsl
and
gs
es
cmp
js
or
movsb
int
push
movntq
pushl
shlb
out
inc
and
pop
push
outsl
mov
dec
lds
stos
jbe
adc
or
into
mov
pop
adc
movl
jae
test
xchg
push
insl
xchg
cli
test
stc
or
or
push
cmpsb
loope
rorb
xlat
lahf
addb
adc
lret
mov
fadds
lock
xchg
adc
ret
lods
push
and
push
jno
int
jnp
in
pop
int
nop
nop
or
mov
or
cltd
or
imul
mov
cmpsl
jnp
add
jl
lock
inc
sarb
mov
inc
sub
out
or
outsb
xor
pop
dec
adc
mov
test
sbb
aad
and
add
out
sub
xor
add
add
cmp
sti
ja
jne
cmp
rcr
cmp
adc
adc
in
sbb
repnz
xor
or
rcll
cld
test
div
cltd
shlb
sub
add
dec
das
cmp
and
inc
push
ds
inc
inc
cld
test
subl
lret
inc
rcll
adc
fstl
lret
mov
std
pushf
ss
je
or
loope
jmp
aas
fs
cmp
lcall
fcomps
sti
jp
pop
sub
in
mov
sub
jne
or
push
and
enter
cmp
adc
mov
mov
jae
fsubp
test
iret
mov
std
mov
cmp
cmp
sub
out
fs
cmp
lods
jp
mov
mov
bndldx
sbb
push
ds
orl
daa
xor
insl
push
and
jb
jmp
push
ss
daa
inc
fisttpl
aaa
jge
push
inc
and
or
imul
fisubrl
cmp
push
addr16
pop
dec
adc
pusha
aad
in
xchg
imul
call
nop
adc
sahf
loop
imulb
lcall
adc
dec
aam
in
xchg
das
inc
dec
push
jmp
lret
dec
pop
sub
inc
xchg
mov
je
mov
xor
push
xchg
jno
sub
jmp
dec
loop
or
adc
push
add
sarl
in
dec
push
push
sarl
sub
xor
and
xor
cmp
jb
add
es
push
pop
fidivrl
movsb
sub
dec
mov
ficoml
mov
lock
push
int
adc
ja
mov
push
sub
dec
mov
dec
push
sbb
dec
loop
into
enter
outsb
popf
ret
pop
mov
or
lods
rcr
sbb
and
jg
xchg
dec
or
pop
ljmp
cmp
xchg
arpl
cmp
mov
push
jmp
lods
aam
inc
mov
pop
mov
in
inc
fisubrl
pop
insl
orl
mov
mov
pop
mov
ret
test
je
xorl
pop
cmp
or
add
adc
push
inc
sub
push
es
pop
mov
dec
lods
add
and
les
add
pusha
adc
fcompl
xor
push
xchg
std
enter
movsl
mov
dec
lock
push
push
push
adc
nop
cwtl
adc
mov
push
or
xor
push
aaa
mov
loope,pn
aas
das
mov
pop
mov
hlt
push
ss
add
mov
cli
popf
loop
inc
movsl
loope
mov
leave
jno
adc
filds
mov
pop
mov
inc
enter
fdiv
out
push
cld
mov
pop
jb
addr16
mov
mov
and
sub
xor
stc
ljmp
outsl
and
cli
jo
dec
push
fmuls
ljmp
imul
pop
imul
inc
pusha
lods
add
movsb
stos
add
and
xchg
insb
outsb
cmpsl
pop
pop
cmp
add
dec
xchg
in
push
js
add
jl
sub
lcall
outsb
pushf
adc
aaa
andb
cmp
jae
call
dec
jg
popa
xchg
dec
in
cmp
fidivl
in
inc
pop
push
push
cmp
mov
xor
dec
lcall
inc
sub
or
fsubrl
stc
fmuls
stos
xchg
dec
cli
stos
call
les
rclb
aad
pop
cmc
or
sbb
test
aaa
push
jp
cmpsb
or
test
outsb
jl
jb
adc
js
ja
pop
pusha
mov
arpl
mov
mov
xchg
inc
xlat
data16
lret
dec
dec
shl
popl
ret
push
mov
xchg
enter
imul
add
sub
and
fsubrs
pop
outsb
fdivrl
std
dec
jbe
dec
rcrb
mov
out
orl
sub
xchg
lds
push
out
aad
movsl
sbb
pop
call
aas
xor
jl
pop
mov
ficoms
loopne
add
jns
sbb
leave
jnp
shlb
out
cmp
dec
gs
std
jb
mov
es
mov
mov
jle
lods
cmc
je
jg
add
mov
pop
inc
pop
stc
push
fwait
dec
loop
flds
sub
xchg
cmp
mov
rcr
outsb
shrb
fadd
push
mov
adc
inc
jmp
in
hlt
mov
mov
mov
sarl
testb
push
xchg
cmp
aad
fdivrl
sub
add
xlat
fcompl
je
mov
xor
ds
mov
pop
jne
add
lods
add
inc
xor
xor
cmovae
lret
mov
mov
ret
xchg
adc
pushf
daa
das
push
enter
or
movl
bound
push
fisubs
test
mov
push
inc
push
out
pop
fdivr
add
xor
cmpsb
jo
pop
add
inc
je
ja
cmp
shlb
pushf
in
sub
jo
mov
mov
and
les
ret
and
inc
fbstp
shrb
or
xchg
sbb
fdivrs
dec
popf
pop
aaa
fidivrs
lret
mov
popf
repnz
xchg
push
out
ljmp
out
sbb
add
push
or
cmp
push
je
adc
mov
pop
or
addr16
dec
add
test
mov
outsb
cltd
jl
popf
dec
sub
insb
inc
inc
outsl
mov
add
imul
ret
out
pushf
mov
imul
icebp
loopne
xchg
sbb
ret
push
js
out
push
push
sbb
ljmp
outsb
xor
pop
imul
mov
cmc
push
das
xor
or
sbb
ss
lock
aas
rorb
xchg
and
pop
push
lahf
test
and
pushf
jbe
xchg
fisttpl
cmp
nop
iret
xor
daa
shrl
dec
dec
jmp
lret
stos
mov
int3
fisubrs
testl
fldcw
push
jmp
insb
xchg
pop
insl
ret
jo
jge
test
xor
decb
or
or
pop
jle
aad
sbb
mov
jae
dec
sbb
ss
mov
inc
sbb
xor
adc
mov
das
lret
loopne
jge
adc
or
ror
lret
push
repz
sub
xor
repnz
jle
xor
adc
imul
or
push
data16
movsb
pop
aaa
sub
inc
pop
aas
sub
mov
stos
sub
stos
loope
out
add
subb
leave
cld
imul
inc
dec
xchg
add
xchg
mov
or
popf
stos
lahf
sub
ret
mov
xchg
mov
xchg
xor
sub
rcrb
sub
cwtl
arpl
adc
lret
pop
jecxz
pop
or
xchg
shrl
orb
test
andl
fwait
ret
scas
push
inc
sbb
outsl
mov
sub
fs
sbb
imul
jns
int3
push
jmp
jae
sub
mov
and
sub
and
dec
jo
pop
or
je
push
sarl
out
push
xor
mov
imul
mov
daa
jecxz
cli
enter
dec
xor
or
incb
push
iret
fiadds
push
stos
inc
xlat
dec
xchg
es
jo
je
clc
adc
and
test
pop
insb
mov
leave
cmp
loopne
mov
repz
dec
or
jae
mov
xor
das
leave
pusha
fdivs
pop
pop
je
pusha
pop
and
insb
ss
jbe
out
bound
mov
push
xchg
and
in
popf
pop
pop
std
call
inc
bound
inc
lcall
push
push
stc
or
mov
push
add
repnz
mov
push
add
testb
push
cmc
and
sbb
xor
mov
lcall
mov
out
lods
dec
pop
sub
pop
jnp
arpl
inc
arpl
or
xor
pop
inc
push
push
push
cmc
popa
sub
cmp
outsb
in
cmp
or
push
lds
pop
data16
xchg
mulb
movzbl
loope
pop
into
or
lods
xchg
sbb
les
out
fst
push
push
jle
sbb
les
clc
aas
inc
imul
add
sbb
sbb
stos
loop
or
pop
or
fistpl
add
in
inc
cmp
aad
daa
mov
dec
add
sbb
js
lds
fildll
mov
or
jnp
mov
pop
xor
pop
add
pop
sbb
xchg
icebp
mov
popa
loope
pop
in
mov
je
repnz
punpckldq
sbbb
jle
add
loopne
les
push
dec
cwtl
mov
sub
or
popf
cmp
jge
inc
arpl
or
imul
fs
outsb
cmpsl
mov
xor
sbb
jno
nop
call
pop
xchg
or
jbe
movsb
push
fistpll
imul
pop
aaa
xchg
mov
jge
mov
xchg
add
imulb
vmulps
mov
sub
call
movq
ljmp
push
and
mov
mov
pop
addr16
in
cmp
insl
jle
and
jmp
or
leave
ret
mov
cmc
arpl
cmp
aam
insb
jmp
cmp
cmp
sub
test
xchg
dec
inc
xchg
js
out
sub
push
or
ret
pusha
sub
xchg
in
leave
hlt
sbb
fists
pop
shlb
sub
pop
iret
loope
into
icebp
sub
sbb
adc
cld
loop
ljmp
sub
sub
arpl
std
pop
outsl
mov
scas
xchg
pop
dec
out
pushf
xlat
cmp
enter
shrb
mov
clc
lret
je
push
xchg
insb
iret
cmp
jae
inc
or
push
and
jl
arpl
jg
cmp
mov
outsb
jecxz
dec
mov
aas
jo
fstpl
adc
fistps
into
mov
or
arpl
inc
ret
mov
dec
mov
and
jo
scas
fiaddl
xor
add
pop
testl
fnsave
cwtl
fdivp
test
ja
addl
cmpsl
xchg
push
pop
xor
enter
ljmp
inc
inc
jo
push
pop
loope
stos
dec
scas
push
adc
push
das
cltd
pop
xor
and
xchg
insb
push
js
lahf
bsr
xchg
xor
cltd
repz
out
rorb
add
ljmp
repz
cmc
into
testb
pusha
mov
xchg
cli
repnz
lret
mov
sti
inc
nop
add
push
jl
insl
pop
xor
fisubrl
sar
aam
sub
aas
inc
roll
aad
jbe
sbb
mov
int
jl
sarl
jg
ja
lock
fistpll
jl
or
subl
into
mov
pop
push
xor
jb
and
push
jl
test
ljmp
imul
mov
shl
push
push
mov
sbb
test
jne
prefetch
in
xchg
or
sub
ljmp
lds
outsl
cli
mov
hlt
mov
test
ds
or
mov
push
jmp
push
sub
or
or
int
cmpsl
xchg
push
push
xor
inc
xchg
stos
data16
push
mov
call
jp
stos
orl
sub
xor
xor
cld
adc
sahf
push
jg
push
cmpsl
mov
and
mov
ljmp
rorb
sub
and
mov
xor
shrb
arpl
xlat
movsl
inc
xchg
aam
push
cs
iret
mov
xchg
jno
add
sbb
cmp
shll
lods
pop
ficompl
mov
cmp
or
pop
push
xor
push
xchg
adc
mov
jbe
dec
xchg
cmpl
lret
shrl
fimuls
rcrl
imul
cmpsb
addr16
xchg
mov
sub
jle
insl
sbb
int
mov
cmp
cmp
sbb
scas
dec
rorb
das
ficompl
out
fistps
jo
inc
mov
push
or
stos
jge
push
push
dec
add
xchg
adc
pop
imul
mov
adc
movsl
lods
jbe
rol
xchg
test
sbb
and
fdivrl
in
mov
sbb
scas
jmp
inc
ss
fisttpl
test
daa
lds
pop
or
xlat
sti
lcall
inc
fs
jo
pop
in
sub
sarb
xorb
push
cli
push
les
dec
pushf
lcall
dec
jno
add
arpl
inc
popf
cmp
adc
or
and
xchg
jle
out
ds
repnz
fcmovnb
fcoms
leave
sub
pop
leave
and
rcr
sub
mov
mov
pop
push
pop
ja
xlat
fimull
adc
dec
and
das
and
je
test
ret
inc
ret
enter
push
ror
push
sbb
mov
xor
mov
and
mov
xor
sub
pop
jb
cmp
addr16
inc
fs
inc
popf
int3
add
cmp
aas
pop
add
flds
repnz
imul
push
mov
lds
imul
pop
cmp
and
in
dec
cmp
lds
outsb
sti
xor
pop
pop
call
or
push
cltd
lods
shrb
push
jge
pop
lcall
fwait
mov
adc
and
pop
outsb
fld
int
push
das
into
fdivr
cmp
mov
adc
and
sbb
dec
mov
push
and
push
mov
cmp
sub
lods
outsl
adc
scas
lods
mov
xlat
mov
out
inc
push
cmpsb
pop
inc
adc
pop
hlt
test
pusha
bound
jne
cmp
insb
bound
push
into
inc
fcompl
outsl
rol
test
fldenv
cmc
mov
mov
testl
xchg
sub
xor
xor
aam
mov
sbb
cmpsb
jg
mov
icebp
inc
xchg
dec
mov
sbb
rcll
cmp
add
shl
and
mov
sub
or
sub
insl
sub
imulb
sub
dec
pusha
push
push
paddd
jmp
mov
ret
xor
jno
clc
mov
and
lahf
adc
jp
cld
and
mov
mov
shrb
adc
test
xor
lret
xor
xchg
cmpsb
cmpsb
xor
mov
ret
or
rorl
cmp
movsl
push
mov
jb
dec
nop
pop
xlat
dec
in
mov
mov
push
in
inc
jl
js
xor
mov
test
arpl
inc
xor
jne
xor
outsl
xor
jmp
outsb
sub
andb
pushf
cmpsl
daa
mov
dec
pop
pop
lcall
pop
sbb
das
adc
sbb
das
xor
fmull
inc
icebp
dec
sbb
jmp
mov
jnp
ljmp
xchg
inc
mov
mov
xchg
aam
sarl
fsts
mov
xchg
add
cmp
outsl
xchg
dec
jns
jg
mov
rcrb
arpl
add
mov
enter
inc
aaa
divl
add
std
popa
pop
rcrl
mov
sbb
or
ds
insl
xlat
out
and
xchg
sbb
and
sub
insl
daa
andl
adc
adc
adc
push
insl
imul
std
iret
sub
jae
add
mov
fstl
cvttps2pi
aaa
xchg
push
lret
push
inc
fdivrl
pop
pop
shl
movd
mov
sub
adc
mov
jbe
sahf
sub
adc
xchg
pop
cmp
loop
aam
imul
pusha
add
dec
sub
iret
in
cli
leave
in
stc
lock
jbe
fsubrl
or
inc
in
mov
jp
xor
popf
dec
xor
and
mov
das
mov
push
mov
xor
sbb
sahf
pop
adc
enter
and
push
push
push
dec
ja
pop
mov
inc
add
xchg
xchg
out
mov
mov
cli
iret
sbb
sbb
pushf
cmp
out
cmpsb
cmp
test
nop
popa
mov
push
mov
test
cs
fwait
je
and
lret
inc
das
inc
xchg
push
mov
push
and
and
push
push
and
and
xchg
adc
icebp
pop
inc
rcrl
mov
inc
dec
div
frstor
out
mov
out
xrelease
add
cmp
addr16
divl
pop
cltd
mov
jae
xchg
sti
cmp
pop
mov
ljmp
sbb
push
mov
cmp
adc
and
inc
and
push
sti
or
cwtl
fidivrs
out
and
add
jns
and
dec
mov
jae
pop
outsb
push
sarb
ss
fnstcw
jecxz
je
jne
cmp
test
inc
sub
push
sbb
sub
mov
adc
stos
cmp
loope
push
mov
fwait
movsb
cmpsb
pusha
dec
and
adc
aaa
in
inc
mov
in
sub
push
lods
stc
mov
dec
add
sub
mov
shll
insl
adc
scas
inc
adc
nop
into
ds
movsb
arpl
movsb
cmc
push
movsl
fcoms
xchg
cmp
and
xor
adc
cmpsb
mov
inc
push
xor
xor
mov
xor
gs
mov
sbb
adc
xchg
cwtl
mul
popa
add
ljmp
pusha
or
sti
das
ret
jbe
xchg
pop
mov
adc
outsb
inc
sbb
pushf
xlat
pusha
mov
xor
arpl
xchg
add
iret
gs
call
daa
out
push
sub
jbe
daa
sbb
pusha
negl
pop
mov
mov
cmc
cli
jl
mov
dec
enter
and
pusha
aad
test
sahf
mov
or
mov
cmpsb
inc
mov
inc
xor
das
add
pop
cwtl
testb
cmp
lea
adc
pop
mov
scas
mov
mov
cmp
repnz
repz
iret
jno
icebp
es
inc
mov
das
mov
repz
and
subl
cmp
cmp
xchg
movsb
mov
mov
and
inc
insb
lods
movb
jae
xor
xchg
cmp
jae
pop
into
xlat
icebp
push
fidivrs
pop
pop
xor
ret
inc
test
inc
pop
inc
pusha
hlt
cmp
movsl
sbb
mov
sbb
sub
mulb
add
in
pushf
iret
sbb
lea
push
enter
jp
aas
out
je
or
int
add
cltd
cmc
imul
jmp
add
ljmp
test
jge
pop
jecxz
adc
dec
aas
in
pop
in
mov
inc
rcrb
insb
gs
sbb
jb
jle
xchg
lods
testb
push
or
stos
lods
sbb
mov
jmp
pop
sbb
sbb
mov
sub
pop
dec
lods
adc
inc
jb
pop
int3
pop
dec
cmp
and
jecxz
or
xchg
lea
loop
rcl
int
and
jecxz
and
and
xor
mov
push
imul
xor
jle
into
lods
inc
adc
xlat
pop
sahf
clc
or
lret
lret
lock
hlt
mov
or
femms
mov
cltd
pop
jbe
arpl
and
pop
jb
repnz
adc
out
and
test
scas
jb
dec
inc
adc
mov
cltd
hlt
sub
push
or
and
add
pop
cmp
inc
and
jecxz
add
sub
pop
push
push
or
repz
lcall
push
sbb
in
lret
mov
sbb
or
test
in
add
and
rorb
adc
aas
jbe
sbb
add
insb
arpl
popa
mov
stc
sbb
sbb
mov
out
jecxz
cmp
push
jo
jmp
sbb
aam
int
xor
ljmp
cli
adc
xchg
mull
or
mov
xor
sub
jnp
mov
xchg
lcall
or
jne
es
ds
add
push
dec
jg
clc
or
test
or
mov
pop
jg
sarl
les
sub
in
mov
jge
loopne
ljmp
jg
cmp
sbb
popa
pop
icebp
icebp
negl
in
loope
leave
in
stc
lock
or
jbe
push
out
cmp
sbb
addr16
jmp
incl
mov
ljmp
add
push
jnp
fsubrl
ficompl
pop
push
mov
cmpsl
or
xchg
out
repnz
mov
adc
ljmp
in
cltd
add
mov
pop
cld
push
xor
int3
mov
jae
push
incb
repz
adc
push
imul
xchg
dec
and
lret
imulb
out
sahf
lods
add
push
jge
js
cmpsb
push
gs
dec
dec
sbb
push
cmp
pop
dec
add
jno
pop
and
jp
lods
push
lods
mov
stc
ret
jo
and
nop
sub
jbe
sbb
mov
out
or
sahf
or
std
push
pop
push
loopne
add
ret
ds
adc
pop
mov
sbb
or
pop
add
sbb
call
push
jp
out
imul
jp
ss
int3
push
out
sbb
or
jecxz
xor
dec
test
in
and
mov
sbb
inc
incb
cmp
push
add
shl
cmp
mov
sbb
testb
push
insb
push
in
mov
adc
cld
sub
test
cwtl
maskmovq
imull
push
and
andb
adc
or
or
inc
ret
and
es
jmp
adc
pop
pushf
rcll
je
imul
push
pop
add
in
mov
xor
sub
and
inc
popa
fidivl
push
adc
push
sbb
repz
mov
push
popa
and
imul
popa
mov
int3
lret
adc
sbb
or
jecxz
sub
push
cs
sub
or
xchg
inc
jne
dec
adc
icebp
dec
push
push
int3
test
push
pop
pusha
cmpsb
push
mov
les
and
sbb
adc
ret
sub
dec
mov
jne
inc
outsl
mov
in
repz
cmpb
mov
adc
push
push
cmp
test
dec
add
js
push
xor
in
jae
js
xor
loopne
mull
rclb
dec
js
push
insb
mov
popa
gs
jae
sti
mov
inc
in
jb
push
xor
adc
inc
mov
jnp
fdivrl
out
das
lahf
ljmp
sti
loopne
jne
adc
in
insb
add
ljmp
cmp
jne
out
cmp
stos
lock
leave
outsl
mov
sysenter
mov
movlps
jg
sub
xchg
int3
in
jb
fistpll
inc
inc
jb
xor
sbb
sbb
pop
cmp
dec
cwtl
pop
pop
inc
test
outsl
ret
adc
xor
adc
jns
mov
fidivs
pop
pop
jo
dec
add
imul
ljmp
jbe
in
lds
jl
test
and
adc
int
std
loopne
cs
adc
fwait
les
xchg
daa
pusha
adc
adc
ljmp
stc
std
lret
add
and
mov
popf
adc
cld
orl
add
les
sbb
push
xor
lods
sti
repnz
sub
adc
in
out
push
enter
loop
adc
jl
adc
cwtl
adc
popa
cmp
jecxz
je
std
dec
push
outsl
loopne
prefetch
or
adc
inc
push
cmpb
pushf
push
add
mov
add
pushl
fstl
inc
xor
data16
or
jae
jns
lcall
mov
sub
lds
lds
pop
or
xor
pop
mov
mov
addb
ja
aas
mov
ja
movsl
lea
and
out
test
movsl
xchg
shll
cwtl
adc
in
outsl
push
push
mov
adc
xchg
adc
adc
loopne
jno
insb
xor
je
cmpsb
and
addl
fsubs
mov
pop
mov
out
mov
jne
mulb
das
lret
mulb
pop
sar
pop
inc
in
mov
loop
sub
xor
lret
lea
jnp
xchg
outsb
aas
repnz
jge
sbb
and
test
dec
int3
and
mov
je
inc
mov
pop
push
push
jl
pop
pop
jecxz
jge
mov
xchg
or
xchg
xchg
imul
adc
mov
adc
movsl
aad
mov
fcoml
mov
mov
jbe
jge
out
fidivl
push
insl
push
loop
or
aaa
fcoml
mov
lds
cmp
fbstp
jecxz
pusha
xchg
rcll
test
imul
lds
arpl
push
inc
mov
sbb
jo
and
inc
mov
outsb
add
ja
xchg
push
inc
outsb
insl
push
sub
aaa
mov
dec
push
dec
sarb
mov
iret
mov
int3
es
es
sub
lods
jl
in
mov
fisubs
sarb
out
xchg
jecxz
jne
cmp
inc
rcll
in
jle
mov
rcrb
mov
sub
mov
xchg
dec
add
rclb
and
movsl
cli
mov
ficoml
cs
ficoms
mov
cmp
ljmp
add
cmp
mov
sbb
mul
imul
stos
jle
in
mov
add
mov
push
ljmp
fs
cld
pop
push
sbb
mov
sbb
ret
das
shl
lock
jo
dec
push
mov
cmp
cmp
mov
push
leave
cld
push
cld
notl
xchg
jb
mov
inc
rorl
cmp
cmpsb
daa
sbb
pushf
bound
mov
out
jg
inc
or
xor
sub
jecxz
fwait
test
ret
adc
push
push
enter
lods
lods
ffreep
popf
mulb
out
cmp
imul
adc
mov
xchg
fisubrs
inc
push
cmpsl
rclb
incb
pop
cmpsb
inc
push
repnz
cmp
fadd
mov
add
mov
sbb
aaa
jle
dec
outsb
daa
push
or
cmpsl
cmpsl
les
xor
cmpsl
jp
inc
lock
push
push
sub
idivb
negb
shlb
lods
and
pop
imul
fbld
sbb
ficoml
shrb
int3
or
repnz
add
mov
add
iret
jae
push
jge
mov
repz
clc
mov
add
mov
and
mov
and
ljmp
test
imul
cmp
loop
repz
or
push
adc
ret
in
or
fldl
pop
add
jl
out
repnz
xchg
ffree
jbe
outsb
push
mov
cmp
pop
pushf
xchg
cmp
sbb
sahf
lret
cmpsl
test
lahf
jae
and
imul
mov
dec
xchg
imul
push
pop
push
rorb
and
add
push
test
imul
rcrl
inc
lahf
and
mov
arpl
mov
mov
adc
dec
inc
out
aam
jle
jbe
xor
sbb
sbb
sub
xchg
add
lret
inc
mov
add
mov
dec
fstpl
xchg
notl
push
inc
mov
or
or
movsb
cmp
and
xor
or
xchg
jbe
add
lret
iret
ss
inc
outsl
loop
mov
jno
sbb
push
sub
jne
leave
jb
push
lret
leave
divl
mov
inc
fucom
divl
sahf
pop
pushl
xor
and
xchg
cmp
sub
bound
shlb
jmp
adc
inc
add
out
xor
xlat
es
mulb
out
adcb
dec
jae
or
pushf
or
jb
sbb
inc
mov
sub
inc
faddl
cmp
add
data16
icebp
and
inc
add
sbb
inc
je
inc
cmp
push
mov
inc
shll
cld
cltd
jbe
clc
cmpsl
push
and
outsb
pop
ret
mov
cmpsb
shll
sbb
dec
aas
xchg
ret
popa
cmp
xchg
mov
xchg
arpl
or
adc
repz
xchg
fsts
or
cs
std
or
mov
pop
sub
insl
sub
bound
shlb
jmp
adc
inc
add
popf
es
not
xchg
out
sbbb
push
repz
xchg
jne
mov
or
xor
mov
sub
push
pop
cmpsb
and
adc
push
repz
dec
imul
adc
data16
aaa
sub
in
popf
std
jle
sub
jle
xchg
push
jp
xchg
icebp
addr16
or
cwtl
insl
jo
outsb
jg
adc
adcl
jns
pop
popa
jge
fildll
clc
test
out
into
mov
ss
add
push
xchg
jne
cmc
or
fadd
or
jnp
adc
sbb
adc
bound
popa
add
xor
mov
dec
jnp
mov
inc
add
dec
fdivs
sbb
das
movl
push
lock
sar
dec
jg
sub
xchg
bound
mov
adc
in
mov
xchg
push
xchg
xchg
xlat
or
js
add
xor
xchg
add
sbb
test
emms
out
pop
and
pop
lret
or
out
add
jo
repz
cmp
adc
lods
or
or
outsb
stos
aas
push
clc
lcall
dec
inc
xchg
cmp
test
dec
inc
mov
inc
add
into
movsb
fildl
scas
or
xor
test
andb
sub
mov
imull
int
sub
cld
xchg
add
sbb
and
xchg
mov
dec
pop
sbb
adc
or
test
inc
dec
repnz
aad
or
jle
xchg
and
lea
sbb
fstl
xchg
popf
cmp
push
fs
in
cmp
jmp
fsts
adc
add
push
add
testb
mov
icebp
xchg
mov
jmp
add
or
push
fcmovne
pop
xchg
push
xchg
ss
fcompl
add
ljmp
js
mov
shl
pop
fadds
stos
cltd
int3
arpl
das
pop
and
in
jg
aaa
loopne
flds
fisubl
test
dec
jg
inc
cmpsb
test
jge
mov
dec
insb
dec
and
mov
iret
inc
mov
push
data16
bound
pop
jg
sahf
test
push
cltd
filds
in
das
and
add
sbb
shl
and
mov
pop
xor
xchg
or
add
out
dec
cmp
adc
iret
cmp
mov
cmp
pop
ret
scas
adc
push
and
ficoml
cwtl
jae
dec
add
pop
rcl
xchg
int
out
ja
and
popw
adc
adc
xchg
cmp
or
cmp
js
lods
lcall
inc
cmp
jne
or
jo
inc
mov
lea
cld
mov
xor
icebp
orb
mov
imul
pushf
je
lods
jmp
js
bound
mov
lea
mov
and
xchg
iret
pusha
cmpsl
sbb
rcr
cmpsb
jecxz
jg
lock
cltd
pop
push
ret
bound
fistpll
stos
dec
dec
rclb
xor
or
mov
mov
rcrl
lret
adc
mov
int3
add
cld
add
mov
dec
cmp
sub
popa
rorl
jg
sub
and
popa
sarl
es
jg
and
jnp
daa
pop
fsubs
aad
push
pop
ror
jmp
mov
bound
and
add
fmull
xchg
ja
icebp
stc
add
fs
hlt
inc
bound
add
jg
push
dec
shl
js
bound
push
shr
cmp
push
in
inc
nop
jb
inc
add
inc
dec
flds
inc
test
insb
mov
cld
insb
cld
mov
xchg
andl
hlt
sahf
adc
shll
add
decb
jns
enter
test
loope
sbb
add
or
arpl
sbbb
test
pop
push
xor
cmc
and
lds
imul
fstp
jg
cli
cmp
or
mov
add
fnstsw
xchg
fwait
cmp
lret
push
pushf
les
jge
rcl
jmp
and
and
mov
pop
mov
les
mov
stos
xor
cltd
xchg
add
scas
mov
add
mov
daa
mov
jge
cld
pop
jmp
mov
or
ret
mov
cmp
in
jge
mov
xchg
adc
cmp
ret
sub
ret
test
fs
lahf
jo
push
rorb
push
ja
push
cvtdq2ps
pushf
repnz
les
inc
jnp
and
je
jle
stos
pop
push
inc
push
ds
pop
stos
fisubl
ljmp
add
test
sti
and
sub
xor
call
push
jo
pushf
jne
xor
cmp
pushf
in
lret
add
stos
lret
jmp
test
test
add
adc
jge
inc
add
xor
clc
dec
and
jnp
fldenv
orl
mov
scas
clc
int3
mov
xor
or
outsb
mov
jbe
mov
xor
lcall
inc
push
or
fwait
mov
daa
scas
sti
mov
aad
pop
std
mov
mov
test
repz
jnp
jb
adc
fcompl
out
scas
in
jbe
sbb
mov
aad
out
mov
fdivrl
movsl
je
cmpsb
xchg
add
imul
movsl
data16
fidivrl
cmc
jp
xchg
frstor
call
mov
pop
inc
mov
lret
mov
push
adc
cmp
jnp
dec
incl
shl
xor
dec
in
sbbl
xor
pop
loop
lcall
outsl
or
xchg
outsl
and
and
sti
fldt
out
cld
dec
sub
dec
or
stos
pop
or
xor
cmp
popa
lahf
lods
cmpsl
and
push
les
pop
dec
in
jle
jnp
or
lret
repnz
popf
out
out
int3
adc
cld
movsl
rcrb
mov
cmpsb
fwait
arpl
cmp
test
cmpsl
jge
je
mov
dec
mov
push
xchg
push
adc
mov
mov
imul
mov
int3
inc
xchg
ss
sti
inc
jp
lcall
mov
and
pushf
out
mov
and
ret
shlb
inc
test
pop
jmp
adc
inc
fimull
repz
and
or
pop
mov
jb
insl
inc
sbb
bound
or
sbbb
cwtl
fldpi
push
adc
push
push
push
out
imul
daa
imul
outsl
adc
mov
mov
mov
insl
mov
cwtl
pop
repnz
cmp
cmpsl
inc
outsb
cmp
and
in
sub
decl
mov
inc
jae
cmp
mov
dec
mov
mov
jae
mov
add
sub
lea
push
lahf
lret
jl
adc
inc
popa
xor
pushf
push
pop
dec
fdivrl
out
sub
mov
jo
es
sub
lahf
inc
bound
jne
rcrb
push
jmp
adc
inc
rorb
loopne
cmc
es
cmc
out
les
je
lea
add
xchg
popf
inc
pop
push
sbb
push
pop
hlt
shlb
test
mov
xchg
outsb
outsb
fdivrs
imul
cmpsb
adc
sub
xchg
scas
inc
je
fs
addr16
cmp
inc
int3
inc
adc
repz
shll
cs
testb
push
imul
xchg
dec
inc
faddl
push
sbb
stos
aaa
fadds
cli
ja
fs
push
test
test
outsb
mov
cmp
lret
add
fwait
jmp
adc
xchg
adc
inc
fdivrl
out
sub
mov
jo
es
sub
lods
insb
jl
loope
push
insl
or
jae
push
pop
and
shrb
jmp
adc
inc
cmp
mov
xor
loopne
test
stos
loopne
cmp
and
hlt
sub
inc
pop
es
or
dec
loop
and
jp
dec
add
gs
lret
sti
movsb
adc
aas
fisttps
inc
sti
popa
sub
or
jle
cmpsl
gs
cwtl
dec
add
push
mulb
mov
les
sub
dec
out
add
cmpsb
push
sub
into
cwtl
inc
adc
cld
push
push
pop
lock
das
je
jne
lods
lock
adc
insl
xor
les
and
jnp
adc
clc
add
xor
jne
in
jb
dec
or
outsb
std
pusha
or
sbb
mov
sub
inc
int3
paddusw
test
jp
xor
fldcw
sub
inc
inc
jbe
mov
xor
push
and
sbb
outsl
xchg
xor
mov
jmp
push
les
mov
inc
or
pop
mov
pop
sarl
out
ret
lcall
mov
pop
jecxz
clc
outsb
cmc
jmp
mov
jmp
ret
add
ja
sub
lods
mov
lods
dec
in
sbb
pop
inc
adc
std
jmp
or
cmp
insb
sbb
or
jmp
jmp
xor
push
lea
fmull
addr16
fdivl
std
dec
ficompl
ret
mov
je
dec
repnz
xchg
repnz
mov
cwtl
inc
jne
jmp
aam
sub
out
pop
lock
xchg
outsl
cs
jno
dec
out
add
arpl
push
shll
shll
cld
and
mov
and
test
je
mov
lret
fs
add
adc
push
in
mov
push
in
sub
and
cmc
sbb
pop
shll
dec
lcall
and
mov
sub
dec
icebp
jne
add
js
lock
out
dec
in
leave
into
test
aas
mov
outsl
sub
sub
fistpll
mov
loop
xchg
call
cs
mov
push
xchg
pushf
testb
sub
ret
mov
dec
enter
out
loopne,pn
jmp
push
mov
ss
imul
push
push
bswap
xor
and
fstpl
cmp
movsl
lds
lea
clc
into
push
inc
jbe
imul
lret
push
fldt
cwtl
inc
js,pt
jo
aad
insb
std
adc
scas
mov
mov
xor
dec
ja
mov
push
scas
and
shll
arpl
mov
mov
out
gs
xlat
pop
adc
aad
fwait
mov
leave
dec
ss
or
cmp
mov
test
imul
xchg
xor
call
adc
push
imul
cwtl
inc
xchg
push
push
mov
jo
xor
stos
or
or
jo
xor
fisubrs
and
xor
in
shrb
scas
ja
stc
icebp
icebp
popa
push
sbb
xchg
jo
stc
jb
sbb
jno
mov
fstpl
inc
loopw
push
push
fwait
dec
and
sub
mov
sub
or
adc
stos
push
push
sub
sbb
add
pop
dec
fwait
in
dec
jb
jb
push
xor
fcoml
cs
lcall
inc
xor
loop
decb
mov
in
pop
loope
xor
nop
into
inc
sbb
cmp
addb
das
mov
sbb
jo
mov
sub
mov
inc
test
sub
sub
jb
call
and
loop
push
mov
cmp
gs
add
push
test
int3
xor
pushf
imul
dec
aaa
add
shr
sub
ja
add
adc
dec
dec
jmp
mov
stos
scas
loope
outsb
cmpsl
std
call
adc
fisubrs
push
into
outsb
push
push
mov
inc
lea
sub
sarl
fadds
dec
mov
test
mov
enter
outsl
push
sub
push
xchg
pop
ljmp
jb
outsl
sbb
andl
popa
ljmp
je
ret
lds
cs
fimull
movsl
cmp
movsl
jecxz
fistl
hlt
add
adc
jle
icebp
mov
cmp
or
movl
out
push
push
gs
push
pusha
inc
add
xlat
or
sub
mov
gs
arpl
dec
xchg
call
push
scas
mov
jbe
sbb
adc
add
jae
add
dec
cmp
and
fucomi
mov
pop
lea
jns
mov
arpl
sahf
pop
rcrb
daa
dec
sahf
pop
lock
pop
clc
sahf
add
incb
sahf
in
ss
aad
es
vorps
movsl
jbe
xchg
data16
test
xchg
xor
xchg
push
inc
cmpsb
and
xor
inc
mulb
loope
xor
roll
mov
inc
and
ja
in
or
xor
out
or
mov
shld
mov
xchg
out
xchg
out
xchg
out
xchg
out
xchg
stos
xchg
ret
mov
jbe
and
push
pop
inc
in
das
pop
push
in
add
fs
adc
jnp
icebp
pop
cwtl
in
movb
in
fiaddl
in
lods
pop
loop
test
in
in
lcall
fwait
xor
fwait
call
jo
jl
jb
sub
xchg
loopne
cmp
xor
out
xchg
out
xchg
out
xchg
cmp
lods
outsb
inc
adc
testb
inc
inc
sub
arpl
in
xchg
xor
fcmove
xor
aad
mov
adc
jo
adc
dec
sbb
lods
jno
sbb
mov
or
push
and
dec
or
in
sub
adc
push
dec
fnstsw
mov
pop
push
dec
movsb
fmuls
adc
jo
adc
lcall
xor
dec
lods
ret
jle
sahf
add
adc
call
push
in
lock
faddl
and
lret
push
stos
fcmovne
or
cs
mov
dec
lret
subl
aam
mov
xor
je
mov
dec
xchg
out
lock
gs
cmp
mov
sbb
and
inc
pop
data16
pop
lcall
pop
ljmp
pop
push
cmp
decb
or
inc
idiv
fiaddl
lods
mov
mov
and
fidivl
fldenv
add
pop
fwait
add
sarb
mov
pop
jo
push
out
or
sbb
orl
out
or
fsubp
les
jle
push
adc
sahf
jecxz
or
jecxz
or
jecxz
adc
pop
inc
mov
pop
xor
sbbl
mov
mov
pop
inc
mov
pusha
mov
lods
add
in
add
call
subl
and
xchg
pop
xlat
mov
pop
jg
cmp
test
das
mov
pusha
inc
or
test
ss
mov
xchg
inc
jo
xchg
pop
lcall
stos
mov
push
stos
mov
lret
es
icebp
lret
adc
sub
mov
stos
dec
lret
cltd
stos
jp
mov
out
or
jmp
push
cmp
pop
push
dec
pop
sub
dec
xor
dec
sbb
dec
ljmp
dec
loopne
aas
dec
sub
dec
lods
sub
dec
popf
sub
dec
lea
inc
jge
sahf
xchg
insl
icebp
mov
dec
lock
popa
xor
icebp
into
xchg
sbb
sbb
mov
pop
test
enter
fdivs
rcrb
mov
pop
mov
mov
jne
xchg
xchg
out
xchg
nop
rcll
jo
adc
jo
adc
jo
adc
jo
sub
mov
pop
rclb
pop
sahf
lods
decb
popf
jle
lock
and
popf
mov
xchg
cmp
fdivs
pop
dec
in
cmp
lods
push
inc
aad
rcll
popf
xchg
mov
mov
sarl
xchg
addr16
sub
sbb
dec
inc
xor
push
adc
mov
lods
lcall
mov
lret
out
or
shlb
xchg
clc
dec
jo
adc
jo
adc
jo
adc
pop
pop
mov
mov
lods
lcall
lods
mov
inc
mov
fiaddl
xchg
ljmp
cmpsl
or
jb
sbb
inc
pop
sub
push
pop
cmp
and
hlt
in
xor
pusha
or
loope
gs
mov
pop
stos
mov
pop
mov
ficompl
mov
pop
xchg
or
icebp
lret
fidivrl
xor
inc
xor
ret
fstl
out
int3
and
jmp
or
jecxz
xor
test
pop
mov
stos
add
jns
mov
inc
jle
push
jecxz
or
jecxz
or
jecxz
or
or
in
mov
or
push
fildll
pop
mov
pop
into
mov
pop
mov
pop
fidivs
cli
push
mov
push
pop
jb
push
pop
jp
push
pop
inc
adc
xor
bound
mov
pop
push
mov
pop
push
mov
pop
ljmp
pop
fidivl
pop
stos
mov
pop
mov
loop
mov
adc
mov
pop
jle
and
mov
pop
pop
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
out
xchg
pop
mov
pop
mov
mov
pop
mov
pop
mov
cwtl
cmp
mov
arpl
mov
xchg
jle
shl
sbb
loopne
pop
xchg
out
xchg
out
xchg
out
xchg
out
xchg
xchg
xchg
xchg
xchg
lcall
and
push
inc
mov
cmp
pop
jge
bts
lret
add
sbb
rep
add
jmp
or
shrl
dec
lret
mov
popa
jl
fistps
mov
repnz
cmp
fucom
dec
xchg
cmp
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
xchg
ret
mov
xor
fisttps
pop
ljmp
xor
dec
daa
sub
dec
pop
sub
dec
or
dec
jecxz
pop
cmpsb
mov
pop
scas
mov
pop
mov
sahf
scas
mov
push
sahf
ja
cwtl
sahf
outsl
incb
sahf
das
dec
sahf
and
hlt
sahf
sbb
cld
sahf
adc
in
or
and
andb
int
es
cmpsb
out
or
mov
cli
js
stos
adc
mov
pop
jle
and
xchg
imul
icebp
rcll
icebp
adc
xchg
in
push
hlt
add
insl
int
dec
pop
lret
push
jnp
int
push
xchg
lods
repnz
cmp
vcvtsi2ssl
cmc
out
xchg
out
xchg
out
xchg
out
xchg
inc
jnp
mov
fistpl
hlt
xor
sub
adc
push
mov
cmp
and
xchg
pop
mov
aas
or
xchg
mov
dec
in
push
adc
scas
xor
adc
jo
jle
xor
mov
mov
nop
jle
xor
test
sbb
out
sahf
aam
cs
jge
xlat
and
pop
imul
add
mov
and
fisttpll
or
xchg
push
mov
lods
fmuls
jle
data16
loopne
mov
insl
jecxz
or
clc
dec
dec
cwtl
sub
inc
dec
pop
rcll
mov
mov
mov
xchg
xchg
lret
lds
stos
and
push
fiaddl
mov
add
sub
push
fwait
cmp
jo
fwait
sbb
fwait
in
mov
cld
jo
fwait
lret
jo
fwait
mov
subl
jge,pt
xchg
mov
jne
and
dec
mov
clc
push
clc
or
jo
fwait
jo
fwait
pushf
jno
sti
and
js
sbb
mov
dec
in
or
dec
jnp
in
pop
data16
pop
adc
jo
adc
dec
fisubrl
xor
xlat
adc
pop
dec
in
add
mov
stos
xorb
jg
cmp
add
sub
or
mov
sbb
in
cmp
or
adc
lea
xor
xor
ficoml
jo
shll
fimull
xor
pop
xor
fisubl
xor
fidivl
pop
sub
mov
mov
fs
adc
subb
aad
jne
addr16
icebp
aas
icebp
rclb
adc
pop
pop
mov
test
pop
push
xchg
test
lock
jle
data16
sahf
mov
movsb
cmp
xchg
out
xchg
into
adc
inc
fs
sahf
pop
inc
gs
pop
jbe
push
pop
inc
push
xchg
push
js
mov
ds
in
pop
in
or
cs
clc
add
test
fiaddl
mov
or
mov
test
fbld
and
push
sub
push
ss
aam
sbb
mull
call
lods
mov
fsubrl
filds
lods
out
pop
xchg
stos
test
xchg
dec
dec
xchg
inc
loope
mov
add
cwtl
add
sub
dec
fldl
mov
clc
pop
xchg
mov
mov
jo
mov
jecxz
mov
xchg
jecxz
or
jecxz
or
pop
testb
and
lods
xor
xor
loopne
xor
mov
decb
popf
jle
outsb
test
sahf
sub
mov
mov
xor
pop
idivb
adc
loopne
mov
mov
pop
shlb
pop
mov
mov
pop
addb
icebp
outsb
xchg
jge
sahf
out
xchg
mov
jle
sahf
cmp
icebp
into
shrl
pop
jo
sbb
sub
push
nop
cmpsl
adc
mov
or
test
shlb
mov
cmp
sub
dec
dec
sub
and
pop
inc
scas
dec
mov
pop
pop
mov
pop
lahf
mov
pop
std
mov
loopne
popa
xchg
nop
add
stos
cmp
stos
stc
in
push
call
std
dec
shlb
push
push
or
gs
pop
in
mov
lahf
or
sub
inc
xorb
ss
jns
lock
daa
mov
lret
inc
push
scas
cmp
lret
and
pop
bnd
pop
ficoms
into
jecxz
xchg
lcall
and
mov
dec
pop
aas
stos
jno
rcll
pop
fucomp
mov
mov
and
andl
mov
fbstp
fwait
adc
inc
lock
dec
inc
xor
out
dec
push
sub
mov
out
or
xor
in
aaa
adc
lea
pop
adc
jge
mov
out
xchg
mov
jle
sahf
fsin
push
sahf
mov
dec
addl
insl
cmp
mov
jge
fninit
pop
fdivrs
fistps
cmp
inc
sbb
or
sub
pop
ss
lret
icebp
push
add
fwait
sub
mov
test
lahf
cmp
mov
fwait
jecxz
test
pop
scas
sub
xor
icebp
push
lcall
es
pop
xchg
jno
ja
mov
xchg
aas
pop
mov
pop
in
push
call
in
xor
rolb
add
dec
adc
xor
sahf
xchg
pop
cld
cmp
pop
gs
mov
sbb
xchg
xchg
xor
sbb
fdivl
adc
jo
adc
jo
adc
dec
mov
push
call
dec
inc
in
mov
cld
push
ss
aad
es
mov
mov
dec
adc
lds
fldl
sahf
xor
jp
imul
pop
les
xchg
jo
adc
or
outsl
push
bound
xchg
dec
ljmp
or
ja
pop
cld
add
xchg
enter
fwait
stos
push
or
mov
dec
pop
push
xor
stos
cmp
repz
cmp
lcall
nop
add
dec
daa
xor
dec
xor
arpl
cmpsb
jo
pop
push
repnz
imul
loope
sub
out
cmpsb
sub
push
outsl
jmp
aad
clc
xchg
cmp
cmc
mov
filds
mov
sub
pop
out
clc
jno
dec
in
mov
out
mov
sub
mov
fadds
ret
pop
in
ds
ret
ljmp
pop
push
or
mov
into
mov
sub
sahf
pop
clc
xchg
pop
push
jp
push
in
or
out
fistl
in
movsl
push
daa
mov
clc
out
or
xor
xchg
jmp
pusha
jnp
adc
sub
push
push
gs
mov
popl
fcomps
cmc
popf
sbb
and
pop
notb
daa
in
fimuls
mov
lods
out
mov
imul
lcall
or
xchg
ret
adc
cmp
xor
jne
daa
stos
enter
lock
pop
dec
push
cmp
dec
loopne
jmp
sub
out
repnz
shrb
mov
jo
mov
pop
push
lods
pop
inc
inc
lods
daa
pop
dec
cmc
test
stos
and
pop
xchg
pop
xchg
test
insb
mov
sbb
dec
fisubrl
xor
inc
sahf
int3
fdivrs
pop
std
cmp
and
jno
push
aas
pop
push
sahf
mov
ja
nop
and
and
stos
out
lret
hlt
stos
daa
sub
lcall
pop
fwait
nop
mov
paddusw
push
add
jmp
loop
mov
aas
fdivrs
insl
int3
test
dec
test
inc
add
xlat
into
push
xor
subb
pop
mov
out
arpl
dec
jmp
sub
dec
cwtl
sub
dec
andb
cmp
push
lock
push
pshufw
pop
jo
lcall
pop
dec
sub
jecxz
jb
insl
jecxz
push
jle
mov
xchg
pushl
daa
dec
pop
or
or
or
jecxz
adc
sub
inc
repz
insl
cmc
das
rolb
pop
fmull
jo
lds
inc
dec
fwait
sub
inc
jne
lds
mov
dec
xchg
xchg
pop
cmp
and
and
out
pop
lods
cmp
pop
jecxz
rcrb
and
sbbb
add
fisubrs
push
lds
fs
pop
ss
inc
jg
mov
mov
das
mov
xor
pop
nop
rcl
jl
push
rolb
push
pop
and
rclb
je
sbb
sub
aaa
daa
roll
inc
jo
jle
cmp
lock
subb
push
arpl
push
or
cs
xchg
jb
stos
sub
lods
aaa
inc
and
es
out
jo
call
stos
scas
or
mov
xchg
shll
or
and
imul
fwait
rorl
add
pop
popa
js
inc
jle
sub
jno
ret
dec
and
dec
push
sbb
dec
add
out
mov
repz
fwait
in
mov
mov
sub
push
jecxz
or
push
push
push
ss
cs
dec
fs
jle
enter
mov
lods
or
addl
and
push
aaa
cmp
push
out
xchg
out
pop
lods
daa
inc
mov
mov
cmc
outsl
sarb
adc
push
cld
int3
fwait
mov
in
pusha
scas
jo
cli
jo
adc
pop
jp,pn
jns
loope
lods
jns
es
vmovntps
cmp
arpl
xchg
movsl
add
mov
push
xchg
pushf
lahf
jo
dec
daa
sbb
ss
xor
pop
or
xchg
xor
mov
push
xor
stos
fmul
sub
pop
adc
inc
xor
jecxz
or
jecxz
pop
dec
push
scas
lds
xchg
push
loop
lock
repnz
dec
sbb
fucom
daa
xchg
orb
jb
je
add
dec
mov
pop
movsl
push
push
mov
cmp
add
mov
xchg
nop
ss
es
lcall
inc
sbb
nop
shll
and
lahf
cwtl
cs
xchg
inc
mov
sar
stos
xchg
cmp
xlat
sub
inc
pop
push
add
clc
jo
sub
or
xor
mov
mov
in
out
xor
fwait
int
mov
inc
repz
dec
arpl
cmpsb
or
out
xchg
mov
add
or
mov
int
push
and
movd
jo
adc
jo
adc
jo
sub
sbbb
shlb
andb
mov
movsl
mov
and
lods
lock
lret
ja
jp
dec
test
inc
stc
insb
repnz
mov
je
mov
es
dec
int3
push
xor
lcall
jb
aam
mov
and
dec
xor
jo
sub
or
fdivs
jbe
cmp
fwait
rorb
leave
shll
in
lea
add
adc
dec
shl
add
xchg
jo
cmp
ss
cmp
cld
das
or
mov
ret
js
mov
mov
jg
and
dec
out
inc
adc
xchg
mov
daa
cld
shll
pop
in
testl
sti
out
data16
or
fwait
pop
and
addl
in
lods
rolb
lods
hlt
je
cmpsl
cs
mov
push
inc
push
jecxz
xchg
pop
pushl
imul
jno
inc
dec
ljmp
fcoml
scas
or
mov
sbb
mov
enter
sub
mov
fisubrl
pop
ficoml
xor
lods
sub
pushf
ss
flds
js
adc
and
jle
dec
lret
inc
inc
sbb
inc
fisubrs
sbb
cmp
gs
mov
je
jo
sub
or
adc
mov
pop
fisttps
lock
dec
insb
mov
xchg
test
adc
jns
fmull
ljmp
stos
mov
rcrb
xor
mov
les
inc
inc
push
adc
pusha
clc
push
pop
insb
cs
xchg
leave
xor
dec
or
adc
mov
pop
shll
sub
jle
cli
or
jecxz
adc
dec
push
jl
pop
and
lahf
adc
add
inc
gs
add
mov
pop
or
enter
imul
lcall
adc
jo
lcall
mov
popf
xor
and
jmp
inc
push
cmp
jo
dec
jge
push
ret
sahf
sub
pushf
or
add
outsl
in
sbb
in
mov
pop
ffreep
sahf
lods
decb
xchg
or
sub
xor
jmp
xchg
and
mov
clc
daa
jecxz
dec
pop
xor
pushf
fstps
aaa
aam
push
subl
ret
insb
clc
push
xchg
xchg
incb
imul
fwait
cli
jo
call
mov
or
and
push
push
push
movsl
sahf
sub
stc
sahf
or
jmp
jns
ffree
ds
insl
lret
out
xor
mov
sbb
bound
inc
inc
enter
and
add
push
pop
adc
js
test
shlb
pop
mov
pop
into
daa
or
cmp
stc
rorb
pushf
jecxz
push
loopne
cli
sbbb
test
add
adc
cmp
jmp
and
js
mov
jge
in
mov
lods
sub
pop
jecxz
fidivl
adc
jo
sub
push
std
or
pop
dec
ss
sub
int3
ficoml
push
push
es
out
je
pop
leave
outsb
scas
fnstenv
inc
cltd
rcrb
scas
mov
dec
loop,pt
push
pop
sub
sub
les
cmp
in
lret
jl
aaa
int3
pusha
pop
xchg
lock
pop
nop
call
aaa
sahf
fsub
cmpb
sub
jo
fwait
test
packsswb
xor
es
addr16
shll
outsb
mov
imul
lahf
ficomps
out
xchg
out
xchg
cs
lret
sub
dec
dec
mov
add
inc
adc
jo
adc
jmp
out
mov
aas
sub
jb
pop
in
dec
add
dec
sti
mov
mov
xor
pop
pop
es
push
xchg
xchg
les
jl
jno
repz
fwait
sti
push
cmp
mov
mov
lahf
sahf
push
icebp
icebp
push
fcomi
stc
dec
inc
pop
fistpll
sarb
leave
sub
cmp
mov
pop
fbld
mov
mov
fldl
mov
lret
icebp
stos
or
insb
cwtl
cmp
cmpsb
rolb
push
push
rclb
jp
inc
out
mov
loopne
test
inc
arpl
jo
or
push
jle
nop
cmp
and
arpl
lcall
repnz
data16
sub
out
jge
test
cmp
mov
icebp
daa
nop
lcall
arpl
mov
cwtl
xor
pop
mov
xchg
sbb
or
jno
and
and
add
stos
or
xchg
mov
sbb
addr16
xchg
outsb
int
xchg
incb
mov
cmp
mov
inc
icebp
shlb
inc
les
inc
mov
lret
rorb
push
mov
jle
nop
xchg
shlb
cmp
lock
sub
push
shrl
or
inc
mov
jle
sahf
mov
adc
lret
and
sahf
jecxz
or
clc
jge
cmp
mov
iret
sub
out
cmc
adc
mov
inc
xchg
stos
push
inc
push
push
jno
jl
inc
xorb
push
mov
insb
in
les
push
xchg
dec
xchg
inc
popf
cmp
insl
lahf
mov
call
cmp
addr16
mov
push
loope
rorb
sub
cmp
pop
cmp
xlat
lcall
xor
or
ds
dec
ret
adc
pop
jp
out
sub
cmp
pop
in
pop
ss
sbb
push
outsb
lods
cmp
fiadds
out
add
push
add
mov
sahf
adc
cmpsb
pop
adc
scas
mov
je
bnd
add
stos
xchg
lcall
mov
mov
push
fs
sub
jecxz
or
add
mov
and
jecxz
xor
in
push
jecxz
mov
cli
mov
sti
and
dec
or
fs
arpl
adc
fiadds
adc
ds
je
inc
mov
jno
bnd
add
push
and
xchg
out
std
adc
add
xor
dec
add
hlt
xor
dec
into
add
in
fcoml
mov
rol
dec
aad
divb
lcall
xor
push
cmp
sub
ret
push
sub
cmp
aam
cmp
push
push
mov
enter
loopne
jmp
js
nop
add
sub
and
mov
aam
pop
mov
repnz
and
out
int3
out
push
xchg
mov
dec
loopne
ret
xchg
inc
mov
adc
adc
gs
push
imul
mov
pop
dec
mov
dec
xchg
and
ret
inc
xchg
dec
sub
shlb
xchg
push
lods
jle
loop
inc
testl
pop
xchg
jnp
cmp
test
add
outsl
fldenv
rorb
js
into
and
ja
outsb
cli
sbb
cld
aaa
stos
add
jmp
lcall
inc
loop
adc
fsubrl
aam
roll
sub
jne
enter
hlt
sbb
clc
xchg
outsl
mov
rcll
jle
xchg
lods
add
scas
nop
dec
and
dec
loop
add
push
cmp
jne
repz
xchg
adc
or
cmpsl
lods
and
es
lahf
and
and
je
les
out
jle
cmp
pop
sarl
ss
fidivl
xor
push
je
lahf
adc
ja
xchg
test
add
insl
js
xchg
addr16
push
pushf
lahf
addr16
outsl
and
enter
pop
jl
inc
lret
test
or
xchg
outsl
lock
or
imul
add
pop
cmp
jno
xor
adc
imul
fwait
daa
adc
adc
mulb
xor
push
add
mov
adc
adc
mov
nop
ja
into
js
cmc
into
push
pop
cltd
jo
ljmp
insl
test
into
push
push
add
sarl
push
fstps
addr16
clc
mov
or
jge
sti
push
sbb
cmp
ret
or
or
insl
bound
out
xchg
jl
xor
jp
imul
mov
fwait
dec
add
fimuls
jge
push
imul
imul
int3
mov
dec
jmp
test
mov
nop
ljmp
insl
sub
mov
xor
sbbb
mov
mov
push
inc
xor
add
daa
imul
add
js
or
rcll
add
int3
adc
loopne
inc
push
loope
jnp
roll
mov
xor
pop
clc
popa
fxtract
ds
lock
mov
cs
fidivrs
sbb
stc
inc
pop
mov
cmpsl
add
push
mov
loop
cmp
or
fdivl
sbb
xor
call
enter
out
ret
adc
cmpsb
jmp
sbb
sub
sub
daa
push
push
xor
movl
push
data16
mov
dec
fwait
mov
mov
lds
sbb
or
dec
or
inc
push
in
dec
mov
xor
xor
mov
ret
dec
inc
shlb
fsubs
shll
xor
cmp
xchg
aas
push
ret
adc
dec
test
adc
fidivs
or
push
mov
popa
lods
das
cmpsb
inc
fsubrs
sbb
out
push
xor
or
cmp
or
cld
inc
push
lods
push
xlat
mov
push
push
xchg
test
pop
jne
decb
jae
test
sbb
mov
loop
lret
pushf
outsl
xor
cmpsb
jle
mov
stos
rcr
cmp
bound
push
sbb
cmc
cld
sub
shl
mov
mov
ret
out
and
pop
iret
lds
ror
adc
sbb
push
outsl
repz
dec
das
jp
xchg
jnp
fisubs
les
or
call
cs
rcrb
loopne
pop
or
repnz
cltd
push
xor
cwtl
xchg
dec
push
xor
push
mov
xor
add
insb
push
inc
adc
inc
in
call
std
inc
ret
notb
sahf
test
pop
sub
cmc
leave
push
sbb
dec
outsl
dec
xchg
add
dec
push
push
mov
mov
inc
mov
inc
sbb
or
mov
mov
imul
and
or
adc
fiadds
out
es
movb
mov
lcall
add
test
add
push
and
sub
cmp
jmp
push
jne
fsubr
sarb
aas
xor
orb
icebp
pop
and
mov
dec
dec
popf
xor
jle
mov
mov
inc
das
sub
xchg
insl
jecxz
testl
cmp
mull
test
dec
adc
into
pop
cmp
shll
add
rorb
cli
mov
jp
add
les
mov
je
fwait
and
scas
mov
pop
jecxz
ds
insb
data16
mov
xchg
dec
cmpsl
pusha
cld
fnsave
or
push
das
call
ja
cmp
mov
test
mov
sbb
xor
push
jbe
movsl
inc
insl
fsts
inc
mov
aaa
inc
push
imul
mov
ret
add
pop
fiadds
fcoml
and
sbb
jo
inc
cmp
stc
rorb
das
sub
xor
das
sub
stc
nop
insl
add
mov
pop
and
aas
jbe
inc
pop
cmp
mov
or
in
inc
insb
inc
cmp
dec
std
cmc
xchg
rorb
dec
adc
jb,pn
ret
lock
xchg
std
es
aas
ficoml
jmp
shlb
xlat
loopne
popf
mov
xor
push
xor
push
imul
call
hlt
pop
popl
fdivl
adc
jge
pop
add
add
add
pop
sub
sub
xor
shl
test
test
xor
add
movzwl
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
xor
btr
mov
bts
test
add
bsf
jmp
lcall
ret
or
shr
btr
btr
mov
shl
or
mov
sub
dec
jmp
lcall
xor
add
add
pop
xor
xchg
push
bsf
add
sub
adc
xor
btr
shl
call
lcall
incl
ret
neg
sub
adc
add
add
inc
mov
mov
or
xor
dec
test
jmp
lcall
bsf
shr
not
and
not
mov
adc
and
dec
mov
mov
xchg
push
push
xchg
dec
add
add
call
xor
bt
btc
add
bsf
adc
bswap
add
mov
sub
add
cmp
add
cmp
cmp
bsf
shr
mov
shl
sub
xchg
mov
and
neg
test
shr
sub
adc
not
bts
not
cmp
jmp
lcall
ret
or
btc
bt
movzbl
shl
inc
add
and
bts
call
lcall
add
xorl
pop
xor
xchg
push
cmp
mov
mov
sub
shl
not
and
or
not
jmp
lcall
stc
add
xchg
ret
neg
sub
sub
add
shr
cmp
test
sub
btc
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
mov
sub
mov
neg
movsbl
shr
shl
shr
jmp
lcall
push
add
adc
lds
testb
mov
cld
subb
stos
sub
dec
mov
add
mov
add
add
neg
mov
btc
test
shl
not
call
lcall
add
add
or
add
shl
shl
cmp
btr
shr
call
lcall
push
add
mov
lret
call
in
dec
cmp
bts
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
btc
xor
movsbl
mov
sub
shl
add
bt
call
lcall
bound
mov
cmp
add
btc
cmp
and
jmp
lcall
inc
bts
or
movswl
or
and
xor
inc
mov
btc
not
btr
cmp
shr
test
test
not
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
sub
mov
bt
mov
btc
mov
test
cmp
push
cmp
bsf
test
shl
btc
bsf
shr
add
neg
and
bts
mov
test
shl
xor
dec
add
mov
shr
test
btc
bsf
bt
sub
xor
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
xor
bts
cmp
xor
mov
neg
adc
and
dec
call
lcall
add
mov
movzwl
add
btr
shl
mov
and
neg
mov
add
cmp
cmp
or
and
and
adc
sub
mov
movswl
movswl
adc
sub
shl
add
bt
call
lcall
mov
test
cmp
test
add
and
bts
shr
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
btc
xor
add
add
xor
cmp
and
cmp
shr
btr
mov
bts
cmp
neg
cmp
adc
mov
jmp
lcall
adc
sub
xor
bsf
bswap
or
mov
add
not
inc
mov
shr
and
inc
bts
cmp
dec
call
lcall
add
bsf
not
add
and
btr
bt
sub
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
shr
shr
bt
btc
mov
and
btr
sub
mov
and
btc
neg
add
or
sub
mov
mov
movswl
xor
cmp
mov
cmp
btc
dec
or
shl
movzwl
mov
add
add
sub
inc
bts
btc
sub
bsf
lea
inc
cmp
jne
bsf
bsf
shl
adc
add
shl
cmp
inc
add
sub
cmp
or
cmp
and
and
call
lcall
je
or
cmp
mov
dec
test
neg
not
sub
sub
cmp
not
sub
mov
bsf
shl
add
cmp
adc
add
inc
call
lcall
mov
test
mov
cmp
cmp
xor
not
not
shl
btc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
add
mov
and
and
btr
mov
add
or
test
call
lcall
add
sub
test
shr
cmp
add
neg
add
not
and
bsf
bts
and
shl
btr
or
dec
jmp
lcall
bt
cmp
xor
bt
and
btr
xor
mov
add
mov
sub
or
test
sub
cmp
shr
mov
sub
call
lcall
add
cmp
mov
shl
cmp
cmp
shr
neg
add
mov
push
pop
inc
add
loop
shr
mov
xor
btc
bts
cmp
sub
push
decl
mov
add
shl
sub
cmp
or
bt
test
sub
test
call
lcall
jmp
xchg
and
rolb
ret
xor
and
loope
inc
test
mov
push
shll
shl
btr
and
sub
bsf
not
cmp
test
push
btc
xor
shr
btc
not
mov
adc
movswl
sub
mov
test
mov
shl
or
mov
sub
mov
add
bsf
push
push
pop
add
add
call
add
xor
xor
and
test
test
not
bts
xchg
mov
test
or
test
cmp
bt
btc
mov
btr
bt
mov
xor
xor
btr
sub
call
lcall
mov
sub
push
aaa
add
mov
insl
or
adc
mov
clc
push
or
or
xor
movzwl
mov
call
lcall
mov
xor
add
btc
movzwl
and
shl
shl
cmp
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
sub
xor
cmp
mov
or
sub
mov
mov
btr
shl
xor
inc
btr
test
bts
call
lcall
mov
or
cmp
test
movsbl
cmp
neg
movzwl
neg
mov
sub
mov
adc
sub
test
shl
btc
btr
cmp
je
cmp
mov
shl
bts
test
movzbl
movzwl
movswl
and
add
test
cmp
adc
cmp
and
bts
test
cmp
call
lcall
neg
shl
mov
shr
add
or
shl
adc
sub
shr
cmp
dec
and
btr
shr
dec
bts
shl
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
btc
sub
cmp
test
adc
bt
bt
push
decl
mov
add
test
movzbl
shl
and
neg
inc
bts
btr
xor
push
decl
mov
add
shr
mov
shr
test
sub
mov
shl
add
bts
adc
mov
adc
test
test
cmp
shr
jmp
shr
or
btr
btr
test
or
inc
adc
mov
and
sub
btc
bts
mov
sub
sub
mov
or
movzbl
adc
shl
shr
shl
not
shl
sub
add
test
adc
movswl
cmp
or
or
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
dec
adc
adc
btr
sub
bts
btr
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
or
neg
neg
adc
shr
or
and
push
push
bsf
xor
bsf
or
sub
cmp
mov
shr
test
push
sub
mov
sub
sub
movzbl
inc
xor
or
btr
or
mov
add
mov
cmp
xor
test
add
bts
mov
test
call
lcall
js
shr
xor
mov
add
bts
xor
or
lea
cmp
xor
shr
cmp
and
mov
adc
mov
xor
btc
btc
sub
bt
shl
and
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
std
shl
mov
test
shr
mov
shl
neg
sub
mov
cmp
shr
cmp
or
dec
shl
and
push
bsf
test
cmp
adc
bts
sub
push
cmp
mov
cmp
add
or
shr
bsf
or
push
test
shl
btc
sub
shr
add
cmp
cmp
shl
call
lcall
mov
xor
and
or
or
cmp
xor
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
btc
neg
test
adc
mov
adc
test
call
lcall
sub
jmp
or
and
shr
shr
cmp
and
cmp
add
mov
xor
adc
btc
test
shr
and
bswap
call
lcall
mov
or
sub
btr
btr
mov
bts
adc
inc
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
or
cmp
mov
pop
jbe
cmp
add
cld
inc
repz
jb
add
jnp
jb
xchg
cmc
enter
or
jne
or
or
sbb
cmp
add
test
push
push
repnz
int3
sub
fdivrs
sub
add
dec
xor
pop
stos
add
repnz
push
xor
xor
xor
add
add
rolb
scas
mov
mov
mov
cld
clc
icebp
add
xchg
out
orl
pop
loopne
pop
add
pop
push
adc
test
clc
fstpl
pop
popl
cmpl
adc
popa
or
push
add
sbb
sbb
aam
pop
ficoms
sbb
fsub
sbb
fcompl
inc
sbb
cmp
and
add
add
pop
sbb
or
nop
inc
mov
add
sbb
adc
push
call
pop
add
dec
inc
sbb
xor
inc
aaa
cmp
dec
push
popf
pushf
inc
popl
xor
push
push
dec
pop
notb
push
clc
dec
push
inc
xor
adcl
dec
sbb
pushf
cmp
push
xchg
cmp
adc
jbe
jne
aas
xor
outsl
jle
dec
push
add
ss
push
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
aam
add
cmp
outsl
jae
and
cmp
cmc
cmp
outsb
cmp
jae
je
int
in
aam
addr16
insl
loopne
imul
call
ja
or
push
inc
mov
outsl
mov
clc
push
sub
nop
aad
imul
xchg
push
and
rsqrtps
in
movsb
idivb
arpl
repz
xchg
lods
push
mov
adc
pop
jb
shrb
cwtl
cmp
ja
gs
popf
sbb
sub
or
outsb
repnz
ljmp
jb
out
and
push
outsl
fs
dec
int
push
xor
inc
xchg
jmp
insl
cltd
sbb
dec
call
jne
fstl
jb
cs
pop
push
adc
jmp
add
in
add
nop
cmc
xchg
clc
adc
xchg
std
mov
inc
loop
sarb
sbb
aas
add
adc
gs
int3
cmp
shll
popa
addr16
add
and
jns
je
pop
loope
insb
repz
imul
imul
inc
and
cmp
bound
sub
jo
insb
pop
fs
dec
push
pop
inc
mov
push
jns
dec
add
rcl
lods
jecxz
inc
shlb
add
mov
push
push
dec
inc
push
push
or
inc
pop
mov
xchg
cli
lret
lods
or
dec
inc
add
pop
