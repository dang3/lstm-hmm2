mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
ficoms
jmp
mov
loope
and
push
sub
inc
jb
cmpsl
dec
in
clc
je
ss
xor
imul
xor
call
cmp
inc
cli
mov
loopne
push
pop
push
mov
dec
dec
pop
cmp
inc
cmp
mov
ja
mov
jb
fnstcw
cmp
shll
inc
fwait
dec
cs
sub
mov
movsl
fidivl
inc
mov
ret
fcoml
adc
dec
cli
aaa
mov
sub
push
fnstcw
mov
call
and
push
cmp
rcl
std
sti
mov
cmp
jl
jnp
push
add
es
jae
loope
jge
xor
inc
cmp
sub
mov
jle
push
cmp
jg
xor
icebp
nop
sub
popf
pop
sub
sbb
clc
jns
sbb
mov
jne
sub
xor
int
test
pop
in
js
cltd
scas
sub
scas
add
sub
xchg
inc
cmp
pop
rorl
stos
lcall
mov
iret
loop
popa
mov
pop
dec
inc
fldt
and
mov
mov
add
and
ret
je
xchg
cld
es
mov
fstl
xchg
push
imull
lahf
cmp
fnstenv
aad
mov
sahf
or
ret
ret
out
pop
out
jecxz
nop
js
inc
pusha
ss
mov
add
push
jno
icebp
push
and
mov
addr16
andb
loop
xchg
or
outsb
insb
xor
or
imul
pop
mov
js
mov
push
pop
repnz
movsl
or
push
inc
rolb
mov
pop
and
stos
push
pusha
sbbl
sarl
cmpsb
inc
negb
add
lea
sub
jmp
dec
mov
movsl
lods
outsb
pop
test
movsl
xchg
jecxz
stos
je
arpl
les
add
aas
jp
dec
mov
imul
dec
cs
in
out
and
inc
mov
rorl
nop
pop
and
xchg
inc
dec
test
loop
push
xor
xor
push
inc
or
mov
pushf
es
sub
mov
fisubs
repnz
fucom
jbe
add
xor
xchg
pop
jnp
loop
sbb
jg
in
sub
inc
push
mov
mov
push
pop
push
insb
xor
lock
out
pop
dec
lret
fsubs
imul
push
jmp
push
or
mov
cmpsb
scas
dec
stc
cli
cmp
mov
sub
dec
lds
dec
mov
insb
mov
push
ret
fnstenv
aas
xchg
rclb
pop
ror
cli
inc
mov
repnz
push
cmp
adc
adc
aam
or
jo
imul
jnp
imul
sarl
cmc
xchg
lods
js
push
loope
sarb
dec
clc
and
push
loopne
out
imul
pop
popf
jp
sahf
mov
sub
xor
mov
mov
jno
push
mov
push
out
stos
sbb
stc
int3
or
cmp
mov
testb
jo
int3
mov
cli
mov
ljmp
in
pop
idivb
and
bound
out
dec
lock
shr
jmp
push
and
aas
in
pop
fs
push
xor
out
push
push
or
pop
fisubrl
mov
mov
imul
push
out
test
sti
sbb
xchg
pop
mov
adc
ret
adc
xorb
adc
out
xor
dec
fbld
enter
lret
pop
into
in
imul
sti
add
inc
repnz
cmp
xchg
dec
rorb
cmp
mov
divl
mov
add
add
or
repnz
and
jp
mov
outsl
mov
addr16
cmc
jb
ss
fidivrs
sbb
das
movsl
test
cmp
inc
cmp
sarl
rcll
jae
pop
push
push
mov
sub
arpl
arpl
xlat
sbb
inc
cs
je
mov
xchg
test
movsb
pop
leave
mov
push
pushf
out
or
cmpsb
pop
out
mov
lcall
or
rclb
add
dec
mov
add
mov
ja
stc
push
push
xchg
xchg
in
outsl
pop
or
test
cmpsb
les
scas
inc
push
mov
jns
sub
in
cmp
push
mov
mov
or
jl
pop
test
xchg
push
inc
add
jmp
mull
fstpt
cmp
or
cmp
adc
cmpsb
mov
push
fistpll
orb
dec
push
or
mov
cmp
jae
stos
int
and
pop
cmpsb
cwtl
mov
movl
fs
gs
mov
in
clc
xchg
jne
push
das
ljmp
mov
pop
or
jo
xor
aaa
mov
add
jne
adc
inc
mov
lods
xor
inc
dec
test
lods
repz
push
lock
iret
sbb
mov
nop
lcall
lods
repz
inc
sbb
xchg
idivb
fst
sbb
adc
xor
ret
push
dec
outsb
out
lods
xlat
xchg
adc
or
popa
rclb
mov
cli
pop
rorb
add
ficoms
test
pop
pop
sti
shll
inc
outsb
xchg
test
insl
test
mov
inc
pop
bound
add
sarb
hlt
mov
pop
sbbl
imulb
addr16
jecxz
adc
stos
xor
sub
dec
mov
dec
dec
xchg
xor
lcall
lahf
xchg
push
aaa
wrmsr
rep
dec
pop
daa
mov
lcall
imul
jmp
sub
das
push
sbb
push
jmp
bnd
add
sbb
leave
and
xchg
xchg
pushw
sahf
clc
mov
stos
inc
sub
mov
and
xchg
push
xchg
jns
imul
es
addb
out
inc
sbb
outsl
aaa
xchg
jle
push
hlt
push
enter
int3
lret
or
mov
in
or
lret
mov
sti
mull
lcall
subb
cmp
mov
mov
insb
xchg
xor
cmp
sbb
popf
sbb
push
rcr
jle
int
fcoml
stos
mov
pop
add
ds
pop
ret
mov
ljmp
stos
mov
jge
jno
push
cmpsl
mov
popa
lods
push
adc
and
ja
movsl
mov
and
pop
lea
mov
test
adc
xor
add
cmpl
in
push
test
push
dec
fildl
js
cwtl
sub
aam
pop
fcmovnu
pop
out
rcl
xor
inc
daa
xor
test
pop
jmp
xchg
jge
orb
lods
insl
test
mov
sbb
lock
sub
cli
ljmp
rcrb
shrl
outsb
out
sarb
mov
xchg
xchg
andl
mov
fidivl
or
or
fstpt
cmpsl
repnz
daa
std
sub
mov
roll
in
es
mov
dec
repz
loope
and
std
cld
mov
inc
aas
out
sbbb
incl
fdivrs
cmp
jns
xor
cmp
xlat
jbe
dec
cwtl
xchg
imul
sarb
ljmp
mov
push
and
inc
jge
inc
mov
leave
test
pop
movsl
imul
xor
pushf
loope
stos
popa
inc
daa
jp
ret
daa
dec
outsb
lahf
pushf
sar
flds
es
adc
mov
xchg
dec
mov
mov
pop
pop
repnz
mov
jne
jecxz
jbe
in
mov
mov
pushf
test
xor
out
imul
jg
cltd
sub
and
iret
sub
test
xchg
popa
xchg
lcall
pop
and
xorb
dec
mov
into
lret
jl
loopne
imul
orl
and
insl
insb
dec
cmp
mov
sbb
dec
mov
gs
call
out
and
and
movaps
rorb
data16
jp
push
xchg
movsl
inc
jmp
es
xor
mov
pop
lods
xor
jge
push
pop
cmpsl
sub
sbb
enter
mov
addl
insl
loope
cmpsl
data16
push
cltd
ljmp
data16
jecxz
icebp
aad
insb
cld
adc
mov
fisttpll
lret
or
dec
cmp
mov
pop
in
int3
sbb
xchg
frstor
mov
sub
xrelease
mov
add
sub
in
cmp
or
addr16
xor
or
cmpsl
mov
mov
shlb
mov
cld
imul
jns
xor
dec
subl
std
test
loop
addb
aad
xchg
lret
popf
dec
shl
cmp
and
or
mov
sbb
icebp
test
pop
lock
and
shll
lea
mov
inc
rcr
cli
dec
add
inc
jg
fsub
xchg
scas
xchg
ja
dec
mov
cwtl
push
lds
addr16
xchg
mov
movsl
test
cmp
int3
outsb
aad
enter
or
mov
adc
sbb
cmp
push
shll
sbb
and
and
movsb
pop
in
adc
mov
adc
testl
jge
in
and
imul
push
das
mov
nop
pop
sahf
xchg
ljmp
clc
inc
add
jnp
mov
mov
mov
push
mov
adc
add
cmp
jecxz
fs
xchg
cmp
xlat
out
inc
arpl
jge
and
stc
inc
push
xchg
push
lcall
outsb
outsl
lock
ss
and
into
push
push
mov
adc
loope
ja
ss
xchg
scas
call
sub
daa
fucomp
push
in
lods
cmpxchg
aaa
sub
pusha
mov
mov
sub
mov
inc
inc
shl
xor
xor
lds
pop
add
inc
fisubrs
fldt
ja
adc
loope
mov
stos
pop
mov
mov
filds
mov
inc
or
or
xchg
cmpsb
testl
mov
mov
mov
pop
dec
sbb
pop
and
push
jo
imul
add
xchg
test
and
pop
test
imul
push
ret
xchg
mov
rcl
nop
xor
fsts
aas
fistpll
sub
cmp
xor
lea
xor
add
jp
xchg
mov
jmp
xchg
jle
xchg
bound
ljmp
insl
fdivs
mov
insb
jno
jnp
sbbb
mov
pop
outsb
cld
or
jmp
xchg
loop
fcmovb
xlat
push
mov
je
movsb
scas
push
mov
mov
xor
mov
arpl
mov
inc
add
scas
mov
ds
out
mov
add
pop
sub
inc
imul
add
cltd
adc
cmpsb
sub
dec
andb
call
xor
adc
lods
fildll
add
mov
lcall
mov
notb
movsl
pop
aaa
andb
test
cmpl
push
mov
lds
mov
aas
jo
sub
push
hlt
decb
pop
or
scas
push
mov
stos
movsl
push
test
pop
enter
outsb
cmp
idiv
cmp
or
decb
xchg
or
cld
xchg
out
cmpsl
xor
data16
idivl
inc
pop
lods
add
out
xchg
push
lds
push
sbb
dec
mov
pop
mov
lock
inc
or
push
mov
push
jbe
sbb
fs
decb
pop
sbb
xchg
xor
jno
aam
fdivp
loop
testb
dec
repz
mov
xchg
hlt
dec
cli
fwait
inc
mov
pop
std
or
and
cmp
push
jo
int3
test
je
cs
add
xchg
mov
add
dec
scas
pusha
jg
mov
fldcw
dec
push
add
out
in
sarb
add
fwait
outsl
popa
lock
push
rclb
arpl
mov
test
or
inc
inc
or
nop
or
test
adc
loope
popa
in
rcrb
sbb
sbb
scas
and
jbe
hlt
mov
sbb
mov
jmp
jl
inc
imul
or
mov
or
ror
or
pop
push
inc
rclb
xchg
push
sbb
xor
es
daa
sbb
mov
test
mov
sbb
adc
scas
add
push
pop
jl
in
out
lret
xchg
subb
pop
flds
hlt
bound
nop
pop
push
push
rclb
push
scas
fidivs
pop
sbb
ss
lods
sub
mov
mov
and
in
push
push
je
lea
mov
sahf
in
jmp
xchg
sbb
fcomps
lds
jge
iret
out
push
push
add
cmp
mov
rcl
into
or
sbb
orl
or
test
push
xchg
mov
xchg
mov
adc
xchg
pop
popa
cmp
mov
setl
enter
mov
add
in
pop
jo
sbb
scas
sbb
push
xlat
imul
push
pop
mov
addr16
bound
jns
push
sub
mov
jl
jecxz
das
pop
cmp
out
aaa
test
addr16
cmpsb
jbe
in
xor
stos
incb
inc
push
add
popa
fcomi
xchg
psllq
xor
adc
popf
push
mov
xor
dec
cs
fcmove
mov
outsl
push
cld
stos
cwtl
mov
cltd
push
sub
setl
stc
adc
sub
or
int
lret
pop
dec
push
jp
add
les
scas
xchg
inc
in
pushf
ud1
gs
rcr
jecxz
mov
cli
xlat
iret
jecxz
add
int
mov
ljmp
or
sub
outsb
dec
jns
jns
test
ss
leave
xchg
sbb
sub
fisubrs
cld
cs
sbb
setp
cs
sti
adc
push
outsb
xchg
xor
shl
test
xchg
loope
jno
repnz
sub
xchg
pop
and
scas
push
dec
cwtl
lret
xchg
adc
mov
add
push
dec
push
lret
test
push
mov
es
jle
mov
lea
mov
pop
std
add
test
mov
mov
aas
int
sbb
jns
out
les
cmp
addr16
and
je
movsb
out
add
and
les
shll
shld
mov
clc
call
jmp
push
hlt
out
nop
movsb
or
mov
sub
fisubs
and
es
jbe
sub
js
inc
cs
xchg
fwait
lret
subb
xlat
nop
aam
ss
xor
ret
jns
arpl
pop
ljmp
sbb
in
add
add
push
and
or
jle
test
int
mov
sbb
jbe
mov
fwait
mov
aad
loop
jns
inc
jge
xlat
xchg
dec
jecxz
jns
sbb
inc
adc
add
dec
adcl
fidivrs
insl
mov
test
inc
add
jp
xchg
daa
ljmp
lods
ja
insl
enter
in
hlt
dec
mov
dec
cwtl
jge
repz
cmp
dec
push
push
enter
or
push
lret
xchg
and
hlt
pop
gs
movsb
inc
or
mov
loopne
inc
mov
out
shrb
add
sbb
lds
cltd
push
lods
sbb
xchg
xor
mov
sarl
push
out
fwait
int
push
mov
push
or
mov
pop
inc
add
lret
fisubs
push
push
out
imull
push
xlat
ja
xor
cld
sbb
add
xchg
adc
dec
imul
mov
fs
ror
cmp
adc
fwait
mov
fcomps
shrb
xor
out
sarb
filds
in
enter
xchg
xchg
cs
fisubrs
add
aad
test
out
push
jge
xchg
lcall
les
outsb
jp
je
fnstcw
loope
ret
outsb
out
or
call
push
push
xor
jnp
lret
addr16
shrb
and
cli
ret
sbb
insl
fdivl
andb
fidivrs
loop
inc
jne
mov
lods
sti
bound
cmp
lcall
addr16
push
push
and
push
into
repz
mov
pop
xchg
das
loopne
outsb
daa
pop
and
loope
sub
flds
clc
lods
fs
push
mov
int3
push
popf
pushf
mov
jecxz
or
jecxz
rep
and
mov
iret
mulb
adc
scas
outsb
stos
sub
push
adc
ror
or
jge
stos
lods
loop
lds
cltd
push
push
mov
inc
stc
or
sub
dec
jmp
dec
in
scas
dec
jle
jb
inc
jge
jo
xchg
test
in
in
sub
sbb
dec
push
ljmp
xchg
out
data16
mov
mov
rcrb
and
cmpsl
cmp
add
test
xchg
inc
fwait
mov
gs
shrb
mov
add
std
xchg
sti
adc
jb
inc
bound
xchg
ja
cmc
pusha
rcrb
dec
add
inc
push
lcall
jmp
xchg
push
aam
cli
ja
cmp
mov
lcall
in
dec
popa
or
xchg
pop
sub
mov
xchg
fwait
shl
das
dec
adc
imul
xlat
popw
push
or
cmp
leave
dec
push
mov
pusha
mov
in
jge
lret
adc
cmp
cmp
jle
push
aad
addr16
inc
add
or
and
mov
in
out
or
sub
lahf
inc
mov
outsl
ds
xchg
mov
test
roll
jecxz
mov
pop
xlat
sbb
push
shlb
gs
fucomp
int
lahf
cli
test
pop
in
test
jbe
dec
cltd
or
jp
ja
andl
sbb
insl
add
dec
pop
mov
xor
mov
jo
xor
mov
rolb
jg
out
mov
mov
pop
in
inc
dec
add
aaa
push
insb
cs
sub
jbe
sbb
jb
push
je
pop
mov
stc
hlt
mov
icebp
ret
shlb
inc
cwtl
cli
fisubrl
insb
leave
call
loopne
jo
sbb
fstpl
decl
bound
gs
loope
shl
jae
lahf
push
inc
sub
fwait
negb
shll
pop
xor
insb
mov
mov
sbb
push
outsb
adc
ret
rep
add
loop
and
les
repz
jno
es
loopne
fists
aam
and
and
lock
xchg
push
cmpsb
push
sbb
jmp
add
aad
or
cmp
add
inc
addr16
pushf
push
sub
sbb
sub
mov
mov
aad
add
pop
loope
aaa
push
push
sbb
push
bound
fnstsw
imul
popa
cmp
movsb
imul
or
push
lcall
les
inc
fwait
push
dec
lcall
sub
cmpsb
mov
fwait
scas
movntq
sarl
out
fwait
xchg
push
iret
movsl
push
popf
and
movaps
lcall
xor
jns
fsubrl
scas
outsl
inc
lahf
push
jg
pop
scas
lock
sub
stos
enter
xchg
stos
mov
cwtl
negb
arpl
xchg
filds
cmp
call
pop
mov
mov
xchg
in
or
inc
adc
movsb
out
fiaddl
clc
decb
dec
sbb
add
inc
mov
mov
mull
push
mov
sti
sysret
int3
push
das
inc
js
mov
mov
ljmp
cmpsl
pop
inc
lahf
nop
out
rorb
inc
push
leave
nop
dec
add
es
lret
shrl
repnz
or
dec
popa
xor
out
loop
pop
cs
pop
mov
insl
mov
sbb
cld
jne
in
in
sbb
add
andb
mov
mov
test
push
lahf
sarl
jno
sahf
push
adcl
pusha
add
mov
adc
mov
daa
fwait
push
pop
test
ret
in
pusha
adc
data16
cmpsl
adc
jle
in
mov
jns
or
cmp
in
loope
sub
das
gs
xor
int
stos
fstpt
pusha
incb
leave
adc
xor
sbb
jmp
lret
aam
dec
fsubr
mov
jl
inc
jnp
or
cmpsl
sub
sub
enter
and
cld
pop
out
aad
out
jo
test
pxor
repnz
pop
xlat
xchg
lahf
xor
lret
jecxz
push
adc
mov
mov
dec
stos
fistpl
cld
aam
stc
cltd
jae
dec
add
cmp
pop
jecxz
mov
mov
sbb
repnz
ja
dec
out
aaa
cmp
or
cmp
imul
xchg
outsl
pop
outsl
in
ja
xor
in
mov
inc
jle
jbe
aaa
push
scas
and
jno
adc
or
lods
test
in
out
push
nop
mov
idivb
les
int3
sub
and
push
mov
lock
aad
in
lahf
loop
adc
ds
sub
sub
push
js
mov
mov
cwtl
mov
cli
sahf
push
imul
mov
xchg
inc
adc
add
pop
cmp
mov
stc
pop
insb
es
repnz
sub
jo
push
adc
mov
negl
sbb
adc
cmp
sub
shlb
fisubl
out
lcall
daa
lret
loop
test
movsb
ror
lods
sub
dec
loop
stc
cmp
inc
call
xchg
nop
out
pop
xlat
stos
or
mov
or
or
dec
loop
es
inc
mov
xlat
lock
sbb
pop
pusha
fldenv
xchg
div
push
sbb
cs
xor
lcall
icebp
xor
hlt
dec
cs
sub
xlat
es
add
and
mov
jp
inc
addr16
jo
daa
or
iret
add
jl
aas
stc
add
popf
xlat
add
push
bnd
and
sahf
cli
xchg
lds
ret
loop
and
add
sahf
jl
pop
jb
sarw
adc
iret
inc
inc
mov
arpl
imull
pop
and
loopne
push
mov
in
xchg
cli
das
add
push
dec
inc
xchg
in
sub
cld
cli
pop
stos
in
imul
and
jnp
add
cmp
mov
stos
cmp
add
adc
cmp
xchg
clc
scas
mov
sbb
add
faddl
add
push
jl
cmp
xlat
stc
outsl
je
sub
sti
mov
pop
xlat
mov
sub
mov
xchg
mov
xchg
xor
add
jb
sbb
ja
jecxz
inc
xlat
sbb
jmp
stc
mov
sub
add
leave
push
xor
lahf
cmp
pushf
cmp
or
fwait
jno
sub
or
push
pusha
js
rcll
ficoml
push
out
xchg
in
add
dec
inc
int
jmp
mov
pop
hlt
sub
aas
fsubs
mov
cld
adc
xchg
decl
pop
les
out
das
int
jge
rorl
mov
iret
rcl
ljmp
cmpsl
mov
outsl
add
push
xchg
adc
mov
adc
cwtl
sar
mov
mov
inc
iret
pop
popf
cli
add
jno
imul
repz
cmpsl
lea
dec
mov
test
movsb
dec
inc
inc
inc
push
ret
loopne
inc
test
imul
test
das
cld
pop
mov
or
std
pop
xchg
lods
xor
sbb
xchg
hlt
test
idivb
icebp
inc
inc
dec
sbb
mov
xchg
iret
adc
rolb
push
lcall
loopne
inc
and
shlb
sbb
mov
mov
pop
push
inc
push
stos
push
cmp
test
addb
fsqrt
daa
movsb
adc
push
daa
or
cs
inc
mov
enter
xor
scas
or
in
js
js
jb
add
mov
jne
mov
mov
and
fdivs
imul
cld
adcb
mov
sub
push
stos
cli
aad
dec
subl
xchg
ds
ljmp
pusha
ror
fwait
pop
daa
dec
mov
add
dec
addl
and
clc
jnp
hlt
adcb
dec
cmpsl
pop
mov
aas
mov
pop
push
stc
mov
jge
scas
adc
rcrb
push
sti
shrl
popa
lcall
xchg
call
jg
gs
repz
fcoms
xor
inc
scas
and
jmp
dec
rcll
lcall
xchg
and
pop
aas
jnp
scas
je
orb
daa
xchg
mov
sbb
gs
dec
inc
cld
out
jb
and
lcall
cld
jno
ret
push
inc
push
lret
and
or
loopne
and
pop
cwtl
inc
test
popa
inc
sbb
enter
mov
es
decb
jnp
inc
jo
fs
out
jp
or
testb
sar
and
mov
and
xchg
jg
cmp
jb
insl
push
in
sbb
push
das
sub
ret
xchg
cmp
push
aam
lock
ret
bound
std
loopne
pop
fnsave
scas
in
lea
jbe
aas
insb
fadds
nop
sbb
jno
add
cmc
shrl
scas
cltd
fidivrs
ficomps
int
cmove
arpl
push
adc
in
cmp
ja
push
push
xchg
cmpsl
out
je
lock
push
mov
pop
pop
fbld
les
shlb
add
adc
dec
int
cmp
cmp
mov
mov
cltd
jmp
cmp
in
out
in
fldenv
int
mov
jo
rorb
dec
add
inc
dec
dec
cmp
jo
or
and
sub
dec
jecxz
data16
jle
xor
xorb
pushf
outsl
rcr
sbb
push
fisubl
push
cmp
ds
fstpt
adc
and
dec
or
loope
and
adc
fldcw
adc
add
lret
ss
mov
xchg
mov
mul
outsl
push
scas
nop
ss
pop
push
inc
add
and
hlt
push
pushf
jmp
fsubrp
adc
xor
sbb
mov
call
je
fsubrl
xchg
out
ret
movsb
aam
pusha
xchg
orl
pop
and
jbe
je
mov
pop
adc
mov
adc
pop
test
addb
in
in
fsts
movsl
pop
nop
inc
or
mov
stos
out
addr16
xlat
cltd
or
cmp
nop
repz
and
scas
test
mov
out
cmp
aas
lret
call
jo
cmpsb
cmp
push
js
mov
pop
mov
cmp
test
push
push
pusha
pop
shl
out
push
add
test
mov
enter
int
jnp
adc
loopne
mov
add
xchg
adc
inc
fwait
movsl
in
jp
fldenv
xlat
loope
cmp
push
cmpsl
out
push
leave
jg
or
adcb
pushf
inc
das
cwtl
imul
adc
in
cwtl
jl
pop
mov
sti
aas
ret
sahf
xchg
pop
inc
bnd
ret
sub
in
cmp
push
daa
sbb
or
movsl
push
or
and
fidivl
lds
das
test
jo
pop
xor
push
lea
nop
hlt
sahf
cmp
and
xor
divb
out
mov
mov
in
std
pop
test
shll
je
in
adcb
lds
push
popa
call
mov
rolb
sbb
int3
inc
jg
mov
enter
and
ret
iret
call
add
dec
mov
leave
pop
jae
add
mov
js
test
shll
mov
clc
xlat
pop
mov
jmp
push
loope
mov
cmp
fisttpl
aad
mov
dec
and
jae
stc
mov
xor
insl
cwtl
icebp
fwait
xchg
repz
jne
mov
xchg
cmp
xchg
cs
testl
mov
fsubs
int
mov
xchg
lock
rolb
push
and
push
or
inc
stc
fnstsw
pop
ret
lcall
sbb
inc
mov
mov
daa
ljmp
in
lea
stos
es
jp
test
fisubs
loope
out
lea
cmp
jb
cmp
mov
dec
scas
fmul
push
jle
mov
icebp
nop
sbb
cmp
enterw
dec
sub
lcall
cmp
scas
sub
outsl
cmp
pop
sub
add
jmp
cmp
pop
rcrb
or
xor
sbb
fisttps
and
xor
in
cli
mov
incl
mov
jmp
or
xchg
in
test
mov
lods
stos
aas
test
imul
jmp
push
imul
fisubrs
cs
xchg
xchg
cmovnp
cmpsb
xchg
pop
aaa
fs
sub
dec
jo
cmp
cmp
mov
xor
ljmp
lds
outsb
mov
and
mov
int3
inc
pop
and
pop
jl
adc
sbb
ja
jmp
scas
in
adc
lock
dec
lret
jmp
jo
mov
jne
mov
pop
mov
stos
mov
sub
addr16
popa
test
jns
out
ret
fwait
pop
xlat
popf
arpl
push
jp
mov
mov
fbstp
fwait
sti
fcoml
lret
jb
dec
out
popf
mov
bound
je
shr
mov
aam
jno
sub
jae
and
xchg
xor
mov
jo
mov
mov
pop
outsl
gs
dec
lds
push
sbb
dec
sub
addr16
cli
shll
daa
leave
ret
mov
sub
sub
stos
repnz
movsb
jg
aad
dec
xor
iret
ss
mov
mov
jnp
mov
push
mov
les
popa
int
sub
mov
mov
dec
cmpsb
aaa
pop
cmpsb
dec
xchg
rorl
dec
mov
in
jno
leave
enter
in
test
movsb
sbb
dec
dec
push
out
idivb
sarb
pop
fcompl
cs
popa
mov
call
cld
xchg
ficoms
test
popa
jne
lahf
and
mov
stc
sub
das
xor
jp
scas
aam
xchg
push
gs
inc
pop
imul
push
pop
ss
push
dec
sbb
mov
fwait
rcrb
fcmovnb
cmc
outsb
cmp
bound
orl
sub
xchg
cmpsb
shlb
mov
xor
ficomps
loop
mov
xor
movl
aaa
js
cld
in
rclb
icebp
dec
mov
lock
fstpt
or
sarl
lods
and
jmp
cmp
pop
lds
add
loopne
mov
sub
mov
cmp
std
xor
pop
rcrb
pusha
cs
mov
pusha
roll
ret
mov
outsl
out
sbb
lods
inc
lret
dec
jge
out
stos
loopne
in
stos
mov
jne
call
mov
jecxz
xchg
pop
and
add
imul
sti
lods
xchg
or
mov
cmpsl
jbe
lcall
in
jo
fwait
out
pop
sub
dec
xor
aaa
inc
popl
imul
push
pop
cmp
add
inc
stos
arpl
jnp
sbb
mov
dec
cmp
fsub
jl
xchg
int
aas
xchg
add
stos
data16
repz
aad
dec
mov
mov
fstpl
xchg
sbb
addl
mov
dec
in
xchg
jp
cld
es
fidivs
pop
jnp
jbe
add
ja
ljmp
cmpsl
iret
adc
add
sbb
mov
dec
mov
sarl
mov
jo
inc
mov
pusha
mov
mov
out
lcall
in
shlb
xor
ret
leave
cmp
cmp
push
sbb
mov
fbld
jae
es
in
addr16
sub
cwtl
aam
push
jmp
mov
stos
lret
pop
inc
jb
out
popa
jne
sub
addr16
out
imul
push
loopne
sbb
nop
mov
pop
incb
mov
and
push
fdivl
pusha
in
xchg
mov
icebp
jne
mov
sbb
cmp
jne
fists
lods
test
sbb
cmp
adc
jle
pop
andb
dec
pop
rorl
nop
inc
jae
inc
xchg
or
daa
mov
mov
movsl
out
movsb
cmp
cmp
add
ss
leave
xor
cmp
notb
nop
xchg
aam
mov
xchg
inc
pop
mov
and
mov
fstl
pop
add
xchg
filds
add
cwtl
jmp
das
ljmp
jnp
enter
int
cmp
or
sahf
cmc
and
les
inc
cmpsl
fsubrs
pop
jg
pusha
aam
out
pop
jns,pt
add
adc
mov
fidivl
es
and
sub
xchg
or
sbbb
or
cmp
test
loopne
aas
pop
mov
les
add
inc
lods
insb
ja
sbb
jg
fldt
in
dec
jb
sbb
mov
jle
dec
aaa
mov
sub
lods
mov
cmp
inc
push
jmp
and
add
push
xchg
jne
xchg
lret
hlt
das
jne
push
lods
dec
or
fistpll
and
jnp
addr16
xchg
inc
sbb
pop
mov
fiadds
ljmp
shr
push
jge
jmp
pop
lret
sbb
xor
ljmp
push
xlat
or
movsl
arpl
lods
mov
push
aaa
sbb
sarl
xor
sub
pusha
and
inc
dec
adc
rcl
iret
jne
xor
pop
or
mov
repz
enter
add
hlt
xchg
jo
daa
cmp
xor
mov
add
movsb
inc
adc
rcrl
in
push
int3
sbb
aam
mov
jg
adc
lea
jl
popf
loope
out
jge
jecxz
pop
mov
hlt
xor
aad
addl
mov
mull
pop
and
repz
jge
shrb
cmp
adc
cltd
mov
aaa
shll
add
add
pop
repz
movsl
xchg
decb
in
sub
outsb
pop
out
xchg
js
into
and
pop
add
mov
sbb
sahf
jge
adc
mov
dec
scas
pop
fwait
rcrb
mov
xor
dec
sbb
cmpb
icebp
mov
fdivrs
pushf
or
rorl
fsub
inc
loop
mov
pop
daa
movsl
pop
mov
and
or
mov
add
mov
lahf
push
push
fstpt
jne
call
pop
jmp
xor
pop
inc
js
push
insl
and
pop
iret
fwait
ds
mov
cmc
jae
repnz
jg
push
stc
push
adcl
pusha
mov
ds
inc
icebp
push
sbb
cli
pushf
aas
dec
mov
inc
cs
jae
or
into
popf
adc
jg
jge
mov
loop
sub
repnz
sbb
xchg
aas
pop
imul
not
ds
mov
stos
jle
hlt
xor
adc
pop
clc
arpl
push
xor
push
stos
mov
loop
fidivrs
sbb
pop
fadd
cld
lods
adc
pop
pop
mov
lds
fwait
cmp
jb
jns
push
sbb
mov
add
and
sub
xor
outsb
rolb
pop
pop
inc
popf
pop
xchg
jge
cmp
jbe
push
lock
or
ds
out
xchg
xor
jmp
cmp
dec
int3
pop
movsb
mov
cmpsb
loope
jb
call
add
cmp
data16
pop
xorb
cltd
mov
adc
sbb
out
adc
pop
xchg
pop
js
loopne
lods
push
adc
out
fs
mov
int3
cmp
bound
jg
mov
adc
aad
stos
push
shrb
pop
xor
push
or
inc
leave
and
inc
pop
leave
xor
ljmp
rcll
jne
sahf
clc
aam
scas
or
sahf
lea
pop
and
dec
push
daa
dec
pusha
loop,pn
pop
movsl
jp
or
je
pushf
and
xchg
and
push
notl
xchg
test
pop
xchg
test
xor
sub
test
mov
cmp
push
jae
or
push
push
dec
adc
imul
mov
outsb
sub
sub
push
xchg
sub
add
enter
sti
xchg
add
cwtl
mov
or
mov
xor
ja
or
or
sub
aas
cmp
mov
lods
insb
lds
pop
push
lcall
and
cmpl
and
ret
clc
inc
int
sub
jl
and
pop
dec
cmp
push
stos
stos
pmullw
fildl
jo
push
mov
insl
sbb
mov
add
and
fucomp
std
fsubrs
test
pop
repnz
mov
xchg
xor
lret
lods
and
lods
sub
notb
push
jge
mov
lods
dec
test
push
jns
sub
jecxz
push
pushf
repnz
pop
fdivrs
cltd
out
dec
loope
je
push
inc
adc
push
mov
scas
add
sbb
or
mov
adc
pop
mov
sub
xor
dec
adc
shll
in
add
lahf
fstl
push
dec
repz
stos
arpl
cmp
leave
jns
cli
addr16
shrb
sahf
xchg
lahf
sti
xchg
sub
cld
fwait
aaa
jbe
or
lea
adc
xchg
adc
lea
mov
jno
pop
xchg
xchg
add
out
inc
mov
mov
idivl
scas
test
mov
cmp
aas
jns
add
fstl
mov
or
repz
cmp
repnz
dec
andb
lds
popf
cmp
int3
push
ljmp
pop
inc
aad
sbb
in
mov
add
inc
jnp
enter
ss
out
sbb
xchg
lds
jo,pn
test
rolb
fmul
addr16
pusha
mov
mov
adc
sbb
test
push
test
nop
movsb
adc
outsb
xchg
lahf
addr16
cmc
sbb
adc
loopne,pt
insl
fnstcw
mov
pushf
sarw
leave
xchg
jp
es
sbb
sbb
stos
movsl
or
in
or
cltd
fisubl
dec
sub
pop
push
fwait
int
test
in
data16
icebp
imul
int
pushf
in
and
mov
ficompl
pop
imul
xor
icebp
sub
pop
lahf
xor
sarb
push
sbb
fnstenv
xlat
nop
jnp
sbbb
fs
cmp
dec
inc
jecxz
pop
call
in
sbb
xchg
xor
sbb
mov
fidivrs
cmpsl
lahf
xor
not
cmp
rcll
or
jmp
fimuls
jns
cmp
mov
add
adc
addr16
jmp
cmp
and
mov
ds
xor
cmp
fimull
cmp
xchg
out
dec
leave
cmp
ficoms
popa
out
ljmp
sti
call
enter
jno
cwtl
stos
mov
je
scas
add
mov
cltd
or
xlat
push
mov
mov
mov
scas
imul
push
cmpsl
scas
adc
insb
clc
icebp
mov
cmp
orl
sub
push
push
nop
sub
inc
add
ss
jno
xor
xor
stos
jge
dec
fiadds
or
pop
fimuls
dec
inc
push
mov
scas
inc
jno
aaa
std
push
add
ss
cmpsl
cltd
test
mov
sar
les
pop
pop
imul
daa
dec
popf
fidivrl
xchg
outsb
lock
fisubs
pop
or
into
push
jmp
add
outsl
cmp
bound
pop
dec
psubb
js
add
lret
xchg
loop
mov
mov
and
stos
and
pusha
cmp
inc
negb
js
inc
loope
fistps
ds
lods
es
fadd
jecxz
mov
into
test
mov
mov
cmp
push
repz
mov
fisttpl
pop
fs
pop
jo
jmp
mov
shlb
xor
or
testb
mov
lea
in
add
imul
xchg
add
pop
lcall
fnsave
stos
add
sub
pop
xor
inc
std
pop
arpl
jo
pop
pop
out
sub
sbb
mov
out
add
xlat
insl
push
cmp
scas
sbb
jb
cs
cmpsb
frstor
iret
mov
sti
sub
lods
lea
push
add
mov
mov
push
int3
scas
inc
and
mov
mov
roll
jae
pop
cmp
push
adc
jecxz
fadd
mov
mov
mov
add
shl
nop
in
push
mov
adc
mov
leave
pop
jmp
leave
pop
inc
movsl
mov
xor
mov
or
jno
dec
je
movsl
fdivs
out
or
subb
sbb
jne
sbb
jg
xchg
iret
int3
pop
arpl
xor
adc
andl
aas
and
sbb
leave
movsl
call
xchg
adc
notl
fbstp
push
inc
out
pop
cmc
out
lcall
pop
scas
shr
insb
loopne
or
or
loope
aad
adc
adc
jnp
sbb
mov
cltd
pop
in
loop
scas
cmp
jge
sbb
fwait
sbb
je
mov
or
jae
ljmp
jo
mov
xchg
adc
jne
sub
ja
test
fwait
lret
ret
mov
dec
iret
js
movsl
andl
dec
mov
mov
sbb
sub
adc
leave
sub
ret
mov
lcall
add
push
adc
pop
ret
pop
rcrb
adc
xor
repnz
js
std
cmp
cmpsl
jle
push
and
cli
xchg
mov
stos
cltd
stc
test
in
xor
into
adc
mov
sbb
mov
fsubl
in
dec
xchg
in
pop
lods
pop
mov
add
mov
xlat
std
aaa
mov
mov
xor
fnstcw
lock
mov
pop
out
jo
inc
fsubrl
push
mov
adc
or
repnz
andb
int3
mov
sub
pop
pop
icebp
jge
data16
rorb
mov
and
mov
or
pop
xchg
xchg
mov
imul
rcr
sub
fnstsw
mov
repz
xchg
cmp
stos
andl
scas
jle
mov
pusha
sbb
xor
ds
sub
sub
ja
and
fimull
sbb
inc
push
sbb
sahf
ja
adc
xor
std
mov
out
mov
ror
xlat
jns
addl
jg
stos
mov
test
pop
push
pop
shrl
stos
sub
inc
jg
stos
out
lret
mov
dec
test
int
sahf
dec
loope
std
sbb
rcrl
lock
mov
ret
add
sub
test
and
dec
popf
mov
lretw
push
sti
leave
addr16
pop
outsb
arpl
shl
push
jge
dec
or
mov
stos
jle
add
lcall
imul
xchg
and
mov
orb
push
roll
sub
ret
sbb
hlt
popf
adc
pop
push
mov
sbb
jnp
lcall
push
movsb
cli
xchg
or
pop
incb
cs
out
pop
jo
push
sub
lret
fdivl
jbe
xchg
jb
push
pop
push
adc
xchg
cmp
add
jl
test
stos
sub
cmp
lahf
into
push
ret
xchg
repz
test
ja
or
xchg
fwait
mov
test
mov
mov
imul
inc
pop
lods
adc
jp
cld
lret
out
xchg
or
mov
ficoms
js
push
stc
push
add
dec
leave
test
cmp
fdivl
fistl
aas
push
push
arpl
dec
jle
cmpsb
add
xchg
mov
push
bound
shll
js
xlat
idivl
sub
sbb
cmp
imul
pusha
adc
in
jg
jl
inc
and
fcomps
insb
into
jle
dec
lea
cwtl
push
xchg
cmp
lar
rcrb
gs
xor
jae
insl
nop
clc
test
or
mov
mov
adc
fimull
leave
enter
mov
in
cmc
daa
sbb
dec
lcall
rcrl
je
decl
pop
loope
jb
or
mov
ret
lret
dec
movsl
mov
pop
cli
jne
xor
leave
movsl
xchg
push
or
add
rcrb
push
push
adc
jb
cmp
push
in
cmc
aam
mov
mov
adc
mov
sub
dec
add
push
and
bnd
push
adc
repz
jg
mov
xchg
sub
cmpsl
sbb
push
insl
les
jae
mov
sbb
mov
jne
cmpsb
imul
sbb
mov
push
xchg
jno
in
adc
das
cmp
repz
or
sub
or
jo
mov
vsqrtpd
incb
shrl
jae
push
dec
adc
testl
adc
inc
and
mov
inc
jno
leave
or
lea
xchg
nop
dec
insl
fbld
mov
ja
in
xor
pop
repz
or
add
cmp
testl
pop
dec
lahf
or
dec
jmp
movsb
loope
add
xchg
in
or
dec
cld
cld
outsl
dec
adc
sub
jecxz
test
andl
test
dec
add
jmp
inc
data16
loop
out
in
hlt
dec
push
pop
xchg
sbb
sti
shll
and
fmuls
jns
pushf
cmpsl
mov
sbb
mov
mov
cmp
cmp
sbb
and
iret
sbb
fisubrs
and
fdivrl
cmp
adc
xlat
orl
push
test
xlat
adc
xchg
fsubl
mov
cmpsl
ret
fst
jno
cmpsb
fisubl
pop
mov
roll
sbb
mov
mov
push
stos
mov
ja
push
dec
into
inc
xor
pop
xchg
cld
jnp
xchg
insb
jno
mov
lea
out
movsl
bnd
or
ss
nop
mov
sub
ret
clc
mov
or
push
cmpsl
push
jecxz
ss
pop
cltd
rcrb
pushf
push
test
pop
mov
fnstcw
mov
lock
mov
test
cmc
add
hlt
faddl
arpl
mov
call
cmp
push
jge
lea
leave
dec
pop
push
adc
sti
addr16
arpl
out
pop
pop
or
popa
lahf
fbstp
mov
push
adc
xchg
je
mov
dec
jnp
dec
pop
mov
dec
inc
inc
xlat
push
dec
into
ds
xlat
cmp
xchg
outsl
int
out
gs
clc
lea
dec
cmpsb
fbld
test
fmulp
aad
enter
mov
or
shlb
dec
and
add
test
adc
ficoms
shrl
cli
lret
faddl
test
lret
js
sbb
mov
sub
rcr
lea
or
clc
shlb
or
aas
inc
mov
enter
aad
in
add
cwtl
daa
repz
cmp
pop
insl
outsb
xchg
mov
loopne
lret
and
fldenv
inc
push
sub
divl
lods
push
in
dec
sub
jg
movl
dec
imul
imul
jne
and
push
fbld
repnz
addl
xchg
adc
sub
add
mov
jecxz
adc
pop
dec
lcall
pop
jp
hlt
jb
push
shrb
jns
fmull
mov
adc
test
pop
lahf
and
in
push
lret
sub
mov
push
stc
jns
outsb
cmp
mov
lock
flds
mov
test
shrl
rcrb
pop
ds
fstpl
mov
add
jge
or
daa
movb
or
decl
xchg
cmp
shll
pushf
push
xchg
mov
ret
mov
push
lock
nop
out
cmp
out
fwait
ret
test
xlat
into
loop
imull
and
loope
scas
xchg
sbb
fs
loop
xor
xor
push
dec
sbb
inc
add
push
push
lret
sti
rorl
jl
lret
call
and
mov
iret
rolb
jle
mov
mov
cmp
jns
mov
sbb
and
test
imul
fists
outsb
cmpsl
lock
sbb
fwait
xbegin
sub
out
sbb
in
outsl
lds
inc
inc
scas
daa
cwtl
ds
out
lahf
shlb
fdivl
inc
lahf
data16
js
inc
cltd
nop
or
mov
cmp
ffreep
into
cli
cmp
lea
cmc
jae
mov
mov
xor
lock
sbb
lds
loopne
repnz
mov
push
jg
repz
gs
xor
movsb
stos
subl
xlat
push
jno
stc
jecxz
stos
push
filds
mov
and
testb
test
int3
cmp
mov
dec
test
ja
xchg
xor
fcmovnb
cmpsb
pop
dec
jae
push
je
fwait
jmp
xchg
fiadds
ds
jmp
cmp
fs
nop
ljmp
jle
imull
push
and
lock
dec
fwait
les
sahf
cmpb
xlat
jns
xchg
into
mov
push
cmp
pop
mov
mov
add
mulb
inc
xor
leave
add
inc
adc
cli
jecxz
mov
shll
mov
pushf
orl
push
sub
mov
ret
jl
imul
popa
mov
jp
lcall
inc
shl
push
or
push
mov
movsl
add
test
jae
and
int
push
push
jmp
cmc
pop
adc
xchg
fs
xchg
popa
inc
fwait
push
daa
mov
push
int3
xchg
adc
inc
push
je
icebp
call
sub
xchg
out
lret
add
fwait
sub
cmp
mov
and
jmp
xchg
pop
inc
jne
jmp
pop
rcrl
jp
cld
fbld
lahf
adc
cs
subb
je
inc
fldt
add
jmp
mov
ds
xor
imul
cld
sbb
fiaddl
gs
cltd
test
insl
ja
gs
pop
outsb
jnp
aam
and
dec
add
movsb
in
xchg
xchg
fiaddl
sbb
mov
lods
inc
movd
imul
add
in
xor
shrb
cmp
cltd
enter
std
push
mov
clc
je
pushf
xchg
ja
out
lcall
pop
cmpsb
outsl
vpcmpgtd
add
pop
push
cmp
in
push
bnd
adcb
loope
pop
cmpsb
mov
cmc
mov
arpl
sbb
scas
cli
outsb
bound
push
sub
add
sbb
inc
enter
ljmp
jb
cmp
imul
pusha
mov
int3
cmp
ja
mov
hlt
inc
sti
addr16
mov
and
cmpb
sbb
jg
or
cmp
ret
aam
sbb
mov
adc
cmc
cs
gs
dec
push
mov
push
adc
jl
xchg
xchg
xchg
cmp
sub
add
fwait
leave
add
into
int
insb
fs
orl
cli
arpl
push
rdpmc
and
mov
testl
xor
iret
iret
shll
in
cmp
sbb
outsb
mov
dec
cmp
in
jb
sbb
fcompl
aaa
iret
dec
jne
das
in
jg
push
ljmp
xchg
jecxz
mov
add
push
mov
pop
add
cmp
lret
imul
or
hlt
sbb
bt
shll
imul
cmpsl
lock
test
inc
inc
in
xchg
lcall
scas
adc
jp
faddl
mov
push
mov
mov
sbb
sub
lahf
movq
xlat
test
stc
hlt
rorl
mov
dec
movsb
ret
sub
icebp
pop
jle
fcomp
mov
bound
xchg
pop
add
sahf
jb
in
inc
ja
pop
jge
mov
cltd
inc
cmpsb
stos
adc
inc
push
cmp
add
addr16
rcll
jg
arpl
xchg
ljmp
mov
xor
jo
mov
jno
mov
jno
push
and
push
sub
add
mov
push
fsubrs
cmc
cmp
push
lods
dec
es
lods
sbb
aas
cmpsl
sbb
testb
fwait
addr16
mov
dec
mov
mov
mov
sahf
hlt
cmp
push
std
inc
sbb
stc
dec
push
shll
es
cmp
test
add
lea
popf
sahf
les
adc
and
adc
pop
orl
mov
lret
push
lea
lcall
mulb
push
cld
movsl
sub
out
lods
aas
inc
xor
imul
mov
fisubrs
or
jno
inc
adc
ret
or
aad
iret
and
push
in
mov
cltd
pusha
arpl
lret
ret
aam
and
mov
insb
dec
mov
jge
andl
sub
call
or
fiadds
mov
pop
jg
sub
jg
pusha
mov
or
xor
push
cmp
adc
mov
or
cs
mov
inc
or
add
movsl
jno
std
sti
adc
push
je
push
ret
syscall
mov
mov
in
pop
mov
mov
push
lods
daa
jb
pop
mov
out
rcll
mov
mov
fldenv
cmp
or
popf
jg
loop
mov
loop
test
dec
xchg
aad
jl
lds
fnstenv
push
enter
scas
inc
aad
adc
sub
push
mov
mov
je
or
clc
roll
scas
bnd
inc
jp
sahf
xchg
lret
pop
and
jno
dec
dec
mov
aas
test
and
loope
dec
popa
xor
ljmp
ss
push
ret
in
mov
xchg
ds
sbb
imul
movsb
dec
add
pushf
in
or
mov
xchg
pop
imul
ds
pop
cmp
xor
pop
lahf
clc
fsub
hlt
pusha
fcomps
out
or
mov
aad
pop
sbb
dec
push
stc
sar
call
cmova
mov
fcmovb
or
loop
adc
in
xor
stos
aaa
mov
aaa
cmp
sub
fs
test
add
mov
xchg
outsl
imul
cmp
test
jecxz
mov
pop
push
ds
fwait
out
loope
push
cmp
xchg
lods
ret
inc
aas
das
insb
loopne
add
jns
pop
outsl
call
sbb
xchg
gs
vmread
cmp
lds
daa
cmp
sbbb
add
xor
ss
jle
orl
jns
or
or
jmp
mov
repz
cmp
pop
nop
mov
movsb
out
push
jne
fstl
outsl
xor
out
stos
jg
ss
mov
cmpsl
repnz
call
lock
movsb
hlt
mov
das
push
cmp
jb
dec
icebp
cmp
dec
fimuls
and
add
pop
or
int
aas
scas
std
inc
cwtl
rolb
loop
jl
xchg
testl
pop
in
stos
imul
cmc
pop
loopne
clc
xchg
test
pushf
inc
pop
nop
lcall
ret
std
inc
xchg
sbb
aas
loop
sub
jo
sub
or
inc
inc
sbb
cmp
das
lods
sub
lods
pop
ds
pushf
inc
lcall
scas
push
arpl
out
or
inc
cmpsl
loopne
movsb
cltd
jmp
inc
adc
popf
movzbl
and
fldenv
adc
cmc
in
pop
fsubrs
popa
movsl
aas
lret
scas
xchg
dec
sarl
lret
ret
mov
movsb
push
xchg
in
loope
insb
movsl
stc
sbb
cmp
in
arpl
std
icebp
mov
mov
cwtl
mov
imul
mov
in
loop
rcrb
or
push
incb
adc
xlat
subb
dec
sahf
imul
andl
leave
shll
inc
jge
in
adc
ljmp
dec
out
aam
pop
cmp
sti
or
jb
sub
xor
push
pop
cmp
inc
xor
out
shlb
fldt
cmp
inc
lret
popa
mov
or
into
pop
sub
sti
fistps
push
test
mov
pusha
push
pop
mov
add
or
xor
sbb
lods
and
arpl
xlat
shrl
inc
and
aad
xlat
sbb
mov
sahf
push
jb
mov
aad
cltd
mov
je
sub
stos
rcl
clc
xchg
in
test
push
out
loope
xchg
inc
insl
mov
xor
cmp
in
inc
aaa
push
sbb
jo
mov
sti
clc
xchg
or
inc
shrb
jg
xchg
sbb
push
outsb
fidivs
mov
fildl
cmc
mov
mov
cld
pushf
movb
rcrb
cmp
faddl
add
mov
es
call
and
cmc
or
mov
inc
dec
mov
sub
and
jge
cmpsl
dec
repz
lods
add
jp
sbb
insl
add
mov
pop
shl
add
and
js
aam
lods
movsl
push
sti
enter
popa
ret
xlat
inc
mov
data16
mov
pushf
push
push
add
cs
loop
outsb
sub
mov
imul
inc
test
cmp
adc
inc
push
imul
mov
pop
fucomp
icebp
cmpl
push
lds
int3
xor
dec
pop
popa
pop
aas
fs
hlt
js
test
int3
dec
xchg
mov
leave
jo
xor
pushf
sbb
jecxz
inc
popa
pop
ret
pop
add
mov
inc
jmp
xor
cmc
ss
out
push
hlt
xlat
dec
scas
fimull
and
out
psubw
mov
sub
cmpsl
xchg
daa
or
inc
daa
or
js
mov
sbb
xchg
mov
mov
shlb
popf
xorl
lahf
xor
popa
je
frstor
imul
imul
mov
xor
inc
pop
push
xchg
mov
adc
jno
cltd
into
fcmove
jne
rolb
inc
mov
lret
mov
jo
sub
mov
dec
js
lcall
loope
imul
and
mov
clc
es
stos
outsb
sbb
and
fistps
loopne
mov
dec
xchg
mov
pop
push
mov
shrb
cli
call
out
js
jecxz
call
mov
xchg
mov
js
dec
fnstcw
dec
out
mov
push
xchg
imul
push
pop
and
imull
xchg
xchg
or
fbstp
dec
mov
icebp
mov
jl
shll
faddl
es
shlb
inc
sahf
push
pop
and
sbb
std
pop
dec
inc
xchg
add
ss
lret
sarb
sub
int3
adc
cmp
adc
icebp
pop
insl
xchg
or
xchg
add
mov
xchg
mov
sbb
repz
daa
insb
fcompl
arpl
cmp
cmp
aas
shlb
jecxz
call
inc
pop
in
sbb
inc
adcb
pop
jae
gs
lret
inc
repnz
jge
jge
sub
addr16
push
int3
cld
mov
mov
test
inc
mov
mov
cmp
mov
scas
rol
scas
mov
pop
subl
sub
mov
and
out
pop
dec
aas
movsb
xchg
bound
dec
xchg
xor
cmp
sbbb
clc
pusha
stos
rorb
pushf
ja
fdivs
ds
xchg
or
imul
mov
in
fadds
jg
pop
test
xor
sub
push
ret
sbb
cmp
loop
popa
aam
or
push
cmpsb
inc
pop
clc
add
cmc
aad
and
dec
pop
pushf
xchg
jo
pop
enter
notb
mov
xchg
or
es
xor
adc
xchg
sbb
mov
fadd
add
iret
jle
jns
xor
mov
add
std
dec
mov
insl
sbbb
push
inc
lret
dec
call
jb
repz
jecxz
cmp
xchg
push
std
mov
adc
or
mov
xchg
push
cmpsl
jge
mov
jnp
pop
adc
mov
int
fisttpl
or
adc
testb
mov
mov
dec
pop
dec
sar
ficompl
loope
mov
push
movsb
xor
fistl
jecxz
push
or
loopne
insl
insb
adc
mov
ss
fisttpl
mov
cmp
negb
clc
loop
adc
mov
mov
mov
xlat
loope
aad
xchg
in
gs
test
in
cli
ds
cltd
lcall
adc
and
cmp
int
add
sub
das
dec
addr16
sbb
inc
mov
xchg
adc
call
int3
cmpl
mov
popf
adc
push
pusha
add
sbb
sub
enter
rol
lret
pusha
loop
or
push
into
mov
pop
cmp
add
test
xchg
arpl
icebp
cmp
and
and
dec
mov
sbb
add
clc
adc
dec
stos
shlb
adc
sti
ficompl
fcmovne
stos
push
and
repnz
pop
cmp
mov
pop
aas
enter
mov
js
repnz
push
aam
mov
jp
and
mov
scas
out
mov
push
xlat
push
lods
pop
mov
jno
dec
inc
enter
movntq
xor
sbb
lcall
pop
andb
mov
cmp
and
sub
push
rorb
into
je
hlt
mov
pop
or
stos
movsb
imul
subl
and
mov
or
stc
xchg
lds
add
push
fiadds
sub
sbb
cmp
adc
xchg
popf
dec
ljmp
cld
dec
and
xchg
inc
adc
or
loope
in
in
daa
push
or
mov
mov
jl
pop
xchg
xchg
sbb
inc
mov
movsb
push
or
mov
jg
push
inc
std
adc
das
or
add
push
push
push
pop
stos
lods
mov
rcrl
push
rcrl
pop
push
and
lea
xor
test
add
mov
shll
mov
push
jecxz
mov
and
cmp
jne
movsl
sbb
dec
sbb
dec
cmp
fbstp
sbb
outsb
data16
movsb
mov
xchg
add
inc
xchg
push
dec
aam
fucomi
mov
int3
cwtl
pop
jne
mov
rcrl
add
rep
addl
mov
sbb
sbb
aaa
sbb
ds
dec
sub
adc
adc
xchg
jbe
jno
xchg
xchg
pop
addr16
sub
mov
or
sysenter
ja
insl
rorl
sub
flds
imul
dec
jecxz
int
dec
sbb
or
cmp
xlat
mov
in
ret
ret
mov
pop
fdivrp
inc
outsb
xor
jns
jmp
mov
cltd
subl
and
bnd
inc
dec
adc
jnp,pn
fldt
push
push
inc
push
outsl
push
nop
stos
mov
or
addb
xchg
cmp
insl
pushf
mov
inc
sbb
ret
pusha
pushf
cmp
sub
out
cmp
push
shlb
pop
scas
ret
cmp
xor
lods
mov
das
mov
jmp
std
and
shlb
xchg
movsb
lcall
lods
xchg
leave
js
scas
cmpsl
out
push
popa
xchg
test
jecxz
or
insb
mov
pop
xchg
push
int3
xor
into
and
sbb
cmp
icebp
push
jle
sahf
test
lret
sbb
aaa
mov
scas
cmpb
and
daa
insl
scas
clc
and
sti
in
outsl
push
adc
or
hlt
js
aaa
adc
mov
fidivrl
mov
xlat
popa
mov
jp
mov
insb
mov
pop
rol
loopne
sub
jle
mov
cmp
rcr
imul
out
movsb
or
cmp
sbb
add
inc
les
xchg
jp
cmp
fwait
test
orl
data16
sbb
cmp
or
into
inc
mov
lods
jns
mov
out
call
jae
cmp
dec
fsubs
mov
test
aad
fists
sbb
pop
mov
pop
repnz
nop
loop
mov
pop
xchg
je
movsb
push
jbe
das
outsl
cld
xchg
imul
mov
and
sbb
adc
dec
filds
fcmovnb
test
dec
or
pop
test
sub
dec
pushf
xchg
insl
jmp
pusha
stos
or
rcrl
dec
addl
and
cmp
or
pop
jle
push
mov
jno
pop
mov
adc
and
and
lret
addr16
adc
lds
push
xor
add
arpl
aaa
lock
mov
lret
mov
xchg
xor
nop
in
repz
mov
incb
dec
cmp
or
pusha
mov
das
aas
in
mov
inc
inc
jle
xlat
mov
mov
sbb
pop
arpl
sbb
mov
gs
inc
lods
sub
jbe
arpl
stos
addr16
js
fs
stos
xchg
inc
sub
loop
pop
stc
fcompl
test
jg
xchg
xchg
mov
test
mov
sbb
jnp
jle
mov
shlb
addb
out
out
jns
jno
or
cmp
cmp
ret
jne
mov
stc
xlat
push
sub
xor
adc
xor
pop
aas
pop
js
mov
inc
icebp
push
imul
ds
aaa
cltd
adc
das
push
sub
rorl
callw
sbb
insl
xor
push
and
pushl
mov
inc
fs
jno
jae
adc
loope
ss
push
inc
hlt
stos
add
and
mov
fimull
fiaddl
cli
add
fistpll
clc
jbe
stos
mov
iret
jecxz
aam
xchg
sbb
or
es
jns
push
movsb
in
add
add
or
jl
aam
xchg
inc
push
test
jmp
js
sahf
push
sbb
loope
stc
setae
cwtl
inc
xchg
sbb
aam
xchg
in
push
cmp
dec
inc
xchg
call
mov
lds
xchg
call
scas
or
push
or
cmp
jg
ss
ljmp
pop
pop
sub
clc
push
js
enter
cmp
mov
adc
xor
gs
or
xor
xlat
cmp
addr16
shrb
inc
imul
test
test
fs
push
aam
mov
iret
inc
xchg
dec
jmp
imul
das
movsl
gs
scas
push
mov
xchg
rclb
sbb
sub
mov
cmp
cwtl
fmul
adc
lahf
ja
adc
imul
clc
icebp
daa
cmpl
insb
ja
adc
pop
iret
xchg
sbb
or
adc
inc
add
lods
iret
cwtl
xchg
mov
pop
xor
sbb
nop
xchg
mov
xorb
lods
inc
pop
fcomp
mov
push
and
outsl
xchg
pop
jecxz
stc
ret
ja
stc
pushl
pusha
adc
pop
jnp
stos
pop
or
mov
xor
fdivp
xorl
in
mov
arpl
mov
dec
pop
push
inc
test
mov
call
add
je
lods
cmpsl
jl
pop
fldl
mov
push
or
orl
pop
sub
and
xchg
stos
std
aam
jg
divl
mov
insb
rcll
scas
out
pop
leave
mov
icebp
xor
inc
andb
out
and
sahf
lods
mov
fcmovbe
and
clc
mov
adc
int3
adc
jge
inc
arpl
sbb
aad
xchg
pop
lods
sbb
je
andl
outsl
lods
cli
add
mov
xchg
ret
mov
mov
xor
sub
cmpsb
dec
pop
add
shrb
xlat
xchg
sub
mov
dec
pop
gs
xchg
push
add
mov
or
sub
xchg
sbb
jecxz
popf
fisttpl
in
xorl
cltd
xor
repz
mov
lcall
xor
and
leave
sbb
lea
push
mov
mov
cmp
ss
imul
mov
and
push
xor
jl
jp
cmp
fadds
data16
dec
mov
xor
adc
xchg
cli
fwait
adc
jae
jb
mov
sbb
lock
mov
and
ja
inc
jl
aas
inc
jb
push
jle
mov
jo
subl
inc
fcmovnb
lods
lods
in
xor
or
or
dec
cmpsl
call
roll
int
fstl
ret
outsb
arpl
cmc
or
sbb
pop
dec
stos
add
ret
pop
sti
out
call
push
dec
xchg
ds
pop
dec
and
maxps
jecxz
mov
lcall
add
adc
or
dec
pop
mov
dec
push
sti
mov
ds
push
aaa
mov
sub
ljmp
adc
ss
loope
or
cmp
sbb
jl
cmp
push
testl
sbb
cmpl
push
xor
jg
dec
es
adc
xchg
sahf
lret
subl
mov
adc
out
cwtl
dec
pop
popa
sbb
adc
push
sub
orl
movsb
sti
in
je
mov
fstpl
mov
sbb
hlt
testb
data16
jae
mov
add
cltd
sub
push
inc
adcl
jnp
rorl
outsb
lods
or
mov
pop
inc
inc
or
js
je
push
sar
roll
xchg
push
call
push
dec
mov
mov
jno
or
shrl
outsl
dec
xchg
mov
mov
test
pop
and
repnz
push
mov
ds
mov
sbbb
ret
sbb
pop
push
inc
addr16
mov
jbe
or
je
or
add
pop
daa
loopne
notl
sub
jle
cwtl
push
mov
ljmp
add
je
pop
adc
aam
es
gs
cmp
xchg
bound
pop
and
xlat
call
movsl
in
bound
idivl
mov
lods
call
rorb
mov
pop
test
in
pop
xchg
sbb
mov
mov
push
imul
movsb
ljmp
ja
xchg
push
pop
insb
cs
xchg
jle
cltd
sub
repz
cmpsb
ret
sbb
pop
add
xchg
xor
lret
testl
shll
fildl
push
rolb
xchg
subl
jl
lods
ljmp
dec
dec
ja
lret
insb
negb
mov
repz
in
sbb
inc
sarb
mov
mov
add
jae
jmp
pop
pop
loopne
pop
sbb
sti
xchg
call
addr16
adc
popf
mov
sub
inc
mov
jne
mov
jmp
adc
test
jecxz
jae
shrl
ljmp
jno
add
sbb
push
das
in
lret
pop
push
sub
cltd
test
out
repnz
das
cmp
xor
not
out
je
and
sub
sub
inc
mov
dec
loope
mov
inc
out
scas
and
insb
and
cmpsb
shll
shrl
sarl
addr16
movaps
or
fists
repnz
icebp
movsl
inc
push
mov
cmp
shl
stc
jecxz
cmc
mov
shlb
sbb
outsl
dec
stos
iret
adc
clc
jae
shl
insl
xchg
lds
lret
das
lret
lds
xlat
jne
xchg
pop
dec
cmpsl
inc
lds
fstpt
cwtl
mov
lods
sub
addr16
push
sbb
pop
iret
or
mov
mov
in
xor
push
sbb
subl
dec
jge
icebp
jle
stc
pop
adc
mov
adc
pop
mov
loope
adc
adc
mov
jo
movsl
icebp
ljmp
mov
mov
inc
outsl
dec
into
jno
icebp
inc
frstor
insb
stc
cmp
rcll
or
xor
xchg
lods
ja
inc
pop
cld
insl
test
cli
mov
mov
lret
jl
icebp
push
cmp
add
jp
sbb
dec
sti
pop
clc
imul
and
lcall
and
pop
fiaddl
addr16
jnp
mov
inc
stos
jmp
popl
out
bound
mov
aam
repnz
or
lcall
dec
scas
fmull
mov
mov
jle
outsb
jae
adc
rclb
and
imull
shrb
push
fs
out
dec
enter
sbbb
xchg
out
daa
test
lds
sub
ja
movsl
fdivs
jo
in
push
pop
fsubrp
jl
rcrb
ja
cli
outsb
shrb
sbb
loop
jge
das
cmp
bound
cld
mov
ficompl
mov
add
xchg
rclb
or
repz
out
jb
js
sub
cmp
cld
push
adc
jmp
push
lds
cwtl
xor
add
mov
and
pop
lret
cmp
test
xchg
mov
push
cmp
adc
imul
inc
inc
and
inc
xchg
jo
ret
jbe
sub
in
xor
xchg
mul
imul
mov
push
jnp
xchg
out
xchg
cmp
sbb
mov
sub
sbb
out
or
fistps
rorl
mov
and
inc
jbe
and
mov
cmp
lods
popf
scas
inc
jle
and
add
in
fcompl
dec
and
or
pop
jl
shr
iret
mov
cmpsl
cmpl
sub
or
mov
or
push
jnp
stos
push
scas
xchg
lea
cld
mov
aad
aad
and
les
iret
cmp
xlat
sahf
mov
push
bound
std
pop
les
mov
xor
enter
shl
call
mov
pop
negb
out
xor
loop
insb
in
mov
adc
sahf
or
mov
mov
pop
hlt
fcomps
inc
js
lret
xor
cmc
out
test
enter
or
jbe
xchg
outsl
or
fbstp
ja
sub
jne
mov
xchg
mov
test
xchg
je
xchg
and
cld
pop
scas
call
out
add
mov
xchg
sbb
pop
das
lock
cmp
mov
xchg
mov
xor
jmp
mov
ret
leave
adc
jmp
adc
in
jnp
inc
sbb
mov
push
xlat
sub
fmull
rcll
int3
sbb
inc
mov
scas
add
jbe
rcrb
out
dec
lea
int
das
mov
shl
fwait
inc
push
insl
cs
lods
mov
xor
lods
dec
insl
and
or
xor
cld
sbb
inc
clc
loop
imul
sbb
sbb
inc
mov
addb
push
loope
clc
sahf
cmp
popf
icebp
cmp
push
mov
push
pop
push
ljmp
mov
adc
mov
mov
ss
adc
mov
pop
ds
ja
jge
in
jbe
movsl
outsl
sub
push
xchg
xchg
cmp
xor
pop
inc
sub
test
xchg
inc
fistpl
fldenv
mov
mov
shlb
jae
stc
divb
mov
or
jl
sbb
push
push
mov
lock
imul
inc
scas
fld
popfw
ljmp
push
ss
subb
popf
pop
js
jns
fstpl
es
push
jecxz
addr16
xchg
inc
imul
mov
xchg
dec
push
pushf
addr16
cmp
enter
add
jp
xor
pop
mov
mov
and
jge
cmpsb
loope
push
jbe
stos
ja
popa
jb
cmc
incb
scas
mov
mov
sub
pop
sbb
mov
inc
lcall
sahf
aas
jg
xor
enter
mov
dec
orb
mov
outsb
fldenv
xchg
fwait
test
outsl
sub
clc
or
mov
or
push
in
lods
arpl
mov
add
lods
sahf
iret
and
cmpsb
adc
movsl
ljmp
in
sub
aas
adc
jo
jecxz
lret
push
adc
dec
pop
adcb
xor
add
cmpb
mov
mov
sub
jle
dec
scas
dec
popw
rorb
or
ja
rcrl
inc
cmp
jl
xchg
stos
shl
lret
mov
mov
repnz
pop
mov
cwtl
lds
cwtl
aam
sub
pop
sbb
mov
shl
loope
aam
call
inc
cmp
outsb
sbb
jb
inc
pop
fldenv
fsts
xlat
or
xor
cmp
arpl
shrl
mov
repnz
fnstcw
hlt
cmc
jbe
push
scas
push
jb
push
xchg
loop
pop
mov
pusha
xor
ja
cmpl
mov
xchg
ror
pslld
push
cmp
pushf
icebp
sahf
pop
xchg
int3
xchg
push
mov
inc
mov
xor
rcr
cmp
cmpsl
jmp
jbe
mov
pop
xchg
jno
js
nop
mov
jo
and
xor
sub
stc
ret
outsb
cmp
imul
add
cmp
xor
stos
adc
pop
addr16
fcmovb
jecxz
scas
orl
mov
adc
pop
call
or
jnp
cmc
lahf
enter
or
sub
popa
out
pusha
sbb
xchg
stc
cmp
push
xor
mov
jns
cmp
out
repnz
xchg
outsl
cmpsl
sbb
test
pop
sbb
das
and
test
sbb
sbb
pop
push
pop
push
jmp
outsl
xor
out
xchg
push
scas
or
ljmp
adc
mov
sub
xchg
mov
rolb
mov
clc
fdiv
or
insl
iret
adc
jbe
shrb
clc
mov
dec
sub
xchg
push
push
test
xchg
pushf
mov
out
pop
dec
xor
or
orl
pusha
ds
xor
push
mov
mov
test
sub
aam
mov
pop
or
iret
xchg
or
and
mov
outsl
sti
add
add
bound
push
push
nop
sbb
sub
mov
jns
out
leave
xchg
xchg
sub
out
push
sub
ljmp
mov
mov
lahf
adcb
std
fdivl
dec
lods
int
pop
daa
fnstcw
inc
mov
pop
cmp
bound
jp
or
cmpl
das
lods
addl
stos
inc
or
aas
push
push
dec
or
mov
mov
sbb
popf
ror
ds
sbb
cmp
cmp
cmp
cmpsb
popa
cltd
dec
call
pop
inc
push
inc
dec
xor
and
jge
js
test
int3
das
orb
mov
xor
mov
jl
push
lods
sti
fdivs
loop
sahf
mov
pop
outsl
inc
rorl
xlat
or
cmpsl
inc
fmuls
icebp
pop
or
cmp
or
stc
loopne
push
xor
jg
dec
outsb
mov
imul
dec
das
mov
push
add
mov
cmpb
jnp
or
mov
add
lahf
adc
aam
mov
sub
jg
push
cmp
mov
adc
inc
call
adc
lods
mov
psraw
mov
lahf
loopne
pop
inc
pop
xchg
and
sub
sahf
loopne
stos
vpmaddwd
sub
imul
cmpsb
std
sub
sbb
adc
or
insl
or
and
lret
idivb
icebp
push
push
cmp
jno
pop
push
loop
inc
jbe
mov
icebp
xchg
cwtl
inc
inc
xor
ret
nop
inc
test
adc
ss
enter
imul
sahf
push
mov
inc
inc
dec
cmp
mov
lods
repnz
jne
sub
sahf
in
sbb
imul
adc
flds
mov
push
sub
push
cmp
sbb
push
mov
shll
mov
or
inc
inc
mov
jo
test
push
mov
int
pushf
mov
nop
jle
push
jae
pop
xor
push
insl
mov
cmp
adc
pop
add
mov
push
xor
xchg
sahf
xor
adc
dec
nop
lahf
ljmp
inc
cmp
fistps
pop
fdivl
sub
adc
or
pusha
sbb
jnp
pop
sbb
dec
add
iret
inc
arpl
inc
fcoms
xchg
aas
aaa
push
sbb
les
lock
loop
sbb
mov
cmp
dec
jbe
mov
mov
xor
shll
sbb
xchg
sbb
iret
jb
pop
pop
mov
test
imul
mov
pop
and
fs
and
test
rol
pop
icebp
les
sub
and
inc
sub
hlt
inc
mov
lds
mov
mov
and
test
int
dec
mov
in
push
hlt
pop
movsb
insl
cmp
inc
inc
jp
or
mov
adc
xchg
mov
or
or
stc
or
popf
pop
xchg
push
es
pop
inc
pusha
out
pop
sub
test
push
and
lcall
mov
lret
js
scas
and
divb
bound
stos
sarb
stos
cltd
test
xor
push
out
arpl
lea
or
jno
rorl
pop
adc
xchg
mov
jmp
add
insl
pop
push
inc
xlat
ljmp
mov
fstpl
mov
popf
cwtl
lret
bound
lahf
inc
add
jmp
sarb
or
push
call
ret
xchg
lcall
stc
sub
call
call
jo
jns
mov
xchg
push
xchg
imul
fcompl
jl
leave
mov
mov
and
sbb
xor
add
jne
push
fstpl
jae
jecxz
jno
or
xorb
mov
lahf
mov
push
je
test
fldt
stc
add
xor
inc
mov
idivb
and
dec
scas
pop
fdivrs
mov
fstpt
mov
outsb
mov
cmp
int3
test
out
movsb
shrl
fsubrp
mov
cld
inc
jb
mov
loope
mov
lea
repnz
sbb
cmp
and
push
shrb
sub
fidivrl
cmp
in
aam
je
ret
pop
xor
nop
xchg
rorb
xchg
test
push
aad
stc
xchg
repz
dec
dec
cli
mov
cwtl
push
pop
addr16
testb
or
rcrl
sbb
inc
aad
loop
mov
xchg
arpl
xchg
scas
scas
into
push
fidivrs
not
inc
movsb
lret
inc
push
fisubrl
test
repz
pop
mov
dec
lds
sub
cmp
sti
mov
adc
mov
mov
popf
push
add
xchg
ficoms
mov
fucom
cli
cmpsl
idivb
pop
popf
xchg
sahf
and
cmp
jbe
nop
mov
cmp
cld
stc
mov
out
push
adc
ret
ss
pusha
outsl
icebp
mov
stos
idivb
sti
or
cltd
cmp
push
mov
xchg
jo
inc
sub
cli
and
dec
andl
mov
dec
dec
icebp
or
cmp
xchg
sahf
cmc
xchg
xor
je
xchg
out
and
ljmp
rcrl
cltd
xlat
repnz
clc
add
mov
gs
mov
fimull
popf
jle
mov
xchg
out
out
sub
add
daa
xor
sbb
scas
sub
mov
or
sbb
bound
fs
cmp
dec
scas
inc
and
dec
dec
mov
xchg
lods
jns
jo
inc
frstor
xor
or
imul
pcmpgtw
xchg
inc
sub
enter
pop
popf
cmp
fsubrp
push
cmp
xlat
adc
popf
cmp
lods
dec
icebp
push
mov
bound
and
add
iret
push
jo
enter
sub
stc
stc
adc
and
out
cmpb
cld
shrl
gs
cwtl
rcl
or
out
loopne
xchg
mov
and
repz
cld
xchg
out
push
lahf
fs
jb
pop
cli
push
nop
pop
pop
pop
xchg
cmp
add
pop
scas
fadd
enter
xor
fnstenv
sbb
std
adc
les
xchg
inc
outsl
stos
sub
mov
in
sbb
cmc
jbe
in
stc
lret
and
les
inc
pmaxsw
cmpsl
cli
xchg
jmp
sbb
cmp
faddl
out
sub
mov
test
mov
stc
mov
loope
std
arpl
movsl
cmc
fists
jg
jnp
xchg
sub
add
jmp
shl
std
notb
jns
cmp
imul
xchg
shld
inc
or
cmp
repnz
jmp
das
sbb
into
ja
push
sub
xor
popf
inc
in
roll
xchg
xor
mov
and
jae
inc
xchg
xchg
mov
xchg
and
comiss
inc
adc
pop
xchg
pop
lods
sbb
frstor
mov
jl
sbb
or
aaa
scas
pop
es
dec
xor
pushf
out
mov
jno
ret
leave
inc
cmp
sub
or
pop
xor
push
mov
sub
sbb
lods
sub
out
xchg
aam
mov
or
aad
cmpsl
fs
adc
pop
bound
dec
xchg
jnp
dec
cmp
out
and
lock
fisttps
imul
lods
cmp
dec
mov
pop
pop
addr16
negl
cld
shl
push
mov
sub
sbb
jge
pop
xor
mov
add
mov
dec
mov
fwait
mov
ja
and
imul
sub
cwtl
adc
jno
testb
imul
mov
cmp
or
push
mov
ljmp
xchg
inc
mov
push
out
lea
jg
or
sub
shll
pop
mov
xor
lret
xchg
push
jge
mov
imul
xor
sbbb
fmul
jle
in
adc
mov
fldenv
push
popa
je
adc
or
pop
test
cld
out
pop
pop
cs
lods
sar
lahf
push
sahf
cmp
mov
mov
movsb
sbb
fsubrl
fdivl
ds
pop
popf
dec
outsb
iret
data16
mov
add
movl
dec
popf
fisubs
stc
xlat
jns
jmp
popf
arpl
lock
test
lea
push
xchg
dec
sti
mov
dec
nop
xor
nop
mov
ss
test
cmp
cwtl
xor
gs
xchg
insb
or
iret
and
insl
add
sahf
or
push
sbb
cmp
jl
imul
adc
jns
mov
adc
inc
test
out
sbbl
sub
jmp
jle
mov
xor
js
sbb
cmc
xor
movsb
cld
and
stc
sbb
add
mov
sahf
mov
stc
fmull
icebp
clc
xor
or
rcrb
jnp
stc
insb
rclb
loop
aad
mov
js
enter
push
dec
and
xchg
push
mov
das
data16
push
jmp
xchg
jg
aaa
dec
ljmp
sti
xchg
shrl
sbb
daa
outsb
call
lret
xchg
int3
arpl
fisttpll
mov
fbld
dec
sbb
sub
cli
aas
sbb
mov
mov
outsb
inc
inc
cmp
push
push
inc
vmwrite
es
jmp
aad
bound
mov
sub
aam
fbstp
adc
ret
sub
shr
sub
pusha
mov
insb
repnz
cmp
les
push
cmp
xor
hlt
sahf
adc
jnp
xchg
sub
enter
pop
or
repz
lcall
add
test
xchg
in
lods
cs
jns
lds
fidivrs
mov
lahf
call
add
out
gs
loopne
xchg
mov
cmp
adc
fwait
sti
test
mov
clc
in
scas
test
je
in
push
dec
pop
out
push
testl
cmp
sbb
jmp
mov
jge
or
mov
testb
lcall
push
mov
out
jbe
push
jnp
sbbl
cmc
mov
or
and
out
mov
cmp
mov
stos
negb
pop
jbe
out
enter
cs
leave
sbb
imul
repnz
mov
ret
aaa
adc
sub
out
pop
jae
stc
test
sub
lret
call
add
pop
add
stos
stc
add
repz
nop
push
xchg
push
cld
mov
xor
sub
inc
dec
jp
push
insl
fucomp
mov
pop
stos
ja
inc
stc
add
sahf
and
insl
sbb
dec
xor
aas
and
xor
rol
dec
jns
lahf
dec
push
repnz
push
sub
test
cmpb
js
mov
sub
jle
loope
aam
xchg
jnp
imul
mov
repnz
into
inc
sub
mov
cmp
fistpll
daa
ret
hlt
dec
pusha
jmp
jmp
jmp
mov
mov
dec
xchg
sarl
inc
inc
add
dec
shl
movsl
aaa
call
add
xchg
lahf
in
adc
push
out
sub
mov
orl
scas
in
pop
subl
add
cmc
xor
sub
mov
or
push
int
jge
js
inc
lret
xchg
add
stos
fstpt
insb
mov
or
xchg
jno
push
orl
xor
popa
mov
sbb
idivl
adc
fidivl
xchg
mov
dec
popa
cli
ss
out
jo
testl
cmpsl
jmp
in
insl
xchg
outsl
push
movsb
stc
mov
mov
jmp
out
iret
mov
pop
add
sbb
jns
jne
insb
fisubrl
push
push
xor
movsl
dec
rcrb
mull
insb
aas
test
rcll
aam
or
and
cwtl
sbb
mov
mov
fisttps
test
aam
repz
inc
mov
addr16
jb
sar
push
fisubrl
faddl
testb
push
xchg
mov
pop
jge
fs
or
pop
and
dec
aaa
mov
xchg
fcompl
dec
rolb
je
daa
xor
or
inc
cmp
sub
mov
mov
pusha
repnz
fcoms
jb
aad
add
adc
jmp
xchg
std
and
popl
out
pop
pop
lahf
cmp
ja
scas
movsl
mov
sbb
pop
and
xchg
inc
pop
test
push
lods
add
adc
frstor
ret
into
dec
jae
dec
dec
pop
sub
in
xor
aaa
lcall
adc
adc
lods
inc
aas
cmp
and
mov
dec
ljmp
fstpl
xor
and
imul
test
movsl
add
loop
pop
push
add
out
mov
cmpsb
rorl
orb
jmp
pusha
or
pop
aas
sbb
dec
push
into
jae
mov
shrb
popf
call
daa
mov
arpl
jge
addr16
out
popf
andb
xchg
repz
subb
adc
pop
repz
sub
push
push
cmp
shl
mov
ss
jl
imul
dec
sub
test
cli
pop
fidivs
add
push
test
out
lea
icebp
divl
jo
aad
pop
loopne
mov
outsb
es
inc
int3
adc
ss
xor
dec
xor
mov
inc
and
inc
pop
leave
add
pushf
inc
or
add
xor
xchg
xor
add
mov
dec
icebp
xchg
xchg
inc
adc
popa
mov
test
leave
lock
lods
and
pop
push
in
aaa
popa
mov
and
dec
xchg
or
stc
pop
cmpsl
dec
push
push
pop
jne
in
test
enter
mov
loop
cs
xor
pop
cli
iret
scas
daa
xchg
mov
mov
mov
jle
inc
pop
xchg
fadds
dec
std
sbb
cld
insb
lahf
push
mov
mov
add
cmp
jle
mov
out
out
out
mov
test
hlt
cltd
mov
push
inc
dec
sub
icebp
dec
pop
mov
sahf
jp
xchg
sub
idiv
and
xchg
mov
insl
ror
fldt
push
adc
cmp
inc
mov
push
dec
mov
dec
pop
jb
xchg
cmp
fmull
sarl
mov
jp
mov
mov
and
pop
xchg
psubusw
dec
std
mov
xchg
sbb
inc
or
sub
lea
test
shlb
cmp
push
mov
rorb
adc
movsb
and
shlb
imul
subl
js
mov
push
ss
popa
dec
rclb
xorps
xchg
test
mov
xlat
fmuls
dec
imul
mov
cmp
call
mov
or
add
in
aas
lea
push
dec
adc
jnp
sub
xchg
sbb
fs
fcmovnbe
mov
int
inc
lods
out
decb
cld
dec
inc
push
loop
inc
add
int
push
mov
cmp
cmp
inc
fsubs
mov
int3
inc
add
cmp
push
cs
xor
hlt
rolb
mov
test
in
int
hlt
dec
or
push
push
sti
mov
pop
xchg
sub
mov
aam
adc
ss
pop
sub
push
adc
mov
out
loop
xor
jo
inc
inc
cmp
sbb
jl
jge
fnsave
popf
jmp
jmp
mov
cmp
dec
add
pop
sub
pop
cli
ret
loope
icebp
sub
push
mov
push
cmp
sbb
push
jmp
mov
ljmp
test
outsl
push
repz
inc
push
cmc
cmp
cld
mov
mov
lods
in
xchg
mov
scas
pop
outsl
shll
sbb
in
out
inc
dec
shlb
cmpb
sbb
ret
xchg
mov
mov
aad
adc
repz
xor
mov
ss
and
xchg
in
push
cs
je
adc
sub
int
add
fwait
cmpsb
fldt
iret
inc
jae
fwait
ljmp
enter
test
push
and
pop
xchg
rcl
jp
mov
mov
movsl
aam
fsts
lret
aam
test
fsubp
push
lds
jmp
idiv
or
and
mov
dec
xchg
shlb
or
jle
mov
xlat
lcall
jg
sbb
mov
stos
inc
mov
inc
subl
jecxz
ja
enter
xchg
jl
ret
lret
or
test
cmc
dec
aaa
adc
inc
dec
call
mov
pop
push
add
or
jl
and
push
adc
xchg
nop
loop
xlat
leave
cld
xchg
jae
jle
mov
add
lock
shll
scas
sub
xchg
mov
out
adc
loopne
lret
stos
add
mov
mov
and
mov
int3
aaa
inc
xor
mov
je
adc
mov
xchg
pushf
je,pn
sbbl
loop
ja
xor
pop
sbb
push
cmp
pop
xchg
fisttps
aam
pop
xor
push
outsl
in
inc
push
repnz
pushf
cmpsb
mov
insl
daa
in
sbb
mov
paddsb
shll
aam
sub
shl
mov
out
popf
mov
jbe
and
ss
dec
sahf
ljmp
in
movsl
xor
xchg
in
test
add
shlb
mov
lret
adcb
repz
sbb
mov
gs
xor
in
addb
psubusb
data16
pop
pop
fbld
mov
cmc
pop
scas
addr16
jecxz
and
scas
cmc
push
daa
sub
imul
adc
push
sbbb
jno
dec
cmpsb
mov
xchg
pop
push
xchg
jno
mov
cmp
sbb
jecxz
inc
iret
cmp
adc
testb
mov
int
mov
adc
clc
jnp
test
adc
push
dec
inc
fnstenv
pop
sub
cld
out
or
cmp
jg
decl
scas
adc
test
inc
test
jecxz
or
sbb
leave
or
pop
aas
push
push
adc
mov
shrb
mov
jne
mov
ror
nop
push
stos
lahf
xchg
int3
or
and
scas
dec
es
outsl
xor
mov
pop
inc
dec
addr16
cmp
push
dec
popf
flds
jmp
or
cmpsb
incb
and
sarb
punpckhdq
inc
js
fcmovne
or
mov
dec
adc
adc
stos
jae
fcomps
popl
sub
subl
test
nop
out
test
jge
pushf
add
cmc
pop
dec
int
lods
lret
pop
xchg
cmp
xor
cmp
enter
fildl
shlb
pusha
out
rcrb
sbb
cmp
cltd
mov
cmpsb
sub
sbb
dec
divb
push
add
add
ret
cmp
dec
sar
fwait
xchg
test
push
pop
xchg
cmp
test
push
lock
xchg
call
repz
decl
aam
inc
div
fnstenv
mov
dec
aam
mov
cmp
in
push
cld
push
loope
shlb
xchg
inc
or
pop
ss
ljmp
cmp
js
shrb
fisubs
add
adc
add
dec
mov
ss
hlt
sub
mov
push
pop
mov
cld
mov
cmpsb
mov
aam
dec
in
aad
pop
xorl
jnp
subl
sbb
mov
jns
call
cmp
inc
jnp
dec
ljmp
dec
push
mov
nop
and
adc
pop
or
adc
mov
movsb
inc
pop
mov
mov
pop
scas
pop
xorb
std
sbb
insb
pop
hlt
or
test
out
lods
test
mov
jmp
jge
mov
aaa
push
arpl
in
test
addr16
mov
scas
stc
pop
mov
insl
push
xchg
fstpt
jle
test
pop
jnp
xchg
dec
shlb
out
dec
sub
enter
push
jecxz
and
pop
xchg
mov
orl
adc
idivb
sahf
lods
ret
aad
adc
daa
into
mov
repnz
and
mov
push
stc
mov
mov
or
jl
popa
push
mov
add
fimuls
jp
das
push
ret
sarl
push
xchg
std
mov
or
out
adc
pushf
jmp
sti
or
mov
stos
jl
sbb
ljmp
lods
nop
imul
push
clc
and
sub
mov
sti
sbbb
divl
lods
js
out
sub
dec
stos
inc
and
adc
add
jl
sbb
repz
pop
inc
inc
ljmp
pushf
sahf
ficomps
fcmovnbe
movsb
mov
mov
xor
cmp
mov
mov
mov
cmp
jae
in
adc
pop
mov
inc
push
dec
cmp
inc
rcll
jno
mov
mov
dec
mov
mov
or
or
popf
repz
jge
popf
and
mov
aad
sbb
jmp
cmp
dec
inc
imul
das
test
mov
push
lret
dec
xchg
ljmp
xor
or
das
call
ret
xchg
cmpsl
in
xchg
ss
mov
mov
inc
jnp
fwait
jb
xor
fld
jge
jbe
rcrl
sub
cmp
iretw
pop
lahf
enter
dec
add
in
fisubl
lods
enter
mov
push
cli
sahf
andb
push
pop
lods
int3
mov
pusha
pop
and
jns
ljmp
mov
mov
push
dec
fwait
mov
dec
cmp
aaa
stc
adc
sbb
jb
xchg
adc
xor
cs
dec
pop
jnp
ret
int
jo
push
push
andb
negl
rolb
mov
xchg
insl
add
lahf
mov
and
push
inc
out
adc
mov
push
fimuls
into
in
xchg
jecxz
clc
dec
pop
and
lret
jecxz
sti
pop
sarl
dec
fwait
lahf
cwtl
cmp
fbstp
mov
cmp
les
adc
incb
ds
es
loopne
int3
pop
ds
mov
mov
jmp
cmp
jae
mov
xor
cmp
inc
insl
jge
or
pop
bound
js
aad
jmp
dec
in
leave
sti
cmp
sbb
jo
jnp
mov
xchg
mov
pop
scas
xor
movsl
pop
xor
xchg
rcl
mov
enter
adc
mov
jo
and
cmp
adc
fwait
insl
rolb
mov
out
and
test
xchg
mov
andl
out
jno
add
sub
cmp
aas
into
mov
xor
out
iret
std
rorb
les
lret
stc
xchg
lods
xor
inc
or
orl
xchg
push
lods
imul
pop
fsubr
push
popf
rorb
xchg
jg
sbb
ja
adc
ret
pop
sbb
inc
std
mov
xchg
xor
or
jb
mov
stos
out
xlat
shrb
inc
pop
cmp
inc
xchg
jge
jmp
mov
or
mov
push
repz
dec
xchg
adc
push
lcall
or
adc
enter
xor
lods
mov
cltd
push
jbe
mov
jl
out
pop
mov
jl
sbb
fldenv
sub
mov
push
nop
inc
dec
and
insb
sub
sub
ret
popf
pop
push
mov
pop
mov
test
lock
and
test
mov
mov
xchg
outsl
mov
aaa
xchg
arpl
sub
jl
ret
cli
ds
cmp
pop
pop
push
lret
lahf
xlat
inc
mov
ficompl
mov
lods
mov
push
mov
aam
mov
sbb
dec
movsl
aad
inc
jae
sbb
test
inc
inc
add
stos
int
sbbb
add
outsb
sarb
adc
mov
and
jo
sub
xchg
js
jae
outsb
out
fisubrs
inc
pop
xor
std
xchg
mov
add
pop
cmpsl
cmc
or
cmpsl
pop
fidivl
movsl
pop
mov
in
adc
imul
loope
xchg
in
mov
das
adc
fdiv
addr16
or
and
decl
mov
xor
lcall
std
lds
mulb
scas
mov
dec
cs
call
stos
mov
cmpl
loop
jbe
pop
cli
pop
imul
adc
shlb
sub
sti
leave
jmp
stos
push
out
mov
fs
inc
fstps
or
insb
push
xchg
decb
xchg
mov
push
fistl
repz
or
ss
testl
add
imul
ficoml
das
ret
sub
es
or
and
loopne
mov
hlt
cmp
sbb
int3
mov
mov
daa
ss
pop
cmpl
mov
adc
dec
mov
mov
jmp
push
shlb
xor
mov
pushf
push
sbb
pop
push
js
rolb
out
ds
cltd
jae
out
fildll
stos
repz
sbb
sti
test
xor
mov
xchg
mov
inc
data16
sbb
hlt
and
push
sub
dec
es
mov
sbb
mov
insl
rcll
std
mov
jae
inc
pop
fwait
inc
mov
into
leave
das
insl
push
cmpsl
cwtl
lcall
sub
out
or
imul
add
mov
and
hlt
or
hlt
int3
movsb
decl
jae
mov
inc
clc
adc
cmp
cmp
jl
imul
adc
jle
mov
loopne
push
sub
imul
out
pop
jecxz
repz
mov
test
cmp
pop
out
das
adc
dec
testl
cmp
mov
fnsave
cmp
cltd
jns
ja
aam
jno
lock
shrl
sbb
mov
neg
xchg
cmp
je
adc
popf
inc
dec
fs
movsb
push
xchg
jne
ror
pop
adc
add
and
aas
outsb
mov
adc
cmpsl
or
aam
or
mov
add
cwtl
pop
jne
in
dec
pop
movsb
xchg
aam
cmp
dec
pop
adc
aad
popa
jl
pop
mov
add
data16
add
and
and
out
adc
inc
dec
out
cwtl
ljmp
adc
fwait
adc
push
sti
mov
xchg
out
enter
sub
xor
xchg
inc
in
xchg
lea
imul
adc
pop
sub
cmpsl
mov
inc
das
mov
sbb
mov
push
gs
adc
std
int
cmc
insl
cwtd
lcall
inc
call
push
addl
insb
push
ret
clc
cmpb
add
int3
mov
addb
dec
jl
fildll
cmc
xlat
pop
mov
sub
ret
add
insl
adc
add
movsb
jmp
xlat
scas
mov
bound
test
popa
int3
or
lods
push
in
cmp
or
mov
dec
imul
pop
sub
in
or
test
aas
add
and
pop
scas
push
cmp
std
aam
pop
loope
cmc
xchg
sbb
in
xor
or
repz
lea
cmp
mov
cli
mov
add
mov
cmpsb
es
test
add
jge
lcall
push
push
mov
dec
cltd
push
cmp
mov
les
fnstcw
ljmp
and
hlt
test
bound
and
iret
dec
dec
lock
mov
cmp
push
add
cs
data16
sub
lock
cmpsl
pop
in
lea
popf
add
in
cmp
mov
loope
cmp
pop
push
jns
fldcw
jb
add
mov
iret
pop
repnz
jl
pushf
cmp
in
stos
ja
mov
lods
js
leave
push
push
ss
imul
push
nop
and
in
push
mov
inc
lcall
in
lahf
fistpl
and
jno
mov
dec
xchg
cmp
cmpsb
xor
sbb
cld
jge
mov
inc
push
bound
lock
sub
test
mov
jbe
call
stos
cld
adc
xor
push
add
or
push
test
inc
pushf
sub
in
orl
sub
xor
hlt
or
iret
pusha
pushf
or
insb
cmpsb
xor
ljmp
cltd
xchg
dec
sub
or
subb
jge
cltd
lret
hlt
mov
adc
test
dec
xor
jp
sbb
stos
adc
imul
sbbb
aad
push
jp
fsub
loope
xchg
pop
shl
pop
mov
mov
push
push
pop
sub
lea
insb
repz
sahf
mulb
mov
into
aaa
pop
orb
shlb
aam
fists
and
inc
pop
shlb
dec
sbb
aaa
sbb
in
or
adc
mov
in
pop
xchg
rorl
or
inc
sbb
adc
imul
pop
add
nop
aaa
fcompl
jl
push
outsl
inc
stos
mov
and
repz
sbb
stos
xlat
xchg
test
cmpsb
pop
fwait
outsl
xchg
nop
dec
jno
outsb
mull
mov
fstps
dec
xchg
ljmp
ds
in
cmp
arpl
add
addr16
or
push
xchg
in
lds
mov
std
test
push
popa
mov
mov
das
and
xor
mov
and
dec
adc
arpl
inc
stos
leave
jno
push
jnp
cli
pusha
loopne
add
inc
xchg
pop
adc
loopne
add
mov
movsl
and
bound
add
lods
mov
jno
mov
sub
adc
repnz
lret
jo
add
mov
push
out
pop
cmp
or
arpl
std
mov
insb
dec
or
inc
jo
push
pushf
das
in
mov
cli
sbb
jmp
rolb
pushw
mov
add
add
add
icebp
das
fsts
hlt
and
pop
dec
xor
pop
test
xor
insb
orl
fwait
aad
je
lret
jns
jnp
pop
adc
imul
xor
out
push
rorb
cmpsl
mov
test
dec
fdivp
addr16
jle
pushf
sahf
xchg
clc
jmp
pop
cmp
out
cwtl
push
in
and
xor
adc
sub
xlat
fwait
jb
pushf
sbb
xor
insw
xor
adc
mov
out
adc
jno
testl
xorb
add
ljmp
and
mov
in
in
pop
mov
pop
std
sbb
push
push
popa
shl
ds
mov
mov
jno
xor
mov
or
xor
and
aam
fcoms
adc
and
pop
push
les
xchg
xchg
inc
sub
test
lret
aam
xchg
icebp
lods
daa
push
cmp
hlt
xchg
shll
out
cmp
fidivrl
inc
mov
std
xor
enter
add
jl
pop
mov
mov
jp
xchg
sub
sub
mov
cmpsb
fmulp
fsubrl
cmp
mov
inc
cltd
jecxz
jmp
test
jns
movsb
mov
rorb
sub
popa
inc
adcb
add
sub
push
and
sbb
dec
nop
test
jb
pop
mov
xchg
pop
insl
cmp
push
divl
das
fwait
inc
jb
xor
popa
movsl
sarl
or
pop
in
jbe
enter
cld
mov
inc
jge
cwtl
mov
and
rclb
lahf
cli
or
lret
sarb
int
icebp
jecxz
repz
ds
mov
jb
xor
jnp
add
mov
mov
adc
pushl
xor
mov
inc
mov
insl
mov
fcomp
iret
test
jp
mov
add
mov
test
call
cwtl
in
aas
aas
imul
inc
cmc
enter
mov
test
xchg
jb
jbe
or
dec
cmp
push
out
test
pop
xor
push
fdivrl
orb
push
inc
xchg
mov
inc
push
pop
sbb
cmp
and
scas
cmp
div
daa
jns
test
sub
stos
les
and
and
cmpsb
push
lock
rorl
pop
fsub
push
push
mov
data16
jbe
imul
xor
pop
and
pusha
cld
mov
out
mov
cmp
decb
arpl
add
mov
jno
mov
adc
pop
xor
xchg
js
gs
inc
stos
xchg
push
jl
arpl
mov
mov
jno
lock
dec
lock
daa
mov
push
cld
test
rcll
fwait
dec
and
fistpll
xchg
cmp
mov
add
fstl
in
scas
or
arpl
xchg
xchg
subl
jp
test
out
adc
stc
pop
jecxz
jmp
movsb
testb
add
dec
push
mov
jmp
pop
and
call
jge
jne
mov
push
xchg
gs
xchg
xor
call
mov
xchg
and
and
add
bound
arpl
imul
cmc
jmp
inc
or
jg
jns
fwait
pop
push
or
cld
xchg
adcl
loopne
sub
xlat
xchg
fucomip
rorl
pop
jp
cmp
mov
rcl
xor
lea
push
inc
shr
push
fisttpll
jns
xchg
mov
xchg
fiaddl
out
lret
push
dec
or
sahf
fisubs
or
movsb
inc
rep
dec
loope
inc
cs
mov
inc
push
adc
fisubrl
sti
in
or
shll
jne
push
cs
jae
call
cmc
mov
add
pop
loopne
repnz
xchg
bound
push
in
dec
mov
sbb
enter
shr
mov
jns
popf
add
add
or
mov
adc
subb
mov
pushf
cmpsl
cmp
adc
xchg
imul
push
std
imull
pushf
seta
adc
adc
xor
mov
fidivs
mov
mov
out
lds
repz
sbb
pop
fisttpl
enter
pop
insl
lods
or
loopne
push
xor
aad
popf
adcb
inc
lcall
mov
outsb
xchg
jb
or
test
mov
xor
adc
outsb
mov
jns
in
js
adc
cltd
dec
mov
faddl
push
mov
lods
cli
mov
push
xchg
xor
daa
jmp
lods
mov
mov
gs
add
pop
jge
sub
push
pop
lds
mov
push
inc
repnz
xchg
dec
sti
idiv
fwait
loope
xchg
push
ficoms
imul
xchg
push
mov
inc
xor
shrl
xchg
insb
mov
arpl
mov
cltd
cli
inc
outsl
cmp
inc
fwait
insl
xchg
cli
je
add
pop
mov
fdivs
aas
jmp
push
pop
fs
sti
mov
add
mov
repz
lcall
ficoms
dec
jp
jnp
xor
mov
jno
mov
ljmp
ret
or
in
test
outsl
mov
fldt
shl
mov
jnp
imul
xorl
xchg
and
xor
loope
mov
loop
lahf
scas
daa
dec
fwait
xchg
cmp
add
popa
mov
ret
in
lods
xor
pop
push
test
aam
sub
lcall
mov
mov
and
jns
xchg
dec
mov
sub
std
lds
dec
pop
dec
nop
in
jae
mov
mov
adc
dec
pop
xchg
xor
xor
xor
dec
aad
sub
out
fsubr
jnp
popa
insb
push
shlb
icebp
rcrb
mov
cmc
adc
inc
inc
fwait
dec
mov
push
in
out
pop
repnz
pop
sub
sbb
cmp
pop
popf
stos
jecxz
mov
cwtl
out
sbb
les
sbb
lcall
adc
pop
js
jo
adc
inc
mov
jp
rolb
dec
inc
sub
dec
mov
pop
xor
ret
adc
leave
mov
lock
mov
cli
aad
push
andb
mov
clc
cmc
pushf
mov
icebp
icebp
imul
xor
xchg
mov
lods
mov
enter
and
jmp
popa
pop
jl
or
subb
pop
imul
enter
hlt
clc
mov
jns
jmp
fstps
lret
into
loop
loope
add
mov
push
aam
sbb
aas
rorl
mov
mov
jecxz
or
push
xchg
cmp
inc
outsl
jge
leave
sbb
dec
ds
cmpsb
orl
or
ret
dec
sub
jbe
arpl
inc
orl
mov
fcompl
lods
cld
pop
jg
xchg
je
adc
pop
cmp
repnz
arpl
ficoml
lret
pop
hlt
mov
mov
pop
or
mov
out
sbb
sbbl
xchg
inc
cmp
add
lock
sarb
cmp
je
pop
or
adc
lock
mov
gs
inc
push
xchg
out
jno
mov
pop
call
sub
xlat
cmp
lds
sub
sub
int
mov
inc
xchg
jnp
lea
or
ljmp
nop
mov
add
dec
daa
leave
cltd
mov
push
lds
iret
or
gs
lea
fildl
fstps
mov
mov
test
xor
cld
test
lcall
aaa
aad
xchg
cld
fwait
xchg
fists
inc
jo
mov
and
fwait
repnz
and
mov
add
ds
push
cltd
inc
xchg
insl
mov
sahf
sub
notl
cld
cmpsl
pusha
cld
cmc
jge
pop
cmp
sbb
cwtl
ficompl
fcomp
push
fcmovnb
ss
jp
mov
pop
test
xor
jb
out
mov
gs
aas
push
and
mov
movsb
cwtl
mov
push
adc
push
shlb
lods
push
adc
mov
shrb
xorb
xorl
das
hlt
pop
dec
fmull
add
fdivs
insl
sub
lds
mov
ret
inc
imul
sub
js
icebp
xchg
xlat
jnp
inc
dec
sbbb
lock
cmp
imull
cs
mov
ja
or
out
imul
jb
repz
in
sbb
add
call
divb
xchg
in
jl
test
iret
out
xchg
sbbb
push
sub
add
stos
mov
jmp
mov
cmp
leave
pop
cmc
add
jecxz
shrl
cmp
add
mov
mov
jno
js
loop
mov
sub
flds
jp
scas
mov
bound
enter
shll
inc
fs
and
mulb
sbb
mov
jo
push
jno
xor
in
or
insb
jo
or
in
popl
sub
cmp
movsl
loop
cmp
sub
testl
push
inc
pop
je
pop
xor
push
fwait
stos
sbb
pop
test
sarb
xor
xchg
xor
push
xchg
pop
or
dec
jnp
popa
in
ret
adc
cmc
jle
jb
mov
insl
dec
jmp
jb
dec
inc
jb
popf
addb
and
scas
std
cltd
jmp
fstps
lock
inc
pop
outsb
inc
xchg
push
call
sbb
test
bound
jg
sbb
in
xchg
std
cmp
sbb
xchg
movsb
lds
dec
cmp
add
sbb
jb
sub
xchg
xchg
call
fnstenv
icebp
sub
faddl
movsb
bound
in
xor
mov
cmp
mov
push
pop
mov
xchg
or
cmp
out
popf
in
and
add
mov
inc
mov
movsb
fidivl
inc
daa
in
and
jnp
lea
pop
outsb
mov
sub
inc
scas
cld
mov
cmp
jns
xchg
inc
fs
ror
mov
xchg
push
mov
aad
jbe,pt
and
or
icebp
push
xchg
mov
cmc
xchg
xlat
pop
das
cli
or
jl
popa
or
push
clc
fistl
add
jae
insl
mov
loop
xchg
mov
jecxz
fsubrl
scas
push
mov
std
out
sub
mov
adcb
fldcw
mov
and
mov
iret
mov
js
cmp
cmc
xchg
push
sub
mov
mov
adc
dec
and
push
mov
push
movsb
mov
pop
mov
ret
xchg
cmp
loopne
insb
into
pop
pop
loope
cltd
dec
mov
xchg
repz
add
adc
jle
ret
sar
sub
mov
imul
push
xchg
mov
lea
mov
mov
fstl
inc
fs
jp
in
mov
lods
inc
out
lahf
lcall
mov
xor
jae
adc
fnstcw
and
jp
enter
push
or
push
cmp
lods
movsb
fstpl
dec
test
fildll
xchg
mov
faddl
daa
add
cmp
jmp
lods
ficompl
loopne
pop
std
pop
mov
inc
pushl
nop
mov
test
cmp
mov
sbb
pop
inc
mov
out
push
lret
daa
cmp
je
xor
and
cli
sbb
cmp
loope
cs
push
push
jg
fldenv
ret
mov
cmp
dec
rol
mov
xchg
cmp
les
int3
nop
int
scas
jns
sub
add
mov
xchg
xor
pop
pop
mov
mov
dec
push
jecxz
pop
test
sub
iret
mov
mov
cmpsl
mov
cmpsb
and
or
mov
enter
movsl
cltd
mov
sbb
or
jle
sbb
imul
adc
outsb
iret
cltd
inc
push
outsl
stos
in
add
cli
mov
mov
ret
aad
ret
cmpsb
xchg
jne
dec
sbb
fstps
fmull
mov
pop
pop
popf
xor
lods
outsb
and
lret
test
or
adc
mov
adc
push
push
adc
xor
fs
cmp
cld
sbb
sbb
flds
or
and
pop
subb
imul
jb
repnz
ret
cs
mov
in
pop
dec
repnz
pop
add
decb
sbb
pop
iret
ja
fisubl
pop
loop
sub
mov
mov
pop
add
aas
test
or
dec
ret
fsubrl
xchg
xchg
in
xor
push
lcall
pop
das
mov
pop
ret
aam
adc
jbe
xchg
into
pop
pcmpeqw
inc
add
mov
sbb
daa
adc
jge
push
cwtl
and
test
fidivs
jbe
out
xchg
nop
fwait
sub
and
iret
inc
sbb
inc
fucom
insl
aam
sbb
pop
mov
sub
in
adc
inc
adc
add
rcrb
out
jae
repnz
js
xor
push
sub
pop
push
inc
loope
test
pop
loop
dec
in
scas
sti
sbb
xor
add
sbb
out
sahf
test
ret
sbb
adc
dec
in
mov
lret
adc
mov
lret
lahf
pusha
mov
mov
mov
mov
pop
int
jns
push
mov
loope
ss
aam
leave
mov
push
cmp
mov
jo
sbb
inc
jb
xchg
push
in
sti
mov
jnp
or
jae
lds
mov
pop
js
and
pop
or
xor
push
push
loop
pop
ret
jae
pop
fldenv
xchg
outsb
repz
adc
scas
mov
sahf
sub
mov
push
cmp
xchg
xchg
loopne
and
mov
cmp
imul
mov
jl
test
imul
mov
mov
aad
mov
cmp
ja
pop
mov
xor
xor
cwtl
add
iret
jbe
cmp
rclb
test
xchg
in
mov
ret
ja
sub
mov
cs
faddl
je
scas
scas
imul
cmp
ss
sub
cltd
aaa
mov
rcrb
push
mov
cmp
lock
xchg
aas
rcrb
loop
jge
mov
loope
mov
outsb
fcmovne
ret
jo
in
jne
adc
xor
sbb
and
mov
fwait
add
pop
andb
mov
imul
cs
mov
mov
push
in
mov
dec
cmp
jno
mov
or
jmp
ficomps
lahf
jno
jg
sub
jle
adc
jo
stc
and
add
cmp
popa
lret
sub
mov
xchg
or
cmp
sbb
jmp
sbb
imul
cld
or
movsb
adcl
mulb
push
xchg
push
in
int3
lds
js
shll
or
mov
lea
xchg
or
lock
or
push
popf
cld
xor
adc
mov
dec
insl
mov
scas
xchg
pop
push
push
lcall
aas
xchg
loopne
loop
and
scas
mov
sbb
pop
jbe
cmp
xchg
adcl
dec
es
dec
push
dec
push
rcl
cmpsl
xor
pop
addb
cmp
leave
xchg
clc
loope
inc
pop
pusha
lds
pop
aas
pop
frstor
push
and
cmp
sub
movl
iret
fisubrs
inc
fdiv
push
mov
loop
test
or
mov
mov
out
xchg
aad
sahf
sbb
les
jecxz
push
jge
fisttps
mov
mov
insl
jmp
jne
jae
jo
push
in
or
call
dec
idivl
aaa
mov
inc
popa
jle
mov
mov
pushf
loopne
sub
fbld
sub
fldcw
jp
xchg
add
subl
mov
fwait
push
mov
mov
sbb
inc
outsl
notl
sarl
xor
adc
ds
movsb
addb
call
jg
imul
pop
mov
jmp
outsb
add
ret
add
or
cmp
insb
out
pop
xchg
cmp
fnsave
orb
adc
stc
scas
scas
and
mov
cld
loopne
sbbl
cmp
sbb
sbb
sahf
pushf
stos
push
cs
aam
movsl
jmp
push
mov
inc
fadds
ret
pop
and
add
push
lret
inc
inc
sub
sbb
push
jo
into
mov
enter
inc
ss
mov
mov
loopne
nop
dec
shr
xchg
or
es
push
sbb
in
rclb
inc
mov
or
in
pop
movl
bnd
jnp
fadds
push
stos
gs
test
inc
mov
jae
loope
dec
xor
sbb
loopne
enter
std
lock
mov
outsl
cmp
rol
or
adc
xchg
mov
test
pop
mov
inc
mov
rcrb
mov
pushf
cltd
mov
arpl
sbb
pop
cli
gs
push
mov
lret
or
cmp
jns
popa
rcll
jno
mov
dec
mov
hlt
xor
loope
dec
jb
fdivl
imul
sub
hlt
mov
popa
cli
cld
push
dec
rclb
inc
sub
adc
mov
xorb
fwait
imul
loop
mov
insb
rcll
es
call
dec
movsb
pop
mov
push
xor
push
leave
adc
out
cmc
dec
push
or
test
mov
inc
mov
xchg
dec
push
sub
inc
xor
lcall
into
mov
sub
adc
ja
cmp
jne
sti
inc
test
outsl
pushf
cmp
out
push
push
mov
fisubs
out
dec
mov
popl
adc
mov
and
insb
sbb
pop
in
push
test
sbb
sbb
cltd
or
pusha
rorl
fistl
push
push
mov
adc
mov
in
je
imul
jle
add
fstpt
ss
pop
sub
push
add
xor
ljmp
ret
dec
sbb
add
into
ror
mov
les
mov
aad
push
jns
push
cmc
lods
cmp
sbb
lods
mov
dec
pop
aad
cs
pop
fistpl
sahf
pop
mov
xchg
addb
mov
loopne
daa
push
jge
xchg
cmpsl
daa
fbstp
fxch
dec
and
add
sub
ficompl
in
jg
ficomps
cli
dec
test
push
loope
mov
leave
mov
and
out
push
lcall
mov
test
daa
jo
cmpsl
outsl
push
xor
jle
hlt
rolb
cmp
inc
jo
mov
lret
sbb
int
sub
scas
jp
xchg
push
push
add
lcall
insb
outsl
xchg
pop
jge
sahf
pop
mov
push
pop
scas
fsub
rorl
push
jl
or
jae
negb
add
fstp
daa
sub
mov
and
add
xor
dec
xor
add
xchg
and
dec
add
mov
adc
gs
aad
sub
pop
push
les
cwtl
pusha
fistl
movsb
xorb
in
fs
xchg
mov
dec
sub
fsubrp
iret
or
jae
pop
xchg
add
xor
pop
xor
sti
push
ret
push
cmp
xchg
sbbb
sub
mov
push
sbb
dec
inc
mov
jb
push
jl
and
mov
call
aaa
xor
push
adc
push
lea
daa
hlt
pop
cwtl
jb
pop
insb
push
into
fcomi
adc
ss
cmpsl
std
aas
sbb
stos
lret
jae
or
fbld
mov
pop
adc
jae
xor
xchg
jge
lods
and
lret
push
rcll
pop
int3
imul
push
xlat
sub
cmc
div
mov
jmp
daa
jmp
mov
cltd
clc
outsl
pop
shlb
pop
adc
jp
mov
lahf
aad
lods
dec
mov
inc
orb
pop
stos
pop
mov
dec
lcall
push
mov
lea
cmpsb
ljmp
arpl
in
cmp
testl
mov
icebp
pop
add
mov
inc
fidivrl
aaa
xlat
or
aam
push
xor
lahf
gs
inc
push
mov
movsb
push
add
rclb
jmp
mov
sahf
shll
xor
pop
sub
dec
jecxz
jecxz
mov
mov
imul
ja
lea
clc
mov
adc
outsb
add
aas
cmp
in
pop
mov
bound
mov
notb
and
je
inc
lds
das
ret
bound
cmp
push
aas
push
cmp
xlat
aad
cmp
scas
add
adc
rolb
inc
add
ret
inc
push
jmp
ficoms
sub
cmp
test
jg
pop
adc
insb
iret
cwtl
jle
popf
sbbl
xchg
cmp
adc
cmp
je
xchg
mov
lods
mov
add
dec
loop
jo
insl
or
movsl
add
mov
aas
add
in
sub
fwait
sub
loope
in
int3
movsb
adc
nop
testl
pop
push
and
and
and
xorb
jns
ror
repnz
ljmp
mov
xchg
int
xchg
ss
cwtl
jns
adc
jbe
or
in
mov
cmpb
lods
xor
push
dec
push
push
jmp
xchg
mov
pop
movb
pop
xadd
sub
xor
push
and
mov
icebp
mov
xlat
fcmovne
lea
xchg
test
rcrl
xor
mov
xchg
sbb
sub
mov
inc
aad
scas
cli
xchg
int3
mov
mov
sub
call
jge
xlat
aam
jae
sub
jo
ljmp
ljmp
jp
es
mov
add
aam
sbb
lods
cmp
cmp
cmc
sub
fcmove
push
xchg
roll
sbb
jge
lret
mov
into
pop
shll
push
fistl
push
push
mov
loopne
je
xor
int3
cmpsb
daa
hlt
in
lcall
in
pop
fdivl
adc
insb
outsl
cs
sbb
push
mov
nop
fcoml
jb
ja
add
inc
lret
bndldx
mov
ja
daa
popa
repnz
jecxz
xchg
cmp
xchg
sbb
push
scas
ret
iret
cmp
inc
add
sti
test
sub
mov
les
cmc
mov
stos
adc
push
fnstsw
cwtl
mov
cmp
into
les
or
pop
push
ja
push
fiadds
sbb
xchg
inc
hlt
outsb
push
jb
stc
mov
mov
pop
mov
cwtl
outsl
or
ds
cmpsl
cmc
push
push
xchg
push
inc
in
push
jmp
in
test
in
xchg
or
pop
ret
pop
xchg
dec
dec
pop
fwait
pop
mov
or
aaa
pop
cmp
lods
cmp
and
jo
mov
icebp
xchg
iret
daa
and
les
jecxz
jnp
mov
push
ss
dec
mov
sbb
mov
loopne
dec
mov
ret
cltd
add
movsb
mov
mov
xchg
xor
loope
arpl
mov
aad
imul
sbb
imul
ja
jo
subl
mov
fidivl
fdivrl
loope
xchg
cmpsl
in
pop
add
aam
das
push
inc
mov
mov
mov
mov
arpl
cmp
out
push
int3
add
repnz
imul
dec
ljmp
imul
pop
loop
sahf
mov
dec
orl
xchg
cmp
push
dec
lea
sbb
cmc
in
dec
cmp
insl
nop
mov
pop
mov
rol
push
sar
jl
adcb
out
adc
adc
xor
scas
out
adc
cltd
adc
or
mov
pop
aaa
push
mov
and
test
test
mov
sti
hlt
cltd
cld
insb
into
dec
js
loopne
cmc
outsl
xchg
insb
push
mov
test
push
aad
das
mov
jnp
in
out
inc
pop
popf
imull
daa
inc
cmpsl
inc
scas
je
and
push
sbb
and
or
adc
bound
xchg
adc
xor
mov
push
pop
mov
movsl
bnd
jbe
repnz
hlt
out
scas
jle
or
xor
inc
es
repz
repnz
jp
jnp
roll
fdivrs
mov
or
mov
adc
jne
orb
add
clc
sbb
push
xor
dec
into
pop
and
xor
aad
push
imul
insb
ret
test
mull
mulb
repz
out
xchg
clc
addr16
and
jle
xchg
lret
enter
fwait
mov
imul
jb
shll
test
mov
lea
aad
inc
mov
jge
stc
insl
push
pcmpeqd
enter
dec
es
mov
jnp
aam
pop
scas
popf
mov
push
pusha
sub
imulb
pop
int3
adc
mov
jmp
push
sub
pusha
and
and
call
inc
xor
mov
je
cld
loop
or
je
mov
out
mov
test
in
or
pop
lret
and
cmpsb
test
dec
iret
mov
or
or
addr16
sbb
add
inc
lods
lcall
les
rorb
jecxz
arpl
inc
jmp
pop
push
sahf
or
shrb
xchg
test
and
es
insl
inc
jno
push
in
inc
fcompl
xchg
inc
push
fistpl
pop
in
inc
mov
cld
sti
jmp
loope
imul
into
sub
mov
push
cmp
in
jb
insl
push
repz
orl
xlat
or
into
or
andb
xor
xchg
repz
xchg
pop
rcrb
or
ja
das
dec
or
jle
push
arpl
pop
xor
xor
div
push
addr16
std
adc
cltd
push
icebp
push
inc
inc
scas
test
or
push
leave
mov
decl
subl
fdivrl
push
add
adc
pop
loope
xchg
in
je
adc
mov
out
gs
xor
and
mov
mov
clc
jns
adc
in
out
clc
xchg
arpl
fidivrs
in
xor
aaa
andb
popf
cwtl
insl
push
push
pushf
mov
insl
fwait
push
jae
or
je
in
data16
shl
arpl
pop
lret
sbb
dec
sub
jmp
push
inc
flds
add
addl
jb
loop,pt
jnp
and
mov
cmp
ret
xor
cmp
cli
mov
mov
push
pop
xchg
lea
clc
and
pop
ror
enter
sarl
pop
clc
stos
dec
add
mov
cmc
arpl
icebp
imul
outsb
dec
jne
cmp
mulb
lock
and
jmp
arpl
aam
inc
test
inc
dec
andl
xchg
add
movsl
xchg
push
movsb
jae
sub
pop
lods
imul
or
outsb
bound
ss
push
loopne
push
sbb
loopne
adc
sub
sbb
in
add
aam
xor
mov
loopne
dec
adc
dec
adc
pop
or
or
clc
scas
fisubrs
test
adc
sbb
lret
aas
sti
cwtl
cmp
imul
bound
dec
mov
cmc
push
fsubrl
aaa
jl
shl
andl
jp
adc
cltd
xor
push
mov
js
mov
aaa
aaa
mulb
mov
dec
dec
xchg
out
xchg
and
push
xlat
mov
stos
sbb
mov
adc
sbb
incb
dec
dec
std
int3
mov
inc
fs
pop
stos
pop
mov
mov
ja
or
dec
sbbl
dec
xchg
inc
fisttps
mov
adc
cwtl
xor
insl
daa
mov
push
inc
xor
xlat
mov
jecxz
iret
lods
test
jb
ror
add
mov
pop
shr
frstor
and
push
xchg
or
push
movsb
cmp
rol
mov
cs
mov
cmpsl
jp
mov
fnstsw
sbb
jmp
add
inc
push
int
pop
add
fcmovnu
or
xchg
lods
imul
out
push
sub
push
cmpsl
addl
leave
bound
pcmpgtw
call
rcrb
aam
vaddsubps
and
xorb
sbb
aaa
mov
pop
cmp
sub
es
fistpll
into
outsl
cmp
jo
call
cmp
xchg
test
std
mov
ret
rolb
fs
shrl
movsl
xor
in
xor
jo
inc
les
sahf
sub
and
int
aam
or
ss
xchg
add
shrl
xchg
les
aad
inc
cmp
sbb
ss
std
adc
or
and
mov
les
xor
movsb
enter
xchg
add
mov
jle
scas
repz
and
loopne
push
enter
adc
cwtl
imul
shll
ss
ret
add
or
jnp
sub
xchg
add
shrb
add
cmp
pop
insb
adc
lret
xor
or
cs
mov
dec
sahf
mov
mov
push
inc
in
adc
lahf
adc
popf
sarb
adc
xchg
xchg
cld
arpl
lock
sar
test
call
cmc
pop
imul
pop
mov
scas
iret
add
and
sbb
push
inc
pop
mov
xor
fs
cmp
push
jbe
fadds
shll
jmp
jnp
sub
incl
xchg
cmp
mulb
xchg
mov
popa
test
and
sub
testl
leave
aad
and
lahf
andl
mov
and
cmp
sbb
fldenv
or
mov
int3
mov
mov
aaa
inc
adc
cmp
ret
int
push
dec
xchg
add
test
jns
sti
and
dec
jg
push
push
dec
test
ljmp
stos
jae
inc
sbb
daa
inc
lret
mov
mov
test
les
sbb
cmp
and
ret
xor
push
cld
pop
pop
mov
push
mov
add
xor
jo
in
mov
lret
push
leave
aaa
je
shll
adc
popf
push
imul
scas
lret
pop
fwait
insl
lret
mov
in
dec
xchg
nop
mov
mov
add
subl
nop
add
push
xor
lcall
js
fbld
xchg
mov
jns
insl
testb
pop
jo
nop
movsb
pop
jle
pushf
add
jg
je
add
mov
and
xor
data16
imul
mov
mov
or
cmp
addl
loope
or
es
fidivs
das
int
jno
add
ds
scas
inc
pop
jns
les
dec
cmc
push
lret
cwtl
sub
js
rcrb
out
add
jbe
mov
or
loope
mov
xor
jecxz
sub
jle
sbb
push
jbe
mov
xchg
mov
add
stc
sbb
push
in
dec
adc
jge
xchg
arpl
leave
sub
scas
loopne
xor
or
sbb
push
cmc
nop
test
jo
inc
fwait
xchg
fcmovnbe
adc
mov
notb
cwtl
dec
lock
sbb
mov
inc
adc
out
sbb
mov
dec
mov
jbe
dec
xor
mov
mov
xchg
into
jecxz
cmp
xchg
jp
in
out
imul
xchg
pusha
adc
shll
mov
cmp
lods
adc
cli
mov
int3
mov
adc
xor
adcb
sub
add
fs
shlb
cmc
mov
mov
push
imul
cwtl
lock
sub
xor
xor
lock
mov
sub
fidivs
inc
adc
cmp
jae
adc
or
js
mov
imul
test
pop
shll
lea
add
jle
add
in
push
insb
xchg
pop
cs
shlb
daa
out
mov
dec
cmp
adc
out
testb
arpl
cwtl
mov
ret
pop
in
out
mov
std
divl
mov
or
mov
pop
mov
dec
iret
inc
pop
jg
jge
pop
dec
pop
jno
inc
adc
adc
cs
ds
orb
jecxz
insl
jge
mov
in
bound
popa
loope
adc
mov
aas
push
xchg
sbb
pop
push
ffree
js
aad
xor
sti
ret
mov
sub
daa
jnp
aam
clc
iret
push
cmp
mov
xchg
pop
rcrb
insb
aam
cmp
mov
shr
mov
movsl
jb
lcall
enter
or
cmp
jno
dec
clc
inc
inc
sub
movsl
in
bound
dec
add
insl
or
mov
insl
bound
test
mov
in
dec
xchg
push
je
stc
aas
add
repnz
cmc
les
sbb
pushf
ljmp
repnz
jecxz
push
pop
add
push
hlt
mov
and
neg
mov
movsl
cld
aad
add
mov
mov
imul
insb
xchg
inc
cmc
lods
rorl
push
inc
jnp
and
mov
cmp
jl
jo,pt
cli
pushf
stc
adc
push
sub
stc
movsb
dec
inc
add
ret
push
cmp
sbb
leave
loopne
xchg
sub
push
mov
mov
mov
push
xlat
cli
jp
out
and
das
in
shlb
pushf
mov
mov
and
adc
push
repnz
dec
nop
je
inc
dec
aas
push
dec
stos
inc
lea
outsb
ds
or
andl
push
test
lcall
adc
mov
js
repz
sub
icebp
adc
xchg
in
jne
ror
mov
dec
out
inc
lret
in
sbb
mov
pop
divl
cli
ljmp
sub
stc
jge
scas
out
into
jge
insb
lds
mov
scas
cmc
movsb
xchg
or
jne
push
test
adc
mov
jecxz
call
dec
loop
sub
mov
sub
mov
jecxz
push
int3
or
pop
test
push
mov
nop
xor
into
cmp
je
scas
xlat
jbe
mov
xor
pop
sbb
push
dec
dec
pop
cld
insl
push
lret
divl
xor
ror
jle
inc
out
xor
sbb
adc
xchg
and
fcmovne
inc
dec
mov
push
arpl
mov
xchg
cmpsb
aas
aas
mov
add
mov
push
sbb
call
mov
jle
gs
jmp
inc
cmc
mov
lret
mov
pop
cmpsb
in
test
push
dec
and
xchg
je
cmp
sbb
fs
mov
adc
cwtl
cmp
or
xchg
fisttpl
leave
sub
popf
sub
test
test
sbb
filds
leave
xchg
add
gs
pop
adc
cmpsb
cs
loope
push
sahf
daa
push
test
fdivrl
test
lret
xchg
mov
mov
dec
dec
fidivl
sub
mov
out
adc
dec
xor
les
lea
inc
fidivl
add
sub
xchg
or
mov
es
mov
out
test
mov
leave
and
jge
cld
scas
std
cmpb
jmp
adc
lret
lret
push
insl
sbb
shll
loop
jnp
adc
les
dec
imul
adc
pop
lret
inc
push
mov
test
imul
test
clc
lods
into
add
and
clc
scas
mov
fcmovnbe
adc
add
xor
jle
sub
mov
xchg
add
xchg
jmp
pop
fldl
push
leave
enter
cmpsl
cmp
inc
jae
pmullw
fidivrl
jo
in
add
mov
add
dec
loopne
out
imulb
rcrl
out
jb
cmp
mull
add
xchg
mov
shlb
and
mov
ljmp
pop
sub
movsl
cmp
stc
push
test
adcl
imul
aaa
adc
add
leave
cmpsl
leave
in
jl
aam
sbb
sub
xor
mov
cmp
rcrb
fcompl
pop
push
je
xchg
xchg
push
sub
repz
into
pushf
nop
fldt
cmp
mov
out
cmp
jl
sbb
or
pop
pop
and
mov
lahf
fldt
mov
out
mov
sub
leave
mov
push
dec
cs
aaa
xlat
lds
add
pop
push
xor
inc
cmc
sbb
or
fidivrl
push
lea
stos
sbb
jbe
rcpps
push
pop
int
push
or
sbb
xchg
mov
jne
or
dec
mov
insl
rcll
sbb
dec
sbb
in
mov
in
aas
movsl
mov
xor
or
call
fs
xor
cld
fs
repnz
lret
add
xor
jmp
imull
xor
call
out
call
cmpsb
lcall
push
stos
push
inc
or
fidivs
push
adc
xor
pop
xchg
xchg
mov
orb
jge
and
filds
mov
sub
cmp
ficomps
fcmovb
cmp
data16
add
mov
mov
cmc
movsb
jle
push
shl
inc
xchg
pop
test
repz
mov
cltd
aad
aad
push
cmp
ficoml
or
push
in
adc
inc
add
pop
cld
mov
or
lcall
insb
sbb
lcall
cli
sbb
sbb
push
xchg
stos
jno
add
mov
test
arpl
mov
fs
inc
push
and
stc
repnz
mov
mov
xor
mov
pop
lock
movsl
stos
mov
mov
test
cmp
mov
inc
testb
popl
or
inc
mov
cmpsb
mov
out
fstpl
jb
inc
cmpsl
pop
xor
stos
scas
or
xor
mov
lcall
inc
sub
je
cwtl
imul
mov
lea
aam
aam
lods
sub
std
repnz
shll
daa
iret
pop
xor
dec
sar
fdivrs
aad
outsb
or
sahf
xor
lret
es
and
cmp
pop
mov
popf
cwtl
jno
outsb
jp
lea
repz
push
cld
scas
lret
mov
mov
cmpsl
mov
xor
ror
adc
dec
mov
aas
sub
dec
mov
mov
lea
movsb
aaa
scas
inc
ret
add
cwtl
divl
sarb
shrl
dec
loope
jg
faddl
jg
mov
mov
jnp
sub
out
sarl
push
cmp
movsb
add
scas
lcall
shrb
sarl
nop
sub
xor
mov
cmp
push
or
push
cld
hlt
les
lahf
add
or
cltd
loope
pop
jg
sbb
sub
jns
pop
movsl
xor
sbb
and
les
add
les
orl
stos
mov
hlt
cs
sub
push
and
xor
or
in
test
jle
call
xchg
push
mov
mov
sub
push
negb
leave
out
xor
sahf
pop
xchg
iret
into
push
icebp
jnp
xchg
push
ficompl
std
scas
pusha
push
mov
xor
shrl
jecxz
jl
cs
inc
and
icebp
dec
daa
inc
icebp
pop
in
cmp
adc
hlt
push
xchg
cmp
jl
jp
ds
mov
pop
es
rcrb
int3
mov
jge
imull
cld
or
nop
inc
pop
xchg
imul
xchg
scas
add
pop
dec
aam
int
inc
in
ret
arpl
push
pop
mov
addr16
mov
cltd
dec
fcoms
mov
pop
test
mov
xchg
fsubl
inc
loopne
insb
fsts
xchg
pop
sbb
cli
mov
pop
cli
rclb
adcb
jb
movsb
scas
jg
mov
aas
scas
sub
dec
in
bswap
push
inc
jo
mov
lret
in
test
test
out
and
je
cs
pop
fdivrs
aam
fcomps
cmpsl
arpl
add
and
push
mov
in
inc
inc
push
lret
push
push
ret
sbb
push
mov
jecxz
dec
fisubrs
in
notl
aaa
incl
imul
fnsave
cli
popa
xor
popf
push
aad
sub
out
inc
fidivrl
mov
xchg
je
adc
dec
jecxz
or
sbb
dec
and
mov
hlt
loope
outsl
fbld
and
push
inc
or
adc
and
cltd
pop
adc
test
pop
pop
and
pop
nop
iret
push
xlat
or
pop
lahf
ja
pop
repz
jbe
jns
jo
es
push
imul
shrb
mov
nop
and
stc
push
dec
fs
push
push
jb
jl
adc
inc
and
mov
inc
pop
movsb
sub
xchg
mov
fwait
cmpsl
ss
ljmp
pop
or
cli
adc
nop
mov
pop
lods
jp
enter
adc
in
fs
fbld
dec
lahf
jmp
inc
andb
dec
xchg
aam
icebp
inc
les
dec
adc
int
ljmp
sti
icebp
fldcw
xor
mov
shlb
or
push
fldcw
sbb
dec
jg
mov
mov
cli
mov
sti
icebp
inc
fildl
popa
jbe
mov
adc
inc
ljmp
cmp
dec
pop
xor
es
cmpsl
xchg
ret
sar
sbb
and
xchg
bnd
jno
lods
inc
int
cwtl
cmovle
imul
sub
faddl
jge
push
jbe
int
call
xchg
flds
mov
pushf
negb
shrb
add
hlt
dec
xchg
hlt
imul
ret
mov
insb
dec
mov
movsl
push
in
xor
xor
imul
push
sbb
sub
adc
int
shlb
inc
push
sub
mov
fistl
inc
sti
inc
ret
stc
movsl
mov
sub
lock
ss
sti
in
adc
shrb
mov
movsl
push
decl
outsb
cltd
xor
repnz
mov
aas
sbb
mov
dec
into
adc
fpatan
mov
in
decl
clc
xchg
cmc
xor
sbb
setne
into
lods
jl
push
pusha
out
mov
loope
mov
test
push
or
dec
mov
mov
neg
in
stc
and
arpl
dec
jg
push
fstpt
daa
mov
lret
negb
dec
pop
mov
push
inc
leave
mov
push
scas
jb
mov
imul
mov
cmp
xchg
pop
int
outsl
dec
fstps
int
andl
test
sbb
mov
lods
sahf
lret
test
pop
mov
xchg
orb
cld
mov
lret
sarb
cmp
daa
ret
dec
ficoms
push
rcll
mov
ret
add
fdivrs
movsl
ret
fcoms
jns
adc
mov
insl
or
gs
sbb
out
push
aam
cmp
adc
mov
cmc
and
test
aad
in
sti
test
scas
jl
sbb
push
dec
popf
pop
insl
cld
pop
or
lods
das
pusha
js
mov
jno
jnp
add
addb
lret
in
in
mov
loopne
jecxz
and
sub
repz
fistpl
ret
sbb
cmp
push
add
jecxz
xor
fimull
insb
add
mov
into
mov
sub
dec
push
push
out
push
xchg
out
or
jo
jbe
ds
loope
inc
int
test
aad
adc
ja
mov
add
dec
push
sbb
movsl
xor
sti
adc
icebp
dec
cmp
push
std
sbb
mov
fidivl
aad
fdivrl
push
enter
call
inc
xor
mov
ret
loopne,pt
sbb
mov
stos
dec
mov
sbb
lahf
neg
cld
mov
ret
dec
mov
andl
hlt
add
and
leave
call
cmp
sbb
sub
dec
jmp
inc
adc
aas
xor
push
cs
lea
jl
sub
jle
jl
pop
xor
ja
push
test
sbb
pop
or
imul
pop
sbb
outsb
push
popf
clc
fst
add
mov
or
dec
adc
pusha
mov
jne
mov
adc
pusha
push
fdivr
cmp
pop
repz
or
mov
pop
loope
es
pop
out
adc
ljmp
gs
out
mov
push
in
mov
lahf
mov
aad
cmpsb
adcb
mov
or
lret
push
sbb
xor
cld
ss
repnz
push
lock
push
xor
loopne
push
ja
jb
cmp
xor
inc
fidivs
cmpl
dec
add
mov
mov
lods
mov
dec
cmp
mov
push
lods
repz
test
jnp
jae
mov
xchg
jle
daa
sbb
mov
rcl
jg
xchg
and
xor
fs
jmp
arpl
jbe
arpl
add
sub
push
jb
std
sub
repnz
les
push
xor
mov
pop
ljmp
mov
inc
in
in
adc
inc
stos
cmp
cwtl
imul
mov
sbb
xor
inc
push
sbb
mov
push
adc
inc
or
pop
or
inc
mov
jbe
in
iret
fistps
clc
jnp
jecxz
rol
clc
dec
inc
jmp
add
sbb
push
pop
mov
dec
and
lret
push
and
push
sbb
lods
iret
add
jl
loope
cmp
pop
pop
test
sbb
add
or
sbb
mov
inc
jns
lds
fwait
xor
fldt
sarl
daa
es
lahf
mov
dec
jne
jmp
or
dec
push
and
jecxz
aad
xchg
push
and
adc
mov
push
mov
inc
in
and
sbb
ja
loop
and
je
push
gs
movsl
mov
aas
aas
data16
test
std
sti
cli
jle
xchg
cmpsl
and
cmpsb
add
push
mov
push
notl
sahf
dec
jns
insl
xchg
push
cmp
sarb
call
mov
jnp
cli
shll
imul
xor
inc
dec
mov
sub
mov
xchg
xchg
pusha
leave
enter
pop
mov
adcb
gs
in
and
mov
cmp
and
add
cmp
mov
or
mov
xchg
xlat
aad
loopne
pop
dec
cmp
cmpsl
inc
add
pushf
test
pop
xor
scas
inc
add
mov
repnz
jp
mov
xor
dec
fildll
loop
or
mov
loop
rol
notl
or
xlat
push
mov
testb
xor
xor
cmp
idivl
adc
dec
iret
stc
dec
ja
int
xor
fldcw
jecxz
fiadds
add
leave
or
mov
pop
pop
dec
or
je
inc
xor
dec
mov
stos
mov
jl
jecxz
xor
or
stc
mov
add
leave
inc
outsl
pop
cmpsb
test
xchg
imul
add
lods
pop
cmp
mov
scas
std
jg
dec
into
leave
sbb
ret
loope
rolb
xchg
inc
push
divb
ficomps
jg
in
add
sbb
jecxz
mov
inc
cmp
pop
and
imul
push
pop
enter
and
stos
jae
cmp
daa
ret
jg
xchg
push
lds
dec
jmp
addr16
and
test
xchg
ret
dec
mov
add
stc
pop
sub
nop
int
mov
jle
cmp
sub
fbstp
inc
jg
into
and
lds
inc
fsubrl
call
push
fwait
dec
das
popa
in
fdivrp
mov
aas
push
sbb
jb
jnp
loopne
push
or
pop
adc
sti
and
outsb
sbb
ret
dec
fisubl
inc
pop
jnp
push
rorb
and
rorl
nop
dec
mov
mov
mov
add
push
cld
stos
add
jnp
add
scas
loope
scas
sti
ja
out
xchg
pop
cltd
mov
jmp
pusha
bound
mov
sub
lds
jbe
rclb
xchg
sarl
adc
cs
or
je
cwtl
inc
nop
shr
aam
pop
idivl
into
movsb
or
sub
xor
push
es
or
aaa
and
xor
pop
mov
das
push
insb
aas
ljmp
data16
enter
push
xchg
mov
pushf
xchg
and
and
dec
adc
dec
xchg
nop
cmpsb
popa
in
mov
mov
pop
mov
cmpsb
push
or
lock
lea
clc
pop
cmovbe
js
xor
pop
cli
out
fdivrl
mov
or
jae
dec
cwtl
lock
and
xor
push
mov
inc
xchg
cmp
lock
xchg
adcl
xor
iret
dec
push
or
mov
pushaw
fadd
or
cmpsl
xor
icebp
mov
mov
fwait
adc
cli
test
sahf
lods
jb
adc
push
jp
mov
mov
cmp
dec
sub
sbb
xor
fs
push
mov
in
into
clc
or
adc
adc
mov
mov
popf
iret
mov
fcmovu
sti
sub
mov
sbb
push
nop
inc
add
mov
or
std
mov
outsl
pop
xor
sti
mov
in
fsubrs
sub
inc
pop
xchg
cld
test
or
call
push
xchg
pop
aad
shlb
inc
sbb
lcall
jb
outsb
fnsave
adc
cmp
mov
in
jp
sub
out
cmp
ds
add
enter
and
sti
out
bound
ret
orb
ljmp
jmp
imul
aaa
icebp
cmp
fucomi
stc
ja
lock
call
arpl
adc
and
cmp
mov
mov
pushf
xor
stc
fists
mov
movl
mov
in
push
jno
mov
pop
loope
xlat
pop
mov
fcoml
inc
test
pop
stc
pop
fwait
pop
hlt
xor
or
mov
dec
les
mov
and
aam
pop
data16
leave
lods
dec
add
mov
jp
call
dec
mov
inc
mov
mov
adc
adc
imul
js
int
and
xchg
scas
mov
sub
rcrl
mov
mov
or
mov
mov
in
adc
cmp
ret
lea
cmc
and
insl
mov
pop
arpl
cwtl
outsl
es
popf
leave
cli
mov
dec
add
insb
push
push
pop
cld
daa
xor
or
dec
mov
adc
lods
mov
out
or
sub
lahf
adc
inc
test
lea
sbb
cmp
rcr
aam
movsl
pshufw
sub
adc
js
and
push
pop
pop
push
aad
stos
cmp
inc
xor
fimuls
xchg
or
mov
cmpsb
dec
xor
daa
testl
xor
jle
imul
add
mull
cs
ja
xchg
out
adc
mov
push
dec
in
add
push
cmpsb
rol
adc
dec
inc
nop
cwtl
adc
push
fsubl
rorb
cmp
mov
push
adc
int3
cmpsl
into
rcrb
loope
adc
xchg
pop
fcoms
popa
mov
adc
adc
push
xlat
adc
adcl
movsl
sbb
fyl2xp1
ret
mov
btl
cmpsb
out
jb
cld
mov
and
inc
iret
push
mov
stc
cmp
lahf
jg
daa
jb
adcl
ss
xor
or
pusha
test
lea
inc
mov
and
js
xchg
pop
push
int3
jl
xchg
out
neg
jmp
xor
inc
mov
mov
leave
in
push
fs
fs
lock
cmp
push
fwait
push
jmp
pop
mov
popl
imul
hlt
lds
xchg
sbb
ja
mov
arpl
std
xchg
dec
addl
sarb
pop
push
push
fs
push
das
dec
inc
iret
inc
stos
lods
xchg
adc
pushf
adc
ss
shll
ficoml
add
push
sbb
add
dec
jae
sub
ss
mov
xor
fiaddl
cmc
inc
ficompl
add
jno
fcomps
cmpsl
inc
jno
ret
cmp
repnz
es
cmp
xlat
xchg
aam
and
adc
dec
scas
sarb
out
xor
inc
fnstsw
adc
sbb
iret
and
mov
mov
xor
negb
movsl
mov
lret
sbb
enter
pop
cmpsl
push
rcrb
push
in
sti
push
jle
jmp
push
xor
mov
enter
and
push
repz
ja
and
insl
inc
jg
push
loope
sbbl
add
mov
cmp
mov
jecxz
adc
inc
insb
adc
dec
and
scas
adc
test
push
scas
add
mov
xchg
xor
mov
mov
sarb
mov
hlt
add
orl
push
test
pop
or
shlb
jo
push
outsb
dec
cltd
push
cmpsl
ret
je
pop
bound
daa
mov
mov
xchg
push
or
arpl
pop
pop
mov
push
jl
xlat
sbbl
and
inc
mov
dec
repnz
sub
dec
pop
ficomps
mov
push
pop
jne
xor
push
scas
mov
and
and
mov
cmc
lea
inc
push
xor
sar
and
stos
cs
lret
lcall
sbb
out
pop
rcrl
addr16
and
pop
call
out
fmul
dec
push
push
loope
xor
sbb
mov
xchg
mov
shl
movsb
push
aaa
stos
mov
lret
adc
xor
stos
out
jp,pn
sar
add
les
pusha
pop
jne
jg
jno
clc
sbb
xor
enter
mov
xor
sub
in
adcb
jne
sbb
lea
out
cmp
insl
cmpsb
testb
bound
insl
lret
clc
xor
inc
adc
sbb
lock
lcall
adc
add
cmp
in
pop
and
sbb
inc
sub
cmp
add
inc
cmc
jl
les
cmpsb
lahf
prefetchwt1
pop
xor
test
ja
and
xor
mov
in
dec
jecxz
sti
xchg
int3
sahf
mov
jb
cltd
add
mov
outsb
jmp
jle
test
cmpsl
stc
sti
cs
add
pop
xchg
xchg
adc
ds
popa
mov
cs
sub
mov
jns
sub
les
sub
enter
test
scas
add
jg
sahf
shll
xchg
and
add
or
pop
inc
lahf
pop
push
push
xor
jae
aam
in
loop
dec
xchg
push
lcall
pop
dec
fistps
pop
add
data16
and
frstor
and
ret
xor
push
xor
cltd
aad
fiaddl
pop
lock
loope
and
arpl
sbb
sbb
xor
test
cmp
sbb
cmp
ljmp
inc
sbb
dec
inc
or
in
mov
out
ja
or
inc
dec
js
cli
cmp
push
adc
adc
fdivrl
lds
into
jae
dec
or
xor
push
ja
or
mov
iret
daa
adc
fwait
lret
rcl
repnz
sbb
xchg
sbb
mov
ret
jmp
mov
mov
enter
js
adc
and
bound
test
sbb
cltd
movsb
add
mov
ret
adc
and
jb
ficoml
jmp
jle
jp
dec
sub
fs
fs
imul
pop
in
adc
cmp
inc
lahf
pop
or
pop
popa
cmpsl
or
mov
inc
loop
or
mov
sarb
popa
ret
je
sbb
xor
leave
mov
ljmp
push
pop
fldl
jnp
in
shl
or
mov
mov
call
dec
pusha
fwait
pushf
xor
lea
sbb
sub
jg
pop
mov
fmull
sbb
xchg
imul
fsubrl
mov
jo
adc
ret
adc
bound
dec
adc
bound
pop
test
sub
movsl
jb
sbb
leave
or
mov
and
pop
ret
sub
sti
push
dec
dec
add
aam
sti
jbe
mov
add
lcall
test
mov
scas
cmp
into
and
in
ljmp
out
and
fdiv
dec
in
lret
fimuls
or
test
hlt
mov
mov
insb
stc
lds
sub
enter
pop
mov
or
add
scas
orl
and
jae
in
add
mov
repz
inc
inc
cwtl
or
inc
int
dec
add
sbb
add
popa
ret
imul
xchg
gs
leave
pop
insl
cmp
mov
js
push
push
aam
das
xchg
cmp
loopne
out
add
pusha
aas
sbb
push
pop
pop
push
sbb
cmc
pop
mov
push
addl
sub
xor
dec
cmp
mov
stos
jae
add
ss
arpl
in
add
outsb
push
inc
cmpsb
loop
dec
in
pop
cmp
cmp
mov
icebp
negb
jle
sti
adc
mov
adc
jae
inc
push
cli
clc
xor
xlat
adc
adc
jnp
ljmp
xchg
lds
test
test
adc
sub
jg
test
or
and
adcb
loope
mov
in
jne
inc
movsb
push
xor
and
cs
pop
stc
mov
sub
hlt
add
fimull
aaa
rcrl
sbb
fcomps
cmp
test
cmpsb
out
movsb
out
mov
icebp
push
xlat
mov
xor
dec
nop
sarb
sub
inc
push
lahf
aaa
mov
mov
or
xor
sub
mov
rclb
ljmp
sub
ret
mov
cmp
out
loop
loopne
fbstp
enter
mov
pushf
xchg
das
pop
cmpsb
div
inc
arpl
jl
lds
jge
orl
jne
nop
fisttpll
inc
jmp
xchg
call
in
sbb
dec
push
jecxz
xor
fcomps
dec
sub
mov
cmp
enter
mov
arpl
lret
pop
push
or
ret
or
mov
and
dec
daa
adc
add
sub
add
pop
dec
mov
lds
push
and
dec
lahf
add
xchg
pop
push
push
icebp
mov
push
inc
cmp
mov
clc
sub
and
loop
mov
sbb
mov
lds
push
adc
cld
or
or
xchg
xchg
leave
test
mov
mov
out
scas
inc
stos
jbe
enter
sub
in
repz
xor
mov
mov
xchg
int3
ljmp
test
push
jns
ss
push
loope
fwait
xor
ficompl
fnstcw
mov
pop
nop
shlb
push
clc
adc
dec
fadd
push
lret
dec
inc
das
lea
adc
ret
out
notl
sahf
xchg
lods
pop
les
cld
xlat
std
or
push
add
pop
dec
lret
cmpsb
enter
xchg
gs
cmp
cmpsb
mov
inc
hlt
inc
fldenv
xchg
mov
fdivrl
xor
lods
movsb
ljmp
rcll
into
shlb
cli
imul
sub
adc
fisubs
fbld
ret
dec
fimull
sub
fs
xor
scas
push
lcall
inc
lret
jae
js
popl
fildl
test
sbb
xchg
cmp
stos
lahf
mov
push
xchg
ss
pop
dec
lea
cli
fwait
call
xchg
dec
mov
xor
sarl
sbb
xor
cld
push
jge
loop
andb
nop
rolb
dec
or
stos
sti
fildll
mov
sbb
mov
out
test
and
loope
dec
inc
or
int3
xchg
bound
fadd
push
js
fisubrs
int3
ret
add
das
mov
pmuludq
aad
mov
out
fs
mov
fsubrl
add
sub
andb
shll
mov
or
mov
ret
mov
jb
xor
int3
popf
sub
clc
adc
jno
cmp
jl
test
fidivl
cmc
xor
cmpsl
xchg
sbb
push
xlat
and
jnp
and
mov
mov
sub
fistpl
add
mov
shrl
ret
push
scas
mov
or
mov
lret
ret
xchg
mov
jmp
or
dec
fidivrs
lods
sub
les
pop
imul
es
xchg
pop
xor
dec
inc
test
outsl
push
inc
aaa
sahf
ljmp
sti
out
call
imul
push
adc
dec
mov
out
shr
xor
std
mov
out
scas
call
mov
js
pop
mov
xchg
or
cmc
adc
and
adc
nop
jmp
pop
mov
fsts
dec
push
cmpsb
jbe
push
mov
scas
or
xor
push
fiaddl
imul
inc
lds
jne
or
mov
mov
lds
out
or
sti
cmp
push
add
rcrb
adc
repnz
lods
or
push
shrl
aad
mov
imul
sub
adc
cmp
movsb
inc
adc
cmp
rol
movsb
sbb
call
idivl
scas
arpl
inc
out
pop
xchg
cli
scas
inc
stc
mov
pop
dec
push
push
dec
lcall
lds
push
int3
cs
das
jl
add
movsb
js
outsl
dec
inc
xor
aad
inc
jmp
inc
cmp
test
mov
aad
sbb
sahf
dec
aam
outsl
jg
and
sbb
dec
jae
and
jo
andl
mov
fildl
and
adc
fimull
dec
inc
int3
push
iret
lahf
sbb
cltd
gs
mov
jo
jmp
mov
orb
sub
pop
xlat
pop
enter
mov
hlt
xchg
or
mov
incl
pusha
push
push
xor
fs
repz
and
das
addl
scas
xchg
into
pop
pusha
pushf
cld
xchg
daa
cmp
mov
shrl
fiadds
lock
lea
fadds
shlb
xchg
movsb
xchg
aas
ret
frstor
mov
in
lahf
sbb
inc
mov
out
jb
lods
je
cmp
dec
add
pop
mov
les
pop
push
leave
call
insb
mov
jge
ret
add
inc
or
bound
cmp
mov
mov
jns
xchg
lds
sub
cltd
out
out
mov
mov
mov
xchg
fwait
mov
es
test
popa
pop
and
insl
cmp
push
aam
clc
data16
out
fwait
xchg
fsubl
cmp
idivl
inc
lret
movsl
clc
xor
xchg
out
add
ja
call
mov
in
int3
pushf
mov
stos
test
mul
add
cmp
xchg
icebp
dec
orb
dec
push
movsl
fwait
movsl
cli
cltd
xor
or
ret
lds
push
jae
rorb
scas
sbb
jp
or
sbb
out
repz
jbe
inc
xor
movsl
xchg
repnz
mov
jbe
pinsrw
add
jnp
mov
add
outsb
je
ljmp
roll
aad
xchg
pop
push
je
nop
ljmp
inc
sbb
sbb
inc
clc
xchg
dec
les
rclb
in
jne
stc
lods
jmp
xchg
jo
test
fwait
jns
enter
outsb
fs
movsl
fwait
lods
daa
setl
pop
pop
ljmp
jne
out
dec
adc
mov
or
lret
fxtract
push
scas
in
daa
mov
int3
and
or
dec
push
mov
incl
mov
sarl
lret
iret
js
xor
jno
add
add
adc
mov
movl
mov
hlt
pop
mov
jge
dec
sub
jl
mov
mov
pushl
lea
cmp
push
push
push
cli
sub
scas
adc
inc
or
xor
test
xchg
or
sbb
add
or
insb
lock
lods
push
jne
daa
hlt
pop
je
std
and
fadd
add
and
jecxz
fs
test
or
es
mov
adcl
sbb
cs
inc
sbb
sbb
ja
loopne
mov
lret
std
and
arpl
lea
jge
jo
out
jl
scas
dec
lret
adc
pop
mov
jne
add
jp
mov
xchg
pop
lock
hlt
add
dec
iret
push
sbb
push
lds
push
or
shrl
jle
stos
dec
fs
xchg
je
xchg
sub
loop
mov
outsl
sub
push
cld
mov
mov
or
in
lods
leave
iret
movsl
test
lret
mov
jae
xor
xchg
aaa
call
inc
ja
in
in
addb
cli
mov
sbb
fldt
repnz
cmp
inc
mov
mov
jl
ja
cmp
xchg
mov
sarb
enter
lods
repnz
jo
xor
lods
icebp
inc
mov
push
or
and
negl
dec
cwtl
in
pop
add
pop
jmp
pop
cwtl
shlb
aas
or
out
push
mov
sub
xchg
mov
jne
push
fcmovb
push
mov
push
dec
fcomip
xor
jp
or
ss
das
fcomps
pop
jb
sahf
iret
cmpsb
xor
mov
sub
push
pop
pusha
out
cld
mov
add
scas
es
mov
mov
mov
mov
inc
jno
jg
dec
loop
pop
push
dec
or
cli
or
mov
js
dec
dec
adc
pop
or
pop
inc
add
fcmove
mov
ror
call
dec
out
and
fdivrp
pop
xchg
and
inc
cmpsb
ss
divb
decb
add
cmc
mov
lret
leave
nop
xlat
jmp
pop
sti
fisubrl
pop
aas
xor
lahf
bnd
lret
sti
push
or
fwait
mov
mov
std
jmp
adc
fsub
push
sahf
xor
cmp
pop
inc
hlt
or
addr16
push
lret
popa
hlt
orl
mov
movsl
mov
hlt
rcrl
jg
add
es
int3
stos
in
mov
add
iret
out
mov
cmp
inc
cmp
mov
adc
stc
test
sbb
push
pop
movsb
pop
scas
rcll
rcll
punpckhwd
inc
ds
nop
inc
nop
scas
rcr
pop
jne
int
dec
inc
jmp
mov
sti
lret
mov
shll
mov
stos
or
push
test
adc
scas
movsb
mov
mov
add
push
adc
mov
arpl
and
jg
cmp
fs
dec
cmc
ret
loope
pop
or
rep
sbb
std
pusha
pop
mov
fcoms
jmp
mov
pop
adc
outsl
sbbb
mov
stc
je
fdivp
and
add
pop
xchg
sbb
pusha
xchg
or
cmc
cmpb
iret
adc
lods
scas
test
add
xchg
jb
enter
pop
out
sbb
das
popa
adc
sub
iret
pop
daa
rolb
out
jno
out
enter
fadds
movsl
out
hlt
adc
or
leave
ja
addr16
lds
inc
push
pop
test
add
pushl
arpl
popf
mov
hlt
ret
cmp
jl
pop
int
inc
in
aam
push
test
mov
dec
shrb
jmp
xor
popa
fistl
xchg
shlb
jne
rcrl
add
dec
dec
testb
sub
adc
sarb
jnp
mov
jns
arpl
insb
push
fbstp
aas
mov
out
and
rcll
in
in
cmp
sbb
push
xor
sbb
loopne
ffree
xchg
stos
xor
xchg
adc
xchg
in
jno
cwtl
xchg
inc
mov
repz
cmp
das
pop
insl
std
adc
xlat
pop
jp
inc
mov
sbb
rcrl
jmp
xchg
inc
insl
sub
pop
dec
sub
push
orl
mov
aam
outsl
mov
cmp
or
fsubrl
inc
outsb
and
test
les
mov
les
mov
xlat
out
jb
pop
cmp
sub
int
repnz
cmp
cmpsl
sub
jnp
jo
dec
pop
jg
adcl
int3
adc
push
popa
pushf
add
xor
aaa
mov
pop
xor
aas
mov
inc
addr16
scas
jle
gs
cmp
or
js
mov
mov
lea
mov
in
mov
ss
adc
sub
inc
inc
leave
stos
mov
popf
aas
mov
mov
sub
shrl
jo
jl
jg
sbb
mov
aas
mov
push
fs
push
cmc
add
mov
mov
cltd
push
pop
jae
rcr
test
int3
push
shrl
mov
push
adc
loope
scas
mov
std
aam
add
stos
jae,pt
sub
fs
mov
adc
sbb
jnp
and
pusha
bswap
arpl
adc
pop
sti
cmpl
loop
mov
sub
add
jge
gs
or
mov
adc
hlt
stc
stos
fimull
xchg
test
sti
icebp
mov
and
xor
pop
mov
add
and
icebp
scas
dec
inc
sub
mov
imul
rcrl
cmp
loop
mov
aaa
mov
and
mov
daa
inc
pop
push
push
lcall
leave
xchg
pop
je
mov
jp
mov
pop
pusha
out
adc
add
icebp
inc
lret
in
cs
pop
adc
sbbb
cwtl
xchg
ficoml
daa
sahf
bound
in
jo
mov
xchg
rcl
mov
adc
and
xchg
mov
jb
les
movsb
and
sub
ficoms
jno
dec
rorb
cld
mov
les
out
sub
mov
stos
adc
push
sub
loopne
addl
pop
jae
mov
push
cmp
sbb
and
add
and
aam
mov
lret
mov
imul
jmp
push
nop
fwait
test
int
dec
add
popa
jmp
dec
adc
lods
pop
fisubrl
mov
xchg
push
xlat
dec
mov
loopne
sub
cmp
lea
jp
dec
xlat
xor
lahf
mov
test
cmp
insb
inc
push
push
sub
hlt
outsl
and
insl
icebp
out
pop
dec
dec
mov
nop
jle
ds
pop
addr16
jbe
jnp
ds
iret
mov
dec
rorl
enter
adc
mov
cli
frstor
push
add
fbld
test
popa
imul
dec
mov
pop
mov
stc
lret
or
clc
rorl
adc
leave
add
or
pop
dec
mov
or
jo
push
pop
mov
mov
dec
mov
mov
cltd
lods
ret
dec
xor
int3
pushf
jnp
paddd
adc
in
insl
add
mov
cmp
mov
ja
popf
inc
int3
ljmp
pop
les
fildl
dec
xchg
pop
add
scas
shlb
xor
fildl
sub
jns
int
insl
mov
mov
shlb
inc
push
cltd
push
lods
outsl
test
inc
repnz
xchg
add
xor
mov
scas
test
cmc
cmpsl
xor
jge
and
xor
repnz
inc
cmpsb
mov
jne
mov
adc
fldt
icebp
outsb
dec
cmp
xchg
xor
insl
cwtl
popf
add
sbb
test
inc
lret
sub
sahf
xchg
bound
insl
pop
cs
add
das
cli
pop
cmp
push
stos
xor
fcomps
gs
adc
pop
push
pop
ja
sbb
jo
call
mov
push
std
adc
das
mov
fwait
or
loopne
cmp
lods
enter
ljmp
in
test
mov
fisubrs
addb
dec
jmp
repnz
mov
dec
add
mov
lock
xchg
sbb
addl
sbb
cmp
jp
fwait
cmp
jb
lods
or
cmp
xor
or
push
cwtl
mov
pop
stos
add
dec
or
stc
inc
mov
leave
push
mov
adc
jge
mov
enter
dec
inc
mov
pop
mov
pop
aas
dec
add
sbb
mov
push
sbb
loope
mov
movsb
outsl
mov
sub
arpl
fiadds
push
enter
adc
sbb
imul
test
cmp
lods
sub
popf
mov
jmp
inc
sub
pop
xchg
push
lahf
pop
fsubrl
mov
arpl
sub
pop
cmp
fwait
sarl
movsl
stc
jo
cmp
aad
xchg
orb
das
xor
sub
cmpl
rcrl
je
stos
mov
mov
inc
fwait
fwait
popf
les
popa
pop
cmp
jae
daa
and
iret
inc
lcall
cmpsl
lcall
in
mov
xchg
lret
pop
adc
mov
jge
lea
addb
loope
lds
sbb
imul
xchg
dec
mov
call
cli
push
sahf
fildll
mov
repz
notl
or
mov
add
shr
lret
xchg
out
push
inc
cwtl
shlb
in
push
mov
push
xchg
push
cmp
and
ret
xlat
cmp
int3
mov
pop
aaa
out
xchg
lea
cmpsb
adc
push
cld
cmp
jl
and
les
movsb
dec
sbb
sbb
loope
sub
aam
in
out
cmp
mov
lret
repz
xchg
ficompl
sub
iret
lret
push
dec
insl
mov
xchg
mov
adc
add
adc
jmp
cmp
jmp
addr16
rorb
sub
mov
add
aad
xor
and
push
lods
in
out
bound
shll
mov
xchg
ja
mov
movsb
mov
mov
cli
fdivl
loopne
xor
sub
mov
pop
xlat
pusha
cmc
xlat
adc
and
pop
sbbl
and
push
or
mov
mov
pushf
inc
sub
sub
mov
cmpsb
cmpsl
pop
and
mov
push
mov
sub
fdiv
aad
push
ja
out
jo
cld
mov
jbe
push
or
push
adc
test
mov
ffree
data16
mov
sti
cld
dec
push
inc
enter
lods
je
sbbb
push
lock
pop
xor
cmp
or
pop
inc
inc
pop
mov
jns
xchg
fstpl
mov
jl
pushl
loop
jb
push
xchg
inc
jmp
movsl
lcall
fdivrs
insb
jno,pt
or
push
push
xchg
xor
jl
lcall
sbb
adc
pop
fisubrs
mov
cltd
add
xlat
cmp
dec
mov
cmp
jg
out
inc
aas
lds
mov
ljmp
ss
shr
pop
push
jbe
movsb
push
sub
sub
jle
sub
into
push
adc
test
fstpt
dec
add
mov
ljmp
lcall
aad
out
insl
inc
pop
je
dec
push
pop
pop
les
call
dec
fcmove
ljmp
or
fmull
jno
mov
mov
movsb
xchg
sbb
pop
lret
push
dec
test
popa
or
push
xor
adc
daa
xchg
push
iret
andb
cmp
pushf
lret
mov
in
insl
and
or
sahf
ljmp
push
jp
enter
fmull
jmp
outsl
cmp
push
or
sbb
imul
push
pop
rorl
jle
fisubrs
lahf
mov
stos
push
mov
or
dec
fidivrl
inc
push
inc
lods
dec
sub
cmpsb
cmpl
sbb
mov
pop
or
inc
fnstsw
cli
stc
stc
dec
jnp
in
jp
xor
dec
pop
mov
test
mov
push
es
mul
pop
or
jnp
and
sbb
outsb
sarl
or
mov
out
xor
imul
fsubl
loope
xor
xchg
push
pushf
ret
sub
shll
push
insb
mov
xor
dec
inc
xchg
bts
push
cmpsb
dec
and
ret
mov
cmp
fnstenv
mov
push
fnstsw
dec
pop
xchg
and
repnz
stc
inc
sub
push
push
inc
test
push
mov
test
adc
pop
jns
lret
adc
add
cmp
xchg
imul
and
jp
dec
pop
add
push
push
data16
xchg
out
pop
pushl
cwtl
push
or
push
je
nop
mov
addr16
bound
add
xchg
jae
lret
jge
push
dec
fistpll
push
add
or
dec
lahf
cmp
loopne
jg
cmp
xor
xlat
jmp
cmpb
mov
pop
pop
push
lods
mov
dec
loop
push
jo
jo
ljmp
lret
mov
aam
push
dec
hlt
sbb
push
movsl
jle
jno
sarl
data16
xor
lea
dec
and
xchg
lock
pop
or
bound
cli
std
push
popf
mov
cltd
add
push
aaa
pop
stc
out
pushf
test
ret
pushf
xor
leave
push
js
dec
insl
bound
inc
outsb
insb
in
ja
pop
lods
stc
xor
sbb
sbb
insl
or
cmp
das
fcomps
add
outsl
pop
outsl
sub
mov
out
stos
jmp
push
mov
in
lds
shlb
pop
fiadds
loop
adc
xchg
inc
loopne
inc
and
repnz
xchg
call
icebp
ja
mov
mov
sahf
cmp
rcl
adc
dec
adc
rcll
icebp
shrl
in
xchg
or
push
add
aaa
icebp
ror
fsubrs
mov
lea
dec
pushf
pop
dec
inc
sbb
ljmp
rclb
lret
cmp
mov
push
cmp
sahf
aaa
leave
cwtl
pop
mov
ds
stc
or
popf
mov
jecxz
stc
addl
xor
out
jns
adcl
add
lret
mov
lcall
cltd
sub
jnp
fldl
dec
cmp
push
in
mov
loop
rorb
cmp
add
jo
mov
imul
outsl
stc
repz
and
int
fsubl
add
inc
data16
jecxz
mov
xchg
test
lods
xor
inc
xor
incl
or
ret
lds
adc
jne
mov
jl
jns
fisttpl
stos
mov
push
cmp
dec
lea
lods
shrb
sarb
into
or
lods
cli
pop
jg
mov
pop
pusha
pop
push
loopne
sbb
std
adc
add
mov
mov
ja
loope
scas
sub
cmp
outsl
bnd
cld
leave
inc
test
out
cld
movsb
mov
lcall
mov
xor
dec
sub
pop
lea
rcrb
shll
es
fchs
in
clc
push
fwait
adc
or
inc
inc
and
lods
aam
cwtl
leave
add
jb
pop
jne
scas
out
and
inc
inc
test
fcoms
dec
les
xchg
adc
and
mov
xorl
xlat
and
push
cmpsb
sbb
add
rorl
lods
push
test
es
out
dec
enter
xchg
loopne
inc
and
and
xchg
cmp
cmp
jo
mov
push
xchg
je
mov
popa
cmp
inc
test
sbbl
inc
jmp
xchg
mov
jb
jge
aam
fbld
stos
scas
add
insl
xchg
lds
and
out
icebp
or
sbb
pop
in
imul
mov
out
test
test
frstor
mov
mov
jns
xchg
sub
mov
lods
cmp
lret
add
cbtw
icebp
movsb
add
add
mov
seto
add
orb
jns
lahf
nop
rcll
stos
ljmp
js
push
test
mov
xor
mov
aad
inc
sahf
and
push
test
std
les
dec
add
mov
rcrl
out
cwtl
sub
xor
mov
aaa
cmpl
mov
imul
ret
mov
mov
cmp
xchg
dec
add
aad
jnp
fimull
inc
adc
cli
aam
dec
mov
add
cld
lods
sub
adc
outsl
addr16
ss
fucomp
mov
jnp
or
mov
pop
in
mov
push
mov
imul
dec
pop
inc
inc
push
push
pop
std
mov
or
aad
repnz
mov
or
fdivl
xor
fsubp
int
push
mov
jns
fwait
call
sbb
jb
hlt
ljmp
mov
dec
jl
dec
xchg
fnstenv
or
add
mov
mov
sub
lcall
ss
cmpsb
mov
cmp
hlt
sub
aas
push
aam
jb
cmp
inc
push
add
inc
adc
mov
xchg
cmpb
mov
jg
xchg
jnp
inc
in
aas
xor
pop
outsb
jae
hlt
adc
pop
sbbl
dec
or
push
cltd
fcomi
inc
mov
les
rcr
mov
popf
xor
int
and
test
les
pop
repnz
jae
fbld
outsl
sbb
sbb
in
shr
mov
mov
les
andb
fimull
mov
push
test
push
cmpsl
push
cld
rclb
mov
jg
lds
mov
hlt
bound
lods
mov
cmove
lret
out
xor
out
xchg
mov
sbb
and
cmpsl
push
push
jne
push
xchg
in
aam
imul
ljmp
stc
scas
sbb
sbb
fsubl
ret
sbb
push
ljmp
movsb
lds
jno
xor
xor
adc
or
divl
jmp
inc
dec
out
dec
cmpsl
std
mov
inc
pop
xor
xchg
xor
mov
jge
std
mov
adc
repnz
icebp
jnp
push
xor
cmp
data16
cmp
add
sbb
cmc
ds
sbb
fiadds
inc
dec
and
and
mov
jg
hlt
mov
cmp
ljmp
add
mov
sub
stos
outsb
mov
sbb
add
jecxz
and
add
pop
pop
outsb
fnstenv
pop
in
fidivs
aaa
sbb
bound
stos
fs
test
lahf
jmp
push
xchg
dec
jge
enter
push
out
mov
pop
add
mov
cmc
cmpsb
test
lock
mov
and
or
push
push
mov
sub
adc
sbb
mov
pop
xchg
and
xchg
push
mov
mov
push
gs
ja
jns
mov
jne
sub
scas
fdivs
xor
or
dec
pop
pop
movsl
in
jp
push
fdivl
dec
mov
push
xor
sahf
xchg
adc
mov
jge
lods
stos
mov
dec
sub
cmp
dec
and
ror
lds
jmp
cmp
in
sahf
jp
mov
rclb
mov
inc
pop
stc
xor
push
push
in
mov
and
mov
mov
push
or
cmp
es
shll
inc
es
push
jno
fcomps
dec
pop
into
and
test
shlb
jle
jmp
or
jb
insb
test
scas
cmc
sbbl
and
les
addr16
loope
out
pop
pop
cmpsb
dec
punpckhwd
cmp
cli
jo
push
inc
jnp
test
mov
cmpsl
sub
mov
fst
pop
jecxz
push
fsubl
xchg
mov
mov
out
sbb
and
inc
int
fidivl
mov
jne
stos
jg
and
mov
stos
ja
mov
out
das
scas
add
jl
push
inc
xchg
scas
mov
inc
xchg
or
dec
xchg
mov
sbb
ja
lock
jmp
push
test
mov
pop
es
loope
mov
in
mov
repz
xor
fs
outsb
rcrl
lds
popf
dec
and
push
testl
decb
sbb
mov
jge
insl
jl
dec
jecxz
rcll
dec
clc
sub
in
sub
sub
cmc
shll
shlb
mov
test
and
imul
push
data16
adc
stc
pushf
lods
scas
or
jle
xlat
idivl
icebp
xor
add
pushf
stos
push
cltd
pop
add
out
stos
lret
xchg
pop
sarl
test
mov
arpl
sub
nop
or
insl
mov
adc
cmp
inc
movsl
int
mov
adc
and
mov
push
xchg
mov
nop
pop
es
pop
jae
insl
mov
or
lods
mov
shlb
sbb
mov
dec
dec
xchg
pop
pop
lods
inc
mov
cmp
push
fidivrl
out
lret
sbb
lods
stc
pop
cmp
into
inc
dec
add
out
cmp
pop
xor
imul
pushf
cmp
call
mov
pop
adc
scas
sub
test
test
test
loop
sti
stc
lret
dec
inc
cmp
cld
dec
or
xor
mov
xchg
out
adc
cli
jne
loope
movsb
and
push
aas
out
fistps
lods
cmp
fcmovu
pop
aaa
jp
out
mov
or
out
pop
xchg
loope
dec
adc
imul
add
pusha
dec
dec
ret
pop
xchg
aam
lods
inc
xor
loope,pt
xchg
ret
sub
mov
out
mov
push
mov
mov
lock
mov
jb
in
ljmp
lcall
inc
xor
jae
inc
sbb
pushf
adc
pop
mov
jnp
in
push
outsl
dec
xchg
fildl
add
insl
mov
test
cmpsb
shrb
std
fisubs
xchg
or
int3
xor
inc
mov
xchg
inc
sbb
mov
dec
stos
ss
int3
xchg
inc
mov
nop
mov
push
add
fistpll
ss
incl
ja
jg
jg
cmp
out
sbb
ja
mov
push
sbb
pop
ljmp
xorb
bound
pop
fucomi
xlat
mov
pop
sub
fwait
movsl
cmp
push
adc
sub
xchg
popf
add
jmp
add
pop
mov
dec
pop
pop
add
loope
adc
xor
push
jle
push
xor
push
dec
xor
pop
add
fisttps
push
dec
es
sbb
sti
fs
or
xchg
mov
ljmp
adc
pop
jge
sbb
sar
mov
rolb
sub
cmpsb
imul
cld
cwtl
push
push
repnz
test
ret
ret
xbegin
inc
psadbw
mov
inc
loope
adc
int
jae
sbb
mov
dec
ss
lret
xlat
jge
and
add
jne
jecxz
sub
and
enter
movsb
cmpsl
mulb
jo
lahf
int
dec
ljmp
nop
adc
pop
shl
outsl
mov
fs
sub
hlt
dec
popa
enter
and
out
into
dec
jb
sub
dec
push
sub
add
xor
pop
mov
lret
mov
jmp
and
sbb
daa
testb
arpl
jb
mov
or
push
cmpb
mov
or
fsubrp
icebp
rcll
jg
outsb
mov
mov
dec
xor
movsb
add
ret
xchg
push
rcll
fdivs
jecxz
mov
dec
and
fwait
add
sub
lret
and
dec
xchg
or
jge
mov
cmpb
and
outsl
or
mov
xchg
push
mov
and
out
pop
fadd
fdivs
lret
adc
sbb
mov
lock
pop
int3
sub
test
cmp
shlb
fsub
add
push
mov
dec
jnp
fs
es
dec
ds
je
pop
fld
jl
ss
test
xor
dec
sti
cmp
push
add
test
mov
xor
cmp
xor
cmp
fcom
sbbl
es
push
rclb
mov
inc
mov
xor
sub
mov
daa
or
lea
push
xor
ja
sbb
dec
mov
cld
xchg
movsb
or
jecxz
out
jge
mov
add
lea
mov
cmp
jbe
ret
or
cmc
sub
outsb
outsb
dec
or
sar
cltd
sub
xor
add
adc
mov
rcrl
pop
test
rcl
xor
fadd
push
push
stos
jle
add
or
popa
cltd
sarl
iret
jno
leave
mov
int
push
sub
icebp
sub
neg
mov
mov
push
fsubs
cli
sub
cwtl
mov
clc
cmp
jmp
sub
xor
popf
addb
push
jmp
aaa
jmp
jne
outsb
and
enter
xor
ja
gs
or
and
lahf
mov
ret
int
sbb
int3
and
bound
mov
xchg
ret
inc
inc
lret
xchg
or
dec
enter
mov
pop
in
cmp
pop
adc
adc
fnsave
fs
xchg
inc
jnp
shll
sub
mov
sbb
dec
jo
sbb
cmp
lods
push
mov
imull
jb
popf
out
sub
ret
fildl
push
pop
adc
mov
movsl
dec
xor
fstpl
daa
sbb
xorl
xor
xor
adc
mov
fadd
repnz
rcl
and
dec
sub
orl
test
mov
or
mov
cs
mov
inc
xchg
pop
cmpl
dec
sti
mov
push
sub
xor
push
jecxz
loope
add
mov
aas
adc
xor
pop
mov
and
mov
xchg
stos
sbb
mov
mov
sub
ds
sub
mov
inc
add
lahf
icebp
shrl
mov
jno
push
cld
mov
pop
push
je
xlat
add
mov
iret
jmp
and
pop
push
push
dec
loopne
loope
mov
sub
mov
adc
push
enter
jno
and
cmc
mov
mov
mov
shlb
cmpsb
add
cmp
push
dec
sarb
loope
cmpsb
add
call
push
out
cmp
xor
out
xrelease
mov
mov
test
popa
loop
pop
repnz
push
xchg
test
push
mov
or
push
mov
mov
mov
lret
std
scas
or
xchg
cmp
mov
pushw
mov
jbe
pop
lods
nop
cmp
lahf
and
ror
outsb
xchg
mov
lcall
movsl
xor
add
sub
inc
mov
pusha
in
je
mov
stos
jns
in
rorl
push
subl
popf
and
cmp
adc
jae
test
mov
add
push
pop
xchg
add
scas
pop
mov
fdivs
mov
and
xor
imul
jmp
lods
jge
outsb
add
cmp
jge
mov
jo
clc
imul
lock
test
divb
add
lret
xchg
pop
mov
dec
rcrl
stos
sarl
pushl
in
pop
notb
orb
ja
pop
das
inc
mov
bound
push
lock
ret
sub
push
jns
fnstenv
inc
mov
inc
pusha
adc
mov
jno
mov
sub
pop
icebp
scas
sbb
mov
ljmp
insb
in
test
inc
add
fs
and
sbbb
mov
data16
cmp
mov
dec
sti
sub
pop
push
xchg
sahf
pop
pop
inc
jae
mov
adc
inc
imul
push
divb
clc
das
mov
aas
sahf
dec
and
nop
push
adc
or
mov
cmpsb
ljmp
mov
mov
repnz
xchg
jmp
sbb
lahf
adc
daa
push
test
mov
sbb
fiaddl
aam
dec
mov
popa
xchg
mov
test
xor
fiadds
cli
or
xchg
add
cltd
adc
cmp
inc
sbb
loopne
cli
mov
repz
outsb
scas
aas
jne
aaa
xchg
push
push
mov
cld
ljmp
mov
cmc
mov
enter
out
stc
not
pop
sbb
fcmovnbe
sti
sbb
mov
rep
xchg
mov
sub
popf
and
aam
adc
shll
dec
add
mov
outsb
fsub
cli
cmp
mov
xchg
or
lods
sbb
shrb
fiadds
insl
push
push
ds
imul
daa
inc
sub
sub
push
jne
sahf
xor
cmc
dec
arpl
xchg
fiaddl
nop
sbb
lret
mov
cmp
ljmp
mov
das
out
jo
dec
aaa
jl
adc
mov
xchg
fwait
daa
jmp
jne
adc
pop
aaa
dec
insb
mov
loopne
xchg
inc
arpl
or
xlat
xchg
mov
mov
das
dec
mov
dec
ds
loop
in
stos
xchg
mov
add
cmp
je
clc
sbb
cwtl
imul
xor
sub
and
xor
xchg
push
inc
addb
jl
jl
add
push
jg
push
cmc
hlt
and
mov
push
adc
jge
ds
addr16
lock
mov
adc
fcomi
into
mov
lea
sub
xor
in
xor
mov
daa
or
pop
dec
inc
dec
es
xchg
subl
add
outsl
inc
jecxz
inc
insb
test
subb
ret
xchg
mov
sarl
jnp,pn
inc
xchg
mov
or
add
pop
sub
inc
inc
push
stc
lahf
iret
pusha
inc
sub
lahf
sti
inc
sub
push
or
jle
test
imul
ds
pop
iret
lock
movsb
push
sarb
mov
add
mov
stc
iret
push
les
mov
jmp
xor
stc
sub
fst
loop
mov
or
adc
mov
dec
nop
je
cmp
push
cmpsl
xor
jbe
repnz
push
inc
mov
or
mov
subb
sub
int
mov
push
filds
leave
ss
add
mov
inc
add
aaa
icebp
cld
nop
repnz
enter
jnp
je
in
push
or
cmp
mov
jns
rolb
btc
aaa
cmc
notb
inc
mov
push
shlb
fldcw
xor
push
arpl
iret
jbe
in
leave
and
movsl
pop
lock
mov
scas
ss
out
int3
cmovbe
mov
in
xor
insb
jb
or
shll
mov
push
and
dec
xor
mov
ret
int
popf
pusha
jae
mov
jp
dec
outsb
push
sbb
mov
ds
inc
mov
bound
imul
sti
add
scas
mov
shlb
ja
sub
int
push
add
lea
sahf
cwtl
outsl
or
inc
lds
push
sbb
sbb
rolb
mov
adc
ret
jp
mov
dec
push
mov
adc
arpl
inc
and
pop
sbb
in
ret
mov
nop
jb
ja
sub
mov
cmpb
js
ljmp
sub
mov
jae
ljmp
scas
iret
lcall
fs
call
iret
or
push
movsl
mov
push
sub
insl
xchg
aam
jg
test
inc
cmp
adc
ffreep
mov
push
ficomps
inc
xchg
das
push
aad
sbb
leave
xchg
lahf
pop
out
and
and
xchg
test
or
aad
sbb
addr16
sub
xchg
sub
push
jno
mov
pop
sbb
es
or
or
aam
outsl
movsl
push
repnz
jp
outsl
mov
or
adc
xlat
clc
iret
test
and
cld
ja
mov
mov
pop
xchg
add
es
lahf
js
das
xchg
clc
ficoms
inc
insb
push
and
int3
loope
add
cli
out
xchg
push
aaa
test
cli
jmp
mov
push
jg
fidivs
push
jge
pop
jo
jle
lret
test
scas
or
mov
xchg
mov
inc
imul
sub
cmp
das
insb
andl
pop
lock
pop
push
icebp
iret
or
pushf
xchg
imul
test
dec
sbb
xor
cmp
cld
and
fdiv
inc
sbb
dec
bound
shr
pop
xor
jge
mov
adc
xorb
inc
xor
ret
inc
mov
cmp
inc
push
fcmovb
xchg
dec
sub
mov
lret
jecxz
fsubp
fucom
pop
sti
inc
pop
and
lds
pop
leave
pop
and
mov
sar
mov
inc
jmp
or
pop
movsb
call
fs
mov
cld
rolb
lcall
pop
cltd
cs
pop
pop
xchg
cli
je
mov
mov
jle
pop
sbb
jno
fcompl
jecxz
stos
jl
into
cwtl
mov
pop
mov
test
int3
in
jmp
sar
add
dec
dec
jmp
lret
loope
sbb
mov
fnsave
add
pop
fmul
sub
cld
mov
jecxz
cli
or
push
xchg
cmp
adc
cmova
lds
cltd
cmpsl
mov
lret
cmc
inc
addr16
pop
xchg
rorl
inc
clc
lods
in
adc
sub
shll
pop
in
scas
cmp
pop
in
testb
xchg
stos
int3
and
and
sbb
fidivl
jae
inc
mov
imul
out
mulb
std
ja
in
repnz
xchg
mov
add
jl
ficoms
xor
adc
rolb
rorl
cld
aaa
xchg
fisttps
and
and
out
adc
mov
sbb
lods
jbe
cs
jo
sahf
sbb
add
out
ljmp
xor
push
cmc
iret
in
in
lds
add
jg
pop
cmpsl
or
insl
adc
leave
in
into
shl
push
nop
xchg
addr16
movsl
lret
das
cmp
cwtl
iret
add
aaa
mov
jmp
sub
jmp
in
mov
mov
cld
jmp
pop
mov
outsl
or
sbb
addr16
inc
mov
adc
fsts
push
dec
jno
pop
cmp
jecxz
xor
fwait
adc
jp
cmpsl
pop
push
push
mov
fcmovnb
ja
div
clc
push
sub
jge
out
dec
xchg
lock
call
adc
cmc
and
mov
and
mov
jne
fidivs
sbb
mov
daa
in
push
mov
test
imul
hlt
pop
icebp
xchg
xor
cmp
pop
pop
pop
aam
sbb
mov
xorb
lret
imul
std
dec
mov
popl
cmp
dec
stos
loopne
sahf
xor
or
gs
fscale
ds
divl
shll
push
out
out
cmovnp
addr16
psubb
sbb
stos
in
inc
mov
dec
cmp
sbb
mov
aaa
test
in
adc
pop
inc
push
cmp
sbb
addl
popf
mov
imul
jl
push
sbb
mov
add
out
dec
mov
inc
outsl
scas
std
test
mov
dec
xor
push
lds
mov
mov
jmp
mov
loopne
ret
rol
and
lods
dec
jno
aad
mov
lods
sbb
push
repz
pop
out
xorb
ror
shll
cmp
mov
out
mov
jg
mov
sbb
sub
data16
xchg
mov
push
call
add
insl
inc
mov
loopne
jle
sbb
loopne
int3
pop
adc
push
je
dec
rcr
jge
pop
ja
or
dec
add
mov
mov
adc
es
pushf
mov
std
push
push
scas
dec
adc
xchg
jbe
call
mov
daa
arpl
pop
sub
and
mov
mov
ja
pop
mov
mov
push
dec
ja
test
push
cwtl
aas
int3
push
xchg
xchg
imul
aad
out
pop
sahf
repnz
fisttpll
sub
sub
jns
aaa
adc
push
fistl
mov
lock
ja
mov
jl
cmp
push
inc
inc
jnp
dec
repnz
push
popl
mov
movsl
pop
enter
mov
lcall
daa
mov
jmp
sbb
fisubrs
lods
out
ljmp
mov
mov
xor
ds
flds
daa
pusha
cmp
inc
pop
mov
pop
sbb
xchg
int3
pop
leave
xchg
cltd
mov
xor
dec
push
xchg
xchg
jo
cmpsl
pop
inc
sub
push
sub
dec
mov
mov
jae
in
push
push
out
test
mov
aam
enter
int3
inc
dec
cltd
loopne
mov
inc
pop
sbb
xchg
jg
imul
mov
dec
jne
gs
arpl
mull
sub
lahf
cmp
es
sub
inc
scas
push
out
push
xchg
inc
jnp
in
fs
sahf
dec
ficompl
sbb
lods
iret
fstpl
rclb
push
addr16
sti
pop
pop
clc
inc
cmp
pop
aam
imul
and
repnz
test
aaa
call
mov
mov
jo
push
pop
xor
xor
jae
pop
subb
roll
mov
sub
cmp
dec
popa
notl
data16
inc
push
sbb
mov
lahf
movsl
scas
sahf
je
daa
inc
add
hlt
dec
lret
test
sbb
stc
into
mov
repnz
jo
mov
sub
stc
push
lods
or
push
xchg
inc
cli
mov
adc
add
xchg
ret
and
movsb
xchg
into
sbb
mov
xorl
insl
jae
and
stos
pop
andb
sbb
add
fnstsw
xchg
fidivl
mov
jo
pop
mov
fimull
scas
xor
sahf
nop
inc
push
or
andl
les
push
mov
nop
xchg
push
mov
test
sub
aam
fsubrs
push
xorb
push
sbb
push
mov
mov
fwait
iret
pop
jns
sbb
adc
stos
cmp
sub
jmp
gs
push
cmp
inc
xchg
roll
push
xchg
fdiv
add
fsubl
sbb
dec
orl
or
mov
push
push
mov
xchg
fidivrl
shll
xchg
push
addr16
into
mov
add
pop
inc
stos
mov
dec
stos
mov
and
vfmsubaddpd
sbb
int
in
sahf
jne
frstor
mov
cmp
repnz
xchg
sti
je
mov
pop
push
push
cmp
mov
inc
xor
in
adcb
jne
mov
inc
inc
aam
sub
fists
cmp
push
jle
shrl
add
imul
mov
mov
sub
cmp
cs
push
inc
hlt
hlt
mov
dec
lods
inc
xchg
push
insl
sub
cmp
test
shl
lret
lret
into
movsb
fisubrs
and
and
fadds
sti
sub
push
mov
les
xchg
xchg
mov
and
jmp
mov
lcall
xorb
iret
loope
sub
xchg
and
nop
jge
pop
dec
inc
out
and
xlat
inc
jne
stos
xchg
mov
stos
fmul
inc
push
xchg
adc
mov
es
dec
fs
sub
pop
test
xor
repz
in
out
push
ficoml
ljmp
lcall
inc
or
and
int3
sbb
cmpsl
stos
and
add
sbb
cmp
ss
aas
pop
in
adc
pop
push
clc
dec
mov
jbe
lds
add
push
pop
pop
fildll
out
loopne
mov
xor
mov
fiadds
mov
rcl
jmp
push
inc
sbbb
pop
mov
nop
daa
sub
dec
inc
andb
mov
add
mov
pop
jb
xchg
enter
aas
cwtl
mov
cld
or
test
adc
pop
xchg
add
in
jne
roll
xlat
xor
int
jecxz
clc
mov
or
sahf
mov
and
fstps
ja
mov
jae
fstp
pop
stos
ret
fcmovnb
ret
jmp
or
sub
aaa
rcrb
add
les
fs
sbb
int
sub
dec
imul
xor
js
popf
insb
std
cli
inc
pusha
add
or
or
fimull
dec
pushf
mov
movsl
pop
ret
jae
insb
lock
or
mov
xor
mov
int3
push
ja
iret
mov
test
stos
rcll
jmp
das
leave
dec
add
sbb
insb
sahf
gs
push
fistpl
gs
pop
dec
test
fildll
cmp
cld
xchg
adc
cmp
adc
repnz
push
cmp
mov
inc
call
clc
lret
cmp
jns
orb
iret
dec
and
rol
mov
push
shll
adc
pop
and
jnp
repz
in
cmpsb
adc
lcall
dec
and
sub
sti
pusha
sbb
dec
pop
aaa
shrb
mov
cltd
push
ss
add
xchg
add
iret
jecxz
push
mov
xchg
push
push
mov
sub
adc
dec
fbld
mov
lret
ds
pop
sbb
or
jae
xchg
outsl
imul
das
jb
hlt
icebp
sub
xchg
or
popf
sbb
test
inc
bound
sub
xchg
int3
sub
or
daa
sbb
push
cmpl
push
pop
xor
loopne
outsl
pop
jmp
into
mov
inc
pushf
push
sub
push
adc
ja
lea
xchg
std
enter
or
xchg
dec
loop
loope
and
in
movsl
fimuls
mov
push
push
cmp
mov
mov
xchg
or
mov
cmp
jae
mov
andb
aad
mov
addr16
loop
pop
sub
adc
ret
arpl
mov
mov
mov
flds
test
fstps
pop
sbb
test
mov
in
es
insb
pop
aad
sti
cmp
jne
rcl
enter
jo
push
stos
gs
sarb
scas
and
inc
in
or
mov
push
inc
sub
mov
cmpsb
add
clc
cmc
lcall
xlat
gs
daa
pop
xor
add
push
scas
push
pusha
xor
addr16
xor
stc
sbb
adcb
loope
je
and
pop
out
adc
and
inc
sub
mov
test
fmuls
mov
cmp
aad
adc
imul
dec
jne
lds
push
mov
fmuls
sbb
add
push
jo
pop
pop
push
and
mov
dec
cmp
jb
rcll
jbe
or
in
xor
or
aaa
mov
mov
mov
push
das
cmp
sarl
outsl
cwtl
sub
das
nop
push
int
jne
pop
inc
bswap
jbe
add
lods
or
jb
cmp
insb
aas
and
inc
pop
xchg
js
aad
inc
push
jno
aad
sbb
inc
mov
or
jge
lcall
jle
aaa
pushf
ficoms
xor
sub
mov
or
loope
popa
cltd
xor
daa
arpl
adc
jnp
dec
outsb
jg
and
mov
xor
mov
xor
insl
sbb
adc
clc
cmp
dec
hlt
mov
ret
adc
and
mov
test
pop
xor
and
popa
icebp
test
mov
or
out
sbb
repz
or
imul
div
std
dec
loop
cmpsb
sub
adc
inc
adc
daa
aas
daa
ja
push
clc
dec
push
nop
and
ss
ja
popf
orb
jle
fwait
mov
arpl
mov
stos
sub
push
xchg
fwait
mov
mov
mov
inc
in
stc
pop
mov
out
adc
leave
sub
mov
xchg
push
cmp
mov
bound
adc
or
push
movsl
sbb
add
mov
inc
push
sub
subl
gs
out
lret
pushf
adc
orb
orb
pop
or
or
cmp
fwait
or
xchg
in
cmpsl
pop
lcall
cmp
in
subb
mov
scas
int3
inc
stos
cmp
arpl
push
gs
xchg
in
mov
pop
stos
fldt
or
xor
divb
xor
int
outsb
clc
mov
and
xor
rcrl
popa
into
sub
ficomps
push
mov
mov
push
not
mov
mov
ljmp
dec
pop
add
loop
data16
scas
jb
scas
cmp
mov
jge
push
aad
push
dec
jno
adc
ret
mov
stos
or
out
std
shll
cmp
mov
in
btc
push
mov
repz
stos
cmp
loope
mov
jge
ds
pop
jecxz
shl
push
sub
inc
mov
ret
test
inc
repnz
push
add
sbb
or
stc
sbb
cwtl
fistpl
fisubrs
popa
pop
mov
shrl
movsl
shll
dec
sbb
dec
popa
mov
xchg
loopne
into
xchg
mov
scas
add
dec
iret
jns
subb
cmp
das
das
lretw
and
mov
sarb
aaa
push
sbb
mov
jb
jge
dec
pop
hlt
jo
push
rcrb
mov
rorb
xchg
push
aas
mov
xrelease
lea
nop
adc
repnz
loop
dec
dec
inc
stc
in
into
sbb
andl
repnz
mov
or
pop
mov
decb
rol
mov
movsl
sbb
inc
outsl
ja
call
xchg
jl
jo
iret
push
xchg
scas
sub
jno
mov
sti
repz
mov
test
mov
sar
sti
iret
and
jmp
add
and
loop
fsubr
add
mov
pop
pop
sub
fmull
fdivrl
mov
cmp
add
repz
xor
xchg
or
inc
loop
je
sti
test
adc
sub
jle
pop
into
in
pop
rcrl
push
ja
mov
sub
ret
enter
push
daa
sti
mov
aam
cmpsb
xor
fisttpll
sub
push
faddl
out
dec
dec
movsl
mov
xlat
dec
repnz
mov
cmp
dec
pop
lcall
mov
lods
push
xor
outsb
mov
pop
xchg
js
inc
js
out
push
out
hlt
into
or
aad
jge
cmp
mov
xchg
mov
push
in
fiaddl
pop
fsts
hlt
cmp
mov
xchg
adc
fs
andb
fmull
or
shll
stos
lret
sbb
js
mov
in
jbe
mov
dec
cmpsb
and
adc
or
inc
scas
out
arpl
es
mov
sbb
test
and
mov
xchg
ss
sbb
cmp
lahf
pusha
add
lods
and
xor
mov
xor
dec
cmp
or
and
aas
cmp
into
push
sub
andl
mov
das
jg
js
pop
push
popf
mov
sub
shll
in
sbb
cmpsl
ljmp
imul
je
pop
out
iret
les
leave
enter
sahf
pop
mov
pop
cmp
xchg
insl
clc
or
and
pop
jbe
inc
sub
popf
jge
adc
pop
aas
das
dec
popa
mov
in
ja
pop
ret
jae
lret
add
das
or
lret
test
sub
cmp
lock
jbe
xor
iret
cmp
movsb
pop
pop
push
pop
call
or
sbb
in
rolb
pop
stos
pop
ficompl
cmpsl
inc
jb
lcall
dec
dec
in
add
in
ja
iret
add
push
sbb
iret
shll
not
cwtl
or
mov
les
cli
fistl
push
test
mov
push
xchg
fs
ret
pop
adc
stc
out
add
notl
lock
xchg
cmpsb
mov
mov
push
adcb
mov
and
cmp
hlt
adc
jnp
je
sub
icebp
mov
mov
out
subl
jbe
int3
mov
out
shrb
sub
mov
popf
sbb
xlat
xlat
adc
mov
mov
ds
in
adc
mov
int3
or
je
fldenv
scas
fistps
add
or
add
mov
repnz
jo
lahf
sahf
testb
mov
pop
test
mov
ret
loopne
movsl
mov
mov
pop
hlt
sbb
jmp
xchg
or
inc
cmpsb
addr16
repz
fs
leave
pushl
scas
imul
sub
fucomip
jp
cmp
mov
cs
mov
clc
repz
sub
aaa
jne
cmp
dec
addr16
xchg
mov
mov
movsb
dec
fucomp
rclb
out
lcall
jle
repnz
pop
mov
stc
arpl
daa
jbe
insl
stc
movsb
cli
aam
xchg
leave
lret
repz
stc
and
aad
sbb
mov
cmpsl
adc
imul
pushf
dec
cwtl
out
pusha
push
inc
and
ret
out
out
cltd
mov
xchg
mov
aad
add
jne
dec
or
or
sahf
cmp
push
adc
cs
loopne
mov
inc
xchg
cmc
xor
mov
int
or
add
lea
and
dec
pop
push
cltd
or
xchg
mov
sbb
jbe
ret
add
imul
jge
cwtl
xchg
test
cmp
mov
dec
mov
mov
add
pusha
jecxz
aas
stos
pop
pushf
pop
mov
clc
enter
xor
xchg
je
nop
adc
inc
mull
imul
cmp
cmp
xchg
add
mov
lock
pop
push
fadd
or
mov
outsl
js
fisttpl
pop
sub
sbb
mov
lods
and
push
mov
and
jmp
mov
adc
call
mov
dec
adc
out
iret
ss
sbb
mov
mov
push
xchg
ret
mov
xorl
cmp
aad
pop
cmc
je
cmpsl
repnz
enter
out
mov
in
repz
flds
je
cli
xor
pop
sbb
jmp
cli
into
data16
push
inc
outsl
lret
lods
stos
out
mov
mov
rcll
ja
and
popf
je
orb
add
pop
je
xchg
mov
addb
call
sbb
ret
idivl
test
stc
add
insb
push
dec
and
inc
lea
mov
sbb
ds
mov
dec
lea
mov
fildll
enter
xor
pop
scas
test
xor
arpl
movsb
lea
les
cmp
jns
push
clc
bound
mov
fwait
inc
and
ss
and
xor
xor
lea
out
mov
xchg
jnp
je
pop
and
inc
jo
cmpsl
lods
push
enter
out
xchg
xchg
mov
movsb
inc
cmp
lock
sub
pusha
or
mov
bound
inc
sub
xor
cmp
fidivl
and
jne
cmp
pop
xor
fwait
or
mov
pop
mov
pop
push
sbb
rorl
xchg
pop
mov
cltd
fisubrl
aam
loop
loopne
pusha
rcrb
push
inc
loope
pop
sub
xchg
in
xor
flds
cltd
divl
das
test
orb
xchg
ds
dec
inc
xchg
mov
aas
or
and
bound
push
cmp
popl
aad
add
gs
enter
roll
jl
rol
fdivr
inc
sub
xor
clc
loop
mov
ret
push
lock
adc
rcrl
imul
mov
fsubl
out
pop
shlb
inc
in
xor
or
rolb
testb
mov
imul
fsubrl
rclb
jg
xchg
cmpsb
scas
push
push
dec
rcr
xchg
movsb
sub
add
repz
jae
and
jmp
icebp
enter
cmp
test
xchg
call
stc
arpl
shrl
lock
icebp
aam
jno
adc
out
and
jp
fwait
inc
push
icebp
mov
or
test
test
xchg
data16
cmpsb
gs
ja
cmp
in
call
imul
push
movsl
sbb
out
pop
xor
aaa
adc
add
dec
out
idivb
nop
pop
xchg
or
pop
test
mov
movsb
sbbb
aaa
adcb
cmpb
push
lret
mov
mov
das
orb
jae
cwtl
lcall
mov
inc
int
xor
out
int3
add
jmp
leave
test
in
push
pop
gs
cli
xchg
test
hlt
adc
or
cwtl
inc
fwait
adc
lds
xlat
jns
xchg
xchg
ret
cmpsl
adc
xchg
mov
mov
and
mov
pop
pop
add
mov
cmp
fisubs
inc
mov
mov
jns
mov
les
outsl
out
repz
sub
loop
jbe
out
dec
jbe
les
cmpsl
xchg
mov
lock
insb
push
mov
and
and
mov
or
arpl
cmc
add
fs
mov
hlt
icebp
dec
out
pusha
imul
and
mov
dec
daa
fwait
cltd
sub
imul
inc
outsb
dec
pop
insl
cmpsb
add
pop
pushf
subb
loop
pop
jno
ror
push
xor
pop
or
int3
pop
push
stos
mov
pop
test
cmpsb
lcall
mov
pusha
pop
shlb
sahf
into
push
sahf
or
jge
xchg
dec
vmovups
aaa
mov
jg
lods
cmp
add
xor
xchg
imull
mov
add
cli
mov
fildl
fcmovnb
in
fdivrp
arpl
repz
fmul
xchg
adc
or
das
call
js
or
insl
mov
push
ret
jecxz
mov
repz
sub
push
cmp
sti
sarl
cmpsb
es
and
arpl
jno
mov
mov
xor
cmp
lock
dec
cwtl
sub
push
pop
add
dec
ljmp
push
sar
test
pop
cltd
pop
cmp
movl
fisubrl
sbb
push
enter
mov
xchg
in
ds
jne
jae
in
scas
push
pop
out
xlat
fidivrl
sub
mov
in
fdivs
lahf
pause
push
cltd
scas
adc
adc
mov
jg
addr16
inc
int
in
ret
dec
sbb
mov
mov
xchg
in
fnstsw
lcall
lods
aad
hlt
inc
or
ss
jmp
ficoml
les
shrb
and
js,pt
test
out
lahf
shl
and
stos
cwtl
push
test
adc
popa
cmpsb
cld
inc
psllw
mov
fcoms
pop
mov
mov
cmp
fstl
call
movsl
cmp
negb
loopne
jo
cmp
testb
jnp
ret
or
jp
pusha
rol
jecxz
insb
adc
cmpl
sbb
cmpsl
xor
cmp
fldenv
dec
cs
je
data16
in
mov
insl
pop
dec
test
xorb
ljmp
outsl
push
scas
xor
cmp
sti
jb
and
and
rolb
mov
add
jbe
lea
notb
pop
cmp
aad
insl
lock
ljmp
and
fidivl
fucomip
mov
push
lret
mov
add
push
ss
int3
pop
pop
hlt
fdivr
mov
mov
imul
inc
fidivrl
mov
filds
imul
leave
jns
js
dec
pop
sub
popf
stc
pop
cwtl
inc
repz
faddl
sahf
pop
in
xor
push
je
stos
dec
hlt
or
fildll
lods
addr16
enter
or
stos
push
arpl
js
in
jmp
mov
popl
icebp
mov
cmp
std
in
fcomip
mov
imul
push
xchg
mov
and
cs
mov
fsts
rcl
jl
xchg
pop
in
sub
ss
fwait
mov
mov
cld
and
orl
ljmp
cs
popa
out
fdiv
fdivs
add
imul
jl
clc
fcmove
out
mov
rorl
and
cli
inc
ljmp
push
sarb
mov
mov
add
inc
dec
rol
divb
adc
stos
adc
dec
push
jo
dec
fwait
jp
ljmp
adcb
jns
xchg
outsb
lcall
sbb
push
pop
mov
cmpsb
mov
aaa
daa
in
mov
icebp
cltd
push
push
or
xlat
jne
lock
dec
in
into
or
shl
rolb
mov
add
and
mov
xchg
pop
cmpsl
inc
int3
adc
loopne
jle
jnp
add
lds
jns
xor
or
repz
add
jmp
subl
js
rcr
and
push
das
lret
pop
mov
rcrb
mov
lds
adc
xlat
cmp
fwait
pop
mov
or
and
out
nop
or
dec
adc
lret
insl
mov
ja
vphadddq
lock
pop
push
je
test
or
sub
pop
outsl
and
adc
frstor
rcrb
mov
mov
cmpsb
cmp
xor
shlb
call
hlt
xchg
sbb
jno,pt
in
data16
sub
pop
cmp
push
adc
or
scas
add
xor
xor
jo
cli
popf
aad
xchg
and
mov
jmp
sbb
bound
mov
inc
lahf
inc
sub
adc
cmpsl
aam
stc
call
sub
add
push
mov
inc
pop
sbb
fucomip
ja
dec
add
xchg
call
lret
icebp
das
addr16
xchg
leave
loop
aas
inc
push
pop
rcll
shlb
movsl
pop
insl
mov
cmpsl
decl
and
dec
dec
jge
adc
pop
dec
dec
out
out
sub
cltd
sbb
shlb
push
lds
sarb
mov
shlb
mov
xor
lahf
into
outsb
or
jb
cli
jg
js
les
lods
push
out
pusha
xor
add
xor
sub
out
movsb
sbb
sbb
sub
fiaddl
clc
int
xor
aad
imul
insb
mov
and
push
sbb
xchg
stos
ja
sub
xchg
rol
inc
xchg
mov
mov
repz
jle
jne
icebp
sbb
pop
arpl
out
lea
mov
insl
push
stos
out
add
mov
or
xor
mov
sbb
sub
insb
dec
and
push
inc
xor
frstor
scas
test
daa
mov
popf
jae
arpl
stos
movsb
jle
xlat
popa
cmp
or
cmp
std
nop
fbld
stos
cmp
imul
ret
adc
xchg
les
push
inc
andb
mov
mov
dec
xchg
mov
lahf
loopne
cmc
test
movsl
push
mov
leave
xor
xchg
dec
cmpsb
ret
push
push
lret
data16
cmp
stc
ror
jecxz
sub
xchg
shl
imul
mov
cmpsl
mov
out
sbb
push
lahf
rorb
mov
andl
js
aaa
push
call
shrl
shrl
or
xor
ljmp
mulb
adc
xor
adc
mov
dec
mov
xor
test
sbb
jp
int3
imulb
test
sub
cmp
cmp
jo
push
jae
cltd
rcr
inc
inc
leave
lds
pushf
stos
mov
push
sbbl
je
cmp
test
je
lds
repz
and
lods
pop
lea
sub
pop
dec
es
pop
mov
and
out
adc
inc
mov
out
mov
aas
orl
xchg
sbb
ds
mov
or
dec
enter
mov
rorb
mov
ret
ret
dec
mov
sub
sti
repz
mov
mov
xor
mov
add
pop
gs
dec
cmp
mov
stos
jo
pop
mov
xchg
bound
add
mov
sbb
enter
negb
repz
in
push
cmp
leave
inc
add
xorb
mov
lds
lcall
sub
pushf
in
ljmp
mov
imul
xlat
inc
insl
sbb
aaa
rcll
inc
lcall
adc
lret
push
or
shll
gs
push
or
and
xchg
dec
xchg
sub
cld
popa
stos
in
push
cmp
xchg
push
cmp
dec
jp
add
push
push
inc
sub
push
adc
pop
jecxz
lcall
inc
inc
clc
cmp
dec
xor
add
inc
cmp
mov
dec
push
mov
inc
and
cmpsl
xor
clc
dec
js
addr16
pop
sub
adc
push
fldln2
mov
outsl
mov
rcll
jns
jmp
leave
inc
add
fcmovb
xor
scas
fisttpll
nop
dec
xchg
or
adc
pcmpgtw
dec
xor
jns
jbe
fucom
add
push
sub
jmp
loop
or
mov
jno
adc
mov
jmp
cmpsb
outsl
dec
js
pop
ficompl
pop
or
jg
daa
push
and
fidivrl
mov
jl
add
stos
dec
dec
shrl
dec
pop
sbb
imul
push
sbb
pop
loope
int
jge
mov
in
fisubs
pop
jecxz,pt
push
pushl
xor
push
mov
cld
adcb
push
filds
push
arpl
push
rorl
push
dec
sub
xchg
sarl
adc
daa
mov
ljmp
pop
or
sbb
add
inc
lods
xchg
nop
inc
lcall
inc
jecxz
xchg
adc
dec
pop
inc
xor
jmp
adc
cs
rcll
sub
loopne
stc
jae
mov
sub
add
in
mov
jo
aas
lret
test
and
jp
add
adc
xchg
or
ja
shll
sub
sti
stos
jge
cmp
dec
jl
sub
push
jp
mov
fisttpl
stc
xchg
mov
pop
aaa
enter
mulb
inc
out
sbb
adc
cli
jmp
dec
insb
das
movsl
aaa
and
jb
pop
stos
fstps
sbb
xor
adc
push
aas
fbld
pop
mov
add
add
mov
fidivrl
or
add
cmpsb
fnstcw
xor
jmp
ret
call
in
mov
inc
pop
cmp
mov
scas
xchg
dec
fadds
dec
mov
pop
outsb
cmp
and
mov
dec
pop
xchg
inc
jne
mov
addr16
mov
cmp
test
push
mov
fistl
popf
movsb
xchg
out
fidivrs
push
sub
int3
jnp
push
xchg
add
ret
jno
stc
xor
add
stos
iret
test
jl
aam
push
pop
loop
ja
push
clc
pop
inc
adcl
adc
out
lret
lret
cmp
mov
dec
push
loopne
jno
or
test
mov
popf
std
aad
movsl
ss
mov
neg
jo
pushf
sahf
mov
punpcklwd
inc
cwtl
xchg
and
pusha
jnp
scas
fs
loopne
inc
pop
cli
rcr
enter
and
xchg
imul
pop
subb
fisubs
add
push
inc
xchg
jp
popa
pop
test
js
add
jmp
jge
call
pop
add
sbb
sbb
sbb
xchg
fstpl
add
push
orl
xchg
je
mov
fbstp
inc
popa
sbb
inc
lea
ds
imull
xchg
movsl
cmpsl
xchg
cwtl
dec
daa
pop
les
dec
fisubl
jg
outsl
push
popa
jo
loope
push
sub
cmpb
ja
test
jo
insl
push
out
mov
popl
sub
jae
shl
cmpsl
add
rcll
sbb
sbb
cmc
ret
dec
push
dec
test
pop
out
and
cld
push
inc
cld
cld
add
inc
popa
out
ret
mov
adc
jbe
cmp
je
jnp
lods
xchg
sub
rolb
cmp
push
mov
cld
add
fiaddl
aad
adc
test
loope
cs
xchg
rcrl
sbb
cmp
xchg
lods
push
leave
sbb
push
sbb
in
xchg
xchg
rorb
js
mov
mov
stc
mov
lods
aam
xchg
mov
pusha
push
dec
jne
xchg
adc
sub
mov
mov
fcomp
shl
push
xor
gs
jbe
pop
xor
pop
mov
arpl
xchg
xlat
cmp
xor
or
jl
or
inc
sbb
sub
xor
and
sbb
clc
ret
loope
popa
outsl
jne
dec
cwtl
movsb
in
mov
subw
mov
jnp
xor
out
popf
mov
addr16
mov
divl
fistpl
loop
mov
aam
mov
sub
xor
in
lea
stos
bound
jge
xor
lar
or
push
jno
repz
sub
pop
js
clc
pop
push
ljmp
jle
sub
and
in
ds
repnz
xor
mov
pop
cmp
faddp
into
in
xchg
ret
sbb
cmp
or
adc
jle
ret
lcall
orl
in
jmp
sub
dec
xchg
icebp
iret
out
lret
cmp
lods
movsb
loop
inc
loopne
jp
aad
add
stc
xor
xor
pop
imul
sbb
add
xor
xchg
pop
push
cmp
lea
inc
cs
int
popa
add
outsb
cmp
cld
xchg
jbe
mov
inc
stos
jns
xor
push
iret
inc
sub
pop
cmp
xchg
rcl
sub
dec
xor
in
add
add
xorb
repnz
lods
sahf
inc
pop
loopne
dec
movsb
jmp
mov
xorb
add
fs
sti
rorl
das
jge
add
and
add
dec
imul
arpl
inc
cmp
add
xor
aaa
jl
jb
sub
mov
or
leave
ret
adc
cmpsl
outsb
mov
adc
lret
push
dec
mov
push
mov
cltd
call
in
xchg
lods
nop
inc
mov
jecxz
mov
into
add
fistpll
push
inc
and
xor
mov
lea
std
mov
sarl
stos
aam
xor
sbb
mov
imul
mov
fxch
hlt
mov
and
in
push
dec
and
push
loop
fcomp
inc
xchg
fmull
lods
movsb
jns
adc
sub
mov
ret
out
gs
mov
add
jg
add
cmp
daa
lods
adc
shll
mov
push
mov
rclb
sarb
lcall
mov
mov
aas
out
sub
cmp
or
and
ds
mov
sub
inc
mov
pop
fs
dec
loope
jg
ljmp
imull
dec
gs
das
std
dec
jl
leave
and
lahf
jae
sub
stc
xor
adc
and
cmc
adc
fimuls
mov
clc
fldt
divl
mov
dec
out
inc
ss
fistl
sub
sub
out
cmp
leave
cwtl
push
das
movsb
dec
je
dec
and
dec
das
cmpsl
and
lods
ret
inc
push
lods
push
or
inc
jge
roll
rcrl
pop
cmp
jecxz
adc
rcrb
inc
cmp
shlb
stos
cmp
dec
mov
dec
stos
aas
lcall
jno
cltd
xor
pushf
mov
push
sahf
adc
ljmp
cmpsb
call
pop
cld
lods
jne
push
mov
or
pop
mov
aad
xchg
fwait
push
mov
cmp
xor
jns
xor
sub
pop
sub
xchg
das
pop
addr16
lock
jne
mov
mov
lea
test
sti
mov
out
test
aam
push
sbb
and
cmp
pop
xchg
mov
push
cld
ja
dec
ja
movq
pusha
mov
push
or
hlt
data16
mov
cmp
xchg
mov
nop
iret
pop
movsb
loop
cmpsl
in
in
sub
push
adcl
iret
fldl
shll
fimuls
pop
jnp
pop
pop
or
popf
ds
lret
jne
arpl
mov
fisubl
fwait
lods
rcrb
xchg
lods
dec
push
or
hlt
es
jo
mov
cmc
push
stos
push
sub
lret
addr16
sahf
cltd
std
mov
stos
mov
aaa
fsubl
addr16
dec
mov
fwait
js
sbb
adc
lds
jns
gs
xor
int
in
add
clc
lea
jecxz
sub
inc
movsb
mov
cltd
inc
inc
jg
jp
pop
push
jp
lcall
inc
in
dec
js
xchg
js
clc
mov
sub
jecxz
imul
sbb
cld
out
xor
outsl
xchg
test
hlt
andb
mov
aam
jle
and
inc
gs
cld
jo
int
or
pop
sub
xchg
cmpsb
add
or
shrl
add
jnp
xor
xor
or
fcmove
daa
sub
imul
scas
arpl
mov
dec
jp
cmp
xchg
xchg
outsl
clc
jg
call
sbb
mov
sar
sbb
mov
scas
ficompl
out
push
xor
int
ret
xchg
xor
enter
clc
shll
int
mov
push
lods
das
rcll
add
cltd
cmp
or
repz
pop
mov
mov
mov
mov
adc
cwtl
pop
gs
sub
cmp
dec
cmp
or
ds
cmpsb
in
lret
mov
aaa
or
push
sub
cmpsl
sbb
loopne
mov
fdivrs
sub
pop
mov
push
dec
lahf
jb
jmp
and
out
out
and
sbb
jnp
ret
xor
bound
cmp
pop
call
sbb
ficompl
test
mov
sub
push
adc
cld
dec
hlt
pop
das
push
mov
jb
and
push
sbb
std
pop
adc
cltd
mov
jp
pop
push
out
loopne
push
cld
out
and
add
mov
sub
pop
jae
sbb
xor
xchg
xchg
add
fldenv
sbb
xor
xchg
aaa
scas
fldl
fsts
jp
cwtl
shlb
aas
ret
nop
adc
xchg
pop
push
xchg
pop
push
mov
mov
outsb
mov
mov
dec
jae
cmc
inc
lods
dec
xor
pusha
outsl
adc
jmp
cmpsl
or
cwtl
sub
xor
lahf
filds
jb
repz
das
ror
add
divps
das
outsl
lcall
mov
gs
add
inc
fwait
adc
xlat
ret
cltd
addr16
fcompl
pop
mov
mov
jns
push
pop
cmp
je
sarl
dec
insb
orl
in
inc
xchg
movsl
mov
pop
repnz
xor
movsl
imul
fdivrs
sbb
imul
or
mov
jmp
mov
arpl
or
stos
test
xchg
adc
pop
pop
adcl
push
inc
sbb
mov
lret
jns
dec
xchg
lcall
sub
cs
aaa
inc
pop
in
out
ret
pop
mov
aad
jb
clc
outsb
pop
sub
add
mov
imul
out
sub
ljmp
in
aas
jl
shll
lock
mulb
test
mov
insb
es
popa
push
fdivrs
repnz
addr16
in
mov
push
sbb
add
shll
xor
clc
pop
xchg
inc
mov
test
aaa
dec
inc
inc
scas
je
sub
repz
cmpl
jno
sub
mov
rcll
sarl
divl
or
or
xlat
xor
dec
fistps
aas
es
dec
bound
pop
mov
or
insl
push
rclb
fnop
shrb
pop
push
push
sub
and
or
ret
out
movsb
mov
push
push
test
arpl
cmp
daa
lret
adc
in
or
mov
jae
test
adc
push
cmp
addr16
pop
ficoml
jbe
clc
push
mov
loopne
mov
or
mov
pop
pop
mov
cmp
cmpsl
dec
pop
inc
pop
int
jmp
ret
mov
pop
gs
cmp
mov
cmpl
cltd
inc
push
cmpsl
xlat
push
mov
out
clc
call
icebp
mov
mov
mov
add
xchg
inc
je
adc
mov
sbb
addr16
lcall
out
lcall
ja
xor
in
jle
imul
adc
xor
xchg
xor
lret
ss
imul
lock
fsubl
popf
dec
sub
sub
mov
mov
cmpsb
sub
out
lahf
nop
mov
adc
xchg
mov
stos
popa
mov
imul
ljmp
adc
enter
out
pop
cmp
inc
cmp
imul
inc
xor
jp
js
pop
mov
jno
out
xchg
push
xchg
xchg
jl
lcall
imul
into
insb
push
js
adc
and
subl
lret
pop
fldcw
gs
movsb
mov
pop
pop
ficoml
add
xor
or
test
jle
call
jnp
dec
push
insl
jo
inc
cld
iret
lea
inc
cmpsb
fucomi
mov
cltd
jnp
mov
and
dec
test
hlt
jb
mov
out
xor
fsubrl
jbe
fbld
sbbl
cwtl
mov
jbe
mov
and
sub
add
movsb
pop
lret
inc
jno
ficoms
fsubrs
mov
stc
push
sub
and
lds
sbb
clc
mov
cmp
loopne
leave
aas
cltd
btr
adc
in
xchg
inc
ret
adc
jl
fldcw
cltd
lahf
add
in
sub
clc
xchg
outsb
mov
popa
jnp
xor
mov
push
pop
clc
cli
mov
jl
mov
mov
lahf
mov
mov
xor
enter
or
adc
sbb
cld
mov
ror
dec
pop
jmp
pusha
mov
sbb
das
rcpps
cld
inc
sbb
mov
push
push
scas
cs
outsl
mov
imul
jmp
lcall
sub
aam
arpl
sub
push
mov
mov
adc
ds
mov
movsb
inc
sub
shlb
mov
stc
cld
aad
jo
movsl
cld
mov
dec
sahf
scas
mov
dec
add
jmp
icebp
dec
xor
ffree
inc
enter
outsl
cmp
fwait
xor
jecxz
fwait
cli
lea
clc
push
repnz
ret
jge
mov
adc
es
shll
hlt
or
jns
mov
sbb
mov
gs
push
mov
dec
inc
arpl
mov
jge
adc
fsubrs
add
xor
adc
cmc
sbb
adc
mov
cmp
mov
aam
rcrb
push
xor
jecxz
sbb
or
sbb
adc
mov
scas
and
cltd
lea
int3
xchg
pop
push
lods
fisubrl
sub
loop
hlt
push
push
insl
stc
inc
or
cltd
jns
jge
push
daa
and
or
xorb
pop
mov
push
and
add
idiv
push
shlb
lret
mov
inc
inc
mov
xorb
xchg
popf
or
xor
cmpsb
int3
je
mov
lret
mov
sti
xor
inc
dec
sub
lods
mov
or
rorl
mov
push
and
outsb
mov
mov
pop
ror
pop
hlt
mov
add
and
dec
lds
inc
xchg
incl
ds
aas
mov
pop
cmp
insb
lret
cli
das
sbb
add
push
mov
in
int3
scas
imul
loope
gs
xor
popa
lcall
push
jo
mov
and
cmp
sub
cltd
les
mov
mov
stos
outsb
jp
lahf
loopne
sub
inc
mov
dec
push
inc
arpl
xor
popa
mov
cmpsl
cmp
push
and
leave
mov
cmp
xor
sub
fsubs
fdivs
fstpt
ret
lods
sbb
insl
xchg
popf
stos
pusha
movsl
add
push
call
inc
mov
xchg
mov
push
imul
int3
adc
in
pop
scas
sub
and
scas
fdivrl
and
push
sarb
jg
out
loop
pop
cmp
cltd
cmp
hlt
insb
or
jne
jl
adc
rolb
pop
nop
out
sbb
outsb
dec
call
shll
repnz
push
movsb
pop
jmp
add
test
fsubrp
cmpsl
pop
movsb
push
inc
je
hlt
fistpl
mov
fldl
out
push
mov
dec
add
movsl
cmp
cwtl
mov
jl
test
cmpsl
pop
test
sub
insl
cld
je
lcall
cmp
push
dec
mov
ret
adc
sub
pop
es
outsb
pop
call
jp
cmp
inc
mov
sbb
in
daa
jge
add
pop
sub
pop
jae
add
mov
ja
in
xchg
xchg
push
lds
sbb
sub
dec
mov
inc
xchg
pop
inc
arpl
nop
push
xchg
lahf
mov
cli
mov
mov
or
push
cwtl
imul
mov
into
dec
loope
bound
fisubrl
ljmp
daa
xchg
pop
clc
cld
push
loopne
call
in
insl
jnp
cmp
test
inc
aad
and
add
aad
scas
cltd
lods
jmp
or
mov
and
out
pop
jbe
push
imul
lret
sub
xchg
dec
lea
mov
dec
pusha
cltd
mov
fwait
adc
xchg
pop
mov
pusha
das
push
fcoms
adc
pop
rorb
add
pop
out
mov
inc
hlt
cmp
lahf
loop
or
adc
negl
fsubl
adc
sbb
mov
mov
loop
jns
mov
dec
xor
cmp
xor
mov
sbb
cmc
lahf
mov
js
dec
jg,pn
inc
and
int3
std
out
aam
lcall
mov
sbb
jmp
inc
adc
movb
ss
cmp
int3
or
push
pop
dec
leave
dec
call
fldl
push
mov
add
test
jge
lock
insb
imul
adc
jae
mov
sbb
mov
repz
add
inc
inc
add
or
push
out
push
pushf
xchg
flds
das
mov
jno
data16
xor
xchg
lock
and
outsb
cs
les
lret
mov
cmp
ljmp
push
pop
xchg
jl
jb
sub
aas
push
adcb
aaa
pop
int
gs
adc
jmp
hlt
add
mov
lods
xchg
mov
xchg
sbb
push
push
js
cmp
pop
adcl
mov
pop
test
mov
mov
jg
push
and
lcall
int
mov
arpl
or
pop
push
test
fstps
xor
jecxz
cli
scas
repnz
fistps
and
sub
push
add
add
pop
dec
push
shll
adc
cwtl
ljmp
cli
fidivs
pop
inc
lea
ss
mov
xchg
or
adc
xor
lods
int3
and
or
mov
ljmp
jne
jae
pop
sub
add
outsl
inc
fsubrs
stos
sarb
ja
jb
mov
imul
or
xchg
mov
xor
aaa
mov
cs
sbb
sbb
mov
mov
mov
sti
dec
xchg
xor
jno
inc
stos
xchg
lcall
jns
jp
jmp
mov
push
mov
roll
js
fisubrl
shrl
lock
hlt
cltd
out
ljmp
jnp
nop
dec
push
jo
add
aaa
enter
push
jge
ss
loope
pushf
push
cmc
stc
pop
inc
sub
or
test
pop
jl
adc
sar
jmp
shlb
cmc
xor
add
sub
push
lds
imul
lods
outsb
jge
push
sbb
xchg
pop
add
push
ljmp
repnz
xor
push
cmp
int3
cmpsb
pop
jp
mov
clc
fisubs
jno
push
in
sbb
jne
aad
adc
jge
sti
insl
sbb
cmp
rol
divl
jecxz
outsl
fidivrl
test
loopne
push
xchg
repz
popa
or
sub
insb
push
xor
jmp
dec
lret
pop
ret
mov
push
lods
lock
outsl
mov
pop
in
xor
clc
add
sub
fcmovnb
insb
mov
xlat
int
nop
push
inc
mov
mov
lret
and
inc
sbbb
sahf
in
aam
sbb
or
idivl
mov
clc
fstl
into
daa
xchg
jmp
add
push
imul
sbb
or
fs
sub
into
sar
call
ret
pushf
push
pop
xchg
jno
daa
mov
push
mov
jno
xlat
loop
ljmp
push
insb
pop
sbb
and
adc
out
jb
mov
xchg
add
imul
adc
loop
pop
cmpsl
pusha
pop
movsb
iret
lea
mov
mov
mov
xorl
js
cli
mov
add
iret
nop
pop
push
jge
push
push
lock
lock
hlt
add
sub
and
lcall
pop
mov
dec
xchg
jp
lret
mov
jns
das
jo
movsl
push
pop
jno
jne
bound
mov
lods
or
lods
ja
push
fisttps
inc
inc
jnp
xchg
outsb
add
in
test
subb
pop
cwtl
or
mov
lcall
jns
and
roll
cmp
cltd
mov
jno
jno
jne
js
lret
dec
cmp
addr16
push
mov
sar
scas
mov
popf
mov
sub
cmp
testl
imul
jecxz
xchg
js
int3
shlb
mov
dec
sub
sbb
es
push
fildll
dec
sti
xchg
push
aad
imul
in
mov
leave
push
inc
jae
or
les
lret
mov
clc
loop
cwtl
cltd
pop
inc
sub
je
les
and
or
or
cmp
std
lods
pop
out
dec
adc
adc
sbbb
call
jmp
xchg
lock
add
in
push
lret
sbb
xor
cli
add
sbb
xchg
xor
push
testl
test
gs
lret
fdivrl
das
cmp
adc
or
dec
mov
sbb
dec
ss
or
add
cmp
mov
and
mov
adc
jns
mov
sbb
inc
push
clc
stos
add
xchg
xchg
add
jecxz
xchg
popf
xlat
mov
xchg
cmpb
imulb
repnz
sbb
dec
mov
shrb
mov
fldt
fwait
fs
jmp
test
call
lds
mov
sub
addl
lahf
cmpl
xchg
pop
and
and
adc
cmc
pop
cli
out
rcr
cmp
in
and
adc
out
cmc
or
lock
adc
dec
daa
xlat
jns
mov
outsl
aad
stos
lea
or
sarl
xlat
es
add
gs
imul
aam
dec
call
push
es
mov
sub
cmpsl
test
adc
inc
sub
or
dec
sbb
cmp
sbb
push
dec
dec
fwait
arpl
xchg
inc
jae
push
xor
xchg
lds
out
jo
jle
jno
inc
xor
leave
sahf
mov
add
xor
xchg
dec
dec
add
call
imul
mov
or
xlat
cli
add
xchg
cmp
leave
iret
leave
addl
mov
sub
insl
cmp
and
dec
add
adc
dec
push
add
shll
jmp
cmpsl
mov
mov
jecxz
loope
sub
test
mov
mov
and
in
mov
icebp
dec
das
pushf
jle
sar
jp
aaa
or
xchg
ss
mov
sti
aas
es
clc
outsl
add
push
imul
inc
adc
les
stos
mov
mov
mov
inc
mov
pop
jg
push
stos
push
inc
scas
push
mov
mov
push
dec
stos
sahf
popf
mov
dec
cmp
mov
loopne
jecxz
mov
inc
in
xor
out
int3
lea
inc
lret
insl
repnz
xor
pop
mov
cltd
push
test
daa
cltd
insb
nop
lds
aad
into
pop
rcll
movsb
sub
or
push
mov
lret
fcoms
or
out
cwtl
push
ret
jno
push
inc
das
iret
insl
jl
cwtl
or
or
mov
mov
aam
mov
inc
outsl
sbb
jp
push
adc
sbb
js
mov
jge
imul
jmp
movsl
inc
sub
subb
les
pushf
cmp
test
pusha
mov
dec
cli
outsl
adc
and
shrl
idivl
sbb
xchg
ja
mov
ret
and
gs
xchg
mov
or
mov
aam
ret
outsl
cmp
xchg
push
push
dec
lods
inc
pop
push
mov
push
mov
cmp
out
repnz
mov
lret
jne
xor
adc
cmp
sub
fstpt
lea
arpl
mov
inc
lahf
orb
ja
mov
lahf
mov
xchg
repnz
int3
xchg
xchg
fdivs
add
stos
stos
push
dec
leave
jns
push
mov
bound
add
jecxz
fidivrl
dec
jp
addr16
sti
in
inc
jmp
cmpsl
lods
js
sbbl
iret
xchg
shrb
push
outsb
pop
and
rdtsc
add
sub
pop
xor
xor
jb
jmp
je
iret
ror
test
jb
popf
loop
vpmacsdqh
lret
and
jb
fnsave
mov
lea
mov
js
pop
inc
and
push
inc
dec
imul
dec
orb
daa
cmp
mov
imul
loop
mov
fidivrs
cmp
add
in
inc
scas
out
fcoml
inc
cltd
ror
pop
push
lret
push
das
int3
lret
xchg
out
xchg
cld
into
popf
xor
popf
inc
lock
and
das
pusha
add
data16
js
xchg
movsl
test
insl
addr16
imul
in
aam
xor
lret
imul
mov
jg
pusha
lret
cs
adc
loopne
mov
mov
adc
aad
repnz
arpl
jns
js
leave
shr
or
add
sbb
ret
mov
sahf
and
sbbb
mov
lds
push
int
aaa
fnstcw
push
mov
adc
adc
cli
sti
in
and
dec
cmpsl
jmp
cmp
loopne
mov
lds
stos
ljmp
mov
stc
push
xchg
push
outsb
imul
stos
fstl
jl
mov
iret
jg
add
dec
nop
mov
call
in
and
xorb
sub
dec
bndstx
das
int3
cs
xor
xor
movsb
jo
push
out
dec
popl
data16
sti
or
cmp
push
pop
xchg
or
pusha
xchg
dec
add
aas
mov
sub
push
sbb
adcl
dec
add
cmp
ja
sub
mov
jno
andl
xchg
add
dec
mov
in
jo
pop
jmp
xchg
jnp
mov
mov
lods
js
xchg
xor
jmp
xor
xor
subl
call
cmpl
jb
sbb
fsubs
dec
fwait
dec
sbb
lods
push
xchg
gs
push
push
jmp
mov
add
pop
jmp
mov
repz
outsb
pushl
call
add
jne
or
mov
arpl
lods
mov
and
das
xor
dec
fbstp
mov
arpl
push
sub
nop
js
call
sti
movsb
sbb
push
stc
mov
adc
pushw
out
vsubpd
lret
scas
fbstp
sbb
mov
roll
testb
outsb
insb
xor
in
push
jmp
or
je
fbstp
inc
dec
xor
inc
jne
loopne
pop
ss
adc
jne
stc
sbb
cmc
mov
or
outsb
ret
jb
cmpsl
shl
es
and
add
inc
out
fs
or
mov
and
xchg
scas
mov
inc
xchg
bound
sbb
pusha
lds
clc
mov
jmp
and
rorl
inc
cwtl
push
cltd
aad
repnz
out
fbld
and
mov
adc
shlb
push
mov
cmpsl
push
inc
add
fs
cmpsl
inc
outsb
sbb
add
inc
pushf
xor
push
sbb
jno
mov
roll
in
add
mov
sahf
push
add
jo
mov
push
ret
popf
clc
shrl
mov
in
cli
xor
mov
ret
mov
jmp
sbb
repnz
pop
sahf
test
jo
andb
add
push
sbb
stc
push
mov
sub
sbb
cmp
pop
iret
into
inc
fldenv
dec
cmc
xchg
lret
sbb
add
mov
mov
cld
ljmp
out
test
push
ret
movsl
cli
std
popf
jmp
mov
cli
lock
push
ret
dec
push
addb
jg
push
stos
xor
sub
mov
xorb
mov
pushf
gs
sti
add
sahf
ljmp
mov
cmp
arpl
cld
std
cmpsl
imul
loope
xchg
cmp
xor
jle
jge
xchg
dec
xchg
insb
ud2
int3
in
and
aad
imul
repnz
in
repz
mov
lds
xchg
dec
test
call
sub
test
out
and
mov
mov
xor
sub
mov
outsl
lahf
pusha
or
mov
in
push
outsb
into
dec
mov
inc
xor
insb
or
add
lods
dec
das
aad
fcoml
leave
loopne
outsl
sbb
lods
jg
push
in
cmp
lahf
mov
jle
lahf
adc
xchg
addr16
mov
sbb
jmp
loopne
inc
inc
xor
iret
mov
in
pop
js
lds
pusha
mov
iret
xorl
shrb
or
dec
mov
push
aad
pop
mov
icebp
into
cli
mov
insl
mov
ja
cmpsb
mov
rorl
cli
jo
adc
cmp
jnp
push
faddl
push
out
out
js
and
or
cmpsl
mov
pop
inc
push
out
cld
decb
pop
jmp
add
call
insl
out
cmp
push
ret
and
icebp
shl
ret
dec
fistl
inc
or
mov
lret
adc
mov
mov
movsl
xchg
mov
inc
cwtl
adc
jae
call
pop
scas
mov
jae
in
and
mov
inc
xor
pop
movsl
mov
cmp
mov
pop
repz
pop
aam
sub
jae
mov
cmp
inc
in
cli
stos
sub
jmp
and
mov
das
pop
lods
push
cli
adc
arpl
dec
xchg
or
mov
pop
icebp
adc
push
in
xor
push
out
mov
jge
and
cmc
out
out
outsl
xchg
or
ret
insb
mov
in
rclb
xchg
jnp
aam
cwtl
pusha
int
push
loope
pop
pop
mov
iret
int
and
jle
xchg
into
sub
lods
xor
repnz
dec
movsb
cmp
adcl
and
mov
fsub
in
mov
mov
jg
jbe
fisubl
add
cmp
push
fildl
test
dec
adc
xlat
jmp
jno
sti
jno
mov
int
and
mov
cs
scas
and
gs
rorl
jg
jae
clc
pop
mov
xchg
aas
out
mov
adc
pop
imul
out
pminsw
mov
add
insl
lret
jmp
push
stc
jmp
cmp
iret
pop
xor
outsb
mov
dec
clc
mov
outsb
int3
mov
cmpb
jnp
xchg
shlb
jl
test
popf
lods
push
and
cmp
std
adc
bound
cltd
mov
and
inc
scas
loopne
dec
and
negl
fisubl
xchg
mov
lret
lahf
rcrl
adc
stos
insb
adc
cmp
xor
in
jbe
roll
jb
cld
cmp
xchg
movsb
push
hlt
jno
dec
inc
loope
mov
ret
cld
jg
pop
push
mov
clc
cmc
lahf
lods
push
and
jg
ja
dec
out
fstl
pushf
mov
xchg
insl
pop
xchg
mov
jp
mull
sub
incl
fstps
add
mov
sub
test
xor
xchg
cld
pop
loop
mov
cmp
mov
mov
or
dec
fbld
jae
inc
pop
dec
cmpsb
sbb
je
jbe
jmp
xor
and
xchg
jmp
or
dec
mov
and
mov
cmc
fcmovb
dec
movl
andl
leave
repnz
orl
sub
pop
add
add
out
inc
jl
mov
pop
sbb
shl
pop
push
repz
mov
mov
mov
cmc
sbb
sbb
mov
mov
andl
outsl
add
out
mov
xchg
pop
enter
sbb
dec
mov
mov
cld
pop
mov
dec
jo
lds
div
adc
pop
xor
jmp
subb
into
push
loope
rolb
out
rcl
xor
call
insl
jg
out
xchg
and
jb
fnsave
jo
jmp
xor
xor
xchg
lret
jg
mov
sub
jnp
mov
jns
push
xchg
addr16
mov
lock
addr16
mov
dec
nop
cmp
adc
cmp
mov
xchg
daa
xchg
out
mov
loope
mov
data16
cmc
inc
in
adc
sub
int
cmp
jecxz
push
push
lcall
and
mov
es
and
xchg
dec
cmp
inc
out
sub
out
scas
sbb
sbb
fsubs
mov
cltd
lock
inc
clc
inc
push
sbb
and
or
je
out
dec
enter
mov
ret
cmp
mov
cmp
mov
lods
dec
sbb
mov
sti
jne
jbe
cli
lods
imull
push
mov
and
xlat
int
dec
and
mov
out
out
stc
pop
mov
cmpl
lock
xchg
mov
or
xchg
ds
es
sti
inc
mov
xchg
mov
shll
mov
ss
testb
insl
jmp
push
test
out
xlat
dec
adc
or
pop
lcall
outsb
xchg
push
ret
cmpsb
out
fnstenv
cld
push
xlat
out
cs
cmp
insb
outsl
js
ret
test
dec
dec
movsb
test
lret
mov
nop
jo
scas
jg
cmpsb
fbstp
data16
push
xchg
loopne
xor
mov
inc
das
aam
pusha
dec
jmp
mov
mov
mov
jbe
test
sbb
loopne
call
push
test
mov
and
dec
ret
xchg
pop
enter
pop
pop
and
mov
or
or
push
insl
lahf
gs
adc
in
inc
out
mov
sub
iret
cltd
mov
pop
fmull
mov
sbb
popa
push
mov
addr16
shrl
add
mov
lea
push
push
add
sahf
cmp
and
nop
fbstp
in
push
incb
inc
ds
dec
leave
aam
xchg
fdivs
mov
dec
mov
xchg
inc
call
enter
xlat
mov
jmp
gs
arpl
aad
mov
jae
addr16
xchg
and
xor
ss
push
pop
add
xchg
mov
inc
xchg
sbb
fisttpl
outsl
sbb
dec
cltd
call
sbb
sbb
fsubr
push
mov
mov
dec
pop
adc
jecxz
mov
push
shr
xchg
aam
inc
or
pop
pushf
aaa
in
dec
dec
lea
jnp
es
jge
sub
mov
sbb
jo
mov
pop
add
test
sub
test
jp
sahf
jae
lods
into
stos
jb
aaa
push
cmp
pop
cmp
shrb
or
xchg
push
mov
xchg
pop
aas
sbb
loopne
test
and
das
pop
mov
pop
leave
cmc
jbe
jno
pop
lds
push
movsb
mov
sarb
enter
mov
cmpsl
outsb
add
sub
or
sub
xor
popa
enter
mov
add
ja
mov
in
jp
or
sbb
ja
std
jno
in
shll
add
pop
fildll
jg
xchg
leave
mov
sub
daa
loopne
add
cs
adc
scas
jmp
jo
pushl
xor
push
mov
ljmp
js
testl
aaa
push
outsb
daa
popf
subl
scas
mov
outsl
cmp
cmp
xlat
push
out
adc
and
mov
in
popa
es
pop
xchg
loopne
mov
jge
repnz
and
stc
dec
loope
push
sbb
mov
and
stos
mov
js
daa
adc
decb
xor
jns
inc
pop
gs
sub
cmpsl
cmp
sbb
rolb
xchg
cmp
xor
jae
sahf
insl
mov
pop
fmull
cmp
mov
jle
mov
movsb
pop
adc
mov
daa
inc
or
mulb
jne
test
addr16
xlat
jmp
inc
mov
sub
lea
in
sub
das
inc
dec
sti
lret
mov
push
xchg
and
inc
and
push
push
pop
xorl
sbb
sub
inc
xchg
cmp
push
aas
push
adc
sbb
movsb
mov
mov
es
push
add
or
jbe
cmc
mov
out
pop
outsb
popf
repnz
aas
sub
call
out
add
stc
xchg
xchg
cltd
sub
mov
xchg
fsubrl
outsl
ret
rorb
dec
test
dec
ljmp
insl
cwtl
mov
mov
outsl
mov
push
mov
aaa
fidivs
das
jmp
sub
data16
hlt
adc
adc
test
lahf
push
pop
js
fwait
push
into
call
add
aas
in
arpl
fnstsw
cmpsl
mov
adc
lahf
xchg
test
pop
pusha
add
pop
jnp
aas
push
in
sub
sub
lods
out
push
insl
sub
cltd
sbb
inc
outsl
fsubrl
xor
stos
push
fwait
pop
adc
mov
lea
jl
sbb
lea
daa
mov
xchg
or
xor
sbb
int
stc
mov
mov
cltd
cmp
jp
sbb
mov
adcl
mov
pop
push
xchg
clc
inc
adc
xchg
pop
push
inc
xchg
push
imul
daa
push
outsl
pop
xchg
bound
jl
gs
leave
shlb
jae
ja
mov
std
xchg
addl
or
sbb
pop
add
xor
lea
lcall
pusha
fcomps
mov
in
cmc
aad
xlat
ss
pop
mov
pusha
cmpsb
iret
xchg
loope
or
or
in
add
pop
out
xchg
xor
mov
mov
bound
insb
mov
js
enter
loopne
push
rcl
mov
push
das
mov
cmp
movsl
and
jl
je
js
or
mov
stos
xchg
rcl
mov
stos
xchg
or
enter
mov
sarl
inc
mov
mov
xor
push
insb
push
cmc
xor
pop
out
icebp
rol
repz
mov
mov
jb
mov
pop
inc
repz
xor
out
les
fisubs
in
test
mov
and
inc
in
cli
cltd
inc
jno
js
ljmp
mov
push
mov
or
call
mov
mov
cmpb
mov
push
mov
inc
cmpb
movsl
ficoms
nop
jmp
fdiv
inc
fwait
pop
aaa
dec
out
and
xchg
ds
mov
lea
ret
popa
jno
and
mov
xor
sub
dec
scas
fildll
adc
mov
mull
mov
jne
sbb
orl
mov
xlat
adc
sub
daa
iret
push
mov
aaa
xchg
mov
push
dec
jbe
scas
mov
into
sub
pop
jbe
inc
pop
jl
mov
sbb
stc
movsl
faddl
mov
iret
inc
mov
adc
push
in
ret
rcl
inc
jno
sahf
jge
imul
jns,pn
outsl
out
mov
in
mull
xor
push
loopne
fucomip
jp
and
xor
rorl
dec
push
push
repnz
adc
mov
in
xor
into
xor
adc
fnstsw
xchg
xorl
mov
in
sbb
xor
outsb
lret
test
xchg
lds
jb
push
push
dec
shl
sbb
push
jbe
hlt
test
dec
mov
pop
xchg
cmp
sbb
popl
movsl
stc
jge
imull
jmp
mov
mov
push
testl
fwait
loope
jb
xchg
ljmp
imul
adc
clc
mov
cli
outsl
test
sbb
das
dec
cli
out
mov
cmp
sub
mov
addr16
stos
leave
cld
add
xchg
bound
xchg
das
push
inc
mov
inc
mov
mul
stos
fiaddl
sub
jmp
mov
pushf
mov
les
and
int3
in
cmp
pop
pop
aad
sub
pop
jmp
int3
int3
stos
adc
xchg
rorl
ds
cwtl
sub
mov
adc
orb
pop
roll
sub
out
divl
cmp
fwait
and
mov
cmc
jb
mov
in
lds
add
mov
fstpl
push
xchg
test
lds
sbb
lcall
pop
lea
ss
cmp
data16
mov
and
pop
stos
mov
sub
pop
iret
xor
mov
mov
add
or
jnp
inc
mov
xlat
and
sub
inc
test
xchg
lcall
sub
daa
add
sahf
pushf
xor
push
mov
pop
in
loop
cmpsl
or
scas
pop
xchg
movsb
repz
fldl
add
cld
mov
or
in
jp
jo
cmpsl
divb
out
sbb
fistl
sbb
in
xor
cmpb
sub
lret
jae
xchg
dec
pop
pop
cmp
out
icebp
xchg
mov
bnd
js
int
inc
fwait
mov
xor
or
lcall
pop
fdivs
xchg
jne
sti
inc
ds
inc
aaa
xchg
mov
mov
cwtl
jae
sub
rcrl
push
out
adc
add
push
lahf
jecxz
cmp
mov
enter
pop
ret
popa
aaa
cli
stc
dec
lods
mov
jb
xchg
mov
mov
sbb
incl
adc
mov
or
mov
push
out
dec
popf
es
ss
push
fs
pop
pop
fistps
movsb
imul
lahf
ror
push
inc
scas
in
add
cmp
pop
xchg
or
mov
add
iret
sub
mov
push
mov
data16
jae
lahf
xchg
mov
jae
callw
jg
aaa
shrb
in
outsl
scas
xor
add
fildll
je
cmp
mov
xchg
test
sarb
adc
imul
xor
push
sub
in
arpl
imul
mov
jle
cmp
andl
push
insl
mov
outsl
loope
subl
mov
or
ljmp
add
push
scas
jae
jno
out
fidivl
pop
arpl
jnp
dec
movb
jle
or
sbb
push
clc
repnz
or
arpl
xchg
jae
lret
outsl
fstpl
push
jp
xchg
aas
dec
repnz
push
nop
add
stos
loopne
jns
bound
bound
jmp
mov
or
idivb
sbb
xor
jmp
or
or
or
xchg
mov
sub
or
cmc
push
jbe
lods
inc
cmc
fsubr
mov
rol
push
cmp
inc
adc
into
cmc
push
pop
mov
pop
call
jmp
lods
pushf
lcall
sub
jne
negl
mov
jge
sub
aas
ja
shll
xchg
sub
xlat
cmp
pop
dec
int3
inc
test
sub
out
int
and
xchg
pop
push
xchg
pop
adcl
jg
ret
xor
in
xchg
gs
in
sbb
and
mov
xchg
mov
int3
imul
andl
or
out
add
sub
push
stc
cmp
popa
imul
inc
mov
sbb
push
gs
pop
sub
sti
dec
add
inc
outsb
xchg
sub
rclb
add
mov
xchg
mov
mov
orl
popa
mov
jg
leave
cmp
xchg
mov
into
cli
adc
push
add
mov
push
mov
push
jecxz
jl
jnp
xor
jp
sbb
push
cmp
push
int
mov
sub
stc
sti
mov
fs
lcall
jae
test
xor
xlat
xor
push
in
outsl
fidivl
pop
sub
bnd
lods
xor
loope
outsb
pop
sbb
mov
or
or
add
jb
sahf
pop
fbld
imul
test
mov
stc
inc
push
and
std
insb
push
ds
movsb
test
hlt
pop
std
cmp
and
cltd
mov
xchg
pop
sub
cmp
mov
inc
push
cld
icebp
mov
outsb
pop
xor
jno
cltd
mov
jmp
sbb
and
jb
pop
and
add
sub
imul
cli
imul
sub
repnz
mov
cmp
mov
xor
cmp
lea
imul
and
ficoms
notb
push
xor
or
dec
shrb
jg
mov
dec
mov
insl
xor
add
dec
lret
test
stos
shlb
fcomps
inc
inc
mov
lret
call
push
and
mov
mov
adc
jne
pop
push
data16
fwait
add
inc
test
push
push
push
arpl
jecxz
popa
and
adc
js
loope
xorl
push
cmpsb
mov
push
inc
jo
sbb
and
mov
lahf
add
add
iret
inc
imul
cmp
aaa
inc
adc
fdivl
inc
mov
test
mov
lret
movhps
mov
sbb
add
imul
pop
push
outsb
inc
cmp
popa
dec
or
jle
mov
mov
movsl
aas
adc
cmp
cmp
enter
add
rcrb
sbb
ja
in
popa
and
adc
jecxz
dec
mov
push
pop
lret
in
xor
and
and
dec
xor
mov
data16
imul
mov
jae
jmp
js
int
dec
movsl
push
pop
outsl
ja
repz
cmpsb
ds
xor
sbbb
jl
rclb
xor
and
aam
mov
xchg
xchg
jecxz
add
mov
fnsave
shll
push
mov
test
clc
addl
pop
sarb
cmp
test
sub
mov
jp
inc
sub
lcall
push
and
or
inc
in
and
mov
sbb
mov
outsl
cltd
pop
cltd
jmp
aam
dec
sbb
jmp
test
mov
enter
out
mov
adc
cmpsb
lcall
mov
adc
dec
frstor
mov
pop
imul
loopne
inc
and
scas
jge
cmp
cwtl
pop
flds
ljmp
imul
cmp
fwait
stos
cmpl
outsb
insl
jnp
cmp
lock
call
out
sbb
push
outsb
test
adc
add
fs
popf
fadds
imul
and
mov
or
mov
sbb
in
cmp
xor
xchg
lock
stos
xor
or
lock
or
push
icebp
push
cld
sbb
inc
dec
and
xchg
mov
es
rolb
cli
lahf
or
lods
push
dec
jns
sbbb
jl
aam
addr16
cmp
add
outsb
push
push
sbb
repz
push
mov
test
sub
add
inc
push
dec
push
pushf
loop
ficoms
push
mov
push
xor
inc
arpl
shll
dec
out
lret
mov
sbb
into
or
fidivl
lahf
push
mov
xlat
outsb
aam
ret
jno
and
insb
push
push
mov
mov
adc
fs
loopne
out
push
sahf
pop
dec
popf
inc
jno
inc
or
xchg
xor
push
rolb
and
test
sub
cmpsl
jns
fcom
fwait
inc
or
movsb
xor
fimuls
and
jl
cmp
sbb
loopne
std
in
lea
out
fldlg2
jo
sub
pushf
cli
imull
mov
jmp
and
cmp
ret
loop
and
divb
setnp
sub
aas
popa
mov
fwait
xor
mov
mov
loopne
jecxz
stos
add
dec
jnp
fistps
fildll
jb
and
scas
cmp
cmp
cli
and
aam
push
pop
adc
push
push
test
lods
fdivl
lea
mov
pop
std
or
enter
and
push
sbb
pop
or
mov
push
xchg
add
mov
dec
pop
mov
rolb
leave
scas
fdiv
fs
xor
add
mov
fstpt
nop
mov
clc
pop
mov
lret
adc
pop
xchg
push
add
adc
lcall
inc
pop
dec
and
mov
lret
test
lcall
push
sbbl
out
jmp
aam
jge
gs
adc
imul
ja
or
ja
push
bound
cmp
dec
movsl
jl
bts
faddl
setl
mov
jae
mov
push
stos
pop
clc
adc
pop
aam
cmp
jg
inc
lret
mov
pop
cmp
jl
xor
popf
imul
mov
mov
or
sti
faddp
fcmovb
test
inc
scas
jno
stos
mov
push
xor
mov
in
inc
mov
cmp
inc
pusha
sbb
aaa
pop
mov
xor
adc
mov
loopne
lret
hlt
xor
nop
outsb
jmp
or
orl
fnstcw
pandn
inc
lock
mov
mov
or
cmp
push
fucomi
sub
push
testl
icebp
jnp
lock
push
ds
lock
je
pop
pop
shll
push
movl
js
xor
faddl
sbb
sahf
xor
ret
std
xlat
mov
clc
xchg
iret
sbb
cmp
es
popa
mov
push
inc
dec
push
and
inc
sbb
cmp
aaa
shll
pop
idivb
fistpl
or
mov
imul
in
pop
ffreep
mov
dec
and
mov
push
popa
and
ja
fldt
jns
rcrl
jge
jg
int3
mov
fs
test
push
cli
sbb
xchg
in
data16
inc
sbb
adc
push
pop
cmp
jb
loop
lods
push
ds
dec
loopne
pop
push
daa
pop
getsec
mov
push
loope
dec
xchg
push
adc
aam
arpl
cmp
data16
and
mov
and
aam
inc
rorl
fisubs
jbe
or
shl
jne
pop
and
mov
inc
xchg
xor
outsb
movsb
cmp
repz
fdivrl
mov
lcall
ja
pop
ret
leave
mov
push
lret
pop
stos
lret
sbb
hlt
mov
fmul
sub
lcall
mov
push
or
negb
iret
cli
push
lods
xchg
fstl
xlat
dec
jp
shrl
icebp
and
and
je
or
mov
mov
mov
cwtl
scas
inc
lret
mov
mov
adc
push
dec
adc
push
test
stos
cmpsl
lock
add
adc
adc
push
adc
adc
std
and
les
decb
sarb
repnz
xchg
shl
sub
lods
xchg
jge
test
jl
cld
mov
test
mov
adc
insl
into
xchg
hlt
cwtl
inc
aas
fstl
sbb
and
mov
aam
in
pop
in
test
jl
popf
aam
jp
or
mov
jo
dec
pop
jmp
dec
push
mov
or
push
lea
xchg
or
adc
add
rcr
cwtl
out
cwtl
xchg
jg
arpl
stos
sahf
push
xchg
out
imull
push
je
cwtl
mov
dec
jb
xchg
or
nop
cmp
or
repnz
mov
pop
cmp
dec
leave
pop
jne
mov
lds
in
repz
push
cmc
cmp
inc
pop
push
jg
push
jecxz
dec
sub
pusha
jae
cmc
xchg
scas
das
nop
in
xchg
push
jae
ja
mov
aad
scas
xchg
push
xchg
rorl
shlb
pop
sbb
lret
mov
insb
fstl
lret
ret
loope
lds
test
int3
test
dec
outsb
mov
out
lret
aam
mov
dec
jmp
pop
push
cmp
repz
out
jg
jge
icebp
bound
or
aas
sub
sbb
xor
sub
rclb
mov
pop
mov
dec
aas
xor
xor
cmp
pop
mov
ljmp
push
xor
cmp
dec
dec
imul
mov
ja
cmpl
loopne
mov
les
shll
stos
iret
mov
mov
pushl
mov
test
and
sbb
mov
outsl
and
jle
adc
add
aas
sbb
adc
jle
xchg
in
mov
arpl
outsl
mov
mov
fimuls
or
pop
pop
lock
stc
pop
mov
sbbl
mov
into
testb
xchg
or
shlb
inc
mov
mov
push
mov
mov
roll
pop
cli
mov
sbb
ljmp
xor
adc
jecxz
in
lock
or
pop
jb
add
sti
mov
aad
sahf
repz
xchg
adc
das
mov
xor
std
idivl
es
rorl
mov
inc
pusha
ljmp
lret
popa
add
pushf
mov
jno
outsb
jl
mov
pop
mov
faddl
nop
scas
cmp
sub
sub
div
popa
rcrb
cmp
mov
orl
hlt
xchg
jnp
sbb
adc
mov
aaa
sbb
cmp
and
add
adc
push
sti
popf
cmp
sbb
pop
popf
xchg
lea
sbb
mov
adc
sbb
add
lock
mov
cmp
bnd
outsb
sub
and
inc
inc
cltd
inc
cmp
int
pushf
xor
nop
sbb
dec
mov
jae
xlat
jns
outsb
int
xchg
inc
sub
ret
movsb
inc
sbb
sbb
fbstp
insl
lods
roll
jnp
cmp
stos
jb
repnz
jb
repz
push
insl
or
bnd
inc
mov
loop
fs
outsl
mov
nop
xchg
dec
fwait
mov
adc
pop
imul
xlat
adc
sub
fadds
xor
push
lret
out
cmp
scas
mov
scas
inc
pop
jge
lea
ja
cmp
int
or
sub
pusha
pop
mov
cltd
lds
imul
mov
js
mov
lret
cwtl
sbbl
imul
push
mov
sti
test
pop
jnp
adc
pop
dec
push
push
movsl
repnz
jnp
cltd
lcall
pop
cmp
push
ret
mov
push
mov
push
jo
shr
pop
clc
popa
movsl
and
xchg
inc
sbb
ret
push
int3
dec
dec
dec
xchg
das
fwait
cmpsl
decb
in
imul
repnz
jo
sbb
lcall
push
mov
fstpt
adc
out
mov
addr16
mov
push
dec
mov
mov
stos
ja
adc
sbb
add
and
call
stos
movsb
in
cmpsl
xor
cmpsl
movsb
clc
lret
mov
sbb
jae
inc
loopne
enter
push
loop
push
cwtl
in
stos
scas
dec
gs
xor
test
ret
test
loopne
jp
xor
pop
add
pop
movsb
pop
mov
jns
jge
cmp
ja
xchg
cmp
xchg
pop
mov
pop
mov
push
pop
push
add
je
std
lret
mov
aam
cld
or
sti
jle
shrb
jnp
and
stos
rcll
jle
pop
xchg
mov
sbb
ds
xlat
add
shlb
sahf
movb
push
add
roll
push
dec
dec
sub
sbb
mov
push
adc
cld
popf
movsb
rclb
lea
mov
lcall
pop
dec
in
push
xchg
aas
xor
and
roll
arpl
sbb
pop
push
lock
repnz
int3
ds
pop
mov
and
push
lret
mov
adc
mov
mov
into
bound
and
sbb
sbbb
jnp
fcompl
mov
dec
packuswb
inc
mov
out
in
shl
in
cwtl
scas
ret
dec
test
push
xor
cltd
xchg
jo
fs
cwtl
adc
mov
loope
mov
mov
jmp
jecxz
shrb
clc
mov
mov
sti
outsl
sbb
xor
push
inc
adc
movsb
paddusb
add
pop
sub
es
dec
sbb
test
mov
jnp
jne
pop
daa
lock
ja
out
loop
mov
leave
ror
jb
out
and
pop
pop
loop
fucomp
ljmp
add
mov
and
out
movsl
fwait
inc
test
mov
testl
lock
pop
pop
pushf
and
jmp
jecxz
pop
mov
xchg
test
call
mov
clc
pop
lret
sahf
jg
push
gs
aam
in
stc
mov
push
les
push
add
divl
xchg
es
in
popf
sub
leave
cmc
mov
enter
adc
xor
clc
out
repz
sbb
dec
push
test
stos
dec
xchg
nop
fiaddl
popl
push
or
pusha
xchg
stc
fbld
pop
lods
popf
mov
fstps
push
orl
cli
or
cmc
loopne
sahf
xchg
mov
or
ja
std
fsubp
scas
mov
fdivl
movsb
pusha
out
push
or
pushf
mov
push
lea
add
in
sub
pop
test
pop
add
adc
or
lahf
pop
mov
or
notb
xchg
lahf
mov
mov
loope
aaa
push
test
cld
inc
rclb
xchg
mov
push
sub
into
cld
js
outsb
cli
mov
js
mov
mov
mov
or
or
lcall
mov
xlat
int3
and
jmp
mov
add
imul
fcompl
pop
push
xchg
push
insl
jg
fwait
cmp
mov
arpl
ficompl
mov
xchg
loop
les
in
jge
mov
js
fucomp
in
outsl
sbb
push
mov
sub
jns
mov
test
mov
inc
cmp
sbb
ljmp
add
mov
test
fistpll
xor
xlat
cmp
shrb
popf
pusha
mov
xor
cmp
frstor
movsl
jae
pop
or
pop
or
icebp
scas
insb
fisubrl
add
and
mov
je
lock
xlat
in
xchg
xchg
or
inc
fs
lock
pop
cltd
dec
arpl
ja
addr16
push
icebp
js
and
pop
data16
or
pusha
and
in
lret
jp
mov
cli
fdivl
fxch
adc
adcl
mov
test
imul
inc
fistps
pusha
fwait
aad
subb
sahf
rcll
repnz
xlat
push
in
fldl
rcr
and
mov
insb
aad
imull
gs
sbb
idivb
pop
mov
shufps
test
lock
fcmovu
fstps
cli
aaa
xor
jns
dec
mov
mov
popf
add
push
jp
xchg
test
pop
dec
cmp
fdivrs
popf
and
dec
or
call
dec
outsl
xchg
adc
lcall
outsl
pop
jo
int
in
xor
jns
rcl
jg
arpl
xchg
inc
stos
jp
loope
aad
jns
shrb
pusha
xchg
cmp
mov
mov
ret
push
dec
repz
jle
and
push
mov
inc
lods
es
nop
js
xor
testl
sahf
xor
jnp
fst
fists
cmpsb
add
dec
in
roll
lcall
das
pusha
xchg
repz
into
mulb
and
jne
xchg
xchg
mov
dec
jb
hlt
test
cld
mov
mov
jl
sub
mov
mov
sbb
xor
daa
xor
sahf
ds
arpl
sahf
hlt
adc
imul
mov
sub
ds
in
test
popf
fisubl
mov
dec
cmpsb
mov
xchg
push
xchg
int
xor
or
ss
call
ret
inc
mov
outsl
iret
call
dec
jl
movsb
ds
loop
insb
fcoms
cmpsl
mov
insl
lcall
mov
adc
mov
xor
imulb
add
add
rcrl
fimull
mov
js
mov
hlt
push
inc
xor
jo
and
inc
push
aas
jl
dec
addr16
jge
lret
add
movsb
cld
dec
mov
jns
mov
insl
dec
outsb
xor
popf
lock
cwtl
xchg
inc
xor
dec
cwtl
mov
mov
jnp
cmp
pop
clc
push
jo
jo
aas
pop
addr16
js
mov
xchg
cmc
mov
push
call
in
mov
mov
adc
xor
je
scas
sbb
loope
mov
mov
mov
out
jbe
cmpsl
sub
push
stos
mov
pop
repz
fs
pop
lock
and
lds
xor
mov
daa
jle
add
sub
repnz
push
movl
adc
jae
jp
lahf
xchg
movsl
mov
ror
pop
iret
xor
popf
outsl
dec
mov
ror
jge
pop
pop
inc
adcb
dec
in
xor
pop
pop
ret
aad
fcompl
cwtl
cltd
mov
cmc
xlat
add
dec
imul
sub
lret
popa
push
movlps
fdivl
adc
pop
or
icebp
jmp
loope
mov
adc
aam
out
rcr
stc
lds
inc
loop
lods
mov
dec
mov
inc
mov
negl
icebp
sbb
rdpmc
int
into
pop
rcr
mov
mov
push
sub
xchg
mov
mov
cwtl
out
lcall
inc
xchg
les
sbb
movsl
mov
push
mov
int3
bsr
out
imul
xchg
inc
jmp
shl
bound
or
in
xchg
and
repnz
sub
loope
sti
jge
sbb
movsl
mov
ds
nop
icebp
fs
lcall
push
fidivrl
inc
into
aaa
jne
jns
jo
push
inc
fdivrl
imul
mov
xor
jae
jns
push
pop
xchg
cmp
gs
sbb
roll
es
les
stc
frstor
dec
sbb
sbb
cltd
sbb
outsb
or
mov
popf
add
xchg
xor
inc
mov
dec
inc
outsl
in
in
adc
inc
pushf
adc
imul
bound
enter
inc
lcall
or
cmc
cmp
mov
sbbl
mov
dec
aaa
movb
mov
sub
loopne
jae
sub
ljmp
push
divl
mov
ja
or
xchg
or
cmpsb
add
xor
inc
push
mov
push
and
data16
int3
sbb
aam
or
xchg
ljmp
mov
popa
mov
cmpsb
jnp
lret
int3
or
pop
enter
and
out
or
jbe
popa
pop
mov
push
push
jae
mov
ljmp
mov
cwtl
push
cli
xchg
lods
fs
or
lahf
push
xor
adc
add
pop
imul
inc
jecxz
out
shrl
aad
push
mov
xchg
imul
inc
int3
out
dec
fisttpl
les
cmp
lods
lea
jmp
cmc
mov
das
push
xchg
xchg
xor
cmp
push
sbb
jle
fld
jnp
pusha
loop
in
add
mov
ljmp
fs
orb
sbb
nop
add
mov
pop
mov
adc
lcall
repnz
push
mov
dec
adc
adc
lods
inc
mov
insl
imul
dec
pop
jge
jle
fisubrs
fstl
repz
cmpsb
mov
push
inc
push
push
cmp
jns
enter
xorb
fdivrl
in
imul
and
cmpsb
cmpsb
pop
inc
add
inc
outsb
rcll
xchg
ret
mov
out
or
iret
mov
repz
adcl
sub
inc
std
mov
sti
mov
adc
mov
fldcw
aad
ja
sbb
add
insl
xchg
mov
or
inc
into
adcb
sbbl
or
xchg
scas
mov
fsubrp
xchg
sti
cmp
test
cmpsl
sub
in
std
es
mov
cmc
out
sahf
into
rcrl
ret
icebp
test
mov
mov
repz
rorb
aaa
clc
shll
rorl
add
insl
iret
mov
dec
ja
test
add
and
sub
movd
fildll
pop
pop
subl
and
lahf
ret
imul
pop
iret
ds
cmpsb
js
leave
enter
sub
sub
mov
push
daa
sbb
dec
dec
fistl
sub
bound
les
cmpsb
jecxz
push
rclb
sbb
out
push
cmp
popf
lock
hlt
push
pop
int3
gs
xchg
std
adc
data16
push
mov
xchg
lock
cmp
imull
jb
ds
inc
rcll
pop
xor
divb
push
mov
loopne
pop
call
mov
xchg
mov
cmp
push
outsl
cmpsb
inc
push
scas
addr16
icebp
loopne
sbbl
sub
push
daa
lds
sub
xchg
dec
movsl
bound
hlt
sarb
pop
xchg
add
adc
xlat
bound
ljmp
call
lods
mov
out
mov
inc
push
dec
mov
aas
adc
fwait
popf
mov
lods
es
cmp
test
in
aas
ja
hlt
shr
loope
xchg
mov
push
mov
popa
sub
andb
shrl
mov
inc
jnp
imul
addb
push
mov
ljmp
out
sahf
mov
fistl
cmpsl
and
ja
shll
fisubl
push
dec
mov
or
mov
cmp
pop
adc
add
push
mov
mov
sub
sbb
sub
adc
scas
mov
or
scas
data16
mov
stc
popf
imul
fs
cmp
outsl
lock
adc
ljmp
out
mov
xchg
inc
pop
sub
inc
sbb
sbb
aad
add
fisubl
or
pushf
add
adc
adc
pushf
xchg
or
sub
mov
iret
sub
sub
push
mov
mov
cmpsb
push
and
repz
adc
jno
movsl
adc
mov
addr16
inc
xchg
mov
int3
inc
jbe
sub
xchg
push
or
icebp
xlat
mov
movsl
jmp
gs
je
inc
ds
inc
sbb
stc
shll
xor
leave
iret
cli
xor
jmp
das
rorl
fisubs
pop
mov
xor
idivl
jp
mov
pop
movb
cmp
mov
xchg
bound
add
arpl
ret
pusha
pop
mov
stos
mov
mov
flds
in
add
dec
jns
pushf
push
pop
gs
out
cmpsl
testb
sbb
lds
mov
and
pusha
xchg
repnz
addl
lret
add
cmp
sbb
lahf
xor
mov
push
adc
mov
sbb
sarl
je
mov
mov
xorb
in
mov
fiaddl
fnsave
insb
xacquire
pmaxub
push
insb
xchg
inc
stc
mov
xchg
push
sbb
es
xlat
repz
ja
xorb
loopw
push
movsl
call
roll
movsb
cmp
push
hlt
or
out
pop
inc
ss
mov
xor
or
aas
xchg
push
and
lods
dec
mov
out
cld
jp
add
cld
mov
inc
mov
sub
pop
ds
push
leave
lret
and
jns
dec
pop
ret
into
or
jmp
adc
rorb
inc
lds
daa
mov
cmpl
into
repz
adc
mov
xchg
jle
xchg
scas
rcl
dec
pop
fnstcw
repnz
test
out
add
inc
es
inc
or
in
outsl
or
push
std
pop
cmp
jle
test
mov
lcall
imul
inc
mov
pop
cmpsl
mov
sub
add
cmp
hlt
pop
inc
mov
mov
xchg
jns
push
sbb
pop
add
and
iret
jne
andl
xchg
adc
subl
inc
cmc
mov
jg
mov
or
rcrl
jbe
add
dec
sub
mov
je
mov
add
pusha
fptan
xor
outsl
add
mov
fwait
fwait
jb
pop
sbb
popa
das
cmpsl
dec
pop
xchg
out
xlat
ds
sbb
xor
mov
fadds
push
or
std
xchg
add
das
mov
mov
jne
mov
lahf
mov
into
sar
aaa
jbe
mov
iret
sbb
daa
pop
in
pop
cmpsb
shlb
jp
mov
imulb
push
rcll
xchg
xchg
lea
mov
pop
pop
fisttpl
aaa
je
push
inc
shll
jo
dec
or
dec
add
adc
fisttps
sub
dec
out
mov
lret
or
xchg
and
mov
scas
jb
pusha
mov
outsl
jge
lds
mov
adc
into
xchg
lea
dec
lret
push
mov
xor
mov
mov
stc
mov
pop
cmp
lds
mov
jge
jp
cmp
loop
cmp
notb
ds
mov
adc
cmc
cmpsb
popf
mov
add
inc
decl
movsl
icebp
jnp
out
sbb
sub
jb
es
movsb
mov
jne
js
fstpt
add
adc
std
stos
fstpl
scas
das
lcall
xchg
jmp
jnp
jnp
xchg
xchg
stos
filds
js
sti
in
hlt
dec
jg
mov
scas
sti
repnz
notl
and
in
jo
cmp
in
lods
dec
or
stos
add
sbb
or
daa
mov
and
inc
adc
dec
jb
cwtl
sub
inc
push
outsl
push
push
repnz
push
mov
outsb
pop
sahf
pop
mov
sub
lahf
fdiv
mov
mov
fildll
mul
xor
pop
out
cmp
data16
mov
or
lods
data16
pop
mov
testb
cmp
add
jge
mov
shlb
and
adc
xchg
mov
pop
xchg
pop
and
mov
adc
pop
aas
into
rolb
sbb
rcrl
mov
sub
cltd
sti
pop
es
ja
int3
cli
xor
outsb
or
into
pop
push
das
hlt
addr16
loope
cmp
mov
fldt
sub
movsl
jg
popa
sbb
in
lret
pusha
push
pop
add
pand
cmp
jnp
hlt
push
push
mov
std
outsl
leave
mov
pop
sub
mov
jge
and
in
cmp
add
lods
inc
ja
pushf
push
and
imul
inc
push
jmp
adc
mov
loope
or
push
inc
xchg
clc
pop
leave
cltd
mov
push
je
cmc
sbb
std
jnp
push
das
fmul
fistpl
int3
xchg
mov
rcrl
inc
fninit
scas
mov
daa
out
xlat
inc
in
dec
int
xchg
pop
mov
addr16
sbb
loopne
ja
in
ljmp
xchg
xor
xchg
in
sbb
sarb
mov
dec
push
ljmp
jne
je
outsb
fisubrl
std
shl
repnz
xlat
and
cmp
shlb
mov
mov
jmp
je
js
rorb
inc
and
into
dec
insb
orb
sub
sbb
imul
push
jl
jns
fstps
test
sbb
shr
xchg
xchg
aam
sbb
push
insb
adc
imul
cltd
mov
in
add
sub
pop
mov
mov
sbb
mov
popf
imull
mov
pop
ret
cmp
dec
cltd
mov
popl
inc
and
pushf
add
in
jg
jo
or
loopne
xor
push
sub
dec
in
add
loope
popf
or
and
add
jae
push
ret
arpl
aad
xor
xchg
pop
jge
xchg
les
add
in
jge
lahf
xchg
cmc
pusha
and
push
dec
fldlg2
and
cwtl
fidivrl
outsl
xchg
movsl
jg
loope
fisubl
lret
fcmovnbe
mov
into
inc
shl
dec
inc
insl
stc
sbb
in
int3
jmp
adc
mov
fimuls
sbb
dec
lods
sub
add
pop
xchg
fdivrs
out
or
outsl
outsl
xor
jns
ds
xlat
xchg
dec
mov
adc
imull
addr16
mov
stc
sbb
jb
push
jbe
loop
add
xlat
mov
mov
pop
lret
fists
enter
cwtl
frstor
xor
or
js
roll
hlt
and
or
pop
xor
lcall
int3
es
shll
sbb
sbb
pop
mov
sti
mov
push
push
aam
pop
dec
orb
je
push
add
in
mov
dec
sbb
lock
add
inc
mov
inc
inc
jns
or
mov
push
sub
push
int3
inc
sbb
pop
sub
dec
andb
sbb
stos
push
icebp
insl
add
jp
cld
mov
in
and
in
push
fsts
jl
push
sub
test
ja
pop
mull
jmp
rolb
dec
or
ja
clc
jnp
jae
out
push
sbb
mov
hlt
ret
addr16
dec
mov
xor
stos
or
lret
mov
mov
add
mov
ficoml
jnp
aas
add
inc
sbb
mov
and
gs
xor
adc
loop
movl
call
sbb
mov
outsl
xor
loopne
out
daa
aam
stos
pushf
sbb
sub
push
sub
sti
jecxz
push
mov
arpl
mov
in
cltd
mov
pushf
jecxz
movsl
out
cwtl
mov
xor
pop
loop
jo
aam
and
xor
jb
adc
adc
xchg
lea
jge
inc
addr16
inc
push
jle
jnp
cmc
add
clc
imul
inc
lcall
psubb
xor
enter
mov
stos
aam
sahf
psubusw
mov
sub
clc
sti
cmp
jmp
push
cs
push
fmul
jo
ja
or
xchg
or
xor
data16
add
sti
cmpl
jmp
imul
mov
sub
inc
cmp
xor
bound
xor
or
mov
ja
cltd
pop
test
or
loope,pt
mov
pushf
xor
aaa
shl
rcll
fsubrl
inc
pusha
add
push
cmp
cli
sbbb
sbb
fdivs
shl
ljmp
push
gs
dec
xchg
sarl
fistl
jge
test
cltd
lret
push
test
lret
shrb
xchg
jmp
mov
dec
imul
sbb
scas
mov
or
insl
cmp
jmp
mov
cmp
rcll
ljmp
adc
and
and
stos
sarb
jg
push
mull
xchg
sbb
mov
out
insl
pop
and
imul
mov
cmp
bound
push
xchg
popa
out
xor
fisttpl
fildll
movsl
dec
dec
sub
or
xchg
call
xchg
sbb
push
jae
mov
hlt
mov
add
stc
sub
cmp
cmc
out
pop
out
adcb
sti
mov
mov
xor
shlb
xor
pop
push
adcb
int
inc
xor
adc
pop
aas
stos
scas
mov
lods
mov
inc
pop
mov
out
push
xor
mov
in
movl
jb
cmc
scas
or
pushf
adc
ja
cmp
jp
stc
fisubrs
bound
pop
add
lret
sbb
in
inc
xchg
loopne
push
in
pop
jb
or
cmp
scas
inc
add
or
dec
lea
xor
pop
orb
push
aas
add
clc
dec
fdivrs
sbb
add
add
lods
fidivs
enter
lods
scas
call
pop
aas
aas
test
push
push
ret
jle
std
jne
hlt
insl
lods
lret
xchg
jecxz
adc
push
and
divb
cmp
js
inc
std
jno
sbb
shrl
pop
je
movsl
sbb
sbb
stos
mov
push
mov
in
enter
sbbl
fs
sub
cmpsb
inc
adc
lret
sbb
in
popl
xor
icebp
cs
fcompl
add
inc
cmp
sub
add
mov
mov
aaa
push
into
or
xchg
mov
mov
test
cmp
fidivs
insb
shl
fwait
pushf
movsb
in
and
push
out
fsubs
pop
aaa
out
fildl
cld
dec
iret
xor
mov
test
repnz
and
pop
mov
aad
notb
cmp
stos
jb
sbb
adc
dec
out
leave
rol
mov
insl
insl
call
in
pop
mov
in
push
sub
mov
lea
adcb
cli
mov
or
push
cs
cwtl
mov
push
test
cmc
or
sbb
inc
fcmovu
push
xchg
jne
dec
pop
enter
push
fdivl
outsl
jl
push
xor
inc
xchg
movsl
cmpsl
jle
pop
or
sti
mov
bnd
test
cld
fucom
sti
jb
popf
mov
pop
inc
xchg
aad
mov
mov
cmc
leave
inc
aaa
sahf
lods
sub
hlt
cmp
cltd
cs
add
dec
mov
inc
or
fistpll
mov
cmp
js
je
sbb
ss
add
cmp
lods
arpl
adc
mov
scas
nop
push
mov
loope
mov
xor
pushf
mov
sbb
mov
rcl
int3
bound
or
xchg
push
aas
aas
and
adc
stos
dec
jle,pt
stc
and
dec
xor
dec
push
test
xchg
insb
sahf
popf
inc
lods
fmul
scas
icebp
rclb
cmp
xor
pushl
mov
xchg
adcb
cmpsb
lret
fs
and
jmp
pusha
call
icebp
add
aaa
ror
inc
cmp
push
or
imul
xor
rorl
in
dec
dec
xchg
fsubr
sub
hlt
adc
mov
enter
jns
inc
iret
pop
or
push
cli
push
xor
stc
or
bnd
pop
out
mov
cltd
pop
insl
jb
sub
into
arpl
xchg
mov
fidivrs
pop
dec
fsts
push
inc
adc
add
mov
scas
push
std
cmp
push
sub
fadds
inc
icebp
sbb
in
mov
pushf
outsl
aad
mov
mov
mov
jno
and
repnz
cs
into
pop
imul
inc
mov
inc
clc
xchg
lret
pop
fcmovu
int3
aaa
xchg
mov
fldl2t
bound
pushf
fnstenv
int3
and
push
adc
cld
mov
and
mov
push
cltd
pop
test
push
outsb
sbb
or
add
and
adc
ret
push
int3
cltd
dec
ds
xor
xchg
inc
cltd
jno
cmpsb
enter
testb
xor
stc
sbb
mov
ret
sub
xor
popl
inc
mov
enter
sub
movsb
mov
jb
push
xchg
xor
test
inc
adc
dec
sahf
inc
mov
cmc
jns
mov
imul
es
mov
and
jbe
fsubr
cmp
test
add
js
adc
push
xor
xchg
and
dec
sarl
int
dec
repz
adc
xchg
fnstenv
mov
ret
jecxz
cltd
mov
lods
movsb
shlb
loop
lock
dec
inc
jecxz
inc
ret
jecxz
imull
sub
adc
shll
jbe
jecxz
adc
rcll
faddl
cs
shrl
movb
cmp
xor
xor
push
jge
dec
mov
jae
jnp
mov
mov
arpl
cli
ss
cwtl
xor
pop
cmp
out
fucom
xchg
sti
dec
fildll
mov
pop
mov
iret
cmpsl
je
fiadds
mul
xchg
mov
jnp
xchg
enter
sarl
jmp
dec
cmp
jb
mov
cltd
popf
adc
or
sbb
jmp
xchg
xchg
lahf
xchg
sub
in
sub
or
or
rorl
jo
pop
adc
dec
and
cmp
push
test
das
xor
mov
add
fs
xchg
leave
insl
xor
xor
sbb
mov
mov
vmread
jle
pop
pop
hlt
and
pop
aam
xor
loope
push
cmp
push
pushf
fisubrl
pop
pop
add
jp
call
push
pop
fists
jo
xorl
mov
arpl
mov
inc
and
in
jl
mulb
pop
cli
fucomp
mov
cmp
cmp
negl
and
and
out
mov
adc
js
insl
dec
addl
jnp
xchg
sarl
mov
int3
push
dec
out
hlt
ds
stos
mull
dec
icebp
ret
inc
cli
incb
or
ja
sub
push
in
mov
mov
push
mov
sbb
arpl
movsb
pop
cmp
xor
sub
loopne
testl
add
sarl
cli
ss
loope
pop
lea
fs
out
xchg
xchg
lret
pop
bound
out
testb
push
insb
mov
popa
pop
shrb
int3
addl
push
imul
mov
sbb
xor
in
out
popf
insb
mov
xchg
lcall
xchg
pop
out
adc
fbld
inc
rcrl
or
bound
push
or
mov
std
push
shlb
jl
sbb
sarb
push
rorl
notb
or
aad
lcall
mov
sub
pop
jg
fimuls
adc
sbb
jecxz
or
jb
pop
lret
bnd
pop
bnd
jge
in
pop
sbb
mov
popa
or
and
ret
sub
jnp
and
pushf
ret
xchg
and
sub
sub
pusha
mov
xchg
jl
xchg
pushf
xchg
sahf
ret
scas
loopne
decb
mov
popf
and
scas
mov
faddp
xor
pop
int3
out
jae
add
jno
or
xchg
scas
repnz
js
iret
enter
popf
push
aad
lret
dec
hlt
xchg
mov
sbb
jp
sti
mov
push
popf
or
sub
mov
add
je
pushf
mov
sub
das
xor
je
nop
fxch
mov
cwtl
xor
jp
loope
out
mov
shr
loope
adc
mov
or
aad
mov
ds
lods
nop
rcll
xchg
pop
xchg
and
pushl
pop
mov
test
cmpsb
xor
mov
shlb
cltd
or
bound
leave
lea
inc
sbb
out
xchg
sbb
or
cmpsb
lahf
or
test
inc
add
push
cli
xchg
jnp
in
sbb
add
xor
jge
out
push
or
jp
jno
repnz
ja,pt
sub
pop
cwtl
mov
jnp
ja
sbb
into
push
xchg
mov
sub
mov
jecxz
pop
or
inc
repnz
adc
jmp
jbe
imul
insl
cmp
insb
shr
sahf
in
movsb
les
pop
aam
mov
popa
jns
dec
xchg
mov
add
arpl
jp
imul
lret
notb
and
add
inc
xor
call
cmp
les
and
aaa
mov
insl
negl
mov
inc
and
imulb
out
cs
andl
sbb
push
scas
xchg
lea
lahf
insb
pop
add
and
jle
mov
cmpsb
shll
lods
dec
cmpsl
in
sub
or
jp
add
scas
insl
out
out
mov
ficomps
cltd
jo
push
pop
pop
repz
mov
dec
data16
add
adc
arpl
mov
lea
pop
loop
xchg
pusha
push
adc
sti
out
pop
inc
cmp
enter
inc
stos
les
mov
inc
in
mov
out
pop
dec
jmp
dec
pop
and
dec
inc
adc
pop
push
ficoml
inc
pop
mov
inc
sub
das
or
mov
adcb
sbb
pushf
aas
sbb
test
into
leave
movsl
cmp
movsl
imul
push
mov
xor
sub
xchg
push
push
sbb
ljmp
or
fisttps
and
aas
jb
int3
jae
cmc
push
ds
fnstcw
daa
push
or
xor
les
lcall
outsl
mov
lock
cli
xchg
or
scas
cltd
sahf
dec
shl
and
or
sbb
pop
rcrb
inc
push
mov
add
and
out
inc
test
add
pop
imulb
push
lret
in
es
xchg
push
fs
daa
imul
addb
pop
xorl
test
sub
inc
jne
outsb
pop
pop
jmp
xchg
fcmovne
in
pop
or
out
sbb
mov
fmull
js
popf
icebp
je
into
dec
pop
or
push
push
adc
js
mov
fsubp
inc
std
arpl
mov
adc
je
xlat
cmp
sub
xor
cmp
movsl
jp
sub
mov
mov
sti
nop
pop
or
or
decb
repz
jb
push
cmp
ficoms
cli
stos
cltd
loope
mov
jnp
inc
dec
push
aad
cmp
adc
repnz
aaa
sub
mov
push
cmp
adc
je
test
scas
hlt
dec
das
stos
mov
out
gs
addr16
lods
mov
xchg
ret
pop
pop
sti
jns
mov
inc
jge
pop
inc
xchg
mov
imul
ret
icebp
pop
and
cmpsb
adc
mov
mov
jmp
cli
repz
mov
mov
pop
nop
jmp
push
fnsave
ljmp
mov
sub
add
aam
xchg
sub
and
mov
mov
and
xchg
pop
js
int3
rorl
enter
sbb
test
shrb
mov
fdivs
imul
outsl
xor
std
inc
jae
mov
jg
mov
pop
scas
jp
push
sbb
adcl
gs
in
pop
adc
push
or
mov
pop
cmc
cmp
push
negl
leave
cmc
xor
mov
aam
dec
xor
jl
cld
neg
push
sti
lahf
dec
arpl
shrl
push
insl
and
jmp
add
loopne
mov
adc
cmc
loopne
add
push
inc
scas
mov
cmp
and
ret
mov
in
daa
shrb
fcmovb
cwtl
lret
mov
and
pop
jo
mov
xchg
add
repz
outsl
loopne
repz
sbb
cmpb
cmc
add
orb
inc
cs
xor
push
ret
je
les
add
xchg
lcall
mov
xor
int
js
cmpsb
xchg
fdivs
push
add
push
inc
popf
ficoms
mov
lret
loopne
pop
cmp
hlt
mov
negb
jmp
sub
addr16
jl
jae
ds
xchg
ljmp
cld
cld
shr
lahf
or
jmp
pop
xchg
js
mov
xchg
in
mov
pop
shll
jl
scas
mov
psubd
mov
arpl
fs
test
or
push
xchg
sbb
inc
lret
or
push
fucomi
xchg
mov
clc
not
aam
ljmp
sub
dec
cmp
in
sbb
test
mov
ss
insb
or
mov
cld
rorb
pop
in
inc
dec
jb
jge
sbb
in
lock
push
inc
cli
aad
ds
in
in
pusha
in
mov
sarl
push
cld
ret
cmp
mov
repz
jno
rclb
loope
mov
iret
xor
dec
adc
movsb
icebp
andl
jecxz
xor
push
lds
stc
rcl
addr16
pop
and
sti
mov
popa
push
push
jns
outsl
jb
jle
idivl
icebp
jp
je
adc
orb
ss
std
jbe
and
inc
roll
push
stc
js
scas
cld
outsl
fildl
cmp
mov
ds
aam
mov
sub
bound
mov
xlat
stos
mov
and
stos
adc
push
sub
xchg
cmpsl
xchg
rep
jno
outsb
dec
je
cltd
add
jg
popf
daa
hlt
pop
mov
or
jno
pmulhuw
jmp
or
mov
mov
in
mov
xor
sahf
daa
test
jge
and
fsts
jno
out
loope
push
inc
es
mov
cmp
test
add
xchg
and
push
push
shll
or
nop
pop
ljmp
pop
mov
jmp
andb
shlb
lds
adc
test
lock
dec
imul
jge
lea
cmc
notl
lds
mov
adc
pushl
or
and
lock
adc
xchg
loop
imul
fiadds
jne
xchg
scas
mov
into
pop
out
sti
es
cmp
xor
xor
jnp
sub
cmp
js
rclb
repnz
cli
jae
mov
adc
pop
jle
sbb
inc
insb
adc
test
mov
mov
jecxz
sub
outsl
mov
inc
mov
inc
jo
sar
inc
mov
push
pop
pop
test
pusha
mov
out
cmp
mov
dec
pop
shrb
mov
pop
out
rclb
in
paddw
and
jecxz
xor
dec
mov
je
lock
daa
lods
push
mov
es
es
sbb
and
cmc
pusha
in
sub
xor
leave
add
std
rclb
xchg
mov
adc
mov
pop
pop
jbe
push
push
rorl
adc
adc
push
imul
and
cmc
add
jns
jbe
test
test
jb
sbb
clc
jae
lods
push
sub
cmpl
mov
lret
push
mov
lret
outsb
sbb
dec
xor
dec
push
jmp
popf
pop
jge
test
add
test
jge
jl
cmp
sarb
mov
sarl
das
hlt
pop
jb
lahf
jp
inc
add
lea
add
pop
aas
loopne
cmp
imulb
imul
ret
xor
or
jns
sub
mov
mov
or
sub
lcall
mov
fwait
mov
movsl
stc
mov
aas
mov
xor
pop
mov
mov
xor
mov
xchg
xorb
mov
xchg
xor
xchg
pop
shl
push
sbbb
dec
ret
pusha
test
xchg
dec
movsl
les
mov
sbb
xchg
mov
fwait
imul
pop
loop
sub
dec
pop
cli
adc
cmp
pop
int3
xor
xor
xchg
mov
notb
bsr
fs
sbb
mov
jne
popf
pop
mov
or
cmpsb
clc
pop
and
pop
pop
adc
lahf
mov
adc
es
push
cli
cmp
dec
mov
outsl
in
into
outsl
mov
in
out
lret
inc
iret
and
lock
adc
pop
in
outsb
fbstp
pop
and
xor
adc
or
adc
jg
aas
rcrb
mov
iret
push
push
bnd
stc
mov
imul
mov
jecxz
mov
and
lods
pop
xchg
lahf
lods
xchg
iret
adc
roll
inc
ret
sbb
and
dec
jmp
adc
mov
orl
lods
mov
repz
dec
das
cmc
out
jmp
repz
movsb
aad
inc
fdivs
shlb
loope
arpl
sbb
movsl
sbb
fidivrl
out
adc
and
scas
inc
aam
jg
psubw
leave
add
push
std
mull
jo
mov
test
rorb
mov
in
mov
jle
bound
mov
or
icebp
mov
lret
push
xchg
into
les
cmpsb
incl
sub
push
cmpsl
jb
push
fwait
mov
and
xchg
imul
ljmp
or
das
stos
popa
mov
mov
sbb
sub
scas
repz
icebp
lret
and
test
and
push
outsb
in
ds
repz
and
inc
push
dec
add
push
inc
jae
cmp
pop
dec
mov
aad
push
iret
test
cmp
lods
nop
sbb
loop
cmpl
sbb
cmpsl
scas
jo
out
sub
fimuls
pop
in
mov
in
push
add
push
scas
test
cmp
lods
mov
dec
mov
add
rcl
inc
stc
mov
or
sbb
mov
jl
lahf
movsb
sbb
pop
jbe
js,pn
int3
iret
pop
jl
sbb
mov
and
fiaddl
jbe
mov
loop
or
cmp
mov
imulb
xor
sti
inc
or
xchg
mov
rol
aam
cltd
cmc
in
hlt
divl
scas
pop
lea
test
in
mov
mov
shl
jo
scas
jmp
push
imul
adc
insb
jmp
fadds
jb
or
push
pusha
xchg
lcall
cmp
pop
stos
dec
xchg
push
pop
add
xchg
jo
inc
mov
rol
cs
xchg
insl
out
and
xor
inc
mov
lods
lods
xchg
xchg
mov
loopne
push
jnp
sub
mov
cmc
cwtl
adc
into
or
mov
jl
imul
sub
ss
stc
sub
fistpl
loopne
cltd
in
mov
or
mov
out
push
sbb
dec
lret
push
mov
mov
fstpt
icebp
mov
and
or
lock
sub
sub
daa
push
push
xchg
out
aas
xchg
mov
sbb
shlb
shufps
pop
dec
movsb
test
popf
stc
mov
out
inc
mov
repz
fisttpll
push
mov
push
lea
js
ljmp
gs
adc
loopne
mov
out
js
sbb
repz
pop
xchg
lret
enter
stos
push
and
push
loope
or
lcall
mov
aad
repnz
shl
sbb
cmpsb
data16
sub
xor
jne
mov
add
xor
mov
out
jg
sub
add
mov
sbb
stc
inc
sbb
ret
sub
jne
or
lds
pop
sarb
adc
mov
inc
inc
jle
xchg
jae
or
rclb
pushf
insb
jo
dec
fwait
pop
push
pushf
stos
sbb
shl
sub
and
sub
push
aad
xor
out
jne
iret
call
andb
mov
xchg
sahf
iret
rclb
cltd
adc
daa
js
mov
add
out
movsb
icebp
repz
jns
shl
mov
lcall
fmuls
push
push
out
mov
sub
cli
inc
pop
pop
stc
and
xchg
cwtl
xlat
lods
rcll
xor
inc
scas
sti
xchg
lret
aad
jb
xchg
mov
jo
les
ja
sub
in
cmp
mov
fsts
pop
popf
push
aaa
lds
jge
loop
aad
push
lea
push
mov
andl
in
sub
mov
dec
push
add
xchg
add
xor
add
push
add
insb
adc
add
add
adc
add
add
add
adc
add
add
add
lcall
add
adc
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
imul
add
add
add
sub
popf
stos
pusha
leave
fildll
push
dec
decb
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
test
notb
push
add
ret
sbb
and
or
cmp
cmc
out
push
test
fwait
in
add
pop
or
sbb
inc
adc
push
push
sub
mov
sub
or
add
pop
ret
push
pop
mov
adc
push
in
movsl
jo
sbb
sbb
dec
xchg
or
push
cmp
shrb
adc
xabort
push
int3
push
call
aad
xchg
dec
or
lea
data16
push
shlb
lea
ss
add
add
jnp
add
jae
test
push
mov
sbb
cli
rep
xchg
sbb
out
push
add
outsl
adc
clc
leave
push
call
xchg
nop
add
add
push
add
loop
push
cli
adc
mov
mov
lret
out
sub
or
fists
push
notb
leave
jg
cmpsb
fldenv
pusha
add
push
inc
xor
mov
sub
jnp
xchg
pop
sbb
lea
inc
call
mov
rcll
push
push
and
es
test
call
test
sbb
xor
push
enter
or
push
and
xchg
rcll
js
and
inc
or
es
dec
inc
icebp
add
movb
jmp
inc
bound
push
call
lock
sub
add
or
xchg
pop
pop
jo
nop
and
cld
cmpsl
call
pop
sub
push
add
push
call
xchg
sbb
inc
sar
mov
add
inc
fs
std
ret
mov
cld
inc
mov
add
int
cmp
in
lods
push
jne
scas
leave
push
nop
sub
cmpsl
push
icebp
repz
cmp
or
cltd
add
scas
pop
add
jmp
cltd
or
dec
mov
cmp
iret
adc
nop
enter
or
cs
jmp
ja
add
clc
movzwl
test
leave
movsb
mov
ja
js
pop
xorl
adc
add
cmp
iret
push
cmpb
rolb
push
cld
sub
shll
arpl
jne
sub
rorb
pushf
and
test
adc
mov
jae
inc
jmp
pop
pop
mov
loopne
xor
push
pop
xor
psubsw
loop
nop
push
mov
clc
xor
adc
lds
cmp
pop
mov
das
push
mov
in
push
aaa
cmc
std
xchg
dec
sbb
sub
int
in
dec
je
loopne
mov
sub
out
stc
add
mov
movsl
sbb
add
loop
inc
sbb
movsb
outsl
rcrl
stos
lret
fsts
stos
pop
into
pusha
cmp
cmp
add
or
cli
mov
add
lock
aaa
adc
push
xchg
mov
jecxz
or
in
push
mov
dec
sub
ss
xor
and
lret
leave
bound
dec
push
hlt
push
dec
or
pop
and
lea
push
aas
cmp
in
ror
inc
je
mov
sub
insl
incl
jmp
pop
sbb
test
nop
cli
cmp
push
stc
jmp
fiaddl
movl
fwait
loopne
pushf
dec
jb
push
pop
fimull
xchg
movsb
pop
sub
inc
xchg
iret
mov
leave
xlat
sbb
pop
sarb
hlt
pop
call
and
or
cmp
or
adc
push
cmp
push
push
push
push
call
sub
adc
lds
sbb
inc
or
and
mov
fadd
adc
inc
mov
int
and
sarb
jg
addr16
adc
sbb
jmp
pop
and
dec
movaps
adcb
rolb
pop
push
int3
scas
testb
inc
xlat
iret
test
push
test
and
and
movntps
mov
mov
inc
sbb
push
inc
push
xchg
pop
inc
dec
push
lret
imul
jmp
sahf
movsb
lea
repz
mov
icebp
mov
loopne
sbb
dec
or
inc
cli
mov
jmp
ss
cmp
sub
pushf
sbb
add
add
dec
adc
jl
sbb
fidivrl
dec
jmp
push
and
mov
roll
add
mov
inc
into
in
jecxz
scas
and
jne
andl
and
jg
jo
imul
inc
outsl
outsb
and
aas
shl
adcl
icebp
pop
fs
and
iret
insb
outsb
fst
pop
lahf
je
and
jl
mov
inc
dec
mov
cs
insb
and
out
ret
sub
inc
imul
je
cmp
loop
out
dec
in
loopne
fdivs
xchg
xor
dec
cmp
leave
jecxz
addr16
outsl
js
test
popf
xchg
je
adc
popa
movsl
sub
xchg
or
jae
or
inc
dec
or
out
sbb
imul
roll
dec
popa
outsb
fs
jo
mov
cmc
sbb
dec
cmp
sbb
sub
jbe
inc
mov
and
ret
inc
or
xor
push
add
out
sbb
add
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
or
int3
adc
add
pop
add
negb
or
sub
or
sub
or
add
inc
add
adc
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
