adc
jae
aas
mov
mov
push
int3
adc
cli
add
xchg
dec
mov
inc
popa
pop
imulb
mov
out
ljmp
das
ljmp
pop
lahf
out
adc
fs
out
sbb
popa
xor
adc
mov
shll
pop
into
inc
mov
repnz
enter
stos
aaa
jle
adc
call
mov
push
inc
scas
mov
cmp
sbb
fildl
sub
xchg
push
xchg
ljmp
cld
jno
jne
adc
popf
jmp
dec
and
cmp
mov
rorl
fsubs
and
shll
mov
enter
dec
sti
outsl
jbe
mov
fldl
insl
inc
lret
jmp
dec
out
outsl
rorb
data16
outsl
pop
aad
fs
dec
cltd
iret
and
fsubr
rorb
ret
bound
mov
lcall
movsl
fucomi
xchg
aad
and
cmp
fsubrp
inc
mov
jbe
jnp
mov
lcall
ljmp
cs
hlt
pusha
push
mov
pop
ret
cmp
ja
push
imul
daa
pop
ja
xchg
and
pop
test
mov
pusha
jmp
mov
add
and
ss
testl
ds
and
xchg
aaa
pusha
scas
sub
xchg
pop
daa
xchg
movsb
fstl
mov
jns
adc
sar
add
nop
addb
jmp
mov
xor
fs
jo
adc
fcmovu
mov
mov
mov
addr16
es
mov
jnp
into
adc
std
sbb
jno
pushf
lret
mov
cmp
lret
push
shll
popa
jnp
cmc
push
shr
cmp
nop
outsb
sahf
mov
xor
sti
dec
inc
je
sub
mov
push
call
scas
dec
popa
inc
loop
mov
aam
mov
shlb
mov
mov
mov
pop
jg
loope
in
xchg
jecxz
mov
inc
mov
dec
outsb
std
fxch
lock
movsl
adc
push
xchg
ss
mov
je
sahf
cmpsl
iret
lret
xchg
rcr
mov
pop
ret
sbb
cmpsl
jmp
sbb
push
shlb
orb
adc
lret
cmp
inc
add
pop
nop
shll
rcrb
or
mov
daa
mov
lods
jne
add
mov
jns
fcomps
dec
push
pop
in
and
adc
leave
and
dec
lret
repz
idivl
adc
xchg
or
sbb
test
scas
shlb
cmp
loope
iret
cli
dec
jmp
sahf
cmp
lcall
push
loope
pop
mov
sbb
shlb
loopne
inc
lcall
mov
aad
dec
mov
dec
popf
hlt
cmp
pop
dec
mov
fists
loop
pop
shlb
dec
and
add
sahf
out
int
mov
xchg
adc
sbb
mov
das
xchg
loop
or
add
or
outsl
in
xchg
mov
decl
stos
cmp
jno
int3
mov
mov
cmc
and
loope
mov
in
dec
aam
inc
out
sbb
shrb
and
jp
dec
aaa
dec
push
loope
xor
pop
dec
aaa
cmp
ljmp
xor
scas
dec
mov
mov
mov
adc
or
icebp
cmpsl
rcll
pushf
mov
mov
into
adc
loop
jmp
pop
or
arpl
je
popf
mov
or
add
pop
push
jl
add
imul
or
ss
roll
cmc
mov
jge
sub
fistpll
out
adc
mov
or
std
bnd
addr16
mov
lsl
jns
pop
xor
stos
cmp
daa
in
rcrb
adc
clc
hlt
in
cli
jns
fidivrl
gs
insl
loop
xor
and
sbb
shl
nop
jnp
shrb
xchg
sbb
loop
cmp
xor
jne
jg
inc
stos
outsl
into
cmpb
ljmp
push
lods
pop
inc
ds
call
or
adc
dec
sti
aas
cmp
mov
mov
jp
arpl
adc
mov
jl
mov
pusha
mov
out
stc
in
lahf
lock
pop
hlt
dec
push
outsb
pop
push
in
shlb
push
shll
add
jbe
in
in
cmpsb
mov
push
jnp
pusha
sub
ret
pushf
cltd
ds
xchg
inc
mov
das
inc
sub
cmc
mov
mov
ret
in
jo
mov
into
call
and
fldcw
into
jnp
sbb
fistpl
or
sahf
out
lock
js
mov
fnstenv
fdivrs
xor
pop
pop
stc
scas
add
mov
and
fcoms
shlb
push
push
ffree
mov
mov
xchg
xchg
mull
jmp
shll
dec
or
adc
mov
mov
push
sub
xor
xchg
mov
cmp
jg
aad
adc
mov
adc
ret
jp
movsb
call
mov
mov
cmp
idivb
roll
mov
shll
fnstcw
push
add
scas
stc
fldenv
shlb
pop
data16
mov
or
dec
dec
fs
xlat
jecxz
sbb
lods
pop
xor
imul
lret
sbb
mov
cmpsl
adc
add
ds
and
lcall
jmp
add
and
mov
xchg
decb
xchg
rcll
inc
bound
aad
push
push
ds
nop
xorb
jl
test
xchg
push
cltd
leave
cmp
in
insb
mov
ja
call
fldcw
mov
sub
push
ja
stos
mull
sar
aam
fildl
adc
inc
enter
fwait
nop
insb
or
inc
sub
jae
cmc
stos
push
std
cmp
aaa
push
inc
mov
push
cmp
and
xor
std
push
push
cld
fimuls
inc
nop
xlat
push
in
mov
faddl
and
in
rorb
fimull
icebp
xchg
dec
add
dec
push
inc
jl
cmpsl
jmp
jg
pop
out
insl
fimull
lock
jl
bound
es
icebp
jbe
int
out
movsb
stos
inc
push
rcr
bnd
mov
inc
inc
fstpt
jbe
cmp
scas
or
ja
push
push
cli
jge
insl
cmp
je
pop
aaa
call
nop
out
or
stos
pop
lcall
or
test
insl
mov
pop
cltd
shlb
out
add
or
mov
pop
lahf
into
loope
into
stos
sub
enter
jg
fldt
ljmp
sbb
mov
cmp
mov
or
or
jmp
int
and
lea
xchg
mov
pop
or
mov
and
std
mov
popf
pop
inc
mov
std
sbb
repz
sbb
int3
mov
push
ret
aam
xchg
scas
sub
add
test
loope
and
mov
insl
adc
jg
jmp
lock
sbb
fsub
xchg
testb
add
cmp
pop
testb
cmpsb
mov
jnp
pusha
data16
jns
loop
into
movsb
test
pop
cli
ret
cmp
dec
cld
push
or
int
mov
xchg
pop
dec
mov
jmp
mov
adc
les
sbb
mov
and
add
pop
repz
enter
lock
jnp
sub
dec
push
aaa
push
jg
push
pushf
mov
stos
adc
or
and
aad
pop
icebp
es
mov
out
aas
aaa
bound
fimull
xchg
pop
jg
fbstp
sub
cmpsl
xor
ljmp
in
shr
insl
imul
sahf
dec
rcl
sbb
rclb
dec
movsl
inc
ja
js
pop
sub
lock
lods
cmp
or
mov
scas
xor
jmp
nop
mov
loop
or
dec
xor
mov
jmp
sbb
fiaddl
out
lods
in
imul
adcl
lcall
pop
std
push
and
mov
fwait
sub
fcmovu
aam
sti
enter
inc
cmpsl
out
dec
test
cmp
nop
dec
dec
int3
sub
or
sub
stc
mov
cltd
push
and
xchg
jnp
shrb
sbb
jo
mov
inc
xor
mov
xchg
mov
mov
pop
mov
shlb
js
scas
xor
shrb
inc
int3
and
dec
push
outsl
push
sbb
push
sub
add
mov
jge
ficoms
dec
mov
pop
fnstsw
cmc
leave
sub
in
push
push
faddl
cmp
sbb
sar
iret
cmp
rcrl
push
mov
stc
inc
cmp
jle
fstpt
mov
roll
xor
push
push
pop
fcom
and
mov
xor
fcoms
jl
aaa
ret
and
or
sbb
mov
incb
inc
roll
not
xchg
ficompl
jecxz
data16
add
incb
loopne
enter
add
int3
sti
popf
mov
mov
jecxz
outsl
lock
and
adc
sahf
aaa
call
or
xchg
inc
daa
popa
shlb
sti
xchg
dec
pushl
pop
xor
and
lea
in
xchg
aam
mov
push
mov
inc
imul
cmp
cld
cmp
lcall
fwait
in
jne
test
xor
movsb
dec
adc
mov
aam
lcall
add
je
ja
inc
mov
cmp
mov
lcall
je
mov
iret
mov
mov
jmp
ljmp
pop
add
loop
lods
and
xchg
mov
sub
or
pop
inc
cs
popf
pop
jb
pop
sbb
dec
xchg
sbb
jne
pop
in
cli
jb
mov
adc
add
cli
sbb
inc
sti
sbb
or
daa
cmp
aaa
add
lock
popa
xor
push
je
aaa
push
inc
mov
clc
jne
pop
lods
mov
cmp
orl
fldl
fwait
inc
sbbb
mov
pop
aaa
rol
push
popf
imul
mov
xchg
roll
pop
jmp
jmp
ss
lcall
lahf
dec
pop
repz
xor
cmp
fisubs
das
add
jne
push
shlb
cli
mov
ds
xlat
stos
sbb
dec
push
mov
mov
stc
adc
dec
mov
mov
mov
dec
push
push
mov
nop
dec
mov
jno
xlat
mov
add
dec
cmc
pop
mov
cmp
push
mov
je
jns
xlat
mov
movsl
dec
data16
inc
enter
sbb
dec
idiv
cmp
filds
mov
cmp
sbb
cmc
mov
push
in
xchg
pop
inc
inc
xchg
pop
mov
not
imul
inc
cmpsl
test
pop
enter
shr
hlt
jecxz
cltd
stos
fists
lret
fisttps
sbb
lret
add
xor
add
xor
xor
bound
mov
or
push
inc
mov
mov
pusha
add
inc
out
mov
outsl
lea
lock
cmp
mov
cmc
les
ljmp
iret
sub
fsubrp
add
and
fisubrl
ss
in
arpl
fistpl
icebp
cmp
shrl
test
dec
cmpsl
jb
cmpsb
loop
vpshlw
jecxz
push
push
sub
scas
pop
enter
cmp
pop
mov
and
loopne
daa
jo
out
lret
adc
out
repz
mov
aam
fsubl
pop
lret
arpl
and
mov
insb
scas
pop
loop
cmpsb
sub
mov
cmp
rorl
mov
jp
lock
fisubs
adc
xlat
fbld
pop
hlt
das
les
in
test
jno,pn
nop
mov
inc
cmpsb
loope
or
jbe
nop
cmp
movsl
je
push
inc
lret
into
shrl
or
fisubl
sar
mov
mov
adc
sahf
mov
and
push
or
stos
cwtd
subb
mov
mov
fildl
add
loope
pop
mov
jecxz
out
arpl
fildll
test
test
ss
loopne
push
push
ss
gs
in
cmpsl
mov
outsb
adc
dec
rcrl
std
pop
dec
pop
pop
div
and
loop
fisubrl
xchg
xor
xchg
shll
mov
shlb
addr16
outsb
call
imul
ljmp
movsb
sbb
mov
xchg
adc
mov
sub
ret
pusha
ret
clc
outsl
jmp
xor
lds
shlb
cwtl
push
cmp
sub
xlat
loop
jne
addl
aam
cmp
dec
adc
pop
stos
out
xchg
jae
add
or
cmp
fwait
in
dec
push
insb
cmpsl
add
push
subl
and
xchg
xchg
enter
pop
mov
or
stos
aas
out
lods
mov
out
xor
jle
push
sbb
jp
mov
mov
push
jle
ja
gs
pop
fistps
inc
mov
and
rclb
dec
cwtl
subl
mov
enter
mov
mov
push
dec
fimuls
loope
dec
fs
clc
clc
pop
mov
stc
jge
mov
mov
sbb
sbb
jae
adc
add
xchg
push
or
ss
and
cmp
mov
jb
test
mov
mov
push
aaa
lds
inc
out
hlt
stc
pop
and
and
adc
push
rcrl
fisubrs
insb
jmp
sahf
pop
mov
lret
clc
cld
and
test
sbb
sub
cld
ja
push
sub
adc
add
add
dec
add
cmpsb
xor
aam
ss
jbe
in
pop
sbb
ljmp
sub
jecxz
ret
sbb
sub
cs
mov
add
pop
jg
cltd
jle
lret
sub
and
sub
shrb
out
push
mov
clc
sub
cmp
pop
dec
in
and
cwtl
jae
push
mov
out
sti
cmpsl
xchg
mov
rcl
aaa
xor
ljmp
push
cmp
sti
xlat
test
pusha
int3
ret
sbb
inc
in
iret
mov
mov
inc
push
jg
cmp
in
test
in
pop
xor
cmp
cmp
mov
sbb
je
aaa
xchg
pusha
orb
leave
in
sbbl
movsb
fimuls
cld
data16
jns
mov
lods
out
or
fwait
movsl
xchg
jmp
jns
adc
or
xchg
or
or
mov
repnz
test
jae
jbe
in
inc
outsb
push
loopne
inc
pusha
loope
rclb
cmp
shlb
inc
and
dec
call
lret
ljmp
xor
add
xchg
mov
popa
popa
jne
push
xor
scas
sahf
sbb
dec
inc
fsubl
gs
cmp
pop
test
dec
clc
cmp
aaa
or
data16
xor
in
jg
dec
push
xchg
mov
std
fcoml
dec
lea
scas
dec
cs
prefetch
pop
mov
sub
add
and
faddl
shlb
mov
orl
cmp
jno
sub
add
loope
jbe
mov
xor
leave
xor
cmovge
in
out
sub
cmp
js
shlb
repnz
xchg
pop
jbe
pop
push
sbb
cmp
inc
inc
cmpsl
sbb
add
dec
push
pop
dec
dec
rclb
bound
mov
mov
or
cmpsb
xor
inc
shrl
jnp
inc
stos
int3
dec
add
mov
fists
dec
mov
jo,pt
push
and
xlat
sbb
cli
sahf
push
push
jg
inc
outsb
lods
or
enter
jecxz
clc
mov
dec
lea
cwtl
mov
pop
jp
outsl
xchg
push
lods
imul
sbb
iret
sbb
mov
imul
push
lods
cmc
pop
aas
nop
int
mov
clc
scas
mov
fstl
es
xchg
xchg
jecxz
and
test
inc
jb
jns
xchg
cmp
mov
and
cmp
xlat
push
xchg
lret
insl
sub
lcall
and
das
mov
sub
dec
pop
inc
dec
fs
xchg
mov
xchg
sbb
popf
pop
and
stos
icebp
mov
sbb
xchg
mov
lahf
out
test
pushf
jmp
movl
cmp
ds
adc
mov
out
sub
push
sub
inc
add
leave
sbb
std
inc
cmp
lcall
dec
fldl
xor
fnstcw
notl
lea
movsb
pop
push
fisubs
lret
or
jecxz
in
movl
pop
jb
push
add
sahf
pop
pop
and
test
xchg
addr16
dec
rolb
mov
push
rolb
dec
leave
cmp
jmp
lahf
in
jnp
jae
sub
mov
mov
jle
pop
daa
adc
xor
sahf
sbb
mov
cmpsl
xchg
ret
mov
pop
cs
xchg
in
loop
and
sbb
mov
outsl
orb
and
dec
popa
loope
subb
or
jo
fidivrs
mov
fistl
sahf
ror
cmp
sbb
mov
mov
data16
arpl
pop
sti
cmp
dec
repnz
adc
xchg
test
push
xor
fisubl
std
arpl
sub
jno
fsubr
push
cli
add
enter
push
and
aam
adc
add
jo
dec
or
sahf
push
mov
pop
or
not
mov
icebp
xchg
cld
adc
lea
pop
fcomps
xchg
test
add
xor
adc
fiadds
aam
out
mov
push
push
jl
dec
movl
addr16
xchg
inc
jbe
and
mov
vmread
repz
fcmovb
push
push
add
outsb
outsb
xchg
testl
inc
dec
add
xchg
aas
ds
jbe
sbb
or
popf
outsb
xor
mov
stos
xor
xchg
fcompl
hlt
pop
mov
jns
push
mov
fisttps
push
cld
jnp
adc
imul
lret
mov
das
imul
pop
push
loop
mov
psrlq
dec
clc
scas
dec
inc
ds
leave
xchg
cld
pushf
lods
sub
mov
lock
les
stos
fistl
and
out
roll
mov
les
mov
mov
xchg
dec
test
cli
or
outsb
adc
mov
in
or
icebp
outsl
mov
les
or
loopne
lahf
nop
imul
push
ljmp
mov
pop
cmp
adc
repz
lods
call
xor
xchg
xor
lods
sti
xchg
mov
adc
adc
xchg
mov
and
jne
fdivp
lock
fisubs
aas
je
repnz
popf
jae
xchg
in
test
out
ljmpw
fs
mov
mov
fs
daa
jp
in
mov
xlat
pushf
fistl
push
cwtl
mov
mov
daa
and
or
mov
dec
dec
and
adc
and
inc
add
mov
subl
cmp
xor
not
and
pop
dec
out
mov
jb
xchg
nop
add
mov
ljmp
insl
loope
loop
sub
xor
data16
pop
adc
inc
cmpsl
inc
dec
addr16
lods
sbb
fmuls
push
mov
daa
filds
adcb
adc
rol
adc
leave
lds
nop
subl
inc
int3
mov
test
lods
sbb
mov
out
push
or
in
mov
rcll
sahf
hlt
sub
mov
xor
or
orl
out
inc
add
push
hlt
push
jecxz
popf
or
mov
xchg
mov
pop
insl
and
cmp
mov
inc
lea
push
aad
jae
xor
sbb
stc
jg
xchg
mov
jno
and
dec
bound
cld
xchg
hlt
xchg
xor
push
dec
iret
xchg
mov
int3
cmp
sahf
or
stos
dec
fildl
imul
cmp
loope
dec
cs
pop
ror
stos
push
sbb
mov
xchg
and
mov
rorb
or
add
dec
adc
xor
cltd
fsubs
ret
add
mov
dec
xor
sarb
out
jle
adc
andb
scas
stc
or
push
mov
jb
push
mov
and
outsb
sahf
push
jp
dec
mov
movsl
mov
call
dec
or
gs
daa
and
jb
cwtl
mov
in
sub
push
dec
mov
pop
push
sbb
xchg
cmp
loopne
call
pop
ja
add
jbe
lock
dec
into
daa
into
stos
push
scas
xor
mov
dec
jbe
adc
loopne
insb
ret
push
loop
loope
inc
lods
xchg
xor
cwtl
inc
adc
loope
xchg
das
dec
outsl
test
sub
xchg
adc
or
shrl
inc
loope
fs
out
jle
gs
lret
arpl
sar
xchg
or
jne
es
pop
cmp
jecxz
adc
mov
aas
push
call
insl
cltd
movsl
or
sbb
fwait
dec
cltd
mov
mov
push
mov
mov
lret
test
inc
sub
hlt
sbb
jbe
cmp
mov
add
lahf
dec
je
inc
ficoml
and
xor
int
mov
dec
pop
test
mov
popaw
pop
mov
orb
mov
gs
fistpl
fucomip
jle
arpl
ljmp
and
push
pusha
jge
jmp
or
clc
mov
or
mov
les
xchg
aaa
hlt
mov
fstpl
jne
ljmp
mov
add
jae
leave
mov
cmpxchg8b
jp
mov
jle
push
and
or
orb
jmp
dec
ds
icebp
push
mov
notb
enter
sub
jns
jae
scas
in
xchg
xor
clc
pop
lods
mov
lahf
mov
loopne
push
cs
movsb
aad
repz
pop
testb
jge
inc
mov
in
push
push
xchg
fmuls
jl
sar
fucomi
adcb
cltd
or
mov
pop
push
repz
push
mov
jle
push
scas
daa
es
fcoms
dec
aam
icebp
mov
jmp
adc
dec
inc
mov
outsb
test
insb
add
ds
in
in
pop
lods
test
push
dec
js
push
scas
dec
cs
push
sub
subb
popa
xchg
es
or
sti
jp
push
dec
push
sbb
fwait
inc
andl
orb
xchg
stc
stos
aam
in
lock
sub
andl
movsl
push
inc
mov
mov
add
and
jmp
cmpsb
pop
jl
push
and
mov
scas
jg
mov
sub
aaa
cmp
in
ret
sub
fcoms
cld
dec
negl
jbe
in
mov
lods
inc
dec
cmp
lods
nop
jg
xor
fucomip
insb
mov
pushf
dec
imul
jg
add
gs
jno
or
out
sarl
gs
outsl
lcall
js
cmpsl
pop
xchg
lds
jb
xchg
decb
sbb
inc
out
loop
xchg
adc
sub
imul
fwait
mov
seto
pop
inc
xchg
sub
mov
mov
daa
jecxz
dec
mov
sbb
in
cs
mov
sbb
xchg
gs
mov
pop
in
test
or
jmp
and
outsb
mov
xchg
push
jns,pn
mov
add
sub
mov
sub
leave
aaa
add
repnz
jb
inc
mov
cltd
adc
fnstcw
mov
mov
mov
fbstp
fldl
adc
mov
cs
cld
inc
mov
lds
push
add
and
out
js
dec
inc
cmp
repnz
in
repnz
shrb
add
mov
sub
inc
scas
test
dec
pop
clc
int
dec
dec
adc
pop
inc
aam
push
shl
or
xchg
jecxz
faddl
add
push
shrl
cwtl
call
ret
add
jle
dec
inc
addr16
or
xchg
mov
add
sti
pop
mov
mov
insl
dec
js
pop
xchg
insl
nop
test
lahf
mov
or
ret
or
fidivs
sar
hlt
imul
jge
mov
hlt
outsl
dec
mov
jp
dec
inc
and
mov
lods
xor
xchg
pop
out
xchg
pop
push
xlat
stos
push
orl
movsb
sub
and
mov
stos
mov
mov
icebp
adc
sub
push
cli
push
jmp
pusha
or
or
sahf
dec
xor
jl
jno
mov
fildl
in
nop
push
sub
ja
mov
test
mov
push
inc
xor
inc
shrb
adc
mov
std
adc
scas
popf
xchg
in
pop
fnstcw
cmpsl
jnp
mov
adc
add
rorl
jge
mov
loope
std
dec
mov
js
push
cltd
add
xchg
add
fcmovnb
cwtl
add
pop
fildll
mov
xor
jmp
out
fs
or
pusha
pop
push
push
out
push
call
and
dec
pop
aad
or
jnp
sub
daa
shlb
mov
aam
mov
fwait
fs
push
inc
dec
dec
xlat
sub
incb
daa
or
rolb
dec
sti
fstpt
mov
leave
aaa
fdivs
lcall
or
jne
pop
adc
push
push
dec
push
sbb
cmp
movsb
test
lret
pop
lock
mov
pop
test
ficoml
lret
lds
push
push
sbb
push
stc
cmp
out
movsl
scas
inc
mov
mov
out
jp
add
lods
cmp
fsubl
xchg
xchg
jb,pt
sbb
loopne
js
enter
or
sub
pop
jge
xor
adc
std
movsl
cmp
pop
outsb
inc
push
movsb
lds
popf
mov
mov
addr16
xor
pop
lret
hlt
add
sub
add
pop
insb
pop
ror
cmp
pop
lods
rcl
mov
inc
pop
xlat
add
cmp
imul
mov
xor
inc
mov
sub
orl
shl
xor
out
push
ds
cmc
mov
mov
cmp
dec
lock
push
mov
xor
or
mov
mov
repz
push
loopne
and
out
outsb
mov
add
shll
inc
cmp
hlt
jb
cwtl
mov
mov
incb
xchg
pop
das
sbb
hlt
sub
push
imul
jl
call
xchg
loope
hlt
jb
daa
jne
loopne
int3
test
pop
xor
in
enter
das
pop
lret
push
sbb
inc
insb
dec
scas
cmp
inc
sbb
cmp
sbb
into
pop
movsl
lods
notl
jg
mov
fs
inc
lds
imul
mov
test
nop
out
mov
and
sub
sti
adc
xchg
xor
cltd
push
lds
sahf
ficompl
jg
repnz
fnstsw
adc
and
fimull
ja
sbb
clc
inc
add
loopne
pop
jp
dec
sub
cmp
xor
ljmp
sub
mov
adc
sysret
aas
and
rcl
sbb
jmp
ret
ljmp
sbb
ret
test
lcall
xchg
test
std
lret
dec
loopne
dec
sahf
xchg
es
cli
ss
imul
jp,pn
aaa
pop
push
ja
cmp
inc
mov
shr
mov
xor
sbb
cmp
shll
arpl
movsl
nop
mov
stc
and
dec
push
xchg
and
inc
xor
xchg
mov
aas
pushf
orl
ja
rolb
mov
cmp
mov
jbe
xor
loop
push
push
out
mov
aad
fcomps
leave
into
incl
jl
mov
cmp
mov
scas
mov
push
std
loope
mov
in
adc
movsb
mov
xor
push
lret
xlat
adc
sarb
insl
pusha
push
sub
arpl
sahf
cmp
jbe
xor
bound
xchg
dec
sbb
je
fisubl
dec
pushf
test
adc
pop
daa
bswap
cltd
fildll
mov
cmp
sqrtps
mov
mov
stos
scas
sub
fstpt
add
sti
scas
inc
dec
xchg
mov
push
and
push
rcrl
xor
ret
pop
jb
adc
enter
insl
pop
sub
outsl
imul
mov
shl
dec
push
sti
mov
xchg
inc
js
dec
fbld
mov
adc
movsl
xor
cli
imul
push
jmp
fnsave
sbb
das
sub
pop
icebp
in
ret
xchg
fiadds
cs
and
jno
call
sbb
imul
dec
push
cmp
jge
sbb
inc
pop
jae
ds
push
loopne
test
out
dec
push
pop
cmc
xor
in
adc
and
jns
pop
adc
loop
insb
cli
leave
ljmp
popa
rcrl
ss
lds
testb
clc
inc
xchg
stos
pop
or
mov
ja
cmp
xor
jp
das
fucomip
add
xchg
cmp
sysexit
lock
negb
jmp
popa
pop
rcll
add
dec
call
ja
inc
mov
lcall
aas
iret
pop
idiv
in
pop
pop
cmc
ds
enter
mov
adc
push
or
dec
int3
push
xchg
fs
mov
sarl
jne
jp
mov
or
pop
jnp,pn
inc
out
jecxz
and
dec
push
push
xchg
xor
xchg
sbb
push
aam
xor
cmp
cmpsb
mov
pop
lret
cwtl
stos
push
cmp
dec
mov
out
mov
shrl
in
rcl
or
pop
nopl
inc
push
imul
jae
pop
sbb
shrb
das
jo
aas
mov
cmpsb
adc
add
xor
sub
jecxz
sbb
cltd
rcrl
dec
or
mov
in
push
mov
pop
adc
or
fwait
push
push
adc
sub
imul
xchg
je
gs
aam
loopne
popa
loop
mov
lds
and
repz
test
iret
mov
add
mov
push
push
and
stos
ja
cmp
loope
add
push
insb
adc
cmp
jge
das
lods
sahf
imul
arpl
jg
hlt
ss
js
out
lock
and
add
jl
loopne
ficompl
push
or
sub
subb
jbe
nop
jne
cmpsl
adc
pop
icebp
clts
fldl
dec
inc
jl
or
mov
add
dec
mov
push
insb
aad
push
dec
and
jnp
movsl
xchg
pop
adc
xchg
pop
mov
lods
cmpsl
rorb
mov
stos
xor
and
mov
sbb
mov
lods
jo
sarb
ret
push
or
testb
decl
jno
inc
adc
jmp
in
dec
ror
fwait
pusha
aaa
push
mov
call
test
dec
dec
arpl
jg
aam
add
mov
mov
test
cmp
mov
xchg
xsaves
mov
ss
scas
dec
sub
inc
jle
cmp
fsts
adcl
or
test
inc
jbe
shlb
push
jg
sbb
push
pop
pop
inc
pop
pop
popf
inc
adc
jbe
cmp
aam
push
dec
add
xor
daa
or
or
out
cmp
adcl
mov
add
hlt
dec
mov
cmp
iret
les
test
lret
xor
mov
jmp
daa
adc
push
out
stc
xchg
aas
jg
sbbb
fistps
iret
cmpsl
fisubrs
inc
sbb
push
fwait
cmpsl
mov
sub
repz
mov
cmpsb
popa
mov
jmp
mov
mov
mov
dec
xorl
mov
inc
cmp
and
repz
mov
shr
dec
push
mov
mov
loope
out
cs
mov
ds
push
inc
mov
and
jns
cmp
jp
fisttps
mov
mov
mov
mov
call
cmc
cltd
pop
outsb
popa
mov
movsb
ret
mov
lahf
sbb
mov
mov
divl
fistpl
repnz
ficoml
add
fildll
mov
icebp
jae
cmpsb
adc
movl
cld
rcrl
in
cld
push
fwait
dec
jmp
mov
add
jnp
loopne
dec
outsb
icebp
push
pop
data16
pop
adc
sarb
cmp
xor
fisttps
arpl
jp
sbb
rorl
scas
xor
dec
ss
test
jmp
mov
mov
xchg
sub
js
xchg
jmp
lds
movsl
mov
mov
xchg
sbb
out
jb
lret
ljmp
es
movsb
cmp
pop
lods
gs
push
subl
xchg
aaa
cmp
insb
xchg
adc
sub
mov
and
xchg
mov
repnz
lret
push
fistpl
lea
iret
arpl
inc
out
mov
jbe
fcomp
lock
insl
cli
push
or
scas
out
pop
fwait
loopne
bound
insb
adc
jecxz
cmp
and
imul
mov
mov
sbb
mov
ret
mov
scas
fs
lods
iret
jl
out
mov
inc
fcompl
fsubr
mov
int3
push
jge
stos
cwtl
dec
addr16
aaa
loop
stos
arpl
push
and
pusha
and
inc
cmp
mov
int3
enter
pushf
out
jl
dec
hlt
ss
js
add
pop
addr16
ficomps
sbb
add
outsl
inc
ds
scas
pusha
push
sbb
loope
mov
and
aaa
pop
jbe
xchg
mov
adc
fistps
cmpsl
add
lahf
cltd
dec
adc
imul
aaa
shlb
push
mov
in
incb
mov
mov
and
popf
insl
mov
ss
mov
mov
in
pop
push
dec
scas
sub
adc
xchg
lret
push
int
cmp
imul
test
mov
jbe
jecxz
inc
inc
push
dec
insl
sahf
imul
fdivr
pop
add
imul
cltd
insb
xor
addr16
adc
push
mov
mov
stc
jg
jmp
inc
aas
dec
cmp
xor
jl
vpunpckldq
rcll
rcr
jae
jl
and
repnz
or
jp
fisubs
sbb
push
cmpsl
xor
mov
mov
lret
lods
dec
ja
int
lds
pop
inc
jno
clc
xchg
imul
mov
mov
push
test
fldcw
and
and
mov
in
cltd
xchg
xor
or
xor
cwtl
mov
push
mov
push
bound
arpl
js
testb
ret
jo
repnz
pushf
jmp
cli
xor
inc
gs
cmp
cmp
xchg
movsb
icebp
lahf
in
add
xor
popa
cmp
lahf
add
enter
repz
js
movsb
movsl
hlt
ljmp
in
test
nop
ss
dec
lock
icebp
fwait
sbb
jg
mov
sti
mov
stos
mov
jb
je
push
test
fdivp
or
mov
cmpsl
outsl
pushw
mov
push
cs
inc
loopne
daa
jle
ljmp
xlat
xor
sti
add
jg
push
imul
out
jb
jae
cmp
test
jne
xchg
test
cltd
fcomip
xlat
popf
adc
add
mov
mov
jbe
or
push
xchg
mov
fists
jmp
jmp
call
das
adc
call
jmp
mov
mov
lea
pop
dec
or
sbb
test
jnp
cmp
int3
fnstsw
push
frndint
jbe
popf
andb
fisubs
outsb
stc
pop
jns
loop
popfw
and
mov
add
stos
and
add
sub
ja
dec
in
dec
push
fldt
iret
fwait
outsl
mov
cmp
cmpsb
hlt
push
sbb
leave
movsb
jecxz
shll
leave
shrl
cmp
mov
lds
push
aad
cmp
mov
mov
inc
cmp
or
push
push
sar
jmp
mov
hlt
jle
insl
in
subl
inc
negl
mov
pop
scas
xchg
popf
pop
jmp
pop
lret
bound
stos
into
mov
lea
out
stos
mov
sub
sub
mov
cmpsl
daa
xor
ljmp
pop
pusha
inc
pop
jnp
jo
into
jne
jge
clc
pop
mov
push
xchg
aas
cmp
es
push
jmp
xor
aaa
mov
adc
inc
xchg
dec
or
jbe
data16
add
push
jo
cmpsl
ljmp
adc
push
adc
nop
out
jmp
clc
pop
xor
or
lea
sahf
mov
xor
sub
insl
aaa
pop
arpl
add
gs
pop
jo
popfw
pop
call
cmpsl
lds
xchg
pop
lahf
jmp
and
add
sbb
arpl
sbb
fs
popa
ret
testl
fwait
mov
dec
in
cmp
pushl
les
xchg
mov
leave
lea
aas
xchg
mov
sti
add
lcall
les
sub
mov
dec
scas
and
pushf
les
lret
push
sbb
cmpl
ficomps
outsl
jnp
sbb
popa
call
outsb
xlat
pop
mov
cmpsl
sarl
mov
nop
daa
inc
jl
jge
pop
loopne
xor
pop
or
outsl
icebp
xchg
mov
xor
ret
mov
xor
jecxz
xchg
movsb
insb
fistps
leave
mov
or
ljmp
pusha
mov
mov
sbb
dec
test
and
mov
jg
addr16
mov
jge
pop
push
lcall
fdivrl
xchg
dec
jl
pop
pop
out
std
loop
fdiv
or
fnstenv
gs
xchg
in
lcall
sahf
test
dec
addr16
cmpsl
add
test
outsb
or
sbbb
popf
out
sub
mov
inc
sub
xor
int
nop
jae
xchg
dec
insl
packssdw
push
daa
ret
push
andb
jecxz
push
decb
popa
mov
pop
adc
out
cmc
scas
mov
cmpsl
jge
jbe
lods
outsb
fldenv
test
lock
xchg
movsl
or
aam
mov
fidivl
movsl
mov
test
cmp
mov
pushf
xor
movd
fidivl
loop
mov
addr16
cmp
in
fwait
or
adc
int3
cltd
daa
add
cltd
es
bound
xor
mov
push
cmp
sahf
lret
stos
lock
repz
add
mov
lds
movsl
out
iret
lahf
cmp
aaa
mov
mov
movsb
es
adc
dec
hlt
and
add
stc
adc
inc
out
lock
into
xor
sub
pop
imul
icebp
mov
or
push
stos
cmp
ljmp
out
sbb
sub
jecxz
movsb
sub
pop
and
in
inc
iret
mov
jp
add
in
dec
xor
adc
mov
mov
ljmp
inc
cwtl
and
scas
xchg
inc
ss
jae
in
mov
ret
loopne
adc
push
jnp
fstpl
ja
repnz
cmp
jns
cmp
test
add
scas
dec
scas
sbb
sub
push
into
mov
sbb
movsb
aam
sarb
xchg
pop
mov
mov
add
mov
xor
in
sbb
inc
xchg
scas
scas
addr16
sub
outsl
adc
push
test
nop
lcall
jl
sbb
aam
jp
stos
in
in
pop
ret
jle
sub
iret
mov
mov
incl
enter
popl
pusha
pop
jp
xor
sbb
in
pop
adc
jmp
sub
push
scas
sahf
sarl
pushf
jb
fmulp
jne
leave
mov
cmp
jge
stc
adc
sub
push
daa
dec
std
xchg
jmp
dec
fistpl
or
mov
dec
and
cld
xorb
and
jbe
test
scas
and
loopne
mov
sub
testb
addr16
jb
rolb
sub
pop
bswap
sbb
lods
sub
lret
sbb
and
mov
add
mov
loope
jl
or
mov
icebp
outsb
mov
xchg
cmp
outsl
ds
mov
dec
xor
add
dec
dec
popa
xor
push
inc
lock
sub
jo
jae
sub
lcall
dec
aam
adc
imul
out
movsl
inc
mov
in
pusha
mov
std
insb
in
cmpsb
cmpsb
sub
dec
pushf
ss
in
push
gs
inc
or
mov
fbld
cmp
scas
pop
cmc
bound
out
xchg
test
orl
mov
repz
adc
andb
push
inc
in
and
pop
push
xchg
popf
lock
daa
xor
repnz
jmp
fwait
adcb
mov
xor
cmp
hlt
cltd
or
inc
loop
inc
into
cmpsl
push
jle
testb
cmp
jg
and
jbe
or
xchg
pop
repnz
pop
mov
mov
dec
out
xchg
mov
hlt
std
sbb
jno
pop
into
jmp
aaa
cwtl
fs
in
mov
mov
push
sbb
adc
add
pop
notl
aad
fisubs
nop
pusha
inc
jns
pop
adc
dec
or
pop
xchg
xor
xor
pop
ja
inc
insl
pop
faddl
inc
push
and
aad
sub
push
out
sub
adc
into
aam
add
repnz
gs
pushw
or
mov
nop
call
push
jns
ret
nop
jle
cmp
loope
xor
jo
bound
cld
inc
in
sahf
outsl
fidivs
mov
hlt
cmp
out
mov
dec
or
lock
add
and
pop
stc
js
scas
inc
rol
pop
sbb
int3
adc
imul
out
cltd
fnstenv
clc
adc
daa
inc
repnz
hlt
enter
daa
popa
dec
cmpsb
pop
es
mov
push
cwtl
js
out
stos
xchg
ljmp
out
jo
push
add
pop
out
push
enter
sub
int
xor
imul
push
std
cwtl
mov
cmpsb
push
dec
sub
push
sbb
or
dec
gs
mov
aam
scas
lahf
gs
icebp
sub
mov
xchg
les
fisubrs
ss
inc
repnz
pop
fwait
xor
out
jo
adc
in
jg
imul
sub
dec
nop
aam
jp
stc
lock
shrd
daa
adc
mov
pop
inc
and
dec
sbbl
cld
pushf
adc
int3
daa
pop
pop
in
movsb
icebp
jl
in
fbstp
fcomps
xor
adc
sbb
lret
sub
xlat
or
pop
sti
mov
std
push
imul
mov
ret
mov
jae
inc
call
outsl
ret
push
fs
les
sub
cmpsl
xchg
arpl
xchg
cmp
and
and
pop
sbb
dec
subb
test
fistpl
sbb
xor
in
daa
pop
mov
cld
aaa
fdivr
and
fucomip
xlat
adc
sahf
sub
aam
jne
mov
mov
push
inc
clc
jne
pop
and
addr16
cltd
cmp
mov
push
ret
and
cltd
roll
lods
stos
fildll
adc
repz
rcrl
mov
mov
and
andl
cmp
adc
out
clc
mov
fiaddl
jae
or
shrb
movsl
int3
push
dec
push
mov
daa
pop
mov
daa
push
clc
lret
rdpmc
pop
movsl
jo
jb
push
insl
ljmp
imul
adc
jnp
ljmp
mov
shrl
mov
mov
pop
pop
popf
sub
add
add
xor
mov
dec
inc
sub
fsts
mov
cmpb
lock
je
pop
mov
xor
cli
pop
mov
inc
dec
dec
add
and
and
sub
jno
loopne
xlat
adc
xchg
adc
mov
dec
xor
push
shrb
lcall
ficoms
fsubr
mov
mov
test
lret
sub
mov
inc
sbb
movsb
sub
dec
mov
jbe
cld
fwait
push
loope
and
repz
pop
xchg
in
sub
fistps
lods
cltd
dec
iret
fcompl
xor
js
mov
sahf
mov
xchg
mov
jle
dec
pop
imul
dec
sub
sbb
xchg
push
insb
fstps
dec
push
cmp
insb
pop
notl
add
rcrb
inc
dec
out
sbb
xchg
call
mov
fwait
shrd
dec
int3
inc
add
dec
aad
loopne
orb
ljmp
shr
daa
pushf
or
out
fs
or
out
shrl
setl
sbb
push
push
xorb
fstpt
xor
xor
insb
scas
lcall
lret
inc
add
fiaddl
or
test
adc
icebp
adc
pushf
xchg
dec
stos
lods
ret
ljmp
mov
sti
and
xor
xchg
test
pop
xor
mov
lret
or
test
mov
dec
stos
test
mov
les
js
aaa
cmpb
mov
push
mov
mov
hlt
xchg
xor
sub
dec
in
insb
outsb
test
jmp
fucomip
mov
inc
dec
sbb
fwait
pop
inc
scas
sahf
jmp
shll
push
fwait
ljmp
mov
dec
inc
mov
mov
mov
xor
in
lock
mov
mov
push
dec
pop
adc
roll
test
jmp
jnp
sbb
xchg
popa
xor
dec
in
popa
mov
xor
add
sub
bound
mov
push
ljmp
out
dec
jns
shlb
mov
mov
loop
inc
aam
adc
xor
pop
jnp
jnp
imul
lret
xor
inc
add
icebp
cmp
dec
out
pop
jb
mov
mov
lods
cltd
nop
and
dec
pop
inc
insb
cmc
xchg
push
shl
popf
pop
or
out
dec
adc
pop
lret
fwait
or
lds
jmp
out
leave
inc
ja
fdivrs
add
xchg
aas
pop
jp
inc
les
pop
pop
sub
insb
mov
ds
aam
out
testb
pop
sbb
inc
idiv
add
pop
mov
mov
ret
ljmp
iret
add
andb
xorl
sub
in
or
or
and
pop
data16
inc
cmp
lahf
or
and
pop
addr16
inc
push
insl
scas
outsl
fcomip
stos
stc
mov
dec
pop
pop
pop
clc
popa
decb
ss
xchg
mov
sbb
sarb
xchg
test
mov
shr
pop
or
cwtl
sbb
mov
lahf
in
jne
repnz
cmpsb
or
mov
fidivl
std
sub
arpl
cmpsb
loope
xchg
add
stos
pop
cmp
stos
mov
fs
jno
out
stos
js
ds
lock
push
aam
insl
les
xchg
stc
fiadds
xor
jmp
add
jle
xor
out
dec
clc
mov
lret
and
jbe
inc
push
enter
jmp
dec
fisttpl
or
icebp
pop
xor
add
call
std
fimull
mov
loop
insl
mov
test
out
mov
mov
shlb
int
lcall
sbb
jecxz
cmp
xlat
insl
cs
jbe
test
inc
lods
mov
ret
pop
loopne
xchg
orl
sub
aas
mov
xor
xchg
mov
daa
out
ss
cltd
movsb
pop
mov
inc
jae
idivb
test
mov
ret
and
insb
lret
stos
cmpsb
scas
ret
xor
shlb
cltd
es
cmp
lcall
jmp
dec
add
mov
shll
fists
cmp
lret
imul
mov
mov
hlt
enter
jnp
and
icebp
xchg
aas
and
shll
add
inc
cltd
sub
sbb
mov
pop
das
mov
mov
mov
daa
addr16
inc
imul
iret
adc
ja
mov
movsl
ret
mov
mov
leave
aas
fistpl
daa
mov
mov
fsubrs
xor
lret
jle
fildll
mov
movsl
aam
in
push
sti
dec
fsubr
dec
add
bound
scas
mov
movsl
popf
mov
or
jbe
popa
sub
imul
jg
fwait
push
fcoms
jmp
int
popa
add
pop
dec
dec
icebp
xchg
in
add
dec
dec
divl
push
ficoml
jne
cltd
push
pop
mov
sub
pop
or
movsb
inc
das
xchg
test
in
push
ret
dec
jne
jecxz
mov
jg
and
mov
lock
pushf
xor
pop
faddp
add
inc
call
jne
or
xchg
xchg
arpl
mov
mov
cmp
inc
hlt
imul
in
push
fisubl
ja
and
jns
mov
aam
cmp
sub
adc
jno
or
ss
mov
insb
lahf
jmp
or
dec
jmp
out
js
in
popf
add
mov
imul
dec
xchg
adc
or
cmp
fsts
test
inc
add
lds
pop
push
inc
or
jl
add
mov
adc
mov
push
movsl
mov
loopne
orb
jl
jbe
or
in
loope
aaa
mov
mov
jo
adc
nop
cmpsl
push
dec
clc
xchg
clc
sub
call
fs
cmpsl
sbb
in
clc
jno
and
push
pop
sar
inc
pop
jo
mov
pop
jae
iret
sub
add
clc
and
mov
jl
rcrl
jmp
into
test
cmp
mov
push
inc
and
mov
cmp
xchg
dec
push
and
mov
cmp
push
push
mov
sbb
sti
xlat
push
inc
inc
sarl
fmull
or
and
adc
mov
imul
arpl
dec
sub
icebp
xor
js
jl
fldcw
pop
xor
iret
push
adc
jl
dec
jecxz
mov
in
mov
mov
xor
adc
lahf
pop
jecxz
fs
push
and
jmp
adc
pop
push
std
ss
ss
xchg
jg
mull
into
pop
lock
lock
test
dec
addr16
push
mov
mov
add
sbb
fsubp
cmp
mov
push
add
in
clc
and
cld
cltd
nop
sbb
and
adc
mov
jae
cmc
pop
dec
es
sub
lahf
sbb
scas
ljmp
lret
cmp
stos
or
jg
mov
or
xchg
adc
cmc
push
sbb
daa
inc
jmp
gs
ret
lret
cmp
push
and
mov
and
adcb
mov
insb
xor
repz
cmp
sub
push
and
pop
xor
in
xchg
mov
out
test
scas
test
adc
outsb
push
outsb
jne
cltd
aad
adcb
fwait
dec
and
mov
scas
pop
ret
test
cwtl
es
cmp
cmpsl
pop
mov
int3
adc
dec
jg
lcall
hlt
pop
xor
dec
rol
pusha
mov
test
push
jae
push
mov
xor
sbb
divb
gs
loopne
pop
or
shlb
ds
sysret
gs
ss
sbb
je
sub
cmp
xchg
mov
pop
push
mov
jno
out
ds
sbb
push
inc
int3
xor
outsl
sbb
mov
in
imul
sbb
out
arpl
inc
shll
cmp
dec
fs
sub
jae
xchg
scas
xchg
xor
mov
stc
int
rol
cmp
leave
std
lahf
push
inc
aaa
lods
pop
lds
movsb
dec
pop
push
aad
test
jmp
sbb
pusha
inc
mov
jb
push
push
test
sarl
or
cmp
add
dec
or
insb
inc
xor
movsl
xor
xor
xor
insb
cltd
fmul
xor
lcall
outsb
adc
mov
mov
pop
enter
and
mov
pop
imul
lods
push
xor
les
stc
xchg
mov
lds
jns
enter
aaa
cmpsb
popa
sbb
pop
mov
gs
popa
and
test
mov
jno
pop
in
xchg
mov
push
cmp
imul
fcmovnu
sbb
push
lods
sbbb
lea
mov
sahf
ds
mov
add
js
and
dec
ror
sub
mov
mov
jge
ret
xchg
or
push
or
pop
sbb
inc
in
pop
pop
loope
add
sahf
ret
outsl
jo
stos
ljmp
lcall
jp
test
addb
in
ror
mov
jg
mov
leave
or
inc
inc
aas
cmp
dec
je
pop
mov
jnp
imul
cwtl
cmpsl
xchg
cmc
xor
test
ret
outsb
mov
sbb
pop
ja
jne
xchg
lcall
scas
stos
fiadds
sbb
leave
leave
xchg
inc
shll
shlb
daa
xchg
jmp
test
lods
xchg
cmp
test
adc
orl
and
jnp
xchg
pop
das
mov
jecxz
mov
popa
inc
add
ret
pop
in
in
sbbb
fucomi
sbb
rclb
scas
imul
out
pop
or
pop
fadd
dec
inc
test
inc
imull
test
idivl
fcmovnu
inc
jmp
fldl
dec
xchg
and
push
sub
dec
jnp
pusha
push
or
xchg
fdivrs
imul
outsl
jnp
sub
add
lahf
fs
or
fsub
ret
mov
sbbl
adc
sub
cmp
flds
bound
inc
push
ret
sbb
pop
lahf
xlat
cwtl
lcall
jg
adcl
cmp
in
cmp
jmp
dec
pushf
jge
mov
jge
cmp
jecxz
push
add
arpl
or
roll
or
sti
push
mov
clc
xchg
rcrl
lds
loope
mov
loope
xchg
ret
scas
popf
pop
movsl
enter
cmp
inc
push
xor
cmpsl
ja
add
jae
jnp
xor
cmp
aad
add
imul
push
jne
push
mov
test
mov
ljmp
adc
jno
mov
lret
les
ds
xor
xor
jp
shlb
push
std
dec
and
clc
cmpl
bound
pop
ss
mov
pushl
mov
mov
or
pop
jbe
int
xchg
cli
imul
std
mov
daa
sbb
or
cmc
push
push
rorl
and
dec
pop
paddw
shrl
insl
mov
ret
adc
mov
repz
jg
outsb
arpl
xor
jno
or
ret
mov
mov
loope
out
aas
or
leave
aaa
jle
out
fidivl
dec
xor
cmp
lods
js
andl
mov
dec
pop
lock
xor
dec
mov
xor
data16
ja
into
push
mov
sbb
sub
pop
push
cmp
sub
enter
inc
xor
cmp
hlt
sbb
aas
cmp
dec
js
xor
int
mov
mov
mov
popf
test
es
pop
jge
test
das
jns
sar
push
cs
xchg
fsubrp
test
aad
scas
fnstenv
mov
mov
stc
xchg
sbb
leave
push
xchg
push
sub
mov
repnz
push
ds
arpl
cwtl
xor
mov
je
mov
repz
push
cmp
loope
hlt
xor
or
dec
jg
movsl
lcall
add
out
and
cltd
imul
xor
rorb
mov
gs
test
fsts
sbb
xor
jno
pushf
outsb
rcr
repz
mov
xchg
sbb
mov
scas
mov
sbbl
dec
repnz
add
test
mov
scas
pop
or
test
and
sti
aam
cmpsl
xor
out
jle
xor
xlat
jl
xchg
mov
adc
cmp
push
xchg
dec
movsl
xchg
cltd
cmp
adc
ficoms
adc
pop
cmp
das
and
adc
shlb
into
movl
cmp
sarb
sub
scas
pop
dec
sub
dec
pop
jmp
and
jo
lods
ljmp
hlt
sahf
mov
outsb
sti
push
sarl
mov
mov
xor
in
mov
imul
jb
adc
cmp
xor
jb
fwait
loop
dec
push
jne
xor
cmp
sub
mov
and
xor
pop
adc
lods
out
push
add
jb
jg
mov
insb
test
sbb
int
sbb
cmp
leave
sbb
mov
lcall
jecxz
cs
jo
data16
and
xor
and
sub
les
jecxz
push
int
ja
xchg
cmp
test
sub
push
shlb
stos
mov
adc
push
idivb
xchg
xor
jne
out
cmp
sbb
add
mov
jbe
inc
fadd
xor
je
jne
mov
or
lds
mov
sbbb
adc
and
ljmp
int
dec
std
cli
insl
enter
outsl
adc
mov
xchg
xor
dec
ret
roll
loopne
out
outsl
or
pop
cmp
mov
ja
mov
mov
cwtl
sub
mov
pusha
jbe
mov
jmp
and
repnz
inc
fists
add
mov
cmc
pop
push
movsl
add
pop
xor
and
dec
fst
jns
or
mov
mov
daa
or
in
movsl
push
xchg
mov
in
gs
hlt
outsb
adc
sbb
lahf
fidivl
jb
sub
lods
aad
fs
aaa
jle
pop
ret
fistpll
inc
ret
bnd
std
shlb
movsb
lock
outsl
xchg
jnp
cmpsl
sub
adc
sbb
xchg
and
shll
call
cld
inc
shll
js
dec
cmpsl
jb
daa
mov
cmp
js,pt
stos
xchg
js
push
fnstcw
js
pop
mov
add
sbbl
loope
cmpl
jmp
add
popa
adc
sti
inc
add
mov
pop
sahf
dec
pusha
cmp
xchg
scas
aad
jmp
dec
and
sbb
sbb
add
adc
push
mov
push
or
mov
jo
imul
arpl
ja
int
or
popa
lret
cltd
lods
lds
es
jl
loopne
mov
lock
adc
mov
mov
pop
inc
test
lds
sbb
push
gs
push
mov
jns
and
adc
xlat
xor
sub
xor
sar
fstpl
sub
xor
daa
jns
cli
sbb
inc
call
dec
and
mov
fldl2t
rol
add
cltd
dec
sbb
lds
inc
lcall
inc
adc
pop
mov
fwait
cli
cmp
call
js
sbb
push
jnp
mull
pop
icebp
jbe,pt
rcl
enter
ja
lret
lds
mov
jmp
sub
pop
xor
mov
mov
loope
xchg
mov
or
fxam
dec
imul
inc
jae
lret
ljmp
mov
push
ss
lock
add
and
out
rcrl
test
lcall
ret
mov
aad
in
out
pushf
test
fnstenv
or
popl
lock
je
addl
das
ficompl
mov
sahf
cltd
arpl
shrb
mov
lock
add
lds
sbb
adc
fists
cmpsl
xor
std
mov
or
jecxz
enter
shrl
pop
outsb
sub
adc
xor
add
in
cmpsb
int
pop
push
pop
out
movsb
jmp
ss
fldcw
push
stos
jp
out
jmp
jbe
or
icebp
pusha
scas
icebp
mov
fisubrl
xchg
inc
call
inc
inc
pop
pop
movsb
mov
push
xchg
or
popa
lret
cmp
push
mov
inc
mov
outsb
imul
lret
mov
mov
cmp
aad
dec
xchg
fisttpll
cmpsb
mov
fcomip
or
sub
test
sbb
xchg
xor
mov
imul
loope
and
jo
rcrl
and
out
xchg
mov
xor
sahf
pushf
pop
mov
call
lahf
loope
jmp
inc
test
cmp
test
shll
or
xchg
inc
and
or
repz
inc
jmp
mov
movsb
pop
mov
mov
push
jno
cmp
inc
imul
inc
adc
fldl
xchg
fidivrs
ret
add
sahf
jmp
fistps
pusha
outsl
dec
jno
leave
sub
lret
enter
xchg
and
mov
mov
jl
push
push
cmpsb
outsl
in
adc
sub
xor
mov
push
pop
fistpll
push
or
out
insb
adc
out
lahf
jb
xchg
enter
mov
cltd
sub
pop
xchg
in
pop
adcb
int3
movb
push
sarb
jbe
push
divb
xor
cmp
aas
lahf
outsb
add
sarb
sahf
out
js
jmp
add
addr16
or
push
mov
and
xor
push
call
outsl
push
adc
jae
es
xlat
rolb
cmpsb
std
pop
out
add
mov
ja
adc
adc
mov
adcl
mov
dec
shll
mov
lods
add
add
sbb
jns
ljmp
fcomip
mov
imul
lret
jg
stos
pop
cmp
lea
dec
mov
mov
jge
mov
sarl
fs
int3
fildl
push
and
mov
rcrb
pop
inc
and
lcall
int
lret
pop
je
fdivrs
push
imul
push
xchg
ret
fwait
mov
adc
pop
jmp
inc
add
jecxz
push
repnz
in
add
aas
inc
inc
or
out
loope
jnp
mov
inc
dec
adc
push
cmp
cmp
adc
jb
into
xchg
and
out
outsb
jge
mov
mov
sbb
jbe
ss
sbb
movl
mov
inc
mov
mov
inc
pop
clc
pop
xchg
push
out
icebp
scas
into
jecxz
pushf
xor
loopne
xchg
inc
in
mov
imulb
lcall
rclb
imul
dec
xchg
push
xchg
lahf
lret
cmp
xchg
push
mov
pushw
xchg
jp
rolb
inc
dec
or
xchg
dec
adc
jae
cmp
push
stos
push
and
push
cmp
push
fwait
mov
iret
xchg
pop
andb
dec
out
sbb
adc
ja
mov
or
xor
xchg
js
inc
push
mov
addr16
add
push
in
dec
test
add
lea
arpl
jl
inc
mov
adc
sub
jbe
inc
adc
add
and
cs
mov
insb
test
pop
pusha
inc
je
sub
dec
dec
outsl
sahf
xor
movl
rol
mov
ds
rorb
roll
adc
les
es
sbb
xchg
jmp
loopne
shll
mov
xchg
jno
mov
xchg
sbb
rcrb
stc
ret
aaa
rol
out
repnz
push
mov
push
mov
fadd
fcoml
pushf
sub
xor
stc
lds
rolb
and
fwait
std
fsts
inc
jb
shrl
sti
sti
into
cmp
add
mov
lods
lret
xlat
aas
adc
div
mov
cwtl
dec
mov
inc
mov
sub
dec
mov
stos
sbb
in
cwtl
dec
sbb
and
neg
jg
ljmp
lock
cwtl
xor
fidivrl
push
sbb
or
add
push
xchg
out
rolb
mov
jb
dec
cmpsb
pop
push
fadds
repnz
xchg
sbbl
repnz
push
data16
adc
cmp
inc
push
lret
test
fbld
sar
ljmp
orb
and
jne
jo
stos
repnz
sahf
pop
and
sbb
cmc
jl
cld
mov
notl
xchg
jns
or
pusha
mov
lret
dec
push
or
sbb
sbb
lret
adcb
sti
ss
adc
mov
out
test
mov
inc
xchg
cmpsl
jle
or
mov
push
dec
iret
sub
out
nop
dec
mov
add
or
icebp
mov
mov
xor
out
push
cmp
mov
std
out
lock
rcll
ss
clc
xor
jmp
test
cmp
hlt
outsb
subl
cmp
xchg
lahf
mov
add
dec
xchg
subb
sbb
or
sbb
dec
fdivrs
insb
sahf
sub
bnd
les
mov
inc
or
shlb
negl
lock
adc
stc
sbb
mov
fiaddl
or
sbb
stc
sar
cmp
cmp
ret
fnstenv
cli
es
cmp
aam
or
mov
sub
fisubrs
mov
sbb
xor
xchg
out
jp
loope
cmpsl
pop
mov
fs
and
jecxz
fcomps
inc
scas
cmp
jb
lods
pop
addb
mov
pop
xor
lret
out
xor
pop
push
mov
int3
into
les
ret
cld
fmul
add
ds
out
outsl
mov
jnp
cmp
xor
popf
sbb
cmp
repnz
push
cwtl
sub
lods
repz
sub
pop
test
shlb
and
ljmp
andb
inc
popa
and
adcl
push
cmp
sub
rcrb
shll
push
fwait
loop
dec
ljmp
xor
mov
pop
ds
jp
mov
lret
jnp
adc
cld
pop
push
xor
mov
fucom
xchg
fisttpl
jmp
or
mov
and
outsb
aam
cmp
xorl
cltd
lret
ror
sbb
mov
push
decl
mov
inc
outsb
loop
gs
das
push
idiv
bound
aad
push
in
cs
or
into
lods
cmp
fcmovne
cs
ficoms
mov
mov
les
jp
mov
push
xchg
lcall
or
je
and
flds
cmp
adc
sub
imulb
cmp
in
rolb
hlt
insb
mov
xor
sub
fcmovb
pop
out
fs
outsb
sarl
fisubrs
xor
ret
enter
push
push
mov
push
andl
xchg
pop
mov
inc
push
outsb
lods
ja
or
data16
test
and
lret
in
xor
leave
jp
jmp
shlb
xor
lock
ljmp
dec
and
jb
mov
decl
push
xchg
pop
pushf
or
outsl
int3
les
fidivrs
int
shlb
rclb
je
fwait
pop
mov
cmc
jbe
test
inc
cmp
notb
dec
adc
dec
sarl
jge
repz
jge
daa
mov
test
mov
pop
imul
ja
push
imul
xchg
mov
cmp
popf
rclb
cmp
daa
mov
lock
xor
or
in
dec
roll
repz
inc
cs
lds
pop
les
in
jno
mov
inc
stos
jecxz
rcr
sub
pop
inc
out
aam
mov
ds
aam
std
sub
cmp
mov
and
push
repnz
or
mov
mov
push
mov
in
mov
sbb
pop
test
in
movq
dec
test
les
pop
mov
andb
mov
mov
outsl
scas
inc
daa
jmp
adc
push
cli
aam
fildll
pop
jle
cmc
in
sub
xor
xor
mov
adc
mov
int
add
scas
add
xchg
fistpll
adc
mov
adc
mov
add
push
adcl
inc
mov
ljmp
gs
cld
ljmp
aad
pop
dec
hlt
aas
sub
fucomp
mov
pusha
mov
aas
mov
in
in
xchg
mov
and
jecxz
dec
enter
mov
pop
cli
fistpl
cmp
sub
movsb
out
rcl
sti
pop
or
sub
inc
notb
dec
int
int3
lods
into
dec
add
or
rcr
or
jmp
sub
and
imul
sbb
loopne
xor
or
pop
mov
add
sub
mov
dec
pusha
test
clc
sub
pushf
mov
push
xchg
ds
fsts
out
mov
mov
push
or
push
lret
dec
fcompp
mov
cli
test
sbb
fstpl
imul
xor
fists
mov
inc
js
jg
icebp
ss
scas
jl
inc
jecxz
loope
mov
mov
loope
pop
and
stos
mov
out
mov
xor
sub
push
push
loopne
mov
fildl
jp
xor
mov
or
rcrb
xor
add
mov
and
imul
inc
cmpsb
jge
rcr
popf
shll
push
hlt
sbb
cli
test
dec
pushf
ljmp
lods
pop
adc
stos
mov
cmpsb
icebp
jmp
xor
xor
repz
popa
or
xchg
sbb
imul
out
out
test
aaa
jecxz
sub
mov
push
out
in
scas
xor
xchg
nop
fistps
js
repz
movsl
fs
ret
adc
jle
and
jno
std
adcb
mov
push
mov
mov
sbb
inc
mov
das
out
ret
std
shrl
inc
insb
jge
fucomi
aad
xchg
jbe
sbb
sub
addl
fstpl
mov
xchg
test
cmp
inc
xor
push
sub
subl
cmc
sbb
roll
xor
cmp
mov
xor
push
sbb
mov
dec
inc
cs
xchg
stc
adc
jno
mov
pop
jl
pop
pop
or
mov
mov
leave
iret
enter
xchg
pop
dec
pop
testl
push
dec
push
rcr
mov
mov
subl
insl
fisubs
dec
or
mov
divb
lods
adc
in
add
scas
test
mov
fdivp
and
int
dec
fwait
jmp
rorl
xor
add
add
mov
xchg
add
jecxz
pop
jnp
sahf
mov
insb
mov
xor
cmp
xor
lcall
lcall
mov
adcl
loop
cld
jbe
lods
fiaddl
jno
popa
mov
decb
imul
push
push
repz
dec
or
fnsave
dec
mov
add
inc
aas
mov
imul
sub
sbb
test
test
add
cmp
mov
mov
or
out
mov
mov
icebp
test
movsb
imul
jae
pop
adc
fs
cmp
jae
xlat
pop
js
push
dec
rclb
loop
mov
mov
adc
data16
les
sub
mov
rcr
iret
test
cmovns
jmp
mov
popa
jge
flds
icebp
out
data16
mov
lods
lds
cmpsl
xlat
movsl
lods
arpl
nop
mov
pop
push
sbb
push
push
cmpsl
mov
jecxz
ficomps
das
mov
or
xchg
ljmp
push
jge
mov
mov
pop
xchg
insl
adc
sbb
dec
dec
stos
aaa
mov
iret
mov
testl
mov
inc
das
int
mov
jmp
xchg
jle
jl
sti
in
icebp
inc
sti
xchg
cmp
call
fildl
lods
stos
push
outsl
cld
or
add
sbb
cld
jno
ljmp
lret
dec
out
sbb
sub
add
mov
pop
jb
add
mov
xor
ret
adc
push
add
movsb
rcl
fstps
mov
dec
dec
jnp
xor
outsb
add
sub
pop
xchg
ja
mov
and
stos
shr
outsl
push
inc
add
or
std
or
subl
movsb
cwtl
cmp
popf
sti
adc
stc
cld
or
mov
jge
jmp
call
jmp
imul
xor
add
lods
mov
push
fmull
xor
fwait
sub
push
mov
inc
pusha
pop
int
rolb
mov
push
jecxz
cmp
or
inc
jbe
test
mov
xchg
jae
sbb
popa
insb
nop
mov
push
imul
data16
dec
not
clc
push
sbb
mov
in
xchg
out
rcrb
fucomp
arpl
add
inc
dec
fxch
lea
xor
jge
stos
movsl
adc
mov
inc
loop
mov
and
sbb
scas
mov
inc
xor
xor
in
jo
cmp
fnstsw
loop
scas
sbb
push
adc
push
mov
ja
inc
cmpsl
fcomps
aas
out
jne
out
xchg
add
bound
cwtl
mov
sub
insl
mov
and
ds
and
xchg
sub
je
sub
fs
xchg
mov
cmp
and
dec
jmp
push
dec
jns
mov
aas
sti
outsb
pop
lods
mov
jge
aaa
pushf
push
sbb
loop
sbb
cmp
sub
or
das
cld
js
add
cli
xorb
bound
jns
cs
data16
shlb
rcrb
inc
adc
les
cmp
test
subl
loope
sub
popa
adc
jmp
rcl
inc
dec
jmp
xor
xchg
sbb
incb
xchg
or
xorl
pmaddwd
mov
mov
fiaddl
out
add
add
fimull
popl
hlt
jno
mov
pushl
xor
outsb
jecxz
cmp
pop
mov
addb
cmp
das
xchg
add
jnp
mov
add
ja
pop
xchg
data16
mov
lods
inc
xorb
jecxz
fmull
push
xor
xor
inc
faddp
movsl
decb
repz
rorb
and
les
sub
pushf
xchg
call
sub
mov
mov
mov
outsl
ficoms
int3
inc
push
jle
dec
sub
mov
mov
and
sahf
lcall
pop
inc
aam
loopne
lods
out
mov
or
rorl
fldenv
jp
sub
or
sbb
mov
es
sarb
sbb
or
lods
jbe
fwait
cmp
xchg
bound
mov
or
and
lea
jl
adc
shlb
push
sahf
test
push
fwait
loop
jne
out
lods
pop
orl
xor
dec
or
mov
stos
mov
jbe
pop
push
fmuls
sub
cmp
push
dec
and
std
jnp
lods
stos
dec
roll
in
xor
lahf
push
dec
fcomps
adc
dec
mov
hlt
repnz
jb
ljmp
and
les
push
sub
fldenv
mov
int3
ss
dec
xchg
scas
jae
and
inc
sbb
inc
ret
sbb
jo
pop
inc
xlat
dec
fcomp
daa
decb
dec
adc
push
adc
mov
popf
pushf
sti
outsb
out
xchg
jl
or
stos
adc
gs
loope
jmp
push
stos
or
daa
push
faddl
xchg
pop
ds
cmp
push
stos
int3
cli
mov
jb
xlat
andl
or
pop
lahf
pop
pop
mov
mov
fxch
lods
sbb
in
rclb
xchg
add
lcall
sarl
push
pusha
fsubrs
subb
inc
adc
mov
insb
jnp
or
mov
jbe
in
xchg
leave
add
fisttpll
mov
mov
outsl
or
popf
dec
jae
loopne
test
push
lods
loope
jne
pop
mov
dec
xor
fsubrs
lret
jo
jp
test
mov
hlt
gs
sub
outsb
or
pop
imul
enter
mov
lods
ja
xor
and
jbe
dec
test
dec
mov
gs
in
in
daa
mov
and
pop
movsl
iret
into
xchg
sub
xor
jmp
movsb
daa
test
data16
push
pusha
aaa
cmp
add
cmc
jmp
inc
lret
inc
repnz
xlat
cmp
xor
dec
push
ljmp
cmp
cmp
xchg
out
lret
pop
jecxz
addr16
sbb
mov
outsl
mov
xlat
sbb
aas
jmp
and
dec
js
rclb
negb
cli
ljmp
ret
popa
sbb
jo
cmp
push
pop
pop
loop
int
adc
fcoml
mov
in
fdivp
subb
shlb
and
adc
cli
mov
incl
mov
je
arpl
dec
mov
inc
scas
nop
push
pushf
lods
adc
push
sub
cwtl
jns
es
dec
aas
cltd
push
mov
mov
push
cwtl
push
js
out
jb
ss
shrl
cmpl
or
push
cmp
imul
es
sub
add
cmp
jecxz
pusha
pop
or
das
fmuls
adc
loopne
dec
popf
and
out
xchg
and
push
push
sbb
xchg
xlat
and
sahf
popa
xchg
push
or
dec
mov
imul
sbb
sub
aam
in
mov
jno
mov
pop
dec
push
addr16
fcompl
lret
stc
std
fidivrl
call
xchg
inc
dec
or
addr16
stos
ds
lock
xchg
push
fidivrl
sarl
cmp
inc
adc
pop
aam
jmp
cs
add
ljmp
sahf
cmp
add
cwtl
std
sub
imul
inc
test
dec
sbb
xchg
and
nopl
mov
fucomp
jbe
into
mov
pushf
push
mov
add
js
dec
xor
imul
inc
pop
ljmp
push
cmpsb
adc
enter
mov
stos
sahf
aaa
mov
pop
test
jnp
hlt
lea
ret
cmp
stos
mov
je
loop
pop
lahf
stos
dec
dec
sub
jg
mov
lret
mov
imul
pop
fnsave
out
cld
repnz
sbb
add
les
aad
sbb
loop
dec
call
das
sahf
dec
pop
loope
jns
fists
in
pop
fidivrs
jle
bound
inc
mov
sub
xchg
xchg
xchg
pop
fbstp
enter
fs
clc
inc
jb
ret
aaa
jmp
sub
cmpl
push
outsb
cld
cmp
fists
sub
push
jbe
push
stos
popa
mov
in
mov
sbb
out
subl
clc
shll
xlat
outsb
cltd
sbb
adc
lock
aad
mov
jg
jmp
dec
jle
push
mov
fs
lret
addl
cmp
fsubrl
push
jo
and
xor
stos
pop
inc
xchg
negl
lods
or
fwait
sub
xor
lods
je
lret
scas
jnp
mov
cmc
sbb
inc
dec
jns
ss
cltd
add
sbb
mov
lods
dec
arpl
push
pop
lahf
cwtl
scas
ret
out
push
cmc
and
xchg
sub
xor
inc
add
rorl
sbb
jge
mov
jnp
lock
push
scas
ret
inc
pop
mov
push
lods
insb
and
push
repz
jl
je
add
test
pop
in
call
xchg
out
test
cmp
dec
loopne
xchg
and
scas
out
xchg
mov
sub
jg
push
scas
gs
pop
sub
or
fisubrs
lock
dec
sub
mov
int
pop
mov
daa
or
and
sub
cltd
out
cmc
fucomi
jle
cltd
sbb
sub
jnp
popf
sahf
out
mov
fs
lods
inc
fcmovnbe
push
rcl
xor
mov
lret
out
push
std
dec
dec
cmc
ljmp
in
push
ljmp
cli
std
popf
pushw
scas
mov
push
popa
jnp
add
ljmp
xchg
pop
inc
push
jmp
dec
stos
add
outsb
imulb
incl
adc
inc
and
or
fidivrs
inc
cmpsb
sbb
call
mov
and
xchg
lcall
nop
test
inc
or
xor
xchg
cld
pop
adc
sbb
sbb
lcall
fisubs
rol
xchg
fistps
int
jb
ds
testl
pop
and
mov
scas
mov
push
imul
fildll
push
scas
sbb
js
or
ljmp
div
mov
imul
push
dec
outsb
pop
ret
sbb
fbld
mov
inc
sarl
icebp
inc
call
dec
add
adc
or
mov
fwait
cwtl
mov
fs
xchg
xor
ja
or
add
outsb
sub
test
inc
daa
add
inc
xor
call
jge
dec
ja
adc
mov
add
scas
cmp
shl
push
test
push
fwait
inc
xor
icebp
ja
jbe
maxps
repnz
add
shrl
and
les
push
sbb
scas
loope
mov
imul
push
sub
mov
xor
gs
sbbl
clc
sbb
cwtl
ficompl
jae
push
std
loope
ljmp
pop
fwait
cs
sub
inc
sbb
je
jo
filds
cltd
dec
sbb
hlt
inc
insb
sub
dec
dec
add
fwait
inc
and
outsl
icebp
in
pandn
pop
aam
out
push
stc
sbb
out
repnz
ss
nop
mov
inc
les
test
out
xchg
popf
mov
xor
pushf
inc
aaa
add
mov
mov
adc
cmp
ss
adc
jge
dec
sub
add
ljmp
repz
cltd
cmpsl
mov
adcl
fsts
mov
sbb
inc
push
rorb
xor
inc
mov
jno
subl
mov
cs
jae
pop
push
insb
int
cmp
fildll
jmp
rcll
adc
jo
add
outsb
lret
xor
addb
lahf
jge
sbb
push
out
lret
xchg
data16
imul
xchg
mov
jb
pop
mov
mov
or
pop
pop
mov
ss
ljmp
xchg
jbe
lods
pop
sti
xor
jnp
mov
mov
dec
xor
lods
mov
add
nop
mov
xlat
and
outsl
cmc
mov
ja
enter
push
dec
cmp
rorl
xchg
sbb
jnp
dec
add
add
das
clc
adc
aad
mov
ret
xorb
lds
fiaddl
dec
add
inc
out
jns
jg
into
push
pop
jb
dec
xchg
aad
inc
fs
inc
mov
out
popf
aaa
cmp
lcall
add
out
push
daa
mulb
cmp
insb
lahf
mov
mov
ljmp
push
insl
adc
cmpl
mov
test
lahf
and
test
inc
pop
pop
aad
push
mov
push
loop
arpl
test
xchg
or
gs
dec
cmpsl
push
lods
sbb
inc
pushf
adc
in
pop
xlat
add
repnz
test
push
adc
sub
enter
sub
sbb
push
aam
cmp
dec
or
cs
cmp
out
loop
cmpsb
bound
ds
imul
lahf
pop
pushf
js
out
add
addr16
sbbb
fst
jecxz
sub
loopne
dec
subl
in
repz
adc
or
mov
xchg
jnp
xabort
inc
add
std
loop
push
daa
fildll
pop
mov
inc
jae
in
xor
xchg
mov
push
movsl
fwait
out
rorl
nop
cltd
xor
out
mov
sbb
and
ss
push
jne
cmpsb
mov
xor
push
ja
adc
sub
fisttpll
dec
fnsave
js
xchg
add
sar
stos
jnp
out
sub
test
add
ljmp
je
or
or
pop
push
int
xchg
dec
rcrl
xchg
repnz
imul
insb
decl
jno
js
push
inc
pop
outsb
and
ds
insb
mov
xor
sub
xchg
jne
sbb
mov
inc
or
out
xor
bound
outsb
bswap
cs
mov
test
mov
fwait
js
mov
cld
leave
stc
stos
xchg
dec
inc
fbstp
lods
clc
xor
jp
pop
into
cmp
pop
xchg
repz
xor
jno
or
daa
cmp
movsl
inc
int3
mov
push
arpl
mov
xchg
lret
pop
jecxz
mov
push
pop
push
sbbl
or
test
adc
add
rcll
rcll
das
popf
mulb
ret
mov
mov
jo
inc
inc
xchg
lcall
nop
push
push
leave
pop
mov
repnz
pop
fsubrs
mov
cmpsl
lods
dec
and
ret
xchg
adc
pushf
popf
xchg
addl
inc
jae
in
ljmp
arpl
xor
into
and
pop
and
ss
or
aam
fildll
pop
and
sbb
pop
sbbl
pop
notb
scas
daa
out
outsb
enter
xor
fcomps
pop
push
fisubrl
jl
mov
cmp
jmp
test
pop
into
sbb
stos
jmp
and
out
add
insb
cmp
and
in
insl
inc
and
hlt
cmp
add
mov
aaa
xchg
jns
mov
adc
jns
cmpsl
lds
sub
cmpsb
out
nop
mov
add
shlb
hlt
movsl
inc
pop
or
sub
inc
andb
jb
dec
out
sub
sub
stc
sahf
lods
push
dec
add
out
jb
in
fisttps
push
pushf
and
inc
gs
mov
dec
xlat
bound
stc
pop
dec
or
or
stos
dec
out
shl
sti
jbe
push
cmpsl
inc
lret
mov
out
mov
inc
out
mov
arpl
rorl
pop
pop
inc
sahf
sbb
adc
ds
xorb
xchg
sub
aas
jns
sbb
shll
mov
sbb
lods
ss
into
dec
cmp
pop
push
push
scas
ja
lcall
loopne
pop
pop
jb
sahf
add
repnz
xchg
test
lods
push
mov
lods
inc
lcall
mov
mov
inc
xlat
push
test
jge
xchg
sti
jecxz
mov
test
inc
incl
mov
xor
out
xchg
pop
sbbl
add
mov
rcll
or
jae
lock
popf
pause
sbb
mull
fisttps
movb
adc
cltd
jbe
lods
daa
sti
ss
cmp
out
xor
jno
je
out
ds
andl
pop
bound
movsl
mov
movsl
cmp
cmc
out
jb
in
jg
xlat
sbb
rol
cs
jns
arpl
test
out
je
xchg
mov
lock
jge
pop
mov
xlat
insb
jno
mov
mov
std
inc
dec
je
mov
ja
aad
xchg
and
and
outsb
adc
pop
lahf
push
popa
inc
lret
std
std
dec
sub
pop
xor
pop
and
push
mov
xchg
jg
sub
adcb
scas
mov
enter
mov
inc
repz
je
in
loope
push
fisttpll
test
ss
aaa
dec
sub
call
sti
fmuls
ja
gs
fidivs
and
add
or
stc
adc
jle
sarl
sbb
push
lea
lds
fcoml
mov
xor
ret
jbe
subb
inc
loopne
cs
pop
mov
mov
scas
out
jo
jmp
mov
adc
cmp
pop
push
or
lret
and
jg
das
add
mov
mov
mov
jns
jbe
ds
mov
fidivs
aaa
xchg
inc
rcrb
push
cs
into
stc
fdivrl
ss
in
mov
call
pop
js
aaa
pop
fimull
jmp
push
sub
and
insl
cmp
jbe
inc
cmpsl
cld
fwait
js
aaa
inc
movsb
jnp
sub
fwait
out
ror
divl
fwait
cmp
add
mov
mov
stc
jns
aam
clc
xchg
and
out
call
dec
ret
lods
insl
cmp
popa
and
xchg
mov
add
push
pop
mov
daa
cmp
lret
lods
inc
repnz
mov
stc
add
imul
fsubrl
stos
int3
add
lahf
popa
ljmp
inc
lea
jmp
hlt
dec
arpl
pop
ret
lock
shll
jo
mov
push
jb
pop
cld
popa
fiaddl
cwtl
cld
negl
aas
loope
mov
fdivrl
xchg
add
pop
aas
cmp
loop
sub
xor
dec
jecxz
xorl
cld
insl
adc
xchg
gs
or
jbe
aam
fldcw
or
push
sahf
lock
pop
push
push
popf
mov
jl
mov
sbb
hlt
mov
jno
inc
inc
lcall
imul
dec
scas
shrd
jecxz
scas
pop
arpl
xor
dec
dec
rcrl
neg
sub
jmp
pop
aad
fcoml
out
mov
popf
mov
dec
lods
cmp
int3
xchg
out
scas
xor
stos
sbb
ljmp
xor
adc
cmpsb
xlat
mov
sti
and
aas
sbb
jecxz
nop
outsb
sahf
xlat
pop
mov
lret
push
lcall
pop
add
out
and
or
cmp
cmp
in
mov
mov
mov
movsb
pusha
lds
cmpl
repnz
mov
mov
cmp
add
shll
ja
in
out
inc
movsl
jmp
add
cmp
repnz
pop
rcrb
les
hlt
lods
ss
loope
inc
dec
mov
sub
jne
mov
cmp
jmp
mov
cmp
cmpsb
mov
sbb
inc
sarb
arpl
jne
ret
mov
into
mov
test
lahf
icebp
xchg
aam
push
out
mov
imul
fldcw
and
les
add
leave
bnd
mov
popf
stos
addr16
cmp
inc
cwtl
and
push
imul
movsb
dec
scas
inc
inc
fdivrs
dec
xchg
dec
ret
pop
popa
lds
lea
lcall
iret
dec
mov
es
inc
push
inc
insl
leave
push
out
int3
clc
jmp
jae
lahf
inc
pop
clc
daa
pop
lret
jmp
lods
xorb
add
lods
arpl
arpl
repnz
jp
mov
call
mov
mov
xchg
jno
sub
scas
and
ja
cmp
xchg
lods
or
adc
adc
test
lret
pop
lahf
pop
pop
mov
xchg
loop
sbb
pop
dec
inc
and
gs
cld
add
je
fsubr
sahf
mov
bound
jl
adc
jne
mov
or
inc
push
repnz
sahf
xchg
lcall
adc
xor
in
xor
movsb
xlat
dec
ficoml
xchg
adc
dec
mov
pop
inc
lea
lods
dec
mov
mov
cmp
das
jbe
std
ss
or
push
stos
or
jg
stc
loope
pop
push
pop
jle
xchg
lahf
or
data16
xchg
xor
xchg
push
and
cmp
lahf
or
movsb
add
mov
stos
xchg
jmp
fwait
je
call
jge
pop
push
mov
in
mov
insl
out
cmp
scas
sbb
inc
jbe
xor
dec
imul
cmp
dec
add
or
loopne
cmp
mov
sahf
fidivl
and
insb
outsb
fcompl
daa
sub
pusha
data16
push
loope
test
xchg
int3
pop
lcall
sbb
and
or
jae
ss
add
sbb
push
add
add
shlb
insl
or
cld
movsb
hlt
rep
sahf
add
out
add
mov
dec
cltd
lret
mov
int3
inc
jp
or
rorb
sbb
xchg
in
dec
pop
sub
cmp
ljmp
int
mov
push
stos
and
cvtps2pi
in
xchg
aam
leave
xchg
in
or
lods
fiaddl
je
push
loopne
popa
repz
xchg
jb
addr16
cmp
aad
mov
lock
arpl
jmp
cmp
clc
ficoml
jg
popf
mov
xor
mov
sbb
xlat
add
jle
push
mov
jl
add
xor
push
push
jle
pop
enter
dec
rorl
shr
pop
ds
push
roll
sbb
inc
test
mov
xchg
popf
or
xor
dec
mov
dec
arpl
out
out
jb
and
sub
jle
push
jle
mov
js
hlt
out
daa
sbb
push
pop
cmpsb
adc
mov
sbb
sbb
add
fidivl
daa
mov
sbb
enter
sub
sbb
adc
ror
dec
mov
xchg
cld
xor
gs
test
push
fs
stos
cmpsb
sub
add
sahf
mov
lret
push
adc
adc
xchg
pushl
sbb
lret
inc
dec
pop
mov
ficompl
dec
fists
hlt
dec
xor
dec
xchg
add
pop
inc
inc
inc
imul
and
mov
aam
pop
repz
cmp
filds
pop
mov
and
and
insb
add
in
test
rcrl
xor
bound
or
push
or
xlat
or
inc
mov
loop
mov
mov
mov
cli
xchg
jl
adc
notl
mov
mov
jecxz
push
and
cmp
mov
cmp
lods
mov
push
pop
mov
ljmp
cmp
aaa
push
or
gs
dec
dec
mov
in
dec
inc
push
ds
fldcw
xor
mov
pusha
sti
fcomip
lea
sbb
add
or
push
es
sub
or
jle
dec
cmpsl
inc
xor
jns
pop
cmpsb
fcompl
test
adc
mov
mov
das
or
or
test
jae
fsubrl
jmp
xorl
mov
subl
adc
pop
stc
inc
outsb
cwtl
dec
dec
aaa
ret
out
sahf
gs
ja
cld
scas
mov
cmp
jecxz
in
int3
inc
xor
adc
inc
or
int3
test
push
cs
xor
mov
dec
loop
and
sub
ret
jnp
pop
sbb
ret
xor
orb
push
jmp
mov
xchg
jle
pop
sub
lods
jbe
mov
xor
push
shlb
inc
es
dec
mov
mov
ljmp
rorl
es
jmp
je
mov
sarb
jbe
sub
xor
je
add
xchg
call
mov
test
add
or
fdivrs
add
jecxz
xchg
inc
outsl
push
pop
mov
sub
mov
lahf
jnp
movsb
aaa
sub
jp
or
sarl
outsl
cmpsb
in
add
dec
xlat
cmp
sub
out
jg
inc
sub
addr16
add
fistl
lods
js
lods
cmc
lahf
fs
lahf
inc
adc
sbb
xchg
xchg
je
inc
push
imul
hlt
divb
jle
jo
pop
repnz
or
cmc
rclb
lret
pop
daa
cmp
adc
push
inc
ljmp
cs
gs
mov
xchg
gs
inc
std
cld
lcall
push
sbb
mov
lods
jle
xchg
sub
xlat
fmuls
mov
mov
cli
cltd
sbb
enter
sbbb
fsubs
adcb
sbb
pop
andl
lret
cmp
shll
push
popa
and
out
jae
cmc
hlt
xchg
mov
adc
pop
imul
nop
mov
out
imul
fwait
mov
sahf
imul
or
and
test
mov
xchg
xchg
call
les
mov
lock
movsb
lahf
fisubs
std
bound
and
mov
iret
mov
shrb
scas
pop
jge
repz
mov
dec
movsb
jmp
mov
loope
lcall
mov
cli
sub
or
sub
sub
mov
enter
aaa
jns
xchg
xlat
xor
aaa
aam
test
test
cli
sub
icebp
subb
call
addr16
push
ss
shl
ret
dec
cmpsb
jne
sbb
out
xchg
popf
dec
xlat
xchg
jl
out
or
fwait
lods
adc
out
std
sti
movsl
inc
stc
popf
ljmp
sub
cmpsb
dec
jo
mov
out
stos
pop
dec
loope
js
lea
jmp
fbstp
dec
sets
lahf
inc
ret
jle
jle
mov
repz
arpl
mov
lock
lock
mov
movhps
xor
jae
iret
stos
je
rcr
pushf
popa
adc
sbb
iret
fnsave
ss
jno
mov
mov
mov
xor
lods
fbstp
jecxz
shlb
sub
jg
xor
pop
js
cmpsb
aam
cmp
sub
sti
shr
mov
sub
xchg
dec
frstor
and
das
in
pop
dec
ret
pop
sbb
mov
pop
or
lret
jmp
mov
xchg
jecxz
aaa
insb
dec
sub
popf
sbb
scas
xchg
popa
movsb
andl
xor
xor
nop
cwtl
or
lock
subb
mov
push
push
call
lods
pusha
sbb
into
fsub
mov
ficompl
adc
rcll
cmpsl
outsb
or
cmpsl
test
mov
ret
pop
adcl
adc
xor
dec
pop
js
bound
or
aam
inc
in
incb
fidivrl
mov
and
mov
insb
cmpsb
lret
lret
and
jb
jmp
xor
dec
sbb
mov
jmp
inc
sub
jns
testl
or
dec
rorb
or
out
sti
dec
sti
pop
inc
xor
cltd
pop
add
sbb
movsl
leave
sbb
and
dec
daa
ljmp
arpl
rclb
pusha
push
adc
mov
push
fstl
inc
lods
add
push
fdivrs
mov
mov
repz
dec
mov
aas
clc
shll
xchg
roll
fwait
cs
or
repnz
inc
xor
jno
xchg
clc
inc
hlt
aas
rcrl
mov
mov
leave
xor
and
sbb
notb
call
mov
adc
outsb
aam
xor
mov
sub
clc
cmp
dec
andl
sbb
inc
ss
sbb
ror
cmp
cmp
push
sub
outsl
add
cli
mov
mov
jecxz
lods
adc
or
and
rclb
mov
cmpsl
mov
pop
inc
ss
rclb
daa
andb
cmp
push
fwait
popa
in
mov
ret
dec
js
out
pushf
lds
push
mov
sarb
xchg
inc
lahf
sbb
mov
fldt
or
cmpsb
or
sub
scas
mov
and
adc
ljmp
xlat
mov
imul
pop
adc
sub
push
in
loop
jne
roll
adc
push
jp
lcall
add
adc
call
push
int
xor
cmp
push
mov
mov
lcall
loopne
or
sti
jmp
xchg
test
lahf
adc
pushf
stos
jnp
push
xor
dec
xor
mov
push
sbb
push
xchg
out
mov
hlt
mov
mov
psubusb
and
adc
push
dec
loopne
fimuls
dec
movsl
xorb
in
rclb
repnz
ljmp
cld
cli
dec
fstps
push
or
cmpsb
lods
lret
aaa
jmp
pushf
pop
fnsave
or
or
xchg
push
bound
mov
push
stc
lcall
mov
mov
or
pop
icebp
test
bound
shll
jecxz
movsb
inc
fdivl
pop
xchg
fstps
push
adc
sbb
inc
xchg
xorl
sub
inc
rorl
add
shlb
in
push
cmpsl
mov
mov
dec
sbb
mov
inc
daa
cwtl
fcompl
pop
fcoms
cld
add
in
in
and
roll
xor
pop
add
out
pop
sbb
movsb
adc
cs
lcall
shl
sbbb
sub
std
and
in
and
push
je
sbb
sbbl
jbe
testb
mov
ret
test
mov
xchg
sub
cmp
fyl2x
jl
mov
and
cmp
add
js
cmp
or
or
xor
xchg
test
dec
mov
jo
pop
sub
call
insl
fstps
imul
xchg
cs
outsb
lcall
enter
daa
push
cld
cli
push
stos
scas
in
cmp
insl
into
or
pop
aas
push
mov
lret
mov
adcl
or
adc
mov
mov
jno
out
shrl
xor
dec
xchg
jl
mov
imul
data16
fisttpl
dec
or
cmpsl
icebp
in
jle
leave
and
or
sbb
aam
sbb
fcom
cmp
cmpsb
ds
jbe
mov
adc
xchg
out
aas
cmpsl
push
stc
mov
dec
sti
inc
faddl
imul
push
inc
xor
jp
mov
and
addl
fmul
dec
cmc
mov
lods
cmc
jp
shlb
or
push
dec
pop
adc
scas
and
std
xchg
inc
push
mov
clc
sub
ret
dec
out
lret
pop
cwtl
inc
pop
mov
and
mov
xchg
mov
rolb
jo
stc
xchg
mov
fidivs
stc
inc
stc
out
ds
and
std
mulb
es
je
xchg
mov
mov
pop
je
jecxz
sbb
and
cmp
cmpsb
pop
das
in
jnp
imul
test
jmp
adc
or
push
ror
push
push
pop
sahf
fdecstp
push
mov
out
popf
pop
push
sbb
out
popa
cmp
mov
xchg
stc
push
sub
cmc
js
movb
movsb
movsb
lock
scas
sbb
mov
cwtl
cmp
jnp
adc
inc
fmull
pop
jns
inc
je
jle
push
call
cmp
cmpsb
pop
lods
mov
sub
xchg
add
ljmp
imul
jp
daa
out
cwtl
push
loope
mov
lods
aad
movsb
and
or
push
aam
in
loop
xchg
and
inc
jmp
push
mov
sbb
test
sub
sbb
push
push
loope
push
nop
jle
jne
lret
push
stos
fistpll
lahf
and
cwtl
mov
pop
lahf
stc
inc
imul
pop
mov
outsl
sbb
cmp
push
imul
cmp
ds
or
ljmp
sahf
fisubs
sarl
rorl
out
mov
loope
arpl
js
push
jno
xchg
les
xlat
push
or
jb
std
imul
mov
jg
xchg
mov
pop
sbb
daa
inc
daa
dec
mov
cmp
inc
push
cmpsb
aad
xchg
pop
cwtl
mov
ljmp
adcl
and
jno
fistps
lahf
push
inc
mov
sub
adc
xor
rcrb
cwtl
aas
and
lds
xchg
scas
mov
jmp
inc
lea
xchg
sub
or
les
fnstsw
cmp
xor
cwtl
iret
and
sub
jp
das
call
enter
mov
scas
mov
sti
push
sbb
jl
push
ret
ret
jl
cmpsb
jo
xor
in
clc
xchg
pop
in
mov
stos
insb
xchg
pop
jmp
jg
test
mov
mov
sahf
push
test
mov
das
lods
mov
out
loope
inc
scas
jo
lcall
js
orl
xor
push
xor
mov
xchg
jb
mov
xchg
int
fisubs
fs
popf
sbb
add
orb
sbb
mov
in
das
ljmp
and
xor
jo
add
arpl
push
push
int3
cmp
movsb
mov
test
enter
dec
out
push
pop
and
mov
mov
mov
inc
mov
in
ds
mov
inc
std
cmp
sbb
xchg
push
and
sub
mov
rorl
sbb
and
add
pop
add
or
sti
jge
mov
sbb
pop
test
mov
fidivrs
fnstsw
cmc
jl
std
negl
sarl
cli
cmp
mov
push
adc
rol
out
or
pop
mov
stos
and
test
cmp
push
and
aad
sub
fadds
addb
test
fsubs
or
lcall
add
stos
xor
and
aad
ja
loop
addr16
xchg
inc
subb
cs
call
fnsave
dec
jne
jp
mov
xchg
xlat
add
iret
mov
pop
xchg
mov
incl
cmpsb
mov
adc
je
shlb
daa
cli
xchg
in
inc
add
out
or
push
mov
and
addb
imul
jns
jae
xchg
push
push
cmpsl
sub
outsl
cmpsb
aam
sub
loopne
jecxz,pt
xchg
mov
arpl
out
xchg
dec
and
jbe
cmpsb
mov
push
xchg
out
or
dec
loopne
loope
sub
dec
fucomp
outsb
add
lcall
je
insl
xchg
pop
fdivr
add
test
ss
push
mov
xchg
insb
hlt
lahf
lea
jmp
jno
incb
scas
rorb
sub
inc
leave
cmp
lcall
addb
pop
pop
sbb
outsb
sbb
jnp
subb
hlt
push
lea
sbb
jb
popf
push
loope
sub
push
pushf
jg
push
call
sub
rorl
mov
pusha
lahf
cmpsl
frstor
pop
fsubrs
push
insl
inc
loop
lods
push
and
clc
and
sarb
push
inc
rol
lods
push
ja
or
gs
cmp
xor
inc
leave
cmovle
bound
ss
push
jg
dec
jne
hlt
xchg
hlt
ljmp
dec
sub
stos
dec
leave
sub
lods
mov
mov
mov
mov
loop
cmp
pop
ljmp
mov
mov
xor
cmp
lret
sub
out
roll
fdivrp
and
inc
les
mov
nop
fwait
jcxz
jg
and
ljmp
inc
ljmp
jbe
xchg
pop
cmp
push
dec
add
cmp
ja
pop
dec
aam
adc
sahf
mov
and
dec
fwait
mov
inc
dec
out
fisttpll
jne
push
sbb
xor
jmp
push
es
rcll
mov
mulb
fidivrs
fisubrs
cmp
pop
cmpsl
adc
test
push
cwtl
sbb
mov
stos
negl
push
adc
mov
xchg
cltd
dec
std
into
fisubl
add
ljmp
stc
lea
xorl
ret
dec
pop
lret
pop
xlat
push
nop
mov
and
fisubl
arpl
outsb
loop
cmpsb
fcoms
pop
xchg
adc
popl
xlat
inc
inc
lods
lock
mov
pop
jae
lods
insl
test
ja
cmpsb
mov
imul
in
notl
push
xchg
cltd
loopne
add
repz
scas
int
sub
push
aaa
in
cmp
mov
addr16
xchg
push
push
add
inc
ja
dec
sub
dec
pop
es
cmpsb
fstpt
out
imull
andb
out
jnp
xchg
dec
in
les
push
inc
adc
adc
jo
push
sub
das
stos
adc
out
cld
or
xor
mulb
jns
bound
dec
data16
xchg
dec
fmul
push
ret
adc
and
jbe
sbb
push
jb
into
dec
push
leave
sub
fistpll
jmp
sbb
sbb
lcall
xchg
mov
je
add
inc
pop
ss
mov
mov
xor
pop
fwait
je
mov
fdecstp
shlb
in
fldt
jae
dec
cwtl
sbb
ret
add
mov
pop
in
imul
movsb
and
fdivs
ret
jae
in
test
icebp
push
cmpsb
and
add
xchg
cmc
cmp
xchg
push
push
adc
pusha
rol
inc
mov
adc
xor
add
scas
orb
aas
faddp
xchg
jg
es
mov
aas
sbb
pusha
les
into
leave
outsl
inc
mov
lods
addl
xor
fisubl
pusha
sub
popf
lret
mov
push
pop
lret
bound
int3
jb
xchg
movsl
jo
es
inc
lea
fistl
xchg
inc
dec
mov
add
push
sbb
mov
push
aas
popf
aaa
adc
jno
mov
adc
out
repz
lret
repnz
lar
rcl
lret
fists
cltd
inc
shll
std
in
lret
xor
and
lods
xor
das
sbb
inc
push
sahf
mov
mov
pop
dec
or
cmovno
and
lahf
repnz
pop
shlb
adc
stos
jmp
enter
pop
popa
xchg
push
cmpsb
xchg
cld
cltd
pop
xor
inc
dec
adc
dec
mov
hlt
das
out
cmp
inc
adc
jns
out
cmp
mov
sbb
test
xor
push
incb
je
push
adc
int3
dec
jge
add
loop
loopne
test
inc
jg
xchg
out
insb
and
or
push
xchg
sub
mov
imul
mov
fdivp
sub
pop
aad
push
push
dec
jnp
je
mov
jg
and
lcall
fwait
lods
and
lods
push
jmp
or
inc
test
fcoml
mov
loop
inc
adc
jb
mov
jne
xor
std
arpl
gs
aas
aam
sbb
mov
outsl
cltd
loope
inc
mov
sbb
inc
lods
je
rol
mov
aaa
popa
test
xchg
shlb
inc
sahf
scas
fisttpl
loopne
ds
in
loopne
mov
pop
and
inc
ret
test
fildl
movsb
dec
pop
jle
int3
and
fcompl
shl
cmp
jle
loope
icebp
mulb
mov
or
mov
repnz
pop
mov
cld
xchg
xlat
aam
xchg
fisubrs
arpl
nop
insb
daa
adc
mov
mov
addr16
dec
or
mov
pop
orl
pushf
outsb
push
ffree
xor
pop
enter
scas
cmp
xor
lret
push
aam
adc
aad
cmpsl
dec
lods
or
ss
lret
dec
fdivl
mov
and
cmc
shrl
and
inc
xchg
daa
test
dec
push
xor
pop
mov
js
sti
sarb
xor
loop
clc
pop
loopne
shrb
mov
lods
ret
arpl
sbb
cvtdq2ps
mov
insl
xor
mov
add
int
xchg
inc
mov
xor
dec
sahf
rcr
repz
cmpl
fistpl
pop
jae
push
dec
and
jl
cmpsl
ret
jne
add
xor
shrb
mov
loop
mov
lds
fstpl
sub
jp
and
dec
dec
ljmp
hlt
cwtl
xor
lahf
cli
sti
leave
int3
xchg
add
rcr
gs
and
je
loopne
jl
lock
inc
stos
push
dec
lods
xlat
in
dec
inc
add
and
outsb
push
jg
or
inc
aas
xchg
inc
mov
mov
sbb
cwtl
push
xor
cmp
and
cmpsb
jno
lds
mov
push
sbb
or
sarb
push
inc
dec
popa
pop
adc
pop
inc
pop
xchg
xchg
sbb
fnstenv
in
adc
dec
inc
jmp
loop
test
sub
mov
mov
in
arpl
jae
icebp
jl
je
out
outsl
je
popa
adc
outsb
push
lahf
movsl
inc
shrl
shl
in
xchg
mov
mov
scas
sbb
mov
cmp
loop
stos
jecxz
mov
and
adc
push
int3
pop
cmp
clc
aad
sbb
sbb
ret
outsl
cmpsl
adc
push
mov
xor
push
or
jbe
pop
jl
push
mov
test
pop
mov
inc
sub
lods
xchg
sbb
xchg
arpl
or
sub
cmp
cmp
lret
les
jmp
loopne
fbld
or
sbb
cmp
hlt
test
in
shll
movsb
xchg
dec
mov
pop
pusha
sbb
add
movsl
das
bound
mov
popf
shlb
cwtl
mov
std
inc
jmp
cmpsl
daa
shrb
outsb
ficoms
popa
movb
adc
add
push
mov
sbb
notl
jg
out
daa
ljmp
loope
rorl
popf
jmp
add
jl
into
mov
sbb
dec
and
pop
or
xor
dec
movsb
dec
insb
cmpsb
repnz
dec
je
cmpl
mov
or
add
inc
pushl
in
insl
dec
adc
jl
shll
int
mov
mov
add
jno
outsl
dec
sbb
dec
movsb
push
xchg
xchg
xchg
mov
arpl
mov
xlat
idiv
mov
mov
cmpsb
push
popa
inc
fdivs
arpl
inc
pop
lea
mov
daa
jae
rcll
pop
rol
ret
pop
aam
cli
movaps
paddusb
cmp
push
scas
sti
add
js
sahf
into
loop
mov
jb
or
fldt
fstpl
bnd
scas
mov
xchg
pop
xor
push
negl
shl
xor
jl
pop
rorl
cmp
adc
inc
dec
mov
ljmp
out
stos
hlt
mov
or
mov
push
movsl
jbe
dec
fwait
loopne
and
dec
pop
add
test
jne
psllq
imul
cmp
ljmp
lea
push
cmc
sbb
mov
cmpsl
daa
daa
in
es
inc
and
xor
out
js
aam
pop
cmp
sub
dec
dec
data16
fimuls
xchg
mov
pop
fistpll
add
movsb
repz
xor
sahf
push
cwtl
push
dec
hlt
fisttps
test
daa
or
jl
aad
pop
jle
and
data16
sbb
pop
mov
dec
sub
pop
sub
mov
mov
adcb
push
mov
test
out
mov
into
popa
xor
pop
adc
mov
lods
pop
cmp
sbb
jmp
repz
lcall
call
imul
sbb
adc
and
dec
mov
aad
and
call
xor
cmp
push
pushf
mov
xchg
lahf
das
xchg
std
adc
jbe
sub
test
mov
dec
adc
add
mov
adc
lahf
dec
mov
filds
pusha
rorl
and
xchg
adc
repnz
sub
movsl
cmpsb
xor
addr16
mov
add
or
sbb
daa
push
add
aad
xchg
mov
sbb
popf
sbb
les
leave
push
shr
jle
cmp
jle
pop
punpckhdq
inc
sbb
in
mov
in
fisubl
xor
jnp
fwait
loop
sbb
xor
leave
mov
inc
arpl
ss
sub
fmuls
stc
fs
or
push
fcompl
mov
rclb
mov
add
jne
gs
sub
fistl
push
jl
and
dec
rorl
mov
scas
imull
lret
and
mov
jp
xor
pop
test
mov
sahf
sub
mov
jo
in
jp
cmp
fbstp
xchg
adc
or
push
lock
xchg
dec
call
jne
dec
add
loopne
testl
enter
mov
outsb
jb
pop
std
mov
pushf
aam
xchg
mov
pop
cmc
dec
or
lds
lock
and
add
insl
push
call
pop
add
sbb
lods
paddw
fwait
addr16
xchg
lea
pop
flds
clc
xor
mov
in
cli
cwtl
int
call
push
pop
sbb
jp
and
lcall
mov
dec
xor
pusha
sbb
adc
subb
add
into
cmpsb
mov
mov
mov
xchg
pop
lock
lret
pusha
fmuls
es
daa
decl
pop
push
or
and
dec
lahf
testl
push
push
scas
mov
lods
pop
outsb
pop
icebp
inc
insl
fnstenv
sbb
xchg
jl
adc
cmpsb
in
movl
sbb
adc
dec
adc
sbb
lcall
inc
xchg
add
dec
pop
icebp
fsubrl
icebp
loop
jnp
and
cmp
clc
roll
dec
incb
mov
mov
cmc
mov
pushf
sub
pop
push
mov
lret
xor
sub
push
mov
movsb
das
lock
or
adcl
add
jecxz
in
clc
mov
cmp
jo
sub
mov
call
imul
test
xor
je
mov
adc
adc
arpl
push
iret
in
inc
pop
mov
jnp
cmp
pop
mov
fnstsw
mov
repnz
gs
push
xor
and
lock
mov
test
mov
fldenv
pop
scas
jno
lret
lea
add
outsb
xor
test
dec
orb
dec
test
xor
add
or
sbb
sbb
faddl
xchg
mov
mov
adc
dec
fs
mov
inc
sti
adc
std
out
sbb
lds
stc
fmull
jae
outsb
pop
out
add
or
add
push
mov
fimull
lahf
imul
pop
retw
mov
push
lock
mov
xor
ret
mov
cs
push
mov
mov
lock
xor
fisubl
adcb
pusha
out
adcl
add
cmp
cmc
mov
pop
imul
stos
popf
es
mov
lods
outsb
add
outsb
daa
push
in
adc
test
or
jl
std
fdivrl
incl
sbb
ja
in
roll
sub
out
xorl
sarb
push
mov
fimull
es
cmpl
lods
and
into
std
add
lret
fiadds
sbb
mov
jae
mov
outsb
dec
add
jbe
aas
outsl
enter
scas
push
popf
cs
xchg
jp
repnz
fisttpl
ds
addr16
jae
push
inc
outsl
xchg
adc
push
mov
sbb
fwait
dec
sti
ret
in
sbb
cli
imul
shrl
push
xchg
pop
add
push
fs
dec
inc
outsl
adc
lds
add
dec
and
mov
pop
lahf
addr16
pop
stos
xchg
notl
mov
push
sbb
cmp
out
xlat
xor
pop
push
das
inc
and
insb
xor
cmp
gs
enter
ficomps
cmp
push
jb
pusha
aad
popf
fisttps
or
fisttpl
lret
push
jmp
addb
int3
mov
or
push
scas
push
mov
in
arpl
gs
daa
fisubrl
cs
and
add
xlat
mov
cli
mov
inc
test
mov
es
lret
lea
jecxz
push
cld
jge
sbb
cli
out
stc
xor
les
cmpsb
outsl
adc
push
iret
out
flds
sti
xor
lds
data16
and
arpl
pop
jb
cmpb
inc
jnp
mov
xor
loope
daa
enter
xor
mov
clc
mov
pop
push
adc
inc
lea
mov
es
jno
std
fmull
jecxz
inc
clc
inc
dec
ljmp
push
pop
or
dec
out
add
push
loope
icebp
xor
sar
mov
mov
dec
ja
xchg
addb
pushf
rolb
xchg
cmp
cmpsl
inc
mov
push
cmpsl
aaa
mov
aaa
rolb
adc
daa
dec
lret
lods
sub
fstp
push
cli
cmp
push
out
movsb
mov
into
scas
gs
insb
mov
imul
inc
xchg
mov
stc
lcall
jae
push
cli
mov
push
fnstenv
xchg
inc
ficomps
outsb
dec
fucomip
addb
orl
or
ja
stc
testb
jns
add
mov
pop
fwait
mov
jb
dec
adc
repnz
pusha
xor
xchg
mov
popa
addr16
mov
xor
jne
jl
adc
add
addb
sbb
je
pop
shll
insb
mov
dec
adc
pop
xor
loop
mov
aad
pop
cmp
push
jns
lods
hlt
stc
repnz
sub
cmp
bound
mov
out
js
or
inc
inc
push
cld
sbb
sub
push
xchg
je
ds
std
pop
lds
loop
inc
stos
or
lret
lahf
ds
inc
jl
mov
adc
cmp
sbb
pop
push
stos
popf
adc
or
adc
das
fidivl
adc
and
lods
jge
movsb
outsl
rcll
sbb
jmp
je
ret
xchg
mov
int
hlt
mov
fyl2xp1
cmp
cmp
xlat
dec
xchg
leave
loopne
xor
xchg
cmpsl
mov
js
pop
jo
icebp
mov
sbb
cmpsl
iret
or
dec
cmp
sbb
pop
sub
ret
mov
sub
std
daa
lret
imul
aaa
pop
dec
xlat
xor
xor
ret
aad
push
repnz
cmc
hlt
xor
pop
push
loop
adc
movl
and
dec
enter
cld
or
popf
orb
loop
das
push
pusha
push
push
xor
push
jg
inc
xchg
pusha
out
lock
and
pop
ficompl
cmp
loopne
incl
xchg
int3
mov
test
sbbb
aad
and
dec
shrb
pop
mov
xchg
mov
ret
in
inc
fst
shll
pop
aad
mov
insb
pusha
dec
dec
mov
jle
gs
arpl
fcompl
sbb
mov
arpl
jl
das
fisttps
inc
adc
dec
or
xor
dec
jb
stos
sbb
jecxz
add
jno
mov
inc
test
jno
push
ljmp
xchg
mov
lret
fucomi
push
xlat
hlt
adc
lret
jecxz
mov
sub
xchg
jbe
fsubrs
ds
mov
nop
push
cli
adc
jno
cmpsl
mov
outsb
mov
mov
mov
cmpsb
mov
fidivl
push
adc
mov
mov
inc
pop
dec
or
sbb
push
std
cmp
addr16
mov
test
xor
fisubrs
ret
in
cmp
test
mov
jmp
rcr
aas
pop
rol
sub
mov
jmp
sbb
pop
rolb
mov
ret
iret
and
fwait
xor
add
mov
mov
and
outsb
mov
cmp
scas
jecxz
nop
dec
ret
add
cmpsb
pop
pop
sub
aas
cmp
mov
cmpsb
in
ret
jbe
adc
jl
dec
lcall
shl
mull
lods
dec
ret
shr
pop
sub
pop
sbb
pop
dec
pop
scas
mov
int3
insb
pushf
pusha
insl
fs
test
cmp
jo
push
xchg
stc
sbb
or
scas
stc
fsqrt
cmpl
ror
stc
popf
mov
xchg
in
add
mov
jns
xchg
scas
jmp
pop
data16
xchg
test
sar
sub
jbe
icebp
es
jb
dec
jbe
mov
jae
jbe
test
addr16
jp
fsubs
out
fcoms
add
scas
cmp
inc
fistps
cmc
adc
mov
xor
xchg
pop
push
xor
repz
xchg
jmp
cmp
adc
pop
mov
mov
push
adc
sbb
xchg
mov
mov
aam
cmc
enter
mov
stos
add
cwtl
jge
mov
test
xchg
inc
jnp
sub
mov
sbb
ficomps
roll
pop
sar
mov
mov
fiaddl
inc
inc
xchg
cmpsb
or
xor
scas
enter
scas
hlt
cmp
loop
out
scas
cmp
inc
repnz
adc
xchg
cmp
cmc
cwtl
shl
cmp
mov
cltd
inc
fisubrl
cmp
dec
dec
mov
add
xor
out
cs
mov
adc
cmpsb
pop
cmp
orl
adc
cmp
adc
addr16
stc
insl
ds
repnz
cs
jo
pushf
das
test
jmp
inc
outsl
and
imul
sub
pop
sbb
mov
adc
inc
and
in
push
hlt
push
sub
inc
push
and
xchg
add
ret
cltd
mov
pop
xchg
mov
jnp
xchg
push
ss
jnp
pop
test
cli
mov
hlt
loop
stos
fisttps
cmp
sbb
mov
lcall
xor
push
mov
nop
test
outsb
lret
fisubs
clc
fcomi
mov
or
rcrb
mov
ret
xchg
sti
out
mov
jmp
fisttpl
movsl
aad
push
push
pusha
mov
cmpb
aam
mov
push
cmpsl
mov
mov
lds
jno
xchg
lahf
inc
rcll
mov
xor
aas
push
adcl
adc
mov
jmp
idivb
mov
inc
xchg
mov
daa
sub
mov
repz
jnp
jg
xchg
loopne
ljmp
cmp
cmp
push
mov
xchg
push
fcmovnu
mov
ficoms
fildll
outsl
sub
fdivrs
mov
test
scas
inc
dec
bound
leave
mov
pop
lea
adc
loop
fisubs
sar
dec
ret
push
rolb
insb
lock
cmpsl
push
out
jnp
bound
jge
lahf
test
add
in
out
testb
adc
ja
js
sub
mov
jl
pop
lret
add
out
pop
lock
cmpsl
inc
hlt
adc
test
mov
out
adc
mov
add
mov
iret
mov
das
dec
xchg
dec
cmp
das
ljmp
pusha
xor
mov
imul
xchg
pop
lock
popf
push
add
cmp
adc
sbb
cmp
maskmovq
divl
and
mov
repnz
xchg
add
jb
mov
lret
xchg
js
scas
pop
mov
in
or
loop
xchg
sti
sub
xlat
adc
dec
ja
or
mov
xchg
pop
cwtl
cmp
fcoml
sub
push
sbb
jne
hlt
popa
cmpsl
or
cltd
cltd
xchg
clc
test
lods
cmpl
inc
inc
inc
inc
cmpsb
rcrl
adc
test
mov
or
dec
add
mov
add
dec
adc
insl
push
movsl
lret
fimuls
xchg
inc
xlat
push
jle
fiadds
or
xchg
sbb
call
lret
popf
push
bswap
test
pop
push
mov
pop
in
in
mov
lock
dec
mov
pop
or
xor
sub
jl
adc
aaa
icebp
mov
mov
mov
inc
sub
mov
cmp
mov
mov
or
or
hlt
and
mov
lea
or
xchg
mov
sub
or
shr
pop
or
scas
push
cmp
ret
xchg
fnstenv
or
ljmp
sub
and
popf
imul
lds
imul
push
out
mov
adc
enter
sbb
std
or
insb
in
aas
fstpl
rolb
test
jg
insb
jge
frstor
cmp
mov
push
faddl
or
mov
push
test
add
sub
cmp
int3
pop
or
int3
out
xchg
cmc
leave
lret
mov
in
sub
adc
mov
bswap
aaa
xchg
ret
mov
iret
and
jmp
adc
inc
mov
mov
aad
ret
and
iret
cmp
sbb
adc
jge
bound
lret
ja
and
xchg
and
mov
stos
jg
scas
mov
sahf
ljmp
mov
dec
mov
cmpsb
sbb
popa
cmp
sub
loope
gs
arpl
pop
sub
ljmp
xor
std
or
add
xor
xchg
mov
mov
xchg
ret
adc
pop
pushf
fildl
jmp
jecxz
pusha
jns
lcall
push
sub
push
in
push
mov
sub
mov
add
shrb
sbb
pop
js
pop
in
fisubs
es
out
inc
out
push
out
mov
jmp
inc
sub
xchg
sbb
out
sub
sbb
adc
xchg
push
pop
iret
push
or
fnstcw
frstor
xor
in
push
push
add
aas
jp
cld
add
cld
dec
hlt
mov
fs
mov
xor
cltd
xchg
fbld
push
aam
hlt
cmp
mov
sbb
leave
data16
aaa
adc
push
mov
push
xchg
mov
add
mov
cld
cmc
clc
hlt
or
pop
xchg
cmpl
scas
lcall
in
and
jp
mov
xor
push
gs
jae
dec
mov
cmc
jns
int3
mov
movsb
push
inc
sbb
ljmp
insl
jmp
rorl
or
in
dec
fildll
lea
loopne
mov
jp
jg
or
dec
xor
mov
inc
push
ljmp
mov
aam
fistpll
adc
sbb
idiv
push
dec
sub
das
mov
xchg
pop
clc
xor
bound
pop
mov
call
mov
or
jne
sbb
dec
push
and
pop
in
inc
lret
roll
mov
cmc
mov
xor
mov
mov
int3
mov
cmp
call
jg
or
jmp
mov
int
inc
fisttpl
pop
fucomip
inc
adcb
movsb
jnp
mov
add
fiaddl
sub
adc
mov
dec
in
push
xor
sbb
xor
test
pop
cmp
imul
dec
mov
xchg
mov
cmp
daa
pushw
mov
sbb
adc
leave
loop
adc
xchg
mov
sbb
in
inc
addl
dec
sarl
jecxz
jl
call
lods
lock
xor
mov
sub
adc
jle
xchg
mov
bound
lret
sbb
aas
ret
outsb
sbb
pop
fldl
and
testl
cmpsb
push
mov
lahf
ficoml
lahf
stos
xchg
aam
les
imul
loope
push
filds
xchg
dec
incl
add
lea
dec
pop
jnp
jl
ja
and
in
sbb
call
aam
mov
ret
movsb
and
cmp
pop
xchg
sarl
mov
inc
fwait
mov
or
pop
dec
call
mov
pop
xor
icebp
jbe
test
xchg
xor
inc
or
mov
push
outsl
jg
clc
push
cmc
js
jp
lret
mov
jecxz
cld
add
push
clc
pop
pop
push
mov
push
dec
std
adc
scas
fistpl
stc
lods
call
sbb
insb
pop
push
push
arpl
ja
jmp
popa
mov
dec
mov
adc
xor
lods
stos
or
fldt
cmp
inc
rcrl
jge
into
loopne
insl
or
test
imul
ret
pop
cmc
ja
sub
push
and
stos
ljmp
jnp
pop
inc
movb
cltd
rclb
dec
pusha
mov
jmp
daa
cwtl
int
dec
or
dec
repz
push
sub
fldcw
mov
out
xchg
xchg
xor
int3
mov
pop
insb
cmp
push
adc
fs
movsb
stc
pop
pop
pop
pop
pop
inc
sbb
jo
jo
insb
adc
push
mov
sbb
lock
movsl
mov
jne
lea
push
adc
movsl
jno
xor
clc
xor
cld
shlb
in
xchg
sub
dec
mov
add
cmp
xchg
dec
outsb
mov
jb
push
mov
add
xchg
loope
pop
loop
fwait
leave
mov
mov
aaa
scas
jo
cli
sub
nop
sub
mov
xor
cmc
jl
mov
movsl
call
cmpsb
fistpl
inc
mov
or
cld
pop
pop
mov
cmp
mov
sub
xor
mov
inc
pusha
fwait
inc
sub
mov
aaa
add
sub
test
mov
sub
pop
pop
lcall
ja
cmpb
push
xchg
in
jmp
icebp
push
xchg
cmc
mov
push
push
and
push
inc
in
push
call
xlat
mov
inc
fcmove
mov
mov
insb
push
lods
repnz
ljmp
push
push
mov
es
adc
fcomi
xchg
mov
push
jnp
pop
out
fisubl
dec
jbe
fdivr
cmp
jecxz
mov
mov
das
rolb
subb
jle
mov
fidivrs
pusha
dec
sub
cmpsl
or
push
cmpsl
sub
adc
in
xchg
faddl
leave
ljmp
mov
cmp
in
adc
std
jo
add
iret
pop
sub
gs
fsubs
cmpsb
push
jnp
scas
fstpt
popf
in
arpl
add
aas
das
push
lods
jp
cmpsb
and
mov
lock
mov
mov
push
add
inc
mov
adc
je
movsb
sahf
and
sub
mov
outsl
in
cmp
or
dec
xor
mov
es
arpl
daa
mov
xchg
test
gs
call
imul
andb
pop
shlb
inc
shll
cltd
and
fwait
adc
jno
imul
ja
fisubrs
xchg
jnp
mov
or
inc
push
fwait
outsl
movsb
jg
push
mov
jno
jecxz
push
or
or
addr16
lods
jnp
repz
push
loop
outsl
add
lret
sbb
xor
and
pusha
clc
outsl
je
mov
xchg
jle
cmp
add
pop
popf
xchg
cs
xlat
mov
outsb
sub
adc
sub
cmp
enter
cmp
mov
or
push
dec
data16
lret
mov
inc
mov
jmp
arpl
sub
pushl
iret
cmp
es
fildl
dec
dec
sti
fisttpl
cli
xor
repz
add
bound
popf
outsb
lods
je
lock
out
movsl
loopne
jg
fldl
imul
push
rcrb
or
hlt
dec
push
mov
adc
xor
adc
jmp
sbb
pusha
call
rcrl
in
fcomps
cmpsb
jmp
into
xchg
outsl
ss
repnz
inc
call
xor
mov
add
push
jle
subb
out
push
or
add
into
lahf
xchg
mov
xchg
into
inc
mov
xor
sbb
add
divb
push
cmp
xchg
mov
cmp
sahf
je
push
fwait
xor
sar
mov
std
shl
mov
jp
stos
xchg
or
movsb
dec
arpl
or
movsb
mov
inc
pop
sub
lods
pop
xor
out
inc
cmp
sarl
sahf
push
lods
fists
pop
imul
std
inc
cmpsb
loop
mov
ds
xchg
or
insb
mov
cwtl
xor
dec
mov
dec
cmpsl
aaa
hlt
sbb
bound
lock
inc
dec
inc
fstl
add
adc
cwtl
stc
aaa
adc
dec
nop
adc
or
ljmp
add
jle
mov
mov
xor
inc
jmp
pop
inc
sub
cmp
sub
mov
shll
ljmp
scas
mov
icebp
outsl
cmp
pushf
das
jle
or
scas
pop
sbb
push
int
cmpsb
sbb
lock
outsb
jne
leave
xor
fsubl
push
sbb
dec
sbb
push
or
mov
fsts
pusha
xor
jo
repnz
cmp
dec
je
jne
mov
mov
outsl
hlt
rorb
jle
stos
dec
xor
sahf
aad
test
xchg
pusha
cmc
inc
out
add
cltd
dec
scas
xchg
xchg
adc
cmp
ficomps
add
loop
push
lds
jmp
mov
je
mov
dec
scas
xor
mov
xor
sbb
jae
lahf
or
pop
lods
scas
mov
xor
call
mov
jno
pop
out
sbb
subb
jb
mov
sub
pop
repnz
add
push
mov
cmpsl
sub
lods
loope
or
xchg
out
adc
lods
pop
jb
dec
insl
add
xor
add
outsl
je
dec
cwtl
rorl
js
fmull
pop
pusha
in
cli
sub
mov
mov
push
mov
mov
jle
ljmp
and
in
in
inc
popf
mov
dec
pop
sbb
add
mul
divb
sub
fmuls
push
push
inc
in
aam
in
xchg
sub
sbb
popa
in
ficompl
jmp
cmp
sbb
pop
pop
jge
pop
sub
adc
xor
xchg
jle
mov
pop
sarl
in
sbb
stos
mov
add
mov
push
fnstsw
cmp
into
sbb
mov
inc
rol
inc
ljmp
inc
cmp
add
mov
rol
fldenv
int
dec
pop
push
push
add
lret
adcb
sbbl
push
mov
xor
movl
inc
mov
inc
mov
repnz
adc
mov
nop
pop
mov
mov
out
fists
jg
icebp
pop
test
es
ret
bnd
roll
mov
push
jnp
jmp
rcrb
sub
cmpsl
out
ljmp
sub
xchg
xor
and
dec
test
loope
imul
dec
stos
push
js
xchg
mov
dec
pop
outsb
xorl
add
pop
dec
jg
lret
ss
xchg
dec
jecxz
out
js
dec
inc
ret
imul
imul
mov
fwait
arpl
dec
fildl
mov
fiadds
mov
xchg
adc
call
imul
fs
lahf
sub
push
bnd
test
jmp
dec
ja
call
ret
xchg
and
loopne
int3
sahf
fnsave
jns
push
ss
incb
mov
dec
cltd
xlat
jecxz
clc
pusha
mov
ljmp
fcomip
mov
rclb
call
popf
cs
sbbb
mov
shl
sub
loop
test
mov
test
enter
jne
je
push
mov
pop
mov
out
mov
mov
adc
jnp
hlt
fs
pop
sub
in
in
cmpsb
imul
testb
loope
jp
repz
cmp
adc
loop
mov
fbld
popa
or
dec
pop
cmpsb
adc
xchg
mov
pusha
inc
lods
imul
mov
cmpb
testl
pop
sub
cmp
pop
or
lahf
shll
mov
flds
push
lret
out
aas
ret
das
test
push
inc
jbe
outsb
adc
jb
movsb
xor
int3
jge
enter
pop
fidivrs
mov
das
jmp
lcall
sbb
xor
mov
jmp
jmp
ljmp
mov
mov
imul
in
xor
push
pop
inc
add
push
jno
cmc
mov
scas
xchg
dec
fisubrl
inc
fcmovnbe
mov
cmpsl
shr
xor
cmp
sti
pop
in
fnstsw
les
pushf
lock
cli
jecxz
gs
mov
and
sbb
shrl
loop
out
adc
and
add
dec
mov
aam
sbb
int
and
popl
jmp
dec
cli
pop
stc
mov
mov
movsb
or
mov
mov
pop
scas
dec
xor
dec
cs
pushf
into
test
clc
add
movsl
fld
adc
arpl
pop
mov
dec
add
insb
or
decb
int3
push
lods
add
pop
push
call
adc
orl
scas
shlb
clc
cwtl
loopnew
or
xor
out
pop
cmc
cld
add
mov
push
scas
sahf
inc
mov
les
fisttpl
sti
decb
mov
fisttpl
mov
inc
mov
jb
push
sub
rol
dec
xor
dec
dec
inc
mov
or
xchg
and
data16
sub
les
inc
xchg
shlb
or
xor
pop
xorl
clc
jl
dec
cltd
shl
ljmp
gs
ja
fists
loopne
dec
xchg
or
jne
dec
mov
xchg
ror
cmp
loope
lods
sbb
push
jae
jb
xor
dec
jne
loope
mov
xor
das
xor
xchg
subb
and
pop
call
jg
sbb
adc
add
push
stc
inc
aam
sbb
push
push
clc
ja
fildll
and
lret
xor
sbb
sbb
loope
cld
rorl
sbb
mov
test
adc
inc
dec
outsl
xlat
jge
arpl
pop
rclb
jae
adc
push
add
arpl
sbb
mov
pop
cmp
pop
xor
iret
jne
mov
lods
popl
pop
ficomps
je
lret
popf
ss
or
push
and
testb
cmp
sbb
sbb
jns
repnz
arpl
out
imul
int
pop
or
lea
dec
stos
xchg
mov
xor
jbe
enter
fcomip
iret
jne
jmp
adc
adc
shlb
push
push
cmpsb
xchg
cli
xchg
cltd
jle
push
es
mov
pop
mov
aas
cmp
cmp
inc
mov
scas
or
imul
cmp
btc
push
popf
mov
pop
pop
aam
outsl
push
data16
fwait
inc
sahf
stos
xor
mov
scas
popf
in
loop
mov
xor
cs
stos
jbe
cmp
out
sub
pop
jne
cmp
out
mov
ret
fdivrs
sub
xchg
in
push
aas
aas
inc
add
xchg
cmp
inc
ljmp
cmp
sbb
std
dec
sub
mov
repz
jmp
mov
lock
lahf
cld
test
popa
sbb
mov
cmp
mov
test
pop
xchg
ret
shlb
cmovnp
movsl
je
xchg
xchg
sbb
sub
cmp
xchg
dec
jmp
mov
pop
fdivr
test
xchg
dec
xchg
sub
orb
int3
mov
int3
roll
inc
repnz
lret
mov
jle
shl
iret
xchg
pop
mov
or
cli
xor
add
adc
sbb
test
jle
icebp
enter
std
dec
lods
sti
adc
xor
and
loopne
jo
mov
aas
or
test
rcrb
or
mov
fcoms
cmp
and
pushf
imul
and
add
push
das
rep
inc
mov
and
mov
add
adcl
or
ja
mov
or
aaa
mov
stc
push
mov
xor
fcmovu
lods
insl
pushw
inc
aas
cmp
bound
lret
pop
outsb
or
fcomp
push
int
xor
rcrb
ljmp
mov
ds
dec
push
popa
sbb
fnstenv
add
fsubl
lds
pop
jae
jmp
pop
pusha
pop
iret
cmpsb
ss
outsb
lock
or
cmp
mov
pop
outsl
cmp
and
and
pusha
jle
mov
jle
movsl
scas
sbb
mov
hlt
cmpsb
and
cmp
loopne
sbb
popa
out
push
xor
cmp
sbb
gs
js
ficomps
daa
ljmp
data16
jmp
sbb
lock
jns
cmp
test
adc
sarl
mov
sti
mov
insb
dec
push
fcoms
push
insb
xor
jb
cld
or
adcb
push
dec
xchg
out
or
push
push
out
call
cli
iret
adc
rep
jo
add
dec
pop
aad
andb
sarb
lods
jne
mov
cmp
std
push
inc
push
cmp
rcl
xchg
or
xchg
or
rorl
push
sbb
cmp
mov
add
fistl
rolb
je
aad
test
mov
cmc
iret
push
lahf
pop
or
aam
repz
in
iret
imul
aam
mov
sbb
ret
push
cmp
xchg
xlat
push
lea
and
add
popa
xchg
stos
fnsave
jecxz
mull
jg
jo
inc
or
push
fcomps
pushl
mov
jne
adc
adc
movsl
or
push
cmp
out
mov
hlt
mov
push
imul
inc
or
pop
aas
push
jp
jecxz
dec
sbb
je
and
push
outsl
fiaddl
push
or
sahf
jnp
ja
stc
adc
sarl
pop
gs
jl
inc
mov
nop
cld
adc
das
mov
inc
jg
pop
call
push
out
sbb
in
popf
jno
lds
push
sbb
cmp
fidivs
sbb
pop
adc
call
dec
iret
push
add
push
jns
repz
fisubl
cmp
std
push
popf
inc
dec
push
jmp
and
mov
sub
mov
jbe
jp
dec
popa
mov
test
shlb
in
sahf
addb
loope
clc
popf
cs
rclb
jno
xor
hlt
or
jne
push
cwtl
jne
sub
arpl
mov
outsl
icebp
inc
xor
repz
rolb
sbb
jge
cltd
ret
adc
int3
push
adc
stos
inc
jle
fisttpll
xchg
movnti
lds
fimull
ss
jge
sbb
enter
and
mov
jo
outsb
cmp
cmp
or
sahf
adc
mov
cmp
and
outsb
xchg
mov
xor
dec
sar
xor
adc
mov
mov
and
add
shlb
cmovae
inc
push
mov
jbe
pop
adc
scas
inc
insl
cmpsb
mov
sahf
inc
enter
add
loope
cmp
push
arpl
pop
ret
lods
mov
lret
mov
push
xchg
iret
cmp
pop
je
out
test
insl
popa
mov
lock
inc
jo
call
jno
lahf
int
and
sbb
imul
push
fbstp
iret
sarl
dec
es
pop
mov
out
mov
pop
jle
xchg
xor
mov
or
movsb
xchg
iret
cmpb
in
dec
shrb
mov
mov
gs
and
mov
push
sub
cmp
fcomi
ud0
jmp
pop
loopne
repz
fistpl
addr16
out
cmp
cli
fisubrs
dec
xor
orb
sti
hlt
mov
fidivrs
lcall
xchg
loop
xchg
sbb
jle
push
outsb
adc
xor
lahf
aam
xor
pop
mov
cmp
jnp
lock
in
push
lcall
xchg
je
lock
out
mov
cltd
or
jg
pusha
ds
mov
clc
outsb
mov
ret
mov
cwtl
push
push
inc
mov
push
pop
dec
icebp
js
and
mov
mov
xor
popf
or
sub
or
aam
mov
push
pop
pushf
insl
or
sbb
insb
jmp
push
sub
test
enter
cmp
cmp
stos
jecxz
notb
mov
dec
mov
adc
hlt
stos
repnz
inc
fwait
mov
rol
and
in
or
ret
adc
adc
cltd
add
fs
dec
jmp
imul
dec
pop
xchg
or
adc
adc
mov
ret
sub
pop
imul
xor
jno
cmpsl
mov
dec
je
and
sub
inc
mov
aam
push
inc
jo
mov
add
ret
push
sarl
sbb
jno
inc
scas
dec
xchg
mov
xchg
js
cmp
add
mov
loope
xchg
data16
adc
mov
in
mov
adc
fcomi
lret
mov
repz
pushf
xchg
mov
stos
xor
and
mov
jne
ss
out
clc
pop
std
cmpsl
push
sub
mov
movsb
xchg
ja
stos
cmp
sub
inc
push
insb
adc
jno
mov
out
push
or
cmp
cltd
ret
movsl
dec
jae
jb
xor
clc
pop
and
xor
jecxz
lret
pop
pop
lds
std
or
ss
rcll
pop
movsb
push
pop
sub
xor
add
pop
pop
pop
mov
in
mov
push
aam
testl
jo
xchg
mov
ja
mov
divb
test
fidivs
ret
hlt
or
aam
cwtl
shrb
pop
cs
aad
mulb
cltd
mov
in
inc
testl
xor
add
inc
mov
inc
cli
mov
mov
xlat
mov
and
dec
adc
sbb
aaa
lret
inc
mov
lcall
mov
js
push
insb
jmp
ds
loop
insb
mov
sbb
leave
or
outsl
sahf
inc
adc
push
push
insb
mov
jb
pop
fisubrs
sub
insl
mov
push
inc
mov
xor
pop
cmpsb
into
xor
pop
ja
inc
jecxz
xchg
and
add
push
push
xlat
mov
daa
movsb
insl
pop
adc
adc
sbb
jnp
xorl
addl
fmul
dec
and
scas
mov
das
cmc
mov
repz
xchg
xchg
cwtl
ret
xchg
jns
pop
into
adcb
andb
sbb
cli
repnz
ja
enter
cmp
pop
fwait
mov
sti
sbb
inc
inc
in
imul
lahf
pusha
inc
inc
cmp
adc
mov
pusha
fdivrl
adc
mov
mov
stos
jmp
xchg
outsb
push
mov
dec
dec
out
shlb
pop
jl
pop
and
je
inc
dec
inc
adc
or
out
pop
push
lock
insl
cmp
enter
fucomip
out
mov
sahf
mov
add
loope
push
push
inc
in
ret
filds
loopne
pushf
inc
out
sbb
lea
or
dec
mov
ljmp
sub
ja
loop
js
push
push
xor
mov
js
cli
lea
jge
lret
xchg
hlt
dec
inc
int
movsb
ljmpw
jno
stos
aam
pop
pop
in
mov
pop
sub
fdivr
mov
lods
rcrb
pop
fcompl
in
repz
sti
shl
pop
pop
xchg
into
arpl
xchg
pop
repnz
rorb
mov
mov
jl
imul
pusha
cld
pushf
lcall
test
or
jl
out
push
mov
push
je
jo
pop
ror
pusha
or
lock
sbb
jae
dec
into
or
xor
imul
xchg
lods
sbb
outsb
xor
lods
push
std
add
call
jb
xchg
ds
cmp
mov
das
sti
ret
mov
inc
inc
pop
adc
stc
aaa
cmp
out
mov
and
pop
lds
fwait
mov
lea
fdivrl
and
stos
xor
std
aam
das
enter
cmc
mov
sub
mov
stos
dec
inc
es
leave
push
insl
inc
jb
sbb
pop
insb
push
adc
xchg
inc
or
add
js
negb
int3
mov
outsb
data16
ljmp
movsl
int3
mov
adc
add
subb
scas
fsubs
je
cmp
sbb
ficoms
mov
pop
mov
push
popf
loope
mov
ror
clc
dec
scas
mov
in
ljmp
pop
cli
fildll
rorl
inc
push
test
push
test
add
es
sbb
rol
movsl
test
adc
fldl
jecxz
cmpsl
stos
cmc
aad
mul
pop
mov
cld
push
les
push
mov
aam
repz
lods
psllq
scas
in
test
lret
loopne
adc
and
cmc
cmp
movsb
int
ss
cmp
mov
mov
cmp
sahf
pop
push
cmp
inc
dec
pop
stos
arpl
cmpsb
sbb
xlat
adc
out
add
push
mov
lahf
jb
aad
out
sti
jl
xlat
repnz
inc
sub
sub
outsl
daa
aad
jl
mov
mov
and
add
es
xor
push
popa
add
fldl
push
jp
rcrb
arpl
jbe
xor
das
pop
jns
jecxz
jne
shll
xor
ret
pop
sub
inc
pushf
cmpsb
in
test
out
and
mov
test
cmpsb
imul
jmp
sub
jge
adcl
jno
push
xchg
inc
fs
repnz
dec
stc
adc
out
lahf
cmp
imul
lret
mov
lahf
mov
movb
stos
inc
out
or
adcb
jge
jecxz
rcl
mov
jl
dec
mov
mov
xor
clc
lods
inc
and
sbb
sbb
mov
push
int
or
js
sub
and
loop
scas
out
xchg
das
je
jns
mov
jle
mov
xor
aad
movsb
incl
sbb
int3
dec
arpl
add
cmpsl
cld
sub
add
mov
loopne
es
movsl
xchg
jne
mov
jbe
lahf
dec
xor
nop
repz
fwait
add
sbb
fdivs
outsb
aad
sbb
mov
loop
dec
div
aad
pop
test
sub
and
dec
adc
cs
mov
insl
cli
sarb
test
add
popf
cmpsb
iret
pusha
jnp
xor
aam
inc
push
popf
cmp
and
xor
mov
js
jo
add
scas
mov
call
aad
jecxz
mov
sub
out
push
mov
pusha
mov
les
popf
lods
mov
cmp
fxch
pop
jmp
pop
push
fdivrl
jg
cmp
push
lods
jns
mov
test
pop
sbb
cmp
cmp
sar
push
lods
mov
mov
jmp
push
lock
fldenv
sub
fcmovnbe
ret
add
shl
ret
mov
lea
push
jl
or
rorb
push
insb
sbb
inc
xchg
push
xor
pop
jnp
mov
adc
jo
out
sahf
sub
ret
fidivrl
cwtl
subl
push
movsb
outsb
lcall
aad
jp
xchg
bound
and
jmp
xchg
or
xchg
sub
sub
dec
into
sub
and
adc
sub
jge
sar
dec
movsl
cmpsb
cmpsl
xlat
pop
je
xor
mov
cmp
das
jmp
fisttps
icebp
out
loop
insl
ficoml
push
xchg
and
stos
adc
add
testl
pop
pcmpgtb
cwtl
jle
orb
sbb
ret
jmp
cmc
nop
xchg
lcall
shlb
add
fldcw
pop
mov
xor
add
mov
sub
mov
bnd
xor
addr16
mov
push
fxch
pop
call
cmp
adc
das
fmull
into
in
mov
and
stos
cmp
pop
mov
psadbw
xor
pop
add
sub
inc
pop
fs
mov
mov
leave
out
jle
jecxz
daa
push
popa
popf
sarl
mov
or
gs
adc
mov
mov
push
out
xor
sahf
aas
inc
scas
or
sub
ret
mov
lods
je
or
inc
cmpsb
push
and
int3
sbb
loop
add
pop
push
cmpsb
mov
mov
cmpsl
and
fimull
and
and
xor
xchg
dec
rcr
sub
stc
sub
jb
mov
add
cmpsl
aad
add
shll
outsl
xchg
scas
pushf
ljmp
add
push
push
mov
fistpl
cmp
mov
dec
pop
mov
jg
std
push
pop
inc
sub
test
xchg
das
push
xchg
out
mov
jnp
pop
sub
inc
je
fldt
jb
ret
inc
cs
adc
sbb
mov
mov
adcl
jecxz
jae
sub
sub
loopne
push
jge
sub
mov
mov
adc
mov
xlat
add
mov
adc
cwtl
aas
xchg
ss
jo
sub
lods
daa
into
xor
nop
mov
cmp
repz
push
jne
add
jae
cmc
mov
sarb
jmp
jl
pop
or
and
sbb
in
adc
das
ss
xor
sub
dec
cltd
dec
mov
cmpsl
cmp
in
iret
test
jle
in
inc
in
imul
xchg
add
in
push
mov
repz
xchg
push
sar
les
mov
ss
and
fmuls
aad
fldenv
sbb
mov
inc
cmp
scas
and
mov
sbb
jae
int
push
xlat
ret
cmp
mov
pusha
daa
xor
xorl
adc
ljmp
mov
mov
fisubl
mov
cmp
int3
data16
int3
inc
insb
jge
pop
xor
sub
mov
pop
or
loope
jge
pop
dec
ds
push
mov
xor
leave
mov
int3
sub
xchg
xor
mov
jbe
in
fisttpll
test
or
pop
jbe
inc
and
stos
lcall
add
or
mov
int
imul
ljmp
mov
call
xchg
lret
xor
fwait
and
dec
dec
jmp
loope
dec
jge
jmp
lret
inc
dec
pop
lahf
pop
mov
out
mov
adc
mov
loopne
add
loope
arpl
sub
xor
das
adc
out
adc
and
xchg
pusha
ret
adcl
add
lods
xlat
cmc
shrl
xor
cmp
ss
inc
lcall
sbb
mov
xor
cmp
aam
mov
shrl
popa
push
cmc
mov
outsl
sbb
inc
das
testb
les
daa
mov
dec
jae
movsb
imul
pop
add
xor
pop
and
inc
jmp
jmp
lods
push
or
cltd
jg
call
mov
out
mul
mov
pusha
sbb
clc
out
cmpsl
push
out
mov
loop
popfw
insl
sahf
add
dec
dec
shlb
jg
dec
lods
pop
push
pop
mov
out
mov
jbe
shlb
adc
insb
or
and
and
mov
xlat
sbb
outsl
mov
das
cld
in
sub
sbb
std
xor
xor
sub
fstpl
dec
cmpsb
sub
clc
cmp
xchg
add
jecxz
cltd
inc
or
fsubl
or
mov
mov
movsl
and
jle
jns
push
inc
sbb
lock
mov
leave
insl
pop
aam
and
cmp
add
inc
scas
and
rol
push
pop
out
leave
ja
fildl
xchg
lea
push
pop
jmp
xlat
dec
cmpsl
decl
lods
mov
jecxz
cmp
icebp
cmp
jne
bswap
adc
jnp
bound
mov
xchg
xlat
sbb
cmpb
cmp
fistpl
cmp
lock
mov
sub
test
mov
fisubl
xchg
dec
rcll
std
add
xor
xchg
xor
loopne
pop
pop
ficoml
mov
in
push
adc
rorl
pop
aas
jge
jo
cmp
jns
rclb
jo
outsl
xchg
xor
or
fiaddl
rcrb
adc
out
or
and
test
cmp
or
push
or
push
mov
mov
cs
push
sbb
dec
push
movsb
jl
add
inc
and
sbb
test
adc
dec
sti
push
jbe
out
mov
ljmp
cmpsl
and
sub
aas
pop
in
sti
cltd
lods
lock
mov
divb
jle
add
cwtl
mov
negl
js
push
fists
shll
push
test
dec
es
in
xor
sahf
jno
pop
clc
cmc
sbb
and
xchg
mov
pop
lret
push
pop
je
xor
add
adc
pop
and
dec
or
pop
adc
push
aam
jl
inc
cld
into
int3
clc
add
sbb
stc
fildl
jecxz
stos
imul
add
jae
movsl
inc
jp
mov
imul
popf
pop
cwtl
outsb
mov
pop
jl
cmp
fisubs
inc
mov
aad
cmp
xlat
pop
sti
jne
sub
add
dec
stos
pop
mov
adc
or
inc
dec
popf
push
lock
adc
lcall
fimuls
in
fimull
loop
push
sti
das
loopne
jle
push
filds
sbb
imul
cmc
seto
addr16
cmpsl
jnp
cmp
stc
lcall
fs
fs
jnp
mov
int3
push
mov
jle
mov
jae
subl
lods
faddp
xor
ret
fsub
mov
cmp
push
push
mov
jmp
rep
dec
pop
ret
and
mov
sbb
mov
icebp
dec
dec
les
push
xchg
sbb
aas
inc
and
into
mov
decl
xchg
mov
cmp
lock
mov
jg
rcll
cltd
xchg
mov
cwtl
push
jmp
fldcw
push
test
add
nop
push
sbb
and
sbb
pop
xchg
push
mov
lcall
cs
aad
pop
push
test
sti
and
fisttpll
add
xchg
lock
or
sub
int3
xchg
dec
mul
bound
dec
or
rclb
pop
in
addr16
or
cltd
shrb
cld
mov
in
in
lahf
push
dec
outsb
xchg
test
pusha
mov
cmpsl
add
or
and
fdiv
mov
ret
cmp
jmp
cmpsl
or
push
insb
push
fnstenv
pop
lret
scas
shrb
sub
cmpsl
out
jl
rcrl
cwtl
push
int3
inc
ss
das
pop
loopne
push
loop
xchg
inc
into
cli
cli
lret
inc
ret
push
cld
mov
in
and
in
into
jecxz
inc
stc
inc
add
jne
jecxz
scas
dec
cltd
lock
jecxz
scas
cmp
addr16
frstor
hlt
mov
xchg
call
cmp
push
adc
or
push
cltd
imul
loop
and
mov
xlat
xor
scas
dec
push
sbb
popa
jne
scas
lea
mov
fcmove
popf
mov
push
repnz
shl
icebp
mov
rcrb
sub
inc
jmp
push
mov
sbb
fdivrs
aam
cmpsl
data16
inc
cltd
lcall
mov
or
popf
cltd
lock
or
ds
sbb
movsl
mov
fucom
sub
insl
incl
xor
mov
xchg
std
xchg
popf
sbb
sub
push
dec
jnp
sbb
pop
inc
xor
mov
sahf
or
dec
shlb
cmpsl
lds
mov
jmp
jg
push
movsb
icebp
mov
popa
or
mov
pop
jno
js
hlt
cmpsl
sar
xchg
outsl
mov
andb
paddd
xchg
push
loopne
sub
dec
ret
int
call
out
mov
jne
xchg
jno
cwtl
sub
adc
xchg
cmp
mov
mov
push
add
inc
out
and
popa
and
loopne
xor
shlb
xor
jl
push
cmp
add
cmp
jmp
adc
pop
fistpl
icebp
pop
gs
mov
ja
das
data16
adc
loope
mov
dec
and
clc
jle
fmull
mov
in
mov
add
std
push
in
loopne
xchg
push
inc
mov
sbb
pop
mov
sbb
xorb
shll
xchg
orb
fdiv
and
ret
mov
icebp
test
ret
xchg
out
mov
cmpsl
and
data16
mov
jl
das
outsb
bound
mov
mov
pop
jge
sbb
and
sbb
mov
or
pop
loope
or
jge
scas
nop
adc
mov
out
arpl
adc
aam
cld
and
sub
das
push
rorb
sbb
popf
test
aas
mov
out
xlat
and
or
pop
movsl
pushf
into
pop
out
sbb
ss
stos
jecxz
mov
aas
lahf
test
in
pop
in
cld
push
shl
mov
jle
push
popf
adc
sbb
dec
ret
inc
mov
or
and
xadd
push
daa
lret
inc
shll
inc
xor
mov
mov
mov
aas
out
aad
call
ss
sti
mov
mov
mov
cmp
sbb
popa
pop
lods
sub
push
stos
mov
pusha
in
aad
movsl
fisubs
xor
rcrl
cmpsl
popa
cltd
fldenv
push
and
inc
cli
rcll
pop
out
sahf
or
ror
mov
inc
push
mov
loopne
test
mov
fildll
pusha
movsb
aam
and
into
insl
xchg
inc
sbb
push
pop
mov
push
jl
stc
push
xor
dec
insb
lods
insl
pop
int3
sbb
adc
mov
fsub
icebp
pop
jo
shll
test
cmp
push
jae
and
push
daa
or
sahf
test
jle
xchg
or
cmpsb
mov
jmp
mov
clc
lea
adc
aad
imul
jge
leave
mov
sbbb
pop
pop
scas
popa
xchg
mov
insl
push
mov
push
cli
inc
sahf
xor
jne
lcall
rorb
out
mov
fisubrs
das
jp
dec
or
std
test
insl
fldt
popf
push
lods
scas
push
je
outsb
mov
adc
test
inc
leave
jb
std
lret
aaa
xorb
xlat
push
in
sbb
add
push
in
ja
cltd
jae
xor
cmp
inc
cld
xor
imul
fstpl
inc
lods
in
sbb
lods
xchg
ljmp
fwait
imul
inc
dec
xchg
adc
out
clc
pop
arpl
adc
mov
xlat
jp
jp
dec
adc
cmp
xor
notl
movsl
fwait
lret
jmp
dec
mov
loopne
cmc
or
lret
loope
clc
cmp
push
addr16
out
sbb
lahf
int3
bound
adc
into
cli
mov
jne
mov
xchg
xchg
dec
dec
or
sub
cmpsl
adc
jp
or
xor
and
or
push
mov
xchg
in
aas
roll
mov
pop
in
mov
insb
push
into
jbe
mov
sbb
cmp
inc
jmp
das
test
std
lods
aaa
ja
cltd
dec
mov
outsl
sub
sbb
les
mov
and
aam
dec
sub
cltd
mov
xchg
jb
add
ret
sbb
outsl
pop
jmp
or
dec
addr16
dec
repz
fsubp
cmp
mov
stos
mov
repz
push
ja
pusha
js
gs
test
push
int3
ret
pop
dec
mov
pop
and
mov
cmc
mov
hlt
push
arpl
or
out
dec
inc
cmp
scas
push
xchg
and
ret
and
aam
imul
jle
add
leave
add
cmp
mov
sub
lods
sub
imull
mov
or
cmpsl
out
mov
dec
addr16
jb
clc
jl
jp
adc
mov
mov
in
cmp
adc
inc
sar
andb
xchg
outsb
mov
xchg
cltd
push
pop
insb
dec
daa
negl
sub
adc
mov
inc
cmp
mull
movsl
cli
add
dec
jnp
xchg
repz
xlat
pop
scas
test
aaa
or
mov
scas
scas
cmp
test
adc
and
sub
ss
test
cld
adc
clc
cmp
insl
popf
outsl
in
add
adc
pop
pusha
lea
add
cmp
fcmovb
loope
mov
cmpsl
sysexit
mov
pop
push
xor
mov
test
inc
push
mov
mov
frstor
cmp
test
mov
adc
cmc
add
jnp
inc
xchg
add
stos
push
movlps
lahf
hlt
inc
xor
bound
bound
aaa
out
sbbb
scas
xor
ret
push
xchg
xor
mov
xchg
mov
jge
ja
ds
cwtl
mov
ss
jbe
or
push
jle
into
or
sbb
aad
sti
cmp
into
aas
mov
into
sbb
mov
xchg
cmp
cmp
sbb
pop
lds
movsb
loope
cmpsl
pop
sbbb
repnz
push
cld
lret
sbb
xor
push
pusha
dec
mov
sbb
enter
add
fcoms
es
imull
pop
add
mov
push
inc
xor
jl
jp
fsub
lret
aam
mov
ljmp
leave
dec
push
fidivs
inc
adc
jmp
push
filds
xlat
inc
test
filds
ss
in
aas
xor
and
outsb
out
or
aaa
cltd
shl
aam
cltd
sub
mov
inc
inc
xchg
popf
jg
and
lea
or
or
inc
xor
pusha
aad
pushf
add
sarb
int3
hlt
xchg
lret
lahf
into
cmp
xchg
ret
sbb
dec
fbld
shll
cmp
insb
pop
int3
dec
scas
adc
aam
addr16
ljmp
into
pusha
jecxz
nop
ret
dec
pop
cld
push
aad
cs
pop
aaa
push
sub
cmpsl
xchg
mov
dec
mov
adc
cmp
scas
dec
pop
cmpb
dec
or
popf
mov
pop
jbe
fwait
ja
call
subl
adcb
xchg
jae
popf
adc
jle
jbe
lahf
push
in
inc
cmpsl
aaa
je
and
pop
inc
sahf
arpl
xchg
ror
dec
enter
ss
and
lds
push
into
adc
ret
add
sarb
cmp
incl
mov
dec
sahf
shl
jge
adc
mov
push
jns
call
jnp
shr
adc
aas
cmp
cli
les
mov
out
mov
cld
xchg
ret
jae
mov
jno
arpl
mov
mov
and
push
xchg
or
and
mov
scas
sbb
jge
inc
jae
scas
scas
imul
mov
arpl
xchg
aad
lock
hlt
jl
xchg
sub
sub
add
pop
or
inc
outsb
pop
jno
imul
shlb
imul
loop
loope
pop
dec
mov
enter
ja
add
shll
gs
popa
mov
cmp
mov
pop
int
push
loope
popa
mov
xchg
fistpl
sub
push
fadds
icebp
test
xor
fildl
js
xor
jb
xor
add
sub
leave
xchg
or
fstps
lahf
ret
js
test
fisttpl
jle
cmp
push
xchg
loop
stc
add
push
fnstcw
loopne
sbb
cmp
lahf
adc
sbb
xchg
add
stos
adc
and
int3
icebp
cmp
jns
inc
add
add
sbb
lret
dec
mov
cmc
push
push
or
clc
ljmp
xor
jecxz
mov
jbe
sub
out
test
sub
cltd
push
mov
dec
cltd
into
imul
in
pop
pushf
push
shll
mov
lods
inc
add
jecxz
pop
add
enter
loope
fldt
fwait
dec
fnsave
sub
stos
xorl
das
mov
pop
lret
cmpsl
imul
cmp
adc
outsb
dec
xchg
jbe
jg
mov
and
mull
mov
mull
push
mov
lods
mov
aam
cltd
push
fldcw
test
ret
lods
ret
sti
scas
jg
out
or
in
or
sbbb
daa
gs
mov
inc
xchg
dec
stc
sbb
int3
mov
mov
shlb
leave
lret
test
sbb
push
stc
dec
sub
pusha
sbb
push
cmp
jbe
stos
dec
fwait
repz
data16
icebp
popa
aas
fnstcw
and
sbb
loopne
cmp
or
mov
test
pop
scas
data16
cmp
pop
es
jecxz
xor
pushf
sbb
pop
push
sbb
fistps
clc
mov
xorb
xchg
and
mov
mov
push
fmull
xchg
jae
dec
test
xchg
jecxz
fnstsw
and
int3
jne
adc
adc
pop
pop
and
add
sub
pop
int3
jge
addr16
mov
pop
fimull
lock
cs
repnz
in
rcl
xchg
fidivrl
add
mov
jge
in
mov
sub
leave
nop
or
std
pop
lret
imul
iret
xchg
dec
and
sub
mov
mov
jecxz
pop
popa
push
push
mov
lahf
pop
in
loope
push
outsb
sub
dec
out
mov
mov
inc
push
or
imul
popf
test
sbb
mov
sti
jp
cmp
scas
mov
dec
cmpsl
les
mov
aam
stc
pop
dec
js
mov
clc
movsb
pop
sbb
add
aaa
add
imul
mov
hlt
xor
cwtl
fbstp
orb
xor
aaa
lret
cmp
or
jb
addb
xlat
fwait
mov
cmp
sub
mov
jno
mov
pop
pop
push
je
jb
callw
incl
sbb
xchg
pop
mov
rolb
and
xor
xor
out
pop
movsb
inc
or
mov
adc
addr16
leave
jecxz
ds
jle
mov
es
add
cmpsb
cmpsb
sub
cs
push
aas
xchg
push
jle
pop
xorb
jmp
sbb
imul
adc
test
adc
out
jge
je
movsb
lret
dec
jne
mov
jmp
dec
aad
ret
movsb
lods
ss
mov
in
outsb
leave
scas
ffreep
mov
mov
cwtl
scas
fcmovnbe
jne
imul
aad
mov
pop
cmp
pusha
xlat
cmpsb
rcr
fcmovnu
test
mov
push
jg
push
adc
or
push
fiadds
lcall
mov
pop
data16
push
inc
inc
outsb
mov
lea
mov
lods
stos
stos
xor
dec
ret
aam
fsubl
ja
inc
pusha
addr16
jo
add
mov
and
cwtl
xchg
push
adc
or
sbb
popf
aaa
shll
scas
and
bound
mov
test
movb
cwtl
push
pop
jb
or
das
mov
and
enter
ds
adc
jp
loope
andl
ljmp
mov
test
clc
jecxz
dec
pop
rorl
add
loopne
aam
add
push
gs
push
cltd
cmpsb
inc
in
fs
xchg
add
add
dec
inc
test
pop
lock
mov
mov
js
xchg
aaa
ljmp
loopne
cmp
dec
dec
stc
les
jmp
cmpsl
push
sub
fcompl
sub
and
cmpsl
cmpsl
cmpsb
xor
hlt
icebp
sbb
inc
test
out
js
sbb
out
ret
cs
out
inc
test
pop
mov
leave
dec
push
dec
xchg
inc
and
les
leave
aam
jno
cmp
xchg
cmp
ljmp
outsl
in
daa
stc
inc
sub
mov
or
fucomip
movsl
fs
mov
cs
sbb
and
jp
daa
or
mov
mov
push
repnz
sarb
push
and
rcrl
and
loop
pushl
leave
dec
scas
popa
lret
aad
mov
iret
pop
xor
xor
or
fidivs
add
loop
aaa
idivl
pop
ret
cmpl
fstpt
adc
out
call
pop
je
jge
mov
jbe
xlat
add
sub
aam
sub
mov
mov
push
fwait
mov
rorl
mov
push
lcall
mov
xchg
mov
sub
jno
ret
addr16
sti
lods
pop
lock
arpl
sbb
pop
fisubl
dec
leave
mov
mov
daa
inc
xchg
pop
enter
xor
jmp
repz
mov
loopew
cmp
std
or
dec
popa
push
repnz
int3
insl
pop
dec
mov
inc
test
adc
movups
retw
lret
add
mov
shlb
mov
test
jne
loop
cmpsb
mov
orl
push
jae
data16
and
mov
ljmp
push
data16
imul
xchg
xor
push
pop
jecxz
insl
addr16
xchg
das
punpcklbw
sub
cmp
imul
hlt
jge
rolb
add
cmp
mov
push
cmpsb
cltd
or
scas
out
pusha
sti
push
adc
mov
ss
pop
dec
out
cmpsb
pop
jp
pop
xorl
xchg
push
mov
push
push
push
adc
setl
inc
push
add
sbb
mov
sbb
out
cmp
pop
test
js
add
jns
das
xchg
jne
roll
aaa
orb
xlat
cld
stos
sub
pop
shll
add
popa
xchg
sub
nop
mov
shlb
repz
cmpsl
test
test
xor
jb
aad
cwtl
push
js
cmpsb
call
aaa
pop
jmp
mov
jmp
aam
mov
push
loopne
daa
movsl
loopne
aam
jecxz
negb
popa
lret
out
ret
adc
add
push
sbb
popf
jno
in
or
mov
cmpsl
lahf
ret
mov
jmp
pop
jb
nop
mov
lock
jle
lret
xchg
repnz
mov
xchg
lock
cmp
loop
aam
jno
loop
data16
test
adc
dec
out
lret
sub
xor
inc
jnp
sub
scas
hlt
or
lahf
cmp
clc
mov
movl
fbld
dec
push
sbb
push
push
mov
fs
jl
mov
cmp
mov
and
cltd
ljmp
lret
int3
dec
push
jns
lahf
out
sbb
daa
mov
aad
sub
lcall
cwtl
jnp
jmp
mov
mov
xor
fldenv
movsl
push
sbb
adc
lahf
sub
aam
xchg
add
and
inc
add
push
into
push
popf
adc
sub
addr16
test
cmp
adc
xor
xchg
cmp
cmpsl
xchg
sub
shl
and
inc
das
xchg
arpl
push
add
mov
fisttpll
imul
push
jbe
mov
adc
pop
mov
outsb
cmpsb
test
aam
sub
shr
std
xchg
lahf
rclb
out
adc
inc
scas
mov
scas
jne
cwtl
mov
fimull
pop
inc
sub
push
aam
add
inc
insl
in
dec
bound
outsb
aam
add
sbb
aaa
repnz
and
divl
stc
xchg
pop
jne
clc
dec
jnp
aam
fs
and
mov
sub
movsl
mov
sbb
movsb
dec
je
jo
dec
mov
mov
mov
mov
roll
popf
shll
cmp
adc
and
mov
push
shrl
fcmovnb
mov
xor
xchg
mov
imul
nop
pushf
adc
xchg
stos
lods
shrl
xor
movsb
xor
stos
lret
jmp
fcompp
cmp
pavgw
push
inc
mov
pop
shl
xchg
test
push
lcall
orb
pop
push
jbe
sub
out
imul
mov
pop
xor
xchg
or
stc
push
adc
mov
pop
cld
and
sub
sub
lods
in
pop
add
jo
mov
and
push
fistpll
pop
xor
mov
jl
ret
mov
xchg
subb
hlt
cmp
test
icebp
stos
roll
dec
inc
mov
jne
ljmp
bound
loope
mov
mov
ret
pop
push
aaa
and
lcall
in
mov
xchg
xchg
icebp
xchg
fdivrl
lret
test
test
sub
adc
add
inc
dec
push
popf
leave
pop
xlat
adcl
in
lods
pop
nop
lock
insl
dec
cmp
popa
sbb
fidivrl
repnz
dec
push
push
jmp
cmp
jne
call
js
stos
enter
lea
pusha
test
mov
cwtl
sub
pop
stc
lods
jns
leave
std
pop
jbe
insl
push
pop
arpl
fs
jmp
js
rcll
dec
dec
test
jne
inc
inc
mull
mov
pusha
leave
adc
jae
jns
or
pop
lret
adc
pop
add
jmp
aam
lds
adc
xor
lret
inc
dec
xor
dec
shl
imul
jl
ljmp
icebp
mov
sbb
mov
out
adc
lret
aas
pop
and
mov
add
andb
push
jecxz
or
or
sub
push
inc
inc
dec
hlt
pop
fstpt
jno
fimuls
mov
repnz
fcomp
sub
fistl
lret
cmp
push
cmp
adc
mov
sub
pop
fisubl
jmp
icebp
sub
int3
dec
lock
push
mov
pushf
stos
pop
pop
cmp
popf
push
push
imulb
stos
xor
xchg
aas
fidivrl
sbb
jle
cmp
jmp
push
cld
les
push
and
inc
mov
jo
dec
lods
mov
out
cltd
ljmp
jae
sub
or
aaa
push
adc
addr16
cmp
dec
push
lahf
lea
outsb
adc
outsb
jl
idiv
fs
xchg
aam
mov
nop
nop
sbb
and
cmc
scas
int3
dec
rclb
xchg
mov
imul
shl
repnz
cmpsb
mov
rcrl
add
jns
xor
pop
out
imul
jmp
xlat
or
repnz
cwtl
add
push
aaa
jo
xchg
shlb
jne
arpl
cmp
ljmp
cs
popf
iret
adc
in
cmp
inc
pushf
and
inc
xor
or
cmp
cmpxchg
adc
jnp
push
add
aaa
or
mov
js
sti
inc
or
call
into
je
cltd
in
pop
cmpsl
and
sbb
int
fnstcw
aaa
sar
xchg
mov
dec
cmp
shr
mov
clc
clc
push
stos
inc
call
std
jp
xchg
and
insb
sti
add
xor
inc
push
pop
shr
or
icebp
lcall
xor
imul
jns
int3
outsb
stos
mov
jmp
cwtl
sbb
ja
adc
frstor
add
popf
mov
mov
je
or
and
negb
mov
and
in
push
cmpsl
ljmp
test
mov
in
mov
xchg
jp
fisubrs
xchg
outsb
gs
mov
out
popf
sub
mov
bound
xchg
xchg
or
jne
xchg
shl
lret
push
imul
mov
fnstsw
mov
sbb
out
push
lods
push
je
aad
mov
cmp
mov
fsubs
cmp
cmp
sbb
push
shll
aaa
mov
and
jp
fdivrl
jge
hlt
loopne
xchg
adc
frstor
or
lock
outsl
add
incb
clc
out
popa
adc
pop
out
push
imull
add
mov
adc
mov
sub
icebp
mov
jecxz
xlat
add
call
mov
int3
les
out
sbb
mov
lods
insb
dec
xchg
dec
mov
cmp
rclb
and
adcl
mov
and
fists
loop
jmp
jge
mov
mov
sub
nop
sbb
xchg
xchg
xchg
mov
push
outsb
sub
mov
imul
nop
ret
fdivrs
xor
jmp
pushl
test
or
gs
jb
dec
sbb
push
stos
jecxz
xor
push
inc
pushf
fs
and
repz
mov
clc
dec
fistps
push
mov
gs
pop
outsb
inc
loop
jl
cmp
je
rolb
imul
jmp
and
sbb
jnp
aaa
push
or
inc
cwtl
test
mov
xor
bound
push
out
jge
es
call
mov
fsubs
seto
out
or
adc
push
mov
mov
dec
jl
and
xchg
or
pop
sbbb
setno
jne
sarl
adc
std
mov
adc
fs
inc
fnstsw
inc
pop
xor
imul
sub
call
mov
insb
jb
jp
ljmp
test
aaa
sahf
adc
push
ljmp
mov
or
mov
inc
test
sub
fwait
sub
jecxz
test
int3
push
popa
mov
mov
cmp
mov
gs
push
add
cwtl
adc
adc
fcoml
bound
mov
je
stos
leave
or
icebp
aas
and
or
sahf
mov
cltd
mov
xchg
pop
sarl
mov
xchg
mov
stc
dec
cmp
push
xchg
pop
inc
ss
sbb
dec
cld
or
push
mov
gs
arpl
push
push
or
das
dec
inc
inc
sub
jne
mov
fwait
jmp
xchg
dec
in
insl
mov
sub
mov
xchg
rolb
or
inc
lods
imul
and
mov
sub
jo
clc
je
ret
clc
push
dec
mov
icebp
xchg
pop
test
les
dec
pop
shll
cmp
arpl
push
test
fsubrl
jbe
out
repnz
cli
loopne
imul
mov
push
les
lret
movsl
sbb
out
adc
cmc
jg
ljmp
push
scas
fldenv
nopl
outsb
inc
ds
push
xchg
mov
in
outsl
fcoml
mov
lahf
jae
scas
int
lahf
repz
add
inc
int3
inc
roll
jae
pop
std
jg
call
loope
inc
cmpsl
or
daa
pop
and
xor
pop
jg
mov
leave
div
mov
mov
cmc
cmpsb
sbb
scas
stc
add
or
push
rolb
daa
sub
sub
js
mov
imul
nop
call
rcrl
cmp
sbb
push
je
aas
sub
aam
sub
cwtl
je
outsb
mov
hlt
dec
out
scas
xchg
xor
mov
jge
lret
movsl
andb
fstpt
popl
je
fwait
and
lea
add
jb
push
cmp
rolb
jnp
adcb
cmp
mov
aas
and
push
mov
sbb
jb
xchg
cwtl
mov
pop
pop
pop
fldl
dec
fdivs
dec
sbb
cmp
push
popa
add
sbb
lret
xchg
packsswb
dec
xchg
inc
push
add
and
cwtl
pusha
mov
lods
xor
pop
and
scas
pop
test
test
jno
mov
ret
shll
jl
sbb
mov
loop
pop
add
sub
or
in
push
ror
cltd
gs
mov
adc
push
dec
mov
jp
movsl
lea
mov
dec
and
leave
ss
adc
or
pop
push
cmpsb
and
jle
jle
push
xchg
fisubl
mov
jns
push
jl
lret
mov
or
icebp
cmpsl
mov
push
xchg
jns
int
lret
sahf
mov
sarb
fistpll
aad
out
and
push
push
inc
jmp
mov
scas
xchg
xchg
cmp
inc
call
outsl
sub
mov
mov
jnp
push
xor
sbb
scas
pop
fisubs
xchg
cmpsl
sbb
pop
cmp
clc
cmc
into
cwtl
jmp
inc
adc
cmp
push
mov
inc
add
shr
xchg
sbb
xor
testb
jmp
add
sub
hlt
xor
or
leave
je
cmp
test
mov
lods
loopne,pn
lea
push
rsqrtps
xor
pop
pop
fwait
jo
add
mov
aaa
cmp
add
aas
mov
lret
cmp
xchg
out
pop
mov
fld
int
jl
mov
sti
aas
pop
mov
idivb
jl
cmp
lret
subl
add
pop
pop
mov
pop
flds
xor
enter
lea
mov
mov
cmp
add
jl
lods
nop
jecxz
xchg
popf
addr16
sbb
inc
xlat
xchg
or
fimuls
jno
clc
outsl
hlt
pop
fnstcw
cmc
mul
outsb
pushf
scas
js
popf
mov
std
mul
push
jbe
pop
jnp
pop
jb
fidivl
ljmp
and
mov
pop
call
repnz
int3
insb
enter
mov
mov
push
shll
popa
xchg
or
popa
mov
dec
push
mov
ds
dec
xor
cli
ret
lret
test
sbb
repz
pop
imul
dec
add
call
jno
sahf
imul
divb
cmp
aas
xchg
mov
ds
insb
push
push
daa
jo
int
add
hlt
pop
pop
add
inc
loope
cmp
xlat
dec
rorl
adc
insb
mov
adc
orb
sbb
sbb
push
icebp
fmulp
mov
rorl
ja
lret
jnp
pop
popf
xlat
fnstcw
cld
xlat
cli
cmpsl
mov
pop
mov
sbb
mov
out
sub
leave
ds
scas
mov
mov
insb
sarl
outsl
jg
cmpsb
mov
mov
outsb
stc
in
jge
pop
push
mov
jbe
jno
addl
test
movsl
in
mov
popa
push
pop
cltd
or
ret
lcall
ss
dec
in
push
jecxz
out
fsubl
and
jmp
mov
subb
mov
insl
or
sbb
adc
push
imul
scas
and
push
in
sbbl
jp
push
xor
loopne
xchg
and
or
test
or
and
repz
adc
pop
fnsave
aam
inc
xchg
mov
dec
pop
mov
push
bound
mov
mov
xchg
je
sub
ljmp
fs
in
mov
adc
shr
icebp
sub
fcoms
jge
mov
mov
fadds
jae
inc
push
jle
fcmovne
jecxz
inc
cltd
jge
sub
sti
movsl
enter
mov
mov
movsl
ljmp
xlat
scas
stos
mov
ja
cmp
movl
sete
pushf
test
fs
setns
push
adc
pop
ret
xor
adc
fs
sub
in
sbb
mov
cmpsb
xor
mov
bound
cmp
mov
xchg
je
shlb
dec
loop
and
sub
xchg
add
push
xor
cmpsl
fadd
mov
mov
mov
test
lret
repnz
jle
call
pop
movsl
fwait
inc
mov
dec
cmp
fdiv
jne
outsb
cmp
popa
push
fldenv
inc
into
jbe
sub
jb
sbb
push
jo
add
pop
add
dec
fisttpl
jge
addl
and
dec
pop
mov
je
cmp
jmp
loopne
not
mov
int3
xchg
push
xchg
and
stos
sbb
mov
mov
lods
xor
in
mov
sbb
outsl
mov
imul
and
xchg
daa
xor
sbb
clc
inc
lods
xchg
int
fbstp
mov
outsb
xchg
fnstcw
adc
cmp
cmpb
daa
xchg
loopne
mov
movsl
or
daa
push
mov
data16
ret
sarb
mov
mov
in
jle
jg
push
sbb
xchg
daa
mov
sub
jne
into
repnz
xchg
negb
jmp
sbb
or
lret
or
je
bound
pop
push
mov
push
mov
adc
pop
push
push
stos
aaa
mov
addr16
xchg
xor
sbb
inc
cmpsl
js
sbb
jns
mov
std
or
and
push
cli
sbb
sub
fnstsw
cmp
inc
ja
stos
mov
es
imul
stc
and
insl
jmp
pop
iret
hlt
test
fisubl
pop
push
js
jnp
sub
and
popf
js
adc
daa
jo
xor
xchg
xchg
and
jo
jo
inc
mov
test
cmpsb
pop
or
mov
mov
lock
add
pop
inc
stos
filds
das
mov
imul
mov
xor
fiadds
pushf
notb
mov
loopne
mov
in
lret
ds
les
testl
or
call
fldenv
mov
fcompl
dec
cmpsl
in
inc
cmp
adc
adc
mov
pusha
pop
jg
in
xchg
or
xor
cmp
lahf
out
test
testb
inc
cs
mov
enter
pop
mov
sub
in
cs
pop
mov
inc
cmp
loopne
sub
push
es
fs
ds
pop
add
adc
ret
xor
sbb
filds
mov
or
out
mov
xor
mov
test
push
movsl
ss
push
push
shlb
mov
shrb
pop
mov
test
mov
jp
mov
sbb
rcl
mov
neg
and
mov
mov
aad
add
dec
pushf
lcall
dec
jle
mov
sbb
push
call
jmp
in
inc
xchg
addr16
or
mov
into
sub
fdivrp
leave
cmpsl
jge
xor
xor
mov
out
sbb
mov
lret
repnz
jle
out
xchg
data16
fwait
imul
jbe
daa
mov
xchg
aam
add
stos
stc
shlb
fbld
pop
fwait
imul
pop
or
mov
jno
in
out
mov
call
pop
fdivrp
rcrb
add
mov
xchg
and
push
repnz
pop
pop
gs
pop
mov
stc
push
cltd
mov
cmp
add
pop
out
jp
xchg
movsl
scas
js
mov
dec
es
or
sub
cmp
in
jbe
hlt
out
pop
push
cmpsl
notl
cmpsl
cmpl
mov
dec
lret
movsb
outsl
dec
mov
lcall
mov
subl
sbb
dec
nop
sbb
aas
and
and
movsl
mov
aad
sbb
cmp
test
mov
mov
jge
ljmp
adc
xor
aam
je
ljmp
outsb
jb
jbe
je
inc
pop
mov
xor
cmp
jbe
xchg
fwait
cmc
repz
lea
inc
vunpcklps
leave
fisubs
adc
mov
in
cmp
pop
fdivr
fsts
pop
jecxz
mov
cmp
clc
and
pushf
dec
pop
cld
out
mov
pop
out
mov
or
into
decb
in
nop
insb
lret
test
pusha
pushf
cmp
mov
arpl
xchg
or
adc
sti
push
and
cmpsl
mov
jmp
lods
and
push
push
push
xchg
out
push
fistpl
mov
loop
xor
mov
int
push
pusha
out
scas
bnd
out
popf
or
lea
xlat
jecxz
xchg
xchg
loope
insb
xchg
inc
mov
cmp
adc
push
sti
test
inc
sub
cmpsb
mov
adc
fdivl
or
in
stos
lcall
call
sub
mov
mov
xor
mov
push
xor
stc
mov
sti
mov
mov
and
cmp
mov
or
dec
and
idivl
adc
xchg
fdivl
and
jle
idivb
dec
ret
sahf
add
mov
inc
mov
cmp
xor
dec
xchg
add
lret
push
pop
ds
and
lds
lahf
cmpsb
in
inc
sahf
mov
ficompl
repnz
mov
adc
pop
cmc
scas
xchg
add
shrl
push
mov
jge
xchg
imul
ficompl
mov
inc
adc
pop
cmp
mov
stc
fdivl
in
pop
xchg
in
daa
in
inc
fildll
std
repnz
ss
inc
jmp
imul
push
mov
cmp
test
sbb
fcoms
jp
aam
adc
mov
aas
cmp
inc
jne
arpl
jmp
push
fwait
add
add
imul
or
rclb
ja
and
fcmovbe
add
ret
mov
cmp
js
pushf
jge
push
jo
std
jmp
ljmp
adc
sahf
jns
fisubl
call
cmpsl
leave
cmp
stc
sti
into
iret
vsubss
pop
iret
push
cmp
or
adc
or
jns
les
negb
aam
int3
movsl
pop
dec
imul
lds
loopne
mov
cmp
cmp
and
shlb
adc
nop
dec
pop
popf
mov
mov
mov
loopne
jb
dec
push
imul
push
fimuls
sub
popf
jns
xlat
dec
mov
mov
fmull
aad
push
sub
jne
push
cmpb
clc
mov
xchg
adc
fmull
pop
push
in
and
inc
inc
sahf
das
addb
sahf
dec
xor
mov
xorl
mov
inc
jns
lods
flds
push
jg
push
mov
inc
cmp
cli
jb
cmp
xor
aam
loop
aas
adc
jnp
push
mov
mov
imul
in
scas
inc
push
sbb
pop
loope
pop
stc
aaa
xchg
popa
xor
icebp
or
add
fcoml
sbb
adc
mov
or
fs
gs
mov
loopne
sub
inc
mov
pop
sbb
rcll
mov
adc
fstl
mov
add
sbb
sbb
fnsave
shlb
dec
inc
dec
xor
mov
or
cmp
pop
std
fildl
scas
imul
loop
pop
fs
popf
shlb
mov
and
add
sbb
xchg
fidivl
arpl
cld
sbb
aas
push
jb
mov
stos
push
cltd
xchg
out
imul
sbb
xchg
mov
jmp
into
loopne
push
nop
jp
movsb
xchg
int3
out
les
test
sub
int
lock
push
inc
or
sub
out
idivb
out
imul
xchg
stos
push
jecxz
inc
sub
or
add
leave
mov
out
sti
test
xlat
xlat
loope
ss
mov
push
stc
ret
dec
loopne
paddq
out
mov
xchg
mov
mov
jb
es
dec
cld
ja
jo
lods
out
pop
sub
dec
mov
pusha
inc
cmp
push
or
pop
sbb
out
inc
into
loopne
inc
push
and
cmp
stos
jo
imul
inc
arpl
cmp
std
or
sub
dec
frstor
imul
fcmovb
repz
adc
cmp
xchg
loope
out
aam
fistpll
rcrb
sub
sarl
add
fsubrs
idivb
lcall
je
pop
mov
inc
adc
decl
clc
mov
mov
pop
call
lret
sub
mov
sbb
cld
or
addr16
jl
mov
nop
xchg
adc
loopne
or
adc
jp
mov
pop
or
mov
shrb
cmc
sbb
push
cltd
push
rorb
ret
xor
mov
orb
rclb
cmp
adc
iret
fidivrs
in
dec
loop
add
ret
out
cmp
stos
int
and
sbb
fldcw
cwtl
mov
cmpsl
sbb
stc
fbld
lods
decl
sbb
push
cmp
addb
add
pop
xor
nop
mull
imulb
into
or
adc
in
xor
sbb
repz
mov
add
add
andb
or
jae
outsb
sub
cmpsl
dec
inc
push
or
jecxz
inc
ljmp
push
lock
fimuls
jno
cmp
mov
fwait
in
adc
stc
addb
jmp
flds
mov
out
lock
pop
sti
lds
mov
inc
pop
fmuls
xlat
bound
jnp
add
cltd
scas
cmpsb
repz
mov
cmp
shl
jns
cltd
rcrb
int3
into
leave
pushf
int
repnz
dec
sti
stos
aam
push
test
mov
cli
push
popa
out
mov
inc
push
jmp
mov
sub
dec
add
jno
mov
and
punpckldq
jb
notb
jno
repnz
cltd
mov
inc
pop
dec
lds
shll
push
pop
mov
arpl
les
data16
bound
dec
andl
add
jle
sbb
sub
out
sub
lds
imul
sbb
sbb
push
fwait
dec
movsb
mov
push
or
adcb
xlat
pop
inc
aad
mov
mov
mov
push
xor
or
scas
or
mov
xlat
std
in
xlat
mov
xor
jae
pop
pushl
arpl
loopne
mov
sarl
imul
mov
jmp
cmp
bound
push
sub
incb
add
sbbl
jns
hlt
outsb
cmp
inc
stc
and
cmp
mov
add
test
or
ret
pushf
mov
add
push
lods
enter
popa
xor
fdivl
lock
in
fldt
xor
shr
cmpsl
mov
lret
and
mov
cmp
jl
pop
push
sub
cmp
adc
xchg
sub
lret
mov
lds
lea
ret
int
cmp
das
outsb
add
sbb
adc
inc
vmovss
jbe
call
or
push
mov
pushf
lock
cmp
mov
repz
xor
jbe
or
rol
div
sub
ss
add
orb
dec
cmc
xchg
pop
shrl
fcoms
push
shlb
loope
jmp
cmp
inc
popf
dec
add
movsb
xchg
fildll
mov
lahf
cld
stos
ficompl
pop
popa
ret
xchg
xor
cltd
pop
pop
cmp
test
stos
movsb
xor
push
mov
fmul
dec
jne
jo
aad
cli
cs
push
mov
pop
fwait
and
mov
out
sbb
push
test
cmpsl
mov
inc
sahf
loope
cs
pushf
jne
in
push
jle
out
and
push
fstpl
xlat
js
pop
sbb
nop
pop
mov
sub
sub
or
xchg
in
or
sbb
cmc
icebp
adc
jge
adc
sbb
fs
jmp
dec
jnp
pusha
mov
hlt
inc
ffreep
xorb
pop
and
push
insl
push
push
push
cmp
cmpsb
lock
xchg
sub
stos
xchg
mov
cmp
cmpsb
dec
mov
ss
sub
jno
dec
shlb
mov
xor
xchg
test
cli
xlat
scas
push
mov
push
inc
mov
mov
ret
shrl
lods
mov
mov
adc
push
aaa
lahf
sub
cmp
cmp
inc
clc
mov
xchg
ss
fildl
lds
push
jb
icebp
jle
outsb
jno
inc
cmc
adc
and
pop
js
inc
sub
push
xor
mov
out
mov
sbb
and
cmp
outsl
mov
into
out
sti
xlat
dec
xchg
inc
addl
stos
push
lock
xchg
insb
cmp
je,pt
aaa
mov
dec
sub
out
mov
nop
mov
xchg
mov
pop
das
mov
loop
xchg
xor
xor
cmp
movsl
fimull
mov
dec
xor
add
mov
ret
or
sbb
add
mov
dec
inc
stos
divl
sbbb
sub
jbe
repnz
outsb
xor
iret
and
test
jmp
add
xor
pop
lds
out
jae
fdiv
pop
mov
xor
dec
push
les
out
out
mov
xchg
bound
jne
pop
mov
sub
jbe
dec
test
jb
jne
mov
cwtl
fidivrs
imul
or
mov
cmpsl
add
adc
jno
addl
push
xchg
incb
mov
aam
imull
aam
aad
and
aad
cltd
scas
fidivrl
aas
repz
repz
mov
insb
mov
pop
test
mov
cmp
push
movsl
mov
scas
and
adc
std
shlb
test
into
mov
sub
add
popa
pop
jl
inc
xchg
icebp
out
mov
or
cmp
subl
pop
ret
push
fdivs
sub
dec
es
push
js
pop
ja
imul
std
stc
mov
lea
push
sub
cmp
push
repz
in
cmc
fidivrl
in
je
lahf
push
mov
mov
mov
xchg
out
in
repnz
loop
push
fwait
push
jg
jl
sub
mov
repnz
out
and
adc
jge
lods
and
mov
mov
mov
rclb
jmp
cmpl
jp
sub
or
dec
adc
imul
int3
in
mov
int3
inc
and
cmpsb
dec
jmp
fsubrs
punpcklwd
sbb
jo
mov
and
adc
and
fists
cmp
imul
mov
fildl
loopne
icebp
enter
in
test
xor
sbb
pop
outsb
and
jge
and
outsl
or
pop
es
jecxz
clc
sbb
shlb
cmp
xchg
jmp
jno
sub
jbe
ret
call
xchg
jbe
cltd
sahf
pop
jmp
push
inc
pop
and
dec
xchg
sar
pop
mov
fs
and
ret
push
cmp
dec
rcl
sti
ret
std
cmp
or
add
out
or
jb
rclb
lods
cld
inc
adc
push
mov
mov
xorl
ljmp
xor
inc
clc
movsb
je
mov
outsl
or
sub
sbb
lods
fildl
test
mov
xchg
lret
push
int3
stc
es
dec
loope
fbld
std
xor
inc
popf
xor
in
dec
hlt
dec
mov
mov
xchg
ljmp
mov
fnsave
add
dec
mov
sti
sub
cmp
or
sahf
scas
or
jbe
dec
sbb
xchg
sub
add
and
movsl
xchg
xchg
mov
add
fidivs
push
or
add
sub
ret
jno
adc
push
movsl
xor
sub
ds
sbb
mov
cmpsb
xchg
stos
addr16
out
insl
inc
aad
stos
rep
idivl
imul
jns
lret
mov
int3
fwait
movsb
mov
aad
add
test
rol
repz
fucomp
mov
sbb
inc
pop
lahf
xor
inc
inc
and
sahf
or
mov
in
add
xor
stos
add
int3
dec
add
lock
sbb
js
xchg
or
in
repz
adc
gs
ss
push
outsl
cwtl
push
test
jnp
repz
cmp
xor
adc
ss
ds
sbb
jmp
divps
pop
xchg
stos
jge
fcmovb
shrl
cltd
pop
jmp
pop
push
sbb
pop
popa
add
shll
dec
fcoms
sar
and
mov
mov
cmp
mov
xchg
mov
sub
pop
insb
inc
xchg
popa
xadd
loop
sbb
sub
or
jl
pop
or
mov
sti
int3
sub
dec
iretw
int3
cmc
jne
cltd
insl
jmp
insl
pop
dec
in
jno
stc
repnz
and
in
pop
arpl
xchg
aad
add
fiadds
out
add
fisubrl
sahf
add
sbb
mov
add
cmp
mov
shrb
add
in
jns
xchg
addr16
popf
test
movsb
or
jo
popa
mov
rcr
xchg
ret
cmpsl
lods
dec
jp
mov
fs
loopne
je
vmovq
mov
cli
pushf
scas
inc
xor
mov
call
adc
xchg
leave
ss
out
push
fs
xchg
outsb
js
sub
imul
loope
mov
out
xchg
lret
fwait
mov
mov
xchg
out
mov
movsl
or
or
fincstp
xchg
sbb
lods
xchg
xlat
inc
xchg
ret
js
sub
jbe
adc
or
xchg
lods
cmpsl
jae
shll
cmpl
imul
subl
lcall
inc
adc
xor
out
das
jns
cmp
outsb
add
adc
popa
loopne
call
sub
std
add
mov
mov
addr16
cltd
js
call
js
pop
popa
jle
negb
xor
inc
lea
push
xchg
xchg
adc
popf
mov
dec
in
mov
mov
addr16
jp
cmpsb
mov
sarl
in
notl
imul
xchg
int3
lods
out
je
pop
ror
dec
dec
sbb
idivb
mov
jne
mov
repz
dec
jge
jle
push
scas
or
movsb
pop
push
movl
dec
mov
test
inc
add
ljmp
flds
sub
jg
loop
sbb
mov
cltd
pop
push
pop
pop
dec
jne,pn
pop
aas
shl
and
and
xchg
cmp
sti
pop
cmp
insb
add
pop
jno
cmpsl
jl
inc
jp
test
fsqrt
jo
xchg
dec
fwait
jge
inc
int
dec
addl
xchg
imul
sarl
int3
push
inc
aam
insb
cmp
aaa
pop
movsl
dec
inc
xor
add
or
lods
push
pusha
xrelease
pushf
mov
push
sub
popa
pop
ljmp
inc
mov
mov
int3
dec
scas
mov
inc
and
jmp
inc
dec
xchg
xchg
jle
jl
cs
add
aam
inc
ficomps
hlt
fstl
xchg
in
mov
mov
dec
cli
scas
jnp
mov
mov
arpl
mov
sbb
inc
xchg
jno
inc
xchg
mov
mov
jb
fwait
xor
pop
cli
jmp
inc
dec
sub
rol
jmp
jns
arpl
pop
sbb
jo
out
out
test
inc
int
mov
dec
nopl
sub
sbb
inc
jmp
stos
js
mov
inc
dec
jmp
fcomip
lret
or
nop
and
pop
dec
cmp
xchg
sub
out
inc
xor
call
and
mov
sbb
es
lret
imul
push
ret
mov
out
adc
cmp
mov
leave
test
les
and
lret
sub
pop
sahf
jg
das
test
cmpsl
test
ja
dec
mov
scas
push
push
adc
xchg
je
push
add
scas
xor
push
xor
js
pop
mov
adc
inc
xchg
mov
shr
out
ficompl
iret
sbb
add
fisubrl
sub
sbb
or
xor
mov
adc
in
cli
enter
mov
jle
or
fmulp
popf
jae
daa
add
push
icebp
sub
inc
inc
stos
leave
in
aaa
cmpsl
fxam
ja
out
jecxz
adc
andb
push
std
int3
add
les
lods
popa
sub
adc
roll
outsb
sub
sbb
and
push
inc
int
enter
inc
push
les
pop
adc
stc
xchg
dec
pop
add
or
lahf
dec
ljmp
test
call
ja
jge
dec
sub
popf
popa
push
sbb
clc
dec
and
cld
jne
out
dec
mov
xchg
and
xchg
mov
lret
xor
ljmp
leave
fistpl
loope
mov
dec
movsb
outsb
xchg
cwtl
xchg
sub
jl
xchg
addl
gs
mov
xchg
aaa
and
add
movsl
loop
fimuls
and
insl
iret
mov
mov
pop
push
lahf
jno
popf
aam
inc
add
or
ficoml
out
pop
cld
xchg
jl
out
subl
inc
adc
hlt
xchg
mov
test
add
xchg
mov
repz
out
inc
aaa
test
add
out
push
jns
clc
inc
movsb
loop
sub
jmp
jne
push
mov
fistpll
ss
cmpb
aas
xchg
dec
push
dec
jmp
jno
pop
roll
loopne
sti
mov
icebp
jb
mov
fmull
xor
call
mov
mov
sub
sbbl
stos
mov
sub
mov
adc
fs
mov
dec
and
inc
xchg
mov
cmp
mov
adc
ljmp
jecxz
push
daa
push
fwait
mov
pop
das
or
xchg
cltd
stos
aad
xchg
sub
mov
aad
push
pop
cltd
dec
dec
lds
mov
lock
mov
orl
pop
xor
or
pop
cli
pop
xchg
push
lds
repz
cld
addb
inc
out
nop
lods
adc
loope
jge
or
std
dec
enter
add
cld
mov
dec
mov
xor
sbb
int3
cmc
sbb
mov
repz
aas
xchg
fsubp
pop
jae
ss
inc
sbb
mov
dec
fldenv
outsb
add
inc
push
xorl
fsubrs
xchg
popf
dec
dec
sbb
dec
sbb
sub
jb
cld
pushf
lret
fldcw
fsts
lahf
or
mov
or
daa
orb
addr16
popf
aam
mov
fucom
inc
mov
es
loop
or
push
dec
jecxz
ficoml
outsb
cmp
inc
stos
stc
xchg
mov
and
inc
mov
cmpsb
dec
xchg
sub
add
ret
out
push
lret
and
int
sub
ja
test
pop
call
adc
mov
xor
mov
stc
xor
lea
push
jle
jecxz
mov
stos
test
cli
fwait
pushf
push
les
fisttpl
je
dec
and
add
je
mov
and
push
cmc
push
xchg
push
mov
shll
pinsrw
leave
mov
cmc
lock
jle
or
mov
jb
sub
dec
lock
or
jae
repz
pop
xchg
loopne
sub
mov
jecxz
lods
dec
jnp
addr16
lret
or
out
push
sahf
pusha
inc
ror
push
xchg
outsb
leave
adc
push
inc
popf
push
inc
movhps
pop
mov
nop
loopne
jns
or
je
xchg
popa
in
int
adc
mov
xchg
out
jg
call
out
ret
cmp
hlt
ds
outsl
xchg
sub
cmp
in
fdivrs
inc
push
movsb
jnp
xchg
sbb
and
cs
aaa
push
adc
dec
mov
insb
dec
cltd
and
sti
adc
mov
fcompl
fsts
or
insl
mov
negl
test
or
mov
jb
aad
add
jnp
in
xchg
ljmp
addr16
mov
dec
imul
add
sub
jecxz
cli
jl
rorb
scas
ficoms
jmp
mov
or
xchg
lahf
dec
aas
mov
lret
mov
dec
mov
lock
jb
fdivs
xor
roll
pusha
insb
xorl
les
cmpsl
adc
adc
scas
int
or
inc
inc
pop
inc
lods
mov
rorb
sub
shll
xchg
dec
test
in
inc
add
xchg
stc
loop
cs
notb
xchg
repnz
jp
pop
push
repnz
sub
cmp
arpl
inc
sahf
icebp
pop
push
and
fsubs
push
jb
push
sub
mov
push
xor
rcrb
bound
adc
call
mov
inc
scas
inc
shlb
xor
clc
test
cli
lahf
push
je
pop
enter
sub
fwait
ljmp
lods
push
xchg
pop
or
dec
jp
shlb
enter
daa
pop
movsb
out
scas
push
sahf
pop
dec
cmp
adc
inc
and
mov
adc
lock
into
push
pop
mov
cmp
cli
popf
cli
fidivs
jl
ret
std
mov
push
jb
xor
cmp
in
push
sbb
aad
cmpb
enter
ficompl
jns
fistpll
fcoms
xor
daa
repnz
arpl
and
out
cld
js
xchg
push
loopne
dec
shrb
popa
mov
mov
push
fiadds
push
sub
sub
mov
sbb
in
in
xchg
xlat
in
cmp
ljmp
lahf
popf
jno
scas
add
jo
mov
pop
inc
inc
cmp
add
pop
pusha
iret
pop
inc
test
inc
dec
sbb
mov
lahf
push
jl
fstps
pop
popa
cwtl
es
mov
sbb
stc
xor
in
frstor
jl
jo
pop
sbb
xchg
cltd
dec
push
into
addl
jnp
pop
xor
cmp
loopne
daa
scas
jmp
enter
insl
inc
pop
lods
and
fmuls
daa
enter
in
shl
pop
xchg
lods
push
jbe
mov
popa
cld
xor
into
pop
and
repnz
mov
and
dec
push
mov
jle
repnz
int
clc
add
data16
imul
or
dec
jb
pop
xchg
nop
mov
sub
sub
or
test
insl
or
in
mov
out
mov
repnz
jecxz
rol
lods
jmp
mov
mov
lock
mov
cmp
out
fnstsw
test
scas
pop
inc
and
mov
fistl
scas
add
cmp
mov
and
lret
scas
int
fstpl
pop
cmp
sub
and
test
dec
and
sub
ljmp
lret
jnp
lods
dec
adc
mov
jge,pn
sub
dec
nop
pop
fwait
into
xchg
in
mov
rcll
cmp
xor
cmpsb
jo
pushf
sbb
adcb
test
sub
into
nop
lds
ret
lret
pop
pop
dec
add
call
mov
sahf
dec
xor
and
leave
lcall
lahf
xacquire
mov
mov
cmp
cmp
sbb
push
icebp
popf
outsb
xchg
cli
jp
mov
daa
mov
scas
sahf
jge
fwait
mov
or
push
sub
idiv
pushf
dec
cmp
xor
cmp
and
lret
jmp
add
inc
xchg
xchg
jo
inc
inc
inc
dec
cmpsl
inc
push
and
sub
cli
in
fbld
sub
sub
pusha
xor
fcomip
inc
loop
xchg
loop
xorb
jge
fisttpl
icebp
scas
mov
loopne
scas
sub
mov
ja
dec
ja
adc
pop
inc
rcr
out
adc
mov
ss
pop
pop
mov
cmp
jbe
loop
dec
and
adc
loopne
sti
scas
and
ret
adc
paddsb
mov
push
xchg
arpl
xor
call
pop
ret
imul
outsl
add
mov
dec
pusha
sti
inc
ljmp
lahf
mov
sbb
je
and
adc
test
adc
bound
xor
jmp
fwait
test
and
mov
jp
test
repnz
sbb
and
pop
ret
inc
ljmp
push
in
xor
scas
or
adc
sarl
daa
cmc
mov
iret
cmp
and
or
cmpsb
jno
cltd
and
fs
lcall
js
or
jne
aad
pop
lock
jo
mov
test
cmp
dec
clc
fs
and
imul
jo
cld
xchg
inc
fld
lods
jbe
cltd
xchg
jle
inc
sub
insl
insl
movsb
clc
jge
xchg
in
jne
fnstcw
cmpsl
loop
movsb
into
fsubl
sub
xor
jae
or
jl
cmovbe
jmp
lea
cwtl
faddp
outsl
dec
lds
popf
lahf
out
pushf
mov
adc
dec
int3
add
xor
ss
jl
fsubs
out
and
inc
push
call
and
lock
arpl
pushf
mov
xchg
xchg
or
mov
aaa
hlt
adcb
cmp
addr16
arpl
jo
dec
pop
sub
dec
ss
outsb
mov
sbb
or
pop
jae
xchg
push
xor
cwtl
test
icebp
xorl
push
addb
pop
jae
loop
sub
xchg
mov
add
es
icebp
cmp
shr
movsb
cld
xchg
clc
jl
rorl
lods
mov
sbb
lods
jecxz
cwtl
insb
sbb
jb
popa
xor
call
or
push
dec
or
jmp
fmuls
pop
mov
sub
sbb
lock
push
xchg
loopne
adc
add
sbb
sahf
int
repz
xlat
or
push
lods
nop
inc
sbb
xor
cmp
or
mov
push
je
ss
push
std
add
xchg
push
adc
dec
addb
adc
mov
mov
cmpsl
inc
ljmp
fidivrl
mov
inc
in
pop
sbb
pop
mov
sub
adc
push
pop
fnstcw
imul
xchg
xchg
out
call
push
sbb
fld
aad
test
test
xchg
xor
dec
xor
daa
push
orl
addr16
jae
jb
call
jmp
outsl
mov
shr
mov
cmp
jns
sbb
dec
mov
push
js
aaa
stc
repz
cmp
addr16
lret
aam
inc
xchg
push
and
int3
push
test
xor
les
mov
jae
xchg
fstpt
call
lcall
das
push
arpl
mov
loopne
xchg
mov
in
popf
mov
cmpsl
sub
sbb
xor
xor
jecxz
xchg
ffreep
jnp
inc
insb
ds
lret
shrl
dec
dec
mov
xor
or
jne
jmp
ret
sbb
push
pop
sarl
xlat
pop
jne
arpl
jne,pn
stos
js
and
inc
xchg
sbb
adc
mov
int
aad
pop
or
cmp
pusha
mov
cmp
out
jge
adc
xchg
sub
jmp
mov
ss
fcoms
fwait
in
gs
and
adc
mov
lahf
add
std
jns
sub
int
les
inc
mov
fld
testl
addr16
mov
xchg
push
pop
push
inc
cli
push
xchg
pop
fistpl
inc
dec
jb
pop
stos
sub
push
push
loopne
push
popf
cli
mov
lret
dec
xchg
popf
lea
mov
out
nop
pop
or
mov
icebp
dec
scas
add
ret
fwait
adcb
sbb
jg
inc
push
or
sbb
outsl
fcompl
lds
or
push
xorl
in
and
mov
out
andb
iret
pop
adc
fcom
pop
jmp
dec
lret
jbe
push
shr
dec
into
int3
fsubrp
das
pushf
repz
and
call
or
jp
pop
rcrb
sub
xchg
mov
ret
faddl
aaa
clc
inc
cwtl
test
inc
nop
xchg
jg
and
adc
scas
fstpl
jmp
out
std
pusha
stos
mov
jle
pop
movsl
repnz
cmp
mov
lahf
lret
pop
cltd
sub
adc
cmpsb
negl
push
loopne
ss
xor
subb
daa
xor
aas
pop
rol
dec
xor
sub
faddl
cmp
lahf
push
in
leave
mov
sti
loop
clc
popf
shrb
adc
aad
mov
cmpsl
and
inc
pop
cmp
stos
scas
mov
je
pop
xchg
popf
xchg
jnp
jae
test
jg
xchg
aaa
and
cwtl
ds
ss
clc
aaa
sub
outsb
and
std
mov
xchg
roll
or
push
addr16
test
jns
pop
fdivrs
jae
pusha
dec
dec
lcall
shrl
pop
scas
icebp
xchg
jmp
ret
and
lcall
jbe
xor
call
inc
repnz
sub
sbb
mov
xor
je
idivl
add
int
loop
ja
add
adc
or
or
ret
sbb
dec
mov
sub
orl
cmp
pop
xchg
lret
xchg
int3
xchg
mov
fs
imul
sbb
sbb
pop
mov
pop
xchg
inc
jmp
sbb
lahf
push
jae
fwait
stos
inc
mov
arpl
or
mov
repnz
mov
mov
or
int
out
cwtl
cmp
sbbb
loope
sbb
sti
push
or
shrb
or
dec
push
jns
imul
hlt
cmp
cwtl
push
cltd
push
outsl
sbb
pop
loope
push
xchg
pop
or
xchg
aam
ja
data16
stos
push
mov
push
divl
push
in
ss
call
ss
je
pop
mov
rcrb
hlt
cmpsl
fdivrl
popa
ss
bound
pop
lods
xor
jno
jnp
or
pop
xchg
jne
adc
pop
sti
jmp
pop
or
add
cmp
icebp
enter
add
inc
leave
xchg
push
dec
int3
lods
pop
scas
xchg
insb
sahf
push
cmp
jns
in
nop
hlt
sbbl
addr16
mov
inc
loopne
sahf
sub
out
sub
and
int
mov
stos
fmuls
test
adc
or
sub
xor
scas
sahf
cli
push
in
fidivl
cmp
inc
push
fbld
sbb
cld
test
dec
mov
rolb
xchg
test
jmp
outsb
pop
incl
lock
shll
ficoml
jmp
ficomps
cmp
push
je
cmp
aaa
push
dec
xor
xchg
sbb
imul
ja
call
push
push
aas
setl
mov
jcxz
mov
fidivrs
std
leave
out
aaa
fistpll
das
lret
jecxz
jae
sbb
push
push
cmp
shrb
xchg
and
jmp
or
xchg
or
leave
cmp
cmc
push
cwtl
dec
add
adc
and
pop
mov
mov
jnp
das
xchg
ja
cmp
out
xor
fisttpll
aam
mov
mov
cwtl
jg
outsb
push
lahf
mov
xor
inc
daa
jp
dec
lds
addr16
and
addr16
aaa
icebp
mov
xlat
fdivrs
inc
mov
stos
cmpsb
ds
dec
add
bound
stc
xor
cli
pop
arpl
pop
or
xor
push
sub
mov
dec
mov
push
mov
roll
addr16
scas
jge
push
jge
push
lds
mov
mov
call
fwait
daa
imul
and
mov
jecxz
or
fstps
fdivl
ljmp
ljmp
xchg
inc
add
add
xlat
xchg
push
repz
and
dec
pop
sub
mov
nop
call
jbe
xchg
lret
loope
add
ss
push
xlat
cmp
stos
jae
sbb
daa
daa
scas
rol
mov
push
adc
movsb
xchg
inc
mov
imul
mov
push
adc
cmpsb
mov
mov
xchg
cmpsb
mov
inc
sbb
mov
xor
push
add
fildl
fbld
aaa
jnp
xlat
in
outsb
aas
jg
push
jge
imul
and
pop
arpl
jecxz
or
fistpl
mov
nop
xor
push
mov
fwait
xor
jbe
xchg
popa
es
adc
sub
push
inc
aaa
ret
jnp
data16
adc
loop
jb
mov
outsl
xchg
imul
add
lret
outsl
sbb
mov
or
push
iret
xchg
push
imul
sarb
inc
movsl
shrb
cltd
mov
inc
ss
and
mov
popf
in
jmp
adcb
clc
adc
push
insl
dec
push
cwtl
xor
pop
sbb
push
mov
sub
push
scas
leave
aam
cmp
arpl
add
jnp
or
inc
vpmovsxwq
loop
mov
and
add
sbb
aas
inc
cmpsl
outsb
dec
or
scas
adc
out
mov
dec
dec
pop
sbb
cmp
jmp
push
dec
mov
push
test
sub
jnp
inc
mov
mov
adc
roll
or
push
inc
pop
push
mov
sub
jb
inc
or
add
push
int
inc
call
cmpsl
pop
outsl
mov
fcmovb
les
test
jb
add
dec
imul
xchg
cmp
add
pop
cmpsl
inc
and
dec
add
test
xchg
or
stos
jno
movsl
xchg
js
sahf
es
popf
cld
scas
mov
jg
stos
sub
add
imul
inc
sarl
jg
mov
add
jno
icebp
dec
xchg
sahf
aaa
popa
jb
cmpsb
jg
or
dec
aam
imul
lock
add
mov
rorl
imul
loopne
aam
mov
daa
pop
inc
mov
pop
mov
repz
ret
jne
sbb
pop
dec
push
ds
lret
mov
mov
inc
xchg
aam
or
and
repz
test
pusha
ficomps
pop
jbe
sbb
pop
andb
jns
dec
inc
lea
pop
out
in
or
mov
rcr
mov
cmp
lock
pop
popf
ja
adc
xchg
inc
lahf
inc
sub
fists
jge
addr16
test
add
pop
popf
and
fistpll
int3
add
cld
rcr
fwait
jl
shll
nop
outsb
lods
push
pop
int
push
cmp
rclb
pop
sbb
jecxz
jge
aad
push
xchg
pushf
or
movsl
cmp
sbb
pop
out
aam
push
das
mov
mov
pop
mov
in
pop
cmp
mov
cli
add
xchg
adc
cmp
pushl
rolb
xor
and
popa
mov
and
movsl
cmp
test
shr
mov
cmpsl
mov
lea
push
pushf
int
int3
xchg
addl
loope
push
xchg
sbb
iret
sbb
sub
jmp
ss
imul
fsubs
out
xchg
cs
cli
jnp
add
push
mov
xchg
pop
scas
movsb
jbe
or
dec
inc
test
mov
jecxz
lods
cwtl
imul
add
call
jmp
fwait
mov
pushf
hlt
es
push
dec
adc
jnp
inc
and
adcl
cmp
loop
xchg
adc
xchg
clc
jle
add
test
jecxz
sbb
sti
or
enter
fnstcw
mov
xchg
xchg
popl
in
cltd
sub
scas
mov
mov
pop
pop
and
addb
aaa
cmpb
adc
xchg
ja
adcb
addr16
hlt
mov
pop
mov
push
cmp
sbb
sbb
cmp
js
cwtl
mov
in
data16
push
filds
mov
enter
xchg
repz
or
aaa
xchg
rcrl
dec
xor
jmp
fstl
lahf
adc
aas
clc
and
scas
mov
jmp
add
lret
mov
mov
inc
lock
je
dec
aaa
sub
loope
lahf
fisubrs
hlt
xchg
xchg
aaa
pushf
or
insl
jmp
loope
jecxz
fistpl
push
loop
or
jge
in
mov
movl
lods
mov
xor
mov
add
fsub
stos
in
andb
imul
jb
mov
popf
bnd
mov
out
mulb
bound
mov
pop
pop
jae
and
dec
mov
out
aaa
je
out
and
scas
sbb
push
mov
test
out
add
adcl
cmpsb
push
cmp
sbb
sahf
fstps
mov
nop
sbb
jmp
inc
stc
mov
cmp
das
out
ficoms
xchg
je
nop
les
cmp
push
xchg
cmp
sub
jecxz
xchg
sub
int3
push
in
push
loop
lea
fsin
lods
inc
scas
lea
fidivs
je
xchg
inc
or
add
mov
lret
or
stos
cmpsl
push
dec
and
mov
sub
cmp
inc
test
or
dec
and
mov
jmp
lods
in
cmpsb
std
cmpsl
push
repnz
pop
pop
adc
sbb
out
mov
sub
ljmp
pusha
mov
js
cltd
shrb
xor
xchg
imull
cmc
adc
in
pop
js
push
bound
sarb
arpl
xchg
popa
repz
int3
push
daa
xchg
cmpsl
jns
jbe
jle
stos
sahf
jmp
shlb
ja
bound
addb
ja
lods
lahf
fwait
cwtl
sbb
push
push
data16
mov
test
xlat
rclb
repz
shll
inc
mov
ret
mov
cmp
and
push
mov
cmp
loope
jecxz
push
jae
add
fwait
in
out
dec
cmpsl
pop
shlb
fldl2e
push
dec
xchg
out
push
outsb
dec
shrb
mov
shrb
mov
cmpsl
xlat
pop
incl
cmpsl
and
aaa
mov
leave
into
shl
jne
popa
pop
lea
xlat
jo
xchg
in
stc
js
push
fwait
cmpsb
cmp
jno
jo
push
aaa
xor
mov
mov
jae
xchg
mov
pop
and
cltd
cmp
mov
je
and
sbb
adc
fdivl
or
enter
stos
das
xchg
mov
cmp
inc
adc
addr16
fcmovnu
cmc
dec
xor
mov
sub
sub
push
sub
jbe
push
push
push
add
mov
pusha
nop
bound
jge
pusha
sub
insb
and
fldcw
lahf
lret
cmp
inc
inc
repnz
xchg
cli
sbb
jge
test
cltd
fimull
xchg
mov
sub
pop
jno
xchg
lock
add
push
sbb
rorl
fldl
sbb
inc
mov
add
int3
cmp
push
pop
lret
xor
ficoms
lret
stc
jecxz
ds
mov
lds
push
imul
dec
jmp
ljmp
loope
xchg
mov
fldl
add
bound
push
sbb
pushf
sti
sahf
sbb
xor
mov
out
js
jmp
inc
fldl
cld
mov
inc
and
mov
sbb
pop
sbb
inc
mov
in
jl
jmp
push
cmp
jb
vmptrst
dec
andb
ret
add
into
or
push
test
dec
int3
cmp
xacquire
and
roll
cmp
enter
loopne
mov
inc
xorl
pop
je
jge
sarl
mov
adc
mov
xchg
inc
or
orb
dec
ret
jg
dec
fldenv
push
and
test
dec
ret
dec
mov
iret
adc
lretw
xchg
shrl
imul
and
pop
mov
ret
incl
and
leave
shrb
xchg
add
imul
cld
sahf
sahf
dec
cmp
mov
in
mov
ror
sub
adc
lods
into
out
ret
sub
rcr
ret
inc
scas
lret
adc
inc
sbb
jns
cmp
lret
vmwrite
aad
not
cmp
fstps
inc
or
and
mov
negb
daa
gs
mov
or
outsb
test
sub
add
in
push
dec
dec
jno
xchg
out
and
mov
or
sbb
pop
xlat
dec
mov
cli
cmp
pop
cmp
sub
jecxz
xchg
int3
sbb
inc
pop
jns
sub
outsb
loope
pop
jne
rcrl
fldt
mov
or
addl
mov
jmp
mov
dec
imul
sbb
rorl
xor
je
cmp
fldt
xlat
xchg
mov
mov
sbb
lahf
sbbl
inc
sbb
jmp
lods
sti
pusha
cs
stos
mov
cmp
sbb
mov
lret
add
dec
in
les
dec
cmpsl
inc
add
mov
mov
out
push
add
gs
jp
push
xchg
imul
pusha
push
leave
and
pop
orb
inc
lret
jns
mov
jno
sbb
ror
rcrl
pop
jno
fimull
in
movsb
call
stos
test
incl
cmpsb
adc
ljmp
ja
incb
dec
jp
pop
add
inc
cmc
jle
mov
aaa
roll
xchg
pop
sahf
add
dec
rcrb
mov
xchg
loop
mov
or
cmp
dec
mov
xor
daa
fs
mov
adc
pop
pushf
cmp
dec
jp
mov
sub
out
push
dec
sub
mov
aas
stc
push
stos
out
outsl
inc
push
jns
or
xchg
inc
fwait
roll
sbb
mov
lea
sub
je
inc
aad
jne
mov
ljmp
int3
leave
cmc
fidivrl
sbb
mov
rcrl
xchg
xchg
mov
sbb
enter
xor
icebp
xor
mov
xchg
inc
or
and
ljmp
cmpsb
fnstsw
fwait
and
mov
dec
das
ljmp
flds
or
push
and
or
rorb
hlt
lret
clc
out
xor
packuswb
out
int
add
mov
aam
es
es
shrl
movsl
and
fistps
push
inc
sbb
mov
rclb
jae
adc
cld
push
es
mov
mov
xchg
stos
push
mov
ret
clc
cmp
mov
dec
sbb
inc
lret
icebp
outsl
jne
test
push
test
jmp
js
inc
adc
js
xchg
les
jbe
xor
int3
push
cmc
data16
js
hlt
xor
frstor
jbe
inc
lcall
xchg
ljmp
aaa
mov
popf
sub
and
push
stc
lret
pop
adc
call
ds
test
cmp
sbb
lods
pusha
push
ret
cmpsl
pop
xor
out
mov
inc
ljmp
push
or
adc
int3
cmp
stos
dec
ljmp
xchg
add
int3
mov
dec
cmp
dec
mov
lods
enter
dec
ss
jmp
cmp
jle
xchg
pop
rcrb
sbb
or
or
mov
sub
inc
lret
lcall
mov
mov
cmp
mov
scas
mov
jne
cmpsb
dec
add
inc
das
inc
adc
call
push
test
loop
call
iret
push
daa
inc
js
rorb
adc
adc
cmp
sbb
inc
cli
int3
clc
xchg
xchg
sub
jl
in
jle
add
dec
xchg
mov
xchg
xlat
bound
cld
xlat
sub
jecxz
xchg
adc
push
and
push
push
sub
add
adc
xchg
incl
sbb
enter
adcl
dec
in
gs
ss
addr16
sahf
std
pop
mov
mov
bound
gs
negb
mov
xchg
call
scas
inc
addr16
jp
lea
mov
pop
fucomp
aad
adc
notl
fwait
adc
inc
and
sub
pop
push
or
push
in
movsl
xlat
and
xchg
mov
negb
pushf
xchg
add
call
sti
negl
mov
xchg
imulb
call
lcall
mov
or
mov
clc
sub
sub
cmpsl
andb
es
je
repz
lds
dec
jns
daa
js
sbb
xor
cmp
inc
xchg
dec
push
jmp
int
pusha
adc
inc
dec
push
pop
sbb
sbbb
pop
dec
add
sbb
or
fstps
sub
loope
inc
cmp
imul
sbb
imul
mov
lret
and
scas
cmp
jb
rclb
cwtl
cmpl
pop
fnstcw
gs
pop
inc
lock
push
cmpsl
mov
mov
dec
fadds
add
jmp
cmp
jb
jecxz
pop
fs
enter
in
pop
and
sub
arpl
pop
sbb
mov
xlat
arpl
clc
ds
popf
scas
xchg
mov
cmp
lock
mov
and
mov
inc
popf
or
js
testl
in
xor
flds
int
fldt
mov
fnstsw
jl
mov
enter
xchg
out
adc
ret
push
test
xchg
xor
push
add
cmp
pop
mov
aam
dec
ss
pop
enter
popf
adc
xchg
jg
fwait
jb
xchg
sbb
jbe
out
xchg
inc
je
loope
scas
cli
pop
or
stc
dec
cld
imul
cwtl
data16
pusha
jmp
mov
jbe
pop
sbb
xor
lea
dec
daa
xchg
mov
mov
in
outsb
or
jle,pt
incl
scas
add
mov
sub
test
push
sub
pop
lret
add
imul
lcall
xor
xlat
int
push
addr16
mov
ja
cltd
or
push
imul
adc
mov
cwtl
xchg
jp
cld
movsl
pop
and
leave
cmp
jns
hlt
ss
dec
or
fdivrs
out
mov
mov
je
mov
adc
mov
cmp
cmp
out
iret
repz
stos
orl
inc
int
add
mov
cmpb
add
adc
int3
inc
pop
test
push
push
shrl
jnp
dec
fdivrs
rclb
cmp
push
jmp
or
addr16
or
nop
or
cli
in
cli
mov
add
and
insb
cmp
xor
hlt
test
mov
jmp
lret
fsubrs
sbb
cmpsb
cmpsb
jge
push
push
es
push
mov
jmp
sub
sub
mov
cvtps2pi
pop
sbb
xorb
lcall
adc
jmp
mov
mov
mov
mov
dec
push
xchg
fcompl
push
dec
dec
cmp
lods
xor
sub
lods
inc
mov
rol
jbe
push
sbb
or
lcall
push
scas
xchg
in
aad
ret
lcall
aad
sub
jmp
pushf
jnp
adcl
jg
cmpsl
cmpsb
and
inc
xor
jno
push
xor
cmpsl
add
sub
rclb
pop
sar
xchg
xor
jbe
push
lcall
and
lods
or
aaa
and
lds
add
movsb
mov
cmp
xchg
add
enter
movsb
dec
xor
sub
call
outsl
jae
xor
mov
cmp
in
push
inc
pop
cmp
int3
pop
adc
jmp
fistpll
mov
mov
addb
sbb
shll
inc
cmpsl
sarl
sbb
xlat
in
movsb
fdivrl
sub
fdivrl
add
int3
loop
lods
fnstsw
shlb
push
push
fwait
divb
aam
pusha
iret
sar
cmp
or
int3
out
add
sahf
daa
and
cmp
xchg
out
xor
pop
movsb
pushf
push
xor
std
or
push
inc
dec
decl
div
sbb
cwtl
ret
or
cli
test
jp
js
mov
ss
jnp
in
lods
fs
call
or
jne
ret
xor
dec
jge
aaa
gs
add
rolb
scas
adc
fwait
pop
pusha
sub
mov
mov
out
fnstcw
call
std
imul
push
push
mov
lea
aas
mov
pop
jnp
dec
jp
pop
xchg
adc
push
into
icebp
inc
lea
outsl
stos
movsl
mov
int
lret
dec
cmp
fmull
add
xor
enter
and
fidivl
cld
jb
xchg
mov
pop
lock
pop
pop
mov
mov
loop
js
adc
adc
jns
lret
mov
dec
out
inc
mov
imul
mov
sub
mov
inc
dec
add
test
aad
aad
push
dec
mov
xchg
int3
jbe
xchg
mov
push
sbb
fbstp
cltd
sbb
popf
and
and
cwtl
fxch
cmc
jg
adc
sub
repnz
mov
fcmove
dec
cmp
add
xor
dec
ret
or
jmp
adc
or
rorb
or
push
push
movsl
nop
cld
mov
addl
jmp
sbb
int3
pop
aaa
and
and
jae
stos
shr
sarl
xchg
fstpt
call
sbb
je
mov
add
dec
std
rorl
push
rclb
mov
ss
jnp
fisubrs
in
bound
fistpll
jne
or
sub
shll
dec
cmp
mov
mov
fisubs
icebp
mov
sbb
shlb
fwait
clc
std
cmp
add
jmp
push
inc
stc
aas
jbe
leave
aad
lret
lret
cmp
and
adc
push
into
test
sbb
imul
shl
jbe
pop
dec
dec
dec
cmp
loop
loope
dec
sub
jns
mov
sbb
inc
std
sub
xchg
pushf
imul
inc
popf
adc
and
sub
test
mov
inc
addb
sub
cmc
stos
mov
mov
jo
cs
or
xchg
push
pop
les
addl
cld
or
mov
test
mov
push
cwtl
mov
cmovb
inc
icebp
cmp
cwtl
adc
sub
andb
push
xchg
jge
mov
pusha
test
enter
sahf
orl
adc
imul
push
iret
movsl
cmpb
inc
xchg
mov
inc
arpl
cs
jle
adc
mov
adc
dec
fwait
or
cs
push
sub
pop
mov
xor
ljmp
mov
sbb
stos
test
out
fsts
adc
out
int3
and
mov
jno
aad
xchg
jl
dec
fisubrl
jmp
jecxz
adc
ljmp
or
pop
cmp
mov
flds
xchg
in
hlt
mov
stc
and
mov
pop
sub
addr16
imul
mov
lea
movsb
in
cmp
dec
mov
sbb
mov
jns
loop
or
jbe
scas
pop
pop
xor
dec
mov
int3
adc
testb
out
mov
sub
xlat
testb
int
adc
lods
xchg
add
movsb
mov
ljmp
mov
pushf
mov
mov
stos
pop
xor
sahf
dec
xchg
xchg
adc
adc
xchg
xor
sbb
arpl
aas
nop
sbb
xchg
bndldx
and
imul
inc
mov
scas
cmp
cmp
out
lret
xor
adc
sbb
add
dec
cmpsb
popa
repnz
xchg
mov
xchg
xor
pop
push
cmp
hlt
arpl
loop
mov
mov
mov
sbb
popa
stos
and
sub
adc
mov
test
mov
mov
stc
pusha
fidivs
cwtl
adc
add
ret
js
leave
int3
or
xchg
rcll
fistpll
sub
inc
jecxz
fidivs
lds
std
mov
mov
cmpsb
dec
jae
xchg
movsb
mov
cmp
xlat
add
push
or
lds
lcall
cld
das
push
sub
mov
fistl
add
in
popa
push
mov
inc
out
lcall
inc
push
xor
or
call
sbb
pop
push
add
pusha
lea
les
mov
dec
fidivrl
loopne
out
xchg
test
fnstenv
into
movsb
bound
and
cmc
addl
sub
jne
sub
add
xchg
ret
cwtl
loopne
push
aad
push
mov
xchg
sub
cmp
mov
push
mov
clc
jl
into
or
les
pop
jb
push
jno
and
xchg
inc
das
in
xchg
stc
mov
xor
xlat
push
and
lcall
dec
add
mov
and
aas
pusha
sbb
cwtl
xor
adc
repz
leave
out
xor
fdivs
cmp
adc
push
dec
jb
in
ljmp
fucom
ss
jg
roll
ljmp
lock
jo
pop
ficomps
jg
fmull
sbb
inc
in
cmp
mov
pop
add
orb
call
lahf
test
ja
or
xor
mov
pop
dec
or
jnp
lret
cmp
cltd
mov
cmpsl
inc
dec
dec
push
ljmp
insl
jmp
inc
sbb
scas
mov
cmp
pushf
and
xor
outsl
mov
add
xor
sub
push
data16
adc
loopne
add
jbe
xor
xor
mov
lock
in
or
pop
inc
xchg
mov
fsubrs
cmp
loopne
stc
fsubrl
push
shr
xor
sahf
push
inc
cli
dec
std
ret
jbe
repnz
jle
test
cmp
dec
faddl
jle
daa
jl
repz
aam
incl
rolb
lret
or
call
inc
inc
adc
fildll
incl
fcoml
hlt
add
sbb
mov
or
scas
xor
mov
popf
fs
movsl
mov
pop
mov
push
lea
sbb
into
into
push
adc
sub
jmp
scas
addr16
jb
loope
adc
bound
dec
xchg
mov
mov
mov
fisttpll
fimuls
push
test
leave
push
or
scas
xchg
nop
cld
out
enter
and
js
mov
ljmp
adc
sahf
sarl
or
movsl
and
leave
pop
dec
fidivl
pop
mov
mov
cmp
or
dec
jmp
pop
outsl
sbb
pop
stos
xor
mov
push
sbb
notb
push
stc
ljmp
lods
sub
int3
push
push
or
imul
pop
int
out
mov
mov
and
jne
dec
scas
int3
jns
sti
push
jmp
push
pop
cmpsb
adc
rcll
inc
jo
cmp
push
repnz
mov
dec
push
mov
mov
dec
mov
daa
and
fbstp
test
fildll
cmpsb
test
js
std
xchg
push
dec
pop
cmp
arpl
fldenv
and
in
sub
cmp
push
push
and
dec
loop
mov
ljmp
jl
jno
bound
ds
out
into
data16
mov
dec
xor
pop
and
sti
mov
ret
sub
or
out
xchg
xchg
mov
fdivrl
mov
ds
out
push
mov
xlat
fwait
stos
scas
mov
clc
loopne
add
jns
cmpl
cmp
mov
cmp
nop
and
cmc
mov
dec
or
ret
cs
lcall
daa
sti
pop
mov
lock
pop
sti
mov
push
out
push
andl
outsl
ss
lea
scas
pop
sub
das
push
xor
fiadds
xchg
dec
cmp
cwtl
jnp
scas
scas
push
adc
push
lahf
imul
shrl
das
add
out
and
add
aas
push
lahf
dec
scas
stc
or
mov
push
outsb
ds
xor
xor
fbld
or
sbb
xchg
loop
dec
mov
cmp
enter
or
mov
cwtl
cmp
sub
push
adc
inc
jne
mov
push
mov
lgs
pop
fsubl
das
rcrb
movsl
stc
cmp
jbe
xorl
xchg
jp
leave
xlat
icebp
adc
cmpsb
sbb
jmp
dec
pusha
pop
icebp
mov
lds
lds
pop
xchg
and
lcall
gs
inc
lahf
popa
mov
cs
xor
int3
gs
add
cmc
enter
and
lcall
arpl
push
popa
adc
fisubrs
add
jns
lea
and
and
inc
xor
push
sbb
cmpsl
inc
dec
daa
loop
sbb
jecxz
jle
fmull
mov
in
leave
push
dec
dec
loope
dec
jmp
sub
xchg
xchg
mov
enter
bound
push
lds
rcll
mov
lret
xchg
adc
arpl
mov
je
sahf
adc
cmp
fmuls
outsl
push
adc
mov
mov
std
div
aam
xor
mov
jno
cmpsb
in
lea
test
out
out
pop
mov
add
inc
gs
pushf
cld
mov
pop
loope
cmp
subb
mov
mov
stos
push
fs
mov
inc
aaa
aaa
xchg
out
insl
cmpsl
mov
jbe
jns
pusha
jo
and
pop
lds
dec
and
push
stos
sub
andl
into
scas
icebp
lret
out
xchg
mov
ljmp
adc
fs
enter
xor
xor
mov
lret
bsf
pop
mov
fsubl
add
or
adc
lcall
adc
stos
xchg
and
sbb
push
ss
scas
and
push
jno
movsb
mov
mov
lea
pushf
or
inc
push
mov
mov
faddl
sbb
jno
adc
leave
xchg
iret
movsb
sbb
lods
hlt
mov
idivb
or
mov
push
xchg
jns
xchg
push
mov
iret
mov
movsb
cli
sub
mov
rclb
or
out
xchg
mov
dec
inc
cmp
les
jl
cwtl
dec
mov
and
std
or
and
and
mov
pusha
cwtl
out
sahf
lret
mov
bound
addr16
cltd
jnp
int3
mov
mov
fnstcw
ljmp
sahf
pop
bound
jbe
int3
push
pop
jne
lea
and
sti
adc
lock
cld
sub
in
xor
fcoms
cmpsb
xchg
lcall
push
mov
add
fstpl
and
mov
hlt
pop
fldcw
cmpsb
xlat
and
into
fwait
mov
push
pop
inc
push
mov
jmp
insb
xchg
jae
sub
ja
dec
jle
add
push
fistl
adc
fstps
dec
adc
std
adc
adc
aam
or
sbb
inc
shl
cmp
jb
jno
nop
shll
jae
push
push
fcmovnbe
xchg
fcom
sbb
incl
jecxz
xor
jae
xchg
sbb
sub
adc
ret
or
orb
mov
cs
xor
cli
clc
lods
mov
shr
pop
inc
imul
add
or
mov
rorl
jno
ret
jge
and
sub
sub
arpl
outsb
lds
xchg
ss
jecxz
loope
cltd
bound
mov
pop
mov
jbe
adc
mov
and
mov
push
pusha
add
nop
push
mov
push
jnp
andl
jp
xchg
pop
icebp
jp
shlb
sahf
out
out
arpl
and
push
add
add
jmp
imul
testl
jno
xchg
daa
loop
sbb
out
pop
sti
sbb
mov
pop
orb
push
sub
and
scas
xor
out
xrelease
movsl
pop
popf
test
movsl
imull
sub
in
sbb
in
xor
mov
sti
xchg
outsl
loope
roll
xor
mov
shlb
sbb
sbb
sub
dec
cmp
xor
or
clc
cs
and
in
xor
rcr
fimull
imul
sbb
enter
frstor
lock
mov
out
cmp
sbb
call
dec
inc
mov
call
mov
add
adc
mov
dec
test
nop
mov
xchg
lods
push
or
or
and
mov
pop
mov
xor
rclb
mov
scas
xchg
adc
sbb
sub
push
cmp
in
lods
loop
test
mov
add
mov
aam
add
adc
adc
mov
js
out
push
mov
sub
in
inc
ret
mov
pop
lret
repz
sti
cmp
pop
pop
pop
mov
sub
loopne
test
test
bound
sbb
ficompl
addr16
inc
and
insl
push
sbb
xchg
lret
jb
cmpsb
mov
aam
rcr
add
aaa
and
pop
mov
adc
sub
inc
mov
inc
test
in
test
inc
sbbl
mov
adc
cltd
push
jns
mov
scas
jge
mov
jbe
dec
sbb
inc
lods
lods
push
inc
xchg
adc
mov
insb
insl
arpl
push
dec
outsb
adc
cmp
adc
xchg
loopne
sbb
out
fmul
pushf
xchg
jb
adc
dec
mov
inc
pop
push
dec
xlat
cmp
jecxz
cwtl
pop
push
and
sahf
movsb
cli
mov
lahf
xchg
test
insb
ret
dec
mov
aaa
mov
ja
imul
adc
stos
dec
xlat
sub
pop
cmp
jbe
gs
test
cmp
scas
testb
popa
pop
adc
push
lods
xchg
lods
mov
sub
fwait
insb
push
push
out
and
jno
fnsave
add
adc
mov
ret
adc
pop
insb
or
inc
clc
mov
or
jne
push
mov
dec
sti
or
fsubr
stos
ret
push
sbb
out
jns
das
stos
inc
jb
popf
clc
jnp
sub
lods
movsb
nop
ret
sub
xchg
jecxz
pop
sti
std
mov
sbb
pop
pop
fwait
and
addl
mov
les
stos
movl
dec
pop
das
int
imul
fdivl
out
inc
movsb
shlb
push
jns
xchg
xor
jnp
roll
add
cld
mov
in
loopne
bound
mov
jne
mov
cltd
adc
hlt
mov
mov
out
dec
repz
push
jne
ror
lods
adc
dec
shll
mov
cltd
pop
fwait
adc
cmp
xchg
inc
or
pop
rcr
les
cmp
jo
inc
ljmp
push
sub
push
pminub
out
xchg
aaa
push
data16
adc
jmp
mov
mov
fwait
adc
fwait
sub
hlt
push
lcall
push
into
ja
mov
pop
addb
sbb
lcall
cmp
addr16
add
das
add
and
rorl
repz
sub
push
test
mov
dec
jge
fsubl
sub
mov
imul
dec
aad
pop
mov
aaa
daa
xchg
idivb
mov
into
sti
dec
mov
mov
in
fldl
mov
int
sub
sub
xchg
push
scas
push
dec
mov
xchg
out
lahf
adcl
popf
push
into
arpl
dec
mov
nop
lret
xor
add
leave
jne
and
mov
pop
push
dec
jns
mov
or
or
jno
mov
sub
adc
clc
insl
outsb
cmp
push
xchg
cmp
decb
xchg
aaa
adc
mov
fwait
dec
sub
sti
scas
push
push
movsl
loopne
shrl
jge
iret
push
and
mov
cmp
icebp
sub
aas
pop
rcrb
xchg
add
sbb
cmc
cmp
mov
add
into
push
aas
dec
shll
addr16
popa
cmc
jno
mov
ss
push
sub
sub
sbb
sub
xor
xor
jb
add
sub
in
mov
adc
cmpsb
jbe
pop
adc
popa
fninit
std
loop
mov
dec
sub
push
xchg
sarb
dec
test
ja
jle
cmp
inc
arpl
pop
push
mov
cmp
jle
cld
fdivl
loopne
ja
xchg
cmp
cmp
adc
test
and
xchg
jns
popf
mov
sti
scas
int3
in
and
pop
pop
lcall
mov
aas
adc
add
xchg
nop
bnd
lcall
dec
jp
in
in
xor
fidivl
sub
std
push
xchg
scas
les
inc
out
sbb
les
in
pusha
mov
pop
fisubl
push
mov
jne
insb
fcoml
outsl
cmp
dec
dec
and
lods
push
or
mov
xchg
gs
or
not
adc
sti
push
mov
mov
loopne
outsb
subl
jbe
mov
jns
push
arpl
in
sbb
lret
jg
mov
fcomp
and
mov
bswap
fmul
sub
roll
jg
add
sub
jo
push
adc
aas
jb
jmp
out
dec
mov
inc
mov
inc
push
sbb
jl
je
gs
icebp
pop
dec
sahf
dec
push
mov
int3
mov
jae
mov
sub
pop
ds
cmp
or
mov
pop
bound
inc
mov
shlb
cmc
ljmp
xchg
imul
sub
xchg
mov
adc
sub
divb
sub
inc
push
lods
in
xchg
mov
adc
sahf
pusha
arpl
outsl
cmc
ljmp
pop
ljmp
sub
mov
nop
ja
jmp
xor
ficomps
cli
sbb
add
xchg
xchg
lahf
flds
je
inc
push
or
and
mov
daa
sub
repz
mov
add
adc
mov
lret
ret
xchg
or
pop
out
add
mov
repz
dec
cmp
movsl
popf
mov
sub
adc
or
std
or
dec
xchg
push
jo
dec
in
xor
or
movsl
imulb
cwtl
add
adc
cmp
mov
push
dec
sub
int3
mov
mov
inc
aaa
xchg
mov
nop
test
and
out
sarb
adc
lahf
cwtl
aam
sahf
mov
or
aas
fcomi
push
fnsave
xchg
jl
andb
shrl
inc
cmp
cli
push
sub
add
int3
inc
dec
std
push
mov
stos
jno
dec
sbb
call
dec
jp
mov
shr
add
mov
xchg
and
or
xchg
jecxz
arpl
or
xchg
cmp
in
inc
cmpsl
sbb
pop
push
call
adc
movsb
gs
out
bsr
dec
roll
mov
and
mov
or
adc
or
outsl
pop
int3
push
rorl
lods
sarb
sub
lea
cmp
shlb
leave
jp
or
addr16
jno
hlt
mov
inc
mov
incb
ds
enter
push
movl
cs
push
cmp
leave
push
cmpsl
leave
pop
xor
xor
lahf
ret
or
loop
je
jae
enter
aas
jge
ljmp
inc
enter
pop
js
dec
mov
xor
mov
inc
fsubrl
dec
jnp
inc
mov
cmp
mov
sahf
dec
mov
shr
ss
rolb
push
adcl
pop
or
or
or
mov
pop
dec
popf
sub
cmp
lds
xchg
or
or
add
add
add
sbb
popf
pop
leave
test
mov
jge
sarb
jno
cmp
mov
xchg
ds
pop
and
shlb
paddsb
nop
scas
xor
sbb
fwait
arpl
mov
ljmp
insl
xchg
out
cld
iret
or
add
clc
aad
jno
nop
push
stos
test
sub
mov
orb
or
mov
sub
fldlg2
cwtl
push
std
aas
mov
push
cmp
cli
xor
add
push
cmp
xchg
imul
lahf
cli
sub
roll
rorb
ret
addb
dec
mov
bound
and
sub
aaa
push
dec
jmp
jl
xchg
repz
pop
sub
ja
pusha
notl
jmp
push
int
push
sub
arpl
lahf
sbb
pop
ret
rcrl
movsl
insl
cld
stc
push
test
or
pusha
test
pop
adc
out
or
jp
addl
dec
dec
mov
das
add
bound
cmp
pop
out
sub
lahf
test
aaa
mov
and
dec
adc
jmp
add
adc
cmp
sub
mov
inc
adcl
ljmp
sub
jl
ret
iret
shlb
or
sub
loope
bound
or
insl
cmp
jne
cmp
fdiv
aam
xchg
iret
fsub
mov
testl
lcall
mov
xchg
cltd
rorl
icebp
mov
popa
pop
hlt
lcall
movsb
fidivrs
hlt
inc
mov
xchg
daa
fs
and
call
sahf
outsl
pop
loopne
and
bound
sti
push
pop
imul
pusha
shlb
leave
sahf
inc
addl
out
pop
out
xlat
add
int3
cltd
movsb
imul
fs
jno
into
mov
out
fdivl
push
mov
mov
cmp
stc
mov
fisubrl
movsb
idivb
mov
xchg
cmp
outsb
and
decb
stos
mov
pop
sbb
adc
pop
push
lock
in
ljmp
in
pusha
push
loopne
fldl
in
insl
xchg
jne
loop
add
pop
or
push
test
loop
loop
lods
jg
data16
jp
inc
fwait
xor
int3
ret
das
adc
pop
imul
mov
mov
mov
cwtl
cs
idiv
decb
imul
xchg
movsb
sbbb
inc
insb
jle
sbb
leave
js
mov
jmp
adc
jmp
pop
sbb
mov
repnz
emms
lods
xchg
adc
sbb
mov
mov
nop
sub
adc
inc
dec
xchg
sub
pop
cmp
mov
lods
leave
adc
mov
in
pop
sbb
pusha
xchg
add
and
lods
orb
ljmp
cmp
jg
add
cmp
vmovsd
or
stos
cmp
or
nop
pop
jg
inc
push
jecxz
aaa
aad
mov
fsubr
and
mov
adc
faddl
ret
mov
adc
jl
out
add
push
idivl
mov
fimull
lret
test
mov
xor
xor
fldenv
imul
pop
aam
flds
aam
shll
jns
rcrb
xor
push
sub
pop
aaa
inc
sub
mov
loopne,pn
xor
cwtl
cmp
jg
out
insb
sub
hlt
xor
loop
or
mov
ss
push
into
dec
divl
nop
or
jle
jmp
sbb
xor
sub
fcmovu
lods
hlt
sbb
fists
test
jbe
and
mov
jb
loopne
mov
dec
pusha
dec
mov
xchg
add
mov
jge
inc
mov
outsl
add
subl
bound
addl
xchg
jae
dec
add
dec
loope
insl
gs
lock
repnz
orl
xchg
xor
xor
jge
incl
aas
xor
mov
jne,pt
ljmp
or
jp
movsb
cmpsl
shr
dec
popa
jns
lods
orl
call
les
xchg
mov
adc
pop
xchg
or
mov
repz
or
sbb
insl
adc
mov
sub
subl
inc
mov
push
jns
out
dec
push
mov
fdiv
pushf
ljmp
dec
jmp
cltd
adc
fimuls
adc
mov
add
xchg
outsl
xsaveopt
xor
cli
rclb
call
test
stos
outsl
push
pop
lahf
js
push
push
mov
adc
filds
iret
push
hlt
adc
ret
stos
lods
push
stos
cmc
cwtl
imulb
jge,pn
lahf
dec
shl
movsl
hlt
mov
dec
pop
and
jnp
jge
andl
sarl
fs
shll
gs
pop
stos
enter
push
inc
loopne
pop
xor
adc
mov
lahf
daa
testb
mov
cmpsl
daa
dec
push
out
mov
xchg
mov
cmpsl
adc
cmpsl
adc
xchg
bound
aas
out
fs
ja
dec
xor
xor
mov
shll
mov
int
mov
insb
push
into
aas
inc
sbb
cltd
icebp
cli
jle
lock
mov
out
push
movnti
ficomps
insb
jo
fistl
mov
push
les
fwait
in
insb
negb
mov
ss
std
pop
jbe
les
jle
xchg
push
test
movsl
mov
in
fs
and
cmp
bnd
xchg
lcall
push
cmp
mov
je
shll
stos
in
or
and
nop
js
dec
fistpll
and
dec
mov
pushf
pop
cld
data16
fisubs
popf
lea
inc
loopne
repz
out
out
mov
xchg
sub
sub
inc
lahf
movsb
cs
mov
mov
dec
jbe
outsb
jae
cmp
cmp
inc
xchg
cmc
mov
sub
fnstsw
lret
sbb
outsb
jae
add
sbb
sbb
sub
sub
dec
leave
imul
cltd
mov
loopne
je
jp
loope
jmp
test
loope
mov
in
dec
or
sub
xchg
or
mov
testb
outsb
outsb
scas
jmp
jbe
or
cld
sub
lret
add
and
inc
lret
xor
arpl
add
mov
lret
int3
cmp
int
test
mov
sub
push
fcoml
shrb
sbb
xchg
std
xor
mov
xchg
sbb
xchg
cld
fldl
lock
pop
cmp
enter
dec
and
xlat
std
ficoms
icebp
popf
imulb
jge
push
xor
jg
mov
add
push
pop
lcall
fs
loopne
cmp
jns
shlb
mov
stc
xchg
lret
fidivs
xor
cltd
sbb
and
fsubs
call
jg
mov
push
fdivp
stos
xchg
fldl
mov
daa
es
and
dec
or
popf
xor
fidivrs
lods
lcall
push
dec
inc
and
inc
mov
pusha
push
pop
xchg
popf
addl
mov
and
stos
or
push
sub
mov
aad
xchg
add
xchg
in
dec
loop
aam
xchg
mov
fsubrp
out
std
push
cmpsb
aaa
inc
inc
mov
xchg
insl
push
stc
push
sub
and
push
js
repnz
clc
or
xor
inc
jg
xor
imull
or
cmp
rol
add
fsubrp
add
scas
stos
cmp
dec
aam
scas
outsl
pop
cwtl
jae
pop
mov
fwait
sbb
mov
cmp
pop
cmp
fistps
dec
ret
sarl
in
xchg
out
add
shlb
outsb
mov
addr16
xor
pop
iret
std
in
ficoml
cmp
test
ficoms
dec
clc
push
or
and
mov
or
jb
fstps
or
push
pop
scas
stos
xchg
clc
insb
mov
int3
idivl
push
pop
lret
popf
inc
outsl
pop
stc
jecxz
scas
pop
outsb
sbbb
in
sbb
mov
pop
jp
inc
sub
dec
lret
mov
or
es
xchg
loope
leave
push
loop
cmp
inc
sarb
push
repnz
cmpsl
dec
es
imul
pop
dec
test
or
jae
scas
gs
clc
out
mov
stos
sub
push
pop
push
jle
ret
add
daa
xchg
dec
push
xor
daa
fcmovnbe
fmul
popa
rcrl
sti
pop
pop
dec
mov
add
insb
pop
adc
outsl
stos
out
sbb
xchg
aam
sahf
push
rorb
mov
mov
cmp
jno
aaa
mov
pop
stos
pop
pop
je
and
push
xorb
mov
mov
cwtl
mov
sub
sub
sbb
push
sub
push
mov
ljmp
pop
and
stos
cmp
adc
add
mov
mov
cltd
psubusb
fs
sbb
cs
out
and
stc
add
jmp
iret
fsubs
xchg
jl
movsl
mov
sub
and
push
lcall
insb
insb
dec
xor
push
mov
int
push
scas
sti
xchg
pop
adc
aaa
xor
aam
jmp
inc
xlat
fs
paddb
int
jne
ret
jo
pusha
add
xor
out
fcmovnu
test
inc
jb
daa
shll
cmp
fidivs
cmp
or
scas
inc
cmp
xchg
inc
xchg
lds
push
outsl
inc
mov
iret
pop
pushw
hlt
lahf
and
add
dec
mov
stc
movl
movsl
test
shlb
adcb
out
ja
or
cltd
stos
cld
ds
ficompl
jo
jecxz
lcall
leave
loopne
dec
mov
arpl
mov
mov
scas
xchg
dec
ja
cli
add
push
mov
ss
lahf
ja
pop
or
mov
mov
in
mov
imul
xor
mov
dec
les
ljmp
dec
hlt
lods
fists
fists
xlat
cmpsl
inc
mov
test
dec
dec
dec
push
insl
jns
notb
dec
notl
stc
mov
dec
lret
pop
lea
test
pop
repnz
xorb
or
int3
add
push
mov
sbb
pop
je
lods
stos
scas
sbb
outsb
adc
adc
jbe
in
sti
lock
leave
pop
and
mov
adc
test
lar
fcoml
jne
cmp
repz
cmc
lods
insl
jo
xlat
add
xchg
lods
aaa
ljmp
mov
xchg
int
or
cmp
roll
dec
dec
inc
rcr
or
xor
jae
loopne
idivb
adc
jno
xchg
aam
cld
lock
jmp
xor
imul
lahf
movsl
cmc
std
bnd
add
dec
fisubs
aas
sub
or
inc
pop
in
push
xor
lods
test
or
dec
jnp
fidivrs
sub
pop
divb
xor
add
imul
mov
mov
lahf
pop
xchg
je
dec
push
sarl
add
rorb
movsl
pop
andl
ret
push
sbb
or
mov
jle
mov
pushf
cs
dec
xor
imul
insl
cli
pop
nop
imul
loopne
cmpl
shlb
cmp
sub
mov
or
mov
ljmp
sbb
sbb
fwait
cmp
inc
jecxz
dec
and
orb
push
int3
mov
scas
sbb
push
mov
outsb
jg
loop
lds
or
push
mov
fwait
jle
and
pop
dec
cmp
pop
ret
mov
jns
imul
lds
cmp
ret
sub
pop
loope
aam
popa
lock
mov
int3
pop
mov
jno
sub
mov
jl
adc
jae
push
xchg
pop
imul
or
mov
sub
out
mov
into
aam
ss
les
push
xchg
jno
push
fbstp
sbb
shll
and
out
push
into
cmpsb
stc
mov
in
add
inc
mov
out
cmp
cs
adc
dec
inc
ret
into
pop
aam
and
inc
or
ja
repnz
sbb
mov
or
xor
sub
xchg
sbb
orb
test
daa
xchg
js
xor
das
adc
fcomi
mov
jmp
outsb
add
lock
fs
out
sbb
mov
shll
cmpsb
push
inc
repnz
ret
adc
add
push
dec
ljmp
mov
mov
pop
push
shll
ss
cli
cltd
xor
sbb
dec
pop
jg
mov
inc
ljmp
pop
ret
test
aam
out
dec
cmpsb
rolb
fs
cmp
push
cmp
outsb
sbb
ja
pop
jnp
pushf
adc
push
xor
mov
in
loope
lahf
out
ss
mov
xchg
pop
push
push
test
ret
adc
xchg
imul
pop
mov
dec
sbb
push
sub
xchg
lds
ss
jo
call
mov
or
sub
add
lahf
frstor
sub
push
cmpsl
mov
lock
adc
clc
call
mov
popa
and
pop
pop
ds
jp
mov
ficomps
add
pop
pusha
out
dec
mov
out
in
rcrl
les
dec
mov
cmp
cmp
dec
subb
les
cmpsb
mov
adc
pop
leave
xor
leave
fdivr
push
push
adc
fwait
jp
lea
push
mov
or
ss
test
sub
jl
mov
mov
push
cmp
loopne
jge
add
mov
mov
aad
in
fdivrs
xlat
stc
mov
xor
sbb
cli
or
cs
test
fdivrs
mov
frstor
decb
cwtd
adc
stos
sub
xchg
push
mov
dec
jg
test
and
shl
subb
mov
jmp
imul
push
rclb
push
lcall
push
js
enter
sub
xchg
add
mov
or
add
mov
sub
sbb
cmp
adc
xchg
pop
xchg
mov
mov
jnp
mov
or
mov
movsb
jle
inc
scas
aas
dec
ret
inc
insb
cmp
insl
repnz
cmpsb
ret
mov
jmp
mov
addr16
mov
repz
es
push
test
fs
xor
dec
inc
pop
lcall
insb
cmc
and
mov
jns
sbb
pop
add
inc
aas
cmp
out
movb
push
push
mov
lahf
mov
mov
or
std
in
sbb
sarl
jns
or
push
pop
xchg
mov
loopne
sub
jae
or
cmp
arpl
stos
mov
jp
lds
scas
pop
sbbl
mov
xlat
add
sarb
sbb
fidivrs
jns
inc
jecxz
mov
inc
imul
and
call
pop
lock
mov
out
pushf
js
test
mov
fcompl
mov
mov
pusha
mov
xchg
scas
jnp
fidivrl
scas
cmpsb
imul
aad
ret
mov
popa
jne
mov
adc
mov
loop
lea
lods
mov
stc
int
insw
inc
jl
fildl
pop
call
pushl
aas
sbb
dec
dec
sbb
cmp
bound
out
pop
faddl
popa
mov
sub
xor
fs
lret
dec
ficompl
mov
xchg
roll
hlt
popf
leave
jmp
sub
pop
or
sahf
or
rcr
movsl
stos
lods
loopne
add
lods
mov
pop
rolb
xor
inc
out
xor
ret
mov
mov
xor
mov
xor
mov
push
and
mov
clc
stc
lds
rolb
pop
add
push
xchg
fs
test
jp
loop
or
pushl
jmp
or
inc
cmp
aaa
inc
xchg
mov
loopne
jbe
mov
popf
iret
xor
xchg
mov
jmp
popa
loop
scas
lret
mov
ss
add
dec
sbb
adc
sub
subb
test
sbb
pop
out
movsb
xor
popa
xorb
les
cwtl
mov
mov
pushf
or
push
or
add
xor
mov
cmp
out
cmc
mov
movsb
loope
repnz
sbb
push
test
and
sub
push
mov
mov
aaa
filds
push
and
or
jp
lods
cmp
test
pop
pop
mov
cltd
jno
or
sarl
mov
dec
xor
dec
aad
xor
ds
and
cmp
sbb
mov
insl
loopne
lds
pop
ss
add
fildll
pop
lods
push
dec
orl
sahf
aad
enter
sbb
in
inc
dec
aad
loopne
inc
sub
or
dec
popf
pop
pop
pop
push
enter
xchg
in
jecxz
add
sbb
or
mov
pop
cmpl
ja
push
lea
nop
push
mov
adc
imul
popa
aas
jb
inc
into
insb
out
fsave
sub
xor
outsb
arpl
pop
sub
aaa
lds
repnz
scas
adc
loopne
sub
aaa
push
push
xlat
xor
cmpl
pop
addb
fisttpl
pop
mov
popf
rcrl
pop
mov
movsb
inc
push
xchg
jp
aaa
stos
movsb
sub
jno
xor
or
loopne
dec
out
cmpsl
cwtl
pop
mov
sbb
sub
mov
xchg
jns
or
out
jne
or
xchg
xor
pusha
sub
sub
mov
xchg
pop
loop
shrl
pop
xor
mov
xor
sbb
dec
or
inc
sbb
sbb
xchg
inc
cmp
mov
adc
shrl
mov
shll
scas
and
sbb
fs
aad
fbstp
mov
and
mov
daa
mov
test
push
jne
or
out
ffree
xor
mov
inc
div
in
aas
rorl
pop
add
and
mov
test
mov
addr16
or
stos
jle
mul
mov
movsb
xor
data16
test
sub
xchg
mov
xor
jp
cmp
jg
sub
out
xor
sub
or
adcb
out
lahf
pop
xlat
xchg
mov
push
dec
clc
roll
push
add
xchg
pop
popa
push
dec
and
xor
fs
test
or
xorl
jg
incb
jae
lds
jne
jge
cld
cwtl
jae
leave
jb
std
push
push
rclb
xchg
loopne
mov
sbb
cmp
insb
mov
adc
loope
lahf
or
daa
mov
jp
xor
pop
test
cmp
mov
popa
hlt
jb
mov
xor
out
sub
inc
pop
and
out
inc
ss
enter
iret
mov
sbb
and
cmpsb
cmpsl
repz
fwait
insb
lcall
lea
test
sti
in
xor
lar
pop
cmp
mov
push
je
dec
and
sahf
or
in
arpl
xchg
in
fdivp
push
sub
push
jmp
ss
mov
xor
jbe
adc
idivb
out
inc
sub
mov
cld
inc
push
mov
leave
imul
call
pop
sub
in
les
ja
xor
add
mov
das
lods
fwait
test
fsubrl
adc
xlat
add
data16
xchg
xor
mov
jmp
ds
xor
lret
jmp
mov
mov
out
cmp
sub
aaa
lahf
imul
roll
loopne
cmp
inc
mov
add
sahf
cmp
or
xchg
sub
push
in
adc
fbld
cmp
xor
aas
and
fimull
outsb
ret
pop
or
cmp
sti
sub
push
outsb
insb
cmp
fwait
fs
rcll
mov
and
call
sub
mov
fldl
stc
and
scas
rol
xchg
mov
test
dec
mov
rcrb
cltd
inc
data16
add
test
mov
cmc
or
ficomps
or
stc
inc
pop
jecxz
mov
jo
lcall
fnstcw
je
push
mov
loope
je
and
inc
cmpb
sub
jmp
adc
mov
dec
hlt
fwait
jo
adc
popf
mov
fwait
je
test
jnp
pop
out
push
push
not
gs
mov
push
or
je
sbbb
xchg
lret
out
and
insl
lcall
ljmp
and
cmp
mov
dec
bound
cmpsb
push
sahf
jge
rclb
pop
or
mov
pop
cmc
or
xchg
sub
test
sbb
scas
push
push
fdivrs
lock
or
jmp
cld
cltd
fisubrs
inc
mov
add
xor
leave
into
push
push
xor
out
mov
idivb
mov
shlb
in
inc
adc
fnsave
scas
jecxz
rorl
out
mov
jb
xchg
add
hlt
test
pop
xchg
and
adc
mov
outsb
xor
mov
out
mov
movsl
xor
aad
out
int
dec
outsb
jno
les
sub
inc
ja
movsb
mov
loopne
enter
dec
out
cmp
pop
push
insb
mov
mov
divb
popa
lret
imul
mov
xor
inc
out
test
jle
ss
lahf
mov
xor
xor
outsb
pop
mov
lock
cmp
mov
mov
xchg
xor
rorl
push
lahf
ds
adc
jge
repnz
cltd
out
fimuls
mov
add
fwait
cmp
bound
clc
shr
ret
push
sbbl
fisttpl
and
lret
jo
sahf
and
mov
mov
xlat
es
add
add
mov
push
mov
xchg
fisttps
insb
adc
mov
loope
in
inc
pop
out
adc
cmp
test
in
shll
mov
mov
jno
sub
jno
stos
pop
and
insl
cld
dec
loop
jg
mov
jg
enter
mov
jo
testb
daa
add
cmpsl
out
int
pusha
sbb
jnp
mov
in
sub
sub
les
add
loop
jnp
xlat
mov
sbb
sub
out
mov
sbb
push
cmp
addr16
shlb
ja
dec
dec
repnz
push
xchg
and
pop
pushf
add
xlat
rcr
mov
xor
dec
jno
xchg
dec
push
popa
leave
pop
dec
jecxz
jbe
pop
loopne
jecxz
and
js
dec
aad
adc
pop
xchg
fistps
mov
movsl
into
aas
mov
clc
test
shrb
mov
xchg
in
fsubrp
mov
mov
dec
stos
xchg
pushf
adc
ja
test
cmp
jp
mov
xchg
pop
add
daa
cmp
loopne
ret
and
sub
dec
icebp
pop
lods
pop
std
jl
cmp
lock
mov
jae
mov
shlb
int
cmc
adc
pop
and
les
inc
pop
jne
xor
mov
sub
je
jp
imul
nop
adc
sbb
imul
rcll
mov
sbb
sub
jb
dec
mov
sahf
jle
cwtl
rolb
add
push
push
shlb
pop
imul
cs
std
lock
mov
nop
cmpsl
cs
shr
sub
imul
iret
xchg
fcoms
jmp
push
dec
insb
add
push
fisttpll
call
enter
mov
ds
clc
sub
mov
xchg
out
or
cltd
sbb
mov
sbb
jnp
sub
pop
jmp
jmp
ret
sbb
jle
and
mov
cwtl
push
ret
lea
ljmp
bound
fsubrl
call
cmp
mov
je
arpl
js
stc
or
add
jo
ja
shlb
scas
mov
sti
lds
loopne
sub
lods
add
in
xchg
sbb
cmp
lods
dec
or
andl
cmp
ret
ds
lea
and
mov
hlt
mov
fwait
jo
pop
mov
gs
scas
jmp
pop
jo
adc
mov
lods
cmpsl
adc
addb
fbstp
rcrb
mov
or
jne,pn
pop
popa
cmp
ja
mov
adc
cmp
loopne
pop
icebp
pop
jmp
mov
sbb
pusha
jnp
popf
pop
mov
mov
cs
insl
insl
mov
add
mov
add
in
sbb
sub
out
mov
shld
jg
inc
mov
xor
jne,pt
push
scas
dec
in
orl
pop
imul
daa
cltd
shll
mov
ljmp
cmpb
sub
jae
inc
mov
push
adcl
enter
mov
orb
cmpsb
inc
mov
cwtl
fimull
ja
push
jno
aam
mov
dec
test
popf
pop
mov
stos
and
and
aam
mov
xlat
setl
mov
inc
mov
push
or
mov
add
int3
xor
cwtl
and
jmp
inc
or
cmpsb
xchg
xor
or
into
mov
lock
scas
or
adc
cmp
call
idivl
test
loop
add
and
sub
or
pusha
push
mov
mov
ja
push
push
add
mov
cmp
jbe
mov
lret
sbb
mov
adc
pop
stos
or
data16
mov
mov
int3
fnstsw
test
cs
and
outsb
mov
lock
adc
xchg
fildl
jge
or
pop
or
inc
xor
dec
pop
sub
sti
lret
test
cmp
outsl
push
outsb
leave
movsb
mov
sarb
loopne
sbb
xchg
into
fsubr
or
jle
lret
mov
xor
pusha
cs
ret
orl
adcb
outsb
push
pop
and
repz
out
inc
xlat
add
loopne
dec
push
add
aaa
imul
dec
xor
and
add
imul
mov
dec
enter
xor
adc
test
jge
aam
xor
and
push
imulb
lret
xor
pop
adc
fistpll
incb
icebp
cmp
adc
je
cmpsb
push
cli
cmp
mov
sub
pop
andb
ficoms
mov
daa
dec
rcrb
shll
jb
std
mov
sub
inc
into
jge
out
loope
mov
inc
mov
pop
cmp
push
lock
inc
ds
xor
mov
mov
daa
sub
inc
push
test
std
cmp
out
mov
xor
fs
sbb
or
mov
sub
fcomip
clc
dec
sahf
inc
dec
dec
mov
jle
xlat
ja
aad
xchg
inc
frstor
sbb
mov
pop
lock
rcrb
inc
or
js
imul
sbb
xchg
sbb
inc
xchg
mov
test
and
push
mov
jns
nop
inc
outsl
fwait
mov
jl
jmp
xor
ss
ss
and
jb
outsb
push
out
scas
jnp
jmp
stos
in
and
loop
fdivs
xchg
sub
popf
sub
dec
hlt
out
aad
push
push
leave
mov
push
roll
mov
ss
loopne
int
cmpsb
push
fwait
mov
pop
mov
test
popw
fbld
sub
dec
in
std
mov
cmp
shrb
pop
dec
push
mov
stc
sbb
dec
push
mov
rorb
mov
mov
cmp
loope
mov
in
pop
cmp
jmp
sbb
pop
add
mov
sub
cltd
jp
jns
push
hlt
xor
call
sbb
mov
add
mov
enter
xchg
dec
mov
xor
shl
pop
insb
mov
in
cmp
into
push
mov
pop
outsb
sub
pop
loop
xchg
into
test
cmp
popa
scas
cmp
mov
mov
sub
je
or
pop
push
in
mov
inc
loopne
sti
push
repnz
mov
pop
int
dec
jecxz
push
stc
adc
cmp
xchg
int3
jl
orl
cmp
daa
push
ja
and
push
je
push
or
push
daa
xchg
xchg
jo
jge
rolb
jmp
mov
fistps
mov
xor
sbb
mov
push
cli
dec
pop
mov
scas
push
cmpsl
xor
idivl
cmp
mov
ljmp
lahf
xlat
xchg
mov
cwtl
ret
push
pop
dec
mov
lods
push
pop
pop
dec
outsb
push
push
dec
mov
lcall
dec
mov
mov
xchg
cmp
push
xchg
cld
mov
int
adc
daa
orl
loopne
mov
push
adc
in
ds
mov
insl
int3
push
call
test
fisttpll
mov
ja
fcomps
icebp
in
or
mov
pop
xlat
pusha
dec
mov
movsl
mov
xor
cmpsb
mov
cli
rorl
das
daa
fimuls
adc
fidivs
push
enter
jl
test
or
fiadds
fistps
xchg
cmp
mov
push
xor
aaa
or
cmpsb
sub
mov
jns
shrl
adc
pushf
repz
cmpsb
mov
xlat
jne
call
rcl
fcoml
pop
add
test
pushf
loop
es
and
cmp
repnz
filds
push
sub
push
cmp
pop
sub
jbe
push
aas
fsubs
cmpsb
cmpsl
mov
push
inc
imulb
sbb
and
xchg
sub
mov
dec
xor
shr
sub
clc
mov
pop
stos
lods
insl
and
and
scas
and
inc
rclb
adc
or
inc
test
cmp
push
fdivs
push
xlat
lods
inc
mov
scas
jbe
jnp
loope
sub
jle
divl
fsubrl
or
pop
sub
mov
mov
fcomi
pop
pop
inc
aam
adc
adc
push
out
div
inc
mov
sahf
daa
add
mov
pop
sbb
mov
jecxz
rcrb
leave
or
shufps
stos
pop
sbb
movsb
adc
imul
pop
add
or
xor
sub
pop
ret
daa
sub
push
add
inc
rcrb
mulb
cmp
pop
fiadds
cli
push
in
cmp
sub
xchg
int
xlat
sub
cmp
mov
hlt
ljmp
loop
jne
adc
int
xchg
fidivs
xchg
mov
ljmp
sbb
cmp
daa
xchg
std
mov
pop
adc
pop
mov
adc
lahf
rorb
insb
and
jns
inc
adc
imull
andl
pop
add
leave
mov
mov
dec
test
sbb
inc
test
push
test
add
jnp
mov
dec
dec
in
mov
jnp
aam
in
imul
adc
imul
in
dec
adc
inc
lock
adc
imul
push
cmpsl
insb
clc
inc
inc
xor
sbb
inc
jmp
xor
bound
pushf
xchg
repz
lea
push
jecxz
jo
inc
repz
lcall
and
sub
jle
inc
sub
loopne
bound
inc
ja
lahf
notl
add
repnz
dec
in
into
sar
jb
or
or
outsb
adc
push
ret
sbb
sbb
repnz
mov
leave
out
testb
sahf
jbe
lret
dec
jnp
pop
add
fwait
add
cltd
mov
insb
dec
loopne
popf
mov
push
mov
adc
nop
imul
push
mov
fsubrp
paddq
or
mov
std
pop
cmp
mov
dec
ljmp
xor
cmpsb
xchg
mov
loope
xchg
cwtl
int3
pop
lods
inc
xchg
cmc
lds
mov
sbb
mov
and
sub
loope
ret
inc
xor
xchg
pop
xchg
push
inc
dec
jne
ljmp
add
nop
loope
xchg
pop
push
inc
pop
mov
lahf
sub
sub
and
subb
fucomip
push
iret
inc
mov
push
popa
and
and
and
push
sub
or
add
movsb
xchg
dec
cmp
add
sub
mov
js
push
lret
es
mov
aad
adc
adc
inc
icebp
leave
dec
jle
dec
sbb
std
push
mov
xlat
outsb
and
fldl
rcl
fwait
inc
scas
and
xchg
add
push
jb
and
call
out
bnd
imul
shl
push
out
push
cmc
daa
cld
mov
clc
xchg
int
lea
fldenv
rclb
cmp
jmp
cld
mov
fmulp
in
leavew
jge
addl
jne
pop
mov
imul
pop
dec
lods
mov
clc
arpl
pop
sub
adc
fs
imul
jae
pop
mov
and
add
inc
lcall
fidivrs
jmp
fmull
test
aam
out
mov
dec
sbb
movsl
lcall
rolb
leave
xchg
packuswb
dec
dec
xor
xchg
test
push
cmp
sub
shlb
push
and
push
ljmp
cmp
je
aas
aaa
movb
or
fcompl
xchg
loope
xlat
xlat
sub
inc
xchg
imul
sub
aam
test
push
sub
dec
pop
lds
dec
pop
mov
jp
mov
movsl
push
push
mov
jp
sub
dec
mov
xchg
cmp
fdivs
cmp
dec
jbe
push
fdivr
adc
mov
lahf
lret
outsb
cmp
push
nop
mov
pop
es
fcompl
jg
mul
sub
inc
mov
mov
sbb
sub
inc
subl
rol
repnz
mov
mov
lds
pop
jo
fisttpl
mov
dec
sub
popf
sar
mov
ljmp
pop
adc
sbbb
jbe
push
jle
call
add
divl
xchg
fcmovu
push
push
mov
ss
popf
pop
int
bound
cmp
xchg
in
sub
xchg
push
test
cmpsb
loop
mov
fildl
pop
sahf
mov
pop
sbb
mov
jbe
js
mov
icebp
cld
je
sbb
cwtl
fcomps
mov
cmp
aam
scas
pop
iret
add
push
xlat
jno
xchg
jbe
cltd
cmp
jnp
pop
mov
lods
add
mov
lret
jle
test
es
cmp
dec
xchg
cmp
add
mov
popl
sub
orl
leave
loop
jae
push
push
xchg
das
in
sbb
sahf
push
movsl
cs
and
imul
cmpsb
jae
mov
sbb
ljmp
push
mov
stc
mov
iret
adc
or
push
fwait
and
jo
into
outsl
imul
lret
loopne
pop
les
fcompl
push
inc
fdivr
pop
jmp
and
das
ret
std
xchg
jg
adc
mov
hlt
jb
dec
insl
cmp
lret
jmp
test
out
mov
mov
lahf
pop
dec
mov
add
inc
pop
push
push
roll
sbb
adc
sub
imul
mov
bound
or
clc
repnz
pop
negl
sbb
mov
or
call
dec
mov
lret
je
mov
movsl
xor
jo
mov
frstor
pop
sti
test
adc
rcrl
sbb
sbb
stos
in
xchg
pop
push
cmpsb
xor
int3
lret
pop
push
mov
sub
mov
mov
pop
push
cmp
inc
or
push
ss
out
push
push
arpl
add
dec
ffreep
dec
xor
inc
mov
lret
xchg
mov
ficomps
push
jo
insb
fists
test
or
push
push
jp
enter
lahf
add
aas
push
call
inc
xchg
and
mov
icebp
lock
arpl
cmc
cmp
popf
stc
jg
jp
push
xor
sbb
cmp
cli
dec
xchg
clc
jnp
pop
sti
addr16
pop
repnz
ja
popf
adc
outsl
lock
mov
lret
mov
and
mov
mov
scas
arpl
sahf
sbb
jb
js
ds
mov
mov
outsb
cld
xchg
hlt
mov
mov
ja
xchg
pop
call
loope
jge
loop
xchg
cmp
inc
pop
xchg
mov
lods
mov
xorl
sarb
mov
and
imul
sbb
jnp
stos
lds
aad
and
ja
and
jbe
lock
loopne
mov
add
ss
sub
mov
jae
ret
into
and
call
ljmp
push
pop
addr16
orb
adc
lahf
imul
andb
xlat
imul
fcoml
dec
jno
movsl
out
pop
and
adcb
push
xor
jb
jecxz
scas
in
xchg
adc
mov
insl
stos
fdivrs
mov
arpl
inc
jno
dec
arpl
xchg
sub
mov
mov
add
ret
icebp
inc
aam
outsb
pop
mov
pusha
dec
in
cmp
dec
std
sahf
dec
and
in
jns
cmp
xor
xor
fisubrs
dec
dec
out
imul
adc
imul
pop
pop
xchg
xor
add
push
inc
add
imul
jbe
stos
add
popf
cmp
outsb
imul
sub
repz
xor
lahf
lock
ret
fxch
sahf
jne
pop
sub
pop
mov
jp
pop
lahf
jne
dec
pop
cs
arpl
rcrl
jae
idiv
adc
fldcw
dec
jno
lods
ja
rorb
aad
xor
dec
inc
xor
lds
fnstsw
pop
jbe
pop
inc
or
jmp
js
icebp
pop
pop
cltd
imul
dec
out
cmp
xchg
gs
or
cmpsl
xlat
jl
adc
adc
mov
and
jecxz
push
loopne
insl
ds
jl
mov
jo
addr16
sbb
adc
mov
aad
add
cwtl
popf
dec
xchg
inc
mul
adc
xlat
aas
in
test
les
test
xchg
insb
adc
fisubrl
hlt
and
in
mov
pavgb
movl
daa
mov
push
or
cmpsl
inc
fs
jp
mov
loop
inc
add
jbe
pop
je
scas
jne
jo
enter
sub
inc
lahf
adc
xchg
or
xchg
mov
jmp
xchg
xor
cmp
xor
fidivl
hlt
jge
xorl
pop
or
mov
xchg
stos
sbb
lods
lds
mov
sbb
arpl
inc
pop
leave
cmp
pop
popf
dec
inc
or
pop
adcw
mov
lods
mov
dec
adc
sub
adc
cmp
sub
pop
xchg
gs
popa
mov
sub
mov
push
adc
push
xlat
cwtl
lcall
add
xor
mov
push
inc
mov
and
push
inc
jecxz
fstps
in
or
jp
test
leave
ja
adc
jb,pt
jl
xchg
sub
icebp
sub
out
mov
jle
fistl
push
repnz
lds
jl
in
lock
mov
inc
fcomi
dec
ror
inc
or
or
ret
sub
outsl
xchg
in
aad
pop
mov
ja
ja
outsb
push
fnstsw
out
aad
mov
mov
mov
cmpb
movsl
jbe
imul
inc
inc
lods
jmp
dec
jg
loope
mov
dec
cli
sub
and
fxch
pop
mov
mov
addr16
test
jp
and
mov
test
mov
imul
sbb
xor
dec
sbb
and
add
test
and
cmp
jmp
cmpsb
es
rolb
dec
ss
imull
add
xchg
loope
ja
ljmp
dec
mov
aaa
mov
pushf
pop
outsb
sahf
call
loopne
into
dec
push
outsb
fucomip
pop
pop
or
aad
xchg
mov
fildll
inc
and
mov
bound
jl
dec
add
sbb
ss
std
add
fisubrs
cmp
inc
in
mov
cmp
test
pushf
xchg
out
inc
xchg
add
pop
sbb
jecxz
jbe
inc
fs
stos
aam
add
nop
clc
pop
cmpsl
sbb
pop
dec
mov
sbb
sahf
adc
mov
ret
sbb
fimuls
pop
daa
mov
movsl
jl
pop
bound
push
mov
in
in
sti
idivb
mov
ljmp
in
lods
xchg
inc
dec
call
lods
jnp
cmpsl
xor
mov
inc
adc
cltd
stos
adc
sbb
cwtl
dec
sti
ret
pop
pop
jmp
fcmovnu
negl
test
or
rsqrtps
arpl
lret
imul
outsb
rorb
imull
dec
mov
xchg
ficompl
std
pop
and
pop
jo
std
xor
sbb
fildl
and
int3
dec
mov
cmpsl
jge
pop
jns
or
sub
mov
mov
mov
or
or
stc
icebp
daa
cwtl
and
add
or
pop
jno
jecxz
out
mov
mov
shll
mov
mov
inc
inc
sub
nop
jl
xchg
das
outsb
dec
int3
rorl
jecxz
push
fcompl
test
adc
mov
jae
fwait
mov
and
xchg
pop
movsl
clc
mov
inc
stc
inc
in
jnp
jnp
or
adc
stos
dec
push
into
imul
sub
push
es
repz
out
jge
push
int3
or
mov
leave
movsl
push
mov
jp
cld
pop
pop
dec
fildl
leave
xchg
adc
outsb
or
jge
movsl
dec
cmp
xor
mov
xor
jns
jle
stos
fistl
int
sub
xchg
push
fistl
cmp
in
mov
cwtl
dec
cmp
jns
call
mov
loop
ficoms
scas
xchg
rorb
or
cli
adc
aaa
jle
test
mov
add
rorl
push
jnp
movsl
cmp
jmp
es
je
out
ja
add
jecxz
aad
cwtl
test
in
test
pusha
fwait
mul
fcomi
fcomps
jecxz
cmp
ja
jno
lret
lret
mov
ss
and
cmp
mov
int
fbld
adc
dec
movl
jno
repnz
leave
xchg
mov
lahf
mov
pushf
xchg
cmpsl
sub
and
cmpsl
adc
inc
jle
jl
dec
dec
movsb
sbb
push
sbb
dec
push
cmp
xchg
repz
imul
xor
xchg
pop
fimuls
fnstsw
dec
cmpsl
pop
js
rcrl
cmc
and
xor
loop
mov
or
mov
push
dec
rolb
jb
lcall
push
mov
push
or
mov
imul
aas
loope
dec
cmc
icebp
inc
jae
pop
sbb
mov
mov
push
fmul
pushw
xchg
add
ror
stos
xchg
rcll
vmovaps
mov
push
inc
pop
cmp
cs
xchg
icebp
pop
not
lock
in
sub
inc
sub
dec
js
aad
movsl
mov
adc
das
pop
int3
daa
push
sbb
mov
insb
aad
es
iret
call
push
xor
inc
lds
pop
aaa
out
mov
and
inc
lds
adc
pop
fwait
out
mov
sub
fucomip
mov
xchg
enter
cmp
push
scas
adc
out
add
xchg
mov
adc
push
ljmp
in
lret
repz
insb
cli
xchg
mov
jge
push
sub
out
xor
inc
vandps
adc
pop
aas
out
mov
in
dec
sub
fisttps
mov
xchg
mov
mov
pop
mov
sahf
sub
xor
icebp
xor
and
sbbl
test
lcall
sbb
icebp
idiv
dec
ljmp
cmp
hlt
in
lret
jmp
add
rclb
add
scas
and
fidivl
dec
xor
inc
lds
pop
pop
out
mov
fwait
mov
addb
jg
push
mov
int3
inc
outsl
sub
fistps
mov
xchg
cmp
fisttpl
data16
in
pop
add
push
cmp
dec
aaa
jbe
lock
xchg
fistpl
ss
les
mov
rorl
adc
