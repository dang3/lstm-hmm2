popf
dec
into
jne
cwtl
in
nop
pop
scas
jbe
mov
js
jl
fwait
mov
push
xchg
fisttpl
sub
push
adc
subl
shrb
test
andl
pop
jl
enter
es
push
sbb
leave
sub
ret
add
mul
add
sbb
test
mov
sub
mov
sbb
test
pop
push
in
or
xchg
rclb
sti
adc
pop
jbe
sub
jbe
mov
sub
jne
jp
pushf
aas
jno
loopne
pop
iret
and
and
movsb
in
leave
mov
popf
add
sub
adc
mov
ret
stos
rolb
sub
loop
and
fcmovnu
mov
sbb
jle
es
rclb
insl
adc
lock
hlt
mov
aas
fstps
shrb
push
mov
int3
cmc
or
shr
sub
pop
pop
and
xor
add
aam
and
ret
jmp
mov
out
cmpsl
jg
dec
in
cmp
mov
pop
push
cmpsb
aad
jnp
dec
push
push
pushf
jecxz
pop
cli
xchg
fsubl
rcr
jge
cmpsl
fdivrs
pusha
scas
scas
das
imul
ja
daa
pusha
add
or
mov
add
and
cld
shll
cmp
jbe
mov
ret
repnz
cwtl
std
dec
lea
fldenv
sti
aam
mov
mov
sar
mov
pop
jecxz
movsb
add
or
mov
jae
hlt
rorb
inc
jne
sahf
sti
and
adcl
inc
xor
rclb
lods
and
or
es
mov
inc
aas
mov
mov
ja
lret
cmp
mov
jmp
mov
test
mov
js
mov
or
out
and
add
cli
mov
fimuls
pop
xchg
dec
shrb
cld
inc
ja
cltd
es
nop
pop
cmpb
sub
aam
jbe
fcmovnbe
dec
pop
mov
pop
out
fnsave
push
add
dec
sub
mov
push
in
cli
push
xlat
daa
push
jns
adc
dec
shll
test
nop
fsubr
mov
cmp
cmpb
add
insl
dec
out
xchg
xor
xchg
test
xchg
das
push
lods
jns
addl
in
sbb
je
xchg
cmp
fdivl
orl
stc
fs
test
mov
dec
ja
fisttpl
fstpt
clc
cs
rolb
popf
scas
stos
mov
lods
mov
mov
push
in
xchg
xchg
cld
adc
testl
rorb
push
mov
aas
mov
jle
rol
sbb
lahf
inc
xor
mov
push
addl
repz
cmp
rolb
or
push
lret
pop
es
jns
xchg
mov
pop
xchg
xchg
dec
repnz
or
aad
jb
mov
scas
leave
inc
inc
dec
test
or
mov
testb
mov
cltd
sub
ret
sarl
ret
pop
bnd
std
pop
dec
mov
sub
cmp
mov
inc
mov
inc
stos
fistl
push
push
cs
pop
jo
shlb
ja
insl
jl
cmp
mov
jne
add
arpl
les
rcrl
cli
in
jge
pop
cmpsb
loopne
xchg
mov
mov
push
pop
jmp
mov
mov
add
hlt
jae
push
xor
or
add
in
pop
sahf
mov
inc
lea
nop
outsb
insl
fcomps
inc
loopne
push
in
mov
enter
clc
lret
sti
sub
ret
mov
ficompl
movsl
jmp
jne
mov
cs
cwtl
jmp
pop
jmp
pop
or
xor
shr
fbstp
cmp
add
push
std
in
mov
push
xor
dec
pop
xor
jl
xchg
leave
push
aam
add
xor
movsl
mov
daa
dec
into
dec
add
push
fadd
int
ret
sub
data16
push
hlt
clc
fs
sbb
mov
mov
push
clc
loopne
jbe
inc
popf
fdivrp
mov
out
or
mov
lcall
cmp
or
fs
jo
xchg
and
jnp
inc
xlat
mov
leave
pop
adc
aaa
xlat
out
hlt
push
pushf
je
in
les
mov
int3
pusha
and
mov
int
add
pop
ffree
hlt
repnz
or
imul
mov
test
stc
cli
movb
sbb
lods
push
aam
loope
sti
inc
sbb
mov
pop
rcrb
jp
adc
stos
lahf
lea
pop
pop
movsb
loope
or
or
cmpsl
xorb
add
pop
xlat
inc
movsl
stos
mov
mov
shlb
fisubrl
sbb
fdivp
arpl
cmp
loop
sbb
fwait
xlat
lea
inc
fdivp
push
lcall
mov
out
test
sbb
cmp
imull
pop
int3
mov
movsl
push
iret
add
lods
test
push
pop
add
je
cwtl
jp
andl
xor
add
and
pop
orb
pop
in
lds
xor
mov
jne
cmp
fs
fisttpll
add
adc
push
inc
arpl
and
pop
sti
les
or
cmpsl
es
jnp
cwtl
sub
xchg
scas
lret
rorb
push
or
aas
sbb
inc
stos
push
xchg
push
jne
psrad
pop
pop
mov
fdivl
mov
mov
xor
roll
pop
je
leave
pusha
icebp
cmpsb
cli
lea
cwtl
jl
or
pushf
scas
cs
test
mov
addl
and
or
insb
xlat
out
adc
lds
xchg
jae
adc
fcoml
xor
add
inc
jmp
xchg
pop
adc
sbb
mov
call
cli
aad
xor
aas
sbb
mov
push
cmp
push
notl
pop
mov
leave
movsb
adc
fisubs
dec
pop
cmp
mov
divl
loope
sub
push
cwtl
dec
fwait
cwtl
loope
mov
scas
addr16
ljmp
ret
jne
dec
and
pushf
jg
xchg
push
stos
fdivrs
xchg
push
or
jbe
push
gs
or
repz
push
pop
and
push
mov
pop
pop
xor
popf
js
imul
jg
adc
in
dec
popf
jb
mov
je
test
or
mov
bound
mov
popf
cmp
jecxz
movsb
mov
icebp
push
repnz
jne
jnp
aaa
and
call
sarl
icebp
push
cwtl
bound
add
aam
icebp
rcrl
test
pop
and
mov
je
mov
or
mov
and
sahf
and
xor
mov
and
or
inc
das
jl
addr16
es
inc
fidivl
adc
or
add
jp
hlt
add
mov
sbb
sub
mov
mov
out
sti
in
cmp
xlat
add
call
push
dec
adc
and
mov
insb
mov
icebp
xchg
cmp
shll
arpl
jle
mov
mov
nop
pop
int3
push
test
mov
mov
xor
into
sbb
sub
inc
jnp
pop
movsb
jno
jge
lock
popf
lods
mov
cltd
mov
push
push
and
iret
sbb
shl
jbe
dec
lret
movsb
cmp
pop
aam
xchg
outsb
and
ffreep
inc
pop
cmpsl
js
imul
mov
sub
rorl
pop
arpl
lods
pop
push
testb
sahf
sbb
mov
fsubr
or
dec
inc
sub
mov
jmp
inc
mov
scas
mov
pop
and
dec
xchg
addr16
lock
pop
fs
pop
sar
icebp
jno
xchg
fldt
and
popa
sbb
jp
cltd
pop
xchg
mov
test
xor
sub
sub
adc
or
mov
xor
adc
jo
mov
pop
sarb
cs
add
xchg
into
jns
sub
and
lret
add
inc
dec
pushf
lahf
mov
je
scas
pop
push
lcall
mov
dec
cld
push
outsb
jbe
andb
pop
dec
cmp
mov
pop
push
add
out
hlt
sub
shrl
pop
inc
mov
loope
dec
es
in
sub
xor
je
xchg
pop
sbb
inc
xchg
xor
cltd
push
imul
xor
mov
and
sahf
xchg
mov
aam
loopne
cld
adc
sbb
cld
mov
fiaddl
pop
or
notb
shrb
jmp
mov
mov
sub
insb
pop
push
negl
insl
add
inc
dec
mov
test
xchg
outsb
sub
mov
mov
pop
les
or
add
jbe
in
add
fwait
addb
pop
jae
sbb
aad
sbb
add
sbb
xchg
pop
add
add
ss
jmp
dec
and
pop
call
cmp
pop
mov
mov
lods
icebp
xchg
aam
data16
mov
outsl
sahf
xor
loopne
sbb
and
stos
js
inc
andb
pop
or
stos
fucomip
out
orb
and
test
mov
test
jecxz
mov
jne
inc
push
ljmp
mov
int3
in
and
cmp
push
pop
js
aam
and
popf
mov
jl
mov
mov
cmp
ret
mov
fimuls
sbb
insb
std
inc
sbb
push
mov
stc
loop
push
sti
jl
mov
add
cmc
imul
xchg
dec
dec
cmpl
push
repnz
js
lods
jns
xor
pushf
fisubs
cs
sub
scas
sahf
popa
cld
fcmovnb
dec
add
js
mov
xor
push
push
jo
andb
std
mov
cwtl
dec
xlat
sbb
mov
je,pn
fwait
mov
pop
in
mov
repnz
pushf
pop
sbb
test
pushf
push
cltd
test
mov
inc
popa
push
and
and
push
mov
xchg
leave
sbb
mov
xor
fdivs
insl
repnz
ret
mov
adc
aas
mov
push
lea
xchg
loope
push
sub
sbb
fstps
insl
in
test
mull
mov
jae
cld
mov
add
test
js
pop
mov
xchg
jo
out
mov
add
inc
jns
adc
clc
mov
mov
je
push
inc
rorl
hlt
inc
sbb
adc
mov
sbb
sbb
into
fldl
adc
dec
std
pop
add
mov
scas
sahf
xchg
pop
gs
cltd
inc
cwtl
sub
push
div
push
xorl
push
mov
addr16
ret
jo
loopne
pop
and
sbb
in
dec
repz
les
and
sbb
fcmovnbe
pop
add
insb
inc
mov
and
xchg
ret
jb
loopne
pushf
sbb
popf
es
and
movsl
dec
fisubrl
sbb
sub
movhps
je
fs
ljmp
jp
pop
dec
rep
loop
hlt
daa
push
inc
sbb
div
ret
inc
mov
fcmovne
push
xchg
cld
stos
shrl
cmpsl
adc
dec
lret
cmp
mov
jo
xor
daa
sbb
sarb
and
imul
sti
pop
fwait
mov
fucomi
lcall
and
jno
mov
movsb
jo
jnp
repnz
mov
fwait
pop
scas
or
xorb
loop
mov
inc
add
add
cmp
inc
fidivl
dec
subb
enter
ja
mov
adc
mov
out
ljmp
dec
inc
jbe
stc
add
lcall
mov
rorl
mov
ret
push
ljmp
add
cmp
jp
in
scas
push
outsl
dec
xor
xor
and
ss
cmp
mov
push
adcl
les
cmpb
mov
pop
movsb
repnz
gs
scas
inc
pop
call
rcrl
addr16
mov
pop
hlt
loop
dec
scas
add
mov
add
daa
test
pushfw
xchg
pop
jl
jns
les
out
lahf
repz
mov
mov
std
and
scas
xchg
mov
mov
fwait
cmp
insb
ds
es
push
fildll
popa
je
lcall
aaa
dec
dec
movsb
outsb
inc
ljmp
sbb
add
sub
mov
scas
pop
dec
out
in
pop
lahf
pop
jecxz
stc
loopne
adc
push
push
movsl
icebp
aaa
mov
fcmove
dec
stos
inc
insl
sti
adc
sbb
add
leave
bnd
int
repz
lret
mov
dec
dec
out
loop
jbe
push
fldt
add
fcom
daa
pusha
int
das
or
cmp
adc
jmp
sub
and
dec
lds
fsubr
pop
jno
xlat
or
sub
cmp
stc
jl
mov
push
hlt
mov
mov
inc
or
shll
xor
mov
cli
pop
fsubl
mov
outsl
jmp
cmp
jl
bound
inc
jmp
test
mov
mov
out
or
fdivs
es
sbb
test
jmp
jne
pop
sti
imul
aaa
bound
aam
setae
xor
jg
mov
cmp
jb
mov
imul
mov
hlt
movsl
xor
push
fmull
rorl
push
pop
cmp
pusha
push
ss
ds
jno
sub
test
rol
cltd
dec
xchg
mov
push
xor
icebp
lods
jb
sbb
popa
mov
pop
or
addl
mov
pop
lcall
adcb
mov
imul
jl
mov
lcall
jnp
and
repz
mov
fwait
pop
xor
cmp
cmp
nop
inc
push
addb
jl
insb
mov
inc
test
adcl
in
xlat
outsl
cs
aam
shll
fisubrl
lcall
pop
or
leave
pop
dec
fidivrl
gs
and
sbb
push
adc
dec
scas
pop
sbb
sub
push
and
imul
cmp
outsl
jp
fsub
imul
addb
mov
xchg
aaa
push
xor
call
push
add
mov
xchg
pop
cs
mov
icebp
lods
adcb
cmpsb
xlat
mov
sahf
mov
int
adc
jne
mov
movsl
test
popa
cltd
ret
test
fs
scas
mov
mov
rclb
jl
adc
out
repz
out
loopne
push
fisttps
ret
xchg
ret
mov
bnd
bound
pop
adc
mov
daa
mov
sbb
fiadds
xchg
mov
mov
sub
repnz
or
sub
out
push
pop
sbb
dec
aas
add
sar
gs
movb
sbb
dec
loop
push
dec
insl
xchg
das
add
lret
iret
movsl
dec
push
aas
cmp
inc
divps
cmp
mov
sbb
lret
les
clc
and
dec
sub
mov
setno
and
push
lods
lcall
fcoms
enter
sub
jb
sbb
ja
out
pop
mul
fs
fcoml
pop
ds
jecxz
mov
mov
and
cmp
stc
mov
sub
int
mov
mov
lods
int3
daa
sub
mov
inc
dec
and
cmp
int3
pop
shll
jp
loope
and
fstps
push
inc
into
aad
lahf
pusha
rcrb
js
mov
icebp
sub
sbb
jg
xchg
scas
addr16
pop
das
mov
out
add
push
je
ljmp
mov
out
mov
mov
cmp
mov
ja
out
sbb
xchg
xor
das
xchg
scas
inc
inc
pop
pusha
call
jno
dec
lahf
push
mov
gs
push
push
mov
or
daa
testl
sbb
xchg
data16
loop
pop
aas
cli
jmp
or
insl
ret
cld
push
es
mov
das
das
push
lret
jnp
call
sbb
push
jo
fsubl
add
dec
js
adc
xchg
addr16
mov
inc
and
iret
mov
or
mov
or
sub
jmp
push
sub
dec
mov
mov
add
notl
ja
in
fimull
push
add
push
fcomps
sbb
lret
rorb
sbb
xchg
out
mov
xchg
jnp
mov
add
adc
dec
mov
fbstp
jb
scas
daa
testb
jle
sub
mov
jle
add
adc
imul
sub
xor
cli
xchg
dec
xchg
xor
mov
or
mov
cmpsl
aas
pop
jnp
lea
pop
sbb
pop
sbb
jnp
inc
sbb
shrb
and
xor
mov
call
pop
and
add
cmpsl
adc
xchg
xor
and
movsb
fcoml
push
stos
pop
mov
inc
or
inc
xchg
adc
jnp
or
xor
xchg
movsl
xchg
sub
ds
orb
pusha
dec
or
ss
mov
bound
popf
or
mov
fdiv
ficompl
or
mov
rcrb
aaa
push
push
push
and
cmc
cmp
fstl
cmp
outsb
xchg
dec
mov
sub
mov
add
inc
insl
xlat
inc
int
push
es
cli
sub
add
or
ror
lods
xchg
adc
dec
repz
inc
lcall
fcom
scas
addr16
mov
ja
adc
insl
mov
movsl
mov
inc
in
scas
mov
jg
into
pushf
dec
lret
and
and
negl
sub
mov
loope
mulps
and
or
mov
and
push
in
es
xchg
sarb
mov
ret
gs
pop
popf
sub
mov
das
xchg
in
xor
xchg
sahf
mov
outsb
hlt
lcall
cmp
push
and
pop
cmpsl
dec
pop
lock
idivl
jmp
call
flds
mov
mov
test
mov
xor
clc
sarb
sbb
mov
xchg
sub
je
sbb
leave
mov
mov
inc
xchg
mov
ja
push
jns
nop
mov
xor
xchg
lahf
mov
mov
add
push
in
scas
sbb
aaa
aaa
xchg
mov
fstl
ret
sub
fcmovbe
sbb
and
test
in
jmp
into
sbb
repnz
lret
dec
adc
lds
out
pop
jmp
xchg
es
in
lock
outsb
inc
cmpsb
xor
stos
fnstsw
lret
rcrb
xor
lods
in
leave
scas
mov
adc
neg
aas
and
loopne
and
lretw
inc
sbb
scas
mov
cmp
pop
call
inc
inc
imul
jns
xchg
test
xorb
dec
addb
jecxz
add
jnp
jecxz
push
or
add
adc
sub
fdivs
mov
adcl
out
mov
mov
jno
pop
mov
aaa
cmp
out
rcll
or
lret
shll
lods
dec
adc
sbb
aam
sti
sbb
add
xor
push
xchg
adc
xchg
xchg
mov
cmp
data16
or
sub
sbb
xor
test
and
mov
mov
lret
ret
add
iret
sub
jns
das
dec
gs
sti
test
cltd
bound
in
push
xor
dec
sub
cmp
outsl
daa
pop
xchg
dec
bound
out
das
and
in
shrb
xor
lds
movb
outsl
mov
out
pop
sbb
ja
pop
ljmp
push
add
adc
and
mulb
lahf
pop
xchg
insb
daa
or
int3
fnstsw
xorb
repz
inc
stos
sahf
lahf
or
push
leave
sub
bnd
xor
add
int
mov
jl
cld
test
enter
add
popf
sub
test
ds
mov
rcrb
aad
pop
popa
andb
in
pop
jae
mov
cmp
push
fcmovu
adc
jle
xor
out
loopne
cld
clc
or
mov
in
hlt
dec
pop
arpl
xchg
dec
psllw
add
popa
dec
loop
jecxz
mov
scas
ret
or
fistpl
adc
mov
scas
sub
into
cmpsl
mov
subb
test
pop
int
jo
sub
enter
imul
punpckldq
fwait
xchg
xor
pop
add
sub
shlb
jbe
and
sti
xor
test
jo
or
dec
loopne
jmp
cmpb
test
push
jo
mov
push
pop
lods
scas
into
mov
xor
lret
mov
mov
push
rcrb
jnp
fwait
xchg
mov
mov
sub
xor
lock
mov
mov
cmpsl
jae
mov
scas
dec
dec
fnstsw
push
pop
jle
stos
loop
inc
mov
push
arpl
fstpl
jno
and
adc
pop
or
sub
lcall
or
bound
cmpsl
int3
pop
sub
sarl
cwtl
loopne
test
jg
arpl
mov
ja
inc
push
jmp
mov
je
or
pop
push
nop
adc
bound
mov
stc
mov
sbb
cld
push
xor
mov
push
sub
mov
xchg
mov
jmp
sbb
or
iret
pop
pusha
mov
cmpl
jno
mov
inc
iret
adc
out
scas
xlat
fistl
dec
pop
lods
jnp
or
out
pusha
fsubrl
xchg
dec
leave
les
xor
xor
cmp
cli
adc
or
leave
dec
movsl
xchg
fsubrl
mov
xor
ss
jb
loop
idiv
hlt
jns
xchg
pop
stos
pop
fdivrl
pusha
rorl
std
mov
and
outsb
xrelease
mov
push
xchg
cli
fldl
movsb
pusha
cwtl
mov
fwait
mov
into
cltd
jno
in
mov
push
add
test
mov
dec
movsl
bound
ja
jns
ficoml
scas
pop
out
fimuls
loopne
jge
iret
mov
xor
imul
lret
jnp
cs
lods
xor
xlat
mov
add
fidivs
push
push
sub
dec
mov
iret
jb
icebp
stos
mov
enter
and
xor
sbb
cmpsl
sahf
mov
push
xor
cli
fs
rorl
inc
push
sbb
lds
xchg
jno
imul
inc
jb
xor
in
dec
mov
lea
sbbb
bound
je
jle
lcall
fwait
mov
jne
out
les
sub
xchg
jo
cmp
outsb
inc
add
jae
movsl
stos
lds
cmp
pop
fsub
mov
push
dec
or
cltd
jecxz
fptan
adc
ficoml
imul
xor
lret
dec
leave
or
addb
mov
mov
lret
sbb
adc
xchg
test
test
adc
fs
sub
xchg
ret
pop
pop
aaa
out
xchg
cmp
out
mov
sbb
sahf
jl
cwtl
sahf
stos
xlat
push
add
adc
stos
jo
cmp
inc
sbb
aaa
out
bound
testb
mov
sbb
xchg
cmp
xor
jns
mov
jg
xor
adc
std
add
mov
mov
pop
cmpsb
nop
pushf
pop
fadds
sub
gs
shll
pop
inc
dec
insb
or
lds
mov
jb
or
pop
pushf
xchg
call
int
pushf
mov
icebp
jno
push
sub
movsb
sbb
inc
stc
mov
lret
aam
jg
in
nop
loopne
dec
testl
mov
xchg
add
bound
shlb
xchg
sub
add
js
inc
stos
das
xchg
cmp
pop
nop
inc
sbbb
cmp
adc
inc
jle
rclb
push
add
xchg
adc
mov
and
out
mov
cmp
inc
or
and
movsl
insl
ret
nop
mov
mov
xchg
fisttpl
mov
pop
mov
sub
adc
stos
mov
jp
sub
loope
or
push
cmp
mov
subb
bound
inc
push
daa
mov
dec
mov
leave
dec
call
loopne
sarl
jmp
lret
test
jb
popf
sti
hlt
andb
pop
push
or
movsb
ficoms
and
xlat
xor
mov
nop
aad
pop
das
pop
xchg
mov
outsl
dec
icebp
mov
mov
adc
cmpsl
or
rolb
pop
jo
bound
xchg
pop
cs
sub
stc
and
pop
call
test
pop
pop
or
orl
xlat
out
mov
xor
lret
xchg
pop
sbb
es
scas
jne
inc
cmp
js
pop
sub
xchg
jl
in
adc
repnz
jp
scas
mov
pop
mov
adc
dec
fistl
mov
push
shll
lahf
lock
push
jmp
xlat
test
mov
push
and
ja
xchg
mov
stos
mov
jp
and
aad
and
inc
repz
sti
iret
cmp
cmpsb
psadbw
xchg
idivb
sub
ljmp
bound
or
rolb
push
sub
inc
aam
or
xor
inc
dec
jbe
aas
and
and
in
push
gs
cmp
xchg
outsb
das
xlat
pop
fbstp
outsl
nop
add
mov
fwait
pushf
movsl
inc
mov
loopne
xor
sahf
add
jp
jo
int
addb
mov
loop
in
push
mov
pop
cs
subb
dec
cli
xchg
leave
arpl
jae
add
mov
cltd
mov
and
jbe
adc
jb
gs
pop
push
daa
push
add
mov
fstps
int3
ret
push
pop
push
mov
pop
mov
mulb
popa
mov
fbstp
test
cltd
pusha
imul
loope
mov
stos
js
dec
sub
test
or
pusha
sub
fs
push
andl
loopne
xor
jge
pop
pop
pop
inc
pop
jmp
arpl
sub
mov
push
jo
loop
frstor
sar
pop
add
or
inc
imul
out
mov
inc
or
adc
xchg
mov
dec
mov
dec
push
xchg
sub
adc
imul
dec
push
mov
push
aad
icebp
scas
in
adc
fwait
call
push
sub
cld
sub
scas
jno
mov
jmp
lahf
insl
push
mov
lds
xchg
add
dec
add
mov
mov
mov
sbb
mov
cmpsl
and
dec
dec
out
mov
xchg
sub
ja
ffree
or
mov
xchg
pushf
dec
pop
mov
cmp
lahf
icebp
and
loop
sub
mov
inc
fcoms
add
int
scas
test
in
outsb
mov
push
maskmovq
daa
cmp
pop
ja
mov
lahf
sti
lret
in
and
sbb
pop
xor
xchg
xor
mov
mov
das
pop
push
rcr
push
push
lods
fsubrs
xchg
test
add
xor
or
jns
or
jo
xor
inc
xchg
xor
xchg
adc
mov
inc
mov
mov
mov
xorb
jns
xlat
outsl
je
xor
jne
subl
dec
jp
jne
mov
ja
and
xchg
lea
pop
mov
incl
mov
lahf
fnstenv
mov
sbb
cli
stos
lock
add
inc
pop
es
cltd
pop
shll
sahf
pop
dec
cmp
imul
pop
in
jl
pop
cmp
xlat
loop
ja
push
and
mov
popf
adc
mov
popf
pop
adc
xchg
pop
mov
lds
pop
mov
in
lret
lods
mov
mov
jl
mov
mov
rorb
mov
lret
pop
cmp
bnd
dec
cld
cmp
arpl
dec
imul
push
jb
jle
out
cli
test
test
fistps
mov
idivb
jae
cmpsl
in
cmp
fdiv
in
jp
xor
outsb
cmp
shr
mov
inc
cwtl
xor
xchg
jbe
xchg
push
jae
fsubrs
and
push
hlt
push
jne
faddl
mov
adcb
fs
lods
inc
pop
scas
into
dec
clc
and
das
add
adc
int
pop
jge
test
scas
movsl
and
inc
jns
repnz
cltd
pop
sbb
pop
xchg
sbb
add
and
jns
fsub
xchg
addr16
or
movsb
cli
in
mov
cmovge
sbb
std
push
inc
out
inc
sbb
out
add
add
in
xor
or
cmp
lea
scas
js
push
dec
icebp
fisubs
cmpsl
movq
mov
and
sbb
inc
aas
mov
imul
out
lea
cmpsl
lds
pop
sahf
popw
sti
and
dec
dec
jecxz
dec
jbe
repnz
rclb
or
mov
test
mov
clc
rclb
push
int
jp
jmp
sub
insl
stc
pop
mov
jge
fwait
xchg
es
int3
xchg
ljmp
fistpl
or
sbb
lea
mov
mov
mov
inc
xchg
pop
std
and
cmp
lea
push
jb
mov
mov
push
ret
fs
fsub
xor
adc
insb
xchg
sub
xchg
sarl
scas
cmp
or
cmp
cs
pop
cmpsb
ss
lea
shl
test
inc
cmp
and
hlt
rol
call
cmpb
ss
test
mov
aaa
sbb
inc
cmpb
push
sbb
nop
inc
lods
jb
test
in
push
pop
mov
repnz
xlat
inc
lds
mov
inc
fwait
push
add
enter
clc
nop
jae
inc
xchg
popf
sbb
and
out
nop
aam
dec
sub
jge
popa
adc
outsb
in
aaa
insb
mov
lret
or
sub
bnd
out
data16
jb
cwtl
adc
xlat
vxorpd
xor
fldl
andl
pop
jmp
lock
in
cmp
inc
inc
aam
loopne
xchg
jmp
dec
popf
sbb
xchg
test
int
jne
xchg
out
pop
fstpt
add
xchg
push
mov
sbb
push
lock
mov
push
ret
mov
or
sarb
mov
jne
std
or
in
push
inc
inc
pop
push
lcall
cmp
sub
stos
insb
sahf
cmpsb
push
les
in
data16
out
test
dec
fnsave
addr16
pushf
jle
test
mov
add
jl
imul
jo
jle
lahf
dec
xor
and
fldt
jb
jo
mov
sub
test
mov
mov
xor
pop
sbb
cmp
and
out
sub
cmpsb
clc
pop
push
xor
test
jae
aas
inc
jns
jbe
inc
jae
or
daa
push
jmp
and
and
jnp
aas
xor
lret
cmp
cmp
dec
ss
push
sub
dec
dec
and
lds
or
xchg
jno
and
xchg
or
cmp
mov
cld
jo
pop
jns
int3
negl
mov
xor
inc
pop
int
insl
jge
in
adc
jecxz
inc
mov
or
and
sub
xchg
aaa
in
inc
or
sbb
mov
aas
lcall
das
jle
mov
adc
cs
pushf
adc
imul
adc
pop
mov
pop
sbb
cmc
mov
and
addr16
aas
test
xor
cmpsb
movsl
jbe
lcall
out
mov
xchg
bound
stos
lods
fsts
bound
pop
adc
fdivl
cmp
stos
jno
mov
xor
fisubrl
ljmp
xchg
mov
out
stos
fnstcw
leave
repnz
fldcw
mov
shlb
mov
and
xchg
and
xchg
push
shrl
adc
or
xchg
fcomps
mov
adc
mov
dec
jne
cmc
rclb
popa
push
nop
stc
inc
es
mov
imul
xor
out
or
and
mov
test
dec
add
fcmovnu
push
sub
pop
into
adc
pop
scas
lahf
outsb
stc
mov
stos
add
ffreep
movsl
icebp
adc
xchg
add
xor
fsubs
loope
xchg
and
add
xor
test
inc
push
mulb
nop
subb
push
cmp
ret
dec
out
xchg
sbb
mov
cmp
jl
and
loop
add
mov
scas
bound
cmp
mov
and
test
and
fcoml
insb
lret
pop
lea
pushf
mov
mov
push
adc
fs
mov
mov
xor
jmp
pop
orb
mov
or
inc
in
loopne
fdivr
push
or
imul
rorb
jb
out
repnz
jge
xchg
daa
mov
pop
roll
loopne
push
cmp
sub
jp
hlt
adcl
xchg
or
ret
call
notb
cwtl
shrl
mov
ja
aad
dec
cmp
cld
aas
sbb
adc
push
jns
lock
xchg
push
pop
xor
adc
xchg
cmc
dec
jge
xchg
xor
dec
cmp
sub
jp
push
clc
pop
add
jle
push
enter
push
and
fcompl
or
hlt
stc
shlb
es
jo
pop
mov
in
cmp
jl
jecxz
push
gs
xor
and
dec
enter
cld
mov
cmpsb
push
ljmp
sbbl
and
repnz
sete
adc
movb
push
sub
sub
mov
rorb
idivl
xchg
rclb
mov
inc
insb
add
sbb
sub
jb
push
and
xor
pushf
jmp
int
mov
repnz
push
cmc
lods
xchg
or
inc
adc
aaa
jmp
push
mov
gs
rorl
pop
push
push
sub
jmp
pop
jl
rorb
stc
test
adc
sub
dec
shrl
out
dec
and
popf
fwait
and
xorl
pop
mov
cld
les
std
mov
fnstcw
aaa
fs
mov
or
sbb
stos
fcomps
mov
jecxz
pop
xor
sub
lahf
test
sbb
leave
roll
ret
jno
and
cmp
int
outsl
adc
inc
cmp
mov
pop
pop
cld
mov
in
or
adc
and
fisubrl
jg
lds
jbe
xor
fists
or
sbb
inc
rolb
leave
sbb
add
repz
xsaves
cmpsb
je
aam
jo
andb
jno
sbb
and
push
pop
dec
enter
cmp
stos
push
dec
mov
push
mov
rcll
ret
ja
test
ror
dec
add
mov
sbb
mov
lock
lret
popa
mov
sarl
arpl
fbstp
das
cmp
fidivl
pop
cld
sub
xor
cld
punpckldq
jb
push
push
sbb
in
dec
mov
mov
mov
or
inc
cmp
in
fsts
aam
lahf
push
pop
es
and
or
rcrl
std
lcall
sbb
and
aas
daa
mov
test
mov
ret
or
in
stc
pusha
imul
out
cmpsl
push
push
jg
mov
sbb
jg
repz
pop
fidivl
sbb
lea
into
js
stos
sbb
lahf
aas
outsl
jb
jns
add
ss
dec
repnz
jp
lea
cli
movsb
inc
sbb
ss
pop
and
mov
sahf
mov
sbb
aad
mov
sarl
mov
mov
push
mov
xchg
jg
jb
mov
cmp
or
adc
inc
int3
sub
xorb
add
mov
shlb
in
test
and
mov
add
xor
xchg
sti
ljmp
addb
popa
ljmp
add
or
jle
loop
or
mov
mov
idivb
add
inc
jnp
popf
mov
outsb
mov
ret
and
imul
jne
mov
jnp
mov
sti
push
mov
push
or
sub
dec
xor
lock
jle
inc
clc
add
ret
inc
out
xchg
xchg
mov
add
cltd
cmc
jp
add
adc
test
repz
mov
xchg
cmpsl
add
scas
cmpsl
sbb
inc
push
mov
loope
lea
loopne
jno
out
jg
xchg
pop
test
stc
push
mov
mov
dec
pop
inc
jp
nop
and
inc
add
ja
mov
cltd
cmpsl
pop
push
imul
movsl
shlb
ss
popa
jle
cld
xor
mov
out
cmp
ljmp
and
popa
addr16
mov
out
in
push
pop
loop
or
scas
out
sub
push
pop
cmp
jp
inc
loope
iret
push
pop
outsb
push
cmp
test
or
pop
in
lea
iret
xor
push
or
data16
push
mov
lods
sub
orb
cltd
mov
pop
mov
jge
sub
cmp
mov
ljmp
push
stc
inc
xchg
je
js
sub
sub
xor
dec
ret
mov
jg
push
cmp
mov
call
inc
xchg
jae
dec
inc
mov
dec
iret
cmp
add
add
cmpsb
in
mov
fimull
mov
jne
in
mov
rcl
fnstcw
jne
in
aam
and
xchg
cmp
mov
pop
pushl
xor
enter
push
subb
ss
out
push
pusha
xchg
movsl
inc
push
stc
jg
aad
clc
cmp
xlat
jae
shlb
mov
add
or
jle
jl
jne
hlt
sbb
imul
dec
adcl
push
shrl
or
stos
and
dec
mov
movsb
and
ljmp
cmp
push
rcrl
lock
movsl
or
into
fwait
das
ss
mov
nop
in
pop
inc
test
add
out
adc
xchg
xor
nop
jp
sbb
lret
pop
add
call
cmp
sarl
mov
jge
cld
jno
pop
pop
jne
push
jo
mov
cwtl
popa
jo
push
sbb
cltd
mov
sar
dec
lock
push
outsl
xchg
xchg
ja
sbb
lods
pop
test
aas
push
mov
add
lcall
cmp
inc
arpl
not
mov
dec
data16
adcb
out
ds
lods
out
sub
shrl
lods
cmp
adc
jecxz
push
movb
ss
xor
lcall
push
jo
dec
aam
mov
inc
xor
pop
out
bndldx
gs
jp,pn
xor
arpl
arpl
mov
lods
int3
mov
out
xor
jmp
and
inc
dec
aam
xchg
inc
sbbl
sub
jle
cli
out
sub
push
adc
xchg
loop
inc
data16
sbb
push
bound
cmp
rcll
fucomip
sbb
pop
pushf
fptan
sbb
std
mov
adc
int
imul
insb
clc
push
mov
into
pushw
in
xchg
fnstsw
inc
pop
sti
jns
xchg
jl
dec
sahf
enter
cmp
insl
lret
stos
fwait
or
or
in
arpl
data16
loopne
icebp
mov
popf
std
pop
dec
decl
fists
cmp
push
ss
fwait
rcr
jno
inc
adc
push
fmuls
ds
test
and
popf
mov
and
enter
jp
in
adc
sub
arpl
push
adc
div
push
or
leave
push
ret
loop
xor
ficompl
push
js
jmp
ret
add
lods
stos
add
orl
xchg
xchg
xchg
mov
and
cld
xor
cmp
inc
sbb
out
dec
sub
ret
xchg
and
stc
xor
inc
lea
stc
stos
push
adcb
mov
mov
or
jno
or
mov
or
push
in
dec
mov
adc
js
lcall
dec
pushf
out
xor
fsubrl
scas
cld
pushf
push
sbb
in
inc
mov
cmp
lds
and
sub
jle
push
insb
sub
leave
test
fstpt
out
lock
loope
js
mov
mov
mov
jle
push
lea
iret
and
inc
adc
popa
sbb
cmp
rcl
insl
xor
das
mov
push
jae
and
sub
dec
bound
adc
mov
push
dec
xchg
add
in
jmp
fwait
pop
scas
adc
xchg
mov
mov
sti
insb
loope
into
push
dec
pop
sub
les
fisubl
push
dec
add
or
sbb
jmp
add
jmp
cmp
ja
xor
imul
notb
addb
push
push
mov
fiadds
call
cltd
xorl
out
mov
in
repnz
pop
stc
jmp
lods
inc
jecxz
pop
int3
mov
push
gs
loop
jo
call
ret
out
and
sbb
rol
sbb
imull
push
add
sbb
mov
imul
ret
xchg
dec
ret
and
popf
push
popf
fisubl
les
mov
sbb
test
addr16
dec
or
mov
mov
jo
int
idivb
or
add
mov
jnp
inc
imul
imul
jb
cmp
out
and
mov
pushf
jle
push
pop
xorl
dec
xchg
cmp
sub
adc
push
test
sub
les
cmp
test
in
das
adc
pop
push
inc
out
lods
cmpsl
pop
lock
add
out
out
lahf
or
sti
popa
adc
js
push
into
je
pop
inc
pusha
jle
outsb
dec
je
es
and
xchg
cmp
fstpl
imull
nop
imul
mov
adc
fbstp
pop
cwtl
mov
xchg
cmp
pop
dec
cmpsl
outsb
dec
push
dec
push
adc
rcrl
jb
dec
mov
stc
pop
mov
pop
fcompl
push
pop
jnp
scas
into
jnp
bound
das
push
xor
xor
inc
in
scas
outsb
mov
mov
jae
sahf
and
lods
mov
mov
xchg
mov
push
mov
sbb
rolb
mov
dec
sub
sub
cld
mov
cmpsb
or
adc
scas
in
or
dec
jno
daa
aas
scas
xchg
stos
mov
mov
or
dec
test
std
ja
jne
aad
decb
add
cmpsl
jo
loop
loop
inc
or
adc
movb
xor
fnstsw
cmp
or
jmp
jg
gs
mov
pop
jle
js
mov
fxch
aaa
mov
sahf
in
rolb
imul
or
xchg
cli
dec
or
int3
adc
push
insl
daa
shlb
iret
sti
es
sub
call
scas
mov
cld
lcall
lret
incb
int
push
scas
fcoms
mov
fs
clc
jno
popf
xchg
mov
sbb
leave
mov
pop
into
dec
stos
dec
mov
mov
jae
ffreep
push
fucom
popf
pusha
out
add
stos
lcall
pop
jae
push
mov
inc
cmc
sbb
outsb
in
outsl
mov
loop
dec
stos
cmp
xor
cmp
dec
cmp
push
aad
lret
add
pop
or
sti
xchg
lahf
cld
aad
lcall
out
or
mov
push
mov
push
js
mov
stos
dec
xchg
and
mov
sbb
je
xor
push
and
outsl
and
cld
dec
pop
shlb
call
inc
mov
lcall
test
mov
ret
sub
sbb
cmp
add
inc
adc
xchg
int
ficomps
xchg
jno
rep
pop
add
aam
outsb
sbbl
loope
add
and
fwait
aaa
roll
loop
into
push
adc
lahf
adc
dec
push
xchg
xlat
arpl
jmp
sti
pop
roll
jmp
inc
fisttps
dec
popf
jb
dec
ja
rcrw
mov
xor
xchg
push
mov
loop
popl
out
pop
pop
sbb
add
lcall
adc
push
inc
dec
aaa
pop
imul
hlt
dec
inc
pop
inc
dec
dec
aad
fmuls
hlt
cmp
jp
mov
mov
add
pop
loopne
xchg
aam
shll
mov
jg
dec
dec
popf
or
xor
jl
dec
dec
inc
in
or
lds
push
sub
aad
xchg
pop
cld
mov
pop
add
dec
jge
shlb
sbb
dec
jno
fisttps
fadd
jge
add
out
xchg
in
inc
xchg
push
scas
pop
inc
ret
mov
mov
imul
sub
and
and
mov
stos
dec
aas
pop
pop
push
je
push
in
sub
jb
add
sub
adc
jp
pop
adc
dec
insb
fstl
lock
adc
data16
ljmp
cmp
jo
and
xor
pop
push
and
scas
mov
cmc
inc
sbb
loope
repz
inc
and
cli
sbb
dec
pop
cld
int
mov
sub
jge
imul
mov
mov
mov
std
cld
es
inc
sub
iret
daa
movsl
out
lcall
jno
into
fs
ficoml
js
dec
add
mov
mov
push
and
les
sbb
lock
xchg
rcrl
dec
clc
cmc
jo
je
lahf
sbb
adc
mull
test
movsl
lods
jns
lock
out
je
inc
dec
push
pop
cmpsl
sti
stos
cmc
adc
mov
inc
hlt
test
adc
jns
outsl
xchg
push
repnz
lds
mov
jns
add
pop
dec
js
inc
mov
sbb
ds
cmp
sbb
movl
add
scas
jl
sub
dec
mov
push
js
shll
mov
mov
xchg
test
mov
add
mov
xchg
pop
xchg
pop
shll
fcoml
push
mov
les
pushf
mov
repnz
add
pop
orl
dec
dec
shlb
mov
and
cmp
xor
or
push
jo
fcomip
cs
mov
sub
insl
fs
ja
cmp
stos
popf
xor
sub
add
pop
mov
lds
lahf
test
mov
xchg
or
psubusb
fidivrl
fdivrl
xchg
pop
mov
addl
adc
pusha
inc
xchg
and
adc
sub
adc
outsb
jmp
out
das
imul
insb
cmpsl
aaa
movsl
mov
pop
iret
add
dec
mov
jno
aas
outsl
adc
repz
sbb
add
jle
js
lahf
stc
cltd
popf
cmp
add
jg
mov
or
push
sub
pop
sbb
sbb
mov
sub
mov
xor
in
pop
push
xor
jle
clc
in
and
shlb
mov
inc
and
cmp
sbb
dec
cmpl
inc
adc
pop
mov
adc
sub
add
lcall
add
ret
dec
test
xchg
shlb
test
xchg
sbb
bound
ret
pop
mov
inc
or
jnp
sbb
inc
xchg
sub
stos
mov
adc
cmp
cli
or
aam
leave
xchg
movsl
mov
add
ljmp
mov
dec
xchg
and
pop
jbe
or
andb
mov
bound
iret
imul
mov
jl
popa
icebp
push
xchg
dec
xorb
push
sbb
daa
jae
sub
arpl
fcomi
sar
mov
mov
xor
adc
xlat
nop
lods
inc
jp
xchg
mov
out
jg
cld
adc
or
test
in
mov
sbb
cmp
aaa
cs
mov
int3
mov
inc
adcl
int3
mov
nop
hlt
inc
jl
pop
mov
sbb
sti
das
xor
jge
add
lea
int
rcrb
shll
pop
add
mov
push
xchg
dec
and
ret
sar
add
jmp
stos
cmp
sbb
adc
hlt
fldl2t
mov
cmpsb
jge
jns
inc
mov
dec
pop
pop
mov
out
adc
lret
xchg
xlat
lcall
cmpsb
push
inc
push
xchg
cltd
dec
sahf
fwait
push
sbb
sar
into
icebp
pop
in
mov
pop
push
xor
push
aaa
leave
mov
test
dec
jno
pop
sub
addr16
repz
daa
adc
dec
fmul
imul
out
xchg
fildl
xchg
test
shrb
mov
enter
je
xor
divl
mov
icebp
mov
lret
and
lret
mov
test
sub
or
fldl
in
lds
pop
dec
mov
pop
dec
in
xor
clc
lds
loopne
cltd
aad
push
cltd
shrb
xor
movhps
ljmp
mov
sahf
aad
rcrl
push
jg
enter
icebp
jns
add
xchg
mov
sbbb
dec
shl
movsb
outsb
mov
and
repz
adc
cmp
add
clc
mov
cmp
inc
mov
jmp
push
in
or
ds
dec
pushf
sbb
sbbb
leave
ljmp
mov
and
jge
in
rol
pop
jle
cs
shlb
xor
lret
cwtl
popf
sbb
push
pop
imul
cmpsb
aad
aam
mov
adc
gs
dec
jge
daa
jg
cmc
ja
loopne
mov
cmp
sti
sahf
fs
sbbb
test
jl
sar
or
mov
dec
sub
aad
test
add
jbe
sbb
xor
jle
push
cmp
out
mov
test
adc
push
ret
pop
sub
xlat
sbb
scas
lock
dec
xchg
negb
outsl
jnp
aam
mov
fisubs
std
ret
cli
out
pmulhw
js
decl
push
adc
in
inc
ja
mov
or
std
loop
and
insl
mov
shl
aad
aad
xchg
and
xchg
insb
int3
sbb
lods
and
ret
mov
inc
xor
adc
or
cli
inc
insb
out
orl
jnp
aam
pop
es
push
jecxz
mov
adc
cltd
clc
mov
sub
xchg
arpl
fistps
addb
sub
dec
sub
scas
xchg
jb
aas
test
in
pop
push
insl
divl
stc
es
dec
in
leave
ljmp
imul
xchg
call
lret
ds
xchg
imul
lds
inc
xlat
inc
out
pop
out
test
sub
stc
cld
fdivr
xor
jmp
inc
cwtl
lods
in
cmpsl
pushl
js
clc
pop
inc
mov
cltd
in
jge
popf
adc
gs
jnp
fists
mov
sbb
imul
xor
rolb
cs
add
je
inc
push
pop
push
fldz
jns
mov
add
stc
mov
les
push
lahf
pop
push
repnz
ljmp
cltd
or
mov
pop
push
test
sarb
jmp
int
inc
lods
cs
jle
push
mov
pop
xchg
lcall
pop
dec
lret
in
aas
fiaddl
or
pop
inc
imul
rol
shrb
enter
pusha
daa
stos
out
test
mov
push
scas
pop
clc
cmp
testb
loop
add
sub
and
or
or
add
xchg
xor
jmp
jno
in
inc
jbe
push
orb
xor
in
inc
shlb
aas
in
jnp
cmpsb
mov
push
push
jae
cli
int
mov
cmp
and
mov
hlt
pusha
fcomps
imul
jno
aas
mov
adc
pop
and
andb
sbb
mov
sub
jmp
cmp
push
ss
test
repz
cs
pop
sub
lahf
push
sbb
int3
jb
rorb
call
shrl
inc
xor
stc
pop
cmp
mov
push
aad
cmp
pop
mov
js
mov
test
jbe
jmp
xchg
loope
sahf
xor
jo
sub
pushf
into
popf
xor
adcb
notl
mov
cltd
pop
cmp
xor
push
shrd
repnz
or
test
repnz
andl
cli
insl
stos
cmpsb
mov
mov
jge
dec
arpl
dec
mov
and
cli
or
outsl
enter
mov
out
jp
xor
push
mov
jno
int3
sub
bound
jbe
pop
mov
cmp
test
pusha
pop
jp
shlb
push
rcl
push
jmp
dec
dec
sbb
int3
cs
sti
pop
pushf
enter
mov
jge
jl
dec
xchg
outsl
stc
std
and
loopne
fsubs
jo
xorb
and
fisubl
mov
xchg
jnp
pop
gs
in
aas
fiaddl
jb
push
jecxz
jnp
lcall
xchg
pop
mov
loop
add
imul
push
call
xchg
ret
or
lahf
cltd
sti
cmp
mov
mul
sub
js
jb
popf
xchg
ficoml
jo
jle
inc
lea
adc
push
in
pop
clc
cmp
and
add
cmp
sub
dec
aaa
mov
adc
ror
inc
sbb
and
jmp
xchg
sbbb
cmp
fbld
push
adc
into
pushf
into
push
or
adc
cmp
mov
not
into
ret
lahf
push
cli
testl
out
aam
sub
pop
repz
pop
mov
dec
push
lret
in
mov
ljmp
loop
cmp
and
pop
inc
push
mov
stos
pop
jno
mov
jnp
movsb
daa
xor
dec
xchg
repnz
cmpsl
adc
enter
pop
orb
ret
stos
push
xchg
mov
insb
inc
subb
inc
ss
sti
mov
pop
mov
notb
sub
lds
lock
repz
stos
jns
adc
push
rcll
and
pusha
dec
dec
popf
sub
fmulp
out
and
adc
push
dec
or
pop
cwtl
mov
notb
adc
cmp
in
roll
xchg
adc
or
std
pop
out
mov
test
aas
push
out
push
push
fcomip
jae
push
gs
inc
cmpsb
cmp
std
lds
cmp
adc
sti
sub
test
mov
inc
shl
in
pop
ss
mov
cmp
roll
pop
mov
jno
mov
and
ljmp
aam
push
test
std
add
jo
and
mov
dec
xlat
cmpsb
hlt
or
adc
pop
dec
jns
xchg
sbb
xor
sub
jmp
jl
aam
mov
cwtl
and
and
adc
lock
push
cs
int3
or
xchg
mov
int
cmc
jmp
mov
or
andl
ret
adc
hlt
inc
test
cltd
mov
lds
mov
jno
fists
xor
outsl
mov
inc
imul
jnp
pop
jmp
dec
lods
ror
and
icebp
notb
mov
or
xchg
mov
mov
bnd
jns
addb
inc
fsts
push
loopne
in
pusha
sti
lahf
or
cmp
mov
pop
adc
cmc
sub
inc
outsb
mov
push
loope
or
inc
sarb
push
push
cmp
pop
adc
inc
les
fisubrl
cmp
stos
mov
gs
jne
in
dec
fwait
jb
inc
aaa
mov
cltd
mov
rorb
push
mov
sbb
mov
push
jl
into
aam
mov
andb
fcompl
adcl
adc
mov
sar
dec
out
leave
pop
cmp
in
or
pop
aas
or
out
adcl
std
jmp
scas
stos
cmp
push
sbb
std
sub
and
sub
sub
mov
mov
mov
daa
fisttps
nop
mov
pop
stos
test
xchg
mov
ja
xor
cmp
in
icebp
xchg
add
xor
mov
dec
pop
out
xor
cwtl
jbe
mov
and
push
add
es
mov
mov
loop
stos
sbb
popf
adc
cmpsl
lea
push
std
mov
sahf
mov
rolb
cmp
or
into
jecxz
or
std
ljmp
mov
iret
inc
jo
inc
es
ret
int
sub
jg
lods
test
push
cmp
push
or
jl
scas
inc
adc
xchg
pop
and
or
bound
int3
adc
push
aaa
sbb
adc
push
dec
sbb
popf
pop
mov
pop
shr
mov
mov
xor
jmp
std
fnstenv
cmc
add
insl
out
cmp
add
popl
adc
or
sti
and
lcall
fiadds
lret
sbb
push
dec
sbb
inc
leave
data16
add
mov
or
mov
lret
pushf
lret
call
dec
dec
hlt
fs
inc
mov
aaa
arpl
clc
and
std
push
inc
movsl
loope
not
pop
jns
sbb
xorl
cmp
add
lcall
mov
sbb
int
sbb
fistpll
add
adc
sbb
or
dec
enter
lea
ja
pushf
add
paddd
sti
mov
loope
fs
or
xchg
inc
jb
pop
cld
mov
inc
out
loope
dec
gs
push
loopne
xor
pop
rclb
insl
int
in
mov
mov
les
adc
xchg
push
xor
jo
cmpsl
xchg
nop
das
loopne
mov
sub
and
lds
sbb
mov
and
lds
jmp
inc
jae
mov
push
outsb
jmp
testl
add
xchg
push
mov
idivb
and
sub
rorb
cmpsb
xchg
mov
enter
fimull
dec
jge
push
sahf
pushf
daa
es
cltd
xlat
jg
in
pop
lods
test
mov
add
pop
jno
icebp
out
dec
test
and
or
add
insl
pop
gs
cld
push
das
hlt
enter
inc
in
stc
hlt
and
jns
icebp
out
je
xor
pop
pop
test
push
push
pop
sbb
in
leave
lahf
push
push
mov
data16
cld
and
call
lock
divb
popf
jbe
arpl
push
adc
movsl
mov
xchg
inc
sbbb
lret
subl
add
icebp
xchg
hlt
ret
jmp
adc
cmpsl
outsl
insl
jo
stc
icebp
mov
je
inc
arpl
add
fs
rorl
ds
cltd
sub
mov
mov
lds
scas
mov
out
mov
xor
int
cli
enter
in
xchg
dec
int
imul
mov
stos
push
lock
test
fidivs
ds
sbb
into
sbb
dec
sbbb
sub
sahf
out
sub
or
jae
cmp
jp
pop
inc
or
xchg
arpl
roll
xor
in
cmp
sbb
std
or
sti
mov
movsb
jmp
sbb
jns
xchg
mov
sahf
gs
mov
lock
pop
push
add
rol
jg
je
xchg
xchg
xchg
pushf
push
ds
icebp
jg
andb
jmp
shll
repnz
cmovae
jmp
lods
lock
jb
into
jne
and
pop
xor
add
jmp
dec
adc
fisttps
mov
push
or
jae
imul
fstpl
mov
sbb
pusha
inc
lahf
cs
imul
sti
sbb
stc
sub
fucomip
push
and
xchg
ds
call
add
mov
dec
pop
add
mov
push
sbb
test
dec
vcvttpd2dqx
sbb
sub
cmp
push
xor
in
add
lock
xor
and
pushf
xor
jbe
adc
inc
inc
stc
mov
ret
mov
inc
add
add
mov
pop
jbe
lods
push
ds
mov
incl
movl
into
xor
add
pusha
lret
pop
insb
lock
sbb
add
out
push
bound
sbb
mov
jmp
push
js
sbb
or
scas
rclb
xchg
cmp
fdivr
rolb
mov
push
movb
lret
adc
dec
and
dec
push
fisubrl
pusha
dec
inc
hlt
mov
outsb
jecxz
cmpsb
shr
mov
lahf
ljmp
in
call
loop
out
mov
jecxz
pop
loop
shlb
pusha
pop
push
cmc
sbb
pop
ss
xchg
xchg
cli
dec
add
and
inc
jp
mov
movsb
jno
jmp
pop
dec
or
jo,pt
dec
das
imul
mov
mov
mov
and
mov
or
xchg
cmc
sub
mov
sub
cmp
movsl
lea
test
test
add
adc
jb
in
lods
in
ret
jecxz
in
sbb
ja
sbb
lods
int3
out
insl
loop
xchg
ficoml
add
pop
pop
xchg
dec
ljmp
pusha
mov
lea
cmp
jg
das
jno
or
ffree
call
jg
xor
sbb
lea
insb
lret
mov
mov
std
add
xchg
outsl
nop
and
or
mov
push
mov
cmp
clc
push
sub
enter
in
and
sub
cmp
leave
std
jnp
jmp
das
daa
cmp
aam
lods
xor
ror
dec
xor
sti
addr16
mov
inc
test
loop
add
sbb
sub
xchg
fdivrl
icebp
jmp
cmp
dec
hlt
dec
jl
sub
xchg
lods
hlt
mov
imul
and
inc
ret
addr16
fisubrl
inc
out
push
mov
mov
outsb
xchg
mov
push
mov
push
pop
mov
adc
lds
lahf
and
cmp
pop
jnp
sti
adc
popa
push
sub
inc
loop
jns
sbb
adc
dec
imul
gs
mov
sbb
dec
mov
repz
in
stos
imul
inc
add
lock
imul
test
cmp
dec
icebp
aad
pop
mov
or
and
leave
ret
test
add
ljmp
jne
pop
xor
cmp
push
adc
icebp
cmc
test
jbe
cmp
js
or
or
test
sbb
js
imull
mov
call
mov
mov
bound
or
out
aaa
scas
add
dec
arpl
stos
in
jo
insb
movsb
jnp
push
aaa
repz
push
rcll
outsb
mov
mov
sub
testl
das
cmp
mov
loopne
movsl
push
dec
mov
fdivl
ror
ljmp
dec
into
adc
inc
pop
cmp
inc
clc
push
adc
mov
inc
mov
dec
dec
cwtl
xchg
add
cld
mov
lea
shlb
lcall
ret
fimuls
cmpsl
add
loope
gs
aaa
lods
mov
mov
loopne
mov
les
arpl
outsb
mov
daa
mov
push
push
mov
cltd
cltd
ja
out
mov
jb
pop
push
xchg
lds
outsl
jg
jnp
xchg
stos
inc
sbb
mov
jnp
mov
and
push
push
iret
ss
loop
outsb
inc
imul
cmp
or
xchg
pushf
icebp
xor
into
nop
ficomps
mov
addr16
in
das
dec
in
js
les
xor
adc
sbb
inc
scas
fcompl
mov
mov
cmp
mov
scas
pop
mov
jmp
fadds
in
out
push
cmp
and
push
lcall
ja
sub
in
dec
sub
xchg
inc
sti
outsl
xchg
dec
insl
in
inc
cmp
idivb
inc
fistpll
add
test
inc
or
jbe
add
mov
pop
loope
push
lcall
sbb
loopne
xor
xchg
scas
pop
inc
sub
mov
xchg
jae
push
sti
jns
push
adc
imul
loop
inc
mov
push
test
jae
mov
and
test
mov
inc
outsb
out
mov
icebp
cli
out
jnp
and
lret
sbb
mov
fwait
sub
mov
insl
in
mov
mov
inc
pop
jge
lock
push
sub
ret
cli
ret
popf
xor
fcmovne
mov
mov
dec
test
and
stos
jbe
lods
in
fbstp
out
out
stos
dec
imul
aam
xor
jnp
arpl
fisubrl
inc
pop
pop
cmp
adc
inc
loope
andb
and
lret
xchg
inc
cmp
mov
lods
rclb
enter
mov
int
iret
and
shr
call
imul
or
imul
jg
mov
jns
iret
push
sti
dec
ficoms
mov
mov
movsbl
stos
pop
je
adc
adc
inc
xchg
ljmp
movsl
iret
or
xchg
push
mov
jl
out
bound
dec
loop
filds
roll
jmp
test
bound
lods
push
xchg
movsb
push
mov
mov
mov
pop
pop
sbb
lods
lret
out
js
xor
popa
sbb
dec
scas
mov
push
jne
outsb
loop
in
xchg
mov
add
adc
clc
push
dec
aad
add
sbb
inc
in
ret
lods
incl
cltd
pop
mov
or
in
jnp
in
and
call
imul
mov
loop
cwtl
addr16
push
mov
jns
daa
xorb
dec
add
fadd
pusha
sub
mov
fcoms
xor
push
clc
cwtl
pop
xorb
int3
mov
jl
lahf
xchg
and
mov
andb
test
fnsave
or
push
add
les
adc
cmc
and
jne
lock
repz
cli
jo
shrb
shll
out
mov
mov
or
bnd
sub
xor
popf
pop
dec
mov
pop
xorl
lods
and
pop
jmp
mov
adc
mov
ja
loope
pop
stc
fnstcw
pop
in
iret
or
bnd
aad
mov
push
daa
push
lea
mov
jmp
jecxz
jmp
and
adc
lock
ss
sbb
arpl
repz
ljmp
jbe
shrb
pop
notb
and
sub
iret
mov
or
sbb
int3
mov
inc
jl
pop
adc
fmuls
add
in
ror
inc
xor
add
movsb
cmp
push
and
sub
adcb
aas
push
ljmp
inc
lds
repnz
scas
repz
xor
sbb
sub
ja
fldenv
insb
push
push
aas
inc
push
in
js
xor
or
rol
cld
sub
mov
std
nop
or
push
scas
aas
repnz
pop
or
movsb
cmp
movsl
bnd
mov
mov
jb
mov
inc
xlat
syscall
mov
mov
jg
and
je
cmp
hlt
cmp
mov
cmp
mov
xchg
xchg
pop
cmp
cmc
fistps
fmull
cmpl
insl
push
adc
xor
push
hlt
mov
push
fcomps
lea
movsl
dec
adcl
enter
iret
insb
dec
cmp
je
xor
subl
in
lds
imul
cmp
jo
pop
rorb
mov
cmp
test
xchg
mov
or
dec
sbb
cmpsl
int
pop
mov
add
repz
sub
mov
push
into
mov
xor
cmc
fsubs
fldenv
jae
lret
int
jmp
lret
xor
xchg
leave
imul
push
roll
sub
mov
int
idivb
sarl
cmp
inc
bnd
fcmovne
mov
rorb
out
ret
lret
push
out
cmc
push
and
and
stc
xor
mov
pop
orb
inc
jle
lcall
inc
pop
outsb
shrb
inc
mov
push
mov
into
in
mov
mov
pushf
xor
mov
pusha
cli
and
mov
iret
push
scas
jg
test
movsb
pop
fcomip
into
sub
inc
stos
or
imul
outsl
in
mov
pushf
push
mov
stos
sbb
dec
push
adc
jns
inc
ds
jmp
das
and
xor
mov
cmp
inc
les
inc
inc
cmp
mov
das
stos
cmp
mov
orb
xor
push
je
jo
repnz
loop
cmp
scas
int
jmp
ret
enter
push
inc
loope
push
dec
ss
pushf
xor
pop
pusha
push
push
int3
sbbb
mov
popa
jmp
xchg
cld
and
test
mov
sub
ror
out
imul
addr16
cmp
or
std
scas
int3
scas
inc
fdivrp
fimuls
sbb
stos
mov
adc
pop
test
pushf
sti
fdivs
dec
push
sarb
mov
mov
inc
xlat
mov
or
sbb
xlat
mov
dec
ret
mov
dec
dec
lret
xchg
iret
cmc
fs
sub
and
int
xchg
mov
mov
shlb
pop
stos
fcmovnbe
push
push
inc
fcoml
shlb
mov
xchg
jmp
or
inc
out
imul
mov
int
mov
adc
mov
fcoms
repz
fstp
mov
test
mov
xchg
jp
ja
xor
cmp
xlat
mov
insb
mov
sbb
push
loop
xlat
push
lcall
pop
cs
lahf
lret
push
bnd
mov
shll
cmpl
popf
subl
push
jae
xchg
xchg
in
push
test
xchg
mov
add
or
pop
in
xchg
add
fwait
adc
inc
mov
add
pop
xchg
inc
xchg
jnp
icebp
push
js
xchg
aaa
lods
aaa
add
int
mov
sub
push
add
cmp
imul
sbb
in
mov
jle
push
jle
lea
repnz
test
jb
xchg
ds
jmp
rcl
fisttps
cmp
pop
daa
stc
popf
sub
sbb
jno
push
pshufw
fstpt
ja
loopne
sub
xorb
or
sub
out
mov
push
fimuls
fildl
idivb
mov
jo
mov
xor
test
stc
outsl
jo
aaa
mov
pop
addb
sub
pop
fcmovnb
aas
rol
push
aam
clc
or
in
add
and
adc
je
xor
xor
lods
inc
in
fwait
push
je
cmp
sub
xor
popa
in
cmc
pusha
shl
adc
leave
andb
push
sub
lds
cmp
in
and
adc
test
inc
pop
mov
mov
jg
jne
rcl
mov
push
adc
mov
xor
test
sub
mov
inc
mov
es
cmp
sbb
push
mov
push
test
mov
inc
repnz
jae
xor
roll
adc
repnz
and
mov
or
js
add
jmp
dec
lds
cmp
cmp
push
xor
mov
and
xchg
dec
jecxz
jb
aam
mov
and
dec
rcrl
or
into
loope
mov
or
dec
test
shrl
xorb
out
test
test
andl
je
into
stos
lds
or
lods
add
arpl
cmp
xor
mov
sbb
xor
or
sub
stc
in
pop
inc
lock
jae
and
add
lcall
fistl
rcrl
and
je
ficoms
or
adc
fsubrl
sbb
lods
std
mov
or
jo
fbld
mov
mov
dec
mov
mov
arpl
jno
lds
jb
ja
sbb
lods
aam
fadds
pop
sbb
pop
les
inc
xorl
ja
sbb
mov
add
scas
addr16
fs
xor
push
int
and
lret
aas
cmpsb
push
xchg
enter
mov
xchg
mov
mov
into
inc
fs
fisubl
xchg
inc
mov
adc
sahf
aas
std
outsl
mov
sub
int3
test
jl
or
cmc
push
jg
out
lock
decb
mov
out
jmp
fldl
xor
in
jae
mov
dec
mov
push
sbb
mov
aaa
jmp
push
cmp
lret
push
sbb
sbb
repz
mulb
cmpsl
jns
mov
jp
adc
into
rcll
inc
gs
ds
lock
int
sar
repz
scas
sbb
cli
iret
mov
pop
shll
icebp
mov
sub
leave
inc
xchg
lock
xchg
mov
xchg
jnp
sub
add
cmc
repnz
mov
sub
mov
sbb
jne
or
xchg
xchg
ja
sbb
cltd
sub
mov
adc
cmp
pusha
inc
dec
fwait
scas
stos
nop
push
loop
mov
jns
mov
in
xor
mov
mov
mov
nop
jecxz
mov
jae
pop
jg
fwait
mov
mov
or
dec
adc
filds
mov
stc
fwait
les
rorb
cwtl
mov
mov
xor
mov
cmp
mov
xor
push
mov
sbb
push
call
mov
xlat
add
les
mov
inc
lods
xchg
test
imul
jno
imull
adc
add
adc
cli
mov
les
insb
inc
rcrl
inc
xchg
cmc
xchg
fmull
add
pusha
mov
out
mov
pop
pop
leave
scas
mov
lcall
nop
xchg
arpl
nop
lods
sub
das
dec
ret
or
movsb
scas
cmp
fsubrl
dec
ljmp
mov
mov
daa
fsubrs
or
in
punpcklbw
or
sub
inc
xor
aaa
add
inc
mov
idivb
sub
int
lahf
inc
dec
fistps
ss
xor
out
scas
stc
mov
lock
mov
push
mov
outsl
fucomp
push
xor
mov
sahf
jge
popf
dec
xlat
arpl
inc
pushf
adc
clc
pusha
sbbl
pop
movsb
loope
pop
rol
push
jge
popf
xchg
enter
pop
idivl
fsubrp
insb
fcomps
sub
cmp
bound
jae
fldenv
in
sub
test
add
les
stc
pop
push
push
lods
mov
std
clc
jb
push
inc
lret
add
cmp
inc
movsb
es
inc
and
xlat
mov
pop
test
fildl
mov
and
sbb
mov
sbb
fmull
and
iret
sbb
sub
cld
pop
sbb
pop
jo
leave
hlt
jo
mov
in
shrb
adc
push
stos
pop
sbb
jge
gs
sbb
and
xor
push
pop
push
aaa
addb
jecxz
or
pop
mov
xor
nop
xor
jno
mov
pop
xor
in
fwait
mov
add
inc
mov
mov
mov
mov
mov
sti
and
int3
lods
pop
jae
pop
and
xor
add
adc
or
mov
icebp
jg
lods
fcmovnu
cmp
push
aaa
repz
xor
mov
jns
out
add
pop
rol
dec
int
lret
adc
aas
sbb
inc
sbb
test
fs
add
xor
lcall
mov
add
fmul
das
hlt
and
or
dec
scas
cld
rcrb
mov
aad
stc
jns
jle
sub
outsl
fwait
outsb
mov
pusha
mov
movl
mov
loopne
and
addr16
mov
mov
shlb
jne
daa
pop
rorl
jns
dec
or
ss
stc
xor
pusha
arpl
mov
test
lret
xchg
testl
rorl
push
push
lods
aad
popa
shrl
add
bound
add
mov
push
js
or
lods
sub
std
mov
add
arpl
push
arpl
jp
loope
mov
shlb
xchg
cmc
mov
icebp
mov
push
xorl
sbb
mov
pop
xchg
mov
ljmp
mov
pop
arpl
jecxz
xor
sbb
inc
xor
inc
mov
sbb
and
les
push
int3
popf
outsb
mov
jg
pop
jb
jmp
push
loope
xchg
lods
icebp
push
fbld
sbb
aaa
popa
inc
or
jg
int3
lods
insl
jl
rolb
arpl
cli
xor
mov
sahf
test
mov
clc
xchg
mov
stos
sub
mov
sub
xchg
sbb
mov
in
push
dec
ret
xchg
in
jbe
scas
xlat
imul
fs
mov
mov
cs
mov
pop
jnp
mov
inc
in
sbb
push
mov
icebp
out
sub
lock
or
jae
scas
call
ljmp
or
jmp
jnp
in
stc
test
nopl
std
mov
test
jg
pop
xchg
pop
sub
flds
ljmp
cwtl
sub
push
test
pop
add
popa
scas
sbb
jne
repz
into
test
pop
xor
fidivs
ja
xchg
out
mov
ss
cltd
icebp
mov
pop
test
popf
pop
repz
aaa
mov
adc
mov
test
or
imul
mov
pop
fbstp
cmp
into
stc
push
adc
rcr
popl
adc
xor
sysexit
jne
repnz
xchg
jbe
cwtl
fisttpl
adc
and
or
out
push
test
push
and
gs
jecxz
mov
fs
ret
pushf
push
orb
lds
sub
fstpt
and
rolb
jne
lahf
test
lock
pop
mov
push
add
xchg
pop
jle
in
and
in
lds
std
in
fdiv
xorb
sub
inc
aaa
xlat
dec
xor
in
cwtl
pop
mov
int3
mov
mov
xor
and
sbb
out
popf
dec
lods
mov
daa
into
ret
popf
push
dec
lods
fcomps
rcr
popf
test
loopne
adcb
mov
add
mulps
int
sti
enter
cli
daa
dec
xchg
xlat
mov
lcall
jmp
xchg
iret
push
adcl
push
fdecstp
push
mov
roll
or
test
or
pop
sbb
push
leave
pusha
stos
mov
mov
mov
mov
lret
fs
les
or
icebp
ja
add
jecxz
pop
xchg
sub
out
push
or
mov
inc
or
and
and
loope
cmp
mov
rorl
pop
add
imul
lods
or
adc
cmp
stc
dec
jge
xorb
inc
jle
sub
int
ret
ret
ja
pop
movsl
cltd
and
jae
mov
add
mov
push
cmpsl
xor
dec
das
mov
mov
fs
sub
mov
pop
xor
jp
mov
pop
or
jae
xchg
nop
push
add
push
fs
mov
mov
cmp
into
mov
and
jb
pop
xchg
sub
jae
dec
adc
fs
cmp
test
jg
into
mov
or
lock
jecxz
outsb
test
sarb
mov
dec
daa
cmovg
mov
sub
jnp
imul
pop
jns
fadds
aam
into
pop
outsl
nop
or
xchg
add
xor
mov
int
sub
filds
mov
out
daa
cmc
mov
loope
mov
bound
div
test
cmp
mov
push
cltd
inc
clc
stos
xor
arpl
push
hlt
and
pop
sti
dec
or
das
gs
sbb
addb
orl
fisubrl
sbb
int
ret
mov
or
dec
outsb
out
imul
xchg
aam
data16
push
jmp
test
inc
push
adc
xor
push
add
imul
pop
arpl
int
ljmp
pop
pop
int3
outsb
repnz
inc
xchg
jb
test
pushf
nop
scas
aam
jl
aas
push
lcall
sub
insb
mov
int3
push
mov
cwtl
pop
shlb
ficoms
pop
dec
arpl
negb
xor
pop
and
add
cltd
mov
mov
fstps
das
mov
ret
and
enter
mov
js
lret
stos
sub
sbb
pop
les
jp
pop
int3
mov
xchg
ljmp
arpl
ljmp
leave
dec
mov
jne
gs
clc
or
pop
dec
mov
mov
loop
sbb
lcall
cmp
sub
and
inc
lock
or
int
cmpb
test
jge
xchg
leave
xor
mov
mov
not
aad
sar
icebp
xlat
in
mov
stos
xchg
cli
sbb
in
lret
push
push
andb
insb
pop
adc
cmp
repnz
not
mov
movsl
stos
inc
pop
push
add
adc
sub
or
add
dec
mov
inc
sbb
addr16
insb
jnp
mov
sbb
xor
int
fs
hlt
adc
popf
or
mov
adc
jp
xchg
push
sub
ljmp
push
adc
mov
xchg
dec
xor
mov
add
pop
inc
inc
inc
mov
lret
mov
sbb
pusha
cmpsl
adc
cmp
inc
pop
push
ljmp
cmc
mulb
int3
shr
ret
jae
or
daa
and
sub
cs
shr
and
sub
push
xchg
sbb
mov
rcll
sbb
int
mov
popf
int
fwait
ret
fimuls
inc
fisttpll
push
mov
jb
jl
xchg
jmp
shl
das
leave
sbb
xchg
sarl
loopne
loope
iret
std
lahf
testb
xchg
xchg
pushf
lea
movsb
fadd
es
add
jge
or
cwtl
mov
cld
sbb
and
ret
into
fistpl
and
xchg
or
mov
xor
arpl
pop
icebp
jge
lcall
addb
push
pop
xor
adc
jns
push
add
mov
dec
push
inc
jmp
dec
cmp
outsb
xchg
dec
mov
mov
xchg
repz
in
sbb
cmp
popa
incl
pop
add
data16
inc
jns
dec
dec
loop
pop
sub
sbb
addl
mov
iret
imul
push
in
add
leave
cld
in
nop
add
or
shl
lcall
inc
adc
rolb
loop
leave
lret
lock
xor
leave
xchg
or
in
mov
push
sbb
imul
push
cmpsl
jge
arpl
lret
fldenv
lods
lods
and
stc
cmp
cmp
push
push
fmull
mov
ret
cmp
aam
faddl
jl
jmp
repnz
add
add
int
in
and
mov
adc
jl
rorb
mov
mov
xor
into
ds
adc
ret
xchg
push
imul
scas
add
add
xchg
and
mov
dec
push
rorl
comiss
loop
insl
test
stc
xchg
cmc
inc
jb
inc
cwtl
fldenv
xchg
fidivl
loop
int
cmc
mov
out
xchg
lods
sar
divl
adc
je
add
xchg
xor
and
pop
xchg
mull
test
dec
ret
sub
lcall
xchg
dec
lahf
pushf
cmpsb
mov
not
shll
movsb
xchg
fs
cmpsl
hlt
sub
pop
jmp
out
and
jne
rorl
xor
fnstenv
add
xchg
pusha
data16
add
mov
xor
nop
lea
ds
in
cltd
or
cmp
jle
pop
jne
aaa
aaa
or
xchg
clc
jge
clc
sbb
add
inc
arpl
imul
dec
test
sub
dec
fcmovb
jae
mov
imul
jecxz
int3
lahf
jo
jecxz
fidivrl
rcrl
mov
jnp
outsl
mov
pushf
pop
sti
mov
mov
ja
xorb
test
in
xor
pop
push
cltd
mov
int
test
les
mov
xchg
popf
lods
jle
movsl
imul
pop
pop
cmc
es
stc
test
adc
dec
popa
push
insb
lcall
xchg
cmpsl
dec
mov
mov
jae
aaa
sbb
cmc
dec
lret
mov
mov
je
test
lret
inc
push
pop
hlt
cmp
push
mov
jne
dec
mov
dec
nop
movsl
and
mov
repz
add
xchg
adc
and
adc
popw
mov
inc
sub
adc
out
and
jl
fcomi
and
pop
add
lahf
pop
call
in
xchg
or
ficomps
daa
jmp
out
loopne
popa
shlb
mov
test
or
mov
sbb
into
jnp
nop
lret
mov
out
dec
mov
test
mov
imul
inc
pop
jmp
pop
mov
push
mov
inc
mov
or
jb
nop
cli
fsubrl
es
lcall
loope
xlat
xor
xchg
adc
fiaddl
jl
pop
ljmp
stos
out
mov
xor
adc
mov
adc
xchg
add
sub
lcall
push
pop
movsb
negl
push
jg
add
pop
mov
ror
mov
and
pop
xor
mov
mov
and
push
call
push
in
cwtl
dec
in
add
in
mov
mov
ja
fsubrl
fwait
pop
xor
pop
jne
cmpsb
inc
adc
inc
and
lret
std
out
inc
into
and
das
into
in
lret
xchg
int
pop
out
cmc
sub
pop
gs
sub
mov
dec
lods
mov
aad
cmp
xchg
xor
inc
sub
mov
dec
aad
orb
mov
dec
jo
mov
inc
dec
add
arpl
push
or
dec
push
test
rcrb
mov
push
pusha
mov
int3
jmp
shlb
mov
mov
popa
xchg
insb
pop
cwtl
test
and
inc
mov
xchg
cmpsl
cmp
jno
adc
inc
add
jecxz
push
pop
je
pop
and
dec
cmp
pop
inc
mov
loopne
dec
inc
adc
test
jmp
stos
jl
mov
mulb
sbb
add
push
mov
xor
jns
leave
push
and
xchg
jns
cltd
push
adc
xchg
mov
aaa
or
jb
mov
fiaddl
jo
xchg
ja
out
jnp
andb
scas
push
loop
push
das
pop
test
mov
cmp
jle
insl
mov
fadds
pop
repnz
and
les
call
lret
js
cmc
in
insb
add
dec
cli
fimull
lret
gs
ja
repz
out
pop
leave
jecxz
adc
das
xorb
lret
or
jns
sbb
and
popa
xchg
call
sbb
fnsave
adcb
mov
ret
in
and
popf
xchg
jl
sarb
insl
out
scas
out
fs
sbb
xchg
inc
sbb
cmp
cwtl
mov
icebp
nop
inc
xchg
sub
sbb
mov
push
mov
jae
jnp
add
xlat
stos
and
mov
sbb
mov
adc
mov
aas
mov
or
jp
idivb
loop
das
inc
xchg
vunpckhps
jae
lods
push
in
cmp
sbb
jae
push
out
jnp
pop
je
inc
in
rorl
and
push
pop
jb
pop
or
add
outsl
mov
pop
pusha
xor
sub
loopne
insl
ds
xor
push
popa
fimuls
fsubrl
popf
push
imul
dec
dec
gs
pop
xchg
cmpb
sbb
xchg
andl
inc
add
jecxz
inc
push
fcompl
push
cld
xchg
push
sub
sbb
pop
push
ja
iret
mov
fdivp
jge
fbld
inc
das
cmpsb
push
mov
std
pop
xor
cmp
sub
test
adc
fsubrp
addb
push
std
in
in
sub
xor
iret
cmpsb
xchg
inc
pop
mov
sbb
jnp
cmp
pop
js
mov
xor
shll
out
or
ficoms
push
mov
adc
push
roll
out
movsl
sbb
lds
stos
dec
aas
or
pop
mul
mov
push
test
xchg
and
push
or
loop
inc
mov
sub
pushl
daa
cli
adc
roll
in
cmp
sbb
dec
and
subb
pushw
out
mov
mov
adc
test
mov
popa
in
add
sarl
aad
cmp
ljmp
icebp
cmc
and
jge
sbb
cld
pop
push
inc
push
xchg
imul
fcomi
xor
cld
vcvttpd2dqx
cmp
loopne
shr
shrl
jo
movntq
lret
rol
push
or
cmp
and
mov
hlt
sbb
out
out
data16
fwait
cmp
cmp
cltd
lock
add
fidivs
mov
pop
add
or
mov
orb
stc
push
xchg
scas
xchg
fdivrs
shll
push
and
push
push
movl
out
mov
xchg
call
sbbl
jnp
push
dec
mov
jmp
orb
mov
mov
mov
or
fdivrp
scas
in
fimull
mov
cli
cwtl
fwait
pusha
xor
cmp
push
or
int
xchg
les
sbb
pop
gs
inc
mov
test
xor
inc
cli
test
or
xor
or
sub
les
mov
int3
mov
push
pop
pop
xor
mov
fstl
sub
pop
insb
mov
lock
in
loop
cmp
sbb
mov
imul
mov
addr16
shll
ljmp
fcomp
push
xor
insl
lret
sub
adc
shlb
test
sbb
xchg
pop
xor
psubusw
mov
or
clc
push
ret
scas
jmp
lods
repnz
mov
and
xor
shlb
cmp
push
cmp
ror
sub
inc
push
sbb
inc
cwtl
addr16
mov
jbe
ret
jb
imul
adc
adc
mov
jge
ss
stos
jle
jecxz
insb
mov
call
dec
cmc
inc
lret
mov
add
mov
inc
in
lock
pop
lret
adc
adc
jg
fsubrs
jge
test
test
in
mov
popf
jmp
xchg
push
lds
out
ss
adc
out
adc
inc
fimuls
pop
mov
imull
lods
xlat
jg
mov
sub
imulb
fldenv
cld
scas
lret
push
hlt
loop
jecxz
nop
in
or
fidivrs
out
sub
les
mov
mov
imul
xchg
enter
lahf
dec
inc
shll
sub
shrb
sub
mov
popf
fidivl
pop
jnp
mov
into
jmp
rorl
insl
jge
and
mov
cwtl
sbb
rcll
cld
or
mov
loop
sbb
test
jle
hlt
mov
push
pushf
dec
mov
lcall
popa
subb
and
bnd
and
stos
or
pop
mov
loop
mov
adc
cmp
adc
ds
mov
sarl
jo
jl
or
sub
lret
xchg
sub
mov
adc
test
inc
push
test
out
ja
jb
and
inc
out
mov
jae
stos
lcall
adc
cmp
inc
aaa
adc
add
or
mov
sarl
out
cltd
into
adc
and
lock
jg
ficompl
sti
pushf
test
add
out
add
js
pop
test
lock
fisttpll
jg
cmp
ds
mov
jp
in
pop
mov
and
add
shll
std
jg
daa
adc
out
xlat
sub
icebp
and
out
enter
mov
adc
and
int3
cmc
push
add
das
and
stos
xlat
mov
mov
xchg
or
test
popf
cwtl
popf
xchg
loopne
js
push
fisubrs
orl
outsb
icebp
lahf
inc
stos
or
jae
mov
xor
push
push
cmp
and
fmuls
xor
jns
xchg
bound
push
lea
jbe
fistps
jmp
aam
inc
cmp
mov
insb
fistpl
add
push
sub
stos
mov
in
xchg
popa
rclb
ret
push
mov
push
cltd
loope
shll
xlat
ds
pop
call
test
and
cwtl
lea
mov
or
pushf
jns
ret
dec
mov
adc
clc
das
imul
ds
add
adc
mov
xor
div
faddl
lds
inc
ret
pop
movsb
pop
outsb
mov
inc
adc
jbe
in
sub
out
push
mov
loopne
jmp
movsl
cmp
fldl
leave
jbe
add
andl
insb
aad
pusha
push
sbb
test
scas
insl
in
push
bound
and
mov
push
inc
cmp
hlt
or
outsl
into
xor
int3
outsb
stc
stos
fwait
lcall
addr16
adc
pop
cli
and
sahf
imul
jge
xor
rolb
repz
outsl
stc
xchg
xchg
sbb
cmp
inc
jb
out
cmp
xchg
jmp
ret
or
dec
lods
adc
fbstp
mov
inc
out
xor
sub
pop
pop
and
push
jecxz
push
adc
aaa
test
and
pop
push
mov
sbb
xor
push
repz
mov
and
jl
jg
cltd
mov
sub
push
insb
cmp
and
pop
imul
out
mov
xchg
mov
mov
sub
mov
stos
sub
cwtl
clc
aad
pushf
jle
sbb
and
add
adc
aad
push
ret
cs
jbe
push
pushf
lock
lret
es
inc
shll
jle
testb
add
out
or
lea
mov
ffreep
or
adc
dec
jbe
lahf
jbe
mov
pop
pop
mov
sub
hlt
in
outsb
xchg
sbb
xlat
mov
cwtl
outsl
and
push
mov
sub
and
frstor
xor
inc
cmp
mov
adc
out
adc
int3
jmp
add
pusha
mov
and
jb
or
movsb
rcrl
dec
and
div
push
cmp
or
stos
mov
fsubr
mov
imulb
sub
mov
jg
and
imul
out
push
in
mov
ja
inc
loope
fwait
dec
loop
les
iret
sub
push
sub
pop
xlat
push
adc
mov
in
sbb
mov
mov
dec
lret
lcall
andl
mov
sbb
and
xchg
pop
pusha
inc
push
scas
adc
js
sbb
mov
and
xchg
sub
and
inc
inc
mov
fiadds
out
scas
in
mov
or
pop
scas
xchg
jg
bound
bound
sub
adc
inc
or
outsl
pop
fimuls
adc
dec
int3
inc
dec
addr16
pop
rcll
mov
sbb
xchg
pop
jae
jmp
sbb
or
into
or
dec
mov
mov
xchg
mov
jns
push
or
loopne
pop
cwtl
jle
ss
rcrl
and
sbbb
pop
push
xchg
mov
dec
xchg
mov
sahf
fimull
test
outsl
cld
mov
sahf
fisubrs
mov
pop
mov
scas
mov
cld
movb
push
xchg
mov
jo
sbb
jo
adc
popl
jnp
sub
shll
xchg
inc
jb
jge
out
and
in
hlt
sahf
pop
scas
pop
sub
and
out
dec
mov
repnz
sbb
ds
dec
xor
shll
repz
xchg
mov
xchg
xor
xor
sub
or
mov
fbld
dec
inc
cmp
in
fwait
xchg
sbb
and
mov
popa
movsb
pushf
jmp
cmp
sub
mov
add
sbb
sub
leave
lret
sahf
test
dec
mov
andb
test
into
inc
popf
cmpsb
test
enter
stos
cmp
and
mov
test
add
push
mov
fwait
pusha
cmpsb
jl
push
and
or
test
or
in
sbb
sub
loop
insb
cmp
pushf
xor
scas
add
andb
icebp
cmp
dec
xor
pop
sub
int3
mov
cmc
ret
xor
ret
sbb
xchg
cmpsb
mov
dec
mov
dec
pop
mov
and
or
cmp
mov
movsl
gs
arpl
push
ficoms
xor
dec
jp
mov
fisttpll
and
xchg
flds
mov
dec
push
mov
jmp
inc
add
adc
push
lret
rorb
repz
ja
add
add
insl
faddl
add
shl
bound
lcall
push
insl
popf
lea
mov
sbb
dec
push
into
xor
push
push
mov
adc
insl
jb
push
sahf
push
jg
pop
leave
insb
pop
xor
mov
aaa
out
cmc
dec
dec
pop
sbb
gs
lock
jmp
push
sbb
cli
jbe
repnz
es
pop
push
clc
insl
in
call
and
out
xlat
cltd
mov
adc
int3
or
testb
fidivrl
mov
out
sbb
loop
and
and
jbe
test
movsb
fidivl
pop
addr16
stos
xor
loopne
ljmp
pop
outsl
stos
pop
lock
push
sub
sub
lea
lods
cltd
std
add
ss
stos
sbb
pop
sub
movsl
outsl
xchg
int3
cwtl
mov
int3
mov
sbb
push
in
xor
cmp
mov
inc
mov
sbb
fldcw
jnp
dec
lods
fdivl
or
dec
jae
das
enter
bnd
repz
jmp
lret
xlat
or
les
test
movq
xchg
dec
rep
mov
mov
pop
stc
and
adc
mov
pop
inc
or
outsb
pop
and
sub
cmp
mov
jnp
sub
lret
sbb
or
repnz
dec
negb
jl
int3
and
es
out
repz
cli
fsubr
in
sbb
outsb
xchg
icebp
adc
lock
adc
fdivs
push
cmc
mov
mov
cmp
sub
and
xor
add
pop
hlt
mov
stc
inc
jnp
mov
xchg
xor
fwait
sbb
mov
xchg
cmpsb
fs
fs
pop
adc
dec
aaa
pop
lahf
jbe
nop
mov
rolb
out
pop
adc
sub
scas
leave
inc
inc
xchg
xchg
adc
lahf
xchg
ficoml
cmpsb
jg
sub
fiadds
xchg
cwtl
addr16
xchg
xorl
jg
loope
jp
ds
jns
jmp
sub
lahf
popa
xchg
jge
push
cmc
add
pop
inc
or
jecxz
loopne
mov
sub
xchg
pop
adc
in
sbb
stos
out
mov
repnz
sub
movsl
jno
insb
jl
popf
mov
jmp
icebp
jb
sub
and
ljmp
add
outsl
cmc
adc
mov
jmp
push
xchg
shlb
addr16
insb
fiadds
dec
mov
add
pop
xor
dec
data16
lods
filds
test
jmp
mov
pop
sbb
data16
xchg
jmp
pop
xor
jb
cmc
xchg
test
mov
pop
clc
jno
cmp
ret
jo
xchg
scas
push
inc
cmp
ret
repnz
push
xchg
jge
icebp
xlat
loopne
bound
jge
insb
dec
into
enter
ljmp
sub
bound
inc
dec
mov
mov
sub
dec
popa
movsl
mov
bound
loopne
sbb
std
xchg
lret
mov
mov
mov
adc
daa
mov
stos
cmp
add
adc
mov
fadd
dec
and
in
pop
bound
jae
subl
repz
loope
cmp
inc
ss
lahf
cwtl
xchg
insb
dec
or
xchg
aam
add
in
out
jns
fsubp
lret
xchg
stos
lahf
divb
cmc
sbb
mov
cmp
pop
pop
pushf
add
mov
out
adc
fnstenv
cmp
pop
cmp
sar
mov
and
xchg
or
lea
daa
push
adc
mov
subl
cmp
mov
xor
xchg
clc
pop
mov
bound
pop
fistl
mov
test
pop
xchg
mov
imul
and
fnstsw
ljmp
inc
cmp
sub
push
je
into
lcall
add
inc
fwait
inc
sahf
test
loope
dec
sub
add
jmp
sbb
int
fcmove
lea
xchg
push
outsl
and
das
orl
jnp
jae
enter
rcrl
call
or
scas
rcll
dec
or
xor
dec
sbb
inc
pusha
jg
movsl
fnsave
and
mov
and
outsl
inc
ss
xchg
xchg
fadd
xor
jmp
in
mov
add
in
push
imul
test
cmp
cwtl
mov
popf
dec
andb
aad
mov
mov
lods
movsl
insl
stc
and
push
mov
mov
imul
test
mov
sub
cmc
or
mov
outsl
mov
mov
imul
and
dec
sbb
mov
les
jecxz
pop
inc
out
enter
je
jae
addr16
sbb
pop
shrb
inc
outsb
pop
fbld
mov
jmp
dec
add
rcrl
in
sti
jge
push
xor
mov
jg
ret
cli
icebp
in
dec
jns
push
insb
std
push
push
mov
pop
in
test
mov
mov
mov
push
cmc
stos
and
pop
xchg
push
jne
loop
mov
xor
out
xchg
sub
aad
push
sahf
imul
in
gs
es
pop
test
jp
or
xchg
test
jne
xchg
jle
pop
mov
add
inc
outsb
das
push
mov
jmp
push
cmp
add
fwait
ja
int
adc
lods
xor
mov
loopne
icebp
jns
hlt
les
dec
xchg
leave
frstor
sub
loop
movsl
add
cmp
adc
aaa
adc
shrb
sub
mov
or
fcomps
aas
std
jns
int
xchg
pop
jno
sub
add
mov
cmp
bnd
push
in
mov
cld
in
dec
enter
insl
push
into
dec
arpl
iret
rol
xchg
xor
xor
movsl
call
adc
mov
icebp
repnz
imul
dec
xchg
sbb
mov
push
testb
adc
cmp
popa
cli
inc
int
jnp
sbb
insb
mov
mov
scas
frndint
bnd
adc
sbb
popf
push
xor
popf
mov
jl
rcrb
sbb
shlb
cmc
mov
mov
int
movsb
lods
push
outsl
jae
arpl
ljmp
pusha
xchg
out
sbbl
xchg
cmp
fwait
call
js
mov
out
mov
adc
daa
inc
loope
cmp
or
jno
jno
mov
negl
pop
loop
or
pop
mov
push
cmp
jecxz
push
iret
sarb
sbb
jno
jo
push
ss
mov
pop
jns
divb
jge
mov
adc
jo
lds
aaa
jb
jle
push
scas
pop
add
adc
adc
pop
adc
in
or
xchg
pop
and
in
outsb
lret
jae
sub
sub
inc
outsl
pop
cmp
pushf
enter
ds
pusha
jmp
icebp
mov
add
push
xchg
sub
hlt
pop
dec
sar
andb
lcall
xchg
cmp
stc
outsl
and
cli
aaa
out
repz
push
pop
in
cltd
adc
xchg
in
sbb
in
das
cwtl
aam
add
jne
push
mov
and
icebp
xchg
mov
iret
out
add
ss
mov
push
mov
mov
sub
push
jne
stc
dec
pop
xchg
pop
inc
sahf
xor
push
mov
aas
outsb
add
and
icebp
pop
jp
lods
mov
gs
test
push
and
add
int
xchg
cmp
or
add
iret
xchg
js
sbb
scas
rcrb
push
mov
rorb
add
cwtl
cmc
mulb
pop
ljmp
stos
es
xchg
jo
cmpsb
loope
jecxz
inc
jp
enter
xchg
mov
loop
xor
or
out
or
aam
arpl
cmp
lods
stos
jb
cmp
cs
in
fst
cmp
in
cmpsl
bound
stc
jb
call
jle
xor
cmpb
sub
inc
jp
outsb
pop
dec
cmp
dec
fiadds
lods
pop
ljmp
aad
push
add
pop
bswap
sub
add
push
inc
inc
imul
mov
bound
add
mov
jg
ret
jg
or
stos
out
fmulp
mov
imulb
rorb
inc
dec
sbb
mov
enter
pop
adc
jnp
add
cli
push
push
inc
jae
xchg
fnstenv
cmpl
dec
adc
adc
pushl
xchg
cmpsb
mov
sbb
adc
mov
inc
leave
mov
fsubr
mov
icebp
sub
fsubs
jne
lret
aaa
sti
pop
test
jo
int3
ret
sub
sub
mov
pop
loop
nop
andb
popa
addr16
push
mov
dec
jae
data16
repz
jno
addr16
mov
es
push
xchg
loop
andb
dec
jg
lea
ljmp
mov
lock
in
lds
or
lds
sti
iret
push
clc
jg
mov
es
fcoml
jo
or
pop
packsswb
into
adc
das
std
insb
call
sbbb
and
test
mulb
fildll
lds
dec
or
mov
inc
or
lock
and
mov
add
ret
cmpsb
lods
dec
stos
push
xchg
inc
mov
inc
mov
leave
cmc
adc
rclb
ljmp
sbb
add
pop
out
popa
stc
mov
push
push
adc
add
stos
xor
mov
cltd
mov
inc
pushf
cli
xor
inc
cmp
stos
xor
sbb
sahf
mov
xchg
loopne
pop
jno
jecxz
adc
push
sub
shll
fsubrs
xor
push
pop
xor
or
sub
inc
mov
xchg
mov
in
mov
fstpl
add
jb
lea
movsl
dec
fisttpll
loope
mov
shll
jmp
cld
repnz
cmp
fsubs
arpl
fcomip
mov
insb
xchg
pop
repnz
xor
clc
push
jae
rcrl
insb
ja
adc
add
cmp
pop
sbb
mov
pop
out
sbb
lcall
aam
imul
cltd
jbe
pop
sub
mov
adc
mov
aad
js
inc
inc
es
js
xor
shrb
inc
push
scas
mov
mov
dec
push
mov
inc
lret
hlt
pop
leave
mov
jno
shrb
mov
dec
int
mov
filds
sar
nop
loopne
push
jl
in
stos
lcall
and
mov
aam
cmp
jae
sub
repnz
arpl
sbbb
add
sar
mov
pushf
dec
dec
push
dec
pop
adc
sub
out
scas
jp
ja
shll
dec
mov
movupd
pop
xchg
jp
js
mov
lods
inc
jecxz
inc
hlt
pop
das
insl
pop
ret
cmpsb
mov
test
sbb
mov
jb
xor
mov
bound
mov
and
xchg
jmp
cli
sub
fstpt
sbbb
pop
imul
das
pop
stos
xchg
insb
pop
sbb
rol
push
push
mulb
inc
fnstcw
adc
jecxz
popa
popa
push
mov
rolb
pop
cmpsb
loop
psrlq
push
test
cmp
sub
lahf
addl
sbb
xlat
mov
add
in
ror
mov
arpl
jae
repnz
aaa
fwait
insb
and
loopne
outsl
je
lds
test
insl
add
jecxz
dec
push
mov
add
testb
adc
and
cli
mov
fucom
into
in
cmpsb
push
aad
jecxz
jb
dec
jbe
xchg
jecxz
pop
stos
test
out
popa
je
push
rcrb
sub
js
xchg
dec
shll
ds
xor
out
jne
sbb
add
pop
xchg
fimuls
out
dec
add
xlat
jbe
mov
stos
add
rclb
sub
into
lods
or
jmp
jp
lods
aam
add
cmp
ss
pop
popa
cmpsb
mov
adc
nop
sub
in
daa
jnp
dec
add
or
aad
into
inc
pop
sbb
test
mov
arpl
push
jo
sub
mov
in
ljmp
pop
push
sti
xlat
frstor
mov
cmp
inc
das
movsl
roll
xor
push
iret
jle
inc
adc
leave
xor
xchg
mov
in
aaa
inc
scas
ja
mov
mov
adcl
std
mov
call
xor
xor
mov
test
arpl
xchg
and
pop
out
scas
outsb
jmp
sysret
loop
in
mov
cmp
fimull
lods
dec
jl
das
cmpsb
mov
insb
xchg
mov
mov
das
jae
push
jmp
push
mov
sub
dec
inc
imul
push
xchg
inc
bound
std
add
fcom
out
inc
lea
inc
or
outsb
mov
andl
sahf
fucomi
aad
scas
lcall
dec
fsubs
imul
adc
aam
pop
mov
cmpsl
sub
cli
xchg
out
dec
mov
push
pusha
jae
xchg
push
mov
sbb
out
adc
cmp
add
xchg
mov
in
dec
cmp
sahf
push
xor
mov
push
or
cmpsb
pop
add
adcl
push
scas
and
popf
dec
and
mov
inc
jae
pop
loop
cltd
dec
pop
push
add
int3
es
popf
leave
push
cmp
imul
out
mov
xchg
lock
adc
sbb
lahf
in
divl
add
adc
push
arpl
cmc
mov
adcl
es
fsubrs
lret
pusha
dec
adc
js
push
je
sti
dec
adc
andps
sti
mov
test
xchg
fists
ljmp
inc
imul
sahf
or
cmc
xor
jecxz
test
pop
leave
add
pop
shrb
add
aad
es
adc
inc
mov
scas
mov
ja
mov
mov
mov
mov
aas
mov
sarb
ret
nop
scas
lods
cmp
push
xor
lods
push
pop
sbb
sbb
sti
pop
mov
dec
push
gs
enter
adc
mov
pop
es
adc
push
dec
mov
pop
jg
dec
int
loopne
push
jge
inc
aas
push
sbb
loopne
div
mov
cmp
in
and
push
aaa
pop
pop
sbb
pusha
pop
cmp
inc
out
inc
lahf
movsl
and
fists
cmp
out
push
mov
stos
and
inc
pusha
stc
lock
sbb
jp
and
mov
in
push
sbb
or
ljmp
mov
out
jo
ret
mov
ret
hlt
call
push
and
fdivl
lcall
scas
pop
adc
xor
aam
push
xchg
sarl
lods
jle
pop
into
jl
xchg
jle
cmpsb
pop
xchg
repz
outsb
push
notb
push
aam
lret
jge
jecxz
ret
sbb
cmp
popa
cmpsl
mov
cwtl
testb
mov
aad
movsb
mov
xchg
int3
sub
mov
xchg
xor
nop
movsl
mov
adc
divl
mov
push
push
popa
fs
or
xchg
pop
out
pop
jp
cmp
inc
ret
jo
leave
xor
popf
and
add
out
inc
inc
and
cwtl
and
into
mov
and
and
pusha
lahf
dec
mov
push
sbb
mov
sub
jns
jne
sbb
int3
loopne
add
fs
lods
lret
sbb
sub
jle
push
scas
and
xchg
sbb
jge
cmp
sbb
xchg
std
or
mov
lcall
pop
adc
or
clc
mov
mov
scas
and
sbb
inc
dec
mov
push
and
dec
xchg
rcrb
scas
fstps
cmpsb
sbb
arpl
jge
lret
push
fnsave
int
xchg
mov
fists
cmpxchg
dec
retw
popl
mov
sub
mov
fidivrs
mov
pop
shr
shl
gs
test
gs
pop
xor
lea
in
dec
and
clc
loop
or
bound
popa
decb
xchg
stos
sbb
pop
lds
std
inc
xchg
push
pop
add
popf
push
xor
sarl
and
hlt
mov
xlat
lock
stc
in
push
scas
mov
rorl
mov
and
cld
lret
mov
imul
inc
pushf
std
popa
cmpsl
cmp
or
shrl
push
shrl
inc
repz
sub
fnstenv
mov
loopne
leave
push
xchg
dec
mov
loope
cmpsl
cmp
shll
jb
xor
and
lods
cmpsl
lret
sbb
or
mov
in
dec
in
int
fwait
jo
int
js
xor
fnstenv
lods
lods
mov
pop
jle
push
mov
mull
mov
enter
add
push
dec
push
or
xchg
scas
arpl
and
and
outsl
insl
int3
data16
dec
and
mov
into
pushf
xchg
or
dec
insl
lods
ljmp
pop
mov
sbb
test
jno
pop
in
test
sbb
sbb
mov
push
call
outsb
jecxz
cwtl
shll
mov
xchg
mov
aad
or
jle
jnp
mov
adc
outsl
leave
imul
jp
sbb
loopne
jno
mov
les
xchg
les
pop
dec
sahf
or
and
jnp
dec
imul
xlat
mov
lock
hlt
int3
cs
sbb
mov
cs
popf
popf
dec
inc
jmp
cmp
sbb
jmp
fimuls
mov
sarb
sub
cs
gs
loop
fisttpl
and
jae
test
jl
jns
or
loop
inc
int
mov
movsl
in
jmp
dec
out
adc
lods
or
and
jp
shll
lahf
jg
mov
clc
cwtl
or
jge
mov
sub
shll
mov
mov
xchg
iret
push
jo
fsubrl
in
movsb
fisttps
or
or
pop
fisubl
inc
mov
pop
jecxz
add
mov
mov
jl
mov
add
icebp
pop
jmp
andb
lock
sub
loopne
jns
fstps
sub
pop
mov
mulb
xchg
push
ret
lcall
xor
xor
mov
pop
inc
stos
cmpsb
sbb
mov
mov
adc
xchg
inc
or
popf
lds
xor
in
lods
inc
hlt
dec
cwtl
pop
pop
incl
leave
push
sbb
push
dec
js
fs
xchg
xor
addr16
enter
inc
or
faddl
hlt
int
test
ret
decb
xchg
push
cltd
sbb
into
rorl
sbb
adc
dec
xor
dec
jo
sbb
jns
fnsave
out
xor
inc
outsb
es
dec
addr16
dec
adc
popf
out
gs
mov
mov
jno
bound
aas
mov
movb
out
sub
push
decb
enter
xor
mov
push
adcb
push
lea
test
cmp
cmc
sub
insl
cmpsl
cmp
mov
push
sahf
lock
pop
xlat
sub
adc
cmpsl
sbb
dec
xchg
sbb
ja
in
pop
jbe
jb
adc
push
lods
addr16
add
mov
push
addr16
jb
mov
test
xor
fwait
jge
cwtl
cmp
dec
sub
icebp
je
cmc
mov
lods
xlat
push
lahf
fcmovnu
lods
lods
dec
jo
mov
adc
jns
movsb
fldt
leave
psubusb
jl
xchg
repnz
sahf
fsubs
shrb
xchg
loop
xchg
dec
cltd
mov
pop
xchg
xchg
push
icebp
or
dec
fbstp
sbb
cmp
arpl
mov
dec
sbb
lods
mov
cmpsb
dec
lret
inc
addr16
sbb
in
jbe
jg
xchg
xchg
or
stc
les
fst
inc
push
test
leave
js
rcl
lds
jg
iret
xor
xchg
pop
aam
add
mov
mov
sub
and
fnstsw
mov
mov
scas
sarb
mov
cmp
pop
inc
sarl
mov
push
adc
repnz
fistps
lcall
mov
ljmp
and
rclb
lock
pop
push
lcall
cwtl
add
cmc
cwtl
sub
loop
scas
aad
mov
loope
mov
out
ja
cmp
sarb
push
fisttps
add
sahf
rcrb
dec
mov
xchg
sbb
mov
jne
adcl
shlb
cmp
fucomip
mov
xchg
push
jb
or
push
sbb
ret
inc
add
je
orl
pusha
outsb
mov
arpl
popf
mov
stc
mov
mov
sbb
lock
inc
dec
and
idiv
mov
add
push
inc
ds
cmc
mov
call
hlt
jge
mov
int3
loop
ja
adc
mov
mov
stos
sbb
std
or
or
cmpsl
mov
push
test
ficomps
adc
sbb
push
mov
outsb
movsl
into
subb
lock
decl
shrl
fisubrs
sbb
push
int
mov
syscall
fisttpl
mov
push
dec
xor
imull
cmpsl
lcall
xor
bound
or
daa
js
pop
sbb
mov
inc
test
dec
icebp
xor
lods
testl
out
cltd
das
rorb
pushf
sbb
test
sahf
cld
addr16
and
cmpneqps
test
iret
lock
push
inc
add
jno
mov
dec
jae
mulb
sub
mov
mov
mov
sbb
stos
cmp
dec
pop
enter
sbb
int3
ja
cltd
push
jbe
or
mov
jp
and
mov
jo
push
cmp
fstpl
xor
pop
mov
add
push
push
mov
outsl
neg
arpl
ds
out
nop
cmp
repz
jmp
sbb
adc
mov
js
mov
xchg
test
imul
and
nop
das
fidivrl
dec
insl
stos
sbb
into
dec
test
add
dec
insl
sub
sbb
int3
inc
mov
fwait
out
lods
popa
xchg
mov
adcl
aam
mov
pop
mov
mov
divl
xor
mov
sbb
test
lods
fstpl
add
bound
jns
aas
fstpt
popf
xor
jle
or
xchg
xor
sub
lret
inc
sub
stos
lahf
std
dec
movsb
popa
sbb
add
dec
xor
std
cli
xor
ljmp
mov
imul
cmpsb
and
es
and
xlat
mov
dec
das
in
out
outsl
imul
gs
rorb
push
daa
popf
sbb
ss
aas
aam
add
push
imul
xor
cmp
rcll
out
cmp
shll
lods
inc
xchg
clc
mov
adc
in
in
idiv
ficoms
or
nop
xchg
pop
add
cmp
mov
cmp
in
mov
mov
std
xchg
mov
jg
outsl
lret
xor
dec
xor
inc
xorl
ljmp
cs
mov
mov
jno
mov
or
or
mov
scas
add
dec
xor
mov
das
in
push
scas
push
inc
pop
notb
adc
mov
shl
bound
ja
or
std
xor
pop
xchg
je
xchg
fldcw
cmp
leave
pop
fwait
iret
cltd
xchg
fidivrs
sub
or
addb
movsl
inc
les
inc
jb
pop
leave
inc
out
fidivs
sub
push
pop
push
mov
mov
dec
jge
orb
scas
in
aas
adc
xchg
mov
jae
jae
imul
enter
stc
int3
fildll
es
jo
pop
in
cmc
cmpsb
fmul
cmp
nop
and
fistl
inc
push
jnp
out
sub
push
sub
es
cmc
xchg
jns
les
popa
xor
subb
nop
stc
push
xchg
fs
adc
arpl
jp
imulb
jbe
ss
enter
aad
leave
jae
mov
sub
out
pop
pop
sub
xor
cmp
inc
or
ss
stc
push
and
add
aad
rcrb
push
fucom
test
fsubr
adc
movsb
xor
sbb
data16
shr
mov
pop
pusha
and
add
aas
fisttpll
dec
loope
in
jns
pop
push
imulb
push
jle,pt
addr16
xor
mov
sub
sub
sbb
push
scas
jno
mov
pop
ret
pop
lods
cmp
mull
lds
pushf
jo
pop
in
jp
add
scas
mov
fstpl
add
sbb
movsb
jp
enter
mov
int
mov
test
das
inc
aas
and
adc
bound
es
mov
lret
fiadds
call
insb
jge
sub
dec
outsb
sbb
jecxz
icebp
loope
push
or
ds
pop
jb
dec
mov
fdivl
cld
or
cmp
aam
iret
imul
push
push
popf
sbb
data16
js
int3
or
xor
jb
adc
clc
dec
push
xchg
pop
mov
cld
bound
push
mov
push
mov
aas
pop
push
fistpl
dec
insl
outsb
push
jb
xchg
push
out
fnstsw
mov
xlat
sbb
inc
xor
jecxz
lds
dec
jns
insl
lret
or
enter
mov
ljmp
and
cmp
lock
mov
out
es
mov
pop
outsb
mov
dec
lods
inc
xchg
or
ret
stos
pusha
inc
test
jmp
push
dec
add
pop
mov
adc
les
into
inc
cmp
lret
repnz
cmpsb
pop
sub
push
test
cmp
adc
push
and
jge
pop
divb
js
std
movsb
jge
sbb
leave
aaa
mov
xchg
loop
sbb
sbb
pop
les
into
in
jmp
xchg
aad
out
outsb
pop
mov
adc
hlt
jmp
or
popa
inc
mov
sbb
xchg
push
mov
test
cwtd
lea
mov
mov
xchg
insb
daa
xor
shl
add
xchg
push
call
stos
sub
pop
je
xchg
mov
das
mov
je
sahf
cmpsl
hlt
inc
mov
repnz
pop
push
cmp
mov
fists
push
mov
into
int3
mov
scas
xlat
inc
xchg
add
pusha
ljmp
data16
les
jne
dec
jg
dec
dec
cs
dec
les
mov
xor
xchg
bound
daa
or
xor
mov
and
pop
jns
mov
test
xchg
inc
sti
dec
js
push
push
rcrl
adc
add
or
ja
jb
movsb
aad
repz
push
inc
hlt
inc
lret
or
imul
mov
movsb
xor
cmpsl
fnsave
in
imul
xor
call
cmpsl
push
movsl
mov
clc
jo
jmp
jo
sbb
xor
popa
or
movsb
sbb
xor
subps
rcrl
jnp
out
jmp
mov
jp
cmc
cs
mov
stos
bound
push
dec
cmp
push
jge
sbb
mov
mov
imul
sub
shrb
fs
das
pop
cwtl
inc
or
loope
add
lea
lahf
adc
pop
adc
out
out
fcmove
pop
inc
pop
nop
mov
ljmp
xor
sub
mov
dec
nop
imul
jmp
cmc
jmp
imul
jbe
sbb
mov
fdivr
cmp
add
push
jns
orb
mov
and
fs
cmpsb
push
or
les
ret
sub
mov
push
sbb
sbb
pop
int3
xchg
xchg
inc
xor
jae
das
dec
je
sbb
outsb
add
xchg
test
daa
adc
icebp
cmp
in
es
mov
into
aam
pop
stc
sub
adc
pop
movsbl
mov
xchg
rcrl
xlat
fdivrs
call
xor
fwait
es
sbb
mov
xlat
aam
dec
dec
adc
sub
mov
pop
jecxz
pop
adc
jl
minps
pop
mov
xchg
mov
mov
jnp
ret
mov
mov
loop
test
test
xlat
cmc
popf
xchg
aas
pop
pop
xor
pop
imul
out
test
jle
or
xor
mov
cmp
mov
mov
daa
pop
cli
adc
lret
adcb
ja
js
jbe
out
lods
jecxz
sub
mov
fmul
divb
jge
fdivrs
mov
mov
mov
rolb
push
addr16
and
and
xchg
sarb
insl
out
popa
and
pop
out
sti
xorl
push
stc
fdivp
popf
pop
sub
mov
pop
adc
subps
outsl
jb
scas
test
fisubs
sarb
ljmp
or
mov
push
out
pop
mov
inc
std
pushf
addb
stos
rorl
cmp
mov
push
stos
pop
sub
mov
inc
je
cmpsl
pop
dec
cmpsl
mov
sub
aas
div
lds
out
je
xchg
std
or
pop
pop
push
emms
scas
arpl
or
sub
xor
hlt
pop
imul
cmp
add
or
or
popa
mov
pop
lods
xchg
int3
or
dec
sahf
or
pop
ja
dec
orb
sub
or
sbb
aam
shlb
ret
clc
xor
lret
xlat
out
aaa
jae
lret
dec
std
xor
aaa
jecxz
adcl
add
mov
es
mov
or
mov
sub
mov
cmp
inc
test
mov
cld
and
inc
mov
inc
add
cs
inc
test
xor
xchg
push
ja
xchg
xor
jp
mov
or
mov
js
mov
pushl
hlt
xchg
andb
jecxz
sub
lret
cmpsb
pop
mov
mov
add
dec
add
test
cmp
mov
movsb
pop
aas
test
test
lds
ja
pop
call
das
repz
xor
ret
inc
es
call
push
pop
pop
les
jnp
xor
pop
cltd
push
dec
inc
push
cs
push
push
sahf
mov
popa
mov
movsl
shll
jno
test
jo
xchg
jno
push
insb
shll
repnz
int3
sub
mov
dec
push
lahf
mov
push
fldl
push
jbe
lret
xor
roll
mov
pop
clc
xchg
cmp
insb
adc
cmp
cmpsl
adc
lahf
mov
push
mov
fcompl
mov
pop
push
int3
in
and
mov
in
mov
xchg
out
mov
mov
push
jo
jo
add
sbb
adc
push
fcoms
push
lahf
outsl
and
out
lds
cs
aam
fnstenv
cmc
clc
lea
sbb
push
call
fmull
divl
mov
jae
xorl
inc
pop
jo
movlhps
jle
add
hlt
mov
inc
pop
stos
jecxz
leave
jl
sbb
push
dec
je
clc
dec
xchg
pusha
add
or
or
lret
mov
sub
xchg
pop
aaa
ja
mov
dec
outsb
pop
pop
in
fdivrl
jns
leave
mov
push
push
jmp
addr16
aad
int
imull
lret
push
mov
sub
mov
sbb
idiv
mov
fstl
or
fst
cmp
pop
mov
div
sub
jno
inc
xor
cltd
insl
test
or
push
push
pop
jno
daa
lcall
int
push
insl
sarb
ror
pusha
in
stos
lods
mov
fbstp
mov
test
push
lcall
xor
ficomps
sub
in
rcrb
les
lock
and
add
cmp
mov
adc
sub
pop
cmp
enter
dec
cmpsl
xor
mov
sahf
push
cmp
imul
sbb
lahf
dec
les
das
sub
out
inc
loopne
inc
jle
in
cld
jnp
lahf
dec
lods
shl
scas
jno
adc
lods
push
add
mov
add
rorl
and
ret
popw
dec
pop
xor
pop
sub
adc
xchg
test
ror
cmpl
push
push
sub
xchg
data16
in
pop
dec
insb
in
xchg
cmpsb
jg
outsb
out
jge
adc
pop
std
push
xchg
pop
and
mov
and
mov
fbstp
mov
fidivrl
sbb
in
fstpl
into
popf
fcmovnu
mov
and
jp
outsb
cmpsl
and
flds
cs
push
inc
in
fistl
sets
add
pop
cld
aas
lea
sbb
leave
or
mov
stc
rolb
xchg
daa
stos
jnp
cmp
pushf
sbb
sbb
popf
mov
sti
sbb
mov
jmp
test
add
fists
jmp
cmpsb
mov
add
jne
adc
dec
mul
push
adc
dec
jecxz
aam
pop
dec
pop
sbb
cs
inc
mov
sbb
mov
or
roll
push
dec
adc
fsubrl
scas
frstor
sub
push
cli
mov
mov
ja
mov
xchg
icebp
push
inc
imul
stos
add
mov
sbb
inc
xchg
cmovno
dec
sbb
push
cmp
outsb
shll
fwait
cli
jnp
and
jmp
rorl
dec
shl
and
mov
in
rol
xchg
stos
mov
sub
sahf
cmp
fmuls
nop
sbb
stos
enter
dec
fstpl
mov
test
adc
filds
pop
sub
mov
loope
fucom
cld
repnz
shrl
cld
jno
popw
stos
pop
add
mov
adc
cmpsb
mov
xor
or
pop
sub
sub
jo
xlat
jae
int
scas
repnz
sub
outsl
in
lods
jg
das
icebp
or
out
inc
gs
cld
pop
xchg
inc
adc
cmc
decl
les
xchg
out
iret
lock
mov
jmp
popf
jl
adc
decl
dec
je
dec
mov
sti
push
cmp
mov
mov
negl
lds
inc
rcll
mov
jbe
nop
add
addb
repnz
xchg
sbb
cmp
mov
aam
mov
fwait
pop
cmpsb
lea
decl
mov
hlt
and
dec
jb
jg
pop
mov
push
cmpsl
mov
dec
clc
aam
cli
in
mov
movsl
mov
pop
lods
bound
lcall
inc
inc
mov
aaa
loope
xchg
push
sbb
mov
cmp
test
cmp
outsb
stos
cltd
push
mov
test
mov
cmp
pushf
pusha
and
pop
xor
popa
jge
cmc
mov
mov
subb
jmp
cld
jecxz
jns
or
jle
pusha
mov
ret
cltd
pmullw
and
jbe
clc
addr16
xchg
jns
out
push
in
mov
and
push
adc
out
mov
or
ljmp
clc
loopne
jg
stc
ljmp
push
adc
jge
mul
mov
repnz
outsl
fs
hlt
filds
add
and
aam
cmp
or
push
popa
cmpl
das
pop
mov
jl
xchg
jb
cmpsl
addr16
inc
fnstcw
jle
or
xchg
cmp
dec
sarl
test
and
jecxz
sub
push
inc
sarl
pop
cmp
xchg
out
ret
clc
call
fwait
movsb
cmp
dec
aaa
in
or
out
popa
mov
push
mov
cmpsl
cli
pop
je
in
xchg
sbb
dec
dec
sti
push
cmp
das
mov
mov
add
ret
stc
test
sahf
mov
int
xchg
jae
aad
adc
push
or
push
pop
imul
mov
mov
jmp
sbb
push
add
add
daa
fstl
shl
arpl
rcrb
ss
cmp
pop
mov
or
rcr
fnstenv
jo
sahf
jae
in
jl
or
mov
dec
and
sbb
test
into
sub
mov
dec
push
lock
mov
sbb
cld
or
push
mov
cmp
sahf
in
jne
pop
inc
ret
push
ljmp
outsb
or
int3
add
sti
inc
xchg
shrl
sub
pop
mov
es
jnp
pop
pop
daa
mov
adc
shlb
fstps
push
pop
pop
decl
xchg
cmp
adc
cmp
jge
mov
jnp
cmp
cmpxchg
lcall
aas
rorl
inc
sub
pop
cmc
dec
add
adc
lret
insl
push
jb
sub
std
cmp
mov
pop
adc
and
mov
sbb
pop
outsl
push
adc
pop
and
inc
loope
daa
insl
mov
nop
stos
rolb
out
push
popf
push
fcomps
bnd
mov
sbb
pusha
pushf
loope
mov
mov
adc
cmpsl
cltd
dec
test
push
xor
incl
pop
cmp
xor
jle
fs
sub
sbb
inc
xchg
notl
cmp
sbb
add
loope
dec
xor
and
mov
icebp
or
add
or
in
mov
pop
fadds
std
out
nop
jbe
mov
stos
jle
or
subb
mov
or
cli
ret
adc
xchg
stos
out
clc
outsl
daa
xchg
xchg
das
adc
gs
loop
pop
mov
ret
jno
adc
jo
test
push
adc
xchg
inc
pop
pop
push
cmpb
sub
sub
push
push
cmp
or
or
lahf
add
pop
cli
adc
or
cli
inc
mov
in
repnz
cs
adc
add
adc
push
mov
incb
mov
sahf
sbb
push
dec
xchg
push
fsubrl
iret
xor
jo
nop
mov
pop
call
std
lock
pop
push
movsb
out
sub
popl
popa
jg
pushf
pop
jne
clc
movsb
inc
pop
xor
mov
lock
sti
addr16
rcll
mov
push
dec
iret
or
test
fsubr
inc
sub
xchg
inc
jl
xchg
cmpsb
dec
sbb
repz
cmpsl
jae
adc
cmp
mov
sbb
or
fdiv
mov
push
xor
into
outsb
pop
adcb
lods
cltd
mov
ja
sub
bound
mov
rorl
sbb
pop
sub
push
aaa
push
out
jbe
pop
hlt
adc
jnp
daa
or
fcoms
or
je
jne
dec
rolb
mov
cmp
inc
sbb
rorl
and
mov
and
ja
dec
outsl
leave
mov
push
xchg
push
jmp
imul
aad
add
fwait
or
mov
pop
aam
clc
enter
inc
add
push
vmwrite
mov
cld
dec
jle,pn
out
mov
jo
cmc
rcr
shr
mov
outsb
pop
jg
mov
negl
test
add
mov
repnz
in
outsl
dec
in
lret
jno
cmp
hlt
mov
inc
pop
popf
cld
mov
xor
pop
ds
loope
iret
lahf
xchg
stos
pop
and
mov
addb
mov
cmpsb
gs
lods
testb
dec
nop
xor
and
mov
push
xchg
pop
stos
lods
mov
cmpsl
cmp
in
jecxz
jbe
lods
sub
dec
fldcw
push
fs
std
adc
aam
gs
aad
dec
mov
lods
cmp
call
dec
mov
sub
ret
mov
push
mov
mov
test
cmc
cli
cltd
and
xor
jle
and
inc
loopne
or
jecxz
sbb
sbb
mov
or
inc
in
pop
das
inc
pusha
or
divb
adc
std
push
sub
loope
jnp
or
fisttps
or
mov
int
scas
jno
out
ja
xlat
sbb
cmp
rclb
stos
add
notl
add
mov
pop
cmp
js
cli
scas
cmp
sub
lods
cmp
dec
and
lret
mov
jnp
pop
scas
xor
hlt
and
pop
sti
mov
jle
mov
add
adc
shll
pop
xchg
add
push
pop
shll
dec
push
into
outsb
stos
pop
lea
add
rorl
jne
dec
adc
jmp
sbb
jmp
outsl
mov
ret
xchg
scas
sub
sbb
inc
pop
or
xchg
shll
cmc
jecxz
sub
mov
stos
push
outsb
xor
lahf
sbb
dec
test
dec
loope
xchg
mov
add
mov
loop
and
sbb
mov
mov
dec
push
push
and
xchg
and
xchg
push
dec
popl
repz
xor
mov
jmp
cmpsl
js
mov
arpl
aas
pusha
pop
pop
or
dec
je
pop
jae
pop
or
les
and
ss
das
push
push
aaa
int
cmp
dec
rcrl
ror
test
jnp
adc
mov
push
in
mov
push
insb
dec
scas
stc
add
jle
adc
push
jo
outsl
dec
dec
pop
mulb
or
shll
xor
rclb
cmp
xchg
imul
or
test
imul
insb
jecxz
popf
enter
cmp
jno
pusha
sbb
mov
movzwl
cmpsl
gs
sar
or
jge
mov
repz
and
pop
enter
ficoml
cmpsb
push
jg
iret
inc
dec
std
mov
test
into
jb
xchg
ja
add
clc
out
out
jo
inc
cmp
or
dec
pushf
sahf
inc
int
out
jbe
adc
add
pop
mov
push
and
stos
cwtl
pop
call
aas
push
xchg
sub
mov
mov
sub
fwait
pop
inc
xchg
jne
jae
or
mov
aas
stos
sub
jecxz
pushl
imul
and
out
out
inc
cltd
pusha
cmp
adc
stc
lret
mov
push
lock
cmc
test
inc
clc
push
aad
or
insb
shlb
push
adc
fistl
xor
fisttpll
jbe
push
loopne
shrb
pusha
cmp
xchg
daa
xor
inc
cli
lcall
out
cs
clc
mov
imul
jp
sub
xchg
ss
fucomip
scas
jnp
fs
outsl
jno
addr16
dec
xor
and
xchg
pop
push
cmp
pop
push
sbb
rclb
mov
xlat
mov
adc
dec
xchg
adc
mov
mov
daa
or
std
mov
xor
push
cmp
shll
inc
inc
jno
adc
cmpsl
stc
imulb
dec
cmp
ret
test
jno
ror
lods
or
inc
loop
mov
lret
nop
mov
aas
and
cmc
hlt
pop
fildll
xchg
in
sub
cltd
xor
fldenv
add
dec
mov
or
dec
push
je
sbb
sub
jp
test
push
xor
sbb
sbb
out
fprem
cmp
nop
adc
dec
movsb
ljmp
mov
test
stos
stc
xlat
call
mov
testb
sbb
jge
dec
inc
push
test
stos
cmpl
rorb
das
pop
jb
and
push
test
and
xor
daa
incl
iret
incl
dec
mov
ss
cmp
sub
inc
neg
insl
xorl
insb
clc
push
in
or
push
ds
aas
mov
xor
out
push
pop
dec
fnstcw
sbb
mov
loope
jb
xlat
push
or
lods
scas
adc
lcall
sub
pop
push
outsb
call
cmpb
mov
cmp
sub
mov
in
sbb
insl
int3
bound
mov
cld
mov
lock
cwtl
inc
orb
inc
mov
leave
mov
sub
push
test
cmp
loopne
sarl
das
shl
movsl
rcrb
andb
repz
mov
scas
aas
and
arpl
or
aam
test
push
scas
cmp
aad
mov
test
scas
or
cwtl
cwtl
test
data16
fcmovb
into
outsb
movsb
insb
push
inc
mov
mov
dec
out
loop
and
sub
push
or
lods
sbb
pusha
je
cmc
cmp
ret
enter
xor
mov
pushf
adc
mov
sub
mov
test
xor
push
xchg
push
adc
pop
pushf
out
ret
sub
sub
cltd
cmp
mov
mov
xchg
sub
pop
adcb
inc
js
mov
mov
jbe
xor
push
incl
fwait
imul
push
mov
movsb
inc
xchg
xchg
jnp
xchg
mov
push
mov
icebp
testl
sub
arpl
mov
pop
mov
test
cwtl
je
mov
neg
mov
mov
jmp
jl
jle
jl
or
test
push
imul
aam
xchg
cmp
push
decl
data16
in
rolb
pusha
call
sbb
xor
cmp
out
loop,pn
sub
arpl
pop
xchg
fst
dec
cltd
xchg
dec
cli
cmpb
mov
add
mov
add
out
xchg
sub
cmc
pop
dec
inc
test
mov
out
imul
sbb
outsl
gs
push
lret
sbb
add
sti
lret
jmp
pop
inc
mov
adc
loope
inc
aas
mov
xchg
js
pushf
cmp
outsb
and
lds
fstps
add
mov
aas
jl
dec
push
clc
test
sub
aad
or
xor
xchg
ss
out
push
sub
xchg
iret
sbb
push
gs
rorl
loope
cmc
decl
in
pop
sub
xchg
pop
mov
adc
mov
sbb
cmp
jg
hlt
fwait
xor
shl
sbb
sbb
test
pop
mov
outsb
sbb
mov
lcall
and
stos
loopne
jb
sub
clc
inc
dec
mov
in
je
push
add
ljmp
adc
mov
and
inc
cmp
mov
int3
and
and
mov
and
aaa
xor
mov
mov
jg
pop
dec
lods
dec
xchg
scas
movb
das
cmp
adc
movsl
mov
loopne
lds
cmp
inc
aam
inc
xacquire
dec
cmpsl
outsb
shll
sbb
mov
lock
scas
lret
fwait
xchg
out
mov
jb
es
outsl
xor
mov
arpl
sarl
sub
cmpb
insb
mov
and
mov
in
sbb
mov
std
popa
into
subl
pop
or
leave
add
popf
int3
mov
popf
xchg
mov
mov
inc
dec
stos
lock
aaa
fcomps
mov
lret
and
pop
jl
cmpsb
push
inc
or
loope
outsb
clc
aas
and
mov
mov
jl
push
xor
mov
in
or
sti
mov
test
xchg
ljmp
rcpps
stos
shrl
sbb
orb
mov
arpl
iret
mov
lahf
cmpsb
lods
stc
inc
in
jns
xchg
shl
testl
notb
pop
imul
lret
mov
pusha
dec
adc
and
mov
testb
dec
cltd
fisttpll
das
cmp
sub
or
mov
push
xchg
adc
clc
jno
mov
dec
sbb
fcomi
js
push
repz
rcll
pop
shrb
push
out
fwait
test
out
lods
adc
push
xor
or
and
cld
jmp
mov
mov
dec
jmp
cmc
cmp
iret
fcoml
mov
and
jge
pop
std
ret
jo
out
lcall
sub
sub
sub
subl
mov
mov
xorb
ja
in
push
ds
or
dec
xor
fcmovnbe
xchg
scas
out
sub
mov
pusha
mov
xchg
inc
sbb
mov
stc
and
les
pop
xor
ret
push
out
dec
mov
in
cmc
cmpb
add
das
jg
lock
cmp
mov
lods
or
stos
das
adc
scas
cmp
cmp
jae
decl
mov
int
test
jno
dec
mov
add
testb
jmp
insb
pop
inc
cwtl
in
repnz
ret
mov
pop
add
pop
outsb
pop
or
xchg
jl
cli
aam
lret
sbb
ret
jo
scas
mov
fdivrp
inc
js
dec
cmp
xchg
mov
cmpsb
push
repnz
les
subl
inc
cmpsb
and
jecxz
cmpsl
add
adc
gs
or
or
aam
lds
loopne
push
cmpsl
jecxz
cmp
shl
dec
xor
fisttpl
cmpl
mov
pushf
xchg
fidivl
sahf
add
enter
inc
sti
hlt
sub
mov
adc
ret
shll
xor
and
stos
lea
sarl
pushf
popf
in
out
mov
daa
out
incb
ja
dec
shlb
icebp
pop
scas
packuswb
xchg
call
pop
cmp
jne
ds
stc
pop
jmp
sbb
in
sbb
in
and
pop
mov
out
and
sti
push
sbb
xchg
jmp
sar
jp
outsb
jne
int
iret
jecxz
cmpb
js
or
push
jge
push
rclb
add
nop
pop
lret
push
sub
xor
pop
lock
ficompl
pop
notl
popf
lods
sbb
pop
mov
add
fsubp
xor
dec
cld
mov
cmp
enter
fdivrs
cmp
push
popa
adc
and
sbb
js
xchg
hlt
ret
outsl
cmp
mov
imul
sbb
in
fistpl
mov
addl
enter
dec
cmp
cltd
xor
xchg
clc
cli
outsb
test
pop
xchg
push
add
imul
push
rol
outsb
popf
jo
test
and
dec
int
pop
mov
bound
shl
xor
stos
in
cmp
movsl
jbe
in
pop
leave
cmp
pushf
sbb
movsl
cmp
lock
in
ficompl
xchg
mov
or
mov
add
and
cmpb
test
jo
inc
cmpsl
or
outsb
jecxz
into
int3
clc
roll
stos
jb
jo
mov
arpl
push
add
aad
pop
loopne
iret
mov
xchg
add
jb
outsb
sbb
xor
rcl
jbe
mov
orb
xchg
cmp
les
fsubr
jns
mov
add
xchg
loope
and
pop
mov
fidivl
mov
out
inc
sbb
cld
dec
dec
sbb
mov
and
push
int3
icebp
xor
lret
cmpsl
sahf
icebp
mov
cmc
jns
mov
call
inc
add
jne
mov
xchg
leave
and
mov
jmp
mov
jl
push
sub
mov
addr16
shlb
sti
stos
mov
fadds
push
or
into
insb
jo
dec
orb
xchg
pop
jae
filds
sub
neg
mov
dec
mov
testl
jnp
rolb
or
sub
fldcw
jne
out
push
movsbl
cli
inc
sub
xchg
sub
sbb
es
or
js
dec
dec
in
sbb
divl
pop
imul
loope
inc
mov
dec
push
call
jmp
mov
fs
repnz
xor
lahf
out
pop
pop
cmpsb
add
nop
dec
movsl
sub
pop
cwtl
rcl
mov
xchg
mov
inc
jge
xchg
add
outsb
ja
add
mov
aam
jmp
mov
and
cld
xor
add
cmpsb
sarl
mov
ljmp
aas
sahf
outsl
lahf
sti
pushf
insl
sbb
jle
xor
sub
push
add
inc
sbb
daa
inc
and
popf
lahf
fisubrl
lds
cmp
mov
push
stos
push
icebp
in
jnp
sub
call
pslld
push
xchg
push
jp
jne
lcall
push
jns
stc
adc
pusha
push
iret
gs
outsb
jge
mov
or
xchg
loopne
push
mov
mov
imul
xchg
xchg
mov
sti
pop
imul
call
push
cmc
xchg
cmp
inc
xchg
int3
sub
mov
lahf
xchg
mov
ffreep
or
mov
mov
cmp
mov
lret
and
data16
pop
mov
jp
lret
cmpsl
inc
inc
sbb
xchg
push
loop
sub
scas
xchg
push
mov
add
inc
mov
jecxz
call
clc
fs
nop
pop
out
add
and
dec
loopne
movsl
stos
aaa
aam
int3
xor
inc
push
pop
adc
cmp
inc
ja
clc
xor
andl
dec
push
jmp
inc
mov
mov
enter
es
loop
std
pusha
mov
jp
push
orb
imul
xchg
xlat
ret
sub
icebp
mov
mov
or
mov
push
xor
and
test
ja
jne
lret
imul
adc
test
pop
rclb
movsb
shrb
in
jo
pop
mov
pushf
cmp
enter
sub
xchg
cmpsb
pop
push
ret
movsl
gs
mov
cld
or
sub
into
stos
mov
pop
mov
cmc
je
adc
and
cmp
ficoms
adc
int3
sub
jle
mov
inc
pop
mov
and
xchg
xor
or
test
rol
or
inc
cmpsb
mov
mov
pop
enter
xchg
aas
loopne
push
pop
mov
xlat
inc
mov
pusha
push
iret
dec
lods
dec
call
sub
push
mov
add
lahf
mov
mov
pop
je
insb
pop
dec
sahf
xchg
sarl
loop
std
fnstenv
outsl
mov
cmp
or
ljmp
push
mov
mov
jmp
int
repz
or
call
nop
inc
lret
cltd
xchg
jae
rcrb
lods
fsubr
inc
rorl
ret
filds
and
xor
mul
shlb
loope
in
xchg
cli
aas
and
add
xorb
aas
dec
cs
sbb
shrl
adc
lds
add
std
jbe
imul
ret
xchg
int3
scas
dec
inc
and
xor
sbb
std
mov
pop
jecxz
add
pop
shlb
out
mov
cmp
fld1
mov
cmp
push
xchg
add
xchg
push
or
adc
jge
jg
dec
sub
add
fcompl
popa
jle
pop
icebp
push
aaa
hlt
mov
in
shl
icebp
and
shll
fistps
push
sub
addr16
xchg
mov
adc
jecxz
xor
mov
add
dec
fsubs
or
cwtl
mov
imul
jb
hlt
cld
test
lods
aam
subb
xor
pop
hlt
fcoml
mov
arpl
add
lcall
daa
push
clc
icebp
in
in
leave
pop
mov
adc
pop
or
sahf
arpl
inc
pop
pushf
sbb
fs
fcompl
mov
sub
adc
jbe
and
mov
cmpsl
cltd
mov
or
test
xchg
pop
mov
pop
repz
dec
lods
sub
inc
xchg
lock
mov
push
in
rcrb
mov
icebp
xchg
rclb
ficomps
sbb
mov
xchg
lods
sbb
rcr
adc
sbb
or
daa
mov
jmp
cmp
mov
inc
cmp
addr16
mov
sbb
cmp
adc
mov
jnp
sbb
nop
orl
xor
sub
dec
imulb
dec
shll
cs
push
fistps
push
adc
out
js
sub
adc
pop
test
and
or
or
aas
test
call
imul
test
scas
test
rolb
clc
and
repz
fimuls
aad
sub
sbb
xchg
test
sbb
jp
cmovo
fstpl
cmpsb
rcrl
and
out
xchg
adcl
cmp
test
lret
dec
icebp
adc
dec
push
sub
pop
pusha
das
fcoms
sbb
or
lcall
icebp
stos
mov
pusha
push
mov
aas
cmc
jmp
sub
add
mov
push
push
into
jns
push
mov
pop
mov
xchg
xchg
or
cmpl
jecxz
fbstp
jo
mov
sbb
pusha
adc
outsb
mov
gs
testl
ss
cmp
xorl
int3
dec
pop
mov
repnz
sahf
push
push
test
pop
xor
stos
outsb
adc
lods
add
dec
add
dec
or
pop
cmp
dec
cwtl
xchg
rorb
ret
ds
pop
jl
les
pop
mov
ja
cwtl
adcb
call
dec
loopne
scas
sub
cld
pop
xchg
testl
aaa
adc
and
adc
adcb
out
lret
punpckhwd
xchg
mov
ffreep
push
push
and
sub
inc
stc
lcall
mov
fs
popa
jns
sub
xchg
cmc
xor
jbe
ret
adc
mov
adc
xchg
xor
cmp
jmp
test
jle
adc
inc
mov
or
jle
dec
sub
mov
addb
mov
push
sub
sbb
push
cltd
push
adc
mov
push
sti
cli
addl
mov
xchg
xchg
pop
lods
mull
dec
in
jg
xor
fbld
sbb
popa
pop
jne
lods
mov
push
outsb
fsubr
mov
jmp
loop
jno
bound
test
push
mov
pop
push
stos
xchg
jnp
sbb
aas
not
lds
mov
lods
pop
xor
ljmp
mov
xchg
mov
sti
sub
inc
lock
cmp
xchg
or
adc
test
test
mov
adcl
push
cs
pop
arpl
mov
add
dec
rorl
sbb
mov
addl
test
mov
jmp
mov
leave
sahf
push
and
insl
icebp
hlt
mov
test
ret
in
lods
xchg
ja
push
mov
dec
mov
or
sbb
and
and
inc
sub
mov
xchg
lahf
rorl
cmpb
lods
dec
hlt
and
sub
fcoml
add
clc
pop
test
sub
xor
inc
add
mov
xchg
fidivrl
jge
decb
mov
inc
jp
cltd
cmp
adc
cli
xor
in
jb
jge
jns
push
stos
bound
rolb
sarl
jne
jne
mov
rcrl
imul
rcr
test
push
out
pop
jns
jg
movsl
push
out
out
jge
imull
movsl
mov
daa
mov
test
add
ljmp
ds
xchg
int3
into
dec
roll
fsubs
pop
or
cwtl
mov
nop
pop
mov
sub
fsub
dec
lret
lahf
cmp
add
aad
cmp
stc
outsb
jnp
sbb
sahf
fcomps
mov
sarl
cmp
and
lcall
aas
add
fld
push
subb
addr16
mov
mov
and
int3
mov
and
addr16
xor
adc
je
adcl
push
nop
mov
ljmp
sarl
insb
pop
stos
shlb
shll
das
fbstp
mov
add
stos
xor
xchg
jecxz
dec
and
lods
fcmove
je
add
mov
mov
orb
cwtl
leave
mov
dec
xchg
adc
xor
lahf
repnz
pop
inc
ret
mov
cmpsl
jle
mov
mull
mov
ret
outsl
push
jns
in
dec
loope
test
or
subl
dec
push
jb
push
add
movsb
sub
fldcw
andl
adc
xor
push
insl
cmp
pop
mov
inc
and
cmp
das
pop
adc
inc
mov
mov
int3
pop
test
mov
inc
inc
call
sti
int3
imul
jne
adc
xchg
jp
push
dec
je
push
mov
in
loop
adc
jge
testb
mov
sbbb
mov
fsubp
fidivrs
jle
xor
xor
hlt
or
add
dec
hlt
addb
mov
incb
clc
pop
push
movsb
add
sbb
addr16
nop
int3
pop
repnz
hlt
jg
pop
mov
add
push
or
insb
cs
repnz
dec
arpl
imul
xor
inc
std
jecxz
adcl
pop
jecxz
aam
adc
xor
jo
pop
dec
and
push
mov
jle
std
rorl
aas
mov
mov
std
les
movsl
pop
insb
inc
jecxz
lcall
shll
push
fs
adc
lods
inc
sbb
mov
mov
std
jb
jp
out
add
je
pop
nop
push
sbb
js
or
jmp
popa
je
pop
cld
jns
and
jmp
inc
mov
std
imul
cwtl
fdecstp
lret
lods
or
xor
xlat
sbb
movsl
outsb
jae
sti
outsb
pushl
xchg
pop
push
add
sub
cmpsl
cs
inc
jb
loopne
into
std
rcll
or
adc
mov
xor
inc
addr16
jge
rclb
ret
test
dec
sub
fistpl
cmp
fbld
scas
cmp
bound
add
cmova
mov
lea
push
pop
cmpsl
out
clc
xchg
pop
stc
lahf
push
push
or
push
dec
pop
pop
cli
jno
or
or
leave
inc
scas
dec
ret
test
cwtl
lods
jns
lock
push
push
xchg
sbb
dec
arpl
adc
into
dec
sub
enter
test
jb
xchg
repnz
cmp
gs
and
jne
mov
pop
dec
xchg
pop
ficoms
and
push
mov
sbb
cwtl
jne
sub
sub
stc
xlat
adc
fwait
movhps
outsl
xchg
push
stc
ret
dec
sub
xchg
dec
sub
dec
das
sahf
dec
loope,pt
in
sub
and
cmp
insb
add
mov
aad
rcll
roll
pop
in
mov
adc
out
lea
pop
inc
gs
sbb
sub
mov
ret
lcall
jb
pop
andb
jne
and
hlt
jbe
nop
packuswb
cmc
outsb
or
aas
pop
in
mov
fwait
jge
sbb
xchg
sbb
out
push
jecxz
xchg
out
pop
adc
push
test
pushf
stos
pusha
mov
imul
dec
jle
mulb
sbb
repnz
sbb
sub
lret
mov
mov
test
mov
pop
inc
xlat
jbe
lods
or
dec
pop
sti
jmp
sub
movsl
mov
xchg
push
jno
leave
sbb
push
inc
lcall
out
mov
int
mov
inc
nop
sub
bound
sbb
xchg
fadds
cmp
fsubrs
jo
dec
sahf
jl
sbb
test
arpl
xorl
mov
cs
scas
adc
movl
cld
mov
mov
int3
inc
sub
loope
lock
cmp
add
adc
and
jne
push
and
push
xor
lock
push
pop
lea
sbb
push
push
add
movsl
ja
mov
pop
xor
aam
jle
or
and
sbb
adc
push
iret
int3
rorl
or
add
inc
int
sub
or
aas
jg
pop
test
xor
or
cmp
lock
adc
xor
jmp
mov
ret
xchg
ss
lods
sbb
idivl
and
inc
and
cltd
add
inc
sbb
pop
jns
cwtl
mov
cmp
in
push
fcos
int3
in
adc
je
or
stos
and
roll
push
jne
cmp
fstpt
fistpll
cmpsl
imul
xchg
dec
mov
sub
dec
or
mov
out
mov
xchg
and
xlat
and
mov
cmpsb
jns
in
push
cmp
popl
lret
sbb
adc
mov
xchg
cltd
lods
hlt
fdivrp
cmp
imul
jo
sub
sub
add
xchg
jp
push
pop
fxch
xchg
adc
aad
iret
stos
in
les
sub
lock
mov
in
dec
popa
movb
adc
fmul
sahf
fidivrl
fsubrs
jp
push
repnz
mov
xor
fwait
xchg
cmp
data16
ficomps
mov
in
out
mov
jmp
insl
fcos
inc
push
mov
lret
mov
test
inc
cmc
pushf
fsubr
mov
push
jbe
ss
mov
sahf
and
sahf
pop
aam
lds
testb
outsl
nop
pop
jno
mov
jbe
cltd
push
dec
fildll
or
xor
out
mov
pop
in
or
push
sub
cmpsl
in
in
sub
sub
sbb
push
sub
mov
inc
inc
mov
dec
mov
jae
popf
dec
test
ret
sub
ret
xchg
mov
scas
mov
cmc
pop
cmpsl
fmull
adc
fisubs
and
aaa
popa
sbb
int
std
xlat
mov
cmpsl
fwait
in
mov
pusha
in
aaa
adc
jne
loop
and
dec
pop
sub
jle
out
insb
pop
movsl
adc
das
mov
sbb
bnd
ja
fisttpll
jle
pushf
mov
jae
sub
mov
push
cmp
cmp
imul
sti
lods
cmc
xchg
xor
jo
mov
mov
icebp
fistps
into
ret
nop
pop
mov
or
and
mov
add
mov
data16
mov
fucom
mov
shll
cmp
adc
iret
push
out
das
sbb
fwait
je,pt
icebp
lcall
jae
mov
fsqrt
ffreep
mov
dec
add
or
hlt
push
cwtl
cmpsl
mov
inc
xchg
cmpsb
movsb
nop
add
clc
stos
js
jne,pn
out
rcrl
fcomp
inc
hlt
int3
and
and
sti
xor
incb
sbb
mov
lahf
test
mull
std
or
imul
mov
xchg
outsb
add
xchg
push
into
int
aaa
sub
xchg
js
cmc
cmp
pop
mov
enter
iret
jp
jl
push
mov
mov
inc
scas
clc
sub
sub
pop
mov
push
out
xchg
imul
cmp
inc
cld
adc
shll
in
or
stos
nop
mov
mov
enter
popf
test
hlt
fistl
mov
dec
ss
fiadds
inc
fsubs
or
rcr
dec
cmp
xchg
inc
pop
daa
cmp
push
sub
arpl
subb
jae
adc
push
aaa
outsb
or
mov
or
push
in
pop
idivb
cmp
push
icebp
and
jl
mov
xorb
inc
mov
daa
test
ljmp
inc
icebp
adc
sub
and
pop
adc
cmpsb
imul
push
lahf
pop
jg
jnp
das
fcoml
xchg
cld
ljmp
or
sub
mov
add
and
js
add
or
or
pop
xchg
xchg
mov
push
xlat
xlat
xchg
mov
mov
mov
fisttpl
loop
inc
dec
xchg
lods
ret
ss
dec
xor
sti
push
pop
and
mov
xlat
xrstors
push
dec
mov
jo
cmp
je
xchg
xorb
mov
jb
inc
nop
test
mov
and
stos
jge
fs
lods
adcl
and
jp
fildll
jno
test
aas
xchg
in
mov
jnp
mov
in
das
xor
and
subl
loop
cmp
roll
mov
fs
and
sahf
push
mov
mov
pop
mov
out
test
push
sub
mov
lcall
mov
insb
out
sbb
dec
stos
push
sbb
push
xor
je
jb
inc
push
push
mov
sbb
das
mov
aad
inc
mov
in
test
and
sbbl
cwtl
mov
sbb
sbb
and
pop
subb
stos
je
leave
or
pop
inc
shr
sbb
or
lods
lcall
outsl
jb
ret
andb
push
sub
mov
rorl
cmp
mov
mov
mov
fisttpll
mov
inc
mov
dec
lret
mov
je
sbb
mov
jo
cmp
or
jne
and
ds
gs
inc
insl
ret
aas
sbb
fdivs
adc
push
mov
iret
ds
ljmp
mov
jmp
sub
stos
movsl
lock
inc
stos
rorb
cmc
das
popa
out
ss
jecxz
mov
mov
divl
xlat
xchg
add
mov
enter
jae
insl
jmp
push
enter
roll
pop
and
cs
dec
dec
dec
out
xorb
insb
adc
pop
mov
push
loop
mov
fistl
mov
xchg
or
adc
push
xchg
jae
js
and
dec
jecxz
pop
nop
or
push
out
add
aam
out
es
dec
cmp
cmp
sub
add
cmc
xor
mov
push
ret
mov
das
dec
je
adc
cltd
out
add
mov
fnstenv
cs
sub
or
fimuls
daa
cvtpi2ps
cmp
sarb
lcall
jno
fisttpll
sbb
cmc
push
fs
push
idivb
jl
push
jp
mov
shl
xlat
shll
scas
mulb
outsl
or
ja
mov
popa
out
jbe
ja
repz
lods
ret
push
adc
repnz
xor
insb
test
and
imul
pop
jg
fisubl
mov
or
jae
push
xchg
add
sbb
sti
adc
iret
je
pop
sub
add
mov
call
in
pop
testl
clc
subb
cwtl
repz
adc
xchg
and
imull
xchg
push
adc
mov
mov
repnz
xchg
roll
mov
fmul
mov
in
inc
outsl
js
mov
rcll
int3
sbb
int3
lds
push
cmp
lret
pop
adcb
scas
fwait
push
pop
push
xor
sbb
fldlg2
dec
stos
sbb
dec
mov
test
out
cwtl
pop
jne
dec
adc
mov
jne
shlb
inc
cltd
adc
pop
movb
xor
daa
lahf
push
ret
mov
mov
or
jnp
movsb
adc
int
inc
or
inc
mov
pusha
inc
sahf
das
jbe
scas
incb
mov
test
rcl
cmp
and
out
dec
xlat
or
xchg
sbbb
push
xor
sub
cmpb
inc
pushf
bound
mov
icebp
ljmp
cs
int
jge
sahf
test
inc
stos
and
ret
mov
sub
adc
icebp
mov
cmp
das
inc
inc
and
imulb
mov
out
xor
daa
xchg
jmp
lcall
sub
ja
adc
cmpsb
fld
sub
fnstenv
arpl
adc
mov
mov
jmp
or
and
adc
in
dec
inc
push
pop
inc
outsl
das
sbb
fwait
cmpb
push
push
imul
lcall
mov
mov
push
jg
add
push
sub
push
mov
sub
lret
push
push
and
xchg
outsl
fs
outsl
aaa
addr16
scas
xchg
hlt
push
sub
aam
loopne
cwtl
jge
cmp
inc
add
pop
sub
cmp
rorb
jo
push
fistpll
fldt
add
cli
in
mov
and
xchg
or
cmp
xchg
and
das
mov
xchg
pop
xchg
push
je
insb
fwait
pop
adc
push
rorb
lret
repz
sub
jnp
pop
push
std
aam
or
adc
lahf
lahf
mov
ss
mov
filds
jp
roll
add
xchg
fs
out
xlat
sbb
clc
add
enter
repz
js
push
fcomip
aam
mov
jecxz
gs
lods
fidivrs
cwtl
mov
cmpsl
cwtl
fs
push
dec
in
pop
aas
lock
scas
clc
std
dec
addl
popa
cmp
fidivrl
mov
push
fst
lods
cmp
sbb
inc
push
dec
lea
icebp
stc
dec
stc
mov
mov
push
xchg
lods
dec
adc
loop
sub
insl
inc
movl
mov
lcall
jne
das
jbe
push
dec
xchg
push
call
scas
adc
mov
mov
mov
push
popa
mov
mov
in
add
push
insb
arpl
add
ret
xor
mov
addl
mov
int
adc
mov
inc
out
faddl
adc
mov
addl
push
lret
pop
dec
mov
inc
jns
roll
out
push
and
lock
test
pop
adc
cmc
loope
fisubrl
xchg
out
add
mov
in
or
js
fs
xor
xchg
xor
or
in
jl
jg
xor
or
pop
jg
mov
mov
mov
push
insl
aam
sub
shrl
sbb
or
out
test
xchg
test
jne
bound
and
or
std
cld
mov
cmp
aad
cmovnp
movsl
lock
mov
test
xchg
loope
adc
add
fcoms
mov
mov
cmp
rclb
aad
idivb
inc
push
push
cmp
in
xor
lret
add
iret
mull
ror
in
mov
dec
cli
loopne
fsub
jae
cmp
and
add
mov
xlat
jg
ja
pusha
test
shrl
stc
jnp
sub
xor
push
lods
pushf
push
mov
fmull
jae
xor
test
lds
fimuls
sbbb
xchg
mov
into
fsts
addr16
jp
mov
lret
gs
xor
mov
scas
mov
icebp
andl
adc
stos
dec
insl
add
xchg
jae
dec
incl
std
jp
and
cmp
dec
bound
mov
in
inc
adc
push
test
das
push
jnp
cmpsl
in
jp
imulb
xchg
and
mov
dec
lret
in
jb
mov
aaa
stc
mov
cmp
fdivrp
pop
mov
shrb
outsb
push
pop
test
cmc
dec
lahf
jp
out
notb
call
lcall
sbb
repnz
mov
stc
mov
pusha
mov
lods
jbe
push
es
stc
inc
push
mov
or
out
aam
inc
arpl
outsb
ds
js
xchg
push
outsb
jno
mov
int3
iret
xor
stos
call
mov
bnd
and
dec
cwtl
int3
sub
pop
rcll
rorb
xchg
jge
xchg
js
repz
mov
imul
pop
jle
in
scas
insl
mov
push
mov
add
scas
dec
cmpsb
lcall
mov
popa
cmp
adc
subl
cmp
movsl
jp
and
jmp
pusha
stos
ja
in
enter
and
push
mov
xchg
pop
add
and
push
sbb
xor
adc
int
mov
or
idiv
insl
jno
cli
sbb
push
pop
xor
add
jb
sub
mov
fdivrs
lea
mov
movsl
sub
cmpsl
lods
dec
in
pop
jo
out
test
ret
push
xchg
std
cmp
pop
push
mov
cmp
push
mov
push
mov
je
in
jle
subl
pop
xchg
jo
addl
mov
insl
xchg
jne
ficomps
sarb
movsb
movsb
sti
pop
rcrl
dec
test
leave
loope
adc
xchg
push
or
outsl
imul
mov
inc
cwtl
scas
xchg
orl
in
enter
push
and
into
xchg
cmp
insl
dec
into
sarl
dec
xor
adc
test
push
mov
sub
push
in
jns
inc
pop
sti
fadds
in
cmc
add
jo
jle
incl
int
push
or
sbb
ss
rcll
aas
push
cmp
or
test
adc
inc
sbb
call
mov
pop
mov
and
fwait
mov
sarb
sbb
mov
lcall
fbld
push
and
pushf
jns
mov
ds
and
test
or
bound
js
cmpsb
lock
xchg
icebp
add
inc
pop
cli
sub
xchg
xor
cmpb
popf
xor
shll
add
xchg
movsl
fldenv
outsb
out
addr16
jno
dec
sub
lahf
cld
sub
lods
mov
mov
xchg
unpcklps
add
sub
and
inc
dec
sbb
lods
and
add
mov
adc
mov
push
push
pop
pusha
mov
adc
aas
icebp
ja
inc
xor
pushf
cmpsl
popf
mov
mov
fwait
pop
dec
xchg
push
ja
mov
sahf
sub
push
dec
inc
or
push
rcrl
movsb
xlat
or
dec
cltd
inc
imul
mov
or
shr
add
inc
push
dec
pop
cmpsb
loop
xor
push
shr
hlt
out
fsts
and
xchg
pop
loopne
pop
mov
movsl
pop
sub
and
loop
pop
out
or
rcll
or
mov
shll
dec
je
inc
scas
mov
punpcklwd
xchg
push
fs
dec
test
sub
jb
jle
mov
dec
push
outsb
icebp
xchg
mov
inc
ret
sbb
pop
testl
rclb
lods
cli
mov
pop
into
and
daa
add
fincstp
insb
sub
dec
push
adc
pop
xlat
xchg
mov
lcall
dec
xlat
lds
int3
lods
add
pushf
lret
inc
xor
jb
mov
dec
sbb
sub
lea
out
mov
mov
mov
leave
pusha
shl
aam
loopne
adc
dec
mov
adc
scas
add
fisttps
cld
cmp
stos
scas
mov
mov
stos
inc
sbb
mov
push
les
mov
sbb
xor
icebp
das
cmc
inc
aas
fwait
xchg
fwait
adc
add
xor
pop
scas
pop
mov
cmp
xchg
fwait
sub
test
push
xchg
lods
jno
mov
popa
sbb
adc
cmp
sahf
sub
sbb
pxor
sub
jns
cmp
loopne
mov
and
pop
aas
mov
mov
and
push
push
or
inc
mov
pop
adc
adc
incl
push
dec
mov
add
push
pop
iret
in
cmp
or
aas
add
add
cs
cltd
pop
fstpt
pop
aas
jmp
xchg
sbb
pusha
pop
mov
clc
in
pop
mov
push
lret
ficoml
orb
mov
test
adc
or
mov
xchg
jo
ss
pop
pop
cltd
pop
or
mov
lds
arpl
sbb
push
dec
orb
loop
inc
push
or
je
dec
mov
stos
leave
repz
lds
jp
out
hlt
loopne
jns
cmp
sub
mov
rcll
mov
mov
pop
pusha
jb
mov
cltd
pop
ss
cmpsb
push
shll
int3
clc
jns
push
cwtl
lret
cs
sub
or
enter
xlat
jo
data16
add
or
arpl
cmp
inc
cld
sti
notl
add
push
and
or
or
push
mov
out
inc
mov
gs
dec
shll
xchg
imul
adc
mov
sbb
leave
xchg
inc
sahf
sub
inc
mov
aad
sub
jbe
cmp
cmc
pop
mov
push
stos
lds
cmpsl
xchg
cmpsb
xlat
test
xchg
cmc
add
sti
clc
push
mov
cmc
mov
push
loopne
into
mov
les
and
mov
clc
insb
xor
daa
pop
nop
jp
cli
pop
rcl
mov
addb
push
bound
inc
adc
cmp
sbb
xchg
test
sub
rorl
fcmovne
cwtl
loop
sub
add
xorl
incl
jg
pop
pop
mov
mov
mov
push
orb
push
icebp
pushf
loopne
enter
xor
loopne
adc
int
mov
and
test
rolb
mov
mov
pop
aad
mov
in
fs
push
push
cmpsb
lods
movsb
in
imul
mov
add
lcall
mov
out
mov
decl
inc
jmp
mov
out
int
clc
jns
push
cmp
je
int
xchg
insl
sbbb
push
mov
mov
repz
add
sarl
inc
cmc
out
addr16
cmp
push
adc
loop
fwait
sbb
or
pop
dec
or
sub
jp
cmpsb
mov
xor
push
cld
jno
out
jbe
pop
adc
and
gs
pop
sub
sahf
cmp
xchg
int3
pop
fcoml
xchg
imul
xor
divb
cwtl
jmp
and
cmp
xchg
pop
jp
xchg
sbb
js
ror
and
sar
xchg
sub
sub
dec
fmuls
cmp
dec
imul
aaa
lcall
aam
push
test
adc
adc
mov
xchg
lret
xor
mov
xor
daa
push
call
lret
aaa
pop
mov
mov
sar
mov
test
dec
push
or
lcall
fnstenv
mov
mov
movsb
add
shll
sarb
xchg
mov
bound
mov
nop
inc
jno
sbb
daa
les
sbb
xchg
add
roll
mov
divl
inc
nop
les
test
pop
daa
sbb
scas
cwtl
fs
xor
add
sub
jne
and
mov
sbb
rorl
push
dec
cmp
push
jae
sahf
sarl
in
dec
in
cld
daa
hlt
dec
and
and
jno
out
push
sbb
adc
roll
jo
sbb
movsb
mov
gs
xchg
mov
fwait
mov
pusha
adc
js
es
sbb
cmpsb
mov
mov
cmc
aas
data16
mov
push
add
pop
icebp
push
sub
ret
and
insl
push
stos
mov
cmc
xlat
andb
jl
lahf
bound
push
cmp
testl
mov
push
add
sub
xor
pop
jge
pop
inc
stos
and
imull
into
aaa
push
mov
and
enter
lcall
out
adc
int3
js
pop
fdivs
imul
into
je
jg
mov
xor
inc
or
scas
outsb
and
jb
push
mov
sbb
xor
cmp
insb
sti
mov
test
addr16
add
aas
fdivl
sub
add
inc
and
loope
inc
pop
fdivl
iret
bound
gs
cmc
addb
pop
loope
mov
and
pop
out
xor
sbb
mov
or
mov
sahf
out
mov
adc
imul
jg
adc
push
aam
lds
fcmovu
fstl
hlt
sahf
cli
cmp
jae
arpl
fidivrl
in
lret
sbb
or
loop
jnp
mov
jbe
test
mov
xchg
sub
cmpl
js
mov
lea
xor
push
test
in
sub
loop
sub
xor
pop
andb
push
xor
adc
fs
lods
pop
xor
push
cld
test
push
pop
pop
sbb
sbb
dec
outsl
scas
jle
pop
adc
adc
sbb
in
fstpl
push
cld
xor
pop
jne
dec
cmpsb
mov
xor
test
push
popa
dec
jmp
cmpsb
faddl
orb
xchg
lods
dec
inc
fmul
das
std
sahf
stos
popf
cltd
jmp
fsts
adc
notb
stc
sbb
push
cli
in
push
aaa
into
int3
shll
pop
or
leave
and
mov
pusha
mov
push
push
lock
test
ret
fistpll
jl
xor
fnsave
push
jp
clc
mov
fsub
cld
jne
or
jg
loope
rcrl
or
data16
and
sbb
sbb
cmp
imulb
mov
mov
rcrb
lret
sub
jecxz
and
mov
icebp
cmp
pop
and
fstpl
imul
pop
mov
mov
xchg
cmpsb
les
xor
and
xchg
hlt
cmp
hlt
ljmp
je
stos
ja
add
mov
icebp
fsub
push
movsb
mov
push
mov
xchg
push
test
movsb
jns
lcall
in
mov
data16
dec
dec
inc
cld
dec
jno
clc
xchg
xor
enter
lahf
pop
scas
subb
inc
sub
test
dec
and
insl
enter
jne
sub
es
scas
scas
sub
xor
dec
pop
or
lret
mov
cmp
and
ja
jecxz
jbe
data16
stc
in
xchg
add
xchg
push
jo
call
aad
test
hlt
cmp
out
sbb
mov
jb
loope
mov
push
and
enter
mov
adc
scas
mov
imul
fidivrs
rclb
or
jae
lret
js
iret
push
dec
mov
jbe
sbb
fwait
pop
xchg
imul
push
xor
bound
lds
mov
daa
mov
ret
jns
test
sbb
mov
dec
mov
push
lret
arpl
xchg
aas
mov
push
sbb
dec
addr16
sub
lahf
insb
inc
leave
std
dec
in
sbb
scas
cmc
lea
jo
jge
loope
nop
movsl
xchg
fcomps
push
cmp
cmp
jl
push
loope
cmpsl
xor
cmpsl
fisttps
imul
adc
jmp
test
push
jnp
cmp
insl
lahf
push
push
mov
jmp
xor
push
sbb
nop
mov
pop
das
lock
and
icebp
addl
test
sub
shl
incl
outsb
jmp
insb
ret
jne
dec
pusha
adc
fwait
cmp
jno
push
jb
jnp
lea
fstpt
mov
outsb
dec
div
into
pop
and
rdseed
out
cs
xchg
lock
jge
push
sbb
mov
xchg
push
push
cmp
test
mov
cld
dec
sub
nop
xor
xor
push
add
or
cmp
hlt
or
testb
scas
or
loop
jns
call
scas
int
add
sbb
xchg
xchg
lret
xchg
adc
mov
jno
inc
or
repz
scas
bound
int3
loope
imul
add
mov
test
sar
pop
dec
inc
jnp
xchg
add
pop
ds
mov
fiadds
push
and
std
xor
mov
add
cltd
mov
xor
mov
fcoms
imul
cltd
add
push
cmc
ljmp
inc
fwait
icebp
pop
and
lret
hlt
repz
dec
jno
mov
inc
or
jecxz
lcall
cld
pop
jge
jmp
mov
inc
mov
xor
jnp
leave
adc
cmp
pop
adc
xchg
jo
dec
cmc
sbb
mov
jne
jg
pop
insb
loopne
iret
movsl
sbb
add
imul
icebp
aam
gs
xor
add
xchg
xlat
or
pcmpgtw
add
push
fidivl
sub
xor
addr16
pop
mov
movsl
pop
lret
ret
or
inc
push
and
sti
shrb
push
sti
push
cmp
dec
jno
mov
andb
fidivl
pop
mov
cmp
in
cmp
addr16
jecxz
pop
cltd
fisubrs
aam
andl
rcrl
repnz
popa
rorl
addb
xchg
mov
je
xchg
mov
mov
xchg
ja
ror
stos
mov
int
jl
adc
xchg
into
cmpsb
aas
cmpsl
stos
imul
data16
dec
fmul
push
xor
xchg
scas
xor
inc
orl
dec
or
cmp
dec
adc
js
push
mov
add
mov
loop
mov
xor
shlb
mov
mov
and
in
mov
ljmp
xor
adcl
fsubrs
cmpsl
test
pop
pop
scas
into
in
xchg
inc
xchg
adc
sub
jp
out
cmp
std
in
mov
adc
or
fiaddl
dec
jecxz
mov
adc
mov
sbb
nop
mov
test
lahf
mov
sbb
or
xchg
push
out
cmp
scas
xchg
jle
mov
repnz
xlat
push
sahf
push
cs
mov
int3
in
cli
dec
xchg
push
in
dec
and
sbb
rorl
and
pop
xlat
std
out
sbb
cmp
int
jnp
cmp
cmp
es
mov
addl
mov
adc
sbb
sbb
xchg
mov
xor
shlb
xorb
adc
xchg
jo
cmp
push
shrl
sbb
xchg
mov
stos
iret
dec
in
jmp
je
aaa
in
xorb
insl
inc
pop
int3
sbb
mov
xchg
jmp
divb
call
andb
mov
sahf
inc
loop
jnp
test
cli
cmpsb
xchg
js
andl
and
pop
push
xchg
mov
pushl
sahf
popa
ljmp
jmp
jmp
popf
or
adc
xchg
add
in
mov
mov
mov
in
cmp
add
pop
add
add
jp
adc
iret
mov
arpl
enter
ret
sarl
lahf
dec
adc
pop
pop
pop
icebp
mov
shll
cmp
mov
cmp
hlt
stos
cwtl
adc
push
and
sbb
cld
clc
jbe
lret
lret
inc
pop
push
das
add
shlb
in
ja
push
fistpl
ds
ret
xchg
jl
sti
sub
push
popf
ficomps
test
subl
and
aas
pusha
xchg
pop
ja
jg
push
jecxz
xchg
shlb
mov
popa
popa
jle
push
dec
test
in
fs
xchg
inc
stc
faddl
mov
inc
pop
icebp
adc
mov
idivb
in
dec
xorl
cmp
stc
jecxz
mov
orl
pop
nop
sbb
leave
cmpsb
jge
outsl
cmp
ss
popa
scas
ss
cmpb
cmp
mov
mov
cmp
movsl
loop
inc
and
and
repz
fsubrp
fildl
mov
jae
lock
ja
mov
dec
inc
cld
pop
xor
sahf
dec
inc
aaa
xlat
pop
mov
sti
add
aam
sub
mov
cmp
cs
push
jge
int
jnp
cmpps
out
rclb
mov
cmpsb
jns
inc
pop
mov
movsl
subl
jb
fidivrs
cmpsb
in
ret
bound
and
fsubl
repnz
adc
repz
in
xor
jo
in
js
mov
adc
jo
cmpsb
cld
lock
fs
jecxz
imul
aas
pop
aam
mov
xchg
sbb
pop
loope
std
mov
pop
sub
xchg
sbb
outsb
jne
push
xor
imul
mov
test
outsl
insb
pop
mov
mov
loopne
pop
lea
test
xchg
push
cltd
sbb
adc
cmpsb
ds
adc
jmp
cmp
cli
jnp
xor
sbbl
jp
cmpsb
jl
test
ret
jae
into
mov
test
pop
popf
mov
jecxz
push
fistps
mov
and
and
cmp
fdivr
sub
adc
cwtl
pop
aad
push
or
cmp
sub
movsl
mov
insb
mov
testl
inc
or
es
insb
pop
mov
push
push
out
inc
dec
adc
shlb
cli
add
loopne
xlat
sbb
ljmp
mul
cmp
or
lods
fdivrs
pop
dec
int3
test
mov
sbb
cmpsb
outsb
out
scas
outsb
xchg
sbb
sarb
inc
repz
push
xor
mov
jns
je
lcall
mov
xor
es
jns
push
or
lret
add
jp
aaa
xorb
xchg
pop
cmc
cmpsl
fidivrl
lods
lods
xchg
jnp
insb
add
je
dec
in
aaa
xchg
sbb
subb
jp
pop
jmp
mov
mov
mov
ds
xorl
lcall
push
xor
and
xor
lds
xchg
sub
fcomp
inc
mov
aas
dec
ss
or
pop
cmp
xchg
push
mov
out
and
loopne
popa
mov
rorl
scas
inc
jbe
pop
jmp
pop
loopne
mov
sbb
fs
jnp
jl
xor
dec
test
movsl
out
loope
imulb
xchg
sbb
fs
jg
sub
inc
orb
mov
sbb
jne
cmp
xchg
add
lock
push
pop
hlt
xor
mov
mov
repz
push
ja
pop
in
pop
mov
leave
mov
bound
xchg
testb
xor
fwait
stos
ret
lock
pop
xchg
iret
addr16
int
or
or
sbb
add
or
add
xor
mov
xchg
js
dec
dec
sahf
outsl
push
jle
adc
mov
mov
xchg
cwtl
xor
add
cmc
and
sti
test
repnz
mov
mov
jae
dec
mov
insl
subl
insl
push
xchg
iret
in
sbb
mov
lds
fildl
popa
pop
pusha
push
add
add
xchg
lret
std
adc
or
pusha
xchg
movsl
sub
addl
sub
cmp
fwait
arpl
aam
dec
loopne
daa
or
lret
xor
rorb
lret
adc
jg
lods
add
call
ja
fiadds
sbb
mov
push
xchg
push
pop
aas
jo
int3
push
idiv
scas
pop
jecxz
sub
push
cmp
stos
out
dec
neg
in
cmp
out
lock
repz
push
clc
mov
cmc
inc
push
pushf
repnz
mov
xchg
clc
loop
pop
inc
pop
mov
cmp
loope
xor
pop
pop
cli
cmp
es
shl
cmp
cmp
cmp
ret
cltd
ds
int3
sub
imul
imul
lds
xlat
cmp
gs
adc
in
out
jle
mov
shr
xchg
jnp
stos
mov
push
lods
fucompp
ja
iret
lock
jmp
push
inc
sub
xchg
sbb
jb
lock
movb
mov
jl
dec
int
push
xchg
sbb
mov
in
stc
jbe
and
in
xlat
arpl
fdivrp
test
adc
push
out
cld
jecxz
mov
cmpl
lret
scas
push
jle
mov
pop
pushl
adc
in
rcrb
stos
test
xchg
shll
icebp
insl
sub
std
popf
and
ret
in
inc
and
mov
xor
push
cmp
ret
mov
sti
jb
mov
iret
ss
cli
out
push
inc
mov
mov
lahf
stos
shrl
inc
cmp
call
loop
sub
sbb
imul
testl
mov
jmp
dec
jo
aad
and
push
adc
or
push
loopne
mov
adc
cmc
pop
pop
outsl
or
iret
out
inc
push
push
sub
outsb
cmp
or
pop
in
pusha
int3
jbe
in
rol
mov
ds
int3
adc
nopl
push
xor
testb
fisttpl
adc
pop
jno
or
out
mov
in
pop
xchg
cli
clc
or
mov
cmp
cltd
inc
test
and
minps
sbb
pop
pop
mov
leave
jb
test
mov
jo
ret
loopne
add
mov
fs
pop
pushf
sub
and
into
mov
or
shl
and
pop
movsb
mov
popa
jns
or
mov
mov
xor
loope
dec
cld
inc
int
cli
movb
daa
lret
aam
push
lcall
xor
xor
mov
push
or
pop
cmp
mov
pop
sub
adc
inc
xor
iret
lods
loopne
add
add
lret
adc
nop
mov
sahf
sarl
sahf
rolb
insb
fs
outsb
xor
stos
push
sbbl
add
sub
xor
mov
stos
out
fisubl
aas
daa
lcall
push
xlat
imul
sub
mov
test
bound
pop
roll
push
jbe
sbb
inc
aam
lret
mov
shll
shrl
inc
in
test
mov
xchg
adc
cltd
xchg
clc
cmp
cmpsl
xor
sbb
push
push
adc
mov
shll
stos
dec
data16
cltd
std
add
adcb
jae
xor
and
fcompl
jge
mov
sti
sub
pop
icebp
and
gs
xor
out
lahf
subb
jns
pop
das
movsl
dec
xchg
or
mov
adc
sahf
in
xor
dec
ret
lahf
mov
and
pop
shrl
mov
cmp
je
ret
jbe
or
rorb
dec
xchg
int
adc
mov
add
pop
in
mov
fcmove
outsl
movsb
nop
aas
push
mov
pop
xor
adcb
push
lahf
mov
push
sbb
cmpsl
pop
arpl
lahf
adc
jo
shrb
fwait
cltd
cli
mov
arpl
stos
and
fidivl
sbb
rorl
or
dec
dec
jne
push
xchg
xor
lcall
mull
mov
dec
ret
int
ljmp
and
xor
add
adc
lds
inc
jg
shll
add
pop
ljmp
mov
testl
sub
cltd
mov
xor
mov
push
cmp
ja
mov
cmpsb
test
jns
pop
and
popf
js
sti
mov
mov
cmp
adc
push
cmpsl
push
ss
sbb
insb
or
inc
andl
call
push
push
stos
push
mulb
lahf
xchg
sub
xchg
aam
jno
mov
test
inc
outsl
js
adc
insl
sti
test
adc
mov
inc
int
mov
add
add
call
sub
mov
stos
or
jle
lahf
cmpb
inc
mov
push
rcl
fwait
daa
adc
std
mov
sbb
daa
sub
xchg
pop
cmp
mov
and
scas
scas
or
std
shl
loop
jge
in
or
shrl
xchg
sbb
popf
pop
inc
add
rolb
mov
adc
pop
dec
lea
cmpsb
rclb
sub
fwait
out
cmp
xchg
stc
fisttpll
xchg
mov
mov
or
mov
sbb
bound
mov
cmpsl
dec
movsb
xchg
mov
mov
inc
mov
push
cmp
dec
aad
inc
add
sbb
cmp
std
cmp
lcall
add
std
inc
push
fsts
jno
add
je
jg
stc
test
push
arpl
mov
fs
mov
jecxz
sbb
mov
fs
lret
push
outsl
fnsave
daa
mov
mov
scas
ds
sbbb
das
shlb
cld
inc
push
js
outsl
sbb
lods
sub
xor
ficompl
add
out
jne
call
dec
les
cmc
xchg
scas
add
orl
scas
jmp
lods
mov
xchg
in
xchg
ret
cli
xchg
mov
pop
sub
jae
rcrl
adc
inc
fistpll
cmp
jge
test
adc
shr
test
sub
or
bound
xchg
insl
pop
cmpl
add
pushf
in
test
mov
mov
pop
push
or
mov
ljmp
jo
ja
push
jl
and
add
add
leave
popa
sub
leave
sbb
xchg
pop
int
jecxz
aaa
inc
jae
mov
lods
cmp
pop
jne
imul
mov
add
and
es
icebp
repz
jns
cmp
stos
pop
and
out
bound
into
push
int
test
mov
jge
cmpsl
adc
sub
stos
sub
sbb
jno
push
icebp
subb
fsubrs
sbb
or
sub
mov
dec
xchg
xor
xchg
inc
sarl
ret
add
movsl
lods
cmpsb
add
mov
loopne
out
in
fsubs
push
push
scas
lret
add
and
fwait
test
daa
inc
test
mov
xchg
or
arpl
mov
test
imul
icebp
mov
rcr
sbb
cld
and
cmp
rol
inc
add
enter
popa
in
mov
jmp
adc
stos
jmp
insb
popa
mov
and
lods
sti
in
xchg
gs
in
inc
shrb
lcall
sbb
mov
jbe
jecxz
rorl
jne
add
bound
gs
sti
addr16
sub
mov
adc
test
jge
jno
pop
jb
cwtl
xor
in
pop
ret
test
xor
push
lods
fstl
dec
cmpsl
mull
rclb
adc
outsb
jno
repz
xchg
jmp
test
jg
fcmovnbe
or
push
fs
xlat
xor
and
mov
testl
mov
jmp
xchg
and
xor
arpl
and
inc
dec
cltd
xchg
gs
test
fisttpll
mov
push
push
out
cmpsl
or
lret
push
mov
xchg
adc
or
mov
sbb
ljmp
jo
mov
rclb
add
dec
loop
inc
jo
jne
fs
add
jo
cmovg
stc
push
lret
mov
cwtl
inc
insb
pop
or
daa
dec
cmp
or
cwtl
sub
into
stos
out
sbb
mov
enter
fstpl
and
ret
mov
ret
data16
fnsave
aad
and
dec
scas
sub
or
jecxz
xchg
test
pusha
cmpsb
mov
scas
push
adc
mov
mov
jmp
imul
mov
inc
xor
lods
xor
and
push
into
sahf
lods
inc
aaa
xchg
mov
orb
adc
in
mov
stos
daa
in
vmovups
sub
subb
mov
out
xchg
push
sbb
scas
xor
outsb
jle
call
mov
inc
clc
mov
test
sub
mov
int
add
aam
sbb
cmc
pop
add
or
jne
xor
iret
ret
sbb
cmc
push
mov
mov
jnp
and
daa
test
out
lahf
mov
pop
pop
lcall
stos
icebp
mov
mov
sbb
mov
int3
testl
imul
mov
adc
sub
int
pop
sbb
stc
insl
clc
sbbl
in
jmp
sbb
jo,pt
xor
add
iret
mov
loope
and
push
xchg
mov
test
add
lret
js
pop
jne
sbb
add
jecxz
mov
movsl
daa
mov
movsb
push
or
stc
mov
fsubs
push
sbb
mov
mov
jae
sub
dec
not
fwait
fwait
add
mov
cmpl
mov
addl
ss
dec
lahf
jmp
inc
pop
popa
jmp
fadds
shrb
or
fadd
int
jbe
pop
fs
xchg
pusha
iret
test
sbb
cli
popa
adc
lds
inc
push
mov
iret
or
das
xorb
pop
xlat
cmp
gs
subl
adc
gs
add
daa
fcmovbe
jecxz
and
jae
hlt
inc
pop
jp
mov
aaa
or
xor
adc
nop
pop
adc
insl
dec
loop
leave
and
inc
dec
xchg
mov
movsl
call
jne
mov
rcl
out
fmull
jb
shll
add
add
loop
inc
out
roll
mov
mov
inc
sbb
fnsave
add
cmp
sbb
pop
movsb
addr16
ffreep
cltd
sub
inc
xlat
jp
jg
cltd
pusha
xlat
sbb
cmp
mul
outsb
bound
aaa
test
mov
divl
movsl
in
int3
xor
and
add
push
int3
mov
scas
dec
les
pop
test
lock
and
popa
adc
mov
mov
in
mov
adc
in
mov
sbb
mov
inc
jge
and
testl
int
mov
jo
out
sub
mov
push
fistps
imul
xchg
add
popf
shrb
clc
cli
pop
out
sbb
popf
jns
cmpsl
loope
stc
mov
pop
mov
inc
jae
xchg
movsl
adc
inc
adc
xor
cmp
mov
lds
mov
stc
add
add
pop
jb
sbb
inc
stos
not
imull
in
dec
or
dec
xor
xchg
loope
outsl
pushf
jecxz
mov
and
idiv
push
push
jne
mov
xchg
in
aam
movsl
dec
out
scas
iret
cmpsb
mov
lods
dec
pop
mov
adc
in
cs
fimuls
add
js
nop
ficompl
cltd
aaa
loopne
sbb
pop
xchg
cmp
or
jnp
push
mov
xchg
testl
xor
jne
xlat
or
cli
jo
xor
jnp
and
fistpll
mov
data16
pusha
addr16
xchg
lea
lea
mov
movsl
ret
fldenv
mov
pop
loope
roll
jno
pop
pop
loope
xor
out
xor
push
lahf
aam
add
mov
and
mov
js
imul
sub
mov
loope
inc
in
sbb
popf
xchg
imul
and
pusha
sbb
jns
pop
int3
rorl
push
in
pop
or
pop
xchg
pop
loop
jae
repnz
jb
fs
xchg
xchg
repnz
js
and
xchg
sub
dec
adc
adc
ret
mov
mov
aas
dec
xchg
and
or
insl
pop
ret
pop
jo
jno
adc
cs
xorb
sbb
dec
xor
fdivrl
jp
mov
es
call
dec
insl
lcall
mov
pusha
push
mov
out
cmp
xchg
adc
fwait
mov
inc
lret
dec
mov
int3
jge
cmpsl
dec
mov
cmpsb
push
imul
in
ficoml
pusha
dec
mov
stc
rorl
push
cmp
mov
push
jg
fldenv
in
add
or
fcmovnbe
aam
pusha
push
jbe
movsb
lcall
lods
cld
xchg
ljmp
dec
pop
clc
imul
pop
ja
mov
imul
push
lods
inc
fistps
mov
push
into
pop
orl
imul
in
into
xchg
pop
mov
mov
in
lea
je
pop
clc
mov
mov
pop
sbb
in
push
xlat
jb
dec
jge
hlt
sub
fldl
aaa
xchg
push
mov
lcall
mov
push
call
icebp
jbe
add
mov
movsb
inc
jecxz
adc
sub
push
adc
jmp
sub
push
jnp
xchg
push
sbb
jge
jnp
sarl
cs
pop
mov
adc
sbb
dec
jbe
inc
bound
mov
xchg
sub
push
or
xchg
sbb
inc
sbb
popa
or
add
and
lods
je
movsl
mov
dec
or
mov
jne
jecxz
clc
jo
push
mov
pop
mov
incl
mov
stc
nop
jnp
lods
fs
out
cwtl
jne
sub
popa
mov
dec
sbb
jg
pop
and
xchg
ds
imul
add
push
jl
sbb
sub
pushf
mov
add
or
jg
mov
mov
dec
inc
adc
insb
lret
mov
sarl
fld
mov
pop
xlat
adc
and
push
cld
mov
out
xchg
and
movsb
cmp
inc
push
xor
ljmp
sbb
cmp
test
pusha
arpl
dec
inc
jmp
fs
aas
test
int
pop
pop
int
sub
and
inc
sbbl
call
pop
fcmove
sub
jae
inc
sbb
sub
pop
mov
add
cmpsb
hlt
andl
ficoml
test
sbb
push
rclb
inc
inc
xchg
fistpll
xor
sbb
cld
sub
clc
dec
inc
and
mov
mov
mov
aas
outsb
xor
aas
push
xchg
je
int
hlt
push
lcall
dec
mov
cltd
push
out
pop
cmp
aas
ds
addb
xchg
out
push
and
cli
xchg
inc
rclb
dec
cmp
pop
xchg
pop
subb
cmpsb
out
and
lods
mov
or
mov
addr16
outsl
push
in
scas
jno
pop
sub
je
mov
daa
add
dec
pop
xchg
inc
ljmpw
mov
out
divps
aas
cmc
add
jl
stos
in
dec
sbb
sbb
lods
sbb
pop
mov
pop
cmp
lods
push
cmpb
jle
fdivs
in
xchg
and
sbb
ret
jecxz
cmp
movsl
fimuls
popf
jo
push
push
jae
clc
jl
outsl
add
aas
std
pushf
xor
and
cld
push
xchg
testb
dec
push
stos
aam
sbb
popa
adc
xor
push
xchg
or
ret
xchg
jmp
xchg
enter
imul
movsl
rorb
mov
enter
lock
pop
andl
jnp
or
divl
mov
and
imul
cmc
jecxz
pop
stc
sahf
mov
scas
fld
adc
push
sub
jae
xchg
lods
cwtl
lcall
stc
push
popa
outsb
sub
shrl
aad
mov
scas
xchg
mov
and
loop
xor
mov
je
sub
ljmp
lods
inc
sub
xorl
test
insl
adcl
popa
xchg
popf
pushf
scas
xchg
push
cmp
sub
ret
aaa
or
push
xchg
stc
repz
in
and
add
ljmp
scas
sub
int
mov
out
aam
mov
push
jp
add
lods
out
jb
rorb
cltd
sub
xchg
fists
icebp
mov
cmp
sti
lods
xchg
mov
sub
das
inc
jle
pop
or
sub
and
in
xor
std
pop
out
push
pushf
pop
mov
sbb
ret
test
jl
test
dec
ljmp
sbb
inc
mov
inc
mov
or
push
or
add
sub
pop
xor
mov
lea
dec
xlat
xchg
adc
and
lcall
push
lds
mov
cwtl
stos
dec
xor
cmp
cmp
testl
xchg
cmp
mov
mov
mov
andb
movsb
ljmp
push
push
int3
out
dec
and
jl
cmp
fimuls
flds
or
pop
jno
push
popfw
ret
add
mov
ljmp
add
push
mov
iret
inc
mov
outsb
aad
loope
and
pop
sbb
xchg
xor
inc
or
push
add
lcall
fwait
leave
jo
dec
jle
cmp
pop
dec
and
sub
mov
movsb
roll
fdivr
icebp
cmp
jg
hlt
out
fidivrs
stos
pop
mov
repz
les
jns
bound
mov
int
mov
and
push
mov
clc
cmc
popf
clc
sub
sub
adc
es
movsb
rolb
iret
mov
leave
je
insb
mov
mov
adc
jp
insb
jb
mov
mov
push
je
inc
push
mov
fldl
jp
mov
jnp
sarl
imul
or
dec
and
jb
inc
mov
pop
jecxz
cmpsl
lds
jg
out
dec
push
mov
stos
cmp
xor
push
add
dec
push
and
movsl
mov
in
or
adc
imul
gs
push
adc
stos
pop
dec
lds
pusha
jle
roll
mov
ljmp
and
inc
jbe
popf
jmp
cmp
xchg
dec
repnz
loope
lcall
inc
repnz
in
leave
jmp
jg
lret
div
hlt
loope
adc
test
lods
add
xor
jmp
mov
fdiv
or
add
adc
lods
pop
inc
sub
push
cmpsl
test
push
ds
add
inc
sub
inc
sbb
in
outsb
xchg
es
push
mov
add
fcoms
pop
push
xchg
lahf
pushf
xor
mov
add
out
sbb
out
or
xchg
inc
dec
sub
outsb
and
jne,pt
cmp
cmpl
roll
rcrl
js
fldcw
out
stos
push
xlat
pop
loope
push
hlt
sahf
sub
add
xchg
std
and
push
cmc
in
bound
cmp
pusha
mov
aaa
pop
clc
imull
sbb
xlat
leave
xchg
ficompl
xchg
dec
push
or
dec
divb
daa
dec
cwtl
lahf
nop
insl
mov
cmpsb
pop
int3
fwait
sbb
sahf
sti
mov
data16
mov
adc
dec
daa
add
lods
inc
nop
cmp
aad
sbb
shrl
insb
ret
mov
cwtl
mov
adc
lds
daa
cmp
fwait
js
je
std
mov
gs
lds
popl
rorl
push
sbb
mov
mov
repz
add
push
outsb
mov
add
xchg
rcll
jg
fwait
lcall
movsl
movsl
invd
lods
fs
lret
stos
cmpsl
sarb
rol
pop
cmpsb
mov
rcll
pop
cmp
fbld
nop
jno
push
add
sbb
lret
out
inc
outsl
xor
outsb
add
jp
lea
lcall
fdivrl
rclb
aaa
pop
mov
test
mov
pop
fidivrl
mov
in
cmpsb
mov
push
inc
jp
and
adc
push
xor
leave
mov
cmc
cmpsb
cmp
push
sub
in
into
rcrl
popf
sub
jp
xlat
mov
and
hlt
imul
xchg
sbb
jo
jmp
ds
lods
lds
lods
mov
and
cld
cmpsl
pushf
mov
dec
lea
movsl
or
stos
mov
adc
pop
push
shld
outsb
andl
es
jbe
lret
jo
dec
push
test
int
adc
inc
and
xor
lods
inc
mov
jno
enter
and
dec
push
out
xor
adc
sub
int
mov
icebp
movsb
pushl
push
pop
cltd
shlb
mov
push
pusha
dec
dec
hlt
and
lock
cmp
cld
cwtl
xor
inc
pop
mov
sub
mov
addb
jp
sub
xor
icebp
aas
out
into
call
jb
mov
push
pop
adc
cmpsl
pop
xchg
aaa
and
dec
mov
fs
cmpsl
in
lea
call
sbb
add
sbb
inc
cld
adc
cmp
pop
repnz
xor
insb
pop
movsb
jg
xor
fimuls
or
cmpsb
xlat
fmuls
rclb
sbb
push
cmp
rclb
ret
xchg
inc
push
lret
dec
add
ss
mov
mov
push
cmpsl
jg
int3
mov
js
cmp
mov
sub
mov
lret
pop
and
test
setnp
in
cmp
xchg
jle
rorl
add
inc
rorl
fucomp
out
cmpl
inc
es
pop
jne
outsb
sbb
push
icebp
ja
mov
add
jge
adc
push
xor
sub
inc
fwait
test
push
xor
je
mov
mov
and
outsb
mov
sub
in
repnz
js
inc
fmulp
cmp
mov
sub
or
and
mov
loopne
std
mov
push
xor
add
inc
push
adc
in
jae
or
xor
into
not
rcrl
jns
inc
data16
sbb
push
push
pop
ret
enter
jne
mov
daa
std
fwait
loop
push
stos
ds
fcmovnu
aam
cmp
pop
test
inc
add
xchg
xchg
push
push
pop
test
out
dec
adc
sub
fnstsw
cltd
pop
adc
mov
mov
insl
dec
insb
ret
and
lret
shlb
fldl
push
scas
and
add
test
jmp
jno
dec
jle
cld
pop
ret
lret
push
outsl
add
push
inc
scas
pop
ret
inc
push
and
mov
xchg
in
repnz
cmp
and
push
daa
pop
xchg
dec
jmp
or
addr16
enter
jnp
shll
mov
je
xchg
out
pop
leave
mov
dec
jge
xchg
outsb
cs
call
fs
jecxz
sbb
xchg
int
mov
xchg
sub
mov
mov
xor
cmp
adc
sbb
ja
push
movsl
sahf
mov
or
and
mov
push
push
push
jb
push
mov
cmpsb
jne
adc
mov
insb
or
cmp
xchg
aad
dec
les
dec
mov
loop
or
push
in
lret
lea
out
data16
adc
push
mov
xor
add
dec
aas
adc
fiaddl
mov
mov
aam
adc
and
inc
dec
mov
pop
push
in
ljmp
mov
inc
in
lcall
cmpsb
or
cmp
ds
adc
cltd
js
or
in
jns
jo
pushf
daa
mov
rcrb
hlt
out
adc
lods
daa
aaa
sub
aas
in
sti
or
add
jle
lods
test
xchg
add
mov
ret
aad
add
cltd
out
lods
sub
insl
fimull
lds
and
testl
in
and
shr
scas
mov
cld
jns
je
push
je
xchg
std
inc
in
in
mov
jns
mov
ljmp
mov
addr16
or
jbe
adc
ljmp
adc
gs
jmp
mov
es
mov
jmp
movsl
mov
ss
das
nop
fnstcw
push
out
jae
repnz
cmpsl
stos
in
cltd
ret
fidivs
or
mov
sub
js
daa
pop
jnp
test
aam
cmp
fs
lods
mov
inc
mov
fs
pop
nop
cmp
js
popa
mov
shll
dec
js
mov
and
rcrl
daa
xchg
testl
fdivl
sti
sub
and
aas
xchg
lret
cld
cmc
cld
mov
xchg
xlat
popf
pop
test
insl
sbb
push
xchg
mov
bound
lods
mov
mov
sahf
add
mov
xor
adc
push
pop
add
lods
aad
pop
xchg
xlat
inc
mov
and
pop
xchg
adc
pushf
movl
cmpsb
sbb
or
lret
xor
add
sahf
addr16
jp
sbb
loope
popf
mov
jl
mov
pop
cltd
icebp
jbe
add
movsb
inc
sbb
fsincos
xchg
in
call
mov
das
push
psubusw
pop
cmpl
call
mov
jne
sub
loop
dec
xor
daa
es
sbb
iret
add
add
xor
arpl
and
outsl
lods
sbb
xor
jmp
mov
push
sahf
fistpl
pusha
shrl
lods
in
add
pushf
mov
lahf
outsl
mov
push
in
xchg
rclb
jno
jnp
push
rcll
push
imulb
and
jnp
rcll
jae
pop
mov
cli
push
in
scas
jb
xorb
cmpl
ret
push
or
push
xor
lret
sub
outsb
stos
outsb
outsl
pop
xor
jp
das
in
jle
xchg
push
mov
outsb
fdiv
fstpt
dec
adc
shll
imul
mov
jmp
negl
icebp
cmp
rcrb
outsb
dec
inc
aas
xor
mov
lret
mov
pop
mov
ficompl
sbb
out
js
sub
cmp
out
out
xchg
nop
pop
mov
cwtl
mov
lock
ret
xchg
or
rorl
xor
sub
push
leave
les
int3
lea
adc
mov
adc
in
xchg
cli
dec
fucom
fistpl
sbb
add
je
inc
in
jge
hlt
rcl
sbb
scas
pusha
cltd
repnz
add
jne
les
aas
mov
jecxz
jne
int
push
fidivrs
insb
inc
lods
push
jecxz
mov
lea
adcb
push
lahf
ljmp
fwait
push
cmpsb
inc
add
pushf
jge
adc
mov
mov
jnp
out
or
jo
imul
add
mov
sub
dec
sub
or
inc
mov
jb
push
hlt
stc
loop
loopne
fsubl
mov
rcr
enter
sub
addr16
ja
dec
xor
mov
inc
jb
inc
mov
or
inc
int3
loope
sahf
fcmovbe
pop
fcoml
aad
dec
nop
and
or
cwtl
push
xor
inc
dec
fdivrs
pop
lods
inc
adc
dec
repz
pop
add
sbb
fistpll
stos
sbb
sbb
out
das
dec
jne
inc
jmp
rorb
mov
mov
dec
adc
mov
xor
sub
or
or
dec
jns
fsubs
inc
popf
cltd
ret
push
mov
mov
dec
das
mov
pop
fidivrl
hlt
imul
movsl
add
jle
fcomip
inc
fists
stos
mov
mov
adc
mov
popf
pusha
pop
lock
rclb
mov
ficomps
lock
fisttpll
les
lock
push
mov
xor
cmpsb
mov
andb
rclb
cmp
pop
sbb
gs
push
cmp
aam
dec
inc
cmp
ljmp
adc
cli
sub
test
push
cwtl
popa
sbb
pop
test
fidivs
loopne
sub
cmp
repz
out
mov
popf
sub
add
and
and
cvttps2pi
lods
dec
cld
cmp
xchg
fstl
repz
add
mov
lods
push
adc
daa
popf
stos
daa
pop
pop
outsl
dec
es
mov
jge
sub
add
lods
aad
or
sti
fidivl
xor
cmp
jge
roll
out
push
lahf
mov
vmovntps
ss
in
jns
hlt
shrb
call
dec
mov
sbb
lea
fwait
push
pushf
sbb
fsubl
push
sbb
lea
mov
xchg
jecxz
pushf
sbb
add
jmp
shrl
push
mov
pop
stc
fsubrs
ret
lods
hlt
sbb
jo
sub
dec
loope
sbb
pop
mov
loop
sub
stos
imul
xchg
stos
or
sub
fimuls
sbb
scas
jne
xchg
stos
dec
jo
inc
mov
sbb
subb
fistpll
add
clc
loop
lods
dec
inc
add
mov
mov
incb
dec
insl
and
or
add
in
fwait
roll
xlat
inc
pop
ja
mov
test
cmp
jge
jae
cmpb
ljmp
in
dec
or
jae
jo,pn
sahf
sbb
push
push
in
mov
inc
inc
dec
repz
mov
dec
fs
das
orl
andl
jg
mov
cltd
mov
les
push
mov
andl
cli
jg
test
xor
loope
icebp
mov
mov
pop
fbstp
inc
pusha
pop
lahf
aaa
xor
and
out
lods
hlt
xor
lods
lods
xchg
enter
out
inc
movsb
jg
inc
and
mov
std
enter
jo
movsb
es
out
mov
mov
je
pop
in
mov
jno
aad
or
xor
xlat
popa
dec
mov
insl
mov
shlb
aaa
in
in
pusha
xor
aaa
push
sbb
xchg
pusha
out
push
sub
cltd
sbb
cltd
int3
dec
fcomi
test
or
int
imul
jb
int3
out
mov
les
arpl
ret
iret
and
pinsrw
lds
lahf
cmp
inc
cld
and
shll
pop
mov
outsl
gs
adc
gs
rcl
ljmp
dec
jns
xor
sub
pop
or
lcall
mov
sbb
inc
mov
mov
add
adc
push
push
arpl
bnd
or
pusha
sub
dec
dec
aam
imul
and
fdivrs
jecxz
inc
rorl
sub
or
push
inc
cmpsb
and
test
or
jne
fiadds
ret
ret
push
imul
xchg
ret
scas
mov
mov
popa
out
xor
adc
lahf
shl
mov
dec
jb
mov
xchg
push
mov
cmp
and
adc
dec
jg
sbb
leave
add
repz
and
fldl
mov
sub
xlat
outsl
and
lock
outsb
aas
aad
pop
out
sbb
ret
jbe
mov
icebp
cmpsl
mov
popf
test
pop
aaa
mov
xor
jmp
es
ss
add
adc
inc
cwtl
scas
sub
mov
xchg
xor
aam
lcall
aaa
pop
mov
mov
js
addb
pop
xchg
vaddsubpd
or
mov
aad
out
push
rorl
adc
xlat
lret
test
mov
push
sarl
dec
dec
mov
leave
ja
inc
push
and
insb
movsl
mov
ret
adc
mov
cmpsl
pop
popf
movsl
push
rclb
clc
jbe
xchg
push
mov
lds
adc
xchg
testb
call
dec
movsl
jp
lahf
addr16
mov
push
popa
or
xor
mov
mov
jno
je
sarl
mov
xlat
inc
jle
out
movsb
push
or
imul
fisubrs
xor
sahf
sbb
jae
stos
outsl
jecxz
jb
mov
xor
repnz
mov
xor
jecxz
inc
arpl
xchg
push
adc
inc
scas
xchg
test
jmp
ss
jecxz
icebp
mov
mov
add
xor
stos
lock
call
inc
xchg
fwait
sbb
pop
pushf
mov
add
mov
call
jae
int
cmp
pop
xchg
out
sub
int
xchg
arpl
gs
sbb
in
mov
mov
or
push
sti
faddp
arpl
faddl
les
sub
adc
mov
cli
inc
lods
mov
or
push
and
inc
nopl
push
cmpsl
pop
push
test
and
out
popa
filds
pop
cld
jle
testl
call
lock
push
adc
mov
xchg
xchg
das
cmpsb
mov
mov
clc
mov
imul
sub
scas
cmp
mov
pop
push
mov
lret
pop
mov
jg
pop
ds
les
xlat
push
cwtl
pop
cwtl
fdivl
inc
insb
and
mov
and
jo
mov
dec
xchg
jo
xor
pusha
popf
mov
xor
sub
xchg
pop
xlat
cmp
in
test
icebp
stos
repz
push
or
fucomi
adc
dec
leave
mov
jae
mov
int3
dec
fwait
mov
stos
inc
xchg
fisubl
addr16
xchg
jge
cmp
mov
cltd
pop
xchg
std
out
or
icebp
pushf
mov
inc
pop
imul
scas
pop
inc
adc
or
mov
sti
mov
cld
in
data16
cltd
pop
data16
cmp
pop
mov
outsb
int
sub
sarb
mov
mov
sub
or
dec
aaa
ret
scas
cmpsb
bound
pop
jae
xchg
mov
inc
xor
add
sub
cmp
sarl
leave
popa
and
pop
cs
mov
mov
pop
jne
call
lock
inc
pop
and
addl
mov
syscall
inc
aam
sti
test
aas
jno
inc
xchg
loop
aas
fidivrs
jne
popa
or
jmp
mov
sub
andb
lods
fstp
mov
ret
movsl
rol
inc
imul
pop
adc
adc
sti
in
stc
add
jnp
push
sbb
cli
cmp
out
ret
fs
popf
push
xchg
push
sbb
dec
mov
inc
icebp
rorl
or
xchg
shl
sbb
push
cltd
add
in
clc
push
in
inc
movsl
pop
pusha
and
dec
pop
pop
ret
pop
mov
lcall
fwait
jge
dec
mov
out
jbe
call
rolb
push
mov
mov
and
push
mov
and
fadds
popf
cmp
mov
jg
mov
std
push
adc
pop
call
xor
scas
adc
insl
push
test
sbb
sbb
pop
pop
xchg
outsb
cltd
inc
dec
movb
mov
lahf
in
and
lret
cmpsl
arpl
mov
jae
xor
push
iret
inc
icebp
jb
ss
adc
lods
push
ret
add
xchg
cmp
cmc
movsb
aaa
adc
and
iret
push
loop
adc
fdivl
cmp
arpl
or
or
rclb
xchg
outsl
jb
push
sbb
or
lods
xlat
sbb
loop
cmpsl
cmovle
lods
js
adc
jb
ret
push
das
sbb
jecxz
movsl
stc
xor
jb
and
outsl
mov
pop
addr16
xchg
adc
in
adc
andb
xlat
adc
lahf
xor
repnz
adc
cli
sbb
dec
or
addr16
test
xchg
loopne
out
or
xchg
or
out
push
mov
mov
pmulhuw
add
jle
cli
mov
shl
or
or
jae
mov
aaa
fwait
sbb
fs
stc
adc
aaa
outsb
cmp
sbb
add
adc
xchg
push
cwtl
enter
addr16
push
js
xorb
add
push
xchg
inc
xchg
lret
pop
xor
lea
fs
int
and
movsl
xor
fwait
lret
push
clc
out
out
cld
pop
xor
mov
dec
jp
add
das
mov
mov
push
inc
cmpsb
adc
sbb
cmp
fstpl
jne
sbb
mov
sbb
int3
add
ss
shlb
mov
cmovnp
pop
lods
icebp
add
jnp
xor
sbb
shl
sbb
int3
sbb
cmpsl
mov
dec
push
xchg
xor
adc
gs
mov
insl
movsb
mov
xchg
fstp
xor
sbb
xchg
loop
outsl
cmpsl
xor
jbe
aad
cmp
and
in
mov
xchg
lcall
pop
jne
sub
loopne
bound
mov
out
inc
push
in
inc
dec
or
fbld
push
dec
fcomp
call
inc
int3
mov
sub
js
mov
rcll
imull
repz
pop
push
outsb
divl
cmp
in
xchg
xchg
shl
xchg
test
add
xor
cmpsb
xchg
aad
into
xchg
int3
test
jp
lods
jl
test
adc
sahf
sub
jbe
pusha
cli
nop
and
and
test
gs
mov
in
xor
push
push
pop
mov
or
mov
pop
pushl
push
lock
subb
sbb
ret
sbbl
xchg
push
sbb
push
cmp
fisubrs
cwtl
inc
lcall
or
xchg
mov
pop
lret
stc
xchg
jecxz
not
cmp
lods
sbb
xchg
xchg
cmp
and
imul
push
cld
test
jg
jp
jmp
cmpsb
fsubs
into
push
pop
or
add
mov
pop
push
mov
jge
shl
or
mov
or
outsl
sbb
inc
mov
adc
add
loop
loope
outsb
mov
fmull
sub
lahf
data16
or
cli
sbb
add
rclb
push
cmc
test
insb
mov
ret
pop
rclb
mov
inc
out
adc
shl
xor
dec
stos
dec
sub
or
or
xchg
mov
out
add
mov
or
insb
js
lock
shrl
popf
adcl
adc
xor
in
data16
pop
push
or
cmp
orl
bound
loope
flds
or
pop
cmp
ficoms
mov
aas
sbb
cmp
pop
xor
rolb
leave
stos
sarb
mov
inc
lret
sahf
js
lcall
outsl
lds
fimuls
xchg
stos
rcrl
inc
xor
lods
sbb
aam
cwtl
cs
jp
cmp
lret
push
ja
iret
xchg
mov
jmp
sub
bound
lahf
shrb
and
cld
shlb
xchg
inc
out
add
push
fwait
mov
movups
outsl
lret
dec
jns
mov
call
lret
and
fadd
mov
lods
mov
sub
outsl
push
ss
xchg
lods
mov
xchg
push
dec
into
outsl
lds
dec
push
inc
pop
rcrl
addl
sub
pop
cmp
add
imul
pop
rorb
mov
aaa
and
dec
mov
ret
out
push
fnstcw
add
inc
push
or
mov
movsb
mov
pop
stos
dec
and
inc
shl
loop
daa
push
inc
jmp
xchg
inc
fs
pop
imul
push
aam
js
add
leave
adc
or
call
adc
lds
mov
adc
sub
add
mov
mov
rolb
xchg
ja
movsl
xchg
adc
addl
jno
dec
xchg
addl
fcmovnbe
lret
push
mov
cld
add
pushf
push
pop
dec
loop
imul
jnp
or
imul
sahf
push
mov
lock
imul
mov
je
shl
dec
jge
push
mov
cwtl
js
adc
cmc
jnp
mov
repz
fsubrs
das
cmp
fisttpll
jge
fcoml
pop
xchg
aad
cmpsl
outsb
test
insl
jmp
push
data16
push
cli
cmp
bound
stc
enter
enter
mov
or
out
xchg
cmp
std
and
inc
mov
repz
fwait
sahf
in
in
jns
orl
int
std
repnz
xchg
sbb
add
xchg
dec
xchg
idivl
xor
sub
dec
imul
pop
dec
cmc
sbb
sbb
push
bound
imul
subl
and
jbe
scas
loope
pop
outsb
pop
jp
push
sar
adc
push
fldenv
mov
out
xchg
aam
add
jmp
dec
push
lock
xchg
cwtl
aam
lock
mov
dec
push
lods
shlb
sub
push
and
pop
push
cmpsl
mov
jns
jne
ja
dec
sahf
and
sbb
xchg
cmp
mov
loopne
inc
ret
iret
dec
mov
adc
push
out
sbb
sarl
pop
testl
mov
in
or
push
daa
std
push
shlb
mov
mov
jl
cmp
and
cmp
jl
or
push
ret
and
pusha
cs
shrl
mov
cmp
cld
aam
cld
cmc
js
sbb
and
andb
imul
enter
xchg
sub
or
negl
stc
cmp
sbb
xor
aaa
lret
pop
mov
push
push
push
dec
dec
je
or
repz
inc
int
mov
lock
inc
stos
or
sahf
mov
jnp
outsb
das
nop
sti
pop
sbb
cmp
jge
xchg
arpl
lods
xchg
sbbl
das
push
sarl
mov
out
inc
lret
adc
cmpsl
mov
and
or
xchg
cmpb
push
mov
cmp
and
xor
adc
or
lock
sbb
movsb
xchg
cmp
or
std
fsubr
subl
rorl
in
cmp
in
into
iret
jo
dec
cmp
pushf
cmp
cmp
mov
rorb
or
xchg
add
or
inc
mov
fdivrs
adc
mov
jg
and
stos
push
jns
jne
shlb
dec
or
jns
cmc
leave
mov
mov
cs
pop
icebp
aad
push
inc
sub
xor
sbb
scas
lcall
xor
daa
pusha
xchg
and
enter
mov
xchg
xor
sub
fidivrl
jl
jge
testb
jl
cli
fnstsw
mov
repz
cmp
push
push
out
out
jge
adc
ja
or
aad
loop
dec
out
push
or
loop
cmp
push
push
or
jge
mov
bound
pusha
xchg
push
cmpsw
sub
dec
xchg
dec
push
inc
int3
imul
nop
jg
fs
jle
mov
sbb
xor
repnz
es
imul
inc
in
inc
rcll
add
dec
rcrl
xchg
mov
xor
jo
push
sbb
sti
mov
mov
int
repz
push
call
movsl
cmp
add
jns
dec
jmp
in
loop
inc
loopne
xchg
jge
arpl
shrb
lods
jle
pushf
jo
aas
sbb
unpcklps
jp
test
push
loop
mov
jbe
icebp
popa
inc
sbb
in
mov
pop
loope
sub
jb
rorl
cmp
test
cmp
push
aaa
and
stos
subl
xor
jae
insb
inc
sub
lods
inc
into
sbbl
mov
jge
mov
cmp
adc
sahf
sub
outsl
outsb
mov
js
xchg
stos
sub
pop
repnz
jmp
inc
inc
mov
leave
cltd
xchg
rcrl
fistl
and
add
pop
xlat
cli
jnp
cmp
xor
das
mov
cmp
hlt
imul
pop
inc
scas
mov
scas
cli
mov
inc
push
scas
adc
or
cmp
or
pop
enter
or
es
in
fcoml
sahf
aam
push
mov
or
mov
jle
popa
mov
movsb
jnp
leave
stc
pop
xchg
fmull
cld
fisubl
sahf
outsl
shll
and
pop
out
rclb
inc
inc
inc
mov
sbbl
xchg
push
je
cmpsb
xor
mov
roll
cmp
cmp
mov
in
jb
dec
mov
adc
stos
push
ret
adc
fcoms
fldt
mov
loop
and
add
cwtl
push
popa
frstor
or
nop
lock
mov
mov
rcll
lods
inc
jmp
adc
mov
ficoms
test
sub
subl
leave
xchg
mov
dec
sbb
or
inc
dec
sub
mov
jno
lods
xor
cmp
xchg
mov
pop
lahf
test
roll
std
out
pop
aam
mov
cmpl
js
adc
add
mov
push
pop
fcoml
test
es
ja
lds
clc
test
hlt
fstpl
push
out
mov
sub
jge
ficompl
out
in
xchg
repnz
dec
mov
cmc
mov
out
mov
lods
jg
sahf
decb
cmp
dec
or
mov
mov
dec
mulb
jg
icebp
divl
inc
dec
cwtl
fldenv
fdivrs
and
fdiv
adcb
out
mov
insl
mov
lods
testl
inc
cltd
fwait
xor
push
lock
jmp
test
movsb
jb
inc
insb
mov
es
cld
into
xchg
fisubs
mov
shll
mov
fnstcw
cmpsb
and
popa
and
sub
jnp
outsl
xorb
inc
inc
pop
jle
dec
push
movsl
repz
adc
dec
mov
push
mov
pushf
cmpl
push
das
lea
clc
int3
ja
movsl
dec
int3
fsubrs
leave
movsl
cmp
add
andl
shl
add
inc
lock
mov
in
xorb
push
adc
mov
dec
add
adcb
mov
fsubl
pop
not
sti
out
cmp
add
jle
or
fcompl
xchg
push
icebp
clc
adc
xor
stos
out
mov
sub
ja
sahf
bound
push
jmp
dec
xchg
dec
enter
cmp
jae
movsl
sub
ret
mov
aaa
incl
push
ja
repz
jle
push
or
mov
stos
subb
movsl
cmpsl
pop
add
xchg
loope
sbb
mov
dec
mov
enter
sbb
xor
popa
mov
push
sbb
mov
dec
adc
push
test
into
cmpsb
loope
insb
je
sbb
fabs
or
dec
inc
pop
sbb
xchg
cmpsb
pop
and
push
push
lock
out
pop
sbb
ss
lahf
xchg
das
pushf
or
shll
shlb
xchg
cmpsb
add
dec
cs
pop
jne
sbb
out
aaa
push
xchg
jmp
stos
dec
stos
enter
dec
iret
shll
jne
pop
mov
inc
outsb
lods
dec
push
mov
mov
sbb
into
test
fsubs
mov
and
or
in
test
push
outsl
test
push
and
scas
mov
iret
and
cld
loop
mov
je
and
push
cwtl
push
outsl
cld
jg
mov
dec
repnz
cld
loopne
sbb
lcall
out
xor
bound
xchg
xor
ja
xchg
xchg
sub
mov
sahf
sub
adc
fiadds
cmc
or
and
repnz
pop
push
xchg
lret
mov
fstl
je
xchg
jmp
dec
sbb
mov
cmp
add
loope
bndldx
and
adc
jg
jle
mov
jnp
ficomps
push
mov
test
sbb
or
mov
adc
jecxz
mov
jge
jmp
frstor
jne
outsb
das
xor
pop
inc
add
add
mov
mov
push
in
ficomps
imul
bnd
pop
push
and
ret
inc
pop
outsl
into
pop
ficoms
scas
js
cmpsl
hlt
in
and
bound
xor
adcb
and
mov
cld
mov
inc
and
ucomiss
jge
mov
jno
pop
push
sub
rcll
pop
dec
icebp
or
enter
daa
sub
inc
push
sub
sbb
repz
into
add
cld
jecxz
mov
sub
lahf
stos
imul
jp
fidivl
fs
adcl
es
jns
call
imul
pop
out
mov
fstps
mov
jge
ret
jb
lahf
push
adc
std
or
arpl
push
mov
addr16
and
adc
andb
sub
cmc
push
lcall
inc
imul
outsl
das
outsb
dec
int
outsb
pop
fmull
push
sar
call
and
mov
outsl
or
je
pop
mov
jmp
aad
out
lret
in
stc
sbb
cwtl
cmpsb
fisubrl
mov
push
push
lods
pop
dec
pop
inc
jnp
js
push
xchg
or
stos
rcr
les
add
mov
jnp
fistl
and
imulb
xchg
scas
cld
and
sub
pop
jl
std
push
xchg
aas
sbb
push
leave
incb
mov
popf
bound
add
std
jg
inc
jle
das
shlb
call
shl
push
in
imul
push
sbb
sub
inc
pop
adc
and
int
cld
inc
jl
aas
ds
je
ret
add
lret
daa
es
sahf
xchg
xchg
xor
add
xor
mov
repz
das
mov
and
dec
jo
adc
fucomi
push
mov
jge
jg
das
jo
mov
lea
jl
js
cwtl
jl
or
pop
mov
inc
mov
xchg
nop
mov
repnz
mov
inc
inc
lahf
jl
inc
out
decb
loop
insl
push
push
jb
mov
ss
jg
mov
adc
ret
cwtl
and
inc
or
stos
mov
gs
fsubl
pop
test
cwtl
xchg
pop
push
cmp
rcl
ret
adc
push
jno
data16
pop
cli
jge
mov
inc
pop
adc
daa
pushf
inc
sub
dec
cli
adcl
jno
out
int3
aas
mov
pop
shrb
push
push
out
dec
and
jno
xor
sbbb
outsb
mov
in
add
mov
jmp
lock
and
fsts
lds
xchg
cmp
jne
mov
movsl
fisubl
imul
push
movsl
push
shll
lods
push
lds
es
pusha
mov
sbb
mov
inc
outsl
push
out
and
mov
cmpsl
dec
inc
pop
aad
inc
pusha
mov
popa
nop
aam
dec
in
or
out
inc
mov
jge
nop
leave
roll
pop
pop
or
iret
mov
mov
mov
xchg
rcrb
inc
lods
adc
popa
dec
cmpsb
addr16
nop
hlt
fucomp
jp
xchg
sub
xor
or
jecxz
fcmovnbe
movb
out
sbb
outsb
lods
xchg
pop
adc
sahf
mov
insb
sahf
lret
adc
cmp
ljmp
push
mov
frstor
repz
add
adc
mov
xchg
sub
repnz
inc
sbbb
xchg
cmp
hlt
jae
push
mov
in
outsb
pop
mov
dec
nop
push
xor
dec
push
sti
jns
jge
pushf
inc
sbb
lcall
lods
mov
sbb
pusha
adc
bnd
inc
pop
bound
adc
and
cli
mov
or
mov
imul
or
fldt
jl
fwait
pop
inc
ficoms
imul
xor
fwait
ja
pop
dec
jmp
fstpl
dec
sbb
lock
loopne
pop
inc
out
inc
lret
pop
test
pop
sub
lods
mov
sub
mov
rorl
sbb
pop
icebp
xchg
cwtl
pop
ret
cmpsb
icebp
or
add
rorl
movsb
test
push
push
sbb
lods
jns
inc
mov
cmpsl
pushf
je
sbb
loop
mov
mov
or
mov
loop
or
dec
mov
call
test
ss
cmp
repz
cmp
in
mov
iret
mov
rcrl
ret
jnp
jns
and
sbb
pop
pushf
adc
stos
pop
dec
pop
lret
push
call
jne,pn
mov
orb
les
xchg
jo
xchg
dec
xchg
and
pushf
fists
and
push
add
push
pop
cmp
mov
leave
pop
xor
sub
lds
movsb
cmpsb
sub
mov
je
daa
jbe
mov
scas
rcl
xchg
fbstp
add
cmc
fbld
mov
or
aas
inc
andl
loope
sub
sahf
xor
dec
imul
lahf
xor
or
cmpsl
aas
mov
inc
mov
aas
mov
arpl
push
cmp
or
mov
das
outsb
and
sbb
mov
int
pop
loopne
sbb
rcrb
lods
and
mov
or
adc
gs
clc
sub
dec
popf
or
mov
mov
or
push
add
repnz
inc
adc
stos
and
mov
sti
dec
addr16
fchs
xchg
cld
push
shll
data16
ret
mov
xor
xchg
jne
or
scas
in
jecxz
pushf
stos
arpl
insl
in
out
imul
xor
lahf
dec
in
adc
cmpsl
lods
jns
jnp
das
bnd
adc
add
pop
mov
inc
pop
and
imulb
sub
push
adc
mov
fildl
mov
enter
out
xchg
adc
test
pop
jae
cmp
mov
xchg
inc
fmuls
fwait
out
repz
movsb
mov
pop
jno
jmp
pop
neg
cmpsl
negb
sahf
mov
fidivl
out
test
je
push
das
push
cwtl
daa
pop
test
in
outsb
rcl
cmpl
mulb
cmpsl
lret
dec
cltd
cmp
xor
test
lods
in
divl
push
and
mov
push
inc
jb
lret
leave
ret
mov
pop
xor
in
mov
jmp
mov
inc
xchg
into
hlt
mov
insl
fildll
and
test
pop
aam
pop
pop
mov
add
decl
mov
jmp
pop
mov
xchg
roll
in
push
ss
and
fidivrs
dec
cmpsb
enter
cmp
fisubrl
xlat
xor
fs
sbb
push
adc
jmp
sahf
xor
push
push
cmp
dec
pop
adc
out
enter
sub
xchg
mov
enter
jns
ret
and
fs
inc
in
mov
aas
outsl
jne
lret
int
insb
mov
fidivrs
push
ljmp
dec
loope
out
pop
jecxz
mulb
loopne
add
pop
push
dec
stos
lods
test
jnp
addr16
mov
mov
pusha
xchg
push
jle
in
lods
mov
dec
imul
lret
mov
sbb
pop
push
pop
pusha
pop
or
push
push
mov
jne
out
imul
cwtl
push
cmc
lock
xchg
movsl
xor
mov
popf
es
mov
cmp
jbe
addb
aam
inc
sbb
jmp
sar
push
jae
stos
mov
pop
inc
sbb
fcoml
push
jne
jns
shrl
add
inc
mov
cmp
dec
test
pop
and
fs
jae,pt
sub
xchg
xor
fnstenv
or
push
cmp
push
cmp
sbb
push
xor
sti
mov
out
xor
xor
adc
fildl
jo
pusha
aad
mov
dec
cld
sbb
or
gs
inc
cmp
push
fdivrl
rep
nop
add
adc
iret
xchg
stos
sarl
jbe
int3
dec
push
in
mov
cs
fs
aaa
sub
dec
dec
and
repz
cmc
rol
pusha
and
repz
lods
test
mov
mov
popf
shlb
jl
in
movsl
sbb
mov
loopne
stc
int3
fistl
fistpll
and
mov
testb
jmp
lret
aam
pop
mov
sahf
jae
pushf
adc
fdivrl
es
pop
cmpsl
push
loopne
ret
lcall
pop
sub
push
and
frstor
insb
and
fdivrs
xor
outsb
pop
fcmovnbe
or
aam
dec
cmc
mov
imul
mov
mov
sub
dec
std
fidivrs
push
test
rclb
outsb
mov
cld
into
addr16
inc
fst
push
dec
inc
jl
cmp
and
xor
popf
dec
mov
inc
pop
xchg
mov
int
xor
aam
rolb
fdiv
inc
lock
mov
xor
in
mov
mov
jle
rclb
shlb
adc
mov
xchg
push
add
jecxz
js
shlb
mov
push
enter
cmp
push
sbb
fsubrl
sti
push
jp
ret
and
inc
aaa
pop
out
dec
lret
ja
add
push
or
mov
jae
mov
mov
andb
cli
ret
out
aas
pop
mov
negl
push
inc
cs
mov
push
rcrl
inc
push
mov
dec
fadds
sub
stos
jnp
push
cmpsb
push
lods
shlb
ljmp
mov
sbb
subl
sbb
push
iret
jns
jecxz
jns
out
jge
jo
pop
call
jg
shlb
xchg
fsubl
xchg
cmp
out
push
ljmp
add
leave
and
aas
clc
mov
imulb
xchg
insb
shrb
cmpb
dec
or
js
jmp
inc
popa
push
xchg
sbbb
jnp
sub
decl
and
push
pusha
rorl
loop
aad
jb
nop
jg
mov
popa
lea
aaa
inc
repz
or
ret
aad
int3
inc
pop
xchg
cwtl
dec
xor
into
cmp
loope
jp
repnz
dec
sti
add
inc
test
xchg
dec
xchg
sbb
ret
push
rclb
fmuls
xor
rcll
and
push
in
movsl
mov
push
and
popf
jb
jl
dec
addr16
sbb
rcl
cmp
sbb
sahf
or
dec
adc
popf
mov
xlat
jb
je
out
ds
popa
mov
cld
rcrl
xchg
mov
sti
push
pop
pop
adcl
int
xchg
or
ror
cwtl
call
lods
pop
sbb
sbb
mov
stos
es
add
cmp
leave
xchg
pop
into
sub
loope
jle
aaa
sub
daa
xor
xor
les
sbb
out
in
aaa
aad
jno
pop
xor
ret
mov
hlt
mov
inc
cmp
add
push
fs
dec
pop
sahf
inc
push
dec
gs
cmc
pop
mov
cmpsl
xor
lods
sbb
cwtl
and
xlat
es
cmp
pop
or
mov
test
fcmove
rcr
aas
and
push
xchg
aad
xor
movsb
push
xor
xchg
xchg
adc
inc
adc
test
loopne
movl
scas
lcall
jge
popf
test
pop
mov
add
std
dec
jno
aad
call
dec
repz
rorl
divb
dec
pushf
xchg
push
jle
lds
push
add
stos
add
js
out
fwait
test
cs
xchg
dec
or
adc
xor
xchg
mov
adc
jne
jo
fiaddl
and
jns
int
orb
sub
add
mov
cmp
fistl
and
out
sub
pop
js
inc
mov
xchg
pop
mov
maxps
cmpsl
dec
or
or
out
ss
push
and
cmpsl
mov
add
notl
pop
in
inc
int
hlt
dec
mov
orb
adc
mov
push
mov
andl
daa
aad
pop
push
mov
rcll
icebp
xchg
fisubl
sub
jb
inc
mov
mov
out
out
pop
movl
dec
push
jno
scas
mov
push
inc
pusha
push
addr16
jmp
fildll
roll
cld
cltd
sub
test
xor
js
hlt
dec
dec
or
in
jecxz
cltd
add
xchg
jbe
cmpsb
dec
adc
push
mov
jle
mov
pop
sbb
mov
mov
mov
mul
or
call
jne
add
sbb
negl
or
jns
pop
stos
adc
aam
dec
jb
sbb
sbb
hlt
ret
push
lods
jle
jmp
addr16
pop
shrb
test
push
dec
or
ljmp
mov
pop
lret
mov
and
mov
enter
outsb
adc
fildl
imul
stos
xlat
jb
mov
call
les
jns
rcr
mov
imulb
imul
out
mov
push
inc
nop
mov
jb
ja
cli
dec
and
jo
and
fstps
jmp
idiv
fwait
insb
repz
push
pop
fxtract
xchg
scas
sbb
xchg
testb
out
mov
add
mov
in
rcl
jno
inc
lods
insl
cmpsl
add
jno
xor
xchg
xchg
pop
in
push
in
aam
mov
fidivrs
gs
jp
test
push
out
push
add
insl
cmc
jmp
int3
popf
sub
mov
xor
mov
push
mov
push
xchg
bound
sub
loop
sahf
shl
ret
aad
insb
xchg
xchg
xlat
lds
sarl
add
sub
sahf
add
iret
stos
adc
adc
fwait
xchg
mov
push
in
sub
test
pop
jbe
lds
inc
cmp
and
pop
out
and
or
inc
cmp
decl
push
sahf
enter
inc
not
push
jns
insl
pop
or
fs
pop
sub
in
mov
lds
sub
adc
xchg
mov
loop
adc
xchg
push
stos
in
mov
andl
std
outsb
inc
dec
sub
les
jnp
imul
or
xchg
test
dec
add
lods
ret
out
imul
xor
rcr
xchg
mov
add
fsubs
ret
mov
into
jmp
mov
mov
mov
add
aad
mov
add
arpl
cmp
sub
xor
mov
stos
ret
mov
jmp
xor
jmp
push
mov
out
decb
sub
inc
loope
cs
sub
addr16
into
jb
sbb
mov
mov
mov
lret
mov
mov
das
bound
dec
aas
movsb
and
xor
push
andb
in
lock
lret
push
les
in
aas
push
sbb
sbb
jae
pop
jns
xchg
loope
lcall
and
and
pusha
and
mov
mov
sti
or
and
jb
nop
mov
jae
es
cmpsl
jecxz
daa
adc
pop
sub
insb
ret
jl
ds
cmpsl
push
jne
ds
mov
hlt
sti
jmp
inc
out
cld
pop
stc
jnp
andl
cmpb
dec
mov
xor
mov
xchg
pop
ret
xor
jbe
fsubl
pop
xchg
addr16
add
cmc
call
mov
mov
xor
movsb
fldcw
push
mov
ret
out
adc
sbb
push
dec
mov
out
loope
test
and
or
in
sbb
in
push
lret
and
sbb
popf
mov
and
dec
daa
insb
sub
sub
xchg
or
mov
and
cs
cmp
push
xor
movsb
xchg
and
das
hlt
shlb
adc
aas
psubb
mov
fistps
and
shll
mov
or
shll
shll
imul
test
dec
in
cs
or
add
gs
jge
sbb
jp
sbbl
and
enter
dec
test
inc
cmpsl
mov
sar
out
mov
and
sbb
jno
and
xchg
xlat
push
outsl
rclb
je
loopne
cmp
sub
push
dec
cli
dec
xlat
inc
jbe
ss
add
lea
rcrb
sbb
xor
mov
pushf
mov
mov
jg
sub
in
cmpl
dec
call
into
jb
mov
jecxz
fdivr
pop
add
cmp
fwait
mov
pop
xor
loopne
push
std
sbb
mov
loop
push
cmp
je
out
sbb
lds
pop
jecxz
stos
imul
push
jb
push
repnz
je
cmp
dec
xor
es
aam
popf
add
test
outsl
xchg
dec
popa
mov
mov
in
xor
aam
cmpsl
jp
lods
call
mov
mov
enter
jne
adc
dec
icebp
cmp
imul
sbb
add
push
jns,pt
cltd
xor
cmp
sub
jb
lods
cmp
cli
mov
push
dec
pop
js
sti
push
cmp
mov
jnp
sbb
xor
xchg
adc
jns
gs
loop
in
xchg
imul
inc
repz
out
add
xor
test
jb
and
outsb
pop
add
iret
inc
adc
imul
test
loopne
pop
sbb
mov
imul
jp
jmp
insb
lahf
sub
add
jge
ljmp
iret
push
in
lahf
sub
shll
push
inc
stos
xchg
aad
mov
cmp
stc
les
lret
and
lret
daa
push
pop
lea
sbb
mov
xchg
jnp
cmpl
mov
mov
hlt
jecxz
enter
mov
data16
adc
out
mov
insb
inc
fidivs
cmp
or
inc
jnp
jbe
sub
insl
cld
or
xchg
adc
clc
pusha
fwait
xchg
jbe
scas
leave
scas
xor
xchg
inc
test
sti
ficoml
cmc
test
pusha
aam
adc
ds
std
popa
out
scas
test
sbb
cmp
jo
mov
or
xchg
cli
mov
sbb
and
push
inc
test
mov
and
xchg
fcoml
rcl
inc
xor
stos
push
popa
movsb
fnsave
mov
lcall
mov
outsl
jecxz
push
mov
out
incb
lods
pop
pop
jb
xor
or
loope
push
xor
imul
xchg
sub
sbb
lods
ds
movsb
sbb
iret
aam
daa
mov
jno
dec
into
stos
sti
in
xchg
sub
ret
dec
aam
jns
test
lds
adc
stos
cmpsb
cmpsl
into
push
mov
mov
pop
dec
xor
ja
sbb
dec
inc
adc
push
cmp
jne
and
test
mov
push
lcall
sahf
push
fcoml
dec
mov
cmova
sub
and
jle
es
out
jle
inc
push
pushf
mov
pop
mov
in
mov
fsubl
or
scas
mulb
loop
push
lret
lods
loopne
test
test
ret
test
int3
cli
sub
push
jo
lret
mov
imul
mov
xchg
cmpsl
mov
xchg
rorl
imul
pop
and
push
jmp
jg
xor
push
scas
pop
cld
dec
jge
lcall
cli
mov
pusha
lods
cltd
push
and
sub
push
roll
push
cmc
xchg
pop
ds
sbb
pop
fcoml
outsb
movsb
xor
roll
push
and
pushf
lods
push
bound
movsl
inc
or
fnstcw
xchg
mov
stc
and
scas
inc
fwait
xorl
push
sbb
ret
in
push
test
jge
xchg
fiaddl
cmp
sbbl
and
fnstsw
sub
repz
xor
mov
addr16
sbb
inc
add
add
fs
call
jne
test
sub
lods
dec
into
fistpl
add
push
xchg
dec
fiadds
out
jge
into
pop
stos
inc
sbb
inc
inc
pushf
lea
insl
add
or
jle
dec
ljmp
pushf
clc
push
pushf
cmc
cmpsb
jo
ljmp
cmp
jne
cli
fisttpll
jg
lods
outsl
sub
fs
sub
cmp
int
add
aaa
iret
push
out
mov
outsl
clc
out
call
mov
fdivrs
push
hlt
jno
sub
add
imull
add
mov
and
cmp
inc
pop
imul
rol
incb
std
pop
loop
les
lahf
or
mov
cmpsb
mov
fs
mov
sarl
xchg
in
stc
push
mov
mov
jbe
jecxz
mov
add
inc
mov
mov
lret
lcall
lahf
cld
sbb
jno
outsb
adc
imul
push
call
fidivrl
push
add
popw
or
enter
add
movsl
and
dec
sbbl
or
jl
mov
push
movsl
jmp
mov
mov
pop
fnstcw
sbb
or
push
fldl
jno
int3
clc
test
aad
add
shl
stc
cmp
and
pop
into
fistps
add
pusha
shrl
xchg
orl
jb
and
outsb
fisttpll
mov
sahf
dec
sub
call
or
sub
roll
mov
rcrl
outsb
pop
stos
or
mov
sub
jo
div
add
mov
stos
adc
push
pop
das
mov
ljmp
mov
jecxz
out
sahf
xchg
jmp
ljmp
mov
jge
fisubs
dec
jb
je
mov
pop
cmc
pushf
mov
test
jo
push
push
test
pushf
out
jecxz
and
fxam
jns
cmp
cmp
cwtl
pop
mov
lock
lods
jb
sub
push
bound
jns
fs
cmpsl
push
push
mov
cs
das
test
std
out
cmp
into
loope
std
stc
in
xchg
push
inc
sbb
in
push
pop
push
cmpsb
in
rolb
adc
insl
xor
lods
dec
cltd
fsincos
cmp
out
hlt
or
push
add
xchg
rcrb
xor
loopne
add
mov
mov
loope
jle
sarl
sti
pushf
jmp
cmp
idivb
push
xor
xchg
sub
sbb
jmp
cmp
push
xchg
push
ficomps
stos
ret
mov
xchg
xchg
out
ja
shll
inc
out
ljmp
into
dec
adc
arpl
stos
icebp
cmp
mov
mov
popf
daa
sbb
iret
int3
push
in
jecxz
gs
out
jae
push
adc
cmp
sbb
mov
into
pop
jecxz
cmp
ds
sbb
inc
mov
adc
push
mov
faddl
sarl
call
sbb
adc
push
fs
fimuls
cs
push
jbe
or
ss
push
in
loopne
mov
es
or
mov
leave
iret
cmp
ds
seta
jecxz
inc
sub
ja
push
cmp
test
cli
pop
push
pop
push
pop
xchg
fcompl
ja
mov
pop
ss
sti
mov
pop
mov
pop
xchg
dec
call
pop
jb
popa
or
fadd
or
scas
pop
push
cs
fwait
xchg
push
aaa
test
cmp
cmovle
bound
adc
mov
or
pop
rorb
add
ret
lock
pushl
das
insb
mov
xchg
jl
mov
push
pop
hlt
pop
mov
mov
repz
sub
fbstp
and
test
dec
rorl
and
ret
andb
mov
push
push
test
je
enter
ret
test
cmp
sbb
mov
js
addr16
call
mov
push
jb
mov
negb
sub
movsb
lods
leave
popf
mov
es
xor
xor
fstpt
xor
push
push
add
movsl
repnz
mov
jg
xor
ss
lret
pop
pusha
aaa
movsb
outsb
sbb
mov
fwait
dec
movl
xchg
lret
pop
push
ror
xchg
push
sbb
mov
push
fnsave
popa
sbb
cs
mov
repnz
into
pop
nop
inc
jge
xchg
inc
sbb
pop
fisubl
push
movb
ljmp
stos
pop
jns
lds
shrl
daa
jne
push
and
cmp
cmpsl
andb
add
sbb
push
insb
es
mov
mov
pop
jmp
cli
mov
inc
loop
pop
add
jmp
pushf
and
cmp
js
adc
aas
or
xor
jmp
or
je
inc
mov
fcmovbe
mov
add
les
pop
lods
lret
and
fcmovbe
cmpsb
sbb
mov
stos
cmc
loopne
ja
sbb
repnz
dec
shlb
insl
test
pop
lret
sub
sub
jae
and
xchg
in
negb
icebp
repnz
push
sbb
fnstsw
ret
mov
clc
mov
lock
scas
aaa
icebp
push
scas
scas
xor
mov
mov
mov
xchg
mov
stc
mov
movsb
and
cmc
and
addr16
jecxz
insb
icebp
insb
push
push
mov
jo
cld
enter
pop
les
jp
insb
mov
dec
pop
decl
adc
push
xor
and
popf
loop
enter
cmpsb
pusha
mov
int3
push
push
xor
jne
push
dec
jo
adc
popf
ljmp
or
and
ficomps
imul
pop
and
sub
inc
aam
test
dec
je
mov
aas
sub
sbb
adc
sub
enter
xchg
push
rolb
xchg
lahf
push
mov
ja
jo
sbb
mov
inc
xchg
arpl
or
dec
fdivr
test
test
loope
nop
and
out
jmp
rol
test
aaa
das
mov
mov
push
dec
add
pop
lret
adc
push
bound
push
das
push
aas
pop
daa
mov
stos
adc
test
cli
or
sub
add
daa
lahf
mov
cmpsl
mov
nop
inc
inc
or
decb
sbb
mov
gs
out
cmpsb
test
icebp
retw
adc
push
les
in
or
popf
jb
subb
add
orl
inc
jns
repz
jg
fidivrs
jo
lret
lods
sbb
popa
add
in
mov
int3
sbb
push
test
shlb
push
jo
push
mov
mov
pusha
xchg
add
in
sbb
gs
jb
mov
and
insl
xchg
out
ffree
pop
mov
mov
xchg
pop
sub
inc
cmp
push
adc
mov
sub
add
fucomip
mov
jp
fdivrp
scas
mov
shrb
hlt
add
fnstsw
xlat
mov
dec
jns
daa
leave
ljmp
xchg
cld
imul
in
test
aad
jecxz
cmpsl
addr16
mov
stos
shll
dec
xor
adc
loopne
dec
pusha
movsl
and
stc
test
es
insb
jns
outsb
and
push
jnp
mov
and
cmpsl
cmpsl
pop
outsl
xchg
fsubl
sbb
mov
sbb
fstp
xchg
cs
push
ret
mov
sub
and
jmp
shrb
cvtpi2ps
je
movsl
in
xchg
mov
inc
xor
mov
orb
push
data16
adc
sarl
sti
adcl
testb
add
cs
in
push
jg
fwait
or
sub
lcall
pop
sarb
mov
gs
call
pop
aad
jecxz
xchg
push
cmpl
inc
sarb
inc
cmp
jge
pop
mov
mov
out
das
add
xor
xor
pop
fwait
dec
jmp
loopne
xor
jae
mov
aas
or
mov
push
int3
sbb
xor
sbb
jno
adc
and
pop
cli
jecxz
fildll
push
das
cmpsb
fwait
xchg
adc
mov
push
cld
or
cld
mov
dec
sbb
dec
movsb
cltd
imul
push
scas
xlat
push
cld
das
nop
mov
insb
push
pop
stos
lahf
cmc
cld
sub
pop
out
fiaddl
mov
test
test
mov
rcl
mov
movsw
arpl
jbe
popa
xor
jl
and
int3
fcoms
icebp
sbb
jno
sarl
mov
add
mov
push
in
ljmp
subl
xchg
jmp
push
aas
in
and
pop
mov
popf
xchg
and
sub
jmp
xorl
and
pop
cwtl
adc
xorl
push
push
movsb
les
push
dec
lods
pop
arpl
mov
mov
or
inc
xchg
in
cmp
xor
movsl
pop
sti
mov
jo
roll
xchg
mov
cld
popf
or
pusha
push
sahf
test
pop
in
mov
insl
nop
xor
arpl
adc
jno
in
sub
fimull
aam
xlat
push
iret
hlt
push
ret
push
jnp
mov
add
pusha
xorb
push
push
lods
ljmp
and
xchg
aam
sub
or
cmp
push
xchg
sub
inc
mov
iret
icebp
cmpsl
movsb
setge
xorl
sub
and
mov
mov
push
cld
cmpsb
sbb
cwtl
fldl
push
push
inc
lods
insb
mov
mov
insb
dec
cltd
pop
jecxz
push
jecxz
push
pop
insb
rclw
sub
jmp
iret
rcrl
or
xlat
mov
xorl
inc
mov
inc
cwtl
scas
pop
rcrb
push
and
adc
stos
loop
imul
cmp
adc
lret
lcall
mov
xchg
out
stos
fs
and
loope
cmp
mov
adc
mov
leave
ljmp
and
cmc
aas
xchg
lcall
xor
pop
pop
scas
push
xchg
out
mov
adc
out
lea
pop
mov
sub
and
xor
lock
out
mov
fcomps
js
jp
push
es
jae
rcr
sbb
mov
dec
add
dec
ret
insl
mov
mov
mov
adc
pop
dec
push
jp
in
into
call
insl
mov
addr16
fadds
ja
daa
mov
mov
dec
cmp
dec
mov
xchg
pop
lea
lcall
sbb
add
clc
mov
enter
clc
cli
cli
movsb
push
push
loop
in
dec
jae
sub
icebp
mov
jb
inc
ljmp
jne
sti
sbb
leave
push
js
xchg
nop
das
pop
lcall
test
insb
pop
adc
pop
dec
adcb
or
jnp
mov
imul
stc
add
push
div
repnz
pop
jmp
fs
in
sub
jnp
ds
int
mov
cmpsb
jo
sub
out
push
nop
in
or
lds
adcl
mov
lcall
sbb
xchg
jl
xor
aaa
arpl
sub
into
outsl
jo
cmpsb
xor
pusha
mov
std
das
insb
cwtl
cwtl
outsb
xchg
jmp
pop
pushf
nop
fcomp
push
ret
rcl
and
fnstenv
sbb
addr16
leave
inc
lcall
stos
dec
pusha
enter
cwtl
mov
mov
lds
adc
ds
sbb
arpl
adc
mov
add
enter
idivl
ret
rorl
push
test
cltd
mov
push
scas
and
and
mov
clc
and
jne
loope
imul
test
popf
xchg
and
xlat
sarb
incl
push
or
cmp
insl
jge
xchg
xchg
xchg
fmull
mov
aam
adc
push
notl
mov
mov
pushf
push
jnp
sub
test
xchg
fwait
cmp
pop
cld
lock
into
repz
xchg
jle
stc
mov
aam
sub
sbb
mov
and
or
jae
mov
add
imul
inc
int
xor
mov
out
js,pn
dec
mov
test
lea
push
mov
sub
sbb
sub
cmp
mov
inc
sti
xchg
push
inc
in
sub
inc
mov
scas
pop
sbb
repnz
sbb
xchg
ljmp
cltd
push
xchg
mov
push
lods
jmp
les
testl
stc
in
ret
pop
je
cld
xchg
mov
pop
dec
and
jge
fistps
mov
mov
sub
cmc
insb
mov
daa
out
pop
shr
mov
mov
jne
mov
jne
jno
xchg
xor
aad
and
mov
push
inc
xchg
mov
push
rclb
sub
pop
adc
test
xchg
std
ss
pop
std
ficompl
and
jno
mov
jo
iret
xchg
in
in
mov
pop
test
jo
cmp
stc
xchg
inc
jmp
sti
gs
cmp
cmp
mov
xchg
in
cmp
orb
shrb
sub
loope
jnp
bound
dec
cmp
mov
mov
cmpsb
and
jno
mov
cmp
push
dec
jl
jo
xchg
pushf
mov
ret
and
mov
push
mov
inc
enter
imul
pop
cltd
xchg
jmp
push
mov
jle
adc
jecxz
jle
rclb
push
mov
mov
mov
jmp
push
andb
les
fldcw
fcom
dec
movsb
roll
in
js
push
xor
jbe
inc
inc
xorl
into
iret
data16
cwtl
jbe
ss
add
dec
cmpsb
pop
mov
adc
stos
aaa
stc
push
dec
adc
int
and
js
mov
bound
daa
jbe
andb
fldt
dec
in
sbb
add
ljmp
lss
mov
or
std
inc
xchg
enter
mov
hlt
dec
jo
jge
movsb
inc
dec
dec
in
push
leave
cmp
sbb
xor
repnz
inc
pop
data16
aad
xor
mov
xchg
adc
icebp
add
loope
jl
aad
jmp
ja
cld
add
shlb
and
fdivrl
and
dec
out
push
test
mov
xchg
add
sbb
sbb
andl
xchg
jns
lea
aam
mov
sub
imul
push
xchg
sbb
push
or
inc
cltd
aam
out
int
jp
add
dec
jnp
je
sub
ret
xor
data16
loopne
js
clc
jnp
xchg
xor
cmp
mov
adc
mov
mov
adc
js
xchg
sbb
jb
jmp
push
sahf
or
pusha
inc
sub
pop
cmpsb
pop
mov
inc
imul
icebp
jo
inc
push
ja
xor
pop
aam
or
insl
stos
adcb
pause
xchg
adc
add
add
push
adc
dec
es
sub
lahf
nop
jae
and
cwtl
pusha
je
mov
lahf
xor
ffreep
and
sub
clc
and
push
idivb
mov
and
push
das
jmp
xlat
dec
pop
and
pop
dec
js
mov
cmp
inc
std
bound
mov
xchg
push
mov
cmpsl
outsb
jne
jne
xchg
jbe
mov
inc
cld
xchg
lahf
push
lods
negl
mov
push
rolb
ljmp
adc
jo
inc
fsubrs
mov
cmp
or
mov
or
or
in
and
jb
fldenv
test
rcr
adc
mov
outsb
xchg
cmp
and
stos
pop
inc
xor
sbb
mov
fadds
dec
dec
or
mov
mov
xor
mov
pop
add
xor
fcmovb
sub
dec
arpl
leave
pop
rcll
rorl
lods
fcoms
cmc
mov
pusha
jl
mov
das
imul
lods
add
push
push
or
sahf
jecxz
stos
mov
mov
data16
addb
pop
push
lret
jno
rol
push
popw
dec
aam
sahf
scas
sub
cmpsb
mov
mov
jle
xor
sub
pop
sub
push
sbb
adc
push
or
fcmovnu
pop
cmp
jg
es
push
fwait
popf
sub
adc
mov
clc
ss
and
mov
jns
push
and
lret
jmp
xor
and
leave
pop
cmp
adcl
scas
inc
arpl
add
ror
and
jno
ds
jae
lcall
leave
repnz
fsubrl
out
xor
shll
jg
jbe
dec
fwait
mov
jg
mov
and
mov
sbb
movsb
mov
inc
inc
js
or
inc
in
pop
jmp
popf
jl
in
mov
shll
sarb
cli
adcl
mov
push
outsl
shlb
mov
or
mov
or
int
pop
stos
stos
rcll
cmp
stc
sahf
out
shrb
je
lcall
ja
lret
mov
pop
jo
out
fdivrl
or
adc
mov
aaa
xor
lock
push
or
insb
jl
imul
mov
test
rcr
cltd
cmpb
and
pop
xor
push
outsl
pop
jmp
xchg
arpl
div
jl
push
dec
mov
mov
mov
iret
arpl
mov
rcl
mov
sbb
cld
mov
push
es
add
push
dec
outsl
outsb
push
push
jle
out
cmp
dec
inc
jns
lds
xor
adc
mov
mov
cmpsl
ja
and
test
out
pop
aam
xchg
sbb
fisttps
sbbl
cmpsl
and
sbb
mov
mov
sub
divl
jg
and
cmp
lds
push
nop
cmc
inc
into
sbbl
adc
adc
fcomip
iret
fcoms
mov
scas
jge,pt
dec
aad
outsl
inc
jne
aas
mov
pop
insl
adc
or
push
jmp
ss
cmp
xorl
lods
dec
jne
adc
stc
aaa
inc
je
lods
cld
and
push
xchg
lea
mov
cmpsl
push
cmpsb
lock
pushf
mov
cld
scas
shll
inc
jo
out
mov
pop
mov
fmul
daa
push
push
mov
fs
data16
and
rcr
fsubr
ss
in
xchg
xor
xor
and
adc
sub
jne
push
cwtl
shlb
aam
fidivs
jae
sub
add
das
iret
xor
movsl
sub
aas
pusha
stos
andb
testl
lahf
xor
sub
or
addr16
test
mov
mov
sbb
cs
outsl
adc
sahf
xchg
mov
push
icebp
rolb
xchg
push
enter
call
dec
sbb
mov
mov
mov
pusha
in
sbbb
push
int3
insb
arpl
mov
sbb
jae
mov
cmc
mov
xchg
mov
cmp
xchg
mov
dec
cmpsl
je
daa
andl
inc
jns
jae
ja
mov
lahf
cmp
xor
js
scas
inc
adc
pop
pop
fdivrl
mov
jnp
mov
test
or
dec
mov
loope
push
lods
cli
ret
fidivrl
test
jp
or
and
rclb
mov
shlb
vmptrst
mov
ja
pop
push
and
mov
fists
dec
call
or
mov
sub
mov
mov
xlat
std
les
xchg
or
test
push
pushf
pop
cmpsl
test
pop
or
inc
movsl
mov
jecxz
loopne
xor
popf
xchg
sbb
pushf
or
leave
mov
ljmp
adc
push
cmp
xor
xchg
jmp
adc
jbe
sbb
shlb
lcall
cmp
jge
jle
shrl
aam
and
movsb
pusha
int
jbe
les
push
nop
sbb
lahf
fstl
and
sahf
das
bound
mov
aad
nop
int
push
sti
sub
fnstsw
int
loopne
pop
data16
stos
bound
cmp
mov
mov
outsl
jmp
mov
mov
pop
stos
mov
jae
or
pop
sti
js
cmpsl
js
or
jo
push
mov
test
adc
mov
stos
add
xor
call
repz
fwait
sub
pop
dec
in
aas
pushf
cmp
push
imul
es
testb
push
push
jle
repnz
adc
out
jl
pushf
stos
std
adc
adc
shll
aas
rolb
imul
add
or
mov
pop
int3
arpl
or
shll
hlt
xor
and
mov
inc
or
mov
jae
xchg
divl
test
or
mov
jge
leave
cmp
mov
out
pop
stos
imul
push
jge
pop
mov
inc
lcall
clc
aam
bound
sti
test
lea
mov
mov
into
jbe
int3
ds
cmpb
inc
jp
mov
inc
stos
shr
jle
xor
push
push
sbb
and
mov
and
sub
shrl
xlat
jl
sarl
movsl
out
pop
push
push
inc
fsubs
das
mov
xchg
in
xorb
jge
sub
mov
xchg
pop
jmp
and
scas
xchg
dec
push
push
jg
dec
cmpsb
push
pop
or
cmp
push
insl
nop
or
mov
sub
mov
push
or
mov
iret
nop
xchg
xchg
in
out
mov
pop
insl
or
jl
dec
push
dec
sarb
repnz
stos
imul
dec
cltd
cmpl
mov
sti
stc
test
mov
ds
sub
and
sbb
andl
xchg
pop
jmp
mov
adc
loopne
sahf
jmp
xor
jae
or
mov
inc
add
jno
sub
sub
sub
cmp
dec
loope
cmp
mov
push
mov
rcr
inc
punpckhwd
jb
test
lea
or
gs
mov
lcall
dec
minps
xchg
in
sub
and
jae
js
popf
outsl
jecxz
jecxz
test
sbb
sahf
or
ret
stos
stos
lods
jl
mov
std
push
xor
cwtl
dec
xchg
push
sarl
mov
jne
out
scas
ss
or
jp
pop
push
and
stos
test
xor
push
lret
push
xchg
mov
mov
pop
int3
inc
xchg
decb
inc
std
cmp
loopne
push
jo
inc
leave
ret
cltd
push
sub
cmp
jp
mov
xor
or
repnz
cltd
lret
aad
cld
idivb
inc
add
push
add
lret
sti
jb
xor
cs
adc
loopne
and
push
mov
popf
rorl
pushf
stc
mov
jmp
sbb
cmp
add
mov
enter
cs
pop
fcmovu
dec
sbb
pop
test
in
adc
inc
mov
xchg
popa
inc
stc
je
nop
cltd
push
les
sub
xlat
add
dec
inc
xor
dec
jo
repz
mov
pop
leave
sbb
push
lds
fs
fmuls
sbb
inc
test
sbb
or
rorb
stc
in
cmp
test
push
movsb
fnstenv
dec
in
adc
das
pop
pop
addr16
cmp
inc
dec
int
out
repnz
mulb
mov
mov
movsl
xchg
or
push
cmp
jnp
mov
mov
addl
dec
sub
aas
adc
push
push
jno
movl
daa
xchg
pop
lock
pop
int3
fcompl
and
xchg
insl
jmp
loop
mov
mov
cmp
call
int3
mov
out
sbb
in
cs
fcmovnu
mov
push
cmp
mov
ret
inc
mov
mov
xor
enter
sub
in
cwtl
add
jbe
mov
daa
sub
enter
movsl
pop
mov
int3
arpl
lds
adc
mov
lea
mov
aas
pop
push
or
addb
out
decl
inc
jge
jge
icebp
int3
call
call
mov
movsb
int
xchg
jbe
bound
aad
fdivl
cmp
fs
xchg
cs
addr16
lods
mov
aad
push
and
sub
cmpsb
jmp
fsubl
out
push
ds
ret
cltd
xchg
stos
lock
ljmp
cmp
ret
mov
dec
xchg
jns
add
or
and
mov
jl
xchg
jmp
or
insl
lods
flds
or
xchg
jge
xor
sub
sub
mov
jmp
fwait
pop
jno
sahf
imul
jne
xor
outsl
insb
fcoml
jg
xlat
xchg
test
call
cs
sbb
jmp
pop
mov
fmul
stc
into
or
aaa
xchg
stos
push
ss
push
jo
add
repnz
jecxz
repnz
test
push
lret
pop
dec
mov
add
cli
and
push
rolb
cmp
sub
fs
adc
xlat
push
add
mov
mov
adc
xchg
repnz
out
fcoml
jle
idivl
pop
add
iret
stos
jae
imul
outsb
cmpsl
ds
jnp
int3
push
cmp
jno
or
jo
fs
xorb
jnp
add
sbb
das
cli
mov
adc
jl
loop
sti
pmulhw
adc
xchg
or
fiadds
aad
or
bound
cmp
cmp
mov
movsl
dec
fnstsw
fnstcw
pop
ss
cs
movsl
cmp
fmull
jo
xor
cli
lds
mov
pop
rcrb
loopne
shr
bound
push
shrb
add
cmp
mov
dec
cmp
sbb
push
push
loop
clc
inc
jp
outsb
cmp
mov
jbe
mov
test
icebp
ret
adc
ss
decl
and
mov
dec
mov
inc
loope
iret
in
lcall
mov
sbb
dec
or
jle
addr16
and
imull
fwait
icebp
jl
les
pop
je
cmp
lcall
test
inc
subb
adc
push
into
out
cmpsl
jg
mov
sub
inc
subps
andb
shr
and
fwait
ja
inc
int
xor
xchg
pop
cmp
dec
sub
or
pop
lea
mov
jmp
loope
add
lea
rcll
lahf
mov
xchg
cld
push
mov
xor
xchg
enter
pushf
add
je
sahf
ds
push
movsl
cmp
in
adc
cli
xor
mov
mov
mov
bound
push
mov
xchg
xchg
sahf
sub
add
stos
mov
cmpsb
mov
loop
mov
out
fidivl
idivb
je
popf
sbb
out
pop
les
dec
or
add
mov
in
pop
iret
aas
mov
pushf
mov
and
xchg
fs
mov
push
sbb
cmpsl
ret
jnp
mov
cmp
loop
dec
sbb
imull
pop
xor
mov
es
mov
xchg
in
lods
enter
shlb
outsl
movsb
mov
or
sahf
sarb
xchg
imul
mov
push
pop
jb
inc
faddl
sbb
fmull
push
xchg
or
cltd
lods
mov
cmp
jb
lcall
call
fs
jl
xchg
or
xor
xor
or
out
loope
cmp
cmpb
sbb
aam
inc
jmp
sbb
mov
bound
es
jnp
loopne
xchg
cmp
dec
ret
mov
mov
shll
call
mov
or
sbb
or
popf
mulb
pop
out
cmp
push
push
sbb
aaa
lcall
push
or
sbb
xchg
movsb
pop
enter
ds
xorl
jle
aas
add
inc
lods
test
dec
int
dec
dec
outsb
fsubl
pushl
push
jae
out
ffreep
mov
jl
in
lahf
sbb
ss
les
pusha
push
shr
sbb
mov
addr16
xchg
jne
push
fildl
xchg
ds
mov
aaa
rolb
cmpb
les
ja
cmp
jle
fsubs
xchg
jg
jle
xchg
cmp
mov
xchg
or
pop
mov
hlt
data16
loopne
sub
dec
fsubrp
mov
cmp
or
aam
imull
repz
push
lods
insl
test
adc
loopne
jl
and
fdivrp
cmp
inc
ss
mov
inc
insb
jns
ret
dec
shrb
pop
sub
pop
push
icebp
xchg
outsb
incl
negl
in
dec
mov
xchg
jbe
inc
cmpsb
mov
lods
add
and
sbb
jno
cmc
scas
bound
dec
imul
outsb
xlat
mov
sbb
xchg
add
pop
imul
mov
lret
jnp
mov
in
movsb
dec
xor
call
cwtl
jnp
fwait
xchg
pop
js
inc
std
clc
dec
cmpsb
mov
jnp
dec
jg
lods
mov
xchg
lds
pop
gs
push
ljmp
mov
xchg
cwtl
insb
sahf
sbb
leave
or
aad
imul
push
in
lods
mov
fldl
sub
adc
das
in
out
and
and
shlb
out
jo
insl
sub
xor
pop
and
jo
lods
dec
in
fwait
std
rclb
stc
arpl
and
pop
shlb
in
pop
cs
mov
sbb
jno
loop
ds
adc
adc
xchg
pop
lcall
push
mov
sbb
imul
cltd
data16
inc
test
push
repnz
mov
xor
dec
ljmp
js
in
pop
add
stos
pop
mov
out
xchg
cwtl
pop
jle
and
sub
fisubrs
icebp
arpl
sub
inc
fwait
loop
insb
fisubrl
mov
pop
aam
push
sbbl
rcl
lahf
fisubl
jbe
js
sbb
pop
pop
addr16
cmp
mov
xchg
into
test
in
and
aam
pushf
xor
sbb
mov
sub
div
pop
jecxz
pusha
jg
lahf
movsb
jle
jnp
sbb
mov
mov
lcall
pop
and
test
jg
imul
fiadds
mov
sbb
loop
lret
pop
sbb
mov
inc
jne
fdivl
jo
lret
fs
iret
or
call
mov
cwtl
stos
xlat
insb
fistpl
jb
iret
mov
sbb
push
gs
push
jnp
outsl
inc
dec
stos
xchg
ja
div
leave
push
pop
add
outsb
insb
insl
inc
scas
xchg
call
out
ss
lods
repz
sbb
cmc
or
popa
pop
push
pushfw
out
cmp
xchg
dec
mulb
xor
xor
js
fs
dec
xor
rcll
cwtl
mov
and
pop
mov
dec
fsubr
mov
lds
jl
imul
adc
dec
and
adc
xor
out
dec
push
adc
inc
subl
aam
inc
js
lahf
mov
push
push
data16
sarb
mov
mov
inc
or
call
cmp
pop
push
dec
adc
loopne
out
into
stos
inc
rol
pmuludq
or
sub
out
lea
xlat
cmpsl
test
jl
xor
push
mov
add
sub
pop
cmp
or
pop
mov
pop
jmp
add
popf
mov
insl
sahf
sub
pop
mov
sub
xchg
xchg
push
pop
lock
js
cmp
in
iret
ret
adcb
pop
stos
addr16
sti
cltd
and
inc
lods
and
adc
shl
sbb
push
ljmp
add
xor
mov
sti
cmp
rorl
add
call
dec
xchg
cmp
decl
movsl
sub
push
pop
xchg
repnz
cmpsb
mov
or
mov
loop
gs
cld
pop
xor
cwtl
sahf
or
sbb
dec
xchg
enter
pop
sub
pushf
sub
pop
pop
sti
repz
mov
push
cmp
push
push
inc
jg
test
sub
sti
inc
jmp
push
shr
adc
pop
mov
xchg
imul
fst
loop
pop
aam
addr16
lods
push
jno
aaa
push
jle
and
jne
pop
iret
adc
xor
xchg
insl
rorl
jne
mov
inc
cmp
outsb
push
jne
je
add
and
div
rolb
pop
mov
xor
mov
outsb
dec
and
push
movl
sub
jb
pmaddwd
shr
and
dec
test
ss
xchg
popa
pop
push
inc
ja
jb
or
scas
das
push
xor
push
mov
dec
mov
xchg
inc
jo
push
rcrl
shll
test
addl
rcrl
loopne
mov
sub
push
xchg
sbb
mov
pop
mov
in
push
cmpl
or
pop
pop
and
mov
pushaw
or
sbb
rorl
sbb
aam
add
push
or
xchg
lahf
stc
arpl
jecxz
xchg
fdivl
xor
iret
cmp
sbb
mov
mov
xor
add
xlat
stos
sahf
mov
push
sbb
xchg
or
sub
repz
mov
mov
inc
or
or
cmc
lret
mov
mov
cmp
push
loop
mov
mov
xchg
pop
push
aaa
dec
pop
jle
sub
call
mov
popf
outsb
push
cmp
shrb
ret
ret
lods
in
imul
fstl
or
pop
nop
push
lcall
add
movsl
lret
or
jo
jmp
sub
loopne
sbb
or
jae
cmp
xor
add
jle
push
sub
xor
stc
lret
or
xor
rol
pusha
xchg
mov
inc
imul
push
xor
divb
push
stc
icebp
sar
je
shll
dec
xchg
outsb
subl
mov
call
cmp
add
and
and
lret
dec
jns
cli
adc
insb
movsl
mul
sub
or
xchg
cmpsl
shll
aas
push
stos
scas
lahf
or
lods
scas
popf
mov
ss
and
inc
sar
int
push
sbb
repz
push
rorl
je
or
lahf
mov
mull
sti
mov
nop
movsb
pop
adc
scas
mov
ja
or
push
test
pushf
test
or
xchg
xlat
out
mov
jo
xor
mov
adc
push
mov
lret
fwait
dec
mov
xchg
daa
pop
fcoml
pop
popl
in
and
xchg
mov
xchg
scas
cli
jp
jge
pop
inc
inc
shrl
bound
repz
or
pop
cwtl
pop
ljmp
add
push
cmpsb
pop
int
pop
cli
pop
mov
xchg
add
jne
or
imul
fnstcw
add
mov
adc
imul
or
in
lret
adc
movsb
leave
lea
nopl
inc
mov
pop
pop
and
pop
jmp
inc
jge
add
xor
lea
push
iret
and
aad
call
push
int3
sahf
mov
and
and
les
pop
and
xchg
or
or
pop
xchg
fcompl
enter
cli
in
sub
add
daa
push
sub
pop
and
mov
ret
sbb
mov
out
mov
outsl
inc
pop
pop
and
inc
shlb
sbb
sbb
cli
adc
cmp
je
scas
lea
and
addr16
push
dec
push
cmp
mov
or
outsb
es
adc
shlb
insl
cltd
jno
pop
add
adc
loopne
push
repz
inc
pop
fs
xchg
inc
arpl
les
fwait
xchg
test
stos
sbb
mov
repnz
lods
mov
in
outsb
mov
mov
push
lahf
lret
mov
pop
or
jmp
push
lcall
repnz
sub
or
jg
int3
add
or
popf
lea
std
mov
xor
sub
adc
out
adc
pop
daa
fnstsw
and
xor
add
add
es
cmp
push
add
in
jp
mov
add
add
jl
into
pop
js
adc
lahf
sub
rcrl
inc
mov
lahf
sub
add
push
adc
mov
inc
mov
xchg
push
ss
rdmsr
and
push
jb
pop
xor
int
sbb
sub
and
lods
add
sbb
push
mov
xor
int3
fs
xor
and
pusha
push
mov
mov
dec
jbe
insb
cmpsb
sub
push
scas
xchg
push
pop
scas
xor
mov
lods
idivb
sbb
add
pop
xchg
cmp
das
inc
jecxz
xor
inc
lcall
add
pop
in
sbb
add
mov
lods
js
dec
lods
mov
xchg
in
push
xor
push
loopne
pop
jmp
sub
jo
push
divb
int
push
test
pushf
mov
pop
push
push
sti
sub
out
fcmovb
dec
fsts
pop
int
xchg
push
sub
fistpll
mov
aaa
pop
in
call
dec
ret
add
pop
enter
cmpsb
add
arpl
aam
les
pop
repz
pop
cmpsb
add
adc
enter
mov
test
dec
pushf
ljmp
pop
bnd
into
ss
test
lock
repnz
cmc
repz
pushf
out
call
inc
lods
mov
cmp
fisubrl
jmp
jbe
andb
pushf
sbb
dec
pop
imul
xor
fsts
lcall
in
sti
jge
or
mov
int
loope
or
ret
das
jg
insb
pop
inc
mov
ja
pop
xor
fstpl
rcl
push
push
and
lock
sbb
mov
test
loopne
int
pop
push
imul
cmp
aam
shrb
ja
mov
dec
adc
jp
push
out
mov
mov
push
cmp
lods
mov
cmc
sbb
sahf
push
movsl
sahf
in
cmp
bnd
mov
mov
mov
mov
ret
mov
cltd
push
lds
push
cmp
mov
pop
lret
mov
push
pop
push
outsl
jns
push
ret
and
add
jo
shrb
mov
dec
daa
movsl
ret
repnz
inc
movsl
lret
sub
ss
lds
ja
xor
std
jae
add
subl
es
cmpsb
mov
jg
addl
sti
cwtl
test
push
xchg
cwtl
icebp
add
aas
scas
fsubr
sbb
jecxz
jb
mov
leave
mov
or
movsl
inc
push
xor
inc
and
int3
xchg
lahf
bound
popf
pop
xor
js
mov
push
test
cmp
sub
mov
sbb
test
mov
hlt
cmp
sbb
sbb
xchg
lock
jle
das
sbb
mov
loop
cmp
and
mov
sub
in
mov
add
ja
in
xchg
push
push
sub
and
or
xchg
inc
in
ret
out
imul
jo
mov
sub
lahf
test
jg
inc
cltd
movsb
pop
mov
mov
nop
inc
push
mov
ds
dec
add
pusha
popl
pop
loopne
shr
push
test
jns
sub
sbb
jmp
sbb
xchg
or
lcall
jp
js
fsubrs
mov
sbb
ficomps
or
into
hlt
inc
enter
sbb
testb
outsl
jge
scas
ret
jmp
fdiv
sti
or
or
cmp
lds
inc
xor
adc
jl
sbb
shlb
xor
sbb
mov
mov
sub
int
xchg
iret
or
iret
adc
je
lret
leave
sub
mov
or
pop
xchg
push
inc
xchg
imul
repz
mov
cmpsb
outsb
or
mov
lret
push
sub
imul
imul
xor
mov
or
jae
scas
ret
push
jmp
lret
jae
add
xor
filds
sbb
das
or
jnp
cmpl
sbbl
xor
jg
or
ret
mov
jp
mov
jle
jnp
mov
stos
int
scas
les
repnz
shlb
xor
pop
lcall
lcall
hlt
pop
adcb
push
push
das
push
loop
nop
mov
cmp
cmpb
ja
das
ficompl
sub
sbb
stos
fwait
jne
movsbl
or
or
clc
mov
or
scas
jo
inc
bound
jmp
dec
fsubrs
rclb
or
int
pop
std
fdivl
sub
xchg
cmp
xchg
icebp
jecxz
push
outsb
dec
adc
ficoms
cltd
icebp
add
and
inc
out
lret
sbb
lret
negb
xchg
or
cmpsb
mov
or
dec
repnz
jns
push
enter
outsb
rorl
cmp
lret
and
sub
popa
add
xor
lods
add
adc
pop
lret
mov
mov
inc
clc
stos
gs
and
jle
mov
cltd
ret
sub
jb
jns
xor
xor
xor
addr16
mov
dec
xchg
mov
mov
imul
or
fisubs
jns
jmp
inc
adc
pop
fcoml
and
dec
cmpsl
inc
roll
clc
add
hlt
sbb
loopne
lock
int
in
rcll
dec
out
adc
lock
sbb
or
add
stos
addl
xor
cld
ficoml
imull
dec
jne
sub
push
xor
sub
imul
je
icebp
out
adc
int
dec
inc
mov
jo
pop
mov
inc
jmp
movsb
dec
call
pushf
arpl
imul
jae
into
lds
inc
mov
sbb
in
mov
mov
xchg
sub
sarl
hlt
push
rcll
cmp
cmp
scas
roll
mov
adc
call
push
ss
ds
push
jl
mov
xchg
insb
fs
pop
inc
dec
push
lcall
les
xchg
in
test
leave
jecxz
xor
cld
mwaitx
mov
adc
aas
out
push
shlb
sahf
cmp
xor
push
cld
lods
sbb
stos
mov
les
push
incb
sahf
sub
shl
cwtl
jecxz
sbb
jmp
loopne
cwtl
pop
lock
push
fcom
dec
arpl
repz
aam
les
dec
cmp
nop
out
pusha
push
sahf
mov
cmp
mov
jl
in
and
dec
xchg
mov
aad
jle
out
sbb
movsl
inc
mov
mov
pop
cmc
negl
push
or
push
dec
or
rclb
push
or
or
addb
cltd
mov
mov
jecxz
aaa
fcoms
jmp
fisubs
dec
xchg
mov
fisttpl
repz
emms
sarl
push
sahf
pop
jp
add
lea
rclb
jp
pop
ljmp
leave
xor
jo
sbb
pop
xlat
cmp
loopne
push
fstpt
out
xor
repnz
std
notb
push
jl
xchg
or
cwtl
stc
scas
and
fwait
xchg
fwait
gs
mov
inc
mov
mov
imul
inc
in
mov
imul
sbb
mov
xchg
sahf
add
jnp
jo
aad
jg
es
xlat
adc
inc
lret
sub
xor
or
mov
leave
repz
mov
inc
scas
test
jne
mov
rorb
ficoml
xorl
xchg
mov
push
and
lods
add
jle
testb
sbb
dec
in
out
adc
pusha
xchg
sub
dec
push
ror
dec
scas
jns
leave
cmp
test
rcrb
jmp
lods
jecxz
jle
fst
cmp
mov
clc
xchg
out
cs
sub
jmp
pop
mov
and
xor
inc
imul
inc
mov
jge
loope
dec
push
shlb
int
adc
in
mov
xchg
xchg
movsb
and
fwait
sub
pop
notl
iret
jmp
xchg
mov
mov
test
data16
push
sub
imul
sbb
decb
sahf
adc
loope
inc
inc
idivb
adc
push
inc
fsubl
lods
xor
mov
leave
jb
xchg
in
iret
clc
jg
xchg
jmp
xor
fstl
xor
pop
inc
scas
xchg
addb
jmp
pop
push
aas
mov
int
cmp
scas
and
ret
cmp
cmp
mov
add
je
test
imulb
or
add
in
in
mov
pushf
xor
sub
iret
xchg
incb
add
mov
repz
lret
inc
cs
pop
lahf
push
adc
push
xchg
mov
cmpsb
dec
mov
sarb
repnz
sbb
cltd
sub
mov
adc
jb
inc
fidivrl
stos
cmp
pop
aas
xchg
xchg
sbb
sub
mov
outsl
aaa
jp
out
shrl
out
insb
jmp
rcll
cmp
dec
punpcklbw
adc
dec
lods
xchg
das
lods
xchg
daa
xchg
jge
xchg
loopne
pop
push
mov
sti
popa
cmp
loop
mov
dec
jle
sbb
add
or
loopne
popa
mov
mov
mov
fisttpl
lods
push
loopne
fisubs
xchg
or
inc
add
stc
adc
lods
and
xor
rcl
add
cmp
in
add
enter
int
or
push
add
daa
mov
inc
cmpsb
xor
add
sahf
cmp
xchg
cmpb
sahf
into
popf
or
pop
mov
dec
aam
ja
adc
dec
xor
into
ds
dec
add
xchg
push
pop
xor
outsb
push
sbb
icebp
roll
sub
push
outsb
xor
aaa
sti
push
xor
jl
cmc
adc
mov
sub
dec
js
bound
stos
ret
jb
dec
jae
iret
pop
cmp
test
lret
lcall
push
jae
inc
and
dec
stos
jo
movsl
mov
daa
xor
cmpsb
push
mov
mov
mov
out
clc
imul
aaa
nop
lahf
cld
shll
push
shr
je
out
xor
sub
dec
mov
lds
test
or
xchg
mov
in
cmovbe
call
pop
mov
je
push
call
push
mov
push
rcl
lods
pop
outsb
iret
pop
aad
roll
and
icebp
filds
jno
enter
ss
pop
data16
scas
add
xor
mov
mov
ja
cs
fs
repz
repnz
sahf
lret
fnstcw
cmp
rclb
lock
mov
movsb
jne
add
xchg
daa
gs
test
cmpsl
loop
and
jge
adc
mov
lret
xorb
ds
fucomip
mov
pusha
push
or
jge
adc
not
addl
inc
out
fadd
mov
push
imull
sbbb
mov
lods
mov
push
cmp
outsl
lret
or
lahf
iret
xor
cmp
or
cmp
adc
lret
stos
rcrl
scas
int3
fdivr
or
insb
imul
cltd
add
and
addr16
or
loop
nop
or
lds
ja
adc
pop
jb
push
stc
cmpsb
out
dec
mulb
test
jns
dec
mov
pop
test
stc
fistl
and
rcrb
or
inc
out
xchg
and
pop
imul
sub
pop
mov
push
jle
aam
jecxz
js
inc
push
sub
xchg
jne
movsb
sub
or
sbb
push
mov
push
mov
cmp
dec
hlt
scas
sbb
lcall
pop
and
dec
add
notl
es
jb
pop
test
insl
sahf
or
imul
aam
inc
sbbl
loop
sbb
es
cmp
push
push
pop
push
orl
lods
jno
jmp
add
pop
jns
mov
movsb
adc
jg
xor
std
sub
pop
sbb
dec
icebp
insb
xchg
orb
adc
inc
xor
adc
or
sahf
and
mov
ja
daa
loopne
mov
paddsb
movsl
inc
and
iret
push
mov
inc
leave
out
inc
jl
push
dec
and
and
jbe
sbb
roll
mov
xchg
adc
insl
add
xchg
add
outsl
jmp
push
sbbw
lods
cmpsl
rcll
mov
cmpsb
outsb
insb
mov
int
ljmp
dec
push
shll
arpl
sbb
in
dec
das
mov
xchg
movsb
notb
xchg
jmp
sbb
mov
popf
sub
add
ja
and
pop
xchg
sbb
sub
inc
or
fcoms
test
xor
or
jp
mov
mov
fwait
jne
aas
jae
shll
insb
out
clc
add
jns
xlat
sbb
mov
or
adcl
mov
es
mov
test
or
xchg
and
fcoml
outsb
or
xchg
ja
mov
cmp
add
push
aaa
in
out
cli
cmp
mov
icebp
lods
pop
rcr
out
scas
scas
mov
in
or
inc
add
mov
dec
in
fsubrs
clc
ret
push
mov
mov
popf
push
addr16
add
hlt
out
mov
sbb
cmpsl
sahf
xor
inc
sub
mov
sub
dec
xchg
lahf
xlat
jb
scas
loop
push
rcl
in
repnz
cltd
jbe
stc
adc
sbb
fwait
cmp
jmp
xchg
ss
call
in
xchg
fcmovu
enter
push
xor
scas
in
into
sub
mov
std
outsb
inc
add
xchg
stos
xor
sar
dec
ror
cmp
add
xchg
test
add
pop
cmp
xlat
addl
xchg
popa
sarb
sub
mov
pmaxub
mov
dec
sbb
popf
dec
push
push
dec
push
pop
xchg
push
mov
enter
loopne
xchg
leave
aas
adc
inc
fsubr
sub
jl
mov
xor
jecxz
ret
std
out
cmp
xchg
jmp
adc
adc
arpl
popl
and
fldcw
add
sbb
jae
lret
mov
pop
push
ljmp
push
es
add
mov
mov
mov
xor
xchg
jmp
scas
sbb
addb
pop
ret
inc
ss
je
insb
and
and
cwtl
out
jno
or
lods
mov
mov
cmp
push
jbe
mov
aam
rclb
loop
sub
hlt
xor
pop
cmp
es
divl
mov
ss
lea
or
fdivrl
mov
loop
xor
lods
pop
sbb
mov
fs
dec
inc
inc
mov
pop
mov
sub
sub
call
punpckldq
mov
enter
adc
rcrl
add
insb
mov
ja
pop
shl
ffreep
inc
lret
and
mov
icebp
jnp
cltd
cmp
clc
data16
lock
hlt
pusha
push
rcll
xchg
inc
out
or
aad
insl
js
mov
mov
add
and
sub
jg
pop
pop
nop
popf
in
mov
loopne
jb
cmp
scas
dec
popa
in
mov
inc
lock
jno
inc
cmp
imul
das
rcrl
mov
cmpsl
sub
ret
add
push
sbb
adcl
out
sarb
rol
test
into
inc
fdiv
push
ss
or
sbb
pusha
mov
dec
dec
mov
sbb
pusha
jg
push
fsubs
loop
dec
mov
fistpl
xor
adc
mov
loope
or
dec
je
dec
jno
jp
out
push
adcl
dec
sub
cltd
adc
sbb
mov
mov
xlat
fisttpl
dec
and
data16
arpl
bound
and
lods
or
fs
pushl
push
mov
shlb
push
aad
pop
cmpsb
xor
addl
shlb
sub
or
dec
imul
lahf
lea
sub
cs
xchg
mov
test
int
push
mov
jb
jge
and
or
dec
xor
adc
mull
stos
shlb
mov
mov
sarl
xchg
jecxz
pop
sbb
clc
mov
or
and
lret
testl
sbb
fwait
jmp
push
mov
dec
sub
cltd
mov
lods
mov
les
mov
cmp
or
arpl
cmpl
nop
and
dec
jno
xlat
dec
xor
pop
mov
jp
and
test
xchg
xchg
jl
out
mov
or
jg
fs
rorb
mov
dec
repz
pusha
push
or
mov
cmp
fcoml
rclb
cmp
out
std
mov
es
rcll
adc
pop
xor
dec
cmc
sub
inc
sti
sahf
and
leave
scas
in
lock
mov
nop
fcmove
fiaddl
xchg
fistl
mov
mov
sti
and
data16
pop
idivb
lds
adc
push
cmp
lds
int
lahf
ja
add
fsubr
mov
jnp
pop
dec
mov
cmc
push
dec
xchg
and
cmp
adc
bound
and
out
xchg
or
outsb
scas
cmp
mov
nop
clc
cmp
js
cs
test
mov
stc
aad
negl
cmc
push
xchg
xor
addl
sub
icebp
ds
popf
xor
lret
repz
xor
ljmp
call
leave
loopne
inc
stos
fiadds
ss
push
mov
lods
adc
pop
pop
xchg
mov
test
add
jb
in
cmpsl
in
fwait
mov
mov
divl
mov
sub
cmp
mov
inc
in
add
xor
in
push
cmp
enter
shrb
int
dec
insb
lods
ljmp
lahf
or
insb
test
xchg
inc
adc
sbb
mov
jmp
ss
xorb
rcrl
gs
mov
scas
outsb
fstpt
js
xchg
outsb
pop
fdiv
pop
pop
mov
jnp
imul
fidivrl
repz
mov
cmp
add
cmp
jl
movsb
push
out
pop
pop
lds
jge
call
loop
in
arpl
mov
pop
aas
std
jns
fmuls
add
sahf
out
mov
div
inc
sbb
xchg
inc
pop
enter
jnp
mov
pop
mov
push
push
rorb
xchg
push
mov
cmc
inc
sbb
rorl
test
inc
cmp
mov
and
aam
mov
cmp
int
or
xchg
xchg
insl
pop
push
cs
test
arpl
aam
data16
in
and
jecxz
pop
daa
mov
xchg
addr16
ret
ds
mov
mov
or
jo
lock
daa
sbb
sub
jns
in
ljmp
icebp
adc
pop
aad
pop
mov
push
dec
ds
or
mov
lcall
addr16
ret
push
sub
fisttps
jns
ficompl
xor
lret
adc
adc
sti
loopne
adc
pop
sub
lahf
stc
in
mov
jl
push
lea
js
lock
je
cmovo
pop
inc
lock
fcoml
fsubs
sub
loope
fbstp
mov
mov
add
pop
call
ss
stos
pop
sbb
push
add
cwtl
fstl
loope
in
daa
sbb
or
mov
inc
push
sti
pop
jmp
movsb
and
xchg
cli
sbb
jge
pop
push
or
push
cmc
ret
jb
adc
sarb
cmp
fidivrs
push
clc
push
mov
je
mov
sub
xor
add
mov
dec
xor
mov
add
testl
push
aaa
daa
dec
es
dec
xchg
xor
lods
iret
and
movsl
mov
cmp
popl
sarl
popf
push
push
incl
jbe
addr16
xchg
dec
std
andb
ret
test
flds
rcr
add
sbb
scas
jns
fs
mov
lock
add
bound
mov
imul
lds
jg
cltd
dec
out
cwtl
pop
and
xchg
mov
iret
mov
and
fisubl
xor
das
in
stos
mov
xlat
jne
incb
pop
mov
dec
inc
xlat
xchg
xor
or
imul
xlat
std
cmpsb
jmp
push
ja
into
loop
loope
jg
sub
ds
cmpsb
jb
out
push
aad
sbb
dec
jg
aad
loope
dec
push
dec
push
icebp
dec
and
sub
adc
pushf
dec
xchg
sub
mov
jge
and
es
pop
mov
and
xchg
adc
xchg
lret
and
call
nop
nop
repz
xor
jae
call
in
loopne
mov
push
and
mov
test
not
cmp
lock
adc
aam
xchg
jl
std
bound
loop
push
pop
sti
popa
add
out
fldcw
loopne
dec
sub
xor
mov
add
mov
sbb
jg
test
lret
mov
and
scas
or
xlat
or
adc
and
nop
jmp
adc
in
ret
nop
movsl
test
xor
movsb
repz
push
ret
roll
fldln2
aam
das
inc
and
lret
fabs
mov
mov
mov
mov
jl
ljmp
pop
cmp
aaa
repnz
dec
sbb
into
pusha
adc
stc
xchg
popa
scas
int
sahf
int3
mov
push
jecxz
lds
leave
je
fiaddl
jmp
aas
and
ret
sbb
or
popa
mov
push
fwait
arpl
sti
mov
call
in
dec
jmp
xor
fstpl
inc
je
rcrb
jg
inc
orl
into
mov
or
in
adc
test
adc
cmpsb
pop
ficoml
and
arpl
or
inc
iret
jbe
sbb
xor
jno
cwtl
int
leave
mov
fsubrl
aaa
mov
add
ss
xchg
div
push
repz
out
push
aas
sub
sbbl
data16
outsl
rolb
lret
popf
ret
cmpsl
mov
aam
mov
fisttps
test
jecxz
dec
repz
mov
iret
test
inc
mov
gs
sub
xor
orl
shll
push
and
fsubrs
pop
push
cmpsb
sub
sub
sub
fcomp
pop
test
or
scas
lahf
push
or
pop
adc
daa
scas
pop
jns
leave
mov
pop
ss
adc
mov
je
sbb
sarb
into
in
mov
push
xor
rcrb
pop
fsts
mov
call
out
cmp
inc
mov
and
adc
xorl
aaa
dec
pop
ss
jge
jbe
outsb
or
nop
iret
pop
mov
dec
das
push
subb
ss
out
adc
js
cmp
movsb
in
jp
scas
test
in
stos
jae
cmpsl
mov
lock
inc
mov
cmp
push
scas
clc
push
js
in
cltd
sbb
jge
ljmp
aad
xchg
lahf
pop
cmp
xor
jg
or
lods
in
stos
xor
rcll
cmc
cmp
nop
xor
popf
sbb
or
xor
outsl
gs
lock
popa
push
add
loopne
mov
and
ret
mov
lock
orl
jmp
or
popa
test
aaa
xchg
mov
scas
sbb
std
mov
push
jmp
push
push
je
pop
std
aam
fnsave
loopne
push
pusha
jle
add
pop
cmpb
fiadds
sbb
ficoms
stos
dec
mov
nop
clc
inc
cmp
mov
in
push
pop
xchg
pop
dec
mov
mov
loop
and
bound
jno
cltd
sarl
xchg
mov
xchg
mov
repnz
adc
mov
mov
mov
mov
test
adc
xchg
out
push
pop
lretw
repnz
lret
test
movsl
push
je
inc
jp
mov
bound
out
mov
mov
jl
push
sub
jns
jnp
testl
mov
jg
out
gs
es
inc
add
fwait
xor
dec
inc
mov
test
mov
fs
xchg
mov
stc
mov
aaa
mov
ret
xchg
jl
imul
std
cs
inc
mov
cmp
or
lods
ja
decl
scas
addr16
mov
mov
xor
dec
stos
sbb
add
lret
out
cmp
int3
jae
imul
adc
jg
mov
shlb
mov
repz
inc
pusha
test
add
lea
mov
in
add
pop
mov
test
lahf
das
in
mov
lcall
imul
out
cmp
aad
xor
add
push
sub
and
adc
test
mov
xchg
into
and
stos
mov
xchg
dec
ds
inc
adc
rcll
fisttpll
cmp
xchg
sbb
mov
scas
mov
testb
mov
fsin
stc
jno,pn
jno
mov
data16
or
test
mov
scas
pop
and
cwtl
not
das
imul
sbb
mov
fbld
iret
jb
jge
test
out
jno
xor
nop
and
sbb
pusha
leave
pop
xchg
jbe
fs
jg
ret
and
mov
jnp
pop
xchg
incl
cmp
sub
stos
aaa
pushf
movsb
nop
inc
int
dec
std
pop
cmpsl
inc
std
xor
xor
fsub
inc
pop
mov
popf
jg
cltd
push
fmul
test
mov
jo
adc
sbb
imul
std
rcl
sub
mov
xchg
adc
fisttpll
icebp
add
es
mov
or
pop
xchg
pusha
pop
out
stos
ret
loop
inc
adc
shrb
loopne
cld
pop
add
dec
stos
push
dec
dec
adc
push
data16
inc
xchg
pusha
mov
mov
cld
push
test
push
cwtl
jmp
xor
sub
js
mov
std
fiaddl
lods
aas
pushf
les
out
aam
sub
pop
push
add
fistps
sbb
hlt
adc
jbe
and
mov
xchg
sarl
rep
lods
pushf
fcompl
cwtl
dec
mov
and
int
lock
mov
jnp
xchg
cmp
xor
jb
cmc
push
mov
mov
dec
fwait
inc
pop
or
or
sbb
leave
or
pop
sbb
push
loop
jne
or
xchg
stos
inc
push
mov
aas
jb
xor
mov
out
shl
nop
es
bnd
fstpl
mov
push
aad
xchg
add
inc
and
or
clc
xlat
test
or
jo
lcall
jbe
mov
mov
shl
and
mov
or
js
out
data16
mov
pop
adc
in
jne
lahf
jmp
test
adc
pop
test
dec
sub
mov
fimull
cld
mov
loop
int
js
mov
lahf
sub
adc
push
inc
sbb
sbb
cwtl
roll
dec
sub
push
mov
imul
std
int
les
sbb
xchg
sar
faddl
xor
inc
cmc
inc
adc
inc
mov
mov
into
jg
leave
xor
and
call
clc
pop
cmp
call
jnp
jbe
push
scas
adc
jg
adc
call
adc
sbb
rcrb
cmp
sarl
leave
adc
les
ljmp
jne
adc
int
xchg
nop
in
stos
jbe
cmp
fisttpll
xor
adc
cmpsb
mov
mov
push
mul
adc
rclb
cmpsb
adc
adc
stos
jne
sub
aam
inc
mov
cmp
jae
lcall
nop
mov
daa
repz
jne
stc
mov
add
fisttpll
mov
out
out
mov
and
and
jnp
jle
pop
cmp
bound
ret
pop
inc
cmpsl
push
push
fiaddl
and
sub
sbb
in
jmp
cmp
in
imul
inc
cmc
loope
outsb
sbb
sbb
xor
push
jns
lods
jno
push
aaa
pop
fwait
inc
cmp
fadd
cmp
and
mov
fwait
nop
call
dec
cwtl
push
mov
pop
xchg
roll
sbb
incb
insl
xchg
xchg
mov
xor
jae
mov
cs
push
sub
cld
pop
outsl
or
dec
jecxz
js
add
mov
xchg
jge
xor
xchg
fimuls
mov
inc
sti
pop
js
addb
aam
clc
push
jo
aad
dec
add
sub
mov
lock
in
repz
sbb
fs
xchg
dec
testl
pop
std
and
cmp
stos
int3
lds
jmp
fsub
mov
cmp
inc
and
push
mov
filds
lea
fidivs
mov
mov
or
negb
adc
sti
cli
les
cwtl
push
shll
fucomp
scas
insb
clc
jne
cmc
ljmp
add
sub
inc
cmp
xchg
movsb
or
and
js
cmpsl
or
mov
ret
rcrb
bound
repz
mov
mov
lret
ds
movsb
aas
cmovle
cmpsb
dec
sbb
mul
push
into
xchg
shl
pop
mov
mov
adc
pop
dec
push
scas
xor
push
jge
mov
repz
out
jb
jmp
inc
sahf
xchg
pop
sub
mov
xorl
mov
cs
mov
cmp
fsub
add
dec
js
jg
mov
rol
insb
pop
inc
cli
fxch
jae
je
inc
ss
cmc
mov
xor
in
push
icebp
cmp
jmp
mov
xor
es
cmp
insl
xor
add
cmp
sub
test
call
icebp
adc
outsb
jmp
loope
or
fdivrs
rcrb
sbb
sbbb
orl
in
or
jmp
loope
repz
or
and
cli
scas
dec
xchg
cmc
imul
jl
mov
xchg
ret
sub
inc
jnp
mov
cmp
in
lods
push
mov
rcrl
test
jmp
loopne
lods
or
adc
xor
lods
aad
fwait
fs
lret
and
push
sbb
in
loop
xchg
in
pop
je
lods
adc
pop
adc
inc
std
pushf
mov
and
dec
loope
mov
cwtl
jg
nop
mov
xor
adc
les
lea
push
negl
mov
or
into
stc
jecxz
lea
push
out
pop
fbstp
jmp
mov
mov
dec
adc
cmc
in
fstps
cmc
dec
jbe
icebp
adc
add
jmp
jl
rcl
test
out
insb
pusha
sbb
and
in
les
cmp
ds
test
mov
test
das
sti
rcl
inc
ljmp
fildll
jno
pop
pop
movlps
insl
sahf
mov
punpcklwd
lret
sbb
imul
jecxz
int3
or
jl
aad
shrl
sbb
jge
jl
add
jnp
scas
pop
lret
icebp
fcomp
dec
icebp
mov
adc
out
adc
mov
sub
ret
lea
lock
popf
xor
daa
mov
shlb
addr16
ja
aaa
pop
cmp
inc
int3
mov
xor
push
popa
inc
pusha
dec
inc
sbb
xlat
pop
lea
xor
fwait
adc
xchg
xchg
lahf
das
inc
fcomps
pop
lcall
fstpl
shll
jmp
dec
cmpb
sbb
sub
jl
sbb
jmp
addb
movb
mov
cli
insl
inc
jg
jns
out
xchg
vcvtsi2ssl
mov
mov
fs
scas
aaa
das
add
jno
lahf
nop
and
lea
push
ret
or
addr16
xor
or
xchg
daa
jae
sbbb
pop
adc
loope
vmwrite
shlb
cs
dec
jno
dec
shrb
inc
or
push
sub
aad
xor
or
cmpsb
outsl
push
lret
jns
mov
or
stc
adc
inc
mov
dec
imul
mov
mov
in
cltd
pop
aaa
jle
clc
pop
dec
push
fstps
enter
sub
aam
fldl2e
outsl
fldln2
pop
mov
lret
add
sahf
xor
sbb
dec
inc
mov
sbb
sarl
data16
sbb
dec
sbb
fistpll
sarb
push
push
jmp
pop
lock
out
ljmp
ds
insl
mov
scas
lea
rorl
aaa
clc
popf
test
xor
push
jae
out
sarb
sub
cmp
mov
inc
lods
cwtl
int3
std
jae
das
inc
shll
fstpl
subl
and
fwait
sbb
je
addr16
xchg
pushf
fmuls
rorl
sub
jnp
test
and
adc
and
inc
push
or
mov
ss
testb
outsb
scas
push
rclb
lods
add
mov
jne
dec
xchg
jne
and
sti
aas
xor
gs
jge
stos
pop
xlat
cmovnp
cmpsb
or
leave
imul
in
and
dec
sbb
xchg
xchg
sbb
roll
sbbl
inc
pop
aas
fcompl
or
daa
int
ljmp
cs
and
mov
cmpsb
inc
out
lea
rcrb
jl
mov
pop
aas
jns
jl
cmc
mov
in
adc
adc
add
in
inc
test
dec
sti
or
mov
mov
subl
xor
and
cmp
repnz
and
fwait
imul
cmc
jbe
pushf
mov
and
mov
jp
pop
cmp
or
out
mov
das
cmpsb
aam
cmp
arpl
jno
into
sub
mov
push
dec
jmp
in
add
lcall
push
xor
iret
popa
fidivrl
into
jb
gs
jb
outsl
cltd
shll
mov
pop
mov
bound
das
adcl
cmp
adc
sub
sbb
adc
dec
mov
mov
or
sbb
outsb
insl
jno
js
int3
dec
push
fwait
mov
clc
movsl
cmp
pushf
xor
ret
dec
push
adc
mov
pop
test
xchg
pusha
sub
bound
adc
sbb
add
sbb
or
xor
dec
sub
adcb
adc
mov
popa
arpl
shll
es
out
popf
jno
test
adcl
mov
outsl
lods
cli
dec
push
mov
out
loop
cltd
in
cltd
lods
in
push
insb
repnz
xchg
dec
insb
enter
into
fisubs
pop
add
mov
icebp
loop
xchg
aad
stc
mov
push
loop
mov
mov
mov
sbb
ret
dec
or
dec
xchg
xorl
mov
stos
add
cmpsl
cmc
shlb
fwait
int3
in
clc
cwtl
pop
xor
adc
add
ss
add
add
gs
xchg
mov
mov
mov
push
pop
push
jbe
or
xchg
andb
cmp
xchg
add
mov
inc
jbe
add
dec
scas
pop
xchg
jle
mov
pop
out
ja
lret
pop
sbb
sub
enter
jl
sarb
mov
sub
scas
or
push
loopne
jnp
adc
xchg
push
loope
jno
xor
stos
fimull
jae
stc
sbbl
mov
rclb
jbe
aaa
jge
cmpb
fisttpll
insl
popl
dec
repz
xchg
cmc
inc
sub
rcrl
dec
stos
data16
adc
popa
jle
mov
es
push
lock
popf
and
test
lods
sti
xor
push
inc
inc
aam
pop
ljmp
call
mov
fsubl
addr16
lcall
stos
and
pop
mov
and
mov
stc
push
idivl
subl
xor
mov
pop
mov
mov
lock
std
popf
cld
sbb
cmpsb
scas
cmp
or
rorl
xchg
out
add
fwait
mov
in
int3
xchg
lcall
pop
fsubrs
stos
loop
loop
jecxz
pop
in
movsl
mov
push
push
fbld
call
add
dec
and
repnz
or
int
or
dec
arpl
fwait
mov
and
scas
push
in
sub
and
sbb
shrl
push
mov
adc
fcmovne
sbb
pop
loop
outsl
sbb
mov
mov
sub
adc
lahf
out
pop
movsb
pushf
ret
push
in
out
sbb
push
adc
sets
adc
xor
add
stc
aas
test
mov
mov
out
jo
pop
push
push
jg
shr
jns
gs
mov
mov
shrb
cmc
add
orl
mov
xchg
adc
sub
sub
test
push
sbb
push
idivb
testl
or
pusha
mov
mov
insl
inc
jle
div
nop
sahf
cmp
les
mov
and
dec
pop
movsl
xchg
je
jo
sub
js
or
aas
sbb
pop
jle
or
hlt
push
lahf
fwait
outsb
pop
lods
int
sbb
lahf
pop
enter
xor
hlt
fwait
or
mov
xchg
add
sub
cmpb
dec
iret
js
cmp
xchg
fwait
cmp
pop
add
cld
dec
mov
mov
xchg
push
adc
cmpb
cmp
xor
inc
jle
rorb
add
ffree
push
aad
test
cltd
jbe
jp
add
fisttps
add
jge
cmp
sbbl
pop
hlt
mov
xchg
movsb
jmp
xchg
in
stos
xchg
iret
mov
enter
sub
push
and
imul
test
js
bound
lret
inc
sahf
mov
filds
and
push
sbbl
xchg
popa
xorb
inc
jae
cmpl
test
xlat
nop
sahf
adc
xchg
fiaddl
insl
rolb
cmpl
inc
jle
jle
jg
add
std
mov
adc
mov
mov
jb
mov
push
stos
jg
lcall
bound
enter
mov
pop
and
bound
ficomps
add
mov
xchg
sub
sub
jmp
pop
mov
sbb
mov
clc
push
jno
cmpb
sbb
es
rorb
mov
mov
dec
test
pop
pusha
pushf
les
jecxz
int3
filds
cmp
dec
jns
xchg
cmp
loope
out
lods
cld
fmuls
lods
mov
adc
sbb
testl
dec
outsl
in
int3
test
mov
push
mov
sub
jle
aas
push
sub
leave
adc
inc
fdivl
xchg
shlb
negb
lds
cmpsl
fucomip
ror
cli
and
lds
shrb
cmp
add
mov
xlat
or
or
mov
hlt
out
or
insb
sub
add
cmp
jg
sbb
add
lods
pop
jp
sbb
xor
dec
ja
enter
add
test
lds
cmp
sub
outsb
lea
mov
jmp
pop
jg
dec
hlt
int3
jg
rorl
inc
popf
int3
add
push
lret
flds
popf
or
mov
lret
xor
mov
div
out
mov
jno
push
fs
jne
in
arpl
cli
les
loop
push
mov
jmp
in
xchg
add
in
mov
orb
xchg
xor
imul
push
mov
inc
test
icebp
mov
xchg
or
mov
cmp
or
pusha
add
xor
jae
sbbb
or
pop
jns
iret
shlb
push
push
out
xchg
cwtl
test
add
dec
xchg
dec
and
loopne
lcall
mov
mov
xor
push
roll
cmp
jl
xor
cmp
push
dec
mov
push
sub
movsb
jae
into
jecxz
sbbb
cmp
xchg
je
sbb
addl
ja
sub
push
test
xchg
sbb
xorb
xor
mov
mov
dec
push
mov
pop
push
add
out
loope
bound
mov
dec
ljmp
inc
mov
mov
jecxz
mov
mov
sub
jb
pop
jg
mov
gs
dec
dec
mov
icebp
xchg
inc
shll
mov
push
sarb
pop
dec
add
jp
cmp
inc
cmp
je
mov
pop
xchg
add
lcall
cmp
fwait
pop
arpl
mov
out
sub
and
sbb
mov
incb
pmullw
test
cmp
or
jno
push
cmp
stos
ljmp
lret
xlat
mov
inc
xchg
cmc
xchg
mov
fmuls
xchg
xor
xchg
fs
test
sahf
rol
cmp
sub
jge
cmp
jecxz
add
bound
cs
cmp
loopne
mov
inc
cmp
cmpsl
cmp
les
popa
pop
adc
daa
xor
push
fcom
dec
or
pop
lret
popa
sub
mov
dec
pushl
test
clc
popa
test
mov
imul
adc
cmpsl
adc
jae
out
jecxz
outsl
int3
jge
je
adc
inc
sbb
mov
adc
testb
test
aaa
rcll
mov
stos
or
hlt
push
inc
das
inc
enter
lcall
mov
call
leave
es
mov
daa
sbb
shr
lds
mov
cmpsl
dec
and
mov
adc
xchg
xor
das
cmpsb
cmp
leave
enter
in
aas
or
adc
xor
pop
jno
movsl
stos
sar
pop
and
je
sar
cmp
movl
xchg
adc
cmp
cmc
jns
dec
adc
mov
cmp
mov
pusha
or
cltd
in
xor
xchg
xchg
nop
aaa
lret
ficoms
fucom
pop
sub
sbb
pushf
mov
push
data16
inc
jbe
dec
cmp
mov
das
mov
sbb
adcb
shll
repz
pop
mov
into
xchg
or
and
pop
inc
in
push
dec
out
pop
sub
inc
xchg
subb
add
mov
adc
and
shrb
jno
fistpl
inc
cmp
stc
ret
stos
psubsb
inc
mov
rcrb
ficomps
loope
jle
xchg
hlt
arpl
clc
into
rcrl
movb
mov
lcall
add
icebp
outsb
mov
fs
lret
dec
mov
bound
add
cld
dec
push
in
mov
out
loop
ret
lock
add
aam
leave
into
ret
push
pop
push
inc
into
jmp
inc
dec
sub
out
jmp
sub
sub
mov
push
dec
fcmovnb
das
xor
adc
movb
cmp
dec
daa
stos
icebp
in
rorl
pop
push
xor
jle
push
xchg
xor
adc
js
inc
inc
dec
add
stos
in
push
imul
mov
notl
leave
push
fs
test
bound
jg
jp
insb
icebp
cmp
and
xchg
push
jae
pop
pop
mov
stos
cmp
or
sbb
cmp
imul
hlt
stc
sub
mov
xchg
mov
push
xor
or
push
adcl
add
dec
std
pop
jo
outsl
fmull
lds
fsubrl
adc
inc
xchg
push
push
subl
cmpb
arpl
and
dec
inc
push
push
call
push
mov
je
mov
push
nop
jno
addr16
int
jo
gs
push
adc
mov
bound
orl
xchg
int
outsl
filds
jle
ljmp
stos
sub
movsb
fxch
out
scas
stc
xchg
in
sbb
dec
std
lea
xchg
jbe
adc
ljmp
cmp
add
test
add
js
aaa
cmp
lds
add
push
dec
or
lods
fcomip
popf
mov
popl
mov
aaa
sub
sbb
clc
xchg
test
stos
in
lahf
orl
mov
sub
addr16
je
xchg
sub
or
data16
repnz
shll
xchg
filds
rcrb
add
je
adc
mov
mov
div
cmpb
mov
test
in
pop
movsb
loop
rolb
mov
mov
cmp
and
fcomps
das
stos
jbe
movsl
scas
cwtl
mov
cmp
push
xchg
cmp
movsb
stos
xchg
dec
push
mov
cmp
sub
call
sub
sahf
push
xor
pop
repz
adc
jnp
adcb
lret
pop
sahf
movsb
xchg
lea
loop
ja
loopne
mov
sbbb
sbb
ffree
xorb
outsb
jne
xchg
faddp
js
out
mov
mov
clc
sbb
leave
xchg
lret
sub
pushf
sub
mov
dec
xchg
and
iret
lcall
xchg
xchg
xchg
xchg
ret
lcall
iret
cli
cmp
adc
cmc
daa
pop
sub
sub
bnd
movsb
mov
adc
out
mov
ja
cltd
pop
dec
call
sbb
imul
jnp
aad
mov
divl
sbb
aad
jo
sbb
fcompl
cmp
dec
pop
scas
incl
cli
das
imul
dec
jecxz
movsb
loopne
je
and
sbbl
xchg
inc
mov
les
mov
imul
clc
aam
fucomp
and
test
sub
loop
test
test
adc
ss
and
dec
xchg
mov
push
push
inc
pusha
out
iret
popa
xor
mov
mov
pop
out
gs
mov
push
jns
inc
and
out
hlt
dec
insb
out
repz
xchg
mov
popa
jne
push
dec
loop
pop
xor
jbe
jnp
jg
adcl
and
ret
or
pop
lcall
aas
cmp
inc
fnsave
adc
das
pushf
das
dec
sbb
jp
xchg
insb
inc
js
cmp
iret
sub
aad
adc
data16
inc
and
test
popf
xor
lock
insl
pop
adc
jl
sbb
mov
jge
ja
dec
and
pop
push
cmp
das
xor
dec
dec
lret
out
mov
ds
imul
pop
jb
rolb
loopne
cmp
cmp
inc
push
test
pop
mov
outsl
js
jnp
out
fxam
xchg
adc
repz
jge
adc
push
dec
push
mov
inc
mov
mov
in
inc
dec
fnsave
xchg
pop
fidivs
imul
lods
int
xchg
add
sbb
and
xor
dec
xor
out
insb
repnz
std
push
frstor
daa
xorb
dec
and
add
popa
add
xchg
pextrw
dec
cmp
pop
mov
imul
cmc
leave
or
push
addb
mov
sbb
inc
clc
cmpsl
imul
inc
nop
cmp
pop
mov
movsb
mov
xchg
xchg
inc
aaa
ret
repz
mov
movsbl
ret
cmpl
cmp
mov
pop
clc
arpl
jbe
pop
cmpsl
addr16
jge
imul
cld
or
and
into
jne
pop
mov
shll
fsts
outsb
sbb
xor
xchg
mov
add
jne
xchg
insl
add
or
repnz
dec
sbb
dec
and
gs
adc
push
jae
jmp
fidivrs
jle
scas
lret
jl
cld
pop
lods
inc
addr16
sub
push
xchg
lret
push
mov
or
jg
cmp
enter
cltd
loop
addr16
sbbl
ja
jb
sub
pushf
call
pop
add
cmp
jno
push
ss
push
int3
mov
out
mov
push
adc
inc
or
mov
fadd
cli
dec
xchg
jmp
sub
lcall
jg
cmc
aam
inc
mov
in
mov
add
mov
inc
lea
mov
cmp
jo
ljmpw
ja
dec
push
js
std
hlt
stc
cmp
ljmp
fcmovne
repnz
dec
mov
outsb
fimuls
add
inc
cltd
adc
push
or
movsl
mov
push
mov
in
mov
xor
iret
sbbl
insb
stos
adc
in
cld
add
je
or
aas
lods
orl
push
cmp
push
jnp
jb
mov
out
cmp
push
cmp
mov
mov
cmp
push
std
pop
dec
push
lods
mov
mov
arpl
fisubs
stos
cwtl
mov
fs
lods
fwait
lock
or
stos
push
daa
test
and
aad
add
ret
dec
or
aaa
inc
mov
jg
and
lds
push
pop
lods
pushf
jmp
bound
arpl
jg
jae
xor
xchg
pop
mov
sbb
pushf
jg
cmpsl
mov
mov
jnp
pop
xor
lcallw
jle,pn
sti
fimuls
mov
jo
sbb
mov
adc
xchg
add
jbe
mov
xlat
mov
inc
outsl
popa
jne
xor
mov
and
xor
mov
sahf
in
xchg
inc
xor
orl
and
fwait
mov
mov
and
movsb
ja
xor
stc
and
sbb
cld
scas
jecxz
add
add
adc
cmpsl
sbb
sbbb
je
popf
adc
push
adc
inc
data16
dec
out
movsb
xor
std
mov
add
adc
pop
cmpsl
add
jns
and
fidivl
add
push
cmc
pop
sub
stos
xor
sarw
mov
fwait
adc
aaa
lret
dec
call
inc
mov
es
imul
pop
leave
jge
clc
sub
in
or
cmpsb
jne
jmp
sti
fdivl
popf
aas
lret
mov
sub
stos
lret
adc
push
push
mov
jno
or
pop
adc
sbb
pop
xor
insl
stos
movsl
lea
sbb
adc
call
sub
icebp
push
jge
mov
jno
pusha
inc
jl
ljmp
lahf
ljmp
push
dec
push
xchg
movsb
adc
dec
mov
mov
mov
pop
mov
xor
push
movsl
sbb
mov
mov
jl
xor
add
xchg
mov
inc
hlt
cs
sbb
shll
dec
mov
frstor
aad
mov
mov
ret
cmp
into
inc
inc
push
ret
popa
mov
stos
sti
daa
sbb
test
jl
mov
dec
int3
add
jmp
sub
xchg
adc
lret
pop
insb
lret
jnp
mov
dec
pop
cmpsl
je
movsl
and
cmp
movsb
or
pop
mov
daa
ret
test
pop
loop
dec
cmp
popa
dec
inc
pop
push
andl
add
fisttpll
jmp
cmpsl
pop
and
inc
lret
mov
mov
loope
loop
popf
dec
movsl
loope
int3
roll
jns
mov
nop
out
sbb
adc
sarl
test
int3
lods
mov
sbb
int
sahf
das
or
sahf
std
aas
mov
xchg
dec
inc
xor
out
in
xor
and
or
sti
jne
mov
cmp
cld
or
jno
jbe
hlt
push
ja
out
cmpsl
and
inc
mov
jle
inc
and
add
cmpb
aam
mov
lret
mov
movsb
add
dec
out
icebp
mov
mov
test
mov
mov
std
lret
lret
jbe
sub
daa
xor
jmp
stos
scas
sbb
add
outsl
mov
data16
xchg
pop
add
and
push
add
inc
sub
ss
repnz
add
add
test
xchg
lods
stc
out
xchg
popf
leave
divb
inc
sub
cmp
popa
rcll
push
cs
sbb
bound
xor
push
mov
test
addr16
std
clc
test
std
enter
les
mov
fwait
mov
sub
mov
lret
sub
nop
sub
mov
out
insb
lea
add
inc
das
out
and
and
fwait
ja
mov
inc
hlt
dec
cs
mov
inc
and
pop
sbb
pusha
inc
andb
mov
push
cmpsl
inc
out
leave
mov
mov
xchg
xor
push
fwait
pop
push
imul
idiv
push
push
dec
es
lods
jle
test
xor
jmp
dec
xorl
pushf
mov
cltd
xchg
push
rcrl
push
mov
clc
test
cmc
sbb
and
inc
dec
pop
lcall
pushf
sub
rcrl
mov
inc
xor
fs
jb
mov
pop
dec
jae
pop
cmp
mov
aaa
cmp
jnp
jmp
dec
and
es
enter
hlt
sbb
shll
clc
xchg
mov
insl
xor
test
call
dec
iret
jecxz
pop
push
sbbl
mov
data16
push
xchg
sahf
push
shr
sub
cmpsl
jmp
test
adc
jns
add
jp
dec
cltd
sbb
push
jle
ds
test
cmp
pop
data16
movsl
add
sti
movl
mov
aam
mov
push
mov
cli
sbb
insl
aas
jecxz
sbb
push
daa
scas
pop
sub
fucomip
addr16
rcrb
aas
shrb
pop
push
xchg
inc
add
lahf
hlt
dec
push
push
in
mov
sahf
push
and
inc
scas
pop
scas
out
cltd
mov
xor
pop
popf
push
out
sub
xorl
outsb
mov
int3
jl
sbb
outsb
inc
jecxz
mov
iret
lds
jle
andb
fsubrs
aad
pop
rcl
mov
cwtl
fwait
insb
out
or
xchg
mov
pop
mov
sbb
sbb
sub
loopne
data16
std
ja
mov
dec
add
add
aad
gs
lods
imul
jecxz
push
sub
sub
in
dec
adc
enter
popf
mov
inc
xor
sbbl
mov
les
shlb
es
in
pop
andb
je
shrl
hlt
jnp
xlat
cli
and
and
xor
cmp
xlat
pop
bound
inc
roll
jo
lret
cmp
repz
lret
push
mov
mov
inc
mov
test
imul
int3
push
add
cmpsb
sub
jl
ds
aam
jbe
pop
insl
gs
aaa
inc
outsb
inc
clc
mov
pop
in
xorl
or
daa
mov
jecxz
dec
mov
lods
ficoms
fdiv
adc
pop
shl
jmp
push
inc
sbbb
out
scas
pop
nop
pop
addl
pop
inc
fstpl
dec
sub
popa
in
jl
pop
add
fiadds
loopne
add
das
arpl
sbb
add
jnp
mov
and
popf
rorb
outsb
pop
popa
mov
cli
push
push
add
pop
and
xchg
fdivrs
or
cld
add
adc
jmp
cwtl
mov
mov
lret
and
mov
or
pop
xor
sbb
xchg
lds
adc
mov
jl
jmp
xchg
fimull
sbb
sbb
add
fldl
popf
ret
xchg
movsb
popf
sbb
xor
inc
stos
mov
int3
jecxz
nop
adc
jnp
pusha
xor
into
lret
scas
adc
add
push
inc
cmpsb
aaa
ret
call
push
cld
fldenvs
cmc
aas
mov
dec
into
insb
push
divps
je
sbb
mov
inc
cld
fidivrl
lahf
cmp
or
sahf
adc
lds
xor
out
loope
jb
dec
push
scas
jle
ror
mov
dec
imul
adc
or
fcomps
dec
mov
pop
dec
cmc
sbb
adc
ret
push
out
pushf
hlt
xchg
lock
sbb
mov
jmp
in
repnz
mov
scas
cli
inc
jmp
mov
or
dec
mov
mov
push
test
nop
sbb
dec
in
and
xchg
hlt
jb
mov
pop
adc
xchg
mov
xor
gs
lods
xchg
pop
add
and
xor
xorl
xor
lret
xchg
stos
cs
dec
jo
fbld
dec
xor
test
std
and
imul
sti
cmpb
lds
shlb
xor
stos
adc
std
dec
loop
pusha
mov
insl
sbb
iret
xor
je
jno
scas
jp
inc
popa
arpl
adc
inc
adc
jb
xlat
mov
pop
mov
mov
add
repnz
xor
lret
test
mov
ljmp
ja
inc
inc
mov
pop
jl
and
arpl
mov
cmp
and
and
addl
in
fimuls
pop
icebp
mov
testl
cmp
push
pushf
js
pop
pusha
enter
mov
hlt
sti
movsl
loopne
and
or
jg
dec
loope
xchg
push
mov
pop
mov
pop
push
lods
dec
sub
push
shrl
xchg
push
and
out
sbb
pop
sub
cmpb
adc
jnp
jl
in
addr16
or
inc
aaa
xlat
mov
test
aam
imul
out
aas
outsb
test
scas
cmc
add
aaa
dec
mov
ret
sub
mov
xor
shrb
cs
fmul
adc
sub
inc
dec
adc
ja
sub
sbb
pop
push
fs
movl
ds
cmp
ret
jecxz
jne
push
cs
cmp
xor
xchg
sub
popa
shlb
ret
decb
daa
roll
inc
negb
out
mov
stos
xlat
out
xchg
cs
andb
fcomps
jae
scas
adc
or
outsl
in
mov
inc
xchg
clc
or
mov
mov
jmp
jl
xor
cmpsb
imul
pop
popf
pop
lods
inc
cmp
mov
jo
jle
mov
ficoms
or
xchg
push
clc
sbb
pop
stos
mov
cmp
stc
imul
jmp
cmpsb
ror
xchg
mov
adc
jno
adc
shlb
and
popa
out
and
or
adc
outsl
xor
add
ss
ret
out
or
jae
lock
xchg
test
in
cmp
xchg
fidivrl
dec
lret
cli
xchg
sbb
mov
ret
adc
lahf
xor
jp
notl
pop
cmpsb
sbb
dec
mov
mov
and
mov
sub
mov
jmp
sbb
mov
in
popa
xchg
popf
adc
int3
sysexit
cmpsl
mov
cmp
out
pusha
pop
cmp
lret
push
pop
push
or
mov
dec
inc
addb
mov
inc
push
push
or
ljmp
cmp
mov
mov
sub
fsubrs
pop
rcrb
jo
cmp
fwait
adc
daa
shr
not
stc
gs
push
mov
leave
aam
mov
icebp
imull
mov
xchg
std
mov
insl
mov
xlat
shll
int3
sbb
mov
dec
jg
loope
cs
cmpsl
js
mov
leave
hlt
hlt
into
sub
adc
push
xor
mov
sarl
shrl
mov
fdivl
xchg
outsl
cmpsl
lods
fcoms
dec
lea
mov
push
cmovns
inc
jb
aam
and
push
aas
out
mov
jb
and
adc
fwait
call
lcall
pop
pop
cmp
adc
aaa
dec
pop
and
push
mov
pop
dec
rclb
dec
mov
es
in
mov
stos
mov
push
adc
loopne
push
daa
dec
cmpsb
push
push
or
sahf
scas
lea
pop
icebp
ss
pop
cmp
outsl
jno
pop
jle
xchg
mov
arpl
or
repz
fcomip
andb
jne
sbb
setnp
into
or
xor
ret
cmc
stos
dec
pop
aad
xchg
cmpsb
mov
aad
sbb
filds
cs
mov
cmpsb
popa
push
pop
rcrl
mov
or
lea
jns
adc
xchg
cmpsb
jne
pop
xor
mov
rcrl
dec
and
and
push
int3
mov
fwait
insl
movsb
jns
inc
inc
jns
xchg
xchg
dec
test
sub
cmovge
out
les
lods
sub
nop
cmpsb
ficomps
std
mov
std
adc
dec
and
sbb
mov
std
es
mov
dec
fwait
mov
jg
out
dec
and
out
mov
jg
lock
enter
dec
mov
nop
pop
xchg
std
and
in
sbb
jle
pop
rorl
pop
imul
pop
shlb
add
stos
int3
pop
and
loope
xchg
arpl
leave
dec
push
jmp
in
push
test
jmp
dec
jmp
lock
mov
dec
test
daa
push
pop
dec
enter
scas
or
push
test
push
fiaddl
jmp
mov
aas
popa
xor
dec
xchg
jns
push
loop
adc
and
shrl
sub
cmp
mov
adc
jo
add
test
sub
rcr
sub
push
xor
popa
adc
int3
or
enter
cmp
outsl
push
lds
push
stos
jb
lods
fsubrs
mov
out
pop
push
ret
loop
xchg
clc
jmp
push
fwait
adc
and
inc
adc
imul
les
loope
push
inc
mov
loop
xchg
popl
mov
in
fsubs
test
cld
xchg
add
dec
rep
test
aam
jno
fidivrs
push
cwtl
xchg
shl
cmpsl
icebp
es
push
mov
push
outsb
fildl
bound
sub
movsb
popa
dec
sbb
mov
pop
or
in
call
lahf
scas
lock
pop
and
mov
cmp
cmp
inc
pop
or
dec
out
addr16
inc
add
daa
cmpsb
in
cmp
push
mov
repnz
test
sub
icebp
or
stos
in
mov
adc
imul
mov
nop
push
sbb
push
ret
leave
push
ret
xor
cmp
gs
pushf
push
push
pop
lcall
or
lret
mov
cmpsb
mov
add
mov
push
pop
arpl
sbb
mov
sbb
pop
mov
mov
jae
inc
subb
enter
stos
jmp
jb
cld
inc
adc
test
ret
xor
inc
out
mov
cmp
ds
or
dec
mov
or
out
insl
mov
push
jge
xchg
out
lock
rol
popa
inc
out
jecxz
jge
sahf
jns
pushf
adc
movsb
addr16
adc
adc
mov
dec
pop
rcl
or
shl
setp
sbb
cltd
cwtl
into
mov
ljmp
bnd
sub
ret
mov
pop
leave
jae
push
jmp
push
sahf
push
imul
mov
dec
insb
in
mov
lcall
call
push
stos
cwtl
jbe
xchg
inc
iret
and
jnp
mov
cmp
test
adc
xor
into
lock
lods
paddusb
mov
stos
cmp
lcall
in
test
mov
mov
jge
sub
jg
push
mov
aas
and
fs
sub
xor
arpl
pop
test
xchg
dec
int3
or
mov
mov
fistpl
pop
and
cmpsl
mov
shlb
push
int
pop
pop
bound
xchg
cmpsb
push
aas
movsl
dec
dec
addr16
mov
xor
stos
xor
lods
iret
lret
ret
mov
enter
jns
in
cmpsl
lock
sbb
loop
mov
dec
mov
cli
fwait
mov
repz
xchg
mov
in
or
adc
pop
ficoms
jne
data16
pop
std
mov
and
sbb
in
rorl
testb
cmp
inc
ret
push
sti
adc
push
fwait
sub
int3
cwtl
mov
push
mov
inc
sbb
scas
enter
jp
or
mov
sbb
mov
fsts
lods
addr16
inc
add
dec
and
pop
test
mov
pop
sub
lods
mov
rclb
sub
pop
lcall
xor
shrl
shrl
aad
pop
push
mov
xor
fs
das
es
or
mov
fcmove
inc
xchg
ds
mov
in
idiv
loopne
data16
mov
lds
test
mov
add
jbe
cmpl
out
mov
out
test
test
dec
mov
jmp
xchg
xor
sub
jno
cmpsb
mov
push
mov
out
pusha
imul
insb
test
loopne
pop
sahf
shll
mov
fildll
arpl
push
inc
adc
mov
sbb
enter
xchg
and
push
push
movsl
push
nop
stos
repz
repnz
push
push
rcr
in
jnp
sti
push
clc
shll
sar
push
orl
cmp
xchg
ret
cmpsb
cmp
mulb
push
repnz
popa
xchg
ss
add
sbb
int3
daa
fisttpl
pop
xchg
push
fwait
cmp
sbb
int3
lret
mov
lods
loope
out
or
pop
jmp
pop
je
cmpsl
or
mov
shlb
scas
movaps
movsl
inc
stc
mov
or
cld
fldenv
in
std
pusha
pop
pop
push
stos
jo
pop
push
xchg
cmpsl
pusha
jp
movsb
rcrl
hlt
test
jbe
xchg
es
mov
mov
mov
adc
movsb
scas
xlat
into
mov
adc
imul
dec
ja
inc
lock
fildl
and
mov
popf
pop
push
mov
mov
dec
hlt
cwtl
inc
mov
and
loopne
jnp
adc
inc
mov
out
or
ja
pop
mov
aad
sbb
xchg
aas
sub
adc
movsb
aam
jl
mov
mov
dec
repz
int
xor
inc
fldl
faddl
add
jge
xor
dec
mov
add
in
push
xchg
movsl
stc
mov
xor
ds
sub
jmp
add
dec
das
and
stc
push
test
or
movsl
mov
inc
jl
ficoms
ja
icebp
sub
adc
dec
filds
cwtl
imul
and
dec
xor
mov
sti
push
fadds
xchg
sub
outsb
push
inc
int3
mov
or
call
jmp
push
insl
bound
jnp
jge
icebp
and
xchg
sub
push
mov
lods
in
ss
imul
repnz
and
rorb
mov
lret
mov
ret
fimuls
push
and
call
or
insb
xchg
adc
mov
outsb
and
push
fisubrl
cmp
lret
nop
popa
pop
cmp
pop
adc
icebp
pop
dec
cmp
inc
push
test
shlb
push
pop
enter
and
addr16
clc
push
cmpb
xchg
outsl
icebp
test
mov
sbbl
stc
mov
jle
mov
cltd
add
sub
pusha
loope
call
add
pop
aad
dec
testb
js
pop
sub
cltd
mov
loop
mov
fs
call
frstor
mov
sahf
xchg
xor
in
in
jp
jmp
mov
sbb
bound
and
clc
js
ficoms
insl
ret
jno
lret
sub
aas
shlb
pop
aad
xor
xchg
xchg
mov
jp
test
xor
sub
jge
pop
test
mov
popf
clc
int
cld
into
cmp
xchg
fwait
jmp
stos
mov
jmp
push
filds
lcall
xchg
rcr
mov
cmp
fbstp
fcomps
mov
push
mov
mov
lret
or
push
and
loope
adc
jb
repz
outsl
sub
rcrb
jmp
call
xchg
dec
add
int3
push
movsb
push
cmp
mov
xor
push
mov
out
scas
add
pop
sbb
lods
pop
or
adc
push
fldl
rolb
inc
jns
inc
mov
aas
push
push
add
add
rcl
stc
cmpsl
flds
adc
push
test
popa
aas
cmp
fimull
or
fs
push
daa
inc
rorl
dec
add
and
cli
and
hlt
push
sbb
call
fsubr
je
imul
jmp
shll
dec
cmc
push
push
mov
xor
in
cmpsl
mov
aam
add
xor
stos
pop
add
dec
inc
jg
mov
stos
leave
mov
lcall
testl
xchg
xchg
pop
cmc
push
sbb
and
add
rolb
aad
adc
mov
mov
int3
cmc
lods
scas
test
or
xor
cmpsl
std
iret
pop
mov
sub
leave
stos
pop
push
mov
das
mov
jl
cmpsb
ret
mov
and
sub
xor
pop
repz
sub
mov
sub
loop
arpl
add
xchg
inc
pop
mov
xchg
jl
cs
daa
scas
pop
jne
sbb
pusha
push
inc
sbb
lods
rcll
fs
jno
push
push
aaa
test
inc
aad
ret
stos
loopne
addr16
add
push
add
push
nop
in
xor
mov
sub
cmp
pusha
adc
dec
push
mov
ret
lret
push
xchg
addl
xor
add
push
js
in
daa
mov
sub
repz
fisubs
push
xchg
or
xchg
lea
sub
dec
and
and
dec
lds
inc
xor
movsl
jne
adc
pop
int3
or
pinsrw
sub
inc
adc
sub
lods
stc
ficomps
gs
cmc
xor
outsl
xchg
jl
inc
add
in
outsl
imul
ret
lcall
lods
nop
aaa
fidivrl
ret
adc
jmp
adc
in
out
push
xchg
out
mov
jmp
rorl
push
icebp
sti
in
inc
add
push
dec
leave
jns
or
ss
jg
fnstcw
xor
mov
popf
and
mov
scas
inc
nop
dec
cwtl
cmpsb
xchg
subl
out
gs
and
je
scas
fs
std
das
dec
xchg
add
push
adc
repnz
xorl
scas
sti
scas
lock
xor
dec
xchg
sti
dec
subb
test
ljmp
outsl
test
outsl
inc
orb
sub
cmovge
mov
mov
cmp
dec
push
cmp
cmpsl
out
add
inc
xchg
insb
mov
cmp
aas
pop
jns
adc
in
fldcw
sbb
xchg
cs
add
aaa
data16
push
pop
dec
sbb
dec
jmp
neg
in
fmulp
fisubrs
cwtl
inc
enter
push
pop
je
lret
cmp
arpl
loopne
sub
aaa
push
shll
sbb
outsl
lock
push
mov
push
mov
xchg
sbbb
jnp
dec
mov
xchg
repnz
les
jno
and
jno
add
faddl
mov
add
sub
mov
dec
in
or
fwait
jo
pop
xor
addb
repnz
xor
out
fs
pop
lcall
push
jno
mov
aaa
nop
dec
mov
push
inc
popf
push
movsb
mov
jp
jae
daa
aam
push
mov
pop
xchg
add
cwtl
iret
mov
aam
jmp
nop
mov
add
je
sbb
stos
jne
sbb
inc
scas
or
addr16
jnp
sti
fidivl
cmpsb
mov
push
push
xchg
adc
jmp
dec
sub
cmp
loop
push
push
mov
test
add
lret
sahf
rol
std
mov
pop
lods
mov
add
inc
or
imul
pop
out
insb
ficompl
fsts
enter
push
jae
popf
cltd
jmp
push
test
dec
xor
cmc
hlt
fdivrs
dec
out
mov
clc
cmovns
xchg
rorb
xor
push
mov
or
js
stos
mov
mov
mov
lahf
xorb
adc
lcall
xchg
push
xor
loop
nop
aad
sbb
inc
jne
xlat
dec
cmp
pop
call
les
aad
mov
add
add
mov
data16
imul
out
clc
dec
pop
std
test
and
aad
push
adcl
sub
xchg
jbe
and
jbe
xchg
push
mov
pop
negl
sbbb
mov
dec
pop
mov
cltd
and
pop
mov
lahf
push
lock
mov
xor
xor
mov
outsl
pop
scas
adc
and
mov
aam
ljmp
imul
xchg
xchg
or
cld
shll
pop
fists
js
push
int3
pop
adc
xchg
icebp
cmpsb
div
inc
pop
fs
jno
aaa
repnz
aam
mov
inc
shll
and
mov
pop
cs
push
ds
pop
idivb
sbb
add
das
cmp
jno
push
into
pop
fstl
sub
adc
pop
xor
dec
dec
jp
es
scas
jge
adc
repnz
jmp
outsb
mov
pop
popa
xor
inc
mov
dec
push
into
imul
mov
in
insl
mov
adcl
sub
arpl
push
sbb
dec
icebp
shll
cli
sub
lahf
ffreep
pop
jnp
add
cmp
std
fnstenv
and
pop
xchg
dec
sbb
loope
xor
or
adc
dec
push
sub
adc
cmp
pop
js
mov
dec
fnstsw
push
dec
mov
pop
lods
mov
pop
adc
cmp
nop
int
mov
sub
rclb
jno
int3
shll
or
test
or
mov
jno
fnstsw
loop
xchg
push
push
jo
jo
mov
cld
fstps
sbb
inc
cmp
bound
dec
test
jns
sub
outsb
ds
ficomps
jnp
adc
or
and
adc
repnz
sub
loop
jb
mov
cmc
or
ljmp
inc
xchg
push
fiadds
push
test
int3
loope
lahf
repz
push
inc
out
leave
scas
jmp
arpl
call
pop
jae
test
sbb
sub
push
sti
mov
add
mov
pop
aad
data16
adc
in
sbb
leave
hlt
mov
jb
xchg
ret
inc
fildll
inc
inc
ja
stc
popa
mov
mov
pushf
je
test
insl
ret
pop
outsb
rolb
int
mov
rcrb
jl
adc
cli
andb
jo
dec
and
scas
addr16
sub
cmp
and
in
sub
movsb
es
push
inc
lods
in
mov
inc
int
pop
ror
sbb
movsl
adc
inc
bound
test
fstps
push
jl
cli
mov
xor
cmpl
mov
call
clc
outsl
jge
push
rcll
adc
psubw
cld
mov
int
mov
addl
out
nop
mov
mov
loopne
ds
mov
out
dec
pop
int
fists
xor
and
jo
mov
push
mov
inc
mov
lahf
mov
mov
sub
cmc
dec
and
jne
mov
jno
xchg
adc
jle
xor
pop
jp
sub
push
mov
mov
fstpl
xor
lods
adc
pop
push
push
adc
loopne
mov
cmpxchg8b
push
arpl
mov
jg
push
jmp
or
jnp
lret
mov
dec
inc
dec
jl
dec
in
pop
add
stc
inc
push
stos
fcoml
add
ficomps
xchg
in
es
sub
dec
xchg
addr16
jnp
mov
pop
in
mov
jle
xor
jmp
sub
rolb
and
or
xor
jne
and
loopne
ss
xor
xchg
pop
mov
inc
xchg
lock
aaa
insl
outsl
fldl
pop
shll
mov
in
sub
xchg
subl
lcall
into
or
andb
movsl
push
cmpsl
fnstsw
mov
mov
cmp
and
adc
das
out
rcrb
mov
lea
test
das
hlt
mov
stos
push
rcl
push
repnz
ret
adc
call
push
add
es
jbe
shr
inc
jge
aam
shl
cmpsl
sub
mov
add
mov
sbb
adc
push
dec
adc
sbbb
sahf
xchg
lock
cmp
iret
xchg
cli
hlt
sahf
fnstenv
add
out
inc
dec
cmp
divb
mov
test
ss
sbb
jnp
rol
xchg
xor
shll
sbb
mov
outsb
lods
sti
adc
lcall
xor
add
jbe
std
pop
push
or
mov
cmp
lret
xchg
pushf
int
loopne
mov
ljmp
mov
push
rclb
fdiv
pop
sbb
ds
jno
mov
jg
nop
jge
and
mov
popl
in
out
xor
cmp
or
dec
sub
sbb
adc
out
int
fbld
ret
js
or
aam
js
shlb
fcoms
jge
mov
xor
xor
cmpsl
mov
test
pop
dec
pop
popa
ds
cld
cwtl
les
jns
out
pop
jmp
dec
outsl
rorb
jp
rcll
adcl
dec
push
adc
lods
ss
cltd
sub
enter
xchg
jmp
cmp
jo
mov
mov
pop
adc
jecxz
addb
mov
popf
out
and
cld
inc
cmp
dec
fnstsw
dec
popf
pop
push
sahf
sahf
mov
aas
flds
pop
fstps
sub
xchg
jmp
cmp
jle
stos
pop
insl
outsl
push
inc
vprotq
push
jle
sub
sub
jne
and
jg
fdivl
dec
jmp
cmp
shlb
cs
or
int
cmpsb
pop
test
push
add
add
in
ja
pusha
sub
xor
jne
pop
push
inc
mov
xor
jb
or
sahf
or
popa
mov
dec
call
xor
stc
nop
pop
orl
loop
sub
sub
jae
mov
ret
movsb
fs
adc
imul
bound
push
out
xor
dec
gs
and
dec
pop
xchg
addr16
push
fildl
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
.byte
fs
.byte
add
add
push
jp
mov
out
add
mov
dec
rol
pop
mov
push
and
adc
inc
mov
stc
mov
fsubs
in
sub
and
adc
pop
jl
out
je
xchg
inc
adc
inc
cmc
or
cltd
ret
pushf
dec
imul
mov
inc
cwtl
mov
fbstp
je
lret
xchg
jecxz
inc
inc
cltd
jl
pop
test
cmp
adc
aad
imul
lret
add
insb
dec
cmp
movsl
push
ror
jno
jg
bound
ret
mov
add
xor
mov
sbbl
cltd
adc
sahf
icebp
cwtl
imul
iret
call
insb
les
lea
mov
mov
or
sub
xchg
mov
mov
add
mov
pusha
ret
scas
cli
notl
out
in
aaa
sub
cs
jle
cmp
push
mov
push
movb
ja
dec
and
xor
aaa
stos
add
inc
add
jmp
ljmp
inc
mov
cmp
in
adc
mov
addr16
fs
sub
jne
nop
mov
imulb
adc
fstpl
gs
push
push
xchg
mov
mov
push
dec
push
sub
dec
push
jecxz
and
sarl
or
pop
sahf
lcall
mul
xchg
subb
or
lods
push
push
xor
sbb
mov
add
repnz
outsl
sbb
xchg
push
push
mov
or
xor
jno
incb
push
or
push
jle
xor
xor
cmpsb
mov
lret
push
fcmovne
mov
sarl
xor
outsb
lret
movsb
adc
fimull
xchg
add
inc
stos
fildl
cmp
lds
sub
outsb
in
push
fs
xor
sbb
add
movb
mov
jae
cmp
jecxz
cmp
test
cmc
lods
mov
repnz
xor
rolb
rolb
hlt
out
subb
sbb
dec
xchg
xor
in
jnp
inc
jnp
cmp
popf
or
sub
and
push
cmpl
shr
and
jp
js
pusha
aad
jge
push
mov
mov
enter
lock
bound
inc
push
cli
and
cmpsb
cmp
pushf
xor
in
pusha
out
dec
mov
adc
add
call
jae
push
inc
out
outsb
jge
movsl
xor
fnstenv
mov
cltd
pop
or
cmp
sub
scas
bnd
push
shrb
pop
repnz
insb
pop
in
fs
mov
addr16
or
fists
or
jl
out
aaa
daa
jo
jp
and
inc
pop
pop
push
cmp
mov
pop
fstpl
mov
mov
adc
stc
jno
sbb
ds
aas
and
xor
roll
and
xor
xchg
in
loope
nop
int3
aas
mov
lods
popa
lcall
xchg
jmp
pop
sub
daa
enter
lods
jnp
mov
stc
mov
shlb
sahf
fisubl
jnp
pop
sub
inc
and
lea
nop
lret
cmp
dec
insl
dec
push
negl
inc
lret
bound
xchg
jbe
jb
mov
sbb
sub
inc
mov
jae
xor
lcall
mov
and
je
mov
xlat
outsb
sbb
mov
ljmp
jp
mov
or
movsl
xor
mov
dec
mov
mov
inc
jp
sbb
pop
out
cld
jae
daa
dec
cmpsb
mov
in
dec
sub
mov
inc
mov
cmc
sbb
cmp
je
loop
cwtl
sbb
pop
jnp
cmp
cld
xchg
test
iret
jo
nop
in
mov
jecxz
inc
ds
inc
cld
lret
or
mov
shlb
xlat
cmc
xchg
bound
jp
ljmp
xor
dec
outsl
add
cltd
cmc
add
clc
orb
mov
sbb
dec
jecxz
mov
jecxz
jge
xlat
cmp
fdivrl
pop
test
pop
ja
gs
push
fs
vandpd
testb
mov
mov
call
xor
insb
pop
cmp
lods
mov
mov
popf
xchg
mov
ja
pop
adc
or
xor
out
xor
mov
push
adc
insb
out
jp
mov
mov
adc
mov
repz
lret
sbb
lock
and
xchg
push
xchg
stos
lods
out
mov
push
cmp
lods
jecxz
out
in
aam
pop
sub
movsb
cmp
in
pop
sub
in
inc
or
xchg
pop
pop
stos
xor
xchg
lock
lahf
clc
mov
rorl
or
sub
pop
push
aam
mov
fwait
dec
jecxz
and
pop
addr16
adc
mov
pop
hlt
push
hlt
in
push
or
test
shrb
jno
pop
or
lods
fs
jge
jge
xor
xchg
ret
call
add
fwait
cltd
lcall
ret
sbb
lret
inc
pop
aaa
jle
xor
mov
repz
movsl
out
sub
adc
out
cmp
jbe
or
jle
int3
repz
add
jge
stos
mov
pusha
arpl
sub
pop
push
and
fstps
xor
das
sti
inc
sbb
test
mov
inc
in
adc
jecxz
and
dec
mov
xchg
rorb
cmp
mov
lret
sbb
and
bound
sbb
test
fistps
add
in
fwait
mov
aam
outsl
push
lahf
lret
pop
movsb
dec
fidivl
mov
shlb
iret
mov
push
in
push
push
repnz
ss
shll
lret
fcmovne
movb
mov
imul
adc
loop
mov
cmp
mov
rorb
sub
mov
shll
pop
push
jb
add
inc
add
cmp
jns
push
inc
inc
or
dec
hlt
cmp
pop
out
insl
dec
sti
mov
scas
jo
push
mov
dec
push
mov
fwait
cmc
adc
call
push
hlt
or
push
cltd
push
mov
jg
dec
rcrl
inc
jne
test
leave
rcll
jl
repnz
jl
cmp
out
popw
cmc
mov
sbb
mov
test
xchg
jne
jl
mov
xchg
jle
pop
jo
xchg
stc
xchg
add
jg
cltd
sti
sub
jmp
xor
add
in
lahf
pop
mov
leave
jno
mov
in
jne
add
mov
xor
fimuls
mov
mov
ret
mov
lahf
fistps
mov
cmp
cwtl
iret
jns
adcl
add
out
jnp
xor
mov
dec
or
les
inc
xchg
inc
or
mov
cwtl
repnz
mov
xchg
mov
ret
adc
testb
cmpsb
pop
pop
jmp
test
mov
xchg
sar
int3
or
jae
jae
xlat
mov
arpl
aaa
add
test
cld
sbb
inc
dec
sub
adcb
or
mov
add
fs
inc
and
mov
das
add
dec
lock
inc
add
scas
jecxz
fs
sbb
lock
mov
cmp
xchg
les
mov
lahf
pop
out
leave
inc
xor
or
dec
push
nop
and
insb
and
mov
xlat
mov
xchg
mov
jmp
jle
or
lahf
js
lods
cld
sbb
jg
inc
xchg
jmp
lods
lods
shl
inc
and
xchg
mov
mov
xchg
xchg
xor
adc
enter
xchg
mov
adc
xor
or
mov
pop
cmp
jl
jp
pop
decb
ret
jle
jle
cwtl
jecxz
jne
stos
mov
mov
or
jbe
out
scas
jae
xor
fnstsw
and
inc
and
sub
dec
pop
sub
mov
push
mov
ds
sysret
adc
push
cmp
xor
mov
movsl
xchg
push
cmp
sti
mov
out
in
stc
and
fnstcw
push
jmp
jo
inc
dec
jo
jle
sbb
push
sbb
lock
mov
int
sub
mov
lahf
push
jbe
xor
bound
fsubr
push
mov
lcall
inc
cmc
scas
mov
or
insb
lret
ret
and
pusha
or
lds
mov
xor
les
les
imul
sub
push
inc
pop
push
sub
xlat
mov
mov
test
in
enter
xchg
sub
cmp
dec
jmp
adc
xorl
or
clc
dec
pop
xchg
fmull
loop
add
notb
rolb
mov
and
jle
xchg
in
mov
push
rcl
xchg
adc
pop
mov
and
lock
sbb
xor
movsl
shlb
fcomps
add
in
pusha
and
orl
mov
mov
pop
lea
pop
je
or
sti
and
and
popa
in
fstcw
or
int3
sbb
and
stos
sub
xchg
jnp
push
sahf
loope
hlt
ja
pop
test
push
cmp
neg
inc
ficoms
push
insl
gs
push
sub
or
clc
loopne
movsb
aaa
leave
outsb
jmp
loopne
addr16
outsl
sbbb
cld
popa
aam
sub
jnp
dec
out
in
push
or
or
push
sbb
sub
test
lret
sbb
adc
adc
aas
stc
push
mov
jbe
xor
pushf
lods
ss
sub
pop
fstpl
es
push
add
movsb
rorb
jns
movsb
adc
inc
clc
rolb
mov
jnp
add
cli
movsl
imul
jmp
add
sub
subl
out
cmc
hlt
in
addr16
and
adc
mov
pop
pusha
sti
aad
mov
push
bound
push
imul
in
pop
in
enter
mov
and
jecxz
jae
add
cmp
sub
es
dec
push
cmp
lret
push
into
lods
popf
xor
in
and
dec
test
sbb
mov
add
shlb
xchg
cmp
in
pop
inc
and
mov
test
ja
pop
dec
mov
mov
adcl
sbb
test
lods
fs
stos
repz
jns
adc
or
jbe
mov
sarl
jl
lret
arpl
cli
outsl
mov
push
jecxz
mov
xchg
or
cld
pusha
xor
lea
mov
jns
mov
xchg
push
loopne
add
pop
out
cmp
jne
pop
xor
jo
sbb
add
enter
fisubl
lret
inc
fsts
dec
cli
lcall
xchg
addr16
sbb
add
sub
sub
adc
and
ds
gs
dec
imulb
jle
dec
lcall
shlb
out
jp
lea
jmp
mov
nop
inc
cmpsb
sbb
in
out
and
cmpsl
push
xchg
lcall
in
lock
lahf
mov
or
mov
les
call
js
popf
sbb
xchg
aam
sub
xchg
insb
idivb
insl
imul
mov
les
jl
xchg
mov
inc
push
xor
rcrl
adc
outsl
mov
sub
sbbl
mov
dec
jecxz
push
add
mov
jno
scas
mov
scas
lds
loop
jbe
inc
dec
mov
lahf
test
rcrb
cmc
int3
push
pop
orb
add
mov
int
sbb
jl
call
stos
push
jle
insb
and
mov
movsl
das
into
sbb
andb
pushf
out
inc
mov
xor
xchg
imul
mov
mov
addr16
push
jnp
dec
push
push
stc
dec
or
es
cmpsb
mov
xchg
in
mov
sub
shl
push
push
lret
push
or
nop
mov
std
adc
or
bound
jbe
jl
mov
out
int3
and
mov
mov
push
pop
pop
mov
bnd
int
fcmovnbe
push
popl
sarl
mov
sbb
inc
lcall
test
inc
in
pusha
xchg
add
dec
add
aam
mov
into
mov
ljmp
sub
sahf
das
addl
repz
or
mov
jno
and
sahf
fnstsw
lahf
push
xchg
ja
hlt
inc
push
pop
inc
fbstp
jno
mov
xlat
je
imul
mov
data16
insb
jecxz
lahf
es
xchg
xor
adc
cwtl
shll
xchg
pop
mov
mov
aam
mov
push
push
clc
clc
call
cmpsb
popa
hlt
pop
popa
jle
inc
js
loope
jns
mov
xchg
cmc
dec
int3
mov
jle
ja
mov
movb
add
inc
mov
jge
negl
lahf
scas
test
mov
push
or
nop
jne
pop
jl
incb
push
adc
sbb
lret
outsl
adc
int3
cmp
js
or
repnz
push
xor
adc
pushf
sub
jns
fisttpl
jnp
jp
pop
add
pop
outsb
cli
cmp
movl
jnp
mov
mov
ss
ds
inc
xchg
mov
je
jae
addr16
mov
adc
mov
add
fisttpll
sbb
ret
jne
jae
sub
jae
out
mov
repz
xchg
das
popl
ret
mov
jnp
hlt
pop
aaa
push
pavgb
add
push
or
imul
xlat
lock
mov
inc
call
pop
xor
lea
mov
xor
cmp
or
stc
lock
xchg
sbb
xchg
pop
loopne
lods
sbbl
sbb
mov
cmp
mov
jne
imul
stos
dec
inc
sub
mov
repnz
dec
into
mov
rorl
pop
out
shrb
inc
push
jmp
or
mov
push
lock
mov
xlat
sub
cmp
jmp
pop
jecxz
sub
mov
call
outsl
stos
out
push
and
xchg
aad
sub
aam
adc
mov
jae
cli
andb
test
jo
rcrb
incb
sub
mov
fdiv
cmpb
lods
repnz
js
push
aam
inc
pop
or
mov
insb
cmpsb
aam
inc
sbb
cmp
or
jae
and
imul
mov
jae
xchg
dec
pop
loopne
mov
sarl
inc
push
jno
out
out
or
dec
push
aad
xor
mov
xchg
cmp
dec
xchg
mov
ss
xchg
pop
cmpsl
cmpsb
and
sbb
xor
out
jb
jmp
push
in
lods
cld
mov
push
mov
arpl
inc
jg
rcll
call
xor
in
popf
repnz
mov
sbb
ja
mov
bound
and
cld
inc
lds
mov
imul
mov
lret
lea
add
xchg
mov
jg
inc
test
dec
in
jo
js
push
jno
adc
push
adc
xor
mov
scas
xchg
daa
ja
shrb
jmp
es
cltd
dec
cmp
adc
sub
enter
sub
mov
adc
movb
aas
call
stos
sub
nop
pop
xor
popa
jnp
cmp
movsb
mov
mov
xchg
mov
imul
popa
xlat
push
push
test
mov
mov
addr16
and
fbstp
cmp
mov
mov
pop
inc
or
pop
dec
add
in
add
movsl
cli
lcall
jo
subb
rclb
sahf
int3
dec
mov
es
and
and
jns
movsl
or
jecxz
filds
popa
sub
mov
jnp
push
lods
dec
sbb
out
xor
mov
mov
cmp
loopne
iret
repnz
and
xchg
sbb
sbb
out
push
mov
ds
fdiv
add
mov
psubsb
push
xlat
jecxz
sahf
cld
sahf
negl
or
je
cmpsl
fwait
push
decl
aas
sbb
test
shrl
sbb
mov
jecxz
and
and
or
in
call
sbb
cmpsb
push
xor
int
dec
imul
cmc
pop
mov
xorl
mov
outsb
faddl
lods
pop
lods
sbb
dec
test
pop
sbb
jmp
mov
lds
pop
xchg
fisttpll
add
cmpsl
jb
or
pop
xchg
idiv
mov
out
ja
mov
adc
pop
incl
push
fs
stc
leave
bound
mov
mov
add
out
xchg
sbb
mov
dec
in
repz
and
pop
and
add
outsl
test
cmp
xor
adc
fstp
sbb
sub
subb
daa
sbb
sti
cwtl
pop
pusha
mov
push
mov
pop
popa
out
iret
mov
sbb
xor
xor
mov
in
pop
cs
xchg
pop
and
into
dec
or
mov
jge
daa
rorb
popa
rorl
jp
inc
push
jb
add
lss
xchg
sti
int3
xchg
lret
or
add
in
xchg
mov
jns
cmp
xchg
pusha
inc
lret
int3
or
add
ffree
scas
mov
ret
push
ss
adc
lcall
push
cmpl
xchg
ret
scas
das
mov
pop
rcr
lock
cmp
cmc
adc
gs
je
mov
inc
sub
mov
daa
cli
std
push
mov
adc
xchg
repz
rolb
lcall
loopne
inc
dec
adc
push
ja
sti
inc
pop
push
mov
and
xchg
mov
movsb
or
and
lds
sub
loop
xchg
stos
or
data16
test
inc
pcmpgtw
mov
hlt
shll
mov
push
inc
or
and
lret
sub
imul
mov
sub
sbb
cld
adc
xchg
dec
sbb
sarb
in
xor
xchg
movsl
in
push
cmp
cmpb
bnd
xchg
cmpsl
inc
out
adc
in
or
inc
hlt
mov
insb
push
iret
mov
cltd
mov
data16
sub
sbb
lahf
jne
js
sbb
les
mov
mov
outsb
inc
push
mov
lcall
jle
or
dec
sbb
pop
sbb
lds
or
outsl
mov
jb
cmp
sbb
pop
mov
xlat
xorb
sbb
xchg
fisubs
inc
ljmp
jnp
test
inc
insb
inc
inc
add
inc
or
push
or
jg
adc
xor
lahf
jle
jle
cmp
jp
mov
dec
movsl
sub
ret
aaa
into
cmp
lds
inc
sub
push
add
push
cmp
iret
cmpb
push
mov
mov
jl
repnz
sti
outsb
fsts
pop
shrl
push
in
xlat
cmp
pop
mov
xor
fldcw
xor
les
ss
lea
notb
cmc
outsl
insb
push
xor
rclb
or
mov
sbb
sbbl
sbb
mov
adc
push
cmp
js
jl
xchg
pop
cmpsl
mov
pop
sbbb
push
add
jl
pop
sub
iret
incb
jmp
fsubl
adc
popf
lret
das
push
movsl
adc
jl
jae
sbb
xchg
pop
sub
fsubrl
dec
iret
xchg
fucomip
dec
hlt
xor
add
add
or
mov
pop
mov
loope
outsb
std
mov
xor
sahf
incb
push
mov
outsl
mov
fwait
add
xchg
xchg
cmpsl
dec
mov
rcll
jmp
and
fwait
scas
cltd
int3
or
ja
pop
sbb
sub
cmpsb
cld
xchg
push
mov
or
xor
mov
out
sub
sub
jge
std
dec
outsb
fwait
inc
jge
push
or
mov
xor
mov
push
mov
cmp
ficoml
outsb
lock
mov
shrb
int3
fisubrl
into
outsb
movb
adc
push
mov
aam
add
push
xchg
ja
ljmp
xor
xchg
arpl
push
mov
int
cmp
leave
pop
pop
adc
cmpsb
out
aaa
adc
fs
data16
imul
mov
add
int
sub
ja,pt
and
xor
sub
scas
push
push
xorl
ljmp
stc
push
test
or
sbbl
loopne
dec
cmp
pop
imull
lods
mov
jne
aad
data16
sbb
inc
loop
add
push
add
ja
dec
inc
pop
inc
out
jne
clc
add
push
jmp
scas
mov
lret
cmp
dec
and
pop
cs
cs
repnz
mov
jne
sarb
sub
cwtl
cltd
fwait
mov
mov
inc
dec
inc
test
clc
imul
shll
xchg
imul
add
sbb
call
and
dec
pop
rcr
push
push
out
mov
jbe
or
test
push
xchg
push
and
cmpsl
fsubrl
mov
inc
pop
fnstsw
mov
and
hlt
sbbl
add
outsb
jge
test
lods
and
test
clc
bound
sub
mov
cmpsb
mov
xor
jo
pop
les
scas
add
sub
gs
sbb
mov
stc
mov
les
aaa
movsb
notrack
xchg
sar
ficomps
popf
int
mov
mov
rclb
adc
dec
xchg
lahf
gs
fwait
mov
lods
jmp
lds
rclb
and
push
mov
inc
jno
jns
mov
add
fisubrs
xor
adc
xchg
and
sbb
pop
inc
adc
inc
movsb
mov
inc
push
notl
fadds
xchg
push
inc
fcmovnu
jge
mov
pop
repnz
hlt
xor
mov
std
in
dec
pop
ret
jno
sbb
mov
imul
pop
inc
repz
and
push
add
sbbb
mov
xor
aas
push
sbb
cmp
subl
in
push
cltd
enter
insl
out
cmp
int3
cmp
outsl
insl
insl
dec
dec
repz
jecxz
and
sti
leave
and
hlt
push
push
cmp
add
mov
mov
and
incl
xor
addr16
pop
xor
cmc
mov
inc
aas
in
lahf
fcoms
cmp
shr
dec
adc
in
dec
dec
pop
xor
std
cmpsl
iret
test
nop
ret
adc
testb
xchg
aas
in
hlt
cmp
outsl
lret
fcompl
ja
jb
in
xchg
xlat
jle
clc
inc
and
mov
aam
lods
addr16
inc
push
js
mov
fisubrl
or
es
mov
out
pop
mov
notb
test
stos
jne
andb
roll
dec
add
outsl
pop
sub
push
push
add
outsb
pop
popa
xor
adc
clc
dec
shll
jbe
inc
xor
or
xor
mov
jb
pop
arpl
cmpsb
xchg
iret
fstl
cwtl
dec
xchg
into
mov
adc
push
lret
mov
sbb
shlb
arpl
pop
cmp
add
or
mov
hlt
add
shll
nop
dec
jnp
lret
jge
sbb
xchg
sub
mov
rolb
ss
scas
daa
addr16
mov
cmp
add
lea
cmc
cmp
sbb
icebp
dec
int3
xchg
mov
stos
hlt
test
or
xchg
mov
daa
cmp
fisubl
cltd
in
push
push
ljmpw
xchg
outsb
jo
pop
adc
xlat
dec
jno
fcoms
push
and
scas
mov
shlb
lock
stos
jg
jnp
sbb
lcall
lea
inc
test
fucomip
daa
stos
outsb
icebp
sub
adcl
xchg
stos
sbbb
movsb
sub
int3
stos
pop
lcall
adc
loopne
rorl
xlat
hlt
aaa
loop
fiadds
mov
ss
insb
mov
orl
inc
loopne
sbb
fsts
add
push
sub
fnstenv
inc
jns
cmp
daa
mov
cwtl
ss
inc
out
cmp
dec
shl
gs
sbb
movsw
fwait
aaa
jge
lret
ficoms
incl
add
pop
dec
fucomp
sub
dec
mov
mov
xchg
loope
push
add
push
dec
mov
or
jecxz
pop
in
shlb
sbb
sub
pushf
mov
push
or
push
fcomps
sub
mov
scas
sarl
sub
inc
sub
push
or
loop
roll
outsb
aad
pushf
jg
cmp
out
test
out
iret
push
outsl
push
mov
out
call
sarb
nop
nop
xchg
inc
jb
bound
mov
negl
flds
xchg
sub
lds
rcll
dec
pushf
mov
mov
jb
sub
movsl
mov
popf
jno
call
call
pop
sbb
xlat
xchg
pop
pop
add
imul
clc
repz
out
test
nopl
lret
out
jle
mov
ljmp
sbb
xor
scas
adc
dec
inc
pop
add
in
jecxz
pop
lods
push
int
dec
jnp
fnsave
xor
mov
adcb
popa
sbb
fs
mov
adc
mov
out
icebp
mov
daa
sbb
mov
repnz
add
adc
and
adc
test
test
aad
enter
ficompl
pop
mov
es
es
xchg
das
call
repz
ja
movsl
mov
call
add
iret
imul
cld
jb
daa
jmp
xchg
fisubl
jg
add
jecxz
hlt
mov
fsts
int3
aam
mov
sub
jae
int3
sbb
arpl
sbb
test
fnstsw
popf
shlb
cmp
jl
cld
sub
xor
sbb
add
mov
mov
xchg
jmp
xor
mov
adc
pop
push
or
or
pop
xor
lods
mov
jl
add
outsb
jns
aas
pusha
fdivs
fadds
pushl
cmpsl
ss
add
pop
dec
inc
sbb
and
mov
xor
sub
xor
push
jb
fidivrs
leave
sbb
mov
xchg
cmpsl
scas
out
js
xchg
adc
dec
ss
repnz
cmc
into
pop
inc
and
xlat
loope
insb
pushf
xor
test
pusha
test
ret
insb
and
insl
mov
in
add
jle
mov
xchg
add
lods
adc
iret
jae
in
lret
outsb
aam
std
xchg
sti
mov
sub
mov
leave
sbb
fnstenv
sbbl
out
data16
movsb
sahf
xor
jge
repz
fsubs
xor
sahf
leave
test
fnstcw
sub
cmc
mov
or
cmpl
lahf
aas
cltd
xor
movsl
out
fdivrl
test
cmc
pop
adc
cmc
mov
or
aad
hlt
lods
test
movb
xchg
addr16
mov
cs
mov
jnp
add
out
jne
cmpsl
xabort
sub
fstps
loopne
pop
xchg
sbb
loop
inc
aas
and
les
jmp
push
mov
mov
addb
aaa
mov
push
pusha
xchg
orl
push
xor
or
push
mov
push
xchg
sbb
std
jmp
je
cmc
pop
inc
adc
mov
xor
xchg
lret
stos
inc
cld
jecxz
and
popf
lcall
add
dec
ja
cmpsb
push
ljmp
loopne
mov
adc
lret
xorb
mov
insb
sbb
sub
shlb
lods
cmp
xor
inc
fwait
add
bound
jg
fidivrl
in
loopne
dec
nop
ja
popf
stos
call
adc
jno
hlt
jmp
ror
pop
dec
jp
mov
add
arpl
cltd
es
test
aas
push
pusha
mov
and
ja
in
stos
add
add
mov
and
imul
out
jno
push
sbb
push
insb
shl
dec
xchg
inc
jo
aad
jno
shll
je
jecxz
loopne
xor
bound
jle
je
cmpl
orb
mov
scas
pop
dec
and
loopne
pop
push
xlat
lods
xchg
cmp
sub
jne
ret
testb
add
cltd
stos
imul
enter
mov
push
ljmp
inc
mov
arpl
or
and
mov
loope
add
popf
cs
mov
cwtl
jns
dec
jnp
mov
and
addr16
xor
loope
in
ljmp
inc
stos
pop
out
clc
pop
in
pop
add
popa
xchg
aaa
int
scas
sbb
inc
pop
inc
stos
ret
cmp
mov
test
inc
mov
xor
add
cmp
xlat
fisubl
mov
pop
dec
lods
popa
loope
fsubrs
push
js
sbb
sub
mov
xchg
mov
pop
xor
adc
fildll
cmp
or
pop
xor
add
mov
outsb
dec
pop
lret
xbegin
movsl
nop
and
bound
jecxz
add
sahf
or
jl
xor
fmull
sti
orl
add
pop
dec
inc
push
aas
mov
mov
jne
mov
outsb
js
add
jge
leave
mov
std
cmp
xchg
lret
icebp
mov
incl
arpl
xor
pop
arpl
insl
pop
jecxz
jl
push
inc
shll
mov
dec
add
xor
xor
pop
dec
sub
mov
sarb
rcrb
fadd
sbb
int
inc
or
dec
fnstenv
ror
sahf
xor
inc
push
cltd
sub
out
mov
dec
push
push
pop
dec
and
pop
sub
cli
and
sbb
scas
stos
shrb
mov
dec
push
sbb
pop
jnp
lds
adc
mov
iret
les
daa
aaa
add
mov
aas
jle
fwait
push
mov
cmpsl
sub
js
pop
dec
test
sub
test
les
sbb
add
push
repnz
js
mov
sbb
inc
mov
mov
sub
xchg
imul
jp
jo
movsl
lock
or
jns
or
je
cltd
mov
shrl
xor
jl
ljmp
loop
subl
out
lahf
sbbb
pop
dec
ja
inc
fadd
movsl
adc
xchg
inc
mov
mov
rcrb
mov
push
xchg
add
adc
adc
jae
in
cmp
adc
in
ret
cld
add
mov
jnp
pop
lea
inc
bound
sar
jns
es
cmc
out
mov
push
daa
lahf
lret
stos
call
aaa
adc
stos
jecxz
shlb
ficomps
push
mov
mov
mov
lret
pusha
call
in
in
inc
and
pop
out
repnz
popf
mov
push
and
sub
push
shrl
stos
das
jle
call
cmp
xchg
daa
mov
lret
test
mov
cmp
pusha
xchg
adc
aaa
cs
addr16
jmp
ffreep
loop
dec
or
icebp
inc
cmp
mov
mov
push
xchg
mov
add
cltd
xchg
stos
adc
cmp
sbb
jae
sbb
pop
push
pop
pop
push
lea
daa
inc
iret
pusha
mov
xor
cmp
sub
adc
loope
cs
lods
dec
pop
add
clc
dec
out
mov
mov
adc
cmp
pop
add
jg,pt
rolb
sub
xchg
mov
lret
sbbl
sbb
adc
dec
inc
cmp
adc
pusha
fnstenv
fwait
mov
xchg
xchg
push
inc
xchg
jbe
imul
loop
xchg
movsb
pop
loopne
xchg
or
sbb
mov
stos
stos
stc
push
xor
mov
mov
outsl
sbb
jp
pop
mov
notb
mov
call
xchg
cmp
pop
imul
push
mov
jle
push
dec
mov
mov
lods
in
xchg
pop
mov
xchg
dec
and
mov
ret
pop
into
mull
addl
cmp
cmp
inc
fcomi
ss
mov
aad
sti
insb
jbe
cmp
cmp
push
ja
cmpsb
sbb
fwait
inc
into
pusha
jo
sbb
fmull
out
movsl
push
or
add
pushf
jbe
jl
push
push
lods
aam
jns
aam
dec
inc
into
lahf
daa
lcall
mov
aad
xchg
xor
imul
in
stc
out
xchg
add
push
mul
mov
xor
mov
dec
dec
push
mov
das
cmp
cmp
scas
jnp
cld
mov
xchg
sub
ljmp
inc
icebp
push
pop
lahf
adc
pop
aas
xor
xor
pop
sbbb
jp
jp
outsl
mov
popa
adc
pop
lods
aam
shr
mov
xor
mov
into
repnz
stos
mov
sbbl
mov
outsb
adc
pop
and
insl
jb
adc
inc
fcom
stos
stos
adc
pop
lea
rcrb
in
mov
add
jae
sub
dec
or
pushf
sbb
jg
inc
xchg
pop
or
test
dec
push
test
data16
push
movsb
clc
movsl
cmp
ret
xchg
xor
sbb
inc
sub
shld
xor
jge
add
stc
adc
lds
testl
outsl
hlt
pop
jae
sbb
and
jp
dec
jecxz
lcall
nop
xchg
pop
sub
enter
push
jne
xchg
push
into
ret
pop
xchg
mov
aas
sub
and
test
icebp
notb
fsubrl
cwtl
xchg
cmp
dec
or
or
cltd
imull
imul
gs
inc
cltd
xchg
push
mov
test
or
test
int
cmp
jmp
stos
dec
pop
aam
icebp
sbb
into
jb
cmpl
mov
mov
in
mov
xchg
jmp
cs
arpl
mov
in
mov
jb
es
sahf
in
fdivl
addr16
jge
aad
or
dec
loop
dec
repz
dec
lods
movsl
aam
sbb
sahf
xor
cmp
or
enter
sbb
test
and
and
cwtl
ljmp
aas
mov
mov
inc
aad
add
jp
push
adc
mov
mov
stos
mov
lret
jnp
inc
pop
sub
loop
sbb
pop
push
clc
push
add
sbb
es
insb
fmul
mov
mov
mov
imul
jg
xor
mov
lahf
xlat
aad
call
lods
nop
mov
jmp
jns
imul
inc
mov
test
add
sub
stos
test
shlb
je
mov
mov
pop
pop
inc
addr16
jno
jnp
cmp
jle
ja
pop
and
cmp
and
inc
divl
scas
mov
sbb
int
fisubl
pop
outsl
loope
inc
mov
test
jbe
shlb
sbb
ss
add
ret
bound
push
notl
ret
push
xchg
dec
dec
lds
gs
fldenv
xchg
test
enter
call
cpuid
movsb
shr
out
in
dec
jnp
dec
lea
int
and
outsl
push
sub
rolb
fsubs
repz
push
jnp
sbb
out
cli
addb
xchg
push
inc
push
push
scas
pop
adc
inc
cmp
das
dec
jae
test
pusha
movsb
xchg
adc
js
sbb
addr16
mov
jns
dec
lea
test
rcrl
jnp
ja
dec
mov
stos
jbe
inc
cmp
jb
pop
shr
dec
lods
or
jl
popa
cmp
pop
lcall
add
leave
loope
adc
icebp
sub
fcom
fs
xchg
push
mov
mov
push
lret
push
dec
sub
mov
mov
lock
es
xchg
setne
ret
ja
lret
jno
sub
jl
shl
rcll
xlat
push
pusha
xor
sub
adc
cmp
mov
sub
icebp
sub
xchg
sub
sbb
jnp
xchg
test
push
int
lods
fwait
cmp
cmp
lods
pop
push
pop
repnz
mov
ja
or
jne
fs
mov
ds
outsb
cmp
jle
pushf
push
push
faddl
cmp
movsl
outsl
lret
je
push
setne
cmp
repnz
push
aaa
pop
sti
mov
add
fisttpl
repnz
cmp
jmp
in
adcl
push
jle
jle
push
lret
and
lods
lcall
push
sub
push
fstps
xchg
in
or
push
xor
inc
push
scas
es
mov
lods
ja
jmp
mov
mov
aaa
and
movsl
fnstenv
sub
pushf
xorl
dec
stos
jns
pop
mov
das
pop
xchg
es
test
jp
nop
stos
lret
or
cmp
dec
movsl
enter
les
sbb
jge
pop
out
jne
dec
nop
xor
push
adcl
hlt
xor
xlat
add
mov
dec
sar
mov
cmpsl
jp
ds
pop
jl
cmpsl
fmull
xlat
inc
repnz
mov
cmp
mov
ret
adc
push
cmp
pop
adc
int
pop
mov
repnz
push
stc
aad
insl
aam
jns
int3
cmp
and
jle
xor
jnp
mov
jl
js
push
loop
or
push
push
xor
jne
xchg
popf
sbb
cmp
sub
mov
icebp
aad
and
je
mov
mov
push
stos
sbb
hlt
pop
movsb
xor
jb
jne
adc
sbb
mov
ret
cwtl
in
push
mov
sub
addr16
out
push
mov
add
imul
xor
stos
push
fldt
pop
fimuls
push
or
test
push
daa
adc
push
std
adc
mov
cmp
pop
cmc
cli
imul
mov
cmpsl
mov
out
gs
mov
mov
imul
ss
out
cmp
dec
fs
mov
jno
sbb
jg
xor
cmpsb
adc
bound
push
xchg
sbb
ja
sahf
push
movsl
mov
sbb
xor
ja
ret
mov
dec
sbb
mov
fldt
movsl
aas
imul
mov
movsb
mov
and
cmp
insb
xchg
push
fcmovbe
mov
push
cwtl
inc
fisttpl
pop
cltd
adc
dec
adc
jge
clc
or
or
sub
adc
sbb
xchg
xor
arpl
mov
loop
or
enter
mov
ds
inc
jl
mov
ftst
test
aaa
push
call
and
push
dec
mov
fcompl
clc
jl
daa
lret
jle
sti
shll
mov
insb
or
int
pop
loop
in
in
sbb
jae
dec
xor
mov
sbb
stos
mov
jne
test
and
outsb
cmc
adc
cld
xor
repz
cmpl
test
in
jb
cmp
lods
sbb
loope
aaa
cmp
enter
arpl
cltd
cmpl
fwait
pop
cli
popf
sbb
xlat
in
sarb
popa
daa
insl
push
int3
and
ret
mov
mov
cwtl
pop
add
jae
lret
cmc
adc
popf
shlb
sub
mov
xor
int3
mov
shll
and
ja
jns
fdiv
push
adc
push
mov
cld
pop
add
je
ret
lret
shll
pop
jg
inc
mov
xor
sbb
movsb
mov
pop
addr16
fld
pop
sub
mov
mov
mov
sub
xchg
sub
push
mov
test
or
out
xchg
sbb
or
outsb
loopne
insb
mov
lds
pop
sub
and
lret
test
dec
xchg
lods
ret
xchg
xor
jmp
lds
dec
test
pop
dec
xchg
mov
and
movsb
cmc
mov
pop
push
fdivrl
jne
std
inc
fwait
jl
mov
ss
push
jbe
sub
jae
adc
inc
push
movsb
sbb
lcall
stc
out
and
adc
pop
cmp
sarb
lods
xlat
sbb
mov
in
jb
inc
sbb
stos
jl
mov
pop
rclb
out
stos
shrb
int
cmc
mov
repz
fsubp
ds
fsub
scas
mov
inc
insl
add
idivb
fucomi
lcall
imul
push
fsts
dec
in
mov
fistl
jbe
or
or
ja
sbb
rolb
fstpl
pop
push
xor
pop
addr16
repz
orb
jne
push
xor
ljmp
into
insl
and
cmp
sar
mov
dec
xchg
cmp
movb
out
scas
movsl
subb
xor
xor
mov
pop
aaa
stc
mov
xor
lcall
sbbl
rclb
adc
fstl
add
push
pop
std
mov
lret
jl
cmp
cld
sbbl
push
pop
lea
in
ljmp
dec
pushf
cli
pop
rcr
stos
push
sti
sub
mov
sar
pushf
cwtl
mov
leave
loopne
aad
test
adc
adc
or
outsl
dec
xchg
iret
push
jnp
outsl
sbb
mov
fidivrl
test
cmpsl
adc
sbbl
jae
add
cmp
test
das
push
sbb
xor
mov
stos
ds
xchg
lret
add
push
ja
loop
dec
fs
and
std
push
dec
cltd
shlb
pushf
jge
cld
imulb
adc
gs
mov
dec
rcrl
dec
and
int3
mov
nop
xchg
test
scas
cld
xchg
push
lahf
pop
andl
aaa
shrb
fcoml
xchg
sbb
leave
pop
mov
icebp
jg
pop
fnstsw
mov
hlt
out
loope
jns
js
xor
ficoml
fisttps
lods
xchg
pop
stc
inc
in
or
mov
aaa
outsb
aad
push
mov
ficoml
cmp
in
daa
test
cmp
into
xor
das
repnz
sbb
dec
int3
fisubrl
mov
mov
lret
mov
pop
cmc
in
xchg
aam
cmp
fwait
inc
dec
fists
idivl
jb
and
dec
sahf
repz
scas
add
jnp
cmp
out
mov
push
xchg
leave
dec
xor
mov
arpl
pop
fdivrp
inc
and
jns
shl
sub
mov
dec
xor
aaa
jnp
and
jmp
std
xor
mov
sbb
pusha
mov
adc
cmp
out
pop
adc
inc
test
rolb
cmp
sahf
dec
ljmp
xor
faddp
mov
xchg
mov
loopne
lahf
aaa
dec
pop
cli
inc
in
adc
sub
lcall
mov
sahf
jae
mov
xor
pop
insb
mov
and
dec
sbb
mov
pop
mov
add
dec
push
mov
push
or
push
cmp
jecxz
jae
lea
loope
mov
sbb
mov
xchg
mov
pushl
adc
jmp
subl
or
sbb
mov
les
ret
mov
sub
push
into
aaa
dec
cli
jle
sbb
fnstsw
adc
jnp
stc
in
sbb
push
test
sbb
dec
mov
mov
rol
test
xchg
pusha
std
cmpsb
or
inc
jb
pcmpgtw
icebp
jno
mov
test
es
add
cwtl
repz
ret
inc
int
pop
add
out
jmp
xlat
cmp
es
jg
sbb
dec
add
xchg
xor
and
ds
jle
lcall
movsl
iret
jecxz
add
mov
xor
movsl
test
jb
xorl
jae
pop
popf
mov
jg
out
xchg
or
cmc
enter
insl
outsb
flds
and
imul
fbstp
xor
test
std
testb
lahf
adc
iret
mov
xor
jno
sti
push
gs
aas
mov
pusha
jno
inc
mov
pop
inc
dec
test
inc
mov
icebp
pop
repnz
mov
andnps
subb
jno
shl
xchg
arpl
cmp
jmp
and
outsb
scas
inc
or
adc
lods
leave
pop
xchg
push
out
inc
fs
cli
std
mov
test
jl
mov
xlat
out
out
push
movsl
xchg
ja
les
pop
pop
data16
sbb
jecxz
cmp
mov
cmp
xlat
lock
mov
sahf
icebp
mov
jmp
inc
or
icebp
adc
jmp
lret
call
sbb
or
jae
adc
and
por
in
cmpsl
out
fnstcw
dec
pushf
loope
mov
stos
loop
outsl
cmpsb
xor
dec
add
nop
ja
mov
and
add
addr16
xchg
iret
enter
aaa
lods
xchg
dec
stc
data16
push
push
mov
lds
adc
cli
mov
test
and
pop
sbb
stos
rclb
mov
rep
movl
outsl
into
hlt
call
cmp
push
lds
and
movsb
arpl
mov
pop
out
adc
jmp
xchg
adc
cmp
into
xchg
icebp
gs
sti
jle
push
std
aas
addr16
shll
mov
cmp
fldcw
inc
flds
cmpb
shl
or
pop
fnsave
cmp
push
aam
add
push
jl
xchg
aad
cmpsb
adc
pop
and
add
xchg
dec
and
dec
xchg
mov
outsl
into
mov
jne
into
loope
fstpl
aas
mov
jbe
jle
or
nop
adc
xor
incb
inc
js
or
out
mov
rolb
pop
stos
sahf
inc
mov
daa
out
idivl
inc
lret
sbb
jp
int3
aad
add
mov
lock
jne
fildl
xor
rorl
or
mov
andb
nop
repz
push
insb
xlat
in
ds
push
dec
sbb
and
adc
aas
fcmovnu
mov
pusha
movsb
call
mov
loop
mov
xor
mov
sahf
out
pop
int
ljmp
push
xchg
js
jne
mov
or
ljmp
out
adc
inc
nop
lret
jb
adc
outsl
lock
shr
xor
sub
and
test
ds
or
lock
stos
aam
nop
clc
push
or
xor
mov
cmp
mov
out
icebp
daa
add
mov
cmpsl
sub
je
mov
imul
lods
ror
cmp
sub
in
mov
mov
adc
mov
leave
cli
sbb
dec
push
daa
inc
xor
jns
int3
jbe
pop
testb
loop
push
mov
xor
rcrb
adc
push
je
loope
mov
loop
mov
and
div
vmovaps
test
rclb
out
popa
mov
out
imul
hlt
cli
adc
xor
mov
mull
xor
xchg
pushf
aam
sbb
cwtl
jg
loopne
adc
cmp
xchg
mov
lret
ja
js
dec
cmp
sbb
fdivs
mov
add
push
out
ljmp
xor
call
pop
add
jae
mov
bnd
dec
stc
sbb
inc
mov
mov
pop
movsb
mov
cmp
insl
bound
mov
ret
pop
iret
adc
xor
xor
push
out
pushf
inc
ret
sbb
add
repnz
aaa
sbb
pop
test
push
shl
pop
pop
vandnpd
fwait
sbb
xor
rolb
cltd
sub
push
mov
xchg
mov
add
cwtl
pop
mov
shlb
daa
mov
push
inc
jbe
out
push
mov
mov
and
xchg
je
xchg
fidivs
fwait
popa
xchg
xchg
rorl
shlb
mov
movsb
dec
xchg
inc
mov
pop
lds
add
inc
dec
in
icebp
push
cltd
loopne
mov
and
cmpsb
and
push
xor
xchg
mov
ret
mov
dec
fs
movsb
incb
fisubl
rcrb
mov
add
fisubrl
int
cli
dec
jl
xchg
jo
test
push
addr16
sbb
adc
mov
add
xor
mov
movsl
jnp
lods
orl
imul
mov
pop
ret
popf
clc
scas
test
cwtl
or
cmovne
xchg
loope
or
nop
test
sbb
ret
rolb
out
rorb
pop
pop
shll
add
cld
add
aad
test
repz
adc
fucomp
add
xlat
lock
dec
out
jecxz
js
sahf
dec
lret
bound
ret
dec
bound
inc
push
fwait
rolb
pop
and
sbb
jnp
pop
mov
pop
fsubrp
pop
jle
jnp
pop
or
cmp
adcb
cs
das
jb
mov
xchg
or
hlt
aad
negb
add
mov
fs
pop
and
pop
or
or
or
inc
add
cld
fwait
into
lds
mov
cmp
in
lahf
pop
adc
jl
lods
std
inc
inc
int
insb
scas
and
and
sbb
gs
mov
push
lcall
jmp
dec
in
jnp
adc
iret
jae,pt
repz
mov
cs
push
imul
cmp
fwait
in
pop
cmp
mov
cmpsb
outsl
cmp
cmpsl
scas
ljmp
int3
and
sti
shr
jne
shl
jecxz
mov
and
das
clc
aam
daa
ret
in
nop
mov
xlat
les
test
mov
inc
pop
fwait
into
sti
popa
sub
dec
pusha
aas
idiv
lret
cmpsl
iret
leave
lods
inc
fldt
shrb
and
jno
or
cld
ss
in
loope
mov
imull
sbb
sub
test
out
call
and
jg
popf
mov
dec
icebp
pop
je
xchg
test
int
push
int3
mov
xchg
sub
loopne
inc
add
imul
inc
cmp
stos
mov
adc
loope
gs
pop
pop
mov
and
mov
in
negb
xchg
daa
fs
cmp
and
cmpsl
loopne
add
nop
mov
mov
inc
gs
push
mov
pop
sbb
push
push
mov
rorl
adc
jnp
adc
loopne
dec
mov
mov
sarb
adc
jl
pop
jge
mov
inc
out
dec
cmp
outsl
or
es
imul
cmp
or
adc
mov
adc
fsts
jp
aas
rolb
insl
cmpb
mov
adc
aas
in
or
mov
sahf
sub
imul
sbb
test
xchg
imul
jl
sbb
cmpsl
pop
jmp
repnz
or
mov
push
mov
jecxz
mov
mov
ret
iret
scas
cs
push
jns
mov
cmc
or
push
data16
inc
pop
pushf
stc
ret
ret
out
add
cmp
or
inc
mov
lds
mov
into
mov
mov
adc
mov
pop
int
test
aaa
xchg
dec
xlat
dec
mov
adc
addr16
inc
push
inc
xchg
out
mov
inc
pop
push
xor
mov
pusha
dec
and
push
scas
dec
pop
sub
mulb
pop
add
xchg
xor
and
testl
test
negl
and
mov
pop
mov
in
in
adc
jecxz
push
push
mov
mov
aaa
inc
push
rcl
fldcw
jb
pop
cmpsl
pop
mov
mov
ljmp
sbb
add
cmp
cmp
xchg
push
pop
and
aaa
jb
jno
or
insl
js
test
lock
lods
pop
pmuludq
cmp
cmp
movl
pop
fisttpl
sbb
cwtl
jg
inc
add
sbbl
movsb
ss
jmp
les
into
pop
xor
adc
jne
hlt
andl
push
dec
fnstsw
orb
cmp
jo
push
add
or
test
call
mov
pop
fisubrl
aas
nop
pop
sbb
sbb
fsubrp
push
in
inc
pop
jp
sub
dec
repnz
mov
pop
inc
dec
mov
es
mov
into
rorl
movsl
jge
jno
xchg
xchg
test
cmpsb
mov
sub
push
and
add
ret
loop
dec
js
mov
pop
fwait
jbe
je
pop
les
out
std
and
movsb
shr
or
loop
jno
dec
lar
cmpsl
adc
in
aad
in
mov
pop
out
lds
adcb
in
dec
lods
adc
pusha
shl
xchg
jb
outsb
sbb
fmuls
inc
pop
cmp
xor
sub
push
into
in
out
and
pop
push
push
xchg
repz
or
movsb
filds
sarl
cmp
scas
mov
jne
or
mov
inc
jo
aad
fildl
mov
push
imul
xchg
jecxz
lret
cmp
rcrb
xchg
hlt
mov
repnz
outsl
xchg
xor
mov
arpl
add
cmp
stos
inc
adc
nop
sub
bound
lock
adc
xor
mov
rorl
clc
and
pop
and
xor
outsb
push
inc
enter
cmpsl
cmp
dec
or
or
xchg
in
cmpsl
jno
add
loop
shrl
repnz
sub
stc
lcall
pmulhuw
stos
daa
jb
add
dec
dec
mov
fs
dec
push
in
cmp
mov
push
sub
add
and
inc
les
or
loopne
push
cmp
call
pusha
ret
test
mov
push
out
mov
scas
mov
imul
cmpsb
mov
mov
stos
out
stos
dec
adc
es
cltd
push
shrl
ja
es
dec
push
cmpxchg
push
sub
push
into
jl
pop
adc
into
std
pushf
add
xchg
out
frstor
push
mov
loopne
int
push
dec
int3
jns
xchg
lahf
ret
jne
pushl
fs
sub
dec
jne
out
or
lods
lock
inc
insl
movsb
loopne
nop
cmp
add
cltd
repz
mov
mov
inc
int
aam
sbb
aas
xlat
out
xchg
push
insl
loopne
fwait
clc
pop
fstl
pop
and
into
mov
sar
pop
jns
fcmovu
mov
cmp
add
lret
mov
ret
sbb
icebp
mov
ss
mov
movsl
shrb
cmpsb
sbb
cs
in
cld
inc
jne
or
shl
cmp
mov
fs
insl
sbbl
shr
mov
dec
out
jecxz
out
lcall
xor
gs
inc
int
mov
and
out
inc
adc
dec
xchg
dec
dec
pop
adc
mov
enter
inc
xchg
js
push
add
cmp
mov
lahf
pop
shll
adc
sbb
pop
jb
insl
fcmovnbe
adc
ret
pushl
mov
sbb
sbbl
xchg
add
pop
orb
pop
xlat
pop
sub
xor
jb
bound
jae
mov
sbb
add
clc
scas
dec
adc
push
out
adc
mov
fidivs
cmp
sub
cmpsl
les
mov
cmpsb
bound
inc
imul
orb
dec
fnsave
ret
mov
adc
aad
ljmp
mov
jno
cmp
mov
pusha
andl
lds
jne
aaa
je
jmp
pop
jo
jbe
pop
add
sbb
inc
lahf
mul
pop
aaa
adc
int3
cmp
js
shlb
cmc
cli
add
mov
lcall
int
ficomps
movsb
imul
add
cmp
popa
ljmp
loope
sub
lea
call
and
lcall
pop
push
xchg
mov
shl
mov
inc
pop
stos
xchg
ljmp
daa
add
sarl
push
arpl
lret
pop
hlt
pop
cmpsb
mov
push
xchg
and
sub
pop
xchg
sbb
push
in
sbb
cltd
test
sti
add
xchg
push
push
punpckhbw
push
add
sbb
pop
sub
stos
cmc
and
cwtl
dec
inc
rorb
mov
rorb
adc
or
xchg
int3
mov
fistl
mov
and
add
and
push
popf
popa
sub
sti
dec
std
adc
shl
dec
out
out
insl
loope,pt
jbe
popf
xlat
ljmp
mov
fnstsw
nop
lods
scas
aad
popa
clc
bound
jae
nop
mov
inc
cld
or
into
dec
leave
mov
std
jno
fcmovu
sub
push
pushf
and
sbb
xor
jge
cli
pop
push
mov
or
mov
pop
xchg
and
jb
add
lret
lods
or
cld
mov
inc
insl
push
in
mov
adc
sub
inc
inc
sbb
inc
popf
adcb
xchg
xor
jmp
push
fdiv
push
pop
in
out
xor
lahf
xchg
iret
cmpsb
ret
push
mov
inc
clc
nop
pop
jge
ljmp
mov
adc
in
cmc
or
dec
mov
movsb
in
iret
in
add
jnp
clc
loopne
xlat
xor
scas
mov
test
leave
aam
push
cmpl
or
out
pop
push
addl
dec
fwait
adc
out
and
mov
loop
mov
mov
mov
xor
pusha
inc
imul
jae
inc
pop
xchg
mov
insb
lret
jg
into
nop
dec
in
enter
xchg
push
das
xchg
out
add
xor
dec
cli
test
gs
push
push
add
jp
inc
dec
imul
jmp
in
in
es
rcrl
loope
xor
jno
rorb
jno
fildl
loope
fs
int
loopne
test
leave
fadds
fsts
stos
push
out
pushf
push
in
cli
scas
push
mov
scas
push
mov
int
pusha
jne
repnz
push
push
mov
mov
sarb
outsb
mov
call
icebp
cld
push
leave
mov
sub
imul
inc
stc
mov
or
mov
sub
jne
or
xchg
testb
mov
add
add
insl
sub
push
xlat
cmp
xchg
arpl
loope
fldt
fistl
sub
mov
inc
out
in
mov
repnz
sub
pop
jecxz
jp
jnp
mov
addr16
xchg
cmp
add
sbbb
lcall
iret
cli
fdiv
jbe
js
mov
out
and
xchg
call
jp
sbb
in
sub
lret
lcall
aam
cmp
adc
adc
push
ja
mov
inc
mov
pushf
shlb
mov
adc
test
loopne
stos
scas
sahf
pop
shll
dec
ret
loope
mov
int3
sub
push
inc
outsb
aad
sti
adc
adc
ss
jg
or
aad
push
push
fucom
push
adcb
in
xor
pop
cmpsb
fisubrl
fadds
pusha
fstpl
lock
jnp
cmp
sbb
xor
shll
and
mov
cli
orb
scas
pop
das
inc
in
je
outsb
inc
lret
xchg
inc
add
sub
shll
dec
hlt
insb
rorb
dec
dec
sub
cmp
pop
mov
int
xor
inc
add
imul
pop
outsb
out
scas
xchg
popf
adc
je
ds
inc
pop
xchg
or
gs
xchg
mov
xchg
mov
and
pop
jg
aam
inc
mov
loope
stc
leave
xchg
push
or
insl
pop
mov
xor
stos
aaa
mov
insb
dec
test
cmp
bound
repnz
fidivrl
or
lret
sub
sbb
sbb
jge
icebp
les
inc
loop
add
decb
mov
fwait
jecxz
mov
and
fcomps
movsl
cmp
pop
dec
cmc
xlat
jnp
outsb
iret
fs
xchg
in
cs
dec
sub
sbb
jo
js
mov
mov
enter
ror
sbb
dec
inc
icebp
jecxz
sahf
int3
jno
lret
sbb
xor
popl
ficoms
and
cmp
push
cmp
daa
cmpsl
cs
aaa
push
sahf
jb
mov
shl
in
dec
xchg
pop
imulb
ja
inc
in
clc
dec
jo
mov
loopne
ss
ret
pop
and
test
popa
xchg
enter
cmp
mulps
cmp
add
jmp
call
jno
cmc
mov
sbb
out
jp
mov
inc
mov
inc
shl
pop
pop
add
inc
decb
test
outsl
jne
pop
shl
xor
xor
xor
jge
shl
pop
pop
jo
cmp
fwait
imulb
lea
pusha
insb
sahf
mov
xor
js
pop
pusha
xor
movsl
inc
daa
test
call
and
pop
cmpsl
push
inc
test
and
out
or
add
inc
jb
aaa
shll
bnd
mov
filds
mov
xchg
mov
daa
push
sub
inc
mov
inc
lods
inc
add
add
push
push
outsl
lea
lea
jo
dec
sahf
cs
das
adc
cs
shll
and
rcrl
dec
mov
lods
xlat
xchg
add
push
fstp
pop
aas
in
cwtl
mov
es
aam
into
out
enter
cltd
std
push
fisubl
inc
inc
jnp
stos
test
lock
jns
add
test
pusha
inc
arpl
mov
pop
mov
call
inc
pop
pop
sub
sub
inc
loop
pop
or
orl
std
add
jno
xchg
sub
inc
and
and
sti
rclb
lods
push
jne
nop
fmuls
jno
sbb
xor
xchg
popf
pop
int3
leave
rclb
mov
lret
mov
test
pop
enter
fnstsw
imul
sub
push
lods
pop
ljmp
jg
and
push
test
cmp
xchg
inc
ret
lcall
shr
mov
mov
pop
dec
mov
jp
jp
push
and
test
push
sbb
and
sti
sarl
enter
jns
je
cli
inc
movsl
inc
xor
mov
leave
xor
test
and
pop
inc
adc
filds
std
push
mov
jb
mov
enter
shll
cmpsl
mov
repz
add
js
popf
adc
fwait
sbbb
mov
aam
or
xchg
loope
dec
loop
mov
out
sub
lret
cltd
jge
mov
xor
lcall
fbstp
pop
xchg
ja
lds
jp
sub
jne
idivb
out
mov
sbb
pushf
cltd
mov
call
sub
xchg
rcrb
js
scas
cwtl
arpl
adcb
out
mov
adc
imul
push
xor
test
pop
mov
cmp
loope
mov
jecxz
icebp
sbb
pop
mov
push
jne
int
test
lds
stos
punpckhdq
sbb
mov
cmpsl
pop
dec
push
imul
pop
sub
addr16
mov
or
mov
and
mov
out
add
and
jle
out
loop
shrl
push
ss
stc
adc
inc
stc
filds
pop
mov
sub
scas
movsl
inc
cmc
cli
xor
orb
or
ljmp
int3
adc
les
and
inc
iret
call
xchg
into
inc
or
pop
cmp
sbb
cmp
mov
cmp
fcompl
das
mov
out
in
sahf
or
ljmp
mov
cmp
out
jle
fsubs
sbb
lahf
pop
in
dec
add
dec
cmc
fs
fucompp
int
inc
sub
cmp
push
sub
out
dec
adc
repnz
pop
sbb
mov
add
outsl
fimuls
int3
shr
cli
mov
cli
xchg
push
adc
addr16
push
sub
sbb
jl
and
mov
test
je
jns
adc
sbb
pop
inc
dec
into
mov
mov
add
jne
jb
adc
cmc
icebp
lret
mov
out
in
mov
in
jb
lahf
fists
jmp
sbb
or
push
cld
dec
inc
bound
dec
lcall
sbb
adc
push
jae
xor
or
xchg
inc
xor
and
or
push
jp
out
cld
leave
sub
xchg
pop
cmp
cmpsb
lret
adc
sbb
dec
cwtl
fldl
data16
pop
push
jae
mov
out
jae
iret
es
hlt
mov
cmp
sbb
cmpsl
cmp
xor
cs
roll
dec
scas
inc
add
inc
cmp
aam
mov
scas
xchg
test
hlt
push
cmp
jno
lahf
sets
imul
in
push
gs
mov
outsb
lret
cltd
mov
out
xor
insl
cltd
test
nop
or
out
movsl
adc
pop
ja
dec
push
push
jnp
loopne
pop
sti
jp
andb
fimull
jbe
js
iret
dec
xor
and
jns
mov
mov
jge
and
pop
inc
pusha
pushl
jbe
jecxz
mov
adc
test
jecxz
js
enter
dec
cli
xchg
loop
ror
enter
nop
sti
sbb
mov
jne
fdivrs
fadd
push
pop
sub
sbb
testl
push
push
sahf
or
sar
lock
jl
xchg
mov
pushf
jno
cmpsb
or
cld
ljmp
call
mov
mov
cmp
ds
enter
inc
mov
movsb
call
mov
repnz
push
pop
pop
pop
in
dec
xchg
and
pushf
cmpsl
pop
lock
dec
mov
add
mov
gs
mov
inc
mov
aam
or
push
mov
icebp
inc
sub
push
out
mov
xchg
jl
rcrl
add
mov
xor
into
loope
aam
xchg
dec
lahf
inc
test
lcall
stos
xchg
jg
enter
jmp
ret
scas
pop
ja
jmp
fs
push
add
or
jns
inc
inc
mov
xchg
ret
push
xchg
ficoms
jle
das
aas
mov
dec
jp
jecxz
xchg
jb
inc
dec
loop
mov
push
mov
test
push
inc
jne
xor
push
pop
pop
testb
frstor
aaa
inc
stos
push
das
pop
sub
imul
add
popa
addr16
sub
pop
dec
jo
mov
pop
jp
mov
imul
sub
fs
push
pop
sti
in
dec
repnz
inc
sub
inc
iret
xchg
xor
add
cmp
arpl
fimull
cli
data16
je
dec
mov
fwait
lahf
jge
sbbb
sub
pop
adc
mov
aas
rcl
mov
add
loop
insb
xor
inc
aad
mov
mov
xlat
scas
mov
in
dec
nop
jg
push
aaa
adc
adc
sbb
sub
dec
dec
push
ljmp
mov
xor
bound
push
insb
aad
mov
and
bound
dec
dec
xor
out
rcrl
vmovq
mov
scas
adc
or
repz
xchg
inc
mov
xchg
mov
aam
cmovl
jo
or
xchg
push
xchg
shrb
dec
adc
mov
sbb
cmp
push
xor
xchg
sbb
mov
jae
mov
cmp
daa
dec
xor
sub
xchg
test
stos
fsubs
mov
pop
and
stos
in
sbb
int
mov
jne
pop
push
je
inc
xchg
sbbb
call
call
in
push
mov
jecxz
lds
xchg
test
cmpsb
sti
cmp
and
fidivrl
inc
ds
int
imul
out
cmp
push
jb
arpl
pop
xchg
loop
out
in
pop
and
hlt
inc
daa
test
jb
movsb
mov
sub
aas
or
or
aam
je
sub
int3
movsb
dec
sbb
sub
negl
jl
xor
out
lock
lahf
inc
mov
out
xchg
jb
pop
aam
mov
and
cli
sub
inc
addr16
pop
push
dec
lock
adc
mov
dec
pop
xchg
xlat
test
iret
sub
ds
sub
daa
clc
andl
clc
mov
sub
lods
lock
jle
rcrl
jg
pop
xor
div
hlt
mov
mov
push
into
sbb
pop
cmp
flds
lods
xor
repz
adc
jne,pn
ret
add
dec
mov
loop
cmp
inc
imul
int3
inc
push
and
iret
gs
stos
push
mov
hlt
mov
pushf
xchg
inc
push
jbe
lods
test
imull
sbb
mov
fwait
sub
xor
std
or
daa
inc
fxch
adc
mov
ficoml
and
imul
rclb
sahf
pushf
mov
xchg
sub
add
add
push
lret
ret
sbb
popa
pop
xchg
jns
mov
stmxcsr
jmp
sahf
mov
inc
nop
lods
cld
pusha
mov
dec
pop
xchg
xchg
dec
cli
mov
pusha
or
sbb
sub
xchg
mov
mov
pop
sub
cmpsl
pop
xor
or
jecxz
in
add
push
frstor
fdivrs
mov
imul
jl
adc
xchg
sub
mov
mov
jge
cmp
mov
ja
cli
jo
or
push
xor
loop
out
mov
lret
jmp
cs
push
or
mov
dec
leave
adc
jns
cmc
clc
mov
jl
testb
sub
cmp
push
bound
mov
or
fdivr
fcmovb
js
inc
mov
push
dec
pop
aas
jae
and
scas
fisubrs
xor
push
jle
fidivrl
cmp
jp
jg
mov
call
int
pop
mov
mov
inc
sarb
outsl
or
mov
aas
and
leave
xor
call
inc
cmpsb
mov
jp
sbb
cmp
add
pop
popf
mov
ja
jge
ret
cmp
out
out
pop
in
xor
andb
pop
js
into
lea
std
iret
push
aaa
outsl
faddl
ficoml
mov
sahf
xor
insl
in
lods
xorb
arpl
add
movsb
jno
or
pop
xlat
cmp
sbb
lods
or
xchg
push
ljmp
mull
popf
push
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
.byte
fs
.byte
inc
clc
aaa
jae
into
stos
sub
jne
adc
cld
sbb
outsb
dec
adc
hlt
cmpsb
jbe
pop
xor
gs
sub
call
cltd
in
sbb
shrb
out
into
jnp
aad
xor
and
xchg
sti
dec
cs
jg
adc
adc
pop
dec
lds
jg
push
fcmove
gs
mov
stos
mov
mov
mov
mov
lahf
or
or
popa
sahf
gs
lret
cld
xchg
jge
rcr
test
clc
cld
mov
mov
es
sbb
adc
xchg
ret
imul
movq
fwait
xchg
xor
into
xchg
repz
testl
jno
in
cmp
xchg
mov
sub
pop
orl
rorb
stos
addb
lds
push
pop
aad
je
and
pushf
and
xchg
arpl
lods
inc
dec
mov
sahf
adc
inc
cld
insb
loop
sbb
mov
mov
lds
sbb
dec
sbb
fwait
cld
mov
imul
cmp
xor
or
mov
lods
mov
pop
pop
mov
jo
pop
stos
pop
call
loope
or
lret
add
shl
fidivrl
js
xor
xor
mov
cmp
cmp
lock
push
mov
adc
popa
pop
dec
and
xor
jle
lret
loopne
frstor
and
ret
push
adc
pusha
xchg
popa
dec
cld
addr16
xor
sbb
das
rcrb
fldenv
xchg
fsubr
imul
cmpsl
cmp
mov
cs
pop
inc
mov
mov
bound
les
cmp
in
ret
iret
scas
or
daa
or
and
jb
add
inc
sub
mov
mov
loopne
cmp
das
xor
mov
out
jp
fists
mov
push
lret
pop
fcomps
or
outsb
in
ret
mov
test
mov
dec
jl
out
mov
lcall
mov
or
jecxz
add
iret
xor
dec
repz
je
ficoml
rcrl
adc
pop
imul
sub
daa
in
pushf
rclb
sub
jns
pop
xorb
test
rcll
sbb
and
cmpsb
repz
mov
inc
sbb
ljmp
mov
ret
faddl
jp
pop
mov
dec
in
hlt
xor
push
fnsave
pusha
mov
add
stos
mov
cmp
pop
and
lods
icebp
push
push
fs
push
mov
rcrb
int3
stc
movb
xchg
bound
cmp
dec
out
or
dec
mov
lds
jne
xlat
mov
mov
inc
adc
add
and
out
scas
sub
pusha
imul
mov
dec
daa
or
push
sbb
adc
add
dec
repz
mov
inc
mov
out
jnp
scas
cs
popf
xlat
or
ds
or
shrl
shl
mov
cmp
adc
icebp
nop
sbb
xchg
inc
pop
xchg
and
scas
and
nop
jo
cld
jbe
inc
popf
add
sub
mov
push
testl
adc
adc
loopne
xchg
dec
pop
and
arpl
pop
ret
xchg
mov
or
pop
push
or
das
popa
arpl
pslld
cmp
and
sub
sub
sub
addr16
rorl
test
fwait
or
push
leave
add
in
jl
xor
mov
sub
or
add
repz
xchg
push
or
sbb
outsb
dec
mov
xor
loopnew
scas
pop
sbb
jbe
movsb
cmp
insb
enter
mov
mov
ds
and
out
subl
xchg
add
scas
dec
mov
push
sbb
dec
xlat
ja
ret
inc
jnp
neg
xor
cmp
out
hlt
outsb
stos
call
pushf
xchg
inc
rclb
loope
movsl
out
xlat
push
sub
shll
pop
mov
dec
pop
daa
mov
sub
test
pop
bound
mov
dec
pop
in
fisttps
aad
movl
stos
push
in
jbe
dec
add
fsubrs
jno
mov
adc
mov
cwtl
aaa
push
mov
test
shl
and
push
call
shl
push
xchg
je
and
mov
or
cmp
or
sub
jno
pop
cmpsb
cwtl
or
lahf
mov
outsl
adc
pop
jae
push
shlb
or
add
push
dec
js
xor
inc
inc
mov
pushf
mov
lcall
mov
cltd
int
fistpl
xchg
jecxz
dec
mov
cmp
roll
xor
cmpsl
outsl
les
xchg
das
xor
cmpl
xor
adc
sar
xor
out
sbb
into
call
dec
dec
push
mov
and
mov
in
xor
popa
pop
and
or
pop
push
push
sbbl
and
inc
xor
sub
testb
cli
mov
dec
in
xchg
cld
mov
cmp
test
adc
inc
pop
xor
outsb
sti
bound
mov
lods
cmp
adc
add
push
das
sub
xor
mov
inc
in
add
fadds
jmp
inc
sbb
cltd
pop
mov
push
test
adc
jmp
in
push
pop
cmp
loop
mov
pop
bound
mov
ret
movsl
cmp
das
mov
jmp
pop
push
into
inc
adc
sub
mov
in
lahf
jge
lds
arpl
sbb
adc
fstps
and
jle
push
xchg
jge
or
or
jl
xor
dec
cli
dec
in
sti
das
inc
ret
add
test
mov
add
and
shl
pusha
data16
jmp
daa
jp
movl
mov
and
jmp
int3
xor
inc
jae
loopne
pop
xchg
mov
push
outsb
loope
out
inc
clc
mov
xchg
pop
insl
push
jb
jge
enter
sub
inc
pop
jmp
adc
cmp
jne
and
sbb
xor
push
lcall
xchg
mov
ss
jnp
in
xor
cmp
rolb
or
fnstenv
cwtl
pop
adcb
xchg
inc
mov
aad
jecxz
or
cmpsb
pushf
and
inc
push
mov
xchg
mov
or
xor
cli
in
pop
pop
pop
xor
and
out
ds
adc
xchg
fmul
add
mov
dec
insb
ljmp
lock
pop
mov
mov
ret
popf
sti
ds
movsl
sub
mov
pop
push
cmp
std
test
mov
pop
jl
lods
mov
push
aam
pusha
inc
sub
cmp
orb
pop
push
cs
push
dec
sbb
dec
movsl
fisttpll
and
inc
test
jmp
push
lock
rcr
cmp
in
test
pop
mov
lods
mov
xchg
mov
outsb
test
mov
mov
pushf
shl
sbb
mov
test
lods
jg
jae
popl
stc
inc
sub
lock
xchg
in
jmp
das
bound
aam
ss
testl
pop
and
nop
add
xchg
dec
jo
push
mov
inc
jge
sbb
inc
mov
in
mov
cmp
loop
fidivrl
icebp
stc
sub
out
icebp
dec
out
test
mov
dec
mov
test
out
popa
testl
inc
mov
int
sub
mov
sarb
lock
dec
inc
xor
jp
push
sub
ret
je
sarb
aad
cmp
mov
jl
jge
inc
aam
roll
cmc
pop
inc
mov
dec
insl
aaa
and
negl
jnp
in
mov
outsl
and
xchg
cli
cld
pop
adc
xor
add
mov
adc
sar
xor
sbb
cltd
sbb
test
and
in
xchg
loope
jmp
pop
pop
and
data16
inc
outsb
fs
or
adc
call
fwait
cmp
adc
mov
js
lods
scas
push
pop
sbb
push
in
in
outsb
push
nop
insl
inc
xchg
lock
jnp
das
fdivrl
les
addr16
call
inc
test
dec
jmp
sahf
dec
mov
insl
inc
into
push
fs
mov
cltd
sbb
das
roll
aaa
pop
sub
mov
add
jge
pushf
cwtl
dec
xor
mov
stos
or
fisubl
add
sbb
insb
jae
pop
out
jno
js
shrb
push
rclb
mov
decb
xchg
push
ljmp
dec
mov
adc
inc
jb
cli
mov
or
and
daa
add
call
fldl
push
aad
inc
cmp
xchg
mov
ljmp
adc
add
jl
sub
addr16
sbb
inc
xchg
divb
loop
aam
imul
in
jmp
xor
sbb
or
push
sub
jl
cmp
hlt
pop
repnz
mov
stos
xchg
or
jle
mov
jns
mull
call
push
arpl
sbb
cmp
push
jns
fbstp
jb
dec
outsl
mov
add
xor
shlb
aaa
fs
lds
movl
mov
mov
lahf
aam
jno
or
lahf
pop
xor
sahf
mov
add
in
es
add
test
pop
or
jo
jae
jne
in
arpl
lret
int3
xorb
xchg
sub
inc
hlt
sub
jno
mov
or
or
pusha
sub
xchg
push
insl
scas
sahf
test
aas
sub
pop
ret
pop
xor
hlt
cld
outsb
loopne
push
inc
mov
push
xor
rolb
shr
cmp
cmc
fwait
xchg
or
or
dec
or
or
addr16
pop
jae
les
jl
and
cltd
adc
pushf
and
pop
mov
adc
push
lret
xchg
or
inc
or
mov
popa
lahf
jg
in
or
fldenv
icebp
insb
mov
lahf
mov
fisubrl
xchg
fidivl
or
dec
fucomip
inc
outsl
popa
stos
mov
mov
lds
daa
cmp
arpl
xor
xchg
push
adc
mov
daa
scas
lahf
mov
mov
iret
dec
xchg
fwait
popf
jb
xchg
movsl
jno
sbb
sahf
loope
mov
xor
pop
add
or
in
cmp
mov
inc
dec
push
dec
xor
mov
jl
loop
xchg
out
push
push
adcb
sbb
push
data16
and
into
sbb
dec
orl
lret
rcll
push
faddp
bound
sbb
xor
xor
xorl
push
add
xor
push
xor
test
mov
in
mov
mov
dec
fs
push
movsb
lret
add
enter
mov
sub
sub
adc
clc
cltd
jne
cmp
mov
sub
js
inc
scas
mov
mov
jg
out
mov
or
ja
in
adcl
fnsave
sub
out
js
pusha
in
and
jns
pop
loop
cli
mov
jecxz
mov
mov
pop
ljmp
jnp
rolb
mov
sbb
ds
test
add
loope
jp
daa
loopne
or
mov
dec
lods
movsl
dec
in
divb
fisubrs
mov
dec
pop
mov
adc
inc
push
mov
jbe
sti
je
ja
pop
mov
lret
roll
dec
mov
clc
or
or
mov
xchg
aaa
cmp
jo
xor
subl
xor
push
jecxz
mov
int
or
lods
adc
nop
mov
cs
mov
xchg
data16
xor
out
rclb
mov
das
jbe
lds
popa
pop
mov
adc
mov
les
test
pop
stos
divb
cltd
jp
and
aam
stc
arpl
rol
ret
out
jae
and
and
xchg
push
cld
popf
js
cmp
adc
mov
fwait
sub
repnz
add
repz
inc
inc
and
lcall
incl
fsubp
je
lods
lock
mov
scas
xor
inc
aaa
dec
ss
mov
dec
pop
ja
push
fcoms
jbe
imul
inc
pop
stc
ret
loope
jbe
shrb
pop
ret
xchg
call
pop
outsb
shlb
push
out
cmpsb
popa
or
stos
js
mov
adc
movsb
and
sbb
leave
add
shlb
or
cmp
xchg
push
jge
cwtl
addr16
mov
icebp
ja
mov
andb
mov
fdiv
jl
adc
fcmovnu
hlt
pop
add
sti
enter
clc
test
movsl
xchg
adc
jp
sub
jae
pop
ljmp
xor
pop
loopne
dec
int
rol
sub
and
or
and
or
sahf
or
ljmp
jp
jl
jmp
mov
cmp
sub
in
scas
push
xchg
mov
in
ret
movsl
cmpsb
xchg
fimuls
sti
pusha
in
adc
das
outsb
jmp
in
ret
fucomip
js
xchg
jmp
movsl
outsb
stc
daa
ljmp
in
outsb
mov
dec
push
mov
sbb
mov
divl
cmp
ja
mov
cmpsb
jno
adc
lret
push
jle
and
sbb
cmp
or
aaa
xchg
jl
out
jne
add
les
fcompl
in
ljmp
lcall
mov
mov
mov
imul
push
dec
jmp
push
jg
int
mov
and
aad
ljmp
fimull
pop
push
fcoms
mov
cmp
mov
popf
das
popa
fs
repnz
push
mov
das
scas
and
cmpsb
inc
out
lret
jns
cwtl
mov
mov
xchg
push
or
pushf
aam
sbb
xor
jns
adc
add
mov
loop
rorb
jl
inc
push
inc
adc
sbb
fmul
and
insb
addl
push
xor
mov
aam
add
nop
lods
shrl
mov
leave
push
pop
data16
lcall
sbb
loop
ficompl
add
mov
cmc
cmpb
add
xor
or
orl
in
movsl
or
test
xor
test
adcb
iret
mov
addr16
mov
or
je
jmp
or
loope
lock
cli
out
int
ret
inc
jle
mov
add
mov
into
push
pop
gs
mov
and
xor
mov
or
inc
xchg
sub
loope
in
add
xchg
pop
ffreep
jp
inc
mov
sarb
jae
jne
cli
inc
add
jnp
xchg
repnz
ljmp
jb
es
adc
nop
sahf
int3
adc
pop
add
mov
packsswb
ja
xchg
add
ljmp
dec
pop
sub
lcall
filds
add
push
lahf
fcoms
scas
jns
stc
dec
jecxz
mov
imul
jge
int
jb
out
pop
movsl
fcmovbe
pop
push
jnp
dec
pop
roll
loope
js
and
push
mov
fstps
shr
aaa
ds
pushf
lahf
insb
mov
jl
das
cld
xor
dec
push
popa
out
insl
sub
mov
repnz
test
fs
into
ljmp
int
push
ds
inc
lcall
jb
inc
jo
jmp
pop
ret
data16
adc
mov
scas
mov
hlt
pslld
mov
ret
fidivrs
mov
sbb
sbb
mov
rcr
jp
jmp
fwait
or
sub
mov
fdivr
xchg
lahf
mov
fs
and
aas
jle
rclb
addr16
mov
arpl
gs
aad
push
lahf
push
negl
ds
mov
das
pusha
stos
sub
jno
leave
mov
out
shrb
mov
out
out
xor
push
mov
cmp
test
shrb
shll
test
gs
pop
push
scas
stos
fnstcw
add
sbb
mov
mov
adc
out
ds
adc
pop
jl
shlb
sbb
int
and
pop
mov
fcomps
aaa
push
push
or
movsb
push
push
insl
add
or
cmp
test
push
arpl
ficoms
mov
outsb
pop
inc
sti
mov
lods
push
inc
adc
and
and
push
add
adc
ljmp
sub
dec
aad
arpl
dec
addr16
cmp
test
loope
fidivrl
pop
stc
lret
mov
inc
cmp
xlat
jns
loope
cmpsb
mov
mov
call
pushf
push
int
scas
and
ss
jge
adc
xchg
jmp
arpl
adc
ret
test
push
pop
mov
mov
lea
les
add
lock
dec
lret
adcb
cmp
jle
stos
cwtl
pop
push
dec
push
adc
repz
jmp
sub
inc
push
inc
shll
ds
pop
inc
popa
mov
pop
aaa
fcompl
add
xchg
faddl
loope
in
mov
mov
repnz
jae
push
jmp
out
clc
xchg
push
xadd
xchg
adc
fdivrl
iret
and
dec
repz
js
lea
add
test
out
lock
or
lahf
popa
call
pop
adc
inc
out
jbe
scas
aaa
dec
call
and
adc
movsb
sarb
loope
outsl
or
cmp
mov
iret
pop
lea
lds
shr
push
and
or
xchg
jb
in
inc
fidivl
adc
mov
xor
movsb
sbbb
jb
mov
es
test
and
mov
icebp
cmp
add
mov
int
adc
out
pop
inc
sbb
mov
jbe
mov
les
ljmp
test
mov
jbe
imul
mov
insb
jmp
inc
cmp
jno
into
aad
in
cltd
sub
cmp
sti
mul
test
xor
ror
jns
imul
in
inc
dec
orb
sub
fcomps
stc
iret
mov
shrl
fprem
outsb
loop
push
lods
fimuls
mov
add
jmp
fists
dec
movsl
lcall
int
lds
inc
inc
jb
sub
and
pop
fcomip
pop
loop
push
xchg
inc
rcrb
cmp
or
mov
jbe
mov
ljmp
jle
nop
cmp
cli
test
shl
xor
mov
cmpsb
sarb
stc
xchg
hlt
sub
adc
cltd
es
xor
xor
aas
inc
dec
cmp
jmp
cwtl
lods
mov
cmp
std
lcall
add
xor
lret
dec
lock
sbb
xchg
stos
add
pop
push
sti
aad
adc
add
lcall
jle
cmovno
cli
cmpsl
cmpl
xchg
ret
jns
or
cli
dec
sub
daa
mov
dec
sub
dec
sti
adc
les
ss
fwait
out
pop
adc
std
or
cmp
add
in
pop
jecxz
add
scas
mov
add
add
mov
sbb
clc
mov
jns
lcall
std
insl
sub
xchg
out
add
sbb
dec
rolb
fs
pop
push
add
addl
or
mov
in
mov
mov
sbb
inc
pop
pop
rol
in
sub
imul
adc
in
xor
test
mov
cmp
in
xor
pop
loope
stos
adc
sbb
repnz
std
sub
xchg
mov
ret
fs
bound
shlb
add
cmpl
into
push
dec
in
nop
xchg
jb
imul
movsb
jae
fdivrs
or
or
insb
mov
movsb
and
sub
cmp
cmp
loope
push
sbb
xchg
jp
outsb
jbe
cld
cmp
lret
or
xchg
xchg
ret
aas
inc
jae
lahf
mov
jmp
push
bnd
inc
shl
ret
push
into
mov
pop
fs
addr16
in
cmp
jmp
sub
sbb
push
hlt
jl
push
sub
not
push
fists
iret
mov
orw
jg
mov
xchg
cmp
cmc
and
and
pop
xor
jns
test
insb
addb
popf
add
or
test
dec
mov
rolb
add
sbb
ds
outsl
out
mov
icebp
adcl
add
lret
fdivs
mov
scas
pop
xchg
icebp
add
cmp
clc
push
cmp
sub
es
scas
fwait
popf
pop
int
and
dec
rclb
bound
push
mov
ds
xlat
aaa
movsb
mov
in
inc
lock
push
dec
mov
add
jl
sub
pop
mov
test
jo
bound
xchg
ret
in
sbb
mov
popf
or
mov
add
push
sbb
rcrl
mov
cwtl
add
adc
sbb
xchg
lahf
sub
pop
fstl
in
pop
xchg
adc
xchg
test
add
push
data16
push
iret
cmp
negb
loope
xchg
mov
pop
or
mov
push
fwait
gs
sbb
sbb
push
inc
pushl
js
fistpll
sbb
mov
cmp
pop
push
jp
pop
cmp
ret
xchg
scas
xchg
das
aam
fstpt
cmp
sbb
sbb
hlt
bound
fcoms
add
add
push
fwait
sub
test
mov
sti
and
jp,pn
adc
popa
or
cmp
mov
mul
pop
dec
fld
cmp
and
or
pop
ret
adc
int
mov
mov
xlat
mov
scas
test
ds
flds
mov
mov
fldl
mov
pop
ds
pushf
insl
movsl
or
loope
and
es
pop
js
stos
mov
jne
loope
mov
or
loope
mov
push
push
popa
imul
push
test
xor
sahf
xor
test
mov
imul
rcrl
dec
inc
mov
dec
cmp
int3
cmc
les
pusha
xchg
aam
testl
push
xchg
enter
rclb
outsb
pop
test
test
aaa
mov
leave
dec
leave
and
test
test
test
fstpl
inc
push
aad
pop
push
hlt
dec
dec
xchg
call
popf
scas
adcb
cmp
adc
out
mov
and
adc
mov
mov
mov
fxch
mov
jp
mov
xor
sub
jp
xchg
cwtl
ret
adc
cmpsb
dec
cmpb
fsubrp
push
test
push
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
mov
dec
shlb
and
.byte
push
mov
mov
test
je
mov
test
jne
xor
pop
ret
cmpb
jne
xor
cmp
sete
mov
pop
ret
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
sarl
add
fstl
sbb
div
add
int
inc
and
out
mov
loop
js
loop
stos
fidivrl
movsb
inc
push
pop
cld
in
aas
add
mov
adc
mov
adc
add
int3
pop
add
jmp
call
mov
jle
add
mov
into
inc
or
nop
cmpl
dec
sahf
mov
xlat
imul
sub
mov
mov
mov
addb
mov
shll
mov
in
sbb
push
int3
ds
and
or
std
inc
popa
mov
jne
sub
sahf
or
stos
in
jl
pop
push
inc
cmp
mov
out
pusha
js
in
mov
dec
jo
mov
sbb
icebp
pusha
mov
adc
sbb
ret
adc
mov
cmp
adc
add
and
and
jnp
sti
pop
loope
out
data16
cmc
sub
fimull
or
out
jge
aad
xor
jae
mov
cmpsb
adc
addr16
fiaddl
sub
movsb
fstpl
aam
or
xchg
cmpsb
mov
sahf
notb
bound
mov
rcrl
dec
jp
jl
and
fs
cmpsl
lcall
sbb
dec
jl
xchg
pop
adc
gs
or
xchg
xorl
push
insl
mov
fucomi
lcall
add
push
xor
pop
lcall
xor
pop
je
pop
push
mov
testl
loop
icebp
or
cmp
loopne
inc
jg
mov
fsts
pop
sbb
jae
movsb
out
xlat
lret
hlt
fcmovu
cltd
roll
pushf
in
jp
into
aad
aas
jl
jle
mov
dec
jg
push
adc
push
mov
bound
ljmp
scas
lret
sub
mov
cmpsb
push
sbb
jmp
and
and
adc
xchg
loop
mov
xor
hlt
pop
sbb
stos
inc
adc
jbe
cmp
mov
pop
sub
cmp
sub
ss
add
push
xor
arpl
shl
imul
rorl
cli
jecxz
lcall
test
sub
pop
rorb
mov
inc
push
fs
jo
int
dec
mov
mov
and
mov
es
jecxz
in
enter
shrl
mov
cmp
cmp
shl
stos
ja
sbb
dec
adc
mov
sub
mov
mov
cmc
repz
mov
cmovae
lock
call
fidivrs
and
les
test
lods
out
push
pop
out
pop
test
ret
rcl
cmp
addr16
dec
fmuls
adc
push
mov
stos
or
fs
and
xor
xor
imull
jbe
fisttpl
insb
mov
fildl
mov
jecxz
testl
fiaddl
sbb
dec
mov
popf
xchg
loope
adc
push
lahf
aam
ja
in
jbe
andb
inc
or
addl
and
imul
insb
pop
clc
add
cmp
inc
dec
sub
lds
dec
aad
ljmp
fcompl
and
jp
inc
fs
out
fistps
cmp
jno
adc
push
fucom
repnz
jns
lock
or
jne
inc
lahf
les
jmp
xchg
sub
mov
clc
mov
jmp
xorb
jb
cmc
mov
cmp
rep
cmp
fstps
je
push
or
popa
sbb
loope
loopne
roll
push
arpl
sbb
cld
jle
pop
cmp
mov
cwtl
dec
in
out
mov
test
mov
cmp
sahf
add
imul
faddl
cmp
mov
mov
stos
lods
popa
inc
nop
pop
bound
fucomi
or
and
pop
and
cmp
xchg
ficomps
mov
repz
mov
cmp
cmp
pop
jl
inc
out
out
mov
mov
clc
rcrb
or
jno
xor
fldcw
out
and
bound
sbb
mov
mov
inc
and
ficompl
es
cld
jo
xchg
sub
inc
inc
test
roll
sub
mov
sub
cmp
aas
xor
adc
xor
lret
aad
sbb
das
out
sbb
push
in
xor
mov
out
dec
popf
inc
and
fcoms
icebp
pusha
dec
add
stc
es
or
push
int
and
in
std
dec
push
ds
in
sbb
fisubs
inc
xchg
adc
ret
ljmp
sahf
mov
cmp
cltd
pop
lret
push
push
insb
aam
fcom
pop
fs
daa
push
dec
pop
popf
and
hlt
xor
out
je
les
cli
mov
jl
cs
add
adc
mov
mov
int
xchg
add
and
inc
or
cmpsl
mov
daa
icebp
loope
and
dec
bswap
push
out
or
test
fidivs
mov
ja
add
enter
or
dec
xor
in
test
std
lock
ficoml
mov
mov
mov
mov
imul
sahf
frstor
adc
or
fidivl
dec
jns
ljmp
push
xchg
pop
out
int
push
testl
stos
daa
push
lahf
or
test
cmp
inc
pop
movsl
roll
scas
lods
mov
add
sbb
cltd
cltd
pusha
cli
popa
add
icebp
test
cmc
pop
sbb
pop
aad
les
sub
icebp
mov
sbb
cmp
dec
repz
sbb
push
mov
insb
sbb
and
outsl
push
subb
jnp
cltd
mov
popf
test
gs
aas
iret
cmp
xchg
ds
inc
test
fiadds
fisubrs
pushf
mov
sub
dec
add
repnz
push
and
les
adc
pop
or
add
xor
lea
cltd
mov
int
and
daa
jecxz
push
sahf
jg
rolw
sbb
imul
xor
sbb
shrl
cmpsl
inc
faddl
cld
lods
pop
stc
adc
imul
and
push
or
mov
jns
push
inc
mov
add
test
out
cmpsb
in
inc
xchg
fisubl
in
cmp
iret
fsts
arpl
popaw
add
adc
adc
iret
push
andl
pop
fistl
leave
add
lds
xor
fbstp
mov
test
xchg
jae
xor
pop
push
loop
inc
xor
addr16
cmp
js
or
lods
leave
mov
insb
jae
mov
push
inc
mov
adc
test
dec
cmp
push
jmp
lahf
cld
mov
cmp
push
dec
jns
lret
cltd
and
lods
pop
hlt
adc
je
test
add
outsl
mov
cmpsl
aam
fwait
mov
xor
dec
inc
pushf
andl
mov
rcrl
iret
icebp
and
ja
lret
in
pop
hlt
fcom
or
xor
lcall
pmaxub
insb
test
sbb
loope
dec
mov
push
pop
inc
in
cmp
push
push
nop
mov
xchg
adc
sti
inc
xchg
les
gs
xchg
adc
and
xchg
dec
pop
cmp
pop
cmp
push
xchg
test
lods
inc
push
repz
movsl
pop
or
xchg
xchg
adc
or
lea
dec
out
in
nop
aas
popa
xor
lods
testb
xor
xchg
lea
mov
and
cs
fisttpl
xchg
sbb
cmp
icebp
mov
dec
in
sub
xor
xor
outsb
mov
mov
loop
mov
mov
iret
in
lret
xorb
push
xor
mov
test
rcl
lret
je
add
lahf
jb
sub
test
mov
pop
mov
add
add
int
xchg
dec
mov
gs
lds
ret
fiaddl
mov
fcomps
cmpsb
cmp
icebp
xor
jle
xor
sub
loopne
adc
jo
imul
dec
cmp
cmpsl
push
push
pop
bound
mov
shlb
jmp
test
pop
fnstsw
add
fisubs
es
aad
cmp
mov
add
fdiv
cld
fldl
clc
mul
jno
jb
lahf
addb
aam
push
out
dec
pop
mov
cmc
xlat
nop
mov
add
scas
arpl
mov
in
incb
inc
sub
cmpsb
jno
jno
fdivl
mov
rcrl
and
push
iret
cmp
insb
mov
fsubrp
stos
pushf
inc
cmpsb
into
rcll
movsl
inc
mov
into
shl
dec
dec
jecxz
cltd
fs
pop
push
scas
and
xlat
jae
hlt
lea
mov
push
jmp
dec
lods
cli
xchg
cld
adc
imulb
mov
pop
sub
movsb
pop
in
xor
xchg
pop
jge
and
cli
daa
mov
mov
mov
repnz
add
cmp
fsubrs
gs
stos
lock
xchg
xchg
fwait
test
shll
or
mov
cmp
loopne
sbb
adc
mov
xchg
adc
cmp
sbb
pop
fbstp
jns
jns
xchg
mov
stc
inc
pusha
cmp
add
push
lds
mov
out
inc
jae
je
pop
loopne
lock
cmp
inc
in
mov
hlt
inc
pop
dec
jns
sbb
aam
jb
sub
inc
xor
sub
fcoml
push
movsl
stos
js
inc
movsb
cwtl
sarb
shll
mov
enter
shll
cmc
ret
mov
mov
add
cmp
mov
jae
cmp
repz
jae
or
xchg
mov
mov
les
dec
xchg
adc
int
int3
jle
test
jae
xchg
sub
shrl
inc
lcall
ljmp
es
out
aam
push
adc
lods
scas
js
and
xchg
jo
push
cmc
out
ss
cs
data16
xchg
sub
mov
sub
adc
mov
gs
or
cltd
cld
sub
cmc
inc
add
xor
pop
in
inc
and
dec
sbb
inc
add
outsl
add
ror
loopne
int3
andl
mov
inc
mov
cmp
sub
bound
push
call
repnz
jl
or
pop
das
lds
aad
pushf
mov
pop
sub
dec
pop
xor
cmp
sti
mov
pop
icebp
mov
les
mul
push
jl
repnz
sahf
les
jo
dec
adc
and
popa
sub
call
leave
call
loop
jle
cld
xchg
sub
cmp
cmp
mov
xacquire
xorb
bound
push
and
cmp
inc
addb
pop
push
pop
out
testb
dec
jmp
xchg
pop
xor
jns
xor
add
popa
test
jge
scas
pop
faddl
test
cmp
std
sbb
xchg
jnp
inc
adcl
xchg
repnz
mov
lahf
push
xchg
sub
ret
sbb
jno
dec
xchg
les
insl
ret
rcr
shr
lcall
into
pop
sub
repnz
scas
xor
cmp
neg
lret
dec
mov
adc
mov
inc
movsl
jns
in
test
imull
pushf
mov
add
inc
mov
pop
sbb
icebp
adc
xor
sub
gs
rcr
icebp
imul
sbb
cmpsl
add
push
bound
sub
test
int
sbbb
lods
dec
or
inc
das
xchg
test
or
mov
repz
xchg
aaa
dec
mov
adc
iret
mov
adc
push
jno
in
hlt
mov
outsl
mov
push
sub
push
mov
es
sub
mov
sbb
or
test
fidivl
cmp
adc
sbbl
adc
cwtl
stos
scas
insl
pop
or
sar
rcrb
add
mov
into
je
fmuls
enter
pop
dec
push
and
jnp
rorl
out
lret
mov
mov
scas
shlb
je
push
pop
fcompl
jg
mov
lahf
jle
add
leave
nop
jmp
xlat
andl
xchg
add
jp
jnp
test
loope
outsb
clc
test
out
xor
fldt
or
lret
in
jnp
das
or
adc
inc
clc
loop
adcb
add
jmp
sbb
repz
sarb
mov
dec
and
or
sub
jnp
add
int3
push
add
jae
adcb
sbb
mov
xchg
in
cli
push
in
subb
dec
inc
mov
inc
mov
or
insl
sbb
push
cmp
mov
ljmp
adc
mov
ss
or
loop
mov
sbb
call
repnz
cli
push
xchg
fisubrl
xchg
cmc
daa
push
popf
push
dec
pop
jecxz
test
in
mov
push
push
jns
rclb
fs
pusha
mov
gs
out
jne
pop
push
adc
cmp
push
and
je
and
jns
push
movsl
gs
imul
xchg
mov
jg
dec
cmp
xor
sbb
fscale
dec
aam
ret
test
stos
lret
shlb
gs
and
pop
sub
sub
or
and
cmp
ret
insl
insl
jnp
xchg
cltd
inc
and
xchg
ficompl
xor
sub
fcoml
sub
xchg
pop
sti
js
or
xchg
cmp
add
and
lods
pop
jmp
jle
stc
in
lock
adc
es
push
jmp
nop
iret
inc
aaa
iret
and
xor
fldt
into
xor
jnp
ljmp
jae
jnp
push
mov
xchg
cmp
mov
or
add
shl
cld
xor
idiv
fbld
ljmp
ss
jns
pop
pop
push
pop
testb
add
inc
adc
push
addr16
xor
dec
mov
or
add
sub
mov
mov
roll
push
repz
adc
out
lahf
icebp
movsb
mov
jecxz
pop
std
dec
jae
push
jno
adc
arpl
outsb
fstl
ror
xchg
fs
cmpsl
sbb
jmp
imul
mov
add
lret
push
rcll
mov
jmp
outsb
stos
lds
cmc
sub
ret
inc
sub
imul
lods
mov
pop
adc
cmp
xchg
xchg
das
inc
mov
mov
xchg
stos
or
push
cmp
push
pop
sbb
test
adc
mov
push
adc
push
pop
jp
or
lret
add
subb
movsl
dec
add
stos
adc
dec
sti
adc
jmp
outsb
jle
jo
or
push
add
cli
xchg
pusha
insb
add
loopne
dec
jbe
cmp
xor
mov
das
out
sbb
sbb
mov
adc
fstpt
inc
in
roll
iret
mov
in
push
arpl
adc
push
scas
push
stc
xchg
push
cmpl
sub
mov
adc
loop
int3
adc
mov
popf
je
nop
jl
mov
gs
inc
adc
fld
scas
adc
sbb
lea
dec
shrl
insb
shlb
xchg
dec
mov
dec
fstps
sti
jae
cs
push
sbbl
mov
imull
xor
pusha
sbb
inc
sub
add
lcall
ja
inc
sbb
daa
sub
fimull
xchg
ja
jmp
mov
fstps
jle
sub
mov
das
xchg
dec
popa
into
jle
lock
notb
cmp
repz
cmpb
adc
sub
add
and
loopne
inc
aas
dec
aaa
sub
cmp
aaa
imul
sub
mov
je
mov
cmpsb
or
es
fwait
lret
jl
dec
mov
jbe
lret
pop
fidivrs
cmp
jo
xor
and
sbb
add
dec
dec
call
xchg
ljmp
popf
add
cld
xor
mov
cmp
fwait
or
fildl
sub
pusha
adc
jmp
sub
outsb
shl
push
cmp
dec
push
les
test
add
and
jg
pushf
shrb
fwait
add
mov
sub
push
pop
negb
aad
push
scas
and
fbld
pop
pop
pop
iret
lea
xchg
imul
mov
daa
dec
aam
mov
mov
inc
and
dec
call
xchg
mov
adc
call
push
lcall
arpl
loopne
sbb
add
mov
stos
dec
sbb
adc
dec
mov
imul
mov
aad
xchg
cmpsb
negb
cmp
rcrb
add
xor
mov
jns
aam
and
aaa
xchg
sbb
fiaddl
aas
lret
dec
mov
sbb
push
int
aam
xor
push
js
scas
push
and
ret
out
enter
mov
lds
or
ja
xor
lret
push
inc
cmp
mov
into
test
xchg
inc
lock
sahf
jnp
into
adc
test
jp
or
jmp
fld
test
out
jge
add
sub
clc
xor
fstl
mov
sub
repnz
cld
and
outsl
and
xchg
lea
and
int
aad
cld
xchg
lcall
pushf
test
stos
dec
les
repnz
adc
insl
or
jg
lahf
push
sahf
enter
pop
cmp
mov
pop
jae
and
dec
jnp
in
mov
dec
mov
jb
loope
fcoms
jle
mov
fwait
mov
fwait
mov
xchg
inc
or
push
mov
andb
test
arpl
ss
mov
pop
xchg
push
mov
xlat
pusha
push
sbb
das
inc
outsl
mov
ja
mov
sub
and
sbb
loop
cmp
pop
dec
fisubrs
lcall
sub
loopne
rcl
jmp
call
adc
repz
push
cmp
les
ss
inc
in
out
in
imul
scas
lock
push
outsb
pop
mov
xchg
inc
pop
sub
rorb
mov
or
push
bound
test
adc
test
cmc
pop
xor
mov
mov
sbb
mov
dec
sbb
inc
dec
aam
dec
jg
jg
add
mov
clc
xor
mov
orl
andb
and
push
sbb
pop
inc
sbb
movsl
fs
call
sti
test
xchg
iret
mov
mov
sbb
pop
outsb
or
mov
hlt
adc
mov
pop
test
dec
dec
mov
lods
mov
add
outsb
xchg
gs
enter
int3
aas
dec
bound
jmp
mov
imul
mov
orb
fsubp
adc
es
movsb
mov
jns
cs
sub
lea
in
xchg
jecxz
mov
jp
test
mov
pop
dec
mov
mov
xchg
popf
fldt
pop
push
inc
movsb
sbb
lret
shll
out
mov
out
test
mov
push
outsb
out
icebp
movl
xchg
cmp
pop
mov
aad
and
adc
inc
cmp
pop
movsl
push
cmp
cmp
sbb
cmp
jno
mov
stos
jle
insb
mov
xchg
aam
add
sub
ss
lods
cltd
add
pop
fs
ret
xor
sub
mov
cld
xorl
loopne
push
pop
cmp
or
testb
jmp
adc
out
fwait
inc
xchg
adc
cmpsl
test
jge
ss
jge
mov
dec
mov
icebp
push
mov
pop
add
sub
pusha
jne
loope
and
imul
test
add
sar
outsb
movsl
and
test
lret
cmp
loop
mov
cmp
test
lea
mov
je
push
jne
push
outsb
sub
hlt
adc
xor
push
xchg
loopne
cmp
add
orb
push
aas
mov
jl
stos
inc
inc
push
mov
xor
rcrl
decl
filds
jns
cltd
stos
testl
mov
sub
dec
push
pop
cmp
pop
add
pop
shrl
call
aam
mov
outsb
and
out
mov
xchg
adc
out
cmp
sub
cmp
mov
in
in
sub
mov
inc
dec
xchg
int
lods
sbb
pushf
mov
pop
jle
lcall
inc
rcrb
adc
in
mul
repz
pmaddwd
sub
mov
into
adc
add
cmpsl
imul
mov
cwtl
cmp
mov
insb
ja
sbb
sub
jns
or
mov
cmc
orb
pop
mov
sub
mov
push
pop
or
outsl
mov
rolb
push
sub
mov
outsb
stos
or
jb
mov
incb
dec
push
and
lahf
xlat
pop
icebp
jmp
es
inc
js
popf
cmp
mov
mov
jo
mull
dec
sub
jae
ds
adc
and
js
sub
jl
cmp
leave
sbb
out
xlat
ficoml
in
iret
or
lahf
mov
test
jo
leave
enter
insl
and
outsb
les
fistl
adc
lock
lret
sarl
push
jecxz
testb
sbb
aam
inc
dec
enter
and
push
pop
inc
vcvttps2dq
test
push
xor
lret
sub
and
bound
mov
movsb
fsub
sbb
iret
pop
and
rclb
dec
sti
cmp
test
push
jmp
test
das
mov
mov
add
cs
ds
mov
or
adc
ja
jge
mov
in
aas
mov
mov
or
mov
dec
cwtl
jg
pop
in
lea
adc
jb
ffreep
inc
sarl
rcrl
mov
jecxz
dec
test
xchg
outsb
repnz
dec
xor
les
pop
mov
or
sub
ds
sub
aad
pop
pop
lret
xlat
leave
mov
inc
and
fdivr
inc
ljmp
xor
dec
sti
ljmp
call
jae
shlb
imul
inc
pop
mov
lahf
dec
nop
dec
dec
dec
pusha
sub
mov
in
pop
pop
fwait
jns
dec
adc
mov
inc
pop
arpl
add
pop
adc
shl
mov
fwait
and
leave
jecxz
xor
jmp
lods
mov
test
and
sbb
pop
jbe
mov
cwtl
add
aas
pusha
imul
decl
mov
sbb
push
sbb
cwtl
add
imulb
pop
lock
fisubs
add
clc
adc
adc
gs
push
mov
roll
rcl
cmpsl
fcmove
inc
fnsave
push
cld
in
fsubrl
out
fidivl
loop
hlt
and
sbb
mov
dec
repz
call
xchg
icebp
add
pop
leave
mov
dec
scas
push
xor
sarl
fs
loope
roll
cmpsl
xor
stos
inc
mov
lret
mov
jb
dec
xchg
lock
dec
fstps
fst
data16
das
gs
cmpsb
into
xchg
es
or
repz
cmc
adc
mov
shrd
mov
mov
jl
addr16
pop
pop
fdivr
movups
push
mov
ljmp
cmp
popf
mov
popf
cs
mov
mov
dec
stos
cmpsl
notb
push
negl
push
xor
lret
xchg
adc
ret
lea
sub
fcomip
add
movsl
jmp
jmp
sub
jmp
mov
leave
pop
inc
test
aaa
pop
xchg
jle
out
xchg
xlat
adc
push
setns
iret
call
hlt
dec
adc
in
push
lahf
xchg
inc
imulb
cmp
jbe
sbb
jg
jae
mov
imul
xor
pop
jmp
fstpl
jmp
mov
stc
nop
subl
in
sub
inc
out
sbb
pop
insl
cmp
pop
add
inc
jle
adc
aad
mov
adc
leave
das
pop
test
push
std
punpckhdq
xchg
jns
jnp
out
sbb
adc
addr16
pop
addl
push
add
xor
inc
fstl
pop
aad
insb
rol
loope
into
dec
out
std
mov
ret
outsb
adc
sbb
cli
xor
lret
aas
mov
sbb
ja
insb
in
inc
adc
push
jno
mov
cmc
pop
jb
xor
push
jge
std
push
lods
xchg
xchg
rcl
and
sti
call
sub
fistpll
inc
mov
lret
xor
push
in
popa
add
mov
jnp
mov
fcomip
sbb
add
sub
mov
xchg
pop
pop
add
push
rcr
lods
rcl
lahf
insl
push
jmp
cmovae
in
cmp
icebp
or
push
cwtl
lds
js
mov
push
mov
clc
and
aad
inc
dec
xchg
ret
mov
repz
cmpl
dec
mov
adc
mov
push
mov
pop
push
sub
sub
orl
rcrl
xchg
mov
jg
ds
add
xchg
loope
pop
cmp
lods
mov
in
das
push
rolb
arpl
aam
mov
mov
xchg
scas
scas
test
inc
xchg
mov
out
pop
adc
ljmp
xor
jo
mov
mov
sarl
shlb
jmp
mov
clc
pop
dec
xchg
leave
dec
jecxz
aaa
mov
push
xchg
clc
jg
xor
and
xor
in
add
repnz
jmp
rcl
add
movsl
inc
insl
sbb
gs
aas
fisttpl
insb
sti
push
jno
sbb
ficoms
rcrb
push
dec
pop
nop
jne
andb
add
push
push
dec
pop
push
movsl
adc
loop
in
das
mov
test
stos
ljmp
in
cmp
mov
push
push
sbb
push
or
in
pop
dec
cmp
or
adc
insb
mov
cmp
das
lret
xchg
cmp
fidivs
int3
mov
inc
pop
data16
rcrb
pop
jmp
push
sti
test
xchg
jne
fistpll
cltd
jo
in
add
adc
aam
repz
jg
popa
sbb
push
push
insl
ret
adc
adc
scas
lret
xchg
mov
mov
push
iret
adc
dec
sbb
cmp
in
inc
std
add
jg
ljmp
jle
cmpl
ljmp
imulb
jnp
mov
mov
jbe
jo
dec
fucompp
adc
lahf
repz
test
inc
dec
sub
pushf
jbe
in
iret
cmp
icebp
imul
mov
dec
loopne
fstps
adc
cmpsb
fcmovne
hlt
cmp
adc
pop
movsl
adc
stc
xchg
mov
push
pop
lods
ds
inc
roll
push
jg
xor
jl
lcall
mov
rcrb
add
fldenv
and
fsts
lcall
lock
xor
dec
jmp
icebp
daa
push
pop
icebp
mov
data16
jbe
movsl
add
xchg
push
mov
push
mov
sub
idiv
pop
call
sahf
lret
sbb
and
test
pop
pushf
pop
mov
pop
mov
lcall
icebp
push
lahf
ret
int
movsb
cwtl
inc
popa
or
addb
fdivr
je
push
xchg
cmpsl
mov
sahf
add
jg
ds
pop
ljmp
lret
sub
in
or
rcrl
xor
mov
ss
cwtl
fs
push
rorl
cld
jmp
sbbb
pop
or
lock
and
daa
loop
arpl
subl
outsb
js
pop
mov
lret
sbb
jne
mov
shlb
lcall
or
loopne
cmp
xchg
xchg
shl
mov
adc
movsl
sub
dec
mov
shll
cmpsl
fiaddl
rcl
inc
push
imull
pushf
fs
add
test
fnsave
and
push
in
loop
outsl
xlat
adc
add
insb
cmp
and
js
sbb
push
fiadds
aaa
mov
in
dec
xchg
push
xor
test
divb
dec
pop
pop
xor
pop
dec
xchg
je
out
xchg
dec
negb
pop
push
add
push
gs
stos
mov
mov
inc
stc
xchg
mov
and
gs
push
mov
mov
inc
inc
xchg
fcompl
jb
ljmp
shlb
sbb
xor
hlt
call
push
fwait
and
addr16
pusha
fwait
icebp
loope
cmp
jg
icebp
dec
pop
out
xchg
lods
add
cmc
iret
into
xchg
pop
xor
imul
pop
movl
cmpsb
pop
mov
lahf
mulps
call
dec
dec
clc
orl
cli
push
das
dec
testl
push
or
aas
sub
ss
mov
mov
rcl
jmp
insl
std
jnp
dec
add
adc
jmp
push
sub
pop
test
push
into
shll
insb
arpl
or
cmpsb
push
subb
adc
cmp
and
ljmp
lcall
aad
jno
sub
mov
sub
xor
out
ret
lcall
js
lahf
sub
push
les
mov
or
into
scas
jo
push
and
in
push
stos
mov
xchg
dec
aam
pop
mov
jns
sub
or
jbe
dec
cmp
cmp
stc
insb
pushf
and
xchg
cmp
arpl
or
movsb
mov
sti
loopne
jne
xchg
xchg
pop
in
pusha
pop
fldenv
sahf
push
lea
inc
jne
mov
mov
dec
inc
jg
cli
cld
loopne
inc
jp
jl
xchg
imul
mov
cmp
mov
mov
xor
orb
mov
cltd
shrb
pop
js
jo
add
lcall
stc
inc
cmpl
push
lods
shll
stc
leave
mov
loopne
mov
mov
lret
or
rcrl
mov
cmc
adc
test
daa
out
adc
xchg
test
cmpb
sarb
mov
iret
and
push
test
pop
dec
mov
inc
jmp
push
mov
and
loop
test
stos
push
mov
int3
scas
lods
rcrl
stc
add
xchg
sbbl
imul
push
or
push
sub
lods
inc
cmp
jecxz
mov
add
xchg
xor
sub
leave
push
mov
int3
mov
lods
add
xchg
lock
xlat
arpl
and
sbb
xchg
in
clc
sub
xlat
jnp
movsl
push
and
xchg
icebp
out
in
out
xchg
loopne
lret
pop
loop
xor
xlat
mov
mov
cltd
sti
xchg
inc
popa
push
add
rol
data16
cmc
sbb
in
gs
iret
inc
inc
mov
fucom
add
scas
and
lods
pop
xor
pop
jo
cmpsb
dec
cmpsl
add
or
sub
loopne
popf
cmp
push
cmpl
pop
les
mov
les
mov
add
mov
inc
popf
pop
out
std
fstl
mov
mov
jmp
mov
pop
pop
xchg
push
jp
push
or
in
adc
movsb
aas
pop
sbb
dec
mov
cmpsb
jns
push
in
das
cmp
jmp
push
decl
push
enter
pop
sti
push
popf
jae
xchg
rorb
push
jno
mov
arpl
and
popf
clc
fstpl
push
test
lock
lds
pusha
ljmp
dec
clc
lea
sub
jne
arpl
jmp
xchg
mov
aas
adc
mov
mov
xor
scas
fs
mov
push
jmp
ja
scas
xchg
jb
push
shrl
cmp
rorl
cmp
mov
add
ret
rorb
mov
inc
sarl
inc
cmp
jno
sub
packssdw
test
mov
cmp
cmp
sti
shl
cmp
mov
mov
push
stos
into
repnz
frstor
stos
pop
and
fbstp
push
insb
das
call
imul
call
fs
xor
rorb
xchg
rcrl
sti
mov
mov
lock
xor
and
clc
add
push
ficomps
cmc
xchg
mov
jmp
data16
inc
outsb
push
sub
fucomip
fneni(8087
or
sub
cmp
dec
ss
lock
xor
inc
sti
lret
mov
pop
adc
jge
push
sub
or
repz
add
xor
dec
jmp
push
cwtl
add
cmp
mov
or
in
add
dec
cmp
fwait
push
in
sbb
aas
xchg
mov
sub
sub
mov
stc
lock
mov
inc
popf
subb
aaa
mov
push
out
es
outsb
pop
pop
mov
cmc
adc
mov
test
sbbl
aas
push
flds
scas
push
in
mov
outsb
dec
xchg
stos
sbbl
int3
mov
jge
outsl
inc
das
push
adc
jo
pop
jl
out
sub
cmp
sbb
js
loope
les
fbstp
in
xor
in
push
dec
iret
cmova
mov
pop
mov
inc
dec
lods
pop
out
jmp
mov
dec
mov
imul
push
and
push
fiaddl
in
or
mov
int3
dec
loope
push
fcmovnu
stos
jne
add
mov
pop
and
mov
cwtl
rclb
scas
in
in
je
rcrl
shrb
hlt
sbb
inc
push
xor
addr16
fsubrp
out
pop
xchg
cmp
sbb
mov
fisubrs
adc
imul
fstps
leave
leave
lea
mov
jge
test
push
xor
xlat
aad
ljmp
fst
push
mov
aad
pusha
data16
mov
sub
xchg
lock
xorb
cld
or
fisubrs
in
mov
flds
in
loopne
rcl
push
xor
jae
push
or
mov
mov
mov
inc
lock
out
insl
mov
mov
std
push
insl
lea
ret
fidivl
ret
insb
xchg
pop
sbb
loopne
lods
aam
out
shld
sub
add
mov
dec
adc
inc
pop
or
sub
jno
cmp
sbb
xchg
es
in
jb
or
ret
inc
cmp
sbb
in
adc
cmp
inc
xchg
bound
hlt
xor
dec
jnp
test
cltd
fnstcw
jnp
jecxz
lcall
out
pop
jg
jne
shlb
push
and
adc
push
jl
pop
adc
mov
add
push
leave
push
pushf
mov
and
pop
fsubr
roll
popf
add
ds
popl
inc
pusha
out
sub
movsb
filds
lret
sti
push
call
rep
nop
cltd
or
jns
stos
adc
dec
xchg
or
or
bound
arpl
jmp
outsb
mov
sti
idiv
repz
dec
sub
je
out
cmp
adc
mov
aaa
and
push
movsl
fcos
inc
cwtl
mov
stos
and
jmp
jne
xor
sahf
pop
inc
dec
inc
imul
mov
std
lods
in
and
jmp
jecxz
mov
pop
fwait
out
mov
mov
stos
mov
dec
xor
and
or
cmp
mov
scas
mov
push
add
dec
pop
sub
sub
sub
xchg
notb
inc
xchg
pushf
inc
pop
sub
daa
je
sub
cld
adc
or
rorb
jno
test
jmp
insb
xchg
jae
ret
push
xor
daa
inc
mov
fucom
cmp
adc
lahf
fsubl
sub
scas
dec
lcall
pop
lahf
mov
loope
mov
push
push
and
mov
sbb
lcall
and
sbb
jmp
dec
das
pop
adc
dec
stos
or
and
fdivs
inc
pop
cmpsl
jne
ja
out
sbb
mov
out
inc
cmpsl
xchg
mov
push
call
sub
dec
dec
sbb
sysexit
daa
ret
adc
xlat
lret
out
repz
cmpsl
mov
out
out
cltd
orl
xchg
clc
fdivrs
mov
mov
ret
mov
mov
insl
or
mov
into
sub
pop
repz
in
insb
add
or
outsl
into
mov
fstpl
xchg
adc
nop
sub
icebp
add
or
dec
sbbl
cltd
inc
dec
xchg
iret
js
cld
out
iret
jnp
push
icebp
jae
in
jecxz
jecxz
xorl
jg
inc
mov
lea
dec
dec
test
neg
rorl
push
adc
sbb
add
test
shll
inc
popf
xchg
repz
or
adc
nop
or
fnsave
sub
cmpsb
mov
sub
std
fwait
test
addps
stos
fmull
dec
fnstsw
sar
dec
inc
aaa
subl
lea
sbb
cmova
nop
andl
sub
xchg
jmp
stc
lret
int3
test
mov
sahf
push
xlat
fmuls
xorl
daa
push
pop
addr16
jge
in
xor
loop
lahf
test
push
push
mov
inc
xchg
mov
xorl
inc
and
pop
outsb
mov
fildl
repnz
shr
decl
dec
or
out
imul
pop
insb
pop
popa
adc
mov
imul
inc
and
mov
or
mov
jnp
lds
stc
lcall
sbb
mov
aam
call
in
mov
lods
lock
repnz
jp
xor
xor
arpl
loopne
jae
xchg
and
push
and
jge
cmpsl
mov
outsb
mov
data16
clc
cmpsl
mov
jmp
adc
sti
les
fwait
mov
push
mov
test
jne
cmpsb
test
mov
daa
mov
or
ret
test
mov
sub
xchg
ds
das
push
and
in
gs
add
or
popa
repz
bound
outsl
or
out
adc
xchg
adc
push
test
outsb
cmc
rorb
fildl
aad
cltd
hlt
aam
pop
push
push
addr16
arpl
stos
cmovbe
out
adc
inc
add
lods
jnp
es
sbb
aam
inc
pop
enter
cmc
jne
push
ja
mov
adc
xchg
sub
mov
std
cwtl
adc
iret
div
call
pop
push
xchg
push
mov
clc
pop
out
sbb
fisttps
sti
scas
shll
add
pop
cwtl
push
scas
mov
les
mov
jno
xorl
clc
ror
push
xchg
xor
out
icebp
dec
push
mov
sbb
inc
mov
pop
pop
rcrl
or
jg
sbb
sahf
scas
ret
xor
sar
mov
and
cmp
cmp
ja
fs
insb
push
push
pushf
sbb
push
addr16
in
push
cmp
lds
out
mov
sub
jo
mov
xor
in
popf
xchg
jmp
sbbl
sub
hlt
jne
push
xor
ja
lea
add
js
mov
loope
lahf
xchg
mov
push
cmc
out
and
outsl
jle
sub
pop
je
insl
or
inc
jmp
iret
adc
lods
mov
mov
loopne
ret
mov
fbstp
dec
cmp
adc
insl
add
or
fistps
sub
call
jp
gs
sub
cld
dec
adc
sub
dec
mov
lret
ds
push
mov
sub
mov
sbb
xchg
pop
js
test
cwtl
push
push
data16
and
test
lods
xchg
mov
fwait
push
pop
pop
dec
and
sti
out
inc
jbe
lahf
in
stc
idiv
mov
inc
inc
popa
inc
lcall
popf
pop
dec
leave
adc
inc
cltd
popf
jle
and
int
or
pushf
xchg
mov
test
inc
xor
sbb
mov
mov
in
mov
add
xor
insl
and
gs
cmpb
mov
and
jne
pop
xor
pop
adc
or
xchg
pop
mov
sub
sbb
sub
mov
outsl
mov
ja
lods
and
mov
cmp
or
loopne
shlb
push
xor
imul
jb
xchg
xchg
adc
je
in
push
mov
pusha
sub
subb
subl
out
mov
mov
sub
pop
pop
ja
dec
out
add
sbb
jnp
test
or
mov
adc
cmpsl
cmp
cli
inc
test
xchg
push
adc
mov
out
aam
add
mov
outsl
push
jae
xchg
mov
add
sub
xchg
pop
mov
cmpsb
clc
shrl
sbb
fwait
dec
mov
dec
jle
repz
loopne,pt
movl
shlb
fstps
fs
fiaddl
loope
sbb
outsl
mov
pop
adc
imull
data16
and
sub
scas
and
mov
fildl
push
sbb
adcb
leave
xor
jg
test
sub
shrl
mov
imul
addb
and
lock
dec
xor
lahf
pop
inc
sarl
test
call
cmp
xor
add
xor
pop
sbb
rolb
and
lahf
jmp
push
push
sahf
jecxz
and
and
sbb
leave
lcall
mov
fisttps
adc
lock
int
xchg
imul
movsb
ljmp
push
mov
mov
stc
xor
pusha
mov
xlat
mov
les
jbe
xchg
out
adc
leave
add
inc
sbb
cltd
add
sbb
sbb
jp
pusha
popa
es
cmp
add
aaa
stos
mov
es
cmp
je
or
pop
jp
fcomps
mov
scas
mov
sbb
xlat
int3
adc
je
dec
pop
ja
jb
loope
adc
iret
je
imul
test
xchg
xchg
xchg
popa
inc
mov
data16
hlt
rclb
repz
dec
sbb
rep
fstpt
leave
cmpsb
call
imul
in
movsl
sub
cwtl
add
fcmovnbe
or
stos
jae
pop
int3
int3
ds
in
imul
jle
push
add
cmp
test
insl
mov
mov
cli
icebp
addl
add
popa
or
and
or
xor
fwait
inc
loope
add
daa
aaa
stos
jge
mov
fadds
adc
rorl
or
das
mov
call
add
out
rcrb
pop
das
cltd
test
dec
inc
stos
pop
into
ss
sbb
lret
mov
stos
nop
ja
dec
pop
jbe
xchg
scas
shrb
lods
or
les
mov
test
popa
push
je
adc
rcl
jecxz
aas
lock
pushf
rcll
aam
xor
xchg
jns
inc
adc
mov
pop
adc
cmp
add
sub
jno
pop
ja
addr16
cmpsb
mov
xlat
inc
inc
add
sbb
sub
in
xchg
push
popa
jg
popa
sbb
mov
in
scas
push
pop
pop
adc
and
xlat
xchg
mov
xor
outsl
mov
or
hlt
outsl
and
add
je
pop
pop
xchg
mov
shlb
or
or
mov
rcrb
repnz
or
fstl
imul
ja
jl
fnstcw
add
jae
jmp
adc
std
dec
or
lock
lock
mov
test
push
jle
pushf
xor
ret
cmc
push
dec
fisubs
negl
adc
fidivl
imul
xchg
cmp
cmc
xor
rcrl
nop
insl
jne
jo
mov
stos
xor
inc
mov
dec
movsb
cltd
mov
mov
enter
pop
sbb
mov
lret
dec
pop
hlt
adc
adc
repnz
lods
mov
mov
cmp
dec
std
sbb
jl
jnp
dec
xchg
add
adc
cmp
test
jle
in
jb
inc
or
mov
aad
sub
sbb
aam
shll
movl
lret
jo
add
xchg
xchg
inc
and
xchg
cmp
pop
out
loop
pop
imul
les
mov
cld
sub
mov
add
leave
xchg
jle
and
and
xor
int
pop
leave
scas
xorl
mov
mov
mov
jbe
je
pop
std
mov
push
pop
test
dec
dec
shlb
cmpsl
dec
mov
add
adc
aam
daa
push
scas
cmpsl
sbb
sub
xor
dec
mov
jge
cs
cmp
or
cmp
cmp
mov
dec
sbb
jnp
mov
lock
push
sub
repnz
xchg
xchg
lods
fmull
sub
inc
sbb
fwait
les
dec
cmp
roll
sbb
xchg
sub
scas
ja
mov
lcall
nop
mov
xchg
jne
hlt
scas
das
in
aas
and
repnz
mov
inc
xchg
shrb
inc
mov
addb
ret
cmp
test
jne
loope
das
jecxz
clc
jnp
aam
sti
ljmp
adc
cld
fdivrp
loopne
call
rclb
jecxz
dec
xchg
add
iret
inc
imul
bound
adc
enter
call
movsb
aad
pop
test
pop
lock
scas
mov
cmp
mov
mov
sub
ljmp
lock
sub
mov
jb
popf
rcrb
add
out
pop
jmp
inc
pop
in
or
je
pop
push
add
enter
std
sbb
inc
mov
hlt
icebp
loop
and
icebp
outsl
mov
cmp
sti
movsl
in
cltd
mov
rcrb
jp
roll
push
cmpsb
rorb
xor
pusha
xor
rcrl
xchg
sub
sub
xchg
jbe
add
les
xchg
sbbl
mov
and
xlat
add
cld
xor
or
scas
sarb
aam
sub
pop
mov
inc
jg
inc
mov
aaa
jle
rcrb
enter
sbb
sub
mov
cmpsl
jg
aas
push
aam
xchg
cmc
mov
xlat
sub
fsts
es
arpl
fcmove
mov
out
lahf
loopne,pn
loop
xchg
or
ljmp
das
sbb
test
jb
jb
not
adc
jne
lret
cmpl
and
mov
mov
in
insl
pop
cmp
mov
scas
movsb
shl
pop
sahf
push
cmp
and
xorb
mov
std
ds
push
nop
push
mov
cmp
inc
into
test
or
xor
jmp
xchg
cmp
dec
fisubl
loop
sub
xor
pop
dec
imul
mov
repnz
cmp
repnz
ss
aas
stc
out
int
cmp
adc
out
cltd
pop
mov
inc
mov
fld1
int3
iret
or
and
out
lahf
arpl
pop
xor
loope
add
mull
enter
outsb
sub
lds
ret
out
mov
bnd
pushf
cs
and
dec
jge
cld
sbb
mov
lcall
xor
dec
lret
and
dec
popl
adc
pusha
and
dec
inc
test
add
cmp
push
andb
pop
outsl
dec
fldt
pop
hlt
fidivl
sub
mov
pop
outsb
testb
lahf
fwait
mov
insb
mov
mov
push
arpl
mov
shrl
lret
repnz
inc
mov
test
aad
mov
jno
ret
cwtl
imul
scas
negb
sub
push
or
repnz
and
cmp
lcall
or
cmpsb
adc
or
push
jecxz
loop
cld
sbb
lea
mov
xchg
clc
or
fwait
rcl
or
push
gs
mov
push
add
push
mov
mov
pushf
cld
push
jmp
ds
lcall
scas
dec
xchg
mov
subl
sub
repnz
sbb
adc
fwait
cmpb
dec
stos
cmp
push
and
push
lea
or
ljmp
in
fisttpll
icebp
dec
push
enter
ret
or
jle
pusha
pushf
mov
or
cld
ret
dec
pop
addl
subl
mov
movsb
outsb
mov
jl
pop
jg
mov
pop
filds
in
lcall
jns
push
leave
mov
inc
je
fcoml
aam
jne
jae
push
jbe
adc
jae
sub
shl
pop
jecxz
movsb
or
xchg
push
lods
lret
adc
icebp
push
cmp
mov
cmp
adc
adc
sub
call
pusha
mov
jmp
popf
mov
dec
xlat
sub
nop
popf
int
adc
adc
ret
leave
lds
mov
push
xor
or
push
xchg
sbbl
sti
bound
xchg
mov
lret
push
push
add
ljmp
jmp
sbbl
aam
dec
imul
jno
push
int3
lods
xor
out
pop
and
in
push
fwait
jne
lret
sub
inc
and
adc
xchg
in
adc
adc
push
or
lock
icebp
js
and
mov
dec
cmc
cwtl
addr16
lcall
mov
in
mov
loop
aam
bound
stos
or
cmp
jno
aaa
ret
jb
fisubs
bound
int
stos
or
jmp
push
mov
cmp
aam
xor
inc
sub
and
les
jne
xchg
xchg
xchg
inc
push
pushf
leave
cwtl
mov
jecxz
adc
push
xor
insl
imul
cmpsb
stos
jno
xchg
aas
mov
cmpsb
out
imul
xor
push
sub
sub
cmp
jmp
cmp
cmp
sbb
xor
xor
dec
adc
dec
fisubl
pop
ljmp
jne
sbb
jp
push
addr16
cmp
out
adc
fld
adc
xor
decb
shl
pop
pop
fimull
fadd
ret
or
int3
mov
adc
jmp
sub
or
int3
cmpsl
push
cmpsl
push
cmp
ds
jmp
jmp
sarl
and
lds
fisubl
jp
push
pop
fwait
jno
loope
inc
imul
fsubl
dec
push
loope
in
into
into
movsl
popa
add
mov
stc
scas
jb
rclb
xchg
xor
mov
data16
push
cmp
xor
jae
repz
fs
xchg
fistl
xchg
and
jp
mov
add
adcb
xor
mov
mov
push
xchg
dec
push
xor
filds
cld
xchg
fnstcw
or
loop
adc
loope
loopne
imul
daa
mov
outsb
sbb
dec
mov
test
xchg
fbstp
mov
mov
mull
pop
mov
cmp
ret
push
pop
les
push
mov
call
jne
cwtl
xlat
test
test
shlb
inc
outsl
es
lret
insl
jp
inc
xor
sub
pop
dec
dec
push
jb
sub
hlt
fcmovnu
adc
sub
mov
dec
pop
stc
daa
pusha
cmp
and
cmc
jle
movsb
cmp
roll
push
lret
lret
jl
lret
out
pop
nop
adc
lret
or
test
ret
add
subl
sub
repnz
es
sub
mov
lcall
ljmp
lods
pop
mov
or
nop
movb
sub
sbb
pop
clc
inc
ret
dec
lret
outsl
sbb
aad
sbb
andl
inc
xor
and
and
sub
repnz
dec
mov
or
mov
jae
call
and
in
mov
imul
mov
rclb
dec
cmpsb
outsb
test
cmp
pushl
mov
sub
xchg
rcr
mov
in
and
sbb
sub
push
xlat
std
mov
fwait
insl
jecxz
out
pop
xor
ss
jle
dec
pop
add
or
cmpl
mov
fsubl
push
push
mov
shl
aam
jns
icebp
sti
in
xchg
inc
or
stos
jae
jns
sbb
pop
adc
mov
and
or
loopne
pop
fildll
cmp
ja
jmp
ret
push
fs
ss
fadds
test
push
fwait
sub
roll
and
jge
fmuls
jle
daa
push
adc
pop
jb
adcl
repnz
or
xchg
sub
pop
pusha
mov
pushl
lret
dec
ficompl
jae
jg
cmp
dec
movsl
iret
sub
out
push
dec
mov
jl
bound
stc
jmp
sbb
cmp
rep
cmp
jmp
ficoml
ss
mov
in
push
mov
sub
movsl
insb
cmp
push
cmp
repz
pop
loope
loope
xchg
or
sub
and
push
xor
mov
xor
sbb
in
sbb
pop
and
orl
push
ret
push
test
insl
lock
mov
inc
cmp
push
push
push
out
outsb
and
jne
jp
pop
inc
xor
mov
out
inc
jg
outsb
mov
imul
mov
outsb
adc
out
xor
aaa
leave
popa
push
dec
or
lock
and
cmp
test
sub
push
lcall
sbb
data16
pop
pop
and
outsb
mov
push
faddl
mov
jmp
test
mov
push
dec
fsubrl
cmp
lahf
xchg
popa
push
sub
movsl
xchg
ljmp
mov
addr16
jnp
and
cs
and
pop
aam
jne
sub
sub
into
movsb
inc
rorl
mov
aad
add
inc
ret
sub
aad
movsb
imul
mov
je
cs
push
lret
lods
adc
stc
mov
sbb
jle
stos
outsl
lret
adc
rcll
repz
into
sbb
xchg
pop
push
or
push
mov
xchg
in
aaa
pushf
lds
sub
inc
dec
lahf
sub
je
mov
inc
mov
jle
mov
sti
inc
arpl
inc
out
testb
loop
dec
inc
js
mov
or
movsl
inc
nop
outsl
mov
sbbl
and
adc
iret
adc
pop
xlat
cmp
mov
xchg
adc
lahf
jnp
cmp
adc
push
xor
adc
int
dec
dec
pop
mov
cld
adc
push
sub
ret
inc
in
mov
das
lds
inc
and
aaa
jb
dec
push
daa
test
ds
lea
int3
push
and
inc
data16
lods
fstpl
mov
sbb
adc
cmc
cmp
pusha
ret
jg
enter
pop
and
sti
and
call
imul
push
inc
push
aas
scas
mov
into
push
mov
add
js
dec
inc
pop
bound
aas
dec
lock
scas
mov
je
sbb
fwait
or
movb
xor
sbb
inc
push
loopne
cmp
jecxz
movsl
lcall
cmp
push
std
out
mov
and
sbb
imul
lods
push
dec
es
adc
addl
ds
mov
pop
lahf
inc
sbbl
sub
jb
xor
sbbb
sbb
xchg
or
and
aas
sbbl
cli
fmull
mov
lea
fcoml
add
fwait
add
repz
dec
jnp
xchg
xor
sub
mov
push
leave
push
js
test
das
jmp
and
gs
jg
xor
fisubrl
sahf
xor
in
jbe
aad
clc
adc
popa
hlt
loop
and
jae
pop
movsb
and
mov
jnp
and
jno
in
adc
cmp
xor
add
stos
ret
jle
cs
lret
pop
jg
loopne
jmp
mov
aad
mov
pop
push
jo
adc
and
hlt
mov
add
add
sbb
dec
cld
outsl
push
divb
and
roll
jl
dec
pop
inc
xor
xor
int3
adc
out
iret
scas
addr16
inc
add
sahf
and
sub
daa
out
push
push
pop
shrb
push
cli
loope
inc
in
roll
jnp
out
pop
pop
push
shrb
pop
push
pusha
scas
loopne
std
xor
sub
cmpsl
push
adc
mov
jecxz
and
adc
add
insb
std
mov
sahf
test
mov
scas
adc
fldt
xchg
cmp
xor
loopne
pop
sub
hlt
lods
or
push
push
pop
and
xchg
bound
push
jno
fdivrl
push
call
filds
pushf
mov
cmp
loopne
add
pextrw
mov
sub
xor
inc
aam
jle
add
xlat
ss
insl
pop
mov
mov
fwait
scas
jecxz
xor
cwtl
mov
imul
jae
in
push
sub
inc
xlat
not
sub
movsb
and
jnp
xchg
jmp
xor
dec
loopne
and
push
shrd
xor
xchg
jo
mov
sub
arpl
xchg
mov
mov
inc
ret
dec
jle
gs
add
xchg
int
iret
jns
sub
lods
iret
in
in
test
aas
mov
test
mov
ss
adc
and
movsl
fmull
cmp
ja
inc
cmp
push
ret
dec
push
inc
push
clc
insb
mov
ds
push
sbb
sub
ffree
shlb
mov
lea
movsb
push
cmp
pushf
popa
test
dec
lods
bound
xchg
mov
and
push
ficoml
in
jb
insl
ja
adc
stos
jmp
loopne
js
pop
into
and
pop
jns
sub
mov
push
sub
fisubrl
aam
test
lods
or
push
cli
imul
sbb
push
mov
fstpt
jge
out
lcall
push
and
cmp
adc
ret
push
int3
fcmovu
dec
mov
shrb
pop
adc
jle
aaa
mov
mov
in
push
cmc
cmc
cwtl
repnz
push
hlt
and
xchg
movsl
cmpsl
leave
lea
in
sbb
pop
mov
daa
popa
push
and
adc
shrb
or
les
stos
mov
outsl
mov
jecxz
aam
xor
pop
or
outsl
jle
cwtl
fstps
mov
movsb
sahf
mov
jecxz
in
mov
pop
or
mov
mov
gs
cwtl
inc
ficomps
pop
dec
movsb
adc
and
popa
rcl
test
or
sbb
pop
jbe
in
testl
repnz
fnstcw
test
inc
mov
test
jge
in
inc
mov
sbb
inc
xchg
mov
mov
xchg
jne
cmp
dec
lret
jo
lret
sahf
aas
out
cld
xchg
jge
aaa
adcb
inc
call
push
daa
or
mov
sub
out
sub
cmc
cmp
iret
int3
sub
gs
dec
ljmp
ret
xchg
push
xor
jge
fsts
loopne
ret
shll
mov
cld
pop
lds
mov
shrb
in
xchg
ror
xchg
lods
or
adc
popa
mov
mov
cltd
pop
mov
je
push
loope
fcompp
push
mov
dec
mov
sbb
out
xchg
and
mov
jne
ss
shll
lret
pop
pop
fcoml
imul
lods
test
mov
adc
test
or
ja
pop
rcr
push
pop
adc
pop
imul
aas
mov
lea
dec
in
les
out
push
push
int3
xor
fcoms
test
lea
add
cmp
jns,pn
push
lahf
dec
aas
pop
mov
mov
add
clc
sbb
mov
fdiv
pop
add
jle
jns
pushf
mov
push
inc
dec
xor
push
inc
dec
sahf
shll
out
in
add
cs
sbb
subl
movsb
push
jno
add
pop
and
xor
lods
ljmp
lret
iret
adc
cmp
shrl
rorl
jnp
mov
imul
in
mov
lock
rorb
cmp
loope
les
sbb
imul
jle
das
lock
in
adc
mov
into
cmpl
push
mov
leave
add
sub
cmp
mov
push
in
enter
pusha
out
sti
in
sahf
and
clc
push
jecxz
jb
mov
daa
add
idivb
addb
mov
fisttpll
addb
cmp
lret
addr16
jl
lahf
mov
pop
loop
push
insl
mov
repz
xchg
fsubp
hlt
push
mov
pop
test
inc
pop
imul
fisttps
jg
dec
stos
pop
js
rcll
movsb
outsl
insb
leave
andl
xchg
inc
mov
shr
or
adc
and
cs
fcomp
jecxz
push
out
push
mov
test
into
fwait
fwait
mov
sub
add
cwtl
repz
add
outsb
xor
push
mov
pushl
fsubl
incb
cld
das
mov
mov
lds
adc
nop
mov
mov
pop
les
mov
test
dec
int
push
dec
mov
outsl
enter
sub
mov
jecxz
fisttpl
sahf
jl
xchg
lahf
jge
inc
lods
push
aas
mov
xor
and
push
fwait
ret
hlt
mov
xor
neg
pop
xor
lret
or
adc
not
cwtl
fdivs
in
stc
and
fidivrl
or
sub
popa
mov
jno
jne
push
cmp
jns
jne
xor
mov
xchg
cltd
aam
mov
mov
imul
mov
es
mov
mov
or
daa
rcrb
mov
dec
adc
cmp
das
xchg
incb
or
outsb
faddp
xchg
in
test
movsl
movsl
push
iret
xchg
and
outsb
lods
adc
or
cmp
push
es
rolb
lods
pusha
xchg
push
and
mov
fiaddl
jg
ss
aas
imul
bound
cmovo
jnp
add
cli
loopne
loope
cmpsl
lahf
ds
mov
ss
sub
pop
fstpt
mov
xchg
xchg
jge
xor
int
inc
jmp
je
xlat
sbb
xor
adc
cli
add
or
mov
call
xor
and
mov
mov
leave
xchg
push
dec
addr16
dec
sarl
push
inc
inc
mov
pop
aaa
sub
fwait
jmp
cmp
sub
pop
std
orb
fildll
jbe
jle
and
mov
adc
stc
mov
mov
aam
push
jnp
xchg
push
jb
les
lods
push
js
iret
cli
shld
in
dec
test
rorl
push
pop
jecxz
addr16
fwait
push
add
pushf
fdivrl
stos
adc
jmp
pop
cmc
mov
xchg
add
adc
movsl
icebp
xchg
sub
push
fxch
lcall
mov
aad
or
fldcw
jmp
addl
ds
in
jb
je
cmp
jge
sub
adc
out
adc
das
scas
cli
test
xor
leave
xchg
dec
push
jbe
cmp
add
pop
mov
mov
andb
inc
arpl
mov
test
adc
movsl
fimuls
pop
lcall
pusha
inc
loopne
mov
lds
orl
push
test
in
dec
sbb
xchg
adc
stc
lock
pop
leave
jbe
imul
jecxz
pushf
mov
mov
xor
clc
adc
jb
mov
fcmove
ljmp
call
lea
mov
lret
adc
pop
xorl
mov
cmp
fstpt
lds
inc
nop
push
ret
repz
inc
fisttps
cmpsl
jnp
js
bound
bound
sti
ret
xchg
xchg
xor
in
mov
fs
sbb
dec
cmpsb
pusha
dec
sub
mov
mov
mov
pop
jb
xchg
inc
pop
cmc
xchg
insl
or
test
or
loope
out
adc
fisttpll
je
hlt
je
jno
sbb
out
fistl
lods
in
add
fadds
pop
jb
jne
fcoml
lahf
fwait
push
fbld
jo
out
lahf
adc
and
test
jg
or
add
test
xchg
inc
mov
push
push
insl
push
mov
test
test
jl
jg
cmpsl
push
sbb
lods
ret
pushf
mov
mov
push
fdivrl
add
in
repz
imul
sbb
push
cmp
test
mov
xchg
imul
xchg
notb
jbe
sub
mov
dec
fcomps
mov
xchg
and
test
sub
cmpl
out
lcall
mov
xor
fildl
hlt
jnp
adc
cmc
mov
push
das
sbb
inc
add
movsb
jo
rorb
push
mov
push
fsts
lods
movsl
mov
push
jbe
scas
and
loop
xchg
and
sub
out
rcll
in
mov
xchg
movsl
dec
stos
sti
dec
pop
or
lret
pop
mov
loopne
mov
and
xor
pop
popa
jmp
scas
ret
and
fdivrs
sbb
fidivl
xor
push
cwtd
dec
push
jl
ficoml
jge
int
xor
push
movsb
jns
lods
mov
xchg
adc
xchg
cmpsb
mov
shlb
sub
movsb
pop
repnz
pop
fwait
xchg
xchg
js
mov
pop
cmp
imul
jne
jb
lret
sahf
push
repnz
xor
nop
jno
out
lods
and
shr
fists
ret
pop
ss
arpl
sub
sbb
mov
mov
xchg
xchg
xchg
sbb
inc
ds
sbb
add
das
and
inc
fsub
pop
fisubl
repz
adc
push
or
mov
daa
xlat
mov
cmp
xlat
in
pop
arpl
ja
mov
adc
imul
cmpsb
daa
sub
test
arpl
sub
xorb
scas
mov
xchg
loop
xchg
adc
cld
fbstp
pushf
aas
adc
ret
cli
pop
push
mov
out
xchg
iret
or
insb
cmpsb
xlat
dec
and
add
lods
in
cmp
mov
lock
sub
out
push
icebp
cltd
movsb
jbe
notl
ds
or
push
lret
sub
xadd
addr16
push
pop
je
in
jg
pop
adc
mov
sbb
call
pop
mov
jle
fsts
ja
lods
jb
aas
xor
lds
mov
add
xor
xor
jo
test
inc
cld
cmp
jne
daa
push
add
jns
int3
xor
adc
jns
decl
adc
rclb
out
nop
loope
ja
add
mov
fmulp
mov
add
es
jge
insl
push
push
cltd
mov
pop
ljmp
pop
pop
fnstsw
out
and
nop
or
or
cmp
stc
pushf
pop
or
imul
add
notb
mov
bound
insb
xchg
pop
popa
dec
pop
movsl
pop
add
ds
gs
xchg
fdivr
in
inc
cmp
das
movsl
pop
hlt
test
mov
push
pop
das
mull
jge
and
push
pop
sbb
jg
adc
decl
icebp
rcr
cmpl
sbb
push
xchg
push
sub
and
ficomps
mov
or
es
xlat
adc
loop
scas
and
xchg
pop
test
fldt
nop
mov
xchg
in
int3
fstpt
or
test
fistl
or
xchg
cmp
andl
mov
mov
sbb
hlt
adc
cltd
pop
outsb
lret
test
inc
inc
fidivrl
loopne
push
inc
sub
push
movsb
dec
ret
push
xor
shrl
pop
inc
adc
fdivs
xchg
sub
sahf
add
cmpsb
jecxz
mov
andl
jecxz
adc
cmpsb
test
ret
out
mov
mov
sub
lcall
mov
pop
jp
xchg
xchg
insl
das
neg
xchg
sub
xor
cltd
test
jmp
push
xchg
aad
das
repz
loop
sarb
fincstp
cmp
inc
add
arpl
imul
adc
and
mov
add
push
add
sub
cli
inc
testl
cmpsl
scas
imulb
enter
lahf
stos
les
ret
stos
add
out
shll
add
xor
in
mov
loop
and
inc
aaa
imul
inc
fnstsw
push
fldt
cmp
cmp
adc
imul
in
cmpsb
sbb
push
movsl
testb
or
fs
movzbl
jle
cld
roll
sub
popa
js
lret
out
fdivrl
push
jae
movsl
inc
dec
clc
push
dec
fbld
sahf
fcmove
in
jnp
add
sub
fisttpl
dec
sub
pop
xchg
cmp
push
js
or
pushf
jnp
mov
leave
mov
cmp
xchg
rclb
lret
out
push
jnp
leave
scas
lahf
enter
mov
jns
mov
xor
in
fcomps
rorb
jo
xor
mov
cld
ret
or
jg
mov
xchg
dec
fdivs
loop
jecxz
sbb
push
fwait
xorb
cmc
aad
jb
sbb
mov
loopne
inc
mov
push
popf
mov
cmpsb
cmpsb
push
movsb
pop
out
gs
cmpl
popa
leave
imul
inc
mov
call
je
pop
loope
cmp
or
cmp
lret
jmp
xchg
lret
fidivrs
in
push
lret
into
add
sbb
sti
mov
insb
xchg
push
jge
dec
pop
ljmp
mov
popa
or
cmpl
sarb
shll
js
or
xor
push
jmp
mov
sbb
fnstenv
leave
adc
pop
pushf
jae
scas
into
sub
xchg
add
push
add
pop
pop
mov
mov
test
add
mov
jg
mov
mov
pushf
dec
aad
mov
or
cli
jbe
cmpsb
nop
sbb
jecxz
cwtl
mov
popa
les
out
sbb
daa
addr16
loopne
sbb
inc
pop
jmp
lahf
stos
jge
jno
jl,pn
imul
scas
hlt
sti
sahf
mov
jns
jbe
xor
popa
cmp
jmp
ds
es
sub
and
into
lods
aam
jb
sbb
and
insb
repz
mov
adc
mov
jb
jmp
xchg
inc
pop
ss
out
pop
and
pop
scas
cmp
fdivl
dec
push
xor
xorb
jecxz
sarl
add
lock
aaa
jo
jne
push
or
fidivrs
pushf
scas
xchg
mov
lcall
dec
sbb
dec
insb
xchg
das
movsl
aad
mov
cmp
jo
testl
xor
jno
jl
icebp
xlat
test
cmp
xchg
inc
mov
aad
hlt
cmc
sbb
adc
lcall
jae
xor
ret
insb
mov
and
scas
fsubrl
ret
pop
and
outsl
xchg
shlb
mov
mov
jne
sub
js
shr
rcl
lea
push
pusha
shrb
or
pop
and
stos
repz
pusha
xchg
fimuls
mov
add
sub
cmp
out
in
adc
cmp
imulw
jmp
and
lock
shlb
push
adc
inc
inc
pop
pop
sti
ret
and
pop
mov
cmc
mov
mov
push
adc
mov
xchg
jecxz
inc
das
popa
sub
inc
xor
and
jmp
inc
mov
mov
mov
outsl
fcmovne
sbb
cmp
xchg
or
fdivrl
sub
mov
inc
jae
xchg
les
or
add
mov
dec
into
lea
mov
sub
shlb
jp
mov
sbb
mov
and
pushf
pop
mov
mov
faddl
out
test
sti
in
adc
jl
stc
imul
or
jmp
jge
in
push
inc
mov
adc
cmpsb
in
jae
pop
cli
sti
in
iret
lea
imul
push
lods
xchg
jnp
shrb
or
pop
or
repz
data16
xchg
add
xchg
fst
jmp
cmp
stos
dec
addr16
fwait
out
setnp
xor
pop
imul
fstps
xchg
fstps
mov
stc
mov
jbe
xchg
push
cs
push
push
xor
and
lret
or
and
and
pop
pop
cmp
dec
xor
mov
shlb
add
lock
int
or
movsb
rcll
incl
shrl
outsb
dec
push
imul
pop
jle
sarl
dec
fs
dec
inc
loop
rcr
dec
ljmp
test
inc
jmp
in
scas
ucomiss
fsubrs
loopne
fimuls
movsl
scas
fiaddl
and
aaa
cmp
ficomps
aaa
jo
call
mov
cmp
push
push
out
adc
les
sub
sbb
adc
stos
outsl
incl
rcll
mov
jg
movsb
inc
ret
jl
add
cmc
push
jae
inc
mov
cmp
into
mov
out
pop
je
push
push
cmpsb
imul
cmp
push
xchg
sti
inc
or
fists
in
fs
adc
arpl
jg
mov
add
movsl
mov
ds
or
lods
cli
xchg
mov
call
xchg
addr16
cwtl
push
into
pop
sub
and
jp
icebp
in
daa
out
out
stc
adc
xchg
adc
jo
or
imul
lock
mov
mov
test
dec
das
leave
xchg
hlt
cld
out
mov
dec
ffree
sub
mov
aas
imul
ret
inc
mov
cmpsl
add
xchg
btr
adc
test
and
mov
cli
outsl
lods
hlt
stos
pop
dec
push
or
push
dec
pop
mulb
mov
xchg
or
mov
push
cmp
or
fprem1
xor
sub
cltd
push
dec
ljmp
sbb
pop
inc
cmp
ret
fcom
test
fistpll
pop
push
sti
repz
mov
movsl
cld
xchg
sub
adc
xor
push
movq
mov
scas
popa
mov
imul
cmp
repz
mov
notl
pop
mov
imul
xchg
sbb
or
pop
enter
loope
xor
pop
push
cmp
and
ror
xor
lcall
ret
cmpsl
push
lret
cmpsb
dec
jae
in
pop
or
js
les
cld
outsb
xor
iret
add
int
cmp
orl
mov
jnp
sbbl
xlat
mov
mov
mov
mov
pop
clc
daa
mov
cvtps2pi
cmp
addr16
lods
jl
jns
popf
out
popf
jb
sbb
sub
ljmp
pusha
fldt
pop
mov
ljmp
xor
inc
xcrypt-ofb
cmpsl
stos
scas
test
dec
jp
into
mov
scas
hlt
call
pop
mov
addr16
shrb
mov
in
stos
je
sub
into
xchg
inc
ret
shr
rol
mov
push
mov
les
mov
adc
loopne
lods
inc
dec
inc
fstpt
test
popa
xchg
mov
pop
sbbb
jbe
in
push
xor
jge
push
leave
mov
sbb
or
xchg
movsb
xchg
subb
int
mov
xchg
data16
cld
mov
pop
in
jg
dec
jmp
ret
mov
gs
jmp
add
lahf
stc
andl
xor
or
cmpb
dec
sub
sub
int3
repz
mov
int3
jp
shlb
mov
lcall
jle
push
cmp
mov
lret
pop
iret
outsl
push
filds
xor
sub
imul
aaa
out
and
mov
nop
inc
nop
push
inc
or
push
adc
mov
movsb
push
popa
inc
xlat
cmc
sbb
popf
in
lods
mov
push
loop
aam
bound
es
in
gs
enter
imul
mov
ljmp
and
mov
into
xchg
in
adc
and
adc
mov
dec
in
hlt
in
sub
std
mov
sbb
fcomip
xchg
out
pop
loop
xchg
cwtl
adc
fadds
mov
lcall
mov
inc
shrl
and
sub
push
lea
out
jnp
mov
sub
adc
popf
mov
loopne
add
sbb
sbb
jecxz
push
push
push
dec
call
and
pop
jo
loope
out
adc
sub
cmpl
adc
sub
mov
sub
mov
arpl
das
inc
orl
xchg
jp
jae
mov
outsl
jmp
and
and
push
cli
mov
push
push
mov
xchg
mov
sub
call
xorl
jp
sbb
inc
test
jge
cmp
imul
outsl
adc
xchg
loope
mull
js
jnp
out
push
push
or
jge
add
mov
xchg
jecxz
cltd
dec
cmovno
mov
gs
xchg
pop
sub
hlt
jle
add
rcrb
inc
incl
data16
cmp
fbld
or
xor
fcmovnb
mov
scas
enter
push
pop
mov
sbb
test
pop
jae
outsl
leave
jmp
fidivrs
stc
dec
dec
movsl
das
sub
inc
mov
roll
ret
mulb
iret
out
inc
int3
ss
push
add
push
ret
lret
pop
movsl
aaa
aaa
add
aaa
cmpb
mov
mov
mov
jp
jae
fdivrs
mov
jb
out
and
imul
dec
es
push
xchg
test
mov
rdpmc
push
aaa
sub
outsb
fsub
pop
das
outsb
sub
inc
in
inc
mov
lods
cmp
decb
inc
shl
int
lods
shll
push
mov
push
inc
imul
aaa
mov
cmpsb
leave
jl
sbb
shll
test
mov
mov
test
sbb
mov
jg
pop
fdivr
outsb
cmp
cmp
mull
and
in
ja
mov
dec
mov
push
cmpsl
mov
sub
aam
stos
cmp
aaa
cs
mov
inc
mov
sub
inc
les
sbb
inc
jae
pop
sbb
adc
sub
test
xor
test
pop
push
dec
mov
sbb
cld
or
divl
js
or
or
push
repz
mov
add
adc
push
in
pop
pushf
and
outsl
lahf
mov
cld
jge
aaa
lods
dec
insl
addb
cmp
push
out
mov
mov
fildll
cmp
cs
xchg
andb
sbb
adc
and
rclb
mov
xchg
sbb
sbb
jns
xchg
ret
xchg
cmp
clc
add
sub
adc
jmp
flds
pop
fucom
bound
popf
and
les
loope
sub
xor
out
push
les
bound
xchg
movd
pop
leave
push
fimuls
mov
jns
out
xor
fistpl
cmpsb
cmp
mov
stos
aaa
cld
push
stc
dec
pop
stc
mov
inc
mov
mov
jo
test
clc
sub
cmp
push
xchg
or
push
ds
push
xor
sbb
sbb
ret
xorb
sbb
fwait
inc
aam
push
into
dec
js
mov
mov
xor
dec
cmp
adc
aad
xchg
mov
outsb
push
mov
jge
dec
pusha
jne
pop
insl
mov
repnz
popa
sti
stc
loop
and
clc
fsts
and
fildll
inc
or
or
add
jb
add
mov
pop
mov
sbb
dec
sub
sbbl
fadd
sbb
jp
cmp
int3
mov
mov
aaa
cmp
test
icebp
xchg
sbb
in
out
pusha
xlat
and
inc
mov
mov
outsl
mov
inc
ret
fmuls
dec
inc
add
xor
es
dec
sub
push
mov
xchg
mov
jp
pandn
rorb
push
addr16
test
test
sbb
xchg
nop
repz
je
sub
xchg
push
dec
popa
mov
scas
pop
push
popf
inc
cmp
scas
jo
clc
add
push
and
push
lcall
inc
in
adc
orb
xchg
pop
leave
pop
mov
mov
lret
or
inc
andl
dec
cmp
lahf
mov
cltd
jecxz
inc
lock
stc
out
es
loop
jge
xchg
dec
mov
lds
xor
jnp
or
sbb
ljmp
out
ror
ja
movsl
mov
loopne
mov
int3
call
dec
adc
cmp
mov
jecxz
xlat
sti
ficompl
out
add
add
pop
inc
es
pop
dec
cmp
cs
sti
stc
mov
sbb
add
in
cmp
push
xchg
fcompl
push
push
lock
mov
and
mov
fwait
loopne
andb
mov
loopne
arpl
pop
sbb
out
mov
in
insb
pop
pop
fidivrs
outsb
rol
mov
pop
mov
jae
in
jbe
inc
jmp
adc
cli
xchg
mov
xchg
shll
jmp
add
insb
test
xchg
sahf
sarb
ljmp
jnp
pop
or
add
lahf
cmpsb
imul
or
push
in
in
orl
imul
xor
ds
loope
sbb
je
ficoms
xor
sahf
aaa
pushf
xor
fsts
les
lods
shll
inc
scas
mov
mov
sub
rorl
xor
fsubl
xlat
out
pop
xor
insl
outsl
pop
cmc
movsb
mov
mov
sti
ret
ja
jns
out
dec
cmpb
outsl
jne
dec
insl
lcall
daa
adc
xor
pusha
pusha
fnsave
dec
jmp
jp
fstps
andl
out
pusha
jmp
rclb
dec
mov
xor
xchg
shlb
push
sub
dec
adc
mov
pop
call
mov
inc
das
int3
mov
lcall
fstp
and
jne
out
sub
ret
out
test
mov
push
mov
mov
cltd
fnstenv
cmp
xor
hlt
hlt
lock
cmpsl
fwait
jmp
cli
cltd
aas
cmpsl
jl
xchg
mov
test
pop
pop
in
xor
xchg
xor
pop
leave
jo
jno
mov
fwait
xor
stos
push
loope
movsl
jle
ret
test
pop
xchg
add
test
inc
jp
mov
lock
push
cmpsb
or
subl
es
xor
lea
daa
sbb
insl
daa
rorl
mov
xchg
iret
es
movsl
je
ret
add
jnp
repz
int3
test
addr16
aad
movsb
enter
pusha
clc
sub
outsl
mov
jno
xchg
cmp
add
sub
div
ss
xor
pop
push
jp
addr16
lcall
jl
loopne
sbb
add
mov
inc
jmp
inc
test
in
dec
cli
xchg
fwait
xor
addr16
les
xchg
pop
fbstp
das
sbb
xor
mov
mov
fcmove
out
test
in
fisttpl
sub
lret
cltd
into
sti
sbb
inc
les
stc
sbb
mov
iret
push
jnp
jg
stos
mov
stos
pop
loope
push
jnp
jecxz
mov
movsb
xchg
push
pop
scas
or
imul
lods
rcll
daa
mov
xchg
andl
std
popl
inc
pop
insb
cmpb
xor
and
mov
leave
push
sbb
and
hlt
xor
push
mov
clc
rorw
push
mov
arpl
int3
cwtl
push
in
test
xor
sub
out
movsb
iret
pop
and
adc
sti
sbb
out
mov
xchg
xchg
mov
mov
scas
xor
sub
mov
mov
pop
or
stc
xchg
lret
xor
pop
adc
add
fnsetpm(287
inc
jb
xchg
shll
sbb
fs
xchg
jmp
push
mov
jecxz
repnz
inc
jmp
enter
gs
mov
popf
test
fbld
aaa
mov
dec
popf
popf
mov
adc
insl
movsb
arpl
jne
leave
lahf
mov
mov
sub
push
test
mov
loop
stos
jnp
push
or
test
cmpsl
pop
jmp
cltd
lock
ficompl
xor
jl
ret
ja
in
dec
push
push
cli
mov
jp
jns
inc
inc
mov
dec
inc
sub
push
shll
mov
adc
push
jmp
adc
mov
fldt
pusha
xor
cld
cmpsb
lds
xchg
int3
leave
popf
push
jecxz
jmp
stos
push
scas
imul
pop
mov
dec
aas
dec
je
dec
jns
lret
cmp
dec
mov
pop
adc
xchg
sar
lahf
push
jle
and
frstor
mov
fs
inc
push
pop
add
clc
outsb
add
les
add
pop
scas
push
sub
ret
int3
stos
adc
movsl
imul
shl
fstl
loop
adc
inc
cmpb
stos
jp
push
ja
cmp
sub
mov
cwtl
sti
aad
shll
test
xchg
xchg
sar
mov
pusha
mov
lea
fbstp
mov
sbb
sub
int3
leave
and
jecxz
add
lock
inc
mov
adc
fidivl
cmp
sbb
sub
addb
stc
mov
inc
addr16
jmp
jbe
add
mov
sbb
xor
sbb
daa
dec
push
mov
sbb
lea
xchg
cmpsl
daa
sbb
enter
test
sub
test
cmp
out
xchg
xor
jb
fcomp
outsb
and
cmp
lret
xor
les
in
add
pop
xchg
mov
loopne
es
gs
pop
inc
pusha
shrb
push
xchg
jb
sub
ja
mov
xor
jg
movsl
adc
mov
cwtl
xchg
into
sbb
sbb
clc
dec
insl
inc
inc
fs
rcrb
jl
cmp
xchg
in
sub
xchg
pop
mov
jg
cmp
popa
pop
mov
lods
cltd
pop
lahf
lods
fwait
stos
push
and
dec
mov
lea
adc
stos
push
daa
test
mov
sub
mov
mov
out
fsubl
or
sbb
rclb
rcll
sub
or
or
xchg
xor
pop
repnz
inc
fdivs
mov
xchg
and
clc
push
pop
sbb
int
fsubr
fsubrs
sbbl
push
pop
lods
repnz
cmp
cmpsb
clc
mov
fnstenv
push
leave
mov
cmp
mov
add
push
push
imul
xchg
push
out
ret
jo
inc
jb
insb
adc
push
fs
dec
xor
inc
dec
jae
mov
push
adc
shrb
lock
lahf
jmp
push
ja
mov
rcr
hlt
roll
mov
push
xchg
adc
jns
out
mov
and
cmpsb
out
mov
mov
mov
jmp
xor
movsl
and
lret
mov
mov
shll
jle
dec
push
loopne
cmp
add
in
inc
push
cmp
adc
movsl
sar
out
dec
xchg
and
icebp
out
xchg
pop
adc
movsl
aas
adc
loop
call
lds
inc
cmpsl
inc
jno
mov
inc
sub
push
iret
ds
jecxz
jne
xchg
in
daa
mov
daa
cmc
or
mov
leave
pop
shrl
mov
cmpsl
bound
mov
shr
mov
movsb
jno
cmp
adc
enter
sub
xor
insl
add
sub
es
push
lods
cmp
jb
stc
add
dec
mov
dec
adc
iretw
xchg
cmpsl
mov
fwait
cmp
mov
stos
icebp
mov
adc
ja
adc
in
dec
sahf
cmpl
pushf
movsl
imul
imul
rcll
test
inc
xchg
cmp
push
push
inc
xchg
rcrb
test
jo
psadbw
jbe
je
insb
mov
rcrb
and
or
lahf
cld
and
jg
mov
shl
push
sbb
ljmp
loop
mov
lahf
in
jae
or
adc
mov
mov
pop
mov
cmpl
fisubrl
sbb
mov
mov
cmp
inc
mov
pop
mov
loop
dec
mov
and
pop
jne
aas
out
fcomi
mov
or
fiadds
lret
xchg
stos
dec
dec
add
test
jb
add
mov
adc
mov
lret
andl
or
insb
adc
mov
dec
pop
insl
sub
mov
pop
loope
xchg
out
out
pushf
inc
ss
dec
cld
and
pop
push
xchg
and
jmp
pop
out
dec
mov
mov
sbb
xchg
stos
mov
testl
sub
cld
add
push
fistps
add
imul
jne
gs
popf
out
add
arpl
adc
or
clc
cmp
rclb
add
notl
inc
js
mov
lret
adc
lods
or
lea
and
out
out
testb
push
mov
mov
js
sbb
sub
leave
sahf
pop
jno
dec
jbe
fstl
test
push
hlt
xchg
and
insl
lahf
pop
jecxz
pop
repnz
dec
dec
sbb
jg
test
aam
inc
cmp
outsb
rcrb
sbb
lcall
dec
dec
out
ljmp
pop
xchg
inc
jns
xor
push
or
in
movsb
mov
sbb
loope
ror
fiaddl
pusha
call
fstl
xor
cmpsb
into
scas
sahf
sub
mov
shll
pop
lret
sbb
cli
sub
cmp
cli
cmp
mov
add
add
cmp
out
cwtl
xchg
mov
dec
pop
mov
mov
imul
xchg
xor
push
cmp
cwtl
sar
jl
push
clc
mov
push
lcall
xor
mov
or
jl
or
fnstenv
in
test
pop
scas
ds
pusha
scas
xchg
imul
sbb
fs
pop
subb
mov
adc
xorl
mov
sti
lahf
and
ja
fwait
push
fistl
inc
push
sahf
cmp
inc
bnd
sub
ja
sti
pusha
pop
dec
cmc
lods
rolb
adcb
scas
cmp
or
repz
and
dec
mov
outsl
ja
or
imul
inc
and
daa
aas
ficoml
mov
mov
pushf
add
mov
xor
jle
divb
mov
or
dec
loopne
xorl
cmpsl
aas
into
cltd
mov
inc
mov
insl
pop
adc
sbb
jne
aad
jp
sub
xchg
stos
mov
in
mov
ljmp
sub
xchg
out
push
fcomps
and
das
sub
orl
mov
fs
mov
les
mov
js
les
addr16
pop
es
lods
add
clc
lods
leave
cmpl
outsb
repz
test
inc
mov
and
mov
into
jg
fmuls
fsts
cli
cmp
sti
inc
add
outsb
outsl
cmc
repz
jp
in
xchg
out
bound
push
repnz
mov
mov
sbb
or
dec
bound
or
push
rcl
cmpl
out
rclb
jg
xor
shrl
xor
mov
jp
lahf
jb
add
nop
das
fsubs
push
and
sbb
pusha
jmp
cwtl
mov
sub
ja
mov
test
pop
push
stc
fildll
insb
push
pop
frstor
xor
leave
je
ljmp
iret
or
pop
shll
push
iret
xchg
jle
in
mov
movsl
sub
nop
jae
insb
or
outsb
pop
std
jb
shl
adc
cld
jo
clc
in
lods
in
les
push
lods
daa
pop
xor
mov
out
sub
test
sti
dec
mov
lcall
cli
rolb
lock
cmp
aam
add
decl
inc
mov
push
push
out
mov
push
repz
adc
je
push
or
into
sub
lods
adcb
pop
sbb
adc
adc
push
push
adc
dec
cld
push
cmp
xchg
mov
cmp
cmp
cmp
cmp
aaa
lds
jb
cli
call
test
and
into
jno
xchg
push
loope
stos
int3
push
rol
fstpl
pop
mov
push
xchg
call
ficomps
xchg
fcoms
scas
in
int3
or
dec
mov
xchg
cmpsb
mov
rolb
pop
into
or
cmp
mov
xchg
sub
clc
adc
lods
adc
or
jge
push
in
cwtl
pop
sbb
cmp
xchg
rcll
jle
outsl
fisttpl
movsl
imul
out
jo
test
jmp
sub
fcmovnb
rcll
xchg
mov
fstpt
fidivrs
stos
aas
enter
sbb
mov
inc
scas
and
add
pusha
mov
mov
les
mov
jne
cmc
ficoml
lock
fildll
dec
imul
in
iret
jle
in
add
xchg
aam
enter
mov
or
inc
ret
push
dec
xchg
scas
lds
test
stos
inc
cwtl
iret
pop
mov
test
sub
jp
iret
call
push
xor
dec
jno
idiv
mov
mov
mov
movsl
push
jb
aam
add
mov
lcall
shrl
sbb
pop
dec
sub
push
cmp
and
inc
jp
stos
incb
sub
xor
ja
cli
add
mov
lock
dec
scas
sub
inc
insl
rcll
jge
imul
add
jge
pushf
loop
xchg
outsb
push
es
mov
cmpsl
and
jge
fs
movsb
adc
mov
add
xor
arpl
cmp
test
js
fists
andl
scas
dec
xor
inc
les
imul
std
fwait
pop
loope
sub
mov
out
inc
inc
lods
aam
fcompl
aas
and
jo
scas
dec
jnp
std
cmp
ljmp
xchg
nop
and
mov
inc
dec
outsl
fimuls
xor
outsl
cmp
push
xor
jl
unpckhps
jp
add
pop
push
rorb
bound
movsl
je
stos
mov
rsqrtps
pop
rol
imul
sbb
or
mul
insl
xchg
test
mull
arpl
int3
or
inc
push
popf
std
arpl
mov
test
mov
rcll
or
sub
movsl
pop
inc
mov
call
and
push
call
out
outsl
sbb
sbb
ret
mov
cmp
mov
pop
lret
aaa
jmp
jl
xor
mov
add
arpl
add
xor
pop
xlat
inc
add
cmp
pop
shrb
xchg
pop
repnz
mov
dec
pop
xchg
push
js
lahf
cld
sahf
flds
jp
inc
add
xor
dec
or
popa
or
je
in
mov
in
addr16
xchg
ljmp
lods
push
ds
and
mov
movsb
pop
cltd
sbb
push
mov
adc
push
xlat
in
fmuls
cmpsl
pop
or
outsb
lods
dec
testl
inc
iret
xor
adc
xchg
dec
mov
adc
pop
cmp
scas
push
mov
add
daa
xlat
xor
or
mov
cmp
xchg
cmp
fcoms
loopne
jecxz
jecxz
sti
rorl
sub
cmc
mov
ret
xor
lods
sbbl
jp
jecxz
inc
loope
nop
push
mov
stc
fsubl
mov
mov
mov
mov
ficoml
sbb
add
jle
clc
flds
test
ljmp
loope
icebp
push
sub
incb
movl
arpl
into
repz
xor
in
daa
cmp
xor
addr16
push
lds
mov
std
icebp
lahf
lcall
mov
xchg
ja
fsubs
rcrb
mov
xchg
mov
xor
xchg
jmp
loope
aad
insl
mov
and
nop
and
cltd
clc
test
cmp
mov
stc
leave
pop
leave
sbb
jl
push
pusha
push
jg
lock
lret
cmp
mov
and
enter
mov
lahf
repnz
imul
cmp
mov
push
sub
popa
inc
jb
xor
pushf
mov
xchg
and
inc
loop
sub
dec
mov
inc
cmp
mov
dec
mov
adc
inc
add
xor
pop
shlb
aad
pop
fisubl
ret
outsb
mov
mov
add
lock
aaa
jo
int3
add
cmp
mov
adc
push
mov
sub
sub
mov
fs
jnp
cltd
popf
sbb
mov
inc
cli
adc
mov
ds
mov
mov
xchg
cltd
jg
lods
sub
ret
clc
push
sbb
in
push
shll
mov
stc
orb
push
adc
mov
mov
pop
movl
dec
pop
sbb
or
call
adc
loop
push
jnp
movsl
aam
xchg
or
mov
add
sahf
or
mov
pop
pop
and
ss
mov
add
jns
pop
pop
sti
ja
xor
xor
pusha
jmp
sbb
sbb
stos
out
xchg
cwtl
in
mov
sbb
xor
pushl
push
xor
lea
repz
imul
push
int
inc
test
adc
mov
adc
xor
adc
push
scas
mov
and
sub
lahf
xchg
pop
jle
int3
fsubl
das
fistpll
pop
std
sbb
pop
dec
mov
jmp
add
mov
xchg
push
fldcw
adc
fadds
rcll
jecxz
push
sub
scas
and
inc
pop
adc
icebp
idiv
or
jne
xor
pop
push
orl
push
mov
inc
add
adc
or
xchg
iret
mov
or
orb
jecxz
ss
cmp
adc
rcl
pop
fistpll
xor
out
hlt
xor
shl
leave
or
test
mov
js
data16
stos
dec
imul
cmc
mov
jg
mov
mov
in
push
mov
imull
push
xor
jae
or
push
mov
xchg
sub
jge
xchg
test
xor
xor
xor
and
inc
inc
shl
out
popa
jns
aaa
adc
lods
mov
fisttpll
hlt
and
scas
push
and
jmp
insl
fisttps
mov
mov
xchg
rcrb
out
inc
mov
push
add
push
xchg
inc
adc
dec
push
xor
cmp
popf
cld
mov
sub
or
enter
notb
mov
insb
testb
clc
gs
pop
ljmp
mov
stc
insl
enter
lock
dec
fldpi
push
push
popl
jno
imul
mov
mull
cmpsl
sbb
mov
dec
out
xor
iret
imul
pusha
and
and
fdivs
mov
aas
dec
fdivrl
cltd
cmp
mov
mov
ret
fistpl
xchg
inc
sub
fidivl
jae
fwait
dec
aam
out
lock
push
inc
push
dec
rep
push
shr
cwtl
pop
mov
pop
arpl
jns
dec
push
call
pop
cld
int
mov
sahf
ss
add
out
or
clc
pop
or
out
aaa
ljmp
jl
cmp
mov
repnz
or
push
js
push
stc
ret
and
ret
out
pushl
leave
sahf
mov
sbb
cltd
test
xlat
in
outsb
bound
out
addr16
lret
mov
mov
mov
clc
or
scas
lock
sub
mov
dec
stos
mov
xor
out
and
aaa
aas
daa
pop
mov
rolb
fwait
sahf
push
ret
inc
lds
int3
stc
lcall
sub
mov
loope
orb
adc
orl
mov
mov
or
inc
andl
test
out
xor
jge
nop
sub
stos
outsb
loope
out
rcll
push
inc
xchg
leave
xchg
sub
pop
int3
adc
push
xchg
dec
adc
cmp
lret
pavgw
aaa
fwait
jno
fdivl
mov
mov
or
testb
cwtl
mov
fbld
xor
not
popf
stos
aaa
sub
push
push
enter
mov
jp
hlt
jno
mov
scas
xor
lahf
aam
stc
xchg
test
aam
dec
push
mov
cwtl
pop
cmc
mov
cmpsl
scas
mov
or
push
pop
mov
shrl
faddl
pop
mov
jecxz
sbb
clc
pusha
jmp
and
pop
pusha
loopne
int3
push
ret
enter
or
loop
add
loopne
mov
xchg
sahf
cmp
sti
cli
shll
lds
inc
cs
or
loope
cmc
mov
test
sarl
mov
daa
insb
aaa
shl
jg
xor
rolb
cmpsw
adcb
dec
sbb
out
fnsave
inc
pop
and
pop
xor
add
mov
stc
push
jno
scas
and
lahf
dec
jb
mov
push
into
add
test
jle
sbb
push
lahf
scas
aas
das
scas
jle
cmpl
xchg
lds
mov
subb
filds
loopne
pop
std
rorl
and
lods
inc
cltd
shlb
inc
mov
jge
imul
cs
xorl
stos
fsubs
in
ficoms
jle
sarl
mov
xchg
xchg
ljmp
xchg
cs
dec
fwait
addb
mov
xchg
xchg
push
jecxz
stos
adcb
cmp
jae
mov
sub
call
xor
int3
cwtl
inc
sub
scas
or
xchg
push
xor
loop
in
pushf
lock
out
loopne
cmp
xchg
mov
xchg
pop
or
es
push
cmp
and
leave
or
jno
mov
imul
sbb
cltd
sub
repnz
jl
stc
test
adc
lods
out
repnz
pop
outsl
lock
shll
push
push
mov
ret
cld
subb
fcompl
jno
mov
enter
test
pop
daa
fsubrl
ds
fistpll
mov
push
sbb
pop
movsb
lds
mov
ljmp
adc
icebp
sub
xor
and
adc
nop
adc
sub
loope
xchg
cmc
cmc
out
scas
testl
movsl
outsb
inc
je
mov
shlb
mov
mov
fsub
andb
jb
outsb
daa
je
inc
add
out
sub
sbbl
test
lea
icebp
mov
stos
lcall
lock
insl
or
lret
push
jbe
dec
cmp
lea
cmp
inc
or
jecxz
sahf
adc
adc
bnd
jl
push
push
fsub
jg
pop
scas
jbe
int3
cmpsb
scas
cmp
stc
je
mov
cs
in
imul
adc
mov
iret
jne
xchg
nop
push
insb
push
lret
mov
data16
or
mov
fcoms
inc
sti
in
cld
adc
js
xor
inc
cmpsl
dec
push
and
cwtl
rolb
js
imul
addr16
push
add
popf
cltd
add
jo
imull
repnz
jo
add
bound
jg
dec
cld
jp
push
or
jo
fists
dec
icebp
mov
cmp
add
push
push
iret
add
sub
inc
pop
addr16
add
sub
les
stos
push
sub
xor
mov
xor
dec
das
dec
push
pop
out
roll
addr16
pusha
jnp
je
sub
cmp
jle
into
in
adc
out
and
leave
lahf
or
xchg
loope
sahf
adc
ret
jbe
ja
or
adc
cmp
popf
mov
movsb
pop
adc
or
mov
pop
pushl
xor
add
dec
addb
and
dec
push
xchg
sbb
in
lahf
imul
sbb
inc
popf
loopne
imul
ss
add
test
push
inc
stos
xor
push
push
cmp
or
fucom
sub
mov
scas
xlat
shl
mov
push
adc
aad
nop
sbb
cmpb
dec
cmpsb
mov
call
stos
add
pop
out
ret
push
stos
push
js
mov
repz
rcll
test
insb
arpl
pop
fs
or
out
ljmp
mov
pop
xor
or
in
stos
ret
inc
in
add
or
lds
mov
aas
and
dec
sub
jno
mov
and
add
pop
es
dec
ja
pop
scas
mov
js
sbb
cmp
mov
xchg
lcall
inc
or
mov
pop
movsb
cmp
mov
push
in
add
dec
ret
gs
out
lcall
dec
or
syscall
jo
das
gs
cmp
inc
stc
in
call
sbb
jmp
pop
pop
lret
aam
cmc
sbb
xchg
loop
sub
push
insl
jo
add
jbe
dec
ret
mov
addr16
subb
jne
sbb
adc
push
lea
mov
enter
xor
fwait
inc
jae
sub
movsb
mov
mov
addb
rcrl
aad
lret
sti
dec
mov
add
adc
xchg
jae
mov
cmp
scas
insl
movsl
mov
test
out
icebp
jbe
mov
outsb
jp
cld
hlt
js
add
push
shll
pop
lds
sarl
lock
mov
mov
push
dec
test
dec
js
rcll
sub
leave
movb
dec
or
jb
cmp
mov
cmp
pop
jno
loope
sub
add
into
sub
sbb
sti
mov
jmp
xchg
dec
mov
mov
mov
lea
ss
clc
ja
js
xor
testb
cmp
addb
mov
icebp
mov
mov
jecxz
jb
mov
jns
mov
sub
scas
scas
outsl
out
mov
jg
sbb
sbb
mov
jge
jl
xchg
dec
mov
and
cmp
xchg
sbb
vhsubps
xorl
push
ret
xchg
ja
fisttpll
inc
xor
pop
in
ss
dec
loopne
ljmp
test
popa
in
test
add
fcmovnb
and
out
mov
imul
es
rorl
mov
je
sub
dec
push
mov
gs
jnp
in
and
inc
fistpl
outsb
ss
dec
xchg
int
jl
and
inc
fisubrl
inc
xchg
pushf
sbb
mov
insl
dec
mov
dec
jg
xchg
and
or
pop
imul
test
dec
xor
xor
add
and
or
cmp
scas
xor
cld
xchg
push
xor
cmpl
lea
sbb
pop
pop
into
loope
out
jge
mov
or
mov
es
mov
mov
push
stos
xchg
aam
cmp
dec
jp
or
sub
je
andl
mov
out
mov
lret
mov
add
repnz
test
push
cmp
int3
and
lea
push
mov
xor
nop
ja
cmp
scas
jbe
push
push
popa
pushf
inc
sbb
and
jle
into
push
shr
dec
jle
je
popfw
loopne
push
push
outsl
les
jecxz
jp
pop
and
xchg
stc
mov
jcxz
fsubl
shrb
xor
dec
xlat
cli
repnz
rcr
add
mov
jno
lret
sahf
and
imul
bswap
mov
dec
xchg
fucomp
xchg
pop
or
jo
ds
sti
out
and
or
test
cmc
shll
add
aam
movsl
clc
sub
pop
mov
pop
ret
cld
xor
sub
loopne
jle
xor
mov
dec
cs
dec
push
orb
test
out
insl
adc
idivb
dec
dec
sbb
outsl
xchg
mov
sub
loopne
pop
out
sub
rcrb
roll
jb
fimuls
mov
push
repz
inc
dec
and
jno
and
dec
inc
mov
xlat
cmp
or
stos
mov
mov
cmp
or
dec
lret
pop
lret
insb
lret
jp
or
mov
or
lods
lret
mov
lret
in
or
hlt
lret
add
or
push
lret
or
add
add
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
dec
add
add
add
dec
add
dec
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
sbb
add
incl
add
add
add
add
incl
add
add
xor
add
add
popf
xor
into
xor
incl
add
add
add
add
incl
add
add
add
incl
add
add
cmp
add
incl
add
add
ds
add
add
add
decl
dec
add
add
add
dec
add
incl
add
add
dec
dec
add
add
add
incl
add
add
add
add
lcall
dec
add
dec
add
lcall
dec
dec
add
incl
add
add
add
add
add
dec
add
dec
add
incl
add
add
pop
dec
add
add
add
decl
dec
add
dec
add
dec
add
add
ljmp
dec
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
outsb
dec
add
add
add
incl
add
add
outsb
dec
add
add
add
incl
add
add
add
add
add
aas
je
add
dec
add
add
add
decl
jbe
add
incl
dec
add
ja
add
in
add
add
icebp
dec
add
je
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
add
incl
add
add
add
add
incl
add
add
jnp
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jl
add
add
add
incl
add
add
add
add
incl
add
add
jle
add
add
add
incl
add
add
add
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
orl
add
add
jmp
dec
add
dec
add
jmp
test
ljmp
add
dec
add
incl
test
jmp
test
pushl
test
fiaddl
dec
add
out
test
repnz
incl
add
add
dec
add
add
add
incl
add
add
lea
add
add
incl
add
add
add
add
incl
add
add
add
add
jmp
xlat
dec
add
dec
add
call
xlat
dec
add
xlat
dec
add
decl
dec
add
add
or
sahf
lret
add
or
cmp
or
dec
lret
pop
lret
insb
lret
jp
or
mov
or
lods
lret
mov
lret
in
or
hlt
lret
add
or
push
lret
or
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sahf
add
outsb
fs
gs
inc
imul
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
sbb
daa
mov
pop
inc
scas
cmp
pusha
insb
mov
jnp
rcrl
jp
cs
ds
dec
add
iret
add
les
fsub
push
mov
sbbb
xor
mov
dec
jle
sub
push
ret
mov
push
mov
cmp
mov
sbb
rcll
sbb
dec
dec
push
jg
cwtl
pop
push
and
mov
push
jl
mov
sahf
pop
dec
int3
or
xor
sbb
dec
mov
mov
dec
ret
pop
adc
rcrb
cwtl
fucomip
sbb
in
lods
jp
ss
push
movsb
or
xchg
imul
sbb
cmpb
pop
sbb
cmc
inc
sbb
sub
ret
or
sub
and
mov
fisubs
aaa
xor
cmpsb
inc
pop
sub
fwait
insb
in
cmp
outsb
xorb
push
fldcw
pop
test
xor
mov
xor
and
mov
cli
aam
inc
pop
sub
in
icebp
mov
add
stc
iret
push
out
pop
push
inc
push
or
xchg
lods
push
pop
lods
sbb
popa
out
jl
out
sbb
sti
mov
mov
test
adcb
mov
in
imul
mov
loopne
outsl
addr16
sub
xor
icebp
dec
or
cmp
xchg
in
lds
push
pop
dec
movsl
adcb
hlt
xorl
mov
fists
loope
push
mov
mov
out
bound
and
in
cmpsl
add
cmp
or
sarl
flds
xor
cmp
mov
mov
lcall
repnz
mov
clc
mov
mov
fnsave
loop
adc
mov
inc
lret
cwtl
and
cmp
adc
or
repz
scas
sub
clc
mov
and
jle
in
cmc
pop
inc
cs
mov
mov
repnz
mov
enter
jge
and
test
std
incl
jo
gs
scas
jge
orl
insb
out
adcl
xchg
mov
movsb
leave
imul
jmpw
mov
hlt
dec
cmp
pop
dec
nop
cmpsb
or
xchg
cmp
lcall
push
push
scas
popf
dec
push
rorl
ss
xchg
and
sub
or
fisubl
mov
icebp
pop
lods
jne
jge
xchg
sbb
sbb
aas
fadd
div
leave
repnz
test
pop
push
xorb
mov
jle
leave
pop
push
or
imul
push
push
repnz
iret
shrb
pop
dec
xor
sbb
inc
dec
xchg
sbbb
cs
test
xor
sbb
movsb
idivl
xorl
mov
dec
pop
aas
loope
inc
and
add
sbb
and
mov
test
or
stos
and
inc
jg
mov
push
inc
pop
addr16
cmp
jl
lahf
add
jg
ss
push
mov
pop
dec
xor
cmpsl
push
sar
cmp
loopne
xchg
movsl
cmp
inc
jecxz
jp
inc
jmp
lret
jp
or
push
loope
xor
cli
mov
cwtl
cmp
out
movsl
cmp
cmp
pop
fs
test
xchg
loope
mov
popf
xchg
pop
iret
std
push
mov
pop
mov
mov
in
xchg
cmp
add
add
popa
lock
dec
xlat
rcl
adc
add
in
pop
popf
push
std
int
loope
out
cltd
cmpsl
out
rclb
push
repnz
and
mov
sub
pusha
mov
mov
adc
dec
xor
jle
inc
addr16
add
mov
mov
fldenv
call
mov
xor
stos
sub
imul
andb
lcall
aaa
addr16
jne
lds
test
jne
pop
push
pop
cmp
and
push
std
pop
scas
mov
push
push
lret
ds
pop
jnp
pop
loope
lret
sbb
adc
sbbb
pop
out
mov
dec
xchg
xor
popa
push
cltd
lock
jb
ret
sub
dec
mov
jmp
and
stos
iret
ja
fcoml
xchg
sbb
fsubs
inc
push
jae
scas
mov
xchg
ret
sub
popf
in
mov
cs
xor
or
mov
push
ljmp
lea
gs
dec
out
daa
mov
xor
loope
scas
mov
loopne
das
xor
scas
mov
xchg
mov
ret
jecxz
out
xchg
sbb
jb
out
sub
cmp
dec
dec
wrmsr
movsb
cmp
lret
pop
mov
std
dec
cmpsb
andb
xlat
xor
xchg
rcl
mov
sarb
je
sbb
mov
add
int3
dec
dec
inc
push
mov
aas
mov
das
mov
inc
add
bnd
push
mov
bound
pop
scas
add
mov
ror
sub
cs
mov
lods
fiadds
xor
xchg
dec
fdiv
jno
out
xchg
jae
popf
mov
cwtl
jmp
cmc
ficompl
add
jg
in
cmpsb
push
pop
xchg
sub
mov
dec
xlat
mov
inc
xor
aad
ret
outsb
or
out
jmp
and
lret
xor
mov
dec
inc
cltd
fscale
adc
fildl
jl
cltd
subb
cmp
lret
sbb
pop
les
ljmp
out
mov
enter
push
lock
xchg
mov
dec
enter
add
fimuls
dec
out
dec
xor
loop
in
pop
sbb
stos
xor
sbb
nop
movsb
lds
mov
jl
add
es
lods
in
out
int3
push
bound
pop
aas
fucomi
cmp
out
out
pop
push
jle
add
xchg
push
sbb
dec
xor
pop
jb
enter
mov
fs
push
push
push
dec
std
mov
push
cmp
mov
xor
nop
or
ja
stos
xchg
dec
cli
insl
popf
dec
and
sbb
lods
mov
jmp
sbb
push
pop
enter
xor
js
adc
sbb
jo
sbb
jo
aas
or
lods
lcall
dec
jecxz
cwtl
dec
ret
jmp
xchg
cmp
adc
gs
test
lea
cld
lret
sbb
out
add
movsb
out
arpl
mov
orb
inc
cli
add
inc
sub
jne
mov
addr16
xchg
repz
movsl
divb
loope
js
xor
movb
sti
or
ja
xor
adc
test
arpl
add
lock
ss
push
adc
inc
fcmovnu
push
and
insb
jne
pop
clc
addb
mov
dec
subb
xchg
adc
bound
cmc
int
inc
mov
daa
dec
cmp
jae
mov
pop
lcall
jmp
cmpsb
das
sbb
insl
out
and
mov
daa
xor
mov
push
cwtl
lret
mov
xchg
sbb
mov
sub
and
adc
mov
popa
jo
and
daa
fidivrl
sahf
mov
out
lahf
and
lds
out
jns
cwtl
xlat
ss
mov
jbe
outsb
sub
mov
es
es
outsl
ja
mov
shl
insb
mov
jo
push
pop
sbb
icebp
xor
push
aam
pop
repnz
jmp
stos
call
rcrl
mov
clc
je
push
out
imul
shrb
sbb
movsl
mov
icebp
xor
movsb
xor
xor
icebp
xor
adc
xor
inc
mov
jns
scas
loop
into
mull
inc
outsb
das
jl
outsb
jg
std
push
stos
push
jge
daa
fldenv
sub
shl
mov
lret
mov
bound
sbb
xchg
adc
js
je
sub
scas
xchg
adc
pushf
fstpl
js
popa
adc
pushf
inc
mov
aaa
jno
das
mov
or
pop
loope
jbe
fsubl
push
cmp
rcrl
mov
add
ss
ss
test
and
cmp
cs
push
xor
pop
les
jno
and
out
mov
int
in
movsl
into
jge
jne
fs
call
push
jo
jmp
pop
xor
insl
stos
inc
insl
loopne
outsb
push
dec
scas
sub
fisttps
es
add
lret
jp
cmpb
aas
xor
mov
jb
xorb
test
fsubl
les
xor
xchg
mov
jecxz
lcall
aam
xchg
clc
aad
xlat
lods
sbb
insl
cmp
ja
fadds
lret
rcrl
cwtl
stc
lcall
dec
mov
xlat
aaa
jno,pt
lds
gs
je
pop
add
sub
insl
negb
mov
mov
dec
and
cmp
cmp
xor
pop
nop
loope
shr
pop
mov
or
negl
mov
in
and
ficoms
lret
test
xchg
sahf
inc
push
mov
and
movsl
mov
xlat
cwtl
mov
enter
sahf
fcompl
jo
dec
cld
add
mov
repnz
mov
pop
lcall
pusha
jo
xor
mov
lcall
jge
xchg
nop
test
cli
ljmp
ds
icebp
aaa
sti
pop
adc
popf
dec
dec
xchg
addl
arpl
daa
lds
sbb
nop
arpl
aaa
rorl
rorl
pop
adc
cltd
mov
pop
popa
insl
pop
imul
adc
test
jno
push
imul
stos
in
ljmp
inc
jl
icebp
in
pop
cld
xchg
inc
pop
sbb
inc
xchg
pop
cmc
jno
adc
sub
jbe
pop
mov
rcll
sub
sub
movsb
stc
pop
ja
pusha
stc
rcll
in
cli
cmp
mov
test
push
data16
iret
das
data16
mov
lea
fstl
dec
jnp
inc
xchg
push
xor
push
rcrb
in
or
mov
mov
pop
fcoml
xchg
pop
jnp
jo
mov
mov
addr16
or
adc
add
out
xchg
xchg
movsb
jbe
sbb
repz
bound
mov
out
aas
into
lahf
dec
imul
adc
daa
xor
bound
shr
outsb
mov
push
mov
push
inc
xor
pop
js
icebp
lock
popa
sbb
lahf
add
dec
or
inc
fcoms
xor
jnp
adc
stc
sbb
fildll
push
enter
mov
jbe
add
mov
mulb
gs
mov
or
clc
sbb
jne
pop
xchg
cmc
jp
pop
sbb
pop
dec
dec
push
fcmovnu
mov
adc
pop
test
lea
push
cmp
rcll
cs
push
sti
pop
subl
pop
enter
adc
in
in
add
jecxz
rcl
ret
jp
add
xchg
and
js
xchg
dec
in
lods
and
mov
fwait
mov
sbb
rcll
jae
fwait
les
pop
ret
mov
arpl
push
lret
and
push
lds
loope
pop
cmpsl
test
pop
stos
aam
popa
call
adc
ds
lods
sbb
leave
mov
cld
imul
and
sbb
mov
mov
or
sbb
shl
aas
jecxz
push
data16
mov
gs
xor
cmp
jo
fldenv
jle
sar
adc
clc
add
inc
inc
cmp
subb
outsl
lret
sbb
sub
rcpps
jecxz
xchg
and
push
inc
mov
mov
loop
mov
fiadds
das
lods
stc
setge
fbld
add
popa
loopne
lahf
das
rcrl
imul
mov
rclb
lahf
dec
lret
fwait
or
or
lea
mov
dec
flds
adc
cli
mov
fnsave
in
push
sub
jo
mov
push
leave
or
xchg
stc
add
in
icebp
cltd
xchg
pop
dec
mov
cmp
sbb
in
xlat
in
mov
sub
mov
and
jns
test
inc
rcrl
mov
jecxz
ret
inc
pop
and
icebp
pop
sub
inc
popl
push
fwait
lods
fwait
adc
sahf
adc
xchg
movsl
fs
mov
pop
leave
loop
ss
sbb
mov
push
jns
sub
pushf
mov
out
sub
or
push
test
loop
push
out
stos
inc
stc
cmp
push
mov
xchg
cli
sti
repz
pop
sbb
jbe
lahf
out
xchg
in
mov
mov
jne
and
push
and
jecxz
pop
gs
mul
pop
ror
adc
lods
or
fstl
fs
aad
add
mov
out
inc
inc
inc
mov
fsubrp
inc
outsb
mov
divl
dec
xor
clc
xchg
cs
insb
dec
in
mov
dec
push
mov
cmp
cmp
int3
and
cltd
fcmovnbe
xor
lock
lock
sub
mov
lcall
jno
jne
int3
fs
xor
ds
mov
jle
out
popf
and
xchg
ds
add
in
pop
sbb
mov
int
cmp
fs
sub
ror
enter
xor
cld
or
xor
inc
fmulp
lret
sbb
and
ret
jo
inc
xorb
sbb
test
jmp
fmulp
push
rclb
dec
xor
sbb
mov
shl
jl
out
xlat
pop
aas
test
mov
push
and
mov
test
out
xor
cmp
mov
scas
dec
hlt
cltd
stc
pop
push
neg
mov
sbbl
add
xchg
fwait
sbb
cmp
dec
into
mov
add
add
jnp
and
scas
xor
fmul
cmpsl
jo
test
lds
fildll
pcmpgtb
dec
pop
mov
sub
sahf
jmp
icebp
cmc
pop
push
or
jge
test
popf
daa
lahf
mov
sub
pop
sbb
xor
push
test
push
adc
dec
jg
xor
dec
or
xor
int
mov
movsl
dec
lret
and
out
add
ficoms
xor
lahf
sti
add
cmpsb
jecxz
inc
sbb
cmp
or
mov
mov
cmp
mov
or
fidivl
into
push
adc
jno
push
xor
movsb
pop
pop
fisubrl
add
in
sbb
call
xchg
lahf
inc
jne
into
mov
movsl
or
fnstsw
stc
lret
dec
jo
data16
or
pop
movsb
mov
mov
mov
ret
xor
adc
inc
lret
xchg
loop
out
sub
xor
mulb
fidivrs
pushf
jo
movsb
jecxz
mov
cmp
sbb
shrl
popa
inc
flds
pop
and
stos
jnp
fists
pop
mov
lea
jne
xor
sbb
sbb
subb
jecxz
sub
jb
add
dec
push
dec
loop
loop
adc
loop
adc
scas
rolb
dec
out
pop
mov
js
push
gs
add
push
mov
cltd
add
pop
cmp
xchg
pop
outsb
jle
adc
pop
pop
mov
push
sub
loopne
xchg
lahf
or
dec
subb
scas
fcmovnbe
mov
scas
pop
out
fcom
rcrb
into
inc
imul
popa
mov
xchg
sub
ficomps
loopne
shrb
mov
mov
cmp
inc
cs
xor
aam
jns
dec
jp
mov
sub
jo
adc
subl
sub
imul
push
in
inc
and
sub
mov
xchg
push
sub
inc
lret
pop
jnp
cmp
sub
xlat
inc
lea
iret
icebp
sub
fstl
imul
fs
sbb
idiv
mov
pusha
ret
daa
cmp
js
xlat
push
testl
xchg
xor
aaa
sti
out
ds
outsb
rorl
dec
adc
dec
dec
mov
jns
pop
push
jl
mov
inc
int3
int3
sbb
test
inc
out
pop
mov
mov
and
xchg
push
psrld
xor
out
jo
iret
sbb
mov
jmp
es
add
fidivrl
cmp
jo
ret
in
or
dec
xor
cltd
popa
xchg
xchg
test
lods
xchg
mov
sub
inc
pop
inc
push
dec
loopne
rcrb
xchg
pop
stos
and
cli
xchg
or
leave
sbb
out
inc
ret
xchg
lods
jle
mov
push
xchg
push
mov
ja
movb
mov
pop
cs
and
enter
mov
imulb
mov
jecxz
cli
xor
jecxz
cld
push
popf
jmp
xchg
nop
imul
lea
subb
jp
xchg
lcall
pop
mov
call
mov
repnz
cmpsb
ret
sbb
jns
cmp
das
pop
dec
xor
lahf
push
int
scas
mov
xchg
pop
sub
ss
rcll
dec
push
in
loope
test
jl
gs
push
add
push
add
sbb
xor
cmp
add
std
ret
push
imul
cmp
mov
xchg
or
inc
jl
jle
inc
mov
cwtl
cmp
jne
in
inc
test
pushf
sti
out
or
mov
xor
fcoms
xchg
jmp
mov
cmpsl
jb
shl
sbb
roll
movsb
les
push
mov
sub
incb
jg
aam
jecxz
jmp
sbb
call
enter
cmpsb
xor
stc
mov
lock
sbb
in
and
inc
outsl
imul
xlat
cld
cwtl
push
bound
outsb
icebp
push
aam
push
aaa
mov
in
cwtl
fwait
pushf
mov
mov
pop
pop
jle
jmp
leave
test
out
pop
pop
test
shll
jns
push
int
and
rol
jge
and
push
mov
jl
fwait
outsb
ljmp
mov
push
cmpsb
fcomps
shll
or
shll
pop
cmpsl
or
fdivs
and
scas
subl
xchg
mov
pop
or
and
enter
xchg
in
mov
xor
jmp
sub
dec
js
adc
ret
pop
sbb
mov
xchg
adc
mov
fwait
je
lret
testb
adc
orb
sbb
pop
aam
inc
pop
aam
lock
mov
pop
dec
adc
mov
insl
add
inc
xchg
pop
mov
cmp
lds
lock
fldenv
aad
pop
lds
fcmovne
lds
mul
jmp
jns
mov
sub
mov
jecxz
push
jge
rcll
xor
cld
stos
addr16
sbb
pop
lds
mov
flds
pop
dec
cmc
out
push
or
subb
jg
sub
mov
inc
mov
add
test
aaa
stos
mov
setns
mov
sbb
jb
in
xor
into
pop
add
pop
or
aam
sub
xor
xor
je
lock
popl
adc
pop
notb
and
rclb
mov
incl
in
push
sub
subl
adc
out
push
add
cltd
movsl
mov
and
and
jecxz
jno
xor
inc
mov
push
dec
popa
leave
pop
push
mov
adc
fcmovbe
sbb
push
inc
dec
dec
pop
scas
sub
mov
add
aad
pop
cmp
pop
fsubl
push
mov
mov
negl
sub
push
lods
xor
cmpsl
insl
and
ja
jae
loop
stos
js
mov
inc
pop
loopne
mov
lahf
inc
int
sub
scas
repz
out
adc
iret
sti
pushf
xchg
adc
and
mov
imull
fs
mov
mov
jbe
or
or
xchg
add
gs
jae
mov
add
in
daa
xchg
mov
out
jno
push
fwait
cmpsb
jne
stos
cld
jo
les
and
bound
nop
stc
push
mov
inc
dec
out
insl
jp
xchg
data16
and
js
imul
sbb
xor
mov
jmp
cmp
or
mov
jg
cmp
mov
mov
push
jne
sbbb
pop
inc
test
xchg
lret
push
daa
das
jae
arpl
xor
hlt
cmp
in
cmp
mov
sbb
mov
idiv
dec
test
add
jbe
lea
mov
jnp
jb
sbb
dec
xchg
loopne
ret
sahf
jne
jmp
push
push
cmpsl
inc
xor
addr16
sub
add
stos
cmpb
stc
push
outsl
mov
and
push
inc
in
mov
mov
sub
cs
int
into
leave
addb
and
jmp
fstps
jns
mov
enter
and
cmp
aas
adc
pop
shll
loopne
aaa
xchg
test
scas
repz
bound
xor
sbbb
inc
subl
aam
loopne
ljmp
ds
js
fists
jp
push
cmp
lret
sbb
sbb
scas
dec
lahf
xchg
push
outsb
xchg
dec
add
les
loope
scas
mov
adc
data16
inc
gs
cmp
jo
mov
dec
xchg
popa
xchg
jl
push
iret
lahf
dec
in
scas
arpl
xor
ficoms
insb
cmp
pop
push
jnp
lcall
imul
cld
push
lret
xchg
jnp
xor
out
push
pop
aad
pop
in
mov
fistps
or
and
sar
imul
jmp
push
pop
shl
jp
adc
adc
lds
mov
je
sub
mov
jns
xor
iret
push
and
insb
xor
lods
loop
mov
mov
mov
jno
jmp
cmp
pop
ret
dec
pusha
sub
int3
arpl
out
sbb
jbe
insl
or
or
nop
cli
xlat
loop
sub
lahf
mov
insl
or
jno
cmc
nop
xor
test
lock
sub
pop
add
xchg
